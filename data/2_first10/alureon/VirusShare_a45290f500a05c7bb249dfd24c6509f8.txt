fldenv
out
imul
in
push
clc
jl
insl
out
rcll
rcrl
xor
insl
movsb
sti
push
add
mov
dec
xor
jnp
ja
bound
mov
or
dec
outsl
scas
add
stos
mov
push
push
lods
lret
jg
jmp
mov
xor
mov
jb
and
sub
add
mov
fstpt
add
test
add
negb
inc
fistps
xchg
stos
idiv
sbb
sub
xorb
or
mov
cmp
and
loop
push
mov
arpl
inc
out
loop
xor
push
sub
fistpll
inc
jno
hlt
pushf
mov
pusha
jmp
and
nopl
sbb
dec
pop
dec
push
stc
test
loopne
and
ret
push
push
xor
test
movb
mov
dec
mov
ljmp
das
frstor
sub
imul
mov
add
testb
loopne
add
jp
and
and
or
int
pop
push
mov
cmp
cwtl
sbbl
dec
fwait
imul
jbe
stos
pop
adc
sahf
xor
data16
inc
pop
scas
sbb
ret
mov
dec
add
ficomps
je
into
or
test
imul
adc
mov
lock
addr16
lods
lock
sbb
sbb
lahf
je
dec
add
jae,pn
in
mov
lods
data16
sub
popa
adc
mov
ja
iret
xchg
stos
outsb
scas
cmp
aad
dec
movsl
fidivs
movsl
decl
mov
push
andl
add
mov
fdivrp
add
sbb
in
dec
push
shrb
inc
mov
mov
mov
out
xchg
pop
xor
out
std
push
mov
data16
imul
xlat
cmpsb
out
cltd
xor
icebp
shll
mov
lret
fldl
cmpb
cwtl
xchg
lea
adc
inc
sbb
sbb
gs
imul
push
or
sbb
fidivs
jbe
ljmp
xchg
pop
pop
mov
pop
adc
lret
mov
ljmp
icebp
fldt
push
cltd
push
data16
jbe
xor
push
aam
testl
fimull
pop
and
add
pop
sbb
lods
cli
cmp
pop
in
mov
cmc
lretw
or
sub
std
scas
lcall
xchg
dec
out
mov
sbb
lahf
mov
and
jae
flds
test
push
xchg
xor
ds
cmpl
mov
mov
aaa
pop
pusha
addr16
stos
mov
addb
test
mov
and
fistl
pop
push
insl
push
movsl
sarl
or
dec
or
inc
repnz
outsb
mov
add
pusha
dec
cmp
dec
inc
jmp
cmpsb
repnz
pop
mov
pop
adc
sbb
jae
sub
les
lea
into
movsb
sbb
inc
mov
mov
shrb
or
gs
adc
repz
pop
lds
test
dec
or
or
sar
xchg
jbe
sbb
int3
icebp
lock
cmpsb
cmp
loope
jae
shrl
pop
sbbl
dec
leave
decl
pop
imul
fistl
cmc
pushl
ss
jo
test
mov
mov
pop
mov
in
inc
or
es
out
rcll
sbb
lcall
mov
int3
xchg
mov
lcall
addr16
out
and
enter
xor
push
dec
scas
xchg
push
xchg
rcll
mov
fnstsw
or
cmc
das
jns
cmpsb
sbb
cmp
ljmp
mov
fstpt
cli
lea
fmuls
push
int3
jmp
sub
bound
mov
cmp
jp
ljmp
int
cmc
cmp
add
mov
in
lret
push
test
into
pop
aam
test
gs
inc
mov
and
xor
mov
sbb
cmc
call
popa
push
dec
add
pop
ficomps
cmc
into
in
mov
scas
stc
xlat
mov
pop
or
std
mov
ret
jnp
aas
or
xor
adc
push
imul
lea
mov
aam
ja
push
and
mov
and
movsl
repnz
ss
and
lret
or
xor
xorb
mov
aas
mov
pop
xchg
lds
cmpsb
adc
pop
push
les
mov
xchg
jb
cld
inc
xor
xchg
push
jmp
xchg
shrb
mov
out
aad
scas
enter
jl
jns
adc
mov
inc
or
testb
pop
adc
inc
fmul
mov
ljmp
sbb
rsqrtps
outsl
dec
aam
sbb
or
sbb
es
and
sub
xlat
jge
je
arpl
jl
out
daa
data16
push
xchg
inc
fcoml
aam
or
rcll
cltd
dec
sub
fisubrs
sti
jecxz
mov
nop
enter
cmp
rcrb
or
shl
mov
sbb
push
sarb
sbb
aas
test
test
mov
and
xor
cmpsb
stc
jmp
push
jno
dec
push
sti
nop
xor
dec
sub
xchg
loopne
inc
mov
mov
faddl
mov
loope
das
mov
mov
jmp
inc
call
adcl
cltd
jle
testl
popl
add
sbb
popa
adc
push
rorb
push
inc
sti
in
sbb
jo
xor
cmp
aaa
sub
nop
or
jmp
pop
nop
pop
lods
mov
jns
mov
filds
mov
lea
movsb
mov
xchg
stos
ljmp
mov
sub
call
dec
imul
call
mov
push
mov
call
add
mov
and
movzwl
or
lea
call
dec
inc
dec
inc
dec
mov
add
lea
mov
add
dec
lea
add
dec
call
mov
add
sub
lea
imul
call
sub
mov
call
mov
and
imul
mov
sub
and
lea
dec
mov
pop
lea
mov
sub
add
or
pop
mov
inc
pop
movswl
inc
mov
add
pop
xor
add
mov
lea
dec
inc
imul
mov
pop
mov
mov
pop
xor
dec
mov
imul
movsbl
call
imul
dec
lea
or
ret
mov
or
push
inc
lea
push
mov
mov
push
movswl
lea
push
mov
imul
push
inc
movsbl
mov
add
and
push
dec
ret
push
mov
sub
imul
inc
imul
dec
push
mov
movzbl
and
call
pop
ret
jmp
inc
movzbl
inc
mov
add
imul
mov
and
movswl
add
movzbl
add
mov
xchg
dec
add
sub
movswl
xor
mov
inc
dec
imul
inc
movzwl
sub
dec
jne
mov
mov
mov
add
pop
imul
add
pop
dec
dec
pop
dec
dec
add
lea
sub
inc
dec
mov
inc
imul
dec
add
ret
push
push
xor
inc
push
add
inc
add
sub
mov
mov
push
lea
mov
or
mov
push
add
add
dec
mov
dec
inc
dec
push
dec
mov
inc
push
add
and
xor
or
dec
push
add
mov
push
mov
inc
pushl
inc
call
inc
add
mov
dec
inc
imul
mov
xor
dec
pop
ret
add
add
inc
add
xor
mov
movsbl
sub
or
inc
cmp
jb
lea
xor
dec
inc
mov
dec
mov
mov
inc
lea
inc
inc
movswl
lea
dec
mov
add
inc
cmp
jb
dec
pop
add
mov
dec
lea
inc
add
sub
dec
imul
sub
dec
inc
xor
add
inc
xor
inc
mov
dec
sub
test
jbe
inc
mov
inc
lea
lea
inc
mov
add
dec
add
dec
add
and
dec
movzwl
mov
dec
movzbl
add
sub
add
xor
dec
and
lea
mov
mov
mov
add
mov
inc
inc
mov
mov
mov
mov
lea
dec
and
mov
mov
imul
dec
jne
dec
mov
xor
dec
imul
movsbl
xor
dec
inc
or
mov
mov
mov
add
movswl
and
lea
inc
dec
add
mov
or
dec
test
jbe
mov
sub
sub
imul
mov
movsbl
dec
mov
inc
mov
or
dec
add
xor
add
inc
inc
add
add
dec
dec
mov
and
dec
mov
mov
mov
sub
movzbl
inc
inc
add
inc
mov
and
mov
mov
mov
mov
mov
movzbl
add
dec
mov
mov
movzbl
mov
inc
jmp
push
add
lea
add
dec
and
mov
dec
dec
mov
sub
add
xor
add
movzbl
xor
imul
add
imul
mov
or
lea
mov
dec
add
mov
movzwl
movsbl
add
lea
inc
lea
lea
or
imul
sub
and
mov
lea
dec
cmp
je
add
and
dec
push
mov
mov
movzwl
add
inc
mov
or
sub
imul
lea
mov
mov
imul
inc
lea
mov
mov
inc
mov
dec
lea
mov
mov
mov
dec
add
mov
add
movsbl
dec
dec
mov
add
add
sub
call
call
or
xor
dec
lea
mov
xor
lea
ret
sub
mov
pop
lea
ret
push
mov
dec
mov
mov
xor
push
inc
movswl
push
or
push
sub
push
and
imul
xor
or
mov
call
dec
push
inc
dec
xor
lea
sub
or
neg
lea
add
add
lea
dec
lea
mov
inc
lea
mov
mov
xor
inc
sub
mov
dec
je
mov
mov
add
mov
dec
mov
mov
inc
jmp
lea
inc
inc
repnz
mov
and
add
lea
jmp
inc
movzbl
inc
dec
inc
inc
lea
lea
add
sub
inc
mov
mov
mov
imul
imul
pop
pop
ret
push
movsbl
dec
lea
movsbl
mov
movzwl
mov
imul
mov
lea
imul
add
and
dec
lea
mov
add
mov
and
inc
mov
lea
inc
sub
movzwl
movswl
pop
ret
sub
dec
mov
lea
inc
mov
mov
lea
mov
mov
xor
mov
dec
add
xor
mov
dec
mov
add
inc
inc
inc
dec
add
dec
movswl
add
cmp
jb
add
push
lea
mov
push
mov
inc
push
sub
inc
xor
dec
movswl
xor
mov
xor
xor
mov
lea
push
mov
dec
mov
mov
add
xor
xor
mov
mov
imul
mov
movzbl
dec
dec
add
or
mov
add
dec
xor
movzbl
and
mov
jmp
in
mov
push
or
insb
sub
cli
mov
add
jno
int3
jno
test
lret
mov
mov
cli
cmpsb
push
jge
cmp
inc
jp
aad
je
push
aam
push
mov
imulb
loope
xchg
outsb
mov
cmp
imull
unpckhps
lret
push
jge
aam
xlat
inc
adc
mov
insl
movsl
and
ljmp
mov
in
mov
popl
xor
xchg
popf
mov
add
mov
or
sbb
jb
xchg
mov
add
push
je
lock
push
mov
mov
enter
cltd
mov
xchg
mov
pop
or
roll
xor
aaa
sbb
sub
mov
insl
lea
or
sub
mov
hlt
fwait
sbb
out
or
cmc
in
scas
sub
das
dec
rclb
into
sbb
divb
mov
jo
int3
mov
xor
arpl
sti
pop
xlat
push
les
mov
mov
scas
mov
clc
sbbb
vpcmpgtb
dec
stos
out
jmp
add
fnstenv
jo
icebp
aaa
or
fistpl
pop
push
fpatan
fisttpll
repz
xor
sbbb
inc
jb
in
mov
enter
jp
jg
mov
movsl
icebp
push
mov
add
mov
pop
cli
pop
scas
inc
ljmp
pop
adc
ja
adc
jle
mov
sub
aam
add
call
cmp
xchg
in
or
rcr
xchg
jno
xor
nop
pop
or
out
mov
shll
sub
out
lods
cmp
rol
xchg
mov
in
popa
and
push
jg
dec
jl
leave
cwtl
inc
dec
dec
es
movsb
xor
clc
sahf
xchg
inc
push
and
or
mov
icebp
imul
dec
je
push
xchg
or
xchg
sarl
lea
movsl
lahf
push
inc
shll
test
andb
cmp
sbb
out
ja
mov
add
mov
pop
xlat
push
std
loopne
xchg
or
ret
jecxz
test
ret
mov
lahf
loop
adc
repz
icebp
leave
loope
insb
cmp
mov
jnp
and
outsl
test
iret
jne
fwait
scas
mov
loopne
lea
cmp
ficompl
repz
sub
or
enter
repz
mov
sub
pusha
mov
data16
popa
sub
cmp
shlb
cmp
cli
stos
sub
int3
cli
xchg
shrb
out
aaa
pop
mov
or
cmp
dec
adc
jl
mov
scas
mov
push
test
popa
push
push
dec
out
cmp
mov
jl
je
sub
test
fwait
ljmp
jae
mulb
cmc
cmp
das
jo
inc
std
push
pop
sub
in
sbb
cli
adc
mov
xchg
pusha
out
mov
adc
pop
push
fisttpll
jnp
push
into
mov
sti
ljmp
pop
jp
adc
shll
pop
sbbl
and
pop
and
xor
aaa
leave
mov
mov
lret
xor
add
xchg
into
pushf
fwait
pop
push
push
xchg
sub
push
jne
je
and
mov
xor
mov
fcmovb
push
jle
dec
sbb
mov
inc
shrb
lods
xchg
sbb
jns
loopne
dec
or
sarb
fmull
sub
int
repz
nop
into
xchg
rcr
sub
and
cmpsb
stos
push
adc
test
bound
inc
mov
inc
pop
fisubrl
xchg
jg
call
out
jecxz
scas
cmpsl
mov
call
xacquire
rolb
mov
sbb
mov
les
testl
and
in
and
arpl
lods
addl
inc
filds
decl
cmovbe
es
aaa
pushl
mov
jecxz
or
adc
xchg
ja
cmpl
mov
mov
sbb
ja
xchg
or
roll
imul
aam
ja
inc
dec
iret
mov
clc
fists
and
jge
mov
inc
std
arpl
shrd
aas
mov
sbb
and
sbb
pop
push
xchg
aam
jl
xchg
push
in
mov
mov
mov
addl
mov
dec
xor
push
lods
aad
cwtl
mov
iret
rcr
sbb
pop
pop
sub
das
adcl
dec
dec
jbe
je
mov
or
xor
cmp
mov
push
cmp
mov
mov
sahf
mov
add
or
add
repnz
aas
in
push
sub
mov
mov
stc
sub
jo
test
mov
les
js
xchg
dec
int
loopne
lods
nop
std
popf
lret
dec
scas
fistpl
mov
mov
ret
stos
fiadds
lea
push
mov
out
aas
inc
mov
flds
xor
das
inc
sti
fidivrs
mov
xchg
les
ds
cli
sub
subb
lcall
sub
mov
cli
lea
sbb
repz
dec
mov
push
addr16
daa
lcall
mov
aam
sbb
jecxz
add
add
mov
add
clc
pop
loop
roll
fisubrs
sub
push
aad
mov
sbb
mov
mov
in
in
in
fnstenv
inc
jne
jbe
add
xchg
adc
cmpsb
and
mov
incl
and
xchg
or
jmp
scas
mov
imul
adc
fs
xor
call
inc
or
lret
xor
ss
xchg
outsl
push
dec
popf
repnz
xchg
jge
xchg
repz
sbb
lods
xor
xor
xor
mov
and
cmp
test
push
dec
lods
test
mov
push
mov
rcrl
mov
xchg
outsl
lcall
fldl
adc
cmp
cli
shll
int
cmpsl
xchg
sub
bound
fisubrs
stos
repnz
rorb
mulb
lods
adc
leave
jp
into
jl
mov
mov
mov
fwait
mov
mov
mov
imul
add
mov
push
popf
jmp
je
test
rolb
ret
cmp
cs
test
pop
repz
repnz
sti
movsl
xchg
mov
push
xor
aad
dec
cmp
and
mov
lods
dec
adc
jae
popa
mov
lret
cmp
push
inc
or
mov
lret
push
adc
fcmovb
data16
paddsb
nop
movsb
not
rolb
fwait
sub
fadd
mov
ljmp
int3
aas
enter
das
mov
and
sub
add
jns,pn
jno
aad
ljmp
movsb
bound
call
pushf
test
dec
ds
or
adc
and
test
jbe
movl
insb
arpl
fdivp
pop
testb
in
sub
xchg
rolb
inc
jge
xchg
aad
mov
into
jbe
rcrl
and
les
leave
int3
sbb
insb
or
lret
cmp
cwtl
mov
into
fwait
mov
cmp
stos
lret
inc
push
xchg
adc
add
cmp
push
jmp
enter
sub
jns
inc
ret
push
loopne
out
cwtl
cmp
sbb
roll
aad
daa
lret
les
inc
xchg
xchg
jle
cmp
shlb
xchg
int3
out
enter
test
inc
xor
icebp
sub
out
push
mov
jae
xor
inc
inc
out
test
pop
mov
push
cli
fwait
mov
dec
fsubrl
push
call
sub
sbb
adc
push
cmp
xor
in
sbbb
inc
mov
ljmp
outsb
les
es
pusha
addr16
mov
xor
fcoml
mov
into
mov
insb
sbbl
pop
adc
mov
mov
std
jge
in
sbb
xchg
fists
and
push
rolb
das
or
loopne
jl
popa
jge
cmc
mov
jge
sbb
inc
mov
popa
int
sub
scas
rcrl
sbb
cmp
aas
add
iret
sub
cmpsl
outsb
mov
push
std
xor
sub
pop
push
inc
insl
dec
pop
or
pop
inc
adc
clc
js
jecxz,pt
jnp
inc
inc
fmulp
push
pop
jbe
sbbl
in
push
push
or
mov
pop
cmp
enter
mov
xchg
and
shlb
jge
adc
add
jmp
pop
rol
adc
add
mov
add
dec
lods
push
repnz
aas
sbb
jp
les
xor
xor
xchg
out
fisubrs
cmp
add
push
test
loop
dec
cmc
scas
jb
shlb
cmpsl
push
push
mov
sbb
pop
cmpsb
dec
add
xchg
mov
pop
out
repz
mov
push
movsb
fstpl
repnz
fsubrp
add
ret
inc
xor
sbb
lret
xchg
jle
aam
or
scas
ss
lret
data16
imul
stos
jno
je
sbb
pop
out
cmp
and
lods
and
or
lock
dec
push
mov
inc
mov
pop
mov
iret
jp
jl
cld
push
in
dec
pop
dec
lods
fwait
ljmp
dec
jae
repnz
add
push
mov
cmc
fcomps
aam
push
mov
mov
insl
jge
mov
shr
data16
std
shrb
orl
loope
pop
xor
hlt
insb
shrl
movsb
cmp
test
mov
daa
xlat
lock
out
add
mov
sub
ficomps
scas
repz
cmpsb
add
and
scas
pop
dec
push
mov
xor
cmp
push
fdivrs
adc
int3
pop
scas
xor
hlt
out
out
pop
sub
jmp
hlt
jb
pop
lcall
push
iret
mov
inc
sti
push
adc
enter
sub
mov
cmp
popf
into
cltd
sar
and
in
jo
out
add
jo
xchg
lds
clc
add
mov
stc
mov
stc
lret
and
rolb
push
je
les
pop
lods
aam
int
loopne
jl
loope
push
int
mov
xchg
fstp
xchg
mov
sub
mov
loope
mov
jp
jle
imull
push
rcll
daa
and
xor
pop
xorb
shll
aad
nop
pushf
jnp
dec
outsb
jno
mov
arpl
lock
xchg
test
scas
xchg
shrl
shlb
adc
cmp
fidivl
pop
sbb
test
push
or
mov
mov
call
lods
or
mov
push
inc
dec
aam
mov
andb
push
scas
out
and
or
ret
sub
adc
add
cmc
jmp
test
inc
adc
popa
outsb
cmp
ljmp
add
in
push
sub
repz
mov
xor
pusha
jns
std
out
dec
jge
rorl
jns
or
mov
sbb
push
ljmp
pop
sbb
pusha
cmp
push
push
pusha
pop
or
lahf
mov
roll
shl
adc
jne
ret
xchg
push
lcall
mov
sbb
lea
jb
mov
pop
dec
jge
fistps
mov
add
arpl
mov
xor
jnp
or
add
mov
call
mov
add
push
addr16
std
mov
cmp
lret
idivb
aad
fistps
popf
test
mov
jge
lods
mov
cltd
mov
xor
jle
fidivrs
movsl
xchg
cmp
fisttpll
notl
push
ficomps
addr16
mov
add
mov
std
jno
stc
shll
enter
xchg
or
xchg
jno
mov
fdivl
ficoms
inc
push
and
push
and
xor
xor
scas
inc
dec
int3
cmp
mov
lcall
aas
insb
movsl
orl
mov
cmp
push
ret
mov
inc
loop
lahf
rcrb
cmp
xor
shr
jo
mov
xchg
xchg
jmp
ss
leave
cmp
enterw
adc
cmp
sbb
pop
je
mov
int
pop
test
adc
jmp
pop
jle
fnsave
test
enter
ja
jo
dec
add
roll
test
cltd
cmc
movsb
adc
repz
ljmp
push
push
cmp
movsl
mov
jo
lret
sbb
aam
sbb
outsb
push
jns
lea
aas
repz
lret
inc
dec
inc
xor
roll
lods
jmp
mov
or
movsl
stos
cmp
dec
stos
inc
lahf
imull
enter
push
mov
popa
add
fistpl
pusha
inc
sbb
add
fsubrs
scas
jmp
dec
mov
in
pop
inc
inc
dec
xchg
xchg
jo
mov
adc
jp
lods
call
mov
lock
push
adc
bnd
pop
add
adc
and
mov
lods
or
nop
adc
mov
in
dec
test
push
jmp
jae
xchg
scas
out
jmp
and
roll
dec
or
push
out
inc
push
cmp
movntq
dec
jne
test
insl
imul
fcomip
sbb
rcrb
push
mov
jne
jb
mov
add
mov
jl
sti
cmp
mov
aam
leave
jno
inc
and
test
cmp
jbe
mov
rcll
mov
test
out
pop
cmp
push
rorb
dec
mov
mov
shlb
cwtl
subb
hlt
scas
lret
outsl
mov
dec
sbb
bound
push
pslld
inc
jecxz
push
arpl
lcall
out
repnz
sbb
fisttpl
sub
ss
movsb
pop
xor
mov
xchg
push
imulb
aad
cmp
jo
dec
call
push
in
scas
add
arpl
lcall
inc
or
pop
fmuls
int
push
insl
js
xchg
add
push
pop
imull
outsb
mov
hlt
lds
and
sbb
mov
cmc
add
fisttpl
test
into
rol
or
ljmp
pop
ret
mov
adc
add
nop
mov
dec
dec
das
imul
outsl
dec
jno
in
or
add
inc
and
scas
stos
les
mov
movsl
and
jp
cwtl
mov
in
imul
gs
out
pop
int
mov
mov
leave
or
ds
xchg
std
push
mov
and
cmp
lea
divb
out
js
in
ljmp
xor
jmp
push
xorl
cmpsb
icebp
dec
addr16
add
pop
or
mov
jl
rorl
stos
imul
inc
lahf
int
enter
bound
adc
enter
mov
jl
std
adc
lock
mov
or
std
dec
mov
rorb
pop
fisttpl
pop
mov
sbb
int
lods
sub
mov
aam
in
insl
imull
pushl
std
pop
insl
push
and
push
pop
mov
cmp
lcall
add
cmp
outsb
iret
faddl
dec
dec
fidivl
sarb
jp
or
xor
xchg
adc
scas
ret
fucom
rol
loopne
icebp
mov
scas
addr16
data16
int3
xchg
mov
into
inc
sbb
ret
mov
int3
add
adc
aaa
das
cltd
int
dec
arpl
push
data16
mov
movups
mov
or
mov
in
pop
mov
int
and
rcrb
fsub
push
fdivrs
les
sahf
icebp
mov
notb
das
das
int3
inc
cld
xchg
sbb
je
jmp
stc
cmc
pop
dec
sub
mov
les
stos
into
xor
mov
xor
or
data16
sbb
dec
sbb
in
jg
dec
cmp
jnp
jo
stos
leave
or
jnp
call
add
mov
fld
negl
mov
cmpsb
test
jb
jbe
in
push
arpl
sti
je
stc
fstpt
dec
fs
mov
ja
outsl
and
iret
xchg
sti
fnstcw
leave
fcmove
xchg
lret
jge
sub
add
or
es
mov
loope
shll
pop
pusha
mov
jbe
or
cmp
xor
pusha
xchg
add
inc
hlt
pop
ja
or
test
xchg
es
push
add
movsl
mov
pop
lea
xlat
scas
mov
push
sahf
sbb
mov
lahf
fimuls
push
mov
push
pop
test
popf
orl
movsl
add
repnz
or
mov
mov
pop
inc
sbb
ja
shrb
cltd
inc
jge
daa
push
das
sbb
int
jge
mov
and
insb
dec
lret
push
and
jo
clc
add
pop
shl
hlt
outsb
jecxz
and
lret
pop
imul
lea
out
jb
test
xchg
and
popa
orl
dec
inc
popa
cmp
pusha
sarl
outsb
push
fcompp
sbb
mov
aaa
lcall
jb
lds
push
outsl
ds
and
mov
mov
ret
rcrb
jo
jne
mov
inc
cmp
imul
mov
test
mov
or
dec
lcall
mov
test
mov
scas
inc
pushf
jb
movsl
orb
sti
mov
push
mov
mov
sti
stos
loopne
shl
and
xchg
shll
add
mul
and
call
cmpsb
pusha
jg
sub
push
mov
aam
test
insb
mov
jns
jb
je
int3
or
inc
push
inc
fcmovb
cmp
inc
xor
mov
je
jbe
adc
cmp
or
xchg
add
xor
sub
add
jle
xchg
or
mov
das
sbb
movb
sub
out
aam
push
inc
aas
mov
jnp
or
ficoml
idivl
outsl
jne
cmp
aaa
and
adc
into
jecxz
aaa
sub
pop
shl
scas
int
or
mov
add
ds
rcrl
and
dec
fistl
jl
lock
clc
es
or
add
cmc
mov
push
in
movsl
xlat
dec
cmp
pop
in
xchg
std
repnz
stc
adc
dec
ffree
arpl
cmp
adc
les
adc
stos
shll
dec
mov
xchg
push
and
pop
cld
ficoms
andl
mov
xchg
adc
movsb
jo
jno
push
xchg
pop
pushf
jecxz
cs
jb
xchg
cs
ror
xchg
cmc
std
aad
xchg
pop
or
idivb
lret
xor
pop
xor
push
sbb
int
pop
add
pop
cwtl
inc
jle
cmp
dec
mov
xor
inc
bound
pop
adc
movsl
sbb
or
add
mov
cmp
fisttps
or
ja
cmp
ret
cmp
add
call
lods
enter
mov
outsl
or
clc
in
sub
icebp
outsl
in
lock
test
pushf
adc
pushf
xchg
mov
push
inc
ljmp
push
mov
pop
sti
cltd
mov
repz
lret
rcrb
pop
lock
fiadds
loop
cmpsb
jmp
sti
out
cli
inc
sbb
addr16
arpl
lea
int
cwtl
mov
je
sbb
dec
fs
sub
loop
rclb
js
push
jns
in
jbe
ret
inc
pusha
dec
outsl
in
xlat
jg
into
leave
cmpsb
dec
mov
int
subb
mov
rorl
orb
mov
fistpll
jge
xor
lahf
inc
cltd
fdivrs
xchg
lods
push
popf
xor
mov
sbbb
je
and
cwtl
sahf
mov
dec
cmpsb
es
movsl
imul
cltd
add
mov
mov
pop
push
cli
mov
cwtl
pop
hlt
mov
out
mov
fbstp
ljmp
mov
mov
inc
xor
fs
repnz
les
aaa
in
add
or
mov
test
push
push
xor
or
sub
call
test
in
cmp
push
sbbl
or
mov
test
rcrl
or
or
sbb
ror
das
cmp
sbb
mov
sub
jae
lock
push
insb
mov
mov
clc
fisubrs
daa
sarl
inc
sub
lcall
imul
jns
sbb
test
add
adc
ret
gs
jl
push
sub
inc
jb
ljmp
mov
mov
stos
mov
clc
enter
sbb
shll
push
jge
sub
adc
adc
test
repz
aas
lret
test
mov
outsl
sub
cmp
jo
xchg
test
movsl
jle
in
dec
ljmp
aad
jp
or
repnz
in
loopne
in
mov
mov
testb
das
aaa
add
inc
out
xor
pusha
aaa
adc
insb
xchg
fadds
call
inc
lods
das
js
cmpsb
jne
push
push
sti
mov
or
mov
sbb
xchg
sub
xchg
mov
push
pop
add
jnp
outsl
ret
mov
push
inc
ljmp
into
jno
xor
das
or
adc
mov
jo
cld
mov
inc
lcall
inc
adc
cli
mov
sbb
imul
xor
sarb
xor
out
xlat
arpl
pop
pop
fstpl
add
adc
mov
loopne
fidivl
js
inc
testl
in
lds
cmp
dec
xor
cli
loop
mov
xchg
mov
and
sbb
negl
shlb
lret
cwtl
icebp
push
mov
or
fsubrs
repz
push
andb
imul
push
adc
mov
iret
loopne
or
add
icebp
mov
ljmp
lock
lcall
repnz
cmpsb
lret
insb
or
inc
adc
dec
inc
ret
mov
push
jns
outsl
xor
stos
popa
out
mov
std
orl
daa
imul
jb
sti
xchg
cmc
dec
mov
leave
xchg
lods
lea
lods
rolb
gs
pop
or
or
push
addr16
lods
xor
jbe
ljmp
pop
or
inc
jmp
ds
rorb
outsb
clc
pop
xchg
ret
les
pusha
sbb
or
jl
cmpsb
mov
fwait
dec
fimuls
cmpsb
mov
iret
jp
adc
jnp
pop
pop
daa
cwtl
insw
lcall
inc
inc
xchg
xabort
push
mov
pop
adc
sbb
xchg
or
jne
xlat
data16
daa
outsb
mov
inc
ljmp
insb
xlat
adc
pop
lds
stos
push
or
push
in
pop
popa
cld
sbb
dec
adc
sub
loope
stc
xor
inc
push
lea
insb
mov
push
leave
xchg
push
test
mov
add
pop
jge
stos
jo
xor
and
in
daa
daa
jne
imul
push
mov
and
std
or
ffreep
out
jp
inc
inc
dec
addl
xor
gs
fidivrs
sub
sbb
mov
scas
test
test
arpl
xor
hlt
push
pop
idiv
lcall
add
jb
sub
mov
out
xor
lahf
test
mov
and
aam
dec
insl
sub
and
aad
dec
or
shl
jle
lock
jecxz
dec
pushf
sbb
xchg
jbe
mov
ljmp
daa
testl
mov
mov
stc
mov
jb
out
int3
aam
jmp
jp
jns
push
dec
mov
dec
add
xchg
sbb
push
xchg
out
mov
xchg
sub
cld
bound
stc
pop
test
mov
mov
jg
mov
jno
in
push
dec
pop
popf
hlt
sbb
call
jg
jg
mov
frstor
cli
lret
clc
ds
mov
call
push
in
enter
push
mov
lock
xchg
fbstp
sbb
stos
test
into
xchg
std
push
aad
fsubrs
adc
pop
mov
into
je
pusha
sub
xchg
mov
aas
daa
les
add
mov
lahf
inc
add
cmp
jp
adc
lds
xlat
inc
pushf
dec
jmp
cs
or
nop
sub
popl
sbb
mov
aad
mov
dec
in
testb
fsubrl
cli
lods
mulb
addr16
sub
in
fs
imul
xor
addl
mov
xchg
lods
roll
adc
cs
dec
in
cmc
xor
stc
rcr
jge
and
sub
jnp
hlt
sbb
fdivrs
xor
xchg
add
xchg
and
xchg
pusha
inc
jge
mov
inc
jne
les
fwait
xchg
xor
fisubs
cmp
out
cwtl
adc
dec
push
sub
orl
sbb
cmp
cmc
cmp
jmp
rcrl
mov
mov
mov
mov
pop
lahf
add
add
xchg
adc
loop
subb
aaa
ljmp
fstpl
mov
sbb
mov
xchg
mov
pusha
js
pop
imul
mov
and
clc
int
xchg
in
sbbb
pop
mov
mov
mov
mov
xchg
push
dec
xchg
adc
xchg
setae
arpl
in
iret
scas
notl
and
xchg
dec
or
dec
mov
pushf
mov
mov
inc
pop
cmp
pop
scas
mov
jp
xchg
out
iret
and
xchg
adc
adc
aam
push
pusha
and
xchg
sti
mov
arpl
insl
test
mov
lret
inc
mov
sub
adc
arpl
cmc
mov
mov
aam
ss
jns
xchg
xchg
xor
pop
adc
jle
inc
sbb
xchg
ss
andb
inc
push
push
push
in
or
sbb
xor
test
xchg
pop
fnstenv
adc
mov
rcl
dec
data16
lock
shlb
cmp
inc
push
insl
push
int3
jecxz
sbb
je
addb
loop
adc
jnp
mov
lahf
push
ret
jne
std
das
jns
das
jbe
lahf
xchg
stc
inc
cmpsl
cli
cmc
jp
pop
xchg
je
jle
fs
sahf
test
push
and
in
inc
xlat
pop
and
xchg
pushf
sbb
cs
outsl
mov
shlb
in
sarl
imul
mov
xchg
add
cltd
cmc
xchg
movaps
bound
xor
das
bound
pop
pop
adc
or
lods
push
pop
push
jecxz
sub
adc
dec
lcall
dec
pusha
aad
stos
jne
jne
insb
aam
pushf
adc
mov
pop
and
pop
jmp
iret
push
push
xlat
jne
adc
xorb
sarb
mov
popa
sbb
mov
negb
mov
add
popl
jae
mov
rolb
jmp
xchg
push
xor
mov
dec
mov
pushf
inc
sbb
repz
dec
stos
and
shll
or
rcrl
and
dec
add
jp
scas
out
bound
mov
pop
and
jg
xor
test
or
xor
cld
std
nop
out
stc
push
cmp
mov
push
xchg
outsl
pusha
sub
push
int
fidivl
lea
and
mov
mov
push
mov
cli
popf
push
mov
enter
dec
sbb
sbb
out
push
ds
add
or
test
ror
xor
inc
adc
dec
sarl
add
dec
loop
and
push
sbb
cs
cmp
jg
lret
pop
fsts
xor
add
fs
xor
clc
adc
adc
xchg
insb
sub
inc
in
xchg
gs
fwait
popf
sti
push
iret
pusha
pop
in
sbb
mov
pmaxub
jmp
daa
jnp
mov
mov
mov
dec
mov
movsl
mov
adc
daa
or
add
aaa
cwtl
fildl
adc
fsubrl
mov
xor
leave
scas
call
inc
cmp
mov
nop
push
cmp
mov
lock
shrl
mov
test
lds
mov
xor
leave
sarb
jns
or
pop
add
shrb
movsl
test
cmp
std
lret
out
insl
push
lret
into
int
addr16
je
cmp
adc
in
adc
stos
mov
inc
inc
fisttps
iret
nop
mov
out
fwait
push
jmp
test
fdivr
jge
fldt
cs
lea
push
xchg
icebp
lcall
in
push
aaa
fs
roll
add
push
and
movl
jne
or
push
sbb
lea
jmp
loopne
and
sarl
dec
jp
or
cmp
mov
fwait
mov
xor
pop
dec
mov
in
pop
or
jnp
testb
or
adc
loope
dec
imul
xlat
div
pop
adcb
cmpsl
loopne
mov
fninit
inc
data16
push
sbb
jp
cmc
jl
mov
wrmsr
rorl
pop
in
mov
outsb
movsl
out
push
push
popf
nop
stos
adcb
sub
das
nop
cmpsb
pusha
stc
xchg
aam
inc
mov
bound
fwait
mov
push
adc
push
sub
ss
into
mov
in
stos
jmp
dec
or
sub
and
pop
imul
scas
mov
dec
notb
and
sbb
or
dec
cs
mov
cmp
push
repnz
xchg
stos
inc
jge
std
mov
sar
pop
repz
inc
lods
divl
ret
cmp
enter
xchg
mov
mov
sub
xor
cmp
in
cmp
loopne
fs
sub
cmc
in
xor
or
pusha
dec
imul
aam
mov
cmp
xor
add
adc
pop
and
inc
lret
dec
fsubr
lock
mov
mov
loope
push
rcrl
add
movsl
es
out
mov
fcomi
iret
lods
shll
into
jns
cmp
sbb
cmpsl
out
cmp
jmp
cmpsb
xchg
pop
shll
dec
and
mov
xor
inc
std
out
enter
testb
mov
jecxz
out
mov
pop
sbb
mov
xlat
div
mov
aad
xchg
std
imul
xor
scas
daa
xor
mov
mov
push
aaa
xchg
push
movsl
aas
adc
ret
push
dec
pop
sub
mov
fldt
icebp
fdivl
rcrl
loop
jg
push
in
fwait
add
and
pop
out
and
idivb
cs
ss
imul
out
aad
pop
pop
addl
add
inc
xor
cli
arpl
dec
fcoms
and
inc
mov
push
pop
outsl
jnp
jg
mov
mov
jo
leave
pop
fwait
push
rclb
in
jno
inc
mov
fists
inc
aaa
test
outsb
push
inc
xchg
scas
cmp
sub
cmp
lret
push
mov
loopne
jl
cmpsl
pop
rol
out
test
mov
outsb
inc
dec
inc
jl
cs
popa
or
mov
pop
aas
in
lret
push
sub
mov
cmpsb
jo
out
inc
orl
cmp
divl
cmpsl
out
out
inc
pop
mov
aad
arpl
mov
repnz
xchg
pop
dec
cmc
jl
jnp
cmpsb
daa
xor
fistpll
and
hlt
dec
add
in
fidivl
add
or
fmull
push
xchg
adc
out
add
in
test
inc
cltd
mov
and
rol
pop
lret
fpatan
addr16
in
add
stos
mov
enter
les
scas
mov
leave
jno
shlb
adc
rorb
push
sub
shrl
mov
cmp
inc
jbe
ret
dec
mov
cld
test
outsl
xorl
xchg
stc
lock
ja
icebp
aad
jecxz
popf
lds
pop
cmpsl
pop
rorb
repnz
out
lds
es
arpl
test
popa
jo
stos
in
mov
push
cmp
jb
and
add
add
into
stc
es
shll
add
cmp
push
pop
sbb
cmp
mov
adc
out
dec
movsl
inc
arpl
jl
jae
cmp
jns
mov
repz
ds
std
xchg
xchg
xchg
lds
jb
mov
mov
out
sub
jne
cli
or
nop
pop
inc
cmpsb
test
repz
mov
testb
sbb
test
imul
jae
pop
adc
jmp
jb
lahf
add
lahf
xchg
cmpsb
hlt
xchg
jns
adc
jno
sti
mov
loopne
cmp
ja
das
loope
shrb
sbb
mov
xorl
popa
lods
jno
push
and
adc
pop
pop
add
fsubs
out
pop
pop
mov
addr16
mov
outsl
pop
loop
and
xchg
test
push
inc
sbb
call
inc
or
out
into
stos
jle
mov
bound
cli
cmp
mov
jne
mov
pop
cmpsb
xor
jae
mov
push
ja
fisttpll
inc
adc
inc
mov
and
jle
addr16
out
mov
push
pop
xor
ss
stos
rcrl
push
mov
mov
or
jb
push
repz
imul
divb
xchg
nop
mov
mov
sub
icebp
dec
and
int3
repz
mov
popf
aas
gs
pop
stc
pop
decb
inc
cmp
and
pop
pop
mov
stc
jp
adc
out
lods
aaa
pop
loope
ret
mov
movsl
outsb
sbb
jecxz
xchg
mov
lds
push
xchg
sarl
sub
push
inc
xchg
push
arpl
out
push
flds
or
xchg
int3
andb
and
cld
js
jle
sti
xrelease
xchg
jo
test
popf
jbe
std
sub
xchg
loope
in
mov
out
mov
sahf
repnz
insl
push
sbb
cmp
mov
and
nop
xor
mov
inc
jmp
stc
int3
mov
adc
jno
iret
outsb
hlt
xor
add
and
sbb
xchg
mov
fdivl
fldl
fwait
pop
xor
dec
rcr
sbb
adc
fcoml
nop
stc
jno
adc
adc
adc
pop
mov
pop
int
test
bound
imul
inc
fidivrl
jmp
jg
jmp
aaa
mov
xchg
aas
cwtl
inc
hlt
or
jmp
fstl
mov
loop
lcall
dec
mov
or
jecxz
rorl
aas
mov
fisttpl
into
test
stos
jecxz
push
std
push
jge
sarb
cmpsb
and
jle
push
ljmp
aam
icebp
in
and
es
sbb
jbe
xor
xchg
mov
or
in
xchg
aas
cltd
xchg
add
inc
xlat
xchg
push
adc
cli
sbb
ja
sbb
out
test
mov
sbb
movsb
add
xor
ja
and
movsl
jl
ds
xchg
pusha
jae
fcoms
adc
mov
dec
hlt
js
mov
mov
in
jns
cmpsb
cltd
lcall
jbe
dec
gs
test
insl
test
and
sti
mov
cmp
call
lds
jl
dec
lock
jg
or
jl
stos
sbbb
pop
add
cmpsl
adc
mov
out
cmp
add
push
mov
sub
and
jmp
insb
pop
xorl
ficompl
hlt
mov
jl
dec
or
cld
mov
jnp
stc
lcall
sub
cld
or
rcr
xchg
push
xlat
imul
dec
push
or
mov
lret
pop
push
pop
ljmp
mov
sbb
adc
mov
notb
icebp
sbb
cmc
mov
inc
in
pusha
cld
mov
sub
xchg
cld
mov
mov
push
movsl
cmp
xchg
aas
xor
jecxz
jbe
lret
insb
adc
pop
pushf
xchg
dec
into
xchg
jbe
outsb
arpl
adc
push
je
bound
hlt
mov
insl
sbb
pop
stos
mov
imul
dec
cmp
mov
sbb
jl
gs
out
in
call
les
jo
aad
inc
dec
and
pop
mov
sti
sarl
push
xor
repz
add
mov
leave
pop
hlt
decl
sub
jo
cmp
aam
mov
shll
and
pop
scas
sbb
fwait
mov
ja
mov
test
cmp
cs
or
lods
add
popf
cmpsb
test
mov
insl
pusha
mov
xor
stos
mov
add
test
cmpsl
aad
fs
dec
push
xchg
rclb
jle
xor
ret
mov
mov
cld
enter
arpl
xchg
cmp
mov
inc
ds
mov
add
mov
push
cmpb
ja
pop
sbb
adc
mov
cmc
mov
cli
xchg
sbb
adc
jp
push
mov
push
add
mov
stos
jecxz
lock
push
cmp
fidivrl
into
mov
add
clc
cmp
xlat
pushf
lods
out
daa
and
or
xlat
aaa
jne
imul
hlt
pop
cmp
pop
jne
xor
add
jge
cmp
repnz
mov
sbb
add
push
jmp
mov
jl
jns
jmp
repz
or
imul
test
adc
mov
inc
fcmovbe
push
jo
lds
add
sbb
aaa
and
dec
dec
sub
stos
cld
sarl
ret
test
ljmp
xor
cmp
fistpl
cmp
imul
cmp
xchg
add
jmp
outsl
or
cmp
jle
stos
std
dec
dec
les
add
xchg
xor
cmc
movsl
ja
fcomi
sahf
fldl2t
out
rcrl
xor
sbb
mov
adc
in
aad
pusha
and
jp
pusha
pop
stc
ss
ror
stos
sub
fdivs
fsubs
iret
inc
pop
ret
mov
dec
inc
cmpsl
push
mov
pop
mov
inc
sar
ror
sahf
addr16
std
je
jnp
fistps
out
add
mov
les
stc
sub
xchg
das
bound
out
sbb
aas
call
dec
push
or
mov
out
out
mov
inc
xor
icebp
in
push
in
dec
sbb
push
out
out
jae
push
sbb
and
mov
scas
ss
dec
arpl
enter
push
inc
pop
les
std
sub
cmpsb
out
xchg
cmpl
dec
ret
icebp
inc
gs
adc
sub
mov
sbb
lea
movb
sub
movsb
jne
js
outsl
pop
or
ja
mov
out
jno
test
lret
cmp
popl
mov
pusha
xor
and
push
iret
mov
pushf
or
jb
mov
pusha
add
jge
inc
loope
sbb
inc
mov
inc
dec
arpl
dec
xchg
xor
mov
push
adc
lret
mov
push
sbb
rcrl
fmuls
ja
and
bound
aas
jnp
cld
add
fwait
popl
popf
shlb
xchg
adc
addr16
pop
inc
push
xlat
xchg
je
mov
in
pop
add
mov
and
jns
jecxz
dec
mov
jbe
das
xor
xor
sbb
mov
or
in
mov
ljmp
fstpl
or
add
push
ds
leave
iret
mov
das
sbb
popa
movsl
call
and
jge
xchg
scas
enter
mov
cmp
lods
inc
lods
adc
push
pop
scas
daa
ja
es
mov
mov
in
jno
les
outsl
inc
movsb
jl
div
call
dec
in
mov
in
and
aaa
jo
fiadds
or
comiss
cmc
adc
fcmove
shrl
pop
push
pushf
cmc
into
ljmp
lods
gs
loope
jge
xor
push
into
subb
cmc
jno
bound
push
push
addr16
pop
mov
fnsave
pop
push
cmp
inc
jo
add
shl
decb
fildll
mov
cmp
insb
nop
test
mov
insb
cmpl
xor
cmp
sarl
es
gs
sbb
jmp
fiadds
and
xlat
or
sub
sub
dec
push
push
fbstp
inc
fs
add
stos
mov
shrl
and
fldt
jg
inc
xor
pop
fdivs
xchg
sti
popf
shlb
dec
in
mov
or
cli
outsb
movsl
sub
cmp
and
mov
out
insb
movsb
outsl
inc
cmp
scas
cli
push
adc
adc
mov
test
std
outsb
add
lods
sub
xorb
out
jecxz
es
sub
push
push
scas
stos
inc
mov
inc
aaa
jns
sbb
mov
pop
jne
add
inc
mov
fdivl
push
lret
inc
subl
aad
mov
test
push
in
xor
adc
push
xchg
dec
and
ret
xchg
and
repnz
out
rorb
mov
and
pop
jb
subb
pop
sub
xor
jns
out
pmaxub
adc
push
and
clc
cmp
sub
arpl
out
lds
out
shr
cmp
loop
pusha
neg
pop
adc
insb
push
iret
imulb
pop
jp
andl
mov
lods
adc
sbb
fdivl
mov
sub
loopne
mov
and
cmpsb
les
scas
xor
sbb
mov
xor
cmp
stc
cmp
imul
add
test
push
into
sbb
lret
scas
push
dec
test
cmp
xchg
add
cmpsl
aas
or
test
out
and
inc
sub
cwtl
adc
jbe
aam
pop
push
addr16
jge
loop
sub
dec
sub
sti
add
dec
imul
mov
div
mov
xchg
push
cmp
aaa
inc
pop
testl
inc
mov
and
cli
pop
add
mov
inc
dec
pop
cmp
xor
lcall
scas
clc
popf
inc
mov
mov
movsb
imul
xor
xchg
out
stos
jmp
mov
jbe
lcall
mov
loope
pop
push
jge
and
rcrl
mov
adc
call
cmp
or
pop
arpl
test
rcl
hlt
mov
jmp
mov
out
cmp
push
xor
pop
lods
inc
das
insb
daa
push
pop
mov
dec
cld
dec
aam
xchg
nop
pop
mov
ficompl
cmp
push
jb
stc
dec
xchg
pusha
jecxz
dec
in
jb
sbb
pop
inc
cmpb
inc
sub
mov
xor
es
test
ja
add
add
mov
fs
or
cwtl
std
outsb
enter
push
lock
jno
adc
scas
popf
lcall
shrb
ret
cmp
pop
and
fs
sbb
or
and
ds
ds
xor
inc
xchg
pop
cmp
jge
mov
cmpsl
sbb
jne
test
in
shll
aad
add
mov
cmp
in
fs
movsl
xchg
ds
pop
mov
xchg
push
repz
jle
and
adc
scas
cmc
jge
ret
gs
lock
add
testl
stos
cmp
imul
fcomip
pop
out
xchg
cmc
in
cs
and
aad
fimull
negb
pop
mov
test
add
or
push
pop
sub
cmpsb
push
fs
adc
sti
loope
je
jae
adc
inc
and
in
imul
sbb
cmp
mov
lret
or
add
dec
lret
add
cmp
and
cmp
adc
add
sub
mov
test
jmp
sahf
imul
push
les
sub
jns
fcmovnb
dec
stos
xchg
les
xor
mov
inc
xchg
and
mull
stos
aam
xchg
xor
add
xchg
sbb
aaa
xor
cmp
mov
xor
push
test
aas
jo
out
and
xchg
aad
test
jnp
dec
fwait
dec
push
adc
and
and
mov
lret
dec
push
mov
add
std
xchg
clc
inc
mov
push
flds
xor
hlt
jle
cli
or
add
shll
aas
pop
lret
imulb
add
add
clts
fcomps
push
cwtl
jae
push
jo
xor
iret
cli
pusha
cli
int3
bound
sub
ret
andb
push
pop
incl
sbb
dec
sub
rolb
insb
or
xor
push
pop
in
scas
xchg
mov
mov
into
mov
jge
into
jecxz
int
mov
test
or
pop
mov
cmpsl
ret
roll
lret
jle
cmp
xchg
adc
cmp
imul
pushf
xchg
pusha
fstps
jl
iret
loope
push
sbb
ret
jne
popf
sbb
push
mov
ja
pop
push
mov
iret
add
sbb
stos
xchg
jecxz
jae
xor
fwait
sub
test
popf
idivl
mov
dec
cwtl
mov
mov
sub
sub
dec
lods
xchg
ds
jg
inc
rorl
pop
jp
stc
mov
fwait
push
push
xchg
xchg
add
lahf
xchg
add
adc
roll
and
mov
pop
inc
push
or
outsb
call
andl
ds
mov
js
mov
mov
repz
dec
mul
xchg
outsl
sub
push
dec
leave
mov
clc
mov
fcmovnb
or
sub
fwait
inc
add
mov
js
sbb
sbb
js
inc
js
push
jae
stos
fsubrl
ret
testb
push
mov
mov
bound
rcrb
adc
mov
inc
cmp
adcb
jmp
iret
sti
push
and
jmp
jmp
pop
sbb
dec
test
movb
fcmove
pop
ret
jge
ljmp
cmp
fwait
add
in
push
std
mov
add
pop
movsl
mov
je
clc
adc
mov
xlat
mov
fisttps
sub
lods
sub
es
pusha
sbb
stc
shlb
loope
ds
xchg
adc
loope
lcall
lods
ss
popa
adc
mov
push
lcall
xlat
addl
and
pushf
xor
rorl
cmp
bound
dec
dec
sbb
cwtl
stos
mov
pop
dec
dec
xchg
mov
mull
pop
mov
pop
jns
mov
lds
add
cltd
mov
mov
hlt
clc
mov
and
mov
inc
push
mov
clc
stos
aas
imul
std
pop
add
rorb
add
fs
inc
mov
mov
scas
cmc
sti
outsl
xchg
ret
mov
mov
in
pop
pop
mov
ja
fists
inc
or
test
inc
aam
dec
je
std
jmp
fcmovne
repz
lock
cwtl
rorl
inc
inc
call
sub
sbb
xchg
lea
in
cld
jne
push
sub
jl,pn
nop
iret
in
dec
push
jno
dec
jb
sub
and
sub
lret
movsb
jbe
add
cld
pusha
roll
pop
add
and
test
shl
or
jmp
xchg
fidivrs
or
push
pusha
mov
or
mov
cmp
sbb
cmpsb
lock
mov
jmp
xor
leave
scas
push
das
outsl
cmp
mov
mov
sahf
loope
cwtl
push
dec
stos
mov
pushl
ljmp
push
fidivrs
dec
cli
notl
incb
add
and
lret
gs
les
inc
adc
dec
mov
jns
loop
lods
mov
test
adc
scas
cmc
pop
xor
pop
out
xchg
fistl
clc
in
out
pop
xor
leave
stc
pop
xchg
filds
adc
fsubr
mov
lea
cs
jb
cmc
test
dec
pop
inc
pop
cmp
adc
xlat
xor
mov
jmp
sub
mov
fwait
sbb
lret
xchg
push
pop
dec
xchg
inc
xor
inc
hlt
neg
push
in
movsl
sub
mov
xchg
or
jecxz
jmp
testb
push
repz
adc
xor
push
add
roll
daa
rcll
icebp
adc
incl
sarl
ret
xor
cmc
pushl
jo
out
jle
jp
rol
movb
xchg
imul
mov
imul
adc
es
xchg
and
xchg
jmp
loopne
gs
or
inc
lea
push
test
sahf
std
insl
push
cmp
jecxz
sub
pop
cltd
ret
sbb
popa
stc
sub
insb
pop
aam
jb
mov
pop
mov
out
pop
dec
ss
test
popa
sti
shl
cmp
push
hlt
ds
mov
ljmp
sub
xor
or
jnp
aas
icebp
popf
jno
mov
inc
xchg
daa
fwait
or
adc
mov
push
clc
out
rcrb
popa
gs
popf
mov
mov
ret
int
jl
clc
xlat
ret
sbb
mov
int3
lret
pop
or
inc
dec
add
loopne
jne
ja
faddl
cmp
packssdw
idivl
mov
clc
cmp
mov
decb
out
test
movsb
cld
rcll
mov
mov
push
jmp
cmp
sahf
ss
adc
pusha
sub
dec
outsl
add
xchg
fistpl
das
sbb
test
aam
jns
in
pusha
mov
cmp
clc
push
iret
fmuls
sbb
jns
adc
mov
pop
push
sub
fsts
loopne
jmp
call
loope
and
inc
in
jne
sub
and
jecxz
dec
cmp
pop
aad
dec
and
rolb
and
roll
jne
jmp
call
push
dec
push
mov
cmp
lret
jb
shlb
out
outsb
mov
nop
lret
ret
lahf
jns
test
inc
push
cmp
cwtl
repnz
or
adcl
mov
pop
mov
negb
test
sbb
fsub
jbe
fistpl
lcall
leave
outsb
mov
lret
inc
cmp
not
addr16
lds
jb
xchg
iret
fwait
fs
fimull
adc
jne
add
xor
outsl
and
xchg
and
pop
popf
sbb
sub
js
xor
test
jecxz
push
xchg
inc
sbb
icebp
loop
mov
dec
das
mov
stos
inc
mov
gs
xor
in
or
dec
dec
sti
pop
xor
xchg
sub
lahf
call
cwtl
adc
push
pop
dec
and
lcall
in
push
repnz
add
aad
cmp
ret
push
xchg
or
mov
lea
cmp
cli
dec
ret
sbb
push
sub
movsb
mov
jae
or
dec
subb
push
sbb
mov
into
outsl
js
rcl
xlat
or
out
dec
cmp
nop
jecxz
lcall
gs
jge
dec
and
lock
out
movsb
test
orb
test
or
cld
in
gs
pop
ret
sub
jp
roll
push
lock
lods
mov
xchg
repnz
adc
inc
pop
popa
xchg
subl
sub
in
out
sub
xchg
add
insb
test
sti
sub
in
loop
xchg
cmp
out
into
cwtl
mov
pop
outsb
out
xor
das
add
push
in
push
mov
and
dec
lods
sub
mov
dec
mov
mov
xlat
fs
xchg
stos
xchg
lods
enter
and
popa
cmp
lcall
arpl
clc
fdivl
or
ja
popf
mov
je
or
xor
pop
outsl
hlt
outsb
push
das
push
ss
out
mov
add
pop
mov
pop
sahf
sbb
xor
cmp
jle
jne
stc
mov
sub
cmp
lods
in
dec
out
xchg
adc
pusha
sbbl
jecxz
out
adc
scas
push
xchg
fistl
in
mov
lds
inc
in
rcrl
and
pop
aas
faddl
or
or
cmp
pusha
flds
or
out
cli
int3
lods
xchg
mov
incb
inc
mov
in
pop
mov
fsubrs
fsts
movsb
shrb
xlat
push
push
iret
mov
ror
dec
add
bound
or
mov
dec
fwait
jne
js
mov
adc
loop
mov
fwait
pop
mov
cmp
pop
add
inc
inc
cmp
outsb
pushf
idivb
sub
cmc
dec
cwtl
gs
push
adc
loopne
cs
mov
jae
jns
dec
loope
jb
cmpsb
xor
sub
addr16
xchg
jns
fiaddl
inc
cmp
jo
and
fsubs
pop
add
pop
xor
and
scas
adc
cmp
sub
in
or
aad
movhps
jbe
xchg
fdiv
rcrb
cmpl
mov
mov
fsubp
add
ljmp
inc
dec
pop
dec
inc
cmpb
in
in
jp
xlat
fisttpll
jne
stc
mov
repz
and
mulb
fnsave
ret
xor
je
mov
mov
shll
lods
out
jo
shl
fucomp
lahf
sbb
mov
dec
xchg
stc
xchg
xor
dec
repz
push
adcb
testl
mov
add
push
inc
mov
aas
shlb
sbb
enter
sbb
inc
fcomps
jmp
fwait
sbb
jb
sub
scas
mov
jbe
xor
xchg
aad
pop
mov
mov
push
scas
ljmp
pop
out
or
das
cmp
pop
ud2
xor
mov
rol
bound
lods
movl
js
sub
pop
pushf
mov
push
scas
test
mov
xchg
xchg
sub
and
rcr
xchg
inc
cs
movsb
and
adc
cmp
leave
fsubs
popf
mov
lret
test
notb
cs
mov
pop
test
sub
xorl
inc
cli
incl
xorb
shlb
xchg
lea
inc
xor
and
sahf
pushf
lret
sbb
mov
push
insl
sub
mov
xchg
jg
mov
loop
setnp
jne
shll
or
fnstenv
sub
data16
pop
shrb
loopne
push
push
pop
out
adc
push
or
daa
xor
mov
loop
hlt
xchg
mov
inc
ljmp
mov
in
jmp
pop
add
loopne
cwtl
lcall
call
stos
js
in
cmp
jb
push
gs
sbb
lret
stos
jne
jecxz
xor
xor
repnz
lret
je
icebp
xchg
cmp
cmpb
xor
in
adc
cmovae
in
mov
dec
loopne
push
jg
fisubl
jle
ss
das
imul
mov
jp
and
stc
push
mov
inc
subl
movsl
ret
mov
adcb
aam
or
xor
mov
adc
adc
jge
fstl
pop
xor
fiadds
pushf
ss
push
add
outsb
shrb
mov
call
add
mov
mov
jmp
dec
in
mov
in
jp
sti
dec
inc
mov
mov
and
fdivrl
lret
inc
fisubrl
loope
outsl
cmp
cmp
pusha
jbe
out
dec
sbb
mov
out
hlt
out
int
jecxz
mov
xchg
or
imul
mov
adc
sub
shl
out
push
mov
lret
push
test
push
cmp
or
jo
fldenv
dec
jecxz
fwait
repz
mov
mov
mov
or
int
dec
stc
jne
sarl
xchg
enter
mov
das
or
cwtl
add
inc
pop
cmp
or
and
sub
cmp
sbb
inc
inc
jecxz
test
fwait
clc
cmp
dec
lahf
scas
cmp
mov
dec
negl
xchg
imul
rcrl
jno
mov
jecxz
shlb
sbb
adc
cmp
lea
out
scas
cmc
in
pushf
sbb
imul
mov
push
jns
mov
push
hlt
inc
dec
negl
push
pop
rcrl
into
xor
jl
sbb
imul
insb
push
lods
cli
or
popa
jle
daa
mov
cs
dec
add
int
mov
push
and
inc
mov
enter
adc
fistpll
int3
pop
ret
aas
test
sub
out
lret
jl
sarl
mov
roll
push
xor
test
push
stos
pop
cld
pop
push
mov
orl
xchg
outsb
jecxz
jns
cli
or
test
mov
rcr
jl
dec
cmp
xor
mov
cmp
cltd
pushf
add
cmp
fstpl
shl
mov
fsubrs
pop
divl
mov
cmp
enter
dec
or
int3
test
fcomps
repz
adc
mov
mov
pusha
pop
test
aas
push
or
cli
aam
pop
dec
aas
cs
jne
cltd
pushf
sbb
aas
sub
inc
popa
out
mov
imul
jbe
mov
std
and
roll
push
in
das
jne
mov
xchg
sahf
out
cmp
mov
add
mov
sub
mov
nop
push
xchg
dec
pop
and
mov
dec
mov
cmp
mov
jl
and
cwtl
push
test
dec
loop
sub
adc
clc
jo
enter
lret
jne
andw
cmp
xor
add
add
jmp
xor
jb,pn
mov
or
or
mov
movsl
cltd
js
sldt
aad
dec
roll
clc
aas
add
js
cld
in
cmp
repz
je
imulw
xchg
leave
scas
stos
pop
dec
cwtl
daa
adc
das
daa
ret
loope
hlt
cmp
add
adc
aad
cmpsb
xor
les
mov
jo
test
inc
ss
imul
jge
push
jno
xchg
stos
mov
jle
jge
inc
mov
jl
in
scas
pop
adc
out
jge
xchg
mov
xchg
xlat
pop
lock
mov
testl
xor
sub
mov
cmp
or
repz
sbb
mov
les
cld
hlt
jp
mov
sti
mov
ret
xchg
leave
cmp
and
rolb
pushf
push
test
jmp
rcrb
push
push
lret
out
or
stos
dec
mov
sub
push
xor
ja
sbb
test
icebp
or
inc
push
test
cmp
jl
ret
sbb
sub
push
adcl
jae
lea
loop
cwtl
dec
orb
lret
pushf
dec
mov
jns
aam
xchg
xor
sub
arpl
jne
popf
and
aaa
outsl
mov
xchg
imul
pop
sti
scas
rorl
dec
adcb
test
cmp
ss
sub
lcall
ljmp
loopne
inc
jecxz
or
addr16
add
or
rcrb
imul
int3
fnsave
insl
mov
inc
fcoml
mov
xchg
jp
pop
and
mov
cmpsl
push
mov
leave
jecxz
inc
jbe
inc
pop
testb
cmp
or
pusha
mov
mov
sub
mov
xchg
add
hlt
mov
shl
mov
shrl
inc
std
hlt
fcomps
dec
push
sahf
fbld
mov
mov
xchg
test
or
mov
jb
loop
out
pop
cli
cmpl
mov
mov
cld
fwait
pop
loopne
push
sbb
gs
xor
xchg
mov
das
xchg
dec
mov
push
aas
sbb
les
adc
mov
cli
std
rep
sbb
adc
lds
pop
or
stc
xlat
daa
sahf
push
shl
outsb
jl
icebp
push
js
or
aam
mov
fiadds
mov
mov
leave
lret
cmc
xchg
repz
into
les
incl
jg,pt
insl
nop
shll
lock
mov
mov
jge
jmp
pop
sahf
cmp
setnp
sub
xor
mov
test
xor
test
sbb
lds
fwait
outsb
jp
add
testl
mov
mov
inc
jo
jns
pop
lea
mov
lea
fs
jae
jno
xor
mov
movb
sbb
or
pop
or
jns
pop
add
jae
cwtl
lods
stos
sti
test
jbe
push
xor
dec
mov
and
push
outsb
dec
adc
xchg
dec
and
adc
xorb
push
dec
add
pop
sbb
jp
add
or
mov
clc
mov
leave
push
fdivp
mov
das
xchg
fmuls
scas
sbb
rcll
lahf
rcrb
imul
test
push
test
int3
mov
mov
cmpb
push
push
test
dec
dec
iret
cmpsb
repnz
scas
stos
push
jg
xlat
xchg
orl
nop
sbb
enter
cwtl
xchg
pop
jge
jl
add
enter
add
sahf
sbb
mov
or
dec
and
inc
sahf
mov
dec
daa
insl
outsl
fs
in
cli
andb
xor
xchg
fwait
repz
or
cwtl
cmp
out
daa
and
js
mov
xchg
adcb
ss
rclb
sbb
adc
jo
testb
pop
mov
lret
sub
dec
into
mov
push
imul
pushf
mov
ja
xor
fwait
nop
gs
and
out
add
sbb
sti
inc
mov
adc
sahf
dec
imul
jbe
lock
mov
in
cmp
lcall
cld
and
push
sbb
cmp
jns
cs
test
lahf
sbb
cmpsl
add
fst
adcb
xchg
push
or
cs
jl
jbe
inc
call
and
subl
scas
loope
loopnew
mov
sub
xchg
inc
add
mov
int
stos
jecxz
mov
fdivrs
and
cli
ljmp
mov
test
in
xlat
pusha
add
out
fmuls
cwtl
xlat
loope
into
mov
mov
inc
int
push
and
loopne
mov
lret
dec
data16
xchg
subb
mov
test
popa
adc
dec
jmp
lret
mov
leave
inc
adc
pop
scas
push
and
mov
out
sarl
sub
mov
mov
adc
xor
xchg
rorl
andl
das
mov
ret
dec
movsb
mov
xor
je
cmc
inc
sbb
sbb
movsb
lods
mov
inc
out
cli
or
cmp
sub
iret
lahf
scas
test
xor
mov
in
out
je
clc
jmp
lods
call
and
or
shrb
stos
sbb
mov
pop
mov
adc
mov
push
cld
dec
imul
sbb
pushw
mov
movsl
push
mov
stos
inc
xor
ja
cmc
cmp
and
lea
jns
jl
sbb
mov
and
mov
sahf
add
xchg
fstl
pop
mov
push
mov
loop
and
movsl
push
mov
inc
xorb
mov
sub
ss
es
pop
out
loop
insl
and
icebp
rol
fldt
pop
xchg
cmp
ljmp
dec
stos
cmp
pop
xchg
cmp
andb
push
dec
sbb
aas
xchg
stos
mov
dec
push
mov
nop
test
sbb
rcll
xchg
ret
daa
rcrl
cli
fs
mov
test
mov
cmp
pop
jnp
xchg
jl
lret
dec
mov
adc
add
inc
hlt
sub
imul
addl
cwtl
mov
cwtl
int
sub
orb
les
call
mov
pop
lea
icebp
ret
pop
lods
adc
movsl
jp
int3
dec
jmp
outsl
ljmp
pusha
push
mov
push
push
add
sbb
adcl
ret
xlat
adc
pop
ficoml
sbb
lahf
xor
or
inc
pop
dec
rcl
rcr
scas
fildll
stos
mov
hlt
jecxz
cmp
insb
aam
lea
sbb
jb
push
hlt
icebp
inc
aaa
mov
idivb
jp
jmp
lahf
lods
cmp
inc
test
sub
inc
jo
test
int
pop
scas
fldcw
dec
mov
xchg
loop
xchg
cs
addl
mov
push
jae
ret
jo
ret
adc
cmpsl
jmp
leave
push
insb
ja
lock
cmpb
dec
das
jno
mov
popf
in
cmp
mov
xor
xor
jmp
cmp
dec
mov
mov
pusha
sbb
xor
cltd
cmpsb
cmp
ja
jle
sti
fistpl
mov
inc
nop
mov
or
dec
pop
xor
mov
aad
mov
lahf
in
mov
dec
inc
lret
pop
xchg
adc
push
cmp
test
cmp
pop
scas
inc
push
jmp
add
dec
test
lds
sbb
out
xor
sub
fs
sub
rcl
adcb
daa
fcoml
xchg
js
push
je
adc
sbb
add
xchg
xchg
jp
sub
mov
add
in
mov
xor
mov
iret
push
or
sub
mov
adc
lret
orl
stos
call
lock
rolb
pop
pop
sahf
mov
andb
jne
xchg
or
inc
sbb
es
pop
daa
xor
imul
addr16
test
clc
jg
sub
push
mov
das
ja
push
or
jne
testb
mov
inc
cmp
add
mov
test
mov
adc
and
fstl
insl
in
lahf
loopne
repnz
sub
cltd
lods
pop
push
fucomp
lock
and
ljmp
fistpll
sti
or
cmpsb
pop
imul
jle
sbbb
subb
lret
and
mov
int
pop
push
scas
cmc
fs
jno
inc
pop
dec
test
out
push
popa
leave
lods
ret
inc
jmp
adc
ljmp
sbb
pop
jl
jl
pushf
iret
inc
into
cmp
into
pushf
out
add
ficoms
sar
adc
outsb
idivb
or
jl
sbb
ret
inc
mov
adc
lods
sub
mov
out
xchg
jle
inc
jae
inc
mov
xchg
sbb
je
xchg
ucomiss
loop
xchg
and
loop
xor
jae
mov
inc
icebp
test
cs
inc
dec
jg
repnz
in
push
dec
or
mov
js
imul
mov
mov
push
mov
mov
cmpsl
sub
mov
or
xchg
dec
dec
dec
repz
add
lret
or
ret
sub
mov
mov
test
push
leave
das
xor
popa
mov
sub
lea
clc
outsl
in
loope
addl
mov
lods
push
mov
inc
jg
and
jl
pop
sub
fldcw
adc
inc
push
das
bound
jns
xchg
cld
jb
jbe
sub
outsl
cmp
aaa
fnstcw
js
jg
stos
or
mov
fs
daa
pop
cmp
mov
movsl
lods
sbb
fsts
push
pop
add
insb
mov
xchg
in
popa
lret
addr16
xchg
ret
aad
shl
mov
adc
pop
or
and
pop
jecxz
mov
cmp
xchg
sub
xchg
idivl
lds
sbb
xor
pop
out
lds
mulb
push
loop
adc
test
aaa
shll
dec
loopne
movsl
sbb
cli
xlat
fdivs
mov
jecxz
es
loop
dec
jae
cmp
cld
adc
bound
xor
out
shlb
aaa
or
jb,pt
leave
popa
fs
movsb
mov
das
cmp
dec
mov
xchg
rcrl
mov
and
pop
add
scas
jp
pop
rolb
outsb
mov
xor
gs
xchg
cltd
mov
and
and
cmpsl
and
cmp
pop
pop
es
lret
mov
loop
and
mov
jbe,pt
sarl
popa
repnz
loope
test
loopne
pop
or
dec
mov
jns
pushf
pushf
jl
iret
pop
dec
mov
dec
pop
adc
xchg
sbb
mov
jns
and
jns
dec
adc
outsl
outsb
mov
xor
pushf
push
rcl
sbb
loope
xor
cmp
rcrl
inc
ror
sbb
pusha
xchg
add
gs
sbb
xchg
xchg
cmc
sub
pop
cmc
data16
int
imul
mov
jbe
scas
lds
movsl
in
fildll
mov
mov
adc
dec
notl
outsb
mov
pop
pop
xor
pop
cmp
fcoms
stos
sbb
xchg
loope
cmp
xor
jmp
pushf
jle
push
sub
fidivs
iret
cmpsl
stc
push
jmp
es
jne
sbb
aad
pop
and
fidivrs
je
mov
test
movsl
ss
sub
leave
in
lahf
ds
pop
out
push
inc
mov
inc
negb
xchg
xor
xchg
sbbl
lea
add
std
inc
iret
ret
and
xorb
popf
xchg
popf
jnp
mov
xor
sahf
pop
xchg
roll
outsl
xor
adc
scas
lock
jle
pop
lods
sarb
pop
cld
sbb
xor
pop
pop
das
adc
mov
and
movsl
out
pop
xlat
pop
push
or
out
call
add
call
jbe
ja
mov
mov
lds
lods
xchg
ret
pop
test
dec
outsl
sub
arpl
in
or
ljmp
push
clc
imull
cmp
lds
lahf
add
imul
cmp
cmp
sub
loope
or
jae,pn
push
pop
addr16
mov
mov
sahf
rcrl
cmpsb
rcl
cmpsb
cmp
setp
mov
push
dec
pop
out
das
mov
mov
jmp
push
inc
bound
xor
pop
mov
push
call
adc
shlb
stos
outsb
ljmp
pop
adc
mov
push
jae
notb
push
outsl
cwtl
lahf
into
ljmp
cli
loop
cwtl
sub
xor
sub
jg
xchg
std
inc
insb
iret
xchg
add
mov
lret
test
ret
xchg
gs
xor
lods
cmpsl
movsb
lock
and
pop
insb
xchg
jo
sub
push
cmp
ss
incb
shrb
addl
jl
push
dec
inc
fcmovb
inc
fwait
pop
into
inc
les
inc
cmpsl
mov
aas
test
roll
or
pop
mov
push
push
pusha
nop
dec
lock
pop
jb
fmuls
les
add
int
scas
int
bound
fdivs
loop
dec
addr16
cmp
mov
jns
ss
xchg
popf
loope,pn
jg
sti
adc
arpl
loopne
cmp
mov
cmp
lock
xchg
jecxz
in
mov
jge
or
jns
sub
call
and
inc
add
stc
cli
xchg
nop
sti
xchg
xor
jmp
lret
add
loop
mov
cmp
cmp
fnstenv
in
mov
pop
call
cmc
inc
insb
xchg
enter
xor
cmc
in
or
aaa
testl
inc
ja
jns
jge
and
xor
int
sbb
dec
lods
jg
in
cwtl
hlt
notb
mov
and
imul
xchg
scas
mov
dec
jb
in
or
cmp
inc
insb
xor
cmp
xor
jl
mov
mov
xchg
cmpsl
pushf
in
faddp
in
adc
sbb
fs
scas
adc
sub
push
sbb
enter
arpl
ja
jl
cmpsl
dec
jecxz
sbb
sbb
mov
cltd
ret
iret
xor
lods
hlt
fsts
xchg
testb
inc
in
jae
add
stc
outsb
jae
mov
add
xchg
outsl
push
bound
jge
push
jns
cmp
shrl
xchg
mov
jne
mov
mov
push
and
mov
xor
ret
sbb
mov
or
mov
sti
clc
mov
dec
fdiv
popf
pop
mov
cmp
subb
jl
out
mov
push
xor
fdivrl
ret
lret
lds
jge
call
pop
lock
add
ret
imul
sbb
push
mov
stos
les
cmp
jne
sbb
ljmp
jl
imul
movsb
push
and
push
and
mov
cmp
add
jb
pop
jl
sub
dec
jnp
lock
scas
aam
jnp
sbb
mov
fstps
shll
sub
xchg
dec
xchg
cmp
repnz
push
fiadds
jmp
push
sub
dec
les
sbb
cld
sbb
mov
add
push
xor
mov
test
cmp
mov
push
les
xchg
out
das
ss
sbb
lods
inc
cwtl
rcrb
fs
int3
xchg
fmuls
cmp
stos
inc
inc
mov
xor
addl
ja
cmpsb
sub
rcr
roll
jmp
dec
mov
ficoms
jnp
push
es
stos
sub
lods
sub
push
daa
add
mov
in
and
jno
clc
insb
dec
iret
cs
inc
or
rclb
mov
test
in
pop
movsl
and
add
fidivl
xchg
mov
inc
add
je
imul
jb
cmp
scas
imul
and
xchg
clc
lret
adc
clc
jmp
pop
addr16
frstor
mov
movsb
adc
or
mov
jge
pcmpeqw
xor
cmp
test
cmp
sub
lea
cmp
add
outsl
adc
arpl
mov
cvtps2pi
nop
lret
pop
fistps
mov
movsl
cmp
pop
cmpsl
pop
xchg
lret
cmp
inc
xor
cmpsl
xchg
aam
iret
or
mov
lret
imulb
push
sub
rcr
sbb
lods
add
jne
adc
cld
shlb
pop
xor
scas
dec
loop
sub
sbb
push
mov
lahf
dec
mov
jnp
inc
stos
repz
add
int
ljmp
xchg
cvtps2pd
inc
je
sub
mov
rorl
mov
mov
mov
popa
sbb
fstpt
xor
sub
lds
shrb
mov
and
in
jb
jns
lods
pop
push
mov
xchg
dec
psubsw
cmpsl
daa
push
push
mov
in
scas
es
jg
mov
xchg
cmp
stos
mov
dec
pop
rcrb
iret
pop
inc
lcall
ret
jecxz
cmp
lds
mov
add
bnd
add
jmp
and
dec
jmp
rcrb
jg
cmpsb
std
pop
cmp
or
cmc
mov
cmpsl
rcll
pop
mov
mov
in
out
mov
loope
cmp
mov
add
inc
gs
bound
repnz
mov
mov
cltd
sbb
std
mov
test
stc
mov
pop
mov
or
jnp
ret
cmp
or
sar
mull
inc
mov
cltd
cmp
jne
ficoms
xchg
cmp
iret
cmpsl
jmp
leave
sbb
adc
mov
mov
es
rcrl
dec
jns
fdivl
mov
pop
jno
das
enter
mov
ss
jae
sub
and
mov
sbb
in
sbb
cmp
into
xchg
push
cli
inc
jecxz
movsl
leave
nop
pop
cli
sti
mov
jne
js
mov
aas
push
adc
jle
sbb
test
xchg
mov
fwait
xchg
inc
sbb
jb
cmp
adc
lock
clc
leave
mov
jge
hlt
shll
sub
stos
xor
ljmp
push
nop
lods
orb
jns
mov
mov
or
mov
or
mov
jmp
stos
push
jge
mov
gs
orb
add
mov
sarb
sti
or
rcr
adc
push
in
inc
push
adc
les
or
jae
or
mov
mov
or
push
push
dec
pop
dec
sahf
stc
data16
dec
cmp
lods
pop
testl
mov
jo
ss
inc
add
add
and
and
pop
jl
jp
mov
out
mov
bound
jmp
inc
gs
mov
mov
insb
mov
daa
lods
push
movsl
push
shll
push
pop
popf
xchg
jns
mov
push
or
stc
mov
mov
cmpsl
orl
push
pop
sbb
mov
jecxz
jecxz
test
fcom
cmp
insb
push
inc
push
shll
sub
es
jle
mov
arpl
pop
mov
mov
inc
js
not
mov
iret
je
stos
dec
lock
jae
jns
shl
sbb
movsb
mov
push
fnstenv
xor
aam
or
in
lods
pop
pop
dec
jecxz
push
cld
aam
cld
dec
cmpsb
pusha
mov
jmp
pushf
xchg
roll
jmp
cmpl
repnz
or
testl
sub
data16
cwtl
stos
in
xor
mov
popf
aaa
dec
mov
push
popa
dec
mov
mov
stc
orb
inc
mov
mov
cmp
xchg
mov
xchg
out
and
cmp
inc
mov
sti
arpl
sarb
push
bound
push
popa
sub
in
dec
sti
das
in
dec
popa
int3
inc
fistpll
inc
imul
js
or
arpl
in
sub
lds
or
pop
add
and
pop
mov
popa
add
into
insb
inc
fildl
xor
pop
jle
leave
rcr
jns
mov
popa
jno
int
mov
aam
push
sub
cmp
lret
inc
int
ljmp
adc
in
push
into
into
jno
add
repz
and
jle
push
sti
push
xlat
push
test
cmp
pop
cmp
push
jle
subb
lods
xchg
in
and
aam
imull
orb
xchg
scas
std
and
push
bound
movsb
jle
pop
sbb
xor
ret
inc
push
aas
mov
adc
shl
mov
cld
jbe
adc
xlat
push
push
push
jno
xchg
xchg
mov
sub
cmp
dec
lds
mov
incb
xor
outsl
sbbb
imul
mov
adc
mov
and
add
sub
or
imul
and
mov
in
xor
les
xchg
xor
mov
popf
out
jle
push
js
clc
push
xchg
sub
orl
xor
cmp
push
or
dec
mov
jae
mov
decb
sbb
adc
jns
xchg
pop
mov
or
mov
pop
shl
mov
or
cmp
mov
jbe
jb
mov
mov
leave
sbb
lock
out
jbe
push
sbb
lods
pop
sbb
mov
pop
or
scas
loope
aad
rcrb
cmp
xchg
dec
jns
insb
std
or
out
xlat
movsb
mov
clc
enter
sbb
or
pop
int
test
fwait
repz
sahf
jbe
xor
aad
jecxz
stos
rcrb
adc
mov
stos
xor
pop
xor
das
imul
push
push
ja
shll
out
out
pop
pop
aaa
insb
out
lods
adc
imul
mov
mov
mov
cmp
cmc
pop
cld
push
shrl
arpl
mov
clc
loopne
dec
pushf
cs
pusha
lcall
adc
das
adcl
xchg
add
or
popa
test
mov
lds
sti
nop
dec
xchg
push
xor
inc
fwait
sti
adcl
xorb
addr16
pop
insb
and
and
adc
inc
xchg
mov
jge
ja
outsl
out
out
mov
ds
ret
adc
inc
push
adc
pop
inc
gs
push
test
sub
sbb
lock
cs
je
fdivl
addr16
inc
pop
sarl
dec
xor
xchg
lock
cmc
sub
call
add
mov
sub
shr
imul
insb
jb
mov
mov
les
xchg
cli
push
dec
mov
adc
mov
or
or
test
fsubp
leave
xchg
cltd
cwtl
into
pop
lret
out
cmp
adc
pop
pop
jae
pop
cmp
mov
pop
mov
xor
pop
sbb
adc
cmp
dec
push
mov
stc
sub
lret
movsb
sub
sahf
bnd
int3
mov
xor
inc
dec
pop
mov
scas
sub
aad
mov
leave
shl
xchg
pop
pop
inc
push
sbb
adcb
call
test
sbb
push
iret
xchg
mov
jmp
movl
jmp
jne
xchg
xlat
mov
mov
mov
lret
leave
daa
clc
mov
repnz
jmp
or
xchg
rolb
pop
arpl
add
lret
xchg
into
jmp
jne
mov
je
fs
daa
jno
push
dec
mov
or
dec
add
xchg
jecxz
or
cld
test
cmp
mov
mov
xchg
sti
cmp
testl
sbb
std
mov
push
push
out
sbb
mov
cwtl
fs
notl
test
adc
pop
xchg
push
iret
pop
mov
adc
jo
dec
or
lods
sbbb
push
sub
fiadds
dec
dec
aaa
ficomps
or
adc
hlt
push
icebp
ss
stos
jmp
jae
sahf
hlt
push
fs
add
cwtl
ds
adc
xor
sub
ret
call
popa
int
loopne
xor
das
leave
data16
sub
outsl
mov
xchg
jb
repnz
add
dec
loopne
mov
xchg
ror
push
jg
int3
fwait
adc
ret
cmp
mov
and
test
adc
push
in
jae
test
mov
adc
out
sub
shrl
popa
fisubs
leave
shlb
les
or
adc
mov
add
aas
stos
ret
leave
imul
sub
mov
cmp
mov
stos
inc
ret
negl
jmp
or
xor
icebp
icebp
sub
sbb
and
imul
xlat
in
sbb
sub
mov
push
jl
sbb
test
pushf
ja
push
xchg
xor
out
cmp
or
add
inc
or
mov
adc
mov
xchg
push
mov
aad
in
scas
mov
sub
mov
mov
daa
inc
push
testb
cld
push
lret
mov
fstpl
shll
mov
xchg
dec
hlt
ret
lods
mov
push
inc
nop
test
lcall
in
outsb
pusha
leave
mov
and
ret
or
pusha
lret
test
mov
or
out
aas
inc
inc
shrl
inc
pop
mov
in
dec
stos
aam
mov
fnstenv
in
pop
jecxz
adc
inc
test
pop
mov
repnz
repnz
push
inc
cmc
lahf
pop
push
dec
gs
arpl
outsb
push
shrb
imull
lret
and
lea
fcomp
lea
ret
and
and
ret
adc
xchg
pushf
icebp
inc
jmp
pop
aam
dec
repz
pop
imul
add
subb
scas
sbb
outsl
jnp
add
jae
pusha
shll
sbb
cmc
cwtl
andb
inc
pop
add
pop
mov
lret
aas
dec
notl
mov
mov
add
fisttpl
fsubrl
pop
lods
mov
sub
fildll
xchg
mov
push
pop
sarl
mov
cmc
pop
ret
jno
sahf
jl
decl
ror
and
push
mov
mov
jnp
pop
mov
add
leave
pop
sub
dec
mov
pop
jne
xor
push
or
fmull
inc
aad
jp
test
bound
push
out
jmp
pop
push
fdivl
fcmovnu
lret
xchg
jle
inc
xchg
stos
mov
pop
ret
das
adc
jae
dec
xchg
test
lock
scas
or
jb
xchg
cmp
jo
addr16
or
mov
popa
movsl
push
pusha
mov
fwait
inc
sti
test
int3
xor
and
dec
dec
mov
jno
loope
jae
cmpsl
sbbb
and
inc
xor
lds
push
jns
and
dec
nop
jne
sub
mov
sti
lret
inc
data16
icebp
push
push
xchg
dec
xchg
fsts
sub
sti
sub
shrl
addr16
dec
rorb
sbb
jp
mov
popf
pop
push
jge
xor
das
das
ja
push
or
xchg
sbb
jae
xor
dec
hlt
xchg
cmp
addr16
dec
es
outsl
adc
xchg
sarl
sbb
adc
call
xor
daa
add
xchg
cmp
aaa
cld
pop
lahf
inc
jo
cli
sub
mov
push
mov
cmpsb
gs
inc
xchg
mov
mov
pop
jb
sbb
cmpb
test
jl
push
aad
enter
out
jmpw
mov
in
insl
pop
inc
push
ficoml
dec
stos
adc
lret
dec
mov
jg
idivb
into
hlt
div
cmp
pop
daa
fsubrs
jg
mov
in
sbb
cmp
or
pop
subl
inc
xor
ss
mov
mov
sbb
shlb
inc
enter
rcrb
push
pop
push
push
sti
leave
inc
lods
mov
in
outsl
shl
ret
dec
sahf
add
xor
dec
das
xor
and
dec
xchg
inc
adc
dec
mov
mov
adc
ds
xor
xchg
mov
outsl
sub
je
out
out
pop
mov
aam
inc
jno
jecxz
loope
mov
insl
inc
lods
sub
pushf
add
xchg
fildll
mov
mov
push
in
fldl
xor
and
xor
dec
push
fnsave
add
add
adc
fisubrs
jl
cmpsl
outsb
dec
stos
shlb
jbe
dec
sbb
rol
loope
aas
dec
test
xor
lahf
nop
dec
lock
mov
push
rcr
cmp
aad
pop
sbb
in
movsb
xchg
cmp
fimuls
fwait
sub
sti
addb
cmp
xchg
xchg
jo
aaa
cmp
jp
dec
mov
das
mov
mov
or
fwait
dec
dec
out
rcrl
xchg
sahf
je
sub
int3
fldenv
dec
ret
iret
int
sub
dec
or
mov
mov
pusha
insl
sahf
mov
shlb
jp
lods
lea
aas
mov
clc
pop
jnp
and
sbb
in
mov
dec
cwtl
insl
aas
ja
int3
not
mov
pop
call
or
jp
dec
sbb
fs
sub
hlt
lods
aaa
in
enter
adc
loope
or
stc
mov
shlb
adc
into
mov
dec
fstpt
add
mov
push
add
dec
and
loop
push
push
jne
call
js
xor
mov
dec
ret
popa
out
inc
push
add
test
daa
aam
sub
dec
xor
mov
aad
inc
jo
cmp
movsl
push
ss
and
loope
and
scas
and
fdivrl
dec
call
sbb
or
subl
mov
pop
mov
push
rolb
int3
int3
add
inc
jmp
lret
std
loope
lds
mov
mov
xchg
sbb
out
loope
imul
jle
in
loopne
insl
lods
cmp
sbb
dec
xor
pop
stos
addl
mov
lret
enter
xchg
mov
jg
mov
adc
test
jge
pop
dec
stos
push
clc
sti
mov
adc
arpl
mov
imul
add
and
vminpd
mov
fadd
push
roll
in
or
mov
xor
clc
je
lods
enter
cmp
pop
ja
jns
mov
in
or
pop
fiaddl
lret
aas
jmp
mov
sub
jl
nop
lods
enter
roll
mov
sub
add
push
mov
mov
adc
imul
movsl
jmp
test
rol
pop
jle
rcr
bound
popl
or
fldenv
pop
cmpsb
cmp
dec
xor
mov
rep
mov
adc
or
jne
inc
aam
cmp
fimuls
inc
out
or
popf
mov
and
mov
pop
xchg
jo
test
xchg
data16
push
or
mov
mov
sahf
xor
mov
into
fcoml
rcrl
sbbb
dec
add
outsl
add
outsl
shrb
cmp
std
push
jg
lods
sbb
iret
or
dec
sbb
imul
arpl
test
imulb
cs
je
ror
fildll
popf
movsb
popa
dec
je
mov
movsl
push
imul
mov
xchg
mov
and
mov
stc
pushf
pop
add
add
aas
xlat
fsubr
dec
mov
lods
jmp
leave
movsb
and
push
mov
shlb
test
jle
mov
nop
mov
push
jo
addb
ret
scas
jp
pop
push
dec
cmc
sti
jb
jno
fnstsw
ds
push
out
addl
pop
andl
push
scas
mov
sahf
test
cmp
inc
add
jnp
mov
sbb
sbb
xchg
std
lods
mov
cmpsb
orb
std
sub
push
inc
push
jno
lahf
add
mov
jecxz
mov
inc
jl
xor
outsl
add
pop
in
push
jae
sahf
add
daa
daa
pop
xor
vcvtpd2psy
xor
and
jb
ljmp
inc
pop
stc
stos
xchg
and
adc
add
cmp
dec
jg
mov
bound
jecxz
lea
out
xchg
inc
inc
repnz
mov
push
sub
push
or
push
xchg
mov
pop
lcall
inc
imul
fcmovu
mov
testl
jge
test
cli
xor
xchg
adc
pop
insl
sub
add
adc
movsb
stc
out
inc
sbb
and
sbb
dec
adc
mov
or
das
repz
jl
jno
xor
sbb
dec
adc
out
pop
add
fadd
out
into
xchg
jle
popl
imull
aas
es
daa
adc
mov
js
hlt
int
icebp
mov
push
sbb
call
out
mov
iret
sarb
add
xlat
dec
mov
mov
sbb
jne
scas
mov
loopne
adc
sub
xchg
jne
dec
sub
insl
ret
out
repz
mov
and
mov
sub
scas
push
add
mov
int
xchg
adc
rcrl
add
inc
dec
add
dec
and
mov
mov
xchg
jbe
sub
jne
xor
dec
hlt
dec
pop
in
pop
cli
pushf
daa
lea
xor
push
inc
cmp
pop
andl
xor
enter
lret
mov
inc
add
pop
pop
mov
stos
aam
jle
push
scas
outsl
repnz
orb
push
arpl
dec
aam
jge
and
fs
pusha
pop
lock
scas
and
std
pop
outsb
jb
jl
mov
dec
jmp
enter
xor
lds
mov
scas
test
mov
mov
mov
imul
pop
xchg
mov
ret
addr16
jb
jb
mov
ss
imul
jmp
cltd
pop
and
mov
jne
jae
pop
es
cwtl
jge
or
out
jge
mov
jmp
inc
jg
loop
mov
push
cmpsb
repz
and
lret
jbe
cmp
mov
jae
lods
lock
dec
pusha
inc
data16
addr16
imul
inc
int3
shrl
or
cmc
inc
push
pop
aas
daa
mov
stos
push
and
popa
loop,pn
mov
fucomi
mov
in
lret
cmp
or
mov
push
dec
sahf
push
loopne
cmp
adc
int
xchg
mov
iret
adcb
add
hlt
stos
pusha
xor
test
xchg
add
dec
and
testl
cmp
jge
shl
cs
in
inc
shrl
push
push
fldcw
cmpsb
xchg
push
jnp
cmp
xchg
push
mov
popl
in
fs
leave
xchg
pop
lock
lret
and
inc
mov
push
nop
test
jp
lods
adc
loop
iret
mov
out
js
dec
push
cmp
rcll
sbb
subb
sahf
dec
lret
js
push
popl
cli
pushl
shlb
out
mov
test
or
sbb
js
jp
fsubrl
ja
jns
pop
xor
dec
fldl
mov
pop
in
ja
imul
cmp
pop
xlat
pop
lea
data16
mov
mov
arpl
jbe
jmp
xchg
mov
and
mov
cltd
outsb
lods
fcmovu
rorl
fstpl
fmull
ljmp
cmc
adc
test
repnz
jae
mov
lods
scas
jl
outsb
leave
call
xchg
aaa
imul
sbb
filds
sti
push
aaa
dec
adc
lds
xchg
rcll
mov
lea
test
jmp
fidivs
pop
sar
adc
inc
push
cmp
lds
cs
xchg
aas
scas
cs
xor
shll
out
jbe
shlb
outsb
ret
xchg
jmp
dec
pop
jbe
mov
xchg
nop
bound
cs
out
cmp
pop
into
sbb
pop
xchg
add
int
int3
sub
popa
push
mov
mov
ljmp
and
ljmp
in
dec
mov
aas
cli
sbb
into
inc
dec
inc
sub
cltd
jg
pushf
pop
cwtl
lods
pop
out
jge
lret
fs
mov
lds
jb
mov
sub
incl
inc
sbb
sbb
shr
push
popf
shll
jecxz
mov
push
cli
mov
mov
mov
scas
and
loopne
repnz
shll
cmp
inc
xlat
sbb
inc
int
shr
addr16
pop
shrb
popf
sti
sbb
add
out
das
mov
stos
inc
rolb
inc
mov
mov
dec
sbb
and
int
js
pop
push
cmp
push
xchg
andb
test
loope
adc
sbb
sbb
out
out
insl
test
push
xor
cmp
fucomip
xor
or
lret
pop
or
fnsave
xchg
add
out
stc
imulb
jnp
and
push
inc
adc
mov
mov
and
ds
xchg
mov
and
ret
mov
and
sub
ret
cli
mov
dec
outsb
rolb
orl
sbb
jmp
lret
jp
sbb
sar
aaa
fcmovbe
mov
iret
jge
loopne
das
sbb
mov
dec
out
sub
or
std
icebp
shr
hlt
outsl
mov
addr16
test
lds
push
push
repnz
lcall
lret
mov
pusha
stos
push
add
fs
test
sti
pop
push
xchg
mov
xlat
cltd
xor
cmc
pop
pop
inc
lds
jno
gs
addb
loopne
adc
pop
cmp
push
pop
push
cltd
sbb
push
add
out
sub
and
test
ret
mov
push
fnstenv
adc
movsb
sbb
push
dec
or
mov
aam
arpl
sahf
dec
dec
daa
movsl
xor
in
xor
lods
or
xchg
mov
mov
cltd
dec
and
sub
mov
add
xchg
adc
or
imul
sub
jnp
xchg
mov
push
sub
jae
and
imul
mov
xlat
repz
push
fisttps
popf
stos
push
int3
cmpsl
sti
pop
mov
outsb
scas
out
xchg
lret
loope
or
xchg
scas
jno
add
sbb
pop
adc
push
cmc
insb
mov
adc
mov
adc
aaa
adc
mov
movsl
add
pop
mov
fldl
inc
dec
insl
xchg
stos
cmp
and
jne
mov
in
dec
cmpl
push
daa
aam
je
xor
std
mov
jmp
aam
adc
lds
push
xor
mov
fcomi
int3
add
movsl
or
scas
rcrl
xorb
xlat
fimuls
pop
movsb
xor
jb
xchg
sarl
cmp
outsb
mov
movsl
das
outsb
outsb
push
jecxz
lea
mov
pop
cld
or
pushf
lcall
in
cmpsb
pop
dec
sbb
daa
bound
inc
push
test
mov
and
cmp
inc
and
push
pop
mov
icebp
adc
mov
mov
lret
mov
movsb
sbb
push
popa
sbb
dec
popf
inc
dec
lea
leave
adc
icebp
dec
addr16
mov
ds
es
mov
lcall
cwtl
lahf
inc
dec
insl
rcll
imul
stc
hlt
push
fsubrs
push
fst
jge
push
fwait
insb
pop
and
pop
popa
jne
jno
dec
add
mov
aaa
les
and
data16
ret
mov
in
je
xchg
mov
loope
or
pop
imul
mov
cmp
and
xchg
push
int
and
add
jmp
mov
pop
pusha
movsl
xchg
adc
cmp
mov
scas
js
decb
arpl
cs
pop
dec
ss
mov
xorb
mov
mov
js
aad
mov
shlb
cmp
repnz
idivl
lea
addr16
mov
outsl
pop
pop
jp
cmp
inc
jecxz
in
lds
dec
nop
inc
push
fmull
cmpsb
aaa
data16
fildl
jl
loopne
mov
xlat
xchg
test
cmpl
es
fnsave
stc
shrl
into
inc
xchg
cli
xchg
icebp
in
loope
cltd
cmp
pop
pop
pop
adc
or
dec
and
mov
test
add
inc
adcb
fst
mov
and
cmpsb
mov
xchg
int3
fisttps
imul
subl
dec
xchg
gs
sub
repz
cmp
cmpsb
out
cwtl
xchg
or
int3
aad
push
mov
test
rcll
add
test
icebp
push
jbe
xchg
push
xchg
shrl
das
mov
sub
xchg
mov
lods
mov
std
stos
daa
enter
or
add
data16
adc
scas
xchg
sbb
pop
int
dec
add
test
fdivr
xor
push
ds
gs
cmp
push
sbb
ret
pop
fsubrs
mov
mov
stos
dec
mov
out
add
in
push
cli
inc
push
jle
mov
lcall
push
cs
in
and
inc
lahf
mov
outsl
mov
pop
or
aaa
push
inc
imulb
cmp
xchg
lret
jno
scas
into
cmp
sbb
popa
pop
rcr
xchg
jno
push
and
stos
cli
imul
add
adc
mov
pushf
fcoms
add
leave
sub
or
aad
cwtl
inc
add
xor
incb
jne
push
push
popf
fists
mov
repnz
push
add
das
enter
push
lods
jns
mov
outsb
fnsave
into
xlat
leave
mov
jbe
sbb
stos
inc
lret
add
fcmovnbe
insb
push
int
push
mov
lds
mov
jae
sub
pushf
in
xchg
in
adc
dec
sub
lret
adc
in
movsl
shlb
lcall
sub
popa
scas
test
sbb
in
ljmp
arpl
ss
shll
imul
xchg
shll
fimull
test
sbb
xor
rorb
xlat
cli
mov
adc
mov
inc
mov
ficompl
cmp
je
das
imul
and
xor
sub
mov
pop
add
iret
cmp
mov
ret
lret
jl
in
mov
jns
xchg
pop
jle
push
adc
sbb
mov
jge
sbb
ds
mov
aam
dec
cmpb
adc
rcrb
add
and
sub
dec
jns
cmc
lsl
out
scas
clc
fcmovnbe
inc
pushf
scas
cmp
out
lcall
adc
gs
ficoml
aam
push
jmp
adc
mov
fs
cmp
shlb
xor
add
in
icebp
testl
mov
dec
je
mov
lret
mov
fmuls
mov
cmp
scas
cmp
sub
or
push
inc
gs
dec
and
jl
cmc
sub
shlb
push
cmp
imul
dec
loop
sub
test
dec
dec
fs
movsb
inc
out
push
cmp
xor
sub
inc
mov
or
xor
inc
inc
mov
mov
mov
or
pop
aaa
addr16
adc
adc
xchg
lods
xor
je
loop
xor
mov
mov
jl
jnp
sub
int3
cli
xchg
adc
sub
fsubrl
mov
lods
daa
cmp
mov
jbe
sar
vpsadbw
out
jle
addr16
fistpl
mov
jno
sub
mov
aad
sub
in
addr16
int3
movsl
xor
sarl
sbbb
nop
inc
mov
inc
jno
push
icebp
push
rolb
xor
rolb
loopne
cmpsl
in
aaa
jnp
cs
lods
mov
mov
sub
push
mov
sbb
aam
inc
xchg
dec
lret
mov
loop,pt
jb
clc
inc
leave
xor
jo
xchg
outsl
push
pop
insl
pop
jnp
xchg
mov
outsl
imul
mov
imul
push
lahf
dec
xchg
loop
jp
jg
push
pop
jns
add
inc
nop
jge
mov
pusha
jp
lret
sahf
jg
inc
jns
mov
loope
fisttpll
dec
or
sbb
pop
iret
fldenv
sbb
shll
inc
movsb
ljmp
lcall
add
mov
jg
jg
lret
cmp
cmp
jg
lock
xchg
or
jmp
js
popl
ret
std
xchg
ficompl
enter
imul
mov
pop
stos
pushf
inc
dec
ret
pop
pop
or
insb
and
xor
cs
or
pop
xchg
mov
mov
outsl
mov
pop
jo
lret
cmp
fwait
jecxz
aam
fs
jbe
lahf
pushf
or
andb
sub
pop
jnp
jbe
test
mov
outsl
clc
mov
mov
push
jmp
jge
ljmp
pop
and
push
mov
cld
fstpl
or
loop
and
cwtl
call
test
iret
cwtl
mov
aas
std
mov
xchg
sbb
jb
jmp
mov
or
test
mov
add
jo
inc
pop
inc
sbb
add
jmp
icebp
and
mov
jo
inc
notb
mov
fbstp
mov
mov
cltd
mov
or
push
psrad
addr16
leave
push
jecxz
int
mov
out
cs
bound
jg
je
inc
nop
stos
rcrb
lock
fimuls
flds
ljmp
daa
inc
and
int
jp
mov
xchg
ret
and
ret
push
pop
cmp
jae
adc
jmp
lods
pop
lcall
pop
lret
cmpsl
lahf
gs
cmp
jo
mov
ret
cmp
pusha
nop
sub
in
icebp
mov
fwait
ret
cmpsl
fs
loop
adcl
mov
or
ja
cmp
fmuls
mov
psubsb
jmp
icebp
cmp
jge
xchg
lret
sti
pop
mov
mov
outsb
jg
mov
bnd
cmp
cmp
movsb
iret
inc
push
rclb
test
jnp
popa
in
lds
mov
jmp
call
repz
mov
cmp
sub
pushf
xlat
jle
cmpl
mov
add
in
fidivl
xor
ljmp
dec
lds
daa
imul
jnp
lock
fucomp
push
pop
pop
rol
mov
pop
add
mov
xchg
sahf
fisttpll
loopne
mov
sub
fistpl
pop
jl
inc
arpl
push
xchg
sub
cmc
push
fstps
pushf
mov
cli
fldl
stc
int3
scas
or
ret
cli
mov
loope
jp
and
mov
cmp
movsl
fcmovnb
roll
dec
mov
mov
enter
fdivrl
xor
outsb
aas
aad
push
test
imul
mov
js
xchg
xor
pop
xor
lock
cmp
pop
sub
imul
pop
push
cmp
inc
repnz
ret
push
fistpl
test
sbbl
mov
sub
out
and
int3
in
mov
inc
pop
adc
movb
mov
jecxz
test
iret
fs
mov
mov
pusha
jnp
inc
mov
push
lcall
cld
rcll
mov
fistl
and
sar
jle
sub
aas
fsts
jg
jno
add
jno
shrb
xchg
rclb
adc
jg
leave
push
mov
int
mov
jne
and
cwtl
inc
inc
pusha
jo
je
xchg
insb
cli
xchg
xchg
dec
les
cmp
xor
cld
and
fs
int
dec
cltd
mov
add
or
mov
insl
jg
or
jbe
into
fistpll
jge
jo
cmp
mov
pusha
sbb
fs
rol
sub
xchg
in
sbb
nop
lods
lret
js
push
stos
pusha
movsl
adc
xchg
lcall
pushf
or
test
fstpl
mov
fisttps
cld
pop
clc
jne
subl
mov
push
psubw
and
push
repnz
lock
lret
dec
dec
mov
lock
lods
lock
cld
fcoms
stos
cltd
mov
xor
jb
push
cmp
mov
cli
cmc
and
mov
mov
mov
mov
xchg
lods
or
pop
or
add
lock
inc
fwait
push
adc
sub
int
jo
xchg
jno
or
adc
jecxz
nop
push
in
fldl
adc
mov
call
push
push
insl
adc
cmpsb
dec
mov
sahf
in
xor
and
repnz
mov
push
fdivl
mov
inc
cmp
mov
pop
dec
imul
push
sbb
in
inc
insb
rorb
mov
not
add
mov
or
imul
jecxz
mov
add
outsb
jge
ds
pop
xchg
fisubrs
push
and
pop
xor
mov
shrl
push
data16
cmp
mov
adcb
sbb
push
jns
push
jge
mov
ljmp
add
aaa
cmpsl
mov
loope
push
push
lcall
adc
call
pushf
out
mov
xchg
mov
pop
loopne
mov
outsl
lock
adc
test
xor
mov
mov
fldenv
lret
sub
dec
lods
std
test
bound
lcall
pop
mov
popl
fmul
fdivl
sub
ret
mov
adc
loope
daa
xor
push
pop
loopne
mov
cmp
xchg
inc
push
repz
scas
incl
bound
add
sahf
movsl
mov
imul
imul
and
pop
in
cmp
sbb
jo
xor
cmp
inc
jno
push
xor
test
mov
jae
scas
into
and
fimull
bound
call
mov
push
dec
mov
or
shll
mov
push
xchg
fwait
loopne
mov
ds
mov
jg
jnp
sbb
sarb
pop
ret
add
lcall
repnz
shrl
pop
add
movsb
cld
filds
fs
sub
mov
add
decb
aas
sbb
int
les
xchg
andb
sbb
loopne
and
jbe
out
dec
mov
mov
es
cmc
mov
insl
pop
in
jnp
mov
xchg
movsb
dec
push
push
filds
sbb
mov
adc
scas
aam
sar
push
cs
dec
fsubr
sub
jle
ja
fsts
xchg
sbb
push
imul
hlt
mov
mov
fs
or
lds
adc
jmp
loop
nop
add
adc
mov
out
pop
inc
pop
test
mov
fiadds
cmpsb
jp
out
mov
xchg
sub
movsl
inc
shll
pusha
inc
pop
scas
stc
clc
idiv
add
popa
leave
jle
mov
test
jmp
outsb
outsl
into
mov
shlb
sbbl
and
dec
sub
fbld
dec
ds
xlat
and
ljmp
xlat
mov
incl
pop
jb
int
sbb
test
jl
jg
dec
add
dec
push
mov
xlat
dec
or
bound
mov
dec
jne
push
push
repz
xchg
pop
jnp
mov
in
movsl
sub
insb
movsl
push
push
les
add
xor
pop
inc
mov
adc
incb
fucomi
mov
fiadds
repz
out
dec
add
movsb
lret
xchg
mov
fdivl
sub
inc
mov
xor
loop
insl
sti
mov
pusha
adc
out
xor
push
pop
es
cmp
sahf
mov
mov
sbb
mov
movsb
dec
in
clc
in
in
lods
sub
loopne
adc
shrb
sarb
in
fdivrs
mov
jecxz
sub
mov
rorb
and
cmpsl
push
das
add
movsb
cmp
lods
std
dec
jge
scas
movsb
in
sub
mov
xchg
jecxz
mov
or
push
or
xchg
lods
pop
pop
outsb
jne
push
pop
pusha
das
cmp
arpl
adc
mov
and
outsl
stos
add
in
push
call
inc
pusha
pushf
jae
jecxz
push
mov
pop
mov
dec
test
xorb
pusha
push
jl
repnz
jo
fimuls
adc
and
insl
fldl
jbe
sbb
cltd
inc
outsb
in
pop
nop
mov
dec
push
gs
in
sub
xlat
mov
test
adc
outsb
xchg
aaa
int3
int3
xchg
std
dec
inc
mov
cmp
outsl
push
add
push
push
mov
mov
inc
rdtsc
jle
das
scas
aam
mov
cli
mulb
xchg
mov
ret
fldl
add
cs
mov
jmp
push
adc
cmpsl
sub
push
add
xchg
push
xchg
sbb
xchg
lcall
shlb
pop
xor
in
mov
pop
imul
incl
mov
mov
push
push
cld
divps
popf
mov
cmpl
fldl
iret
inc
cld
push
gs
jecxz
add
mov
in
push
mov
and
jge
movsl
mov
mov
mov
push
push
adc
xchg
mov
xchg
insl
pusha
aas
shrb
inc
dec
lret
jmp
stos
aad
fmull
fisubrl
imul
das
adc
jno
in
hlt
xor
sbb
gs
in
lret
js
std
in
dec
ret
sub
or
call
das
ret
mov
out
jmp
sub
inc
jne
xor
daa
stos
inc
mov
cs
aaa
mov
cmp
xchg
adc
hlt
andb
pusha
insb
add
and
mov
and
sub
mov
out
and
pop
lds
test
lds
jne
add
sub
lds
dec
insb
push
ret
jns
cmp
data16
fildll
jae
loopne
out
push
rolb
data16
and
imul
das
dec
sub
cmp
add
xchg
cli
pop
fdivrl
dec
stos
rclb
xor
mov
ds
or
add
xchg
adc
add
insb
adc
lahf
cmc
sahf
or
stos
or
sbb
sub
scas
dec
nopl
pop
rcll
loop
add
or
fbld
jl
adc
pop
push
insb
jecxz
xor
mov
lret
sub
adc
mov
mov
xchg
jnp
pop
mov
xchg
test
xor
xchg
push
push
sbb
inc
shrl
push
push
repnz
xor
shl
mov
outsl
pop
data16
movsb
inc
cmpsb
mov
in
fcmovnbe
xchg
repnz
or
dec
lods
test
popa
movsl
mov
jo
xor
mov
push
int3
xchg
mov
repnz
sub
mov
adc
sbb
pop
jns
outsb
daa
aam
cmpsl
popf
mov
inc
and
cmpsb
sbb
xchg
ss
loopne
or
sub
and
xchg
mov
repz
or
or
or
movsl
das
inc
aad
mov
or
dec
test
dec
es
push
or
dec
aad
ljmp
nop
pop
movsl
push
ret
xchg
fwait
call
xor
inc
push
fwait
add
aas
jnp
add
mov
or
lahf
pop
inc
mov
inc
add
loopne
insb
sub
imul
sbb
xor
xor
stos
push
lcall
mov
and
pop
aaa
sbb
sub
in
mov
sarl
rcrb
push
xchg
loop
int3
mov
pop
and
sbb
mov
daa
or
jno
in
je
insl
cli
rol
mov
xchg
loop
insb
push
or
dec
loopne
dec
cs
pop
aad
movsl
loope
mov
jecxz
mov
dec
push
enter
push
xchg
or
xor
cmpsb
adc
int
lcall
xor
mov
dec
mov
xchg
push
dec
xorl
jge
addr16
repnz
pop
push
fcmovbe
repz
mov
cwtl
int3
xor
in
ds
and
outsl
mov
sbb
cmp
scas
arpl
lods
mov
mov
mov
or
add
cmp
dec
mov
aam
xchg
xor
test
jnp
call
mov
rorl
pop
push
cli
sub
iret
lea
pop
pop
aaa
mov
pusha
dec
ljmp
pop
push
mov
xchg
rcr
pop
in
dec
icebp
lahf
mov
loop
add
dec
dec
or
mov
dec
in
sub
push
sbbl
popf
pop
ret
fldl
inc
rorb
mov
outsl
stos
gs
add
add
dec
fs
or
mov
test
arpl
out
adc
add
arpl
shll
xchg
cld
push
fsubl
outsl
mov
mov
insb
dec
repnz
mov
xor
pop
shl
mov
push
imul
mov
dec
mov
xlat
and
push
add
mov
jae
movlps
cmp
mov
frstor
cmp
cmpsl
inc
fsubs
inc
lahf
lahf
pop
imul
outsl
sahf
ret
add
test
jae
lret
xor
xlat
stc
leave
jno
pop
les
in
leave
xchg
xor
stos
xor
popa
jno
fisttps
cmpsl
mov
xchg
enter
dec
adc
jo
cld
lfs
lret
mov
mov
sbb
in
and
sub
out
adc
ja
stos
add
push
popa
xor
jp
aas
in
and
rorb
sub
mov
xor
push
jnp
mov
movsb
testl
jge
jns
sbb
fcomps
xorl
jo
inc
mov
dec
loopne
idivl
loope
dec
jnp
das
insb
and
out
pop
aam
mov
lods
add
arpl
sbb
cmp
leave
daa
sub
pop
dec
addr16
jle
xor
mov
enter
popa
mov
rol
cli
aam
popf
scas
and
adc
inc
jecxz
mov
mov
movsb
iret
adc
sub
dec
push
in
incl
jbe
dec
add
sti
rcrl
mov
jl
xchg
arpl
mov
xchg
dec
mov
dec
adc
aas
jb
inc
aas
cli
jno
mov
shl
fbstp
scas
shl
dec
and
mov
add
push
mov
leave
jb
movsb
jg
adc
cmpsb
add
sub
and
fidivrl
mov
stc
insb
sbb
xchg
dec
add
in
ja
xchg
rcrl
lods
in
push
aas
ret
int3
and
test
int3
or
shl
sub
movsl
sub
and
orb
ss
cmp
pavgb
repz
loope
cmp
push
in
xor
lods
mov
mov
lods
sbb
mov
movsb
nop
inc
dec
push
popf
inc
push
mov
fistpll
jo
insb
mov
int3
inc
sar
inc
sbbb
movsl
lock
out
das
out
mov
lea
sub
push
out
mov
push
outsl
inc
data16
sbb
cmp
jo
faddl
push
in
or
loop
push
mov
call
inc
push
enter
sbb
arpl
cltd
pop
add
mov
shl
lret
rcll
in
xchg
lret
pop
add
mov
loop
leave
jg
fs
imul
mov
mov
push
mov
mov
and
cmp
lahf
xor
imul
mov
int3
dec
jg
mov
push
hlt
pop
cmp
inc
fistl
lods
ret
insb
adc
and
fcoms
jae
cmpb
stos
fisubs
outsl
int3
xchg
into
push
iret
dec
in
mov
sbb
and
ljmp
adc
call
mov
pop
jae
adc
dec
ja
or
rcrl
rcrl
mov
sahf
jl
jmp
orl
popa
sub
seta
xchg
dec
mov
add
push
jmp
jne
fildl
jo
mov
pop
sti
jne
and
inc
mov
push
or
or
ret
push
leave
nop
enter
shll
adc
dec
int3
ja
and
into
push
out
sbb
arpl
jnp
sahf
xchg
ror
cld
test
sbb
stos
or
push
xor
aam
adc
js
pusha
mov
bnd
push
push
jge
fdiv
mov
frstor
dec
push
inc
sahf
fistps
xor
loopne
dec
add
xor
rorl
jne
ds
jbe
ror
jecxz
ret
lods
mov
jl
notb
add
out
push
ja
dec
jnp
out
jnp
or
or
loop,pt
test
mov
movsb
add
sti
add
xchg
pop
add
cmp
sub
das
aas
inc
and
xor
and
jp
cmp
pushf
push
sbb
or
mov
gs
xchg
adc
stos
cltd
addr16
mov
js
pop
xchg
ret
mov
repz
xor
lea
push
inc
aam
call
cmp
xlat
sub
aaa
sub
jl
loop
xchg
int
or
loop
imul
or
mov
cltd
xchg
in
add
outsb
or
cltd
inc
daa
xchg
mov
ljmp
xchg
insb
lock
or
sbb
lahf
sub
fidivrl
and
divl
fnstenv
mov
sbb
jns
mov
int3
push
in
ret
cs
stos
and
sbb
sar
jmp
sbb
imulb
mov
mov
add
fsubl
jae
adc
fisubs
mov
insb
xor
mov
and
add
lcall
in
or
sete
dec
pushf
add
ljmp
or
imul
xor
inc
cwtl
ljmp
xchg
jecxz
pushf
cwtl
mov
cltd
or
sub
mov
outsl
pop
cwtl
pop
out
jle
ss
and
popf
test
mov
mov
cmpsb
mov
cmp
xchg
cmp
mov
imul
test
fildll
pop
jae
mov
mov
sahf
mov
fwait
shlb
pop
fildl
sbb
mov
xorb
aaa
fbstp
daa
test
sbb
ja
and
pop
repnz
lcall
and
xlat
or
sbb
sbbb
sub
mov
hlt
es
mov
ljmp
mov
adc
and
dec
xlat
repz
mov
test
cld
sbb
in
xor
cwtl
mov
jae
imul
stc
jb,pt
xor
add
push
mov
fs
adc
sub
mov
mov
pop
pop
test
fists
std
sub
orb
mov
mov
aas
push
and
sub
je,pt
add
xchg
sarb
shll
mov
aas
cli
enter
cs
inc
jo
lods
nop
mov
adc
xchg
adc
xor
mov
aaa
dec
icebp
les
mov
sbbb
outsl
mov
xchg
push
jmp
xchg
imul
pop
rorb
mov
and
scas
divl
mov
cmc
clc
mov
cmp
lds
push
in
mov
dec
push
adc
adc
mov
pop
jl
inc
rclb
dec
mov
sbb
sbb
ja
push
cmp
pop
int
test
cmp
test
fidivl
pop
inc
or
cmp
arpl
into
lret
mov
ret
cmp
ljmp
stos
jge
pop
hlt
dec
mov
lods
shlb
out
jns
lret
out
into
jnp
or
daa
dec
xor
call
xchg
pop
pop
test
call
pusha
sub
cmp
cmpsl
lret
lret
pop
loope
push
mov
lods
and
popa
adc
push
jne
dec
mov
pusha
dec
jne
mov
imul
out
mov
add
cli
pop
in
stos
mov
sub
jl
pop
addl
ss
lret
mov
inc
push
cwtl
push
xchg
stos
call
mull
nop
test
push
movsl
mov
es
xor
push
and
sbb
imul
out
dec
xchg
xor
push
jge
mov
push
lods
fcmovnbe
ljmp
std
ficomps
mov
ja
orl
and
fsts
lea
adc
cs
xchg
adc
sub
and
add
push
jns
mov
inc
push
sbb
jno
mov
add
lret
int
fs
repnz
xor
cmpsl
rorl
xor
mov
sbb
pop
loop
inc
xor
jmp
hlt
xchg
dec
jmp
push
or
push
adc
call
movsl
inc
or
js
cmp
add
adc
int3
ja
mov
dec
ret
js
aam
dec
in
jg
pop
rol
and
and
xorb
dec
push
push
daa
out
ds
mov
jno
xor
std
push
pop
insl
sub
repz
xchg
clc
in
mov
jae
fstps
inc
mov
pop
fldenv
inc
sahf
add
cmp
testl
sub
xchg
ds
jp
ret
sub
insl
stos
cmp
scas
popf
sbb
push
inc
cmp
pop
sti
insl
pop
inc
push
mov
in
inc
jb
xchg
cmpb
movb
pop
lret
stc
cmp
not
pop
pop
and
mov
mov
idiv
fstps
sbb
pop
outsl
scas
push
mov
xchg
cld
repz
call
and
dec
ds
adc
pop
inc
mov
and
jp
pop
or
add
cwtl
inc
sahf
insb
test
ret
arpl
lods
jns
cmp
mov
bnd
sub
mov
sahf
nop
dec
std
pop
xor
in
mov
mov
jp
stos
mov
out
insb
in
ds
sahf
push
jne
icebp
lahf
add
cmpb
cmp
ror
pop
jmp
sbb
scas
pop
in
test
inc
adc
sub
incl
lock
fwait
sbb
int
lods
clc
cmp
push
add
xchg
and
andb
rcrl
sbb
jno
and
mov
lret
loop
shl
shl
mov
xor
jp
cmc
pushf
sbb
pop
in
fcomip
dec
add
in
sti
cmpsb
nop
mov
popf
mov
sbb
roll
mov
lds
jb
mov
cs
xor
lods
sahf
adc
aaa
mov
xor
sahf
xchg
xchg
xchg
lcall
sbb
sarl
lds
mov
inc
rorb
inc
xor
loopne
hlt
xor
inc
ds
jo
push
sub
mov
gs
ds
jbe
and
push
mov
mov
mov
mov
loope
repnz
pushf
mov
dec
xor
lcall
rolb
clc
add
pop
and
xchg
cmp
aam
jne
sub
bound
js
shll
cmp
sub
mov
scas
inc
out
aaa
and
divb
test
mov
inc
insb
scas
shlb
repnz
lcall
mov
cwtl
pop
aam
fs
fidivrs
in
scas
xchg
push
negl
cmp
movsb
imul
mov
test
aaa
fwait
push
icebp
push
sub
shrl
outsl
pop
mov
push
enter
int3
cmove
and
mov
cmpsl
lcall
add
fists
and
dec
aad
mov
xchg
mov
cltd
cmc
inc
xor
je
arpl
mov
mov
popa
subl
dec
mov
push
cltd
outsb
mov
xchg
es
jne
sbbb
aaa
xchg
jmp
imul
push
add
pop
loop
inc
mov
bound
ret
cmp
andl
push
add
js
stc
add
clc
sbb
stos
popf
test
xor
jno
ret
loopne
sbb
fs
or
mov
fnsave
les
adc
testl
int3
mov
rcrl
xchg
inc
mov
jmp
mov
dec
je
adc
clc
je
into
adc
fwait
dec
daa
lret
daa
das
shll
data16
adc
add
mov
enter
mov
mov
fsave
sbb
sbb
mov
xor
clc
and
mov
in
sbb
jnp
mov
push
xchg
nop
fistpl
dec
sahf
test
out
scas
jecxz
fstl
cmpsl
or
or
rclb
dec
gs
or
shrl
add
testl
icebp
js
lret
std
cwtl
cmpl
das
outsl
jl
mov
movsl
jp
xor
add
ja
or
scas
xlat
out
or
pop
dec
addr16
leave
fcoms
clc
in
shlb
mov
test
add
xchg
xchg
jae
daa
add
pop
es
adc
push
in
mov
mov
je
clc
gs
cli
add
pop
ljmp
lret
add
jmp
adc
add
xor
xor
xchg
cmp
divl
shll
jnp
add
pop
notb
rolb
adc
mov
lock
push
mov
cmp
mov
lea
sub
xor
add
cmpl
lcall
cmpsb
popf
ds
sbb
xor
stos
jg
jnp
xchg
icebp
pop
call
sub
and
test
inc
cmp
mov
out
fsubrl
jecxz
xchg
mov
or
add
add
cmp
jp
push
std
cmp
push
roll
clc
das
mov
push
push
dec
jmp
jmp
sar
pop
jecxz
data16
dec
rcrl
mov
pop
hlt
jbe
inc
stos
sub
lods
cmp
push
mov
jecxz
inc
adc
adc
mov
pop
idivl
loope
dec
add
push
fimull
jne
and
popa
repnz
push
or
sbb
cmpsl
and
ficoml
out
mov
push
add
cmp
dec
sbbl
call
test
jo
lea
dec
pop
xor
lock
cs
popf
jmp
stos
push
inc
jp
inc
pop
popa
sti
popa
in
cmp
push
ror
push
adc
sub
adc
sub
sbb
or
dec
fcompl
sbbb
jbe
fildl
clc
notb
inc
fisubs
pop
das
aam
mov
andb
jl
shlb
jecxz
cmp
mov
leave
lods
jecxz
test
cmc
aam
sub
lock
add
xchg
fwait
mov
mov
inc
mov
dec
jmp
push
dec
shrb
or
xlat
fs
lock
fidivrs
cmp
mov
test
testl
add
mov
cld
inc
sbb
loopne
stos
outsl
mov
js
mov
arpl
mov
aaa
jno
mov
pop
xor
arpl
div
or
sub
js
inc
mov
mov
sub
repnz
sub
or
les
outsb
add
dec
pushf
jno
mov
ljmp
orl
adc
sarb
imul
xchg
xchg
loope
pop
imul
out
pop
faddp
jbe
adc
pushf
pushf
test
cmpl
mov
rcr
les
fiaddl
std
sub
popf
cwtl
pop
jne
push
xor
pushf
jmp
fmuls
shlb
neg
in
mov
mov
ljmp
cmpsl
pop
xchg
subb
or
xchg
cmp
cmp
hlt
cmp
pop
jle
repnz
jge
xor
das
pop
xchg
out
andb
xchg
popf
imul
dec
pop
xchg
mov
fimull
or
sbb
and
into
pop
fs
stos
jae
xchg
out
and
cwtl
mov
mov
push
jle
jle
inc
ds
outsb
inc
push
or
inc
xchg
cmp
xchg
inc
in
int3
lret
dec
movsl
cmpsl
xchg
mov
mov
sub
daa
inc
jne
scas
and
mov
mov
push
loop
shlb
sarl
adc
jo
xchg
xor
cs
addr16
xor
sub
cmp
daa
mov
pop
loop
adc
out
in
pop
les
pop
insl
insb
rcl
adcl
cmp
in
int
cmp
incb
sbb
or
in
mov
ret
add
mov
pop
push
xchg
sbb
imull
dec
push
ret
cmpsb
mov
je
lods
daa
mov
ss
movsb
sub
or
inc
repz
xchg
sbb
jae
out
rorb
cmp
scas
call
sub
sahf
and
push
fdivs
inc
das
push
jo
mov
popa
jns
inc
cs
hlt
outsl
leave
lret
sub
movsl
nop
mov
sbb
dec
call
sub
pop
pop
jae
push
mov
pop
mov
jg
scas
adc
ss
mov
sbb
push
gs
push
imul
bound
sub
aas
out
lds
push
mov
and
push
repz
frstor
lcall
aas
dec
ljmp
dec
pop
and
bound
fcmovu
dec
iret
mov
mov
xchg
cmp
clc
sahf
mov
insb
jl
pop
subb
xchg
push
sub
shr
fdivp
movsb
lahf
fldt
fldl
push
sti
ja
dec
lods
fldenv
ds
and
mov
inc
pusha
cmpl
out
test
out
mov
jp
je
movsb
push
dec
iret
xchg
xor
push
in
das
pop
lahf
dec
fcomp
rcrl
pop
repnz
jmp
jmp
mov
adc
scas
arpl
jmp
ljmp
mov
adc
jge
xchg
jmp
loopne
es
dec
inc
fiaddl
add
adc
icebp
and
mov
test
jge
lret
in
in
sub
jmp
xchg
inc
aam
pop
test
jae
and
lcall
mov
mov
call
jo
mov
mov
mov
cmp
mov
mov
pusha
into
nop
inc
into
repnz
insl
push
sti
in
das
rcl
ret
cmpsl
mov
loop
jl
loop
push
xchg
cmc
xchg
lahf
std
cs
add
repz
faddl
popf
loope
je
in
xchg
ret
jb
or
dec
scas
outsl
ljmp
push
push
jl
lods
pop
out
xchg
inc
and
mov
out
dec
and
ret
mov
int3
cwtl
xchg
jae
sarl
push
int
adc
test
cmc
fwait
popf
mov
add
les
pop
mov
fimuls
ret
or
cmp
push
nop
cmpl
push
out
adc
js
shll
mov
cli
fcompl
lods
jns
out
stos
inc
shrl
scas
lret
fisttps
add
icebp
adc
pushf
mov
loope
out
xor
jmp
ret
test
movsb
mov
jl
mov
stos
mov
jb
out
mov
hlt
arpl
add
insb
inc
sbb
jmp
push
pop
xchg
mov
outsb
inc
push
int
mov
stos
jns
sub
mov
pop
cmp
sar
int3
ret
xchg
jmp
les
imul
jmp
andl
pop
mov
cwtl
push
out
xor
ds
in
adc
movsl
hlt
fs
int
cmpsl
inc
pop
pop
cmp
ret
push
andl
sub
push
addr16
jne
popa
fisttpl
aad
adc
sbb
pop
je
cltd
out
cmp
mov
jl
pop
lret
sub
xchg
nop
clc
pop
xchg
nop
mov
sahf
lock
xor
add
neg
sti
clc
int
ss
addb
mov
sub
es
dec
cmp
or
mov
adc
fcoms
std
and
xor
jecxz
inc
pusha
dec
xor
mov
jnp
rorb
pusha
enter
shl
and
mov
or
xor
rcll
cld
dec
adc
lahf
mov
push
fiaddl
jecxz
and
mov
jb
scas
sub
pushf
test
xchg
insb
push
sti
xor
popf
cmp
mov
sbb
fldcw
mov
orl
pusha
and
insb
daa
clc
jge
mov
cwtl
pshufw
repnz
and
dec
jl
dec
or
add
dec
sbb
outsb
loope
aas
sbb
ss
dec
fisubrl
mov
loope
dec
adcb
fdivrs
addl
mov
push
outsl
mov
adc
fdivrl
sbb
mov
mov
cmc
pop
or
sub
lods
rcrl
inc
inc
jnp
loope
aad
outsb
fildl
stos
sarb
fnstsw
dec
push
mov
dec
test
stc
out
sbb
xor
shll
lea
jo
jl
dec
repz
lea
cmp
sub
push
or
loop
mov
arpl
mov
std
out
jbe
mov
push
dec
movsl
fstps
movsl
pusha
mov
inc
insb
adc
or
sbb
or
jno
push
ret
dec
jl
gs
push
out
pop
add
and
scas
sti
adc
pushf
dec
data16
cmp
test
jns
gs
jl
lods
test
out
jle
in
dec
push
inc
inc
mov
mov
imulb
push
stos
and
mov
mov
adc
mov
ja
lret
jns
addr16
lret
pop
push
sti
mov
mov
pop
and
jg
sahf
mov
adc
jne
jb
stc
dec
jb
cld
and
xchg
arpl
mov
jbe
ljmp
rcr
mov
adc
insl
leave
jne
mov
mov
out
push
lahf
adc
mov
int
sbb
subl
sub
ja
jno
imul
push
jb
pop
pop
push
in
sbb
seta
mov
xchg
cmp
ret
mov
mov
mov
cmpb
dec
and
dec
mov
inc
in
negb
xchg
and
mov
push
xchg
rorb
arpl
fsubrl
xor
mov
in
pop
cs
data16
or
inc
and
sbb
je
sub
imul
ja
dec
cmp
and
pop
movsl
cs
mov
push
and
fdivrs
fadd
xor
loope
addl
push
dec
mov
push
mov
xchg
or
adc
aad
push
pop
lret
insl
add
sbb
movsb
clc
cld
sub
ja
iret
pusha
out
mov
fnstsw
mov
add
mov
gs
enter
mov
xor
lock
mov
mov
addb
mov
lahf
lea
ja
lea
pop
mov
out
into
bound
push
sbb
mov
mov
and
cmp
jmp
xchg
jl
imul
ss
push
mov
push
lahf
or
or
or
sbb
jecxz
pop
push
sub
mov
or
add
aas
pop
je
jg
lahf
pop
and
xchg
fwait
ret
mov
int3
dec
lahf
lods
cmp
shll
xor
add
ret
push
push
dec
dec
rorb
aam
je
inc
or
sbb
inc
lahf
pop
adc
push
pop
dec
out
in
es
dec
inc
sub
aam
mov
mov
dec
shrb
and
mov
or
add
mov
cmp
or
jecxz
lds
mov
add
rcrb
mov
out
mov
or
mov
and
xchg
sbb
cmp
orl
xchg
out
fstl
fdivp
mov
scas
ss
movsb
loop
push
ret
popa
push
jb
les
and
xchg
enter
jo
sar
mov
inc
push
jge
aas
inc
pop
neg
lods
rclb
lret
mov
cmp
pop
icebp
leave
xor
stc
fwait
mov
inc
lock
ss
inc
into
arpl
mov
adc
push
mov
lcall
pop
sahf
jl
pop
mov
jns
sbb
jns
int
outsl
or
loopne
shrb
iret
dec
scas
add
pop
cwtl
cli
mov
into
fists
cmp
loopw
test
pop
mov
hlt
fcomps
ljmp
sub
lods
test
fnsave
or
es
orl
loop
push
sbb
fwait
add
push
inc
mov
fdivl
or
jecxz
fdivl
mov
sub
scas
orb
in
sbb
add
xchg
flds
inc
aas
mov
shlb
add
in
mov
lods
bound
pop
pushf
push
mov
cmpsb
in
arpl
push
ss
test
gs
les
sbb
push
sub
xchg
adc
cmp
lock
adc
jmp
dec
mov
test
and
add
divl
inc
sbb
ss
in
inc
jne
inc
jecxz
sub
js
stos
ja
es
adc
pop
sbb
dec
fmull
pop
jmp
hlt
cwtl
xchg
mov
pop
mov
dec
dec
test
add
pop
jecxz
ja
or
jb
int3
pop
bound
dec
mov
iret
sti
push
push
pop
push
mov
jl
testl
jne
inc
sbb
outsl
dec
ss
lods
xchg
jmp
into
repz
lret
adc
cmpsl
scas
popa
mov
add
or
sbb
arpl
sbb
pop
mov
es
les
and
adc
adc
mov
testl
inc
add
adc
mov
sbb
cld
xchg
scas
pop
js
insb
push
push
ljmp
adc
mov
arpl
mov
sbb
add
pop
pop
inc
mov
cmp
insb
scas
fbld
jge
mov
mov
push
cmp
push
fwait
in
mov
mov
leave
stos
shll
shr
sbb
pusha
xchg
out
test
sbb
pop
push
mov
pusha
pop
shrb
icebp
jae
cli
sbbb
xchg
xor
pop
adc
fildl
or
adc
imul
jne
xchg
adc
mov
cmpsl
lds
mov
mov
mov
push
cmp
inc
pop
mov
cld
int
clc
and
adc
pop
cmp
sbb
sbb
cltd
and
ret
jg
js
ds
enter
jno
imul
icebp
jb
adc
mov
adc
cmp
push
inc
cmp
inc
jg
jmp
mov
aas
adcb
imul
pop
jmp
and
or
sub
mov
mov
xchg
cld
popf
push
call
loop
pop
sbb
jb
fmul
push
insb
aas
and
pushf
jl
ja
shrl
push
out
lahf
jl
enter
das
jmp
push
xorl
and
mov
and
push
leave
imul
into
mov
dec
das
cli
call
pop
out
stos
jo
pop
out
mov
imul
test
scas
aam
pop
dec
mov
imul
sbb
loop
fnsave
push
ljmp
ficoms
lahf
cmp
jecxz
push
mov
push
test
inc
test
fildl
in
not
inc
not
ficoml
jne
aad
or
fnstsw
out
mov
push
gs
and
cmpsb
mov
leave
loop
cmp
pop
cmp
jbe
cmc
add
dec
andb
rol
jg
pop
clc
enter
push
sub
xchg
push
into
out
xor
adc
add
adcb
dec
pop
inc
xchg
iret
dec
stos
add
cmp
stos
scas
or
cmpsb
mov
lcall
sub
add
cmp
out
add
cmp
mov
lahf
test
cmp
fldl
adc
pushl
insb
aad
jp
mov
dec
sbb
imul
or
vshufps
popa
cmc
sbb
adc
push
fcoms
xchg
out
std
ds
push
jnp
bswap
pop
xchg
imul
xchg
movsb
mov
xchg
leave
pop
aas
xchg
mov
push
cltd
movsb
inc
in
xchg
mov
stc
inc
and
xchg
fisubrl
mov
adc
jl
rolb
arpl
and
sub
insb
sbb
fstpl
xor
dec
out
outsl
retw
push
push
xor
shlb
jne
sbb
pop
push
and
sbb
js
dec
mov
test
cmpsl
loopne
jg
fwait
xor
xchg
adc
jo
xor
adc
inc
xchg
jecxz
push
push
fsubrl
ret
jno
cmp
in
bound
subl
jg
scas
dec
lahf
sub
jecxz
lods
outsl
and
mov
loopne
mov
cld
xor
icebp
mov
jns
sbb
push
movsb
jecxz
pop
or
inc
ljmp
jns
push
push
daa
inc
sbb
push
inc
jns
pop
loop
sub
test
push
xchg
push
insl
dec
aad
push
jbe
add
faddp
ret
cltd
lds
outsl
loop
dec
cmp
push
icebp
cmpsb
out
nop
mov
lea
or
push
cli
mov
in
fwait
dec
cld
pop
add
in
inc
stos
sbb
outsb
je
xor
out
fs
jnp
int3
aad
and
inc
hlt
addr16
lods
idiv
jb
cmp
std
out
subl
pop
cwtl
mull
sub
xor
xchg
dec
and
popa
aam
decl
lret
cmp
test
testl
jno
dec
pop
sub
fbld
std
cld
mov
jg
pop
adc
or
fsub
adcl
into
sub
inc
std
aaa
cmp
bound
leave
fsubrp
fs
mov
and
sub
rcrb
sbb
and
ds
dec
stc
das
bound
pop
xor
mov
mov
or
repnz
sub
es
sahf
fisubrl
adcb
add
out
cmp
push
push
rorl
mov
dec
movsl
push
and
js
and
das
mov
mov
xor
mov
loope
sub
aas
rcr
xchg
jl
dec
jg
adc
lods
or
insl
push
mov
mov
daa
pop
sub
int3
mov
xchg
sub
or
add
ss
push
outsl
inc
outsl
outsb
je
pop
call
lret
add
pop
xchg
inc
mov
mov
jmp
and
stc
mov
xchg
repnz
cwtl
fidivs
jmp
popf
mov
jns
mov
imul
lea
sub
inc
mov
pusha
inc
xor
popf
repz
push
movsl
insb
stc
xchg
inc
clc
je
js
pop
mov
popf
lret
jl
mov
cmc
insb
cli
out
repz
pop
ror
jge
repnz
hlt
add
push
pop
es
mov
adc
lods
or
int
push
in
mov
mov
xchg
rorb
and
out
sbb
aad
jl
ja
jecxz
mov
sub
idivl
inc
imul
mov
sub
push
xor
aam
inc
push
pop
in
std
sub
pop
rcrl
mov
mov
es
add
mov
std
mov
or
dec
or
cmpsl
push
xchg
ljmp
andb
or
add
fwait
xchg
and
andb
inc
mov
cmp
clc
lds
popa
ss
movsb
xor
incl
sbb
sbb
stos
test
fs
std
js
jbe
mov
jb
insl
jo
pop
push
lcall
aaa
mov
sbb
loopne
out
xor
pushf
inc
or
lret
jb
or
orb
push
loope
cmp
xor
fdivs
xor
cli
inc
scas
inc
shlb
les
pop
mov
mov
into
ret
pop
pushfw
je
mov
leave
testl
scas
popa
and
mov
mov
cmc
insl
call
dec
dec
sahf
push
outsb
inc
dec
fs
pop
jp
mov
fsubs
adc
shrl
and
rcl
adc
and
and
xor
enter
ffree
lea
js
or
jle
dec
fadd
lock
and
cmp
cmpsl
pusha
jb
nop
cmp
jecxz
cmpsb
push
daa
or
cmp
push
inc
xchg
imul
sar
mov
pop
gs
lods
fdivrp
xor
sub
dec
dec
xchg
sbb
mov
push
stos
out
sub
cmp
test
push
pop
sub
ret
insb
and
xorl
popa
add
push
cmp
sub
adc
sbb
je
pop
clc
pop
push
pop
hlt
adc
outsb
lods
in
mov
and
in
sub
aaa
jecxz
dec
xchg
sub
push
push
test
push
push
inc
leave
dec
les
imul
inc
xchg
jb
shl
popa
jno
and
mov
sbb
sub
mov
ja
mov
push
fwait
pop
sbb
pop
out
mov
jbe
adc
adc
cmpl
sbb
lock
addr16
jnp
cli
or
incl
rclb
adc
nop
shll
xchg
loopne
adc
push
push
clc
inc
aad
out
mov
xchg
out
jecxz
dec
cmp
jg
jbe
out
fucomip
pop
xchg
int
add
fdivl
das
test
out
es
add
gs
pop
add
jmp
dec
or
jae
insl
cld
test
je
lds
rolb
imul
nop
je
xchg
fmul
fs
jnp
loope
xchg
xlat
shrl
test
repnz
ds
punpckhwd
clc
push
sbb
xlat
je
sbb
cmp
enter
sub
adc
push
sub
mov
push
ja
dec
mov
loopne
js
lahf
jle
adc
aas
addr16
sti
loope
lret
aad
cmp
push
sbb
divl
pop
cmp
lods
stos
push
mov
mov
lods
sbb
xor
iret
sub
mov
jmp
mov
aad
fnsave
out
sbb
test
arpl
imul
inc
jbe
cwtl
div
inc
sub
movsl
popf
and
xchg
les
pop
stos
loopne
and
mov
push
adc
decl
sub
shlb
adc
fdivl
xor
xor
pop
jmp
popf
lcall
adc
loope
in
pushf
mov
aam
enter
fisubs
fildll
inc
and
cmp
jg
stos
sbbb
cltd
cld
sub
push
cmc
push
jle
jne
inc
out
pop
mov
sbb
into
in
mov
andl
mov
push
and
add
in
pop
call
inc
rorl
dec
mov
in
mov
and
call
shrb
repnz
ret
mov
mov
clc
push
lret
negb
jp
pushf
hlt
mov
add
dec
test
push
push
popf
inc
dec
cmpb
lahf
dec
rcll
mov
and
repz
xor
mov
lods
mov
scas
leave
mov
outsb
js
adc
push
fistl
cs
mov
mov
cmpl
data16
std
mov
dec
sub
cmp
push
ds
xor
sub
xor
mov
orb
mov
test
push
jecxz
jecxz
inc
loope
sbb
inc
fcom
sub
xchg
push
ret
add
pusha
es
fmull
adc
or
mov
or
out
lods
ret
fwait
das
adcl
mov
in
addr16
jmpw
lea
xchg
jne
sub
mov
bound
cmpsb
jle
jg
cli
cli
mov
loop
mov
jecxz
inc
mov
sub
in
push
xchg
repz
push
mov
pop
xchg
inc
and
lods
movsl
fwait
repnz
fwait
ret
inc
sub
cmp
lahf
pop
or
popf
ljmp
mov
mov
adc
adc
leave
cmc
hlt
shrb
pop
jo
pop
cli
imul
jb
arpl
in
or
in
mov
fs
cmp
jl
out
cmp
stos
dec
mov
inc
dec
add
mov
xchg
sub
cmpb
int
lds
lret
les
in
cli
add
push
mov
pop
sbb
cltd
inc
inc
cs
xlat
mov
inc
lcall
sahf
mov
imul
out
cmp
mov
adc
jge
sahf
and
lock
dec
fiadds
xor
pinsrw
ds
mov
pop
push
pop
clc
adc
xor
push
sbb
or
lea
cs
sub
idivl
lcall
fldenv
cli
mov
inc
mov
aaa
jb
pop
stc
mov
stos
gs
mov
inc
mov
jo
jno
jno
in
pop
cmp
fisubl
jns
xor
pop
inc
sub
xchg
int
aaa
adc
sub
aam
repz
out
stos
adc
add
popf
xchg
and
or
push
push
mov
loop
xor
push
jae
dec
and
mov
aas
enter
dec
fisubrl
cmp
push
sub
imulb
popa
stos
and
inc
rcl
mov
pushf
lcall
aad
cmpsb
lods
mov
and
xor
cmp
sbb
movsb
ret
sbb
mov
imul
out
jl,pt
cmp
sub
andb
outsl
push
push
mov
add
fistpll
xchg
stos
mov
insl
aam
into
insl
mov
repnz
pop
stos
xor
and
inc
adcb
negl
xchg
inc
mov
push
cltd
sahf
inc
mov
sbb
out
fiadds
push
adc
add
ss
ror
jne
test
cmp
jg
lret
jo
pop
add
mov
dec
inc
cltd
clc
inc
std
xchg
inc
js
test
mov
jno
jp
insb
ret
xor
push
nop
loopne
insl
mov
jmp
in
sub
inc
jl
hlt
enter
ret
clc
vmovlpd
mov
pop
xchg
sub
data16
pusha
addr16
movsl
dec
mov
sbb
cmp
insb
sbb
test
test
rcr
sub
dec
xor
mov
fisttps
or
adc
jbe
xchg
sahf
popf
adc
pop
aas
fnstenv
xor
roll
shl
jmp
insl
imul
in
hlt
jno
out
xchg
out
cmc
adc
fldl
mov
cmpsl
iret
fwait
and
sub
push
push
fisubrl
mov
dec
push
shll
cs
outsb
shr
mov
ret
push
enter
into
lcall
mov
pop
dec
and
and
adc
fwait
push
js
xorl
jle
clc
xchg
cmp
mov
pop
mov
fistpll
std
pop
sub
jmp
jp
jmp
mov
jo
into
dec
inc
cltd
and
sub
mov
sub
sbb
ficompl
mov
mov
outsb
rorb
mov
pushf
mov
jbe
and
cmpsl
lea
repnz
pop
sbbb
insl
sub
mov
jo
jmp
mov
repz
scas
or
adc
nop
adc
or
cld
sti
or
call
push
push
mov
ja
dec
popl
xchg
push
push
jl
popa
daa
jne
adc
in
int3
movsb
push
jl
rorb
pop
xor
test
dec
mov
and
test
hlt
mov
pop
xchg
push
add
sub
dec
sbb
shlb
xlat
xor
loop
mov
addr16
aas
mov
mov
mov
sbb
test
dec
mov
out
std
sbb
cmp
and
and
push
adc
add
cmp
cmp
rclb
jno
cmp
shll
testb
scas
push
pushf
sbb
pop
and
sub
bound
jle
sbb
repnz
jecxz
ret
xchg
jle
incb
pop
lret
inc
add
inc
sti
jge
mov
and
inc
mov
dec
sub
xchg
xchg
fwait
cmp
daa
lods
or
pop
insl
pop
sbb
xchg
sbb
stc
mov
xor
outsb
jle
imul
in
mov
mov
rcl
cmp
dec
mov
imul
cmp
push
jo
rcr
push
sbbb
inc
adc
pop
arpl
ja,pt
lret
xor
and
and
jb
cmpsb
out
mov
fdivr
jmp
adc
and
dec
pop
mov
jnp
mov
dec
lods
cmp
sub
cmp
in
gs
sbb
lea
lret
sub
jo
mov
push
jbe
pop
ds
test
xchg
adc
lods
xchg
fstpt
mov
pusha
aaa
sub
cmp
mov
mov
push
jle
push
pushf
insb
rclb
xchg
icebp
xchg
and
jnp
pop
sub
mov
xchg
stos
jbe
orl
push
dec
pop
pop
jbe
or
cmp
pop
outsb
addl
xor
cmpsb
pop
aad
push
cmp
gs
arpl
rorl
fs
push
inc
cmc
jmp
sub
mov
ss
jns
les
addr16
lahf
incl
into
out
pop
icebp
jb
bound
call
icebp
jo
push
jo
mov
or
cwtl
call
sbbl
and
clc
mov
dec
fistps
stos
pushf
mov
jno
xor
mov
negl
jns
daa
push
cmpsb
imul
in
std
rclb
lds
notb
addr16
mov
movsb
jo
mov
popa
lret
cmp
xchg
xchg
mov
xor
adc
decb
repnz
push
lods
adc
push
mov
sub
pop
rcrb
xchg
adc
inc
mov
test
xchg
push
mov
aas
lret
into
push
hlt
inc
push
mov
mov
cs
mov
das
loope
xchg
push
lea
dec
jecxz
jecxz
push
adc
lea
lret
jecxz
aaa
push
sbb
test
add
cmpb
loopne
shl
push
push
push
cmpsl
movsl
dec
or
add
into
rcrl
jae
cwtl
sbb
jp
mov
sbb
fisttpl
cli
adc
hlt
pushf
push
scas
fnstcw
push
and
mov
sub
out
inc
repz
popf
fimull
mov
xor
push
xor
dec
or
dec
aas
and
fs
xor
or
sub
imul
sub
pop
dec
in
push
and
scas
popf
call
sti
lahf
xchg
or
mov
mov
outsl
cmpb
lahf
lea
sub
jae
mov
lock
jmp
push
push
or
call
nop
jns
sub
push
fwait
cmp
loopne
fmulp
jbe
mov
pop
xchg
mov
js
sbb
xchg
repnz
mov
mov
mov
sub
out
cmp
dec
stos
add
xor
hlt
xchg
test
push
ljmp
sbb
inc
xchg
test
pop
decb
leave
sbb
ljmp
xorb
cmp
in
or
mov
nop
push
dec
outsb
jns
test
mov
xchg
push
fidivrl
loop
insb
lods
pushl
mov
add
xor
fisubl
ss
scas
jmp
or
add
xorl
push
decl
xchg
dec
fisubrl
or
sbb
fwait
mov
mov
dec
inc
loop
pop
pushf
cmp
int3
dec
fdivs
add
arpl
push
sbb
pop
cmpsb
insl
mov
dec
fcoms
inc
sub
add
xor
andl
cmp
in
push
stos
leave
idivb
cmp
mov
ret
ds
and
mov
shlb
xor
je
std
jmp
dec
lods
xchg
popf
cmp
adc
and
and
ffree
and
dec
mov
fwait
push
mov
rcrb
mov
and
shlb
in
push
mov
mov
xorl
jl
lea
pushf
mov
pop
test
sub
cld
mov
sub
add
lods
cmp
adc
loopne
leave
test
hlt
dec
shll
cltd
xor
cmp
push
rorl
clc
cmp
jnp
mov
jl
pop
mov
imul
aas
cmpsl
mov
stc
push
dec
out
mov
sahf
arpl
pop
adc
cli
imul
popa
xchg
in
fdivs
xchg
cld
adc
mov
jb
int
daa
pop
mov
mov
lahf
fimull
xchg
xchg
std
dec
sbb
adc
adc
pop
sbbb
addr16
mov
ret
data16
pop
mov
xlat
pop
inc
stos
in
test
push
insb
push
insl
popf
fs
insl
mov
enter
lret
dec
mov
adc
fcomps
xor
add
mov
in
insb
mov
or
sbb
js
xchg
jne
pop
jl
cmp
mov
lock
push
sti
repz
cmc
lock
hlt
aam
je
mov
xchg
pushl
sbb
into
stc
sub
les
cld
call
nop
jmp
mov
not
dec
orb
repnz
fwait
mov
mov
xchg
mov
pusha
mov
dec
mov
icebp
jge
push
push
sub
ret
mov
push
add
popl
int
cmpsb
incb
pop
sar
mov
loopne
inc
sub
xchg
sbb
pop
xchg
push
ret
insl
cmp
insb
mull
das
insb
shlb
lahf
push
mov
sbb
lret
cmp
into
nop
xchg
pop
sahf
pop
nop
mov
sti
nop
pop
adc
outsb
and
rorb
mov
insb
sbb
scas
call
in
pop
inc
bound
pop
push
push
ja
cs
sub
cmp
aas
loop
dec
or
mov
pop
cmp
dec
add
ret
or
adc
in
jbe
loopne
aam
xor
sub
mov
cwtl
push
imul
pop
jmp
out
jl
dec
cmc
mov
jmp
sahf
cmp
xchg
sbb
pushf
int3
or
jbe
pop
jnp
dec
stc
pop
mov
push
cmp
xchg
xor
pop
adc
sbb
sbb
cld
pcmpgtd
pushf
clts
cmpsl
aaa
xchg
mov
jg
mov
stc
dec
lds
sbb
das
fwait
in
icebp
cmp
fidivs
jl
outsb
cmp
xchg
pushf
push
or
mov
jp
xchg
ss
mov
loope
in
imul
pop
jecxz
call
and
gs
add
mov
shll
sahf
push
cmpsl
mov
jne
ret
repz
xor
leave
push
push
scas
add
std
sbb
adc
enter
xchg
pop
les
test
sub
pop
lahf
dec
push
loope
loopne
push
add
push
sbb
inc
test
pop
cmpsb
inc
in
scas
mov
outsb
ds
lret
std
popa
jns
movl
hlt
jbe
fnstcw
dec
adc
sub
loop
aaa
xchg
rorl
dec
push
xchg
push
mov
pop
fmuls
jle
cs
add
mov
fsubl
repz
cmp
sub
jae
adc
jle
pushf
cs
xor
dec
outsb
push
rolb
cmovp
or
test
aad
jge
mov
les
pop
push
loopne
pcmpeqd
ret
dec
dec
leave
mov
push
push
xor
std
popa
jl
stos
clc
lret
inc
dec
xor
jmp
cltd
and
arpl
bound
xchg
and
add
jg
shl
cmp
mov
push
out
test
jns
jecxz
in
add
mov
mov
or
adc
incb
xchg
lods
and
movsl
adc
repz
inc
iret
hlt
cltd
and
add
pop
xchg
push
es
outsb
lcall
lds
adc
push
aam
xor
dec
js
cmpsb
add
movsb
add
into
xchg
xlat
sbb
pop
pop
jmp
sahf
hlt
lock
aas
and
scas
sub
sub
push
pusha
cmp
add
lods
dec
push
cmp
jecxz
in
sbb
sbb
aam
mov
ret
loopne
pop
dec
cld
mov
mov
out
mov
cmp
inc
xor
stos
mov
xchg
in
ds
mulb
int
clc
mov
xchg
jnp
scas
iret
aaa
sbb
pop
stos
sbb
scas
arpl
dec
mov
cmp
and
outsb
shrl
mov
jbe
cwtl
stos
mov
sub
ds
xor
cltd
cmc
inc
pop
lret
pop
testb
xchg
jbe
int3
xlat
addb
inc
mov
outsl
pop
es
rcl
cli
xchg
inc
jmp
pop
test
cmp
pop
stos
scas
int
adc
adc
lahf
lea
scas
ljmp
in
mov
call
cld
pop
fsts
ja
lcall
mov
xchg
mov
movsl
int3
movsl
fildll
outsb
out
icebp
inc
loopne
and
jnp
inc
lret
jo
std
adc
ret
stc
movsl
aaa
ficoms
call
mov
in
and
push
or
repz
jl
fcompl
push
adc
test
sarl
lods
out
dec
aam
pop
pop
xorl
mov
js
hlt
push
out
add
push
lahf
or
and
mov
outsl
mov
loopne
ds
mov
pusha
push
mov
sub
sbb
roll
cs
mov
xor
pop
and
inc
popf
jmp
sub
push
sar
push
outsl
sub
jae
loopne
inc
rcrl
insl
lret
lea
mov
aad
jl
insb
ja
es
mov
jge
fildl
sbb
js
adc
icebp
std
and
dec
sahf
jns
dec
push
shll
xor
cmp
xchg
fisubrl
cmpsl
int3
pop
das
cmp
test
jo
inc
adc
mov
lods
xor
sbb
dec
inc
rolb
push
xlat
push
popf
mov
xor
and
jns
fwait
push
mov
xchg
adc
lea
cltd
fucomp
and
sbbb
sub
jmp
hlt
mov
pop
pop
out
in
loop
inc
xchg
cmpsl
xchg
ficompl
pop
ja
sbb
sahf
jbe
lret
jne
aaa
push
cmpb
push
ftst
cmc
mov
mov
sbb
cmpb
popa
sti
and
gs
mov
and
incb
xor
lock
out
nop
sbb
out
jae
mov
or
dec
push
mov
xchg
inc
pop
push
jmp
cmp
lahf
add
and
lret
ret
add
xchg
inc
cmp
push
adc
loopne
jne
pop
and
movsl
xor
cmp
xor
movsb
hlt
pop
jmp
push
pop
fwait
rorb
mov
jmp
lock
dec
mov
dec
mov
mov
test
or
das
push
incb
mov
xchg
rsm
dec
out
xor
fcomps
xor
ret
or
xchg
jae
gs
add
fld
jmp
cmp
out
push
fdivs
dec
fisubs
out
sahf
mov
clc
mov
std
add
pusha
std
ret
sbb
push
push
rorb
pop
sbb
lahf
es
ja
dec
jl
ret
adc
push
mov
jae
repnz
adc
or
or
arpl
in
aaa
hlt
push
sub
pop
sbb
mov
ds
push
js
jbe
jno
idivb
jb
mov
outsb
lahf
dec
repz
xchg
adc
cmp
sub
sti
dec
and
popa
fidivrl
xchg
movb
inc
rcr
rol
mov
sbb
sub
int
adc
lcall
out
lock
js
nop
cmp
jno
lods
lcall
lret
xor
mov
shl
popf
sbb
ret
push
scas
mov
adc
leave
jb
repz
lahf
jbe
dec
mov
adc
add
inc
push
fnstsw
adc
cwtl
fists
nop
insl
daa
sbb
idivb
loope
cs
imul
enter
in
lret
mov
inc
push
aad
jbe
idiv
sbb
lea
xchg
cmp
push
mov
sub
cmp
icebp
out
jge
jecxz
cmpsb
ja
adc
jg
sub
test
or
roll
sub
push
nop
scas
xchg
push
add
mov
inc
loope
xor
sysexit
xor
sbb
cmp
adcl
adc
xor
imul
adc
aas
cmp
cmp
fdivr
clc
inc
add
mov
mov
adc
xchg
add
jp
mov
and
sbb
push
fsubrl
cmp
xchg
jbe
adc
ret
bound
pop
dec
mov
gs
xchg
loopne
insl
rolb
sub
arpl
and
rclb
leave
inc
cmp
test
aam
sbbb
and
mov
negb
mov
hlt
xchg
pop
test
je
cli
sti
mov
mov
stos
mov
mov
pop
movsb
aaa
pop
xchg
lock
orb
xchg
repnz
inc
mov
add
push
mov
push
jae
pop
mov
movsl
ret
jbe
xchg
mov
pop
clc
fcomps
mov
out
pushf
ja
je
fimuls
loope
fstp
mov
stc
sub
pop
arpl
and
fidivl
lcall
insl
lret
add
xor
xchg
jb
adc
sbb
sbb
das
sbb
xor
insl
jmp
and
mov
mov
sub
pop
add
or
cmp
sub
ss
xorb
push
push
sbbb
out
shr
jle
mov
test
add
fmul
in
inc
outsb
daa
push
inc
push
sbb
sub
xlat
add
sub
loop
pop
outsl
pop
ss
add
rol
stos
es
bound
sbb
cmp
add
jecxz
mov
ja
fucomip
push
shrl
cmp
pop
inc
cltd
mov
pop
jae
lock
repnz
das
sbb
add
andb
sub
rclb
add
popf
pop
cld
cli
inc
jbe
jmp
lahf
xchg
outsl
mov
inc
mov
jnp
pop
push
jno
rorb
fmull
loop
sub
cwtl
pop
fs
and
or
out
lret
push
mov
xor
mov
imul
shlb
sbb
div
ret
xchg
lcall
and
fmuls
inc
test
pop
jo
push
sub
les
sahf
cld
leave
int
push
lret
xchg
dec
jnp
int
and
sbb
lock
sbb
sbb
sbb
mov
inc
xchg
or
or
mov
stc
dec
inc
aam
dec
pusha
hlt
xor
ja
int3
adc
cmc
les
or
in
das
xchg
inc
mov
inc
rcll
adc
add
cmpb
and
fs
jg
xchg
add
into
or
xchg
in
jb
cmc
lret
call
sub
pusha
xor
insb
mov
push
rcl
call
sti
cmpsl
push
and
les
notl
loop
mov
shl
xor
push
sti
std
cmp
cmp
cmpsb
xchg
and
out
xor
xchg
aaa
add
push
xor
cltd
pop
jnp
mov
sbb
rcll
mov
pop
pusha
orb
enter
mov
jle
repz
out
es
subl
jmp
test
pushf
and
inc
fwait
sbbb
stos
loop
jl
lret
xchg
push
xor
ja
outsb
pop
xchg
in
lods
ror
jg
fucomip
repnz
push
pusha
or
movsl
cmp
pop
xchg
aaa
sbb
addr16
sub
push
and
lret
xchg
in
decl
add
pop
movsb
imul
pop
add
pop
pushw
sub
int
jge
or
push
js
call
jp
sti
cmp
loopne
stos
xchg
repnz
les
lret
lock
out
imul
xchg
pop
push
sub
push
es
icebp
pop
dec
jecxz
imul
aaa
jl
insl
lock
add
mov
mov
gs
dec
and
adc
adc
inc
clc
and
movsb
sub
adc
jle
imul
test
xchg
xor
add
loopne
cmpsb
ret
or
inc
imul
in
sub
push
cmpl
test
mov
mov
or
cmpb
dec
sub
push
aas
pushf
in
cmpb
add
cld
dec
cmc
das
xor
add
adcl
xchg
scas
into
jge
push
loope
flds
mov
pop
pop
js
loopne
push
push
nopl
mov
adc
mov
sbbl
sub
scas
pop
enter
fs
pop
fwait
or
fwait
xchg
xchg
xchg
mov
and
or
push
dec
test
adc
lods
xor
mov
nop
pusha
ret
js
fiadds
xchg
ss
fcomi
pop
movsb
mov
mov
cmp
cmp
pop
cmpsl
sub
inc
push
xchg
pop
mov
or
mov
sbb
and
push
incb
add
adc
push
mov
mov
lods
daa
push
shrl
and
jle
inc
cs
scas
and
sub
push
popa
sub
or
bnd
shl
lret
pop
or
ja
sbb
jecxz
das
ljmp
in
cmp
in
aaa
mov
mov
ret
lea
aam
test
inc
shr
fdivl
mov
lahf
add
ljmp
pop
pop
inc
mov
aaa
movsb
xlat
cmp
shrb
repnz
add
in
outsb
pusha
test
pop
adc
fisubs
pop
rolb
loop
ret
cld
adc
add
cmp
loop
popf
add
das
add
fldenv
pushf
test
scas
xor
popf
push
imul
mov
adc
mov
adc
enter
or
fistpll
nop
cmpsb
dec
xchg
dec
pop
xchg
fwait
mov
fnstcw
shrl
sbb
lods
push
cmp
xor
cmpl
int
add
sub
mov
dec
iret
xchg
inc
and
gs
pop
and
mov
ljmp
mull
push
inc
lret
mov
xor
pop
bnd
sub
pop
xchg
or
pusha
js
loope
inc
xchg
inc
xor
arpl
cmc
mov
rep
movsb
lret
hlt
test
cmp
jp
push
xor
jmp
pop
push
or
adcl
pushf
mov
and
push
add
cld
push
aaa
or
out
and
dec
enter
orb
xor
mov
push
loope
mov
push
jne
mov
into
std
lods
xorl
inc
mov
xchg
in
pusha
js
nop
test
lods
add
ret
movsb
cmp
insl
sbb
pop
pusha
mov
push
popf
inc
lcall
mov
daa
es
lds
rcll
inc
and
add
cld
stos
and
mov
es
pop
insb
inc
gs
es
jnp
in
xor
xor
add
jno
idivb
inc
push
jno
in
xor
test
lds
aam
xor
idivl
pop
ljmp
test
xorb
mov
aaa
add
lea
jne
das
lahf
adc
ret
idiv
cmpsb
adc
movsl
daa
std
dec
pop
xchg
das
pop
mov
mov
dec
cmpsl
add
fadds
inc
stc
rclb
popf
daa
add
sub
mov
dec
ja
pop
and
push
pop
int
stos
pop
cs
mov
mov
in
push
xchg
ljmp
add
inc
and
push
in
divb
stos
and
inc
adc
mov
add
push
add
shld
arpl
fbstp
movsb
in
test
dec
subl
mov
mov
and
mov
cmp
ror
and
pop
push
xchg
xchg
or
mov
push
or
xorb
fs
dec
cmp
loopne
icebp
out
add
mov
xchg
lods
xor
aaa
ds
pop
push
push
mov
jp
push
int3
dec
lret
std
push
or
push
and
pop
insb
lods
cmp
mov
arpl
test
int3
cmp
int3
test
push
enter
or
push
xchg
jns
test
clc
inc
xchg
daa
ds
mov
fcmovne
outsl
or
sub
cmp
icebp
aad
or
sbb
icebp
gs
imul
lret
int
insb
ret
pop
movsb
jecxz
xor
gs
ret
lods
or
inc
lds
pop
xchg
sub
xor
out
lahf
lcall
pop
pop
mov
xchg
shrb
push
jle
mov
mov
sbb
adcb
inc
mov
and
xchg
mov
imul
jbe
lret
or
sub
pushf
insb
cmp
divl
pop
cmp
sub
xchg
jae
push
and
fmul
loop
mov
andl
bsr
mov
insb
mov
mov
shrb
jge
scas
xchg
icebp
and
dec
add
mov
sbb
test
xor
pop
mov
mov
lret
push
test
lea
rcl
loop
imul
adc
outsl
sbb
fldt
xor
mov
inc
aas
or
or
aam
ret
fwait
jnp
jle
push
into
sti
lea
mov
mov
adc
sbb
adc
mov
push
insl
aad
push
out
aaa
jbe
adc
mov
mov
or
sahf
sub
push
shrl
pop
in
mov
orl
shl
testb
imul
divb
cmc
cmpsl
cmpsb
push
mov
add
and
jg
mov
xchg
add
call
xor
pop
mov
adc
jge
jae
mov
loop
mov
lret
aad
fdivrs
push
push
movntq
fnstenv
jnp
dec
outsl
pop
ljmp
xor
ret
popf
icebp
arpl
loope
lock
popa
arpl
sub
jl
jecxz
mov
inc
lret
gs
inc
and
outsl
fcmovnbe
jmp
mov
leave
aad
movsl
pop
and
inc
mov
push
pop
push
jns
out
sbb
dec
sbb
mov
lock
out
outsb
ljmp
out
outsl
jmp
xchg
add
aaa
and
mov
adc
xlat
lret
xchg
mov
cld
sahf
push
jmp
push
sbb
fwait
ret
jns
inc
pop
mov
xor
fsubp
cld
out
push
fdivs
push
outsb
repz
test
rolb
cmp
pop
das
dec
aaa
ret
sbb
loop
andl
mov
cmp
notb
cmp
cmpl
sbb
rcrl
jbe
dec
adc
aas
add
ja
insl
cli
push
cmp
mov
clc
mov
fisubl
jmp
fsubrs
and
movsb
mov
push
out
or
xchg
and
ja,pn
std
mov
xor
ljmp
fbld
cwtl
in
jg
addr16
add
sub
sbbb
add
mov
xchg
mov
stos
ror
pop
fcmovnu
in
call
cmpsb
pop
xchg
or
mov
or
shll
mov
dec
bound
push
or
fwait
das
loope
cmp
adc
xchg
cld
jne
jae
jbe
ljmp
push
sahf
jae
in
int
cwtl
std
sbb
in
lahf
leave
outsb
xor
or
rcl
xorl
dec
cmp
xchg
aad
mov
and
push
xlat
cld
js
pop
mov
in
aad
xor
adc
dec
inc
lret
jo
lods
pop
push
xchg
in
push
adc
cmc
mov
cwtl
icebp
mov
repz
sub
mov
imul
lcall
mov
dec
mov
pop
and
inc
hlt
iret
cmpl
dec
push
dec
or
daa
jnp
cs
add
jg
add
jnp
adc
mov
outsb
adc
and
sbb
add
sbb
jnp
jge
jmp
adc
testl
clc
cmp
pusha
repnz
dec
fldenv
subl
push
jae
stos
push
fucomi
cltd
sti
adc
add
aas
push
in
jge
adc
sub
jo
outsb
inc
stos
sub
nop
pusha
adc
push
popa
fwait
inc
pand
bound
repnz
adc
cmp
ss
mov
lds
xchg
and
lcall
xchg
ljmp
rcrb
inc
xor
inc
cltd
fucom
das
inc
fwait
push
jns
int
add
jo
insb
out
add
pop
out
pop
or
arpl
nop
das
sub
das
test
push
adc
loope
test
rcll
cmp
int3
cmp
sub
ljmp
repz
mov
enter
sti
popa
inc
jno
call
cmp
sbb
xchg
adc
add
int3
js
orl
fs
cmpsb
mov
xor
out
loope
movb
iret
ret
inc
xchg
in
sahf
sub
mov
fs
jns
popf
sub
sbb
ret
cmp
dec
pop
rorl
test
test
or
movsl
mov
adc
mov
lret
cltd
jl
aad
cmp
adc
adc
fcompl
repnz
push
sbb
add
or
fwait
js
out
inc
mov
sub
rorb
pop
aam
dec
hlt
cmp
mov
adc
push
lea
shll
fcompl
or
mov
mov
cmp
add
sbb
xchg
pushf
xchg
xchg
jo
cli
pop
imul
fistpll
adcb
xchg
pop
hlt
mov
insl
int3
daa
sbb
cmp
addr16
pop
push
in
xchg
xchg
mov
repz
setns
inc
mov
inc
inc
pusha
out
xchg
add
aas
mov
push
push
sbb
les
xchg
je
clc
adc
adc
xchg
in
jae
mov
mov
sbb
dec
cmpsb
out
sahf
or
out
fs
sub
xchg
mov
sbb
push
hlt
pop
aad
sub
push
ja
xor
jae
jecxz
jg
xchg
fstpl
xchg
sbb
mov
fisubrs
jl
sub
mov
loop
mov
iret
dec
jmp
xlat
test
xchg
pushf
adc
imul
adc
push
mov
mov
inc
or
jnp
pop
mov
sub
jecxz
ror
fsubrl
push
and
inc
mov
jle
xor
push
je
push
inc
pop
bnd
pop
dec
xchg
pop
jmp
or
sbb
cmc
jno
mov
sub
cmc
in
hlt
clc
pop
inc
ret
icebp
sti
jo
stos
fs
lock
push
xor
xchg
insl
xor
repnz
push
add
nop
cwtl
nop
adc
jmp
jg
or
push
mov
les
xchg
inc
cmp
xor
lret
test
sbb
out
mov
sbb
int3
rcr
int3
lods
jmp
sub
int3
lret
divb
fs
ret
cmpsl
je
inc
in
int
push
push
call
das
add
pusha
mov
pop
sbb
in
xchg
push
sub
pop
jne
iret
insb
ret
or
jle
stc
inc
inc
js
push
or
cmp
add
testb
pop
mov
adc
rcll
icebp
cmp
movsl
push
pop
cmp
rol
fstl
stos
jge
or
jns
or
jecxz
sub
push
mov
adcl
and
pop
or
data16
fdivp
ret
lods
xchg
jl
lret
ret
push
pop
popf
iret
push
mov
les
xchg
inc
mov
jae
ret
addr16
lret
cs
aad
dec
out
addb
add
jno
dec
and
push
imul
and
ret
mov
dec
test
add
cli
push
pop
aam
icebp
scas
movsb
outsl
ss
cld
xor
and
aaa
shr
mov
aam
add
pop
push
das
xchg
popl
xchg
mov
pushf
int
rcll
cmc
gs
jb
int
icebp
push
into
xor
shrl
vphaddwd
pop
test
in
das
cmp
pusha
adc
jb
xchg
push
icebp
inc
andl
popf
mov
loope
ja
and
inc
shlb
imul
insb
lods
xchg
out
rcrb
add
clc
jecxz
in
gs
xor
loop
add
rcr
jnp
aas
test
insb
jge
mov
rorl
adc
cmp
push
xor
adc
lea
add
fdivrl
test
adc
add
movsb
mov
mov
cmp
iret
xor
and
xchg
lcall
ret
lea
jl
xchg
idiv
je
insl
push
in
push
outsb
add
pop
std
sahf
outsl
xor
inc
add
jne
jl
mov
jne
and
popa
ss
mov
popa
add
in
fidivrl
push
mov
pusha
sbb
xchg
test
push
mov
sub
push
pop
and
in
sbb
mov
and
sbb
negb
xor
dec
js
cwtl
icebp
push
sbb
movsl
xchg
ljmp
outsl
jo
jno
js
xchg
arpl
jp
inc
or
inc
andl
iret
aam
push
mov
dec
xchg
add
and
das
scas
push
das
pop
adc
mov
xchg
mov
loopne
shr
outsl
xor
es
addr16
sti
leave
pop
push
in
stc
pop
mov
xchg
ds
rep
movsb
ud0
mov
inc
adc
sub
adc
mov
push
sahf
fnstsw
jl
mov
out
inc
or
popf
push
clc
andnps
add
sahf
imul
out
push
jne
dec
movsb
inc
movsb
push
mov
mov
inc
sti
dec
fistl
sbb
xchg
and
out
clc
push
imulb
jae
jg
cli
jge
mov
pushf
inc
loopne
call
fwait
push
inc
lret
jg
ds
adc
out
nop
mov
sti
push
mov
jl
fnstsw
leave
push
outsl
pop
xlat
int3
loopne
push
sub
push
rorl
sub
push
cmpsb
fsub
push
loop
movsl
test
add
jecxz
js
or
insl
mov
fs
sbb
sbb
jg
shrl
shll
neg
inc
in
cmp
mulb
cli
push
xchg
lahf
leave
pop
add
mov
ror
or
xchg
jecxz
or
dec
sbb
roll
mov
leave
jno
cmp
fisubl
iret
sub
loope
daa
into
push
jle
inc
in
stc
stos
or
and
jl
data16
ja
aas
push
aad
xchg
inc
dec
xor
jmp
inc
jmp
inc
pop
test
aaa
mov
add
inc
aam
and
pop
jae
outsl
xor
push
dec
add
sub
stc
cmp
divb
inc
and
jns
jo
pop
mov
lret
js
cmp
push
movsb
pop
fwait
jmp
lods
icebp
or
pop
sahf
fcompl
jne
mov
dec
or
push
jmp
add
mov
das
int
loop
sbb
outsb
ret
inc
call
add
inc
mov
dec
je
fucomip
in
jp
mov
cltd
aaa
push
leave
sub
jecxz
popa
cld
mov
xchg
out
lret
sbb
push
jmp
lock
pushf
add
dec
inc
mov
cwtl
adc
bound
sub
xchg
hlt
or
in
jge
cmp
sub
dec
cmp
jbe
add
adc
jbe
jg
imul
lahf
test
jmp
aaa
stos
jo
inc
sbb
bound
cmp
dec
push
scas
sarb
sub
loope
add
fmulp
sbb
in
xchg
loope
inc
jg
aad
jle
into
xchg
stos
loop
incb
inc
pop
sahf
push
loop
out
jne
xchg
loop
rcrb
adc
out
ret
outsb
lcall
pop
jge
sub
cmp
add
mov
sbb
fnsave
add
mov
pop
in
sub
js
sub
mov
pop
jnp
fldt
in
pushf
stc
leave
pop
lea
mov
movsb
cmp
push
pop
mov
nop
pusha
push
mov
inc
stos
popf
and
push
mov
add
xchg
lahf
jmp
call
inc
fstpt
lret
pop
bnd
add
xchg
xor
push
fs
mov
int
outsb
mov
mov
sub
push
mov
aam
ret
pop
cmp
sub
sbb
divb
xor
cmc
xchg
xor
mov
decl
out
je
xchg
push
sub
push
mov
mov
pop
mov
mov
jmp
fs
dec
mov
push
loope
pop
imul
sub
int
testb
xchg
jmp
mov
scas
push
or
mov
adc
cmp
dec
cwtl
inc
jp
push
mov
movsl
stc
clc
mov
xchg
adc
mov
push
mov
sbb
repz
dec
sahf
in
roll
jle
xchg
pop
ret
push
xchg
jo
fistpl
sub
add
xchg
std
mov
mov
push
dec
loope
and
sbb
pop
and
inc
mov
or
xchg
movl
addb
mov
nop
or
cmp
push
sahf
fisubl
cwtl
out
addps
add
xchg
cld
fwait
dec
mov
or
or
sbb
nop
imul
inc
mov
aaa
les
inc
cmp
mov
idiv
mov
out
jo
imul
mov
cmpsl
push
adc
dec
inc
icebp
ret
or
or
rcr
push
and
push
cli
cmp
add
bound
xorl
sbb
lock
push
dec
je
popf
into
xor
xchg
aas
jne
and
or
pop
fwait
lds
xchg
mov
stos
lds
lea
lds
ds
fsin
js
ljmp
sbb
cltd
push
cmpsb
scas
add
cli
shlb
inc
shlb
fcompl
pusha
sti
lcall
dec
inc
push
dec
fcoms
icebp
loope
aas
rcrl
je
mov
cltd
push
pop
popa
rorb
call
sub
in
fcmovnu
push
xlat
test
sbb
out
clc
push
clc
fcomps
mov
mov
mov
jge
pop
sbb
mov
jbe
pop
mov
push
js
pop
push
ret
fs
dec
cvtps2pi
push
repz
scas
push
push
int3
sahf
cwtl
mov
lea
sbb
xchg
add
inc
in
sti
sub
xchg
push
cwtl
notb
xor
mov
mov
inc
mov
add
dec
fwait
jne
push
inc
xor
rclb
and
jno
rcl
sbb
cmp
sbb
lcall
add
test
daa
fsubrp
sub
test
fistpll
adc
mov
and
arpl
jecxz
stos
out
stc
pop
dec
repz
adc
icebp
mov
fldenv
sbb
lea
push
or
mov
push
arpl
int
pusha
sub
sbb
daa
add
mov
mov
dec
or
aas
xchg
add
aam
nop
jmp
xchg
pushw
mov
inc
push
push
leave
mov
add
packuswb
cmp
mov
push
inc
sbb
aaa
mov
xor
cmp
outsl
cmp
dec
les
and
repnz
out
push
inc
sub
cmp
scas
push
scas
xchg
mov
loope
ljmp
cmp
xor
or
push
pop
popf
or
xorb
or
push
ret
cs
mov
add
fldl
into
push
sub
mov
sbb
repz
push
es
mov
div
jecxz
aam
ret
std
mov
and
inc
dec
ret
cmp
lret
mov
xchg
lods
fimuls
sub
pop
pusha
mov
clc
insl
inc
mov
das
mov
mov
dec
cmp
pusha
push
mov
adc
sbb
or
push
mov
add
cmp
push
imul
dec
xchg
mov
xor
or
fdivrp
and
test
stos
inc
cli
notl
fimull
or
pmulhuw
sahf
nop
out
mov
fnsave
rcll
sub
push
mov
and
mov
jp
push
jne
sub
xchg
popf
stos
in
and
mov
pop
cs
jg
cld
aam
fists
sbb
xor
pop
ljmp
pop
pop
js
dec
cmp
cmp
xchg
sub
sahf
dec
pop
xchg
pop
or
mov
loope
xchg
notb
sbb
mov
and
repnz
pop
adc
cmp
mov
and
adcl
das
subl
aam
cmp
push
xchg
adc
jnp
leave
lret
aad
inc
cmp
inc
outsl
mov
imul
mov
std
sbb
test
and
xlat
pop
sub
ret
out
repz
sbb
inc
pop
sbb
cli
xchg
xchg
xchg
test
mov
jmp
push
push
mov
insb
fisttpl
add
jnp
mov
repnz
mov
pop
push
pop
lods
lock
mov
out
inc
mov
add
sub
sbb
add
sbb
dec
lock
inc
pop
movsl
mov
push
rorb
dec
pop
lahf
in
dec
enter
andl
std
jo
into
dec
pop
jo
mov
setl
nop
icebp
sbb
cld
lahf
aam
dec
in
cmc
test
je
add
test
push
shll
and
add
rclb
cmp
dec
incb
jns
movsb
out
mov
jmp
push
bnd
push
cltd
sbbb
add
insb
pushf
mov
or
mov
jecxz
mov
jmp
nop
inc
pop
cmc
bound
pextrw
bound
cmp
sub
or
stos
or
clc
mul
popa
fnstsw
orb
add
shl
cmp
js
stos
movsl
xchg
cmp
sub
sub
xchg
orl
sub
jb
pusha
popa
jmp
dec
gs
lret
xor
mov
pop
inc
pop
inc
lds
lret
jae
test
cs
sub
subb
inc
add
lret
adc
pop
fcomps
mov
aad
outsl
test
cmpsl
push
push
lods
loopne
sbb
out
faddp
jge
insl
sub
insl
ret
push
gs
test
insb
pop
or
push
bound
push
xchg
pop
xor
mov
int
fsubl
inc
fistpl
out
mov
aad
insb
imul
sbb
mov
pusha
orb
mov
push
cmp
xchg
leave
cwtl
mov
jne
jno
ret
fbld
ret
cmc
aas
cmp
pop
dec
sbb
je
inc
jno
mov
ds
sub
rorb
ss
cwtl
jle
and
ja
pop
das
or
xchg
ljmp
or
or
xor
cmp
xchg
mov
and
cli
jno
jo
cmp
jg
jge
and
inc
push
push
cmp
adc
cmp
dec
loope
arpl
cmp
scas
push
out
fsubrs
cmp
rorb
arpl
push
xchg
mov
enter
mov
xor
mov
adc
mov
mov
cmp
jb
faddp
call
push
paddw
cmp
insl
add
inc
push
test
mov
js
insl
pop
scas
lahf
pop
shll
repz
add
loopne
mov
pop
mul
jmp
push
in
repnz
xchg
mov
ja
movsl
jg
mov
dec
cmp
loopne
arpl
add
stos
repz
xchg
sub
and
xchg
xrelease
add
push
and
jle
xchg
cmp
ret
mov
mov
cmpsb
subb
in
imul
data16
sbb
es
cmp
xor
es
push
push
and
and
inc
cmp
call
cs
inc
clc
push
movsb
cmp
pop
movb
repz
mov
movb
push
aad
repnz
cmp
cwtl
xchg
xchg
enter
cmp
imul
pop
pop
leave
dec
movsl
inc
pop
fcompl
or
iret
nop
in
arpl
or
cmp
xchg
push
aaa
lock
mov
frstor
shr
mulb
push
adc
enter
movsb
out
aam
dec
sarl
inc
ljmp
lret
dec
jmp
aaa
jecxz
jp
xor
in
push
adc
jo
adcl
loop
and
inc
mov
sahf
pop
cmp
repz
fbstp
sub
inc
inc
jle
pop
or
clc
ja
je
mov
out
aaa
popf
fwait
mov
mov
push
mov
dec
clc
sub
and
je
or
mov
aaa
or
push
pop
cs
mov
lods
mov
and
pushf
xchg
dec
das
rcr
jge
and
hlt
leave
pushf
push
sub
inc
repnz
mov
negb
aas
cmp
repnz
test
mov
dec
xchg
fistpll
adc
cmp
aam
repnz
into
popf
sbb
mov
adc
movsb
and
jl
imul
insl
jnp
aad
mov
pop
mov
sbb
lock
cmp
leave
or
addl
iret
leave
add
jecxz
push
cmp
sbb
cld
ja
push
sarb
fiaddl
pop
mov
mov
and
pop
mov
sub
mov
inc
es
xlat
jge
jne
movsl
adc
scas
aaa
dec
adc
addl
inc
push
rolb
inc
jmp
mov
arpl
sarl
lea
xchg
and
pop
push
pop
mulb
push
pop
mull
xchg
push
adc
pushf
push
lret
mov
and
adc
jl
cmc
add
imul
cmpl
and
inc
loop
test
add
iret
icebp
xor
stos
clc
sub
mov
or
xor
sbb
les
push
jl
shr
sbb
mov
jmp
nop
ret
popf
out
mov
pop
sub
iret
jge
mov
mov
arpl
fistpll
stos
dec
and
inc
mov
lods
lock
fsubr
adc
test
lret
pop
fcmovnb
xor
push
inc
xor
insb
mov
mov
fisttpl
mov
das
add
test
cltd
lock
dec
cmpsl
bound
and
outsb
adc
cmpsb
vlddqu
ds
push
cwtl
mov
xor
mov
add
pop
inc
push
cmpsl
mov
fnsave
in
add
outsb
adc
xor
arpl
adc
out
mov
pushf
mov
popa
shld
data16
prefetchwt1
movsl
mov
add
loop
jnp
lret
int3
ljmp
mov
lret
in
sbb
out
popl
dec
ljmp
popa
add
cmp
repnz
les
in
es
loope
and
pop
or
lahf
xor
mov
sub
pop
inc
aas
mov
das
cmc
int
pop
std
cli
mov
clc
and
and
int
out
or
push
and
nop
mov
jae
mov
sub
sbb
sbb
jo
pushf
fs
adc
leave
jecxz
cltd
bound
mov
cmp
lock
or
push
leave
enter
dec
inc
inc
add
xrelease
push
fimuls
xchg
orb
outsl
sbb
push
outsl
sahf
out
aam
jnp
xor
push
lahf
test
mov
mov
push
mov
mov
scas
adc
mov
jbe
stc
and
addl
xor
incl
push
jns
inc
jecxz
fsubs
and
add
push
jae
sarb
dec
out
test
dec
add
lret
push
sbb
push
jbe
sarl
pop
rorb
xor
cmp
daa
adc
xchg
divl
jae
andl
xor
test
push
pop
aaa
movsb
negb
mov
pusha
jb
mov
pop
ljmp
xchg
cmpsl
sbb
popf
clc
stos
and
popa
xchg
rclb
pushf
pop
mov
xor
or
shlb
jnp
sarl
adc
push
out
inc
gs
cmp
mov
adc
or
clc
push
push
jno
daa
cmp
test
repz
cmc
mov
inc
rol
jp
xchg
sub
aam
push
sbb
rclb
pop
jg
aam
mov
rcll
jo
fsts
dec
or
ret
lock
lock
adc
shlb
dec
cmp
fists
iret
lods
lahf
mov
sbb
jecxz
lods
int3
call
cmp
lret
out
arpl
pop
mov
lock
stos
inc
outsb
cs
js
mov
ret
sub
mov
jl
sbb
jl
cs
xor
cltd
or
dec
jle
movsb
or
stos
mov
imul
mov
jb
pop
adc
xchg
lret
stos
mov
outsb
fmulp
imul
pop
push
in
push
lock
mov
pop
test
xor
mov
cltd
fucomp
aam
pop
xchg
inc
push
das
or
push
jae
aaa
mov
pop
pop
lcall
imul
lret
adc
pop
pushw
add
adc
stc
inc
int3
lods
outsl
bound
mov
push
xor
sbb
mov
ret
insb
and
loope
add
mov
sbb
pop
and
sbb
pop
pop
into
test
mov
adc
xor
arpl
ds
xor
sbb
mov
pop
dec
mov
imul
repz
push
loopne
ja
sub
inc
pushf
or
mov
add
test
jle
mov
mov
or
dec
mov
jno
aaa
out
int
mov
pushf
pop
test
fsubrl
cs
lods
ljmp
sbb
aam
jmp
jb
fimull
rcrl
mov
jo
sub
dec
ljmp
lods
pop
push
iret
mov
addr16
cli
push
adc
adc
inc
das
lcall
punpckhbw
std
incb
push
in
xchg
pop
movsl
inc
mov
aam
jg
and
mov
lahf
xor
clts
and
and
or
ret
jmp
xor
popf
xchg
clc
mov
lods
in
rolb
pushf
dec
test
xchg
fmulp
or
lea
adc
movsl
add
das
or
mov
inc
sub
jb
adc
test
adc
xadd
std
or
push
or
loopne
dec
int
loopne
mov
les
inc
pop
mov
or
add
xchg
test
aam
adc
jle
bswap
mov
jno
mov
addr16
jecxz
xchg
fcoms
cwtl
sbb
inc
sub
cmp
mov
leave
les
sub
std
jbe
pusha
pop
fiadds
jns
cmpsb
fldenv
xchg
scas
xchg
sbb
xlat
xchg
cmp
xchg
mov
xor
mov
repz
and
cld
lea
int
das
ljmp
add
sbb
fdivs
std
jns
add
mov
adc
push
xchg
cmp
loope
sub
dec
sbb
popf
jmp
xchg
ret
gs
sub
ds
mov
adc
add
jnp
xchg
add
sub
sub
pop
aam
bound
push
iret
pushf
jmp
pop
aam
scas
mov
xchg
stos
jp
ja
outsb
push
imul
xchg
xchg
pand
scas
mov
xor
repz
aam
ret
scas
push
dec
push
aam
sub
lods
gs
les
iret
sbb
aas
sbb
repnz
repz
mov
adc
aad
mov
repnz
test
lock
pop
pop
ja
rcrl
mov
cs
mov
lcall
jecxz
mov
jbe
jbe
aam
sub
data16
sub
mov
stc
inc
repnz
dec
jbe
rclb
out
fldl
aam
push
xchg
add
loope
jecxz
pusha
jl
lret
lods
ja
movsb
out
inc
ficomps
outsl
imul
jno
call
scas
mov
or
mov
sub
enter
adc
mov
or
scas
call
movb
lock
out
and
loope
xchg
pop
sub
and
mov
imul
ds
clc
clc
test
lahf
add
imul
aad
ret
mov
mov
or
pop
insb
sub
movsl
pop
mov
add
imul
or
sbb
int3
or
fimuls
mov
xchg
sbb
call
div
and
loop
bound
outsl
ja
push
sbb
insb
test
int3
mov
js
and
jne
push
xor
aas
repz
jmp
lcall
add
xchg
call
orl
repz
cmpb
sub
xchg
lahf
or
clc
or
stc
jle
enter
or
insl
lahf
andl
outsl
lahf
cmp
adc
xchg
push
fldenv
les
jns
push
pop
cmp
ror
sub
in
fwait
pop
cmp
daa
lret
loopne
or
hlt
mov
or
or
insl
sub
xchg
pop
addr16
movsl
idivb
inc
add
sarl
shl
jmp
push
sub
sub
orb
mov
mov
jmp
or
jb
repz
xchg
mov
insb
xor
lret
sahf
xchg
arpl
mov
sahf
dec
cmp
dec
mov
and
push
cmp
xchg
lock
sub
movsl
mov
mov
mov
add
out
and
in
sub
push
push
mov
adc
into
mov
mov
subl
pop
cmp
outsl
fwait
push
ret
std
mov
fnsave
inc
sub
scas
data16
adc
push
fidivl
scas
cmpb
jecxz
shrl
fistpll
outsl
sub
mov
js
xchg
out
imull
mov
and
int
data16
cmp
push
sub
lock
lods
xchg
leave
test
push
xlat
scas
in
out
jbe
cltd
jmp
testl
or
jae
push
bound
mov
jl
aaa
add
cmp
dec
push
ret
push
adc
in
push
mulb
pushf
aam
sbb
int
test
jle
sbb
icebp
je
sub
inc
jge
mov
jne
cmp
inc
fsub
push
and
outsl
add
js
cmpsb
out
fpatan
and
stc
or
sbb
into
int
cmp
stc
repnz
jle
adc
push
lret
dec
push
cmp
daa
orb
daa
int3
mov
lret
frstor
loopne
in
ss
mov
outsb
sbb
cmp
std
rorl
pusha
rolb
pop
je
mov
setl
or
imulb
mov
mov
sub
imul
add
xchg
and
dec
ljmp
mov
movsl
dec
jo
les
ret
out
filds
lds
push
stos
cmp
push
pop
push
mov
mov
lahf
mov
xchg
stc
sbb
or
stc
or
mov
aam
sti
cwtl
dec
pop
mov
push
mov
jo
stc
cmp
or
push
mov
divl
pop
movsb
das
das
and
cmp
aad
and
je
jae
jl
mov
mov
pusha
sub
mov
cltd
cmc
mov
pop
xchg
cli
dec
and
outsb
fldl
mov
sub
mov
sti
test
or
push
adc
es
and
xchg
test
bound
cmc
jne
and
jbe
and
mov
jno
arpl
inc
test
call
scas
pop
pusha
pushf
and
sub
mov
rep
jg
icebp
jb
lret
cs
mov
cmp
rcr
imul
loopne
fnstsw
jne
jno
pop
test
inc
push
cmp
jbe
xchg
rclb
jns
call
push
push
enter
popl
fwait
imul
xchg
lea
sub
out
adc
sbb
mov
loopne
mov
cmp
jmp
jecxz
sbb
idivb
fs
xchg
dec
sub
cli
push
adc
nop
mov
mov
test
or
xchg
pop
mov
inc
repnz
rolb
pop
xchg
ret
and
push
rcl
in
movsb
dec
enter
scas
mov
stos
jl
cwtl
cmp
jmp
hlt
jbe
jnp
or
jl
or
cltd
jns
sar
call
std
inc
daa
add
sbb
inc
jmp
inc
insl
mov
dec
xchg
push
ljmp
push
gs
push
lods
mov
lret
lds
cmp
in
mov
pop
inc
and
or
ds
sbb
shrb
sub
shld
pushf
arpl
orb
ljmp
mov
fs
mov
gs
scas
lret
xchg
mov
ret
in
out
push
cmp
test
inc
cmp
mov
xchg
test
nop
cltd
ss
jbe
dec
sbb
popf
sbb
dec
mov
cmpsb
mov
jno
outsl
rcl
jno
in
or
jmp
push
push
clc
scas
stos
sbb
loop
test
cmp
xor
imul
in
push
inc
pop
int3
sub
pushf
mov
bound
sbb
jno
xchg
xor
sahf
insb
xchg
imul
aaa
xor
pop
daa
nop
cmp
jle
xor
jg
movsl
les
jnp
jb
rcrl
dec
inc
mov
mov
mov
jbe
push
clc
into
rcrl
repnz
pusha
xchg
push
xchg
jae
mov
inc
bound
lods
test
xorb
fmul
sub
andl
repnz
and
scas
adc
inc
or
add
aaa
in
or
fiadds
dec
inc
loope
and
adc
cmp
jecxz
push
mov
dec
hlt
in
aaa
jae
nop
out
int
mov
daa
outsb
mov
add
gs
cmp
jl
mov
jp
roll
outsb
scas
adc
fisubs
sbbb
aas
xorl
cmp
sbb
jmp
xchg
or
nop
mov
lcall
pop
dec
cmp
out
xor
test
je
mov
xor
inc
bound
inc
ljmp
dec
push
pop
mov
jle
pop
inc
adc
or
into
xchg
and
cmpsb
bound
xchg
mov
mov
xor
fnsave
arpl
or
sbb
das
lods
mov
scas
jnp
jo
dec
ljmp
pop
outsb
cmp
xor
mov
or
fildl
cli
mul
cmp
lods
mov
addl
inc
fnstenv
push
xchg
je
icebp
push
mov
pop
rclb
dec
jge
mov
xor
adc
lock
les
adc
icebp
jns
pop
cmpsb
or
mov
pand
cmpsb
test
inc
out
stos
pusha
push
dec
sbb
jnp
add
stos
or
mov
xchg
das
mov
lock
mov
mov
sub
in
push
dec
jmp
loope
dec
sub
cmp
xlat
mov
mov
or
in
or
xor
loope
scas
out
outsl
addr16
call
mov
loopne
adc
fimuls
cltd
mov
pop
pop
push
sub
cmc
mov
fwait
push
gs
pusha
cmp
popa
cwtl
push
jle
mov
leave
mov
popf
ret
fdivrl
lods
lock
push
pusha
push
mov
cmpb
sbbb
in
aaa
xlat
in
int3
or
mov
ret
je
and
xchg
pop
lea
push
loope
sti
ds
mov
xor
xchg
or
sbb
sbb
sbb
das
dec
cmc
or
mov
int
into
mov
bnd
xchg
xor
add
push
jmp
out
aad
inc
sbb
idivb
loope
sbb
ffree
lods
xchg
jnp
js
xlat
test
andb
cmpsb
cmpsl
mov
mov
or
mov
mov
adc
arpl
fsubl
pop
bound
int
cmp
daa
dec
popf
rep
lahf
mov
mov
mov
sub
mov
call
repz
cli
cmpsl
fwait
xlat
push
push
test
lea
loopne
adc
cmpsl
daa
adc
jle
fucomi
lcall
je
mov
mov
xor
add
mov
adc
rolb
les
mov
lahf
mov
push
push
sti
sub
aas
pushf
inc
push
out
andl
mov
into
or
loope
repz
imul
inc
inc
mov
lods
mov
jle
xor
repnz
rol
adc
jge
mov
divb
test
adc
mov
push
dec
xor
jns
add
pop
cld
ret
adc
lret
lret
dec
inc
mov
stos
movsb
xchg
scas
or
and
mov
mov
jl
add
sbb
pop
mov
adc
mov
flds
pushf
push
decl
int
movsb
and
dec
push
pop
mov
push
pop
and
into
push
xor
push
jns
in
lret
fstl
lret
push
add
xchg
clc
ja
iret
jl
mov
test
mov
loop
jnp
and
addr16
jmp
jae
ror
adc
pop
pop
cmp
jge
mov
int
insl
pushf
ret
cmpl
add
push
xchg
inc
jbe
mov
cmpsl
mov
jl
bound
inc
sub
add
dec
dec
jb
cs
out
inc
mov
jecxz
clc
pop
movsl
xchg
and
lret
stc
push
stos
sub
or
leave
mov
stos
sbb
push
xchg
pop
mov
cmova
and
sarb
ret
jo
cmp
sbb
sub
out
addr16
inc
stc
repnz
fsubs
sti
cmp
mov
not
push
inc
cmc
dec
fistpl
add
xchg
sbb
adc
aad
nop
sub
or
testb
in
popf
sahf
aam
inc
rcll
push
das
cwtl
and
mov
adc
mov
xor
jo
rol
ljmp
adc
insl
add
pop
ja
fcomps
dec
repnz
cmc
adc
sbb
mov
mov
or
ss
test
int3
pop
out
mov
add
in
out
inc
test
shll
test
push
push
mov
xchg
std
push
add
and
dec
clc
in
adc
xor
mov
inc
into
js
sbb
mov
ret
inc
test
mov
aaa
cmc
shrb
mov
and
out
stos
xor
lret
push
insl
sub
loope
outsb
and
cmc
and
mov
inc
xchg
mov
dec
mul
dec
les
movsb
testl
mov
lods
aam
cmp
cltd
fnstcw
scas
sbbl
lods
mov
push
lcall
mov
pop
pop
flds
jmp
popa
addr16
in
inc
push
sub
lcall
loop
xchg
in
or
aam
adc
scas
mov
stos
jp
sarb
pop
les
mov
jmp
arpl
sbb
xchg
xlat
mov
or
shrd
cmp
dec
outsl
or
jae
jne
call
xchg
dec
fmull
xchg
mov
push
jae
adc
add
xor
testb
mov
imul
xlat
out
out
pop
data16
fdivp
popa
test
js
inc
out
lods
mov
cmpsl
mov
fsubr
dec
out
adc
movsb
jnp
push
in
stos
cltd
pusha
jnp
mov
call
fimull
cli
mov
lds
pop
and
nop
daa
xchg
outsl
add
sub
pop
sbb
push
out
and
out
sbb
xchg
sub
in
repnz
cmp
jae
sub
fstp
test
ljmp
enter
add
loop
std
test
insb
mov
sbb
pop
push
mov
adcl
cmpsl
mov
pop
fdivrl
jb
mov
mov
popf
test
loopne
mov
loopne
dec
and
dec
aaa
push
add
aaa
ja
loope
lods
xor
mov
xchg
repz
fs
fldenv
lret
je
data16
jae
lods
pop
dec
push
push
xchg
jge
fsubrl
pushf
fnstcw
and
stos
mov
fdiv
xor
lea
or
pop
jge,pn
out
ficoms
jns
je
aaa
stc
cli
sub
nop
popf
jl
inc
cltd
enter
add
nop
arpl
fdivrs
shr
popa
dec
outsl
in
fisttpll
clc
pop
das
mov
cmpsb
lock
mov
cltd
repnz
inc
mov
sbb
cmp
xor
xchg
jo
add
clc
leave
jge
popa
cmp
inc
mov
dec
xor
outsb
pushf
xchg
pop
pop
leave
cmp
fcmovbe
scas
lods
add
out
jb
rclb
and
es
sub
push
aam
mov
jle
push
dec
js
pushf
xor
pop
mov
add
or
sbb
stos
ja
xor
outsb
cmpsb
sub
xchg
push
inc
mov
mov
pop
inc
cmp
mov
ds
mov
pop
lods
cs
test
push
stos
lahf
add
fnstcw
fsts
sarb
xchg
cmpsl
arpl
mov
jb
enter
pop
or
lods
imul
xor
fwait
jbe
dec
scas
hlt
inc
sbb
lds
insl
mov
add
push
inc
push
std
stos
jno
fistl
fmull
adc
dec
decb
mov
daa
jge
bound
fmuls
sub
jns
push
lcall
pop
or
pusha
mov
icebp
jg
popf
jg
int
add
loope
pushf
call
in
rcrb
add
mov
pop
pusha
cmp
int3
xor
cld
sub
inc
sbb
jg
jo
test
das
test
sub
dec
jmp
dec
jb
dec
add
push
shrb
les
out
jmp
cld
ret
dec
in
test
jbe
cmp
lret
iret
cmp
mov
inc
stos
lea
push
or
push
jbe
nop
idivb
in
test
mov
cli
inc
xchg
sbb
je
push
push
or
cmp
test
ret
out
fists
fdivrs
pop
mov
cmp
cmp
in
or
xchg
cmp
lds
out
or
mov
xor
gs
fmuls
sbb
sbb
sub
pusha
xchg
inc
push
cwtl
mov
add
jns
imul
inc
adc
mov
lea
icebp
xor
dec
ret
xchg
call
pop
icebp
xchg
and
test
dec
ss
ss
mov
push
cmc
jnp
push
cwtl
sbb
inc
sbb
aam
xor
cs
jl
nop
pusha
adc
mov
mov
xchg
dec
mov
aam
cmp
mulb
cmp
fcoms
xor
and
xor
shlb
mov
jno
xchg
adc
pop
sub
cld
xchg
jp
lcall
test
test
inc
sub
mov
inc
jo
mov
or
dec
pusha
out
or
je
push
movsb
addb
or
outsl
popa
pop
jne
and
decb
fs
movsl
add
jne
cmpsl
xor
add
outsb
inc
jb,pn
out
fistps
inc
mov
adc
inc
cmp
pop
and
pop
hlt
cmp
add
add
jne
repz
cmpsb
pop
pop
js
ret
repz
mov
ljmp
iret
add
push
dec
adc
jb
xlat
stos
mov
mov
in
cld
sub
mov
jecxz
fcomip
jne
dec
jle
rolb
jo
mov
dec
shll
outsb
hlt
mov
stos
imul
dec
insb
int3
fcmovbe
mov
outsb
jge
dec
push
and
sbb
xor
out
icebp
adc
ret
dec
jno
in
stc
jb
pop
out
push
movsl
mov
repz
inc
jmp
mov
push
shlb
xchg
int
cli
push
loop
sbb
jno
rol
inc
loop
xchg
fcomps
cs
jo
inc
add
push
cld
push
and
cli
das
inc
pop
or
dec
jo
push
cltd
pop
shlb
aaa
cmp
cmc
mov
mov
cmpsl
mov
pop
mov
pop
out
test
or
jns
bswap
xor
clc
aaa
cmp
inc
imul
hlt
add
sbb
pop
shrb
jge
andb
test
lock
mov
or
daa
mov
fcoml
pop
and
in
ret
inc
imul
data16
inc
jbe
dec
sub
loope
push
push
gs
or
push
push
fistpll
in
push
icebp
mov
jbe
in
cmpsb
je
test
jmp
cmp
shll
pop
scas
push
movb
adc
in
popf
int
lods
adc
mov
out
aaa
xor
adc
mov
imul
and
fwait
loop
adc
xchg
clc
mull
dec
in
adc
dec
sbb
lea
out
push
sbb
je
adc
test
sub
mov
or
inc
aad
fs
sbb
xor
in
outsl
push
xlat
out
fst
hlt
cli
jmp
xchg
mov
bound
cld
sub
sub
sub
inc
mov
lds
sub
pop
lods
pop
sub
test
pop
adc
xor
int3
mov
push
pushf
jne
and
cmpsb
icebp
loopne
lea
xor
aas
sbb
lret
jne
mov
subl
xchg
dec
add
xchg
sub
and
stc
dec
push
cltd
and
shrl
jae
sbbb
rclb
cwtl
sub
mov
mov
xchg
jp
popf
mov
fadd
mov
dec
es
or
sarb
pop
xor
mov
ret
call
inc
notl
or
ljmp
cs
adc
iret
sub
test
push
or
mov
movsl
roll
dec
fwait
push
and
lds
jnp
xor
mov
hlt
pop
pusha
push
je
adc
and
adc
fists
xchg
daa
dec
or
pop
iret
add
scas
out
gs
mov
jne
push
mov
test
cld
aaa
lahf
and
ss
lahf
inc
gs
mov
fs
fildll
cmp
push
jle
cmc
xchg
outsl
dec
ljmp
ds
je
sbb
lcall
cmp
and
xchg
pop
loopne
pop
popa
sbb
stos
xlat
test
iret
push
xorl
jg
jge
ljmp
push
pmaxsw
xor
in
fstpt
scas
add
pop
xchg
lret
push
popa
jbe
insl
push
cmc
mov
jg
xchg
ljmp
fcmovne
push
ret
mov
push
or
cmp
hlt
dec
cmp
cwtl
mov
fs
ror
push
clc
jecxz
cmp
je
jne
inc
fwait
dec
xchg
jp
loopne
add
inc
fwait
push
mov
sub
dec
rorb
js
testb
or
out
adc
pusha
mov
inc
and
fimull
sub
sbb
pushf
inc
fwait
mov
arpl
aam
loop
sbb
and
outsb
adc
mov
jmp
jle
fdiv
jnp
lret
imul
mov
inc
inc
rol
jg
test
mov
movsl
push
mov
mov
rolb
nop
xchg
or
lods
sbb
je
or
andb
jnp
imul
scas
outsb
mov
int3
jg
xchg
or
xchg
test
push
insb
adc
mov
mov
arpl
push
pop
jne
jle
inc
mov
fidivrs
into
shr
cwtl
mov
or
mov
shrb
in
loope
xchg
xor
outsb
cmpsb
ret
jo
cmpl
mov
cwtl
xlat
int3
or
sbb
movsl
inc
in
iret
out
pop
cmp
divl
loope
shrl
arpl
jp
loopne
xor
inc
add
test
int3
adc
js
fwait
pop
pop
adc
mov
push
xor
pop
add
flds
and
mov
imul
movsb
lahf
push
sub
xchg
xchg
adc
or
mov
ja
js
jp
xlat
dec
mov
xor
dec
adc
out
or
push
sti
adc
stc
dec
mov
cmpl
xor
push
sahf
lcall
cmp
inc
inc
nop
mov
sbb
arpl
inc
xchg
es
cs
dec
add
sub
cmc
pop
cmp
add
pop
loope
popa
cmp
pop
in
stos
or
es
mov
xor
mov
leave
scas
loopne
jno
out
ja
addb
push
push
dec
adc
ljmp
and
stos
inc
dec
adc
mov
imul
jp
add
shll
mov
adc
idivb
in
adc
fwait
stc
sub
lods
cmpsb
adc
cmp
loopne
adc
cmp
sbb
mov
adc
out
jns
inc
lods
pusha
xchg
push
and
pop
jmp
scas
popa
ljmp
mov
inc
popa
or
enter
add
sub
dec
dec
ficoms
xor
fldenv
pop
sbb
pop
int
lods
fsts
push
push
out
push
mov
xor
lods
push
daa
nop
inc
les
es
cs
popf
test
scas
stc
mov
lea
push
stos
push
push
dec
into
jmp
xor
xchg
pop
int3
insb
mov
lret
dec
test
std
inc
push
in
add
or
push
adc
pop
enter
or
push
mov
in
xchg
mov
cmp
mov
out
test
enter
icebp
repnz
repnz
xchg
add
stos
stc
rcr
jl
arpl
repnz
or
enter
shl
bound
cmp
icebp
loopne
mov
inc
stos
popf
xchg
push
ud1
jge
cltd
sbb
dec
push
rol
in
pop
iret
add
decb
or
inc
mov
mov
or
jg
lcall
or
xchg
jge
mov
cli
ss
mov
mov
push
push
dec
sub
pop
xor
jmp
mov
jae
andb
cmp
xchg
xchg
inc
push
iret
mov
je
in
std
emms
jnp
nop
int3
add
icebp
sbb
cmp
pop
sbb
call
test
mov
in
pop
jmp
nop
rcll
cmp
imul
popf
fidivrl
sub
push
fistl
and
sbb
mov
dec
push
push
stos
lds
cmpsl
in
fists
mov
test
nop
aaa
lock
mov
fadds
sti
inc
inc
cli
dec
popa
andl
jae
js
div
mov
mov
pop
xor
std
repnz
and
hlt
mov
push
mov
icebp
stos
pop
out
lcall
das
push
into
sub
lret
sbb
xchg
fiadds
sbb
pop
das
popa
sti
loopne
or
xchg
add
adc
mov
lds
mov
enter
imul
mov
adc
cmp
push
lret
push
xor
jnp
loop
pop
shrl
insb
xchg
inc
xor
or
dec
out
cmp
xor
inc
mov
jbe
ds
pop
stos
cmp
pop
sub
test
jno,pt
xlat
push
cmpsl
sbb
testl
mov
push
jns
icebp
push
sti
sahf
jl
test
dec
cmp
fistpll
enter
test
mov
repnz
cmp
mov
fsubl
inc
pop
push
icebp
pop
add
jl
inc
mov
push
js
fcomp
pop
loop
jmp
inc
mov
adc
xchg
inc
loope
das
pushf
insl
jmp
pop
lahf
mov
add
inc
js
rcr
loopne
in
push
mov
in
nop
inc
mov
shlb
jp
push
pushf
add
pop
mov
out
sub
mov
jge
sti
cmp
clc
popf
xchg
mov
test
add
xor
or
inc
add
pop
repz
jecxz
gs
das
jl
cmp
scas
ja
addr16
test
shrb
xor
lahf
arpl
mov
fwait
movd
pop
mov
cwtl
mov
clc
incl
test
fbstp
fnstenv
push
jbe
ds
daa
sub
iret
iret
adc
cmpsl
pop
gs
sub
ds
out
fisubs
insl
mov
js
dec
xchg
jns
push
or
jp
and
sahf
and
cmp
in
sbb
jge
inc
add
and
addr16
cmp
lock
lret
cli
adc
push
xor
and
int
cmp
scas
and
xor
dec
mov
adcl
pop
jmp
xchg
push
fnstsw
repz
dec
add
push
xor
aas
bound
mov
sub
cmp
ret
aaa
in
pushf
incl
in
push
cmpsl
mov
cmp
cmpsb
stc
push
inc
test
push
mov
pop
jg
inc
cltd
dec
jg
imul
push
and
mov
jns
adc
add
dec
or
sbb
and
pusha
loope
sbb
or
push
fs
popa
int
clc
and
cs
dec
sti
rolb
mov
or
inc
push
mov
pop
hlt
jp
inc
fbld
fs
xchg
xchg
leave
cmp
ss
iret
push
jge
sbb
mov
or
mov
insl
and
adc
fsubp
add
inc
clc
inc
xor
mov
jne
sub
outsl
outsb
jle
insb
rcrl
mov
std
in
fcmovnbe
sbb
and
data16
and
jo
jecxz
xlat
out
std
sub
lods
dec
icebp
bound
jmp
inc
daa
std
mov
mov
insb
mov
xchg
or
pop
aam
xchg
pop
jae
cmc
or
inc
mov
mov
dec
in
rorl
mov
jns
shlb
mov
jmp
lods
ds
mov
mov
xchg
mov
ds
push
xor
xchg
fisubrl
mov
cmc
mov
aam
inc
ds
cmc
inc
sbb
cmp
rcll
adcb
aaa
bound
loope
and
pop
push
mov
scas
rolb
popf
lock
lea
jnp
addb
push
loope
aas
fwait
inc
ficompl
ss
jb
push
push
or
sbb
adc
in
push
jb
mov
cmp
js
lods
jns
out
adc
pop
xor
pop
stos
push
pop
xor
jecxz
sbb
orl
ljmp
cmp
sub
in
push
jmp
into
pop
xlat
jg
sub
ss
inc
imul
mov
fcomps
inc
add
push
cmp
sub
xor
xor
fwait
ret
in
repnz
mov
xorl
adc
insb
aaa
pop
adc
pop
outsb
cmc
inc
cmp
aad
into
sbb
mov
push
cmpsb
daa
adc
push
lea
sbb
inc
push
add
stc
nop
mov
fcoml
pop
fadds
stos
les
add
jbe
sbb
in
and
imul
sub
call
jl
cli
jge
out
fiadds
cs
lods
xchg
fs
mov
popf
sub
cmp
shr
mov
orl
es
fdivrl
pusha
ja
out
ss
add
adc
mov
sub
dec
scas
cs
xchg
in
and
jmp
popa
in
adc
cld
add
add
inc
sub
out
popf
stc
pop
adc
je
cli
fsubl
loopne
add
fsubrl
in
jae
inc
adc
mov
dec
nop
inc
fisttps
adcl
loop
out
jnp
nop
rorb
aam
ret
mov
or
movsl
scas
loopne
add
mov
sub
in
jl,pt
lea
outsb
int3
or
adc
cmp
jle
adc
dec
adc
out
jl
mov
sbbl
shlb
bound
jno
xor
leave
out
aam
mov
or
in
mov
das
iret
movsb
and
cmp
xor
mov
aam
in
xchg
xchg
in
pop
out
scas
and
jnp
daa
sti
loop
mov
cltd
sbb
out
mov
mov
dec
lret
pusha
xchg
jb
data16
adc
jo
scas
jae
xchg
xchg
cmp
mov
ret
pop
xchg
and
rol
fdivrl
xor
jbe
mov
nop
mov
shl
nop
jl
xchg
or
cmpsl
and
mov
movsb
dec
dec
mov
enter
movb
popa
xchg
out
xlat
and
imul
sahf
inc
jmp
or
fwait
js,pt
mov
mov
jl
adc
inc
inc
js
lcall
insb
ret
push
hlt
xor
or
call
and
mov
cmp
clc
mov
dec
sti
adc
jb
sub
cmp
jbe
movb
int
ss
jns
adc
mov
sbb
bts
mov
xor
inc
sub
aaa
lods
out
popa
cmpsb
dec
jns
jo
negl
mov
push
bound
or
or
jne
or
add
pop
add
rorl
cmp
popa
out
jecxz
int3
mov
push
stos
sub
rclb
fwait
push
sub
mov
movsb
mov
jb
in
ret
mov
setne
sarb
pop
mov
cmpsb
mov
fcompl
pop
dec
rorl
lds
xlat
insl
ljmp
mov
ret
jo
mov
push
dec
test
hlt
xchg
fsubs
sbb
add
lret
ret
fildl
xchg
pop
pop
jno
fdivl
add
rorl
ret
dec
in
add
xchg
negb
pushf
jmp
xchg
xor
fimull
adc
roll
sub
subl
js
push
xor
pop
cmc
ret
cmc
sahf
rcl
or
gs
push
jmp
sub
lret
repnz
stos
fdivrl
lret
ds
push
repz
fyl2xp1
and
xchg
lea
fwait
mov
dec
scas
sbb
or
mov
mov
hlt
cmpsb
aam
ja
mov
or
dec
movhps
std
pop
mov
fisttpll
lea
and
inc
and
mov
popf
jb
insl
test
jmp
xor
xchg
aaa
sub
shrl
call
fildl
xchg
or
or
fadds
or
aaa
xlat
flds
mov
aaa
fs
nop
sub
mov
aam
lret
lods
in
sbb
int
jae
jne
mov
cmp
test
add
mov
pop
popf
daa
or
int3
out
xchg
mov
shlb
adcb
das
mov
jg
pushf
sbb
lds
ret
out
push
xor
repnz
jnp
lock
add
dec
cmp
mov
std
out
dec
mov
adc
mov
jl
xbegin
mov
mov
lret
xor
cmp
stc
enter
icebp
or
rolb
xchg
cli
xor
xlat
or
fnstenv
gs
mov
adc
mov
sti
mov
push
in
dec
fs
je
and
xor
fnstenv
push
imul
push
stos
fmul
test
push
mov
inc
shrl
mov
fcmovnu
adc
out
clc
cmp
push
ss
lock
mov
ds
jg
cmp
cmp
xchg
cmc
in
push
lods
add
and
add
in
inc
lds
subb
dec
pop
sub
mov
add
pop
je
jb
push
mov
rcl
dec
fildl
jns
fistps
shrb
mov
lods
sbb
daa
lret
dec
cwtl
bound
mov
call
insb
fcoms
shrl
mov
in
jae
sbb
push
popf
add
fs
jbe
and
cmpsb
xchg
clc
and
insl
std
fs
mulb
imul
vpmuludq
xchg
cwtl
adc
sub
dec
jnp
cltd
fcompl
cwtl
jns
and
movsb
push
icebp
adc
cmp
mov
mov
jae
mov
out
test
lods
adcl
sub
inc
xchg
insb
sub
lahf
insl
adc
adc
sahf
cmp
std
inc
jmp
aaa
pop
jmp
push
fidivrl
orb
mov
outsl
jo
gs
call
cmpsl
mov
jo
ljmp
sahf
in
xchg
mov
xchg
add
inc
or
rcr
es
and
push
mov
and
dec
stos
test
mov
sbb
test
clc
and
xchg
jne
sub
sbbl
xchg
sub
test
mov
add
cmp
dec
jnp
or
push
xchg
dec
push
scas
jne
loop
lds
or
xchg
adc
pop
or
test
xor
dec
aaa
mov
add
pushf
aas
inc
aas
mov
pop
push
sarl
fs
loop
sub
jns
mov
lret
jae
das
fildll
dec
sar
xor
pop
into
icebp
xlat
xchg
or
sub
pop
mov
or
jae
pop
cs
aaa
inc
jp
cmpsl
pop
or
cld
mov
mov
rorb
jmp
push
push
fs
jo
sbb
lock
nop
and
icebp
movsb
mov
add
les
test
lea
dec
andl
mov
xor
sahf
or
xor
adc
pushl
add
aam
and
add
test
xchg
mov
sbb
loope
jnp
hlt
dec
loope
lcall
pop
mov
jnp
cwtl
sub
into
push
xchg
fucomp
sub
je
stos
mov
mov
jae
cmp
les
cmc
pop
js
jl
cmp
inc
dec
clc
popa
das
shl
xchg
cmp
xlat
push
sbb
stos
fs
mov
fisttpll
movsb
mov
push
pusha
incl
dec
pop
adc
pop
xor
cmpsl
bound
stc
dec
fistl
in
ds
sbb
movsl
xchg
dec
js
lds
mov
jmp
cmp
push
aam
insb
stc
pop
test
and
add
push
jb
gs
loop
popa
cmp
mov
adc
ret
mov
xchg
lds
mov
inc
stos
aam
push
xchg
push
or
lods
mov
fwait
jbe
fidivl
mov
and
rcrl
je
adc
or
loop
or
cs
jbe
insl
push
lds
loope
jmp
jle
mov
xchg
dec
xor
imul
rorb
jns
push
insb
in
ds
xchg
sub
and
out
cmpsl
stos
data16
jo
js
adc
dec
out
cmp
jle
pop
sarb
xchg
call
pop
dec
dec
pushf
pop
mov
out
jbe
aam
cmpsb
test
cli
imul
nop
push
sbb
das
pop
popa
mov
xor
lods
xchg
add
dec
bound
ja
inc
adcb
les
test
daa
hlt
stos
mov
jle
loope
sbb
adc
aaa
push
shrb
test
dec
sub
push
mov
pop
mov
pop
push
dec
pop
xchg
dec
repnz
nop
xor
lea
lret
scas
cmp
aaa
push
jne
mov
sub
mov
xchg
aas
or
mov
idivl
test
mov
imul
je
pop
pop
jg
add
call
rol
jmp
mov
fimull
add
data16
inc
adc
shlb
std
bndldx
mov
aad
sbb
sub
cmc
lds
lcall
fwait
mov
in
insl
mov
popa
jb
push
xlat
fisubs
sbb
pop
punpcklwd
mov
dec
cmp
adc
repz
repnz
mov
or
jge
pop
shrl
mov
test
cmp
fsubs
mov
mov
cmpsl
lahf
sbb
fucompp
iret
xor
lahf
dec
popf
add
es
push
lcall
aaa
jnp,pn
and
or
movl
mov
cmp
xor
clc
and
inc
scas
jb
ds
jns
sub
mov
js
adc
cs
imul
jno
push
mov
sbb
mov
sub
dec
mov
mov
xor
cmpsl
dec
xchg
int
in
mov
iret
inc
cmp
xchg
std
cmp
jle
mov
lods
pop
xchg
jg
mov
pop
jp
dec
cmpsl
adc
shrb
movsb
xchg
mov
shr
outsl
ss
mov
sbb
ljmp
aas
push
imulb
lret
mov
cmovno
cmp
sub
outsl
inc
test
xor
mov
jb
movsb
cwtl
dec
pop
mov
scas
push
cmp
mov
lret
je
icebp
jae
or
push
dec
sub
mov
mov
pushf
mov
aad
sbb
js
push
shlb
sbb
mov
sub
mov
int
pop
pop
lods
xchg
shll
mov
xchg
loopne
pop
popa
and
jle
sub
jnp
lret
movsl
push
scas
fs
pop
jb
mov
in
in
sbb
pusha
in
xchg
lahf
cmp
cmp
pop
bndstx
add
mov
lods
aas
pusha
jp
fdivrl
out
icebp
add
lods
jl
imul
dec
jmp
repnz
int3
repz
enter
dec
and
cmpsl
shrb
ret
popf
mov
ss
sub
into
inc
push
out
repnz
ret
adc
push
lret
mov
je
push
loopne
pop
jo
xchg
repnz
in
pop
sub
add
mul
xor
rorb
mov
sub
hlt
lock
jge
ret
bound
push
fs
jp
mov
icebp
sbb
add
jp
aad
jle
outsl
lcall
clc
inc
cmpsb
adc
clc
sarb
shlb
pop
pop
and
jp
ljmp
je
sub
jecxz
ret
fmulp
mov
jecxz
in
addr16
and
xchg
in
xchg
mov
fcmovu
fistpl
or
pop
pop
cli
lret
adc
ror
mov
rcrl
jmp
xchg
outsb
xor
fs
aam
mov
or
ds
insb
mov
mov
push
mov
loop
lret
jbe
pop
xor
addl
cli
mov
fisttps
insl
and
push
mov
ds
pop
lea
jno
inc
mov
fildl
icebp
mov
test
shlb
jns
jb
mov
lock
mov
leave
mov
ds
push
or
inc
push
sub
arpl
mov
pop
hlt
out
inc
pop
jns
rcll
fstpt
fwait
mov
lret
lahf
jl
ret
xor
mov
dec
std
stc
mov
aas
arpl
stos
sub
outsl
jne
cmovno
shr
movb
mov
mov
or
jno
out
xchg
jp
lret
imul
or
stos
lea
mov
mov
xor
mov
aam
or
js
xchg
scas
scas
shl
mov
jle
inc
and
adc
ja
adc
inc
mov
insl
push
sub
dec
dec
ljmp
xchg
cmp
mov
lods
fimull
xchg
and
data16
and
out
sub
stos
sbb
outsl
or
outsl
push
gs
and
fcmovnbe
jecxz
ds
or
je
push
add
lds
iret
je
mov
push
les
xchg
sub
and
out
dec
jp
test
pop
push
sbb
loop
stos
out
lods
pop
cwtl
adc
mov
inc
adc
outsl
imul
mov
jo
fstpt
mov
mov
fcomps
cmp
sbb
pop
sub
or
pop
aam
lcall
lahf
popf
loopne
test
test
pop
push
pop
loope
in
mov
push
sbb
pop
repnz
leave
sbb
or
mov
aad
and
push
push
imul
sahf
sub
or
adc
push
or
daa
test
mull
and
mov
sub
cmpsb
in
loope
call
stos
int
jno
loope
clc
lods
stos
or
push
or
mov
jo
insb
sbb
mov
int
insb
jnp
ret
adc
in
dec
pop
call
cmc
hlt
jne
cmp
jp
push
loop
inc
inc
inc
out
pop
jg
push
insl
daa
pop
imul
insb
pusha
push
jmp
mov
in
cmp
popa
or
cwtl
dec
js
xor
inc
enter
pop
mov
test
inc
mov
mov
je
jge
xor
dec
inc
pop
xchg
xchg
xor
jno
scas
test
cli
cltd
adc
xchg
hlt
psubusb
add
cmp
out
in
loope
jmp
popa
add
mov
repz
imul
es
sub
cmp
fiaddl
sub
jns
jg
jae
das
fisttpl
nop
mov
sbb
sbb
push
ret
loopne
mov
sub
adc
hlt
fwait
stc
leave
push
int3
jmp
stos
add
das
add
jge
pop
or
inc
xchg
jmp
xchg
add
inc
sub
mov
movsl
or
or
scas
in
sarb
ja
jne
xor
ja
stc
ja,pt
popf
jb
cwtl
cmpl
pop
in
and
je
mov
dec
cwtl
add
in
fistpl
addl
loop
les
add
leave
fcmovbe
and
mov
mov
in
xchg
into
sub
mov
daa
xor
repz
add
lods
pop
test
stos
movl
andl
cli
xor
mov
cmp
sbb
jb
pcmpgtd
lret
pop
sbb
in
mov
cmpsb
dec
mov
adc
push
adc
mov
int
subb
ja
jmp
lods
xor
mov
out
add
cmpsl
addb
adc
mov
dec
push
or
push
int3
clc
mov
test
add
mov
xor
and
addr16
sbb
push
dec
or
push
in
mov
fwait
outsl
cmp
cmc
adc
cmp
out
jecxz
sahf
xor
jge
jb
outsb
inc
mov
loopne
jns
leave
pop
jmp
lret
test
push
or
add
xchg
adc
ds
jmp
addr16
test
repnz
or
xor
sti
mov
lock
sub
cmc
dec
sub
mov
mov
into
lds
lcall
dec
fwait
push
sub
lock
xor
js
fildl
push
es
mov
jno
mov
sbb
and
imull
mov
sub
pop
and
jnp
mov
mov
push
push
int3
xchg
enter
pop
sbb
dec
add
imul
pop
cmp
mov
cwtl
lds
push
sbb
inc
jge,pn
pop
subb
lahf
out
mov
mov
mov
cmpsb
aad
fldz
decl
mov
call
sbb
jo
insl
sbb
fs
xlat
sbb
sub
andl
dec
push
stos
jge
cmp
gs
lcall
add
pop
fistpl
insb
pop
movl
mov
lahf
mov
addr16
mov
cmp
imul
pop
shrb
arpl
inc
ss
ds
mov
pop
repz
pop
lock
cmp
or
lods
mov
and
push
push
andl
cmpsb
out
mov
popl
mov
xchg
xchg
shrb
push
sub
xorb
popa
inc
stc
fldenv
add
arpl
call
movb
sub
xchg
cmpsb
adc
movsl
inc
xor
test
push
ret
pop
mov
sub
call
add
push
jne
push
cmp
mov
jg
xor
sbb
fsubl
push
push
sub
gs
sti
mov
imul
lret
xor
jp
pop
das
jl
pop
xchg
xchg
sub
fscale
leave
in
mov
fcomi
and
push
xchg
aam
sahf
ss
inc
xchg
add
rorl
adc
jmp
icebp
xchg
xor
adc
outsb
push
lods
mov
lds
lea
sbbb
movsl
cmovns
mov
arpl
int
ljmp
loop
pop
mov
outsb
mov
jnp
enter
dec
inc
adc
enter
mov
mov
and
mov
push
push
or
inc
dec
lods
xchg
lock
aam
sub
xrelease
out
pop
push
test
lods
mov
iret
mov
pop
and
mov
call
mov
aaa
xchg
ds
in
fistpll
xchg
sub
xadd
clc
je
mov
loope
call
or
aaa
out
pop
int
fs
mov
mov
jnp
insb
inc
cmpsl
cmpsl
lock
inc
pushf
or
lea
pop
and
push
addr16
dec
add
loop
adc
push
shlb
sbbl
inc
push
xor
cs
js
push
xchg
int3
xor
sbb
add
jg
outsb
addr16
out
jo
orb
cmpsb
sarb
in
pop
dec
mov
add
jbe
add
dec
add
dec
ja
push
mov
repnz
push
mov
mov
inc
hlt
xchg
mov
dec
sarb
dec
mov
es
or
pop
dec
adc
cmp
sahf
lret
ficompl
movsl
mov
mov
imul
xor
push
outsl
sub
cmp
inc
fidivs
jae
arpl
out
pop
icebp
aad
or
in
or
adc
stos
push
xor
lock
push
loope
pop
sahf
sarl
mov
call
push
sbb
test
sub
push
lock
xlat
out
cmp
lahf
xchg
or
push
test
in
or
pcmpgtw
xor
jnp
xor
mov
imull
mov
pop
negb
cmpsb
mov
mov
clc
orl
jle
lock
push
data16
cmp
and
fbld
push
ret
test
insl
sbb
jnp
xchg
out
adc
xchg
xor
pop
xor
int3
jecxz
mov
pop
push
call
les
outsb
adc
jne
xchg
out
cmp
test
movsl
mov
xorb
jnp
into
push
add
popa
int
adc
gs
sub
xor
jae
popf
fdiv
jns
shlb
pop
fst
leave
testb
sub
sbbl
add
xchg
mov
sbb
insb
dec
imul
add
inc
iret
xor
icebp
jmp
fwait
out
xor
lahf
xor
xorl
stc
sti
test
cmp
xorb
int3
cmp
push
cmp
push
or
push
andl
add
repz
pop
clc
ljmp
stc
ds
repnz
call
lock
sub
test
add
sbb
lods
cmp
rorl
sbbb
pop
adc
cltd
add
adc
aas
fadds
sar
lcall
out
push
cmp
mov
je
rcrl
out
xor
es
xchg
push
pcmpeqb
dec
jo
jbe
dec
cmp
sub
es
out
aaa
jae
sbbb
sbb
xchg
inc
pushf
test
stos
push
mov
arpl
or
arpl
fdivrl
jge
and
popf
icebp
sbb
stos
ds
lahf
sub
inc
loop
jg
xor
data16
sbb
and
in
xor
xchg
pop
test
mov
aaa
mov
cltd
aas
xlat
dec
xor
int3
je
dec
lods
ja
cwtl
jno
lods
leave
stos
mov
cmp
add
addr16
dec
xor
ljmp
dec
rolb
addr16
adc
jecxz
sbb
fnstsw
mov
sub
call
cwtl
fsubrl
or
push
jo
je
ret
jne
push
loope
pop
popl
inc
pop
mov
push
pop
jne
push
mov
push
dec
cltd
loopne
adc
rolb
cmp
lcall
inc
dec
icebp
rcrl
enter
icebp
xchg
cmp
gs
ret
insl
add
ret
out
movsb
adc
loop
mov
loope
fisubl
push
add
jnp
sbb
movsl
ja
mov
dec
pop
mov
jne
outsl
bound
push
mov
ja
lods
mov
or
xchg
or
dec
test
jbe
inc
bound
jecxz
lahf
adc
mov
adcb
mov
pop
sub
aaa
out
aaa
sub
test
sbb
jae
inc
outsb
dec
sub
ret
xor
add
push
mov
subl
cli
scas
fsubrl
push
and
jbe
mov
pop
mov
mov
sbb
stos
sub
dec
popl
fstl
sahf
je
ret
jmp
xor
jnp
fs
xchg
push
push
das
movsb
xor
sti
jno
fwait
out
orl
test
push
mov
jle
stos
rclb
and
lods
cmp
int3
sbb
lret
jg
mov
adc
adc
mov
xor
xchg
xchg
pop
xchg
jle
fs
roll
movsl
popa
cltd
or
cltd
scas
popa
fistl
push
and
es
and
mov
mov
adc
pop
vmovlps
sbb
xchg
ss
adc
jge
inc
nop
das
sti
and
iret
js
stc
xor
imul
xor
test
addb
lahf
ror
pop
push
sub
into
bound
xlat
sbb
mull
orb
shlb
lcall
cmovbe
jle
push
test
and
outsl
xor
lock
fbld
mov
jl
loope
outsl
mov
mov
das
or
add
sarl
out
xchg
mov
pop
jp
xchg
xor
callw
and
add
das
jnp
xchg
xchg
lods
adc
aaa
mov
addr16
push
dec
sub
xor
mov
and
flds
inc
aam
insl
inc
in
enter
pop
aam
jbe
and
inc
insl
aam
add
jnp
shl
dec
hlt
xchg
jo
mov
or
jno
in
lcall
and
loopne
popa
loop
adc
in
cmpsb
mov
push
test
loopne
mov
and
push
xor
jl
cs
dec
imull
mov
cltd
add
fistl
jb
ret
mov
leave
and
mov
or
stos
push
or
adc
dec
mov
add
mov
mov
mov
mov
bound
bound
mov
push
push
fdivl
push
sbb
xchg
fiaddl
jg
into
pop
fs
xor
in
sbb
push
outsb
les
or
icebp
outsl
and
pop
out
jbe
lret
and
push
aam
cwtl
mov
movsb
pop
push
inc
andl
mov
mov
adc
push
xchg
xor
and
xchg
mov
sbb
cld
movsl
mov
mov
xor
adc
imul
pop
out
test
inc
imul
sbb
int
push
pop
roll
int3
jg
mov
inc
add
je
shl
add
push
adc
lahf
cmp
cmp
ja
add
pop
and
mov
sti
sbb
rolb
aam
cmc
mov
add
jecxz
mov
adc
jb
test
jnp
notb
fstps
mov
add
lea
cld
in
scas
lret
leave
and
mov
jge
or
daa
mulb
pop
or
ror
mov
nop
out
adc
mov
aas
inc
inc
cmp
shlb
aam
mov
and
xchg
and
jo
imul
lods
inc
cmpb
bound
add
push
adc
mov
sbb
jmp
inc
xchg
test
inc
lcall
cmp
push
rcrb
dec
idivl
cmp
cmp
dec
insl
jmp
cmp
mov
dec
arpl
cmp
cld
cmp
fwait
lds
test
mov
out
dec
loope
rcr
inc
cmpsb
daa
xchg
xor
xchg
fwait
cmp
xchg
test
jb
ss
push
jp
xor
pop
addr16
loop
adc
leave
movsb
mov
enter
not
jecxz
jne
sbb
cmp
pop
mov
and
cmpsb
mov
data16
xlat
das
jbe
lock
sub
xchg
pop
cmpsl
and
das
and
push
imul
sbb
add
add
pop
icebp
outsl
imul
xchg
sub
dec
and
int3
cmc
mov
jl
add
mov
add
negb
insb
out
lahf
movsl
movsb
or
cmp
push
dec
pop
inc
or
mov
adc
sbb
add
into
bound
dec
dec
xor
sbb
je
jmp
fisttpl
pusha
or
pop
stc
in
in
mov
loope
lret
pop
shrl
mov
adc
rcr
sbb
mov
push
mov
flds
ljmp
xor
pop
lea
call
out
adc
cmp
add
test
mov
jo
cmp
cld
lcall
ljmp
and
iret
iret
outsb
mov
xor
fildl
xchg
mov
sbb
bound
mov
cmpsb
lret
adc
jmp
add
mov
lods
jo
add
cmpsb
push
shlb
adc
fcmovne
cld
mov
idivl
push
mov
inc
fdivl
push
loopne
lock
mov
jae
loopne
jo
dec
cmpsl
mov
bound
fsubs
int
mov
xchg
or
jns
xchg
not
dec
pop
bound
mov
fsts
dec
push
dec
lods
addr16
push
pop
mov
pop
inc
popa
sbb
dec
or
mov
cmp
sahf
pop
outsl
pop
push
into
insb
mov
adc
adc
sahf
pop
sbb
loopne
in
mov
or
inc
xchg
xchg
sbb
les
imul
dec
das
xchg
push
shll
fstps
inc
stos
fbld
mov
mov
push
mov
lcall
pop
dec
and
push
outsl
xchg
fst
insb
nop
pop
outsl
ret
inc
cmc
leave
dec
in
add
xchg
mov
jbe
iret
xchg
outsl
out
daa
push
clc
xor
push
cmp
mov
rcrb
adc
test
jb
mov
adc
pushf
fwait
cmp
xchg
mov
inc
push
lock
xchg
test
fucomi
js
cltd
dec
push
mov
xchg
js
push
dec
adc
in
xchg
pop
pop
fcmovb
negl
jns
add
mov
in
std
pop
adc
lahf
imul
jmp
dec
fildl
fldt
in
jno
shrb
and
sahf
mov
cli
mov
cltd
mov
mov
sysexit
jg
xchg
inc
test
lret
or
packssdw
addb
data16
add
leave
fs
ret
out
mov
sbb
push
int3
mov
movl
js
dec
loope
cli
call
mov
clc
xchg
xchg
mov
sti
push
cmpsw
outsb
lcall
pushf
jp
bound
xchg
dec
shl
mov
ret
sbb
enter
negb
inc
movsl
insl
and
dec
clc
lret
ds
and
repnz
add
scas
imul
dec
inc
ljmp
ds
lret
jno
adc
adc
adc
scas
cwtl
jg
add
push
fadds
inc
in
jge
mov
fsubrl
stc
loop
out
std
lds
sub
lcall
iret
jbe
pop
push
out
les
iret
inc
lret
test
cmp
enter
in
mov
pop
lods
aam
pop
push
fdivr
packssdw
int
mov
sbb
cli
jae
ficoml
repnz
lret
or
lcall
dec
pop
imul
lock
push
les
imul
out
or
pop
inc
in
int
mov
leave
inc
mov
out
cwtl
pop
imul
inc
icebp
imul
out
add
jp
int
aad
bound
cld
sahf
call
mov
xor
mov
pop
pop
mov
in
mov
jg
mov
adc
lcall
popf
ret
cmpsb
les
or
sub
push
repz
es
sti
jl
scas
push
repz
dec
add
fimull
clc
pop
dec
add
popf
aam
lds
stc
push
testl
pop
dec
jecxz
mov
leave
subb
jbe
bound
mov
hlt
out
xchg
sbb
dec
dec
in
cmp
mov
jge
xchg
fsubrs
dec
scas
dec
or
and
pop
shrb
bound
add
stos
pushf
dec
jne
and
xchg
pop
jb
out
outsb
test
scas
loop
mov
pop
mov
sbb
sti
aad
inc
decl
clc
push
hlt
in
daa
adc
pop
xchg
jbe
pop
dec
sbb
mov
pop
mov
addr16
out
adc
sbb
lea
xor
push
xchg
xor
jg
lahf
lods
ret
push
ret
ret
push
movsl
mov
pop
or
and
pop
dec
jl
xchg
mov
adc
cmc
leave
mov
dec
add
call
or
sub
into
jmp
xchg
xchg
cmp
jns
cltd
jae
push
dec
and
int3
or
outsb
mov
dec
mov
sbb
outsl
xchg
shll
add
add
aaa
insb
inc
sbb
pop
cmp
adc
out
sbb
mov
pop
popf
mov
mov
mov
sbb
shl
dec
dec
adc
test
in
ds
js
movsl
sub
fwait
ret
sbb
lcall
xor
popa
adc
push
mov
xor
shl
xor
pop
adc
sub
mov
add
cmp
jmp
repnz
mov
insb
movsb
add
lods
xchg
int3
and
fs
repz
mov
cltd
and
and
jge
cmp
add
pushf
das
jge
sbb
in
dec
nop
jmp
sti
scas
mov
sub
loope
sub
push
stos
xchg
shr
add
ret
lock
shl
out
cmp
inc
mov
dec
push
or
fsincos
repz
add
push
pushf
inc
sbb
shll
negb
and
or
mov
dec
jo
mov
clc
xchg
inc
ds
inc
stos
and
fstps
fisubrs
xchg
jae
pop
filds
mov
dec
xchg
dec
and
or
xchg
or
pop
mov
je
ret
mov
push
mov
push
xchg
dec
xor
test
mov
scas
sbb
cmc
push
push
xsha1
cmpsb
subps
lea
mov
mov
xchg
mov
adcl
cmp
sbb
outsl
pop
add
out
xor
mov
aam
inc
loopne
loop
aad
mov
gs
mov
mov
pop
xor
test
enter
mov
push
movsb
jecxz
fwait
pop
inc
addr16
xchg
lcall
pop
lds
mov
mov
cmp
rcll
xor
xchg
daa
mov
repz
xor
xor
aam
bnd
pushf
loopne
outsb
stos
ret
sub
mov
das
pop
and
in
push
insl
mov
out
pop
fsts
inc
loopne
ja
sbb
sub
mov
out
or
push
jmp
insb
sub
mov
and
in
inc
mov
clc
in
loope
or
sub
shlb
xor
sbb
xor
movsb
mov
cmp
mulb
mov
fmulp
sub
mov
cld
push
mov
mov
in
and
adc
aaa
and
aaa
in
mov
fisttps
scas
cmp
add
fsubrs
into
pop
mov
adc
inc
xchg
lods
inc
inc
out
insl
loop
addb
aad
mov
sahf
mov
xlat
xor
xchg
jmp
mov
mov
rcrl
push
sub
mull
xchg
mov
jmp
inc
iret
cwtl
pop
in
mov
daa
movsb
and
and
sahf
ret
cld
dec
orb
js
aas
call
mov
xchg
xchg
ret
fs
lods
test
xor
mov
mov
mov
sti
xor
sbb
es
adc
push
mov
pushf
mov
test
pusha
loop
cli
add
clc
push
cmp
cmp
imul
push
adc
hlt
in
lods
or
sub
repz
test
jb
add
jne
adc
into
roll
dec
sub
in
sub
sub
out
sbb
pop
lds
mov
call
data16
jno
pop
cmpsb
ss
mov
out
cmc
pop
int
adc
push
in
das
ja
jno
push
repnz
mov
int3
sahf
stos
les
mov
inc
inc
ja
xchg
cmp
addb
cwtl
mov
jae
inc
pop
loopne
push
xchg
push
or
dec
inc
cmp
xchg
or
testl
insl
and
mov
testl
js
cmpl
outsl
dec
lahf
mov
push
jge
js
mov
jp
ja
lods
and
push
popa
fadds
fnstsw
xchg
out
pop
push
pop
ljmp
nop
std
outsb
mov
enter
aaa
inc
mov
bound
jno
xchg
adc
mov
cli
test
xchg
push
enter
cmpsb
mov
push
fwait
sbb
out
test
stos
push
mov
addb
sbb
scas
xchg
out
popf
out
inc
test
jmp
or
mov
cmpsl
mov
icebp
xor
jg
pop
in
sub
clc
sahf
insl
incl
lods
pusha
pop
repnz
stos
in
cli
mov
push
rolb
jns
xchg
cwtl
or
lea
test
icebp
adc
mov
icebp
mul
dec
roll
mov
sub
dec
ljmp
add
add
pop
jmp
arpl
or
pop
lods
or
imul
inc
sbb
sbb
jae
mov
sub
pop
into
divl
pop
fwait
mov
mov
push
jae
rolb
pop
icebp
sarb
and
repz
push
adc
mov
pushf
xchg
push
es
sahf
sbb
cmp
push
sbbb
xor
fisttpl
jb
mov
mov
cmp
mov
ret
or
jns
inc
pop
push
sbb
iret
add
push
xchg
mov
js
add
lahf
sub
cmpsl
adc
iret
repnz
out
out
jp
push
inc
inc
push
pop
cmp
push
or
mov
aas
fsts
cmp
sbb
sarb
and
je
rorl
cmp
push
adc
push
cmp
enter
lcall
rorl
cmp
sbb
xchg
stc
xchg
mov
jmp
mov
sub
jp
sub
mov
ret
or
jge
lock
lea
rcrb
push
inc
lods
daa
xchg
mov
and
movsl
mov
sti
pop
xor
pusha
mov
repz
scas
xchg
ror
mov
adc
pop
push
dec
iret
push
mov
or
inc
adcb
jno
icebp
push
cmpsb
mul
and
dec
dec
mov
shlb
std
sbb
xchg
pop
dec
mov
sbb
add
sbb
jp
pop
dec
xlat
clc
ss
sbb
pop
sbb
in
dec
aaa
outsb
sub
sub
pop
pushf
jl
aaa
jmp
or
inc
test
add
stos
pop
out
out
mov
cmpsb
sub
jg
pushf
imul
jecxz
adc
stc
dec
mov
js
clc
mov
adc
cwtl
fsubr
inc
jns
shlb
push
xchg
mov
ret
mov
cmp
dec
cmc
jne
pop
pushf
cmpsb
mov
jbe
int
cmp
iret
jmp
inc
inc
dec
mov
or
pop
pop
jb
repz
aam
dec
hlt
orl
pop
fcmovbe
lods
insl
test
cltd
sbb
jo
fs
cli
cltd
aaa
mov
jecxz
sbbl
dec
arpl
and
popf
addr16
inc
fmull
fdivrl
insb
in
and
cmp
xchg
pop
pop
lods
cld
scas
xchg
pusha
or
repz
rclb
xor
mov
pusha
and
movl
hlt
xor
add
sti
jns
sbb
xchg
push
fstpt
pop
jl
movsb
cmp
or
xchg
inc
stos
pop
push
loopne
stos
shr
stc
cld
ficoms
mov
inc
test
shlb
mov
sub
andb
icebp
cli
aaa
push
enter
mov
popa
in
lods
mov
xchg
xchg
js
add
adc
xor
dec
xor
cmc
loop
jnp
loopne
mov
mov
aas
lock
pop
inc
ss
inc
addr16
iret
popa
pusha
xchg
push
push
out
jne
add
arpl
pushf
repnz
ret
sub
scas
fsubr
mov
unpckhps
inc
lcall
into
xchg
cmp
push
push
sub
push
cltd
cltd
xor
scas
sbb
negl
add
xchg
lods
fsqrt
lods
inc
push
xor
xor
ss
push
cld
or
pop
sub
lods
out
loopne
sbb
xor
fsubrs
maxps
shlb
jge
mov
inc
lcall
cs
xchg
es
pop
and
aas
pop
cmp
cmc
cmp
mov
cmp
inc
outsl
movswl
sbb
gs
push
in
jo
mov
mov
mov
imul
pusha
xchg
aas
and
ja
mov
insl
inc
iret
ss
movsl
sub
jge
outsb
lea
into
cwtl
inc
mov
and
xor
xorl
xlat
ljmp
orl
mov
adc
xchg
mov
jne
sbb
pop
inc
fucomi
adc
stos
xchg
inc
sbb
imul
sbb
mov
scas
or
jecxz
xchg
mov
mov
xchg
imul
fisttps
adc
push
xor
or
push
push
dec
ret
adc
sub
xchg
sub
repz
aam
and
sub
in
xor
adc
sub
fistpl
mov
jge
daa
fdiv
xlat
cmp
jmp
sub
xor
xor
lahf
aad
stos
lods
adc
neg
ja
loop
xor
cmp
jne
and
pushf
or
cltd
push
inc
or
arpl
jecxz
or
mov
test
xchg
sub
and
fiadds
sbbl
lret
xchg
pushl
loope
rcll
test
clc
cltd
sbb
sbb
loope
mov
jo
fisttpl
jecxz
mov
xor
gs
push
lea
lcall
push
rcrl
push
adc
push
cmpsl
dec
inc
or
or
out
inc
addl
jns
lods
repz
das
pop
mov
cltd
scas
mov
pop
iret
rcrl
sub
mov
push
xchg
xor
and
or
in
je
fiaddl
xor
imul
dec
cltd
mov
les
mov
aad
xor
pop
cmp
es
adc
and
xchg
gs
push
mov
int3
lods
es
mov
add
cmpb
fwait
push
pushf
out
cltd
xor
xchg
xor
sbb
out
das
mov
pop
sbb
add
dec
sub
data16
cld
mul
push
addr16
mov
dec
fxch
push
arpl
adc
stos
icebp
js
mov
pop
addr16
pop
add
inc
das
stc
add
mov
push
enter
sub
sbb
and
out
enter
ss
repnz
push
das
insb
int
popa
push
hlt
negl
out
push
mov
or
sahf
stos
cmp
sbb
adc
add
outsl
es
dec
pop
push
pop
lock
aaa
data16
mov
and
bnd
dec
sbb
sbb
push
and
cmp
outsl
dec
leave
aaa
outsl
xor
pushf
aam
stos
jo
sti
dec
imul
out
int
loopne
fidivs
inc
cmp
push
push
pop
xchg
sbb
leave
fs
dec
fists
sub
push
inc
inc
pop
add
leave
dec
adc
xchg
insb
dec
and
dec
jmp
leave
and
push
push
lea
scas
cmp
xchg
cli
mov
sbb
mov
xchg
xchg
xchg
in
push
push
pusha
pop
or
adc
cmp
sub
adc
test
mov
fsubrs
dec
pop
ret
push
xchg
andl
repz
lea
in
call
movsl
push
xor
jae
jp
mov
cwtl
dec
and
mov
sahf
push
iret
fnstcw
adc
movhps
mov
jno
daa
adc
and
inc
adc
daa
lahf
filds
rcrb
je
jae
fcomps
test
cmpsl
or
sti
imul
mov
aaa
xor
ljmp
push
ret
pop
imul
nop
mov
fwait
loope
fistpl
jne
ds
push
pop
xchg
inc
add
test
xchg
jl
lods
inc
ret
idivl
inc
push
jmp
cmpsb
push
aam
lcall
mov
xchg
pop
jp
nop
fstl
xor
sub
subb
xchg
mov
jb
jbe
out
out
inc
in
aam
push
fisubrs
pop
dec
sub
push
roll
hlt
pushf
jl
xchg
pop
xlat
jg
sub
lcall
mov
sahf
sahf
in
out
jbe
pusha
inc
and
mov
pop
addr16
cmp
popa
daa
sbb
sarl
lret
ljmp
stos
call
andb
pop
cmp
imul
inc
jmpw
mov
xlat
adcb
test
push
fdivl
mov
cmp
test
dec
mov
dec
sub
movsl
outsb
popa
jne
cmp
dec
lcall
cmpsl
jge
xchg
mov
jns
add
fdiv
aad
push
fstl
dec
and
push
pushf
popf
andb
popf
clc
fdivrs
cmp
lret
lahf
fidivrs
xlat
cmp
cwtl
xor
mov
xchg
cmp
cmpsl
pushf
mov
jge
jmp
xchg
int3
scas
xchg
mov
in
std
imul
testb
xchg
icebp
sbb
seta
adc
je
mov
cmc
and
test
fs
fs
lret
xor
xchg
test
loop
enter
add
movsl
shr
mov
xor
ds
call
lahf
jecxz
sbb
cs
sub
test
inc
mov
lcall
push
andb
mov
shrl
gs
push
ficompl
and
sbb
push
pop
add
pusha
xchg
cwtl
inc
inc
iret
jecxz
xchg
ljmp
mov
leave
cmp
mov
or
stos
adc
mov
shl
jns
mov
scas
inc
sub
cld
pop
dec
xchg
lret
jne
pop
sub
mov
repz
inc
mov
xchg
filds
or
inc
xchg
sbbl
and
popa
cltd
fsubl
nop
pop
pop
in
lods
call
mov
cmpsb
xlat
nop
mov
mov
xchg
insl
jns
js
cld
out
adc
jnp
clc
pop
ret
ja
cmpb
jp
js
cwtl
cmc
lret
cmp
pop
mov
in
sti
mov
lahf
lods
sbb
inc
cmpl
inc
push
adc
setb
adc
push
repz
inc
jne
mov
inc
dec
cmp
and
cmp
out
movsb
push
test
pop
inc
and
inc
fcmovu
gs
and
inc
fdivrl
aam
sbb
pop
sub
adc
mov
dec
sbbl
or
jge
or
in
push
daa
repnz
jecxz
in
insb
mov
xchg
repz
fisttpll
inc
bound
fcompl
fisttpll
add
xchg
add
jb
int3
xchg
js
dec
test
or
int3
fwait
movsl
pop
pop
lret
divb
sub
stos
je
push
add
loopne
mov
int3
jge
jns
adc
stos
das
mov
inc
jmp
xchg
in
jge
dec
dec
arpl
repnz
out
mov
lea
and
nop
pop
or
aad
stos
adc
fdivp
fsubr
stos
fcomps
fimull
aaa
inc
jns
cli
sbb
xor
ret
mov
repnz
push
mov
xor
jmp
sub
adc
notl
xchg
jmp
jnp
mov
mov
pop
stos
pop
fmuls
fistpl
lret
out
jo
mov
or
int
cmpb
aam
mov
sub
and
push
xlat
lcall
mov
cwtl
xor
loope
xor
testb
lea
pop
and
push
jmp
inc
cmp
push
leave
imul
jbe
pushf
clc
fwait
loope
bound
or
or
jg
lret
sub
sub
adc
ja
pop
jle
adc
dec
push
sbb
mov
scas
add
or
xchg
cli
and
mov
callw
inc
hlt
nop
iret
mov
sub
imul
jb
xchg
jns
movsb
dec
cvttps2pi
xchg
fidivrl
outsb
or
mov
xor
jns
out
inc
fs
repz
repz
sti
aas
or
out
rcl
inc
in
xchg
sti
fcomi
push
out
in
mov
mul
cmp
mov
andb
test
icebp
jb
popa
sarl
pop
je
inc
call
mov
hlt
sbb
cmpsl
adc
sub
fcompl
pop
push
push
mov
imul
adc
pop
sbb
inc
ror
inc
sub
int
or
mov
jo
lock
lret
mov
cmp
stc
ljmp
mov
int3
push
xor
int3
inc
or
ljmp
cli
jb
cli
cmp
outsl
lock
mov
push
jecxz
xchg
dec
jmp
add
inc
add
rolb
adc
add
sub
add
outsl
inc
add
push
add
sub
inc
add
add
roll
mov
sti
jb
pop
add
or
adc
mov
mov
adc
mov
or
or
pop
arpl
xor
pop
outsb
leave
jns
int3
testb
push
aad
addr16
stos
out
aad
mov
out
sub
lods
shll
push
push
and
mov
xchg
aad
aad
cmp
push
adc
xchg
pop
pop
icebp
adc
dec
js
sbb
icebp
inc
repz
add
pop
xchg
sbb
shl
test
lds
cmp
ja
inc
mov
stc
es
push
enter
enter
lds
out
negl
cmp
push
jle
rclb
cs
dec
lahf
pop
stc
and
add
pop
mov
dec
inc
and
stc
inc
adc
fmul
jle
fsub
out
cmp
xchg
mov
aas
andb
push
sub
mov
andl
jge
sub
nop
push
mov
test
or
adc
adc
sbb
lds
cmp
aam
rolb
dec
and
rclb
test
sarl
inc
push
xor
mov
inc
jecxz
sbb
bound
mov
add
ljmp
or
dec
imull
sub
fs
mov
cld
movsl
mov
push
movsl
mov
daa
push
lea
add
mov
push
stos
sbb
and
push
mov
xor
pop
loope
xchg
cmp
sub
lods
dec
and
loope
lods
out
or
mov
push
push
andl
xor
mov
aas
fs
cmp
mov
std
add
stc
xchg
test
pop
jb
jnp
sbb
mov
pop
push
xor
stos
xchg
adc
dec
cmp
adc
xchg
or
out
ret
and
ljmp
mov
mov
call
inc
xchg
clc
or
push
fildl
stc
sbb
out
dec
push
mov
aad
cmp
inc
jl
mov
pop
rcr
mov
inc
adc
fidivs
jno
data16
xchg
inc
test
insb
pop
fdivs
addl
es
std
sub
out
lods
pop
xchg
adc
sub
dec
mov
mov
xor
xchg
mov
aam
or
dec
je
popl
jmp
insl
addr16
sbb
shll
mov
push
test
mulb
or
push
cli
and
mov
out
insl
loop
sbb
mov
popf
decl
jp
xorb
nop
fldenv
push
xchg
roll
inc
dec
inc
fstpl
mov
stos
or
cmpsb
sarb
jle
icebp
cmp
cmp
xor
test
jmp
push
out
fwait
loop
xor
mov
test
shr
and
mov
ret
popfw
push
in
fs
mov
in
out
sub
cmpsb
xchg
jnp
lret
adc
push
inc
gs
push
jmp
fcmovu
jns
mov
fidivl
mov
xchg
sbb
pop
xchg
dec
repnz
lahf
imul
push
jnp
sbb
sbb
mov
fcmovnb
sti
in
outsb
outsb
ss
add
mov
sub
lret
adc
jb
mov
sub
loop
or
inc
or
mov
xchg
gs
repnz
arpl
insb
js
lods
inc
es
pop
mov
fcomi
mov
inc
jae
jb
or
leave
fdivs
sbb
dec
sub
mov
insl
loop
loopne
xlat
jp
movsl
mov
ds
sbb
sbb
push
jg
and
add
jg
jmp
cmpsb
std
push
loopne
xchg
and
imul
lcall
out
jg
xchg
pop
and
or
add
inc
cmp
mov
xor
inc
or
jb
adc
jnp
nop
es
pop
jns
stos
test
mov
loope
sarl
xor
push
rorl
in
xchg
adc
incl
cli
mov
adc
iret
fiaddl
pop
cmp
pusha
into
out
out
aas
inc
cmp
and
pop
or
lea
pushw
jb
lods
push
std
xchg
add
sub
adc
jnp,pn
shlb
mov
cmp
lock
mov
xor
cmp
hlt
pop
adc
repz
sub
xchg
sbb
xchg
xchg
cwtl
and
add
popf
add
lods
icebp
rorb
inc
int
sub
std
adc
arpl
fs
cmpsl
sbb
psraw
push
je
inc
mov
loopne
mov
iret
sub
push
push
xor
push
xchg
push
mov
push
xorl
lods
pushf
leave
bound
and
and
pushfw
adc
mov
adc
fnstsw
or
int
notl
mov
out
mov
mov
mov
adc
jecxz
iret
in
and
stos
mov
jo
or
movsb
in
ret
icebp
mov
das
mov
mov
inc
inc
jg
cmp
add
sbb
shlb
ja
and
add
inc
xor
xor
mov
movsb
icebp
fimuls
das
add
jne
adcb
lods
scas
and
or
je
fisttpl
aaa
aas
pop
push
push
inc
int
add
enter
push
adc
push
ficoms
jl
mov
add
xchg
mov
lods
dec
cmp
pop
cmpsl
rcr
pop
or
sub
push
sbb
mov
xlat
insl
inc
push
fucomip
xor
cld
mov
pop
mov
pop
in
cli
mov
out
and
and
dec
push
scas
push
mov
popa
mov
jbe
arpl
xchg
pop
mov
cs
shr
xor
sub
sbb
xchg
add
xchg
cmp
aad
rcr
mov
ljmp
pop
mov
adc
xlat
leave
mov
or
cwtl
loope
shrb
les
pop
insl
aam
dec
sub
dec
rcl
adc
aad
xchg
in
or
cmp
mov
leave
bound
aaa
fisttps
jl
xchg
jb
push
push
dec
push
test
repz
mov
mov
lret
pop
fmull
mov
fnstcw
mov
push
mov
xchg
inc
and
jo
test
adc
out
lret
pop
hlt
out
cs
loopne
in
push
pop
and
out
sub
test
fcmovu
loope
cltd
sub
stos
pop
int
sub
add
or
or
mov
rclb
push
jecxz
add
sbb
cmp
and
mov
and
pop
mov
jb
jmp
sub
push
xchg
push
push
mov
mov
jnp
mov
xor
push
mov
bnd
jmp
pushf
pop
adc
lea
pop
sub
dec
cmp
bnd
call
add
pop
ljmp
sarl
mov
sbb
movsl
mov
and
decl
or
neg
dec
pop
mov
sub
cmp
push
gs
cld
lahf
mov
jecxz
call
mov
pop
lret
jmp
adc
les
cmpl
or
push
out
sub
stos
sub
pop
fidivs
dec
dec
adc
rorb
int3
cmpsl
rcrb
mov
or
and
loope
aaa
int3
xchg
hlt
add
mov
leave
insl
add
in
leave
mov
jg
jnp
je
outsl
mov
and
ja
add
insl
lahf
inc
mov
xchg
lods
int3
call
scas
pop
ret
iret
sbb
int3
sub
jbe
cltd
xlat
or
inc
dec
cmpb
pop
insl
push
sbb
bsf
pushl
loop
mov
data16
cmp
mov
sbb
ljmp
mov
push
fwait
lods
outsb
mov
insl
xor
cmp
push
fidivrl
pop
inc
mov
xor
ja
mov
dec
ljmp
push
jmp
shll
inc
add
lods
sub
push
int
mov
mov
jecxz
inc
dec
xchg
and
push
test
mov
jecxz
adc
cmpsb
mov
xchg
jmp
pop
push
inc
enter
lods
inc
rolb
pop
loope
mov
pop
mov
jge
cmc
out
adc
loop
test
pop
or
pop
mov
push
adc
jb
xchg
data16
popf
sub
add
lcall
mov
movsl
xor
xchg
fucomp
js
cmp
push
mov
sbb
mov
xchg
push
insb
setae
mov
mov
lods
mov
push
addl
das
rcrb
cmp
shlb
push
jae
xor
add
fisubs
and
jp
ret
xchg
fst
adc
in
and
inc
xorb
mov
rcr
push
mov
daa
lret
or
and
enter
xor
pop
add
les
outsb
jns
ds
loopne
or
outsb
pop
push
jmp
aad
fbld
aas
inc
movsl
mov
inc
xchg
data16
mov
imulb
ret
sub
in
pop
jb
rcll
inc
arpl
jg
mov
dec
and
scas
cs
xor
hlt
fistpl
sti
rcll
popf
adc
ljmp
mov
add
sub
pop
dec
cmp
push
divl
js
push
loop
fwait
imul
sbbl
cld
sbb
mov
outsl
xchg
pusha
mov
and
int3
sbb
pushf
push
mov
dec
adc
adc
inc
out
shlb
dec
sbb
mov
xor
or
bound
mov
dec
dec
sbb
mov
sbb
xchg
mov
out
or
test
mov
and
cmp
push
mov
mov
cmc
out
pop
push
dec
jl
dec
loope
filds
imul
push
push
dec
jae
out
jbe
sub
lret
add
int
or
js
and
xlat
push
inc
mov
and
fs
or
in
push
shll
std
push
cmc
andl
stc
or
adc
mov
movsl
push
mov
scas
std
shl
cmpl
int
xchg
lock
pusha
shrl
bound
popa
shll
dec
and
or
dec
jnp
pop
xchg
cmpsl
icebp
int
mov
sbb
cld
mov
jecxz
fs
add
cmpsb
nop
aaa
repz
pop
icebp
pop
sbb
cwtl
ds
sub
into
and
mov
add
cmp
xorb
xor
fldenv
mov
push
fchs
push
mov
insl
jmp
sbb
cmp
mov
push
push
out
adc
nop
out
pop
cs
xor
jge
push
stc
enter
fidivrs
ljmp
or
adc
cwtl
pop
sbb
mov
xchg
call
pusha
imul
cmc
sub
or
test
jecxz
stos
fldt
test
cmp
inc
and
xorl
pusha
sbbl
insl
jmp
xor
pusha
xchg
loop
repnz
jmp
rclb
push
mov
xchg
test
and
aaa
push
in
loopew
mov
or
xor
movsl
out
inc
nop
pop
out
lcall
aad
rolb
lds
cmp
pop
dec
sbb
outsl
test
fistl
xchg
stos
add
sbb
sub
aaa
sbb
jge
movsb
daa
jge
scas
insb
rcrb
push
lock
fnstsw
adc
and
scas
or
dec
mov
divl
pop
test
idiv
lret
bound
inc
repz
and
add
xor
push
xor
jge
xchg
mov
lods
inc
imul
shlb
jp
pop
adc
cld
repz
lret
push
cmpl
test
out
push
ss
dec
ficoms
clc
enter
ss
nop
rorb
jecxz
adc
adc
adc
dec
jo
mov
cmc
mov
stc
cs
enter
cmpl
push
cmp
mov
mov
loope
vpsubd
dec
or
imul
jb
out
into
xlat
jb
mov
add
fistpl
sbb
insb
or
ds
cmp
addr16
stos
fdivp
mov
ret
cltd
or
pop
mov
orb
jmp
and
mov
add
shrl
jecxz
mov
into
pop
pop
popf
or
and
sub
popf
mov
lahf
mov
adc
xor
imul
out
mov
mov
mov
jne
inc
xchg
mov
ret
sbb
leave
repz
in
ret
mov
rdmsr
notb
test
xchg
mov
cmc
mov
out
jg
add
sbb
jns
bound
fiaddl
adc
mov
std
cli
iret
mov
pop
mov
outsb
pop
in
sbb
sbb
les
fisubrl
add
sbbl
push
or
mov
js
or
test
outsb
fistpll
jne
pushf
mov
cmpsl
les
xchg
cmp
mov
dec
adc
sub
mov
jne
sub
pop
data16
movsb
test
imul
jb
jle
shlb
aam
stc
pop
and
cmpsl
fiaddl
fcmovne
enter
jle
dec
pop
movsb
loope
negl
jle
add
push
and
std
std
xor
and
jnp
sti
mov
jg
and
pushf
dec
ret
mov
testb
subl
dec
insb
fmul
cltd
mov
outsl
test
test
sbb
out
xor
das
loopne
sbb
pop
stc
inc
and
addb
outsb
mov
sbb
je
jnp
sbb
mov
int3
and
cmp
or
and
loop
push
lcall
dec
adc
pop
or
lcall
and
cltd
xorb
mov
push
stos
pop
lods
mov
and
mov
pop
xchg
xchg
out
es
pop
inc
cmpb
push
mov
jg
ror
jmp
movsl
sbb
pop
pop
adc
mov
ja
xor
xchg
or
add
xchg
jne
xor
mov
jns
dec
add
aad
scas
lods
pop
mov
mov
adc
mov
inc
mov
inc
sbbb
mov
fsubrp
aam
sbb
sarl
lahf
dec
pop
dec
scas
mov
ret
pop
pop
push
jmp
out
in
iret
repnz
mov
sbb
mov
and
jge
adc
and
outsl
ss
mov
add
fldcw
fistl
loope
push
outsb
adc
cmp
jne
push
hlt
outsl
icebp
xchg
mov
inc
decb
ficompl
mov
mov
push
movsb
xor
in
sub
xor
inc
ja
sbb
hlt
mov
imul
in
mov
dec
mov
inc
xor
and
mov
andb
dec
mov
dec
add
jbe
pop
adc
fidivl
mov
faddl
mov
inc
in
mov
push
enter
ss
dec
mov
addb
xor
shll
stc
ja
pop
nop
adc
lock
xchg
adc
sbb
notb
inc
dec
jl
push
mov
aas
aas
lea
andl
stos
sbb
pop
xor
dec
push
adc
lahf
or
rcll
dec
add
lcall
test
jmp
jne
rcl
jl
push
iret
sbb
repz
push
pop
icebp
out
and
xchg
loopne
jmp
sub
add
adc
inc
adc
les
jae
fcoms
dec
jnp
mov
mov
push
fadds
adc
cwtl
mov
pop
dec
imul
into
or
fwait
pop
fbld
loope
testb
pop
mov
pop
sub
cltd
and
pop
fmul
rcrl
and
mov
inc
mov
mov
inc
adc
pop
test
dec
and
sub
adc
rcll
gs
pop
or
mov
movsb
push
aaa
dec
sub
pop
repnz
xchg
sub
sub
dec
push
mov
cld
out
mov
push
cmp
cs
testb
mov
pop
sbb
in
hlt
pop
stc
sub
add
sbb
pop
dec
xchg
adc
ds
aas
mov
and
jno
xchg
pop
imul
and
cmpsl
andb
loop
mov
pop
lods
adc
jle
leave
pop
add
add
cmp
mov
or
push
xor
fldt
inc
lcall
dec
and
pop
and
mov
sbb
sub
add
js
push
xchg
aas
sti
pop
xorl
sub
in
xor
cwtl
or
into
sbb
movsl
inc
cmp
hlt
jnp
movb
icebp
jo
inc
lcall
loop
scas
test
out
test
cmp
mov
rclb
clc
cli
mov
xchg
push
xchg
int3
fdivrl
cltd
jb
aam
mov
mov
das
push
pushf
jle
popa
int
out
out
stos
lret
push
dec
jb
div
lret
mov
or
int
pop
cmpsl
test
gs
jns
cmc
es
fstpt
mull
cmc
in
mov
jp
ret
xchg
mov
adc
mov
add
sub
daa
mov
data16
sbb
inc
data16
in
mov
imul
sub
cld
arpl
jp
fists
pop
inc
daa
cmp
mov
lock
xchg
xor
sub
jl
xchg
nop
fldl2e
popf
xor
fidivs
scas
aas
inc
js
lahf
jae
xchg
dec
dec
push
jns
mov
cmpsb
mov
dec
into
xchg
int
sbb
or
cmp
pop
mov
clc
cmp
fsubrs
repnz
lcall
cs
loop
fisttps
cmc
mov
loop
fidivrs
inc
daa
and
push
sub
cmpsl
push
ja
jg
fisubrl
pop
and
fwait
mov
mov
in
dec
jne
dec
inc
cmp
cmp
hlt
cmc
loope
jl
xchg
test
mov
jle
mov
xor
mov
adcb
call
adc
xchg
cmp
call
xchg
je
jnp
dec
aam
mov
inc
mov
add
and
sbb
insl
cld
int3
fdivrl
ss
add
push
loope
cltd
ds
fcoml
mov
inc
mov
mov
jp
sti
movl
xchg
push
inc
jge
test
push
popf
push
call
hlt
jbe
inc
or
fwait
sbb
cwtl
add
bound
fwait
xor
into
inc
or
xchg
pop
mulb
insl
sbb
add
inc
xchg
cmc
orl
mov
call
dec
aam
scas
cs
cs
fdivl
jbe
mov
lcall
rclb
leave
in
popa
andl
fildll
popf
inc
aas
push
push
pop
rorl
adc
mull
int3
movsl
pop
movsl
mov
add
xchg
jbe
xlat
jns
inc
or
cmp
or
stc
sub
inc
into
aad
push
jns
movsb
out
jmp
es
dec
and
pop
loope
cwtl
sbb
push
std
xor
inc
daa
add
push
mov
lods
add
addr16
adc
push
idivl
cmp
cwtl
add
and
shlb
inc
mov
xor
insb
leave
mov
rorl
push
jbe
add
stc
out
scas
call
pop
lods
mov
xchg
js
jb
jg
add
punpckldq
and
adc
aaa
pop
mov
xchg
sub
hlt
and
icebp
repnz
outsl
pop
mov
jmp
sbb
fbstp
jno
inc
out
mov
in
push
icebp
inc
sub
jmp
mov
sti
sbb
fistpl
mov
cmp
stos
xchg
dec
mov
fwait
push
pop
aam
lods
outsl
je
mov
or
jle
lret
push
jp
stos
jno
cmc
call
icebp
out
aad
lods
insl
rclb
stc
xchg
xor
xchg
mov
call
std
mov
lock
out
jno
jbe
hlt
and
sbb
fnstenv
or
pop
mov
adc
cmpsl
adc
pop
adcl
lock
clc
ret
cmc
pop
pop
xorb
aas
aas
loop
shr
test
out
imul
jecxz
data16
jl
test
adc
ds
sub
fldcw
scas
or
outsl
ret
subl
dec
shlb
xor
jb
call
movsl
fistps
mov
daa
mov
inc
and
xor
clc
dec
mov
cmp
les
data16
mov
sbb
movl
sbb
loope
mov
adc
lcall
add
test
lret
cmp
lea
sub
popa
mov
push
rolb
loopne
jne
sbb
mov
imul
dec
popa
fldcw
jns
enter
push
pop
int3
adc
ss
popa
int
in
pop
filds
ds
scas
pop
xlat
xchg
pushl
aaa
fwait
mov
sbbl
dec
push
mulb
jge
mov
sub
sbb
sbb
push
pop
std
sbb
cmp
mov
insb
or
nop
jae
jns
ficoml
sub
stos
mov
pop
xchg
push
xchg
mov
js
xchg
jbe
inc
inc
xor
ljmp
out
test
in
testl
lcall
inc
push
jbe
mov
xchg
mov
cmp
orl
sar
stc
mov
or
pop
add
rolb
push
notb
and
add
stc
cmp
stc
int3
sbb
fs
pop
xor
xchg
sahf
in
pop
cmp
and
lods
insb
cli
or
repnz
jg
popf
mov
pop
roll
divl
or
push
adc
and
pop
lret
push
icebp
insb
gs
and
jmp
jl
lock
scas
ret
inc
and
xchg
dec
int
loope
pop
fcmovnbe
xor
pop
pushf
in
inc
sarb
filds
hlt
stos
test
enter
inc
notb
xchg
jl
fimull
pop
push
movb
xor
out
cmpsb
push
xor
stos
pop
cmc
movsb
add
in
pop
lcall
add
mov
lcall
mov
mov
ficoms
xor
lock
add
or
jae
loop
jl
inc
push
inc
adc
mov
sbb
and
fs
cmp
jle
push
std
mov
enter
orl
mulb
ret
pusha
in
aam
xor
mov
jmp
loopne
pushf
std
sbb
xchg
insb
push
leave
or
into
inc
sbb
sbb
repz
rorb
push
xlat
movsl
repnz
and
lahf
neg
dec
arpl
mov
jmp
addr16
push
jmp
jle
jb
cmp
ficoml
dec
jne
mov
ret
lock
adc
lods
xchg
stc
or
lock
test
lock
or
push
mov
push
js
imulb
pop
outsb
jmp
shr
sub
pop
xchg
jo
xor
or
jmp
dec
in
pop
mov
pop
int3
movsb
sbbl
out
sbb
outsb
cmp
xor
jl
nop
pop
mov
mov
xor
push
rcr
imul
add
dec
ja
push
popa
adc
bound
ljmp
popa
fbstp
sub
pop
sahf
mov
pop
scas
loopne
adc
test
mov
sub
pusha
adc
xchg
jp
packsswb
out
pushf
loope
jl,pt
mov
sbb
loop
cmp
cmpsl
cwtl
enter
cmpsb
inc
xor
xchg
pop
pop
movsl
push
sbb
loop
lcall
mov
popf
hlt
push
pop
daa
pop
fistpl
push
ror
lock
jb
or
mov
pop
jo
sbb
clc
rcrb
je
sub
adc
jmp
push
xchg
movsb
andl
and
jl
repz
or
mov
fstpl
mov
dec
ret
push
mov
inc
cltd
je
xchg
push
scas
sahf
aad
fldenv
or
aam
sbb
and
aad
fcomps
mov
das
dec
push
inc
scas
fsts
dec
mov
mov
and
jns,pt
adc
push
fistl
into
insl
mov
nop
ss
lods
mov
inc
mov
mov
dec
leave
sbb
arpl
gs
push
lods
repnz
fs
in
inc
ret
and
outsb
in
in
inc
in
fstpt
inc
or
cmp
mov
xchg
fcomps
cmp
outsl
xor
dec
xchg
imul
movsl
dec
divl
fcoml
in
sbb
mov
jle
mov
fldcw
mov
fwait
sbb
insl
subl
ret
psrlq
pop
pop
fisubrl
xchg
inc
scas
sub
aas
xchg
xchg
mov
or
add
inc
cmc
pop
adc
xchg
insl
test
dec
gs
xor
insb
add
lock
cmpl
cltd
add
adc
es
ss
jns
dec
mov
jne
xlat
lahf
int
and
or
clc
pop
pop
subb
sbb
icebp
add
cmp
fmulp
fdiv
enter
inc
test
outsb
test
les
cmp
adc
sub
sub
mov
sub
popf
or
sub
jl
add
pop
or
cmc
pop
test
sbb
in
mov
les
dec
subl
push
lods
int3
and
cmpsl
call
xchg
movsl
dec
popf
jbe
pop
ljmp
aad
stos
and
pop
push
cmp
mov
or
icebp
xor
pusha
outsb
gs
enter
ds
sub
pop
out
adc
xchg
mov
sti
jge
dec
push
sbb
lret
les
iret
hlt
cltd
mov
aam
in
and
push
jmp
sarl
sbbb
in
outsl
and
mov
dec
mov
andl
pop
arpl
inc
out
mov
mov
or
and
or
lret
in
in
add
dec
cld
xchg
jno
jg
jne
pop
lods
out
psraw
mov
mov
jl
fs
popf
dec
push
roll
hlt
lcall
insl
cmp
out
push
mov
insl
dec
xchg
pusha
ret
jmp
cmpsl
cmp
lcall
ljmp
dec
test
orl
loopne
sahf
push
and
cmp
imul
xor
add
sub
add
ret
push
mov
adc
mov
inc
pusha
int3
in
add
xor
cmp
test
sar
mov
ds
jnp
xor
fdivp
add
test
mov
imul
ret
or
jbe
test
jno
divl
pop
jno
xchg
pop
popf
mov
push
roll
push
push
and
and
cmp
stos
inc
xor
hlt
sub
std
xlat
cli
imulb
cmp
dec
rcl
xor
test
js
add
sbb
cmp
pop
hlt
or
notl
je
in
lcall
mov
pushf
je
jbe
cmpsl
js
aas
push
rcrb
push
pop
sbb
mov
popa
mov
adc
loop
aaa
or
jmp
dec
shrl
jg
push
push
aas
mov
mov
push
push
xchg
dec
rorl
lret
cmp
push
dec
arpl
gs
scas
aad
rorb
jne
rorl
dec
inc
in
inc
repz
gs
mov
jmp
in
fcmovnu
insb
jmp
adc
scas
cmp
jns
lret
cmp
and
cmc
ds
das
pop
or
cld
std
pop
enter
push
adc
outsb
mov
fsubl
pop
mov
int3
adc
psubw
test
cli
pop
lahf
inc
loop
xor
dec
push
pop
repz
push
lcall
xchg
mov
sub
push
aaa
push
adc
inc
and
xor
adc
testl
or
push
in
push
fisubl
ss
loop
mov
xchg
ljmp
cmp
mov
outsb
jne
aam
add
mov
movsl
and
clc
pop
mov
add
mov
sahf
cmp
pop
push
jmp
sub
mov
push
dec
sub
mov
adc
pop
fsubp
arpl
insb
jbe
xor
dec
push
pop
popa
in
test
sahf
fldenv
inc
ficoml
imul
ja
cmpsb
dec
dec
dec
jmp
push
hlt
push
jo
and
imul
jle
idivl
push
nop
mov
lahf
nop
lret
push
jl,pn
mov
scas
jge
shr
hlt
rorl
outsl
pop
lahf
dec
pusha
xor
pop
xchg
xor
out
adc
ja
mov
lret
push
mov
iret
jnp
push
loop
clc
dec
dec
std
cmp
mov
xor
test
inc
jns
or
out
push
in
cwtl
insb
inc
enter
jle
daa
or
repnz
add
or
fnsave
insb
adcl
fsts
arpl
xchg
cmp
and
xlat
jge
mov
in
add
xchg
dec
mov
iret
add
xchg
xchg
cmp
jnp
sbb
push
sahf
xlat
ljmp
inc
mov
jecxz
lahf
imul
pop
int
jecxz
pushf
shlb
or
shr
out
inc
iret
gs
nop
push
movsl
nop
push
in
fisttps
mov
aaa
mov
sarl
repnz
test
pop
fidivrs
push
xor
adc
push
int3
xchg
imull
mov
sbb
rcll
cs
js
cmp
fldl
outsb
mov
bound
sbb
stos
mov
xchg
stos
inc
es
popf
pop
and
test
xchg
dec
push
das
add
and
xchg
js
adc
imul
push
imul
aaa
jne
xor
push
dec
xchg
mov
outsl
js
jle
mov
adc
xchg
scas
xchg
test
ja
fadds
stos
inc
icebp
xchg
shll
icebp
scas
les
dec
mov
sub
push
fsubs
data16
sbb
movsb
cmp
pop
jb
inc
jnp
push
push
cmp
fnsave
cmp
popa
or
aaa
fwait
or
and
sti
xlat
dec
jb
loopne
mov
mov
cmpsl
adc
add
push
arpl
sub
xchg
test
out
gs
cmpb
stos
in
loopne
push
adc
rorb
mov
push
push
xor
jb
enter
aas
jle
cwtl
stos
mov
fs
mov
inc
movsb
mov
and
xchg
dec
enter
add
pop
gs
sub
test
lds
pop
add
rol
lahf
sbb
mov
adcb
mov
insb
mov
lock
fldcw
cmpsl
mov
mov
sarl
cmp
pop
imull
xor
pop
cli
dec
pop
hlt
pop
jmp
lods
adcl
mov
jge
pop
fisubs
pusha
incb
push
inc
stos
mov
push
aad
mov
jp
out
fsubr
sbb
sbb
jo
mulb
mov
divl
imul
lahf
ret
pop
xchg
xlat
movlps
push
and
mov
rcrb
js
out
adc
in
nop
mov
and
stos
add
dec
mov
cld
adc
lods
xor
xchg
add
lods
mov
fildll
jg
push
and
dec
mov
sbb
aas
ret
mov
pop
xor
test
jne
popf
xchg
repz
inc
jge
xor
push
or
cmp
enter
adc
xchg
jle
data16
imul
and
adc
and
dec
mov
icebp
ret
xor
addr16
push
mov
in
bound
xchg
les
or
sub
sbb
mov
adc
dec
mov
dec
loopne
push
rol
mov
sbb
jb
shlb
push
jge
out
inc
je
inc
pushf
cltd
xchg
cmpsb
into
icebp
lds
loopnew
mov
out
pop
in
pop
or
jp
daa
in
rclb
fisttpll
cmp
push
dec
push
fwait
mov
ds
cmp
cld
adc
mov
lods
xor
repnz
les
fcmovne
mov
int3
xchg
add
or
and
pushf
sbb
or
jmp
lret
sub
fdivrs
outsb
stc
mov
mov
sbb
mov
cli
jo
aaa
jbe
or
fs
jmp
test
enter
sub
mov
xchg
pop
insl
adc
test
add
mov
lods
cmp
popa
or
sbb
scas
mov
and
dec
xchg
pop
call
mov
pop
cmp
add
mov
imul
or
imul
mov
mov
push
orl
cmpsb
adc
pushf
mov
scas
mov
subb
mov
loope
mov
add
dec
int
pusha
clc
add
rcrb
dec
dec
repz
pop
xchg
lret
clc
jbe
sbb
lods
lcall
clc
jecxz
xchg
popa
push
or
mov
jecxz
pop
pop
or
inc
push
pusha
jb
popa
stc
repnz
sarb
out
into
push
ret
sti
mov
bound
push
insb
out
sub
dec
inc
ds
int3
test
and
lods
dec
aas
les
sar
adc
mov
pusha
pop
mov
enter
push
into
jmp
rol
pushf
mov
xchg
fdivp
push
push
stc
and
cmp
xchg
mov
sub
sahf
fucomp
imul
sbb
or
out
rorb
mov
jmp
imul
xchg
scas
cmpsb
cltd
out
pop
or
out
inc
cwtl
scas
fdivrl
leave
mov
out
jns
push
xchg
fidivrl
dec
sbb
pop
jecxz
mov
fistpll
adc
push
sbbb
aad
push
push
mov
mov
xchg
xchg
mov
xor
ja
jecxz
mov
and
pop
sub
pop
shrl
and
inc
pop
cmp
xchg
sbb
jb
enter
inc
dec
xchg
or
das
out
stos
adc
inc
push
sbb
cs
jmp
cmpsb
adc
pop
xchg
sbb
push
rclb
js
xor
inc
mov
jge
in
xchg
jmp
lock
sbb
inc
movsl
loopne
fs
incl
test
sbb
cwtl
test
inc
pop
sub
sub
add
mov
into
dec
imul
icebp
lods
mov
stos
fstps
jae
push
adc
lahf
lods
int3
insb
mov
nop
mov
push
inc
jmp
cmp
inc
adc
lret
ret
shrb
mov
xor
inc
aaa
sub
lock
mov
mov
ja
fsincos
jmp
mov
cmp
cmp
or
ds
sti
xchg
outsl
imul
ja
stc
mov
sbb
imul
xchg
jl
rcr
ljmp
inc
jge
sbb
je
inc
and
mov
cmp
ja
and
hlt
aad
clc
lcall
in
pop
xchg
sub
pop
ljmp
lcall
scas
xor
xor
sbb
ror
cmc
inc
and
leave
loopne
jmp
mov
lcall
adc
scas
lds
fwait
push
push
hlt
mov
sbb
das
pop
jae
jne
es
imul
adc
orb
mov
negl
test
sub
outsb
adc
inc
cltd
psubsw
sbb
iret
movsb
ja
call
push
test
mov
mov
shlb
andl
xor
dec
les
mov
mov
in
cmc
test
leave
mov
sub
fcmovnb
loopne
add
and
inc
clc
cmp
pop
pushf
fidivrs
pop
mov
dec
cmp
mov
test
inc
lock
stos
in
push
rolb
adc
dec
into
out
aas
pop
sahf
mov
mov
lret
push
test
fcmovb
pusha
cli
cmpsl
mov
xlat
scas
and
pop
sarb
lea
iret
mov
pop
nop
fdivrp
pop
fucomi
outsb
xor
push
mov
inc
xchg
or
mov
aas
fldenv
jbe
push
ss
sahf
cwtl
sbb
enter
sbb
cmp
sbb
hlt
mov
mov
xchg
cmp
xchg
into
xchg
imul
in
arpl
or
frstor
sbb
xchg
pop
outsl
sahf
sbb
cmp
or
xlat
inc
in
std
sbb
jbe
fldt
mov
or
mov
mov
jno
xchg
push
test
and
adc
int
mov
push
aad
and
dec
das
xchg
rcll
fdivrl
leave
sub
fs
cld
popf
insb
aaa
imul
or
jns
aas
cmp
in
fmulp
sarl
pop
mov
push
int3
ss
cmp
dec
imul
add
rolb
push
repnz
adcb
iret
mov
xor
mov
cmpsl
adcb
repz
xchg
jge
mov
or
jl
pusha
les
imul
jg
adc
loop
das
ljmp
cmpsl
mov
mov
icebp
lret
addb
add
dec
jnp
jmp
push
mov
fsts
cltd
stos
add
push
sub
or
inc
mov
mov
cld
pop
nop
shll
adc
jbe
inc
stos
inc
jge
xlat
push
mov
das
fldpi
adc
sub
xor
adc
test
pop
fmuls
outsl
lret
lods
xchg
sub
add
inc
dec
jne
mov
fidivs
add
popf
outsl
add
jo
gs
jne
sti
mov
stos
out
enter
gs
aad
nop
xor
xchg
fnsave
xchg
dec
pop
fnsave
pop
repz
sahf
mov
sub
stos
fwait
lahf
mov
dec
nop
jecxz
ja
shll
or
add
jge
push
pop
test
xor
sbb
cmp
push
sub
fcoml
rorl
lods
je
clc
sub
cmp
inc
cmpsb
jae
pop
lret
adc
xor
mov
daa
in
mov
mov
das
jnp
mov
inc
imul
mov
pop
lcall
pop
enter
push
adcb
stc
outsb
push
sub
repz
xor
or
daa
add
jmp
xchg
sub
or
xchg
lcall
mov
xor
mov
and
sti
clc
jbe
ret
pop
mov
sbb
in
pop
lret
es
adc
pop
mov
xchg
dec
psubw
nop
add
pop
dec
aaa
mov
roll
int3
inc
xchg
mov
sti
hlt
jle
cmp
adc
inc
cmpsb
scas
xchg
push
push
pusha
fwait
add
add
mov
jb
inc
fwait
cld
mov
mov
lcall
jbe
jge
in
jo
xchg
leave
out
mov
arpl
cmp
imul
sahf
pusha
enter
add
inc
outsb
inc
fisttpll
mov
test
ret
sbbb
jno
mov
not
inc
xor
push
and
xchg
les
push
sub
daa
leave
fs
test
jns
dec
enterw
add
jnp
popf
int3
mov
pop
popf
sub
bound
mov
outsl
jbe
arpl
lea
arpl
pusha
ss
js
xor
dec
scas
push
mov
in
mov
mov
in
xor
mov
aad
movsl
pop
mov
xchg
repz
and
push
sbb
addr16
dec
pusha
shr
dec
scas
ja
fstps
test
movsl
mov
out
sbb
or
in
es
jecxz
nop
inc
dec
sbb
stc
insl
out
adc
mov
mov
pop
mov
shll
xor
pop
xchg
mov
and
dec
sti
nop
lock
adc
sub
pop
dec
cli
je
dec
pop
aas
dec
cs
xchg
xor
lock
cld
out
pop
cmp
xor
mov
and
iret
das
filds
or
cmpsb
cli
sbb
pop
adc
imul
push
dec
mov
dec
in
jns
jb
jg
adc
xchg
jmp
ds
in
xchg
inc
inc
and
mov
inc
jo
sbb
xlat
ljmp
clc
lcall
movsb
lret
in
pop
fisubl
and
outsl
insb
int3
and
and
out
sbb
cs
leave
cmp
sub
std
push
xchg
clc
sub
lods
insb
aaa
jg
int3
loopne
xor
ljmp
ret
scas
imul
mov
or
ror
neg
pop
test
and
sub
stc
add
adc
roll
inc
arpl
inc
mov
xchg
ss
cmp
lret
inc
mov
xchg
pop
pop
inc
cs
jae
outsl
shrb
mov
fbld
add
ret
es
xor
dec
pop
jnp
out
stos
pop
scas
jns
lods
mov
sub
pop
mov
rcll
mov
jge
fcompl
mov
int3
sbb
and
inc
out
or
lret
dec
fcoms
sbb
orb
mov
cmp
cmpsb
push
mov
and
cs
jbe
mov
mov
mov
push
xlat
jae
add
pop
jge
or
notb
test
icebp
gs
dec
lea
aas
pop
popf
icebp
jmp
aad
adc
inc
popl
or
sbb
ljmp
jl
pushf
and
jne
push
push
mov
push
inc
loopne
inc
adc
ror
push
lock
inc
sbb
repz
stc
push
jecxz
sarl
dec
call
rorl
dec
fisttpl
or
xor
aam
jle
cltd
mov
cmp
mov
int3
lods
mov
das
cmpsb
mov
scas
xchg
jbe
inc
ljmp
int3
mov
ds
jg
mov
cltd
jo
rcll
push
mov
std
repnz
sbb
cmp
and
fadds
movsl
ds
fisubs
jp
dec
in
mov
dec
mov
add
rdpmc
pushf
adc
mov
lcall
or
cmp
mov
pop
sub
xchg
jmp
mov
pop
xor
mov
divb
stos
rcll
xchg
icebp
scas
and
mov
and
sub
xchg
mov
scas
mov
leave
dec
add
aam
out
stos
or
mov
mov
and
jmp
dec
mov
testb
or
xchg
jnp
pop
mov
ja
test
inc
pop
push
sbbl
arpl
dec
stc
cmp
lock
xor
pop
call
sti
jg
or
pop
jg
and
jbe
jl
mov
pop
jmp
cs
inc
jns
cmc
imul
add
cmpsb
prefetchnta
xchg
mov
mov
xchg
fwait
push
lds
lret
sahf
std
sahf
icebp
mov
inc
mov
xchg
loop
faddp
daa
popa
adc
lahf
fld
add
push
repnz
xor
loop
mov
push
call
cmp
aad
fcmovbe
add
aam
inc
lret
push
scas
aas
xor
cmp
add
ljmp
cmpsb
ja
xchg
cmp
in
outsl
xor
sbb
test
inc
loopne
jmp
pop
cmp
nop
cwtl
push
pop
call
movsl
int
sub
xchg
inc
popf
movsl
dec
adc
jb
in
jb
jno
pop
adc
lock
test
cmp
out
xchg
in
das
push
and
pushf
sbb
leave
int3
cwtl
iret
lods
inc
ret
mov
mov
in
xchg
inc
shr
cs
and
aad
and
in
and
mov
inc
mov
dec
add
in
out
lea
andl
and
int3
mov
sbb
bound
or
ss
scas
imul
xchg
sahf
pop
out
orb
loopne
call
movsl
and
xchg
adc
adc
out
je
ds
ret
pop
dec
jmp
and
jmp
pop
movsl
cmovbe
aaa
hlt
aas
leave
in
cs
xchg
xlat
sahf
addr16
je
out
mov
sahf
aas
cltd
dec
scas
push
sar
inc
jae
sbb
push
jns
adc
pop
cmc
fdivp
mov
fistps
mov
xchg
push
lea
les
incl
mov
jg
fmull
cmpsl
sub
and
out
push
out
xchg
fdivr
adc
mov
movsb
in
inc
sbb
insl
outsb
notl
and
jns
notb
lret
loop
popf
mov
xchg
dec
decb
or
out
movsl
testb
addl
jecxz
xchg
mov
mov
out
repz
cltd
vphaddubw
mov
mov
cmp
lret
mov
daa
jns
pop
add
inc
test
ret
jl
push
negl
mov
in
mov
inc
sti
ss
pop
lds
jp
mov
sbb
bound
jbe
outsb
popa
lds
ret
pop
adc
and
in
mov
pop
push
jge
fs
mov
es
jge
cwtl
xchg
cmp
xor
mov
js
xchg
cli
xchg
xchg
jb
inc
sbb
rorb
mov
and
sahf
sarl
ret
stc
mov
dec
sbb
rcrl
add
push
jbe
pop
xchg
adc
xor
sarb
pop
mov
mov
sub
cli
adcb
dec
clc
add
shll
or
icebp
imul
and
je
sbb
xor
mov
cmpsl
mov
repnz
mov
icebp
push
sbb
xchg
aas
sbb
std
clc
push
loop
jnp
cmp
pop
insb
call
leave
lcall
sbb
cmp
sbb
clc
test
inc
iret
xor
or
cmp
js
pop
pusha
sub
test
fcompl
jnp
sub
jns
sbb
ret
jae
or
xor
sbb
inc
sub
xor
jmp
loopne
loope
ss
in
inc
mov
daa
mov
into
pop
lahf
fs
adc
mov
outsl
outsl
pop
jno
faddl
je
jb
push
ficompl
fs
xchg
enter
mov
lea
mov
sbb
pop
and
nop
jmp
movsb
sub
add
xchg
push
dec
lcall
sbb
cmp
adc
mov
jb
jg
dec
inc
mov
xchg
bts
pushf
and
jecxz
xor
data16
mov
lahf
mov
pusha
aad
mov
imull
imul
stos
sub
xor
add
test
addr16
loop,pt
jge
dec
inc
cli
sub
sub
adc
shrl
insb
lds
push
test
xchg
mov
lock
inc
js
arpl
inc
xchg
out
mov
gs
and
iret
mov
cmp
jecxz
div
cmp
xlat
int
ss
enter
insl
pop
gs
fptan
jb
cmp
or
cmp
or
or
cmp
clc
movsb
fdivrs
inc
test
jne
inc
mov
pop
xor
andb
push
daa
jecxz
push
and
and
mov
or
bound
pop
pop
fdivrs
push
push
pusha
insb
std
push
imul
test
mov
loopne
pop
bound
push
dec
and
bound
out
rcl
add
stc
pop
xchg
dec
aam
bound
mov
call
xchg
mov
sub
push
pop
xchg
ficomps
lahf
mov
lds
fisttps
jl
movsb
jle
sub
mov
btc
inc
pop
adc
inc
sub
js
test
iret
lods
and
sub
pusha
add
pop
mov
push
mov
in
jmp
insb
pusha
add
stc
and
test
push
sbb
sar
mov
xor
outsl
xchg
ret
sub
loopne
test
imul
mov
push
mov
test
push
xchg
mov
xchg
dec
lods
jb
sub
and
xchg
cmp
push
mov
lcall
push
fs
mov
sbb
pusha
arpl
imul
push
stc
fildl
jnp
nop
mov
nop
mov
sbb
pop
add
mov
fldenv
xchg
adcb
sbb
sub
push
inc
pop
and
hlt
jp
in
cs
sub
cmp
cmp
stc
insl
jmp
mulb
sbb
cs
push
cmp
andl
in
mov
mov
int3
push
push
jb
mov
sbb
sub
xor
in
mov
jns
pop
mov
dec
mov
scas
inc
cmp
jb
mov
mull
das
adc
fs
test
sahf
out
adc
or
lock
push
and
jns
adc
and
aam
add
leave
in
sub
and
mov
sbb
cmp
insl
bound
pusha
je
out
pop
into
cmpsl
icebp
cltd
insb
clc
and
xchg
sub
xchg
out
add
icebp
mov
add
jp
pop
sbb
mov
cmp
gs
pop
adc
inc
cltd
rcrl
sub
push
cltd
iret
ds
mov
sahf
iret
movl
and
das
mov
add
call
lret
mov
out
in
mov
jo
shlb
dec
add
cmp
jbe
ds
stc
lahf
test
jge
xchg
jmp
push
cmp
imul
pop
sbb
xchg
sbb
shlb
sbb
xlat
pop
enter
fildll
mov
lea
lods
or
or
into
call
jne
push
movsl
xchg
cmpsl
mov
pop
xchg
lret
int
fnstenv
lcall
daa
sbb
pusha
cmpsb
and
xlat
xor
push
mov
dec
movsl
push
or
mov
push
sbbb
pusha
imul
fstsw
sub
insl
pop
pop
test
inc
popf
shl
in
dec
jg
pop
mov
enter
in
iret
and
ror
and
addl
ficompl
pop
mov
lds
xchg
jp
mov
insl
lods
inc
xor
int3
addb
out
orb
jge
pop
jge
sub
repnz
stos
mov
or
pusha
push
sub
dec
cltd
inc
pop
cltd
in
mov
icebp
sbb
push
cmp
aad
push
mov
xchg
xchg
insb
xor
xchg
fildl
and
repnz
bound
xor
dec
sbb
int
fidivs
add
jge
inc
pop
adcb
sbb
sbb
sti
xchg
cmpb
xchg
stos
inc
push
mov
sti
xor
inc
mov
loope
aad
rcl
adc
jae
repz
mov
push
mov
xchg
nop
mov
mov
and
dec
sbb
add
ror
nop
add
jl
fbld
js
imul
clc
and
sub
movsb
fbld
stos
insb
ja,pn
outsl
push
or
outsb
xor
inc
mov
mov
dec
jle
push
sbb
add
mov
push
sbbl
shrb
imull
pop
cmc
dec
addr16
out
add
push
flds
clc
mov
int3
mov
pop
add
mov
arpl
xchg
flds
or
jp
imul
lods
dec
or
dec
and
clc
vrcpps
icebp
dec
es
lock
pop
sbb
adc
inc
mov
lods
decb
cmp
pop
pop
imul
push
xor
xlat
aaa
cmp
mov
mov
sbb
mov
or
jae
enter
sarb
sbb
cmp
fdivr
push
fsubrp
stos
pusha
fwait
ja
cltd
dec
or
mov
outsl
cmp
push
push
inc
aad
lds
push
adc
mov
push
mov
scas
xor
cwtl
loope
pop
jmp
andl
add
adc
jge
sti
fwait
mov
cwtl
xlat
xchg
mov
jle
adc
mov
imulb
sub
pop
aam
popf
outsb
mov
adc
imul
sbb
mov
rcrb
mov
es
inc
jo
adc
mov
jae
movsl
jne
lret
arpl
dec
cmp
mov
jne
add
xor
into
dec
js
xor
inc
ret
int
subl
into
ret
xchg
repz
fsincos
and
xchg
xor
xchg
push
std
ret
mov
js
dec
or
ret
push
cwtl
dec
push
popa
fs
jbe
mov
cwtl
pop
pop
pushf
mov
test
fs
int3
lcall
push
and
inc
push
push
cmp
adc
lcall
arpl
push
clc
push
insl
vmread
pop
test
lock
sub
shr
fwait
inc
popf
les
adc
fisttpl
fidivrl
push
enter
incb
insb
nop
mov
mov
pushf
inc
dec
jbe
daa
stos
inc
cmp
mov
dec
fnstsw
xor
std
mov
add
fmuls
mov
dec
rclb
and
rorb
icebp
fmuls
jns
push
pusha
jmp
dec
jo
xchg
jns
pushl
pushf
xchg
xor
adc
mov
popf
or
loop
and
add
mov
mov
shrb
add
fisubs
xlat
pop
sub
sub
push
push
mov
inc
push
in
aas
mov
cltd
xor
ret
jmp
pop
inc
cmp
sub
cmc
sbb
adc
inc
inc
bound
xor
mov
aad
fisttpl
lcall
pop
dec
inc
fcmovnb
adc
js
into
jo
push
mov
mov
decl
movsl
repz
nop
add
and
push
xchg
repnz
test
scas
or
jb
in
mov
imulb
ds
shlb
cmp
dec
lods
push
and
mov
sarl
out
dec
bound
je
loopne
std
je
add
icebp
xchg
aad
int
dec
xchg
mov
add
in
xor
jo
int3
leave
dec
mov
push
enter
mov
sub
mov
mov
mov
cmp
lods
in
sti
jo
jp
cmpb
adc
mov
stos
in
enter
push
clc
test
xorl
pushf
scas
push
rcrl
push
and
cltd
out
lret
insl
add
push
out
mov
sahf
dec
xor
push
jae
jl
flds
mov
jnp
mov
ja
cmp
pop
mov
inc
cmc
cmpsl
pop
push
lret
mov
dec
ss
inc
jno
jnp
invd
inc
push
int
pop
pop
das
js
out
dec
aas
or
movsl
bound
ljmp
add
mov
and
mov
test
ret
sub
shll
lods
repz
das
push
ljmp
fwait
jne
adcl
add
jmp
lock
pop
xchg
mov
jns
nop
push
sbb
mov
out
popa
movsl
in
inc
test
les
add
sarb
clc
inc
inc
dec
dec
xor
push
and
cmpsl
lds
iret
dec
movsb
fldlg2
scas
inc
xchg
push
fcompl
jb
mov
sub
mov
xor
mov
les
jge
sbb
inc
insl
ja
in
scas
les
push
int
dec
push
pop
xor
jle
and
xchg
xchg
push
stos
pop
jl
gs
movsb
mov
iret
loope
mov
fldl
ret
cmp
int3
or
iret
push
outsb
xchg
lret
hlt
lret
fucomp
data16
cmpsb
mov
jecxz
dec
ror
mov
inc
xor
leave
cltd
sub
mov
cwtl
lret
add
and
xor
clc
andb
pop
mov
jne
or
push
das
dec
or
int
add
inc
neg
xchg
inc
xchg
js
xchg
mov
or
pop
ret
insl
cwtl
xchg
cmp
inc
and
and
jo
and
and
mov
insb
enter
rol
jecxz
or
loop
mov
repnz
sbb
in
adc
xor
xchg
mov
shl
loopne
mov
mov
imul
push
mov
test
inc
out
add
or
movsl
pushf
stc
push
sub
mov
or
push
jl
out
sbb
inc
mov
xor
mov
add
xchg
adc
cmp
push
arpl
bound
repz
in
pop
pop
jae
int3
jle
dec
push
popf
imul
jge
pop
and
dec
cltd
dec
xchg
jb
lcall
and
or
repnz
subb
mov
lcall
sbb
sahf
pushf
mov
sub
addr16
movsb
addr16
fbstp
jge
cli
and
popa
mov
mov
jnp
adc
test
cmp
mov
push
fwait
aam
dec
scas
mov
and
lock
xchg
mov
andb
mov
fcompl
cmp
mov
add
test
cmp
cwtl
add
popf
jecxz
adc
mov
scas
push
lcall
subl
push
add
pop
adc
and
outsl
cmp
je
call
test
cmp
cwtl
into
loop
or
xor
pop
xchg
int
mov
push
push
pop
jno
lahf
mov
xchg
jmp
repz
add
pop
mov
je
jbe
push
in
dec
add
gs
stos
data16
shl
jne
loope
and
movsl
into
sub
mov
add
fs
pop
jbe
push
sbb
jl
pop
pop
addr16
js
pop
jnp
pop
jp
push
out
out
add
add
xadd
pop
push
dec
jb
or
sbb
sbb
pop
jecxz
jo
push
pusha
insb
push
push
pop
inc
dec
orb
xchg
pop
or
sub
rol
notl
ret
fwait
cmp
add
decl
pop
and
es
mov
cmpsb
push
mov
test
pop
enter
call
cmp
cmp
mov
dec
jle
movsl
push
cs
subl
sarb
mov
adc
or
and
cwtl
loopne
inc
sbb
pop
jg
pop
push
mov
sbb
add
jmp
repnz
pop
jmp
cli
ret
loop
adc
mov
jmp
adc
sub
adc
xchg
orb
mov
jo
lahf
flds
das
xchg
das
xor
mov
dec
mov
lahf
sbb
jne
xchg
sbbb
push
adc
pop
dec
mov
jno
imul
xchg
sbb
fs
icebp
sub
lret
mov
and
mov
jae
sahf
sbb
jmp
js
xchg
cmp
pop
and
stos
jbe
dec
je
xchg
adc
test
outsb
jns
ret
sub
jb
mul
testl
xchg
lret
push
cld
mov
outsb
in
mov
and
jnp
fs
inc
icebp
mov
cmpsb
sub
cmc
xchg
hlt
std
xchg
pop
sbb
outsl
testb
lods
je
sahf
sbb
cld
clc
pop
or
mov
lods
adc
in
or
pop
scas
xchg
pop
xchg
lods
mov
lret
test
fwait
xor
ret
inc
inc
xor
roll
lock
xor
or
sysret
inc
add
sbb
lret
fmull
out
stc
in
ss
push
mov
sbb
xchg
test
fmuls
adc
testl
lods
dec
adc
pop
adc
fwait
and
shrl
xchg
cltd
cmp
std
inc
fbld
adc
popf
push
sub
mov
std
jmp
bound
jne
ljmp
dec
pop
pop
insl
ljmp
pop
jle
test
stc
mov
inc
aad
aam
jg
imul
std
mov
jo
pop
jae
mov
pop
inc
xor
mov
imul
or
aas
push
int
es
outsl
addb
inc
push
imul
push
sbb
sarl
sub
add
pop
xor
imul
xchg
sbb
fwait
jg
sbb
cld
xchg
xchg
jp
mov
add
dec
hlt
mov
aaa
aas
ret
cmpsb
pusha
hlt
fldl
loope
pop
mov
xlat
inc
shrl
fsubl
jle
ret
out
adc
dec
push
add
out
push
adc
cli
xlat
xor
mov
jle
imulb
insb
lods
repnz
dec
insb
mov
stos
mov
scas
ficompl
add
dec
dec
notl
insb
cmp
clc
add
and
cmpsb
inc
and
inc
adc
jns
out
adc
out
lret
adc
in
jns
xor
out
xchg
and
enter
mov
shlb
clc
leave
push
scas
and
aaa
mov
aaa
rorb
sub
jnp
add
ds
enter
bound
xchg
clc
or
stc
adc
push
or
ret
or
push
js
ja
rclb
in
hlt
ds
pusha
popf
addr16
dec
ja
fwait
shl
out
inc
cmp
in
rol
adc
in
xchg
xchg
aad
fisubs
repz
add
pop
push
imul
repz
pop
cmc
shrb
xchg
sbb
add
in
repz
mov
insl
jecxz
pop
add
jp
xor
lds
dec
inc
inc
movsl
push
mov
mov
xor
mov
sbb
inc
and
xchg
push
and
iret
std
aad
test
cmp
dec
fwait
inc
jb
push
testl
daa
push
lcall
mov
fistl
fcomps
imul
dec
es
and
push
enter
loopne
sahf
mov
lea
mov
movsb
fstps
jp
cs
add
cmp
fwait
xchg
mov
xchg
popf
test
lahf
xchg
inc
cld
pop
mov
mov
sbb
in
mov
addr16
mov
loopne
cli
movsb
subl
leave
lret
cmp
push
push
scas
out
not
mov
mov
dec
test
inc
leave
mov
ljmp
lods
mov
lods
sbb
sub
add
add
fisttpl
lret
mov
inc
and
and
cli
add
dec
aad
and
sub
lcall
sbb
mov
sarl
jo
pop
sti
fists
and
out
sub
mov
dec
dec
neg
cmp
das
stos
push
pop
dec
popa
pop
notb
inc
loopne
or
movsb
jecxz
mov
or
jbe
inc
mov
imul
xor
pop
adc
into
or
push
aas
into
stos
dec
inc
mov
outsl
mov
inc
jp
cmpsl
add
sbb
neg
lcall
and
fisubl
add
inc
movsl
popa
inc
mov
push
cs
sti
jmp
inc
cmp
jo
sbb
je
out
lea
aaa
test
enter
je
and
push
cmp
sbb
mov
cwtl
int
xchg
mov
mov
cmp
xor
or
dec
mov
bsf
daa
sarb
lret
sbb
imul
sbbb
ret
and
lods
das
fwait
mov
push
lahf
enter
cmp
roll
pop
test
decl
sbb
mov
mov
mov
jo
scas
jae
icebp
imul
push
jb
or
jae
out
fstpt
daa
aaa
fsubrl
cmp
adc
fs
enter
cmpsb
xor
cmp
sub
out
mov
xchg
adc
xor
adc
or
mov
cld
mov
popf
daa
loope
push
das
dec
dec
in
add
jle
les
int3
mov
add
push
sub
aas
ror
test
or
xor
inc
cmc
jnp
jl
loop
mov
xor
xchg
lret
repnz
pop
add
cmp
or
push
int3
mov
push
dec
mov
shll
sbb
stos
sub
xchg
add
stos
push
push
in
hlt
or
pusha
add
ret
loop
loopne
xchg
sub
jne
jnp
popa
leave
test
add
and
mov
fbstp
inc
or
xchg
xor
jne
divl
call
pop
sbb
insl
cmp
and
xchg
pop
ret
add
sub
loop
cmpsl
mov
es
lods
mov
loopne
inc
xor
lea
in
adc
test
jge
movsb
xor
lcall
rolb
xor
sub
sahf
and
in
mov
mov
lahf
lds
mov
inc
adc
adc
push
mov
jo
mov
ret
shrl
test
xlat
mov
jmp
insl
lods
aas
sbb
test
mov
lcall
add
mov
add
jl
xchg
mov
lods
mov
loopne
popa
inc
imul
cwtl
mov
test
imul
add
jecxz
mov
xchg
and
dec
cmpsb
rcr
pop
mov
jmp
sbb
and
scas
pop
xchg
popf
fsubrl
mov
and
outsb
jne
cmp
popf
test
leave
xchg
call
inc
sub
mov
sbb
ljmp
adc
mov
mov
dec
dec
bound
cli
scas
xlat
xchg
sbb
inc
movsl
jg
ljmp
mov
xchg
adc
pushf
adc
jle
push
dec
push
imull
dec
lods
jg
in
ret
push
adc
jo
xor
push
bound
or
xchg
sbb
shll
fnstenv
filds
mov
repnz
mov
push
enter
lret
adc
stos
negl
and
pop
loop
dec
ret
fsubrl
and
adcb
dec
xchg
cwtl
ret
xchg
xchg
push
push
inc
insb
ja
mov
pushf
add
cmp
mov
jmp
inc
jmp
lahf
pop
jge
int
adc
sub
cmpsl
inc
xchg
cmp
push
push
xchg
cmp
push
test
rorb
sbbb
dec
jl
xlat
sbb
inc
pop
lahf
dec
int3
into
outsb
sub
loopne
jl
add
mov
fldcw
int
addb
and
les
mov
rorl
mov
lret
lret
jg
pop
cmp
add
shrb
adc
xlat
scas
stos
cmpsl
std
js
clc
fsincos
imul
jge
push
imul
das
int3
shr
sbb
ljmp
jnp
sbb
js
push
aas
cs
sbb
xchg
imul
jecxz
adc
push
pop
icebp
push
and
mov
mov
jecxz
push
pop
mov
mov
mov
cs
clc
jge
jb
iret
ret
or
adcb
add
cmc
imul
fidivs
mov
data16
pop
scas
cmpb
jge
inc
push
call
sub
imul
ficompl
int3
jmp
call
inc
push
lock
pop
mov
add
int
pushf
mov
fcomi
mov
lret
lret
pop
imul
ficoml
sub
in
sbb
push
fists
lea
push
test
sub
int3
sub
les
xor
pop
sti
add
bound
cpuid
inc
stc
mov
adc
jo
jo
loopne
fists
push
fidivl
mov
push
cmpb
cmpsb
hlt
scas
lds
push
cmp
sbb
pop
dec
jg
adc
jle
and
arpl
orb
stos
test
das
movntq
cwtl
lea
cmp
push
inc
jmp
inc
lahf
shr
rolb
xor
pop
lret
dec
jmp
movsb
sbb
inc
aam
stos
stos
mov
jge
scas
push
loop
rcr
aaa
push
push
sbb
sahf
cmp
ret
xor
std
sbb
mov
jo
cs
clc
popf
repz
addr16
iret
andl
jne
insl
mov
xorb
aad
adc
mov
sub
outsl
dec
xchg
jge
outsb
psrlw
clc
dec
jle
mov
xlat
fsubs
add
sub
js
mov
stos
mov
das
bound
lds
sub
in
and
mov
xchg
xchg
mov
and
bound
scas
adc
adc
push
and
and
and
push
xchg
in
cs
inc
stos
push
mov
cmp
dec
pop
stos
js
in
popa
jne
rcl
js
cmp
adc
mov
test
repz
push
cwtl
push
imul
mov
sub
popf
sub
or
lret
or
jb
aaa
rorl
in
sbbb
push
dec
xor
mov
stos
add
aam
pop
cs
adc
mov
pop
std
dec
mov
push
cs
jle
fcmovnb
or
data16
ja
xlat
sub
repz
jb
lea
mov
sahf
xor
loop
jo
dec
dec
or
scas
push
addr16
pop
js
sarl
orb
pop
leave
jnp
pusha
mov
dec
dec
orb
mov
push
push
inc
mov
insl
ja
outsb
jo
pop
lds
push
and
cs
xchg
or
testl
mov
push
pop
sub
std
call
in
and
mov
mov
jbe
push
es
xor
or
cmp
dec
hlt
clc
scas
stos
cltd
inc
clc
repnz
test
xor
adc
bound
cmp
xchg
ffree
mov
movb
and
imul
call
add
mov
ret
xchg
lcall
dec
lea
mov
xlat
iret
xor
mov
addr16
ret
mov
fucomip
jge
fmuls
sahf
into
pop
and
pop
pop
dec
sahf
ja
cltd
mov
stos
mov
or
push
scas
sahf
sub
push
pop
xor
inc
pop
or
cmp
jg
jle
cli
notb
or
pop
jmp
add
jns
insl
data16
push
push
xor
outsb
js
out
in
ss
aas
mov
mov
cmp
sub
xor
fidivl
mov
adc
test
jmp
mov
mov
pop
or
insb
aad
dec
cmpsl
fwait
jge
mov
push
jle
or
add
and
adc
xchg
sbb
jge
dec
in
mov
push
xor
jnp
xor
movsb
in
aaa
mov
or
shll
cmp
mov
std
cmovae
inc
jle
push
cmp
insb
adc
test
fldcw
sbb
enter
int3
mov
push
int
lret
xor
dec
push
loope
ljmp
sub
cmpsb
clc
iret
stos
shrb
bound
in
stos
mov
adc
ljmp
xor
out
lcall
inc
rolb
inc
outsb
iret
andl
repz
out
jmp
or
fs
cltd
xchg
imul
push
lcall
inc
mov
sub
sub
repnz
cmc
addr16
jg
dec
seta
repz
xchg
mov
dec
clc
xchg
pop
mov
addr16
ss
std
mov
cmpsb
mov
and
pop
out
jecxz
ja
in
push
mov
cmp
jl
jae
loop
or
jl
sahf
andb
lcall
outsl
out
stos
loopne
vpshufhw
push
mull
ds
cmpsb
dec
hlt
inc
in
mov
enter
in
push
ret
std
lcall
and
xchg
nop
mov
sbb
cli
and
stos
lret
fbstp
sub
ficoml
or
adc
addr16
insb
inc
jne
mov
cmpsb
out
out
mov
xlat
sub
call
sub
mov
cmpsl
pop
add
test
decl
push
fmuls
mov
mov
xor
xchg
rorl
mov
fnstsw
and
lret
mov
subl
mov
in
jp
mov
and
inc
les
imul
fs
and
push
popf
mov
cmpsl
enter
test
mov
ds
sbb
sbb
push
ljmp
lret
mov
test
cmovbe
addr16
pusha
mov
fstpt
jno
mov
shrb
clc
xlat
sbb
mov
mov
int
pop
cld
inc
popa
inc
repnz
cmp
jge
bnd
xor
popf
cmp
rorb
jmp
ret
dec
xchg
sarb
sub
ficompl
cli
lahf
nop
jp
lcall
cld
jge
aas
out
mov
xchg
ljmp
mov
or
jl
jne
jns
mov
mov
dec
push
cwtl
sbb
xchg
mov
mov
jg
push
mov
ret
sbb
lock
pop
cmpsb
jo
dec
cwtl
pop
decb
and
scas
outsb
out
es
repnz
sar
push
imul
cmp
outsl
and
sbb
pop
cld
jns
jne
loopne
ja
xlat
xlat
mov
and
jl
mov
aad
andb
or
in
enter
movsb
and
incl
fnstcw
loopne
lcall
movsl
fsubrs
pop
xchg
add
xor
pop
and
mov
lret
sub
mov
jno,pt
scas
js
mov
sbb
loope
fdivrs
mov
popf
xchg
les
pushf
ds
lock
push
push
mov
lds
ja
mov
jno
sbb
js
add
notl
cmp
and
insl
cmpsb
adc
inc
test
dec
arpl
lods
xor
addb
ljmp
or
je
jns
mov
lods
cwtl
adc
push
cmp
mov
lock
jnp
addr16
stos
scas
into
nop
inc
pop
fadds
cwtl
mov
imull
and
stos
je
fadd
cmp
adcl
pop
cmc
jno
jnp
mov
pop
cmp
movsb
ljmp
in
jg
cmpl
ss
out
movsb
cmc
push
xor
or
jecxz
jb
dec
sti
adcl
pop
mov
mov
add
jo
out
jbe
fcompl
arpl
jmp
leave
out
jle
dec
sub
ljmp
out
cli
inc
fidivrs
in
sbb
out
and
sub
clc
test
sbb
mov
inc
inc
sub
sbb
insb
roll
aaa
lock
inc
jbe
mov
fsubl
cmp
jb
sub
dec
addr16
lods
cmp
cmp
mov
adcb
call
dec
ficomps
test
dec
mov
pop
sbb
mov
dec
ja
mov
adc
imul
cmpsb
mov
mov
scas
scas
mov
mov
xor
dec
fwait
int3
call
cmc
cli
test
rorb
stos
test
mov
mov
dec
xor
dec
dec
push
in
pop
sub
lock
gs
cmc
mov
sbb
jmp
adc
nop
pop
int3
lret
pop
rcl
sub
cmpsl
cmc
or
sbb
cmpsb
adc
jg
pop
lods
fnstsw
add
arpl
push
mov
xchg
mov
mov
inc
lcall
mov
jmp
stos
pop
cmpsb
pop
mov
inc
aaa
add
out
xor
ficoml
fldenv
pusha
mov
ds
jp
int
ja
loope
lea
xor
add
dec
mov
mov
pop
jno
jl
mov
or
fwait
sti
sbb
repnz
testl
dec
cs
stc
pop
je
xor
lods
jl
xchg
test
or
cmpsb
mov
mov
jmp
shl
jecxz
or
movb
mov
or
lret
cmp
xchg
cmpsb
fs
add
and
jl
mov
inc
inc
adc
inc
adc
xchg
fiaddl
lea
scas
mov
fdivr
sbb
pop
mov
popf
jmp
icebp
loop
sarl
outsl
std
aaa
push
rcrl
push
inc
loope
and
mov
icebp
xor
fistpll
loop
xor
fldlg2
out
leave
adc
dec
sub
sbb
sahf
adc
pop
jmp
fsub
cli
stos
mov
sub
pop
pop
jno
sub
mov
cwtl
stc
icebp
pop
sub
jle
loope
imul
call
xchg
sahf
jo
fistps
jg
sarb
mov
xchg
popa
es
sub
mov
in
in
jo
les
pop
mov
push
dec
in
gs
push
insl
clc
aad
xchg
lods
lret
sahf
cmp
pop
rcrl
cmpsl
gs
cmp
cltd
repz
push
xchg
or
sbb
pusha
add
jecxz
arpl
jne
jnp
add
push
jl
inc
or
pop
adc
adc
cli
inc
ss
fcmovbe
mov
dec
pusha
roll
jno
faddl
call
or
or
scas
flds
pop
daa
sbb
fists
cmp
push
jo
pop
jb
jae
xchg
clc
pop
inc
ja
cld
les
or
inc
sahf
fistpll
leave
mov
dec
pop
or
nop
inc
aaa
jmp
in
pop
sahf
adc
add
mov
push
jmp
pop
icebp
in
or
cmp
pop
pop
loopne
push
lds
xchg
andl
mov
mov
xor
jbe
stc
mov
clc
les
sti
adc
push
leave
pusha
aam
fisttps
adc
das
adc
add
dec
ror
stos
insl
test
pop
mov
pop
jae
or
sub
mov
mov
leave
sahf
jl
inc
jge
push
xor
jp
mov
push
lods
mov
scas
pop
mov
stc
pusha
adc
add
pop
mov
pusha
stc
leave
stc
xor
inc
or
std
in
jo
push
clc
out
dec
ret
fcomi
stos
gs
sub
pusha
sbb
cld
sub
push
pop
out
add
push
cli
imul
xchg
xor
jmp
pusha
inc
adc
ficoms
inc
inc
sub
cmp
sti
jnp
hlt
xchg
jg
push
jo
addl
insb
xchg
int
in
adc
into
shll
outsl
jmp
mov
add
pop
cmp
mov
xchg
xor
insl
add
mov
push
inc
mov
add
cmc
dec
mov
int3
scas
jmp
faddl
sbb
and
push
loop
and
sarb
mov
mov
cmpl
jb
popf
inc
mov
mov
leave
cli
cmp
out
lea
andb
test
ret
mov
jp
push
mov
ljmp
sahf
or
jno
pop
ret
xlat
jge
cmc
cmp
xor
mov
aad
dec
inc
nop
pop
icebp
or
sub
das
hlt
dec
xchg
loop
lock
pusha
enter
sub
push
scas
add
pusha
fwait
adc
mov
mov
data16
xchg
mov
les
add
enter
ret
add
std
aas
pop
cmp
lret
jmp
int
pop
dec
mov
pop
rclb
push
mov
divl
push
daa
fisubl
cmpsl
xchg
mov
inc
cli
mov
pop
lahf
enter
xchg
jp
ret
sub
sbbb
ret
aaa
xor
aaa
push
out
push
in
inc
repnz
das
stc
pop
ds
mov
pushf
repz
aaa
or
mov
shl
jge
lods
inc
cmp
clc
jnp
orl
push
mov
fsubl
dec
mov
jmp
mov
or
lret
add
loopne
xchg
jbe
sbb
movsb
inc
mov
insb
sub
icebp
mov
add
mov
aam
add
inc
cmpl
pop
ja
cmp
xchg
push
ret
push
outsb
in
insl
lods
inc
ret
sahf
js
stc
jmp
les
jb
push
mov
out
test
notl
adc
push
or
insl
lock
cwtl
mov
add
inc
push
pop
popa
push
and
mov
xchg
sbb
ret
mov
in
call
cmpsb
adc
out
insb
inc
arpl
loope
fistpl
jg
push
jo
mov
mov
or
pop
sahf
jg
int
lea
lret
lret
xor
sbb
pop
mov
mov
cli
or
xor
test
jo
iret
shrl
frstor
mov
push
stc
mov
aaa
stos
xchg
xorb
call
mov
pop
xor
jb
pop
les
and
mov
jecxz
pop
fcompl
scas
orb
jns
xrelease
push
mov
xor
mov
out
mov
ja
out
lods
iret
fwait
movsb
out
stc
dec
adc
in
and
ljmp
test
mov
add
out
cmp
push
mov
xor
ja
or
leave
xor
mov
mov
jo
sub
add
imul
mov
adc
les
in
push
icebp
cmp
inc
pop
fldcw
fdivs
lods
jecxz
inc
dec
mov
pusha
fld
jmp
roll
fmuls
jl
sbb
pop
sub
sub
and
dec
jb
int3
fimull
les
std
and
push
cltd
lret
cmp
in
cmp
sarl
jge
sub
sbb
mov
sbb
jno
mov
aas
nop
sbb
xor
inc
jbe
jae
lods
rcrb
loope
mov
mov
gs
dec
test
jecxz
pop
xchg
jl
xorb
mov
mov
add
popa
out
adc
mov
scas
jl
xorl
pusha
xlat
bndldx
out
cltd
push
test
cld
xor
sbb
insl
cmp
not
adc
mov
popf
xchg
cmc
outsb
mov
dec
loopne
fiadds
jmp
inc
rcrl
lock
pop
rorb
dec
daa
pop
int3
mov
or
adc
and
pop
inc
in
les
jnp
xchg
test
sbb
popa
lret
std
testb
pusha
pop
dec
xor
inc
inc
je
adc
ret
jp
jmp
cmp
push
int3
push
xor
sub
mov
jge
bound
test
and
movsb
dec
dec
out
ja
push
dec
test
nop
or
cmpsb
push
jnp
xchg
cmp
cld
stc
or
mov
mov
xor
lods
in
movb
pop
lea
xor
dec
xchg
test
insb
test
xor
jae
adc
ret
das
add
loope
xchg
dec
test
or
mov
mov
test
repnz
stos
aas
xlat
xchg
add
pushf
inc
ds
mov
sub
addl
xor
sbbb
pop
imul
cmp
jle
sub
movsb
cltd
popa
mov
mov
sbb
out
in
sbbb
jbe
rcrb
xchg
leave
sub
stc
or
shrl
test
jnp
ret
out
loopne
xor
inc
sbb
inc
stos
shlb
mov
rol
and
rep
or
dec
mov
bound
push
fsubr
mov
add
mov
xlat
push
daa
sub
cmp
xchg
out
sbb
call
cmc
je
cmp
push
ficoml
sti
mov
and
sbb
pop
dec
add
bound
and
leave
fisttps
scas
sub
lret
mov
inc
pop
out
mov
adc
pop
sbb
jmp
xor
pop
test
into
mov
loopne
call
adc
xorl
shrl
cld
xchg
pop
stc
jo
cmpsb
mov
es
jae
sub
sbb
or
popf
insl
adc
add
pop
sub
xor
cs
ds
popa
xrelease
out
into
and
popa
and
cmp
int3
fcmovnu
rclb
mov
outsb
inc
inc
jg
jle
cwtl
in
fldcw
je
insb
out
inc
push
shl
push
data16
sar
adc
sub
add
shrl
xchg
jmp
sub
pop
adc
leave
adc
mov
pop
enter
mov
into
xchg
inc
and
movsb
mov
add
fnstenv
sbb
mov
cmp
adc
and
mov
lds
cld
inc
or
sub
and
sub
lret
add
xor
and
enter
inc
sub
les
pop
xchg
sbb
mov
mov
rcll
lock
lods
cmp
aaa
cvtps2pi
adc
fwait
mov
or
jle
js
test
sbb
mov
das
ret
loope
mov
pop
jl
mov
jns
int
xchg
push
pushf
inc
fs
mov
mov
push
pop
gs
inc
pop
fiaddl
sbb
cmp
pop
sub
xchg
in
sbb
xchg
rorb
inc
xchg
lret
pop
sub
xchg
xor
mov
lods
dec
or
in
sahf
push
push
hlt
mov
add
adcb
mov
daa
mov
mov
mov
cs
addl
stc
lock
and
jg
and
adc
and
xor
inc
les
cmp
xchg
mull
ljmp
shll
lret
aad
and
mov
push
sbb
ds
mov
mov
ret
in
adc
adc
inc
enter
inc
lock
pusha
xor
cltd
or
test
push
dec
mov
add
adc
pushf
pop
jnp
lcall
mov
and
out
in
dec
or
or
loopne
and
aad
popa
mov
enter
mov
lods
push
xlat
std
out
lret
mov
cli
mov
lds
hlt
sahf
daa
into
dec
mov
repnz
mov
inc
aam
scas
mov
stos
ret
and
pop
movswl
sub
setbe
mov
inc
stc
push
sbb
cld
xor
mov
icebp
xchg
pop
aam
pusha
sub
outsb
popf
jg
jnp
xchg
int3
and
movl
out
movsb
inc
cmp
and
inc
dec
test
adc
loope
scas
jge
in
ror
jbe
mov
stos
ret
movb
adc
std
xor
adc
jge
or
frstor
pop
movb
xchg
adc
jno
andb
jl
fwait
stc
loop
jo
shll
out
xor
mov
mov
push
jbe
sahf
jge
sbbb
or
cmp
das
lods
pop
nop
jl
xchg
cmc
outsb
outsb
clc
pop
inc
jns
add
dec
das
sahf
sbb
sub
push
scas
es
pusha
call
xchg
push
jae
insl
mov
push
mov
ficompl
inc
or
xor
and
adc
xor
mov
mov
inc
cld
icebp
xchg
fstpt
nop
mov
insl
xchg
sub
les
iret
test
inc
or
add
test
lea
bound
outsb
add
add
pop
mov
popf
mov
adc
gs
or
jbe
lgs
xor
or
aaa
leave
lock
clc
or
dec
mov
test
jns
out
je
add
aad
xor
out
ja
pop
add
insb
aam
push
xor
sbb
lds
lock
jge
rclb
mov
mov
dec
roll
lock
or
ret
cmp
jbe
inc
and
adc
fwait
imul
push
cwtl
and
sbbb
cwtl
pusha
push
sbb
rol
xor
cld
pop
clc
dec
dec
add
outsb
xchg
add
sub
xchg
rol
loopne
lock
add
jge
mov
int
add
cmp
bound
cmpsl
repnz
jl
iret
dec
cmp
sahf
pusha
cmpsl
fcomip
mov
mov
push
inc
aad
or
adc
stc
ljmp
push
or
stc
clc
in
jae
xchg
aam
pop
push
call
mov
lock
bound
jmp
push
xlat
lods
mov
sub
mov
cltd
cmp
mov
pop
stos
or
clc
int3
mov
lock
iret
ret
jg
repz
aas
cwtl
popf
push
pop
aad
add
sub
mov
pop
dec
insb
cs
insb
lcall
push
icebp
push
sti
jmp
test
pop
cmp
cmp
xchg
repz
jp
popa
inc
lods
sub
cmp
movsb
push
xor
lea
cmc
mov
out
andb
loopne
mov
dec
bound
imul
dec
sbb
clc
jo
cwtl
ds
loop
test
mov
adc
mov
xchg
pop
outsb
inc
fwait
sub
pop
repz
insb
icebp
loopne
fists
xchg
pop
pop
sahf
test
xchg
lods
add
stos
int3
sbb
jno
insb
lahf
xchg
call
xor
out
lahf
mov
dec
mov
dec
xchg
inc
loop
mov
lret
fdivs
sbb
jmp
sbb
dec
inc
subl
decb
push
iret
sarl
adc
andl
iret
mull
idiv
mov
mov
arpl
or
mov
add
dec
dec
stc
xor
imul
ret
pop
nop
xor
push
jae
xchg
jne
adc
shrl
xchg
sub
pop
test
pushl
xor
and
inc
jge
out
mov
lcall
jl
notl
cmpsl
das
inc
dec
outsb
inc
ret
xchg
xlat
imul
nop
aas
cs
mov
lods
inc
in
push
cmp
add
cmp
adc
xchg
pop
jbe
dec
std
cwtl
out
lret
and
push
jnp
jnp
push
aas
inc
sub
add
xor
push
inc
sti
add
cli
mov
mov
sahf
xchg
sti
fcos
push
adc
daa
xchg
jne
mov
jbe
add
mov
out
cmpsb
sub
mov
divb
in
xor
xchg
movsb
inc
shlb
bnd
jmp
xchg
sbb
xchg
mov
lds
pusha
lret
xor
aas
call
cmpb
cmp
shlb
xor
fwait
mov
sahf
lret
dec
hlt
jge
mov
lods
int
lock
scas
adc
fwait
rcl
clc
ja
add
lcall
les
nop
std
movsb
cmc
ja
loopne
es
test
mov
jg
mov
cmpb
and
add
dec
hlt
pminsw
jmp
push
cmpsl
dec
fmull
into
jmp
push
lods
pop
cmpsl
idiv
or
mov
mov
pusha
bound
mov
jle
xor
inc
daa
jne
push
or
arpl
jmp
call
mov
inc
shr
lcall
icebp
test
arpl
jbe
jg
and
push
out
insl
mov
gs
test
repnz
test
inc
fiaddl
pop
mov
mov
pop
xchg
mov
nop
lret
lds
stos
in
push
test
nop
jbe,pn
icebp
sahf
mov
push
add
adcl
cld
outsb
lcall
or
xchg
int
mov
jmp
cmp
repz
cmp
mov
in
test
jnp
or
inc
out
inc
jmp
add
pop
dec
pop
fnstenv
mov
mov
cmp
dec
push
xor
into
pop
push
sbb
rcrl
enter
push
jp
lret
mov
in
std
mov
es
pop
pop
mov
stc
xchg
dec
pop
lret
pop
jno
mov
repnz
inc
ljmp
or
ss
fistpll
notb
inc
mov
pop
int
bsr
sarb
mov
roll
xchg
arpl
frstor
pop
mov
lcall
mov
push
cmpsb
sbb
sarl
cmpb
cmp
cld
xor
test
pop
pop
scas
jne
adc
ror
sub
cmp
leave
outsl
icebp
clc
lock
pop
outsl
or
sar
dec
shrl
push
cwtl
xorl
sub
loopne
orl
pop
movsl
mov
mov
mov
enter
popa
out
cmp
imul
jns
xor
sub
xor
cmp
jge
add
inc
push
mov
out
or
lret
jp
mov
adc
xchg
push
add
in
loope
out
sub
bound
rclb
fwait
test
lcall
cmpsb
movsb
fs
pop
dec
cmp
in
adc
shrl
add
cmp
dec
push
test
cmp
fidivl
into
add
and
xchg
sahf
sub
dec
test
lods
dec
jg
ss
cltd
mov
outsl
nop
clc
lods
mov
push
sbb
push
out
xchg
pop
mov
pop
xchg
das
lcall
lock
and
in
out
add
cmpb
pusha
mov
pushl
popf
aad
cmp
mov
push
mov
les
mov
icebp
pop
and
mov
sti
es
xchg
inc
std
sub
enter
inc
dec
xor
cwtl
xchg
add
loop
sub
xchg
fld
testl
push
xlat
push
sub
lods
cmp
adc
lds
pop
test
push
pop
cmp
xor
bound
xchg
sbb
push
js
or
add
loop
push
sahf
test
mov
scas
pusha
xchg
sbb
scas
rcrb
inc
movsb
jo
in
rcll
push
mov
je
mov
pop
jle
cmp
paddusb
cs
push
in
inc
clc
or
xchg
add
jp
or
push
shrb
jl
int3
mov
pop
cmp
inc
aam
rcl
mov
test
aaa
into
or
shld
xchg
addr16
mov
loope
sub
outsb
repnz
xor
addr16
inc
int
ljmp
cmp
push
scas
push
lods
mov
int
stc
xchg
and
cmp
ficoml
imul
fcmovnu
data16
or
idivl
adc
push
sub
push
fildl
in
cwtl
arpl
xor
inc
les
push
dec
fucomip
sub
in
sbb
in
mov
inc
push
inc
mov
cmp
push
jb
outsl
and
push
mov
mov
jnp
mov
imull
pop
sub
adc
roll
sbb
push
fs
and
xchg
ja
mov
sbb
push
ljmp
push
sub
sarl
in
xchg
xchg
ror
mov
jns
adc
pop
mov
sub
jbe
xor
ret
mov
out
cwtl
push
jg
lock
push
xchg
inc
push
mov
inc
mov
mov
xchg
cmpl
sbb
sbb
inc
loopne
iret
dec
lahf
cltd
cmp
pop
mov
push
jp
mov
cmp
in
jb
and
push
xchg
jo
jno
sbb
xchg
ret
cltd
icebp
pop
cmpsl
orb
sbb
or
int3
sub
dec
bound
jmp
jle
sub
inc
xlat
jmp
out
sahf
sarb
and
inc
mov
cmp
cs
filds
pop
add
adc
int3
add
roll
loope
pop
mov
jbe
aad
nop
js
andl
xchg
pop
loop
inc
lret
xchg
push
push
push
pop
dec
jmp
xchg
jb
iret
push
out
mov
mov
rcrl
push
push
inc
aaa
test
stc
push
ja
in
mov
loope
xor
rcrl
popf
out
jo
aam
mov
imul
or
jb
hlt
push
lds
sbb
icebp
pop
scas
bound
inc
jb
mov
in
movsl
sub
lock
in
push
mov
rorb
pop
xchg
jl
outsl
add
adc
test
rcl
mov
dec
aam
scas
push
movsl
ds
mov
mov
mov
cli
push
xor
adc
jle
in
aaa
xchg
xchg
std
cmp
pop
sub
push
lahf
nop
xchg
xlat
pop
mov
inc
mov
fdivrp
ss
pop
iret
jl
or
add
enter
gs
pop
clc
mov
scas
les
je
js
repz
imul
push
xchg
cmp
sub
and
cld
sbbl
and
or
add
xchg
sub
daa
clc
punpckhwd
mov
cmpsb
repnz
pop
stc
testl
jo
in
in
sahf
inc
dec
cmp
push
dec
leave
jb
lcall
imul
aad
icebp
std
js
aas
enter
sahf
fwait
xchg
adc
out
shll
and
pop
daa
jae
jmp
dec
or
mov
sub
movd
rcrl
fwait
and
fnstcw
mov
loope
ret
inc
adc
into
out
and
add
mov
adc
xor
mull
rorb
and
ds
ljmp
push
add
jbe
leave
test
es
in
dec
dec
outsb
or
insl
mov
dec
mov
sub
fsts
into
pop
push
inc
and
bound
aas
repnz
cmp
ret
insl
xor
testb
jae
sahf
test
xor
jae
in
and
aad
js
xlat
int
xchg
or
add
adc
jg
mov
mov
mov
insl
mov
in
or
mov
ja
and
mov
arpl
add
push
adc
das
movl
popa
cmp
stc
mov
xor
pop
dec
lods
data16
iret
adc
stos
xor
in
rclb
lock
int3
fsubl
lods
es
inc
js,pn
js
pop
movsl
xchg
ljmp
pop
test
mov
outsl
ja
popf
pop
sbb
mov
push
sbbb
fwait
movsb
add
or
pop
xor
xchg
in
pop
push
xor
fwait
in
mov
out
rolb
mov
subl
mov
push
popf
test
int3
sti
clc
stos
mov
sub
inc
jp
lods
dec
xchg
popf
inc
jmp
hlt
xor
pop
ss
imul
fdiv
data16
push
out
fsubr
mov
scas
mov
xor
cmpb
or
adc
jnp
xchg
fists
sbb
adc
insb
or
sub
add
idivb
xchg
xor
aad
mov
xchg
sbb
adc
insl
dec
sub
ja
fs
mov
cmp
lock
fcmovnu
and
push
mov
xchg
fldenv
dec
mov
mov
adc
cld
lret
shrb
cli
adc
xchg
xor
lret
call
pushf
orl
xchg
repnz
dec
std
push
mov
xor
mov
pop
mov
call
imul
bound
out
xchg
sarb
lods
cwtl
xor
push
stc
mov
jne
jle
adc
mov
jecxz
lea
cmp
cmp
ret
mov
cmpsl
fdiv
sti
sarb
push
jle
and
ret
lds
cmc
adc
jmp
sbbl
jno
inc
mov
mov
imul
mov
and
mov
jno
sti
sub
repnz
mov
out
test
test
pop
cmp
add
mov
mov
cld
inc
adc
ljmp
fwait
jns
scas
aaa
scas
sbb
out
pop
loope
sbb
jns
scas
inc
aas
stos
mov
pop
push
nop
dec
sbb
mov
mov
jae
inc
iret
lock
xor
int3
sub
cltd
xchg
jmp
fnstcw
xlat
mov
sub
stc
xor
cli
push
call
mov
es
lock
icebp
dec
cs
out
sbb
or
and
inc
or
jns
loope
push
test
dec
dec
adc
sti
fcomi
dec
outsl
pop
push
and
cmpsb
mov
pop
push
sub
push
and
pop
mov
insl
stos
pop
inc
push
push
test
cmp
imul
popa
mov
mov
je
cmp
rcl
or
push
js
ss
pop
dec
dec
ja
ss
pushf
cltd
lock
jmp
dec
aam
stos
out
je
sub
add
cmp
add
xchg
inc
fsubrl
popf
push
push
pop
lds
mov
xchg
mov
mov
push
andb
js
push
loop
mov
iret
andb
repnz
sub
out
popa
push
xchg
test
xchg
push
loopne
sbb
sub
cmpsb
dec
mov
test
sahf
cmp
lock
fucomp
aaa
test
push
stc
shll
xchg
pop
jl
mov
movsb
fiaddl
dec
lods
imul
pop
out
push
jns
xchg
lret
or
pop
xchg
dec
adc
or
mov
jg
pop
pop
fidivl
inc
inc
adc
xor
roll
dec
icebp
push
rorb
mov
jecxz
cmpsb
sti
aad
jle
loop
js
push
adc
clc
leave
xchg
outsl
add
jg
pop
push
pop
xchg
inc
fdiv
jge
mov
rorl
sub
stos
decl
mov
inc
ret
mov
mulb
out
subb
mov
sbb
aaa
sbb
push
dec
loopne
outsb
ja
and
out
in
lods
cld
mov
cmp
and
icebp
loope
inc
mov
cltd
je
inc
sbb
mov
or
aas
add
flds
pop
into
addb
in
daa
sub
fwait
inc
pop
mov
daa
bnd
xchg
xor
enter
insl
cmp
pushf
xor
add
sub
out
xchg
xor
jmp
push
test
mov
stc
std
pop
sub
and
dec
outsl
mov
xchg
pop
ljmp
lahf
push
jle
pop
xchg
repz
cmp
add
mov
mov
push
les
jbe
push
les
adc
loopne
fdivl
jg
push
icebp
mov
fstpt
mov
les
sub
ficoml
add
testb
pop
mov
mov
xchg
fisttpll
lret
inc
idiv
notl
cmpsb
mov
in
jo
test
push
mov
sbbb
dec
nop
mov
in
bound
jp
out
mov
out
hlt
sbb
mov
movsl
mov
int3
inc
push
cmp
adc
mov
js
adc
stos
dec
adc
or
loopne
xchg
sub
add
lds
dec
cmp
bound
outsb
jg
sahf
jl
push
repnz
scas
call
or
repnz
xor
fcmovnu
pop
insb
cmc
xchg
mov
mov
call
xchg
fldt
mov
movsl
inc
pushf
pop
lock
inc
jg
mov
mov
jecxz
leave
roll
sti
cld
jae
sbb
sbb
or
or
mov
sbb
out
dec
leave
add
pop
insb
add
xor
and
pop
or
in
sub
bound
cmp
push
insl
sti
mov
mov
inc
cmc
roll
adc
mov
xlat
cmp
mov
adc
pop
ss
aaa
add
adc
fsubrl
movsl
mov
aas
popf
push
xor
jp
shlb
int
mov
andl
aas
mov
jecxz
sbb
arpl
mov
adc
or
adc
xor
call
jo
ljmp
jno
jo
fcmovne
mulb
bound
xor
adc
aas
imul
xor
enter
in
shl
leave
nop
ljmp
xlat
xor
inc
pop
in
sbb
xor
repnz
jno
pop
add
xor
jmp
mov
push
cmc
dec
inc
idivl
mov
jecxz
xchg
js
or
xorb
pusha
sub
addr16
inc
mov
mov
cmp
rorl
std
test
fidivrl
pusha
pop
jo
out
int
loopne
dec
xchg
fs
xchg
pop
stos
aaa
xor
inc
jmp
stos
stc
pop
sub
pop
and
sbb
jb
inc
daa
movsb
shll
inc
cmp
fwait
sti
test
sbb
sbb
pop
addr16
xchg
mov
test
js
xchg
ljmp
dec
sahf
and
xchg
xchg
cmpsl
clc
shrl
mov
dec
rcrb
aad
mov
jg
xchg
push
inc
leave
in
or
sbb
sub
sbb
fsubl
jle
xor
int
das
pop
mov
mov
stos
ja
cmp
pop
dec
jle
sub
popf
ds
in
stos
inc
mov
push
cmp
jb
or
mov
push
dec
pop
mov
imul
stos
inc
or
mov
cmp
and
in
sti
movsb
sub
xchg
fs
call
inc
aaa
and
cmp
cmp
adc
mov
pop
mov
xchg
mov
inc
negl
cmp
push
out
sub
ljmp
xchg
test
and
cmc
cmpsb
pop
insl
pop
adc
addl
jle
inc
jo
andl
xor
jns
out
or
fdivrl
imul
inc
jge
or
stc
cmpsl
cli
cmp
lock
jp
push
inc
cmp
adc
adc
popf
ret
cmpb
negb
xchg
arpl
sub
or
or
cmp
stos
js
mov
or
lock
or
sbb
lock
xor
xchg
bound
cli
cltd
mov
pop
mov
pop
cmp
mov
push
add
lds
test
je
mov
mov
and
lret
xchg
cmp
or
mov
in
add
sub
outsb
pop
sbb
push
push
xor
cmp
mov
sub
mov
adc
push
stos
mov
jl
fisubrs
or
push
mov
stc
test
pop
pop
ljmp
mov
vpshufhw
lret
xor
daa
aam
mov
jp
dec
sub
mov
xchg
mov
decl
push
jae
daa
mov
ret
popl
add
xlat
and
xlat
popf
ja
jp
arpl
mov
dec
cmp
xor
cmp
cmp
sbb
dec
or
adc
dec
push
adc
rcrl
adc
cmp
imul
leave
or
fidivrs
rorb
cmc
mov
inc
imul
xchg
sbb
add
test
inc
jb
sub
mov
pop
pop
inc
mov
stc
xchg
mov
xchg
pop
jo
mov
ljmp
fnstenv
movsl
mov
sbb
inc
or
loop
sub
aam
dec
fs
fldl
mov
in
loop
jae
les
cld
mov
std
mov
testb
in
jmp
loope
cli
lahf
and
rcll
cmp
dec
cmp
pushf
pusha
add
sub
mov
or
cmpsl
lea
dec
in
and
popa
hlt
into
xor
mov
or
or
cli
mov
loope
mov
ja
xchg
jl
and
mov
dec
adc
xchg
push
jmp
dec
repnz
mov
data16
add
mov
pop
and
popf
andb
mov
xor
sahf
sub
rcrl
cltd
arpl
movsl
cli
loope
adcb
jl
inc
sbb
xchg
shrl
inc
out
push
bound
imul
imulb
and
jg
sahf
xor
or
sub
and
pop
cmc
out
addr16
push
xchg
cmp
out
fidivl
in
dec
test
jb
adc
and
dec
mull
inc
xor
add
push
imul
sar
fsubs
insl
inc
sahf
loopnew
sub
loope
xchg
call
jg
add
and
in
out
xchg
lock
sbb
lds
push
sbb
or
lret
out
mov
lret
or
ljmp
push
cli
push
iret
lods
inc
test
subb
and
sbb
pop
lcall
pushf
addl
dec
push
imul
pop
and
or
xor
mov
mov
jl
mov
out
call
jecxz
mov
rolb
insb
sbb
mov
sbb
pop
std
nop
jl
or
and
hlt
ret
sbb
repz
frstor
subb
jnp
ret
adc
fistps
inc
cmpsl
out
mov
push
test
pop
frstors
int
cmp
dec
inc
pop
add
pop
xchg
mov
test
mov
repz
mov
mov
mov
ds
push
mov
sbb
xor
lahf
mov
cmove
xlat
hlt
pop
into
jl
fmuls
pop
mov
in
repz
test
fs
xor
push
mov
sbb
or
dec
jl
add
fcmovu
jle
inc
sub
sub
fimuls
inc
push
xchg
push
pop
adc
add
cld
jecxz
jo
mov
adc
out
sub
fnstsw
sub
mov
jo
loope
or
cli
outsb
xchg
sahf
in
mov
dec
adc
into
or
mov
scas
outsl
mov
insb
out
psubd
jl
jae
into
pop
gs
inc
aam
out
xor
pop
mov
inc
add
push
and
scas
lods
movl
stc
addr16
cltd
mov
jae
xchg
jge
in
push
loopne
cwtl
fistl
lea
addr16
pop
aad
iret
js
dec
movsb
pop
cmpb
push
cmp
hlt
and
pop
sub
loopne
add
cmp
lds
inc
mov
imul
sahf
shrb
sti
add
push
iret
das
jge
inc
fmull
in
dec
lcall
xchg
loopne
cld
mov
push
aaa
sti
jnp
hlt
cwtl
in
cwtl
sbb
push
repz
jae
mov
icebp
loop
xor
inc
or
fwait
data16
sbb
cmpsl
xlat
rclb
pop
jecxz
inc
mov
imul
sti
mov
mov
cs
push
add
imull
shl
in
clc
nop
imul
pop
sbb
mov
loope
sbb
xchg
lea
dec
ljmp
or
cmp
pop
ret
mov
mov
mov
mov
je
inc
lods
xchg
sarl
jae
and
xor
loopne,pn
pop
or
push
shll
pop
adc
push
insl
adc
or
push
mov
arpl
xor
scas
mov
xlat
repnz
imul
lret
test
cmp
sub
gs
xchg
and
cmpsl
fs
mov
xchg
int
stc
out
and
push
popf
sbb
pop
jno
dec
sbb
decb
cmpl
and
mov
into
ret
lret
imull
pop
fwait
aad
pop
mov
mov
mov
adc
mov
xor
ss
push
lret
int3
sub
inc
xor
nop
mov
dec
mov
rorb
pop
bound
je
add
into
ss
enter
das
and
add
push
ds
inc
test
out
scas
pop
xor
mull
inc
xchg
mov
and
mov
mov
ret
sahf
jns
subb
enter
adc
jbe
ret
mov
pop
mov
ljmp
gs
lock
add
aaa
mov
sbb
pop
mov
jle
aad
pop
add
mov
sbb
or
jae
jns
hlt
je
pop
loope
jmp
int3
fidivrl
push
cwtl
add
popa
sbb
mov
mov
js
jno
jnp
adc
inc
repnz
jnp
shr
lahf
jg
cmc
shrl
fs
mov
cld
xchg
cs
fisubrl
fwait
cmpsb
cwtl
push
sti
rcl
js
mov
ret
subl
sbb
clc
icebp
dec
dec
or
and
addr16
xchg
stos
xchg
jge
lret
repnz
nop
mov
jmp
add
jo
jle
push
jb
xchg
cmpsl
jl
mov
test
scas
test
sahf
subl
push
dec
inc
shrb
in
pop
cli
in
popf
add
pushf
movsl
pusha
push
mov
xchg
imul
mov
xchg
pop
mov
into
insb
fdivr
and
mov
or
stos
movsl
gs
imul
push
push
mov
pop
repnz
mov
sbb
mov
lret
rclb
push
lret
scas
cmp
aaa
push
aam
sti
int
inc
adc
jb
jmp
adc
int
pop
popa
sbb
jns
cmp
mov
fmul
icebp
fs
loop
cltd
push
repz
ficoms
push
mov
jge
jne
cmp
stos
aam
adc
fstpl
lcall
mov
xchg
insl
ret
scas
pop
add
out
xchg
stc
lods
lods
cmp
mov
push
sub
and
push
ret
orl
sub
dec
loope
decb
sub
cmpsl
mov
or
insl
lret
ficompl
into
mov
ror
out
loop
mov
test
fwait
dec
in
inc
fistl
test
xchg
mov
pop
xchg
sub
xchg
cmp
shrl
inc
outsb
sbbb
mov
call
xchg
cmpsb
mov
mov
in
outsb
movlps
sahf
addr16
popf
mov
push
es
xor
sbb
aam
pop
rcrb
outsb
inc
out
test
sti
iret
ja
push
insb
test
mov
cli
movsl
stos
pop
lret
lcall
xchg
jbe
pop
add
setne
test
sbb
into
push
clc
and
repnz
testl
jg
mov
or
mov
enter
imul
std
ja
and
sub
push
cwtl
aad
xchg
jl
cmc
aas
and
int
or
pushf
mov
jge
mov
sbb
std
negb
xor
bound
ret
inc
xchg
cmpsb
or
out
push
fsubrl
push
test
les
mov
xchg
adc
push
add
sub
xchg
in
mov
mov
sbb
outsl
negl
cmp
imul
or
or
mov
scas
jge
popa
mov
shll
jg
lahf
test
push
jmp
mov
dec
ds
fdivp
out
inc
icebp
jns
outsb
jecxz
out
ficompl
out
and
sbb
xlat
dec
xchg
sub
in
xchg
mov
addr16
cmc
mov
pusha
mov
cmc
adc
loope
hlt
fstps
jp
js
sahf
cmp
pop
and
testb
sbb
mov
sbb
popf
and
je
lea
push
sub
insb
test
movsb
mov
fistl
cli
lahf
push
pop
or
inc
test
and
fdivs
cmp
sub
xor
aam
add
jecxz
js
dec
scas
mov
aam
lea
int3
xchg
pusha
ss
sbb
ss
or
xchg
das
push
add
scas
pop
mov
mov
pop
popa
in
sub
mov
mov
inc
sub
adc
pop
inc
add
pushf
adc
cmp
jge
or
mov
mov
sbb
push
and
or
mov
je
or
push
pusha
je
lods
daa
ja
xlat
arpl
shrb
insl
mov
mov
and
rcll
dec
dec
push
stos
jl
dec
jg
cmp
mov
int3
leave
cmc
cli
inc
xchg
inc
aaa
cltd
cmp
and
pop
fdivs
clc
lret
and
jp
popf
push
aaa
sahf
add
loopne
jo
inc
xchg
inc
dec
pop
test
jg
in
sar
mov
outsl
addl
xor
pop
pop
leave
adc
movb
insl
jg
sbb
jne
subb
jnp
inc
stos
sar
jmp
lods
push
mov
lahf
ja
push
vmwrite
xchg
ds
mov
scas
mov
inc
in
xor
mov
pop
dec
into
into
xor
mov
mov
pop
adc
jle
ret
popf
data16
adc
and
jae
outsb
fdivr
imul
dec
jno
xchg
idivl
pusha
cmpsb
mov
shrb
clc
lahf
sub
push
jp
loope
mov
mov
orl
lea
fs
xor
and
sbb
sbb
push
adc
inc
mov
iret
gs
pop
hlt
cs
mov
out
iret
sbb
stc
imul
cmp
xchg
push
cmp
out
mov
cmp
rcll
arpl
popa
push
les
aaa
inc
mov
sarb
pop
push
test
pop
clc
insl
out
adc
push
mov
enter
and
add
sbb
stos
mov
sub
adcb
popf
popa
inc
imul
pop
cmc
aas
nop
out
cld
popf
shrb
adc
fadd
fcmovb
push
xlat
pop
loop
cmc
xor
jbe
cltd
mov
icebp
flds
mov
inc
sbb
push
mov
xchg
xor
shlb
movsl
cmpsl
mov
sub
sbb
adc
sbb
ds
mov
inc
imul
dec
les
add
inc
stos
or
rclb
out
iret
mov
xor
ret
loop
aam
and
cmpsb
ret
pop
sub
roll
dec
push
mov
aas
or
mov
sti
ror
mov
fstpt
arpl
sub
xor
mov
test
in
cmpsb
mov
aad
xor
test
mov
mov
shl
orl
addb
mov
sarb
lret
xlat
and
iret
dec
and
shrb
shr
pop
mov
add
aad
imul
sbb
sbb
sbb
js
and
cmc
push
lds
jno
pushf
cli
pop
dec
cmp
sbb
xchg
sbb
sub
xchg
xor
imul
js
popf
xchg
subl
loop
outsb
cmp
aas
sub
mov
ret
gs
and
mov
adc
mov
xor
xchg
pop
fnstsw
sub
push
fstp
mov
fcompl
cli
loope
adc
sbb
fiadds
cmp
mov
cmp
movsl
ja
sub
sbb
loope
push
pop
lock
int
add
test
adc
mov
mov
fwait
test
dec
aam
aad
mov
mov
xchg
cs
xchg
mov
imul
push
sbb
icebp
test
stos
mov
jo
cmpsb
fisubrs
repz
xchg
aam
lock
cmc
jp
inc
sub
inc
popa
inc
pop
ljmp
je
adc
sub
or
repz
repnz
inc
scas
push
xor
jmp
mov
pop
movsl
rcl
nop
mov
or
outsb
call
lock
repz
ljmp
scas
mov
mov
aam
insb
out
jbe
jp
rcrb
in
fstp
out
or
and
mov
xlat
imulb
jg
in
xchg
mov
lock
pop
rorb
stos
imul
decb
or
xchg
into
popf
lods
in
mov
xor
scas
cmpsb
lea
arpl
insl
out
xor
bound
xor
mov
loope
and
and
mov
jmp
jecxz
mov
in
jae
mov
xchg
jae
xchg
test
add
dec
in
push
cltd
pop
in
lock
das
cld
mov
sbb
jg
popa
sub
in
aam
xor
or
lea
stc
popf
cltd
lret
pop
movsl
push
inc
and
imul
cmp
insb
pusha
xchg
cmp
movsb
jge
xchg
sub
xor
add
rclb
jg
movsb
adc
clc
xor
or
arpl
pop
or
insl
mov
dec
pop
orl
mov
inc
repnz
dec
mov
adc
ret
add
and
pop
std
test
add
sub
push
fisubrs
out
fwait
decb
sub
loop
dec
scas
std
jge
xchg
mov
imul
leave
test
add
into
jg
sti
out
mov
cwtl
cltd
ljmp
aad
and
xchg
mov
std
aas
test
dec
cmp
cmc
push
call
dec
cmp
xchg
inc
cld
push
sub
iret
and
inc
jnp
inc
cmp
icebp
into
les
lret
dec
ret
test
lahf
xor
mov
adc
sahf
inc
jg
lds
push
outsb
lds
inc
fistpl
mov
loope
arpl
lcall
jno
cltd
hlt
stos
fdivs
add
jbe
mov
xor
or
and
int3
mov
pop
jae
mov
or
mov
sti
pop
mov
movsb
lcall
xchg
push
xchg
dec
lcall
pusha
sbb
imul
gs
xor
add
sbb
adc
xor
xor
cmp
jae
subl
and
or
test
movsb
fsub
shlb
mov
or
mov
add
addr16
mov
mov
into
lds
mov
sahf
and
pop
jmp
or
xchg
or
mov
cmp
out
pushf
pop
pop
aad
dec
xchg
fmull
lods
mov
jne
adc
iret
add
mov
call
xchg
jns
cmc
cmp
jo
pop
xchg
fsub
daa
jmp
movsb
mov
mov
push
xor
arpl
sub
addl
sbb
popl
outsb
jmp
mov
lock
and
out
mov
daa
clc
out
add
add
mov
sarl
or
dec
push
mov
lcall
shl
fdivrs
add
adc
pop
imulb
mov
imul
push
xchg
and
xchg
sub
cmpsl
ror
push
lcall
repz
jmp
fmulp
jbe
cld
jmp
jl
ret
add
aam
push
test
add
xchg
das
out
mov
ss
mov
xchg
aas
fists
inc
mov
push
push
pop
ss
xor
push
rcll
je
or
pop
enter
outsl
dec
xchg
jnp
call
sub
push
loope
pop
xchg
andl
sub
outsb
jmp
lods
cs
js
mov
cmp
daa
adc
dec
inc
rcll
notb
inc
rcrl
mov
sahf
aam
sbb
dec
in
fsts
loop
lret
mov
in
clc
and
int3
shll
jne
xlat
add
xor
push
mov
repz
cmp
jmp
in
movsb
cmp
les
je
rolb
add
testl
push
and
out
sub
dec
mov
shrb
sbb
mov
lret
sub
add
stc
xor
and
outsb
outsl
or
pop
dec
aaa
pushf
int3
aam
jno
push
mov
inc
fdivrs
push
jb
cs
int3
repnz
inc
add
clc
mov
shrb
mov
pop
inc
jae
push
loope
xor
es
enter
insb
cmpsl
mulb
or
jl
sahf
outsb
dec
sub
dec
push
mov
xchg
add
pop
adc
jl
push
movsb
add
arpl
lea
xchg
push
rclb
jns
sbb
test
pop
adc
mov
ljmp
or
mov
pop
int3
jle
gs
cli
cmp
rcl
push
xchg
xchg
jl
adc
jl
gs
pop
or
mov
adc
adc
sbb
aad
jge
outsb
test
dec
sub
fsub
xor
xor
xchg
push
cmp
les
aad
xchg
pop
ss
out
jg
gs
mov
lea
xchg
xchg
mov
xchg
fdiv
insb
pop
push
mov
into
scas
cmp
jg
mov
dec
or
push
jl
es
mov
pop
sub
sbb
dec
leave
sbb
jmp
shrl
mov
lods
rcrl
mov
sub
mov
inc
push
pop
out
xor
adc
jbe
mov
push
aad
jo
fisttpl
sub
rcll
or
fldl
push
mov
rolb
sbb
popa
sti
pop
cs
jge
fs
adc
xchg
cmp
cmp
xor
fwait
clc
mov
pop
push
out
iret
mov
mov
loopnew
or
incb
subb
outsl
mov
fsubr
sbb
or
jecxz
dec
jbe
inc
mov
out
movsb
lds
jmp
or
adc
mov
push
adc
insl
dec
jg
push
loope
add
xchg
mov
enter
add
lret
dec
pop
mov
mov
loope
ret
lock
mov
add
fcomip
mov
sub
push
mov
adc
fmuls
aad
movsl
stos
test
loopne
rcr
cmp
dec
pop
addl
and
scas
mov
scas
shlb
test
inc
add
jo
movsb
adc
cs
jns
fisubrs
pop
and
xor
stos
dec
adcl
dec
jle
sti
sahf
call
sti
cmp
es
dec
push
sub
jbe
jns
jle
sbb
in
pop
sbb
jo
add
mov
mov
mov
inc
imul
out
or
ds
add
ficoml
clc
movsl
cmpl
addl
rcr
push
inc
inc
jns
loope
iret
cs
js
rorl
loop
gs
stos
and
dec
adc
insb
adc
pop
idiv
mov
shrl
cmpl
dec
pushf
repz
cmc
das
fidivs
inc
and
and
xor
or
orl
dec
fisubrl
push
fimuls
jbe
sub
in
daa
popa
pushf
and
clc
mov
shlb
jo
mov
std
adcb
call
jmp
loopne
lock
jb
dec
test
sbb
mov
clc
inc
call
adc
xchg
cld
mov
inc
in
and
mov
js
mov
or
xor
aas
sti
lcall
sahf
xor
mov
and
je
jne
mov
push
mov
add
imull
push
stos
sti
mov
adc
into
sbb
sbb
adc
cmp
sbb
mul
push
lods
xchg
clc
lret
cmp
shlb
pop
pop
lods
pop
sarl
outsl
and
clc
stos
pop
and
or
xorl
jp
fimull
pop
mov
lret
int3
add
in
int3
inc
xchg
insl
movsl
mul
dec
push
enter
leave
mov
mov
adc
fsub
pop
nop
and
sahf
sub
lds
fdivrp
std
sbb
and
cmpsl
adc
out
sub
jb
shll
pop
fs
mov
add
jmp
mov
push
mov
hlt
dec
dec
jne
jmp
lahf
js
arpl
data16
loope
enter
arpl
repz
mov
push
into
dec
push
add
fisubrl
mov
aam
cltd
push
add
sbb
dec
push
inc
or
inc
dec
test
xchg
xchg
push
push
mov
mov
mov
mov
mov
sub
ret
push
imul
cmp
lret
sub
scas
aam
add
jg
das
lcall
xor
cmc
sub
add
push
jge
add
dec
into
sbb
sbb
jae
adc
and
pop
sub
out
and
cmp
and
dec
mov
inc
push
push
clc
cwtl
popf
push
aaa
lock
mov
jnp
mov
adc
fsts
test
pushf
dec
les
push
pusha
pop
aas
shll
jns
add
push
gs
repz
push
imul
cmpsl
mov
hlt
popf
sahf
cmp
ret
into
test
xchg
xchg
mov
dec
je
inc
cli
push
into
adc
or
loopne
lahf
pop
xchg
and
xor
jl
mov
pusha
sbb
mov
mov
jne
cmp
and
mov
pop
jecxz
pop
mov
mov
xchg
pushf
push
rcrb
mov
add
popa
in
cmp
add
dec
mov
xorb
out
push
mov
aad
push
pop
jmp
mov
mov
mov
pop
pop
jmp
inc
xchg
inc
xchg
and
and
lret
ds
mov
pusha
leave
inc
add
mov
xchg
jno
xchg
inc
insb
test
and
out
lods
cmpsb
addr16
xchg
mov
xor
mov
and
or
push
nop
into
hlt
add
add
push
ljmp
std
xlat
test
xchg
rcrl
mov
dec
mov
ret
fsub
js
sarb
cmp
call
xor
mov
mov
or
hlt
gs
aad
test
sub
mov
add
nop
scas
jbe
cmp
sbb
mov
imul
sarl
mov
jae
xlat
fs
jno
into
icebp
popf
call
or
movsb
fildll
rcrb
push
jge
insb
shl
test
loop
scas
cwtl
pop
jp
mov
mov
jo
pushl
pop
pushf
inc
popa
in
pop
bound
inc
push
lret
fbld
add
les
loop
sub
inc
iret
adc
outsb
stos
lds
cld
outsb
adc
aam
pop
mov
sub
into
mov
fdivr
adc
xchg
pop
loope
addb
sub
dec
orb
popa
push
mov
mov
mov
pop
loop
inc
add
cmp
out
adc
cld
jg
icebp
fs
sub
and
sub
push
arpl
cmpsl
repz
inc
int
shlb
or
lcall
into
sbb
insl
inc
test
xlat
mov
mov
incl
jo
mov
mov
outsl
mov
arpl
sbb
fxch
call
pop
arpl
loop
sahf
sub
lods
inc
das
cmp
rcl
pop
xchg
dec
mov
mov
pop
cmp
loop
inc
push
mov
mov
xor
push
lret
adc
sbb
adc
and
mov
inc
pushf
jns
push
xchg
jp
xlat
and
es
int3
mov
and
xchg
mov
sub
sbb
push
mov
fstpl
add
dec
into
sub
dec
sbb
push
dec
popa
pop
std
popf
sarb
cltd
push
lods
mov
sti
outsb
insl
add
mov
adc
and
cmc
push
inc
jns
js
jb
jbe
push
daa
adc
insb
pop
pop
or
mov
clc
mov
out
adc
rcrb
stos
inc
push
ret
push
xchg
mov
mov
sbb
cs
incl
push
cld
lea
lahf
sub
repz
pop
icebp
xchg
outsb
ds
cmp
push
jbe
mov
loop
lods
or
jns
sbb
ljmp
push
add
ret
outsl
ret
arpl
xchg
rep
pop
mov
mov
in
clc
pop
ss
pop
icebp
adc
push
ret
fs
lds
cmovge
icebp
fdivl
mov
clc
mov
in
mov
cmp
xor
mov
repnz
push
loopne
mov
push
out
sbb
xchg
jae
je
je
inc
xchg
repnz
out
dec
xchg
ds
pop
jae
jmp
in
movaps
inc
hlt
scas
repnz
shll
mov
popa
rol
movsb
imul
in
clc
sub
shll
das
mov
fisttps
mov
or
in
cwtl
cmp
jl
dec
inc
push
stc
pop
lock
scas
sbb
aad
cmpsb
xchg
cmp
arpl
in
out
sbb
or
push
ret
fbld
stc
test
arpl
arpl
and
cs
ret
xchg
in
pushf
xlat
mov
mov
jmp
mov
mov
mov
fisubrs
repnz
sub
fcmovnu
adc
mov
aam
xor
inc
or
shll
push
jp
pusha
insb
dec
and
mov
shrl
repz
add
ljmp
jns
pop
outsb
xlat
sbb
ds
or
dec
mov
pop
xlat
popf
inc
sahf
jns
mov
popf
lods
adc
mov
jae
dec
in
pop
xor
ljmp
mov
loopne
inc
or
and
xor
cmp
dec
fnstcw
jo
pop
or
dec
add
add
jae
sbb
push
loope
scas
cli
test
mov
inc
aad
cli
sbb
mov
jbe
test
adc
jnp
xor
pushf
sbb
mov
dec
jo
dec
jns
lret
hlt
push
aaa
data16
xchg
lahf
popf
aad
scas
sub
iret
rol
inc
mov
jp
jae
stos
stc
adc
das
fmulp
mov
sahf
pop
movsb
outsb
bound
imul
and
stc
leave
rolb
dec
jp
dec
pop
lahf
pushf
fstpl
pop
xorb
xor
jecxz
enter
testb
popa
cs
mov
mov
cltd
xlat
jne
xacquire
and
les
dec
int3
mov
sub
mov
je
sbb
mov
jg
jno
inc
and
mov
sub
ljmp
mov
pop
into
pop
arpl
pop
mov
pop
push
inc
aam
iret
outsl
aad
out
scas
cmp
mov
jg
push
repz
lods
mov
jmp
dec
loopne
xchg
inc
sbb
ss
xlat
xor
and
xor
jne
cmpsb
outsl
xor
and
xchg
scas
cmc
mov
push
mov
xchg
mov
xlat
outsl
js
lea
lret
test
jmp
pushf
negb
sub
pop
imul
pop
xor
inc
and
add
pop
and
clc
adc
movsl
pop
pop
add
xchg
cmp
mov
sahf
aam
xchg
cli
scas
or
out
sub
insl
push
inc
mov
or
into
fdivl
cmc
xor
ja
pop
or
lret
arpl
lcall
xchg
enter
jle
aad
add
mov
add
pop
hlt
mov
jg
das
sti
lock
mov
lock
fwait
sub
xlat
lahf
xor
pop
setp
or
pop
pop
xor
inc
pop
nop
dec
mov
rorb
std
test
xchg
mov
int3
cltd
cmp
mov
xchg
mov
pop
adc
in
mov
push
lods
pop
mov
into
inc
je
cli
and
jmp
int3
sub
dec
adc
loopne
pushf
push
push
pop
inc
ret
dec
shlb
and
cmp
scas
adc
sub
aad
add
es
iret
mov
dec
sub
outsl
jnp
xor
ret
scas
xor
sarl
add
mov
int
repz
insl
cltd
popa
outsl
mov
cld
cli
push
add
xor
in
mov
aad
and
rcrl
addb
mov
pop
out
rcrb
nop
imul
fistl
cmp
pop
pusha
jg
es
fldcw
mov
movsl
in
out
and
scas
jg
sub
stos
shlb
sahf
hlt
mov
push
ret
mov
pop
jno
dec
faddl
mov
mov
push
popf
stc
stos
sti
xchg
ficomps
xor
mov
mov
jle
sbb
gs
add
inc
push
dec
jp
inc
repnz
sbb
and
jnp
mov
shll
mov
jl
cmp
in
xchg
stos
cmc
lret
cmp
into
jo
mov
jp
sbb
adc
rcll
sub
push
lret
or
out
cmp
mov
cltd
out
xchg
xor
movlps
arpl
sub
add
ret
stos
mov
inc
and
and
aas
cmp
or
push
jns
inc
sbb
sahf
lcall
test
js
cmpsl
addb
outsb
sbb
add
mov
cmp
aad
jns
inc
push
pop
aad
rcr
dec
pop
loop
mov
mov
push
das
mov
jo
jbe
imul
push
cmc
cmp
scas
cmp
inc
lret
jno
iret
sub
int3
ja
cld
xchg
xor
cld
loopne
jg
lods
aaa
pop
dec
adc
cmc
cmc
xchg
fs
push
jbe
xchg
data16
movsb
push
pop
mov
inc
jo
ljmp
adc
mov
push
scas
ret
dec
iret
xor
jg
cmp
mov
out
mov
sub
scas
loope
insl
adc
and
inc
jae
gs
fisubrl
mov
dec
adc
push
sbb
outsl
out
xchg
cmpsl
cwtl
dec
dec
sahf
xchg
cmp
and
sbb
adc
or
dec
xor
jecxz
dec
cmp
sub
ja
sbb
mov
and
call
mov
adc
adc
add
mov
aam
mov
aas
aad
jae
and
roll
mov
aas
data16
test
lahf
ja
bound
les
xchg
add
pop
mov
icebp
or
pop
mov
sub
jnp
push
jmp
xchg
pusha
sahf
xchg
mov
mov
inc
cmpb
cld
xor
or
rcll
mov
sahf
dec
ror
insb
and
xchg
sbb
test
jmp
in
cmp
subb
xchg
subl
clc
ret
cmp
push
dec
jmp
subl
push
mov
loopne
xchg
inc
cmp
mov
imul
lcall
pop
push
aad
dec
nop
nop
push
sbb
lret
cmp
ja
ja
cmp
pop
or
test
sbb
xchg
and
mov
hlt
cld
jb
adc
shlb
repnz
mov
and
jb
mov
aaa
sti
std
xor
mov
outsb
pop
in
pop
adc
push
cmpsb
fidivrs
outsb
mov
mov
push
cli
rcrb
cmc
lock
sub
icebp
cli
divb
push
add
fidivrl
mov
ret
push
iret
icebp
loope
add
lahf
call
je
rorl
xchg
div
fmuls
xchg
or
jp
mov
hlt
mov
mov
mov
lret
lods
push
or
repz
pop
mov
fdivrs
stos
mov
xchg
adc
mov
test
adc
mov
cmp
adc
cmp
dec
adc
sub
cli
repnz
and
jecxz
mov
outsb
cmp
adc
or
push
pop
dec
aam
or
push
and
test
test
lods
mov
sbb
popf
mov
rorb
call
adc
std
lods
dec
cmp
sbb
sbb
dec
jl
push
inc
pusha
cld
pop
lods
imul
push
sahf
test
pusha
jno
push
push
lret
xor
data16
sbb
fwait
push
mov
cld
inc
stos
cs
cmp
outsl
mov
and
jge
testl
ja
lret
cmp
mov
ficompl
jmp
scas
mov
test
mov
push
sbb
mov
loopne
and
push
out
pusha
push
fisubrl
sbb
or
xchg
inc
test
or
pusha
sbb
fcmovnb
mov
sbb
roll
sub
mov
sub
test
data16
pop
jmp
addr16
loope
sub
stos
ljmp
dec
lret
cmpsl
std
bound
mov
dec
pop
test
inc
or
xor
daa
idiv
movsb
cld
shll
jno
xchg
cmc
sarb
pop
xchg
outsb
mov
push
cmp
mov
push
sbb
movsb
and
adc
cmc
mov
fidivrl
fidivrs
sub
jae
clc
ret
mov
pop
and
out
add
or
cld
jne
mov
imul
out
xchg
divb
repnz
jb
fistl
dec
pop
mov
aaa
sbb
test
sub
add
push
sub
pop
jg
and
or
rcr
push
xchg
loop
stos
push
mov
xchg
fcmovne
add
jno
les
mov
mov
add
jno
call
sub
js
jl
arpl
shrb
lcall
pop
shlb
fisubl
adc
mov
cltd
lcall
mov
jbe
mov
xchg
fiaddl
dec
ret
lcall
call
mov
mov
xchg
xlat
pop
loope
and
xchg
jae
push
pop
fstpl
mov
mov
add
int
cld
inc
mov
aas
jmp
scas
stos
ds
loope
in
adc
fwait
dec
mov
adcb
jle
inc
out
pop
dec
lock
mov
push
insb
jge
jb
sub
loope
mov
out
mov
lea
jecxz
in
push
les
push
mov
idivb
cmp
jge
hlt
mov
or
inc
adc
jb
in
inc
cmp
test
jne
popa
mov
repnz
xchg
ret
mov
xor
fs
lahf
sar
in
pop
jmp
sbb
fucom
inc
xchg
mov
imul
gs
jmp
jle
loopne
cmp
mov
mov
lahf
in
and
mov
loope
push
or
mov
fwait
test
mov
push
sbb
cmp
test
push
movsl
sbb
or
icebp
xor
popf
mov
scas
test
sub
and
dec
mov
or
xor
cmp
mov
mov
cmp
outsl
jbe
insb
mov
inc
fs
add
jb
dec
dec
cmp
sub
xor
imul
jns
jp
mov
dec
xor
sar
xchg
outsl
inc
sbb
xor
sub
xchg
and
jle
icebp
mov
imul
inc
and
add
mov
adc
cmpsl
push
or
rcrl
leave
or
and
enter
hlt
sbb
mov
or
or
bound
jb
dec
mov
xchg
rcr
sti
int
test
lret
mov
push
outsb
push
pushf
addr16
ret
inc
lret
sbb
sub
and
xchg
push
pop
jmp
call
test
xchg
ljmp
fidivl
and
xchg
notb
pop
icebp
sub
push
lock
or
push
push
cmp
or
test
es
mov
jo
imul
stc
jno
sarb
daa
xor
xchg
popa
pop
push
mulb
adc
das
ljmp
xchg
push
vcmpps
inc
lds
add
cmp
xchg
repnz
pushf
push
les
fldcw
xchg
mov
xor
je
mov
lret
leave
add
test
mov
into
xchg
xor
addr16
adc
and
pop
popl
gs
ja
ss
leave
inc
jmp
rol
xor
popf
pop
loope
das
lds
and
xchg
ret
jno
jae
int
or
cmc
sbb
cwtl
mull
ret
push
in
sbb
or
xchg
aas
les
and
jmp
and
pop
sub
clc
mov
inc
and
pushf
push
int
loop
mov
outsl
inc
aaa
jnp
int3
push
test
push
mov
push
pop
in
or
test
stc
pop
sahf
fidivrl
mov
cmp
lret
xor
divl
dec
push
bound
mov
cld
ret
sbbb
xor
pop
sub
or
push
sub
jecxz
je
lods
dec
inc
outsb
insl
fs
adc
and
je
inc
jbe
andl
shlb
fcmovu
mov
movsl
cwtl
cmp
lods
negb
inc
icebp
mov
xor
cmp
lds
xchg
mov
into
ror
incl
dec
stos
out
jmp
push
int
mov
mov
insb
dec
add
pop
nop
xor
push
lds
dec
dec
sbb
add
data16
loopne
rcr
pop
mov
inc
mov
std
push
xchg
push
sbb
adc
scas
cltd
push
xchg
dec
xchg
cmp
repz
xchg
and
lcall
aam
mov
jmp
mov
scas
aaa
jmp
mov
inc
mov
arpl
mov
adc
cld
and
testb
aam
jns
sarl
cmp
sub
loop
mov
hlt
and
or
add
push
call
jle
sub
clc
cltd
cmc
scas
js
iret
icebp
xchg
andl
outsb
cmp
pop
inc
scas
sbb
inc
pop
mov
loope
push
int
adc
push
jb
cmpsl
xorl
arpl
adc
rclb
pop
fdivrs
push
mov
out
out
cmpsb
fs
cmp
stos
cmp
enter
notl
sub
pop
push
push
out
aaa
jno
pop
aad
xor
cld
ljmp
add
repnz
mov
xor
cltd
jne
call
sahf
aaa
sarl
pop
sub
dec
scas
stos
mulb
cmp
jge
aam
mov
jmp
mov
cmp
in
scas
mov
ret
aad
add
mov
mov
sub
mov
add
push
mov
mov
clc
rclb
or
pop
add
js
fisttpl
jno
add
ljmp
mov
xor
add
xor
mov
cli
stc
inc
xor
lods
sub
leave
addr16
adc
out
movsb
sub
jp
or
movsb
mov
xchg
mov
xchg
inc
mov
fisttpll
xchg
adc
sub
sbb
sbbl
movsb
cwtl
xchg
cmc
dec
xchg
mov
pop
std
int3
mov
push
pop
pushf
inc
pop
cltd
add
rorl
into
popa
mov
mov
call
ffree
movsb
insb
pop
jle
andb
push
push
xchg
pop
pushf
decl
xorl
and
fcmovnb
clc
and
nop
addr16
sbb
mov
mov
mov
mov
sbb
or
xor
xchg
adc
mov
mov
cltd
daa
repnz
jb
movsb
push
in
sahf
pop
push
ror
sar
dec
jbe
add
leave
jns
scas
mov
fcmovbe
and
movsl
leave
mov
arpl
mov
and
lret
fimull
std
dec
jle
shll
divl
mov
and
cmp
inc
cmp
hlt
lcall
je
jmp
dec
mov
out
into
hlt
inc
cli
cwtl
mull
in
das
mov
int
js
lret
inc
xlat
and
dec
jb
pusha
fdivl
sub
jbe
test
xor
dec
inc
in
dec
sbb
xchg
adc
push
cmpsl
fmull
mov
int3
and
push
xchg
arpl
aaa
adc
mov
mov
shll
movb
push
mov
lock
mov
inc
dec
xor
and
stc
jo
jns
in
dec
fbld
fdivrl
pop
inc
add
adc
out
inc
cmc
lret
test
cmp
mov
xor
cmpsb
xchg
jge
push
mov
jns,pn
jb
jg
aad
sti
push
cli
stc
cli
xchg
inc
movsl
inc
test
bound
outsb
push
mov
xchg
loope
adc
test
pop
push
jbe
pop
aad
insl
sti
scas
or
sbb
das
mov
lahf
pop
insb
pop
shlb
gs
or
xchg
adc
xchg
xchg
or
into
pusha
stc
out
mov
mov
in
sti
inc
jb
scas
jo
or
cmp
out
das
loope
ja
cmp
pushf
xchg
cmc
adc
lcall
dec
hlt
into
les
outsl
cmp
or
aam
sub
mov
xchg
xchg
clc
pop
xor
xchg
mov
push
outsb
shrb
lcall
mov
and
int
pop
pop
pop
lcall
aam
das
ljmp
mov
cmpsb
mov
and
call
inc
dec
cmp
je
imul
push
xor
add
pusha
stc
ds
and
pop
ret
movsb
xchg
sub
repnz
pop
mov
cmp
incb
pop
hlt
jg
testl
ret
mov
pop
fstpt
fadd
pop
scas
int3
clc
jo
std
dec
inc
jle
jmp
pusha
add
and
mov
testb
jl
imul
mov
popa
das
or
mov
mov
sbb
xor
xchg
in
xor
sbb
out
mov
push
imul
inc
hlt
shrl
loopne
sbb
into
jp
lcall
cmpsl
clc
adc
loope
dec
mov
test
jo
test
dec
scas
inc
sub
in
call
ljmp
inc
icebp
mov
shrl
leave
test
sub
sbb
sarl
add
imul
inc
js
or
xor
mov
pop
imul
ret
push
das
add
cli
aas
outsb
or
lds
arpl
cmp
jge
push
push
push
iret
add
xchg
adc
mov
cmc
dec
jmp
outsl
pop
xchg
pop
pop
scas
in
xchg
jecxz
dec
adc
sub
out
test
jle
sbb
insl
mov
adc
icebp
cmpb
or
subb
cmp
pop
dec
adc
imul
ds
into
mov
pushf
ja
bswap
lret
popa
push
and
mov
out
stc
aad
shrb
cld
mov
test
sbb
xor
jne
dec
inc
cmp
ret
dec
in
scas
sub
xlat
or
decb
inc
out
pop
pop
xchg
pop
in
fcmovb
sub
mov
push
jmp
lahf
rorb
mov
movsb
mov
les
push
sbb
inc
lods
adc
add
stos
dec
mov
stc
fsubs
sub
dec
call
in
lods
fildl
int3
mov
aam
adc
inc
loopne
ret
mov
add
adc
dec
fcomps
and
push
adc
ss
push
mov
jne
fwait
adc
pop
or
jmp
xor
or
or
mov
jbe
mov
xor
movsb
mov
dec
xlat
sti
incb
xor
bound
push
call
add
sub
pop
dec
jge
add
cmc
es
mov
movsb
mov
push
arpl
rorb
dec
push
add
ret
jmp
in
add
sub
jno
xor
push
in
fnstcw
test
push
in
outsb
cmp
mov
daa
adc
popf
icebp
out
cld
roll
ret
mov
rol
imulb
mov
popa
in
fs
cmp
arpl
sahf
cld
adc
cmp
mov
mov
add
lock
dec
sub
shll
popl
sub
inc
sbb
cmp
scas
mul
lea
das
sub
sahf
fwait
test
repz
ret
shl
cld
out
mov
mov
in
pop
incl
sbb
xor
jp
insl
or
data16
cmp
les
or
cmpsl
mov
into
jns
in
test
fs
insl
mov
mov
fiadds
xlat
cmp
sbb
cs
dec
js
int
push
fcompl
nop
cmpsl
mov
daa
cltd
add
addb
xchg
push
out
ret
insl
stos
cmp
pop
pop
cmpsl
cs
cmp
sbbl
stos
jmp
cmp
sarb
mov
sub
sbbl
jo
pop
ja
cmpsl
dec
fsts
or
in
jecxz
mov
or
lcall
dec
mov
lret
lock
iret
sbb
sbb
push
pop
sbbl
lods
lods
and
loop
xchg
sub
cli
mov
test
and
mov
and
cmp
add
iret
rclb
pop
gs
sbb
lret
pop
loop
mov
sbb
push
add
inc
xor
popf
sti
rcr
jmp
stos
in
pop
xchg
or
jb
outsb
xor
pop
cmp
xchg
lahf
aam
out
ret
mov
mov
or
jns
je
mov
fisttps
mov
jmp
rcrl
lea
push
cltd
mov
jle
xor
loop
es
lea
aas
iret
clc
bound
fcmovbe
dec
xor
jp
mov
add
cli
aaa
das
testl
cs
mov
cmpsl
pusha
mov
dec
jb
push
pusha
mov
cmp
arpl
icebp
xor
adc
lock
xchg
adc
jle
push
mov
xorl
lock
andl
add
scas
aas
cmpsl
cmp
in
ret
pop
stos
testl
insl
mov
sbb
mov
mov
out
frstor
push
in
xor
mov
jge
das
lcall
mov
mov
nop
pop
cld
in
dec
mov
cmpsb
fcomi
fcomp
out
insb
cmp
aas
js
push
adc
inc
rep
test
lcall
in
sbb
out
inc
push
lahf
xchg
push
call
imul
pop
fidivrs
into
fisttpl
mov
mov
mov
movl
inc
lods
mov
dec
inc
xor
loopne
xor
cmpsb
sub
bound
mov
imul
dec
xor
dec
nop
xor
add
fnsave
popf
xchg
nop
xchg
imul
push
cmp
stc
jmp
in
jno
mov
sbb
cltd
shrb
xor
pusha
sahf
jae
pop
movsb
xor
push
mov
iret
in
outsb
xor
cmp
or
cmp
cmp
cmp
jns
xchg
push
mulb
shrb
push
rdtsc
outsl
mov
int
sub
test
add
jp
inc
push
imul
loop
push
mov
ret
push
add
cmpsb
mov
pop
adcl
mov
jp
or
dec
out
sarl
pop
sbb
mov
xor
push
jbe
out
xchg
in
mov
pop
xor
jo
addr16
dec
and
xor
cmpsb
stc
pop
jl
test
add
push
imul
ljmp
xchg
mov
and
mov
add
or
lods
ret
mov
jae
iret
mov
push
stos
ja
clc
sub
jno
add
ljmp
sahf
cmp
out
subl
repz
and
ss
dec
xchg
xchg
jge
jmp
test
outsb
cmpb
cmp
adc
out
out
push
jns
add
add
ds
inc
in
jbe
aas
shrl
sahf
push
xchg
and
out
gs
fbstp
push
cli
repz
imul
xchg
adc
loope
sub
fs
pop
fucomp
out
stos
xchg
xchg
sbb
aaa
stc
test
push
in
pop
dec
in
xor
roll
jno
mov
hlt
outsl
ror
data16
dec
sahf
call
mov
add
rclb
cmp
fimull
ss
and
lea
add
outsl
push
dec
movsl
mov
leave
jae
pushf
lahf
mov
inc
dec
stos
incl
mov
sbb
mov
push
lea
jl
cld
and
movsl
and
ljmp
cmp
lahf
les
sbb
xchg
mov
adc
jnp
pop
sahf
stos
xchg
pop
jge
lret
add
push
les
dec
mov
jl
imul
jne
sbb
mov
mov
sub
pop
nop
add
mov
mov
cmp
xchg
or
push
xorl
xchg
jmp
pop
inc
mov
pop
rcrl
push
jne
rcrb
lods
mull
or
gs
dec
bound
aam
outsb
sub
inc
fisubrl
cmp
adc
mov
icebp
mov
mov
mov
sub
jns
es
stos
jecxz
add
lret
cli
rclb
add
cmp
aaa
dec
out
pop
jle
dec
jg
push
xor
xor
mov
or
push
cwtl
adc
fucom
inc
mov
data16
xor
and
jl
mov
ljmp
add
push
cmp
out
std
push
hlt
pushf
cltd
xchg
scas
rcll
pop
and
sbb
or
ror
ds
or
fs
enter
outsb
les
push
sub
xlat
lret
lock
inc
mov
pop
jo
test
adc
out
and
mov
cli
test
and
or
mov
dec
pop
cmp
repz
loopne
jl
int3
fisttps
inc
xor
rorl
push
and
mov
sbb
mov
aad
gs
sub
xor
jo
mov
pop
hlt
mov
dec
hlt
mov
and
lds
dec
push
mov
or
leave
xor
lret
icebp
out
xlat
fists
and
dec
add
stos
cmc
mov
adc
inc
aad
pop
rdpmc
outsl
sbb
xchg
scas
movsb
jg
mov
add
aaa
mov
pop
bound
mov
sbb
aam
push
mov
mov
std
sbb
mov
inc
cmp
xchg
lods
push
inc
orl
mov
or
fsubrl
je
repnz
xor
fsubr
divl
rorb
dec
mov
in
inc
mov
mov
push
rcr
outsl
jns
int
lcall
cwtl
jo
adc
es
lds
test
cmc
test
popf
xor
adc
jle
cmpsb
arpl
icebp
lret
xchg
jp
push
gs
mov
adc
insb
hlt
mov
lods
fwait
adc
xorl
fbstp
loopne
mov
fcmovnb
dec
addr16
cmp
and
inc
imul
loop
out
sbb
in
orb
data16
push
pop
fldl
icebp
push
mov
ret
int
repz
repnz
cmp
mov
shlb
mov
shl
sub
or
outsl
cld
nop
xorb
push
xor
push
mov
stc
xchg
inc
add
add
push
pop
ret
sub
jne
ds
loope
sbb
ret
adc
jbe
mov
rcll
aam
pop
xchg
scas
int
sub
mov
xchg
xor
push
inc
xchg
jno
in
aas
add
pop
mov
mov
imull
rolb
add
or
andl
jae
pop
movsl
fcmovnu
pop
js
pop
lahf
sub
adc
cmpb
mov
adcb
xchg
test
ds
inc
lea
push
cmp
adc
data16
sbb
sbb
xor
std
mov
call
mov
les
aad
sbb
jl
stos
mov
mov
xchg
std
dec
rcl
bswap
xor
js
push
mov
jmp
adc
xchg
push
movsl
pop
mov
pop
mov
adc
in
xor
push
div
nop
fcompl
xchg
adc
cmp
cmp
adc
sub
nop
or
aad
pop
cmp
inc
adc
and
mov
push
movl
push
das
std
xchg
mov
add
xor
pop
loop
clc
out
mov
mov
popl
or
stos
mov
scas
pop
sub
scas
xchg
repz
icebp
fidivs
pusha
and
mov
sub
pop
push
in
xor
push
xchg
arpl
xor
jle
shll
sti
ljmp
push
adc
xchg
xchg
addr16
out
mov
cmp
jns
lahf
pop
and
lcall
lcall
push
adc
cmp
cli
sbb
scas
cltd
shrl
mov
cmpsb
pop
lea
outsl
cmp
mov
inc
les
pop
sti
clc
xchg
outsl
mov
push
in
lock
cwtl
xchg
addl
xchg
fwait
inc
inc
daa
or
add
push
mov
dec
push
mov
or
add
fdivl
test
ret
cmp
xchg
movsb
xor
shl
rcr
sub
jnp
insb
mov
or
mov
sub
pusha
fistpll
pushf
mov
scas
loopne
test
into
jns
scas
xchg
sbb
mov
xorb
pop
dec
push
cmp
sti
and
add
adc
clc
jl
lcall
dec
pop
outsb
sbb
jmp
and
dec
subl
sub
mov
decb
stos
loope
ror
cmp
mov
sbb
pop
dec
cmc
iret
test
ss
inc
jg
mov
das
mov
pop
movd
lret
rcll
push
or
lret
arpl
aam
int3
daa
insb
out
and
outsl
movsb
insb
and
jbe
dec
fnstenv
cmp
add
push
pop
sbb
or
xor
sub
push
pop
scas
mov
add
test
sahf
fnstenv
shl
pop
inc
pop
outsb
push
popf
bound
or
out
scas
xchg
fwait
jb
pop
mov
cmp
mov
jg
cli
icebp
sub
sub
ficoms
fldl
add
dec
adc
std
loopne
and
cmp
lds
push
out
clc
inc
dec
jge
int
aaa
cwtl
jns
cmc
pop
in
dec
sub
xchg
dec
lea
or
out
in
jb
pop
jge
add
adc
sbb
or
stc
loopne
pushf
and
add
pop
popa
dec
adcl
call
lahf
jecxz
js
xor
sub
mov
mov
adc
lods
push
pop
cmp
mov
mov
adc
mov
ljmp
bnd
in
sahf
pusha
add
insl
mov
sub
hlt
push
cld
int
mov
movsl
or
sarb
jmp
out
cmp
imul
mov
mov
lea
cld
jecxz
lds
mov
into
loopne
or
xchg
inc
sub
push
sarl
fmull
lret
pop
and
adc
insb
int
test
push
stos
jle
or
addr16
cmp
sbb
xchg
jle
push
lret
pushf
shrl
leave
push
test
mov
iret
push
xchg
popf
sub
test
cs
gs
lods
loop
mov
inc
and
or
xchg
mov
sti
ja
aaa
jae
jg
sbb
xchg
cs
rcll
add
sub
test
sti
daa
mov
cld
cs
or
cld
enter
fs
mov
or
add
aad
mov
fcomps
push
cld
inc
test
jbe
push
daa
xchg
mov
cmpsl
jne
mov
xchg
das
das
outsb
std
and
push
sbb
xor
fs
fsubr
sub
jl
add
xchg
dec
sbb
popa
imulb
xchg
mov
and
outsb
in
orb
roll
add
cmp
jg
mov
fistpl
mov
scas
add
push
cmp
in
pop
cld
pop
sbb
dec
aam
repnz
rclb
aas
icebp
xlat
addb
xor
mov
cmp
in
cmp
and
pop
sbb
adc
cltd
cmp
cwtl
cmp
mov
in
sbb
sub
push
scas
les
dec
jmp
pop
sub
lahf
and
rcl
xchg
xor
push
in
and
mov
lock
jle
push
mov
add
mov
xor
mov
dec
and
test
sub
movsl
or
pop
jb
ret
inc
xchg
mov
lods
lahf
clc
sbb
push
and
test
xchg
and
aad
and
jge
enter
push
out
mov
pop
lea
cmp
dec
push
push
scas
je
sbb
aaa
pop
adc
mov
inc
adc
xchg
jns
and
mov
mov
dec
test
add
out
fcoml
jmp
jecxz
bound
or
into
pushf
jmp
mov
sub
fwait
mov
mov
sti
daa
lds
mov
add
jo
and
pushf
repnz
insl
fadds
in
push
rcll
div
lret
and
sbb
mov
je
sub
stos
xor
les
iret
rcrl
jecxz
xor
ja
dec
push
pop
test
push
rcl
push
push
cmp
cli
movsl
pop
push
jns
inc
icebp
cmp
jae
scas
xlat
mov
mov
xchg
orb
mov
sbb
enter
push
mov
gs
jo
sbb
mov
mov
mov
lret
xchg
mov
add
xchg
stos
mov
iret
pop
inc
and
fcomps
sbb
sub
dec
cmpsl
stos
mov
mov
mov
les
xchg
jg
mov
xchg
inc
out
jo
xchg
xorl
fistpll
fwait
loope
fstl
mov
pop
or
into
in
ja
add
into
aad
into
xchg
jno
mov
out
dec
jmp
sbb
pop
adc
adc
lods
jno
test
sbb
ret
xchg
jmp
pushl
jo
mov
pop
iret
sbbl
call
ffree
sbb
and
mov
sub
jnp
push
push
into
sbb
xchg
aas
lret
push
in
jo
les
inc
out
mov
or
pop
test
addr16
inc
sti
out
mov
pop
ret
ret
in
inc
push
cmp
out
mov
icebp
insl
movsl
outsb
and
mov
leave
lds
mov
popf
roll
push
push
ss
inc
sti
ss
mov
dec
test
lods
cmpsl
cld
mov
cmp
mov
scas
enter
dec
dec
cmp
aaa
lods
mov
leave
lahf
cltd
cwtl
ficompl
je
jns
imul
or
fwait
idivl
lahf
push
out
lahf
mov
adc
xchg
sbb
cmp
mov
data16
ret
cmp
sbb
jl
add
fmul
ret
sub
clc
sbb
mov
sub
sub
xchg
je
inc
and
sbb
rcr
sbb
das
jg
test
push
ds
push
ret
or
mov
sub
adc
inc
jge
fistps
xchg
mov
mov
insb
rclb
outsb
test
dec
mov
and
add
cmp
stos
pusha
call
mov
dec
mov
mov
fs
pop
sbb
jae
mov
aam
push
xor
ret
xchg
adcb
fbld
jo
and
and
ffree
push
ror
push
iret
in
mov
add
mov
sub
cmp
cmp
pop
test
cwtl
sti
je
pop
lods
outsl
push
iret
daa
mov
mov
ds
pop
xor
or
dec
imul
add
test
lds
into
scas
jbe
sbb
stos
das
in
push
test
ficomps
ds
push
add
or
add
mov
add
push
mov
das
push
stos
jno
call
nop
mov
imul
negl
mov
inc
and
jb
int3
add
pusha
ret
smsw
scas
daa
push
lods
jb
insl
pmaxub
push
das
mov
xchg
addl
in
pushl
adc
std
or
inc
shll
icebp
fimull
popf
adc
sahf
sarb
lahf
pusha
dec
daa
push
add
add
push
xchg
sub
xorb
fdivl
xor
mov
lret
xlat
jge
pop
sub
outsb
jnp
aaa
xchg
cmpb
fs
test
inc
sub
jno
dec
fdivs
jge
sbb
pop
out
mov
cld
sbb
jno
jb
xor
ret
dec
data16
je
cmp
xlat
call
aaa
xchg
fisttps
sub
or
mov
lret
xor
adc
imul
mov
ja
enter
decl
sub
out
inc
fsts
push
jle
imul
jo
movsl
mov
jno
pop
clc
loope
jb
scas
ss
cltd
xchg
or
inc
jno
or
iret
jecxz
mov
jmp
sbb
jecxz
pusha
test
xchg
test
sbb
mov
outsl
inc
scas
cmp
sbb
pop
cmp
sub
dec
scas
and
push
fiadds
clc
jbe
add
repnz
dec
sbb
mov
mov
aaa
mov
lods
sbb
iret
daa
jecxz
push
dec
sub
cmp
dec
popf
xlat
mov
or
pop
dec
bound
gs
dec
mov
dec
add
push
popa
pop
dec
cmp
mov
enter
pop
pop
jb
in
ljmp
push
into
push
or
xchg
fs
loope
jbe
or
xchg
sbb
ret
lods
xor
jb
xchg
in
pop
int
sbb
ret
ret
jmp
xor
inc
dec
ljmp
dec
hlt
and
add
adc
addl
sub
mov
movsb
push
push
fs
lahf
sbb
adc
sbb
lods
pop
aam
fs
into
jmp
and
out
xchg
cmp
add
rclb
mov
pop
enter
les
sub
out
mov
icebp
push
lds
aad
scas
lcall
loope
push
xchg
fwait
scas
xor
mov
inc
roll
sub
in
adc
sub
scas
push
push
sti
jmp
out
clc
inc
add
cwtl
lods
movsb
popa
pop
lock
xchg
mov
inc
mov
lock
gs
cs
loop
pop
pop
mov
inc
sbb
xchg
iret
aas
dec
test
xor
arpl
cmpsl
mov
jbe
cmpsl
mov
out
xor
mov
sbb
sbb
in
js
dec
lret
push
push
frstor
xchg
jb
cwtl
insl
sub
gs
xchg
pusha
andps
jae
sub
and
mov
in
push
negl
push
and
insl
or
sub
movsb
rcl
sub
int
sarl
xchg
mov
scas
int
and
xlat
cmp
inc
mov
push
xor
sub
add
repz
fsub
lcall
jmp
add
mov
dec
push
adc
fwait
dec
mov
mov
xor
aaa
les
movb
sbb
cmpsl
sub
jo
ret
sbb
pop
sbb
je
jnp
mov
pop
sbb
sub
test
sub
out
aam
cmp
xchg
xchg
rolb
loope
nop
aam
mov
cmp
loopne
push
jbe
add
dec
scas
out
popa
jae
sahf
scas
pop
add
fs
fnstsw
xor
mov
ss
mov
sub
in
and
dec
sarb
mov
xchg
and
mov
pushf
mov
and
rorb
sub
repnz
mov
adc
pop
std
jl
xchg
movzbl
ja
jmp
ljmp
sbb
xlat
dec
sbb
mov
pop
jo
lahf
push
and
leave
sbbb
sti
fnstsw
xchg
mov
mov
adc
mov
cmc
or
push
pop
fisubl
sbb
jb
xorb
mov
jo
mov
std
inc
outsl
adc
xor
fmull
or
mov
lods
lods
sbb
es
pop
inc
or
adc
andb
shrl
das
pop
lds
mov
push
shrl
push
mov
xchg
push
or
mov
adc
sarl
push
and
or
sub
xor
push
or
cwtl
dec
fstp
xchg
daa
inc
roll
stc
xchg
test
and
cli
mov
mov
sub
cmp
xchg
jnp
iret
push
push
test
sbbl
mov
stc
in
pop
mov
shl
pop
cltd
mov
sti
fcmovnb
aad
out
mov
mov
adc
pop
mov
cmp
and
mov
push
push
lcall
decl
cmc
out
out
sbbl
ret
pop
dec
fdivrs
cmp
cld
out
adc
mov
mov
lret
rclb
pop
fldcw
aaa
test
lea
cs
ret
pop
mov
add
addl
shl
push
lock
sti
dec
sbb
mov
nop
fcompl
push
fiadds
pop
push
movsb
adc
fbstp
pop
shrl
jo
lcall
adc
ret
pop
mov
repnz
push
and
movsb
sarl
mov
movsb
fildl
fildl
packuswb
and
into
jl
mov
ret
jb
jnp
cs
or
ret
lret
jb
pop
movsl
cmpsb
loope
pop
pop
jb
out
xchg
insl
in
mov
xlat
sbb
subl
pop
in
push
fmuls
sbb
jmp
and
lcall
pop
jb
loopne
loopne
sbb
pop
mov
insb
pop
arpl
loop
inc
lods
and
nop
mov
or
ss
negl
ljmp
xor
in
cmpsb
fcoml
out
jo
sahf
ss
add
mov
pop
shlb
xchg
sbb
in
dec
or
or
or
push
cmpb
push
loopne
cs
jnp
mov
div
xor
dec
aam
in
and
xchg
xchg
ljmp
ret
je
mov
fisttpl
iret
xor
jne
subb
add
sbb
es
pushf
aaa
sbb
les
xor
cmp
dec
enter
mov
mov
popf
aam
mov
sub
out
mov
movsb
ret
aaa
inc
dec
mov
cmc
jl
out
in
or
adc
ja
lds
pop
mov
mov
mov
jmp
mov
inc
cmp
fistpll
pop
fwait
mov
jnp
cmp
inc
pop
movsl
push
mov
addr16
leave
cmp
push
std
gs
scas
js
and
mov
movl
cmp
push
dec
repnz
les
xchg
lock
daa
in
and
imul
stc
arpl
sbb
in
cmovae
jge
and
mov
scas
cmp
mov
out
aas
push
push
jae
mov
adc
jo
out
push
or
add
scas
repz
inc
jb
stc
nop
cmp
setne
ficompl
xor
out
inc
fsts
and
sbb
ljmp
shll
pop
cwtl
cmc
shll
or
imul
inc
stos
shrb
addb
mov
sbb
and
pop
insb
or
loop
mov
ss
push
std
cmp
daa
or
sub
clc
clc
xchg
xlat
pop
in
loope
mov
out
fiadds
inc
inc
pop
lahf
sar
movsl
fwait
test
pminsw
jbe
dec
imul
out
fbstp
rcll
sbb
enter
icebp
add
sbb
sarb
mov
popf
popa
mov
lods
mov
hlt
mov
jne
into
sar
in
xor
scas
cmpsl
gs
add
jns
push
fiaddl
addr16
xchg
fnstsw
inc
cmp
aad
mov
add
jno
ja
pop
dec
add
shll
imul
and
mov
aaa
pop
or
call
andl
mov
subl
adc
mov
fninit
lret
inc
mov
es
stos
mov
test
jb
sub
push
xor
cmp
push
test
sbb
jmp
je
sbb
push
ss
outsb
push
mov
scas
mov
jne
inc
cmp
mov
cmpsb
add
pop
mov
dec
ljmp
and
mov
sbb
enter
adc
or
mov
sti
jp
jl
pop
mov
fiadds
idivb
dec
inc
data16
xchg
outsb
sbb
or
iret
mov
adc
std
cmp
jp
push
leave
pusha
push
pop
iret
jno
je
and
lods
mov
sub
jle
mov
push
pop
pop
pop
enter
mov
or
xchg
mov
lret
das
pop
add
mov
fwait
xor
ja
out
push
pop
es
pusha
sbb
sbb
leave
in
adc
xor
imul
lret
test
gs
enter
sti
mulps
pop
test
ret
and
sbb
movsb
adc
or
scas
aam
cmpl
test
hlt
sbb
iret
cmp
dec
and
pop
xor
cmp
cmc
outsl
cld
test
xor
stos
push
mov
cmp
or
pop
scas
jae
shlb
mov
stc
or
into
stos
pop
or
adc
test
or
adc
jno
clc
ja
jmp
push
enter
mov
mov
mov
jp
cmpsb
ds
pushf
jae
test
pusha
sub
xchg
and
push
cld
mov
push
pop
rorl
imul
or
xor
std
pushf
sub
mov
in
pop
mov
mov
push
or
dec
pop
mov
mov
aaa
xlat
push
or
shll
mov
aas
jmp
icebp
and
out
mov
movsl
xchg
mov
scas
outsb
ljmp
aam
xor
push
mov
test
xor
fsub
fsubrl
mov
inc
ljmp
cmp
das
outsb
mov
popa
or
loope
sti
cwtl
mov
mov
dec
dec
into
push
enter
adc
into
jmp
call
fstpl
xchg
inc
rcrl
adc
xor
movsl
ret
popf
enter
cmpsl
pop
arpl
dec
or
stc
inc
dec
mov
and
sbb
scas
into
fistl
decl
xor
fdiv
push
xchg
cmp
imull
daa
outsb
sub
xchg
cwtl
movb
push
or
jb
xchg
lea
je
sub
push
stos
jmp
cmc
iret
leave
jno
mov
adcl
or
repz
xchg
xchg
int3
inc
push
mov
sahf
push
outsb
sub
dec
dec
jge
mov
scas
lret
sub
adc
test
les
mov
lret
sub
sbb
pop
scas
shl
ljmp
push
faddl
test
sbb
adc
cli
lock
mov
ja
bound
aaa
imul
mov
push
cltd
divl
or
cmp
mov
clc
test
scas
pop
lea
fstps
test
mov
mov
jae
je
or
enter
rorl
xchg
jne
sbb
push
cmp
xor
repz
arpl
inc
sub
push
mov
in
shll
cs
in
adcb
adcb
js
pop
test
mov
and
pop
subb
xor
adc
test
repnz
fdivrs
mov
loope
and
jl
jbe
xor
ljmp
cltd
repz
inc
mov
xor
pop
ret
jge
fneni(8087
fwait
push
mov
jae
arpl
call
popa
mov
cmp
pop
das
xchg
daa
jge
cmpsl
mov
popf
jecxz
in
xor
adc
push
in
mov
xchg
bound
lea
pusha
lahf
jae
imul
aam
cmpsl
sbb
mov
mov
xor
mov
jns
cmpsb
mov
adc
dec
adc
ss
mov
push
cmc
and
nop
or
ficoml
ret
jmp
mov
mov
fyl2x
scas
movsb
inc
int
lea
bound
jecxz
xchg
lret
xchg
sub
xchg
pop
mov
sbb
pop
lea
cli
jno
in
dec
sbb
push
and
lahf
push
mov
dec
xchg
int
test
jecxz
outsb
les
pop
aam
sti
jbe
adc
insl
out
iret
sbb
ljmp
dec
inc
fldcw
push
icebp
iret
jb
ss
inc
and
and
gs
jno
popf
inc
lret
arpl
mov
and
inc
sbb
cltd
cmp
push
mov
push
enter
enter
or
xor
or
movsb
ficompl
outsb
in
pop
xchg
adc
mulb
mov
pop
ja
and
add
jle
jl
dec
cmpsl
stos
int
out
sbbb
imul
nop
push
cmp
loopne
stos
movsb
mov
call
cli
inc
inc
jbe
fldcw
fs
in
mov
xchg
push
adc
dec
and
cs
xor
insl
mov
mov
lret
sub
xor
fs
sub
sub
adc
frstor
outsl
inc
adc
jb
mov
cmc
sar
lock
mov
mov
lret
iret
mov
je
aam
incb
pop
inc
fcoms
mov
or
add
sub
inc
push
ret
hlt
sbb
jge
scas
pop
add
in
repnz
jmp
jno
xchg
int3
scas
mov
imul
cld
inc
in
pop
clc
out
int3
cwtl
push
adc
imul
lods
imul
pop
xor
and
repnz
jo
push
enter
insb
roll
outsl
rol
mov
cmpsb
fidivrl
das
fsub
leave
adc
sbb
testb
imul
push
or
and
ret
and
orb
ljmp
mov
stc
ja
das
scas
sbb
inc
xchg
mov
pop
fldl
shrb
mov
dec
pop
xor
jle
es
push
mov
add
lcall
test
ljmp
ja
mov
or
ret
add
iret
das
pushf
xor
leave
adc
fwait
imul
negl
mov
mov
les
xor
inc
or
ret
test
push
repz
fstp
xchg
jl
outsb
insb
xchg
fistps
dec
loope
fs
mov
add
and
cmp
fwait
jl
inc
faddp
sub
inc
mov
data16
add
aaa
dec
in
pop
into
popa
sbb
cmp
xor
xlat
ja
mov
repnz
bound
loop
sbb
mov
jae
sti
sarl
test
and
data16
pop
out
xchg
cmpsl
js
push
add
iret
jge
mov
jnp
mov
cwtl
sub
add
jmp
fcmovnb
mov
mov
ja
and
lcall
or
in
adc
test
xor
cld
xchg
enter
mov
cmp
dec
mov
dec
and
xor
hlt
lds
push
adc
popa
cmpsl
cld
xchg
lds
add
xchg
inc
mov
jb
mov
adc
popf
jg,pn
mov
and
add
iret
sti
xchg
sbb
test
pop
dec
pop
mov
popa
mov
clc
shlb
ljmp
adc
sub
pop
std
insb
imul
xchg
enter
xchg
dec
add
nop
adc
mov
ss
outsl
cli
cmp
mov
adc
mov
fisubrl
pop
subl
push
cltd
push
mov
sarb
sarb
jno
and
add
pop
fstp
unpckhps
cmp
lahf
loopne,pn
pop
push
pop
mov
xor
ljmp
lret
pop
mov
out
adcl
setno
mov
mov
aam
push
aam
and
dec
mov
push
ds
dec
mov
adc
cmpsb
pop
or
jmp
test
mov
pop
pop
andb
mov
jb
push
daa
fs
movl
xor
and
stos
sbb
cmp
xor
and
pop
leave
mov
push
jg
gs
mov
hlt
inc
xor
pusha
mov
pop
insl
faddp
mov
ljmp
mov
das
jle
or
mov
arpl
sub
pop
cmp
jge
jge
xchg
xor
es
xchg
iret
repz
cli
clc
jg
adc
xor
jne
inc
sbb
icebp
pop
pop
push
scas
pop
mov
sub
ljmp
test
dec
cmpb
push
in
mov
or
mov
rclb
mov
xchg
xchg
and
mov
push
imul
cmp
jne
test
cmp
mov
fisubl
xchg
cmpsb
xorl
imull
jae
jg
cld
fbstp
push
out
in
movsb
xor
test
fistpll
inc
out
cmp
mov
and
push
add
and
xor
les
push
mov
ret
fwait
scas
sbb
mov
insb
lcall
dec
scas
cmp
out
adc
mov
gs
jmp
stos
dec
push
mov
jae
movsl
mov
fdivs
add
pop
pop
outsb
inc
pop
in
scas
mov
inc
jne
cmp
push
mov
insl
imul
mov
sub
sub
or
ja
xchg
adc
lods
dec
lods
lret
ret
cld
insb
addb
and
dec
stc
int
mov
xchg
popa
dec
mov
pushf
jg
xchg
mov
ss
and
addr16
adc
dec
outsl
lahf
pop
lahf
test
das
xlat
xchg
fisttpll
test
movsl
push
mov
data16
mov
jns
test
jo
mov
cmp
jnp
pusha
stos
std
in
test
mov
or
jno
cmp
mov
cld
cmp
cmp
sub
cmp
mov
adc
lea
lret
add
stc
les
insl
enter
in
pop
stc
shlb
test
imul
loopne
daa
sbb
sbb
fcomi
pusha
xchg
shrl
test
fisttpl
cmp
and
add
ficoml
lock
pop
pop
fdivr
test
test
xlat
imul
mov
xchg
mov
and
dec
enter
inc
push
dec
xchg
aas
pop
sub
cmp
jg
cli
ret
fistps
je
cmp
mov
dec
add
sahf
lock
mov
add
pop
outsb
sub
add
xor
enter
push
cmp
test
fstl
loop
push
mov
and
dec
mov
or
ds
negb
mov
xchg
pop
fcoms
jge
cmc
mov
or
sbb
and
aas
je
pop
call
jge
or
out
push
sub
mov
iret
out
jge
out
lods
mov
jns
fisubs
out
jp
lea
inc
mov
jnp
jno
nop
pand
fdivl
stc
std
or
sbb
push
out
iret
bound
lock
inc
jecxz
ds
std
add
frstor
dec
es
scas
mov
dec
and
in
out
jo
add
mov
pop
outsb
pop
nop
sub
sbb
push
cmp
cld
push
in
ret
lods
pop
xor
leave
or
aam
cwtl
or
mov
lods
lds
adc
push
lret
out
hlt
sub
xchg
sbb
push
int
adc
outsl
loope
cmp
lahf
das
cmp
pop
popf
and
shrb
sub
mov
es
iret
or
insb
mov
inc
das
iret
push
jns
sbb
mov
or
je
lea
jno
dec
inc
adc
jnp
and
lock
and
push
jp
addb
jp
sub
or
xor
lret
mov
mov
jg
sahf
les
gs
push
shlb
orb
pusha
subl
out
xchg
iret
push
lods
aam
out
dec
shl
imul
dec
lods
lahf
and
insl
cmp
dec
and
gs
clc
mov
and
std
arpl
pusha
in
mov
sub
xchg
cmc
jne
ret
shrl
das
xor
add
or
jg
and
bound
scas
or
out
xor
fwait
mov
inc
add
dec
movsl
xchg
stos
jno
shll
pop
jge
pop
cmp
mov
fwait
arpl
pushf
jbe
jnp
test
aam
xorl
inc
inc
add
push
psllw
push
orb
xchg
adc
outsl
cmpsb
pop
and
cli
stc
aas
adc
ret
rcrl
jmp
loopne
jbe
mov
push
int
lds
push
arpl
outsl
push
cmpsb
cmovo
mov
or
xor
aas
shrl
mov
outsl
gs
cmp
lcall
out
dec
sub
xchg
test
insl
shr
inc
sub
stos
adc
dec
ret
repz
pop
out
fmull
icebp
pushf
shl
push
mov
pop
testl
je
mov
test
mov
lret
enter
dec
jno
shr
fcmovne
and
cld
loopne
inc
adc
out
pop
imul
sub
or
imul
pop
bound
mov
inc
shlb
sbb
push
cs
in
shrl
cmpb
push
push
inc
xor
sbb
out
imul
mov
xlat
jb
add
adc
fistpl
jnp
stos
fldcw
pop
lods
cwtl
mov
sub
xlat
int3
cmp
push
das
es
add
hlt
in
cmp
lods
or
adc
or
dec
push
inc
lahf
mov
iret
fldcw
pusha
add
sub
mov
loop
cmp
in
xchg
or
lods
and
push
clc
pusha
mov
addr16
push
cmpsb
lods
in
ja
aad
mov
jnp
jo
popa
rcll
lds
sbb
lea
mov
call
xor
add
aad
mov
lock
adc
insb
jo
pop
call
cmp
dec
pop
arpl
sbb
adc
out
sbb
sub
leave
or
iret
int
fidivl
add
cli
and
aam
and
sub
insl
and
and
flds
xchg
stos
in
ret
subl
in
out
cltd
fildl
in
and
xchg
mov
push
jb
xor
pushf
cld
mov
pop
fdivl
inc
lods
pop
jno
dec
cli
outsb
adc
jl
jmp
arpl
jge
leave
mov
sub
push
daa
sub
lods
sub
xchg
and
lahf
xor
dec
subl
push
in
andb
jp
ret
aad
ljmp
mov
mov
fisttpl
dec
leave
xlat
idivb
enter
mov
out
pushf
xchg
and
and
pop
mov
jno
mov
adc
cmc
ss
in
sbb
inc
adc
or
jbe
dec
fcom
popa
incl
out
stos
call
je
enter
call
stos
mov
mov
int3
movsl
mov
push
movsl
gs
cmpsb
or
cmpsl
add
pop
pop
ljmp
cwtl
popa
int
loope
decb
rcll
sub
popf
and
xlat
cmp
subb
inc
or
xorb
cmp
arpl
negl
aas
mov
sub
cli
pop
std
inc
in
cmpsb
push
cmc
adc
frstor
or
sbbb
lods
mov
enter
mov
dec
popf
mov
int3
loopne
cmpsl
rcl
idiv
getsec
test
ret
push
stc
push
mov
and
jbe
mov
cwtl
and
out
popa
pop
push
mov
cld
jge
sbb
ljmp
push
or
xchg
loopne
testl
jns
mov
mov
dec
mov
and
jno
or
ja
cltd
pop
mov
enter
repnz
aad
push
cmc
test
cld
out
push
pop
loope
mov
pop
rorb
insl
addr16
les
outsl
mov
or
and
add
daa
ljmp
mov
or
out
shl
xorl
add
adc
aas
out
shl
xchg
jmp
xchg
out
add
push
sbb
loope,pt
xor
mov
xlat
push
mov
pop
sub
std
add
inc
xor
add
aam
in
jmp
sub
pushf
mov
xor
cli
adc
filds
lock
cmp
cmp
inc
push
fisttpll
cwtl
sub
adc
and
or
cmp
adc
push
call
loope
adc
int3
cmc
and
jae
mov
into
mov
inc
jmp
imul
cli
imul
sbb
iret
add
jb
push
frstor
push
decl
bnd
clc
mov
cmpsl
rorl
shlb
repnz
mov
int3
out
push
pop
jmp
in
ss
sbb
jne
sbb
loopne
add
pop
adc
dec
test
add
dec
xchg
sbb
int
pop
mov
lods
push
and
mov
hlt
jl
mov
jp
sub
in
dec
cli
cmp
mov
inc
popa
cmp
add
or
outsb
sbb
mov
adc
mov
and
sbb
xor
push
pushf
mov
sub
ficompl
ljmp
and
imul
data16
push
rorb
cmp
xchg
dec
dec
std
xchg
fsts
rcr
cmp
add
mov
aad
or
sub
cmp
pusha
add
push
aaa
mov
mov
test
xchg
repnz
sub
rep
inc
cmp
dec
js
iret
pop
daa
ret
pop
shll
pop
pop
adc
pop
rcrb
add
sahf
incb
aad
or
aam
test
lods
xor
sub
stos
dec
fcoms
ljmp
push
push
jnp
mov
subb
push
mov
fisttpl
inc
cmp
xchg
xchg
rol
adc
daa
stc
das
out
rol
call
xor
xlat
mov
ljmp
scas
adc
and
add
outsb
outsb
dec
mov
stos
cmpsb
mov
das
aas
out
jbe
test
add
or
shll
aas
add
lcall
fdivrl
sbb
dec
add
or
cvtpi2ps
cmp
rorl
sahf
xchg
push
fwait
xchg
negl
jae
lods
push
stos
jge
aad
inc
popa
xor
pop
loopne
mov
fs
lds
xchg
ret
test
inc
out
loope
xchg
sub
cmp
dec
je
xchg
cs
fwait
rol
imul
hlt
je
adc
and
mov
sti
xchg
stos
mov
pop
jnp
or
bound
adc
jle
movsl
push
xor
out
rclb
xor
test
or
rcrb
jge
push
jbe
sbbl
rcrl
xor
push
xchg
dec
insb
and
popa
inc
xchg
cli
loopne
xchg
cmc
push
pop
lock
lods
subl
pop
addr16
mov
xor
push
cmp
mov
insl
and
lods
add
mov
ljmp
xchg
cld
lret
push
push
ret
xor
mov
pop
xchg
test
lret
aas
sub
cld
cmc
cmpsl
aas
mov
xor
inc
and
mov
mov
out
into
adc
sbb
rorl
fmuls
jle
or
xchg
sbb
mov
add
jmp
ss
shrb
mov
outsb
sbb
mov
ds
xlat
cmc
jnp
or
outsl
sbb
test
in
std
adc
inc
popa
scas
loope
pop
call
or
push
cwtl
dec
lcall
arpl
in
xchg
andb
add
sbb
dec
mov
push
test
push
jecxz
sbb
jne
push
jge
pop
outsb
fisttps
das
popf
arpl
cmpsl
data16
lock
rcrb
pop
sahf
dec
gs
jns
and
pushf
mov
inc
stc
xlat
adc
jle
mov
mov
add
dec
push
sarb
out
mov
xchg
cmpsl
or
or
adc
je
shl
pop
push
test
pop
adc
fisttpll
xchg
and
clc
lret
lcall
mov
jno
mov
pushf
fwait
mov
xor
idiv
xor
andb
push
sub
jg
das
xchg
popa
pusha
mov
mov
jb
mov
add
jb
repnz
pop
lods
sub
sbb
decl
jmp
adc
or
jae
das
mov
mov
xor
mov
sbb
mov
aam
es
mov
js
mov
das
or
xor
push
ret
rclb
rcr
mov
push
repnz
sbb
lret
jge
loop
mov
adc
xchg
das
fistl
xor
mov
xchg
and
xor
pop
clc
enter
ret
jecxz
push
mov
xor
fisttpll
dec
pop
pop
pop
inc
into
or
push
cmp
pop
cmpsl
pushf
jb
iret
cmp
push
bound
clc
mov
xor
ljmp
loop
and
inc
call
and
mov
mov
fiaddl
or
imul
lret
xor
or
mov
push
xchg
push
outsl
jo
aam
loop
ss
lahf
cmp
addl
and
jmp
out
xor
jg,pt
test
jns
fcoms
test
pop
mov
pushf
mov
nop
push
into
xor
rorb
or
enter
test
outsl
stos
popa
sarb
fcomp
cmpsb
aaa
add
pushf
xchg
xor
jo
repz
mov
cmp
lea
fxch
xchg
insl
lods
imul
loope
adc
push
jp
ss
out
scas
cwtl
cmpsl
mov
mov
jns
inc
orb
pop
xchg
imul
sub
je
adc
mov
mov
mov
cwtl
testl
and
push
inc
icebp
or
sub
mov
bound
push
out
mov
cltd
insl
test
xlat
in
jge
add
pop
and
jecxz
lret
mov
clc
adc
andl
inc
lock
pop
icebp
ds
mov
in
push
outsl
sub
xbegin
loopne
stos
in
movsl
outsb
sub
rclb
inc
ja
icebp
and
push
adc
pop
xchg
lret
mov
cs
or
jp
sbb
vmwrite
add
inc
pop
lds
mov
repnz
mov
adc
das
lret
out
imul
pop
test
rcrb
mov
push
rcll
mov
push
fsubrs
pop
fcomps
add
mov
mov
mov
adc
jnp
fnstsw
xlat
fidivrs
loop
and
jecxz
mov
popf
pop
mov
in
pop
pusha
dec
lock
mov
sbb
lcall
popf
xor
addr16
sub
mov
into
xor
call
push
mov
aaa
and
in
call
lea
push
add
inc
in
add
jle
sbb
repz
int
sbb
imul
inc
dec
push
or
jb
sti
insb
in
aam
jecxz
stc
xchg
xchg
iret
dec
popa
stos
adcl
sbb
dec
jne
cmp
lock
sbb
mov
std
test
fcoml
adc
or
shr
inc
ljmp
sub
pop
push
repnz
daa
sbb
insl
adc
jp
stc
mov
and
into
leave
cmpsl
shl
xor
pop
push
or
mov
xchg
adc
leave
lahf
repz
mov
sbbl
dec
sub
push
pop
sub
cld
shll
jo
cmp
cs
push
inc
shlb
push
sti
xchg
lret
cmp
xor
repz
lret
mov
repnz
dec
int3
jge
subl
out
adc
xor
inc
mov
repz
adc
mov
and
repnz
jmp
xchg
out
xchg
outsl
mov
xchg
pop
stos
pop
fucompp
jne
jg
mov
hlt
loop
pop
mov
sahf
pop
push
lods
pop
ret
fistpll
cmpsl
shr
xor
adc
mov
dec
pop
mov
inc
or
repnz
icebp
das
cmp
adc
mov
imul
cmp
cmp
mov
jge
repz
push
mov
sub
cmp
cltd
jo
cmp
adc
push
cmpsb
mov
cmpsb
out
in
addr16
push
jle
jne
mov
cs
xchg
cmp
in
push
loope
xlat
push
add
popa
jecxz
xcrypt-cfb
cmpsl
arpl
mov
mov
mov
mov
adc
and
cmpsb
mov
sbb
push
jle
std
cmp
xor
out
xor
push
dec
out
hlt
push
inc
pop
inc
and
out
ss
scas
gs
repnz
outsl
cmp
sbb
and
stc
xchg
xor
inc
sahf
add
or
pop
mov
pop
xor
cmp
mov
insl
ss
fcmovne
or
pop
inc
pop
or
ret
adc
push
stc
or
js
outsl
pusha
or
pusha
sarl
inc
test
cli
mov
lahf
lea
jae
inc
jge
pop
imull
int
mov
xor
pop
mov
jge
sbb
push
adc
cmp
call
iret
jecxz
rolb
ljmp
lcall
push
iret
imul
push
jle
push
stos
stos
push
push
jmp
in
lea
pop
addr16
pusha
pop
push
movsb
int
in
les
xchg
sbb
add
in
sti
xor
fstps
shrb
and
pop
pop
arpl
daa
jle
mov
jae
ds
dec
sahf
cmpsl
cli
jmp
leave
mov
pop
insl
push
fs
aas
subl
pop
js
xchg
pop
outsl
mov
sub
xor
pop
and
pop
mov
mov
ljmp
aad
jge
mov
out
sbb
and
imul
dec
rclb
dec
insb
scas
mov
cld
rolb
dec
imul
not
out
in
xor
lea
lock
int
sti
ret
ret
sbb
popa
mov
add
in
bound
sbb
adcl
into
out
cltd
push
xchg
cli
mov
hlt
iret
mov
fcomp
cmp
pop
imul
push
int3
out
cltd
jno
lods
push
push
dec
pop
xor
outsb
pop
sub
daa
insl
pop
mov
inc
je
sbbb
jbe
adc
xchg
test
out
dec
subl
push
cmp
xchg
add
xchg
jl
stos
add
pop
sarl
jp
filds
dec
push
mov
jp
add
xchg
repz
mov
push
dec
dec
push
jb
push
and
in
mov
xor
cs
incb
mov
jmp
push
xor
mov
xor
addr16
enter
lods
or
or
push
stc
cmp
pop
pop
push
sub
shrb
fcmovne
or
jnp
fadd
je
bound
cltd
inc
lods
xchg
xor
jno
lret
in
inc
in
sti
fadds
rcr
dec
xor
cli
adc
jnp
cld
popa
adc
dec
inc
imul
sahf
pop
and
and
cwtl
adc
aad
push
imul
adc
pop
int3
leave
clc
jg
in
sbb
sub
add
mov
fdivl
fmuls
inc
aad
lcall
shlb
out
push
cli
xchg
push
mov
sbbl
or
dec
mov
push
sti
pop
jle
sti
repz
fildl
stc
mov
pop
cmpsb
cli
lods
cltd
jecxz
enter
aad
xlat
mov
repz
fisttpl
adc
lods
adc
aas
sbb
cmp
dec
xor
in
js
push
fisttps
sub
rolb
enter
dec
pop
fmulp
xchg
mov
or
cmp
mov
xchg
and
idiv
ds
sub
ljmp
and
add
shl
push
decb
jle
mov
push
std
sahf
and
or
icebp
rcrl
or
scas
outsb
stc
cwtl
cli
and
mov
aam
sub
inc
mov
mov
es
ret
xchg
adc
rorl
in
ret
jnp
cmc
fimuls
or
or
icebp
cmpsb
shlb
mov
sub
jg
inc
insl
addl
aam
into
and
jno
push
dec
mov
inc
mov
xor
dec
pop
sub
push
cwtl
test
ret
cld
inc
iret
xor
jge
aad
movsl
lret
or
insb
push
mov
add
or
shr
aaa
push
scas
lret
testb
lea
lea
iret
into
sbb
inc
pop
pushf
lahf
cmpsb
sub
xlat
lret
pop
fisttpll
xlat
fwait
int3
scas
gs
pushf
sarb
fcomps
sub
push
out
pop
ss
mov
imul
pop
ds
mov
lods
sub
push
mov
xchg
imul
fwait
add
ljmp
rolb
daa
mov
das
push
xor
int3
dec
imul
dec
clts
cltd
les
or
decb
xchg
daa
and
mov
mov
push
ffree
shll
mov
push
push
pop
pushf
dec
add
ror
cmp
dec
and
stos
mov
xchg
cmp
push
add
stos
xlat
loope
dec
outsl
pop
ret
in
and
or
rorb
sbb
push
jne
nop
stos
cltd
inc
jb
jne
cs
or
add
sbb
push
nop
mov
adc
in
sbb
push
cmp
jg
mov
sub
aaa
lea
mov
mov
pop
xor
sub
jb
lods
xchg
add
mov
cmp
dec
dec
data16
lcall
sbb
in
xchg
inc
mov
lods
xchg
pop
pop
xor
fwait
push
jnp
adc
scas
inc
jnp
jp
jns
lds
push
lahf
test
push
mov
and
icebp
aas
bound
cli
add
addr16
sbb
xchg
inc
test
test
mov
inc
push
sbb
sbb
sbb
ret
push
mov
lds
out
fistps
mov
in
je
sub
add
loopne
mov
mov
stc
loope
cmp
mov
arpl
in
dec
aad
ret
mov
xchg
jbe
xor
or
jno
xlat
sub
fsubrl
leave
loope
lock
idiv
cmc
stos
add
push
sarb
inc
loop
fs
int
lcall
lahf
cmp
xchg
inc
lret
xchg
pusha
push
mov
daa
scas
jmp
inc
dec
mov
cmp
jns
rep
push
aas
rolb
xchg
lds
mov
mov
call
xchg
push
sub
or
movsb
cmp
pop
repnz
adc
sbb
mov
lret
sahf
pop
xlat
push
les
add
push
jle
pop
in
shrb
stc
adc
or
jmp
sub
cs
adc
mov
xchg
xchg
test
orb
arpl
sub
jnp
mov
xchg
inc
mov
pop
pop
scas
mov
in
aad
lret
pop
jmp
jae
xchg
pop
cmp
popf
jle
adc
daa
sbb
dec
ljmp
inc
call
and
adc
mov
push
mov
or
mov
adc
int
addr16
scas
setge
inc
xchg
push
and
cli
jge
int
adc
and
lahf
sub
mov
push
mov
sbb
mov
add
xchg
sbb
repz
icebp
cmp
pop
push
out
cld
adc
xor
aas
fldl
jle
mov
cs
das
jp
leave
addr16
push
imul
pop
push
cltd
lods
popf
aaa
inc
push
adc
lahf
jmp
xorl
inc
movsb
enter
inc
add
sub
xchg
adc
mov
enter
adc
sub
addl
or
and
mov
lods
and
xor
dec
repz
ljmp
shrb
add
or
cmp
mov
sbb
cmp
jge
pop
mov
ret
subb
xchg
push
or
fnstcw
psubusw
cmp
mov
call
in
subl
sbb
into
lock
jno
pop
pop
gs
bound
xchg
fadd
mov
test
sbbb
xchg
sbb
push
pop
stos
and
test
sahf
add
mov
dec
or
jl
pop
mov
dec
mov
push
mov
or
push
addr16
ljmp
ja
fs
fnstcw
add
push
xor
sbb
sub
cltd
xor
cli
leave
xchg
fcoml
es
pushf
mov
in
cs
inc
fldcw
dec
ffreep
mov
call
sbb
bswap
dec
lret
inc
aad
insb
fldt
jmp
shlb
xor
movsl
sahf
fdivs
in
data16
imul
and
mov
jae
inc
pop
or
mov
jl
mov
nopl
cmp
and
ret
push
lock
jmp
ret
outsl
scas
jae
cmp
jne
les
addr16
movsl
push
movsl
mov
sbb
jnp
or
add
imul
insl
popa
decb
daa
pop
test
idiv
pop
pop
pop
add
and
adc
fdivr
mov
xchg
gs
scas
adc
jno
repnz
sti
test
js
mov
ja
sub
xlat
inc
sbb
dec
aas
jo
cmp
mov
lahf
adc
push
rorl
inc
pop
stos
push
sarb
jnp
sbb
jge
ret
dec
cmp
ud2
les
jle
jns
adc
mov
jnp
mov
adc
mov
mov
or
inc
pop
jg
inc
int
aas
add
test
test
cwtl
pop
mov
and
adc
pop
pusha
inc
xor
push
mulb
dec
push
xor
push
mov
nop
aad
lcall
pop
cmpb
mov
pusha
pop
cmp
xor
insb
push
outsb
xchg
in
pushf
push
mov
sub
cmp
ficomps
dec
inc
inc
jo
fnstenv
jp
call
cmp
das
mov
mov
popf
jo
negl
mov
sbb
push
cmp
outsb
test
push
push
pusha
shll
ss
lods
cmp
fisttpll
mov
xor
lods
lret
jne
mov
xor
jbe
dec
jnp,pn
xor
xor
popl
pusha
jno
pushf
mov
loop
imul
out
out
push
cmp
mov
ret
pop
ret
ljmp
test
das
outsb
xchg
outsb
daa
mov
cmp
rorl
popf
roll
popa
loop
shl
scas
out
mov
out
clc
popf
test
shll
arpl
mov
in
dec
lret
xchg
fwait
dec
fnstsw
nop
adc
jle
jmp
data16
pop
mov
daa
popa
push
dec
or
test
movsl
aam
pop
push
mov
dec
dec
or
in
lret
push
xchg
or
mov
or
adc
adc
out
dec
sbb
loop
cmpsb
pop
xor
and
or
dec
repz
gs
jne
inc
es
xor
insb
outsb
add
push
fdivrs
add
inc
mov
je
jl
mov
mov
int3
decb
xchg
xchg
mov
xchg
cmpsl
outsl
jl
fstps
xchg
xchg
out
inc
std
xor
repnz
add
lods
in
rcr
mov
pop
add
leave
cld
add
addr16
ror
pop
repz
mov
or
push
out
adc
iret
ret
mov
cmp
xor
hlt
nop
pusha
push
sahf
sub
sub
loopne
mov
mov
or
pop
inc
and
cmc
jge
adc
dec
mov
iret
cmp
xchg
push
pop
mov
mov
jle
pop
push
enter
out
imul
int3
leave
insl
jl
pop
out
test
div
xchg
popa
and
push
enter
push
popf
xchg
out
pop
pusha
push
inc
push
stos
pop
cmp
fdivrs
mov
aas
dec
outsb
push
and
gs
pop
daa
push
jmp
cmpb
xchg
cltd
adc
inc
cltd
mov
cmp
loope
int
cmpsb
outsl
xor
jp
rcrb
andb
data16
xchg
sub
push
inc
hlt
or
aam
stc
mov
rolb
dec
xor
je
pop
jmp
insl
fdivl
enter
ds
dec
js
mov
sbb
or
aaa
mov
mov
iret
insl
pop
fldt
out
cmp
cs
jnp
sti
add
sbb
adc
aam
jg
jl
jp
lods
jge
dec
lods
mov
or
mov
outsb
jle
pushf
pushf
xor
sbb
sub
mov
xor
lock
cmpsl
xlat
andnps
adc
shlb
orb
in
push
je
mov
loop
mov
lcall
mov
pop
gs
imul
mov
push
xchg
lods
adc
jno
movsb
dec
loopne
sub
cltd
pop
shlb
gs
into
pushf
pop
lea
cld
cmp
mov
push
ret
dec
into
enter
sub
lods
and
cmc
pop
xchg
out
sub
mov
cmp
inc
pop
mov
mov
shlb
aaa
data16
pusha
add
inc
out
shrl
adc
ljmp
ret
add
cwtl
dec
inc
std
pop
mov
into
and
shrl
sub
in
fnstsw
popf
xor
push
fucomp
inc
sub
lds
leave
pushw
loop
inc
or
dec
sbb
scas
pop
pusha
test
mov
xchg
bound
cli
shl
and
pop
ss
aad
jp
push
or
push
rorl
mov
or
lods
cmp
mov
in
addr16
sub
xchg
and
lret
test
out
es
cmp
inc
in
xor
pop
jecxz
test
cmp
or
data16
dec
ret
sub
int3
nop
mov
or
dec
cld
jmp
inc
cmpl
xor
inc
gs
leave
sub
loope
frstor
outsb
call
ljmp
sub
movl
negb
jecxz
or
inc
jno
and
add
mov
fs
ret
cmp
test
sarl
pop
cmp
xchg
addl
inc
icebp
adc
bound
cmp
add
arpl
jle
aaa
mov
repnz
cltd
movsl
sub
cmpsl
jecxz
jbe
jl
rolb
xor
mov
lods
inc
pop
jnp
rolb
push
mov
or
or
out
pop
or
outsl
pop
sbb
les
mov
rol
and
daa
add
or
or
cmp
mov
repz
mov
xor
stos
xor
movsl
xchg
popf
cmp
sbb
jns
popa
dec
scas
std
popa
push
xor
data16
out
jno
and
adc
imul
inc
xor
mov
push
xor
aad
xchg
or
jns
cmp
sbbl
inc
mov
and
mov
adc
jecxz
sti
or
loop
aad
hlt
jno
xchg
sbb
shl
adc
dec
jo
sahf
int
mov
icebp
out
mov
push
add
sub
pop
mov
sub
popl
sbb
insb
xchg
cwtl
push
xor
sub
mov
into
data16
mov
divl
mov
jne
test
cmp
adc
imulb
and
test
cmp
neg
adc
mov
lret
inc
scas
in
rclb
in
inc
shlb
push
cmc
ds
ss
and
jecxz
pop
nop
test
dec
sub
cli
sbbl
in
and
stc
lods
pop
push
xor
pop
mov
arpl
pop
fs
flds
or
jmp
sarl
sarl
sub
mov
cmp
mov
or
push
inc
adcl
adc
mov
jne
push
push
sub
iret
fdivrs
lcall
dec
or
jge
into
push
mov
adc
sbbl
pop
xchg
sbb
inc
outsl
loope
or
ret
pop
test
cmp
mov
std
vcmpss
cmpb
pop
imul
push
outsb
popf
jbe
lret
mov
jl,pt
push
lret
xchg
iret
arpl
lahf
das
loop
push
or
xchg
icebp
test
sti
push
dec
out
jp
pop
lret
mov
dec
in
or
and
jl
dec
push
push
mov
inc
mov
cmpsb
or
sarb
repnz
in
pop
jecxz
push
clc
push
or
pusha
popf
mov
sbb
movb
mov
movsb
inc
cmpsb
add
push
push
cld
inc
aam
add
xlat
or
xchg
pop
lahf
loopne
imul
sub
mov
out
popf
xchg
dec
sub
cltd
mov
sarb
or
data16
sub
sbb
leave
clc
xchg
ds
stc
inc
les
cmpsl
mov
data16
mov
test
lods
orl
xchg
pop
aam
sbb
dec
sahf
push
fwait
push
sti
cld
jecxz
adc
nop
jae
and
inc
and
add
jno
cld
ljmp
push
mov
jns
fwait
mov
jo
add
sahf
pop
push
xchg
insl
inc
daa
jecxz
iret
popf
push
mov
push
ret
push
mov
mov
popf
jbe
mov
add
shrb
inc
outsl
mov
xor
lds
dec
mov
sbb
lret
mov
cmp
aam
xor
push
enter
xor
sbb
inc
add
xchg
xchg
mov
add
cmp
sbb
pop
push
push
add
sub
lods
test
dec
aas
insl
dec
sub
sbb
pop
faddl
bound
mov
mov
push
rorl
sub
mov
jp
int3
xor
sub
cltd
mov
in
in
cmp
adc
xchg
push
cmp
repz
mov
mov
in
movsl
sub
jmp
sbb
xor
push
test
and
pop
adc
sub
jge
or
addr16
gs
mov
stc
or
adc
int
pop
add
jne
loop
push
lret
jo
out
pop
push
mov
bound
ficomps
cld
push
int
nop
outsb
adc
xor
add
int3
jno
movsl
pop
test
pop
jmp
adc
imul
mov
test
inc
roll
push
popa
call
mov
mov
xchg
adc
pop
dec
insl
dec
jns
mov
mov
xchg
lret
data16
sbb
dec
inc
sbb
fidivrs
adc
out
cmp
ljmp
push
ja
push
ret
scas
mov
loopne
sbb
mov
push
mov
push
shlb
jg
add
negb
rolb
xchg
sbb
pop
xchg
mov
xchg
inc
xor
dec
jp
sub
ret
iret
popf
popf
insl
xchg
push
aas
je
sbb
sub
inc
xor
test
jb
jnp
mov
iret
add
and
sbb
xor
push
adc
fiadds
sbb
xchg
call
push
adc
lock
test
test
mov
xor
scas
jmp
test
push
and
dec
in
pop
jecxz
cmpsl
adcb
in
lock
sbb
sub
lds
test
fs
and
sarl
loop
neg
inc
pop
ret
movsb
jg
out
inc
cmp
pop
push
add
shr
punpckldq
add
adc
or
lea
scas
mov
outsb
pop
cmpsl
roll
jmp
movsb
pop
fs
out
insb
adc
pop
jge
das
push
outsb
decl
arpl
fcomi
push
sarl
pop
xor
pushf
mull
push
repz
cltd
ret
xchg
mov
fcomip
ret
sti
lods
xor
nop
jecxz
and
sub
pop
xchg
loope
add
gs
sub
and
cmc
ret
mov
push
xor
jmp
cltd
mov
jp
ret
ja
sbb
add
mov
loopne
das
cmp
mov
jnp
inc
js
dec
sarb
xchg
ja
mov
cwtl
notl
pop
cltd
xor
push
test
mov
popa
and
in
sbb
rol
jns
push
jne
lds
add
xorb
test
jg
sarb
push
movsl
enter
repnz
sub
adc
sub
arpl
aad
jl
hlt
aaa
xchg
inc
es
loop
sbb
and
fistps
fs
outsl
dec
jecxz
in
cmc
repz
insb
mov
loopne
jl
mov
dec
in
subb
inc
fcomi
cmp
ret
jnp
push
mov
rcrl
andb
fnsave
fdivrs
dec
gs
add
push
loop
or
cmpb
push
out
lahf
and
push
pop
cmp
adc
mov
das
pop
loope
pop
movsl
xor
fwait
loopne
or
jnp
pop
xchg
jmp
and
insb
add
inc
and
in
pusha
cltd
xor
cmp
sbb
xchg
sub
or
pop
jne
addr16
scas
adc
pop
xor
inc
arpl
sahf
mov
in
or
xchg
test
adc
ficomps
sub
stos
es
dec
jns
rep
mov
popf
mov
xchg
pop
lret
movsb
out
push
xchg
test
lret
scas
mov
inc
mov
sub
into
xchg
jbe
out
adc
pop
mov
ja
adc
pop
mov
xor
idivl
fs
xchg
jg
cmc
jo
add
test
dec
push
and
add
cli
ficoml
inc
gs
xchg
out
into
shlb
add
inc
xchg
pop
xchg
mov
adc
sbb
leave
cmpsl
mov
dec
jle
pop
mov
cmpsb
mov
jle
push
test
pop
rcrl
xor
pop
adc
mov
adc
jnp
sub
stos
sub
aaa
adc
pop
mov
ss
in
xchg
dec
cld
add
call
cwtl
lcall
dec
lock
call
rorb
jp
mov
popf
arpl
mov
mulb
test
jb
jmp
rorl
testb
push
dec
and
gs
icebp
addr16
sub
js
je
sub
ss
mov
pop
mov
cmp
aaa
mov
call
out
and
fsubrl
in
add
into
cmpsl
idivl
inc
cmpsb
mov
pop
ret
aas
push
sub
pop
cwtl
mov
dec
pop
xchg
aad
xor
ss
push
jge
or
mov
out
pushf
xchg
jp
sbb
loope
andb
clc
lea
inc
sub
std
xor
cs
mov
sub
jmp
xchg
push
pop
xor
into
fadds
std
or
je
pop
testl
fwait
push
lds
push
mov
in
call
les
addr16
sub
aas
dec
and
pop
stos
mov
xor
pop
cld
and
xor
subl
adc
xchg
push
cltd
adc
lcall
lret
xor
mov
dec
in
adc
dec
inc
imul
out
lods
sbb
movsl
push
lahf
add
and
jecxz
icebp
out
insb
mov
push
icebp
scas
jbe
push
mov
popf
jnp
imul
adc
xchg
dec
mov
fsubr
dec
arpl
test
std
les
jo
cmp
in
mov
add
xchg
in
leave
pop
adcb
rcrb
repnz
jp
xor
inc
xor
xor
mov
pop
pusha
cmp
cmp
stos
aam
lods
adcb
aam
arpl
shll
xchg
dec
pusha
test
mov
inc
fsubs
mov
scas
cmpsb
or
add
mov
jmp
mov
bound
jmp
aas
jecxz
hlt
mov
out
mov
mov
lods
sub
sahf
or
fcmovb
xchg
sbb
cli
stos
sti
js
lock
ds
ds
scas
stos
std
stos
jge
xor
and
and
mov
lret
jb
movsl
pop
lret
xor
clc
das
hlt
push
out
inc
ds
stc
jg
mov
mov
sub
stc
mov
orb
fldcw
data16
cmpsb
xchg
and
pop
dec
xor
push
adcl
iret
inc
cld
mov
adc
pushf
mov
shrb
dec
xor
push
pushf
pop
push
or
mov
movl
aam
jnp
dec
in
cmc
mov
or
cld
fdivrs
mov
mov
adcb
push
xchg
decb
sbb
sbb
test
or
mov
mov
iret
mov
jbe
xor
in
movsb
xor
and
pop
pop
hlt
pop
pop
cmp
jl
sbb
scas
xchg
xchg
int
mov
out
fistps
sbb
es
rcll
jle
leave
mov
push
icebp
pop
in
and
dec
into
ss
xor
sahf
push
les
pminsw
mov
cmp
push
or
stos
jbe
out
inc
data16
or
dec
jmp
push
lods
repz
cmpsb
in
add
out
int
out
mov
xchg
notb
stos
lds
jno
fcoml
repz
lds
lcall
add
scas
xchg
xor
xor
stos
add
aad
movsb
in
mov
push
call
pop
lahf
jl
mov
pop
xchg
jge
sbb
lods
push
and
outsb
bound
xchg
lcall
outsb
std
stc
mov
ljmp
xor
and
scas
xchg
adc
pop
mov
add
xchg
into
test
mov
outsl
lods
js
loop
inc
jmp
xchg
or
shlb
push
es
sub
clc
out
xchg
jae
nop
mov
decb
sub
pop
cltd
je
mov
adc
xor
loop
xlat
xlat
arpl
inc
or
mov
xchg
mov
xor
xor
mov
cwtl
mov
insb
xchg
inc
xchg
jecxz
imul
dec
xlat
push
div
mov
daa
push
mov
es
jge
sbb
pusha
lcall
xchg
lret
and
dec
sub
aad
sub
add
movsb
dec
scas
inc
mov
test
stc
mov
mov
sub
pop
lcall
cmp
xchg
es
ret
or
bound
cmp
mov
xor
cltd
xchg
adc
in
enter
loopne
aad
lcall
inc
inc
ficomps
lods
sbb
cmp
shlb
or
add
jno
add
lds
xchg
pop
pop
xchg
inc
sarb
pmaxsw
int
pop
xchg
shl
and
adc
add
add
dec
and
add
xchg
dec
push
cwtl
pusha
add
repnz
mov
mov
out
adc
cltd
dec
and
outsb
data16
sbb
jp
push
jmp
movb
int3
cmpsb
lret
dec
mov
rol
cmp
in
data16
push
test
mov
mov
into
sub
jne
jae
repnz
ja
cmc
pop
sti
jnp
enter
xchg
mov
stos
and
out
sub
adc
stos
lahf
sub
pop
xchg
mov
clc
xchg
or
inc
jmp
jle
sub
mov
adc
mov
mov
jge
lahf
lods
mov
mov
mov
imull
sub
mov
xor
icebp
mov
push
adc
icebp
add
dec
shlb
mov
sub
insl
adc
pop
mov
data16
test
test
loope
dec
sti
repz
psubsw
mov
push
jae
outsb
inc
into
xchg
int3
xchg
cmp
cs
loope
sub
cltd
movsl
pop
imul
les
iret
data16
mov
movsb
mov
mov
pop
xor
test
aaa
stc
or
dec
push
and
ret
cmp
iret
mov
push
push
movsb
sbb
mov
adc
jp
mov
pop
mov
sub
add
or
sahf
push
insb
xchg
imul
push
sub
push
pusha
xor
push
sti
lcall
sub
incl
mov
mov
imul
pop
xor
popf
jno
add
jbe
popa
sub
inc
mov
adc
cmp
xor
pushf
lock
pop
xor
shll
pop
insl
sub
lods
pusha
and
test
adc
cmp
mov
add
pop
in
jle
ficomps
jg
or
xor
loopne
mov
xchg
test
sub
sub
cltd
pop
push
and
leave
int
stos
ret
frstor
negl
push
xchg
mov
stos
mov
push
and
xchg
sub
stos
ds
xchg
inc
and
inc
in
mull
test
in
sub
rcll
adc
mov
xor
mov
cmp
cmp
dec
mov
mov
dec
inc
jmp
adc
cli
pop
ret
lahf
sub
lret
adcl
icebp
add
jle
repnz
mov
loopne
fsubl
inc
jne
mov
out
xor
jne
popa
jge
ficoms
pop
loope
cwtl
repz
call
ja
or
mov
add
out
xor
xchg
add
stos
push
cltd
sub
ljmp
jns
or
ljmp
stc
push
shr
out
jns
add
jns
jmp
lret
pop
stos
test
in
lods
pop
xor
jno
data16
add
pop
mov
mov
movsl
fs
fmulp
push
mov
dec
loope
pop
rclb
push
sbb
xchg
iret
pop
ljmp
cmpsl
xchg
jp
xor
punpckhdq
dec
mov
adc
lea
sub
xor
xor
sub
mov
and
add
cmp
stos
imul
ja
sub
es
inc
test
xchg
mov
leave
or
std
mov
adc
in
roll
cld
jl
cmp
sbb
xlat
fnsave
ret
mov
loopne
imul
rcrb
cmpsb
cs
push
push
mov
xchg
out
fs
jb
dec
adc
daa
jmp
scas
and
push
sbb
pop
aaa
stos
pop
ds
xor
lahf
out
int
movsl
sbb
mov
mov
mov
push
pop
clc
push
pslld
xchg
or
clc
push
or
cmp
pop
and
inc
test
mov
fisttps
push
mov
sbb
pop
inc
test
in
cwtl
jne
sbb
bnd
cltd
push
incl
adc
inc
aam
jnp
xchg
mov
js
pop
push
mov
xor
pusha
ficompl
pop
movsb
add
addr16
call
popl
data16
fmul
ja
mov
mov
push
cmp
sti
xor
or
sub
fisubl
mov
and
push
xchg
clc
sbb
js
dec
addl
dec
mov
xchg
shlb
clc
or
outsl
fildl
into
mov
cld
or
push
sub
jmp
popa
xor
mov
shlb
and
mov
mov
aad
dec
aad
mov
mov
mov
ja
negl
sbb
push
data16
aaa
lret
lea
out
xlat
dec
inc
pop
jnp
ret
ror
cltd
adc
mov
mov
sti
sbbb
xchg
rol
cmp
pop
xor
jae
outsl
add
push
test
test
loop
movsl
out
jge
dec
loopne
std
stc
repz
incl
pushf
rclb
in
dec
fldcw
adc
and
cmp
pop
xor
int
pop
push
incl
push
adc
outsl
add
aam
mov
dec
sbb
add
test
dec
pushf
fwait
mov
and
scas
pop
mov
mov
sub
rcrl
adc
bound
pop
dec
sub
imul
cmc
sub
aad
ljmp
sub
or
stc
xchg
pushl
in
inc
rcll
adc
xor
addw
fildl
inc
pop
rcl
fstl
movsl
ss
cmovb
cli
jno
xchg
lock
in
inc
dec
xchg
push
xchg
out
jp
fdivrl
mov
push
or
inc
aam
adc
pop
hlt
cltd
dec
aad
sub
push
leave
enter
pop
cmp
lret
out
add
or
in
mov
xchg
popa
sbb
sub
stos
daa
or
cwtl
ds
cld
shlb
dec
push
scas
cltd
mov
jbe
sub
push
mov
inc
xlat
xlat
and
push
stos
push
add
lret
popl
les
sub
jge
je
add
dec
in
je
and
cmp
push
inc
cwtl
aad
sub
mov
out
mov
jb
xchg
out
or
lcall
push
jl
bound
or
cmp
fimuls
in
daa
sbb
push
mov
adc
jp
sbb
or
jnp
das
pusha
add
sarb
lret
loop
cmp
out
stc
out
fisubrs
mov
jmp
je
shr
mov
pop
mov
imul
pop
push
inc
call
pop
push
daa
cmp
adc
sub
rcrl
cld
inc
pop
pop
sub
pop
xor
and
sub
scas
or
xchg
inc
jp
insl
push
lods
aam
push
movsl
sbb
push
test
insb
push
je
xor
dec
sbb
repz
pop
jne
out
push
outsb
cmc
xchg
xchg
fstl
mov
and
out
xchg
sbb
pop
or
cmpsb
lods
jl
test
inc
movb
call
mov
out
insb
arpl
outsb
out
mov
sahf
imulb
sbb
pop
inc
mov
stos
push
adc
ljmp
scas
jle
mov
push
mov
mov
outsb
or
fiaddl
inc
push
xchg
rcl
call
loopne
into
movsb
cmp
dec
icebp
les
enter
and
jmp
mov
aam
mov
testb
mov
outsb
test
push
xor
ficoms
jo
clc
inc
iret
mov
inc
or
push
and
sub
fnstcw
pop
ja
fcoms
call
std
add
clc
dec
sti
mov
int
sbb
stos
lahf
and
dec
xor
mov
fistpl
data16
sti
lcall
add
dec
cwtl
push
dec
adc
popa
dec
adc
scas
sbb
in
test
fcompl
push
mov
adc
adc
or
push
xchg
sbb
and
and
jb
inc
test
lret
push
and
idivb
xor
xchg
cmc
pop
mov
rorb
pop
int
push
mov
lock
test
cmc
mov
lods
rep
outsl
or
loope
out
mov
add
lahf
test
lds
or
pop
fldcw
xchg
adc
pop
out
inc
add
hlt
test
cmc
push
inc
fsubrl
cmp
and
xorl
push
xchg
sbb
adc
popa
test
sti
pop
fs
cmp
mov
sub
imul
test
jo
and
sub
pop
xor
aaa
add
shr
rol
pop
pop
push
cltd
loope
and
jnp
jno
jl
jno
cltd
mov
repz
mov
clc
out
into
jno
or
add
or
push
xchg
fnstsw
aad
cmc
mov
pusha
ja
fnstcw
dec
movsl
das
fdivl
push
shll
sbbl
dec
pop
fisttpll
xchg
sbb
cmpsl
pop
jp
pop
aad
mov
lcall
icebp
xchg
pop
push
cmpsl
mov
lock
fincstp
push
lahf
adc
mov
arpl
xchg
push
cs
mov
mov
addr16
inc
push
es
lret
cmp
xchg
mov
add
repz
mov
rorb
pop
enter
sub
sbb
popa
mov
dec
lods
dec
inc
aad
xor
mov
push
std
hlt
jo
xchg
sar
jge
loopne
jae
pop
push
clc
test
mov
test
lahf
js
jecxz
icebp
cs
mov
mov
cltd
mov
lock
mov
mov
stos
es
sub
dec
and
dec
aam
inc
dec
test
mov
stc
in
xor
loop
sub
mov
ljmp
loope
popa
fmull
sub
test
out
outsb
idiv
mul
mov
stc
lods
repz
sbb
cmp
xor
frstor
mov
inc
idiv
dec
mov
mov
pop
sub
and
mov
xor
mov
nop
rcll
int
out
mov
push
xchg
data16
cli
pop
mov
jne
scas
xchg
outsl
sub
cli
mov
das
inc
push
out
lret
xor
in
decb
sub
mov
or
sub
movsb
pushf
out
lds
icebp
loopne
push
mov
fstp
or
push
fdivl
inc
mov
and
mov
fiadds
fs
into
adc
fs
aad
int
out
gs
adc
inc
repnz
iret
sbbb
lods
loopne
lahf
imulb
xor
adc
aas
gs
lret
mov
push
insb
pop
ljmp
pop
and
aaa
imul
lods
test
loopne
push
xor
lcall
mov
fidivrs
test
rorb
popf
lds
jae
inc
mov
push
mulb
xor
or
shl
aam
inc
bnd
lahf
lret
js
outsl
loop
pop
sub
xchg
iret
xor
mov
push
lcall
or
add
jg
xchg
arpl
adc
repz
jb
fbstp
mov
mov
dec
loop
adc
pop
sbb
sub
sbb
push
cmc
inc
mov
ret
fcompl
lods
sbb
mov
sbb
and
mov
shll
fwait
pop
cs
push
sub
hlt
pop
repnz
cmp
mov
mov
out
push
outsb
mov
sub
sbb
das
mov
xor
movsb
adcl
not
xchg
jae
sbb
push
mov
mov
out
lea
push
test
clc
xchg
std
or
and
call
inc
ljmp
popa
loope
pop
and
mov
insl
mov
inc
es
xchg
xor
in
fsubrp
sub
push
movsl
les
push
fdivl
push
adc
mov
ss
inc
ret
mov
pop
scas
jp
lods
imull
dec
jle
ljmp
lret
rcrb
mov
lcall
and
xor
cld
dec
out
mov
aad
popa
in
out
sub
mov
mov
pop
jl
rclb
add
call
leave
jno
mov
fildl
mov
push
popf
aas
jle
xor
inc
mov
fisttpl
and
sbb
rcrb
cli
leave
xor
sub
cli
or
cmpsb
xchg
clc
je
mov
hlt
stos
cmc
out
cmpsb
add
int
mov
add
sbb
ss
das
loope
bound
pusha
cmp
ss
cmp
inc
cmpb
inc
lret
test
loopne
push
xor
cli
test
loope
inc
mov
repz
push
xor
loop
mov
mov
lods
push
push
cmp
jnp
enter
xchg
fstps
int3
push
dec
mov
rclb
add
fbstp
inc
dec
jmp
xor
fs
in
add
dec
in
enter
jnp
add
cld
insb
push
cmp
add
loop
rol
lret
cmc
popa
add
mov
clc
and
mov
sbbl
fbstp
push
mov
outsb
inc
cmc
or
lcall
mov
fistps
cld
sbb
int
ficomps
pop
inc
iret
lret
add
das
loopne
push
xlat
mov
xchg
add
outsl
int
sub
jp,pn
adc
push
mov
lea
xchg
loopne
cmp
fwait
xchg
lods
adc
mov
sti
les
xchg
imul
addr16
jle
shll
push
xlat
adc
adc
or
inc
jnp
ja
push
xlat
outsb
inc
sub
lock
out
xchg
jo
jb
movsb
dec
rcll
std
mov
dec
jg
mov
mov
mov
out
iret
pusha
jns
ljmp
jp
pop
js
cmpsb
idivl
mov
mov
cmpsl
pop
xor
xchg
add
insl
sbb
jns
xorl
bound
mov
sahf
and
fldl
ds
sbbb
repz
ss
sub
scas
xlat
mov
jmp
cmp
ljmp
mov
mov
loope
bound
add
std
in
or
push
sbb
popf
lods
into
mov
int
push
mov
int
cmp
xor
test
xchg
inc
movsl
mov
jnp
push
nop
jbe
sub
les
divl
test
push
lret
ret
inc
test
addr16
inc
std
arpl
cs
cmpsb
or
sbb
xchg
sbb
cmp
lret
jge
insl
sub
nop
sahf
dec
repnz
iret
orb
arpl
mov
xchg
jp
xor
mov
jnp
ret
in
sbb
xor
out
sbb
pop
push
jecxz
inc
mov
mov
xchg
dec
jecxz
push
les
lahf
int3
bound
dec
mov
mov
bound
cmp
inc
jno
sbb
and
out
jmp
and
or
dec
pop
popf
jbe
jae
aas
jecxz
sub
rorl
or
clc
dec
push
std
adc
push
aam
lea
pushf
xchg
sub
mov
add
cmc
scas
out
jge
mov
adc
faddp
push
add
adc
or
int
std
ja
cmc
xor
jle
scas
enter
add
cmp
sarl
scas
or
push
cmpsb
push
roll
fcoml
pop
and
sarl
jbe
fimuls
mov
mov
fimull
lea
xchg
mov
mov
lea
sub
mov
sbb
loopne
out
and
and
xchg
xor
in
inc
sarl
int3
ret
add
and
das
mov
sbb
repnz
inc
in
jne
in
inc
aaa
or
iret
inc
mov
test
out
gs
int3
xchg
sbb
das
ret
cli
cld
inc
cs
arpl
fwait
in
add
lret
xor
daa
imul
xor
dec
xchg
outsb
popa
imul
int
mov
repnz
lock
xlat
popa
lret
cmp
push
dec
das
in
inc
and
std
sahf
loop
sbb
enter
repz
in
pop
sarl
cmc
mov
push
jmp
pop
test
dec
pop
and
mov
add
adc
jae
adc
mov
stos
outsb
dec
fildl
mov
test
arpl
jnp
xor
push
mov
mov
pop
pop
mov
scas
dec
popa
push
fcmovbe
out
lea
mov
daa
pop
sub
shrb
pop
push
and
inc
out
add
sub
lea
cmp
mov
pop
sahf
dec
pusha
push
mov
adc
bound
lods
push
rcr
push
loop
sub
push
and
inc
mov
add
jge
inc
cmp
movsl
and
sbb
arpl
test
push
xchg
pop
lahf
xor
cs
cmc
fwait
xor
sahf
mov
mul
sub
sbb
repnz
cld
pop
les
jmp
scas
inc
inc
pop
pop
sti
mov
in
push
cmc
fst
out
or
mov
aaa
int
scas
stc
data16
cmp
out
insb
cmpl
popf
shl
xor
sub
lods
dec
xor
push
jg
mov
out
loope
mov
mov
data16
cmp
sub
cld
test
cwtl
push
lahf
xor
aaa
xchg
pop
sbb
and
outsb
iret
push
and
and
xchg
mov
mov
out
mov
popa
ds
fisubrs
dec
jno
sub
imul
neg
dec
mov
je
push
sub
lahf
jo
xchg
mov
or
negl
xchg
fiadds
inc
xchg
jae
cmp
jne
mov
push
sbbl
or
inc
cmc
in
mov
mov
notl
xlat
fsubrs
pop
fldt
xor
pop
jg
push
sar
push
das
ret
jl
pop
test
addl
inc
xchg
lock
ja
je
xchg
jp
dec
cs
shr
adc
and
push
pop
dec
inc
shlb
sti
ss
cmp
inc
mov
pop
mov
icebp
cmc
mov
inc
jge
or
lods
mov
int3
mov
mov
jnp
pop
cmp
mov
push
lds
mov
cmp
dec
sbbb
fnsave
outsb
enter
orb
sub
adc
decl
inc
iret
inc
out
and
fdivrl
dec
loope
cmpsb
sarl
stos
xchg
stc
cmpsb
lods
filds
xor
xor
push
mov
stos
adc
int
clc
adc
xlat
gs
xor
shr
filds
fwait
in
xchg
dec
mov
push
inc
arpl
pop
mov
fcom
repnz
sub
int
dec
push
hlt
cmc
dec
das
xorb
sarl
das
fsts
in
jb
std
in
movsl
xor
add
jb
data16
dec
sub
gs
outsb
je
or
sub
xchg
inc
icebp
and
dec
inc
stc
ret
dec
scas
dec
popf
dec
movsb
cwtl
std
jge
mov
xor
cmovbe
push
pop
xor
mov
outsb
fidivrs
jecxz
ja
cmpsb
cmpl
cmp
push
push
add
xchg
inc
sbbl
cli
mov
rcrb
push
add
mov
movb
sub
sub
loopne
add
out
jl
lret
mov
adc
xor
cmp
dec
mov
decb
data16
dec
push
imul
in
mov
push
sub
loope
inc
xor
lahf
adcb
daa
es
push
pop
icebp
std
sbb
xor
insb
testb
dec
jmp
xor
sbb
add
or
jbe
in
loop
into
imul
sbb
jbe
cmp
or
cmp
les
xlat
sti
mov
rclb
mov
ljmp
jbe
rclb
or
xor
push
or
or
xchg
and
jne
add
loopne
out
aam
nop
or
inc
xlat
adc
icebp
mov
inc
xchg
repnz
je
or
mov
sbb
pop
in
pop
xlat
leave
stc
push
or
adc
loopne
cs
aam
mov
sub
mov
dec
out
lcall
jnp
add
adc
fbld
cmp
mov
test
push
into
fcompl
clc
arpl
emms
sub
and
lret
nop
call
bound
pop
dec
cmp
adc
dec
es
sbb
dec
ljmp
pop
jmp
add
cmp
sub
pusha
hlt
xchg
pop
pop
iret
rclb
pushf
and
loope
jae
dec
insl
push
iret
jmp
arpl
in
adc
and
dec
pop
rcr
or
pop
and
pop
sbb
xor
imul
jno
xchg
and
dec
xchg
cmpsl
add
addr16
subb
cmp
aas
add
jne
adc
rcrb
xor
in
pop
stos
movsb
data16
inc
mov
loope
jg
sub
push
leave
ret
sbb
cmpsl
jp
out
lea
sub
add
and
aad
data16
sbb
test
push
mov
shl
and
adc
loop
adcl
xchg
xchg
icebp
pop
xor
inc
repnz
mov
adc
xchg
loop
leave
mov
je
jp
fs
ret
mov
jns
ljmp
push
aam
mov
dec
mov
mov
les
lods
adc
sub
divb
enter
xchg
hlt
outsb
addb
push
add
jl
mov
jge
mov
cmpsb
and
jnp
sub
jnp
stos
andl
inc
add
mov
add
cwtl
jb
push
sbb
adc
cmp
popa
push
insl
dec
push
sub
test
and
out
lret
call
add
jno
dec
cwtl
push
aam
in
rcll
lret
iret
ljmp
push
push
test
shl
loop
pushf
xchg
mov
xor
pushf
into
or
data16
xorb
aam
xchg
shrl
scas
out
mov
mov
cmpsb
mov
sub
jl
mov
and
fs
push
mov
jl
int
mov
cs
mov
test
pusha
push
mov
dec
jl
js
outsb
sbb
xchg
popa
mov
jcxz
mov
mov
ja
mov
addb
aam
push
xor
aad
test
jl
outsl
sub
sub
rcrb
out
test
xchg
je
fisttpl
iret
inc
and
mov
fs
gs
adc
and
pop
das
or
push
aad
mov
out
jne
dec
int
sbb
jge
inc
mov
fisttpl
push
push
sub
inc
ret
mov
mov
lret
sub
mov
xlat
mov
imul
sub
and
popf
lods
lods
xor
nop
inc
fstps
mov
jb
cmc
pusha
push
pop
add
lods
mov
lods
mov
mov
jne
pop
xor
inc
sub
jb
std
xchg
pop
push
arpl
jb,pt
pop
pop
insb
dec
cs
add
or
push
out
es
test
jae,pt
in
add
in
lahf
movsb
jb
jns
pop
in
das
sbb
mov
xor
mov
addr16
push
mov
xorb
in
mov
jb
out
cmpsb
sub
imul
mov
roll
ds
je
mov
scas
cld
hlt
add
scas
scas
rcr
or
out
or
cmp
mov
or
popa
dec
test
and
dec
std
pop
fimull
imul
in
mov
ficoml
sub
movsb
nop
xlat
pop
mov
jnp
inc
pushf
push
cmp
adc
add
pop
pop
mov
loop
inc
mov
gs
adc
cs
adc
xchg
add
das
inc
mov
daa
dec
out
xor
arpl
iret
and
lret
add
in
pop
sub
repz
cld
mov
adc
push
jno
push
not
push
into
sub
and
pop
and
iret
daa
popa
xchg
aaa
popa
ret
dec
jecxz
push
js
pop
add
dec
inc
jge
lcall
testb
mov
mov
cmpsl
in
test
stos
dec
sub
mov
fildll
add
dec
ljmp
cmpsl
jo
sub
loope
cltd
pop
stos
mov
cmp
aad
sbb
out
in
into
bound
xor
push
sarb
push
add
bound
jno
jb
addr16
sub
pop
inc
mov
sbb
xchg
add
andl
and
ljmp
orb
rorl
add
and
mov
leave
jge
lods
jo
and
scas
rol
ss
jae
cmp
sbb
popf
fs
jg
movsb
dec
ret
xlat
xor
test
cmp
data16
cmp
mov
push
jb
lret
lea
mov
imul
out
cli
into
std
cmp
imul
outsl
sub
sti
jecxz
cmp
test
stc
xor
sub
insl
sub
jp
movsb
dec
ja
sti
stos
int3
mov
imul
sub
dec
xchg
sbb
or
in
sub
mov
cli
pop
sbb
movsb
adcl
nop
inc
test
aad
imul
push
mov
aad
fbstp
maxps
jne
out
mov
mov
add
test
outsl
push
mov
cmp
add
jecxz
decl
arpl
adc
add
adc
sti
ljmp
push
and
push
lods
adc
mov
jb
dec
stos
sub
push
clc
ss
ret
pushf
and
orb
leave
or
lods
jmp
pop
fstpl
push
push
cmpl
dec
ja
dec
leave
pop
sbb
mov
cmp
adc
jg
mov
mov
jmp
out
imul
adc
rcrl
push
xlat
xchg
loopne
inc
xlat
jbe
xor
int3
stos
lret
mov
stos
das
mov
nop
jecxz
xor
sub
add
inc
pop
loope
sahf
in
dec
sbb
sub
dec
dec
mov
cmp
vmwrite
iret
and
addr16
lock
fs
pop
sbb
jmp
sub
xchg
out
repz
push
push
xchg
jecxz
cltd
push
outsl
lret
jae
mov
adc
aam
rep
push
pop
ret
outsb
xlat
repnz
mov
das
imul
out
fildll
in
or
inc
adc
lahf
mov
jle
fwait
jmp
sbb
sub
int3
inc
sub
es
add
xchg
or
push
jnp
jg
mov
xchg
add
adc
and
idivl
decl
inc
push
lock
std
pop
adc
and
xor
inc
out
adc
cmp
xor
test
xor
aam
out
jns
aas
adc
mov
inc
sahf
cmpsl
push
jle
push
stc
sub
sub
jb
sub
pop
xchg
or
xorb
arpl
test
cmpsl
ljmp
sbb
xchg
xorb
push
cmp
adc
lds
or
aam
in
mov
inc
mov
add
rol
inc
pushf
push
cmp
adc
cmp
test
sub
insl
pop
lea
cmp
jmp
inc
mov
cmp
fcomps
mov
lcall
iret
mov
sub
fucomip
dec
outsb
fdivrl
dec
enter
xchg
xchg
jecxz
sbb
cmp
aam
cmp
jne
pop
sbb
push
jmp
aaa
es
mov
sbb
fidivl
inc
adc
addr16
push
add
je
and
ja
movsb
test
sub
dec
inc
push
or
sub
lcall
ja
or
aam
jle
loopne
push
dec
xlat
je
imul
mov
shll
pop
lcall
ret
mov
fucom
nop
mov
cwtl
mov
in
fiaddl
push
jno
std
dec
sub
inc
inc
repz
ficoml
or
clc
xchg
xchg
lahf
pushw
mov
daa
sbb
cmp
int
and
jno
int
sbb
addr16
dec
fnstcw
lds
add
pop
add
and
in
hlt
in
in
pop
push
stc
dec
push
popa
hlt
mov
in
mov
sbb
xor
rorl
add
hlt
mov
pop
insb
or
pop
cwtl
mov
aaa
lea
dec
push
popa
clc
pop
sbb
test
pop
sbb
fisttps
sarl
jnp
ret
wrmsr
incw
pushf
les
mov
xchg
or
into
mov
xlat
fldcw
outsl
inc
popf
xchg
enter
sub
sahf
sbb
dec
jnp
xchg
dec
testl
aaa
std
aam
shufps
jecxz
jecxz
pop
lock
add
jo
js
cltd
jle
sbb
rcll
mov
adc
sbb
lods
xor
int3
outsl
mov
sub
and
mov
movsl
out
sbb
push
mov
push
lods
sbbb
sbb
fmuls
sahf
stc
sub
test
dec
add
dec
push
mov
pop
sub
ss
mov
and
jbe
jbe
sub
popa
mov
orb
daa
inc
or
test
mov
dec
mov
ja
mov
lret
mov
xchg
xor
jmp
aad
shrl
dec
movl
rcrb
mov
push
mov
scas
js
leave
aas
inc
xchg
jle
cmp
mov
aad
fsubl
lret
mov
scas
add
xor
jo
and
loop
popl
fcomps
popa
sub
or
push
jno
cmpb
dec
pop
adc
inc
sub
inc
and
je
sub
idivl
push
imul
out
enter
mov
int3
xchg
or
and
aaa
add
adcb
or
gs
lret
das
test
shrd
aaa
dec
outsl
mov
orl
nop
shl
adc
add
adc
xor
and
movsl
insb
in
jl
divps
stos
nop
pop
cld
daa
xchg
shlb
inc
shlb
cmpsl
mov
jp
cs
push
dec
dec
sarl
mov
mov
dec
stos
popa
loopne
dec
pop
mov
int3
mov
sar
lods
push
pop
mov
adc
mov
mov
pop
ljmp
xchg
pop
out
and
shlb
push
dec
imul
pop
push
adc
dec
fisubs
fsubrs
lods
push
mov
cmp
fadd
icebp
or
mov
dec
or
ss
sbb
sbb
xchg
ret
stos
sbb
and
sub
imul
scas
jp
lods
data16
or
imul
fs
sbb
xchg
aas
movzbl
punpckhbw
add
aam
out
and
sub
mov
mov
fwait
cmc
insl
xlat
push
push
mov
loope
inc
cmp
inc
rcrl
inc
xlat
out
mov
push
jns
clc
into
xor
nop
inc
lcall
fimull
jmp
pop
ret
push
mov
xor
out
add
mov
jl
shlb
std
test
jmp
aaa
addl
lock
gs
loop
bound
shr
test
repnz
js
enter
push
shlb
mov
jns
xchg
loopne
pop
sub
sti
pop
scas
or
sbb
xchg
cmpl
inc
xor
in
mov
inc
loopne
adc
outsb
sub
out
pop
mov
fiaddl
pop
fstl
je
cmpsl
mov
pop
stos
fisubrs
or
mov
cmpsb
scas
rcrl
xor
aam
fs
inc
mov
cmp
orb
test
lods
les
fwait
loope
lds
movb
xchg
mov
jo
mov
in
jno
push
cmp
cmp
or
mov
stos
repnz
test
nop
repnz
mov
fstps
cmp
pop
cmp
ja
jecxz
mov
mov
push
add
testl
test
sub
jne
mov
jp
ss
rcr
xor
mov
and
pop
das
in
pop
mov
xlat
or
andl
push
cli
adc
adc
adc
dec
lods
cmp
dec
pop
mov
xlat
push
and
or
repnz
mov
jle
sarb
sbb
mov
fld1
arpl
push
xchg
jg
addr16
xchg
insb
nop
jno
inc
pop
cwtl
sub
iret
cwtl
imul
ds
loop
ja
xchg
jns
pop
lods
fbld
adc
jle
mov
test
pop
add
sbb
mov
push
in
mov
in
loop
movl
sarl
or
dec
mov
sub
jp
test
pop
dec
push
push
lahf
adc
gs
data16
mov
dec
inc
jnp
mov
dec
outsl
lret
sbb
lds
push
sbb
mov
push
mov
jo
jb
sub
mov
and
repz
nop
push
arpl
mov
popa
vunpcklps
bound
mov
inc
cmp
sub
jnp
pop
mov
jl
xchg
jl
xor
das
mov
cwtl
or
ljmp
jl
and
mov
xor
jbe
push
cmpsb
cmp
or
out
push
xor
mov
cmpsb
adc
mov
xlat
push
adc
add
push
stc
lcall
or
pop
xchg
aas
popf
ret
divl
ss
fmul
lods
test
mov
repz
mov
arpl
inc
mov
cmpsb
es
sbb
scas
mov
lahf
ficoms
and
adc
inc
add
sbb
ljmp
cmp
outsl
or
outsb
or
das
ret
cli
cmp
push
shll
dec
xor
pop
in
add
add
movsb
cli
mov
dec
push
pop
cmp
ret
cmpsl
out
inc
cmp
aad
sub
pop
mov
outsl
aaa
xor
lods
imul
cmp
jns
adc
cmpsl
mov
add
gs
lahf
jp
imul
push
jecxz
lds
push
dec
aam
outsl
xor
gs
xchg
cmp
xor
adc
lea
jmp
loopne
or
xchg
cs
scas
sbb
xor
cmp
scas
out
lahf
xchg
pop
outsl
in
mov
xor
xor
lea
mov
jne
xor
ja
xor
js
mov
jbe
or
insl
icebp
mov
inc
fisubs
inc
adc
xchg
dec
scas
xchg
call
xor
push
mov
mov
aaa
xchg
ficoml
cltd
mov
inc
cwtl
push
outsl
ss
jge
jno
mov
fdivr
xchg
mov
loopne
mov
mov
cmpsl
fidivs
sbb
sbb
mov
js
mov
xor
adc
sti
cs
dec
addr16
out
and
mov
lret
adc
loop
call
fwait
stos
inc
cmp
or
adc
lahf
cmp
clc
mov
jb
cwtl
incl
cmpsb
mov
mov
imul
jl
mov
into
push
xor
push
arpl
test
bswap
loop
adc
roll
jle
vmovntdq
sbb
cwtl
push
xchg
pop
sahf
in
loopne
ret
push
and
fmul
out
lahf
movsl
jb
out
jns
push
cmp
pop
pop
loop
mov
sbb
or
pop
ja
stos
fdiv
out
shrl
rorl
xchg
inc
pop
add
push
andb
or
sbb
rorl
ss
fldt
repnz
iret
insl
out
in
imul
les
inc
mov
sbbl
popf
jnp
and
inc
mov
stos
push
push
jne
and
and
icebp
cmp
mov
inc
testb
lock
aas
jecxz
sub
jmp
and
mov
test
sub
sub
xchg
push
adc
leave
xchg
mov
xor
jecxz
bound
sub
sub
jg
adc
cmp
ss
ret
fidivrs
popa
adc
test
out
or
repz
test
idivl
ljmp
dec
xchg
mov
push
push
dec
pop
orl
sub
je
and
stos
push
fsubrp
cmp
xor
fs
fsts
dec
into
add
xorb
aad
mov
pop
aad
jo
jnp
lods
mov
iret
mov
pusha
lahf
mov
aam
das
test
popa
inc
xchg
sub
and
dec
dec
cmpsl
daa
jno
shl
es
mov
icebp
adc
iret
arpl
aaa
push
xor
fs
mov
adc
or
mov
rcll
pop
pop
jae
inc
nop
add
movl
in
xchg
inc
subb
bnd
add
xor
test
aaa
cmpsl
mov
or
jmp
hlt
cmp
or
xadd
iret
inc
mov
pop
into
mov
cmpsb
nop
ror
adc
add
adc
ja
jecxz
bound
dec
in
ljmp
cmp
push
sbb
cmp
mulb
test
insl
or
int3
push
stos
test
jb
jle
xchg
idivl
inc
arpl
mov
cmp
sbb
jb
sbb
bound
xchg
nop
xchg
packssdw
js
movsb
or
mov
aas
jge
sub
sahf
out
dec
mov
ljmp
inc
mov
daa
out
mov
loope
clc
pop
arpl
mov
cmc
or
jg
inc
bound
sahf
cmp
fwait
pop
insl
xor
sub
or
push
cli
fs
push
add
or
mov
jns
mov
pop
or
lods
ja
xor
cmpsl
xchg
mov
dec
xor
jo
add
jae
jne
mov
push
add
jle
iret
lock
pop
or
sbb
cmp
or
push
jl
cli
rcrl
pop
mov
ret
mov
andb
out
and
loop
ret
cmpsb
sub
int3
test
test
or
pop
pop
push
cltd
sti
push
mov
mov
push
or
ret
push
push
aam
into
mov
ret
lea
lea
lret
cmpsl
push
mov
adc
inc
xor
xchg
int
hlt
xor
faddl
cs
decb
push
fisubl
mov
pop
sbb
adc
xor
jns
push
repz
dec
mov
xor
bound
cwtl
xor
ret
inc
rcll
dec
cmp
xchg
sub
movsb
and
xchg
loop
mov
in
inc
mov
mov
ret
cmp
mov
aas
lret
push
es
sti
stos
add
xchg
je
mov
add
sbb
xchg
and
cmpsl
adc
mov
push
lds
movsl
mov
jb
aas
clc
mov
aaa
sti
mov
test
mov
enter
xor
mov
cli
jle
cmpsl
inc
cmp
and
jge
adc
les
mov
cmpsl
cmp
je
jge
xchg
test
test
xor
ljmp
iret
pop
test
cmp
dec
mov
jg
cmc
repz
cmc
and
subl
ljmp
mov
lret
lock
sti
mov
pop
std
orb
cmpsb
inc
fcomps
xlat
sarb
lahf
inc
sti
imul
mov
popf
jge
test
out
jae
push
xor
incl
sbb
je
ss
inc
mov
lret
or
mov
xchg
ss
popf
ret
sbb
sub
mov
jge
aad
arpl
mov
mov
xchg
or
stc
jmp
lahf
cmp
aas
js
mov
jo
adc
mov
cmp
jno
dec
mov
insb
xchg
stos
push
push
test
cmp
push
pop
lods
rclb
in
adc
push
mov
adc
cmpsb
jg
mov
ja
inc
das
push
roll
push
fisubrs
xchg
push
xchg
mov
jmp
jge
cmp
mov
and
pop
mov
fidivl
fstpt
xor
movb
and
inc
mov
push
mov
aaa
xor
jmp
add
pop
data16
fisubrs
xor
sbb
cmc
jne
mov
out
ljmp
iret
call
decb
mov
cmp
lret
sub
pop
imul
pop
jg
out
loop
or
js
fwait
movzwl
add
and
and
mov
call
xor
inc
imul
sub
push
pop
dec
inc
dec
mov
cmpsb
sbbb
popaw
insb
pushl
mov
pop
aam
cmc
into
in
xor
icebp
xor
aaa
aas
add
and
pop
mov
popf
push
pop
aam
jle
sbb
xor
inc
xchg
fldt
push
leave
cwtl
sbb
sbb
js
mov
xor
enter
aad
mov
mov
sbb
and
xlat
xor
aad
and
pop
fldcw
mov
lods
daa
sbb
imul
mov
int3
jb
pop
adc
cmc
cld
lods
ja
xor
lds
scas
dec
xor
and
mov
pop
dec
mov
jg
sbb
push
or
and
lcall
mov
rolb
mov
pop
jns
ret
mov
lock
data16
cld
pop
jne
mov
cwtl
dec
fdivs
xor
cmp
cli
mov
sub
bound
ja
mov
mov
pushf
inc
adc
xchg
and
fsubrs
mov
rcrl
sti
test
mov
jns
jle
mov
pop
dec
das
loopne
sarl
xchg
xchg
dec
fistpl
pop
or
aam
push
mov
mov
pop
dec
pop
test
and
jge
sub
and
test
add
test
xchg
std
or
lea
add
movb
inc
mov
roll
ljmp
jnp
xchg
or
mov
les
pop
adc
pop
xchg
pusha
push
out
cmp
ret
or
add
dec
push
push
repz
cmp
das
mov
fdecstp
push
and
cli
ret
mov
push
dec
sub
out
cltd
pop
jns
xchg
insl
std
adc
ret
dec
cld
imul
outsl
pop
loope
cli
push
xor
xchg
mov
mov
xchg
mov
dec
adc
or
or
mov
jo
xchg
scas
fwait
pop
in
mov
in
jb
xchg
and
inc
push
sbb
mov
cmp
xchg
fstps
cmpsb
test
ds
mov
enter
icebp
cltd
aam
pop
inc
pop
jp
int3
and
negb
or
pop
xchg
sbb
and
in
ret
loop
test
out
aam
sbb
push
jmp
movsb
rclb
and
mov
sbbb
bound
and
sbb
cltd
xor
fdivrs
xchg
pop
adc
add
adc
daa
adc
iret
jl
jle
aaa
push
push
mov
push
cltd
dec
pop
rcll
mov
mov
xor
enter
dec
cmc
xchg
mov
cld
jno
inc
test
aad
mov
roll
repz
mov
ret
cmp
pop
shrb
bound
push
stc
aad
jl
or
shrl
divb
mov
sub
cltd
ja
js
xchg
xchg
sub
xchg
inc
and
inc
daa
testb
arpl
fisttps
ret
inc
out
fcmovnbe
test
inc
pusha
mov
pop
pop
lods
jo
pushf
adc
cmp
xchg
insl
stos
mov
cld
inc
cvtdq2ps
and
or
arpl
loopne
rcrb
cmp
cs
les
sbb
sub
es
fstl
push
js
dec
ret
iret
lods
jle
leave
pop
in
xchg
fldl
in
jge
and
into
adc
ljmp
ljmp
and
xchg
outsl
sbbb
push
orb
ret
in
add
ss
insb
in
ret
mov
popf
jbe
inc
xchg
jecxz
stos
dec
loope
mov
push
int3
fistpll
pop
loop
cld
jo
sbb
cmp
testb
mov
mov
lock
sub
insl
dec
or
les
shlb
lret
imul
mov
xchg
inc
les
ds
adc
pop
cmp
pop
cltd
shl
cmp
repz
aas
mov
inc
xchg
pop
mov
test
test
mov
jle
push
pusha
aad
xchg
mov
insl
fnstcw
call
ljmp
jae
repnz
fnstcw
lahf
hlt
cmp
je
cmc
pop
outsb
xchg
jno
or
push
in
inc
lcall
xor
push
mov
push
mov
pop
enter
sub
sahf
andl
aas
push
mov
lods
es
fsubr
aam
std
roll
sbb
aaa
mov
cmp
mov
jg
adc
cwtl
xor
mov
int
test
cmpsb
lret
jge
xchg
sti
cmpsl
mov
fdivr
add
loope
mov
gs
insl
dec
data16
push
sbb
xor
sbb
dec
sbb
cmc
je
sahf
mov
xchg
inc
sbb
into
int3
mov
ret
insb
insb
outsb
inc
popf
stos
fstpt
mov
jo
push
inc
test
jmp
xchg
inc
push
or
movd
aam
lds
adc
mov
jecxz
mov
mov
test
jmp
pop
ss
mov
dec
cmp
xchg
and
rcl
pop
mov
sahf
push
daa
mov
fistpl
and
sbb
out
stos
jo
xchg
xchg
fcomps
jmp
cmp
adc
sub
popa
inc
push
adc
insl
into
mov
inc
lds
lods
mov
jb
repz
out
adc
pusha
and
into
adc
mov
lock
push
daa
or
lcall
mov
lods
jnp
test
adc
stc
and
inc
aas
mov
sub
mov
cmp
loop
subl
mov
mov
ljmp
flds
inc
add
rol
jge
aad
mov
push
pushf
leave
and
loopne
scas
icebp
push
in
stos
loope
nop
inc
or
adc
sub
adc
stos
in
mov
xchg
sbb
cmp
push
or
pop
and
sub
add
mov
hlt
loope
fiadds
arpl
icebp
jmp
pop
hlt
inc
push
mov
in
cmpb
orl
and
addr16
rclb
pushf
mov
in
leave
xchg
pop
filds
sarl
mov
aam
inc
and
push
ret
xchg
std
jp
mov
arpl
xor
mov
lds
cltd
xor
shr
jg
lahf
testl
jmp
or
aaa
int
adc
xorb
aam
sub
push
sbb
pop
ss
inc
inc
iret
or
fs
push
add
add
in
sub
cltd
push
outsb
pop
popa
sub
jle
mov
mov
dec
cs
lahf
in
data16
push
repnz
adc
je
lea
jae
lock
dec
push
xor
cmp
mov
jns
cwtl
lds
stc
icebp
inc
add
add
fldt
dec
mov
cmpsb
add
pop
add
mov
xchg
rcl
movl
pop
add
jns
and
push
adc
mov
mov
push
and
adc
loop
int
in
sub
and
std
sbb
aad
inc
int3
clc
mov
data16
mov
mov
out
jecxz
xlat
pop
or
rorl
test
jnp
aad
add
and
xchg
popa
fcompl
call
fisubrl
mov
fsts
imul
sub
aam
pushf
loopne,pn
inc
push
push
js
xchg
jns
sub
mov
push
push
xor
jbe
adc
and
sti
int
rorb
inc
sbb
sbb
nop
push
and
jno
outsl
test
ljmp
bound
in
inc
xor
mov
fld
mov
jecxz
js
dec
sahf
ds
jbe
lcall
pop
sbb
jne
sub
mov
inc
out
popf
push
adc
add
inc
jecxz
push
ljmp
sbbb
push
dec
mov
bound
movsb
mov
clc
notl
xor
adc
adcb
js
movb
mov
inc
add
and
inc
sbb
sub
pop
xor
pop
adc
push
shrb
mov
xchg
ret
mulps
cmc
andl
in
insl
fcoms
cs
adc
lods
lods
jp
and
icebp
lds
rcr
imul
and
or
jns
test
iret
fsubl
pop
mov
xor
rol
cmp
sahf
mov
pop
fisttps
cli
xchg
jge
sub
sarl
movsb
push
fistpl
lea
xor
xlat
mov
push
pusha
inc
cmp
stc
les
push
pushf
pop
push
cmp
cmp
popf
out
insl
push
cmp
cmp
lret
psubusw
fidivrl
dec
in
aas
adc
adc
xchg
cs
sbb
lods
das
repz
add
sub
sbbb
mov
sarl
cs
cmpsb
sbb
mov
arpl
add
add
xor
out
fldenv
dec
sub
loop
fisubs
mov
arpl
adc
adc
mov
loop
cmc
das
fwait
or
das
mov
pop
mov
cld
adc
aaa
xor
and
and
dec
outsb
outsb
dec
ret
push
inc
int3
movl
rcrl
mov
xchg
add
repnz
inc
shrb
mov
add
inc
push
es
arpl
mov
stc
cmpsb
iret
push
adc
jbe
jno
out
add
call
loope
fcmovbe
adc
je
and
pavgw
and
ds
fldenv
and
es
sub
in
and
clc
mov
xor
imul
inc
sbbl
pop
pop
sub
jp
std
sbb
hlt
and
push
sbb
inc
xlat
ret
sub
lcall
mov
cli
fldenv
xchg
aad
repz
pusha
std
lea
imul
imul
xchg
mov
nop
mov
sbb
loope
mov
mov
push
add
pop
movsl
aad
aaa
daa
fidivrl
loop
pop
xchg
xlat
fs
pop
xor
push
sbb
into
lds
sbb
sahf
pandn
subb
push
in
mov
outsl
mov
movsb
mov
sub
ss
pushf
mov
xchg
add
je
lahf
pop
lret
popl
mov
leavew
movsb
pop
jne
lahf
adc
les
sbb
sbb
and
int
clc
mov
fidivl
add
pop
repz
fistpl
xchg
cmp
xor
leave
iret
shrb
push
movsb
sbb
gs
lock
sar
sbb
adc
shlb
add
sbb
xor
jge
push
lock
push
lods
andl
insb
xor
sub
and
xchg
fst
dec
sbb
in
clc
insl
call
adc
adcl
inc
and
or
imull
scas
jnp
or
lock
jmp
mov
das
pop
pop
adc
test
add
jmp
xor
js
or
cmp
inc
xor
mov
sbb
lcall
lods
pushf
pop
xchg
pop
xor
mov
or
push
aas
and
jle
jo
mov
out
push
stos
test
push
fsts
mov
xchg
push
nop
inc
rorb
sti
push
in
cmp
push
shll
mov
sub
pop
jb
cmp
xorb
lea
dec
pushf
mov
orl
ret
sbb
jo
jns
lahf
pop
push
or
xchg
jg
outsb
cmp
cmc
push
in
es
out
and
push
imul
jnp
packsswb
cmc
jnp
lods
inc
cmpsl
pop
pop
jmp
dec
rcrl
in
xlat
fstps
dec
mov
sub
add
dec
loopne
out
pop
dec
sbbb
cmp
mov
ja
xorb
mov
mov
inc
jb
jnp
xor
cs
mov
jmp
adc
sti
jecxz
adc
or
pop
test
scas
rcrb
push
xor
cmp
aad
inc
mov
mov
add
aad
mov
xor
lods
adc
mov
xchg
movsl
sbb
js
ret
and
and
xchg
mov
sub
xor
scas
icebp
rclb
lahf
lods
add
shrl
repz
lret
lds
pop
xor
repz
jbe
and
ret
pop
clc
and
loopne
mov
mov
cmp
push
sub
jbe
in
pand
sub
mov
cld
pop
loope
pushf
sub
sub
insb
lcall
inc
imulb
pop
gs
sbbb
jb
loop
cmpsb
jle
push
or
mov
add
inc
lods
pop
fidivl
stc
stos
lea
push
sub
call
xor
mov
cmp
pop
in
ror
xchg
mov
pop
and
dec
int3
fdivp
loopne
call
fwait
push
call
cmpsl
mov
nopl
fwait
repz
lcall
xchg
lock
mov
aam
repz
mov
in
ja
test
inc
rcrb
in
mov
jmp
sub
cld
mov
adc
sub
pop
adc
daa
ret
shll
jnp
add
insl
mov
push
fdivl
fmuls
testb
sti
sub
add
jmp
repz
jge
das
bound
imul
sub
cs
notl
jns
loope
insb
pop
xor
push
pushf
mov
mov
pop
lret
push
and
mov
lret
sbb
push
or
cmp
lret
xlat
mov
mov
outsb
and
mov
cmp
sub
pop
jbe
test
mov
out
xor
sbb
loope
mov
adc
cmp
rorb
mov
xchg
mov
movsb
in
cmp
adc
pop
mov
xchg
cmp
push
add
ss
in
out
push
shll
lds
inc
sub
adc
sub
push
cmp
cmp
out
out
add
scas
in
mov
jb
jb
and
jo
daa
sbb
push
mov
pop
sarb
adc
dec
mov
jns
and
addl
cmp
adc
mov
and
sti
push
insb
adc
mov
es
inc
cltd
dec
sub
xor
mov
xchg
mov
gs
les
mov
ret
jo
jecxz
outsb
test
stos
imul
imul
int
push
jb
mov
mov
jb
or
xor
xlat
stos
inc
insl
sbb
xor
sbb
mov
pop
jb
xchg
test
mov
hlt
shrb
or
aad
in
popf
aam
movsb
out
sbb
prefetch
or
pop
pop
sub
ss
je
scas
scas
mov
sub
xchg
sarl
jg
mov
aaa
jp
pop
mov
jp
inc
xchg
pusha
in
push
add
test
sub
mov
mov
push
fimull
gs
mov
lods
inc
adc
outsb
lods
jl
adc
and
inc
pop
mov
xlat
ljmp
dec
dec
rorl
mov
shl
cs
out
jmp
xchg
cmp
push
push
repnz
rcrb
subb
dec
lahf
or
and
scas
cltd
pusha
jecxz
adc
in
xchg
jne
fistpl
leave
arpl
xor
jo
stos
xorb
sti
inc
inc
mov
push
xor
hlt
inc
das
popf
mov
pop
sbb
inc
cmp
adc
sub
xor
ret
ss
pop
pcmpeqd
inc
es
and
repz
xchg
inc
dec
mov
sub
cs
dec
add
hlt
les
inc
mov
ja
insb
adc
pop
jnp
xchg
xor
adc
lret
fs
jnp
mov
pop
popa
sahf
jecxz
dec
bound
fcmovb
mov
add
jb
push
mov
popa
push
outsl
pop
lret
xchg
pop
aaa
out
xor
mov
push
jo
shll
je
pop
and
popa
cwtl
stc
pop
mov
and
xor
dec
sbb
sbb
add
jnp
es
inc
ret
pop
mov
mov
aad
in
in
sbb
xor
pop
in
dec
hlt
cmp
mov
cli
dec
int3
jbe
and
jmp
sbb
push
leave
jnp
mov
jns
push
repnz
adc
push
movsl
insl
adc
inc
ret
mov
xchg
mov
int3
and
jns
out
imul
jae
fwait
push
or
push
jae
push
jecxz
mov
mov
lds
add
push
push
js
pop
push
pop
mov
sbb
sub
addr16
mov
pop
test
loop
icebp
movsl
aam
or
inc
das
mov
int
or
push
xchg
aad
ret
push
aam
ret
xor
push
scas
adc
stos
or
mov
push
bound
dec
push
jecxz
subb
adc
or
dec
pop
and
inc
cmp
adc
or
shll
jmp
adc
imul
popa
shlb
inc
sbb
mulb
xchg
cmp
mov
rcrl
repnz
mov
inc
lods
xorl
insl
or
std
adc
cmp
adc
push
stos
sbb
mov
fs
adc
es
js
popf
and
stc
rorl
js
inc
sarl
lret
sub
loope
adc
insb
xchg
mov
in
xchg
dec
add
push
ficoms
sub
sub
xchg
imul
xchg
rclb
cmp
data16
mov
cmpsl
jecxz
push
insl
aas
mov
daa
push
mov
push
cmpsb
mov
jne
js
lret
fiadds
jae
dec
push
add
roll
mov
push
popa
and
call
cmc
inc
leave
adc
notb
popa
add
sbb
fcomi
xor
icebp
out
mov
in
cwtl
mov
lahf
cmp
jmp
xlat
inc
test
lcall
xchg
in
insb
mov
dec
xchg
xchg
subl
cmpsl
mov
hlt
push
mov
pop
in
jnp
mov
cltd
xchg
inc
mov
push
fisttpll
shll
add
out
jl,pn
push
ljmp
jbe
mov
pop
pop
fbld
bound
andb
stos
clc
sahf
dec
out
loop
rcrb
jle
and
pop
mov
xor
xor
roll
cmp
add
adc
sahf
out
add
fldl
in
mov
mov
mov
mov
jl
lods
mov
cltd
test
stos
xor
and
xchg
roll
push
or
cwtl
dec
or
loopne
xor
jp
repnz
xor
ret
push
stc
add
adc
cmp
fisttpl
sub
popa
dec
lods
xchg
dec
fs
mov
out
push
bound
sub
fistpl
je
sarl
test
sbb
scas
mov
das
pop
xchg
mov
or
int3
push
mov
insl
scas
jns
xchg
xor
cmp
xchg
fldt
mov
mov
fst
cmp
cs
movsb
jne
imul
pop
jmp
jnp
inc
xchg
cli
mov
adc
ljmp
pusha
shlb
adc
jp
in
jbe
ret
push
dec
xchg
andl
and
inc
mov
loop
pop
jmp
data16
loope
dec
pop
gs
sub
lcall
or
and
xorl
shl
pop
sti
xor
rcrl
xchg
hlt
adc
push
pop
imul
cs
pop
cmc
xchg
sub
dec
fsubs
jg
movl
mov
dec
xchg
repnz
mov
and
dec
dec
aad
inc
sub
in
adc
push
or
rolb
inc
out
cmp
jp
and
cmp
jp
popa
daa
int3
icebp
inc
xchg
add
dec
xor
xchg
add
jg
sbb
dec
insl
in
je
add
or
adc
xor
push
hlt
and
mov
incl
ss
bound
cld
in
sti
fstpl
stc
cmp
inc
inc
gs
adcb
and
lds
outsl
aaa
push
sbb
mov
cmpsl
ss
sti
rcrb
insb
mov
mov
ja
adc
cmp
cmp
decb
push
and
sarl
rol
cmpl
cld
or
out
dec
xchg
xor
jmp
jns
lock
and
stos
sub
mov
ficompl
roll
outsl
jno
mov
stc
andb
lods
push
test
roll
xchg
aam
incl
lcall
les
xchg
out
dec
sahf
ljmp
pushf
push
aam
mov
test
and
and
js
dec
mov
mulb
hlt
adc
inc
rcl
test
fmull
rcr
fbstp
and
repz
dec
sti
movsw
jo
addr16
movl
imul
inc
sbb
imull
and
mov
repnz
jne
shl
sahf
jae
fdivrl
mov
movsb
sbb
pop
xchg
and
sbb
dec
daa
rcrl
adc
icebp
std
fimull
pushf
xchg
jae
imul
pop
ljmp
add
fists
testl
inc
fists
int3
pop
ljmp
cmp
movsb
mov
inc
les
jle
push
popa
mov
jbe
xor
imul
ficoml
mov
push
shrl
data16
jbe
sbb
inc
mov
jl
test
pop
and
cld
inc
lcall
xchg
inc
and
lock
and
lret
fadd
icebp
int3
out
scas
add
xchg
sti
cmp
inc
fistl
pushf
bound
test
pop
jl
testb
ljmp
pop
dec
sbb
rcll
out
and
sub
dec
and
sahf
push
mov
lock
pop
inc
mov
sti
stos
or
push
cltd
dec
cmp
fstp
pop
inc
xchg
or
lods
xchg
mov
inc
mov
outsl
les
sub
xchg
fmulp
mov
xor
repnz
sub
sub
loope
aas
jecxz
in
mov
repnz
mov
adc
xchg
or
movsl
jl
in
lds
scas
and
int
xor
je
inc
cmp
mov
out
lods
adc
ret
lds
into
addr16
lods
jnp
call
or
jmp
xor
icebp
adc
gs
shlb
rcrl
push
inc
pushf
movsl
ss
pop
movsb
jp
mov
xchg
cmp
xchg
leave
inc
sbb
in
or
mov
jbe
push
rorl
mov
cwtl
loop
out
dec
mov
or
fistpll
xor
rol
adcl
add
fwait
out
jnp
push
cmpsb
push
xchg
xchg
xchg
add
add
subb
sbb
jg
scas
adc
loopne
xor
int3
and
jp
out
icebp
rcrl
mov
jbe
clc
xlat
xor
inc
pop
insl
in
bound
adc
out
imul
stos
xor
mov
subb
xor
mov
cvtps2pd
scas
idivl
cmp
call
je
shrb
roll
fs
cmp
ret
mov
sbb
xorl
cwtl
jae
shlb
or
iret
imul
pusha
xchg
hlt
dec
test
hlt
out
push
jae
push
and
or
jge
dec
push
out
push
fxch
daa
arpl
jnp
imul
rol
or
mov
sub
mov
pusha
xchg
std
sti
imul
sar
jno
pop
mov
push
pop
cmpsb
jmp
test
mov
out
xor
test
pop
lods
pop
test
scas
pop
subl
loope
cwtl
andl
and
xchg
xor
pop
lds
lcall
loope
loopne
xchg
mov
xor
cmp
adc
cltd
test
sbb
js
outsb
ss
je
ret
jns
push
bound
es
or
jle
test
cltd
push
lcall
inc
push
ljmp
out
mov
lods
add
out
out
push
pop
gs
and
pop
push
fs
inc
push
dec
xchg
mov
popa
lods
aas
adc
ljmp
sahf
mov
stc
pop
jp
or
outsb
xchg
inc
sbb
pop
mov
mov
and
sti
xor
pop
jp
sbb
cmpsb
and
and
or
mov
mov
testb
in
sbbl
out
pop
arpl
in
orb
mov
nop
mov
shll
ja
sbb
mov
stos
out
mov
test
jge
sbb
lcall
and
movb
lea
loopne
mov
add
sbb
push
fistpl
rclb
cmp
pop
inc
test
push
stc
dec
jl
or
ret
ljmp
mov
in
sub
dec
mov
call
out
jnp
js
lock
je
loop
icebp
rcrb
xchg
jns
jae
sbb
push
popa
in
ret
sbb
std
mov
arpl
fstl
std
mov
lods
sbb
addb
pushf
jb
popf
push
push
rorb
mov
xchg
push
xor
ficoms
loope
jae
xorb
push
jo
add
fdivrp
pop
adc
out
fnstenv
scas
pop
xor
mov
out
addr16
gs
mov
pop
bound
and
imul
pop
xchg
in
out
xlat
lods
xchg
pop
es
jne
dec
jmp
ret
aas
or
cs
test
cmp
mov
mov
cmp
mov
add
out
sbb
ljmp
fcmovne
scas
je
push
add
leave
scas
cmpsl
rol
dec
mov
test
aas
xchg
inc
push
mov
jns
test
cmp
mov
dec
int
insb
test
xchg
dec
div
xor
lea
mov
cld
and
adc
call
roll
inc
pop
sbb
push
lea
jo
cs
add
push
mov
jo
int
jp
nop
in
sahf
pop
pop
lock
pop
cmc
in
leave
cs
data16
and
out
shr
dec
add
push
lahf
arpl
rcrl
stos
hlt
lahf
or
sub
cmp
xor
jae
ja
sti
xor
out
imul
mov
test
in
mov
push
mov
ficoms
sar
pop
sub
inc
mov
fnstenv
push
push
xchg
xchg
mov
sub
cmp
sahf
rcrb
cld
cwtl
or
cld
adc
popa
xchg
mov
lock
mov
push
inc
cltd
mov
shll
negl
insl
pop
adc
push
jnp
mov
in
repz
outsb
popf
xlat
xchg
in
mov
loopne
push
push
arpl
mov
lock
sbb
mov
or
out
sub
aas
fstpl
in
sub
sub
out
ja
sti
adc
fsubr
mov
sbb
pop
push
or
stos
subl
ret
nop
fidivrs
adc
sahf
inc
xchg
xlat
dec
and
call
jl
sbb
ja
pop
repnz
divb
ss
aas
std
dec
mov
mov
mov
jp
out
clc
inc
adc
add
mov
sub
push
sbb
xor
lods
xchg
scas
jl
add
push
movsb
stos
adc
les
arpl
mov
sti
mov
or
xor
lods
add
lret
popf
sub
jnp
nop
loope
mov
add
jge
pop
in
ds
xlat
xor
push
add
adc
xor
mov
outsb
fcom
in
xchg
shll
sbb
sub
sbb
dec
jnp
mov
in
sti
sub
pusha
push
xor
cmpb
in
je
inc
xchg
cmpsb
jmp
repz
gs
insb
fistpll
pop
mov
enter
clc
out
jo
push
bound
push
xor
jns
add
push
jo
jne
lds
jae
ret
jae
push
das
in
add
mov
dec
std
fildl
in
push
and
and
add
xor
outsb
mov
outsb
push
test
push
mov
movsb
xchg
jl
rclb
xor
xor
jae
mov
dec
mov
adc
ret
xor
mov
mov
inc
scas
ja
xor
pop
pushf
jmp
add
repnz
xor
and
rorl
insl
jmp
fs
mov
inc
in
inc
movsb
in
xlat
jo
int3
into
jb
adc
mov
fstps
pop
daa
adc
test
xchg
rorb
lahf
mov
xchg
cmp
jmp
stos
imul
cmp
push
mov
xor
mov
pop
gs
sub
imul
repnz
add
pop
les
in
xchg
repz
bound
cwtl
test
mov
fadd
incb
dec
outsb
sub
xlat
lahf
push
adc
rcrb
push
inc
mov
jp
fisubrs
in
pop
mov
nop
lds
xchg
mov
enter
jbe
fists
clc
xchg
mov
fld
mov
int3
inc
mov
sub
out
mov
ds
outsl
dec
je
push
jbe
scas
pop
lods
test
mov
les
xchg
lock
xor
inc
xacquire
cmp
ficompl
and
repz
enter
repz
sbb
or
dec
and
mov
movsb
out
leave
sbb
and
aad
cmp
orb
cltd
dec
add
add
fdivl
jp
cmpsl
inc
loopne
mov
cmp
in
lret
pop
cwtl
clc
sti
shlb
sub
out
jbe
sbb
into
in
add
mov
int
or
adc
cs
rolb
lcall
adc
decl
mov
stos
mov
leave
insb
ret
movsl
fld
xor
jl
cld
pop
outsl
flds
push
mov
add
sub
sub
adc
jns
adc
and
sbb
lcall
push
add
in
movsl
pop
movsb
jbe
pop
jmp
inc
inc
in
xchg
adc
pop
dec
jge
pop
repz
dec
and
pop
loopne
dec
pop
inc
xchg
enter
xor
jae
inc
or
inc
add
clc
lods
lds
mov
mov
hlt
mov
mov
push
fisttps
stc
add
lea
icebp
stos
testl
jbe
daa
mov
enter
clc
jbe
ja
int3
fwait
sahf
fsubr
and
push
xchg
xchg
mov
pop
lock
xor
aam
fdivl
jmp
cmpsb
out
mov
repnz
sbb
fnstcw
fmull
push
mov
sbb
lods
xor
sbb
out
xchg
repnz
ror
leave
mov
repz
gs
inc
or
lods
ret
mov
inc
out
dec
sub
xchg
loopne
mov
mov
popf
ret
and
sub
mov
imul
nop
push
pop
or
push
iret
insb
in
lcall
mov
pop
cwtl
data16
adc
pop
xchg
sub
and
jae
nop
aam
xor
movsb
aam
or
fs
lret
shlb
inc
movsb
pop
lret
mov
add
add
dec
xchg
sub
lea
sub
mov
cmp
sbb
xlat
xlat
pop
or
cli
aam
xchg
ret
gs
fidivl
push
add
arpl
aam
ret
hlt
adc
imul
jne
lahf
int3
loope
jb
xor
stos
xchg
push
mov
shlb
mov
divb
and
add
scas
or
fcoms
dec
mov
insl
mov
cmp
scas
in
cmp
mov
out
fs
arpl
rcrl
jne
cmc
pop
adc
jno
mov
sbb
movsl
jno
inc
mov
jl
inc
jge
add
frstor
mov
bound
mov
out
sbb
mov
pop
push
hlt
into
lcall
or
sub
push
cmp
push
push
mov
cmpsb
sbb
pop
daa
push
inc
xchg
xchg
aam
fucom
mov
out
adc
hlt
test
mov
jnp
cmpb
pop
stos
lcall
xchg
mov
aas
mov
mov
stc
and
mov
sbb
dec
push
sbb
jecxz
andl
cmc
mov
cli
jl
icebp
hlt
inc
jecxz
inc
loop
je
icebp
gs
xchg
mov
orl
icebp
inc
push
ss
stc
sbb
mov
pop
xlat
inc
pop
ret
inc
pushf
in
sbb
xor
orl
lods
inc
leave
inc
aas
add
aam
jnp
lcall
xchg
push
loope
lods
test
dec
jns
icebp
adc
or
mov
dec
out
jns
add
lods
scas
jl
pushf
or
out
sbb
add
out
fistpll
in
les
dec
sub
shlb
adc
lcall
ret
insb
pop
mov
push
push
sub
pop
lcall
xchg
ret
mov
hlt
adc
fstpt
fildll
lods
pop
into
or
pop
hlt
movsb
mov
inc
out
movsb
sbb
shr
jg
mov
stc
mov
add
sbb
xchg
add
filds
cmp
out
jle
sbb
dec
add
js
pop
xchg
lret
pop
jb
mov
andl
lret
lret
xor
mov
push
adc
movsb
nop
pop
stos
int3
pop
outsb
add
add
stos
and
movsb
loope
add
dec
dec
xchg
vmovaps
addr16
daa
jbe
imul
cmp
pop
sub
into
fnstsw
sbb
jl
mov
push
adc
xchg
loop
add
or
repnz
das
add
and
jbe
or
xchg
jo
mov
jg
mov
dec
out
sbb
enter
xchg
xlat
push
sbb
pop
adcl
stos
cmp
insl
outsl
dec
sub
jmp
gs
dec
mov
cmpl
rcrb
pushf
cmp
cld
xchg
adc
jno
jmp
aad
add
xchg
jno
push
or
xchg
mov
negb
or
fmull
int
stc
inc
xchg
cld
or
add
xor
push
jle
data16
les
aas
mov
es
and
push
int3
push
bnd
xlat
fndisi(8087
push
push
loop
notb
out
sar
repz
loop
jg
sar
out
mov
leave
inc
or
imul
shlb
mov
jp
fwait
bound
dec
mov
lret
jecxz
ja
xor
mov
sub
pushf
sub
cmpb
call
imul
inc
lock
push
out
xchg
pop
inc
pop
add
mov
pop
mov
lods
pushf
lret
sbb
out
mov
pop
dec
mov
xor
imul
dec
sbb
and
add
xchg
jecxz
outsl
add
push
scas
aam
aam
gs
sti
in
add
or
lahf
jnp
enter
hlt
icebp
outsl
mov
sahf
sahf
aad
mov
jmp
xchg
fisubl
outsb
pop
and
loopne
cmpsl
cmp
jl
out
sbb
ret
xor
cwtl
pop
pusha
jl
cmp
cmpsl
lret
pop
aaa
xchg
arpl
mov
xchg
cmp
and
mov
push
vcvtsi2ss
divl
out
xchg
mov
ja
fidivrl
sbb
stos
xor
ljmp
loope
inc
mov
sbb
cli
mov
inc
xchg
jb
ret
or
stc
sbb
mov
or
jnp
cmp
jbe
out
xchg
mov
loop
cmp
imul
dec
xchg
jnp
mov
sub
xchg
scas
or
mov
jp
add
mov
mov
xor
fnsave
cmc
std
mov
mov
movl
lahf
xor
lahf
mov
sbb
mov
push
sahf
ret
or
dec
fisubrl
das
sbb
and
jmp
in
mov
mov
dec
push
sarl
int
test
stos
sarl
inc
in
shrl
aaa
sub
arpl
adc
jecxz
jmp
xor
and
xchg
dec
rcrl
insb
bound
stos
fcmovbe
nop
xchg
pop
mov
es
sub
lret
sbb
out
xor
dec
adc
in
jge
sbb
lea
data16
or
hlt
movsl
pop
notb
stos
mov
fiaddl
decb
jno
inc
incl
test
inc
add
nop
ret
push
ss
mov
adc
loop
mov
push
rol
pop
adcb
aad
jecxz
fcmovb
inc
cmp
pop
ltr
ret
xor
and
test
subl
in
fdivrl
add
jno
ljmp
shl
jp
cs
fistps
sti
out
shlb
int3
sbb
dec
out
pop
call
adc
mov
push
lcall
out
add
pop
cmpsb
jne
xchg
sbb
sahf
mov
add
jl
jp
jmp
push
mov
ret
adc
repnz
in
pop
sub
add
jb
sbbb
inc
xor
int3
push
pusha
jno
xchg
sbb
testb
into
add
dec
rorb
xor
and
pop
inc
fimull
push
add
gs
lret
stos
and
shl
gs
pop
dec
decb
or
fdivrl
dec
jmp
jl
push
add
push
xchg
movsl
and
cmp
in
inc
push
cmpl
inc
xor
xchg
jo
adc
imul
insl
mov
mov
popa
je
cmpsb
or
mov
movsl
into
outsl
or
leave
test
and
xchg
loope
xor
mov
pop
pushf
xchg
push
cwtl
aam
pop
jns
and
fnstcw
pop
aam
aas
push
rcll
cmp
ret
rol
push
push
jns
scas
test
imulb
cli
sub
jb
pop
sahf
arpl
sbb
or
bound
mov
sbb
sub
pop
and
insb
sub
push
icebp
imul
scas
add
notb
in
or
lods
inc
out
sub
in
dec
xor
cli
sub
mov
push
das
xor
dec
leave
pop
push
scas
fsubr
xchg
scas
lret
mov
push
pusha
fists
pop
js
out
mov
in
aam
cmp
lea
and
cmpsl
outsl
mov
pop
mov
ja
aam
out
sub
jl
xchg
jl
sbb
sbb
loope
inc
push
push
xor
inc
lock
aad
cmp
adc
cld
js
jg
rorb
aam
data16
and
dec
pop
orb
adc
sub
popf
bound
imul
in
mov
push
jo
xorl
ret
loope
mov
lcall
pop
xchg
push
idivl
adc
sbb
sbb
fisttpl
sub
out
jle
out
js
daa
roll
and
loopne
or
pop
push
inc
test
and
lods
popa
mov
dec
pop
fimuls
and
addr16
fscale
inc
jle
xchg
push
mov
fwait
jno
cwtl
icebp
inc
push
pop
cmc
pop
popf
push
ljmp
inc
int3
xor
cs
and
repz
push
or
pop
mov
lods
ds
rcll
mov
mov
cs
and
incb
push
int3
and
jno
and
jo
push
aad
negb
and
mov
xor
push
sbb
fs
stos
mov
jmp
jbe
add
repz
popa
or
and
dec
stos
dec
push
js
and
jp
lret
push
jno
cmp
mov
lahf
inc
std
pop
xor
sub
insl
adc
out
xchg
xchg
inc
or
mov
push
roll
lahf
adc
sbb
cmp
les
dec
dec
subl
enter
sbb
push
xor
xchg
jecxz
das
mov
mov
inc
incl
roll
jo
jbe
ljmp
cmp
push
mov
call
popa
das
imul
mov
sub
imul
movl
rorb
add
adc
xlat
lock
subl
lods
and
ss
mov
push
push
or
xor
add
sti
aam
lods
ret
xchg
xchg
cmp
into
push
sub
push
fcoml
insb
outsl
jmp
inc
dec
jg
push
cs
test
pop
push
dec
and
sbb
and
out
ds
pop
movsl
or
into
pop
push
gs
inc
out
fstpt
xchg
inc
push
push
jmp
push
je
bound
hlt
daa
push
pushf
or
mov
xchg
xor
imul
adc
icebp
mov
cmpsb
mov
cmp
movsl
xchg
test
lahf
xchg
adc
jb
cltd
jbe
or
mov
cmp
loope
xchg
data16
test
imul
ds
sbbb
fsubrs
or
pushf
mov
jbe
mov
mov
lcall
cltd
enter
pushf
pop
pop
or
fbstp
xchg
adc
enter
fsubrl
mov
gs
movsl
packuswb
fmuls
mov
test
mov
and
ds
scas
mov
pop
andb
cwtl
loop
cmpsb
fldenv
sahf
xor
add
popl
push
push
jp
cmp
sub
xlat
sbb
inc
xchg
scas
ja
dec
shl
int
adc
fwait
sub
mov
cmp
mov
or
dec
cltd
dec
das
xor
movsb
pop
fs
in
insb
mov
mov
push
int
mov
mov
lods
inc
sub
mov
movsl
iret
xor
mov
pop
cli
adc
xor
movsb
insl
sbb
pop
sbb
int3
in
lahf
dec
sbb
fdivrs
cwtl
add
push
or
ds
dec
mov
in
sahf
jle
sahf
mov
orl
in
hlt
addr16
sub
sub
dec
imul
rcrl
or
fwait
xor
sbb
mov
fnstsw
loopne
xor
cli
js
xchg
add
sub
cmp
incl
jmp
mov
int3
int
int3
mov
pop
repz
lea
mov
jne
pushf
fsin
out
test
push
out
mov
cmc
dec
cli
jae
inc
lods
mov
shrb
pop
push
jb
sub
sbb
adc
push
das
movsb
xchg
sub
std
xchg
mov
mov
sti
loop
mov
sarb
xor
in
int3
movsb
roll
mov
or
jle
lcall
icebp
call
loope
lahf
cmp
fucomi
fnstsw
scas
int
cmp
ret
sbb
inc
shlb
test
jmp
sub
leave
xchg
jl
adc
rol
inc
sbb
ds
iret
xor
std
jb
imul
cmp
pop
ss
icebp
inc
ret
notb
pop
imul
and
mov
ss
and
sarl
lods
inc
and
lret
and
xchg
ret
cld
stos
aas
jmp
sub
out
out
repnz
or
aas
dec
adc
outsl
cld
icebp
idivb
pop
filds
leave
xor
pop
iret
sbb
negb
out
in
inc
sbb
mov
pushf
aam
adc
pop
loop
xchg
mov
stos
adc
sub
fstp
inc
imul
sbb
call
cli
nop
cld
pushf
mov
sub
aam
xor
mov
xchg
fstpt
add
pusha
ret
mov
and
lcall
xchg
mov
outsl
pop
sub
and
ss
jo
jno
mov
mov
fnstenv
andl
mov
test
in
dec
add
icebp
lods
rolb
movsb
or
das
mov
addr16
addb
xchg
mov
and
stos
sahf
jne
dec
mov
ds
js
addb
rep
cmc
adc
das
jo
out
pop
scas
push
mov
and
inc
push
testb
imul
std
xchg
stos
fcmovnu
mov
mov
outsb
std
mov
mov
sbb
neg
aad
ljmp
xor
fldenv
cmpl
clc
xchg
insl
ret
out
inc
and
ja
inc
dec
int3
les
sub
pushf
ss
lods
mov
jae
pop
xchg
loopne
lock
push
pop
jbe
sbb
rep
jle
mov
jecxz
aaa
js
loopne
mov
jae
mov
sub
mov
insl
mov
test
lods
cmp
cmp
add
and
shlb
int3
and
test
lret
adc
aaa
inc
fisttpl
xor
js
mov
shlb
jle
pop
out
cmc
mov
xchg
xor
or
push
mov
sarl
cltd
cld
data16
sub
popf
lahf
arpl
mov
and
fcompl
cmp
push
push
out
cmp
jg
test
fisubs
sub
and
pop
ljmp
cmpb
push
inc
ret
movsb
cli
outsl
mov
int
and
arpl
dec
mov
shl
mov
xchg
pop
dec
sub
repz
mov
and
push
xchg
ss
add
sub
mov
mov
std
add
jnp
or
push
loope
aaa
adc
sbbb
or
or
arpl
cmp
cmp
jae
rcll
fdivs
mov
fwait
jo
roll
mov
mov
inc
cmpb
int
sbb
outsl
xor
pop
sbb
xor
cli
clc
xchg
jle
push
adc
pushf
ljmp
insl
and
mov
gs
mov
mov
sbb
stos
inc
dec
dec
xchg
cmpsl
dec
mov
cpuid
push
mov
lcall
shrb
adc
cmp
lock
add
mov
adc
leave
and
es
test
pop
out
lods
pop
popa
mov
mov
in
into
cli
jo
or
mov
mov
pop
imul
dec
andb
adc
test
push
sub
jbe
outsl
pop
and
clc
inc
call
insl
pop
rcll
inc
xchg
push
xor
aaa
sub
movsb
pop
jmp
rorl
gs
or
xlat
mov
mov
fs
js
jae
mov
mov
flds
sahf
movsb
or
jno
or
ret
dec
icebp
xor
mov
loope
adc
push
pop
pop
fsubs
and
ja
imul
fcoms
pop
pop
cmc
and
xchg
inc
dec
iret
dec
jae
ffree
dec
mov
hlt
mov
cmpsb
mov
pop
int
add
or
repnz
cli
test
jl
shlb
push
push
cmpsl
mov
cmpsb
xchg
adc
xchg
xchg
in
pop
idivb
and
xor
sbb
sub
adc
dec
dec
in
nop
adc
mov
cld
push
movsb
push
hlt
jl
mov
pop
iret
dec
loopne
jo
pusha
jne
sbb
repz
adc
mov
fwait
mov
jl
mov
add
test
dec
out
sti
inc
sub
gs
sbb
pop
in
dec
or
xor
loope
or
test
xchg
dec
stos
mov
mov
mov
xor
shll
pusha
push
push
jb
mov
shlb
leave
inc
dec
cmp
jo
cmpb
data16
test
mov
cs
sub
mov
push
push
or
lcall
stc
jecxz
cmpsb
dec
push
push
aaa
cs
loopne
frstor
out
mov
sbb
push
jp
jle
xchg
lea
test
mov
pop
cltd
cmp
mov
rcll
lcall
bound
pusha
sbb
ljmp
mov
jae
adc
pop
jl
pop
add
add
scas
lods
aas
and
inc
test
xchg
insb
sbb
adc
mov
xchg
and
push
mov
inc
pushf
adc
sub
out
sbb
sub
and
stc
add
xchg
push
scas
loope
mov
cmp
les
out
jae
mov
insb
fcoml
sbb
jge
out
dec
mov
cld
std
out
jno
inc
popf
pop
push
and
xor
push
or
cmc
shlb
aad
pop
or
arpl
xor
ja
insb
movl
jne
hlt
andl
fwait
add
sbb
js
jge
xchg
lea
inc
mov
inc
rcl
add
sbb
mov
outsl
imul
sbb
jmp
subb
cltd
adc
and
fadds
test
mov
push
jecxz
xchg
std
jle
cld
daa
mov
clc
cmp
push
cmpsb
dec
dec
push
push
add
mov
sub
subb
movsl
flds
sub
ds
fisubl
cmp
pusha
jae
out
in
rcrl
and
data16
or
dec
bound
jns
and
sub
bound
mov
lahf
pop
scas
fdivr
push
push
or
xor
mov
je
xlat
shrb
imul
mov
or
or
sbbb
rorl
clc
jl
jmp
xor
out
sub
pop
cmpsl
cwtl
push
jns
sub
sti
inc
sub
xor
arpl
pop
rcl
outsl
mov
insl
push
pop
mov
popa
inc
jge
mov
sub
shlb
pop
xorl
lock
loop
adc
add
push
test
sbb
lret
aas
xchg
orl
lret
leave
mov
or
mov
nop
jb
and
mov
jo
andb
and
es
test
xchg
mov
jb
pop
daa
fcomps
inc
jmp
insb
les
jg
inc
mov
es
fidivs
sarl
cltd
pop
add
xlat
mov
cmpsl
lea
mov
mov
mov
rcrl
xlat
sub
dec
xor
mov
mov
mov
inc
add
loop
test
fiadds
and
mov
mov
data16
loop
scas
or
xchg
sbb
or
lock
mov
ret
shlb
jl
sti
es
lods
fildl
out
jno
popa
inc
test
inc
rcrl
push
pmaxsw
push
adc
fcomps
ret
aam
inc
xlat
or
adc
iret
xor
cmp
loope,pt
xchg
fsubs
stc
jnp
inc
fs
pop
ds
add
in
repz
xchg
pushf
or
shlb
repnz
test
cmp
into
scas
mov
mov
daa
imul
je
into
fmuls
and
push
sahf
lods
mov
adc
movsl
dec
mov
mov
push
mov
jmp
xor
or
aad
ret
pop
mov
repnz
movsl
add
ss
insb
lods
adc
and
and
add
jl
icebp
cld
dec
sbbl
gs
in
imul
dec
xor
in
scas
push
add
sub
jg
lret
mov
pusha
pop
sub
jbe
imul
mov
push
inc
xchg
mov
cltd
test
out
jae
or
push
pusha
repnz
pop
xchg
loop
rolb
int
js
addr16
xlat
pop
fidivs
xchg
push
lret
data16
rol
insb
cmp
call
gs
scas
sub
les
ror
fldl
dec
movsl
les
mov
ja
or
xchg
xorb
leave
arpl
pop
push
insb
dec
fs
adc
mov
cs
pop
repnz
lea
sbb
aam
add
jb
dec
leave
lds
add
mov
in
and
pop
adc
nop
jnp
in
add
xchg
sbb
mov
call
lea
adc
jb
outsb
fcom
sub
es
pop
mov
daa
sbb
lods
xchg
lea
jg
push
ret
and
rorl
lahf
cmc
jle
loope
es
stc
xchg
cs
scas
lahf
pop
sub
mov
sbb
xor
outsb
mov
test
xchg
lcall
mov
mov
push
cmp
add
or
or
pop
xor
jbe
fnstcw
and
adc
dec
push
dec
add
cmpsl
xor
lods
cli
and
loope
jb
ss
mov
aas
jmp
movsl
fildll
xchg
fmul
xor
shlb
push
aad
lcall
loope
cmpsb
sub
mov
adc
aam
sbb
in
rclb
fnstenv
jb
dec
in
loopne
push
mov
mov
pop
mov
pop
shlb
data16
aas
and
add
inc
loope
pusha
fwait
mov
xor
inc
movsl
xor
push
xor
sub
out
push
sub
pop
test
sbb
xchg
imul
lods
stos
in
imul
xor
fcmovbe
pop
inc
scas
mov
add
dec
lods
jmp
testl
jle,pn
mov
stos
pusha
jbe
mov
xchg
pop
mov
pushf
push
add
mov
jg
sbb
fcoml
stos
sarb
dec
inc
dec
and
jle
add
dec
je
xor
stos
fbstp
hlt
lods
inc
int
das
aam
pop
fistpl
fdivl
in
mov
push
sahf
mov
int
push
sub
sbb
loope
mov
jb
pop
leave
in
mov
faddl
mov
add
leave
adc
data16
loop
xchg
popa
es
cmpsl
cmp
jle
dec
cmp
adc
jo
fisubl
xor
mov
pushf
sbb
and
test
ljmp
outsl
add
mov
pop
lock
push
add
mov
mov
dec
dec
push
lahf
pop
ficoms
pusha
mov
push
es
mov
sub
in
stos
in
out
dec
fsub
ucomiss
je
scas
xlat
mov
or
pop
push
jp
mov
mov
inc
inc
jge
sbb
adc
popa
push
adc
pop
inc
int3
sbb
sbb
das
push
sub
loope
ljmp
lahf
aam
or
add
addb
fs
ja
push
jne
dec
nop
cmp
xchg
inc
iret
paddq
insl
mov
test
aad
mov
pushl
push
daa
mov
inc
outsl
inc
jbe
mov
xchg
pop
imul
movsl
push
mov
mov
pop
cwtl
mov
jmp
push
ja
inc
fnsetpm(287
loop
shl
out
stos
pop
xor
adc
out
xchg
add
push
pop
lods
call
xchg
pusha
in
mov
xor
scas
and
xcrypt-ofb
cmpsl
sub
out
mov
pop
jp
xor
js
mov
inc
pop
in
xchg
jmp
lea
nop
mov
data16
jmp
and
out
sbb
test
push
jno
push
push
push
cmp
int3
sub
lcall
pop
test
sub
les
jmp
loope
jne
xchg
add
inc
jnp
jns
stos
cmp
mov
in
pop
test
inc
out
sbb
xchg
cmp
dec
sub
pop
adc
push
sub
inc
sub
xlat
mov
loop
jae
lret
and
movsb
call
cmp
sub
int
mov
in
int3
ret
xchg
ja
add
test
mov
movsl
lret
sbb
mov
xchg
cmpsl
out
test
xchg
mov
ljmp
fistps
sbb
ficoml
es
jle
adc
inc
push
fcomps
outsl
cmpl
daa
sbb
pusha
leave
inc
movsl
or
cmp
and
sub
rclb
les
out
add
fldl
jge
mov
or
or
aaa
jp
cmp
jmp
mov
and
test
jns
inc
aaa
scas
mov
mov
cmp
or
push
les
sbb
mov
xchg
jle,pn
jle
sub
mov
ret
pop
and
and
popa
jno
ret
incb
pop
loopne
xchg
cwtl
cmpsl
rcrl
test
cmp
cli
nop
pop
out
push
in
jo
nop
stc
xor
not
scas
xchg
push
xor
mov
pop
fldt
and
leave
or
icebp
and
mov
test
dec
jg
shll
mov
subb
pop
xchg
ret
mov
stc
sbb
inc
mov
testb
mov
ficompl
pop
outsb
data16
jecxz
js
out
js
mov
ja
jbe
inc
or
imul
push
xor
out
pop
test
adc
add
scas
inc
arpl
scas
lock
mov
lods
xor
outsl
scas
leave
cmp
popf
idivl
xchg
sub
mov
dec
outsl
mov
cmp
sub
mov
jne
xchg
mov
incb
stos
sub
stc
push
push
and
ja
ljmp
sahf
cmp
jp
add
push
int
idiv
out
cmp
adc
inc
in
insb
mov
xor
jmp
sub
ss
sub
sbb
lds
mov
mov
mov
lods
roll
xor
out
mov
mov
ss
cmp
daa
out
test
xor
mov
pop
shll
add
pop
jnp
daa
dec
into
addr16
scas
ljmp
mov
out
push
movsb
push
mov
nopl
lcall
out
jmp
sub
mov
int
xor
inc
sub
lea
fs
pop
adc
sbb
sub
inc
or
test
int3
in
fcompl
imul
jp
cs
adc
sarl
cmp
inc
cmp
mov
mov
jo
mov
das
ja
shlb
out
inc
in
add
aas
cwtl
and
jbe
dec
ret
sbb
incl
shr
ret
ds
push
and
xchg
pop
test
stc
sbbb
enter
subb
add
add
faddp
aaa
shll
outsl
loope
ja
pop
pop
leave
jecxz
sub
daa
daa
sub
lret
into
loopne
ret
sub
popf
sub
push
xor
push
loopne
idiv
daa
fst
cmpsb
inc
jae
lcall
getsec
mov
sub
xchg
push
mov
iret
dec
sbb
sub
push
sub
push
mov
jno
lret
es
imul
jae
scas
cmpsl
dec
fsubp
pop
pushl
lcall
rol
cmp
iret
in
adc
adc
rorl
movsl
loope
pusha
dec
das
dec
dec
in
cmp
into
pop
shll
push
rorl
fwait
testl
xor
push
cmpsl
inc
xchg
push
int
lock
sub
mov
jmp
pop
std
loope
lret
jg
or
cmp
sbb
push
rol
and
mov
jnp
dec
mov
repz
test
push
mov
cmpsb
and
popf
dec
sahf
jae
pusha
mov
imul
lahf
xchg
dec
mov
pop
cmp
mov
out
jl
pop
push
xchg
jno
cltd
add
pop
adc
sbb
cmp
cwtl
xor
shlb
or
add
and
jle
sub
and
mov
sub
in
std
jecxz
pop
sahf
dec
adc
icebp
andb
data16
cwtl
pop
mov
in
xor
xchg
lds
je
je
push
popa
pushf
pop
jmp
and
loope
sub
jmp
addl
leave
cmp
pop
lds
push
rcrb
shlb
jl
lock
ds
or
shl
mov
sbb
cmpsl
imul
xchg
rorl
add
in
or
mov
jmp
sub
push
xchg
cs
iret
add
repnz
ljmp
xchg
daa
arpl
das
inc
mov
out
cmp
xchg
dec
xchg
sub
arpl
int3
outsb
psraw
in
out
es
arpl
add
stos
push
pop
jmp
inc
ds
ja
xchg
into
rorl
daa
add
xor
sub
hlt
ljmp
enter
in
inc
xchg
stos
dec
addb
adc
or
test
shrl
lahf
js
cmpsl
xor
imul
dec
or
inc
xchg
or
sti
fwait
inc
scas
clc
dec
test
cmp
sub
rcll
aad
lods
xor
xor
sub
cmp
mov
mov
loop
and
push
cmp
and
hlt
les
fistpll
leave
jle
dec
and
xchg
test
lds
jmp
ret
scas
lods
aam
movsb
mov
sub
mov
fwait
xchg
enter
fwait
das
stos
loop
add
mov
dec
sbb
test
outsl
xor
in
shl
sbb
and
cmp
cmc
outsl
mov
in
addl
mov
xor
push
fnstsw
sbb
xor
mov
fsubs
cmp
mov
in
lods
sub
cli
mov
add
adc
inc
lods
loopne
push
rolb
push
dec
jae
repnz
xor
mov
cltd
adc
and
leave
jecxz
hlt
fnstenv
mov
cmp
in
push
leave
mov
xchg
or
xchg
andl
es
test
sbb
fiaddl
pop
push
cli
das
xor
cwtl
add
push
scas
nop
push
loop
cmp
das
js
jbe
or
cs
sbb
jl
inc
std
or
pop
dec
cmp
outsb
pop
or
subb
addr16
cli
mov
out
adc
imul
xchg
leave
movsl
sub
inc
negl
fimuls
mov
cli
sbb
pop
adc
rclb
mov
lcall
add
inc
mov
ja
mov
scas
decb
in
mov
mov
xchg
rclb
add
cltd
mov
movsl
and
arpl
mov
lret
inc
sti
push
in
add
push
out
mov
lret
mov
dec
outsl
xchg
mov
scas
mov
je
cmp
in
loop
gs
pushf
and
ljmp
in
push
pop
fld
jp
orb
push
mov
adc
test
out
and
cltd
push
dec
pop
cmp
lods
lahf
loop
and
dec
aam
xchg
scas
add
sbb
ja
into
mov
je
gs
mov
mov
mov
and
pop
jecxz
mov
mov
lods
jg
mov
leave
pop
lock
ss
mov
mov
sub
fnstcw
dec
daa
lea
out
mov
mov
out
mov
nop
pop
jbe
xor
hlt
fsubrl
push
inc
pop
mov
imull
sbb
inc
cmp
cmp
and
pop
movsb
jbe
pop
and
test
xchg
adc
cli
sub
and
pusha
popa
incb
inc
adc
push
pop
dec
aas
imul
xchg
ret
test
jne
bound
cmp
sub
or
aad
das
pop
bound
cmp
imul
or
mov
xor
jne
add
cmp
daa
xor
popa
loop
adcb
xlat
mov
lcall
repnz
leave
into
rorl
dec
stc
or
je
pop
inc
mov
fidivrl
je
push
fnstcw
jns
xchg
shrb
dec
stos
mov
push
push
mov
jp
fucomi
mov
push
cmpb
rorl
jmp
pop
loope
xchg
xor
fidivrl
testl
cmc
push
adc
rcr
pop
clc
fs
jl
testl
nop
and
mov
shrb
out
cmp
mov
int
mov
gs
mov
inc
inc
call
dec
andb
sahf
out
in
fs
loop
cmpsl
gs
cmp
or
scas
xchg
nop
dec
or
mov
es
nop
fnsave
mov
insl
push
push
push
cmp
mov
add
repz
data16
popa
fwait
cmp
leave
rclb
int3
hlt
xchg
pop
lret
cs
out
push
inc
fs
jmp
je
jae
repnz
test
cmp
jmp
jmp
xchg
pop
fistl
push
daa
inc
cwtl
dec
outsl
loopne
mov
hlt
popf
push
lds
ror
and
sub
nop
dec
fs
popf
sbb
and
mov
adc
xchg
loopne
call
jmp
cmp
sbb
sbb
jnp
sub
cmpsl
and
dec
xor
lret
xor
hlt
push
push
das
pop
push
push
stos
mov
pusha
push
test
push
clc
xchg
les
adc
or
mov
add
call
xchg
popf
dec
je
push
mov
mov
or
loopne
inc
mov
movsb
ja
lods
outsl
add
adc
inc
mov
jbe
cltd
inc
and
mov
inc
scas
push
dec
mov
add
pushf
insb
xchg
rcrl
aam
pop
adc
mov
jle
rclb
xchg
mov
lret
cmp
adc
subl
insb
lea
stos
js
push
xor
mov
mov
sbb
repz
and
cmpsb
fimuls
mov
xor
jle
stos
ja
test
dec
jl
rclb
adc
movsl
push
imul
ja
popf
idivl
pop
fdivs
test
jmp
fstpl
dec
or
cli
push
pop
sahf
jg
cld
jno
mov
xchg
aaa
jge
push
jecxz
cwtl
cmp
es
xor
add
jb
sahf
dec
jg
fisubs
iret
mov
lret
out
pop
ret
add
jnp
ds
in
sbb
inc
cmp
lea
decb
add
cmp
jge
inc
or
adc
mov
lock
jp
sbb
call
or
mov
push
add
aas
lods
push
sbb
jo
cmp
sub
rorb
sub
sahf
imul
mov
movsl
sub
mov
outsb
ffree
sbbl
pop
push
ss
mov
dec
pushf
jnp
mov
cli
arpl
inc
lods
sub
cmpsb
xor
fcmovnb
adc
into
pop
mov
inc
mov
lock
ss
sbbb
xchg
loope
fwait
mov
divl
ffreep
jl
lds
inc
rorb
push
cmc
dec
outsb
xor
sub
cmpsb
faddp
repz
pop
jae
inc
dec
int
or
xchg
lcall
add
adcl
mov
cmp
xor
cltd
jle
rcrb
test
jne
inc
std
dec
xchg
fwait
push
jp
push
shrl
js
mov
mov
outsb
es
mov
les
fstpt
push
and
pop
jmp
jb
cmp
mov
stc
jo
sbb
repnz
loop
pop
push
adc
test
adc
adc
jbe
je
mov
xchg
sub
xchg
dec
cmc
dec
mov
or
cwtl
ljmp
scas
inc
mov
jno
js
or
jb
lret
cmp
jae
out
fadd
sahf
jg
inc
inc
movsb
movsl
pop
sub
out
pop
jge
psrlq
xchg
add
movsl
push
loope
add
ret
add
xor
lods
mov
mov
mov
test
lea
mov
add
sbb
pop
stos
sti
push
mov
xchg
or
in
xor
clc
cmp
xor
addr16
mov
add
sbb
aaa
rcll
leave
int3
and
sbb
ds
cli
cmp
cwtl
xchg
add
mov
pop
call
sbb
jle
shrl
cs
add
add
mov
lods
cmp
in
jge
mov
jl
and
dec
xchg
jae
cs
pop
jbe
pop
stos
stos
cmp
js
loop
inc
push
into
dec
jge
jmp
pop
ljmp
sbb
push
fldt
jbe
lret
clc
sbbl
js
mov
sub
pop
repz
movsbl
xor
in
sbbb
mov
lods
sbb
pop
clc
sarb
das
nop
repz
cmp
ljmp
or
ds
jbe
push
icebp
mov
sbb
fld
inc
aaa
lods
pop
xlat
movsb
insl
leave
scas
fdivrs
scas
mov
inc
and
adc
xor
fxch
cmc
adc
push
lahf
xor
lahf
mov
into
xchg
stos
das
dec
cmpsl
loope
jmp
mov
and
cmp
sub
pushf
or
mov
ds
xchg
sbb
loope
pop
add
cld
cwtl
jmp
jbe
sub
lret
pop
mov
scas
ljmp
push
clc
or
and
icebp
cmp
rcl
lar
rcl
repnz
outsb
fmul
inc
inc
mov
mulb
mov
test
stos
les
mov
inc
xchg
loopne
inc
lock
stos
jb
dec
inc
bnd
je
adc
sti
sbb
clc
imul
nop
push
adc
sub
mov
cli
jle
hlt
push
bound
inc
rclb
mov
mov
add
fmulp
mov
dec
popa
push
dec
and
sub
mov
ret
pop
jle
adc
cmp
sbb
add
clc
jmp
xor
mov
jb
mov
adc
push
sbb
mov
popa
stc
ja
loope
ss
xor
loopne
sbbl
in
stos
lcall
scas
push
jp
in
mov
push
dec
mov
and
inc
cltd
xlat
jo
insl
xlat
lock
adc
cmpl
xor
jae
adc
dec
jge
pop
xor
hlt
jecxz
mov
ss
push
mov
idivb
in
stos
pop
cmpsl
lahf
jb
mov
inc
push
sub
xchg
cmc
mov
loopne
cld
jle
stc
ds
outsl
inc
ret
xchg
in
movsl
mov
rclb
loope
jbe
xchg
sbbl
inc
push
sahf
mov
cmp
notb
mov
imul
and
mov
hlt
insl
sbb
jle
add
sbb
xchg
jo
mov
jp
fimuls
popf
jbe
mov
icebp
mov
mov
inc
inc
mov
popf
es
loop
lock
addr16
push
ljmp
lahf
push
dec
dec
nop
or
ja
lahf
into
mov
xor
in
insl
out
push
jnp
add
je
gs
out
jne
sbb
and
lret
xchg
insb
push
xor
es
dec
adc
or
jb
pop
rcl
sub
add
jno
dec
pcmpgtb
in
dec
mov
mov
dec
std
mov
add
enter
pop
jg
jge
inc
cld
jmp
adc
and
mov
jmp
test
aas
add
cmp
test
jmp
and
jle
outsb
push
push
mov
test
lods
insl
fmuls
cli
std
push
lods
ss
movsb
dec
push
stos
ja
pushf
and
ljmp
insl
cmp
and
and
lock
push
mov
xchg
and
and
xchg
les
es
jg
lcall
aas
cmp
add
jbe
add
mov
adc
mov
sub
ljmp
inc
cwtl
adc
loop
mov
lret
add
pushf
jmp
test
notl
int
push
inc
jae
pop
add
pusha
arpl
int
test
gs
jge
repnz
inc
push
repz
les
cmp
mov
inc
cmp
into
adc
repnz
xor
out
mov
adc
icebp
mov
pop
push
out
divl
mov
cmova
stos
mov
xor
or
adcl
stos
call
mov
out
ror
mov
daa
pop
and
cmc
jae
ljmp
mull
mov
add
movsb
ljmp
icebp
xchg
dec
cmp
leave
sti
mov
xor
in
sahf
or
inc
rolb
and
sbb
dec
lock
pop
stc
xchg
orb
adc
add
xorb
dec
inc
lret
mov
xor
rolb
or
das
frstor
lahf
test
sub
sbb
sub
loope
ljmp
lahf
sti
mov
mov
cmp
mov
bswap
jp
cmp
sbb
fimull
or
pop
inc
jo
sub
notl
call
mov
mov
jnp
subb
cmpsb
jl
dec
negb
scas
daa
dec
cmpsb
in
orb
cmc
outsb
xor
xor
mov
xor
dec
popf
aaa
mov
or
aad
inc
fldl
rcrl
mov
xor
push
jbe
push
adc
test
dec
add
sub
sub
sub
jo
outsb
mov
pop
sub
xchg
mov
stos
jge
lods
imul
dec
insl
je
add
mov
cmp
fcom
loop
outsb
mov
cwtl
xor
dec
pusha
push
jecxz
jmp
mov
pop
mov
xchg
pop
mov
fmuls
shl
or
lods
mov
fnstcw
and
out
cmp
jns
lea
xor
out
sbb
imul
add
mov
xor
das
daa
pop
xchg
jae
ljmp
xor
pop
inc
dec
inc
mul
mov
xlat
arpl
cwtl
fwait
popf
ds
adc
pushf
test
fsubrl
dec
xchg
leave
cmpsl
cmp
fbld
lret
lahf
xor
shl
push
push
movsb
xchg
test
xlat
lret
ljmp
das
jno
mov
in
stos
out
clc
lods
jge
bound
inc
jbe
and
addr16
int
push
bound
aas
dec
inc
test
mov
sub
insl
xchg
cs
je
clc
push
out
nop
xchg
movq
cmpsb
inc
pusha
push
scas
movsl
jmp
push
xlat
icebp
sbb
add
or
dec
shlb
cmp
jmp
add
xor
or
mov
cli
xor
xor
push
lret
js
fwait
pop
jp
lods
jnp
outsb
sar
jmp
movsl
test
push
out
push
or
mov
nop
add
mov
jno
loope
sbb
mov
test
push
push
jbe
mov
sbb
lea
xor
dec
leave
std
lea
scas
xor
inc
inc
mov
mov
mov
dec
mov
sub
pop
mov
cmc
mov
lods
push
ss
mov
jne
mov
xor
in
pop
cmp
mov
lds
in
or
enter
popa
enter
imul
movsb
jne
gs
mov
int3
int3
fucomp
mov
jae
xchg
mov
adc
mov
fldl
sbb
jmp
add
push
cmp
xchg
add
pop
sbb
movsl
jnp
pop
inc
or
in
jge
std
sarb
add
dec
mov
mov
adc
sbb
jge
cmpsb
js
jle
mov
dec
mov
jb
cmpsl
std
ret
add
fnstenv
pop
adc
mov
in
lds
or
cmpsb
mov
pop
mov
mov
sub
mov
cli
push
sbb
xchg
repz
inc
leave
call
dec
xor
adc
pop
es
out
movsl
adc
mov
pop
divl
dec
sub
dec
jecxz
add
lock
fwait
pusha
sbb
inc
cmp
imulb
insb
lods
mov
jmp
cmp
fadd
pop
enter
cmpl
and
jp
adc
js
sub
int3
fwait
adc
or
in
cmpsb
jl
mov
mov
dec
sbb
mov
js
and
jbe
fists
mov
cld
lret
lahf
push
jmp
pop
hlt
xchg
mulb
xchg
ret
shrb
fdivrl
mov
mov
into
in
sbb
fisubl
mov
sub
mov
cmpsb
xchg
cmp
pslld
aad
in
xchg
mov
mov
lea
inc
dec
mov
mov
stc
or
push
insl
imul
xchg
inc
mov
mov
int
adc
scas
les
push
cld
pop
sbb
dec
std
xchg
dec
and
push
cmp
xchg
push
addr16
faddl
sub
or
aaa
xlat
aaa
std
fimull
dec
sbb
mov
pop
mov
xor
push
cmpsl
inc
inc
and
adc
les
cmc
outsb
sub
adc
inc
out
enter
mov
lret
and
repnz
les
cmp
sub
mov
pop
pop
xchg
insl
jo
mov
dec
out
gs
imul
mov
pusha
dec
mov
xorl
add
fsubs
js
and
shll
mov
adc
ret
cmp
iret
popf
hlt
ret
push
stc
int3
mov
outsb
mov
mov
fsubr
and
pop
dec
pusha
stc
pop
mov
decb
push
lock
inc
pop
cmp
push
ret
scas
jbe
mov
mul
pop
adc
sbb
insb
add
push
sbb
cmc
add
mov
gs
movsb
mov
cmp
cmc
sbb
ja
xchg
xlat
int
out
aam
xchg
repnz
adc
xor
lret
fucomi
call
repz
adc
fimull
add
test
out
and
loopne,pt
xor
pop
lret
sub
sbb
bound
loop
test
stos
adc
pop
mov
pop
js
or
fcomps
arpl
adc
sbb
cmp
jne
sbbl
popa
mov
and
pop
xor
call
and
fwait
push
dec
cmp
std
in
enter
inc
mov
inc
hlt
xor
scas
dec
xchg
push
daa
push
repnz
sub
lea
push
cld
pop
fwait
adc
sub
pop
outsb
loope
aad
fsubs
mov
xor
in
lea
adc
mov
mov
cld
ljmp
push
cmp
lds
dec
push
mov
mov
ja
mov
adc
jbe
test
mov
dec
sub
cmpsl
jns
jle
roll
cld
mov
pop
shrb
jnp
mov
jb
adc
psrad
nop
mov
push
dec
mov
imul
cmp
iret
and
in
sub
jbe
daa
iret
scas
pop
or
repnz
adc
xchg
rolb
sub
aad
xchg
lret
arpl
sbbb
mov
mov
and
sar
mov
fcomi
mov
mov
movsb
xor
mov
andb
lods
pop
pop
insb
aaa
aad
inc
push
fcomps
jmp
lods
xor
sbb
xchg
imul
sbbb
das
fcomip
aas
and
cmp
dec
pushf
mov
mov
nop
adc
jne
ror
ficoml
sub
or
xor
scas
shlb
mov
push
test
dec
lret
adc
stos
addb
lock
mull
pop
xor
push
paddusw
fwait
inc
xchg
inc
pop
jg
cmc
dec
ret
shrb
jp
push
xchg
and
popa
shlb
icebp
outsl
and
dec
mov
or
jmp
sbb
push
dec
insb
mov
sub
mov
dec
out
xor
dec
icebp
xlat
dec
imul
rolb
icebp
pusha
sbb
psadbw
pop
cltd
repnz
mov
out
stc
mov
jge
mov
lods
jmp
xor
ljmp
xchg
add
lahf
int3
pusha
sahf
fnsave
sarb
inc
repnz
out
jo
icebp
pop
icebp
push
shl
fldl
daa
test
dec
out
jmp
call
lret
movsl
sub
aad
cltd
pop
mov
je
les
jp
scas
out
fs
xor
pop
lods
aad
mov
dec
jecxz
xor
add
scas
outsl
shlb
add
shrb
and
xchg
in
add
aaa
cmp
mov
sub
cmp
out
xchg
push
rorb
and
inc
sbbb
daa
sub
rep
or
stos
stos
dec
ret
mov
xor
jg
mov
popa
jno
in
add
gs
inc
xchg
mov
dec
loopne
outsl
leave
cmp
fwait
out
ror
stos
jne
sub
call
mov
inc
ficomps
ret
in
scas
pop
dec
cmpsl
or
dec
outsb
rol
jns
inc
cmc
or
jo
lea
cmp
push
pop
mov
push
lahf
dec
xchg
loopne
pop
add
jmp
shll
jo
mov
inc
ljmp
icebp
mov
addr16
rdtsc
testb
mov
cld
jmp
mov
aas
pop
xor
jge
inc
mov
lret
mov
inc
pop
add
pop
mov
subb
gs
mov
mov
xor
inc
fwait
sub
cmpb
jno
fwait
stos
fcoml
adc
fldcw
test
mov
daa
jp
cmpsb
stc
scas
mov
mov
lret
jae
sub
in
mov
push
push
dec
sbb
cld
rorl
inc
jns
shlb
jns
and
sub
aas
pop
fcmovne
mov
arpl
inc
daa
jl
dec
push
cmpsb
jne
and
iret
sbb
imul
push
add
push
mov
cmp
mov
outsl
inc
shr
movsb
jmp
inc
cwtl
sub
cltd
in
cmp
jns
std
pop
popf
enter
mov
iret
mov
cmc
and
xchg
mov
and
mov
push
enter
sbb
mov
scas
sbb
sbb
pushf
xor
dec
or
fmull
fbstp
sub
aad
jp
nop
mov
faddl
outsl
nop
fstpl
cmp
jg
stos
sbb
rorl
push
addr16
xchg
inc
adc
repz
cmpsl
flds
js
jno
jne
imul
xchg
pop
lahf
inc
fcmovu
or
xchg
repz
lret
jmp
jb
mov
pop
mov
lret
xchg
sub
and
icebp
add
mov
push
pop
mov
scas
movsb
cli
jecxz
mov
mov
inc
inc
mov
push
pop
push
mov
push
mov
test
addr16
aad
clc
mov
call
clc
test
cmpsb
loopne
lds
data16
jge
aad
dec
dec
psadbw
loopne
jae
iret
test
loope
mov
xor
sarl
xor
rcrl
mov
cltd
fstpl
outsb
aaa
int
stc
add
xor
xor
jle
mov
pop
sahf
xor
clc
test
push
cltd
imul
loope
inc
fwait
dec
sub
dec
and
mov
sbb
movsl
int3
xor
fs
js
lret
push
cmp
aam
loope
or
das
mov
push
data16
dec
adcb
mov
push
stos
mov
int3
push
cltd
sti
add
hlt
out
les
inc
adc
jg
push
data16
das
inc
xchg
cmp
pop
add
mov
adc
hlt
fs
fimull
mov
leave
xchg
xchg
rclb
roll
mov
fimuls
adc
add
repz
repz
call
jnp
jmp
pop
add
jecxz
push
sar
test
jp
into
je
mov
dec
das
inc
mov
sbb
jns
lahf
add
push
dec
fldenv
mov
jge
mov
adc
jno
pcmpeqb
inc
lea
xacquire
rolb
mov
aas
out
stos
add
mov
pop
jp
in
xchg
ret
mov
call
rol
mov
adc
mov
xor
outsl
pop
xchg
hlt
das
or
mov
inc
push
cld
movsb
mov
out
cmp
inc
cmp
dec
dec
pop
in
jl
insb
shrl
fisubrs
adc
arpl
xchg
push
xchg
sub
imul
std
test
cmp
sbb
mov
loopne
push
cmp
xchg
inc
lcall
xchg
movsl
xchg
dec
mov
sti
sahf
sub
dec
popa
adc
fiadds
fucomip
cwtl
pop
sub
jl
xor
and
fstpt
scas
sarb
dec
hlt
pop
push
mov
call
mov
dec
xor
mov
rolb
sbb
fisubs
mov
mov
sbbb
movsb
pop
jmp
out
xor
inc
xchg
jecxz
movsb
mov
shll
pop
mov
xchg
cmp
lods
ret
push
cmpsl
and
aas
cmpsl
mov
bound
push
movsb
andl
pop
lea
push
sbb
sbbl
add
lods
mov
js
sub
movsl
je
and
aad
dec
add
push
cmp
cmp
mov
mov
push
sub
or
pusha
lds
cli
mov
rclb
xchg
xchg
and
sub
pop
jl
int3
subb
and
jg
mov
adc
scas
inc
loopne
inc
and
fcompl
sub
cmc
xor
lock
insb
hlt
es
jg
std
push
cmp
push
lea
sbb
pop
les
outsb
shrl
mov
lahf
in
fcomip
les
pop
sbb
dec
xchg
sub
sbb
add
lock
inc
adc
je
mov
aas
or
cmp
cltd
or
or
adc
push
pushf
mov
sarl
stos
lcall
sti
and
cmpsb
sub
jnp
shrb
inc
sahf
int
inc
test
cmpsl
add
pop
push
inc
addl
es
std
mov
push
push
cli
push
lret
insl
fsubl
xchg
aad
push
clc
ja
jmp
jge
cmpsb
ds
push
xor
js
lock
aaa
aam
dec
lods
js
push
lods
sbb
in
xor
push
pushf
xchg
cmpl
jg
xor
pop
pop
jnp
test
cmpsl
xor
push
enter
cmp
push
cmp
loop
jae
xchg
lods
add
cmc
daa
lea
outsb
repnz
popf
mov
movb
cmc
clc
mov
sbb
gs
xor
clc
dec
popa
shlb
mov
dec
sub
mov
add
mov
loop
push
push
fldenv
dec
adc
jge
test
jp
shll
jge
aad
shll
lea
jne
add
fsubs
fucomip
cltd
sub
mov
popf
aas
pop
js
mov
sub
jb
ss
cmp
in
adc
or
jge
les
lcall
mov
adc
or
orl
jae
sbb
lcall
aaa
push
mov
je
test
ret
push
mov
imul
lret
mov
loop
shrb
adc
pop
mov
cmp
jl,pt
mov
dec
dec
xchg
shll
mov
repnz
lods
fbstp
inc
push
mov
aam
pop
xchg
fnstsw
dec
test
xorb
cmp
scas
addl
popa
cs
loope
mov
mov
enter
xchg
add
adc
pop
push
fwait
imul
pop
fdivp
push
lock
pushf
negb
pop
movsl
push
dec
adcb
inc
mov
jns
push
int
out
inc
adc
flds
testl
push
arpl
nop
mov
loope
fninit
mov
xor
lock
jnp
cli
clc
dec
cmpsl
jg
ds
sub
sbbl
jmp
shlb
test
shlb
in
lahf
dec
push
xor
iret
xchg
mov
enter
sahf
mov
jae,pn
xchg
push
push
add
inc
jmp
call
mov
or
cmp
mov
dec
dec
sbb
inc
jno
sarl
xchg
sti
mov
sbb
pushf
inc
jecxz
cmp
xor
idivl
push
jmp
daa
jmp
cmpl
iret
fcompl
add
pop
stc
and
fstps
lds
outsl
or
lds
jnp
xor
jecxz
jne
or
mov
cmp
les
imul
jne
rcrb
leave
mov
mov
sub
mov
sbb
out
cwtl
push
cs
cltd
push
and
aad
sub
adc
test
add
jp
fstps
int
jne
add
insl
stos
jne
mov
ja
xchg
xor
sub
js
push
adc
cwtl
adc
shlb
les
dec
mov
dec
xor
lcall
mov
ds
in
daa
and
add
scas
out
adc
jb
xchg
lds
stc
xor
mov
lahf
std
pop
push
add
stc
or
test
insb
in
pop
xor
pop
dec
out
push
pop
mov
pop
cmp
fisubs
xchg
mov
andl
insl
pop
es
lahf
insl
aad
add
int
pop
lcall
pop
je
fs
xor
xchg
cld
mov
sbb
fisubs
dec
jae
cmp
jbe
push
jo
outsl
or
stos
dec
loope
addr16
add
test
xor
scas
mov
sub
or
ffree
jg
test
mov
jbe
mov
out
ret
adc
test
cltd
xor
and
aad
daa
add
xor
fstl
clc
dec
xor
in
xchg
jp
sbb
loope
sub
push
mov
xchg
dec
lods
ret
jmp
push
sbb
and
popf
mov
fwait
int
xor
les
xchg
inc
in
sub
shll
ret
inc
cmpsl
ljmp
mov
in
data16
mov
jp
and
icebp
fnstcw
adc
fsts
mov
pop
outsb
lret
xor
js
mov
cli
cmp
pop
mov
pop
and
arpl
test
inc
push
cwtl
mov
scas
cmp
cld
or
pop
inc
xchg
jmp
push
mov
fldl
push
xor
ljmp
fs
pushf
cmp
mov
shrl
in
inc
les
mov
pop
mov
gs
cmc
mov
subl
cs
sti
mov
repz
sub
push
push
and
rcr
mov
fs
and
fistpll
cmp
cmp
jecxz
into
aam
and
orl
and
mov
adc
std
add
outsb
daa
scas
jle
lods
jmp
jge
das
xlat
popa
je
mov
xchg
sti
int3
pop
lds
insl
pop
aad
ret
mov
or
jno
pop
loope
dec
sbb
loop
movsl
jns
into
cld
cmp
clc
or
mov
or
jno
repz
jmp
xor
sub
jmp
push
mov
mov
cwtl
out
push
cmp
push
xchg
mov
xor
or
data16
xor
cmpsb
xor
dec
lcall
repnz
in
xchg
das
push
sbb
out
ficompl
stos
jno
lret
cmp
pop
lods
mov
ror
and
sbb
adc
nop
pop
lret
adc
adc
jo
jb
jp
and
xor
inc
adc
xchg
xchg
add
adc
adc
inc
push
add
imul
dec
add
xor
cmpsl
sbb
sbb
scas
mov
xor
aas
xor
mov
and
cmc
lods
in
sub
mov
add
test
xor
mov
or
rcrl
fwait
mov
jb
and
aas
out
test
dec
jp
daa
movsb
inc
xor
mov
test
movsb
sbb
rcrl
inc
inc
push
pop
js
pop
pushw
cmp
pop
or
cmp
push
cmp
in
test
pop
cld
jle,pn
jnp
pop
bound
lods
mov
out
popl
mov
xor
aaa
lock
jmp
mov
adcl
sbbb
fidivs
adc
lods
xchg
mov
xor
dec
je
sub
imul
mov
pop
popa
or
push
xor
inc
repnz
jno
jle
jb
mov
xchg
addr16
push
fiadds
or
lret
sbb
subb
inc
data16
mov
mov
ds
sbb
pop
mov
aas
loopne
push
inc
sarb
sub
subb
mov
orb
iret
push
add
push
inc
testb
push
in
mov
jge
rcrl
mov
rorb
dec
push
shl
xor
lret
fucomi
fmul
lahf
pop
cmc
and
add
push
repz
cmpsl
mov
enter
jnp
pop
cmp
int3
xchg
or
xchg
fistpll
int
mov
jns
xorl
popl
and
xchg
rcll
mov
mov
jne
test
in
mov
fs
sahf
std
jmp
pusha
rcr
cltd
mov
pushf
dec
imul
cmpsb
cmpl
jl
in
and
popf
xchg
mov
inc
es
aas
notb
pop
sahf
cmp
jne
push
or
push
xchg
into
jmp
cmp
clc
call
mov
pop
loop
loop
sub
les
add
mov
pop
shl
subb
add
sub
xchg
aas
sub
adc
push
jp
scas
xor
clc
shll
mov
pop
cmpb
out
sub
jno
call
mov
fwait
ja
inc
dec
movsl
adc
in
mov
add
cmp
pop
mov
flds
pop
cmpl
fisttpll
jb
dec
dec
xchg
dec
icebp
xor
jnp
or
mov
out
stos
push
call
mov
sbb
loopne
lret
push
fsubrp
mov
mov
scas
and
inc
push
dec
mov
out
stos
or
xchg
sub
or
pop
xchg
xchg
mov
xchg
aas
add
xchg
sub
dec
mov
lods
test
mov
pop
nop
dec
adc
mov
lea
inc
cs
push
adc
test
lret
inc
mov
dec
js
mov
dec
lret
in
pop
int
addr16
add
inc
test
sub
inc
mov
xchg
mov
cmpsb
dec
call
or
jns
out
insl
test
cmp
pop
imulb
test
enter
loope
in
lahf
cmovb
and
xchg
xchg
or
das
inc
je
stos
sar
std
push
stc
je
lret
xor
stos
lahf
add
or
cmp
cmp
sbb
adc
lea
mov
mov
jmp
mov
xor
sbb
mov
mov
ficoms
sub
cmp
add
and
jnp
cmp
insl
pop
push
mov
jp
stc
cmpsb
jmp
add
jns
ljmp
mov
data16
push
mov
adc
adcb
ja
add
or
fiadds
mov
lsl
fwait
jnp
clc
push
incl
outsb
gs
cmpsb
xchg
sti
aas
mov
xchg
push
mov
and
enter
imul
cmpsl
jle
repnz
test
in
mov
dec
xor
mov
jl
cwtl
aas
jae
in
test
dec
aad
mov
cmp
lahf
pop
out
push
ds
rorl
mov
inc
repz
push
and
iret
fiadds
mov
inc
add
out
fimull
pop
xor
std
mov
arpl
push
mov
outsb
xlat
mov
inc
sbb
dec
inc
xchg
inc
jmp
cld
jp
pushf
jg
aad
or
jb
add
inc
add
add
cli
sub
and
in
pop
shr
fwait
stos
mov
mov
inc
fwait
adc
pop
incb
loop
jo
addr16
jle
in
jns
cwtl
xlat
and
xor
lea
popa
dec
fstps
lods
jns
bnd
andb
push
test
stos
sarl
test
or
cmpsl
fcoml
dec
mov
faddl
addr16
add
pop
orl
and
loopne
inc
aaa
and
push
sahf
call
xchg
call
mov
pop
mov
enter
pop
or
xor
add
pushf
mov
push
icebp
push
jae
or
mov
clc
push
rorb
adc
movsb
fwait
pop
push
sbb
fdivp
dec
cwtl
sbb
xchg
in
push
test
pop
xor
xchg
sbb
js
gs
sub
movb
adc
fcmovnb
jecxz
adc
mov
ljmp
pop
movsl
pop
out
jg
sub
or
int3
out
xchg
lret
dec
jle
dec
mov
mov
fcmovu
repz
ljmp
lock
cmp
pop
mov
ret
pop
fbld
clc
lods
add
les
ret
fxch
jge
xor
les
in
ret
and
push
popf
cmpsb
add
pop
ljmp
fwait
inc
jmp
sub
cmp
stos
jbe
sbb
fsubl
jb
fisttpl
mov
mov
sub
push
sub
and
dec
pop
xlat
dec
jmp
ja
push
pop
xor
push
repnz
xchg
mov
lret
loope
mov
mov
xor
cmp
add
lds
arpl
shl
push
or
fldt
int3
mov
mov
in
jp
xchg
data16
cmp
sti
cli
mov
sahf
dec
sub
imul
sub
insl
push
xchg
pop
cltd
icebp
inc
arpl
xchg
xor
pushf
idivl
dec
nop
insl
test
mov
inc
loope
mov
test
fwait
mov
pop
mov
mov
js
or
loope
pop
imul
das
insb
mov
sbb
movaps
or
call
push
out
jl
sbb
inc
test
ficoml
mov
icebp
mov
inc
shll
outsl
bound
mov
test
push
mov
repnz
inc
int3
mov
jge
lahf
cmpsl
mov
hlt
gs
mov
aaa
cmp
mov
fs
add
and
aas
xchg
in
in
fcmovnu
movsl
lods
andb
lea
jnp
adc
xchg
adc
or
push
cmp
xchg
mov
mov
aam
jg
nop
sahf
push
pop
mov
or
jno
dec
mov
adc
out
das
dec
dec
ret
test
jge
mov
inc
inc
popf
push
int3
xor
aam
clc
vpinsrw
cwtl
pushf
adc
fidivrl
pop
pop
jmp
mov
pop
ja
xchg
xchg
inc
out
or
scas
cmp
pusha
push
movsl
adc
into
sbb
stc
int
xor
adc
imul
fnstsw
fldenv
jae
adc
mov
mov
inc
iret
mov
cmp
out
and
lea
cwtl
jmp
xchg
ret
jge
cmp
notb
cmp
fmull
loopne
out
mov
loopne
and
pop
test
or
shlb
sub
bound
add
sub
lock
pop
inc
mov
fs
loope
out
ret
jge
cwtl
ret
in
mov
fcmovb
sbb
insl
mov
jmp
lods
int
mov
outsl
mov
xchg
mov
scas
leave
aad
addr16
mov
mov
mov
mov
lcall
mov
js
add
lcall
sbb
and
and
jg
iret
mov
xor
je
push
imul
das
icebp
enter
iret
jae
and
imul
adc
jge
scas
aad
pop
call
stos
es
ja
push
subb
or
les
xorl
inc
aad
ds
pop
test
test
or
cmp
out
mov
fucom
out
les
sub
cmp
mov
sub
adc
leave
mov
jno
leave
or
pop
mov
xchg
imul
and
pop
and
mov
insb
es
or
mov
popf
pop
aad
in
mov
push
mov
cmpsb
test
subb
pop
adc
fdivrl
adc
fisubs
mov
lahf
jnp
and
cmp
mov
aam
aas
sbb
xchg
pop
leave
dec
mov
leave
mov
mov
movsb
jge
lret
mov
jmp
fwait
fwait
cmpb
in
popa
fstp
jbe
call
push
out
xlat
lock
jnp
mov
xlat
xchg
dec
ds
and
cwtl
mov
repz
in
lds
xlat
rcl
adc
push
push
pop
cmp
or
dec
adc
call
jb
jecxz
mov
mov
adc
bnd
outsb
fstpt
jo
popa
push
scas
aam
lahf
mov
jnp
fwait
out
add
push
xor
cltd
xor
mov
and
push
and
in
negb
dec
sahf
push
cmpsb
inc
adc
imul
icebp
pop
and
cmc
in
fisubs
mov
jecxz
pushf
push
and
push
pop
std
add
rcr
or
adc
jmp
add
mov
lret
adc
cld
fs
int
in
xlat
test
mov
sbb
sub
xchg
jle
mov
mov
or
outsl
adc
enter
insl
lret
iret
frstor
jl
mov
push
daa
lock
std
mov
hlt
mov
fsubrl
adc
mov
push
dec
fwait
dec
movsb
scas
mov
push
ret
incb
ss
mov
push
pop
adc
imul
dec
add
push
movsb
cs
mov
int3
push
sub
mov
mov
out
mov
push
call
fsubrl
jno
cmp
sbb
sub
sub
loope
cld
adc
or
ljmp
js
loope
or
pop
mov
loop
sti
imul
push
sub
mov
inc
pop
xchg
push
nop
fwait
loope
scas
in
ljmp
cwtl
test
pop
dec
dec
jg
fcmovnu
pop
std
xor
rcrl
outsl
pop
jecxz
dec
dec
negb
fcmove
popf
adc
sub
data16
sahf
pop
arpl
mov
add
xchg
and
sahf
xchg
adc
neg
aad
lret
pop
dec
dec
fisttpl
rcrb
sti
dec
aad
sub
mov
rcrl
pop
lock
enter
mov
lret
int3
or
pop
cmp
outsl
lret
pop
gs
cs
sti
aad
sub
fistps
inc
inc
xchg
jnp
loope
leave
mov
repz
sbb
xchg
rcrl
cwtl
jb
dec
and
dec
mov
ds
and
jb
add
mov
loope
sahf
test
rcrl
jg
lods
adc
faddl
mov
xchg
icebp
mov
sub
das
rol
or
mov
rcrb
adc
or
cmc
repnz
cmc
sbb
dec
lret
push
mov
cmpsl
pop
inc
movb
stos
jecxz
pop
xor
test
xor
lahf
xchg
bound
pop
sahf
sbb
pop
mov
pop
xchg
cltd
sub
pop
pusha
pop
pop
stos
lock
pop
fistl
popf
test
cmp
dec
sti
cmp
call
or
mov
into
mov
push
gs
fldcw
mov
sysenter
out
mov
cmp
xchg
cmp
xlat
lods
stc
in
push
xchg
sub
pusha
or
add
jno
jns
shl
adc
inc
mov
and
jns
ret
mov
cld
sbb
ja
jbe
xor
mov
lret
lahf
push
sub
mov
sbb
pop
mov
sti
lret
adc
xchg
or
jno
stos
mov
and
sbb
pop
pop
fsubrs
mov
jp
and
scas
fimull
aam
mov
std
sub
or
xchg
push
jecxz
fisubs
idivl
fidivs
fdivrl
push
ret
push
je
lock
imul
fstps
mov
lods
adc
mov
mov
popa
inc
pop
jnp
stos
fs
lcall
xor
cmpsb
out
mov
xor
mov
or
gs
cmp
mov
sahf
call
aas
push
pop
push
jge
pop
es
hlt
mov
in
lock
cmpb
lods
push
and
dec
std
cltd
jg
ss
and
cmp
dec
adc
sub
ret
inc
jmp
mov
push
gs
jmp
mov
imul
data16
lret
imul
imul
enter
mov
pushf
cmc
dec
pop
jecxz
test
mov
mov
dec
int3
push
xor
cmp
fnstenv
fidivrl
xchg
or
mov
and
mov
mov
dec
movsb
adc
fwait
imul
popw
ret
sub
repz
test
jb
and
pop
test
cmp
dec
leave
gs
pop
jo
mov
shll
icebp
sub
pop
cmc
mov
push
out
adc
js
dec
inc
rorl
xchg
xlat
inc
push
clc
xchg
scas
outsl
xchg
lock
int3
or
xchg
insl
adc
movsl
aas
incb
enter
lret
and
ficoml
cli
mov
nop
loopne
pusha
push
int
adc
sub
ret
jns
bound
pusha
dec
call
push
or
mov
mov
mov
push
js
adc
push
imul
pop
jnp
sub
push
mov
ror
pop
movsl
call
lret
xlat
iret
shl
fcomps
fnsave
cwtl
dec
sti
cld
movsb
jns
push
push
inc
jo
xchg
fmull
lret
xchg
sub
shrb
aam
xchg
jmp
outsl
inc
in
or
xchg
and
fstpl
sub
inc
push
imul
loopne
push
mov
sbb
std
sub
xorl
enter
sbb
cmp
xchg
dec
clc
jle
mov
dec
push
mov
jae
pop
xchg
pop
pop
ja
mov
xor
pop
xchg
push
xchg
in
ljmp
fs
aam
aas
jne
pop
shll
shr
lods
sub
mov
cld
mov
int3
addr16
cmp
jmp
test
aad
inc
jmp
lret
subl
add
std
es
cmp
dec
movsb
or
out
test
clc
out
movsb
push
inc
fiadds
push
test
ljmp
jmp
lds
repnz
xor
jno
mov
push
das
aaa
or
push
jo
je
testl
je
mov
arpl
push
ja
into
adcb
in
push
mov
enter
mov
rorb
fdivr
rcrl
aas
pop
addr16
repnz
jle
lea
add
leave
sti
cmp
dec
add
movsl
std
dec
push
aaa
pop
jo
mov
loop
fwait
pusha
and
subl
mov
fadds
xchg
leave
pushf
popa
add
sbb
sub
cli
mov
mov
test
cmp
outsl
sbbl
and
mov
cmp
sub
insl
or
dec
outsl
add
call
lea
or
inc
aam
sbb
int
fildll
cwtl
lret
or
xchg
sbb
mov
shl
pop
mov
mov
js
mov
iret
loop
movb
adc
dec
pusha
orl
mov
or
dec
xor
roll
mov
int
cltd
dec
mov
js
cmc
pushf
adc
inc
pop
inc
mov
adc
daa
mov
mov
fildl
xchg
xor
push
sub
push
inc
add
jl
aas
and
js
int3
cmp
jb
int
into
insl
scas
mov
mov
or
nop
test
fidivl
fdivl
iret
aaa
xor
sub
sbb
add
daa
inc
sub
xor
dec
and
cmp
mov
loopne
pop
inc
in
loop
or
adc
inc
and
shl
inc
movd
push
xlat
xor
test
mov
cmp
jb
in
dec
mov
mov
test
cmpsl
jne
insl
cmpl
std
femms
adc
sub
mulb
sub
cs
rcrl
jl
or
mov
xor
sbb
mov
sarl
or
fistl
out
jmp
sbb
push
mov
in
dec
mov
call
inc
arpl
sub
jo
mov
pop
xor
mov
and
roll
adc
call
xchg
arpl
xchg
xchg
loopnew
sub
test
mov
lcall
jp
xor
sub
cltd
xchg
pop
push
shll
add
sti
fs
mov
push
push
dec
jo
push
xlat
pop
jg
or
cwtl
out
je
inc
xchg
fwait
das
add
cmp
add
push
jp
jecxz
or
adc
je
inc
lret
mov
pop
iret
cmp
rcll
or
gs
rcr
out
out
cwtl
dec
fcomps
and
loope
mov
das
pop
lret
pop
mov
jbe
cmp
dec
and
test
mov
jmp
orb
and
gs
or
sahf
cmp
mov
shll
insb
popa
mov
lret
xor
jns
sbb
imul
pushf
jg
mov
sub
cmp
pusha
jg
jl
bound
bound
mov
cld
mov
pop
lret
xor
mov
leave
jnp
dec
lock
out
mov
js
out
fcoms
xchg
xchg
in
cld
cmp
push
mov
xchg
cltd
mov
or
mov
sbb
xchg
mov
daa
stos
cmp
pop
pusha
scas
aas
scas
jnp
xlat
mov
xchg
ja
das
push
or
lea
cmpsl
pop
add
pop
cmovns
push
jns
std
arpl
sar
ja
ret
jmp
sarb
add
loopne
sahf
inc
into
mov
int3
inc
in
xchg
movsl
mov
cmp
fdivrl
cwtl
push
stos
adc
sub
push
jmp
adc
andl
add
ja
pop
xchg
xor
and
std
xchg
hlt
adc
jo
lahf
xor
and
mov
dec
add
out
push
sbb
sbb
jo
or
jmp
mov
mov
push
arpl
mov
hlt
mov
jp
mov
and
shlb
adc
daa
movntps
iret
mov
testb
push
push
jecxz
and
lods
cli
and
jp
cmc
jne
insb
out
lea
xchg
mov
xlat
dec
out
rcll
adcl
cs
sub
cli
ret
std
pop
push
aaa
mov
push
fs
cld
xorl
insb
jns
cli
cmp
and
imul
rorl
std
js
mov
inc
int3
mov
xchg
xchg
cmp
and
adc
lods
hlt
push
sbb
stos
push
mov
adc
enter
cs
jb
push
xchg
mov
cs
push
stc
stos
mov
cmp
and
cmp
mov
or
xchg
add
ret
xchg
movnti
out
mov
ret
rcrl
insb
adc
insb
aaa
sub
jnp
inc
pxor
xchg
sub
mov
cmp
add
sub
and
adc
test
sbb
popl
fwait
sbbb
test
fnstenv
int
push
sub
xor
in
sbb
mov
pop
shlb
sub
cmp
mov
inc
add
lcall
sbbb
iret
lahf
adc
ficomps
push
addr16
cwtl
mov
pop
push
xchg
in
jne
xor
mov
sahf
push
inc
int3
fisttpll
fnstsw
push
sub
loope
cld
das
jmp
mov
insb
cmpsl
clc
clc
adc
and
ss
stc
cmp
shll
or
lret
mov
jae
mov
cmc
loope
in
out
adc
test
lock
and
std
and
mov
pop
sub
nop
push
stos
lods
mov
in
xor
aam
xchg
xchg
hlt
pop
cltd
adc
and
out
xor
mov
xchg
cli
lock
adc
push
cmp
jbe
iret
push
xor
popf
loope
lock
xchg
and
addr16
dec
loopne
pusha
and
mov
fldcw
ret
mov
int
jnp
push
cmc
sub
pushf
loop
mov
or
push
inc
in
lods
jne
jg
test
mov
pop
jl
and
enter
cmc
pop
sub
sub
jmp
sub
adc
jns
jns
xchg
mov
adc
hlt
outsl
push
test
sar
mov
mov
inc
clc
fs
push
ret
xchg
add
sub
jae
xor
sbb
and
mov
sub
mov
orb
push
inc
lret
xlat
daa
pop
dec
xor
cmp
jbe
scas
or
idivl
mov
cmp
aad
shlb
sahf
mov
stos
mov
jl
subb
loop
jg
and
ret
mov
xor
ss
leave
lea
jne
leave
stos
adc
or
pop
mov
lods
aad
sbb
xchg
push
fldt
push
mov
repz
subb
lods
ja
loope
mov
cmp
lahf
test
sahf
cltd
fimuls
andb
push
xor
pushf
sbb
jbe
adc
repz
mov
lret
xlat
repnz
xor
out
push
lret
jnp
scas
rorl
out
xchg
dec
scas
outsb
xor
xor
lahf
in
add
ror
sub
adc
cmp
mov
pushf
jno
call
sbb
mov
stos
xor
sub
aaa
push
jb
cmp
pushf
sarb
adc
cli
and
pop
lods
xchg
hlt
lea
push
dec
int3
mov
xchg
jae
xlat
mov
xlat
clc
or
addr16
push
xor
cwtl
push
xchg
into
aaa
push
lea
and
xchg
js
pop
mov
mov
cld
iret
mov
xchg
mov
mov
std
dec
jae
insb
in
outsl
mov
add
addr16
dec
inc
inc
inc
clc
xor
clc
and
fcmovu
pop
movsb
movsb
push
sbb
test
test
dec
fidivl
outsb
arpl
pushw
outsb
mov
inc
jno
in
add
sbb
sbb
mov
jns
push
dec
dec
or
inc
add
jo
add
shll
and
add
fbld
fldl
mov
pop
fcoms
dec
int
push
fucomi
jae
fiadds
lds
add
pushw
jnp
sahf
popf
jb
loopne
xchg
dec
pop
inc
fimuls
mov
leave
cmpsb
xchg
ret
rclb
add
pop
jmp
je
cltd
jp
mov
negl
pop
es
push
sub
out
movl
pop
pop
sbb
xor
jmp
test
rol
dec
ffree
mov
addr16
adc
imul
jecxz
mov
xor
mov
iret
pop
push
outsb
cld
inc
xor
outsb
int3
mov
xchg
fmuls
xor
fidivs
test
push
clc
fcoms
mov
mov
jp
sahf
pop
loope
inc
mov
lcall
jg
mov
lds
aaa
popa
shll
or
mov
cmp
mov
sub
shll
or
mov
cld
fsts
aaa
sbbb
sti
loope
xor
mov
shl
mov
mov
jb
and
fwait
in
and
mov
outsl
push
xor
sbb
push
mov
and
lahf
icebp
dec
inc
insb
mov
push
pop
popa
ss
cmp
lahf
mov
pop
sub
mov
mov
jp
pop
shl
mov
pushf
js
out
lcall
scas
aam
or
xor
and
jg
xlat
sub
sarb
push
mov
loope
aaa
push
dec
cmp
jge
daa
mov
test
lret
adc
push
pop
imul
idiv
dec
xor
mov
stos
cltd
push
loopne
int3
stos
mov
or
pop
adc
sbb
nop
sub
push
inc
ss
xchg
sub
lods
inc
mov
add
fs
jle
cmp
cwtl
sub
fwait
jnp
mov
pmulhw
aam
test
fstl
subl
in
fdivrs
cmp
adc
pop
ja
sbbb
movsl
popa
dec
sub
mov
mov
mov
js
mul
pushf
loop
sbbb
orb
xchg
dec
pop
mov
jb
std
std
mov
pop
mov
add
daa
mov
mov
push
mov
pop
mov
pop
out
bound
cmp
inc
jnp
cmpsb
fdiv
es
xchg
ret
divl
add
lock
icebp
cmc
lret
inc
cmpsl
lahf
and
jae
push
pop
data16
sub
fstl
mov
lahf
fimuls
xchg
sub
pop
push
loop
add
sbb
mov
into
rol
adc
imul
jo
inc
pushf
pop
pop
xchg
inc
cmp
xchg
fsubp
jmp
jb
dec
in
adc
std
lret
cmc
inc
push
repz
das
stos
xor
insb
and
popa
sub
add
inc
enter
pusha
aas
mov
cmp
bound
jmp
pop
push
mov
ficomps
in
clc
pop
or
fistpl
and
mov
jmp
sub
in
xchg
ja
lcall
mov
jg
xchg
in
notb
mov
out
push
jge
in
xor
xchg
xchg
scas
rorb
jg
repz
adc
xor
add
mov
mov
andb
das
cmpsb
addr16
mov
pminsw
cmpsl
and
jnp
mov
fldl
adc
cmp
or
lret
inc
lcall
lock
mov
cmp
xor
rolb
and
lods
dec
and
add
fildl
mull
jecxz
insl
xor
int3
shl
sahf
lock
mov
cli
push
xlat
or
pop
pop
mov
mov
sub
repnz
mov
lret
sbb
jecxz
adc
mov
adc
pop
fcmovne
shlb
faddl
fidivrl
sarb
out
das
jbe
pop
dec
lret
ret
rclb
sbb
inc
xchg
data16
es
aam
js
call
sub
ret
in
inc
mov
inc
outsb
fs
sarb
jge
stos
xlat
loop
inc
lea
ljmp
pusha
and
mov
popa
scas
cmp
dec
sahf
scas
int3
mov
pop
sub
pop
dec
mov
push
leave
addr16
push
jne,pn
mov
pop
sbb
mov
mov
rolb
outsl
sbb
rcrb
pop
mov
xor
bound
scas
jne
test
clc
in
out
xchg
leave
push
xchg
push
loop
repnz
fwait
rcll
ss
or
stc
push
and
cmp
or
in
mov
mov
push
gs
jo
imul
fildll
sub
mov
bound
shlb
inc
data16
scas
xchg
sbb
aad
negl
into
repz
pop
ljmp
xchg
sarb
add
call
pop
pop
pop
mov
cmp
jg
inc
adc
add
mov
and
popf
cmpsl
stc
jmp
push
add
pushf
sub
scas
outsl
insb
pop
fiaddl
call
aam
cmp
jnp
add
lret
cmpb
lods
lods
aad
daa
adc
rcl
jns
dec
lahf
push
sti
out
and
dec
mov
in
pop
cltd
aas
sbb
and
push
cmp
out
or
mov
mov
jmp
inc
push
fistpll
dec
lock
jecxz
push
ja
xchg
stos
cmp
dec
inc
es
sbb
out
cmpsb
add
fcoms
nopl
or
inc
mov
lahf
add
insl
adc
or
bound
mov
xchg
jl
clc
or
xor
adc
xor
out
inc
aad
loop
add
cmp
pop
push
sbb
enter
cld
pop
notl
aad
leave
fbld
push
fnstenv
icebp
push
and
in
ret
test
mov
test
push
and
daa
xor
pop
adc
mov
jle
sbb
push
add
xchg
or
jg
sub
adc
stos
mov
ret
mov
inc
dec
outsb
sahf
or
sbb
lcall
adc
addl
cmp
adc
adc
std
and
sbb
add
push
js
stos
mov
cmp
dec
lret
cwtl
cmp
pushf
adc
notl
call
push
cmp
sbb
js
test
pop
movsl
sarl
pop
sbbb
std
jae
push
inc
ja
fists
or
jno
pop
shrl
pop
mov
movsb
rorb
xor
mov
inc
sahf
sbb
jle
iret
and
andb
xchg
lahf
arpl
jp
jns
stos
add
cltd
out
add
pop
daa
sbb
repnz
sbb
adc
mov
adc
ds
sbb
xchg
in
and
lahf
dec
sub
jmp
dec
lahf
xchg
scas
pop
xchg
cs
fs
ficompl
cwtl
movsl
outsb
lcall
mov
mov
dec
ret
jge
xor
pop
xchg
fadd
idivl
mov
push
or
dec
mov
adc
xor
mov
xchg
nop
insl
pop
pusha
or
shrl
popf
fcomps
mov
fprem
hlt
cmp
cmp
dec
stos
and
jne
jno
arpl
and
fldcw
xchg
ret
inc
push
mov
dec
fwait
imul
fstl
add
es
mov
outsl
test
cltd
lock
mov
dec
int3
cwtl
fdivrl
rclb
pop
cmp
cwtl
popa
pop
sbb
or
leave
jp
lahf
movsl
mov
daa
mov
mov
movsl
mov
int3
add
jl,pn
and
je
loop
inc
and
shll
or
xchg
pushf
lea
popa
sub
jmp
setne
cmp
inc
and
push
adc
dec
dec
sbb
rol
jmp
and
pusha
pop
and
imul
lret
divl
into
xchg
add
cmc
pop
pop
pop
add
shrl
pop
and
jbe
or
cmpsl
out
mov
cwtl
test
cmpsb
xor
mov
inc
movsl
push
jg
cli
mov
mull
fs
pop
jns
pop
out
xor
and
out
xchg
mov
stos
or
pusha
sub
pop
hlt
push
dec
ret
dec
mov
mov
int
cld
js
sub
mov
push
xor
repz
jno
je
clc
pop
and
add
jbe
cmp
mov
cmp
dec
pop
pop
and
sub
sarl
pusha
test
icebp
mov
push
mov
addb
scas
in
mov
repz
lock
push
cmp
or
or
cld
aas
mulb
in
je
andl
in
insb
daa
ret
inc
jo
fisttpl
xchg
jge
das
pop
mov
mov
sbb
daa
lret
dec
xchg
mov
enter
cmp
jno
jge
test
aas
xlat
jge
shlb
sub
sub
and
in
fcmovu
jae
jo
roll
insl
add
cmpb
int3
mov
test
outsl
adc
pop
xor
adc
fbstp
sarb
in
adc
test
fsubrp
jne
dec
jl
mov
jmp
cs
mov
adc
clc
add
loopne
ret
push
jp
mov
ret
daa
test
stc
xchg
sub
in
jo
cmp
cmpsb
or
mov
push
sub
pop
lret
in
mov
xchg
mov
out
movsb
les
xchg
cmp
push
test
scas
mov
cmp
add
jb
cmc
lcall
rcr
push
xchg
push
push
mov
icebp
pop
mov
pop
lret
stc
push
cmpl
cmp
xchg
scas
shlb
xor
xchg
fisubrs
xor
add
dec
test
pop
inc
orb
xor
daa
loop
mov
xchg
psubsw
cld
call
inc
fadd
inc
inc
push
test
mov
pop
jp
xchg
icebp
push
dec
clc
jo
mov
jl
sbb
jns
xor
imul
xchg
mov
iret
out
adc
gs
rcrl
dec
sub
pop
call
scas
xchg
je
cmpsl
inc
dec
xchg
pop
mov
and
adc
jnp,pn
test
lds
into
inc
xchg
cmp
pushf
mov
and
sbb
sbb
mov
xchg
clc
or
lods
or
sub
ret
lahf
xchg
loop
movsl
inc
insl
xchg
lret
mov
call
iret
jnp
adc
mov
and
cwtl
mov
into
ljmp
jns
repz
in
xchg
cmp
and
bound
mov
mov
stos
mov
inc
fiaddl
jmp
aaa
cmp
pop
push
int3
out
testl
mov
jmp
hlt
sub
call
jp
test
ljmp
fwait
xor
fldcw
cmpsb
jge
rep
ljmp
insl
std
stc
pop
lret
push
pop
sub
aad
adc
shlb
push
adc
nop
icebp
in
imul
jecxz
call
bound
push
imul
add
out
inc
cmc
sahf
lods
dec
mov
cs
scas
add
cmp
or
repnz
pop
loop
leave
enter
test
movsb
pop
mov
movsl
in
mov
sbb
xchg
in
loope
fcomps
sbb
mov
xor
or
jb
bound
test
inc
popf
cmp
cmp
push
jmp
inc
fwait
cltd
push
dec
movsl
jl
es
negl
push
dec
nop
popa
dec
stos
ror
leave
push
xchg
pop
xchg
pop
outsb
outsb
dec
lods
push
lods
gs
imul
pusha
stc
loopne
nop
insl
push
push
sub
mov
pop
mov
push
and
iret
jb
xchg
imul
cmpsb
add
lods
mov
das
mov
outsl
ljmp
flds
subb
or
jl
dec
ljmp
and
into
dec
push
incl
push
xchg
and
xlat
push
mov
xchg
jmp
out
xchg
shlb
cmp
shl
cmpsb
inc
ja
jmp
in
or
ds
cld
jne
lahf
dec
aad
jl
stc
and
fcoms
ret
into
xchg
fs
xor
jecxz
mov
in
push
insl
cmc
mov
pop
sbb
xor
jae
dec
pop
pushf
mov
in
xor
adc
push
lcall
push
insl
pop
fucom
mov
pushf
cmc
in
div
jp
xchg
insb
lods
cld
jmp
mov
or
into
jmp
or
scas
sbb
andl
pop
mov
loopne
int
aaa
push
mov
cmp
push
inc
fldl
ljmp
out
fmull
lcallw
seto
in
and
push
imul
mov
lcall
xor
push
sbb
pop
or
pop
cmc
hlt
sub
sub
orl
push
imul
xor
shrl
cmc
xchg
dec
mov
xchg
xchg
adcl
push
xchg
xchg
fwait
outsl
push
add
adc
jno
repz
out
sub
divl
pusha
test
pop
mov
into
and
rcrl
sbbb
into
mov
and
push
mov
hlt
fucomp
cs
cli
push
fiadds
mov
loope
xor
imul
xor
lret
pop
imulb
cmc
in
orb
leave
arpl
mov
push
lret
iret
pop
push
cmpsb
arpl
nop
sub
pushf
fstp
push
pop
inc
and
fadd
cltd
jp
mov
dec
inc
out
insl
dec
xor
adc
or
jl
jns
repz
addr16
sub
push
jp
lret
cmp
aas
push
lods
rcl
push
fldenv
xchg
arpl
push
and
or
inc
xchg
in
mov
ret
popf
mov
shll
mov
test
mov
adc
and
fldln2
push
insl
in
mov
push
dec
jnp
pop
cmpb
cld
add
add
cmp
xchg
ret
sub
pop
dec
ljmp
pop
jbe
mov
push
rcl
jecxz
push
in
xor
lcall
sub
fneni(8087
scas
loope
movsb
or
jg
aam
or
cmc
xor
cmp
mov
cltd
ljmp
dec
fmull
out
hlt
icebp
or
outsl
das
push
xchg
cmp
sub
mov
and
xor
adc
icebp
sar
mov
or
clc
xchg
jecxz
enter
stos
mov
adc
sub
jecxz
dec
xor
pusha
xchg
dec
iret
fwait
xor
fisubs
nop
cmpsl
leave
stos
shrl
gs
test
mov
test
fcom
and
mov
mov
xor
fcmove
pop
scas
lods
cld
and
dec
jae
sub
jmp
lods
in
call
sbb
aam
es
sarl
add
jmp
mov
cmpsl
push
shrb
aad
daa
mov
movsb
push
cmpsl
inc
pop
sbb
rolb
adc
inc
mov
mov
mov
es
cmpsl
notl
enter
roll
push
sbb
push
jge
mov
ret
insb
pop
mov
test
div
in
mov
call
dec
or
pop
fildl
lret
in
mov
inc
lea
jo
dec
mov
cmp
sahf
mov
or
sub
aas
sub
and
movsb
mov
jae
mov
jle
sahf
dec
dec
sbb
add
sub
cmp
je
ficompl
cmpsl
or
lds
nop
adc
clc
mov
xchg
pop
jb
xor
bound
out
jp
mov
mov
int3
and
jle
stc
mov
pop
add
and
sbb
fdivrs
dec
icebp
xchg
loope
lcall
popa
sbb
pop
lods
sub
pushl
dec
jno
xchg
dec
inc
test
imul
fidivrl
push
into
addr16
sarb
jmp
fdivs
mov
push
xor
fdivrp
jnp
mov
daa
dec
sti
lock
sub
and
sub
mov
cmp
xchg
repnz
dec
fbld
es
lods
ss
out
jmp
ret
inc
mov
mov
mov
and
outsb
push
push
cmp
sbb
fwait
pop
sub
in
and
push
mov
inc
lret
jbe
inc
jae
cmp
nop
into
sub
shlb
mulb
sub
test
add
sub
notl
push
jae
leave
and
and
ret
sahf
insl
inc
fisubl
in
jecxz
mov
jno
mov
xchg
out
iret
mov
mov
push
fiadds
jecxz
jecxz
imul
loop,pt
jnp
add
mov
ds
aaa
fstl
lock
shll
loop
lods
pop
stos
pushf
cld
jge
sub
push
mov
add
fnstcw
xor
jmp
sbb
xchg
add
xor
insb
mov
dec
add
inc
and
int3
out
mov
push
cmpsb
adc
pusha
xor
dec
add
adc
add
dec
mov
lods
pushl
in
xchg
add
sarl
mov
shlb
sub
mov
shll
cmc
jp
push
inc
pushf
bound
das
ficoml
pop
inc
sub
push
repnz
cmpsl
mov
sbb
into
aam
jne
jb
loop
negl
repnz
push
fs
in
inc
in
mov
arpl
imull
addr16
sbbl
hlt
sbb
mov
mov
sub
in
mov
jmp
dec
sti
lea
cmp
push
pop
and
xchg
cmp
aaa
cli
insl
dec
pop
repz
push
inc
in
mov
adcl
and
in
jnp
add
lods
ss
ss
mov
jmp
mov
mov
pop
adc
loop
push
in
dec
ss
movsl
push
lret
push
loope
cli
xor
xchg
mov
fildl
ret
scas
adc
xchg
cmc
jno
dec
xor
leave
or
les
loope
cld
push
sbb
insl
xchg
adc
iret
iret
pop
repnz
pop
bsf
jnp
jmp
out
fisubrs
inc
loope
jg
aas
sub
in
add
or
hlt
or
hlt
mov
sub
stc
mov
xchg
jmp
inc
pop
cli
push
jl
or
dec
push
fmuls
fdivs
pop
mov
and
mov
xchg
adc
or
aam
fs
int3
xchg
dec
lahf
xchg
xor
and
fdivrp
sbb
dec
fdivrs
xor
stos
lret
jbe
hlt
inc
pop
repnz
cmpl
inc
fdivr
nop
rclb
xchg
jno
movsl
sub
data16
fnstsw
jp
xchg
add
aas
std
push
pop
lods
sub
outsb
movsl
roll
inc
push
mov
jp
sbb
sub
mov
stc
or
fnsave
mov
ret
mov
or
lahf
mov
mov
lret
add
mov
mov
icebp
ja
jecxz,pn
adc
in
xchg
shll
out
or
add
push
into
pop
xchg
jmp
cmp
cmc
imul
jb
jp
and
mov
dec
mov
pushf
stos
mov
testl
sbb
push
sbb
rcrb
add
pop
jne
pop
mov
std
xor
sub
ret
test
aas
mov
lods
scas
mov
lcall
push
inc
push
jmp
dec
xor
outsb
adc
pop
mov
dec
addl
notl
mov
jmp
movsl
jge
stos
mov
xchg
pop
jmp
adc
sbb
lcall
loope
and
out
loopne
adc
lds
push
std
mov
stc
mov
sbb
int3
adc
pop
dec
int3
or
mov
out
push
cmpb
adc
or
pop
or
mov
lds
repz
cmp
pushf
negl
sbb
test
mov
push
push
adc
icebp
xchg
inc
cmp
add
xchg
mov
mov
dec
dec
mov
mov
shlb
cld
cmp
cmp
and
mov
inc
dec
data16
jge
lea
data16
clc
js
jne
iret
in
adc
mov
sarl
enter
mov
sbb
push
adc
add
mov
or
push
shlb
xchg
pop
insb
and
pop
cmp
sti
mov
aad
dec
xor
mov
sub
xor
shll
pusha
sti
fidivs
sbb
jns
lcall
xor
in
jnp
or
loope
and
pop
imul
cmp
push
jo
mov
loope
xchg
out
filds
jp
lock
xor
pop
push
pop
push
pop
cmp
in
stos
push
cld
add
dec
repz
cmp
mov
imul
mov
loope
mov
pushf
sbb
mov
cltd
movsb
mov
pusha
dec
jecxz
inc
sbb
inc
inc
out
negl
fidivs
cmp
inc
sarl
imul
bnd
loope
jne
lret
repz
sbbb
enter
sbbl
add
dec
movb
sar
pop
mov
inc
pop
xchg
inc
das
iret
sbb
jmp
mov
mov
and
ljmp
or
mov
je
test
or
insl
jmp
fsts
movsb
arpl
mov
add
rolb
cmp
das
xchg
jp
or
stc
orb
imul
ret
pusha
cmp
in
fwait
and
inc
idivb
mov
inc
lods
lds
in
sub
jnp
push
pop
mov
cmp
pop
iret
ss
mov
nop
mov
sahf
sub
jp
imul
scas
out
mov
mov
scas
pop
es
pop
inc
mov
sbb
push
loope
divl
rcrb
dec
dec
cld
xchg
mov
ja
cli
fcoms
xchg
scas
aad
out
test
pop
fbstp
repz
arpl
testb
jno
lock
adc
adc
sbb
lahf
add
out
inc
test
js
bound
pop
dec
ret
fcoms
cmc
jmp
sub
lods
push
es
jb
stos
shrl
pop
sbb
xchg
fs
xchg
stc
in
adc
mov
sbb
inc
cmc
mov
xor
pop
leave
mov
shll
xchg
xchg
pop
sub
call
inc
cmp
jg
lods
sub
out
sbb
inc
pop
ja
cmc
out
mov
clc
dec
cli
mov
inc
dec
movb
xor
ss
xchg
outsl
popa
lock
mov
imul
mov
push
dec
lods
xchg
loop
sbb
dec
bound
loope
push
lcall
cmp
fwait
add
add
clc
sbb
and
fcomi
and
pop
cmpsb
add
pop
cmpsb
mov
cmp
sub
mov
in
push
xchg
sub
add
loope
and
jle
xor
and
imul
add
shl
xchg
cmp
cltd
movsb
inc
in
adc
andb
mov
mov
lds
lcall
add
xor
cmpsb
push
das
lret
mov
sub
outsb
sub
int3
movsb
dec
sbb
mov
mov
repnz
dec
cmc
jl
add
push
shrl
mov
pop
ss
adc
sbb
jno
shrl
pop
adcb
xchg
mov
pop
or
jg
cmp
jno
add
outsb
sub
leave
shr
call
xchg
jl
mov
stos
jge
fnsave
and
nop
imul
rolb
sarb
clc
in
pop
mov
jg
jns
sahf
stc
je
jns
sahf
test
dec
inc
mov
mov
outsl
dec
iret
xor
and
sbbb
aam
and
xchg
leave
jns
mov
shrb
int3
out
stos
aaa
int
pop
adc
insl
and
xchg
mov
cmp
lret
inc
mov
mov
loope
jns
sti
shrl
mov
and
fistps
cwtl
out
ds
jne
xchg
xchg
mov
scas
in
aad
sub
aas
frstor
test
inc
sub
or
lea
xchg
adcl
or
data16
in
gs
arpl
mov
jmp
pushf
add
cmp
or
cmp
lods
aaa
mov
mov
fdivrl
loopne
and
add
popa
or
test
cmp
and
mov
inc
insb
mov
xor
scas
jecxz
shlb
mov
add
sub
add
out
sbb
rcr
mov
push
call
rorb
ficomps
stc
cld
imul
cmp
ret
xor
jecxz
in
cmpb
cmpsb
add
jnp
add
mov
int
and
inc
sar
xlat
imul
push
add
dec
cli
jmp
inc
popa
inc
jmp
xorl
cmpsl
rcl
push
sti
dec
popa
inc
dec
mov
stos
clc
xor
mov
mov
xchg
addr16
pop
jmp
mov
cld
mov
inc
push
mov
cwtl
jnp
mov
and
mov
subl
rol
movsb
inc
push
cmp
mov
xor
idivb
roll
in
adc
cmp
xchg
sub
call
xchg
pop
inc
stos
pop
mov
mov
subl
cmpsb
adc
push
stos
add
add
jp
mov
dec
fwait
mov
and
add
bnd
pop
scas
sub
inc
insb
pop
sbbb
pop
das
pop
push
sbb
sub
cmp
xor
clc
push
cmpsb
scas
sarl
xor
sarl
stc
push
inc
cmp
cmpsl
adc
notl
inc
dec
push
push
shlb
add
stos
rorb
jno
adc
xchg
addr16
fidivrl
and
out
xchg
mov
add
jnp
push
mov
icebp
std
pusha
sahf
or
push
jmp
je
out
loop
adc
loopne
popa
scas
fistpl
into
pop
sub
repnz
or
lods
das
bnd
jg
fistl
mov
pop
xchg
and
mov
jne
mov
adc
sub
add
in
mov
or
in
dec
lock
cwtl
cmp
jae
jl
out
push
dec
rorb
out
lea
aam
aad
inc
ljmp
loopne
cwtl
stos
jle
xchg
sub
int
repnz
and
push
insl
call
mov
ret
lret
mov
or
xchg
les
mov
and
mov
jb
jae
aam
incb
sbb
es
repnz
not
add
push
xchg
or
xchg
rolb
and
out
dec
pop
push
fstl
mov
push
pusha
das
mov
repz
jmp
mov
xor
adc
dec
pop
sbb
int3
lret
xchg
sbb
mov
mov
mov
addr16
or
hlt
pop
mov
mov
gs
push
mov
mov
into
jo
outsl
dec
rcll
or
xlat
testl
or
or
insl
adc
jecxz
lods
sbb
mov
loope,pt
adc
fcom
xor
ljmp
popf
xchg
sub
lds
dec
aad
mov
adc
movsb
mov
enter
xor
stos
mov
adc
scas
push
jle
pushf
aam
mov
arpl
movb
mov
shll
jg
je
xchg
or
mov
testl
or
mov
dec
daa
enter
mov
js
add
mov
xor
mov
mov
test
scas
ja
les
sbb
pop
lret
scas
icebp
ret
aad
lods
adc
and
lcall
sti
push
pop
dec
hlt
aad
mov
mov
lahf
xlat
xchg
mov
dec
fs
data16
cmp
out
inc
enter
add
sbbl
les
xor
xor
or
fwait
mov
cmp
aaa
orb
icebp
sbb
mov
xchg
push
adc
sahf
pusha
fs
mov
mov
fwait
ja
push
mov
jo
xchg
in
pop
loope
sub
stos
aam
mov
in
adc
lock
add
ret
out
add
les
add
or
sbb
shl
ds
push
jmp
aam
xor
mov
or
jne
xchg
cmpsb
bnd
inc
sub
inc
or
mov
aad
pop
pop
out
xor
mov
or
sub
imul
push
lock
cltd
add
rol
mov
icebp
cmc
jge
sub
icebp
sbb
icebp
pop
xchg
jp
es
setb
add
repnz
or
xor
inc
test
or
adc
adc
add
enter
jl
ret
inc
imul
push
mov
pop
pop
cmpb
add
aas
xorb
aaa
sbb
jo
ret
les
stos
pop
xchg
loop
adc
pusha
clc
dec
jb
or
je
cmpsl
ljmp
popa
je
mov
loopne
push
mov
xor
pop
adc
adc
xchg
inc
mov
mov
and
push
mov
sub
push
scas
sbb
cltd
fdiv
jnp
xchg
push
inc
nop
jecxz
dec
ret
push
inc
loope
xor
sub
cmovbe
cmp
cli
test
ds
cli
outsl
dec
or
je
fwait
push
mov
fwait
gs
jae
ret
push
push
sub
pop
cmp
add
in
std
push
pop
mov
adc
pop
sub
stos
loopne
xchg
scas
cmpsb
lods
cmpsl
mov
repz
std
sbb
xchg
xchg
mov
sub
pop
cmp
jbe
sbb
in
stos
mov
aam
repnz
sub
hlt
adc
lock
and
je
push
jns
xchg
jbe
pop
lock
push
int
mov
insb
or
pop
ret
dec
mov
xlat
outsl
cmp
or
dec
pop
fs
add
cmpsb
out
push
aaa
mov
cmp
push
adc
push
mov
and
leave
out
push
dec
out
mov
push
cmp
int
or
push
cmp
shrl
mov
xor
lock
enter
mov
dec
arpl
into
out
adc
rcrb
cld
shr
sub
mov
and
sub
jmp
adc
std
lock
fwait
daa
jns
mov
std
out
mov
cld
adc
insb
imul
inc
lock
call
ret
dec
dec
cmp
ss
std
out
rsqrtps
inc
pop
mov
jg
ret
imul
mov
je
int
jl
adc
or
dec
mov
push
imul
push
popf
inc
mov
pop
sub
mov
sbb
adc
push
data16
insl
add
fildll
xchg
sti
push
or
jecxz
jb
mov
sub
and
lds
jo
or
dec
cwtl
jbe
mov
rcrl
in
imul
std
mov
sbb
mov
sub
mov
jns
xchg
les
mov
pop
out
add
pop
mov
and
sarb
pusha
insl
ljmp
js
fwait
xor
shrb
or
and
push
daa
adc
mov
or
movsb
pop
cmp
lods
mov
xchg
cli
ficomps
insb
aam
aas
sbb
add
call
bound
mov
xor
jne
mov
jl
dec
mov
or
mov
fistl
or
loope
outsb
fwait
out
sbb
incb
jo
sbb
subl
aad
dec
das
jle
cmpsb
xchg
je
jns
jp
push
out
call
fisubs
scas
push
insl
and
adc
adc
in
mov
jb
mov
inc
in
push
mov
jb
ja
push
in
dec
or
or
adc
popw
add
dec
sbb
mov
jno
and
lea
inc
mov
in
mov
cmp
mov
push
mov
mov
scas
mov
push
lret
sbb
jmpw
je
add
sbb
push
mov
fisttpl
mov
push
sti
dec
insb
fnstsw
movsb
and
cltd
out
and
les
ror
insb
loope
jnp
push
inc
fmuls
push
jmp
loope
sub
xlat
ja
mov
std
fidivs
push
adcl
dec
iret
cmp
add
mov
xchg
mov
repz
jnp
sbb
xor
scas
fs
dec
fwait
divb
cmpsl
sbbb
aam
jbe
push
decb
inc
xchg
and
sub
icebp
insl
xor
adc
lock
icebp
int3
add
int
shl
test
sub
shll
mov
mov
lock
jno
push
das
xlat
fstps
or
xor
sub
imul
aam
fistpl
bound
sub
sbb
push
jb
in
push
int3
inc
adc
inc
ret
in
enter
adc
or
xchg
sbb
jbe
out
xchg
or
sbb
rcll
pop
fsubrl
add
or
add
fdivs
fstl
add
cmp
jne
cli
inc
cli
cmpsb
sub
pop
sti
xor
mov
mov
push
pushf
nop
or
pop
sub
sbb
cmp
xchg
scas
push
jecxz
dec
sub
fsubrl
xor
ljmp
outsl
pop
out
rorl
ljmp
leave
mov
lds
cs
sub
jl
cli
movsl
jae
addr16
aam
test
push
push
gs
incb
cmc
or
fldl
mov
mov
pushf
cmc
xor
gs
xchg
pusha
js
sub
push
xlat
fwait
mov
push
xchg
jmp
dec
inc
les
adc
les
pop
jns
lods
popf
push
jp
jmp
aas
sbb
loop
mov
clc
rclb
cmc
jns
adc
mov
mov
push
idivb
lds
loope
push
inc
sbb
pop
pop
pop
sahf
roll
stos
outsb
call
aad
sahf
rolb
rcrb
jns
mov
push
add
cmp
fs
xchg
push
dec
stos
pop
fcomip
mov
mov
std
popf
xchg
movsb
cmpsb
and
mov
pop
inc
repz
dec
out
repz
mov
adc
mov
int
mov
scas
aam
call
inc
in
das
test
nop
mov
popa
adc
loopne
data16
outsl
adc
lcall
popf
stos
and
xchg
dec
fstpt
jae
xlat
mov
pop
push
jmp
and
mov
das
icebp
fwait
lods
rorl
or
xor
add
dec
mov
push
sar
mov
into
sub
add
xlat
rcl
jge
imul
inc
dec
in
ficoml
push
in
adc
jo
xchg
sub
lahf
push
scas
dec
and
jo
cltd
sbb
test
or
mov
push
add
inc
push
push
scas
or
fldenv
xchg
mov
rol
insb
cmp
insb
mov
mov
pop
pop
cld
out
add
ja
movsb
aad
ret
clc
outsl
lret
jmp
fistpl
mov
test
mov
fistpll
pop
int
imul
cmpsb
test
push
jge
in
jmp
pop
outsb
jl
adc
daa
emms
push
jae
mov
daa
dec
dec
outsb
mov
mov
mov
push
add
mov
loopne
pop
or
or
mov
js
sbb
gs
arpl
or
out
cmp
data16
inc
mov
scas
inc
sub
fnstsw
add
or
cmp
xor
nop
and
jmp
lret
cs
mull
xchg
sbb
movsl
sahf
out
xor
mov
mov
mov
outsb
dec
loopne
sbb
cld
loope
cmp
insl
mov
pop
jno
sub
lds
sub
lock
fisubrl
fwait
dec
imul
or
xchg
xchg
shlb
daa
lds
sub
mov
sti
les
mov
pop
ret
mov
aas
fdivs
ljmp
cmp
xor
inc
gs
mov
pop
cmp
xlat
jg
movl
icebp
jnp
lock
scas
fidivs
jmp
loop
xchg
call
je
rorl
out
vmptrst
fstpt
out
lds
popf
mov
outsl
int
loop
scas
jne
xchg
test
rcrb
fildll
or
jecxz
and
mov
xor
rolb
mov
xor
add
xchg
lret
divl
aam
out
mov
idivb
daa
cmp
test
arpl
jmp
cmp
jb
mov
shll
fsubl
push
int
hlt
push
mov
test
inc
pop
jo
icebp
or
pusha
cwtl
mov
loope
fdiv
call
sti
mov
pop
push
push
mov
ret
xchg
insb
or
dec
stos
loopne
nop
cmc
push
push
or
daa
mov
mov
int
mov
push
std
es
pop
out
arpl
stos
std
loope
cli
mov
loopne
jo
js
cmp
stos
popa
pop
icebp
inc
mov
fwait
sbbb
test
push
clc
pop
mov
aaa
pop
bswap
js
xchg
pop
mov
xor
dec
aaa
inc
rolb
fs
dec
lods
mov
mov
ds
jmp
es
decb
daa
push
movsb
loopne
mov
adc
or
jle
fsub
sti
xchg
mov
push
jg
je
outsb
fcompl
movsb
xchg
xchg
adc
jns
mov
push
popa
out
ja
scas
xchg
fdiv
sbb
sbb
movsl
cmp
lahf
pop
sub
push
test
rcrl
cld
and
cmp
shrb
sahf
orb
xchg
js
pushf
pusha
stos
mov
mov
hlt
mov
ds
out
sub
xchg
out
jno
add
mov
imul
mov
adc
push
and
call
out
and
mull
movsl
push
shrb
dec
add
cwtl
aas
ljmp
jmp
stos
mov
push
mov
fldenv
mov
jnp
adc
dec
sbb
sub
push
push
fdivr
movsb
mov
lcall
pop
xchg
cmp
shll
pop
jnp
xchg
xor
or
fsubs
jg
sub
lcall
inc
jmp
jg
jns
imul
xor
sbb
push
pop
xchg
pop
insl
mov
cmpsl
adc
addr16
mov
push
dec
cmp
sub
and
aam
cmp
daa
into
int3
into
xor
cs
jp
push
sbb
fsubrl
and
repnz
inc
rol
inc
ja
mov
mov
push
inc
fisttpl
sbb
cmp
lock
lods
and
xchg
mov
push
jno
mov
aas
xchg
scas
sub
mov
ljmp
in
pop
jo
xchg
jp
push
add
sub
dec
mov
push
mov
aas
jle
fistpll
mov
outsl
iret
jge
mov
jnp
pop
push
mov
mov
xor
mov
xchg
in
outsb
or
sahf
xor
stc
wbinvd
fnstsw
out
iret
push
xchg
jge
mov
sub
xchg
gs
pop
xor
sti
arpl
push
ret
jmp
dec
xor
cmpsl
pop
out
ret
sti
jecxz
push
sub
add
mov
in
sub
push
dec
push
aam
and
sbb
jl
mov
ljmp
push
scas
and
insl
push
fisttpll
repz
xlat
outsb
adc
jnp
add
push
cli
sub
add
out
mov
mov
addr16
in
mov
xor
pop
pop
xchg
jecxz
call
cmc
or
imul
orl
sbb
loopne
inc
pop
rorb
por
xchg
roll
ja
inc
lods
mov
in
jb
mov
lods
jno
test
test
jle
sti
js
arpl
loop
cli
xchg
loopne
inc
xorl
cmpsb
rol
or
add
daa
je
or
rcrb
sub
jecxz
cwtl
arpl
pop
sahf
fdivrp
xchg
push
xchg
test
fcomps
lcall
inc
cmpsb
cs
aam
jmp
jl
pop
adc
mov
imul
idivb
xor
cmp
sub
testl
add
mov
in
pop
ret
fldcw
sbb
cmc
dec
adc
lret
inc
cli
mov
push
fcmovnu
push
mov
loop
inc
fadds
cli
jbe
push
leave
or
sti
mov
sbb
jbe
sahf
xchg
mov
aam
sahf
sbb
inc
xor
mov
in
out
add
lods
ds
jnp
iret
push
outsb
lahf
mov
imul
stos
stc
mov
mov
add
add
and
imul
inc
inc
aas
mov
or
cs
lahf
xchg
std
lea
ja
fnstcw
jns
shlb
adc
test
cmp
pop
inc
paddd
sarl
mov
repz
xchg
pop
roll
pusha
mov
jle
push
xchg
xchg
and
xchg
pop
sahf
cmp
jae
jg
cmp
lret
movsl
mov
sahf
cmpl
jnp
les
mov
inc
addr16
hlt
push
mov
pop
cmp
xchg
pop
inc
mov
mov
sbb
aad
mov
int3
das
test
fidivl
iret
adc
imul
and
lret
jno
xor
fistl
sub
cld
scas
cmp
mov
push
sbb
mov
push
hlt
pop
enter
mov
sarb
push
dec
rcrb
add
add
push
sbb
jl
lds
pop
mov
sub
mov
leave
aaa
sub
add
xchg
lahf
pop
xorl
les
cli
movsb
mov
pop
or
jge
cmpsl
arpl
mov
adc
and
cld
pop
cmp
dec
rol
inc
dec
lods
aad
or
pop
iret
mov
cmpb
jle
sbb
ret
push
dec
push
jbe
call
push
int
cli
movsb
jmp
scas
out
and
inc
loope
mov
mov
sbb
inc
inc
adc
mulb
mov
scas
dec
pop
sti
push
push
dec
lret
xor
inc
ljmp
pop
pop
out
xor
mov
or
xchg
je
cmp
leave
cmp
je
inc
ss
push
lods
inc
xchg
lods
popf
loop
out
aad
roll
out
out
out
ljmp
or
add
add
bound
out
pop
xor
lock
loop
jae
jecxz
es
ret
sub
imul
xchg
mov
jmp
inc
stos
pop
jg
lods
mov
cwtl
mov
and
xchg
imul
es
adc
sahf
popa
sbb
add
out
sub
mov
push
inc
and
fs
rorl
cmpsb
imul
sbb
lahf
sti
arpl
add
cs
or
js
push
call
mov
mov
ja
data16
insb
stos
test
outsl
insl
mov
repnz
jae
push
fwait
jne
je
jp
sbb
adc
adc
jmp
fwait
add
add
repz
addr16
xor
out
add
xchg
insb
lods
mov
in
insb
pushf
cmp
popa
mov
mov
pop
push
repz
xor
xchg
into
push
xchg
pop
sbb
pop
dec
popf
mov
and
sbb
addl
jae
in
adc
frstor
push
jae
lret
pushf
xor
pop
stos
sub
pop
outsl
gs
test
sarl
or
jl
into
jnp
test
xchg
ret
cmp
movsl
mov
in
pushf
pop
pop
loope
xchg
add
aad
mov
sub
mov
lods
dec
jl
pop
cld
mov
mov
mov
testb
jmp
dec
inc
push
and
fidivs
push
shufps
aaa
fmuls
lods
push
xor
aad
int
mov
out
and
repz
add
call
push
pop
xorb
loope
cmpsb
and
xchg
and
or
ja
aas
mov
inc
or
jl
mov
mov
lock
cmp
and
es
cmc
sbb
cltd
notb
xchg
rclb
shll
out
inc
sub
jle
dec
add
sub
mov
dec
cmpb
pop
fdivrp
stos
ja
inc
or
shlb
lret
in
orl
jbe
int
lods
test
push
mov
adc
idivl
adc
rolb
xor
mov
test
mov
xchg
inc
mov
push
and
lcall
loop
cs
fimull
mov
sub
push
lret
jmp
or
mov
adc
mov
popa
fistpl
fwait
or
dec
lret
lret
cmovg
xor
sarb
xor
or
test
mov
mov
push
and
sub
in
jnp
and
push
sbb
fs
pusha
xchg
add
push
mov
push
ret
cmpsb
aaa
jl
ss
rep
scas
cltd
stc
cmp
mov
mov
or
outsl
test
mov
push
fwait
mov
mov
push
rep
pop
idivb
jo
mov
mov
dec
cli
loopne
mov
lods
inc
movsl
mov
dec
clc
xchg
jle
cmpsl
and
clc
or
push
repz
push
sub
fs
cwtl
fcompl
mov
and
add
faddl
scas
mov
mov
dec
shl
in
fmull
shr
stos
jl
jmp
push
fucom
inc
out
dec
xor
inc
push
loopne
ja
mov
js
lahf
mov
jg
stos
and
pop
stos
mov
mov
fistpll
or
je
jecxz
jne
mov
lock
mov
xlat
ds
pushf
push
mov
push
jecxz
xchg
mov
cmp
xchg
sub
mov
test
dec
les
push
jns
ss
mov
jbe
insb
mov
addr16
ret
push
pop
jecxz
lret
sbb
das
es
sub
int3
pop
fwait
std
mov
icebp
in
pop
or
popf
movsb
xor
mov
push
pop
fimuls
push
push
sub
mov
insl
push
fists
into
xor
mov
mov
aam
repnz
fnstsw
lods
shrd
sbb
adc
mov
iret
lods
pop
inc
mov
ja
or
push
enter
or
or
iret
test
pop
mov
push
mov
sub
xor
ficomps
and
inc
mov
cmpsl
shll
xchg
ficomps
xor
sbb
loopne
dec
inc
cmp
xor
push
shll
or
mov
sub
mov
movsb
addr16
pop
fstl
repz
xchg
push
adc
ja
or
pusha
rolb
daa
fisubrl
in
into
imul
lds
mov
push
sub
clc
ds
xchg
mov
out
ss
xchg
lods
movb
js
inc
mov
push
divl
mov
xchg
mov
inc
shl
mov
inc
jno
lcall
cmpsl
push
cwtl
jp
xor
jbe
adc
insl
mov
jbe
test
icebp
addr16
lret
push
cmp
sbb
je
stos
push
dec
cmpb
push
int3
pusha
dec
roll
mov
out
add
movl
cmp
add
scas
mov
enter
jmp
in
arpl
and
rcrl
xchg
insb
ss
sub
inc
pop
fmull
bound
repnz
or
jae
out
mov
loopne
jg
pop
test
inc
inc
int3
lods
pop
pop
and
aad
xor
in
mov
jmp
out
push
cmp
fadd
imul
mov
aam
test
cmpsb
mov
cltd
mov
out
inc
rorl
and
mov
xchg
mov
cmpsb
stos
aas
xor
push
mov
push
mov
add
xor
push
push
mov
js
popf
adc
pop
es
sbb
lods
scas
bound
outsb
insl
cmp
adc
in
nop
leave
je
dec
cs
adc
in
fs
jmp
iret
loopne
mov
jbe
std
inc
insb
push
out
into
lock
mov
pop
mov
mov
pusha
mov
push
jb
adc
pop
mov
dec
mov
mov
and
pushf
mov
and
mov
xor
sub
movsb
popa
cmpsl
jnp
or
pop
dec
xchg
push
sahf
aaa
push
gs
jge
int3
loopne
or
push
sbb
xor
cmc
or
out
add
cmpsb
out
repz
cltd
mov
les
in
sbb
push
xchg
adc
pushf
inc
adc
cmp
outsl
out
in
mov
pop
movsl
incb
mov
scas
push
in
call
add
cmc
mov
cmp
push
dec
into
aas
ja
mov
icebp
cld
pop
mov
aam
and
mov
es
mov
or
aaa
mov
push
add
or
jle
shl
hlt
fmull
loop
lret
test
mov
fdivr
gs
xchg
cmpsl
les
inc
xorb
inc
pop
push
int3
dec
aaa
jb
pop
jle
ret
mov
pusha
and
push
sbb
sub
push
insb
push
mov
std
repnz
mov
add
mov
xchg
js
insb
movsb
hlt
enter
es
lret
scas
cwtl
push
xchg
dec
mov
mov
test
and
xchg
sub
adcl
insl
and
shll
adcb
sbb
push
ja
fcmovu
pop
lock
dec
iret
xchg
mov
je
push
rcl
movl
sub
push
push
push
push
sub
lahf
mov
sub
sub
add
push
dec
inc
les
rorl
push
inc
or
or
in
push
inc
int
movsl
mov
loopne
insl
sub
loop
es
lock
pop
pushf
repnz
inc
in
fcmove
mov
lods
jp
mov
xor
pop
lods
adc
lods
push
je
inc
jl
pusha
cmpsb
int
inc
mov
jns
jo
and
test
sub
mov
push
test
sahf
dec
cmpsb
fdiv
sbb
addr16
lret
jle
cli
repnz
mov
xor
inc
or
or
lods
or
mov
dec
cmp
or
ret
cmc
cmp
addr16
dec
cmp
into
es
fwait
ja
fwait
in
out
test
xor
xlat
push
mov
mov
fistpl
call
gs
popf
ficompl
mov
ljmp
popa
leave
lods
push
or
sub
fwait
push
movsb
dec
outsl
cmpb
sbbb
xchg
sahf
pxor
test
push
daa
push
stos
adc
jb
xchg
loop
pop
jns
icebp
add
xor
jle
jbe
jb
inc
jl
cwtl
jno
lock
jmp
daa
nop
inc
dec
fucom
fisttpll
sub
push
inc
std
mov
cmp
cwtl
mov
stos
jmp
enter
push
jmp
orl
pop
sar
stos
adc
pop
sub
stc
sbb
out
pop
inc
pusha
leave
cmp
jg
sub
shrl
inc
mov
cmp
xor
inc
push
sub
cmpsb
and
int
fisttpl
push
lods
inc
sbb
int
orl
fildll
aas
jne
mov
clc
mov
je
test
jmp
adc
or
xor
int
leave
cmp
jge
xchg
mov
jnp
pop
sub
out
or
icebp
cmp
lahf
mov
xchg
and
xorb
jnp
dec
push
xchg
pop
sahf
pop
sub
mov
je
lea
sub
sar
inc
xor
cmpsl
cmpsb
jb
jo
jecxz
fidivrl
jg
push
ljmp
cmp
sbb
pop
decl
sbb
or
cmpb
mov
into
lock
xor
rorb
sarl
fnstsw
mov
jnp
ljmp
int3
push
scas
mov
fbstp
test
cmpsb
adc
dec
faddl
cmpsl
inc
imul
outsb
lock
xchg
pop
into
pop
jne
lret
fstps
cmp
dec
fisubrl
repz
adc
xlat
subb
xchg
pop
adc
imul
sbb
pusha
fmull
dec
mov
mov
xlat
mov
enter
inc
xor
or
mov
mov
pop
ja
sbb
mov
dec
rorb
cltd
or
mov
add
int
fbstp
imulb
stos
xchg
hlt
fmul
sbb
or
adc
aad
push
rcrb
mov
lock
frstor
mov
cmc
or
cmpsb
mov
js
lds
and
outsb
cmp
loope
push
pop
sbb
mov
mov
fistl
cmp
jmp
mov
cmpsb
fwait
sub
push
ret
testl
xor
xor
arpl
lret
pop
dec
pop
adc
test
lcall
xchg
mov
in
pop
and
push
in
test
dec
shrb
shll
es
jp
daa
jge
xchg
push
pop
inc
adc
mov
lret
push
outsl
aad
xor
sbb
pop
mov
lahf
or
jecxz
push
outsb
in
jne
sbb
push
icebp
add
push
enter
and
fidivs
cmp
iret
pop
shrb
pop
repnz
lahf
aaa
mov
mov
dec
lds
or
loop
add
xor
or
lcall
fwait
stos
cwtl
or
sbb
sub
or
push
pushf
ret
jno
das
cld
insb
ss
xorb
cmc
mov
repz
sbb
jnp
loop
lea
into
inc
mov
pop
fistps
lock
cmp
loope
adc
shrl
movsl
leave
mov
shll
inc
sub
xor
lock
sbb
and
data16
push
inc
in
cmpsl
add
in
daa
jmp
push
pop
mov
arpl
out
mov
lahf
and
add
stos
cmp
inc
jbe
mov
and
sbb
loopne
add
xchg
pop
dec
gs
mov
jns
por
sub
in
gs
ret
mov
jno
mov
inc
inc
inc
into
or
nop
xor
fisubrl
mov
fs
push
xlat
lret
ret
ds
cmpsl
sbb
jg
dec
push
adc
push
pop
movsb
dec
push
out
addb
and
stos
add
sub
mov
das
out
test
enter
xchg
ja
pop
data16
or
jg
ret
pop
lds
shr
in
mov
dec
fimuls
imul
js
mov
mov
rorl
dec
int3
inc
sbb
jbe
cld
out
cmp
mov
loope
popf
pop
mov
rclb
mov
inc
and
pusha
popf
mov
fcoms
movsb
mov
addb
or
jno
xchg
gs
mov
ret
pop
arpl
cli
shll
pop
adc
push
ss
adcl
loope
hlt
sub
and
sbb
pop
cli
lods
int
add
sub
lea
hlt
test
jl
dec
jl
std
sub
cmpl
icebp
inc
sbbb
mov
push
xchg
daa
xorb
xchg
pushf
insb
mov
jp
xchg
out
test
loop
enter
cs
iret
or
push
fisubs
cmpsl
xlat
pop
sub
mov
icebp
ret
call
xchg
fadds
jmp
fdivl
fimull
adc
std
sti
adc
mov
aad
icebp
dec
cmp
push
push
cld
fsubrl
sub
xchg
jg
sbb
fwait
push
das
mov
ja
jp
data16
sub
dec
mov
cmp
mov
outsb
sub
lds
rol
imul
iret
js
nop
adc
ds
imul
sbb
jle
call
push
lret
outsb
jne
repnz
ret
xor
es
aas
ret
pusha
xchg
lds
cmp
or
mov
dec
xchg
mov
jne
mov
jp
mov
enter
enter
xchg
mov
fstpt
fwait
addr16
ror
adc
xchg
mov
cmp
jecxz
int
dec
test
insl
shl
or
pop
push
imul
divl
into
xchg
aad
jg
push
mov
aaa
cmp
fmuls
decl
fiadds
data16
decb
jns
in
cli
fwait
jne
cmp
mov
sub
mov
jg
adc
in
and
adc
mov
data16
jae
sub
lret
mov
ret
add
aaa
mov
out
test
jp
sub
iret
out
cmp
or
inc
int3
mov
test
xchg
das
int
scas
push
jecxz
in
je
cmc
or
and
cmp
leave
lahf
cltd
cmp
mov
cmp
subb
xor
das
adc
arpl
or
aad
imul
sbb
pop
jb
fs
mov
xchg
pop
leave
subb
repnz
lcall
fwait
gs
mov
inc
popl
outsl
cmp
leave
sbb
sub
popa
push
mov
dec
pusha
jmp
hlt
in
xor
loop
rolb
jae
test
cltd
stos
loope
pop
xchg
fildl
and
in
js
mov
out
dec
inc
and
inc
push
sar
push
out
mov
xorb
inc
push
lahf
in
test
into
mov
imul
cmc
mov
push
xchg
pop
cs
movsl
mov
hlt
jge
stos
in
pusha
rclb
add
jge
rorl
cmc
mov
test
lds
shll
push
push
sbb
add
repz
mov
aad
inc
lcall
xchg
mov
mov
or
pushf
popf
clc
jnp
jne
in
setl
add
push
cmpsb
mov
in
adc
rclb
sbb
out
mov
or
mov
mov
push
xchg
adc
or
hlt
jns
dec
out
loope
sti
rorb
divb
pop
mov
jo
cld
ret
pop
pop
jno
jns
andb
cwtl
mov
jle
iret
mov
in
aam
fimuls
mov
enter
mov
inc
jnp
inc
es
dec
mov
or
mov
icebp
test
stos
pop
int3
mov
dec
mov
dec
fisttpll
popa
pop
hlt
push
xor
dec
xor
pop
in
add
scas
xor
mov
popa
add
pop
test
addr16
outsb
add
nop
push
xchg
jecxz
xchg
fs
push
leave
fsts
jge
push
aaa
hlt
and
or
out
pop
cmp
sbb
push
out
push
std
insl
and
mov
insl
out
into
xor
cmp
rorl
pop
rcll
cld
cwtl
xchg
or
pop
cmp
or
xor
jae
xchg
testl
fwait
out
sub
push
pop
aam
add
sub
loop
dec
int3
sarb
sbb
leave
int
shr
jnp
lahf
nop
mov
xor
pop
arpl
fsub
mov
pop
cmp
leave
std
jle
pop
iret
sub
and
add
ljmp
add
outsb
and
xchg
stos
jge
jl
sub
mov
data16
jb
shrl
xor
pushf
cld
or
movb
cmp
out
insl
xchg
and
lahf
sbb
jno
xchg
cmpsb
push
lods
cmp
jns
int3
lea
xor
dec
xchg
fmuls
xchg
jecxz
xlat
mov
add
aas
repnz
shrl
push
or
inc
shl
pushf
bound
mov
pop
loopne
jmp
xchg
lods
lcall
enter
mov
xlat
cmp
idivl
int3
sbb
push
add
pop
scas
pop
lds
adc
in
dec
popa
pop
jle
inc
lea
mov
aaa
out
mov
es
xorb
cld
xchg
insl
arpl
xchg
mov
dec
cli
push
stos
xor
add
pop
rorb
lahf
sbb
xor
popa
int
dec
mov
mov
jmp
adc
jle
mov
les
mov
add
push
cmp
andl
in
sbb
jns
xchg
xor
jb
std
dec
ja
jo
icebp
lret
mov
sahf
dec
cmp
push
movb
rcll
inc
ret
test
sti
insb
fldcw
bound
int3
pop
dec
sti
enter
mov
shrb
fmuls
or
xor
sbb
mov
cmpsl
pop
push
cmp
lods
ret
cmp
div
inc
sub
inc
daa
int
sbb
iret
test
push
lret
jl
add
pop
aad
out
int3
pusha
sbb
ss
test
and
dec
ljmp
xchg
mov
sub
xor
inc
loop
cmp
inc
fs
clc
xchg
pushf
movsl
stos
mov
inc
sbb
test
iret
repnz
jecxz
shll
repz
inc
mov
jle
icebp
xor
arpl
aaa
jg
dec
push
sbb
movsl
lahf
pop
stos
jg
dec
clc
push
adc
nop
cs
push
aaa
mov
xchg
imul
pop
addr16
push
and
xchg
cmp
jecxz
into
jbe
and
sbb
aam
dec
mov
xor
sbb
or
pop
dec
ja
rcrb
and
mov
hlt
xchg
and
sub
dec
mov
pop
inc
cmp
out
cltd
aaa
xor
mov
push
xchg
mov
fcmovu
stc
dec
ret
push
pusha
imull
cmp
into
pop
xchg
mov
mov
sbb
push
push
lds
adc
push
push
insl
jp
xchg
jnp
pop
js
xchg
jmp
push
jnp
fdivrs
dec
xor
lods
arpl
jb
sub
sub
test
out
cltd
and
push
fucomip
inc
jno
dec
or
adc
outsl
cwtl
jb
jae
mov
dec
mov
push
cwtl
std
cltd
fidivl
push
pop
and
xlat
sbb
test
pop
or
or
inc
push
pop
and
test
jnp
adc
or
xor
dec
sti
das
adc
add
adc
or
out
cmpsl
jb
cli
or
mov
xchg
dec
inc
in
mov
jmp
cltd
xchg
jge
sub
lea
rol
iret
shrb
negl
mov
xor
cli
aas
push
add
ja
xor
lock
das
dec
and
sbb
imulb
enter
lock
dec
adc
jmp
mov
int3
and
imul
neg
fdivl
cli
fistl
test
out
inc
sbb
stos
je
push
lods
mov
je
pop
stos
xor
xor
lret
mov
clc
mov
bound
xchg
orb
ljmp
fldenv
xor
dec
xor
jp
mov
push
jae
cwtl
pop
jg
fisubrl
sbb
pop
roll
cmc
lcall
or
xor
xchg
add
lret
testl
ljmp
mov
push
mov
push
jb
mov
sbb
push
movsb
imul
std
mov
lret
jmp
div
loop
mov
mov
pushf
ss
inc
in
or
or
or
ja
mov
fsubs
mov
cltd
xchg
adc
stos
roll
fistps
pop
add
popf
jnp
jg
outsl
movsl
aad
push
jge
push
push
movsb
iret
xor
sbb
pop
int
movb
pop
lea
cmp
outsl
fcmovb
bound
dec
push
clc
sub
add
lret
mov
lret
dec
shlb
xchg
cmp
jo
sbb
call
lods
jns
lods
out
out
jmp
push
dec
cmpsb
popf
mov
mov
pop
sarl
push
push
dec
push
icebp
inc
pop
in
sar
push
ror
inc
addr16
repz
mov
and
cmpsb
dec
and
inc
sub
dec
mov
mov
cmp
dec
xchg
and
jo
push
jmp
adc
je
sahf
ljmp
jb
cmp
addr16
shrl
inc
and
pop
cmpl
ja
out
negb
jmp
aad
xchg
insb
mov
scas
pop
movsb
push
leave
sub
sub
jg
inc
mov
test
cmp
mov
call
in
repz
sub
xchg
scas
push
hlt
mov
inc
insb
aas
sbb
mov
fucom
icebp
insb
addr16
and
push
pop
sub
dec
sarl
cld
cmp
push
aad
inc
insl
lret
pop
adc
push
ljmp
mov
std
call
or
sbb
popf
push
dec
mov
pop
repz
in
lahf
lcall
xchg
cld
jp
scas
ljmp
mov
inc
pop
xor
fsubl
jo
mov
test
add
xor
andb
mov
push
push
enter
fcompl
push
fistpll
pop
lret
adc
stc
inc
jbe
lcall
mov
inc
pop
xlat
aam
jnp
test
lcall
jmp
push
hlt
sub
pop
jmp
xor
je
xchg
jo
loopne
jmp
cmpsl
call
push
push
lea
dec
das
dec
fndisi(8087
cmc
cwtl
inc
fs
lahf
fstpl
adc
sahf
or
subb
in
fldz
xchg
push
inc
add
aaa
mov
mov
adc
mov
dec
dec
cwtl
adc
and
inc
jmp
fmull
daa
mov
sub
ss
cmp
sub
xlat
aad
shl
xor
jns
adc
cmp
test
mov
stc
cmpl
outsb
into
sub
add
sahf
testl
mov
scas
inc
repz
sbb
fstl
popf
stos
outsb
leave
fbstp
fstpt
pushf
sub
and
pop
loop
ljmp
xchg
int
and
jecxz
adc
shll
inc
clc
xchg
fisttpl
aam
mov
push
outsb
or
jmp
mov
jno
push
sahf
sbb
cmp
mov
fistpl
push
hlt
inc
jo
sti
mov
lahf
pop
test
pushf
test
lret
hlt
jo
push
cli
pop
cmp
cmp
mov
je
xchg
mov
test
push
out
sub
xor
ljmp
mov
andb
mov
xor
jae
xor
movsl
pushf
bound
clc
sbb
sbb
xor
add
dec
imul
mov
ja
arpl
or
xchg
outsb
or
mov
mov
jae
loopne
inc
sbb
push
loope
fdivs
nop
xor
xchg
adc
and
imull
jns
cmpsl
lcall
inc
push
lret
clc
jns
inc
int3
pop
inc
push
mov
insb
pusha
jb
shll
xorb
pop
cld
xchg
mov
mov
mov
adc
sub
push
xor
xchg
push
xlat
push
ds
xorb
aam
xchg
int
push
leave
cwtl
mov
fucomi
add
fistl
scas
push
add
add
cmpsl
and
add
aam
inc
cmp
push
dec
sbb
movsb
fildl
movsb
cmp
sub
ss
cmpsl
repz
add
mov
movsb
sbb
std
subl
mov
imul
dec
xor
pushf
push
adc
fwait
shrb
inc
ja
xchg
lcall
inc
sub
lcall
fdiv
pavgb
adc
add
test
jmp
in
daa
mov
lret
mov
xchg
bound
jecxz
cmpsl
dec
int3
jb
and
mov
aad
or
outsl
gs
xchg
popa
and
adc
loop
loope
rcll
adc
in
pop
fdivrl
push
icebp
mov
or
std
pop
mov
mov
int3
adcl
popa
jle
sub
addr16
push
mov
rcrb
push
imul
fisubl
mov
jne
push
daa
fcompl
xchg
fisubrs
push
jbe
in
loope
mov
movsl
sub
xchg
addr16
js
xchg
roll
cld
add
dec
mov
adc
shlb
mov
leave
aam
cmp
flds
div
add
push
aam
adc
jge
rorl
mov
sahf
mov
sti
push
pop
pop
outsl
pop
loop
mov
fsubp
mov
add
ret
mov
jle
pop
aam
inc
jns
jmp
ret
mov
push
ljmp
xchg
into
iret
sarb
dec
lock
testl
frstor
add
xchg
sub
ret
fchs
sub
cmp
push
les
movsb
dec
cmpl
fsin
pop
rcrl
sub
pop
jge
mov
mov
cltd
out
push
or
ret
xchg
add
and
jecxz
adc
mov
or
mov
in
test
sub
imul
xchg
dec
scas
add
push
pop
ja
ss
loopne
pusha
adc
test
mov
xchg
or
in
add
adc
incb
mov
insb
aad
mov
add
push
ds
repz
sar
jo
sbb
movzwl
aas
filds
scas
or
stos
les
lods
imul
pop
push
aaa
test
jae
hlt
mov
das
lret
jg
ret
and
inc
gs
lcall
imul
cmp
push
pop
arpl
fmul
jle
sbb
cli
sti
pop
lea
cmp
dec
lcall
cmpl
lea
lret
imul
jns
stos
nop
das
mov
lods
and
adc
loopne
xchg
push
pandn
sub
cmpsb
popa
sar
push
or
pop
and
or
jmp
rcr
outsb
inc
lahf
repz
lcall
jl
movsl
sub
fs
dec
jmp
mov
icebp
and
ja
inc
daa
add
stos
out
xchg
sarb
pop
cltd
xchg
pushf
push
sub
dec
aaa
ret
push
clc
sub
cli
sbb
ror
outsl
jnp
cmp
loope
out
enter
loopne
mov
ja
pop
lahf
movsb
insb
je
pop
loopne
sub
sarb
sbb
sbb
popf
in
insl
cli
sub
xchg
inc
pop
repnz
mov
shrl
es
arpl
jmp
popf
mov
addr16
outsl
cli
cmp
addl
fisttpll
or
jb
jnp
mov
add
xchg
push
ljmp
and
push
push
rclb
int
cwtl
xor
push
cli
movsl
shlb
xchg
fimuls
ja
cmpsl
lods
jbe
cs
jbe
fimull
dec
push
lods
lea
or
and
push
or
loopne
icebp
dec
in
insb
in
jl
imul
rolb
pop
and
dec
or
cmp
add
test
sbb
push
dec
sbb
mov
cmp
loope
xor
and
call
inc
stos
addr16
test
pusha
or
repz
push
aad
sbbl
outsl
sarb
fsts
cmp
mov
xchg
inc
cld
pop
mov
cmovnp
jl
pop
ret
push
pop
mov
inc
decb
mov
shl
inc
je
leave
pop
icebp
xlat
leave
or
mov
mov
or
fs
adc
mov
mov
sbb
int3
adc
test
push
addb
sub
mov
mov
adc
enter
aas
cmpsb
add
idivl
inc
in
mov
aam
rclb
popa
push
mov
pop
push
imul
aaa
inc
bound
out
popl
jb
ja
mov
sub
or
addr16
aas
sbb
bound
test
in
ja
aad
inc
stos
inc
mov
insl
sub
movsb
mov
jnp
sub
popa
pop
pop
sbb
lcall
mov
bound
or
sti
inc
jmp
xor
test
loop
xlat
or
ds
movsb
cmpsb
push
in
pop
loopne
and
push
lods
and
movsl
aaa
ret
aas
scas
mov
stos
xor
in
popa
push
add
or
pop
jmp
pop
idiv
adc
cmp
scas
pop
or
adc
sarl
push
push
pop
adc
or
dec
daa
sub
dec
sub
pop
mov
sbbb
je
pop
and
inc
daa
int3
gs
mov
iret
sbb
imul
pushf
iret
mov
xor
pop
add
mov
add
popa
push
lcall
int
adc
mov
mov
sbb
fs
fimull
test
dec
jle
gs
into
std
ret
cmpb
push
mov
push
in
jmp
daa
mov
mov
inc
popf
mov
inc
pop
jno
aaa
daa
in
pop
in
sbb
das
or
inc
jae
aas
add
jae
inc
pop
xchg
add
rcll
adc
rorl
cmp
sarl
xchg
shll
cwtl
or
test
sbb
addr16
cltd
xor
sbb
jle
add
popa
xchg
jnp
push
stc
xchg
adcl
int3
rcl
pop
daa
mov
out
fsubs
in
xchg
push
in
mov
cmc
int3
lret
call
xchg
mov
mov
cmpsl
xchg
and
imul
es
mov
sub
or
mov
mov
sub
mov
mov
inc
into
or
into
cli
mov
push
add
mov
sbb
lret
jo
sub
mov
xor
mov
rcrb
push
sti
cmpsb
or
adc
into
faddl
test
lret
fsubs
out
sarb
out
push
adc
mov
push
jmp
lock
xchg
adc
rol
stos
mov
sbb
inc
adc
fs
popf
addr16
fs
pop
inc
xlat
jnp
and
mov
cwtl
xchg
sub
sub
mov
lret
jmp
test
lahf
jp
mov
jns
fbld
pop
dec
mov
sbb
std
xchg
fcompl
lds
mov
dec
ret
dec
faddl
dec
adc
fcmovnb
jae
mov
or
rol
inc
lcall
xor
and
adc
sub
lea
cmpsl
inc
lret
jle
andl
fdivs
je
ret
movsl
jb
popa
xchg
imul
mov
clc
inc
xchg
out
ljmp
push
mov
xor
jnp
sbbb
mov
scas
xor
and
ret
rorl
iret
pop
xchg
sbb
inc
ret
add
and
xchg
mov
sahf
push
mov
adc
inc
mov
movsl
leave
adc
push
ficomps
mov
jno
mov
lods
mov
cmpsb
mov
xlat
pop
push
dec
stos
insl
mov
int
je
in
sub
mov
add
hlt
cmp
inc
ret
imul
add
xor
mov
out
lods
mov
mov
adc
pop
xlat
inc
and
xchg
pop
movsb
sub
fisubs
jg
push
hlt
js
inc
lock
push
addr16
bound
adc
or
mov
dec
push
xor
cwtl
add
pop
jl
mov
inc
out
aad
xor
jecxz
punpcklbw
mov
mov
neg
xchg
jno
fs
arpl
out
ja
ja
ret
fistps
pop
mov
inc
test
ljmp
dec
jge
mov
mov
popa
mov
jne
push
mov
call
add
push
aas
cmpsl
inc
pushf
fisubl
pop
js
out
imul
sbb
shr
shlb
xor
jne
inc
hlt
mov
mov
aas
pop
and
jno
dec
mov
ficomps
cmp
notl
movsb
mov
mov
mov
gs
leave
mov
inc
and
mov
xor
cmp
sub
push
adc
mov
inc
sbb
loop
push
sbb
mov
sti
insb
dec
or
jl
mov
shlb
sti
xchg
rcr
imul
notl
jb
push
sub
inc
and
dec
arpl
xchg
cmpl
outsb
xor
test
or
add
mov
clc
sub
sbb
cltd
or
or
mov
lahf
in
push
dec
mov
aas
add
int
adc
jle
add
sub
movsl
fs
pop
std
in
test
and
xchg
and
lcall
leave
sbb
pop
xchg
cmp
std
insl
pop
xor
cmp
or
add
nop
sub
sbb
je
xor
cmpsl
push
sti
inc
push
int3
sub
gs
and
out
aad
gs
aaa
movsb
hlt
mov
cmpsl
addr16
adc
push
lahf
das
movsb
jg
aad
or
pop
jae
std
je
popf
pop
aad
dec
icebp
sub
cmpsb
jo
fildll
imul
sahf
xchg
jbe
rclb
shrb
cmp
rcr
repnz
mov
mov
outsl
stos
mov
lret
rclb
xchg
rcrb
insl
dec
sbb
enter
xor
jns
jmp
xchg
ss
jbe
lcall
call
xchg
repz
adc
aam
mov
pop
outsl
leave
aam
adc
ficomps
int
mov
mov
add
jmp
pop
dec
sbb
sub
mov
cmp
int3
push
add
or
sub
push
movsl
pop
leave
cmp
dec
popf
and
jmp
push
ljmp
ljmp
ret
cltd
mov
cmp
adc
scas
cld
test
popa
mov
fiaddl
cmc
rolb
jl
es
xchg
or
adc
xlat
inc
sub
adc
cmp
dec
add
mov
call
leave
xor
push
or
lods
add
dec
gs
scas
cmp
pop
or
outsl
xchg
sub
sbb
xor
or
xor
and
int
fstpt
push
sbb
das
push
adcl
mov
jmp
inc
push
push
in
mov
mov
sti
bound
rcll
push
lcall
js
jmp
rorb
adcb
cmp
into
stc
out
jle
jp
mov
in
pop
imul
movsb
ret
movsl
inc
jmp
mov
icebp
mov
loop
ljmp
sti
adc
cltd
rcll
adc
jmp
and
xlat
leave
mov
xor
mov
popf
jl
xor
jl
gs
shll
pop
mov
xor
push
test
out
fcoms
scas
xchg
fcomip
cmpsl
jne
add
loope
jl
pop
ret
pop
sub
into
inc
dec
fwait
cmp
dec
icebp
cmp
adc
adc
repz
sbb
inc
xor
int3
add
jno
pop
xchg
fisubrl
dec
shrb
jbe
leave
insl
ret
push
pop
aad
clc
jecxz
stos
xchg
dec
mov
mov
dec
mov
mov
fidivl
xor
aas
xrelease
ss
ljmp
fiadds
cmpsl
mov
popa
inc
push
loopne
ret
adcb
jbe
pushf
dec
sub
test
leave
adc
fstpl
sub
ds
dec
in
xor
cmp
mov
out
rcrl
jo
adc
loope
push
popf
xchg
and
std
out
xor
lahf
lea
pop
addr16
je
cmp
pop
xor
push
fcomp
push
lods
addb
ss
push
mov
aam
xchg
outsb
cmp
fisttpl
sub
mov
loope
or
pop
je
push
test
fs
aad
push
xor
or
ljmp
stc
xor
adc
pop
cmc
add
imul
xor
insb
mov
and
dec
add
mov
stos
jno
int
push
faddp
dec
add
push
mov
lods
xchg
add
cmp
mov
cmpsl
fnstcw
xor
divl
xor
in
mov
sub
hlt
je
out
jbe
cmp
xchg
lahf
mov
ret
push
ja
cmp
mov
jnp
popf
mov
or
test
mov
adc
pop
inc
fstl
scas
jb
dec
inc
mov
shrl
repnz
data16
push
dec
inc
jp
xor
adc
stc
adc
incb
test
test
adc
bound
pop
fld
push
fldcw
shlb
pop
mov
mov
jnp
mov
jecxz
es
leave
jo
dec
push
add
shrb
push
rorb
idivb
loopne
insb
lods
hlt
mov
sub
in
arpl
push
mov
lret
pslld
stos
pop
pushl
loope
push
inc
sub
inc
jecxz
pop
popa
test
push
jae
in
dec
popf
das
popa
fs
mov
popf
repz
or
jle
mov
leave
inc
adc
sahf
cmc
xchg
jno
sub
outsb
adcl
jb
ret
aaa
pop
pop
xor
push
aad
push
das
jl
sahf
lret
mov
insl
add
add
fcomp
inc
xchg
sbb
push
inc
lret
jg
dec
xor
and
inc
dec
imul
adc
or
mov
hlt
rcll
inc
and
imul
cwtl
fimull
ja
dec
cmp
jmp
les
cmp
inc
push
mov
pop
mov
sbb
je
push
mov
push
into
add
xor
sub
lcall
fcmovnbe
or
push
mov
roll
int3
inc
loope
fs
cmp
jge
subb
fisubs
inc
or
out
add
repz
pop
add
movb
pop
fwait
mov
leave
lahf
mov
idiv
mov
xor
cld
jnp
mov
adc
push
dec
sbb
insl
insb
lcall
clc
pop
push
daa
add
leave
test
and
outsl
pop
addr16
es
mov
mov
mov
in
cli
dec
inc
mov
xchg
nop
les
inc
mov
mov
test
sbb
inc
xchg
out
jae
jl
inc
mov
mov
repnz
jae
sbb
jecxz
mov
xor
int
lds
inc
cmp
fcoms
test
add
jmp
mov
dec
dec
bts
add
cmp
imul
lods
sbb
push
cmpsl
xor
gs
add
xor
lret
pop
shlb
test
scas
adc
add
adc
mov
pop
aas
pop
cli
cmpsb
add
pop
dec
dec
je
xlat
rcr
mov
imul
add
mov
inc
js
ds
push
xchg
xor
push
xchg
pop
add
shll
insb
jmp
test
or
cmp
dec
out
pushl
add
mov
mov
mov
lret
lret
xor
xchg
or
ljmp
pusha
out
push
xor
and
int3
xor
or
hlt
jae
mov
fstps
jp
mov
insb
mov
cmp
xchg
cltd
cli
and
xchg
push
lret
xor
or
jmp
jecxz
mov
pop
push
inc
orb
test
aad
loope
rclb
or
loop
and
sbb
out
add
xchg
push
cmp
outsl
aas
mov
cmpsb
push
xlat
rcrl
mov
inc
out
pop
sub
push
pop
jbe
cmp
mov
push
and
cs
dec
fwait
cltd
cmpsl
adc
xor
popf
lods
test
push
xchg
push
or
jae
scas
add
mov
mov
gs
inc
pop
mov
mov
sub
int3
sbb
adc
lods
ret
in
fmuls
movsb
jle
cli
movsl
cmc
and
push
pusha
test
mov
jcxz,pn
ds
daa
and
jnp
mov
sarb
jecxz
sub
popf
imul
cwtl
xor
js
aam
lahf
xor
xchg
push
mov
xchg
xor
daa
icebp
jnp
js
and
test
dec
xchg
popf
leave
jle
fwait
mov
imul
cmp
mov
pusha
push
enter
sub
fidivs
sbb
rclb
and
data16
sbb
pop
sti
mov
pop
xchg
repnz
mov
ffree
std
out
jnp
insb
push
mov
ret
imul
cmp
je
dec
fmuls
fisttpl
dec
pop
mov
add
nop
dec
pushl
push
jb
pop
adc
subps
pusha
out
insl
into
xor
sub
les
adc
test
sbb
pop
test
cmp
pop
or
jl
cwtl
test
fwait
xchg
add
push
insl
pop
cmp
add
or
push
xchg
adc
aas
icebp
mov
sub
adc
xchg
xor
fisttpl
cmp
xchg
cmp
rolb
mov
fisttps
mov
inc
mov
mov
dec
sbb
lret
pop
push
jle
push
insb
out
insb
jp
sub
sbb
cmpsb
test
ficompl
lret
insb
incb
cmpsb
pop
push
ret
jg
sub
data16
fsts
cltd
and
mov
test
lret
std
seto
adc
cli
aas
jge
fs
das
cmp
mov
xor
aas
pop
fsts
cwtl
fisubrl
xchg
adc
and
ficoml
cmc
repnz
sub
clc
mov
mov
adc
in
loope
sub
hlt
pop
jecxz
add
ds
xor
inc
fwait
inc
scas
mov
cli
std
repz
sub
mov
lret
bound
jns
lods
push
out
jae
cli
xchg
icebp
loopne
mov
into
mov
cld
mov
adc
sub
sbb
add
jbe
mov
pop
push
dec
mov
or
cli
add
loop
adc
sbbl
xor
shlb
mov
adc
fistps
jmp
sahf
aas
test
lcall
mov
xor
jmp
mov
inc
in
adc
mov
mov
mov
test
jle
mov
jne
mov
out
sub
or
lahf
push
and
push
fwait
testb
fbstp
xor
daa
js
stos
xchg
nop
inc
negb
daa
push
dec
jns
out
nop
mov
mov
pushw
jmp
mov
sub
and
aad
adc
mov
sub
sub
mov
inc
or
fwait
imul
psubq
loop
sbb
mov
adc
addr16
stc
pop
inc
lds
out
vunpcklpd
mov
mov
adc
clc
hlt
xchg
mov
mov
call
shll
and
cmc
stc
pop
iret
mov
jns
aaa
push
scas
xchg
outsb
out
out
mov
push
or
sbb
push
in
insb
int
or
push
pop
std
sbb
loopne
out
test
push
shll
lods
jecxz
push
jbe
orb
or
cmpsb
push
iret
jno
jl
rcrb
adc
data16
sysenter
cli
dec
inc
imul
mov
push
sub
das
mov
jmp
jae
in
cli
dec
fdiv
je
sbb
sub
pop
xor
sbb
shl
jnp
xchg
xor
aam
mov
push
mov
and
pushf
sbb
int
lods
jmp
fldt
scas
iret
aam
xchg
pop
xchg
xchg
sub
mull
sbb
fistl
imulb
and
inc
scas
push
fldt
rorb
add
jae
adc
xchg
push
push
inc
arpl
push
cmpsb
xchg
or
xor
cmp
fcoms
cmp
in
mov
pop
popa
mov
test
sub
aam
cmp
frstor
aaa
xchg
enter
xchg
push
ret
in
sub
push
mov
aam
or
dec
shll
sahf
out
mov
scas
push
or
icebp
out
jbe
jns
jp
push
cmpsl
cmp
gs
pop
and
shrb
test
jle
in
push
pop
aam
sbb
push
xcrypt-cfb
cmpsl
pusha
mov
push
pop
aas
pusha
movb
pop
cmc
in
data16
cmp
or
pop
dec
sub
xchg
scas
add
add
cld
inc
push
mov
mov
or
pop
frstor
inc
push
dec
sarl
insl
cmp
cld
sub
add
dec
jle
mov
imulb
fimuls
dec
dec
and
mov
push
pop
scas
add
mov
call
mov
mov
inc
cmp
mov
notl
outsb
jl
pushf
sbb
lret
add
test
mov
test
dec
cmp
sbb
jno
test
popf
stos
enter
cmp
jmp
insb
sbb
cmp
cltd
movsl
mov
or
or
mov
repz
shrl
aad
arpl
push
test
sbb
mov
or
aad
xor
pop
shrb
lea
outsl
adc
mov
dec
lret
pop
inc
sub
adc
and
mov
fs
jmp
jmp
lahf
fdivp
xor
or
test
fdivs
popa
xor
aam
sbb
adc
push
lea
inc
pushl
mov
je
out
outsb
imul
in
jge
inc
mov
sahf
push
shrb
std
stos
cwtl
daa
aas
jbe
pushf
repnz
adc
jbe
xchg
aaa
cmc
std
jp
push
or
add
mov
jmp
sbb
test
in
in
fwait
sub
test
into
dec
sub
sbb
js
jl,pt
push
fidivrl
stos
sub
add
loope
xchg
hlt
aaa
push
sub
pop
adc
mov
aas
sub
mul
hlt
pop
popf
mov
adc
lret
adc
aas
jo
hlt
inc
add
mov
jo
lcall
xchg
adc
xchg
movb
fistpl
inc
mov
ja
aam
adc
inc
push
cld
js
adc
lcall
xchg
dec
lret
cmpsl
hlt
hlt
jg
push
xchg
add
fsubrp
inc
pop
pop
xorl
xor
addr16
ja
xor
xor
pop
pop
mov
fs
pop
pusha
xchg
add
inc
push
shll
ficompl
dec
cmp
pop
xchg
daa
sbb
push
pop
gs
roll
push
adc
sar
test
or
icebp
in
pop
sbb
sbb
jo
int3
je
leave
loopne
insb
push
negb
mov
push
sbb
rcll
mov
fmul
jb
shl
lret
mov
adc
loope
lea
sub
test
jp
pop
sbb
inc
popf
nop
sub
jg
jne
mov
dec
push
cmp
sbb
xor
fwait
aam
sbb
cli
test
cwtl
adc
xor
cmc
cmp
daa
jle
nop
mov
sub
cmp
pop
fldcw
and
pop
call
pop
jb
mov
cmpsb
inc
pop
mov
mov
pop
ret
inc
fistpl
jbe
mov
jns
enter
insl
int3
or
push
xchg
test
pop
mov
jg
idivl
pop
outsl
and
mov
iret
enter
ljmp
cmp
dec
cmp
inc
int3
cmp
mov
sbb
mov
je
sub
andl
xchg
and
in
or
adc
filds
pusha
xor
lods
sbb
fldcw
decl
loope
pop
push
js
das
adc
imul
nop
imul
xchg
jmp
fs
push
out
dec
push
mov
cmpsb
fwait
push
scas
sub
jbe
mov
ret
pop
in
sub
loope
and
xor
mov
repz
loope
fcmovne
cltd
das
sbb
fsubrp
sbb
lea
push
pushf
popf
iret
lock
in
inc
rcl
fsubs
lret
mov
ret
ja
mov
push
outsb
pop
scas
aad
jb
add
push
iret
test
mov
jmp
push
adc
mov
fcmove
dec
fwait
leave
cmp
rcl
xor
inc
movb
and
test
int
iret
popf
js
push
sub
bswap
incb
sbb
mov
push
dec
adc
pop
cwtl
push
sbbb
mov
pop
dec
jbe
out
das
add
mov
test
adc
fidivs
xor
pusha
pop
mov
pop
jnp
cmc
in
popf
pop
add
addr16
mov
sarb
add
dec
push
mov
repz
mov
add
fidivs
fstpt
mov
repnz
stos
xorl
insb
fidivrl
mov
push
mov
shr
dec
mov
testb
ss
rcrb
int
inc
test
or
mov
fs
cmp
or
dec
xchg
ds
cmp
lock
lods
cld
and
or
xor
adc
push
scas
gs
cwtl
or
out
adc
test
mov
pop
jle
pop
andb
cltd
movb
cmp
lock
cmc
and
sti
pop
cli
mov
mov
inc
fisubrl
jecxz
cmp
sub
out
lods
shrl
leave
jmp
iret
addr16
popf
loop
loop
ljmp
or
xor
sbb
iret
fstpt
scas
fisubrl
xchg
stc
gs
xchg
and
dec
repnz
mov
lods
movb
mov
inc
je
sub
push
enter
lods
jg
xchg
imul
lret
sarl
ja
jge,pn
dec
xor
arpl
test
fs
mov
cmove
lods
push
xchg
cmp
xchg
pop
in
cltd
enter
dec
or
lret
pop
mov
outsl
adc
jnp
sbb
pop
lods
cmp
sub
mov
in
adc
in
ss
lock
popf
mov
adc
fwait
inc
leave
xchg
addr16
xor
xor
bound
mov
dec
add
aad
inc
loopnew
fnstcw
dec
cmpsl
and
loop
push
mov
cs
jmp
mov
add
xor
pcmpeqb
mov
xchg
mov
out
sti
adcb
inc
jmp
sbb
mov
jae
add
sti
nop
stos
sub
sbbl
inc
cmp
daa
and
es
aaa
mov
das
xchg
in
faddl
cmp
dec
mov
mov
jo
jecxz
test
xchg
mov
sbb
cmp
testb
mov
arpl
jl
fsubl
hlt
sub
dec
repz
insl
and
imul
xor
frstor
loop
popa
cmp
stc
mov
lods
aaa
push
pmuludq
cbtw
mov
mov
ret
mov
pop
pop
fdiv
mov
sub
inc
outsb
dec
sbb
nop
cmp
cmpsb
dec
fstpl
insb
js
scas
jno
ret
das
fs
add
add
jbe
cmp
or
pop
adc
cmp
pop
sub
adc
xlat
add
sub
jmp
sbb
cwtl
or
fwait
dec
lds
adc
xchg
and
out
sbb
sub
add
aas
dec
and
inc
movsb
mov
ret
inc
dec
push
test
enter
push
cmc
addl
xchg
mov
ja
cld
jae
mov
scas
mov
sub
cli
std
xor
xor
movsb
jg
pop
pushf
ret
cmpsb
push
cmp
xchg
roll
adc
push
ss
nop
jnp
push
jne
xlat
stos
pop
add
insb
mov
in
fldenv
xor
movsb
sbb
inc
dec
and
pop
iret
sti
cmp
movsl
insb
clc
or
mov
int3
dec
rolb
and
mov
daa
dec
int
jns
aam
or
sahf
out
jbe
mov
pop
rorl
xor
pusha
cmpsb
dec
scas
pop
ret
push
in
xchg
movsb
cmovno
test
stos
roll
fwait
pop
or
pop
mov
outsb
in
fmul
inc
loopne
mov
xchg
gs
pop
push
fidivrl
lahf
cs
add
inc
xchg
cltd
lret
test
xor
or
adc
inc
shll
xor
cmp
add
mov
mov
movsl
daa
push
or
shlb
mov
stos
sub
xchg
mov
repnz
repz
sub
sbb
jb
mov
fdivs
push
inc
jecxz
inc
in
add
inc
sbb
sbb
adc
test
aas
lods
inc
lods
mov
or
mov
repnz
adc
js
pop
sub
add
negl
leave
mov
lahf
push
inc
adc
bound
popf
int
aad
xlat
push
popa
dec
movsb
push
mov
dec
fildl
mov
test
jecxz
mov
ss
inc
xor
scas
cwtl
add
xchg
or
mov
sub
sbb
jo
cwtl
adc
stos
push
shrb
inc
mov
or
xor
cli
stc
sarb
cmp
fisttps
rorl
repz
sbb
pop
sub
mov
push
inc
or
int
cmp
imul
jecxz
push
cmc
sub
out
sarl
pop
pusha
xchg
add
rorl
insb
add
mov
call
in
push
outsl
loopne
jmp
cmp
test
dec
pusha
cmpsl
dec
mov
adc
cmp
inc
cmpl
mov
and
loope
ret
xchg
mov
xchg
or
mov
in
jb
cmp
push
inc
shlb
inc
cld
sbb
mov
mov
insl
jecxz
sbb
fdivp
decl
pop
in
addb
xchg
out
out
movl
shr
jno
hlt
mov
fsubrl
ret
out
dec
mov
or
ret
xlat
dec
imul
pop
jbe
mov
push
subl
and
mov
clc
mov
jle
xchg
rorl
fdivs
lcall
fnop
xorb
sub
jae
fcompl
push
cwtl
cmpb
push
nop
insl
mov
test
pushf
mov
cmp
xchg
jl
mov
mov
ss
or
loope
dec
mov
cltd
in
roll
pop
fadds
dec
mov
scas
and
jle
test
cmp
int3
aam
adc
out
xor
fnstcw
xor
pop
cmpsb
mov
push
int3
dec
pop
push
subb
movsb
dec
jmp
adc
jbe
aas
das
mov
and
sahf
out
cmc
out
pop
add
adc
mov
mov
out
subb
mov
pop
or
xchg
sub
push
xor
mov
int3
mov
and
test
mov
jge
aad
push
xor
and
sbb
fstl
push
adc
popf
xlat
sbb
fs
pop
int
xor
push
push
lock
sbb
lret
das
insb
call
decl
jb
shl
push
push
dec
and
push
push
lock
sbb
leave
clc
mov
int3
jle
and
mov
outsl
mov
push
adc
pop
ret
rcrl
adc
es
sub
mov
fdivp
pop
fucomp
add
jg
hlt
dec
sbb
mov
in
mov
add
dec
rolb
lcall
popa
shlb
sub
fisubs
fstpl
sub
jne
mov
jmp
negb
int
pop
xor
mov
imul
aad
cli
cli
inc
xlat
mov
mov
call
cmp
mov
xchg
xor
addr16
jno
loopne
movsb
stc
xor
dec
or
test
lret
jno
scas
xchg
sub
sahf
jle
insb
add
and
jg
pusha
or
adc
rcrl
xor
xchg
sbb
outsb
shrl
and
mov
xor
cld
pop
dec
divb
outsl
fimull
nop
sbb
pop
notb
mov
rcll
fs
pushf
insb
add
jnp
test
inc
pop
dec
sti
xorl
dec
jge
fbld
adcl
imul
lret
sbb
iret
mov
pushf
std
push
lods
xchg
out
test
mov
insl
nop
dec
subb
pop
fldenv
add
pop
adcb
or
xchg
mov
dec
mov
dec
loope
rcll
divb
andb
cmp
insb
gs
dec
ja
movsl
ss
rorb
test
test
out
dec
xchg
into
or
mov
mov
inc
pop
je
jnp
cmp
add
into
rcll
xchg
mov
imul
subb
stos
or
pop
cmp
das
leave
pop
test
mov
xor
imul
je
mov
mov
aas
sbb
movsb
inc
jmp
xchg
push
pop
and
xor
out
xchg
jl
mov
hlt
sti
das
popf
icebp
jp
or
jae
jbe
xchg
stos
sbbb
push
into
jnp
inc
adc
mov
xor
jg
xchg
jns
das
mov
cmpsl
repz
mov
adc
xchg
pop
out
std
and
and
jge
fdivs
cwtl
adc
mov
mov
outsb
and
pusha
into
push
mov
sub
cmp
test
sub
add
into
mov
std
push
push
adc
jae
sbb
mov
inc
sub
sub
stos
push
iret
imul
or
add
fistps
adc
or
inc
daa
adc
outsl
sarb
in
sbb
iret
cmpsb
hlt
jo
outsb
mov
dec
xchg
xchg
or
sub
aam
xor
jmp
test
out
xchg
mov
xor
cmp
in
in
xor
rcl
mov
stc
fwait
mov
pop
push
push
scas
xchg
jbe
out
adc
pop
insb
cmp
addr16
xchg
dec
fisubrs
pop
ja
pop
xchg
adc
pop
icebp
in
push
popf
dec
inc
outsb
test
movsb
jmp
das
dec
inc
sbb
cwtl
cmp
std
xchg
repnz
daa
sub
pusha
sub
enter
gs
push
stc
or
mov
sbb
jmp
mov
adcl
cmp
xorl
mov
mov
dec
popf
stos
xchg
xchg
fdivl
repnz
popf
cmp
dec
mov
les
push
dec
mov
sbb
nop
inc
mov
test
mov
es
lds
xchg
ds
push
fidivrs
stc
inc
pop
xor
inc
into
push
mov
rcl
cmc
daa
jg
xor
mov
pop
pop
inc
in
fnstsw
push
mov
loopne
inc
lret
and
in
iret
xor
xor
inc
adc
xchg
je
pop
cmpsb
stc
fldt
or
mov
jg
sbb
sub
daa
push
mov
repnz
fiaddl
fsubrl
mov
push
pop
sti
add
jb
rcr
nopl
enter
sub
enter
cmp
pusha
push
lret
hlt
jae
inc
movsl
cmpsl
mov
out
inc
sbb
push
mov
jmp
cmp
sub
dec
add
leave
incb
cmp
ljmp
mov
mov
add
pop
aam
cmp
clc
or
add
adc
sub
into
in
cmpl
jae
test
pop
push
inc
inc
jnp
lahf
adc
imul
mov
fistps
insl
mov
inc
rcl
movsl
jbe
xchg
mov
cmp
mov
mov
in
or
call
sbb
cmpl
insl
xor
test
sub
mov
clc
mov
xchg
mov
nop
pop
outsl
mov
cmpsl
push
loope
dec
cld
sub
jne
sub
adc
pop
nop
pop
lock
cmc
add
pop
out
ret
sbb
jnp
int
cwtl
pop
mov
shlb
push
shr
ret
test
popf
jae
ds
iret
imul
mov
in
mov
in
dec
jns
and
push
in
lahf
mov
push
adc
xchg
add
insb
push
data16
mov
popa
cmp
pop
push
sub
inc
adc
dec
or
inc
sub
push
in
mov
les
imul
in
xor
adc
sub
hlt
lret
inc
je
mov
or
hlt
mov
fdivs
clc
scas
pop
add
repnz
push
adc
sub
cmp
cmp
ds
daa
test
fdiv
pop
or
pop
mov
ret
aaa
ss
cli
lret
rcll
ret
push
jl
sar
flds
mov
inc
gs
xlat
and
sbb
test
bound
fdivs
out
inc
repz
aas
insb
scas
xchg
cmp
sub
pop
jl
addr16
pop
js
fs
push
push
rorb
int
rcrb
xor
jmp
push
adc
clc
out
pop
test
jb
aas
stc
gs
pushf
addb
int
xadd
jl
mov
lret
mov
jo
pop
test
in
lock
mov
add
loope
es
aad
call
add
dec
leave
inc
ljmp
orb
cmp
repnz
rolb
xchg
aad
sbb
or
inc
leave
pop
and
add
xor
lret
sbb
pop
scas
sahf
lea
aaa
push
mov
std
test
enter
fsts
or
pop
pop
out
xchg
jbe
dec
sbb
jp
mov
test
pop
imul
dec
sbb
pop
roll
stos
xchg
in
jno
les
lret
xor
jp
adc
sub
cs
add
mov
std
fdivrs
jnp
icebp
jmp
fmull
adc
mov
or
mov
dec
jno
jno
mov
jl
xchg
sarl
jmp
fcmovb
cmp
data16
jno
pop
xchg
cmc
push
xor
push
mov
call
sub
in
mov
sbb
lahf
hlt
sub
jp
add
push
mov
pushf
cmp
and
push
inc
mov
dec
ljmp
or
cmova
orb
shlb
push
into
jo
movsb
dec
push
pop
ficoms
push
scas
pop
mov
je
and
jno
aas
sbb
push
fs
jb
mov
inc
sub
sub
stos
mov
scas
add
ret
pop
cmpsb
aas
jecxz
pusha
dec
pop
cli
leave
xor
ret
cmpsb
adc
pop
xor
shl
out
ljmp
add
pop
jbe
add
cmp
jb
or
clc
int3
mov
add
sub
shrl
leave
sbb
aam
lock
lods
cmp
or
add
xchg
imul
rolb
jbe
insl
fnsave
mov
fmull
xchg
pop
pushf
fs
clc
repnz
popa
outsl
sub
jne
mov
dec
scas
std
and
out
inc
jo
mov
add
sbb
sub
daa
mov
cwtl
jmp
xor
push
push
lcall
dec
cs
test
jns
sbb
sub
fs
mov
out
mov
out
mov
cmp
or
push
outsb
imull
mov
out
mov
mov
jecxz
xchg
mov
mov
add
or
dec
xchg
push
out
popa
inc
addr16
inc
lret
adc
es
fldt
pop
or
mov
and
jne
stc
jbe
repnz
insb
adcl
add
invd
pop
js
les
lds
adcl
movsb
jmp
adcb
mov
popf
movsb
andl
adc
out
sbb
icebp
shll
push
push
test
mov
popa
adc
cld
pop
js
add
sti
cmpsl
out
hlt
cmp
lods
int
imul
int
xor
mov
pop
xor
push
push
pop
xchg
jne
std
ds
fimull
dec
and
jl
pop
or
sbb
pop
fdivl
shr
imul
add
jp
push
push
sub
imul
mov
and
int3
push
ss
adc
loope
mov
inc
cmp
daa
or
push
cmc
xchg
sahf
add
test
mov
inc
lea
scas
inc
add
adc
push
inc
jae
pop
cmp
fstps
cld
nop
ja
hlt
mov
inc
mov
inc
rorl
jecxz
xor
ret
mov
inc
inc
push
or
sbb
imul
and
inc
xlat
rcrb
outsl
data16
inc
scas
jns
pop
movsl
leave
imull
aaa
in
icebp
ss
nop
not
lock
xchg
xor
mov
data16
mov
lods
jecxz
cltd
sub
fcomps
and
out
mov
and
inc
sahf
in
test
xor
xchg
push
jns
scas
aam
rorl
inc
mov
arpl
inc
push
dec
jle
jmp
ds
aas
ljmp
scas
xor
cmpsb
xchg
test
flds
or
mov
in
out
lds
insl
push
inc
scas
js
lret
xor
push
popf
fwait
out
stos
jo
idiv
pop
ja
lds
push
f2xm1
mov
adc
int
outsl
xor
cli
ds
out
movsb
mov
push
cmp
sub
adc
ret
and
loope
mov
iret
dec
inc
sub
jl
push
push
das
push
xor
mov
inc
sbb
pop
dec
jecxz
aaa
in
push
ss
test
mov
outsb
pop
dec
xchg
packssdw
jne
mov
jb
inc
mov
cmc
fstps
iret
xor
in
add
mov
adc
mov
cmpsl
test
dec
cmpsl
and
lods
lea
jne
imulb
scas
testb
lds
repz
xchg
gs
and
jns
sbb
push
inc
lds
aas
xchg
push
cli
sub
push
inc
sub
jmp
jg
gs
lret
arpl
rorl
mov
imul
mov
push
movsbl
in
jne
mov
ret
add
push
das
dec
sbb
sahf
xor
jg
cmp
repz
and
out
scas
ljmp
jb
dec
push
jnp
notl
sbb
xchg
cmp
xor
cmp
outsl
pusha
cmc
out
sahf
test
fimuls
in
lret
into
imul
test
lea
mov
dec
dec
mov
jp
out
mov
out
out
cwtl
ljmp
je
pop
xchg
mov
mov
cmp
inc
push
dec
jmp
clc
out
into
push
jne
rcll
inc
out
cmp
mov
dec
fnstcw
cmp
xchg
dec
adc
js
dec
bound
shll
cltd
pushf
pop
roll
rcl
dec
out
test
xor
xor
mov
mov
aas
mov
mov
pop
cmp
inc
int
adc
xor
mov
add
mov
mov
fdivp
das
in
sbb
push
ja
adc
xlat
dec
ja
jle
inc
outsl
push
notb
out
sarl
mov
pusha
dec
mov
mov
mov
rcl
mov
dec
and
add
dec
or
jo
icebp
rcrb
mov
lods
loop
lods
jae
adc
orb
xor
mov
ret
jno
push
cmp
fwait
jmp
add
lcall
push
adc
sbb
jecxz
mov
cmp
push
sub
insl
cmp
lret
fwait
and
es
call
fucomip
out
xchg
push
rcrl
dec
xor
mov
pop
lret
in
and
jo
dec
mov
or
dec
loope
insl
xchg
push
inc
cli
outsl
das
fsub
out
push
adc
stos
shll
pop
xchg
pop
ljmp
or
push
lea
and
fisttpll
xchg
xchg
rol
xchg
into
popf
aad
mov
pop
movsb
idivb
ljmp
fbstp
add
push
xor
aaa
iret
lret
xchg
sbb
mov
adc
pop
pop
mov
pop
xchg
je
orb
int
inc
xlat
js
out
dec
or
gs
mov
push
loope
or
dec
xor
xchg
loope
pushf
sbb
push
xchg
cmp
pop
dec
and
push
cmpsb
adc
ja
rclb
fcomip
adc
xchg
imul
inc
push
xchg
inc
inc
adc
lahf
mov
or
mov
sub
pop
outsl
push
inc
into
inc
dec
mov
sbb
loope
mov
push
xchg
arpl
push
insb
inc
shll
and
loopne
iret
test
adc
scas
xor
pop
pop
inc
lods
push
stos
sub
adc
mov
subb
lahf
call
push
xchg
add
sbb
fwait
pop
pop
leave
stc
mov
lret
push
inc
adc
lcall
ret
insb
mov
xor
lret
and
xor
stc
jg
mulps
push
ud1
rorb
xchg
push
cli
mov
adc
mov
outsl
in
push
mov
out
push
push
pop
out
aam
xor
sub
add
stos
jmp
js
pop
aad
mov
cmp
in
js
scas
call
adc
sbb
push
js
or
inc
inc
daa
mov
pop
sbb
and
test
sarb
test
sahf
and
mov
lods
nop
sbb
cld
pop
notl
lret
insl
and
ja
insl
mov
jbe
in
sbb
cmpsb
add
test
sub
adc
scas
mov
test
cli
faddl
or
pusha
sbb
add
dec
cmc
rorl
dec
sti
ss
xchg
jmp
es
xchg
add
cmp
mov
mov
data16
in
lods
xor
jle
pmullw
mov
pop
aad
test
pop
jae
inc
sub
cli
sub
sahf
cltd
and
in
popf
in
cmp
daa
push
and
inc
mov
sbb
pop
push
lods
daa
cld
idivl
or
test
in
cltd
xor
lcall
das
push
mov
jge
or
mov
sti
or
call
in
or
pop
xchg
jle
add
fildll
in
jb
jp
adc
add
jecxz
add
mov
mov
in
inc
xchg
adc
scas
data16
sar
and
jo
out
lds
adc
in
loop
test
decb
rcrl
mov
or
sub
es
xchg
pusha
cwtl
arpl
inc
mov
scas
push
pushf
pusha
outsl
loop
popa
lcall
cmpsl
imul
jb
decl
or
xchg
xchg
aam
xchg
mov
jg
lret
push
mov
pusha
outsb
xor
or
xor
in
outsb
outsl
imul
cwtl
in
lahf
addr16
mov
add
xlat
dec
xlat
fcmovne
cwtl
cli
outsl
xor
mov
cmp
cmpsl
call
or
and
or
adc
xlat
insl
xchg
inc
test
and
xchg
ljmp
call
xchg
xchg
clc
aaa
fisttpl
sarb
ljmp
cmp
cmp
adc
sbb
adc
dec
inc
sahf
rep
cmp
add
jmp
fsubrl
in
jnp
lret
lret
cli
and
cs
inc
or
ret
mov
vandnps
mov
push
lds
testb
lcall
and
cmp
cmpsb
and
rorl
mov
jecxz
sbb
or
cmp
mov
out
pop
xchg
ljmp
std
inc
sbb
xchg
xchg
test
adc
pushw
dec
xchg
jle
jae
insb
adc
mov
cmp
sub
rclb
imul
add
orb
cmove
movsl
shr
lds
sarb
outsl
mov
fs
jne
xor
pop
sbb
testl
lock
adc
pop
mov
mov
loope
cmpsb
inc
inc
sub
sub
mov
out
iret
ja
xor
in
fisubs
cmp
int
mov
xlat
bnd
call
stos
mov
mov
sbb
fildll
scas
aad
inc
push
orl
popa
ljmp
out
xchg
adc
outsb
rclb
adc
push
xorl
or
fisubl
pop
add
jmp
jg
xchg
pop
add
cmp
fmul
jp
xchg
mov
cld
pop
movsb
mov
out
jb
es
jne
inc
scas
inc
addr16
test
in
jle
inc
and
int3
aam
outsb
xorb
pop
out
push
mov
xor
insb
inc
lods
ss
rolb
js
mov
int
inc
int3
mov
push
xchg
push
jbe
lea
ja
int3
icebp
jle
fs
sbbb
fmuls
cmpsl
or
dec
dec
mov
sub
xlat
mov
push
xchg
push
sub
pop
fdivrl
pop
mov
jmp
push
and
mov
rclb
or
or
ja
out
das
iret
fsubr
lahf
leave
faddl
mov
xorl
xchg
scas
sbb
cmp
mov
jbe
sub
ret
jmp
push
lods
cmp
push
mov
loopne
jle
ds
sbb
cmp
jp
add
ret
add
mov
push
inc
mov
in
xchg
sti
call
mov
add
stc
push
sbb
mov
int3
mov
inc
xlat
inc
add
inc
mov
xor
scas
repz
cmc
mov
orb
push
mov
add
push
xchg
xchg
mov
in
inc
pop
xchg
push
out
mov
add
ds
mov
fyl2xp1
aas
fsubs
sub
loope
mov
dec
shll
outsl
hlt
out
pop
add
push
mov
mov
xchg
fcom
fwait
loop
and
movsl
adc
jne
and
dec
sub
push
lea
xor
orl
mov
gs
fsub
sbb
inc
rolb
pop
dec
pop
aas
xchg
and
in
pop
test
sbb
insb
orl
and
imul
fwait
cwtl
insb
leave
xor
and
inc
xchg
pop
bound
arpl
add
test
aam
negl
sbb
scas
in
jne
adc
cmp
lock
cmp
sbb
sbb
jbe
pop
lret
jmp
testl
popa
lea
mov
loope
movsl
test
mov
xchg
lods
jbe
push
jge
push
xor
mov
sbb
out
ds
sub
in
push
push
fs
mov
int3
mov
pop
or
lahf
sbb
test
cmp
idiv
xor
movsl
aas
imul
xchg
in
sahf
sub
xor
es
pop
adc
std
xchg
mov
inc
outsb
inc
cmpsb
dec
xchg
in
imul
jns
mov
jcxz
aad
push
test
dec
jbe
out
sbb
lock
jb
fildll
aad
sub
dec
mov
pushf
fwait
imul
sbb
push
sub
test
int3
cli
test
clc
cld
mov
stc
fcoml
fidivs
jg
out
lock
mov
dec
shll
mov
sub
fisubs
pop
sahf
and
popa
shlb
enter
fldl2e
pop
loopne
popa
mov
cmp
or
lods
cmp
test
adc
add
sti
or
adc
fisubl
inc
scas
xor
inc
sbbl
sub
shll
fiadds
pop
inc
sarb
test
outsb
or
add
push
fisubl
xchg
loop
fisubl
cmp
jp
inc
dec
mov
dec
adc
pop
inc
or
jg
cmc
fadd
or
out
shlb
pop
or
sub
fwait
lahf
or
ja
negl
or
sti
notb
mov
push
xor
shll
add
push
lahf
js
adc
mov
cmc
mov
shr
inc
xchg
andb
ljmp
adc
popa
xchg
in
loop
movsb
jecxz
imull
fldcw
out
sbb
push
stos
subl
pop
mov
xchg
enter
dec
sbb
sub
in
aaa
jns
setl
xchg
push
in
dec
mov
jle
xlat
stos
and
adc
push
push
test
ret
inc
adc
inc
test
jae
pop
hlt
mov
sbb
add
icebp
adc
ret
je
jecxz
or
ret
mov
dec
cmpsl
cmp
cs
push
fwait
lret
mov
data16
mov
repnz
dec
scas
icebp
outsb
sub
addr16
pop
pop
cs
and
and
jle
int
jb
icebp
cld
cld
sub
int
or
xchg
pop
mov
and
dec
sbb
ret
push
sbb
lea
int
push
add
fcom
and
mov
mov
xlat
add
leave
xor
pop
push
in
outsb
leave
subl
mov
loope
push
push
out
outsl
xchg
push
mov
xchg
xchg
cmpsl
lods
stos
xchg
ja
and
sub
test
and
xorb
mov
dec
mov
je
lds
loopne
mov
dec
cmp
adc
jge
adc
xor
dec
mov
xor
push
int3
push
sub
cmpsl
imull
addr16
cmpsl
add
push
xchg
loopne
loop
sbb
enter
sbb
mov
sbb
ret
push
arpl
loope
xlat
iret
dec
dec
add
mov
mov
xlat
mov
gs
lcall
subb
in
cmp
lock
xchg
call
insb
imul
pop
lods
mov
test
mov
sbb
mov
xorb
pop
sub
lods
mov
mov
nop
es
in
jge
sti
pop
sbb
xchg
mov
stos
test
cwtl
je
pop
insb
out
cmp
je
in
xor
jne
jmp
imul
imul
fidivl
out
push
pop
sub
or
xor
mov
lret
jmp
and
inc
iret
popa
inc
add
dec
dec
jp
xor
jmp
test
movsb
mov
or
inc
sub
outsb
loopne
mov
ja
sbb
push
xor
insb
and
movsl
jne
sub
cltd
cmp
imul
pusha
adc
int
xchg
jecxz
in
jmp
dec
jp
pushl
pop
pop
outsb
adc
stos
pushf
or
xor
push
and
adc
xchg
and
push
inc
stos
mov
imul
mov
mov
xor
ljmp
mov
inc
add
sbb
ret
dec
ljmp
daa
cmpl
test
mov
mov
mov
scas
dec
cwtl
pop
and
or
stos
sbb
rolb
dec
pop
mov
jmp
push
adc
dec
sub
out
push
movsl
add
and
pop
sub
test
ja
mov
pop
and
insl
faddl
xchg
jno
xchg
and
and
orb
dec
nop
das
icebp
aas
clc
mov
mov
out
out
mov
xchg
push
imul
cmp
inc
push
mov
jne
inc
arpl
cli
xor
pop
popa
cld
popf
and
push
loop
test
mov
pop
sub
sbb
pop
mov
in
inc
pop
or
lret
arpl
and
sarb
cli
jl
pop
inc
sbb
add
fdivp
pop
stos
pop
adc
lret
mov
sbb
scas
xor
movsl
jge
add
dec
pushf
notl
mov
jns
push
ljmp
out
hlt
cwtl
or
or
out
mov
sbb
into
cmp
repnz
pop
or
divl
ljmp
jmp
out
xchg
dec
jb
or
push
xchg
push
jecxz
push
out
mov
sarb
shrb
mov
xor
sub
mov
mov
jno
pop
jmp
cmp
cmp
fwait
popf
data16
dec
xor
mov
jle
loope
out
ret
push
xlat
add
repnz
loope
test
loope
mov
imul
adc
cmp
outsl
xchg
xor
jbe
xlat
xor
loop
lods
jg
data16
negb
cmpsb
rorl
xchg
loop
out
mov
sbb
push
adc
in
sub
shlb
and
in
cmp
ret
adc
push
fadds
cmpsb
insb
cli
bound
pop
pusha
dec
xchg
fstpl
cmp
mov
mov
sbb
cmp
xor
push
mov
and
movsb
sbbb
or
and
lock
mov
lods
daa
add
push
push
mov
sbb
orb
and
dec
and
cmp
insl
sbb
xor
aad
mov
popl
mov
movsl
orl
mov
push
sub
outsb
push
cmpsl
jne
cmp
stos
dec
and
and
mov
adc
incl
icebp
pushl
pop
pusha
cmp
lret
xor
push
divb
movsl
push
sahf
loop
xchg
cmp
xchg
shl
stos
test
mov
xor
inc
insl
xchg
dec
mov
pop
adc
pop
or
xlat
mov
inc
mov
shrl
lret
xchg
mov
cmp
push
mov
cmc
jle
mov
fnstsw
sbbb
fcomps
stos
in
xchg
add
push
pop
or
popa
insb
scas
mov
mov
mov
call
call
mov
pop
test
adc
das
imul
inc
stos
popa
pushf
sub
sub
jo
and
pop
sbb
add
sarb
dec
stc
stos
mov
jae
das
pushf
or
push
movb
test
cmp
fcom
scas
in
sub
mov
ljmp
orb
jmp
iret
in
fmuls
lret
lahf
out
mov
in
xor
gs
divb
fwait
in
xchg
or
mov
stos
les
loope
jp
icebp
sbb
jl
inc
xor
sbb
xchg
ret
mov
pop
test
push
and
push
movb
ja
mov
jnp
dec
mov
dec
cmp
push
enter
jl
arpl
cld
stc
push
popa
xchg
scas
mov
popa
push
dec
mov
xor
cmp
sahf
mov
cli
leave
sar
sbb
xchg
and
lret
mov
or
stos
pop
fwait
cmpl
mov
pusha
or
test
add
aam
aam
mov
popa
mov
repnz
mov
cmpsb
or
lcall
jecxz
push
sbb
inc
or
cmpsl
sub
mov
sub
jbe
inc
push
std
movsl
cwtl
xor
mov
xchg
aas
xor
repz
sub
repnz
stos
push
fldln2
pop
mov
dec
dec
mov
arpl
stos
lods
lret
ror
mov
cltd
dec
lods
mov
jo
push
inc
xchg
or
push
into
add
dec
xor
outsl
push
shll
and
pop
dec
mov
adc
popa
pop
and
out
popa
add
and
nop
insb
addr16
cmp
insl
iret
or
fiadds
jg
out
pop
mov
jle
xor
inc
and
mov
pop
incb
mov
cmp
cmp
pop
add
scas
and
sarb
cmp
cs
pop
xchg
lcall
add
xchg
pop
les
mov
mov
cmp
lds
andl
jo
aas
scas
out
jecxz
test
stos
push
mov
jmp
lahf
pop
out
or
or
lahf
popa
in
or
out
dec
sahf
xchg
push
aam
push
es
test
movsl
xchg
imul
add
xchg
jle
mov
push
add
cmp
adc
out
xorb
ret
mov
orb
sbb
push
dec
jnp
or
mov
outsb
repz
cmp
es
loop
movsb
mov
mov
test
gs
mov
mov
push
pop
cmp
or
addr16
or
adc
bound
scas
inc
lahf
pop
mov
lret
cmp
dec
jnp
lods
inc
fisubl
jecxz
dec
insb
add
andb
pop
add
jmp
stos
ret
pop
inc
rolb
pop
add
ficoml
jmp
sbb
hlt
or
fimuls
bound
cs
mov
lods
sub
pusha
xor
jle
and
push
jbe
inc
shll
stos
addl
lods
xor
scas
xchg
roll
adc
push
cli
adc
inc
mov
sbb
dec
xor
je
cmp
fcomp
or
jmp
popf
sbb
enter
fldl2t
lret
paddsb
lcall
xchg
push
xor
mov
mov
mov
dec
ss
push
scas
xchg
adcl
outsb
add
jo
mov
adc
push
xchg
dec
scas
xchg
mov
lods
mov
pop
dec
pop
mov
movsl
outsb
and
jp
sub
or
pop
fnstcw
lahf
mov
int3
out
cmp
sbb
push
repz
sub
cmp
imul
loopne
sub
ljmp
in
outsl
push
and
pushf
ss
into
adc
shlb
in
sti
popf
pop
jbe
mov
pusha
cltd
cld
lods
addr16
xlat
dec
sarl
lcall
push
mov
push
outsb
imul
mov
push
leave
aam
andl
xchg
xor
push
gs
push
fdivr
cltd
ret
adc
ficompl
jae
mov
movsb
jo
mov
and
mov
aaa
xor
mov
lcall
outsb
and
neg
ja
lahf
inc
jne
push
loopne
xor
push
push
mov
lcall
into
adc
data16
xor
lds
mov
push
leave
pop
nop
xchg
movzbl
push
fldcw
pop
cmp
stc
mov
pop
push
ljmp
xor
xor
and
dec
jl
sub
push
jl
add
les
sbb
pop
cmp
int
call
popf
add
jbe
aad
or
cmpsb
scas
js
lret
add
outsl
rcrl
pop
insb
pop
jae
and
xchg
mov
ss
jae
pop
mov
mov
es
pop
nop
add
call
mov
sahf
in
out
adc
push
inc
scas
sub
filds
push
arpl
mov
jg
mov
fcmovnb
aas
jnp
dec
sub
arpl
push
cmpb
popa
fisubrl
push
out
pop
movsl
divl
push
icebp
mov
sub
jne,pn
daa
dec
or
les
fidivrs
xorl
push
repz
jmp
sbb
in
cmc
jbe
mov
ret
inc
jecxz
cs
mov
xchg
or
add
je
or
xchg
xchg
jecxz
and
pop
sbb
mov
inc
xchg
das
mov
lret
sbb
hlt
mov
sub
stos
xorl
adc
gs
cmp
jecxz
hlt
jbe
jnp
dec
push
mov
jae
push
arpl
fs
outsb
push
lahf
and
push
and
mov
adcb
cwtl
inc
addr16
mov
dec
fldl
out
outsb
popf
out
xchg
loopne
push
flds
mov
and
jns
shlb
dec
leave
cli
fs
pop
ja
jns
outsb
daa
push
fwait
ror
scas
or
loop
es
mov
sbbb
cltd
pop
mov
jecxz
cmpsb
xchg
shl
xchg
push
les
incl
sub
sbb
pushf
jmp
xchg
jb
xchg
xchg
mov
adc
pop
inc
out
pop
cmp
out
xor
data16
addr16
in
adc
mov
adc
sub
bound
xchg
add
cs
adc
cmp
arpl
movsl
cld
mov
ljmp
mov
mov
mov
shll
fcmovnb
shrb
rolb
rorb
push
mov
mov
inc
inc
aas
lds
mov
or
xlat
jge
cmp
jge
popf
mov
call
outsb
pop
movsb
sub
mov
jge
in
push
les
mov
sub
sti
outsb
les
lds
or
jmp
pop
ljmp
in
xchg
cmp
ss
or
dec
xor
adc
fwait
adc
push
popf
lods
mov
loope
in
adc
mov
orb
cmc
dec
or
pop
pop
adc
out
mov
mov
and
rcrb
lret
cmpsb
cwtl
xchg
popa
cmp
or
and
sbb
das
pop
pop
and
or
jno
and
inc
sub
mov
filds
push
jmp
pop
jmp
iret
negl
jmp
push
cmpsb
jns
push
dec
cli
daa
adcl
jmp
lods
mov
hlt
cmp
adc
push
adc
mov
mov
add
mov
xor
call
stos
adc
jae
or
xchg
mov
cmpsb
add
or
push
jae
jl
mov
dec
jl
lods
mov
movsl
and
enter
mov
loopne
mov
ds
pop
imul
mov
into
subl
ss
cmpsl
das
inc
stos
std
ficompl
jne
pop
les
add
add
cmp
lods
subl
popa
decb
std
mov
gs
ljmp
cmpsl
push
adc
stos
cmp
lret
orb
mov
idivb
push
dec
mov
inc
leave
dec
leave
and
mov
fsubrl
mov
aad
int
pop
lods
sti
lea
out
mov
adc
add
xor
sub
cmp
out
mov
or
mov
adc
xchg
imul
adc
lret
dec
sub
push
loop
mov
mov
push
xchg
add
dec
xchg
leave
lret
jmp
jnp
and
mov
xchg
inc
push
adc
pop
adc
mov
mov
xchg
sub
fisubl
rorl
loop
adc
aas
or
cmc
inc
jp
test
push
xor
dec
loopne
sub
les
inc
sbb
pop
sub
add
in
mov
push
sub
movsb
stos
gs
cmc
gs
in
inc
lea
xor
add
repz
lahf
jl
xchg
push
and
sub
mov
repz
aas
mov
and
or
aad
gs
sbb
inc
xlat
aas
fadds
movsl
mov
inc
lret
call
aad
jb
xor
xor
or
or
xchg
push
inc
mov
and
sub
test
rcr
cs
lret
mov
fldcw
xor
js
cmp
push
add
int
sub
mov
lahf
and
fisttpll
dec
in
fbld
test
iret
jg
xchg
fiaddl
sub
jle
adc
lret
push
cmpb
or
mov
lret
mov
scas
or
mov
outsl
pushf
xor
jbe
jp
popa
mov
xchg
dec
fxch
jl
inc
in
push
std
adc
push
adc
cmp
insb
and
mov
loop
xor
xchg
mov
mov
mov
ja
jae
push
fnstenv
les
sar
cli
xlat
nop
push
std
decl
es
fadds
adc
fwait
add
pop
mov
movsl
cli
ljmp
cmp
and
sbb
mov
scas
sbbl
lahf
dec
shll
add
add
sub
inc
adc
and
pop
loope
mov
cmp
xor
daa
lods
out
ds
mov
cmp
sbb
sbb
cld
sarb
scas
mov
or
test
xchg
and
enter
add
mov
xor
and
js
iret
mov
mov
lcall
xchg
or
jge
cmp
xchg
and
or
lds
loop
jno
sbb
push
in
jecxz
xor
insb
sub
fbstp
movsl
ret
leave
push
mov
and
pop
dec
mov
fnstenv
jp
push
push
mov
fst
push
mov
cmpsb
cltd
lret
xor
cmpl
mov
mov
pushf
fidivrs
dec
out
test
and
inc
or
test
sbb
leave
pushf
jle
jns
pop
aam
jne
sub
cs
mov
icebp
inc
les
loopne
lock
nop
out
and
or
out
std
adc
dec
je
or
push
mov
fldcw
jbe
jg
mov
mov
sbb
lods
cltd
xor
mov
cwtl
popf
daa
mov
insb
pop
sbb
ret
xchg
loop,pn
je
jecxz
mov
jno
push
xor
mov
mov
sbb
addr16
leave
push
test
mov
cmp
jo
sbb
loope
orl
push
mov
pop
add
daa
xor
sub
sub
sub
cld
lock
mov
stos
push
into
jle
insb
or
pop
inc
push
xor
aas
jp
fstps
cmp
loope
xor
push
out
ret
movsb
sti
in
sti
dec
fiadds
xchg
lods
xor
js
jo
adc
loopne
sub
mov
xor
ror
sbb
lahf
fimuls
test
sub
mov
sub
lret
mov
mov
jmp
fimuls
hlt
sarl
int
ss
push
add
stc
adcl
add
jns
dec
inc
xchg
outsl
push
pop
loopne
clc
sub
xchg
xchg
mov
lea
stos
dec
sub
sub
mov
data16
jb
mov
cmp
xorl
xchg
loopne
xlat
add
or
sahf
fbstp
jl
insl
inc
xor
bound
mov
dec
push
dec
and
rolb
add
adc
lahf
into
add
adc
in
xor
loope
mov
cwtl
push
push
out
cmp
in
repz
pushf
lods
jp
movsl
add
movsb
mov
je
jbe
clc
out
or
into
push
sti
add
sbb
and
push
dec
inc
mov
out
pop
sub
push
dec
mov
push
imul
cmp
sub
xorl
pop
jmp
inc
movsl
adcb
pop
sbb
rcr
lods
xchg
jle
stos
arpl
mov
adc
adc
das
xor
outsb
cmp
jle
xchg
daa
cmp
cmp
std
rcll
mov
jl
outsb
jge
dec
mov
mov
jg
cmpsl
or
mov
loopne
addr16
lret
push
cmp
jbe
xor
sbb
aad
sbbl
lret
mov
insl
lret
out
mov
insb
push
into
das
repz
jns
outsb
pop
dec
insb
das
bound
in
cld
mov
adc
push
inc
mov
stos
push
xchg
xor
repnz
test
rorl
xor
jl,pt
std
aas
push
test
jbe
test
push
ds
fmull
fndisi(8087
das
pop
out
pop
ret
movb
and
push
adc
loope
cmpsb
xor
cmp
mov
pushf
iret
jmp
movsl
cmp
in
push
subb
lea
mov
or
mov
lds
push
daa
je
adc
lret
rcrl
pop
add
cli
sbb
xor
inc
icebp
in
lods
call
sbbb
fucomi
repnz
xchg
adc
and
dec
adcb
repnz
fidivl
call
pop
nop
mov
mov
jbe
sahf
or
xchg
or
mov
jnp
fldl
push
ss
pop
loop
pop
lock
jbe
cld
xor
adc
addr16
sbb
push
push
sub
mov
cli
lret
push
inc
sub
jno
outsl
js
mov
inc
push
pusha
xlat
mov
stos
incw
mov
ja
push
cmp
out
mov
je
cmpsb
jbe
dec
out
sub
lret
ds
lock
inc
call
mov
nop
adc
xchg
cmp
xchg
mov
xchg
xlat
xchg
xlat
into
pop
test
mov
out
popf
mov
je
aam
pop
inc
push
cmpb
fisttpl
cmp
mov
ds
cmp
xor
cmp
ret
and
xchg
fs
jne
mov
dec
cmp
lea
jl
jmp
pop
xchg
xchg
xor
jne
or
gs
ud1
dec
xor
jbe
push
test
nop
out
lds
in
and
pop
pop
out
mov
and
aad
lahf
repnz
mov
xchg
sbb
add
loope
loope
mov
pop
jge
lret
push
lods
dec
push
jns
mov
cwtl
xchg
fildll
push
mov
and
pop
faddl
lods
add
je
sub
cmp
adc
sub
in
xor
stc
divb
outsl
mov
xchg
dec
mov
sub
sub
fwait
xchg
nop
inc
cmc
pop
and
loopne
xchg
pop
and
lret
pop
test
pushf
adc
jne
mov
or
arpl
sub
cmp
test
insb
push
mov
push
imul
sbb
popa
es
frstor
subb
pushf
fdivrs
sub
cmp
pusha
loop
dec
js
int3
mov
les
icebp
mov
ja
jl
sub
das
pop
ret
mov
clc
mov
and
repnz
jmp
pushf
repnz
push
stos
popf
push
cs
mov
fs
ja
std
adc
push
fildll
push
pop
lret
push
jns
sbb
js
call
clc
mov
xchg
and
rclb
sbb
mov
test
jl
scas
pop
mov
jns
inc
aam
jno
or
xor
insl
jge,pn
inc
pop
cwtl
je
int
dec
ljmp
jecxz
jb
push
add
fsubs
punpcklwd
adc
sub
lds
pop
testl
inc
cli
dec
lcall
mov
xchg
inc
adc
pop
shll
pusha
pop
out
lods
mov
pushf
or
pop
mov
or
aad
jnp
cli
dec
lods
outsl
mov
mov
cld
mov
sahf
push
mov
dec
stos
outsb
xchg
hlt
push
jns
out
aas
das
repnz
push
mov
dec
and
in
pop
ret
shll
pop
inc
call
push
or
jb
js
outsb
inc
and
or
add
sarb
test
fs
push
int
lcall
mov
fistps
xor
fstps
test
loopne
pop
and
and
out
push
mov
scas
cli
jns
adc
inc
dec
xor
push
fadd
jmp
outsb
cmp
pop
jo
pop
sbbb
cmp
xchg
lock
loopne
stc
test
add
scas
adc
cmpb
aam
xchg
sub
inc
push
pop
in
jno
jl
and
out
rcrb
aam
mov
insb
pop
cltd
lock
rcrb
shrb
xchg
aam
scas
rcll
push
aas
xor
sbb
insb
fsubrl
ret
gs
out
pop
dec
cmp
movsl
scas
mov
loope
cmp
add
scas
aas
int3
sub
jne
cmp
mov
fbstp
jmp
and
aam
ja
pushf
scas
call
push
mov
push
mov
xorb
test
pop
push
gs
testl
adcl
xor
ficoms
scas
jge
dec
mov
fsubrl
pop
pop
mov
mov
adcl
subb
arpl
mov
nop
xchg
mov
aas
push
xlat
out
imul
pop
push
sub
mov
dec
in
mov
ja
mov
add
cwtl
inc
inc
inc
out
icebp
push
lea
or
adc
lock
out
imul
xchg
xchg
clc
sbb
shl
dec
inc
adc
jge
test
ss
jl
jnp
int
jp
stos
cmp
sub
int
push
lds
pusha
mov
out
js
inc
xchg
orl
jbe
jl
mov
out
jo
pop
mov
inc
lcall
push
shlb
int
or
out
mov
std
int3
push
jp
sbb
lcall
mov
scas
cmp
js
push
les
cmp
xchg
int3
les
movsl
inc
icebp
jo
dec
jae
into
xor
xlat
cmpsb
fmull
js
cmpsl
and
sbb
push
cmpsl
xchg
outsb
push
mov
push
cmpsl
ss
mov
sbb
out
push
aas
in
stos
inc
movb
cwtl
pushf
jge
daa
sahf
insb
adc
icebp
add
add
mov
jno
mov
pusha
mov
add
mov
mov
pop
mov
rol
xchg
push
js
sarl
xor
xchg
pop
mov
mov
push
mov
popf
mov
add
jecxz
ret
into
xor
cmc
pop
scas
pop
lods
xchg
out
stc
xchg
das
or
in
inc
mov
sub
fstpl
push
sarb
bound
add
jbe
push
lahf
cmova
ret
roll
add
aad
add
shrb
loopne
pop
inc
or
inc
push
lahf
movsb
dec
pop
mov
push
sarb
movsb
cmp
pop
sbb
mov
add
inc
cmp
data16
xor
mov
cmp
jb
inc
lcall
in
hlt
adc
clc
lods
sbb
push
rorb
lret
push
fadds
sbb
adc
outsb
ret
scas
sti
cwtl
jmp
jo
cmp
mov
jle
or
into
icebp
sub
adcb
push
mov
jb
pop
jecxz
or
pop
and
dec
fistl
or
and
or
outsl
into
pop
push
mov
mov
jmp
leave
mov
stos
cmp
fdivrp
popa
ljmp
lods
fisubl
sahf
fimull
xlat
mul
mov
sub
xchg
lret
cmp
ret
mov
xchg
xchg
sahf
dec
test
in
ljmp
adc
cltd
int
mov
out
add
mov
in
std
out
hlt
dec
push
sub
call
in
ljmp
pop
cmp
add
inc
icebp
mov
outsl
pop
insb
mov
mov
gs
push
aaa
mov
arpl
inc
jmp
or
fldcw
loope
lret
loop
sbb
mov
imul
outsb
lret
and
add
mov
movsb
push
negl
call
xor
out
xchg
mov
mov
jne
push
iret
mov
pop
push
mov
in
out
ss
push
jecxz
push
inc
data16
xchg
pop
lcall
es
xor
nop
pop
pop
mov
ds
fldenv
push
repz
dec
mov
ds
jae
add
xor
mov
mov
add
int3
pop
daa
inc
and
xchg
xchg
dec
adc
sahf
dec
mov
ret
push
test
pop
vorpd
lcall
lock
psraw
test
sub
arpl
sub
sahf
hlt
hlt
xchg
dec
popf
xlat
cmp
out
xchg
dec
cld
cmp
cmp
mov
adc
inc
cmpsb
pop
dec
iret
adc
xlat
cmp
sbb
hlt
daa
xchg
pop
lods
dec
movsl
xor
inc
dec
xor
addr16
mov
pop
jp
cmp
push
out
fisttpl
outsl
mov
ja
mov
jmp
aad
cs
shrb
dec
cmp
jp
xorl
jle
nop
dec
sub
pusha
fdivs
jecxz
push
icebp
inc
cwtl
sbb
gs
clc
popa
mov
imul
mov
dec
in
sti
arpl
mov
es
pusha
fmul
dec
aam
aad
and
lcall
jge
imul
out
pop
movsb
xor
pop
fst
test
orl
in
movsl
fwait
dec
fisubs
xchg
sub
pop
cmp
cmp
sbb
cwtl
fnstsw
insl
xchg
andb
nop
dec
push
mov
es
jno
in
pop
mov
jb
push
das
inc
rcr
pop
jns
call
adc
push
pop
or
fisubrs
daa
xchg
mov
sub
add
dec
add
or
xchg
mov
dec
cmp
sbb
in
adc
add
pop
xor
adc
ret
cmp
loopne
xchg
pop
mov
das
shl
loope
icebp
lock
lcall
sub
insl
cmpsb
lods
dec
mov
loope
xchg
inc
mov
in
fdivp
cld
lods
mov
adc
fdivrl
loopne
add
dec
dec
cs
mov
and
mov
aas
xchg
ds
pop
inc
or
arpl
out
push
repz
xor
iret
outsb
data16
jae
jle
fildll
dec
rcll
and
fwait
or
cmpsb
cmp
jg
mov
std
cmp
hlt
cmpsl
mov
and
enter
imul
cmp
mov
xlat
push
dec
movsl
and
je
jle
lods
cmp
jns
into
xchg
mov
aam
and
mov
fadd
das
scas
movsb
leave
and
and
aad
mov
imul
cli
pop
les
add
dec
sbb
mov
sbb
mov
fnop
or
mov
scas
ja
jae
jge
and
into
lahf
mov
shll
pop
dec
push
mov
lods
or
push
sub
movsl
sbb
dec
pop
inc
pop
pop
idivl
fmuls
xchg
lea
mov
ds
negb
xchg
adc
out
inc
getsec
lock
cmp
imul
cmc
and
idivb
xor
jb
dec
xchg
fdivp
cmpsl
sbb
scas
jmp
lock
cwtl
in
addr16
lock
xor
jge
mov
jle
cld
sub
cwtl
mov
fstpl
sub
jb
jp
xchg
jo,pt
fdivr
add
dec
cld
cli
jg
jle
push
mov
jae
jne
scas
mov
xor
cmp
inc
inc
bnd
jbe
fs
out
adc
push
push
xlat
ljmp
lods
or
fcoms
stos
jecxz
and
push
dec
dec
gs
test
mov
dec
cmp
lahf
jle
jnp
adc
sbbb
gs
mov
mov
jl
rol
inc
fstl
mov
movsl
adc
cmp
ja
jle
rcrl
xchg
sbb
jae
inc
jb
xchg
dec
hlt
dec
lcall
shl
cmpsb
out
mov
pop
pop
push
push
out
fnstenv
in
cmp
pop
sub
ljmp
inc
inc
lods
mov
bound
xchg
add
push
pop
push
stos
scas
pushf
jg
ja
movsb
jmp
int3
mov
scas
enter
stos
pop
and
mov
jb
fdivs
jmp
pop
pop
sarl
sahf
mull
inc
jb
sbb
mov
int
and
push
mov
jge
int
inc
sbb
das
push
nop
or
popa
scas
rcrb
mov
push
mov
mov
and
into
pop
repnz
mov
push
aad
xor
cwtl
xchg
cld
enter
in
pop
cli
mov
inc
in
daa
shlb
jbe
scas
nop
inc
mov
clc
jge
std
mov
jnp
or
xor
xor
xorb
push
xor
sbb
jle
cmpsl
xchg
inc
sub
push
adc
inc
pushf
cmp
out
nop
inc
cmp
arpl
or
pop
std
mov
inc
xchg
js
ss
cmp
cmc
sbb
pop
or
test
bound
push
mov
sub
xchg
imul
lods
mov
cmp
push
fisubrl
pop
sub
rorb
out
scas
out
sub
push
sub
mov
dec
dec
int
cltd
xor
fsubp
imul
jne
xchg
push
cwtd
xchg
ljmp
xor
pop
stc
adc
std
add
repz
popa
sub
lret
ret
adc
pop
repnz
out
popf
jo
add
out
lds
divl
xor
loopne
or
jge
in
lcall
dec
cmp
jp
imul
push
negb
push
mov
cs
xor
adc
or
mov
mov
testb
xchg
popf
xorl
fidivl
and
sbb
leave
rolb
insb
add
xchg
out
pop
and
sbb
lods
popa
jp
addr16
cwtl
test
lcall
xor
cli
inc
jbe
jecxz
pop
ja
fcom
mov
popf
pop
xor
lock
aaa
push
cmc
sub
push
xchg
push
aaa
cmp
jl
mov
sbb
inc
iret
int3
rcr
test
filds
push
cmp
lcall
jle
dec
mov
scas
dec
jl
insl
fistl
lds
xchg
jle
and
cmp
cmpl
es
pop
dec
pop
mov
jnp
xchg
jl
sar
aad
roll
cmp
out
mov
mov
dec
adc
pop
push
xor
fs
push
pop
sbb
jno
sahf
mov
data16
ljmp
sub
sub
push
enter
enter
cmpsl
imul
scas
and
jnp,pn
adc
xchg
xor
or
repz
adc
jmp
bound
icebp
mov
xchg
lods
std
and
xchg
jnp
test
pop
inc
xor
stc
xor
mov
jmp
stc
inc
dec
fcomp
inc
addr16
or
mov
ret
in
ljmp
xor
pop
mov
add
push
cld
shll
pushf
and
or
mov
rcrl
mov
mov
jo
test
jl
lahf
xchg
or
push
adc
push
pop
les
and
dec
push
mov
jl
mov
push
fs
push
adc
test
in
pop
and
inc
pop
movsl
sahf
mov
xchg
shlb
mov
inc
shll
mov
xchg
insl
idivl
addl
adc
mov
scas
dec
incb
dec
sub
out
fldt
adc
adc
loopne
and
aas
or
dec
leave
cmp
lods
ret
mov
dec
jno
sub
jmp
ret
mov
adc
lds
inc
pop
lock
mov
xchg
push
inc
pop
mov
fsubrl
lahf
imul
loope
jmp
pusha
in
push
arpl
jno
sub
lds
fcoml
cmpsl
iret
push
inc
pushf
lret
std
add
add
mov
xchg
les
sahf
repz
adc
rcl
jp
xor
mov
inc
dec
scas
int
pop
mov
push
jle
cmpsl
ss
xchg
icebp
push
mov
testl
js
sub
fdivl
lcall
cltd
test
inc
pop
mov
dec
xchg
cli
icebp
rorl
pushf
ret
adc
sti
mov
pop
daa
lods
xor
inc
mov
aaa
inc
addr16
or
pop
fbld
mov
inc
add
push
cld
cld
imul
adc
pop
ss
test
scas
adc
psraw
mov
pop
sbb
ret
mov
inc
call
sbb
push
push
jge
lcall
pop
lea
stc
insl
mov
sub
push
inc
ret
or
add
mov
pop
fisttpll
fstps
call
lea
mov
or
add
cmp
and
int3
jl
lret
filds
push
dec
cmp
or
cs
int3
test
sub
mov
shrl
ret
js
movsb
mov
and
inc
addr16
mov
ss
pop
inc
xlat
into
movsb
or
pusha
xchg
adcb
pop
loope
adc
shrd
and
mov
rcll
cwtl
and
fsubrs
add
fadd
popa
inc
icebp
xor
jge
jg
lret
inc
xchg
pop
stos
lret
out
imul
dec
ljmp
jo
cmpsb
lret
bound
inc
push
dec
ret
fcom
in
aas
or
arpl
cmpsb
insb
inc
insl
lret
ja
push
mov
sbb
jge
adc
xlat
jns
int3
mov
jecxz
lods
jae
inc
cmpsb
sbbb
lds
cmp
ror
xchg
cld
aam
movsl
mov
aaa
test
jne
jns
hlt
cmp
mov
fsubl
arpl
sbb
push
into
adc
push
sbb
dec
sbb
xchg
dec
or
jl
inc
inc
and
js
inc
pop
sub
sbb
mov
mov
push
mov
mov
jg
aad
xor
jge
pop
out
and
rcll
xor
sub
xchg
pop
and
jmp
in
not
inc
lock
mov
or
mov
sbb
adcl
sub
insb
daa
cmp
iret
adc
mov
cs
dec
pop
xlat
push
sub
xor
hlt
cs
mov
stos
shll
in
outsw
adc
ja
test
arpl
mov
xchg
jbe
fisttpl
das
fs
pop
dec
in
daa
lret
adc
mov
xchg
ret
mov
jb
xor
mov
in
out
inc
pop
hlt
loop
fcmovbe
shll
push
mov
pop
imul
jmp
fst
jl
add
adc
pop
dec
enter
cmp
cmp
rorl
mov
and
cmp
cli
daa
xchg
nop
pop
adc
pop
fs
fisttpll
int
cmpl
cmp
leave
aam
cmp
mov
arpl
orl
ja
mov
push
sub
xlat
or
sbb
jno
inc
sarb
std
sub
popa
dec
dec
cwtl
cmp
stos
je
stc
jle
jge
inc
sbb
insl
inc
mov
jle
mov
mov
adc
movsb
jae
pop
fsubr
add
pusha
mov
adc
xor
jae
adc
lret
popa
push
xchg
imul
mov
and
into
push
mov
jno
sub
or
das
inc
fsincos
jno
dec
xchg
xorb
clc
call
and
stos
cmp
addr16
mov
inc
jnp
cmp
inc
pop
cltd
fsub
or
inc
in
mov
pop
cwtl
push
pop
cmpsl
push
adcl
cwtl
fcomip
scas
test
lret
adc
sbb
movsl
add
adc
bound
push
and
add
pusha
xchg
cwtl
std
popf
lods
shr
sbb
sbb
sbbl
sbb
jo
jne
sbb
gs
outsl
mov
inc
fimull
bound
jp
out
xor
std
adc
movsl
mov
test
add
sbb
xchg
in
xor
fisubrs
ret
fistpll
jo
mov
lods
xor
pop
imul
fs
fadd
rolb
test
ficoml
jmp
clc
xchg
lods
mov
std
adc
adc
mov
mov
dec
bnd
xor
xchg
add
dec
cwtl
pop
xchg
cld
xchg
dec
add
sti
dec
nop
sbb
jl
push
pandn
cmp
or
mov
push
add
pop
mov
xchg
loopne
repnz
pop
mov
ja
inc
add
mov
es
nop
or
scas
imul
out
fnstenv
lcall
adc
adc
add
rorl
push
push
cmp
clc
or
push
jo
xlat
adc
push
add
jl
mov
mov
jmp
sahf
mov
and
inc
cltd
add
pop
dec
push
outsl
fs
adc
ds
test
dec
fwait
lret
decb
stos
jne
or
push
dec
outsb
dec
pop
fcompl
add
out
cmp
xor
mov
mov
mov
jg
adc
cltd
mov
mov
sub
mov
aad
pop
sub
sub
adc
push
mov
mov
fsub
fistpll
jnp
and
outsb
sbb
ss
xchg
adc
adc
lahf
sub
jne
ror
pop
clc
push
sbbl
inc
ljmp
stc
and
lea
inc
faddp
xchg
icebp
xor
nop
jp
dec
sub
and
jnp
dec
les
mov
xchg
les
mov
jne
insb
pop
sbb
jo
std
sbb
jle
inc
add
jns
aad
pop
push
jae
orl
jb
imul
ja
js
lret
scas
and
sbb
out
xchg
in
hlt
ds
arpl
push
aas
fwait
cld
hlt
movsb
aad
mov
and
xchg
jle
std
jecxz
jge
lret
test
cmp
mov
int3
push
out
pop
cmp
shl
dec
pop
fistl
lcall
addr16
dec
or
adc
lret
test
aas
push
add
lahf
stc
in
dec
inc
and
and
xor
inc
stos
lret
and
mov
adc
sub
sub
cld
inc
push
sub
inc
js
shll
push
pop
dec
xor
jp
idivl
adc
aam
stc
cmpsb
or
mov
and
sub
lods
in
rcll
test
jle
stos
xchg
pop
adc
mov
xor
test
mov
lret
lods
iret
inc
js
das
push
rolb
jle
out
push
jge
jmp
rcrb
mov
xchg
adc
jnp
cmp
adc
xor
repz
pop
dec
dec
mov
mov
and
pop
hlt
xor
pop
cmovno
mov
sbb
lock
inc
mov
dec
cmp
mov
insb
xor
data16
or
scas
xor
in
jmp
scas
cs
mov
add
mov
lods
enter
cli
adc
insl
add
fistpll
sub
mov
sar
imul
sbb
mov
dec
cmp
pop
scas
inc
int
push
xchg
push
in
scas
sub
mov
cmp
xchg
bound
in
icebp
add
mov
rcrl
mov
dec
das
and
lret
mov
jnp
out
insb
sub
jae
rcrb
ljmp
loop
rcl
fcmovnbe
ret
in
jns
add
les
frstor
mov
adc
inc
adc
movsl
mov
ds
pop
inc
push
lock
mov
xor
aas
mov
mov
outsl
pop
dec
xor
xor
mov
inc
xor
adc
sbb
je
and
mov
gs
mov
inc
leave
add
test
push
mov
xchg
dec
test
data16
data16
in
xor
outsb
cmpsb
jbe
sub
outsl
or
mov
pop
mov
sub
dec
sbb
aas
rolb
loopne
lcall
dec
mov
enter
lea
pushf
pusha
enter
jmp
adc
mov
mov
pop
loope
ret
adc
pop
dec
aam
mov
sarl
adc
push
jmp
xchg
shrb
cmp
aaa
mov
leave
mov
cld
adc
sbb
movsb
frstor
std
jmp
xchg
aad
push
test
cltd
mov
enter
jecxz
aas
inc
xchg
or
call
jecxz
clc
xchg
pop
mov
mov
inc
sub
mov
mov
in
and
pop
cwtl
filds
aad
insb
push
cmp
fistpl
cmp
mov
add
jae
es
bound
out
cltd
repnz
insl
fidivl
add
adc
cmp
ficomps
add
or
rorl
mov
lods
jnp
or
mov
sub
jg
fcoml
testl
fldl2e
inc
inc
hlt
rcl
fcmovnb
lock
int3
jo
push
sub
pop
stos
andb
cltd
mov
lahf
sbb
fildll
xlat
pop
mov
fdivrl
fldl
and
movsl
outsb
sbb
push
leave
int3
lcall
in
outsb
ja
jne
ljmp
and
push
inc
aad
mov
int
add
mov
addl
inc
rclb
or
std
iret
orl
dec
mov
add
ja
repz
dec
push
adc
sbb
adc
sti
cmp
jo
in
insl
aam
pusha
adc
int3
std
inc
outsl
fimull
imul
in
push
jno
ljmp
jne
rcll
ret
shl
lret
sub
movsb
push
shlb
sbb
jecxz
mov
das
stos
push
mov
add
mov
cmpsb
xor
cs
pop
ljmp
jge
leave
fldt
cld
adc
pop
jp
sahf
jno
ss
sub
mov
push
mov
jno
push
cmpsl
je
les
pop
add
pop
test
xchg
dec
jecxz
mov
mov
cmp
insl
jl
mov
in
mov
add
stc
insb
dec
xchg
lods
mov
cmp
inc
dec
xor
or
jnp
int3
push
outsb
push
int
xchg
mov
cltd
enter
insb
lods
lret
popa
pop
cmp
ljmp
sub
call
mov
idiv
popa
mov
iret
push
add
bnd
sbb
inc
movsl
ret
cltd
jb
les
aam
mov
mov
add
js
mov
bound
fwait
mov
scas
inc
in
pop
stc
jbe
subl
nop
push
imul
lods
sti
push
arpl
jge
add
scas
lcall
xor
in
sbb
fadds
mov
loop
add
cs
in
pop
imul
dec
int
lahf
push
xor
movsb
inc
mov
mov
rcll
or
mov
rolb
mov
inc
lds
test
sub
stc
push
stc
ds
jnp
xor
dec
subb
jle
shrb
mov
adc
pop
xor
jp
xor
andl
jg
xor
push
adc
or
push
add
cmp
jo
mov
adc
mov
push
jbe
sbb
loop
pop
sbb
ret
pusha
cltd
mov
aad
jbe
insb
jge
adc
into
cmp
shrl
outsb
lahf
or
test
movsb
cs
pop
insl
pop
add
adc
fcompl
jle
movsb
add
fwait
mov
outsb
add
lcall
fstpt
or
cmp
inc
pop
scas
frstor
cli
cltd
rclb
repz
pop
rcl
jns
push
xor
hlt
jae
in
icebp
call
je
in
add
js
cmpl
loope
cmp
mov
mov
rcll
xorl
mov
out
aad
es
mov
pop
lahf
lcall
mov
insb
decl
sbb
iret
sbbl
pusha
fistpll
inc
xchg
push
scas
ret
push
icebp
test
enter
shrb
lret
ljmp
dec
dec
mov
insl
les
repz
test
add
sbb
cmp
mov
lds
adcb
lret
nopl
jo
pop
adc
insl
or
mov
mov
xchg
das
adc
addb
mov
or
call
lahf
xor
and
gs
cmpl
pop
fwait
cmp
add
jmp
nop
movsl
sub
xchg
stos
add
pusha
dec
cmp
mov
inc
push
iret
out
mov
sbb
das
jge
mov
mov
cmp
mov
loop
sbb
and
add
push
repz
frstor
mov
roll
test
out
popf
inc
and
push
adc
mov
loope
pop
jge
jp
nop
rclb
sarb
push
aam
hlt
std
jnp
mov
lock
clc
xor
jbe
insb
mov
and
add
adc
sub
cmp
xchg
add
lcall
lret
scas
push
bound
inc
push
jmp
inc
fs
mov
inc
mov
xlat
xor
mov
cmp
fld
adc
dec
lret
xor
jbe
repnz
int3
xchg
sbb
test
mulb
test
and
fistpl
mov
ljmp
clc
bound
outsb
int
std
rorb
adc
in
into
push
fstpl
into
jnp
jg
scas
pushf
ret
add
ds
icebp
add
push
mov
ror
fs
push
push
lret
arpl
inc
icebp
outsb
sub
mov
push
xchg
fimull
jae
mov
lods
pop
fisttpl
mov
pop
movsb
repz
lock
sub
mov
push
shrb
pop
mov
testl
jmp
rorb
dec
mov
cmp
in
outsb
jecxz
mov
push
aas
add
sbb
enter
cmp
fstp
mov
loop
ret
add
pop
inc
push
pop
jns
popa
xchg
sub
fldt
aaa
xchg
push
or
xor
insl
popa
int3
ror
jnp
cwtl
lahf
xor
dec
and
add
lcall
cmp
jecxz
hlt
movsl
shlb
stc
sub
iret
rcr
jmp
out
aam
ret
cmc
popf
cmpsl
mov
cmp
movsb
aaa
and
and
daa
or
data16
push
adc
lods
iret
loop
mov
dec
les
lret
lret
dec
sub
fstps
pop
cmpsl
sbb
test
cmpsb
or
xor
sub
and
inc
push
add
mov
mov
dec
cmp
loope
cmpsb
and
orb
cwtl
adc
inc
mov
xchg
xor
cmpsb
rsm
dec
push
push
push
add
xchg
or
stc
pushf
test
cli
popa
cmc
or
hlt
sbb
sub
inc
pop
mov
pop
jp
sbb
push
mov
lcall
xor
cs
test
mov
or
sbb
xchg
or
stos
loopne
ret
ds
sbb
mov
outsb
xchg
xlat
xchg
sub
push
sub
cwtl
cmp
mov
jno
prefetch
mov
nop
cwtl
push
lock
ljmp
pop
sub
sbb
mov
shlb
dec
xchg
shl
hlt
sbb
fldenv
sub
cmpsl
faddl
cs
insl
adc
xchg
je
mov
mov
loop
sti
pop
hlt
add
jae
push
cmc
rcll
xor
xchg
int3
jl
sbb
aas
or
and
aad
imul
inc
clc
cmp
mov
int
aad
mov
xchg
push
pop
pop
push
lods
cld
and
in
lea
ds
daa
cmp
push
jno
and
fwait
pop
ss
gs
add
stos
jnp
out
mov
shlb
nop
sub
repz
xor
cli
sub
add
incb
enter
xchg
xchg
ljmp
jo
cmpb
sub
aam
jo
adc
in
mov
push
insb
mov
lds
add
jge
and
inc
jmp
push
mov
inc
cld
imul
adc
adc
sbb
in
inc
fmuls
push
in
xchg
dec
inc
filds
add
pop
in
imul
sahf
iret
pop
ds
dec
inc
out
push
jae
sbbl
ret
mov
add
repnz
cmp
inc
push
mov
inc
pusha
ret
les
andl
mov
ds
in
stc
lods
cld
outsl
mov
dec
pop
inc
je
and
insb
lcall
mov
mov
pop
jno
popa
icebp
add
push
cmp
loope
pusha
je
mov
inc
sbb
adc
ret
pop
mov
in
scas
aam
inc
ss
mov
scas
adc
sahf
in
movsl
insl
scas
pop
rolb
daa
adc
inc
jg
iret
pop
jecxz
js
pop
pop
and
mov
popa
ljmp
xchg
lea
mov
pop
aam
push
or
pop
jo
cwtl
sub
insb
sbb
imul
dec
addr16
in
mov
incb
adc
inc
push
pop
mull
or
aaa
xor
fwait
jno
xchg
les
xchg
mov
lret
xchg
add
scas
dec
add
in
in
sbb
jl
inc
sbb
ja
jae
data16
clc
fwait
sub
notl
jp
cs
pop
pop
mov
dec
mov
rcll
call
jbe
mov
xor
stos
out
lods
xchg
call
cmpsl
outsl
inc
pusha
loopne
mov
negb
mov
jge
jno
add
rolb
stc
pushf
out
cmp
sub
loop
add
shrb
xor
mov
cmp
mov
xchg
outsl
das
les
or
cmp
sbb
pop
js
push
test
mov
adc
jl
mov
pop
repz
das
movsb
add
stos
in
mov
jl
fwait
xor
repnz
jns
fldenv
push
mov
or
sub
xlat
popf
stc
jg
je
sub
pop
jmp
imul
push
add
pcmpeqw
push
and
or
test
addr16
and
and
mov
jno
fdivp
mov
mov
dec
fidivl
shll
and
stc
cmp
lods
fisubs
imul
inc
rcll
cmp
sub
sub
ja
cmp
jns
inc
shll
adc
scas
pushf
fcoms
cmp
lahf
push
xor
push
cmp
dec
cmpsl
or
jno
and
std
mov
xor
xor
jmp
popa
out
arpl
out
pop
rsqrtps
jp
loopne
or
and
arpl
cmp
stos
icebp
inc
xchg
outsl
dec
subb
hlt
in
fst
in
mov
adc
jg
out
adc
sub
hlt
or
ljmp
ficoms
add
sar
sub
lahf
mov
nop
pop
icebp
lret
or
test
sti
leave
add
and
shrl
and
xchg
adc
inc
push
loop
stos
cs
insl
inc
pop
insl
ret
mull
jo
in
or
imul
adc
into
aam
jge
cmp
stos
mov
push
es
sub
test
pusha
fdivr
xor
push
cld
shll
add
cmp
push
dec
lcall
aad
push
jne
ffreep
sub
call
pop
adc
jnp
repnz
sub
mov
test
sub
clc
and
push
fisttps
and
xchg
xlat
pop
ljmp
cli
ja
xadd
lret
mov
adc
mov
and
push
sub
mull
jns
in
dec
ss
push
inc
out
fisubrs
arpl
cmpl
push
dec
in
jge
std
xchg
sbb
ljmp
push
mov
or
daa
pop
dec
jp
add
out
lods
and
mov
imul
push
fisubs
hlt
iret
xor
and
cltd
sub
dec
mov
lret
dec
jle
xchg
cld
jle
arpl
and
lcall
xchg
or
stos
jg
outsb
jl
push
inc
and
data16
sbb
adc
je
sar
movsl
fdivs
dec
push
or
icebp
cmpsl
rolb
icebp
jb
je
lods
mov
mov
cli
cmpsl
ss
mov
stos
cmpsb
mov
add
and
stos
xor
sbb
lds
cmp
stc
xorl
mov
insl
mov
add
push
pusha
mov
and
or
js
testb
mov
int3
pushf
in
push
jmp
lods
cwtl
int
inc
mov
mov
jno
push
push
xlat
pop
sbb
jb
icebp
pop
mov
mov
jbe
das
insb
mov
shlb
test
mov
incb
add
fstl
repz
push
mov
and
jb
adc
hlt
mov
je
sti
rol
push
in
sbb
scas
movsl
xor
xchg
out
add
testl
int3
rcrb
push
sub
xor
mov
mov
rolb
loopne
inc
arpl
in
or
jno
cmp
mov
rolb
clc
mov
xchg
not
lahf
push
adc
mov
cmp
lahf
int3
in
adc
cmp
sub
inc
dec
add
jns
cmpsb
imul
cmpsl
shl
adc
lock
mov
push
lret
mov
sbb
mov
cmp
scas
xchg
inc
push
cmc
out
lret
test
adc
xor
cmc
mov
xchg
mov
cmp
mov
out
jnp
xchg
pop
in
vcvtps2dq
jb
repnz
shll
pop
std
adc
jp
repnz
sarl
adc
es
or
int3
es
enter
fbld
pop
mov
xchg
cmpl
out
push
inc
sub
mov
stos
pop
mov
and
test
hlt
std
inc
leave
sub
cmp
cwtl
cmp
pop
pop
dec
pop
push
or
adc
clc
adc
xor
mov
es
stos
or
jg
loopne,pn
push
test
push
xchg
movsb
dec
jno
cltd
lods
sbb
push
bound
xor
mov
imul
scas
aad
mov
jb
popf
push
add
sbb
aam
pop
xor
push
adc
add
into
dec
test
pop
sbb
or
imul
stos
ret
out
xchg
mov
imul
outsb
pop
fdiv
dec
dec
push
lret
cmp
push
jae
mov
and
inc
inc
stc
adc
jg
aad
cmpsb
cmp
sbb
stos
cmp
pop
inc
nop
test
adc
cmp
cmpb
lret
cmp
pusha
std
jg
pop
cmp
imul
mov
dec
xchg
inc
int
cld
out
stos
dec
test
data16
adc
fldcw
fucomi
xchg
dec
insl
sub
mov
outsl
movsb
ds
jmpw
cs
sub
mov
into
hlt
xor
loope
arpl
jns
jge
sahf
lock
sub
inc
mov
pop
xor
out
jb
js
loope
cwtl
add
mov
mov
mov
and
into
arpl
inc
rcll
iret
daa
mov
shrb
cld
incb
jg
in
repnz
push
push
jmp
pop
pop
lods
xor
sub
clc
pop
test
subl
into
mov
call
mov
addl
cli
les
dec
lcall
jbe
xchg
clc
and
daa
mulb
jns
sub
bound
jg
or
lret
sub
inc
mov
push
call
repz
jecxz
cltd
ret
std
jns
pop
cld
in
shl
jne
cmp
cmp
fistpl
jmp
movl
push
mov
aaa
pop
pop
dec
dec
out
lret
mov
ret
jbe
or
fwait
test
xor
xor
sub
out
cs
fninit
lea
inc
idiv
or
push
pusha
mov
rorb
mov
jle
repz
stc
clc
sub
dec
popf
leave
pop
fs
fisubs
inc
mov
jae
and
jae
clc
jp
outsl
loope
cwtl
leave
repnz
xlat
test
jne
sub
aad
into
and
jbe
sub
jg
sub
in
fisttpl
jnp,pn
fadds
dec
sahf
lcall
pop
std
pop
rcrb
push
ja
pop
icebp
push
cli
lds
rcr
mov
mov
jo
test
jp
xchg
jge
jmp
ret
or
lock
dec
int3
add
xchg
or
cmp
loopne
cmp
outsl
cmp
in
mov
iret
inc
test
insl
pop
dec
lea
jo,pt
pop
and
push
cmp
pop
decb
popf
call
mov
call
imull
adc
call
jecxz
sti
mov
aam
fmul
jb
scas
ficoml
mov
mov
jnp
adc
or
rorl
cmp
testl
sub
fwait
ja
jbe
stos
lret
insb
adc
push
jo
dec
mov
and
sub
repnz
call
mov
cmp
iret
jmp
xchg
push
and
adc
mov
push
inc
pop
shrl
enter
stos
pop
aad
fdivl
ficompl
pop
pop
popf
inc
int
push
adc
loop
adcl
add
cmc
push
das
mov
scas
and
out
dec
and
data16
and
les
push
jmp
in
dec
daa
mov
and
imul
jbe
inc
adc
mov
sbb
mov
dec
aad
mov
jge
jmp
mov
outsl
stos
cmp
mov
xor
dec
fs
enter
gs
and
hlt
dec
aad
pop
hlt
pop
fwait
test
pop
lock
xchg
push
jnp
sahf
pop
or
jns
mov
push
stos
and
xchg
or
jg
movsl
and
ljmp
idivb
adc
mov
testl
mov
ret
lea
jbe
jmp
sub
xchg
fisttps
jmp
push
jmp
fidivrs
fbstp
mov
lods
leave
idivb
dec
stos
jne
mov
xor
pop
jne
loope
adc
push
sti
adc
bound
inc
sahf
into
call
add
movsl
movsl
sbb
and
nop
cmp
movsl
mov
outsl
add
iret
cmp
aas
insl
movsb
outsl
push
mov
stos
inc
mov
mov
jle
popa
popw
cmc
dec
into
out
mov
xchg
fimull
in
or
mov
addl
mov
movsl
sub
negb
add
sbb
adcl
push
bound
fdivs
adc
and
adcl
sbb
rol
sbb
jbe
scas
clc
movsl
cmc
jns
mov
and
lret
dec
clc
addr16
or
outsb
jno
rcrl
aam
xor
lods
popf
shrl
push
movb
mov
mov
cli
dec
subb
cmp
jns
stc
mov
mov
dec
fwait
aaa
bound
jae
and
jl
dec
mov
xor
enter
push
mov
adc
xchg
pusha
add
push
repz
aad
repz
test
hlt
test
ret
add
test
popf
mov
ret
icebp
dec
imul
popa
mov
cmp
test
enter
cli
pop
test
aam
sub
movsl
test
test
mov
enter
sbb
shrl
or
ja
scas
in
mov
arpl
hlt
ficoms
xchg
dec
fwait
push
outsl
stos
jge
fldl
or
andl
jo
fdivrs
mov
pushf
push
fsub
loop
je
xchg
fstl
hlt
ja
jmp
xchg
addl
scas
inc
decb
push
lret
imul
out
and
or
adc
xor
sbb
loopne
push
scas
sbb
add
jmp
xchg
add
inc
out
push
icebp
rorl
xor
testb
and
outsb
and
sbb
sbb
shlb
jle
dec
dec
xchg
inc
sub
xor
inc
mov
sbbb
aad
push
popf
scas
ja
pop
push
adc
cmp
jle
jne
push
loopne
negb
inc
dec
adc
into
test
hlt
xchg
out
int
xchg
jno
scas
jns
dec
fstpt
movsl
jbe
mov
mov
cmp
rol
cmp
call
push
jnp
fst
fistps
pop
xchg
mov
sub
cmp
stc
loop
cli
imul
mov
sbb
int3
test
push
sub
js
add
test
cmp
clc
enter
cmp
mov
sahf
dec
mov
ljmp
push
sbb
andl
pop
loope
or
jge
outsl
inc
dec
insl
inc
add
outsb
inc
jge
es
nop
and
pushf
fs
movsl
movsb
frstor
mov
andb
and
sbb
fldenv
int
aam
mov
sub
adc
mov
aam
stos
adc
shlb
inc
icebp
inc
in
mov
adc
sub
daa
cmp
jb
mov
inc
cmpl
lcall
cmp
mov
pop
pop
xchg
or
subl
psrld
arpl
lea
adc
enter
cmc
repnz
ja
pushf
subl
sub
stc
lcall
cmp
mov
push
dec
arpl
pop
pop
sub
lret
push
or
mov
xor
adc
repz
testl
add
insb
push
data16
sbb
stos
mov
and
pop
sar
xor
inc
sti
insl
sbb
and
and
xor
mov
mov
cmp
or
jp
add
ds
sub
pop
xor
jle
dec
cmp
out
imul
push
or
out
outsb
aaa
dec
sbb
leave
nop
mov
push
inc
fbld
in
es
roll
pop
push
add
sub
jne
cmp
and
int
push
inc
xchg
movsl
jl
xor
cmp
je
fisttpll
cmp
dec
je
add
mov
cmp
fists
dec
insl
push
xor
call
jecxz
cmp
aad
fbstp
jo
sbb
icebp
adc
mov
and
dec
push
sub
fadds
pop
xor
cld
mov
push
out
dec
and
test
sarb
sub
and
decb
loopne
ljmp
jbe
mov
cmp
or
into
sbb
push
and
sbb
ja
or
push
push
lcall
imul
cmp
outsl
mov
xor
pop
mov
aad
subb
sbb
fstpl
cmp
or
cmp
cwtl
ss
cmp
jmp
jecxz
and
inc
cmp
mov
fs
jb
out
push
in
push
cmpsb
loope
movsl
inc
adc
and
sbb
test
lods
ror
dec
stos
xchg
jae
shll
pushf
jmp
sbbl
arpl
mov
popa
and
out
xchg
icebp
or
jmp
mov
and
movsl
jecxz
iret
xchg
imulb
test
push
cmp
pusha
sahf
adc
stc
jno
xchg
add
pop
sub
and
daa
mov
enter
test
hlt
rorb
push
push
and
xchg
fst
cmp
negb
inc
in
and
sahf
fs
jl
or
mov
dec
mov
jo
cmpsl
sub
xlat
cmp
movsl
js
lods
mov
into
movsb
pushf
repz
inc
dec
fsubrp
cmp
pop
insl
outsl
addr16
repz
fstl
jne
mov
mov
sub
insb
js
lret
rcl
sub
das
ljmp
mov
hlt
xlat
rcr
adc
fxch
ja
xor
sub
mov
jmp
test
fwait
adc
lcall
mov
xor
nop
inc
iret
lea
and
std
repz
sahf
jno
imul
mov
pop
or
iret
in
cmp
cmp
into
adc
inc
movsb
mov
sbb
pop
pop
add
stc
ljmp
scas
dec
mov
add
xor
test
sbb
pop
fstpl
mov
mov
mov
decl
lds
adc
adc
mov
dec
jg
dec
sarl
cwtl
mov
sub
cli
icebp
ljmp
xor
sahf
ljmp
lcall
pop
mov
dec
push
xor
lcall
push
mov
lock
movsb
cmpsb
ds
xlat
inc
or
cmpsb
and
and
insl
mov
mov
push
fcompl
popf
jbe
inc
dec
cmpsb
rolb
jo
pop
push
mov
nop
pop
jae
insl
repz
popf
sysret
jge
pop
rolb
je
fdecstp
fistpl
add
mov
xchg
mov
cmp
mov
pop
rcrb
aaa
std
dec
xor
add
sbb
fwait
rolb
sti
sbb
jne
out
repnz
xor
movsb
mov
push
and
cmpb
fwait
mov
mov
or
sub
repz
sbb
dec
call
ja
pop
cmp
into
mov
fs
jl
ret
mov
cmp
lods
mov
ficoms
cld
or
push
jp
pop
lds
add
test
fwait
aaa
aam
out
mov
pop
jmp
jbe
lahf
ret
jnp
jno
sub
fdivp
add
bound
arpl
mov
stos
js
out
jnp
sbb
pusha
sbb
daa
cmpsb
adc
bound
xor
ja
xchg
movsl
and
out
lret
ss
pop
gs
adc
xlat
dec
jp
dec
sub
clc
pusha
rorb
inc
pop
pop
int
inc
testl
adc
push
jo
mov
pop
sbb
pushf
cmpsl
push
jg
dec
inc
ja
mov
lret
dec
dec
mov
sub
inc
jnp
jg
inc
push
sub
lea
loop
ret
mov
mov
jle
pusha
mov
push
push
jb
cli
add
push
outsb
ljmp
hlt
in
cli
insb
mov
and
push
mov
call
cmpsb
movsl
fstps
sub
xchg
sub
pop
icebp
and
xchg
hlt
adc
insl
sahf
scas
fidivrl
jecxz
mov
mov
shlb
sub
mov
call
and
xchg
push
push
adc
and
add
fcomps
pop
inc
clc
xlat
add
dec
int
popl
ret
rolb
add
fadd
adc
adcb
jne
test
insl
xchg
pusha
repz
lret
jl
ja
lcall
arpl
pop
push
test
push
jns
and
inc
xchg
out
mov
mov
out
jecxz
lcall
scas
je
in
pusha
jo
int3
adc
sub
cmp
testl
add
dec
fldt
xchg
int
rep
stos
jl
or
push
dec
nop
faddl
pop
sbb
lods
fwait
rcrl
lds
gs
cmp
mov
push
xlat
roll
adc
sbb
imul
pop
gs
sub
xlat
test
lret
call
enter
ja
mov
inc
mov
dec
test
xchg
cmpsl
pop
imul
mov
cmp
pop
push
xchg
pop
jg
mov
and
mov
dec
push
push
leave
lods
jmp
mov
ror
cltd
mov
push
and
leave
xorl
lcall
in
mov
clc
lock
cmpsb
or
add
ljmp
jb
add
inc
cmp
sahf
movsl
int3
test
es
inc
int3
loopne
das
cmpsl
inc
adc
mov
orl
mov
mov
je
sbb
mov
lods
pop
xchg
xchg
imulb
adc
mov
push
mov
sti
cmpsl
push
mov
fs
push
test
int
xor
xor
mov
aas
add
in
sbb
mov
pop
or
cmpsl
push
icebp
push
lret
rol
push
iret
fldenv
xor
sbb
fbld
daa
icebp
test
mov
pop
adc
push
lock
push
xchg
jle
mov
inc
jnp
gs
or
int3
iret
fwait
push
cmp
pop
jle
or
aam
xchg
add
andb
mov
xchg
gs
pop
jl
cs
test
mov
loop
mov
push
popf
dec
or
mov
ficompl
cmp
dec
mov
das
jne
cltd
cmp
ljmp
push
cltd
popa
adc
inc
jo
mov
rcl
in
clts
jle
push
ja
push
leave
inc
sbb
pusha
pop
and
sub
xlat
jmp
into
add
sti
sbb
and
dec
dec
add
push
shll
push
in
adc
rorb
insb
dec
sbb
test
hlt
test
outsb
stos
imulb
shl
xchg
rolb
pop
outsb
loope
mov
cs
lret
pop
xchg
popa
mov
arpl
mov
ds
adc
ds
mov
add
hlt
add
xchg
cmp
lea
push
in
xchg
cmp
sub
aas
pop
aad
jmp
rorl
lea
sbb
jge
pop
push
push
mov
push
or
fdivrs
xchg
adc
cld
inc
inc
repnz
dec
inc
dec
jmp
mov
mov
cmp
rclb
pop
dec
cmpsl
shll
testb
es
ljmp
mov
sub
mov
stos
dec
loopne
xor
push
push
push
inc
out
sub
orb
mov
cmc
push
in
fcomps
test
push
outsb
mov
mov
cmp
cli
inc
aas
popa
lock
das
stc
push
push
call
insl
push
jp
inc
adc
sbb
lahf
pushf
xor
dec
pop
std
xchg
xchg
push
and
daa
sahf
xor
and
pushf
and
add
arpl
mov
fsubrs
rclb
add
repz
mov
jne
jmp
and
pop
aad
aad
test
ret
inc
push
enter
stos
mov
lds
in
inc
lret
fnstsw
dec
jns
cmp
or
inc
adcb
inc
xor
push
aam
pop
dec
or
outsb
shrb
jl
sub
jg
test
lods
push
push
pusha
add
cld
mov
cwtl
stos
and
enter
jae
adc
mov
sub
ss
aas
mov
bound
int
out
or
mov
mov
push
pop
push
jle
jnp
lods
push
pop
or
lcall
jbe
mov
mov
test
popa
push
pop
jmp
subb
repz
or
out
xor
mov
push
lods
inc
mov
mov
gs
inc
mov
adc
jmp
xor
cwtl
adc
imul
inc
sahf
push
lods
inc
les
bnd
inc
pop
in
mov
inc
sub
test
push
mov
mov
leave
ljmp
mov
adc
mov
mov
addr16
call
into
dec
vmwrite
mov
imul
dec
mov
or
xlat
call
cs
out
adc
es
dec
inc
lret
mov
cmp
inc
in
mov
sbb
cmpb
and
jno
xchg
fdivs
adcb
adc
and
int3
dec
mov
shlb
adc
ljmp
test
push
xor
and
rorb
cltd
imul
adc
adcb
cmp
xor
sub
subb
push
cmp
adc
mov
arpl
dec
lret
sahf
arpl
and
or
push
sbb
sub
and
pop
cmp
jne
adc
in
jne
inc
cmp
orl
mov
data16
dec
add
mov
in
add
pop
stos
cld
mov
out
pop
cmpsb
inc
xor
inc
add
mov
loop
adc
jmp
iret
lret
ds
cli
loope
dec
dec
pop
pop
fwait
mov
cld
int3
sti
pop
lds
lea
cld
je
cs
sarb
xchg
test
popf
shrb
or
adc
outsb
push
mov
xlat
das
adc
movsl
pushf
aaa
daa
inc
adc
das
popw
mov
sbbl
sub
inc
addb
in
cmp
jmp
push
ja
mov
pop
jmp
scas
pusha
cmpb
inc
xor
dec
or
inc
daa
mov
pop
arpl
pusha
dec
inc
push
pusha
scas
pop
mov
xchg
sub
test
mov
add
ja
cmp
out
push
xchg
aam
sbb
inc
jne
hlt
jg
data16
pop
mov
push
or
adc
jb
mov
je
or
sub
sub
xor
sub
cli
fbstp
stc
cmp
inc
and
pop
jg
dec
outsl
sub
icebp
insl
clc
mov
pop
jmp
dec
sahf
popa
mov
jg
mov
push
faddp
mov
pushf
xor
lods
mov
ret
pop
jp
in
in
cmc
xchg
jmp
inc
mov
jmp
mov
das
in
les
or
pop
jp
and
jle
cwtl
cmp
pop
movsb
jno
pushf
xlat
push
or
add
jmp
or
or
scas
jne
push
in
mov
adc
leave
fsub
aaa
and
push
shrb
cmp
fwait
and
fbld
movsb
rcr
ss
lret
jo
push
mov
fdivrl
out
stc
les
repz
insl
jmp
xchg
push
out
sbb
jle
xor
adc
fiaddl
je
sbbl
adc
inc
dec
adc
sub
aaa
and
jns
dec
lods
xchg
into
in
rcl
mov
icebp
mov
aaa
jp
adc
jbe
dec
fildl
imul
inc
add
mov
dec
xchg
add
adc
fnsave
lret
icebp
push
xchg
lock
stos
repnz
push
lock
insb
pop
mov
pop
test
iret
mov
insl
mov
mov
insl
sub
fisttpll
into
and
xor
xchg
daa
jecxz
mov
jle
sub
xor
dec
xor
jl
sub
cld
push
outsb
sub
cs
in
insl
cmc
in
std
sub
cmp
sbb
xchg
fistpll
push
or
into
aas
sahf
addb
mov
pop
sbb
mov
lcall
in
mov
addl
xor
aas
cmp
imul
inc
push
or
jns
push
in
xor
aad
fistpll
xchg
lcall
out
mov
subb
jmp
inc
xchg
fld
pop
jecxz
lods
sbb
loopw
mov
jns
or
jle
aas
enter
jg
pop
xlat
xchg
shll
push
inc
jno
js
mov
aaa
imul
add
mov
outsb
dec
mov
aad
xchg
pop
and
sbb
pusha
popf
popf
push
jecxz
movntq
xchg
test
mov
xorb
cs
nop
sbb
rorl
int
js
cmp
pop
pop
cmp
push
cmp
mov
and
push
jl
add
shll
addb
mov
mov
fcmovnu
scas
inc
shlb
cmp
dec
mov
push
dec
imul
out
xor
add
dec
in
mov
mov
cmp
pop
std
xor
dec
clc
pop
xor
mov
mov
add
stc
adc
in
int3
dec
test
sub
sbb
sub
negb
outsl
enter
in
xor
sbb
pop
loop
mov
je
sub
jg
push
out
repz
subl
inc
outsb
jno
xchg
lret
jae
popf
les
jb
jns
push
and
add
push
mov
outsb
mov
adc
push
cmp
dec
mov
push
lds
push
and
xor
roll
push
cmpsb
ds
movsl
lahf
jns
hlt
add
out
jbe
sub
in
add
push
xchg
dec
and
aad
rorl
fnstsw
aas
xchg
movsl
adc
addb
pop
mov
or
jge
adc
mov
mulb
mov
adc
mov
clc
inc
jge
aam
mov
pop
pop
lds
test
das
sbb
adc
das
test
sbb
jne
jno
rolb
inc
icebp
xchg
in
adc
and
ds
mov
jo
daa
and
imul
cld
in
sarb
pop
cmp
xchg
cmp
out
xchg
pop
mov
jl
inc
cmpl
or
jmp
push
popf
int3
xor
xlat
outsl
xchg
lock
cmp
jbe
lcall
or
ljmp
xchg
leave
test
in
jno
xchg
pusha
shlb
push
mov
ffreep
dec
sbb
add
cmpsl
loop
aam
jbe
loop
cs
int3
dec
iret
mov
enter
lea
leave
jl
pop
ficomps
dec
fadds
cmp
push
mov
sbb
push
icebp
outsl
dec
in
int3
jg
shl
pop
movsb
sub
bound
xchg
adc
add
mov
loopne
dec
sub
adc
out
pop
pop
movsb
mov
and
fidivrl
pop
push
jb
mov
push
jle
es
sahf
dec
arpl
lock
mov
fmull
xor
fcos
gs
adc
int3
cli
jbe
sbb
or
push
xor
mov
and
jo
and
xchg
jno
lea
sub
mov
adc
subb
paddsw
ljmp
sbb
mov
mov
jmp
sub
imul
lcall
xchg
sub
je
and
movsl
pop
push
xor
out
jae
in
jle
mov
negb
jns
inc
rorl
sbbl
sarl
mov
fmuls
aad
loope
xchg
jl
push
aam
stc
nop
cmp
adc
push
out
jg
mov
imul
dec
test
add
dec
mov
enter
jne
and
popa
out
int
cmp
add
push
in
adc
xchg
iret
or
fwait
arpl
das
in
call
dec
fcomi
mov
addb
cmp
jg
ret
add
and
sbb
adc
sbb
dec
sbb
ss
data16
in
adc
dec
dec
cld
adc
mov
pop
cmp
test
xor
into
cwtl
in
test
mov
sbb
sub
ja
mull
aam
movsl
lahf
xor
loopne
jmp
cwtl
sbb
or
hlt
xor
mov
mov
out
inc
cmpsl
je
ljmp
or
mov
dec
ret
jns
jmp
jp
mov
sbb
stos
mov
sub
cmp
data16
xor
pop
push
push
jg
inc
push
repnz
iret
xor
enter
xor
jmp
jne
adcb
cmp
ret
in
std
nop
or
outsb
mov
xor
call
shlb
or
stos
dec
fs
mov
ja
xor
sub
xor
dec
cmp
popf
add
fisttpl
mov
movsb
mov
out
fyl2xp1
mov
adc
scas
dec
jns
mov
arpl
mov
out
push
call
cltd
sbb
rclb
outsb
or
add
jg
xchg
fsubs
insl
mov
add
pop
xor
push
jecxz
push
ret
aas
adc
pminub
sub
stc
mov
adc
outsl
xchg
mov
cs
dec
lds
nop
ficomps
add
ret
xlat
cmp
pop
and
jns
adc
arpl
cmc
push
imul
into
or
nop
jae
xchg
cmpl
jns
xchg
cmpsl
pop
js
decl
fnstsw
sub
add
aaa
or
das
daa
hlt
dec
or
sbb
out
sbb
adc
inc
rorl
jbe
call
je
mov
sub
aas
lret
pop
xchg
cli
push
jle
loop
cli
mov
and
sub
pop
out
scas
dec
data16
xor
lock
testl
fimuls
dec
cwtl
xchg
cmp
arpl
sub
int3
das
push
xchg
push
jne
data16
shr
xchg
in
test
xchg
stos
pop
iret
outsb
outsb
sub
push
ja
pop
sub
les
and
inc
pop
jmp
adc
mov
jge
scas
or
enter
adc
in
and
into
mov
daa
mov
xor
cmp
adc
fldenv
test
fld
adc
cli
movsb
jae
fwait
ds
pop
mov
repnz
mov
int
fstl
roll
mov
fdivrl
sbb
xor
or
mov
inc
leave
jp,pn
xchg
pop
rcr
push
sub
icebp
mov
cwtl
lods
in
cmovl
insb
sub
ds
mov
movsb
lock
jb
jo
popf
mov
mov
mov
mov
lcall
xchg
ret
cmp
xchg
mov
insl
lcall
sbb
es
xor
push
dec
jo
cmp
push
cmp
pop
test
xor
and
inc
ljmp
mov
push
adc
pop
rcl
mov
mov
addr16
inc
movsb
inc
push
pop
addr16
push
in
push
dec
add
mov
int
sti
mov
inc
comiss
fwait
shll
dec
xchg
mov
mov
xchg
stc
insb
mov
mov
dec
cld
pop
or
and
mov
mov
adc
int3
das
mov
pop
popa
nop
decl
cltd
jecxz
jle
insl
pop
adc
mov
xor
jnp
inc
and
ss
add
pop
xor
sub
nop
mov
loope
leave
sbb
sahf
mov
add
fimull
aas
fsts
pushf
es
sbb
sarb
loope
push
cli
push
out
add
pop
les
test
cmp
push
inc
mov
add
dec
adc
xchg
nop
nop
ror
add
icebp
std
mov
pusha
xchg
dec
mov
sti
scas
adc
sarb
jne
jno
addr16
mov
cld
jae
out
mov
xchg
and
mov
cs
sbb
fiaddl
imul
out
add
sub
mov
repz
fildl
mov
push
mov
or
lods
test
je
mov
out
faddl
scas
lea
xchg
push
push
insb
leave
loopne
js
insl
push
std
notl
sub
ficoml
js
xchg
push
adc
mov
push
pop
out
mov
sub
icebp
ret
lcall
adc
push
inc
and
jmp
add
mov
fnsave
or
pop
sbb
loopne
cs
and
jl
daa
mov
pop
lea
push
outsb
out
xchg
rcr
loop
js
and
sub
push
and
mov
rolb
dec
lods
insb
pusha
jns
outsl
dec
scas
paddusb
push
aam
imul
adc
daa
shll
imul
push
fnsave
imulb
or
mov
jbe
cwtl
mov
push
