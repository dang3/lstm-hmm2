mov
or
push
movzbl
push
add
pop
inc
sub
mov
shl
imul
imul
add
decl
mov
jne
add
add
pop
ret
mov
jmp
mov
xor
cmp
je
lea
test
lea
test
cmpb
jne
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
add
cmp
jb
pop
pop
pop
pop
ret
push
push
xor
push
mov
call
mov
push
push
mov
call
push
mov
call
mov
xor
inc
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
push
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
add
add
add
cmp
jb
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
sub
sub
push
lea
push
mov
call
add
add
mov
mov
mov
mov
push
popl
add
sub
lods
xor
stos
sub
sub
sub
add
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
sub
cmp
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
cmp
add
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
mov
mov
add
cmp
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
sub
subl
add
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
add
pop
pop
pop
leave
ret
xor
jmp
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
add
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
lea
test
pop
leave
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
add
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
sub
cmp
add
sub
sub
rorl
sub
add
jne
pop
pop
pop
ret
push
mov
sub
add
mov
add
mov
xor
mov
cmp
je
add
add
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
lea
test
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
mov
sub
test
sub
push
mov
push
xor
push
mov
cmp
jne
push
mov
call
mov
push
lea
push
xor
lea
test
push
mov
push
mov
call
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
cmpw
jne
push
push
push
push
mov
call
push
push
mov
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
mov
call
mov
sub
mov
xor
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
push
mov
call
push
mov
call
push
mov
call
add
cmp
sub
push
mov
call
mov
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
push
mov
call
push
mov
call
push
call
pop
push
mov
call
push
mov
call
mov
mov
call
cmpl
push
jne
mov
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
test
je
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
mov
call
push
mov
call
push
mov
call
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
add
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
pop
pop
push
call
push
mov
call
push
mov
call
pop
pop
jmp
mov
call
call
push
mov
call
push
mov
call
push
mov
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
call
pop
pop
mov
mov
mov
add
push
lea
push
call
mov
mov
sub
add
push
pushl
and
add
mov
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
test
add
push
mov
call
test
je
mov
push
mov
call
mov
push
mov
call
pop
pop
push
mov
call
push
call
push
call
pop
pop
mov
call
push
mov
call
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
sub
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
call
push
mov
call
push
call
pop
pop
mov
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
cmp
je
mov
add
lea
mov
mov
mov
mov
add
push
push
push
call
mov
or
sub
mov
mov
sub
push
push
mov
call
pushl
call
test
je
cmp
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
push
lea
push
push
pushl
mov
call
mov
call
mov
mov
mov
mov
mov
mov
xor
cmp
jae
mov
mov
mov
addl
cmp
subl
push
pop
rep
mov
mov
mov
add
add
sub
mov
mov
movzwl
inc
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
jbe
lods
or
pop
add
add
add
fs
add
ja
cli
push
in
xchg
dec
add
add
jg
and
sub
mov
mov
pop
movsl
in
add
or
outsb
adc
gs
ficomps
ss
xchg
sub
jl
out
enter
cmp
or
lock
mov
out
lcall
inc
js
mov
inc
out
ficoml
fsubrl
mov
iret
bound
inc
sub
dec
and
and
insl
out
cmpb
pop
fcom
push
and
jecxz
sbb
mov
mov
sbb
mov
rcll
jne
or
adcl
into
mov
jnp
pop
iret
popf
push
enter
inc
and
lods
push
rcrl
test
js
out
add
roll
int
fwait
xchg
mov
int
adc
fucomp
cltd
inc
data16
xor
fistl
mov
pop
mov
loop
bound
jnp
mov
dec
sbbb
ds
aas
notl
sub
xchg
add
inc
addr16
gs
jo
cmp
out
les
cmp
add
jmp
sbb
sub
sbb
loope
inc
push
stos
loope
jmp
ja
mov
loopne
mov
push
cltd
xor
or
push
in
dec
xchg
lea
pop
mov
push
dec
sub
add
mov
mov
push
dec
mov
ret
xlat
test
mov
jbe
ja
and
jl
repz
cltd
and
sbb
rorl
sbb
push
xor
xchg
faddp
sbb
jo
sbb
xor
or
push
jne
out
pop
out
jae
dec
xor
jp
sbb
out
aam
idiv
xor
adc
dec
mov
cmpsb
or
xchg
xlat
adc
loope
fistl
mov
lahf
xor
int3
shl
mov
rep
xchg
test
cli
in
pop
popa
ds
and
adc
ja
inc
popf
inc
or
and
into
pop
mov
cs
fistpll
imul
lock
cmc
cmp
pop
jne
test
fiadds
shrb
loope
mov
and
jp
and
fbstp
aam
mov
notl
iret
icebp
out
cmp
insb
fadds
add
ret
lods
push
pop
stos
jge
push
aas
mov
jbe
fstl
outsb
lods
cmp
mov
jb
fisttpl
movsl
push
mov
scas
icebp
leave
stc
pop
outsl
xchg
mov
pop
clc
sbbb
inc
std
jl
xor
dec
pop
cmp
xor
sub
ja
and
sub
lret
ss
dec
sbb
push
sbb
mov
out
pop
loop
aaa
dec
enter
jae
inc
arpl
jecxz
ss
outsb
fs
scas
enter
sub
xchg
inc
xchg
jno
cld
xor
subl
insl
xchg
jbe
jae
std
fcmovu
insl
stc
cwtl
sub
cmp
mov
movsb
xor
jno
xchg
inc
mov
lret
jbe
pop
or
jbe
cld
adc
cwtl
punpckhwd
adc
sub
fbld
sbb
lods
es
mov
decl
dec
pop
pop
mov
fistps
push
daa
pop
outsl
cltd
push
jmp
jnp
cmp
mulb
je
addl
data16
and
or
jo
push
jb
sti
xchg
xchg
loop
int3
aas
mov
adc
je
sbb
push
rcrb
push
loop
out
xchg
in
or
loopne
or
jle
mov
sub
mov
ror
or
dec
mov
in
mov
daa
mov
mov
pop
dec
push
cmp
pop
or
pop
out
xchg
inc
adc
xor
loopne
popa
pop
xchg
scas
pop
cli
or
nop
mov
push
data16
insb
mov
fcoml
push
lret
xlat
movl
ljmp
sub
sbb
sbb
std
shrl
popf
call
mov
cmpsb
xor
inc
rclb
add
bound
js
pop
imul
cmpl
mov
cltd
lods
sbb
push
xor
imul
ljmp
push
addr16
add
xchg
and
cmp
fwait
call
pop
cmp
les
imul
xor
scas
es
pusha
ret
add
xor
push
push
icebp
adc
xchg
xor
cmp
ret
fistps
aaa
adc
subb
jmp
jno
or
ljmp
cmc
scas
push
dec
jmp
add
jo
aad
outsl
adc
sbb
lods
pop
push
arpl
lret
jg
rcr
ret
xor
lea
xchg
lods
cli
cmpsl
xor
jge
adc
ja
jl
pop
dec
stos
repz
adc
and
in
mov
xchg
mov
jb
adc
repz
cmpsb
les
aaa
inc
adc
in
mov
xor
xchg
push
popf
dec
fwait
mov
ja
inc
pop
call
sub
cmp
int3
mov
adc
cmpsb
xorb
add
pop
sbb
outsl
sti
xor
outsl
mov
rclb
xchg
pop
and
xchg
cs
sbbb
ja
test
adc
push
pop
inc
and
out
cmpl
push
sbb
xchg
fdivrs
cwtl
xchg
in
int
das
or
int
aas
mov
loopne
lods
loop
jno
mov
jmp
mov
ja
mov
dec
mov
shl
push
pop
and
mov
pop
push
or
or
mov
rclb
lock
dec
ficoml
insl
jecxz
pusha
aad
or
dec
out
push
in
je
into
inc
rcrb
mov
dec
fiadds
mov
mov
push
aam
rorl
fldenv
inc
or
je
in
decl
or
cmp
and
and
jg
pop
enter
fisubrl
mov
pop
fmul
aad
jl
adc
call
mov
jecxz
sub
test
mov
loop
jecxz
or
in
into
cltd
mov
xor
cwtl
test
add
mov
pop
aad
jnp
jecxz
sarb
addr16
iret
clc
and
push
movsb
fwait
cld
sbb
pop
pop
fstl
jae
jbe
mov
push
js
test
in
adc
jno
mov
dec
hlt
cmp
pop
mov
or
outsl
cltd
mov
push
and
repz
and
jecxz
jg
movsb
mov
cmpsb
add
inc
and
rcrb
cmpsb
in
sub
mov
sahf
cmp
aas
cwtl
add
jns
push
outsl
mov
pop
cmp
arpl
xchg
mov
jle
shlb
in
int
cmp
data16
pop
mov
xchg
xor
iret
insl
mov
sbb
sbb
fnstenv
testl
push
icebp
jno
sbb
xchg
dec
lds
movsb
push
or
mov
dec
jp
scas
pop
movsb
dec
fcoml
mov
adc
fstps
cmpsl
cwtl
loopne
add
jbe
xchg
and
mov
xchg
ljmp
cmp
jno
xchg
dec
cs
das
push
inc
pop
xchg
test
xor
fidivl
push
jge
add
xchg
std
movsb
xchg
aad
xor
push
rcrb
gs
sub
pop
fistpll
mov
in
push
push
jmp
pop
xchg
das
lods
rorb
jno
mov
push
outsl
fnstcw
cld
jecxz
popa
addb
cmpsl
repz
pop
xchg
sbb
push
into
dec
add
stos
add
cmp
aad
mov
jle
aas
mov
fisubl
out
jge,pt
pop
icebp
cmp
movsb
lock
fisubrl
idivl
je
int
cmc
in
sahf
cltd
mov
mov
xchg
add
pop
xor
push
cwtl
mov
jo
sbb
sub
lods
je
repnz
xchg
adc
push
add
mov
ds
mov
idivb
pop
jmp
aaa
fisubs
imul
adc
sti
jnp
push
scas
mov
xchg
ret
popf
and
aas
mov
orb
ljmp
adc
adc
out
repz
mov
fsubs
xor
and
push
fs
sbb
cmp
or
cltd
fbld
sbb
adc
addl
mov
in
movsb
sub
lods
push
inc
ret
inc
test
call
sub
jg
sbb
sahf
adc
inc
jb
imul
scas
popf
fsubs
js
and
jbe
jno
scas
pinsrw
push
insl
jae
leave
enter
test
inc
pop
pop
adc
mov
sub
movb
fistl
rclb
sub
inc
das
dec
lahf
lods
cs
or
xor
and
enter
xchg
ret
scas
mov
imul
inc
popf
xor
movsl
mov
in
pop
aad
push
aas
ret
and
movsl
das
mull
in
and
and
lea
inc
out
dec
xor
arpl
pop
mov
mov
pop
add
insb
hlt
inc
out
xlat
ficompl
pop
sbb
das
aam
mov
sbb
out
adc
sbb
jg
cmpsb
cmp
push
inc
adc
scas
scas
test
ss
daa
cmp
and
call
repz
and
hlt
push
addr16
xor
repnz
lods
mov
clc
iret
sarl
jbe
inc
mov
cld
pop
pop
pop
hlt
rol
pop
arpl
shl
test
imul
fidivrl
cmp
mov
push
cmc
jb
lret
lret
les
stc
adc
cmp
aam
mov
push
scas
cmpsl
dec
push
lea
add
aas
cld
imul
out
mov
es
xchg
rcrl
cli
jo
add
xchg
pop
add
int3
hlt
insl
cmp
xor
inc
xor
cmc
sbb
cmp
or
ja
xchg
sbb
mov
jne
inc
in
mov
dec
xor
fwait
mov
jo
nop
jne
inc
jecxz
daa
clc
and
inc
scas
aam
divl
pop
cmp
mov
mov
and
xor
cmp
xor
sarl
jle
mov
ficoms
pushf
sub
in
mov
mov
sti
mov
push
andl
sahf
and
sub
mov
sub
sub
dec
out
mov
lret
inc
inc
mov
xchg
fnstsw
nop
cld
fidivs
call
xchg
repnz
movsl
cmp
add
dec
pop
and
in
push
push
adc
xor
in
fdivrs
cmp
mov
cmc
je
ss
xor
scas
sarl
ss
mov
int
mov
or
sub
mov
nop
ficomps
shll
sbbb
jnp
popa
push
fs
mov
fwait
ret
or
sbb
mov
xor
notb
push
dec
jbe
fisubl
xchg
popf
scas
inc
inc
lcall
outsl
mov
adc
jmp
mull
sti
fildll
push
inc
add
int3
testb
lret
movd
inc
pop
lcall
mov
mov
sbb
jae
out
daa
cmp
bswap
dec
xor
mov
fcmovu
cmpsb
into
rcrl
sti
stos
stos
sbb
pusha
xor
sbbl
pushl
jle
les
outsb
mov
icebp
rolb
test
jl,pt
xchg
icebp
lods
xchg
add
jbe
jle
aam
or
loop
lea
inc
sbb
adc
xor
ds
sub
pop
and
add
not
mov
push
push
cmp
sbb
stos
lods
jg
push
mov
out
aad
mov
fiaddl
mov
pop
xor
push
fmul
mov
mov
cs
test
les
pop
jns
inc
popf
scas
les
dec
jnp
sbb
pop
or
int3
push
dec
push
mov
pop
es
outsb
ret
adc
in
mov
daa
pop
shl
les
sub
lods
stos
jle
pop
or
and
jmp
xor
pushf
into
dec
popa
dec
add
cltd
sub
jae
pop
jnp
movb
cmp
cld
xchg
les
jg
inc
fistl
mov
or
loop
je
mov
sbb
xchg
je
sub
sbb
loope
mov
mov
shrb
adc
mov
fsubl
or
lods
and
xchg
lret
nop
mov
xchg
push
andl
jecxz
or
mov
fdiv
sub
lds
cmc
nop/reserved
or
push
cmp
push
xchg
dec
stc
cmc
jp
cmp
pop
clc
jns
dec
xor
xchg
ret
das
add
shrb
in
mov
jmp
mov
test
sub
fwait
xor
add
int3
cld
sbbl
push
out
sub
scas
in
mov
leave
cmp
push
and
inc
mov
jo
jb
push
andl
and
outsl
popf
fcmovb
or
test
adc
loop
pop
mov
inc
dec
in
push
push
out
pop
or
imul
mov
pcmpgtb
xchg
popf
mov
aas
call
jmp
int3
xor
xor
push
jg
fcomps
stc
in
test
fstl
sahf
push
outsl
mov
inc
scas
imul
insl
mov
xor
inc
arpl
aad
aad
fistl
push
push
stos
inc
inc
mov
push
add
push
push
loop
sbb
cld
test
push
mov
cltd
and
shrl
stc
dec
idivb
cltd
out
adc
jmp
mov
mov
mov
xchg
lods
mov
xchg
ret
cmp
add
les
inc
adc
cs
pop
jmp
pop
bound
push
les
lea
pop
sbb
sub
push
arpl
paddd
ret
mov
addr16
das
jbe
into
movsl
push
jb
xchg
movsb
mov
and
fwait
cltd
push
aaa
mov
xchg
sub
std
andb
jmp
lahf
mov
lahf
cli
out
mov
shll
jle
test
addr16
sub
mov
add
jns
cmp
dec
clc
xorb
or
pusha
sarl
sahf
dec
aam
xchg
nop
lods
in
dec
sbb
pop
jge
or
xchg
aas
add
add
sub
imul
push
sbbb
xor
cli
jle
pop
mov
stos
sahf
mov
cmp
out
inc
cmp
mov
sbb
sub
jo
out
loop
xchg
int3
adc
inc
mov
lods
iret
adc
xor
inc
and
push
inc
stos
inc
mov
mov
mov
es
mov
jg
mov
sbb
cmp
push
mov
xchg
testb
mov
into
cmpsb
dec
dec
cmp
imul
int
ljmp
mov
inc
adc
cmp
arpl
adc
adc
imulb
sbb
orb
jg
dec
lods
sub
mov
cmp
add
inc
lods
aam
sub
xchg
leave
or
push
push
lahf
das
ret
mov
nop
push
and
push
lock
mov
gs
cmp
jb
subl
pop
add
lcall
and
cmp
imul
movsl
ss
out
push
imul
movsb
shll
mov
push
fistpll
cld
mov
sbb
xchg
fcompl
das
stos
popa
sub
call
jo
xor
jnp
xchg
ret
pushf
mov
mov
shll
enter
scas
arpl
out
adc
mov
sar
add
mov
lock
or
xchg
mov
test
bnd
cmpsl
shlb
fwait
push
pop
mov
push
mov
lock
jno
jbe
inc
adc
mov
movsl
xor
test
std
insl
mov
mov
sbb
jns
hlt
cmc
sub
push
and
clc
jbe
outsb
ret
pusha
lock
in
push
popf
jb
syscall
sbb
mov
test
sbb
pop
mov
rcrb
xor
sti
leave
dec
adc
aad
cmp
adcb
pop
or
jnp
adc
stos
mov
movsb
add
movsb
lock
pop
mov
out
js
sub
test
negl
jne
cmp
cmp
jnp
pop
adc
pop
or
adc
dec
sub
add
in
xchg
sbb
leave
lret
inc
enter
sarb
pop
mov
ja
xchg
inc
fildll
mov
icebp
addl
std
out
outsl
in
out
mov
in
pop
and
xchg
pop
pop
pop
nop
mov
xchg
jecxz,pt
mov
sahf
pop
sub
hlt
shlb
mov
int3
pop
adc
inc
push
pushf
jbe
cmc
mov
mov
lcall
xchg
insl
hlt
jns
out
fidivl
es
pop
fisttps
jnp
lods
mov
xchg
ficompl
ss
and
ret
pop
gs
mov
mov
jge
sarl
mov
mov
jp
mov
mov
xor
into
roll
jo
loop
pop
mov
mov
mov
in
enter
shr
ds
pop
or
aam
push
lret
push
out
sbbb
mov
outsl
jge
add
pop
sti
xchg
jg
add
mov
push
fdivp
sarb
mov
fsubp
cmpsb
cli
pusha
pop
xor
sub
pop
xor
dec
push
mov
cld
fimull
add
adc
xchg
cli
cmovbe
inc
or
leave
inc
mov
cmp
add
mov
or
inc
movsl
pop
and
out
daa
dec
add
add
dec
and
not
xchg
je
push
xchg
dec
dec
jmp
pop
repz
xchg
cmp
outsb
repnz
lods
mov
push
loope
dec
mov
lods
decb
addb
popf
in
mov
shll
adc
mov
push
imul
sbb
adc
adcb
mov
ljmp
xchg
jns
xchg
mov
insb
ffreep
mov
adc
mov
push
pop
shlb
jecxz
sbb
nop
call
out
jecxz
test
jbe
test
mov
xchg
outsl
fisttpl
loop
lods
dec
xchg
pop
push
pop
int
dec
mov
add
clc
loopne
xchg
or
out
fs
dec
in
mov
jmp
or
mov
and
hlt
jmp
xchg
pop
add
rolb
loope
out
dec
ja
loop
dec
sub
dec
pop
sub
push
daa
or
pop
cmp
mov
adc
stos
add
mov
out
cmp
inc
shlb
lahf
sbb
mov
inc
imul
jnp
or
ficompl
cli
es
in
decl
pop
adc
lock
iret
repz
push
jo
add
iret
outsl
aad
clc
mov
out
cmp
cmpsl
adc
and
fdivrl
rclb
ljmp
mov
lds
mov
push
dec
fwait
and
pop
xor
xchg
dec
call
mov
shrb
and
jge
or
lcall
ret
add
out
jb
cs
in
add
and
fiaddl
cmpsb
lock
out
pop
jle
cli
jp
sub
pop
or
xchg
cmpsb
mov
cmp
ret
and
mov
fbstp
gs
push
pop
and
or
cmp
flds
dec
cmc
adcl
data16
in
xchg
clc
sti
push
fldcw
les
add
xchg
inc
lret
dec
shl
pop
mov
jno
jl
cli
xchg
add
xchg
ret
or
push
filds
cltd
mov
mov
mov
mov
aaa
inc
movsl
or
out
shlb
pop
pop
mov
and
shll
popa
outsl
int
in
rol
rcll
and
xchg
dec
lods
cmp
add
cmp
leave
xchg
fistl
mov
mov
rcrl
mov
lret
xor
pop
int
xchg
push
lret
and
inc
sub
orb
and
xchg
cld
and
gs
sbb
lret
add
or
sub
cwtl
cmp
and
and
xlat
cs
push
pop
jo
push
fld
inc
int
mov
xor
roll
jmp
jno
adc
stos
push
shl
movsl
mov
dec
sbb
and
add
in
mov
cwtl
fldt
aam
fcomp
cmp
mov
lea
iret
mov
inc
daa
test
inc
jno
fs
loope
aas
ja
cmpsl
push
push
shlb
pushf
fidivs
mov
out
test
cmc
mov
lcall
lock
sub
cmp
mov
daa
data16
pop
cs
push
add
pop
add
pop
mov
pop
jle
push
js
ds
in
push
push
inc
pop
jbe
ret
jbe
mov
fistpl
or
jp
dec
cwtl
shll
xchg
inc
aad
sub
xor
loopne
fdivrl
jle
std
and
add
aaa
paddsb
xor
and
stos
cmp
inc
add
and
aaa
jl
sub
lea
dec
cmp
mov
xchg
sub
dec
add
mov
xor
stos
lahf
jp
ljmp
dec
fcompl
hlt
hlt
dec
jle
xchg
xchg
dec
mov
in
nopl
test
popa
sub
inc
jp
loop
add
push
cltd
push
int3
jl
sub
icebp
push
cmp
sbb
bound
sbb
jecxz
push
push
adc
xchg
inc
getsec
in
out
test
test
cwtl
repnz
daa
push
aaa
mov
jbe
or
mov
sbb
or
mov
adc
lcall
sarl
fwait
lret
sar
rcr
data16
int
in
xlat
ret
sbb
xor
movsb
rorb
cli
push
jbe
push
cmp
scas
mov
cs
pop
fidivrs
dec
sub
pop
sahf
negb
pop
ss
leave
mov
das
jle
cmpsb
out
cli
bound
lods
fs
in
mov
cmp
jo
xor
int3
sbb
test
jg
hlt
in
pop
or
aam
lahf
clc
jmp
pop
jb
cmp
xchg
push
inc
cmpl
and
cs
add
xchg
or
popf
leave
fcomps
jl
out
xlat
lret
push
and
cmpsl
dec
fcomps
mov
or
sub
insl
enter
leave
pop
inc
jo
hlt
jge
inc
or
jnp
out
daa
push
addr16
cmp
in
push
ljmp
add
inc
es
jbe
shll
orb
sub
nop
xchg
sbb
fnstsw
inc
xor
inc
fsubrl
in
xchg
mov
pop
movsb
repz
or
aaa
loopne
adc
mov
and
mov
mov
or
lret
mov
js
fmull
cs
pop
push
add
mov
xor
movsl
mov
add
sti
stc
addr16
daa
sbb
sbb
test
ds
jne
add
sahf
imul
xor
jbe
and
test
pop
jmp
sub
fsubs
push
lret
xchg
push
lret
inc
sbb
outsb
loopne
pop
mov
or
dec
repz
mov
je
loope
push
pop
push
enter
mul
test
pop
adc
js
iret
jg
cmp
mov
mov
stos
bound
jg
cmp
dec
int3
add
jle
call
and
daa
dec
in
and
xchg
jge
xor
mov
push
or
movsb
dec
sub
lock
data16
je
movsb
cli
popa
lds
mov
and
inc
jnp
repnz
subb
mov
lods
xor
dec
test
hlt
sti
js
mov
loop
inc
and
push
push
mov
dec
dec
mov
cltd
shl
mov
je
aas
dec
jbe
arpl
jo
mov
int3
popf
adc
ret
insl
lds
mov
jecxz
jmp
mov
outsl
sbb
push
out
mov
sarl
cmp
sbb
pop
aas
test
cwtl
das
outsl
mov
ss
xor
xchg
rorl
dec
lock
icebp
push
and
mov
mov
ja
imul
loop
push
dec
or
push
in
or
aas
lods
xchg
into
sub
xor
jae
stc
xchg
roll
lret
pop
ljmp
fwait
dec
test
dec
push
sti
sub
cli
jg
push
mov
in
fstpl
js
mov
xchg
movsl
call
mov
jb
lea
push
adcl
scas
imul
xor
je
int
push
xchg
push
lods
nop
xor
dec
movsl
clc
mov
add
loope
mov
dec
pop
jo
sbb
dec
jecxz
comiss
xor
ss
dec
cmp
mov
pop
cmp
mov
cmp
push
mov
dec
cwtl
cld
out
inc
mov
mov
daa
mov
shlb
call
mov
ds
call
mov
mov
add
loopne
sahf
push
xor
mov
pop
sbb
xchg
adc
andb
pop
push
insb
pop
out
mov
test
jecxz
test
jge
stos
push
lret
and
adc
inc
lods
push
repnz
jecxz
or
push
dec
test
inc
cmpsl
push
js
xchg
int
es
popa
or
mov
dec
out
jae
inc
and
push
out
es
mov
lods
inc
data16
lds
cltd
nop
xor
pop
xor
xchg
jns
jbe
fadds
in
mov
shll
ret
pop
test
push
ret
dec
xorb
ret
jge
or
shlb
cwtl
clc
jge
repnz
jle
insl
jp
xor
lret
lods
jae
inc
xchg
sarl
mov
out
clc
int3
ja
enter
mov
scas
cmp
mov
pop
stos
rcrb
or
fldcw
negb
shrl
push
lods
sti
outsl
xor
pushf
in
or
movsb
mov
ficompl
cmp
pop
test
mov
out
push
jl
ret
sahf
fs
add
dec
das
push
cmp
cmp
pop
push
in
mov
andl
sbb
neg
add
dec
imul
stc
pop
push
test
xadd
sbb
cmp
sbb
hlt
xlat
xor
cmc
std
jecxz
jbe
push
int
jbe
pop
rclb
fisubl
add
jb
scas
sti
pop
jae
pop
mov
scas
outsl
repnz
cs
mov
add
cmp
adc
fwait
mov
dec
push
pop
and
imul
lahf
cmp
inc
mov
ret
in
jg
xor
cltd
fdiv
jecxz
ljmp
fsubrs
and
test
into
and
mov
lret
nop
or
xor
inc
sbb
in
add
dec
inc
dec
imulb
or
xchg
mov
sbb
xchg
or
es
add
xchg
jp
js
jae
jmp
int
add
psubd
cs
cmp
mov
loope
icebp
jmp
outsl
inc
jo
loopne
sub
stos
inc
fwait
xchg
imul
jo
lock
cmp
dec
and
pusha
jmp
gs
stc
xor
sub
fdiv
fs
decb
inc
mov
mov
xchg
rcrl
jno
lods
dec
mov
call
jo
mov
pop
addl
adc
mov
enter
xchg
push
dec
mov
push
shrb
and
loop
test
repz
leave
sub
movsl
push
inc
popf
or
sub
imul
out
ja
mov
push
inc
mov
pop
cltd
mov
jne
insl
xchg
pop
ficomps
cld
hlt
shlb
push
or
and
adc
subb
mov
imul
ficoms
push
jae
in
cmp
icebp
pop
lret
mov
fs
test
adc
ljmp
dec
dec
jno
mov
sbb
fcoml
sbb
test
in
jecxz
and
stos
aaa
xchg
stos
cmp
hlt
mov
jnp
test
fs
mov
xor
movsl
jle
and
repnz
jg
inc
int3
mov
fs
jb
test
mov
mov
lods
dec
jecxz
jb
cwtl
cwtl
pop
gs
pusha
lret
or
inc
mov
and
js
push
push
dec
lret
add
aaa
test
aas
xor
sub
lods
nop
scas
wbinvd
or
popa
rcrb
dec
or
sub
repz
xor
xor
popa
cli
jbe
stos
jb
mov
call
mov
in
ret
and
sub
dec
and
sbb
ljmp
xchg
insb
mov
xchg
lret
push
mov
jl
xchg
or
mov
pop
xchg
lods
pop
pop
mov
dec
xor
dec
add
notb
cli
cmc
adc
and
pushw
ja
ret
push
movsb
add
sub
pop
loope
jo
xor
iret
and
cmp
sti
jns
test
inc
dec
cs
mov
jecxz
inc
mov
inc
xchg
adc
enter
fwait
push
in
jo
in
nop
lahf
adc
movsl
lods
pop
push
js
call
popf
filds
mov
jcxz
cltd
or
outsb
xchg
cmpsb
pop
or
dec
sub
mov
inc
adc
les
cmp
sbb
js
add
xchg
lock
push
sbb
pause
sub
in
dec
add
mov
mov
jnp
gs
sbb
pop
mov
out
mov
xchg
push
mov
es
push
mov
jne
lods
clc
popf
add
mov
cltd
aaa
add
lcall
dec
inc
lods
insb
xchg
inc
jl
sub
jmp
pop
mov
add
popa
stc
shrl
imul
imul
pop
sarb
loopne
in
or
shl
and
pop
fiaddl
fdivrp
mul
dec
out
orl
sub
sub
mov
aas
mov
inc
loop
je
push
push
push
push
jns
push
leave
mov
and
pushf
push
jnp
push
xchg
jae
cmpsl
xchg
cmp
push
dec
icebp
and
xchg
pop
out
ljmp
mov
mov
sahf
push
sub
mov
rclb
lret
jb
jo
scas
cmp
sbb
les
sub
dec
enter
lods
in
mov
dec
fisttpll
enter
bound
insb
xchg
mov
pop
insl
fildll
sbb
lret
gs
adc
sub
arpl
cmp
ds
dec
dec
arpl
sbb
xchg
pop
out
push
sarl
add
push
jmp
add
cmp
hlt
imul
loop
sub
pusha
lret
inc
push
icebp
stos
test
sti
fcompl
pop
sbb
ret
jl
sbb
push
pop
es
or
push
xor
lods
mov
inc
popf
adc
inc
lods
xor
movsb
inc
out
mov
xchg
jb
call
scas
pop
and
addr16
mov
movsb
fmull
gs
pop
cld
sbb
adc
cmp
gs
mov
xchg
ljmp
inc
pop
mov
sarb
lods
and
cmp
test
sbb
pushf
incb
mov
test
outsb
fdivrs
sbb
mov
insb
dec
jae
adcb
cs
loop
inc
rclb
cmp
repz
push
std
gs
xchg
cmpsl
push
push
cmp
out
std
adc
and
jle
and
cmp
addr16
out
and
inc
jne
cli
les
shrl
fldt
test
mov
out
lret
inc
mov
cmpsb
in
stc
daa
xor
inc
decb
mov
adc
insb
icebp
push
dec
mov
push
pop
or
aas
stos
sti
adc
push
mov
jp
adc
or
mov
sub
fwait
into
or
mov
lds
jns
lods
jae
xchg
mov
add
and
inc
pop
adc
repz
movsb
decb
add
mov
lahf
shll
mov
mov
out
ja
out
jge
orb
repnz
xchg
push
out
cmpsl
inc
mov
inc
mov
stc
movsb
mov
lods
out
pop
adc
es
cmpsl
add
lret
mov
inc
sahf
fldt
dec
out
nop
mov
rcrb
push
mov
lret
sbb
and
outsl
push
dec
out
sbb
jne
jle
or
push
add
dec
xchg
loope
ds
mov
mov
pop
jge
xchg
rcr
addb
clc
add
push
outsl
mov
add
xor
jmp
outsl
sbb
xchg
ljmp
and
loopne
js
pop
jle
cmpsl
ret
mov
popf
xchg
movl
out
das
lods
jl
sbb
inc
jge
sub
jae
dec
out
fsubs
addl
repnz
fmuls
push
adc
jo
xor
xor
ss
fwait
add
dec
mov
sub
int
andb
or
mov
lods
sub
lret
in
dec
add
sub
sbb
mov
ljmp
mov
mov
lahf
mov
clc
movsl
mov
mov
xor
or
in
push
test
gs
mov
es
addr16
adc
mov
cli
push
xchg
or
mov
test
jo
rol
imul
int3
dec
push
lea
inc
sbb
stos
xchg
js
sub
xchg
jmp
loop
stc
xchg
ljmp
test
imul
sub
xlat
ja
jmp
sbb
imul
mov
stc
loop
push
mov
dec
ficompl
push
test
push
mov
leave
loopne
loopne
jle
pusha
push
shrl
notl
xchg
cwtl
or
jbe
lods
aad
lds
faddp
movsb
cwtl
jl
add
lcall
fwait
lods
pop
pusha
mov
adc
jnp
inc
ja
test
dec
aad
pop
arpl
out
fwait
movsb
mov
in
push
dec
out
xchg
pop
jg
faddp
ljmp
in
nop
aad
dec
sub
mov
jg
rolb
mov
jb
fildll
xchg
xchg
jae
lret
sarl
push
add
loope
ret
or
sbb
push
and
insl
or
fisttpl
bound
pop
mov
arpl
mov
add
clc
adc
imul
lret
jge
sbb
repz
xchg
xor
ljmp
in
sbb
or
inc
rep
push
lahf
sub
cli
fisttpl
dec
cmpb
cltd
mull
mov
xor
xchg
jmp
ret
aad
mov
cltd
je
loope
ret
adcl
out
loop
stc
dec
pop
sbb
stos
mov
push
mov
or
out
pop
inc
in
inc
shll
xor
negl
mov
mov
fists
aas
fwait
xor
inc
movsl
adc
int
xchg
cld
rorl
jb
or
inc
xchg
fsts
frstor
or
push
out
shr
lds
daa
pop
or
lea
cmp
gs
and
popf
cmpb
icebp
idivb
ret
mov
or
sarl
out
mov
jo
xor
xlat
push
int3
mov
pop
test
fists
pop
xchg
sbb
push
jo
negl
sub
sahf
test
dec
adc
ljmp
jb
and
xor
xchg
test
cmp
adc
mov
xchg
rorb
xor
dec
xlat
push
les
sbb
outsb
fidivs
mov
push
repz
adc
stc
sub
cwtl
inc
mov
inc
test
push
ret
fwait
enter
test
dec
cmpsl
dec
dec
mov
jg
sub
mov
popa
int
int
cmp
jns
mov
nop
add
jge
nop
sub
nop
fisubs
pop
lea
js
test
fwait
fwait
imul
cs
in
les
or
sbb
aad
gs
pop
pushf
lahf
scas
lret
xchg
dec
movsb
mov
dec
push
imul
push
mov
jbe
jae
add
cmp
repnz
repnz
scas
outsl
sub
imul
xor
in
xchg
lret
cmp
mov
mov
das
mov
mov
push
pop
push
insl
aaa
aaa
sbb
push
cmp
outsb
popf
insb
mov
sub
popa
add
mov
into
mov
ds
push
sbb
popa
sbb
jge
shlb
sub
mov
in
jns
mov
ss
mov
jmp
xor
sahf
fst
mov
cld
pop
inc
cmpsb
jmp
out
and
jmp
pop
arpl
mov
fmuls
insl
fimull
jns
loope
mov
imul
or
jbe
xchg
jl
addl
jns
loope
rclb
cs
jle
adc
xor
imul
inc
les
add
xor
stc
sbbb
jmp
push
test
movsb
fwait
add
add
arpl
sahf
push
or
jmp
push
xor
cli
lret
cld
mov
lcall
mov
push
cmpl
add
aas
pop
icebp
popf
in
adc
pop
cmpsb
mov
dec
loop
adc
in
andb
jae
div
jmp
xchg
aas
mov
sarb
jbe
add
pop
sbb
clc
movsb
nop
test
pop
mov
leave
into
xchg
loop
loope
setns
dec
pop
sbb
jmp
mov
mov
sti
jmp
imul
add
push
pop
out
xor
jne
popf
sbb
pop
into
jno
or
popf
mov
dec
loop
popf
xchg
aad
mov
jne
xor
pop
icebp
shrb
popa
inc
subl
aam
pop
add
test
cmp
sub
cld
pushf
out
jbe
sahf
dec
push
xor
jge
sbb
ret
add
mov
sub
in
jecxz
xchg
dec
fldt
xlat
mov
sub
js
std
pop
pop
pushl
mov
mov
add
ret
popl
mov
shrb
das
leave
adc
xchg
cld
es
mov
imul
shl
popa
sub
inc
fs
xchg
lahf
mov
add
sarl
cmc
das
jl
andb
ss
sub
jl
hlt
lcall
sub
std
cmpb
add
and
stos
mov
flds
int3
mov
and
outsl
fidivl
cwtl
xchg
push
imul
jge
addl
push
out
sub
std
dec
enter
sbb
lods
jnp
pushf
add
hlt
inc
lock
lcall
sbb
pop
cmpsl
and
xchg
and
bound
push
imul
mov
jo
and
jae
push
mov
jp
insb
ret
adc
loope
inc
xorb
mov
mov
mov
cs
mov
mov
pop
mov
jp
test
mov
inc
push
stc
push
xor
in
popa
push
lret
mov
loop
mov
pop
fsubl
jecxz
pushf
add
xlat
inc
dec
cmp
xor
and
insl
and
sbb
aaa
rclb
pop
shll
inc
xchg
add
and
pop
test
inc
cmp
or
aaa
ret
fiadds
jo
xchg
mov
inc
dec
arpl
mov
xchg
dec
lds
sub
in
and
sbb
in
push
mov
fstps
xor
aaa
fnstcw
test
hlt
call
ret
scas
nop
adc
fistl
and
gs
mov
mov
sahf
push
out
mov
pop
add
in
es
mov
sti
shlb
mov
push
nop
cmovnp
jge
rorl
mov
mov
jmp
jge
or
cmp
lods
pop
shl
mov
pop
mov
cli
mov
mov
jmp
js
push
xchg
cmc
addr16
pop
arpl
mov
shlb
inc
ljmp
xor
dec
xchg
cwtl
inc
shlb
rcrb
dec
adc
push
sahf
test
jge
lods
aaa
std
pop
push
dec
cmpsl
mov
mov
repz
test
sub
xchg
fimull
xor
popl
mov
cmpsl
pop
fs
fldl
dec
mov
loope
mov
popa
int3
sahf
adc
pop
or
mov
dec
cbtw
and
dec
movl
out
push
shll
mov
in
sbb
movsb
andl
and
and
call
inc
data16
mov
addr16
inc
shll
and
xchg
cmp
int3
or
add
adc
mov
mov
dec
jecxz
and
lcall
xchg
xchg
popf
mov
lods
lcall
sub
add
hlt
or
es
testl
bound
or
dec
scas
add
sbb
ljmp
imul
out
movsb
movsb
mov
sub
or
les
mov
inc
fucom
mov
inc
add
xor
sub
in
or
and
test
outsb
dec
dec
inc
xchg
dec
lret
ret
xor
jae
push
aas
data16
imul
lods
aam
xor
jge
mov
lret
inc
jb
dec
xchg
int
in
rol
mov
out
mov
adcb
xchg
in
fs
adc
lods
test
mov
bound
jmp
jp
daa
sub
jae
call
mov
lahf
sbb
filds
push
enter
xchg
mov
mov
sub
fldl
sbb
adc
xor
mov
inc
rolb
add
les
xchg
mov
dec
mov
push
cli
lret
or
push
mov
mov
push
mov
jl
scas
jmp
push
pop
jecxz
es
in
sbbb
cltd
and
lret
lds
out
xchg
sbb
mov
ret
push
push
add
inc
stos
fcoml
push
fwait
cs
xchg
ss
fsub
add
flds
mov
daa
jmp
les
ret
dec
jnp
fistps
xor
pop
lret
popf
rolb
push
push
bound
mov
mov
and
aad
int3
imul
pushf
iret
dec
adc
clc
cmc
adc
imul
cltd
scas
jbe
cld
sbb
maskmovq
fistpll
cmc
in
add
sbb
sbbb
shlb
pop
cmp
ficomps
cltd
jno
stos
jmp
insl
outsl
jnp
sbb
dec
mov
fmuls
sti
nop
jl
lret
xchg
mov
scas
cmp
mov
scas
add
fwait
mov
adc
or
and
and
dec
sbb
imul
cmp
arpl
sbb
filds
adc
and
jmp
outsl
pop
push
inc
fld1
pop
pop
pop
shlb
call
adc
adc
or
adc
add
push
out
pusha
sub
add
ficomps
loop
pop
sar
js
jmp
aad
mov
loop
adc
stos
ljmp
pop
addr16
ljmp
loop
mov
dec
or
xor
xor
jp
jp
enter
mov
sbb
xchg
test
fldcw
leave
mov
repnz
mov
adc
out
xchg
gs
shlb
sub
int3
sub
mov
sbb
xchg
lds
repz
call
dec
and
sbb
movsl
and
jno
mov
sub
mov
push
sbbb
sub
cmp
inc
cmpsb
cmpl
nop
fs
push
and
adc
lret
cmc
fwait
inc
jbe
fs
mov
pop
jmp
and
pop
movsl
lahf
xchg
and
jne
in
testl
les
orl
icebp
pusha
mov
lahf
inc
cmp
fucomp
jbe
xlat
push
iret
pop
mov
xchg
jae
mov
outsl
add
jb
jg
pop
lret
jbe
insl
arpl
ret
cs
jmp
fistl
sub
jmp
ret
sub
and
mov
add
pop
mov
inc
inc
inc
vmwrite
mov
scas
fbstp
inc
repnz
mov
test
xchg
push
pop
lock
mov
xor
sbb
outsl
mov
loop
inc
push
out
jg
js
mov
and
xchg
out
sahf
fdivrl
in
mov
test
add
lds
add
mov
mov
fiaddl
jecxz
mov
sub
sbb
pusha
pop
push
pusha
daa
lea
icebp
out
lock
jecxz
pop
xbegin
int
and
jbe
das
sbb
aas
push
xchg
xorb
push
sbb
push
subl
sbb
pop
sub
push
lahf
fwait
repz
stos
inc
mov
ss
aad
rcl
out
mov
mov
and
push
out
jno
cld
dec
pushf
push
mov
loop
fisttpll
sbb
mov
inc
test
adc
ds
sbb
aaa
test
std
mov
cmp
sbb
cmp
mov
mov
addr16
rcrl
insb
xchg
jl
push
jge
leave
xor
or
xchg
ret
mov
xor
sti
rclb
aaa
in
sub
or
icebp
fisubl
dec
adc
jecxz
inc
adc
aas
movb
mov
jg
dec
push
push
aaa
pop
dec
mov
inc
mov
sti
popa
cmp
inc
pushl
adcb
xchg
or
fistpl
stos
div
pop
fildl
test
cmp
xor
push
mov
aas
ret
fnstcw
add
pop
sbb
push
inc
or
insb
hlt
push
dec
sub
cli
push
fistl
push
mov
xchg
push
pop
stc
gs
jmp
mov
hlt
fsubl
ss
pop
jae
cmc
stc
dec
pop
gs
lods
jns
cld
insb
push
scas
xor
jmp
jae
ficomps
pop
push
imul
mov
rcll
inc
orl
pop
jmp
cmc
adc
ljmp
xor
and
xchg
loop
sbb
xchg
decl
dec
cmpsb
popa
cwtl
arpl
mov
push
jno
int
cmp
psrld
fdivl
push
cmpsb
das
xor
ss
push
icebp
mov
or
mov
mov
mov
movsl
pop
cmp
je
out
sub
cmp
shll
push
xchg
nop
seta
sub
pop
bnd
mov
int3
xor
mov
push
xchg
lahf
popf
sub
daa
popf
jle
cs
pop
mov
jnp
sbb
mov
xor
dec
jle
or
adc
jecxz
add
pop
xchg
div
cmp
nop
cmp
scas
outsl
shrb
jmp
dec
adc
movsl
mov
mov
and
or
cld
pop
clc
lret
pop
aam
sub
lock
cli
movsb
jp
decb
mov
std
dec
xchg
push
jecxz
push
lahf
sahf
mull
inc
bound
loope
add
mov
pop
and
xchg
lods
xor
in
sub
bnd
sahf
fs
dec
xor
test
aam
js
out
mov
mov
xor
in
std
fdivrs
sub
xchg
mov
sub
mulb
or
jnp
rcrl
mov
bound
mov
and
pop
xor
cmp
lods
jnp
add
xchg
ljmp
jg
pop
and
xlat
lcall
lret
in
sbb
mov
push
fildl
mov
in
dec
int3
or
or
push
call
sbbb
adc
icebp
jmp
pushf
pop
sti
loope
sbb
push
xchg
shrb
xchg
push
out
mov
daa
imul
xor
mov
cld
cmp
sti
xor
xor
jmp
jbe
loopne
mov
lods
jecxz
jae
xorl
sbb
push
das
popf
ja
lahf
jg
roll
jecxz
js
pop
xchg
mov
and
imul
or
or
sahf
push
mov
xor
cmp
xchg
push
dec
aas
mov
fistpl
je
fistpll
jl
sbb
and
test
push
mov
jp
push
pop
divl
inc
cwtl
pop
jl
jg
rcl
xchg
test
repz
addr16
data16
xor
mull
pop
jbe
faddl
popa
mov
call
mov
bound
xchg
data16
push
xor
mov
xchg
or
cli
mov
push
bound
inc
mov
sbb
mov
mov
push
movsb
not
mov
cltd
loope
sbb
push
lods
in
jl
mov
inc
loopne
xchg
mov
repz
mov
cmp
lcall
add
xchg
mov
lea
sbb
ljmp
push
lods
loopne
dec
lds
push
out
xchg
and
std
cmpsl
xchg
and
cli
shll
xor
sti
cmc
je
cmc
repnz
arpl
cli
in
ret
push
rcl
jmp
dec
lock
cltd
push
pop
mov
in
sub
scas
jb
scas
sub
mov
addb
add
jle
dec
inc
mov
mov
lea
call
mov
cmp
jns
xorl
pop
push
dec
cmp
mov
adc
xchg
aaa
pushf
jle
mov
ds
xchg
cmp
sbb
pop
es
mov
fwait
dec
sbb
push
and
shll
inc
insb
mov
jb
add
sbb
scas
aaa
inc
out
lock
icebp
clc
inc
jg
mov
push
pop
out
jns
loopne
movsl
pop
xor
mov
lahf
out
or
das
aad
std
mov
call
lds
sub
lcall
cmp
lods
add
jmp
or
push
aad
fists
addb
dec
pop
dec
lahf
les
jmp
sub
xor
add
xchg
imul
out
mov
and
xor
xchg
pop
jmp
inc
mov
pop
cli
push
pop
mov
fbld
ds
leave
ret
fdiv
int
jo
xor
pushf
cmp
dec
mov
lret
cmpsb
dec
jmp
and
jg
test
sbb
or
test
pop
cmp
dec
xchg
bound
xchg
and
pop
sbb
mov
dec
xor
mov
sbb
pop
shlb
pop
nop
or
movsb
lcall
sbb
mov
lsl
mov
cmpl
out
in
call
stos
lock
aad
pushf
les
cmp
mov
fwait
and
dec
xor
adc
insb
stos
mov
and
enter
dec
dec
repnz
mov
loop
fwait
mov
xchg
xchg
adc
fcom
adc
dec
iret
mov
imul
jne
pop
icebp
adc
push
and
push
mov
xchg
fldenv
adc
stos
lds
lret
js
push
adc
hlt
mov
xor
pop
test
pusha
add
pop
sbb
mov
ficomps
mov
ret
pop
int3
sti
out
pop
clc
inc
xor
loope
push
sbb
scas
lock
pop
dec
mov
and
fdivrs
call
movsb
ljmp
out
sahf
mov
lods
fistpll
push
cmp
xchg
das
jae
push
dec
ss
mov
jl
insl
sub
mov
mov
push
cli
jns
repz
pushf
or
mov
shlb
bound
push
inc
out
sti
imul
and
rcrl
es
xor
repz
sub
cmp
jge
push
gs
ficoml
das
sub
popf
mov
pop
mov
jg
jmp
lods
cmp
mov
inc
xchg
sbb
xchg
mov
adc
sbb
pop
sbb
fwait
cmc
jb
sub
test
mov
sub
cmpsl
xchg
adc
mov
ds
mov
test
rolb
mov
jp
jo
js
jae
lret
inc
push
loop
into
or
stos
roll
cmp
add
xor
enter
pop
scas
mov
rcrb
shl
and
adc
pusha
fstp
dec
popa
shr
push
xchg
stos
or
adc
test
cmp
inc
imul
or
xor
mov
add
mov
xor
cmp
and
cmp
test
xchg
pmulhuw
and
xchg
cwtl
lods
mov
mov
add
outsb
pop
add
push
or
sub
enter
std
and
mov
cmp
and
pop
mov
or
cmpsb
xor
dec
out
inc
scas
push
and
ljmp
jmp
jne
fcomps
jb
pop
popf
je
sub
cmp
mov
and
ror
xchg
xchg
inc
jb
pop
mov
adc
lods
test
push
inc
xchg
adc
adc
or
fnstcw
sbb
data16
sub
insl
pushf
movsb
xor
cmp
fisubs
jmp
push
aam
mov
or
fisubs
scas
adc
or
std
pop
movsb
dec
adc
enter
insb
cli
rcrb
xor
fstpl
mov
adcl
lcall
jns
shr
mov
adcb
dec
fdivs
dec
dec
jb
lcall
in
addl
aam
pop
movsl
imul
loopne
imul
pushf
cwtl
pop
and
pop
push
lock
int
aas
mov
dec
mov
flds
add
inc
xor
sbb
fistpl
mov
jg
aas
insb
fisubs
push
aam
dec
mov
out
dec
test
aam
mov
inc
ret
push
rolb
mov
push
mov
insb
rcll
xchg
push
fnstenv
adc
dec
sub
ds
mov
mov
dec
lcall
imul
xchg
pop
mov
out
ret
push
test
dec
mov
and
mov
lcall
lods
mov
jmp
dec
repnz
xchg
repz
aas
sbb
movsb
pushf
cmc
fs
in
out
mov
dec
sahf
mov
xchg
iret
dec
pop
push
jl
ret
xor
dec
fsubl
fsubs
adc
or
iret
scas
dec
xchg
adc
fstl
popa
cwtl
pushf
adc
xor
repnz
aam
cli
xor
and
mov
or
std
xor
es
pop
inc
jo
xor
xchg
mov
stos
movsl
cmp
daa
jl
loope
ret
or
sahf
shr
lods
add
pop
xor
hlt
xor
mov
inc
pop
push
cmp
push
cld
xchg
jg
adc
pop
aas
imul
dec
mov
pop
xlat
in
iret
adc
or
or
addr16
sarl
sub
adc
cmpsl
repnz
adc
jmp
enter
adc
jge
push
or
jb,pt
sub
lds
mov
mov
and
aad
adc
popf
pop
setns
mov
test
movsl
add
test
jge
scas
sbb
xor
ret
shlb
mov
mov
dec
mov
push
call
push
sub
stc
cmp
mov
cmc
xlat
push
push
mov
loopne
stos
fdivr
cli
sarl
xorb
jns
inc
xor
leave
or
mov
jle
pop
add
jnp
test
gs
scas
or
mov
cmp
andb
mov
loop
push
hlt
lcall
movsb
scas
rcrb
xchg
lcall
dec
out
pop
je
in
sbb
adc
add
fisubrl
dec
std
add
sahf
add
sub
ficompl
sub
pop
out
int3
cmp
stos
adc
cmpsb
fistl
outsb
cmp
pop
cwtl
ljmp
rol
xchg
jl
and
mov
jo
mov
and
lds
jne
adc
cmp
mov
out
mov
dec
mov
xchg
imul
xchg
faddp
inc
mov
sub
test
das
leave
jmp
lods
fisubs
or
jnp
fcomps
pop
and
daa
sti
adc
inc
mov
ja
or
enter
and
or
sub
push
aam
movsb
imulb
add
push
test
test
and
or
mov
pop
mov
cmp
es
jl
mov
les
cmpsl
sbb
mov
dec
inc
mov
or
inc
xchg
sub
imul
paddusw
mov
inc
jmp
stc
or
mov
jmp
pop
imul
mov
fnstsw
mov
pop
int
sarl
in
xchg
ret
cwtl
pushf
xchg
and
shr
sbb
idivl
aas
rolb
dec
addr16
mov
addr16
or
mov
ljmp
and
aaa
sti
push
xor
pop
jne
imul
cmpsb
pop
xchg
push
es
xor
int
addr16
sub
popl
add
stc
orb
shll
sbb
push
cld
pop
daa
loope
bound
push
in
dec
shll
jbe
and
add
jle
pop
xor
les
sub
cli
xlat
gs
hlt
push
mov
or
call
jg
clc
jmp
add
cwtl
ja
insb
mov
das
xchg
and
bnd
test
push
insl
mov
test
mov
xchg
mov
bound
in
xor
daa
fstps
aad
scas
sub
dec
jns
aad
jge
mov
arpl
lock
push
or
push
adc
lahf
rorb
inc
fistpll
mov
popf
outsl
dec
sub
dec
daa
ret
sub
ds
ljmp
in
aad
fstpl
cwtl
out
pop
mov
jge
pushf
nop
mov
sub
inc
xchg
mov
push
fs
pop
or
jne
mov
pop
in
loop
dec
cmp
mov
mov
cmp
and
xchg
inc
pop
add
adc
xchg
jb
es
jp
mov
call
jno
and
xchg
repz
test
ja
jo
xchg
jp
and
cs
mov
sti
xchg
mov
sbb
pop
lods
sbb
aas
inc
popa
in
mov
push
call
cltd
mov
jo
cmp
mov
js
lods
rorl
cmp
jo
sahf
dec
out
lea
lock
cltd
add
cmp
and
dec
hlt
sbb
mov
jge
push
sub
xchg
xor
cmpl
push
or
pop
test
les
mov
cmp
add
push
adc
add
xlat
or
sbb
dec
call
mov
sbb
cmp
cmpsb
mov
mov
js
adc
sti
mov
dec
xor
dec
clc
bound
xlat
inc
jae
add
ja
pop
outsl
inc
scas
pop
xchg
jo
dec
mov
sub
add
cs
add
add
insl
lods
sbb
insl
subl
cvtps2pd
js
cmp
add
pop
mov
js
lret
dec
xchg
xor
xor
adc
add
jb
fisubl
lock
repz
mov
pop
pop
push
push
daa
push
sub
push
punpcklbw
pushf
leave
push
repnz
xchg
push
cli
pop
sbb
fistps
jo
mov
cmpsb
sbb
in
test
push
mov
repz
and
lret
xchg
pop
pop
ds
mov
xlat
xlat
les
xchg
arpl
mov
xchg
xor
ljmp
lcall
jo
cmp
sub
sub
js
mov
test
inc
xchg
sbb
push
cmp
addr16
pop
imul
inc
popa
popa
pop
jo
or
movsb
add
push
cmp
jmp
push
mov
push
out
mov
sbb
fildl
jne
jge
xchg
nop
mov
sbb
or
cmc
cltd
ret
adc
int
daa
in
lahf
pusha
cmpsl
ret
sub
mov
fstps
xchg
fs
je
push
pop
test
daa
push
or
in
subb
xchg
sub
dec
cmp
jns
mov
fildl
aam
int
mov
sahf
pop
jne
in
jbe
inc
sub
sub
popa
loopne
adc
in
sbb
inc
push
fidivs
jp
mov
or
int
popf
loopne
push
incl
cmp
jno
or
dec
loopne
int3
mov
divb
pop
lds
push
cmpsb
fidivrs
dec
scas
jae
sub
lods
or
enter
cmp
imull
inc
sbb
lds
dec
test
xchg
push
cmpsb
cltd
push
cmpsb
addr16
cmp
pop
sub
jo
sbb
lcall
mov
arpl
lea
movsb
decb
loope
dec
sub
mov
jg
aaa
cmp
ja
dec
xchg
adc
xor
push
iret
lds
pop
test
divb
xor
sbb
mov
pop
into
cmc
push
not
xchg
jg
mov
and
cmp
stos
lods
jmp
out
shll
xchg
push
push
jge
int3
fmul
lret
bound
sub
pushf
lret
xor
imul
inc
mov
jg
std
cltd
push
cld
scas
mov
ss
loopne
mov
movntps
push
into
out
fdivs
test
xchg
in
xorl
sarb
and
cwtl
out
call
arpl
scas
sbb
pop
pop
adc
or
mov
cmp
roll
adc
insl
or
je
and
cmp
xchg
mov
pop
lret
shrl
cmpsb
aaa
or
divl
outsl
lods
enter
xchg
or
ret
pop
lret
pusha
pop
leave
cwtl
mov
mov
cli
mov
into
lret
insb
pop
fwait
xchg
insb
dec
push
aad
imul
xor
push
mov
xchg
loopne
sub
filds
addr16
adc
bound
std
in
loope
inc
dec
xlat
push
subl
push
or
hlt
dec
jno
loopne
orb
lods
ror
sbb
xchg
sbb
cmp
push
adc
pop
frstor
lret
mov
loopne
sub
push
xor
jo
sti
mov
xchg
pop
cmp
or
xor
and
adc
shrb
dec
and
mov
sub
pop
inc
xor
jecxz
sbb
cmpsb
sbb
mov
jecxz
test
adc
insl
jmp
xchg
xor
jecxz
or
mov
mov
xchg
loopne
jne
or
jg
mov
add
lcall
lcall
inc
mov
lea
push
sbb
rolb
loopne
cmp
cmp
inc
out
dec
xchg
mov
ficomps
movsl
jne
xor
mov
jnp
jne,pn
test
adc
jae
xor
adc
shlb
jl
mov
push
int
dec
push
mov
fldl
std
shrb
push
adc
and
xchg
je
cs
xor
push
inc
cs
fwait
sub
andb
xchg
mov
shlb
movsl
in
pop
push
scas
mov
rol
push
inc
stos
mov
lret
xchg
cltd
iret
sbb
pop
outsb
call
arpl
lea
or
mov
pop
inc
shrb
insl
jne
adc
cmpsl
add
push
out
in
clc
adc
repz
loopne
rorl
lret
pop
ja
rclb
scas
and
inc
mov
sub
or
call
pop
jns
xchg
xor
and
xchg
jno
nop
push
aam
xchg
repnz
stos
cmp
xor
dec
xor
or
push
aad
dec
pop
xchg
mov
jmp
dec
lret
faddl
out
subb
cltd
xor
shll
sub
dec
cs
jecxz
jg
cmc
dec
lret
mov
mov
xlat
inc
mov
jge
ret
sub
cld
cmp
or
pop
sbb
sub
mov
push
into
out
push
cli
and
mov
test
cmpsb
xchg
sub
jae
mov
scas
sbb
stos
pop
fs
pop
daa
mov
push
std
divps
ret
push
push
mov
sbb
imul
or
fisttpl
aad
jns
xchg
cmp
cmp
adc
cmp
int
aaa
pop
stos
imul
xchg
mov
jl
stos
shll
fmull
xchg
mov
push
popf
in
add
xchg
nop
or
jb
in
mov
push
lods
aam
movsb
mov
jne
or
mov
call
insl
roll
mov
pushf
mov
cmpsb
sub
adc
test
stos
xchg
mov
addr16
xor
or
enter
int3
loopne
mov
or
mov
imul
mov
add
pop
add
mov
cld
sar
das
and
add
fcoms
nop
jmp
sarl
sub
jl
es
fimull
xor
inc
lret
add
mov
xchg
push
mov
sbb
sti
mov
pop
pop
mov
jl
test
pop
bound
mov
ljmp
mov
pop
aad
cwtl
shl
add
cmp
pop
icebp
ret
cmp
sbb
insb
dec
sbb
into
les
jne
loop
dec
fcmove
ja
leave
adc
add
fadds
add
xor
cmp
jnp
cmpsl
mov
xor
sarl
movsb
push
ret
jns
lcall
jbe
pushf
jo
repnz
or
push
lock
jmp
xor
jp
mov
pop
fbld
adc
in
pop
test
push
mov
inc
lods
aad
pop
pushf
jbe
ljmp
lea
ljmp
push
dec
mov
jb
arpl
cmpsl
les
sub
add
mov
sub
jno
imul
push
inc
popf
or
gs
fisttpll
push
sub
pop
cs
arpl
push
mov
movsl
sti
jne
sub
mov
inc
pop
cwtl
aaa
xchg
xchg
or
test
testb
call
leave
add
js
mov
incl
push
fiadds
test
sbb
dec
jnp
out
pop
out
fs
jae
adc
mov
fisubl
sbb
fsubrs
jp
scas
in
and
aaa
adc
leave
lock
inc
test
in
int
dec
sub
movsl
sbb
push
sub
cld
sub
cwtl
and
mov
sub
jno
dec
scas
fsubrl
nop
sbb
push
sbb
adc
jg
je
jb
mov
ljmp
xchg
xchg
or
dec
loope
push
inc
mov
push
fucomp
outsb
jge
push
decl
or
pusha
jmp
fadds
in
mov
mov
fsubs
adc
inc
mov
lcall
cmp
stos
jmp
or
mov
push
push
pusha
dec
add
popa
inc
jge
popa
bound
pop
and
imul
adc
or
hlt
stos
xchg
scas
add
pop
loop
and
push
xchg
iret
xor
pop
pop
mov
jns
dec
inc
int3
mov
dec
aas
xlat
xor
inc
sbb
xor
jmp
add
jl
loop
push
rolb
insb
mov
push
pushl
int
neg
les
pusha
mov
sarb
and
ss
icebp
dec
int3
mov
xlat
mov
shll
mov
hlt
add
dec
loope
inc
inc
faddp
jns
add
aas
push
loop
cmp
sahf
jle
sub
idiv
mov
sbb
or
pop
push
cmpsl
in
push
loope
dec
in
mov
push
xchg
rclb
inc
insb
mov
dec
or
or
imul
push
xor
or
pop
mov
mov
adcl
mov
sub
lea
add
cltd
mov
test
movsl
scas
lret
lods
and
cmp
addr16
icebp
mov
fwait
out
ja
or
dec
xchg
cmp
add
sbbl
adc
inc
fwait
inc
pushf
push
mov
rorl
lods
dec
or
popf
or
mov
addr16
sub
or
pop
movsb
sbb
dec
dec
loope
or
and
lea
or
mov
add
push
test
andl
fwait
das
inc
adc
or
sub
sbb
push
sbb
or
lea
adc
dec
test
mov
call
aas
push
data16
mov
sbb
inc
add
lret
add
sarb
xchg
adc
inc
fs
xor
aaa
je
loop
popa
mov
xchg
xor
dec
jo
mov
sbb
ret
pop
xchg
out
and
loope
addr16
int
xchg
xchg
dec
cmpsb
xor
push
lea
leave
sbb
bound
xchg
xchg
mov
adc
in
test
lret
fists
gs
xchg
xor
pop
mov
mov
mov
iret
test
fst
xor
pop
addr16
push
push
lods
mov
add
mov
aam
jbe
inc
mov
pop
jns
jge
jge
sub
and
cltd
mov
and
add
lahf
test
movsl
push
xchg
enter
push
mov
adc
ret
pop
incl
imul
inc
aad
mov
mov
sbbb
ret
rcl
jb
daa
sub
jp
loopne
mov
jae
cmp
enter
mov
out
and
ret
dec
in
aam
xchg
loope
aad
insl
ljmp
stos
icebp
int
add
cs
jge
int3
mov
and
or
and
out
mov
mov
mov
add
repz
mov
sub
fadds
dec
cs
push
cmp
flds
sbb
and
loop
js
pushf
cmp
jg
insb
cmp
add
and
adc
fildl
mov
fimuls
addr16
call
push
push
adc
lea
cld
ficompl
clc
add
mov
rolb
fists
sub
or
mov
lcall
adc
inc
mov
push
imul
adc
inc
faddp
loop
fsts
js
icebp
sahf
mov
popa
mov
lret
ja
std
cmpsl
sbb
mov
aas
dec
imul
stc
out
cmpsl
and
add
xchg
rcrl
mov
rcll
sahf
aaa
fcoml
add
mov
add
call
loop
dec
mov
dec
repz
mov
imul
jmp
sub
or
jg
int
movsb
push
xchg
jp
mov
inc
sbb
push
dec
adc
pop
lods
ret
icebp
mov
lcall
dec
adc
mov
lret
push
test
sbb
mov
clc
in
or
cmp
cmpsb
and
insb
pop
inc
cmp
ss
orl
cs
sub
das
and
flds
jb
push
cmp
push
pop
pop
bound
pop
data16
sub
repz
sub
adc
out
dec
pop
mov
scas
push
ss
adc
mov
dec
push
jbe
sbb
ja
and
mov
mov
add
test
imul
lea
mov
cwtl
sbb
mov
and
es
lock
stc
lcall
push
icebp
or
sbb
loopne
in
cmp
inc
jno
mov
mov
xchg
vpunpcklbw
sbb
daa
xlat
sahf
pop
shrb
add
cmpsl
fnstenv
sub
daa
aaa
add
daa
fdivr
decb
ds
and
xchg
xlat
and
icebp
mov
add
push
in
movsl
dec
loope
mov
jns
sub
je
mov
mov
out
mov
and
mov
inc
mov
inc
inc
bound
mov
push
movsl
sbb
loopne
adc
or
popa
adc
jne
xchg
pop
out
lret
cmp
lret
rcrb
test
int
cltd
stos
mov
push
jbe
loopne
inc
or
lea
xchg
push
jno
cmp
cs
in
xchg
orl
jmp
imul
or
and
cmp
data16
divb
pop
ss
or
ljmp
pop
in
push
mov
jo
sbb
dec
inc
test
push
jae
into
pop
int
movsb
sahf
in
xlat
mov
xchg
movsl
pop
and
inc
push
jle
sub
mov
sar
fsts
add
nop
lock
cwtl
cmp
gs
in
cwtl
aas
push
test
test
outsl
lcall
out
repz
test
cltd
arpl
sub
cli
add
sbb
stc
daa
in
add
popf
and
mov
imul
mov
cmp
pop
fcoms
jmp
xor
lret
jmp
popa
xchg
into
je
clc
movb
addb
aad
mov
in
fistl
inc
cmp
lods
push
mov
jle
rcll
jp
push
or
cwtl
and
and
jg
sub
push
dec
je
xchg
out
repz
cmp
lea
jb
pushf
xchg
out
lret
push
es
js
jbe
test
mov
push
cmp
js
sahf
push
mov
sub
jae
mov
jp
mov
pop
out
pop
mov
xor
scas
push
mov
and
pusha
cmpsb
icebp
iret
cmp
lea
inc
push
fistps
mov
or
sub
scas
iret
int3
js
inc
es
nop
pusha
in
cmpb
popa
aad
enter
call
loopne
leave
out
cmpsl
jp
jge,pn
mov
sub
xor
cwtl
xchg
push
and
sarb
movsb
adc
dec
shll
adc
push
mov
push
mov
or
xor
add
ret
dec
arpl
sahf
lods
pop
sar
mov
dec
jnp
push
pop
jns
adc
jae
mov
push
repnz
pop
or
sahf
imul
test
loope
xchg
and
sahf
pop
mov
cmp
es
mov
ja
inc
push
mov
imul
cltd
push
lcall
push
into
lahf
fisubrl
add
mov
mov
test
mov
push
inc
push
arpl
out
outsb
jecxz
cmp
mov
fwait
adc
jb
in
or
repz
dec
mov
pop
pop
les
xchg
adc
scas
sahf
pop
pop
mov
push
mov
mov
les
or
sti
mov
jnp
and
sub
lret
pusha
lods
sub
mov
xchg
lods
push
jmp
cltd
xchg
push
adc
inc
mov
pop
mov
cmp
ja
data16
inc
clc
out
lret
aad
loope
clc
std
rcl
mov
cmc
push
or
shrl
hlt
fsubrl
jno
cmp
pop
dec
daa
insb
mull
sbb
mov
add
and
and
in
out
push
movsb
and
sub
push
mov
js
aad
inc
popa
jns
lds
pop
and
mov
das
test
rcr
loope
adc
test
mov
and
jg
xchg
mov
mov
js
negl
stos
into
inc
fstps
fwait
xor
mov
jb
jbe
sar
mov
push
mov
movsl
aad
stc
jae
cltd
jmp
ficoms
test
inc
add
mov
mov
jmp
mov
sbb
xor
push
xchg
push
push
addr16
inc
push
stos
mov
jno
lcall
pop
mov
xor
aaa
mov
xchg
test
loopne
stos
add
loop
movsb
enter
jmp
pushf
cmp
lret
sub
nop
sahf
inc
mov
and
sub
jbe
adc
fcomi
daa
fildl
jg
inc
and
scas
xor
enter
and
leave
mov
aad
or
cmp
sub
idivl
das
pushf
xchg
mov
cmp
sti
mov
mov
ret
push
es
add
jmp
pop
dec
data16
xlat
jmp
pop
cwtl
xchg
xchg
outsb
fistl
hlt
cmp
je
mov
dec
test
sarb
fcmovbe
stos
push
test
jmp
pop
mov
push
cwtl
add
mov
fcmovnb
cmp
pop
mov
lock
cmp
dec
aam
addr16
lcall
sti
daa
inc
mov
mov
jns
mov
sar
or
movsb
pop
js
sti
add
xlat
aad
jg
inc
and
sbb
je
aad
aaa
inc
nop
hlt
shlb
movsb
mov
lret
sub
sub
push
adc
shlb
xchg
adc
mov
mov
inc
leave
fwait
pop
or
sbb
sbb
hlt
inc
mov
clc
push
fidivs
sbb
jns,pn
pop
ss
je
push
or
shll
cmpsl
push
lret
lea
pop
outsb
mov
dec
dec
dec
in
daa
icebp
filds
adc
cmpsb
lcall
mov
test
fwait
dec
and
jno
sub
cmp
imul
sbb
inc
rolb
cmp
jbe
adc
fyl2x
xor
rcll
mov
lret
mov
scas
jo
nop
rcrb
ja
int
sbb
imul
xlat
sub
inc
in
das
movsb
or
jle
sar
jnp
negl
arpl
insb
jp
mov
mov
pop
jg
push
das
and
sbb
mov
mov
aam
lcall
xchg
fdivl
nop
inc
jb
push
fildl
sbb
mov
sub
push
jecxz
enter
cmp
mov
sbb
or
loop
push
mov
outsl
push
ret
cmp
add
out
jge
pop
cmpsl
mov
test
imul
or
adc
ss
js
shl
jmp
cmp
ficoml
dec
cmp
mov
das
ffree
ret
pop
insb
arpl
jl
cmp
lods
mov
das
rolb
inc
ds
mov
dec
inc
jne
popa
xchg
lret
lock
mov
testb
data16
jnp
psubusw
adc
incb
push
fdivl
dec
pop
cmc
mov
std
icebp
xchg
push
gs
les
add
lahf
jp
or
xor
dec
hlt
jmp
insb
sub
dec
popa
fnstsw
jno
in
lods
scas
cmp
sahf
dec
adc
pop
imul
in
push
movsl
push
test
push
mulb
or
test
mov
decb
mul
repz
push
dec
xor
cltd
adc
enter
sub
push
and
lods
pop
sub
mov
xlat
mov
dec
out
and
xor
lods
xorb
pop
sahf
movb
sub
lods
sbb
xor
xor
test
test
mov
cmpb
pop
mov
aaa
push
ret
fisubrs
test
fisubs
shll
xchg
fwait
insb
inc
mov
insb
ds
add
jb
sahf
add
scas
lock
sbb
int3
stc
xor
pop
scas
mov
fldl
mov
popf
ret
jns
push
flds
and
add
xchg
dec
aam
fdivs
mov
xchg
test
jne
inc
pop
decb
les
dec
std
add
add
dec
sub
sub
insl
cmpb
outsl
push
repnz
lods
in
jecxz
ficomps
arpl
jae
test
mov
testb
pop
je
cmp
ljmp
dec
mov
ret
xlat
push
sbb
xchg
fxam
pop
jg
insb
scas
jae
dec
mov
cmp
ret
mov
aam
push
xchg
fwait
push
jne
fwait
popa
cmp
mov
rol
int3
dec
push
jo
inc
cmp
and
mov
filds
in
add
push
ljmp
or
loopne
in
insl
scas
jae
jl
cmp
sti
mov
in
cwtl
movsl
push
mov
sahf
or
stos
xor
mov
xor
leave
mov
mov
mov
mov
pop
das
push
cmp
icebp
xor
cmp
sarl
or
popf
adc
dec
inc
rclb
cwtl
in
imul
xor
in
push
pop
icebp
ljmp
pop
cmc
xlat
in
aaa
adc
orl
ret
mov
push
add
add
add
add
je
insb
add
popa
add
add
add
outsl
add
jb
add
add
jb
popa
add
add
add
add
add
jns
add
jns
jne
jns
jne
add
add
add
data16
add
jne
add
inc
insb
insb
popa
push
bound
add
add
imul
popa
add
add
add
add
je
add
data16
add
push
add
add
outsb
add
je
add
ja
imul
add
outsl
add
add
imul
add
add
add
jae
add
popa
jb
add
insb
popa
push
jns
add
jb
add
outsb
add
add
je
gs
ja
je
add
bound
insb
add
add
insb
insb
add
add
ja
outsb
add
add
jo
outsl
jb
add
add
popa
outsb
add
add
imul
add
jb
add
jns
add
add
add
je
imul
add
je
add
jb
popa
fs
arpl
jb
je
imul
add
popa
add
outsb
add
je
add
add
outsl
push
gs
add
add
jae
inc
add
add
push
add
add
outsb
outsl
jne
