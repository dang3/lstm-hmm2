push
mov
and
add
sub
push
push
push
mov
call
xor
test
pop
push
push
push
je
mov
call
jmp
mov
call
push
xor
pop
movl
lea
rep
lea
push
mov
call
cmp
jne
cmpl
jae
movzwl
test
jne
push
pushl
pushl
call
jmp
push
push
push
call
ret
xor
push
add
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
andl
mov
mov
add
mov
add
add
mov
push
lea
push
mov
mov
mov
mov
rep
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
andl
push
call
mov
jmp
mov
movzwl
imul
add
mov
add
cmpb
jne
testl
je
push
push
mov
mov
xor
xor
mov
and
mov
pop
pop
mov
leave
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
sub
sub
push
push
xor
cmp
push
je
mov
jmp
push
mov
call
cmp
mov
je
cmpl
jne
lea
call
push
push
pushl
mov
push
call
mov
cmp
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
push
mov
call
pop
pushl
add
push
push
call
mov
test
mov
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
sub
test
add
mov
mov
mov
add
addl
subl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
subl
addl
push
pop
rep
mov
add
add
sub
mov
movzwl
lea
test
cmp
jb
push
push
pushl
mov
call
mov
mov
mov
push
pushl
add
pushl
pushl
call
pop
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
add
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
sub
cmp
sub
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
test
mov
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
push
push
pushl
mov
push
call
mov
push
pushl
call
cmp
mov
mov
jne
cmp
jne
push
push
push
mov
call
xor
push
push
pushl
call
mov
pop
pop
pop
pop
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
mov
mov
mov
sub
add
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
mov
add
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
add
mov
cmp
movzwl
push
lea
mov
jbe
lea
mov
xor
test
je
mov
and
neg
sbb
and
add
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
add
add
cmp
jb
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
xor
mov
mov
scas
je
sub
jmp
mov
mov
pop
leave
ret
push
mov
sub
add
lea
push
mov
mov
mov
mov
rep
push
push
pushl
mov
push
call
test
mov
je
push
push
call
mov
movzbl
lea
cmpb
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
lods
mov
add
test
sub
xor
add
sub
stos
cmp
add
mov
sub
add
rol
push
add
pop
jne
mov
mov
mov
movzbl
imul
xor
push
add
pop
push
add
pop
jne
cmp
jne
mov
mov
mov
rep
push
push
pushl
mov
call
xor
pop
push
add
pop
pop
pop
leave
ret
push
mov
sub
sub
push
push
xor
mov
push
push
pushl
mov
push
call
test
mov
je
push
add
pop
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
dec
jne
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
and
add
push
add
insl
push
add
push
jo
jbe
xorl
popf
sub
push
add
jbe
add
arpl
fs
inc
xchg
ret
mov
dec
imul
add
lret
lret
and
and
lods
jp
mov
enter
push
clc
fcomip
inc
into
mov
scas
pop
test
mov
pop
push
test
iret
push
shr
or
push
sbb
and
aad
pop
jno
jge
out
mov
push
ja
lcall
lds
jne
lret
lods
push
mov
call
imull
inc
pop
les
pop
hlt
pushf
outsl
mov
xchg
dec
dec
je
cmp
mov
dec
shll
sub
jno
mov
sub
mov
sbb
mov
pop
cmp
das
jo
cmpsl
mov
clc
adc
loop
push
gs
das
xor
rol
push
xchg
xor
shll
stos
pop
inc
subl
hlt
jno
ror
dec
lcall
test
les
dec
mov
test
movsb
stos
mov
and
sub
test
outsl
aas
call
std
dec
pop
adc
xor
arpl
lret
add
int
add
bound
mov
dec
push
scas
jo
adc
cmp
inc
sbb
imul
mov
pusha
lcall
jmp
push
xor
sahf
adc
or
sbb
jo
sarb
xchg
jo
fs
push
ss
int3
pushf
shll
sarb
movsl
outsb
jle
ds
mov
lea
leave
cmpsb
bound
fmull
divl
lahf
jecxz
cmp
in
sub
sbb
inc
stc
dec
loope
sbb
data16
ficomps
pop
sbb
cmp
mov
lods
fmulp
repnz
cmp
imul
cmpsb
xchg
fisubl
inc
ljmp
icebp
js
mov
adc
sub
dec
outsl
dec
je
lcall
enter
jmp
sub
imul
xchg
icebp
mov
xchg
in
fisubrs
add
and
cmp
xor
jp
cmc
lods
cmc
push
dec
lahf
lret
add
cmp
fldl
pop
pop
xchg
icebp
lahf
nop
mov
push
test
addl
mov
imul
xor
dec
lods
aaa
dec
mov
or
bound
jecxz
fstl
sub
mov
aad
cmpsb
mov
outsb
jnp
cmc
adc
ret
pop
mov
loopne
mov
pop
pop
pop
aad
dec
adc
mov
jmp
fwait
jle
add
pusha
mov
dec
jl
mov
outsb
push
xchg
pop
xchg
js
rcrb
lahf
into
xchg
xor
push
lret
iret
shr
xchg
push
jns
insl
mov
and
mov
lds
xchg
sti
in
push
pop
test
scas
stc
adc
jle
aaa
mov
mov
out
mov
lock
call
push
sbb
dec
int
imul
test
popf
push
lds
mov
or
mov
cmpsb
mov
fstps
cwtl
shlb
inc
inc
cmp
mov
inc
or
jo
jmp
loope
ljmp
adc
fmuls
mov
adc
aaa
rcrl
pop
sub
mov
int3
lcall
dec
add
lret
sbbl
xor
cmp
cltd
orb
aam
fucom
jno
mov
inc
xchg
cmpsl
sub
cmp
loopne
pop
clc
addr16
jnp
imul
mov
dec
pop
or
xchg
test
sub
or
test
pop
jb
out
aam
jno
cltd
leave
mov
imul
fstps
add
fcoms
adc
gs
xlat
stos
xlat
mov
daa
lea
push
dec
inc
cmpsb
stos
lret
mov
xchg
xor
cmp
icebp
aaa
int
out
jl
jecxz
push
pop
mov
sub
mov
fildll
inc
inc
cmpsl
notb
jb
mov
sbb
pushf
push
sbb
mov
mov
inc
adcb
pop
push
push
pushf
and
and
out
loop
scas
xchg
out
das
jmp
add
stos
xor
lds
into
jb
sbb
out
ficoms
and
fisttps
dec
adc
pop
xor
sbb
mov
lahf
dec
jle
jmpw
fcoms
jns
add
sbb
and
mov
sub
and
cmp
xorb
or
add
loop
sbb
sarb
aaa
or
mov
iret
fisttpll
int3
mov
xor
mov
cltd
imul
xchg
movsb
push
or
pop
fidivrl
pop
es
or
in
into
xchg
add
mov
inc
aam
inc
les
sbb
push
mov
dec
rorb
add
pop
pushf
mov
rclb
inc
data16
icebp
aad
fisttpll
or
cmp
fxch
xor
mov
out
pop
mov
jecxz
or
fbstp
out
jl
dec
sub
daa
jl
hlt
insb
mov
das
jo
xor
dec
arpl
pop
jge
or
add
jns
jbe
mov
lods
push
ljmp
inc
enter
push
and
lret
lret
repnz
mov
pop
pop
xchg
addb
pop
xchg
cmp
dec
sbb
push
hlt
mov
shr
insb
daa
loopne
subl
jmp
adc
push
xchg
mov
sub
xchg
sbb
outsb
push
cmp
into
xchg
mov
push
into
and
bound
fists
repnz
or
cmp
insl
xchg
aaa
rcrb
mov
pop
shlb
inc
jecxz
pop
pop
into
xchg
test
lods
mov
push
sbb
lea
les
xor
scas
adc
jb
push
push
or
push
push
mov
mov
dec
dec
adcl
out
mov
push
pop
popf
jge
sub
loopne
fidivrs
mov
push
mov
popf
jle
mov
xchg
mov
outsl
iret
cwtl
mov
addl
adc
or
gs
cmpsb
push
pop
jg
sbb
mov
outsl
dec
pop
or
jge
cmp
sti
mov
mov
jne
dec
lds
loopne
or
inc
push
mov
outsl
pop
loopne
add
xor
push
stos
jge
dec
add
ljmp
insb
sub
into
imul
sbb
cmpb
cli
inc
int3
shll
dec
or
in
rolb
and
or
xchg
divl
sbb
xchg
mov
pop
ret
ljmp
in
adc
sbb
xchg
ljmp
xor
insl
dec
ficoms
pop
push
lock
scas
ret
ja
and
dec
xor
aam
fimuls
sub
ret
loope
into
sbb
lock
mov
int3
mov
cli
pop
scas
fildll
mov
leave
hlt
movsl
loopne
stos
movsb
jbe
jmp
outsl
mov
scas
and
or
out
mov
sbb
cmp
sub
jge
dec
cltd
push
push
inc
ljmp
ljmp
sub
push
and
in
ret
mov
clc
xchg
jne
push
cld
rclb
mov
push
in
orl
scas
and
adc
roll
push
or
jns
out
lret
hlt
jnp
add
clc
push
inc
imul
stos
insb
mov
jbe
dec
jmp
mov
into
mov
mov
jns
ret
and
movsb
inc
cmp
inc
testb
inc
hlt
fcomps
xor
pop
xchg
pop
mov
mov
loope
or
inc
subb
icebp
lahf
push
inc
scas
fistpl
fucomip
js
fwait
stos
mov
mov
mov
cld
mov
pop
mov
mov
ljmp
sbb
lea
ret
jb
lret
add
imul
mov
or
idiv
push
loop
pop
xchg
cltd
add
arpl
scas
lods
loop
xchg
insb
shll
mov
push
mov
cwtl
sub
or
add
mov
fld
mov
pop
add
dec
movsl
xlat
mov
int
clc
cmpsl
sub
insb
dec
push
cli
fcomps
mov
ds
push
test
sbb
sbb
xchg
test
ja
negl
push
sbb
ret
push
push
pop
js
pop
hlt
adc
pop
push
lret
cli
cmovs
stc
cli
dec
pop
cwtl
aam
sbb
xchg
xor
imul
test
add
aam
leave
lret
int
je
dec
add
aad
shll
pusha
jo
imull
mov
aas
pop
cmp
inc
inc
repz
cltd
out
sub
jno
call
xor
xor
out
scas
push
jle
or
or
xchg
call
cmp
loope
das
das
fists
jno
mov
jg
adc
je
or
mov
mov
mov
sub
dec
lods
cmp
cmp
insb
add
mov
call
divb
aas
repz
das
ret
je
iret
daa
arpl
pop
sub
and
mov
es
mov
xor
mov
inc
adc
and
vpaddsw
push
cmp
sub
jns
in
push
cmc
and
and
xor
cmc
cld
xchg
mov
mov
orl
rcrb
das
nop
sub
push
nop
sub
adc
call
push
ficoml
or
dec
push
mov
popa
ret
loop
cmp
mov
mov
inc
daa
sbb
das
ja
mov
push
adc
repz
ja
lret
xchg
jl
jb
cmc
push
dec
push
pop
test
or
repz
je
mov
lods
sbb
push
pusha
xor
rorb
int
xchg
fisttps
negl
adc
sub
xor
negl
or
ljmp
adc
fs
es
das
gs
xchg
orl
or
pushf
xchg
out
inc
mov
hlt
add
mov
es
xor
stc
ret
xor
movsl
das
lcall
xor
or
adc
mov
sbb
push
rolb
outsl
lock
int3
call
in
jle
mov
ds
pcmpeqb
pop
sub
jmp
xchg
mov
pop
inc
mov
int
idivb
in
sub
cmpsb
mov
addr16
pop
scas
mov
add
jp
mov
push
scas
xor
rorl
push
pop
add
lret
or
mov
mov
mov
addr16
push
dec
out
in
dec
push
hlt
push
js
pusha
dec
test
movl
orl
add
or
or
lahf
fs
jne
xor
call
fsubs
xchg
sub
in
or
xchg
out
and
xor
bnd
sub
bound
std
xor
sub
push
loop
cltd
or
adc
inc
push
dec
cmp
mov
mov
fdivl
mov
sub
pop
call
cmp
mov
sbb
sub
cld
mov
xchg
jno
sbb
sbb
sbb
jns
or
shll
outsb
dec
xchg
addr16
jmp
js
lcall
xchg
mov
push
stos
sahf
sbb
mov
adc
pop
arpl
dec
ljmpw
or
dec
daa
sub
sbb
shll
sbb
gs
inc
sarb
hlt
push
fldl
stc
or
data16
lods
lds
mov
xchg
mov
mov
lods
and
es
jno
adc
stc
add
incb
lcall
jp
cmpsl
in
xchg
je
bound
xchg
int3
mov
xchg
aam
fiadds
into
das
add
mov
subb
mov
test
cmp
pop
sub
or
dec
loopne
sbb
push
sar
loope
push
mov
xor
sub
sahf
test
cwtl
xchg
push
rol
outsb
test
dec
mov
cwtl
add
xor
or
rcl
leave
sbb
pop
dec
jne
add
das
and
shlb
fdiv
sbb
jbe
and
cmp
mov
out
icebp
xlat
add
not
sub
push
aad
out
in
es
mov
in
popa
daa
ficoml
ret
shl
stc
lea
shll
sbb
cwtl
mov
js
and
dec
into
lods
or
mov
sti
lret
xchg
arpl
stc
enter
pusha
add
xchg
or
pop
in
sarb
pushf
imul
imul
fstpt
movsb
xchg
push
imul
fucomp
jmp
xor
dec
jp
in
ds
adc
inc
or
repz
into
pop
das
fidivrl
in
push
xorb
int
mov
aaa
xor
insl
addr16
ds
stc
push
mov
test
add
xchg
ror
dec
out
jle
mov
pusha
mov
mov
enter
push
adc
shlb
adc
xor
inc
mov
and
adc
jmp
xor
jnp
outsl
add
out
adc
jo
sbb
jl
sbb
mov
testl
inc
nop
or
aas
jmp
jne
adc
push
xchg
ja
mov
in
repnz
out
sbb
or
pop
add
out
loope
stos
daa
sbb
fs
add
inc
nopl
inc
in
daa
and
test
jae
rolb
hlt
lock
xchg
push
loop
jecxz
out
out
mov
adc
pusha
mov
sahf
adc
push
aas
xchg
mov
dec
and
xchg
enter
or
shll
lret
popa
insl
or
inc
cwtl
sbb
rcrl
push
fwait
sahf
or
and
mov
andl
stos
loop
sbb
rcr
dec
push
xchg
or
adc
imul
mov
addr16
stc
xlat
inc
loopne
fists
xchg
dec
push
mov
pusha
adc
in
xor
jo
mov
mov
adc
fimuls
ret
lods
insl
mov
in
and
dec
mov
jmp
in
pop
xchg
mov
pop
addr16
ret
fs
xor
push
lea
mov
hlt
pop
xor
les
mov
cmc
sbb
jmp
jnp
jbe
adc
sahf
mov
jmp
cwtl
je
adc
mov
sub
fmull
mov
in
jp
adc
add
jb
pop
mov
cmp
xor
and
aas
and
mov
cmp
loop
loop
and
mov
mov
fcompl
adc
push
and
aad
push
xor
lods
mov
scas
rcl
xor
push
lods
stos
and
idivl
outsb
stc
mov
push
lret
add
pop
sarb
cmp
sahf
inc
notl
inc
ret
fs
xchg
push
movsl
cwtl
popf
ljmp
xor
add
aaa
xchg
scas
pop
and
pop
push
mov
mov
int
pop
cmp
leave
notb
pop
mov
pop
cmpsb
push
mov
call
xor
push
pop
or
mov
out
or
add
and
jecxz
dec
jle
and
sysret
push
cmp
movsl
lret
cmp
test
sbb
aad
and
in
cmc
mov
mov
enter
or
iret
jl
cltd
call
add
rorl
ljmp
dec
and
in
mov
lods
xchg
mov
xorb
dec
sbb
ss
lahf
repnz
dec
inc
cltd
icebp
cmc
into
fiaddl
dec
loope
ss
inc
add
add
adc
inc
ds
sub
inc
inc
cmpsb
lods
js
pusha
test
insl
out
movsb
cmp
mov
loope
mov
mov
push
aaa
and
enter
dec
xor
lea
cmp
cltd
sarb
lock
mull
mov
sub
xchg
fcomp
inc
repnz
scas
add
into
fs
mov
add
dec
push
or
outsb
clc
pop
inc
imul
pop
push
and
adc
push
cmp
stc
loop
icebp
xor
loope
out
aam
fsubrs
add
adc
scas
jle
jae
lods
out
sub
and
xchg
mov
ret
push
pop
sbbw
or
mov
or
mov
pop
push
mov
jl
fsubrs
and
fmuls
and
xchg
xchg
mov
gs
pop
adc
add
push
fadd
inc
pusha
mov
dec
adc
dec
fwait
roll
mov
mov
dec
test
jmp
mov
leave
xchg
leave
mov
and
mov
xchg
sub
push
test
xchg
loop
popf
cltd
xchg
push
repz
aam
in
out
add
rorl
or
movsl
sub
popf
lea
fmull
and
nop
dec
xor
pop
das
in
int
xchg
and
xlat
cmpsb
and
adcl
push
inc
mov
icebp
pop
push
clc
mov
jno
adc
push
movsl
jb
dec
sarb
stos
out
mov
inc
sbb
lret
outsl
testb
push
out
iret
fiadds
arpl
ds
mov
xchg
sbb
cmp
imul
and
mov
rorb
paddq
lahf
xlat
sti
ss
fadds
mov
idivb
or
rcr
mov
movsl
lea
arpl
mov
cwtl
out
mov
mov
movb
outsb
adc
or
fisttpll
cltd
into
imull
push
push
addr16
push
push
jmp
negb
xchg
jb
or
and
outsb
rcrl
iret
movsl
fdivs
addl
in
sbb
xchg
sub
andl
pop
jne
pop
cmp
das
mov
fwait
adc
inc
lock
push
insl
std
sbb
insb
mov
push
inc
xor
sbb
jl
mov
sahf
dec
lret
cmc
in
pop
cli
adc
decl
and
aas
outsb
aad
pop
es
mov
fs
push
push
lret
xor
cmp
push
lret
js
xor
pusha
mov
fisubs
test
sub
or
fcmovne
sbbb
push
sbb
pop
in
pop
or
dec
mov
or
or
cld
adc
int
adc
pop
imul
in
gs
in
ljmp
push
push
sbb
jmp
in
movsb
mov
xchg
das
add
mov
push
int3
lret
jecxz
jp
sbbl
jp
sarl
sbb
or
cli
hlt
adcl
lcall
jns
mov
shlb
pusha
push
push
push
cmpsb
dec
add
cmp
jo
std
cmp
aam
psllq
pop
jle
or
or
loop
or
jmp
jnp
dec
mov
adcl
leave
fistpl
mov
cmpsb
sub
mov
jnp
mov
fisubl
js
mov
scas
jns
insl
xchg
cmp
pop
pop
int
int3
stos
test
pushf
push
lcall
mov
imulb
mov
clc
call
fs
inc
fstl
sti
lock
mov
mov
fisttpl
pop
es
leave
and
lea
mov
cs
sub
inc
loope,pt
push
mov
in
out
push
in
mov
hlt
inc
xchg
mov
movb
stos
inc
repz
cmpsl
mov
lcall
cmp
jae
cmp
add
add
cwtl
ss
adc
stos
add
push
dec
gs
jge
cmp
mov
ret
xchg
outsl
jo
int3
popa
es
xlat
xor
xchg
and
enter
shlb
sbb
adc
int3
inc
push
adc
in
loope
lahf
lret
push
dec
negl
xchg
rcrb
cmp
int3
xchg
std
xorl
sub
mov
stos
call
jle
and
loope
lock
dec
lcall
adc
pop
aas
cmc
fdivrs
xor
cmc
or
iret
jmp
xchg
fistps
out
sahf
jl
push
mov
sar
js
scas
mov
jle
daa
outsb
data16
pop
mov
cmc
jae
repnz
scas
lea
inc
jnp
dec
xchg
icebp
sub
out
fsub
imul
in
out
xchg
loope
pushf
sti
lret
fists
lcall
js
or
pusha
mov
jns,pn
sbb
sub
in
jecxz
pop
fisubl
mov
std
jge
aaa
lahf
pop
mov
das
pop
jnp
loopne
roll
pop
sbbb
rorl
fmull
sub
loope
xor
pop
jne
fs
dec
or
and
fcomi
movsl
cmpsl
cwtl
sub
dec
push
daa
jg
pop
push
cltd
fwait
insb
xchg
outsl
call
cltd
fistl
loope
mov
pop
cmp
mov
repnz
push
leave
dec
mov
mov
sub
jge
inc
inc
push
addr16
adc
scas
mov
jne
divl
sahf
mov
mov
jb
int
test
xchg
scas
in
xchg
das
xor
mov
mov
push
adc
dec
push
cmp
sahf
xor
test
sub
aad
and
movsl
push
xor
ret
xor
xchg
sbb
arpl
jns
aas
inc
nop
sti
cwtl
dec
gs
sbb
dec
push
mov
push
lret
jmp
jmp
add
fcmovbe
xor
dec
xlat
mov
shll
push
xchg
loopne
adc
xorl
scas
push
sbb
dec
xchg
jbe
jmp
pop
xor
test
jge
mov
sbbb
cwtl
pushf
sbb
mov
ficompl
cld
cmp
pop
enter
and
roll
imul
xchg
and
jae
sub
jge
inc
loope
test
repz
mov
aam
inc
ljmp
cmp
pop
xor
mov
mov
cmp
fldl
xchg
push
jae
stos
outsb
or
fstpt
pop
mov
sub
insb
or
stos
inc
fsub
sbb
mov
xor
push
out
clc
int
mov
ds
xchg
dec
cli
add
mov
cmp
popf
loop
addr16
cmpsb
sbb
inc
xchg
lock
sub
fnstcw
pop
mov
dec
add
inc
or
imull
fld
dec
mov
add
jp
push
sub
fmul
add
gs
jp
cmpsb
test
pop
add
xchg
int3
insb
and
mov
mov
jnp
jle
lock
pop
int3
or
cs
inc
and
stos
iret
mov
popa
mov
movsl
and
jbe
add
pop
xor
dec
ss
lahf
aaa
or
jecxz
jb
dec
in
jo
xchg
sub
fyl2x
cmp
xorb
fwait
pop
dec
push
faddl
xor
or
cmp
dec
test
outsl
fdivl
mov
fistl
xor
xor
movsb
es
xchg
jb
movsl
gs
adc
pushf
popf
pusha
push
mov
in
mov
outsb
sbb
scas
xchg
test
add
push
cmp
ficomps
movsl
in
inc
mov
sub
add
xor
pop
arpl
popl
sub
add
fstp
adc
ds
div
out
lods
adcl
xchg
jmp
lock
inc
lcall
inc
xchg
xchg
mov
xor
loope
cmp
xchg
or
xor
rorl
aam
sti
rolb
shl
mov
in
outsb
mov
inc
push
pop
movsb
push
xor
mov
cmpsb
jg
and
sub
faddl
jl
pop
cmp
xchg
dec
mov
jo
lods
cmp
jb
cmp
pushf
pop
fwait
mov
into
leave
data16
push
shlb
mov
pop
bound
test
lea
or
jecxz
shll
out
jae
dec
dec
push
mov
and
and
fstp
aas
cmp
test
and
or
push
mov
pop
sbb
fs
jo
pushf
mov
xchg
test
js
sahf
cmpsb
shlb
repz
inc
adc
jmp
cmp
push
pusha
dec
jge
push
sbb
inc
xchg
lahf
clc
pop
out
fimull
inc
fiaddl
mov
fadds
push
xchg
and
sbb
fists
loop
jbe
push
jmp
mov
orb
cs
decl
shlb
xorb
popa
push
inc
mov
mov
hlt
and
gs
mov
icebp
push
sbb
cwtl
icebp
data16
int3
jmp
sahf
outsl
push
or
dec
push
xlat
arpl
in
into
or
hlt
inc
pop
sahf
sti
fistpll
gs
and
in
adc
lcall
ficomps
mov
out
and
repnz
adc
fistps
adc
lcall
icebp
push
aaa
fmull
int
stos
int3
mov
pop
das
pop
ljmp
add
pop
cmp
sbbl
rclb
scas
dec
jae
ret
cmp
rcr
jb
pop
jmp
xor
jo
push
data16
fisttpl
sub
mov
rcll
in
xchg
sub
xchg
repnz
jge
dec
cmp
in
jp
sahf
mov
rorb
lea
movsb
sub
icebp
imull
push
push
imul
mov
loopne
loop
jo
sti
clc
add
jns
cltd
shrl
cltd
push
and
je
jnp
pop
jg
mov
fisubrl
dec
jl
jle
mov
popa
xchg
mov
pusha
push
aam
movsb
daa
pop
pusha
push
scas
fldl
xor
cltd
fwait
in
and
outsb
das
cli
adc
mov
inc
loop
pop
inc
add
and
dec
adc
addr16
mov
xor
adc
in
mov
pop
stos
mov
lret
roll
fstps
mov
les
fwait
mov
jb
mov
inc
push
test
dec
jo
fildll
arpl
add
pop
sti
lods
in
sbb
push
jae
popa
aad
out
flds
out
adc
rolb
jge
test
xor
mov
and
xchg
inc
pushf
lds
icebp
push
pop
or
outsb
div
jns
mov
inc
imul
fwait
movsb
ss
pusha
in
test
pop
push
insl
outsb
lea
movzbl
loop
and
cwtl
mov
pop
push
add
jmp
popf
and
dec
or
into
test
push
fnstenv
push
dec
xchg
add
or
nop
dec
daa
jl
leave
pop
jne
aad
or
cmpsl
test
ret
repz
dec
inc
ror
sbb
xchg
push
mov
sti
mov
aaa
push
sbb
inc
push
lret
xor
mov
push
add
mov
repnz
inc
fsubrl
mov
insl
frstor
movsb
adc
lea
jmp
in
mov
loop
add
cmp
scas
dec
leave
dec
mov
out
sub
inc
cmp
inc
in
or
int3
popa
call
and
or
sub
fisubs
shll
fistpl
lods
lcall
sbb
std
pop
mov
pop
or
lods
xor
jge
fstps
loop
jns
scas
sub
dec
ret
inc
cmpsb
mov
je
shrb
sub
mov
xor
pusha
mov
pop
mov
fcoml
mov
lock
in
subl
pop
push
add
pusha
das
sbb
mov
test
repz
fdivs
ret
mov
xor
pop
das
sbb
not
jp
dec
push
dec
dec
push
sbb
xor
js
stos
xor
test
addr16
mov
aam
aam
aam
lahf
dec
mov
js
mov
sub
inc
lahf
pop
lds
inc
and
fmuls
cmp
xor
inc
sti
aam
test
insl
iret
push
sti
or
into
mov
push
or
jl
fs
mov
incl
out
stc
add
repz
sbb
enter
pop
out
arpl
fldt
sub
aas
in
das
jnp
pop
mov
xchg
adc
popa
mov
xchg
cmpsl
inc
and
into
xor
jns
xor
cmp
out
pop
lcall
cmp
lds
sub
inc
or
ret
and
xlat
xor
jle
sub
jge
pusha
push
pop
rcl
cmpsl
rolb
inc
lret
dec
pop
mov
test
movsb
or
jb
enter
psubsb
lods
pop
cwtl
lret
jnp
nop
in
fsubl
icebp
bswap
xor
scas
mov
mov
or
xor
sbb
xor
mov
push
xchg
jo
popl
sar
cltd
sarb
xchg
mov
push
cmpsb
add
inc
shrl
inc
inc
cmpsb
add
ret
and
insl
pop
pusha
arpl
aas
adc
mov
aad
insb
imul
adc
or
rcll
shll
iret
mov
pop
add
cmp
addr16
inc
push
and
cwtl
mov
mov
leave
ret
insl
jp
lods
mov
outsl
bswap
mov
inc
daa
mov
pop
jae
mov
and
stos
fisttpll
inc
cmp
ret
add
push
fisttps
mov
add
in
xchg
lods
daa
loop
dec
sti
imul
scas
sub
add
push
xchg
xlat
mov
cmpl
fwait
leave
cmp
pop
ja,pn
lahf
cmp
jmp
sbb
or
mov
stos
jns
addr16
cmp
sahf
cmp
push
mov
xchg
sub
and
mov
cmp
adc
fsubl
xor
rcrl
lods
sub
cwtl
jmp
xor
fisttpll
sbb
lock
or
mov
lret
push
leave
test
mov
pop
xchg
lock
lock
sub
fimull
stc
andl
into
xchg
adc
inc
mov
or
ds
les
test
push
cmp
mov
mov
std
add
sub
add
pop
cmpsb
call
cld
es
fwait
adc
mov
pusha
xchg
cmp
adc
syscall
out
or
stc
mov
repz
lret
loop
dec
lret
inc
mov
xchg
mov
adc
stos
mov
imul
jb
lods
lcall
aas
add
mov
icebp
sub
fsubrs
jge
mov
clc
sbb
cmp
pop
insb
shl
add
cld
arpl
inc
xor
mov
mov
dec
hlt
sbb
cmpsb
iret
dec
insl
cmp
xor
push
inc
xor
test
stc
and
xchg
divb
stc
js
sbb
stos
movsl
fldcw
jecxz
jp
sub
je
mov
push
test
lock
jns
inc
mov
mov
xor
pop
ficompl
cmc
push
cmc
fucomp
ficomps
cmpsl
pop
je
imul
xchg
xchg
lahf
sahf
push
int3
popa
stc
jecxz
repnz
dec
push
mov
arpl
scas
std
inc
outsb
and
leave
and
jg
rcl
shrl
ret
cs
dec
sbb
stos
xor
adc
filds
push
outsl
les
std
lret
inc
xchg
ds
sbb
daa
jnp
add
negb
mov
xor
add
fs
loope
lret
cvtps2pd
jg
inc
rcrl
lret
pop
xor
push
dec
xchg
ds
mov
int
fsubrl
das
xchg
aam
fscale
jl
cli
jge
mov
or
out
jmp
arpl
adc
out
jg
cmpsb
loopne
xchg
dec
cwtl
push
sbb
pusha
and
ljmp
and
fsub
sub
mov
rorb
ja
push
cltd
out
cmc
loopne
dec
jp
sub
test
and
movsl
pushf
andb
aam
push
or
rorb
mov
sahf
aad
inc
or
out
cmp
gs
cmc
jmp
int3
cltd
out
inc
cmpsb
daa
dec
loopne
add
jcxz
ds
xchg
rorl
add
pop
popa
cs
inc
jae
mov
and
xchg
das
outsl
in
rcrb
jl
inc
je
sub
fdivs
enter
push
push
outsb
dec
and
jae
mov
jns
pop
adc
cmp
sbb
sub
pushf
mov
cmpsl
movsb
idivl
loope
cwtl
shrl
fistps
fdivl
push
jmp
js
cld
xchg
sahf
cmpsb
mov
lea
lods
adc
mov
orb
iret
push
mov
insl
add
aad
je
insl
sub
xor
pop
cld
ja,pn
or
repz
popf
mov
lods
cltd
xlat
push
push
lods
fistps
testl
xor
test
bswap
push
inc
push
xor
sub
or
enter
mov
add
xor
data16
jne
adc
xchg
mov
out
fldl
test
inc
fadds
pop
mov
push
movsb
pop
les
pop
fldcw
loopne
fstpt
add
movsl
cmc
jb
pop
push
xchg
pushf
inc
and
shll
gs
mulb
mov
dec
xlat
lods
or
adc
ret
lret
push
xor
in
dec
ds
adc
or
pop
mov
mov
aam
xchg
rclb
in
xlat
mov
pop
xchg
mov
pop
push
cmp
popf
sub
sahf
sti
xor
or
and
xor
mov
push
push
int3
fwait
push
mov
andb
ljmp
sbb
mov
inc
sbb
and
xor
cmp
adc
mov
add
int
dec
clc
pop
inc
outsb
pop
inc
gs
call
jg
insb
mov
nop
stos
std
inc
inc
cltd
sbb
fsubl
jg
fwait
sub
enter
out
lahf
pop
or
pop
xchg
dec
arpl
mov
je
cmp
in
push
mov
or
mov
xchg
dec
stos
ljmp
lcall
loopne,pt
std
jge
or
adc
and
mov
pop
mov
pop
cmp
mov
cmovp
mov
cs
xchg
add
cmp
dec
xlat
lea
enter
cld
xchg
leave
cmp
repnz
ja
xor
push
xlat
mov
inc
cmp
scas
or
enter
xchg
ljmp
cmp
movsl
cmpsl
leave
adc
aaa
xchg
push
loop
lds
push
sbb
jge
push
xlat
aas
and
sub
xor
aas
xor
dec
xor
add
jmp
js
sbb
cmp
cld
roll
sbb
push
data16
jg
icebp
rolb
dec
dec
adc
icebp
mov
je
and
ds
jge
enter
pop
cmpsb
jns
notl
adc
or
mov
mov
and
xor
adc
jns
mov
push
lods
aam
bound
cmp
cmp
sub
sbb
mov
mov
addr16
iret
xchg
cmp
int3
imul
in
hlt
xchg
lea
mov
mov
inc
sbb
mov
nop
xor
js
bound
sarb
jp
in
lahf
clc
or
cmovno
xchg
stc
mov
cmp
push
mov
fcom
push
or
add
inc
out
or
cli
repz
je
mov
repnz
add
jno
loopne
sbb
mov
in
push
cltd
js
into
scas
fcomps
sbb
out
jge
xchg
leave
test
adc
cltd
push
mov
call
test
and
insb
loopne
je
mov
mov
xchg
push
gs
out
std
mov
repz
lcall
mov
cmc
fisubrl
mov
xor
andb
jmp
pop
mov
out
and
mov
cmc
aaa
test
ret
xchg
xor
xor
shll
add
lret
sti
cmp
mov
fiadds
sub
mov
inc
test
jb
cmpsb
pop
mov
lods
sub
fcmovbe
jne
cmp
enter
mov
inc
outsb
jl
int
jae
xlat
test
cmp
rorl
xchg
jmp
fcompl
pop
push
lods
stos
frstor
jns
cmp
push
mov
push
cmp
jno
and
lea
pusha
inc
add
cld
imul
add
icebp
xchg
lods
mov
add
ds
adc
ja
pop
dec
sbb
sub
flds
xchg
jns
adc
push
mov
ja
inc
push
and
hlt
xor
insl
mov
jne
push
sbb
jb
mov
arpl
pop
outsl
cmc
push
pop
or
sub
fisttpl
inc
cmpsb
mov
jecxz
in
fisubs
dec
dec
or
and
rcrl
push
insl
lods
cwtl
add
sbb
hlt
push
movsl
xchg
ss
cld
cmpsl
fcos
push
pop
test
mov
xchg
mov
pop
stos
cs
jg
loope
imul
jae
sahf
xchg
adc
clc
adc
cld
nop
dec
and
inc
sub
repz
jne
popf
out
outsl
mov
sub
ja
lahf
mov
cmp
rcr
aaa
mov
leave
jp
pushf
jecxz
decl
icebp
push
sub
xchg
ror
cltd
jge
mov
stos
cmp
dec
sub
push
pop
push
mov
dec
cmp
out
add
mov
movq
psraw
gs
lods
das
repz
sub
mov
push
push
repnz
add
shlb
imul
push
imul
icebp
adc
je
cmpl
out
aam
cs
and
flds
mov
movsb
imull
push
push
je
or
jbe
pop
push
fistpl
stos
lcall
aas
jle
mov
mov
aam
mov
jmp
fdivl
push
lahf
cli
push
fsubl
inc
add
fadds
enter
stos
dec
jno
int
push
and
lods
mov
leave
push
repnz
lcall
inc
push
push
fbstp
dec
push
or
xor
jo
xor
xchg
add
vcvtpd2ps
sahf
inc
pop
jno
test
pushf
insl
cmpsl
dec
fadds
mov
loopne
jp
add
xchg
mov
in
sub
adc
aam
push
jns
mov
repnz
cmp
ss
loopne
jp
cmp
inc
push
and
push
xor
in
les
mov
ja
enter
add
jecxz
outsb
fs
push
sbb
fstps
adc
mov
push
ret
test
jo
push
shll
dec
pusha
popa
and
xchg
fistps
mov
cmpsl
push
in
ja
in
adc
add
cltd
hlt
inc
lcall
mov
es
xchg
test
and
sub
jnp
popf
mov
loope
int3
add
idivb
add
popa
mov
fsubrs
xchg
test
pop
dec
cmp
jge
push
push
and
ret
daa
push
out
insb
xor
lds
dec
xchg
loope
xchg
mov
nop
mov
stc
repnz
push
or
push
dec
bound
add
jne
shll
scas
inc
mov
movsl
addr16
xor
jbe
adc
inc
fsubr
dec
mov
mov
xchg
aaa
das
sbb
scas
mov
jo
fimull
sarl
or
imul
jb
sub
cmp
cmp
fldcw
dec
pop
and
sbb
test
dec
out
push
addl
xchg
mov
add
jge
ss
leave
pop
xchg
mov
test
xchg
test
lock
clc
mov
xor
inc
add
pop
shr
cmp
add
mov
push
lret
jge
movsb
push
es
inc
je
testl
sub
mov
add
je
pushf
mov
adc
xchg
xchg
jecxz
andb
jecxz
xchg
inc
jl
jbe
add
sub
mov
mov
push
lds
cmc
push
jmp
pop
lods
mov
ljmp
fwait
cmp
push
xchg
xchg
outsb
sbb
cmp
jl
lcall
ret
shll
dec
outsb
andb
dec
add
jno
mov
mov
pop
xor
popl
inc
jg
mov
mov
dec
popa
jp
pop
fldl
add
or
add
or
rcl
movsb
push
inc
and
bound
pop
push
shrl
out
sub
xor
mov
cmpsl
mov
jo
loope
andb
mov
push
dec
aad
jne
inc
sti
xchg
sahf
push
adc
push
xorb
dec
xchg
inc
pop
cmp
cmp
adc
lahf
mov
push
leave
stc
into
divb
lods
adc
cmp
inc
rcrb
sbb
sbb
mov
movzwl
filds
fdivrs
test
loopne
jnp
mov
fs
cmp
lcall
lret
push
stc
int
pop
jl
aaa
sub
jl
negl
outsb
jb
das
mov
push
and
fs
movups
nop
cmc
xchg
cmpsb
movsb
mov
cli
sbb
sarl
enter
ror
push
scas
in
addr16
adc
lret
mov
aad
push
mov
sbb
xor
inc
xchg
mov
je
xorb
mov
fimuls
dec
mov
sub
inc
popa
cmp
lea
inc
lock
sarl
test
mov
inc
shlb
push
or
aaa
inc
sti
sbb
mov
popa
mov
fcompl
jmp
popf
push
cld
dec
sbb
push
out
pop
inc
les
dec
loopne
sub
or
xchg
push
int3
jg,pt
mov
sub
leave
mov
dec
out
xor
sbbl
jmp
sbb
add
repz
cmp
aad
iret
dec
mov
aas
cwtl
xor
mov
cmp
call
std
mov
xchg
cwtl
push
jg
dec
cs
mov
jp
sub
sub
xchg
pop
fdivrl
mov
sbb
jle
insb
mov
push
push
outsl
fsubrl
cmpsb
push
sbb
nop
sahf
jne
out
mov
in
and
jle
adc
insl
xorl
idivb
icebp
adc
andb
cmp
cmp
sub
fidivs
test
cmpsb
add
mov
and
cld
inc
add
jbe
loopne
and
stos
imulb
mov
fdivrl
scas
adc
dec
lret
gs
or
sbbb
out
dec
sti
sub
mov
mov
lds
out
pusha
fs
jae
loop
lds
pushf
mov
je
jge
dec
stos
cmp
mov
subl
jle
jae
dec
popf
rolb
mov
movsl
inc
lds
pop
lock
clc
les
test
xor
jmp
pop
sahf
cmp
movsl
pop
mov
dec
xor
es
push
mov
push
push
addb
popf
push
push
loop
xor
jbe
pop
inc
sbb
andb
mov
mov
mov
mov
mov
rol
jo
xchg
xchg
sbb
and
pop
mov
stos
fnsave
test
aaa
sub
dec
and
test
repnz
pop
xchg
mov
loope
int
inc
jmp
sahf
inc
idivb
ja
mov
push
mov
or
inc
outsb
sub
enter
or
adc
mov
ljmp
push
out
push
test
push
ljmp
push
les
pop
dec
add
jns
btr
mov
push
push
lea
xchg
popf
scas
and
push
and
jmp
dec
jl
pop
or
mov
xor
fwait
mov
shrb
pop
ret
shrl
pop
dec
pop
ja
sbb
outsb
int
ret
xor
add
sub
xor
imul
dec
xchg
popa
xor
xlat
notb
adc
adc
mov
cltd
adc
inc
push
dec
lea
movsb
mov
ret
dec
adc
lods
out
out
add
into
mov
cmp
or
ja
pop
aaa
insl
cmp
dec
add
xchg
sbb
repnz
lock
mov
cs
enter
xchg
push
movsl
pop
xchg
push
lock
enter
inc
mov
inc
out
jecxz
ljmp
sub
aam
clc
stos
pop
scas
loope
fsub
and
add
dec
add
sahf
cmp
xlat
sbb
push
xchg
mov
fisubs
mov
mov
fdivr
add
xchg
xor
mov
shl
jnp
inc
pop
jne
mov
addr16
push
pushf
dec
aaa
lods
push
ja
mov
adc
inc
outsb
jb
xchg
loope
or
nopl
xchg
sub
cmp
std
stos
fwait
sub
ljmp
and
js
insb
mov
and
sub
test
test
aad
push
sbb
xor
mov
or
dec
pop
xchg
in
and
xchg
cmc
xchg
mov
push
lea
aam
lods
mov
or
add
mov
sahf
pop
out
stos
scas
add
orl
rcrl
jne
sub
push
cmpsl
pop
sbb
in
lcall
mov
stos
mov
fwait
adc
adc
mov
mov
lods
bnd
dec
pop
sub
loopne
inc
repnz
int
sar
cmp
stos
cmpsl
sbb
outsb
ret
cmp
fwait
mov
aam
fldt
gs
out
mov
outsb
cmpsb
xchg
popf
cli
out
aas
arpl
adc
mov
sbb
cmp
and
and
mov
cltd
or
fs
aaa
push
pop
mov
enter
adc
in
xor
dec
sub
into
out
cwtl
js
fstpt
shrl
movsl
shrb
xchg
mov
call
out
mov
xchg
cmp
pop
mov
mov
mov
aas
dec
cmp
fbstp
jl
out
pushf
movsl
push
insb
pop
mov
lcall
mov
mov
or
fucomip
enter
std
push
jecxz
lock
testb
push
ja
sbb
js
ja
mov
lret
pop
mov
addl
mov
pop
sarl
shlb
in
icebp
add
mov
add
fwait
mov
rcrb
enter
cmp
mov
pop
sbbb
cwtl
mov
adc
xchg
push
adc
inc
jnp
pop
sbb
and
and
xchg
outsb
sub
ret
insl
jo
lret
mov
cmp
push
inc
stc
add
jle
cmpsl
aas
sub
sbb
leave
adc
imul
inc
mov
mov
mov
pop
cmp
sbb
adc
aas
pop
cmpsb
int3
push
lock
incb
stc
js
adc
ret
xor
pop
lock
cs
mov
popl
add
pop
fnsave
jns
cwtl
or
popa
jo
dec
les
mov
add
xor
adc
mov
imul
jp
jo
fistpl
xchg
nop
movsl
ss
jge
lcall
xchg
inc
int3
adc
adc
scas
sub
xor
xchg
or
push
xchg
push
fimuls
fdivrs
jl
orb
sbb
pop
jle
mov
jo
aaa
outsb
dec
repnz
in
or
push
je
stos
ja
or
jg
popf
fmull
push
xorb
push
add
clc
daa
jmp
push
mov
lods
bound
jge
xor
add
inc
mov
mov
inc
loope
adc
out
adc
out
add
inc
cmp
adc
faddl
xchg
cwtl
push
mov
int3
addr16
mov
sbb
addl
gs
iret
mov
imul
call
insl
mov
sub
rol
mov
adc
mov
pop
sub
pop
mov
addl
sub
xlat
fstp
movsb
test
cmpsl
pop
pop
and
xchg
dec
jl
or
cmp
jo
adc
mov
pop
sbb
lock
sbb
mov
sbb
xor
insl
shlb
dec
aam
xchg
sub
mov
fwait
push
mov
xchg
push
loope
push
insl
add
sbb
fst
or
repnz
loopne
inc
pop
mov
sbb
adc
lds
mov
cld
nop
pop
adc
adc
jg
pop
out
shrb
dec
pop
inc
out
xor
cwtl
mov
jb
jnp
xchg
test
or
fidivrl
sahf
inc
je
addl
mov
cmp
out
pop
pop
mov
adc
cmp
xchg
lahf
fsubr
and
mov
jno
insl
test
adc
jbe
mov
jno
push
pop
test
push
inc
xor
std
and
jo
mov
mov
push
loopne
jne
and
js
test
cmpsl
push
jne
scas
pop
loope
and
outsl
push
add
jns
mov
xchg
ficoms
inc
or
sahf
sub
add
inc
pop
nop
cmp
stos
in
add
lods
and
xchg
push
mov
pop
jns
insb
sub
add
pop
cmpsb
jno
aam
sbb
mov
int
stc
pop
push
int3
mov
mov
sbb
es
jns
aad
adc
movsb
lds
insl
fistps
xchg
pop
jl
loop
adc
loop
pop
daa
sbb
sbb
push
test
je
fadds
jns
ret
jge,pt
xchg
cli
mov
cmc
sbb
dec
stc
adcb
mov
mov
adc
mov
test
or
clc
inc
rcl
cmc
adc
roll
dec
dec
shll
xor
add
in
fwait
std
scas
push
mov
mov
add
hlt
cli
popa
pop
or
mov
cltd
dec
mov
xlat
bound
ret
cmpsl
and
rorl
lods
repnz
adc
pop
pop
test
mov
or
cmp
pushf
mov
pop
test
pop
mov
or
jmp
fisubrs
xor
xchg
test
cld
data16
sub
xchg
xchg
loop
and
ffree
cmpsb
incl
push
adc
jne
lods
adc
pop
ret
addb
mov
orl
mov
test
pusha
pop
jae
adc
fdiv
dec
and
inc
jg
lret
mov
cld
mov
mov
mov
and
movsl
cmpsl
xchg
fwait
mov
mov
sbbb
inc
ret
xor
mov
fsubrs
xchg
das
xchg
or
loopne
push
sub
lods
and
mov
js
call
cmp
dec
sbb
mov
cmp
outsb
mov
or
test
jns
cmc
pop
mov
dec
mov
mov
pop
cli
or
outsl
aaa
bound
sbb
addr16
outsl
std
xor
shll
mov
sahf
mov
mov
cwtl
cmpsl
outsl
scas
dec
cmp
or
dec
outsl
es
push
outsl
xchg
fcmove
cld
cmp
mov
stos
xor
adc
fsubs
sbb
cmp
mov
into
push
pop
std
in
xchg
fistl
sub
adc
mov
dec
stos
shlb
mov
cmp
fs
sbb
arpl
or
mov
fcmovu
outsb
sbb
ret
pop
mov
out
or
jle
lds
outsl
jno
cmp
inc
xchg
movsb
dec
in
pop
push
inc
icebp
mov
call
mov
les
add
ja
outsl
aam
stos
add
mov
dec
outsb
test
and
pop
jo
sahf
jno
popf
jns
daa
jno
mov
mov
jecxz
pushf
xchg
and
dec
rcl
mov
repz
int3
jmp
pop
int3
sub
enter
in
pushf
pushf
enter
push
sbb
cmpl
push
xchg
fwait
adc
icebp
or
arpl
sbb
jecxz
arpl
dec
and
mov
pop
shl
addr16
lods
in
lea
in
sub
jg
jno
leave
xchg
pop
cmp
stos
cld
mov
lock
loopnew
sub
xor
scas
pop
stos
scas
scas
adc
hlt
cwtl
rol
into
sub
movsl
daa
sti
shll
push
ja
clc
xchg
add
out
mov
les
hlt
test
cmpb
testb
pop
adc
jge
inc
cli
decl
lods
lret
cmp
sbb
fdivrs
lds
adc
imul
mov
cmp
or
or
scas
pop
dec
aam
imul
xor
test
push
pop
push
notl
jo
fs
test
in
pop
sub
dec
xchg
aas
scas
fisubrs
mov
sub
stos
ret
add
dec
push
lods
ss
cmpsb
cmp
mov
add
jae
jge
arpl
push
xor
adc
lods
add
rcll
and
loop
mov
inc
inc
icebp
fildll
lahf
adc
popa
xor
push
in
lea
and
mov
inc
outsb
mov
pop
xor
stos
pop
and
push
xchg
fimuls
out
xchg
pusha
push
lods
adcb
push
test
mov
je,pn
cmp
mov
mov
mov
repnz
movsb
popf
mov
xor
mov
cmpsb
test
loopne
mov
jp
sti
push
push
sub
gs
xor
mov
xor
imul
das
fst
xchg
mov
aas
sti
dec
push
data16
test
nop
jbe
icebp
inc
and
sbb
in
mov
shlb
gs
push
jbe
in
mov
je
push
add
mov
das
jmp
pushf
push
pop
shl
inc
mov
pop
aam
cmp
mov
xor
daa
push
mov
js
pop
cmc
mov
adc
iret
mov
mov
insb
add
xor
movsb
iret
mov
add
movsb
vandps
lock
mov
sub
xchg
rcrl
insl
cmpsl
push
and
fs
cmp
push
jle
sbb
int3
pop
inc
data16
or
or
inc
push
sbb
xor
inc
rolb
fbstp
mov
lret
ja
push
and
clc
lahf
cmpsb
push
adc
ds
pop
xchg
push
in
addb
jmp
jbe
stc
mov
lcall
loopne
dec
popf
stc
loop
loope
xchg
dec
jge
mov
mov
test
lahf
xchg
int
dec
into
fbstp
mov
xchg
or
jb
xchg
inc
adc
sbb
xor
mov
xor
cmp
movsl
fdiv
pop
fiaddl
add
inc
cmpsb
stc
inc
cmp
mov
mov
jb
in
or
outsl
add
out
and
xchg
push
imul
adc
ret
dec
scas
cmp
mov
pop
xchg
push
je
sub
xor
push
movsb
iret
iret
pop
jl
outsl
xchg
adc
inc
inc
pop
and
jmp
cmp
cmpsl
je
inc
or
dec
xor
add
cmp
pop
pop
hlt
mov
xor
adc
call
pop
xchg
dec
and
cmp
pop
jae
xchg
fistpl
jg
arpl
mov
sbb
xchg
sub
cmp
in
test
lods
adc
mov
mov
call
pop
xchg
aam
shrb
addr16
fs
sub
int3
push
or
rorb
cs
int
sti
es
mov
clc
sub
sub
pop
xlat
pusha
testl
fcomi
push
ss
dec
xor
mov
out
cmp
push
outsb
popf
and
xlat
dec
push
lcall
ja
dec
sbb
scas
add
lods
adc
test
stos
daa
ret
incb
lcall
sbb
push
js
fcomp
test
xor
and
cli
stos
inc
ret
add
fld1
xchg
sub
mov
dec
inc
and
pop
daa
jl
jne
insl
adc
mov
mov
les
pop
xor
loopne
leave
inc
sub
sbb
sahf
xchg
pop
adc
outsb
mov
cmp
sbb
sub
jbe
les
fstps
insl
icebp
jae
mov
and
test
mov
shll
push
das
add
sub
jecxz
pop
inc
adc
sbb
test
jns
xor
movsb
cmpsb
push
adc
cmp
int
dec
push
pop
sbb
inc
fstps
jae
or
mov
dec
mov
lock
pop
jp
dec
xchg
push
pop
ja
xorb
ljmp
imul
arpl
add
jae
arpl
int
add
sub
dec
xor
repz
mov
xchg
jg
in
xchg
out
leave
ret
or
int
rolb
jg
sub
enter
jns
pop
pop
mov
mov
dec
test
imull
sub
cmp
push
into
das
mov
cld
addr16
push
addr16
movsl
imul
repz
aad
adc
xchg
imul
jmp
lahf
mov
mov
cmp
pop
sbb
dec
dec
loope
push
add
xchg
imul
push
mov
ret
fwait
ret
mov
es
and
mulb
out
adc
mov
into
mov
push
lods
fldcw
sbb
sbb
adc
cmp
push
cltd
sbb
or
xor
cmpb
jg
fldcw
imul
fistps
or
fisttps
mov
or
stos
in
dec
bnd
clc
outsl
mov
iret
fadd
mov
jge
jbe
and
ja
pop
testb
out
jb
loopne
je
jo
push
xchg
or
sti
out
in
cltd
pop
push
enter
mov
xchg
push
add
mov
fwait
imul
xchg
cld
ss
pushf
imul
ds
imul
pop
dec
cmp
test
or
fnstsw
dec
xchg
outsb
dec
stos
xchg
bnd
xchg
adc
in
out
adc
pushf
mov
dec
clc
popf
cmp
jp
ljmp
lret
dec
cs
xor
movsl
ss
push
jbe
mov
flds
xchg
mov
mov
push
cmp
sbb
jb
cmp
jge
xor
xchg
fcmove
fyl2x
mov
pop
xlat
xchg
pop
ds
mov
inc
jns
popf
and
idiv
clc
cwtl
add
scas
add
push
mov
les
sbb
xchg
and
ja
jecxz
enter
sbbl
incb
mov
push
jle
cmpsb
test
push
insb
jecxz
sbb
jne
insb
lods
enter
das
push
and
in
into
xchg
jg
jg
xchg
cld
cli
addb
add
adc
xor
push
add
fdiv
aaa
jp
ret
or
inc
jno
jge
lods
fildl
test
inc
hlt
fbld
stos
xor
shrb
out
insl
lea
dec
add
inc
outsl
loopne
aas
adc
js
hlt
arpl
cmp
push
lods
or
adc
ja
jo
xor
test
adc
ljmp
and
insl
into
jmp
mov
push
add
mov
and
sbbl
outsl
xchg
pop
or
mov
ljmp
mov
loope
and
fs
call
daa
dec
xchg
push
and
orb
cltd
fmuls
loop
sub
outsl
fdivl
mov
in
xchg
mov
sub
mov
jno
js
cld
pop
mov
ja
sub
pop
leave
sbb
xchg
push
and
dec
call
mov
jne
pop
xchg
adc
test
loopne
mov
sbb
imulb
rcrb
add
insl
pushf
inc
mov
fdiv
aad
inc
xchg
dec
in
outsl
mov
xor
popa
xor
ret
and
fstpt
fldcw
loope
fcompl
shll
fldt
jne
loope
cmc
out
and
adc
bound
and
fmuls
pop
bound
gs
push
xor
dec
xchg
push
jbe
push
jno
xchg
cmp
icebp
repnz
mov
bound
shlb
aas
adc
les
cwtl
stos
test
cld
dec
xchg
mov
sbb
xor
xor
sbbl
mov
fistpl
xor
push
mov
dec
mov
outsl
mov
push
fistl
out
lcall
inc
xchg
pop
xor
das
subb
jmp
mov
dec
mov
out
ret
or
es
push
movsl
xlat
dec
lahf
dec
mov
jno,pt
daa
fnstcw
jmp
movsl
inc
pop
xor
aaa
mov
aad
int
sbb
mov
arpl
push
xchg
bnd
cmpsb
jp
jbe
xor
add
xor
test
and
fiadds
dec
sub
gs
adc
cltd
add
push
xchg
cld
aaa
mov
push
ret
and
sub
push
sub
ret
fs
les
out
and
movsb
jle
push
daa
ds
sub
insb
xchg
aam
mov
lret
push
jo
stos
outsb
nop
dec
icebp
aas
stc
add
hlt
in
push
mov
call
sub
xor
jae
cmc
or
and
pop
push
adc
mov
push
flds
mov
jnp
mov
mov
ds
popa
add
jmp
inc
test
cmc
adc
out
lret
and
inc
push
mov
jno
test
dec
aaa
pop
movsb
pushf
jb
mov
in
and
loopne
push
dec
inc
cmp
dec
dec
mov
sbb
std
pushl
int
mov
leave
xchg
shlb
enter
sbb
jo
sub
sub
mov
out
fld
clc
jno
mov
sti
cmp
cltd
push
fwait
and
xor
inc
dec
leave
lret
mov
lahf
xchg
stos
mov
pop
push
mov
push
scas
push
mov
push
sti
and
js
sahf
movsl
and
jle
mov
xchg
lds
push
cmp
hlt
fldcw
lea
inc
fnsave
mov
orl
sub
jmp
jb
add
gs
sub
loop
addr16
jle
xchg
mov
ljmp
mov
add
mov
movsb
je
inc
mov
ret
xchg
ja
cmpsb
push
in
add
fistpll
gs
iret
add
mov
jl
sub
add
jl
inc
jle
dec
outsl
test
mov
mov
pusha
inc
adc
sbb
dec
stos
mov
or
shlb
fistps
aad
inc
cmp
sub
pop
iret
das
xchg
ret
pop
add
mov
outsb
fisubl
scas
push
test
sub
push
and
cltd
cmp
xchg
cmpl
mov
aaa
stos
repz
mull
scas
jg
sub
aaa
mov
pop
xchg
sub
cmp
push
mov
xor
iret
xchg
sti
and
adc
int
rcll
sahf
inc
mov
mov
enter
repnz
loopne
je
sub
mov
adc
inc
pop
hlt
loope
ror
aas
fisubs
cmp
movsl
mov
imul
push
sub
sub
push
pop
nop
xchg
sbb
outsb
mov
mov
test
int
adc
pop
push
shlb
js
pop
das
mov
daa
or
jecxz
jbe
xchg
stos
fmuls
sbb
push
and
arpl
out
cwtl
sbb
push
and
fistpll
cmpsb
shlb
add
fcomi
xor
xor
sbb
lock
mov
adc
add
sahf
lcall
lds
sub
leave
jp
xor
popa
stos
ss
jmp
mov
push
out
hlt
inc
push
aas
cmpsb
ds
std
cmpb
shrl
mov
xchg
jl
push
adc
lock
outsb
in
pop
mov
enter
xchg
xor
fwait
sub
xchg
out
rcrb
push
adc
lret
pop
add
in
arpl
js
adc
sub
ret
xorb
mov
mov
movsl
lock
data16
test
push
popa
or
mov
scas
lret
jae
mov
cmp
mov
or
pop
jmp
out
or
iret
pop
mov
mov
mov
jae
repnz
jg
cbtw
inc
sbb
dec
in
loopne
out
dec
xorb
dec
mov
mov
mov
rcr
repnz
ss
xchg
idivb
pop
out
adc
xchg
fdivrl
sub
ja
mov
jb
dec
xor
mov
pop
push
imul
dec
iret
xchg
jg
cmp
pop
jnp
lret
ss
pusha
test
arpl
loope
fs
and
or
lds
loop
add
adc
push
mov
and
js
loopne
inc
push
pop
jp
pop
push
jmp
mov
inc
sub
popf
pop
in
mov
mov
aam
add
mov
push
dec
pop
leave
xor
jae
pop
mov
or
add
cmpsb
ja
mov
inc
icebp
or
dec
and
jo
and
pop
fs
pop
adc
rcll
addb
or
std
sub
xchg
icebp
dec
mov
rolb
xor
adc
fstl
jl
insl
sbb
pop
dec
push
test
or
push
xor
xor
push
arpl
xchg
push
cmp
xchg
out
lea
jns
std
fidivs
lods
popf
call
pop
mov
fdivl
out
sti
cs
add
sbb
jle
insl
push
cs
jle
mov
cmp
mov
mov
scas
mov
xchg
and
lahf
lds
and
xchg
into
je
bound
scas
out
and
iret
mov
and
mov
mov
incb
out
push
push
cmpsb
ja
inc
mov
jmp
xbegin
sub
push
push
mov
icebp
lock
mov
cmpsl
movsb
jbe
mov
mov
pop
xchg
les
movsl
mov
ds
repz
je
jno
outsb
cmp
adc
jmp
std
inc
lds
in
bound
js
cld
adc
mull
div
insl
icebp
jecxz
stc
pop
ret
mov
xchg
ja
jns
push
pop
mov
sub
into
add
mov
cmp
xor
xor
cmp
mov
jg
pop
stc
dec
insl
test
enter
mov
pop
mov
push
cmp
in
pushf
xor
dec
push
pop
jnp
xor
ja
push
in
mov
icebp
enter
pop
test
mov
int
hlt
ds
jg
into
push
cmp
cmp
cmp
or
andl
jg
mov
cmp
pop
lret
inc
unpckhps
dec
insb
add
jl
mov
jmp
cwtl
andl
das
pop
mov
cmp
shl
mov
mov
lea
aad
cmpsl
sbb
ss
adcb
sub
jo
imul
mov
xchg
aad
js
shrl
imul
dec
sub
cli
out
pop
js
pop
or
nop
in
mov
lret
sub
das
fdivl
in
jns
inc
jg
pusha
sbb
add
xchg
stos
jmpw
je
in
cmp
in
mov
repz
xchg
mov
cmp
loopne
std
mov
xchg
cmpsb
rol
enter
data16
ss
cld
dec
in
sub
roll
clc
je
fsub
xor
ja
in
fwait
insl
adc
data16
insb
hlt
push
sub
and
cmp
mov
insb
in
cwtl
mov
sub
jbe
mov
ja
mov
roll
add
aas
loopne
push
int
stos
lea
out
dec
popa
fbld
cli
mov
add
adc
inc
pop
add
sbb
ret
out
cmp
mov
add
adc
jle
sbbb
dec
cmp
dec
scas
push
push
mov
cs
lret
xchg
fcos
imul
mov
and
mov
in
and
shlb
pop
inc
cwtl
arpl
adc
xchg
push
mov
pop
and
ja
roll
fnstsw
mov
pop
mov
pop
xor
sub
xchg
pusha
push
loope
stos
cwtl
push
clc
push
arpl
xchg
pop
cmp
testb
pusha
add
or
scas
cmp
pop
movb
inc
fwait
jnp
arpl
xchg
push
xor
adc
pop
and
icebp
aad
ret
mov
push
inc
insl
or
lods
mov
pop
mov
lods
mov
in
add
push
adc
bound
xor
sbb
icebp
hlt
pop
pop
xchg
insb
loop
ret
pop
cmp
jg
add
fsubp
cs
fildll
gs
mov
les
xchg
mov
aas
daa
jge
dec
mov
loop
mov
cmp
les
or
fcomps
andb
inc
or
jns
pop
push
js
mov
pop
pop
pop
imul
mov
es
int
fcomip
out
pop
in
dec
adc
popa
mov
or
jecxz
sti
mov
inc
push
or
sbb
fsubl
cwtl
lock
add
enter
add
insl
cs
xchg
clc
inc
movsb
mov
mov
or
clc
loopne
stos
negb
mov
push
movsb
jmp
push
xchg
movb
aaa
dec
and
incb
mov
mov
or
clc
mov
fiadds
outsl
jnp
scas
movb
push
add
xchg
popf
cs
push
inc
popf
vmovntdq
xor
pushf
enter
sbbb
pop
hlt
push
sub
pop
or
xchg
adc
dec
or
cmp
enter
scas
mov
cmp
test
cmp
fcoml
dec
ret
aaa
rcr
sbb
mov
mov
mov
inc
push
push
jne
in
scas
dec
xor
xor
mov
pop
movsb
add
into
push
jecxz
test
dec
sbb
jo
arpl
push
lea
push
inc
adc
cmpsb
xchg
sbb
mov
add
xor
pusha
xor
movsb
cmp
push
and
movsb
xlat
jno
insb
push
mov
sub
das
xlat
push
adc
hlt
pop
jbe
push
fdiv
pop
fwait
loope
pop
sbb
or
ds
mov
sub
xor
repnz
adc
mov
mov
jg
imul
push
sbb
xlat
xlat
push
cmpl
icebp
adc
mov
and
jle
arpl
mov
adc
dec
jge
hlt
xchg
fiaddl
fxch
stos
lock
arpl
aad
xor
movsb
into
aad
jge
jb
add
fistpl
cmp
aad
add
mov
pop
cmp
add
lea
or
stos
outsl
dec
xor
xchg
cmp
in
fstl
arpl
nop
out
push
dec
insl
and
test
ljmp
or
fsubrl
mov
push
mov
or
sub
and
in
push
pusha
outsb
jno
mov
cmp
fidivrs
dec
arpl
ljmp
mov
add
popf
sub
sbb
xor
test
cmp
mov
loop
sub
cmp
jbe
cltd
aaa
adc
aaa
ds
and
jmp
push
adcl
push
add
jmp
je
push
leave
push
ja
bound
sub
fldl
push
je
and
mov
cmp
popa
lahf
mov
popa
add
arpl
outsl
add
outsb
add
add
insl
imul
push
inc
dec
push
push
sub
dec
add
bound
outsl
add
jb
outsb
add
add
imul
je
add
jb
add
add
jb
add
add
popa
add
add
add
data16
add
add
add
add
add
dec
add
