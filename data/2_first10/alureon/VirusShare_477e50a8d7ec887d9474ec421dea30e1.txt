mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
inc
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
call
movl
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
add
mov
rorb
shlb
sbb
add
loope
and
and
nop
mov
inc
xor
cmc
rorl
les
clc
lods
jnp
xor
add
cmp
roll
loop
mov
out
adc
sub
add
out
and
adc
pop
mov
ret
jl
xchg
xchg
adc
cmp
adc
mov
mov
out
cld
xor
and
icebp
xor
iret
sbbl
bound
jmp
js
test
sbb
test
pop
push
xchg
mov
add
push
cmp
insl
push
sbb
add
jne
rcr
shlb
lret
mov
jb
mov
add
dec
mov
xchg
adc
aaa
jbe
cmp
rcr
push
pop
add
fsubrs
push
das
sbb
adc
jge
mov
push
or
add
jle
or
dec
sahf
cld
sbb
add
xor
adc
lods
cmpsb
mov
or
xchg
adc
cli
outsb
push
jmp
mov
pop
sti
jo
and
imul
scas
cmpsl
cmp
pusha
or
mov
loope
shr
pop
ljmp
fnstcw
fsubs
pop
adc
push
rcrl
dec
mov
inc
mov
cmp
add
imul
add
add
xchg
lret
pushf
sbb
int3
test
testl
imul
cmpl
mov
ret
scas
lret
test
outsl
push
inc
out
cmp
lret
mov
mov
bound
mov
dec
ret
aad
push
movsl
push
and
stos
xor
test
int
movsl
inc
sbb
addl
js
cwtl
dec
out
mov
pop
add
add
js
fisttpl
mov
and
dec
adc
incl
insl
push
lret
rol
adc
out
pop
bound
popf
inc
sub
sti
cmc
and
inc
leave
fidivs
sahf
lret
or
scas
aam
mov
pop
push
mov
push
scas
shlb
je
popa
das
pop
jge
xor
rcll
cmpsl
out
std
sti
sbb
lods
mov
sbb
xchg
cmp
imul
add
ds
jne
cld
dec
mov
insl
dec
mov
test
mov
stos
dec
push
sahf
mov
dec
fs
xchg
repnz
jg
mov
or
push
cli
sbb
jns
dec
or
or
jnp
shll
sbb
outsl
add
mov
outsl
mov
rolb
aaa
rcr
in
into
cmp
or
clc
or
xchg
or
fldcw
in
or
add
xlat
shl
push
or
sarl
nop
shll
sbb
addr16
negl
mov
fdivl
adc
xchg
addb
cmp
mov
jae
mov
shlb
insl
dec
mov
ljmp
in
ss
and
repnz
insb
xchg
mov
insl
push
jg
or
and
push
xlat
adc
push
add
add
add
std
das
sub
outsb
mov
mov
push
add
adc
iret
cltd
ja
push
or
loop
lods
icebp
xor
shrl
aad
cmp
sub
in
jns
cmp
cmp
rcr
sub
out
cld
sub
add
fucomi
lds
mov
lods
arpl
aad
xchg
push
xchg
pop
pop
aas
cmpsb
mov
mov
sahf
cli
ret
pop
out
imul
xchg
xchg
jecxz
push
adc
pop
pusha
in
in
inc
and
aad
fwait
test
xor
loope
js
loope
das
or
push
pop
pusha
mov
inc
inc
lods
mov
out
pop
sub
loopne
mov
call
fsts
jecxz
jg
mov
jle
and
rcl
cmp
out
mov
jle
push
inc
xor
ds
inc
mov
adcb
lcall
add
push
dec
hlt
push
xchg
popf
pop
dec
fisttpll
pop
push
lods
and
es
mov
mov
fnstsw
mulb
adc
mov
fisubrs
mov
fcomps
mov
leave
arpl
lods
sub
jmp
adc
cmpl
frstor
arpl
cmp
rcr
sub
ret
push
cmp
out
fisubrl
andl
lahf
inc
lret
inc
fwait
repz
out
movb
xchg
dec
das
sbb
icebp
and
mov
push
mov
and
out
fcompl
mov
movsb
cwtl
sti
movsb
push
cwtl
mov
inc
lock
or
or
aam
cmp
sarl
imul
inc
inc
mov
and
mov
sti
pop
xor
jbe
push
jp
mov
stos
cmp
shlb
mov
pop
in
jl
cmp
sar
mov
pop
loopne
int
and
inc
pop
sbb
cmc
pushf
xchg
xchg
or
pusha
push
mov
xchg
lea
sub
out
cmp
outsl
dec
xchg
es
dec
outsl
mov
mov
cmp
scas
std
pop
cmpsb
jl
jbe
and
dec
leave
lret
xor
inc
mov
dec
out
mov
sub
sbb
shr
addl
pop
push
sub
add
loope
inc
xor
xchg
jo
xlat
pop
out
out
stc
insl
xchg
ret
pop
scas
imul
test
xchg
cmp
or
mov
popf
cmp
roll
xchg
pushf
pop
mov
push
sbb
insb
sbb
and
in
jmp
les
ljmp
lods
das
test
push
loop
mull
or
out
and
xchg
sahf
fmuls
stc
popa
mov
mov
xchg
sub
add
add
lret
out
insb
cmp
jb
fnstsw
lcall
inc
jnp
das
addl
pop
cmpsl
mov
push
add
xor
mov
stos
std
out
sti
out
stos
add
fcmovnbe
imul
pop
xor
cmc
cltd
std
imul
adc
or
scas
cwtl
popa
cmp
inc
sub
addr16
jmp
add
loop
imul
or
mov
pop
incl
add
inc
ja
sbb
xor
and
scas
pop
js
pop
fwait
mov
bnd
mov
push
push
ljmp
inc
test
lock
push
xor
imul
insl
adc
add
push
test
das
push
gs
jb
dec
jg
jo
cmp
mov
addb
cmpsb
xor
into
mov
int3
jns
idivl
cs
inc
xor
pusha
into
out
jbe
xchg
dec
ror
add
sub
xchg
lods
xchg
lea
jb
in
mov
and
push
xlat
push
push
xor
aad
movsb
push
cli
test
push
sub
lock
adc
mov
daa
push
xchg
xchg
jb
dec
dec
sub
int3
loopne
cmp
fwait
and
fisubs
out
lods
adc
lds
loop
xchg
cmp
pop
mov
sti
iret
xor
out
aad
pop
pop
or
mov
mov
add
add
jl
mov
test
js
test
loop
adc
ret
stc
repz
xor
mov
push
loopne
loopne
movsb
xchg
adc
inc
je
loop
sahf
xchg
mov
enter
jae
imul
pop
adc
cmp
xchg
xchg
mov
test
push
mov
lods
repz
jno
outsl
divl
fwait
hlt
stos
fdiv
cld
jecxz
lret
lret
jno
out
push
jecxz
push
aam
mov
xlat
cmpb
add
arpl
enter
or
jp
pop
leave
push
or
sub
or
mov
out
hlt
sub
les
push
neg
mov
leave
test
popa
inc
adc
es
popa
sub
popf
jmp
push
cwtl
shl
test
cmove
adc
lock
inc
jecxz
mov
dec
int3
hlt
jnp
mov
nop
cmp
xor
divl
sub
push
fistps
add
xor
jl
push
lea
sub
cli
das
lods
std
add
leave
lcall
pop
lret
mov
int
dec
lret
imul
xchg
xor
mov
out
repz
cmp
aaa
repz
sti
xchg
sub
fwait
push
and
cmp
pop
stos
getsec
cwtl
jp
add
xchg
dec
adc
lcall
mov
sbb
fucomip
cmpsl
inc
popa
jecxz
insl
in
xor
add
add
push
sub
push
push
cs
sub
jl
cmp
push
push
fstps
cmp
enter
inc
je
dec
and
pop
jle,pn
mov
nop
jp
or
dec
js
repnz
outsb
sbb
pop
pop
mov
int3
mov
mov
enter
push
pop
divb
mov
cli
cmc
mov
add
sub
out
into
pop
mov
pop
stc
push
fsub
movsb
sahf
sbb
add
jmp
pop
mov
sahf
mov
push
ds
scas
test
inc
fsubrl
movl
iret
jnp
daa
xlat
cmp
ret
mov
ja
mov
adc
std
cmp
cwtl
insl
aas
sub
push
hlt
fdivrs
mov
sbbl
movsb
xchg
cmpsb
fists
sub
push
clc
xchg
mov
push
sub
mov
xchg
sub
pop
dec
push
imul
add
incb
call
cmp
hlt
imul
sti
mov
aad
or
fmull
push
add
push
sub
in
jnp
jo
xchg
xchg
jl
cmpsb
adc
adc
cwtl
loopne
mov
rolb
cmp
repnz
push
sbbb
bound
or
movsb
push
cmp
push
sub
fstpt
rolb
adc
data16
les
leave
mov
ret
test
hlt
add
add
pop
and
testl
and
nop
scas
int3
xor
popf
inc
pushf
mov
je
add
shl
jae
inc
mov
call
xor
add
xor
stos
test
and
fcmovne
fimull
push
inc
sub
sbbl
xorb
mov
pop
out
or
out
xchg
adc
xchg
lcall
push
inc
and
add
add
push
out
cwtl
repz
addl
and
stos
pop
add
out
xchg
xor
int3
sbb
leave
movsb
mov
or
jle
fs
and
xor
jns
mov
push
js
push
outsb
jb
cmp
loop
or
sahf
sar
mov
or
mov
addb
xchg
mov
add
add
and
rorl
xor
in
mov
icebp
mov
mov
cmp
cmc
dec
repnz
inc
inc
fucom
pop
enter
inc
rcl
fldcw
cmpsl
sahf
add
mov
popa
stc
iret
xchg
push
pop
push
lahf
psubd
out
sbb
inc
mov
adc
sbb
jmp
hlt
das
jecxz
popa
mov
loop
fidivrl
fnsave
cmp
jb
add
imul
add
and
mov
push
and
jns
testl
jle
mov
or
or
movsl
push
adc
adc
imul
mov
push
pop
in
xlat
rcrb
add
push
jecxz
popf
inc
aaa
xor
cmp
jmp
or
pop
call
fcmovbe
sub
mov
js
mov
fcoms
dec
inc
loope
push
rol
aas
xchg
sub
sub
mov
sbb
xchg
fstpl
pop
xor
xor
fcmovnb
jb
imul
adcb
push
pop
inc
mov
in
xchg
fninit
xor
das
lods
inc
clc
dec
jbe
aaa
pop
dec
mov
lds
pop
mov
aaa
jle
stc
stos
mov
adc
sbb
divb
mov
cmp
dec
fiaddl
fwait
xchg
gs
outsb
jg
jl
sahf
mov
inc
xor
mov
xor
or
test
xchg
pop
in
dec
xchg
add
dec
or
mov
add
fwait
cmp
sar
cmp
jmp
xorl
xor
inc
in
cltd
mov
or
sbb
push
hlt
sub
aas
xchg
and
int
sbb
enter
ret
fstps
add
xchg
lock
les
cltd
mov
jns
cmp
loopne
sub
aas
sub
xor
push
cmp
rolb
jl
ss
push
mov
std
sub
jecxz
pop
jp
jge
popa
adc
rcrb
negl
js
fcmovu
test
push
out
push
xor
into
mov
jge
repnz
push
sub
fdivl
sbb
xor
shll
add
adc
xor
repz
lds
inc
mov
int
cld
push
lcall
dec
ret
aam
cmp
imul
mov
push
push
lret
in
and
pop
popf
sbb
push
xor
lret
xchg
pop
sbb
xchg
mov
aam
in
pop
scas
mov
mov
inc
stos
rcrl
addl
and
push
repnz
sahf
mov
and
insl
js
movsb
or
testb
jae
adc
shlb
add
and
sarl
push
icebp
mov
clc
outsl
mov
outsb
mov
xchg
pop
jns
and
add
adc
stos
daa
addl
jb
mov
ljmp
outsl
mul
cld
repnz
insb
push
sbb
dec
inc
popf
imul
mov
jmp
mov
and
pushl
add
add
mov
incb
loopne
adc
js
icebp
cmp
aad
push
sbb
mov
xchg
adcl
mov
and
loope
aam
add
fisubs
xchg
sbb
adc
pop
xchg
or
mov
sub
inc
cmpsl
test
xor
adc
lods
andb
mov
inc
loopne
pop
fwait
scas
orl
mov
sbb
lods
out
xor
aaa
inc
add
dec
dec
jnp
jmp
arpl
ds
mov
push
cmpsl
mul
out
fs
xor
mov
or
jb
daa
lods
negl
push
pop
in
or
pushf
jo
push
xchg
fsubs
inc
lods
mov
xor
jg
inc
ss
in
jb
stos
or
mov
nop
push
stc
repz
test
sub
mov
mov
adc
cmc
xchg
add
cmp
adc
aad
rcl
mov
mov
xchg
inc
scas
stos
leave
xchg
jp
jne
pop
adc
out
test
sub
and
call
lods
add
adc
xlat
je
data16
add
stos
sti
nop
pop
jbe
mov
lds
mov
dec
aaa
xchg
or
jo
cmpsb
jne
es
xchg
loop
out
xchg
pop
repz
mov
push
mov
stos
inc
aaa
mul
test
test
pop
test
sub
add
add
insl
fxam
sbb
pop
outsl
nop
xchg
jne
rcrl
lds
fcmovnb
pop
and
add
and
fidivl
sbb
lods
test
movsb
lds
lea
fs
xlat
pop
mov
push
pushf
xor
and
cltd
sbb
push
xor
std
scas
inc
xor
rolb
dec
fists
add
mov
and
add
int
inc
std
testb
js
adc
lds
and
or
lcall
iret
mov
sub
jp
sub
aas
push
dec
mov
dec
fcomip
mov
jb
push
dec
outsl
or
and
frstor
pusha
cltd
pandn
xchg
xchg
xchg
pop
sahf
shlb
sub
inc
int
lea
mov
and
jl
add
cmp
xchg
aaa
pusha
mov
in
xor
movsb
incb
lods
insl
jg
mov
mov
shl
xchg
imul
pop
inc
xchg
je
outsl
and
lock
sbb
cltd
rclb
mov
clc
scas
fdivrl
mov
sub
test
inc
mulb
mov
or
mov
js
ficomps
enter
xchg
mov
push
sub
add
add
push
adc
lret
cmpsl
adc
lods
popf
mov
dec
dec
mov
lcall
adc
fmuls
clc
dec
mov
mov
jne
xchg
push
push
jecxz
cli
out
mov
jg
jecxz
mov
xor
clc
dec
push
fbstp
xchg
aas
pop
popf
sahf
repz
xchg
test
pop
jmp
fistpll
cwtl
aaa
pop
pop
xor
sub
fwait
fwait
shl
aas
mov
add
xchg
add
inc
xor
insl
mov
cmp
pop
insl
lea
push
imul
mov
shlb
sti
lods
adc
daa
mov
dec
mov
into
cs
movl
iret
test
xlat
sub
lods
sbb
outsl
pop
aad
das
xchg
iret
or
ficomps
or
inc
jns
loope
cmp
push
test
dec
popf
ret
dec
and
ja
adc
sub
jae
xchg
sub
flds
add
add
mov
repnz
invd
outsb
or
stos
std
and
test
shr
pop
sub
pop
or
xor
inc
mulb
and
test
jmp
cli
pushf
fcmovu
aam
repnz
stos
mov
mov
push
jecxz
ret
and
pop
int
push
ret
pop
leave
add
xor
stos
add
mov
sbb
cmp
mov
jae
sti
xor
ljmp
push
xor
int3
and
jp
roll
ljmp
aam
xor
mov
aas
mov
jge,pt
stos
out
idivl
push
int
in
into
pop
xlat
aas
rorl
test
int
pop
fucomp
std
inc
sbb
mov
cmpsl
and
leave
xor
xchg
or
mov
imul
rol
movsl
in
mov
mov
push
adc
out
add
iret
mov
sub
sbb
pop
inc
sub
jl
dec
out
es
jo
loope
xor
insb
fstpl
pop
roll
jl
andl
dec
call
pop
inc
mov
mov
sub
enter
cmp
in
add
test
mov
bound
rorl
test
lcall
mov
mov
adc
mov
adc
stos
mov
lock
add
add
jno
and
push
fwait
test
push
and
sbb
mov
mov
inc
shll
jg
addr16
pushf
xchg
or
ljmp
jae
fcoms
test
pop
mov
sbb
and
push
xor
dec
arpl
push
jo
out
jno
mov
nop
push
xchg
mov
dec
dec
arpl
or
xor
ljmp
mov
sbb
mov
into
xchg
test
inc
and
jmp
mov
or
pop
out
sub
jl
jns
ret
mov
mov
scas
inc
xchg
xchg
int3
cmp
ds
orl
pop
push
out
pushf
stos
outsb
outsb
cmpsl
jmp
jno
pop
clc
insl
fwait
mov
cmc
pop
in
call
inc
inc
inc
add
leave
push
insb
dec
xchg
adc
push
or
subl
rcrb
jne
sub
jmp
push
xor
out
adc
sub
mov
bound
jmp
push
jle
adc
and
mov
ret
cmpsl
pop
int3
or
out
fildll
inc
dec
mov
in
js
mov
sub
push
leave
mov
push
cmp
sahf
pusha
mov
loop
pop
test
pushf
push
sbb
iret
push
cmp
daa
fwait
xor
push
dec
mov
sar
pop
xchg
xor
test
mov
add
cmp
mov
outsb
xchg
inc
ljmp
out
aam
rcr
push
jg
push
xchg
aam
lds
stos
das
out
or
lods
int
int3
sub
push
xchg
sbb
stos
xor
sbb
cmc
lret
dec
mov
xchg
jl
mov
je
pop
push
fadds
jl
push
add
mov
sub
dec
mov
lret
push
xchg
add
fsub
and
repz
push
out
add
add
pop
ja
popf
cltd
xchg
pop
loopne
sbb
lahf
cmpsl
shll
sbb
inc
int
stos
rolb
pop
inc
dec
in
clc
inc
loope
push
mov
mov
pop
push
cmp
notb
into
fadd
mov
sti
dec
ret
fisubrl
scas
inc
inc
incb
fwait
mov
sbb
es
cmc
andb
faddl
fwait
adc
fldt
in
ja
mov
cmpb
xchg
cmpb
iret
sbb
sub
inc
loop
sbb
inc
pop
pop
add
mov
fdivs
dec
je
jmp
mov
movsl
int
mov
push
add
pop
jmp
pop
push
or
int3
jns
dec
inc
int
jl
pop
and
xor
and
mov
pop
mov
sarb
rcrb
in
and
inc
inc
aaa
adc
pop
je
pop
add
imul
xchg
scas
mov
pop
mov
in
xor
sub
shlb
mov
cli
jmp
sub
fst
cld
xchg
add
ja
push
out
inc
sbb
std
dec
mov
and
push
unpcklps
add
repnz
lret
addr16
push
rcll
pushf
cmp
test
cmp
pop
add
fwait
stc
jae
and
mov
adc
sti
dec
lods
sub
into
idivb
shlb
out
shlb
cmp
rclb
pop
ljmp
movsb
add
adc
out
ret
bound
sub
insl
out
out
cmp
sbbl
mov
iret
and
push
mov
jg
mov
pop
mov
push
add
cmpsb
mov
fisubl
repnz
mov
xor
xor
negb
fmuls
xchg
mov
rcpps
add
add
jecxz
cmpsl
pop
stos
or
dec
xchg
lds
dec
and
ret
or
outsl
test
pop
movb
cmc
mov
out
lret
mov
or
push
cmp
push
add
cmp
mov
ficoml
jle
je
pop
xchg
jge
shlb
stos
pusha
sub
in
add
and
jl
xor
jbe
cvtps2pi
gs
cmc
sub
scas
flds
decl
jge
mov
add
or
push
jo
ret
mov
pop
jl
fnstenv
jge
push
int
inc
xor
outsb
out
shl
and
mov
sub
int
push
je
fadds
mov
js
test
stc
push
into
or
mov
sbb
dec
jo
in
fcmovu
sbb
test
mov
mov
mul
push
je
mull
js
into
comiss
xlat
leave
in
add
ljmp
pop
dec
or
pop
fistps
stos
mov
leave
loop
jns
inc
stos
dec
xchg
std
mov
ud1
push
mov
je
popl
cmpsl
iret
imul
sub
mov
sbb
xchg
xchg
pop
jge
aaa
cmc
xor
mov
andb
inc
fstpl
push
add
pop
out
cld
xor
rorb
adc
push
pop
add
iret
mov
add
or
add
lock
outsl
pop
adc
mov
je
mov
dec
scas
mov
add
mov
mov
xor
pop
bound
in
mov
or
fwait
mov
and
push
jge
stc
cli
jo
xchg
xchg
stos
cmp
aad
xchg
scas
bndstx
repnz
pop
add
lahf
jmp
xchg
jae
imul
cmp
in
cld
or
push
adc
outsl
xor
ljmp
pop
xchg
mov
mov
or
std
cmpb
mov
mov
xchg
inc
xchg
cmc
clc
jmp
pop
or
xchg
fucomp
scas
lret
or
pop
out
scas
cwtl
inc
cmpsb
push
out
push
addl
adc
pusha
shll
xor
gs
add
add
daa
dec
sub
pop
cwtl
fcomps
jmp
or
push
cmp
insb
loopne
pop
sbbl
sub
test
ljmp
mov
mov
cmpsb
xchg
hlt
ficompl
repnz
inc
jl
push
negb
jne
lods
ret
adcl
mov
and
cs
sbb
xor
test
dec
leave
lods
inc
insl
mov
cmp
in
jecxz
mov
add
push
sub
mov
cmc
pop
and
lcall
dec
imul
hlt
mov
call
test
rorb
je
cwtl
mov
stos
pop
mov
mov
popa
xor
int3
arpl
jmp
fistl
or
fisttpll
call
xchg
and
inc
sub
repnz
lret
xchg
cltd
pop
jb
and
in
add
clc
je
or
add
outsl
pop
addl
test
gs
and
pop
add
gs
dec
sbb
out
imul
cs
sbb
mov
popa
mov
mov
call
sbb
lahf
dec
inc
sbb
aaa
mov
outsb
and
or
inc
adc
mov
subb
cmpsb
xchg
cld
test
sub
lds
push
sbb
iret
movsl
pop
repnz
ret
bound
iret
repz
xchg
test
loopne
dec
jle
jns
les
add
add
ja
fimuls
gs
jg
aas
rcrb
xchg
cmp
mov
aam
xchg
in
push
add
adc
lock
xchg
dec
jmp
add
add
jo
outsb
out
addr16
lods
adc
xchg
add
pop
ljmp
out
ficomps
outsb
stos
push
mov
scas
ja
les
push
xchg
lock
push
insb
adc
ja
adc
test
incb
dec
call
int3
xlat
fimuls
xchg
inc
xlat
sahf
int3
int
or
inc
cld
mov
clc
rcl
jae
inc
rorl
lcall
add
adc
cmp
xchg
iret
loop
into
add
test
xor
aad
stc
push
sub
popf
xchg
mov
mov
in
or
cs
push
dec
in
sbb
outsl
cltd
or
movsl
sub
push
test
les
push
xor
cmp
or
push
outsb
sbb
mov
movsl
mov
lods
jnp
add
sbb
mov
cmp
pushf
cmp
sbb
mov
push
sbb
cmp
fcompl
jnp,pt
lods
inc
lea
add
hlt
sub
mov
bound
pop
xchg
jecxz
leave
dec
out
in
insb
in
imul
loop
cmpsl
mov
jo
jne
add
push
das
add
push
std
in
ret
ret
inc
popf
das
testl
jae
push
or
mov
mov
pop
cmp
mov
xor
fcmovnu
cmp
cld
or
test
mov
gs
dec
jb
imul
stos
inc
and
xchg
int3
lahf
int3
test
xchg
add
pop
adcl
jo
jl
fisttpl
scas
mov
loope
push
sub
fcoml
aam
xchg
and
popa
aam
jne
int
retw
jae
in
ljmp
push
fcmovb
add
cmp
into
iret
mov
or
rol
inc
push
aad
adc
mov
lock
push
jns
xor
and
add
enter
out
push
xchg
add
out
xor
and
fwait
jg
es
cmpl
or
jns
notb
je
dec
lret
and
fs
pushf
std
cli
into
mov
dec
daa
faddl
int3
mov
add
dec
sub
cld
add
addr16
loop
mov
je
inc
jg
jecxz
and
xchg
and
xchg
lret
shl
aas
and
insb
add
or
mov
ds
or
out
jb
scas
inc
push
mov
adc
fsts
xchg
and
mov
pop
mov
mov
push
dec
lahf
or
out
inc
xor
jp
sarb
add
sub
loopne
jle
adc
les
test
sbb
dec
sbb
jecxz
inc
mov
ds
inc
rorl
aaa
xor
inc
test
popf
mov
xchg
push
cli
pushf
jl
lea
add
xchg
repnz
sbb
xorl
sub
out
sub
popa
mov
xor
inc
fidivrl
pop
pushf
cmpsl
and
sahf
scas
hlt
adc
rclb
sub
add
fwait
add
outsb
lds
pop
mov
shlb
push
sub
pusha
xor
lds
jnp
int3
nop
jns
mov
push
repz
ss
inc
lret
je
mov
daa
insl
inc
mov
adc
in
pop
out
push
fsqrt
fidivs
and
push
int3
repz
cmp
pop
push
jb
outsl
mov
repz
add
xchg
fstpt
and
mov
pop
test
mov
jl
and
push
ja
add
out
cmp
in
xlat
out
mov
out
or
or
