push
mov
sub
push
push
push
lea
and
mov
mov
lea
mov
push
mov
mov
lea
rol
xor
xchg
adc
mov
mov
ret
lea
add
lea
mov
not
adc
rcr
mov
xor
rol
lea
mov
not
mov
lea
rcl
xor
mov
neg
lea
xor
call
neg
mov
mov
add
neg
mov
shl
neg
lea
mov
xor
adc
xchg
lea
call
mov
xor
mov
rcr
neg
not
mov
and
lea
lea
mov
mov
mov
shl
xor
rcl
shl
xor
push
ror
rol
add
and
mov
mov
xchg
lea
mov
xchg
push
rcl
neg
mov
shl
mov
rol
xor
lea
neg
call
push
lea
mov
not
xor
lea
rol
mov
mov
pop
rcl
lea
shl
mov
xor
mov
lea
xor
mov
ror
mov
not
xor
shr
xchg
lea
xor
mov
xor
xor
mov
rol
xor
rcl
xor
xchg
and
adc
rcl
cmp
je
lea
shl
mov
neg
not
xor
lea
mov
or
je
mov
rcr
shr
lea
xor
shr
xor
add
and
mov
mov
neg
mov
xor
add
not
xor
xor
neg
mov
neg
xchg
neg
xor
add
shr
lea
xor
not
rcr
mov
adc
shl
not
xor
xor
lea
and
mov
mov
shr
lea
lea
mov
rcl
lea
xor
xor
shl
mov
mov
xor
mov
lea
rcr
mov
neg
neg
mov
mov
lea
xor
and
xor
lea
neg
add
cmp
je
mov
mov
neg
xor
xor
lea
shr
mov
neg
mov
and
adc
push
call
and
neg
lea
and
neg
mov
mov
ror
shl
add
mov
not
and
neg
shl
neg
xor
neg
neg
mov
mov
not
adc
mov
add
lea
movl
rcr
mov
and
xor
mov
movl
mov
mov
and
mov
rcr
mov
mov
mov
rol
ror
shl
mov
shr
mov
lea
mov
shl
and
mov
shr
rcl
not
lea
xor
mov
lea
mov
lea
xor
push
xchg
mov
neg
rcr
mov
lea
xor
xchg
push
add
lea
rcr
shl
lea
mov
not
mov
pushl
lea
lea
mov
shr
neg
not
xor
rcr
adc
pushl
xor
ror
lea
not
neg
lea
xor
shl
call
ror
lea
neg
neg
mov
rcr
mov
rol
mov
xor
neg
not
and
lea
mov
mov
lea
mov
xor
shrl
xchg
not
neg
mov
mov
add
lea
shr
xor
not
mov
rol
adc
add
mov
xor
xchg
lea
mov
xor
lea
mov
not
push
lea
lea
mov
xor
xor
add
mov
xchg
xchg
lea
lea
xchg
rol
mov
mov
mov
popl
shl
mov
not
neg
mov
add
shl
xor
neg
rcl
mov
xor
lea
add
mov
mov
lea
xor
not
not
neg
xchg
mov
decl
jne
mov
shl
not
rcr
and
xor
rcr
mov
mov
adc
neg
shl
neg
shr
xchg
mov
neg
not
xor
xor
neg
mov
lea
jmp
lea
add
lea
mov
neg
adc
mov
xor
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
loopne
inc
icebp
mov
mov
cmc
push
or
loope
int
ljmp
push
mov
andl
out
mov
jg
mov
mov
sub
fsts
xor
andb
adc
in
out
inc
xor
pop
sub
mov
sbb
inc
pop
push
lcall
outsl
in
enter
inc
out
std
filds
pop
or
mov
xor
adcb
sbb
int
xor
jg
into
ljmp
fldl
insb
pop
jmp
int
mov
pusha
lods
mov
xchg
or
imul
dec
cwtl
ret
jne
push
stc
cmpsl
sbb
fisttpl
loopne
or
icebp
ljmp
pop
sarl
fidivl
adc
xchg
ret
sbb
cmpsl
daa
sti
inc
out
stc
loope
fwait
jae
inc
and
jl
mov
dec
jae
inc
pop
leave
adc
mov
mov
dec
stc
mov
fs
fidivl
and
sbb
inc
adc
jbe
mov
jl
pop
cmc
fucomip
stc
adc
or
xlat
mov
shlb
int3
xchg
mov
sbb
mov
sbb
data16
scas
mov
sbb
xchg
stc
es
mov
xchg
scas
stc
or
mov
mov
mov
push
lods
lods
addr16
mov
fs
mov
outsb
or
mov
sbb
sbb
and
lea
xchg
cmpsl
jmp
xor
insb
mov
mov
sub
testl
imul
fwait
jmp
dec
lock
mov
fsts
fucomip
leave
adc
add
sbb
jge
cli
insb
sbb
inc
je
jmp
add
sbb
add
jno
push
mov
out
push
mov
imul
inc
in
leave
in
xlat
jl
jmp
inc
out
shl
mov
add
inc
test
stos
adc
sbb
pushf
cmp
fs
insb
cltd
jae
test
cwtl
cmp
sbbl
xchg
cmp
fs
xlat
push
clc
movsl
rorb
dec
outsl
dec
push
cmp
sbb
mov
out
fwait
mov
cmpsl
inc
int3
sbb
fmull
ljmp
lahf
and
push
cmp
sbb
sbb
andl
rolb
xor
fs
addr16
adc
out
lret
in
lret
sysenter
sub
negb
sbb
push
int3
out
xor
insb
mov
mov
and
jae
xor
test
mov
xor
xor
test
in
subl
jo
insl
mov
sbb
mov
iret
and
addr16
out
outsl
inc
inc
fcoms
mov
push
scas
out
repnz
lret
fs
sub
out
xor
jae
dec
or
pop
aam
fs
inc
fwait
jae
xor
mov
mov
in
sbb
pop
adcb
adc
sbb
insb
fidivl
add
test
aam
out
outsl
dec
insb
mov
in
add
jae
xor
pop
bound
adc
adc
clc
add
int
pop
mov
int3
dec
out
ss
mov
cltd
jae
in
addr16
cmp
cwtl
repnz
fsts
xor
test
in
cmpsl
dec
mov
fdivrl
fsubrp
movswl
les
mov
adc
mov
insb
pop
push
mov
lea
adc
ljmp
insb
test
sbb
and
mov
mov
dec
push
inc
xchg
xor
mov
mov
movsb
mov
mov
sub
sbb
mov
xor
xorb
out
ret
push
loope
in
mov
sbb
mov
mov
data16
mov
xlat
dec
sbb
out
cli
adc
adc
insl
scas
addr16
adc
push
mov
fwait
stc
adc
in
repnz
add
xchg
ljmp
pop
mov
les
xor
test
out
jl
push
xor
mov
cmpsl
adc
in
popl
aam
cmp
fstpt
test
or
fwait
shll
hlt
mov
fldenv
adc
fwait
or
pop
jge
dec
shll
pushf
mov
mov
or
push
push
imul
jmp
shl
out
pop
sarl
insl
pop
push
jmp
adc
aaa
je
add
aaa
mov
xchg
jb
repz
jle
push
mov
jne
mov
push
push
lock
cld
lods
lods
jnp
ss
xlat
in
movsb
xchg
jmp
fcompl
shll
jo
stc
mov
insb
orb
pop
sub
scas
dec
lods
lcall
push
mov
imul
imul
xor
lea
in
or
xlat
popf
push
andl
daa
in
push
xchg
push
call
xchg
mov
push
mov
cwtl
xor
and
aaa
sbb
mov
push
xchg
orl
cli
sbb
cli
or
mov
in
pop
jmp
pushf
pop
test
imul
xchg
clc
in
mov
jnp
jae
fs
inc
pop
gs
adc
out
hlt
push
add
or
adc
cltd
loopne
loop
pop
mov
popf
mov
mov
xchg
adc
cmp
popf
not
in
leave
xchg
jle
test
cmp
es
inc
stc
clc
dec
mov
rcr
xor
push
mov
cs
inc
test
push
jg
into
xchg
lret
out
xchg
mov
push
add
dec
push
rolb
pop
scas
hlt
mov
fistpl
mov
out
stc
adc
lret
jge
out
mov
and
and
subb
sbb
mov
addr16
icebp
adc
jmp
push
fldenv
jno
cmp
cmp
popa
in
shl
lret
and
push
mov
das
lods
out
cmpsl
dec
arpl
fbstp
enter
xor
fwait
mov
adc
and
lea
push
lret
je
loopne
arpl
lods
pop
mov
jg
adc
push
sbbb
and
hlt
mov
dec
xor
stc
dec
lret
or
inc
in
cmc
jecxz
icebp
pop
or
and
outsl
mov
out
inc
xchg
cmp
adc
inc
adc
in
and
and
jns
aaa
out
je
loopne
jae
xchg
aam
scas
and
dec
mov
xor
sbb
mov
retw
mov
jl
inc
sbbl
ja
cmp
in
scas
cltd
add
dec
mov
inc
cld
pop
mov
xchg
cmpsl
mov
shrl
mov
pop
and
mov
lods
ficoml
mov
push
pop
pop
sub
inc
cwtl
mov
add
sahf
sti
test
sbb
mov
loopne
insb
inc
dec
mov
out
xor
dec
int3
fdivr
mov
cltd
cmp
mov
das
into
lea
sahf
pop
lds
mov
imul
xor
loop
dec
xor
and
xor
stos
testl
add
cli
mov
das
lret
les
mov
movsl
push
mov
add
sbb
push
xor
sbb
cltd
pop
xor
sbb
loope
lahf
clc
xor
fwait
mov
adcb
jecxz
lods
xorb
xor
fs
push
mov
dec
shll
mov
mov
push
out
and
les
push
push
inc
sti
out
out
xchg
imull
orb
mov
mov
sbb
cmp
loope
xor
lods
test
push
lret
int3
stos
add
cwtl
in
mov
add
mov
data16
imul
bound
pop
xlat
xor
imulb
cmpsb
into
jge
nop
nop
mov
insl
mov
inc
data16
negb
push
pushf
sarb
into
das
in
nop
ret
std
pop
int3
out
icebp
jnp
mov
sbb
scas
jmp
xchg
xchg
push
cmp
cmp
test
aas
sbb
imul
incb
fsubs
lods
push
shl
dec
or
ljmp
jge
icebp
or
pop
fmull
popf
mov
jl
xor
sub
pop
inc
out
stos
lea
push
adc
aam
lcall
add
push
mov
sbb
psllq
xchg
fmuls
dec
lods
and
push
jle
movsb
jno
inc
scas
or
cwtl
fldt
mov
test
orb
xchg
inc
ljmp
xlat
push
push
insl
mov
cmp
test
add
cs
push
mov
xor
adc
or
xchg
mov
xlat
scas
out
imul
xor
lea
pop
insl
inc
pusha
enter
dec
lcall
sub
or
scas
sub
or
call
push
subl
hlt
adc
push
push
jg
lret
loopne
pushf
ss
shr
push
push
mov
int
sahf
cltd
stc
pop
out
outsl
inc
dec
mov
mov
enter
dec
push
or
dec
pusha
xchg
mov
mov
xor
icebp
push
xchg
mov
addb
inc
sahf
lds
push
ds
or
sahf
jge
jl
lret
sbb
shlb
aad
shr
jmp
fsts
scas
outsb
add
es
adc
xchg
int
loop
shlb
xchg
movsb
sarl
adc
mov
dec
inc
lahf
mov
aam
pop
cmp
js
out
jp
sbb
sbb
xor
cmp
pop
mov
leave
jne
add
sub
xor
imul
imul
lods
insl
push
imul
mov
cmp
mov
push
cmpsb
pop
std
push
sahf
imul
sbb
adc
jge
sbb
adc
insl
in
sets
jle
daa
sbb
icebp
icebp
adc
out
insl
in
mov
xor
push
xor
enter
mov
lock
pop
add
dec
xor
add
mov
sbb
lcall
mov
loopne
arpl
add
lods
xchg
mov
xstore-rng
cmpsl
inc
das
push
scas
sbb
fsubrl
out
mov
xor
cmp
xchg
jl
xlat
inc
je
xchg
mov
mov
sbb
sbb
mov
jle
cs
aad
fucomi
lea
cld
add
ss
jl
and
sbb
mov
push
mov
leave
xchg
addb
roll
repz
sbb
dec
pop
and
icebp
xchg
sahf
pop
dec
cmp
test
xchg
dec
jmp
jg
sub
pop
xchg
mov
es
in
xchg
scas
stc
dec
dec
aam
or
nop
and
mov
pop
dec
xor
inc
scas
movl
addr16
mov
insb
adc
outsb
dec
xor
insb
rcrb
push
sbb
repnz
xchg
cmp
repz
in
outsl
adc
xchg
call
jle
mov
jo
inc
xchg
xor
jmp
and
scas
outsl
notl
mov
fdivl
dec
cs
add
pop
push
dec
mov
stos
inc
push
dec
jg
cmpsb
jns
or
rcrb
inc
popf
in
jno
fnstcw
or
mov
xchg
les
mov
dec
jge
xchg
shr
enter
xchg
or
es
or
push
bound
pop
ret
pop
cwtl
jbe
movsb
or
mov
jns
or
mov
sbb
dec
add
jmp
xchg
into
and
mov
mov
cmpsl
pusha
les
mov
in
dec
ds
sahf
adc
int3
pusha
cmp
loop
adc
enter
jo
lock
inc
mov
pop
xor
in
jo
pop
sbb
jle
leave
xor
je
cmp
cli
shlb
cmpsb
sbb
add
in
shlb
sub
in
dec
dec
and
mov
cld
insb
pusha
lret
test
jge
xor
adc
jo
fisttps
dec
cmp
lods
sar
jns
and
mov
sub
imul
cmp
pusha
scas
dec
lea
cmp
inc
sbb
pushf
sub
mov
dec
pop
push
adc
xchg
or
outsl
test
add
inc
fld
call
inc
adc
fists
jnp
and
dec
mov
es
in
mov
ja
mov
out
daa
aam
popf
rcrl
mov
aam
es
je
sbb
mov
out
stc
cmc
insl
push
popf
cwtl
xorb
mov
dec
lea
or
or
adc
cltd
jl
repnz
fsubs
inc
sbb
adc
aam
and
push
xor
arpl
sahf
pop
lahf
jp
sub
fchs
aaa
sar
push
scas
push
pop
xchg
pop
cmp
xchg
imul
repz
outsb
inc
stc
adc
addr16
sub
stos
aaa
dec
mov
and
mov
out
mov
fsubr
pop
cmpb
xchg
mov
adc
pop
jno
push
inc
or
inc
jge
ds
mov
inc
or
mov
inc
lret
push
xchg
and
cmp
pop
jl
data16
out
mov
ja
lahf
lea
imul
jns
int
xchg
and
mov
scas
sarb
xchg
gs
mov
pop
lock
insb
inc
dec
pop
aaa
addl
cmp
pop
sbb
pop
push
sub
xchg
jmp
add
pop
out
and
ss
lea
ljmp
jg
or
mov
jno
fstp
ret
adc
popf
es
add
je
mov
xchg
jno
lahf
mov
mov
fildl
into
jno
ja
sahf
dec
and
jl
jmp
cmp
hlt
leave
or
jo
sbb
adc
into
cmp
dec
xchg
mov
sahf
test
cs
int3
sbb
stos
adc
inc
cmp
mov
lods
adc
pop
sahf
pop
fwait
cmp
jge
adc
nop
jg
pop
cmp
jnp
mov
sti
fcoms
aaa
sub
mov
inc
cmp
inc
inc
add
adc
xchg
xor
and
gs
or
inc
ss
xor
xchg
test
push
lods
add
mov
lds
and
add
outsb
mov
sub
jp
xchg
arpl
xchg
pop
xchg
inc
leave
popa
iret
push
loopne
mov
je
ljmp
sbb
xchg
clc
mov
adc
faddl
ja
into
xchg
in
lret
dec
test
fistpll
pop
shrb
jmp
or
ljmp
pop
sbb
sti
fucomp
arpl
inc
int
sub
push
cld
es
pusha
mov
ficoms
jo
push
mov
push
dec
dec
js
fldcw
inc
and
mov
pop
add
ljmp
or
stos
jnp
call
xchg
xchg
push
insb
pop
pop
das
cmp
jg
jmp
rclb
and
adc
xchg
fiaddl
xor
pop
xchg
stos
lret
push
repz
arpl
lods
dec
nop
iret
scas
add
loop
lea
lds
js
add
imul
jp
add
inc
xchg
push
xchg
inc
pop
pop
imul
out
js
arpl
repz
cmc
inc
insb
jb
and
leave
hlt
out
hlt
ror
pop
inc
xchg
jmp
push
mov
sti
out
inc
stos
dec
loop
push
inc
and
mov
les
and
imul
inc
icebp
lahf
data16
movsb
scas
sahf
mov
stos
or
jl
sbb
xchg
dec
cmp
jb
jge
dec
push
dec
nop
in
or
arpl
or
je
sti
movsl
mov
shrl
loopne
jo
lods
ljmp
lds
jmp
jnp
push
leave
sub
lods
pop
jmp
addr16
outsb
cld
inc
loop
leave
sub
popf
test
jnp
movsl
push
lea
pop
mov
pop
leave
fst
xchg
sbb
pusha
push
xor
out
repnz
adc
fsts
push
jnp
push
call
shrb
in
paddq
fdivrs
cmp
out
push
filds
or
shl
sub
icebp
add
rcr
lods
push
stos
sbb
lods
aas
sbb
std
mov
adc
dec
clc
aaa
push
fisttpl
or
cmp
inc
enter
cmp
adc
pop
leave
push
or
mov
add
stc
add
mov
outsb
push
jle
call
jno
jg
cli
jmp
gs
xlat
cwtl
aaa
add
mov
filds
xchg
stc
js
mov
push
xchg
and
imul
loopne
aad
std
in
jae
mov
clc
inc
das
mov
or
icebp
or
adc
sbb
mov
es
fistl
daa
stos
or
adc
push
cmp
insb
jg
rorb
ja
gs
jmp
jge
cmp
cmpsl
notl
jne
cli
lret
xlat
js
lcall
fisubrl
mov
pushf
stc
push
imul
pop
xchg
xor
shlb
in
js
bound
int3
lds
jl
mov
lds
jg
test
xchg
jb
dec
pop
inc
mov
incb
xchg
in
cmp
rolb
mov
xor
jnp
inc
stos
xchg
mov
inc
fucomip
or
iret
xor
and
push
adc
push
pop
scas
iret
xor
int3
pop
icebp
sbb
lds
push
movsb
fs
sub
mov
xchg
ja
lret
mov
ds
and
push
jno
int
sub
fcoml
lret
xchg
repz
notb
in
inc
jmp
sahf
popa
push
or
push
cmpsb
cli
ss
repnz
pop
push
and
pop
or
rorb
pop
xor
sub
dec
mov
jno
pop
fsts
sbb
out
gs
icebp
jno
icebp
enter
and
sbb
pushf
imul
out
sub
xchg
aas
mov
cmp
loop
sbb
jmp
mov
inc
pushf
scas
xchg
push
inc
shlb
loopne
xchg
fcompl
imul
jge
push
push
cmp
and
xor
dec
dec
int
iret
or
jb
das
into
xor
jmp
mov
dec
dec
dec
imulb
lock
shlb
sbb
push
mov
pushf
stos
pop
movsb
aaa
jmp
sbb
outsl
jb
rcll
mov
push
movsl
jbe
pop
rcl
mov
movsl
stos
pop
lock
loopne
pop
int
jge
insb
mov
fs
sub
popf
sub
stos
mov
xchg
out
dec
sbb
pop
arpl
inc
fidivrs
push
andl
test
adc
sbb
jns
subl
and
and
push
inc
insl
lods
mull
stos
mov
jnp
ljmp
rcll
push
int
pop
jge
push
test
js
inc
fs
cs
mov
jge
in
sub
cmp
sub
mov
dec
das
xchg
inc
negb
mov
dec
dec
cmpsb
divb
mov
mov
pop
push
fs
enter
adc
mov
movsb
fsubs
push
jg
fs
cs
les
lret
ds
addr16
sub
sbb
outsl
imul
and
shll
sub
mov
sbb
jae
iret
pop
dec
sbb
pop
mov
jnp
repz
loop
fs
lds
or
xor
stos
mov
test
aam
xor
jge
and
mov
test
dec
fs
xchg
in
mov
cmc
and
mov
insb
es
or
filds
or
sbb
in
mov
dec
imul
push
shlb
cli
test
mov
into
and
xchg
test
adc
ficompl
adc
aas
aad
pop
cmp
inc
loope
adc
fiaddl
jmp
push
out
xchg
or
xor
sti
popa
mulb
sbb
data16
in
fwait
cmp
or
xor
jmp
dec
adc
movsb
lcall
shlb
or
test
dec
xchg
jae
push
lds
sbb
insl
inc
adc
mov
adc
outsl
sti
or
adc
mov
inc
outsl
mov
xor
or
mov
push
fs
and
mov
xchg
into
push
in
fsts
xor
cmp
fidivrs
mov
jo
push
sbb
push
js
notl
leave
shrl
or
ja
ss
sbb
outsb
cmpsl
fldenv
sub
adc
es
mov
aad
hlt
sub
push
jns
push
sbb
test
adc
xor
dec
mov
and
pop
clc
les
das
rclb
dec
out
fistps
stos
cmp
inc
jmp
cltd
fstp
add
add
or
inc
roll
sub
je
in
dec
adc
negl
arpl
andl
cli
adc
sbb
mov
adc
aaa
mov
cmp
lods
sbb
mov
movsb
xor
cmpsb
dec
fnstsw
dec
shll
pop
lret
mov
push
mov
insb
clc
pop
xchg
mov
mov
push
fs
testb
ljmp
jne
inc
cwtl
jno
inc
fwait
mov
mov
arpl
mov
sbbl
jne
or
jl
add
lods
cmp
inc
test
xchg
dec
cmpsl
sbb
mov
sub
pop
mov
test
daa
andb
fstpl
xor
ja
push
mov
add
lea
xor
or
arpl
popf
sbb
sub
mov
shlb
sub
mov
adc
and
or
cmp
jl
cmpsb
aas
cmpsb
addr16
insl
das
mov
into
mov
cmp
sbb
mov
dec
pop
int3
mov
loope
in
pushf
pushf
clc
pop
xchg
push
add
stos
lods
dec
ljmp
sbb
fs
sbb
iret
mov
xchg
sub
push
mov
inc
pop
lahf
mov
pop
shll
push
mov
mov
xchg
and
pop
mov
inc
push
mov
sbb
sub
lea
inc
in
or
or
sbb
cmc
callw
gs
and
fsubrs
sub
js
inc
add
adc
inc
out
repz
cld
pushf
in
cmc
fistpl
push
xor
mov
cmp
sub
adc
sarl
insl
push
pop
inc
stc
daa
push
icebp
dec
rol
mov
imul
bound
sub
mov
xor
lds
push
fwait
cmp
rcrb
mov
mov
fistpl
and
or
sub
pushl
fs
dec
dec
xor
mov
pop
stos
mov
lret
mov
sub
loopne
mov
add
fs
addl
int
and
sbb
je
xor
aas
in
mov
add
adc
rcrb
mov
xchg
jp
mov
out
repnz
cmpsl
int
cmpl
fistpl
push
xchg
cltd
or
setle
jns
leave
mov
into
movsb
ss
mov
jg
cmpsl
shrl
xor
fs
push
adc
cltd
out
nop
mov
xor
jecxz
jg
lea
sbb
mov
adc
fcoms
push
dec
fs
sahf
in
mov
outsl
into
cmp
xchg
cmpsb
cmp
mov
xchg
mov
jnp
jmp
fs
mov
mov
adc
data16
push
mov
outsb
push
jo
dec
push
pop
sbb
stos
arpl
push
imul
add
cli
and
jmp
and
sbbl
sti
les
mov
stos
aaa
sarl
out
push
dec
inc
leave
or
lret
out
fnstcw
aad
mov
shll
loope
mov
repz
and
in
das
mov
mov
test
jmp
pop
arpl
hlt
sbb
popf
bound
fs
adc
and
xchg
and
sbb
fs
jg
cmp
pop
dec
nop
jl
and
orb
pop
fcomip
out
pop
cld
andb
icebp
cltd
lret
dec
in
xorl
outsl
rcl
jnp
fs
xor
add
popf
xchg
sahf
mov
mov
sub
ds
rol
mov
sbb
add
js
mov
mov
loopne
and
xchg
movsb
scas
sbb
adc
mov
mov
out
lock
addb
lods
fwait
xlat
mov
mov
test
hlt
mov
dec
popa
mov
lahf
and
push
dec
mov
das
hlt
orb
xor
push
fildll
in
sub
sbb
push
mov
xchg
aad
pop
dec
mov
sbb
sbb
je
ljmp
mov
jl
jmp
xchg
sbb
sub
fbstp
fs
pop
hlt
in
mov
mov
xchg
enter
dec
jecxz
mov
lods
adc
push
loop
in
or
hlt
lret
int
es
xchg
xor
inc
sar
imul
fs
push
sbb
sbb
lods
int3
jae
fnstsw
gs
loop
and
lods
mov
negl
insl
xchg
sbb
in
lea
xor
push
fwait
aam
pop
mov
movl
cmp
lret
outsl
fimull
loope
add
lock
push
xlat
jo
ss
pop
dec
adc
mov
pusha
adc
aas
xchg
sub
adc
jbe
mov
xor
or
ficoms
rclb
out
pop
adc
cmp
adc
push
xchg
mov
fbstp
jmp
push
sbb
mov
outsb
mov
sub
jmp
adc
cwtl
add
jae
dec
stos
insb
scas
dec
or
adc
sbb
stc
pop
loop
test
sub
mov
jbe
push
in
jo
adc
fwait
xchg
pop
test
add
push
mov
mov
in
jecxz
mov
enter
xor
xlat
mov
mov
test
sbb
imulb
jnp
cs
in
cmp
fwait
scas
adc
repnz
push
jle
push
or
jecxz
xor
jg
xchg
mov
sub
pop
fwait
in
adc
mov
pushf
mov
jno
pop
dec
pushf
mov
sbb
aam
cwtl
mov
fmuls
sbb
mov
jg
pop
subl
ss
lret
push
pop
adc
mov
lds
mov
jno
aaa
rcrl
lcall
or
mov
gs
out
movsl
push
and
iret
testb
movd
nop
imull
call
sbb
mov
cmc
stc
mov
adc
lcall
popf
mov
mov
rorb
divb
cld
mov
loope
testb
pop
jno
into
xchg
aaa
push
std
dec
mov
sub
mov
fs
insl
add
mov
pop
loopne
pop
push
xor
das
push
nop
push
jbe
lods
inc
test
add
jge
ja
jle
scas
fsubs
sahf
mov
xor
dec
mov
cwtl
mov
jl
lods
fwait
add
adcl
aas
in
mov
call
jmp
dec
adc
mov
push
cmp
sub
hlt
cld
mov
inc
nop
je
pop
lock
xchg
in
mov
mov
negb
adc
icebp
push
inc
mov
insb
out
xor
movsl
dec
loope
pop
inc
sbb
lcall
mov
push
mov
inc
bound
mov
push
mov
sbb
sbb
sub
and
mov
sbb
or
mov
lock
push
xor
gs
jg
subl
icebp
dec
ret
andl
ret
push
cli
jne
push
pusha
rcl
push
jg
in
mov
mov
adc
jle
xchg
sbb
sbb
arpl
test
push
stc
xchg
mov
jmp
ficomps
xor
jmp
pop
sbb
aam
cvtps2pi
xchg
daa
cmp
gs
gs
cwtl
xor
mov
imul
pop
loopne
push
pop
lcall
inc
mov
jo
mov
or
jnp
mov
dec
fidivrl
lcall
xchg
fs
push
mov
jle
lods
xor
sbb
jae
incl
push
sbb
push
insb
ss
mov
mov
loop
nop
inc
inc
fnstenv
lea
sbb
xor
lret
inc
or
mov
mov
shrb
in
and
push
jl
push
mov
cmp
xchg
fs
ficoml
adc
mov
jb
test
adc
popf
das
enter
xchg
ja
fdivrs
out
sbb
jnp
ss
clc
mov
xchg
inc
xchg
aas
or
or
sbb
and
mov
add
insb
mov
out
in
push
push
sub
add
mov
mov
push
pop
adc
bound
shrl
pop
mull
cmp
jo
sub
imul
jb
fcompl
in
scas
mov
ret
outsb
mov
idivb
or
jmp
adc
andl
test
adc
test
mov
jmp
add
aas
lods
xlat
in
mov
jecxz
ja
jle
or
xchg
cwtl
aad
clc
mov
mov
jmp
out
mov
pushf
mov
int
xchg
jmp
sub
push
out
shlb
sub
and
push
and
jg
out
inc
lods
scas
bound
in
hlt
out
pop
test
stos
scas
movsl
lret
sbb
fwait
and
in
jge
mov
xchg
push
cmp
cwtl
push
jmp
push
test
ja
incl
cmp
jg
and
cmp
mov
pop
dec
loopne
mov
inc
std
cmp
and
aas
pop
mov
fstpl
in
add
cmp
mov
mov
fcomi
xchg
pop
jns
inc
mov
adc
stos
sbb
jl
jno
js
xor
or
movb
jae
es
je
sub
inc
add
pushfw
out
jecxz
ja
test
add
inc
repz
mov
stos
lea
jp
dec
sub
ret
outsl
adc
stc
mov
out
test
sbb
add
je
insl
mov
xchg
dec
bound
dec
test
mov
pop
out
xor
jnp
push
mov
loopne
cmpsl
stos
dec
cmp
push
pushl
mov
push
stc
pushf
jecxz
sbb
gs
jl
jns
inc
scas
mov
push
in
idivb
or
fidivrs
or
jecxz
clc
mov
popa
pushf
pop
push
sub
mov
in
jb
mov
or
test
mov
insb
add
xchg
lahf
popf
mov
jne
jo
sbb
mov
xchg
lods
xlat
mov
shlb
addr16
mov
add
jb
adc
sbb
xor
xchg
subb
adc
cmp
outsl
sub
pop
les
test
and
movsb
inc
cmp
in
mov
jo
outsb
cltd
int3
mov
push
ret
inc
sbb
mov
pop
mov
xor
xchg
adc
pushf
cmp
mov
fs
lret
cmpsb
insb
shlb
aas
jecxz
test
lock
orb
pop
test
sbb
pop
inc
stos
adcb
les
sbb
add
shl
repnz
mov
xor
out
lahf
mov
jmp
inc
sbb
outsl
mov
or
sbb
das
xlat
mov
xor
add
xchg
sti
dec
icebp
xorps
pop
cmp
add
pop
dec
mov
aad
out
cmpsl
pop
and
out
push
jg
mov
push
inc
push
cmp
lret
fucomip
add
mov
inc
lods
lods
pcmpgtb
std
shrl
out
push
push
mov
shl
jb
push
cmpsl
xor
das
fs
xor
arpl
enter
jae
mov
je
dec
mov
push
mov
add
pop
mov
jo
jns
fs
push
gs
adc
mov
das
lret
loope
fs
into
xor
pop
mov
pusha
lock
pop
fnstenv
cltd
enter
ret
lds
fmuls
stc
or
daa
and
cmp
shrb
les
pop
pop
jmp
aas
nop
pushf
rcrl
mov
push
mov
inc
pop
cmp
mov
sbb
dec
imull
jge
bound
or
sub
pop
push
jge
outsl
xor
sbb
lds
je
mov
cmp
in
gs
cmpsl
fnclex
imul
arpl
mov
mov
mov
and
nop
mov
sarl
fs
or
and
sbb
or
sbb
inc
cmp
adc
shlb
or
add
and
push
out
stos
jg
cld
add
mov
mov
stc
push
push
sub
addr16
pop
je
cmc
pop
hlt
push
mov
jg
jb
das
xlat
and
mov
cwtl
dec
lods
xchg
fidivrl
lahf
ja
pop
aam
int3
mov
out
push
cs
cld
jmp
or
out
dec
mov
inc
mov
xor
out
pop
clc
lds
mov
inc
pushf
fdivrl
in
popa
mov
fs
je
arpl
aaa
cs
sbb
push
mov
mov
ret
ljmp
stos
jnp
jg
jo
std
dec
mov
push
in
sbb
dec
mov
addr16
outsl
out
jmp
jo
mov
cli
xchg
mov
add
aas
xor
int3
scas
popf
pop
loope
cld
xor
jle
dec
adcl
inc
xchg
mov
sub
in
mov
add
pop
imul
bound
dec
rcrl
pop
popf
popf
cmpsb
pop
mov
data16
adc
iret
fs
jbe
imul
push
dec
fsubl
lea
test
dec
pusha
mov
int3
dec
lods
mov
cmp
mov
and
popa
fs
cmp
dec
adc
dec
dec
mov
dec
dec
es
test
aam
xchg
mov
mov
mov
mov
fimuls
mov
mov
inc
je
lods
adc
sub
dec
push
arpl
adc
mov
and
mov
out
lock
hlt
in
mov
mov
cwtl
mov
xchg
clc
pop
mov
and
fstl
outsb
and
out
icebp
or
xor
fs
mov
test
cmp
mov
adc
or
mov
jmp
pop
fwait
pop
push
popf
jns
mov
out
adc
mov
sbb
dec
cmp
sbb
pop
xchg
cltd
cmp
aas
addr16
aad
rclb
rcll
shll
jo
dec
cmc
decl
sub
enter
inc
add
fs
in
and
lods
sub
mov
aad
sbb
mov
mov
bound
test
pop
sti
adcl
add
push
outsl
xchg
int3
jge
bound
movsl
insl
fs
xchg
inc
lods
mov
mov
cmpsb
push
popf
paddb
xor
stc
int
dec
sbb
push
pop
add
pop
push
or
mov
cs
add
cs
xchg
sarl
xor
out
movb
iret
lret
popl
jae
dec
sub
pop
mov
or
aas
test
nop
cmpb
xor
mov
mov
mov
pop
arpl
mov
aas
push
or
mov
mov
mov
lods
push
cmp
in
cmp
or
cmc
jne
jae
jmp
jo
jmp
pop
xchg
lock
pop
out
and
orb
inc
pusha
daa
mov
sbb
rclb
xchg
ret
addr16
mov
pop
ds
xchg
or
nop
mov
sub
adc
ficompl
mov
into
pushf
push
inc
out
sub
jne
xor
adc
mov
xlat
enter
vpshad
mov
fsubl
sbb
xchg
and
ja
push
cmpxchg
lahf
nop
or
fs
pop
cmp
xchg
lods
adc
into
add
jns
popa
jns
ret
push
lea
lea
mov
sbbl
dec
ret
push
aas
decl
push
idivl
jl
jmp
mov
mov
pushf
iret
ss
or
sbb
xor
std
mov
cli
dec
mov
push
add
into
add
in
int
add
mov
dec
popa
mov
pop
push
loop
bound
sbb
jp
inc
fsubrs
adc
hlt
int
xor
out
mov
stos
inc
in
shll
loopne
inc
sbbb
sbb
test
sbb
adc
fs
cmp
sub
sbb
pop
xorl
mov
or
fisubl
js
mov
jg
add
pop
sub
nop
fs
frstor
lds
leave
cs
mov
cmp
lcall
loop
jne
or
sub
mov
sahf
popa
hlt
loopne
or
cmp
xchg
sti
movsb
std
xchg
sahf
mov
arpl
mull
dec
xor
push
test
sbb
adc
xlat
mov
cmp
dec
xchg
test
inc
sub
and
loopne
sub
and
filds
jns
mov
inc
mov
bound
in
fs
imul
xchg
sbb
xor
sub
arpl
int
mov
push
test
sbb
push
mov
cmpl
dec
sub
test
adc
push
inc
lods
mov
notl
cli
sbb
ds
dec
mov
pop
and
loope
mov
jmp
data16
dec
es
mov
jecxz
jbe
rcrl
mov
cmpsl
loopne
fs
mov
test
dec
insl
mov
mov
sbb
inc
adc
push
ljmp
in
push
fs
add
nop
jo
add
mov
mov
push
clc
shlb
xor
or
pop
sbbb
pop
adc
out
je
mov
flds
mov
jp
cmp
cs
movsl
xor
pop
mov
pop
dec
cmp
adc
lods
insl
xchg
or
enter
lds
in
cmp
fs
fmul
cmp
in
mov
outsb
outsl
and
pushf
mov
sbb
repz
sahf
xor
mov
sbbb
fs
and
test
mov
jl
sahf
cmp
or
pop
test
std
jl
pop
mov
add
jecxz
or
mov
cmpsb
jl
jecxz
outsl
mov
hlt
shrb
movsl
jo
dec
push
mov
fnsave
nop
and
ret
sbb
std
je
loop
mov
mov
fs
std
mov
mov
or
fstl
fists
lds
les
lahf
ss
and
or
mov
sub
shrl
gs
jg
out
jle
mov
ret
mov
mov
bound
xor
xor
repnz
orb
sarb
shl
or
add
mov
xor
insb
sbb
fists
rorl
xlat
imul
mov
adc
int
pop
fcompl
mov
fbld
push
int
mov
cmc
jp
inc
mov
fsub
add
xchg
clc
and
sarl
cld
sbb
insl
dec
and
in
cmp
fs
leave
stc
fisttpll
xlat
push
cmp
das
stc
clc
sbb
insb
icebp
push
repnz
fwait
mov
adc
aaa
inc
inc
sti
adc
scas
mov
fstpt
mov
sbb
or
push
add
mov
push
and
into
pmaxub
sub
mov
mov
mov
mov
sti
pop
dec
mov
sub
clc
mov
jns
push
mov
xlat
cli
rcrb
add
sbb
push
fs
cmpb
mov
lret
mov
imul
add
in
adc
out
jno
int3
les
mov
sub
jns
inc
ficoms
push
fnstenv
or
or
les
push
fdivrp
psrlq
lods
pop
pop
and
jge
pop
and
int3
mov
out
or
sbb
dec
sub
dec
jp
mov
loope
pop
mov
addr16
push
fcoml
or
xchg
sub
movsb
mov
xchg
sub
or
add
mov
js
mov
pop
xchg
bound
cmp
je
mov
mov
out
sahf
pop
addr16
cs
mov
mov
fdivs
sahf
jbe
cs
icebp
dec
mov
jp
insl
shrb
and
xchg
in
ja
xchg
mov
mov
test
and
ds
pop
testl
sbb
cmpsl
sub
sub
ret
aam
ds
jns
mov
nop
xchg
sbb
rcll
inc
push
xchg
pop
test
sbb
push
outsb
inc
add
test
push
push
xchg
mov
psubusb
js
hlt
ja
xor
and
dec
push
arpl
lds
push
js
lret
shrl
and
sbbl
std
sbb
dec
xchg
xor
sbb
es
xor
stos
je
negb
xor
sbb
aam
fsin
int3
daa
lret
int3
mov
dec
dec
push
mov
xlat
lret
rcrl
in
in
sarb
gs
pusha
xchg
push
iret
push
push
cmp
sahf
repnz
inc
mov
push
sub
sbb
inc
xchg
lds
in
rorl
int3
jp
mov
or
jae
pushl
arpl
frstor
or
leave
lret
cld
xchg
cmp
sbb
pop
mov
jmp
push
mov
mov
dec
adc
test
xor
dec
das
xor
mov
add
enter
inc
xchg
xchg
xor
dec
mov
insl
xor
enter
mov
lcall
xchg
sbb
addr16
loop
push
jo
mov
xor
and
into
cmp
rep
js
pop
and
lcall
inc
fs
fimull
ja
or
push
clc
sub
adc
pop
cs
mov
inc
jo
mov
mov
in
and
ja
in
fs
gs
sub
sbb
mov
sub
sbb
lret
pushf
sub
add
xor
in
and
sbb
pop
inc
push
adc
roll
pop
mov
fs
shll
adc
jno
pop
loop
movsl
cli
into
fs
push
jg
inc
cmp
loopne
xor
mov
add
mov
cmpsl
push
mov
mov
cmp
or
ljmp
jecxz
jmp
loop
ss
cltd
dec
xor
mov
jg
sbb
inc
mov
in
cltd
dec
sahf
pushw
cs
test
fs
jnp
fsts
jle
shlb
mov
sub
xchg
mov
into
notb
jno
shl
fsts
rcr
add
or
cld
shlb
sti
out
xchg
pop
test
jnp
mov
or
lcall
pop
jno
adc
imul
sbbb
aad
inc
jle
hlt
and
and
fs
dec
inc
add
mov
push
popf
ljmp
jns
mov
mov
pop
in
test
push
mov
test
inc
lods
decl
pop
test
pop
xchg
cwtl
shll
jl
cltd
inc
jo
andl
jge
push
ljmp
xchg
hlt
cmpsl
xor
mov
lea
bound
adc
or
test
xchg
stos
push
sbbb
stc
xchg
inc
cltd
movsb
cmp
xchg
adc
icebp
adc
or
pop
pop
std
xor
mov
aam
inc
jmp
xchg
mov
adc
dec
fnstcw
sbb
mov
adc
in
mov
pop
imul
sahf
insb
jo
mov
sub
pop
std
mov
and
mov
adc
cmp
ret
sbb
jbe
push
bound
dec
fucom
mov
sbb
inc
iret
add
gs
inc
aas
jmp
mov
push
push
sbb
inc
jbe
xchg
mov
jmp
push
addr16
sbb
or
je
mov
stos
fs
cld
clc
roll
push
es
into
mov
popf
sub
pop
xorb
mov
xchg
pusha
pusha
push
mov
cli
jo
mov
popf
or
out
pop
je
test
aaa
pop
add
mov
insb
icebp
or
fs
jbe
and
inc
jo
sbbl
jmp
xchg
and
dec
or
mov
mov
cmp
mov
inc
pop
hlt
and
or
sbb
iret
dec
jo
jg
push
loopne
leave
shll
mov
imul
hlt
adc
out
divb
fcoml
sbb
mov
lahf
dec
mov
test
std
popa
cmpsb
dec
sbb
sub
orl
cs
mov
inc
sbb
xchg
mov
leave
stos
sbb
or
xor
hlt
push
sbb
pop
sub
push
mov
pop
jmp
mov
mov
test
sbb
gs
sbb
mov
mov
xor
movsl
roll
and
adc
pop
push
and
js
arpl
inc
push
sti
sbb
out
mov
mov
enter
cmp
test
scas
sbb
jmp
add
pop
push
sub
mov
bnd
sbbl
xor
hlt
mov
in
jge
in
je,pn
fs
mov
lcall
daa
andl
movb
scas
out
sbb
and
js
jge
dec
jne
jbe
sbb
fwait
insl
pop
jo
cmp
int3
pop
lret
pop
lret
in
icebp
sub
jge
outsb
push
push
aas
nop
sub
gs
mov
mov
fs
imul
mov
out
mov
shll
outsl
addr16
lret
loopne
jmp
pop
dec
jle
or
cltd
outsb
cli
in
inc
dec
std
stc
mov
mov
jle
sub
or
sbb
ljmp
scas
and
addr16
push
push
loopne
dec
xchg
inc
in
or
popa
or
and
loopne
xchg
inc
mov
enter
mov
cmp
pop
and
adc
fcomps
scas
push
rep
das
fcmovnu
cmpb
sub
jle
ret
xor
ror
shlb
cmp
mov
rcrl
hlt
and
ljmp
fs
in
out
sbb
sbb
mov
cmp
fwait
ja
clc
inc
add
arpl
or
test
fstpl
push
cwtl
mov
and
jl
jns
imul
mov
outsb
call
lret
fcmovnbe
test
out
fsubp
lods
xchg
lock
adc
jne
push
or
jle
inc
xor
dec
adc
sbb
jecxz
mov
pusha
test
je
fmull
dec
sbb
xor
sbb
mov
loope
neg
bound
mov
cld
inc
std
test
mov
enter
push
rcrl
repz
jmp
push
js
mov
popf
lahf
aad
rolb
push
or
cltd
adc
in
scas
enter
push
push
subb
dec
xor
cltd
dec
pop
mov
lods
sbb
pusha
lcall
repz
dec
mov
scas
mov
mov
sub
jg
mov
nop
pop
jbe
gs
push
adc
testb
ds
pusha
pop
outsl
ret
daa
arpl
and
push
or
xor
mov
add
jp
jbe
mov
jae
movsl
cmpsb
sbb
push
jg
xor
xor
or
cmp
pushf
cmp
inc
jmp
test
cmp
sbb
adc
inc
lret
daa
movsl
imul
addr16
sub
lods
out
mov
mov
rcl
imul
mov
or
cmp
sbb
xchg
sti
adc
mov
cltd
cmpsl
xlat
mov
pusha
aas
popa
insl
mov
or
sbbl
and
fimuls
inc
xor
mov
test
call
int
jno
push
ret
or
fwait
jae
xorl
fwait
ret
xchg
push
adc
enter
jne
mov
mov
mov
adc
and
lret
cmp
ret
fs
cld
xchg
sahf
aaa
aas
mov
mov
popa
push
mov
pop
sbb
fstl
addr16
cmpsb
inc
mov
inc
and
pop
js
inc
int
xor
and
mov
or
into
add
push
test
inc
mov
in
addr16
test
dec
cmc
jl
dec
dec
pop
adc
outsl
clc
std
cmp
loope
adc
ret
add
jae
cmc
fstps
inc
cmc
jle
xchg
loope
inc
int3
lods
sbb
fs
and
insl
movsl
cmp
or
bound
repnz
ds
enter
push
into
add
ret
jnp
add
lock
mov
sbb
push
push
pushf
sbb
pop
jbe
push
sub
dec
fwait
adc
pop
push
lea
sbb
lea
sbb
stos
leave
enter
lods
sbb
sbb
dec
push
pushf
loope
mov
lods
aaa
inc
cmpsb
push
xchg
mov
mov
cmp
sti
jl
fs
ret
xor
repnz
mov
sub
push
out
cs
pop
xchg
ljmp
sti
clc
or
jbe
mov
js
pop
ss
add
push
xchg
pop
jno
mov
sbb
outsb
movsb
jae
addr16
rolb
pushf
and
sub
cmc
xchg
movsl
mov
sbb
sub
imul
repz
xchg
jnp
bound
mov
push
testb
mov
ret
aaa
das
negl
or
insl
sti
xor
or
mov
je
dec
mov
test
or
xchg
inc
ss
inc
repz
push
lea
jge
jecxz
push
dec
adc
popa
add
shrb
rorl
mov
sub
push
sbb
pop
ljmp
mov
dec
ljmp
outsb
hlt
push
pushf
lret
sbb
loopne
aam
xor
mov
js
stos
fisubs
lcall
les
sti
sbb
mov
sbb
inc
ss
xchg
loope
inc
notb
sub
in
xor
je
mov
sub
mov
outsl
data16
cltd
sbb
xor
jae
mov
and
shlb
inc
dec
dec
cmpsl
test
cltd
and
dec
je
adc
pop
inc
arpl
sbb
inc
or
jne
push
mov
xlat
lahf
lock
xchg
lcall
jl
jp
movsl
sbb
call
mov
xor
int
adc
jp
stos
xchg
push
or
ja
mov
sbb
jnp
cwtl
mov
ljmp
mov
xor
sbb
lret
xchg
daa
and
sbb
cmp
mov
in
stc
stos
cmp
push
sub
jbe
rcll
mov
cmp
adc
dec
enter
sub
into
jno
and
pop
or
adc
mov
push
pushf
or
out
scas
pop
stos
in
mov
stos
pushf
pop
mov
test
jnp
fs
iret
and
mov
cmp
popa
shll
rol
xchg
mov
fs
outsl
das
es
adc
adc
pop
sbb
add
mov
inc
add
xchg
ds
comiss
cmp
mov
mov
fcomps
jnp
pusha
lret
jb
pop
popf
pusha
pop
mov
and
pop
sbb
xchg
push
loop
subl
mov
dec
cmpsb
push
push
and
and
and
es
xor
and
mov
ret
lods
mov
sub
push
outsl
sbb
cs
sub
xlat
and
push
fstl
hlt
push
fucomi
aas
push
outsl
jle
pop
pusha
push
push
and
push
mov
int3
cltd
lds
sarl
push
idiv
sbb
fildll
es
adc
rorl
fs
test
daa
and
cmc
mov
jmp
or
lret
in
movsb
jl
clc
nop
andb
lret
or
pop
out
stc
clc
sbb
xor
mov
es
fisttpll
add
xchg
cltd
ja,pt
popl
scas
cmp
mov
or
jmp
xchg
bound
or
cmpsl
insb
sub
xor
and
xor
lods
aad
push
test
fs
xor
xchg
jnp
frstor
insb
xorl
mov
negl
mov
rolb
lcall
and
adc
xlat
pop
mov
sub
jbe
jg
cmp
mov
data16
xchg
adc
fs
lret
sub
dec
push
frndint
data16
popf
jb
push
aas
iret
adc
mov
dec
adc
or
pop
repz
push
pop
lcall
or
data16
je
lods
ret
xchg
ss
das
jp
cmp
bound
push
lcall
mov
jo
cltd
inc
pop
test
std
cmp
cld
lods
jbe
hlt
fs
lea
inc
mov
mov
adc
sahf
sbb
mov
movb
rcrb
pop
dec
push
jo
mov
jl
pop
outsb
sub
adc
mov
ja
testb
lock
loopne
jmp
fs
pop
pop
add
adc
cmpl
popw
repz
fbstp
jns
lds
stos
mov
ss
sbb
js
mov
sub
add
dec
cltd
test
in
cmp
pop
sbb
mov
imul
mov
orb
mov
xchg
mov
inc
inc
out
and
sbb
loop
jns
call
mov
ja
nop
cmp
ror
mov
mov
mov
repnz
fmuls
sub
inc
mov
add
or
lret
popa
pop
pushf
mov
ja
stc
mov
mov
mov
je
and
movsb
pushf
xorl
or
pushf
cmc
pusha
je
cli
scas
push
imul
pushf
pop
push
adc
ljmp
pop
inc
mov
or
out
pop
xor
sbb
and
int3
mov
dec
or
or
mov
loop
ret
and
pop
pop
cmp
jo
sbb
xor
mov
fs
divl
lret
pop
call
aad
out
lds
mov
decl
sub
cmp
mov
inc
cmpsb
cwtl
test
pop
mov
cltd
adc
sub
sub
in
mov
das
cltd
push
cmpsl
mov
sub
jp
imul
fidivs
push
mov
mov
arpl
push
xchg
fadd
pop
lcall
mov
cmp
xchg
sbb
aas
xchg
pop
aad
mov
push
mov
mov
lcall
mov
mov
test
mov
sbb
adc
outsb
nop
test
or
mov
fs
xchg
popf
std
mov
adc
imul
lcall
in
cmc
jg
adc
repz
in
out
rcrl
outsb
ss
push
mov
fs
inc
loope
jae
stc
aaa
ljmp
loopne
xor
outsl
dec
xchg
stos
mov
dec
test
stos
pop
mov
loop
mov
cmpsb
push
mov
push
mov
popa
lods
pop
mov
bound
test
dec
xchg
jl
pop
mov
push
subl
lahf
mov
stc
insw
jnp
push
mov
push
aam
xchg
pop
fidivs
inc
shll
mov
xchg
in
enter
fcmovnu
xchg
jne
and
into
and
sbb
cmp
mov
sarb
sub
xor
ds
xchg
add
mov
lahf
aam
cmpl
xchg
sbb
cmc
jne
mov
sbb
and
repnz
jg
shll
mov
call
pop
fdivp
jmp
mov
loopne
mull
and
pop
fbstp
out
mov
leave
mov
push
dec
xlat
cmp
and
sbb
std
push
xchg
fs
sbb
inc
mov
xchg
xchg
out
sub
sub
xor
or
nop
loopne
outsl
mov
cmp
push
ror
cmpsb
cli
ret
iret
clc
mov
xchg
sub
cmp
add
xor
mov
or
push
popf
dec
.byte
.byte
.byte
mov
