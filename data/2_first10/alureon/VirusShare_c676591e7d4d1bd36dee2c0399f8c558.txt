jge
add
cwtl
adc
add
add
aad
add
ljmp
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
outsl
adc
add
adc
add
adc
add
adc
add
add
fcompl
pop
sub
push
xor
sub
lahf
or
hlt
fcmovb
imul
enter
stos
shlb
imul
pop
mov
test
lock
mov
cmpsl
mov
test
mov
mov
cmpsb
cmpsl
insb
cwtl
jns
sbb
mov
fdivl
mov
pop
xchg
or
cwtl
test
dec
out
xchg
mov
or
mov
mov
rorl
out
mov
lcall
sub
mov
jecxz
shrb
rolb
shll
les
lcall
and
and
push
sub
mov
cmp
aam
adc
std
dec
dec
inc
jecxz
mov
adc
xchg
fsubrs
shll
jg
sbb
pop
clc
cwtl
lock
arpl
xor
lret
test
dec
xor
mov
dec
lock
mov
fdecstp
and
mov
push
push
and
lds
xorl
push
mov
cld
or
add
jb
test
call
adc
ret
setle
xor
cmc
and
xor
xchg
xchg
ret
sub
mov
mov
out
xchg
sub
dec
and
push
mov
imul
sbb
clc
js
or
dec
imul
dec
add
pop
mov
xor
rorb
rcrb
dec
adc
mov
int
mov
push
jae
sbb
mov
xor
jg
sub
adc
pop
mov
push
imul
xchg
cmpsb
dec
test
pop
push
daa
ud0
sub
push
aad
fmul
test
sbb
shr
push
push
movsb
dec
pusha
in
xor
mov
sub
jle
es
ss
idivb
inc
outsl
ret
fcomps
das
jb
in
add
mov
push
lcall
adcb
je
cld
insb
fwait
jb
push
in
das
xchg
int3
dec
loopne
outsl
cwtl
mov
add
pop
inc
mov
push
push
mov
dec
arpl
das
fistpl
ret
mov
adcl
mov
and
hlt
sarb
mov
jnp
cmp
insl
jnp
and
flds
xchg
add
jg
lods
sub
cwtl
sub
hlt
inc
xlat
pop
jmp
jg
mov
cmp
dec
lods
cmp
fistps
inc
mov
mov
xor
pop
daa
lahf
jae
and
fildll
ret
dec
add
test
cmp
fstps
arpl
test
jmp
arpl
pop
popf
xor
jb
lock
jae
rcrl
mov
rorb
push
dec
and
lea
pop
repz
adc
sbb
popf
mov
fadd
fxtract
aaa
bound
fisubs
arpl
mov
cmpsl
jo
fisubrs
repnz
or
jb
stos
lea
les
xchg
mov
jecxz
xorb
clc
xor
cli
fs
pushf
pushaw
gs
pop
xchg
out
mov
test
xor
out
scas
push
inc
xchg
test
call
sbb
rclb
add
aas
mov
sbb
inc
into
icebp
or
loope
or
xchg
popf
xor
sub
mov
rorl
adc
or
int3
sub
mov
ds
jno
movsb
sub
arpl
test
jae
fdiv
mov
data16
or
pop
mov
mov
xor
sarb
cmpsb
xchg
push
pop
xor
popf
sbb
push
mov
add
and
mov
mov
mov
pop
lcall
movsl
lcall
xor
jns
sub
neg
xor
add
sbb
add
dec
in
call
addr16
jl
loop
outsb
sub
enter
mov
movsb
std
cmpsl
and
subl
cmp
fs
ds
mov
les
xor
data16
std
mov
scas
mov
icebp
enter
out
xchg
test
push
cli
cmp
mov
mov
and
in
roll
divb
inc
in
sbb
jo
shlb
cmp
testb
stos
inc
add
mov
out
inc
popa
jo
leave
dec
adc
out
push
das
xchg
dec
adc
lock
xchg
mov
xor
orb
pop
or
and
cmp
mov
sbb
inc
add
stos
pop
lret
movsl
jecxz
adc
push
aaa
mov
push
push
xorl
pop
cmpsl
ret
cmp
mov
jae
sub
ret
xor
int
jae
int
mov
cmp
and
adc
outsl
mov
cmp
dec
mov
fcmovbe
mov
push
push
mov
and
push
or
stos
jg
lret
cld
adc
js
xor
insb
les
popf
fsubrl
adcb
test
imul
sarl
fwait
inc
addb
mov
mov
ret
gs
xchg
subb
add
mov
into
mov
icebp
clc
and
repz
adc
inc
and
jl
movsb
push
inc
mov
mov
repnz
adc
sti
sub
out
mov
mov
inc
loopne
mov
inc
xchg
add
fstpl
mov
lds
and
fldenv
pop
push
cmpsb
mov
insl
jns
js
call
xchg
xor
insl
add
push
push
sub
test
daa
adc
push
push
leave
pop
mov
mov
mov
jbe
clc
test
mov
sub
arpl
movsl
popf
sti
cmp
adc
rorl
lods
jle
sbb
mov
jbe
decb
jb
sub
lret
cs
and
ljmp
push
xchg
xorl
int
mov
movsl
popa
mov
aaa
sub
aas
mov
aam
enter
mov
mov
jnp
pop
cmp
das
insl
pop
sarl
sbb
pop
xchg
mov
test
jae
jae
popf
gs
pop
add
pop
pop
inc
and
mov
mov
xorb
pushf
rcrl
stos
pop
cmpsb
xchg
add
js
shll
out
or
mov
sbb
cmpsl
jb
dec
mov
ret
pop
lcall
ljmp
xor
xchg
das
sub
daa
mov
arpl
pop
shlb
sub
and
mov
inc
js
sbb
cs
push
inc
sbb
rcrb
test
rcl
int
stc
xor
cmp
cwtl
out
pop
add
outsl
xchg
ljmp
ja
fnsave
and
lret
adc
mov
sbb
xor
ficomps
popf
pop
cmp
inc
and
jp
ror
jmp
orb
xchg
fldenv
std
xchg
inc
hlt
sbb
sbb
dec
fmuls
push
push
cmc
in
fs
sarb
popf
gs
or
or
adc
xor
pop
mov
lods
fbld
ss
inc
and
inc
or
das
or
cmp
jb
xchg
or
or
pop
xor
arpl
les
cltd
sti
pop
aam
or
and
ret
fwait
out
fistpl
adc
cmp
push
and
push
popfw
in
movsb
les
lret
in
push
jne
jno
es
jnp
adc
push
cmpl
ror
fs
scas
cmpsb
sbb
dec
imul
lea
xor
icebp
loope
or
lds
mov
inc
mov
popf
lea
lock
mov
sar
in
mov
push
add
fldl
call
adcl
popa
sub
lds
pop
sub
xchg
cltd
jecxz
pop
sub
cmp
xor
into
mov
sbb
roll
mov
aad
jbe
pop
testl
adc
xor
sbb
orl
mov
les
cmp
daa
jae
mov
add
outsb
orb
or
fiaddl
add
dec
test
push
mov
xor
xor
and
pop
pushf
leave
movsb
push
sarb
xchg
xor
dec
sbb
and
add
cmp
aas
mov
leave
mov
xchg
loop
out
pop
adc
shll
cmp
jp
test
xchg
adc
fwait
sbb
push
pop
outsl
test
roll
adc
clc
inc
fists
vorpd
shll
cli
xchg
jecxz
mov
fdivs
dec
cmp
or
and
jb
push
daa
pop
push
jne
or
sarl
std
nop
push
inc
jo
jbe
jecxz
and
inc
mov
pop
mulb
bound
mov
jns
xor
nop
das
aaa
push
scas
sub
xlat
popa
stos
lock
or
xchg
mov
mov
and
call
xor
jne
lret
stos
lods
stos
pushf
push
ret
xchg
pop
pusha
add
dec
inc
lods
pop
addr16
lock
jmp
ret
movsb
scas
inc
cmp
fidivs
mov
imul
adc
lods
cmp
insl
xor
das
mov
add
enter
mov
vpcmpeqd
push
cmp
data16
dec
in
and
xchg
inc
mov
jmp
stc
insl
aaa
bound
test
ja
sbb
mov
data16
shl
sub
pop
pusha
pop
sub
loopne
xchg
inc
jo
mov
lods
push
lds
sbb
icebp
mov
mov
or
ret
movsb
xor
dec
xchg
js
js
ret
inc
pop
out
popa
ret
shll
push
pop
xor
cltd
cmp
lods
pushf
inc
outsb
cmp
jg
fmulp
and
mov
fildll
dec
rorb
adc
and
adc
push
pop
fidivrs
sbb
inc
pop
ds
pop
lods
add
ja
arpl
xor
fcoml
or
push
ljmp
div
dec
jo
icebp
pop
jp
cwtl
and
cmc
dec
sbb
adc
pop
outsl
inc
mov
imul
stos
call
mov
movsl
push
imul
lret
mov
pop
enter
shrl
aaa
pop
movsl
jno
outsb
imul
leave
fs
jl
fcmovnbe
sbb
cmp
ja
inc
cmpsb
cli
xchg
jecxz
sbb
sarl
dec
sbb
push
or
cmp
push
ss
insb
ret
pop
mov
dec
js
pop
jb
cmp
mov
dec
pop
loope
arpl
pushf
incb
xchg
pop
and
pop
inc
insl
inc
adc
in
scas
mov
clc
xor
rorb
pop
mov
xor
shrb
lret
mov
xchg
inc
adcb
ja
inc
mov
and
push
mov
or
lea
call
mov
inc
call
xor
push
mov
call
add
dec
mov
dec
inc
imul
call
and
dec
mov
xor
inc
lea
lea
inc
inc
dec
movsbl
inc
movsbl
mov
call
lea
add
dec
mov
call
sub
inc
call
inc
imul
mov
inc
lea
add
dec
sub
dec
pop
mov
mov
mov
add
and
pop
add
movzwl
pop
imul
imul
add
inc
pop
mov
sub
add
mov
inc
mov
and
add
pop
xor
xor
pop
add
mov
mov
inc
imul
call
inc
inc
lea
xor
ret
imul
mov
push
dec
dec
push
and
mov
push
dec
add
push
or
inc
push
dec
inc
mov
add
mov
push
sub
ret
push
imul
lea
lea
lea
mov
dec
push
imul
dec
push
add
call
pop
ret
jmp
sub
and
dec
sub
movzbl
inc
add
xchg
lea
dec
sub
mov
xor
lea
mov
dec
inc
inc
imul
inc
dec
jne
mov
mov
dec
inc
pop
dec
dec
pop
inc
mov
pop
add
mov
movzwl
movsbl
sub
add
mov
movzwl
inc
add
sub
add
ret
push
add
add
mov
mov
or
inc
dec
dec
push
push
push
push
imul
mov
sub
push
sub
imul
inc
mov
mov
lea
mov
mov
sub
mov
movsbl
push
dec
mov
xor
movsbl
inc
push
inc
inc
push
lea
dec
pushl
inc
call
or
add
mov
inc
mov
or
inc
inc
inc
pop
ret
jb
add
xor
movswl
dec
mov
mov
mov
lea
movswl
inc
add
add
inc
mov
inc
dec
mov
add
add
cmp
jb
dec
mov
sub
mov
xor
mov
xor
inc
lea
pop
add
mov
test
jbe
inc
dec
add
inc
sub
dec
inc
lea
lea
dec
add
inc
mov
movsbl
dec
lea
imul
inc
lea
lea
lea
add
dec
mov
and
movsbl
inc
mov
dec
add
movzbl
imul
sub
add
lea
sub
and
movswl
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
dec
inc
and
dec
dec
jne
inc
mov
or
dec
sub
inc
inc
dec
and
lea
inc
lea
mov
lea
add
mov
mov
imul
and
lea
add
mov
imul
lea
test
jbe
xor
lea
inc
add
sub
lea
movzbl
movzbl
or
inc
sub
add
lea
inc
lea
inc
add
add
inc
mov
add
dec
and
add
dec
mov
add
inc
movzbl
xor
add
add
mov
dec
and
inc
mov
mov
dec
dec
movzbl
inc
lea
mov
add
inc
mov
dec
add
movzbl
mov
mov
add
mov
jmp
push
call
imul
xor
and
movzbl
xor
xor
lea
inc
mov
dec
inc
mov
mov
xor
lea
inc
inc
add
shl
dec
mov
xor
inc
sub
push
lea
lea
add
call
sub
pop
mov
add
add
dec
mov
mov
movswl
mov
cmp
je
call
call
lea
iret
mov
dec
add
mov
inc
inc
inc
mov
add
sub
dec
movswl
mov
inc
pop
mov
ret
push
dec
inc
mov
lea
dec
push
and
inc
push
xor
push
mov
push
movzwl
lea
push
inc
movsbl
and
and
inc
call
movswl
push
inc
push
lea
pop
dec
inc
mov
imul
dec
mov
dec
add
inc
dec
add
dec
je
imul
movsbl
mov
dec
dec
xor
mov
add
dec
mov
xor
xor
mov
inc
dec
add
inc
repnz
mov
inc
add
movswl
jmp
dec
add
inc
dec
mov
inc
sub
mov
lea
lea
mov
movzwl
jmp
or
imul
imul
dec
pop
pop
ret
push
mov
add
dec
sub
sub
xor
lea
mov
mov
mov
imul
xor
movsbl
inc
dec
sub
inc
or
movzbl
mov
inc
mov
or
mov
dec
inc
add
dec
pop
ret
sub
imul
mov
lea
or
mov
add
lea
mov
and
add
mov
lea
mov
xor
inc
or
mov
mov
inc
inc
mov
mov
dec
or
movzbl
movzbl
cmp
jb
add
push
mov
and
push
dec
or
push
inc
movswl
mov
sub
or
xor
imul
lea
xor
inc
mov
xor
inc
sub
push
add
xor
dec
imul
mov
mov
lea
mov
inc
dec
movzbl
lea
inc
imul
dec
add
mov
sub
add
dec
dec
movzbl
lea
dec
mov
imul
movzwl
inc
inc
dec
add
mov
dec
imul
imul
inc
inc
cmp
jmp
or
push
adc
stc
mov
repnz
push
mov
xor
outsl
je
loopne
push
int3
imul
scas
das
dec
in
dec
loope
push
adc
mov
push
lret
ss
stos
mov
divl
xor
mov
cmp
add
fidivs
mov
imul
sub
cli
arpl
jg
out
test
iret
jae
jle
xor
pop
pop
inc
jno
pop
fucomp
test
popf
aam
xor
scas
dec
rclb
into
notl
arpl
loopne
and
xchg
jb
jle
popf
add
je
mov
adc
test
popf
leave
mov
movsl
dec
scas
scas
cmp
dec
nop
ret
aad
sbb
out
inc
out
mov
test
fists
sbb
repz
call
cmp
cltd
dec
and
lahf
push
push
mov
mov
fstpl
or
leave
lea
or
icebp
cmp
pop
sub
dec
pop
je
add
push
sub
xchg
roll
pop
jle
lds
pop
cs
test
bound
imul
mov
adc
dec
shrb
enter
xchg
in
sbb
test
cltd
in
xor
pop
cmpsb
sub
mov
push
jmp
es
mov
sarb
xor
inc
and
mov
jl
cmp
cmp
cli
dec
sub
loopne
mov
sbb
xor
xorb
lea
test
push
add
mov
out
scas
test
jmp
dec
mov
out
xchg
pusha
mov
xor
popa
mov
hlt
and
dec
mov
aad
and
sbb
cs
ret
add
mov
jbe
addr16
or
push
mov
js
mov
dec
mov
lret
mov
test
mov
fisttpl
adc
or
fsubrp
cltd
adc
xorb
mov
push
mov
cmp
aaa
mov
jns
leave
enter
push
pop
cmpsl
cld
int3
xchg
xchg
mov
sub
aam
inc
push
les
pop
scas
mov
dec
jle
adc
jecxz
push
arpl
ds
xor
dec
dec
lds
imul
push
loop
pop
ret
pop
std
movsb
jno
sub
cmp
mov
xor
bound
sahf
lret
xchg
lret
sub
rorl
out
push
testb
jl
xor
mov
add
pop
insl
mov
mov
int
inc
cmp
dec
inc
iret
pop
and
push
push
or
hlt
and
or
scas
aam
pop
addb
adc
scas
jbe
xlat
xor
mov
leave
or
mov
inc
push
jb
dec
mov
std
and
and
adc
adc
xor
push
sub
xchg
push
repnz
hlt
shrb
aas
icebp
insb
arpl
mov
imul
or
scas
icebp
mov
dec
push
adc
stos
add
mov
lret
dec
lret
mov
into
push
sti
fidivrl
mov
fidivrl
test
lret
inc
xor
fwait
movsl
lods
movsw
sub
jle
mov
loop
cld
push
sahf
pop
repnz
fwait
out
fiaddl
ja
pop
out
jp
adc
popa
cmp
imul
nop
xor
iret
mov
inc
fnstenv
jne
inc
scas
shrb
pop
outsb
das
cmc
sbb
xchg
push
jno
push
test
sbb
add
imul
aad
xor
adc
inc
mov
and
xchg
sub
adc
nop
mov
mov
fisubl
inc
push
lods
bswap
pop
dec
pop
sbb
iret
sbb
test
mov
adc
sti
pop
xor
repnz
dec
iret
and
dec
cmp
fs
mov
cmp
ljmp
sbb
xchg
lcall
or
mov
mov
sub
xchg
call
mov
push
xor
sahf
push
add
fadds
clc
int3
xchg
sarl
jns
push
ror
push
sbb
and
iret
scas
cltd
call
jae
push
mov
shr
in
xor
mov
mov
cmpsl
imul
or
sbb
mov
add
ljmp
inc
repz
xchg
ss
enter
inc
mov
mov
pop
or
fs
pop
scas
fmul
lods
in
and
ljmp
jno
and
ja
sti
mov
mov
lds
push
sbb
mov
adc
lahf
jnp
je
cld
pop
xor
test
adc
test
add
xor
xchg
and
adc
mov
pusha
subb
scas
rcll
jl
jp
dec
add
fistps
es
inc
setno
popf
xchg
mov
lds
xor
pop
fsubl
xor
add
js
xor
mov
and
das
xchg
repnz
mov
mov
mov
pop
push
arpl
xchg
in
nop
push
adc
movsl
fiaddl
cmp
clc
ffreep
cmp
xchg
push
bound
mov
fisubrs
jnp
sarl
nop
pop
mov
clc
cmp
nop
sub
jg
out
imul
cld
push
stos
pop
daa
mulb
sbb
add
repnz
aas
xor
mov
and
xor
cmp
vsubpd
xchg
inc
push
test
clc
loop
int3
test
xchg
dec
push
jg
xor
xchg
mov
int3
inc
mov
lds
sub
pop
jge
cli
pop
xchg
jmp
or
or
dec
fistps
out
mov
mov
mov
mov
or
add
mov
outsl
mov
jecxz
in
mov
imul
xlat
lods
mov
mov
imulb
mov
jmp
pop
jecxz
psraw
ss
ja
jg
nop
push
movsl
cmp
inc
inc
bound
js
push
dec
in
dec
push
fisubrl
xor
fwait
sub
push
fidivl
xchg
mov
push
loope
mov
cld
jge
cmp
xchg
push
add
test
jb
rorl
orl
testl
mov
push
xlat
lds
adc
nop
add
es
lock
outsl
xchg
insl
or
into
mov
fwait
mov
jge
testb
into
xchg
fadds
inc
jle
fisttps
outsb
add
nop
fstl
dec
test
mov
inc
xchg
jecxz
mov
xchg
xchg
xor
repz
xchg
ds
and
push
lea
cmc
sbb
xchg
lods
cmpsl
fs
add
int3
mov
ret
orl
add
cmp
std
aam
mov
mov
pop
sarl
or
lret
xchg
mov
pusha
xchg
scas
push
xchg
cmpsb
stos
sbb
fadd
push
mov
mov
jl
ljmp
rcrl
in
sub
push
add
out
xchg
cli
jge
aad
add
adc
addb
nop
sub
fildll
mov
add
and
in
jle
inc
or
mov
mov
pop
cmp
iret
ljmp
js
add
lods
test
xor
adc
rcll
pslld
push
data16
xchg
jo
in
test
xchg
aam
xchg
xor
lret
jno
cld
test
mov
stos
iret
push
fdivrl
sbb
mov
cmpsl
shrd
fs
push
pusha
mov
xor
shr
int
fistl
xor
cmpsb
add
or
addl
popa
scas
ss
push
in
cmp
andl
mov
pop
data16
pusha
fistl
lods
jbe
xor
cltd
and
xor
xor
sti
gs
mov
lret
mov
adc
push
cmp
cmpsb
inc
push
jecxz
fldt
mov
stos
mov
loop
add
addr16
push
cmp
pop
addb
out
dec
cli
and
mov
jae
popa
jp
sbb
mov
lods
es
daa
add
arpl
add
imul
add
add
dec
xchg
add
sbb
lods
mov
ss
sbb
fwait
cli
push
dec
pop
subl
dec
imul
lods
add
dec
push
or
jbe
add
repnz
mov
in
imul
repz
add
sbb
and
shrl
pop
jp
flds
roll
sub
in
testb
es
out
push
lcall
enter
pushf
dec
mov
push
jle
ret
and
test
data16
or
sbb
mov
xlat
fwait
insl
lods
and
ret
and
pop
mov
pushf
aam
jge
cmovp
jmp
mov
repnz
outsb
out
jmp
mov
add
sbb
xchg
jno
xchg
sub
sahf
xchg
cmp
mov
lcall
sub
add
inc
sbbb
das
fsub
and
xchg
xor
call
add
adc
jo
jle
and
add
add
addl
push
mov
ljmp
push
loope
and
fwait
hlt
xchg
fsubl
pop
push
lcall
add
mov
loopne
jecxz
out
lcall
shrb
sub
push
and
in
mov
loope
push
arpl
leave
inc
ret
outsb
enter
imul
dec
mov
xor
jae
aaa
inc
test
faddl
dec
xchg
xor
aas
push
sbb
inc
sbb
mov
test
insl
ljmp
jb
push
push
imul
dec
cmp
test
sub
call
add
sbb
icebp
jge
xlat
call
push
inc
mov
cld
xchg
push
rcl
sub
add
lahf
and
loop
or
in
fs
push
mov
pop
dec
adc
xchg
add
add
sbb
mov
add
icebp
mov
jg
mov
std
repz
fadds
jae
popa
or
iret
and
cmp
ss
out
mov
shufps
push
pop
daa
or
jb
arpl
int
push
fildll
or
outsl
inc
push
sub
push
popa
inc
pop
mov
popf
xchg
in
xchg
xor
movsl
and
push
add
test
iret
stos
jp
adc
fiaddl
insl
mov
adc
movsl
sub
aam
enter
subl
and
sbb
push
jecxz
and
ja
jne
and
pop
adc
and
call
mov
cmc
popf
cmp
out
add
flds
and
dec
pop
loopne
pop
push
cmp
and
jmp
and
loopne
add
and
jne
aam
out
inc
mov
xchg
dec
fdivrl
rorb
arpl
push
push
jmp
aad
jmp
jae
pop
in
fldl
or
pop
xor
and
cmpsl
jbe
negb
pusha
sub
shll
fisttps
fcmovnu
jmp
push
xchg
fdivrl
daa
mov
cld
push
pop
lcall
mov
adc
push
sbb
scas
pushf
loope
adc
in
mov
xchg
andb
cld
inc
in
push
mov
inc
mov
push
mov
mov
test
dec
mov
mov
cmpsb
mov
mov
les
sub
int
fistl
inc
xor
jmp
sar
aas
cmp
inc
shrl
jp
inc
movsb
ret
out
fistps
pop
js
jae
sbb
lea
inc
stos
scas
sbb
repnz
and
pop
scas
jo
adc
push
cmp
xchg
adc
testb
or
outsl
cmp
mov
pop
cmp
adc
xchg
push
adc
push
or
aaa
cmp
cld
and
dec
cmp
inc
aaa
scas
push
mov
fs
sti
dec
xor
xlat
scas
push
cmc
dec
sbb
sbb
mov
fldcw
ds
nop
mov
repz
mov
push
cwtl
or
movsb
or
iret
mov
xchg
test
aaa
nop
fistpll
in
lock
sbb
or
es
jno
jnp
cmc
inc
mov
inc
jmp
sahf
dec
andb
xchg
pop
mov
stos
scas
gs
pop
sbb
xchg
jmp
iret
jge
jo
push
ds
cmpsl
cltd
les
out
inc
xchg
insl
add
stc
jno
push
repz
jo
sub
iret
fisubl
dec
inc
add
jp
push
pop
adc
cmpsl
jno
out
xor
sbb
pop
mov
ret
arpl
loopne
stc
ficoms
aas
rclb
test
rorb
mov
stos
push
notb
es
sarl
mov
test
and
pop
mov
mov
enter
jp
push
mov
cmp
or
cltd
je
add
rcrw
les
xor
mov
out
inc
mov
mov
call
stos
leave
dec
lahf
stos
dec
movsb
lcall
dec
adc
cmp
rcll
and
cld
dec
mov
xor
out
mov
int
sub
mov
pop
loopne
pop
repnz
push
jl
add
loopne
stc
add
adc
inc
repnz
adc
outsb
mov
sub
fs
sub
fidivrl
out
mov
jo
xor
shll
mov
leave
cltd
adc
sub
push
cmpsl
flds
lock
aas
xor
jle
out
cs
mov
in
jo
jae
jb
cmp
cmpsl
jle
sbb
lea
out
jbe
jmp
cs
stos
xchg
jne
xchg
push
mov
pusha
xchg
out
or
xchg
out
sbb
mov
push
mov
sbb
and
sti
xchg
lock
push
loope
out
lds
ja
lock
lds
dec
in
ret
in
push
scas
imul
call
sti
inc
adc
add
mov
jp,pt
push
out
arpl
inc
int
bound
push
shlb
cmp
test
jp
stc
andl
jp
pop
cwtl
pop
mov
and
icebp
mov
pop
adc
push
addb
inc
nop
dec
add
out
xchg
push
mov
pop
sarb
mov
sub
mov
mov
movsb
jbe
stc
cmp
shl
cltd
ret
push
or
scas
and
xor
orb
fcompl
jnp
lret
ljmp
push
xchg
mov
popa
xchg
sbb
into
push
arpl
ret
shll
pushf
loop
xabort
fwait
dec
mov
std
into
pop
jp
fdivs
orb
mov
mov
cmp
mov
lret
mov
jns
fdivrs
js
inc
or
sub
andl
fiaddl
cmpsl
call
lea
cmc
sub
xchg
jecxz
dec
in
adc
aas
popf
jecxz
ljmp
push
rcr
sub
repnz
mov
and
sub
stos
outsb
cmp
or
stos
rorb
jb
and
leave
mov
pop
lock
mov
aas
push
dec
out
mov
adc
cmp
shll
jmp
cwtl
lret
and
xor
push
imul
popa
mov
xor
sub
jp
or
or
mov
clc
std
rcrb
mov
push
jns
push
adc
mov
add
mov
pushf
js
pop
push
sbb
inc
testl
push
xchg
add
scas
sbbl
xchg
xchg
inc
mov
mov
xor
dec
in
jb
jno
xor
mov
jle
mov
rclb
push
add
jno
mov
and
loope
loop
xchg
and
mov
lcall
xchg
imul
add
sub
and
xchg
out
xchg
adc
loopne
fdivrs
mov
push
mov
pop
fildl
or
das
jne
mov
xor
pusha
movzbl
ret
les
shl
lods
repz
sub
in
xchg
push
jns
sub
pop
add
pop
aaa
pop
dec
pop
mov
xor
push
or
in
std
lock
lcall
pop
scas
testb
in
test
and
push
inc
lcall
cmc
call
pop
movsl
pusha
andb
push
fldl
rcrl
in
lahf
sub
stos
sub
loope
enter
mov
or
pop
jns
pop
push
cmc
adc
ljmp
adc
icebp
mov
test
xor
push
push
js
test
pushf
inc
push
mov
loope
mov
mov
adcl
sbb
push
cmp
loopne
pop
pop
jae
icebp
dec
in
jle
das
das
in
mov
mov
xchg
out
inc
sbb
mov
inc
push
mov
jle
int
push
or
test
mov
aam
je
scas
pop
or
mov
add
pop
cmpsb
mov
outsl
shlb
pop
or
xor
ja
pop
or
push
ljmp
in
cmp
lret
pushf
xor
stos
pop
sbb
push
mov
sub
mov
adc
insl
pushf
leave
pop
mov
push
xchg
sub
jnp
testl
or
in
imull
test
and
je
inc
xchg
cld
and
ret
or
pop
sar
out
stos
cmp
js
xchg
ret
cltd
notb
pusha
das
adc
inc
sub
gs
into
sub
out
xor
mov
lret
cwtl
sub
add
sti
js
test
mov
mov
or
icebp
punpckhdq
sarl
jmp
xchg
mov
int3
inc
mov
xchg
mov
mov
sub
add
in
mov
sbb
mov
xor
arpl
inc
push
sub
sub
dec
test
add
xchg
inc
xor
and
into
gs
data16
cmp
mov
pop
xchg
subl
cmpsb
inc
rcrb
adc
leave
xchg
mov
loopne
into
repnz
scas
adc
or
nop
rorl
jnp
mov
loop
icebp
addb
push
cmp
sub
js
ficompl
cmp
xor
rcrb
shl
add
hlt
inc
hlt
mov
cmc
inc
push
or
and
das
movsl
hlt
pcmpgtw
aad
push
mov
or
fstpt
dec
push
popf
cmc
add
test
rol
push
std
std
int3
xchg
hlt
mov
inc
inc
insl
cld
movsb
js
jmp
lea
push
xor
mov
push
daa
xorl
daa
xor
fstl
loope
inc
ja
add
inc
rorb
pop
or
pop
fs
mov
iret
xchg
shrl
inc
enter
into
push
std
jne
sub
fwait
je
cs
inc
aas
fdivl
divl
mov
xchg
adc
adc
mov
int
stos
and
cmpsb
cmp
test
inc
rolb
arpl
jns
leave
push
fdiv
and
ds
sub
add
dec
lods
xlat
ja
adc
out
out
jg
inc
pop
subl
sub
arpl
roll
in
ljmp
ficompl
lea
cmc
lock
es
and
cltd
fldcw
mov
rorl
mov
les
gs
mov
mov
lret
mov
into
sar
pushf
lods
imul
int
or
clc
mov
jnp
sbbb
test
dec
jecxz
and
jno
movsl
mov
fidivs
mov
ftst
test
jg
push
hlt
or
cmc
adc
test
push
adc
ljmp
cmp
jo
es
idivb
cmpsl
mov
adc
cmc
mov
pushf
cmp
fimuls
cmpl
fsubrl
ret
fs
add
fcmovne
and
adc
popf
pop
test
aaa
dec
int3
adc
pop
push
aad
or
mov
fdivrs
pusha
push
sbb
lret
test
xchg
add
mov
sar
stc
in
or
jle
inc
push
jecxz
in
out
inc
sub
clc
jb
fcom
push
aad
mov
lock
mov
flds
push
loop
dec
notb
sub
sbb
movsb
iret
adc
rcrl
shll
insl
push
pop
mov
add
mov
fisubl
lcall
cmovno
fistps
mov
test
scas
imul
fistpll
dec
fidivl
jb
or
cmpsl
cltd
add
xchg
sbb
data16
test
dec
jge
loope
mov
stos
jo
out
pop
pop
and
lods
xchg
push
in
fwait
lock
push
dec
or
clc
jle
std
xor
mov
xchg
fmul
iret
and
mov
pushw
iret
or
jle
adc
test
cltd
cwtl
ret
test
ja
mov
je
xchg
xor
sbbl
int3
insl
daa
jl
pusha
out
cmp
xor
jb
jae
mov
sub
out
lahf
stc
mov
andl
lods
xor
lods
lds
sbb
cmpsl
fmull
xchg
test
fists
neg
push
cld
mov
mov
push
mov
adc
js
popf
je
test
mov
sti
out
jnp
mov
xor
hlt
mov
jmp
or
addl
sub
fldt
push
cli
mov
add
push
xor
mov
cli
push
iret
jmp
jb
arpl
rcl
rorb
inc
pushf
jmp
jle
stc
add
jne
inc
xor
add
pop
testb
sbb
dec
dec
hlt
inc
test
mov
aaa
dec
lds
stc
pop
jl
xchg
outsb
test
mov
sub
push
adcb
xor
pop
and
fs
imul
xchg
lret
xchg
rorb
addr16
lds
pusha
sbb
xor
pop
adc
int3
and
test
mov
loope
cmc
add
ljmp
stos
rolb
push
pop
mov
out
adc
push
push
add
sbb
rorl
repnz
das
mov
out
mov
push
pusha
pop
or
dec
or
orb
or
rol
mov
mov
ljmp
mov
faddl
rolb
or
xor
sarb
mov
das
lods
ljmp
into
dec
cmc
icebp
cmpsb
outsb
test
xchg
jmp
or
lods
lret
ds
or
inc
jge
mov
lea
jecxz
dec
lret
inc
adc
out
jl
mov
xchg
fs
ret
inc
test
push
or
xor
jl
inc
xor
and
es
adc
popa
ja
in
mov
lret
bound
dec
add
lea
adc
dec
add
pushf
fmulp
cld
cmp
and
inc
pop
sbb
imul
lods
adc
xchg
test
or
cmp
idiv
ror
push
shlb
xchg
call
mov
popa
scas
cmc
gs
pop
aaa
jle
sbb
dec
aam
arpl
xor
or
loopne
mov
ret
repnz
pop
xchg
cmp
xchg
add
daa
vmovlps
xchg
or
orl
mov
mov
push
mov
ljmp
ljmp
sbb
xor
mov
shll
mov
data16
loope
mov
int3
testb
ret
jle
inc
sar
sbb
es
inc
repnz
push
mov
in
push
std
cmp
fmuls
or
and
lods
xor
jp
fwait
andl
sbb
sahf
dec
mov
je
stos
shlb
xor
imul
addl
mov
fistl
mov
into
push
cmp
roll
ja
or
movsl
in
cmpsb
adcb
sub
cmpsl
or
mov
mov
sbb
testl
mov
jnp
cmp
cwtl
xchg
or
and
mov
jne
lods
into
pusha
lahf
addr16
xchg
arpl
mov
lds
sub
jp
addr16
adc
nop
dec
arpl
stos
inc
xchg
xchg
shrb
sbb
adc
inc
jb
mov
pop
cld
xor
mulb
adc
dec
push
es
js
pushf
imul
pushf
in
ljmp
sub
jl
int
xchg
xchg
fldenv
loopne
adc
movsb
in
sbb
mov
xor
in
mov
and
add
mov
jecxz
jg
stos
add
pop
sarb
icebp
int3
ljmp
cmpsb
fidivrl
sub
dec
dec
sub
jae
leave
jno
dec
add
inc
cs
loop
jp
gs
repnz
in
rcll
xor
push
sbbb
pop
dec
lods
imul
jle
arpl
rclb
test
xchg
ret
push
fs
call
loop
adc
xchg
test
jp
xor
xchg
pop
adc
add
jp
ja
sbb
xor
cmp
sti
fbstp
divl
shll
icebp
negb
and
xchg
and
test
test
aaa
mov
std
mov
addr16
pusha
enter
test
out
push
cmpsl
cmp
ds
push
xor
clc
dec
adc
adcl
xchg
cli
cwtl
lea
or
pop
add
mov
mov
add
sti
sbb
xchg
and
int
and
mov
cmpsb
mov
mov
iret
mov
std
and
fdivrl
cmp
fcom
push
add
push
push
push
cmp
pop
out
ja
adc
dec
adc
fs
stos
imul
push
lret
pop
popa
pop
fmull
and
dec
cmp
ret
incl
lock
pop
jns
mov
xchg
lock
add
or
loop
xchg
ss
daa
push
ret
pop
sub
sti
lds
jmp
sub
push
push
jne
pop
push
sahf
sbb
jbe,pn
aam
lea
repz
xchg
pop
scas
jbe
cmp
lret
pop
add
test
out
pushf
dec
stos
imul
mov
pop
mov
adc
mov
inc
sahf
and
and
and
inc
xchg
sbb
push
aas
or
movsb
push
lock
cmc
adc
lock
pop
std
sbb
dec
insl
and
icebp
pop
pop
aam
sarb
xlat
leave
xor
cmp
and
loopne
fmul
ret
sub
adc
add
jo
xchg
ret
jmp
pop
inc
scas
mov
out
add
jno
mov
xchg
cmc
xor
adc
scas
pop
inc
pop
pusha
aas
sub
cmc
sub
push
out
sbb
mov
out
jns
xor
out
inc
xchg
inc
push
dec
subl
xchg
and
push
or
js
dec
push
pop
jle
dec
sub
je
sahf
pop
sub
aas
sub
dec
ljmp
push
mov
shlb
mov
rorb
loope
not
lcall
and
movsb
sub
pop
xlat
rolb
loop
push
outsb
mov
mov
jmp
shll
mov
add
sbb
adc
sbb
xchg
push
es
sbb
dec
mov
flds
stos
adc
or
xchg
fcomp
loop
xchg
dec
cs
xor
push
aad
mov
cmp
leave
sbb
jnp
sbb
test
mov
jae
sbb
inc
lret
sbb
dec
sub
xor
push
mov
pop
sub
int3
cmpsb
push
pop
repz
loop
test
pop
icebp
adc
shrl
imul
fisubrs
paddusb
in
dec
scas
ss
push
out
fwait
push
inc
fildll
xor
inc
xor
pop
call
mov
int
mov
sbb
mov
mov
cmp
mov
dec
push
mov
lods
loopne
jge
mov
test
fcomp
jno
lret
mov
jl
add
jnp
push
mov
mov
mov
jb
or
sub
mov
cld
cmpsb
lcall
js
add
aad
mov
bnd
mov
int3
cmp
xchg
out
repnz
mov
shr
data16
mov
xlat
and
mov
popf
xchg
movsb
add
daa
cli
lahf
leave
push
das
pop
sbb
or
add
pop
int3
xchg
mov
push
rcll
cmp
push
movsb
mov
jp
xor
and
test
pop
fstp
add
pop
je
ljmp
xchg
mov
lods
stc
das
jl
scas
mov
popf
mov
ljmp
xchg
inc
jno
gs
xchg
or
mov
mov
or
loope
notb
pop
shl
mov
outsl
xchg
pop
fs
in
or
insl
xchg
xchg
sbb
loope
adc
mov
inc
aad
fadd
gs
push
outsl
dec
ljmp
dec
ret
mov
sub
mov
cli
push
cld
mov
and
cmp
mov
xchg
push
add
pop
mov
xchg
call
lods
clc
xor
arpl
sub
stc
fistpl
roll
or
shrb
out
test
push
sub
adc
ljmp
cmpsl
mov
or
inc
adc
bound
das
stos
in
jmp
jg
and
mov
mov
mov
rol
dec
cltd
int
mov
movsb
mov
outsb
mov
and
pop
or
cmp
cmpsb
inc
stos
lds
idivb
mov
lret
outsl
insl
xorb
sbb
jbe
mov
stc
sbb
sbb
cmp
inc
xchg
enter
add
mov
in
push
mov
ret
andb
fldcw
dec
or
data16
dec
and
cltd
cmp
arpl
adc
imul
std
pmulhw
jecxz
rcl
cmpsb
dec
je
inc
jg
movl
call
jae
add
hlt
jno
sub
xor
sub
jg
les
scas
or
cmc
jge
cmp
sarl
movsl
mov
cld
mov
outsl
pop
sbb
data16
and
push
subb
cmpsb
cmp
mov
imul
inc
lods
cmc
out
mov
adc
dec
xor
andb
cmp
loope
stos
rcrl
mov
and
jecxz
push
jp
jl
shlb
inc
mov
adc
rol
mov
and
sahf
pop
cmpl
movsl
fdivs
cs
loop
ja
in
sbbb
push
sti
jle
popf
outsl
scas
push
lret
movsl
fsubrp
in
std
mov
mov
shld
jecxz
imul
push
mov
je
lahf
fwait
inc
punpckhdq
lods
aaa
stos
dec
pop
rcrb
jnp
dec
mov
push
cmp
adc
rol
imul
dec
shrl
jno
jne
pop
jle
fs
mov
pusha
pusha
sub
xchg
rolb
inc
pusha
mov
icebp
dec
mov
and
jmp
sub
push
mov
cmp
sub
mov
xchg
inc
cmp
sahf
lods
xchg
push
enter
and
sbb
jnp
jmp
rolb
stos
imul
shl
sub
sbb
shrl
jo
pusha
ja
sahf
repz
push
xor
inc
push
push
lock
loope
push
push
jo
fldcw
mov
iret
or
or
mov
ljmp
sub
in
icebp
mov
outsl
xchg
and
lea
xor
xlat
call
adc
mov
mov
pop
ds
cs
imul
push
stc
sbb
cltd
sub
sbb
out
jno
and
xchg
into
pop
or
subl
sbb
outsl
aas
test
dec
fisubrl
sbb
mov
ds
out
ja
jecxz
push
mov
cltd
push
scas
ljmp
pop
push
push
mov
testl
insl
or
ja
cmpsl
out
in
js
lods
arpl
iret
fs
sarl
aad
in
outsb
hlt
lahf
aas
cltd
cmp
movsb
inc
push
fiaddl
adc
cmpsl
movsb
cld
mov
nop
outsl
cltd
arpl
divl
leave
repnz
in
scas
leave
fstps
shll
ret
mov
mov
out
out
pop
cli
add
dec
cmp
aad
test
pop
add
xchg
adc
push
mov
fildll
pop
mov
jnp
sbb
je
mov
repz
bound
movsl
push
cmpsw
xchg
dec
movsb
jg
ja
and
loop
out
clc
mov
js
ss
ret
xchg
pop
loopne
cld
aas
push
lea
jnp
mov
jge
cli
in
mov
push
xchg
xor
sub
jbe
pop
dec
xchg
jmp
in
rclb
pushf
sarl
mov
outsl
xor
aas
push
in
sub
cli
adc
insl
or
imul
push
call
outsl
pop
pop
movsl
xchg
loope
sbb
jbe
jecxz
fldenv
push
pop
push
jmp
push
arpl
inc
ljmp
jge
xchg
jmp
cmpsb
sub
movsl
xor
loopne
xor
sarb
clc
ds
push
cltd
adc
cmp
stc
loope
mov
or
mov
pop
sub
outsb
mov
inc
insl
rcll
ja
icebp
loopne
out
xor
cmp
pop
jo
rorb
insl
mov
xchg
mov
dec
or
in
test
test
push
rcrb
lock
add
iret
or
out
inc
popa
aam
decb
cmp
pop
jnp
int3
repz
pop
cmpsl
pop
push
mov
pop
cltd
mov
jecxz
lock
mov
sahf
popf
arpl
cmp
mov
mov
inc
cmp
std
hlt
jecxz
arpl
es
or
or
in
arpl
xchg
flds
sub
loopne
mov
cmp
push
enter
sti
xchg
mov
popf
sbb
push
hlt
push
jge
dec
insb
or
insb
repz
mov
call
xchg
fists
cmc
and
add
cld
mov
out
mov
test
inc
mov
outsl
cwtl
fildll
mov
pop
add
sbb
jecxz
push
fadd
ret
xchg
sub
and
dec
pushw
cwtl
sub
sub
movsw
sbb
inc
cs
xchg
in
jo
jae
in
sub
pop
nop
dec
out
inc
pop
sqrtps
andb
div
push
xlat
sahf
xor
ljmp
push
or
loop
sbbl
sub
aaa
test
add
and
push
xchg
or
loop
pop
hlt
push
mov
or
xchg
imull
or
leave
xor
data16
dec
nop
scas
mov
cmp
pushf
xchg
pop
lods
pop
xchg
sbb
nop
jne
and
mov
adc
sbb
mov
sbb
xor
testb
mov
repnz
sbb
imul
sbb
mov
cmp
xchg
push
push
xchg
mov
mov
std
push
fs
pop
xor
xchg
mov
vsqrtss
repnz
and
es
rcr
out
or
repz
inc
sti
sti
mov
shrl
mov
cmp
sub
inc
loope
movsl
push
popl
movsl
insl
scas
gs
test
rol
stos
cltd
cwtl
repnz
mov
mov
nop
mov
mov
jle
das
cwtl
inc
rorb
decb
cmpsb
cli
pop
and
sbb
push
jp
mov
jg
shll
and
dec
xchg
ljmp
add
pop
xor
movsl
loopne
pop
fcmovb
xor
mov
sbb
jmp
push
pop
fadd
jbe
adc
cmc
mov
movsb
sub
sbb
fwait
cmp
stc
loope
loope
xor
mov
mov
and
jae
and
mov
addr16
or
repz
in
daa
jl
adc
out
call
jle
icebp
aas
arpl
mov
lods
ljmp
pop
test
mov
adc
mov
push
loopne
ret
scas
testl
movsl
add
pop
dec
jne
or
out
popa
sahf
mov
xchg
xor
in
jl
incb
std
xorb
push
jmp
sar
pop
inc
or
inc
cli
aas
cmpsl
xor
cs
inc
cmpsl
jo
and
stos
shlb
test
fwait
inc
pop
lret
mov
inc
xchg
dec
xchg
movsl
shrb
pop
testl
dec
fimuls
cmc
mov
push
mov
ret
mov
insb
ret
inc
test
push
push
sbb
fwait
lret
aad
fnstsw
out
fcompl
outsl
notl
out
es
test
data16
pop
or
js
xchg
imul
pop
int3
in
lods
mov
gs
hlt
enter
out
sub
mov
in
iret
jg
lock
leave
scas
leave
or
xor
testl
in
xchg
dec
push
mov
mov
lret
repz
in
xor
mov
outsl
pop
out
in
lock
xchg
pusha
pop
je
mov
mov
aas
lea
dec
arpl
js
push
cwtl
sub
mov
out
sbb
out
ret
and
pop
dec
push
mov
pop
jmp
mov
push
data16
dec
push
icebp
add
or
mov
jbe
shll
pushf
mov
push
insl
les
shrl
lods
pop
sbb
or
sub
jne
pushf
sub
inc
mov
ss
sub
cmp
stc
hlt
addl
push
xchg
adc
adc
lret
imul
pushf
and
int3
jecxz
mov
je
inc
push
push
adc
sub
aas
insl
adcl
scas
in
enter
jae
lods
pop
loopne
mov
addr16
jbe
pop
sti
dec
loop
add
lock
mov
xchg
popa
cwtl
popa
jno
mov
jbe
aaa
fs
loope
push
sub
pusha
cld
mov
jbe
push
test
popf
test
xor
xlat
jp
pop
ds
orb
in
std
or
pop
jecxz
pop
pop
aaa
testb
orl
int
cmp
inc
xchg
xchg
inc
xor
inc
mov
mov
mov
sub
lock
cmpsb
les
cmp
cmc
roll
pushl
inc
push
push
stos
fwait
dec
and
sub
cld
mov
out
test
mov
test
and
mov
inc
mov
nop
adc
adc
lods
in
xor
inc
loope
jl
push
pop
out
mov
sbb
fsubl
mov
stos
xor
imul
movl
mov
push
bound
fidivrl
sub
adcb
and
xchg
xchg
popa
xor
jp
rorb
sub
shlb
cltd
jmp
stos
xor
iret
sti
or
aam
inc
xchg
cltd
cwtl
and
lea
ljmp
les
daa
push
es
cmc
loop
fcmovnbe
cmc
jb
push
cmp
lods
mov
clc
mov
push
movsl
int3
scas
in
into
jb
jae
int
cltd
push
jbe
xor
sbb
xchg
cmp
insl
pop
mov
fstl
icebp
dec
in
lods
jae
pop
ret
pop
and
add
sbb
jle
xor
push
or
adc
adc
icebp
mov
sub
pop
addr16
in
mov
jecxz
arpl
fs
push
xchg
lods
fwait
mov
clc
pop
out
pushf
testl
add
cmc
sbb
xor
push
rorb
jo
xor
fimuls
clc
pop
das
ficoml
dec
loopne
mov
insl
ret
pusha
push
shll
mov
mov
dec
icebp
lods
stos
arpl
jmp
pop
xor
and
push
add
push
nop
shr
fcompl
repnz
dec
insl
adc
addr16
adc
add
fimull
lea
fimuls
in
out
push
xchg
mov
pop
mov
in
and
push
ret
jne
lret
push
loopne
es
mov
jno
or
arpl
pop
cld
mov
sub
jl
test
mov
int
lds
sti
cltd
addr16
dec
mov
out
mov
cltd
stos
mov
or
and
neg
push
into
scas
sub
icebp
imul
xor
mov
add
leave
pop
stc
in
mov
les
xor
mov
aad
mov
ret
repz
xchg
out
lds
sarb
pop
xor
or
dec
sbb
cmp
test
xchg
pop
mov
and
in
dec
jo
mov
cs
out
pop
stc
jge
or
push
mov
ss
pop
enter
jns
out
outsb
bound
and
movsl
sub
lods
pop
jl
fdivrs
ljmp
pop
out
xchg
pop
mov
fyl2x
cwtl
mov
mov
stos
testb
es
test
cwtl
fisttpl
gs
aaa
cli
push
or
fs
in
repnz
xchg
sub
stos
inc
into
mov
push
inc
lds
shl
push
jp
mov
push
ss
dec
xchg
in
fwait
in
lea
push
inc
xor
adc
popf
clc
or
mov
movsb
xor
ja
inc
dec
and
loop
pop
aaa
loopne
outsl
mov
les
sar
in
stos
loopne
ja
or
loop
sti
mov
jo
popw
fdiv
push
dec
loopne
sub
cld
sbb
push
dec
jmp
repnz
aad
icebp
leave
out
dec
fcmovnb
jecxz
push
add
stos
pushw
stos
stos
xor
mov
arpl
in
dec
sti
fcom
xchg
stos
pop
or
add
insb
push
and
bound
or
cmp
test
adc
popa
loope
jmp
and
and
nop
movsl
mov
mov
add
cmp
sub
jns
outsl
mov
aad
sub
sub
xchg
inc
add
aas
push
sub
adc
aam
orb
imul
push
insb
adc
rdmsr
add
popf
stc
rclb
ret
mov
movsb
push
xor
ss
test
enter
push
pop
cmpsl
loop
sub
xor
out
adc
insl
lret
gs
cmp
or
mov
mov
flds
outsl
xchg
mov
xchg
in
inc
or
fistpll
push
into
mov
pause
mov
enter
jmp
mov
jecxz
lcall
dec
test
lds
fnsave
test
nop
jne
pop
dec
adc
adc
loope
leave
and
int
sub
sahf
adc
sbb
cmp
push
adc
dec
or
jb
sub
sbb
mov
mov
sub
lret
or
nop
jne
dec
lret
mov
stos
add
add
push
ds
sbb
fwait
daa
add
jl
test
mov
inc
add
add
jns
xor
pop
inc
jecxz
push
iret
shlb
mov
inc
cmc
or
aam
mov
xchg
mov
outsl
inc
divb
inc
xor
insl
mov
or
outsl
pop
cltd
cmp
and
xor
add
mov
jecxz
loopne
fucomp
or
pop
and
das
jg
int3
xor
sbb
inc
xor
imul
les
lcall
repnz
adc
cmp
mov
xchg
les
sbb
push
call
clc
mov
enter
ret
adc
or
das
inc
out
mov
call
jne
dec
loopne
xchg
je
and
adc
add
or
adc
add
xor
adc
xor
add
data16
add
add
or
aaa
add
lcall
dec
in
jl
lcall
xchg
rolb
inc
dec
inc
ljmp
int3
dec
adc
push
sbb
or
cmp
mov
pop
ret
push
aas
xchg
in
jnp
ret
lret
lea
jbe
inc
adc
mov
pop
adcb
mov
mov
jmp
cmpb
lret
and
xor
pop
in
xchg
imul
jle
cmc
push
jno
popa
add
sar
nop
movsb
sti
mov
adc
aaa
or
lods
add
mov
sub
xor
frstor
add
jp
mov
lahf
mov
jp
and
scas
cmp
xchg
negb
loopne
sbb
fstps
mov
pop
andl
sbbb
add
fsubr
loop
sbb
jmp
adc
cwtl
adc
adc
stos
arpl
fstp
sub
adc
jle
cmp
jl
push
sub
sub
pop
and
imul
and
cmp
cmpb
fcoms
mov
jp
leave
push
push
xor
and
or
addl
or
mov
clc
inc
cli
mov
mov
mov
mov
jnp
dec
push
popf
mov
sub
cmpsl
push
call
jnp
cltd
out
imul
and
xor
jbe
adc
cli
and
fcompl
cmpsl
icebp
mov
adc
push
aam
aad
enter
mov
jae
sahf
xchg
or
cmpsb
sahf
inc
insl
cmc
mov
iret
mov
inc
inc
faddl
and
push
out
in
mov
push
pop
cmp
and
adc
jl
fstps
rcll
fs
and
sarl
dec
and
sbb
fwait
xchg
aas
lret
or
cmp
fwait
out
popf
jo
inc
push
mov
cmpsb
sub
loope
scas
imul
lcall
xchg
imul
fidivl
dec
xchg
xchg
jne
bound
out
cld
aad
xlat
jnp
outsl
pop
inc
and
test
movl
jns
gs
test
pop
dec
and
and
fs
movsl
xchg
push
mov
xor
scas
jg
mov
fwait
addr16
push
xor
mov
adc
shrl
scas
xchg
pop
jg
mov
test
rcll
push
lret
inc
data16
cwtl
lods
stc
fbstp
inc
mov
dec
or
bound
insb
mov
jmp
call
enter
mov
xchg
ss
inc
jg
pop
xor
pushf
add
xor
std
sbb
adc
add
outsl
icebp
into
out
mov
sbbb
pop
mov
pop
sub
test
mov
xor
stc
test
ret
xor
add
cmc
xchg
pop
and
dec
stos
xchg
xlat
popf
pop
push
mov
repnz
into
adc
xor
pavgw
sub
push
mov
call
xor
ret
jnp
push
and
fcompl
jl
movsl
pop
ret
ret
ja
jmp
lods
fimuls
mov
ds
call
mov
int
fbld
shrb
sbb
je
xor
adc
xchg
dec
cmp
mov
pop
sbb
mull
cvttps2pi
ss
movb
in
mov
jne
and
xchg
adc
mov
push
lods
ja
dec
mov
fdivrl
mov
shrb
xlat
outsl
int
jecxz
jae
and
lea
jae
rcrl
add
adcl
sub
xor
push
jno
mov
minps
popf
div
inc
mov
xchg
bsf
jg
dec
mov
mov
jg
pop
cmp
repz
pushf
cmc
jb
lea
lea
jbe
frstor
cli
mov
fidivrl
mov
and
mov
xor
mov
bound
jo
pop
repz
daa
repnz
shll
xor
push
adc
ja
and
popf
mov
test
movsl
in
fwait
xchg
xor
push
loopne
inc
test
inc
xor
jp
pop
jns
xor
xor
or
mov
insb
loope
filds
shrb
pushl
aas
scas
mov
cmp
cmc
popf
loopne
test
push
mov
push
scas
jg
stos
ret
lods
cmpl
adc
sub
mull
push
into
hlt
mov
or
rcrl
frstpm(287
neg
adc
adc
pusha
dec
ljmp
inc
sub
and
sbb
xchg
sbb
sub
and
call
aam
and
push
dec
lret
cwtl
loopne
sub
aam
cmp
addl
lea
jnp
dec
mov
or
enter
sub
cmpsb
in
xchg
push
inc
cmp
outsb
dec
pop
sbbb
xor
cmpsl
addl
aad
loope
push
nop
xchg
leave
mov
inc
xor
int3
shlb
aas
fldcw
push
mov
stos
or
int
adcb
test
mov
push
jne
sarl
and
ret
in
mov
dec
lock
out
mov
outsb
ss
pop
sahf
pop
and
mov
adc
xorps
test
sbbb
sub
mov
nop
in
xchg
dec
es
dec
fadd
iret
or
into
push
pop
pop
dec
cld
xor
mov
sti
sbb
adc
and
mov
dec
iret
std
dec
incl
mov
pop
mov
pop
mulb
lcall
xchg
xor
jb
loope
cmp
je
xor
iret
mov
bound
fwait
lcall
movsl
in
sbb
test
cs
mov
sub
and
sbb
mov
int3
and
or
sbb
fsubrs
jmp
sbb
mov
cmc
dec
mov
and
cwtl
clc
in
adc
and
inc
cmp
nop
mov
mov
pop
cmp
test
or
mov
pop
mov
outsb
and
gs
stc
jno
cli
fld
mov
xor
sbb
icebp
sub
mov
push
ficompl
loopne
inc
or
push
movsb
jmp
outsb
mov
ss
outsl
fldenv
loope
jne
jg
rclb
dec
cmpsl
gs
add
inc
xorb
int3
push
movsl
aaa
push
std
cmp
rorl
enter
rcll
fcompl
stos
xchg
leave
xchg
sbb
in
cmpsb
ljmp
or
out
rcr
arpl
out
push
das
bound
iret
jbe
in
movsl
xlat
cmp
cmp
dec
fbstp
mov
pop
js
jle
mov
aad
nop
pop
dec
sbb
xchg
inc
pusha
fildll
in
mov
movsl
jp
add
mov
push
fldenv
mov
dec
pop
push
mov
shr
push
mov
or
les
inc
cs
pop
and
sbb
mov
push
out
stos
cwtl
jnp
shll
push
lahf
popa
jae,pn
pop
xchg
sbb
inc
jle
sbb
adc
jmp
mov
in
sbb
movsl
xchg
addl
cmc
or
imulb
mov
hlt
mov
add
push
lret
jmp
insl
js
xchg
dec
and
inc
push
out
jl
test
mov
mov
push
and
hlt
pop
jp
dec
xchg
andb
daa
and
cld
into
in
fidivs
xor
js
out
dec
sarl
out
shll
inc
add
imul
aam
mov
loope
jmp
pop
sub
cs
pop
and
xor
push
or
pushf
es
xchg
mov
sahf
and
mov
sub
jle
sub
sahf
nop
push
cld
and
add
and
lock
ret
pop
mov
into
cmp
movsl
mov
mov
outsb
push
rcr
ljmp
mov
lock
xchg
adc
xchg
adcb
mov
add
aad
sbb
stos
push
outsl
jae
aaa
or
mov
mov
mov
fstl
jo
outsb
scas
inc
dec
mov
hlt
fcoml
leave
aas
and
cs
xor
add
xor
loop
cmp
pop
push
add
xchg
dec
push
add
mov
popa
lock
push
push
pusha
mov
icebp
mov
ja
push
add
sbb
stos
js
dec
movsb
lret
idivl
bound
idivb
xor
int
mov
into
mov
icebp
jecxz
jg
popf
leavew
mov
lock
pop
xlat
rclb
icebp
dec
lods
loope
jne
push
ret
mov
jnp
iret
cltd
ret
and
les
inc
call
mov
pop
cld
movsb
cmc
in
xor
dec
or
jb
stos
jnp
inc
mov
push
fiaddl
push
pushf
pop
adc
loop
dec
xchg
cmp
repz
ret
es
inc
xor
iret
outsl
outsl
cli
rclb
sbb
xchg
add
cld
adc
daa
pop
push
in
movsl
mov
out
mov
loope
inc
cmp
lret
push
movsb
test
sub
cmp
out
xchg
pop
fdivrl
mov
jne
adc
cmpsb
int
or
daa
jle
test
sub
das
loop
fbld
add
jbe
jnp
pusha
cmp
dec
xchg
sbb
cmp
push
mov
cmp
into
daa
mov
jp
insl
sarb
mov
inc
adc
je
outsl
inc
ds
xchg
ss
in
jnp
push
frstor
mov
jle
inc
push
xchg
cmp
adc
and
cld
add
xchg
inc
cmp
cmpb
pop
xor
lret
cli
xor
mov
cmpsl
jp
aaa
mov
test
xlat
add
pop
movsl
pop
dec
mov
fldcw
or
inc
sub
adc
out
in
sub
mov
aad
push
mov
xchg
idiv
clc
or
loop
arpl
sbb
gs
cmc
dec
jae
push
clc
push
std
int
mov
jecxz
sub
lods
std
mov
sbb
icebp
loop
mov
scas
push
daa
mov
sbb
lock
push
xchg
rcl
mov
int
lcall
jle
das
ret
in
cwtl
mov
fdivrs
xor
out
push
cld
jle
lods
in
or
mov
adc
xor
push
icebp
adc
fsin
cmpsb
ret
inc
add
pop
negb
data16
aad
adc
jo
xchg
xchg
inc
pop
sbb
fidivrs
cld
xchg
or
xchg
jl
adc
push
outsb
je
and
testb
inc
aaa
in
sub
outsb
repnz
add
pmulhuw
into
outsl
stc
incl
jmp
push
clc
clc
mov
cmp
jae
fiaddl
inc
iret
inc
loopne
pop
dec
daa
mov
mov
dec
rolb
rorb
aam
push
pop
fidivs
inc
or
pop
out
mov
rcrb
mov
nop
xchg
or
xor
imul
int3
sbb
and
sti
xor
pop
sub
jne
mov
popf
push
dec
mov
or
lock
mov
lock
mov
mov
clc
mov
and
xor
out
cs
enter
jae
sbb
cs
or
fs
add
movsb
sti
mov
lea
cwtl
insb
mov
mov
mov
in
cmp
jle
dec
cmp
mov
adc
out
fbld
std
add
dec
inc
jae
int3
daa
pop
xor
pusha
clc
sub
in
stc
int3
in
in
cmp
sti
ds
mov
mov
je
es
cmp
adc
dec
jmp
cmp
push
inc
loop
movsl
pop
aad
adc
je
lea
mov
mov
sbb
xor
adc
jns
aaa
mov
insl
sub
push
mov
push
or
adc
adc
or
or
lods
push
dec
sbb
pop
cs
push
fcomp
pusha
sub
fwait
pushf
pop
sub
push
cmc
push
cs
xchg
outsb
xor
int
negb
psrld
incb
gs
int3
xchg
jl
xchg
lahf
ficomps
fiaddl
adc
sti
int3
mov
pushf
or
sub
inc
ss
mov
pop
daa
lret
cmp
rcrl
loopne
fcomps
popa
push
lea
add
sbb
mov
mov
add
cld
lods
inc
int3
inc
sub
dec
mov
or
mov
add
xchg
outsl
sahf
push
mov
scas
gs
shlb
les
rcrl
mov
cmp
xlat
cmp
imul
int3
mov
adc
jb
aaa
add
cmp
stos
inc
pushf
cmp
fcompl
mov
or
test
jg
sbb
jae
leave
jmp
push
and
mov
out
jmp
mov
and
aas
push
xor
imul
out
insl
fnstsw
lretw
jbe
aas
mov
out
ret
into
mov
lods
lret
into
in
xchg
aas
mov
jno
mov
add
xchg
loop
push
xchg
in
cmpsl
dec
les
sub
inc
outsb
call
insb
pop
sahf
inc
loop
pop
push
mov
pop
mov
loope
mov
mov
bound
outsb
out
dec
xor
scas
test
adc
mov
mov
iret
pushf
cwtl
pop
push
popa
dec
xor
imul
mov
adc
in
test
dec
xor
scas
jbe
inc
cmpl
xchg
xchg
idivb
out
arpl
notl
sub
adc
xor
stos
faddl
test
orb
add
push
scas
test
loop
push
mov
pop
arpl
ror
jl
push
mov
cmc
addr16
and
pop
int
inc
icebp
mov
dec
jo
lcall
push
enter
cmpsw
in
mov
mov
or
hlt
fistps
repnz
fbld
sarl
xchg
outsl
orl
xchg
xor
mov
fisttpl
das
ret
bound
mov
inc
bound
mov
sub
ss
inc
ja
sub
xchg
movsl
cmp
sub
pop
inc
xchg
ljmp
lods
test
nop
test
pop
mov
movsb
adc
push
pop
lods
cmp
outsl
rol
test
dec
test
jl
test
ja
adc
mov
std
xor
lcall
or
lret
out
push
pop
and
fiaddl
fidivrs
inc
and
mov
in
add
cmp
adc
icebp
or
push
int
mov
sqrtps
popf
cli
xchg
scas
pusha
jl
pop
enter
nop
insl
push
repnz
rcll
pop
aaa
mov
xchg
xchg
jnp
pop
mov
in
add
cmp
sub
pop
test
popa
mov
push
or
inc
test
cmp
or
enter
ss
sbb
push
fidivrs
mov
cmp
daa
lds
repnz
int3
icebp
clc
cltd
test
rcrl
push
int3
in
dec
into
xchg
xchg
inc
aaa
shl
mov
push
inc
cmp
xchg
fs
cmpsb
inc
sbb
cltd
adcl
push
push
and
dec
mov
rcrl
push
mov
test
push
jne
sub
scas
das
movsl
test
call
mov
pop
or
inc
mov
xchg
lods
dec
insl
cwtl
or
cmpsl
cld
negb
jl
cwtl
xlat
insl
outsl
ljmp
shr
cmp
inc
insb
push
dec
sarl
cs
and
les
loopne
mov
mov
movsb
xchg
je
icebp
imul
xchg
push
fstl
or
popf
ss
cmp
daa
inc
jl
or
in
xor
int
pop
test
push
xchg
xchg
out
loopne
xor
ljmp
mov
aas
sti
push
inc
dec
outsl
mov
lcall
in
sarb
and
pop
test
dec
push
pop
cwtl
sub
jl
xlat
rol
push
popf
out
and
jecxz
jecxz
sbbb
out
lcall
pop
cld
shrb
mov
leave
out
gs
imul
lock
dec
aaa
inc
je
push
push
cmp
loop
repnz
mov
aaa
jb
sub
jp
outsl
mov
mov
mov
sahf
push
arpl
xchg
xchg
std
sub
jne
dec
dec
in
pop
pushl
test
mov
jmp
dec
shrl
jae
in
lock
mov
pusha
idivb
and
inc
lods
das
cmp
or
int
sti
push
cli
adc
movsb
or
sbb
clc
mov
inc
mov
fdivs
pop
popf
jg
push
push
outsb
data16
jne
jmp
icebp
imul
and
mov
mov
aaa
imul
add
adc
int3
and
loop
dec
ds
sahf
pop
push
add
adc
xor
pop
testb
pop
adcb
pop
mov
fidivl
dec
pusha
lods
enter
mov
jge
ret
sbb
ja
call
jge
adc
jl
jmp
pop
out
cmp
in
mov
imul
testb
pop
jnp
xchg
mov
or
mov
scas
or
fldenv
adc
cld
push
int3
mov
mulb
sub
stos
xchg
mov
sbb
cld
out
insb
cld
dec
jecxz
pop
pop
sub
lea
dec
inc
je,pt
push
repz
aas
mov
lods
mov
and
aaa
fwait
dec
ret
sub
dec
xor
sbb
loop
fld
sub
xchg
mov
aas
xor
pop
mov
xchg
popf
mov
test
pop
jo
imul
and
xchg
sbb
ficoms
pop
sbb
jnp
scas
aas
mov
xor
popa
lock
or
and
aas
outsl
pop
or
in
rclb
mov
sub
int
adc
lret
ror
aaa
daa
in
bound
test
inc
sub
adc
shrl
dec
mov
addb
mov
ret
retw
pop
mov
mov
mov
xchg
stc
add
fs
lahf
fnstenv
arpl
clc
push
push
sub
pushaw
popf
mov
or
mov
insl
leave
orb
scas
mov
mov
cli
and
jno
sub
roll
inc
out
xchg
lods
lret
in
push
mov
sbb
mov
xchg
and
test
mov
insb
inc
jb
sub
xchg
inc
push
sub
pop
stos
test
adc
stos
push
outsb
push
sti
iret
gs
sar
loop
data16
out
mov
jmp
ret
mov
outsl
inc
enter
cmp
leave
cltd
imul
mov
mov
sub
push
fistl
lock
xchg
fidivrs
pop
add
sub
repnz
mov
dec
in
mov
addr16
sar
xchg
dec
cmp
pop
enter
stos
push
out
call
jecxz
jnp
enter
push
or
xor
dec
std
and
xor
loop
adc
jo
push
cwtl
or
adc
mov
adc
out
mov
jnp
imul
fistpl
rcrl
dec
cmp
gs
jmp
inc
lds
dec
pop
lahf
ss
icebp
cmp
fwait
xchg
aas
scas
sub
imul
iret
ja
cmpsl
xor
shlb
iret
aaa
xchg
push
in
ficoms
push
push
cmc
bound
mov
add
test
sub
adc
cltd
xchg
mov
adc
lock
or
js
imul
iret
inc
not
insb
popa
xor
incb
aaa
push
data16
or
sub
mov
cmc
push
pop
cmp
jle
mov
enter
cmc
xor
mov
popf
outsb
cli
lret
or
fbld
xchg
mov
mov
sub
fidivrl
mov
or
xchg
lret
add
and
add
dec
ret
add
icebp
daa
xor
clc
ret
jbe
mov
mov
cltd
lret
push
mov
cmpsb
negb
push
enter
es
and
dec
xor
xchg
push
mov
aas
test
xchg
addl
xor
outsb
js
or
sarl
mov
in
mov
mov
and
enter
out
outsb
movsb
mov
cmp
mov
dec
cmp
add
sbb
fcompl
notl
xor
sub
push
shll
repnz
clc
test
scas
out
in
cmpsb
js
xor
dec
sub
aas
push
cmp
ljmp
adcl
mov
scas
cmp
and
lcall
jg
jecxz
adc
lret
mov
mov
je
addr16
inc
xchg
jg
mov
into
lods
pop
cmpl
mov
lds
mov
bound
shlb
aad
push
jmp
imul
dec
and
call
ljmp
xchg
stos
xchg
hlt
dec
inc
mov
xor
call
cmpsl
mov
cmp
dec
fnstcw
mov
dec
les
loopne
subb
jns
mov
xchg
rcll
movsb
and
mov
fbld
sahf
movsb
sub
fstl
fdivr
push
imul
cmpsl
push
leave
daa
fadd
fcompl
inc
icebp
sti
sbb
adc
ret
mov
adc
sub
xchg
pop
arpl
cmpsb
int3
and
rolw
cmc
xchg
outsb
repz
inc
xor
push
aad
push
in
ror
and
jecxz
icebp
pop
pushf
int
jns
cli
lock
mov
scas
out
scas
test
dec
mov
data16
xchg
sub
inc
and
cmp
xor
add
dec
test
scas
fisubrl
push
push
sub
add
inc
lods
into
mov
and
call
push
inc
arpl
cs
hlt
mov
pop
push
xor
mov
sbb
shrb
mov
xchg
inc
mov
and
imul
jne
push
adc
mov
inc
out
push
mov
pop
sub
jge
sbb
mov
mov
aad
push
divl
or
loop
mov
push
loopne
inc
aas
mov
sbb
push
push
scas
cmp
ja
mov
ret
sbb
lret
or
imul
pop
jp
insl
jo,pn
inc
fldenv
push
inc
xchg
jmp
stos
in
lcall
insb
xchg
sub
jge
lcall
adc
cli
sub
and
mov
cmp
gs
dec
outsb
movsl
sbb
xor
idiv
loop
fwait
out
xchg
mov
pop
jnp
sbb
loop
sbb
mov
xchg
and
push
cltd
xor
sbb
fs
pop
mov
cmc
sbb
pop
mov
loop
push
xchg
fcmovnb
pop
cmpb
xlat
dec
fidivrs
aas
dec
mov
lret
loop
adc
mov
shr
insb
sahf
mov
in
lahf
push
iret
lea
fstpt
mov
iret
lahf
and
stos
daa
cmp
rorl
leave
ljmp
ficompl
jae
ss
dec
sbb
adc
pop
sub
das
jecxz
sub
mov
ret
je
fidivl
scas
pushf
push
add
repz
pop
add
pusha
jle
sub
sbb
adc
idivb
aam
js
xor
push
sub
push
cmp
int
add
out
mov
push
jle
mov
ss
outsl
mov
mov
jg
push
adc
dec
cmpl
jno
mov
test
int3
adc
jb
idivl
dec
mov
or
mov
stos
or
xchg
out
add
sbb
test
mov
pop
outsl
enter
xorb
jge
and
mov
pop
and
jg
mov
std
insb
in
jns
icebp
out
jnp
mov
mov
and
and
pushf
int3
mov
mov
cli
cmp
cmc
mov
cs
popa
jno
in
daa
dec
ja
push
and
sahf
cmp
mov
inc
push
push
push
mov
and
in
pop
push
add
pop
mov
dec
mov
adc
jno
iret
cmp
push
ret
xor
sub
push
jmp
cmpsb
es
int3
xchg
test
and
sbb
pop
mov
cmpsb
mov
push
fistps
out
xchg
out
int
das
aam
pop
pushf
or
mov
cmp
jmp
mov
or
and
sub
or
jp
dec
mov
push
iret
jl
inc
test
and
call
aam
or
cmp
and
adc
cltd
pop
pop
xchg
push
inc
adc
mov
rclb
jg
push
and
mov
mov
pop
jge
xchg
lea
cmpsb
fcmovbe
cld
mov
test
mov
aam
dec
adc
add
sub
adc
lahf
sahf
in
adc
sub
push
daa
mov
stc
mov
add
int
js
sbb
cld
daa
jne
xor
and
push
stos
loope
movsl
push
add
cli
mov
xchg
movb
adc
jo
mov
mov
js
stc
outsl
test
xchg
jle
push
lods
cmpsl
pop
sbb
into
or
aas
cmp
xor
inc
rorb
xchg
daa
popa
mov
jbe
loope
cmc
or
sbb
pop
lds
pop
das
jb
cmpsl
lods
mov
xor
out
mov
mov
mov
in
cmpsb
das
xchg
imul
jbe
push
xor
mov
aas
cli
sete
jo
dec
stos
xchg
lret
dec
dec
or
pop
cmp
xor
cmp
inc
xor
dec
dec
gs
shr
ret
cmpsb
xor
xor
test
clc
mov
fdivrs
lahf
cs
aad
mov
lds
push
fsub
mov
ja
pop
jno
pop
aas
and
push
adc
ljmp
test
xlat
aam
xchg
adc
sbb
mov
jnp
loope
or
sarb
xchg
out
jnp
call
icebp
xchg
insl
mov
es
sahf
in
ret
cmpsl
leave
outsb
cmp
jp
mov
push
adc
ljmp
cmp
lds
es
add
xchg
dec
ljmp
cmp
popa
adc
ss
sub
sub
jmp
sbb
mov
pop
xchg
popw
xor
and
push
stos
cmp
or
dec
mov
inc
jbe,pt
iret
push
shll
jnp
lahf
push
lahf
sub
pusha
stos
out
add
push
jmp
jno
lods
leave
and
sbb
aas
sysret
scas
movsb
add
dec
mov
cld
dec
loopne
push
inc
lret
das
sbbl
call
jl
jbe
sub
decl
out
sbb
sbb
aad
sbb
pop
add
fldcw
andb
movsl
and
mov
dec
les
push
push
inc
push
call
sti
xorl
mov
mov
daa
js
jecxz
andl
jno
lock
jb
cli
xchg
dec
jns
in
rclb
xchg
push
cltd
popf
mov
bound
mov
jg
sub
pusha
pop
loopne
rolb
adc
cs
ss
sahf
repnz
cmp
inc
mov
call
pop
gs
xchg
hlt
pop
adc
jnp
push
jne
bound
mov
push
fdivrl
push
push
cmpsb
int
cwtl
add
push
jo
sti
test
xor
into
pop
stc
cmc
xor
mov
mov
adc
xlat
xchg
and
ret
lret
sti
shrl
movsb
push
in
mov
mov
out
loope
scas
xor
jo
sbb
addb
repnz
push
mov
in
xchg
mov
cmp
notb
inc
pop
mov
lods
and
mov
add
xor
jbe
addb
fwait
bound
lahf
xchg
adc
mov
mov
jp
or
fwait
xor
jno
add
jne
inc
jg
or
pop
fcompl
adcb
ja
pop
mov
fsubr
hlt
mov
mov
pop
inc
add
lret
icebp
xor
adcl
je
pop
push
loopne
stos
adc
mov
mov
xchg
or
sarb
cmpsb
ja
clc
scas
std
scas
aas
or
cld
xlat
pop
xchg
in
xchg
insb
mov
mov
cwtl
add
idivb
mov
mov
mov
lods
mov
imul
xchg
or
mov
iret
jmp
xchg
pop
adc
stos
jmp
jne
aas
sub
add
add
fstpt
push
add
pop
and
stos
pop
imul
push
in
mov
cmpl
cmp
in
movsl
cwtl
add
xchg
lock
imul
jbe
or
sub
or
insb
out
mov
cmpl
xor
cmp
sarb
out
xchg
jb
sar
jae
mov
or
mov
sub
mov
jae
call
mov
push
pop
punpckhbw
es
push
push
ds
rcr
add
adc
daa
pop
jo
jmp
clc
loop
test
je
mov
and
xchg
xor
push
or
test
dec
int
ficoml
lret
jle
lahf
mov
sbb
and
sub
mov
add
adc
daa
sub
loope
in
sub
leave
xchg
in
mov
inc
stc
xchg
test
adc
leave
push
mov
pop
gs
insl
xchg
fistl
jo
nop
fbld
int3
pop
aaa
enter
in
pop
sub
lret
test
fildl
cmp
lcall
cmp
ja
push
xchg
or
pop
int3
in
mov
sti
jae
lods
leave
cs
and
xchg
mov
mov
clc
sub
cmp
das
loope
pop
stos
gs
dec
jbe
call
xchg
data16
pop
insl
lret
dec
pushf
repz
xchg
sub
cli
pop
test
push
mov
or
repz
and
lods
cmp
jb
fwait
dec
icebp
mov
lea
popa
jbe
push
into
loop
js
inc
ja
mov
lahf
mov
jb
aas
dec
mov
jmp
icebp
imul
mov
movsb
push
xor
mov
cs
imul
pop
jmp
or
jae
sahf
stos
stos
mov
jb
mov
and
push
pop
lcallw
xor
adc
fcoml
pop
dec
pop
push
pusha
aas
daa
inc
xor
jne
fstpt
or
cmpb
adc
daa
jno
xor
fisttpl
out
cltd
cwtl
xor
mov
push
shl
or
jo
mov
mov
adc
mov
and
lret
repnz
sbb
mov
push
vmovhlps
or
sbb
scas
aam
and
rol
push
mov
bound
adc
punpcklwd
cli
xchg
popf
int3
jmp
mov
xchg
sbb
jg
mov
jp
mov
jae
mov
mov
insb
int
or
inc
clc
inc
movsb
push
mov
stos
stos
rclb
xor
cmp
mov
pusha
loopne
dec
inc
and
mov
sub
shl
pop
jae
imul
jmp
out
pop
insb
cmp
fstp
jge
orl
add
arpl
fldl
popf
daa
push
lret
add
inc
mov
push
jge
mov
inc
add
mov
jae
enter
test
dec
cmp
and
jno
cmc
addr16
xchg
inc
sub
sbb
inc
jecxz
mov
lret
jne
and
ss
xor
in
pop
xchg
sti
push
sub
ret
inc
in
adc
jecxz
repz
into
dec
movsb
add
mov
rcl
cltd
cltd
push
stos
mov
jecxz
inc
pop
dec
xor
int3
fbld
rol
cmpsl
dec
pop
out
arpl
mov
test
imul
mov
mov
push
mov
jmp
dec
dec
xchg
arpl
inc
fst
lods
sahf
clc
movsb
shll
js
mov
mov
xchg
test
subl
jne
xor
lods
repz
sub
sub
adc
mov
sbb
pop
test
arpl
cwtl
jge
andb
and
xor
aam
push
xlat
add
pop
xchg
insl
mov
mov
stos
sbb
add
sub
cmp
mov
xlat
mov
cmp
xchg
xor
ret
add
in
pop
cmp
jmp
pmaxsw
in
sub
loope
cli
mov
inc
lret
inc
repz
jnp,pt
ja
sub
push
xor
ljmp
add
insb
jg
sub
in
out
push
sub
mov
push
jecxz
js
mov
push
leave
adc
xor
popf
mov
lds
sub
xchg
in
sub
mov
pop
and
lock
stc
call
mov
sar
repz
mov
aam
ljmp
lods
arpl
xor
add
mov
xchg
dec
call
jne
cmpsb
push
cmp
mov
jne
mov
pushfw
fisubs
jb
lods
sarb
shrl
sarb
int
sti
int
in
imul
jl
cmpsl
push
xlat
enter
fimuls
mov
or
cli
sub
test
cltd
fisubrl
mov
mov
xchg
outsb
jmp
lea
adc
mov
loop
lods
add
scas
xchg
lcall
jle
test
xor
add
jns
mov
sbb
shrb
loop
insb
daa
mov
sbb
xor
lcall
mov
xor
es
jbe
sub
es
xor
daa
loopne
and
and
lods
popa
push
mov
jo
test
mov
je
mov
jecxz
mov
ret
hlt
mov
mov
jo
cmp
jmp
mov
sahf
pop
incl
mov
xlat
pop
out
std
push
stos
dec
pop
mov
ljmp
ss
adc
bound
mov
adc
pop
cmp
pop
mov
sarl
inc
cmc
dec
mov
jbe
add
test
ss
in
mov
shlb
faddl
ficomps
ret
fldl
cmpsl
jnp
lcall
jmp
divb
jmp
leave
mov
scas
loop
cltd
add
leave
imul
mov
mov
inc
push
fs
outsl
lret
cmp
inc
stc
test
scas
add
cmpsb
pusha
cmp
repnz
and
test
cwtl
das
inc
stos
push
and
jbe
es
xchg
rcrl
jne
std
insb
lret
jne
jne
decl
mov
mov
stos
lds
push
aas
cmp
xor
sti
fsubrs
and
fcomps
xor
or
or
pop
mov
xor
xchg
ljmp
arpl
mov
push
or
mov
ret
out
mov
mov
call
push
cmpsl
hlt
incb
and
or
decl
adc
dec
jae
mov
insb
outsb
fldenv
xor
imull
mov
roll
lret
xchg
jo
shl
nop
cmpsl
jp
mov
adc
or
loop
gs
dec
aad
ret
insl
inc
out
jns
leave
les
sub
ss
out
pop
aad
test
out
pop
testl
push
repnz
out
sahf
adc
pushf
mov
rorl
loope
out
or
dec
ds
jne
lret
popa
xor
xor
pop
mulb
or
out
data16
lret
pop
xor
ret
fistl
cs
shll
ds
dec
mulb
cli
scas
sbb
dec
xchg
sub
test
rcll
nop
imul
dec
jg
xchg
push
popa
adc
jae
push
rorb
js
int3
mov
hlt
mov
fstpl
orb
out
mov
daa
fimuls
ds
xchg
mov
jo
mov
mov
in
mov
mov
imul
fs
fucomip
mov
insb
xchg
or
test
sub
lret
cld
roll
scas
jne
sbb
test
pop
and
sub
pop
scas
dec
in
fsubl
lods
lea
pop
push
jle
mov
xor
push
ja
in
stos
inc
pop
pop
cmpsl
mov
lock
aam
inc
cli
pop
jb
out
movsl
jbe
adc
or
aaa
incl
lret
clc
stos
pop
test
inc
inc
add
inc
cmpsb
pop
fldcw
jb
xchg
add
lods
mov
xchg
hlt
pop
pusha
lock
insl
sbb
repz
and
sub
dec
jp
shlb
jne
sahf
dec
loopne
roll
jnp
push
dec
jmp
mov
or
add
xor
les
mov
jecxz
adc
xlat
out
jecxz
out
sub
mov
or
mov
xor
or
into
xchg
into
inc
clc
in
dec
cmc
sbb
fistpl
sar
ds
imul
les
jo
ret
pop
int3
dec
push
and
fs
xchg
add
idiv
aaa
loop
nop
nop
nop
dec
mov
xor
sbb
and
pop
cld
and
call
and
icebp
arpl
cli
lret
mov
outsb
or
push
mov
sbb
sbb
xchg
add
loope
xor
lods
inc
dec
pop
pop
pop
dec
adc
and
push
jg
call
loopne
sbb
mov
enter
stc
leave
xor
mov
add
leave
shrb
mov
subb
es
push
dec
push
cmpb
mov
gs
mov
pusha
aas
mov
or
insb
aaa
lret
push
xor
push
cmp
xchg
fisubl
cltd
int3
test
daa
and
repz
cli
xorl
lea
mov
out
xchg
cmp
je
lcall
scas
pop
mov
push
push
mov
loopne
xchg
add
addb
jmp
imul
sub
lods
adc
ret
dec
cwtl
icebp
dec
inc
ficompl
fsts
lcall
aam
rcrl
xor
jmp
mov
imul
add
hlt
pop
adc
jle
dec
or
sti
mov
mov
cmpsl
lret
sbb
rclb
sbb
and
or
mov
and
dec
mov
xchg
setbe
imul
scas
jmp
sbb
jmp
orb
testb
dec
ret
inc
mov
push
xor
mov
push
mov
jne
push
and
mov
mov
bound
lcall
cmp
mov
or
jle
aaa
sub
jge
mov
add
mov
mov
cmp
sub
jb
mov
sbb
ror
cmp
loop
adc
xor
decl
pop
dec
rcrb
push
xlat
mov
fst
inc
gs
jno
xchg
test
mov
sub
mov
inc
and
decl
or
add
insb
cmp
mov
jbe
cli
dec
add
mov
in
cmpsl
fwait
out
and
xlat
push
test
bound
sbb
mov
or
cmp
xor
and
or
ja
sub
pusha
inc
aas
bound
fcoml
xor
sub
mov
outsl
xchg
and
jnp
leave
stos
dec
jl
xlat
xlat
mov
in
lret
packssdw
xor
les
dec
cmp
daa
mov
aas
jb
adc
roll
ljmp
imul
push
adc
xor
dec
arpl
fwait
in
mov
repnz
mov
sbb
jle
sbb
cmp
loope
mov
pusha
rclb
ds
and
sarb
sahf
leave
repz
push
fcomi
add
push
arpl
fildl
sarl
sub
imul
adc
dec
test
mov
xor
mov
cmp
mov
fs
out
shll
and
ljmp
sbb
dec
mov
xor
jmp
fs
xor
mov
clc
push
ja
fwait
mul
push
je
mov
out
xchg
push
andb
and
adc
dec
icebp
lea
xchg
or
xor
sub
fisttpl
mov
sbb
jl
cmp
jns
push
xor
mov
imul
push
push
icebp
test
xchg
sub
lret
mov
inc
inc
push
mov
jae
int3
mov
cli
fdivs
xor
adc
xor
loope
add
movsl
mov
clc
das
and
fiaddl
pop
push
mov
mov
scas
inc
fmulp
mov
add
push
sbb
xor
dec
fiaddl
add
mov
and
loopne
jo
out
inc
popf
addr16
mov
js
stos
cwtl
lods
or
mov
mov
pop
pop
or
je
cltd
jns
pop
push
mov
dec
inc
adc
or
aad
pop
ja
sub
lea
xor
jb
mov
outsb
imul
mov
fsubr
jbe
popf
mov
cmp
pop
sbb
add
push
ret
test
mov
sub
loopne
jl
sarl
mov
xchg
outsb
nop
adc
shll
je
mov
out
dec
ljmp
out
mov
js
sub
cmp
add
addb
cltd
lcall
or
xor
dec
int3
pushf
rcrb
fwait
pop
pop
out
mov
mov
xor
das
add
loopne
xchg
leave
mov
ds
in
leave
xchg
sbb
xchg
pop
add
es
push
repz
outsl
popf
arpl
stos
ficoml
into
push
in
push
pop
js
push
ja
or
sti
outsl
dec
xchg
shr
andb
pop
pusha
test
call
pop
cmp
cmp
sub
fwait
adc
mov
pop
cmp
add
insb
std
pop
and
ds
enter
gs
loopne
fsubr
out
mov
sbb
popa
push
mov
aad
bound
js
daa
sti
cltd
xor
dec
or
push
mov
lods
stc
insb
fists
cmp
xchg
lea
sbb
push
push
mov
jp
adc
push
inc
arpl
push
mov
fidivl
sub
in
test
out
test
popf
push
or
cmc
xor
push
xchg
call
mov
test
cmp
out
repnz
out
div
popf
rol
xchg
scas
lcall
rol
pop
add
pop
fs
mov
fs
mov
mov
inc
sbb
sbb
mov
adc
jae
sahf
adc
xlat
bnd
adc
add
inc
pop
jo
cmpsl
push
out
jns,pt
fisubs
aam
out
cmp
fiaddl
mov
lret
mov
out
mov
mov
in
aad
out
enter
mov
rolb
cmpsl
xchg
jnp
xchg
into
data16
in
jb
sbb
flds
pop
fs
rolb
jl
mov
push
scas
cli
mov
lods
test
loopne
push
int
mov
xchg
fldl
mov
cltd
cmp
cmp
adc
mov
pop
push
or
out
adc
scas
push
add
sub
in
dec
sbb
fsubrp
and
mov
stos
pop
sbb
pop
mov
mov
mov
jmp
adcl
push
mov
repnz
push
mov
xor
jl
pushf
int3
mulb
test
pop
outsl
shll
mov
mov
cmp
repz
mov
cmpsl
sub
mov
xchg
pop
mov
xchg
fnstcw
aam
push
and
repnz
repnz
mov
filds
shll
jl
arpl
xchg
mov
push
ljmp
mov
push
adc
mov
mov
push
lret
jmp
insb
xchg
xchg
stc
leave
int3
mov
mov
inc
sbb
dec
sarb
das
out
arpl
mov
jne
pop
inc
jb
pop
cwtl
es
push
int
xchg
mov
pop
pop
imul
rcl
testl
or
dec
arpl
pop
or
xchg
mov
pop
lds
mov
xchg
loope
adc
dec
push
jno
clc
scas
inc
repz
xchg
inc
mov
jne
gs
fsubrs
jmp
mov
gs
dec
jmp
push
enter
add
pop
xor
nop
push
xchg
popa
js
xchg
les
cmp
addl
xchg
adc
enter
lock
addl
adc
iret
decl
ss
mov
dec
popf
cmp
sub
scas
xchg
or
js
push
ja
adc
dec
cmp
adc
push
nop
add
add
push
in
lcall
insl
test
enter
mov
loope
xchg
sbbb
cmp
and
ljmp
push
sti
xchg
sbb
sbbb
xor
mov
push
int
das
and
jo
push
sbb
mov
add
fsub
or
xchg
jns
pop
dec
outsl
popl
pop
cmc
pop
movsb
sbb
jbe
pushf
rcrl
roll
and
dec
stc
pop
inc
xor
sbb
pusha
es
sahf
fcomip
std
and
xchg
ljmp
call
in
mov
shl
andl
adc
push
popf
stos
stos
jge
mov
cmp
jnp
dec
push
jns
sbb
aad
testb
in
and
fmuls
sti
addl
lret
mov
pop
rcl
inc
dec
adc
pusha
add
nop
daa
das
shlb
and
xchg
fcoml
mov
push
jnp
leave
and
add
aad
outsb
ret
mov
mov
push
xor
in
aad
pop
loop
cmp
test
mov
mov
adc
mov
inc
sti
lock
imul
addr16
pop
push
adc
out
clc
or
push
rcr
pop
std
data16
shll
pop
jbe
dec
push
push
jp
push
xchg
adc
push
pushl
or
mov
mov
pushl
sti
sti
cmp
rclb
fisubrs
push
shufps
fwait
out
dec
xlat
sbb
loop
dec
leave
cmp
and
addb
mov
es
pushf
sub
cmc
addr16
xor
pop
pop
mov
pop
add
push
or
jno
sbb
push
into
repz
sbb
mov
sbb
sahf
test
push
push
push
mov
mov
fisubs
arpl
adc
ds
add
push
into
insb
fistps
icebp
dec
jge
test
jl
or
push
cmpb
or
adc
push
xchg
cmpsb
in
push
loope
rol
imulb
cwtl
cltd
lea
pop
test
lahf
in
dec
shrb
fstpl
push
or
ds
pop
inc
mov
mov
add
and
fidivs
or
mov
mov
push
pop
xchg
aas
xchg
gs
jo
and
adc
stc
xchg
adcl
jae
cmp
mov
jge
rcrl
mov
outsl
jns
ss
in
and
xor
out
lods
cmp
repz
jl
cmp
and
outsl
push
inc
mov
add
jle
mov
push
ficomps
xor
add
aam
jl
out
das
out
and
faddl
stos
push
xchg
insb
dec
imul
or
out
jmp
in
das
jp
loopne
shrb
test
stos
test
in
sub
lret
mov
inc
or
and
inc
lret
mov
enter
mov
mov
cmc
fs
fdivr
stos
jnp
push
sub
test
sub
addl
mov
xchg
xor
cmp
inc
inc
and
adc
mov
mov
stc
mov
int3
addr16
mov
nop
stos
inc
or
in
popf
adc
push
mov
repz
xor
mov
and
fisubs
cmp
fisttps
cmpsl
jle
pop
lods
cmpsb
cmp
pushl
sub
pop
call
aas
pop
sbb
pusha
sbb
test
mov
daa
sahf
and
mov
push
lret
jl
daa
jne
movsb
mov
outsl
out
cmp
inc
jbe
sbb
dec
mov
shll
mov
cmc
adc
add
sub
pop
jne
cmp
sbb
call
lock
int
pop
lods
xor
aas
sbb
dec
xchg
aaa
push
ret
sbb
pop
andb
cld
out
rcrl
adc
ljmp
ss
das
adc
daa
pusha
icebp
outsb
inc
xor
sahf
or
div
sahf
jl
mov
mov
cmp
sbb
jge
push
jns
mov
test
inc
aam
jae
lret
dec
push
pop
outsb
fs
mov
aad
mov
sahf
push
xor
repz
inc
outsl
cli
test
cmp
out
mov
in
enter
mov
mov
les
push
mov
divb
sub
adc
xor
divps
aad
inc
es
push
pop
cmpsl
lods
xchg
pusha
rcl
adc
movsb
push
icebp
jne
decb
pop
push
cltd
subps
push
scas
or
xchg
sub
mov
in
lds
jae
test
lahf
xchg
fcompl
in
icebp
mov
daa
out
out
nop
rcr
jbe
xlat
mov
movsl
and
sbb
pop
out
xchg
mov
and
jge
mov
sub
pop
pop
pop
sbb
cli
jl
jo
and
je
lcall
cltd
test
fst
cs
fwait
or
add
mov
cs
pop
sbb
aam
jle
push
aam
inc
aad
pop
mov
adc
lods
es
in
lea
cmp
pop
sub
aas
xchg
insl
cmc
lret
mov
push
or
ljmp
push
arpl
popf
aad
out
mov
mov
pop
pusha
mov
or
xlat
cwtl
push
pop
jo
scas
jbe
mov
lea
jbe
fadds
ficoms
daa
inc
and
pop
mov
inc
xor
sub
in
subb
testl
popa
in
dec
mov
lock
jb
ljmp
sahf
inc
clc
iret
push
cmp
ret
dec
aaa
hlt
ficompl
or
pop
push
push
jns
jecxz
and
fdivs
push
pushf
mov
and
xor
ja
call
out
mov
sbb
cmp
out
cli
fs
xorb
cmc
popa
pop
dec
fwait
xchg
push
mov
dec
roll
out
dec
out
xchg
or
out
hlt
ss
mov
idivl
mov
push
jp
cs
xor
das
jmp
jp
mov
test
mov
into
leave
xlat
lds
jns
mov
aam
add
and
push
xchg
adc
insb
iret
shrl
xor
add
mov
outsl
daa
outsb
mov
xchg
test
fdivl
xchg
jnp
or
sbb
push
cmp
mov
sub
fimull
in
ds
pop
sbb
decb
test
mov
sbb
pop
rolb
je
adc
into
cltd
sarl
adc
jbe
loop
and
out
push
mov
aas
js
in
jae
into
sbb
dec
add
xchg
nop
dec
notb
pushl
testl
sbb
and
outsw
push
inc
pop
ret
aas
loopne
mov
sbb
or
pop
fistpl
push
adc
push
data16
push
mov
lods
repnz
add
push
xchg
mov
xchg
pop
mov
repz
fisubs
xchg
cmp
fcmovbe
and
cmpl
push
icebp
mov
rorl
leave
aad
push
data16
adc
cmpsl
sub
rclb
push
jecxz
mov
mov
cs
in
lock
jne
push
xchg
clc
ljmp
ret
mov
inc
imul
pop
fisttpl
push
adc
add
inc
das
outsb
mov
sbb
mov
imul
add
je
arpl
sub
in
add
xchg
push
xchg
mov
and
xchg
xchg
xchg
mov
lock
in
pop
bound
repz
cld
mov
cmc
add
pop
sbb
or
sti
insb
popf
add
jne
test
push
daa
jnp
push
cmp
xchg
int
and
lods
test
mov
push
mov
test
and
or
insb
out
or
push
dec
es
addr16
push
push
inc
mov
mov
cltd
mov
lahf
mov
pop
fdivl
sub
and
jbe
pusha
inc
mov
add
pop
imul
lods
or
inc
xor
jns
lcall
dec
mov
mov
and
xor
arpl
push
adc
clc
xor
sbb
movsb
fsts
push
dec
jg
arpl
in
call
fisttpll
jnp
sbb
lret
and
xor
mov
mov
pop
pop
mov
sbb
ret
ror
mov
rorb
jo
xchg
mov
jnp
jl
das
popf
push
enter
fistpl
push
filds
sbb
pop
lock
out
jge
movsb
enter
cmp
mov
ficoms
and
dec
mov
xchg
ffreep
add
dec
stc
lret
inc
enter
repnz
fbstp
and
insl
std
jp
stos
mov
aas
and
nop
mov
mov
inc
lea
jo
xlat
xor
inc
inc
mov
mov
lods
cmp
pushf
jns
lods
add
aam
mov
and
loop
and
pop
pop
xchg
ret
and
ret
or
fwait
test
std
idivb
fisttps
outsb
ss
fldenv
xchg
push
inc
test
ss
or
decb
pop
int3
and
cmpl
dec
fs
aaa
rol
xlat
inc
mov
pop
cmp
subl
xor
or
mov
out
xor
add
xchg
or
sahf
cltd
xchg
arpl
lea
and
jbe
push
in
or
jmp
mull
push
dec
jmp
cmpsb
jl
cmp
pop
jp
movsb
or
aam
jle
call
aam
jno
add
mov
cwtl
sbb
dec
cwtl
popa
rcll
xchg
cld
jge
cmp
out
cmp
movsl
aaa
inc
nop
lcall
xchg
icebp
stos
mov
or
pop
pusha
lret
jl
leave
mov
push
cmp
into
xchg
xor
jge
mov
cwtl
pop
cmp
adc
das
mov
testl
aad
sub
adc
mov
mov
sarb
loop
adc
inc
sbb
adc
xchg
mov
fs
negl
daa
ret
stc
or
and
push
cwtl
test
sbb
lods
loope
pusha
adc
addr16
jmp
mov
and
adc
fidivl
jecxz
adc
adc
sti
jne
daa
jge
pop
xor
sub
insb
mov
dec
cmp
testl
leave
insb
cld
addr16
or
mov
jle
arpl
aas
outsb
stos
cmpsl
movsb
outsl
sbb
icebp
jle
pop
lea
pop
imul
fmul
aas
jmp
out
ret
clc
xchg
jge
sahf
xor
and
imul
movsb
outsl
cld
test
shrl
js
fbld
inc
leave
jle
sub
cmc
clc
xor
popf
xor
pop
das
cmc
jmp
xlat
ffree
cwtl
nop
fnstenv
push
mov
outsb
or
int3
cld
loope
mov
adcl
adc
jp
mov
in
lret
mov
mov
push
clc
cmpsl
sub
dec
cld
sub
push
mov
lret
pop
into
mov
ret
sub
xchg
inc
popa
fld
lock
dec
mov
lods
or
outsb
xor
mov
loope
add
mov
std
mov
jle
cmp
and
jae
ljmp
cs
sarb
xchg
jno
mov
loope
xor
adc
iret
push
enter
add
sub
cmpb
mov
shr
daa
testl
jae
pushf
repnz
scas
mov
fcmovne
cld
bound
push
lahf
pop
dec
fisttpl
and
mov
inc
pushf
lahf
adc
push
andl
push
fstl
sti
sub
lods
out
in
xchg
jne
mov
pushf
add
in
pop
push
pop
adc
clc
sub
or
stos
cltd
jo
frstor
pop
dec
cli
stos
loope
pop
add
stos
adc
mov
jp
addl
mov
pusha
movsl
test
mov
push
fdiv
or
dec
mov
or
dec
pop
int
jno
sub
lods
fstps
aaa
and
dec
sub
cmp
std
mov
test
jne
xchg
in
pop
or
sbb
jae
shrl
cmp
lea
aam
dec
jmp
into
icebp
test
out
hlt
inc
jo
jns
mull
test
cwtl
lea
and
lods
and
adc
mov
and
sarb
sub
int
sbbl
pop
lcall
jecxz
pushf
lods
push
pop
or
in
xor
mov
xchg
inc
insb
jmp
subb
nop
cltd
test
cmpsl
pop
sub
sub
lret
mov
mov
inc
shlb
inc
imul
mov
data16
push
sub
adc
loopne
or
fsubs
pop
outsl
lds
cmp
and
scas
add
repz
sbb
pop
call
xor
pop
mov
or
shrb
dec
mov
sbb
and
mov
rolb
in
xchg
push
push
add
mov
adc
add
lret
cmpsl
push
lods
jecxz
shll
arpl
sar
pop
cmp
gs
adc
sbb
fidivrl
push
popa
and
cmpsl
pop
lahf
mov
xchg
or
cltd
pop
out
mov
repnz
push
inc
roll
rcrb
cli
or
and
scas
xchg
nop
jb
jmp
jmp
add
xor
lret
mov
pop
xor
sub
pop
mov
push
mov
in
jo
shrb
lahf
lock
imul
and
push
mov
lds
mov
aaa
push
pusha
data16
cmc
aad
pop
add
fs
stos
je
cmp
fs
sbb
sbb
sbb
icebp
cmpsb
and
insl
add
shll
test
add
mov
push
xor
icebp
or
sub
es
lcall
imul
push
mov
lds
or
ljmp
mov
pmullw
test
xor
lret
push
into
dec
rorl
aaa
cmc
insl
shrb
repz
int3
mov
mov
jne
jb
jo
imul
jmp
dec
scas
jle
cmp
js
jns
js
adc
sbb
xor
popf
gs
arpl
mov
sub
xor
repz
loopne
mov
inc
insl
jns
mov
push
loope
add
mov
and
inc
cmc
xor
dec
addr16
insb
sti
or
pop
bound
dec
cmpsl
ret
aas
enter
pop
pop
pop
out
adc
fstpt
scas
dec
xchg
lods
test
inc
jns
cmp
fidivrs
call
cmp
imulb
hlt
fimull
adc
adc
iret
dec
aam
mov
jge
stos
cli
sbb
popf
push
xchg
cmpsb
or
cltd
sub
negl
or
sub
or
cmpl
aad
inc
sbb
and
or
dec
jb
mov
add
sbb
add
mov
jb
ret
aas
or
add
or
hlt
cli
sti
lds
fistl
insb
dec
orb
fbld
inc
and
sbb
inc
cs
jnp
xor
mov
nop
int3
stos
je
repz
dec
rorb
fdivs
adc
jbe
jnp
and
into
ljmp
popa
mov
pop
ret
dec
cli
bound
mov
js
pop
scas
cmpsl
ficompl
cmp
push
push
xlat
rdmsr
add
in
mov
icebp
sbb
popf
rcll
mov
aam
std
ret
addl
out
hlt
loopne
xchg
addl
idivl
leave
int
into
int3
push
push
push
leave
shlb
xorb
test
cmc
aaa
es
aaa
sahf
jg
xor
repnz
fnstcw
in
test
negl
cmp
sbb
test
jno
jecxz
loop
call
popf
test
mov
adc
adc
mov
nop
mov
int
loopne
xlat
imul
aaa
mov
repz
out
xchg
cmc
and
inc
dec
enter
and
ss
sar
subl
mov
adc
inc
addr16
bound
jb
inc
aam
into
shlb
in
cmp
pop
cs
mov
in
mov
jb
cmp
push
dec
ror
aad
fnsave
outsl
sahf
xchg
lea
cmp
and
add
mov
mov
mov
lods
ror
and
push
cli
repz
cmp
movsl
cli
adcb
hlt
ss
test
pushf
pop
pop
out
call
inc
popf
imul
aaa
popf
fdiv
addr16
shrb
leave
xchg
imul
out
push
outsb
sbbb
jge,pn
hlt
jg
or
jbe
lret
mov
andb
shl
adcl
sub
loopne
add
loop
mov
mov
loopne
push
dec
adc
addr16
test
cmp
inc
fmull
ret
push
data16
inc
xchg
adc
push
ja
adc
aad
adc
in
mov
out
and
stos
mulb
xchg
popl
lret
or
mov
cmpsb
pop
iret
xchg
cmpsl
dec
sub
xor
scas
int
in
jmp
repz
sub
dec
iret
leave
stos
cmp
add
outsb
roll
fnsave
scas
or
xchg
sbb
subl
dec
cmp
fbstp
jne
jge
or
inc
sbb
inc
push
cmp
negl
jl
es
outsl
jno
push
sahf
or
jnp
dec
je
aam
ljmp
mov
dec
insl
cmp
inc
faddl
jae
or
testb
lds
dec
es
adc
or
leave
mov
rcl
ja
aas
jno
or
and
mov
lods
mov
pop
and
popa
fisubrl
jg
cmpsb
cli
push
aas
lea
push
push
out
das
push
fnstcw
or
cmp
mov
dec
push
fxch
outsb
adc
inc
sahf
out
imul
sbb
orl
test
jge
adc
mov
sbb
xor
mov
shl
pop
sahf
sbb
ljmp
lcall
xor
in
inc
movsl
stos
icebp
sbb
out
and
icebp
cmc
insl
mov
or
imulb
getsec
or
fsubs
imull
adc
dec
clc
or
push
decb
js
mov
adc
lods
into
push
mov
dec
xchg
imul
or
in
das
testb
xchg
stc
sub
xchg
adc
jnp
pusha
sub
inc
movsl
fstl
sbb
dec
dec
xchg
dec
movsl
insb
mov
dec
adc
and
mull
mov
fdivs
std
adc
aam
enter
cmp
lret
mov
inc
cmpl
pop
or
stos
aaa
push
shlb
and
movsb
dec
mov
movnti
mov
lret
test
cmpsb
das
ss
or
jge
stos
mov
loop
daa
dec
adc
pop
int3
sbb
repnz
jbe
dec
adc
aam
imul
rcrl
jbe
pop
and
inc
jbe
jns
test
incl
mov
hlt
xor
popf
nop
ret
add
or
xor
fisttpll
std
inc
dec
mov
cmpsl
ret
dec
test
jecxz
push
fs
rorl
or
lods
dec
in
lods
aaa
leave
test
and
addr16
int
insb
inc
xchg
es
inc
in
mov
push
in
sbb
mov
push
push
sti
pop
es
add
sahf
add
cmp
push
xchg
xchg
iret
mov
cmc
sub
mov
das
stos
add
shlb
aad
hlt
cmp
insb
or
out
pushf
pop
in
bound
call
pusha
divl
mov
cmp
nop
jne
ljmp
pop
xor
xchg
add
jo
push
pop
xchg
cmp
fs
sarl
pop
jle
ficoms
jg
pop
sub
jb
inc
scas
and
loopne
push
mov
roll
xor
inc
mov
xchg
jno
mov
dec
jl
or
mov
lods
lret
jae
or
adc
xor
aas
int
cmp
das
out
cmp
jg
mov
lahf
and
sbb
push
pop
mov
pushf
pop
es
mov
mov
mov
mov
push
mov
push
inc
sbb
push
pop
sbb
call
aam
lcall
stos
and
xor
push
negl
dec
mov
mov
inc
js
add
or
or
adc
into
fs
push
pop
fptan
loope
adc
xor
jbe
xchg
in
loopne
repnz
inc
fcmove
leave
mov
cmp
js
sub
lret
dec
ljmp
inc
sti
push
mov
adc
les
dec
in
add
inc
dec
mov
xchg
loopne
dec
inc
xchg
pop
stos
cmp
jmp
mov
mov
mov
push
mov
mov
cmp
or
sub
outsl
cmp
sub
pusha
call
adc
test
mov
or
push
rcrl
jp
push
into
push
push
pop
sbb
or
mov
lret
inc
div
push
xchg
add
xorl
sub
in
lahf
xchg
jmp
pop
jb
mov
bound
repnz
idivl
or
inc
movsb
push
popl
mov
fwait
cmpsb
cmp
push
addr16
daa
ja
insb
xor
xor
test
rcrl
pushf
and
clc
mov
or
or
jg
mov
pop
sbb
outsl
cwtl
or
lahf
xchg
je
inc
ret
push
mov
sub
mov
icebp
pop
xor
jecxz
pop
jbe
adc
cmp
add
adc
mov
cwtl
outsb
jae
es
push
stos
ficompl
shl
adc
ds
fwait
xchg
test
dec
test
lods
testl
adc
xor
cmp
lock
stos
pop
sub
outsl
dec
mov
jb
test
cmpsb
lods
pop
inc
subb
adc
in
xchg
fs
sub
jo
nop
mov
push
sbb
xor
mov
nopl
in
pop
mov
les
adc
jp
mov
or
inc
fisubrs
repz
mov
xchg
popa
mov
stos
jp
mov
test
inc
cmpb
mov
fisttpll
loopne
out
mov
pop
pop
int
cmp
mov
and
lret
dec
and
mov
addb
mov
or
mov
jle
sub
cmpb
mov
sbb
imul
dec
or
add
aaa
insl
and
addr16
fiaddl
adc
or
repz
arpl
jno
cld
add
fisubrl
lret
movsb
push
push
sub
pop
sahf
fwait
mov
mov
sub
lea
xchg
mov
in
cli
hlt
lret
xor
jl
inc
nop
addl
push
fistl
add
insb
icebp
out
xchg
daa
gs
add
and
pop
les
repz
push
pop
dec
fs
jnp
push
into
push
push
imul
jecxz
xchg
call
jae
ja
push
pop
jno
aas
mov
push
mov
jnp
lds
aaa
fldcw
mov
xchg
fdiv
push
push
out
inc
outsl
dec
leave
lcall
lret
push
data16
jae
nop
icebp
es
xor
movsl
int
mov
int3
lcall
nop
sbb
jmp
adc
xor
daa
fucomi
sub
and
rcll
push
lods
test
jecxz
ret
aam
add
xor
pop
cld
or
xchg
xor
gs
in
lock
loopne
mov
jge
stos
add
sbb
cli
cmp
daa
jl
mov
add
and
andl
sahf
je
adc
mov
adc
push
jae
out
cwtl
adc
sbb
push
faddl
call
jg
dec
mov
loop
imull
jge
and
aad
sbb
lcall
xchg
fadds
add
dec
data16
adcl
aad
mov
fwait
cli
pop
add
adc
or
pop
lahf
sub
repz
sahf
test
lret
and
push
ret
loope
pop
popf
test
xor
xchg
loop
imulb
jmp
aaa
loope
lock
push
mov
dec
or
jle
pop
insl
and
mov
jbe
mov
out
adc
push
xchg
mov
inc
xlat
push
xchg
popa
cwtd
ds
sti
ljmp
in
mov
jle
and
movsl
fistpl
dec
ds
inc
in
mov
and
insb
jo
jnp
pop
rorb
in
das
loop
ja
adc
insb
jge
loope
jg
das
aas
and
cmc
cmp
pop
int3
inc
push
orb
xchg
loopne
shll
inc
loop
das
dec
mov
ret
and
mov
in
dec
xchg
adc
dec
lret
mov
mov
test
or
xor
inc
ret
iret
jns
hlt
insb
fdivl
inc
xor
mov
lret
xchg
push
push
aas
jmp
cmp
jmp
pushf
sbb
jb
push
outsl
dec
mov
test
in
jl
add
add
outsb
data16
lock
aam
sbb
jmp
out
xor
jle
xchg
scas
notb
add
and
mov
clc
das
out
int3
mov
sub
cltd
aaa
mov
lock
hlt
repnz
sbb
xor
lods
inc
xchg
adc
std
mov
ffree
jb
push
cmp
dec
cmp
xlat
dec
popa
push
fs
fnstsw
xor
incb
clc
in
out
jbe
cld
loopne
mov
pop
jl
xor
out
adc
stos
push
das
lods
xlat
fimuls
add
repnz
mov
pop
fimull
ja
sahf
lahf
xchg
test
pop
inc
cld
pusha
mov
push
inc
int3
mov
out
jle
or
loope
scas
ljmp
dec
mov
loope
add
setge
aaa
fiadds
in
sahf
jns
adc
mov
add
or
gs
sbb
mov
cmpsl
add
fimuls
or
test
pop
push
jbe
mov
mov
push
bnd
in
or
cli
int3
aaa
test
insl
addl
movsb
stos
scas
dec
pop
cmp
repnz
pop
popa
imul
sti
adc
outsl
mov
sub
jne
mov
inc
adc
pop
shll
rcll
ret
sub
xor
xor
fisttps
pushf
cmp
mov
iret
push
andl
xor
jne
fcmove
sbb
mov
jecxz
and
sub
mov
movsb
pop
adc
repnz
mov
and
add
sbb
shl
mov
jmp
jb
mov
sbb
add
xchg
bound
mov
mov
scas
dec
imulb
loopne
dec
xor
xchg
and
and
inc
sub
ljmp
lods
jae
push
int
test
mov
jmp
dec
rcrl
out
push
add
xchg
bound
mov
mov
decl
aas
addr16
mov
add
dec
and
faddp
lods
rcr
rcrl
pop
popf
jo
inc
xchg
jb
iret
add
cmpsb
in
cmp
adc
xchg
call
outsb
imul
inc
jmp
xorb
insb
outsl
adc
fwait
mov
fsts
cmp
movsb
xor
imul
xchg
jl
pop
pop
das
das
dec
loope
aaa
and
mov
mov
sbb
sbbl
lahf
cli
add
outsl
cmp
sub
adc
mov
test
pusha
xlat
dec
ja
mov
inc
push
push
and
shr
ja
sbb
inc
mov
mov
push
push
iret
fwait
shlb
pop
cmp
addb
xor
xor
pop
outsb
gs
repnz
sub
lahf
lret
cwtl
lods
sti
out
shlb
lds
enter
scas
insb
or
and
imul
mov
or
push
popa
pop
adc
daa
aam
repnz
xor
cltd
sbb
xchg
sbb
push
aaa
and
or
xchg
gs
mov
int3
fsts
paddusw
mov
insl
add
je
xchg
inc
cmp
scas
imul
aam
jge
movsb
push
jb
jl
inc
sbb
hlt
adc
cltd
test
pop
cmp
xchg
sub
icebp
dec
and
mov
test
add
push
or
xchg
arpl
mov
in
mov
enter
adc
pushf
adc
and
lea
sahf
jno
jl
lahf
sub
hlt
pushf
sub
dec
fsubl
ret
arpl
popf
movsl
sbb
push
roll
mov
loopne
add
mov
pmulhuw
pop
lcall
xor
test
and
push
push
mov
stos
call
mov
test
addr16
loopne
xchg
sub
dec
in
pop
jmp
cmc
enter
sub
mov
push
sbb
out
xor
sbb
ljmp
test
scas
jbe
stos
ja
push
lret
xchg
leave
adc
imul
scas
dec
mov
jp
mov
pusha
ret
loopne
dec
cmp
add
pusha
in
push
sub
daa
jb
inc
sbb
lods
lods
int
mov
scas
insb
mov
dec
incb
cmpsl
lahf
fistpl
push
stos
mov
orb
repnz
or
cli
sub
dec
push
add
gs
lods
sub
push
lock
jbe
mov
stos
inc
sbb
inc
aam
dec
cmp
imul
mov
rcll
mov
ja
insb
xchg
dec
outsl
bound
dec
push
cmp
jmp
loopne
xchg
mov
nop
js
sti
stos
movl
mov
mov
inc
xchg
fcoml
push
cltd
inc
lea
mov
push
popf
into
add
xchg
arpl
das
cmp
push
mov
mov
sbb
ret
push
ret
inc
les
mov
add
cmpsb
jge
cmp
sbb
pushf
push
pop
cli
sub
inc
lods
mov
adc
add
shll
mov
mov
out
inc
xchg
mov
aam
mov
pop
fisubs
xor
ja
out
mov
add
stc
push
lret
pop
xchg
and
outsl
repnz
sbb
rclb
out
sub
jg
jno
fwait
xchg
xchg
into
add
and
dec
mov
or
scas
incb
mov
loop
mov
fmull
imul
loop
add
cmpb
sub
cli
pop
frstor
sarb
ret
adc
insl
jg
sbb
add
push
pop
add
inc
and
sbbl
xchg
imul
movsb
pusha
subb
jb
cmpsl
sub
adc
ret
mov
rcl
mov
cmc
out
dec
and
mov
mov
add
fisubl
pop
out
cmp
dec
mov
pop
das
pusha
xlat
in
and
inc
xchg
ret
push
lret
shll
xlat
cltd
cmc
lcall
mov
xor
sbb
cmp
daa
mov
and
inc
inc
lock
push
les
or
inc
out
pusha
insl
mov
mov
add
int
pop
cmp
in
and
mov
out
cli
xchg
lcall
ja
jmp
fdivs
imul
pop
mov
inc
and
bound
cmp
dec
and
push
and
lcall
sbb
daa
add
std
push
loopne
icebp
sbb
push
push
cmpl
mov
int
lret
jae
fisubrs
push
out
aas
out
push
lods
aam
or
loope
mov
aad
insb
mov
push
jmp
ret
inc
aam
push
test
or
aad
xchg
and
sub
lahf
repz
in
pushf
or
lods
push
xchg
shlb
inc
lea
aam
popa
mov
in
leave
insb
arpl
shlb
addr16
sbb
shlb
and
xchg
insb
divl
popa
inc
mov
stos
pushf
lea
sub
iret
pop
fsts
inc
jnp
les
xor
fdivl
pop
shrl
adc
enter
fwait
cwtl
sub
gs
and
out
bound
hlt
lret
jg
ja
lods
push
scas
mov
sub
mov
pop
ret
clc
ds
push
pop
inc
scas
mov
icebp
sti
rcrb
xchg
mov
mov
add
cltd
out
ja
push
cmc
stos
jp
sub
push
pop
out
test
inc
push
aam
pop
aam
push
mov
xor
stc
dec
jo
jmp
pop
mov
aam
lock
jg
dec
add
cltd
cmp
xchg
and
lea
sti
jae
xchg
mov
mov
shl
enter
xor
stos
les
push
dec
das
fldenv
ret
cwtl
or
or
les
into
cltd
sbb
and
mov
cmc
cmp
ret
addb
xlat
xchg
out
ja
mov
repz
stos
lahf
and
popf
lret
cmpsl
mov
les
bound
stc
jp
sbb
inc
mov
pushf
inc
jge
scas
das
and
sbb
aam
mov
lea
jnp
stos
out
in
mov
mov
mov
cs
insb
jnp
mov
jne
pusha
lret
jo
into
loop
sbb
and
sbb
lcall
pop
imul
mov
lods
sbb
ja
sub
or
mov
aam
cmp
inc
push
es
dec
cltd
pushf
cmp
add
nop
mov
mov
jecxz
adc
sub
ja
mov
jp
pop
stos
pop
lcall
jnp
jno
clc
cmp
fnstsw
test
daa
ficoml
sub
leave
mov
sbb
and
mov
mov
ficoml
xchg
push
ret
push
jbe
fidivs
add
mov
lret
insb
jg
or
fbld
vpsllq
es
adc
fwait
mov
and
into
cmpsl
xchg
movl
jp
add
adc
sti
push
mov
jp
or
out
or
xor
jmp
insl
sarb
xchg
scas
shl
insl
mov
imul
sbb
icebp
fwait
pusha
lret
dec
lock
inc
out
inc
dec
lods
and
push
mov
mov
std
sub
stc
in
aam
or
mov
xchg
push
add
fs
dec
jp
cli
popa
mov
inc
or
pop
add
shrb
ja
je
lea
mov
push
clc
jge
add
fsubrs
gs
test
adc
insb
push
mov
inc
rclb
cmovg
ficompl
les
or
cli
pop
xchg
xor
imul
mov
dec
push
mov
inc
mov
add
sub
inc
ret
ds
stos
fs
dec
sbb
push
insl
call
pop
fmull
subb
sub
lods
inc
mov
int3
mov
cmp
xor
jae
push
lret
in
loop
mov
jecxz
int3
cmp
and
aas
push
test
mov
fucom
or
stos
insl
adc
mov
push
cmpsb
or
lahf
and
jl
add
xchg
jne
sbb
pop
ffreep
fwait
stc
hlt
push
sub
fadds
push
lock
lret
cmp
inc
in
jae
sbb
lcall
jb
nop
sbb
push
xchg
push
cltd
push
dec
xchg
adc
pop
daa
xlat
mov
xlat
repnz
mov
outsb
sub
fwait
mov
push
add
aas
adc
xor
scas
adc
in
sub
fcmovnu
out
and
icebp
sbb
dec
das
add
dec
push
adc
pop
hlt
xchg
adc
inc
fwait
and
call
cmp
and
aas
pop
faddl
mov
inc
daa
cmp
mov
adc
jp
add
lea
cmpsb
and
cmp
pop
fstps
int3
lcall
mov
mov
subb
cmp
pushf
arpl
push
xor
bound
fstpt
bound
sbb
xor
stos
jae
ret
push
incw
sub
popa
imul
mov
ret
fisubs
aad
scas
push
or
push
xchg
adc
fwait
mov
sub
stos
cmp
js
and
and
jl
jbe
add
jne
or
mov
cmp
jbe
les
movsb
mov
push
pop
jns
int
aam
lock
sub
dec
roll
mov
push
fidivs
dec
cmp
sub
mov
pop
js
xlat
mov
dec
clc
jp
dec
jecxz
sbb
pushf
adc
in
cmc
push
jmp
jp
xor
ficomps
movsb
jbe
test
fcmovnu
lock
mov
dec
pop
out
aad
sub
mov
jl
xchg
lock
stos
into
scas
or
adc
xchg
pop
adc
mov
stos
cmp
idivl
shlb
or
insl
subl
pop
in
roll
orl
xchg
lret
mov
mov
pop
clc
jmp
test
push
pop
mov
into
xchg
or
dec
test
addr16
hlt
mov
lahf
sub
xchg
aas
mov
ja
xor
jb
test
cmp
mov
clc
addr16
jb
xor
ret
in
sbbl
test
dec
mov
mov
and
test
mov
and
add
lret
in
and
je
scas
into
sub
fiadds
inc
jne
xor
js
push
jp
aaa
mov
mov
divl
lret
sub
xor
repz
mov
xlat
lods
jl
mov
call
repnz
mov
or
inc
jno
frstor
test
loopne
push
sub
add
jbe
shlb
xchg
andl
mov
pop
aas
inc
sbb
mov
add
in
mov
and
push
jp
jo
xor
popa
cli
bound
cmp
arpl
cmp
stos
lock
jb
out
lahf
out
sbb
sub
scas
jg
push
out
and
dec
insl
or
dec
cmp
orb
lret
clc
mov
pop
jle
inc
xor
lods
push
insl
lret
pusha
nop
pop
arpl
mov
mov
xchg
out
fbld
addr16
in
push
adc
js
shll
sahf
lds
push
cmp
mov
jnp,pn
mov
or
in
es
call
fisttps
in
adc
filds
data16
dec
mov
inc
add
sub
add
adc
xchg
iret
stc
add
fadds
lods
imul
mov
loop
adc
pop
lods
into
pop
popf
sbb
lods
ss
push
cmp
mov
jl,pt
in
cmpsb
or
out
mov
cmp
push
push
out
pop
cld
dec
les
lcall
jmp
cld
inc
ret
iret
adc
adc
push
inc
pop
mov
dec
clc
repnz
or
scas
add
sbb
andb
fisttpl
sub
hlt
xor
jl
sub
adc
addr16
ret
cmp
iret
divb
xchg
jmp
ds
pop
shll
stc
loope
inc
or
ficoms
sarb
nop
add
int
add
jne
xchg
ror
rcrb
roll
imul
mov
subb
xchg
insb
pop
ljmp
in
inc
jnp
ds
fbstp
sahf
test
fstpl
push
and
loop
jns
int
dec
aas
dec
ret
cmc
dec
or
xchg
int3
ficompl
loopne
cmc
popf
adc
jbe
test
dec
mov
mov
sub
jae
pusha
ss
repz
dec
push
sbb
mov
jmp
mov
dec
call
mov
es
pop
lods
popf
insl
mov
push
add
mov
or
pop
xchg
sub
adc
in
and
inc
cmp
inc
lret
lds
jge
dec
mov
lahf
xchg
and
scas
xchg
mov
popf
push
subl
jbe
jle
stc
push
dec
test
mov
inc
scas
lret
xchg
test
je
mov
in
bound
sub
mov
jl
sbb
lds
fsubs
adc
cmpl
insb
inc
jne
dec
xor
ret
push
outsl
mov
lcall
push
cs
mov
jle
int
lahf
mov
adc
mov
mov
std
aam
xlat
scas
and
loop
test
stc
pmaxsw
add
test
loopne
sbb
xchg
xor
sub
jmp
insb
inc
mov
call
cmp
mov
push
or
roll
sbb
ret
adc
xor
sub
into
roll
mov
mov
cmp
mov
cmp
adc
pop
or
sbbb
mov
in
push
ljmp
jge
xorb
jbe
and
add
ret
xchg
mov
insb
repnz
adc
or
inc
std
fcoml
hlt
inc
js
push
jb
lock
fnstenv
std
jge
cmp
or
mov
leave
pop
push
cmc
out
gs
test
mov
lret
fistpll
sub
outsl
sbb
adc
arpl
bound
adc
arpl
test
pop
sub
or
test
aad
jecxz
faddl
test
xor
in
jb
or
std
push
add
add
dec
pop
insb
sbb
jo
or
mov
dec
roll
cli
sbb
cmp
popa
cmp
jo,pt
mov
call
sub
mov
iretw
and
out
popf
lcall
aad
inc
data16
or
jecxz
push
mov
jp
jnp
adc
bound
sub
push
mov
dec
xor
push
push
repz
mov
in
xchg
cmc
cmp
aam
int
hlt
mov
ficompl
orl
xchg
or
cmpsb
sub
inc
fs
ds
mov
jmp
sets
mov
mov
fildll
lret
int
cmpsl
movq
aas
outsl
adc
pop
loope
fnsave
fdivrl
je
lea
mov
fimull
inc
add
bound
inc
pop
jecxz
mov
xlat
xor
push
hlt
sbb
pop
add
mov
xlat
lods
pop
sti
sti
push
xchg
inc
jne
xor
push
or
pushf
popf
add
clc
jae
jns
imul
and
rcl
jb
add
pop
scas
pop
adc
and
and
sbb
imul
mov
cmp
xchg
test
push
sqrtps
xchg
inc
lahf
mov
repnz
jge
loop
push
and
push
cli
xchg
and
sti
sbb
repz
add
cmp
xchg
imul
cmp
jno
xor
or
push
and
cmc
call
add
pusha
pop
xchg
loop
cmc
shlb
movaps
mov
mov
in
xchg
into
fistpl
call
stc
inc
dec
add
scas
por
cs
sub
cmp
jns
mov
jb
enter
xor
sbb
les
or
or
lds
loopne
psrad
sbb
enter
mov
out
rcr
loop
inc
and
mov
add
test
push
push
or
mov
lcall
lret
fucom
in
push
movsl
es
lahf
lret
pop
hlt
inc
push
cmp
loope
or
adc
std
insb
jmp
aas
stos
cmp
dec
add
ud0
dec
adc
test
clc
cmc
sbb
es
std
jns
cmp
push
aad
or
int
cmp
popf
push
cld
aam
sbb
lock
pushf
add
and
or
int
aad
sbb
setge
outsb
lret
ljmp
mov
imul
lcall
ja
iret
xchg
inc
scas
aad
sub
mov
inc
loop
mov
jne
mov
push
sub
dec
jne
mov
xchg
test
mov
dec
jo
jno
sbb
lods
int
jb
sub
xacquire
out
jns
and
iret
scas
dec
out
inc
ficoml
jnp
jle
adc
out
or
repnz
imul
cmp
ret
xor
mov
in
lcall
add
mov
xchg
sub
mov
xchg
or
lock
loope
mov
movsb
add
js
add
mov
add
scas
inc
mov
inc
les
pop
xor
cmp
in
and
push
lret
push
stos
rcr
sahf
outsl
aaa
clc
dec
pushf
lcall
xor
pop
sub
ret
js
push
xchg
pop
or
into
mov
leave
xor
nop
mov
adc
in
mov
stos
ret
pushf
insb
sub
inc
add
sbb
push
ret
pop
mov
es
in
pop
inc
out
inc
shll
rcrb
mov
add
fcoml
fadds
data16
cmc
jbe
or
pushf
cmp
out
dec
inc
mov
call
sbb
clc
aaa
in
jno
inc
cmp
inc
jae
dec
jae
sbb
stc
mov
inc
sbb
xchg
loop
mov
dec
jl
adc
stc
icebp
mov
loopne
out
inc
cmp
scas
dec
pop
in
loop
popf
mov
pop
inc
in
jp
mov
and
scas
mov
out
push
cmp
adc
fwait
or
cmp
outsb
xor
arpl
mov
or
cmc
adc
movsb
sahf
aad
jnp
lds
bound
rorl
push
xor
icebp
mov
jmp
add
mov
test
les
pop
fdivrl
xor
mov
addl
xor
dec
jecxz
add
lods
arpl
subl
xchg
push
mov
push
adc
xchg
insl
cs
in
out
inc
adcb
xchg
push
ljmp
cmp
fldt
dec
xor
inc
cmc
sbb
insb
or
in
push
cwtl
cmpsb
adc
mov
push
lds
shrl
cwtl
inc
jno
xchg
shrl
mov
cmp
aas
mov
cld
pop
cmp
stos
dec
cmpsb
in
xchg
rolb
and
jb
mov
pop
cmp
nop
aaa
lods
jmp
int
dec
or
push
and
cmpsl
repnz
roll
arpl
xlat
repnz
mov
dec
cmp
addr16
pop
ret
js
hlt
and
add
dec
mov
decb
jg
out
inc
inc
adcl
ss
dec
mov
add
ss
dec
xchg
lea
xor
sbb
cmp
dec
ss
or
and
cmp
inc
ret
push
pop
loop
dec
fisubl
adc
test
jge
dec
fwait
pop
sbb
out
sub
inc
sub
jae
jb
and
decl
push
inc
imul
push
push
add
int3
ljmp
testb
jnp
mov
fs
pushf
outsl
out
aad
dec
xor
push
setb
pop
xchg
sub
icebp
aaa
ret
xchg
push
loop
fnstcw
cli
fidivrl
aam
mov
popf
into
nop
xchg
movsl
mov
test
lahf
aam
cltd
jmp
cmpsb
cltd
fwait
sbb
cwtl
pop
jno
test
cmp
pop
mov
xor
ljmp
aaa
sti
sahf
cmp
loop
pusha
push
lods
mov
mov
das
push
jle
leave
fs
arpl
pop
and
mov
cmp
pop
hlt
sub
and
jge
fnstenv
push
loope
test
ficompl
mov
xchg
push
mov
push
mov
add
push
call
push
lahf
loop
adc
outsb
push
adc
lret
dec
fidivrs
stos
into
cmc
sub
fldcw
lods
inc
add
sahf
cmp
and
and
lds
test
mov
popf
jns
mov
dec
mov
pop
cmp
mov
scas
ret
add
in
repz
pop
cltd
jp
push
jp
push
icebp
outsb
jbe
mov
repz
shlb
std
aad
fadds
xchg
pop
xchg
js
lds
jp
pop
dec
mov
xchg
int
inc
imul
rcrb
push
cld
in
cmpsl
fcmovnu
gs
sbb
imul
push
push
add
push
mov
xor
pop
xor
mov
mov
sub
inc
add
jnp
imul
dec
cmp
movsb
bound
xchg
dec
ja
das
cmpsl
test
sbb
insl
stos
push
push
in
xchg
punpcklwd
pushf
hlt
test
mov
scas
dec
and
lcall
pop
clc
jl
xorb
mov
repnz
jns
cld
adc
inc
ja
js
push
and
in
sahf
or
mov
ret
dec
lret
and
mov
inc
push
xchg
out
xor
xlat
and
movsb
mov
mov
dec
dec
and
std
pop
dec
cmp
mov
push
dec
aam
ret
xchg
xchg
outsb
mov
jns
jne
addr16
inc
repz
popa
mov
shrl
jg
lods
cmp
loop
pop
loop
lahf
fs
sbb
dec
and
jecxz
push
pop
and
jmp
xchg
mov
insl
stos
xchg
mov
daa
fiadds
adc
and
rorb
hlt
hlt
mov
imul
cmp
mov
in
mov
paddusb
out
ljmp
das
scas
mov
mov
out
test
scas
adc
and
pop
jle
xor
cmp
or
pop
adc
mov
insb
shlw
mov
bound
sub
jb
fcompl
add
mov
mov
daa
es
bound
xchg
out
repz
gs
mov
xor
loop
cltd
bound
mov
inc
notb
repz
xor
stc
jp
rcrl
mov
xchg
inc
inc
lret
pop
xchg
in
pop
jl
mov
ficomps
mov
inc
std
test
fcomip
xchg
in
jecxz
and
push
out
mov
xlat
int3
dec
pop
xlat
cmc
cmp
push
dec
jge
xorb
or
sub
cmp
mov
push
xchg
xor
orb
jns
cmp
imul
cmp
negl
pop
pop
push
adc
pop
pop
lret
and
sbb
cmp
jmp
daa
lock
jo
arpl
add
push
sbb
xchg
es
and
popa
stos
hlt
subb
sub
xor
inc
insb
push
add
stc
inc
lcall
imul
or
inc
scas
sbb
cmp
pusha
xlat
push
jns
xchg
popa
jne
xlat
repnz
out
sub
outsl
sub
adc
mov
dec
pop
push
pop
outsl
mov
les
out
dec
shll
xlat
and
addr16
sbb
add
mov
mov
and
scas
and
jl
fwait
sub
inc
stos
fcompl
in
incl
adcb
add
dec
pop
mov
push
jecxz
cs
in
imul
pop
add
daa
mov
xchg
pop
outsb
add
movsb
insb
loop
pushf
adc
jns
roll
iret
push
mov
es
jl
mov
into
sub
jp
inc
pop
test
mov
jo
mov
xor
sarl
iret
outsb
lods
jno
xor
fimuls
mull
xor
sbb
das
insl
notb
lds
pop
outsb
lods
push
out
faddl
sub
stos
sub
xor
rcrl
xchg
cmp
pop
leave
push
dec
testb
mov
enter
add
sti
and
outsb
pushf
mov
jmp
mov
scas
lret
and
rcr
jo
in
xchg
pop
and
pop
add
lret
jmp
std
cmp
fnsave
outsb
adc
insl
imul
lea
xlat
jl
cmp
test
fisubrl
xor
in
enter
roll
pusha
jno
xchg
dec
insl
xor
dec
gs
movsl
push
mov
sub
cltd
mov
xchg
out
pop
pop
jne
jae
sub
arpl
mov
ret
cmp
add
xchg
mov
ret
sub
addr16
addr16
jle
jne
mov
xchg
aad
shl
mov
dec
jb
popa
mov
push
lock
sub
fsubl
inc
aam
xor
xchg
es
int3
inc
test
push
xor
mov
repz
jae
ja
sub
jecxz
mov
pusha
mov
lea
sbb
adc
pop
and
push
cmpsl
outsb
mov
xchg
je
cmp
push
std
imul
mull
push
jno
pop
adc
and
sbb
repz
mov
mov
xor
lret
movsl
adc
jmp
cmc
mov
mov
addr16
movsb
rorl
cwtl
push
add
shll
stos
lahf
nop
es
sbb
jae
shl
popf
vpunpckhdq
and
gs
lods
pop
jae
sub
outsl
add
lock
dec
cmp
push
add
movsl
or
mov
inc
stos
arpl
lds
imul
push
pop
pop
ja
repz
dec
movsb
mov
xchg
idivb
out
nop
xchg
push
xchg
jle
xchg
dec
push
xor
mov
cmp
and
divl
arpl
mov
lea
fs
lds
rclb
fs
loop
xchg
inc
jns
jne
aad
mov
xchg
jno
dec
sub
push
dec
sub
fwait
or
push
jl
inc
mov
jnp
js
cwtl
daa
mov
lcall
mov
push
add
insl
std
clc
test
mov
icebp
daa
pop
pushaw
pop
les
or
imul
insl
mov
arpl
xchg
pushf
push
pop
add
insl
insb
cmpsb
repnz
add
outsl
sbb
inc
unpcklps
call
mov
push
emms
mov
mov
inc
jb
xchg
popa
mov
pushl
add
dec
or
shl
adc
fsubs
movsb
xor
xor
mov
xor
pop
pop
dec
and
jmp
fadds
mov
ljmp
mov
sbb
xor
jne
addr16
fmul
incl
mov
and
sbb
push
xor
jle
ret
adc
scas
loopne
movsb
dec
pusha
mov
test
adc
movsl
jp
mov
into
adcl
into
lea
dec
into
xchg
or
rcrb
pop
jecxz
repz
push
int3
or
call
pop
imul
cltd
into
inc
or
mov
sbb
inc
mov
add
mov
push
dec
jb
sbb
scas
xchg
int
data16
outsl
cmp
jo
jns
cld
xchg
cmc
test
js
xchg
mov
insl
sbb
data16
add
mov
sub
loop
jecxz
or
and
pop
loop
push
sub
xchg
hlt
dec
or
mov
nop
cs
pop
push
lret
jb
adc
mov
cld
aam
gs
int3
xlat
pop
icebp
aam
pop
cmpb
lret
push
test
das
xlat
xor
pop
xor
mov
cmpsb
inc
sti
rcrl
mov
movsb
pop
pop
mov
sbb
movsl
sahf
iret
sti
jle
and
mov
mov
enter
cli
ror
inc
imull
mov
pop
imul
dec
cmp
adc
xor
gs
inc
sti
cs
push
jo
xor
push
loop
inc
std
lods
into
lret
adc
fsubrl
cmp
sub
out
xchg
aad
adc
or
je
in
mov
pop
sub
jb
int3
fsub
xchg
mov
enter
int3
mov
inc
xlat
and
inc
loope
mov
call
or
lret
shll
jbe
scas
sub
mov
fimuls
mov
adc
int3
add
test
out
xchg
pop
sbb
xor
mov
xlat
daa
mov
cltd
xor
push
mov
dec
rolb
andl
mov
jns
jg
pop
adcb
and
icebp
fisttps
mov
jp
mov
inc
xchg
inc
iret
mov
mov
jge
mov
fsub
mov
fisttps
jl
mov
adc
cmp
arpl
pop
stc
mov
in
sub
xchg
push
dec
pop
test
xor
and
inc
inc
add
mov
dec
and
mov
adc
mov
mov
neg
outsl
in
gs
mov
xchg
sbb
add
cmp
jne
fiaddl
into
std
cmp
daa
pushl
push
iret
jp
test
leave
mov
test
inc
adc
add
outsb
pop
xchg
out
aad
ret
mov
or
mov
push
mov
jns
mov
push
pop
pop
jns
not
xchg
movsb
and
or
xlat
or
outsl
arpl
arpl
sbb
jecxz
and
xchg
add
mov
gs
out
mov
or
sbb
stc
jb
xchg
repnz
ss
shr
aad
dec
push
addl
les
daa
xchg
int
xor
xor
push
adc
sub
mov
cmp
or
aam
mov
push
xchg
xchg
enter
outsl
scas
orb
lods
mov
outsl
mov
cmp
dec
add
sub
pop
dec
pushf
push
xor
push
push
or
cmp
inc
jne
push
cmp
fs
push
test
cwtl
pop
sub
cmpsb
dec
imul
mov
or
fistps
xor
fs
call
xchg
popf
cltd
inc
scas
jns
loop
scas
sub
mov
pop
mov
insb
jecxz
shlb
fnsave
pop
inc
adc
imul
pop
lds
push
sub
stos
das
dec
lds
xor
insb
add
inc
sub
imul
gs
scas
cmp
xor
add
mov
jb
divl
ret
add
cwtl
cmp
dec
cld
enter
jecxz
mov
sti
push
es
xchg
jle
xor
enter
lds
test
aam
inc
test
das
inc
fsubrl
subb
cmp
jmp
jae
insb
mov
jecxz
push
push
js
aam
pop
test
add
add
pop
jo
dec
aas
sar
sub
mov
jb
out
insb
dec
dec
out
les
enter
int3
gs
leave
imul
loope
pop
out
stc
addl
push
rcrl
pop
pusha
incl
dec
add
lret
scas
bswap
cmp
mov
fwait
xor
cmpb
mov
cmc
out
outsl
js
cmp
adc
popa
jl
adc
int3
imul
in
daa
mov
cmpsb
adc
sahf
mov
dec
inc
lahf
test
dec
push
sub
mov
jno
test
mov
jbe
mov
aas
push
aaa
mov
cltd
fimuls
nop
mov
daa
shl
mov
adc
leave
adc
xchg
out
add
add
repz
xchg
loope
sbb
jne
and
fsub
xorb
fucomip
mov
xorl
cltd
leave
or
mov
dec
ret
addr16
xchg
xor
push
scas
movw
mov
jmp
mov
ja
sub
push
cmova
orl
outsl
xor
in
icebp
mov
repnz
sub
jge
es
shll
dec
popa
flds
mov
loop
jle
hlt
push
pop
insl
mov
leave
pop
mov
ljmp
and
and
mov
inc
outsl
fmulp
movsw
cmp
xor
sbb
test
cmp
mov
idivb
xchg
sub
popl
pop
aam
cld
outsb
lret
cmp
adc
es
loop
mov
rorl
jg
pushf
or
push
mov
ret
fnstcw
pop
call
jbe
jo
stos
sbb
mov
mov
cmp
dec
in
fs
mov
dec
icebp
xchg
add
cmp
out
data16
jl
pop
cmp
mov
xor
jecxz
insl
cmp
cli
loope
or
dec
mov
shll
adc
inc
pop
aas
jecxz
or
and
push
and
test
imul
andb
pop
xchg
jecxz
stos
cltd
or
xchg
int
adc
cs
shlb
enter
fsubrs
adc
xor
mov
push
not
xchg
dec
or
enter
mov
gs
sub
aad
or
cmp
out
fclex
adc
mov
mov
add
mov
je
ljmp
mov
mov
sbb
fdivrl
adc
insl
ljmp
or
test
dec
dec
pushf
sbb
sar
cmp
shll
imul
dec
dec
cmpb
xchg
mov
aaa
fwait
bound
jo
mov
movsb
xchg
bound
clc
push
xor
ljmp
pop
out
push
loopne
stos
popl
shrb
data16
addr16
lods
movsb
mov
mov
movsb
jbe
cli
mov
imul
push
cmp
les
popf
add
andps
lds
cmp
call
fmuls
and
stos
call
sub
cli
lods
mov
bnd
js
xchg
shrl
leave
cld
mov
out
lcall
mov
dec
push
and
xchg
jbe
or
sub
fidivrl
aad
mov
pusha
iret
jno
imulb
sub
sarb
lods
imul
sahf
pusha
or
rcrl
icebp
lea
iret
fwait
xchg
in
scas
mov
adc
sub
add
shlb
jg
pop
sbb
mov
pop
dec
xchg
fisubrl
cmpsb
cmp
test
mov
xchg
push
sub
jbe
test
adc
lock
cmpsb
je
sbb
pop
movsb
int3
add
imul
inc
mov
inc
test
cmp
lret
cltd
inc
nop
jp
pop
popa
sub
and
sub
push
lret
push
pop
inc
xor
inc
pushl
add
fstps
loop
lret
add
pop
or
xor
cmp
mov
inc
rcl
imul
data16
ret
mov
and
push
lret
addl
cli
inc
mov
rcll
pop
jp
insb
orl
lock
fcoms
in
dec
fcmovnbe
push
pop
xchg
fcmovnb
mov
or
bound
popf
iret
std
cmpsl
mov
fs
insl
jg
lods
ss
push
dec
dec
xchg
scas
sbb
dec
sbb
lds
sbb
xchg
sbb
pusha
fwait
pop
lds
adc
ret
add
xchg
out
daa
dec
and
sbb
lock
push
repz
jo
mov
dec
mov
cmp
lcall
fmul
fcom
test
enter
cmpsb
push
mov
cld
jo
adc
aad
pop
test
popf
cs
adc
outsb
mov
adc
push
icebp
xor
xchg
les
inc
sbb
inc
subb
mov
cmpsb
pop
cli
pop
jnp
xor
xlat
movsl
cwtl
popf
jno
and
int3
sbb
lret
sub
cmp
daa
dec
mov
or
or
mov
ret
test
outsl
push
shrb
pusha
outsb
pop
push
cmpl
fwait
shll
mov
mov
inc
test
fadd
lret
cmp
loop
xor
stos
mov
dec
subb
repz
adc
xorb
push
cmp
and
adc
testl
outsl
sbb
jbe
xchg
aaa
fcmovnb
inc
stc
lret
rcl
inc
cmpsb
adc
jbe
push
negb
and
pop
xchg
repnz
add
mov
push
movsb
pop
xor
decb
xchg
imul
int3
outsb
sub
mov
iret
or
aad
fnstenv
cwtl
testb
jl
dec
adc
jge
xor
mov
lret
out
test
inc
jns
push
and
cmp
sbb
add
das
add
imul
lahf
pop
sub
mov
cmp
cmp
pop
movsb
inc
loope
push
mov
jnp
mov
cmp
inc
jae
cs
push
dec
in
and
shll
cmp
pusha
or
bound
clc
adc
cwtl
or
xchg
data16
cmpsl
lods
xchg
mov
ret
pop
push
ficoml
adc
movsb
ljmp
ljmp
or
mov
stc
gs
mov
arpl
push
idivl
shrb
push
jl
inc
jns
adc
pop
add
rol
aad
lret
stos
sbbl
xchg
xchg
cmpsb
pop
sub
pop
mov
jbe
je
loop
jge
out
sti
xor
pusha
pop
xor
sub
cmp
mull
inc
mov
dec
inc
add
xchg
repz
or
xchg
add
pop
vmovd
fidivrs
data16
xchg
pop
inc
jg
mov
test
out
dec
or
das
xchg
and
hlt
cmc
sbb
in
or
lock
notl
push
xchg
or
into
xor
cmp
cmp
enter
mov
imul
clc
jmp
push
push
mov
into
lea
js
pop
dec
mov
mov
jnp
dec
sub
pop
dec
push
xor
sub
movsl
inc
sti
js
jnp
xchg
test
out
into
arpl
mov
aam
les
mov
iret
out
inc
rcrb
mov
js
or
push
test
xlat
jae
sar
mov
sahf
add
test
test
pushf
cmp
cmc
std
and
bound
js
in
xchg
and
lea
inc
ljmp
push
add
out
in
data16
mov
add
les
xchg
cmpsb
cmpsb
mov
mov
pop
push
xchg
or
lods
ja
ds
push
pop
pand
jg
push
dec
xchg
imul
popa
push
push
mov
fwait
cmp
shrl
mov
aas
sub
ljmp
jl
and
cmp
ret
sbb
out
in
lds
cwtl
sub
nop
into
call
adc
and
add
add
ljmp
add
add
add
push
xor
add
pusha
add
adc
add
mov
xor
