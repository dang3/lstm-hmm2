daa
inc
sub
push
test
and
stos
push
lods
repz
test
and
aam
or
push
pop
je
out
adc
dec
xchg
out
movsl
mov
inc
int
xor
xor
call
pop
pop
fdivrs
stos
mov
lds
cwtl
adc
insl
addr16
adc
jns
fiaddl
and
sub
xlat
mov
dec
mov
in
nop
cli
arpl
iret
dec
xlat
dec
add
jmp
xor
addr16
adc
inc
jae
inc
xchg
sub
mov
sbb
dec
pop
sti
stos
in
in
push
mov
sbb
cli
je
mov
jecxz
fstpt
add
imul
jo
popf
dec
jp
pop
sub
dec
sub
jbe
cmpb
adc
mov
jmp
add
out
sub
xchg
sub
dec
add
push
fldcw
popf
lods
or
and
scas
rclb
jp
pop
mov
mov
ja
sub
dec
adc
mov
mov
push
xor
adc
add
pop
pop
jmp
insl
out
dec
sub
sbb
decl
and
mov
ss
repz
insb
dec
test
pop
mov
shlb
mov
or
lea
add
adc
fdivs
out
jl
mov
sub
mov
sbb
push
inc
orl
add
popa
add
inc
mov
lds
test
jecxz
cmp
test
fcomi
pop
adc
sti
fcomps
mov
add
and
imul
cmpsl
add
mov
test
adc
sbb
fmull
fisubrl
in
popa
loope
and
or
sub
jo
gs
add
jnp
pop
xor
sahf
adc
pop
fdivrs
xchg
mov
inc
sbbl
xchg
mov
sub
jle
cld
je
stc
add
imulb
sbb
pop
add
pop
cmpsl
rolb
xchg
jae
ljmp
lods
les
xor
test
mov
popa
lock
jecxz
add
pop
pop
movb
mov
adc
cmp
mov
addb
mov
outsb
sub
mov
es
push
mov
fcmovnb
xchg
lds
hlt
vpacksswb
scas
sbb
jge
jl
xor
jecxz
jecxz
mov
sub
pop
mov
aas
cmpsl
xchg
dec
insb
into
ss
sub
xorl
xor
xchg
xor
xorb
das
mov
not
pop
mov
pop
jle
lcall
subps
or
aad
movb
fcmovnu
add
rcl
pushf
fmull
or
pop
sub
fsubrl
lret
xor
sub
popa
pop
insl
inc
cmp
testl
movsl
pop
out
mov
xor
gs
adcb
cmp
adc
fisttps
jno
lods
adc
xchg
inc
mov
xchg
iret
je
fisttpl
add
mov
dec
fsub
lcall
fmull
adc
fucomi
inc
ret
testb
jmp
arpl
push
daa
rol
jae
imull
movsl
shll
lods
jbe
mov
pop
stc
fistpll
or
ret
push
mov
mov
std
jo
scas
jae
pop
mov
mov
idiv
shrl
jne
dec
jns
mov
aam
pop
jbe
je
repnz
pop
xchg
jnp
inc
inc
repz
ret
add
shl
aad
lcall
insl
inc
std
and
push
jge
sbbl
push
jmp
jp
addr16
arpl
repz
dec
mov
sbbb
mov
mov
cmp
fistpl
pushf
es
fcoms
mov
ret
dec
push
xchg
es
out
rclb
fistpll
pop
shrb
push
push
lret
inc
jmp
ja
cmp
push
inc
mov
and
add
int3
stc
scas
jle
cmp
in
xlat
daa
sub
pop
lahf
out
in
cs
adc
cmp
mov
or
jae
xchg
rclb
dec
cmc
aas
stos
lds
sbb
push
cwtl
inc
cli
imul
bound
call
mov
xchg
gs
add
xlat
cmp
out
popa
pop
or
sub
movsb
inc
cmp
imul
enter
addl
test
iret
mov
inc
sbb
mov
cli
ret
repnz
int3
or
jns
xor
cmp
mov
in
hlt
inc
jle
or
jge
jle
mov
cmovb
xchg
out
cmc
into
orl
mov
push
mov
mov
adc
mov
xchg
pop
shl
or
lcall
repz
and
les
dec
jp
inc
test
fcompl
nop
mov
std
pop
lods
push
mov
mov
dec
jl
xlat
cmpsb
xchg
insb
je
lea
dec
push
out
mov
into
test
inc
les
in
movb
aaa
repnz
inc
orl
sbbb
dec
sbb
in
xchg
mov
jne
push
mov
insl
sub
outsb
jl
lcall
nop
js
inc
rolb
int
mov
vpunpcklwd
stos
ljmp
jns
rorl
or
inc
cmp
jns
ljmp
xchg
cwtl
popa
shrb
in
adc
pusha
pop
mov
inc
shrb
addr16
mov
push
mov
sbbb
aas
xchg
ret
push
lret
cmc
iret
js
addr16
mov
push
xchg
push
xchg
test
dec
aam
in
movsb
mov
stc
fwait
stos
inc
mov
mov
cmp
imul
movsb
xchg
xchg
je
in
std
ret
add
or
lahf
jae
or
das
scas
or
sbb
mov
mov
je
xor
dec
push
not
fistps
mull
pop
cld
ss
jmp
xor
pop
or
leave
xor
cmp
add
pop
fsubl
inc
adc
int3
mov
lret
dec
outsl
or
mov
idiv
ss
xchg
sub
jl
in
ret
sarb
adc
and
mov
ds
repz
xlat
int
sbb
cmp
mov
jg
mov
lea
jp
pop
mov
pop
xlat
sbb
push
lcall
fwait
jno
rolb
mov
js
xchg
dec
subl
jl
insl
rcr
movsl
and
aas
pop
aas
or
sti
dec
push
mov
mov
lcall
imul
lahf
pop
cmpsl
stos
fisubrl
xchg
pop
pop
dec
imul
insl
movsb
add
push
pop
inc
sbb
movsb
push
fbstp
testl
push
adc
sbb
or
imul
in
xchg
outsl
sub
out
lret
jbe
sub
out
movsl
dec
cld
lcall
decl
rclb
pop
rcll
push
cmp
int
mov
mov
mov
fsubl
pusha
pop
ret
insb
fstps
fwait
iret
aad
sbb
fldt
fistps
xor
pop
xor
cmp
mov
ret
in
mov
push
das
jo
add
inc
rolb
gs
sub
int3
adc
sarb
cmpb
adc
jmp
or
dec
sbb
dec
fimuls
adc
imul
dec
movsb
pop
pop
add
addr16
stc
call
pusha
imul
push
das
jl
cmpsl
mov
inc
hlt
ljmp
jp
imul
outsl
mov
mov
and
ljmp
push
stos
int
lahf
daa
pop
pop
mov
out
pop
or
push
repnz
ljmp
insb
out
cwtl
shll
mov
mov
push
push
call
popf
jge
and
int3
push
push
xlat
test
sar
sbbl
push
sarl
jle
sbb
jle
js
fcmovne
jl
cmp
xor
and
orb
dec
clc
mov
push
ja
push
decb
and
mov
xchg
jp
inc
push
adc
mov
pop
mov
out
fildl
xor
mov
dec
add
mov
mov
imull
or
and
or
ds
xchg
add
add
sbb
cmp
loop
bsr
add
push
dec
dec
and
into
imul
stos
aad
cmpsl
sbb
dec
std
cs
imul
int3
repz
iret
fwait
jb
pop
lret
daa
add
notb
fisttpl
or
or
pop
push
push
dec
sahf
jmp
cmp
call
test
or
sub
and
mov
mov
rol
fstl
lretw
inc
or
jnp
mov
adc
pop
fisttps
test
jno
test
sbb
jmp
adc
movsb
inc
and
loope
shlb
pop
push
or
loopne
jnp
out
movsl
nop
pop
nop
sub
aas
xor
mov
lods
aas
and
scas
fstl
xor
rolb
jmp
xchg
inc
dec
xor
inc
shlb
negb
mov
fcomps
aaa
lock
lea
jl
jns
adc
push
rcl
adc
mov
ret
add
cwtl
out
rcrl
movsb
or
add
jbe
rorl
sbb
pop
sub
outsl
add
sbb
and
rcll
jmp
in
cmp
daa
insl
mov
cmpsb
je
pop
out
push
adc
jge
call
mov
ja
dec
dec
ljmp
out
sub
add
shrb
add
pop
cltd
hlt
mov
daa
ja
ficoml
mov
inc
sbb
adc
inc
pop
and
pop
out
dec
test
xchg
testl
mov
pop
ljmp
sbb
ss
cwtl
mov
inc
call
fisubrs
mov
sti
xchg
andl
mov
ds
rcll
sar
jg
js
xor
lods
mov
cmp
shll
and
dec
sbb
add
hlt
push
push
pop
int
jecxz
adc
inc
push
and
sub
mov
stos
mov
pushf
mov
movsl
inc
add
push
cld
sbbl
xchg
iret
daa
push
and
cmp
jl
ret
scas
call
push
in
push
mov
les
jb
pop
mov
imul
lahf
xchg
dec
xchg
ret
mov
fidivrs
jns
test
jo
mov
cmpsb
pushf
and
orb
push
dec
xchg
es
data16
push
std
dec
clc
cmp
data16
inc
push
movsb
jl
sub
inc
mov
and
pushf
add
cmpsl
mov
adc
movl
add
push
jl
negl
das
mov
mov
xor
dec
out
iret
and
fnstenv
push
pop
cmpb
data16
dec
in
enter
rorb
dec
dec
cmp
inc
shrl
sbb
pop
lock
jnp
xlat
cmp
cmp
addb
js
push
loop
mov
out
rcll
addr16
pop
fsts
sbb
les
sbb
test
inc
cmp
repnz
xchg
lcall
dec
xchg
mov
test
jo
cmpsb
inc
push
mov
call
add
mov
popa
push
js
or
notl
fs
sub
pop
ret
in
push
cld
xchg
mov
pop
jns
or
gs
xchg
lcall
lcall
sbb
sbb
lods
fld
orl
clc
add
mov
sbb
test
repz
jb
sub
cmpsb
out
movd
adc
sub
pop
and
fidivrl
push
mov
lods
mov
loop
stos
xor
clc
pop
lods
mov
hlt
add
imul
inc
mov
ljmp
jecxz
lcall
jbe
jns
sbb
fucomi
jbe
test
pusha
popl
jbe
inc
pop
push
xchg
jns
enter
jnp
inc
pushf
insb
push
arpl
les
sbb
pop
push
inc
pop
aam
insb
pop
pop
mov
dec
mov
and
jnp
ja
push
inc
xchg
pop
push
xchg
ret
sub
inc
fidivl
push
js
mov
pusha
gs
push
mov
cmp
lods
adc
mov
xchg
mov
mov
outsb
int3
es
decb
cmp
into
xchg
lahf
jo
int
call
pop
pop
jo
dec
rcl
jl
and
cmp
shlb
and
jae
outsb
dec
fstps
test
jle
lods
dec
push
in
pop
scas
mov
cli
mov
pop
sbbl
xor
xchg
xchg
mov
outsb
dec
and
imul
jb
xor
dec
popa
cwtl
jae
inc
dec
or
in
mov
mov
shrl
dec
fwait
xchg
mov
and
and
flds
stos
sbbl
in
sub
mov
and
sahf
push
jb
cmp
jmp
cld
push
aas
xor
push
hlt
mov
and
into
sbb
xor
lret
aad
les
mov
sub
shll
xchg
push
mov
mov
inc
cmpsb
or
push
stos
inc
pop
outsb
ja
popl
adc
pop
xchg
cmp
xor
push
mov
mov
ss
mov
addb
jp
xlat
mov
das
adc
pop
mov
aam
push
push
pop
pop
cmpb
fcmove
and
mov
repz
push
jl
xchg
xor
pop
sarb
iret
adc
ret
push
inc
loopne
insl
mov
lods
mull
cltd
roll
movsl
xlat
mov
outsb
lcall
shll
and
mov
sbb
insl
dec
aad
fldt
or
jl
adc
xor
and
aaa
lds
stc
cli
out
push
test
aaa
mov
test
inc
fstpl
and
inc
xor
add
leave
aas
pop
lock
test
inc
je
mov
mov
mov
jne
repnz
and
ret
sarb
and
jbe
cli
pop
les
sub
shll
popf
je
mov
mov
or
std
cs
sbb
pop
or
push
daa
or
enter
jnp
movsb
mov
mov
sub
test
cmp
leave
sti
enter
xor
aas
pop
movsb
fsubl
ret
mov
cltd
enter
lahf
movsl
and
loop
or
xor
cmp
xor
stc
mov
pushf
cmovo
add
inc
daa
or
mov
mov
dec
les
gs
xchg
ret
lods
jbe
adc
mov
pusha
imul
sub
loopne
sbbl
xchg
fists
and
adc
lods
or
and
pushl
cmpsb
mov
cld
aad
jmp
in
pop
inc
lea
dec
dec
jo
dec
cmp
loopne
out
xor
data16
xor
int
imul
aas
sbb
jmp
or
cwtl
int
lods
fstpt
repnz
mov
flds
or
cmc
std
or
mov
cmp
aaa
xor
lea
aaa
push
xor
movsl
and
and
adc
adc
nop
mov
and
sub
jnp
mov
push
inc
mov
imul
push
jecxz
inc
mov
enter
pop
xlat
movntq
push
mov
int3
lods
adc
mov
add
pushf
dec
adc
push
xor
sub
mov
inc
dec
adcb
pop
ret
sub
sub
mov
int
aam
push
mov
mov
lock
incb
pop
loop
dec
sub
fs
add
add
mov
test
push
jmp
mov
dec
addr16
or
outsb
paddsw
xchg
push
pop
pop
xor
push
lea
in
lods
jo
loopne
loope
add
sbb
orl
pop
inc
cmp
cmpsb
iret
insl
mov
inc
sahf
inc
xor
push
imul
fisttpll
xchg
imul
rorl
push
dec
push
xor
lds
push
jmp
shl
jg
inc
dec
mov
push
cmp
cmp
sahf
outsl
rclb
and
sub
lret
in
xchg
push
add
je
adcb
xchg
push
xor
xlat
daa
jne
pop
or
xchg
test
push
mov
jle
mov
hlt
add
xchg
mov
movsb
jb
ljmp
jae
fs
dec
inc
mov
icebp
push
lret
or
cmpl
mov
clc
mov
aad
stc
jge
jb
jo
mov
mov
xor
sbb
jg
lock
push
cmc
mov
loopne
nop
push
dec
stc
ds
mov
mov
sbb
sbb
xchg
inc
rorl
lea
xor
push
ss
push
nop
mov
and
pop
mov
in
icebp
out
xchg
stos
imul
mov
sbbb
sbb
sarb
sub
mov
sub
lods
roll
jle
dec
adc
push
xor
pop
and
dec
mov
add
imulb
jo
xor
fdivp
pop
cmc
stc
cld
sub
mov
xchg
mov
or
call
fisttpl
movsl
sti
or
nop
clc
push
push
and
cltd
test
aad
out
cld
shrl
inc
xrelease
jg
dec
repnz
inc
xchg
fdivr
jmp
mov
pushf
mov
xorl
int3
lret
push
xchg
js
mov
mov
lods
inc
stc
xor
insl
mov
pop
daa
ror
dec
lods
and
in
bound
sbb
aaa
xor
jb
cmp
sbb
xchg
add
lods
mov
lods
dec
out
push
push
mov
pop
jnp
or
and
xchg
dec
loope
sbb
test
cmp
mov
pop
es
and
clc
test
jb
lds
dec
inc
mov
sbb
call
and
mov
bound
lea
out
xchg
mov
iret
jp
adc
outsl
test
and
mov
pop
mov
pusha
sbb
mov
add
jmp
das
test
xchg
mov
repz
out
or
inc
pop
je
xchg
ret
pop
rorb
lods
push
adc
into
adc
xchg
sub
fldt
test
xor
mov
and
out
xchg
movsl
push
test
adc
mov
jno
xchg
sub
inc
add
xchg
addr16
jbe
xchg
jge
jo
sub
lods
andb
mov
push
xchg
arpl
clc
inc
mov
mov
push
ljmp
lods
jecxz
xchg
out
sub
push
xor
mov
jne
out
call
dec
inc
repnz
pop
xlat
mov
lret
jbe
popf
or
popa
and
fsubs
xchg
mov
movsb
test
mov
push
sub
xchg
sub
xchg
scas
sbbl
rcl
sbb
outsl
mov
mov
mov
cltd
cmpsl
xor
xor
xchg
scas
iret
nop
adc
jmp
lea
jne
int
xor
jecxz
cmp
ds
aam
fists
fnstsw
fs
je
sbb
seta
and
dec
clc
and
cld
push
jno
push
cmp
fmuls
movsb
ljmp
ficoms
mov
lods
imul
jle
sub
cmpsl
mov
push
iret
add
mov
flds
shl
fucom
cwtl
aam
lret
mov
adc
mov
sub
sbb
stos
xchg
push
and
cli
imul
movsl
mov
mov
inc
bound
shrb
call
xor
in
sub
or
fsts
mov
push
repnz
iret
jno
sub
movsb
mov
mov
add
addl
shlb
xchg
je
adc
mov
mov
cmp
sub
adc
sbb
out
or
cld
ffreep
fidivrl
cmp
out
adc
adc
out
sahf
hlt
mov
cmpsl
outsl
xchg
fstps
xchg
ja
and
push
dec
in
pop
jo
push
mov
sub
repz
pushl
int3
push
dec
mov
inc
xchg
dec
loop
stos
xchg
aaa
mov
int3
lock
xchg
cmp
mov
push
iret
jmp
jp
push
lods
xchg
popa
dec
xor
cmp
mov
sub
loope
mov
inc
ljmp
outsl
mov
imul
in
sbb
ret
xchg
push
jmp
incb
adc
push
pop
subl
les
dec
mov
add
push
addr16
dec
daa
fildl
inc
pushf
xchg
inc
mov
pop
les
jae
sti
in
cmp
jg
mov
aas
inc
nop
sub
or
fidivl
xor
cmp
mov
push
mov
aam
lret
pushf
adc
loopne
shl
repz
sti
inc
out
add
jp
jmp
xlat
xor
cli
or
in
push
push
outsb
jle
sarb
shlb
jbe
mov
ljmp
stos
or
jb
lods
sub
and
popa
test
inc
pop
cmp
aaa
gs
pop
out
and
fnsave
test
test
inc
xor
mov
push
das
cmp
mov
or
repnz
pop
push
cmp
jmp
stos
jmp
fs
or
leave
ss
sub
shrl
movd
sahf
cmp
xlat
es
mov
pop
outsl
cmp
sarl
cltd
cli
fisttpl
in
mov
jb
dec
or
mov
dec
insl
in
outsb
xchg
fisttpll
add
jge
fs
cmpsl
cmp
mov
and
es
mov
mov
mov
scas
out
cltd
gs
gs
dec
xchg
mov
jnp
rol
mov
decl
xor
std
pop
sub
dec
test
cmpl
sti
loop
push
push
inc
mov
mov
stc
xchg
jo
push
cmp
std
inc
lds
cmp
or
sbb
or
jno
sub
ds
jnp
lods
mov
in
gs
dec
sbb
add
mov
shl
mov
lea
pop
mov
shr
shrb
mov
addb
push
das
loop
push
or
sbb
nop
sbbl
into
sub
incl
out
pop
loopne
pop
cmp
dec
dec
push
mov
mov
orb
lods
ret
mov
stos
mov
jno
decb
scas
xor
fwait
pop
or
addr16
xor
jbe
call
push
push
mov
enter
and
mov
loope
pop
xlat
cltd
add
adc
cmp
roll
ss
dec
popf
sar
mov
push
pop
cli
call
xchg
cmc
dec
fdivr
js
outsb
pop
cmpsl
inc
xchg
popa
nop
popf
adc
clc
loope
dec
push
xor
orb
pop
adc
pop
repz
xor
push
xchg
movsl
aas
pop
lock
push
mov
lods
cwtl
xchg
dec
lahf
inc
push
push
add
mov
inc
imul
mov
mov
aad
aad
sub
in
and
bound
lods
sub
ret
shlb
cmc
pop
arpl
negl
test
ss
push
pop
mov
clc
cmp
dec
scas
gs
push
shlb
loope
or
out
js
add
add
call
stos
and
dec
stos
pop
das
sti
out
hlt
into
inc
fcomip
push
xchg
loopne
icebp
add
mov
mov
outsl
cltd
dec
jmp
and
mov
pop
xor
mov
or
or
fdecstp
mov
pop
hlt
fildl
jno
cmp
fildl
fidivrl
pop
xor
add
cmc
ret
fnsave
jge
pop
inc
or
in
jmp
out
push
cltd
sti
fwait
dec
int3
dec
in
or
test
or
sbb
sub
pop
push
loope
out
and
xchg
arpl
adc
and
adc
imul
sti
cld
mov
outsb
mov
repnz
jo
sbb
es
inc
data16
outsl
out
and
add
jl
rcr
and
idivl
cmp
lods
add
and
imull
test
jge
jl
rcrl
test
mov
cli
pop
dec
jae
xchg
mov
in
xchg
sub
fisttpl
cmc
mov
push
dec
aam
sub
lret
dec
dec
jge
mov
arpl
lret
addb
stc
inc
dec
dec
inc
xchg
lea
outsb
xchg
inc
push
pop
dec
mov
jecxz
movsl
in
push
add
sbb
hlt
cmp
pop
pop
dec
into
int3
pop
push
cli
pusha
mov
and
out
int3
xchg
and
leave
add
scas
les
or
aad
jno
cmp
xchg
xchg
dec
aas
outsl
stos
pop
mov
fdivrs
jae
jle
movsl
add
loop
xchg
dec
lret
pop
addr16
das
mov
std
faddp
add
push
js
dec
xchg
add
pop
xchg
aad
lock
daa
push
out
mov
mov
push
mov
mov
loop
dec
jmp
inc
int
xor
jns
mov
cmp
ja
jecxz
iret
xchg
rcl
jbe
outsb
push
pop
add
int3
or
fistpl
ret
lds
fimuls
add
fstpl
mov
mov
push
sbb
jmp
shll
mov
add
je
push
mov
outsl
icebp
les
test
lea
shll
mov
movsl
cmc
sub
xchg
cmpsl
mov
ljmp
mov
stc
sbb
jmp
fisubrs
jno
pop
mov
mov
lods
dec
mov
xor
ss
sub
rolb
inc
or
pop
ja
xor
pushf
lcall
sti
xor
nop
outsb
dec
sub
lods
jg
shrl
jae
jne
xchg
lret
jno
daa
popf
into
jnp
mov
dec
movsb
out
enter
or
pop
add
pop
jno
and
jns
movsb
jg
sbb
add
sbb
dec
dec
repz
daa
out
mov
xor
faddl
in
push
sub
xor
push
cmp
and
mov
dec
jae
repnz
pop
pop
or
mov
dec
pop
mov
inc
imul
inc
popa
mov
shl
cwtl
sbb
nop
sti
adc
cltd
outsl
xchg
mov
fwait
ss
cmp
and
ja
loopne
xchg
lcall
pusha
orb
bound
mov
push
push
mov
jns
scas
push
add
xchg
adc
es
inc
mov
and
pop
xchg
shr
mov
mov
lcall
int3
inc
xlat
sub
xchg
mov
std
es
scas
loopne
or
inc
mov
fs
xchg
and
das
jns
push
pop
jecxz
out
fmull
es
loope
xor
pop
stos
and
lahf
jae
inc
cmp
pop
cwtl
mov
insl
lea
popa
dec
cmpsb
in
rolb
shlb
popf
pop
xchg
add
jns
cmp
shr
out
outsb
jo
ljmp
ss
push
repz
sub
inc
sbb
inc
jbe
cmp
nop
insl
xchg
gs
icebp
leave
fwait
dec
push
push
push
xchg
xor
mov
adcb
inc
add
pop
mov
dec
movsl
js
insl
and
data16
jne
jl
adc
adc
inc
xor
push
lret
push
mov
cwtl
add
gs
mov
push
pop
cmpsl
pushf
push
and
movsb
scas
push
inc
mov
xchg
xchg
loopne
clc
sub
sbb
into
mov
in
rcr
cmpb
shlb
cmp
jp
xor
push
sbb
dec
and
jecxz
dec
test
ja
cmp
or
clc
or
push
stos
cmp
xchg
add
stos
jo
inc
nop
add
hlt
mov
sti
daa
std
out
ror
jp
ss
dec
dec
pop
idivl
mov
out
notl
or
aam
ja
cmpsb
mov
sbb
ljmp
movsl
pusha
pushf
pushf
cmp
mov
inc
ret
bts
dec
pushf
sub
xchg
add
mov
sahf
sbb
movsl
cwtl
inc
pop
ret
pop
pop
jns
das
add
push
dec
adc
jl
jl
sbb
pop
fildll
cli
das
jbe
dec
pop
inc
jb
fldt
sbb
repz
jge
ljmp
js
loopne
add
push
mov
aas
test
ds
jns
mov
jae
enter
mov
mov
push
popf
jl
dec
bound
xor
jp
and
jb
push
and
hlt
xor
aas
ret
mov
sub
adc
popl
mov
jbe
rolb
rolb
pop
pop
inc
add
xchg
or
cmpsb
aam
mov
out
dec
xchg
add
movsl
inc
mov
inc
cmp
jg
iret
pop
loop
dec
jmp
or
loop
subb
push
mov
xchg
cli
fstl
imull
xor
push
cmp
shlb
pushf
pop
arpl
cmp
pop
mov
fstpl
adc
mov
sti
in
movsb
imul
leave
mov
in
in
scas
imul
subb
mov
mov
jl
in
add
cmp
imul
call
loopne
mov
sti
inc
add
shrl
xchg
mov
lret
lret
add
lcall
stos
or
or
dec
loopne
mov
sub
fiaddl
int
xchg
dec
cs
push
xchg
mov
jb
fidivrl
add
xchg
xchg
xchg
adc
push
pop
enter
aaa
pop
mov
ja
lret
jmp
fcoms
or
fldl
pop
jmp
test
enter
lds
push
xchg
loop
fstp
jge
out
cltd
mov
mov
adc
in
int3
inc
incl
sub
inc
mov
xchg
loope
jno
les
insb
sub
jb
mov
imul
fldcw
imul
dec
sbb
popf
jno
or
mov
aas
pop
loope
shll
pop
xor
xchg
insb
ret
rcrl
adc
aam
in
seta
xchg
push
adc
fs
mov
fadds
adc
inc
push
leave
or
add
mov
loop
shrb
xor
inc
adc
scas
and
mov
add
lods
cwtl
push
andl
adc
jecxz
sbb
movb
pop
jne
or
jl
movsb
and
jl
cmp
jl
and
push
ds
insb
mov
fsubs
sbb
xchg
or
xchg
fucom
mov
add
mull
inc
dec
out
sbb
inc
sbb
or
sbb
outsl
xor
into
mov
fcmovbe
cmpsl
or
jb
or
pop
nop
mov
jbe
push
les
xorb
aaa
nop
aas
inc
pop
sbb
jecxz
fisubs
mov
and
mov
pop
call
dec
mov
incb
std
xor
sbb
jle
pop
mov
cmp
mov
add
jo
ljmp
popa
xchg
movsl
iret
mov
cmc
aas
add
pop
mov
enter
xchg
dec
jbe
loopne
cmp
sahf
mov
mov
dec
imul
rorb
inc
push
sbb
sbb
mov
xchg
test
push
cmp
mov
mov
sub
jb
std
cmc
jbe
push
mov
loopne
es
andl
mulb
pusha
dec
push
in
aam
icebp
xor
bound
cld
mov
xor
pop
dec
sub
imul
lods
jae
fnstenv
call
sbbl
test
lcall
mov
adc
lods
mov
out
push
add
sub
imul
xchg
pusha
int
add
loop
aas
loop
out
sahf
fsubs
xchg
push
out
sbb
jle
and
mov
xor
or
xchg
xchg
xchg
pop
cmpsl
xchg
cli
push
cmpl
cmp
aaa
and
out
jmp
rep
sub
aad
aas
or
mov
xchg
fistpll
mov
outsl
cmp
sub
dec
or
jecxz
lret
or
mov
roll
imul
and
add
jmp
notl
jne
test
rorl
xchg
jle
loopne
mov
pop
add
out
cmc
jb
mov
mov
cmp
pop
addl
aas
hlt
fidivs
mov
dec
mov
mov
push
sub
xchg
ja
scas
or
scas
pop
sbb
sub
fcompl
lea
pop
out
and
jl
loop
sub
scas
push
mov
sub
imul
pop
dec
pusha
and
sub
pop
mov
cltd
jns
fildll
insb
mov
popf
lds
pop
popa
cmpl
test
negb
mov
inc
xchg
or
jmp
or
jp
dec
bound
fs
pusha
mov
sub
pop
cwtl
iret
lods
dec
jne
dec
mov
inc
jle
or
and
mov
pop
cmp
xchg
cwtl
pop
nop
sbb
fbld
mov
jne
xor
jecxz
mov
shll
push
jl
sbb
insl
popf
cmp
jno
outsl
sbb
mov
out
cmpsb
cmpsb
cld
pushf
push
inc
sbb
scas
xchg
pop
gs
fists
into
push
imul
fadds
mov
cltd
pop
and
scas
pushf
fdivs
ds
cmp
fidivl
jle
push
dec
les
mov
sub
mov
scas
push
and
shll
ja
test
out
fisubs
nop
xor
jbe
je
pop
cli
daa
jb
pop
mov
lock
and
cmc
mov
aaa
xchg
mov
cmp
sub
loope
jg
in
adcw
cltd
inc
imul
aam
cmc
mov
sbb
dec
jl
frstor
xchg
movsb
jle
push
cmpsb
adc
fsubr
cmp
call
sbb
stos
bound
mov
mov
lcall
jle
and
sbb
fstpl
movsl
fsubrp
add
leave
out
jle
loopne
rorb
sti
call
imul
in
bound
ja
mov
fcoml
pop
cmpl
pop
jno
xchg
mov
jg
das
aaa
push
push
movsb
xchg
inc
jae
inc
shll
mov
int3
pop
pushf
inc
popa
dec
mov
shlb
stos
inc
sub
and
mov
add
and
jb
idiv
clc
dec
jbe
sbb
sti
into
adc
or
cld
jmp
xchg
scas
push
push
test
movsb
jb
push
mov
movsb
in
or
test
outsl
insb
aad
push
and
fbld
mov
xchg
ficompl
decb
stc
cmpsb
sbb
in
std
jecxz
bound
cmpsl
ss
out
add
push
xorb
inc
cwtl
data16
movsb
fs
mov
cs
cltd
jg
mov
pushf
xor
jg
xchg
insb
push
mov
mov
inc
add
mov
push
sub
pop
add
insb
inc
mov
hlt
test
lret
push
testb
cmp
loopne
cmpsb
mov
std
cmp
xchg
mov
jecxz
and
push
cltd
test
mov
mov
ret
push
or
dec
adc
stos
push
addr16
or
cmp
jb
fisubl
jnp
jno
push
inc
pop
cmp
jnp
repz
mov
jg
jl
and
jb
shrb
sub
adc
push
test
int3
sbb
shlb
mov
pop
sbb
in
mov
test
mov
inc
movsl
mov
add
inc
fwait
push
sbb
push
mov
inc
xor
mov
ja
scas
or
and
or
sti
mov
pushf
out
mov
scas
xchg
rcrb
inc
inc
adc
test
loop
jle
and
xchg
out
add
cmc
imul
test
add
pop
movsl
pop
push
test
shrb
cmp
mov
inc
xchg
jmp
add
fcomp
fsubs
daa
fs
jl
lret
in
adc
ficomps
rorl
out
fs
loopne
mov
lods
jge
inc
cmp
mov
jmp
and
imul
in
dec
xchg
xchg
pop
popa
and
mov
shrl
or
adc
je
push
xor
mov
jns
cmc
jno
cmp
insb
addr16
or
adc
inc
and
fldl
cmc
adc
shll
cmp
leave
stc
pop
push
iret
fisubrl
jle
inc
loop
hlt
fcmovnu
cmp
jge
popf
mov
test
jae
push
outsb
xchg
add
push
xor
fbstp
in
shlb
lods
cld
inc
orb
imul
ds
cld
insl
mov
js
imul
dec
adc
add
js
mov
pop
adc
test
and
cmc
mov
mov
fwait
jge
bound
inc
jbe
ljmp
xchg
mov
data16
stos
pop
sub
lret
mov
sbb
mov
inc
loop
jne
xor
ja
jns
push
mov
push
icebp
sbb
pop
mov
xor
push
push
aam
xchg
in
movsl
jg
sbb
xor
loopne
scas
insl
cmp
add
pop
sbb
ss
imul
insl
out
mov
push
icebp
mov
fwait
or
sbb
daa
test
enter
out
and
adc
rcll
cmp
out
test
mov
sbb
inc
ljmp
fistps
adc
sbb
lock
xabort
cmpsl
sbb
xor
sbbb
mov
in
adc
orb
in
adc
cmpsb
inc
cmpsb
pop
out
xchg
outsb
andb
ret
xor
push
push
scas
dec
call
push
jns
adc
xchg
mov
cwtl
jle
push
lahf
push
cmp
sti
lds
pop
fcmove
xchg
loop
loop
sahf
mov
jnp
xchg
enter
stos
jp
clc
pop
push
aad
jns
mov
in
loop
popf
push
mov
push
int3
inc
in
out
sbb
shll
and
or
les
xchg
or
les
iret
jno
jle
in
push
ret
jbe
or
addr16
bnd
pop
pop
jl
loope
mov
mov
movl
xor
ficompl
xor
out
or
sub
cli
dec
jmp
xor
pop
pop
jnp
lock
and
add
cmp
or
mov
cli
and
cwtl
jae
mov
lcall
push
fld
bound
out
push
mov
xor
call
rorb
add
xor
ficoml
popa
inc
icebp
outsl
inc
cld
pop
push
cltd
push
xchg
into
inc
subb
lcall
incb
sub
push
lret
sarb
enter
sbb
push
loope
mov
mov
mov
jmp
cmp
into
inc
push
xor
mov
das
cmp
cltd
test
or
leave
or
leave
pop
xlat
mov
jo
or
sub
fwait
xor
inc
push
in
adc
fiaddl
ret
sbb
and
adcb
add
adc
js
test
pop
out
sub
pop
or
cmp
cmc
stos
lret
pop
dec
ficomps
or
and
mov
arpl
xchg
out
mov
gs
out
sub
pop
jg
push
mov
inc
sarb
jmp
decb
out
mov
mov
pop
insl
lcall
adc
adc
cmp
mov
jae
sarb
mulb
rolb
movsl
in
rorl
push
ljmp
xchg
aas
or
xchg
lods
mov
sti
fdivr
jbe
jecxz
js
jne
sbb
pop
xlat
inc
push
xlat
xor
xlat
loope
fwait
test
inc
mov
les
aaa
xchg
dec
gs
cli
cltd
pushl
jns
movsb
sti
cmp
mov
jo
or
repz
or
sbb
jecxz
aam
dec
jbe
cmp
mov
pop
pop
jg
fs
rol
mov
out
push
or
add
enter
cmp
arpl
in
mov
mov
add
lods
jecxz
inc
std
test
mov
into
pop
add
push
add
lret
pop
subb
test
dec
cmp
jecxz
rcll
dec
mov
mov
bound
hlt
add
and
pop
pusha
fs
out
mov
xchg
or
xchg
mov
out
pop
aaa
jg
and
mov
sbb
imul
dec
sahf
lods
test
aad
test
pop
xor
dec
ss
in
scas
cmpsl
cmp
jle
fldcw
mov
dec
mov
lcall
xor
es
cmp
inc
mov
out
xor
fisttps
shl
and
xchg
and
mov
push
mov
or
lret
pop
mov
pop
jne,pt
stc
popa
xchg
call
fnstcw
pop
nop
out
out
ss
iret
notl
xor
mov
dec
adc
add
dec
les
lahf
push
rorl
imulb
imul
ficomps
xchg
adcl
das
push
enter
mov
xor
into
in
and
jmp
sbb
int
ds
mov
rolb
add
adc
xorb
mov
pop
sbbl
dec
jb
shl
cmpsl
inc
xchg
xor
sbb
sub
iret
dec
xchg
fsubp
negl
xor
ret
aad
into
mov
xchg
pop
fdivs
sbb
jle
pushl
lds
jo
in
fwait
mulb
out
mov
push
icebp
xor
mov
xor
adc
jnp
sub
sbb
popf
dec
xor
and
mov
js
out
or
sub
insl
ret
js
inc
push
mov
cmp
jne
movb
fildll
out
sarb
popf
loop
mov
nop
out
adc
daa
or
cmc
call
imul
int3
repz
insl
cmp
ficoms
es
loop
adc
adc
adc
fiaddl
push
ficoms
mov
lds
mov
and
mov
lods
xor
jp
sub
clc
mov
imul
inc
sub
cmp
mov
in
pop
andb
loop
leave
test
cli
cwtl
push
inc
test
lods
clc
rcll
dec
lds
addr16
mov
cwtl
pop
and
clc
mov
pop
mov
test
xchg
mov
mov
pop
jl
movsl
pop
inc
popf
daa
scas
add
push
cmc
fisubl
mov
imul
cmc
lcall
push
adc
push
cs
push
pop
dec
xor
inc
hlt
repz
dec
lock
adc
pop
sbb
in
rorl
mov
add
in
cs
mov
xchg
fwait
adc
popa
jb
jbe
and
dec
jg
pop
aaa
sub
rcl
push
mov
sbb
mov
in
ja
and
test
or
in
dec
add
out
xchg
inc
les
clc
jle
leave
or
xor
dec
mov
mov
fsubrl
dec
xor
add
ja
fcomps
nop
enter
inc
insl
dec
fwait
iret
int3
inc
add
xor
adc
push
cmp
das
popf
xchg
xchg
daa
int
xor
xchg
inc
imul
xchg
push
cltd
push
call
sbb
mov
inc
clc
dec
xchg
pop
sub
inc
mov
stos
mov
ret
arpl
pusha
cmp
or
nop
out
cld
hlt
notl
sti
popf
or
outsl
data16
aas
mov
sbb
adc
mov
cltd
mov
int3
mov
sub
rcl
cmp
mov
ret
ja
in
hlt
dec
xorb
hlt
repz
inc
aaa
arpl
idivb
ds
cmpsl
sub
scas
mov
out
push
adc
loop
cli
loopne
push
mov
les
mov
bnd
jnp
mov
adcb
sub
repnz
and
outsb
orl
mov
outsb
add
shll
dec
mov
sub
inc
insb
fistps
lcall
fcom
fs
add
pusha
mov
jne
test
data16
fcmovbe
lods
push
in
out
sub
mov
sti
mov
mov
aaa
xor
pusha
xor
dec
or
cs
mov
cmpl
fbstp
insl
xor
or
cmp
inc
dec
xchg
shrl
dec
out
cmc
gs
lods
fs
fptan
jge
movsb
xchg
arpl
not
lock
in
pop
mov
clc
mov
sahf
enter
int
cli
loope
cmpsl
mov
stc
mov
sarl
xchg
sub
movsl
insl
lret
add
xor
popf
cmp
push
jb
mov
movsb
inc
and
jecxz
and
negb
mov
jp
ds
outsl
outsl
mov
cmp
xchg
ret
or
pop
mov
add
test
jecxz
ja
cli
pushf
mov
loope
mov
pop
jno
adc
jo
sbb
les
lcall
dec
fcmovu
lcall
sub
addr16
popa
push
jl
test
jl
outsl
or
and
orb
jnp
sbb
add
fistpl
xchg
inc
push
mov
lock
push
aaa
add
lcall
push
adc
aaa
call
push
xor
test
in
xlat
sti
outsb
mov
xchg
adc
sbb
gs
lods
shrb
imul
scas
lods
mov
call
mov
movsl
mov
in
sbb
xor
mov
mov
dec
int
mov
scas
pop
imul
scas
push
pop
bound
icebp
or
mov
les
xor
mov
faddp
cwtl
pop
incb
add
mov
dec
in
icebp
outsl
cmpsl
jl
orl
xor
push
adc
scas
add
and
insl
mov
mov
jge
insl
pmaxub
mov
dec
int
sbb
dec
mov
push
pop
fbld
adc
push
ret
notb
or
push
test
sahf
inc
or
jg
call
clc
popf
sbb
pop
scas
call
or
pop
pop
sbb
ljmp
or
enter
data16
cwtl
and
or
xchg
xor
shll
movsb
popf
mov
insb
popf
xchg
shl
cli
jb
mov
mov
stos
enter
push
xchg
jp
in
jmp
xor
loope
idivb
mov
mov
jmp
xchg
cltd
test
mov
in
stc
stc
sub
push
mov
push
pop
lods
icebp
cli
pop
rorb
push
lret
ds
add
popf
push
push
and
inc
mov
adc
outsl
es
and
cmp
cmp
jae
adc
push
das
movb
scas
mov
push
repnz
pop
pop
sarb
add
pop
sub
xor
outsb
roll
mov
adc
jle
push
ret
enter
mov
cli
add
and
inc
loopne
sub
arpl
fs
and
wrmsr
ret
popf
ljmpw
test
adc
clc
jno
xchg
jp
fistpll
mov
push
or
movups
push
pop
pop
aas
xor
or
rorl
push
xor
leave
push
or
jae
adc
or
xor
dec
or
ljmp
dec
icebp
push
sarl
and
out
push
fimuls
ss
push
ret
pop
imulb
xor
loopne
movsb
enter
enter
cmp
mov
lock
das
shrl
lcall
aad
jmp
inc
sbb
dec
mov
jmp
jne
jmp
xor
test
jb
push
adc
inc
data16
inc
mov
test
dec
jecxz
js
js
pop
lods
std
xchg
aaa
push
sbb
xchg
jg
push
das
aas
add
andl
push
adc
sahf
push
enter
jle
mov
pushf
mov
loopne
int3
test
xorb
pusha
dec
jns
stos
scas
jo
push
pop
sub
push
mov
fidivs
mov
js
inc
aad
jecxz
lret
ret
outsl
in
sysret
cmp
inc
dec
out
xor
hlt
cmp
cmpsl
pop
pop
inc
test
push
lods
fstpl
push
cmp
add
sbb
jne
push
xchg
inc
pusha
or
out
subb
jne
icebp
pushf
push
es
jle
adc
jo
lret
int3
rcrb
cwtl
push
cmp
fldt
cmp
mov
push
nop
fsubl
je
mov
jle
sub
xlat
push
ret
seto
dec
in
sub
jmp
rorb
pusha
and
fdivl
and
ror
je
fs
jge
pop
inc
insb
scas
fcomip
mov
loope
pmaddwd
jnp
loop
in
stos
mov
push
jns
dec
mov
pop
jbe
test
mov
inc
dec
push
mov
and
pop
pop
push
jns
loopne
dec
mov
push
mov
mov
mov
ss
and
sbb
sbb
mov
call
mov
jle
xor
cmpsl
adc
test
mov
mov
aad
pop
fs
fidivl
dec
lahf
xchg
xchg
movsb
mov
and
iret
inc
xor
in
jg
and
cltd
dec
mov
outsl
flds
ret
lahf
mov
mov
inc
rol
outsb
xchg
lods
cltd
sbb
dec
into
cmp
sub
cmp
adc
rol
sub
jmp
stos
or
xor
in
push
xor
and
lret
sahf
repnz
inc
sub
sti
sbb
out
jmp
bnd
xor
das
fucomip
lahf
loope
inc
jmp
jmp
or
xor
mov
sub
subb
mov
mov
inc
jb
push
loop
call
test
das
fstp
cwtl
jno
lea
divl
mov
jns
cmpsl
fnstsw
lea
cmp
pushf
adc
jno
rcrb
int3
sbb
cmpsl
adc
inc
cmp
cmpb
faddl
jge
mov
arpl
movsl
lods
xor
jnp
adc
pop
mov
les
sbb
outsl
popa
subb
sti
add
sub
iret
mov
in
pop
mov
cmp
jnp
inc
add
pop
fcoml
testb
sub
orb
shlb
dec
test
lahf
shll
mov
mov
scas
mov
jecxz
xchg
imul
dec
outsb
mov
pop
push
imul
das
dec
and
adc
dec
xchg
fisubs
sub
push
fistpll
aas
add
scas
popf
push
test
test
cmp
push
in
pop
sbb
or
je
jbe
insl
pop
fstpl
dec
cmpsb
les
push
push
mov
mov
lahf
das
cwtl
pop
adc
jns
pop
leave
xchg
jp
mov
sbb
jle
and
leave
or
jno
mov
xor
sbb
fadd
in
push
dec
xchg
test
push
xlat
repz
push
sbb
add
and
jg
movsl
sbb
daa
jns
and
jle
sbb
loop
cwtl
lret
stos
data16
mov
jmp
xor
or
jb
push
mov
out
cmpsl
inc
mov
push
pop
fdivs
pop
nop
push
mov
jae
gs
scas
pop
mov
daa
insl
cld
xchg
xchg
cmpsl
xchg
jae
sbb
dec
in
fdivs
dec
imul
sahf
mov
sub
out
add
je
jmp
js
cmp
push
sub
xor
sub
enter
pop
inc
outsb
rcll
sar
aam
jns
int3
cmpsl
int
test
out
push
cli
pop
cmc
jne
das
movsb
call
pop
pop
add
mov
xchg
and
sbb
pop
aam
mov
lea
jle
cmpsb
shr
rorl
mov
pop
rcrl
ds
mov
mov
testb
test
mov
mov
aaa
js
in
lock
cmpsb
ffreep
dec
xor
or
add
dec
and
inc
jno
inc
daa
add
cwtl
jmp
ret
push
pop
xlat
xchg
cmp
mov
pushf
add
fisttpl
inc
ss
sbbb
mov
dec
stos
mov
push
shlb
mov
movsl
sbb
ds
cmp
sub
adc
xchg
lods
lret
lods
push
into
fdivr
fimuls
repnz
push
xor
int3
adc
int
repz
mov
stos
aas
stc
stos
lret
arpl
push
jne
ja
jp
mov
xchg
add
mov
sbb
sub
xchg
rclb
xchg
in
mov
scas
repz
fwait
popf
cmp
cmpb
dec
adc
or
je
lea
scas
ret
push
scas
mov
mov
int
in
add
sahf
daa
icebp
popf
mov
sbb
dec
jle
fs
test
jb
fcmove
add
mov
cmp
mov
fs
push
cld
and
stos
and
pushl
lods
adc
aas
cmp
pop
pop
xor
jae
pop
cwtl
xchg
aaa
pop
inc
js
adc
add
mov
xchg
jae
add
inc
out
cmpsl
add
xchg
sti
stc
mov
inc
in
js
push
out
sbb
rcll
pop
dec
adc
stc
sub
mov
fucomp
jae
sbb
add
mov
fidivrs
pop
push
repnz
xchg
les
mov
push
push
push
pop
jb
stos
jmp
pop
call
cld
dec
pusha
mov
test
mov
dec
clc
mov
leave
sbb
aaa
adc
idivl
jnp
outsl
sub
or
jl
or
imul
ja
mov
add
sub
cmp
repz
rol
mov
ljmp
cmp
and
sbb
jo
inc
pusha
out
loope
or
push
jbe
arpl
fdivrl
icebp
add
stos
sub
add
dec
inc
cld
xor
notl
pop
lret
dec
dec
mov
fistps
stos
mov
insb
das
jg
std
icebp
jns
push
xor
ljmp
in
lock
bound
push
pop
push
mov
inc
sub
test
repnz
or
hlt
fisubl
dec
out
ret
fcomp
pop
loopne
arpl
mov
mov
push
xchg
mov
repz
push
scas
ljmp
mov
shlb
or
aas
pop
cmpsl
das
inc
dec
out
mov
and
dec
in
rcll
inc
xor
daa
push
xor
jge
int3
mov
pop
test
hlt
mov
push
int3
ja
add
dec
cmc
sub
push
fmulp
cmc
mov
xchg
pop
pop
es
mov
pushf
inc
out
outsb
js
sub
frstor
fnstenv
fwait
sbb
xchg
out
sub
andb
jl
ret
test
or
add
xor
mov
into
sub
sbb
repz
test
mov
hlt
jge
jb
jp
dec
pop
fsubl
into
rolb
jp
shrl
add
lods
leave
inc
push
pop
dec
out
rcr
ror
or
push
cmp
mov
jae
icebp
xchg
mov
jns
inc
add
jnp
mov
mov
jae
nop
inc
xor
movsl
imul
sub
je
pop
mov
popa
ds
push
mov
or
or
sub
sbb
pop
enter
clc
je
xchg
fst
mov
out
fs
scas
iret
dec
sbbl
fstpl
dec
repnz
pop
push
test
sub
xchg
clc
in
and
outsb
push
jno
test
lcall
lahf
imul
add
jb
out
lock
cmpsb
orb
inc
xor
fistl
aas
aad
jmp
and
fdivr
jo
push
pushf
in
jns
or
mov
pop
mov
jb
cmp
icebp
out
jne
lds
out
and
loop
or
pusha
shlb
fwait
jbe
mov
test
jae
out
decl
jb
pop
mov
xor
jle
sbb
shrl
pop
pop
ja
ljmp
inc
cmpl
mov
test
sub
outsl
loop
iret
sub
loop
push
es
jbe
adc
mov
stos
movsl
in
or
mov
mov
sub
push
out
sbb
in
mov
sub
and
sub
cmp
ss
into
loopne
mov
pop
adcl
pop
mov
rcr
inc
mov
cmpsb
push
adc
js
lahf
inc
outsl
mov
mov
rcr
xchg
xor
or
rcr
pop
pop
enter
add
repnz
in
add
enter
and
test
adc
stos
push
lcall
in
and
or
or
jne
loop
lock
sub
and
cmp
adc
and
lods
xchg
or
test
sahf
adc
adc
mov
pop
pop
je
jnp
popl
pop
out
in
divl
inc
push
or
add
out
pop
rsqrtps
lds
repz
fdivrs
in
ss
popa
mov
and
xchg
inc
push
fistps
jnp
pop
mov
adc
mov
lret
push
mov
push
and
and
cmp
repz
or
cmpl
aad
loop
mov
adc
dec
aas
and
je
flds
dec
xlat
fwait
sbb
data16
xor
xlat
adc
icebp
push
call
add
push
ja
jmp
xor
mov
cs
push
int
adc
dec
std
test
movsb
push
dec
xlat
dec
cmp
js
add
mov
test
scas
push
add
sub
std
repz
stos
sub
movswl
sbb
adc
jbe
fs
call
in
sub
stos
add
xchg
ds
imull
test
or
sbb
sbb
and
xchg
push
cmp
dec
mov
in
sub
mov
nop
cmp
push
jmp
add
xor
pusha
pop
pop
mov
jb
outsb
push
sahf
test
jge
pusha
jns
fcmove
pop
inc
test
mov
xorb
sbb
sahf
xor
out
xchg
dec
stos
pop
fwait
jl
int
mov
cmpb
test
gs
push
dec
rcll
stos
sub
inc
inc
pop
or
sbb
ljmp
scas
lret
mov
dec
inc
insl
xor
js
mov
inc
rolb
icebp
movb
xchg
cmpsl
mov
jl
call
pusha
shll
sbb
pop
enter
or
mov
decb
mov
mov
stc
ds
push
sub
push
adc
popl
repz
repz
lcall
sbbl
or
pop
insb
insb
test
mov
mov
in
lock
mov
mov
mov
add
and
loope
adc
add
cmp
das
in
sbb
sar
inc
imul
ds
adc
push
mov
and
lock
loop
loopne
pop
xchg
out
repz
notb
out
xchg
paddusw
mov
int3
or
iret
in
arpl
jmp
push
jb
loope
test
sub
mov
inc
sahf
js
sbb
out
push
sub
xchg
jns
xchg
jmp
hlt
popa
jp
in
mov
or
or
mov
push
pushf
jns
cwtl
lock
lods
inc
sarl
lcall
aad
mov
mov
jmp
aad
jg
sbb
clc
add
jg
xor
dec
inc
outsl
and
inc
mov
sti
xor
cld
push
scas
mov
push
pushf
lods
leave
ret
sti
shlb
cmp
insb
add
jbe
xlat
sub
fcoml
cmpsb
aad
jg
enter
pop
repnz
cmpsb
adc
mov
decb
jg
mov
xor
xchg
sub
aas
fldl
mov
jp
xchg
sub
fidivs
scas
mov
imul
inc
xchg
sbb
add
in
sbb
insl
icebp
xor
xchg
mov
out
frstor
push
mov
add
xchg
mov
daa
or
pop
mov
cwtl
sbb
mov
jmp
mov
adc
test
shrb
dec
sbb
imul
xchg
and
jecxz
push
adc
call
sbb
cmp
shlb
out
lcall
fcoml
fstpt
xchg
jae
lret
mov
xlat
jmp
mov
sub
sarl
jbe
xchg
xchg
xchg
or
xchg
sub
ja
dec
add
testl
imul
das
xor
push
push
jne
xor
mov
hlt
add
xor
outsl
fsubrs
movsl
mov
xor
push
sti
xchg
sbb
inc
mov
cmp
mov
outsb
or
sbb
add
pop
ljmp
push
pop
sbbl
aad
mov
push
clc
mov
mov
movl
jecxz
xchg
adcl
dec
or
cmp
test
cmp
cmp
pop
rcrb
jp
push
ljmp
xor
adc
push
inc
jo
push
push
adc
inc
sub
icebp
xchg
movsb
mov
cmp
add
stos
dec
inc
push
dec
loopne
jecxz
mov
stos
out
xor
xor
int3
jae
dec
adc
aas
jmp
fisttpll
push
sbbb
shrl
or
cwtl
xor
jb
pop
das
arpl
jne
pop
hlt
popf
xchg
aam
in
or
int3
fldl
in
xor
jge
shrl
rsqrtps
jno
int
xchg
pop
and
cmc
xchg
xchg
in
xchg
inc
inc
add
push
pushf
pop
inc
ret
push
roll
sub
sti
mov
lea
inc
jns
mov
pop
orb
divl
xorb
fs
lret
fwait
les
aas
cli
cmpsl
push
xchg
sbb
sbb
int
xchg
cmpsb
mov
lret
and
jnp
pop
sti
cs
cmp
dec
les
lock
insb
out
fadds
xchg
sarb
dec
mov
decb
xorl
rol
popf
push
pop
cltd
mov
test
hlt
in
mov
je
gs
pusha
addps
test
cs
mov
into
jp
push
jae
push
push
fnsave
push
cmc
insl
js
faddl
notl
adc
mov
mov
add
fimull
mov
push
mov
sbb
push
dec
adc
pushf
mov
jle
adc
mov
bound
jo
ror
mov
test
inc
inc
repz
ficomps
call
rorl
leave
leave
aaa
stos
push
data16
iret
jle
stos
mov
psubw
jb
inc
hlt
pushf
stc
and
mov
gs
loope
lcall
dec
je
or
jne
adc
inc
inc
adc
push
cmc
xlat
cmpsl
aam
popa
cmc
movsl
mov
cld
mov
cwtl
andb
jge
mov
inc
in
enter
and
mov
iret
mov
cmpsb
shlb
stos
mov
inc
mov
jg
movl
out
mov
cmc
sbb
imul
enter
test
jp
loope
or
movsb
insb
scas
xchg
insl
inc
xchg
mov
cli
std
movl
pop
adcb
les
inc
sar
out
imul
sub
fidivrs
nop
or
xchg
sbb
stos
sahf
jl
aad
sub
in
lcall
je
faddl
add
adcl
stc
and
adc
punpckldq
push
pop
aas
xor
repz
push
xorl
jle
popa
mov
imul
xlat
or
mov
mov
popa
or
lds
mov
lret
int3
or
lcall
call
shl
sub
pop
aas
loope
mov
lds
mov
inc
jne
test
inc
outsb
and
scas
xchg
dec
jle
enter
pop
push
xor
shl
out
imul
lock
arpl
loop
testb
out
and
fisubrl
movsl
xchg
popf
pop
adc
push
addr16
hlt
mov
xor
stos
xor
daa
addr16
mov
and
xlat
push
andl
pushf
or
dec
jp
pop
rcll
jo
ret
sbb
dec
mov
or
and
cld
jns
sub
add
pop
addr16
cli
fsubrs
lcall
lods
ret
sbb
mov
out
mov
lcall
icebp
mov
adc
and
dec
outsl
fdivl
or
std
jnp
and
movsl
mov
jne
mov
push
mov
lcall
mov
rcl
insb
movsl
jl
pop
mov
and
movsl
push
icebp
sub
and
in
out
pop
dec
in
sub
shlb
mov
pop
out
push
xlat
and
enter
sub
movsl
out
mov
sub
inc
pop
xchg
shll
and
inc
inc
xor
aaa
out
inc
sub
fimull
jp
sbb
pop
cwtl
test
mov
xchg
shrb
lcall
das
shr
push
xchg
add
cmpb
leave
mov
clc
jmp
js
adc
rorb
inc
xor
and
xor
mov
sub
mov
cs
mov
push
jno
ds
sub
push
mov
scas
fdivrs
or
aas
aas
push
or
out
xor
add
rcrb
push
xchg
or
xchg
cmp
les
mull
out
es
inc
dec
and
aam
jb
rcrb
pusha
stos
fstpl
add
lret
jns
scas
ret
adc
jno
daa
lods
cmpl
aaa
add
push
fimull
stos
sbb
pop
shr
sarb
cmp
jge
mov
ret
jge
idiv
int
ljmp
or
mov
adc
lcallw
sub
add
or
flds
cmp
sbb
xchg
aam
sub
pop
push
icebp
push
push
xchg
inc
sub
dec
pop
clc
les
clc
outsb
cmp
fnsave
mov
movsl
leave
push
mov
add
jne
inc
jmp
addb
cmpb
fnstsw
insb
stos
int3
or
movsb
mov
xor
sub
cmp
jge
xor
mov
or
pop
das
hlt
dec
out
addl
sub
scas
fidivl
lcall
sbb
mov
daa
xor
dec
sub
test
imul
leave
dec
mov
mov
sub
xlat
rclb
xchg
jl
pop
pop
sti
xor
xor
int
insl
rcrl
mov
inc
and
dec
add
mulb
out
jge
or
in
aaa
push
gs
pop
dec
dec
mov
repz
mov
test
bound
clc
push
fs
daa
push
cmp
and
cld
xchg
clc
out
out
ljmp
insb
sti
ret
dec
dec
fbstp
sbb
das
add
adc
add
add
lds
jnp
cmpsb
sbbb
xchg
inc
shl
cmp
or
cmp
jmp
addl
in
push
mov
stos
mov
cmp
out
out
xchg
rcll
mov
insw
mov
repz
inc
fstpt
xchg
mov
mov
and
fistpl
mov
insb
insb
subb
jp
adc
jle
dec
daa
ficomps
pop
sbb
dec
movsl
mov
push
mov
adc
insl
addr16
roll
add
or
sbb
rol
jo
in
stos
xchg
xchg
shll
mov
sahf
mov
mov
scas
in
or
dec
fisubs
mov
mov
fidivrs
jle
dec
stos
popa
fisubrl
cmpsl
stos
jl
std
push
jecxz
adc
ds
or
xchg
push
repnz
in
ja
pushf
test
jbe
and
mov
push
sub
daa
mov
ss
pop
add
mov
mov
inc
jbe
add
insb
mov
push
xor
pop
popa
xchg
testb
pop
iret
pusha
fsubrs
out
dec
imul
out
xchg
jbe
stos
in
adc
addl
rdpmc
subl
das
in
cmp
aas
movsl
or
fs
sbb
jle
lea
inc
sbb
fdivrs
sbb
xchg
push
jp
jbe
andb
jl
icebp
dec
cld
int
xchg
dec
lock
dec
icebp
in
xchg
sahf
adcl
fsts
and
stos
jae
mov
add
testb
mov
and
push
js
sti
sbb
dec
inc
or
mov
xchg
scas
sbb
in
jb
inc
add
or
leave
lahf
jmp
movsl
sahf
pop
mov
dec
imul
les
scas
stos
jmp
and
mov
cmp
dec
ret
xchg
or
jne
mov
addb
repnz
out
outsl
jmp
xor
mov
fwait
jo
jmp
push
inc
lret
push
push
dec
push
test
ja
inc
nop
out
aas
ret
jecxz
out
xchg
inc
adc
mov
fnstcw
orl
mov
jle
or
xchg
jmp
mov
xchg
test
inc
and
jp
nop
pushf
mov
xlat
push
das
pop
push
fmul
push
mov
dec
scas
fnsave
pop
inc
or
xor
cmp
adc
push
cmp
nop
pop
cmovg
sbb
outsl
inc
mov
cmpsl
cmc
xchg
ljmp
jecxz
inc
mov
mov
add
pop
pushf
fistl
and
in
in
jecxz
inc
add
xchg
in
adc
repnz
jl
or
clc
out
sahf
mov
in
jmp
movsl
sbb
cmpsb
aaa
xchg
mov
mov
outsb
mov
std
fisttpll
and
pushf
inc
scas
clc
outsb
outsl
and
push
pop
stos
jns
arpl
clc
add
or
mov
mov
xchg
filds
inc
add
lret
dec
pop
mov
xor
fisubrl
xor
inc
add
fnstcw
out
jle
call
dec
add
ss
test
pop
dec
pop
inc
aaa
rcll
or
and
ljmp
mov
sbb
mov
aas
daa
add
sub
inc
mov
movsl
jl
ret
jb
mov
loopne
lcall
das
jmp
cmpsb
mov
jecxz
push
in
movsl
or
movsl
es
and
mov
adc
jl
cmc
jne
xor
sub
push
and
sub
pop
ja
and
add
aad
push
dec
sbb
and
dec
xchg
or
ret
aas
cvtps2pi
xlat
cmp
mov
xor
cmp
jg
mov
pop
mov
lret
mov
popa
jae
and
jns
jmp
adc
push
and
push
and
cs
sbb
pop
in
mov
movsb
icebp
addr16
outsl
sub
dec
frstor
xchg
and
rcl
hlt
mov
popf
pop
in
cmp
cwtl
bound
pop
int
dec
in
lret
daa
sarl
xchg
mov
imul
jecxz
add
dec
gs
jge
push
mov
movsl
imul
and
fdiv
in
jecxz
push
jmp
sub
sbb
jae
mov
cld
cmp
sbb
sahf
mov
xchg
out
lcall
add
inc
inc
imul
xchg
lea
mov
xchg
movsl
xor
shl
mov
lahf
xor
std
popa
lret
sbb
cltd
loope
adc
je
lods
outsl
ss
decb
ds
mov
clc
mov
imulb
adcl
loope
or
cmp
dec
mov
cli
adc
cltd
sub
les
add
xor
mov
rcl
push
movsl
into
or
lods
aam
shll
imul
out
adc
jecxz
mov
mov
pop
dec
jae
add
aaa
test
pop
dec
ret
sub
xor
jle
mov
stos
add
mov
mov
imul
xchg
mov
xchg
adc
xchg
or
fmuls
sti
lret
pusha
sub
and
sbb
stos
cmp
test
push
icebp
cwtl
cld
aam
pop
lea
sbb
std
xlat
jae
or
rclb
mov
dec
sbb
mov
lret
shrb
in
outsl
dec
repz
mov
xor
mov
arpl
in
mov
stos
loopne
fsubs
mov
mov
inc
xchg
jmp
inc
pusha
xchg
sbb
lods
stos
lea
ret
sub
imul
or
cmp
mov
cmp
addr16
and
and
sbb
xchg
jmp
fdivp
fisubrl
jnp
std
mov
lret
ss
aas
aad
pop
jno
dec
movsb
xor
inc
cmpsb
mov
in
lcall
loope
jle
cs
stc
push
and
in
movsl
jle
repnz
add
or
or
rol
rcll
pop
fisubrl
add
xchg
cs
add
loop,pn
in
nop
es
add
fstp
cmp
adc
jecxz
inc
mov
gs
sbb
stc
rcrl
xor
push
out
lret
in
mov
pop
jno
dec
and
or
dec
loope
adc
jne
fisubl
jns
les
lahf
je
fsubrs
add
cwtl
xchg
aad
icebp
push
out
fwait
lret
pop
fbstp
adc
and
test
jg
xor
out
add
push
test
ljmp
sbb
add
in
mov
pushf
jns
adcl
push
sub
nop
inc
loopne
adcl
ss
pop
inc
cmp
push
sub
pop
cmp
mov
aam
incb
jne
or
add
pop
or
pop
sub
mov
lods
and
xor
inc
data16
sbb
mov
test
cld
lret
cld
cli
xor
inc
mov
jg
dec
and
adc
cwtl
inc
popa
adc
push
sub
and
loop
std
sarl
das
push
xor
mov
mov
lret
les
jo
data16
mov
aaa
pop
sti
jp
lea
ds
int3
lds
cmp
push
cmp
pop
out
xlat
imul
int
std
fs
out
mov
mov
xchg
sub
or
ficomps
ljmp
mov
inc
popa
lcall
jmp
roll
pop
and
pusha
icebp
push
push
in
xchg
mov
push
adc
jne
mov
mov
adc
push
jl
inc
mov
aaa
filds
leave
cli
rclb
stos
jg
test
mov
gs
or
xchg
cmc
xlat
jb
jmp
or
pushl
aaa
mov
insl
mov
rorb
fs
std
pop
fstp
xor
push
ss
std
fildl
push
inc
lods
gs
jl
lcall
mov
bound
shlb
clc
xor
test
push
rolb
xchg
dec
pop
or
ds
add
jge
fdivrl
clc
leave
jle
fnstsw
inc
adc
xor
mov
mov
cmpsl
dec
cmpsw
movsb
jne
dec
mov
add
lods
ret
push
insl
rep
shlb
stos
outsb
int3
cmp
mov
pop
and
or
mov
insl
mov
aad
push
xor
or
cmpsl
ret
lods
inc
push
dec
or
into
mov
fbld
cmp
stos
cmp
inc
pop
adc
or
int3
call
aas
fimull
mov
movb
mov
addr16
or
mov
lods
pop
mov
adc
adc
insb
push
sbb
cld
cmc
pop
cmpl
fidivs
xchg
dec
cwtl
lock
mov
cmp
and
cmpsl
xor
out
or
mov
xchg
cwtl
gs
push
hlt
cmpsb
and
fsubrl
out
dec
popf
xchg
insl
cmp
enter
xor
repz
bnd
lret
pop
ljmp
sbb
add
push
and
ss
idivl
repnz
scas
gs
adc
leave
in
call
inc
inc
out
sar
inc
mov
and
inc
xlat
adc
mov
mov
sbb
outsb
mov
gs
aas
popa
out
into
dec
outsl
dec
vhaddps
pusha
scas
cmpb
push
rsqrtps
subl
mov
and
jns
ljmp
lods
and
out
jno
stos
pushf
cmc
add
sub
faddl
js
sbb
and
push
add
mov
xor
lcall
pop
mov
ret
mov
mov
movsb
imul
xchg
sub
push
or
xchg
cmp
ja
std
test
and
dec
jmp
shll
in
pop
adc
movl
jne
xchg
popf
cmp
jmp
dec
pop
jecxz
ljmp
outsb
jl
fcomi
out
xor
push
rol
mov
jno
nop
adc
mov
movsb
ret
inc
dec
inc
outsb
aas
add
call
lret
shrl
cld
loopne
psubw
xchg
jmp
add
test
in
out
movsb
pop
outsb
jg
jbe
jmp
xor
sbb
mov
movsb
cmpsb
or
xor
ret
and
inc
jmp
rcrb
inc
adc
push
push
dec
or
and
push
mov
daa
jnp
and
fnstsw
mov
in
sub
inc
fwait
mov
in
dec
inc
push
in
push
pop
xchg
pop
pop
xchg
es
add
nop
into
movsb
mov
sti
mov
mov
insl
push
xchg
dec
cltd
fwait
jne
iret
cmp
jl
lods
mov
in
orb
add
cli
push
mov
sub
pushf
xchg
and
repnz
xorl
inc
imul
pusha
push
out
push
nop
cltd
shlb
mov
cwtl
loope
pop
jle
sbb
imul
cmp
out
lds
fbld
nop
xor
das
adcl
dec
sub
xchg
mov
adc
pop
ficomps
add
inc
pusha
mov
xor
stos
pop
xchg
mov
sbb
adc
popf
or
cmpsb
xchg
std
lock
dec
mov
rcrl
nop
mov
fidivs
popa
jo
mov
inc
repz
adc
es
jmp
cld
dec
mov
cmp
xor
push
or
add
sbb
adc
repz
lds
sbb
leave
xchg
incb
and
mov
sbb
mov
jp
rclb
mov
pop
jmp
js
fsub
push
xchg
call
scas
rcll
nop
adc
in
dec
sbb
aaa
jno
cmp
aad
pusha
mov
lret
mov
xor
jg
pop
test
out
cmp
mov
jns
jo
jmp
cli
out
sub
xor
inc
sub
sbb
outsl
imul
test
jl
out
mov
inc
and
jl
ss
cmp
ds
cli
sub
push
cli
divb
test
mov
std
push
push
mov
fcmovb
xor
shl
daa
mov
test
insl
ja
scas
rclb
shll
stc
js
sbb
push
cli
and
aam
push
stc
sbb
fisubs
push
jnp
push
mov
xchg
scas
add
mov
jge
subb
or
mov
jnp
cmpsb
adc
mov
sti
aas
mov
mov
sub
inc
scas
adc
mov
mov
cmp
mov
pop
sbb
jo
enter
lahf
pop
mov
xchg
rcrl
cmpsb
cmp
jmp
mov
sub
aas
daa
arpl
pop
mov
and
in
or
aam
pop
rolb
sub
sbb
imul
int3
js
pop
pop
clc
sar
lea
push
jl
mov
xor
gs
dec
shrl
out
jmp
daa
outsl
mov
int
or
jno
sbb
push
leave
mov
jmp
dec
fwait
orb
loopne
dec
push
inc
lds
mov
jg
mov
pop
shrl
mov
mov
ss
push
repnz
das
lcall
or
into
cltd
or
sbb
loope
punpckldq
add
jne
or
sbb
add
jmp
pusha
pushf
jle
insb
adc
mov
test
ret
push
xchg
jne
add
adc
xchg
inc
js
sbb
rcrb
leave
loopne
xorb
mov
push
cmp
icebp
addr16
ret
mov
adc
push
loope
lahf
fldt
ljmp
adc
arpl
jle
xor
loopne
mov
insb
adc
inc
mov
pop
lcall
imul
rorl
imul
test
aas
dec
jge
fs
negb
ror
mov
push
push
inc
aaa
and
call
sub
and
inc
aaa
pop
mov
push
cmpb
add
push
hlt
add
lahf
fsts
sub
add
mov
sbb
xlat
out
in
pop
jno
sbb
mov
pop
rcrb
ficompl
push
cmp
std
lahf
push
mov
rcl
cltd
aaa
int3
adc
and
xor
cltd
dec
cmpb
lea
ss
rcrb
dec
in
pop
sbb
rolb
jg
xchg
out
pop
call
vpunpckhwd
mov
jg
imul
bt
int
jge
adc
imul
push
mov
pop
push
adc
ljmp
pop
lcall
add
fidivrl
sarb
fisttpll
jge
cmp
push
sub
jne
push
inc
adc
adc
mov
in
aaa
sub
mov
jle
push
pusha
addr16
jmp
mov
cmp
xchg
aas
out
and
test
jmp
ret
jmp
loop
pop
insl
and
push
cmp
insl
frstor
lea
in
sub
les
push
ret
add
fstpl
cwtl
xchg
mov
or
sbb
movsb
or
imulb
and
cwtl
std
shl
out
popa
mov
imul
ja
aas
lods
cmpsb
mov
mov
ljmp
inc
fsubrl
dec
data16
push
rclb
int3
sbb
sbb
xchg
cltd
xchg
int3
je
adc
nop
ja
outsl
push
jae
mov
mov
sti
mov
dec
pop
sub
ret
fwait
stos
cmc
xchg
mov
xor
aad
ljmp
test
lods
pop
lret
clc
out
gs
enter
xor
adc
xor
lock
insb
lahf
pop
pop
jo
iret
and
jbe
adc
jnp
imul
ficompl
fnsave
in
ljmp
mov
push
pushf
rolb
lret
jae
test
xor
ret
lcall
ss
test
ret
out
int3
add
cld
lcall
test
imul
ret
and
int
fisubrs
test
rcll
js
dec
jg,pt
cmp
leave
rol
fdivrs
ret
jns
pop
arpl
das
jecxz
das
pop
push
cmpsl
push
jbe
fsubrl
lock
xor
cltd
and
dec
test
test
dec
mov
jo
call
mov
ds
push
cltd
mov
fisubrs
rclb
pop
sub
mov
xchg
add
xor
jns
adc
mov
mov
mov
mov
xor
addr16
or
sub
cmp
xchg
insb
sbb
enter
push
iret
mov
push
xor
ret
jnp
stc
mov
pop
xchg
out
out
adc
mov
aam
jns
loop
sub
cmp
test
xlat
out
mov
push
ljmp
jo
sub
xor
mov
std
xor
fmuls
mov
cmp
jne
fisttpll
mov
ja
ljmp
lcall
sbb
push
dec
mov
clc
outsb
popf
mov
movsb
lods
dec
jle
lret
push
ljmp
out
mov
orl
sti
cmp
jle
push
testb
adc
clc
arpl
pop
push
test
ficoml
outsb
add
rcrl
pop
mov
cmovno
testl
and
fwait
push
cmp
movsb
lods
or
lea
insb
lods
sub
int3
add
pop
sbb
cmp
popa
outsl
dec
cmp
nop
mov
dec
movsb
and
push
cmpsl
push
sub
jecxz
fcomi
rorb
test
iret
andl
inc
xlat
push
fsubl
adc
push
pop
push
pusha
cld
repz
xlat
decl
popf
out
cmp
ficompl
dec
js
xchg
rol
pop
adc
mov
leave
and
adc
or
mov
dec
jecxz
jl
pushf
adc
dec
and
mov
loopne
inc
rolb
inc
fisubrl
test
clc
and
out
daa
pop
imul
popa
loope
lret
lock
fistpl
cltd
mov
adc
mov
rclb
imul
icebp
fcmovb
mov
cmp
xchg
xor
movsl
push
mov
xchg
pop
inc
adc
sti
pusha
jge
mov
jmp
jno
arpl
jb
cmpsb
arpl
idivl
and
mov
cmp
mov
xorb
sahf
imul
sahf
ja
xor
cs
outsl
fwait
sub
cwtl
addr16
leave
call
mull
mov
lret
imull
push
jo
int3
js
stos
fadd
pop
xor
int3
dec
inc
cmpsl
mov
js
ljmp
push
mov
dec
xchg
mov
sub
shlb
dec
lds
add
lahf
jmp
nop
roll
lods
inc
or
push
push
fdivrp
dec
cltd
shlb
cs
jno
xchg
std
divl
jle
sub
and
int3
loopne
rorl
aaa
mov
inc
andl
nop
pop
xlat
aam
scas
push
ret
data16
test
dec
iret
pop
xchg
dec
insl
fadds
daa
rolb
mov
add
jno
jns
cmpsb
enter
cli
jl
push
mov
pushf
stos
pop
sub
imul
jmp
movsb
push
sti
ret
std
push
dec
sbb
jns
stos
ss
cld
mov
pop
dec
xlat
std
cmp
push
cmp
imul
add
or
push
lcall
jmp
ret
mov
scas
add
fstp
xchg
pop
adc
ret
mov
push
out
mov
scas
sub
push
outsl
mov
pop
movb
dec
cmc
loopne
mov
mov
pushf
cmp
das
clc
adc
pop
mov
adc
icebp
iret
jmp
test
sti
inc
inc
pop
pop
xchg
test
dec
fucomip
rol
xorb
push
outsl
shr
xchg
mov
shlb
mov
mov
xchg
arpl
icebp
dec
jnp
push
pop
cmpsl
lock
loope
pop
jmp
test
pusha
shlb
mov
fwait
pop
stos
cli
xlat
imul
addb
adc
inc
decl
cmp
xchg
dec
mov
int3
sbbl
xchg
pop
xor
jmp
das
mov
push
xor
addr16
andb
call
push
mov
lea
mov
ret
cmp
std
sbb
pusha
adc
push
test
sti
test
out
in
gs
ds
mov
ljmp
or
cmc
mov
pop
aaa
je
stos
notb
push
movsb
push
add
jne
inc
lock
rcrl
xchg
es
jne
add
xchg
iret
rcl
push
cmc
pop
in
and
std
stc
aas
stc
repz
xor
sub
push
std
cmp
push
popf
shlb
xchg
stos
dec
or
sub
dec
add
fmuls
clc
pushf
jp
jg
repnz
mov
loop
xchg
aad
std
push
mov
lods
adc
xor
cmpsb
xlat
push
popf
sub
rcrb
push
outsb
mov
add
mov
jne
sbb
pushl
rcll
nop
push
jne
dec
dec
xor
rolb
push
fnstcw
in
rcrb
cli
pop
shrl
decb
aas
jecxz
mov
and
addr16
cli
fiaddl
addr16
xor
nop
pop
mov
push
jae
sbb
mov
jmp
inc
push
fwait
daa
pop
xchg
pop
cwtl
ret
xor
cmc
xchg
or
xlat
fcomps
sahf
stc
jg
neg
mov
jl
cmp
enter
ret
push
popf
xor
int3
jne
leave
sti
pop
iret
pop
imul
inc
mov
mov
xchg
leave
stos
xchg
push
incl
sbbb
dec
sbb
cli
pop
fbld
or
cmp
movsl
test
iret
gs
mov
mov
adc
xchg
dec
xorb
loope
sbbb
cmp
cmc
jne
hlt
outsl
mov
sub
cli
xlat
in
vpaddb
out
call
and
sbb
dec
dec
mov
int
sahf
aad
loop
jl
and
aas
jo
xorb
mov
push
jg
xchg
out
xchg
jno
fwait
leave
dec
je
andl
sbb
mov
and
out
mov
jns
sub
xlat
add
shll
test
imul
sub
mov
xchg
mov
mov
pop
cmp
push
xchg
lock
fiaddl
push
jmp
xchg
pop
jne
sar
negl
imul
dec
dec
dec
in
hlt
mov
dec
outsl
and
mov
fcomp
sub
rorl
das
inc
push
jmp
sub
ds
xlat
add
jle
adc
orb
int
jbe
pop
sub
les
aas
sbb
flds
fnstenv
mov
cld
push
push
ret
jecxz
pop
sub
xchg
pop
loopne
fmuls
mov
scas
stos
fs
mov
inc
nop
inc
cmp
fwait
and
ja
dec
in
repnz
and
int3
jecxz
out
adc
mov
push
jmp
das
insb
movsl
int3
jge
fnstcw
in
mov
fsubrl
add
pop
data16
dec
aaa
xchg
jmp
repz
cs
add
jge
ss
das
push
mov
das
xchg
movsb
and
mov
xor
lds
inc
ret
cmpsl
mov
fsubr
mov
jmp
xchg
stc
aam
mov
cmp
add
dec
ss
xchg
sbb
pop
std
jg
and
rolb
jp
lds
pop
repz
mov
or
ja
gs
inc
out
loope
test
aas
mov
test
adc
and
fstl
ds
or
bnd
mov
lea
pop
dec
pop
shlb
test
cs
cmc
xchg
cmpl
int
mov
pop
dec
in
cmp
inc
repnz
mov
rorb
inc
sahf
adc
sbb
push
pop
pop
jae
jno
push
and
int3
pop
adc
outsl
adc
cmp
or
cmp
xchg
int3
repz
push
mov
jl
jbe
mov
aas
jo
adc
pop
ret
shlb
sti
in
ss
xchg
adc
xor
jb
out
pop
lods
xchg
pushf
es
movsl
aaa
mov
dec
js
test
sbb
lret
enter
mov
mov
cld
popf
cmpsb
daa
sbb
jg
cmp
dec
es
cmp
les
mov
mov
cmpsb
test
inc
sbb
cmpsb
add
or
jns
push
jp
sub
inc
outsb
je
add
mov
pop
xchg
mov
rcrb
or
sbb
jns
addr16
xchg
enter
enter
loopne
loopne
std
mov
sbb
addr16
mov
xlat
push
push
adc
dec
hlt
dec
decl
inc
sbb
lahf
popa
int
ret
loope
mov
js
or
pop
lret
out
push
lret
push
jno
mov
roll
or
addb
addr16
int
es
jns
scas
aam
mov
or
jg
mov
or
push
mov
lcall
scas
inc
into
aaa
pop
sub
and
xor
aam
inc
xor
pop
mov
xchg
lea
js
aas
imul
jp
repz
mov
ja
adc
sub
dec
bound
popf
loope
push
push
sahf
or
mov
dec
and
inc
cwtl
inc
mov
leave
and
push
push
call
fldcw
dec
inc
sub
xorl
pop
stos
push
pop
mov
add
scas
or
xor
daa
or
jmp
push
xor
xchg
idiv
jl
cmp
sub
in
subb
jae
popf
cmp
stos
xchg
call
sbbl
cmpsl
outsl
jb
jne
and
xor
adc
lahf
and
test
pushf
push
mov
out
xor
or
into
mov
pop
fsubs
loopne
movsl
pop
cmp
jl
push
orb
adc
xor
imul
pop
imul
pop
stos
mov
mov
dec
inc
fimuls
nop
mov
std
lods
pop
sub
jns
or
jns
je
push
mov
mov
cs
and
lahf
daa
inc
adc
out
mov
rcll
adc
jp
lock
add
orb
test
lea
std
xchg
jl
out
fbstp
aad
push
test
shr
lock
jmp
int
inc
fucomp
fsubrs
mov
lods
dec
inc
imul
jmp
sbb
add
arpl
push
arpl
enter
ror
out
je
call
shlb
fsubrs
fisubl
dec
jmp
add
cmp
in
test
jo
xchg
mov
jns
gs
mov
stos
xchg
or
scas
jae
adc
cld
dec
out
push
sarb
repz
aaa
sbb
xorl
sbb
sti
test
shrb
in
test
cmp
pop
mov
sahf
xchg
pushf
mov
dec
cld
xor
mov
inc
or
scas
cs
cmp
bsf
pop
add
lret
jmp
push
sub
ja
adc
pusha
and
mov
cmp
cmc
sub
sub
test
jno
or
fs
push
xor
call
sahf
jp
or
insl
ss
cltd
outsl
push
es
aas
push
or
std
mov
aad
repz
shlb
cmp
dec
inc
loop
shll
sti
dec
mov
mov
pop
and
push
je
fbstp
pop
divb
pop
clc
sti
ss
sub
daa
cwtl
mov
xor
push
or
das
or
jns
pop
or
jp
xor
cmp
pop
sub
push
xor
sahf
dec
mov
pushf
jbe
rcr
inc
mov
dec
js
clc
aas
adc
cmp
cs
pop
jecxz
fs
out
jne
imul
fcoms
or
imul
xchg
mov
jmp
rcrb
sbb
xor
cmpsb
daa
adc
jbe
jo
test
inc
into
fstl
lods
push
cmp
mov
aad
jnp
mov
pushl
mov
push
and
mov
pop
idivl
jge
push
sbb
push
dec
inc
popf
sti
xchg
push
mov
addr16
cmp
leave
inc
mov
add
adc
stc
cmp
xchg
pop
dec
mov
push
daa
outsb
mov
js
mov
cmp
sub
shlb
aaa
xchg
out
addr16
mov
insb
and
hlt
add
ljmp
xor
ret
cs
xor
iret
scas
sti
scas
fisubl
add
data16
push
fsubp
xor
test
jo
xchg
mov
lock
jge
pop
cmc
pop
xchg
jb
idivl
push
in
pop
mov
pop
aaa
loopne
js
push
arpl
into
pop
inc
dec
jo
dec
xchg
lahf
pop
jo
inc
aas
xchg
pop
xor
repz
fidivs
push
push
lods
mov
icebp
movsb
stos
push
mov
jg
loopne
lret
push
mov
inc
mov
jo
cmp
mov
jp
xor
cmc
jbe
stos
loopne
fcomps
enter
push
nop
ret
and
add
xchg
and
jg
and
sbb
cmp
orps
outsb
inc
pusha
push
ret
les
mov
xchg
stos
dec
mov
jmp
mov
test
test
pop
out
ret
hlt
scas
xor
rclb
pusha
stos
or
ja
jp
pushf
fbstp
pushf
jae
fcmove
imul
fwait
inc
inc
push
scas
cmc
out
add
cltd
adc
inc
daa
rcll
mov
adc
dec
mov
roll
fidivs
repnz
dec
push
xor
ret
jns
jo
pop
adc
rorl
xchg
and
lcall
jnp
into
rcrb
shll
jns
mov
adc
or
std
push
icebp
shr
bound
inc
fistpll
xchg
gs
jp
fwait
mov
sub
cmp
sub
insb
fldl
outsb
jbe
not
popa
dec
dec
and
inc
jge
sub
and
mov
cmp
sub
dec
mov
pop
xor
rcrl
adc
out
fwait
push
push
std
fsubrl
push
ficompl
push
adc
andb
push
arpl
nop
xchg
dec
xchg
push
cld
fldt
mov
divb
jo
cmp
icebp
xlat
test
xor
fdivl
fistpll
fildll
and
mov
mov
or
in
ja
loop
pop
and
aam
cld
js
cmpsl
mov
repz
fldcw
adc
cmp
testb
jne
sub
jg
std
movq
out
xor
xchg
hlt
cmc
or
push
adc
sbb
sub
mov
test
nop
xor
jbe
outsb
xor
mov
int3
jns
insb
mov
sub
cmpsb
std
xlat
out
add
jp
imul
sahf
repnz
jle
dec
push
mov
and
and
cmp
ljmp
and
in
sbbb
jne
out
xchg
dec
xchg
mov
jne
loop
dec
insb
and
clc
sub
ljmp
lahf
xor
push
scas
dec
xchg
mov
jmp
iret
jns,pn
add
scas
outsl
or
shlb
pop
mov
fucomp
sbb
fstps
adc
gs
dec
inc
push
sub
ror
pusha
mov
mov
pop
fs
mov
loop
xchg
cmp
fwait
sbb
movsl
cltd
cs
out
lods
fsub
jg
sbb
sub
and
push
jae
cli
shl
mov
dec
adc
lret
xchg
std
loopne
jb
sbb
jmp
aad
and
cmpsl
loope
lock
in
test
lcall
mov
xchg
jge
xor
ret
les
arpl
in
sub
adc
cmp
dec
mov
lds
mov
pop
mov
test
pop
adc
and
popf
xor
out
fwait
dec
fwait
cltd
add
xchg
loopne
test
test
inc
or
stos
psubusb
and
dec
scas
scas
lock
dec
xchg
cld
lods
cmpl
shrl
xchg
pop
clc
mov
outsl
xchg
push
mov
inc
and
cmp
out
rorb
js
mov
dec
outsl
cmp
mov
add
imulb
lods
in
inc
lock
sub
das
inc
inc
ffreep
stos
icebp
and
sub
or
push
lcall
sbb
add
dec
test
and
push
add
cmp
jbe
fimull
mov
lret
out
sub
push
adc
push
aam
movsb
xor
testl
sbb
loope
jmp
dec
push
cmc
loopne
fwait
adc
xchg
mov
cmp
dec
fs
sti
jecxz
dec
into
scas
adc
inc
sbb
mov
or
or
shll
das
je
outsl
adc
adc
mov
jg
rorl
outsb
cmpsl
sub
xor
test
or
dec
jne
insb
jnp
andb
jmp
dec
daa
and
add
xor
scas
and
push
push
cwtl
pop
dec
mov
adc
xor
cmp
fstps
inc
lea
push
or
push
clc
pop
mov
sub
data16
mov
daa
xor
pushf
insb
ss
outsb
sbb
out
jnp
push
or
cld
jmp
xchg
sbb
std
sahf
mov
rcrl
loop
xor
pop
jmp
call
cltd
inc
cmpsl
movsb
push
pop
add
das
cs
mov
fnstcw
and
testl
insl
cmp
sbb
cmpsl
sti
push
and
mov
mov
leave
addb
lcall
mov
cmp
lods
inc
incb
dec
fisubl
xchg
add
insb
lock
push
ficomps
cs
sbb
inc
pop
fistpll
and
mov
aas
pusha
and
nop
jbe
push
and
add
bound
pushf
cs
fldcw
push
or
cmp
mov
cmp
xor
xchg
mov
imul
jp
xlat
cmp
sub
pop
sub
cli
loope
push
movsl
mov
fs
fdivrs
mov
hlt
cld
icebp
push
jne
jp
idiv
add
adc
xor
movsl
mov
popa
jnp
rorb
adc
testb
sub
shlb
fisubl
je
push
pop
cmpsl
out
pop
cmp
dec
mov
in
ljmp
lcall
outsb
pop
repnz
push
push
scas
xchg
stc
and
shrb
pop
or
cmpsb
test
popa
sub
fiaddl
sarl
xchg
clc
xor
xor
inc
adc
xor
bound
subl
sbb
push
mov
cli
call
andl
mov
xchg
sti
shlb
cmp
inc
inc
push
es
nop
jne
in
dec
jle
outsb
dec
fwait
fs
push
ficoms
push
sbb
int
and
sub
xchg
bsr
out
sbb
pop
and
xor
adc
xor
mov
fs
adc
inc
mov
inc
cli
leave
pop
mov
xchg
adc
mov
mov
cli
sub
adc
xchg
jne
test
imul
or
mov
es
jecxz
jbe
rol
jb
outsl
lea
lcall
lods
daa
iret
sbb
push
adcl
xor
lahf
test
jno
mov
sbb
xor
mov
jno
push
adc
negl
rcrb
notl
lods
and
lock
sub
cltd
mov
mov
pop
test
mov
add
inc
push
add
sbbb
add
adc
in
icebp
cmpsb
dec
or
pop
pushf
and
or
adc
or
mov
test
repz
xor
stos
aas
add
ja
mov
xchg
push
sbb
cmpsb
cli
xor
cmp
pop
dec
aam
pop
xchg
pop
mov
fwait
lods
imul
les
outsl
repnz
fwait
cmp
cmp
add
mov
inc
pop
sbb
ret
jge
into
sbb
in
ljmp
incl
sub
xchg
push
pop
das
cmpsl
push
sub
jbe
xchg
mov
into
jge
or
cmp
ja
xchg
imul
or
and
test
aaa
daa
imul
sub
lds
cmpsl
inc
xor
in
pop
mov
pop
and
mov
and
fs
xchg
xor
cli
mov
sub
fldt
cmpl
test
fwait
pop
popf
xor
mov
loope
mov
xor
out
adc
push
repz
sbb
movsb
or
push
or
ficoms
mov
add
sbb
cmp
push
insl
je
in
ret
pusha
ljmp
push
add
imul
sahf
or
push
out
pop
mov
dec
or
cld
and
push
inc
lret
jle
cs
mov
cli
mov
insb
push
cwtl
push
imul
rcrl
cmp
nop
fadds
mov
lock
pop
cmp
mov
dec
xor
jno
mov
out
mov
and
push
add
mov
mov
xchg
ret
pop
movsb
xchg
lock
testl
pop
add
push
xlat
and
cwtl
pop
loope
mov
add
push
push
sbb
xor
pop
je
das
push
popa
sahf
rcll
adc
inc
shrb
adc
and
ja
and
les
movlps
mov
imul
hlt
mov
xor
push
xor
fs
imul
das
adc
iret
adc
mov
test
and
imul
lock
insl
lcall
nop
andl
push
push
mov
push
sbb
mov
movups
xchg
jmp
das
fs
mov
and
nop
fisubrs
addr16
stos
aad
or
cwtl
jne
addr16
jo
mov
jge
movsb
jl
xor
inc
stc
mov
scas
outsb
arpl
das
mov
es
adcl
sti
adc
mov
mov
fxch
mov
mov
shlb
hlt
stos
pop
sub
sub
mov
jl
push
add
adc
lock
xor
mov
mov
in
addb
pushf
inc
subl
test
sbb
mov
inc
je
xor
addr16
or
and
insl
fstl
insb
lods
iret
repnz
into
lods
pop
mov
imull
jp
mov
push
roll
lock
out
cmp
jl
xchg
stos
lods
mov
je
lret
lret
fnclex
mov
cmp
shlb
sarl
xlat
inc
insl
lcall
ja
out
jecxz
and
and
cltd
dec
sbb
jnp
lock
aad
bnd
inc
fildl
mov
jge
push
and
cmp
xlat
and
arpl
movsl
jne
popf
pop
out
lret
cmc
or
fldenv
inc
int3
jmp
and
rclb
jle
in
pop
push
shr
ret
xor
loopne
sbb
pusha
or
imul
xor
jno
iret
test
lret
icebp
jnp
dec
cs
inc
cmc
cmpsl
jmp
mov
jbe
call
adc
mov
ja
jl
imul
sbb
loope
and
adc
pop
push
cmp
bnd
or
lds
scas
in
mov
aaa
fs
inc
insb
bound
xchg
and
mov
cwtl
push
mov
cltd
jge
mov
push
pop
push
sbbb
inc
and
lret
pop
xor
mov
lods
outsl
sti
jmp
push
sbb
cmc
nop
pop
scas
loope
push
push
loope
stc
fimull
pop
out
test
ret
stos
stos
xchg
icebp
cmp
xchg
or
lret
jl
add
arpl
adc
in
adc
arpl
jmp
mov
xchg
int
out
sub
push
push
push
ret
cmp
rorb
adc
aam
jo
aam
out
mov
das
sub
sbb
iret
pop
or
pop
mov
sub
movsb
mov
cltd
daa
jnp
push
pop
inc
aam
js
inc
shll
ret
mov
add
cs
sub
fucom
test
addr16
and
out
xchg
add
jnp
or
dec
and
mov
push
test
jmp
cmp
mulb
pop
and
xor
xchg
jge
xor
sbb
lea
inc
adc
push
jge
jne
fcmovbe
adc
mov
hlt
das
out
mov
fisubrs
jbe
jnp
xor
xchg
cli
sbb
div
pop
lret
jo
push
jecxz
xchg
sbb
loop
and
mov
repnz
es
and
mov
ret
in
fiaddl
push
cli
dec
add
popa
lret
bnd
mov
jbe
gs
xor
repz
ss
gs
stc
jp
jmp
call
fwait
jmp
lret
les
das
mov
add
pop
or
inc
call
pop
fs
fdivrl
or
cmp
cmpsb
jns
outsb
sub
in
into
ret
xor
jne
xor
mov
mov
cwtl
dec
and
inc
movsl
out
sub
mov
xorl
divb
or
cmp
ret
xchg
push
lahf
adc
push
and
jge
xchg
xchg
rolb
adc
jbe
addr16
sub
ret
dec
data16
imul
jge
xchg
lds
or
pop
xor
push
mov
inc
cmp
xor
or
data16
daa
push
sbb
sbb
enter
sbb
jnp,pt
mov
xor
xchg
mov
movsb
lock
jmp
dec
push
pusha
in
movsl
ss
repz
inc
xor
pop
repz
loopne
mov
cmpl
jl
test
stos
es
test
inc
lea
mov
in
hlt
pop
test
cmpb
pop
adc
push
xchg
mov
jne
push
add
add
das
stos
stos
fdivl
mov
sbb
scas
jmp
repnz
movsbl
push
adc
adc
lret
stc
fidivs
and
ss
dec
jo
xchg
adc
fmuls
xchg
or
push
fbstp
movsl
jo
push
and
lcall
fisttpll
pop
lea
aas
push
fmul
fwait
lret
fnstsw
push
cmpsl
dec
mov
add
das
mov
jl
aas
shlb
in
add
cmpsb
push
subb
push
stc
fimuls
in
inc
xor
push
subl
push
jecxz
aam
lahf
or
xchg
pop
add
es
pop
cs
and
sub
outsb
dec
icebp
push
xchg
in
xchg
repz
js
negb
nop
int3
pop
xor
mov
ror
dec
mov
in
mov
lea
or
rcl
insb
int
or
push
pop
and
sub
push
cmp
cmp
addr16
xlat
stos
inc
mov
push
pop
clc
jg
xor
jno
xchg
mov
jp
xchg
jle
or
int
outsl
mov
loopne
les
int3
jno
mov
cli
rclb
jns
daa
sub
push
mov
xor
sub
and
xorl
add
xor
or
xor
push
sahf
mov
lea
jge
cmpsl
psubsb
or
pop
pop
fsubl
ret
or
inc
adc
rcll
push
iret
mov
push
cmp
lds
push
ljmp
insl
lcall
cld
lret
mov
or
andb
stos
fisubs
aas
lret
ljmp
out
jle
dec
sbb
cmp
push
push
scas
ja
rcr
stos
mov
xlat
cmp
dec
xor
fldcw
into
jno
pop
int3
mov
jmp
fimull
fldl
sbb
jle
fistl
daa
xor
int3
and
sbb
insb
sub
mov
hlt
lods
pop
lret
and
mov
xor
shlb
and
adc
or
xchg
imul
insb
push
add
ret
stc
or
and
ficoms
mov
sbb
sahf
cmovno
insl
push
into
push
mov
sub
pusha
cwtl
sbb
cmp
adc
push
jl
out
sub
aas
pop
js
das
jnp
test
sarb
test
dec
mov
sbb
cmc
mov
movsl
ret
sub
inc
add
mov
jo
nop
aad
inc
fistps
add
cmp
cmpb
iret
test
dec
mov
fiaddl
rclb
loopne
call
adcb
test
pop
cwtl
jp
mov
dec
shl
jb
fisubl
stos
ret
sbb
test
push
xor
and
mov
out
inc
nop
jb
loope
movsl
test
add
cmp
mov
lods
mov
add
cmp
xchg
inc
dec
jg
in
out
xchg
jmp
mov
insb
out
cltd
inc
enter
or
test
xchg
ljmp
mov
decl
fidivrl
push
pop
adc
add
fistpl
stos
xor
xchg
cmp
out
mov
xchg
cmc
mov
sti
add
mov
adc
out
cmpl
add
jae
xorb
push
testb
mov
push
stos
cmc
pop
jbe
fldl
sub
aas
xor
dec
jbe
scas
add
xor
jno
movl
mov
frstor
pusha
jo
pushf
mov
jb
lcall
inc
xchg
lret
pop
mov
repnz
test
sub
jmp
movsl
push
adc
pop
cmp
loope
pop
pop
pop
loop
stos
aas
loopne
test
jecxz
cli
or
cld
dec
jns
jbe
mov
inc
add
loopnew
cmpsl
mov
dec
fistl
cltd
and
gs
and
daa
das
js
cmp
add
fs
and
cmpsb
mov
pop
xlat
dec
xor
mov
mov
inc
out
push
xor
das
bound
test
rclb
pop
xchg
pushf
pop
pop
cwtl
es
cmp
pop
or
test
push
in
repz
negl
xor
dec
pop
scas
sub
out
mov
in
lret
lods
or
mov
add
aad
dec
popfw
insl
es
in
addr16
scas
aaa
das
out
mov
mov
and
scas
pop
out
fisubs
loope
adc
xchg
mov
sbb
ljmp
roll
sub
insl
fnstsw
push
lods
cmp
jge
fwait
dec
push
in
and
test
mov
jle
fimuls
outsl
lret
cmp
mov
cld
fadds
sar
popf
in
mov
outsb
mov
jg
cmpsb
dec
cmp
fisttpll
aam
sub
push
stos
mov
cmp
movsl
repnz
jbe
enter
imul
jbe
in
mov
stos
lea
mov
push
inc
jecxz
clc
jmp
mov
fidivl
roll
fiadds
and
enter
rolb
push
mov
stos
in
adc
roll
call
outsb
out
int3
xchg
icebp
xchg
mov
loop
pop
lahf
push
sub
jb
mov
fmull
cmp
mov
cwtl
outsl
pushf
jecxz
jnp
sub
add
gs
or
sub
or
out
xchg
and
fisubrs
adc
decb
inc
dec
aas
xor
outsl
les
out
cld
stos
orb
cmpsb
sub
lods
repnz
addl
jmp
jp
popf
and
rol
sub
addr16
dec
loop
pop
std
jmp
inc
mov
in
mov
mov
cmp
xchg
adc
icebp
xchg
movsb
stos
ficoms
pop
mov
stos
fstps
adc
and
loopne
lahf
ja
dec
sbb
adc
or
add
mov
cmp
cmpsl
or
out
les
jns
bound
stc
cmc
das
loopne
hlt
jo
jecxz
and
jmp
and
addl
dec
rorb
or
xor
loop
aam
rcrb
mov
iret
inc
inc
and
mov
imul
jle
movl
lret
cmp
jl
ret
fstps
mov
mov
mov
jb
dec
lods
add
scas
mov
add
adc
xchg
gs
mov
xchg
and
lret
pop
xchg
xchg
pop
add
cmp
pop
push
jmp
test
rorl
mov
xor
je
or
shl
ds
int
sbb
xchg
adc
or
ss
std
fldcw
sbb
jp
sbb
std
negl
pushf
inc
es
jbe
lret
sbb
mov
test
mov
ja
xor
shlb
cmp
adc
mov
jo
xor
divb
mov
data16
jg
xor
in
scas
cmp
fs
jno
xor
adc
test
and
cwtl
repnz
or
sbb
lods
xchg
adc
or
fmuls
pop
mov
adc
cmpsb
aaa
outsb
scas
cmp
mov
push
nop
sbb
adc
inc
clc
movsb
adc
addr16
xchg
insl
mov
inc
arpl
mov
nop
push
pop
add
clc
gs
sbb
push
inc
push
dec
aaa
cmc
into
or
adc
hlt
pop
jmp
lahf
jb
jl
mov
sbb
jo
test
mov
xlat
xchg
imul
outsl
sbb
lret
shll
xor
xor
ss
fs
xor
cmp
sbb
rcll
testb
stos
cmp
inc
daa
or
dec
sbb
jmp
popa
adc
xor
adcl
dec
xor
movsl
xor
fldl
adc
xor
jge
lds
lcall
mov
fisttpll
adc
mov
cli
or
lret
hlt
mov
sbb
out
pop
fwait
dec
mov
lea
inc
add
jmp
and
pop
insl
outsb
xchg
mov
push
test
jne
sbb
lret
popf
mov
lods
xor
imul
gs
cmp
pop
repnz
inc
std
daa
sbb
std
lret
fstp
and
insb
fdivrs
jns
inc
sahf
or
je
dec
int3
sbb
mov
cmp
cmp
xchg
dec
sub
mov
jmp
mov
mov
iret
and
cmp
enter
movsl
add
mov
mov
test
xchg
jns
pop
mov
push
into
push
pushf
sub
hlt
sub
aaa
mov
push
sbb
add
push
enter
mov
jmp
movsb
stos
mov
mov
push
mov
pop
roll
imul
pusha
adc
aas
les
sub
lods
xor
dec
push
jge
xchg
out
xchg
lret
movsl
out
movsl
insb
jmp
stos
pop
pop
fcoml
imul
push
aas
enter
push
test
mov
pop
jp
fadds
jg
aam
xchg
mov
orb
insl
cwtl
jns
mov
sub
xchg
jbe
fldenv
jbe
xor
or
jne
mov
mov
cmp
test
cltd
push
mov
pop
test
popf
sbb
imul
or
cmp
bound
jecxz
mov
data16
sbb
xchg
or
les
push
lds
push
lss
and
clc
filds
cli
or
mov
jo
xlat
loop
pop
pop
add
or
xchg
or
jo
in
insb
pop
push
clc
or
cmp
dec
inc
jl
inc
lods
adc
sbb
and
fmull
xor
pop
lock
fimuls
rclb
imul
lods
cmp
mov
mov
lods
mov
jnp
inc
pushf
mov
gs
jo
xor
out
aam
jge
pop
popa
scas
mov
addr16
and
out
pop
sbbl
push
jbe
insb
rcrl
jae
lods
imul
dec
int3
xchg
cltd
movsb
lea
and
pop
rcrl
push
roll
sub
or
int
xor
out
in
insb
sub
notb
xor
cmpsl
rcll
xor
sbb
fwait
xchg
nop
and
hlt
mov
jecxz
and
fwait
mov
and
inc
cmp
cs
outsl
jmp
and
test
dec
sbb
push
xchg
mov
xchg
ficompl
das
mov
mov
std
mov
mov
shll
push
iret
push
push
add
push
into
or
push
pushf
adc
add
sbb
mov
mov
inc
popa
dec
lds
push
mov
cmpsl
adc
xchg
aam
lea
nop
stos
or
test
adc
outsl
in
mov
daa
stc
push
insb
push
insb
cmp
mov
or
sbb
pop
sbb
cld
sbb
repnz
xor
adc
pop
nop
out
jmp
adc
jge
push
pop
lret
inc
shl
or
cwtl
push
pop
push
xor
sbb
jp
fisubrl
dec
cltd
sub
or
lods
icebp
pop
popa
es
je
sysexit
or
xor
mov
xor
xchg
es
push
jbe
jecxz
pop
sbb
push
imul
inc
sub
add
mov
mov
mov
adcl
mov
xor
fistl
cmc
pop
rcrl
jmp
push
jb
loop
jns
xchg
sbb
add
xor
pop
leave
dec
pop
mov
aaa
adc
inc
pop
shlb
and
adc
out
ret
inc
push
or
cmp
xorl
push
jg
or
into
pop
repnz
cmp
adc
shl
pop
sarb
into
cmpsb
pop
add
ret
aas
add
jb
jge
xchg
jp
lea
mov
add
loopne
int3
popf
push
push
pusha
push
adc
adc
sbb
mov
jb
add
push
mov
push
andb
jbe
sub
icebp
mov
dec
pop
jne
call
sub
lea
mov
js
pop
addr16
inc
lock
sbb
xor
add
insl
xor
pop
pop
mov
outsl
subb
or
cmp
pop
test
jge
mov
mov
fildl
lret
sbb
mov
aam
into
lahf
mov
cmp
lods
into
add
ret
mov
adc
loope
out
call
mov
pop
mov
mov
sub
int
stos
sub
pop
loopne
jae
mov
adc
cmpl
sbb
xor
aaa
insb
add
in
or
ja
mov
test
jbe
bound
jp
popa
inc
sbb
fstpt
cltd
inc
and
movsb
fldl
push
push
mov
out
sbb
jp
nop
add
mov
ds
loopne
idivl
ds
sbb
add
cmp
out
inc
leave
cld
pop
xchg
cmp
outsl
jg
ficomps
jb
bound
xor
and
test
stc
ret
adc
aaa
inc
jnp
aaa
cmc
ljmp
push
push
dec
loop
cmp
jp
aas
cmp
push
fldt
test
leave
pop
mov
rclb
repz
push
enter
pop
bound
das
xchg
sbbl
test
or
lahf
divb
mov
adc
dec
movsl
add
pop
mov
iret
sbb
or
mov
xchg
adc
pop
sbb
shlb
aas
xchg
mov
xchg
leave
ret
inc
popf
cmp
scas
jp
aam
xchg
imul
add
push
pop
into
stc
icebp
enter
inc
and
pop
mov
or
cwtl
dec
enter
out
lds
inc
test
add
call
mov
add
jo
adc
jns
or
xchg
das
mov
loope
pop
pop
push
push
sarb
and
or
pop
data16
lcall
movsl
adc
mov
out
arpl
dec
sahf
addr16
cltd
pop
push
jecxz
mov
int3
mov
inc
test
cwtl
roll
xor
decb
pop
and
sbb
sahf
mov
repz
ret
xor
lahf
pop
fwait
mov
std
imul
sbb
pop
dec
sbb
test
sub
lahf
add
movsl
cmp
lods
fldlg2
ret
and
aam
jecxz
lcall
out
add
xlat
adc
rdtsc
loopne
in
sahf
repz
xor
pop
push
xor
fidivrl
xchg
icebp
add
fsubr
xchg
fnstenv
and
jno
adc
mov
and
addr16
mov
jae
aas
push
cmp
dec
in
loope
mov
add
mov
es
pop
lock
mov
or
sub
test
mov
push
fisubs
addb
fisubrl
push
or
iret
cmp
pop
adc
mov
add
das
pop
fildll
mov
js
mov
aaa
xchg
out
shrl
mov
adc
add
push
dec
aaa
push
add
test
sbb
out
adc
scas
push
push
insl
out
addr16
decl
shl
shl
xor
mov
jle
sub
bswap
hlt
fldl
adc
add
adc
or
or
test
cmp
cwtl
fidivrs
clc
sub
cli
jmp
xchg
popa
ja
movsb
dec
lret
jp
mov
xor
sub
cmp
orl
push
and
repz
fisubl
jmp
sti
dec
in
int3
push
or
push
aam
je
cmp
mov
mov
and
add
je
cmp
fsubrl
lret
sti
std
pop
jle
rcll
lock
sub
cwtl
adc
jp
adc
test
add
mov
mov
fimull
gs
jl
dec
dec
ret
es
out
inc
dec
imul
dec
subb
dec
fwait
jae
cmc
add
or
fwait
mov
daa
sub
lret
out
pop
ror
out
pop
and
data16
pop
sahf
xchg
or
insl
int
sub
mov
data16
adc
add
and
xchg
dec
rcrl
dec
cltd
das
add
push
test
pushf
and
lds
adc
push
lds
mov
and
es
sahf
pop
fxch
leave
xchg
popf
pop
jecxz
sahf
rclb
jae
fldt
int3
inc
add
dec
ss
shrl
jo
jae
push
mov
mov
mov
add
inc
sbb
jae
inc
jecxz
mov
pop
inc
jo
notb
imul
push
cmp
addr16
stos
enter
arpl
insb
fstps
addr16
cmpsl
lcall
scas
mov
push
insb
shll
push
rcll
fstpt
mov
jb
les
std
or
dec
arpl
ret
cwtl
mov
rcrb
push
insl
mov
adc
lds
mov
jbe
push
cmp
aad
xchg
cld
push
xchg
movsl
out
ffree
mov
bound
test
sbbl
scas
mov
and
int3
add
xchg
addr16
cmpsb
dec
mov
sub
xor
add
inc
xchg
arpl
mov
insl
adc
sbb
ss
xor
daa
xchg
push
movsb
dec
mov
xor
inc
sub
add
aaa
lds
jo
popa
inc
je
cld
mov
lret
lahf
jge
out
mov
out
add
sbbl
jmp
mov
jae
push
or
les
jge
in
mov
cmc
push
stc
testb
jnp
mov
test
ja
dec
notl
aam
lcall
pop
outsl
outsl
pop
addr16
stos
xchg
js
jb
jg
shl
sahf
icebp
or
xor
pop
cmp
adc
dec
in
nop
ljmp
and
es
icebp
jmp
jle
out
sub
push
aaa
aas
jge
jge
fdivl
sub
push
pop
push
aam
jns
xlat
mov
decb
cs
mov
jno
jecxz
movsl
mov
inc
xor
adc
je
mov
xlat
lds
cmc
scas
test
inc
loopne
in
xchg
jnp
xor
jmp
int
bswap
call
mov
jp
push
repnz
ret
add
xlat
ret
mov
loopne
inc
pop
in
mov
aaa
xchg
clc
pop
or
inc
sub
pusha
mov
lret
rcl
aaa
sbb
or
shll
fsubl
dec
vmovsldup
sbb
clc
jae
leave
cmpsl
pop
sti
sbb
test
mov
sbb
lods
dec
and
pusha
loop
pop
insl
iret
bound
push
pop
inc
xchg
insb
sub
inc
mov
dec
fst
lret
mov
shlb
push
ss
fwait
adcl
add
sub
stc
and
lret
in
cli
ds
sar
aaa
enter
pop
insb
popf
jno
add
fmulp
add
out
mov
je
punpckhwd
repz
pop
and
push
mov
xor
xor
frstor
jbe
ljmp
flds
lds
arpl
call
add
mov
dec
cmp
aaa
mov
sub
mov
imul
xchg
rcrb
push
jns
inc
mov
sar
push
fsubp
arpl
stos
subl
xchg
xchg
cmpl
std
and
dec
pop
cmp
push
dec
jmp
jns
mov
mov
and
ds
inc
popf
lret
ljmp
dec
test
jns
cmc
push
fiadds
int3
test
inc
adc
mov
les
mov
cmpsl
fdivl
js
shll
sbb
sub
outsl
xorl
lret
test
push
pop
xor
or
jle
iret
rorb
and
mov
jno
add
sub
lret
or
out
lret
inc
xor
ret
loope
stc
mov
test
in
ret
and
inc
fs
xor
push
sub
notl
xchg
andb
ja
fadds
mov
mov
shlb
cmpsl
inc
mov
xor
inc
repz
das
push
aad
bound
inc
jae
lahf
or
mov
xor
mov
and
das
ret
sub
and
fstps
loop
push
jp
mov
call
sub
add
mov
jp
adc
push
aas
gs
insb
or
cmp
fisubrl
xchg
arpl
and
sbb
repz
es
shll
popf
std
fcomp
xchg
fsqrt
in
jne
lods
pushl
mov
inc
sub
test
fnstsw
inc
divb
pop
fmuls
jmp
or
cld
mov
ret
push
xchg
das
imul
mull
mov
shl
idivb
fmulp
sub
push
stos
sbb
jle
fstpl
cmp
cltd
mov
into
jne,pn
push
fisttpl
xchg
out
inc
push
cld
lea
out
rclb
mov
dec
out
cmp
in
pop
int
inc
adcl
int
fs
lds
insl
mov
movsb
lea
cmp
and
int3
cltd
ret
negb
jns
sbbl
sub
pop
mov
pop
cmpsl
mov
stos
jmp
popa
sub
push
inc
xor
gs
iret
mov
mov
test
jecxz
sub
push
push
cltd
sarb
jle
fcmovnb
in
loope
stos
push
lcall
cmp
cmc
ret
dec
repnz
push
insb
add
stc
ret
ja
add
popa
lds
push
dec
adc
inc
push
hlt
adc
cmpsl
lret
and
movsl
and
rolb
inc
test
rcrb
shrb
cld
mov
and
movsl
movsl
lret
adc
mov
jecxz
xchg
enter
pop
movsl
arpl
jno
and
test
pop
sbb
bound
nop
xor
cmpsl
fsubs
add
daa
push
pop
pop
dec
xchg
ljmp
xchg
out
sbb
sub
shr
jae
mov
aam
push
cmpsl
xor
jecxz
je
mov
add
or
divb
mov
xchg
sarb
out
mov
gs
mov
xchg
sbb
jo
ret
pop
ret
int3
and
pushl
stos
cmp
xchg
scas
sbb
adc
adc
loope
dec
dec
sub
mov
aas
dec
pusha
or
scas
inc
mov
int
xchg
cmp
les
fsts
mov
test
xchg
cmc
andl
jo
xor
dec
pushf
add
jae
dec
loope
adc
and
add
or
fists
fiaddl
dec
mov
push
pop
mov
xchg
xor
adc
outsl
sbb
xchg
shr
sub
addr16
loop
push
addr16
in
inc
xchg
sti
adc
fstpl
adc
jns,pt
loop
lods
push
adcl
dec
jp
into
jbe
inc
and
testl
fadd
movsb
cltd
xlat
frstor
imul
dec
fcoms
add
sbb
in
xlat
insb
inc
mov
outsb
fstl
xchg
jg
aad
fildll
add
aaa
fs
xchg
rcll
hlt
js
or
mov
cmp
aas
push
adc
sub
sarb
inc
mov
fnsave
add
sbb
ret
jecxz
xchg
rorl
pop
sti
sbb
push
out
jns
and
es
jg
out
lahf
pop
jp
pop
dec
dec
insl
stos
fcomps
adc
dec
movsb
xchg
orl
jo
mov
inc
mov
xchg
jle
push
repnz
fstl
mov
inc
jmp
outsb
repz
pop
test
test
sbb
shll
or
repnz
sub
jp
out
inc
cmp
fiaddl
cs
and
int
je
mov
sar
movsl
pop
cmc
cwtl
jmp
js
pop
cmp
and
repnz
enter
lods
cmp
push
adc
or
mov
dec
outsb
movl
ss
mov
ds
aad
push
pushf
jb
pop
out
cmpsb
sbb
fimuls
call
repnz
jae
fidivs
fnstenv
jmp
jl
add
std
xor
or
jl
push
aaa
fs
mov
movsl
pop
dec
rcrl
and
xchg
dec
imul
cmp
lock
enter
dec
lahf
push
mov
push
mul
jnp
sub
pop
jo
in
add
mov
arpl
in
out
or
jne
push
push
cmp
ficompl
push
insb
sub
cmp
mov
sub
sti
add
sub
dec
popf
into
jg
dec
jbe
inc
out
push
stc
dec
sbb
out
fidivl
cmc
lret
aas
jae
out
inc
fcomi
inc
xor
adc
mov
mov
dec
push
pushl
ret
and
pop
shll
rorb
push
fs
push
adc
sub
sti
cmp
nop
pop
pop
xchg
sub
sub
lods
dec
in
fcomi
sub
add
jle
enter
and
sub
stc
mov
fs
inc
jmp
mov
cld
mov
and
mov
adc
jns
out
out
sub
mov
push
and
sti
pop
jge
add
mov
inc
pop
jo
mov
xlat
push
push
lods
push
test
xor
repz
fldl2e
out
test
dec
xchg
loop
shl
xchg
aas
aaa
dec
and
adc
ret
jae
mov
stc
cli
pop
sahf
jbe
mov
xor
mov
addr16
push
mov
popa
movsl
imul
push
bound
sahf
sbb
sub
and
xor
repnz
add
push
out
or
sahf
jo
mov
push
cmpsb
stos
js
inc
add
jno
movl
or
xor
jmp
jnp
jecxz
push
pop
push
mov
jbe
dec
fstcw
js
in
lret
movsl
insl
in
scas
push
add
insb
jp
inc
cmp
fs
lret
sarl
adc
nop
shlb
aad
jg
shrb
mov
mov
xlat
ss
jg
ds
dec
inc
test
dec
pushf
xchg
jmp
dec
pop
mov
sub
push
shrb
push
add
jmp
repnz
popa
fs
bound
sub
xchg
repz
scas
movsb
xor
pop
push
aad
inc
mov
sahf
fptan
int
fcoms
mov
jne
xchg
push
push
sub
mov
xchg
setns
movsl
scas
xor
xchg
add
sub
lods
mov
xchg
mov
aam
fwait
jecxz
stos
addr16
xchg
iret
mov
mov
ss
mov
mov
cltd
jg
movsl
in
inc
pop
icebp
repnz
stc
mov
push
pop
jp
in
push
xchg
or
fldcw
outsb
ficoml
loopne
and
and
imul
stos
mov
sub
pop
cwtl
cld
popa
push
inc
mov
loopne
testb
loope
xchg
push
out
xor
rorl
mov
inc
mov
xchg
pop
push
xlat
mov
inc
push
adc
aad
push
mov
imulb
hlt
sbb
repnz
inc
or
dec
mov
sbb
shr
rcrb
push
jb
push
lods
enter
shrl
cmp
mull
sbb
adc
clc
jg
sbb
push
jno
xorl
rorl
loop
mov
sub
out
pop
lods
daa
int
shll
fbstp
hlt
lods
jg
negl
xor
push
mov
adc
shll
loop
adc
fstps
jbe
fs
orb
inc
or
mov
and
xchg
jno
mov
js
mov
cmp
shrb
adc
das
stos
add
call
fnstsw
xor
lock
push
loopne
out
push
icebp
sub
mov
cmp
aaa
push
cld
imul
mov
or
mov
add
push
shr
sbb
adc
lea
add
adc
sbb
ss
sbb
lds
mov
out
xchg
loopne
sub
sub
fwait
xor
shlb
inc
fcomps
cwtl
sbb
cwtl
popa
stos
popf
aas
daa
xchg
cld
add
loope
gs
mov
xchg
insb
into
rol
sti
pusha
dec
inc
adc
push
push
popa
sub
imul
test
or
adc
scas
xchg
xor
lahf
sti
mov
mov
jno
jno
push
pop
sbb
loop
jno
add
jl
fidivl
push
inc
jge
sbb
push
lods
adc
aas
enter
add
gs
jns
fmuls
aas
imul
out
xchg
adc
ljmp
mov
adc
movsb
or
popa
dec
xor
mov
adc
sbb
mov
hlt
dec
mov
xor
pop
pop
rorl
adc
arpl
cli
int
aaa
lock
and
decl
insb
xchg
aam
lahf
xor
out
mov
test
cmp
test
push
pmullw
sub
mov
mov
and
xchg
sbb
mov
push
movsb
pusha
mov
jl
ljmp
inc
push
pop
sub
loop
or
call
xor
out
and
rclb
or
cmp
cmp
out
dec
pop
cmp
or
pop
inc
jp
std
ja
sub
lea
ret
std
or
into
dec
pop
xchg
pop
vcvtps2dq
mov
push
data16
xor
jae
push
popf
test
pop
popa
pop
adc
lret
shrl
repz
push
ret
leave
scas
xchg
sub
xor
lret
cmpsb
fmul
mov
test
add
sbb
fldt
rclb
pop
aaa
and
ret
xlat
js
sub
out
cwtl
je
scas
das
cmp
lods
inc
push
or
int3
pop
stos
inc
cwtl
add
outsl
cmp
lock
pop
pop
cmp
mov
mov
cmpsl
dec
aam
fld
mov
jecxz
sbb
jge
aad
adcl
pop
cmpsl
fidivs
cld
jg
sub
out
push
sbbl
adc
jg
insb
out
psllq
adc
jns
std
clc
fsubp
sub
push
inc
arpl
lahf
mov
xchg
jmp
add
popa
pop
stos
lds
cmpsl
sbb
xor
rorb
cmp
bound
or
fsubrs
mov
mov
outsl
sbb
mov
sub
jbe
push
push
mov
lret
cmpsb
loop
jl
filds
mov
jns
and
cltd
cwtl
xchg
push
push
xchg
mov
orl
inc
int
js
jecxz
scas
jmp
mov
ja
aam
adc
sbb
repz
out
add
mov
imul
in
mov
sub
sbb
es
shl
mov
in
aas
xor
lock
mov
lds
out
cmc
dec
xchg
aad
ljmp
popf
cmc
les
add
fcmovbe
mov
call
fucomip
hlt
mov
xor
or
or
jl
mov
lock
rcr
mov
hlt
or
inc
movsb
rcrl
leave
mov
xchg
and
xchg
mov
lret
roll
in
das
ficoms
cs
subb
xchg
fs
cmp
dec
jecxz
pop
mov
test
pop
dec
mov
outsb
adc
dec
mov
shrl
xor
inc
mov
scas
aas
and
fnsave
xor
stos
popf
lahf
cs
cmp
cmp
mov
sbb
dec
mov
bound
adc
inc
cld
push
push
lcall
stc
sbb
out
adc
cmc
icebp
sbb
cmp
mov
and
subl
sbb
stos
inc
adc
jmp
push
or
ficompl
pop
loopne
movsl
push
lock
push
fdivs
call
mov
pusha
add
pop
push
mov
mov
jge
imul
es
es
cmp
bound
pop
jb
lret
shll
inc
mov
inc
push
testb
in
add
hlt
or
adc
xlat
mov
jmp
push
pop
sub
daa
int3
xor
xor
insb
divb
xor
cmpsl
call
pushf
fldenv
dec
inc
dec
orl
or
mov
xor
xchg
shrl
lahf
mov
xor
loop
xchg
mov
jns
in
push
movsl
or
add
rcr
stos
cmp
les
or
inc
jnp
out
push
fidivs
push
and
xchg
pop
jle
xor
lcall
dec
pusha
rorb
xlat
lcall
js
scas
adc
pop
mov
sbb
fnstenv
jnp
fnstsw
dec
mov
lock
pushf
std
dec
loopne
fucom
mov
xlat
sahf
fcmovnbe
loopne
loop
faddl
sti
lock
mov
mov
sarl
scas
pop
and
jg
xchg
jb
dec
mov
into
xchg
xchg
push
js
dec
out
inc
add
sbb
sub
rcrl
xchg
movsb
mov
bound
or
and
rcll
or
dec
xor
popa
pop
cmp
xor
add
test
inc
cmp
insl
jl
cwtl
stc
icebp
dec
es
inc
xlat
sahf
dec
adc
sbb
lods
popa
shl
mov
icebp
sbb
call
sbb
sbb
mov
and
fsubl
adc
jbe
push
repnz
inc
in
mov
pop
je
push
cld
cwtl
fs
push
fldcw
pop
cmp
mov
mov
bound
test
dec
shll
arpl
cmp
into
mov
add
dec
call
sarl
add
fdivs
sbb
adc
movaps
mov
inc
insb
mov
incl
aaa
adc
aas
pop
adc
test
sbb
cmp
and
xchg
mov
pushf
add
movsl
inc
adc
xchg
adc
fs
rorb
and
aam
lods
clc
inc
pop
cmp
test
das
dec
sub
jae
xchg
add
lock
outsb
inc
stos
popa
mov
dec
aas
cmp
hlt
pop
or
std
cmpsb
or
and
dec
jp
mov
cmp
and
icebp
mov
shlb
cmp
jle
mov
jle
mov
jns
cwtl
outsb
mov
push
xor
xchg
lcall
xchg
cmp
pop
int
pusha
lock
xchg
and
and
or
cmp
jle
add
neg
shrb
xchg
push
nop
pop
addr16
fstpl
ret
mov
ret
out
push
and
push
adc
and
or
push
inc
das
outsb
mov
stos
lcall
in
xor
pop
or
test
add
stc
js
into
scas
push
in
insb
jl
cmpsb
pop
ss
cli
cwtl
int
frstor
in
fistps
mov
out
ljmp
inc
pop
outsl
test
push
jmp
test
jecxz
cmp
das
int
cltd
add
adc
inc
cmp
xor
inc
adc
push
xor
cmpsb
cmp
pop
iret
xchg
in
shlb
imul
sbb
call
insb
movsl
hlt
or
insl
mov
aam
into
in
in
push
jg
pop
aam
mov
pop
icebp
int3
out
lea
fsubl
mov
adc
lret
sar
cmp
aaa
push
or
push
sub
ficompl
fwait
push
and
in
sub
fs
dec
jns
xchg
outsb
dec
adcl
mov
cmp
or
adc
jecxz
mov
mov
dec
add
adc
inc
enter
sub
stos
loopne
push
or
push
cmpsl
add
or
mov
mov
add
je
push
mov
insl
lret
sub
mov
pop
adc
xchg
mov
push
lret
mov
inc
fsubl
rorb
repz
adc
adc
jnp
xchg
adc
jbe
loopne
aad
xchg
and
scas
dec
lret
call
sub
rep
imul
enter
movsl
adc
xchg
fadds
cs
loop
ret
lds
xor
ret
faddl
decl
push
cli
xchg
or
or
dec
mov
xor
jns
inc
call
rolb
sahf
in
outsb
push
dec
shrb
pop
test
xchg
cmp
idiv
fstpl
mov
mov
aaa
pop
push
dec
or
xor
addb
adc
dec
aas
pop
xchg
loop
rcll
add
pop
mov
popa
push
jmp
cmc
cmp
and
push
aam
pop
call
xlat
jne
inc
lahf
movsl
xor
jecxz
int3
aad
cmp
lock
mov
imul
call
pusha
inc
and
addr16
popf
xchg
ljmp
pop
outsb
sbb
mov
ja
movsb
adc
fwait
mov
dec
xchg
and
rcr
int
and
test
ret
dec
mov
pop
subb
clc
xchg
adc
enter
xchg
push
adc
ret
call
xchg
fwait
fildll
xor
je
cmp
sub
dec
xor
pusha
imul
mov
jbe
pop
dec
add
cmp
ret
or
add
dec
bound
test
sub
or
cmp
fcoms
jnp
int3
mov
movsb
mov
jle
rcrb
inc
repz
in
data16
int3
pop
call
dec
adc
xor
fists
cwtl
je
adc
adc
sbbl
out
mov
cmc
dec
xchg
call
cmp
jmp
out
mov
push
mov
push
pop
push
mov
mov
out
pop
cs
pop
out
loop
pop
dec
lds
stos
idivb
stc
inc
in
sti
inc
cmp
xor
mov
sti
adc
or
sar
xor
xchg
mov
inc
in
pusha
push
in
scas
cmpsl
mov
bound
scas
pop
mov
js
jge
add
std
in
lea
inc
out
mov
sub
jmp
mov
mov
sbb
je
push
mov
xor
insb
ds
mov
jmp
arpl
cmpsl
arpl
mov
pop
lods
jecxz
mov
aad
adc
loopne
mov
jg
popa
jmp
xchg
test
cmc
mov
lea
outsl
nop
addb
mov
jmp
xchg
push
pop
ss
imul
dec
mov
push
or
int3
out
out
xchg
imul
and
in
xlat
lea
inc
pushw
sar
sub
mov
push
cld
std
ds
fisubrl
int3
adc
push
xor
call
fwait
aas
sbb
mov
stos
mov
ret
jae
jmp
scas
sub
mov
fwait
int3
lds
adc
outsb
or
aaa
cld
xor
inc
xchg
add
mov
lock
hlt
loope
adc
mov
cs
sbb
sti
mov
inc
js
inc
inc
int3
in
adc
adc
jne
test
jg
shlb
dec
pushf
mov
imul
adc
and
mov
jbe
mov
insl
fwait
cmp
ja
mov
mov
xchg
pmuludq
gs
ljmp
mov
push
jg
mov
mov
ficompl
and
pop
enter
inc
int3
dec
adc
xchg
rclb
mov
or
pushf
aam
mov
sub
push
inc
in
insl
ret
imul
sarb
jo
aaa
repz
push
ljmp
call
mov
dec
imul
jo
jnp
cmp
negb
mov
jnp
das
dec
sub
test
fildll
push
ficompl
pop
js
xchg
mov
push
add
pop
lea
jg
repz
sub
scas
xchg
insb
pop
sbb
inc
adc
push
mov
jns
movsb
adc
xor
ret
mov
sti
leave
iret
test
xor
sti
xor
les
cltd
gs
xchg
sbb
mov
push
add
dec
pop
inc
pop
test
push
jns
bound
dec
stc
push
cmpsl
andb
mov
psrlq
pop
mov
inc
pop
xchg
fs
and
clc
mov
mov
decb
in
push
dec
inc
mov
jecxz
fistl
sub
test
sbb
sbb
or
stos
pop
jno
lret
out
sub
or
jno
add
mov
bound
xchg
ljmp
addr16
out
pop
into
mov
add
mov
stos
ret
push
mov
sub
xlat
pop
push
jg
jecxz
jmp
loopne
push
jmp
mov
lret
cmp
out
shrb
outsb
pop
inc
insb
inc
in
data16
or
push
sbbb
outsl
cli
cmp
jb
mov
aad
loope
push
imul
daa
jecxz
or
std
test
xchg
rcrl
xchg
insb
shll
clc
imul
adc
cpuid
dec
jle
jo
push
popa
out
lds
inc
bound
arpl
mov
jl
popa
jge
mov
mov
xlat
ret
int3
lcall
inc
mov
adc
jge
test
jns
mov
test
cmp
pop
outsl
pop
clc
lods
xchg
mov
int
xchg
xchg
cmp
ret
out
ljmp
cwtl
test
dec
arpl
iret
das
mov
movsb
pop
int3
outsl
clc
das
mov
xchg
pop
adcl
stos
fneni(8087
adc
inc
dec
jns
dec
cmc
cli
lock
mov
iret
ss
inc
mov
cmpsl
test
inc
ret
and
ljmp
cmpsb
in
pop
pop
lds
cli
mov
inc
push
push
cmp
jae
dec
sub
les
movsl
cmpsl
jmp
repz
pop
xor
adc
jo
roll
nop
add
or
adc
jae
iret
dec
xchg
enter
fidivl
jb
fwait
pusha
cmp
jne
and
push
push
roll
stos
out
cmp
aas
mov
loopne
inc
sub
out
pop
mov
adc
xchg
sahf
dec
inc
aaa
test
xorb
insb
sbb
or
add
roll
cmp
test
mov
mov
xchg
sbbl
sub
out
sahf
rcll
fwait
or
arpl
test
and
cmc
and
hlt
pop
icebp
and
xchg
jb
and
je
jb
popa
bnd
mull
sbb
jb
rclb
or
inc
push
cmp
aaa
inc
pop
mov
fdivr
rsm
and
cmp
aas
stc
call
dec
in
sub
xchg
jns
cwtl
bound
mov
fimull
roll
xchg
mov
arpl
push
and
shlb
rcr
addb
hlt
je
lcall
call
mov
insl
push
ror
push
mov
inc
das
mov
in
add
ficoml
xchg
mov
lcall
pop
js
jo
pop
dec
cs
popa
out
lods
test
cmp
lods
inc
inc
and
push
and
cmp
rcrl
out
clc
xchg
ja
stc
rcrb
adc
cmpsb
fdivr
jecxz
dec
fincstp
pop
clc
push
adc
daa
pop
xor
or
aad
outsl
out
in
movsb
insb
std
loopne
add
adc
loope
mov
or
into
clc
int
xchg
ds
dec
sti
addr16
push
ljmp
xchg
lods
orb
js
xchg
inc
jp
mov
cli
ds
mov
aam
ret
imul
or
sub
push
inc
pop
fistpll
nop
gs
pop
popl
cwtl
fs
xchg
sbb
mov
jecxz
arpl
ja
shll
int
mov
jg
imul
outsb
mov
sbb
pusha
addl
fisubrl
jno
pusha
or
pop
clc
cmp
ds
adc
and
dec
xor
xlat
clc
add
xchg
std
sub
push
cmp
jno
and
hlt
out
data16
cmpsl
dec
movsb
daa
inc
rcrl
lahf
cmp
dec
mov
xor
xor
pop
cmp
adc
jmp
mov
mov
mov
mov
add
lds
cli
adc
xchg
test
rorb
aaa
cltd
movsl
mov
xchg
loopne
fidivl
iret
mov
outsb
sub
xor
cmp
cmp
movsb
pop
sti
and
lcall
jae
and
mov
inc
cwtl
sub
stos
lcall
lahf
inc
out
mov
outsl
scas
sub
inc
xchg
in
in
ret
jb
adc
enter
and
pop
xchg
stos
jbe
cld
mov
popf
in
fldt
push
push
adc
lds
jmp
lock
push
je
pop
jmp
inc
mov
cmp
mov
or
jge
add
int
stos
sahf
push
test
push
inc
sub
push
fnsave
xchg
mov
imul
sbb
pop
pop
inc
shlb
inc
ljmp
sbb
xchg
or
dec
adc
push
mov
mov
push
frstor
es
scas
daa
rcr
cs
inc
es
mov
sbb
cmp
mov
daa
or
xor
hlt
shl
stos
insl
hlt
jge
int3
scas
lret
push
test
jo
popa
push
call
test
outsb
cmpl
test
movsl
pop
xor
jae
push
xchg
xchg
adc
xor
add
adc
pop
xchg
outsl
mov
call
loope
std
js
or
inc
in
cmp
jo
dec
lret
adc
out
add
pop
repnz
sbb
imul
jl
mov
xchg
xor
push
cmc
lret
jp
adc
mov
insb
das
imul
inc
out
push
xorb
rorb
and
mov
lahf
stos
add
addl
out
scas
push
inc
jle
in
adc
dec
aam
je
adc
pop
mov
or
cmp
test
movsb
outsl
repz
sar
sbb
fidivrs
mov
loopne
out
add
and
dec
loop
pop
lods
cwtl
cli
ss
aas
lods
jecxz
and
mov
or
js
into
sarl
pop
xchg
dec
cmp
cmp
xchg
xchg
imul
ret
cmp
inc
ret
pop
and
sub
icebp
xchg
sub
cmc
mov
mov
add
jne
mov
sub
jae
push
mov
aaa
push
lds
in
sub
jp
aad
ds
rcrl
inc
pop
adc
push
mov
jo
data16
or
cmp
gs
pop
dec
hlt
ret
inc
rep
in
in
cmpsb
xchg
and
jns
out
in
lea
cmp
mov
es
add
les
mov
into
lock
cmp
and
pusha
mov
ja
jbe
mov
fidivrs
xchg
shrb
cwtl
idiv
mov
fldl
fsub
les
cs
adc
out
mov
xchg
rcrb
mov
gs
je
mov
test
subb
inc
or
nop
test
xchg
iret
adc
mov
aad
xor
mov
lahf
xchg
daa
lock
add
cwtl
loopne
shlb
mov
and
push
jnp
into
pusha
push
scas
inc
pop
pop
test
mov
out
dec
gs
xchg
lahf
aam
xchg
xor
push
testl
push
jmp
pop
mov
inc
push
sub
lret
xchg
sbb
jnp
inc
out
cwtl
test
sbb
pop
or
lock
test
dec
dec
es
xchg
or
mov
dec
jg
lcall
stos
test
xor
outsb
into
shlb
adc
cmp
sub
mov
shl
leave
fsubl
xchg
mov
int3
cmc
xor
or
add
push
mov
mov
jns
adc
xchg
sti
inc
xor
in
shlb
jge
pusha
dec
ret
add
inc
cld
mov
inc
and
push
inc
xchg
add
insb
mov
lret
inc
cltd
outsl
mov
fidivrl
and
filds
push
dec
shrl
ds
push
mov
cmp
cmp
add
cltd
jbe
xchg
cwtl
scas
mov
aaa
jns
jb
ljmp
add
cmp
decb
lahf
fcoml
jno
dec
ret
movb
loop
mov
std
mov
cli
cmpsl
or
imul
pop
out
sub
dec
das
popf
stos
in
dec
cmp
adc
aam
pop
lods
sbbb
cmp
or
cld
xlat
imul
sbb
lds
cld
sub
mov
push
pop
or
rcll
xchg
repnz
fsubl
fsubrs
test
sbb
fildll
mov
mov
xchg
loope
jecxz
jp
test
pop
pushf
mov
inc
pop
push
out
xchg
cli
rcrl
rcr
sbb
cltd
add
pop
insl
negl
std
jecxz
inc
sbb
push
fisttpll
aam
test
xchg
jecxz
add
jecxz
xchg
cmpsl
outsb
mov
or
push
add
xchg
loopne
test
addr16
mov
xor
aaa
in
pop
push
rcrb
shll
xor
and
sbbb
out
andl
jg
in
adc
jnp
mov
outsb
aas
sbb
inc
sbb
imul
pop
aas
icebp
mov
pushf
cld
call
cld
lods
sub
sub
out
out
xchg
xor
in
push
push
add
xchg
sbbb
or
fcoml
scas
lret
int3
lods
xchg
adc
lods
sbb
or
pushf
pop
test
pop
test
adc
in
pop
jl
fcmovu
je
fistpl
and
insl
mov
mov
lahf
ret
sub
scas
mov
push
push
cmpsb
sbb
in
xchg
stos
sbb
stos
int3
sti
push
push
inc
xchg
int3
in
sbbl
imul
jg
mov
in
daa
clc
mov
mov
clc
inc
jecxz
aad
pusha
add
xchg
jmp
not
pop
fnstcw
or
loop
and
scas
loop
xor
push
lret
jecxz
add
xchg
imul
mov
inc
cmp
movsl
arpl
rcrl
cmc
jmp
out
lret
cmp
dec
mov
sbbb
cmp
sub
push
loopne
cmpsl
and
in
push
leave
jae
jg
cmpb
cmp
jl
adc
mov
xchg
jne
addr16
movsb
mov
daa
sbb
dec
hlt
popa
pop
hlt
gs
sbb
sbb
shl
jg
daa
aaa
push
fistps
sub
xchg
and
or
imul
ds
sub
jae
push
fld
loopne
mov
mov
ja
fisttpll
shrl
xor
jg
cmp
cwtl
std
mov
aam
test
mov
cmc
push
aad
inc
dec
aas
dec
push
insb
mov
pop
mov
lret
mov
fwait
push
or
test
mov
mov
push
out
loopne
cmp
xchg
push
push
addr16
call
jg
cmp
in
cmp
push
sub
sub
inc
fwait
push
sbb
loope
pop
push
and
cmp
testb
dec
fwait
sub
lea
push
push
dec
hlt
std
arpl
xchg
pop
cmpl
loop
clc
popf
add
aaa
scas
lret
mov
push
stos
hlt
mov
add
mov
movsb
push
ret
mov
jno
bound
add
sub
std
imul
ret
mov
mov
mulb
jno
int3
pusha
pop
out
mov
jno
out
inc
mov
roll
mov
xchg
stos
xor
cmp
sti
push
adcb
add
lcall
push
pop
cmovbe
sbb
aad
sub
movsb
jbe
xor
xor
aam
loop
add
sub
and
scas
popl
push
push
xchg
adc
cmp
jnp
jge
adc
bound
cmp
div
leave
xchg
mov
fidivrs
pop
sub
lret
mov
mov
and
xor
and
pop
jmp
push
ds
packsswb
cmp
inc
or
push
sbb
hlt
fidivs
andb
mov
or
jb
and
mov
cmp
xchg
add
mov
mov
or
mov
or
nop
cmp
mov
ja
lods
dec
mov
aaa
pop
outsl
mov
das
or
ret
aad
push
mov
ret
xchg
cmpsb
xor
push
xchg
loope
xchg
cmpsb
dec
push
pop
inc
sub
pop
aas
ja
jnp
pop
rol
xchg
jbe
jns
addr16
imul
stos
or
ret
sub
push
das
sbb
icebp
jle
add
test
mov
shlb
jl
mov
adc
mov
loope
pop
fs
inc
mov
out
lods
mov
or
mov
test
xor
sub
mov
fs
fidivrs
in
push
mov
scas
popa
fldl
in
shll
call
jg
pop
mov
loop
add
mov
adc
xchg
scas
inc
push
add
das
gs
movsb
push
ja
sub
outsl
pushw
inc
xchg
hlt
fisubl
add
int3
hlt
mov
add
push
xchg
inc
jmp
inc
sub
xchg
lock
orl
adc
pop
pop
dec
dec
in
dec
in
popf
imul
mov
scas
dec
mov
xchg
xlat
pop
aas
ds
sub
mov
imul
in
cmpb
jl
aas
imul
add
xchg
clc
pop
dec
imul
mov
imul
scas
adc
xor
loope
pop
mov
imul
faddl
or
mov
fists
fcomps
xor
cmpsb
or
pop
jmp
rcll
push
test
arpl
cltd
sub
in
popa
addr16
repnz
aaa
out
scas
xchg
daa
push
pop
outsb
sub
ds
dec
daa
lcall
call
adc
sbb
cmpl
inc
adc
or
or
jns
and
testl
xchg
jp
mov
ss
js
pop
dec
loope
cmp
xchg
or
push
lcall
lods
xlat
in
inc
and
jnp
pop
mov
gs
imul
adc
in
xchg
insl
mov
pop
int
cmp
jg
divb
icebp
ja
je
cwtl
jge
lock
adc
je
dec
mov
xchg
mov
mov
adcl
mov
ficomps
jnp
popf
in
daa
bound
leave
popa
dec
lea
shl
fdivrl
lods
sbb
lock
or
sbb
lea
rorb
fwait
aaa
pop
pop
mov
testl
or
mov
shlb
and
mov
pop
pop
out
jle
scas
inc
jp
or
mov
jp
dec
dec
orb
mov
push
fcompl
dec
and
arpl
fcmovnu
rorb
or
dec
pop
pop
cmpsl
mov
jae
leave
mov
push
addr16
andb
cmp
sbb
clc
idivb
pop
cmp
ss
mov
aam
xchg
xlat
jns
pop
imul
mov
rorl
lret
adc
movsl
dec
std
repnz
je
push
add
jp,pt
hlt
rclb
gs
jmp
fildll
mov
dec
outsb
mov
ljmp
je
daa
imul
push
xchg
or
mov
adc
mov
sbb
add
inc
or
mov
dec
jbe
mov
testb
jp
dec
and
jbe
mov
ret
pextrw
inc
pop
repz
pop
adc
sub
xchg
mov
mov
jnp
orb
repnz
int3
push
mov
loope
pushf
ja
push
xchg
push
or
dec
xchg
lods
and
test
mulb
jnp
imul
mov
in
or
cmpsb
imul
jmp
mov
out
jo
lcall
lea
or
inc
rcll
lods
stc
loopne
adc
std
or
xor
jb
dec
ret
imull
cltd
movsb
sub
pop
out
add
add
neg
test
stos
dec
repz
mov
jg
loopnew
sahf
lret
adc
mov
sub
pop
sbbl
xchg
cmp
dec
pushf
sub
mov
repnz
fmul
fcomi
mov
sub
add
xor
test
add
in
in
mov
jb
push
inc
lahf
pop
add
mov
mov
sbbl
lret
mov
sahf
mov
pusha
pop
pop
repnz
cmp
stos
cwtl
mov
sbb
jecxz
adc
daa
jne
pop
aad
into
std
push
mov
ret
das
shrb
jle
pop
pop
sub
movsb
sarb
fldt
mov
sub
sahf
jae
out
outsb
jae
movsl
lcall
xor
fwait
mov
add
imul
mov
repz
jge
mov
xchg
mov
pop
daa
mov
mov
ficomps
stos
hlt
sbb
leave
jge
mov
pop
and
adc
stos
cli
push
mov
sub
inc
push
repnz
test
sub
js
mov
jo
scas
lds
jecxz
mov
imul
mov
pop
lret
int
pop
ror
mov
imul
sarb
jno
jns
sbb
mov
mov
cltd
adc
mov
fwait
push
sub
mov
pop
lock
repnz
addr16
rorl
lret
xlat
or
cmp
in
xchg
sti
xchg
and
adc
lods
pop
pop
icebp
fldenv
ja
into
and
fs
and
cltd
lods
pusha
push
daa
vmread
pop
out
mov
adc
notl
mov
adc
lcall
call
lea
js
ret
xor
xlat
push
mov
adc
pop
mov
ret
or
pop
dec
lock
fstpt
into
gs
stc
sub
and
dec
daa
and
test
and
mov
test
add
jne
mov
sti
aad
cld
pop
add
or
cmpb
pop
jl
arpl
adc
jb
rcrb
inc
pop
out
dec
nop
mov
call
jl
sbb
adc
add
adc
out
xchg
faddl
lock
xor
leave
xchg
rclb
jl
mov
pop
cmp
test
jmp
adc
lret
xchg
adc
cmc
and
rcll
add
sub
jne
mov
pop
idiv
and
push
movsb
leave
loop
sbb
loopne
sub
pop
out
in
repz
in
insl
scas
and
lret
and
mov
nop
xor
mov
lret
mov
cld
mov
xor
xchg
adc
jns
push
mov
push
arpl
popa
push
gs
aam
or
dec
pop
leave
mov
xor
inc
in
cmp
mov
pop
lcall
int3
jmp
das
jnp
push
rcl
shlb
loopne
loopne
fisubrl
sbb
pop
mov
arpl
push
mov
xchg
nop
pop
push
iret
ret
ret
add
cld
xor
je
mov
cmpsl
test
aam
mov
xlat
js
fsub
mov
cmp
sbb
dec
sub
pop
push
mov
fidivrl
out
jae
mov
pop
bound
jp
inc
or
mov
add
jno
pop
lods
xchg
inc
jecxz
cs
test
xor
in
repnz
int
fstpl
adc
iret
jl
sub
ljmp
inc
stc
xchg
loopne
or
loope
pop
and
dec
jb
shl
jge
jp
call
test
push
out
xor
movsb
cmp
xlat
xchg
cmp
jo
das
or
pop
cmpsl
dec
aaa
mov
jl
fucomi
into
call
mov
pusha
mov
mov
xchg
adcl
addr16
push
or
pop
cltd
jecxz
sbb
cmp
test
les
jae
sub
lret
add
sahf
cwtl
shll
sub
push
mov
adc
aaa
enter
outsl
adc
jae
adc
cmp
sbb
pop
add
notl
xchg
push
and
xor
sti
dec
repz
xchg
sahf
adc
add
jno
loopne
mov
jnp
pushf
mov
and
mov
cltd
ds
shrb
xchg
fucomp
ljmp
mov
xor
mov
push
and
insl
inc
sub
dec
fisttps
dec
mov
popa
dec
fisubl
and
push
dec
repnz
lods
inc
sub
push
inc
aas
stos
jae
jle
lea
and
mov
in
pop
mov
adc
inc
int3
xchg
daa
inc
int
cwtl
repz
inc
jp
add
push
shl
sub
push
adc
jns
jle
movsl
dec
xor
loop
ror
repz
and
ljmp
jmp
adc
cwtl
icebp
mull
jp
jb
mov
scas
sub
sub
dec
add
push
pop
inc
int3
mov
fwait
je
mov
mov
shr
sub
lea
sahf
jecxz
stos
adc
push
cli
sub
cmp
orl
inc
lret
sub
mov
lods
jp
xchg
mov
lds
inc
push
in
cmp
pop
and
inc
mov
sub
pusha
lret
cld
mov
jne
out
sahf
jg
cltd
xchg
sbb
inc
nop
loope
push
mov
jne
js
xor
add
addr16
push
sbb
inc
movsl
test
or
outsl
xor
jb
and
xchg
inc
mov
dec
mov
push
dec
push
fldl
js
add
jae
mov
or
dec
out
jo
in
sbbl
cltd
fwait
add
insl
scas
scas
xor
js
mov
addb
cmc
repz
pop
mov
mov
mov
aad
xorb
mov
es
and
mull
push
in
rol
cltd
sahf
and
pop
jmp
xchg
cmp
out
mov
xor
out
fistps
outsl
cmp
pop
xchg
push
or
aad
pop
pop
sbb
inc
add
jmp
fnstsw
pusha
nop
ds
iret
push
stos
bound
add
pop
stos
ja
std
push
adc
cwtl
popf
sub
push
fdivr
pusha
jp
lods
cwtl
aam
ffree
adcl
mov
stos
mov
std
jge
lcall
scas
xlat
int
mov
testl
or
stos
jne
pop
negl
imul
movsl
push
test
pusha
fdivl
push
lcall
cltd
cmpsl
insb
pop
mov
mov
cmpsl
jb
ret
outsl
push
mov
inc
jb
stos
mov
in
sub
ds
in
ljmp
sub
and
repz
es
dec
loop
jno
and
sbb
test
sub
inc
sti
cltd
jmp
sbb
mov
push
inc
pushf
lahf
daa
stos
outsl
cli
adc
cltd
mov
sub
out
mov
inc
sub
xchg
mov
iret
bound
push
aam
in
test
mull
xor
lcall
push
fisubrl
into
mov
mov
jp
xchg
push
xor
jae
mov
xchg
mov
insl
add
sub
inc
sub
xchg
repnz
lahf
mov
adc
cmp
jno
lret
jo
lock
les
cmp
mov
push
lods
mov
jecxz
push
out
cmp
stc
push
add
rcll
in
jmp
push
outsl
dec
testb
fwait
sub
rorb
mov
loopne
adc
xor
rorb
xor
push
or
das
shll
movsl
cmp
push
sub
inc
xchg
mov
add
pushf
dec
inc
cmpsl
mov
ficoml
sub
arpl
push
mov
in
movsb
nop
mov
repnz
arpl
jne
jle
fisubrl
das
mov
xchg
adc
mov
push
test
xchg
add
movsl
decl
xchg
ret
mov
pop
into
jecxz
fnstsw
shrb
sbb
ss
fdiv
pop
sarb
pop
sub
xchg
out
hlt
sbb
ret
lods
and
adc
dec
push
jge
mov
mov
lcall
mov
pop
push
cmp
xor
fimull
test
push
sub
pop
inc
shlb
daa
adc
or
lahf
mov
repnz
push
jle
pop
fadd
xor
xor
cwtl
cmp
and
frstor
lret
popa
insb
and
popa
inc
fistpll
inc
dec
lods
ret
roll
stc
clc
dec
outsb
xor
in
stc
out
daa
data16
push
les
push
adcb
mov
mov
clc
clc
and
scas
icebp
sub
mov
xor
add
dec
js
gs
insb
in
add
jnp
lgs
aad
fidivrs
jp
lret
dec
xor
push
mov
addr16
sub
fdivl
push
mov
xchg
xchg
popf
das
inc
out
fisubrs
xchg
gs
inc
les
rorl
and
mov
jecxz
sti
mov
bound
push
or
push
jle
pop
cmpsl
sbb
ret
push
pop
arpl
sbb
inc
test
pop
xchg
enter
fisubs
add
push
add
sub
jp
ret
test
inc
push
sti
mov
inc
mov
sbb
clc
scas
out
rcrl
jne
test
adc
ss
mov
push
in
pop
and
push
sub
jo
jle
lret
aaa
mov
filds
enter
xchg
inc
loop
pop
out
movl
mov
ss
fiaddl
mov
adcb
leave
repz
sub
int
pop
lcall
hlt
xchg
gs
mov
ljmp
add
aas
in
dec
enter
js
jg
pushf
dec
pop
jae
je
loop
add
imul
movsl
xor
les
stos
mov
lock
outsl
mov
sbb
test
cmp
adc
jecxz
and
mov
pop
cwtl
adc
jg
jne
adc
add
push
or
insl
mov
mov
mov
lock
fsubs
jl
push
out
bound
in
orps
xchg
jecxz
mov
sti
adc
xchg
lret
ficompl
sbb
dec
cmc
pop
in
out
adc
das
ss
stos
adcl
pop
pop
pop
idivl
sahf
jl
mov
addr16
in
fs
shlb
push
lods
mov
push
out
dec
mov
addr16
flds
fwait
cwtl
or
xor
andl
and
sub
std
gs
pusha
popaw
je
jae
gs
pop
aam
xchg
mov
icebp
sbb
push
inc
sbb
sbb
adc
cmp
sub
sti
adc
inc
iret
jnp
fiadds
push
in
inc
lret
push
lock
int3
cmp
mov
jmp
or
ds
inc
pop
popf
inc
push
or
xor
cmp
mov
add
push
adc
sbb
addb
insl
pop
mov
mov
cmc
test
dec
pop
cmc
inc
inc
cmpsb
push
or
pop
xchg
and
add
dec
ficompl
add
or
insl
xor
dec
jp
xlat
lock
bound
inc
out
mov
mov
sub
into
pop
js
xlat
pop
mov
ror
ds
mov
int3
es
loop
jnp
mov
cs
lods
mov
sti
pop
out
or
pusha
inc
dec
cmp
push
push
imul
inc
lock
mov
sub
push
mov
enter
pop
push
jae
arpl
mov
gs
jo
out
daa
cltd
inc
jns
pop
hlt
pop
pop
arpl
jne
mov
jp
fidivrl
cmp
push
testb
fcmovu
jp
lods
movsl
jno
dec
adc
or
pop
enter
fsubr
es
lahf
pop
lahf
xchg
je
pop
divl
mov
xchg
inc
mov
bnd
sbb
pop
or
les
inc
mov
leave
enter
jo
or
hlt
test
mov
clc
mov
int
sbb
insb
movsb
cmp
mov
push
mov
ret
pop
je
movsb
cmp
mov
cs
in
jp
sbb
jmp
mov
xchg
xchg
and
jb
test
push
outsl
outsl
cmpb
xlat
out
adc
sbb
and
cld
dec
cmpl
or
xlat
dec
pop
fsubl
das
sub
adc
mov
fs
push
cld
dec
sarb
mov
dec
jecxz
sub
aam
inc
xor
gs
jg
and
lea
mov
jae
aaa
xchg
test
in
pusha
mov
lahf
aam
int3
lods
push
cmp
ret
add
inc
pop
xor
cld
mov
push
cmpsb
movsl
adc
imulb
xchg
add
pop
aad
ror
daa
mov
pop
xor
xchg
jns
hlt
lea
xor
shll
cmpsb
push
clc
adc
or
cmpsb
and
inc
nop
cld
or
arpl
je
cmp
cld
stc
rorl
ret
dec
int
out
sub
sbb
int3
pop
lods
inc
cmp
or
in
inc
loop
or
pop
cmp
or
leave
int
inc
ljmp
movsb
pop
aas
mov
or
push
lock
and
push
inc
xchg
inc
xchg
pop
inc
or
nop
dec
call
es
sbb
mov
adc
loope
adc
mov
hlt
aaa
ss
or
dec
inc
pop
rcl
mov
icebp
cmp
mov
test
sbb
test
xchg
or
lds
add
bound
jae
jb
nop
in
inc
out
jg
push
and
push
adc
mov
cmp
inc
int
sahf
inc
cmp
inc
push
sarb
xor
fdivrl
inc
jl
stos
mov
dec
sti
in
mov
ficoml
fiaddl
xor
dec
mov
sub
lock
es
hlt
cld
mov
lcall
mov
popa
aad
movsl
jp
iret
cmpsl
cmp
sub
test
jne
test
mov
mov
fwait
xor
cmp
imul
inc
jg
adc
lcall
lahf
cmp
or
data16
xchg
out
popf
push
popa
adc
mov
fnstenv
pop
mull
ss
ss
and
dec
inc
movzbl
sub
mov
xchg
mov
and
inc
or
xor
imul
lea
mov
inc
inc
or
inc
dec
jne
imul
mov
add
dec
pop
inc
lea
pop
inc
dec
pop
mov
imul
dec
lea
mov
dec
inc
mov
mov
imul
dec
add
ret
push
push
or
inc
push
add
imul
lea
lea
xor
inc
push
mov
imul
mov
dec
push
dec
sub
and
add
mov
add
movzwl
push
add
mov
movsbl
push
and
mov
xor
lea
add
push
mov
dec
push
imul
sub
pushl
movsbl
call
mov
add
dec
add
inc
mov
sub
mov
sub
pop
ret
sub
dec
cmp
jb
inc
xor
inc
mov
mov
xor
mov
mov
mov
inc
or
imul
inc
add
dec
mov
inc
xor
cmp
jb
mov
pop
inc
or
inc
dec
add
add
inc
add
xor
imul
dec
mov
or
xor
add
inc
xor
mov
and
inc
test
jbe
movsbl
inc
inc
inc
dec
inc
mov
add
lea
or
add
inc
and
movzwl
lea
mov
mov
inc
movzbl
imul
inc
add
and
sub
and
mov
mov
mov
add
sub
mov
sub
dec
mov
add
add
mov
add
dec
mov
and
mov
and
dec
jne
mov
mov
and
sub
mov
lea
add
sub
imul
dec
lea
add
mov
or
dec
add
lea
inc
inc
dec
add
mov
movzwl
xor
test
jbe
imul
movsbl
or
mov
add
and
movzbl
dec
mov
add
sub
mov
inc
movzbl
inc
inc
mov
mov
sub
inc
imul
sub
and
mov
add
mov
dec
mov
movzbl
inc
add
add
sub
inc
and
inc
imul
mov
movzbl
inc
movzbl
mov
inc
mov
dec
mov
mov
movzbl
movzbl
movzbl
add
xor
add
inc
jmp
push
add
imul
movzwl
lea
inc
imul
lea
imul
lea
xor
lea
mov
or
sub
lea
or
add
inc
dec
inc
add
lea
dec
inc
mov
and
imul
inc
dec
xor
mov
movswl
add
mov
imul
mov
mov
dec
dec
cmp
je
sub
inc
dec
push
movswl
call
call
mov
lea
call
call
mov
and
mov
dec
mov
add
add
ret
inc
dec
pop
sub
ret
push
lea
lea
dec
movsbl
or
push
mov
imul
push
movswl
push
mov
push
inc
movzbl
dec
inc
imul
call
add
push
add
inc
xor
imul
sub
add
neg
inc
dec
inc
mov
mov
mov
mov
mov
mov
mov
sub
or
inc
add
or
dec
je
inc
mov
dec
mov
mov
mov
mov
movswl
lea
dec
inc
repnz
mov
mov
add
mov
jmp
lea
mov
lea
mov
add
lea
lea
xor
lea
sub
inc
inc
inc
imul
jmp
pop
fstps
in
push
and
subb
xchg
mov
mov
mov
cwtl
cmp
notl
jp
daa
pop
jge
cwtl
xchg
lea
lea
cmp
cld
ja
je
xrelease
inc
cwtl
lret
jg
jle
out
les
test
adc
adcl
mul
pop
sub
test
push
and
testb
dec
inc
dec
cmp
repz
fsubrp
push
ljmp
rorb
add
sub
mov
mov
sub
cmp
cmp
jp
jae
aaa
cmp
mov
dec
pop
shl
jns
loope
orl
pop
int3
addr16
sbb
adc
jns
push
sbb
leave
lret
ljmp
mov
cmp
and
or
inc
push
mov
mov
mov
out
sbb
repz
ret
dec
aam
in
imul
cmc
push
mov
scas
inc
stos
jg
xor
xchg
jo
mov
inc
pop
jnp
xor
pop
fldenv
or
icebp
xchg
mov
inc
test
imul
addr16
push
lods
mov
adc
jecxz
cs
sub
xor
pop
stc
ret
stos
mov
cmp
xor
dec
out
gs
and
push
xchg
dec
add
mov
adc
inc
rorl
sub
jl
repz
test
jle
pop
push
fdivs
pop
jae,pt
mov
cmp
lcall
jns
sahf
popf
sbbb
call
mov
mov
and
sbb
not
or
push
adc
pop
mov
sbbl
add
inc
xor
pop
js
xor
int
out
out
push
lods
rcrb
mov
fcoml
test
movsl
add
cltd
add
adc
lods
fists
test
sub
cmp
popf
adc
jl
gs
mov
and
and
xchg
je
loop
pop
add
jne
dec
sti
add
xor
mov
xchg
push
inc
and
dec
xchg
mov
push
rolb
mov
repnz
sub
inc
shl
stc
xchg
in
sbb
fmuls
mov
inc
xchg
dec
sbb
scas
int3
mov
mov
xchg
inc
lock
and
push
test
lcall
stos
lds
dec
fwait
lods
inc
dec
push
or
ss
xor
push
add
daa
in
mov
aaa
aam
loop
pop
sub
sahf
and
push
lea
pop
lock
lds
mov
xor
lods
sub
dec
mov
sbb
inc
sbb
fsubp
dec
add
mov
push
mov
dec
or
fistpll
arpl
lods
jl
add
popa
rclb
dec
repz
ds
icebp
sbb
mov
lea
pop
stos
shll
xor
inc
into
xor
out
adc
insl
mov
and
push
subb
lock
sbb
inc
mov
call
in
clc
out
jnp
imul
adc
mov
sbb
call
xor
shrl
test
adc
int3
pusha
ret
daa
sarl
in
mov
int3
xor
leave
in
add
popa
data16
aaa
push
inc
pusha
mov
pop
iret
sub
xor
out
cmpsl
mov
push
fwait
cmp
insb
pop
lret
and
push
das
mov
jg
and
pop
leave
pop
push
sub
inc
cli
ret
xchg
inc
roll
lret
mov
push
cmp
sub
jbe
inc
push
in
movsb
cmpsb
mov
and
pop
imul
mov
jbe
mov
dec
stos
dec
and
in
lcall
dec
add
pop
mov
je
add
sub
cmp
jg
add
movsb
out
adc
push
fdivs
pop
dec
ljmp
adc
div
xor
adc
xor
lods
dec
mov
pop
sbb
mov
xchg
jnp
cmp
mov
stc
xor
popa
inc
stos
loop
sbb
and
add
jbe
lret
imul
push
lcall
mov
cmp
es
pop
daa
test
sub
xor
shr
bound
aam
dec
cmpsb
xchg
jmp
stc
xchg
push
in
adc
inc
out
and
in
pop
push
pop
negb
sbb
mov
adc
je
sbb
jmp
or
xor
xor
sub
and
push
cltd
enter
addb
mov
repnz
xchg
cmp
pushf
leave
cmpsl
rorl
in
mov
jecxz
leave
sbb
notb
sbb
and
sbb
push
or
sarb
hlt
cmp
push
inc
popa
and
mov
aad
out
es
out
sbb
and
push
imull
adc
jmp
imulb
mov
repnz
adc
aam
in
pop
stc
pop
cmp
ja
ja
mov
jl
fsubs
and
mov
pop
popa
inc
push
sarl
sub
inc
test
dec
inc
repnz
mov
int3
inc
pop
leave
push
repz
push
inc
in
faddp
push
cmp
xor
add
push
adc
cmc
ljmp
jge
xor
jp
fdivrl
lahf
test
sbb
cmpsb
sub
sbbb
repz
sbb
dec
inc
idivb
shl
pop
cmpsl
mov
adc
xchg
adc
imul
aad
lods
mov
lods
dec
int
jnp
repnz
xchg
orl
cmp
imul
mov
outsl
arpl
pop
fwait
scas
mov
or
nop
xchg
xor
mov
aam
sbb
out
xchg
pcmpgtb
xor
push
dec
ljmp
mov
mov
ljmp
xchg
lds
test
adc
stos
mov
fmull
mov
roll
sahf
hlt
mov
xor
fwait
cld
dec
shrd
fnstenv
fmuls
ja
dec
popf
mov
dec
lock
fcmove
or
shlb
dec
stc
insb
push
and
jle
stc
xor
int3
xor
std
mov
mov
mov
outsb
jae
fwait
jmp
add
xchg
push
add
rorb
sbb
jns
movsl
adc
cmp
rol
nop
fwait
rcrb
pop
mov
xor
xchg
out
cmpsb
add
lcall
push
add
stc
outsl
jae
push
sbb
shll
xlat
dec
jmp
jp
xor
cmpb
inc
xchg
jp
aam
cltd
iret
cmp
mov
int3
stc
cmp
adc
xlat
sti
xchg
sbb
aad
adcb
push
lods
aaa
xchg
mov
sti
gs
xchg
xchg
aaa
jl
sub
sbb
pusha
clc
out
jnp
jp
mov
cmc
mov
int
cmpsl
test
dec
mov
loop
int
or
cmp
fstps
stc
or
int
and
mov
add
xchg
popa
insl
pop
jle
jo
inc
aaa
arpl
mov
pop
pop
inc
mov
xor
fs
clc
jae
jmp
cmp
loopne
std
mov
les
ja
pop
aam
inc
add
mov
cmp
test
push
leave
int3
xchg
test
jmp
aas
inc
into
rclb
sbb
es
test
sbb
cmp
adc
jge
in
cmpb
sub
cmpsl
das
into
inc
jge
popf
js
fnstsw
lods
mov
xor
fdivrp
je
and
enter
addr16
push
cwtl
dec
sub
pusha
mov
bound
push
pop
fstpl
sub
fcmove
mull
std
jl
pusha
fyl2x
inc
sbb
jmp
andb
and
mov
ds
std
fistps
adc
or
cmp
add
adc
pop
push
mov
xor
cmpsb
or
hlt
dec
mov
lods
loopne
jne
out
cld
jp
gs
dec
inc
jecxz
mov
push
xchg
sbb
xchg
stc
push
adc
add
mov
push
and
pop
push
addl
test
out
popf
and
jg
mov
fnstcw
mov
cmp
fstpl
cmpsl
sub
ret
cmp
orl
orb
lret
adc
shlb
and
or
mov
mov
sub
xchg
aad
insl
sahf
jp
mov
xchg
lods
cmp
sub
push
or
mov
lahf
iret
mov
bound
sbb
shrb
mov
bound
mov
iret
pop
sub
add
clc
jg
cmc
push
pushf
push
fadds
pop
shrb
das
xchg
dec
pusha
pop
scas
imul
adc
mov
dec
push
cmp
movsb
divl
adc
cmc
pop
cmc
push
mov
aaa
stc
cmpsl
les
icebp
daa
xchg
cmp
pop
sub
stc
jo
lds
in
pop
xorl
adc
scas
xor
addr16
add
ficoml
xchg
push
cs
leave
cmp
sbb
cmp
loope
xchg
sbb
sub
mov
int
in
pop
add
inc
jne
push
notb
jo
repnz
stos
or
and
cltd
lds
mov
adc
lcall
fisttpl
push
jge
ret
enter
adc
lret
ljmp
lock
std
mov
imul
add
and
ds
incb
push
jae
in
int
inc
daa
rcrb
jns
lds
mov
mov
or
sti
gs
in
mov
mov
jecxz
ss
hlt
inc
popa
xor
je
mov
xchg
sub
dec
nop
pop
mov
dec
fwait
ror
xchg
and
mov
shl
hlt
sbb
fldcw
pop
aas
jno
pop
icebp
data16
jne
xchg
stos
or
or
dec
jo
out
xchg
es
xor
push
and
fcoml
scas
lret
mov
mov
sbb
lret
pop
cmovle
ret
mov
dec
cmp
xchg
jp
sahf
mov
push
lret
push
out
add
add
sbb
jecxz
cmp
xor
ljmp
mov
or
xor
jns
pop
pop
xor
ja
mov
aaa
insl
adc
jnp
fistl
adc
or
pop
out
imul
lods
movsb
jle
pop
stos
outsb
aas
xor
int3
stc
xchg
dec
and
pop
pushf
les
dec
push
shll
cli
js
dec
enter
cld
inc
and
repnz
push
sub
mov
inc
adc
cmp
lcall
andl
cmp
push
inc
and
test
dec
leave
movsb
sub
jno
add
xor
and
jl
add
test
sub
jno
lds
or
cmp
stos
jmp
scas
sub
mov
push
pop
loop
xchg
repz
xchg
shlb
cmp
adc
lret
push
outsb
fidivl
mov
insb
lcall
push
mov
int
mov
mov
lea
pushfw
shll
shrb
test
mul
jp
fchs
adc
mov
mov
int
out
shlb
popf
sbb
movsb
cmc
lock
mov
imul
mov
out
xchg
movsl
ljmp
mov
loop
out
pop
call
xor
loopne
push
fcomp
imul
sar
and
fiaddl
adc
adc
cmp
in
xchg
mov
mov
cmp
dec
clc
ds
sub
je
add
push
jae
shrb
jbe
stos
push
imul
push
fsts
or
dec
cmpb
dec
and
sub
lahf
movsl
jge
ljmp
sub
hlt
test
hlt
inc
dec
aaa
shll
shll
dec
icebp
fs
rcll
mov
pop
mov
push
xor
movsl
decb
push
cmc
iret
cmp
push
out
push
pop
push
adc
insb
int
out
repz
sub
sub
fsub
stc
fldcw
cmpsb
inc
scas
sbb
push
sbb
out
pushf
nop
lds
fs
sub
pop
ds
hlt
test
imul
scas
repz
jmp
mov
cmp
xchg
mov
push
cmp
mov
insb
or
mov
jns
in
jecxz
lock
lret
jno
and
xor
enter
ljmp
jae
fcomps
or
add
or
push
jb
decb
mov
inc
arpl
mov
rorb
insb
xor
filds
fs
inc
pop
and
and
fisttpll
adc
push
popf
push
jo
cmc
pushf
cmp
ret
aaa
dec
outsb
mov
out
in
dec
cmp
jmp
mov
leave
and
scas
push
imulb
test
cld
xchg
rorb
mov
push
mov
xor
cld
mov
or
push
pop
pop
sub
test
xorl
arpl
test
push
stos
insb
and
leave
dec
cmpsl
scas
hlt
aas
sahf
push
push
jg
pop
push
sbb
repnz
mov
mov
in
gs
js
int
pop
pop
mov
in
filds
add
jns
bound
cld
mov
push
testl
mov
mov
jl
pop
xchg
lods
sub
add
std
dec
mov
addl
adc
test
imul
or
lods
aam
push
popa
or
inc
cltd
jp
adcl
neg
in
sub
out
sahf
cli
push
mov
cli
and
mov
cmp
jg
out
loopne
xor
xor
dec
jmp
xchg
bound
inc
mov
cmp
pop
dec
cld
in
ds
jp
dec
scas
add
std
iret
lcall
cmp
mov
sti
pop
push
sbb
jle
subb
rclb
in
lea
lea
call
add
xor
call
dec
push
imul
call
imul
mov
mov
inc
xor
call
add
xor
add
mov
inc
dec
mov
sub
xor
lea
dec
inc
mov
dec
call
inc
add
mov
add
mov
call
mov
call
and
inc
dec
dec
lea
add
inc
mov
pop
mov
or
dec
add
mov
pop
mov
add
pop
mov
mov
dec
inc
pop
dec
add
inc
inc
dec
imul
dec
mov
pop
dec
sub
pop
add
add
mov
imul
mov
call
and
mov
mov
dec
ret
mov
mov
push
sub
movsbl
push
lea
add
push
add
push
dec
and
push
inc
sub
mov
lea
inc
push
ret
push
add
push
add
sub
dec
mov
push
or
inc
mov
call
pop
ret
jmp
inc
mov
pop
pop
ret
push
mov
or
sub
and
mov
inc
mov
lea
inc
dec
movzbl
add
and
inc
inc
or
mov
imul
dec
add
inc
add
lea
inc
dec
sub
lea
pop
ret
sub
add
mov
xor
dec
mov
dec
mov
mov
xor
imul
mov
movsbl
mov
xor
dec
mov
mov
or
dec
inc
mov
imul
sub
lea
inc
add
cmp
jb
and
push
mov
lea
push
or
mov
push
mov
inc
xor
mov
mov
xor
mov
dec
xor
mov
inc
push
lea
mov
push
inc
mov
pop
xor
mov
sub
dec
inc
add
imul
dec
add
mov
xor
imul
movsbl
mov
inc
dec
mov
movswl
imul
movzbl
inc
movsbl
mov
movzbl
add
movzbl
sub
add
inc
sub
movzbl
inc
dec
inc
lea
inc
movzbl
lea
inc
inc
movswl
mov
dec
dec
jmp
add
inc
add
add
adc
adc
add
inc
add
lret
add
mov
inc
add
add
xchg
movb
filds
add
dec
and
sub
jge
std
mov
push
xor
mov
sbb
dec
sti
mov
in
push
or
int
call
push
loopne
mov
cmp
add
mov
les
mov
jo
cmp
outsb
mov
fmull
call
mov
aam
rcl
xchg
ffree
xor
nop
inc
enter
mov
jge
push
push
out
lret
out
jo
dec
xor
sub
jmp
pop
add
push
dec
jl
adc
add
loope
fidivrl
imul
inc
cmp
mov
mov
inc
adc
jns
sub
inc
daa
sbb
or
adc
push
push
mov
jb
ja
out
sar
jmp
sahf
add
xchg
fiadds
sbb
push
and
push
jae
test
aad
aaa
add
pop
push
sahf
mov
in
fisubl
cltd
lea
cmpsl
sbb
test
jl
pop
dec
aas
pop
jg
daa
pop
push
jnp
stos
mov
jg
push
push
aad
inc
inc
and
push
shl
sahf
lods
add
jnp
das
mov
or
cmp
sbb
xlat
lret
cltd
clc
shll
mov
das
jmp
out
pop
and
sub
push
adc
stos
mov
andl
lahf
add
icebp
sbb
xchg
lret
es
mov
inc
jo
roll
lcall
push
mov
pushf
xchg
sbb
jg
jecxz
cmpsb
imul
int3
jl
jb
fstl
xor
hlt
scas
or
mov
cmp
ds
sbb
mov
insl
into
int
fwait
inc
mov
lret
cmp
mov
or
sbb
xchg
dec
int
dec
inc
mov
push
loopne
popa
pushf
pop
pop
lahf
ss
or
push
frstor
mov
cmc
jl
std
incb
lods
sbb
les
lds
or
shll
xchg
sbb
enter
repnz
nop
xor
push
sub
test
jecxz
sti
and
outsb
push
push
rclb
cmp
lahf
stc
push
das
adc
and
dec
push
or
fistpll
aad
cltd
pop
ja
popf
stc
xchg
nop
out
scas
das
sub
pop
jo
aad
out
cmp
int3
xchg
dec
insb
icebp
mov
es
dec
lret
test
out
ret
mov
add
into
sub
mov
pusha
dec
jbe
mov
mov
imul
loop
mov
popa
mov
movsl
cwtl
push
push
stos
ja
mov
xor
roll
xchg
stos
mov
std
pop
div
push
rorl
dec
scas
and
push
sbb
or
jmp
fdivl
push
fnstenv
push
iret
outsb
push
jbe
push
cs
icebp
lret
push
mov
sti
xchg
sub
sub
lret
ret
fcomp
int
adc
jnp
sbb
inc
js
fimull
lea
mov
loopne
outsb
test
mov
sar
sarb
inc
rorl
aam
xchg
sub
mov
push
sbb
rcrl
jnp
sbb
mov
loope
mov
andb
and
mov
arpl
mov
nop
and
dec
xchg
mov
fbstp
outsl
cltd
js
nop
jno
mov
ret
jnp
or
les
into
bound
aaa
sub
or
inc
nop
jbe
fbld
sarl
or
pop
and
bt
push
adc
shlb
repnz
cmpsb
xchg
push
add
cmp
mov
leave
mov
mov
sbb
xchg
dec
mov
or
daa
and
pop
mov
dec
push
ret
jmp
test
popa
and
cmp
mov
jecxz
mov
test
sub
lret
jg
enter
out
out
popa
push
or
clc
mov
movl
sbb
loopne
add
call
mov
mov
or
push
stos
add
adc
cmp
and
data16
dec
sub
pop
and
ret
repnz
fs
addl
xor
aad
pop
add
push
push
sbb
pop
lods
mov
sbb
mov
mov
orl
sbb
test
pusha
movsb
xor
cmp
dec
pop
push
sbb
add
and
stc
lret
stos
xchg
jg
cmp
or
imul
mov
add
lods
xor
mov
mov
inc
out
sub
xchg
divl
call
cld
fprem1
lods
adc
adc
ret
mov
fcmovbe
hlt
ds
mov
stos
push
adc
cmc
pop
imul
dec
mov
mov
push
xchg
shrb
popf
imul
cmpsb
xlat
push
add
jle
xorl
arpl
inc
push
es
or
xchg
ficompl
inc
js
jmp
movsb
mov
or
lahf
pop
hlt
xchg
repnz
int
sbb
push
aad
inc
or
sbb
jp
xchg
dec
popf
sub
hlt
mov
cmp
pop
mov
lea
mov
inc
push
push
or
dec
mov
fwait
push
aaa
pushf
mov
sub
lods
mov
sbb
lea
xchg
pop
push
hlt
mov
rcl
lods
rcrb
jno
pusha
repnz
sbb
add
rcll
ss
or
or
mov
pop
push
cmp
in
dec
pop
cmpsb
aas
ss
fidivrl
jno
cmc
leave
orb
test
xor
fcompl
rclb
insl
push
adc
aaa
and
mov
dec
daa
lcall
insb
rolb
repnz
inc
lahf
and
push
sub
fisttpll
mov
pusha
add
mov
dec
cmc
mov
mov
movsb
scas
xchg
lock
cltd
mov
popa
clc
mov
adcb
xchg
cmpsl
cmp
movsb
mov
sbb
pushf
mov
inc
lcall
jge
jmp
xor
leave
inc
jbe
adc
int3
inc
in
add
pop
and
push
pop
jbe
jnp
push
mov
adc
arpl
or
pop
push
test
into
daa
nop
xor
in
es
dec
cwtl
inc
rcrl
dec
cmp
ja
mov
mov
mov
repz
sahf
nop
dec
fildl
es
and
mov
inc
out
fildl
sub
xchg
inc
add
mov
push
sbb
pushf
aaa
push
xlat
nop
data16
or
or
sbb
aam
into
add
add
popa
lahf
lds
cmp
xchg
stos
cwtl
sub
addr16
stos
test
outsb
mov
sub
lcall
pusha
pop
sub
rclb
jge
push
popf
imul
xlat
int
mov
dec
data16
jo
jbe
popf
add
out
pop
push
jae
ljmp
push
aam
mov
inc
xchg
and
dec
cwtl
or
push
xchg
cmpb
inc
pop
lret
add
lds
lods
movsb
and
mov
sahf
push
mov
mov
mov
pop
xchg
pop
or
clc
adc
cmp
fimuls
mov
inc
mov
jbe
fiaddl
addr16
mov
cmp
mov
divb
sbb
or
mov
pop
fxtract
int3
and
ss
mov
sbb
adc
xor
mov
arpl
jmp
sbb
push
lea
mov
in
pop
mov
sbbl
jmp
and
rol
fistl
mov
idivl
inc
xchg
aas
aaa
in
cmpsl
insb
dec
popa
push
sbb
shlb
je
imull
pop
ret
adc
inc
sar
ljmp
mov
mov
mov
ss
cmp
sbb
dec
mov
and
fdivs
pop
aaa
lcall
adc
and
dec
push
sbb
jae
jb
mov
aad
mov
std
je
sub
and
ljmp
and
test
lret
pop
push
adc
fiaddl
addr16
mov
push
pop
jge
int
add
or
loop
lret
loope
adc
aas
pop
mov
mov
or
push
push
push
push
das
lahf
dec
fldl
inc
loop
mov
mov
xchg
test
sub
xchg
pop
or
xchg
or
fwait
and
scas
bound
lods
push
rcll
adc
cli
mov
pop
cmp
adcb
cmp
in
call
icebp
xchg
mov
pusha
addb
gs
arpl
xchg
test
fdivs
stc
add
or
popf
fnsetpm(287
sbb
int3
mov
add
ja
add
jmp
lret
add
push
inc
ss
xchg
out
sbbb
push
cmp
lock
leave
jbe
mov
cmp
enter
shrl
jbe
enter
les
ret
jne
lods
mov
clc
add
and
xchg
les
jp
mov
mov
insl
mov
daa
subb
cmpsl
mov
test
sub
pop
lahf
mov
movsb
cmp
mov
dec
inc
ficoms
pop
xor
lcall
aam
fucom
insb
and
scas
pushf
lds
ret
cwtl
or
cmc
mov
out
mov
or
lods
bswap
jl
push
mov
xchg
xor
pop
fcomp
adc
sbb
cwtl
loope
or
cmp
or
lret
xchg
mov
jo
cmpsb
out
stc
mov
dec
jmp
add
int3
adc
insb
sbb
mov
pop
cwtl
inc
pop
rcrb
jecxz
and
push
ljmp
lcall
test
ljmp
outsb
sub
and
jecxz
xlat
xchg
pushf
out
shll
mov
bound
add
fst
ljmp
jb
addr16
push
cld
add
ficoml
cld
and
insb
outsl
fbstp
sub
xchg
popf
enter
lock
dec
sbb
loop
sbb
adc
and
jge
cmp
sub
jl
enter
dec
add
shl
xor
sti
xorl
mov
and
xchg
push
xor
sub
add
sahf
mov
ljmp
mov
dec
pop
sbb
xchg
and
fistpll
int
bound
insl
cwtl
xchg
mov
outsl
or
pop
out
movsl
ja
jbe
jns
jmp
inc
xchg
push
loope
rol
dec
mov
in
sbb
andl
in
das
fsts
fstpl
aas
jmp
cmp
rolb
sub
mov
cmp
test
popf
sarl
mov
fdivrs
outsl
fidivrl
jmp
add
in
in
fs
push
inc
jle
pusha
jle
dec
test
imul
jno
jg
in
mov
fisttps
ljmp
mov
jge
and
int
sub
sbbb
or
adc
dec
jnp
inc
fwait
scas
mov
js
ret
fcomip
repz
ret
das
xchg
and
addr16
and
sbb
mov
bound
push
lret
push
xor
pop
xchg
jns
movsl
jecxz
sti
add
adc
bnd
cmp
loopne
out
add
pop
and
sar
xor
ds
xor
orl
or
xlat
adc
imul
adc
xor
aad
cmp
inc
pop
sub
adc
and
and
into
push
mov
add
vpcmpeqw
cwtl
mov
fistpll
inc
pop
in
mov
pop
cli
sbb
or
enter
loop
in
xor
push
inc
sahf
and
outsl
push
test
pop
inc
sbb
and
lret
push
rcl
jge
push
fisttpl
dec
jne
lret
in
icebp
sub
in
std
pop
call
insl
mov
data16
xchg
push
stos
xchg
jecxz
sbb
addr16
xlat
dec
test
cmp
push
cmp
inc
in
loope
xchg
in
popf
xor
add
adc
mov
pop
popf
xor
and
xor
cmpsb
mov
push
aam
mov
mov
popa
imul
fbstp
inc
in
xchg
or
es
xchg
mov
mov
sub
pop
xchg
dec
mov
pop
outsl
or
adc
out
fisubrl
int
in
dec
js
movsl
rcrl
faddl
mov
dec
mov
and
popa
mov
and
lret
dec
lods
add
or
pop
jno
jge
into
lock
int
sub
outsb
mov
pop
mov
sub
shll
sbb
scas
cmp
xchg
sarb
data16
mov
jno
cs
add
mov
orb
jno
xchg
fwait
imul
adc
pop
xchg
popf
ret
push
mov
jbe
scas
fcmovbe
scas
fdivl
rorl
mov
inc
mov
inc
andl
je
ret
jo
ret
mov
cmp
push
jl
push
mov
or
adc
add
xor
nop
xor
idivb
mov
mov
iret
outsl
sti
or
out
hlt
jge
mov
inc
rclb
sbb
xchg
jbe
cld
ja
and
push
or
inc
stc
xchg
test
je
in
jmp
and
xor
ja
jg
dec
cs
add
lods
or
nop
sub
or
lods
cmp
aas
fcoms
mov
pop
es
pop
enter
andb
dec
jg
xlat
sub
inc
mov
mov
inc
aaa
push
xor
frstor
jecxz
test
fwait
mov
xchg
adc
pop
fldcw
ss
ljmp
xchg
push
pop
leave
push
mov
jp
shr
mov
mov
in
dec
lahf
mov
arpl
je
fs
pop
call
and
cmp
in
adcl
xor
movsbl
add
cltd
stos
add
in
insb
xchg
xor
outsl
lods
cmp
mov
inc
dec
pop
pop
ds
dec
jge
das
and
lret
mov
mov
xchg
in
dec
in
test
pop
pop
ret
outsl
fsubl
pop
pop
rorb
fcomip
inc
xor
push
xor
call
icebp
addr16
and
mov
inc
lock
inc
clc
rcll
or
ret
out
mov
movb
adc
mov
bound
hlt
aas
mov
cli
sub
mov
cmp
lock
fs
mov
call
scas
jbe
jl
add
fmul
fxtract
jnp
push
fs
and
jg
pop
cmp
mov
jns
sbb
call
sub
or
inc
push
mov
adc
mov
pop
mov
stos
xchg
jbe
and
mov
jle
jo
inc
fcompl
mov
lds
aaa
ret
pop
mov
adc
out
int
or
popf
stos
icebp
jb
sub
movsl
mov
in
pop
movsl
cld
stos
mov
xchg
pop
lods
mulb
std
stos
pop
inc
adc
lret
pushf
sbb
shlb
mov
and
pop
fsubl
outsl
andb
mov
popa
call
and
stc
dec
xchg
dec
lock
or
and
or
jle
pop
mov
cmp
sbb
loopne,pt
or
cltd
cmp
nop
jl
mov
mov
nop
lods
cmp
inc
xchg
movsl
or
adc
xchg
movsb
sbb
push
mov
test
lods
stos
add
rclb
lret
enter
jns
bound
xorb
subl
out
mov
jmp
mov
cld
xlat
stos
dec
xchg
enter
fisttpl
cmc
sub
xor
jo
mov
scas
jge
mov
jg
jb
or
push
xchg
test
out
flds
lret
mov
jne
mov
xor
repz
cs
out
xlat
ss
stos
stos
push
jnp
pop
pop
sarl
fstps
into
adc
imul
push
fadds
stos
loopne
mov
imul
lcall
dec
inc
es
ret
jnp
test
xorl
add
jb
fldcw
movzwl
lret
popa
icebp
lods
in
cwtl
sbb
in
iret
cltd
ret
imul
and
xchg
or
sub
sbb
enter
mov
lret
fs
xchg
mov
xlat
arpl
pushf
jns
movl
push
and
push
shlb
jp
xor
cli
mov
pushf
inc
mov
cmp
rcr
es
fwait
push
ja
mov
fildl
mov
imulb
lods
push
push
xlat
dec
push
mov
or
add
push
push
mov
lret
int3
add
pop
push
mov
or
enter
push
sbb
subl
mov
lcall
sub
push
hlt
cmpsb
or
jg
cs
push
rorb
sub
xchg
bound
fwait
jmp
or
push
mov
repnz
sub
and
sbb
inc
int3
xorb
cmpsl
mov
gs
adc
sub
lods
xor
in
ja
fwait
inc
xchg
test
inc
sbb
sbb
sub
lds
jnp
cmpsl
inc
dec
sbb
lods
push
aas
pop
jg
jns
push
or
push
dec
mov
je
inc
add
in
andb
test
xchg
icebp
cmp
jns
jne
shll
xor
hlt
movsl
adc
jle
leave
push
sahf
mov
outsl
data16
sub
dec
adc
sub
push
pushf
inc
paddq
mov
push
jne
add
cmp
bound
test
jl
lret
icebp
jg
in
mov
hlt
pop
push
pop
mov
daa
and
icebp
adc
xchg
inc
outsb
jns
mov
xor
int
orl
dec
ja
loopne
sbb
aas
std
and
mov
sbb
or
pop
adc
cmp
scas
out
lea
repz
sbb
mov
sbb
xlat
mov
andb
cltd
jns
mov
ficompl
ljmp
shlb
xchg
cwtl
xor
and
out
push
jg
sti
add
inc
jmp
and
mov
cmp
loopne
ds
hlt
jle
cmpsb
pop
pop
mul
in
sbb
fidivrs
in
lcall
mov
subb
cmp
adc
cmpsb
xor
mov
out
adc
dec
cld
mov
out
add
dec
adc
addr16
sahf
loopne
push
push
xlat
jecxz
or
or
mov
xchg
adc
mov
mov
jmp
iret
mov
cmp
aaa
and
jns
dec
test
mov
cmp
push
int
mov
or
pop
fs
adc
sub
lcall
jmp
cmp
pop
call
arpl
xchg
in
add
jge
or
push
loope
pusha
mov
sub
push
mov
enter
mov
jg
adc
sbb
push
xchg
ficoml
pop
dec
lret
daa
gs
sub
loope
xor
out
lret
adc
fnsave
jecxz
mov
in
mov
mov
or
pop
jae
test
stc
imul
push
jae
sbb
xchg
gs
or
lret
dec
push
fidivs
outsb
cs
inc
push
pop
and
sub
push
pop
jns
adc
test
clc
inc
push
rcrl
adc
arpl
xchg
test
fadds
and
jecxz
repnz
pushf
inc
add
mov
std
xor
enter
pop
cli
fistpl
shlb
jb
in
inc
sub
dec
js
xor
inc
mov
cmp
sub
adc
sub
push
out
sub
adc
push
popa
shl
and
sbb
mov
jg
cmp
call
cld
cltd
clc
mov
in
cmpsb
lret
das
sub
jl
add
adc
inc
lods
ror
in
sub
sbb
inc
jge
cld
xchg
pushf
nop
pop
pop
push
das
push
loop
das
pop
jl
stos
scas
dec
loope
fdivp
sbb
jne
add
add
add
mov
std
mov
xor
imull
adc
or
aad
rorl
jne
and
cwtl
adc
pop
cli
sbb
fcomp
insl
or
mov
push
mov
cmpsl
or
lds
stos
push
divb
jb
xchg
xor
imul
xor
xor
into
test
mov
jg
mov
inc
pushf
inc
les
jmp
xchg
pop
lds
sub
dec
and
movsl
push
jnp
addr16
or
mov
cmp
pop
xchg
xchg
es
pop
inc
fwait
movsl
aas
gs
imul
jl
jne
mov
call
dec
mov
or
ss
cmp
sahf
insl
push
or
fwait
pop
in
test
int
dec
sbb
sti
inc
mov
pop
adc
jb
js
mov
pop
aam
mov
and
inc
int3
jbe
xchg
mov
sbb
add
push
out
or
lcall
fstl
icebp
mov
adc
and
daa
jmp
cli
sarb
xor
aam
sbb
sub
sub
scas
cmp
daa
xor
cmp
sahf
mov
xlat
hlt
xor
inc
push
lock
outsb
and
aas
scas
jl
out
icebp
sub
fisttpl
test
cmp
inc
push
adc
jmp
pop
inc
mov
outsb
and
popf
sbb
shlb
lahf
bound
movsb
adc
sti
sub
push
insl
xchg
dec
int3
sti
add
dec
inc
jge
push
popf
inc
out
shll
ja
std
mov
popf
incb
pmaxub
jno
mov
cmpsl
rclb
cmp
icebp
hlt
pop
mov
ljmp
jb
data16
mov
jb
mov
fwait
inc
inc
pop
dec
gs
jp
push
sub
scas
adc
jecxz
testl
cs
mov
mov
cmp
jae
cmp
adc
pop
popa
mov
bound
mov
pop
jmp
pop
sbb
rcll
cltd
cmc
jecxz
shl
adc
lds
mov
lods
and
clc
rcrl
movsb
and
mov
test
das
ret
mov
inc
and
repz
dec
cmc
rcrl
and
mov
enter
push
rclb
mov
cmp
jno
clc
pushf
cmp
aad
repnz
adc
jle
push
mov
icebp
jno
inc
xor
jbe
lret
into
pop
sahf
ja
or
clc
sahf
mov
pop
xchg
frstor
mov
mov
push
cli
nopl
leave
pop
je
push
paddw
ljmp
lret
pop
ljmp
scas
ss
flds
aaa
lcall
jo
out
sbb
xchg
adcb
jno
mov
jp
outsl
push
mov
lcall
xor
cltd
cltd
es
or
dec
ds
fsubs
sahf
std
insb
or
std
hlt
pop
sub
shrl
push
pusha
repz
js
in
icebp
and
xor
cmp
leave
movsb
test
idivl
hlt
xchg
leave
adc
cmc
mov
cmp
in
lcall
inc
pop
mov
and
lods
or
pop
in
out
pop
inc
pop
adc
clc
xor
mov
xor
add
sahf
push
fadds
js
inc
xor
aam
xchg
outsl
pop
jmp
loope
xchg
mov
punpcklbw
jns
lock
inc
shll
sbb
jge
xor
mov
jbe
daa
and
mov
movsl
sbb
pop
sbb
sbb
mov
lods
test
sub
jno
xchg
cmc
mov
stos
or
or
mov
pop
xchg
xchg
pop
rcrb
int
inc
ret
clc
mov
mov
xchg
dec
ds
or
loopne
or
pop
pusha
push
outsl
and
lock
aam
incb
add
lret
or
int3
push
cmpsb
daa
repnz
nop
push
xchg
push
or
into
std
cli
jecxz
sti
add
pop
cmp
xchg
movntq
out
mov
adc
jbe
xchg
cmp
loop
cmp
jle
dec
mov
sbb
inc
cltd
pop
ja
test
pop
repnz
pop
push
loop
xor
mov
push
into
adc
clc
add
cmpsb
scas
scas
xchg
cmpsb
inc
fnstsw
fstpt
inc
dec
leave
fwait
mov
fcoml
hlt
pop
adc
mov
sub
in
loopne
jle
mov
push
mov
scas
mov
sti
push
adc
jnp
mov
cmp
popa
fisttpll
mov
mov
mov
repnz
adc
sub
dec
lret
sub
adc
ret
sti
hlt
adc
nop
bound
push
mov
add
mov
testl
adc
testl
xchg
or
or
leave
pop
js
test
insb
loop
push
movsl
jae
mov
dec
mov
dec
jp
loope
push
fidivrl
pusha
stos
shll
gs
xchg
fsubp
orb
dec
arpl
jp
or
insl
jl
ds
orl
addr16
push
inc
dec
test
cwtl
aaa
sub
push
lahf
pop
add
cmp
xlat
inc
inc
inc
add
in
es
dec
add
scas
pop
mov
int
inc
outsb
ret
mov
pop
push
and
leave
fsubrl
sbb
in
sarl
sbb
cmp
or
xchg
xor
mov
push
scas
push
into
push
jns
leave
sbb
add
and
outsl
sbb
cmp
das
movsb
dec
jbe
cltd
lock
mov
repz
rcll
aaa
outsl
shll
xchg
loope
shrb
call
push
and
les
mov
pop
xor
test
pop
scas
mov
fidivl
add
filds
dec
pusha
and
mov
fs
sbb
and
in
sbb
nop
or
adc
in
adc
cli
mov
jl
adc
jmp
cwtl
into
inc
mov
insb
lea
ret
insb
pop
or
xchg
xchg
fwait
jo
bound
pop
decb
sub
sbb
aaa
loope
lret
push
add
dec
push
sbb
mov
mov
cmpsb
mov
and
or
cmp
add
ror
sub
mov
cwtl
push
bound
aam
dec
addl
jl
js
sbb
mov
ret
je
insl
js
mov
push
pop
mov
dec
mov
or
pop
xchg
cltd
in
mov
pop
enter
icebp
jl
repz
xchg
mov
mov
xor
loop
fildl
imul
decl
pop
push
pushf
ss
das
in
shl
mov
lods
sub
sti
jle
mov
fimuls
push
addl
mov
lcall
jmp
inc
xchg
mov
add
dec
jge
jne
and
rcrb
cmp
clc
out
pop
pop
jne
test
mov
mov
nop
or
repz
pop
and
mov
pusha
jle
push
mov
clc
sarl
mov
js
rcrl
pop
jns
mov
and
lods
push
jno
push
jno
int
mov
jl
push
hlt
jnp
ret
xor
test
push
bound
aam
xchg
pop
jmp
xchg
out
adc
mov
xchg
dec
cld
or
mov
xor
jne
adc
sbb
jne
dec
xchg
out
xorl
sahf
bound
mov
cmp
add
push
dec
ficoml
add
lret
in
movb
ja
loop
aad
xchg
jae
push
fs
jp
mov
rcrb
sbbb
jo
xor
xchg
pop
sbb
pop
test
mov
jmp
daa
push
inc
cmp
push
test
cmp
lods
scas
fdivs
lcall
adc
xchg
fmul
icebp
push
fdivrl
add
pushf
dec
push
loop
or
or
shrl
pushf
or
movsb
xchg
sub
imul
es
insb
xchg
loop
idivb
cmp
cmpsb
loop
in
xchg
and
dec
sbb
jge
push
mov
fstpl
ffreep
dec
mov
aam
in
sbb
lock
loop
fnsave
xor
push
xchg
mov
xchg
shll
lds
jge
pop
outsb
jns
mov
lret
inc
adc
add
and
stos
dec
mov
cld
mov
push
and
xchg
daa
cmc
xor
xchg
outsl
dec
sub
outsl
pop
push
out
imul
mov
inc
pop
in
lea
out
mov
xlat
pushf
lahf
add
int3
xchg
push
cmp
out
jl
es
push
mov
mov
cmpb
fcomps
test
call
out
movsb
gs
push
jne
push
movsb
jae
clc
or
sbb
insl
cmp
sbb
daa
js
or
repz
mov
stos
in
push
inc
in
aad
xorb
stos
inc
orl
sub
nop
dec
outsb
xor
test
sub
aas
and
inc
jecxz
mov
dec
loope
pop
adc
stc
pushl
cmp
rorb
jae
inc
out
mov
pop
inc
lds
stos
mov
ljmp
mov
xor
cmp
push
lods
push
mov
inc
sbb
pop
or
jg
out
call
into
mov
loop
push
add
adc
sub
mov
xor
sbb
sub
cmpsl
sbb
push
cs
jns
sbbl
ja
dec
xchg
repnz
mov
pop
movl
sar
sbb
or
stos
bound
sbb
inc
jbe
jg
int3
mov
cmp
dec
bound
sbb
add
test
out
sbbb
jmp
dec
mov
scas
pop
cmp
rcll
ret
adc
std
mov
popa
lods
int3
dec
lret
fcoml
mov
in
push
mov
cld
call
pop
push
out
pop
xchg
data16
mov
out
inc
jbe
add
jne
fldt
andb
inc
out
movsb
mov
leave
andb
cli
sbb
data16
mov
dec
sub
icebp
mov
imul
and
push
data16
adc
enter
pop
mov
and
cmpsb
push
adc
mov
xor
stc
jo
jp
inc
pusha
cld
pop
and
jnp
out
sbb
xchg
sub
lds
cmp
sub
push
inc
mov
scas
inc
cmp
inc
jl
inc
outsb
jne
push
test
push
ficoms
das
loop
pop
scas
mov
or
out
jle
insb
in
mov
ror
push
sahf
pop
sbb
mov
adc
dec
in
stos
inc
fcoml
or
movsb
and
mov
dec
iret
mov
jl
adcl
mov
rcr
out
sbb
hlt
cwtl
sbb
sahf
pop
sub
in
ret
lock
pop
cli
adc
inc
mov
cmpsl
and
pop
pop
sub
push
inc
xor
int3
push
sbb
sub
sub
jbe
popa
and
push
movsb
outsb
or
jmp
sub
test
cmp
mov
mov
call
std
test
fwait
sub
fisubrl
cltd
jge
xchg
roll
inc
mov
test
adc
out
scas
mov
shrb
add
arpl
addr16
jbe
mov
sbb
mov
lcall
ss
aam
js
test
mov
out
ljmp
arpl
in
jmp
jecxz
enter
jb
push
or
mov
sti
daa
and
je
nop
lds
outsl
and
jmp
out
sub
mov
mov
pmullw
repz
dec
pop
jl
cmpsb
lods
rolb
into
in
push
push
xor
outsl
inc
mov
xor
sbb
ret
mov
mov
push
or
xor
jno
fcmovne
pop
call
sbb
xor
sbb
sub
mov
cmp
jb
mov
push
in
and
cwtl
test
test
test
fwait
das
jb
xchg
test
sbb
and
push
dec
xchg
int
cltd
dec
test
mov
pop
mov
ja
rorb
pop
cmp
sub
jl
jle
cmp
mov
mov
out
lret
enter
push
sbb
push
sub
push
inc
fs
dec
cmpsb
or
and
push
cmpb
cmp
and
rcl
xor
add
aas
and
dec
shll
mov
mov
jbe
fdivl
popa
xchg
push
xchg
and
loope
jle
sbb
icebp
pop
xchg
faddl
pop
stos
cmp
cmp
clc
dec
mov
cmp
cli
jp
cmp
mov
jo
cli
movq
mov
repnz
jecxz
test
ss
dec
shrb
fmull
dec
mov
mov
pusha
adc
and
je
jle
icebp
adc
loopne
out
out
loope
dec
push
ds
jns
xchg
and
test
xor
out
push
jmp
mov
popa
rorl
std
mov
test
inc
iret
xchg
sbb
push
nop
jo
in
imulb
lods
ficomps
push
nop
or
push
fldl
jg
ss
je
mov
loopne
push
cmp
sbb
cmp
dec
movsl
jbe
fistpl
xchg
push
fs
mov
add
xlat
inc
frstor
and
adc
inc
cmpsl
sbbl
and
stos
mov
push
in
jb
leave
aaa
adcb
mov
add
stos
pop
loope
and
xlat
mov
sub
fildll
xchg
test
stos
cmp
int3
mov
in
imul
test
pop
mov
imul
pushf
cmp
mov
out
dec
pop
lret
jno
mov
xor
mov
lods
jo
mov
inc
test
sti
mov
icebp
sbb
and
add
lock
sbb
inc
inc
fcomp
outsb
ss
pop
dec
outsl
outsb
sub
mov
push
insl
jl
xor
and
cs
xchg
scas
mov
jecxz
jb
mov
sub
cmp
sti
fcomip
jmp
ficomps
stos
gs
int3
movsbl
and
xlat
mov
imul
mov
scas
dec
mov
ljmp
sub
popa
add
add
push
fwait
sbb
divl
fnstsw
and
aaa
jle
aaa
movsl
leave
es
clc
nop
cmp
cmp
ret
aam
addr16
sti
pop
xor
outsb
inc
cmp
stos
sub
ds
cmp
and
inc
jae
fbstp
rcrb
jne
dec
inc
das
cmc
mov
push
mov
xor
jbe
out
fsubs
xchg
mulb
sar
mul
es
sbb
mov
imul
cmc
xchg
xor
xor
shrl
nop
adcb
adc
mov
pop
call
dec
xor
test
int
mov
pushw
aas
lods
cmp
pop
iret
mov
movsl
lods
and
aad
in
and
and
cmp
push
jecxz
aad
mov
sbb
jecxz
jge
and
dec
push
idivb
cs
loope
ds
and
mov
push
mov
in
insb
xchg
fisubs
xor
xor
cmpl
or
push
bound
stc
stos
popa
cmpb
int
adc
mov
leave
test
push
inc
push
fsubrs
mov
or
mov
push
sbb
xchg
inc
mov
cmpsl
pusha
test
inc
js
or
testl
mov
in
jno
xor
lahf
in
jl
jnp
jp
fstp
jg
jecxz
sbb
adc
push
push
inc
shrl
push
pop
rcl
inc
es
mov
cmp
call
sub
mov
imul
add
inc
leave
idivb
pop
push
fdiv
addr16
inc
push
cmpsl
push
scas
mov
xchg
mov
sbb
in
pushf
outsl
sub
je
gs
shlb
aad
xchg
xchg
in
mov
stc
out
inc
mov
scas
dec
jbe
cmpsb
push
mov
lahf
add
sahf
xchg
cmp
mov
mov
jp
inc
addb
mov
int
push
sbb
test
cmpsl
mov
push
bound
inc
loope
repz
shr
scas
mov
inc
mov
lds
mov
or
or
ficomps
xchg
xor
xchg
aaa
cmp
scas
mov
imul
jecxz
bound
pop
push
xchg
xchg
mov
pop
arpl
sbb
ss
into
leave
bound
or
fcoms
std
cltd
leave
xchg
sub
bound
push
push
inc
sahf
inc
or
or
jp
fcomps
ror
mov
dec
pop
push
repnz
test
loop
andl
ss
popa
and
push
jb
xchg
pusha
xchg
xor
cmp
push
mov
adc
mov
xor
and
mov
sub
sub
push
ret
add
cmp
cmpsb
and
inc
iret
or
lcall
lret
xchg
pop
inc
add
push
sub
popa
push
mov
call
out
in
int3
repnz
jo
jg
mov
fnstsw
jl
ljmp
hlt
cmpsb
push
ret
pushf
cmp
and
hlt
or
dec
int
notl
push
and
popf
test
add
sbb
adc
mov
dec
xchg
fisubs
popf
jecxz
pop
xchg
fcmovnb
jne
iret
cmpsb
adc
fs
cmp
scas
dec
or
push
es
push
or
lahf
pop
stos
cld
sbb
mov
mov
cmp
stos
sbb
sbb
les
push
cmpsl
mov
inc
in
or
mov
jmp
into
out
push
divl
lods
mov
cmc
push
sbb
cmp
cmpsb
push
push
mov
scas
pop
xchg
ret
mov
fmul
pop
jg
jp
loopne
imul
jmp
cmp
lock
mov
and
movsl
dec
xchg
sub
inc
adc
inc
rcr
setns
js
cmp
push
enter
and
std
adc
jns
push
mov
pop
sub
ja
add
lahf
and
stos
jl
pop
push
mov
mov
xor
pop
out
pop
and
ja
and
fs
pop
or
je
add
dec
shrl
dec
sahf
es
daa
mov
mov
lret
push
loopne
cmp
outsb
push
xchg
cltd
es
push
or
mov
out
or
fs
ja
inc
jbe
in
ja
mov
insb
leave
in
sar
dec
mov
sub
cmp
or
js
clc
jge
adc
shrl
jne
imul
pop
imul
pop
mov
mov
pop
or
mov
cli
cmpsb
push
popf
xor
sub
cmpsl
mov
scas
test
in
mov
test
cmp
pop
pop
xchg
inc
pusha
or
lock
imul
mov
inc
pop
pop
ja
dec
insl
test
loop
lcall
clc
test
out
ss
jnp
adc
mov
mov
gs
ret
popa
push
repnz
rclb
mov
and
loope
ss
or
sub
fstpt
test
dec
push
adc
xor
lret
sbb
bswap
push
push
push
xchg
rcr
jp
pop
jmp
fnsave
loopne
fbstp
insb
lds
or
ret
outsb
in
adc
push
in
push
mov
inc
sub
or
sub
inc
cmp
pop
sbb
aas
dec
and
add
inc
lea
or
fs
dec
insb
adc
pop
inc
fcmovb
cmp
lds
pop
test
out
aas
call
fistl
push
mov
stos
mov
daa
jno
and
pop
mov
mov
xchg
lock
inc
je
inc
push
repz
aad
mov
popa
push
iret
cmpsb
dec
movsl
inc
push
dec
cmp
insl
push
insb
dec
mov
mov
sahf
fisttpll
pop
xor
cli
lods
inc
lods
ss
cmp
out
pop
nop
jns
clc
push
in
jmp
sub
out
leave
jge
sbb
into
and
inc
ss
pop
aam
aaa
jle
ljmp
pop
subb
mov
fsts
xor
push
push
or
sti
push
in
jo
and
jnp
jbe
or
push
lods
aam
adc
in
sbb
adc
sarl
pop
xchg
in
xchg
push
sub
sbb
add
lret
loop
je
mov
or
jb
addr16
dec
cltd
inc
mov
mov
call
sub
push
mov
push
add
cmpsl
lret
bound
out
mov
or
icebp
push
xor
adc
negl
sbb
ficoml
je
add
or
enter
xor
add
push
sbb
fildl
mov
loope
hlt
ja
ss
mov
cmp
push
pop
iret
jo
rcrl
xor
pand
ja
jnp
xor
push
push
inc
shrb
popf
pushf
loope
add
add
incb
jle
arpl
pop
add
mov
sahf
push
insl
lahf
xor
rclb
cwtl
ljmp
popf
shll
cmpsb
mov
imul
nop
popf
enter
in
xchg
je
insl
in
inc
adc
mov
xchg
sub
add
cmpsb
sbb
cwtl
and
movsb
andb
cmc
adc
push
out
insl
jecxz
add
movsl
iret
xchg
sbb
aad
mov
inc
push
lret
dec
loop
pop
sub
xchg
stos
xchg
nop
repnz
into
pop
add
jp
bound
inc
mov
mov
stos
hlt
sub
fstpl
out
inc
sub
je
cmc
mov
movsl
inc
movsl
insb
loopne
adc
sub
push
dec
fisubrl
push
call
add
js
push
movsl
popa
aaa
adc
dec
prefetchw
or
repnz
leave
andl
rcll
mov
leave
aam
adc
ljmp
mov
icebp
cmpl
test
pop
or
gs
cmp
push
mov
push
cs
mov
pop
or
dec
mov
mov
jae
pop
flds
aad
xorb
in
and
xchg
cmp
jp
stos
or
and
in
inc
mov
and
inc
cmp
xchg
mov
test
mov
shl
fsubrs
and
sbb
sub
in
dec
jbe
sub
aas
cli
and
loope
daa
push
mov
ljmp
test
pop
shl
lret
lds
sbb
push
popa
es
xchg
loope
pop
hlt
and
fwait
jb
mov
lods
cld
inc
stos
ss
mov
in
lcall
movhps
pop
leave
mov
cmp
sub
out
xchg
inc
jnp
add
loop
hlt
or
stos
fidivl
pop
lea
lock
sbb
cmc
mov
insl
fimull
jo
adc
add
xor
clc
nop
loope
sbb
sbb
pop
mov
sub
push
add
rcl
lds
jns
fst
cmp
out
aas
addr16
test
dec
inc
idivl
mov
pop
push
add
mov
test
push
sbb
rcll
fidivrs
shll
lea
imul
fwait
mov
inc
int3
mov
dec
ret
xorb
or
xchg
add
test
sub
push
mov
xor
and
adc
lcall
xchg
jno
cltd
and
inc
mov
cmpsl
cmp
je
test
in
lret
int
outsb
test
cmp
jg
test
add
pop
inc
pop
sbb
push
pop
cvtdq2ps
sub
push
outsl
pop
mov
push
xor
sbb
fcompl
andl
pop
mov
add
mov
das
sahf
js
scas
cmp
inc
clc
in
shll
xchg
stos
cmp
divl
sar
sub
lcall
f2xm1
enter
ja
mov
popf
jb
adc
cmpsb
mov
ds
out
xchg
fdivr
aas
pop
fidivrs
iret
or
push
sub
sub
xchg
xor
out
pop
fwait
dec
mov
xor
fcmovbe
repnz
pop
and
xor
xlat
mov
and
push
add
rcll
daa
push
stos
stos
pop
push
lods
cmp
inc
out
sub
rclb
cmpsl
inc
dec
or
mov
popa
pop
in
mov
cmpsb
mov
jnp
sub
sbb
lret
xor
bound
cmp
xchg
xchg
cwtl
push
repz
xchg
push
inc
jmp
or
sub
repz
pop
jp
jle
imul
scas
arpl
cmp
pop
inc
sbb
cli
jmp
test
fs
push
and
filds
and
std
lcall
cmpsl
mov
xlat
in
sahf
cmc
pop
fisttpll
dec
aad
les
jle
aad
pushf
pop
aad
lahf
cvtpi2ps
push
in
mov
ret
xor
lea
xor
push
add
pusha
mov
lahf
mov
arpl
push
mov
jns
dec
cli
jne
push
test
dec
ja
mov
pop
inc
aas
mov
inc
mov
movsb
rcrl
xchg
out
jno
inc
fnstsw
xchg
insl
fldl
jmp
fdivs
lea
fistl
pusha
inc
inc
add
push
das
aaa
adc
sub
push
cmp
xchg
mov
stc
pop
inc
cmpsl
mov
adc
jo
mov
imul
or
test
movsb
adc
test
xor
sbb
repnz
mov
push
xlat
sbb
mul
or
xchg
pop
push
nop
jmp
ret
scas
test
out
adc
xor
push
je
aas
add
shrb
jg
pop
daa
mov
push
jge
test
xor
fmuls
dec
movsl
xchg
dec
mov
insb
into
scas
lock
bound
mov
inc
outsb
pop
mull
into
xchg
ss
add
add
flds
repnz
xor
or
mov
add
mov
nop
dec
imull
xchg
push
lock
dec
dec
or
mov
data16
scas
xorb
es
xor
lret
cwtl
push
movsb
pushf
sbb
cmc
sbb
jmp
out
cmp
and
dec
pop
call
sti
cmp
mov
popf
mov
insl
sbbl
dec
cli
mov
test
fisubs
mov
lret
lock
inc
mov
jp
jne
in
adc
xchg
ret
addr16
out
adc
sbb
icebp
mov
dec
negl
mov
arpl
sbb
ljmp
jle
in
sahf
pushf
add
lods
xchg
or
dec
xchg
fldt
and
sahf
movq
sarl
cmpsl
mov
mov
xchg
scas
mov
mov
and
jmp
movsl
pop
cmp
movsw
jns
xor
push
cmp
xor
xor
js
inc
adc
negb
or
in
mov
jbe
cmp
mov
sub
out
cmp
push
jle
pop
jb
or
adc
jl
aam
shl
nop
lods
repnz
inc
test
xor
ja
mov
ljmp
and
ljmp
push
push
ret
pusha
insl
push
mov
int3
mov
cmpb
mov
adc
std
and
in
sti
dec
nop
icebp
push
jno
mov
mov
fs
lcall
sbb
movsl
mov
lods
add
cmpl
rcll
or
adc
mov
int3
mov
xorl
pusha
push
adc
enter
js
ret
pushf
idivb
cmc
xchg
mov
pushf
mov
call
ret
adc
mov
cmp
call
sbb
movsb
mov
imul
test
hlt
ficompl
xchg
push
jo
lcall
out
push
mov
call
in
dec
cmp
xchg
add
or
loop
sbb
jmp
adc
adc
je
in
or
fsubrl
and
push
dec
add
das
gs
dec
data16
add
and
insl
cmp
and
popf
adc
rcll
add
sub
pop
jns
mov
xlat
popa
cmpsl
scas
or
push
shrb
std
ffree
xchg
adc
std
mov
sub
imul
lcall
push
or
cmp
repz
pop
cs
push
or
mov
inc
insl
xchg
xor
cmpsl
push
lods
pop
stc
test
mov
mov
fisttpl
ja
push
inc
loop
mov
das
adc
pop
cmp
xor
jecxz
lods
aas
inc
out
cmp
lret
arpl
pop
sarl
mov
push
mov
test
push
inc
subl
xor
push
stos
dec
pop
or
mov
nop
arpl
stos
lcall
out
test
add
sub
or
xor
popa
sbbl
add
xor
add
and
test
out
repz
dec
jge
rcl
iret
jle
lahf
jge
adc
cmpsb
repz
pop
movb
push
or
mov
test
rorb
mov
outsb
inc
cmp
pop
jle
aaa
jbe
sbb
mov
inc
sub
push
xor
jo
nop
xorb
ljmp
nop
mov
mov
adc
and
stos
call
jmp
push
dec
dec
dec
out
shrl
fisubl
mov
cltd
mov
xor
fcoms
adcb
lea
ja
mov
lods
pop
cmpsl
shl
aad
pop
stc
push
cltd
adc
mov
mov
cld
and
sub
inc
loopne
pusha
jg
in
cwtl
movsb
aad
stc
cmp
pop
adcl
xor
or
jnp
out
xor
je
mov
cmp
dec
jo
add
push
mov
mov
inc
pop
imul
pop
and
sbb
jae
xor
in
mov
xchg
or
adc
jae
jecxz
xor
sub
adc
xor
mov
fistps
pop
cltd
xchg
xchg
outsl
lods
push
mov
jle
movsl
out
lods
xchg
jo
stos
out
mov
mov
add
sub
dec
insb
daa
std
jo
stos
xor
mov
mov
push
insl
mov
stc
inc
popa
cmp
shll
add
sub
rcrl
popf
scas
cli
jp
gs
add
pop
jne
in
add
mov
mov
xchg
push
lret
cmp
xchg
hlt
leave
call
lods
mov
popa
popa
das
push
cmp
stc
faddl
jg
fidivrs
aaa
loopne
aaa
cwtl
lahf
test
push
fdivl
xor
push
dec
mov
cmp
cmc
leave
into
sub
pusha
pop
jmp
sbb
xchg
shll
xchg
ljmp
cmpsl
mov
push
push
pop
jge
jo
sbb
and
pop
pop
or
cmc
cld
ljmp
fidivrl
cmpb
ret
testl
fcoml
notb
into
movsl
jle
add
adc
mov
pop
inc
popf
mov
lods
js
stos
push
fistpll
cmp
cmp
jl
push
mov
aam
stos
js
adc
inc
xor
jge
jno
addr16
xchg
lret
cltd
jge
bound
and
shld
dec
cwtl
movsl
std
mov
sbb
insl
sbb
in
mov
movsl
mov
nop
sub
xchg
insb
or
push
jns
test
sti
and
adcb
inc
inc
int3
es
add
lahf
ss
mov
xor
ret
mov
dec
and
daa
test
aaa
daa
adc
stc
lods
arpl
xchg
bound
or
lahf
ret
lods
imul
stos
push
pop
ljmp
addr16
pop
test
and
in
inc
lds
inc
lahf
push
jb
je
pop
sbb
andb
xor
lahf
ss
loop
or
mov
dec
dec
or
orb
and
test
imul
mov
fiadds
xchg
aaa
xchg
pop
dec
insl
inc
icebp
push
bound
fisubrl
sbb
xchg
shlb
xor
and
cmp
popf
push
mov
jmp
mov
lea
jmp
push
shlb
push
repz
pushf
into
data16
cmpsl
pop
add
dec
repz
pop
test
adcl
movsl
mov
cltd
xor
mov
ljmp
sbb
push
sub
fldl
push
enter
call
sbb
fwait
mov
xorb
sub
mov
inc
aaa
mov
mov
mov
int
daa
in
push
xchg
mov
loop
nop
leave
xor
push
popf
outsb
setl
xor
popf
lret
xchg
and
inc
leave
cld
mov
mov
lods
lret
sbb
out
ds
lret
mov
pop
es
add
sub
aaa
mov
push
aad
add
push
sarb
and
sbb
rol
cmc
jbe
rclb
rol
hlt
push
loopne
enter
cs
cmp
out
pop
fildll
xchg
xor
lds
xchg
jne
push
xor
xlat
mov
int3
out
subl
xchg
and
push
aas
adc
je
or
or
insb
mov
outsb
sbb
xor
sahf
push
push
mov
xor
add
mov
cmp
sub
xor
mov
stos
sbb
mov
cmp
lahf
dec
adc
mov
xor
ja
dec
sub
xchg
mov
je
scas
or
and
or
xchg
cwtl
sbbl
sahf
pop
cmp
lret
push
mov
into
or
cmp
mov
sub
popa
cmp
xchg
mov
in
or
inc
fsubrs
sahf
jnp
cmp
fdivs
ljmp
in
mov
cmpsb
ljmp
lcall
pop
jbe
adc
subb
and
repnz
mov
dec
fidivrl
jle
mov
int3
mov
loopne
and
lret
mov
push
lret
inc
and
lcall
int
jbe
mov
mov
loopne
jae
push
mov
shll
push
add
jae
push
and
inc
popa
js
gs
fninit
mov
sub
add
mov
scas
xchg
or
inc
int
addl
ss
jle
jae
dec
cs
xor
dec
xor
mov
inc
inc
dec
pushf
movsl
inc
push
lcall
mov
out
sahf
push
adc
pop
aas
pop
jmp
xchg
dec
in
jg
arpl
mov
mov
pop
adc
bound
mov
test
std
inc
imul
add
and
pop
sub
in
cmp
sbb
ffreep
loope
sub
popa
or
test
adcl
cltd
adcb
aas
stos
icebp
xlat
icebp
jmp
arpl
or
mov
ljmp
pop
adc
ret
ret
pop
aad
and
jge
xchg
jecxz
cli
ret
mov
or
xchg
sti
or
jnp
sbb
bound
mov
popa
cwtl
mov
push
in
push
adc
ret
xchg
hlt
cmp
sarb
jo
decb
jmp
cmp
sahf
shrl
mov
mov
xchg
pushf
mov
gs
sub
mov
sahf
or
popa
iret
or
add
jb
sbb
iret
pop
rolb
add
xchg
push
call
jae
dec
cmp
rcl
xchg
push
int3
mov
fs
push
inc
jno
jl
test
cmpsl
insb
js
adc
fwait
xor
test
jae
sub
fbld
lahf
jecxz
clc
daa
adc
addl
pop
dec
sub
dec
jge
mov
subb
mov
jb
js
push
cmp
bnd
mov
xchg
sub
neg
and
cmp
cwtl
arpl
add
adc
dec
jo
jns
inc
iret
push
sti
dec
ficomps
inc
xor
or
pusha
and
jmp
add
sbb
jb
repz
je
fisubs
xchg
xchg
pop
or
mov
mov
inc
xchg
xor
iret
push
decl
insl
scas
fistpll
mov
xchg
cmp
movsl
int3
jno
fisubl
xor
ja
and
push
xchg
inc
sbb
imul
sbb
ljmp
pop
out
xlat
call
out
stos
icebp
test
insb
test
add
fdivl
test
inc
adc
push
push
or
shrb
xchg
repnz
repz
inc
cmpsl
pushf
cmp
ret
inc
mov
sbb
call
xchg
sbb
mov
mov
cmp
scas
aad
mov
jmp
lahf
out
fdivl
xor
mov
shl
cmpsl
sbb
sub
or
add
imul
mov
xor
sahf
in
xor
imul
leave
pop
pop
cmc
push
mov
cs
mov
mov
lret
sub
jl
mov
push
jo
in
aaa
movsb
inc
sub
dec
lods
mov
clc
pusha
mov
lret
pusha
mov
adc
mov
xor
and
or
mov
add
inc
test
and
pusha
out
incb
fidivl
mov
bound
popf
lret
aad
push
shl
enter
aam
cmpsb
mov
push
lahf
hlt
adc
adc
xor
mov
jle
jnp
add
fwait
dec
hlt
dec
push
je
rcll
das
push
hlt
jb
ss
lret
fwait
mov
lret
cld
xlat
pop
dec
movsl
enter
jo
or
es
pop
push
cmpl
fwait
popl
jb
dec
movsb
lea
pushf
or
iret
sbb
rclb
outsb
or
jg
mov
imul
nop
nop
loop
loopne
in
sbb
out
in
and
inc
incl
fidivl
cs
mov
outsl
pop
pop
addr16
outsl
jnp
aaa
les
lods
in
ja
jns
int3
call
mov
ds
add
lret
das
leave
cs
jne
mov
mov
loopne
pusha
into
incb
sti
jmp
xor
mov
subl
cmc
jae
mov
add
lahf
sub
xchg
xor
aaa
add
pop
inc
or
test
test
icebp
adc
xchg
insl
outsb
jbe
shlb
mov
fnstcw
cmpb
add
cwtl
in
xchg
add
cmpsl
or
mov
mov
mov
sbb
and
xor
jp
jp
xchg
fwait
imul
movsb
gs
sarl
popa
mov
push
mov
popf
mov
push
popa
inc
jo
fimuls
jae
out
inc
mov
mov
dec
jb
dec
lds
sub
shlb
outsl
adcl
and
push
pop
mov
sahf
push
pop
mov
pop
sbb
cmp
jmp
adc
pushf
out
aam
mov
call
lods
mov
mov
nop
xchg
xor
and
jl
out
enter
xchg
and
int
out
lcall
mov
mov
outsl
adc
lahf
inc
pop
inc
xchg
dec
pop
mov
lods
push
cmp
pop
jae
repz
iret
out
xor
and
iret
daa
js
mov
data16
pusha
dec
add
adc
leavew
jb
sbb
mov
mov
push
mov
std
pop
sbb
mov
fsubrs
push
dec
repnz
jbe
jbe
mov
push
adc
mov
inc
sbb
in
or
sub
cmpsl
test
rclb
xchg
jmp
mov
jno
xchg
dec
push
es
mov
sbb
or
pop
dec
dec
pop
inc
sti
push
pop
ficomps
mov
mov
or
enter
pop
scas
jle
test
cmpsl
mov
cmp
lods
nop
jl
mov
inc
flds
inc
adc
bound
stos
imul
jmp
sbb
and
adc
mov
xor
call
rorb
xor
sti
pop
ret
xor
andb
push
xor
inc
dec
pop
push
xorb
das
out
cmp
dec
pop
aad
iret
je
repz
mov
pusha
jns
fstpl
adc
in
cmpsl
cmp
pusha
pop
mov
mov
fucomi
lods
mov
test
cmpsl
leave
mov
out
push
jl
ljmp
call
rorl
mov
stos
loop
push
in
push
add
shr
mov
cmp
stos
lea
outsb
cmp
clc
adc
arpl
movsb
cmpsb
cmp
daa
and
negl
dec
push
cmpsb
add
sbb
push
jg
out
fisubl
cmp
shll
sub
out
repz
mov
mov
mov
js
sub
and
mov
jno
sarb
cmp
arpl
cmpsb
lcall
aas
test
xor
and
pop
xchg
adc
mov
sub
aaa
mov
inc
adc
mov
lods
lods
or
sbb
aaa
in
adc
aaa
mov
rcrb
fimuls
and
jb
cmpsb
sub
jo
jp
addr16
andl
int3
je
push
iret
ja
push
clc
pusha
call
jle
stos
nop
jmp
xchg
stos
pavgw
inc
jle
scas
scas
mov
add
push
pop
int3
call
into
add
xor
stos
mov
cmp
dec
mov
decl
add
loop
outsb
movsb
mov
leave
lods
cmp
mov
sarb
enter
pusha
out
or
push
xchg
cmc
push
mov
mov
add
cli
dec
sbb
jp
push
gs
push
nop
xchg
loopne
xor
daa
imul
or
fisubrl
sbb
dec
adc
cmp
sbb
cwtl
rclb
dec
icebp
and
mov
call
mov
aad
into
adc
push
jo
cld
jg
xlat
push
mov
add
test
inc
ljmp
xor
bound
xlat
addl
mov
jmp
push
dec
fxch
aas
decl
dec
xchg
rorl
loopne
mov
jns
je
xchg
push
dec
mov
jne
cld
adc
jb
cmp
jp
xchg
mov
out
int
aad
cltd
std
push
fldcw
notb
loopne
xor
push
or
sub
xor
in
pop
mov
insb
mov
mov
es
dec
mov
cli
cmp
jmp
and
jno
xchg
mov
mov
add
scas
mov
out
clc
xchg
mov
mov
add
movb
incb
out
leave
shll
in
idivb
mov
fildll
movsl
scas
or
pop
mov
fmull
xor
imul
out
or
xor
add
mov
out
lods
daa
call
fwait
inc
hlt
popl
pop
push
push
mov
inc
fwait
xchg
jbe
fimuls
jge
shlb
dec
pop
fdivr
push
mov
cltd
mov
pusha
pop
outsl
daa
pop
aaa
call
mov
mov
pop
and
js
imul
cwtl
out
xchg
fnstenv
test
add
jl
xchg
ja
test
dec
stc
call
out
and
arpl
mov
pushf
mov
aaa
cli
adc
das
cmp
in
pop
lock
cmp
dec
mov
test
xchg
clc
shl
idivb
mov
jns
sub
cmc
mov
mov
int
fnstsw
jge
add
test
cli
jb
gs
bound
jne
inc
incb
mov
sub
bound
aaa
mov
mov
stos
sbb
and
and
adc
aam
jb
xchg
adc
pop
xchg
sbb
rorb
ja
inc
test
ret
movsb
call
adc
outsl
pop
shrb
sub
jo
push
jle
sub
push
cld
ds
retw
sub
cmpl
push
push
mov
push
dec
je
mov
jl
mov
push
add
fldcw
mov
adc
cmpl
cld
lock
movsb
popa
outsb
mov
mov
sbb
push
in
cmpsl
negb
pop
dec
mov
push
hlt
sarb
lret
mov
and
fcmovu
push
add
xor
push
clc
out
popa
ljmp
sbb
out
lods
inc
mov
iret
fdiv
mov
mov
fidivl
sarl
bound
dec
test
enter
lret
mov
mov
cli
out
add
push
mov
pop
push
mov
pop
xor
push
out
push
or
movsl
mov
fimuls
addl
inc
xchg
push
inc
jecxz
insb
or
mov
dec
les
gs
lock
cwtl
bound
push
adc
cmp
scas
test
repz
mov
and
fisubrl
imul
fnstenv
mov
iret
pop
and
or
or
rclb
xchg
xchg
xchg
mov
cltd
cmp
pushf
mov
push
cmp
test
hlt
push
stc
sti
pusha
xor
dec
lds
mov
push
incl
push
test
lods
sub
out
rclb
or
mov
mov
sub
or
filds
jle
add
int3
xor
dec
es
push
mov
inc
inc
xorb
jg
fcompl
sub
mov
sar
and
test
test
sahf
shll
mov
daa
movsl
cmp
repnz
mov
call
mov
jo
out
pop
inc
out
jno
cld
dec
fwait
inc
jb
mov
xchg
xlat
mov
xor
push
notb
mov
push
fwait
aas
aad
in
fmul
fisubrs
jo
mov
sub
mov
popf
push
inc
mov
cmp
sbb
mov
mov
es
imul
jge
mov
int
pop
xchg
aaa
hlt
mov
aaa
dec
sub
in
scas
stc
xchg
jnp
push
inc
dec
xor
test
and
push
adc
or
sti
test
loopne
lcall
dec
js
pop
int3
push
inc
into
sub
dec
sub
mov
in
fptan
movsb
inc
and
push
cmpl
movsb
in
mov
mov
pop
movsb
mov
outsb
lods
mov
fisubrs
jo
cmpsb
out
out
stc
cmp
xlat
dec
jl
lds
arpl
in
sarb
fiaddl
addl
adc
hlt
pushf
add
sbb
shll
cs
andb
xchg
jge,pt
ret
jle
add
imul
sub
adc
add
shrb
loope
add
sub
lahf
enter
ss
sub
and
xchg
adc
jmp
or
repz
mov
sti
add
adc
in
ljmp
fcmovne
or
jg
dec
nop
jbe
test
fadd
cld
sub
mov
xchg
or
data16
punpcklbw
sbb
lods
inc
and
test
lcall
lret
inc
aad
movsb
loopne
test
xor
mov
cld
adc
push
pusha
cwtl
cld
outsb
or
stc
sbb
inc
pusha
cmpsb
rorl
add
dec
mov
movsb
mov
in
mov
fsubrs
push
jle
dec
in
sub
cmp
push
jp
push
subl
xor
jecxz
pusha
cmp
test
subl
adc
xlat
adc
pop
mov
pusha
xchg
dec
sub
adc
sub
push
fucomi
cmpsl
hlt
fidivs
and
dec
gs
lea
outsb
pop
mov
cmp
lret
adc
enter
cmc
stc
or
and
mov
mov
push
push
pop
mov
jge
fcmovu
sbb
mov
pusha
stc
ljmp
xchg
sahf
mov
rcll
or
lcall
lret
jo
adc
adc
add
mov
dec
jae
aam
scas
push
sbb
sub
add
pop
jecxz
jno
pop
repz
sbb
pop
ja
and
cmc
mov
stc
je
in
xor
pusha
es
iret
gs
sahf
and
dec
jmp
pop
test
pop
lds
dec
mov
nop
scas
inc
in
int3
lret
sbb
loop
stc
push
mov
inc
xlat
and
dec
xor
cltd
loope
add
fs
lahf
arpl
movsb
loope
bound
flds
cmpsb
js
mov
scas
bound
aam
add
mov
lret
xchg
push
gs
lock
sbb
aad
sti
push
and
sarw
scas
rolb
rclb
clc
aam
cmpsl
pop
or
fimull
sub
out
mov
popf
pusha
dec
daa
sub
push
daa
pop
dec
pop
adc
out
inc
add
or
dec
test
ret
xor
lods
aam
or
movsl
xchg
pop
pop
shr
adc
jne
xor
mov
clc
mov
cmp
cli
inc
es
lods
rorb
cmpsb
xchg
jbe
mov
adc
mov
fstpl
xor
pop
sub
pop
fs
inc
xchg
jge
add
dec
mov
ja
sbb
mov
cmp
jle
lock
jg
xchg
mov
dec
inc
lods
add
and
mov
xor
pop
sbb
xchg
xor
lret
testb
stos
notl
mov
ja
or
dec
sbb
dec
sar
fistpll
je
xor
les
xor
or
sub
lock
mov
in
addr16
loop
push
jl
lret
mov
pushf
imull
push
test
ljmp
jmp
in
jmp
or
cmp
stos
push
sti
fdivrp
mov
shl
stc
mov
inc
inc
adc
inc
push
mov
cld
idivl
hlt
cli
push
jge
xor
xor
test
cmp
into
jno
or
je
rorb
push
xchg
loop
xor
pop
push
push
inc
movsb
push
ss
or
mov
dec
and
in
or
cmp
or
loope
aas
add
lods
mov
and
jns
out
imul
lret
mov
sub
push
mov
sub
pop
data16
mov
mov
hlt
pushf
subb
sub
insb
sbb
movsl
pushf
cmc
xor
pop
jle
sbb
mov
sarb
stos
cmp
jbe
cmc
sarl
imul
lret
sub
push
pop
jb
dec
stos
in
xor
aas
mov
fidivl
data16
out
insb
jmp
xor
inc
xor
in
jns
sub
mov
hlt
pop
jg
jmp
fnsave
jb
sbb
adc
jecxz
insb
jbe
loopne
jecxz
in
in
push
lock
adc
and
arpl
jae
jae
scas
cmpsl
sbb
xchg
sub
stc
add
mov
scas
jle
dec
inc
pop
mov
imul
add
mov
mov
cmpb
fucomp
fs
add
insl
scas
aaa
scas
icebp
loopne
cli
and
lahf
cmp
and
sbb
mov
push
mov
pop
inc
arpl
mov
push
je
test
aas
cmp
dec
jbe
push
add
xor
adc
xor
inc
popa
mov
clc
inc
sbb
or
sbb
mov
pop
scas
mov
mov
inc
dec
add
xlat
jne
jmp
out
out
repz
stos
shrb
sub
inc
pop
or
stos
test
enter
push
dec
mov
sbb
push
and
nop
idivl
es
shll
movsb
hlt
pop
cmp
es
xchg
les
sub
imul
fstpl
dec
rcrl
push
pop
sbb
movsl
outsl
fsts
fnstenv
adc
mov
cmpsl
aam
push
fidivs
xchg
shrl
mov
jmp
mov
lcall
dec
das
and
ror
xchg
add
inc
cwtl
lds
xchg
clc
sbb
or
or
mov
int
pop
inc
or
pop
pop
scas
out
push
ljmp
call
inc
in
imul
lds
adc
sub
jbe
stc
jle
push
inc
sub
popa
data16
jmp
fsts
sarb
cld
xorb
xor
in
imul
out
and
lcall
dec
or
xchg
sahf
cwtl
push
jbe
popa
mov
out
xor
or
pop
pop
add
out
xor
fmuls
sbb
aad
mov
xor
cld
sbb
cwtl
cli
or
pop
mov
mov
fwait
dec
daa
out
or
cli
jbe
lret
enter
xor
aad
sub
mov
sub
fcom
xchg
or
popf
aaa
stc
nop
bsr
pop
mov
shll
popf
roll
test
bound
cmp
ds
or
cmp
cmp
pop
shlb
inc
enter
idiv
and
cmp
inc
jae
add
stc
fstps
push
xchg
jle
out
pop
bound
jne
push
jo
cmovo
mov
fldenv
lods
sub
outsl
dec
dec
mov
movsb
xchg
xchg
adc
icebp
int
sub
int3
or
inc
shl
dec
cmpsl
mov
clc
xchg
and
mov
out
mov
outsl
jle
repz
jnp
xor
sbb
ss
mov
scas
les
xor
cmpsb
mov
xchg
jbe
jnp
repnz
dec
mov
sbb
xor
lcall
cli
push
push
negb
cmp
adc
std
sub
xor
call
add
mov
pop
pop
pop
and
jl
lods
cmpsl
arpl
fdivr
outsl
das
jns
fs
shrb
adc
andl
lea
jmp
cmovg
add
sarl
repnz
call
lahf
lods
sub
inc
dec
rcrb
outsl
sbb
push
mov
js
adc
xchg
adc
pop
ds
cmpsl
jle
rcll
gs
into
popa
lahf
cmc
int
mov
bound
mov
add
xor
lret
pop
lea
or
and
ja
xor
xor
roll
mov
cmpsb
push
std
cli
out
lods
dec
dec
fwait
sarb
in
ds
pop
daa
stc
cmp
xchg
jns
shrl
mov
fildll
fnsave
iret
out
jmp
mov
pop
outsb
ljmp
jae
int
jbe
mov
int
pop
hlt
outsl
mov
fwait
mov
jae
rcl
icebp
dec
inc
cmpsb
testl
in
mov
fnstcw
mov
cmpsb
mov
js
pop
mov
xchg
sbb
flds
mov
pop
or
int
pop
popf
inc
cmp
mov
or
in
shrl
add
into
data16
les
push
das
lods
mov
inc
sub
enter
jmp
inc
mov
jnp
dec
mov
sub
add
test
jb
outsb
adc
dec
push
or
bound
cs
aad
imul
pop
repz
lea
out
jns,pn
movsl
loopne
dec
or
push
fidivrl
test
dec
jbe
sbb
xchg
insb
pusha
mov
pop
repz
sub
lds
cmp
push
lods
xor
ficoml
xchg
aas
ret
sbb
mov
add
out
add
aam
sub
mov
shrb
xor
pop
and
jmp
cmp
cmp
je
xor
insl
std
adc
xchg
jecxz
push
pop
shlb
sub
and
adc
sub
stc
inc
push
push
jp
mov
test
int3
out
stos
lret
inc
sub
test
rorb
xor
inc
add
cmp
xor
test
mov
and
std
add
call
add
cmpsb
xchg
addb
sub
jae
rolb
shll
and
pop
outsb
cmpb
jl
sub
mov
div
movsb
lret
lods
test
add
xor
add
jge
cmp
imul
cwtl
ljmp
xor
in
xchg
jmp
and
sub
pop
lret
jg,pt
sarl
push
mov
jg
adc
push
xlat
bound
inc
decb
xor
mov
enter
test
push
in
lret
sub
add
jnp
or
cli
out
mov
mov
cmp
dec
cld
lcall
insb
sub
daa
sahf
dec
mov
jns
inc
dec
mov
ss
xchg
xor
dec
cmpsl
cli
push
cmp
push
fwait
and
xor
or
fnstcw
inc
sbb
or
cmpl
scas
jns
xor
add
cwtl
lods
pop
repnz
inc
cmpsb
sbb
and
push
bts
pop
outsb
cli
es
xchg
loopne
sub
mov
scas
push
out
dec
imul
mov
addr16
addr16
insb
mov
shl
cmp
and
in
fisttps
daa
or
cmp
cs
out
int3
xchg
pop
repz
std
loope
cwtl
pop
stos
pushf
neg
mov
pusha
call
add
dec
or
jge
cwtl
adc
adc
inc
sub
aaa
movsb
loopne
scas
ds
pop
cmp
xchg
xchg
fldt
sub
bound
cmc
repnz
js
test
xor
fwait
add
pop
shll
push
sbb
xchg
fbld
ds
xor
push
dec
fs
ljmp
sub
jge
sub
or
xchg
fsubr
jp
adcl
fistpll
sub
bnd
mov
xchg
shl
mov
add
inc
pop
cld
stos
pop
enter
and
mov
mov
pop
nop
push
lds
cmp
pop
push
and
push
or
sbb
stc
xchg
pusha
in
add
xchg
inc
fistpl
lea
loope
int
lock
jmp
pop
sub
pop
mov
js
push
ret
lods
jle
cmpsb
in
lcall
data16
dec
call
lds
xorb
das
mov
dec
sahf
ss
sbb
test
int3
push
sahf
adc
stos
into
mov
out
rcll
loopne
mov
push
mov
xlat
adc
inc
xor
xlat
cmc
xchg
ja
and
lods
sub
pushf
sub
mov
push
js
out
out
incb
jecxz
lahf
shll
lods
mov
inc
or
fsts
pop
fldl
push
jno
fistps
rcrb
dec
dec
jno
xor
popa
add
addr16
out
lock
mov
sbb
scas
fsubrl
add
pop
pushf
je
inc
mov
mov
jp
jno
dec
mov
inc
xlat
mov
outsl
loopne
inc
adc
insb
push
outsl
ljmp
call
inc
out
pop
mov
or
cmp
stc
hlt
ss
addl
mov
ds
lret
int3
sub
mov
stc
aaa
push
leave
hlt
and
pusha
cmp
xlat
jb
cmpsl
jle
xor
cmpsl
dec
repz
orb
popa
dec
and
push
push
cmp
outsl
xor
push
jb
test
push
lret
mov
xor
cmp
jle
cwtl
mov
jbe
test
xchg
scas
cltd
mov
add
mov
pop
push
fisubl
dec
mov
xchg
lcall
or
pop
ret
dec
adc
fists
ret
xchg
mov
gs
inc
mov
mul
pop
cmp
jge
imul
stc
inc
sahf
lea
pusha
test
mov
fnstsw
jnp
xchg
xor
and
cmp
je
jae
out
push
jnp
xchg
mov
inc
rclb
jnp
push
fs
ss
loope
loope
push
test
test
pop
repnz
insl
stos
ds
and
aas
xchg
cmpsl
scas
and
jb
repz
fwait
lods
sbb
in
sub
outsl
and
mov
pop
mov
call
int
and
inc
movsl
mov
mov
push
sar
mov
pop
push
aad
cmp
and
js
mov
dec
xchg
jns
sub
scas
lahf
sbb
mov
adc
lods
cmc
pop
sbb
add
out
mov
push
ss
cmp
sub
xchg
mov
jno
sti
adc
dec
dec
aam
push
xchg
cmpl
push
in
cld
sbb
fcom
rcr
icebp
mov
mov
cli
cmp
fldpi
out
jae
je
loop
push
xchg
and
gs
fsubr
push
pop
cmp
fdivrl
inc
fwait
repz
mov
cwtl
ret
movsl
sbb
sarl
test
xor
sub
stc
mov
push
dec
bound
das
mov
je
xor
in
pushw
test
stc
and
dec
loopne
jmp
insb
outsb
les
rclb
xchg
cmpsb
repnz
jg
popa
cs
lret
out
in
cld
aam
cmp
mov
or
out
stc
pop
outsl
pop
jns
lods
xor
mov
lea
fisubrs
xor
or
shrl
xchg
ret
sub
scas
mov
mov
inc
push
mov
stc
movsl
mov
jo
lods
mov
in
jo
mov
mov
out
sbb
inc
xchg
shrl
aam
fildll
test
aad
cmp
sbb
fisubs
or
jbe
shll
xor
js
mov
scas
mov
or
dec
push
lret
sub
je
sbb
addl
add
mov
xor
in
or
shll
ds
inc
mov
xchg
mov
jne
adc
xchg
mov
cmp
push
fisubrs
xchg
xchg
cmpsb
pop
xchg
aad
lock
and
jnp
pop
daa
cmp
fdivrl
push
es
and
add
or
xchg
pop
jbe
mov
fmuls
fldenv
repnz
push
sbb
mov
test
sbbb
mov
sbb
adc
sbb
or
stc
pop
fdivrl
shlb
mov
test
jmp
mov
pop
fisttpll
icebp
fsubs
mov
iret
outsl
data16
jge
ficompl
inc
loop
pushl
pop
add
cli
fwait
inc
mov
sbb
xlat
data16
dec
sbbb
cwtl
lret
add
ja
xor
icebp
call
test
add
leave
orb
imul
jecxz
pop
lds
sbb
imul
repz
pop
mov
imul
cld
lods
cwtl
addr16
lea
mov
jle
mov
imul
sbbb
push
jmp
push
insl
idiv
insl
das
leave
sbb
fs
push
movsb
pushf
adc
sbb
jp
aad
xchg
add
inc
add
out
arpl
jmp
scas
out
movsb
mov
les
test
fsubr
stos
lds
mov
movsl
xchg
idivl
mov
mov
out
xor
insl
push
cmp
push
cmpsl
loopne
into
and
mov
sahf
cmc
mov
mov
dec
fmull
out
lods
sub
lahf
pusha
xchg
dec
sub
sbb
pop
cli
mov
pop
or
lahf
mov
iret
imul
sub
out
cmp
add
adc
jg
mov
xchg
add
popf
je
pop
arpl
cwtl
inc
nop
jno
sbbl
dec
dec
jmp
mov
jb
leave
pop
test
into
cmpsb
sub
jb
int3
sbb
jnp
add
push
push
or
fstps
jg
dec
test
and
hlt
add
into
loope
fmuls
frstor
sub
add
pop
jmp
data16
in
clc
mov
jae
and
mov
in
pusha
cltd
scas
add
test
inc
lea
cmc
in
dec
sbb
sbb
xor
loop
movsl
jle
mov
mov
lcall
pop
jmp
dec
sub
test
mov
push
jle
inc
aam
jmp
mov
push
in
push
inc
js
imul
push
cmpsb
shrb
sub
cli
jns
insb
icebp
enter
in
lds
shl
bound
mov
clc
jecxz
inc
mov
add
loop
pop
mov
mov
adc
mov
and
xchg
push
cli
dec
push
xchg
pop
cmpsb
add
mov
out
or
and
mov
gs
cltd
clc
xor
ret
mov
inc
mov
sub
aas
and
pop
push
and
in
dec
or
add
add
sub
decl
das
xchg
das
jne
or
ds
ljmp
into
ja
out
imul
out
ds
dec
jo
xchg
pop
outsb
jne
dec
cmc
in
cmp
lret
mov
sbb
sbb
aam
arpl
shrl
pop
dec
dec
xlat
iret
fidivs
adc
adc
sbb
inc
mov
enter
out
in
pop
cli
push
sbb
rolb
das
decl
pop
inc
mov
or
sar
sub
adc
andl
cmp
sahf
or
out
mov
in
outsb
mov
lock
aas
push
popf
or
pop
and
sub
fucomip
jle
jle
lea
popf
mov
inc
test
pop
mov
cmp
sbb
push
pop
xor
out
stos
pop
adc
je
pop
mov
insb
jne
inc
je
push
cmp
lahf
arpl
leave
cmp
pop
xlat
add
push
push
into
loopne
mov
pushf
sbb
ljmp
outsb
add
push
add
pop
jmp
cmp
pop
mov
adc
sub
inc
or
mov
dec
add
lock
jle
adc
jo
cli
jg
shlb
jl
fmull
adc
or
addb
stos
xchg
cld
movsl
push
mov
rolb
inc
cmp
enter
mov
push
adc
mov
xchg
dec
les
jmp
jne,pn
aaa
xchg
adc
sub
push
das
mov
pop
imulb
fistps
or
jge
and
lret
dec
ja
jae
in
test
mov
sub
mov
jg
mov
sarb
jecxz
cld
and
pushf
jno
sbb
pop
mov
mov
in
sub
test
mov
lahf
test
xchg
les
cmp
pop
mov
pop
outsl
push
imulb
fsubl
jecxz
mov
ss
shr
inc
jno
les
inc
fistpll
movsb
adc
in
rolb
js
mov
lods
stc
push
stos
pop
or
adc
loope
or
cmpsb
into
mov
fstpl
sub
sbbb
out
xorb
pop
or
jmp
xor
xor
mov
fcmovnb
sub
lret
pop
mov
out
mov
cwtl
adc
push
sub
push
lods
sub
leave
test
jge
mov
add
mov
mov
outsl
xor
mov
ljmp
lret
shr
nop
cmp
loopne
test
mov
pushf
call
fwait
cmc
ljmp
mov
repz
repz
push
jge
shlb
stc
mov
sub
or
cmp
imull
testl
shlb
dec
cmp
jge
cmp
pusha
movsb
loop
aas
and
les
ret
sbb
sysret
test
sahf
add
movsb
test
hlt
xor
mov
int
hlt
gs
inc
inc
shl
add
mov
stos
fwait
and
xchg
pop
dec
fdivrl
insb
mov
leave
sbb
pushf
pop
sub
adc
jne
sub
pusha
cmp
fisttpl
repz
jno
ret
cmpsl
sbb
xor
inc
gs
loope
aad
inc
push
mov
jl
mov
icebp
lods
cmp
stos
adc
pop
inc
mov
cmpsb
push
test
cwtl
cld
pop
aad
and
xor
xchg
and
sbb
fs
sub
inc
pop
mov
dec
lock
xor
inc
sub
dec
cmc
cmc
fs
cs
sub
inc
dec
pop
stc
cmc
fmull
add
jmp
cmpsb
ljmp
and
pop
movb
adc
jb
test
jge
xor
fistpll
sbb
sbb
cmp
in
loope
mov
cmpsb
enter
cltd
jp
leave
xor
aas
mov
jbe
addl
mov
adc
sub
mov
push
add
inc
push
in
xor
jp
cltd
rcr
rclb
out
in
dec
mov
mov
sahf
pop
call
or
sub
inc
inc
dec
jb
aaa
add
lea
push
xchg
mov
insl
dec
adc
stos
fmul
xor
scas
cmp
dec
push
add
pop
repnz
dec
jmp
and
xor
scas
add
push
mov
je
dec
push
imul
aaa
shlb
sub
sub
lock
push
push
cs
pusha
movsb
enter
scas
fcom
xor
xchg
mov
dec
jae
push
jno
imul
out
aam
es
push
fdiv
jbe
frstor
adc
mov
addb
scas
xchg
push
inc
imul
push
nop
or
pop
mov
pusha
pusha
pusha
jnp
subl
repnz
es
mov
pop
push
dec
xchg
test
push
test
bound
push
mov
imul
inc
mov
lock
inc
into
jne
popl
clc
pop
adc
gs
or
mov
cmp
push
and
inc
jnp
ficoms
addl
pop
loop
int3
pop
std
stc
xor
sbb
add
inc
test
lods
push
mov
inc
fdivl
xchg
int3
pop
push
pushf
jge
std
imul
aas
popf
mov
push
ja
jnp
stos
jnp
pop
and
pop
stc
ss
ret
cltd
push
xor
jne
out
and
lcall
stos
sbb
test
dec
fsubrl
xchg
out
imul
sub
pop
popf
adc
loopne
bound
mov
mov
inc
inc
iret
xchg
out
mov
fldcw
inc
sub
ret
mov
out
pop
adc
jne
jo
cmp
pop
mov
mov
push
aam
shl
xchg
mov
movsl
fs
cmpb
ds
nop
dec
push
in
pop
aas
das
fnstsw
mov
dec
dec
cmp
in
in
lret
and
cmp
lds
icebp
pop
fstpl
aam
rcrl
jge
push
cwtl
fwait
pop
mov
dec
lock
outsb
iret
out
adc
xor
lret
adc
lock
sub
sahf
leave
in
scas
xchg
sbb
out
jg
dec
sub
popf
cmpsl
jmp
or
and
pop
aaa
cltd
outsb
sbb
pushl
mov
inc
in
or
jns
lret
sahf
cli
ret
mov
or
clc
lds
ficompl
aaa
enter
cmp
mov
clc
movsl
je
mov
mov
inc
imulb
mov
mov
pop
insl
or
cmpsl
repnz
mov
push
xor
jb
xor
mov
loope
inc
pop
ja
mov
sbb
fcompl
mov
mov
mov
pushf
or
push
xchg
jecxz
stos
out
dec
push
dec
js
test
notb
inc
subb
sbb
adc
xchg
and
fcoml
pop
cmpsb
stc
sbb
in
roll
xchg
adc
inc
in
cmp
add
in
inc
inc
mov
neg
mov
mov
fildl
cmp
adc
push
imul
fbld
lcall
aas
popa
andl
jne
add
sub
pop
add
push
mov
cli
push
add
js
or
stos
inc
mov
adc
dec
dec
repnz
pop
xchg
nop
add
jg
movsl
xor
push
sbb
int3
xor
incb
mov
shrl
outsl
adc
fldl
enter
jne
pop
test
pop
pop
mov
cwtl
mov
addr16
leave
movsl
cwtl
rcrl
and
out
mov
fstl
nop
pop
icebp
mov
cmpb
inc
roll
repz
mov
jmp
mov
push
repz
dec
sti
ret
inc
mov
dec
ja
jmp
dec
jns
sarb
jg
or
aaa
lods
sarl
mov
outsl
jg
jb
cmp
xchg
lret
aaa
adc
add
jecxz
repnz
inc
idivl
scas
into
fsubl
xchg
jno
pop
or
and
pusha
lea
push
dec
jno
addr16
js
push
test
je
std
aas
test
ret
pop
cmp
fs
or
xchg
add
push
cmp
xor
jp
nop
push
lods
and
scas
lahf
mov
nop
jno
dec
dec
rcrl
out
xchg
xchg
xchg
ja
jle
or
js
js
lds
adc
clc
ret
inc
mov
inc
sub
push
out
mov
xchg
mov
fldl
inc
mov
fbld
sbb
test
sti
pop
sub
fs
les
mov
scas
push
ds
xchg
icebp
xor
shll
pop
out
scas
mov
jnp
cmp
test
mov
xchg
loopne
int
loopne
jb
ljmp
mov
sub
adc
dec
cmp
xchg
call
mov
dec
cmpl
xlat
sbb
stc
dec
and
addr16
lahf
lcall
add
jnp
sub
push
fxch
xchg
lcall
pop
push
imul
add
insb
or
lret
adc
inc
sbb
roll
cmpsb
out
pop
dec
adc
push
std
adc
pusha
lret
sbb
and
inc
repz
movsl
sbb
stos
add
fdivl
jnp
cmpsl
mov
pop
add
outsb
push
xor
inc
pop
pop
cmp
xor
xchg
sub
mov
out
mov
in
xchg
sbb
mov
cmp
stc
mov
sbb
rcrl
popf
out
mov
sar
mov
scas
stc
in
pusha
mov
or
rcrl
pop
jnp
js
inc
mov
add
adc
mulb
jmp
nop
cmp
cmp
adc
jae
daa
mov
xor
push
sub
in
fnstenv
adc
jbe
jb
test
nop
das
in
adc
xchg
int
xor
insl
scas
mov
jae
inc
adc
leave
xchg
pusha
jmp
xchg
out
or
hlt
adc
sbb
leave
jg
jl
mov
aaa
lcall
addl
inc
leave
fdivs
fadds
and
xor
inc
dec
bound
jecxz
gs
mov
sub
and
pusha
push
pop
xor
sti
test
les
pop
pop
dec
subl
cmc
call
movsl
loopne
jns
fisubl
fmulp
fsts
mov
mov
mov
jbe
dec
sbb
inc
push
repz
cs
fs
aad
ficoms
sahf
jg
loope
cmc
cld
mov
xchg
or
jmp
xor
sbbb
sbb
push
jns
repz
mov
or
jnp
mov
clc
xor
push
lock
xlat
jge
push
mov
cmpsb
sbb
cmp
sbb
adc
mov
iret
arpl
push
cmp
stos
jl
imul
add
xor
std
xor
daa
ret
xchg
insb
movsw
repz
lret
or
int3
arpl
xchg
mov
aas
test
inc
aad
push
je
test
fcomps
ja
mov
ficoml
mov
mov
xchg
xchg
loope
dec
in
fisttpl
aam
jl
fdivrp
repz
and
cwtl
fucomip
lcall
pop
add
aaa
inc
pop
outsl
xchg
adc
fwait
scas
or
jmp
mov
lcall
adc
xchg
test
aam
sbb
mov
ja
sbb
or
pop
aad
xor
daa
mov
adc
dec
fnstenv
test
ja
sbb
xchg
lds
dec
repnz
out
stos
adc
out
pop
hlt
icebp
inc
sbb
mov
sbb
adc
ret
pop
sahf
sbb
mov
mov
outsl
das
jo
loop
cmc
into
mov
sahf
xor
loope
shrb
out
push
mov
jp
mov
add
sbb
mov
mov
int
adc
fidivl
popa
aaa
or
xchg
cmp
lcall
mov
xchg
imul
and
add
jo
pop
sub
shll
stc
and
stos
fcoml
and
outsb
roll
popf
outsl
jae
lahf
cwtl
mov
pop
xchg
in
repnz
mov
test
loop
and
cmp
sbbb
pop
mov
jb
sbb
mov
neg
inc
rcll
inc
test
out
fld
sbb
inc
mov
nop
add
decb
dec
dec
movsb
inc
mov
into
mov
xor
addr16
pop
xor
push
push
notb
dec
icebp
lods
adc
adc
sub
pop
dec
sub
sub
lcall
mwaitx
enter
loope
aam
fnsave
dec
aaa
scas
xor
xlat
sbb
js
mov
dec
ret
inc
push
rorl
scas
fs
lret
xchg
or
imul
xor
inc
add
cmpsb
jl
mov
pushf
out
les
rcr
mov
push
mov
mov
cmp
xchg
cltd
mov
adc
jbe,pt
adc
jns
mov
test
mov
in
inc
ret
outsl
xor
sbb
sub
inc
add
js
insb
icebp
scas
sbb
adc
shrl
nop
adc
pop
mov
or
adc
das
in
arpl
and
pop
mov
jmp
sub
inc
inc
pop
pop
and
roll
sub
imulb
xlat
popf
xor
std
lock
in
icebp
addr16
out
lcall
insb
cmp
pop
push
cmp
add
in
and
vpmulhuw
push
adc
mov
or
jbe
mov
ret
add
outsb
mov
enter
xchg
sbb
test
add
push
std
cmpsl
mov
popf
push
mov
dec
mov
sti
mov
mov
mov
jecxz
test
ret
mov
lret
xor
dec
test
aam
or
adc
jae
sbb
mov
xor
fs
lcall
add
xor
popf
jp
or
ret
xor
mov
and
sub
or
into
cmp
insl
ret
cmpsl
push
add
repz
repnz
cmp
xor
cmp
push
mov
test
imul
add
pop
sbbl
loope
int3
fimull
mov
sbb
pop
in
mov
enter
fwait
mov
sbb
and
jno
sbb
lea
jo
stc
aas
pushf
jne
lret
pop
cli
scas
xor
pushf
jmp
mov
or
xchg
popa
mov
sub
mov
lcall
xor
jecxz
mov
or
out
fcmovne
clc
mov
jle
dec
xchg
pop
fcmovbe
inc
aad
cmp
jne
rorl
fnstsw
rolb
loopne
aaa
adc
js
sbb
xchg
inc
movsl
fisubl
out
mov
fldl
daa
outsl
adc
into
mov
or
mov
jns
xchg
fistl
loop
lods
lods
enter
mov
adc
fldt
xor
fldenv
mov
outsb
jnp
lret
sub
mov
roll
test
push
push
adc
mov
pusha
rcll
cltd
dec
push
adc
outsl
inc
or
loopne
xchg
fisttpll
andl
pushf
jnp
xchg
fs
mov
popa
out
push
push
rclb
arpl
subb
cmp
ja
push
xor
mov
push
mov
sbb
jge
inc
int
fcompl
arpl
ss
mov
dec
shl
mov
mov
enter
cltd
dec
idivb
das
out
cwtl
add
cmpsl
dec
repnz
stos
xchg
mov
mov
mov
pushf
nop
out
sbb
mov
add
daa
mov
pop
jge
notl
adc
xchg
mov
jp
ficompl
adc
cwtl
or
shr
cmp
adcb
lea
lods
add
lock
sbbl
pop
movsl
stos
adc
rcl
mov
das
push
cwtl
outsl
xchg
mov
test
ret
dec
mov
mov
adc
jns
data16
sti
shll
add
fisttpll
jae
data16
ret
movb
jg
mov
les
out
cltd
jae
xchg
add
jns
add
std
mov
jecxz
popa
cs
sub
and
push
std
push
sbb
dec
call
loopne
fidivl
mov
jmp
popa
cmp
mov
fstpl
lods
inc
fcoml
dec
xchg
inc
cmp
pop
and
ret
movsl
insl
sbb
divb
dec
mov
ret
leave
xchg
leave
mov
aaa
cmpsl
or
pusha
mull
push
shlb
mov
push
cmp
int3
add
dec
jle
fiadds
mov
call
jg
popa
xchg
cmp
mov
inc
popa
int
js
popa
ficoml
add
xor
adc
stos
in
inc
dec
pop
call
pop
dec
sti
dec
insb
push
aam
cmp
enter
out
jne
fldcw
or
fwait
imul
or
push
xor
sbb
aas
test
cld
cltd
jge
ret
adcb
or
inc
into
fwait
xchg
ja
adc
insb
push
jl
testl
aad
cltd
jbe
hlt
xchg
or
cwtl
xorb
mov
fisubrl
add
mov
xchg
mov
mov
dec
add
pop
jl
add
cmp
push
jnp
sbb
add
pushl
inc
dec
xchg
fs
icebp
push
sahf
out
xchg
fdivl
out
loop
cmp
xchg
push
inc
mov
pop
adc
inc
arpl
aas
jl
xor
xchg
out
cmp
pop
stc
pusha
inc
mov
mov
jge
jnp
mov
push
arpl
scas
fnclex
add
enter
test
push
mov
jge
jp
sub
push
pop
or
adc
sbb
xchg
vaddps
cmp
cli
pop
shlb
dec
pusha
cmp
mov
test
outsl
add
cmp
pushf
lea
movsb
clc
imul
push
push
movsl
test
mov
pop
pop
push
call
xor
sti
adc
jae
in
mov
inc
int
out
jmp
pop
add
pop
jb
mov
push
and
popf
mov
js
push
out
dec
mov
pop
ret
push
pop
xorl
add
pcmpeqb
push
lods
sbb
or
sub
xchg
push
pop
or
push
xchg
outsl
adc
xchg
popf
dec
sbb
xchg
lahf
cltd
and
push
ret
hlt
adc
push
in
mov
inc
pop
or
dec
stos
add
hlt
jb
cwtl
repnz
mov
push
mov
int
jae
lods
inc
repz
lret
insl
push
rol
insl
or
mov
push
jmp
rcrl
jp
sbb
out
mov
jp
test
into
sub
or
xchg
adc
sub
aas
gs
mov
inc
cld
test
and
jge
in
rcl
jge
mov
test
addr16
stos
aas
pop
cmp
mov
dec
les
cmp
push
pop
test
xor
loopne
iret
pushl
pop
push
lea
xchg
vunpcklps
fisubrl
iret
inc
sub
ja
sahf
dec
lret
mov
jnp
ret
into
xchg
jne
xor
adc
call
loop
inc
std
mov
lret
lods
mov
mov
shll
sbb
dec
addr16
push
inc
jp
cmpsb
inc
fstpl
dec
arpl
push
jne
pop
cs
cmp
xchg
push
pop
push
xchg
or
mov
subl
add
xchg
jp
jnp
mov
pop
jmp
push
sub
test
xchg
xchg
pop
enter
dec
push
outsb
or
and
add
test
fidivrs
jmp
push
ljmp
or
jmp
sub
fildl
push
xor
mov
stc
inc
std
dec
cwtl
shlb
insl
add
cmp
jecxz
sahf
or
xchg
pop
mov
pop
jbe
mov
jbe
mov
sub
hlt
jb
mov
ss
dec
xchg
jae
push
cmp
push
or
mov
mov
loopne
testl
sti
loopne
std
out
sub
xor
dec
divl
sub
int3
adcb
aaa
pop
jne
loopne
imul
insb
ret
mov
mov
pop
lods
dec
mov
cmpl
sbb
mov
xchg
add
iret
mov
jne
insb
fiadds
in
xchg
cmc
or
xor
sub
mov
das
inc
out
leave
cmp
lret
mov
or
notb
stos
xchg
shll
popf
xchg
add
jmp
jg
jecxz
cmpps
ljmp
insl
aaa
es
pop
outsl
cwtl
adc
push
mov
push
cltd
pop
lret
arpl
loopne
xchg
jg
aad
insb
jl
push
loop
sti
aaa
popa
enter
movsl
xor
lods
dec
daa
mov
iret
jno
pop
stc
aad
or
lods
icebp
xor
xor
movb
in
in
add
das
add
cld
pop
aaa
int
mov
cmp
mov
add
outsl
jnp
jae
mov
mov
std
cld
ss
xorl
cmp
mov
jns
sbb
scas
jp
loope
or
data16
rcll
idiv
xlat
je
xchg
test
jmp
mov
mov
aad
add
add
dec
insb
jmp
inc
testl
out
mov
dec
outsb
mov
mov
int
das
sub
bound
loopne
fcmovbe
outsb
mov
pop
sub
mov
adc
xchg
fldl
mov
in
imul
scas
aaa
in
jmp
lods
lods
add
jl
mov
xchg
ret
sub
cmpsl
pop
cs
jmp
call
pop
int
aaa
dec
ja
jno
pop
iret
imul
pop
push
inc
ficoms
jle
leave
js
fbld
adc
xor
or
popf
jl
sbb
jb
jl
lock
movsl
mov
mov
out
push
rcll
mov
out
enter
inc
insb
xchg
xchg
push
xor
lods
loopne
jle
pop
andb
mov
call
js
in
mov
js
enter
mov
mov
lods
out
ret
push
pop
sub
sti
mov
xchg
std
and
std
pop
dec
outsb
loope
mov
xor
inc
cli
mov
lds
push
jg
ja
push
sbb
shll
icebp
jae
add
out
inc
mov
sub
dec
jecxz
cltd
push
xchg
lahf
xchg
sbbl
pop
add
rclb
lods
push
nop
add
popa
iret
or
cwtl
pusha
xchg
repnz
lea
fwait
andb
clc
and
call
ss
clc
mov
mov
ss
test
xchg
divl
shrb
add
xlat
iret
fcoml
rorl
nop
add
into
inc
test
or
pop
jne
gs
fs
jnp
les
push
adcb
cmp
lea
lcall
loop
inc
call
movups
fldl
fnstcw
xchg
inc
icebp
sbb
js
test
mov
fldl
inc
mov
fwait
inc
sub
mov
mov
xchg
cmp
cs
push
mov
push
push
adc
dec
xchg
sbb
pusha
inc
in
aas
cmp
jle
and
mov
inc
fiaddl
jae
cld
dec
pop
pop
and
pop
stos
mov
daa
ja
stos
sub
aaa
push
shrb
shll
mov
std
sbb
ss
cli
popa
cmp
les
inc
jne
inc
addr16
pushl
mov
aas
xor
rcll
adc
jle
mov
fxch
out
mov
fistps
sub
mov
call
je
inc
ss
mov
mov
insb
fisubs
sub
stos
jp
jnp
jbe
xchg
rcrl
adc
add
sarl
push
cmc
bound
rorb
dec
aaa
xor
out
stc
pop
scas
clc
fnstcw
aas
push
fimuls
loope
iret
pop
fsubrs
lret
mov
dec
sbbb
test
add
stos
jg
imul
inc
mov
cmpsl
inc
and
pop
push
jno
testl
pop
pop
lahf
cmpsb
inc
pusha
xchg
addb
mov
cs
pushf
sbb
outsl
mov
fcmovnb
push
sbb
dec
mov
ret
adc
mov
imul
outsl
fnstcw
popa
les
call
xor
sahf
push
fsts
inc
mov
repnz
in
pop
das
stc
adc
xchg
cltd
outsb
mov
or
rep
pop
xor
mov
scas
pop
jae
aaa
cmp
shrb
jg
mov
xor
pop
push
pop
jg
lahf
and
outsl
les
outsb
sbb
ljmp
test
sbb
mov
rorb
mov
inc
inc
cmp
orb
cmpsl
mov
xchg
in
or
cmp
xor
jo
int
inc
or
dec
addb
addb
push
jo
mov
fsubrp
stos
movsl
stc
mov
les
test
jne
xchg
insb
out
pop
mov
out
ja
add
add
pop
xor
adc
or
lcall
popa
movsb
sub
sub
mov
nop
rcll
subl
mov
es
iret
mov
in
jb
iret
inc
mov
repz
cmpsl
fdiv
fidivl
pop
sarb
incl
out
mov
push
movsl
movsb
stc
mov
xor
fwait
add
cmp
dec
cmp
adc
sbb
ljmp
dec
cmpsl
dec
add
mov
push
loopne
xchg
lcall
mov
stos
nop
in
pop
cmpb
std
inc
faddp
clc
inc
test
or
roll
jo
gs
mov
cltd
icebp
cli
insb
int3
add
clc
int3
ret
test
mov
adc
sub
inc
rol
movl
outsb
pop
pop
dec
movsb
add
icebp
neg
pop
jo
popf
pop
dec
sbb
shlb
push
xor
cmp
out
jp
xchg
outsl
mull
lea
je
out
add
call
and
pop
fsubr
dec
cmp
dec
mov
test
push
jp
jnp
pmulhuw
push
inc
add
dec
lret
loope
inc
and
idivb
mov
or
ss
aas
fstps
aas
pop
mov
push
lret
repnz
push
int3
adc
pop
and
pop
mov
mov
sbbl
mov
xor
imul
pop
jne
daa
ljmp
cld
pop
pop
in
mov
lahf
out
xchg
lock
push
sbb
dec
nop
pop
or
imul
leave
sbb
mov
std
adc
insb
std
orl
test
in
mov
enter
mov
jmp
aaa
in
push
add
shl
jle
cs
cltd
addl
shll
push
pop
pop
lret
mov
lock
ds
push
xchg
add
into
and
out
jb
xor
fidivrs
push
stos
add
adc
jbe
cmc
ss
jbe
lods
mov
jne
pop
mov
xchg
cmp
mov
jbe
lret
inc
cs
sbb
xchg
xchg
lds
fsubs
cmp
xchg
mov
xorb
jecxz
aam
mov
or
shrl
push
std
sbb
mov
push
mov
aad
adcl
mov
ds
xor
add
fs
and
mov
and
push
or
xchg
pop
sbb
mov
or
iret
add
jle
fwait
into
or
repnz
pusha
cmovne
ds
mov
sahf
iret
pop
mov
cs
cmp
cld
mov
add
push
push
jg
out
dec
cmp
aaa
dec
xchg
mov
aam
imulb
and
sbb
dec
popa
lahf
jno
mov
inc
scas
imul
mov
arpl
lock
stos
adc
cmpsl
movsl
pop
xchg
dec
and
add
ljmp
scas
push
arpl
mov
add
aas
movsb
movsb
push
mov
loope
int3
or
nop
test
sub
sub
mov
js
lret
adc
imul
lods
cmp
mov
jg
mov
sub
add
cli
pop
js
sbb
popf
stos
or
pusha
cmp
pop
dec
jno
call
testb
lock
pop
adc
shlb
mov
or
or
fmul
add
cltd
shl
lcall
pushf
test
jle
lock
sbb
cmp
add
sbbb
call
pop
and
add
and
mulb
pop
cmp
sub
and
insb
and
aad
out
in
add
lock
push
mov
rcrb
mov
lock
push
push
nop
jno
rcll
scas
jmp
fimuls
sub
rcrb
cmp
sub
loop
inc
jl
jge
mov
aad
pop
lods
loop
xlat
adc
leave
lret
lock
fimull
push
xchg
xchg
pop
idivb
lods
jmp
aad
sbb
dec
mov
mov
or
ljmp
nop
je
stos
xchg
add
fcoms
adc
popf
rcll
cld
inc
scas
xchg
fcom
or
xchg
xchg
dec
xor
out
mov
jb
hlt
mov
pop
inc
scas
add
mov
or
xchg
fs
sbb
in
mov
xchg
cmp
dec
xor
out
lcall
por
mov
out
popa
sub
je,pt
clc
xor
clc
lds
pusha
lcall
call
mov
leave
or
out
push
xchg
jb
lcall
flds
mov
lcall
push
pusha
pop
push
jbe
outsb
outsl
cmc
call
fistpl
stc
and
js
cmp
cmp
aas
dec
ret
push
push
dec
inc
sbb
cmp
sbb
dec
adc
testb
pop
sbb
mov
xchg
insb
mov
sbb
lret
mov
sub
adc
cmp
and
nop
jnp
push
cld
andb
out
cmc
xchg
fdivp
push
ret
xchg
int
imul
out
mov
push
mov
dec
shll
mov
daa
ret
icebp
xor
repz
test
inc
jle
rep
hlt
lcall
push
stos
je
popf
das
cmp
imul
cwtl
test
pop
add
add
sbb
mov
add
sbb
inc
shl
jno
scas
aam
mov
inc
sbb
dec
cmp
xor
std
lds
mov
and
cmp
sbb
pop
lret
pusha
inc
inc
out
sbb
adc
push
popa
push
pop
faddl
pop
int
into
enter
loopne
lcall
push
xchg
cmp
jmp
movsl
shll
gs
imulb
clc
in
je
in
cmp
dec
scas
dec
insb
fidivrs
sub
cmp
push
es
lret
cltd
std
dec
sbbb
or
lcall
ja
adc
out
idivl
iret
and
or
jno
push
pop
mov
add
fistpll
frstor
xchg
subb
aam
mov
cs
xorl
jg
sbb
sahf
cmp
mov
jge
lret
daa
in
leave
pushw
sbb
xor
cmp
add
mov
inc
rcll
jl
add
or
pop
mov
std
mov
adc
jge
jb
lods
mov
sub
push
mov
jbe
stos
push
mov
arpl
aam
inc
lds
jmp
mov
int
out
ja
clc
xchg
ljmp
xor
pop
ds
mov
in
push
in
xor
hlt
lods
xchg
or
or
pop
xor
pop
inc
and
push
add
ja
sub
lahf
jo
nop
lret
mov
mov
shrb
or
mov
mov
enter
adc
or
aad
push
jns
mov
notl
mov
test
or
sarb
movsb
cmp
pop
lcall
mov
pop
mov
mov
sbbb
popf
imul
clc
jp
add
push
push
mov
cltd
xor
or
adc
hlt
xchg
pop
cmp
xchg
mov
adc
popa
stc
jge
outsb
cmpsl
push
pop
ljmp
jmp
adcl
add
pop
mov
xchg
test
sub
enter
inc
xor
lods
xchg
pop
cmp
mov
mov
test
lea
dec
mov
inc
hlt
xchg
rcl
xor
rep
fidivl
pop
aaa
xchg
popf
dec
leave
ret
inc
sub
adc
sub
loope,pn
sub
leave
push
add
jge
out
lds
popf
add
les
ds
mov
loopne
sbb
clc
cmp
popf
orl
pop
or
adc
pop
dec
cmp
jl
or
lcall
icebp
in
dec
cmpsb
je
addl
cltd
jne,pt
lahf
test
mov
test
sub
cltd
mov
andl
call
or
cs
jp
mov
popf
test
push
pop
jno
push
jns
jg
cld
call
sbb
add
scas
add
and
lock
jb
add
scas
push
movsl
movsb
cmpsl
stos
adc
or
dec
int3
dec
and
loopne
xor
sbb
push
and
in
mov
lock
mov
cwtl
insb
or
pop
or
into
jno
test
in
xlat
int
adc
jg
je
push
sbb
bound
xchg
cmpsb
mov
fldl
lock
fisttps
mov
mov
imul
stos
mov
xchg
repz
cmp
stos
jo
repnz
test
stos
or
cmp
mov
lcall
in
cli
es
xor
js
or
and
mov
xlat
in
pop
jmp
pop
loopne
stc
pop
fs
dec
xlat
mov
lret
jbe
hlt
dec
xchg
mov
rcl
xor
rcll
pop
xchg
popa
fldenv
aad
and
mov
incb
cmp
out
xor
jmp
fcmovnu
stos
or
add
mov
or
and
ds
adc
out
lret
fxch
cmp
ucomiss
dec
push
xor
mov
xor
sub
ret
inc
movl
fs
data16
sub
lret
or
jl
call
cmp
mov
xchg
or
adcb
add
pusha
popa
rcrb
aaa
repnz
xor
mov
and
es
xorb
das
dec
mov
xlat
pop
mov
xor
aad
xor
clc
mov
stc
inc
xchg
cmc
dec
fwait
xorb
nop
icebp
es
fcmovu
push
std
pop
mov
push
adc
xchg
xor
ds
push
out
test
iret
jnp
fmuls
sub
pop
mov
addr16
push
push
xor
dec
cmpsb
jns
and
lods
bnd
pop
sub
sti
pop
jo
fsubrs
cmp
adc
push
icebp
jb
loope
sbb
and
xor
subb
aaa
leave
lret
jge
jns
pushl
and
or
dec
push
loopne
fldcw
pop
xchg
pop
mov
cltd
cmp
pushf
xor
loopne
xor
xchg
pop
cmp
mulb
int3
into
dec
mov
testb
adc
pop
stc
mov
mov
pop
ds
inc
ja
scas
cli
dec
popf
setle
fildl
pop
mov
loopne
cmp
leave
aaa
js
mov
iret
rolb
dec
push
test
pop
imul
loop
idiv
inc
xchg
cmp
stos
ror
xchg
dec
test
xchg
mov
shrl
leave
mov
xchg
mov
flds
int3
test
cmp
mov
fcmovu
stc
addb
xor
adc
fdivrl
in
mov
inc
mov
fidivl
arpl
sahf
fs
shll
fnstsw
negb
mov
iret
mov
dec
aad
jecxz
shrb
ret
out
fsubrl
xchg
lret
mov
jecxz
mov
xor
cmp
inc
add
stc
cmp
or
mov
xor
sbb
push
lcall
xchg
xchg
push
or
dec
add
loop
inc
loope
scas
loopne
jb
fstl
in
sbb
lock
xchg
lret
xchg
mov
jmp
shlb
shlb
in
lretw
cmp
cmp
jae
push
outsb
ds
jmp
mov
sbb
add
adc
pop
pushf
lods
test
mov
shl
fmuls
sbb
add
mov
inc
fistps
jne
insl
xchg
imul
and
inc
std
mov
out
adc
ror
enter
cli
mov
jmp
sbb
mov
jle
cld
fstps
cmc
jnp
mov
dec
in
outsl
gs
xchg
std
adc
inc
seta
dec
jmp
mov
mov
jle
xor
push
inc
lahf
mov
call
sub
in
cmp
in
hlt
insb
das
das
pop
mov
popf
fisubs
loop
add
xor
inc
stc
xchg
push
lahf
add
push
inc
rcll
sbb
mov
mov
push
push
jl
xor
xor
aaa
addr16
push
add
inc
and
and
out
outsl
adc
loop
mov
imul
mov
stc
les
test
mov
enter
mov
into
mov
stos
lret
stos
push
inc
fs
pushf
rol
or
xchg
ror
shrl
and
imull
imul
mov
and
mov
mov
jg
mov
mov
sarb
xchg
xchg
popa
push
mov
cmpsl
stc
mov
jmp
rorb
push
test
dec
repnz
push
dec
subb
cs
sbb
add
pushf
jl
inc
jecxz
sti
rorl
push
inc
pop
push
mov
mov
cmpsb
js
scas
sti
imul
sbb
std
xchg
cs
aaa
cmp
push
call
mov
inc
dec
xchg
test
movsb
push
sbb
inc
xchg
sbb
fdivrs
or
mov
sub
mov
push
cmc
cmp
outsb
in
fcmovbe
jbe
dec
std
cmp
notb
inc
sbb
xor
mov
pushf
push
pop
xor
mov
idiv
jmp
push
mov
mov
shll
inc
inc
sbb
sub
pushf
push
sbb
pop
xchg
dec
lahf
dec
aad
dec
and
xchg
pop
int3
and
add
push
xor
xor
or
push
and
mov
push
lret
mov
and
inc
out
jle
addr16
aas
imul
arpl
cmp
arpl
imul
dec
jmp
xor
std
adc
jbe
fstl
stos
jge
add
shlb
mov
adcb
mov
pop
subl
out
shlb
pusha
stc
nop
mov
aam
or
push
push
cmpsb
push
pop
push
je
lods
mov
cmc
clc
sub
mov
add
jecxz
mov
sub
frstor
dec
cmp
outsb
rorb
cmpsl
mov
and
sbb
jnp
cmp
data16
mov
xchg
int3
sbb
repz
cmove
repnz
cmp
fadds
call
es
out
or
cmp
sub
adc
jb
dec
out
xor
cmc
mov
pop
fsub
inc
xchg
cmp
movsb
jb
sub
xchg
pop
xchg
sub
mov
mov
xor
jb
jbe
xchg
cmp
lods
dec
cmp
int
jle
inc
loop
fsubrp
fs
inc
stos
movsl
jl
mov
adc
hlt
hlt
inc
rcll
adcb
orl
adc
xchg
lock
xor
pop
js
mov
incl
jl
pop
into
or
divb
pop
inc
mov
mov
addr16
jne
pop
mov
cld
imul
inc
pop
bound
cs
lock
sub
xchg
jns
jecxz
mov
sub
dec
stos
ja
or
iret
cmpsl
pop
rclb
mov
or
push
push
shlb
mov
hlt
xchg
imull
cld
jb
loop
adc
imul
xchg
out
and
dec
xor
notl
lret
add
or
adc
xchg
test
scas
add
add
jo
lock
push
mov
movsb
test
xchg
sub
addl
sahf
call
test
xor
mov
popa
inc
shrl
inc
push
pop
cmp
xlat
pushf
pop
aad
shl
addr16
into
push
ret
test
mov
mov
mov
cld
loop
xchg
fmull
shll
push
scas
jl
inc
lcall
dec
push
aas
jmp
xchg
jae
mov
fstl
popa
incl
push
push
stos
mov
es
mov
addr16
shl
cmp
mov
dec
inc
hlt
ja
mov
mov
fimuls
std
imul
xor
loop
mov
xor
add
xchg
sbbl
add
dec
mov
mov
mov
xchg
cmp
insb
inc
ljmp
jecxz
hlt
cli
inc
or
into
sti
adc
mov
or
shll
push
and
or
jge
xlat
dec
jb
ret
fs
xor
sbb
inc
push
ljmp
mov
out
push
shlb
stos
dec
dec
sub
hlt
cmp
std
loope
inc
xchg
cmp
popf
dec
dec
dec
sub
adc
scas
in
test
lds
inc
inc
scas
or
fcomp
mov
mov
jbe
inc
out
xor
pop
into
adc
addr16
adc
jno,pt
mov
pop
mov
cwtl
jbe
imul
pop
ret
insl
pop
xchg
cwtl
idivl
aaa
pusha
jb
pop
add
aas
movsl
ret
jmp
sbb
sbb
inc
sarl
cs
out
popa
push
xchg
idivb
pop
cmc
cmp
xor
shll
lea
dec
aam
push
in
lret
add
push
aas
hlt
ljmp
fs
mov
fisttpl
mov
xchg
inc
aad
push
pushf
sub
inc
sarb
fsubr
pop
jnp
les
add
repz
xchg
ljmp
or
cmc
mov
or
daa
test
sahf
leave
in
in
inc
sbb
xor
xlat
movups
sbb
dec
sub
outsb
pop
shl
mov
mov
fisubrs
adc
mov
cs
fstl
popl
dec
lock
xchg
adcl
in
push
mov
inc
sarl
fldt
loope
bound
data16
mov
dec
mov
cli
test
jle
sbb
sub
sbb
notl
jo
sbb
repz
dec
nop
pop
push
test
cli
int3
dec
movsb
sbb
sbbl
int
mov
xchg
or
and
out
js
icebp
or
push
sti
dec
or
mov
mov
mov
setl
lock
add
daa
aaa
out
fs
leave
cltd
cmp
mov
pop
in
cmp
stc
dec
pop
arpl
mov
sar
pop
pop
add
sub
xchg
repnz
hlt
mov
push
sbb
and
inc
dec
or
mov
xlat
sub
dec
cmp
test
fwait
xchg
mov
leave
add
push
test
jne
lods
pop
and
jmp
add
ret
hlt
stc
fcoml
mov
and
in
sbb
and
sbb
inc
out
sbb
cmp
push
fdivrl
sub
int
outsb
adc
mov
cltd
stos
ficompl
mov
inc
mov
mov
in
fsubl
fwait
aas
xchg
ret
or
icebp
push
mov
cld
pop
nop
xor
sahf
gs
mov
sahf
xchg
and
mov
push
data16
scas
mov
cmpsl
outsb
out
push
ficoml
push
pop
cmp
push
sti
test
hlt
jp
stos
bound
fcoms
sarl
cmp
cli
adc
pusha
popf
scas
cmp
out
mov
outsb
inc
sti
pushf
push
or
pop
pop
ss
mov
flds
stos
enter
xor
mov
pop
sbb
test
ror
or
pop
pushf
inc
jecxz
sub
clc
push
lcall
jl
jae
in
dec
or
mov
movsl
nop
xlat
xchg
mov
pop
cmpl
jl
sahf
xchg
sub
lahf
push
add
in
mov
call
cmp
jecxz
repz
mov
popa
stc
adc
out
insb
int
pop
mov
popa
movsb
xchg
std
pop
inc
mov
mov
xchg
rsm
in
call
mov
jmp
inc
imul
xchg
imul
loope
mov
sub
js
or
and
call
sub
leave
rorb
adc
fimuls
mov
mov
into
mov
pop
pop
stc
lock
sbb
and
or
sbb
mov
loop
jae
rolb
sbb
cmp
mov
add
jg
mov
fsubrs
xchg
sbb
cmpsl
insl
jo
adc
stos
or
std
sub
ret
push
cld
test
aam
inc
int
jmp
cmp
and
int
ja
ret
ret
shl
xor
and
xchg
mov
jge
pop
push
push
gs
xor
popf
mov
ja
dec
push
mov
call
mov
mov
mov
aaa
lcall
dec
lods
and
jo
pusha
in
cs
lods
dec
cwtl
jae
test
push
out
popf
push
cmpsb
lock
add
clc
mov
mov
call
inc
mov
adc
enter
sti
cmp
jge
jecxz
je
mov
push
call
fadd
sbbl
fwait
out
jns
dec
push
lods
and
xchg
ror
mov
sbb
rcrl
cld
aaa
cmp
out
mov
xor
push
pop
jb
pop
push
stos
aas
leave
sbb
inc
mov
ja
xor
aaa
xor
sub
dec
xor
sub
stc
add
push
fs
daa
xchg
int3
push
lcall
xor
popf
pop
mov
out
xchg
shll
add
insb
test
lret
out
int
sahf
loopne
pop
pop
inc
std
mov
pop
xor
xor
into
sbb
cmp
mov
push
andl
lods
mov
adc
cwtl
subb
pop
mov
pop
faddl
or
pop
scas
daa
rorb
data16
rorl
pop
out
ret
lods
and
pushf
mov
push
and
idivb
addr16
adc
xor
xchg
and
scas
movsb
stos
addr16
and
add
xor
fldt
mov
adc
orl
pusha
enter
push
fdivs
into
stos
cmp
mov
jb
mov
out
adc
addl
mov
stc
pop
insl
enter
cltd
mov
push
mov
mov
add
pop
sbb
stos
shlb
leave
and
dec
arpl
pop
xchg
leave
sub
jnp
and
test
cmpb
push
jo
enter
xchg
mov
fstl
popf
mov
xor
xchg
mov
cltd
scas
mov
mov
int3
mov
mov
gs
jg
mov
xchg
sub
roll
out
es
es
and
sbbb
fstl
aaa
repz
lahf
mov
int3
lahf
jne
add
pop
mov
fldl
scas
addl
mov
mov
adc
xor
mov
lahf
iret
pop
push
dec
push
cmp
mov
xchg
or
pop
inc
mov
daa
cmpsl
mov
xor
out
negb
cmp
fsubl
insb
nop
movsb
push
inc
out
mov
push
pop
sub
adc
aam
push
jmp
cld
lock
or
ljmp
pop
ret
lcall
jne
es
idiv
mov
ds
scas
and
icebp
fcoml
xor
int3
jg
mov
and
or
outsb
rorl
push
push
jns
aas
ficoms
adcl
mov
xorl
xchg
mov
push
ret
repz
xchg
adc
pop
in
pop
and
xor
fimull
lea
in
inc
aam
adc
add
mov
cmp
fwait
lret
pushf
cmp
cmc
aad
or
rcr
mov
sub
cmp
mov
cmp
push
pop
dec
testb
fwait
aam
pop
lret
jmp
sarl
push
sbb
test
aad
test
inc
repnz
and
xchg
cmp
push
jbe
or
ret
in
movsl
jae
add
push
fwait
lret
jmp
fsub
repz
or
xchg
mov
push
int3
fisttpll
lret
add
or
pop
jo
ret
popf
xor
inc
add
cld
pushw
int
xor
ret
rcll
push
lret
or
in
and
loop
mov
add
and
and
shrl
out
xor
testb
xchg
sbb
xchg
out
les
mov
dec
mov
or
in
jmp
pop
cmpsl
insb
and
push
push
fmuls
sub
int
out
mov
int
popf
or
push
bound
mov
test
jb
mov
pop
cld
dec
push
mov
cmp
into
aam
out
xchg
and
out
add
and
adc
scas
sahf
jge
push
int3
sub
lods
pop
jo
and
jns
lahf
xchg
rclb
and
pop
test
imul
cmp
adc
push
add
lret
add
adcl
mov
push
mov
mov
mov
pop
fdivs
mov
icebp
filds
loope
jno
mov
movsl
xor
mov
mov
push
jns
cmp
scas
data16
ja
mov
pop
push
cmpsb
inc
mov
pusha
imull
sub
outsl
in
cwtl
jecxz
or
mov
dec
mov
dec
inc
push
mov
mov
mov
push
mov
imul
and
dec
xchg
mov
fs
push
adc
xor
push
mov
sub
sti
dec
adc
and
call
cwtl
sub
int
sarl
stc
fadds
fistps
outsl
jns
ljmp
mov
cli
jae
rcl
icebp
inc
lahf
cmc
int3
xchg
cmpsl
sub
push
fimuls
lock
pop
pop
xchg
mov
or
bound
repnz
jne
sub
pop
inc
cmp
sbb
popf
mull
in
dec
pop
lret
push
and
imul
mov
shll
repz
dec
xchg
sub
fwait
nop
push
ja
subl
scas
vpmaddwd
dec
test
dec
pop
fisubs
cs
adc
xchg
cmpsb
lds
lods
roll
leave
pop
arpl
xchg
ret
and
test
jae
xlat
or
mov
adc
jge
xchg
pop
xchg
je
add
pusha
aam
xor
pop
fmull
cli
cmp
out
cmpb
sub
shrl
xor
cli
add
mov
dec
gs
cltd
arpl
inc
xlat
call
dec
pushf
ficoml
stc
stc
inc
outsl
push
cs
scas
hlt
aad
fxtract
lods
pusha
lock
ret
pop
insl
je
pop
mov
push
cmp
movb
ja
push
xchg
xchg
shll
mov
push
fsubrl
fcoml
fstpl
es
jns
in
lds
push
jecxz
sub
in
bound
out
in
movsl
out
cwtl
lret
mov
rolb
js
xor
call
push
test
mov
xchg
dec
cmp
sub
adc
ss
out
inc
or
mov
pusha
scas
cmpb
int
xor
xor
loop
add
adcl
pop
sbb
jg
xchg
rorb
mov
fdivl
xor
push
sub
js
lret
mov
xchg
ret
pop
js
jo
stos
inc
fs
aad
push
ret
ljmp
fildll
leave
add
lds
xchg
xor
adc
bound
push
adc
imul
test
sbb
lock
push
out
jbe
fwait
cmp
xchg
ret
lret
dec
loopne
ftst
jecxz
pusha
mov
xchg
mov
mov
inc
lahf
sub
jns
mul
sarb
lea
dec
scas
cld
mov
stos
ss
push
mov
int3
cwtl
jns
fcmovu
call
mov
notb
add
call
mov
xchg
cmc
sahf
sahf
xchg
inc
lods
adc
or
add
ljmp
pop
into
mov
lea
sbb
push
mov
fs
dec
cs
add
pushf
vprotb
faddl
es
arpl
fdivs
jne
jbe
mov
sbb
sub
aas
inc
fistpll
cmpsb
lret
fnstsw
nop
and
fwait
push
or
pop
icebp
cld
pop
sbb
clc
sbb
test
mov
popw
fwait
xor
lret
push
sub
jmp
mov
je
push
xor
xchg
clc
pop
mov
lods
push
push
add
loope
add
and
scas
int3
pop
orl
dec
jae
jp
inc
imul
sti
insb
into
mov
sbb
lret
js
jb
push
cmp
jge
and
ljmp
shrb
gs
dec
xchg
sbb
ret
lahf
mov
dec
push
lret
mov
dec
inc
or
sbbl
adc
push
sahf
cmpsb
bound
mov
fdivr
cmp
scas
shrb
fstp
lcall
movsl
push
jmp
clc
xlat
adc
add
les
adc
push
mov
xrelease
dec
sahf
xchg
mov
and
push
inc
push
jbe
loope
inc
xchg
jmp
fs
cld
or
fnsave
dec
cmp
fildl
xor
fidivs
mov
or
push
cli
test
mov
inc
push
das
and
inc
or
jmp
pop
insb
pop
es
lods
mov
pop
pop
and
fs
pop
das
std
pop
outsb
inc
sub
scas
jae
jecxz
stos
imulb
and
addr16
sbb
push
call
mov
xchg
in
daa
or
xchg
subb
lret
inc
out
push
push
jns
js
mov
sbb
inc
lret
adc
cmp
int
pop
out
mov
jp
jo
or
cmpsl
xor
cwtl
fdivs
inc
jge
jge
call
push
mov
add
invd
mov
pop
jecxz
out
xor
das
and
aad
fisttpll
ss
mov
lock
push
or
pop
mov
pop
jne
mov
scas
mov
shll
repnz
cmpsb
int
les
cli
or
push
jl
inc
mov
mov
incb
shlb
xchg
push
mov
mov
lods
enter
lods
jae
cli
jbe
cli
sahf
sbb
jge
push
jne
or
gs
jl
add
mov
ss
and
mov
xchg
sub
es
and
pop
xor
mov
cmp
repnz
jo
lret
mul
fsubrl
push
mov
add
push
xchg
pop
mov
push
ffreep
in
xlat
lds
aam
aam
test
or
repz
test
mov
ljmp
testl
stos
or
mov
mov
popa
aas
mov
jbe
cmp
rolb
xchg
clc
xor
sub
sarb
cld
pop
lods
mov
arpl
int
in
inc
out
mov
push
xchg
push
hlt
pop
ret
sub
cltd
cwtl
flds
push
pop
xchg
psrlq
insb
push
mov
dec
jle
rorl
push
mov
fwait
mov
mov
cmp
pop
mov
and
sub
mov
jo
std
stos
dec
test
adcb
mov
sub
inc
mov
sub
push
in
cwtl
sahf
xchg
jl
test
fiaddl
jge
pop
fisubrs
bound
scas
cwtl
ss
xchg
lcall
repnz
roll
and
pop
mov
js
nop
pop
imull
mov
push
inc
repnz
sbb
dec
out
sbb
push
dec
daa
mov
push
push
movsb
pop
mov
pushf
fildl
mov
test
lahf
mov
adc
decb
add
arpl
sahf
aaa
cltd
js
aaa
push
or
sbb
push
ds
lock
jge
or
int
push
addr16
dec
sbb
fiaddl
push
dec
lahf
pop
xchg
or
movsb
pop
negl
mov
ret
aas
mov
fistpll
pop
fcom
jecxz
cli
jnp
bound
pop
aaa
and
arpl
loopne
pop
test
in
inc
imul
push
or
pop
mov
adc
shrb
dec
lret
inc
xlat
mov
pop
jl
ja
cmpsl
jno
iret
pop
movsl
lret
loop
mulps
hlt
lods
xchg
shrb
fwait
xchg
jg
pop
rorb
imul
sub
test
mov
pop
into
test
insl
xor
in
cmc
lret
and
sahf
mov
inc
mov
imul
nop
fxch
cmp
add
and
inc
jae
das
movsb
jae
in
fisubrl
or
cmpsb
in
aad
or
jge
cltd
xchg
out
fmuls
movsl
das
dec
std
loopne
push
cmc
out
push
shlb
mov
mov
mov
pop
in
inc
cmpsb
cmp
mov
outsl
mov
mov
add
sbb
xor
pop
jg
and
push
push
in
sub
mov
outsl
fstl
sahf
adc
incb
jae,pt
movsb
gs
cmp
dec
pop
push
mov
rcr
mov
mov
and
and
xor
xchg
push
adc
pop
test
or
test
push
ret
jecxz
mov
sti
ret
idivb
cli
rcrb
xor
sub
popa
imul
aad
adc
mov
jg
and
cmp
fmuls
js
int3
pusha
pop
scas
lret
dec
jbe
inc
in
mov
lock
xor
std
in
loope
pop
test
fldl
cmpsb
into
jg
add
lret
pushf
pop
movb
cli
inc
mov
pushf
inc
or
mov
mov
rorb
and
leave
xchg
lret
jl
mov
push
adcl
lret
mov
mov
and
subl
incl
cmp
mov
add
test
push
mov
and
lret
pop
xadd
push
imul
cmp
mov
jns
lds
rcr
sahf
adc
cltd
rcrb
cmp
cld
adc
and
or
mov
pushf
test
push
fcomp
lahf
mov
mov
jg
shlb
dec
mov
lods
sbb
adc
in
fcoml
mov
das
lcall
xor
rorb
jle
ret
sbb
add
cltd
xchg
iret
cld
movsb
mov
add
clc
jns
test
daa
or
lods
and
push
jmp
jl
lret
inc
sub
adc
and
push
in
or
dec
add
mov
ret
push
lahf
aam
lock
pop
cmp
lcall
int3
xchg
mov
fcomp
pushf
jnp
mov
nop
xchg
and
ficoms
sbb
xor
mov
mov
add
push
or
cmpsb
push
popf
aam
insb
jno
mov
fcmovnbe
cmp
movsb
mov
jo
sub
scas
push
mov
mov
out
cmp
push
mov
push
into
je
xchg
stos
cltd
lahf
int
daa
mov
and
jne
cld
fcomp
es
and
dec
jg
filds
xchg
ja
repz
and
lods
pop
js
dec
mov
push
in
dec
dec
pop
in
cmpsl
jb
inc
imul
mov
pop
imul
int3
mov
jmp
sub
ret
and
mov
jo
mov
jb
adc
imul
mov
je
aas
dec
xchg
mov
or
mov
sbb
adc
cmp
movsl
cmp
xchg
or
sbb
and
xor
push
xor
mov
leave
mov
mov
out
mul
imul
pop
fidivrs
mov
pop
push
push
mov
pop
pop
roll
jo
dec
mov
cmp
ss
dec
imul
enter
pop
xchg
loope
fs
jne
rcr
loope
imul
daa
and
emms
fsts
mov
popa
stos
ss
xchg
push
mov
pop
inc
pushf
loope
xor
subb
pusha
out
mov
sbb
dec
xor
pop
xchg
sbb
popf
xchg
pop
pushl
fwait
sub
mov
jae
jmp
lods
inc
or
ret
dec
inc
aam
iret
pop
test
stc
mov
pop
cwtl
movntq
out
mov
insl
mov
lahf
and
xchg
inc
pop
icebp
xchg
xchg
push
out
jnp
adcl
dec
dec
in
movsb
jecxz
loopne
inc
rol
inc
add
or
imul
mov
ja
cltd
mov
gs
sub
cld
jg
xchg
mov
jmp
xor
jns
std
adc
cmpsb
cwtl
arpl
int3
popf
dec
sti
push
pop
jl
fisttpl
jl
xor
cmp
fisubrl
xorl
cmpsb
adc
rorb
ja
sub
mov
cmp
icebp
test
adc
mov
xchg
or
es
or
adc
and
sar
out
in
mov
push
rclb
sub
jg
xchg
mov
xor
mov
cli
daa
test
jne
cltd
mov
jo
jle
xchg
lahf
aam
xorl
mov
dec
mov
scas
call
dec
jne
push
pop
fwait
ss
sbb
mov
jne
pushf
fstpl
lret
clc
aam
std
insb
pop
push
pop
adc
push
push
imul
inc
pop
mov
xor
movsb
stos
clc
sbb
loope
jbe
ret
mov
fcomp
add
call
mov
call
jl
cmc
shrb
add
ljmp
mov
test
sbb
pcmpeqd
xchg
jne
mov
mov
and
aad
sub
repz
bswap
aad
gs
leave
cmpsb
xlat
into
push
mov
fcoms
js
out
cmp
cs
jbe
add
dec
enter
push
or
repnz
out
sbb
xor
add
xor
dec
add
lods
dec
fmull
stos
test
testl
sub
nop
pop
push
push
xchg
mov
mov
mov
in
movsb
push
lods
push
mov
and
cmp
cld
sub
lret
pop
mov
mov
xchg
cmp
enter
dec
cltd
imul
jl
xchg
mov
dec
out
dec
ret
outsl
cmpsl
hlt
hlt
adc
jb
cmp
ret
test
xchg
cld
test
adcb
mov
or
out
xor
fisttps
std
add
movsl
dec
test
int
stos
divps
out
jb
cwtl
mov
jecxz
mov
icebp
les
test
dec
dec
jle
jno
jmp
arpl
push
leave
ds
inc
jnp
js
and
dec
push
pop
insb
pushf
mov
js
fmull
and
popa
lahf
jle
adc
ds
jno
bound
inc
adc
and
loop
cs
add
cli
lret
or
jne
rcl
push
jne
imulb
xor
cmp
cld
test
stos
jp
cmp
adc
mov
sbb
daa
push
les
aam
jp
jmp
push
out
dec
das
sub
jnp
bound
js
pop
xchg
sbb
mov
jae
push
pop
sub
push
insb
mov
addl
andb
or
mov
aaa
dec
das
push
test
sahf
int3
adc
pop
jp
push
jle
cltd
insb
stos
xchg
lahf
mov
call
lea
jb
maskmovq
idivl
adc
cld
sarl
mov
xchg
or
mov
test
mov
lea
mull
jle
cs
adc
and
push
jnp
jge
movsb
mov
divl
adc
movsb
leave
ficompl
cmpb
clc
fistl
outsl
push
cmp
xlat
or
adc
fsubrl
mov
das
pop
sub
pop
xor
loope
add
bound
add
stos
add
push
test
adc
cwtl
pop
jae
mov
popa
in
xor
xchg
adc
mov
sbb
in
movsl
enter
inc
lea
xor
mov
push
test
fistpl
add
je
scas
adc
jo
xchg
cmpsb
icebp
enter
and
stos
fcomps
movsl
pop
sbb
or
xor
bound
cmp
fadds
popf
popf
sub
mov
cmp
cli
notl
sub
mov
inc
fdivs
sbb
mov
test
add
mov
out
cs
cld
add
fs
call
std
fidivs
test
push
mov
sub
cmp
inc
lret
ds
mov
mov
sub
push
dec
inc
add
into
in
fnstenv
pusha
mov
fwait
andl
jo
push
int3
jns
adc
inc
xor
and
mov
insb
mov
push
test
cmp
jle
cmpsl
sbb
jle
imul
int3
test
test
jb
pop
jo
push
pop
popl
xchg
mov
and
mov
pop
pop
cmp
leave
cvtdq2ps
inc
adc
xchg
pusha
inc
mov
sub
addr16
cmpsb
adc
add
or
movsl
mov
in
add
loop
test
and
inc
mov
loop
movl
cwtl
mov
dec
aad
and
inc
das
test
add
add
mov
push
cmp
xchg
xor
xchg
movsl
rorb
jg
sbb
or
adc
ljmp
xchg
test
ret
mov
cmp
xor
mov
pop
cltd
ljmp
stos
push
xchg
xchg
ja
lds
mov
push
out
lahf
je
test
push
sub
jae
gs
pop
cmpsb
xchg
jp
adc
or
xlat
out
mov
and
mov
rorl
pop
movsb
sbb
xor
inc
icebp
je
or
pushf
aas
mov
push
aam
or
sbb
je
dec
lret
out
cmp
aas
pop
scas
scas
gs
add
xchg
sbb
push
cmpb
lahf
pop
pop
ja
sbb
add
clc
fnsave
push
mov
jg
fdivrs
jp
mov
aad
movsl
stos
adc
fwait
in
and
jae
fsubrl
popf
mov
cmp
cmc
jge
jl
fcmove
mov
push
into
lcall
mov
ret
movsl
pop
cmp
fstpl
enter
inc
js
add
jl
push
or
add
roll
mov
bound
pop
and
data16
outsb
negl
orb
enter
xchg
jb
int
push
lods
lods
stos
dec
test
cmc
inc
loopne
sahf
jo
ds
int3
mov
divb
mov
dec
push
inc
mov
mov
push
push
pop
js
mov
inc
lock
or
mov
orl
popa
sbb
fists
lcall
lea
and
scas
inc
dec
xchg
ds
or
jo
movl
mov
jae
dec
loop
in
and
dec
sahf
mov
adc
adcl
push
cmp
sahf
and
enter
std
arpl
movsb
ficompl
stc
in
mov
mov
xchg
mov
cmp
pop
push
fcoml
clc
sub
inc
jno
movb
fprem1
add
loopne
xchg
and
shrl
mov
scas
int3
or
or
cmp
imul
sbb
mov
out
add
xlat
cwtl
mov
ss
scas
icebp
loopne
sub
or
push
mov
dec
xchg
movsb
test
jecxz
das
dec
jnp
icebp
mov
imul
mov
push
mov
test
pop
imul
imulb
sbb
cltd
cmpsb
xchg
push
or
rorl
ja
das
jp
in
aaa
jo
mov
lret
adc
dec
aad
add
dec
push
cmpsl
fstpl
lods
sub
mov
std
test
cltd
push
mov
iret
xor
push
push
fwait
cmp
frstor
std
decb
push
xchg
stos
fdivrs
imul
mov
and
test
jno
cli
add
icebp
aad
clc
xor
jmp
dec
lcall
mov
daa
aad
xchg
pusha
int3
gs
out
jno
in
dec
fsubs
scas
les
setge
das
inc
pop
mov
jmp
inc
dec
cld
insl
clc
inc
push
xchg
daa
push
jl
inc
pop
add
loopne
xchg
sbb
out
inc
jne
sbb
xchg
dec
movb
lcall
pop
call
or
into
popf
sbb
jmp
lock
ret
pop
imul
movsl
sbb
push
notb
imul
arpl
dec
or
xor
cmp
mov
aad
sahf
test
add
sahf
xlat
push
push
inc
loopne
mov
arpl
sbb
shrb
out
cld
sub
cld
mov
call
sbb
popf
rcl
int
mov
hlt
stc
pop
xchg
jo
stos
stos
pop
xor
sub
jge
add
sbb
jnp
push
jo
mov
nop
mov
test
das
and
outsl
rcrb
xor
mov
xor
pop
clc
fstpl
jl
push
fstl
or
lcall
xchg
popf
fnstenv
sub
mov
mov
mov
and
xchg
xchg
or
int
pop
sub
movsl
sahf
cmpsb
pop
inc
pushf
mov
cmp
xchg
div
and
add
jmp
mov
rorb
aad
das
or
ds
outsb
repz
lret
aad
nop
ljmp
or
push
mov
sahf
pop
mov
stos
pop
dec
data16
les
sub
dec
adcb
jl
nop
sbb
lea
jp
or
mov
fnstsw
or
mov
fcmovnu
adc
jbe
inc
sbb
shll
or
adc
repnz
dec
mov
sbb
cwtl
aas
xorb
push
push
xchg
xchg
je
fstl
hlt
int3
bound
adc
aad
leave
les
fdivrs
dec
mov
cmpsb
sub
xor
lock
fists
mov
sbb
fwait
adc
adc
andb
inc
cmp
mov
ljmp
pop
cmp
mov
mov
dec
sahf
adc
mov
dec
or
jne
shrb
cmp
fcoms
dec
pop
rcrl
push
scas
cmp
sub
mov
xchg
clc
cmpsb
int
jo
sbb
mov
mov
cmp
imul
xor
mov
xor
xor
bound
sub
xchg
repz
sbb
mov
and
inc
scas
lds
out
pop
popf
pop
pushf
and
call
xlat
mov
cmp
maskmovq
pop
or
jae
xorl
sub
cmp
adc
inc
cli
shl
data16
insl
jg
and
das
adc
pushf
xor
cltd
sbb
fistl
imul
cltd
sbb
lcall
gs
fiadds
imulb
dec
cli
popa
out
pop
sbb
lret
mov
cmpsb
call
push
mov
mov
xor
inc
jno
imul
and
and
js
sub
cmpsl
iret
dec
repz
int3
xchg
in
mov
decb
push
xchg
mov
sbb
sti
jne
push
pop
addl
cmpsb
cmpsl
daa
bound
inc
out
mov
push
fmul
icebp
mov
push
ds
fstp
insl
test
xchg
push
sbb
cmp
enter
cwtl
jae
adc
das
mov
lds
iret
popf
rol
push
loopne
sbb
jge
sbb
dec
in
push
das
enter
jecxz
cwtl
stc
xchg
adc
sub
jne
into
lock
and
sub
cmpxchg
shrb
les
fmul
inc
out
and
sbb
gs
cwtl
leave
iret
add
pop
js
cmc
lds
push
pop
movsl
and
fwait
decl
loope
gs
push
pop
xor
mov
adc
push
aam
push
pop
ja
cs
jno
fnstsw
jb
aas
adc
call
les
shll
jne,pn
fildl
inc
das
fcoms
imul
lods
je
lods
push
rcl
jo
cmpb
mov
out
pop
pushf
jb
dec
sub
in
and
ret
rol
arpl
hlt
mov
mov
jae
push
ljmp
shrl
push
ffreep
xor
jle
lret
sub
add
out
inc
fisttpl
leave
dec
add
scas
pop
mov
inc
dec
xor
std
push
mov
cmpsl
mov
ja
ret
push
aaa
adc
cmp
out
dec
les
daa
or
mov
pop
dec
inc
pop
imul
xchg
mov
cmp
les
jo
mov
jbe
or
push
push
dec
mov
mov
enter
dec
xlat
jmp
dec
insb
xchg
cmp
iret
adcl
aam
movb
mov
or
xor
subl
xlat
insl
adc
out
sub
stc
mov
dec
push
inc
jae
rdtsc
mov
ret
push
cltd
fnstenv
in
pusha
mov
mov
adc
push
push
push
mov
sarl
stos
out
add
out
int3
cld
ja
pop
cmpl
mov
inc
rolb
icebp
sbb
mov
test
add
ficomps
mov
and
loop
out
outsl
dec
sub
jg
and
pop
leave
cmp
jle
pop
scas
rclb
in
xchg
adcb
outsl
ret
sbb
aaa
and
push
shlb
lret
mov
push
frstor
aad
outsb
testb
and
dec
pop
enter
inc
dec
push
pop
aas
lret
gs
lahf
addr16
int3
and
out
sbb
gs
fidivs
addb
pushf
loope
arpl
adc
jle
icebp
jnp
add
cltd
in
rcrb
jle
popa
rcll
out
pop
add
push
mov
jge
push
out
inc
mov
scas
inc
pop
xor
sub
dec
mov
add
hlt
sub
jbe
cmpsl
add
test
out
push
aad
out
into
into
ret
mov
pushf
out
pop
fld1
or
xor
sub
sarb
pop
pop
xchg
int3
add
dec
jo,pn
lret
pop
arpl
xor
rolb
sbb
pop
and
imul
loop
shlb
push
cmp
sbb
ret
push
mov
imul
sub
imul
dec
out
int3
or
push
xchg
xor
out
hlt
cmc
cli
in
adcb
sbb
jg
xchg
daa
roll
pop
pop
jg
fcoms
sahf
push
jae
mov
out
adc
jne
out
dec
dec
jge
das
popa
sbb
cmpb
jne
push
popa
add
mov
leave
push
push
js
mov
lods
mov
push
jl
mov
jg
leave
and
cmp
mov
rorb
mov
jbe
idiv
pop
movsl
pop
inc
mov
lods
add
inc
mov
mov
cmp
and
adc
test
dec
mov
inc
xchg
mov
mov
add
js
lahf
xchg
push
enter
sub
stc
nop
jecxz
pop
mov
jae
mov
cltd
push
lret
push
adc
xchg
inc
mov
pop
roll
xor
jg
div
icebp
ljmp
loope
shlb
lahf
mov
push
or
pop
js
leave
adc
mov
std
aad
add
jg
adc
or
cmpsl
out
fnstenv
iret
mov
movsl
sahf
xchg
js
push
leave
mov
adc
push
push
lock
sahf
ds
pushl
pushf
stc
mov
jmp
mov
dec
push
dec
dec
aas
loope
fstpt
aam
dec
mov
push
shll
xorl
test
cwtl
add
lahf
dec
nop
sahf
setae
mov
mov
arpl
repnz
push
rclb
imul
icebp
scas
lret
jne
movsl
movsb
popa
add
and
in
sbb
int3
jae
sbb
test
mov
jns
std
movsl
cmpsl
add
dec
and
and
adc
push
stos
dec
inc
push
mov
iret
sub
push
or
xchg
pop
cmp
fistps
pmulhw
jno
imull
push
ficomps
daa
pop
in
push
addr16
xor
xor
ret
mov
jp
sub
in
insb
fmuls
imul
sub
mov
cwtl
mov
decl
out
leave
repnz
adc
mov
psubsb
dec
pop
cld
sbb
loope
mov
mov
outsb
push
xlat
cltd
jle
pop
sub
pop
or
mov
push
mov
movsb
sbb
mov
xor
outsb
mov
cmp
pop
in
pop
sub
test
push
inc
push
out
bound
insb
lods
aam
push
fsubs
adcl
ja
outsb
fwait
stos
cld
cltd
fsubrl
add
jbe
lret
push
loop
pop
or
pop
call
xchg
add
pusha
xchg
mov
push
mov
or
es
add
clc
or
leave
hlt
hlt
dec
xor
movsl
xor
jmp
adc
call
fwait
lods
jge
push
int3
lahf
aas
add
jnp
dec
loop
sub
and
cmp
mov
adc
adcl
stos
push
inc
es
std
enter
and
add
add
pop
pushf
pop
jae
gs
int
rcrb
push
jbe
jo
jbe
add
test
sbb
les
jo
adc
sbb
adc
cmp
and
and
arpl
out
xor
and
xor
test
and
and
sbb
adc
sbb
pop
jbe
mov
or
add
jecxz
pop
xor
and
fldcw
int
mov
push
cmc
mov
push
sti
repz
clc
addr16
pop
gs
cmp
out
mov
int
mov
inc
dec
inc
mov
xor
push
adc
xor
dec
or
sub
addr16
jmp
aam
enter
cs
rcrl
inc
cmp
ret
lods
xor
mov
push
lods
mov
shl
or
movsl
es
pop
lea
arpl
js
inc
lods
lcall
xor
sub
ljmp
jo
in
aaa
jno
cmp
cmpsb
xchg
pop
leave
jae
lods
cmc
aaa
leave
mov
and
mov
fisttpll
push
mov
jg
nop
int3
lret
or
inc
int
cld
push
test
pop
dec
push
add
or
iretw
cmp
lods
mov
mov
shrb
xor
push
adcb
add
mov
inc
and
pop
mov
mov
iret
cwtl
sub
adc
shl
stos
and
andl
notl
sbbl
aas
nop
mov
popa
mov
int3
mov
mov
shll
loopne
cmp
jg
lea
popf
and
add
inc
dec
fucomi
sub
pop
or
lahf
jns
fildl
add
add
fsubrl
fstpt
sub
cmc
cmc
mov
mov
and
lds
rcrb
dec
xchg
jb
cmpsb
cmp
iret
fbstp
lahf
popa
mov
decb
xlat
sti
fistpl
into
scas
ds
repnz
ficoms
sbb
or
fcompl
push
cmp
sub
orb
mov
scas
or
les
sbb
test
adc
in
and
and
jmp
pop
xchg
and
imul
nop
cmp
jl
testl
push
mov
call
mov
and
paddusb
pop
xchg
mov
xchg
mov
rclb
mov
adcb
in
cmp
pop
push
sub
push
mov
pusha
xchg
cmpsb
and
inc
bound
scas
cmp
je
scas
dec
jge
sarl
xchg
xchg
push
arpl
xchg
int3
fistl
ficompl
and
jmp
cmp
jne
mov
adc
xchg
ss
call
aas
aas
xor
stos
in
xchg
fsubrs
rclb
out
cltd
pop
lea
popa
mov
rcr
fs
lahf
mov
fadd
repnz
fadds
mov
ret
mov
out
push
cs
js
fwait
pop
add
mov
cld
rol
push
es
xchg
loopne
jecxz
jo
dec
xchg
xchg
sbb
and
iret
rorl
sbb
iret
clc
xchg
or
jecxz
popa
out
xchg
ljmp
jo
cmp
push
xchg
fidivs
push
rcrb
add
push
xor
xchg
dec
ds
fildll
out
xor
ljmp
stos
cmp
daa
inc
je
add
mov
in
pop
hlt
cltd
push
mov
in
loope
stos
decl
xlat
dec
push
out
xor
xchg
adc
shl
xchg
je
xor
xor
adc
movsl
sub
cmp
jge
nop
sub
lahf
mov
inc
and
test
adc
or
in
dec
enter
inc
mov
outsl
and
sub
mov
daa
jl
mov
lret
ljmp
in
mov
dec
push
inc
add
imul
and
inc
jns
sbb
mov
outsb
lds
int
cmp
mov
aam
jnp
nop
mov
jg
popf
repz
test
popf
outsb
int3
push
ret
call
xor
jg
jmp
lods
dec
sbb
xor
adc
add
cmp
pop
fimuls
idivl
repnz
add
rorl
sbb
and
or
mov
push
inc
sbb
push
pop
pop
in
mov
sub
xchg
fists
mov
pop
insb
mov
jl
mov
fbstp
call
std
adc
cli
popa
dec
jle
push
out
add
and
xchg
pushf
sbb
mov
sub
sbb
sti
adc
sub
xchg
das
add
push
inc
and
mov
adc
dec
adc
movnti
pop
jnp
loopne
pop
mov
pop
adc
sub
or
adc
insl
dec
test
test
maxps
bound
in
mov
jb
mov
or
scas
xor
stc
divl
popf
rclb
adc
test
cmp
mov
in
shll
push
add
les
mov
test
loopne
sub
ljmp
imul
mov
daa
jmp
ljmp
out
xchg
sbb
std
or
lods
xchg
jbe
cmp
xor
nop
out
fisttps
test
in
push
ret
je
shrl
ret
addr16
mov
aaa
jle
movsb
mov
gs
push
mov
dec
fsubp
xor
sbb
mov
jle
cld
xor
mov
dec
arpl
cmp
es
push
cltd
jo
sub
push
push
jmp
leave
psrld
pop
insb
cltd
and
mov
adc
or
adc
push
dec
xchg
sub
lahf
sbb
les
adc
shrb
xor
cmpl
add
inc
xchg
jg
xor
outsl
mov
xor
lret
imul
mov
cmpsl
movsb
lcall
jnp
cmpsb
in
pop
mov
mov
xchg
xor
sub
out
arpl
lods
pop
lods
add
dec
ja
mov
jecxz
adc
cli
insb
je
lret
mov
jae
and
mov
pop
jecxz
aad
dec
xchg
or
xchg
pop
imulb
jb
pop
dec
in
adc
pushf
fsubrl
mov
jmp
mov
jnp
clc
daa
push
or
pop
enter
add
sbb
dec
inc
adc
mov
cwtl
sub
cmp
add
inc
pop
cmp
inc
jl
addr16
pop
or
xchg
rorl
pop
jecxz
pushf
xlat
add
shl
add
loope
inc
jb
dec
sbb
je
out
ljmp
add
test
xchg
addb
cmc
ja
sbb
mov
std
cmp
add
xchg
xchg
sub
insl
sub
aad
xor
addl
sub
dec
ret
lret
nop
clc
cmp
leave
xchg
mov
ds
push
cmp
push
in
test
sarb
inc
xor
imul
pop
pop
lcall
jmp
or
pop
cmp
cmp
pop
in
or
dec
push
mov
inc
adc
pop
aaa
fstl
push
pop
daa
insb
dec
sub
in
xchg
stc
or
lds
dec
aad
stos
mov
js
jb
pop
mov
push
sbb
inc
adc
push
call
cmp
jl
pushl
outsl
mov
cmp
scas
pusha
scas
andb
sbb
jp
outsb
jne
addr16
mov
pop
out
cmp
dec
mov
ss
jbe
gs
sub
xor
xchg
inc
out
scas
pop
or
cmp
and
iret
aad
cmp
pop
sbb
call
sbb
sbb
add
jle
fldt
fmull
lahf
inc
fisttps
xor
int
and
adc
mov
outsb
inc
int3
lods
leave
dec
mov
xchg
aam
xor
jne
fcmovbe
pop
or
pop
or
clc
add
pop
les
mov
cmp
cld
jl
in
xchg
mov
jbe
stos
mov
adc
leave
adc
mov
push
ret
xor
sub
pusha
lock
lods
stos
test
adc
add
ss
mov
cmpsb
xor
shrl
push
sti
xchg
arpl
and
pop
mov
and
ss
enter
iret
jmp
stc
jb
cmp
arpl
mov
mov
mov
pusha
repz
into
dec
mov
lret
or
cmp
mov
jl
movsb
jbe
mov
sbb
ret
xchg
pextrw
mov
sub
lds
not
xchg
bound
cmp
jb
push
daa
push
dec
repnz
dec
aam
mov
mov
push
aam
movsl
xchg
mov
pop
decb
mov
dec
jo
inc
data16
fisubs
mov
cmp
pop
ds
jl
sahf
xchg
int3
fadds
jle
aaa
mov
cmp
push
xchg
loop
or
cmp
lods
mov
push
call
cld
mov
sub
sarl
roll
in
fisttpl
cltd
mov
subl
in
xchg
fisubrl
aam
in
and
repz
lret
aas
pushl
mov
daa
shll
jnp
out
in
mov
push
test
stos
add
leave
xchg
mov
mov
adcb
lea
pand
imul
dec
lods
loop
stos
mov
lods
test
pop
push
pushl
or
add
rorb
repnz
add
imul
fnstenv
ret
add
pop
arpl
ret
mov
in
adc
das
mov
aam
cmp
lds
add
ljmp
mov
inc
mov
add
and
jo
jo
or
negb
pop
shrl
mov
fnstsw
xor
movsb
xchg
scas
ret
cmp
or
pop
cmc
sbb
repnz
adc
jnp
cmp
outsl
ja
and
xchg
jle
push
or
aad
push
pop
out
outsb
orb
mov
rcr
ret
iret
sbbb
push
rol
jae
adc
decl
test
andl
push
insb
jmp
inc
int3
js
hlt
insl
cmpsl
jl
jbe
adc
xchg
xor
repz
rol
int
stc
roll
je
gs
shrb
inc
jle
lods
arpl
sbb
mov
lcall
js
xchg
xchg
movsl
jno
cld
cmp
pop
ret
mov
xor
pop
mov
jo
in
add
sbb
jp
jecxz
and
mov
pop
test
jne
je
mov
adc
fcoms
test
adc
shl
imul
and
fbstp
dec
mov
jo
sbb
imull
fisubs
out
jmp
inc
dec
test
push
dec
dec
lahf
ds
movb
dec
test
add
jne
add
icebp
jne
mov
mov
fiaddl
popa
cmp
les
xchg
xchg
lret
jae
out
out
lea
mov
jmp
adc
idivl
outsb
jbe
jg
ljmp
enter
xchg
fnstenv
enter
xchg
cld
mov
dec
pop
out
mov
add
lcall
test
les
add
les
or
addr16
aam
sub
scas
fimuls
and
sarl
inc
or
pop
lds
cmp
pop
push
imul
jnp
push
pushf
mov
shll
ret
lret
enter
mov
xchg
movsb
sub
arpl
sbb
out
or
jne
ljmp
or
std
das
add
arpl
jns
pop
add
imul
push
sbb
adc
test
fisubl
cmp
fucomp
push
cmp
inc
jb
ja
xor
cmp
cltd
addl
das
pop
mov
cmp
dec
pop
popf
ds
jle
mov
lds
stos
lock
and
inc
lds
jne
jns
arpl
mov
fwait
mov
sub
and
andb
xor
adc
xor
jbe
jp
adc
lret
mov
push
scas
sbb
rorl
into
ret
subl
test
sti
pop
xor
and
insb
test
inc
or
and
cmp
ss
hlt
jmp
stos
xchg
and
in
jmp
sub
jp
jne
push
nop
mov
sbb
nop
ss
xchg
dec
xor
cmp
lcall
adc
and
mov
xchg
aam
cmpl
push
cmpsl
mov
adc
daa
xchg
aaa
in
clc
addr16
and
les
sti
push
sub
mov
sbb
lret
sbb
ret
jle
mov
mov
xor
xor
icebp
pop
repnz
hlt
movsb
outsb
mov
and
fisttpl
cmp
mov
test
mov
shlb
ljmp
test
jbe
call
loop
mov
in
daa
int
enter
insb
lret
int3
into
jp
fdivrl
mov
xchg
iret
mov
es
movsb
cld
xchg
add
mov
hlt
mov
fdivrs
push
or
cwtl
and
xlat
fucomip
aad
add
lret
xchg
stos
std
or
xchg
pushf
sbb
je
in
ret
inc
mov
mov
insl
fwait
out
mov
shl
enter
test
test
sbb
or
stc
or
mov
sbb
mov
scas
inc
and
jns
fwait
push
aam
adc
push
dec
jo
bound
mov
cmp
out
pop
xchg
sbb
imul
mov
shll
ds
or
stc
fcoml
aam
out
loop
repz
outsb
sub
mov
pusha
xor
cmp
mov
dec
shll
jbe
pop
jno
loope
sub
mov
sub
ljmp
test
adc
lds
mov
adc
std
jbe
jg
pop
fstpt
sub
inc
xor
fs
jb
sub
imul
pop
and
jo
and
push
mov
pop
xlat
clc
pop
and
xchg
pusha
les
jecxz
aad
adc
cmp
cmp
sbb
mov
pusha
pop
cmp
mov
rorl
in
xor
cmpsb
in
xchg
loopne
ficomps
mov
inc
mov
pop
jg
fcoms
rcl
nop
mov
scas
push
cmpsl
mov
dec
or
shl
aad
test
and
testb
inc
cwtl
add
xchg
jge
jae
mov
in
dec
add
push
push
test
pushf
je
xchg
fidivrl
pop
shlb
in
popf
mov
fwait
jne
arpl
xor
mov
push
lret
jb
xor
push
shll
cli
or
fldt
std
add
ret
dec
rcrb
jb
js
out
or
in
push
mov
inc
and
hlt
in
sbb
jg
mov
and
push
ss
dec
cmp
lcall
sub
mov
push
sub
sbb
sti
lahf
jg
test
gs
lret
cmpsb
cltd
pop
lds
int3
les
insb
jnp
pop
cmp
sub
daa
fs
insl
fidivrs
push
les
call
mov
adc
jno
movsl
ljmp
aaa
sub
push
out
in
jmp
dec
ret
adc
ret
int
stos
adc
mov
mov
or
fwait
add
repnz
dec
or
mov
mov
mov
outsb
xor
xor
and
loope
stos
stos
mov
cmp
mov
adc
inc
pop
push
push
push
in
ret
xchg
lcall
imul
sbb
xchg
pop
mov
outsl
push
imul
mov
jns
ja
out
fldt
into
loop,pn
and
call
addr16
dec
movsb
jle
and
jnp
jmp
cli
stc
and
jne
inc
jge
in
clc
push
out
cmp
rcr
dec
jmp
mov
aad
pop
jno
stos
push
xchg
pop
pop
and
cmp
repnz
push
xor
and
sub
mov
mov
in
xchg
inc
sbb
mov
loopne
jae
sub
fadds
lahf
dec
cltd
test
fdivl
roll
adc
pop
stos
add
xchg
fisttpll
ret
jg
jnp
mov
xor
test
pop
or
aaa
cltd
pop
vmaxps
fsubrs
stos
hlt
push
std
nop
pop
inc
divl
push
jbe
lahf
push
jae
nop
jne
mov
adc
jecxz
push
cmp
jmp
xlat
sub
or
leave
dec
iret
test
adc
les
out
push
mov
cmp
test
or
std
cmp
lea
xor
lods
pusha
mov
fld
add
sbb
mov
pop
pop
mov
mov
jmp
push
push
ficompl
fsubr
cmc
mov
mov
dec
loopne
popa
push
in
js
lret
jmp
ret
pop
jae
outsl
cmp
lods
adc
scas
pop
lahf
test
or
sbb
jns
and
lods
dec
pop
enter
popa
lret
mov
jg
sbb
xchg
inc
mov
dec
shll
sbb
sub
fidivrl
pop
cmp
outsb
movaps
ljmp
sbb
push
jo
loop
fwait
pop
ja
inc
iret
or
mov
lock
xchg
iret
inc
bound
loope
gs
or
repz
lea
aas
ret
in
mov
aam
push
pop
add
lret
rorl
aaa
gs
xchg
sbb
lods
inc
cmpl
fwait
scas
testb
lret
mov
jl
jnp
loope
cs
mov
outsl
sub
jnp
cs
clc
insl
nop
or
mov
mov
jne
fdivrp
pushf
sub
jbe
pop
nop
add
cltd
popf
xlat
push
jno
sub
scas
push
xchg
in
xchg
adc
xchg
pushl
repnz
outsl
xorb
punpckhdq
dec
lret
cmpl
cmp
cmpsl
dec
jns
and
repnz
sub
mov
jle
pop
idiv
ficomps
mov
adc
inc
mov
insl
jae
pop
icebp
test
popa
mov
jae
mov
xor
cmpsb
jb
mov
lret
loopne
lds
aaa
xor
in
and
loopne
int
lds
pop
push
dec
sbb
pop
out
xor
ljmp
inc
popa
popa
rorb
pushf
loope
aam
incl
mov
push
xchg
dec
adc
cli
xchg
sub
adc
fadds
push
push
mov
xchg
fadd
stos
imul
dec
or
gs
push
sbbl
sub
jg
aas
clc
mov
pusha
clc
enter
pop
call
clc
hlt
adc
enter
jl
jl
iret
bound
or
add
mov
ret
adc
push
dec
test
mov
push
dec
sar
sti
icebp
int
cmp
add
sbbb
push
push
xor
or
inc
xchg
cld
test
icebp
pop
rorb
adc
sarb
call
popf
pop
cmp
sub
push
cmpb
mov
mov
adc
xor
es
loopne
aam
sub
bound
daa
jecxz
inc
popa
push
jmp
out
in
xchg
inc
xchg
cwtl
adc
sahf
dec
and
push
push
xchg
sti
ficompl
adc
dec
xchg
sti
xlat
rorb
js
and
mov
cld
loope
pop
pop
jne
xorb
into
cld
andl
leave
adc
xchg
ljmp
rorl
ror
mov
mov
ret
inc
mov
or
mov
fidivl
cmpsb
jno
div
cmc
and
jnp
mov
mov
jge
nop
xor
or
aad
sbb
xchg
repnz
movsb
adc
test
nop
insl
clc
jb
pushf
ficoml
mov
dec
sub
add
in
insl
andb
call
mov
cld
cs
jne
xor
jne
pop
das
sbb
jo
stos
inc
std
or
gs
fisubs
lahf
mov
push
push
adc
cmpsb
mov
mov
sbbb
and
test
mov
push
fcompl
data16
mov
daa
jno
xorb
xor
fwait
sar
sahf
hlt
sbb
pop
pop
into
leave
jmp
addl
test
popf
dec
int3
push
cmp
and
mov
fstp
fwait
aad
ret
ljmp
and
popf
je
cmp
sbb
sarl
add
mov
sbb
mov
enter
mov
xor
xor
test
stc
int
adc
mov
lret
xlat
cmpsl
jno
or
shl
push
daa
loop
enter
xor
ret
test
loop
out
fldl
pop
fadds
sub
rclb
fprem1
enter
mov
imul
push
push
addl
inc
popf
pop
scas
mov
das
fstps
test
clc
lahf
xor
lock
stos
iret
cmp
mov
incl
ja
mov
mov
rcll
shlb
in
lret
sbb
es
bound
loopne
mov
repz
ret
shlb
xor
xchg
daa
aas
test
lods
xor
mov
jmp
test
idivl
and
add
mov
shl
sbb
mov
cmp
mov
adc
xlat
mov
stos
lret
dec
inc
pop
xchg
dec
dec
xor
or
lds
daa
fisttpll
cs
jp
popa
cmp
xchg
outsb
dec
mov
mov
cli
jns
and
push
shr
push
pop
fnsave
mov
dec
dec
cltd
fisttps
lods
xchg
sbb
aad
mov
cwtl
fmul
and
dec
cmp
ret
sbb
daa
dec
movsb
or
adc
sub
ja
stc
jb
pop
rol
mov
loope
sub
test
jb
outsb
ret
lea
sub
pop
sbb
pop
ret
push
stc
or
xchg
in
mov
les
das
add
dec
pop
adc
imul
jmp
int
leave
movsl
lret
shll
cmp
mov
xchg
xor
fists
stos
shlb
dec
xchg
aam
cmp
fsubrs
mov
add
dec
popf
dec
in
insb
std
notb
rcrb
mov
jno
xchg
das
stos
call
popa
jae
jnp
add
jecxz
fdivrp
rcl
imul
dec
xlat
decb
or
mov
cmp
and
mov
mov
push
cmp
and
nop
jns
je
xchg
jbe
mov
add
stos
gs
push
xorl
or
sub
push
arpl
adcl
pusha
stc
xor
cmpsl
pop
mov
das
pushf
rolb
dec
iret
cwtl
xchg
clc
jb
or
inc
jge
pusha
cwtl
pop
fwait
movsb
push
lcall
aas
xorb
or
cltd
cmp
je
and
and
adc
std
enter
jge
jo
and
imul
jnp
cmp
mov
mov
inc
in
jno
aaa
jecxz
mov
and
scas
dec
in
cmpsb
or
cmp
sbb
mov
mov
cmp
out
ret
xchg
int
cmp
xor
or
int3
pop
mov
das
iret
mov
inc
sbb
fadds
scas
add
xor
jecxz
je
pusha
push
mov
not
test
aas
mov
jmp
mov
addr16
jecxz
jmp
mov
jbe
cltd
sbb
iret
mov
sahf
adc
in
mov
inc
jns
pop
rcr
sub
mov
lods
sbb
cmp
jp
mov
and
or
mov
ja
popa
test
test
or
cmc
pushf
mov
adc
mov
std
pushl
add
aas
and
in
mov
dec
xchg
dec
int3
sub
inc
or
add
inc
push
mov
in
mov
or
xchg
mov
and
mov
lahf
or
pop
das
mov
daa
jb
popa
inc
data16
add
in
add
test
stos
ficompl
add
xor
cmp
daa
in
push
mov
mov
push
push
xchg
mov
enter
test
popa
mov
cmp
lods
and
filds
mov
test
sbbb
outsl
dec
sar
aam
mov
pop
pop
jne
mov
xchg
outsb
int3
arpl
mov
js
push
dec
cltd
leave
stos
call
lahf
sub
stos
adc
pushf
mov
hlt
cmpsl
gs
and
stos
mov
xor
adc
popa
pop
jbe
or
inc
pop
fs
aaa
int
mov
pop
adcb
sbb
fdivrl
xchg
ja
bound
leave
sub
or
xor
mov
in
call
cwtl
add
iret
out
std
mov
lods
dec
insl
mov
push
inc
ds
mov
and
cmc
push
mov
aam
jg
cmp
mov
mov
scas
sub
and
or
stc
cmc
jmp
pushf
xor
jno
rorb
ret
mov
pusha
scas
insl
jg
cltd
push
adc
xchg
cmp
mov
jne
push
cs
aam
stos
push
mov
sbb
fabs
test
out
mov
push
sbb
xchg
push
out
dec
pop
rol
mov
sbb
xor
mov
xchg
xchg
in
push
sbb
daa
in
fmul
jns
cli
or
jne
cpuid
or
js
addr16
out
push
mov
lods
sarl
out
imul
jne
lds
inc
or
sbb
mov
lods
xchg
jo
repz
jle
jle
cltd
inc
ja
mov
cmp
test
pop
sub
idivb
fadd
cld
loopne
mov
pop
loope
or
jae
dec
fs
aaa
aad
stos
fidivrl
sub
ja
xor
push
adc
test
repz
aam
mov
fldenv
mov
sub
and
add
sub
push
roll
push
jnp
inc
xor
or
lods
lock
js
stos
cmc
das
enter
mov
mov
mov
dec
sti
hlt
fmul
dec
mov
sbb
ja
out
xlat
aam
clc
pop
mov
jb
inc
mov
in
jle
pop
and
and
mov
test
jmp
mov
out
in
dec
cmpsl
jbe
jnp
iret
jp
cmp
inc
push
shrb
pop
mov
adc
sbb
dec
and
out
pop
push
daa
mov
xchg
adc
mov
sub
push
scas
jne
mov
sub
int
cwtl
mov
inc
cs
push
lea
cmpsb
pop
outsb
add
or
cmp
or
fiaddl
jge
push
ret
xchg
pop
clc
ret
in
cmp
fwait
add
inc
mov
jg
mov
and
jae
adc
sub
add
dec
or
loop
imulb
mov
xor
popf
push
sbb
cmp
mov
or
popf
imul
jne
les
shll
mov
or
xor
je
pop
lods
arpl
pop
inc
mov
or
xchg
inc
mov
pusha
dec
ss
outsb
pop
stos
jecxz
mov
xchg
loopne
sub
xchg
mov
sub
lds
push
or
sbb
xor
mov
pop
cmpsb
cmpsl
insl
ret
repz
stos
int3
out
dec
imulb
adc
cs
aad
js
in
fistpl
jnp
inc
lret
pop
or
push
sti
mov
or
cs
aaa
outsb
fiaddl
push
push
pop
lea
test
push
inc
adc
mov
outsb
sbb
mov
add
push
add
or
lea
xor
push
push
cmpsl
push
jno
inc
pop
inc
stos
inc
es
add
and
or
push
jns
test
aaa
pop
pop
popf
dec
bound
jge
xchg
add
dec
insb
lock
jl
pop
push
add
inc
sbb
jb
dec
xor
iret
and
or
and
or
repz
lea
into
stos
roll
xchg
or
cmp
sahf
int3
pop
test
stos
lcall
leave
pushf
sbb
leave
mov
pop
jge
jb
cmp
add
sbb
sbb
mov
mov
test
dec
pop
sarl
inc
mov
jecxz
in
sbb
push
jg
aad
lods
cltd
pop
mov
or
push
outsl
inc
inc
cmp
add
out
out
dec
lcall
pop
mov
nop
cmp
jae
sub
loop
daa
dec
sub
pushf
frstor
sar
and
mov
add
mov
add
icebp
push
add
movsb
test
loopne
xcrypt-ecb
cmpsl
lret
sbb
xor
mov
cmc
pop
cmp
pop
adc
inc
inc
dec
push
lods
mov
cli
add
test
mov
fcoms
ret
and
mov
andb
lods
or
popf
cmp
out
addr16
or
xchg
es
mov
js
das
sbb
xchg
cwtl
popf
sahf
lcall
mov
mov
pushf
fisttpl
sbbl
or
fs
xchg
sbb
mov
sahf
inc
jnp
clc
xlat
jmp
outsl
jmp
xor
push
jp
lret
mul
cwtl
push
mov
call
je
adc
cs
push
and
dec
and
jo
sub
mov
jno
pop
sub
test
ret
js
shll
add
mov
in
ljmp
cwtl
dec
inc
popa
jle
inc
pop
dec
mov
jg
xchg
pop
mov
out
int3
lret
adc
ljmp
scas
in
or
test
es
jns
cld
call
mov
je
pop
pushf
mov
dec
pusha
push
inc
jns
jle
add
mov
loop
and
fcmovbe
sarl
xor
fidivrl
sbb
pop
lahf
cli
aaa
xchg
mov
mov
pop
pop
popa
xchg
jge
popf
adc
aad
nop
hlt
in
xchg
and
aad
test
pop
in
add
sub
cmp
mov
or
pop
and
mov
push
call
pushf
mov
sbb
jb
pop
xchg
push
or
push
shrl
cmp
xrstors
pop
cmc
pop
movsb
daa
dec
lret
popa
loopne
jle
push
mov
pop
orl
push
loope
fcoms
ret
xchg
inc
xchg
enter
xor
push
fcmove
lods
mov
movsb
and
ret
sbb
mov
mov
or
adc
or
in
inc
mov
dec
call
lods
in
popa
xor
dec
js
mov
jle
scas
out
or
xlat
fidivrs
dec
stos
push
scas
fistpll
add
sub
jle
xor
add
mov
mov
mov
jne
into
cli
add
pushf
jp
add
cld
mov
jge
pop
fcoml
test
mov
loope
mov
js
into
pushf
jl
jne
fs
xor
leave
ljmp
in
sbb
jne
inc
in
xor
fisubs
in
hlt
sub
mov
divb
stos
and
adc
repnz
aam
iret
or
jns
leave
push
shl
or
pop
jne
pop
call
cmp
test
mov
fisubl
loop
inc
mov
lcall
fidivl
aad
mov
rolb
popf
cmp
shll
cmp
adc
push
pushf
jae
xchg
push
cltd
xchg
out
cmp
mov
xchg
mov
outsb
sbb
cmp
in
fxch
divl
or
in
xor
mov
dec
hlt
jno
jle
in
pushf
mov
lcall
pop
inc
xchg
shll
mov
imul
cld
adc
stc
in
cli
and
faddl
or
rcrb
mov
call
fs
xchg
add
notb
sub
scas
inc
push
push
fxtract
aad
and
gs
mov
nop
imul
mov
call
push
bound
dec
jnp
lret
rcl
push
out
ss
pop
push
pop
adc
sarb
idivl
pop
roll
ds
into
arpl
sbb
or
test
mov
scas
lods
pop
pop
mov
das
xchg
dec
lock
fmul
cmpsl
jo
jg
inc
pop
cld
aam
jge
fstpl
add
loop
push
cmp
pop
jb
stos
sub
js
sahf
arpl
ja
push
mov
sbb
push
out
xchg
ret
pop
jb
rorl
in
mov
xorl
inc
vmread
imul
add
cwtl
daa
jecxz
punpcklbw
cmpsb
sub
cmpsl
jge
lea
pusha
mov
ds
dec
mov
shrl
and
jg
loope
clc
js
mov
cmpsb
cmp
sbb
out
add
pop
scas
fwait
push
inc
and
xchg
leave
jo
xchg
mov
jns
jb
jno
sti
or
sbb
in
cmc
xchg
std
popa
mov
xchg
push
imul
dec
and
stos
mov
adc
sub
test
mov
enter
mov
add
dec
stc
xor
sbb
or
popl
iret
or
xchg
loope
adc
iret
xlat
sbb
xchg
mov
and
daa
push
clc
push
lahf
les
fs
push
lods
xchg
clc
jo
fs
jo
int
xlat
outsl
inc
cli
movsl
stos
into
sub
subb
mov
out
fs
pop
hlt
adcb
fsubs
fdivrs
sbb
sub
js
in
ss
push
in
clc
mov
pop
mov
cmp
push
pop
xor
js
cld
clc
cmp
xchg
push
cmpsb
pusha
adc
jge
xchg
fsubl
mov
mov
or
js
add
adc
xchg
or
cmc
std
adcb
cltd
jbe
inc
call
aam
or
mov
xchg
jp
fisubl
xor
out
push
clc
pop
cmc
outsl
insb
or
xor
xor
and
repz
sbb
or
add
std
xor
or
push
andb
aaa
mov
jnp
sbb
push
xor
jno
bound
add
inc
inc
out
jbe
in
mov
or
xchg
pop
test
mov
add
ficoms
sbb
adc
std
fisubs
ja
stos
std
outsb
and
call
inc
repnz
aas
int
sub
pop
sti
mov
dec
fisubs
shll
and
add
mov
ud1
mov
out
jno
inc
adc
decl
pushf
or
test
xchg
out
sbb
nop
xchg
jle
loop
pop
mov
notb
mov
mov
or
jge
fsts
sub
sub
bound
adc
xchg
lock
outsb
shrl
add
imul
insb
pop
jae
mov
sbb
pusha
sub
adc
lret
test
add
pop
xor
aas
mov
daa
and
jb
int3
stos
xchg
pop
sub
pop
fwait
pushf
push
mov
xor
cld
ja
int3
add
push
fidivs
jp
sbb
rorb
dec
jb
std
inc
xchg
xchg
out
mov
mov
fbld
inc
aam
scas
or
pop
movsb
lea
stc
add
leave
dec
adc
out
cltd
cmp
cmpsl
dec
xchg
aam
insb
ss
cmp
mov
mov
mov
out
inc
sbb
clc
xor
lahf
pop
das
pop
or
jae
inc
push
mov
fisubl
dec
fidivrl
enter
cmp
push
shrl
xor
xor
cld
rorb
inc
test
cmp
fdivs
and
jmp
push
xchg
mov
cmp
jecxz
sub
loop
lds
xchg
mov
fs
mov
mov
loopne
rorb
imul
sbb
mov
imul
fistps
lcall
adc
scas
mov
add
mov
test
ds
insb
fnstenv
lret
js
insl
insl
addr16
int
and
in
cmp
ds
inc
cmp
mov
hlt
pop
dec
jae
cs
mov
sub
inc
ljmp
addl
mov
dec
popa
outsb
stos
ret
pop
imul
insb
in
mov
xchg
jle
or
mov
arpl
add
dec
aam
inc
pop
mov
push
cmp
sarb
mov
push
push
test
lods
repz
clc
and
or
aad
je
push
adc
js
or
lret
inc
enter
ss
fstl
imul
mov
cmp
push
movsl
cmpsb
pushf
cmp
jne
fwait
and
dec
or
movsb
sbb
ret
sbb
pop
popa
xlat
lret
add
pushf
mov
mov
xchg
jns
sub
xchg
outsl
call
pop
cmp
in
sub
sbbb
outsb
repz
add
test
mov
cld
mov
hlt
push
das
roll
es
icebp
es
mov
mov
test
cmp
sti
fpatan
sub
movsl
and
sbb
in
fistl
gs
push
xchg
xor
lret
rcll
out
jne
insb
in
or
fbstp
rorl
fucomip
stos
mov
add
addl
or
dec
push
adc
ss
mov
syscall
inc
and
lcall
fstpl
jbe
cmp
push
mov
sbb
push
psubsw
sti
cmp
lock
adc
lock
js
ja
ret
push
xchg
insb
inc
das
jb
mov
mov
ljmp
test
movsl
pop
mov
or
gs
mov
and
push
mov
clc
jno
hlt
jns
xor
fwait
xchg
test
xchg
and
xor
push
popf
or
test
lahf
inc
cs
out
and
mov
xor
imul
dec
test
mov
ja
fstpt
cmp
incl
sub
test
ret
mov
sbb
push
popf
push
aaa
xor
dec
push
xor
push
sub
inc
xchg
int3
and
pop
xchg
sbb
in
loope
repz
pop
addr16
into
das
pop
leave
add
popa
push
into
pusha
jecxz
push
lea
lcall
outsl
sub
xchg
pop
sti
lods
sub
ja
decb
in
mov
or
in
xchg
popf
sahf
cmp
or
cmpsb
push
int
push
enter
and
xor
inc
fildl
into
cmp
mov
popf
mov
adc
sbb
ljmp
out
or
in
dec
aas
sbb
cs
xorl
push
sti
cmpsb
adc
fbstp
mul
cltd
mov
cmp
jl
mov
sub
and
int3
ljmp
cltd
arpl
flds
insb
dec
and
jge
fisubrs
sbb
jg
enter
lahf
mov
pop
pop
xchg
leave
test
addl
mov
bound
pop
adc
test
es
cs
xor
cli
iret
sbb
mov
jae
jno
int3
das
xchg
push
cmp
dec
pop
pop
cmp
jo
and
aam
push
movsb
lods
add
ret
xor
dec
call
into
inc
dec
iret
pop
mulb
movsb
jno
in
ja
in
lcall
das
fstps
lcall
cmp
pop
jno
ret
xor
aaa
sbb
sub
xchg
cmp
add
roll
sbb
sub
out
nop
aad
and
mov
leave
push
pmulhw
xchg
push
mov
cltd
push
sbb
outsl
jg
pop
cmp
pop
fcom
jae
clc
mov
addb
mov
ss
adc
push
outsl
lods
push
aaa
pop
in
out
mov
mov
xor
pop
insl
addl
cli
jmp
mov
icebp
cmp
pusha
push
cmp
lret
repnz
lcall
xchg
movsl
stos
and
ret
pushl
clc
sbb
insl
cmp
gs
sub
or
mov
or
or
std
xchg
mov
xor
jo
sahf
push
cmp
jmp
mov
fsubr
gs
jmp
lcall
lahf
insb
fcomps
shr
test
mov
cmpl
mov
lds
fwait
jb
addr16
cmp
loope
push
in
mov
xchg
cmp
adc
jge
xchg
jl
mov
lods
push
negb
notb
shlb
adc
scas
xor
movsl
hlt
imul
pushf
xchg
sar
mov
cmp
movsl
movsl
inc
mov
test
jecxz
and
pushl
aas
pop
out
cltd
pop
ret
sbb
pop
popa
or
or
popa
out
jne
test
lret
add
out
or
cmpsl
fbld
pop
in
sub
push
xor
jae
mov
mov
ficompl
inc
push
cwtl
add
mov
cmpsl
lods
push
mov
leave
xlat
or
mov
sbb
ds
btc
leave
cmp
dec
testb
adc
adc
mov
and
and
fsubl
and
sbb
and
das
popa
xor
lods
sahf
clc
sbb
test
inc
and
inc
addb
mov
cmpsb
imul
int3
mov
xlat
dec
adc
sub
jns
sahf
scas
mov
push
mov
fadds
mov
mov
scas
test
js
inc
and
cmp
pop
popf
mov
sbb
aam
push
inc
push
cmp
arpl
ds
cltd
loopne
loop
xchg
mov
pop
jmp
nop
jne
ljmp
pop
jle
outsl
lds
out
inc
arpl
pop
sub
movsb
mov
and
in
cmp
aaa
scas
add
lahf
xchg
negl
ficoml
mov
lock
fxch
mov
cmpsl
xor
sti
push
jecxz
in
inc
leave
sub
stc
mov
inc
nop
cmc
cs
mov
mov
inc
sub
mov
cmp
xchg
pop
rclb
mov
dec
jecxz
loopne
in
dec
inc
or
and
inc
std
or
fdivs
cli
or
xchg
adc
bound
inc
xor
push
lcall
loopne
dec
add
pop
adc
inc
inc
mov
into
xor
in
lods
mov
add
ja
xchg
test
inc
xchg
stos
dec
es
mov
xor
add
xlat
es
das
sub
fnstenv
hlt
push
mov
addl
inc
leave
imul
lock
stc
in
loope
cli
stos
dec
das
xor
cwtl
fwait
push
add
xchg
jecxz
sbb
xor
cs
jg
fs
cmp
out
jge
test
lcall
jle
ret
xlat
negl
fiaddl
imul
cltd
push
jbe
push
xor
lea
cmp
lea
pushf
push
or
aam
lret
fs
cmpsl
and
jge
aaa
inc
loope
js
rclb
or
jno
push
pusha
daa
xor
mov
shrb
mov
and
jmp
call
jno
dec
fs
sti
stos
mov
rorb
je
dec
lods
js
mov
push
repz
add
jecxz
into
lock
hlt
push
xchg
std
mov
add
jp
pushf
fstl
popa
adc
pop
ficomps
add
mov
popa
jp
and
jecxz
std
fucomip
pop
and
andb
dec
xor
mov
or
jmp
add
mov
arpl
push
lds
lock
rorb
sub
push
inc
or
sbb
push
jne
jecxz
jno
fstps
mov
pop
aam
cmc
inc
gs
idivb
and
xor
arpl
dec
jne
lcall
aam
fsubs
movb
inc
adc
dec
xor
shrb
lock
daa
inc
xchg
xor
fdivr
mov
idiv
out
mov
xchg
add
jecxz
imul
pop
mov
or
adc
jp
mov
xchg
sti
lcall
ror
xor
xor
test
ljmp
insb
test
cmp
imul
stos
inc
or
push
sbb
hlt
scas
or
lret
aas
in
enter
xchg
mov
add
cmp
ret
cmp
xchg
negb
mov
daa
inc
inc
fmuls
fisttps
mov
dec
imul
add
jge
seta
and
lds
bound
sbb
lea
inc
cmp
mov
inc
sub
adc
jp
mov
fxch
lret
out
sahf
movsl
sub
jg
sarl
and
cli
add
jbe
xchg
rorl
lahf
ss
mov
mov
cltd
sarl
ret
cmp
stos
lret
mov
outsb
adc
sub
push
ja
adc
aad
xor
mov
pop
xor
xor
dec
lock
dec
rolb
cld
nop
jp
jnp
shrb
shl
in
cmpsl
divb
stc
mov
pop
jne
mov
or
cmc
sahf
add
lods
mov
out
mov
pop
jle
mov
xor
push
roll
cmpsl
faddl
popa
shlb
stc
push
jbe
push
inc
jle
or
popa
rcll
and
adc
jp
cli
xor
cmp
fstpl
lds
daa
push
js
fldpi
std
movsb
cli
mov
mov
cmpsb
sbbb
mov
out
add
lahf
cld
inc
jg
sarb
xor
cmc
mov
push
and
and
cwtl
sub
les
mov
mov
or
xlat
push
cld
adcb
adc
imul
xchg
mov
das
mov
push
mov
mov
inc
andb
sub
popf
sbb
sub
js
xchg
dec
and
lock
pop
stos
frstor
lods
iret
sub
ss
bound
lods
ja
rcll
ss
cmp
rorb
out
mov
sub
ljmp
lods
push
sub
js
sbb
push
mov
xor
mov
jne
inc
push
cmp
sub
lret
mov
data16
pop
mov
gs
mov
or
clc
pop
sbb
inc
cmp
jne
pop
repz
and
arpl
push
cmpl
push
mov
in
sbb
mov
push
inc
movb
sbbb
lods
adc
inc
add
out
jge
push
movsb
icebp
cmp
cltd
call
add
out
pop
cwtl
mov
pusha
mov
or
aam
cltd
lahf
test
xchg
in
jbe
fwait
std
aad
mov
test
fldl
aam
sub
jns
sub
clc
mov
sbb
gs
shl
mov
xlat
jnp
push
test
inc
adc
and
scas
add
dec
call
iret
inc
xchg
dec
lea
ss
add
data16
sbb
cmp
push
add
shr
fadd
daa
mov
shrb
mov
dec
cltd
sysret
sub
into
jle
fistpl
xlat
js
aas
adc
daa
ficompl
addr16
lret
push
shrl
mov
icebp
adc
lods
stos
mov
xchg
dec
bnd
data16
jns
jns
cs
xor
xchg
loop
push
xor
jbe
cli
xor
cmp
cld
and
mov
xchg
out
lret
push
jbe
stc
adc
push
imul
sbb
dec
fidivrs
ss
dec
mov
mov
and
pop
xor
mov
mov
jo
mov
imul
or
push
cmpsl
inc
jg
cwtl
hlt
scas
es
xor
out
mov
inc
int3
in
incb
pop
add
das
dec
loopne
aad
or
xchg
lret
mov
push
js
xor
arpl
xor
sbb
and
push
pop
mov
push
lock
out
arpl
scas
enter
movsl
cwtl
loope
sub
jg
xchg
ja
pop
pop
lock
sub
shl
incb
sbb
pop
jg
jl
shrb
jl
or
and
inc
gs
push
jmp
mov
int3
and
popa
adc
orb
andl
aaa
xor
and
sbbl
jbe
testb
jns
lret
fists
mov
mov
movsb
pop
mov
lock
push
and
les
subl
popf
add
inc
aaa
ljmp
adcl
stc
cmp
add
jnp
inc
dec
ss
push
test
dec
sahf
mov
gs
out
movsl
clc
push
sarb
lock
jp
mov
ffree
je
outsl
push
shrl
inc
orl
push
imul
in
mov
cmp
jmp
roll
jg
add
xorl
ret
icebp
aas
push
fcompl
cltd
cmc
and
gs
inc
outsl
mov
les
adc
pop
dec
push
mov
fsubrl
dec
outsb
jno
roll
pop
unpcklps
lods
pop
mov
nop
mov
cld
dec
fwait
cltd
ret
mov
adc
add
sti
jo
mov
movsl
fnsave
jp
or
jne
xor
dec
fucom
add
push
dec
cmpsl
adc
jge
scas
jl
loopne
test
xchg
mov
or
dec
jmp
xor
out
xor
sahf
imul
mov
mov
sub
push
ja
loop
mov
inc
fildll
in
xchg
push
adcb
or
jge
test
and
repnz
addl
imul
jp
cmp
adc
rcl
xor
mov
jns
cmp
mov
xchg
or
jl
pop
hlt
jb
outsl
andl
pop
mov
stos
push
ja
jecxz
andb
enter
ss
lods
sbb
push
imul
pop
or
sbb
add
lock
hlt
mov
inc
jbe
xor
arpl
sbb
pop
pop
mov
fcmovnbe
xchg
mov
push
xlat
jb
or
ds
dec
jno
xchg
inc
sub
mov
clc
or
push
mov
mov
call
aas
cltd
sbb
and
inc
push
stos
into
cmpsb
sub
je
jbe
jg
push
xchg
or
rclb
test
rcr
mov
ja
clc
mov
out
pop
xchg
ja
push
rcl
je
inc
mov
sub
mov
jno
outsb
inc
repz
sub
repz
jp
mov
or
shrl
stc
aaa
xor
sahf
movsl
xor
push
call
addr16
cmpsl
rcl
adc
jno
idiv
jl
movsl
rcl
popa
inc
repnz
rol
sub
dec
int3
into
lret
mov
mov
jp
ds
add
dec
daa
jae
nop
jb
sub
fisubs
je
push
fwait
xor
xor
and
mov
aas
or
imul
xchg
jmp
push
dec
inc
sbb
and
pop
mov
pop
addr16
add
loope
enter
sbbl
jmp
jle
dec
fimull
es
cmpsb
aaa
sbbb
hlt
push
aas
cmp
add
mov
jp
lahf
xchg
xchg
dec
lock
xor
add
sbb
xchg
pop
ret
fldl2t
sbb
push
insl
add
in
cmp
mov
sahf
call
fcomi
jo
incl
outsl
lahf
outsb
jmp
inc
mov
bound
mov
cmp
popf
stos
sub
dec
xchg
and
pop
inc
jl
sub
xor
sbbl
mov
cmp
cmp
out
cld
inc
enter
sbb
test
and
sub
call
sbb
test
scas
xchg
cmc
mov
add
dec
sahf
out
dec
push
movsb
int3
rcr
sbb
pusha
scas
mov
clc
fistpl
movsb
pop
decb
repz
ja
inc
or
scas
mov
jmp
push
dec
mov
mov
dec
ror
mov
adc
je
dec
sbb
mov
mov
xor
loopne
push
mov
rcll
dec
xor
movsb
sbb
out
leave
cmpb
aam
cs
ljmp
pop
mov
adc
es
pop
icebp
pop
lcall
pop
inc
mov
sub
sbb
test
ja
cmc
xchg
pop
or
out
out
xchg
push
mov
outsl
aaa
pop
inc
jo
sub
mov
mov
cs
jnp
out
add
xor
cltd
idivb
lret
dec
xchg
mov
inc
xchg
dec
ret
jp
xchg
sbb
xchg
fiadds
fcomps
clc
stos
push
es
in
sbb
ds
xlat
sarb
adc
cs
sub
ds
inc
jmp
xchg
sbb
mov
data16
outsb
cwtl
fcmovne
add
insl
xor
push
or
sub
mov
pusha
nop
daa
jbe
jg
mov
fimull
addl
fnstenv
add
lock
cmp
mov
repz
lret
ret
push
jb
pop
clc
sbb
or
fsubl
icebp
push
add
mov
fistl
add
mov
insl
mov
xchg
sbb
sub
test
mov
adc
mov
push
dec
mov
ss
pop
and
out
out
dec
pop
mov
std
cmp
fnstenv
xchg
jg
jns
mov
aas
push
outsl
and
cmp
add
imul
dec
clc
loop
adc
or
in
mov
inc
sbb
push
mov
popf
jae
out
in
xchg
lods
into
sti
mov
repz
and
ds
popl
push
call
xor
subb
mov
test
cmpsb
sbb
popa
rcrb
movsb
into
test
movsl
in
popf
loop
mov
out
lret
stos
adc
cmp
andb
mov
pop
mov
add
cwtl
xchg
jo
nop
mov
dec
stos
imul
lds
int
push
mov
sbbb
mov
xor
or
loope,pn
mov
pusha
lret
pop
cwtl
cli
add
ds
mov
jae
pop
aas
push
addr16
sbb
loopne
js
pop
add
daa
mov
sub
loopne
inc
mov
jl
sub
leave
lods
push
mov
xchg
outsb
pop
xor
repnz
xchg
push
pushf
xor
stos
dec
cmp
jnp
xchg
dec
nop
mov
rorb
fidivrl
leave
mov
ret
repnz
and
sub
xor
fxch
mov
push
out
roll
xchg
int3
cmc
sbb
fists
or
out
fcompl
pop
out
insb
cmp
adc
lods
and
pop
aam
push
fsubrl
lahf
xchg
xchg
test
jb
fadd
jns
mov
pusha
scas
test
add
rcrb
pop
sub
adc
cmp
frstor
inc
inc
xlat
hlt
xor
jnp
and
mov
mov
pop
and
cmpsb
pop
clc
pop
sbb
icebp
call
xchg
loope
loopne
xchg
fnstsw
jl
pop
push
dec
movsl
inc
popf
daa
inc
push
lods
cmpsl
iret
push
and
shr
mov
out
insb
ljmp
fwait
icebp
sbb
and
mov
in
mov
cmpsb
inc
xchg
les
lcall
add
cmp
aaa
xlat
mov
adc
and
xor
in
adc
xchg
aam
stos
mov
xchg
popa
test
mov
dec
cmpsb
sahf
js
les
jno
lock
in
dec
inc
or
imul
pop
adc
push
adc
or
push
fs
jge
push
orb
xor
push
in
stos
ficoml
out
xor
add
sbb
cltd
jbe
dec
xor
test
rorb
lea
lods
loope
cmp
into
jb
pop
xchg
les
lea
pop
cld
inc
les
jbe
xor
adc
and
push
push
and
daa
xorl
add
cli
test
sub
sbb
jb
mov
in
dec
and
sbb
xor
cmc
lods
int
mov
pop
pop
jp
sub
addr16
aas
cmpsb
xor
dec
movsb
mov
imul
dec
xchg
fdivs
into
and
jbe
lret
jge
sarb
gs
lock
mov
mov
xor
mov
loopne
push
xor
test
stos
and
dec
aas
fdivr
cmp
adc
mov
cld
xchg
cwtl
dec
ret
ljmp
add
out
cmp
dec
fs
les
test
fdivr
push
mov
or
dec
popf
adc
scas
jo
insb
lea
inc
push
mov
in
jecxz
mov
ja
mov
movsb
add
mov
popf
pop
jmp
mov
adc
cmp
js
jl
lods
out
xlat
sti
shll
sub
mov
pushf
outsl
test
xchg
pusha
pop
cld
ret
fwait
or
sub
fdivrl
out
out
add
enter
insb
roll
cli
rclw
or
mov
jg
sub
and
dec
or
mov
outsb
push
pop
out
mov
jbe
sub
cmp
mov
adc
rorl
lcall
xor
addr16
repz
movsl
cwtl
fdivrs
sub
mov
into
imul
push
cmc
aaa
cmp
and
mov
stc
dec
idivl
pop
mov
mov
insb
adc
cmp
ljmp
mov
cmpsl
lret
lds
xchg
or
sbb
mov
mov
das
pop
sbb
dec
pop
arpl
and
icebp
outsb
dec
xor
or
out
jne
pcmpeqd
loope
and
cld
daa
jge
dec
jbe
popa
jmp
movsb
pop
aas
xchg
inc
das
dec
cld
lcall
scas
inc
mull
push
and
jb
into
or
xorl
or
hlt
test
ja
mov
push
ret
aam
repnz
sub
sbb
shlb
pop
imul
loopne
xchg
push
mov
inc
rol
imul
mov
mov
mov
cwtl
add
push
pop
cmp
out
xor
inc
push
and
push
popf
adc
adc
cmp
out
lcall
pop
lcall
inc
shl
jmp
stos
mov
outsl
mov
arpl
sbb
movsb
jl
daa
imul
dec
pop
jge
rclb
out
push
push
dec
aam
imul
and
pop
lock
daa
or
out
push
and
repnz
mov
lcall
pop
inc
int3
xchg
dec
xchg
cmp
call
idivb
sub
cmp
jo
ss
mov
test
adc
pop
xchg
test
mov
fstpl
or
fidivs
pop
pushf
rol
sbb
inc
lret
outsb
stos
and
fwait
inc
ds
pushl
inc
mov
lret
sbb
aaa
xchg
jge
enter
push
jecxz
mov
rcrl
fs
or
push
sti
iret
xchg
out
shlb
movsb
cld
cmp
loop
int
cmp
iret
sbb
lock
pop
test
andps
mov
mov
mov
inc
mov
cmp
scas
jnp
and
xchg
xchg
dec
jle
adc
adc
stos
and
xor
mov
cmp
inc
in
outsb
mov
into
dec
mov
mov
loop
imul
cwtl
lret
scas
flds
les
bound
dec
add
mov
mov
xor
aas
es
sub
subb
xchg
mov
xlat
sub
jns
sarl
lds
mov
and
test
cmpsb
inc
inc
ja
push
int
pop
out
xor
cmp
xchg
fistl
mov
add
and
or
mov
add
adc
mov
mov
bnd
xor
notl
jl
xchg
and
inc
pop
add
sub
sti
por
push
xchg
aaa
addr16
arpl
xor
sbb
push
inc
adc
adc
scas
and
shlb
scas
int3
addr16
mov
in
pop
ds
sbb
movb
mov
dec
aam
inc
fs
xchg
sub
pop
xchg
out
sub
pop
rclb
dec
in
xlat
mov
dec
inc
sub
and
stos
pop
jmp
test
sub
xor
fmuls
insb
loop
outsb
mov
loopne
ret
add
dec
push
in
and
and
cwtl
repnz
mov
mov
mov
mov
sub
cld
lods
cmovne
cld
xchg
loope
jge
dec
inc
inc
jno
xor
bound
insb
movsl
int3
jo
bound
out
push
mov
jno
lret
push
lock
aaa
sbb
in
push
scas
shrb
out
jg
jnp
fwait
pop
ret
fsubrl
in
rorl
lds
sub
arpl
mov
out
jae
mov
mov
clc
push
jae
ret
mov
mov
nop
inc
mov
imul
in
cwtl
inc
ret
fmuls
loopne
outsb
sbb
outsl
insb
mov
or
cmp
fistpl
mov
dec
push
sbb
mov
and
out
sbb
gs
out
pushf
cltd
sbb
stos
mov
cmp
iret
jnp
ret
add
fiadds
fs
xchg
arpl
shrb
push
adc
fisttps
test
das
jne
adc
push
outsb
stc
push
push
leave
out
dec
test
and
fnstcw
fcomi
jno
pop
das
insb
jp
in
inc
inc
jmp
sub
jle
dec
cmp
mov
lods
iret
sub
sahf
push
inc
popf
xchg
sbb
lods
lretw
insb
je
mov
mov
cwtl
repz
jb
or
cmpsl
jecxz
bnd
out
mov
lret
mov
mov
mov
sar
sbb
jge
pop
mov
mov
cmc
mov
in
jo
testb
je
dec
xchg
fs
test
lods
fwait
test
sub
pop
sbb
leave
stos
mov
adc
ds
fists
sub
mov
negb
push
cmp
mov
lds
adc
xchg
and
dec
xor
out
mov
nop
mov
jbe
push
and
push
cmp
mov
outsl
jae
xor
movsb
inc
iret
mov
sbb
cmpsl
push
cmp
imul
push
jmp
mov
je
jle
xor
jle
dec
inc
arpl
lea
mov
in
movl
adc
frstor
cld
xchg
scas
test
dec
sti
sti
bnd
jnp
or
aad
sub
in
in
loope
scas
push
mov
pop
and
pop
xor
sub
scas
sub
and
xor
push
inc
jmp
mov
and
inc
shll
fstl
sub
shll
jo
adc
xchg
cmpsl
es
xor
in
js
pop
or
inc
in
std
sub
aad
push
ja
test
or
cmpsl
xorl
test
and
push
mov
daa
or
xchg
outsl
xor
dec
addr16
cwtl
test
sahf
add
mov
jmp
popf
inc
in
adc
jns
andl
lret
fsub
into
loopne
hlt
mov
and
repnz
pop
jmp
popf
jl
out
bound
divb
cmp
aam
cltd
out
xchg
ret
leavew
jns
mov
mov
jecxz
add
mov
insb
sbb
inc
add
bound
fcmovnu
inc
xchg
out
aam
inc
add
sbb
lea
mov
mov
pop
mov
adc
cmpsl
pusha
pushf
insb
sbbl
repz
jmp
mov
inc
dec
cltd
pop
pusha
pop
xchg
mov
lea
push
faddp
push
loopne
xchg
leave
jge
fxch
mov
add
lret
sub
inc
shr
pop
add
mov
pop
out
push
xchg
das
dec
xchg
mov
jno
loopne
aas
or
daa
sub
or
and
ja
je,pn
incb
cmpsb
pusha
jno
repz
jecxz
mov
lods
jmp
orl
jo
push
test
mov
sub
dec
bound
clc
leave
js
xchg
push
or
adcl
stos
mov
out
shrb
jmp
in
das
sub
adc
test
cmc
repnz
in
pop
repnz
sti
cmp
fsubrs
mov
jmp
aad
xchg
cmpsl
jg
inc
push
mov
sub
es
dec
sub
sub
or
push
in
mov
lods
mov
mov
testl
add
sti
push
inc
ljmp
sti
cmpsb
fimull
mov
imul
pop
pop
push
rcrb
jno
gs
pushf
lods
cmp
mov
data16
incb
pop
adcl
fwait
and
inc
xchg
xchg
mov
hlt
bound
jle
and
and
jne
into
fwait
inc
sub
inc
sbb
add
gs
in
jne
cmp
inc
jb
cmc
push
push
cmc
push
or
mov
cli
push
adc
das
pop
add
bound
cmpsb
repz
jnp
mov
dec
cmp
jl
subl
jbe
mov
int3
push
pop
fstps
sub
mov
cltd
js
fisttps
popa
scas
pusha
mov
dec
mov
std
pop
or
lcall
mov
in
gs
clc
in
pop
xchg
pop
push
mov
xchg
roll
outsl
cmpb
jle
js
mov
jnp
push
mov
jb
daa
add
pop
mov
sbb
fsubs
bound
mov
imul
sti
out
and
lds
notl
sbb
jno
outsb
adc
stos
ret
pop
inc
mov
mov
mov
subb
clc
lods
adc
jnp
arpl
fidivs
popf
inc
shrb
mov
popf
pop
jp
jb
xchg
cmp
push
stc
jnp
fstl
std
stos
and
loope
xchg
je
cmp
ljmp
pop
jb
xor
mov
xchg
aaa
and
gs
jnp
add
lcall
pushf
jp
iret
fcmove
push
mov
gs
ret
sub
jle,pn
popa
pslld
mov
in
push
xorl
mul
jno
in
rorb
add
xor
cs
clc
cwtl
fsubrp
adcl
pushf
minps
and
insl
jle
mov
mov
test
scas
rclb
cmp
mov
push
push
out
push
dec
mov
mov
cltd
sbb
and
add
loop
mov
pop
mov
in
sbbl
cmpsb
mov
in
test
push
push
jle
dec
int3
sub
xchg
push
in
clc
icebp
std
xor
inc
adc
xor
in
adc
lea
stos
in
idivl
jne
int
clc
mov
fistps
fs
movsl
daa
add
data16
and
adc
and
aas
xor
je
call
cmc
jecxz
push
push
int
addr16
pop
xor
or
inc
pop
or
inc
jns
inc
or
imul
mov
out
in
mov
je
pop
mov
outsl
xor
aaa
mov
adc
jbe
popf
adc
or
lods
pop
pop
loop
xor
cld
das
xor
fmul
cld
gs
in
inc
aam
add
retw
je
outsb
out
dec
cltd
or
imul
adc
xor
fxam
pushf
mov
sub
cmpsb
je
cmp
sti
leave
pop
mov
fwait
in
ja
push
push
fnstenv
cs
int3
aas
dec
lret
popl
mov
jmp
inc
and
ss
stc
mov
xor
mov
mov
pop
orb
mov
add
inc
sub
insl
popf
or
insb
ret
add
push
or
popf
mov
mov
and
mov
jmp
xor
sbb
leave
mov
inc
addr16
jb
mov
cmp
jo
inc
cltd
add
dec
popf
pop
test
mov
xor
xor
dec
jae
je
adc
fidivrs
in
mov
sbb
sbb
aad
in
dec
adc
repz
aam
and
pop
std
pop
cli
mov
cli
test
dec
and
adc
jge
mov
adc
inc
cltd
mov
or
add
pop
push
out
jnp
cmp
adc
adc
stos
stc
mov
push
addr16
xor
xor
xchg
cmc
repz
adc
jo
xchg
inc
testl
daa
inc
lods
push
and
dec
out
cld
out
mov
and
dec
clc
mov
rolb
addb
sahf
inc
xorb
mov
ljmp
or
xchg
jmp
cmp
mov
and
adc
xor
test
mov
xchg
call
das
decb
ret
cmp
pop
mov
jle
enter
sti
push
pop
mov
or
pop
and
js
cmp
lock
ja
loope
sub
stos
cmp
pop
mov
daa
or
mov
mov
hlt
sbb
push
xchg
pop
lcall
pop
xor
lcall
insl
divb
cmp
sti
pop
push
sbb
stos
sti
push
int3
insb
mov
and
cld
pop
jns
dec
and
xchg
and
xor
adc
or
inc
xor
dec
sub
add
in
in
or
movsl
jnp
and
jbe
pop
sbb
shlb
xlat
mov
mov
rorl
sub
jmp
shll
sbbb
repnz
or
cmp
js
lcall
ljmp
ficoml
sti
inc
in
jmp
jmp
mov
outsb
and
imul
push
pop
pmulhuw
and
inc
idivl
es
loope
adc
mov
mov
cmp
out
mov
roll
jns
mov
out
data16
adc
fdivp
fsubs
xchg
mull
sub
mov
lret
cmpsl
add
and
adc
lds
cmpsl
fwait
xchg
dec
adc
sti
xor
out
ret
lret
xlat
pop
mov
insb
pushf
pop
int
shll
pop
jbe
js
shll
jnp
sbb
xlat
rcll
jp
je
in
lods
jo
pop
adc
mov
idivb
and
mov
cmp
lret
xchg
insl
iret
xor
mov
cmp
xor
pop
iret
fists
in
sahf
mov
fldcw
mov
jns
sub
push
push
sahf
xorl
jmp
pushf
jb
xor
cmp
mov
pop
ret
cmp
clc
mov
push
sarl
pop
add
inc
xchg
jle
dec
jle
mov
inc
lds
dec
xchg
fnstenv
jno
cli
adc
and
jg
add
add
mov
fld
sub
cmc
movsl
nop
ror
xchg
xlat
repz
cmp
sbb
fistpl
ja
mov
and
add
push
jmp
cmp
mov
dec
mov
cli
sbb
sti
xorl
sbb
mov
push
inc
adc
daa
adc
repnz
out
mov
jae
pop
jmp
sbb
dec
inc
aam
rcll
xor
xor
cmc
inc
pusha
pop
and
movsl
insl
ficompl
push
pop
pop
dec
lret
xchg
gs
or
fimull
sbb
ret
sahf
or
cld
xchg
cmpsb
cs
xchg
je
outsl
cwtl
push
sti
cli
lret
cmpsb
mov
mov
add
rcrl
adc
neg
das
sarl
sbb
divb
inc
lock
leave
pop
scas
inc
jne
mov
rorb
call
xchg
fmul
dec
aad
shl
jae
imul
and
cmp
scas
pop
insb
push
dec
mov
mov
scas
and
push
add
pop
mov
dec
dec
pop
dec
fnstsw
inc
pop
cmp
in
cmp
push
outsb
mov
rorl
lock
xor
mov
push
or
int
ljmp
roll
or
cmpb
and
sub
rcll
mov
mov
jns
shlb
pop
xchg
and
sbb
jae
movsb
insl
cmpsl
rolb
push
xor
jle
xor
push
push
rcl
cmpsl
mov
dec
adc
push
lods
push
cmc
mov
mov
mov
loope
ja
cmp
adc
int
in
clc
loope
sbb
pusha
inc
jle
sbb
in
cmp
add
sbb
mov
in
lods
or
pop
insb
nop
sbb
bound
jmp
jae
xor
pusha
inc
add
and
scas
ficompl
cmp
movsl
sub
cmp
xchg
clc
into
or
shl
mov
lea
or
dec
mov
pand
loop
sbb
notl
loop
push
xchg
mov
insl
cmpsl
xchg
mov
shll
aaa
inc
scas
mov
ficoml
int
mov
mov
je
jge
mov
or
xchg
adc
mov
dec
fldenv
mov
mov
repz
jns
ficompl
pushf
loop
inc
in
dec
jl
addr16
repnz
xor
dec
add
or
and
and
push
sbb
inc
xchg
movsb
je
sbb
enter
and
inc
inc
mov
sub
xor
mov
add
out
jge
or
lock
mov
push
xor
xor
mov
out
mul
in
adc
lock
stos
int3
outsb
inc
stos
enter
mov
mov
out
sub
xlat
pop
pop
popl
add
sti
call
lods
imul
mov
inc
add
cmpb
fisttpll
inc
nop
dec
push
lret
cwtl
mov
jo
lret
imul
pop
test
xchg
pop
test
push
lods
pop
mov
orb
das
ror
lds
jnp
test
aas
ss
fmul
hlt
add
xlat
pop
imul
xor
movsl
cmpsl
sub
cs
sub
add
mov
out
dec
or
insl
into
int
push
repz
out
mov
pushf
rcrl
cli
fistps
das
xchg
mov
dec
dec
je
or
jb
rcrl
and
mov
adc
rcll
loop
pop
pop
jecxz
sub
subl
pop
ja
lret
test
pop
adc
push
add
stos
rclb
xchg
pop
jns
and
notl
es
and
std
mov
mov
adc
into
jns
mov
cmpsl
mov
shlb
notl
dec
hlt
pop
add
xlat
jns
dec
dec
call
jg
push
jae
fdivrs
into
cmpsl
movsl
jmp
mov
lock
in
mov
bound
ja
cs
rorl
call
filds
mov
push
pop
mov
cmp
pop
pop
xor
xor
sub
sub
in
lahf
inc
xchg
mov
lcall
mov
sarl
adc
mov
or
nop
ret
sbb
pop
out
stos
shrb
out
jmp
mov
lcall
cmpsl
ficoml
fmuls
into
jecxz
scas
adc
or
aam
int
push
push
mov
mov
popl
rcrl
sub
xchg
cmpsb
mov
xor
mov
out
push
bound
test
jo
test
call
jbe
push
push
test
cmpl
mov
jecxz
es
lods
push
or
cli
jo,pn
imul
test
pop
pop
popf
add
fistl
das
jbe
add
mov
xor
stos
push
rol
ret
cwtl
inc
leave
fidivl
push
inc
rol
xchg
repnz
out
imul
mov
movsl
mov
adc
pop
sub
pandn
iretw
inc
dec
dec
jb
inc
inc
movsb
pop
or
lret
xchg
test
sbb
dec
push
in
pop
mov
pop
sub
xor
mov
mov
mov
push
pop
jbe
js
test
jo
xorb
fwait
pop
out
xchg
jl
testb
add
das
lea
or
lds
shlb
jnp
or
repz
test
adc
in
mov
xchg
cmp
movsl
cmpl
ds
insb
mov
lock
call
pushl
xchg
ret
iret
out
inc
add
in
test
lock
sti
cld
hlt
sub
scas
out
hlt
or
mov
mov
test
stc
aam
xchg
xchg
adcl
mov
or
lods
pop
jbe
mov
sbb
lods
lahf
sbb
cmp
pop
dec
pop
and
sub
aas
ss
addr16
pop
mov
insl
sub
push
add
int3
fs
jo
push
negb
mov
mov
xchg
add
mov
daa
lock
loope
movsb
or
rcl
pop
loop
scas
pop
ret
jae
mov
cmpsb
sar
push
mov
add
inc
jae
cli
xchg
adc
lods
cmc
push
dec
das
scas
mov
clc
or
inc
mov
loope
xchg
dec
cmpsb
xchg
push
jnp
pop
jle
sbb
push
jecxz
insl
imul
popa
jl
stos
stos
jno
fsub
mov
lcall
faddl
mov
adc
shll
mov
push
and
xchg
dec
in
xchg
jnp
dec
std
push
cwtl
jmpw
cmpl
lcall
popf
mov
outsb
adc
imul
nop
add
sbb
idiv
add
outsl
pop
aad
gs
and
test
jbe
jno
scas
rcrb
jns
in
cmp
hlt
add
fstp
fsqrt
mov
xchg
pop
inc
rcrb
cmp
cmp
fildll
jmp
xor
pushl
adc
jnp
mov
jae
std
cmp
scas
test
pop
sbb
adcl
ss
scas
addr16
jo
xchg
pop
ss
mov
repnz
outsb
xor
sub
ds
jae
out
aaa
and
mov
sbb
mov
rorl
or
pop
mov
dec
xchg
dec
cmpsl
sub
f2xm1
xor
lcall
xchg
cmp
cwtl
rorl
hlt
ja
sub
mull
je
sub
decb
mov
mov
push
cld
ja
lahf
les
out
pop
adc
xorb
pop
divb
and
mov
push
icebp
adc
loop
sub
pop
cmp
jp
push
por
xchg
js
ja
dec
sbb
jo
push
inc
loope
ds
dec
enter
xor
pop
jno
int
fidivs
sar
enter
seta
mov
inc
clc
mov
and
and
mov
jp
sbb
ds
nopl
loopne
rorl
xor
hlt
push
pop
stc
mov
cli
cmpb
rcrl
adc
push
pop
nop
jl
and
les
cmp
jmp
mov
sti
iret
push
lock
mov
fwait
cli
mov
aas
jmp
addr16
adc
mov
push
roll
or
jnp
inc
xor
nop
stos
cmpsb
pop
mov
and
mov
aas
out
fmuls
xorl
mov
jl
movsb
sahf
clc
xor
je
pop
pusha
add
push
cs
loope
cmpsb
lret
cmp
pop
jne
nop
sub
add
cli
sti
mov
popf
scas
mov
xlat
mov
aaa
jle
out
xchg
lock
xlat
pusha
dec
pop
test
xchg
test
aad
mov
pop
es
popa
faddl
sub
cs
adc
sahf
popa
pop
and
jl
orb
push
das
sbb
xor
xor
push
bound
aam
addb
repz
repnz
jbe
dec
hlt
lds
in
sub
movsb
jl
mov
andl
vpsadbw
out
daa
sub
pop
mov
into
out
daa
adc
je
cltd
adc
js
fisttpll
out
push
cmpb
fnstcw
xchg
es
fistl
mov
ss
mov
rorb
lcall
cwtl
lret
inc
gs
in
push
nop
sbb
push
and
mov
xchg
test
in
stos
jge
inc
jg
and
inc
call
sbb
adc
cmc
cli
cltd
data16
xor
loopne
push
dec
outsb
mov
push
jmp
mov
ss
pop
mov
jle
scas
adcl
inc
mov
pop
mov
ds
fadds
and
pop
ss
xor
mov
lods
popa
fdivl
inc
mov
and
sub
lret
add
or
test
out
or
lahf
fcomps
cmp
dec
js
push
cmp
sbb
push
push
jmp
je
inc
jge
das
movsl
add
movsl
lahf
dec
fcmovne
ret
out
or
mov
xchg
jge
cli
fldl
stc
mov
in
dec
cmp
cs
mov
std
mov
aaa
push
fsub
lahf
and
pop
addr16
push
and
jg
mov
test
or
popf
lods
filds
ja
xchg
push
insb
shrb
dec
les
bnd
mov
paddsw
cmc
jb
outsb
mov
cmpsl
ljmp
pop
ret
loopne
fcompl
je
push
movsl
xchg
add
fs
in
pop
pop
sahf
in
test
mov
sbb
and
sub
int
popa
sub
xor
jns
stc
cs
in
out
or
mov
icebp
push
or
test
cmpsl
test
dec
adc
pop
xor
call
mov
imul
insb
pop
mov
int3
insb
lds
and
xchg
inc
test
mov
jno
push
movb
add
fisubrl
fadd
les
lret
loope
jnp
or
sbb
stc
sub
sub
mov
cli
and
jns
or
cmp
cs
fs
gs
lret
out
dec
inc
aad
test
inc
xor
push
and
adc
lods
outsb
mov
xchg
insl
or
ds
and
cld
out
adcb
je
daa
sub
int3
pop
ds
mov
inc
dec
out
push
ret
lods
js
xor
cmp
cmp
psubq
jbe
xor
mov
sar
ret
add
repnz
fists
lock
mov
adcb
mov
xor
add
andl
out
ljmp
pusha
pop
pop
repz
cmp
push
pop
mov
lret
sub
push
inc
nop
add
sub
loop
mov
dec
jg
leave
add
push
jbe
out
stc
xlat
lea
and
push
inc
out
mov
repnz
shlb
mov
shll
out
or
mov
popf
push
dec
mov
sar
dec
mov
jns
sub
xchg
push
leave
imul
jb
test
lret
mov
lods
pop
sub
add
and
add
das
inc
cs
arpl
into
adc
ja
insl
push
add
stos
dec
add
mov
icebp
iret
decb
subb
jnp
inc
jl
cmpb
mov
lods
cmpsb
push
ret
int
add
bound
mov
inc
daa
sbb
daa
std
jmp
mov
mov
mov
and
sarb
mov
push
cmpsb
lods
xorb
jg
mov
js
and
pop
scas
inc
add
filds
repnz
loope
mov
or
fbstp
sbbl
stos
sbb
push
test
mov
push
ja
dec
push
sbb
xchg
fstps
xchg
cmpsl
inc
data16
ja
xchg
mov
leave
jp
rolb
mov
in
les
jne
movsb
cmc
or
pop
push
mov
mov
push
push
jecxz
cmpsl
stos
mov
push
inc
sbb
inc
dec
xor
push
push
and
outsl
insl
push
cs
in
cmp
cmpsl
cmpsb
adcl
pop
mov
mov
lcall
mov
pop
mov
lret
daa
sbb
repnz
mov
std
add
in
pop
movsl
jle
repz
adc
sti
pop
inc
std
inc
push
jns
adc
push
inc
push
mov
int
adc
cmp
dec
xchg
fs
cmp
add
push
fistpll
jecxz
mov
loop
movb
inc
and
hlt
js
sbbl
bound
repnz
fwait
lcall
repz
jg
xor
fnstsw
insb
jmp
add
fcmovne
xor
movsb
xchg
jmp
sub
xlat
xor
out
inc
mov
fs
cmp
outsb
test
cli
pop
or
lcall
sti
pop
add
inc
fcmovnbe
jo
cmpsb
push
arpl
imulb
push
and
imul
ficoms
add
ja
cmp
cmp
negl
xchg
call
pop
hlt
xor
mov
loopne
cmp
popf
mov
shrb
les
mov
aam
cld
sti
insb
test
div
lods
adcl
enter
out
mov
and
js
or
mov
leave
popa
pop
pop
push
decb
sub
dec
sub
call
mov
stos
sub
out
lods
or
andl
addb
pushl
testb
std
test
ret
popa
lahf
lods
scas
ja
jns
hlt
sbb
test
fwait
dec
jg
orb
jns
jnp
bnd
xchg
outsb
push
or
sub
addr16
jge
jne
out
xchg
push
ret
pop
adc
cmp
add
sub
pop
jno
inc
sahf
mov
mov
sub
in
dec
int3
mov
mov
das
loopne
pusha
push
leave
or
scas
or
or
inc
cmp
cmp
addr16
out
clc
out
xor
jnp
out
das
or
out
pop
into
outsl
out
cmp
xchg
or
cmc
imul
bound
or
xchg
jg
dec
js
pop
lahf
mov
push
cltd
push
shll
fidivl
dec
mov
xchg
adc
in
outsb
mov
cs
mov
inc
rolb
cld
push
enter
gs
in
fcompl
pop
outsb
pop
sti
dec
imul
stos
sbb
popa
aad
cmp
add
push
mov
inc
repz
jae
inc
mov
mov
mov
fimuls
scas
jg
or
shlb
xor
jp
popf
bsf
mov
iret
and
imul
imul
test
es
imul
adc
in
bound
test
stos
jns
push
add
sub
in
fidivs
mov
cmpl
insl
fdivl
xchg
sahf
aam
add
push
or
rorl
dec
or
fnsave
dec
or
das
pusha
dec
dec
mov
iret
hlt
xchg
xor
cmp
xchg
ljmp
mov
cmp
cwtl
jle
mov
dec
fs
in
lcall
push
mov
mov
or
sbb
and
or
scas
mov
mov
and
shll
mov
repz
mul
cli
jns
lcall
jge
add
fbstp
jge
dec
xlat
lcall
jae
and
mov
pop
call
cmp
xlat
push
xchg
mov
cld
cltd
inc
sub
cltd
add
fldcw
dec
test
jmp
scas
movsb
xchg
xchg
push
pop
cmp
push
adc
mov
jno
and
push
in
fcoms
push
stc
ljmp
or
or
in
jbe
mov
rcl
xor
sbb
sub
xor
and
fimuls
adc
adc
jmp
and
decl
adc
cmc
cltd
add
push
xlat
xchg
xor
xchg
in
lcall
pop
fwait
leave
jmp
push
ljmp
jbe
mov
add
dec
xor
popf
out
jle
cmpsl
lret
insb
data16
or
dec
fcoms
loop
sbb
cld
jae
scas
mov
xchg
sub
js
and
add
dec
add
jmp
ret
mov
mov
cmp
pop
test
xor
xor
ss
lcall
fsubrs
mov
pop
jecxz
hlt
sti
hlt
add
fldl
push
adc
push
sub
xchg
xchg
ds
and
inc
jne
pop
cmp
jg
out
lahf
filds
or
add
push
pop
lods
cs
cmp
lcall
stc
jg
mov
lds
and
fwait
xchg
outsl
or
shll
or
push
lock
fisttps
fdivrs
es
clc
jo
ret
les
cmc
xor
int3
and
pop
lods
mov
add
daa
xchg
mov
inc
mov
ds
rorl
int3
lds
fcomps
inc
jg
sete
jno
inc
mov
pop
mov
or
imul
ret
cmc
popa
xor
test
inc
arpl
in
shrl
cmp
lcall
lods
imul
jno
dec
jnp
nop
xchg
cwtl
xchg
outsw
insb
in
inc
sbb
scas
adcb
cmp
cmp
pop
mov
imul
mov
repnz
adc
movsb
jns
dec
mov
adc
shrl
stos
pusha
mov
xor
sub
das
test
mov
repnz
es
in
enter
mov
dec
jno
aam
call
xor
push
pop
test
cs
icebp
push
nop
jb
inc
js
popa
dec
mov
inc
jns
mov
mov
shll
dec
stos
inc
lods
ficoms
or
iret
subl
dec
jecxz
jnp
movsl
sbb
mov
int3
mov
mov
mov
scas
mov
ljmp
shrb
movsb
push
test
adc
nop
cli
ror
lock
stc
or
outsb
sub
sub
push
popa
loopne
stos
adc
inc
push
xchg
xor
pop
mov
cmp
cmp
mov
lcall
loope
mov
fcomps
testb
or
sub
jmp
sub
mov
shlb
rorb
cmpsb
sti
outsb
adc
data16
mov
nop
jnp
or
mov
pushf
lret
insb
imul
ss
fcoms
jg
xchg
jno
ficoml
aam
mov
xchg
loope
leave
testl
push
sbb
addr16
xchg
test
push
push
subl
out
jmp
data16
test
jb
sub
arpl
aas
pop
addb
mov
or
mov
mov
stos
jns
bnd
xor
inc
xchg
jae
add
lods
aas
adc
mov
ficoml
add
or
mov
sub
outsl
ficoms
ret
imul
pop
ror
push
fmul
mov
mov
mov
xchg
mov
cmp
pop
inc
int
mov
push
sbbb
loop
pop
xchg
jae
inc
test
mov
jg
fists
nop
icebp
adc
jnp
xor
fwait
mov
cmp
test
cli
jns
iret
shll
push
int
rolb
push
cld
popf
jge
mov
adc
scas
xorb
xor
insb
push
mov
shlb
push
stos
fxch
push
jo
jbe
mov
inc
sahf
mov
in
dec
lahf
cmp
clc
out
jp
loopne
lods
out
in
pop
test
mov
cli
les
das
es
xlat
push
fidivrl
sub
jne
mov
insb
and
push
arpl
icebp
xchg
dec
iret
cmc
push
push
jns
mov
pop
push
ret
xchg
xchg
inc
aas
pop
dec
xchg
sub
sub
add
out
ds
cmp
test
fs
pop
inc
lock
je
cmp
mov
fisttpl
adc
scas
test
dec
aas
pop
sub
push
je
mov
test
daa
loop
cmpsl
sbb
movsl
outsl
sbb
call
mov
and
ret
pop
adc
les
jge
sub
es
pop
decb
in
loop
sub
lock
mov
scas
pushf
sarl
imul
pop
int3
or
hlt
push
add
push
cltd
or
in
cli
xor
xorb
sbb
and
lods
aam
lret
aaa
stos
add
dec
mov
faddl
jne
lock
outsb
add
push
mov
je
jmp
fs
adc
js
ret
fwait
stos
xor
push
int3
mov
and
dec
xlat
or
jb
xlat
push
and
push
test
lret
test
dec
mov
scas
pop
daa
out
xor
sub
shlb
out
push
out
pop
out
aam
lret
mov
mov
dec
ja
scas
dec
repnz
lods
pop
mov
and
in
arpl
sbb
xor
dec
imul
adcl
sti
mov
stos
ret
mov
shl
cmp
xor
cmp
adc
js
xchg
out
pop
jl
out
int
pop
es
xor
or
loop
aas
out
mov
in
je
outsl
mov
adc
and
adc
fisubl
add
pop
lret
roll
mov
lcall
movsb
aam
adc
movsl
jns
mov
xor
mov
test
ja
and
adc
pop
xlat
mov
call
cwtl
rcrb
insb
add
xchg
add
jae
mov
sbb
inc
pop
mov
xor
adc
push
repnz
icebp
fs
add
sub
dec
in
jbe
sub
xlat
xor
mul
test
insl
dec
pop
inc
push
pushl
pop
inc
pop
adc
sub
stos
mov
sub
pop
jb
sti
jno
xchg
push
shlb
lcall
xor
cmp
call
pop
jle
jbe
aaa
test
addr16
fdivrs
ds
xchg
adc
outsb
inc
dec
imulb
cmp
xchg
xlat
mov
jae
mov
mov
popa
push
add
popa
push
in
pop
push
dec
sarb
push
insb
int
cs
rcrl
pusha
fstl
mov
loop
and
mov
adcl
mov
dec
jbe
ret
negl
adc
xchg
and
sub
mov
stos
stos
es
lds
outsl
gs
xor
and
add
mov
xchg
push
mov
mov
lds
jno
xchg
sar
xchg
mov
js
fs
push
xor
mov
mov
push
sbb
xor
rclb
jg
dec
aad
mov
mov
les
shlb
jnp
dec
scas
jb
in
inc
call
add
hlt
cmpl
push
xchg
and
loope
xchg
in
aas
dec
sahf
daa
sti
imul
loope
xchg
and
mov
test
cltd
adc
mov
repnz
mov
dec
pop
jae
inc
cmp
xchg
lds
ficoml
xor
ret
xchg
stos
in
dec
or
fwait
dec
sub
and
outsb
jg
in
mov
les
cmp
mov
popf
cmp
jns
pop
subb
sbb
orl
enter
mov
pop
pop
push
push
mov
fwait
jge
lods
pop
sub
add
gs
or
pop
inc
icebp
stos
lret
int
dec
mov
and
jbe
lods
insl
repz
sbb
addr16
ror
xchg
test
mov
mov
cmp
mov
int
out
aaa
mov
andl
lret
xchg
out
add
mov
jne
test
inc
or
pop
cmp
mov
pop
adc
mov
in
mov
fs
or
outsb
mov
dec
cmc
mov
cs
or
or
cmp
adc
inc
call
add
mov
roll
xor
dec
aad
ds
stc
testl
xchg
mov
add
ret
int
rcll
call
cmp
pop
xor
cld
pop
jle
pusha
and
mov
scas
testl
cmp
lds
push
push
sub
mov
pop
ret
es
and
subb
insb
xchg
pop
mov
mov
icebp
xor
xor
data16
ds
push
sti
adcb
int3
or
pop
xor
pop
or
adc
out
adc
mov
sub
and
adc
lds
mov
cmpsl
cmpb
xor
into
pop
pop
cmpsl
out
sbb
mov
lret
mov
pop
dec
push
sub
es
push
lods
sahf
mov
fs
lahf
test
popf
frstor
outsl
add
mov
adc
dec
push
icebp
aas
dec
lds
mov
mov
addb
ret
and
mov
cwtl
xchg
add
or
cmp
mov
mov
jge
mov
fsubrl
dec
inc
shrb
dec
push
inc
add
mov
xor
into
jl
adc
lea
xor
lahf
seto
insl
jbe
jmp
sbb
cmc
pop
shll
lahf
sbb
mov
inc
inc
jmp
movb
push
outsl
push
dec
int3
pushf
mov
aas
addb
fidivrs
pop
loope
movsl
fwait
mov
lods
dec
les
mov
pop
icebp
aaa
or
ds
xlat
push
cmpsl
pop
scas
cld
jnp
jmp
jns
xchg
cmp
fimuls
in
iret
repz
inc
mov
jecxz
and
test
mov
pop
inc
imul
faddl
mov
dec
add
ljmp
fidivrs
int
adc
cltd
xlat
or
sbb
xchg
into
inc
into
movsl
and
cmpsb
cli
in
and
lea
test
inc
shrl
wrmsr
lock
mov
inc
cli
xchg
ljmp
jno
dec
add
mov
dec
mov
call
push
and
jg
imul
in
pop
sbb
xor
and
dec
xor
popa
fimuls
js
insl
jb
xor
fldenv
ret
int3
loope
cld
or
jne
repnz
mov
dec
jle
stos
lea
cwtl
shll
leave
inc
test
pop
jmp
push
push
push
addb
repz
sub
aad
incb
test
andl
mov
xchg
cmp
hlt
add
xchg
aam
popa
push
inc
aas
out
rcrl
movsb
arpl
jne
dec
mov
jno
mov
cmpb
aad
xor
xchg
sbb
mov
fimull
sbb
stos
in
mov
adc
imul
mov
test
mov
sarb
jl
cmp
nop
mov
xor
fwait
pusha
or
sub
sbb
iret
dec
dec
loope
div
movsb
bound
jnp
lods
mov
popa
jae
add
sub
into
sbb
adc
sub
jge
inc
test
fsubl
xchg
push
inc
jo
mov
sbb
jae
ficompl
jecxz
add
cs
xchg
push
into
pop
scas
lock
sbb
xchg
xor
lds
mov
gs
and
ss
stc
int
xchg
ja
pop
cmpsl
lds
and
or
or
push
add
and
cwtl
lret
sub
sub
sbb
enter
pop
mov
mov
into
fstpt
movb
cmp
gs
sti
cmp
aaa
cltd
fs
push
iret
fisttpll
popa
ret
repnz
sbb
les
nop
sub
aaa
push
cmpsb
les
ljmp
movsb
dec
xor
pop
test
mov
jo
jns
adc
stc
push
xchg
inc
jecxz
mov
jl
test
popf
fidivrs
je
adc
sti
cli
call
into
in
sbb
xor
and
ret
dec
int3
sbbl
xor
xor
sub
fidivl
popa
pop
mov
andl
jne
jb
add
jb
mov
add
insl
dec
lret
pop
loope
les
stos
pop
dec
lea
rclb
int3
insb
push
roll
dec
icebp
or
dec
or
ja
mov
cli
jne
pop
int
call
vrcpps
outsb
lcall
lods
daa
imul
subl
mov
dec
xchg
sub
mov
icebp
insb
adc
add
hlt
mov
jmp
shll
popf
and
inc
iret
hlt
mov
jns
sub
inc
dec
add
cwtl
pop
pop
sub
adc
orb
dec
and
mov
mov
std
gs
aad
mov
cmc
adc
jne
or
rcrl
movsb
lds
sti
sub
jge
out
mov
scas
xchg
add
hlt
ja
pop
xchg
xchg
testb
lds
fwait
xchg
dec
cmp
mov
mov
mov
gs
dec
int3
outsl
mov
mov
scas
movsb
cs
adc
mov
sahf
and
sbb
and
orl
sbb
pop
out
cmp
scas
jns
jecxz
aam
mov
movsb
cmc
cmp
mov
lret
jl
cld
ret
xadd
sub
inc
mov
or
popa
inc
filds
lret
or
outsb
mov
mov
and
jno
mov
pop
lahf
scas
nop
mov
jge
mov
clc
pushf
fmull
decl
xor
push
push
jns
mov
loopne
sub
mov
push
add
add
cltd
push
int
lcall
cli
sbb
aaa
shll
mov
aad
jmp
xor
adc
loopne
icebp
lret
mov
lret
loope
xor
pusha
add
imul
insl
push
cmp
je
pmulhw
icebp
mov
out
loop
dec
mov
mov
fst
push
stc
cli
xchg
adc
pop
popf
iret
lahf
dec
ret
stos
sbb
test
sbb
frstor
mov
jp
add
and
in
and
or
lds
or
neg
xorl
pop
push
inc
aad
roll
xor
outsl
xchg
sbb
stos
sbb
xchg
adc
js
mov
cld
lds
cmp
push
sarl
jne
fcoms
and
lock
push
mov
inc
mov
mov
fsubrs
cwtl
sti
push
pop
outsb
insl
push
loope
or
int3
rol
int
out
xchg
or
ljmp
out
xchg
aas
test
push
fbld
mov
shll
ficoml
out
popw
xor
and
jmp
pop
fidivl
push
stc
mov
mov
arpl
inc
adc
mov
loop
mov
pop
stos
push
add
mov
outsb
mov
mov
mov
pop
les
jnp
xchg
call
rcr
mov
cmpb
push
sahf
or
test
add
jbe
shl
xchg
out
lods
and
fsubr
jmp
arpl
sbb
addl
xor
jne
pop
dec
adc
inc
stos
mov
lds
fistpl
cmp
aad
repz
mov
fs
xor
sub
dec
jle
adc
mov
addl
cmp
add
bound
mov
fs
jecxz
xchg
jb
insl
inc
sub
scas
sub
jecxz
es
add
outsb
fcomi
dec
mov
les
loope
sub
leave
mov
pusha
lahf
mov
push
insl
cmpsb
and
add
gs
jae
pop
push
in
test
mov
in
test
testl
cmc
sbb
mov
ss
data16
sti
dec
pop
xor
loopne
adc
cs
ret
sbb
mov
mov
mov
rcl
adc
out
lods
or
sti
dec
lcall
clc
daa
movl
xchg
cmpsb
push
inc
xchg
xor
paddusw
ds
jo
and
and
jo
adc
inc
cld
cpuid
adcb
adcb
insb
or
sub
sbb
or
push
push
in
adc
adc
fiadds
and
inc
movsl
out
adc
stc
mov
stc
or
ja
pop
inc
jns
hlt
cltd
int3
jmp
orl
xor
out
lds
push
inc
fcomps
iret
popf
out
xchg
push
int3
sub
dec
cmp
pminub
jb
sbb
fadds
sbb
dec
xor
jo
add
push
dec
into
adc
add
or
dec
int
sbb
lds
scas
lock
lods
mov
xchg
ficoms
mov
outsb
jno
mov
or
in
fsubrl
dec
call
mov
lock
xorb
mov
mov
mov
scas
int
add
into
dec
lock
nop
sub
cmp
inc
je
test
mov
jecxz
cmp
leave
cmp
jns
push
add
in
mov
stos
fiaddl
gs
data16
sbb
orb
jp
notl
mov
mov
jmp
std
out
xchg
lock
data16
xchg
je
pushf
in
out
mov
int
cmp
dec
decl
sub
mov
pop
in
xor
fst
and
dec
punpcklbw
outsl
fcmovbe
and
fwait
push
sub
pop
fdivl
jo
lret
or
push
sbb
sbb
hlt
dec
or
pop
call
mov
mov
push
ret
stos
pop
and
ds
out
mov
shr
test
pop
iret
popa
test
xlat
dec
subb
and
sbb
cltd
dec
pop
test
insl
inc
push
adc
or
cmp
std
popf
sbb
negl
mov
sub
jmp
add
cmp
xchg
cmp
movsl
lods
stos
cld
leave
scas
ds
mov
out
adc
mov
ret
mov
pop
fistpl
sbb
dec
lret
fcomps
xchg
insl
dec
movsb
js
lods
iret
inc
push
loope
inc
inc
add
mov
mov
into
scas
pop
inc
jb
dec
add
gs
mov
push
into
lds
jno
dec
sbb
sub
xchg
repz
adc
icebp
shlb
shll
mov
sbb
lods
sbb
stos
and
push
xchg
fstl
repnz
movsb
loopne
lcall
add
rcr
or
daa
sbb
and
loope
lea
fs
leave
sub
aas
pop
iret
daa
jl
dec
mov
rcl
dec
push
mov
cltd
inc
and
pop
fdivrl
in
popa
ja
sbb
out
sub
iret
push
fs
call
or
push
cmp
rcl
repz
enter
jp
fdivl
jae
lret
shll
xor
lds
push
or
xor
aaa
push
inc
cmp
mov
inc
dec
setbe
pop
rcll
jno
push
cmp
testb
ret
cwtl
push
jbe
cmp
mov
cmp
xorb
pop
pop
xor
push
aam
lods
push
xor
lcall
jl
js,pt
dec
shll
adc
sbbl
cmp
bound
into
out
mov
inc
rcrl
jne
add
popa
fisubs
jne
jae
ss
js
inc
xchg
fmuls
out
mov
mov
clc
mov
shlb
push
jecxz
pop
cmp
add
jmp
mov
ja
ja
repz
lods
aad
mov
and
cld
stos
xchg
pop
cld
jg
fstps
mov
adc
xlat
mov
aas
mov
pop
adc
aas
pushf
xchg
cmp
frstor
sbb
addl
xor
shrl
popf
push
mov
xor
adc
pop
jae
mov
std
or
adc
cld
xchg
add
pop
pop
or
lea
loope
in
push
sarl
je
inc
xlat
mov
decb
cmp
mov
dec
sbb
pop
cld
or
dec
jno
cld
jp
xor
xchg
cmp
lcall
push
sbb
imul
mov
fdiv
cltd
and
jo
pusha
es
add
movsl
loop
push
aad
in
or
ss
add
cmp
jmp
dec
sbb
pop
xchg
xchg
in
cs
outsl
jecxz
popf
ret
push
lds
xchg
das
shl
sbbl
hlt
sbb
mov
adc
mov
leave
push
js
mov
xor
jo
adcl
iret
inc
push
out
test
adc
inc
xchg
inc
out
inc
dec
mov
xchg
data16
pop
jae
jg
push
add
lds
movl
loop
insl
dec
lret
mov
aas
inc
mov
jmp
jl
daa
cmpsl
pop
xchg
testb
jg
sub
pop
movsl
jge
mov
xor
mov
scas
sbb
dec
jbe
cmp
push
mov
cmp
loope
mov
push
and
cld
imul
pop
shll
mov
mov
fadds
inc
mov
in
outsb
notl
inc
mov
sbb
das
cld
mov
inc
dec
in
sbb
xchg
int
push
push
loope
or
jbe
into
inc
fbld
popf
cld
inc
nop
pop
and
xor
mov
adc
and
fs
and
mov
mov
imul
cwtl
mov
sub
dec
cmpsl
push
sub
cs
testl
mov
ljmp
pop
outsb
les
adc
xchg
leave
popf
sbb
sub
mov
inc
ja
shrl
inc
mov
fiaddl
mov
into
push
movsl
test
xchg
hlt
cwtl
imul
xchg
clc
xchg
mov
xlat
in
iret
shl
add
rcl
sub
adc
leave
fs
sbb
enter
scas
in
mov
jecxz
push
dec
xchg
shrl
pop
stos
cmp
sbb
lahf
pop
add
jmp
add
mov
sbb
xor
adc
bound
nop
cmp
int
cmp
jno
cwtl
xchg
inc
mov
xchg
jae
rorl
dec
xchg
push
shr
call
pop
xchg
imul
ja
aaa
jp
xor
adc
adc
arpl
sbb
sub
push
hlt
cld
mul
jno
mov
stos
xor
aaa
sbb
lds
loop
xlat
xor
cwtl
add
ss
sbb
mov
inc
out
movsb
lods
jb
adc
stos
stos
fsubrl
scas
pop
in
rep
pop
or
pop
jo
idivb
out
jg
xchg
in
xor
insl
les
inc
outsl
inc
lret
rcl
mov
cmp
push
xor
fs
mov
std
cld
xchg
sbb
cld
inc
jne
test
stos
cwtl
pushf
test
pop
loop
aas
scas
jb
pop
in
jl
push
cld
int
out
or
mov
out
pop
jo
pop
sub
mov
fs
add
test
sbb
dec
es
out
leave
cli
xor
push
std
aad
xlat
add
adcb
or
lcall
aaa
ficomps
jno
pushf
sub
pop
subl
or
fsubl
clc
and
push
adc
or
push
pop
push
xchg
push
jp
cmpsl
jbe
imul
pop
dec
adc
cmp
and
jb
add
sub
jmp
jb
mov
ds
add
in
mov
sub
fxch
data16
adc
lock
inc
ret
xchg
lock
outsb
imul
inc
call
mov
push
mov
mov
bound
xchg
aas
inc
aad
and
xchg
mov
sbb
push
test
dec
pop
cmp
xchg
jmp
movsl
movsl
scas
mov
dec
cmc
cmp
cmc
arpl
sbb
js
dec
in
and
scas
xor
movsl
aad
sub
cmpsb
xor
jns
or
out
int3
mov
jl
dec
decb
add
pop
push
or
xor
dec
inc
leave
mov
pop
mov
dec
sub
stos
sub
xor
cmp
and
bound
push
add
mov
adc
stc
outsb
dec
test
ds
pop
inc
ret
mov
aaa
mov
push
pop
rol
test
ficoml
inc
and
movsb
lods
sub
push
sub
or
mov
pop
dec
mov
mov
mov
pop
push
xchg
lds
xchg
clc
xchg
mov
xchg
lahf
mov
mov
andb
cs
andb
mov
stos
rol
xchg
jne
cltd
sti
ljmp
daa
das
imul
or
pop
xchg
xchg
adc
mov
lahf
aad
arpl
mov
mov
jg
mov
iret
lock
inc
pop
clc
or
sar
mov
jb
inc
aad
leave
sbb
pop
sahf
jle
jmp
add
push
insl
jle
xor
fcmove
adc
repz
cmp
dec
jo
add
mov
faddl
call
negb
dec
popf
shll
mov
mov
imul
ret
sbb
sbb
in
pop
loop
daa
and
xlat
je
dec
sub
jl
inc
repnz
lret
dec
dec
scas
adc
pop
stos
movsb
pop
dec
pop
cs
and
cmp
jo
stos
ret
in
pop
xchg
lcall
popa
js
paddusw
cmpsl
mov
jecxz
outsl
int
filds
out
loopne
stos
cmp
adc
inc
leave
sub
in
call
xor
jo
cmpsb
sub
xchg
rol
aas
mov
sub
cld
mov
push
int
jmp
cmp
fidivl
clc
leave
dec
xchg
fstpl
out
out
cs
push
popf
pop
jg
ja
inc
ja
push
cmp
mov
cmpsl
aam
mov
push
popw
cmp
fucomp
pop
bound
xchg
out
adc
pusha
imulb
ret
cwtl
aaa
pop
inc
jmp
repnz
jmp
pop
sbb
popa
cltd
cs
bound
push
add
lahf
jne
sbb
xor
hlt
xchg
pop
xchg
or
fnstcw
imul
stc
cmpsl
sub
fisubrl
jns
add
int
mov
jg
adc
mov
mov
jg
imul
mov
into
ds
push
adc
inc
xor
leave
sbb
dec
inc
sub
aas
lods
dec
popa
ja
add
cmp
hlt
cmc
jbe
out
mov
mov
jo
loop
jge
pop
aas
or
sub
aas
sbbl
pop
push
lcall
daa
lea
xor
jp
lods
out
mov
pop
daa
in
dec
rolb
repnz
out
or
or
clc
aam
stc
inc
fucomp
adc
add
and
arpl
add
mov
sbb
scas
movq
cltd
jne
and
and
testl
loopne
add
and
mov
sarl
imul
pop
mov
xchg
imul
xor
dec
in
and
daa
pop
sbb
arpl
imul
sbb
and
daa
mov
cmpsl
jns
push
imul
stos
or
xor
std
hlt
loopne
clc
push
xor
jo
add
movsl
mov
out
test
xor
ret
rolb
cli
ljmp
shlb
mov
adc
cmp
mov
out
mov
fwait
or
ret
sbb
pop
xchg
lock
imul
mov
fistl
pop
and
adc
out
pop
mov
and
imul
ret
pop
mov
arpl
cli
and
xchg
out
pop
iretw
test
pop
xchg
mov
loop
or
jl
imul
add
enter
mov
stos
push
jle
sbb
mov
inc
das
je
xor
loopne
jo
enter
mov
push
sbbb
nop
add
dec
into
nop
or
mov
in
push
int
leave
ljmp
pop
in
sahf
arpl
cmc
or
std
pop
ret
jnp
xchg
sti
aad
push
inc
hlt
or
rolb
jns
sahf
cmpsb
bound
xchg
les
push
mov
pop
mov
ja
sub
insl
cld
ss
push
ljmp
xor
cmp
lcall
gs
divb
xor
lods
xor
dec
mov
dec
rclb
or
dec
inc
sub
ret
fdivl
out
cmp
xor
jno
aam
aad
mov
shlb
imul
ljmp
aam
cltd
dec
pop
fimull
mov
fwait
dec
rorl
popf
data16
dec
push
lods
jnp
push
add
clc
lea
or
test
jbe
into
nop
clc
repz
or
rclb
iret
mov
dec
cld
nop
fistl
out
and
in
mov
push
mov
leave
sahf
pushf
arpl
add
mov
mov
or
insl
and
in
aad
cmp
jno
mov
mov
mov
mov
mov
shrl
stos
lods
xchg
into
mov
pop
mov
sbb
int
mov
inc
xor
push
loopne
jp
pop
imul
jl
mov
mov
scas
jmp
rorb
jg
mov
dec
lods
jne
inc
outsb
jns
jle
std
stc
ljmp
push
cs
push
inc
push
add
fsubl
dec
jnp
out
pop
fdivrp
push
and
insb
scas
adc
insb
lock
sbb
inc
sbb
lret
xor
push
jns
mov
push
addb
push
mov
lds
jle
out
rorb
scas
movzwl
cld
inc
sbb
andb
insb
scas
adc
jecxz
ja
fdivp
xchg
cmc
xchg
out
loope
in
xchg
dec
mov
cmpsb
dec
push
lret
test
dec
push
xchg
sub
fs
dec
int3
testl
mov
out
dec
push
leave
and
out
add
inc
cmp
loopne
movsl
sbb
mov
loop
inc
jl
xor
js
lcall
xchg
mov
lock
jnp
ds
iret
lret
mov
sbb
sahf
pushf
sbb
sbb
dec
ror
sbb
push
and
fidivl
out
xor
pusha
push
mov
fwait
xchg
test
cmp
push
jae
xchg
imul
jl
movsl
ret
cli
add
leave
in
mull
fnstsw
xchg
pop
fistl
or
or
icebp
jp
aas
sbb
xor
out
imul
gs
jmp
andb
test
pop
in
daa
lret
inc
fs
dec
push
stos
lahf
test
or
loopne
or
sub
mov
lods
fwait
adc
call
in
xchg
testb
xchg
push
jg
push
pusha
xor
ret
pop
mov
mov
or
add
cwtl
inc
mov
inc
push
push
enter
test
aad
sahf
out
addr16
stos
neg
clc
lods
add
dec
xchg
inc
mov
repnz
xchg
in
jb
icebp
xchg
and
mov
movsl
dec
sub
or
mov
push
mov
test
cltd
adc
push
mov
jp
rcr
movsb
imul
pop
cltd
jnp
xor
jp
adc
pop
cwtl
fstl
in
mov
aam
inc
push
insb
or
loop
jl
scas
loop
add
ds
push
scas
adc
aas
mov
or
aad
ss
lret
leave
mov
pusha
cmc
mov
mov
sbb
mov
xlat
aaa
aam
push
sti
bound
inc
lea
push
jbe
add
aad
repnz
mov
mov
mov
inc
sti
imul
stc
push
mov
mov
dec
das
dec
add
push
out
inc
addl
mov
pop
hlt
lea
je
sub
push
mov
lcall
add
sub
cmp
test
jae
sbb
pop
add
fisubl
cmp
aaa
mov
int3
cmpsl
jle
fadds
and
sbb
push
shrb
add
or
pushf
inc
push
dec
lea
mov
ficoms
push
std
testl
or
jl
cmp
pop
mov
iret
iret
sahf
pop
idiv
test
jmp
pop
in
pop
jg
pop
cmpsb
subb
into
mov
xor
inc
daa
das
mov
iret
es
cmp
jecxz
cmpsb
sub
cmp
adc
fsts
adc
xchg
xor
pop
cmc
and
sub
mov
adc
loop
or
xchg
fabs
and
or
shll
out
xlat
nop
mov
iret
jecxz
testb
out
ret
add
push
or
dec
sub
jp
add
sbb
js
imulb
mov
imul
int3
pop
sar
int
aaa
pop
push
push
inc
lods
mov
cli
lcall
shlb
cmc
sbbl
cmp
cmp
sbbb
test
xor
ss
xchg
push
rcl
cmp
jecxz
stos
pop
dec
test
xchg
or
and
adc
cmpl
push
dec
xchg
mov
mov
sti
adc
aaa
mov
std
lock
jecxz
fstl
sub
stc
mov
loop
xchg
popa
imul
lret
and
sbb
or
repnz
lods
std
sub
sbb
cld
cmp
loop
sqrtps
shld
cmpsl
and
sti
fcomps
and
lahf
idivl
cmp
lods
sub
cmpsb
rolb
pusha
xchg
sahf
mov
popa
les
setne
xchg
movsb
pop
push
sti
ljmp
jno
int3
add
je
icebp
inc
rcll
leave
cmpl
mov
dec
mov
ret
dec
movsl
mov
out
test
cmp
in
sub
cmc
cmp
into
mul
sub
rcll
push
aas
out
dec
leave
daa
pop
icebp
iret
mov
in
or
pop
pop
out
xchg
mov
push
movlps
sahf
xchg
test
jp
repz
daa
testb
and
cmp
arpl
movsl
out
mov
negb
add
inc
out
negl
sti
push
sub
add
inc
mov
rcll
test
bound
dec
pusha
movsb
loopne
cmpsl
adc
mov
mov
mov
and
rorb
popa
push
dec
xor
sbb
jecxz
xchg
push
jge
dec
sbb
lret
test
es
imulb
test
mov
lahf
movl
icebp
stc
sub
es
imul
mov
jg
fists
std
aaa
idiv
xor
ds
push
pop
nop
fimuls
xchg
jnp
scas
push
mul
mov
sbb
pop
adcl
lea
out
mov
mov
or
hlt
es
shlb
into
mov
add
test
xchg
xor
push
jbe
sarl
inc
jecxz
out
pushw
cli
pop
mov
push
test
outsb
stc
mov
jmp
ja
sub
mov
jbe
mov
mov
aad
je
and
aam
mov
xor
in
movsl
clc
cld
fidivl
jb
add
leave
ret
dec
aas
out
test
pop
rolw
fadds
outsb
jnp
mov
sbb
int
cmp
adc
addr16
xchg
jmp
mov
cmp
jbe
or
out
insl
notl
cmp
outsl
ficoml
pop
lea
and
imul
nop
xchg
test
xor
lods
pop
add
stos
pushf
adc
lock
pop
cmp
xchg
jecxz
ret
sahf
test
scas
imul
aaa
scas
pop
mov
dec
or
out
dec
enter
mov
ror
insb
clc
shlb
mov
mov
iret
pusha
sbb
mov
scas
int3
test
test
mov
loop
aad
in
inc
repnz
in
shll
popf
adc
lods
cwtl
and
into
adc
pop
inc
sti
sbb
gs
lds
mov
jae
jo
lods
in
xchg
shr
scas
std
and
xchg
push
inc
cli
dec
mov
and
clc
test
addr16
push
dec
fcomps
push
push
xchg
and
push
inc
in
adc
sub
icebp
imul
mov
rcrl
fiadds
pop
lcall
fcoml
aaa
jecxz
mov
xor
pop
out
dec
scas
cmp
push
add
jle
push
pop
mov
bound
add
sar
pop
sub
ret
dec
inc
adc
outsb
pop
push
dec
mov
adc
cmpb
dec
repz
ja
mov
xchg
fimuls
mov
jp
es
cmp
shrb
ljmp
xchg
adc
sub
mov
mov
mov
dec
xor
test
enter
int3
iret
fsubl
les
clc
pop
sub
xor
mov
xlat
push
xchg
add
lcall
inc
data16
lcall
sub
mov
inc
movsl
call
mov
popa
mov
sahf
mov
test
rolb
lcall
stos
pop
pop
mov
cmpl
lds
repnz
cmp
cmpsb
jmp
add
mov
inc
fldenv
cmpsb
mov
xor
mov
adc
inc
xlat
dec
mov
fiadds
loope
lods
sbb
and
push
daa
lea
sub
pusha
hlt
lods
sbb
in
icebp
stos
out
add
aad
das
dec
adc
jno
pop
xlat
fcompp
rorb
insl
xchg
cmp
mov
fimuls
cmp
xlat
fwait
insb
loop
shlb
inc
pushf
out
xor
and
bound
lea
add
int3
mov
cmp
push
ljmp
mov
rclb
test
xchg
cmpsl
jge
add
hlt
fwait
stc
fdivr
lods
lods
out
fst
adc
das
push
in
jle
dec
stos
lock
hlt
push
add
pushf
and
loope
push
mov
addb
xchg
lret
sbb
mov
jmp
push
mov
hlt
call
xor
inc
xchg
xor
xchg
mov
or
adc
das
pop
jbe
nop
and
mov
adc
wbinvd
inc
push
cmpsb
push
hlt
cmp
and
xchg
mov
stos
scas
ret
dec
add
cltd
sbb
hlt
or
daa
out
xor
mov
in
xor
ljmp
xchg
xchg
jp
pop
shrl
repz
jne
aaa
cmpsb
jg
xor
jno
mov
and
test
fs
jnp
mov
rcrl
and
sbb
inc
shlb
lea
push
push
mov
mov
sbb
xchg
push
repz
insl
jg
setnp
push
mov
jle
jmp
sbb
mov
and
call
add
fisubl
push
frstor
es
or
insl
inc
push
pop
mov
sbb
gs
mov
pushf
mov
dec
sarb
aas
cmp
andl
push
outsl
je
loope
cmp
jo
je
adc
mov
cld
push
xor
mov
add
aaa
insl
outsl
mov
mov
arpl
and
aad
pop
stos
sbb
sbb
mov
inc
xchg
lods
mov
lahf
sbb
push
cltd
fbld
add
imul
cs
js
clc
push
fcompl
in
or
push
dec
fbstp
jno
gs
insb
js
jmp
ficoml
leave
or
mov
pop
test
cmc
test
inc
xor
pop
outsl
mov
fsts
add
xchg
cli
nop
push
and
std
inc
sbb
push
clc
adc
cmp
mov
add
jb
inc
cmp
insb
daa
test
pop
mov
sbb
fstl
jb
jno
clc
jne
and
stos
sub
mov
add
jns
jp
xor
mov
jnp
loop
or
and
or
jmp
stos
xlat
repnz
push
in
mov
mov
sub
inc
cmpsl
into
lea
jns
push
add
push
mov
xchg
cmpsl
sbb
jge
pop
gs
in
lret
and
mov
pop
cs
out
cli
and
dec
xor
jnp
ljmp
mov
fistl
test
cmp
cmp
pop
mov
cmpsb
cmp
xchg
push
pop
push
cmp
mov
xchg
aam
push
xchg
loop
iret
xlat
sub
pop
movsl
add
cltd
hlt
lea
mov
dec
insl
cmp
lahf
cwtl
divl
addr16
xchg
xor
rcr
shl
out
fwait
iret
sub
sub
jbe
aas
scas
or
lret
pop
out
sbb
sahf
and
xchg
or
ljmp
pop
dec
inc
test
repnz
imul
add
xchg
xchg
or
cmpb
cmp
repz
cmp
in
xchg
je
cld
fiaddl
mov
sarl
jle
add
mov
movsl
outsb
outsb
or
dec
ljmp
js
jecxz
sahf
xlat
pusha
in
mov
ret
ret
mov
pop
shlb
and
mov
jp
inc
adc
insl
sarb
in
push
in
push
lcall
cwtl
xchg
stos
or
sbb
pop
push
add
aad
cmp
fs
gs
xor
mov
xlat
adc
pop
out
outsb
outsl
jg
push
fisubs
and
dec
add
sub
dec
iret
jbe
aaa
mov
pop
pop
mov
or
add
popa
sub
inc
sub
rorl
adc
jno
sahf
test
gs
adcl
scas
out
scas
mov
into
jp
scas
xchg
repnz
pop
ja
pop
adcl
imul
mov
mov
andl
inc
adc
push
xchg
mov
mov
aad
lret
fidivl
sub
fmul
cmpsb
mov
jne
dec
test
push
aam
pop
ss
cmp
mov
adc
pushf
in
xchg
and
push
add
dec
add
sbb
rcrl
mov
loope
mov
sti
mov
inc
pop
xor
sub
shl
cli
ss
or
ja
cmpsl
inc
xchg
sbb
dec
cmp
and
add
daa
in
mov
rcll
mov
dec
mov
mov
mov
pop
test
mov
pop
pop
pop
or
mov
jnp
das
lods
dec
push
lods
in
arpl
cmpsb
cmp
iret
je
outsl
outsl
and
cwtl
xor
mov
jle
add
mov
imul
shrb
and
jne
push
add
int3
arpl
xchg
pusha
popf
cmp
mov
sub
add
cmc
lods
hlt
mov
mov
lcall
fbstp
stos
mov
or
push
xor
mov
xor
pop
fildll
inc
push
ljmp
pop
pushf
es
and
shll
pop
in
jnp
sbb
int
insl
dec
mov
xchg
sbb
add
inc
jg
push
xor
jne
mov
in
adc
dec
popa
test
add
fldt
stos
and
dec
mov
mov
push
cmp
popf
cmc
jb
movsl
loop
pop
fnstcw
dec
pop
pop
xchg
fs
xlat
out
stos
and
rcrb
stos
data16
xor
shll
popa
int
dec
jp
jnp
xor
adc
subb
data16
mov
fs
lret
adc
xchg
jecxz
loopne
mov
and
dec
add
inc
jo
stc
into
adc
loope
push
cmp
mov
fwait
jle
shll
hlt
jg
mov
scas
imulb
mov
pop
fisubrs
in
xor
jnp
jo
out
repz
rol
or
test
or
mov
sbb
pop
push
loope
jo
fs
adc
stc
out
mov
mov
xchg
adc
decb
push
lcall
push
into
sbb
outsl
push
inc
stos
mov
inc
lods
mov
sbb
test
or
and
leave
push
popf
scas
std
push
push
inc
xlat
mov
out
dec
push
lods
mov
jo
scas
jns
or
rcrl
sub
repz
mov
mov
mov
je
je
sub
mov
shlb
jp
jecxz
sahf
mov
pop
lea
ja
leave
fmuls
cli
loop
mov
mov
test
pop
adc
xchg
movsb
dec
call
xor
repz
insb
out
cmp
cmpsl
or
ret
xor
fwait
push
push
icebp
push
pop
dec
icebp
and
xchg
jbe
loope
ja
loop
repz
or
lock
dec
or
jmp
cmpsl
fiadds
icebp
mov
sub
cmpsb
xor
stos
hlt
stc
les
cmp
lods
add
cmp
push
nop
movsl
push
leave
xchg
pop
jnp
push
cmpsl
fistpl
push
mov
jecxz
dec
mov
adc
adc
adc
lcall
push
jno
out
icebp
lods
sbb
jmp
sbb
sub
cmpb
lods
std
fimuls
push
adc
dec
shlb
dec
arpl
xor
cltd
popf
sbb
cmp
dec
mov
inc
clc
pusha
call
js
add
and
or
mov
int3
jmp
push
pushf
pop
mov
leave
aad
jl
cs
inc
sbb
dec
inc
mov
mov
or
push
in
cltd
ss
test
mov
push
mov
xchg
jne
das
clc
mov
cmpl
mov
cmp
push
jg
stos
pop
jae
xchg
cs
jp
int3
jmp
or
cwtl
cmp
sbb
cmpb
add
xchg
loop
add
in
cmp
dec
addr16
les
mov
in
and
xchg
cmp
adc
ret
int3
sub
hlt
out
mov
jg
xor
cwtl
rcl
aaa
movsl
mov
add
ja
cs
push
out
ja
jno
in
mov
int3
mov
and
jg
fs
pop
cmp
nop
mov
leave
cmp
iret
inc
test
fstl
fmuls
or
mov
add
jns
addl
dec
xchg
sub
adcl
mov
addr16
fistps
loop
lret
aas
cmp
push
cwtl
xchg
sbb
mov
or
or
mov
cmc
test
add
jbe
sbb
push
sub
addb
jge
xchg
mov
dec
xorb
call
movsl
mov
mov
xchg
je
int
ds
ret
or
push
bound
dec
mov
stos
mov
out
ljmp
mov
add
sti
cld
xchg
test
in
loope
sub
out
adc
fiaddl
call
dec
and
in
div
fdivs
ret
jmp
push
add
cmpsl
push
mov
jmp
icebp
inc
div
pop
inc
pop
push
sbb
sbb
pop
mov
cltd
roll
sarl
cmpsl
jae
mov
int3
stc
call
pop
pop
or
test
daa
in
xchg
sub
xchg
jbe
pusha
mov
cltd
xchg
mov
jle
sbb
subl
arpl
cmp
push
je
in
mov
dec
loopne
addb
xchg
out
or
orb
hlt
fimull
jbe
pop
mov
mov
ljmp
xchg
pushf
mov
xor
dec
ret
cmp
lods
sbb
aaa
aas
and
pusha
xor
inc
std
push
jbe
ret
cmpsb
das
adc
mov
ljmp
loop
push
push
inc
dec
movsl
je,pt
cmp
loope
ja
mov
sbb
pop
push
push
push
mov
and
out
add
jnp
outsb
ljmp
daa
lret
add
out
inc
test
shl
push
jne
sub
lret
in
push
push
mov
push
jge
nop
xor
jg
dec
sbb
dec
cmp
enter
mov
cmp
push
test
jns
xchg
sub
stc
sbb
and
inc
sub
cmpsl
lret
outsl
mov
in
fiadds
std
jo
pushf
stos
mov
dec
out
lcall
lock
cmpsb
fst
xchg
xchg
fcom
xchg
push
mov
pop
push
or
int3
aaa
into
dec
jp
and
pushf
pusha
mov
sarl
fwait
scas
fisttpl
shl
add
adc
lcall
fisttpll
cld
mov
pop
jg
arpl
mov
mov
sub
push
cli
jo
je
mov
jp
ds
fisubl
jne
pop
or
sti
aam
arpl
jge
mov
repz
pop
jnp
inc
ret
lcall
jge
lock
mov
sbb
inc
ja
test
cmpsl
cltd
cli
shrl
inc
add
jle
and
in
pop
cld
ljmp
and
sub
jns
push
fnsave
loop
int3
imulb
pop
je
cmp
movsb
cli
cld
mov
add
sbb
icebp
arpl
xor
xchg
xorl
sbb
out
pop
in
xorb
popa
je
and
xchg
adc
sub
jl
push
mov
in
icebp
enter
cmpsb
dec
rcr
ror
imul
fadd
pop
arpl
jne
lds
loop
mov
sbb
mov
sub
push
shll
imul
sarb
out
sub
mov
xchg
pop
fmuls
testl
mov
push
fstp
into
cs
sbb
cmp
les
jg
mov
mov
inc
push
cmp
out
push
pop
mov
push
sbb
jle
lds
jo
movsl
sbb
mov
inc
xchg
icebp
pop
mov
test
mov
mov
leave
sti
bound
cwtl
and
add
mov
add
ljmp
pop
loope
nop
mov
push
sub
cmp
push
fdivrs
and
or
add
mov
xchg
cwtl
push
pop
xor
sub
sub
flds
xchg
sbb
stos
fwait
dec
mov
mov
insl
test
sub
and
cmpsl
cmp
cwtl
stc
stos
push
rorl
test
ss
imul
ja
push
pop
test
cmpsl
fisubs
icebp
outsl
cmpsb
mov
test
stos
jae
ficoms
sub
int
enter
andb
add
loopne
cli
ret
pop
sbb
sahf
xchg
testb
xchg
cwtl
xchg
lret
scas
imul
lsl
jo
loope
iret
ljmp
push
aam
lcall
enter
mov
add
jge
sbb
loopne
repnz
outsb
rorb
mov
mov
adc
cmc
mov
add
sbb
ja
mulb
mov
mov
inc
or
sub
mov
mov
in
mov
lcall
mov
dec
pop
jle
cmp
pop
push
loop
loopne
xchg
mov
jg
push
hlt
cmp
cmp
repz
pop
popf
int
adc
scas
pop
pop
mov
dec
cmp
popf
sub
pop
movsb
inc
addr16
xchg
push
mov
cltd
pop
cmpsl
mov
mov
outsb
inc
in
popa
test
adc
mov
scas
aaa
and
mov
rcl
cmp
adc
iret
jle
shrb
test
cmpsb
mov
sbb
cld
dec
je
jmp
jno
rcll
mov
dec
push
ljmp
cmp
adc
push
adc
insb
idiv
lcall
pop
lahf
adc
leave
lret
mov
add
aam
mov
jae
inc
outsb
rcrb
adc
iret
movsb
lods
add
repnz
inc
fwait
cmp
data16
sub
pop
das
inc
dec
shlb
scas
mov
movsl
lret
int3
std
dec
stc
jecxz
scas
cmp
cmp
push
mov
dec
sub
push
jnp
les
frstor
mov
scas
cmc
in
mov
and
cltd
mov
jnp
jge
sbb
std
insl
or
jp
xlat
mov
into
subl
dec
dec
mov
cli
cli
nop
leave
push
xchg
jae
or
mov
mov
adcl
lods
scas
inc
ret
sub
push
and
lahf
sub
xlat
mov
popa
inc
mov
sbb
push
fdivs
push
das
mov
not
cmp
jae
data16
jle
inc
dec
dec
rcrl
jbe
adc
sbb
int3
jbe
mov
jecxz
movsl
jae
sbb
mov
dec
fs
nop
add
dec
adc
jne
movsl
int
adc
lods
aad
sub
data16
xchg
shrb
or
cli
inc
mov
clc
xchg
add
cmpsl
mov
jb
add
or
mov
sub
xchg
cmp
xor
lret
std
scas
jge
je
or
ret
or
sahf
xor
divl
jl
shl
cmp
scas
mov
jmp
bound
in
push
cmp
push
pop
fwait
cmpb
popf
sub
aas
aaa
cwtl
ficomps
sarl
push
scas
hlt
fdivrp
repz
sub
pop
cmc
mov
or
push
in
mov
dec
in
jle
jmp
and
mov
xchg
hlt
push
or
add
shlb
pop
bound
jp
add
add
push
jo
maxps
sar
mov
jo
out
xchg
mov
push
lea
adc
cmp
sahf
out
popa
jmp
pop
mov
push
sub
sbb
mov
std
push
int
inc
pop
dec
pop
mov
cmpsb
mov
pushf
xchg
dec
cmp
and
push
xchg
cmpsb
dec
int
dec
cmovl
dec
insb
mov
subb
mov
push
popf
mov
or
mov
push
in
push
sbb
sbbb
jns
lea
mov
sbb
mov
push
sbb
ret
mov
mov
or
fsubrp
push
inc
add
and
pop
lahf
das
mov
bound
jmp
xchg
pushf
cmp
stos
cli
inc
leave
frstor
pop
and
adc
jnp
or
pop
mov
inc
aaa
mov
pop
lea
xchg
mov
mov
dec
movsb
rclb
pop
xchg
ds
or
cmp
xchg
loopne
cwtl
mov
ror
idivb
pop
push
test
mov
adc
popa
negl
pusha
dec
sbb
repz
sbb
and
pop
dec
pop
call
repnz
push
in
or
mov
es
add
jnp
leave
add
lock
mov
sub
stos
mov
pop
pop
loopne
ret
jne
xchg
leave
mov
int
mov
xchg
xchg
icebp
sbb
and
call
pop
pop
sub
aaa
xchg
push
xchg
je
ffree
test
pusha
cs
and
jp
inc
push
pop
lcall
add
dec
and
lahf
dec
in
push
cmp
mov
pop
sbb
jnp
in
iret
fwait
in
pop
fisttpll
test
fldenv
dec
xor
and
mov
sub
test
add
ficompl
jnp
mov
das
fwait
cmc
daa
mov
or
loopne
push
mov
loopne
mov
cs
xor
mov
dec
mov
jle
inc
and
sub
xchg
push
ret
adcl
pop
jb
in
and
jge
mov
hlt
aad
sarl
rorb
dec
inc
popa
stc
inc
fisubs
mov
xchg
xchg
sub
sbb
dec
sub
adcl
xchg
cmp
push
add
enter
or
jo
pusha
jns
shrl
cmp
push
add
addr16
hlt
jb
cmpsl
add
mov
loop
push
fcmovbe
sti
inc
repz
cmp
fnstcw
xchg
negb
xchg
aas
loopne
lods
sbb
or
or
lret
rclb
scas
xchg
push
test
mov
inc
lcall
ret
pop
inc
sahf
in
pop
out
lret
push
xchg
xchg
out
loopne
pop
stos
int3
cld
push
jns
pusha
jp
sub
clc
mov
push
inc
push
imul
mov
ficompl
arpl
stc
sbb
pop
scas
enter
out
stos
mov
fucomp
adc
out
cltd
jae
jne
sub
xchg
sahf
fstps
sub
mov
shll
push
xchg
nop
pop
sbb
cmpsl
mov
fnstsw
jne
xchg
dec
mov
addr16
cmpb
or
push
sti
daa
push
xor
pusha
ret
mov
jb
test
neg
hlt
shrb
push
subb
ret
loope
cs
dec
adc
xchg
cmpsb
das
je
movsl
xchg
pop
test
dec
xchg
rorb
mov
pop
pop
mov
pop
cwtl
xchg
andl
jge
xchg
jo
or
fistpl
jb
cld
jne
mov
popa
pop
movsb
ret
add
aaa
cli
fimull
fmul
flds
cmpsb
or
movsb
or
test
addr16
sub
lds
data16
aam
pop
sub
das
xor
mov
fistpl
push
jo
jbe
popa
aam
adc
jmp
pop
and
test
push
movsl
out
je
test
jge
addr16
adc
imul
mov
add
mov
out
jns
mov
aam
les
jae
sbb
or
jbe
in
nop
xchg
shlb
and
icebp
into
repz
add
stc
mov
insb
insl
loope
adc
lds
mov
adc
mov
movsb
psraw
dec
lea
cmc
clc
stc
mov
sbb
push
push
fimull
jl
data16
push
adc
ljmp
loopne
jecxz
xchg
sbb
shrb
cmpl
data16
add
xor
xchg
arpl
shll
pop
push
sub
push
jns
and
cmp
lods
inc
sahf
sahf
adc
sbb
les
push
lcall
jmp
lret
push
lds
addr16
mov
dec
jl
fwait
pushf
inc
call
rcr
lahf
push
data16
push
loop
inc
xor
jg
dec
push
repz
cmp
jnp
lock
shrb
mov
lret
dec
jne
imul
movsl
dec
jp
push
shrl
enter
sahf
jle
enter
xor
jnp
mov
iret
lock
push
fstpl
ja
jl
inc
pusha
pop
jp
dec
sbb
mov
scas
ret
cmpsl
pop
scas
rcrl
lock
sbb
mov
xor
nop
cmp
outsb
cmp
cld
dec
iret
pop
push
inc
mov
in
sar
add
arpl
stc
in
adc
pop
mov
dec
mov
roll
lock
lock
push
xor
jecxz
mov
add
xor
hlt
inc
inc
cmpl
sbbb
cmp
std
mov
inc
jno
fimull
out
mov
jge
mov
loope
roll
shll
fmul
jae
adc
hlt
adc
and
and
or
jae
and
lea
in
mov
mov
sbb
and
cmpsl
mov
or
jnp
sub
es
and
aaa
cmp
lea
xor
roll
inc
in
pop
hlt
jo
mov
inc
cmp
xlat
inc
add
or
andb
fmull
mov
push
jle
mov
xor
inc
scas
nop
ret
xor
repz
lods
pop
xchg
add
dec
xchg
dec
imulb
sub
or
dec
out
cmpsl
ret
jnp
out
xor
stos
lods
cmp
aas
imul
xchg
pop
aaa
neg
in
fwait
pop
pusha
xor
sub
nop
loopne
shlb
pop
daa
jb
pusha
bound
rcrb
push
and
mov
shrl
ret
repnz
push
xor
sbb
fsubs
mov
lods
jnp
sarl
imul
adc
gs
in
inc
frstor
push
test
dec
mov
cmp
xchg
push
stc
pop
mov
jne
mov
mov
sub
mov
cld
push
jmp
ja
pop
xchg
xchg
rclb
cmp
andb
jp
jns
ds
mov
jne
dec
adc
add
daa
dec
sub
push
rorb
lret
aad
cmp
inc
jmp
dec
mov
out
enter
sti
stc
mov
pusha
inc
jl
mov
dec
inc
inc
or
in
sbb
lfs
or
into
mov
push
lock
push
mov
add
test
sbb
icebp
pop
dec
mov
pusha
cs
push
dec
add
les
filds
clc
inc
decb
add
xchg
xchg
stc
jo
sbb
add
push
int3
cltd
mov
in
jmp
sahf
inc
stos
loopne
imul
jbe
iret
pop
fldcw
sbb
push
mov
jl
mov
cltd
jno
jle
xchg
push
out
add
jae
stos
test
pop
dec
push
fiaddl
xchg
fbld
cmp
push
adc
cld
cmp
mov
push
idivb
xorb
cmp
inc
fnstcw
inc
or
adc
inc
dec
cmovns
push
lret
and
or
sub
or
rcll
and
mov
je
in
adc
inc
jne
cmp
xor
pop
nop
lds
jnp
jl
pop
mov
ja
loope
cmpsl
lea
sub
aad
das
cmpsl
xchg
scas
mov
xor
mov
insb
popa
addr16
inc
sub
in
pusha
cmp
and
xchg
pop
push
mov
ljmp
push
mov
or
out
add
loopne
sub
fidivs
jbe
shlb
test
aas
pop
frstor
jno
test
sbb
mov
dec
adc
and
xchg
hlt
imul
lods
mov
scas
jne
addr16
or
jg
sbb
sub
mov
sbb
outsb
repz
and
and
loopne
addb
sbb
cld
and
mov
cmpsb
movsl
mov
pop
mov
sahf
or
call
ret
push
mov
lds
xor
add
cmp
xor
leave
addr16
jp
jl
cmpsl
gs
daa
imul
fwait
mov
ficoms
das
lahf
mov
punpckhwd
int3
or
push
push
lahf
pop
pop
lods
add
outsb
fsts
int
pusha
mov
sbb
out
sbb
mov
adc
in
mov
roll
push
mov
lahf
pop
dec
leave
jb
mov
daa
jno
stos
rorb
xor
imul
pop
das
hlt
or
decl
sub
out
pop
enter
pop
cld
out
mov
pop
mov
xchg
xchg
in
add
push
imul
repnz
in
cmp
es
insl
movsl
push
or
mov
inc
mov
rcl
adc
cmp
push
mov
add
loopne
leave
mov
and
mov
xchg
popa
fistpl
push
jp
test
jmp
das
jb
mov
mov
adc
inc
lds
stos
in
cltd
sahf
xchg
roll
pop
aaa
sbb
jns
pavgw
push
in
mov
cwtl
jle
bound
jnp
mov
adc
andb
out
js
cs
into
clc
sub
fsubp
mov
push
imul
xor
sub
sbb
pushf
subl
sbb
and
sarl
push
pushf
push
push
inc
or
or
cmp
or
xor
ja
jge
lret
or
cmp
jg
push
sbb
cld
lahf
mov
xchg
jae
mov
pusha
rcrl
inc
pop
push
out
jb
cmp
xor
push
imull
push
pop
repz
repz
xchg
mov
fmul
mov
int
shlb
mov
jno
dec
xchg
idivb
xor
outsb
pop
adc
push
push
adc
push
and
fldenv
xchg
mov
cmp
or
pop
adc
add
lcall
pop
and
lea
cmpsl
jnp
lods
scas
jmp
dec
mov
push
ds
aaa
mov
mov
movsb
out
inc
fistl
das
dec
ds
sbb
lods
sub
pop
jbe
jecxz
adc
xchg
mov
andl
inc
scas
push
xchg
daa
shrl
xchg
push
scas
pop
and
adc
scas
inc
jl
scas
cmp
xchg
aas
mulb
fldt
ds
icebp
dec
sarl
shll
mov
fbld
push
pop
inc
xchg
scas
mov
in
fdivs
inc
out
cli
cld
mov
inc
out
jmp
jle
push
stos
mov
popa
lret
enter
add
call
mov
fwait
and
jecxz
imul
xor
xlat
ret
aam
lods
cli
insb
lret
test
les
mull
mov
std
cld
mov
ret
mov
dec
xor
sub
sbb
fldt
adc
mov
loope
pop
sub
sbb
push
test
dec
enter
les
rol
int
fistpl
or
xor
loopne
push
xor
pop
mov
xor
cmp
movsl
sbb
dec
pop
jae
add
jne
mov
jno
aam
iret
push
mov
dec
sti
aas
cmpsb
dec
mov
push
stc
lret
mov
and
mov
cmp
fdivl
clc
mov
js
dec
enter
stc
mov
negb
orb
jbe
xchg
inc
sar
mov
jle
fiadds
shll
scas
pop
mov
jno
dec
pusha
movsb
lds
arpl
xor
mov
das
shll
scas
push
sbb
cmp
leave
bound
sbb
xor
fnstcw
sub
ljmp
cmc
icebp
sub
int3
push
jge
pusha
sarl
inc
repz
mov
adc
push
jmp
outsb
inc
sub
dec
adc
call
dec
pop
xchg
mov
nop
addr16
sub
pop
call
call
and
adc
test
fnsave
push
addr16
nop
add
inc
shlb
in
inc
leave
outsb
inc
pop
imul
popf
loop
in
mov
mull
cmp
jne
leave
in
mov
mov
add
xchg
ret
push
arpl
movl
test
add
in
cmpsb
loopne
xor
inc
leave
add
xor
cmp
cmp
cmpsl
js
jno
cli
test
je
outsb
ja
in
ljmp
sub
mov
lds
add
inc
or
lock
add
jb
jecxz
cmpl
mov
inc
das
ret
mov
loope
adc
bswap
das
cmpsb
cmp
pop
jp
rcrb
pop
scas
dec
mov
mov
or
sbb
and
add
rcrl
sbb
or
xchg
cmp
sti
out
jmp
aas
xchg
insl
insb
in
dec
push
add
jae
or
mov
lret
sbb
popa
sub
xor
out
mov
jbe
pop
push
pop
call
aad
dec
sbb
dec
popa
and
xchg
ljmp
xchg
nop
mull
loopne
dec
out
fcomps
mov
in
ds
sbb
pusha
sbb
adc
and
test
push
ret
loopne
mov
imul
lcall
xchg
sub
movsb
xchg
out
dec
mov
insl
loop
lahf
xchg
xchg
push
insb
out
jecxz
imul
sbb
inc
mov
stc
inc
xchg
arpl
inc
xchg
cmpsl
pop
les
push
cli
enter
dec
mov
cltd
lods
popa
jmp
lahf
add
jmp
push
sbb
xchg
xchg
fstpl
adc
jb
icebp
scas
lea
sbb
jle
sbb
into
xor
fstpt
adc
shlb
add
xchg
rclb
sub
add
lds
rcl
cmpl
xchg
lds
dec
andb
data16
xor
adc
int3
mov
dec
inc
mov
xor
cmpsb
mov
xchg
mov
push
stc
cmc
lret
hlt
pop
or
rol
addr16
pop
jmp
mov
lea
pusha
test
inc
xor
data16
rorl
lret
das
fisttps
stc
cmp
xor
xchg
insl
push
mov
sub
std
movsl
mov
xor
ds
stc
mov
dec
mov
mov
lds
push
jo
xchg
aam
cmp
les
test
std
push
enter
leave
lret
mul
push
fistl
fnstcw
push
xor
ret
mov
push
mov
test
into
xchg
les
fstpt
and
popf
addb
push
dec
js
fidivl
nop
pop
pop
movsb
cmp
push
pop
arpl
enter
into
in
aaa
rorl
xor
lret
test
imul
out
aam
popf
dec
lea
push
std
jp
mov
pop
fadd
sar
ss
pop
lock
in
ljmp
xor
cmp
sub
pushl
cltd
scas
lds
orps
sbb
pop
imul
and
out
and
int
aad
inc
add
sbb
in
jg
inc
lret
jne
or
and
or
das
aaa
dec
into
pop
std
or
leave
inc
stos
dec
js
popa
iret
add
out
sbb
int
out
xchg
test
mov
push
xor
mov
inc
out
mov
cs
inc
stos
push
sbb
imul
lods
pop
mov
mov
mov
sbb
jg
sbb
adcl
inc
das
test
inc
js
jbe
inc
adc
cmp
xchg
sbb
or
cld
pusha
loope
pop
sub
jns
inc
dec
or
jmp
gs
mov
xchg
sub
mov
dec
push
xor
fiadds
out
movsl
push
mov
lock
ds
cwtl
pop
das
pop
movsb
push
dec
push
cmp
jbe
push
mov
cmp
loopne
sub
movsl
xchg
dec
inc
and
sti
dec
mov
shr
lock
sub
push
sbb
gs
fdiv
aam
xor
mov
leave
dec
lahf
ja
ss
xor
inc
push
into
icebp
push
jg
nop
in
xchg
repnz
push
sub
shrb
fistl
in
out
pop
mov
jne
arpl
push
xchg
or
testb
jns
sbb
sub
hlt
scas
mov
cmc
mov
push
in
ja
mov
fstps
popf
push
push
cmp
mov
inc
push
adc
popf
add
nop
pop
xor
jno
cmp
mov
das
cmc
mov
lods
xchg
and
decl
sahf
sahf
mov
xor
pop
pop
cs
sub
mov
ja
fnsave
movsb
imul
popa
sbb
cmp
add
xchg
mov
sub
int3
std
jecxz
les
loope
in
jle
leave
pop
pcmpeqb
xchg
xchg
mov
in
dec
and
inc
xor
pop
pop
aaa
bound
cmp
xchg
add
pop
imul
test
push
lahf
jns
add
jae
xchg
imul
fwait
or
pop
adc
jns
push
pop
jmp
mov
hlt
push
lea
repz
jl
cmpsb
pop
fs
and
orl
or
sbb
dec
mov
jle
add
mov
jp
repz
lods
add
cmp
xor
aad
push
or
dec
je,pn
cmpsb
rol
add
imul
inc
inc
aaa
scas
add
sarb
mov
jg
fidivrl
js
mov
iret
pop
add
les
lcall
xchg
in
lret
xchg
mov
pusha
cltd
in
scas
jae
out
test
xchg
sub
mov
sub
icebp
push
cmp
leave
popl
daa
adc
movb
jp
lods
dec
inc
dec
adc
push
xchg
push
hlt
sub
mov
mov
hlt
xchg
jbe
jbe
mov
inc
loop
pop
ja
pop
dec
clc
jns
mov
into
outsb
mov
sub
pop
xchg
call
jo
pop
fdivl
adc
inc
int3
test
imul
mov
add
and
dec
jp
repnz
fidivs
xchg
outsl
sahf
lds
ret
je
fadds
clc
stos
cltd
ret
or
xchg
ds
loope
mov
adc
mov
into
in
jmp
in
xor
mov
mov
jb
cmp
cmp
je
inc
and
sbb
cmp
aad
xor
insb
into
and
mov
das
out
mov
jecxz
jecxz
push
jp
ja
hlt
xchg
movsb
mov
in
jp
nop
or
out
fistl
outsb
adc
out
iret
cmpl
negb
repz
imul
sub
mov
jne
xlat
jle
mov
xor
out
imul
fnsave
imul
sub
scas
sub
mov
mov
sub
pop
jecxz
sbb
mov
xlat
test
adc
lcall
cli
cmp
pop
fs
sti
cmc
cwtl
shlb
add
mov
push
inc
aaa
lea
mov
jbe
imul
rcrb
push
mov
iret
daa
or
movsb
daa
sub
pusha
dec
outsb
loopne
out
cltd
lods
loop
shll
jle
ret
sbbl
pop
cld
jmp
stos
and
ja
xchg
jmp
shlb
jb
rcll
dec
divl
popf
dec
je
and
or
fistpl
lcall
push
loop
sar
out
cmp
inc
jmp
lcall
sub
outsl
roll
xor
and
cwtl
sub
sbb
inc
fmul
nop
dec
cmpsb
mov
movsb
outsl
jb
out
loopne
xor
push
push
or
adc
pushf
popa
mov
jle
jb
cld
push
addr16
push
test
das
pop
cmp
or
andl
mov
daa
shll
mov
dec
add
add
ret
pop
cmp
lea
dec
lods
divb
cs
pop
adc
cmp
cmpb
jp
jmp
lods
imul
jl
pop
mov
call
addr16
inc
xor
insb
nop
out
lea
cwtl
push
fistpl
xchg
loope
push
xchg
inc
xchg
test
sti
sub
movl
add
pop
cmp
call
fisubs
les
das
sbbb
cmp
jmp
jb
aaa
cli
cmp
push
push
adc
pop
dec
xor
nop
loopne
pushf
push
imul
push
adc
dec
mov
mov
mov
mov
sub
add
out
adc
jp
loopne
jle
addb
xchg
mov
orl
xor
int3
jno
in
cmp
pop
sbb
adc
push
scas
mov
fucom
mov
pop
int3
mov
popf
sbb
adc
push
push
jp
lock
into
pop
push
sub
dec
outsb
les
cltd
loope
sbb
stos
call
sbb
and
fisttpl
mov
cs
dec
sub
imul
or
jbe
pusha
xlat
fsub
mov
sarb
leave
insb
add
mov
jns
mov
mov
push
ja
fiadds
and
ret
push
das
es
cmp
aam
add
cmp
js
ss
imul
jecxz
xor
jnp
rcl
leave
int3
fs
add
jl
cmpsl
test
in
movsl
iret
in
pop
lods
xor
shrb
adc
mov
mov
add
mov
push
push
and
jge
push
sahf
push
addb
int
pop
aad
shrl
icebp
mov
jo
pop
pushf
pop
jmp
adc
sub
add
mov
and
cmp
adc
popf
fwait
push
mov
repz
dec
iret
mov
fisubrs
add
push
stos
popf
insl
adc
pop
adc
iret
add
xor
frstor
cmpsl
fiadds
or
rorl
stc
xor
cmpsb
ja
dec
out
push
pusha
decb
cmpsl
lahf
add
or
xchg
dec
mov
mov
sbb
push
imul
std
push
insl
test
mov
pop
sub
mov
add
xchg
cmp
loop
cmpl
push
in
fisttps
and
sbb
andl
adc
mov
xchg
rcl
int
fldenv
movsl
jmp
aas
pop
or
adc
pop
repnz
mov
adc
jge
cwtl
push
xchg
in
aam
test
dec
lea
insl
addb
fisubrl
mov
and
xchg
sbb
clc
cmpsl
addb
dec
adc
jg
dec
imul
cmp
jecxz
lret
lds
push
ja
outsb
mov
xchg
and
ret
in
xchg
pop
pop
sbb
rcll
xor
cmp
ficoms
loop
shl
enter
lock
stc
popf
loope
push
es
leave
fadds
lods
sub
pusha
orl
out
fnstsw
ret
xlat
push
or
xchg
pop
mov
and
cmp
lds
mov
cmp
inc
enter
arpl
add
add
cs
mov
sub
mov
out
shrb
xor
scas
xchg
jmp
sbb
outsl
sti
cmp
movb
xchg
add
idivl
and
add
sub
arpl
jecxz
lods
jmp
ret
xchg
xchg
dec
add
and
in
pop
jnp
test
sbb
das
fsubr
jae
lcall
lock
cli
sub
testl
adc
cmc
push
stos
out
rorl
cmp
sbb
push
leave
dec
popf
fstp
add
jne
mov
sub
rclb
and
xor
xor
sbb
adc
xor
sbbl
in
data16
insb
mov
ret
int3
sbb
cmpl
hlt
xor
into
pushf
negl
mov
mov
subb
popa
sahf
pop
and
into
xor
sbb
pop
jl
jb
lods
sbb
jp
sbb
je
addl
xchg
jo
daa
dec
nop
jg
dec
cmp
mov
xor
aam
test
jecxz
push
jmp
mov
xchg
adc
push
mov
test
push
xor
fucomi
pop
push
lret
mov
mov
jbe
sarb
stos
inc
dec
rcll
gs
jle
or
pop
push
xchg
aad
xor
scas
xchg
sub
scas
and
and
push
loope
lea
daa
sub
mov
xchg
sub
hlt
adc
shlb
in
inc
or
cltd
idivl
mov
xorl
gs
xor
xor
mov
stc
and
lretw
insl
inc
add
and
mov
ja
mov
adc
jg
adc
pop
cmp
popa
popa
sbbb
aam
ja
outsl
mul
lock
fcompl
jge
xchg
mov
pop
push
push
fldlg2
enter
inc
pop
mov
out
push
adc
xchg
es
mov
and
xor
sbb
in
ds
scas
sub
jp
js
mov
xlat
xchg
mov
insw
stos
aam
dec
sbb
pop
mov
mov
cmpsl
cli
jge
adc
mov
mov
mov
cwtl
xchg
jg
movsl
push
sub
mov
data16
sahf
adc
dec
lock
cmp
cmc
cs
in
fstpl
ds
aad
mov
in
lea
std
in
outsb
addl
scas
aas
mov
leave
sub
cmp
lods
xchg
stc
xchg
idivl
je
inc
xchg
fstl
push
xor
out
lods
std
bound
pop
es
pop
outsl
mov
inc
mov
or
pop
xchg
mov
push
cmc
xor
es
lahf
or
cmp
lock
stos
and
mov
sbb
xchg
push
stos
jmp
push
lret
mov
cmc
ss
mov
test
ret
mov
aam
loopne
mov
fdivr
adc
orb
adc
dec
xlat
stc
pop
cmpsl
fidivs
shl
mov
pushf
sbb
pop
push
arpl
mov
mov
outsl
fadd
test
mov
inc
fldcw
push
jb
mov
jbe
inc
pusha
push
xchg
and
ficoms
jmp
fwait
ret
inc
push
dec
jno
sbb
ljmp
cmp
jne
adc
in
mov
addb
je
add
repnz
adc
sbb
fadd
test
pop
xor
leave
xchg
int3
movsl
cld
push
nop
cmpsl
mov
dec
pop
je
mov
sub
sbb
inc
push
arpl
movsl
add
iret
pop
test
push
sub
lods
test
cmp
sub
push
gs
shrb
xchg
xor
and
subl
add
sbb
stc
adc
jbe
out
xor
sbb
scas
adc
push
push
mov
lods
test
jle
mov
fildl
pop
push
nop
mov
or
or
aas
ds
pop
mov
loopne
and
xor
les
hlt
ja
push
fwait
pop
jo
bnd
ljmp
dec
lods
push
iret
lods
lea
inc
push
pusha
cs
pop
addr16
or
inc
mov
popa
or
push
and
push
jg
dec
lahf
cmp
push
leave
adc
push
movsb
push
movsb
insb
test
dec
pop
inc
ljmp
cmp
xchg
rcll
stos
test
mov
add
inc
scas
jno
or
les
pop
stos
adc
jge
nop
lods
movsl
aam
sbb
mov
scas
pop
mov
aas
int3
sbb
mov
push
mov
mov
or
push
stos
lcall
add
add
aam
stos
pop
jecxz
rcr
and
test
cmp
sub
jno
push
cmc
push
pushf
pop
test
gs
sbb
arpl
and
xchg
ja
data16
jno
push
sbb
jecxz
inc
or
in
subb
mov
cmp
lods
cli
stos
inc
adc
je
popf
and
loope
in
push
mov
test
fidivl
jg
fistps
in
cmp
pop
fwait
imul
or
mov
fisubrl
xchg
aas
push
mov
insl
into
xor
adc
sbb
insl
adc
cs
lret
bound
mov
imul
pop
sbb
pushf
xchg
stos
je
inc
mov
mov
xor
aad
jge
push
aas
xchg
int
aas
out
imul
addl
pop
add
insb
and
pop
fsubrs
cmp
push
fcoml
mov
orl
imul
repnz
mull
leave
movsb
inc
mov
xchg
inc
inc
jmp
shll
nop
push
mov
mov
lret
pop
sbb
or
add
mov
or
iret
in
inc
bndldx
lock
add
xchg
mov
cmpsl
pusha
inc
out
mov
out
mov
mov
pop
xor
lods
rol
ret
sub
xchg
adc
js
imul
scas
dec
aas
ss
mov
popf
or
mov
movsl
scas
adc
inc
jmp
sbb
sbb
inc
inc
rcl
daa
sbb
insl
jae
push
or
or
pop
push
push
data16
pop
pop
iret
push
jnp
incb
inc
iret
and
sbb
es
add
pop
fs
fnstcw
repnz
in
fs
iret
mov
push
mov
or
daa
clc
xlat
sub
jo
mov
aas
cli
mov
adc
push
mov
xor
jae
out
in
dec
mov
loop
sahf
outsb
sbb
xor
xchg
in
ffreep
imul
arpl
dec
xchg
outsl
push
and
lods
xchg
es
xchg
inc
lcall
mov
sahf
mov
out
pop
mov
outsb
minps
cmp
fcompl
jne
arpl
or
fisubl
push
inc
lahf
es
pop
add
out
sub
push
pushf
and
sub
ljmp
cmpsl
popf
fs
sti
pop
adc
ljmp
leave
jp
push
popl
popf
test
dec
mov
sub
shll
outsb
adc
ja
push
jae
inc
subb
sbb
add
jmp
and
jge
adc
push
jae
jp
pop
jnp
aam
outsb
int3
sub
stos
sub
dec
push
mov
jo
inc
repnz
stos
or
lret
int
popf
out
addr16
xor
cmp
sbb
add
mov
loope
sub
mov
push
lock
movsb
jmp
cmc
idiv
mov
subb
mov
mov
lret
inc
inc
pusha
mov
cmp
cmp
fistps
stos
adc
and
push
addr16
sub
lods
bound
xchg
push
adcl
movsb
or
mov
leave
loope
lret
xlat
adc
cwtl
shrb
sub
loope
xchg
movsl
inc
out
jae
imul
clc
push
sbb
mov
orl
ds
add
movsl
cmc
ret
add
ror
fdivl
mulb
enter
lret
insl
out
je
xor
loope
mov
jp
add
push
or
pushf
mul
sub
sbb
das
dec
adc
mov
loopne
cltd
in
int3
inc
inc
imul
lret
inc
cmp
mov
lea
js
loop
popf
xchg
pop
fwait
in
xchg
xchg
insb
sahf
mov
sahf
cmp
push
les
sbb
je
sti
xor
sbbl
aam
pusha
test
repz
test
sarb
leave
pop
mov
mov
test
in
pop
sub
arpl
sub
mov
pop
mov
and
mov
imul
loope
test
pop
jne
sub
mov
lea
sub
push
add
and
cmp
mov
jne
pop
pop
cmp
jb
jle
inc
sub
cwtl
andb
test
mov
pusha
xchg
pop
inc
sbb
ss
mov
xchg
push
sbb
add
xor
xor
pop
cmp
ds
xor
adc
pop
cli
mov
mov
stos
xor
jecxz
inc
fsubs
push
idiv
mov
stos
xor
ds
fcmovu
push
sarl
in
pop
xor
pusha
loop
imul
or
mov
mov
push
xor
xchg
jns
lcall
or
insb
jne
push
dec
adc
xor
sub
jecxz
jecxz
cli
jecxz
fcomp
sub
push
inc
pop
pop
jne
sub
leave
and
mov
cmp
stos
pop
mov
xchg
pusha
ret
test
iret
and
push
push
loop
popf
xlat
xchg
mov
or
jns
ljmp
push
repnz
inc
sbbl
jne
mov
fs
jo
dec
notb
jmp
inc
inc
popa
xor
jbe
and
mov
jmp
cmpsl
adc
push
fs
jns
cltd
xor
js
nop
or
xchg
filds
lods
ret
in
or
mov
imul
dec
aas
inc
ljmp
pop
mov
jle
pop
mov
call
loopne
lock
cmpsl
imul
lcall
mov
test
js
filds
sbb
je
fists
or
lock
faddl
out
loope
inc
and
fsts
sbbb
leave
cwtl
aaa
fdivs
in
mov
push
mov
incl
mov
cmp
test
ret
lea
mov
sub
out
sbb
pop
or
push
mov
cmp
test
sti
push
je
cmp
ljmp
cmp
pop
cli
jo
cmp
mov
mov
pop
les
aaa
cmc
xchg
iret
or
sub
sbb
mov
mov
jle,pt
mov
cmc
mov
mov
dec
push
loop
cld
jnp
hlt
xchg
cmp
cmpsl
outsb
bt
imul
hlt
das
outsl
xchg
movsl
sub
or
push
icebp
ljmp
aad
push
in
out
mov
sbb
fsts
mov
xchg
cltd
jno
pop
lret
inc
inc
pop
jns
xchg
fcmovb
stos
mov
je
scas
push
pop
loopne
adc
cmpsl
push
lret
out
dec
inc
int
inc
testb
adc
in
jne
stos
in
mov
lret
repz
imull
pop
gs
adc
int
inc
adc
push
dec
inc
fdiv
add
mov
mov
out
cmp
ljmp
pop
test
scas
or
push
inc
or
adc
loopne
sbb
out
push
data16
aad
cmp
sbb
pop
sub
cmp
bound
add
hlt
and
sub
jnp
xor
inc
mov
cli
out
sub
xlat
sbb
movsl
cmpsb
push
mov
and
pop
push
jns
jbe
int3
pushf
test
mov
lock
mov
iret
sti
mov
push
popf
dec
add
clc
dec
jge
dec
jle
mov
ret
rcll
stos
orb
ds
mov
mov
cmpsl
mov
cmp
sbb
loopne
rclb
out
xchg
jge
pop
jl
in
out
outsl
idivl
lcall
daa
and
mov
mov
mov
jbe
ja
enter
cmc
and
mov
add
mov
jo
divb
loope
pop
lea
sub
or
dec
add
pop
out
fisttps
mov
std
jmp
lret
mov
icebp
sbb
psllq
mov
adc
xchg
fisubs
inc
pop
inc
mov
and
je
out
iret
mov
je
add
jno
push
jb
jnp
nop
or
repnz
jecxz
and
adc
mov
xchg
pop
mov
push
popa
cmp
movsl
inc
push
pop
cld
pop
xor
adc
push
stos
adcb
mov
das
mov
inc
cltd
scas
pop
or
sbb
sbb
cmp
mov
jae
push
popf
lods
cmpsl
cs
adc
hlt
mov
pop
inc
movsl
loopne
pusha
mov
movsl
dec
test
cmp
pop
lahf
push
fs
adc
out
push
mov
mov
xchg
xor
sub
fwait
lods
or
es
mov
scas
add
out
xchg
push
xchg
sub
roll
jecxz
stc
add
push
pop
dec
adc
push
lcall
inc
jae
inc
popa
sub
mov
add
cmp
cmpsl
mov
in
push
and
leave
lock
cld
cmp
jge
lahf
ljmp
mov
push
cld
outsl
jo
mov
cltd
mov
pusha
stos
subl
inc
pop
out
enter
insb
mov
paddusb
inc
adc
clc
bound
aam
test
nop
jno
push
push
cli
pop
lds
stos
add
push
mov
inc
mov
lods
pushl
xor
jne
loopne
sub
sub
data16
sahf
mov
jo
sbb
rorb
iret
and
js
out
rsm
mov
ja
lret
dec
mov
pop
mov
outsl
insl
pushf
sbb
sbb
dec
fdivl
sub
sbb
mov
pop
test
dec
and
adc
loop
in
push
pusha
mov
pop
adc
jmp
push
cmc
int
pop
filds
pusha
pop
pop
mov
fistl
and
pop
cmpsb
in
outsb
add
daa
ret
add
lahf
scas
andl
jb
inc
mov
cltd
shrb
adcl
pop
push
imul
and
add
dec
in
loop
push
add
outsl
jnp
mov
inc
test
aam
jno
sub
dec
sbb
stos
cld
jmp
jae
jns
jge
mov
dec
lahf
or
insl
outsb
jl
clc
and
js
subb
mov
cld
add
loop
fdivrl
fsubrl
aaa
mov
and
lret
cltd
pushf
enter
adc
inc
dec
insb
cmp
xchg
sub
or
dec
ret
inc
xchg
push
xchg
push
jo
dec
adc
mov
icebp
or
pop
dec
shlb
sar
leave
out
loope
xor
add
ljmp
das
mov
in
mov
mov
fimull
jo
leave
lret
pop
add
aaa
pop
jno
xor
xchg
out
push
fs
cmp
cltd
stc
sub
nop
mov
push
sub
sbb
aaa
scas
nop
inc
loopne
pop
xchg
push
fisubrl
pushf
decb
mov
cmpb
scas
cmp
jecxz
in
dec
out
mov
jl
int
jmp
fwait
xor
ds
out
xchg
push
sub
lcall
jmp
sub
or
xchg
aam
gs
cmp
test
pushf
addr16
push
add
loop
jnp
xor
ret
xlat
mov
push
ja
mov
sbb
test
mov
or
insl
outsl
dec
daa
xor
or
jmp
fstp
enter
iret
ljmp
adc
lds
sub
test
cld
ret
mov
popf
pusha
xor
xor
mov
sub
cld
enter
lds
lock
add
jge
lea
pop
and
repz
shlb
out
lods
loope
cmp
adc
add
add
mov
xchg
hlt
out
xorl
movsl
jns
int
fbld
pop
cmp
jae
daa
fdivrs
lods
sbb
pop
in
inc
jae
sbb
pop
icebp
adc
lods
and
cs
sar
inc
sbb
cmp
xchg
dec
push
jge
sbb
xor
hlt
out
xchg
jmp
inc
rclb
adc
lds
testb
jnp
mov
aaa
push
and
lds
sub
aaa
sar
cwtl
loope
lret
jbe
push
push
lea
scas
out
dec
pushf
cs
pop
mov
addr16
movsl
and
sub
sbb
int
mov
add
xorl
out
dec
scas
lret
push
push
adc
sbb
push
push
add
push
sahf
into
ror
out
mov
jbe
push
stos
sub
and
or
or
jbe
push
scas
push
jb
arpl
xor
or
lods
in
pop
jge
sbb
xchg
daa
inc
sub
mov
jmp
xor
outsl
sub
push
mov
ja
stos
out
mov
lock
dec
fisttpl
pop
in
mov
xchg
jle
push
scas
repz
or
mov
jg
or
dec
sub
stc
cld
jae
int3
cmp
mov
enter
jb
mov
pop
or
js
xchg
xchg
xchg
push
pop
in
add
mov
push
xlat
inc
sahf
cltd
fstl
inc
ljmp
sbb
cwtl
ret
add
xor
push
ret
mov
mov
addl
pop
pop
out
dec
aad
mov
stos
push
insb
hlt
shll
mov
xor
outsl
jae
pop
lret
sbb
fildl
adc
jnp
je
add
cmp
lods
int
cmp
push
jg
xor
out
sub
pop
pop
aas
mov
mov
inc
inc
insl
es
in
lock
or
inc
mov
xlat
loope
xchg
lods
test
mov
sub
xor
into
andb
mov
sub
pop
pop
icebp
aad
aad
pop
stc
pop
or
neg
in
push
xor
pop
push
and
push
loopne
xor
xor
ljmp
out
iret
adc
push
ss
mov
or
and
xchg
jmp
mov
aas
xor
push
orb
adc
fidivrl
int3
inc
pop
jmp
dec
pop
cmp
push
and
xor
mov
xchg
jo,pt
push
mov
or
xor
dec
out
test
add
fs
mov
add
cmpsl
xor
mov
cmp
xor
or
sub
call
mov
cs
or
jp
adc
lcall
fistpll
test
xchg
and
pop
jp
aas
inc
aad
mov
std
sti
insb
push
jns
xchg
jmp
ss
lahf
ror
jge
push
mov
mov
sub
pop
cmp
push
lret
aad
lods
aam
inc
sub
inc
addl
jnp
dec
iret
out
test
xor
pop
xor
pop
in
lods
scas
imul
adc
dec
in
or
mov
mov
idivl
inc
les
push
fcoml
ds
jmp
sbb
bound
aad
fs
push
gs
outsl
mov
mov
emms
rol
int3
cmp
fwait
pusha
stos
xor
and
mov
es
ljmp
jle
dec
pop
dec
pop
data16
adc
mov
in
pusha
scas
inc
int3
push
cmpsb
dec
dec
push
sbb
inc
adc
push
in
or
mov
clc
mov
fldl
xchg
jg
xchg
inc
and
jl
pop
push
xor
mov
addb
imull
inc
les
add
loop
mov
ds
ds
cld
cmpsb
roll
int3
sbb
dec
data16
xlat
insl
jno
push
pushf
shrb
add
rcl
outsl
lea
mov
mov
std
mov
inc
sub
push
fiadds
int3
cmpsl
sbb
mov
sub
mov
movl
ffreep
xor
loop
jbe
fsubrl
inc
test
lods
cld
add
xor
or
js
lret
out
idivl
sub
xorl
cmp
lret
mov
pop
mov
sub
stc
sub
outsb
stos
dec
mov
mov
cmc
xorb
dec
pop
iret
aad
inc
lods
fistps
inc
cld
rorl
mov
loop
jmp
pop
add
xor
je
adc
jmp
das
cmp
and
test
pop
mov
cmpsl
arpl
pop
adc
in
mov
mov
inc
mov
and
rcrl
outsb
shll
pop
sbb
and
push
jae
dec
pop
shrb
jno
inc
es
push
outsb
int
sbb
and
push
out
out
lcall
dec
pop
lcall
test
filds
push
jge
and
add
enter
movl
sub
sub
lods
jge
adc
xchg
inc
and
pop
add
jae
call
fs
mov
jb
cmp
and
mov
xchg
or
and
mov
fprem1
repz
mov
push
add
pop
inc
aas
in
fisttps
sahf
test
lock
adc
negb
mov
push
xor
pop
iret
mov
dec
mov
adc
sub
lea
das
clc
loop
sbb
mov
mov
pop
pop
sbb
nop
mov
fldt
mov
js
mov
push
jnp
mov
sbb
data16
add
push
push
cmp
inc
nop
add
push
pop
xchg
cmp
subb
les
and
dec
xchg
push
jns
adc
xorl
mov
jns
daa
lcall
dec
lods
or
jb
les
pop
in
add
adc
pop
shl
push
js
je
bound
lret
mov
add
dec
sub
lds
sub
movsb
push
loopne
mov
sbb
xor
cld
arpl
cmp
test
fisubl
xor
sbb
imul
pop
mov
mov
lds
aaa
mov
jp
pusha
cmpsl
in
xchg
mov
pop
xchg
leave
cli
jnp
les
or
inc
scas
pop
mov
pop
sub
push
cmp
and
cmp
mov
es
jge
cmp
push
out
fisubrs
push
jp
lock
and
pop
add
dec
and
sbb
mov
xchg
push
or
jecxz
cli
push
mov
inc
popf
jae
rcrb
repnz
adc
jns
and
punpcklbw
stos
lret
cmpb
out
xchg
test
mov
jge
inc
data16
insb
xchg
mov
push
mov
jb
cltd
add
adc
test
stc
dec
pop
mov
mov
iret
shrb
out
sti
cmp
mov
xchg
add
addl
xchg
insl
sti
push
xchg
rcrb
subb
fidivl
bound
aaa
mov
subl
push
pop
pusha
mov
test
dec
movsb
nop
iret
push
xor
scas
lahf
filds
mov
xchg
enter
xor
cmp
jp
aad
cltd
jae
mov
cmp
test
mov
push
inc
xchg
ljmp
mov
enter
sbb
bound
mov
in
mov
xchg
mov
sahf
aas
cmpsb
icebp
popa
jl
data16
inc
and
jnp
xorb
sub
lret
mov
outsb
push
jle
inc
mov
xchg
test
nop
out
cmp
cmp
fsubp
or
push
dec
or
dec
add
add
fisttps
loope
mov
cld
jecxz
insl
lea
andb
xor
mov
das
sub
jns
xchg
jg
dec
cltd
push
pop
sbb
push
loope
orl
lcall
lods
xchg
data16
pop
lret
lods
enter
sub
mov
into
xchg
call
fmuls
push
jg
and
cltd
mov
push
pop
iret
cmp
dec
stc
adcl
or
push
int
mov
mov
aaa
adc
pop
fmuls
mov
aam
inc
xchg
outsl
or
stc
loop
js
clc
mov
push
pushf
xchg
inc
sub
pop
mov
test
cmpsb
std
xchg
aad
popf
adc
mov
sbb
hlt
mov
adc
outsl
cmp
daa
sub
cmpsl
push
repz
cmpsb
sbb
sbb
sub
or
daa
dec
cwtl
out
cmp
push
xchg
push
add
xlat
ud0
fwait
test
aam
subl
mov
xchg
std
test
pop
xor
lahf
imul
mov
in
int3
push
push
dec
mov
nop
or
scas
shrb
add
lret
jns
jo
aas
add
xorb
scas
fdivs
shld
sub
fmul
mov
jge
frstor
mov
jmp
nop
popf
repz
mov
or
mov
sub
mov
testl
inc
in
mov
xchg
xor
fnstenv
sbb
mov
das
jbe
jbe
ds
clc
loop
outsl
dec
sub
fildl
adc
mov
mov
data16
cmp
jg
in
rclb
or
or
cwtl
mov
jne
mov
imul
les
jp
mov
or
jg
stos
adc
rol
shrb
loop
mov
sub
popl
xor
daa
sahf
repnz
movsl
pop
aam
mov
mov
pop
aaa
pop
aam
lahf
lods
sbb
fstps
outsl
pusha
leave
adc
push
jne
les
push
outsb
cltd
out
mov
sub
call
and
xchg
pop
push
in
fmul
jo
cwtl
mov
push
loope
scas
mov
cmovge
push
dec
and
xchg
mov
scas
rep
ljmp
test
pop
scas
cli
xor
ds
pushf
aad
out
sub
outsl
add
dec
and
fstp
sbb
mov
jle
sbb
shlb
lods
mov
push
cld
repnz
push
scas
test
mov
mov
inc
pusha
hlt
fsin
dec
adc
jbe
jne
cmc
cmp
cltd
mov
pop
inc
nop
mov
lock
loop
push
andb
arpl
xchg
rcl
add
jmp
cmp
adc
ljmp
cld
jmp
into
dec
lds
enter
adcl
and
jmp
push
jl
sub
gs
daa
bound
gs
pop
pop
rcl
add
xchg
fsubl
in
mov
xor
movl
mov
pop
fucom
inc
mov
mov
and
sub
jle
lock
mov
or
xor
and
pop
adc
stc
movsl
jbe
mov
jle
cmp
cmp
les
push
mov
sahf
jp
mov
xchg
loop
jecxz
outsl
aaa
leave
lods
and
outsl
pushf
mov
mov
xchg
cmpsb
out
fwait
jmp
je
fstps
cmpsb
add
in
faddl
maskmovq
imull
mov
jbe
fldt
outsb
repz
and
loop
das
sbb
pop
arpl
dec
and
mov
jbe
add
push
fs
aam
jl
movsl
lret
xor
xorb
add
and
out
mov
test
cmpsl
jnp
lcall
aaa
jnp
rcll
ds
sbb
gs
movsb
mov
inc
xor
inc
push
enter
mov
xchg
pop
or
andb
iret
push
xlat
int3
adc
int
xchg
sbb
or
dec
into
popf
clc
das
push
pop
mov
push
repz
cmp
hlt
xor
aad
add
pop
ds
xchg
sub
icebp
xor
in
arpl
movsb
in
scas
jb
and
add
inc
test
cli
lcall
pop
mov
adc
mov
loop
ror
repz
pop
pop
sub
mov
sub
jne
loope
popl
test
mov
ljmp
daa
dec
sub
add
out
lock
test
or
lods
xor
bound
rolb
pop
cld
notl
sbb
enter
mov
js
mov
loopne
int3
jne
call
cli
sbb
movsl
mov
lods
xchg
mov
push
inc
sbb
and
movsl
or
cmp
jbe
lret
push
push
push
and
push
cmp
xchg
sub
pop
adc
and
xor
mov
push
xchg
mov
enter
icebp
cld
js
call
outsb
jae
test
mov
and
jbe
pushf
fwait
jne
stos
or
push
repnz
xor
cmpsl
push
push
shll
lcall
cmp
mov
sbb
xchg
inc
lea
mov
add
adc
loope
xchg
or
sub
popf
add
xor
mov
aam
push
inc
inc
cld
in
mov
jmp
jns
jecxz
test
ficompl
xchg
test
push
mov
scas
std
rcrb
and
adc
test
pop
stos
mov
sub
mov
jmp
jmp
je
mov
xorb
sbb
fisubrs
mov
ljmp
mov
in
sub
or
daa
mov
xchg
mov
dec
mov
dec
cmc
cwtl
lahf
xor
cmp
test
insl
mov
sti
sbb
movsb
aas
ret
fwait
cld
push
jle
clc
fucomi
pop
fmul
sti
pop
adc
xor
pop
mov
sbb
push
pop
mov
jnp
sbb
jl
xor
in
popf
inc
add
sbb
push
les
jmp
dec
scas
mov
sub
push
jne
dec
inc
sub
stos
aas
repz
imull
ficoms
daa
mov
fsubp
push
or
rcrb
lods
test
mov
sbb
jae
fsubp
mov
jecxz
cli
imul
cmp
sub
jno
inc
jp
aam
push
insb
push
insl
inc
or
in
lret
mov
int
pop
mov
jl
jg
stc
in
iret
pop
out
shrb
in
int3
xor
push
push
mov
lret
lea
mov
popl
stos
std
jns
and
aas
xor
mull
sti
xchg
xchg
xor
xchg
in
repnz
xchg
ret
les
adc
std
lcall
ljmp
mov
faddl
xlat
shr
fisttpll
fisubrs
negl
cltd
pusha
repz
jno
loope
and
jecxz
int3
leave
pop
es
push
sbb
add
je
inc
xchg
mov
aas
xchg
das
stc
jno
popa
stos
and
xor
pop
roll
