mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
imul
inc
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
mov
add
call
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
push
mov
mov
call
pop
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
mov
je
cmpl
jne
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
mov
sub
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
incl
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
add
sub
push
hlt
mov
jl
js
push
add
lock
xor
and
ss
sub
xchg
cmpsb
push
aaa
pop
push
push
cmp
js
jl
mov
push
mov
out
lret
mov
pop
push
push
mov
cmp
sbb
push
and
rorb
xor
popa
sbb
mov
cmp
enter
pavgw
int3
mov
push
in
pop
add
imul
rorl
sbb
sbb
movsb
into
or
mov
and
add
add
or
ja
pop
sub
ret
adc
xorl
mov
stc
push
pop
call
and
stos
add
lods
out
mov
xchg
imul
pop
nop
ja
sbb
lods
add
frstor
xchg
sahf
shr
ret
out
inc
mov
xor
mov
test
out
int3
lea
or
mov
mov
adc
sbb
add
sti
add
lret
test
add
add
pop
mov
adc
cmp
sbb
add
jle
pop
mov
movsl
cld
cmc
xchg
xchg
jne
jg
scas
sbb
add
ljmp
mov
xchg
dec
jle
mov
movsl
outsb
inc
add
inc
cmpsl
xchg
inc
add
cmp
je
packssdw
pushf
imul
fstl
loop
cmpsb
push
jnp
and
dec
outsl
mov
or
outsl
testl
ljmp
push
sbb
and
into
dec
ljmp
jmp
inc
movsb
cmp
xor
xor
jmp
sub
xor
pop
or
popa
sti
imul
cwtl
subl
xchg
dec
fwait
and
xchg
push
aam
fcoml
std
and
dec
inc
and
test
scas
dec
cmpsl
push
add
fsubp
dec
adc
je
mov
cmp
pop
xchg
jbe
add
fbstp
insl
fs
nop
fstl
enter
xor
push
jo
mov
inc
pop
mov
push
add
mov
and
mov
jecxz
ret
pop
dec
out
les
shl
mov
gs
push
out
inc
into
shll
sub
pop
mov
insb
sbb
add
lods
cmp
rorb
dec
mov
rcr
mov
or
repz
icebp
mov
xchg
xor
ljmp
fiadds
inc
or
pop
pop
and
test
jecxz
inc
cs
or
cmpsb
imul
jno,pt
stos
in
inc
adc
popa
adc
jl
bound
in
int
paddd
pop
and
es
cmc
xor
mov
push
adc
rcl
stos
xor
dec
jno
out
mov
mov
add
repnz
hlt
repz
dec
int3
lea
sub
jge
jb
pop
js
lret
and
or
jecxz
icebp
mov
xchg
stos
xor
rorl
das
mov
push
mov
push
shlb
lcall
popa
cmp
out
mov
and
rcl
mov
cld
sbb
pop
fldl
push
mov
cmp
add
jmp
cmp
aad
mov
and
and
push
data16
xor
test
inc
mov
xchg
mov
roll
adc
shll
add
xchg
or
inc
rorl
push
push
aaa
das
push
mov
ret
cmp
test
pop
or
add
loope
sti
inc
ss
and
mov
and
push
jo
ret
js
and
rolb
stos
rclb
cmpsb
fnstenv
stos
sarl
mov
cmp
into
cli
sbb
push
pop
xchg
xchg
cmp
mov
nop
or
adc
mov
jnp
mov
and
inc
and
push
or
inc
rcrb
inc
push
fbld
hlt
push
pop
and
je
daa
xchg
jl
js
add
mov
mov
aas
lret
push
pop
add
iret
mov
xor
jo
les
and
inc
xchg
add
bound
adc
pop
arpl
cmpsl
or
adc
shrb
ljmp
lret
add
pusha
inc
sti
mov
pop
sub
jbe
daa
xchg
xor
xchg
nop
or
std
cmp
rcrb
jg
repnz
aas
sti
pop
aam
inc
iret
mov
clc
ds
sub
xchg
lods
bound
addl
add
pop
push
scas
scas
stos
test
arpl
or
adc
loope
dec
mov
jae
aas
sbb
cmpsl
pop
adc
or
and
pop
lods
or
test
jno
out
add
out
fs
mov
jge
or
rorb
pop
pop
sbb
mov
sbb
ja
pusha
in
jmp
inc
and
sbb
jp
imul
lret
xor
aaa
pop
jmp
inc
outsl
push
inc
test
out
jge
jge
push
xchg
dec
test
mov
ljmp
xchg
insl
mov
cmpsb
mov
dec
lods
push
adc
stc
add
into
xchg
stos
lods
sarl
or
xor
and
add
jb
pop
test
ret
and
jnp
enter
mov
insl
pusha
mov
out
sub
or
or
jl
rorb
pop
cmp
in
mulb
push
mov
ss
add
rcll
out
pusha
jle
sbb
add
rorl
xor
mov
ja
movsl
pusha
dec
push
sar
sub
inc
testb
sbb
pop
jae
lret
je
imul
pusha
rolb
nop
rcrl
test
pop
bound
push
cmp
push
das
stos
xor
inc
sbb
cmpsb
adc
or
enter
cmp
pop
sub
pop
pop
mov
xor
testl
cmp
lahf
push
pop
insl
add
add
jle
xchg
fldt
lret
sbb
movsb
mov
xor
outsb
icebp
pop
stc
sub
cltd
sub
and
mov
cmp
into
jnp
iret
inc
sub
imul
pop
sbb
sbb
mov
push
mov
mov
ds
lods
jle
fcompl
sbb
or
sbb
mov
mov
in
or
leave
ljmp
add
jno
in
in
sbb
and
mov
je
mov
daa
xchg
push
xchg
and
in
shll
jp
pop
dec
mov
fnsave
fwait
hlt
mov
ljmp
dec
push
insl
or
and
pop
repnz
jg
je
cmp
test
test
in
into
fwait
in
or
iret
imul
xlat
decb
lods
sub
cwtl
push
jl
push
add
arpl
cmpsb
adcl
add
inc
mov
dec
adc
fsubr
xchg
xorb
jp
cltd
ret
imul
inc
jbe
repz
push
mov
adc
data16
ljmp
adc
popa
add
mov
dec
negl
scas
push
scas
cmp
pop
aas
add
and
pop
shll
sbb
test
push
xor
jle
cmpsl
sub
pop
xchg
aam
ror
adc
inc
xor
pop
fdivrs
sbb
add
sbb
inc
add
pop
out
xchg
and
ss
in
sub
mov
ret
jbe
mov
mov
cmp
scas
dec
mov
hlt
add
rcll
fcmovne
dec
loope
sub
in
add
filds
mov
pop
scas
inc
inc
push
and
push
out
or
mov
rclb
xorb
jmp
orl
cmpb
repnz
xchg
xor
aas
adc
insb
pushf
xchg
mov
cmpsl
mov
in
cmp
push
call
mov
mov
inc
xor
hlt
imul
sti
insl
mov
outsl
icebp
mov
push
flds
add
add
mov
int3
or
push
cmpsb
push
and
pop
mov
iret
daa
xlat
jb
rcrb
and
jg
push
adc
pusha
mov
push
xor
dec
mov
sub
mov
nop
std
xchg
and
mov
inc
adc
cmc
cli
jp
push
mov
fisubrs
hlt
and
lods
cmp
dec
aad
adc
cmc
add
add
add
insl
cmp
stos
jmp
adc
fldenv
mov
jae
mov
or
jb
add
inc
cwtl
cwtl
dec
or
icebp
mov
inc
jp
out
bound
mov
clc
rclb
or
aaa
mov
pop
lds
or
pop
cmpsl
ss
jecxz
and
jbe
aas
mov
stc
jmp
sbb
lahf
ds
mov
inc
push
lds
mov
mov
add
hlt
pop
fisubrl
dec
mov
lock
push
loope
mov
shr
inc
cmp
lea
inc
lods
xor
int
fstl
cwtl
mov
out
pop
repz
les
daa
xchg
roll
or
loopne
fbld
mov
adc
jnp
or
repz
pop
mov
xlat
mov
pop
test
fimuls
stos
push
enter
xor
addr16
adcl
jno
and
dec
dec
movsl
jbe
je
fstps
scas
int
pop
push
jl
stos
mov
bound
jp
mov
or
dec
inc
cld
mov
jbe
mov
fmul
fdivrp
mov
outsb
inc
mov
and
out
push
add
xchg
jne
imul
imull
mov
aaa
pop
jae
push
test
pop
adc
add
add
fists
dec
adc
mov
stos
dec
jne
gs
mov
dec
pop
in
mov
test
or
adc
mulb
mov
lahf
mov
std
out
mov
in
bsf
mov
sbb
sti
imul
clc
fwait
mov
jge
dec
cmp
clc
scas
mov
pop
add
idiv
cli
adc
mov
or
cltd
sub
ret
test
or
dec
dec
jns
add
add
sbb
stos
xchg
and
shrb
in
pop
adc
mov
gs
xlat
lods
jecxz
inc
out
pop
and
aam
pop
sahf
push
pop
or
ficompl
push
dec
aaa
push
cld
cli
mov
fimuls
bound
mov
mov
lcall
cmp
pop
inc
inc
add
dec
dec
stos
pop
sbb
add
aaa
jmp
data16
jp
mov
add
sbb
aam
lds
test
aas
icebp
sbb
mov
out
jno
xorl
dec
ss
mov
loopne
push
mov
inc
icebp
pop
xor
dec
fwait
jp
int3
dec
jecxz
ficomps
js
fiaddl
popf
push
jmp
sbb
pushf
jbe
push
lods
repz
or
insb
pop
lcall
enter
adc
push
dec
add
hlt
sbb
iret
lods
popf
jg
sbb
icebp
incb
dec
mov
xor
fwait
movsb
repnz
and
mov
lret
loop
dec
fwait
subb
les
and
jle
iret
sbb
push
cwtl
bound
push
ja
xchg
dec
inc
mov
sbb
xor
push
out
mov
mov
pusha
lcall
lcall
add
pop
pop
mov
sub
push
xor
fs
dec
popf
roll
xor
mov
pusha
xor
jo
dec
sahf
dec
adc
and
lcall
jp
clc
mov
test
push
xchg
mov
pop
mov
int3
fdivrs
gs
je
clc
or
inc
mov
popf
xchg
xchg
aaa
aam
pop
jle
sbbb
aaa
add
mov
mov
add
aaa
fcoms
loop
push
ja
xchg
mov
test
dec
int
stc
xchg
inc
aas
es
mov
or
or
imul
or
inc
push
mov
mov
shll
mov
mov
sbb
loopne
and
mov
in
das
arpl
idivb
dec
insb
cld
loopne
and
cmpsb
xor
ja
out
mov
and
ret
imul
adc
xchg
cmpsl
push
adc
roll
xor
xor
mov
subl
jne
or
sub
lods
mull
popf
xchg
loop
pop
add
in
das
cmp
fdivs
std
test
or
movsl
out
dec
fdivl
inc
push
shrb
xchg
xor
sarl
xchg
dec
jg
std
loope
xchg
pop
dec
add
test
hlt
jae
adc
add
jge
cmp
xchg
pop
xchg
loope
aam
dec
lods
lcall
mov
cmpsl
mov
fs
xor
dec
mov
in
dec
xchg
push
fcmovb
cmc
inc
xchg
sbb
sbb
cmp
push
repnz
into
das
mov
jle
in
inc
inc
xor
or
nop
out
sub
sbb
mov
push
addr16
fwait
mov
aam
clc
adc
ss
loop
iret
inc
xchg
std
add
add
add
clc
in
fcmovne
arpl
sti
mov
aaa
and
adc
mov
dec
sbb
inc
jb
or
sahf
and
inc
mov
xlat
adc
push
stos
adc
adcl
jp
cmp
mov
push
cltd
sbb
icebp
jbe
push
je
fstl
or
pop
std
mov
add
inc
jmp
add
mov
cld
cmc
cmpsb
sbb
call
cmp
cmp
sub
cli
aaa
out
into
mov
aaa
push
adc
das
and
add
cmp
and
test
push
loop
sbb
call
loop
in
stos
inc
lock
ljmp
push
or
jg
xor
cmp
xor
hlt
push
or
out
dec
into
inc
and
or
add
cmp
fstpl
mov
lcall
add
lock
lcall
ficoml
add
fs
pusha
sbb
test
sbb
mov
cmp
xor
push
loop
cs
imul
imul
cld
jo
mov
push
adc
call
sti
mov
xor
data16
or
loop
jnp
stos
ret
out
cmp
aad
jle
sub
fsubp
or
add
add
inc
mov
and
lods
jecxz
push
data16
out
je
in
ret
adc
and
jns
adc
movsbl
xchg
in
push
or
out
xchg
shlb
cwtl
test
lods
jmp
cmpsb
add
out
ret
push
fisubl
add
daa
mov
push
insb
sub
xchg
pop
fists
ret
stc
data16
ljmp
jns
push
ret
add
and
clc
push
imulb
jle
mov
arpl
sub
cmp
adc
setbe
rorl
jbe
mov
sub
jne
out
scas
inc
jp
sbb
cli
sbb
jle,pt
mov
inc
clc
xor
sbb
sbb
adc
pop
push
outsl
out
lcall
sti
jbe
mov
and
stc
ja
test
adc
and
repz
cmp
push
arpl
push
cli
fs
inc
data16
negb
cld
or
enter
add
add
cld
xor
and
adc
in
out
fdivrl
pushf
xchg
nop
mov
push
popf
xor
xchg
mov
daa
ss
lock
int3
and
jmp
and
addr16
pop
xor
clc
aaa
hlt
adc
inc
insl
pusha
popa
lods
push
imul
repz
iret
jns
divl
repnz
loope
nop
mov
push
pop
sbb
jp
insb
outsl
dec
xor
sti
sbb
sar
lods
call
lock
das
test
stc
mov
add
cmp
mov
push
cmp
xchg
jmp
mov
jge
dec
lods
mov
orl
lods
fistps
jmp
xchg
loop
adc
subl
cltd
shll
imul
add
gs
lret
mov
insl
mov
fwait
and
jbe
loop
dec
adc
pop
cmp
inc
test
scas
ret
or
xor
std
push
bound
jbe
add
adc
dec
popf
jmp
xchg
push
cmovge
inc
inc
inc
mov
xor
call
es
arpl
int
cmpsb
scas
adc
xor
jge
jecxz
sbb
jns
mov
movsl
les
inc
sarb
xlat
out
stos
adc
aam
movzbl
jae
aad
jmp
mov
movsl
pop
adc
dec
stc
cmp
add
add
in
xor
jp
and
jmp
test
ret
lods
sbb
clc
pusha
xchg
cs
jle
inc
xor
pop
sahf
out
cmp
es
out
scas
pop
push
cmp
repz
cltd
cli
xor
mov
add
adcb
pop
pusha
lret
dec
sbb
call
ja
dec
jnp
mov
cmp
cmp
aaa
leave
scas
mov
cwtl
test
cmp
in
mov
add
add
mov
mov
mov
jle
out
push
pop
dec
fucomip
or
lods
ljmp
pusha
ret
scas
sbbl
insl
inc
push
push
push
bnd
int
jmp
je
jecxz
daa
pop
das
sahf
pusha
jno
fadds
mov
clc
rclb
dec
or
mov
push
jbe
insl
sbb
push
inc
jmp
pop
lahf
add
add
mov
out
and
pop
test
jno
sbb
jle
mov
js
or
and
pop
ret
sub
cmp
into
das
push
mov
pop
shlb
push
mov
fsubrs
mov
je
mov
add
xchg
mov
mov
lods
inc
xchg
sahf
mov
rorl
aad
aas
pop
lcall
xlat
shll
mov
dec
xor
add
pop
and
push
cmpsl
jbe
push
mov
jno
sub
js
pop
popf
insb
dec
rolw
ficoms
addr16
push
xchg
or
js
testl
call
lret
inc
cmpsb
xchg
add
xlat
imul
fcoml
sarl
inc
push
adc
adc
dec
test
ss
sub
cmp
or
daa
out
push
sbb
add
ja
or
filds
cld
add
xor
xor
inc
lret
pushw
clc
leave
cwtl
dec
push
xor
cmpsl
ret
mov
imul
ror
stc
xor
add
imul
sahf
das
aaa
adc
popf
mov
sub
rclb
nop
sarl
mov
jge
dec
cwtl
sub
call
sub
inc
rclb
xchg
pushf
ret
fcmovu
xchg
lods
cmp
jg
push
jg
mov
ret
adc
mov
mov
imul
ret
adc
ds
pop
popf
popa
cmp
jb
cwtl
repnz
mov
mov
jp
aas
sub
pop
das
cmp
arpl
repnz
inc
xor
in
dec
mov
je
lret
xchg
dec
sub
mov
cmpsl
dec
mov
dec
loop
or
cs
sbb
enter
test
and
sub
adc
xor
lods
loope
call
mov
sub
pop
inc
nop
hlt
mov
inc
out
sbb
sbb
push
insb
add
jge
movsb
bound
incl
pop
out
pop
xchg
dec
and
push
xchg
aad
shll
mov
cmpsb
out
inc
shll
out
in
xchg
arpl
xchg
cmp
push
stos
mov
xchg
sbb
dec
fdivp
mov
add
pop
mov
mov
addl
ror
inc
test
ss
lahf
roll
and
pop
or
out
cmp
xchg
dec
dec
js
mov
inc
sahf
sbb
push
test
ret
mov
divl
xor
xor
lods
sti
xchg
outsl
stos
fdivrl
and
push
in
dec
gs
std
cmpsb
jp
arpl
push
negl
pop
mov
or
inc
loope
in
push
push
jmp
add
inc
leave
or
jns
lret
scas
xchg
jmp
cltd
leave
push
mov
lahf
mov
push
into
sub
mov
adc
loopne
push
call
test
jb
orb
xlat
mov
ficoml
movsb
test
xchg
ds
dec
out
mov
mov
stc
sub
scas
std
mov
punpcklwd
dec
jno
or
mov
in
and
cmpsb
in
fstps
lds
aaa
sbb
pushf
push
popf
push
sbb
pop
and
jmp
xor
out
aaa
pop
xor
imul
inc
xor
sbb
movsb
scas
js
or
push
aam
push
sub
iret
mull
jl
mov
sbb
push
mov
inc
xor
dec
xchg
jnp
mov
jno
jae
test
jl
clc
push
scas
ror
loop
or
add
add
call
addr16
dec
mov
jae
lods
aam
mov
pop
xor
aaa
ret
xor
jg
je
stos
adc
in
daa
inc
xchg
add
jge
lock
add
sub
aaa
dec
cmpsl
mov
in
movsl
call
popf
int3
jecxz
xor
mov
fists
inc
lods
test
dec
push
call
inc
push
jb
rcl
lods
flds
add
add
pop
mov
iret
scas
and
popf
rcr
jns
push
push
jp
mov
int
dec
pusha
and
xor
dec
jbe
fadd
push
lock
mov
adc
jne
dec
and
cmpsb
or
xchg
pop
outsb
in
dec
fisttpl
and
and
test
xor
sub
popf
sub
jl
mov
int
add
stos
fldenv
jns
shrl
xchg
push
fcmove
xor
std
aam
in
dec
mov
daa
pop
loop
mov
push
clc
push
or
xlat
mov
jbe
sub
jnp
dec
or
dec
pushf
sbb
js
mov
imul
xor
movsl
inc
push
fs
pop
xchg
inc
outsb
mov
mov
sub
jge
lea
add
sbb
dec
iret
push
popa
cmp
add
jecxz
sti
and
test
lahf
cmp
mov
mov
fmull
imul
test
testb
sbb
clc
aad
inc
popf
adc
jno
inc
cmpsl
data16
fnstsw
es
inc
sub
adc
lods
and
add
lahf
dec
aas
push
sub
out
dec
cmp
pusha
add
add
outsl
xchg
loope
mov
push
cmp
imul
xchg
cld
adc
add
xchg
xchg
iret
out
and
insb
cmpsl
mov
das
imul
xchg
popa
or
leave
mov
mov
sbb
inc
push
mov
mov
push
mov
clc
mov
daa
enter
sbb
push
add
mov
pop
mov
mov
add
jmp
cmp
cmp
fcomps
sbb
dec
in
aas
mov
pop
push
pop
lock
andl
loope
xchg
jno
enter
mov
mov
test
fsubrl
push
push
sbb
dec
pop
ficomps
pushf
pop
sub
fdivrl
jns
ret
adc
test
stc
push
xchg
fdivs
inc
adc
or
xchg
add
in
lds
in
xchg
lods
mov
dec
dec
aam
fwait
scas
or
push
lahf
add
add
push
jno
jne
aaa
cli
incl
cmp
jo
leave
jae
push
fistl
sahf
cmpl
inc
xchg
sarb
popa
int3
and
rcll
in
fsubrs
aad
out
movsl
xchg
mov
fisubs
pop
int
inc
mov
and
repnz
cmp
test
movsb
mov
iret
lock
int
imul
push
aas
push
jmp
std
pop
fdivr
int
cmp
fdivrl
add
add
addr16
pop
or
mov
mov
sbb
add
dec
fildll
std
add
xor
push
ja
push
pusha
jge
js
lods
movsb
daa
outsb
push
sub
clc
cmc
jb
inc
mov
mov
inc
test
out
ficoms
xor
and
sub
mov
mov
mulb
sbb
dec
mov
enter
inc
mov
jno
ljmp
jne
add
xchg
inc
sti
aam
in
xchg
jle
mov
sahf
dec
mov
fisubl
push
mov
cmp
inc
lret
xlat
iret
adc
mov
int
cmp
test
pop
subl
fcompl
stc
push
sbb
fadds
dec
stos
inc
stos
adc
out
push
dec
inc
adcl
xchg
lods
test
sub
jg
es
xchg
mov
add
add
std
push
bswap
fsubrl
add
sbb
cmp
stos
test
retw
jl
fstpt
mov
dec
or
jle
notb
stc
sbb
popf
lds
lcall
lret
lods
pusha
leave
in
xor
push
shll
fadds
dec
sbb
mov
mov
pop
mov
adc
add
dec
xchg
cmp
scas
lods
mov
push
push
mov
add
and
repnz
inc
push
pop
movsb
jo
adc
fcomps
cmp
iret
fs
pop
pop
inc
test
imul
outsl
fs
jmp
loop
in
dec
or
not
sub
gs
jecxz
mov
fisubl
xor
popa
fimull
jno
push
js
int3
push
ja
mov
pop
fst
movsl
jp
aaa
sub
xchg
in
imul
into
lret
push
in
daa
out
add
enter
lea
pop
jbe
test
add
add
and
jl
fucomp
ret
jl
pop
inc
pushf
js
xor
mov
and
test
or
mov
xchg
xorb
lret
xchg
cli
hlt
add
aam
lods
test
adc
inc
shr
add
fidivrl
cmp
andb
sti
jg
pop
pop
mov
mov
cwtl
rclb
xchg
pop
es
inc
icebp
ja
push
push
int
test
jl
xchg
aas
sbb
pop
lock
pop
bound
jle
je
subl
mov
add
adc
mov
cmp
ret
pop
xchg
out
mov
std
loopne
push
pop
and
test
or
leave
enter
dec
inc
add
lahf
rcrl
sbb
and
pop
sub
lcall
adc
push
lock
inc
sub
xlat
repz
add
insb
mov
jle
icebp
pop
ja
dec
ss
sub
iret
ret
jecxz
fstpt
or
mov
repz
std
mov
jb
mov
jmp
sti
ja
inc
lods
mov
sbbb
pushf
fsubs
icebp
data16
mov
fsubr
sub
xchg
fisubl
dec
sbb
push
pop
or
mov
fwait
jl
xchg
fcompl
and
fcmovu
pop
sbb
aaa
jno
jle
pop
xor
mov
xchg
loopne
or
mov
pushf
unpckhps
push
repz
or
ret
jb,pt
jo
xchg
sbbl
dec
mov
mov
cld
push
or
sbbb
stc
lahf
testb
dec
scas
jg
mov
xlat
jbe
scas
jnp
movsl
fldenv
cmp
cmp
jp
mov
add
mov
hlt
add
push
mov
pushf
repnz
gs
je
in
adc
rorl
and
inc
jns
push
jmp
jg
push
mov
aaa
xor
arpl
jno
xor
xor
sbb
adc
aaa
push
add
es
gs
xchg
lahf
jmp
mov
pop
inc
scas
pop
xchg
leave
xchg
adc
fucomp
enter
sbb
js
hlt
out
add
add
jne
add
movzbl
jb
cmc
mov
sub
cmp
and
sbb
mov
loope
movsb
push
cmp
mov
pop
mov
lods
xchg
jnp
and
int
fisubrs
inc
inc
inc
shll
adc
mov
xchg
and
push
rolb
lock
pop
xchg
std
jne
dec
sub
mov
dec
mov
fisubrl
pop
cmp
add
ja
or
cmc
daa
jb
adc
mov
or
outsl
cmp
push
inc
adc
mov
jae
inc
add
shlb
mov
cs
ret
and
int3
add
jae
or
pop
popa
sub
jb
dec
inc
sti
pushf
and
push
lcall
jnp
addr16
cmpsl
mov
repnz
push
out
test
xchg
popa
fadds
in
add
sbb
shl
pop
sbb
fmulp
stc
mov
adc
in
rorl
push
in
inc
pop
dec
lds
xor
clc
jnp
mov
fcompl
ret
mov
push
ja
imul
jo
mov
mov
sub
imulb
jae
jbe
stos
pop
test
pushf
int
out
test
out
aam
imul
