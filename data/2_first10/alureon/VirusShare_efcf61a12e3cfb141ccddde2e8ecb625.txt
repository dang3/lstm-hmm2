divb
popa
and
notl
divps
repnz
and
loope
pop
mov
fs
pushf
arpl
cmp
loop
inc
inc
pushf
std
xchg
mov
popa
mov
decl
push
push
incl
loopne
and
movsb
dec
rorl
mov
mov
sbb
cmp
cmpsb
dec
push
adc
xlat
xchg
push
push
aaa
adc
pop
cld
imul
sbb
mov
mov
xchg
adc
imul
sbb
jg
cmpsl
pop
lahf
and
arpl
repz
in
adc
dec
pop
push
or
mov
decb
cld
jge
es
xchg
subb
adc
sbb
sub
je
shrl
jp
xorl
lret
cmpsl
dec
push
dec
mulb
das
jl
repnz
mov
push
mov
inc
inc
call
and
mov
call
push
mov
call
mov
add
mov
dec
sub
dec
call
lea
add
add
add
mov
imul
add
lea
add
add
mov
dec
sub
call
sub
add
dec
inc
add
call
lea
call
lea
and
imul
add
add
lea
movzbl
lea
lea
pop
add
mov
add
add
inc
pop
mov
dec
pop
add
add
dec
and
pop
dec
lea
imul
sub
add
sub
dec
mov
pop
mov
add
pop
add
dec
mov
mov
lea
call
mov
mov
mov
or
ret
lea
and
push
inc
inc
push
dec
mov
push
inc
lea
push
mov
inc
push
add
movzwl
mov
add
push
dec
ret
push
sub
dec
imul
mov
and
imul
inc
push
add
sub
call
pop
ret
jmp
dec
mov
add
mov
movzbl
add
xor
add
or
dec
and
inc
inc
movzbl
mov
dec
xchg
inc
dec
imul
inc
xor
inc
mov
dec
add
inc
mov
sub
dec
jne
mov
mov
or
lea
pop
lea
sub
pop
movzbl
dec
pop
inc
mov
add
inc
lea
add
dec
add
add
lea
lea
add
ret
push
dec
add
dec
dec
inc
dec
mov
mov
push
push
push
push
dec
xor
inc
push
mov
lea
dec
imul
lea
mov
lea
inc
lea
mov
dec
push
mov
inc
xor
or
inc
push
add
dec
push
mov
add
pushl
lea
call
dec
add
add
dec
mov
mov
mov
lea
dec
pop
ret
add
mov
mov
movsbl
sub
inc
movzwl
lea
cmp
jb
dec
xor
inc
mov
lea
imul
mov
imul
inc
inc
movswl
dec
mov
inc
inc
mov
add
add
cmp
jb
inc
pop
inc
mov
lea
dec
lea
or
dec
dec
dec
inc
dec
and
add
xor
dec
xor
imul
mov
mov
imul
dec
test
jbe
xor
dec
mov
lea
mov
inc
mov
add
dec
inc
imul
and
lea
dec
mov
sub
movzbl
dec
sub
add
dec
sub
and
dec
dec
mov
inc
lea
mov
imul
mov
inc
mov
mov
or
inc
movsbl
mov
dec
dec
jne
inc
mov
add
add
and
add
imul
dec
dec
dec
add
dec
mov
inc
inc
dec
inc
dec
dec
mov
dec
mov
add
or
test
jbe
dec
add
add
movswl
mov
inc
mov
dec
add
add
mov
mov
add
movzbl
mov
inc
dec
dec
sub
inc
mov
inc
and
sub
imul
mov
lea
mov
movzbl
mov
sub
add
sub
mov
and
movzbl
imul
mov
add
mov
movzbl
add
add
mov
dec
jmp
push
add
mov
mov
dec
lea
inc
dec
imul
sub
add
dec
inc
mov
sub
inc
and
dec
sub
sub
dec
dec
mov
dec
add
dec
add
or
mov
dec
add
mov
mov
inc
dec
movsbl
xor
dec
dec
inc
cmp
je
call
call
add
sub
inc
inc
inc
xor
add
inc
lea
or
or
add
mov
inc
call
call
imul
ret
mov
imul
pop
inc
ret
push
dec
dec
dec
mov
inc
push
dec
or
push
inc
push
inc
push
lea
lea
imul
dec
add
inc
imul
inc
imul
call
lea
push
lea
push
movzbl
pop
mov
mov
mov
inc
dec
mov
dec
sub
inc
dec
dec
dec
je
mov
or
inc
imul
imul
xor
dec
sub
lea
mov
dec
add
mov
inc
inc
lea
inc
repnz
inc
dec
add
mov
jmp
mov
add
jmp
xor
add
add
inc
lea
inc
add
and
inc
dec
mov
mov
sub
sub
pop
pop
ret
push
add
imul
add
add
or
add
imul
lea
lea
lea
xor
mov
mov
dec
add
inc
inc
inc
imul
imul
inc
inc
inc
sub
imul
sub
and
pop
ret
sub
and
mov
mov
lea
mov
inc
mov
mov
dec
imul
mov
dec
add
xor
lea
mov
mov
dec
inc
inc
imul
xor
lea
lea
mov
mov
cmp
jb
dec
push
movsbl
add
push
add
lea
push
mov
mov
xor
xor
lea
xor
dec
sub
xor
dec
add
push
mov
sub
mov
lea
mov
xor
add
imul
mov
lea
imul
mov
inc
add
movzbl
mov
or
add
dec
or
add
movzbl
sub
movzbl
sub
sub
add
imul
lea
dec
add
inc
jmp
into
and
mov
js
pop
jns
in
jmp
dec
mov
jbe
push
fistps
sar
aad
fiaddl
jl
stos
sbb
mov
dec
adc
rorl
inc
cwtl
mov
outsb
and
std
mov
xlat
pop
adc
push
cwtl
movsb
addr16
imul
fistps
gs
gs
cld
stos
mov
jle
cltd
in
out
rcrb
jmp
cmc
es
dec
idivl
outsl
jg
repnz
jmp
ret
adcl
and
dec
test
mov
jae
insb
lds
pusha
inc
stos
add
mov
rcrb
sub
cmp
arpl
sub
jne
jle
mov
add
mov
sbb
inc
xlat
mov
fsts
xchg
lock
rcrb
sub
xchg
mov
dec
hlt
insb
popa
push
jecxz
jmp
pop
sbbl
test
dec
adc
or
mov
or
ljmp
xchg
jae
mov
pop
pop
imul
in
xchg
dec
add
xchg
or
nop
mov
sbb
movsb
adc
mov
adc
xorl
lret
test
sub
mov
jp
fstps
jecxz
pop
insb
mov
adc
push
fisubl
outsb
jg
fstpl
mov
movsb
dec
push
inc
fnstsw
jns
mov
xchg
push
sub
sti
pop
out
mov
sti
outsb
rep
scas
push
mov
sub
testl
adc
int3
sbb
mov
sti
cwtl
aad
adc
jecxz
ss
clc
mov
std
shlb
in
pushf
or
scas
lods
or
pop
pusha
test
mov
call
rorb
roll
test
xor
outsl
cmp
into
cs
leave
ret
xlat
jle
push
daa
lods
sbb
pop
dec
movsl
int3
leave
push
test
push
pop
popa
push
mov
mov
xchg
in
lds
scas
dec
rcll
push
cld
push
bound
out
sbb
add
adc
hlt
adc
ljmp
mov
sbb
and
jne
movsl
rorb
ret
scas
mov
les
push
dec
or
ret
cwtl
pusha
pop
sub
cmpb
cmp
jbe
or
mov
loopne
and
lods
inc
test
pushf
inc
jle
push
xor
jl
mov
imul
outsl
movsl
xor
jae
dec
stos
ret
cmp
std
lret
jmp
lcall
lcall
shl
xor
pop
into
or
dec
fidivrs
push
cli
pop
leave
add
repz
stc
es
and
xor
stc
jno
dec
xchg
sub
cwtl
sub
mov
test
pop
es
inc
mov
inc
jmp
adc
sub
inc
dec
ljmp
jne
xor
cmpsb
push
int
imul
gs
and
and
repnz
addr16
sub
mov
sub
nop
mov
and
push
mov
fisubs
lahf
xor
fldt
in
adc
lcall
in
jle
stos
push
fwait
xchg
xor
xchg
mov
stc
push
and
push
in
add
test
ret
sarl
outsl
shrl
in
popa
and
pop
add
fnstsw
popa
xchg
xor
fcmovne
loop
xlat
xchg
jne
cmpsl
int3
pop
jmp
scas
adc
sub
mov
leave
sahf
call
or
adc
xor
hlt
aad
xor
fwait
jle
or
add
dec
dec
dec
xlat
pop
lds
xor
push
int
push
clc
insl
pop
or
pop
in
and
sahf
adc
cmp
fs
adc
movsl
leave
pushf
gs
sub
push
test
inc
or
fwait
sahf
hlt
rorl
fcompl
sbb
std
js
test
adc
int
nop
mov
inc
xlat
pop
sbb
mov
or
add
mov
inc
movsl
aad
aaa
ds
add
push
sub
xchg
movsb
lcall
xchg
int3
mov
mov
mov
sbb
mov
int
sarl
inc
imul
pop
and
enter
mov
sbb
scas
mov
mulb
sarb
fnsave
ret
repz
sub
push
xor
pop
xchg
test
roll
sub
loope
pusha
dec
test
push
fnsave
cmp
xlat
loopne
stos
push
stos
jno
pop
outsl
fnstcw
mov
ret
adc
addr16
xchg
and
aaa
cwtl
icebp
out
lds
or
sub
jle
or
inc
or
test
or
cmc
jg
jge
loop
pop
cli
mov
sbb
sub
inc
fdivs
add
stos
int
enter
inc
inc
inc
clc
mov
sbb
pop
or
faddl
adc
sbb
pop
add
test
addl
scas
fists
popa
mov
je
push
fs
mov
inc
lea
in
gs
jae
dec
call
sbb
jns
add
or
dec
movq
xor
mov
inc
lds
pop
sub
inc
sbb
add
pop
repnz
mov
daa
jno
pushf
popa
jb
xor
out
xchg
imul
xchg
and
mov
bound
adc
xchg
test
push
pop
cwtl
xor
stos
or
ljmp
mov
mov
in
lret
test
jne
mov
or
popf
jecxz
add
outsb
subl
dec
mov
cltd
pushf
add
mov
call
jne
hlt
pop
shll
dec
sub
cmc
iret
mov
fstps
cltd
out
stc
pop
lds
mov
cltd
in
jo
mov
lret
sbb
popf
and
cmp
mov
mov
push
lods
iret
jl
and
push
testb
imul
scas
xlat
adc
iret
fdivl
xor
shll
out
dec
cwtl
cmp
test
and
out
in
and
mov
fiadds
cmpsb
pop
popa
lahf
mov
mov
push
leave
jns
xchg
arpl
jl
push
mov
mov
jecxz
and
notl
xchg
ss
mov
adc
lcall
pop
inc
fistl
dec
inc
mov
mov
mov
adc
test
jae
xchg
rorb
push
jl
addb
jae
test
xchg
loopne
mov
lock
inc
push
cmp
stos
inc
sahf
int
nop
mov
cmp
pop
dec
mov
ss
jns
aad
imul
gs
xchg
cmpl
jle
pop
sbb
xchg
incb
test
outsl
ret
scas
rcrb
inc
scas
jle
jle
pushf
movsl
xor
inc
push
adc
fbstp
pop
into
jo
lcall
jg
fisubrs
mov
xor
imul
pop
dec
mov
sub
push
mov
jecxz
dec
mull
push
cmpsl
fisubl
push
sbb
aaa
and
in
xor
fsubrp
xchg
sub
outsb
sar
mov
mov
pop
xorl
mov
or
push
xor
test
lcall
divb
jo
out
scas
mov
sahf
cmc
inc
test
mov
rcrl
insl
push
test
out
outsl
push
ss
lahf
dec
shll
sti
mov
mulb
sarb
xchg
test
rcrb
popf
and
lea
mov
add
mov
loop
adc
iret
push
cld
es
sar
das
in
mov
push
nop
imul
lret
in
das
movsb
or
sub
mov
ss
mov
clc
ja
pop
aad
jmp
in
ds
jb
jge
aam
adc
xlat
sub
cmp
jne
bound
sub
add
outsb
and
xchg
xchg
mov
pop
movsb
mov
inc
cmp
lss
jo
dec
faddl
mov
dec
xorl
movsb
xor
inc
xchg
loopne
inc
repnz
mov
sub
add
add
jno
lods
lods
ja
add
mov
cmp
jne,pn
mov
jge
out
xor
in
out
push
and
je
pop
int3
out
sbb
pop
lock
sbb
addb
fs
in
sub
scas
cld
test
and
pop
mov
xchg
int3
cmp
inc
push
push
stc
mov
loop
and
jae
imul
xchg
scas
xchg
and
mov
ficompl
cmpb
fsub
pop
popa
lcall
rclb
pop
push
mov
outsb
mov
jne
jns
jb
inc
xor
and
push
jg
cmpsb
jl
dec
jle
scas
or
mov
stos
add
cmp
cmp
sbb
push
sahf
loope
sub
aad
or
dec
hlt
imul
inc
inc
xchg
stos
push
mov
or
xchg
lahf
and
push
int3
addl
mov
sarl
loopne
cmp
sbb
aas
cmc
ds
push
call
movsb
fmuls
and
lods
loopne
out
xor
inc
cmp
add
push
outsl
into
sbbb
sub
jmp
sub
push
mov
mov
add
sub
loope
rcrl
mov
mov
sub
xor
inc
xchg
xor
fbstp
inc
cmpsl
mov
mov
decb
daa
sub
pop
stos
add
std
xchg
loope
out
mov
das
js
pop
ss
rclb
xor
sub
dec
or
cmp
mov
mov
icebp
jbe
es
mov
sti
ror
push
icebp
in
js
xchg
mov
test
test
jbe
arpl
and
or
dec
or
push
stos
idiv
or
iret
push
dec
call
mov
jecxz
mov
push
push
xchg
fs
shrb
adc
fwait
in
test
adc
dec
je
push
ljmp
push
jg
jg
ljmp
insb
push
or
out
jg
mov
push
repnz
xor
cmpsw
mov
xor
xchg
arpl
mov
jbe
ss
mov
xchg
js
jns
cmp
fs
leave
mov
pushf
xor
and
es
mov
or
adc
insl
addb
or
cmpsl
jmp
test
repnz
mov
cmpsl
mov
pop
sahf
xchg
add
push
mov
lock
mov
or
dec
push
movsl
lods
ret
insb
popa
jne
sub
cmp
or
fdivrs
mov
sbb
pop
xor
shrl
repnz
fsts
test
jecxz
cltd
sbb
xchg
adc
pop
sahf
add
push
push
cld
aaa
and
dec
cmp
icebp
or
repz
out
daa
mov
add
cmp
xchg
inc
mov
gs
xchg
add
insl
cli
jb
and
add
xor
ret
out
push
xor
aam
push
sub
cmp
addr16
dec
mov
cmc
inc
mov
mov
cmp
jb
mov
leave
mov
mov
mov
test
push
jns
fs
push
fildl
push
dec
mov
int
xor
cld
push
repz
mov
daa
sbb
popa
pushf
mov
loopne
loope
push
push
hlt
sub
mov
xchg
mov
addl
shll
aam
jg
in
push
or
inc
and
mov
orl
orl
or
test
cmpsl
js
jnp
or
xchg
pop
adc
aaa
jbe
jns
jmp
rcrb
mov
cmp
or
dec
add
inc
xor
out
push
icebp
sub
jp
inc
add
insl
add
lods
rcll
inc
popf
test
xor
aam
xor
addr16
popa
or
faddl
inc
ss
jnp
jg
fcomps
adc
adc
fdiv
lret
mov
cmpsb
insb
jp
lcall
pop
xchg
adc
ss
cs
je
lods
jno
mov
out
mov
cmp
popf
or
stos
pop
cld
mov
adc
xchg
pop
and
cltd
sbb
mov
or
cmp
adc
in
bound
je
push
fdivrs
cmpsl
les
push
stos
idivl
mov
jno
repnz
dec
ss
lahf
outsb
repnz
popa
jae
jg
jo
out
jb
xchg
into
jo
push
fs
es
xor
popf
subl
cmp
push
mov
push
xchg
stos
xchg
dec
push
addr16
add
and
stc
inc
in
or
mov
xchg
call
enter
je
popf
cltd
jbe
inc
std
sub
adc
adc
fldl
sub
clc
sub
repnz
test
mov
pop
sbb
test
loop
sub
mov
lcall
jae
push
notl
rcr
xor
jmp
outsl
jae
nop
insl
jl
arpl
jle
cwtl
dec
daa
cltd
cmpsb
mov
loope
in
daa
out
mov
mov
jge
test
add
pop
dec
fistps
stos
pop
adc
or
je
pushf
aas
cmp
add
idivl
sbb
cmpsl
je
lea
cmp
push
lahf
sub
fsubrs
adc
add
xor
icebp
lea
leave
dec
inc
lret
mov
aas
push
mov
lds
sub
clc
inc
fisttpl
scas
out
mov
or
call
sbb
fiaddl
ja
outsb
stos
or
icebp
loop
fwait
mul
mov
sbb
sbb
inc
aam
ret
out
dec
sbb
das
mov
inc
addb
lahf
iret
push
out
mov
push
dec
jne
out
xor
xor
dec
scas
repz
cmp
cld
aad
xchg
lods
cmp
jg
cmp
push
mov
jbe
vminps
jg
add
xchg
scas
inc
jae
scas
pop
pop
fsubl
int3
inc
pushf
adc
push
into
aaa
sub
add
xchg
rorl
inc
dec
pop
inc
push
rcrb
iret
aam
test
jno
mov
xchg
aam
inc
and
test
imul
pop
popa
mov
loopne
imul
fiadds
and
fdivl
sub
cvtdq2ps
xor
ds
or
leave
pop
imul
popa
inc
into
mov
int
loop
int3
sahf
pop
stos
in
jno
iret
jns
es
pop
push
push
loopne
and
adc
cmpsl
test
stos
test
adc
push
sub
test
mov
sbbb
fdivs
mov
fcomps
rorl
pop
jnp
mov
repz
in
les
push
mov
dec
orb
sbb
sbb
xchg
scas
pop
lret
jp
inc
imul
mov
push
jns
cmp
leave
and
mov
call
lret
dec
out
lea
out
icebp
add
test
cld
movd
leave
out
mov
xlat
adc
add
or
mov
cmp
pop
addb
mov
adc
cmp
pop
outsl
push
ret
mov
xchg
icebp
loop
sbb
arpl
mov
mov
sbb
inc
in
sar
xor
lock
inc
jp
mov
mov
xchg
ja
or
dec
mov
mov
sub
fcomip
add
cmp
mov
and
mov
test
jp
scas
and
adc
je
fwait
movsb
rclb
xchg
inc
push
in
inc
mov
loopne
sub
cmp
dec
jmp
roll
xor
pop
test
jns
mov
in
stos
scas
adcb
mov
add
push
ljmp
jecxz
sub
add
dec
jle
stos
cmp
and
mov
ja
cmp
gs
lods
int3
test
rcr
and
aam
in
mov
cmp
testb
jns
int
xchg
add
jbe
and
mov
movsl
or
inc
add
and
mov
adc
in
jb
add
dec
outsb
sarl
jae
push
test
fyl2x
imul
mov
xchg
leave
push
inc
inc
js
jnp
pop
lock
add
pop
test
mulb
adc
inc
lds
xor
cwtl
or
repz
add
push
inc
nop
push
mov
clc
ror
loopne
cmp
popa
add
jmp
mov
mov
mov
mov
pop
jmp
mov
pop
fs
jecxz
lds
imul
cmp
cwtl
push
cmp
pop
sbb
rol
arpl
fwait
add
jmp
out
mov
cmpsb
add
sbb
test
movsb
push
xchg
daa
lock
xchg
add
sub
stos
loope
sub
lret
jb
es
sub
stos
sahf
mov
xchg
pushf
mov
mov
nop
loopne
sub
mov
out
push
push
jnp
in
cwtl
arpl
pop
sahf
clc
cmp
lret
xchg
pop
mov
inc
gs
inc
inc
push
movsl
or
outsl
ds
cmpsb
faddl
loopne
ss
out
add
bound
lds
add
sub
dec
lods
icebp
jno
imul
clc
mov
rcll
lcall
jno
popf
adc
adc
mov
pushf
pop
push
xchg
mov
pop
pop
sti
inc
sarl
outsb
and
and
mov
add
xchg
pusha
sub
push
add
dec
stos
test
gs
push
outsb
lret
push
fisttpl
lret
sbb
and
xchg
mov
mov
call
pop
loop
cwtl
enter
popa
call
testl
ret
mov
aaa
or
ret
lret
imul
sahf
mov
out
loope
hlt
loop
jo
dec
add
push
push
cmp
hlt
out
lock
cwtl
add
or
or
mov
sub
sub
xchg
cli
pop
add
rorb
jae
shlb
pcmpeqb
nop
jno
out
daa
xchg
nop
dec
cmp
sahf
inc
xor
and
inc
push
sbb
and
lods
outsb
dec
xchg
lcall
pushf
shll
hlt
xor
and
jnp
cli
dec
daa
int
sti
mov
mov
lods
cli
adc
arpl
int3
sub
repnz
mov
dec
xchg
xchg
fidivrs
adc
push
lods
sbb
out
dec
fstpl
lahf
orl
adc
adc
adc
mov
xlat
aad
imulb
or
fs
pop
dec
or
movsb
jmp
fs
add
pusha
insb
lods
ss
loopne
mov
pop
or
popa
jle
dec
ja
jecxz
js
bound
sti
stos
std
dec
imul
mov
mov
adc
inc
pusha
dec
mov
pop
mov
dec
lcall
in
add
pop
jge
ret
data16
ja
xor
mov
scas
stos
fisttpl
ja
sahf
mov
mov
fistps
out
insb
and
out
outsl
or
daa
jne
sbb
mov
sbb
cwtl
xor
sub
test
mov
test
cld
test
cli
loop
es
xor
ds
inc
sahf
aam
push
stos
imull
push
lea
xchg
je
repnz
mov
out
inc
stos
cmpsl
jge
std
pop
xor
mov
mov
vandps
pusha
repnz
outsl
data16
mov
mov
xchg
outsl
and
and
adc
xorb
stc
gs
pop
xchg
sti
xor
jno
in
mov
dec
es
sahf
in
push
cmp
lret
push
dec
sub
sub
cmpsl
cli
fnstcw
ret
leave
cmp
sub
mov
shlb
sbb
jae
mov
mov
jo
enter
std
xchg
and
sbb
xchg
lds
test
mov
mov
push
xchg
mov
xchg
and
jg
mov
out
adc
rorl
pop
iret
sbb
dec
or
imul
jb
or
loope
pop
mov
cwtl
cmp
cmp
push
lods
adcl
das
sub
add
fcomps
sti
add
inc
in
ljmp
leave
fbld
rorb
mov
sti
mov
adc
push
add
mov
dec
ja
shr
and
pop
pushf
jno
jno
mov
push
adc
sahf
xor
ljmp
or
pop
popa
sbb
mov
add
fdivp
outsb
jl
jmp
aad
push
xchg
jae
ljmp
sub
and
mov
xor
adc
out
in
add
jae
mov
test
popf
push
inc
gs
sbb
lock
lret
xchg
stos
test
inc
add
jecxz
loope
insl
mov
aaa
or
push
cmp
mov
andl
daa
pop
adc
cli
inc
fcompl
pop
jb
lret
mov
out
cli
mov
lahf
and
into
pushf
repnz
xor
xor
outsl
inc
leave
inc
std
sti
pop
lsl
xor
lods
xor
cld
xchg
mov
sub
adc
mov
and
mov
mov
lea
pusha
filds
xchg
in
pop
push
repz
fbstp
scas
shl
movsb
add
outsl
push
mov
xchg
lods
push
imul
arpl
jecxz
mov
in
loope
std
stc
adc
in
pop
outsl
mov
push
cltd
ds
mov
mov
and
test
push
pop
std
shll
sbb
mov
xlat
pusha
xor
std
daa
mov
xchg
pushw
add
call
sub
rcll
insb
inc
dec
fs
fcomip
lea
cmc
xchg
mov
repnz
cmp
ret
and
push
repnz
jnp
test
jns
mov
xor
stc
lcall
fldt
or
xor
inc
jbe
cwtl
push
or
push
or
cmpsb
leave
or
les
and
jp
rcll
mov
data16
int3
push
cmp
sub
pop
or
int
aas
inc
xchg
jl
push
jmp
cwtl
scas
adcb
sub
loope
jns
lock
mov
jnp
ljmp
adc
sbb
add
int3
mov
arpl
push
push
lods
add
xor
repnz
and
xor
sub
cli
loope
lahf
cli
sti
setns
push
dec
pusha
lock
lret
jl
jg
nop
imul
sti
lds
es
jo
lret
enter
inc
jnp
push
fs
daa
xor
cli
mov
push
aad
gs
xor
xchg
adc
aaa
icebp
dec
aaa
in
lock
mov
push
andl
daa
aas
cmp
repz
js
adc
in
mov
jo
mov
loopne
mov
in
mov
sarl
aam
push
mov
pop
leave
jo
or
jb
or
hlt
enter
mov
inc
inc
pop
sbb
xor
lea
mov
pop
sbb
test
push
push
mov
inc
repnz
or
xchg
sub
pop
xchg
rcll
mov
cmp
mov
sbb
test
lds
sarl
or
and
arpl
cmp
and
ret
xlat
movsl
int3
lret
inc
pop
scas
imul
cli
mov
xor
cmpsb
pop
push
inc
pop
popa
out
imul
movsb
faddl
push
sbb
sbb
mov
frstor
add
xchg
push
test
push
ljmp
fadds
mov
or
gs
mov
imul
test
int3
jnp
fnsave
jmp
xlat
out
xchg
dec
mov
lds
mov
jge
mov
xchg
fcom
pop
pop
cmc
mov
add
imul
mov
inc
jle
cmp
fcomi
fwait
xor
int3
cmp
mov
lods
insb
sub
orb
fmull
pop
push
inc
xor
sub
xor
xchg
out
out
imul
sbb
cli
push
or
inc
push
push
cwtl
mov
cmp
out
insl
mov
mov
into
cli
sub
add
mov
lock
fwait
mov
sbb
jmp
dec
es
adc
pop
lcall
sub
shrb
insb
cmpsb
ret
aad
sub
pop
cmpsl
out
adc
out
add
pop
cmp
push
daa
cmpsl
fsubl
mov
fdivp
xchg
icebp
adc
test
sbb
jno
jle
sub
adc
cmpsl
pop
mov
ja
cmpsb
adc
adc
mov
rcrb
fsub
stos
fldt
cmp
stos
sbb
mov
or
sbb
push
cmpsl
or
in
sarl
mov
xor
jge
dec
out
rorl
sub
addr16
ds
ja
cmc
mov
test
or
jge
roll
lds
in
into
int
inc
jns
pop
pop
mov
lods
inc
mov
cltd
cmp
sub
lret
xchg
stos
xor
push
notb
call
cmp
xchg
cmpsb
inc
dec
mov
xor
jmp
push
divl
std
mov
stc
push
cmp
imul
pop
jge
add
dec
or
subl
mov
and
int3
inc
lods
push
xchg
aas
mov
push
in
push
add
sbb
aaa
lea
pop
lret
test
cmpsb
mov
std
scas
and
pusha
imull
iret
pop
insb
or
pop
pop
inc
loopne
lock
xchg
inc
jo
jg
mov
sub
test
das
pop
mov
imul
push
enter
clc
or
cld
cmp
push
fadds
data16
fisubl
mov
jmp
cmp
in
js
sti
fmuls
aam
dec
ret
sbb
mov
je
scas
jp
jl
pop
sbb
pushf
test
jge
inc
hlt
or
ror
leave
dec
jmp
jmp
and
cmp
jge
add
pop
xchg
mov
addr16
movsb
ret
sbb
xchg
enter
adc
sbb
in
movsl
test
push
cmp
scas
in
in
addl
loopne
out
jae
mov
jno
mov
jns
add
out
dec
cmpsl
stos
fsubrp
mov
add
popa
cmp
and
mov
jle
rorb
fwait
je
sbb
sbb
push
mov
enter
lods
jns
sahf
shll
sbb
xchg
dec
cmp
outsl
inc
les
popa
cmp
cmp
out
dec
mov
sbb
pop
ljmp
add
mov
inc
pop
jl
popf
push
jno
mov
es
hlt
xchg
ds
jbe
in
mov
cli
jmp
mov
push
mov
scas
jmp
test
test
test
add
cmc
and
jg
push
int3
fwait
or
pop
jl
inc
aas
mov
cli
stos
std
call
mov
js
sbb
cmp
pop
mov
or
and
pop
add
ret
int3
stc
pop
fwait
mov
jp
push
pushf
add
xchg
mov
mov
fdivl
mov
nop
sub
mov
repnz
ret
add
gs
sahf
sbb
aaa
push
sbb
repz
xor
shll
add
scas
dec
imul
sbb
sbb
add
in
add
dec
aam
test
jmp
je
push
dec
in
push
out
call
inc
sbb
inc
stos
xchg
or
jl
pop
ljmp
adc
mov
mov
mov
pop
mov
or
mov
shr
js
movb
xchg
outsb
fldl
into
mov
push
jne
aam
in
lods
jo
test
shl
scas
cmp
test
adcl
mov
in
jnp
or
or
push
cmp
cmpsb
les
cmc
cmpsb
sarl
add
jb
jle
adc
test
stos
ss
jmp
in
fsubrl
aam
push
mov
or
xchg
adc
bound
cmpsl
mov
pop
jno
movsb
sbb
ficoml
in
outsl
ss
cmpl
dec
xlat
or
jl,pt
jb
xor
pushf
push
test
sub
outsb
jb
xchg
cmp
fimuls
imul
inc
repz
pop
movsl
sbb
test
out
xor
mov
ja
pop
arpl
add
sub
mov
stos
shll
cmp
push
lret
lret
aaa
xor
sub
js
sub
dec
lahf
lret
scas
inc
mov
inc
cmp
xchg
or
mov
adc
sbb
stos
movsb
dec
cli
mov
adc
adc
test
jae
in
xor
out
sahf
inc
aaa
cmc
ret
outsl
out
lcall
mov
addb
sub
lret
mov
sub
rcrl
pop
xchg
xor
mov
pop
pop
loopne
xor
mulb
cmp
mov
leave
add
pop
dec
sub
fstl
jb
data16
cmp
fisttpl
sbb
aad
xor
xchg
aas
inc
ja
movsl
cli
aad
push
add
fiaddl
xchg
cmc
mov
xchg
sbb
cmp
push
adcb
fidivrs
ja
jno
sub
pop
cld
leave
push
dec
push
testl
add
mov
lods
inc
jmp
out
bound
jl
inc
mov
popf
andl
add
push
pusha
std
add
sbb
inc
inc
aad
imul
scas
movsl
push
jle
adc
adc
pop
and
cmpb
stos
push
fdivrl
movsb
push
xchg
sti
sub
cmp
sbb
icebp
xor
lcall
add
xor
mov
shll
mov
aam
repnz
pop
push
mov
and
sbb
jg
int
jmp
and
add
arpl
xor
sub
pop
dec
nop
inc
and
xlat
mov
popa
inc
dec
sub
jns
call
cmp
add
or
xchg
or
lahf
adc
xor
jbe
cli
jp
pop
out
push
gs
loopne
add
in
dec
sub
mov
lcall
push
adc
pop
inc
sub
divl
not
cltd
fld
sub
addr16
xor
or
inc
cmp
cmp
ja
mov
movsb
sub
mov
mov
cmp
sbb
jle
add
pop
into
jl
pop
mov
mov
and
cmp
cmpsb
pop
imul
cmpsl
daa
sbb
inc
dec
popf
add
fwait
jg
daa
add
jmp
fbld
imul
jns
in
lea
out
ret
sbb
add
pop
arpl
notb
push
cltd
jo
mov
xlat
or
test
sub
pop
or
leave
shl
and
test
mov
iret
fiadds
pop
sti
aaa
test
mov
in
arpl
mov
xchg
sub
sbb
addr16
icebp
out
inc
cmpsb
loope
or
ja
push
ljmp
test
lock
pusha
subl
xchg
inc
lds
bound
test
adcl
sbb
and
mov
add
dec
in
adcb
pop
pop
push
mov
ficomps
inc
test
sahf
fidivrl
cli
pop
sub
test
fcmovbe
mov
inc
stos
test
xchg
cmp
or
sarl
pop
in
pop
cmp
jecxz
pop
inc
push
jo
inc
mov
sti
call
scas
jge
jns
les
popf
jo
push
outsl
ds
dec
iret
add
movsl
cmp
pushf
sub
out
ds
test
mov
popa
xchg
stos
sbb
leave
outsb
jmp
in
mov
test
shll
lahf
mov
pop
mov
or
test
jg
ror
in
cld
pop
pop
and
xor
xor
sbb
add
arpl
mov
pop
fsubr
fldl
mov
loopne
jle
cmpsb
push
insl
inc
mov
in
ss
scas
cmp
jge
insb
out
pmulhuw
xor
popa
fsubr
xchg
xor
jbe
dec
clc
dec
mul
fadds
and
imul
ss
mov
insl
jg
incb
and
push
mov
jecxz
inc
fbld
push
shr
jecxz
std
ljmp
mov
imulb
ror
inc
pop
sbb
inc
imul
cmpsl
push
gs
pop
movsl
push
ja
push
cmp
ljmp
ss
incb
push
xor
mov
mov
xor
dec
mulb
pop
pop
loope
cmp
sbb
insb
loop
dec
gs
loop
xlat
jae
inc
imul
fcoms
sbb
add
pop
xor
jmp
enter
dec
sub
aas
jno
xorb
push
inc
push
lret
xlat
inc
stc
fiadds
and
inc
dec
xor
dec
sub
test
mov
adc
xchg
imul
in
xchg
sub
add
fsub
insb
or
jmp
or
pop
dec
out
xor
pushf
push
mov
andb
inc
aad
jae
int3
adcl
out
bound
fsubrs
rol
mov
shl
dec
outsl
or
sub
aam
stc
push
cmp
aam
outsb
test
in
mov
shrl
fldenv
cmp
insb
inc
inc
shll
jg
stc
mov
das
or
dec
lods
icebp
sbb
repz
mov
mov
rolb
pop
ficoms
lret
push
inc
push
jge
pop
pop
or
scas
sub
adcl
cmp
cltd
cmp
pop
mov
add
pop
dec
in
bound
loop
xchg
movsb
jb
call
sub
pop
mov
xor
aas
xor
movsl
ja
imul
icebp
addl
sarb
xor
sahf
je
enter
inc
repz
fistpll
xbegin
fld
xor
mov
jae
pop
inc
mov
inc
mov
adc
rclb
dec
pop
decw
jle
addb
imul
ffreep
ja
and
in
mov
jns
sbb
out
and
test
cmp
cmpsl
stc
sub
xchg
cmp
pop
iret
push
fstp
jge
dec
mov
das
pop
daa
adcl
dec
ret
or
sbb
lret
jg
loope
gs
data16
aam
sub
xchg
or
adc
jge
in
sbb
push
jg
and
nop
daa
ret
insl
fcmovne
sbb
mov
sub
jp
mov
jb
jl
mov
sub
sub
cmc
aad
stc
js
add
cmp
or
mov
insl
jb
aad
aas
and
das
cmp
xor
cltd
add
subps
mov
pop
fcmovb
and
divl
sahf
popf
fwait
mov
enter
xor
insl
pop
dec
insb
rcrl
rolb
iret
insl
push
cmp
out
out
dec
shlb
aad
popf
mov
jl
rcl
pop
mov
mov
ret
insl
jno
inc
lret
add
aaa
push
call
dec
cs
xlat
enter
lock
mov
lretw
aas
mov
pop
lods
dec
movsw
inc
loop
and
pop
stc
jbe
shr
and
pop
pop
add
por
imul
mov
js
or
pusha
push
xchg
mov
movsb
insb
stos
lds
xchg
in
xor
pusha
fcoms
mov
add
xor
jns
movsl
mov
and
lock
mov
sahf
or
push
mov
sbb
dec
jecxz
mov
xor
or
lret
jo
xchg
loopne
repz
mov
push
jnp
add
ret
in
repnz
std
lock
mov
dec
add
inc
inc
jne
mov
lcall
jnp
xchg
add
mov
jp
inc
pushw
insl
mov
or
mov
pusha
cmp
lock
cs
leave
in
shr
add
daa
inc
movsb
mov
dec
dec
or
cmc
insb
scas
dec
adc
dec
xlat
cld
mov
and
fcoml
add
xchg
ret
arpl
hlt
popf
mov
addr16
or
add
xchg
jp
scas
inc
ds
sahf
pop
push
pop
mov
mov
or
push
xor
push
pushf
jge
mov
les
andb
or
aaa
push
jnp
inc
pop
or
aaa
out
pop
insb
lret
xchg
sbb
movsb
mov
inc
sbb
push
inc
cmpsl
or
in
les
jne
adc
add
sar
andb
fnstsw
cld
fcoml
stos
cli
mov
push
xchg
jno
mov
lahf
mov
adcl
movsb
scas
adc
sub
frstor
xchg
gs
iret
cmp
fsubrl
std
ja
daa
inc
icebp
inc
jle
pushf
insb
xor
adc
stc
xchg
call
cmp
ljmp
adc
fbld
out
outsl
imul
adc
jo
int
pop
scas
popa
cmc
push
xchg
dec
jns
xchg
pop
test
das
cmp
aad
sbb
fdivs
push
mov
int
sub
addr16
jbe
push
jmp
shlb
loop
push
pop
mov
decl
lods
out
xchg
gs
dec
inc
test
adc
dec
mov
cmpb
and
dec
fcmovnbe
aam
mov
dec
add
outsl
mov
loope
pop
pop
rolb
adcl
call
xchg
cmp
push
stos
push
mov
mov
mov
outsb
stos
jb
mov
push
mov
daa
out
mov
shll
inc
arpl
cld
adc
dec
jo
sub
adc
js
stos
mov
jns
jg
sahf
out
or
in
inc
and
mov
jb
sbb
cmp
ret
enter
mov
mov
mov
jmp
and
xchg
jns
dec
mov
bound
mov
rorb
jno
lahf
cmp
jo
rep
ds
nop
sti
cmc
mov
int
lahf
push
imul
scas
or
shr
arpl
andb
sbb
mov
xchg
cmp
pushf
loop
and
lret
add
mov
pop
stos
push
xchg
aas
in
mov
aaa
inc
leave
pop
mov
popa
test
popf
lock
push
or
negb
mov
or
roll
xchg
js
mov
cmp
pop
xchg
mov
inc
sbbb
nop
lods
pop
push
adc
sbb
ja
in
je
cmpsl
dec
xor
aam
mov
add
out
add
pushf
jg
cmp
test
shl
adc
jg
out
jecxz
les
ret
lret
test
and
sti
jnp
sti
aas
dec
ja
adc
mov
movsb
js
call
pop
jle
rorl
insb
sarl
lahf
pop
roll
dec
adc
jns
adc
sbb
lds
adc
xor
or
pop
or
cmp
aam
daa
fisubrl
mov
dec
jmp
ds
xchg
and
inc
repz
ret
mov
mov
xchg
fs
sub
aad
pop
imul
dec
out
repnz
out
ret
pop
movsl
inc
stos
pop
mov
jbe
pop
push
xor
xor
jne
or
in
sbb
pop
jmp
mov
xchg
iret
dec
shlb
mov
lahf
sub
sub
ss
lret
insb
sbb
scas
xchg
aam
lret
cltd
cwtl
jle
fptan
xchg
sbb
aas
outsl
in
cs
mov
jge
inc
add
bound
adc
rorb
inc
fcmovnb
popa
enter
call
pop
mov
cmpsb
adc
rorb
lds
lods
jno
out
dec
xchg
mov
lahf
aam
sbb
stos
ss
and
outsl
decl
shrl
daa
dec
dec
xor
pop
mov
mov
pop
sti
sub
xlat
in
pop
mov
mov
xchg
test
out
les
stos
rclb
pop
jne
ret
pop
and
cmp
nop
push
je
pop
inc
enter
pop
int
inc
push
mov
mov
movsl
push
add
les
psrad
mov
fldenv
je
mov
cwtl
dec
jmp
mov
cltd
mov
lahf
mov
and
mov
add
out
lds
pushf
fisttpll
loope
call
add
add
sbb
sbb
pop
mov
lods
mov
pop
add
adc
in
mov
mov
pushl
das
mov
dec
lret
and
dec
out
cs
push
or
ret
hlt
mov
and
test
cwtl
push
mov
scas
mov
xchg
imul
sbb
bound
loop
lret
xchg
call
clc
in
add
mov
add
mulb
push
mov
shrb
data16
inc
jbe
test
or
add
hlt
repnz
lcall
pusha
push
scas
or
test
mov
pop
lds
add
fnsave
insb
add
imul
in
nop
inc
hlt
js
or
xchg
hlt
jl
fstpl
ja
and
out
add
mov
or
and
push
mov
push
mov
jne
push
jnp
xchg
stc
push
testl
into
push
jo
push
xchg
loope
loope
mov
test
and
or
dec
and
pusha
out
adcb
shll
cmp
imul
add
xchg
fisubs
jno
or
sahf
xchg
icebp
pop
loop
arpl
jge
ss
ret
sub
nop
imul
popa
ljmp
fwait
stc
lret
pop
dec
out
pop
out
fsubrl
inc
aam
cs
fwait
push
test
xor
arpl
popa
sub
mov
mov
push
mov
mov
daa
dec
enter
mov
not
pushf
fwait
addb
sbb
xchg
cmp
leave
adc
stos
iret
jns,pt
dec
xchg
dec
mov
cmp
out
jecxz
aam
loopne
fwait
lret
out
cmpb
inc
pop
loop
mov
mov
mov
push
push
mov
xor
mov
mov
int3
cmp
cltd
mov
jecxz
mov
pop
xchg
movsl
ljmp
push
adc
push
mov
cmp
cmp
aad
sub
mov
mov
mov
mov
dec
scas
movsl
pop
movsl
daa
jno
mov
and
ljmp
insl
ret
out
adc
add
pop
inc
stc
je
cmp
push
movsb
lods
cmp
or
jmp
mov
mov
push
adc
add
loopne
jg
daa
out
pop
xlat
pop
insl
imul
cmp
pop
adc
pusha
push
mov
sbb
and
loop
roll
sub
push
pop
sbb
shr
mov
data16
xchg
sbb
adc
mov
icebp
sub
lods
cli
pop
pop
jge
mov
bound
imul
cwtl
inc
std
pushl
or
xor
sti
sbb
mov
cmp
xchg
enter
push
shlb
push
dec
jb
add
adc
xchg
pop
stc
jge
or
push
cmc
arpl
es
mov
mov
stos
iret
xchg
mov
or
mov
push
ficompl
adc
add
sbb
push
je
out
jp
dec
sbb
in
fmuls
int
adc
mov
xor
flds
and
mov
test
fcom
push
push
jns
std
inc
in
sarl
inc
push
in
adc
cmpsl
xchg
aad
out
pop
lods
les
dec
jno
or
push
pop
movsl
pop
outsb
xor
mov
sub
scas
lock
mov
sbbl
add
loop
test
repz
addr16
stc
jne
mov
jmp
movsl
adc
add
loopne
in
sub
inc
sub
clc
sbb
mov
shrl
xor
fnsave
loope
or
jb
shlb
lods
test
outsb
add
mov
and
push
jnp
pop
xor
cmp
adc
test
and
mov
push
sbb
xchg
sub
add
dec
nop
stos
clc
es
push
jge
and
movsb
mov
adc
adc
je
push
add
sub
mov
pop
and
and
leave
arpl
jmp
lret
pop
jo
movsl
pop
xchg
icebp
xchg
cltd
add
insl
or
sbb
jb
cmp
mov
and
gs
jge
les
in
out
fbld
dec
imul
push
add
into
and
cmp
push
je
movsb
enter
lea
inc
push
pop
xchg
mov
das
and
push
pop
popf
shll
xor
jecxz
pop
out
xchg
imull
inc
test
mov
jns
xchg
aaa
push
dec
jno
dec
imul
mov
dec
jo
pop
movsb
into
ficoms
or
arpl
std
mov
pop
icebp
ja
push
dec
in
xor
add
jmp
jae
addb
insl
stos
xor
pop
popa
cld
jecxz
cli
mov
inc
mov
call
cmp
repz
pop
cld
push
push
xchg
lods
icebp
mov
xor
mov
pop
cwtl
cmp
jae
jmp
dec
jp
test
adc
incl
lea
dec
and
enter
or
cwtl
repnz
mov
ss
aas
mov
jl
es
jns
mov
add
dec
lahf
jo
in
mov
push
fsubrl
dec
mov
ret
test
pop
out
ss
fcmovbe
and
pop
inc
xor
pop
xchg
sbb
addb
cli
jl
addr16
lcall
mov
add
push
stc
lds
xor
sbb
push
add
xchg
mov
adc
adc
add
repz
push
xor
cmp
rclb
push
inc
test
sub
in
shrb
mov
scas
shll
mov
addr16
lock
pop
inc
data16
hlt
inc
incl
dec
sub
imul
push
int
mov
sbb
hlt
jbe
push
out
adc
sbb
nop
fldcw
cmp
insb
add
popl
aad
push
mov
jo
movb
jl
test
push
mov
push
lcall
adc
xchg
aas
bnd
out
xlat
xchg
xchg
add
outsb
out
dec
sbb
jmp
adc
orb
sub
pop
adc
addl
test
push
out
mov
ret
add
cld
inc
pushf
add
and
pop
adc
stos
mov
mov
lods
bswap
pop
xor
jle
mov
mov
gs
mov
pop
inc
ljmp
popf
imulb
or
and
aad
and
and
movsb
xchg
stos
lods
inc
and
outsb
inc
cld
lea
gs
lock
jns
daa
cwtl
push
sub
inc
mov
jl
inc
iret
mov
push
push
test
pushf
les
hlt
mov
dec
adc
add
pop
pusha
push
mov
or
or
mov
out
xchg
test
mov
imul
adc
sub
inc
adc
and
mov
and
dec
imul
out
rclb
scas
pop
adcb
sub
popf
and
cmp
inc
test
jb
push
pusha
xchg
mov
popw
adc
nop
jmp
adc
dec
fdivs
push
mov
in
stos
adc
fiadds
aad
dec
js
sbb
mov
jns
xchg
pop
xchg
aad
cld
push
adc
test
and
aam
cmp
xchg
fdivl
iret
mov
insb
cmc
dec
dec
mov
cmp
into
into
xchg
fcmove
push
jecxz
hlt
and
or
out
sbb
jns
js
or
inc
pop
dec
xor
cmpsl
add
push
shll
mov
add
sub
out
stos
mov
jns
jmp
fwait
jno
fstl
movb
sbb
cmp
cmp
jnp
rcr
jecxz
inc
movsb
inc
imul
imul
adc
sbb
nop
pop
sbb
dec
fcoms
fwait
push
pop
mov
and
xchg
jnp
movsb
cmpsl
adc
mov
push
mov
mov
mov
push
subb
hlt
fs
mov
mul
xor
int3
sub
sbb
inc
sub
repz
fsubrl
cmp
xchg
loope
dec
imul
jg
lea
sbb
add
dec
mov
dec
int3
loop
jmp
pop
aam
dec
mov
cmp
aad
jae
es
sub
aam
lea
sarl
lahf
aaa
lret
mov
inc
mov
cld
cmpsb
lock
push
lods
add
testb
pusha
cld
call
sbb
sbbl
mov
mov
orl
push
jno
xchg
and
lret
in
push
add
cmp
les
fwait
lea
dec
xchg
fidivrl
mov
in
cmp
sub
push
in
pusha
lock
sbb
nop
hlt
out
mov
fimuls
add
add
cmp
and
adc
add
add
add
add
add
int
add
cmp
add
add
std
aaa
add
pop
test
adc
cmp
add
sarb
add
cmp
cmp
jg
pop
dec
xor
subl
jecxz
mov
mov
fsubl
imul
and
mov
addr16
lods
mov
call
rcrl
mov
mov
jecxz
mov
das
jecxz
insb
outsb
sbb
pop
push
jl
ret
adc
sub
test
outsb
dec
jo
mov
in
xchg
imul
pop
je
xchg
xor
mov
nop
jne
adc
or
mov
inc
out
icebp
mov
std
push
or
mov
and
fwait
or
jmp
aam
sbb
jl
jne
add
aad
sbb
cmp
xor
lret
daa
mov
mov
or
mov
das
sub
insb
bound
push
push
adc
sbb
or
in
or
or
pop
pop
aas
loope
adc
imul
int
call
or
mov
sbb
fwait
mov
les
and
mov
cmp
push
scas
adc
aad
pop
cmp
xor
enter
lock
xchg
mov
mov
push
sbb
mov
and
rsm
sub
xchg
cmpsl
pushf
sti
xor
test
loop
fists
loopne
mov
out
inc
jmp
dec
orl
loope
stos
add
jb
aad
decl
stos
imul
cmp
in
mov
inc
xor
shrb
adc
imul
push
fcomps
les
jle
movsb
mov
test
xor
dec
testl
fbld
mov
popa
pop
jp
sbb
pusha
aam
popf
fucom
aas
mov
pop
pushf
sub
fcmovnbe
fdivs
xchg
mov
shr
cld
xchg
jmp
bound
fsubrs
cmp
sub
mov
into
mov
jb
pop
xchg
push
leave
test
icebp
cmp
jo
sti
sbb
adc
pop
sub
hlt
ss
push
cmp
scas
mov
and
scas
lock
adc
add
dec
movb
mov
add
push
or
mov
sbb
dec
jbe
nop
or
or
mov
push
lret
test
xchg
les
fcoml
sbb
xchg
xor
mull
lret
xchg
subl
addr16
sbb
mov
xor
int3
cmp
inc
pusha
lret
jl
mov
in
mov
add
xchg
sub
lret
cli
cvtps2pd
mov
mov
inc
xchg
jmp
lds
fsubp
push
adc
xchg
shlb
aam
pop
mov
mov
gs
pop
lds
scas
stos
cwtl
daa
insb
jecxz
pop
out
xchg
cmpsl
gs
clc
jae
inc
clc
mov
pushf
stos
dec
dec
out
jmp
xchg
stos
mov
sbb
stos
sti
jns
dec
mov
rcll
mov
daa
imull
std
mov
push
jnp
inc
dec
cmp
popf
mov
stc
sbb
dec
test
int
ss
les
and
out
mov
lahf
sbb
xchg
aad
movsb
aas
pop
pop
sbb
leave
jae
es
jne
jmp
jge
icebp
data16
int3
pop
mov
add
stos
popf
pushf
je
pop
and
pop
cmpxchg
rep
mov
daa
mov
rol
pop
insl
in
lds
mov
cmpsl
xor
lock
xor
mov
ficompl
outsl
std
mov
test
xchg
pop
pop
cld
push
cmpb
repz
cltd
lods
mov
aas
movl
mov
mov
stos
aad
jmp
cwtl
loop
push
cmp
pop
cmpb
out
lods
jecxz
push
je
jle
nop
rcll
clc
or
jl
inc
pusha
cli
add
popaw
adc
mov
jno
shlb
cmp
xchg
mov
int3
comiss
cli
jg
mov
adc
adcb
cmp
inc
lock
fisubrs
cmp
ret
js
loop
sub
mov
jnp
mov
jo
add
jns
fidivrs
pop
fdivrs
in
sbb
push
repnz
cmp
jne
rol
mov
add
sub
clc
mov
adc
pop
sub
cwtl
loope
mov
pushf
xchg
in
shl
pushf
push
mov
test
in
cmp
mov
mov
pop
jne
xchg
add
dec
cmp
sub
xor
or
mov
shlb
xor
std
fdivr
das
js
pushf
mov
mov
sbb
les
mov
into
lods
notb
push
inc
adc
sbb
mov
subl
pop
mov
ja
sbb
mov
inc
leave
or
test
or
push
inc
rcl
cmpb
pop
mov
les
mov
sti
jo
ljmp
mov
scas
dec
jbe
push
sub
adc
pop
xor
xchg
cmpsb
mov
mov
dec
inc
mov
test
mov
sbb
jae
test
adc
cmp
bound
jbe
inc
ficompl
jns
xor
pop
dec
and
or
xor
into
jae
pop
sahf
sub
and
faddl
fcoml
aad
pop
xchg
mov
aam
daa
js
dec
adc
repz
adc
enter
cmp
mov
pop
aam
mov
push
enter
movsl
jnp
addb
sub
pop
dec
nop
and
pop
xchg
shll
jg
addr16
jg
andl
sbb
and
lock
mov
in
push
fsubl
inc
xor
jmp
xor
and
int3
repz
mov
iret
hlt
xor
mov
pusha
xchg
pop
out
and
out
js
jle
dec
adc
dec
and
movsl
cmp
cmp
fisubl
cli
xchg
push
inc
add
cmp
jb
jo
push
cwtl
sbb
call
push
ret
push
lods
loopne
aaa
imul
fs
es
xchg
das
xor
xchg
push
dec
adc
push
sarl
pop
cmp
adc
pop
lret
insb
xchg
dec
jmp
cmc
in
jns
sub
inc
pop
push
std
fisubrl
sti
mov
mov
xor
sub
cmp
out
push
test
ret
daa
cs
or
nop
fisubs
loopne
lahf
sbb
das
mov
mov
xchg
js
push
int
dec
mov
mov
arpl
jmp
cmpsb
outsl
inc
lcall
jmp
jmp
and
loope
cmpsb
pop
add
dec
pop
aad
xor
daa
pusha
shrl
lock
mov
xchg
andb
push
xor
or
or
cld
dec
testb
cmp
pusha
or
push
sti
jmp
sbb
push
bound
jno
xchg
inc
pop
jnp
ja
xchg
xchg
and
push
push
pop
sti
sti
inc
push
addr16
mov
cwtl
sarb
aaa
frstor
ret
hlt
aaa
push
ljmp
cmp
xchg
ret
ss
adc
xchg
into
outsl
in
das
sub
fists
cmp
mov
lret
daa
in
dec
mov
test
nop
push
gs
sbb
push
adc
sbb
hlt
inc
jp
xchg
mov
scas
test
dec
jno
and
dec
movsb
cmp
or
mov
vpmovsxdq
add
test
or
ret
testl
sbb
or
xlat
sbb
mov
clc
mov
xchg
fldl
jmp
jge
and
repz
cmpsl
imul
cmpsb
xor
mov
fcomi
leave
push
das
inc
repz
sub
cmp
inc
jnp
jg
fxch
jnp
mov
lods
mov
cmpb
shrb
mov
xchg
cmpsb
push
xlat
aas
lods
ret
in
mov
andb
pop
out
add
adc
out
sbb
scas
daa
popa
mov
sbb
test
decl
int3
sub
mov
xor
clc
jecxz
push
cmp
pop
loope
icebp
mov
ja
arpl
jmp
cmp
xchg
pop
mov
insb
cmp
push
pushf
and
mov
in
ret
cmp
mov
nop
push
mov
mov
pop
jo
cmp
and
xchg
cs
sbbb
xchg
jp
xlat
lret
inc
notb
div
jae
in
cmp
js
jecxz
dec
repz
mov
or
in
and
pop
push
test
dec
mov
dec
inc
pop
hlt
imul
and
ljmp
xchg
dec
iret
js
mov
js
ja
cltd
rol
push
jo
add
shlb
mov
jecxz
sbb
add
dec
lret
gs
inc
stc
cmc
imul
xor
mov
lods
loop
sub
xor
mov
pop
repnz
xor
and
push
mov
xor
xchg
add
mov
mov
ljmp
adc
fwait
call
pop
pop
push
sahf
mov
mov
mov
and
jae
jg
enter
adc
insb
lds
jnp
jmp
ja
add
subb
pop
cmpsb
mov
lahf
add
dec
cmpsl
xorl
imul
aam
popf
inc
push
ljmp
jno
xorb
out
pop
hlt
fdiv
call
inc
or
lds
mov
insb
inc
pop
add
pop
sbb
idivb
popf
pop
push
pop
mov
sub
lcall
int
pop
lea
cmpl
fmull
cmp
cltd
and
nop
cmp
repz
pushw
pop
xor
sbb
inc
jle
les
inc
push
je
xchg
mov
push
insb
and
cmp
dec
jo
jp
out
in
pushf
sub
push
stc
mov
jmp
jno
fldt
and
mov
add
jbe
popf
popa
fwait
mov
jl
jb
mov
nop
xor
adc
cs
dec
sub
fisttps
nop
ja
dec
in
inc
fimuls
jg
mov
and
push
mov
adc
inc
iret
aam
rcll
adc
jae
mov
int3
xor
pusha
push
outsl
xchg
bound
xchg
out
clc
ljmp
jnp
popa
mov
xor
out
dec
mov
shll
pop
rcrl
push
iret
cmc
aam
jecxz
cmpl
adc
lret
lret
sbbb
mov
out
out
rolb
loopne
mov
cli
inc
dec
rcll
add
popf
in
cli
cltd
push
or
jmp
dec
adc
adc
adc
out
sahf
push
mov
out
sub
pop
or
add
int3
cmp
sub
or
cmp
out
data16
subl
dec
sbb
xchg
dec
jmp
stos
in
mov
dec
addl
loop
mov
insl
inc
inc
jne
mov
push
and
movsb
call
sbb
fwait
lret
sbb
push
xchg
fistl
in
mov
pop
leave
stc
inc
loop
mov
pop
stc
movsb
jle
lods
loopne
cmpsb
out
movsl
loope
les
or
sub
sbb
dec
push
xchg
mov
cmpsl
fldenv
and
pushf
flds
jecxz
sub
and
mov
imul
inc
and
stc
sub
inc
out
lods
pop
sti
jb
imul
mov
add
pop
nop
stos
outsb
movsl
push
dec
scas
cld
icebp
ds
arpl
mov
xchg
bound
mov
push
sub
aam
imul
inc
xlat
cmp
xchg
mov
test
cmpsb
adc
cmp
xor
jmp
mov
mov
mov
aad
mov
arpl
ss
inc
add
imul
inc
adc
pop
xor
mov
pusha
jns
inc
adc
sahf
popl
jne
xor
pop
int3
sti
mov
lods
mov
lcall
jecxz
lea
jle
lret
inc
into
je
cs
je
fwait
or
or
jp
mov
cmp
lret
and
fnstsw
adc
les
popa
inc
fwait
jg
movsb
push
xor
mov
arpl
cmp
and
mov
dec
fisubl
xor
rolb
jl
push
lock
fs
add
push
pop
dec
pusha
jbe
inc
mov
imul
and
adc
das
or
cmp
inc
xor
shll
cs
push
xchg
repnz
enter
and
pop
rol
add
incl
sti
aaa
aas
pop
sub
xor
pop
je
lods
and
sub
loope
inc
push
lcall
jne
jnp
fdivrs
mov
sbb
dec
or
jl
mov
add
cmp
jmp
sbbl
imul
cmp
inc
roll
push
dec
xchg
push
push
cmpsl
stos
mov
mov
call
jge
iret
stos
sbb
lea
stos
stos
mov
pushf
in
rcr
lahf
xor
leave
pop
mov
adc
addl
lock
ss
stos
cs
ret
xchg
sbb
fbstp
xor
dec
into
mov
add
lret
mov
push
comiss
add
sbb
sub
rcl
jl
xor
test
add
push
jns
lock
adc
and
mov
fcoms
ja
sub
adc
and
je
shlb
xor
xchg
push
inc
std
stc
xor
out
add
mov
ror
lock
minps
out
add
or
repz
js
mov
dec
loop
imul
int
test
pop
mov
gs
inc
aaa
push
insl
test
or
jo
fdivrs
cmp
cli
lods
inc
loop
enter
jg
mov
jno
test
lret
push
pop
push
pushf
out
inc
xchg
inc
and
lock
inc
jp
shlb
cwtl
inc
inc
mov
dec
push
nop
jp
mulb
pushf
sub
imul
sbb
aam
sbb
addr16
pop
lret
pop
or
cmp
dec
jge
cmp
and
jmp
scas
mov
push
movnti
push
movsl
mov
dec
mov
xor
add
in
les
xor
out
mov
int
ficompl
aad
lea
leave
out
sbb
sub
iret
rolb
sahf
dec
les
mov
and
sbb
in
dec
xchg
and
stc
mov
or
les
dec
dec
pop
inc
xchg
add
fsincos
and
sbb
decb
fs
mov
jne
das
mov
push
into
cmp
cmpsb
xor
ficomps
jg
xchg
sbb
jnp
aaa
bound
insb
jmp
test
lods
adc
and
and
loop
sarb
jmp
daa
lods
aam
xor
popa
jle
cmpsl
sbb
aam
arpl
push
jg
sub
push
xor
and
cmc
fs
aad
cli
out
pop
pop
in
xor
pushf
lods
jnp
xorb
or
ret
rcrb
jp
and
mov
dec
pushf
sub
inc
scas
fwait
popa
into
clc
insl
loop
clc
imul
pop
popf
cltd
clc
mov
and
scas
jge
aas
push
repnz
mov
pop
ss
bound
adc
clc
lods
lahf
and
push
jg
jmp
addr16
pop
ror
push
mov
sbb
pop
sub
adcb
scas
and
jl
mov
das
xorl
aas
mov
cwtl
pop
loope
sub
xchg
adc
cmp
mov
sti
xor
in
test
sub
pop
mov
jae
aad
inc
mov
xor
ret
or
fxam
xchg
or
stos
mov
cwtl
lahf
inc
xchg
push
std
adc
aaa
pop
pop
mov
or
mov
pop
nop
ret
out
pop
adc
sti
test
sub
in
push
flds
inc
stos
cmpsb
xchg
xlat
mov
inc
int3
jns
push
clc
pusha
aam
insl
and
fadds
loop
loopne
dec
es
mov
ret
fs
rcrb
es
imul
ficompl
scas
aad
lcall
adc
test
jmp
js
test
popa
push
sti
ss
and
mov
pop
dec
test
pop
daa
add
je
xor
call
xor
mov
jp
xor
pop
jo
jmp
rcl
dec
jmp
clc
jmp
in
fildll
movsb
inc
or
aas
rorb
mov
xchg
xchg
repz
movzwl
aad
push
xchg
add
shll
and
xchg
cmc
clc
xchg
loop
sub
xchg
repz
call
out
push
dec
aas
or
push
jne
inc
lea
mov
test
test
mov
xor
jge
push
adc
lret
sti
mov
add
test
out
push
and
jae
and
xor
mov
mov
in
dec
pusha
adc
in
fdivp
jno
xchg
adc
cmpsl
and
xchg
scas
fmuls
sub
sub
dec
push
pop
xchg
sub
jne
out
cmp
jbe
mov
movsl
inc
xchg
loope
cltd
adc
jne
insb
outsl
pop
mov
push
lahf
ds
cmp
orl
lahf
or
and
in
inc
mov
lock
pusha
mov
ss
mov
sbb
outsb
movsl
inc
fisubrs
inc
mov
adc
sbb
movsl
inc
add
mov
cmpsb
xor
shl
out
out
dec
nop
rcr
test
jbe
out
outsl
mov
hlt
push
dec
gs
clc
stos
lock
cwtl
jl
jne
add
mov
popa
pop
in
mov
addb
jnp
es
xor
adc
sbb
and
jbe
push
fnsave
fldt
add
adc
jns
push
push
mov
cmp
shl
inc
mov
dec
fistps
mov
mov
sub
jns
pop
movsb
ret
xchg
jg
cmpl
push
adc
mov
cmpsb
je
and
cmpsl
mov
or
dec
adc
lret
gs
int
sti
jecxz
clc
adc
dec
mov
push
divl
or
fwait
stos
pop
mov
scas
push
xor
xchg
in
test
xchg
jmp
sar
mov
fmulp
fdivs
adc
xor
je
lret
xor
fstpl
sub
mov
cmp
dec
ss
mov
ds
mov
or
cmp
leave
sub
cmc
lods
cltd
shrl
sarl
negl
mov
repz
xor
call
mov
push
xor
seto
dec
push
es
imul
mov
and
rcll
clc
in
dec
int3
add
fisubl
cli
call
push
loopne
sub
arpl
lds
test
xchg
xor
mov
and
push
into
loopne
mov
and
dec
add
les
sarw
xlat
sbb
jmp
push
test
jne
sahf
out
xor
xor
call
ret
rclb
add
dec
stc
mov
push
fcmovu
and
sbb
movsl
jno
mov
add
push
adc
jecxz
lock
lret
jmp
xor
add
jp
or
pop
jmp
inc
sub
xor
cmpsl
outsb
mov
jge
jnp
cmp
xchg
pop
scas
mov
xchg
lahf
stos
movsl
xor
mov
mov
cltd
jg
les
adcb
push
cltd
out
mov
cmp
scas
push
mov
jnp
pop
leave
cmc
sub
movsl
aaa
pusha
dec
push
sti
xchg
hlt
rcrl
ljmp
call
cmpsl
out
push
cmc
sbb
pop
or
sbb
faddl
xchg
test
pop
mov
lcall
repz
clc
aam
mov
xchg
movsb
jle
pop
scas
ja
mov
cltd
mov
psubsw
ss
gs
aas
es
mov
fidivrl
push
lock
lret
ja
pop
rol
cld
enter
stos
fsubrl
mov
jle
fdivrs
scas
mov
fnstcw
lret
outsl
leave
xchg
pop
mov
mov
adc
shll
and
add
push
mov
sbb
xor
mov
mov
lret
mov
push
loopne
adc
lcall
xor
and
ud2
aam
cmp
pop
and
xor
inc
scas
jecxz
dec
loop
bound
mov
out
sbb
lea
nop
mov
inc
add
aaa
mov
jns
fidivl
mul
ljmp
inc
mov
aad
mov
inc
call
in
mov
stc
je
aas
jb
pop
rsm
in
jmp
mov
aad
cltd
nop
insb
cli
mov
push
dec
sbb
xchg
rolb
ficompl
jmp
xchg
int
pop
stos
inc
mov
pop
andb
jg
cmp
add
lahf
lahf
clc
out
out
ljmp
repz
scas
jno
sub
mov
stc
lods
loopne
mov
push
lods
lods
shlb
loop
movsb
pop
negb
hlt
mov
aam
pusha
imul
cmp
and
lods
add
roll
iret
in
pop
mov
ds
mov
mov
push
mov
jge
mov
lret
int3
mov
cmpl
cmp
into
cwtl
js
insb
or
rcrl
in
ss
repz
repnz
and
jp
push
enter
push
jns
jo
pop
pop
jecxz
repnz
sbbl
jge
ljmp
mov
je
xchg
push
iret
movsb
dec
rol
push
pop
loopne
xchg
add
adc
xor
idivb
popa
movsb
mov
xchg
shr
cmp
mov
push
outsl
xchg
test
sub
daa
rsm
mov
int3
or
mov
repz
add
cmp
lods
std
and
jp
and
push
arpl
mov
loop
lret
js
cmp
popa
pop
xchg
mov
aaa
outsb
xor
insb
xchg
ljmp
pop
jle
pop
sbb
and
cs
mov
sub
lahf
jbe
insl
lret
decl
sbb
jae
outsl
or
adc
pop
shl
push
cmp
xor
popa
scas
xchg
add
pushl
adc
mov
mov
cmc
popa
scas
and
stos
ficompl
jmp
fcmovu
jg
mov
sti
in
fwait
push
insb
sub
cmp
lods
mov
in
push
imul
cmpsb
add
nop
add
lret
xchg
addl
mov
mov
repz
dec
in
jb
nop
jle
jle
push
ret
mov
lds
xchg
cmp
mov
pop
xlat
cltd
icebp
and
lods
jle
sub
in
inc
mov
adc
push
cwtl
and
outsl
sub
xor
and
push
dec
pop
lods
push
jmp
xorb
sub
mov
jbe
mov
mov
and
fcmovnbe
subl
gs
jmp
adc
xchg
inc
or
xor
daa
cmpsb
inc
mov
mov
pop
dec
fdiv
adc
scas
iret
outsl
test
cwtl
adc
js
add
cmp
mov
push
inc
into
mov
sub
ficoms
cmp
movsl
dec
lock
add
aas
pop
and
sti
or
in
push
add
mov
mov
pop
popa
and
lock
stos
in
or
jne
sub
jns
jl
out
bsr
add
stc
dec
stos
aas
pop
sti
fwait
inc
jg
mov
sub
add
xchg
int
or
adc
sarb
addr16
mov
xor
xchg
mov
ja
cmp
pop
xchg
push
push
mov
sub
push
mov
lahf
je
dec
cmp
jns
sbb
inc
dec
mov
jo
scas
and
idivl
ja
and
sbb
or
sti
push
mov
xor
mov
mov
dec
xor
jbe
push
dec
or
xchg
xor
mov
sub
lret
pop
cmc
jmp
lea
cmp
pop
lret
mov
sbb
push
das
cmp
mov
push
popf
xor
lods
push
fsubrl
sub
xchg
sub
fsubs
lret
ja
js
adc
inc
andl
sub
pusha
sub
lds
call
in
lahf
test
xchg
int
jb
pop
loop
and
out
test
mov
sub
xchg
xor
cli
out
loope
push
pop
sahf
cwtl
jg
push
xor
ret
shll
adc
adc
or
fisubl
pop
fstps
mov
sbb
sub
pop
cmp
test
add
jbe
in
cld
xchg
ret
aad
adc
or
push
jno
xchg
mov
fists
cmp
in
mov
in
jb
popf
jle
inc
aam
into
sub
js
push
mov
add
cltd
pop
cmp
sarb
pop
aam
cmp
int3
sub
mov
repz
shr
dec
ljmp
mov
xchg
adc
in
push
movsl
adc
jb
je
int
mov
popf
es
push
adc
nop
pop
inc
add
fwait
bound
cs
lret
push
and
sub
movsb
mov
inc
xchg
push
repz
adc
std
dec
adc
dec
xorl
std
pusha
adc
mov
lds
inc
or
mov
aam
mov
cmp
fstps
mov
cli
stos
in
mov
in
or
sti
add
push
mov
stos
or
and
popa
sub
frstor
scas
sub
adc
jb
sti
or
dec
xchg
and
dec
fcmovbe
xchg
add
mov
or
cli
push
hlt
lcall
int
inc
sub
pop
dec
popa
and
out
pop
add
adc
imul
mov
sbb
dec
pop
fwait
xchg
xor
xor
cmpsb
cmp
add
jmp
and
fbld
add
pop
xor
jno
test
adc
out
mov
dec
or
and
mov
shlb
inc
not
dec
inc
cmp
rclb
cs
repnz
popf
cmp
pop
pop
add
fs
mov
inc
dec
stc
or
mov
mov
inc
les
iret
xor
cmpb
sarl
fldl
rolb
cmp
dec
sbb
lock
outsl
pushf
add
cmp
mov
shrl
sti
pop
jno
bnd
ja
fsts
test
loopne
cltd
sbb
pop
fidivrs
or
and
es
or
cmpsl
push
pop
inc
xchg
cwtl
scas
mov
jo
xor
xor
cmp
js
dec
cmp
add
out
sub
jle
fcmovnbe
lcall
adc
cmp
aas
xchg
in
into
or
dec
sub
test
mov
and
jmp
das
lret
dec
xchg
fxch
mov
repz
test
shrb
lahf
lcall
scas
cmp
adc
push
or
repnz
pusha
leave
mov
icebp
fstl
mov
jecxz
lret
fwait
out
jnp
push
dec
and
jle
mov
in
fwait
cltd
fwait
mov
add
pop
xchg
test
test
jg
stos
call
add
test
jb
mov
sub
loop
inc
roll
inc
mov
aaa
jge
push
ret
sub
add
mov
lods
jle
xchg
mov
test
inc
jmp
mov
js
xor
leave
loopne
stos
rolb
xor
sub
mov
insb
pop
adc
pop
movsb
dec
push
pop
jg
sti
fdivs
add
cmpxchg
dec
mov
xchg
jp
outsl
pusha
ds
xor
out
std
mov
cmp
jle
add
shr
mov
out
cmp
das
push
cmpsl
and
stos
pop
xor
rclb
sbb
mov
rorb
adc
xor
sbb
push
pushf
push
cld
imul
arpl
test
std
dec
or
xlat
outsb
test
std
int3
push
or
nop
loope
test
sbb
add
lcall
mov
popf
ds
push
and
data16
sub
repz
adc
mov
sub
mov
pop
mov
mov
mov
mov
fidivrs
inc
fcompp
dec
pop
das
mov
sub
fwait
xor
or
nop
scas
fdivs
cltd
mov
dec
push
sbb
mov
mov
sbb
or
hlt
xor
sub
mov
cwtl
jg
dec
jbe
out
xchg
adc
and
into
lea
jl
mov
mov
adc
pop
xor
sahf
push
sub
pop
sub
int3
enter
hlt
daa
rorb
jns
stos
movsl
fs
movsl
xchg
mov
jnp
mov
icebp
fsts
out
js
orl
std
leave
fisubrl
and
cwtl
loop
jecxz
out
mov
inc
stos
fildl
mov
pop
dec
imul
lods
sub
cmp
mov
or
cltd
pop
inc
imul
jecxz
jmp
adc
int3
push
sbb
call
cli
jno
cmp
test
and
add
and
xchg
jmp
into
inc
mov
dec
sbb
xchg
push
cmpsl
pusha
jb
jns
pusha
fwait
cli
loope
stos
jb
mov
mov
ljmp
xchg
push
fsubrs
lea
mull
das
push
and
dec
push
pop
sub
xchg
jg
in
daa
xchg
ds
fists
in
inc
sbb
add
cmp
iret
cwtl
jg
imul
sbb
sbb
cmc
pop
dec
dec
and
stos
xchg
cmp
xor
inc
cwtl
insb
in
inc
ficoms
push
lock
pop
shl
repz
retw
lea
adc
lds
mov
xor
sti
pop
jp
ret
in
rcrl
jp
std
clc
push
out
xchg
daa
scas
movsb
jp
cwtl
adc
stc
sub
xor
jl
mov
cmc
inc
ret
xchg
push
cmp
mov
subb
pushf
in
cmp
fildl
out
mov
sbb
jb
fistps
dec
mov
push
mov
je
sti
int3
push
mov
cmp
cmpsb
es
std
jne
sbb
aad
add
rcl
lods
insb
cmp
orb
sub
dec
shll
jae
inc
pop
xchg
sbb
mov
mov
xorb
lcall
testb
cmpsl
jmp
ret
cmpsb
pop
mov
cmc
pop
push
lds
leave
or
mov
cmp
mov
inc
mov
dec
xlat
gs
jmp
xchg
pop
jno
pushf
pop
sbb
push
pop
xchg
mov
xor
inc
fistpl
adc
aam
pop
scas
pop
pop
cwtl
jg
jae
sub
inc
cmp
shr
enter
inc
imul
mov
mov
cmp
mov
jge
pop
aad
lahf
stos
lods
cs
inc
pop
fpatan
xor
add
movsb
or
rcl
push
add
sbb
dec
cmpsb
popa
jle
nop
das
call
inc
cltd
jnp
and
ret
mov
flds
roll
fs
or
and
sarb
subb
mov
pop
dec
push
sub
out
clc
xor
cmp
mov
out
insl
je
aas
in
lret
mov
insl
mov
cld
xor
pusha
sbb
aad
xchg
mov
andl
addb
push
mov
sbb
jno
sbb
add
movb
jne
cwtl
dec
movsb
mov
stos
push
fistl
fwait
lret
shr
or
jo
jno
int
pop
imul
arpl
sub
add
push
ret
out
fidivrl
in
xlat
inc
aas
aaa
jne
test
daa
in
inc
add
dec
inc
clc
cmp
add
lcall
aad
loop
rclb
aam
insb
push
pusha
neg
jno
repz
pop
lret
add
mov
sub
sbb
dec
inc
lods
dec
test
out
iret
test
push
push
adc
fstpl
jb
mov
stc
cmp
aam
lea
or
aam
sub
push
int
or
add
xorl
or
cli
inc
movsl
in
sbb
push
insl
imul
into
out
xor
mov
jl
gs
jns
pop
xchg
mov
pop
ljmp
jne
dec
fadd
or
lcall
fcoml
adc
and
jmp
js
std
test
call
pop
or
and
push
lret
mov
lods
mov
inc
cwtd
push
sub
loope
xorb
sbb
rcrb
and
int3
push
iret
cmp
xchg
and
xchg
and
pop
stos
lret
ljmp
pop
mov
xor
cmpsb
jno
test
push
push
jecxz
mov
mov
and
cmp
iret
out
cmp
test
icebp
or
mov
outsl
add
insl
leave
xchg
mov
nop
sub
fdivs
mov
push
clc
addb
fcompl
out
jecxz
mov
movsl
lods
jp
cmp
sub
push
ret
and
fimull
aas
mov
push
jb
xor
xchg
out
out
mov
fwait
gs
addr16
push
lods
in
add
cmp
adc
rcll
mov
dec
jae
loopne
cwtl
es
xchg
and
loop
xchg
mov
sbb
les
and
bound
popa
push
dec
cmp
shrb
or
fs
sbb
mov
add
cmpl
cmc
test
out
and
add
adc
xchg
push
gs
xor
cmp
or
pop
outsb
scas
push
push
inc
mov
ljmp
pop
adc
jecxz
test
add
loope
push
inc
imul
pop
inc
insb
push
inc
cwtl
inc
lcall
imul
pop
sbb
adc
push
cli
cmp
cmpsb
mov
add
jmp
cs
sbb
pop
sbb
pop
push
jp
mov
jae
sub
lods
jle
jge
xchg
ss
xorb
mov
daa
push
mov
adc
lea
imul
repz
jne
fimuls
pmulhw
lods
ret
push
js
das
mov
push
andl
and
mov
imul
push
push
leave
pushf
aad
push
push
push
push
jnp
div
dec
insl
inc
testl
imul
int
stc
add
sub
in
pop
fmuls
jbe
push
fidivrs
roll
inc
sbb
hlt
loopne
pusha
fsubs
push
xlat
negl
outsl
cmc
fldz
xor
lahf
aaa
inc
cmp
fmull
shlb
mov
jmp
inc
in
cmp
lods
rcrl
clc
pushf
inc
inc
mov
pop
fcompl
jae
lret
adc
mov
inc
in
rcrb
out
outsb
in
cmp
pop
mov
add
mov
lahf
es
add
mov
bound
daa
jp
dec
sbb
fdiv
sbb
fdivr
sahf
aam
lea
sub
cmp
mov
inc
addl
cmp
xchg
lock
out
dec
dec
rolb
pop
ds
repnz
addr16
shll
jbe
scas
push
call
mov
jne
jmp
xor
lods
ljmp
mov
mov
rorb
jae
fisttpl
adc
xlat
imul
nop
xchg
imul
mov
or
lret
test
stc
jl
xchg
sub
out
stc
mov
orb
movsl
xchg
shll
in
stos
sub
lods
pusha
xchg
xchg
dec
adcl
pop
cmp
and
pop
fimull
push
in
jnp
inc
std
rcl
cmc
and
test
mov
mov
sarb
cmc
gs
lock
pushf
jp
or
test
cmc
jmp
push
add
out
test
loop
in
xchg
or
test
adc
adc
fdivl
push
jb
xor
adc
xchg
push
cmp
xchg
cmp
mov
in
cmp
scas
mov
sbb
stos
jbe
jg
out
addr16
push
adc
cmp
int3
cmp
imul
lods
pop
add
js
pop
push
push
cmp
clc
push
mov
addl
shl
pop
rcl
jne
icebp
aam
cmpsb
rorl
sti
jnp
das
inc
sub
ret
jnp,pt
data16
mov
fidivrs
out
cmpsb
sbb
xor
pop
xor
cmp
fidivs
sub
xchg
loope
lods
out
jl
repz
scas
xchg
es
lret
in
es
push
cmp
or
scas
fistps
in
iret
adc
test
mov
sahf
mov
sbb
pop
mov
push
pop
xor
int
sbb
sub
in
xchg
adc
dec
bnd
add
xchg
or
jae
jno
xor
xor
in
call
shl
push
jl
lret
mov
mov
gs
mov
cli
mov
dec
xor
and
in
push
xor
inc
sub
mov
add
jns
sbb
lea
xor
add
in
pop
dec
arpl
aam
inc
fs
add
push
or
mov
sub
xlat
cmpl
ror
inc
enter
push
mov
adc
mov
dec
add
lds
mov
ret
jb
pop
xor
stos
addr16
dec
xlat
dec
jbe
mov
daa
fsubrp
stos
insb
sub
xchg
cltd
test
or
sahf
push
sbb
mov
jl
xor
or
mov
jno
adc
push
adc
roll
inc
mov
xor
out
pop
loope
jns
cmc
and
ficoms
leave
inc
jo
int3
xchg
js
xchg
push
ret
xchg
insl
dec
repz
cmpl
xchg
xchg
jmp
ljmp
pop
adcl
test
jae
dec
cmpsl
fcmovnbe
push
and
int3
lock
test
xchg
call
mov
leave
adc
stc
out
stos
ljmp
scas
int
inc
sbb
push
lock
scas
fadds
test
jl
in
push
sub
jbe
mov
imul
stos
imul
test
scas
jecxz
loop
xor
mov
pop
xor
mov
mov
out
decb
stos
scas
mov
testl
cltd
data16
out
inc
ljmp
rclb
iret
adc
stos
mull
jecxz
pusha
cmpsl
scas
lea
push
push
fcmovbe
mov
rorb
out
inc
shlb
test
lea
popl
loopne
sbb
movsl
jb
mov
mov
hlt
pop
test
xor
divl
mov
pop
xor
inc
cmp
push
dec
icebp
test
and
repz
mov
popl
fildll
cltd
lcall
push
cmp
es
repnz
sbb
test
shlb
shll
jb
rcll
push
sub
sub
push
jns
adc
js
xchg
iret
insl
push
movsl
mov
call
mov
sahf
xchg
out
add
xchg
sbb
mov
jecxz
push
sub
cli
push
fs
movsb
sbb
mov
dec
loope
das
jb
aad
jae
popa
jecxz
jle
and
push
add
iret
cmp
lods
mov
pop
jae
hlt
or
subl
loop
push
ds
mov
push
leave
fstpt
pop
sub
and
mov
shl
les
push
cmc
cmpsb
mov
sub
push
jmp
je
fdivrl
mov
ret
in
int
test
sbb
ss
mov
adc
push
push
test
push
jmp
in
out
sub
rcrl
push
sarb
je
inc
dec
mov
cmp
dec
add
sbb
sbb
rcrb
pop
test
in
ds
jg
icebp
xchg
sbb
imul
insb
and
add
pop
mov
leave
or
sti
pop
cmp
mov
add
mov
mov
adcb
jns
jnp
jge
jnp
insl
fwait
sbb
outsb
mov
pop
adc
repnz
arpl
jge
push
rcr
pop
jmp
movsl
hlt
and
mov
pop
inc
fwait
sbb
icebp
arpl
scas
stos
nop
stc
sub
lds
pop
out
cld
into
mov
in
cmp
add
push
out
clc
dec
shlb
aam
push
std
icebp
pop
adc
sub
jle
mov
mov
data16
les
in
insb
inc
push
into
sbb
andb
aad
hlt
xchg
shlb
pop
test
test
lods
push
mov
jo
or
and
test
sbb
xchg
cmp
sub
shll
js
dec
loop
stos
popa
dec
jne
frstor
inc
test
orb
push
and
or
outsl
lcall
inc
jecxz
xchg
mov
mull
fimull
pop
cltd
test
loope
mov
cmp
scas
stos
clc
rclb
xchg
cmpsb
fs
fdivl
int
outsb
shlb
xchg
in
push
xchg
mov
add
cmp
cmp
push
jle
scas
imul
in
dec
into
sub
sub
out
test
into
xchg
and
xchg
mov
int
pop
cld
pop
test
mov
movsl
sub
cli
push
adc
pop
jno
dec
movsb
adc
lods
test
pop
xchg
call
or
xchg
mov
shl
data16
out
jae
cld
dec
xchg
in
pop
test
daa
push
loopne
out
jp
lahf
cmpsl
cmc
repnz
push
or
lcall
aad
ss
xlat
fisubrl
push
ret
cmp
test
jb
rorb
inc
dec
push
rcrb
push
repz
les
inc
rcl
roll
cwtl
cltd
stos
adc
test
jle
loop
add
jb
cld
ja
lcall
or
add
push
push
pop
mov
loopne
push
mov
fucomi
adc
push
push
mov
sub
loopne
mov
xchg
cmp
in
paddb
adc
fdivl
pop
je
subl
iret
xchg
outsb
sub
push
push
cld
add
xchg
xchg
dec
xchg
sub
mov
mov
int3
mov
ja
cmpb
xor
cmc
xchg
mov
xchg
cmp
int
push
sub
shr
add
cs
mov
push
mov
sub
jle
ds
sub
push
jo
cmp
push
inc
imul
pop
js
pop
dec
sbb
notl
xor
icebp
jle
mov
mov
loope
push
scas
mov
test
sbb
sub
push
xchg
into
aas
lock
jno
push
iret
inc
ds
add
sti
and
js
or
push
ljmp
mov
jmp
xchg
pop
dec
aad
mov
push
std
mov
xor
or
mov
xor
push
lds
ss
mov
add
test
lds
sbb
dec
mov
push
sub
mov
add
mov
lret
jne
std
mov
std
enter
fcmovu
lds
sbb
fldenv
push
int3
je
jle
jns
insb
jge
cmp
lock
out
and
imul
sub
sti
or
es
nop
mov
push
int
adc
add
cmp
flds
lahf
cmp
inc
pop
mov
pusha
cmp
sbb
ja
sub
mov
xchg
push
inc
push
cli
aad
xchg
iret
scas
mov
lcall
inc
jecxz
ljmp
out
dec
out
mov
outsl
repz
repz
fnstcw
xchg
mov
push
jle
cmpb
jo
es
cmpsl
push
mov
nop
push
imul
mov
pop
cltd
fs
inc
push
clc
jl
cltd
stos
mov
and
lea
xchg
mov
lret
lret
pushf
adc
int
iret
adc
sar
out
aaa
mov
push
mov
movsl
add
xchg
jae
add
sbb
jbe
psllw
mov
mov
test
loope
stos
out
pop
sub
adc
mov
pop
cli
adc
sarb
pop
iret
jnp
les
cltd
imul
jecxz
std
or
sub
data16
mov
ret
imul
adc
sbb
mov
test
jbe
or
aam
outsl
arpl
jge
and
ret
mov
add
lods
push
imul
in
into
mov
or
cwtl
mov
adc
jp
inc
jnp
cmpsb
mov
je
dec
jnp
jne
jg
in
jnp
dec
clc
or
fdivl
mov
das
lahf
test
pop
neg
adc
nop
inc
mov
jge
fildll
mov
inc
popa
mov
cld
outsb
xor
pop
dec
imul
mov
mov
sub
sbb
js
cmp
lods
leave
popl
sbb
lret
xchg
pop
lods
cmp
insb
adc
pop
mov
notl
mov
inc
jo
sub
adc
movl
fmull
jo
ljmp
add
in
repz
add
sarb
jp
in
pop
xchg
mov
lahf
cmp
lea
je
push
mov
push
sub
popa
pop
je
inc
push
dec
or
jo
jo
lahf
fimuls
sub
pop
cmpl
bound
ja
xchg
add
jmp
lds
mov
add
adc
mov
rcrb
out
ja
pop
push
repz
mov
xchg
mov
xchg
scas
mov
and
xor
std
fistpll
pop
jae
fwait
inc
push
push
pop
sub
je
sub
push
sub
fwait
hlt
cld
dec
ret
mov
sub
xlat
arpl
loop
adc
jg
jne
cmc
sbb
dec
mov
loopne
mov
adc
xor
ss
pop
jne
cld
lds
pop
gs
mov
pop
pop
arpl
xor
andb
cmpl
fisttps
lret
cwtl
add
pop
xchg
stc
test
inc
shl
adc
adcb
push
add
adc
or
sub
push
dec
jge
add
inc
inc
jno,pn
lds
dec
lea
je
sti
pop
stos
push
stc
sbb
outsb
loopne
es
loop
loopne
ficompl
iret
xor
jl
cmp
xchg
mov
imul
push
sub
rolb
inc
sbb
jge
bound
xchg
js
into
mov
or
mov
dec
ret
dec
push
push
addl
movsb
dec
or
pop
cmpsb
popf
les
in
add
dec
cli
xlat
cmc
sub
lds
pusha
je,pn
cs
xchg
cmp
adc
cltd
sub
stos
sarl
arpl
xorl
aam
push
fidivs
adc
hlt
cs
sub
lret
inc
dec
sahf
out
and
roll
call
mov
mov
mov
ljmp
dec
jp
mov
jmp
loop
cmc
push
js
int
add
add
fcmovu
sub
fists
les
fwait
xchg
js
and
test
pop
inc
push
test
data16
pop
cld
xchg
int
pop
sub
aas
ljmp
das
in
inc
scas
sbb
enter
mov
mov
pop
jl
clc
mov
cmp
jb
mov
jbe
ljmp
fisubrl
fsubs
int3
sbb
xchg
ficoms
inc
dec
pusha
je
icebp
das
div
push
xor
cli
lret
aad
mov
xor
dec
adc
jns
pop
sbb
popa
orl
jno
negl
inc
add
jl
pop
jne
lds
push
inc
rcr
aam
sbb
xlat
out
stos
cmpsl
addl
aaa
pop
data16
push
insb
cmpb
mov
or
sbbl
repz
adc
lock
or
pop
dec
pop
mov
lods
push
push
inc
lods
mov
jo
add
dec
insl
stc
xchg
ljmp
xlat
jb
rorl
lods
jp
push
cwtl
mov
cmpsl
js
pushw
fdivs
mov
add
repz
cs
xor
mov
jb
or
repnz
adc
xor
sub
mov
stos
mov
dec
mov
push
les
cltd
adc
inc
cmp
fsubrl
int3
pop
jg
lods
arpl
pop
pop
lahf
or
mov
or
push
pop
push
and
ret
jno
push
pop
and
add
xor
mov
xchg
jge
mov
push
out
fcmovbe
ss
loop
repz
imul
hlt
fldl
or
scas
lods
pop
cltd
cmc
scas
pop
loopne
adc
sub
stos
sti
and
pusha
or
popf
xor
dec
lock
mov
mov
sub
nop
adc
mov
movsl
cmp
push
xchg
outsb
sub
pop
xchg
push
mov
ja
shll
rorb
mov
es
mov
cmp
pop
xchg
cmp
ret
mov
mov
lock
sbb
push
bound
inc
and
dec
dec
jge
pop
aas
jae
out
add
and
cli
outsb
push
cmc
out
xchg
sbb
jp
adc
pop
aad
js
xor
insb
int
rdmsr
xchg
xor
fs
popa
push
aad
lret
lahf
popa
pop
fsubr
loope
int
adc
enter
xor
test
mov
xor
xor
jl
inc
add
imul
mov
push
fmull
inc
nop
aaa
xchg
aaa
inc
pop
inc
or
adc
dec
xchg
mov
bound
mov
and
mov
add
nop
xchg
push
insb
sahf
sti
cmpsb
and
fwait
in
test
push
test
dec
mov
lcall
fucomi
add
aaa
mov
bound
mov
stc
std
push
cli
and
inc
or
add
or
cmpsl
mov
pop
push
jnp
les
mov
add
dec
or
push
xchg
xchg
fdivrl
test
ja
mov
sti
or
rcll
inc
scas
and
inc
insl
cltd
repnz
inc
pop
mov
loopne
xchg
out
pop
js
lret
xchg
sub
push
mov
jl
daa
leave
cmp
outsl
das
push
cmp
mov
cmp
xchg
jl
push
xlat
mov
xchg
aaa
jo
sbb
movq
insb
out
in
jb
xchg
shrb
mov
mov
popa
fcoms
push
icebp
pushf
mov
mov
mov
push
push
mov
and
pop
repz
xchg
ljmp
cld
push
in
pop
in
and
or
rol
movsl
mov
xchg
jne
pop
inc
inc
mov
mov
rcll
rcrl
addl
sti
xor
ret
jge
add
jae
mov
out
pop
cmpsl
ds
cld
sub
popa
scas
notb
cli
cs
repz
mov
outsl
and
inc
insb
test
test
lahf
movsl
ds
cmp
xor
xchg
lret
sbb
lret
cltd
pop
insl
orl
lods
push
insl
testb
sti
adc
pop
xor
xchg
mov
mov
in
and
je
jno
ret
loopne
lea
xor
pop
cmp
sub
int
cmc
or
ficompl
pop
sub
dec
xlat
jnp
jmp
xchg
inc
pop
dec
fucomp
and
jo
and
loopne,pt
pop
xor
jne
icebp
cli
fsts
stos
add
mov
jae
aas
jecxz
sbb
mov
pop
push
jo
mov
mov
outsl
fsubrs
mov
mov
push
dec
inc
xor
add
scas
cmp
sbb
fidivrl
mov
mov
jo
rolb
mov
xorl
clc
lea
sbb
loopne
or
imul
adc
xchg
mov
lock
add
add
out
sub
dec
sbbl
sub
cmp
xor
mov
and
std
repz
div
out
sbb
in
fsubs
cmp
arpl
pop
psrlw
add
ja
sub
jp
fnstcw
pop
andb
cmp
xchg
cltd
fs
mov
pop
lahf
jge
adc
mov
mulb
add
lock
test
adc
call
lock
roll
lret
or
adc
es
std
cmc
test
xchg
dec
jl
or
xchg
jge
push
inc
cli
add
mov
aad
push
push
lret
js
scas
rorb
cmc
loopne
stc
cmp
xor
negb
or
cmp
sbb
je
sahf
push
idivl
and
scas
or
das
lods
inc
adc
ret
mov
inc
jle
push
mov
cmp
xor
jne
das
push
in
mov
cltd
and
mov
jae
insb
les
sbb
jne
mov
dec
lods
rcrb
xchg
pop
push
pop
push
pop
xlat
dec
test
adc
mov
pop
add
bound
jg
popa
and
push
xor
dec
mov
lods
pop
lods
sbb
inc
xlat
cmpsl
jnp
test
js
aam
or
jp
movsb
push
mov
xchg
mov
cmp
mov
xorb
scas
sub
xor
jnp
inc
das
add
add
rol
clc
fisubrl
in
into
shll
shl
aas
sub
sarb
mov
pop
dec
out
stc
jge
repz
into
fstpt
clc
into
int
dec
cmp
lods
and
mov
ss
add
aaa
xchg
rol
lret
inc
pop
sahf
adc
insb
test
dec
mov
pop
dec
mov
out
mov
xchg
and
test
imul
das
jle
ror
dec
mov
imul
sbb
or
rcrl
cmp
jl
fistpl
jne
loope
sub
outsb
xchg
cmp
cmp
subl
fstpl
push
mov
loope
mov
sbb
mov
out
paddusb
aas
cli
adc
scas
push
adc
stos
jmp
pushf
jno
mov
std
add
outsl
or
add
loopne
mov
gs
fdivrp
sbb
clc
adc
js
push
loope
repnz
add
popa
mov
xchg
xchg
or
lods
sub
mov
inc
xor
lret
aam
call
clc
add
ss
and
dec
mov
push
ja
jne
mov
cmpsl
sub
stos
jp
out
mov
pop
es
add
push
pop
insl
cs
jne
test
lods
outsl
add
leave
mov
jae
stc
cld
lods
loop
mov
in
sarl
mov
test
cltd
enter
inc
mov
pop
arpl
pop
cmpsl
push
push
not
pop
dec
pop
imull
es
call
push
es
xchg
inc
mov
in
mov
dec
push
std
xor
mov
lcall
mov
stos
stc
les
pop
std
icebp
sbbb
and
sub
inc
cwtl
in
inc
push
movsl
pop
cltd
xchg
jne
inc
cmpb
fwait
add
xchg
lods
hlt
pop
xchg
pop
inc
dec
sbb
dec
fwait
or
ja
xchg
int
lret
cli
pop
lcall
inc
and
jbe
call
shl
xchg
lds
cmpsb
adc
cs
bound
data16
pop
push
cli
mov
and
pop
push
or
and
mov
jns
jmp
xchg
push
lahf
xor
bound
xor
or
pop
cmp
push
jae
fwait
bound
sbb
orl
xor
and
pop
push
popa
mov
js
pop
mov
bound
jbe
test
mov
adc
mov
add
xchg
mov
push
addr16
mov
xor
add
jb
push
dec
mov
mov
jae
or
sahf
cld
cmc
rorl
sbb
sub
imul
cs
out
jb
sti
and
sbb
xlat
adc
ret
sub
and
pop
je
inc
loop
test
call
rol
iret
push
enter
add
fst
out
push
bound
ja
lock
mov
jecxz
mov
xor
es
jmp
sbb
mov
ss
inc
dec
lock
jae
push
adc
mov
es
or
dec
xchg
jnp
jnp
jecxz
in
cwtl
stos
xor
and
es
push
shrb
shl
shlb
in
aad
ret
test
sbb
mov
adc
mov
data16
push
pop
lods
fldt
mov
sub
test
in
leave
scas
inc
addr16
xor
cmp
iret
insb
jne
jl
push
adc
sbb
test
pusha
dec
xor
mov
rolb
mov
push
push
lds
pop
mov
icebp
xchg
xlat
inc
mov
add
nop
push
cli
inc
lahf
loop
pushf
hlt
setno
or
aam
xadd
lods
cmp
clc
jo
cmp
adc
ds
push
push
bound
arpl
xor
inc
sarb
mov
mov
mov
das
filds
jge
jno
and
mov
xchg
mov
xor
loop
mov
test
cmp
xchg
or
push
cmp
aam
mov
dec
cwtl
and
js
jne
les
test
mov
fimuls
aas
hlt
repnz
aad
ljmp
mov
xchg
imul
jl
adc
push
or
in
jp
popa
mov
loop
mov
popf
mov
rolb
jge
clc
andl
xchg
notb
adc
insb
jecxz
sti
rolb
insb
xor
sub
or
popf
dec
repnz
paddw
das
mov
pusha
sub
mov
sbb
pushf
cltd
inc
fildll
pop
fsubrp
scas
cmp
mov
mov
lds
mov
sub
int
jnp
aam
cs
addr16
dec
scas
or
fisubs
mov
mov
aas
sbb
pop
pop
inc
xchg
xchg
mov
inc
in
jnp
insb
pcmpeqd
push
aam
jg
movsl
pop
fiadds
imul
sub
mov
mov
dec
stos
dec
or
out
repnz
dec
push
inc
fldt
xlat
sbb
or
push
pushf
dec
cmp
push
repnz
arpl
imul
icebp
jge
jns
mov
inc
mov
pop
xor
xor
xor
incb
dec
add
inc
inc
xchg
mov
mov
jl
xor
jne
cmp
mov
stos
je
cmp
inc
repz
mov
push
fisubl
pop
dec
scas
lret
push
sbb
adc
popa
std
inc
nop
loop
lds
mov
bound
jne
addb
mov
rorl
inc
push
repz
fwait
stos
cmp
pop
das
aaa
xchg
call
ss
outsb
push
fadds
arpl
gs
ret
es
push
ret
cmp
mov
outsb
cwtl
xchg
jmp
lds
mov
iret
mov
sarb
leave
xor
les
adc
cld
lea
pop
negl
sbb
xchg
data16
loop
lcall
fwait
pop
xor
dec
in
lea
in
or
push
jge
add
jmp
inc
inc
loope
mov
add
jge
pop
fistl
add
outsb
mov
cmp
repnz
jo
rorb
lods
adc
push
into
cmp
into
xchg
sahf
jbe
or
or
pop
cmpsb
js
inc
inc
test
jb
mov
leave
mov
cwtl
in
xchg
rorl
dec
cwtl
loop
mov
outsb
mov
jge
pop
ret
test
mov
and
cmp
push
add
mov
xor
push
mov
push
pop
loopne
int
push
gs
test
push
repnz
xor
cmpsl
add
aam
cltd
push
aas
sbb
dec
xchg
cmpsb
pop
movsl
pop
fwait
lea
hlt
xchg
jge
leave
daa
dec
xchg
test
cmp
jbe
inc
out
mov
out
sbb
mov
aad
testl
add
mov
in
mov
mov
mov
aas
push
inc
sbb
fiaddl
cwtl
inc
aam
mov
adc
inc
sbbl
cltd
pop
out
mov
push
xchg
data16
lret
adc
sbb
push
bound
popa
icebp
popf
in
cltd
jle
mov
rorb
push
shrb
ds
dec
xlat
loopne
mov
mov
inc
movl
adc
icebp
cmc
movsb
xor
and
push
add
pop
jmp
popa
cmpsl
loope
jno
cmp
adc
jo
roll
divl
rorb
mov
pop
sub
shll
lret
fs
icebp
mov
ret
xchg
inc
jp
sbb
lods
adc
sub
call
imul
test
mov
push
jp
fstpl
sarl
and
fwait
push
popf
lods
or
test
mov
or
cli
mov
mov
lods
mov
insb
jle
les
sahf
xor
ficomps
mov
mov
popf
lea
leave
fdivs
xchg
inc
push
ja
mov
sbb
insb
jle
out
dec
arpl
pop
jle
cmpb
test
movhps
popf
add
bound
inc
xchg
pop
mov
add
imul
cs
xchg
add
add
dec
add
dec
fcom
enter
sbb
sub
aad
pop
jge
dec
movsl
mov
es
shl
imul
push
or
dec
sbb
sub
mov
jmp
and
fwait
xchg
add
adc
push
cmc
mov
or
xor
test
and
std
and
inc
cli
int3
ja
jnp
flds
call
insb
inc
fadds
xorb
pop
ds
mov
jmp
xchg
int3
sti
in
ret
push
ficoml
and
addr16
xchg
rcll
xor
mov
xor
mov
jle
data16
push
adc
xor
mov
shll
je
lock
ret
pop
nop
iret
scas
in
add
inc
and
xchg
jg
imulb
mov
lret
sbb
xor
push
call
mov
sbb
addr16
rorl
push
decl
add
mov
sub
out
jmp
xor
rol
xchg
dec
daa
test
pop
arpl
rolb
pop
xlat
mov
push
xchg
incb
push
test
into
mov
sub
jl
push
ljmp
mov
repz
adc
xchg
jbe
mov
add
jle
clc
es
fdivl
add
aas
add
push
push
or
aam
xchg
nop
fidivrs
sbb
add
push
xchg
hlt
dec
imul
popf
sbb
popa
xchg
add
ljmp
sub
pop
pop
imul
repz
fwait
lcall
push
push
das
fcom
adc
push
fstpt
jp
sub
fwait
stos
clc
push
xchg
mov
dec
clc
cmp
cmp
push
test
cld
push
sub
add
pop
push
pop
xchg
pop
addl
leave
repz
jno
push
xchg
cmp
xor
in
push
das
jp,pt
cmp
shl
pop
xor
pop
cmp
ret
in
push
jo
movsl
sbb
xchg
jp
test
push
mov
cwtl
out
push
stos
or
jns
into
mov
add
ds
repnz
sub
out
fnsave
js
and
or
js
dec
in
fdivl
sbb
outsb
inc
lea
ja
js
xchg
loopne
repz
aad
mov
in
jae
dec
dec
fistpl
dec
push
inc
adc
cmp
shr
lock
sub
mov
dec
mov
sbb
cmp
sub
repnz
xchg
cmc
test
shlb
divb
cld
jg
arpl
xchg
loop
adcb
stos
rclb
shll
cltd
add
incb
imul
jge
and
lods
das
mov
scas
cld
or
fs
sub
fsubr
sub
cmc
js
mov
jg
pop
add
jg
xor
rorb
jl
outsl
push
les
adc
cltd
mov
aas
xchg
pop
mov
rol
pushf
dec
out
pop
xchg
xor
cli
cmc
mov
lock
and
pop
fdivl
in
fwait
dec
dec
jmp
or
dec
mov
pop
jns
cmp
pop
sub
movsb
test
pushf
repz
hlt
pop
fstp
push
cmp
adc
fidivrs
cvtdq2ps
sub
or
sbb
imul
stos
popa
std
sar
lods
cmp
js
lcall
frstor
imul
lret
xor
mov
out
addr16
ret
pop
cwtl
jno
push
popf
or
fsts
add
in
int3
sub
push
dec
outsl
xchg
in
js
jmp
jecxz
xchg
fucomip
sub
into
mov
andl
cmp
mov
in
je
sub
cld
cli
les
lea
cmp
dec
mov
push
lods
mov
mov
ljmp
xor
xchg
push
and
ja
mov
fisttps
xor
inc
addr16
aad
xorb
repz
test
stc
loope
popa
push
repz
jae
sbb
mov
xchg
mov
addr16
andb
xchg
cltd
cmc
in
test
xor
scas
xor
aad
cmpsl
repnz
jns
fs
add
stos
jmp
movsb
popa
mov
mov
sbb
imul
ret
or
insb
push
lahf
mov
in
sbbl
cli
sub
test
stos
jb
lods
xchg
sti
subl
jnp
les
pusha
movsl
jp
lcall
gs
out
loopne
xor
jo
movsb
mov
testl
xorb
es
cs
add
scas
cmc
imul
or
fcomps
cmp
jnp
pop
pop
gs
mov
dec
rcll
mov
cmp
cmp
movsl
xchg
std
sub
ficomps
mov
cmc
pushf
lds
imul
inc
mov
sbb
inc
das
lods
jge
imul
je
mov
stos
cmc
sti
and
cli
lahf
call
je
mov
mov
sub
adc
outsl
xor
insb
insl
clc
test
pop
rclb
add
push
aas
lret
pop
into
test
sub
cmp
in
lods
test
mull
out
sub
xor
cmp
out
pushf
cmp
xchg
push
out
cmc
stos
in
jno
adc
stos
mov
pop
out
jnp
add
push
test
mov
test
shll
xchg
xchg
dec
pop
sub
push
xor
lret
imul
into
fisttpl
cmp
lea
roll
mov
dec
and
and
xchg
sbbl
out
jno
and
push
icebp
push
cmc
xor
jl
cmp
and
stc
idiv
fcmovu
fisubrs
jle
mov
adc
mov
iret
sti
insl
cmp
mov
add
daa
out
pop
mov
outsl
stos
xor
xchg
lock
xchg
loope
xchg
push
jle
xchg
in
popa
mov
leave
mov
xor
call
add
xchg
lret
sub
adc
jp
outsl
call
dec
les
pop
cmc
aam
das
test
aas
imull
imul
sub
arpl
sub
pop
aam
add
sahf
and
dec
sbb
movsl
adc
hlt
ds
push
pusha
xor
xor
mov
mov
rolb
mov
mov
xchg
data16
ja
sbb
rorl
rcrl
jnp
incb
mov
dec
dec
and
int3
lock
dec
mov
les
jge
int3
aam
sub
cli
inc
icebp
out
ja
push
call
aam
cltd
popa
in
xchg
cs
in
push
call
mov
pop
scas
and
push
mov
insl
rorl
push
xchg
mov
xsavec
jbe
xorb
test
mov
xchg
out
jecxz
pop
jb
pop
rolb
pop
jge
push
push
push
and
and
mov
imul
xor
ss
cmpsl
mov
clc
cld
bound
outsl
pusha
jecxz
in
das
pop
aaa
es
pop
int
xchg
loopne
pop
fs
lock
mov
mov
sbb
imul
add
out
pop
xor
push
push
test
cmp
pavgw
cltd
ja
add
ficomps
mov
mov
into
mov
dec
push
sub
cld
cmc
pusha
fidivrs
sti
push
aam
je
and
and
ja
fistps
xchg
fldcw
dec
pop
pop
fnsave
sub
cmc
ljmp
mov
pop
pop
push
test
push
push
cs
rcrl
inc
scas
gs
push
push
jnp
test
push
push
jbe
ss
cs
inc
pop
stos
push
rorb
mov
fistl
mov
aam
xchg
mov
in
nop
xchg
sarb
xor
add
jle
adc
in
iret
daa
rol
arpl
aaa
mov
adc
hlt
push
add
imul
jl
repnz
jmp
push
adc
pop
mov
dec
ds
jge
mov
loop
cmp
jg
push
scas
jnp
pusha
sbb
dec
and
es
mov
cmp
add
pmaxsw
adc
add
xor
xor
sbb
jmp
stos
cmpsb
aaa
mov
sbb
inc
insb
mov
mov
ret
aas
out
push
mov
dec
aas
mov
loope
xchg
and
or
call
lock
lret
xchg
ss
or
js
jecxz
mov
fwait
ja
and
mov
jle
xchg
pop
fs
arpl
mov
xchg
mov
mov
bound
call
mov
leave
insl
int3
nop
in
pop
sub
or
mov
xor
add
orb
ror
ret
xlat
daa
xchg
test
shr
popa
mov
jp
sub
and
adc
repz
sub
xchg
sbb
popf
movsb
bswap
adc
cmp
mov
lahf
add
pop
repnz
dec
mov
mov
mov
fs
in
iret
ljmp
lods
shlb
sti
aam
iret
mov
cmp
pop
xchg
add
mov
push
dec
push
cmp
cmp
jns
cmpsb
ljmp
roll
inc
push
jp
add
xchg
mov
lods
and
cltd
xor
xlat
adc
lods
mov
push
roll
adc
nop
popf
frstor
jne
sub
and
cld
lahf
push
in
movsl
stc
les
inc
jo
or
hlt
jb
add
inc
jmp
xor
int3
sbb
stc
imul
fstl
cmc
jno
push
fs
test
mov
or
jbe
inc
lds
mov
ss
mov
ja
cli
sbbb
adc
insl
add
push
xorl
testb
popa
icebp
out
test
xor
push
push
adc
lock
and
aam
les
inc
test
mov
loope
sub
push
cmp
pop
push
imul
into
xchg
or
cli
mov
out
into
testb
pop
lea
xor
and
jnp
sub
shrl
or
cwtl
push
test
in
push
mov
shl
add
dec
sarb
test
mov
ss
push
pop
jg
lods
jle
mov
aad
push
mov
mov
lods
cmc
clc
jecxz
jbe
test
or
sbb
push
lds
out
mov
outsl
mov
and
adc
mov
pop
in
sub
mov
shlb
adc
fs
ds
mov
test
mov
jp
aaa
bound
mov
mov
adc
out
dec
out
popa
cmpsb
arpl
push
int
mov
or
test
sbb
lea
sub
mov
cmpsb
out
cmp
xchg
or
dec
mov
xchg
and
inc
xor
and
notl
xchg
neg
dec
mov
push
pusha
das
add
mov
ss
push
in
arpl
imul
sbb
aaa
inc
jg
in
add
sbb
dec
pop
movsl
and
ss
clc
mov
data16
dec
pop
jne
cmp
add
lods
iret
fsubrl
fbld
ror
sub
fsubrl
fidivs
xchg
js
das
cmp
mov
test
je
je
push
lahf
xchg
xor
gs
inc
push
repnz
push
push
or
stos
and
mov
popf
push
mov
push
icebp
fpatan
in
repz
xorl
pop
xchg
pop
and
adc
and
mov
lret
mov
lods
pop
cmp
pop
jle
pop
scas
or
cmp
inc
add
mov
sahf
or
scas
lret
xchg
adc
push
mov
jl
repnz
dec
lret
pusha
jmp
cmp
mov
adc
xchg
mov
pusha
dec
popa
xchg
roll
data16
mov
xorl
dec
lret
add
push
ret
dec
stc
xchg
sti
arpl
and
xchg
add
aad
sbb
lahf
dec
nop
test
and
mov
arpl
mov
insl
aas
jns
fsubrp
daa
repz
in
push
cmp
xor
sahf
pop
mov
clc
dec
xchg
scas
mov
mov
push
pushfw
xor
or
fsubs
in
adc
popa
xor
dec
cltd
cmp
cli
out
sub
mov
cld
adc
jne
sbb
popf
add
daa
dec
leave
fistpll
fwait
push
and
imul
cltd
je
outsl
inc
xchg
mov
jp
dec
jmp
std
movhps
scas
dec
fiadds
ficomps
xor
jp
in
outsl
mov
add
mov
or
add
ror
addr16
shll
and
cmp
inc
stc
push
inc
loope
jne
push
mov
out
push
push
xchg
je
arpl
fnstenv
out
divl
bts
or
or
inc
mov
sub
push
stos
pusha
jg
xlat
mov
roll
push
fimull
call
aaa
stos
and
lods
jno
lahf
mov
cmp
loop
inc
es
jl
mov
out
cmp
pop
lock
push
call
outsl
push
arpl
out
mov
cmp
cmp
add
mov
dec
mov
jmp
jbe
js
sbb
shl
stc
cmp
and
jl
notl
fildl
mov
ljmp
lcall
mov
rclb
cltd
and
inc
mov
frstor
cmp
push
add
movsb
fbstp
int
mov
lds
jg
pop
mov
dec
add
divl
xor
inc
xor
push
scas
mov
fsubp
lods
pop
and
insb
aam
icebp
sub
xor
mov
in
aad
pop
and
push
jg
sbb
mov
js
pop
sarl
cmpsb
sbb
xor
or
mov
pop
loop
xor
in
rcll
mov
jle
cmpsl
clc
fisttps
mov
and
sub
inc
mov
mov
cwtl
sub
stos
ficoml
pop
ja
test
mov
pop
pop
pop
stc
push
jge
pusha
pop
inc
jle
adc
sbb
roll
lods
iret
popa
adc
fcoml
das
adcb
or
mov
cld
scas
int
popf
ds
cltd
dec
fstps
cmp
adc
pushf
xor
sub
adc
addl
sbb
dec
imul
jecxz
aaa
mov
lea
pop
pop
enter
mov
cmp
adc
xlat
mov
mov
hlt
notb
xor
mov
test
push
mov
push
js
jns
popf
loope
mov
ret
mov
pop
inc
pop
or
sub
aaa
xchg
scas
pop
arpl
push
mov
sub
inc
pop
mov
pop
add
out
and
cmp
sbb
fdiv
add
add
push
jne
insb
lret
jb
mov
push
push
popf
xchg
aad
std
sbb
not
leave
and
test
filds
xchg
jp
lds
test
adc
xor
mov
mov
dec
ja
js
call
sbb
cmpsb
mov
push
mov
loope
stos
jp
sub
cmp
mov
push
sahf
sti
stos
sbb
repnz
fistl
fidivrl
sbb
bound
push
dec
movsl
xor
and
cld
popf
ret
stc
movsl
popf
or
shrb
les
mov
es
mov
leave
cmc
clc
bound
pop
jl
sub
loopne
sub
add
mov
fbstp
lock
int
leave
mov
in
sub
pop
fdivs
sbb
push
inc
and
sbb
loope,pt
int
out
cmp
sub
sbbl
add
subb
inc
lcall
jg
repz
mov
dec
pop
bound
mov
xchg
mov
push
and
fists
test
ss
xchg
sbb
push
xchg
xor
repz
push
scas
xchg
std
pop
push
ljmp
les
dec
xor
shll
lds
andb
lods
in
scas
aad
or
push
cltd
push
jmp
cmpsl
jbe
jmp
je
pop
jmp
out
mov
adcb
dec
scas
push
dec
xchg
in
add
pop
mov
xchg
jne
mov
std
cmpsl
sti
cmp
push
cmovnp
sub
dec
lods
testl
jg
fildll
clc
int3
add
or
jp
lock
in
push
cltd
cltd
pop
loope
fcmove
lods
lea
mov
jmp
push
setb
imul
inc
add
jp
dec
mov
scas
lret
outsb
ljmp
hlt
ljmp
and
pushf
je
pop
out
imul
mov
rorb
out
cmpsb
ret
cmp
pop
cwtl
xor
icebp
sub
scas
shll
cwtl
mov
xor
mov
fnstcw
ja
test
and
cmp
jl
test
or
adc
jecxz
fs
jp
add
in
movsb
and
outsb
xchg
mov
hlt
inc
outsl
xchg
cmp
pop
imul
and
ffree
jl
cld
pop
dec
sti
adc
and
inc
fs
imul
xchg
out
push
jae
push
xchg
jge
mov
mov
push
jo
clc
js
addb
dec
jle
shll
dec
popa
stc
or
dec
sub
mov
xorb
and
push
shlb
or
pop
test
mov
pop
sbb
push
xchg
imul
pop
xchg
stc
mov
adcl
push
mov
mov
xchg
xor
dec
jo
insb
xchg
jo
adc
arpl
les
and
iret
or
lret
scas
xchg
cmp
out
repz
pushf
mov
imul
std
add
ret
adc
mov
test
dec
or
mov
sti
mov
jmp
pop
sbb
jne
repz
in
add
pop
fwait
stos
outsl
xchg
xchg
clc
jp
mov
fldl
roll
das
enter
stc
and
dec
inc
mov
dec
dec
fcomps
pop
sub
out
aam
push
jae
push
lahf
nop
xor
mov
add
and
jl
test
jno
pusha
scas
sahf
fldt
jle
sub
add
outsb
push
add
adc
or
add
fsubrs
cmovb
sahf
pop
rorl
jmp
dec
sbb
mov
stc
test
push
fdivl
and
push
pop
daa
dec
jo
out
shll
and
fnsave
sbb
popa
aad
push
subb
test
mov
pushf
push
jne
lret
xor
add
jbe
or
icebp
mov
shlb
fwait
xchg
cmpsb
mov
add
cmp
lds
aad
enter
lods
repz
aaa
add
pop
push
dec
xor
inc
add
push
mov
faddl
in
lods
stc
or
fidivs
hlt
sti
jns
sbb
das
jno
fcoml
pop
sbb
jno
test
cmpsl
ret
cld
push
fnstsw
pop
sbb
mov
mov
push
sub
xchg
jne
icebp
ja
out
mov
fs
lods
ja
jge
je
push
mov
das
mov
pop
mov
adc
dec
xchg
inc
pop
iret
mov
inc
lock
push
xlat
sbb
add
xchg
loop
cmp
inc
cmp
out
push
xchg
mov
sbb
mov
int
mov
xor
aam
pop
fldl
inc
aaa
aad
out
cmc
movsb
push
lods
dec
xchg
les
and
and
das
subb
cmp
pop
out
xor
test
xor
cmp
inc
and
daa
inc
sti
xchg
aas
cmpsl
jo
lret
lret
pop
mov
push
sahf
std
cmpsb
inc
mov
incl
aas
adc
and
pop
ljmp
mov
jg
push
in
jns
imul
ljmp
outsb
popa
pusha
inc
jno
pop
pop
sbb
or
and
mov
cmp
and
lcall
out
adc
cmp
stos
jo
pop
push
sbb
mov
sti
aaa
cltd
out
xor
gs
sub
insb
imull
test
cmp
aaa
cmpsl
pop
int3
in
jp
mov
mov
mov
or
sbb
xchg
inc
cmp
push
dec
xchg
xchg
xor
aam
push
push
mov
xor
cmpsb
inc
in
sub
cmp
adc
aam
xchg
shrb
xchg
adc
xchg
jl
lods
bound
stos
aad
mov
mov
adc
mov
jle
cmp
mov
mov
in
mov
mov
shlb
enter
stos
dec
lds
pop
xor
sbb
test
adc
push
loope
hlt
xchg
out
push
scas
rcrl
sub
call
push
loop,pn
mov
xchg
push
pushf
jbe
cli
sub
inc
int
ds
mov
test
ja
fldcw
cmp
and
sbbb
fisubrs
jne
sbb
test
pop
int
sarb
cmc
ss
inc
scas
sbb
ret
sub
or
jge
dec
loope
fldenv
xchg
iret
jp
js
aam
clc
cmpsl
ja
push
fcmovnb
or
add
cli
mov
in
adc
mov
or
dec
aaa
jb
pop
adc
lods
jo
sbb
xchg
sub
xchg
or
or
dec
mov
or
sub
movsl
les
fcoms
dec
fistpl
pop
push
add
imul
xlat
dec
test
test
fwait
inc
and
out
jle
call
fwait
and
mov
jg
mov
mov
aad
push
pop
in
pop
or
pushf
adc
cmp
xor
es
outsb
and
jmp
jmp
sub
testb
lods
loop
rorl
fs
dec
loope
push
or
push
adc
push
daa
inc
adc
mov
sbb
movsb
xchg
mov
andl
pop
xor
cld
pop
in
mov
in
pop
or
lahf
out
iret
sbb
shll
lea
add
stos
dec
add
stc
out
adc
cli
stc
mov
inc
sub
insl
insb
inc
mov
rcrl
iret
das
mov
cmpsl
sub
dec
dec
cwtl
dec
sbb
scas
ljmp
fwait
or
cmp
mov
push
dec
stc
popf
xor
dec
mov
in
push
jne
jae
xchg
loopne
fs
add
pop
les
std
cmp
adc
addb
rorl
js
outsl
aam
pop
adc
pop
ds
push
sbb
sbb
push
inc
repnz
pop
pop
or
jne
repz
jmp
cmc
lods
fiadds
cltd
pop
aad
mov
out
cld
cmp
stos
mov
leave
jns
mov
outsb
lret
test
std
das
fucomip
dec
imul
shrb
xor
adc
push
xchg
cmp
xor
iret
data16
or
mov
mov
jle
addb
ret
lods
add
outsb
and
scas
je
ljmp
push
sub
ret
adc
mov
mov
mov
pop
sub
mov
scas
pop
imul
mov
inc
jb
and
or
mov
adc
xchg
pop
and
daa
icebp
xchg
push
out
adc
and
push
push
or
pop
sbb
dec
push
inc
incb
cmpb
mov
in
outsb
adc
lock
mov
in
push
out
gs
inc
xor
pop
or
daa
rcrl
rclb
or
sahf
gs
mov
xchg
xchg
push
mov
js
stos
shrl
mov
inc
lahf
cmp
xor
mov
aas
xchg
mov
pusha
mov
lret
adcl
push
cmpsb
add
dec
xor
xor
repnz
mov
rorb
cld
inc
shr
jge
jmp
lods
xchg
and
pop
fxch
into
and
lret
mov
pop
xchg
cld
adc
push
hlt
pop
fucomip
mov
and
repnz
cld
jecxz
rolb
jmp
fwait
cmc
mov
adc
jg
cmp
testb
jmp
jl
mov
xor
xchg
jb
dec
mov
add
push
ret
mov
adc
gs
mov
push
addr16
pop
leave
div
sub
mov
mov
cmp
push
pushf
outsb
pusha
mov
push
mov
mov
inc
js
stc
xor
fmull
pop
xchg
or
into
pusha
pop
scas
lahf
lods
das
sbb
and
add
in
clc
movsl
dec
lea
cmpsb
aaa
movsl
sbb
cmp
inc
outsl
jp
pop
filds
cmp
jecxz
jmp
into
ret
les
sbb
int
movsb
jge
sbb
push
jne
push
shll
cmp
roll
int
mov
pop
stos
int
fbld
xchg
out
test
cmpl
das
ss
stos
icebp
adc
stos
inc
pop
mov
sub
aad
dec
insb
xchg
cld
mov
mov
push
scas
aaa
sub
inc
ror
call
scas
enter
fsubrp
pavgb
loope
popf
iret
pop
mov
orl
mov
dec
push
cli
test
in
sbb
dec
pop
popf
push
fwait
jp
or
test
movsl
jno
pop
pop
add
xchg
test
and
xchg
mov
rolb
and
xor
pop
lret
inc
lret
inc
push
jb
insb
mov
mov
insl
lret
outsb
mov
fiadds
or
ret
test
lcall
sbb
sbb
nop
rcrb
in
inc
pop
sub
ljmp
icebp
cmp
dec
pop
mov
fimull
or
cmpsl
cs
mov
dec
sti
orl
jecxz
sbb
push
xor
mov
vcvttps2dq
lret
fs
add
pop
loope
sub
adc
jnp
inc
stos
fidivl
pop
fcmovne
and
push
mov
dec
sarb
push
dec
orb
pop
mov
mov
cs
xor
lret
adc
adcb
cs
cli
fisttpl
jp
xor
subl
push
loop
mul
jno
lahf
dec
xchg
lods
pop
sbb
insl
and
jg
lods
insb
outsb
inc
cmp
jmp
mov
mov
out
jle
ljmp
adc
dec
movsl
ljmp
xchg
inc
pmaxsw
lret
sbb
js
inc
inc
add
movsl
popa
ret
sub
and
inc
test
outsl
jnp
push
subl
jmp
insl
cmc
int3
jae
mov
mov
movsb
fsubs
aaa
dec
adc
and
mov
mov
xchg
pop
xchg
fidivl
loop
dec
cmp
in
xchg
mov
jg
pusha
mov
and
inc
cmp
jecxz
test
adc
and
mov
xchg
cmp
or
push
add
push
pop
add
dec
xchg
negb
out
inc
paddq
andb
popf
push
push
insl
add
push
lds
fsubr
fdiv
rcrl
cli
repz
mov
and
push
repnz
or
jmp
mov
dec
dec
inc
inc
dec
mov
adc
stos
push
out
lcall
icebp
sub
lcall
dec
push
adc
adc
xchg
loope
mov
xchg
push
mov
or
test
loope
mov
push
js
in
aaa
aad
cmp
in
leave
scas
xorl
mov
insb
testl
cli
je
mov
call
cmp
pop
pop
xor
cmp
pop
mov
out
loop
mov
fisubrs
and
jl
inc
push
or
enter
push
adc
aad
lret
mov
pop
xchg
into
jbe
jecxz
dec
jg
test
pop
mov
mov
in
inc
test
stos
fimuls
test
jbe
sbb
or
popl
mov
xlat
push
rol
dec
mov
pusha
daa
add
arpl
mov
rorb
jmp
dec
loop
xchg
cld
cmp
jecxz
enter
xor
lea
out
aaa
mov
push
adc
cmp
stos
and
subl
shlb
mov
cmpl
nop
sbb
dec
scas
fisttpll
pop
fldcw
sbb
jp
pop
cmovns
jmp
in
xor
inc
xor
or
mov
cmp
inc
imul
lock
push
xor
xchg
jge
sti
movsb
mov
out
js
sub
repz
push
jmp
lahf
cmp
lea
mov
cltd
outsl
cmp
xchg
int
std
and
int3
divl
mov
repnz
mov
test
push
sbb
inc
cmc
xchg
es
sub
xchg
or
push
mov
sub
xlat
sub
adc
ljmp
mov
shrl
push
test
jae
jo
cltd
cs
and
pusha
cmp
lea
push
std
or
icebp
es
push
sarb
aam
je
imul
mov
or
hlt
push
sti
add
divl
add
pop
negb
clc
pushf
adc
je
hlt
iret
mov
xchg
lock
xor
mov
test
mov
adc
lcall
or
adc
popf
aam
mov
cli
inc
aas
daa
mov
cld
test
ds
sbb
cmp
mov
shl
test
mov
sbb
mov
cmp
jnp
xchg
mov
add
test
cmp
lds
imul
mov
sti
push
gs
outsb
adc
les
sbb
pop
andb
int3
imul
mov
aaa
inc
push
cmp
xchg
pop
jne
je,pn
sub
mov
sbb
adc
hlt
das
sahf
or
addr16
cmc
fucomip
sti
jecxz
dec
sub
adc
mov
inc
iret
mov
mov
std
jne
ds
ljmp
and
mov
mov
cmpl
movsb
cmpxchg
jnp
push
inc
lcall
shll
bound
mov
mov
push
mov
andnps
xlat
repnz
sub
clc
shrl
mov
dec
push
ljmp
outsb
hlt
add
out
orl
add
fcomps
xor
mov
ds
test
cmp
lock
and
shll
test
inc
push
add
and
pop
mov
sbbl
and
out
ret
out
pop
and
adc
subb
add
push
rclb
push
sarl
popf
ret
ja
daa
lock
lods
pop
test
push
adc
lret
lcall
aaa
pop
fadds
pusha
lds
pop
fdivl
outsb
lcall
bound
mov
xor
rol
popf
inc
xor
rolb
pop
out
out
ss
lock
inc
bound
scas
popf
inc
jb
mov
sti
mov
add
cmp
frstor
js
rolb
notb
add
dec
dec
dec
test
pop
std
ds
or
mov
es
dec
jg
rorb
ja
fsubrl
push
nop
icebp
xor
sbb
jae
int3
packuswb
and
push
xchg
or
mov
lcall
mov
rorl
into
dec
adc
push
xor
js
sbbb
fisttpl
fistl
lock
nop
test
in
mov
enter
std
inc
inc
shr
mov
xchg
aam
jp
imul
pop
in
xchg
lret
mov
xchg
mov
push
sub
pop
mov
sub
xor
nop
arpl
dec
or
cwtl
iret
in
jle
je
into
loope
inc
pop
mov
xchg
cmp
test
jns
pop
lcall
mov
dec
mov
loope
pop
std
sbb
pop
sub
and
sbb
lcall
jae
jp
jno
outsb
mov
sahf
sbb
sbb
in
mov
movsl
sub
mov
lods
push
dec
adc
adc
dec
or
pop
pop
pop
lds
or
adc
jg
pop
mov
or
addr16
cwtl
push
or
out
mov
and
xchg
sbb
daa
xchg
icebp
pop
jge
xor
aas
inc
add
xor
mov
push
cmp
jl
testb
test
test
jp
xchg
mov
mov
pop
mov
xchg
stos
xchg
add
mov
dec
ja
fnstsw
int
fsubr
mov
mov
pusha
sbb
repz
push
dec
push
push
dec
cmpsb
push
jno
insl
inc
cmc
jns
leave
cltd
xor
das
icebp
and
das
out
pop
add
ds
mov
jae
icebp
movsb
push
fnstcw
push
daa
adc
imul
add
push
out
mov
cld
inc
es
ds
imulb
cmp
mov
addl
cmp
jns
mov
mov
inc
mov
sub
movsl
dec
xor
out
in
pop
push
mov
lds
sbbb
lahf
push
xchg
inc
outsl
push
push
sub
test
xchg
into
stc
nop
or
adc
mov
and
test
stc
jnp
xchg
cltd
xor
and
idivb
sbb
das
aam
pusha
jae
icebp
inc
xor
add
movsl
mov
or
mov
or
enter
mov
cmc
jecxz
jmp
xor
mov
jns
sub
sbb
sub
push
jmp
sbb
sarl
adc
movsb
mov
fisubrl
push
loop
sub
subl
icebp
xor
mov
loop
aam
leave
mov
jo
mov
sub
add
fld
and
dec
mov
add
imul
int
ja
ljmp
sbb
imul
faddl
push
outsb
pop
push
jae
cld
sub
dec
jae
hlt
jle
fdivrs
aas
push
mov
sbb
cltd
popf
aam
inc
rol
cmp
lcall
or
pop
inc
mov
rol
stos
scas
std
sti
and
inc
stos
xchg
mov
addr16
jl
mov
adc
insl
and
pop
cmpsb
lods
push
test
cmp
cld
adc
jo
jl
into
jg
xchg
pop
pop
sbb
mov
mov
cwtl
xorl
mov
je
sub
mov
push
add
inc
dec
loopne
fcomps
dec
pop
adc
mov
push
cltd
sbb
subl
js
sbb
mov
inc
daa
mov
push
nop
pop
mov
xchg
in
bound
mov
lret
xor
dec
ljmp
lret
cmp
cmp
xchg
rcr
or
dec
sbbl
xor
jl
in
ficoml
inc
and
in
mov
lods
out
jne
aaa
dec
inc
pop
add
push
lret
mov
mov
push
es
ljmp
sub
sbb
dec
ds
mov
int3
imul
push
test
mov
push
ds
pop
mov
dec
adc
movsl
xchg
aam
sub
xor
fistl
push
or
shll
jp
mov
dec
into
cwtl
xor
adc
int
jl
pop
adc
bound
dec
in
lcall
dec
dec
adc
sub
je
popl
mov
pop
movsb
ret
cltd
jbe
or
jno
dec
mov
test
push
sub
xchg
out
popf
jmp
push
testl
test
scas
sub
call
push
adc
jmp
dec
pushf
cmp
ss
test
pusha
adc
flds
leave
pushf
jae
je
int
arpl
push
sarl
mov
scas
inc
inc
push
mov
pushl
xor
sub
test
mov
jae
fmulp
das
cmp
and
aad
inc
loop
cmp
icebp
jbe
scas
cmpsl
rcll
and
mov
sbb
cmpsl
out
repnz
xlat
imul
pop
xor
jo
push
cmpsl
nop
out
mov
jp
mov
lcall
std
lock
loope
aam
in
adc
or
sub
in
in
mov
dec
sbbb
fdivs
add
js
jno
jecxz
jo
popl
jbe
push
cmp
shll
test
call
jge
cmp
mov
movsb
movsb
mov
inc
out
push
cmp
mov
inc
mov
mov
pop
shr
fwait
cmp
pop
sbb
inc
sub
pushl
je
and
push
stos
jae
push
fcmovu
sub
pushf
repnz
cmp
lods
adc
sub
lahf
xchg
mov
cltd
scas
cld
push
nop
in
cmp
sbb
fiadds
pop
inc
movsl
loopne
mov
fisubl
rorl
push
or
push
mov
jmp
subl
cltd
xor
outsl
mov
int
xor
data16
aad
sti
cmc
cld
arpl
xchg
test
sbb
js
pusha
insl
test
mov
in
jne
cmpsl
adc
ret
insb
xor
jb
ret
cli
mov
sahf
in
iret
loop
jmp
leave
scas
inc
push
fcomps
aam
xor
shll
adcl
jmp
cmc
bound
push
rcrl
lea
iret
sahf
push
enter
loope
hlt
dec
mov
and
aas
adc
xor
push
test
adc
aas
cmp
jns
ljmp
mov
movsl
jle
add
cmp
and
add
in
mov
push
cmpsb
mov
je
inc
repnz
dec
hlt
data16
fldl
add
divl
stos
outsb
xchg
dec
adc
push
mov
cltd
add
mov
sub
xchg
jo
or
aas
add
loop
sbb
and
add
jno
sti
bound
out
movsb
jecxz
jbe
repnz
and
cmp
mov
stc
int
fisubrl
add
sub
push
call
push
incl
add
mov
repnz
push
lds
daa
mov
stos
xchg
fbld
jecxz
push
xchg
xor
testl
hlt
pop
lret
adc
mov
pop
sbb
stc
inc
arpl
or
cmpsb
mov
mov
xor
cmp
imul
arpl
jno
ja
xor
addr16
push
shll
cmpl
rcll
loopne
and
pop
in
xchg
clc
mov
add
aam
cmp
in
les
ds
push
jne
repnz
add
test
jmp
push
push
dec
xchg
jo
js
inc
push
insb
mov
jge
inc
rcr
mov
mov
mov
mov
ljmp
push
mov
mov
pop
outsb
rorb
push
lock
mov
int
push
sbb
jne
add
loopne
mov
sbb
cmp
int
fucomip
icebp
and
jl
test
stos
dec
inc
cltd
push
lretw
je
adc
neg
rcr
sub
js
icebp
dec
mov
cwtl
jae
sbb
pop
shll
dec
sahf
jbe
xchg
mov
in
add
mull
lods
jle
xlat
push
addl
or
rcrl
add
xchg
out
test
sti
mov
jl
les
lods
shlb
jbe
shll
int
lret
inc
sbbl
daa
and
dec
idivb
js
adc
out
push
push
pop
mov
inc
jmp
fwait
push
push
mov
iret
dec
aam
mov
pop
adc
inc
mulb
xlat
loope
pop
out
add
inc
ret
aas
mov
cmp
cmp
in
and
inc
sub
xchg
and
call
mov
rcrl
lds
jae
push
out
movsl
cmpsb
push
repz
mov
xchg
out
jno
lfs
repnz
test
lcall
nop
scas
adc
mov
pop
mov
sub
das
shrb
into
aad
xor
mov
and
xlat
inc
inc
stos
nop
xorl
push
fsubrp
dec
dec
js
lods
das
sbb
ret
xlat
fnstsw
mov
push
xor
dec
and
shrb
cwtl
leave
cld
adc
xor
pop
rolb
dec
jnp
movsb
stos
stos
int
push
pop
inc
cmp
jg
les
lcall
or
sub
je
addb
aas
hlt
mov
int3
sahf
clc
lahf
xchg
pop
jle
mov
loopne
flds
mov
rcrb
dec
mov
inc
int3
sbb
pop
inc
leave
add
jge
or
inc
adc
mov
fwait
adc
cli
insl
cmp
clc
jbe
ja
sub
mov
pop
dec
mov
int3
sbb
pop
push
or
and
out
pop
lret
and
xchg
add
mov
add
or
scas
enter
fmull
pop
cmc
add
sbb
dec
lret
in
cmp
idivb
cmp
jno
das
mov
xor
xorb
idiv
aad
pop
stc
pusha
and
mov
orl
loope
mov
out
xor
dec
int
fbld
es
je
mov
shlb
lea
cmpl
imul
out
sbb
cld
and
mov
popf
mov
cmc
inc
jl
fisttps
xlat
jb
mov
pop
xchg
scas
paddq
and
stc
sbb
pushf
sbb
or
lock
icebp
out
test
mov
and
rolb
cmc
adc
clc
jl
sbbb
stos
js
or
jge
es
xor
cmp
xor
inc
and
mov
int3
das
sub
adc
in
stos
leave
sbb
mov
js
pushl
or
and
fs
add
jmp
and
cmp
loopne
xlat
push
adc
push
xchg
pop
xor
dec
cld
mov
popl
stos
mov
dec
push
ja
pusha
xor
mov
inc
lds
loope
out
lods
pusha
pop
jecxz
or
popa
mov
or
outsl
sbb
push
lods
movsb
or
or
and
mov
or
dec
test
data16
decl
inc
lods
xchg
mov
ss
mov
movsb
out
jo
insl
mov
cwtl
int3
cmp
pop
mov
stc
addb
mov
xor
mov
or
xchg
or
add
mov
pop
stos
jae
jg
sti
mov
jae
mov
or
push
fdivrs
test
sbb
sbb
in
into
sbb
stos
mov
cltd
cmp
mov
pop
add
jp
and
adc
imul
mov
mov
adc
xor
sahf
and
out
das
imul
std
int3
xor
sub
sub
pop
jns
stos
in
call
outsb
jnp
insb
add
sbb
mov
push
cmpsl
rcr
push
xchg
xor
add
mov
popf
fs
xchg
lods
xor
push
inc
sarb
inc
insl
mov
push
pop
dec
mov
lods
mov
adc
repnz
and
loope
ss
scas
lcall
xchg
ds
ret
xor
out
adc
adc
push
and
aam
loop
cmpsl
pop
sbb
lea
add
call
insb
fdivrs
pop
sarl
mov
flds
push
cmp
jmp
notl
jle
in
mov
cmpsl
or
int3
ficompl
and
insb
sub
lods
das
adc
ljmp
dec
in
inc
out
mov
js
in
mov
arpl
lret
mov
stc
jb
mov
fs
shr
add
inc
add
mov
dec
xor
lea
sub
sarl
xor
mov
repz
sti
js
add
movsl
jge
incb
pop
pop
mov
jp,pt
dec
shl
mov
and
xchg
iret
mov
popa
mov
int3
or
jno
jmp
fmull
dec
lock
jmp
sbb
out
test
lret
mov
int
inc
ljmp
popw
scas
mov
push
mov
push
loop
in
jle
pop
outsb
aad
cmpsl
mov
outsb
mov
sub
xor
lret
int3
push
in
jecxz
sub
adc
mov
scas
test
and
mov
ljmp
mov
test
popa
mov
rclb
mov
sbb
adc
mov
xchg
xchg
rcll
test
aad
add
sbb
dec
popa
lods
test
adc
xor
roll
jge
lods
push
mulb
sub
rcll
pop
cli
jnp
cmpsl
push
mov
push
lods
and
mov
es
pop
fnstcw
loope
packsswb
in
pop
push
push
or
mov
cmp
js
add
lods
cmp
ret
adc
fsub
or
inc
out
xchg
push
je
ficomps
aam
dec
sub
into
pusha
jl
xchg
inc
adc
or
pop
out
and
in
jno
jl
aaa
aam
mov
xchg
fstpt
jo
iret
pop
pop
pop
and
lret
popf
adc
mov
or
dec
cmpsl
lahf
jae
loop
and
push
inc
and
lret
aam
pop
pop
cmp
pop
int
pop
dec
push
aas
jp
jo
test
push
lcall
call
leave
cmp
repnz
mov
xchg
mov
fcoml
outsb
inc
in
xchg
int
es
mov
jbe
cmpsl
cld
int
movsl
lea
cmovne
ja
jl
xlat
std
pop
fistpll
aad
psadbw
ficoms
dec
enter
scas
icebp
in
sub
dec
sub
jno
and
cmc
loope
push
daa
and
ss
add
mov
xchg
cmpsl
push
ret
dec
dec
pop
adc
cwtl
addl
fiaddl
and
cmp
rcr
xor
sbb
addb
addr16
outsb
ret
nop
int3
sbb
test
mov
lock
cltd
mov
adc
cli
cmp
push
mov
lock
hlt
inc
mov
dec
arpl
adc
add
mov
ret
or
loop
mov
aaa
or
push
mov
aas
flds
je
dec
xchg
or
and
cmp
push
mov
mov
cli
leave
subl
and
inc
es
pop
lret
sub
mov
je
jnp
xlat
sbb
lcall
into
outsb
int
fwait
add
push
adc
fstl
loop
mov
lods
mov
pop
sub
jo
dec
out
xor
sub
movlps
shrb
pop
shrl
imul
dec
and
pop
pop
sbb
sbb
ret
sub
push
jae
stos
incl
mov
clc
mov
mov
mov
or
sub
mov
adc
xor
ss
pusha
mov
or
int
adc
jmp
ret
mov
and
add
or
les
test
sbb
ljmp
sub
scas
test
jnp
ret
mov
cli
add
cmpsl
mov
into
mov
xchg
inc
push
stos
in
icebp
cmc
adc
adc
pop
inc
push
xor
sahf
stc
and
movsl
cs
mov
loope
jb
sbb
repz
cmpsl
cmp
repnz
roll
add
cwtl
ret
aad
int3
imul
cmp
movsb
or
pop
cld
and
fnstcw
pop
xchg
fbld
xor
push
pop
icebp
inc
loope
mov
mov
mov
or
xchg
adc
cwtl
dec
jne
dec
roll
mov
loopne
jno
sub
add
jl
adc
adc
orb
stos
out
hlt
sbb
in
xor
add
xor
xchg
lahf
push
dec
dec
shlb
les
in
dec
fs
or
inc
fsts
rclb
xchg
sub
popf
test
insl
pushl
bound
andl
out
and
lock
push
add
jge
out
mov
movsb
jb
mov
dec
sbb
mov
cmc
push
mov
sub
sbb
mov
add
popf
jne
sbb
sub
mov
les
push
inc
notb
call
adc
les
aam
xchg
loop
dec
xchg
call
loop
inc
dec
mov
xor
dec
jae
sarl
pop
push
lcall
inc
cmc
jl
out
push
inc
dec
es
add
and
icebp
mov
cmp
ficompl
in
out
mov
and
mov
mov
push
das
xchg
notl
push
gs
lods
mov
mov
inc
shll
enter
or
movsl
mov
fidivrl
lret
xchg
sarl
test
call
and
add
lock
addr16
std
dec
shrl
add
into
fnsave
mov
mov
mov
lods
adc
pop
shll
and
inc
jmp
pop
mov
mov
js
xorl
ficoml
cltd
addr16
adc
or
mov
sub
loope
test
pop
sbb
push
and
adcl
popf
fwait
mov
stos
orb
std
jbe
adc
loope
or
sub
mov
mov
push
ret
mov
xor
jge
cmp
push
sbb
mov
lahf
js
clc
jecxz
icebp
push
popa
in
mov
ror
sub
rclb
fldl
cmp
push
fdiv
into
push
sbb
jp
jecxz
xor
jmp
outsl
inc
divb
into
xchg
call
cld
and
xor
mov
stos
cmp
aad
fcomi
add
sbb
push
mov
sub
arpl
push
push
mov
enter
inc
lea
pop
sbb
cs
ficomps
cmp
cmpsl
fldenv
push
in
jnp
pop
imul
pop
push
ret
lods
add
push
inc
pusha
das
ljmp
out
push
stc
insb
pop
es
popf
and
inc
push
nop
mov
or
adc
xchg
movsb
sti
push
test
aad
pop
sub
xor
adc
mov
test
add
mov
xor
cmpsl
fcomps
bound
std
lret
icebp
cmp
jno
lret
scas
xor
movsb
cmpb
sub
ret
int
sbb
adc
mov
repz
jecxz
add
hlt
outsl
jbe
add
push
movsb
out
jp
dec
jmp
jbe
pusha
xchg
inc
js
aas
imul
or
xchg
mov
fistpl
xchg
andb
mov
jnp
shrl
lcall
add
mov
test
cmpsb
dec
mov
test
test
rcrl
fdiv
inc
stos
jns
jae
icebp
insl
decl
mov
add
movsb
dec
jae
cmpsl
or
fdivp
xchg
nop
int
cmp
mov
cmp
lret
pop
mov
les
aas
ret
push
mov
es
push
js
daa
loop
pop
fidivs
inc
push
pop
cmp
or
loop
jge
out
push
loop
scas
stos
adc
fildll
push
gs
insl
inc
sbb
daa
cmc
fisttps
mov
popf
mov
push
cwtl
in
jb
or
xchg
repnz
sub
int
call
lahf
dec
aam
push
mov
out
mov
jl
mov
pusha
fwait
ret
dec
sub
jno
lock
rolb
rclb
addb
aad
or
arpl
testb
inc
jo
inc
shl
jecxz
sbb
adc
sbbl
lds
int3
in
outsb
clc
loopne
std
or
pop
fisubrl
js
out
add
jle
jae
jmp
pop
repz
bound
xor
xchg
mov
sahf
jns
xor
in
dec
imulb
icebp
and
dec
dec
insl
and
jae
pushf
dec
int
stos
push
je
rol
dec
shlb
ret
hlt
idiv
sub
scas
lahf
cmp
sar
inc
dec
aam
fadds
xchg
xchg
idivb
sbb
add
pop
mov
dec
dec
xor
outsl
jecxz
dec
daa
loopne
sub
inc
loope
clc
fsubr
mov
push
dec
xchg
xchg
aaa
mov
clc
mov
and
xchg
pop
imul
lahf
pop
dec
inc
push
int3
jecxz
adc
jne
mov
out
xchg
and
mov
push
repnz
scas
fbstp
daa
adc
jne
sahf
pop
push
cltd
jo
pushf
cmpsb
aas
cmpsb
xchg
scas
push
xorb
dec
jne
and
sub
xor
jns
pop
add
mov
lcall
mov
sub
fistpll
stos
dec
subb
and
xchg
call
aad
lods
xchg
inc
lods
ds
mulb
lea
sbb
adc
mov
fists
xchg
jmp
xor
imul
cmp
aad
out
pop
aam
push
sarb
fisubrs
fwait
ss
pop
rcrb
out
inc
iret
icebp
and
dec
stos
fidivrs
sbb
sbb
stos
aad
sub
pop
add
in
xor
push
pushf
or
xchg
orl
jge
add
in
sbb
inc
jge
xor
sbb
in
es
inc
adc
push
frstor
pop
fildl
and
mov
cmpl
fwait
prefetcht0
mov
rcr
sub
add
es
xchg
data16
add
mov
movsb
loope
scas
and
lret
mov
js
adc
xchg
add
sbb
pop
mov
add
pop
push
cmp
lea
inc
ljmp
mov
xchg
push
xchg
cmp
sbb
sbb
cmp
mov
shlb
shrb
out
adc
xchg
dec
mov
jnp
xchg
cmp
add
testb
jnp
push
mov
mov
dec
cld
loop
lcall
es
pop
cwtl
rep
sbb
pop
jns
push
mov
inc
jo
ljmp
fcmovnbe
xor
rcl
push
scas
insl
sub
inc
lock
out
push
add
ljmp
ret
or
lcall
xor
in
sahf
dec
shlb
add
or
vmptrst
in
dec
ret
nop
out
pop
or
sahf
enter
xchg
movsl
es
mov
mov
adc
push
out
push
jns
pop
loopne
js
xchg
xchg
enter
lods
adc
mov
pop
pop
xor
