jmp
mov
cmp
jb
push
push
lea
xor
test
jbe
push
push
pop
sub
mov
mov
mov
mov
ror
lea
imul
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
push
mov
push
push
push
push
push
push
call
mov
mov
rol
mov
mov
movl
push
call
decl
jne
test
je
mov
jmp
push
call
mov
mov
mov
add
mov
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
andl
pushl
xor
push
push
push
call
push
call
xor
push
push
push
pushl
call
incl
cmpl
jb
push
call
mov
push
push
call
mov
call
add
cmpl
mov
je
cmpl
jne
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
call
lea
push
mov
push
pop
add
xor
div
push
mov
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
push
lea
mov
mov
mov
mov
push
mov
xor
push
push
and
mov
mov
call
mov
lea
push
pushl
lea
push
movb
movb
push
pushl
push
push
call
push
push
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
call
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
xor
inc
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
push
mov
sub
push
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
jmp
mov
mov
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
add
xchg
push
pop
insb
into
mov
cs
mov
mov
gs
in
mov
pop
lds
in
out
mov
dec
outsb
or
je
aas
testl
xchg
mov
scas
test
test
sti
data16
test
stos
cmp
mov
pop
insb
into
mov
cs
hlt
mov
bound
dec
in
mov
pop
lds
in
out
mov
rclb
xor
shlb
jmp
pop
rcl
and
adc
mov
data16
xchg
push
mov
fsubrl
xchg
sti
movsb
add
dec
outsl
std
push
aam
jno
add
jmp
mov
call
xor
push
cld
lahf
inc
mov
mov
pop
or
adc
pop
sub
fsubl
xchg
pushf
jnp
iret
data16
add
jae
shrb
pop
in
sbb
test
push
jp
jae
mov
or
and
mov
push
mov
lret
shlb
mov
adc
fisubrl
dec
mov
subb
xchg
aas
shll
stos
test
call
jecxz
mov
dec
das
jle
adc
das
fsts
fstpt
xchg
aam
ss
data16
out
jmp
cmp
cmpl
add
add
add
inc
xchg
lea
or
and
sti
ja
shll
addl
lock
std
pop
mov
lahf
je
pop
sbb
push
fidivrl
cmp
repnz
push
mov
mov
test
scas
xchg
ja
jno
mov
int3
repz
cmc
mov
adc
subb
push
xchg
movsl
sbb
lret
sbb
ds
push
add
sti
lea
mov
cmpsl
mov
or
popf
lea
popf
lods
je
stos
add
xchg
cmc
add
add
sub
or
cmp
xor
and
inc
in
cs
inc
out
out
push
pop
rolb
pushf
or
fbstp
mov
rcr
leave
insl
xorl
movsb
mov
pop
mov
fcmove
inc
pop
push
jbe
push
idivl
popa
ffreep
shl
lcall
std
scas
hlt
mov
std
jbe
in
dec
out
in
jecxz
or
cmp
xchg
ret
pop
xorl
push
adc
fdivrs
imul
and
mov
int
mov
loope
popa
ret
and
mov
stc
pop
lea
aas
dec
cmc
mov
fdivl
cli
mov
aam
pop
adc
jae
loop
cmp
and
in
icebp
jae
add
ret
mov
and
in
mov
jecxz
enter
dec
divps
popa
scas
inc
insl
inc
mov
add
mov
test
mov
and
push
adc
add
mov
pop
sbb
sti
sub
repz
fbstp
and
test
into
icebp
push
xor
mov
xchg
jg
jae
fadd
scas
aad
lea
mov
aas
pop
xchg
sbb
ljmp
sub
add
add
add
add
jo
xchg
test
mov
sbb
mov
jecxz
sub
sbb
imul
or
mov
push
push
jl
mov
xchg
cmc
add
pop
pop
addb
call
adc
mov
push
aas
sbb
and
mov
test
adc
incl
dec
sahf
pop
sbb
mov
inc
fnstenv
fldcw
jmp
add
add
stos
jmp
jno
out
gs
jae
add
inc
or
push
and
imul
inc
adcb
ja
pop
fnstenv
adc
int
sbb
subl
cmp
enter
jo
mov
and
push
pop
lds
push
fidivs
sub
nop
or
xchg
jp
call
add
add
add
add
shll
push
and
lea
mulb
and
dec
testb
mov
xor
lcall
cmp
hlt
test
scas
test
aaa
inc
cltd
push
fdivp
push
mov
sahf
outsb
sbb
mov
mov
mov
and
jbe
outsl
mov
rclb
xor
xchg
xchg
je
fbld
cmpsl
or
add
mov
jg
jnp
lods
imul
shll
popa
add
mov
out
jg
hlt
pminub
jmp
mov
sub
sub
scas
mov
dec
push
add
scas
pop
adc
fwait
sbb
mov
xchg
insl
push
sub
jbe
cmp
jb
lds
push
es
xor
push
and
pop
hlt
in
aaa
loop
dec
loope
sub
leave
test
mov
add
pop
shr
repz
dec
sub
dec
lods
jns
xchg
xor
jmp
jns
clc
and
repnz
insl
jmp
mov
fcmove
sub
lret
add
pop
test
jle
and
inc
jno
in
add
sbb
xchg
mov
pop
mov
xchg
ja
sarl
es
push
xor
xor
mov
test
into
xor
push
add
add
stos
mov
sbb
xchg
cmc
aas
xchg
repz
add
dec
push
hlt
adc
inc
and
popf
cmpsl
or
into
int
xchg
testb
xchg
mov
pop
mov
pop
xlat
and
xchg
shl
push
jmp
insb
adc
mov
xchg
test
psrlq
test
popf
and
cwtl
insl
stc
das
and
push
cld
jno
lods
roll
sbb
imul
hlt
mov
cltd
mov
loop
nopl
cli
in
push
mov
adc
inc
jno
mov
jp
inc
arpl
inc
sbb
mov
cmp
leave
jb
imul
lock
out
mov
hlt
xor
or
xchg
outsb
cmp
mov
ret
out
int
bound
idivb
sub
push
loopne
sub
pop
xor
inc
lret
mov
aas
cmp
outsb
xor
in
inc
in
cmp
dec
sub
mov
xorl
adc
int3
sbb
movb
add
sbb
sbb
rcrb
js
xor
ds
mov
jb
imul
ljmp
cli
mov
sbb
shlb
ds
inc
cmpsl
sahf
mov
insl
mov
idivb
mov
lahf
aaa
cmp
stos
loope
out
jbe
dec
sti
sbb
xchg
ret
movsb
mov
mov
push
jo
jecxz
das
movsb
xor
add
xchg
cmp
add
add
add
loop
xchg
daa
jae
ljmp
mov
fistl
mov
outsb
and
add
daa
lret
dec
push
fs
xchg
xchg
dec
mov
cmp
jmp
adc
ljmp
sbb
jbe
out
stc
sub
cmp
jl
pop
jnp
pusha
add
and
mov
cmp
insl
sbb
ds
jb
lock
fildll
jbe
or
add
add
sub
in
or
test
test
inc
addr16
dec
popf
loop
and
pop
mov
inc
add
les
dec
loop
pushf
add
iret
cmpsb
mov
mov
and
pop
push
outsb
mov
lea
pop
shrl
daa
xchg
jnp
aaa
xchg
or
or
aam
arpl
mov
jno
nop
xchg
push
pop
and
cmp
movsb
loope
and
push
and
sbb
sub
fldt
add
add
cmp
fxch
xchg
add
pop
mov
fistpl
cmp
cmpsl
push
jnp
arpl
jecxz
mov
pop
sbb
mull
sbb
mov
les
pop
push
in
cltd
outsb
inc
cli
pusha
dec
rolb
pop
ljmp
addl
mov
sub
aaa
xor
cmpl
sti
addb
sbb
xor
xor
hlt
xchg
cmp
push
test
das
mov
lcall
add
add
add
add
sub
cli
inc
pushf
and
push
jp
adc
repnz
adcl
push
jne
xchg
scas
pop
add
jmp
and
js
adc
pop
add
xor
and
mov
stc
mov
or
outsb
ja
sub
cmp
lret
xlat
jle
shrb
jg
popf
loope
int3
ljmp
lock
pop
add
test
shl
imul
mov
xor
stc
scas
jae
mov
xchg
mov
popf
sahf
call
mov
in
adc
mov
bnd
add
pop
inc
lcall
pop
mov
mov
sbb
xchg
mov
dec
mov
mov
insb
jbe
mov
add
add
add
lods
shl
cmp
pushf
pop
test
jle
xchg
ljmp
add
push
subb
dec
add
mov
pop
mov
sbb
jae
xchg
pop
pop
popf
scas
push
stc
lahf
faddp
mov
lret
cltd
or
lahf
xchg
mov
inc
push
divl
mov
inc
repnz
idiv
enter
nop
out
mov
sbb
and
ljmp
pop
stc
enter
or
mov
mov
add
mov
add
ja
out
or
push
repnz
daa
test
das
mov
scas
dec
sbb
adc
cmpsb
add
add
cmp
sub
andl
ljmp
xchg
mov
mov
push
or
pop
test
jbe
dec
cld
push
aam
sar
jecxz
and
addb
sbb
add
add
add
add
cld
and
int
movb
jmp
shlb
inc
jbe
add
and
call
cmp
push
testb
je
lahf
cltd
adc
and
and
sbb
or
cltd
mov
xor
cmp
push
and
push
inc
fnstcw
cmc
or
out
test
gs
rcl
cld
js
fs
loopne
outsb
add
cmp
jae
pop
popf
or
jmp
sbbl
mov
loope
ja
pop
push
iret
cmp
cmpsl
aas
mov
clc
divl
nop
loop
leave
hlt
lds
enter
push
mov
sbb
mov
mov
les
mov
in
and
mov
adc
cs
jl
out
cmpsl
dec
inc
jg,pt
mov
mov
inc
das
pop
sub
loopne
cld
lret
ret
xor
push
cmc
jg
jae
lcall
pop
and
or
pop
in
mov
xor
cltd
xor
mov
shll
dec
jp
dec
xor
sub
sub
jmp
in
roll
push
xor
sub
enter
cs
jge
mov
ret
pop
mov
push
jbe
imul
sbb
inc
fimull
inc
sbb
stos
sbb
test
ret
add
pop
add
add
lahf
movsl
neg
cltd
mov
xor
fildll
das
or
ret
fadds
iret
adc
adc
or
out
dec
mov
test
ret
lret
cmp
inc
popa
movsb
or
and
push
sbb
xchg
or
sbb
shl
ror
xor
fnstcw
rclb
enter
xor
mov
pop
lahf
mov
mov
mov
pusha
jge
and
frstor
add
push
mov
jb
loop
push
gs
leave
cmp
dec
out
sti
popl
ret
nop
rorb
jae
daa
into
je
mov
pop
loopne
mov
adc
divb
fisubs
adc
dec
mov
dec
in
mov
cmpsl
mov
lock
test
sahf
push
push
lds
mov
repz
push
ja
lcall
xlat
bound
repz
cmp
js
xor
jecxz
push
sarb
add
cmp
mov
cwtl
xchg
sub
rorl
test
fdivrl
shr
xor
pop
dec
ret
sub
or
push
mov
jg
aad
inc
push
push
pop
jnp
out
data16
cmp
inc
dec
dec
xor
out
js
cli
xor
lock
pop
mov
push
sbb
xorl
sub
fwait
inc
incb
add
push
adc
inc
jno
push
sbb
jae
insl
sub
add
pop
jae
inc
jecxz
insl
push
pop
xchg
sub
and
sbb
xor
xor
es
xchg
repnz
xor
pusha
je
dec
jl
sbb
repnz
int
daa
mov
fwait
dec
xor
adc
adc
mov
add
sub
fldpi
xchg
fistpl
dec
cltd
add
repnz
in
mov
cmp
out
fbstp
pop
mov
inc
sti
loope
xor
jnp
cmp
mov
add
cmpsb
aas
or
dec
ja
shll
or
xchg
mov
push
repz
movsb
rorb
fucomp
je
loop
jp
aad
pop
rcrb
or
or
test
jne
mov
testb
push
pop
pop
testl
push
add
addb
sbb
sbb
inc
mov
lret
and
jecxz
sub
xchg
mov
inc
mov
divl
in
stc
das
mov
adc
cmp
add
inc
and
and
jnp
ljmp
enter
inc
push
daa
popa
add
aam
sub
jno
mov
cmp
pop
jb
add
scas
out
in
add
lods
bound
adc
or
or
pusha
sub
pop
fldl2e
or
dec
adc
mov
lcall
ljmp
or
or
jae
ds
scas
lahf
jecxz
mov
enter
lock
or
es
cmpsb
test
cmp
out
rcll
bswap
sbbb
mov
stos
xchg
add
add
pop
push
sub
popa
mov
lcall
das
pushf
std
cmp
add
add
repz
ljmp
jl
inc
mov
push
fdivrl
push
pop
add
lcall
fidivs
arpl
cmpsl
cmp
mov
mov
sti
mov
ds
int
xor
pop
js
push
jb
int3
lods
and
push
int3
mov
shll
xchg
xchg
dec
pop
dec
push
pop
xor
icebp
add
lea
jbe
mov
jge
add
sub
adc
loope
jnp
bnd
out
outsl
mov
loope
mov
fimuls
faddl
in
cmc
repnz
data16
add
sbb
in
ja
mov
mov
xchg
add
xchg
sub
in
sahf
add
stos
arpl
add
add
add
add
sti
xor
dec
dec
sbb
and
pop
stos
sub
adc
sbb
insl
jp
aas
adc
hlt
xchg
ret
repz
dec
pusha
mov
mov
dec
fwait
js,pt
icebp
lret
mov
push
push
and
shl
mov
push
pop
repnz
scas
fwait
int3
sub
sub
lcall
hlt
inc
ljmp
ja
lods
je
sbbb
outsl
xchg
in
jns
mov
add
add
pop
test
repnz
cmp
pop
sarl
inc
and
jle
int
cld
or
push
mov
jnp
pop
pushf
add
push
cs
sbb
shl
out
test
jmp
stc
or
push
std
aam
ljmp
mov
sarb
int
cli
outsl
inc
jecxz
xor
cmp
nop
ret
mov
inc
pushf
add
dec
test
add
lret
xchg
jge
mov
jnp
mov
cltd
push
add
movsb
repz
das
call
ja
xchg
lret
sbb
fdivrl
hlt
leave
and
push
mov
or
inc
sub
push
sbb
loopne
and
fs
mov
xor
imulb
and
gs
nop
dec
cmpb
jo
jle
add
pop
dec
xchg
cmpsb
ficompl
inc
push
movsl
xchg
test
insb
ljmp
sub
test
or
das
loop
xor
repnz
mov
adc
dec
mov
and
int3
repz
and
push
imulb
pop
push
ds
dec
mov
mov
mov
push
xchg
xor
loop
aaa
jns
test
dec
push
jo
in
mov
into
sub
lcall
sbb
push
push
xchg
cmp
jge
lods
and
sbb
push
and
mov
ret
add
clc
inc
loopne
or
repnz
lds
sbb
and
sub
out
dec
cmpsb
pop
dec
add
test
cwtl
int3
and
dec
jge
out
fwait
shll
test
jecxz
mov
jmp
inc
out
sbb
int
mov
mov
add
add
and
mov
lcall
in
and
mov
sub
fadds
fiaddl
and
pop
in
je
int
fdivrp
scas
jno
sti
inc
jp
insb
fcomip
sti
pushf
fcoml
movsb
das
add
or
sub
shlb
push
jns
repz
mov
rcrl
xchg
mov
add
pop
vpmaxub
push
movsl
clc
jnp
pop
repnz
add
add
pop
out
mov
aam
and
lods
jecxz
pop
cmpb
adc
jge
pop
cld
mov
cmp
xor
stos
mov
inc
pop
jge
xorb
movsb
sbb
das
mov
mov
xor
jns
xor
and
inc
cmpsl
aas
or
sti
pop
addr16
in
fisubrs
test
push
pusha
pop
add
xor
je
test
mov
and
in
sti
and
ret
jns
sbb
sar
mov
add
aaa
test
nop
ret
dec
fstps
adc
dec
adc
cmpb
js
sbb
inc
adc
in
shufps
jge
sbb
shr
hlt
dec
sub
adc
divb
repnz
push
stos
stos
fs
inc
inc
test
or
sbb
or
cmp
sbb
xlat
add
add
cmp
pop
outsb
lods
dec
addr16
mov
outsb
fstl
int3
dec
xor
adc
movsl
stos
mov
jb
clc
cltd
inc
or
leave
pop
mov
add
lret
push
test
fs
jns
in
test
sbb
mov
xor
fwait
mov
mov
push
dec
pop
sub
push
je
icebp
out
mov
mov
or
mov
inc
push
xchg
scas
add
jns
hlt
sbb
inc
add
add
daa
mov
dec
shlb
ret
cmp
and
scas
mov
xor
mov
lret
fistpll
aas
add
mov
or
inc
push
sbb
cmp
outsl
mov
push
adc
ds
dec
outsl
shrb
mov
add
sbb
or
orb
inc
das
pop
xchg
mov
lods
iret
or
jp
add
in
mov
mov
sbb
mov
or
fsubrl
mov
mov
push
aaa
and
push
popf
dec
jns
add
push
cmp
dec
xchg
or
push
scas
fs
repz
adc
mov
cltd
dec
test
iret
fidivrs
aas
mov
nop
push
hlt
pop
cs
outsl
and
inc
cmpsl
xor
and
push
push
sbb
dec
cmp
xlat
fcomps
imul
add
add
mov
inc
clc
insb
xchg
mov
sbb
adc
ja
ret
dec
cmp
xor
shlb
movsl
xchg
jecxz
push
int
xchg
adc
idiv
je
or
insl
insl
xchg
lock
je
and
js
popa
je
cmc
popa
test
xchg
inc
mov
pop
leave
inc
popa
pop
xor
adc
cli
pusha
adc
cli
stos
jecxz
loopne
into
or
sbb
shr
int3
xchg
push
xchg
and
lods
or
clc
push
bound
pop
pop
mov
pop
das
dec
inc
ljmp
dec
xchg
cmp
pop
mov
loope
xor
xor
xchg
mov
lods
fdivl
pop
xchg
xor
push
jp
sbb
cs
jge
int
arpl
xor
xor
add
dec
or
inc
xor
inc
in
or
cmpl
add
add
add
out
out
mov
push
sti
push
jno
and
incl
and
xchg
cwtl
jg
mov
and
adc
push
in
in
insb
popa
popf
test
inc
jle
pop
jge
add
xlat
clc
popf
ds
lcall
aam
lds
pop
loopne
hlt
sbb
add
xlat
ja
mov
jno
iret
cmp
inc
addl
aas
jle
pop
cltd
and
add
fs
aam
std
ss
ret
xchg
iret
fcomps
repnz
xchg
cmp
aaa
loopne
xlat
movsl
inc
flds
bound
dec
insb
push
mov
inc
aaa
data16
mov
xchg
lahf
jmp
dec
jmp
stos
lret
aad
call
mov
and
andb
es
add
aas
icebp
inc
mov
pop
sbb
test
xchg
sahf
mov
incl
add
jg
test
mov
pop
add
fidivrl
in
inc
dec
or
pushf
pop
mov
in
xor
cmp
mov
xchg
sub
mov
loope,pt
cmp
dec
push
scas
aaa
aam
sbb
rcr
adc
cld
bound
scas
jl
stc
leave
call
ljmp
mov
and
out
inc
leave
pop
cmp
ljmp
pop
test
add
add
cmp
and
inc
and
cwtl
or
addl
sbb
adc
insb
jmp
push
jo
jmp
shlb
repnz
jg
pop
mov
mov
and
test
insb
arpl
xchg
cwtl
imulb
aas
jns
sbb
jo
xlat
pop
inc
test
cmp
cs
cmpsb
cmp
mov
push
push
dec
scas
mov
loopne
and
aad
xchg
dec
lods
mov
test
daa
sub
push
inc
addr16
test
cmp
mov
mov
xchg
int
rorl
mov
aad
pop
ss
xchg
divl
push
js
imul
or
add
repnz
stos
fmull
push
out
mov
cmp
stos
inc
pop
push
lret
test
dec
xor
or
lods
sub
push
mov
mov
add
lods
cld
or
xor
loope
mov
jae
push
push
push
fwait
les
pop
jp
out
and
repnz
fldl
add
add
cltd
and
mov
fidivl
nop
mov
stos
jmp
mov
loop
popa
cmp
faddl
jns
out
lcall
insb
jg
mov
inc
shll
adcl
jbe
inc
dec
inc
fs
ja
rcll
ret
loopne
adc
jecxz
test
stos
in
fs
jno
xorl
test
xor
imul
push
pop
cltd
push
stos
mov
into
and
scas
inc
jno
cli
inc
and
push
adc
pop
rcrb
mov
cmc
mov
stos
stc
or
sbb
es
push
sarl
pop
xor
jns
mov
popf
test
xor
push
int3
inc
out
mov
lds
fstps
repnz
push
mov
xlat
sti
mov
js
hlt
repnz
stc
add
and
mov
inc
xchg
xchg
add
add
inc
mov
fisttps
add
xor
mov
cmpsl
sbb
aam
lret
test
mov
adc
negb
nop
rclb
pop
test
adc
mov
xchg
sbb
ds
nop
adcb
mul
fs
je
sub
jbe
push
mov
fldt
xor
sbbb
shll
rcl
daa
icebp
les
in
cmp
sbb
fcom
push
mov
mov
cmc
js
test
lret
negb
mov
inc
push
lret
inc
jge
jge
cltd
mov
daa
ret
xchg
mov
mov
mov
and
cmp
pop
js
adc
xchg
insb
add
repz
sub
lahf
jns
mov
insb
shll
outsb
cmpsl
pop
push
lret
or
add
add
push
xor
push
std
cmpl
aas
das
test
push
ss
lcall
or
fucomi
fadds
rolb
in
lcall
test
mov
sbb
mov
mov
xchg
inc
pop
out
cld
mov
push
dec
mov
imul
mov
into
jl
adc
fmulp
enter
and
arpl
jb
mov
xor
rclb
insl
je
inc
aas
mov
rclb
push
adc
jo
in
and
pushf
js
xchg
pop
rcll
or
icebp
repz
push
or
mov
push
data16
cli
fst
arpl
add
clc
insb
mov
cwtl
sub
outsb
clc
into
add
pop
jno
and
sbb
mov
mov
cld
cmc
in
test
stc
xor
mov
ja
paddsw
add
push
mov
sbb
push
mov
int
jae
jl
mov
pop
and
push
ljmp
daa
loope
and
mov
aas
mov
mov
push
adc
fildl
mov
idiv
mov
jae
mov
mov
jle
lcall
xor
fcmovne
popa
and
sub
stos
addb
inc
ja
mov
ficompl
test
lods
pop
xor
add
add
mov
dec
xchg
lock
mov
dec
sti
add
sub
ss
shll
jae
lds
iret
mov
dec
mov
mov
cmpsb
jns
or
outsb
sbbl
test
and
sbb
add
loopne
popf
loopne
scas
cmpsl
sbb
sahf
push
daa
cmp
loopne
mov
lods
mov
fsubrl
push
ljmp
dec
jne
loope
add
add
test
loop
jns
in
mov
pop
xchg
xor
vminsd
xchg
cs
fcmovu
pop
xlat
mov
pusha
cmp
add
xor
jae
xorl
mov
pop
ret
fisubs
mov
xlat
imul
xor
lods
sar
lods
hlt
jl
movsb
cmp
pop
push
fwait
pop
xchg
insl
add
mov
pop
cltd
mov
mov
mov
rcrb
dec
mov
jecxz
aam
iret
push
inc
pop
and
shll
and
les
and
mov
push
push
sahf
outsl
movsl
test
mov
movsl
sub
cld
in
clc
in
add
rcrb
cs
bnd
push
ja
xchg
ror
lret
sbb
adc
test
mov
jecxz
add
add
test
nop
mulb
pcmpeqw
xchg
mov
mov
cmp
ss
jp
sub
imul
cmp
ret
mov
loope
in
lcall
jp
ret
aam
xor
std
adc
mov
movsl
xor
insl
jno
or
mov
ds
imul
test
es
and
xor
and
xchg
shll
hlt
scas
into
push
fldln2
shl
movq
sbb
add
lcall
test
add
xchg
fldenv
leave
pop
inc
fisubl
loopne
scas
scas
push
sbb
cmp
arpl
adc
lods
xchg
or
pushl
aam
jne
sub
test
enter
push
pusha
dec
pop
and
xor
jmp
sbb
sub
mov
ret
adc
bound
inc
cmp
xor
and
xor
and
mov
testl
mull
jle
xchg
jbe
je
movsl
cmc
lods
xor
sbb
pop
mov
jmp
fwait
or
xchg
fistpll
dec
mov
loope
mov
daa
mov
aaa
mov
fsubrl
mov
cmp
inc
or
in
cmp
dec
in
aam
cwtl
cli
and
in
lods
pop
add
xchg
xchg
outsb
mov
sub
mov
popf
inc
xchg
adc
pop
std
insb
push
cmp
add
gs
leave
jmp
dec
lea
in
cmp
xlat
adc
or
mov
cmp
and
push
inc
mov
es
jge
outsl
loopne
or
xor
movsb
repz
mov
es
inc
sub
negb
push
shlb
jle
jne
mov
popf
pop
cmp
scas
movsl
dec
xchg
aaa
and
orl
adc
sbb
cmp
xlat
lcall
cmp
loope
jns
xchg
xlat
sub
adc
and
pop
pop
mov
cmp
xchg
inc
sbb
push
jle
movsl
inc
lock
inc
push
xchg
stos
bound
pushf
adc
sub
xchg
pcmpeqd
jo
xchg
gs
jmp
and
jnp
test
push
xor
and
rorb
popf
xchg
adc
es
sahf
and
shlb
rcll
add
add
je
fwait
outsb
ljmp
enter
cmc
pop
daa
adc
push
lahf
sbbl
sbbb
js
cmpsb
and
aaa
push
sarl
data16
fdivrs
loopne
xor
pop
add
enter
jmp
cmp
xchg
cmpsl
out
dec
aam
mov
aas
jae
cli
push
and
outsl
mov
aas
repz
mov
or
add
fdivl
jne
mov
rolb
mov
add
add
adc
int
and
lret
insl
jne
lret
adc
and
push
jp
mov
bound
and
jecxz
popf
pop
pop
mov
inc
call
loop
lock
xchg
mov
fwait
mov
mov
int3
mov
fs
movsl
add
addr16
add
ss
cmp
push
cmp
jb
int3
jo
xchg
xchg
and
fs
jb
test
aas
lcall
das
and
add
arpl
or
ret
sbb
mov
mov
or
xchg
rorb
sahf
add
cli
test
adc
test
add
shrl
das
sub
ds
pop
fs
or
mov
roll
imul
insl
pop
loop
mov
in
lret
int
jnp
sbbb
les
lds
fcompl
nop
cmpl
iret
cmp
mov
jb
xor
cmp
fimuls
add
fsubr
push
scas
push
leave
mov
mov
cmc
or
inc
jae
repz
push
enter
mov
pop
sbb
mov
nop
adc
lods
clc
xchg
fstpl
jne
fnstsw
rcrb
xor
mov
add
in
pop
and
data16
rcrb
mov
jne
inc
mov
loop
mov
dec
adc
lret
icebp
push
push
loopne
aas
adc
xchg
xor
mov
jns
ret
dec
pop
sub
cmpsb
shl
fcompl
popa
mov
sbb
rcll
pop
add
scas
mov
push
outsl
and
cmp
and
movsl
jge
aam
push
add
mov
pop
mov
jae
inc
subb
in
out
add
stos
push
jle
out
nop
mov
push
int
push
add
jl
fldpi
add
xchg
jmp
push
push
fidivs
in
test
cmp
push
and
mov
xchg
mov
lcall
gs
out
insl
xchg
pushf
imul
and
shll
outsl
and
insl
lret
mov
iret
mov
mov
push
inc
pop
test
mov
mov
cltd
or
mov
cmc
clc
in
add
inc
mov
fwait
cmp
pusha
add
mov
arpl
or
rclb
cmpsl
inc
and
subl
out
jbe
mov
adcl
xor
roll
mov
mov
sbb
jg
sahf
cmp
xchg
cmp
ret
mov
stc
ds
ret
or
nop
insl
pop
addr16
pushf
push
xchg
iret
loopne
sbb
sahf
xor
add
and
add
mov
mov
in
push
and
outsl
mov
inc
repz
jg
movsb
xchg
in
aad
pop
xorb
sub
ret
mov
lods
movl
mov
jae
sahf
loop
jae
test
adc
cmp
pop
out
addr16
dec
ret
add
ss
in
in
in
push
push
xchg
xchg
sub
aam
enter
add
add
add
add
xchg
sub
push
movsl
jle
cmp
nop
xchg
aas
test
ret
jecxz
out
mov
adc
cmpl
or
pop
sub
xor
popa
rcrl
add
push
or
adc
add
jno
stos
and
arpl
adc
jge
cwtl
add
cltd
push
sbb
xchg
mov
outsl
xor
out
bound
lcall
add
xor
das
xchg
pop
mov
cmpsb
sbb
lret
sbb
loopne
mov
int
cli
mov
mov
pop
test
fnstsw
jg
aam
push
fs
cmp
add
push
cmp
inc
xchg
sbb
dec
imul
mov
pop
sbb
dec
loopne
pop
into
sub
xchg
or
cmc
adc
inc
sub
sub
ja
mov
push
out
mov
gs
jecxz
popl
add
add
add
ret
push
add
jno
test
xchg
leave
inc
push
popa
xlat
or
pop
mov
add
mov
jmp
cwtl
push
sbb
cmp
or
pop
stc
scas
jg
xor
inc
jmp
cmp
mov
les
add
hlt
data16
stc
mov
xchg
jmp
push
loop
add
add
or
cltd
fwait
sbb
jo
jo
adc
into
outsl
pop
enter
dec
cmpl
out
cmp
mov
lahf
sbb
jmp
mov
xor
lea
mov
or
loopne
shlb
fldcw
xchg
sbb
lret
rcr
cmovp
sub
mov
cmp
aas
pushf
mov
jae
sub
pop
in
jmp
lea
pop
sub
add
dec
push
push
xchg
cmp
adc
js
js
jmp
inc
fdivr
cmp
pushf
add
call
shr
and
mov
aaa
xchg
ljmp
cmp
cli
sbb
xchg
xchg
cmp
dec
adc
cmpsb
rcl
cmp
popa
jg
add
andl
xor
mov
cmp
xor
rcrb
mov
outsl
jp
pusha
or
add
add
lods
mov
and
xor
aam
dec
idivl
adc
loope
inc
pop
push
clc
push
add
adc
js
insl
adcl
jp
mov
dec
test
adc
sbb
xchg
jbe
xchg
data16
dec
scas
ret
jmp
sub
das
mov
fucompp
add
inc
vpaddsb
xor
out
es
push
and
inc
mov
inc
adc
jbe
sti
sub
int3
into
cmp
orl
mov
or
aad
mov
shlb
cld
sub
cmpsl
repz
push
sbb
sbb
stos
and
out
out
