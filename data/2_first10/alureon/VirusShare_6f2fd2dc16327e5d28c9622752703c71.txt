lret
jl
orb
daa
push
inc
fbld
pop
xchg
leave
scas
stos
or
out
add
rcl
mov
fdivs
test
pop
leave
xor
and
std
filds
dec
push
dec
test
aaa
enter
loop
adc
mov
cmp
cmp
sahf
fwait
repnz
dec
ds
jge
mov
rcrl
push
out
pop
push
testl
mov
ss
in
push
leave
fisubs
or
add
cmp
stos
dec
cmp
fimuls
sub
test
cmp
pop
adc
lods
push
xchg
jle
pusha
inc
inc
pop
jns
nop
mov
clc
add
and
hlt
test
mov
enter
lret
call
aam
aam
decl
inc
mov
enter
insb
xor
xchg
mov
inc
pop
xor
xchg
cmpsb
add
jge
fistps
cmpsb
dec
mov
call
fimuls
push
sub
aam
mov
push
and
into
or
gs
or
scas
es
lcall
mov
pusha
in
cmp
xchg
leave
imul
inc
xchg
jbe
lret
dec
inc
insl
mov
clc
add
in
mov
xor
ret
call
pop
ljmp
inc
in
add
xor
push
jo
in
outsb
jge
lret
dec
scas
shl
or
mov
cmp
or
cli
jbe
mov
test
arpl
enter
add
stc
ret
popa
insb
std
jnp
loopne
pop
adc
mov
sub
cmp
mov
adc
scas
popf
mov
pop
daa
jno
fisttps
out
push
adcb
mov
inc
out
nop
shl
push
ret
call
testl
ja
xchg
stos
inc
iret
ja
outsl
mov
aam
sti
mov
lea
sbb
or
pushf
inc
fmul
jmp
out
lret
push
dec
adc
jge
fiaddl
subl
pop
dec
push
mov
sub
sbb
mov
mov
push
push
cmp
jecxz
dec
dec
dec
icebp
or
rcr
inc
es
push
push
jle
mov
hlt
notl
test
add
fwait
mov
jns
mov
sbb
fstps
inc
pop
pop
mov
ret
pop
jl
fstl
jecxz
sub
das
cmc
sbb
xchg
loop
and
xor
push
add
bound
xchg
test
lret
lods
xor
add
jne
shlb
scas
jae
icebp
stc
fwait
hlt
inc
xlat
negl
mov
mov
icebp
dec
mov
into
testl
xchg
pop
dec
mov
cmp
mov
arpl
mov
pusha
shl
pop
jno
sub
mov
jbe
sbb
lret
jbe
cmp
repnz
movsb
or
test
test
fdivrl
es
push
mov
mov
mov
sbb
cmp
dec
jp
out
je
data16
mov
jb
mov
rolb
imul
fistps
add
mov
pop
sbb
cmp
call
jecxz
pop
jle
or
stos
mov
push
push
es
scas
sbb
adc
mov
lahf
mov
rcll
adcl
cmp
dec
sahf
bound
ja
aaa
xchg
xlat
loopne
push
in
mov
pusha
sbb
ret
arpl
and
pop
jge
dec
mov
add
sbb
mov
mov
out
rolb
pusha
sub
cmp
jg
dec
inc
and
inc
lcall
push
xchg
dec
push
pop
cld
mov
imul
lcall
and
jb
decb
arpl
test
jmp
and
pop
leave
push
push
sub
repz
mov
mov
jno
add
pop
fidivrs
rol
data16
add
fistpl
mov
cmp
dec
outsl
repnz
xor
fstpl
push
fisubs
or
xchg
xchg
sub
xchg
adc
jo
cs
cmpsl
stos
out
cmpsb
dec
sub
cli
arpl
inc
adc
or
test
mov
repz
dec
push
dec
xchg
data16
test
xchg
mov
sbb
lods
mov
and
mov
mov
insl
and
outsl
sti
testl
fnstcw
jge
fidivs
adc
aaa
lock
movsl
push
and
sbb
mov
lock
xchg
imul
enter
sub
nop
and
js
mov
iret
bound
sub
inc
pop
je
shl
jle
cmp
fisttpll
repz
cmp
clc
push
or
pushw
in
repz
dec
fcoml
insb
dec
pop
jo
jne
iret
mov
stc
sub
xor
outsl
mov
cmp
popa
stc
mov
js
hlt
lock
push
insb
leave
leave
mov
scas
stos
mov
push
jnp
in
xor
test
shl
jmp
leave
stos
pop
inc
out
or
lods
xchg
dec
sub
sub
add
xchg
mov
arpl
adc
sti
dec
cwtl
jb
movsl
jbe
orb
xchg
jbe
cmc
jle
jge
push
repz
pushf
pop
sahf
push
and
insb
jo
and
rorl
sbb
daa
es
sbb
pop
filds
icebp
aad
push
mov
cmp
popf
push
add
push
les
cs
jb
or
dec
fbstp
mov
cmc
xor
cmp
fs
mov
jp
jmp
xor
adc
jl
roll
inc
and
jg
mov
xchg
push
iret
fcomps
push
sub
jmp
mov
mov
out
jns
xor
stos
mov
jg
sbb
fcoml
cs
mov
mov
movsb
in
nop
dec
push
mov
dec
call
rorb
imul
mov
and
test
cmc
lods
shll
lret
jecxz
and
ljmp
mov
push
adc
push
xchg
sarb
mov
icebp
push
jl
or
shrb
andb
mov
jle
sub
cmovl
adc
jmp
sbbb
mov
pop
dec
cmp
add
push
rol
mov
sti
in
shrl
fidivrl
inc
notl
out
jge
add
jl
pop
sbb
or
aaa
push
cmp
fnstsw
out
push
pop
int
insl
jge
int3
or
mov
pusha
mov
stos
or
std
mov
rorl
and
dec
pop
and
fdivs
sub
in
or
jbe
cld
lods
lock
cmp
insl
mov
jecxz,pn
fimuls
int3
cli
das
inc
jae
jge
dec
lret
adc
mov
push
jg
dec
mov
enter
or
inc
fwait
lret
mov
jb
jp
scas
test
cmpsl
sbb
inc
call
inc
mov
pop
testb
cmp
ds
popa
clc
cwtl
or
jb
loope
and
pop
call
test
arpl
dec
adc
repnz
addl
pop
adc
jbe
xchg
dec
jbe
sbb
mov
xor
inc
inc
mov
inc
adc
xchg
mov
stos
test
pop
sbb
test
call
xor
xchg
xchg
dec
add
jg
xor
cmp
jle
les
je
les
outsb
lds
jne
icebp
xor
and
ja
jmp
call
push
scas
mov
and
pop
jno
inc
adc
outsl
je
daa
mov
daa
mov
das
fistps
adc
inc
push
iret
daa
inc
xchg
jnp
test
cld
or
js
mov
mov
jb
mov
and
push
xchg
icebp
repnz
jge
fadds
xchg
xchg
dec
sbb
mov
loop
mov
mov
imul
jp
xchg
test
or
jne
test
arpl
sub
movsl
out
push
and
sarl
insb
cwtl
jmp
lret
pop
or
test
dec
push
sub
rol
inc
fsubr
add
cmp
ret
in
fimull
mov
add
icebp
loop
addr16
lods
or
inc
loope
mov
xchg
sub
pop
cmpsb
sbb
daa
ret
movsb
call
sbb
into
jo
outsl
lea
jns
outsl
jae
test
int3
and
imul
inc
clc
add
icebp
add
adc
pushf
stc
mov
lahf
ret
test
mov
pushfw
jle
mov
out
sub
mov
mov
cli
inc
testl
mov
repnz
rclb
pop
mov
jae
outsb
or
jecxz
lret
outsl
sub
in
lea
mov
call
or
and
call
movzbl
push
movzbl
call
xor
mov
add
lea
inc
dec
call
or
and
dec
add
mov
xor
dec
sub
add
mov
or
call
mov
add
or
lea
inc
call
dec
dec
call
lea
dec
inc
lea
movswl
inc
imul
pop
and
inc
add
add
sub
pop
mov
inc
pop
lea
sub
movzwl
mov
pop
add
inc
dec
dec
mov
movswl
movsbl
movzwl
pop
inc
lea
pop
or
mov
mov
mov
or
call
mov
and
lea
mov
ret
imul
xor
push
add
dec
push
lea
add
push
add
lea
push
inc
push
inc
lea
mov
add
push
mov
ret
push
or
xor
lea
lea
dec
mov
movsbl
push
mov
imul
mov
call
pop
ret
jmp
inc
mov
add
mov
mov
xor
sub
movzbl
mov
mov
add
or
dec
and
imul
mov
movzbl
mov
add
xchg
inc
mov
add
dec
xor
mov
dec
mov
mov
inc
mov
mov
dec
jne
mov
mov
add
lea
pop
movswl
dec
pop
and
mov
pop
and
mov
and
dec
mov
and
dec
mov
or
mov
sub
add
ret
push
imul
mov
sub
inc
inc
and
imul
add
push
push
push
push
add
inc
dec
push
mov
mov
mov
add
inc
mov
dec
mov
mov
mov
movswl
push
inc
mov
xor
or
add
push
lea
add
push
imul
add
pushl
dec
call
imul
add
dec
lea
and
mov
dec
and
inc
pop
ret
xor
mov
movzbl
add
inc
inc
or
dec
mov
add
dec
add
inc
dec
cmp
jb
xor
movsbl
mov
imul
imul
mov
inc
inc
and
mov
dec
dec
add
mov
mov
cmp
jb
imul
mov
add
inc
xor
add
xor
inc
pop
add
test
jbe
mov
sub
inc
mov
inc
imul
mov
or
or
lea
mov
mov
inc
lea
movsbl
inc
mov
dec
mov
dec
dec
and
and
or
imul
mov
and
dec
movzbl
movswl
inc
add
mov
mov
and
add
movsbl
mov
dec
mov
mov
lea
imul
mov
inc
sub
mov
dec
mov
mov
lea
inc
dec
jne
dec
mov
dec
mov
inc
mov
imul
or
xor
mov
mov
inc
mov
lea
sub
dec
dec
add
mov
inc
lea
mov
imul
movsbl
test
jbe
lea
imul
inc
add
add
movzbl
inc
add
add
inc
inc
mov
mov
mov
imul
inc
mov
add
inc
mov
lea
dec
and
dec
movzbl
mov
lea
and
movzbl
lea
lea
add
imul
mov
and
lea
xor
mov
dec
mov
movzbl
sub
jmp
push
add
dec
inc
imul
dec
movswl
mov
mov
inc
add
movzbl
sub
and
and
lea
sub
mov
lea
sub
movzbl
lea
mov
inc
inc
mov
dec
add
inc
and
movzwl
dec
add
dec
mov
inc
mov
dec
lea
mov
lea
imul
inc
dec
imul
sub
add
xor
add
mov
mov
add
imul
dec
or
mov
mov
and
inc
and
add
mov
mov
imul
imul
dec
inc
xor
sub
dec
lea
dec
dec
imul
and
inc
mov
sub
cmp
je
call
call
inc
ret
sub
movzwl
pop
add
ret
push
dec
sub
dec
inc
sub
push
mov
dec
push
add
push
mov
push
add
dec
push
mov
imul
sub
xor
sub
call
dec
push
or
push
mov
pop
movzwl
mov
mov
lea
mov
mov
mov
mov
inc
mov
inc
dec
je
mov
add
lea
mov
dec
mov
dec
or
dec
mov
imul
or
mov
dec
jmp
sub
lea
dec
repnz
and
inc
add
inc
jmp
sub
mov
or
dec
xor
inc
sub
lea
mov
inc
sub
dec
lea
lea
lea
imul
pop
pop
ret
push
imul
inc
inc
mov
mov
movzbl
xor
imul
lea
dec
inc
mov
mov
dec
mov
dec
lea
inc
dec
mov
dec
xor
dec
add
sub
mov
pop
ret
sub
mov
mov
sub
add
mov
lea
mov
mov
inc
lea
mov
mov
xor
xor
mov
lea
mov
lea
lea
inc
lea
dec
lea
lea
inc
dec
cmp
jb
mov
push
mov
add
push
mov
inc
push
mov
movzbl
mov
inc
dec
xor
dec
mov
xor
mov
mov
xor
add
mov
push
or
imul
xor
lea
inc
mov
dec
lea
mov
lea
movzbl
dec
mov
inc
inc
add
movzwl
add
imul
lea
movzbl
movzbl
movzwl
inc
jmp
notl
jae
ss
test
mul
lds
popf
pop
pushf
repz
je
out
mov
mov
pop
and
scas
mov
rclb
jb
stos
xchg
xchg
mov
in
jmp
push
dec
fimuls
aad
mov
jge
jl
xor
pop
stos
cli
push
push
pop
xor
test
fsubrl
mov
lock
pop
or
int3
and
sub
jecxz
adc
jo
cmpsl
in
test
test
xchg
sti
adc
in
jbe
mov
xor
pop
ja
pop
out
aad
or
std
sarl
in
fldenv
fldt
pushf
inc
sbb
scas
mov
fbld
in
xor
push
rep
sbb
and
js
test
mov
or
pop
and
dec
out
mov
out
hlt
mov
out
fcoml
adc
popa
pop
je
lret
subl
jns
sbb
int
inc
int3
cld
cmp
insl
adc
cwtl
shl
pop
movsb
or
shlb
sbb
popf
mov
outsb
inc
aad
cmp
push
in
call
ret
shlb
jecxz
fsubs
xchg
push
xor
push
pushf
ljmp
pop
sbb
popl
aad
decl
popa
cmp
lock
jecxz
loope
mov
mov
pushf
inc
push
js
call
push
fisttpll
jmp
jg
xchg
and
test
inc
test
pushf
mov
mov
pop
addr16
mov
jp
fbld
lea
in
cmp
cmp
pop
lahf
int
mov
sub
dec
ret
push
adc
jl
call
push
rorl
pushf
std
xor
mov
mov
push
and
loop
add
insl
stos
push
imul
mov
adc
jo
dec
push
mov
adc
imul
cs
lds
dec
inc
icebp
jmp
aam
push
pusha
sti
and
dec
xchg
xor
sbb
pop
das
add
lea
and
dec
cmpsl
inc
gs
mov
ds
or
aas
push
in
xchg
jns
cmovne
sar
mov
call
test
pop
fs
mov
sub
lock
das
fstl
loopne
pop
jns
xor
jns
iret
test
sub
xchg
fcomps
xchg
adc
iret
mov
sbb
push
enter
stos
aas
xchg
test
arpl
sbb
insl
push
imul
cmp
bnd
lcall
push
stos
jge
ss
arpl
into
pop
int3
mov
stos
mov
fidivs
xchg
ret
and
loope
fdivl
mov
fisubl
fidivrs
push
push
fstps
repz
les
pushf
insl
push
add
xor
mov
fcomps
sbbl
lods
cmpsb
dec
mov
mov
fisubs
adc
fwait
push
out
or
pop
lcall
push
insb
stos
inc
xor
mov
clc
adc
push
add
ds
pusha
mov
loop
inc
mov
xor
aam
je
test
jb
fdivs
je
mov
or
popf
push
shr
stc
sbb
outsl
inc
xchg
mov
xor
jb
mov
sub
add
outsl
add
lods
cmp
stos
stos
mov
xor
nop
sub
mov
mov
sbb
iret
xchg
addr16
hlt
add
xor
push
mov
xchg
pop
dec
jge
xchg
lea
dec
mov
es
jle
aaa
mov
dec
fcoms
imul
adc
dec
xor
mov
jge
inc
push
daa
ljmp
lods
imul
movsl
pop
es
bound
push
in
and
in
cmp
push
push
push
mov
or
sbb
sub
xchg
jo
mov
adc
lcall
fs
ret
push
jbe
xchg
dec
mov
push
std
movsb
and
cmpsl
cmpsb
test
jo
out
add
mov
inc
stc
pushf
test
cld
ret
gs
int3
adc
push
enter
fisttpl
jg
add
pop
cmp
enter
cmp
xchg
jb
xor
ss
xor
dec
sbb
jo
fistps
inc
xchg
mov
sub
test
cs
rorl
adc
cmc
xchg
xor
rorb
or
jnp
dec
jle
or
add
or
rcrb
or
push
xor
cmp
dec
pushf
adc
insl
inc
std
out
je
cs
or
fnstenv
jg
xchg
js
inc
add
lret
std
movb
insb
pop
rclb
dec
fs
lahf
pushf
shll
aas
jns
popf
imul
xchg
data16
pop
daa
mov
push
cmp
vpunpckldq
int3
mov
cmp
imul
out
cld
dec
mov
adc
das
add
repz
jae
scas
mov
xor
xor
idivl
push
mov
xchg
and
fwait
mov
xchg
push
jbe
dec
and
dec
insb
dec
cmpb
push
add
and
stos
push
leave
stos
lret
push
cmp
mov
xchg
fstps
push
or
pop
test
out
repnz
shll
aas
pusha
cmpsl
daa
call
push
sub
and
into
add
pop
in
or
inc
cmc
lods
inc
mulb
mov
ja
add
and
xchg
xchg
sub
call
sub
imul
jmp
and
fsubp
adc
lret
scas
rcrb
fimuls
pop
pushw
sub
and
stos
push
sub
mov
or
inc
daa
icebp
jg
rorb
push
stc
mov
and
adc
and
push
cmp
hlt
into
and
filds
mov
int3
repnz
pop
pop
imul
fnsave
xor
mov
dec
sub
lret
enter
fwait
aam
iret
lock
xchg
dec
shll
leave
and
outsb
pop
xor
shlb
cmpsl
push
test
mov
mov
pop
add
sbb
rcll
test
stos
movsl
mov
mov
cmp
jmp
push
sbb
xchg
mov
mov
in
mov
mov
jl
jnp
mov
add
sub
push
std
adcl
or
test
xchg
dec
mov
loopne
push
movsb
cmp
xchg
movsl
pop
inc
ss
pop
mov
jge
add
call
cltd
push
pop
mov
hlt
loope
push
outsb
mov
inc
adc
mov
fistps
cmp
dec
js
stos
loop
jp
mov
and
in
ficoms
pop
or
adc
and
mov
mov
lods
cmp
sbb
out
pop
insl
mov
pop
in
movsl
xlat
sbbb
adc
cltd
icebp
fidivs
jmp
arpl
lods
mov
sti
dec
fwait
out
subl
dec
adc
imul
popa
jbe
inc
xor
lahf
jnp
jb
adc
cmp
into
vmwrite
jge
and
dec
loopne
sbbl
ret
sbb
call
ss
das
imul
mov
pop
gs
fdivl
scas
out
ja
jl
pop
nop
cmp
daa
and
adc
sbb
and
and
push
mov
push
incl
cs
lods
cmp
sbb
adc
cmp
xor
insb
cmp
sub
sub
lret
sub
lret
push
movsl
cmpsb
xchg
push
cmp
lods
scas
push
hlt
mov
int
ss
sbb
cmp
sub
cmp
xor
into
mov
pop
lret
and
lock
js
cmp
je
dec
sub
xchg
adc
fwait
jbe
and
pop
in
lahf
pop
jl
xchg
push
mov
js
cmp
mov
dec
nop
mov
pop
lds
test
mov
push
scas
xor
add
jp
repz
jae
mov
lods
xor
and
ja
cmp
xchg
into
mov
iret
add
rorb
jge
repz
ret
ret
xchg
cmp
aad
sbb
ljmp
mov
push
mov
loopne
dec
or
adc
imul
mov
icebp
pop
mov
inc
push
mov
push
dec
sti
adc
jnp
pop
orb
and
inc
pop
mov
adc
sbb
fisttpll
lret
push
and
cli
lret
aad
iret
movsl
leave
add
pop
xlat
outsb
or
imul
mov
stos
ficomps
cs
adc
push
jl
inc
leave
push
mov
dec
inc
jecxz
leave
mov
adc
fidivl
mov
int3
mov
andb
lcall
and
in
and
movb
test
hlt
xchg
sbb
aam
pushf
mov
mov
inc
cmc
inc
idivb
cmpsl
incb
out
add
cmp
pop
divl
shl
mov
mov
clc
ds
xor
out
jae
imul
jbe
xor
daa
outsl
mov
push
mov
loop
ljmp
out
nop
rorb
xchg
out
inc
fistpll
add
lods
jae
sub
outsb
jp
mov
stc
cmp
lcall
adc
or
xor
mov
inc
mov
mov
mov
sti
orl
int
inc
push
xchg
push
xlat
cmp
insl
rorb
adc
dec
clc
movsb
popf
sub
jp
in
xchg
pop
insl
arpl
mov
xchg
and
sub
push
inc
dec
out
jle
jge
mov
movsl
cmpsl
mov
dec
fwait
mov
xor
adc
sbb
loope
lods
adc
das
dec
mov
subb
arpl
mov
push
push
jle
pop
imul
mov
add
hlt
stos
dec
jb
test
sub
aaa
dec
mov
sbb
hlt
ficoms
in
imul
inc
cs
dec
or
push
cmpsl
sarb
push
push
cltd
adc
xor
popf
lret
in
jge
pop
or
jo
jno
ret
jmp
mov
shrb
or
fnstenv
lods
jns
inc
insb
dec
push
adc
adc
lahf
les
rcr
and
xor
cmp
xchg
xor
add
sti
leave
sub
addr16
sbb
js
in
dec
sti
sub
out
movsl
fucomp
loopne
sti
stos
hlt
jb
add
outsb
cli
loope
xor
jbe
cmc
xor
stos
adc
fwait
xor
mov
xchg
pop
mov
int3
mov
adc
cmpb
adc
adc
cmp
cmpsl
xchg
xor
in
push
sub
jne
mov
mov
pop
xchg
xchg
mov
sub
daa
push
mov
add
testl
add
lods
les
xor
cli
lock
cmp
lret
xchg
mov
xor
xchg
call
mov
lahf
or
and
adc
jbe
lahf
jbe
xor
cmc
decl
jp
add
and
sbb
fadd
or
xor
pop
pop
and
imul
mov
loope
sar
push
pop
repz
stos
popf
arpl
pop
cmp
mov
adc
dec
insb
lock
inc
int3
or
rep
or
mov
adc
mov
jp
pop
shr
imul
pop
xlat
int3
inc
mov
adc
xchg
jmp
mov
adc
lret
mov
inc
stos
lret
incb
and
es
sub
pushf
mov
faddl
add
leave
insl
fwait
adc
loope
push
mov
push
or
dec
pop
insb
hlt
pop
sti
push
mov
pop
cmp
dec
cmpsb
jne
jle
cwtl
imul
fisttpl
or
dec
xchg
xchg
shrl
mov
sahf
mov
push
rcrb
xor
mov
lods
out
rolb
jp
mov
pop
nop
pop
or
sti
or
aam
imul
rorb
add
test
cmp
aas
stos
mov
sbb
dec
loop
inc
or
out
xlat
or
ret
mov
sbb
xorb
push
mov
iret
dec
fidivrs
jmp
pop
or
sahf
sbb
push
enter
push
mov
push
inc
sub
sbb
repnz
sarb
pushf
mov
ror
mov
mov
xchg
insb
cltd
lcall
xchg
test
push
lds
out
mov
outsb
mov
out
mov
xchg
jne
dec
pop
outsl
fwait
xlat
stc
js
leave
clc
sbb
dec
push
mov
fidivrl
iret
mov
jno
push
push
cmp
xchg
inc
jo
ja
fisubl
jp
dec
pop
xchg
cmp
orb
hlt
jg
xlat
movsl
in
xchg
mov
sbb
push
shll
mov
mov
stc
sub
dec
sbb
into
fistl
jmp
xor
addr16
inc
je
cli
add
xlat
cmp
test
pop
pop
insb
arpl
insb
jl
xchg
out
jecxz
sbb
push
add
mov
adc
subl
sbb
and
jp
hlt
jg
push
jb
adc
and
dec
dec
pop
or
leave
jb
xor
nop
pop
lcall
nop
sub
push
xor
cmpsl
add
out
push
adc
mov
push
ss
cmp
jae
cmpsl
rcll
xchg
subl
imulb
inc
out
testb
aam
popa
adc
and
test
lea
xchg
gs
xor
pusha
jp
ret
and
sahf
sub
xor
lret
cmp
clc
data16
bound
popf
and
test
dec
add
jae
lds
jae
out
repz
ficoms
std
in
dec
xchg
xor
xor
adcb
dec
dec
scas
movsb
jae
xchg
push
lcall
mov
loopne
pop
or
mov
mov
xchg
push
sbb
pushf
sbb
test
dec
scas
xchg
jp
jmp
aam
lcall
adc
add
push
fstps
push
jge
mov
xchg
insb
subl
fsubl
mov
xor
out
cmp
jbe
mov
mov
mov
push
add
shll
jg
je
add
jb
dec
lea
in
push
push
es
or
dec
or
add
or
fdivrs
sbb
pop
push
fildll
ret
dec
lds
jne
scas
add
mov
js
pop
sub
cld
jmp
outsl
pushf
out
fistl
push
jmp
push
into
sbb
dec
lret
mov
stos
sbb
mov
push
dec
addr16
xchg
jns
into
mov
lods
xchg
pop
jne
sub
fcompl
mov
fs
mov
popa
mov
nop
cs
test
fstl
xchg
mov
rcl
adc
lret
xchg
jmp
fistps
pusha
jnp
test
sbb
shr
loop
inc
aas
mov
inc
jmp
jnp
cmc
movsb
mov
pop
xchg
aam
cmpb
loop
mov
inc
jnp
push
jg
repz
hlt
call
rep
loopne
test
and
imul
xor
and
in
dec
inc
sub
dec
dec
incl
xchg
out
paddsw
mov
mov
fsubrp
sbb
adc
fimuls
hlt
flds
pop
or
push
andl
sbb
dec
mov
scas
lods
stos
mov
pop
cmpsb
orb
mov
loope
movsb
mulb
popf
jb
shll
faddp
or
cmp
test
xor
push
aam
fcompl
mov
ret
sti
dec
and
mov
cmpsl
lods
lret
add
imul
movsb
xor
push
stos
shl
daa
dec
imul
mov
dec
mov
lods
fstpl
mov
mov
dec
imul
push
scas
mov
mov
dec
mov
insl
pop
scas
mov
and
dec
push
adc
scas
in
mov
pop
cmp
add
pusha
ret
cwtl
sbb
repz
aam
je
test
negb
xor
push
push
subl
rcll
bound
clc
cmp
pushf
fucomp
xlat
jmp
push
into
mov
push
add
xchg
pause
js
pop
sub
lahf
push
sbb
cmp
pop
mov
sub
lock
mov
dec
mov
push
or
push
inc
mov
popf
pop
adc
gs
sbb
mov
shlb
rorl
pop
aad
icebp
push
sub
cmp
mov
mov
mov
add
daa
mov
inc
mov
mov
inc
mov
or
or
movsb
gs
sub
inc
notl
add
in
jo
repz
pop
xor
jp
mov
nop
in
inc
cltd
inc
loop
pop
pusha
adc
lods
mov
popw
lock
xchg
sbb
add
sub
xor
sub
call
adc
repnz
lahf
dec
push
jmp
mov
dec
mov
pushf
aad
pop
sbb
adc
pop
sbb
push
push
or
cmc
rcl
cmpsl
pop
and
xor
and
inc
loope
jg
mov
out
dec
add
cmovge
mov
jnp
pushf
sbb
xor
psubsw
sbb
in
push
cmp
jb
repz
in
ret
aaa
mov
jo
mov
adc
sub
pop
push
mov
into
mov
push
push
and
cmp
sub
mov
mov
sbb
cmpsb
ret
pop
roll
dec
mov
mov
mov
xchg
push
fwait
dec
mov
cmp
cmpsb
outsl
adc
into
push
mov
inc
jmp
jbe
jmp
out
popa
sbb
sbbb
in
pop
adc
outsl
sbb
ret
and
cmpsl
mov
sbb
push
sbb
or
mov
dec
pop
idivb
sub
sbb
jp
mov
lea
faddl
sbb
shrl
lahf
xchg
iret
xlat
mov
jo
pop
pop
leave
push
adc
sbb
jge
push
mov
mov
jp
adc
pop
jns
outsl
fwait
add
xchg
xchg
outsl
mov
cltd
xchg
mov
loope
rorl
jg
es
mov
push
arpl
jl
ds
ljmp
inc
loop
jmp
fldt
test
into
rorb
jnp
pop
xchg
sahf
stos
lcall
xchg
mov
pusha
cmp
sbb
pop
pusha
std
sub
pushl
mov
call
xor
mul
mov
sbb
lock
gs
mov
mov
or
adc
jge
inc
mov
xor
push
dec
movsb
in
int3
jb
in
xor
in
frstor
jmp
inc
hlt
js
sub
mov
push
outsl
mov
mov
movsl
fcoms
mul
insl
and
iret
fsub
cs
push
popf
sbb
pop
jnp
mov
push
push
or
cltd
iret
aad
mov
adc
cmpl
mov
mov
repnz
inc
jp
adc
cmpsb
adc
add
mov
adc
rol
cmp
add
mov
push
setns
jb
pop
dec
and
int
mov
push
pop
mov
cmp
jle
loop
in
mov
add
aad
pop
fsubr
and
les
in
aam
pop
and
mov
daa
insb
into
out
insb
xor
xchg
ds
push
not
push
fnsave
xor
xchg
cmp
or
fimull
pop
mov
nop
jge
jmp
jecxz
inc
in
scas
inc
and
test
mov
scas
or
or
pop
xor
mov
enter
mov
xchg
dec
dec
fsubrl
adc
mov
xor
pop
rorl
mov
fsubp
cmp
xchg
cmpsb
mov
inc
divl
out
data16
iret
mov
js
sbb
std
loop
mov
sbb
sub
aad
push
adc
jge
xor
outsb
sbb
das
mov
adc
xchg
cmovb
mov
hlt
in
loope
mov
in
popf
and
imul
fiadds
jb
pop
and
mov
loopne
insb
xchg
mov
push
mov
pop
pop
or
mov
ss
mov
stos
or
mov
jb
push
into
test
lahf
test
sbb
rorb
sbb
fsubl
mov
daa
mov
and
mov
dec
lret
lahf
lods
xor
negb
das
mov
pop
enter
jl
mov
stc
out
xlat
out
pop
cmp
dec
push
xchg
cmp
add
mov
leave
mov
dec
fdivl
int
cmpsb
lret
inc
sub
inc
sub
and
and
sub
dec
dec
add
pusha
cmovb
inc
or
jns
divl
xchg
mov
inc
insl
mov
fistpl
sbb
and
pop
cmpsb
push
mov
int
sub
mov
push
pop
ljmp
je
xchg
xchg
pop
adc
jp
scas
scas
sbb
sbb
ss
pop
fsts
inc
xchg
call
and
clc
push
mov
aam
push
lcall
inc
mov
test
icebp
movsl
add
aad
lret
jnp
sub
xor
ljmp
xor
mov
loop
jbe
lds
dec
jp
sub
jno
ror
arpl
sub
jge
inc
mov
imul
das
stos
into
mov
inc
add
mov
mov
shlb
mov
add
pushf
mov
adc
jbe
xchg
cmp
push
imulb
loope
mov
dec
movsb
mov
push
sbb
ljmp
mov
sbb
jle
jl
sub
jle
out
and
jno
mov
mov
stos
mov
or
push
adc
push
mov
push
mov
pop
and
add
add
or
xchg
pop
or
pop
or
push
and
push
stos
scas
std
test
sbb
sbb
and
popl
je
mov
fldcw
mov
mov
mov
jno
jecxz
jno
sub
outsb
test
push
fistpll
icebp
cwtl
stos
insl
test
push
or
inc
or
ret
icebp
dec
dec
or
outsl
xlat
mov
jb
outsb
xor
mov
jp
push
mov
stc
out
hlt
cld
icebp
shlw
mov
test
and
jnp
jb
in
and
and
sbbl
decb
xchg
adc
pop
mov
int
or
lahf
or
jbe
stc
sbb
jmp
inc
or
or
fstl
dec
mov
or
dec
dec
xchg
cmp
lods
insl
jnp
adc
call
adc
push
leave
jnp
add
or
push
mov
mov
sbb
data16
push
pop
mov
sbb
bound
aaa
call
mov
lret
pop
enter
or
push
xor
and
dec
jl
mov
mov
cltd
in
hlt
and
test
idiv
jle
mov
jp
sub
jle
mov
dec
adc
xchg
mov
add
xor
frstor
mov
enter
ret
xor
xchg
cmp
and
movsl
cmp
mov
dec
pop
je
lret
adc
adc
jnp
pop
and
xor
fistl
push
push
ss
in
jne
mov
jnp
jl
mov
repnz
leave
and
dec
lods
ss
outsl
aaa
inc
fidivs
jle
idivl
inc
stos
xlat
jl
mov
lret
jecxz
push
jle
mov
popa
loopne
mov
sub
inc
xchg
mov
cmp
ljmp
cwtl
not
mov
popf
push
sub
xor
scas
int
xchg
addr16
cmp
dec
rcrb
cmc
repz
enter
int
and
jnp
push
jbe
mov
and
je
xor
ja
lret
jl
pop
cmp
dec
ljmp
xor
jge
sbb
mov
push
ss
cli
out
cmpsb
repnz
fsubp
inc
pusha
and
sbb
test
mov
xchg
pop
adc
cs
adc
inc
aam
dec
jne
jbe
leave
fdivs
mov
xchg
out
jbe
cli
in
cli
sbb
dec
movsb
bound
jae
cld
jns
cmp
cltd
das
xor
loop
out
into
add
mov
out
lret
and
pop
mov
daa
cmp
aas
imul
pusha
sbb
ret
sbb
mov
movl
jle
in
in
movb
in
ret
lret
mov
xor
cld
orl
sub
fdivrp
lock
rorb
pop
xchg
test
scas
in
ret
outsb
test
dec
sahf
out
cmpb
mov
sti
inc
pop
inc
scas
ljmp
bound
or
pop
lret
stos
pop
cmpsl
push
push
cmp
and
or
mov
popa
pop
pop
ds
or
adc
dec
inc
aad
fdivrl
call
add
fadd
jle
xor
inc
xchg
movsb
sbb
sub
mov
cmpsb
push
pop
insl
mov
int
ja
sbb
push
xchg
lods
shlb
push
test
rorl
pusha
imul
in
push
mov
cmp
sbb
add
mov
leave
rorb
inc
std
push
cmc
pop
xchg
int
and
pop
jge
mov
sbb
fwait
cmp
aas
je
push
jb
sbbb
xchg
dec
dec
sbb
adc
push
movsb
aam
push
or
adc
adc
push
test
sub
sub
daa
xchg
jbe
mov
mov
add
leave
loop
or
mulb
arpl
rol
icebp
insl
cmp
pop
cmp
mov
xor
mov
sub
aad
sbbb
push
jg
cwtl
icebp
das
sbb
imul
pop
ljmp
and
inc
fadds
push
movsb
clc
add
dec
clc
clc
push
aam
sbb
fisubl
ret
ficomps
push
adc
pop
mov
pusha
push
sbb
ja
outsl
iret
enter
mov
pop
mov
arpl
insl
fstp
je
sub
sti
outsb
push
cmp
inc
cld
lcall
pop
int
sbb
fcomp
cmpsb
cmp
xchg
imul
jge
repz
pop
into
push
cltd
pop
ljmp
int
int
xchg
push
repnz
into
mov
sbb
fistpl
or
dec
movsl
xor
xchg
imul
mov
mov
stos
pop
mov
and
push
sti
mov
or
shl
in
jns
mov
push
adc
pop
test
lea
xchg
jge
cmpsb
lcall
test
iret
in
and
adc
sbb
imul
lock
adc
popa
add
cltd
fstl
xchg
cmp
aas
sub
pop
aam
outsl
sbb
mov
inc
insl
in
xchg
je
push
push
cmpsl
inc
out
in
int
jmp
cmp
cmp
xor
mov
enter
and
cmp
jmp
pop
and
push
call
jmp
jge
mov
xchg
in
mov
jae
fnstsw
inc
movsb
sbb
jne
xchg
stos
shrb
push
pop
sbb
cmp
jae
dec
dec
icebp
xor
xchg
xor
sti
inc
pusha
xorb
pop
cmpsl
mov
xlat
inc
jbe
nop
and
int3
ja
cli
jno
sahf
mov
jae
mov
inc
loop
addr16
and
jns
stc
inc
popa
inc
out
mov
xor
mov
xlat
mov
je
xor
aam
push
popa
cmp
cmp
insb
lock
scas
pop
xchg
mov
lcall
xlat
repnz
ficoms
jne
pop
cs
mov
ret
scas
adc
in
xchg
pushf
outsl
cmp
loopne
lods
faddl
dec
out
mov
call
or
xor
and
xor
push
pop
jno
xchg
sbb
mov
sbb
mov
dec
out
cmc
not
push
scas
in
push
sti
jp
gs
dec
dec
aas
ret
in
sahf
out
xor
out
pop
popf
mov
cmp
roll
adcl
inc
mov
xchg
fwait
and
pop
pop
nop
xor
adc
mov
out
or
add
xchg
pop
in
cmp
or
adc
out
stc
xor
xor
xor
xchg
lea
add
mov
out
jl,pt
sbb
movsb
dec
out
add
sbb
mov
mov
outsb
adc
xchg
add
xor
hlt
push
ja
ja
jl
inc
mov
and
xchg
insb
xchg
or
icebp
lret
jnp
and
gs
push
aam
adc
sbb
das
lcall
pushf
rorl
dec
test
push
je
cmp
repz
push
xchg
call
mov
and
daa
adc
xor
cmpps
jl
insl
and
cltd
mov
sbb
inc
arpl
or
push
imul
cwtl
xchg
pop
mov
std
inc
iret
imul
inc
xchg
fstl
push
xor
sub
cmp
sbb
adc
popf
adc
mov
cmp
leave
push
pop
dec
inc
cmp
push
rclb
cli
sub
dec
or
sbb
mov
cmp
cmp
sub
mov
add
xor
icebp
push
rcl
test
aaa
shl
out
in
aaa
pop
inc
push
loopne
pop
mov
call
and
test
sub
imul
cwtl
dec
lods
imul
in
adc
loope
adc
in
inc
ret
rcll
add
and
enter
xor
inc
dec
adc
xchg
stc
rorb
xchg
push
or
mov
clc
rcll
xchg
jne
sbbb
imul
mov
cmp
cltd
mov
and
aaa
or
daa
cltd
xor
fldenv
mov
into
jge
outsl
add
pop
or
push
mov
iret
pop
sbb
jl
nop
mov
adc
adc
pop
push
scas
adc
inc
aaa
sub
jg
jmp
jns,pt
pop
mov
inc
cmpsb
into
dec
inc
fisubrs
xor
inc
fwait
les
sbb
jg
bound
xor
cmpsl
xor
das
ss
cmpsb
cwtl
pop
mov
dec
scas
sbb
cmpsl
sub
push
scas
mov
pop
ja
mov
jno
cltd
push
sar
mov
je
mov
daa
fbld
add
movsl
nop
dec
lahf
insl
imul
or
or
sbb
adc
push
ret
data16
popa
push
loope
aas
mov
div
imul
es
sbb
out
or
mov
cs
cmp
adc
mov
ljmp
cmc
sbb
push
sub
xchg
inc
mov
dec
push
ljmp
imul
popf
xchg
lods
xchg
fadd
popa
out
cmp
rclb
testb
xchg
jg
pop
iret
outsl
sub
sub
mov
fcoml
pop
jbe
icebp
mov
push
test
jle
jge
lret
inc
adc
mov
cmp
dec
cmpsl
xor
mov
dec
sbb
in
inc
adcb
fcompl
pop
popf
mov
push
jmp
lods
jae
aam
dec
jge
adc
mov
dec
out
mov
xor
inc
adc
mov
insb
cmp
test
dec
mov
xlat
pop
in
mov
icebp
push
out
inc
mov
lock
movsb
push
add
mov
test
lods
add
xchg
cmp
cmpsb
dec
bound
les
add
rcrb
lcall
pushf
xchg
sbb
into
insl
jl
adc
sub
dec
scas
push
xchg
mov
cmc
dec
pop
mov
pop
fstps
call
and
mov
sub
xchg
push
fidivrs
loope
mov
add
cmpsl
lea
push
pop
mov
xor
cli
adc
test
stos
push
popa
dec
pop
dec
adc
fisttpll
dec
sub
or
and
popf
dec
mov
mov
jg
rorb
dec
cs
push
fmull
cmc
jae
push
mov
add
jg
iret
mov
sub
lods
dec
ret
sahf
mulb
or
stos
xor
mov
std
mov
mov
jns
cmp
test
push
outsb
in
lret
or
into
dec
add
push
push
pop
std
dec
repz
test
repnz
out
pop
pushl
std
mov
push
mov
pushf
subl
pop
cmp
mov
fmulp
jp
fstl
cmp
iret
daa
xchg
mov
test
inc
test
andb
xchg
xchg
in
or
pop
es
clc
in
sbb
cmp
subb
popf
jo,pt
sti
scas
inc
sarb
into
and
jge
and
lret
adcb
fsubrs
nop
scas
jge
push
out
add
pop
cmp
jo
jle
ljmp
fisttpl
adc
call
out
pushf
adc
bnd
mov
negb
insl
mov
jle
cmp
mov
sbb
pop
cld
inc
mov
xchg
je
negb
mov
outsl
cmp
int
cmp
sub
xlat
jb
push
push
loope
adc
arpl
frndint
sub
stos
arpl
adc
call
shl
movsl
cmp
xrelease
repnz
mov
xor
psrlw
jge
lcall
fbstp
cmp
lahf
fwait
inc
sub
push
lods
sbb
stos
xchg
push
stos
pop
cmp
inc
adcl
jae
fisttpll
sti
leave
leave
insl
insl
bound
iret
pop
ljmp
test
fscale
mov
in
add
ficoms
mov
mull
add
mov
cltd
shr
mov
out
test
mov
push
push
add
push
adc
inc
pop
or
cmp
and
xorb
jmp
xchg
je
into
push
sar
mov
gs
data16
ss
mov
out
test
dec
popf
and
fstcw
sbb
cmp
mov
sbb
jns
call
or
pop
inc
jae
jg
pop
ret
cmp
fdivl
jo
cs
xorl
cmpl
int
or
adc
dec
daa
out
xlat
xchg
mov
mov
mov
cmp
icebp
out
ret
jb
clc
add
into
fadds
inc
and
jb
adc
or
in
sarb
cmpsb
mov
and
out
movsl
push
test
inc
add
add
xchg
adc
xchg
ret
insb
shl
mov
mov
cmp
jb
jb
push
in
cmpsb
cmpsl
mov
lea
movsb
and
sbbb
outsb
dec
hlt
imul
addr16
pop
mov
stos
in
inc
lods
and
ljmp
push
pop
push
decl
xor
call
add
ret
decb
mov
push
mov
lea
pushl
lcall
pop
in
test
in
sub
lahf
pop
orb
rcr
jns
int3
cmp
xchg
cltd
sub
fwait
cs
leave
sahf
std
mov
fidivrs
ss
jb
xchg
les
adc
jo
pusha
mov
cmpsl
mov
push
movsl
lods
pop
push
arpl
out
cmp
fstl
xlat
sbb
ret
dec
push
pop
imul
sbb
in
and
jmp
pop
shrl
push
sub
andl
clc
mov
add
dec
test
sbb
jmp
out
in
movsb
inc
and
mov
mov
ror
mov
sbb
xchg
shrl
cmp
mov
pop
xchg
cld
ja
movsb
sub
cs
pop
xchg
cmp
mov
sbb
xor
lock
loope
cmp
test
xchg
in
cmpsb
and
dec
jge
mov
out
push
lret
js
pop
test
imul
sub
arpl
fimull
in
not
sahf
sub
inc
call
stc
and
or
add
js
inc
test
mov
pop
shlb
rcrb
movsb
pop
jg
push
dec
push
rol
mov
xchg
mov
mov
sbb
in
cmc
testl
sbb
xorl
xor
lods
mov
inc
lret
cmp
out
aad
dec
or
push
pushl
mov
or
fsubp
nop
roll
mov
push
pop
das
mov
mov
dec
sbb
push
add
inc
jno
pop
or
rcll
jl
xchg
jecxz
into
fidivrl
ja
inc
les
jge
aad
enter
sub
enter
xor
inc
pop
mov
adc
adc
fsts
and
jo
mov
addr16
push
xor
pop
and
sti
cmp
adc
xchg
push
fisttpll
cmp
add
dec
pop
pop
sub
lcall
cmpsb
in
test
sub
pop
dec
add
imul
cmp
mov
push
movsl
hlt
sbbl
mov
popf
lahf
push
push
dec
add
jecxz
loop
push
and
xor
jae
inc
ret
cmp
cmpsl
mov
outsl
loop
xchg
jnp
stc
or
xchg
cmp
xlat
clc
aad
push
sbb
lods
pop
stc
lods
and
test
mov
push
adc
movsl
pushl
push
jg
dec
lcall
fdivrs
inc
les
add
or
aaa
mov
nop
iret
divb
adc
sub
pop
dec
xlat
ret
mov
in
gs
mov
pop
popa
add
push
jle
orl
adc
std
fistps
stc
add
dec
cmpsl
sti
popf
imul
fsts
lcall
fildl
xchg
aaa
jae
or
adc
add
push
pop
cmpsb
mov
jmp
mov
ficoml
push
add
mov
xchg
fistpll
dec
xorl
cmp
adc
inc
fs
sbb
pmaxsw
jne
into
insw
cmp
insb
dec
fdivp
shrl
stc
rcrl
std
jb
enter
outsb
sub
sbb
xchg
xor
xchg
ja
sub
fisubrl
xchg
jbe
xor
mov
jno
popf
ret
shlb
into
mov
and
mov
lret
sbb
push
hlt
test
lock
pop
xor
inc
jg
pop
and
repnz
mov
inc
push
xor
loope
mov
loopne
xor
push
and
jne
addr16
inc
loopne
add
inc
popa
fdecstp
popf
inc
or
stos
call
jle
clc
lret
testl
test
insb
hlt
fidivl
mov
cld
push
loope
inc
pop
rclb
pop
test
cs
add
cwtl
rclb
fbstp
pop
and
inc
jae
lcall
sbb
ja
pop
outsl
jmp
ror
shrl
mov
stos
mov
add
cli
mov
in
sbb
sbbl
fnsave
scas
lods
jbe
outsb
jbe,pn
incb
aaa
not
pop
jne
push
loopne
js
pop
std
push
in
sub
aas
and
bound
mov
bound
push
jle
rcl
adc
mov
jmp
mov
cld
jbe
add
pusha
sbb
xchg
scas
xor
add
mov
das
push
nop
fildl
nop
xchg
test
jb
push
inc
subb
loop
sbb
mov
push
pop
pop
adc
subl
in
push
sahf
xor
leave
push
in
xor
arpl
mov
cltd
jecxz,pt
push
pop
ret
in
jp
je
imul
loope
sbb
lret
xchg
shlb
xchg
pop
lret
hlt
les
dec
jns
das
mov
movsl
mov
push
dec
test
dec
add
cmp
std
ja
jge
jp
aad
loopne
add
mov
mov
cltd
add
cmpsb
hlt
xchg
jle
in
int3
test
test
arpl
cmp
rolb
pushf
xor
ret
sti
and
rcll
jne
stos
or
dec
cli
imul
dec
push
jl
xchg
aam
sbb
push
arpl
pop
sbb
mov
dec
in
xor
ljmp
enter
adc
adc
mov
cmpsb
push
pop
adc
sub
loop
dec
sbb
nop
sbbl
into
push
icebp
push
out
rcrl
js
lds
mov
and
sub
cmp
cmp
pop
jbe
pop
and
ja
xorb
jle
and
das
in
cmp
in
add
fisubrs
pop
pusha
push
es
pop
lret
sub
jnp
xor
lcall
pop
jecxz
mov
push
cmp
cli
push
lods
sub
sarl
sub
in
xchg
mov
add
xor
pop
jg
lret
std
inc
mov
xchg
movsb
movsl
jae
ss
cmp
push
movsb
xchg
jns
cmp
cmp
xchg
xor
xor
lret
push
gs
push
mov
test
mov
xchg
in
loop
fildll
mov
adc
adc
sbb
sbb
mov
pop
sbb
out
insb
outsb
stos
mov
or
popf
cmp
adc
gs
jl
movsl
mov
rclb
js
and
jae
stos
fisubs
xchg
fdivs
pop
push
jne
mov
adc
out
inc
aam
pop
aam
in
adc
out
movsb
push
addl
ljmp
das
pop
movsl
cmp
ljmp
and
lock
add
xchg
inc
aaa
leave
fidivl
aaa
mov
sub
inc
movsl
lea
dec
sbb
fbstp
cmpsb
into
xchg
sbb
call
cmp
inc
enter
pop
hlt
outsb
xchg
cmp
dec
pop
jmp
xor
ds
jne
jbe
mov
xor
jne
ds
and
mov
imul
scas
rcr
or
inc
dec
or
jns
cli
and
jae
push
push
sub
loope
mov
gs
mov
push
data16
jns
hlt
push
ss
push
adc
jns
mov
pop
movl
sub
adc
aam
mov
sbb
pop
subb
out
dec
out
mov
pop
out
jns
xor
inc
push
push
mov
inc
lahf
nop
mul
xlat
push
rorb
and
popa
stos
pop
jae
push
dec
test
adc
pop
dec
jns
xchg
sub
int3
popf
mov
scas
push
mov
test
mov
addl
sbb
rorl
sbb
xchg
lcall
lds
mov
cld
pusha
cmpsb
mov
lds
push
xlat
iret
push
int3
xchg
js
adc
fs
js
push
fdivrs
pop
push
lret
jbe
sub
dec
jmp
mov
dec
cmp
psubw
jae
mov
adc
dec
jmp
push
sbb
stc
add
fistps
jecxz
jg
inc
fsts
cmp
mov
inc
lds
sbb
inc
clc
push
pop
sbb
push
adc
notl
lods
lds
jl
and
insb
push
rorl
push
lock
inc
mov
loop
dec
roll
inc
cmp
mov
dec
outsb
dec
pushf
in
jne
outsl
popf
outsl
ja
and
lret
jecxz
sub
ds
adc
shl
loop
popf
add
cli
rcr
push
test
jl
ss
int3
fists
das
mov
push
lahf
adc
xchg
push
mov
inc
inc
loope
cmpsl
add
lock
mov
in
mov
cltd
cltd
mov
aaa
jmp
mov
push
jbe
clc
jge
cld
mov
inc
mov
mov
xchg
xor
sub
jle
lds
mov
xchg
dec
mov
push
mov
push
aam
addr16
push
cmpsb
xchg
lock
pop
push
daa
adc
pop
iret
fucom
pop
jae
xor
mov
dec
scas
lahf
mov
andl
imul
icebp
sbb
push
mov
pop
ljmp
shll
jl
mov
and
mov
stos
loope
addr16
test
cmp
or
pop
fsubs
nop
push
insl
repz
sahf
mov
mov
cmp
sbb
mov
adc
nop
add
mov
and
xchg
adc
add
test
and
mov
mov
mov
mov
je
pop
inc
sar
mov
rcr
xchg
incb
and
sbb
cli
pop
inc
cmp
jl
iret
inc
das
cmc
dec
sub
jb
mov
inc
sbb
pop
pop
into
xchg
mov
xchg
call
out
adc
pop
mov
sbb
pop
popa
in
loop
pop
adc
call
mov
lea
lock
add
xor
lods
pop
and
mov
inc
in
mov
rol
std
or
xchg
mov
div
and
dec
sbb
push
outsb
popl
inc
cmpsb
jbe
mov
ljmp
and
jmp
popf
js
addl
cmp
jbe
daa
push
inc
dec
xor
lcall
pop
scas
xor
push
incl
enter
xchg
loop
shll
stos
lods
bound
pop
out
out
sub
mov
push
jmp
sbb
lock
mov
mov
mov
push
aam
movsb
dec
clc
jge
pop
or
mov
aam
mov
pop
push
in
mov
imulb
sti
adc
dec
xchg
movsb
mov
dec
jp
lret
push
fistpl
sub
adc
mov
pop
xor
add
jge
aaa
pop
xor
es
inc
cmp
jo
push
jp
out
cmp
sbb
scas
sbb
xchg
mov
loope
out
xchg
lret
and
pop
xor
mov
repz
clc
scas
arpl
fdivrp
dec
repnz
push
and
pop
mov
loopne
mov
dec
cmpsl
or
lea
dec
shll
jb
call
push
repz
call
cltd
gs
jne
sbb
ljmp
rol
inc
ss
pop
imul
repnz
outsl
jle
jecxz
dec
lret
sbb
xchg
test
xorb
push
xchg
cmp
add
lret
dec
cmpsb
call
aaa
fldcw
push
mov
lcall
xchg
addr16
dec
lret
mov
pop
mov
or
repnz
or
dec
or
cmp
cmpsl
mov
inc
lock
adc
sbb
and
ja
shlb
ja
mov
pop
mov
mulb
das
in
dec
adc
lret
or
mov
icebp
ja
sub
pop
inc
ret
cmp
scas
orl
pop
xchg
mov
jmp
mov
push
cmp
pop
add
sarl
inc
fldt
dec
test
ret
mov
add
stc
repz
jne
and
imul
dec
jno
mov
daa
repz
pop
iret
lret
sti
push
and
xor
pop
notl
daa
add
stos
mov
xor
ljmp
mov
inc
stos
mov
pop
cmp
pop
push
sahf
cmp
sbb
call
ja
sub
jmp
sub
xor
mov
adcl
test
aad
out
lcall
inc
int
push
or
stos
les
adc
xor
stos
mov
push
insb
scas
aaa
or
arpl
lahf
mov
out
lods
outsl
inc
movsl
push
mov
mov
arpl
xor
ffreep
pop
xchg
dec
hlt
dec
into
mov
into
add
lods
jo
xor
loope
gs
lcall
and
sub
scas
jb
fs
add
lea
mov
fnstcw
cltd
inc
add
notb
jne
adc
lock
or
stos
jecxz
fnstcw
xchg
in
in
jl
in
or
cwtl
fucomi
scas
sbb
and
mov
push
dec
sti
dec
sub
lret
mov
mov
in
cmp
lods
pushf
rcl
adc
or
dec
xchg
rcrb
daa
fnstenv
or
call
mov
lods
adc
les
mov
test
or
xor
jge
xor
mov
push
adc
scas
xor
insb
mov
ret
and
sbb
gs
popf
insl
xchg
push
mov
mov
movsb
mov
out
add
jbe
xchg
add
sahf
xor
fmull
adc
je
insl
hlt
js
jns
inc
nop
hlt
inc
dec
inc
mov
leave
call
stos
mov
xchg
cmp
adc
lret
xchg
repnz
mov
sbb
xor
and
adc
dec
jb
sub
push
xor
sub
mov
pop
clc
xor
push
mov
clc
nop
xor
cmpsl
pop
add
mov
dec
cli
sub
add
hlt
test
push
inc
call
or
mov
pop
mov
cmpsl
mov
subb
xor
pop
or
negb
or
pop
pop
ss
xchg
lahf
adc
bound
add
jnp
enter
mov
dec
aas
cmp
adc
jb
lods
fildl
cli
ror
push
dec
mov
xchg
inc
fnstcw
mov
mov
xchg
stos
sbbb
mov
mov
cli
jle
popl
pop
mov
push
daa
out
insb
fwait
or
inc
inc
or
frstor
stos
std
call
pusha
lahf
jecxz
rcl
sti
xlat
fucomip
lret
popw
hlt
push
out
enter
jb
lods
and
add
pop
imul
dec
leave
pop
add
out
jb
pop
into
jnp
xor
sbb
xor
pop
fdiv
inc
leave
sahf
push
jmp
das
cmpb
pop
call
xchg
dec
fisttpl
ret
adc
shll
ds
push
lods
mov
jb
shrl
sub
dec
sarb
fldenv
pop
stos
mull
or
iret
repz
sub
mov
movsl
gs
movsl
or
xchg
ds
adc
jg
int
mov
cwtl
adc
bound
mov
sbb
cltd
pop
push
cmp
lods
sub
fcoms
data16
mov
pop
out
cli
insb
roll
pop
lock
or
outsb
xor
imul
or
pop
je
xchg
inc
xor
xorb
jno
aaa
iret
or
and
xchg
pop
xor
inc
inc
or
mov
add
sti
movsb
pop
mov
mov
mov
mov
mov
dec
das
mov
mov
jg
and
ficoms
cli
leave
mov
pop
jl
mov
lods
xor
fistl
in
sbb
mov
sarb
xor
int3
sub
xchg
std
cmp
int3
rclb
dec
bound
add
shl
aaa
mov
pop
pop
movsl
int3
outsb
mov
add
pop
int
sbb
cld
pop
pop
or
pop
insl
mov
push
adc
dec
cmpsb
inc
je
dec
jnp
and
mov
aas
xchg
jb
in
iret
daa
test
xchg
repnz
int
data16
xor
mul
jecxz
inc
test
mov
sub
idivb
sbbb
cs
stc
xchg
push
sub
inc
xchg
mov
lds
lret
inc
jne
inc
fstps
imul
hlt
es
adc
xchg
fdivl
flds
sub
add
xor
adc
dec
nop
stos
insl
inc
cs
lods
lahf
movsb
imul
add
dec
mov
cmpsl
mov
mov
cmp
bound
adc
xchg
sub
xorb
mov
inc
mov
popf
sub
push
add
jle
rol
sub
mov
mov
push
dec
jne
mov
xchg
cld
push
push
in
jae
cmp
and
inc
gs
dec
lea
test
jp
dec
call
mov
scas
outsl
push
cmpsl
sahf
mov
popa
add
pop
adc
push
sub
pop
dec
mov
in
pop
fmul
pop
pop
cmp
hlt
inc
bound
inc
inc
sub
push
inc
sbb
aaa
insl
pop
iretw
pushf
mov
sub
adc
je
je
inc
stc
not
jle
mov
loope
les
out
dec
jbe
jge
jmp
adc
scas
mov
nop
dec
and
jno
push
sar
dec
outsb
and
rcll
and
outsl
jecxz
lahf
xor
aas
pushf
mov
ret
xchg
shll
les
mov
bswap
xor
sbb
mov
inc
es
pop
or
mov
jo
add
ja
xchg
pop
shll
into
gs
cmc
xchg
out
adc
push
insb
mov
xchg
ljmp
sbb
mov
cld
pop
movsl
cmp
test
or
push
mov
sbb
test
pop
push
xchg
jo
inc
mov
ret
stc
inc
in
std
mov
mov
xor
mov
in
sub
out
xor
arpl
dec
nop
sbb
sahf
test
xchg
ret
mov
xor
test
push
jg
cmp
mov
jecxz
das
fdivrp
pop
jns
mov
xor
shl
add
inc
inc
push
lahf
adc
out
sbb
mov
xchg
and
adc
pop
roll
daa
add
leave
bnd
cmp
scas
pop
push
sub
fwait
popf
sti
add
jecxz
sti
out
sub
and
inc
inc
cli
push
mov
jecxz
xor
cmp
mov
and
jl
xchg
mov
xor
cltd
pop
cs
cltd
sub
xlat
in
pop
jnp
cmp
pop
mov
leave
jp
mov
inc
pop
in
mov
mov
lret
push
int
jo
roll
repz
dec
and
inc
mov
cs
xchg
or
std
nop
push
ficoml
push
pop
fsts
push
popf
mov
xchg
out
je
cmp
mov
jle
push
sub
adc
pop
sub
push
cltd
lods
mov
pop
mov
out
lds
ja
lahf
dec
cld
dec
mov
jg
loop
out
add
insl
fsts
sub
mov
pop
cmp
add
add
test
testb
mov
cmp
sar
push
lcall
jle
mov
xor
add
cmpsb
push
fcomps
jne
in
lret
sbb
pop
push
dec
and
fsubrl
jno
fsts
das
inc
xacquire
fnstcw
xchg
negb
push
out
std
rolb
aaa
bound
mov
pop
xchg
push
imul
shl
test
fidivrl
das
jnp
out
inc
inc
xor
loop
cmc
mov
es
gs
mov
stc
pop
cmpb
xor
mov
inc
pop
std
sbb
inc
ret
xlat
cmc
jl
cmp
push
imul
push
pop
and
dec
xchg
xchg
jae
fwait
imul
mov
xor
pop
pop
mov
out
and
sbb
mov
jg
cmp
or
dec
imul
negb
xchg
cmp
fcmove
pop
je
adc
pop
mov
ret
lock
mov
push
or
pshufw
jecxz
sbb
icebp
mul
insl
icebp
das
mov
dec
mov
ja
sub
sbb
sbb
mov
mov
jle
xchg
jl
mov
ret
arpl
cmpsb
int3
push
fs
and
insl
jo
inc
cmp
test
cmpsl
jge
call
leave
push
cmpsl
xor
int3
push
ja
add
test
into
imul
and
movsl
movsl
inc
xor
lods
dec
jae
rorb
dec
push
rcll
loopne
xchg
popf
mov
dec
fdivl
xchg
inc
stos
jmp
loop
sub
pop
fmuls
xlat
push
ja
jbe
inc
sbb
and
rcll
jns
cmpsb
and
cmp
fisubl
stos
mov
pop
out
mov
sbbb
sbb
aaa
or
or
and
lret
add
xor
mull
push
sbb
outsl
mov
out
out
mov
or
int
dec
out
repnz
test
cmp
mov
and
cmpl
popf
pop
mov
fs
dec
outsb
sub
jae
mov
arpl
mov
jge
leave
xor
int3
mov
pop
inc
add
sub
insb
cmp
popf
or
fdivrs
fisttpl
pop
mov
sbb
add
test
repz
lock
rorl
xor
fucomi
dec
out
cmpsb
call
or
cs
sbb
or
xlat
in
cmp
adc
stos
lods
lcall
iret
scas
pop
imul
fsubs
inc
adc
out
jne
fadds
ljmp
rcl
mov
mov
mov
ds
push
xchg
test
cmp
ds
stos
pop
mov
cwtl
scas
push
jnp,pn
std
mov
or
adc
jmp
imull
dec
mov
test
insb
cmp
mov
rcrb
xchg
out
jne
push
in
dec
lods
xchg
cmp
es
or
xchg
adc
cmp
or
inc
mov
mov
mov
in
scas
adc
inc
lret
cmp
rclb
psrlw
mov
loop
sbb
push
popf
loopne
sub
adc
imul
push
sbb
sub
lret
mov
mov
out
sarl
mov
jo
xchg
insb
pop
mov
push
jae
lods
add
test
lahf
pop
loopne
leave
movsb
push
pop
inc
xchg
lods
push
jae
xor
scas
mov
jae
sbb
jbe
cmp
in
cwtd
add
push
sbb
aad
sub
jecxz
and
mov
icebp
clc
movsl
aad
lret
outsb
das
scas
pop
int
dec
pop
in
aam
push
clc
test
sbb
adc
or
dec
pop
sub
mov
popf
popf
fistl
mov
out
jg
repnz
out
and
and
std
fistpll
test
mov
movb
and
sarl
in
add
xlat
push
push
cs
lret
dec
pushf
addr16
movsl
pop
sbb
stc
inc
pop
popa
sub
pop
test
dec
mov
imul
cld
test
lods
adc
pop
fldt
cmp
sbb
xchg
or
iret
fcmovne
push
dec
and
out
loopne
leave
icebp
in
das
mov
lds
push
pushf
xor
mov
stos
std
out
aad
loop
loope
rol
jmp
aaa
and
shlb
popa
sbb
loop
fistl
addr16
cld
shll
cwtl
sti
xor
mov
pop
or
push
scas
add
xchg
pop
push
and
or
add
mov
jo
out
ficomps
add
and
xchg
ret
adc
fisubs
xor
push
adc
push
and
xor
ss
lahf
xlat
sahf
add
inc
add
inc
call
insl
int3
lds
test
test
inc
pushf
adc
movsl
mov
fsts
jno
add
loope
cmc
fistpl
test
push
jmp
imul
mov
or
pop
jmp
xlat
cmpsb
pop
mov
push
pusha
dec
add
icebp
pop
sbb
or
mov
test
mov
push
jle
or
das
enter
cltd
inc
enter
push
subb
xchg
jno
in
jg
add
sbb
out
cli
pop
sub
test
add
cmp
jnp
lock
mov
sub
mov
dec
addr16
stos
sbb
sub
std
arpl
mov
fdivrp
and
pop
test
cmp
mov
push
inc
xor
xor
mov
pop
mov
mov
pop
out
push
imul
mov
cwtl
es
out
pop
nop
call
cmp
out
call
ja
dec
dec
imul
mov
addl
push
lods
pop
fucompp
mov
inc
cltd
fsubl
bound
and
xchg
ficoml
int3
lcall
push
xchg
xchg
scas
mov
fucom
ds
add
outsb
outsl
stos
aaa
ja
jo
cmc
adc
or
xchg
push
shlb
add
cwtl
imul
pusha
ret
loop
stos
xchg
dec
fcompl
icebp
push
mov
ret
or
or
adc
jbe
int
repnz
cmp
out
pop
xor
push
pop
dec
adc
add
xchg
mov
and
ljmp
cli
sbb
xor
cwtl
nop
jmp
int
xchg
sbb
divb
das
daa
ds
aas
add
adcb
push
dec
push
subl
xchg
push
dec
mov
ret
scas
xor
fisubrs
sbb
mov
lahf
sbb
lea
dec
xchg
sbb
in
or
cwtl
jecxz
mov
pop
or
mov
filds
lds
inc
push
icebp
jns
or
sahf
out
insb
mov
pop
out
idivl
or
and
inc
in
lret
scas
mov
es
movl
lea
and
mov
mov
shl
fucomip
pop
cltd
mov
fnsave
fsubrp
aad
cmpsb
test
repnz
push
adc
jmp
add
es
pop
lahf
mov
sub
inc
add
ficoms
dec
cwtl
test
out
mov
sahf
mov
sub
clc
hlt
mov
add
repnz
movb
sub
je,pn
testl
addr16
insl
push
xchg
push
ds
or
dec
pop
pushf
add
add
sub
lods
jnp
or
les
or
repz
testl
or
or
dec
lods
aam
icebp
fwait
pmaxub
inc
or
sbb
cwtl
dec
pop
lods
xchg
enter
lea
sarb
leave
add
sub
pop
sub
mov
dec
enter
shll
jle
int3
loope
cmpsl
add
push
gs
cwtl
push
xchg
cld
xor
push
lret
pop
xorl
rcrl
add
shll
pop
or
jnp
inc
into
jb
aas
outsl
aas
lahf
in
orb
out
insl
nop
inc
xor
lret
out
mov
popf
mov
xchg
xchg
mov
hlt
sbb
pop
cmpsb
mov
xor
pop
mov
lcall
inc
jo
mov
lcall
fwait
stc
push
cmpsb
jl
xlat
jle
sbb
and
inc
addr16
mov
loop
push
ret
push
cli
and
pushf
inc
in
cli
rcrb
adc
in
es
adcl
lahf
xchg
test
and
scas
add
cmp
push
mov
jge
jae
out
jmp
repz
dec
fnstsw
insl
test
mov
and
mov
test
push
xchg
hlt
out
push
push
pop
sahf
into
fwait
es
mov
dec
test
into
and
cs
xchg
enter
ret
lret
xor
inc
pop
push
inc
xchg
rorb
xchg
call
mov
xchg
pop
sub
out
es
nop
int3
push
add
gs
and
adc
imul
inc
fs
std
aaa
rcrb
xchg
sarb
bound
pusha
adc
adc
jl
cmpsb
cmp
adc
test
mov
dec
jbe
inc
lods
mov
pop
xor
adc
sti
inc
daa
mov
push
out
js
add
repz
ja
fistpl
inc
iret
fxch
jge
insl
mov
dec
fisttps
mov
nop
jecxz
pusha
inc
xchg
mull
mov
or
aad
jns
push
xor
push
sub
decb
daa
xor
pop
arpl
mov
mov
mov
insb
popf
jge
jle
or
mov
imul
in
jle
inc
jl
jbe
cld
js
test
mov
jg
mov
mov
cmp
popf
add
cs
inc
daa
aad
divb
cmp
nop
mov
jns
cs
push
inc
loope
lds
in
mov
dec
dec
mov
sbb
push
out
cmp
leave
add
jle
xorb
stc
push
clc
mov
mov
adc
pop
sub
das
mov
mov
and
sub
adc
jl
insb
mov
xchg
insl
xor
jge
lds
xchg
jne
popf
call
pop
test
std
leave
mov
sub
push
push
adc
mov
insl
jnp
iret
add
cmp
and
and
cmp
outsl
mov
popf
dec
out
and
mul
inc
dec
push
mov
dec
insl
mov
testb
notl
adc
pop
daa
inc
call
xchg
mov
xchg
xor
enter
dec
rorb
mov
pop
punpckhwd
cmpsb
rcll
cmpsl
fimull
in
pop
sbbl
mov
sub
cwtl
fucom
mov
push
cmc
pop
jns
and
cmp
sbb
push
adc
in
inc
stos
pop
in
in
mov
movl
ds
insb
lcall
andl
xlat
jmp
es
dec
enter
call
sbb
inc
das
out
fistps
aad
mov
inc
dec
jb
or
pop
cmp
out
les
mov
in
pop
pop
fwait
loope
mov
arpl
dec
hlt
jno
push
shrb
mov
or
or
and
sbb
inc
inc
xchg
test
or
fwait
movsb
int3
lods
sbb
stos
push
jb
dec
pop
pop
sbb
icebp
adc
jbe
outsb
nopl
inc
popf
jg
scas
sub
arpl
fwait
sbb
xor
pusha
aad
push
push
add
ljmp
jne
enter
div
fdivrs
and
adc
cmp
xchg
xor
push
dec
mov
and
sbb
aam
std
xchg
pop
jg
mov
sbb
negl
fcomps
lret
out
jno
movsb
mov
test
shl
fs
or
xor
in
ja
mov
or
frstor
in
stos
mov
adc
jae
lods
pop
dec
addb
mov
adc
jbe
jae
orl
push
cmp
popl
adc
mov
int3
and
and
xchg
enter
mov
test
out
jns
fcmovb
xor
adc
inc
mov
push
jmp
hlt
cs
imul
in
pop
loop
enter
mov
inc
stc
inc
fildl
push
xor
cmp
xor
xchg
dec
cmp
fst
test
out
shll
cmp
hlt
jg
push
adc
loope
test
xor
mov
mov
mov
pop
xchg
cltd
mov
sub
xchg
mov
inc
insl
inc
test
ret
shrb
adc
sahf
and
imul
lods
sbb
clc
xor
jbe
sti
inc
push
pop
cmp
and
out
jnp
cmp
cmp
lahf
sbb
leave
movl
jp
addr16
in
ret
jae
add
lea
mov
das
lds
jg
outsb
sbb
ficoms
sub
out
or
or
test
jmp
push
sbb
mov
mov
fucom
push
dec
jns
cli
out
lahf
out
xlat
imul
cmp
and
jb
fistpll
jae
lock
mov
push
pop
lahf
adc
test
lock
cmpsb
movsl
sahf
inc
call
std
dec
or
sbb
pusha
sbb
jg
icebp
icebp
push
mov
jbe
cld
mov
mov
pop
xchg
lahf
jmp
pop
push
loop
icebp
leave
sbb
daa
mov
cltd
fistpll
jbe
and
mov
ja
add
pop
cmpsb
sub
inc
cld
xchg
fwait
mov
test
cmp
xchg
sub
stc
bnd
stc
iret
jnp
aaa
or
ja
lods
xlat
mov
fcmovbe
xchg
sahf
in
fs
pop
push
mov
into
sub
stc
or
stos
add
cmc
leave
and
lcall
add
lret
lods
cmpsl
ja
dec
cld
sbb
sub
lcall
sub
rcrl
push
je
aaa
cli
pop
mov
in
or
int
subl
fsts
xor
and
xor
outsl
lret
push
fucomi
ss
or
icebp
mov
adc
fidivl
push
mov
std
mov
ret
jno
push
push
jp
lahf
sub
sbb
mov
adc
or
sub
jnp
xor
aas
or
sbb
scas
add
sbb
ljmp
fmul
push
pop
dec
push
mov
xlat
sub
gs
stos
xchg
cmpps
mov
pop
insl
stos
mov
andb
les
pop
mov
push
gs
pusha
popl
mov
xor
jns
pop
lods
cmp
jge
fmuls
push
test
ror
ret
mov
or
lods
push
jne
push
test
pusha
push
or
aas
lret
mov
les
jle
test
dec
push
loop
popf
sbb
mulb
cwtl
mov
sub
and
loop
lods
or
paddsw
cmp
or
inc
gs
scas
imul
dec
jge
jmp
sbb
sbb
or
push
shrb
dec
dec
push
mov
adc
icebp
lahf
hlt
xchg
popa
cmc
fs
ret
repz
imul
sub
jb
mov
lea
pop
cltd
int
andb
add
mov
js
inc
negb
jae
outsb
pop
adc
mov
mov
xor
xchg
aad
cmp
pop
xchg
inc
pop
sub
fstl
push
dec
test
int
in
in
add
ja
cmpb
cmp
test
sub
lods
inc
and
test
inc
push
ret
addr16
movsb
or
mov
adc
subl
int3
outsl
mov
jne
fidivs
xlat
mov
or
fimull
stos
xor
or
and
call
lret
pop
mov
loop
addb
std
pop
inc
dec
cmovb
xchg
mov
adc
xor
add
into
les
fistps
daa
loope
fcomip
mov
inc
lahf
data16
xor
repz
shll
mov
jne
andb
addr16
enter
aad
repz
sbb
inc
cmpsb
lret
out
jb
out
leave
adc
add
push
fidivrl
ret
popf
or
push
pop
xor
push
inc
fabs
out
imul
popf
test
xor
mov
mov
shlb
rcrb
je
mov
aas
sbb
mov
stos
icebp
and
sub
mov
mov
xchg
cli
arpl
test
filds
bound
xor
call
lock
test
mov
inc
adc
mov
cmc
sbb
cmc
mov
fwait
push
sbb
lods
mov
inc
dec
inc
scas
mov
cli
adcb
das
dec
les
popa
mov
pop
cwtl
jnp
pop
decb
or
add
je
lea
cmp
ret
pop
pop
sbb
addb
or
mulb
jne
push
popl
push
mov
mov
outsl
jne
dec
cmpsb
enter
pop
ficompl
push
or
pop
negl
shrl
pop
sbb
stos
lods
mov
repz
lea
inc
mov
dec
mov
repnz
cld
push
outsl
cmpsl
rolb
dec
sbb
loopne
dec
pop
dec
inc
hlt
xlat
mov
mull
es
les
xchg
cmpsb
data16
sub
dec
clc
jno
add
lds
pop
popa
xor
clc
pop
mov
or
jnp
es
shll
mov
sahf
jge
popf
andb
leave
pop
gs
mov
and
fbld
push
cmp
stos
shll
repz
jo
pop
fs
jno
es
inc
loop
mov
fstpl
cmp
adc
adc
dec
mov
lea
js
sbb
mov
test
jns
and
test
adcl
mov
sbb
ds
or
fs
pop
inc
fidivrs
clc
sbb
xchg
mov
aaa
mov
sti
inc
stos
or
cmp
rep
xor
cmp
push
lods
sbb
aam
sbb
pop
lock
adc
sub
gs
aad
add
push
js
jb
in
inc
fwait
sub
mov
rep
adc
sub
xchg
sbb
or
mov
mov
inc
mov
push
aas
scas
xchg
lods
jle
fwait
jae
pop
test
jno
and
ja
mov
mov
xor
test
or
pop
sub
sub
imul
or
or
push
and
cmp
fs
xchg
std
mov
dec
and
mov
push
mov
xor
xor
inc
test
xchg
pop
fiaddl
scas
and
jns
push
jecxz
in
dec
or
and
adc
mov
das
or
cmp
popf
pusha
adc
cmp
fcoml
stc
push
cmp
aaa
xchg
cmp
dec
imul
aas
inc
add
pushf
push
sub
outsl
dec
and
sub
xchg
icebp
in
lds
or
inc
lods
scas
mov
aas
out
xchg
mov
cmp
mov
int3
add
add
ljmp
insl
inc
push
mov
push
cmp
ja
mov
pop
cmpl
test
add
ljmp
pop
push
xchg
sub
mov
jns
shrl
fsubl
enter
in
add
lds
add
dec
xchg
xchg
bound
loop
jmp
dec
or
mov
pop
lret
dec
sahf
xchg
in
std
push
mov
test
dec
negl
add
std
add
inc
ret
jnp
mov
movsb
jge
sbb
sahf
mov
outsl
frstor
xor
imul
push
in
dec
arpl
cmp
ja
inc
leave
inc
loop
iret
je
jno
bound
ret
dec
sti
add
adc
rcl
nop
arpl
adc
pop
cmpsb
push
loopne
shll
fbstp
fucomp
lahf
fwait
add
cld
jb
sbb
jl
add
and
inc
pop
mov
lods
dec
scas
mov
pushl
insb
into
lds
loope
outsb
jge
pop
lahf
cmpsl
xor
loope
dec
rcll
cmpsl
mov
pop
mov
sbb
mov
dec
or
xchg
lret
adc
int
pop
mov
repz
out
xor
push
xchg
mov
mov
popa
data16
int
cmp
leave
outsb
arpl
jecxz
les
inc
add
lods
repz
aaa
mov
sub
popf
add
and
or
mov
out
ljmp
add
mov
mov
ljmp
cld
leave
cmpsb
cli
inc
outsl
cmc
fs
sbb
dec
mov
push
int3
lods
cmp
sahf
lock
idivl
fmuls
and
mov
rorl
scas
out
dec
inc
cmpsl
cmp
mov
in
ds
lcall
gs
sub
push
pop
mov
dec
cmpsl
scas
shr
mov
loopne
hlt
pusha
push
lods
mov
fidivrl
decl
fisubs
pop
int
pop
popa
inc
mov
dec
push
mov
in
or
pop
mov
adc
in
or
aaa
pop
or
adc
sbb
sbb
dec
inc
dec
outsl
sbb
sub
jnp
pop
or
in
or
in
mov
test
cmp
imul
xchg
jne
dec
mov
mov
cwtl
lcall
in
fldt
outsl
mov
inc
cs
dec
loop
push
jg
mov
daa
nop
imul
pop
mov
and
inc
ds
clc
cmp
adc
jl
cwtl
jns
inc
test
or
icebp
push
lods
fwait
xor
in
stos
push
add
pop
enter
js
fldl2e
sub
fisubrl
dec
mov
les
xchg
pop
inc
cmp
ret
ljmp
xchg
sbb
xchg
sub
leave
lret
xlat
pop
stos
enter
jecxz
sbb
repnz
mov
addr16
mov
lds
cmp
pop
xor
pop
xlat
lret
push
call
add
jo
push
xor
and
pop
je
mov
or
enter
cmpsb
into
les
push
sub
jmp
xchg
mov
bound
pushf
mov
adcl
dec
mov
leave
add
gs
repnz
out
fdivrp
bound
sub
dec
mov
add
pop
mov
mov
insl
xor
sbb
into
jmp
cmpsb
and
pop
mov
mov
mov
je
xor
add
jnp
frstpm(287
aad
add
movsl
mov
fistps
add
lahf
mov
xchg
into
jp
adc
push
loop
fs
mov
xchg
jmp
addr16
stos
fsubrp
mov
add
rcr
sub
arpl
or
iret
dec
xor
dec
adc
bound
je
mov
call
es
in
ret
enter
lods
pop
xor
or
adc
inc
jp
and
xor
aad
jne
push
movsb
mov
loope
push
pcmpgtw
ljmp
xchg
xor
jle
call
mov
and
jmp
push
mov
daa
mov
mov
rcrl
sbb
imul
fisttps
mov
xchg
scas
ja
ret
das
ds
dec
icebp
xchg
addb
cmpsb
jb
fcmovnbe
xor
sti
inc
push
dec
sbb
hlt
inc
cmp
fld
sbb
xchg
movsb
lret
pop
dec
adc
lods
iret
pop
jnp
xor
mov
pop
ret
mov
rcll
and
fwait
sbb
and
lea
lods
sub
lods
adc
mov
mov
sbb
into
out
insl
data16
lcall
or
sbb
jmp
imul
jmp
movsb
mov
test
add
lret
int3
xchg
add
pop
sub
sbb
push
pop
into
repz
leave
andb
and
and
pop
sbb
ja
popf
and
jecxz
icebp
push
loop
iret
xor
cwtl
flds
dec
mov
lahf
stos
mov
repz
inc
or
imul
mov
sbb
gs
xchg
stos
cmp
cld
jae
arpl
ficoms
sahf
mov
lret
push
imul
fildl
test
movb
inc
and
repnz
ret
push
inc
iret
icebp
mov
dec
inc
jl
jne,pn
and
mov
clc
loopne
and
aaa
aas
and
insb
and
outsl
xor
cmc
outsb
adc
shl
fimull
in
or
sbb
add
loope
sbb
imul
mov
xor
idivl
xchg
push
push
pop
sbb
add
fbstp
add
daa
call
mov
xchg
add
xor
pop
push
adc
jle
push
ror
cli
mov
xor
push
sub
roll
test
imul
fsts
dec
popa
jmp
jle
mov
ljmp
fcompl
adc
mov
in
mov
in
imul
push
fs
les
xchg
outsb
mov
mov
push
pop
sti
enter
or
in
xor
cmp
sub
mov
gs
adc
outsl
movsb
pop
adc
mov
lahf
stc
shlb
sbb
bound
xor
add
lret
xor
mov
jb
in
ret
mov
inc
and
add
fcmovbe
adc
jecxz
cwtl
jo
xchg
mov
adc
jns
lret
or
xor
sbb
inc
ja
dec
mov
mov
inc
xchg
movsl
push
adc
aad
jne
jmp
fidivrs
arpl
xchg
loope
les
mov
ficoms
jmp
sbb
orb
aam
addr16
mov
imulb
sti
out
pop
aad
mov
add
xchg
pop
gs
adc
lahf
or
fwait
shr
lock
scas
push
dec
xor
jne
cltd
fstps
les
call
or
xchg
pop
pop
sub
xor
imul
call
cmpsb
int3
shlb
inc
push
mov
leave
ja
cmp
insl
dec
sbb
and
stc
popf
mov
dec
ja
int
shrl
nop
ds
adc
and
in
dec
scas
cmpsl
mov
dec
gs
and
mov
mov
repnz
push
test
das
jmp
loope
pop
in
daa
testl
sub
cmpl
jge
ljmp
call
mov
rcl
inc
jl
pop
pop
pop
xchg
inc
mov
mov
rorl
out
adc
aaa
lods
xchg
xchg
loopne
fstps
fiadds
sub
sbb
test
xlat
inc
push
xor
mov
je
lock
dec
xlat
add
inc
js
adc
outsb
and
lock
xor
mov
out
push
je
lods
mov
sahf
sbb
insb
add
negb
cmp
dec
mov
jo
push
add
pop
or
loop
xlat
add
mov
or
sub
pop
pop
imul
out
pusha
cmpsb
pop
pusha
divl
push
stos
icebp
mov
orb
pop
pop
repz
dec
xchg
jg
mov
pop
cmp
push
lret
cwtl
mov
mov
sbb
mov
push
insb
cmp
jbe
daa
js
test
mov
dec
jle
push
and
xchg
sub
push
jp
push
cltd
sbb
dec
pop
shr
shr
and
out
cld
je
jp
rol
fcoml
push
mov
mov
negl
ss
add
lcall
iret
mov
mull
cmp
clc
push
dec
jmp
pop
je
adc
inc
xchg
dec
sub
sub
imul
mov
sub
inc
das
punpcklbw
cmpxchg
add
sub
leave
xor
cmp
pop
insb
jbe
mov
mov
dec
mov
cmpsb
sti
or
fsubs
cmc
or
xchg
popa
add
cmc
mov
leave
ljmp
pop
xor
call
pop
sbb
imul
rcr
aas
je
int
xor
cmp
xchg
jecxz
adc
jns
loop
outsb
sbb
push
cmp
shlb
sar
xchg
ss
sub
dec
pop
cmp
daa
addr16
xor
stos
jne
sbb
and
mov
dec
repnz
je
pop
out
dec
inc
mov
loope
loopne
sub
stos
movsb
inc
test
mov
notb
xchg
push
and
adcl
mov
ja
daa
rorb
adc
sahf
mov
cmp
test
sub
nop
cmp
mov
push
dec
jmp
and
lds
and
push
mov
shl
cmp
inc
or
in
jbe
pop
push
frstor
std
mull
sub
jnp
out
aam
enter
xchg
das
mov
repz
insl
inc
ja
enter
pop
sbb
aaa
xchg
push
cmpsb
pop
cmc
jge
sub
sahf
jle
mov
scas
loope
insl
fs
cmc
nop
push
add
ficomps
adc
sbb
insl
adc
cmp
js
test
push
adc
cmp
jmp
hlt
shrl
sub
lods
mov
xchg
jne
popa
push
mov
mov
ljmp
inc
push
jecxz
mov
push
cmpsl
jmp
add
adc
dec
scas
jp
push
adc
icebp
in
test
fmuls
and
jmp
scas
xor
sti
adc
cmp
ss
lods
loope
adc
daa
divl
jae
roll
cli
out
jnp
sahf
call
pop
nop
sbb
add
and
adc
into
cmp
jbe
testl
adc
push
mov
dec
and
sti
or
outsb
in
sbbl
test
add
rcrb
pusha
lods
mov
adc
jcxz
movsl
push
cmp
push
sbb
push
sbb
sub
cmp
cmp
shlb
bound
mov
jmp
arpl
lds
pop
cmpsl
outsb
lcall
pop
adc
fcompl
out
js
jnp
xor
cmp
iret
mov
pusha
push
mov
nop
dec
orb
enter
jmp
cmp
xchg
xchg
push
inc
inc
push
stc
xchg
lods
test
push
pop
js
scas
lods
test
je
mov
insb
xlat
loopne
or
leave
cmp
pop
fadd
ja
js
dec
out
inc
popf
mov
test
insl
dec
fiaddl
mov
lods
gs
loopne
adc
subl
xchg
push
adc
push
sbb
jecxz
jle
push
popa
jg
mov
sbb
lea
or
lret
xor
dec
push
and
mov
lods
push
pushf
sub
xor
andl
mov
sbb
xchg
stos
jno
jmp
clc
cmp
lcall
stos
mov
jp
scas
pop
iret
push
shrl
cld
or
pop
sbb
dec
int
mov
inc
push
pop
test
or
dec
scas
sub
out
out
mov
mov
jne
ss
in
lds
lods
mov
idivw
scas
jl
div
cmc
cmpsl
mov
jae
mov
xchg
pop
je
adc
mov
je
mov
notl
dec
test
ret
test
and
stos
push
sti
sahf
rcrl
xor
mov
bound
into
dec
les
cmp
int
mov
jb
mov
push
mov
cs
dec
mov
mov
push
fimuls
adc
rcll
mov
popf
sbb
sbb
pop
sbb
jnp
pop
sbb
cmpsl
and
dec
insl
pop
mov
jno
and
hlt
cs
adcb
mov
push
xchg
loop
lea
repnz
cltd
inc
inc
and
cmc
mov
mov
outsb
loopne
mov
push
aas
fldenv
add
mov
stos
cmp
test
or
in
repnz
sahf
xlat
repnz
cmp
cmp
ret
and
add
pop
adc
adc
add
pop
stos
sti
xchg
or
sbb
xor
idiv
sbb
mov
sbbb
pop
push
mov
ja
jmp
movsb
cmpsl
dec
popa
jo
test
sbb
mov
xlat
fldcw
and
pop
mov
pushf
cmp
lea
adc
fwait
mov
lret
add
int3
and
arpl
dec
pop
or
adc
cmpsb
je,pn
jbe
lods
jne
lcall
and
addb
mov
mov
mov
aam
ljmp
adc
gs
mov
sub
rol
sti
movsl
mov
insb
shll
add
popa
cli
cmpsl
out
int
mov
aam
mov
fldt
arpl
lods
popa
hlt
pop
nop
andb
cmp
fstl
adc
sbb
jmp
dec
test
inc
adc
fisubs
int
pand
enter
sub
xchg
sbb
or
jg
inc
mov
add
fadds
sar
xor
mov
and
add
mov
out
xlat
pop
pop
call
lcall
pmaxub
lods
inc
enter
das
lret
data16
mov
aad
inc
jns
adc
lods
repz
jecxz
pop
movsl
jmp
jns
clc
fsubl
and
aas
test
push
sub
aam
movsl
mov
jnp
inc
jmp
xchg
mov
in
out
push
dec
push
or
sbb
in
inc
mov
dec
repnz
push
pop
mov
xlat
rol
mov
xor
cvttps2pi
pop
sub
pop
mov
fimuls
xlat
call
cmpsb
stc
fdivrs
nop
test
pushl
aaa
sbb
hlt
mov
mov
sub
sbb
sti
push
inc
add
pusha
cmpsb
lock
fidivrs
test
nop
adc
repz
xor
cli
insl
cmp
mov
movsb
ljmp
sbb
add
rcl
lret
jbe
jne
iret
sti
cmp
sbb
scas
push
push
jbe
das
push
data16
push
lcall
fwait
stos
pusha
test
or
push
or
xor
les
pushf
mov
mov
rcr
inc
out
xor
dec
adc
hlt
sub
jge
cmp
hlt
ss
rorb
mov
fisubl
js
mov
cld
pop
push
insl
loope
push
mov
pop
lret
mov
adc
cld
pop
mov
dec
push
mov
adc
das
sub
fadd
imulb
test
ror
mov
test
stos
mov
insl
adc
in
dec
xor
and
push
mov
sub
mov
push
add
xor
xchg
sub
cwtl
mov
enter
adc
out
aaa
add
cld
test
sbb
in
movsl
cmpsb
test
jmp
pop
add
xchg
loope
push
push
les
xor
inc
xlat
test
adc
shll
movsb
hlt
imul
add
mov
dec
in
movl
sarb
add
and
mov
pusha
stos
sti
bound
fsts
hlt
mov
xor
cli
inc
fcomp
cmp
fs
xor
cmp
iret
shll
sub
jo
repnz
ror
popf
dec
lods
push
stos
push
mov
push
imul
dec
inc
sbb
lds
xchg
mov
aam
pop
push
andl
clc
lahf
out
icebp
cs
add
fs
mov
xchg
pop
and
mov
ret
rcrb
inc
hlt
rorb
aad
adc
ss
sub
add
xor
sbb
jg
in
mov
data16
cmp
dec
aaa
out
mov
dec
cmp
inc
in
pop
fsubs
loope
cwtl
jmp
push
fcompl
adc
fcomps
adc
push
aas
push
jmp
or
test
jecxz
in
mov
gs
push
push
inc
idivb
mov
lods
ss
pop
cltd
sbb
push
test
cmpsl
lret
inc
adc
adc
mov
inc
cwtl
lds
xchg
pop
divb
faddl
decb
imul
iret
ret
sub
jmp
jg
inc
mov
adc
bound
and
ss
out
out
dec
sbb
jnp
es
out
mov
int
arpl
in
jae
mov
push
insl
aas
mov
sbb
inc
mov
xor
cmp
push
out
dec
and
mov
idivl
lcall
std
pop
inc
mov
pop
inc
imul
mov
pop
mov
push
iret
out
test
mov
js
jmp
insl
xor
popa
adc
push
cs
pop
rcrb
inc
cmc
pop
lea
xor
cmp
test
dec
mov
scas
pop
sbb
or
je
outsb
lods
mov
mov
push
jb
ds
mov
push
stc
ljmp
cmpsb
je
dec
scas
mov
int3
lock
lcall
pmullw
inc
pop
stos
inc
mov
push
aad
adc
adc
jne
gs
and
mov
xlat
jno
shrb
add
shrl
and
inc
and
pop
push
mov
iret
fnstenv
fisttpll
ffreep
mov
push
adc
inc
stos
mov
xchg
add
aaa
int
mov
enter
and
xchg
jne
insl
in
mov
bound
repnz
nop
add
mov
and
cmp
jmp
inc
int
sbb
sub
inc
cmp
mov
cld
arpl
xor
mov
lret
pop
jge
and
test
xor
repnz
inc
push
fnsave
insl
mov
xchg
jo
adc
inc
movsl
and
inc
popa
pushf
out
stc
mov
stos
add
aas
dec
decb
pop
adc
dec
ds
fwait
cmp
ljmp
mov
xor
shlb
jp
mov
and
sbb
xor
pop
mov
push
push
out
sbbb
sub
leave
mov
in
idivb
mov
dec
leave
frstor
push
add
test
xchg
pushf
and
jns
aaa
inc
xor
ret
cmp
jecxz
shl
rolb
sub
test
mov
or
insl
pushf
and
fsub
sti
nop
mov
mov
xor
rcrb
lods
mov
push
xlat
ror
push
aaa
adc
outsl
inc
mov
cmp
sub
das
xchg
xchg
xor
mov
mov
cmp
int
or
icebp
loop
dec
test
jecxz
das
ret
jbe
in
imul
jecxz
insl
pop
mov
ds
xchg
and
lret
sub
dec
adc
lcall
and
sub
push
or
in
into
out
stc
push
shrb
adc
add
imul
pop
pop
xor
add
dec
mov
cmpsb
arpl
pop
inc
mov
int
push
jne
test
out
dec
sub
jns
cmp
push
imul
loope
xor
shlb
imul
in
xchg
and
aad
les
adc
mov
dec
bound
push
xor
mov
lret
ss
dec
adc
jnp
scas
sarl
mov
mov
add
inc
mov
cmp
xchg
ja
loopne
xchg
ret
dec
add
pop
clc
paddb
bound
outsb
xor
stos
jne
or
fnsave
hlt
aad
mov
nop
jecxz
lret
push
mov
or
pushf
add
xchg
test
push
jae
hlt
jecxz
je
xchg
subb
add
xchg
ret
js
dec
cwtl
push
cwtl
and
mov
ret
xchg
cmp
cli
movsl
adc
inc
mov
or
xchg
ja
adc
test
test
mov
repz
cld
lahf
sbb
fiaddl
stc
add
jo
pop
inc
fidivs
imul
lret
out
cmp
dec
mov
adc
movsb
in
int
es
ljmp
cmp
add
mov
fcomi
cltd
out
jo
mov
xor
mov
mov
shl
fldt
pop
cmp
loopne
adc
clc
jns
pop
pop
jp
pop
je
out
xchg
bound
fwait
ret
inc
in
addr16
inc
mov
jne
clc
xchg
mov
xor
pop
cmp
or
ljmp
ss
mov
inc
mov
mov
sub
add
je
mov
cmp
hlt
aam
and
pop
inc
pop
jne
cmp
loopne
mov
cmpsl
xchg
insb
aad
inc
and
push
pushf
lret
das
cs
cli
or
ds
gs
xchg
adc
es
cmpl
shll
cwtl
xchg
mov
scas
test
push
mov
sti
xor
mov
jnp
cmp
pop
fimull
jecxz
cld
sub
and
cmpb
cmp
xorl
rcll
and
call
inc
sbb
psubsw
jo
nop
sbb
ljmp
add
add
mov
add
adc
iret
dec
ret
inc
or
int
iret
pop
mov
mov
xor
jmp
loope
pop
mov
mov
pop
jge
cmpsl
shll
adc
add
push
lods
int3
ret
into
push
cltd
outsl
cmp
push
add
mov
sub
fwait
aaa
sub
inc
xchg
int
and
lods
lock
test
je
lock
cmp
lcall
xchg
sbb
lods
xchg
xor
cmc
mov
stos
sbb
mov
bound
pop
fldl
mov
xchg
inc
test
popa
repz
xchg
out
rorl
and
cmpl
dec
jbe
or
xchg
jo
xchg
ret
jae
ja
popf
inc
test
xchg
lea
lcall
sub
cmp
mov
or
mov
xchg
mov
cmp
mov
ret
xchg
movsb
add
fldln2
xchg
iret
cmp
sahf
test
test
jo
cli
aas
or
fisttpl
push
xlat
data16
mov
or
icebp
adc
outsb
jb
sbb
orb
addr16
or
clc
mov
sar
ja
push
inc
cmpsl
xor
mov
sub
pop
dec
jb
lods
inc
imul
hlt
in
mov
popa
mov
je
add
pop
in
inc
movsl
jo
sbb
test
dec
loope
mov
add
mov
mov
cltd
mov
adc
in
int3
push
int3
add
jmp
mov
aad
jae
jle
push
mov
in
mov
in
inc
lcall
pop
mov
xor
dec
fisttpll
sbb
loop
push
into
in
stc
mov
iret
mov
mov
das
pop
jo
movsb
xor
scas
hlt
jae
and
rcll
les
icebp
xor
jb
cli
cmp
dec
arpl
push
les
fbld
mov
pop
in
mov
sarl
mov
shlb
cmp
inc
lds
xchg
popf
lods
addr16
inc
nop
push
mov
fwait
or
in
lock
mov
mov
fsubr
mov
arpl
jnp
add
lret
iret
shlb
mov
ljmp
cmpsb
and
lahf
push
inc
xor
cltd
add
dec
xchg
jecxz
out
pusha
jg
or
mov
iret
pop
push
leave
jno
jge
into
mov
insl
mov
das
enter
ljmp
es
mov
insb
inc
pop
cmpl
cmp
es
add
pop
jecxz
sub
or
mov
xchg
bound
dec
test
scas
in
jbe
add
xchg
dec
stos
shll
lret
jae
push
mov
gs
int3
jns
popa
or
imul
jne
add
pop
xor
rcrl
xor
mov
or
in
scas
shll
shrb
pop
cmc
call
daa
add
adc
jno
insl
lret
ja
fildll
incb
pop
and
xor
and
test
clc
mov
sbb
sbb
mov
and
testl
hlt
xlat
test
and
lret
add
aas
push
sbb
or
ja
test
jg
enter
stos
div
dec
add
mov
rcrb
bound
mov
lds
imul
jae
mov
add
es
jl
fwait
movsl
mov
adc
loopne
cli
mov
jne
sti
pop
insl
cmpsl
into
pop
cld
or
lret
jle
sbb
mov
addr16
xchg
lods
imul
scas
jns
sub
in
fsubl
adc
add
leave
mov
xor
lods
xchg
stos
xchg
nop
pop
mov
and
test
aas
decl
and
mov
fcmovnu
ror
jns
lods
ret
inc
mov
sbb
xchg
xor
ja
xchg
out
popf
into
movsb
cwtl
mov
loope
adc
clc
testl
push
mov
in
adc
pop
int
adc
jecxz
nop
repnz
test
xchg
insb
std
push
mov
dec
loope
mov
push
cltd
daa
lcall
fdiv
adc
test
rcl
fs
push
mov
pop
shlb
lret
leave
mov
adc
jg
pop
and
jb
repnz
push
mov
push
jp
lea
ret
fildl
mov
sub
lret
test
jp
loope
outsl
inc
mov
out
adc
xor
shrb
fidivrl
out
adc
cmp
jns
mov
cmpl
adc
xchg
lock
aaa
push
jne
or
cli
jno
gs
mov
cmp
sti
scas
out
jge
push
lcallw
leave
das
jno
pop
icebp
xor
aaa
cwtl
bound
out
xchg
out
xchg
and
inc
sarl
cltd
imulb
fwait
cmp
xor
or
movsl
adc
mov
or
in
mov
inc
adc
pop
push
int
in
dec
and
mov
fs
daa
pop
jae
mov
inc
icebp
mov
inc
fsubl
sub
mov
xlat
or
sub
and
dec
jo
mov
xorl
jmp
inc
je
inc
jae
outsb
das
sbb
mov
jne
push
mov
add
push
sub
insb
loop
sbb
pop
aas
dec
sub
add
test
mov
mov
int
cli
mov
aad
stc
loopne
adc
ret
je
js
sbb
pusha
cmp
jbe
mov
and
aaa
cmp
pop
dec
scas
mov
add
jns
mov
test
or
in
int3
out
aad
loop
cltd
push
mov
pop
popf
mov
pop
aaa
ljmp
push
rorl
adc
movsb
sahf
jae
idivl
pusha
lahf
test
mov
lock
mov
push
sbb
nop
push
fstps
jge
int
xor
jmp
sub
les
pop
std
add
clc
sbb
xor
push
cwtl
sub
mov
hlt
adc
stos
and
outsl
lcall
pop
adc
decl
sub
xor
pop
pop
xor
mov
adc
int
push
xchg
daa
xor
mov
xchg
adc
push
cmp
imul
dec
pop
mov
jmp
adc
pushf
jb
mov
lea
mov
loopne
push
and
fildl
jae
xchg
fbld
mov
jbe
sbb
outsl
jo
cltd
in
dec
or
aaa
pusha
out
inc
or
out
pop
cmp
cmp
xchg
sub
jnp
dec
xchg
adc
aam
cmp
xor
mov
sub
pop
push
cmp
popf
divps
imul
or
push
dec
pop
jge
mov
inc
push
cmp
jmp
movsb
mov
fs
sub
insb
cltd
mov
mov
jp
jmp
adc
je
mov
fwait
aam
in
jnp
sarb
test
call
and
xor
je
push
mov
push
jnp
addr16
adc
mov
cmpsb
enter
loop
push
xor
and
daa
add
fldenv
push
mov
push
pop
sub
test
jle
out
in
mov
jmp
lcall
fsubs
inc
mov
fdivrl
imul
xchg
xlat
fs
mov
sub
sbb
and
dec
mov
inc
add
sbb
jp
xor
adc
or
imul
mov
mov
inc
sub
cmp
jg
enter
dec
sbb
jmp
xlat
int3
in
and
scas
mov
sub
add
xchg
fidivrs
cltd
sbb
aas
sub
mov
bound
or
xor
add
jg
inc
in
mov
xchg
aad
cmpsl
push
mov
or
sahf
dec
fwait
lret
test
clc
test
sbb
ja
dec
das
ficomps
insb
xor
mov
outsl
xchg
sbb
popf
outsl
lock
hlt
test
pop
ret
je
sub
fiadds
add
aas
mov
pop
les
dec
mov
inc
pop
jo
loop
push
cltd
jmp
pop
mov
xchg
and
xor
add
jne
loop
add
mov
inc
and
imul
adc
sbb
imul
push
xlat
pop
xchg
fcmovu
push
sub
decb
dec
in
out
pop
mov
lods
pop
adc
mov
loope
ljmp
int
pop
sbb
push
dec
dec
dec
jbe
add
scas
jae
mov
loopne
rolb
cwtl
and
int
arpl
push
jl
sub
stos
clc
push
mov
and
cmp
mov
jae
out
sbb
adc
mov
mov
aad
push
and
aad
push
div
cmc
inc
repz
dec
adc
xor
cmp
jno
pop
in
xchg
push
fidivrl
repz
lock
pop
nop
std
add
xor
inc
push
popf
int
mov
aam
mov
push
jo
ret
xlat
and
iret
jle
iret
pop
jge
insl
arpl
lahf
jecxz
xchg
call
cmp
mov
stos
xor
pop
lds
adc
fstpl
fildl
inc
mov
outsb
insl
and
add
fs
xchg
loop
sbb
je
imull
sbb
add
loope
inc
jb
loope
les
adc
dec
and
jle
fdivrl
jge
sub
cs
pop
scas
or
rorb
test
das
mov
test
je
adc
orb
fwait
inc
mov
mov
add
idiv
cld
js
dec
scas
addr16
pop
mov
je
cli
cmp
cmpsb
daa
add
pop
scas
pop
movsl
out
or
mov
insl
add
stc
lcall
mov
add
jae
adc
cmpl
inc
lds
sub
daa
pop
rorl
sbb
imul
add
inc
ljmp
das
fwait
xor
inc
push
xor
sti
pop
ljmp
aas
rclb
push
dec
lcall
aaa
addr16
xchg
cmp
enter
cmpb
xchg
lcall
sbb
in
mov
jmp
mov
inc
pop
mov
sbb
xchg
lock
xorb
hlt
or
push
loopne,pn
mov
shrl
dec
mov
loopne
mov
inc
jb
imulb
daa
insb
lcall
jns
sbb
mov
dec
cli
in
lret
inc
aam
inc
add
and
loope
add
cmpsl
loope
sub
enter
jp
outsb
push
test
xchg
ret
fstps
mul
jl
adc
lods
aaa
in
xchg
or
pop
add
jecxz
popf
jne
push
jb
dec
out
add
mov
mov
push
arpl
shlb
jle
push
outsb
mov
cs
fnstsw
push
mov
cmc
sub
je
sahf
xor
wbinvd
outsb
mul
subb
int3
add
les
cwtl
lret
jge
into
sub
dec
fstpt
kmovw
cmp
cmp
pop
incl
push
lret
es
out
dec
pop
flds
arpl
fcmovnb
pop
shlb
adcb
daa
push
icebp
cmp
pop
fimull
lock
pop
mov
insb
adc
sbb
jl
cltd
ja,pt
mov
xchg
insl
sarb
aaa
loope
mov
jbe
addb
sbb
mov
ds
push
inc
xchg
mov
sbb
mov
add
icebp
insl
sbb
cmp
inc
mov
stos
adc
pusha
mov
es
icebp
in
mov
cmp
call
test
adc
out
or
data16
imul
xchg
into
add
dec
stc
dec
inc
sbb
mov
xchg
aaa
lcall
mov
cmpsb
sar
iret
js
je
nop
jp
inc
lock
ret
loope
stc
xchg
lods
push
pop
dec
rcr
sbb
aad
mov
daa
test
mov
lock
jns
push
int
jge
dec
sub
cmpsl
or
cmp
decb
daa
mov
jl
stc
dec
div
loope
dec
adc
out
mov
and
sbb
lock
cmpsb
adc
xchg
mov
inc
jecxz
fstpt
push
dec
loope
mov
dec
out
test
lcall
cli
xchg
addr16
pop
pop
lods
std
cli
loope
ja
mov
mov
xchg
push
cmp
mov
mov
and
push
and
jge
mov
mov
addr16
cli
out
aad
lret
xchg
mov
imul
mov
jecxz
inc
mov
xor
pop
loope
popa
ja
mov
mov
mov
mov
dec
cld
test
jg
xchg
arpl
jecxz
sahf
jge
lods
cmp
lahf
movsb
mov
or
ljmp
verw
and
xchg
xchg
aad
dec
out
xlat
mov
push
push
mov
mov
les
fsubs
test
or
jns
ds
enter
lret
lock
sbb
pop
adc
es
jnp
shl
insl
mov
cld
sbb
xchg
bnd
mov
mov
out
rorb
sub
xor
dec
daa
imul
lret
fistl
shr
xchg
mov
and
ret
sbb
cmp
or
sbb
iret
repnz
xchg
bound
sub
pop
cmp
fisubl
scas
inc
inc
inc
mov
xchg
ss
fwait
dec
xor
pop
scas
xor
test
pop
and
and
fs
jns
xor
inc
arpl
inc
ja
xor
test
repnz
jge
lock
mov
xchg
jmp
or
loope
xchg
push
dec
shrl
aam
cli
mov
es
jo
int3
xchg
add
call
dec
fs
jl
xor
mov
push
sub
pop
sarl
sbb
in
fsubrl
pusha
arpl
xchg
fidivl
add
popa
mov
cmp
pop
mov
add
icebp
mov
jge
jge
dec
inc
in
and
nop
ljmp
dec
sbb
insb
addr16
stos
pop
ljmp
sbb
lods
cmp
inc
rcll
pop
jecxz
into
popf
dec
xchg
lret
dec
fnstsw
int3
enter
mov
inc
pop
dec
stos
mov
lahf
cmpsl
rcl
and
add
xorb
and
mov
add
jle
mov
mov
out
lret
push
int3
push
mov
lret
lock
push
sbb
gs
pop
add
or
sbb
jecxz
jge
lahf
pop
push
dec
in
popa
push
imul
mov
jmp
test
inc
pop
sub
dec
ss
adc
sub
xor
xlat
scas
stos
test
iret
out
xchg
sarl
bound
push
scas
sahf
pop
test
jge
push
cmc
addr16
jg
rolb
cmc
sbb
add
sbb
jno
lcall
ljmp
clc
dec
test
sbb
outsb
push
xlat
lahf
sub
fnstcw
dec
repz
shrb
push
xor
or
shll
mov
lret
mov
dec
fwait
mov
cmp
ror
xchg
cmp
mov
xchg
fcompl
pop
adc
xlat
sarb
xorl
mov
sbb
lcall
addb
xor
mov
add
subl
dec
and
movsl
pop
movsb
pop
ja
jo
divl
test
mov
fmull
push
jecxz
xor
pop
lcall
inc
int3
dec
dec
jl
jp
adc
mov
mov
xor
fistl
test
jns
sub
arpl
push
sar
clc
dec
cmp
sahf
shlb
insb
or
cmpb
adc
push
les
jbe
int3
aam
xchg
pop
xchg
jmp
cltd
popa
test
sahf
jp
mov
test
addb
sub
rorb
xchg
rcll
mov
inc
pushf
sub
repnz
imul
mov
push
sbbb
out
jo
lods
scas
leave
mov
test
nop
mov
bound
adc
jno
xlat
idivb
sub
or
xchg
and
sub
test
xchg
xchg
and
add
sub
insl
dec
dec
dec
dec
lods
out
push
rcrb
or
sbb
dec
push
xchg
movsb
cmp
jl
pusha
shl
xor
add
clc
push
mov
out
sarl
pop
loop
cmp
sub
mov
sub
enter
jecxz
xchg
iret
jp
sbb
addr16
jmp
scas
inc
insl
movsb
sbb
cmpsb
fnsave
lock
sbb
xor
cmp
mov
data16
xor
sub
and
or
loopne
or
xchg
inc
inc
lods
sub
mov
daa
test
daa
aaa
mov
push
mov
ret
iret
mov
mov
insl
lret
fstps
sbb
xor
pop
cmp
das
and
jp
je
int3
cmp
push
mov
out
pop
pusha
hlt
dec
jmp
out
mov
hlt
jp
mov
outsb
movsl
dec
pop
push
in
push
mov
jo
add
fisubrl
cs
bound
jb
dec
push
adc
pop
inc
push
cmpsl
push
out
jmp
loopne
inc
jge
faddl
test
xor
imul
jae
inc
or
mov
add
jbe
jb
jnp
dec
push
push
inc
aam
sti
gs
cmpsb
sbb
jg
ret
jg
cmpb
pop
popa
dec
std
push
push
and
iret
dec
iret
movsl
jge
mov
dec
and
dec
int3
in
inc
lret
and
mov
lods
nop
das
jo
ficoml
int3
test
xchg
push
mov
push
mov
add
das
dec
scas
mov
xorl
fwait
sbb
jmp
xor
inc
movsb
in
dec
cmc
dec
mov
push
bound
scas
int
mov
push
pop
lds
out
outsl
push
and
sub
xor
xlat
push
jle
test
or
mov
and
outsl
mov
shl
scas
fisttpl
lock
int
rol
dec
jno
add
sub
and
and
scas
movsl
pop
int
push
mov
add
bound
mov
ljmp
insl
jo
and
test
shlb
out
dec
loope
call
imul
sbb
test
xchg
mov
dec
sub
sub
je
std
mov
arpl
ficoml
mov
aaa
insb
dec
mov
push
cld
dec
jb
fdivrs
and
mov
imul
add
xor
push
out
lock
stos
lahf
lret
stos
ss
mov
sbb
pop
test
cmp
adc
mov
test
xor
stos
cmpsl
mov
add
out
sbb
sbb
fisubl
mov
or
cwtl
ja
mov
xor
icebp
dec
inc
leave
sub
mov
fisttpl
jae
sahf
jge
pop
mov
add
cmc
cmc
into
sbbl
arpl
mov
icebp
out
out
xchg
xchg
je
outsl
jns
lret
cmp
pop
aas
inc
aad
and
push
sbb
scas
jne
data16
sbb
fsub
and
dec
cmp
cmp
add
pop
pop
ja
ljmp
jo
cmp
push
out
mov
push
pusha
stc
inc
dec
cmc
hlt
ret
mov
jg
sarb
negl
imul
and
gs
movsl
clc
sbb
sarl
jmp
fwait
enter
js
gs
jg
mov
add
sbb
js
push
pop
rcrl
dec
das
cmpsb
sti
pop
sbb
mov
push
loop
mov
sbb
subb
std
xlat
jle
mov
stos
jle
add
fsubl
adc
aas
sahf
add
push
je
jp
aaa
mov
ljmp
insl
mov
ffreep
sbb
lahf
into
xor
pop
mov
rcll
inc
mov
lods
cmp
jp
cmc
ja
imul
test
inc
push
adc
dec
jmp
sti
push
fbstp
sub
pop
stos
fstps
test
pop
cmpsb
loope
jg
lcall
adc
out
mov
sbbl
jae
inc
and
loop
sbb
dec
jae
mov
mov
pusha
pop
ljmp
mov
mov
negb
imul
mov
pusha
jp
in
jmp
jno
xchg
outsl
out
mov
pop
insb
adc
test
shlb
pusha
testl
mov
mov
ret
sbb
lock
orb
mov
push
repnz
scas
cmp
test
sarb
push
push
std
fidivrs
xchg
enter
dec
shrb
sub
sub
fsts
fsubs
mov
mov
mov
add
pop
jp
iret
mov
pop
leave
cwtl
dec
in
imul
sbb
pop
pop
xchg
xor
push
lods
pop
or
xchg
lods
stc
mov
nop
or
push
pop
adc
add
inc
cmp
pushl
ror
dec
pop
jbe
adc
test
in
fdivl
les
and
xor
test
mov
mov
es
int
rcrl
shll
test
fcmovb
inc
inc
push
pop
push
inc
inc
and
inc
movsl
bts
in
insl
sahf
or
mov
or
in
xchg
xchg
mov
sbb
adc
bound
jp
test
add
sub
fnstsw
add
loop
sub
mov
and
mov
hlt
scas
mov
cmp
add
testl
shll
or
aaa
sbb
xlat
sti
outsb
into
scas
fidivrs
lds
push
outsb
loop
adc
jl
aam
jns
add
pop
lods
aaa
cmp
push
mull
sub
sarb
dec
loop
dec
loopne
mov
pop
mov
mov
add
mulb
xchg
jl
adc
fcomip
mov
mov
push
mov
sbb
fdivp
pcmpeqd
and
testb
add
dec
inc
add
adc
add
xor
add
inc
add
lret
jb
add
inc
xchg
das
sub
cmpsl
pop
ficoms
lods
mov
lds
mov
mov
mov
lods
push
adc
mov
out
daa
imul
xchg
popa
mov
stos
xor
sbb
dec
dec
aad
out
mov
mov
ljmp
sbb
xlat
int
int
out
jle
mov
int3
push
xchg
enter
aam
enter
inc
mov
leave
mov
mov
sahf
xchg
mov
jae
rorb
test
out
mov
xor
cmp
adc
and
popa
cs
mov
dec
and
xchg
movsb
pop
mov
nop
popa
test
out
xchg
mov
lds
insb
lock
sbb
mov
enter
push
push
xor
outsb
or
icebp
loope
pop
insb
test
jge
mov
je
cs
testl
movl
dec
insl
pop
xchg
mov
inc
sub
stos
fistpll
inc
mov
adc
iret
loope
insl
std
mov
rolb
jmp
ja
je
imul
add
dec
out
jle
add
aad
mov
sbb
mov
mov
sbb
aas
adc
shl
loop
dec
add
repz
or
int3
outsb
mov
xchg
inc
stc
pushf
adc
mov
insl
call
push
pop
gs
xchg
mov
ss
das
mov
mov
inc
sub
in
mov
js
repnz
sbb
cmp
pop
pop
add
pop
pop
rolb
mov
pop
mov
jge
mov
jbe
sbb
and
pop
or
mov
adc
jmp
push
out
jecxz
cmp
push
fs
xchg
mov
mov
sahf
sub
rolb
inc
jns
pop
xor
push
fdivrs
mov
push
dec
jbe
adc
push
dec
out
add
lds
insb
dec
cmpl
cmc
cltd
orl
inc
enter
inc
jp
cs
arpl
mov
add
and
sub
shr
cmpsl
or
icebp
lock
popa
push
fld
ss
popf
and
fidivl
cmp
jb
scas
sarb
add
stos
add
add
je
mov
push
jbe
mov
push
jns
pop
xchg
xchg
mov
cs
cmp
cmpl
xor
cwtl
orb
sub
lret
and
adc
scas
lahf
sahf
pop
aad
cwtl
pusha
push
divl
lret
jnp
xorb
and
aas
push
cmp
push
or
in
mov
and
sti
or
shl
jne
sub
push
mov
mov
ljmp
and
cmpl
das
cmp
add
lods
cmp
fiaddl
jne
fidivl
shll
add
xlat
fisttps
push
xor
arpl
mov
jg
xor
pop
xor
pop
jo
mov
pop
test
nop
out
dec
faddl
and
popf
mov
in
cmpl
jne
mov
es
sub
ljmp
cmpsl
stos
popf
out
repz
sbb
sub
aam
pop
xchg
add
pop
popf
daa
add
loope
movsl
ffreep
jecxz
in
dec
add
popf
cmp
stos
je
mov
jl
jbe
mov
cmp
inc
inc
ss
dec
fdivrs
or
into
repz
or
mov
lcall
xlat
mov
xchg
dec
cmp
pusha
dec
pop
cld
lahf
mov
mov
pop
mov
xchg
cmp
ss
xchg
orl
cmp
push
fwait
fwait
in
je
insb
sbbb
and
cld
adc
adc
out
push
push
jns
and
outsl
adc
or
xchg
in
mov
outsl
movsb
mov
fdivrs
push
and
sbb
pop
and
popa
fsubrs
xchg
mov
icebp
xor
stc
aaa
or
lods
shlb
enter
sub
shlb
mov
xor
xorl
inc
cwtl
jno
imul
mov
and
mov
pop
sbb
in
lods
std
pusha
out
test
testl
in
aam
adc
cmp
adc
movsb
jae
clc
push
push
cmp
pop
cmp
into
les
and
cmp
data16
into
gs
or
mov
mov
mov
mov
ja
mov
sbb
dec
cmpb
or
xchg
js
cs
sahf
sub
cld
mov
ss
pop
sbb
sub
cmp
mov
mov
call
cmp
mov
pop
test
movsb
xor
mov
push
test
push
adc
ror
fsubrp
lcall
shrl
adc
outsl
dec
and
aam
scas
adc
ret
adc
cmp
mov
dec
or
pop
data16
mov
cmpsb
mov
mov
out
jnp
lret
xchg
inc
and
pop
mov
pop
inc
shll
jle
sbb
inc
lock
mov
xor
mov
in
movsl
je
mov
dec
inc
ss
push
ds
loope
pushf
cmp
ja
pop
ffree
jecxz
inc
pop
test
push
sbbl
jecxz
dec
outsl
movsb
adc
out
jae
cltd
push
mov
enter
jp
adc
lods
mov
pop
fisttpl
pop
push
iret
mov
xor
jne
cmp
cld
lret
adc
cs
ja
lcall
xchg
ret
lea
cli
add
cld
stc
dec
shll
dec
add
jp
int3
inc
or
mov
shll
in
or
or
out
dec
xchg
fisubl
mov
lret
clc
scas
jae
mov
inc
or
pop
cmp
sarb
cli
xchg
mov
jmp
xchg
xlat
fwait
loop
add
cmpsb
movsb
ret
cmpsl
dec
xor
cmp
mov
push
lcall
inc
dec
fiaddl
decb
aam
out
or
in
dec
jl
cmpl
pop
loope
mov
in
pop
push
mov
xchg
mov
movsb
dec
mov
xchg
pop
or
pop
cmp
fcoms
adc
shrb
dec
cltd
dec
cmp
pop
stos
andl
loopne
mov
lods
or
sbb
stc
out
mov
pop
movsb
outsl
gs
lock
iret
bound
jnp
shlb
loop
test
add
add
repnz
rcll
cmpsb
ja
xor
xchg
cli
xchg
xor
pause
ret
test
sub
int3
mov
dec
xchg
lret
or
dec
test
sbb
aad
xor
testb
mov
outsl
mov
cli
and
or
test
mov
add
decl
sub
xchg
stos
mov
or
mov
inc
shr
clc
fld
in
mov
adc
mov
jae
lods
mov
and
mov
lret
inc
xchg
push
mov
cwtl
mov
pminub
jle
mov
mov
push
sbb
and
daa
adc
xlat
stos
js
jo
ret
dec
mov
jp
pop
lahf
inc
scas
shl
sarl
fnstcw
push
adc
jae
adc
or
aaa
vpshab
in
out
dec
imul
or
sub
sbb
or
push
push
add
loope
cltd
lods
pushf
movsb
xor
push
pop
jmp
push
pop
jno
xchg
lds
or
sbb
pop
bound
js
lods
lcall
jne
push
addr16
push
imul
xchg
mov
decb
jb
aad
pop
jns
lods
and
out
addr16
and
and
add
loope
inc
imul
orl
xor
fidivrl
fbld
jns
mov
xor
sbb
je
xlat
jmpw
cmp
shrl
mov
adc
pop
push
imul
lret
add
cmc
aas
int3
sub
cli
mov
pop
mov
cwtl
mov
fnstcw
xchg
jecxz
ds
inc
jbe
jmp
bound
loopne
aaa
cmp
mov
lods
jle
jo
repz
jns
loope
shrl
cmp
push
shrb
sbb
adc
gs
inc
dec
out
cmp
dec
jae
jl
xlat
fists
dec
cmp
test
das
or
push
push
aaa
sub
testb
adc
repz
mov
imul
fwait
es
loope
sub
ljmp
cs
roll
push
dec
std
aaa
add
jg
push
mov
stos
mov
xor
mull
cmp
js
inc
and
jmp
and
xchg
cmc
dec
mov
pop
mov
pop
dec
popf
fcomps
cmc
jae
cs
pop
push
dec
xchg
mov
cmp
jge
js
cmp
mov
insb
out
mov
jbe
rol
lds
dec
mov
popf
push
push
dec
sbb
lds
adc
jl
push
jmp
or
jmp
ljmp
jae
lret
jp
mov
popf
hlt
mov
adc
sar
test
fnstenv
sub
imulb
pop
sbb
push
jbe
dec
push
ret
inc
fisubrs
rorb
adc
jge
push
jno
pop
xchg
ss
js
jbe
in
call
cltd
push
pop
fisttpl
xchg
or
lret
xchg
add
jae
and
pop
add
xchg
push
jmp
js
mov
insl
aas
mov
cmp
aad
add
icebp
movsb
ljmp
dec
int3
clc
int3
pop
fwait
and
dec
mov
movsb
adc
xor
aaa
push
and
cwtl
adc
stos
push
cmp
mov
out
mov
into
jg
fwait
pusha
mov
sub
sti
xchg
cs
daa
or
cmpsl
das
fs
xor
ja
push
gs
cmp
add
popa
mov
push
xor
xchg
icebp
test
sub
arpl
scas
jle
xchg
sbb
adc
xchg
pop
dec
mov
adc
mov
lcall
in
ss
in
rorl
mov
push
mov
into
mov
pop
mov
or
push
mov
jb
pop
mov
mov
adc
add
repnz
std
push
inc
xor
fmul
adc
cwtl
sbb
lcall
jp
psubb
cli
movsl
mov
movsl
jnp
dec
fsubl
mov
jl
dec
ljmp
dec
mov
scas
je
xorl
jno
jne
fstps
iret
add
pushf
ljmp
mov
cmp
push
ds
jo
pop
out
and
push
and
std
sbb
ljmp
fdivrs
aad
xlat
xor
sarl
gs
sbb
je
aad
test
clc
scas
mov
push
iret
adc
inc
mov
or
inc
inc
inc
push
cmp
xlat
cltd
out
test
sub
adc
mov
mov
sbb
mov
popa
mov
jp
aas
bound
inc
or
mov
cmp
loop
xchg
out
dec
lds
imul
popa
jecxz
push
mov
ljmp
and
neg
mov
mov
add
inc
int3
inc
jecxz
dec
xchg
int
push
clc
push
xor
and
adc
movsb
xor
pop
cwtl
out
push
jo
das
mov
ss
sbb
mov
mov
jg
adc
nop
pop
sbb
out
push
sbb
push
ss
gs
movsl
les
xor
pushf
push
push
aaa
push
andl
ficoml
addr16
lret
xchg
lahf
mov
ret
sub
roll
jbe
ds
enter
and
jb
clc
rorl
shlb
xor
jnp
xchg
inc
mov
push
lret
xor
test
adc
adc
int
mov
inc
mov
pushf
sub
cmpsb
dec
mov
lods
xchg
inc
cwtl
and
addr16
ficoml
sub
cld
mov
aam
dec
jo
pop
leave
movsl
sbb
insb
pop
mov
lods
xor
je
je
mov
and
mov
add
or
or
pop
movsb
sbb
push
into
movsb
ja
fdivrl
in
inc
scas
les
and
jmp
lock
loop
test
sub
les
cld
shl
imul
push
mov
divb
and
fidivs
ret
loop
or
mov
sub
lret
dec
jg
loop
test
sbb
cmpsb
rol
sub
imul
js
rolb
out
cwtl
fldl
sahf
stos
dec
mov
jo
xchg
or
cmp
sub
ss
pop
mov
cmp
xor
in
and
in
or
xlat
loop
pop
hlt
das
pop
sbb
das
ss
outsb
rcrb
cli
fs
cmp
mov
xchg
jne
aaa
loop
push
icebp
mov
enter
adc
xchg
xchg
xor
sbb
jno
in
fldt
gs
outsb
dec
mov
fcomps
mov
ja
in
pop
jp
dec
loopne
js
insl
repz
dec
xchg
mov
call
mov
std
gs
jle
mov
andb
scas
inc
out
faddl
cmpxchg
add
jns
xor
sub
out
sub
lods
mov
lret
imul
mov
mov
aam
or
jb
frstor
xor
movsb
cmp
enter
es
hlt
daa
mov
cmp
mov
aaa
clc
jbe
mov
insl
sahf
jnp
sbb
loope
pop
subl
lret
add
pusha
pop
notb
dec
mov
push
rcr
popf
jle
pushf
xor
dec
pop
xor
js
mov
and
std
cmpsb
sub
repnz
push
mov
mov
je
cmp
xor
xor
add
adc
jns
pop
push
lret
jno
sbb
mov
cmp
pop
push
movsb
outsb
push
faddp
mov
fmuls
or
rcll
mov
shufps
sub
mov
imul
icebp
sbb
dec
dec
cmp
repnz
pop
push
mov
icebp
test
lret
dec
lds
sbb
test
adc
iret
lock
mov
stc
inc
shl
insb
call
outsl
into
fcmovne
loopne
lret
shll
jge
sbb
mov
mov
push
push
mov
loope
jb
in
and
jl
mov
loope
or
lock
mov
xchg
push
scas
push
cmp
xchg
push
inc
adc
add
pushf
push
inc
lods
mov
repz
sbb
insl
inc
loopne
in
lahf
insb
lds
mov
mov
cmp
mov
jp
repz
cmp
bound
popl
scas
adcb
or
cmpsl
add
pop
adc
adc
pop
sbb
cmp
sbb
dec
xchg
enter
test
addr16
mov
enter
adc
cmp
mov
mov
mov
pop
and
push
push
adc
addl
jne
inc
dec
xor
inc
pop
lock
mov
arpl
int3
mov
movsb
sti
fimuls
xchg
xchg
mov
sbb
aad
imul
mov
cmp
popa
rcl
pop
or
pop
loope
mov
icebp
xchg
jge
mov
notb
popa
ret
out
fwait
pop
push
push
jl
sub
lock
add
push
fsubs
lret
ja
sar
sub
icebp
or
movsb
outsb
mov
cltd
add
fsub
jnp
fstl
icebp
push
enter
dec
mov
incl
sub
scas
ret
jns
jl
iret
sbb
rclb
stos
into
mov
jge
aaa
jp
lods
or
and
mov
inc
sub
stc
gs
movsb
sub
test
test
loope
sbb
fsubs
test
movsl
jl
int3
and
cmp
into
jns
adc
mov
mov
in
mov
scas
in
mov
scas
mov
mov
sub
int
mov
push
out
stc
or
cltd
xchg
mov
aas
lods
shlb
cld
pusha
call
aaa
jo
mov
xchg
sub
mov
cmpsb
ret
sub
xchg
or
cs
in
shrb
push
mov
jne
add
fcomps
and
andl
sbb
pop
sbb
mov
push
loopne
ficompl
sub
mov
inc
pusha
les
fs
sbb
jmp
cli
or
and
push
mov
add
xchg
push
push
jns
pop
cmp
add
das
or
jecxz
lods
movl
scas
xchg
in
sbb
fs
inc
pop
jno
inc
sti
mov
inc
inc
push
pop
sub
adc
enter
xchg
xchg
js
pop
push
sub
lcall
sar
cltd
int
pop
dec
das
mov
jg
sub
call
lahf
cmp
mov
frstor
jmp
ds
and
sbb
mov
aam
cmc
aam
and
ljmp
int3
cwtl
adc
pop
pop
sbb
aas
flds
jb
inc
xor
cli
lret
add
mov
xchg
pop
fildl
pop
mov
in
mov
sub
xor
sbb
aas
scas
pop
lahf
push
cmp
push
push
and
mov
sbb
outsl
repz
cmpsb
imul
jecxz
fwait
dec
lahf
adc
pop
dec
adc
popa
pop
fidivrl
add
outsl
dec
or
inc
int
inc
xor
leave
hlt
mov
push
daa
inc
imul
das
adc
outsb
lock
xchg
mov
push
add
mov
mov
mov
pop
rcll
xor
pop
mov
scas
shrb
sbb
mov
inc
push
sbb
and
lret
ret
pop
sub
mov
pop
xorb
inc
inc
dec
int3
cmpsb
push
outsb
jo
add
jl
roll
push
jge
fcompl
inc
dec
cmc
test
mov
iret
and
and
loope
mov
fs
adc
inc
mov
ficomps
sbb
sbb
mov
cli
in
xchg
xor
jne
mov
and
call
inc
cmpsl
lods
out
pop
and
xchg
pop
and
lods
sub
mov
push
dec
les
stc
cmp
xlat
in
into
and
mov
mov
xor
inc
rol
push
and
lods
pop
out
mov
dec
cmp
es
inc
mov
ds
cmc
cmp
ret
adc
mov
push
mulb
movsl
popf
insb
pusha
bound
insl
sub
mov
subl
int
jge
andl
jbe
movsb
pop
mov
cld
lods
std
push
roll
push
mov
and
out
jae
inc
jmp
imul
rol
jno
inc
nop
mov
mov
and
jmp
pushl
push
scas
rcrb
lods
flds
sbb
mov
sbb
in
xor
lahf
test
jle
test
push
mov
out
xchg
mov
xor
sbb
xchg
repz
mov
or
leave
test
xor
pusha
jle
jg
out
stos
sets
jl
dec
mov
lock
cmpsb
jmp
add
incb
push
mov
cmpsl
das
cmp
xor
mov
out
pop
inc
xor
out
and
es
lcall
sub
pop
pusha
push
ret
pop
das
cltd
maskmovq
cs
inc
cmpb
call
mov
xor
ja
mov
cmp
push
in
sub
sbb
push
push
scas
je
sbb
fst
dec
xchg
shll
bound
mov
mov
in
mov
cld
movsb
andb
push
imul
pop
push
test
and
xchg
int3
pop
test
fs
in
jg
mov
mov
fnstsw
fdivr
cmp
mov
xor
lahf
iret
inc
or
jmp
xor
popa
and
movsl
ret
push
insl
push
inc
jbe
xor
inc
mov
jb
mov
push
testl
push
mov
mov
fstpt
mov
pop
inc
jle
movsl
jmp
and
xchg
inc
pop
icebp
dec
mov
repz
sbb
outsb
or
lds
jmp
inc
add
insb
jmp
fstl
jns
leave
shl
sbb
mov
mov
inc
cmc
mov
mov
mov
inc
into
mov
pop
xchg
bnd
popa
xchg
pop
js
outsl
ret
jno
adc
arpl
sahf
outsl
sbb
pop
add
pushf
cwtl
inc
loop
adc
xor
int
adc
stos
daa
nop
sub
movsb
jl
mov
xor
sub
or
dec
pusha
mov
arpl
mov
sahf
repnz
add
aad
outsl
test
and
test
adc
xchg
jne
pop
nop
rorb
je
push
cld
jb
jbe
test
into
mov
jecxz
sti
inc
cmp
cld
test
ja
ss
inc
add
fwait
cmp
xor
sarb
sub
fcmovb
jns
cmp
dec
and
or
and
inc
sbb
mov
test
lret
cmpsl
sub
inc
push
shld
mov
sbb
mov
pop
jns
loope
cld
cli
mov
cmp
xor
or
cmpsl
adc
daa
nop
push
jbe
das
pop
and
push
sub
sub
addr16
lock
add
clc
jno
std
aam
dec
mov
mov
sbb
out
sub
and
mov
popa
xchg
push
cmp
mov
xorb
pop
or
xchg
xchg
scas
loopne
gs
pop
and
incb
xor
xchg
or
push
in
mov
loopne
je
leave
imulb
xor
in
push
in
sti
data16
shlb
add
sbb
scas
aaa
scas
or
hlt
frstor
cmpl
dec
inc
movsb
aaa
or
aas
es
in
mov
inc
pop
shll
inc
xchg
bound
out
in
insb
cli
insl
add
or
sbb
in
cld
mov
sbb
out
and
mov
inc
ja
cmpsl
jge
int
fbstp
es
and
repnz
loope
sahf
ja
jno
mov
repnz
sub
inc
dec
push
inc
jne
xchg
ljmp
into
scas
pop
stos
push
and
inc
cmp
sbb
cmp
jnp
test
cs
pop
pusha
loop
std
into
cld
aas
and
sub
dec
mov
mov
lods
push
sbb
cld
or
mov
out
mov
test
js
and
push
ss
jle
loopne
rcrl
inc
popa
rolb
adc
imul
jecxz
mov
mov
push
ja
popa
mov
jl
ret
push
ljmp
mov
inc
sub
cmpsl
mov
stos
stos
jo
rcr
mov
push
sub
sub
bound
aam
fs
stos
clc
push
fsubrs
pop
test
enter
fucomi
lahf
shll
pusha
xor
fcoml
imul
lds
mov
cltd
xchg
je
xchg
xor
imul
xor
loop
jg
xchg
outsb
mov
hlt
repnz
xchg
fdivrl
xchg
rorb
or
cmp
bound
leave
adc
mov
shl
scas
sti
out
outsb
sbb
fsubrl
xchg
pop
out
pop
push
imul
jb
lcallw
sbb
lahf
or
in
fstenv
jnp
dec
and
adc
pop
in
cmc
jb
push
inc
call
pop
test
dec
xor
lods
popa
and
xchg
dec
dec
mov
jb
icebp
mov
dec
jge
int
pop
fildll
mov
ficomps
or
adc
sti
cltd
lret
addr16
outsl
jo
lret
jnp
sahf
shlb
dec
xchg
cmp
rcrb
dec
mov
xlat
sbb
or
dec
int3
mov
or
sbb
das
ds
sub
test
pushf
popf
pushf
mov
and
jmp
sbb
sbb
inc
stc
jb
add
je
vpsllw
push
cmp
and
sub
push
xor
mov
ds
sbb
push
fstp
test
jge
inc
mov
xchg
lods
adc
cwtl
sub
repnz
inc
lret
ret
xor
pop
xchg
sbb
andb
lds
xor
inc
aaa
xchg
addr16
sub
loop
insb
sbb
xchg
pop
inc
xchg
stc
ss
sti
lahf
push
lea
jne
xchg
hlt
stos
xchg
pop
fcmovne
xor
cwtl
and
push
loope
sub
in
sbb
incl
sbb
mov
jecxz
std
sbb
js
push
adc
lea
inc
xchg
fldl
stos
pop
insl
push
fmuls
mull
je
test
push
neg
rorl
sti
ja
add
jle
jmp
inc
pop
jbe
jo
push
ja
xor
std
mov
pop
scas
out
dec
gs
mov
mov
xor
dec
dec
ljmp
jg
xchg
das
aad
pop
fwait
xchg
ja
mov
cltd
mov
rclb
sub
andl
inc
inc
xchg
push
xor
pop
fwait
pop
inc
cmp
dec
xor
xchg
jns
pop
sbb
in
jle
adc
jae
push
cld
xor
mov
adc
jl
into
and
fs
cmpsb
aaa
fimuls
daa
lret
rorl
xor
push
jo
fucomi
push
dec
popa
sarl
mov
jle
sbb
dec
imull
mov
lods
je
xor
dec
iret
pop
mov
imul
lods
pop
fidivs
lods
scas
stos
mov
mov
std
popa
test
xchg
daa
in
loop
sbb
enter
nop
jecxz
xor
js
insb
jo
roll
adc
mov
push
into
sbbb
push
mov
xchg
inc
pop
jmp
fdivrs
aad
stos
iret
orl
dec
add
or
xor
outsl
xor
imul
repz
jns
jno
and
ficoms
cltd
jg
pop
int3
mov
test
adcb
lahf
mov
cmp
add
xor
cs
arpl
popf
int3
xchg
inc
in
mov
outsb
scas
mov
mov
daa
shr
and
add
out
frstpm(287
or
pop
jmp
pop
into
push
push
testb
mov
adc
lds
mov
fistpl
xchg
les
je
in
mov
xchg
cmp
gs
std
repnz
je
hlt
sub
lods
pop
fcos
sahf
popf
fdivrp
fs
inc
out
lds
cmp
inc
push
inc
test
xor
jle
fsubl
aad
popa
dec
add
push
dec
das
xor
xor
aad
push
rcr
les
dec
popf
adc
lcall
nop
dec
dec
push
jne
ljmp
mov
mov
sti
lods
movsb
iret
cli
int3
cmc
mov
lods
or
rcrb
pop
cmp
fsubl
push
sbb
out
js
push
ss
fidivrl
frstor
fiaddl
or
mov
clc
cmp
in
mov
mov
les
stos
stc
lods
adc
mov
mov
imul
out
jo
insb
test
clc
daa
pop
repnz
cmpsl
push
or
out
adc
icebp
test
push
ret
notb
pop
insb
or
push
lret
xchg
jg
imul
or
cmpl
fsub
gs
popa
sub
mov
sbbl
enter
mov
ret
dec
aam
fisttpl
sbb
jne
add
jno
and
dec
mov
adc
ret
pop
adc
pop
nop
xor
push
pop
in
dec
inc
and
dec
pop
push
push
or
shlb
ret
mov
and
or
and
aad
add
lock
push
arpl
les
sbb
xchg
insl
push
jl
push
cmp
aaa
scas
ret
inc
pop
scas
mov
out
mov
enter
adc
fmull
mov
movsb
aam
xlat
mov
in
testl
outsl
jo
andb
push
addr16
mov
mov
and
mov
add
xchg
inc
jp
outsl
dec
popf
int
lods
stos
and
test
int3
fwait
jo
es
inc
cld
test
idiv
push
shlb
mov
xchg
push
jecxz
sti
fdivl
pop
dec
cs
jecxz
xchg
repnz
add
push
ljmp
mov
jb
sbb
and
sbb
lds
in
push
jmp
or
ljmp
in
jecxz
mov
and
push
out
jmp
add
cmp
jl
pop
pop
in
and
lock
clc
mov
hlt
cld
aam
mov
fistl
inc
xchg
popf
sbb
cmp
jp
sub
or
cld
mov
inc
shl
inc
insl
and
int
jge
fldcw
cmp
andb
shll
test
pop
ja
in
ljmp
call
mov
add
jmp
movl
in
gs
fdivrl
inc
out
or
sub
jp
cmp
mov
aas
mov
xchg
and
pusha
fisttpll
popl
xor
dec
inc
adc
popf
sub
mov
push
int3
repnz
mov
xor
test
mov
loop
pop
push
dec
icebp
test
mov
add
push
das
fwait
and
hlt
arpl
dec
scas
push
aas
js
cwtl
in
aam
lahf
mov
insw
xchg
fistpll
xchg
add
sub
lea
loop
fisubs
rcll
neg
or
fwait
mov
dec
add
mov
fcoms
adc
arpl
gs
xor
xor
pop
pop
or
loop
outsb
dec
mov
xchg
mov
pushl
push
jmp
fisubs
fs
xchg
dec
jmp
test
je
movsl
mov
insl
popf
pop
xchg
and
adc
push
inc
mov
loop
mov
stc
push
cld
xchg
push
sti
and
aad
pop
popf
sahf
test
cltd
xor
in
ret
sub
loopne
loope
cmp
xchg
popf
mov
loop
sbb
inc
inc
int
pop
mov
cwtl
pop
test
cs
cwtl
xor
ja
jbe
sub
jge
cmp
into
dec
mov
lds
fsubs
lds
adc
and
xchg
into
adc
xchg
or
stos
cld
and
ja
fidivs
sbb
psubusw
xchg
or
mov
xor
mov
mov
jge
in
rcrb
das
and
aas
jp
xor
jbe
outsl
les
lahf
mov
xor
sbb
out
movsl
insl
pop
lock
push
sbb
insb
add
stos
mov
mov
sub
jbe
scas
sbb
popf
xchg
add
adc
push
sbb
test
js
ret
cmpsl
pop
das
cmp
sbb
enter
shll
xor
cmp
shlb
mov
lds
dec
pop
xor
std
pop
inc
movsl
xchg
std
xor
mov
cmp
dec
test
aam
iret
lret
xor
mov
adc
outsb
and
rolb
out
pop
jo
dec
popf
loop
iret
scas
sbb
ret
fisubs
push
pop
stc
sub
in
or
or
cmp
fisttps
daa
mov
stc
ljmp
sbb
adc
sahf
imul
out
aas
xchg
testl
jmp
mov
aad
lock
imul
mov
cmpsb
pop
iret
jae
mov
pop
lea
gs
out
jnp
mov
cmpb
into
lcall
cltd
jns
jmp
mov
xor
mov
jecxz
in
test
pusha
dec
and
nop
mov
out
mov
or
xchg
pop
arpl
cli
mov
mov
aad
or
jns
mov
jge
into
stos
es
xchg
lahf
mov
or
insl
test
cld
xor
lahf
nop
popf
aas
adcl
adc
push
add
pop
or
sbb
cmc
mov
pop
fisttpll
repnz
sub
jae
ds
xorb
and
xor
pminsw
sti
imul
cmpsl
cmp
sbb
or
aas
je
test
in
adc
mull
push
cmp
pop
scas
in
bound
lods
in
adc
lods
mov
mov
jae,pn
add
inc
mov
lods
mov
shll
fwait
pop
sahf
pusha
cmovge
mov
call
out
fisubrl
xchg
fistpll
out
or
jge
jae
cmp
inc
stos
aas
rol
fwait
jo
lret
shl
lds
sub
lods
cld
xchg
push
inc
test
add
cmpsl
cmp
daa
pop
jnp
fists
out
xor
mov
add
cmp
jecxz
jb
cmp
pop
xor
sub
mov
sub
adc
jle
loop
ljmp
xor
inc
fistl
and
sub
inc
and
cmp
inc
jp
sarb
cmc
lret
hlt
xchg
data16
mov
retw
push
mov
fidivrs
add
lret
ret
or
sahf
sub
push
fmull
adc
subl
icebp
push
xchg
jle
dec
fadds
add
mov
dec
cmpsl
jge
xor
ja
flds
or
repnz
add
clc
pop
and
ret
jl
jne
and
es
rclb
mov
aaa
sbb
mov
add
je
fs
mov
mov
movsl
sub
popf
add
in
in
xchg
out
cmp
dec
push
fidivrl
push
iret
aam
fcoml
es
jp
sahf
lret
cmp
mov
iret
cmp
in
js
out
or
or
pop
gs
xor
negb
popa
inc
in
stos
out
lock
pushl
xor
popa
pop
pop
lods
stos
sbb
les
es
out
and
movsl
and
push
addl
push
or
stos
mov
sbb
fs
fidivl
mov
pusha
xchg
cmpsl
pop
jecxz
sbb
cmovnp
xchg
pushf
cwtl
cltd
xor
hlt
js
xchg
mov
mov
xchg
daa
xor
add
pop
cld
jnp
ss
cmp
sarb
mov
mov
xchg
jp
shll
shrb
dec
adc
push
stos
cmp
lret
les
xchg
push
stos
xlat
insl
rolb
faddl
mov
repz
and
inc
dec
jecxz
shll
nop
mov
or
mov
push
loope
aam
push
std
jge
mov
jnp
imul
push
std
fdivl
dec
mov
cmp
insb
call
xchg
pop
sahf
sbb
adcb
xor
mov
ret
hlt
sub
lds
mov
add
cmp
push
cmc
rorb
mov
or
es
push
idivb
cmpsl
add
incb
pmulhuw
and
sti
lock
cmp
iret
fdivs
sti
mov
scas
xchg
pop
dec
sbb
popf
xchg
aam
sahf
pop
movsb
out
insb
dec
cmp
sub
mov
pop
mov
pop
cmp
inc
shrb
jb
pop
jno
lahf
jne
push
jp
shld
in
int
cmc
xchg
nop
mov
dec
pop
inc
mov
mov
into
sbb
sahf
mov
xchg
push
mov
aaa
xchg
mov
int3
cmp
lret
outsb
pop
adc
lods
or
sahf
rcrb
shll
or
jb
loope
add
das
ret
in
rcll
dec
iret
sbb
pop
mov
jle
ret
jmp
mov
sar
fnstenv
xor
je
cmp
ss
test
cmp
mov
orl
cwtl
dec
in
das
push
push
jl
in
test
mov
push
je
or
in
cmp
test
mov
or
repz
fsubr
add
xchg
popa
dec
cwtl
je,pt
scas
xor
leave
jae
fxch
mov
daa
mov
add
cltd
push
fisttps
inc
jnp
jb
pusha
push
data16
dec
enter
sub
mov
int
cmp
shll
add
mov
jmp
and
and
int
sbb
es
test
ljmp
aam
sbbl
mov
inc
test
mov
push
test
adc
jecxz
mov
test
sbb
dec
fdivrs
iret
repz
popl
sahf
mov
nop
sbb
jnp
lret
imul
sub
in
clc
pop
adc
sti
jns
jb
aam
and
xchg
xchg
cmp
mov
fmuls
xor
add
scas
ret
dec
and
ja
movsb
mov
dec
daa
imul
sub
push
jecxz
fidivrl
popa
cmp
mov
das
leave
jp
js,pn
add
call
js
xchg
lret
enter
lcall
xor
jle
pushf
and
xchg
xchg
mov
aaa
je
pushw
xchg
xor
repnz
repz
ja
cmpw
adc
push
gs
push
inc
add
xchg
mov
in
subb
out
cld
imul
dec
dec
loop
or
jbe
clc
add
jmp
lea
rorb
xor
lods
pop
hlt
mov
adc
in
lahf
loop
mov
nop
mov
fs
cmpsb
shlb
in
jns
je
add
pop
rclb
lea
leave
cli
or
fistpl
into
xor
movsl
mov
cmp
xor
dec
sbb
fimull
and
add
cmp
or
mov
or
sbb
inc
daa
mov
inc
and
xchg
out
adc
xor
sbb
lret
loope
aam
inc
sub
mov
ljmp
call
lds
xor
xor
iret
cld
mov
mov
cmpb
aad
mov
and
push
sub
and
xor
pop
dec
push
jo
shlb
and
pusha
adc
mov
mov
dec
fistl
nop
fstl
jno
aam
xchg
test
test
xchg
dec
movsb
bound
push
out
mov
adc
cmp
xor
movsl
orb
pop
loope
and
stos
push
jl
adc
add
and
leave
mov
mov
inc
cmovae
cltd
mull
jmp
mov
or
test
dec
in
sbb
mov
xchg
add
or
push
push
pop
pop
add
jle
daa
incl
sub
iret
mov
adc
jno
or
xor
jo
idivl
jb
aaa
adc
call
and
mov
inc
pop
ffreep
jmp
jbe
lret
ljmp
cmc
xor
in
sub
dec
aas
jge
and
icebp
mov
movb
lea
test
inc
loope
jno
inc
cmp
mov
adc
bound
xor
clc
in
lds
adcb
daa
bound
adc
jle
cmpsb
mov
cwtl
mov
rclb
ret
fst
sub
clc
push
push
push
jb
mov
in
lcall
pusha
inc
aas
jo
dec
xlat
clc
dec
daa
in
sbb
dec
in
ja
fs
jmp
pop
shll
add
lods
xor
test
add
push
lret
mov
sti
jns
lahf
xchg
call
enter
push
test
popa
sub
das
mov
arpl
stos
xlat
sbb
cmp
out
inc
cmp
push
in
daa
nop
syscall
ja
gs
out
inc
js
pop
mov
sbb
fmuls
inc
cmpsl
sub
xorb
mov
imulb
js
pop
mov
jecxz
clc
outsb
in
pop
in
sahf
out
mov
out
les
int3
icebp
data16
out
clc
iret
enter
cmc
or
sbb
aam
fdivrs
mov
aam
lods
jno
jne
pop
pop
push
mov
dec
jge
shlb
cmc
jns
mov
pop
adc
orb
mov
arpl
adc
jl
jge
pop
repnz
mov
loopne
scas
push
ja
lcall
and
xor
or
xchg
fwait
mov
mov
adc
mov
lods
adc
cmpsl
lock
inc
pop
cmpsb
jns
add
lock
lods
xchg
ret
movsl
inc
dec
imul
popf
or
pop
pop
std
aad
out
xchg
xor
je
in
xor
fdiv
dec
xchg
xchg
push
add
xchg
daa
mov
or
adc
pop
adc
jp
mov
push
mov
aad
sbb
fidivrs
sbb
jae
xchg
adc
mov
loopne
inc
sbb
adc
imull
lds
rolb
es
loopne
xchg
mov
and
lret
lock
insb
xchg
adc
hlt
sub
clc
xchg
fcomps
aam
pop
jnp
sub
push
jne
into
inc
in
rcrl
mov
xchg
pop
das
aam
shl
test
cmpl
daa
and
fistpl
int
aam
mov
cwtl
loopne
loopne
insb
adc
shrb
cmc
nop
add
mov
sahf
mov
movsb
jno
push
je
aaa
arpl
xlat
push
clc
shl
mov
inc
push
pop
mov
push
dec
and
in
sub
stos
cmpsb
pusha
sbb
cwtl
es
mov
fnstsw
loop
sbb
dec
fdivp
cmp
out
psrld
and
into
mov
cmp
mov
sbb
ficompl
mov
jae
pop
or
clc
movb
mov
lsl
cmp
daa
icebp
call
add
inc
ss
cwtl
fsts
add
imulb
or
push
xlat
push
xor
xchg
sub
jo
or
pop
cs
outsb
xlat
mov
dec
jge
xor
adc
shrl
and
xor
bound
push
or
xor
dec
adc
jno
cmpsb
and
fiadds
xchg
lahf
dec
sarb
pop
xchg
xor
iret
pop
repnz
cmp
ljmp
mov
inc
sbb
jae
ljmp
sub
mov
bound
jb
xchg
mov
enter
fstpt
mov
or
pop
test
add
repnz
push
addr16
inc
mov
in
cmp
jno
inc
pop
cmpsb
ds
push
sub
pop
push
inc
pop
shlb
or
mov
push
lcall
arpl
push
push
or
in
ret
push
cwtl
pop
das
mov
je
mov
or
sub
mov
jne
mov
cmp
imul
push
mov
cs
in
hlt
jb
ret
fsub
test
jg
sub
adc
mull
hlt
int3
xor
daa
insl
or
and
stos
aas
pop
push
lret
aas
or
xor
cmp
outsl
xlat
push
add
dec
fcomp
into
inc
xor
fimull
push
jnp
mov
mov
dec
test
or
leave
addr16
inc
push
push
or
mov
lret
into
mov
movsb
fwait
icebp
jb
popa
ret
fisttps
add
or
pop
mov
in
add
fwait
cmp
inc
sub
fmul
lods
jb
sub
jmp
shrl
icebp
in
mov
das
adc
add
ret
fs
pop
xor
data16
pushf
dec
nop
add
test
push
mov
leave
test
lea
call
or
cltd
sub
das
inc
inc
sub
fsubl
insb
ss
cmp
sub
incl
fstl
jnp
add
leave
pusha
cmp
int3
cmp
jl
cmp
add
sar
or
mov
xchg
pop
ret
jmp
ja
aaa
sub
popa
lcall
ljmp
mov
pop
pop
jg
mov
sub
std
inc
and
pusha
sti
push
lock
dec
push
data16
cs
add
pop
test
push
xor
xor
and
sbb
aas
push
pop
cwtl
popa
lods
sub
jo
sub
lret
mov
mov
pushf
jmp
inc
pop
scas
xor
imul
out
push
lret
dec
cmp
xchg
jmp
cwtl
jl
sub
retw
mov
ljmp
lahf
outsl
cmpsb
hlt
pop
loopne
pop
mov
or
dec
pushf
lods
cmp
jmp
bound
inc
mov
push
jg
insl
jb
ja
pop
add
mov
mov
dec
mov
mov
cli
or
cli
or
scas
mov
ds
mov
adc
lods
push
push
cmpsb
inc
mov
fstl
mov
dec
mov
repnz
ds
jge
scas
pushf
or
test
out
lret
sahf
mov
xchg
ficompl
add
ret
jmp
pop
jne
mov
mov
mov
sbb
sub
push
xchg
jge
pop
mov
mov
cld
sub
mov
stos
or
cld
roll
mov
inc
repnz
dec
nop
mov
adc
cmpsb
mov
sbb
test
xchg
mov
mov
shl
call
jle
inc
popf
aam
mov
xor
movb
sarb
ds
testb
mov
popf
sbb
dec
mov
push
jbe
dec
insl
mov
scas
mov
mov
hlt
mov
inc
adc
testl
inc
sbb
jg
aas
std
sub
ficomps
shrb
pop
out
adc
cmp
and
test
xor
jno
cmp
ret
in
sahf
and
sub
mov
or
std
and
dec
pop
gs
fdivrl
push
in
aad
push
neg
jns
fstpl
mov
aam
js
fwait
pop
mov
sub
or
and
insb
mov
in
insl
and
arpl
inc
pop
xor
sbb
sbb
add
shr
int3
and
xchg
add
shr
pop
jnp
mov
jo
pop
sbb
adc
dec
jbe
addr16
mov
paddusb
imul
aas
fmull
sarl
add
lds
outsb
fnstsw
dec
xchg
call
push
adc
xor
decl
mov
gs
and
int
imul
sbb
adc
fistl
adc
sub
xchg
xor
jne
mov
mov
js
xchg
push
xchg
jb
dec
aad
aam
aas
adc
sbb
and
mov
and
and
mov
cmp
cmp
xor
leave
repnz
jne
lods
push
aas
jbe
fcomps
push
sbb
add
jmp
xchg
loope
sub
fxch
into
xor
jo
scas
addl
adc
or
mov
movsl
js
mov
cmpsl
in
in
jne
pop
push
inc
pop
loop
pop
sub
inc
xor
adc
imul
movsl
mov
mov
imul
lock
cwtl
pop
jmp
push
jnp
or
sub
out
test
sahf
stos
xchg
loop
dec
icebp
pop
push
dec
sarb
xor
xchg
int3
fistpl
pop
sbb
push
push
push
mov
loopne
or
mov
scas
fistpl
arpl
lock
mov
dec
popa
xlat
icebp
push
jbe
and
pop
movsl
enter
cmpsl
inc
pop
mov
dec
das
lret
jge
out
lea
mov
ficompl
mov
cmp
push
inc
pop
xor
sbbl
mov
jns
fists
xchg
sahf
int3
fistpll
es
dec
sub
aas
pusha
pop
inc
iret
les
mov
push
lea
cmp
pop
jmp
adc
push
movsl
sbb
mov
out
mov
out
pusha
sub
xchg
shld
mov
shll
test
call
cmp
dec
lods
mov
xor
ds
fimuls
rolb
dec
dec
xchg
pop
fisubs
jp
pop
out
imull
pop
int3
jb
nop
dec
jmp
push
add
push
sbb
mov
adc
push
or
fs
cmc
sbb
xchg
sub
xchg
pop
dec
push
fdivl
push
or
movsb
lds
mov
or
inc
neg
mov
int3
stc
sti
dec
cwtl
xor
ljmp
jmp
and
lahf
xor
loopne
and
loop
inc
add
test
icebp
lods
cli
mov
dec
or
mov
outsl
pop
aad
mov
mov
xchg
push
test
sbb
push
jp
sahf
adc
in
push
mov
aad
sub
or
adc
pop
loop
cld
add
repz
or
repz
pop
cmp
cltd
inc
or
mov
mov
and
in
dec
adc
mov
loop
test
enter
adc
jnp
xchg
inc
dec
pop
rcl
push
mov
mov
inc
cmp
fwait
and
mov
repz
out
or
xor
dec
xchg
scas
xchg
cld
pop
and
ror
adc
mov
adc
imul
ret
mov
and
cld
dec
jne
cmp
jns
gs
mov
xchg
fists
jne
cmpsl
out
mov
mov
mov
xor
icebp
sub
mov
sub
push
enter
fdivr
fldl
popf
leave
imul
bound
rclb
inc
in
mov
cs
test
pop
mov
lods
shrl
mov
fistpll
fidivrl
add
and
mov
pop
fdivp
adc
mov
and
xchg
fcoml
aaa
adc
scas
xchg
adc
in
xchg
iret
add
dec
gs
outsl
xchg
mov
inc
pop
or
ror
mov
dec
sub
je
sub
fldlg2
sbb
in
daa
popa
add
fidivrl
push
pcmpgtb
je
cli
cmp
je
loop
cmp
arpl
fimull
mov
std
int3
mov
rol
cmp
nop
sub
mov
nop
loope
jp
mov
in
sub
mov
inc
int3
mov
mov
lahf
movsb
sbb
dec
test
mov
data16
sahf
or
dec
lret
arpl
adc
pop
out
pop
repz
inc
out
mul
pusha
lea
ljmp
scas
push
sbb
sbb
jbe
int
add
nop
jmp
hlt
rcr
filds
push
dec
cmp
mov
xchg
mov
inc
push
mov
dec
repz
push
shrl
fwait
xchg
xchg
je
xor
xchg
into
enter
imul
in
pop
jne
xor
sub
iret
sub
dec
lea
add
mov
jmp
aad
pop
push
pusha
scas
iret
jmp
and
dec
stos
shrl
ljmp
fdivl
mov
push
push
or
or
add
data16
dec
xchg
das
jne
repz
dec
push
jmp
arpl
cmpsl
cmpsb
ds
mov
pop
adc
sub
mov
push
shr
xor
test
insl
imul
enter
out
xor
jecxz
popa
jg
jns
outsb
add
frstor
lods
ljmp
push
mov
adc
adc
inc
pop
push
add
test
sbb
das
pop
pop
add
add
es
ja
test
orb
dec
ss
scas
pop
in
push
dec
push
test
pop
dec
mov
lds
fsubrs
fstps
repz
jp
es
sar
mov
sbb
or
add
cmpl
jle
inc
add
popa
loope
in
stos
sbb
sbb
add
lahf
pop
mov
jl
sti
mov
push
jne
ljmp
sbb
jb
xor
andl
sbb
push
jp
inc
xchg
xchg
adc
inc
orb
mov
mov
loope
or
mov
subb
push
lret
add
std
sahf
mov
inc
outsl
pop
inc
mov
and
or
shl
dec
das
data16
les
or
xchg
lahf
pop
mov
out
adc
mov
jl
repnz
inc
cmp
and
movsl
mov
pop
out
scas
dec
repnz
repnz
sub
test
mov
movsl
stos
fnstsw
cltd
shrb
sbbl
adc
or
jl
lret
push
mov
sarl
cwtl
les
xchg
scas
repnz
int
jle
mov
sti
fiaddl
add
jg
xchg
scas
mov
scas
add
pop
pop
mov
shlb
mov
fidivrs
xorb
das
dec
int3
adc
shrl
enter
sbb
inc
xchg
adc
xor
push
in
scas
out
jne
sub
push
push
cli
or
sub
jo
mov
movsl
mov
pop
ror
and
mov
mov
xchg
leave
enter
es
or
ret
out
shr
inc
int
inc
inc
lahf
cmp
addr16
pop
sbb
out
pop
test
aas
repz
add
jnp
adc
out
lret
iret
loopne
leave
push
jg
mov
adc
int
pop
es
clc
cmp
popf
jge
gs
outsl
fcoml
aam
mov
mov
cmpsb
insb
jno
stc
or
xchg
lods
mov
icebp
push
xchg
cli
test
sarl
je
cld
and
xchg
mov
push
sub
add
mov
or
mov
xchg
push
mov
xchg
call
adc
out
std
loope
mov
out
aam
sub
cmp
sbb
fwait
out
cmp
lret
iret
cmpsl
jecxz
jae
xchg
mov
or
xor
dec
xchg
std
pop
and
xchg
mov
inc
dec
mov
mov
dec
imul
testl
pop
jae
xor
mov
flds
mov
daa
jae
jns
jbe
sbb
int3
iret
sti
stos
fsubs
call
ss
fisttpl
mov
jb
stc
mov
cltd
ljmp
push
test
out
push
out
xchg
cmp
cli
pop
mov
into
sarb
dec
inc
push
push
jp
popa
cmp
xor
int3
pop
mov
rcll
add
cmp
lods
mov
push
inc
inc
xchg
mov
lret
adc
add
add
cs
cmp
in
inc
out
insl
pop
inc
leave
xor
mov
cmp
stos
push
push
xchg
and
pop
sbb
mov
and
xchg
sub
mov
adc
sub
xchg
jo
das
and
out
or
xchg
xor
xor
loopne
subl
mov
lock
cmc
xor
aad
inc
jge
sarl
dec
xlat
sub
xchg
add
mov
test
jge
xor
loop
cmpsb
inc
mov
mov
jmp
movsb
sub
std
scas
mov
sub
out
xor
loop
and
or
aaa
out
mov
in
mov
xor
add
hlt
mov
mov
cmpsb
popa
push
dec
repz
pop
jle
or
outsb
fs
cli
in
push
out
imull
add
pop
mov
mov
jl
gs
pop
dec
mov
sub
mov
es
mov
faddl
shl
test
xor
push
mov
dec
xchg
push
pop
or
adc
fdivl
dec
inc
xor
leave
pop
sub
adc
imul
mov
mov
stos
loopne
jns
ss
dec
rcrl
sbb
cmp
jno
mov
push
lea
xchg
push
mov
aaa
xor
push
push
and
adc
in
xchg
je
jnp
cmpsb
fistps
test
mov
sahf
adc
mov
mov
pop
jge
xor
jns
dec
je
xchg
mov
xor
add
add
jnp
pop
mov
dec
sbb
pop
dec
lahf
pop
mov
mov
lock
rorb
or
push
daa
out
imul
sti
adc
add
sbb
sbb
add
push
adc
ret
stos
in
and
jge
movsl
sbb
xor
into
out
add
jp
mov
shrb
pop
fcomps
dec
call
ja
data16
push
imul
repz
mov
push
aam
fiaddl
insl
cld
inc
and
shll
or
faddl
lcall
xchg
xchg
or
loopne
imul
cltd
das
dec
mov
sarb
in
jo
pop
cli
es
repz
cmp
jnp
mov
int
xchg
or
rcrb
and
into
jle
shl
push
in
bound
stos
adc
push
push
add
imul
pop
stos
fs
dec
or
icebp
imul
sbbb
pop
sbb
sbb
mov
sub
es
outsl
mov
pop
push
aad
leave
dec
jg
ret
bound
out
jo
in
orb
jmp
sbb
pop
jb
sbb
rcll
cmp
or
cwtl
lret
andb
push
pop
stc
mov
xchg
in
leave
push
jns
imul
stos
je
cmp
xchg
or
add
fcomp
jle
sub
push
mov
jae
lcall
inc
das
pusha
out
inc
mov
sub
jge
outsb
dec
mov
test
dec
loope
mov
addr16
in
dec
and
shrb
dec
int3
ret
add
int3
xchg
mov
shl
orl
fidivrs
jmp
mov
jo
inc
mov
fcoml
icebp
mov
jno
push
negb
fisttpll
xor
mov
js
imul
ljmp
std
fcoml
xor
cmp
nop
pusha
mov
mov
push
and
inc
or
inc
jle
mov
mov
es
loopne
inc
inc
fcomps
fisubl
int
jl
pusha
fwait
mov
mov
lcall
jo
iret
bound
sbb
or
and
movsl
jns
loope
sub
aam
mov
dec
or
adc
aad
or
cmp
xchg
adc
data16
sub
mov
add
push
lock
dec
cwtl
jb
pop
or
aam
push
mov
aad
dec
cwtl
dec
test
out
pop
sbb
cltd
test
nop
mov
mov
fnstcw
or
xchg
xchg
mov
mov
int3
adc
repz
aas
lret
enter
fistpll
add
ficomps
aad
leave
cmc
cmpsb
loope
gs
dec
loop
fwait
shlb
adc
pop
mov
rcrl
ss
jecxz
insl
mov
jnp
imul
stc
aam
cmpsl
hlt
jne
test
jo
lcall
dec
xor
std
inc
aam
xchg
adc
pop
insb
aam
sti
add
push
adc
mov
mov
mov
rcrb
mov
sahf
lcall
sub
movsb
loop
icebp
xor
jl
fistl
sarl
cwtl
sub
sti
jbe
mov
and
aad
scas
jg
orb
mov
xor
aaa
into
fsts
mov
mov
mov
mov
ror
lea
mov
dec
repz
mov
sbb
cmpsl
adc
push
sbb
xchg
jnp
ret
inc
adc
stos
inc
test
daa
fdivrl
push
repz
jle
sub
lret
iret
nop
add
push
enter
sbb
mov
sub
hlt
mov
add
subb
addb
int3
testb
xor
imul
push
xlat
or
rorl
imul
into
push
aad
cmp
mov
jne
clc
adc
cmc
fwait
insl
inc
or
sahf
and
movsl
mov
mov
in
push
jbe
loop
in
mov
outsb
xchg
xchg
ja
xchg
or
add
iret
out
pusha
adc
les
testb
xor
stos
adc
lds
cmp
fwait
outsb
shll
divl
adc
inc
jle
mov
movsb
ret
lock
add
aam
inc
call
cmc
popf
daa
in
inc
ss
pop
leave
fbstp
xchg
mov
ss
jo
jb
sbb
jecxz
pop
test
cltd
push
pop
rorb
mov
rol
inc
jmp
jmp
jno
inc
mov
sahf
jae
in
in
test
fisttpll
jmp
xchg
or
lods
popf
and
subb
mov
push
outsl
add
fs
jns
jae,pt
gs
sub
out
movsb
mov
xchg
mov
fs
lahf
andl
push
add
pop
push
ja
inc
movsb
test
mov
out
and
out
cs
orb
mov
cmp
mov
sub
rcl
cmpsl
mov
mov
mov
inc
ret
lock
dec
xchg
mov
add
adc
xchg
or
push
mov
push
inc
test
pop
sbb
or
lock
aas
sub
popa
push
xor
cmpsb
ret
inc
mov
mov
mov
xlat
dec
clc
andl
shlb
adc
mov
jecxz
sbb
popa
popf
mov
ljmp
push
pop
in
add
dec
jns
aad
ret
adc
and
movsb
mov
rcr
add
stos
sbb
pop
out
lret
xlat
inc
pop
push
xor
lahf
pop
movsl
bound
fwait
leave
xchg
xor
adc
std
push
pop
push
dec
inc
inc
inc
xchg
fcoms
fnstcw
xchg
aas
loop
pop
mov
cs
add
fisubl
ret
sbb
dec
pop
or
sahf
cmc
add
and
clc
out
nop
aas
mov
int
inc
iret
pop
cmp
ljmp
inc
jle
testb
xchg
in
jle
ffreep
sub
mov
pop
cmpsl
loopne
adc
push
sbbb
pop
aaa
fwait
out
leave
xor
movsb
adc
sub
int
aas
pop
push
cmp
mov
sbb
jmp
mov
bound
idivl
das
jmp
jnp
mov
stc
aaa
xchg
fdivrs
jle
mov
call
mov
in
jp
sahf
es
fidivrs
dec
mov
pop
pop
xor
fs
or
add
subl
push
fidivrs
pop
loopne
mov
aad
addl
fcmovnb
push
daa
adc
xchg
cmp
mov
sub
jne
mov
adc
sbb
iret
sub
out
das
pop
push
pop
xor
cwtl
cmp
aad
fs
movsb
push
push
cli
bound
xchg
notb
push
jb
movsl
fwait
add
loope
ret
js
test
scas
loope
add
dec
and
mov
sbb
aam
lock
jl
test
pop
mulb
addr16
dec
xor
or
xchg
sbb
xor
into
sbb
icebp
add
out
movsb
icebp
jmp
jecxz
mov
pusha
mov
adc
cwtl
lcall
sub
movsl
xlat
jmp
sub
push
cmpsb
sbbb
push
and
mov
data16
sbb
pop
cmp
or
rcrl
jge
xchg
xchg
lods
rolb
jmp
inc
push
mov
ljmp
pusha
cmp
jbe
and
leave
in
call
sti
jns
mov
mov
cmp
pushf
ds
mov
push
dec
dec
pop
dec
lret
adc
test
test
fidivl
rorl
mov
xlat
xor
xchg
sahf
sub
jle
out
loop
cmp
and
or
mov
sbb
mov
jmp
fistl
lock
lods
adc
lret
es
sub
adc
xchg
xchg
int
ds
loop
pop
ljmp
sti
out
or
sbb
rorb
mov
inc
sbb
imul
in
jp
jb
mov
xchg
and
movsb
mov
cli
jbe
in
repnz
imul
cmp
xchg
push
lock
lahf
outsl
mov
rorb
in
inc
popf
mov
mov
lcall
xor
mov
add
sub
add
push
jns
ret
sbb
pushf
inc
lods
mov
mov
and
mov
add
int
jmp
not
in
mov
add
push
cmp
rcrb
mov
jecxz
js
shrb
xchg
ljmp
lock
stos
inc
and
mov
cmc
cmpsl
pop
mov
sti
sbb
data16
xor
lahf
shlb
repnz
xchg
cwtl
popf
inc
xor
pop
icebp
cmp
sbb
es
fs
or
inc
or
xchg
or
push
xchg
aam
push
js
nop
lock
imul
inc
mov
xor
push
push
hlt
sub
fwait
cmp
fdivrl
or
pop
add
mov
arpl
jno
jo
jbe
adc
ss
arpl
loope
xlat
gs
ljmp
sbb
sub
and
lret
jg
out
fistpll
aam
cmp
bound
and
pop
or
repnz
add
shrb
arpl
lret
fldcw
ljmp
mul
sub
dec
sub
sbb
lods
mov
out
int
dec
repz
sahf
xor
mov
mov
mov
test
add
xchg
xchg
pop
and
cmp
in
add
test
and
xchg
fucom
jb
or
dec
mov
pop
mov
inc
pop
fildll
std
daa
fwait
daa
jg
jg
mov
lods
mov
repz
mov
mov
fisttps
cmc
pop
imul
cmp
inc
xchg
mov
lret
add
mov
lds
movsl
psubd
dec
mov
repz
push
jmp
cmp
mov
mov
or
lods
pop
lods
inc
and
mov
cs
dec
shll
mov
xchg
push
push
lret
gs
enter
cld
ja
pop
add
icebp
imul
inc
sub
add
popf
ljmp
cs
pop
pusha
and
inc
sub
leave
decb
or
mov
jg
cld
dec
loopne
and
cmp
testl
and
vandps
into
fstl
test
xchg
sbb
mov
sub
push
sub
sub
adc
popa
jmp
inc
gs
into
and
sbb
cli
cmp
push
mov
into
jns
loope
inc
das
mov
dec
jnp
sbb
adc
rep
add
mov
cmc
cmp
xchg
mov
push
mov
push
popa
push
xor
and
push
jge
dec
js
aam
dec
out
dec
mov
pop
sbb
loop
stos
jno
push
loopne
dec
mov
cmp
ret
mov
cmp
in
ret
pop
loopne
xchg
jnp
daa
mov
out
or
movsl
dec
call
sub
push
fwait
sub
inc
adc
insl
mov
pusha
xor
fst
pop
adcl
cmp
xchg
adc
bound
xor
leave
mov
and
dec
hlt
fdivr
xor
xchg
sahf
movsl
push
cld
pop
out
clc
lods
push
cmp
inc
jg
daa
lods
shl
lcall
rolb
in
test
xor
sub
int3
sbb
xor
xchg
mov
sahf
ss
pop
push
adc
cltd
dec
mov
test
cmp
adcb
cs
cltd
mov
dec
pop
mov
jmp
stos
jle
cmp
pop
jecxz
push
jp
cmp
fwait
xchg
insb
jne
mov
and
int3
cmp
xchg
in
fiadds
mov
or
rcr
pop
mov
pop
pop
iret
aad
fildll
lods
dec
cmp
cmp
loope
scas
mov
cwtl
ds
cmp
mov
lods
in
cld
or
dec
ud1
jo
and
adc
das
push
cli
cmp
xchg
pop
push
push
stos
int
dec
test
jg
into
std
add
movsb
mov
mov
outsl
dec
cmp
push
inc
mov
sti
pop
push
imull
mov
test
dec
leave
std
push
sub
xlat
shlb
dec
int3
xchg
in
xchg
push
in
in
sbb
and
jae
sub
push
sbb
test
ret
mov
cld
adc
stc
lret
push
lret
pop
push
lcall
lahf
mov
push
push
push
mov
ljmp
js
mov
pop
addb
mov
test
dec
mov
inc
rolb
or
adc
lahf
fdiv
xchg
adc
add
pushf
adc
pop
cli
jo
out
mov
dec
lcall
jne
add
add
pop
push
fs
push
scas
leave
push
add
hlt
jmp
xor
insb
sbb
fstps
dec
or
into
imul
inc
push
mov
fs
pushl
cld
push
mov
roll
adc
cwtl
jge
cwtl
fidivl
cmp
ja
mov
shrl
xchg
cwtl
pop
mov
ret
outsl
iret
inc
and
sbb
std
xchg
loope
mov
outsb
fists
daa
sub
adc
sbb
push
and
push
loope
pop
ljmp
sub
mov
pop
leave
out
add
sub
dec
xchg
mov
divl
sbb
inc
sti
sbb
mov
popf
out
and
jbe
mov
mov
dec
mov
jp
int
pop
lcall
pop
or
dec
push
in
ret
sbb
jecxz
push
loope
sub
in
xchg
xor
push
in
stc
popf
or
push
xor
stc
xor
inc
stc
test
insb
and
dec
ja
xor
lods
push
in
lods
and
lcall
xchg
lock
pop
inc
cmp
clts
lret
scas
and
pop
bnd
cmp
cmp
cmp
movsl
jo
push
pop
pop
mov
ret
insb
fidivrl
test
cmp
sar
shrl
jp
push
xor
popf
push
dec
push
sbb
int
test
dec
cmp
rclb
or
xchg
fcoml
pop
push
jne
mov
cld
xchg
test
leave
outsl
adc
inc
aaa
push
inc
mov
sbb
pop
loope
scas
notl
push
ja
jl
cmp
shll
scas
rcl
jo
outsl
ret
int3
mov
mov
sbb
sub
add
jmp
fiadds
dec
lods
push
loop
adc
jge
xchg
inc
std
ja
push
jp
data16
dec
jge
pop
mov
imul
or
jb
cmp
pop
scas
xor
test
lods
pusha
push
into
xor
mov
jbe
dec
ret
iret
mov
pop
sub
mov
test
ss
add
inc
je,pn
inc
xlat
sbb
mov
sub
cmpsl
dec
cmp
sbb
insb
pop
sub
push
jb
lret
pop
js
cmpsb
mov
aaa
inc
mov
sub
in
adc
xor
out
mov
imul
scas
lock
hlt
in
jne
int3
sti
add
inc
insl
push
jne
pop
incl
jbe
lock
push
mov
or
inc
daa
push
cmp
push
pop
in
negl
cltd
xor
iret
xchg
pop
inc
pop
rcr
push
add
xor
xor
or
idivl
mov
roll
ret
adc
xchg
outsl
stos
loopne
inc
popf
test
mov
outsb
push
pop
jo
inc
xchg
sbb
push
aas
cmp
adc
jne
es
lods
pop
or
push
insb
mov
sbb
dec
leave
clc
ret
movb
jl
shrb
in
popa
shlb
push
mov
aad
or
rorl
in
clc
mov
enter
cmpsb
inc
rcll
sbb
sub
fwait
sub
mov
ds
out
insb
mov
sub
jp,pn
lcall
lret
dec
mov
cmp
sub
xchg
and
ja
adc
orb
adc
not
cmpl
xchg
dec
pop
xlat
rcl
push
xor
je
cmp
jp
daa
mull
mov
or
sub
cld
aaa
lret
fldcw
xchg
mov
fmull
aam
xchg
or
sub
cwtl
lods
pop
sarb
cmp
sub
nop
mov
pop
sub
xchg
mov
jmp
inc
mov
es
icebp
sub
scas
push
cli
dec
enter
adc
sahf
aaa
lahf
mov
mov
mov
jg
pop
mov
xchg
inc
ret
and
jecxz
cs
push
sub
jbe
lcall
jo
stos
jmp
and
xchg
lret
mov
xchg
ficompl
add
push
es
btr
mov
jl
xchg
mov
shrb
int3
pop
out
cmp
popa
pop
leave
pop
cld
add
mov
mov
out
sbb
dec
shrb
loope
sbb
mov
xor
aas
jno,pn
dec
mov
push
or
inc
into
or
cmpsl
push
jne
popf
xor
int
mov
jecxz
lahf
pop
jl
push
mov
xchg
xchg
sbb
je
jmp
das
lods
cmpb
push
add
xor
fcoms
outsl
cli
test
icebp
jecxz
adc
aaa
in
mov
insl
bnd
or
mov
adc
aas
push
mov
loope
push
in
jb
mov
xchg
loop
dec
jp
cmpsl
idivb
pushf
aaa
pop
push
push
cmp
cs
cmp
and
in
enter
movsl
jmp
fimuls
pushf
sub
outsl
clc
cmc
push
test
bound
xlat
in
push
sbb
sbb
lea
mov
leave
jge
cmp
sub
jno
jge
incl
push
aad
add
and
cmp
push
jmp
out
fdivrs
orl
sbb
sbb
xchg
jno
and
cmp
aas
ret
imul
stos
xchg
fldt
test
jo
faddl
mov
in
jnp
or
cmpb
push
not
sub
movsl
ja
ljmp
ds
cmp
int3
mov
mov
add
aas
stos
mov
jo
lods
in
sbb
cmp
int
sub
dec
repnz
ds
fidivl
arpl
or
daa
mov
cmp
add
bnd
xchg
dec
cmpsl
arpl
mov
jle
and
lock
scas
or
pushl
in
mov
stos
push
das
fidivl
subl
mov
pop
jns
mov
aas
push
inc
enter
popf
cmp
in
sub
jge
xlat
es
xor
inc
cmc
outsb
inc
aaa
mov
sub
je
push
hlt
outsl
aam
js
push
pop
push
scas
jae
ljmp
enter
or
and
popa
xchg
xor
push
arpl
and
sbb
push
xor
jmp
cmpsb
sbb
out
and
in
inc
push
imull
loop
adc
xchg
pusha
and
mov
xchg
pop
or
pop
sub
clc
mov
jmp
test
pushf
adc
adc
and
loope
scas
sub
ucomiss
mov
jo
xor
push
xor
sub
mov
mov
sbb
pop
sbb
cmp
in
inc
mov
inc
pushf
jnp
test
jp
dec
jmp
cmp
sub
mov
add
push
sub
ds
jle
ds
xchg
inc
not
push
pushf
in
iret
scas
sub
mov
loopne
xchg
inc
mov
loopne
in
xrelease
jnp
jmp
sbb
mov
shll
xor
sub
decb
out
std
sbb
fisttpll
jecxz
jl
jbe
jp
negl
pop
pop
insl
dec
or
sub
or
lret
adc
xchg
sahf
scas
call
or
dec
xchg
pop
out
pusha
faddl
ja
add
pop
sub
iret
rolb
movsb
mov
popa
dec
jne
mov
daa
xchg
adc
xchg
rorb
sarl
sub
mov
fildll
hlt
rcll
cltd
push
stos
add
push
add
mov
dec
call
js
xor
dec
shlb
fldt
add
inc
outsl
je
nop
ja
pop
int3
push
ljmp
adc
push
push
xchg
mov
xor
cmp
loopne
sahf
lret
insl
xchg
std
incb
sbb
pop
mov
adc
lods
fcomps
push
jl
mov
cmpsb
mov
mov
ja
aad
jno
ficoms
dec
movsl
scas
dec
mov
sub
lods
ret
jns
pop
or
mov
and
stc
xchg
push
arpl
mov
lret
mov
bound
xor
insl
adc
push
adc
jno
addr16
pop
scas
xor
jg
dec
fldl2t
paddusb
imul
ret
lcall
jmp
enter
adc
adc
dec
xchg
mov
push
leave
push
pop
push
xor
push
push
cld
fwait
movsb
dec
mov
mov
mov
cs
pop
enter
mov
cld
faddl
idivl
sbb
lods
xchg
jne
or
mov
xchg
mov
mov
mov
in
xlat
popl
fs
fidivs
and
arpl
add
negb
mov
fdivrs
cmpsl
das
loope
pusha
aaa
push
jl
ret
fcoml
adc
out
sub
pop
mov
mov
loop
js
inc
test
mov
loop
pop
cmp
mov
inc
jg
cwtl
xchg
test
mov
aaa
stos
sub
clc
sti
pop
xchg
sub
imul
push
stos
and
sub
pop
xchg
es
sarl
aas
mov
rcl
pop
mov
pmaxsw
push
push
insb
insb
ds
sub
sub
js
cld
repz
lods
filds
cmp
ljmp
cmpsb
push
and
fildl
std
lret
outsl
pop
push
daa
insb
imul
jp
sub
xchg
fcmovne
dec
testb
fistpll
sub
clc
cltd
mov
cmpb
pushf
fsts
or
jno
push
stc
frstor
push
in
cmp
lea
sub
xchg
add
mov
xchg
mov
add
rorb
dec
and
movsb
lea
mov
rolb
out
push
adc
xchg
daa
inc
and
pop
aas
add
aas
shr
aad
pop
das
add
ljmp
or
ja
add
movsl
aam
inc
mov
mov
into
xor
test
call
popf
nop
shlb
cmpsl
loop
in
loop
mov
sbb
in
pop
flds
mov
clc
inc
fstl
in
jno
jecxz
sub
push
and
stos
lcall
inc
cmpsl
aas
xchg
lds
xchg
bound
inc
xor
mov
fisubrs
mov
sbb
outsb
out
push
push
or
or
std
jo
in
cmp
jns
test
add
cmc
imul
cwtl
mov
add
cltd
sahf
pushf
inc
sub
les
mov
mov
in
mov
add
and
mov
xchg
dec
jb
push
mov
sub
aam
inc
mov
xchg
jbe
fildll
cltd
stc
scas
sbb
int3
sbb
xor
dec
jmp
sti
or
jle
test
dec
addr16
cmpsl
sub
mov
jo
imul
scas
pop
fs
lds
add
pop
fwait
pop
sbb
insl
mov
dec
js
pusha
cltd
dec
or
mov
shlb
lods
aas
dec
mov
dec
mov
pop
xchg
pop
cmc
xchg
pop
test
xor
and
sbb
popa
fldlg2
sahf
loopne
push
popa
fldenv
mov
cmp
adc
push
test
or
pop
jge
out
add
add
sbb
jp
outsl
and
outsb
sti
xlat
call
sbb
mov
gs
addr16
dec
mov
adc
dec
test
mov
mov
sub
inc
xlat
lea
cmp
negl
jle
pop
cld
mov
sbb
mov
or
jne
pop
push
movsb
mov
je
enter
stc
gs
aad
push
sbb
xchg
fs
cmp
sub
rorl
mov
lock
cmp
test
shl
push
lock
rclb
jns
sbb
pushf
and
or
or
adc
mov
popa
test
xchg
stc
dec
testl
mov
or
pop
mov
xchg
mov
insb
daa
push
pop
or
lcall
aaa
arpl
data16
xchg
mov
enter
inc
xchg
lcall
popf
sar
jno
fsts
cwtl
sub
scas
call
xchg
sub
mov
pop
jns
fistpl
arpl
and
push
adc
daa
lret
fnstsw
repz
into
adc
mov
mov
je
adc
decb
pop
test
hlt
dec
bound
stc
jno
and
jecxz
shlb
aas
dec
add
or
add
inc
sub
pop
sub
ficoml
test
jmp
inc
xchg
inc
enter
mov
jno
ret
cltd
or
inc
gs
jnp
jnp
into
add
daa
in
in
test
out
and
rorb
loope
mov
adc
fdiv
cmp
lea
addr16
cs
lods
cmp
inc
add
rolb
mov
stos
iret
inc
std
add
insl
push
push
inc
les
addb
lods
je
ljmp
mov
jbe
xchg
pop
jp
aad
aad
xchg
mov
xchg
adc
dec
ret
add
xchg
adc
sbb
inc
and
fs
xchg
dec
ja
and
testl
inc
arpl
mov
dec
in
gs
push
push
push
mov
sub
add
pop
leave
dec
dec
sbb
jnp
push
add
jno
and
aas
sahf
sbb
je
shll
addl
ret
repnz
add
stos
lods
andb
adc
adc
mov
imul
or
mov
fistl
jle
mov
pushf
jno
fwait
aaa
mov
dec
dec
sub
sbb
pop
jae
xchg
sbb
dec
or
out
out
in
test
jg
loop
leave
mov
cwtl
iret
xor
cmp
mov
add
inc
lock
inc
jmp
mov
push
jp
arpl
xchg
xchg
mov
sbb
mov
out
std
mov
lea
clc
sub
push
xorb
jae
adc
imul
js
mov
xchg
test
into
push
mov
jo
ret
repz
mov
jle
or
loope
test
xor
std
add
jmp
xchg
mov
push
or
icebp
mov
add
dec
jns
push
stos
inc
andl
push
ds
test
sub
mov
ret
or
or
lea
dec
pop
pushf
lcall
sub
setb
push
inc
lahf
push
xchg
shl
mov
testb
xlat
in
cmp
mov
ds
ljmp
mov
data16
add
testb
mov
inc
push
hlt
sahf
popf
cmp
push
inc
lret
aad
lcall
pop
test
cmp
jecxz
push
je
insb
mov
cmp
pop
hlt
pop
adc
pop
push
imul
outsb
xchg
les
test
lret
lea
sahf
dec
movsb
testl
lea
inc
js
lock
push
push
rcll
cld
xor
cmpl
adc
into
xor
cwtl
and
adc
leave
sub
xchg
cmp
test
stc
mov
push
jne
cmp
dec
pop
call
inc
test
aaa
rcr
push
add
mov
pop
add
pop
mov
rcrb
pop
out
mov
inc
fsubrl
jae
xor
mov
addr16
inc
sbb
adc
mov
push
fadd
ds
cmp
inc
dec
imul
js
insb
cwtl
mov
mov
xor
lock
add
sub
psraw
mov
mov
lock
ror
and
mov
je
je
hlt
cmp
cmp
in
mov
subb
bound
xchg
mov
pop
bound
inc
loopne
test
inc
inc
push
jnp
inc
in
dec
xchg
dec
pop
dec
insb
push
cltd
pop
pop
add
push
in
mov
aaa
jo
mov
daa
dec
mov
add
adc
sub
out
cmp
sub
orb
fistps
inc
aas
test
mov
lahf
in
mov
jecxz
xchg
jle
add
mov
scas
shlb
mov
sbb
cmpsl
sub
jge
or
test
lods
or
xor
jnp
test
jg
aad
sbb
xlat
mov
cmp
fcompl
lds
movb
shl
pop
add
pop
pop
pop
call
adc
mov
mov
aad
push
sub
loope
mov
mov
jle
sub
adc
push
pop
jg
data16
mov
out
sub
or
mov
xorl
cmp
iret
push
mov
in
pop
mov
jp
in
or
imull
dec
jp
pop
loopne
daa
shll
cld
mov
push
mov
xchg
mov
daa
dec
leave
pop
or
push
and
push
sti
ja
jmp
or
leave
call
mov
pop
das
inc
and
fcomps
jne
inc
mov
jp
push
mov
je
xchg
fstps
adc
sti
push
xchg
in
loopne
shll
ret
ret
push
inc
leave
mov
scas
add
popf
int
fiaddl
cmpb
inc
add
sti
inc
inc
sti
push
repz
js
pop
inc
sub
mov
dec
dec
lock
fcmovbe
outsl
push
dec
or
leave
repz
sar
repnz
xchg
mov
test
subl
into
fbstp
xlat
sbb
adc
fwait
out
std
dec
xchg
mov
in
sbb
mov
dec
pop
lahf
jae
subb
jbe
push
cmp
adc
lea
pop
mov
mov
fdivr
cmp
or
mov
jns
popa
in
in
shll
and
dec
xchg
add
gs
add
xchg
add
sbb
stos
scas
movsl
lds
pop
call
inc
push
pop
fmull
or
fdivrs
lahf
scas
mov
inc
add
bnd
or
shrl
or
push
mov
and
movswl
outsl
xor
add
loop
dec
xlat
jecxz
or
scas
mov
add
rcrl
mov
jmp
sbb
mov
push
out
sub
xchg
cli
mov
xchg
fsubs
out
js
push
jmp
mov
jge
sub
out
mov
mov
rol
adc
and
and
or
mov
and
movsl
enter
dec
jb
or
cmp
mov
sbb
cmp
shlb
push
add
and
pop
or
xor
push
inc
xlat
daa
fdiv
pop
fs
lahf
xor
dec
rol
push
je
jo
iret
jg
lods
insb
push
jns
fcompl
inc
rcrl
push
std
test
sub
mov
insl
out
out
cld
pushf
or
mov
aam
dec
movsl
jl
sbb
add
cmp
adc
pop
sbbb
popf
cmpb
lahf
cli
mov
faddl
mov
or
sub
in
xchg
mov
out
sbb
pop
mov
xchg
into
fs
fnstcw
add
fisubrs
pushf
ja
or
mov
mov
push
xchg
pop
jb
mov
pop
mov
leave
xor
lock
xchg
xlat
cs
sub
or
cmp
mov
ret
call
mov
imul
mov
jle
or
das
in
lods
sub
dec
pop
mov
pusha
ja
lahf
mov
enter
xor
arpl
fdivrs
lret
outsb
int
inc
add
xchg
dec
stos
add
insl
shll
inc
nop
insl
gs
iret
bound
pop
cmp
xor
jg
insb
push
shl
test
negl
cld
arpl
and
dec
mov
sbb
js
outsb
jmp
mov
and
sub
mov
loopne
inc
out
test
insb
xchg
out
adc
sub
sbb
in
xchg
shlb
mov
ja
fldt
out
sbb
outsl
repz
mov
in
inc
pop
add
rcr
cmpsl
mov
or
jns
xchg
loop
in
loopne
je
add
movb
xchg
test
insb
scas
rcrb
repz
inc
cmp
lods
pop
pop
cmp
jmp
loope
fistpll
mov
pop
mov
mov
adc
pop
sub
test
xor
xchg
xor
testl
jle
cmpb
imull
xorl
sub
cli
mov
fidivl
ja
cmp
test
leave
cli
es
arpl
in
stos
repnz
jb
test
mov
mov
dec
ret
and
or
push
cmp
sbb
lahf
enter
sbb
or
mov
movb
xor
push
popf
mov
lods
scas
pop
or
rol
pop
rcrl
es
ret
and
sbb
jl
mov
rorb
push
pop
jnp
adc
test
into
sub
insl
ret
popf
aam
adc
pop
aas
push
pop
mov
pushf
cli
sub
mov
imul
sbb
sbb
xchg
outsl
sub
cltd
int
je
mov
lea
mov
enter
cld
dec
or
in
rorb
clc
cmp
inc
repz
sti
push
jo
out
ja
jns
mov
adc
ret
in
sub
pop
out
inc
in
ljmp
loopne
sbb
sbb
lock
ss
cmpsb
cltd
into
test
mov
sarb
clc
push
add
ja
insl
fisttps
cld
jle
cmc
mov
popf
xchg
pop
repnz
loope
jae
setnp
fwait
loope
and
aas
and
push
mov
mov
xor
inc
push
xchg
test
mov
lds
mov
ja
stos
sub
jne
or
rcll
jae
ds
xor
mov
aaa
xor
cmpsl
fstpl
mov
rcr
scas
jae
pop
ja
add
sub
stc
pushf
mov
repnz
fmull
out
mov
adc
mov
inc
addr16
xor
xchg
mov
rcrl
lods
xchg
or
jne
loop
or
test
pop
fidivrl
enter
mov
ret
jo
mov
shl
pop
cmp
pop
inc
outsb
xorl
pushf
into
pop
repz
aas
addl
leave
fucom
adc
dec
aad
jns
adcb
push
pop
lds
xchg
cwtl
shr
sarb
sbb
nop
ret
dec
out
mov
or
inc
push
mov
shr
dec
out
sbb
cltd
xchg
cmp
mov
cmp
push
xor
sbb
stos
popf
es
out
pop
das
inc
movsb
mov
sahf
jne
mov
insb
cmp
pushw
mov
jnp
push
cmp
clc
lret
mov
jb
in
into
and
nop
cmpsb
popf
mov
into
mov
xchg
sahf
aaa
shl
xchg
ret
mov
adc
ret
mov
into
adc
repz
sub
or
mov
clc
push
cld
and
xchg
cld
cmp
sbb
out
lea
or
xor
inc
mov
repz
pop
lret
test
mov
shrl
pop
lret
pop
andl
xor
sub
add
aam
jle
dec
mov
js
mov
arpl
mov
mov
adc
sbb
adc
and
cmp
mov
adc
add
lcall
in
das
hlt
icebp
push
or
imulb
fdivrs
shlb
mov
xchg
fstl
add
xchg
mov
dec
popl
stos
test
stc
lock
hlt
mov
ja
das
into
ret
add
sub
inc
pop
shr
lahf
adc
popa
jno
aad
mov
mov
sti
clc
xor
jge
fdivs
mov
stos
mov
pop
out
xor
dec
pop
imull
dec
fisubl
push
dec
aad
add
aad
imul
ss
inc
mov
or
stos
imul
ss
test
cwtl
sbb
imul
xor
loop
pop
test
cmp
jle
adc
xor
xor
call
cmp
jmp
popa
and
insl
xchg
jmp
add
push
or
mov
in
jmp
add
mov
movsl
outsb
push
subb
mov
scas
jne
sbb
push
leave
jmp
dec
movsb
jecxz
decl
insl
cmpsb
sbb
ja
cmp
sbb
adc
fisttpl
push
push
adc
xlat
mov
cmp
mov
in
insb
xchg
inc
push
pop
cmc
test
loope
test
rorb
les
push
mov
cmp
scas
mov
pop
sbb
jns
fcmovbe
clc
xchg
insl
push
mov
or
dec
and
jl
cmc
pop
jecxz
jnp
and
loope
add
cmp
cmp
push
inc
push
add
movsl
mov
mov
daa
jbe
test
out
jge
clc
add
ret
insl
mov
iret
movsl
cmc
xchg
rcr
dec
test
sbb
pop
nop
loopne
outsl
repz
adc
push
stc
ficoms
inc
inc
aam
cmpsb
fidivrl
and
jge
pop
or
sti
lahf
jnp
jnp
jl
cmpsl
lea
mov
ljmp
cmpsb
mov
enter
xchg
mov
ss
dec
push
mov
cmp
cmp
gs
repz
xor
aaa
inc
stos
in
data16
call
mov
cld
jl
push
inc
repnz
popa
in
sahf
push
ja
gs
sub
jne
popf
addb
cmp
inc
mov
in
sbb
ljmp
out
inc
xchg
adc
push
jae
sub
add
adc
jbe
repz
mov
jo
imul
pop
xchg
jno
adc
icebp
imul
stc
jno
ret
imul
mov
das
dec
rcr
mov
xlat
add
cmpl
and
mov
push
xchg
xor
push
outsl
fstps
fdivrp
outsb
cmp
dec
jg
stos
inc
xor
and
imul
mov
ljmp
jmp
sbb
xlat
xchg
dec
adc
call
mov
fisttpll
dec
pop
adc
dec
push
push
in
loope
loop
cmp
cwtl
cmp
xchg
push
xor
out
mov
lret
es
data16
or
insl
outsl
and
and
xchg
cmpl
xchg
mov
cmpl
jo
out
inc
pop
movl
xchg
sti
lds
cwtl
cmp
sub
adc
addr16
or
mov
fcomps
and
test
xchg
sub
aas
int
cmp
iret
in
lock
inc
cmc
fldl
fwait
enter
jbe
lcall
mov
add
ret
test
push
ret
gs
pusha
sub
fdiv
inc
pop
pop
sub
add
or
inc
mov
push
sbb
int3
stos
adc
mov
or
sbb
cmc
xchg
popf
lea
arpl
mov
mov
outsb
mov
pop
add
inc
test
cli
fs
mov
fwait
lcall
fistpll
mov
cmp
pop
stos
movsl
in
mov
out
lahf
call
out
mov
imul
pusha
mov
mov
dec
mov
sub
add
xchg
adc
jg
cmp
idivb
div
imul
data16
fisubrl
dec
or
mov
adc
pop
jle
xor
int
xchg
sbb
stos
lret
jmp
adc
hlt
stos
push
mov
cmp
xor
popf
in
xchg
mov
push
adc
cmp
js
jg
fsubl
fidivl
or
xorb
mov
inc
pop
push
mov
inc
lods
dec
call
add
mov
mov
mov
push
out
add
or
inc
jecxz
push
ret
mov
ret
jae
jmp
push
push
or
xor
js
cli
mov
xor
xchg
and
addr16
sbb
cmp
inc
xchg
add
push
stos
mov
aaa
test
mov
lret
fs
pusha
and
ret
out
adc
add
jae
es
lods
or
mov
popa
fcomps
fs
or
cmp
cmp
add
jae
pop
fwait
sub
pusha
mov
repnz
jmp
and
jl
jbe
dec
repnz
inc
or
pop
fistl
imull
in
add
data16
jle
pop
daa
fwait
mov
cmpsb
lcall
mov
jno
or
fcompl
mov
xchg
das
mov
pop
xchg
xor
dec
xchg
data16
jb
pushf
mov
pop
jmp
pop
push
mov
push
sub
add
cld
and
aaa
xchg
mov
push
push
adc
test
daa
push
sub
or
mov
incl
mov
cmc
test
call
mov
push
and
ret
shl
adc
sub
inc
adcb
fwait
ror
rclb
outsb
or
jg
scas
jne
push
pushf
push
lods
push
fwait
out
out
pop
xor
add
mov
pop
subl
cmpsl
pop
iret
mov
in
xchg
popa
and
enter
jmp
mov
dec
mov
int
scas
xchg
repnz
lods
inc
out
mov
enter
jno
fwait
sbb
out
movsl
arpl
inc
and
and
xlat
lahf
cmp
and
fsubs
adc
ds
push
dec
inc
sub
cwtl
push
std
fmull
push
aam
jae
xlat
cmp
xchg
add
sbb
mov
inc
mov
xchg
rorl
negl
iret
jns
call
les
cmpsl
dec
push
add
jg
mov
mov
xor
sub
or
out
in
xchg
mov
out
test
out
gs
inc
popf
add
dec
jge
or
data16
inc
popa
into
mov
push
loopne
dec
dec
jne
out
mov
cmp
xor
jb
fnstcw
pop
xchg
in
or
icebp
push
out
lea
ret
andb
enter
push
push
sti
mov
inc
rcrb
jp
notl
inc
inc
popa
mov
sbb
jae
imul
push
movsl
pop
mov
inc
xor
mov
xor
scas
mov
mov
and
out
inc
ja
test
testb
div
lahf
add
xchg
adc
lock
nop
xchg
bound
js
sub
add
inc
clc
sbb
cmpsb
stc
or
push
test
out
icebp
pusha
mov
sub
push
je
add
hlt
or
mov
lahf
int3
in
inc
mov
pop
mov
adc
xor
frstor
sub
in
movhps
imul
scas
in
test
xchg
pushf
pop
jnp
iret
push
shl
movsl
or
push
xor
push
adc
hlt
rolb
pop
push
mov
pop
pop
dec
lret
sahf
popa
pmulhw
pop
mov
mov
xchg
sahf
mov
shl
shr
jl
hlt
dec
fdivs
mov
push
mov
mov
sub
rorl
mov
lods
fwait
test
sbb
jno
aas
or
xlat
outsb
inc
or
cld
ja
inc
in
lahf
rorb
data16
dec
aam
lahf
xchg
sub
test
je
push
mov
jbe
arpl
loopne
inc
lahf
sarb
insb
into
dec
dec
sbb
fsubl
xor
es
pop
call
adcl
test
scas
out
mov
pop
loop
hlt
into
cmpsb
roll
jg
mov
sub
out
mov
cs
lods
xor
jmp
std
aaa
test
sbb
mov
xor
pop
sbb
ret
jae
or
push
les
cld
dec
dec
das
scas
dec
mov
iret
fwait
ja
jns
andl
popf
cmp
leave
mov
inc
inc
sub
in
in
push
jmp
fstl
pop
sbbl
popl
adc
lret
iret
ficomps
cmp
push
cltd
cld
xchg
jne
out
xchg
jp
lcall
jns
or
lahf
stc
movsl
andl
daa
test
sbb
loop
fadd
dec
je
scas
out
scas
shll
movsl
popf
xchg
fs
scas
sub
ds
arpl
test
scas
sub
call
mov
xor
jbe
stc
mov
lock
das
jle
or
ljmp
dec
int3
shll
jae
and
into
push
sbb
adc
mov
or
dec
xor
incl
arpl
cmp
xor
mov
mov
push
or
add
add
sahf
sti
push
pop
icebp
xchg
daa
sarl
inc
sub
cli
fcomip
jg
popf
push
lret
mov
iret
aad
jno
fists
jnp
pop
push
mov
test
jge
add
cltd
mov
dec
cmp
repnz
movsb
xor
lods
inc
sub
test
test
pop
packsswb
dec
fnstenv
sahf
sbb
mov
rcrw
les
adc
sub
pop
or
lret
std
sbb
sub
adc
fstl
rcrl
add
push
push
ret
subl
out
adcb
add
pop
add
pop
int3
and
daa
stos
mov
mov
and
mov
pop
add
repz
stc
sub
mov
pop
sti
in
movsb
iret
push
loop
pop
and
jl
add
jbe
or
imul
es
fildl
push
xor
jns
enter
fldt
sub
xchg
inc
or
push
sbb
and
cli
mov
fadd
xchg
push
fnstsw
jb
out
sub
push
insl
inc
mov
daa
mov
sub
mov
xor
in
jae
xchg
mov
cmpsl
sub
iret
jecxz
sbb
ds
push
icebp
out
hlt
aad
mov
push
aaa
xor
xchg
out
lds
fstpl
adc
lcall
cmpsb
and
nop
inc
inc
push
mov
mov
sub
jg
push
int3
add
addl
jo
psubusb
imul
jmp
push
loop
xor
lret
mov
or
inc
inc
repz
inc
imul
cmpsl
rcrl
fdivrp
jl
syscall
or
adcb
xchg
mov
pop
repnz
xor
mov
loopne
iret
add
push
fidivl
cmp
mov
mov
lods
mov
insl
dec
add
mov
mov
ret
ljmp
lret
ror
ljmp
sub
bound
leave
stos
or
das
out
pop
or
mov
sbb
ljmp
mov
fnsave
mov
dec
xor
cld
lret
pushf
xor
popf
arpl
popf
dec
jp
gs
arpl
sbb
ljmp
call
xchg
mov
cmp
mov
into
adc
sahf
mov
sbbl
movsl
xor
stos
or
push
push
shlb
popa
mov
xor
jmp
neg
cs
mov
adc
aam
jmp
lock
or
xchg
xchg
push
fmulp
dec
xor
fcomip
in
mov
push
ret
xor
in
cmp
mov
sub
sub
shlb
testb
into
jne
jp
jle
imul
mov
adc
jmp
shrl
mov
mov
inc
arpl
adc
out
jl
push
into
in
shlb
mov
mov
cmpsl
lret
mov
mov
cmp
dec
xlat
out
sbb
int3
rcrl
cmp
jne
mov
xor
cmpsb
mov
sar
adc
test
ss
push
ss
xor
and
mov
inc
orl
cmpsl
adc
sar
adc
cmp
test
xchg
fwait
mov
imul
push
mov
inc
and
or
or
add
imul
inc
push
xchg
shl
leave
inc
sbbb
xchg
movsl
and
pop
mov
in
scas
jecxz
xchg
aas
mov
loopne
mov
inc
popf
repnz
jecxz
leave
and
out
lods
fistpl
add
repz
aaa
mov
loopne
sub
push
fwait
sbbb
xchg
test
mov
pop
add
cmp
mov
adc
arpl
pop
push
inc
adc
movsl
dec
in
hlt
add
imul
into
pop
jo
inc
or
sbb
and
pop
aam
out
and
js
rcrl
xchg
push
sbb
and
cltd
mov
jb
or
or
dec
lret
ficomps
xlat
dec
lahf
jno
mov
pushf
add
arpl
ret
push
pop
cmp
fisttps
sub
bound
mov
mov
sub
cs
or
dec
jno
ret
pop
mov
adc
add
mov
mov
fldcw
push
out
mov
enter
lahf
sub
and
push
or
sbbl
pop
out
sbb
out
push
mov
mov
push
mov
pusha
repnz
cwtl
notb
pop
testl
sbb
cmp
cmp
push
xor
jle
aas
sbb
fscale
addr16
or
mov
adc
lahf
roll
xor
cmp
cmp
pop
sbb
dec
lods
orb
adc
sub
pop
and
icebp
lds
xor
imul
gs
fwait
int
shlb
pop
jnp
push
es
enter
movsb
daa
push
andb
mov
xor
xor
xor
hlt
loopne
push
sbb
insw
fsubrl
movsl
imul
dec
in
jmp
jnp
int
ror
andl
js
out
int3
push
pusha
sbb
mov
stos
inc
cmpsl
mov
das
aad
push
mov
sahf
adc
ja
inc
mov
push
sub
jmp
jecxz
inc
int
jae
jp
enter
or
fidivs
xchg
aaa
sub
and
push
push
cmc
fsubrs
pusha
cmpsl
mov
dec
clc
cmc
sub
pop
inc
jns
cmpsl
cmp
mov
lahf
fadds
push
lods
sbb
lods
rcl
rcrl
ja
inc
mov
and
dec
test
jl
pushf
jns
stos
loop
mov
add
fwait
sub
ret
dec
insl
xor
pop
jno
adc
jbe
in
fcmovnbe
pop
pop
ret
ret
gs
jns
cltd
jns,pn
popf
mov
dec
scas
jg
addr16
lea
int3
shr
pop
in
js
cmp
and
fwait
push
dec
push
cmc
push
fsubr
das
push
ds
inc
mov
fs
pushf
outsl
les
andl
jle
cld
scas
push
negl
push
xor
mov
cmp
mov
jmp
fistpl
daa
cmp
pop
es
add
neg
imul
adc
cmpsl
mov
pop
xchg
or
insl
cmp
sub
inc
mov
mov
cmp
mov
dec
cmc
mov
mov
jae
xchg
js
mov
and
mov
mov
das
or
in
sub
adc
test
or
iret
dec
mov
inc
xchg
xchg
mov
js
sbb
xor
insb
aas
test
sti
sti
mov
xor
lods
push
lea
shlb
dec
mov
sub
cwtl
fcmove
jl
sub
les
xchg
cld
cs
or
inc
push
or
lds
jg
pushw
and
lahf
insl
jne
fidivl
lds
stos
inc
repz
jle
aad
scas
mov
fninit
int
pop
mov
mov
lods
pop
jle
cli
mov
js
jl
mov
inc
lret
sbb
cmc
push
in
stc
lds
jno
rcll
pop
and
sub
xchg
bsf
dec
xchg
fsubrl
imul
and
imull
mov
inc
cltd
mov
xor
pop
aad
xchg
cmc
cli
bound
mov
xchg
movsl
rorb
arpl
ds
arpl
jecxz
pop
mov
data16
ljmp
testb
out
inc
lds
fwait
sub
lret
adc
in
scas
inc
jecxz
mov
sti
stos
sub
shll
pop
clc
repnz
add
xor
enter
imul
push
test
push
sub
add
aas
pop
jmp
xor
jae
sub
sbb
push
xchg
and
push
fxch
mov
xor
push
inc
cmc
sub
pop
bound
dec
inc
addl
shrb
aas
dec
and
mov
stos
inc
test
int3
in
notb
das
cmp
shrl
jo
sub
dec
jg
xchg
cmp
push
out
xchg
les
sbb
mov
subb
push
jmp
pop
cmp
das
mov
js
testl
push
aas
adc
lahf
adcb
dec
jne
dec
loope
ror
test
or
popa
mov
sub
scas
sti
dec
mov
mov
push
inc
lcall
mov
loope
int
adc
xor
shrb
pushf
jg
push
or
jnp
mov
js
push
js
fisttpl
add
hlt
inc
sbb
cmpsl
lret
jne
sbb
push
sbb
lahf
lcall
jno
ds
sub
mov
jle
sti
lods
sub
movsl
ret
fcompl
inc
mull
add
jnp
cwtl
add
and
cmp
xchg
into
sbb
push
lret
into
inc
sbb
sbb
mov
push
stos
fcompl
mov
mov
jo
in
lahf
lret
mov
sbbb
sub
sub
xchg
cwtl
loop
and
movsl
inc
sub
es
sub
add
xchg
add
outsb
dec
xchg
lret
out
sub
and
mov
lret
scas
xchg
and
push
push
dec
push
inc
adc
int
outsb
sub
cwtl
dec
repz
cwtl
xor
pop
test
inc
out
mov
inc
iret
frndint
mov
mov
push
lods
and
rep
mov
arpl
punpckldq
in
mov
sub
push
or
shlb
dec
orl
adcb
mov
sahf
insl
jecxz
sbb
scas
pop
pop
jp
mov
out
xchg
std
mov
lock
adc
leave
enter
ljmp
pop
outsb
pop
loopne
stos
cmp
sub
sahf
jbe
stos
aaa
in
ja
out
shlb
icebp
xlat
mov
sub
push
mov
lret
out
push
sub
xchg
pop
into
hlt
divb
mov
fwait
add
inc
push
mov
xchg
fsubs
insl
call
cltd
fadds
data16
loopne
clc
shlb
pop
les
gs
and
lret
mov
mov
add
add
mov
sub
int
push
and
dec
adc
push
push
mov
bnd
cmp
or
mov
ret
mov
fsubr
inc
xor
jnp
push
mov
fstps
cmpsl
jns
push
mov
inc
pop
jbe
shlb
test
insb
daa
gs
je
out
or
xor
jb
mov
mov
push
xchg
or
add
add
int
sub
jp
mov
clc
cmpb
sub
cltd
shrl
xchg
out
lea
cmc
jb
lea
test
adc
push
stos
out
out
push
pop
pop
inc
mov
mov
pop
fs
fwait
ret
mov
jp
pushf
jae
cmp
xchg
inc
jl
mov
jne
test
mov
lahf
stc
fisubrl
cltd
adc
mov
aam
jge
pop
out
cmp
stos
push
mov
out
lcall
inc
mov
xchg
push
push
nop
lret
mov
cld
lds
cmp
loop
mov
lods
loope
cmp
mov
mov
insb
adc
mov
outsl
jnp
cmp
and
das
cwtl
fistps
test
add
fsubrl
jle
cmc
xchg
ds
sahf
arpl
add
push
mov
add
xor
das
mov
lcall
sbb
push
push
imul
loopne
xchg
mov
stc
imul
cmp
mov
and
adc
ljmp
call
loope
mov
dec
or
push
and
fdivp
dec
dec
push
fisubrs
sbb
test
andl
faddl
jns
jns
mov
lock
lods
push
lea
xorb
pop
mov
mov
shll
xchg
and
push
mov
subl
and
arpl
test
test
mov
xchg
pop
movsb
out
pop
pop
or
add
xor
aam
pop
arpl
dec
aad
and
in
dec
and
mov
es
push
iret
pop
jge
add
fisttpll
jle
mov
or
sub
movsb
cld
or
push
clc
xor
das
pop
clc
repz
mov
out
js
jb
pop
xor
mov
jae
pop
pop
rcll
daa
test
aas
cmp
mov
sbb
cmpsl
lds
in
test
jno
stos
push
fldcw
outsl
inc
adc
sub
push
call
fmuls
jns
sarb
ljmp
in
sub
scas
ds
scas
and
sub
jp
inc
out
das
jp
cmovle
enter
mov
imul
sbb
cmp
stc
sub
mov
dec
mov
pusha
popa
bound
repz
fsubl
mov
pushf
das
dec
mov
sub
fadds
movsl
fnstenv
lds
dec
in
xchg
fisubs
aam
mov
insl
push
movsb
or
js
cmp
lretw
sub
movsl
push
add
cli
pusha
ds
bound
mov
sbb
dec
jo
repnz
sbb
sbb
inc
fidivs
xor
or
jp
int3
movsb
xor
imul
pop
push
lods
cmc
clc
lods
jl
int
jbe
jbe
dec
inc
popa
fcmovnu
inc
cmp
cmp
fstpt
pop
mov
pop
pusha
cmp
insb
add
fcoms
lds
call
loope
ret
add
sahf
leave
daa
inc
call
pop
sbb
jp
mov
xchg
in
dec
xor
loopne
add
arpl
out
mov
icebp
and
fnsave
and
outsl
cmp
aam
push
xchg
inc
fildl
jmp
pop
dec
inc
pop
sahf
pop
cmpsb
ss
add
mov
add
leave
push
jle
mov
popa
pop
xchg
mov
xor
xchg
and
push
sarl
xor
aad
push
or
xor
test
or
xor
cmp
push
jmp
add
cmc
cmp
inc
and
rcrb
pop
pushf
cmp
shrb
jo
sub
stos
out
imul
aas
cmp
push
fs
pop
int3
jl
xor
sbb
in
push
cmpsb
jne
xorl
popf
call
and
sbb
cmp
add
fidivl
das
jb
or
sbb
or
incl
adc
and
push
jnp
xchg
popf
mov
push
imul
test
cwtl
sub
out
sbb
mov
out
imul
shll
test
sbb
fldenv
dec
push
ljmp
mov
fucomp
repnz
fst
into
lahf
jno
sub
jp
lds
pop
inc
int
sub
imull
daa
inc
mov
outsb
add
or
and
inc
and
orb
mov
xor
xchg
mov
cmp
xor
push
or
sub
icebp
int3
push
aam
ret
sub
inc
loopne
xchg
insl
inc
cli
mov
add
lea
mov
jmp
scas
out
mov
xor
aam
cmp
mov
add
mov
and
bound
mov
mov
push
enter
repz
andb
or
jp
lahf
jp
lret
mov
mov
out
aam
in
and
les
mov
jge
xchg
lods
int
lds
mov
shll
loopne
xchg
stos
aad
adc
and
pop
push
xchg
aad
pop
test
es
outsl
clc
jmp
mov
push
stc
jp
jg
or
xchg
shl
push
out
out
pop
fisubrs
adc
xchg
pop
jmp
in
out
push
push
mov
testl
and
subb
les
pop
or
bound
push
out
pop
ds
inc
sub
jmp
jl
pop
push
add
cmp
adc
sbb
dec
xchg
loope
dec
mov
pop
mov
jecxz
xchg
loop
loop
xchg
push
mov
dec
pop
dec
sti
out
fisubs
jle
insb
jns
ret
add
mov
fists
lds
ss
mov
add
out
clc
pop
out
cmp
in
mov
shlb
adc
mov
inc
dec
ficompl
mov
test
lea
pop
aad
push
fistpll
jno
scas
or
js
inc
inc
jl
aam
push
jno
push
hlt
push
mov
scas
sahf
sti
int
dec
adc
sbb
and
fnstenv
popf
into
mov
inc
arpl
adc
lods
out
repz
sbb
call
and
mov
arpl
jmp
scas
mov
cmp
enter
idivb
notb
imul
pushf
aad
lcall
adc
mov
xlat
mull
pop
repz
mov
ret
shrb
mov
cmpsl
jo
rolb
push
jo
jne
movsl
add
daa
jmp
rcrb
or
call
lcall
nop
out
pop
push
add
and
mov
mov
jmp
daa
push
punpcklbw
popa
stos
sub
xchg
pop
xchg
jbe
cmc
adc
inc
or
stc
sbb
sbb
mov
push
fsubrl
mov
and
out
mov
inc
mov
sbb
adc
mov
sub
test
rcl
pop
push
sub
push
dec
sbb
cmp
xchg
jno
cmpsb
and
mov
loope
scas
dec
sbb
aad
psrlq
push
nop
loopne
dec
mov
out
xchg
mov
xlat
rcll
push
fmul
in
mov
ljmp
enter
clc
fldpi
mov
stos
mov
fsubr
shr
push
sub
jns
clc
xor
add
mov
leave
pop
jns
jb
mov
fisttps
dec
mov
lea
sbb
iret
add
and
xchg
cmp
push
adc
aas
mov
adc
fistl
ss
insl
mov
sbb
cmpsb
inc
sub
clc
fidivl
sub
inc
outsl
jmp
ficoms
fs
ret
mov
repz
adc
sub
out
outsb
push
sub
sub
lret
out
lret
push
or
pop
daa
or
pop
mov
mov
dec
jle
cmpsb
add
cmp
mov
add
popa
jg
idivb
fidivrl
lea
loope
or
sbb
scas
dec
sbb
mov
xchg
lods
mov
push
jb
xchg
inc
push
xchg
ret
jle
movl
lret
mov
loop
in
pop
cmp
imul
loope
lret
xchg
lahf
jnp
adc
jle
insb
lret
call
inc
dec
push
push
aad
int3
fistpl
lock
fadds
nop
and
arpl
cmpsl
outsl
xchg
and
push
dec
sbb
cs
inc
mov
push
fistpll
pusha
cmp
sub
fs
data16
mov
das
and
aaa
pop
push
xchg
xchg
xlat
les
fwait
mov
sub
test
sahf
bound
add
jge
xchg
xchg
test
mov
xlat
pop
scas
dec
adc
jp
sarl
pop
xchg
lock
addb
xchg
and
incl
mov
and
or
xchg
orl
sub
inc
clc
sahf
cmp
int3
jl
out
inc
shr
andl
mov
xor
add
js
pushl
ss
sub
inc
cwtl
sub
popw
or
jp
repz
into
inc
push
sbb
iret
sub
xor
cmpsl
xchg
xchg
in
aam
lods
sbb
cmc
outsb
jmp
jle
cmp
out
fcompl
out
pop
test
daa
xor
jge
sbb
mov
jg
inc
into
leave
loope
jno
test
mov
push
adc
cmp
inc
jo
arpl
out
pop
notl
adc
cmp
sbb
nop
dec
jmp
xchg
xchg
fmull
inc
dec
rorl
into
aad
mov
adc
cmc
aas
push
sub
jne
mov
mov
into
adc
enter
pop
fimuls
sub
lahf
adc
shr
out
pop
out
hlt
xor
dec
mov
mov
lret
cmpsl
popa
lea
stc
add
idiv
ljmp
jnp
xchg
in
int3
sahf
and
cmpsl
fs
in
out
add
bound
mov
movsl
adc
cmpsl
fisubs
adc
in
and
cmc
mov
cmp
xor
mov
cmp
sbb
lock
orl
push
rclb
xlat
dec
sub
lret
stc
movsb
nop
fisubrl
lahf
xchg
and
inc
sarb
test
jecxz
mov
nop
sbb
mov
pusha
fisttpll
mov
jecxz
inc
cmp
mov
int
daa
test
jne
out
ljmp
fs
imul
imul
adc
fsubl
adc
fisttpl
pop
jmp
ss
lds
or
popa
ret
jle
pop
push
into
mov
xlat
adc
push
xchg
je
fnstenv
xchg
pop
mov
xchg
int3
add
add
out
mov
push
fildl
xor
repz
xor
xor
cmc
cmp
jg
lret
scas
lds
clc
xchg
sub
std
arpl
jnp
outsl
rclb
stos
add
lcall
es
xchg
mov
cli
jge
xchg
aad
jno
sti
adc
push
xor
jecxz
inc
repnz
rorl
jbe
push
test
jle
add
push
out
jae
ret
mov
movsl
ds
dec
sub
pop
inc
das
and
push
and
int
mov
movsl
fimuls
jbe
sbb
lahf
xor
out
cmp
ds
cmp
addr16
mov
mov
pop
outsb
ljmp
xchg
jp
jle
sub
fadds
inc
in
fdivl
call
adc
dec
std
dec
and
sub
mov
mov
xchg
lods
push
es
mov
mov
aam
aaa
cld
aad
mov
mov
aas
xor
pop
repnz
cld
jp
popf
adc
jg
ret
push
pop
rcrb
out
ljmp
out
pusha
cmp
push
std
xor
cltd
cmpb
sub
and
inc
aad
cmc
rorb
jmp
xchg
add
and
and
jns
xchg
jge
push
pop
and
popa
fistl
dec
mov
mov
jle
outsb
jns
call
outsb
mov
cmp
and
repnz
data16
jp
add
push
cld
mov
stos
pusha
pop
xor
in
rep
loopne
iret
jmp
mov
insb
call
jmp
subl
jecxz
not
sub
inc
jl
mov
lahf
sbb
cmp
adc
clc
or
jp
or
shrl
cmc
ljmp
jle
stc
dec
scas
mov
pop
addl
add
mov
mov
clc
pusha
mov
stos
jns
in
movsb
jb
loopne
dec
lcall
mov
in
aas
roll
xchg
xor
sub
pop
jle
inc
pop
cmp
fxch
jne
mov
jae
inc
test
pop
inc
cltd
mov
cmc
insl
pop
push
rcrl
fidivl
adc
insb
mov
ror
cmc
loope
hlt
push
test
cmp
in
lods
mov
ror
xor
and
push
mov
jb
mov
ret
sbb
pop
cmp
out
inc
out
sbb
iret
adcb
int
arpl
lret
or
dec
lods
shl
bsr
mov
iret
addr16
dec
inc
pop
xchg
ljmp
int3
sbb
das
pop
mov
mov
mov
sub
jnp
pop
mov
clc
sbb
cli
dec
push
xchg
jo
movsl
and
test
push
pop
es
xor
insl
ss
or
cs
rorl
xchg
popf
jmp
hlt
adc
sbb
ret
xchg
out
stc
push
sbb
scas
jmp
mov
mov
xor
adc
cmc
sbb
adc
jp
lock
call
int3
push
fbld
adc
or
push
add
mov
mov
pushf
fwait
scas
cmp
push
mov
cltd
add
test
sbb
addb
jnp
push
inc
popa
shr
iret
hlt
dec
xchg
pusha
mov
es
fstpl
mov
addr16
cltd
sbb
cwtl
shl
aaa
int3
lods
pop
lds
pop
cmp
repnz
seta
jns
aam
lahf
jb
inc
inc
cli
xchg
loop
adc
adc
adc
mov
add
xchg
int3
mov
mov
add
add
push
pop
jo
xchg
rcrl
imul
mov
adc
add
mov
pop
lea
test
mov
or
xorb
or
push
pop
movsb
mov
sti
or
repz
lcall
or
or
inc
xor
fcoms
sub
xchg
push
fidivrl
sbb
addr16
mov
push
ret
lds
push
fildl
pop
enter
push
sti
fwait
xadd
mov
dec
cmp
xor
fnstcw
sbb
xor
popf
push
inc
das
int3
out
xchg
xor
sarb
bound
enter
adc
xchg
fwait
nop
jg
sbb
js
mov
aaa
or
mov
jae
sub
dec
repz
cltd
inc
lret
lahf
jecxz
push
aad
cmp
fwait
outsl
clc
cmp
movl
int
jl
scas
pop
push
xchg
lods
mov
mov
xor
adc
inc
lret
stos
adc
jge
or
jecxz
lods
popa
mov
jmp
sbb
inc
xchg
lods
or
mov
rorl
fmull
ja
adc
fistpl
cmp
add
enter
arpl
and
inc
jae
loope
pop
ficoml
dec
pushf
sub
scas
xchg
inc
push
in
add
or
jmp
es
pop
mov
into
insl
sbb
sub
stos
mov
mov
add
adc
inc
ret
out
jno
std
jbe
push
in
js
mov
stos
add
cli
lock
dec
inc
faddl
neg
rclb
lods
mov
add
cmpsw
add
and
sub
jmp
das
dec
je
movsb
clc
mov
sub
jl
or
mov
dec
push
shld
mov
rorl
xchg
push
push
dec
xchg
pop
sub
sbb
mov
clc
bound
sbb
ret
xchg
lret
pop
sub
and
gs
mov
jge
nop
je
cmp
sub
js
iret
arpl
mov
lock
aam
jg
push
add
push
add
jle
insb
add
mov
inc
das
fsubrl
insl
jae
push
mov
mov
xchg
stos
nop
cmpsl
push
cltd
push
popa
jg
mov
stos
dec
jp
xchg
cmp
hlt
imul
mull
add
pop
sbb
fucomp
xor
or
jo
pop
xchg
popf
popa
loopne
adc
jne
or
mov
xlat
push
movsb
fwait
mov
xchg
adc
movl
rorl
in
iret
cmpsb
dec
stos
cmp
push
xchg
inc
pop
inc
int3
pop
sub
call
adc
outsl
mov
jb
popa
sbb
inc
push
pop
lret
mov
add
mov
jmp
testl
out
loop
pop
outsl
into
xlat
xor
pop
mov
jg
imul
int
shlb
lcall
dec
in
daa
cmpsb
xor
ljmp
mov
adc
lods
or
add
cmpsb
jns
out
push
mov
test
aam
mov
xchg
xchg
push
call
mov
add
dec
pop
xor
pop
je
xorl
arpl
jbe
xchg
xchg
iret
mov
je
cmp
pop
dec
sbb
inc
scas
subb
rcr
ss
mov
shr
and
dec
jg
dec
imul
and
inc
stc
pop
sub
xchg
or
mov
stos
mov
mov
in
mov
mov
sbb
daa
sub
adc
pop
cmp
loope
daa
mov
mov
ret
ljmp
ret
rcr
outsb
lea
mov
ljmp
and
testb
aaa
int
push
lea
in
es
lea
xchg
inc
pop
cmp
int3
movl
inc
dec
and
inc
and
mov
push
push
cmp
push
out
arpl
cmpl
sarb
stos
mov
mov
flds
leave
push
cmpsl
and
lock
cli
xor
cmp
daa
and
inc
das
mov
and
sar
js
incl
pop
arpl
mov
sbb
adc
jb
xor
xchg
mov
mov
jecxz
into
aad
dec
jp
or
pop
ret
mov
sbb
push
lcall
or
test
inc
push
lods
dec
shll
push
mov
push
cwtl
movsl
or
out
rclb
pop
fsts
dec
mov
jmp
cmc
insb
inc
mov
xchg
aam
sbb
jmp
pop
pop
aad
idivb
fidivl
sub
xchg
cmpsb
sar
cmp
enter
ljmp
adc
pop
jb
cmpsl
ss
cld
cmp
scas
jecxz
cmp
imul
cmc
rcrb
cmp
lahf
push
scas
sar
in
popa
or
add
aas
inc
jecxz
sbb
sub
rcr
loope
sub
inc
or
and
cmpb
inc
xor
loope
js
outsl
cmp
xchg
aas
push
pop
mov
cmp
lock
mov
lret
ljmp
es
std
xchg
mov
mov
push
and
int
pop
ret
adc
loope
imul
fisttpll
and
fstps
cli
test
mull
stos
jne
ja
adcb
sub
xchg
imul
xor
sub
clc
inc
jae
cwtl
lea
pusha
mov
lret
push
jno
pushf
mov
lret
inc
sahf
dec
nop
ret
cmp
and
xchg
in
sub
pop
dec
dec
daa
orb
mov
sbb
or
cld
js
mov
dec
dec
or
fidivrl
bnd
aaa
fnstcw
adcl
jnp
xor
cmp
or
repnz
push
loopne
icebp
mov
xchg
pop
push
xchg
inc
mov
xchg
cmp
and
scas
push
lods
mov
inc
ja
and
das
adc
mov
and
and
pop
lcall
lcall
data16
test
in
adc
fidivrl
inc
xchg
mov
pop
cli
pop
cmp
mov
sbb
in
dec
rol
loope
cwtl
in
xor
cmpl
mov
push
add
enter
push
or
dec
mov
scas
addr16
test
lret
inc
and
ja
sbb
stos
and
push
cmc
faddl
int
sahf
lcall
and
pop
test
test
dec
adc
pop
into
fimuls
add
cmp
lret
jecxz
dec
out
adc
scas
add
out
mov
shrl
pop
sub
sti
bound
rcrl
sbb
mov
jb
std
xlat
jp
adcl
ret
inc
repnz
pop
xchg
inc
jnp
pop
push
sub
mov
aaa
popa
test
mov
sti
mov
pop
lea
insl
and
rcll
xor
das
dec
mov
imul
mov
repz
iret
fdivl
dec
aad
mov
push
mov
gs
mov
dec
cld
stos
push
mov
pop
add
push
xor
or
pop
in
adc
cmp
lds
xchg
arpl
sti
push
mov
push
adc
aad
and
inc
xchg
dec
das
or
test
sub
xor
sub
xlat
sbb
leave
js
dec
jnp
pop
bound
sarl
rcl
stos
add
adc
arpl
add
mov
fcmovu
stos
mov
fisttpl
js
loop
das
lea
in
mov
adc
insb
or
ss
ss
lcall
filds
push
cltd
dec
aam
sbb
addr16
movsb
scas
dec
push
and
lock
stc
scas
leave
jne
cmc
mov
daa
es
add
or
mov
movsl
ds
ljmp
jnp
jns
cmpsl
out
or
test
dec
outsb
cmp
pushw
xor
fstpl
xchg
lcall
inc
pop
out
mov
jl
sub
pop
repnz
cld
arpl
outsl
data16
out
repnz
in
lock
sti
push
mov
mov
bound
jmp
mov
sbb
pop
inc
in
test
arpl
pusha
mov
dec
movsb
lds
lea
mov
dec
movsb
insl
pushf
xchg
aaa
test
sub
enter
fcom
mov
pop
in
mov
iret
incb
shll
add
int
pop
push
jle
cmpsb
or
in
test
dec
ljmp
mov
cmpb
pusha
lea
jge
sub
xor
jo
lods
lock
mov
mov
sub
or
cltd
or
sbb
push
mov
sub
or
xchg
push
cli
and
lcall
imul
pcmpgtw
jle
lret
stos
sahf
push
xor
arpl
mov
fdivr
inc
dec
insl
jbe
ljmp
xor
ljmp
das
cmpsb
push
pop
frstor
imul
cli
add
xchg
adc
fyl2xp1
xchg
sbb
jmp
xchg
fimuls
mov
adc
xor
sub
jecxz
sbb
out
xchg
or
cltd
jb
es
xor
mov
push
sub
jg
xlat
test
bound
outsl
fdivl
sbbb
mov
add
jg
jae
push
mov
jnp
pop
outsb
mov
mov
inc
pop
das
push
adc
das
jbe
mov
mov
mov
inc
adc
xor
out
data16
push
pop
cmp
adc
mov
and
addr16
inc
pop
add
dec
pop
jb
addr16
jne
and
push
bnd
sbbb
mov
xchg
stos
pop
cltd
jmp
mov
gs
sahf
jo
or
lcall
inc
pop
adc
mov
data16
loopne
inc
in
inc
lea
pushf
faddl
ss
cmpb
xor
pop
daa
pushf
sub
adc
and
add
cwtl
mov
mov
scas
or
aad
movsb
push
repnz
sub
sarb
mov
xor
push
xchg
jbe
jle
aaa
xchg
cld
xor
jle
pop
arpl
adc
jb
xchg
or
mov
ljmp
pop
lcall
lods
mov
scas
cmp
jmp
outsb
icebp
pusha
mov
xor
push
bound
jo
adc
movsl
or
fucomi
mov
add
int3
add
push
in
jo
mov
faddl
cwtl
jo
jo
clc
cmpl
cltd
mov
inc
icebp
stos
mov
mov
shl
xchg
lods
lods
fwait
loopne
mov
mov
sbb
imul
push
cs
sbb
mov
dec
into
jb
add
xor
movsb
les
xor
clc
pusha
frstor
mov
add
stos
mov
or
jmp
into
mov
push
or
mov
nop
into
cltd
mov
jb
leave
jne
mov
jne
pushl
and
mov
into
stc
cmp
cld
sarb
popf
xchg
pop
leave
sbb
std
inc
es
pop
xchg
push
dec
lcall
push
cmp
xchg
movsl
or
push
movsl
decl
cmp
inc
add
adc
out
lds
aad
jp
fcmovne
sbb
push
shlb
sti
lahf
mov
repnz
add
mov
or
lahf
lds
push
rcll
and
fs
test
mov
inc
xchg
add
push
inc
in
lock
jns
push
xor
xchg
cmp
out
in
je
repz
cmc
inc
outsl
sbb
in
inc
es
loope
ret
dec
inc
pop
movsb
lock
and
sahf
mov
xchg
leave
and
push
out
mov
mov
aam
sahf
cmc
mov
mov
lds
lods
lret
xor
into
outsb
repz
cmp
mov
jmp
push
or
push
mov
adc
sti
pushl
cld
and
aam
pop
mov
mov
mov
xchg
dec
ja
or
jmp
aas
inc
pop
mov
cmp
shll
mov
pop
cwtl
aas
push
cwtl
add
lods
ja
sbbb
mov
add
inc
xchg
stos
sub
fsubr
mov
jae
fcmovb
xor
pusha
jecxz
xor
insl
inc
ret
xchg
cmpl
sti
hlt
lcall
inc
sti
push
arpl
and
loope
dec
xor
ret
insb
mov
cmc
sbb
mov
mov
es
fildll
jne
and
pop
mov
aam
mov
iret
mov
pop
and
or
add
sbb
inc
sbb
je
mov
sahf
repnz
out
and
push
or
cld
pop
jecxz
sub
call
pop
mov
adc
ljmp
insl
mov
xor
adc
std
mov
push
add
fmul
push
mov
cld
push
vmovdqa
les
mov
push
xchg
sub
repnz
push
repnz
push
adc
loope
inc
repnz
sub
sub
jecxz
jbe
pop
or
xchg
xor
test
test
jae
add
add
sub
hlt
hlt
icebp
aam
sti
xor
sahf
inc
and
rcl
mov
je
push
movsb
iret
cmpl
les
dec
jbe
xchg
push
ss
inc
aam
adc
sbb
pop
xchg
out
add
je
mov
ja
mov
xor
cmp
fdivrp
inc
stos
fs
data16
add
inc
jle
sbb
xor
mov
push
out
in
inc
ja
or
xchg
inc
shrl
push
xchg
pop
test
repz
ret
cld
lret
xchg
xlat
push
pop
sbb
mov
stos
sbb
fdivrp
xor
inc
mov
push
jnp
call
mov
gs
xchg
sub
mov
adc
inc
xorb
loopne
fsub
enter
mov
inc
int3
xor
repz
push
test
into
daa
or
mov
xor
add
lret
repnz
and
push
dec
leave
frstor
repz
cmpsb
adc
dec
adcb
std
lods
mov
mov
pop
sbb
cli
xchg
cmpsb
imul
inc
mov
or
mov
push
repnz
sysenter
ret
insb
adcb
sub
pop
jmp
mov
jbe
fistps
push
or
ret
adc
mov
or
movsb
cli
mov
jnp
loopne
sbb
and
lea
inc
xor
xchg
mov
jne
dec
dec
bound
fldt
jo
popl
jg
int
push
cmp
add
xchg
nop
sub
mov
rolb
mov
aad
mov
aaa
daa
rorb
pop
aam
cmp
sbb
sub
inc
fdivs
iret
mov
add
adc
mov
cmc
and
shll
adc
cmp
mov
and
ret
inc
jge
hlt
out
fbstp
dec
xor
xchg
pop
fdivp
invd
cmp
jae
adc
out
xchg
pop
test
out
fdivl
testl
std
and
jl
xor
push
jmp
xchg
ret
sbb
jp
or
aaa
lret
shll
lcall
jg
icebp
xor
jmp
scas
push
jle
lret
push
enter
ret
arpl
out
sub
aam
pop
inc
sbb
dec
cmp
and
enter
insb
outsl
xchg
or
jnp
mov
stos
inc
pushf
int
and
imul
jae
ret
add
sbb
mov
testl
sahf
jns
inc
jae
jnp
xchg
daa
inc
xor
or
xchg
lahf
lods
loopne
iret
sub
in
cmp
insl
rcrb
cmp
sbb
xor
sub
rcll
mov
ja
xor
pusha
mov
sbb
inc
mov
rep
mov
subb
dec
or
mov
mov
pop
fistpl
sbb
xlat
sahf
cmc
cmp
scas
jae
in
add
inc
addr16
mov
popa
jae
cmp
fmuls
jmp
sub
mov
out
mov
cmp
and
imul
repz
mov
sbb
daa
adc
adc
fimull
xlat
imul
mov
out
jecxz
mov
mov
jg
add
add
fisttps
popf
in
jp
add
adc
dec
popf
ja
push
pop
enter
cmp
sbb
nop
mov
xlat
jg
stc
push
jbe
dec
out
aas
push
sbb
mov
clc
in
push
jecxz
mov
notl
add
cmpsb
push
mov
dec
test
add
pop
push
shl
lret
or
sub
sbb
jo
js
js
test
int3
xlat
aam
lock
sub
scas
sub
xchg
inc
repz
cmc
add
mov
leave
insb
leave
or
inc
xchg
pop
xchg
aas
mull
lret
aam
popa
push
scas
jnp
pop
push
call
lea
imul
adc
in
cmp
lret
pop
stc
testb
fbstp
out
in
popl
pop
mov
jmp
mov
xchg
mov
shlb
mov
mov
movb
xor
pop
lret
daa
adc
pop
shrb
and
mov
imul
mov
cld
aam
lock
jne
mov
lcall
jmp
std
hlt
and
adc
push
cmp
fbstp
imulb
popa
in
sarb
test
insl
mov
mull
cmp
cli
rcll
add
fdivrs
bound
sub
inc
in
sub
inc
and
adc
push
adc
int3
leave
and
adc
mov
test
jecxz
or
repz
ds
xor
push
movsb
inc
push
ja
sub
addr16
jge
mov
scas
mov
mov
xor
push
push
addr16
sub
inc
jp
hlt
dec
repz
push
inc
xor
rcll
scas
sbbl
mov
jno
fstps
sbb
push
jbe
aaa
pop
fildl
test
dec
rcll
xor
add
out
subl
call
inc
jle
fsubrl
outsb
pop
or
loopne
push
fmuls
sub
les
gs
dec
pop
sbb
fdiv
xchg
mov
mov
aam
popa
and
and
push
jmp
push
sub
sub
popf
dec
int
rorb
cltd
pop
stos
jo
lds
sub
mov
dec
in
in
cmp
jmp
data16
pop
mov
inc
xchg
jae
lret
sbbl
arpl
cmp
pop
call
lret
aam
mov
fldcw
mov
dec
rcrb
aas
adc
pop
testb
stc
mov
fisubrs
jg
cmp
push
push
push
hlt
add
dec
cmp
jbe
cmp
xchg
test
and
sbb
mov
xor
movsl
inc
nop
pop
mov
jmp
hlt
daa
ret
inc
in
xchg
fstps
dec
jno
add
pop
rolb
iret
enter
arpl
nop
cwtl
mov
xor
out
pushf
stc
add
les
lret
mov
out
mov
shlb
mov
mov
pop
int3
push
push
mov
fdivrp
mov
pop
paddw
adc
cltd
adc
iret
jmp
inc
in
lods
orl
mov
push
adc
loopne
pop
les
jmp
add
movsb
push
sub
jmp
xor
mov
popf
lds
subl
xor
lret
dec
sub
push
js
pop
jl
stc
daa
rorb
and
jae
and
sub
outsl
sbb
sbb
jl
ss
frstor
mov
sub
mov
movsb
sbb
stos
xchg
rolb
cmp
aad
push
jmp
lcall
fmuls
das
mov
jo
ret
cmp
or
push
add
sbb
adc
ds
xor
inc
mov
daa
loope
jne
stos
insb
fwait
dec
or
daa
sti
repz
or
sbb
jb
pop
xor
cmpsb
jecxz
sub
gs
sarb
mov
xor
ficomps
dec
into
jge
push
add
mov
pushw
loope
sarb
sub
popl
dec
cmp
mov
lahf
lds
sub
out
mulb
pop
mov
mov
adc
xor
mov
xor
or
push
jp
in
cld
inc
pushf
inc
cld
lods
fidivrl
cmp
subb
scas
cmp
mov
fs
and
nop
xor
inc
test
std
icebp
push
cmpsl
dec
into
pop
mov
sbb
rclb
cs
xchg
jmp
mov
dec
mov
pop
ret
sub
cmp
into
jno
mov
mov
or
adc
aas
out
loopne
cli
xor
loope
stos
fs
jno
jg
wrmsr
out
xor
lods
popa
sub
pop
aas
loopne
leave
mov
inc
das
cwtl
xor
in
mov
xchg
insb
xchg
xor
jbe
and
push
add
idivl
sub
inc
sbb
sub
mov
or
inc
shlb
movsl
mov
cmp
pop
pop
mov
cli
das
loop
icebp
add
ret
pop
lea
cwtl
pushf
and
divl
repz
scas
fldl
mov
pop
in
xor
and
mov
xchg
cs
test
or
int3
js
paddusw
mov
add
pop
dec
sti
mov
mov
add
shr
sbb
out
scas
mov
jne
clc
iret
or
and
push
gs
sbb
dec
outsb
adc
adc
and
lahf
lock
daa
aaa
mov
dec
negb
push
pusha
into
in
call
ljmp
cmp
in
je
iret
lret
sbb
pop
dec
xor
mov
aas
push
repz
mov
negb
or
loope
fistl
xor
cmp
xor
and
je
lock
push
lahf
in
jle
sub
push
push
xor
adc
popf
out
aaa
add
pushl
inc
jp
ret
sbb
outsl
mov
in
hlt
in
mov
mov
cmp
sahf
mov
es
pop
ret
mov
fdivr
test
dec
mov
out
sti
mov
sub
adc
mov
das
adc
jno
aaa
mov
loope
or
fpatan
fnstsw
add
jb
mov
cmc
mov
loop
cmpsl
jbe
scas
insb
xor
and
jae
int
ret
mov
xlat
loop
inc
inc
xchg
sub
mov
xchg
sub
adc
jnp
mov
in
ret
nop
xchg
lock
pop
jmp
movsb
inc
loope
in
pop
insb
mov
mov
jmp
out
shr
pop
cmp
xor
pop
lods
xchg
cli
imul
cmpsb
mov
inc
push
mov
popf
xchg
mov
jle
fabs
frstor
mov
andb
cmp
loop
ds
movsl
outsl
and
cltd
mov
jl
or
pop
andb
popf
stc
lret
push
sbb
rol
ja
add
sti
sub
icebp
inc
hlt
add
pop
jg
aad
xor
fistl
mov
fstpt
lret
pushf
sarl
xor
add
and
fcoms
imul
dec
js
lock
or
andl
inc
mov
xor
xchg
and
insb
mov
or
and
push
int
mov
cmp
mov
movsb
jnp
addb
jmp
cmc
movsl
add
dec
push
sahf
sbbb
push
icebp
repz
mov
enter
std
cmp
sarl
lock
add
lods
stos
xchg
jnp
ljmp
jecxz
lock
dec
imul
mov
aas
dec
lret
sbb
adc
sub
adc
rclb
lods
scas
push
pop
inc
add
aas
or
flds
inc
lahf
sbb
add
test
cmpsb
cmp
rorl
jno
fsubrs
sahf
ljmp
inc
dec
sbb
sahf
imul
loopne
mov
test
dec
cmpsl
iret
cmpl
mov
aaa
pop
inc
ret
mov
lods
xchg
sub
pushf
fdivl
add
loopne
lods
imul
enter
mov
shrb
cmp
dec
iret
iret
dec
dec
cmc
push
call
or
enter
mov
adc
fimuls
dec
add
pop
popf
hlt
push
popf
das
push
adcl
inc
xor
mov
mov
mov
repz
sbb
mov
sub
sub
push
adc
jns
pop
and
js
sbb
lods
js
mov
mov
stc
lds
sub
add
push
enter
jo
es
cltd
inc
push
jo
sarl
jle
xor
pop
test
sbb
xchg
mov
mov
xchg
insl
mov
lock
add
cli
lods
jle
popf
pop
scas
punpckldq
or
adcl
fs
leave
das
xchg
mov
jge
int
dec
fadds
pop
xchg
leave
push
sbb
cld
cmpsl
notl
mov
sbb
xor
adc
pop
xlat
push
pop
test
push
test
imul
mov
test
cmp
xorb
pop
xor
sub
scas
sti
mov
push
out
in
fistpl
mov
push
sub
and
insb
out
outsb
inc
sbb
adc
fidivs
push
sub
jno
xor
lret
push
inc
and
push
out
lods
push
iret
cmpsl
dec
repnz
push
pop
jl
lds
xor
mov
test
push
push
add
push
or
por
fsubrp
xor
push
leave
push
add
in
jnp
xor
pop
cs
test
loope
call
faddl
out
fisttpll
and
stc
int3
dec
cmc
movsl
inc
jl
cld
mov
test
jae
in
sbb
leave
scas
xor
js
fsubs
xor
or
insb
punpckhdq
imul
sub
adc
js
stos
mov
and
fldt
or
dec
fwait
jmp
addr16
jecxz
lock
xrelease
dec
push
or
pop
pop
xlat
inc
pop
cmp
sar
cmp
mov
cli
test
pop
out
mov
cmpb
add
jl
cmp
mov
inc
xchg
mov
leave
xchg
int
movb
movsl
xchg
inc
sub
inc
mov
add
push
add
jmp
loope
push
cmp
outsl
cmp
mov
fwait
xor
inc
pusha
daa
add
decl
cwtl
imul
inc
in
xor
xor
xchg
sub
jge
and
dec
push
push
leave
sub
push
push
ficoms
cli
cmp
clc
xor
fidivl
cmpsl
pushf
das
test
inc
out
dec
sbb
in
addl
cmpsb
sarl
mov
sbb
mov
out
and
popf
mov
jecxz
cmpsl
leave
push
gs
jnp
enter
adc
pushf
xor
add
and
test
fwait
xchg
jg
call
push
jp
and
mov
add
lods
test
jnp
in
loope
sbbb
push
daa
mov
mov
hlt
mov
cltd
mov
mov
cmpsb
jnp
cmp
adc
jl
enter
push
icebp
adc
ret
or
test
or
arpl
stc
rorb
lcall
cmp
stos
int
out
sub
inc
movsl
xchg
js
andb
sub
loope
test
jl
out
movsb
sbb
inc
lahf
adc
ljmp
divb
stc
xchg
jl
fsubrl
into
xor
lea
push
mov
inc
mov
pop
fcoml
icebp
in
mov
push
xchg
fwait
or
in
scas
pop
pop
push
inc
repnz
add
dec
adc
add
adc
popa
mov
jl
xor
add
imul
cmp
dec
movsb
jl
fsts
enter
sarl
sub
dec
push
add
pop
dec
xchg
pop
out
mov
gs
iret
and
add
addl
arpl
sbb
mov
lret
adc
jecxz
xor
inc
jp
push
std
roll
xor
inc
mov
or
push
out
fisubs
pop
popa
xchg
inc
jnp
lret
pop
mov
test
cwtl
sub
pop
cmc
or
inc
mov
push
push
xor
mov
cs
out
jg
clc
push
ljmpw
lods
mov
xchg
push
push
lods
push
jecxz
mov
xchg
inc
fstpl
mov
fs
repnz
shll
push
es
xchg
es
das
pop
pop
and
into
lfs
mov
mov
jecxz
jnp
ret
enter
out
scas
in
sbb
and
dec
pop
cli
or
sub
loope
push
orb
rorl
adc
dec
pop
mov
mov
push
rcrl
cmpsl
mov
cmp
stc
sbb
pop
dec
incl
dec
or
xchg
xchg
mov
addr16
iret
jge
inc
scas
das
jl
fcomps
cmp
xchg
inc
andl
adc
inc
mov
push
stos
and
movsb
data16
sbb
scas
scas
pushf
add
es
mov
dec
popa
shl
mov
inc
nop
jbe
mov
iret
fwait
or
fiaddl
inc
pop
dec
pop
mov
xlat
pop
out
frstor
pop
icebp
ljmp
xor
cmpb
push
mov
xlat
sti
jp
filds
xchg
lea
roll
fmull
andl
hlt
push
fadd
pop
inc
clc
cvtps2pd
mov
inc
insb
jmp
bound
xchg
pop
in
mov
mov
sbb
xor
or
pop
mov
jge
add
nopl
data16
fucomi
xchg
test
shlb
cld
fwait
rolb
pop
mov
test
pop
adc
mov
or
mov
sub
xor
xlat
add
inc
or
add
cmp
inc
jecxz
test
pushf
ljmp
add
inc
fcomp
out
jmp
aam
cmp
leave
icebp
gs
adc
cmp
or
fcoml
dec
dec
adc
sub
dec
sti
pop
scas
loopne
fdivl
dec
mov
mov
add
mov
add
xchg
sarl
test
jne
push
xor
mov
mov
test
jbe
jle
std
aas
sub
sub
cmpsb
in
das
sahf
xor
ret
jbe
xchg
outsb
call
adc
mov
cmc
fstl
pop
repnz
test
cwtl
stos
clc
pop
mov
shll
ret
jae
xor
xchg
pop
sub
cmp
stos
or
not
mov
push
sbb
aad
testb
scas
iret
xchg
mov
xchg
mov
xorb
cmpsl
push
sub
or
rcrl
cwtl
repnz
and
shll
fstl
bound
pop
cmp
push
jge
data16
pusha
cmp
lret
inc
or
test
dec
xor
shll
mov
pop
mov
test
mov
inc
mov
cmp
pop
sar
sbb
nop
insb
test
jp
idivb
movl
lock
arpl
out
xor
sbb
dec
sub
mov
fcmovnb
test
push
pop
outsl
aas
cltd
arpl
and
sub
fnstcw
add
lds
mov
dec
mov
stos
mov
neg
in
dec
mov
cltd
cmp
push
sbb
ss
bnd
or
dec
inc
and
pop
sbb
lea
jecxz
mov
xor
mov
notb
lock
jle
movsb
fmull
in
in
fs
loope
pop
jmp
les
popa
stc
jbe
jmp
negb
cmpsb
enter
addr16
je
clc
or
lds
stos
pop
xchg
cmp
sub
push
orl
mov
inc
out
push
mov
push
sahf
and
into
mov
pop
loopne
jp
jg
cmpsl
fidivs
or
cs
dec
arpl
scas
ds
add
ret
rcll
callw
fadds
into
popf
sub
rcrl
into
push
mov
push
xchg
int3
dec
fs
ficompl
inc
xchg
inc
rcr
and
mov
movsb
cmp
mov
adc
mov
mov
sbb
mov
pop
test
cmc
add
mov
cmp
test
jge
add
cmc
repz
jl
xchg
ret
negl
popa
sbb
mov
andl
adc
xlat
pop
xor
in
test
jo
loopne
pop
and
enter
mov
shlb
sbb
dec
or
jne
int
add
frstor
daa
mov
cmp
call
int3
loopne
push
fldlg2
addr16
lret
add
add
hlt
cmpsb
insb
lcall
xchg
mov
and
inc
aad
lahf
pop
movl
mov
jle
cli
or
sbb
add
movsl
mov
out
negb
mov
ja
pop
popf
lds
repz
int
pushl
cwtl
push
pop
dec
aaa
pusha
xor
jle
push
mov
push
test
mov
mov
outsl
push
push
mov
sbbl
push
dec
mov
enter
scas
addr16
cmc
fsubs
aaa
pop
in
pop
mov
or
aad
lea
pop
jge
inc
dec
dec
inc
push
mov
jns
popf
sbb
test
dec
xchg
fs
sbb
scas
cmc
pop
inc
or
imul
xor
mov
or
mov
mov
sbbl
lods
and
mov
js
nop
mov
pop
push
ljmp
push
and
adc
dec
mov
xchg
movsb
jmp
inc
out
fisubs
loopne
dec
out
cmpsl
sub
xchg
pushf
push
sbb
inc
and
pop
ret
cmp
xchg
ss
ret
push
cs
rol
ljmp
jo
push
out
jl
jo
jne
inc
fsts
pusha
mov
es
sub
icebp
inc
daa
data16
inc
ljmp
push
adc
roll
jns
cmp
inc
cmpsb
jae
sub
mov
imul
ljmp
ret
subb
adc
push
shlb
jmp
das
leave
mov
or
push
lahf
sbb
jns,pt
mov
xor
xor
clc
push
sbb
adc
push
lret
push
imul
test
outsl
clc
lret
xchg
rorl
into
add
in
les
fwait
and
push
je
int3
add
sahf
mov
add
popa
lods
jmp
cwtl
outsb
cmpsb
es
stos
xor
pop
lret
call
cmp
mov
aad
or
mov
loop
aam
das
stos
sub
cmc
pop
aad
sbb
dec
pop
push
repz
arpl
xchg
imul
cmp
sub
cmp
jecxz
jp
sti
aam
dec
pop
rcl
push
in
repnz
fidivs
lods
ret
cmp
sbb
fisubl
outsl
add
ljmp
es
cmp
dec
cmp
adc
mov
and
mov
jmp
push
jb
ss
test
fwait
or
or
mov
rcrb
mov
rcll
add
shll
xchg
pop
xchg
fs
push
add
mov
cmp
mov
leave
repz
iret
sbb
mov
iret
popf
es
fldl
aad
sahf
xor
out
outsb
jge
in
mov
and
mov
fisubrl
sbb
test
add
inc
push
in
cmpsb
lret
outsb
ds
dec
in
mov
inc
dec
mov
aad
adc
mov
mov
insb
fisttpl
or
jge
fcmovbe
call
out
sub
push
pop
aaa
cmp
xchg
mov
xchg
xchg
stos
cmp
mov
mov
pop
outsl
sahf
xchg
or
or
jmp
shl
iret
lods
xor
test
loope
dec
jns
push
fmull
fneni(8087
xchg
jae
fisubl
nop
xor
loopne
shrl
or
out
ljmp
xor
push
adc
in
dec
pop
test
js
sub
sbb
std
pop
ret
pop
out
push
jns
insb
inc
repnz
inc
imul
mov
gs
mov
adc
inc
xchg
cmp
jle
dec
stos
fwait
testb
bnd
xchg
mov
es
mov
ret
fidivrs
dec
ret
mov
ficomps
cmp
aam
or
mov
cmp
jl
inc
adc
and
add
and
or
push
pop
ja
mov
xor
add
incb
dec
sarl
fsubr
sub
xchg
loop
pop
fistpll
add
int3
ljmp
ret
mov
cli
pop
pop
add
jg
push
add
lcall
xchg
lds
clc
dec
mov
pop
push
xchg
jbe
pop
mov
pop
mov
lock
subl
out
push
push
push
stos
mov
pop
mulb
pop
cmc
loop
push
xchg
lret
stc
sub
movsb
aas
stos
pop
inc
xorb
xor
sbb
in
and
mov
push
sub
add
frstor
movsb
sub
mov
hlt
in
push
xchg
pop
cltd
mov
jmp
arpl
cmp
push
inc
cmp
lods
mov
ljmp
movsl
and
daa
lds
adc
xor
inc
sub
push
sbb
sub
jmp
fstps
push
lret
repnz
add
into
jg
and
push
adc
push
sub
and
push
aas
dec
xor
fcoml
xchg
outsb
cmpsl
inc
js
cmp
cmc
jbe
or
stos
add
inc
sbb
push
add
imul
in
lahf
pop
sbb
xchg
outsl
rorl
dec
inc
sbb
gs
jle
mov
test
mov
or
loopne
daa
test
std
sub
cmpsb
aam
ds
jo
mov
dec
std
pop
roll
lock
sbb
pop
mov
bound
mov
dec
inc
jg
jecxz
mov
dec
adc
clc
pop
cmp
adc
inc
std
shrb
pop
xor
lods
jne
xchg
inc
sbb
pusha
mov
frstor
mov
xchg
sub
add
mov
push
icebp
xchg
mov
or
push
xorb
cwtl
sbb
cmp
cld
add
sbb
test
dec
dec
xchg
cmc
jae
in
push
lahf
adc
ja
pop
dec
jp
mov
jle
loop
mov
jecxz
mov
into
rol
scas
adcb
mov
or
push
adc
xlat
popf
jl
test
and
mov
icebp
fbld
mov
fists
xor
adc
mov
add
bound
test
sub
cmpsb
inc
and
push
mov
add
mov
sbb
ljmp
inc
xchg
rorl
ljmp
test
imul
ret
add
out
xchg
ret
xor
cmpsb
mov
int
sbb
inc
add
shll
jns
mov
fistps
ss
bound
aam
dec
jp
sbb
lods
cmp
out
shlb
mov
pop
dec
movsb
xchg
cmc
mov
adc
push
ljmp
lcall
xchg
data16
mov
cmp
cwtl
cmp
stos
dec
xchg
clc
movsb
adc
ret
cmp
sub
out
ficoml
loope
cmp
sbbb
mov
in
das
cld
inc
add
inc
out
aas
icebp
aam
push
cmp
negl
xchg
aam
xchg
or
cld
bound
aad
mov
dec
adc
int3
and
call
bound
shr
sbb
mov
fsts
mov
and
jle
fmuls
sbb
rorb
cmpl
repnz
in
or
lods
lahf
loope
xchg
adc
jne
out
add
ds
mov
nop
and
shll
int3
or
mov
sub
loopne
out
cmp
push
negl
xchg
sub
addb
stos
mov
mov
sbb
mov
mov
lds
cmc
aaa
ficomps
lods
xor
add
jl
repnz
int
dec
fwait
sbb
mov
rcrb
mov
shl
mulb
jb
leave
cmp
ss
movsb
repz
dec
push
push
mov
in
int
sub
sub
into
lea
mov
xor
out
mov
and
aam
fcoml
cli
in
arpl
aad
cmp
lea
sub
bound
lea
xchg
push
mov
loopne
pop
inc
nop
icebp
pop
test
es
dec
push
popa
dec
in
fstl
insl
faddl
sahf
fbld
push
sub
sbb
ret
popa
test
loop
mov
fidivl
and
pop
mov
loope
bound
data16
jo
mov
shlb
lret
sbb
mov
dec
nop
loopne
xchg
test
xor
mov
int3
xchg
mov
dec
pop
divl
imulb
ret
cld
call
fwait
and
inc
mov
xlat
xor
jge
lret
xor
cmc
pop
shll
jb
fists
mov
and
shrl
es
or
stos
imull
xor
inc
jbe,pt
ljmp
pop
fldt
orl
aam
ja
mov
icebp
mov
lock
ds
test
push
fs
mov
aad
lea
cwtl
sbb
cld
adc
mov
cmp
addr16
push
mov
xchg
mov
or
roll
ja
clc
sarb
cmp
dec
dec
jge
fimuls
fcompl
xor
jg
outsb
das
mov
add
jmp
inc
pop
mov
shll
or
aam
jle
push
test
mov
ljmp
scas
xchg
call
call
jecxz
inc
pusha
mov
and
je
dec
mov
scas
sbb
add
rolb
mov
or
stc
and
jno
xchg
int
cltd
popa
pop
adc
push
lea
pop
gs
sbb
jmp
add
jle
mov
dec
mov
dec
xchg
movsb
insl
in
pusha
jbe
lods
cmp
stc
ljmp
pusha
incl
jns
clc
jbe
js
fsubrp
sub
lret
add
push
inc
imul
andb
sub
int
and
xlat
mov
push
std
mov
mov
pop
in
fstl
inc
pop
cwtl
js
cmp
mov
mov
or
stc
fsubrs
enterw
mov
and
push
clc
xchg
and
rclb
fs
sbb
mov
xchg
out
enter
fadds
aas
iret
xor
jp
aad
pop
dec
sub
mov
cwtl
inc
pusha
icebp
adc
in
sub
int3
sub
sub
scas
inc
mov
push
dec
add
pop
aam
jno
ljmp
xlat
pop
loop
inc
enter
mov
sub
add
xlat
mov
imul
xor
cmp
lret
outsl
aad
pop
je
dec
inc
pop
clc
adc
mov
xorl
js
jns
xor
jecxz
push
dec
sbb
pop
xchg
add
fcomi
mov
stc
std
xor
aas
cli
and
movsl
and
or
xchg
mov
pextrw
mov
mov
dec
scas
dec
jno
add
mov
push
je
daa
cli
push
leave
dec
in
dec
arpl
jno
arpl
loope
and
int
push
lods
inc
dec
dec
pop
ss
mov
xchg
mov
out
subb
repnz
pop
ret
mov
mov
enter
xchg
rcl
add
sbb
push
loop
mov
push
mov
jb
xchg
push
sub
sbb
push
je
loopne
mov
jns
pop
xor
or
add
fsts
mov
xor
jmp
jl
mov
out
pushf
and
inc
popf
std
jo
xlat
pop
ss
imul
fidivl
ljmp
adc
bound
sbb
sub
aaa
pop
je
pop
cld
dec
imul
and
jge
lods
jne
add
fistpl
jb
aaa
adc
rcrb
test
popf
repnz
mov
pop
sub
fsubp
ficoml
pop
ret
daa
sub
enter
lahf
in
sub
dec
cli
push
or
add
leave
fidivl
sti
repz
cmpsl
cli
push
jno
enter
add
inc
stos
pop
or
sarl
ret
sahf
std
inc
pusha
mov
lods
dec
outsb
cmc
ds
enter
int
pop
dec
sbb
clc
shll
adcb
mov
add
lsl
test
and
sbb
lods
and
xor
push
negl
popf
insb
pop
mov
out
push
inc
push
mov
test
push
ret
mov
pop
imul
dec
or
insb
lahf
dec
or
test
imul
jl
xlat
jmp
aad
push
scas
cmc
and
icebp
pusha
jmp
push
adcl
pushf
sbb
ret
or
adc
dec
aaa
push
lret
xchg
and
aam
or
movsb
pop
pop
add
jecxz
pop
cmp
inc
pop
and
pop
sbb
je
cmp
jecxz
es
and
push
mov
mov
test
cmpsl
pop
pop
mov
dec
or
and
ficompl
push
bound
loope
call
jecxz
mov
in
lods
mov
test
dec
cmp
ljmp
lret
mov
outsl
jae
lods
out
jae
fimuls
push
inc
loope
nopl
and
push
sti
sub
or
testl
sbb
das
jge
mov
imul
xchg
mov
cli
mov
js
fidivl
mov
sub
stos
push
jl
jo,pt
data16
jb
and
loope
sub
cmpsl
cs
into
push
arpl
push
pusha
and
and
pushf
in
sbb
cmovno
jo
loope
inc
push
inc
imull
imull
into
ret
pop
lods
ret
rclb
test
ss
jae
in
in
lods
mov
ss
inc
imul
and
out
mov
sbb
lds
jle
mov
aas
vcomisd
fs
mov
inc
dec
push
jo
adc
ds
lods
pop
xchg
test
inc
mov
xchg
rorb
dec
adc
scas
addr16
xor
push
pushf
mov
ljmp
aaa
arpl
js
or
push
cmpsb
mov
repz
imul
jae
pop
inc
jmp
sbb
ficoml
test
nop/reserved
pop
addr16
pop
adc
mov
jo
mov
jle
fs
inc
or
pop
gs
dec
and
enter
pop
nop
loope
sbb
mov
cmpsl
cmp
sbb
lea
repnz
xor
hlt
pushf
movsb
cmp
sbb
xchg
lret
pop
push
in
xchg
push
mov
daa
inc
js
imul
lret
or
jnp
ja
ss
cwtl
not
pop
cmp
aam
pop
ja
mov
adc
mov
sbb
insb
ror
mov
aam
jmp
push
xor
rcr
cmp
leave
inc
outsl
add
add
inc
mov
rep
adc
mov
xor
xor
iret
test
dec
std
lock
push
push
jp
adc
test
imul
sbb
and
je
ss
adc
arpl
and
pop
jge
and
xchg
push
jns
mov
mov
inc
cld
sbb
fcompl
mov
fstl
jecxz
mov
dec
pusha
mov
xchg
adc
fdivp
lret
repz
pop
in
or
ljmp
stos
inc
fs
sbb
jno
cmp
push
add
push
rcll
pop
inc
sbb
add
cs
je
or
dec
dec
out
fidivl
icebp
hlt
fsubs
fsubrs
stos
stos
mov
sub
test
sub
jl
out
mov
push
test
in
std
dec
fiaddl
lahf
sahf
pop
push
lea
icebp
clc
xchg
jmp
fcoml
inc
mov
scas
dec
pusha
push
inc
das
xor
iret
and
jo
and
fldenv
mov
scas
pop
pop
xlat
jmp
fdivl
cmp
xchg
mov
daa
pop
add
inc
test
je
xchg
imul
repnz
je
repnz
popf
ds
pop
and
aam
aam
push
adc
test
je
hlt
mov
add
jl
sbb
jb
arpl
xchg
sahf
popa
sub
adc
imul
mov
push
mov
push
aad
push
xor
scas
and
cmc
loope
push
lret
aas
mov
dec
mov
shr
xchg
repnz
add
insb
pop
nop
cld
outsb
sub
mov
add
or
xchg
repnz
es
inc
and
dec
lds
icebp
lcall
into
push
adc
jbe
mov
xchg
push
xchg
sti
adc
sub
xchg
mov
add
mov
divb
ficoml
ret
shrb
add
xchg
cmp
push
cli
xor
pop
ret
or
loop
cmp
and
pop
dec
inc
mov
aam
xor
and
jae
aam
inc
stc
jbe
dec
inc
xchg
or
mov
xor
loope
shlb
pop
gs
cmc
repz
mov
mov
xchg
loop
test
pusha
mov
stos
xchg
jmp
into
push
mov
sbb
add
je
mov
fwait
jnp
mov
das
lret
jge
and
inc
lcall
jecxz
xchg
dec
dec
std
jge
icebp
adc
push
xor
loope
jbe
cmp
add
test
icebp
cs
es
pop
pop
stos
leave
fidivl
fcomps
int
cltd
mov
push
adc
lcall
jo
inc
je
mov
sahf
sbb
push
arpl
dec
ss
adc
mov
mov
jg
and
inc
xchg
hlt
push
or
cmc
push
xor
mov
or
cmp
cs
test
inc
push
iret
loope
int
aam
mov
xchg
enter
xor
mov
cmpsl
jo
subb
pop
cmp
pop
mov
imul
xorb
sub
jge
rcrb
sbb
jae
jl
sbb
push
inc
push
adc
jmp
shlb
push
jae
or
wrmsr
and
std
cld
lods
push
mov
cld
movsb
icebp
and
inc
xor
mov
xchg
push
pop
or
fsubs
mov
inc
jb
and
add
popa
clc
dec
fiadds
movsb
loope
lret
fisubl
popa
sarb
add
aad
out
inc
cltd
xchg
icebp
adc
das
and
pop
lret
ret
imul
scas
pushf
das
adc
jno
out
cmc
fsts
stc
addl
outsb
lahf
std
sbb
or
shll
push
sbb
push
cmc
jmp
dec
mov
pop
xchg
psubsw
or
sub
xor
cs
pusha
test
sbb
pusha
inc
sbb
scas
notb
fistpll
or
nop
mov
dec
mov
sub
out
lock
stos
dec
mov
in
test
and
in
hlt
repz
sbb
daa
sbb
jmp
arpl
adc
out
popa
lea
jl
add
addr16
test
mov
loope
test
mov
jb
int3
pop
addl
xor
arpl
jle
pop
les
repnz
pusha
enter
lods
arpl
pusha
ss
sti
sbb
movsb
sahf
mov
rcrl
shrb
or
inc
and
mov
jle
xchg
aam
aad
sahf
jp
and
mov
sbb
mov
rorl
out
lods
test
cwtl
jae
repnz
imul
mov
inc
aaa
xchg
outsl
icebp
ret
loope
push
mov
mov
dec
sub
adc
hlt
repnz
std
int
iret
lret
jnp
jae
mov
ret
jo
or
cmp
enter
xor
stos
cmp
insb
adc
in
jle
data16
pop
addl
cmc
add
jne
fcom
js
int
mov
jecxz
xchg
pop
test
inc
mov
cmp
xchg
jnp
arpl
lods
sub
mov
rcrl
stos
pop
push
sbb
mov
das
iret
and
xor
xchg
and
cmp
cmp
fisttpll
adc
lret
adc
loopne
ljmp
sti
inc
mov
dec
inc
mov
jne
and
in
and
scas
das
xor
xchg
and
out
fstl
insb
push
lods
fisubs
and
mov
loopne
jnp
mov
xchg
arpl
cld
jnp
into
sbb
fidivrl
push
mov
inc
cmp
out
int3
stc
xchg
fists
mov
lret
popa
jle
lds
rcrl
lods
adc
das
lds
imul
mov
push
ret
jmp
popa
outsl
movsl
sbb
sub
popf
inc
mov
push
push
jb
jnp
pop
and
or
jle
xchg
jo
adc
sub
pop
push
jnp
xchg
xchg
lea
mov
push
jo
fldt
rcrl
xlat
test
fdivp
sahf
inc
xchg
shrb
add
lock
dec
jne
xor
stc
xchg
test
subl
int
stos
lcall
rcrl
ljmp
pop
cmp
aad
fistl
fs
sub
lods
outsl
push
data16
aas
sub
lret
lret
movsb
and
or
inc
call
addl
out
xchg
mov
push
jne
testb
xchg
lahf
lcall
popa
into
addr16
adc
dec
outsl
mul
xchg
fbld
adc
testb
bound
jb
mov
fiadds
sti
jp
xor
sbb
loopne
shl
daa
xchg
popf
call
std
sub
xchg
imul
xchg
movd
lahf
les
ljmp
adc
fsubl
dec
gs
stc
xchg
jmp
arpl
rorb
in
test
push
mov
pop
sahf
movsb
repz
xorl
jns
xchg
jns
popf
xchg
or
xchg
cmc
xchg
or
fidivrs
inc
clc
dec
rcll
fwait
push
cli
cmp
push
mov
dec
mov
cld
push
filds
aad
sbb
mov
out
jmp
mov
mov
push
imul
xor
sbb
out
xor
push
out
bnd
push
jne
sub
lods
jmp
push
test
cli
cmc
push
je
test
aaa
dec
pusha
int
es
hlt
lods
cmp
dec
mov
stos
aam
fwait
sub
jge,pn
add
call
inc
pop
test
xchg
inc
shrl
daa
shlb
push
cmpsl
inc
arpl
lret
sbb
push
xlat
cmp
mull
or
pop
xchg
std
and
sub
pop
fwait
loop
push
rcr
inc
adc
pop
sub
add
sbb
dec
int3
scas
insb
inc
sub
xchg
ja
fdivs
pop
jae
mov
push
sbb
popa
cmpsl
mov
xor
fbld
xorb
mov
loopne
jne
scas
mov
sti
shlb
ret
push
inc
icebp
xor
add
sbb
mov
js
pop
test
jl
sbb
mov
cmc
sub
sbb
out
test
cmp
imulb
out
sbb
inc
cmp
and
pop
mov
and
aas
push
enter
gs
xchg
mov
xchg
loopne
mov
fildll
js
or
adcl
pop
out
xchg
mov
xlat
fidivrs
scas
mov
mov
mov
mov
inc
xchg
jmp
mov
outsb
fwait
pop
jle
cltd
cmp
sbbl
clc
xorb
xchg
mov
orb
fstl
sbb
cld
loopne
xchg
stos
xor
sbb
fdivrl
aas
jecxz
jne
dec
sbb
daa
pop
add
sbb
xorb
cmpsb
sbb
cmp
fdivl
fimull
mov
jmp
xchg
dec
adc
clc
sub
sbb
add
jno
aaa
subl
adc
adcl
pop
in
lds
xchg
cmp
loop
xchg
xor
or
push
xchg
jp
mov
mov
out
loopne
rcll
fsts
jge
xchg
fldt
stos
sarb
jp
sbb
fsubrl
and
and
sbb
cmpsl
jl
icebp
aad
xchg
pop
mov
idiv
cli
lcall
cld
leave
mov
in
xchg
leave
inc
inc
dec
repnz
adc
rcrb
daa
adc
jo
aad
xor
loope
ficompl
in
mov
in
fwait
mov
inc
sub
push
lock
cmp
inc
bound
jp
bound
sub
mov
loope
dec
mov
roll
imul
jnp
mov
repnz
xchg
fs
lea
push
gs
ljmp
out
pushf
dec
mov
bound
lock
xchg
stos
leave
lods
mov
negb
addb
or
jno
leave
repz
addr16
imul
sbbb
scas
sub
add
rolb
inc
cmp
das
fbld
int
in
pcmpeqb
push
iret
jp
mov
add
pop
mov
bnd
js
daa
fadds
cmp
int
mov
cmpsb
out
test
add
jb
lahf
mov
add
push
dec
in
in
push
adc
mov
mov
lock
pop
jp
shlb
mov
jmp
or
xchg
dec
lods
add
mov
add
in
jne
adc
aaa
repnz
fmul
into
mov
sbb
pop
pop
mov
xchg
fs
loopne
enter
and
or
sbb
test
aad
ljmp
fisubl
nop
dec
and
pop
xor
pusha
fwait
and
mov
sbb
roll
sub
int3
out
and
mov
ds
sbb
mov
das
inc
imul
jl
lcall
scas
mov
mov
mov
push
push
fldenv
insl
aad
clc
mov
fmuls
arpl
daa
std
scas
andl
cli
mov
inc
aam
iret
or
cmp
fucom
xchg
aas
int3
mov
sbb
mov
inc
dec
pop
cmp
or
ss
xchg
mov
add
les
jle
push
call
adc
ja
call
pop
lcall
xor
cmp
cmpsl
push
inc
push
rorb
jmp
lods
or
subb
push
lods
pop
push
mov
jecxz
ja
mov
out
inc
cmpl
adc
addr16
cwtl
lods
inc
pop
push
lret
mov
sub
fs
add
popa
ret
jae
adc
xchg
or
dec
adc
roll
xchg
lods
jmp
insl
mov
cld
sbb
push
push
mov
lock
into
rorl
aad
adc
inc
push
mov
or
divl
int3
cmp
ja
dec
mov
push
adc
and
or
jae
xchg
inc
in
les
data16
movsb
jle
loopne
les
jp
jp
aas
push
mov
andb
push
xor
hlt
dec
sub
xorb
and
mov
mov
and
dec
sbb
scas
cmpl
mov
sub
xchg
xchg
scas
pop
fstpt
sbb
imul
xchg
hlt
loop
loopne
add
jmp
dec
repnz
or
and
nop
lcall
mov
stos
int
aad
pushf
imul
or
pushf
psubusb
jp
adc
fwait
dec
imul
ss
jae
imul
or
jecxz
or
mov
nop
enter
jmp
xchg
popf
in
dec
dec
imul
mov
in
sbb
lods
js
sbb
ss
lds
fcmovu
inc
dec
pop
ret
adc
mov
pusha
aas
fnstcw
pop
pop
jmp
in
xchg
pop
inc
jo
das
in
add
loop
xchg
jns
pop
or
xor
aaa
pop
loope
out
xchg
mov
lods
aam
fildll
mov
in
push
int3
into
fs
mov
sahf
ror
daa
mov
push
imul
loope
lods
xor
daa
ret
mov
push
fcomip
inc
ja
sbb
fcoml
imul
mull
lret
push
gs
dec
add
jmp
pop
jne
and
push
inc
negl
arpl
call
cmp
xchg
jmp
sbb
mov
je
inc
int3
je
add
insl
cmc
dec
sarb
in
fisubl
shlb
sti
pushf
out
adc
fistl
mov
inc
xchg
xor
gs
fdivs
mov
xor
jae
push
cli
mov
cmp
test
cmc
cmc
pop
mov
add
movb
ss
xchg
push
subl
adc
je
outsb
popf
cs
mov
arpl
popf
or
mov
hlt
cltd
es
fidivs
pop
icebp
jl
fsubs
pop
in
pop
add
dec
enter
and
push
jg
or
and
pop
jg
and
xor
cwtl
fnstenv
imul
rolb
and
push
mov
fcoml
jmp
jg
daa
jmp
mov
inc
or
popf
push
adc
test
jnp
mov
fwait
mov
dec
xchg
fstps
inc
sbb
repnz
pop
jge
loop
inc
mov
pop
and
imul
push
int3
xor
inc
or
or
or
sub
ss
cltd
aaa
jle
push
loopne
mov
jns
fsts
sbbb
outsl
pop
push
inc
sub
dec
fstl
cmp
ja
sbb
aas
sbb
shr
mov
out
lcall
call
movsb
add
adc
outsl
mov
call
fsub
pop
jae
add
int3
repz
mov
mov
repz
clc
scas
xor
or
jl
subl
add
sub
andl
lods
sub
aas
and
jnp
mov
stc
pop
insb
dec
or
push
daa
call
mov
xchg
push
addb
xor
imul
or
cmp
mov
dec
jne
xor
loope
sti
xor
cltd
sbb
iret
sbb
rorb
jo
test
fsubrp
rcr
mov
in
cmp
lods
stos
gs
mov
push
cmpsb
jbe
out
movsl
cltd
xchg
sbb
mov
jne
xchg
rorb
fisubl
sbb
lret
sar
xchg
push
adc
mov
gs
xchg
ret
repnz
mov
mov
push
lcall
in
imul
pop
cltd
lods
rolb
rorl
sbb
lea
aam
xbegin
mov
or
pop
inc
cld
dec
rcrb
das
dec
xor
lret
push
stc
inc
insl
adc
mov
jg
sbb
loopne
cmpsl
inc
arpl
push
push
popl
es
movsb
and
mov
clc
xor
fwait
xchg
out
dec
test
rolb
fisttpll
sub
dec
pop
xor
jl
aam
iret
sahf
dec
xchg
and
cmp
dec
lahf
cmc
imul
in
stc
into
mov
xor
or
aad
sub
out
push
push
fcoml
dec
stos
lea
out
sbb
add
inc
cwtl
inc
xor
jns
cmp
xchg
stos
inc
lahf
orl
mov
add
sub
jl
out
adc
mov
negl
jle,pt
out
adc
hlt
clc
mov
sbb
jb
add
int
fwait
mov
dec
xchg
push
pop
mov
xlat
dec
lret
jle
aad
mov
push
aad
fwait
inc
xchg
insb
pop
cmc
outsl
and
pop
cmp
dec
loop
daa
sub
test
mov
imul
or
lods
add
test
addb
cmc
in
push
mov
cmpsl
dec
scas
mov
mov
add
dec
adc
adc
jbe
insl
xchg
test
dec
push
jg
adc
cltd
xor
movsl
xchg
mov
js
cmp
jo
outsb
test
sub
cld
cmpsl
mov
xchg
xchg
std
loopne
xchg
sub
mov
scas
adc
xchg
xchg
or
ja
negb
jg
pop
jle
jno
das
fcoms
fadds
pop
adc
dec
lahf
mov
inc
dec
popl
jno
xchg
mov
imul
loop
add
outsb
mov
mov
fdivp
lods
cmpsl
or
iret
or
cmp
jecxz,pn
jae
inc
out
push
stos
xor
fisttpl
rcll
jo
xor
dec
insl
push
jbe
into
mov
pop
cmp
jecxz
ljmp
or
inc
or
mov
scas
push
nop
clc
insb
out
testb
fnstsw
jne
and
inc
mov
push
sbb
mov
js
pusha
mov
pop
inc
push
je
enter
mov
cmp
fimull
fsts
xor
dec
mov
inc
popf
in
mov
into
and
mov
cwtl
aam
sarl
sbb
scas
in
popa
pop
scas
cmc
push
push
je
movsl
jle
jle
pop
out
mov
mov
cli
jbe
cmc
sahf
or
or
mov
sbb
into
scas
dec
push
out
jecxz
push
jmp
and
mov
xchg
in
lahf
cmpsl
fisubs
gs
movsb
jno
lret
pop
jae
iret
popf
mov
movsb
movsl
pop
lea
dec
repz
inc
div
in
and
jl
inc
or
mov
sbb
fwait
test
cli
fidivs
rorb
or
jne
inc
sbb
lcall
dec
xchg
add
dec
mov
and
cmp
jne
pushf
or
pop
push
mov
lds
jae
sub
lcall
movsb
test
ficompl
popf
or
jbe
xchg
jb
lahf
data16
shll
mov
ja
jle
mov
fs
insb
aas
test
icebp
mov
fs
cmc
xchg
xchg
cmp
fwait
pop
fsubrp
adc
mov
mov
decb
add
into
das
inc
data16
and
test
test
and
test
movsl
lock
cmp
xchg
mov
xor
sub
push
and
sbb
stos
sub
insb
movsl
lods
inc
ds
jmp
icebp
pop
mov
push
cmpsl
jecxz
cmc
sub
pusha
jns
jmp
stc
ficompl
push
pop
lods
imul
mov
xchg
or
push
js
lock
add
js
and
dec
pop
rclb
add
imul
lds
mov
or
sub
ja
lea
sub
movsb
loope
push
jbe
pop
in
loope
mov
repz
inc
or
jl
push
sbb
scas
scas
stc
mov
lds
mov
clc
mov
jle
daa
push
mov
pop
add
out
add
push
std
ret
inc
xor
jnp
push
sbb
sbb
sub
push
cmp
cmp
int3
je
loop
aam
mov
aaa
mov
adc
sbb
fiaddl
dec
push
in
push
pop
push
mov
aas
mov
neg
xor
mov
jp
cmpsb
pop
or
jo
cmp
out
sbbl
popf
mov
sub
xchg
mov
mov
inc
fisubrs
imul
and
jnp
pusha
shrb
jp
lock
cmpsl
stc
xor
ret
xor
xor
mov
pop
cmpsl
xor
pop
xchg
push
fiaddl
push
cmpsl
xchg
rcrl
adc
pop
xchg
sub
stos
into
test
pop
or
jb
sbb
mov
add
mov
cmpsb
ret
pop
mov
fwait
daa
scas
cmp
in
xchg
xchg
push
or
out
and
mov
or
shrb
divb
sub
or
inc
or
sbb
pop
sbb
cmp
add
or
push
into
lcall
push
test
dec
cmp
fsubl
inc
insb
adc
clc
sub
dec
dec
pop
xor
adc
js
pop
js
stc
adc
cmp
or
outsl
in
int3
inc
repnz
stos
arpl
movsl
aam
and
add
repz
insl
repnz
fisubs
cli
mov
gs
popa
mov
jp
and
pop
xchg
lea
arpl
daa
lods
cmp
cmp
add
jmp
pop
in
pushf
leave
inc
lods
jp
out
shlb
sub
sub
inc
repnz
rclb
mov
enter
mov
fstpl
arpl
cs
sub
ljmp
inc
jno
enter
mov
out
add
rcrb
inc
leave
and
aaa
icebp
sbb
sub
jnp
mov
mov
jg
aas
pop
mov
xorl
into
insb
xchg
fsts
push
movsb
andb
xchg
push
pop
rcrb
mov
dec
xchg
lcallw
enter
bound
sbb
test
setp
pop
mov
in
mov
mov
leave
rcll
int3
popa
xor
pop
mov
pushf
add
and
cvtpi2ps
jle
and
jno
and
sbbb
gs
cmpl
pushf
push
pop
mov
scas
xchg
and
sbbb
pusha
adc
sub
and
repnz
jno
xlat
clc
js
and
or
sti
mov
xchg
ret
test
in
push
imul
push
sub
sti
in
mov
pushf
addr16
pop
jle
aas
mov
and
mov
xor
xchg
and
inc
mov
xchg
xchg
inc
sbb
pop
les
fldenv
push
mov
jb
and
iret
push
add
dec
mov
xlat
pusha
in
mov
inc
mov
xchg
pop
xor
pop
xchg
mov
xor
test
or
mov
mov
fstps
rcrl
mov
lea
push
mov
jle
leave
jle
ficompl
jp
xor
sti
mov
jmp
mulb
pop
dec
pushl
mov
inc
cli
xor
inc
mov
jbe
ret
roll
pop
jne
fucomp
mov
shr
or
call
int
fcomps
dec
adc
loope
jle
aad
add
xchg
sti
cli
sub
scas
xchg
mov
out
sub
pop
or
mov
fwait
movsl
shlb
xor
mov
mov
ss
adcb
popf
test
lcall
jecxz,pn
fbld
push
adc
out
mov
push
push
mov
scas
inc
aad
push
pop
mov
mov
cmp
dec
std
out
or
xlat
in
xchg
lahf
add
inc
cmpsb
fdivl
pusha
push
push
stc
call
add
cmp
fisubrs
dec
mov
pop
cmpsb
out
divl
and
add
outsl
lea
push
inc
inc
movsl
push
pop
mov
sub
aam
or
add
fwait
outsl
data16
jecxz
das
lcall
stos
les
pushf
addl
out
enter
push
mov
pop
lock
add
lahf
push
mull
fxch
push
mov
jbe
cmp
sub
stos
fisttps
mov
fisttps
aas
mov
push
jmp
repnz
negl
in
lret
pushf
xor
cltd
inc
fwait
xor
cltd
lea
insl
and
sub
inc
out
arpl
mov
xor
shrb
jbe
pop
pop
into
add
push
daa
xchg
and
dec
aaa
aas
outsb
into
cmpl
fiaddl
jo
scas
sbb
ljmp
and
nop
ljmp
shr
imulb
je
das
cs
ror
mov
fsubrs
xor
pop
push
jb,pn
aaa
adc
pop
hlt
leave
ljmp
cltd
int3
mov
xlat
add
pop
xchg
mov
mov
push
or
mov
push
push
test
ljmp
xchg
ljmp
pop
sbb
inc
sarl
push
sbb
les
outsb
shr
jae
jbe
sarb
cmpsl
sbb
aaa
outsb
sub
aad
popf
mov
ret
mov
out
inc
not
mov
lods
out
dec
into
mov
sbb
mov
jp
jge
insl
push
fldl2e
lods
push
lret
mov
adc
movsl
outsb
test
add
sbb
pop
int
stos
sbb
pop
or
shll
cli
xchg
aam
push
jl
mov
xchg
mov
mov
dec
add
cmp
xchg
lcall
call
shr
cmp
and
cwtl
inc
fs
mov
add
push
mov
jmp
sub
cli
sahf
insl
or
cltd
nop
mov
iret
insb
mov
insb
adc
mov
add
sbb
mov
mov
pushf
lods
jo
mov
rorb
mov
loope
into
jge
leave
cltd
push
xchg
xor
dec
dec
or
inc
jmp
xchg
sub
cmpl
xlat
aam
insb
pop
ret
mov
mov
jnp
mov
and
pop
and
cmp
jae
push
jno
xor
mov
jbe
ss
sbb
mov
jp
daa
and
mov
lea
cli
adc
mov
adc
inc
sti
pop
mov
outsb
testl
shlb
dec
loop
sub
repnz
push
sbb
loop
pop
xchg
pop
adc
test
insb
mov
jbe
je
mov
stc
cmp
pop
insb
out
cmp
push
cmp
add
sbbb
ja
sahf
dec
xchg
insl
and
iret
scas
xor
mov
mov
and
inc
sub
movsb
sub
jp
mov
mov
cmpsb
cmp
inc
aas
dec
mov
xor
icebp
add
jb
mov
jge
inc
push
push
data16
rcrb
mov
call
add
inc
ret
sub
lcall
imul
dec
push
mov
lods
sbb
std
mov
addb
mov
push
enter
pushl
inc
sub
mov
and
lea
or
call
push
xchg
xchg
xor
jnp
cltd
xor
jo
sub
or
xchg
sub
xor
les
ljmp
jno
jg
jb
dec
and
filds
sbb
adc
cmp
arpl
sub
cmp
test
push
stc
ljmp
mov
and
arpl
sarl
pop
pop
movsl
push
xchg
jne
rorl
push
in
faddl
jbe
jne
fdivrs
fldenv
mulb
pop
hlt
out
cmpb
fwait
loopne
sti
cs
and
stc
mov
loop
pop
inc
xchg
jb
sarl
sti
outsb
js
insl
adc
and
sar
adc
xor
adc
int3
pop
add
mov
jmp
sub
daa
popf
sbb
cmp
ljmp
ja
jb
mov
sbb
daa
cs
dec
jge
xchg
scas
jl
pop
sub
adc
das
lea
inc
push
lahf
orb
sbb
push
outsb
pop
dec
icebp
cmp
xchg
adc
aaa
enter
cmp
ja
and
icebp
shl
addr16
add
cmp
mov
cmp
push
pop
pop
ficomps
lock
xor
movsl
push
repnz
and
imul
or
repz
cmp
jne
adc
push
push
jno
xchg
fsts
mov
cli
cmpsl
vmaxps
sbb
mov
mov
and
into
mov
add
mov
lds
push
pop
mov
xorl
cmpsb
fstpl
or
rcll
sti
mov
sub
mov
add
pop
into
scas
pop
fisttpl
mov
int3
call
jae
push
leave
add
dec
sbb
xchg
dec
dec
cmp
ret
jo
mov
push
imul
xchg
dec
leave
fnstsw
clc
mov
inc
aas
leave
js
fsub
mov
out
mov
adc
sbb
leave
add
pop
hlt
int3
add
mov
push
loope
pop
pop
inc
cmp
into
or
mov
push
cmpsl
std
pop
lret
adc
mov
fsubrp
mov
jae
testl
xchg
mov
push
lret
push
inc
mov
pop
mov
inc
out
movsl
mov
xchg
fadd
dec
sbb
dec
stos
mov
lock
stc
cmpsb
movsb
repz
aad
add
xchg
cmpsb
mov
test
push
mov
mov
stos
push
out
jae
popf
pop
inc
mov
mov
mov
fadds
call
jno
mov
aaa
mov
adcb
pop
or
in
push
addb
outsl
dec
mov
nop
inc
je,pt
mov
mov
jmp
and
inc
or
add
insb
mov
jne
cltd
xchg
pop
fld1
push
inc
push
mov
adc
sub
dec
hlt
xor
pop
imul
movl
dec
xor
jb
jge
jle
cli
mov
jg
icebp
sub
test
ds
popf
out
inc
aaa
inc
decb
pop
pop
lahf
out
movsb
imul
frstor
sbb
loop
xchg
test
jb
fldl2t
fisubs
lods
rcl
mov
bound
std
bound
add
add
xchg
lret
xor
push
addr16
mov
mov
push
shlw
arpl
jno
loop
sbbb
ja
cli
mov
inc
fdivrl
movsb
xchg
sti
inc
cmp
aaa
call
xchg
sub
dec
push
cmp
dec
rcll
xor
jo
inc
std
sahf
je
push
cmc
xor
xchg
or
enter
arpl
push
push
mov
and
imul
mov
pop
xlat
iret
shlb
outsb
push
popf
jb
xchg
mov
test
adc
sub
or
movsb
push
gs
mov
xchg
popf
test
sub
movsb
aaa
jo
stos
and
push
push
into
dec
sbb
lret
imul
xchg
call
cmpsb
es
mov
cs
sub
sub
sahf
popa
sub
repz
push
rolb
xlat
fistl
lods
jns
sbb
mov
mov
fsincos
arpl
rcl
stos
jl
dec
ja
mov
bound
or
dec
push
adc
xor
adcl
shr
hlt
mov
outsl
pushf
mov
xor
jecxz
mov
popa
mov
jno
into
cmpsl
sub
imul
iret
cwtl
jg
sbb
adc
js
mov
adc
mov
js
outsl
scas
sbb
sti
lea
outsl
mov
pop
pushl
mov
dec
cmp
outsb
popf
cs
xlat
mov
ljmp
sar
dec
mov
insb
inc
sbb
xor
out
pop
pop
adc
int
push
data16
mov
add
adc
fisubl
data16
lods
insb
rcrb
jbe
mov
sarb
pop
mov
pop
dec
inc
sub
aad
and
mov
mov
js
push
fisubrs
adcl
cmp
push
xor
sbb
out
popa
xor
rcrl
fcomp
int3
add
pop
xchg
addr16
stos
and
or
jno
ds
popa
pop
sub
mov
sbb
pusha
mov
push
mov
lret
adc
adcb
imulb
xchg
xor
push
adc
popa
rolb
xchg
movsl
jge
cld
dec
mov
loopne
mov
mov
lahf
pusha
push
jae
pop
dec
or
dec
xchg
insb
add
jae
jno
xchg
mov
outsl
cmp
jbe
incl
ljmp
mov
std
test
push
adc
mov
pop
or
cmp
inc
jg
sbb
push
and
repnz
movsb
out
mov
adc
sub
int
sarb
in
subb
ds
scas
fisubs
push
lcall
xor
clc
aad
cmp
sbb
fadd
fldl
push
jo
mov
fisubrl
enter
loopne
add
jns
push
test
inc
fwait
jo
mov
add
out
mov
pop
insb
jo
jbe
pop
aas
inc
mov
out
xor
call
cmp
lahf
sbb
jmp
mov
repz
mov
sub
mov
stos
loope
add
jno
adc
mov
pop
negb
and
movsl
cmp
sbb
mov
sub
jge
sar
es
ficoml
xchg
jb
cltd
shlb
mov
xlat
push
rorl
jne
xor
out
movsl
sub
dec
ss
lock
mov
xchg
pop
cmp
out
and
dec
andl
fmul
out
js
in
out
mov
mov
cmp
sub
mov
dec
mov
cmp
sbb
xchg
sbb
cmpsb
repz
stc
jo
xchg
pop
pop
rorl
roll
mov
lret
adc
test
inc
mov
adc
push
shrl
lods
fstl
jmp
cmp
adcl
or
xchg
pop
daa
inc
mov
scas
add
ret
sar
rcll
popa
or
jge
sub
sti
scas
inc
nop
and
dec
vpminub
add
xchg
sbb
pop
mov
xchg
nop
mov
mov
mov
adc
mov
mov
pop
mov
push
xchg
dec
cltd
and
leave
repnz
pusha
nop
jecxz
hlt
outsl
imull
ret
mov
push
push
ljmp
not
inc
aas
mov
hlt
mov
dec
fstps
out
mov
mov
jmp
outsb
cs
jbe
mov
inc
fcmovne
movsb
cmp
or
xchg
daa
pop
jp
outsl
idivl
push
gs
pop
jl
cmp
stos
jmp
push
enter
or
cs
mov
mov
mov
or
cmp
mov
dec
xchg
mov
push
pop
imul
aad
mov
stos
xlat
flds
jb
and
or
sub
inc
jmp
push
cli
xor
sub
aam
pop
loopne
push
mov
addr16
stos
fs
ja
sbb
in
sbb
test
loope
xchg
jae
jmp
test
pop
cmp
mov
sahf
jbe
push
cmp
push
mov
pop
jne
adc
sti
push
add
es
inc
mov
lahf
cmovnp
mov
stc
xchg
push
xchg
test
xlat
imul
sub
in
ljmp
sub
mov
mov
pop
and
shl
inc
adc
adc
rcr
lods
lds
faddl
test
aam
stc
mov
lds
lea
inc
add
xchg
in
sar
loopne
loop
xchg
push
fnstsw
jle
scas
pushf
adc
lods
or
sub
sarl
adc
mov
sbb
push
fiaddl
xor
fsubr
mov
lcall
ja
jne
add
test
jp
int3
mov
jl
lcall
sub
scas
arpl
cwtl
fadd
cmp
stos
and
notb
sti
pop
jnp
ret
adc
int3
stos
test
fidivl
lods
imul
idivb
aad
cpuid
add
inc
pop
shll
mov
mov
inc
cmp
mov
scas
mov
pop
movsl
insl
and
cmp
sub
and
jnp
mov
popf
test
outsb
popf
dec
bound
ficomps
test
xchg
outsb
mov
mov
fwait
or
aas
dec
fistps
jge
jbe
cmpsb
pop
sbb
cli
mov
inc
sti
pop
or
iret
clc
or
pop
adc
push
pop
scas
xor
jno
dec
xchg
sub
pop
lret
lods
dec
adc
cmp
pop
mov
enter
xchg
lods
loopne
add
push
cmc
mov
bswap
add
fildll
lahf
imul
sub
sbb
sub
push
mov
push
fildll
xor
sub
fcomps
jb
dec
mov
sbb
or
jle
cli
test
movsl
out
cmc
push
sbb
scas
das
mov
jecxz
xchg
pop
mov
leave
int
shrl
sub
pop
jbe
in
add
mov
out
push
jns
jnp
ja
in
jmp
cwtl
stos
mov
jo
cwtl
fcomps
dec
cmp
pusha
aam
imul
or
stos
adc
xor
or
stos
cld
insb
fsubrl
scas
movsl
jecxz
je
sub
dec
vcvttsd2si
adc
mov
std
cld
in
dec
scas
sbb
mov
rolb
in
ret
mov
or
in
pop
fstpt
mov
cmp
cmp
mov
push
cmp
out
cli
mov
and
or
sub
repz
xor
sbb
xchg
pop
daa
test
aaa
and
dec
jmp
push
mov
adc
xchg
sub
fisubl
cmc
push
push
mov
dec
jge
or
lock
add
fsubl
pop
pop
add
icebp
sub
bound
out
cmp
cmpsb
lret
lret
cmp
icebp
mov
loope
jge
rcrl
xor
out
icebp
cmp
and
mov
cltd
mov
lret
movsb
popf
pop
in
xchg
inc
test
push
leave
cmp
mov
cmpl
mov
flds
leave
lea
mov
enter
insb
dec
add
pop
ret
cmp
push
cmpsl
jecxz
ret
cmp
movsl
xchg
adc
cmp
enter
scas
jo
push
in
out
fdivp
out
mov
mov
daa
lods
mov
loop
pop
cmp
pop
ds
movsb
sbb
pop
lock
pop
fs
push
fistpl
fcoml
leave
ret
das
jmp
in
movl
xchg
outsb
push
insb
nop
xchg
rolb
sbb
out
lock
cmp
sub
push
ja
xchg
dec
and
xor
stc
dec
pop
or
inc
std
mov
loope
clc
mov
push
lds
jae
in
jp
rorl
jl
cli
enter
nop
mov
pop
xchg
jns
call
mull
push
sar
fdivs
jae
cmp
insb
loop
sbb
cmp
test
add
or
xchg
mov
add
icebp
addr16
xchg
popa
xchg
enter
jns
or
mov
and
push
push
push
mov
in
mov
xor
dec
push
sbb
mov
fwait
ss
mov
add
daa
adc
icebp
cmp
les
addr16
mov
in
mov
xor
xor
inc
fwait
mov
mov
cmpsb
adc
iret
push
adc
test
or
popf
sahf
aad
pushf
and
stos
push
cmp
js
sbb
xor
testl
sub
or
das
movsb
adc
fcmovnbe
insl
adc
data16
test
pushf
push
test
jb
out
shlb
aad
cwtl
inc
sbbb
mov
into
xchg
rcrb
pop
andl
pop
ljmp
jbe
sub
out
push
iret
test
sar
out
dec
test
test
ss
repz
push
scas
adc
xchg
loope
addr16
nop
xlat
push
fistl
add
mov
fstps
shl
fs
xor
stos
push
test
lret
dec
adc
sbbb
xor
lret
imul
lret
in
cmpsb
xchg
mov
and
inc
inc
rcrl
jno
sub
mov
out
cmc
jle
push
cmp
sub
and
jnp
lods
icebp
daa
xor
jmp
repz
leave
jle
fsubp
daa
lret
stos
dec
xorl
lods
ds
out
cmpl
mov
test
jb
and
push
out
or
setae
cmp
movsb
sbb
push
psubd
and
ds
cmp
sub
gs
mov
xchg
mov
lock
ret
cli
sbb
fisubrl
xchg
xor
gs
and
das
outsb
cli
jmp
pop
inc
ret
mov
jb
rorb
mov
sub
mov
test
les
fwait
mov
aad
cmpsl
push
push
pushf
stc
adcl
mov
pop
cld
inc
jnp
lcall
jl
xor
push
sbb
loop
call
rcrb
addl
fs
pushl
movsb
imul
and
cmp
js
xchg
pop
mov
cmc
cmc
mov
loopne
les
xor
in
lods
pop
movsl
adc
cmp
xlat
push
mov
lock
mov
ret
jp
pop
mov
and
push
mov
mov
pop
pop
jmp
sub
and
test
mov
dec
in
mov
stos
sbb
pop
cmpsl
xor
inc
arpl
pop
popa
dec
add
dec
in
sub
sbb
sub
sub
mov
pop
in
adc
fisubrs
rcrb
jne
lea
shll
movq
add
pop
aaa
mov
ljmp
and
outsb
int
xor
pop
jge
int
sti
insl
push
enter
pusha
push
mov
cmp
adc
sub
dec
loopne
lcall
push
ret
jge
loope
xchg
cmp
mov
add
hlt
dec
stc
xor
adc
dec
xor
div
cmp
or
test
test
adc
out
lock
fdivrp
movl
into
dec
mov
sti
dec
inc
and
or
inc
es
dec
push
sub
dec
cwtl
inc
add
shll
mov
outsb
jnp
into
int3
push
mov
dec
dec
es
sbb
xchg
bound
dec
adc
dec
call
lret
pop
addr16
aam
lock
mov
xor
sub
lret
push
cmp
inc
loop,pt
lret
sbb
icebp
gs
cli
pop
nop
or
sbb
pusha
loop
bound
imul
outsl
imul
mov
push
mov
jbe
mov
fiadds
pop
or
ss
mov
ja
sub
enter
cmc
and
inc
mov
inc
imul
mov
fidivrl
pop
shl
das
fsts
pusha
cmp
xchg
xchg
iret
and
jns
cs
movsb
int
in
sahf
outsb
jmp
pop
inc
lock
lock
sbb
xchg
add
bound
cld
addr16
testl
lock
and
push
add
pushf
andb
inc
mov
imul
push
pop
mov
rorb
push
sub
stos
or
add
ret
aam
push
inc
test
jg
xchg
dec
in
movsb
call
or
add
or
leave
push
int
lret
xchg
mov
jb
outsl
movsl
pop
popa
inc
gs
sbb
push
mov
fucomi
dec
dec
dec
cmpsb
push
add
pop
sub
dec
jae
mov
xor
sub
filds
adc
inc
inc
js
es
xchg
push
mov
push
idivb
jl
mov
inc
movmskps
pop
cli
ljmp
or
xor
push
dec
cmp
ljmp
stos
xchg
mov
and
lahf
sbb
mov
call
lea
out
pushf
aaa
push
shll
lock
sahf
adc
repnz
jae
jbe
cmp
jns
lds
dec
std
push
add
lret
pop
or
stos
orl
jl
mov
mov
xor
mov
in
push
pop
push
xlat
sub
or
sub
adc
rclb
sbb
pop
cmp
cmp
into
push
aaa
insl
jae
mov
xlat
xchg
mov
int3
subl
xor
push
pushf
in
pop
popa
test
adc
enter
adc
std
sbbl
mov
cs
lea
fwait
sub
sub
loopne
xor
sbb
cmp
push
pop
addl
jne
and
dec
movsb
lods
scas
cmp
mov
cmp
cmp
xor
and
cmp
jle
repnz
cmp
xor
cmp
push
out
in
cmp
and
iret
mov
popf
add
das
repnz
insb
jno
divb
lea
push
scas
test
enter
and
add
div
mov
mov
ljmp
call
negl
jno
ss
lds
push
fwait
jns
les
add
adc
inc
movsl
dec
sub
ret
push
mov
jle
jae
jmp
cmp
lret
pop
fcomps
add
lods
ljmp
test
cmpl
xor
lods
adc
adc
pop
scas
sub
dec
hlt
and
hlt
ds
pop
mov
mov
in
orl
rclb
rorb
pop
inc
into
insl
mov
hlt
sub
aad
aas
out
test
mov
movsl
cltd
js
inc
mov
sbbl
imul
nop
pushl
data16
das
pop
pusha
mov
in
jg
push
and
or
jg
andb
lret
aad
shlb
rol
rep
mov
pop
nop
ret
int
aaa
xchg
mov
xor
dec
lcall
popf
fimuls
sbb
aam
sub
sub
loopne
les
bound
lods
faddl
notl
mov
sub
xchg
adc
cmpsl
lods
lods
xchg
push
test
repz
and
jns
je
lock
ss
les
jmp
out
sti
das
push
xor
mov
xor
xchg
push
pop
pop
inc
cs
sarb
mov
mov
sti
or
mov
fisttps
dec
stc
cmc
cwtl
pop
mov
sarb
insl
push
jo
jae
or
or
pop
mov
mov
inc
push
inc
dec
add
dec
dec
mull
pop
imul
or
inc
push
dec
xchg
sub
movsl
loopne
arpl
test
hlt
xchg
mov
popa
sbb
fistpll
shrb
sub
dec
push
xchg
dec
or
stos
mov
jp
jle
outsb
and
mov
stos
push
push
mov
movsl
jp
test
in
pop
mov
movsl
xor
push
dec
fisubrl
mov
sbb
stos
shl
jne
mov
cmp
in
jns
jl
jbe
fiadds
pop
loopne
jne
clc
test
or
mov
aas
lret
mov
cmpsb
in
jecxz
ss
push
scas
mov
add
repz
sub
or
and
mov
movsb
lock
pop
xchg
xchg
push
and
iret
pusha
out
sahf
int3
fidivl
leave
popf
sbb
outsl
fwait
pushf
fimuls
fidivrs
std
lea
xchg
daa
jo
enter
jbe
loop
mov
popf
xchg
mov
leave
aad
jne
xchg
lcall
mov
add
inc
stos
sub
cwtl
sub
xor
xor
pop
jns
mov
jg
sbb
out
std
jp
push
mov
xchg
xchg
orl
test
xchg
sbb
and
cmp
decl
dec
adc
insl
adc
fbstp
jl
xchg
and
cmc
mov
pop
loop
lods
push
imul
aad
jne
pop
inc
int3
cmpsl
ss
insl
sub
arpl
movsb
inc
js
add
cmc
aad
add
imul
mov
je
daa
cs
pop
mov
sub
cmp
mov
mov
dec
jle
shl
in
nop
dec
lcall
xchg
push
xchg
cmp
mov
xchg
cmp
or
dec
pop
aaa
cmpsb
dec
push
xchg
and
xchg
inc
push
mov
test
or
push
out
pop
inc
ds
fptan
mov
sub
inc
cmp
outsb
int3
jge
ds
inc
jg
and
xlat
xabort
in
xchg
clc
mov
test
sub
sbb
scas
jbe
push
push
fcompl
mov
pop
pop
loopne
inc
mov
js
mov
cmp
add
xor
xlat
mov
jmp
sti
mov
fcomi
jecxz
ficomps
lock
out
int
in
movsb
cmp
mov
xor
or
jbe
ds
dec
mov
cmp
aaa
enter
xor
sub
mov
push
lahf
add
pop
push
rorb
pop
dec
push
mov
or
mov
das
mov
fdivs
mov
rorl
sbb
imul
lea
or
int3
cld
idivl
shll
xchg
jle
and
aad
inc
cmp
aad
sbb
jno
scas
mov
insb
mov
out
daa
js
ljmp
inc
xchg
les
fwait
dec
push
testb
cmp
andl
std
scas
insl
les
shrb
push
mov
pop
sub
lods
enter
std
and
mov
pushf
arpl
push
es
xchg
incl
push
je
push
add
data16
or
out
sub
push
dec
lahf
adc
repz
and
sbb
pushf
dec
and
dec
mov
test
mov
push
dec
xchg
leave
cli
xchg
and
mov
insl
icebp
push
pop
lahf
inc
sub
jo
lahf
jae
call
xor
lret
sbbl
imul
sub
xor
push
xor
outsb
sub
push
scas
jne
mov
ljmp
push
sub
push
mov
jae
and
mov
sub
cmp
or
push
dec
inc
pop
fsubr
mov
cmpsl
mov
int3
out
test
or
and
dec
lcall
and
aaa
les
mov
aad
fs
push
arpl
jb
adc
loope
pop
stos
xchg
fs
bound
daa
jle
fwait
inc
aam
fwait
fwait
ja
cwtl
cmp
xchg
push
mov
es
jns
mov
inc
or
dec
or
sti
fisttpll
or
mov
mov
push
addr16
js
stc
lret
mov
jmp
and
int
xchg
daa
mov
mov
mov
ret
sub
cmp
pop
pop
adc
bound
adc
imul
aaa
adc
cmp
out
jnp
and
inc
jg
insl
cs
lock
test
cmpsb
or
loopne
popf
icebp
out
shr
cmc
mov
outsb
arpl
inc
gs
push
fldl
push
adc
xchg
adc
cltd
je
in
jmp
inc
cmp
pop
mov
mov
lret
test
scas
mov
testb
sub
jp
ss
dec
pop
push
daa
push
jno
gs
int
int
xor
adc
lahf
shlb
popa
scas
mov
sbb
cwtl
or
pop
mov
sub
dec
adc
dec
arpl
ret
cmp
loop
es
xchg
lcall
push
andl
mov
loop
and
gs
sbb
cltd
pop
outsl
jmp
jge
push
sub
cld
push
dec
dec
das
arpl
rorl
sti
leave
aas
xor
movaps
test
stc
or
inc
aaa
cld
push
and
cmpsb
cli
adc
add
xchg
bound
push
mov
lods
pop
jb,pn
mov
clc
shll
mov
les
sub
in
call
pusha
sub
xchg
inc
jno
inc
xor
xlat
dec
xor
push
movsb
insl
or
sub
and
arpl
xchg
lods
jno
cmp
in
popa
add
es
scas
int3
mov
test
inc
mov
shr
or
imul
mov
cmp
mov
enter
inc
js
fnstenv
dec
sbb
getsec
shrl
ja
mov
rol
sbbb
cmp
pop
lods
jecxz
jl
adcl
push
test
mov
jns
test
fsubs
sbb
mov
inc
jecxz
sub
cmpsl
fidivs
jae
dec
jmp
add
shll
xor
imul
inc
xchg
add
insl
mov
fs
and
mov
gs
popf
outsb
xor
mov
cmc
adc
fidivs
mov
jmp
xor
push
jl
xchg
imul
test
lret
or
jb
sarl
scas
movsb
mov
mov
ja
pop
mov
fistpll
pop
jmp
and
xchg
add
adc
jg
mov
fstl
inc
cmp
addb
popf
lds
cmp
jb
mov
out
data16
sbb
pop
daa
xor
insb
xlat
xor
mull
shll
and
jo
jo
pop
dec
stos
nop
mov
add
jno
jmp
pop
and
rorb
stos
push
out
push
mov
popl
mov
pop
jp
sub
dec
lret
sbb
or
rclb
mov
rcr
jp
out
xchg
std
mov
lods
ret
stc
sub
hlt
mov
into
mov
inc
stos
fsubrp
dec
jp
arpl
das
mov
loope
repnz
push
lock
inc
sahf
xchg
nop
mov
push
lock
xchg
lret
std
scas
dec
lcall
jg
stos
bound
xor
and
clc
in
ficompl
out
mov
lock
fs
daa
movsb
inc
imul
add
testl
out
xchg
or
cwtl
call
push
pop
lea
push
cltd
sahf
ret
mov
mov
adc
push
or
xlat
xchg
inc
mov
rol
pop
in
cmc
add
fimuls
cmp
clc
jne
xor
ficoml
dec
mov
stos
sbb
sarb
into
jge
push
sbb
insl
dec
mov
inc
mov
pop
pop
push
lds
in
loopne
int
inc
loop
add
and
push
frndint
add
or
jne
cmpsl
cmp
xchg
pop
cs
mov
scas
dec
fistps
hlt
iret
movsb
sbb
xchg
jb
ret
push
cmp
adc
pop
test
push
fnstcw
je
jge
xchg
repz
mov
mov
in
pop
cmpsl
sub
lret
push
lods
or
es
fdivrp
push
mov
pop
jp
fadd
sub
cld
js
and
sahf
out
adc
xchg
in
test
int3
cmpsb
pop
mov
into
pop
xchg
jns
cmp
adc
push
addps
andb
fwait
mov
in
mov
movsb
cltd
scas
xor
loopne
in
push
jge
push
bound
ja
xor
and
mov
cmc
fnstcw
test
adc
arpl
idivb
popa
dec
dec
enter
cmpsl
push
out
mov
movsl
leave
or
bound
popa
outsb
loop
pop
add
cs
aad
repnz
in
push
inc
rcl
push
popa
push
ljmp
stos
jmp
pop
popf
adcl
dec
xchg
cs
pop
push
inc
bound
pop
inc
dec
cltd
loope
pop
aas
negb
and
les
xchg
inc
jp
fisttps
xor
jmp
sbbb
inc
cs
aad
add
setae
mov
ret
mov
stc
inc
push
fwait
or
scas
jge
xor
ret
dec
dec
scas
flds
jbe
xchg
and
in
jns
jg
push
xor
cmpsb
cmp
sub
push
clc
sub
sbb
daa
sub
mov
pushl
xor
jae
sbbl
xchg
xchg
ss
aam
data16
pop
nop
cmp
inc
inc
mov
repnz
and
sub
push
mov
xchg
fcmovbe
dec
sbb
test
pop
out
fcoml
jno
mov
jo
bswap
mov
mov
push
cmp
mov
test
jle
or
xchg
pop
push
mov
mov
daa
dec
sbb
mov
inc
movsb
insb
jo
rclb
clc
pop
scas
clc
pop
shlb
es
ror
scas
lods
mov
lods
or
mov
in
int3
xchg
cmpsl
popf
andb
or
pop
jg,pn
nop
ret
mov
fsubp
ja
push
shll
movsl
mov
sub
lea
jmp
xor
push
pop
imul
popa
sbb
shlb
popf
and
arpl
xor
loope
mov
adc
das
or
add
mov
xchg
cmp
or
lods
das
fnstsw
xor
lret
lods
aaa
and
push
gs
pusha
repnz
mov
cmpsb
inc
xchg
cwtl
nop
dec
ret
aas
cwtl
sub
and
cmp
cmpsl
dec
push
cmp
or
push
pop
cmc
leave
flds
mov
xchg
xor
mov
pop
xchg
jg
iret
push
mov
pop
mov
xchg
ret
shrb
pop
jne
inc
lods
pop
or
aaa
jg
imul
jmp
jl
or
clc
cs
pop
enter
pop
les
xchg
push
xor
push
jg
ja
sbb
pop
mov
fdivr
mov
loopne
clc
fstpl
add
push
je
push
mov
adc
dec
mov
pop
stc
imul
ret
rcrb
add
aad
and
je
idivl
aaa
pop
mov
push
xor
test
ret
mov
cli
inc
and
lock
and
jmp
push
aam
xchg
push
aad
or
xchg
push
js
inc
ss
ljmp
int3
mov
pop
jo
addr16
pop
adc
addl
add
jne
push
je
sub
inc
std
and
aas
or
or
scas
push
ds
sub
test
mov
push
or
pop
and
hlt
sub
loop
fidivl
loop
mov
mov
out
test
cmp
push
cmp
int
jge
cmp
dec
jmp
xchg
mov
mov
mov
or
scas
mov
fwait
aas
mov
out
mov
inc
mov
cltd
xchg
dec
aaa
lea
pop
arpl
movsb
sti
ror
lods
repnz
hlt
xchg
cmpsl
dec
cmpl
pop
mov
test
inc
jno
and
arpl
and
mov
fcomip
push
pop
dec
cmpsb
xlat
inc
outsb
ret
xchg
pop
cmp
aas
mov
jg
pop
out
das
or
int3
xor
push
fnstsw
mov
sbb
rorl
test
xorl
insb
inc
int3
fsubrl
mov
and
mov
pop
fiadds
add
es
sub
mov
ficoms
neg
cmc
imul
shrb
or
push
mov
jno,pt
das
je
into
xor
cmpsb
push
pop
add
adc
ror
sub
int3
fwait
aad
push
fmuls
rep
pop
fildll
xchg
pop
sahf
pop
cli
or
cmpsb
sub
bound
sub
pop
push
mov
jb
cmpsl
out
das
loop
push
xchg
popf
out
ss
mov
dec
jge
sub
cmp
xchg
adc
addr16
and
push
popa
in
xchg
cmp
xor
and
iret
setnp
ljmp
cmc
aas
out
call
mov
imul
cmp
and
lret
push
cmp
mov
sbb
push
iret
push
and
stos
add
sub
xor
mov
sbb
imul
sbb
push
fdivs
push
push
fs
xorl
inc
sub
sbb
sbb
cmp
mov
sub
dec
gs
jne
lcall
inc
xor
std
shlb
adc
idiv
cwtl
je
std
test
xlat
or
add
les
imul
xor
bound
data16
adc
or
aad
stc
cmp
mov
or
xchg
stc
outsl
movsl
lods
xchg
dec
ds
sub
sbb
mov
icebp
hlt
es
pop
out
pop
orl
rol
cmp
push
mov
loopne
dec
cmp
xchg
shr
lods
sbb
cs
add
lods
fs
xchg
sbb
sarb
test
mov
pop
inc
shll
test
iret
pop
es
clc
push
cmp
jns
xchg
jmp
mov
lods
mov
dec
lahf
xchg
ljmp
push
push
insl
iret
jne
add
pushf
in
lods
jle
pop
xchg
fidivrl
bnd
inc
outsb
test
rcll
push
inc
loop
mov
test
cwtl
jns
shrl
stos
in
leave
pop
jno
pop
add
and
pop
mov
push
fwait
les
jmp
push
adc
mov
aas
mov
xchg
pushf
jbe
hlt
sbb
mov
popf
push
int3
repz
sub
popf
inc
or
jno
das
je
add
in
cmpb
pmullw
push
and
mov
addb
xor
push
cmp
adc
pop
int3
das
jmp
in
add
push
fidivl
sahf
mov
outsl
mov
dec
cmpsb
xchg
std
jb
xchg
test
call
push
or
sub
and
mov
scas
mov
xor
and
in
cmc
xchg
xlat
pop
test
sbb
icebp
mov
inc
ds
dec
lret
ror
dec
adc
and
cmp
call
push
bound
fsqrt
cltd
lods
xchg
add
xor
xchg
pop
out
adc
jp,pn
add
test
lock
push
push
jns
nop
imul
shll
mov
jo
popf
or
jp
cli
and
cmpsl
jl
sub
leave
das
mov
cs
imul
pop
nop
repnz
dec
sub
push
call
mov
mov
inc
int
aad
test
aas
mov
out
dec
push
inc
out
jp
adcl
inc
adcl
sub
aam
lcall
jmp
outsl
jmp
or
adc
clc
sbb
add
fdivr
daa
fs
inc
shll
frstor
xchg
sub
or
and
and
arpl
sub
pop
fsub
das
mov
call
dec
in
cmp
arpl
inc
push
in
jecxz
das
into
pop
mov
push
cmp
test
cmp
ljmp
inc
insb
jg
ret
xor
fsub
dec
out
cltd
mov
enter
push
inc
stos
in
sub
mov
or
xor
sub
inc
lea
sbb
lds
inc
loopne
jae
mov
pop
xor
pop
and
push
or
jbe
pop
repz
test
jne
std
into
inc
jo
add
mov
and
sbb
dec
stos
out
test
fwait
sbb
mov
je
subb
clc
inc
inc
mov
mov
push
repnz
push
je
rcrb
cmp
cwtl
xor
inc
mov
and
repz
popa
das
xchg
xor
inc
fisubrs
mov
dec
adc
sbb
in
dec
arpl
inc
inc
dec
out
lret
or
jnp
cld
or
ljmp
xchg
std
add
lods
mov
icebp
dec
adc
dec
cmpl
xchg
stos
clc
bound
icebp
add
dec
into
add
xchg
push
sub
loope
popf
imul
loop
and
ja
test
gs
ret
decl
fisttpll
jecxz
pop
push
xchg
cld
cmpsl
and
rolb
add
je
pop
and
sbb
int
leave
fsqrt
subb
mov
mov
in
sub
test
xchg
in
fimull
ss
cmpsl
scas
mov
in
sbb
sub
cmp
and
clc
jae
mov
dec
je
das
scas
das
rclb
adc
fdiv
bound
cwtl
sbb
mov
mov
bound
xor
movb
test
cmpsl
repnz
jo
xor
xchg
dec
jne
push
pop
pop
test
jmp
nop
pop
mov
cmp
pop
out
xchg
fimull
mov
leave
mov
jb
testl
mov
mov
notb
int
xlat
fildll
jg
mov
das
es
pop
cmp
xor
inc
gs
mov
fwait
icebp
mull
in
test
add
push
jp
mov
mov
xchg
and
lock
mov
jp
mov
les
repz
imull
mov
cmpsl
jle
mov
mov
adc
lods
and
pop
add
xor
fmuls
loop
stos
das
inc
fsubrs
push
and
pop
mov
mov
cmp
inc
cmpsb
fs
inc
je
loope
jb
out
pop
movsl
mov
jo
mov
adc
inc
pop
dec
aad
inc
mov
mov
cmp
mov
or
dec
mov
popf
enter
lods
lds
lahf
fwait
shr
xorps
cmpb
and
push
inc
mov
ds
dec
lds
outsb
int
inc
mov
inc
loope
ret
sbb
jl
fwait
pop
and
add
sub
packssdw
cmp
loope
popf
and
mov
or
pop
pushf
aad
mov
ds
fcomip
jmp
insl
push
ror
dec
dec
cmp
int
push
repnz
sub
sbb
mov
jp
push
imul
mov
mov
stc
fcomps
and
dec
mov
stos
stos
push
insl
arpl
daa
jp
bound
icebp
or
dec
push
fdivrl
into
mov
testl
incl
outsb
sbb
jmp
push
insl
cmp
inc
mov
out
out
mov
and
and
iret
mov
pop
std
test
mov
xchg
dec
adc
lds
shl
push
repz
clc
mov
mov
test
push
jo
in
inc
and
sbbl
xor
rcrb
lret
add
mov
stos
jae
mov
push
in
pop
dec
ja
push
jg
and
push
sbb
mov
dec
mov
mov
xor
mov
cltd
jl
ds
cmp
xor
pusha
imul
shl
sub
xchg
loope
jo
mov
nop
out
loop
pmovmskb
fdivrl
mov
mov
pushf
call
stos
fbld
sbb
ss
mov
xchg
addr16
jge
jae
mov
cmpsb
jne
mov
push
ljmp
and
push
popa
adc
inc
inc
xchg
imul
and
fistpll
fs
and
lea
cmc
cmp
test
dec
fwait
popf
les
testb
inc
cmpsl
cmp
out
mov
sub
add
in
jge
roll
dec
stos
imul
or
push
jns
mov
test
mov
nop
mov
sti
in
cwtl
dec
jge
shll
add
popf
sbb
push
jb
cmp
mov
ret
decb
mov
lcall
adc
scas
mov
inc
mov
pop
imul
adc
clc
ja
aaa
cmp
adc
movsl
adc
mov
sub
or
add
xchg
push
push
lods
loope
and
mov
pop
fstl
cmp
popf
test
hlt
cmpsb
cs
stos
lahf
xor
cmp
xchg
test
mov
iret
sub
lock
out
or
sbb
and
mov
pop
inc
mov
mov
xchg
popa
lahf
sbb
nop
hlt
in
push
jmp
inc
mov
mov
out
xchg
inc
mov
daa
dec
or
fidivl
test
fldcw
mov
xchg
popf
pusha
xchg
mov
stos
and
mov
add
test
adc
pop
push
int3
outsl
xor
pushf
outsb
mov
mov
sub
adc
and
add
and
pop
sarb
rcrl
pusha
test
mov
sbb
icebp
notl
imul
add
mov
xchg
xchg
lret
add
mov
rcl
adc
push
xchg
hlt
mov
mov
cmp
cmp
imull
pop
repz
js
mov
sub
or
jmp
xor
add
testl
movl
xchg
insl
pop
test
push
test
cli
lods
andl
cmpsl
cmp
in
dec
aaa
inc
stc
dec
rorb
rolb
pop
rcll
pusha
mov
cmc
repnz
cltd
and
icebp
push
mov
nop
sbb
in
push
add
frstor
mov
loop
pop
pop
dec
pop
ret
in
jmp
and
inc
shrb
aad
lahf
cmc
push
dec
add
imul
mov
cmp
inc
sub
rorb
pop
mov
in
xor
je
insl
inc
cmp
add
iret
and
inc
push
push
mov
adc
mov
adc
hlt
fnstenv
lahf
in
int
in
adc
xorl
sub
add
jmp
out
fdivrl
dec
in
aaa
push
into
pop
ret
in
and
jo
push
xchg
mov
mov
incb
push
sbb
sbb
pop
mov
outsl
add
mov
lret
aam
movsb
cmc
push
mov
in
lods
enter
movsb
adc
and
ljmp
push
inc
mov
xchg
cmp
jp
sahf
and
mov
ficompl
movsl
mov
pop
lds
les
cli
ss
xor
dec
jne
lods
cmp
iret
jp
xor
pushf
mov
rcr
clc
mov
movsl
mov
call
enter
out
nop
lret
dec
in
pop
cmp
fmuls
mov
dec
test
out
aad
pop
dec
xchg
xchg
push
call
jae
in
pop
movsl
in
cmp
inc
sbb
pop
aam
not
jnp
inc
incl
test
cmc
cltd
divl
mov
lcall
adc
mov
imul
dec
pop
push
and
sub
aam
stos
ret
dec
daa
cwtl
fld
cmpsl
insb
add
imul
sub
ret
fidivl
notb
or
sti
mov
and
fwait
lcall
pushf
gs
or
mov
and
out
pop
stos
jge
das
orl
mov
mov
jbe
sub
xchg
out
lea
jle
cmp
adc
and
xchg
in
xor
sbb
jmp
mov
mulps
dec
into
int
jns
mov
add
daa
cwtl
daa
inc
cmp
mov
neg
cmpsb
xor
xor
imul
inc
stc
insb
iret
xor
shrl
dec
lcall
cltd
scas
in
mov
pop
xlat
push
jo
insb
outsb
out
imul
fcomps
les
pusha
inc
stc
int3
xor
inc
cmc
loop
fs
mov
fdivrs
js
stos
mov
out
and
inc
mov
shrb
popa
aad
jbe
jo
and
clc
dec
bound
clc
shll
fs
test
stc
jecxz
inc
iret
inc
shll
iret
cmp
dec
sbb
dec
aaa
out
cmp
shl
xor
pop
call
cwtl
sub
mov
fisubs
cld
or
mov
mov
mov
adc
test
das
mov
or
adcl
mov
sub
sbb
loop
aad
push
mov
sub
pusha
add
mov
pop
mov
add
pop
cmp
mov
outsb
push
cmovbe
push
ret
sbb
and
and
cmp
sub
and
sub
out
jecxz
push
cmp
cmpsl
push
cmpsl
jae
and
fsts
xor
loope
outsb
push
cmp
ja
cmp
mov
pop
mov
xchg
mov
mov
out
pop
test
std
sahf
into
xchg
lods
pop
ds
icebp
mov
push
cmp
inc
mov
xlat
mov
insl
cmp
jle
add
imul
adc
lcall
dec
mov
xor
fstpl
pusha
stos
out
insl
aaa
inc
jecxz
pop
sar
and
fldl
movsb
addb
popa
jp
fidivrl
jne
ss
sbb
js
lods
jmp
ja
cmp
sbbl
jg
lret
or
push
inc
int
pushf
jae
inc
dec
imul
mov
js
imul
jns
cli
jne
xchg
cwtl
jg
xor
cmpsl
lcall
sahf
or
arpl
inc
sbb
pop
add
mov
or
test
rcrl
and
popf
or
mov
mov
mov
out
sub
imul
sbb
jp
popf
popa
fisttpll
cld
xor
dec
inc
add
pop
xor
jle
mov
sahf
scas
or
inc
in
sahf
dec
or
pop
cmp
sbb
in
sbb
xchg
push
je
and
lahf
xchg
int
stos
push
pop
jno
dec
xchg
fs
dec
ss
mov
xchg
popa
outsb
mov
push
nop
pushf
aas
and
test
push
cmp
xlat
int3
xchg
mov
bound
sbb
int3
clc
push
int3
lret
push
add
into
mov
leave
and
xchg
xor
lcall
add
adc
cmp
addr16
rol
jp
call
jb
out
inc
das
adc
pop
out
ret
adc
ljmp
mov
loopne
test
sbb
ret
dec
xchg
inc
cmp
scas
jb
out
xchg
mov
mov
push
pmaddwd
cmc
jp
xchg
jge
gs
popa
and
jns
mov
fwait
in
sub
sub
pusha
mov
ret
mov
or
hlt
test
stos
rclb
iret
movsl
add
mov
test
mov
xchg
add
lret
jle
cmp
sbb
in
std
dec
push
lret
inc
pop
jge
lods
shlb
sub
imul
in
