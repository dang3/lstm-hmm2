push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
mov
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
add
add
sahf
inc
jnp
sub
das
rcl
pop
mov
jae
adc
int
sbb
inc
xchg
push
stc
psrld
sbb
addr16
or
xchg
bound
mov
sub
es
imul
arpl
jg
mov
mov
das
mov
mov
cmp
lods
sbb
cmc
and
out
rol
push
outsl
xchg
lret
adc
sbb
mov
orb
ret
lahf
fmull
js
subl
dec
cmp
mov
cwtl
push
cli
in
add
or
popa
cmp
cmp
xchg
in
mov
add
add
dec
inc
cmpsl
pop
rcll
jg
jg
nop
push
es
inc
or
and
xchg
mov
dec
pop
fidivrl
daa
dec
or
cmp
xor
pop
inc
fwait
pop
xchg
nop
nop
and
mov
jne
mov
push
cmpsl
ljmp
popa
adc
pop
adc
rorl
insl
popl
fildl
mov
repnz
mov
ds
movsl
repz
cmp
xor
insl
and
add
pop
jns
nop
sub
ss
sahf
lods
clc
mov
xchg
lahf
xchg
movsl
pop
mov
std
mov
xor
int
sbb
loopne
lock
cmp
xor
fneni(8087
mov
cmpsl
mov
ss
aas
adc
cltd
in
mov
ror
clc
add
cwtl
mov
pop
mov
push
inc
lods
into
insb
push
xor
test
push
fsubrs
add
add
or
mov
jbe
fisubl
mov
mov
int
into
imul
sub
js
test
lea
aas
cmp
dec
push
test
dec
movsl
fmulp
es
shrl
mov
movsb
loop
and
ds
jne
dec
pop
add
mov
pop
in
cmpsl
lret
dec
jns
in
pop
push
push
dec
cmp
imul
sti
imul
loope
dec
jge
leave
sbb
add
aam
dec
enter
fsubl
addr16
nop
fcompl
inc
add
pop
push
mov
inc
push
rcrl
loop
fidivrs
mov
mov
nop
xor
lcall
popa
loopne
pop
push
bound
cmp
dec
inc
push
xchg
mov
je
pushf
inc
daa
movsb
jb
rclb
mov
inc
cmp
incl
jbe
lcall
sarb
cltd
mov
shll
xchg
inc
flds
aad
orb
ja
fmull
mov
xchg
das
aad
adc
push
mov
icebp
inc
xor
lahf
mov
in
pop
pop
mov
xchg
or
cmp
in
pop
sub
mov
shll
cmp
fildll
in
xor
int
dec
add
lcall
pop
sbb
sub
out
sti
gs
cmp
cmpb
inc
cli
add
add
jbe
shlb
outsb
and
push
nop
mov
xchg
stos
mov
xchg
push
psrlw
or
or
fwait
inc
sbb
adc
sub
fidivrs
iret
movsl
imul
cmpl
imul
sbb
or
xlat
repnz
sbb
mov
aam
divl
stos
lock
gs
jle
jns
cmpl
lods
lahf
repz
xor
or
stc
inc
gs
shrb
loop
lret
xor
mov
jp
repnz
fldl
and
in
sbb
cmp
cs
sub
fsubrl
add
movsb
add
xor
int
std
ret
push
cmp
pop
mov
pusha
pop
cs
lods
jecxz
sbb
xor
lcall
sarb
and
scas
out
jecxz
add
ss
mov
imul
jp
xchg
out
ljmp
xchg
stos
pop
aam
mov
dec
repnz
ljmp
stos
dec
int3
lock
and
cmp
push
cmp
pop
lret
sar
or
fs
and
mov
xchg
negb
leave
add
vminps
jecxz
movsb
jecxz
dec
enter
cmp
loop
test
call
sahf
pusha
xchg
push
jae
insb
scas
les
add
add
lds
les
push
test
push
xor
jae
shll
or
decl
pushf
lcall
inc
dec
push
sub
dec
sahf
add
outsl
fs
pop
xor
dec
in
dec
mov
lahf
and
ljmp
dec
arpl
jge
xor
stos
xchg
fnsave
es
push
mov
sti
sub
stos
mov
lods
push
rcl
loopne
out
pop
cmpsl
mov
jno
ljmp
repnz
insb
xchg
cs
fdiv
dec
clc
dec
fisttpl
sub
dec
inc
or
roll
push
call
jl
mov
inc
mov
or
into
sbb
sub
cmpsb
mov
lods
aam
in
adc
imul
add
divl
adc
mov
push
arpl
outsb
data16
iret
inc
xchg
fnsave
outsl
dec
jl
dec
es
mov
aam
insb
nop
ficomps
sarb
arpl
or
add
loope
xor
sbb
jle
clc
mov
sub
xchg
pop
lret
inc
es
jle
xor
popf
repz
outsb
mov
pusha
mov
sbb
aaa
repnz
adc
xchg
fsts
jcxz
gs
cld
sub
sbbb
lret
lret
dec
sub
nop
fmull
ja
cmpb
push
int
mov
add
inc
or
clc
dec
and
pop
and
cmpsb
mov
lret
mov
inc
jl
in
mov
gs
dec
push
xchg
std
aad
inc
adc
sub
ret
imul
nop
jl
add
fwait
aas
xor
sbbb
pop
cltd
es
push
sbb
pop
sub
fistl
sub
mov
push
repnz
inc
inc
rclb
fdivrl
das
xchg
mov
sub
fcmovne
ds
insl
ror
mov
in
mov
adc
fwait
dec
enter
mov
movsb
loope
loope
sbb
lods
mov
mov
test
popa
int3
push
iret
hlt
popa
push
jle
push
push
dec
xchg
inc
add
pop
fadd
add
outsb
push
or
je
enter
rol
testb
or
or
mov
mov
decl
aam
cmpsb
dec
ja
cmp
mov
cmp
push
push
jnp
popa
cmc
add
adcl
pop
test
fidivs
outsl
jg
mov
loop
movsb
ljmp
sbb
movsl
js
sahf
in
test
daa
in
mov
dec
lods
fsubrs
outsb
cs
dec
js
arpl
lds
stc
pop
fwait
movsl
mov
jg
std
and
xchg
pop
sbb
add
xor
cmp
adc
jmp
test
nop
cmpsb
cs
and
jecxz
std
pop
sbb
mov
add
inc
insl
jne
in
lods
addr16
add
xor
loop
mov
seto
adc
add
cmpsl
pop
add
jo
rcll
xor
push
cvtpi2ps
outsb
pop
fstps
push
cmp
mov
test
mov
lahf
add
sub
lock
cmp
aas
aaa
aaa
ds
jmp
jns
mov
sub
pandn
lea
jnp
push
sub
enter
or
mov
cmp
mov
test
mov
or
adc
push
aas
ds
stos
cmc
sbb
pop
adc
in
bndldx
inc
shl
push
subl
setae
and
jle
stos
inc
xchg
cmpsb
call
ret
enter
cmpsb
mov
addl
pushf
rclb
add
add
mov
pop
xlat
or
addb
out
push
les
jecxz
stos
push
xor
pushf
xor
outsb
or
aas
mul
and
outsl
enter
into
xor
cmp
jne
mov
sub
subb
repz
xor
lea
mov
mov
and
mov
nop
hlt
push
fidivrl
push
pop
add
push
dec
out
rep
and
mov
and
dec
dec
lahf
jae
add
xchg
push
jmp
and
hlt
sahf
adc
imull
or
pushf
lcall
jae
stos
cmp
ficomps
inc
push
pop
xor
pop
xchg
jg
fwait
jp,pt
mov
lock
cmpsb
mov
into
cs
mov
sub
pop
pop
cmp
pop
in
pusha
jb
pop
lret
mov
jb
cs
scas
inc
xchg
push
lods
push
imulb
cmp
push
inc
es
sub
addr16
addr16
pushf
insl
inc
push
add
or
das
mov
add
sbb
xchg
shlb
imul
mov
adc
hlt
lods
in
popa
cmp
mov
sub
jl
mov
loop
out
xor
jo
sub
push
lds
into
clc
fsubrs
inc
xchg
lret
lahf
cmpsb
aad
xor
arpl
test
xchg
sub
addr16
pop
xchg
dec
adc
add
add
out
mov
into
ja
sub
and
js
push
mov
fdivrl
jle
loopne
mov
xor
cmp
shrl
pop
mov
pop
pop
adc
dec
mov
into
ljmp
cmp
sarl
mov
mov
je
xchg
mov
lahf
stc
imul
test
repnz
ret
mov
cmp
add
or
addb
add
clc
mov
mov
cmpsb
stos
or
mov
cmp
std
in
push
mov
xor
test
insb
mov
jle
pop
je
rcll
or
jge
xlat
rorb
push
adc
cmp
sub
xor
push
mov
shll
xchg
roll
sub
push
imul
pop
js
incl
in
pop
ret
fsubrs
jmp
sbb
cmpsb
add
push
add
add
cmp
push
inc
cld
add
jl
xor
jae
xchg
cs
xchg
jno
addl
dec
push
aad
mov
mov
or
push
pop
inc
sub
jb
mov
inc
push
inc
push
dec
aam
mov
out
add
mov
adc
dec
dec
adc
jns
push
dec
movsb
jge
adc
inc
mov
push
stc
sub
push
cmp
popa
mov
aad
idiv
in
icebp
fidivl
mov
loop
mov
mov
xchg
mov
mov
mov
outsb
ror
push
mov
addr16
ret
pop
imul
dec
add
mov
mull
andl
stos
test
hlt
test
jae
jnp
mov
jp
push
mov
xor
hlt
cld
mov
imul
test
lahf
and
inc
add
outsl
shll
adc
add
inc
push
pop
fidivrs
ficomps
andl
mov
add
shrb
sbb
mov
out
sbb
fstl
js
or
mov
pop
in
popf
dec
push
lret
jno
pushf
add
lds
or
cmp
cmp
cmc
fsubrl
imul
xor
inc
jge
jmp
or
imul
pop
jmp
je
test
pop
aaa
cli
dec
inc
inc
xor
add
les
jns
sti
and
cmp
ja
or
aaa
iret
mov
mov
cmovb
jle
test
dec
into
add
jl
icebp
or
nop
xor
xor
inc
mov
mov
sbb
out
mov
pop
outsb
aaa
push
outsl
iret
arpl
sbb
add
orl
es
add
adc
aam
sub
cmpsl
loope
sbb
and
jb
pop
pop
scas
push
aas
mov
shll
ret
addl
pop
jp
and
add
outsl
les
dec
mov
cmpl
inc
add
inc
pop
popf
sbb
nop
adc
pusha
pushf
loopne
fwait
push
leave
dec
call
adc
add
in
inc
andb
fcompp
call
shll
add
sbb
sub
ror
ljmp
out
jmp
dec
jbe
outsl
mov
jmp
xor
or
sub
inc
pop
cmp
icebp
clc
mov
xchg
lret
inc
dec
jnp
jmp
pop
hlt
test
lret
sbb
add
cmpsl
outsl
inc
mov
cwtl
test
insb
jnp
sti
decb
pop
inc
rorb
adc
and
arpl
cmc
js
cmp
add
or
leave
or
push
and
lea
mov
loop
out
jno
scas
xlat
loop
jnp
shlb
inc
das
or
cli
out
adc
ja
pushf
out
and
sub
fdivs
sbb
in
jbe
mov
add
pop
fisubl
mov
push
or
daa
test
push
loope
xor
mov
lcall
clc
pushf
mov
jl
mov
sti
and
insl
pop
leave
mov
das
xchg
xchg
outsb
les
es
push
push
inc
add
add
lods
jmp
sbb
pop
stc
mov
xchg
imul
movups
jb
das
popa
arpl
push
out
dec
and
ficompl
insl
mov
mov
sbb
jno
xchg
mov
and
push
or
cmp
mov
fsub
fldl
decb
mov
lcall
push
cmp
mov
add
cmpsb
dec
lock
pop
pushf
jnp
inc
push
adc
popa
xor
imul
push
mov
adc
inc
das
cmp
std
ds
repnz
dec
cmp
dec
mov
in
aam
loope
cmc
fcmovne
adc
loope
push
push
add
sub
inc
push
mov
xchg
fadds
cltd
or
push
ja
push
into
push
and
xlat
cmc
ja
mov
js
mov
mov
jns
push
push
sbb
add
dec
mov
or
shr
dec
push
pop
pop
mov
jnp
es
and
cmp
ret
mov
sub
out
out
cmp
shrl
adc
movsb
mov
scas
dec
repz
dec
adc
push
test
int3
cld
mov
mov
pop
jbe
pop
lret
mov
int
add
sbb
lods
stc
cmp
stc
and
lock
pop
pop
xchg
stos
lds
int3
jecxz
fwait
push
jne
nop
out
mov
pop
mov
push
sub
push
push
xchg
fnstsw
ss
addr16
mov
inc
cmc
pop
sub
add
mov
out
shrb
es
rolb
or
jo
out
outsb
flds
and
pop
lea
sub
clc
js
fdivrl
ret
mov
inc
jl
icebp
sub
jnp
push
scas
sti
mov
jb
das
repz
rcrl
gs
xchg
pop
shll
or
add
pop
andb
mov
mov
or
cmpsb
enter
js
out
in
lret
mov
jnp
dec
xchg
dec
jp
imul
sarb
inc
push
cmp
in
cmp
in
orb
or
xor
mov
push
xchg
cmp
xchg
mov
decl
mov
and
xor
and
test
fstpt
sub
addr16
add
leave
popf
fldenv
cwtl
outsb
sub
push
adc
lods
inc
bound
and
inc
shrl
mov
pop
mov
push
add
pop
out
test
xor
les
dec
inc
inc
mov
lods
adc
lods
cltd
push
data16
inc
cmp
xchg
pop
mov
mov
xor
cmp
hlt
fcomps
cmp
stos
enter
mov
adc
or
push
mov
iret
fstpl
mov
sbb
fldl
push
jp
adc
imul
ss
pop
rcll
cmp
or
add
shr
sub
add
negl
in
mov
inc
dec
jae
or
fisubrl
lea
jbe
sbb
mov
jmp
loope
roll
lods
lock
stc
pop
xchg
out
add
cmp
pop
out
insl
dec
fisubrl
int
bound
mov
pop
rolb
andl
fwait
xor
pop
mov
cltd
cmp
cmp
data16
xor
push
and
bound
push
dec
xchg
aaa
dec
insb
lods
sub
mov
push
js
add
adc
clc
hlt
int
xor
shll
add
inc
mov
add
aam
clc
mov
incb
push
pushf
pop
imul
add
cwtl
mov
rclb
lea
push
call
daa
je
and
fcmovne
idivl
dec
aas
sbb
jae
mov
imul
outsl
and
cmovns
fadds
daa
cs
lahf
inc
outsb
mov
sar
pushf
xchg
pop
jle
push
ret
adc
lea
inc
or
add
inc
push
shrl
push
cmp
arpl
scas
mov
fcmove
stos
jle
xorb
aad
rolb
aad
mov
sbb
adc
aad
lahf
add
sbb
mov
icebp
sbb
cmp
xchg
sub
popf
sub
fistpl
cmp
lods
lcall
ret
mov
jbe,pn
mov
sub
dec
dec
pop
cs
jne
roll
push
clc
jl
xchg
stos
adc
shll
xor
fisubrl
add
mov
aaa
mov
cwtl
inc
mov
cwtl
cld
fnsave
fisttps
mov
pop
insb
lahf
inc
dec
cs
ds
cmp
jne
xchg
fstpl
pop
out
add
xor
and
pop
addr16
rdmsr
dec
subl
add
add
xchg
xchg
adc
mov
push
fcoms
in
fidivrl
or
push
jnp
push
pushf
or
push
lods
in
cld
sub
cmp
loop
xor
aaa
sbb
sbb
or
leave
add
rorl
jnp
sti
leave
test
in
mov
gs
or
and
movsl
add
adc
push
rclb
cmpsb
repz
jbe
arpl
aaa
shl
and
xchg
dec
jne
sti
movsl
mov
xor
adc
fwait
mov
mov
and
ds
rcrb
mov
aas
cltd
sbb
inc
cld
inc
cmp
mov
pushfw
cmp
mov
or
into
nop
shlb
jbe
mov
jge
inc
jp
sarb
sbb
mov
mov
in
add
sti
clc
push
call
shrb
ljmp
mov
add
lds
stc
push
jg
loop
mov
cltd
fstps
push
int3
jae
xchg
push
jbe
scas
jecxz,pt
sbb
and
add
sbb
aaa
mov
movsl
mov
adc
adc
inc
loope
jnp
aad
jmp
dec
push
lods
dec
daa
movsb
test
pop
pop
jmp
pop
jle
in
and
push
push
xchg
cli
aad
pop
push
test
sahf
movsl
iret
mov
or
xchg
mov
mov
mov
dec
add
lock
sub
inc
and
or
mov
and
rcll
repz
inc
lds
loopne
out
or
xor
pop
pop
inc
jmp
lret
pop
in
dec
or
add
jns
mov
sbb
hlt
sti
add
jmp
shll
jmp
or
std
inc
add
xchg
sub
sarl
pusha
cmp
inc
cmp
add
cmpb
lods
test
aaa
out
dec
popf
insl
jge
call
out
sub
mov
sbb
ret
jle
and
aam
out
jb
cmp
cwtl
testb
sarb
mov
xchg
sbb
pop
ss
jmp
xor
push
and
test
sub
push
cmpsl
incb
scas
xchg
pushf
lret
aaa
fmuls
pop
movsl
rorl
or
pop
dec
dec
lfs
outsb
xor
fst
jbe
push
repnz
cmpsl
int
jl
pop
push
cld
mov
xchg
jecxz
xchg
in
out
mov
push
jnp
adc
jecxz
xor
ss
movsb
add
xor
adc
fsts
jle
xchg
jno
aas
pop
repnz
or
mov
popf
mov
jecxz
sbb
add
add
xor
and
out
addl
fs
jo
std
out
and
es
jmp
sti
fisttpll
sbb
aam
ja
popa
mov
popa
jg
imul
roll
scas
mov
lret
dec
cmp
push
test
pop
cmpsb
repz
fidivrs
insl
jmp
xchg
xchg
inc
leave
int
in
movsb
adc
in
add
and
arpl
cwtl
pushf
cmp
jg
fcoms
xchg
cli
ret
dec
das
inc
and
hlt
mov
ficompl
add
xor
repz
mov
sbb
sti
lods
and
pop
pop
scas
loope
into
in
xchg
jecxz
mov
out
mov
mov
and
pop
xor
mov
jns
daa
lcall
or
lods
pop
aaa
sbb
pusha
pop
inc
cmpsl
and
dec
jno
int
xor
add
lods
mov
push
xchg
shl
loop
and
lods
push
cmp
dec
xchg
pop
pop
dec
mov
ljmp
rorb
mov
ljmp
lret
jmp
lret
mov
push
pop
pop
and
cmp
insl
stos
cmpb
or
add
cmp
scas
dec
mov
shlb
sub
hlt
pop
pop
cmp
xor
sbb
jp
roll
dec
mov
shl
adc
xchg
dec
mov
dec
mov
xor
mov
je
ja
xchg
and
pop
loopne
or
loop
ret
ficoml
pushf
pop
cmp
sti
mov
loop
shlb
mov
sbb
add
mov
sub
mov
lods
sub
sbb
add
outsb
cmpsl
sbb
or
add
mov
pop
and
push
pop
xchg
push
pop
clc
stos
mov
outsl
cli
fs
sti
popa
mov
mov
dec
lcall
mov
movsl
push
imul
cmp
out
xorb
stc
pop
lds
adc
lret
push
mov
inc
shrl
sub
fs
add
push
sub
or
in
xor
ljmp
pop
push
std
rcrb
cmp
adc
sahf
pop
mov
xor
aas
jmp
out
mov
mov
push
mov
or
mov
popa
movsb
sbb
fwait
pcmpgtd
outsb
sbb
cltd
data16
pusha
out
sbb
fsubr
fsubs
les
inc
add
std
lock
aad
scas
push
push
test
inc
xchg
addr16
add
ds
test
mov
inc
sbb
pop
pop
sub
push
mov
mov
int3
aas
fs
ret
ljmp
dec
push
out
iret
aam
sbb
imul
leave
fimuls
je
or
je
mov
mov
imul
add
imul
jp
mov
cld
std
mov
js
jae
xor
and
add
or
inc
orb
or
mov
idivl
push
roll
sub
mov
sub
sub
cmc
loop
popa
and
or
insl
sahf
pop
das
loop
dec
mov
cmp
lds
add
movsl
push
fdivr
xor
iret
fiadds
ss
leave
inc
sbb
xor
cmp
shl
dec
cltd
sti
pop
inc
cmp
shll
ja
fbld
inc
icebp
jmp
add
add
sbb
test
push
mov
pusha
push
out
mov
xchg
int3
test
inc
sahf
jmp
cltd
std
adc
lock
adc
or
xchg
mov
loope
in
stos
insl
or
or
sbb
into
ficompl
inc
in
push
jg
cmovne
and
xor
inc
xor
push
lret
cmp
cmp
in
fistpll
jo
stc
mov
add
enter
negl
stos
gs
xchg
repnz
xchg
jmp
out
outsl
mov
xor
pop
jp
pop
dec
adc
push
loop
jnp
or
imul
push
in
xor
gs
xchg
fdivr
xchg
into
insl
int3
or
jmp
cmp
xor
js
bswap
cld
inc
nop
cmc
sbb
lock
add
flds
push
jle
scas
ret
fs
bnd
xor
mov
add
aad
lret
pop
sub
bound
daa
ja
push
fwait
mov
loop
xchg
outsl
shl
scas
add
add
test
sahf
add
cmp
adc
sbb
aam
mov
sub
imul
adc
aaa
js
cmc
les
repz
stc
lret
jno
or
xor
xorb
or
mov
jecxz
popf
mov
cli
xor
leave
sahf
unpcklps
mov
movsl
and
outsb
outsb
fbstp
adc
in
adc
jae
ret
outsl
jae
inc
cmp
scas
push
mov
mov
mov
mov
ljmp
daa
mov
xor
movsl
icebp
jnp
mov
adc
xorl
sub
jmp
sti
mov
jno
popa
or
mov
add
icebp
shrb
movb
int3
pushf
gs
lcall
xchg
mov
jae
inc
dec
jle
sti
call
loopne
sbb
pop
popf
mov
mov
andb
xlat
jb
xchg
sub
je
rcl
xor
out
repz
pop
pop
and
push
cwtl
cmp
mov
fbstp
and
movsl
in
movsb
sub
insb
inc
mov
dec
add
add
shll
mov
fnstcw
popf
cmp
shl
mov
sub
fcmove
jg
cmpsb
add
push
pop
sbb
faddl
das
jnp
inc
mul
imul
mov
push
cmp
cmp
fiaddl
push
icebp
jl
push
inc
add
dec
out
roll
xor
movsb
pop
mov
sti
dec
in
push
in
inc
daa
adcl
aad
test
add
add
test
jecxz
je
fists
dec
jp
jecxz
addr16
sub
fldenv
stc
aaa
out
push
gs
add
jns
out
dec
les
and
stc
stc
lcall
xchg
jg
push
pushf
movsl
dec
mov
inc
xchg
sbb
inc
xor
and
and
dec
inc
mov
and
insl
fwait
push
and
mov
incl
add
add
mov
cmp
ss
fstps
pop
push
outsl
adc
ret
push
mov
pop
test
pop
in
daa
adc
adc
add
fldl
xor
insb
ljmp
dec
std
fisttpll
inc
repnz
add
dec
jae
pop
lock
aaa
lcall
jecxz
add
xchg
xor
pusha
lret
icebp
rcll
dec
jae
push
loope
push
test
jg
xchg
add
add
or
test
pop
jge
enter
rorb
xchg
in
scas
ret
popa
jns
popa
ljmp
test
rcr
clc
mov
idivl
fldt
add
add
shll
push
inc
int3
outsb
shr
lcall
dec
stc
pop
mov
mov
js
jae
scas
mov
dec
aas
and
out
dec
xor
js
pop
mov
cwtl
out
mov
pop
fsts
push
adc
nop
dec
add
mov
adc
push
lods
xchg
inc
out
pop
push
movsb
sub
cmp
jmp
push
popa
jnp
sub
xor
into
mov
addr16
dec
aad
dec
cmc
in
out
test
out
ficompl
xor
rclb
and
xor
jg
jl
fstps
movsl
push
mov
jnp
xor
adc
push
mov
add
bound
loope
mov
int
adc
dec
bnd
push
sub
sub
fidivl
xchg
call
mov
int
hlt
pop
out
sub
mov
bound
sarb
in
jo
add
mov
cwtl
jae
js
dec
xor
popf
pop
cld
mov
fists
mov
popf
filds
out
jle
cwtl
adcb
pop
ljmp
faddl
aam
push
out
nop
mov
xor
imul
mov
sldt
fnstsw
push
in
sub
int3
repz
mov
imul
dec
imul
dec
fwait
iret
dec
call
jmp
mov
ret
rorb
push
iret
jge
push
sub
incb
cmp
jmp
mov
sub
push
arpl
adc
pop
movsb
fildll
inc
push
xchg
cld
xchg
pop
xchg
mov
addr16
data16
push
or
add
add
nop
adc
dec
repz
leave
sub
fidivs
adc
dec
lcall
