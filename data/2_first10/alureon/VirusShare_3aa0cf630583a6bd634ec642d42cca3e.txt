mov
xor
mov
xor
xor
push
mov
add
pusha
mov
cmp
push
xor
xor
xchg
rol
or
ret
xchg
xor
add
not
mov
movl
ror
lea
neg
neg
neg
movl
mov
and
movl
mov
or
movb
mov
xchg
rcl
lea
neg
lea
mov
push
mov
sub
mov
nop
mov
shl
xor
and
not
nop
neg
xor
lea
lea
mov
xchg
push
ror
or
call
mov
mov
xor
xchg
adc
nop
cmp
mov
mov
mov
mov
nop
neg
xor
call
mov
neg
push
lea
xor
lea
not
mov
nop
mov
mov
xchg
nop
mov
xor
mov
movl
rcl
xchg
movl
mov
add
mov
xor
mov
movl
xor
mov
shl
mov
movl
lea
neg
nop
mov
lea
adc
nop
rcr
mov
xchg
ror
nop
lea
xor
xchg
mov
movw
mov
neg
movb
or
mov
cmp
adc
nop
xor
lea
mov
nop
mov
mov
mov
call
xor
rcl
sub
or
jne
not
mov
nop
cmp
neg
xor
nop
xor
xor
mov
shr
rol
mov
not
or
je
mov
mov
mov
and
nop
lea
lea
xor
shr
nop
not
xchg
mov
adc
mov
not
lea
mov
not
mov
nop
lea
mov
xchg
mov
push
xor
mov
lea
mov
popl
adc
mov
sbb
movl
mov
not
mov
not
push
or
mov
add
push
mov
neg
not
call
mov
lea
inc
jne
mov
ror
sbb
add
dec
shr
not
mov
mov
xor
shr
xor
xor
lea
nop
mov
mov
xor
mov
nop
xor
mov
mov
adc
lea
nop
and
shr
nop
rcr
lea
cmp
mov
pushl
neg
not
pushl
rol
mov
nop
xor
mov
mov
mov
nop
mov
and
popl
mov
mov
neg
cmp
mov
popl
xchg
mov
nop
lea
xor
mov
lea
mov
rol
mov
nop
lea
xor
mov
shl
not
nop
xor
sub
not
neg
xchg
mov
sbb
rcl
mov
xor
mov
nop
mov
rol
nop
mov
mov
or
lea
neg
not
rcl
mov
mov
push
mov
xor
shr
mov
push
mov
mov
lea
push
xchg
ror
and
xor
mov
push
ror
rcl
xchg
mov
mov
call
xor
xor
shl
mov
mov
movl
mov
xor
mov
shr
mov
nop
sbb
xor
mov
mov
nop
xchg
rcr
mov
mov
shl
lea
mov
mov
neg
lea
push
mov
mov
rol
push
not
shr
ror
push
lea
mov
push
mov
sub
mov
mov
push
mov
xor
rol
mov
call
or
lea
not
sub
lea
nop
lea
lea
mov
xor
rcl
nop
xchg
mov
lea
lea
neg
mov
push
mov
shr
mov
push
neg
mov
xchg
rcl
push
mov
xor
mov
not
xor
push
xor
xchg
pushl
mov
mov
adc
lea
xor
call
mov
mov
nop
neg
lea
not
nop
lea
xor
xchg
ror
mov
lea
mov
lea
mov
mov
push
mov
xchg
push
add
ror
xor
xor
mov
push
rcr
not
pushl
shl
xor
call
mov
mov
nop
mov
mov
mov
nop
xor
not
xor
xchg
lea
mov
mov
push
xor
xor
rcl
xor
push
mov
mov
pushl
xchg
mov
cmp
push
lea
mov
mov
mov
rcl
pushl
shl
lea
call
ror
xor
lea
nop
mov
xor
lea
nop
lea
not
mov
push
mov
not
push
xor
rcl
cmp
lea
push
add
xor
rcl
push
lea
mov
not
lea
mov
push
lea
mov
push
mov
mov
mov
pushl
shl
mov
call
add
not
lea
xor
mov
nop
shr
xor
nop
rcr
adc
neg
mov
lea
popa
leave
jmp
mov
neg
lea
push
rcr
neg
call
arpl
inc
loopne
movd
rcl
mov
xchg
inc
pushf
rcl
pop
mov
add
rorb
dec
imul
mov
pushf
mov
pop
pushf
jge
jbe
ret
mov
lds
sub
hlt
jno
in
push
mov
xchg
in
cmpsb
frstor
adc
xchg
ret
dec
add
mov
add
and
dec
sti
fs
scas
outsl
fs
call
orb
push
outsb
sbb
and
stc
aam
outsb
mov
stos
sbb
cltd
cwtl
cmp
das
popf
xchg
or
daa
adc
mov
aas
push
push
jne
pop
mov
hlt
int
jbe
xor
mov
and
push
roll
pushf
push
gs
mov
mov
popf
lcall
adc
fsubrs
mov
loopne
and
inc
push
inc
xchg
mov
push
test
test
test
jp
or
insl
inc
push
push
test
mov
fs
lock
dec
lret
out
repz
mov
sbb
arpl
xchg
call
bound
mov
bound
push
lret
out
xor
xchg
xor
inc
data16
xchg
ja
cmp
int
jb
testl
pop
xchg
jae
adc
sti
sbb
jmp
pop
daa
inc
hlt
jecxz
jbe
add
js
mov
mov
inc
int3
inc
daa
popf
pusha
xor
imul
sub
lahf
jb
add
dec
pop
aam
lcall
in
roll
mov
ds
lret
movsb
mov
cmp
cltd
ja
call
xchg
jae
or
out
push
int3
or
push
mov
cli
mov
and
jns
mov
popa
xchg
lahf
lret
mov
ljmp
xchg
push
mov
sub
mov
or
inc
push
clc
fdivs
arpl
xor
aas
or
pop
sub
int3
xchg
mov
roll
pushf
mov
insl
or
fwait
in
mov
dec
mov
inc
sti
inc
lret
mov
roll
mov
in
into
jecxz
lcall
dec
mov
pop
cltd
ds
enter
test
rorl
xchg
aam
xchg
rsqrtps
jp
mov
pop
push
popf
jge
test
mov
mov
repnz
pusha
das
jmp
mov
enter
and
xchg
pop
cmc
sahf
jmp
insl
hlt
rcl
je
push
mov
cmc
xchg
cmpsl
aas
adc
lods
xor
in
lret
test
adc
ds
aas
mov
xchg
mov
xor
xchg
loopne
scas
push
out
sbb
dec
mov
pop
sub
mov
fcomip
xchg
es
add
and
popf
imul
jl
inc
adc
add
outsl
or
pop
into
sub
clc
loop
push
push
adcl
xchg
fwait
add
jecxz
pop
fwait
lahf
filds
jmp
push
movsl
cmp
cli
psrlq
lock
jmp
xor
inc
icebp
psubq
shlb
sbb
rep
or
or
jle
in
sbb
and
sub
jnp
pop
aaa
std
mov
adcl
pop
cmp
and
xor
mov
loop
jle
pop
adc
lods
mov
and
pusha
jnp
or
pop
push
jge
jle
fadd
sub
and
addr16
inc
xchg
xor
sub
mov
push
jo
imul
mov
mov
push
jl
lods
jno
les
cmp
or
andb
jge
out
add
lahf
andl
sbbb
pusha
pop
add
add
fucomip
jo
loop
ljmp
jo
in
fs
mov
pop
movsl
xor
iret
cs
ljmp
aam
sub
jno
test
enter
fldt
push
jg
adc
pop
mov
loopne
fstp
xlat
shr
pop
and
in
sbb
push
dec
imul
popf
adc
gs
mov
or
orl
push
cwtl
lods
pop
inc
xchg
repnz
test
mov
ret
fwait
outsl
shll
xchg
sbb
fistl
arpl
popa
cwtl
sahf
fisttpll
or
cli
jmp
imul
dec
xchg
nop
mov
test
jmp
arpl
outsb
out
test
inc
pop
mov
jg
fs
mov
xchg
fidivrs
in
hlt
lods
repz
cmpsl
xor
test
jp
sbb
mov
repnz
sbb
dec
mov
iret
xchg
repnz
pop
push
and
mov
leave
push
mov
das
sub
mov
or
test
cmp
sub
ljmp
dec
movsl
push
scas
fldl
fsubrs
and
out
inc
lret
or
sti
dec
dec
add
xor
bound
sbb
loopne
bound
jecxz
out
xchg
dec
lcall
jmp
sub
jbe
xchg
mov
shrb
stc
cli
fbld
lcall
test
mov
stos
cld
daa
mov
mov
cs
pop
shll
loopne,pn
ficompl
or
mov
popa
lock
enter
add
xchg
mov
pop
and
fsubl
push
lret
mov
jmp
movsb
cmp
push
lods
or
mov
cltd
sbb
lahf
aam
xor
pop
jmp
stc
xor
ljmp
pop
dec
std
mov
or
mov
call
ret
jbe
je
sbb
mov
mov
sahf
outsb
bound
ss
andl
fistpll
les
and
shl
popf
xor
mov
nop
out
lock
mov
movsl
inc
lods
outsb
dec
xchg
xchg
mov
test
inc
or
out
sub
sub
stos
cmp
adc
mov
xor
mov
aad
stc
fs
jp
imul
and
daa
push
bound
lods
push
hlt
fsubrl
mov
push
push
push
lods
outsl
mov
inc
push
test
xchg
sub
push
add
pop
sub
add
sub
notb
lds
push
pop
add
cs
in
jns
insb
adc
inc
fidivl
cltd
or
jg
adc
lahf
inc
push
cmp
sbbl
sub
push
pop
dec
dec
push
sbbb
push
push
xchg
sub
ds
mov
out
int
dec
and
and
out
scas
xor
mov
bnd
cmpsb
cmp
mov
stos
icebp
inc
stc
mov
pop
fld
mov
dec
sub
ds
lock
and
aaa
add
or
js
loopne
inc
rolb
pop
dec
adc
imul
test
in
pop
inc
sbbl
cmpl
fstps
xchg
pop
pop
or
dec
shlb
leave
xchg
cmc
les
cwtl
push
in
ljmp
sbb
xchg
and
or
xor
mov
jmp
add
out
sahf
inc
push
cmp
fbstp
je
jmp
fst
cwtl
popa
mov
fstpl
scas
xchg
mov
mov
imul
rclb
mov
mov
xor
int
sarl
repz
lods
push
gs
sub
sub
sub
movsl
xor
movsl
es
jmp
arpl
or
pusha
xor
xchg
aam
mov
adc
mov
xchg
push
imulb
inc
loopnew
jae
gs
fnsave
cwtl
scas
pusha
lcall
jp
pop
dec
out
and
inc
stos
aam
iret
cmp
pop
jg
mov
je
roll
pxor
test
xor
push
test
hlt
dec
jmp
mov
ret
outsb
xor
outsl
xor
or
daa
cmpsl
dec
in
pop
out
mov
shlb
jg
push
pop
int
or
loopne
andl
