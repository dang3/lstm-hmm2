push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
mov
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
add
add
mov
lcall
pop
mov
jae
adc
int
sbb
inc
xchg
push
stc
psrld
sbb
addr16
or
xchg
bound
mov
sub
es
imul
arpl
jg
mov
mov
das
mov
mov
cmp
lods
sbb
cmc
and
out
rol
push
outsl
xchg
lret
adc
sbb
mov
orb
ret
lahf
fmull
js
subl
dec
cmp
mov
cwtl
push
cli
in
add
or
popa
cmp
cmp
xchg
in
mov
add
add
dec
inc
cmpsl
pop
rcll
jg
jg
nop
push
es
inc
or
and
xchg
mov
dec
pop
fidivrl
daa
dec
or
cmp
xor
pop
inc
fwait
pop
xchg
icebp
and
les
jb
pop
outsw
lret
add
lret
add
pop
inc
mov
das
and
and
xor
mov
xor
out
enter
or
scas
pop
icebp
dec
or
push
jle
bound
add
stos
push
pop
push
sbb
push
jmp
add
dec
ja
dec
or
mov
clc
dec
ds
inc
mov
cs
jnp
pusha
push
add
jnp
cmpsl
push
mov
movsl
ret
xor
loope
aaa
add
adc
mov
inc
jge
int
push
mov
push
xor
mov
mov
or
xchg
addr16
in
dec
jns
test
dec
add
mov
xor
mov
pop
add
pop
xor
jbe
stos
sahf
dec
jno
adc
and
and
cld
pop
mov
push
or
bswap
in
cltd
std
inc
shll
fimuls
cmp
cltd
cmp
shll
push
adc
lods
in
out
jp
adc
jp
int3
dec
or
xchg
lret
sub
xor
jne
fnstenv
lds
push
mov
mov
fwait
xchg
addl
add
or
xor
xor
js
into
fs
inc
pop
adc
and
idiv
and
jno
loope
mov
xor
xchg
imul
push
lcall
imul
dec
jnp
jmp
adc
mov
push
xchg
pop
and
push
mov
in
sub
adc
xchg
mov
outsl
sbb
lret
sbb
mov
les
pop
fists
inc
xchg
xor
mov
push
addr16
test
aaa
pop
outsb
mov
adc
dec
fsubs
icebp
adc
sbb
ror
push
sarl
or
add
push
sub
fcomi
mov
cmp
lahf
fimull
cs
fisubrl
sahf
push
mov
shll
test
in
jp
push
sub
or
pusha
jno
bound
or
movsb
xchg
push
pushf
sbb
dec
pop
mov
mov
fsts
lcall
jle
and
mov
inc
psrlw
dec
push
cmp
popa
cltd
sbb
dec
jmp
xchg
cwtl
and
ja
pop
aad
ja
ficompl
lods
lcall
pop
push
mov
sbb
aaa
cmpsl
sbb
inc
xchg
xchg
gs
cmc
insl
cmp
jb
pusha
cli
rcrl
pop
pop
in
xchg
sub
mov
add
add
sub
sbbl
push
sub
mov
nop
inc
mov
xor
cvtpi2ps
fsubs
xchg
mov
jg
imul
nop
std
mov
ljmpw
sbb
xor
fdivs
pushf
std
sub
xchg
subl
adcb
dec
or
loope
bound
arpl
add
add
mov
push
jmp
jp
call
xchg
ss
sbb
push
cmp
jnp
and
movsb
mov
pop
or
adc
arpl
testb
mov
mov
xor
popa
js
pop
ja
movsl
clc
arpl
cmpsb
div
ret
lods
sbb
sub
lods
lret
in
xor
fs
lods
cli
inc
shlb
rcrl
or
aaa
xchg
cmpsb
mov
mov
cs
pushf
xor
or
daa
setg
jp
push
and
push
aaa
sbb
pop
jno
pop
jl
rcrl
lods
pop
push
jp
les
mov
aad
rcrb
push
mov
mov
lret
cwtl
push
cmp
mov
xor
hlt
jne
fcoml
repz
subl
cmp
push
pop
xchg
mov
mov
mov
and
pop
test
dec
ja
dec
jg
or
lret
insl
push
loope
dec
sti
pop
jno
add
sti
dec
nop
cld
jg
icebp
push
jecxz
add
shll
cmp
dec
adcb
mov
jb
mov
ret
repnz
std
sbb
ret
in
pop
push
dec
or
mov
jo
dec
mov
or
sarl
ret
mov
test
lret
aad
cwtl
xchg
and
daa
push
stos
mov
mov
add
mov
roll
sbb
gs
jnp
fstps
fcmovnu
fcoml
lods
les
add
push
shlb
push
icebp
fcoml
je
xor
lods
loope
test
fwait
out
lds
fsubp
cmp
xchg
sbbl
mov
jl
in
or
loopne
jne
cwtl
dec
mov
pop
jmp
rol
sbb
xchg
xchg
jns
cld
int3
sti
mov
in
out
fimuls
adc
mov
test
ds
or
lret
mov
jne
or
rcrb
and
xchg
sbb
mov
cwtl
clc
sub
stos
mov
or
testl
mov
or
push
push
ja
imul
xchg
sbb
repz
jnp
stos
mov
mov
pop
pop
shrl
fidivl
and
sbb
cmp
push
das
pop
and
mov
out
shrl
mov
cmp
add
data16
inc
aad
imulb
jge
pop
int
pop
stc
pop
inc
pop
sbb
mov
cmp
mov
das
mov
mov
lahf
pop
or
jne
jne
sbb
jb
mov
fmuls
ret
jne
bound
pop
add
pop
mov
dec
lods
das
jecxz
or
fildl
sbb
jbe
mov
jbe
fimull
add
stos
or
fwait
shl
rcrl
jo
aad
and
jno
leave
mov
mov
pop
cmpsb
data16
or
stos
mov
xor
loopne
cmc
in
sbb
pop
jl
sub
idiv
ret
mov
xchg
add
pop
sbb
insb
scas
push
xchg
push
or
pop
dec
xchg
lahf
insl
jl
jg
aas
or
mov
xchg
add
jae
hlt
call
int3
lret
xor
lcall
aad
loopne
and
or
fmull
push
push
je
push
aad
inc
and
ja
pop
int
sahf
mov
icebp
in
cli
ljmp
lret
add
push
pusha
mov
lds
xchg
dec
adc
bound
adc
xchg
dec
push
add
enter
xchg
sti
ljmp
add
out
inc
push
not
xchg
pushf
icebp
in
call
les
cmp
sub
jmp
xlat
mov
jno
lods
mov
cmp
jmp
mov
shrl
adc
add
notb
insl
arpl
xchg
mov
pop
mov
jb
xor
js
add
mov
jno
add
insb
sbb
jge
sub
inc
cmp
mov
sbb
lods
mov
xor
pushl
mov
dec
shl
popa
cmpsb
mov
data16
adc
popa
mov
scas
loopne
jno
fsubs
jae
test
xchg
iret
rep
cli
fidivrl
in
ljmp
pop
daa
dec
push
xchg
fsubrs
cs
lock
mov
jle
mov
and
fimuls
sbb
jns
jne
cli
cmc
xchg
adc
rcr
leave
add
sbb
in
adc
xlat
clc
mov
daa
and
lea
add
jg
call
jno
scas
pusha
mov
out
in
sub
mov
push
adc
xchg
dec
int
imul
lds
gs
push
cmp
rorl
popl
mov
mov
pop
scas
push
and
dec
arpl
xchg
adc
pop
mov
or
push
daa
movsb
out
iret
sti
mov
mov
mov
adc
jmp
pop
push
arpl
and
mov
std
jae
bound
lret
lods
xor
notb
jo
xchg
std
xor
add
hlt
sbb
loopne
jl
dec
sub
pop
and
mov
dec
test
imul
xor
in
jns
mov
scas
repnz
inc
sbb
push
mov
and
mov
adc
push
adc
enter
add
dec
push
push
inc
jg
dec
push
decb
mov
fnstcw
pushl
inc
insl
imul
sub
aam
pushf
mov
jb
movsl
sbb
pop
add
inc
jp
or
nop
stc
xchg
mov
jbe
outsl
jne
lret
arpl
decb
xchg
int
cmpsl
xchg
cld
shrb
jp
xor
lock
mov
and
mov
or
daa
pop
adc
jle
mov
out
mov
add
add
jne
rcl
out
rcr
sahf
lods
cmp
fmuls
enter
jo
dec
pop
mov
cltd
bound
inc
sub
es
aas
ret
adc
add
jo
mov
pop
loopne
or
add
stos
jo
iret
ret
mov
mov
clc
inc
out
xchg
outsb
mov
jae
or
ret
xor
mov
loop
std
push
mov
and
aam
pop
sbb
js
stos
adc
into
pop
icebp
dec
mov
add
lcall
scas
aam
mov
add
cli
outsb
mov
and
fs
cmp
sbbb
fwait
lods
cltd
lret
ss
or
push
adc
sbb
lock
mov
adcl
cmc
fmuls
dec
lret
add
movsl
xchg
out
fbstp
adc
and
xor
or
imul
int3
ret
add
mov
cld
aam
scas
loop
push
push
or
test
jns
jb
and
sub
mov
ret
iret
xchg
sbb
and
mov
test
or
ss
int3
xchg
fwait
jge
out
sbb
pop
add
xlat
repnz
lahf
std
sbb
jg
mov
outsl
sbb
notl
lds
push
add
sub
jbe
nop
inc
xchg
lret
lds
or
daa
stos
pop
xlat
pop
sbb
jle
shrb
add
cmpsl
cmp
sahf
pop
fwait
inc
mov
dec
lahf
test
dec
ficompl
push
xchg
or
sahf
mov
inc
or
jecxz
jge
adc
adc
orb
rcl
pop
jbe
jb
jge
inc
add
add
icebp
fstps
push
jmp
mov
jnp
out
sbb
and
sbb
xor
pop
jbe
dec
pushf
lods
stos
add
clc
test
mov
push
clc
jns
xlat
xchg
push
add
lahf
jg
sbb
add
cmp
pop
bound
shll
sbb
jo
mov
arpl
sub
pop
cmp
sub
xor
lahf
out
mov
cwtl
jle
rcll
ret
pop
dec
es
push
xor
repz
jle
xor
dec
lcall
pop
lods
mov
push
cmp
gs
int
sbb
pop
mov
xlat
add
cwtl
and
pop
dec
mov
popa
aas
rolb
mov
xor
jb
aas
fisubrl
leave
lahf
pop
stos
sbb
xchg
adc
push
out
imul
xchg
jbe
fidivrl
lret
xchg
sub
pushf
shll
jno
rclb
jns
aad
push
fs
mov
std
rcll
mov
in
pop
sahf
cld
sub
sbb
fists
cmp
sub
jmp
int3
xchg
cli
cmp
xor
add
daa
jmp
dec
repz
mov
xchg
mov
jbe
ss
jp
lods
imul
mov
repz
stos
es
inc
out
push
xorl
das
enter
roll
mov
xchg
add
mov
mov
cli
jmp
cwtl
ret
inc
mov
dec
addr16
fadd
stc
or
pushf
pop
inc
mov
jbe
adc
fwait
xchg
pop
adc
add
add
mov
lret
movsb
jge
pop
pop
mov
mov
sbb
jno
gs
jle
into
mov
sahf
sub
adc
in
mov
mov
repz
mov
inc
jne
mov
stos
lea
fst
mov
dec
mov
pop
jp
icebp
push
push
test
insl
xchg
mov
jns
je
xor
stc
test
xor
dec
push
dec
bound
mov
sbb
add
pop
inc
xchg
xor
popa
je
lahf
int3
jmp
daa
daa
lcall
cmpl
or
mov
loop
inc
fldenv
lret
or
mov
jbe
pop
out
mov
sbb
jle
outsb
loopne
rolb
push
shr
mov
dec
mov
addb
iret
data16
push
add
sub
bound
and
mov
sub
repz
shl
xor
mov
test
jb
sahf
ret
out
cltd
in
sub
add
inc
sbb
lods
pop
cld
outsl
push
push
popa
sahf
lds
ds
pop
pop
mov
jle
xor
int
movsl
xchg
xor
cld
lret
inc
cmp
jno
push
push
sarl
push
gs
ja
mov
loop,pt
jge
loop
ret
mov
add
add
add
push
cmp
arpl
bound
test
jmp
mov
xchg
lret
mov
gs
cli
lahf
rcrb
ljmp
test
sub
imul
repz
pop
ficompl
jne
fcomi
mov
xor
stos
aam
sarl
cli
cltd
adc
in
loop
jb
adc
pop
dec
inc
xchg
or
bound
ficomps
mov
or
mov
shr
sub
mov
stc
mov
add
xchg
jecxz
and
mov
clc
inc
lea
add
sbb
div
hlt
imul
sbb
arpl
loope
fs
and
lcall
test
daa
scas
ret
push
sarb
add
addr16
vcvtsi2sdl
roll
pop
mov
aad
xor
jp
insb
stos
scas
or
fildll
sbb
sbb
or
inc
aam
fistl
fildll
dec
mull
mov
aad
push
inc
sbb
mov
add
add
mov
je
aaa
scas
xchg
add
jae
bound
shlb
mov
adc
out
jns
pop
mov
inc
pusha
push
fnstenv
jp
inc
addr16
lods
jnp
stos
iret
inc
shll
adc
jge
mov
adc
clc
mov
mov
notb
cmpsl
repnz
mov
aad
fldl
scas
cmp
cmc
push
cmp
push
jg
mulb
cli
inc
scas
jns
inc
pop
add
and
xchg
mov
mov
and
jnp
inc
iret
in
dec
mov
inc
mov
repnz
mov
mov
je
push
xchg
outsl
inc
and
mov
in
aas
enter
testb
sbb
xchg
xor
cmp
push
pop
xor
out
jne
xorl
xor
mov
fnstenv
scas
outsb
shlb
jp
enter
sub
inc
rcr
das
pop
inc
push
adc
push
jne
push
add
lods
out
xchg
jg
fisttps
inc
or
jmp
push
mov
loope
xchg
rcrb
xchg
sbb
push
dec
add
enter
jns
mov
or
addr16
sbb
pop
mov
jnp
and
pop
add
jmp
ret
cwtl
popf
out
sbb
adc
testb
adc
xchg
scas
notl
insb
jns
push
lahf
mov
das
add
push
fisttpl
arpl
mov
pop
sub
jne
cld
mov
pop
mov
or
gs
mov
cmp
nopl
mov
subl
lods
xlat
daa
mov
push
mov
test
mov
roll
push
add
ljmp
icebp
call
std
mov
stos
add
cltd
xchg
out
jmp
add
fwait
cmp
mov
es
popf
int3
es
fists
mov
fldt
lea
jb
shlb
mov
xchg
push
cmp
jecxz
and
push
hlt
add
and
jge
data16
xchg
jb
fistps
xor
leave
subb
in
in
in
and
adc
out
testb
insl
pop
in
stc
inc
inc
loope
lock
xor
roll
add
and
adc
xchg
ja
and
ja
roll
sbb
push
fidivs
jbe
in
int
mov
cmp
gs
loop
je
outsl
sbb
adc
xchg
push
pop
pop
aas
test
jmp
push
leave
or
in
loope
rorb
cmpsb
sbb
add
mov
inc
jmp
adc
inc
cmpsb
ljmp
add
add
xor
push
fsubs
adc
sub
cmp
add
add
dec
popf
cmp
sub
cmp
fxch
adcb
movb
aas
stos
int
jl
outsl
mov
movsb
mov
dec
add
jecxz
inc
mov
pop
out
jg
adc
pop
cli
es
dec
adc
call
inc
mov
bnd
push
mov
int
add
and
add
aam
in
sbb
mov
mov
les
fisubrl
ja
inc
sub
xlat
leave
fadds
roll
aam
loopne
aad
ja
pop
mov
cs
inc
cmp
xlat
repz
cs
test
inc
sbb
scas
cmc
add
sub
aas
ss
js
mov
insl
lods
stos
stos
sbb
cmp
mov
push
pop
bound
cltd
mov
pop
dec
lcall
jmp
fmuls
add
add
out
outsb
loopne
sti
and
cmp
repz
or
dec
xchg
xor
xchg
cmc
cs
dec
xor
call
in
outsl
aam
bound
or
cmp
hlt
mov
fstps
cld
xchg
pop
dec
mov
mov
xchg
jbe
mov
arpl
xor
push
add
popf
cmp
jecxz
cmpsl
clc
mov
ja
clc
push
mov
jl
dec
ljmp
add
add
mov
xor
sub
fadds
ss
addr16
sarb
sbb
dec
sbb
hlt
sahf
push
or
negb
int3
int3
subb
loopne
or
xlat
pop
cwtl
and
aam
je
into
pop
xor
and
cmpsl
push
push
sarl
mov
jmp
outsl
jns
cmpsl
aad
dec
pop
mov
scas
cmpsl
enter
ja
cld
xlat
mov
loopne
out
pop
lea
adc
std
push
ficoms
push
push
inc
aas
pop
pop
jl
dec
pop
xchg
repnz
idivl
scas
xchg
call
loopne
xchg
cmp
sbb
inc
es
mov
cltd
ror
repz
mov
dec
les
jg
shrl
pop
lock
imulb
fs
dec
jne
push
jno
add
daa
cli
mov
das
xchg
sahf
push
movsb
push
push
xor
inc
adc
jmp
inc
sbb
andb
adc
lahf
jmp
pop
pop
jge
int3
push
imul
add
in
or
and
pop
cmp
aad
test
notb
dec
xchg
cmpsl
ret
cmpl
jb
mov
xor
es
cld
in
push
push
dec
dec
insb
cmp
fstp
sbb
add
outsl
cmp
test
sub
add
mov
ss
or
hlt
push
adc
inc
xor
push
cli
push
js
or
jnp
mov
mov
cmp
jp
cmp
lods
lret
mov
repnz
int3
pop
pop
cs
cwtl
fimuls
lock
mov
inc
cmpsb
push
xchg
imul
sar
xchg
jne
mov
push
xchg
mov
pushf
add
adc
fwait
out
cmc
xchg
test
jg
jecxz
jmp
jae
adc
or
cld
hlt
jno
sbb
sbbb
add
outsl
scas
pop
jmp
in
scas
xchg
mov
jae
daa
addr16
sarl
hlt
jnp
ds
repz
aam
mov
push
xor
hlt
pop
dec
stc
cld
cli
push
shlb
call
xchg
cwtl
ljmp
add
mov
lods
icebp
push
loope
add
or
pop
jp
pop
andnps
and
push
imul
icebp
mov
xlat
repnz
sbb
fstpl
dec
mov
cs
repnz
or
test
adc
fwait
popa
mov
push
mull
jg
mov
in
in
mov
adc
imul
add
add
cmp
ja
fidivrl
mov
in
aaa
imul
sbb
cmp
sti
adc
sub
dec
insb
lea
cmpsl
cmp
jle
outsb
dec
sti
pop
jge
jae
add
push
mov
into
pusha
jns
mov
shlb
ficoml
mov
mov
cltd
push
cmp
pop
leave
and
cmp
mov
out
test
aaa
mov
fidivrl
mov
push
out
add
add
push
xchg
jmp
lock
ljmp
dec
lcall
adc
inc
cmp
add
push
std
insl
pop
mov
popa
aad
loopne
scas
inc
jmp
inc
sahf
mov
dec
push
fdivrs
jno
push
insb
cmc
cmp
pop
push
cmpsb
xorb
xlat
pop
imulb
sbb
fcomps
insb
add
inc
push
xchg
enter
inc
cwtl
mov
imul
xor
popa
cltd
mov
add
push
jnp
jb
mov
pop
push
pop
push
lds
les
ds
imul
mov
sti
stos
rcl
repz
outsl
inc
xor
sub
adc
or
inc
dec
out
loop
sub
adc
xor
sbb
push
mov
inc
mov
std
das
dec
push
dec
fbstp
out
inc
jb
push
mov
pusha
xchg
into
sbb
cwtl
aam
out
insb
clc
fs
push
xchg
cmp
add
add
lods
dec
jae
fisttpl
dec
js
push
cs
int
mov
fdiv
js
jo
xchg
mov
int
cmpsl
jb
adcl
push
mov
scas
push
push
cmp
in
cmp
pushf
lahf
sub
xor
std
bound
xchg
lret
repz
ret
mov
inc
jns
cmp
imul
adc
jo
lret
sub
stos
adcl
mov
inc
imul
add
add
xor
jbe
dec
cltd
out
mov
push
test
cmp
add
push
xor
testb
cmp
jno
push
sbb
imul
test
lret
cmp
lahf
fnstcw
mov
add
add
mov
fistps
mov
ds
xor
test
jecxz
shl
push
sbb
cmc
movsb
xor
mov
adc
cmpsb
fmul
adc
sbb
out
cmc
addl
sbb
int3
mov
mov
xchg
and
jns
or
ss
call
je
lret
adc
hlt
fisttpl
dec
ljmp
push
inc
iret
stos
dec
mov
mov
mov
inc
dec
testl
fst
adc
adc
repnz
ja
jge
inc
pop
mov
xor
mov
adc
sbb
call
jo
mov
rclb
roll
add
add
pop
shll
xor
outsb
fbstp
mov
ljmp
movsb
cli
sub
mov
addl
inc
xchg
inc
cwtl
sbb
dec
ud2
addr16
stos
mov
outsl
aam
mov
ja
xor
mov
insb
mov
lds
out
mov
fcomps
in
dec
pop
pop
call
and
iret
jle
inc
xchg
push
add
ret
lods
cli
les
jge
jmp
xor
jle
or
cvttps2pi
mov
sub
rorb
inc
jg
xor
dec
jecxz
xchg
testl
cmpsl
adcb
sbb
push
les
arpl
lret
jl
cmp
adc
cmp
pop
fs
icebp
fists
cmpsb
jmp
dec
pop
push
aam
mov
movsl
and
lds
add
in
add
out
pop
test
rorb
and
pop
shll
jp
mov
mov
ret
mov
push
loopne
leave
gs
xlat
lods
inc
mov
xor
in
ljmp
push
repz
lock
sub
ret
mov
push
std
push
mov
bsf
loopne
fists
scas
mov
jbe
imul
in
mov
and
add
add
pop
mov
xor
mov
sti
mov
outsb
rorb
push
adc
xor
mov
stos
pop
insl
jmp
mov
ljmp
mov
sbb
std
stos
inc
add
lret
out
push
retw
xor
stos
cld
jo
pop
or
psrlw
mov
sub
inc
add
xchg
xchg
jns
ja
mov
je
loope
inc
xchg
mov
addl
cmpsb
imul
sbb
mov
add
adc
or
sbb
hlt
jns
and
pop
or
dec
jo
jl
mov
subl
adc
lds
dec
xchg
mov
mov
push
sbb
mov
aam
out
das
pop
cltd
and
cmpsb
xlat
aas
pop
mov
mov
sbb
subl
cmp
inc
xchg
push
in
scas
add
pusha
rolb
add
ss
test
jl
stos
lret
push
out
stos
repnz
call
stos
jns
jge
int
shlb
cwtl
jno
push
sub
in
jnp
or
cltd
push
mov
adc
cmpsb
mov
rclb
subb
adc
daa
vmovapd
out
mov
pop
imul
repnz
add
pop
cli
lea
inc
dec
push
test
outsb
pop
add
add
xchg
push
xchg
lods
dec
jle
mov
test
shll
jl
int
lcall
jge
loop
push
ret
mov
movsb
add
mov
cltd
inc
jle
jp
loopne
mov
mov
push
adc
dec
xor
ja
flds
xor
jp
and
jmp
xchg
push
outsb
mov
and
arpl
cs
inc
in
mov
jne
sbb
sub
jmp
mov
pop
shll
pop
in
aas
add
iret
subb
dec
pop
int
jb
arpl
test
add
outsb
mov
insb
sub
js
pushf
frstors
jle
or
or
in
dec
push
sti
pop
sahf
fstpt
ficompl
sbb
mov
sbb
add
mov
push
test
add
das
addr16
jecxz
out
adc
lock
mov
push
mov
mov
and
jbe
sbb
in
inc
push
nop
cmpl
lcall
sbb
mov
mov
rclb
popa
pusha
add
stos
mov
pop
bound
scas
jns
aam
sub
inc
and
cmpsb
js
mov
popf
lea
ficompl
and
pop
lods
lret
ljmp
xchg
aad
pop
lods
add
inc
mov
shlb
mov
lods
mov
imul
lretw
imul
add
sarl
bound
xchg
sbb
mov
sub
xchg
push
add
adc
xchg
repnz
in
cmp
push
dec
inc
int3
sub
sub
scas
dec
sbb
push
cs
push
test
add
mov
std
push
adc
cmpsl
jno
popf
fdiv
cmp
sbb
jmp
outsl
dec
add
mov
xor
test
cmp
ss
cli
push
push
mov
movsl
jp
idivb
push
popa
jnp
mov
pop
ret
pop
mov
lea
dec
in
jno
cld
frstor
and
test
stos
adc
aam
sbb
fwait
call
pop
sbb
adc
stos
sbb
dec
aaa
mov
add
cmp
adc
js
cs
dec
jbe
shll
xchg
xor
stos
jno
jnp
outsl
icebp
clc
jns
adcl
adc
and
jle
out
inc
data16
jnp
push
fimuls
hlt
js
jne
adc
mov
sub
lahf
aad
mov
je
lahf
pushf
scas
jae
mov
fmul
pop
fstpl
movsl
cmpsl
orb
pop
jbe
sub
pop
push
pop
adc
inc
add
