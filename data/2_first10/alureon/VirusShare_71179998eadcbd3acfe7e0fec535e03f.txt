lcall
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
xor
or
dec
adc
add
or
jo
or
xchg
or
pushf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
push
adc
add
or
mov
or
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
xor
or
dec
adc
add
or
outsb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
push
adc
add
or
jo
or
adcl
pushf
adc
add
adc
add
adc
add
adc
add
adc
or
daa
adc
or
dec
adc
or
jo
or
adcl
add
adc
or
hlt
adc
or
sbb
or
xor
or
inc
push
or
push
push
or
arpl
or
jge
or
mov
or
mov
push
or
ret
add
push
or
notb
or
or
or
pop
pop
or
das
pop
or
inc
pop
or
fs
or
jle
or
mov
or
fwait
pop
or
mov
or
rcll
or
in
or
lock
or
or
or
pop
sbb
add
sbb
add
sbb
add
or
pop
sbb
add
or
mov
or
pushf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
pop
sbb
add
or
jge
or
mov
or
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
or
arpl
or
jne
or
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
cmp
or
push
sbb
add
or
jno
or
jl
or
xchg
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
pop
sbb
add
or
sbbl
add
sbb
add
sbb
add
sbb
add
sbb
add
or
sub
sbb
or
pusha
sbb
or
lea
or
mov
sbb
or
ljmp
add
push
or
sub
or
aas
push
or
push
push
or
fs
or
je
or
mov
or
mov
push
or
mov
push
or
pusha
add
out
cmc
xchg
cwtl
xchg
mov
mov
xchg
insb
mov
push
in
in
mov
sub
arpl
test
inc
mul
xchg
mov
pop
addr16
fldt
xlat
in
sbb
pop
dec
or
sbb
outsb
mov
and
pushf
data16
prefetch
mov
movsb
jg
xor
mov
pop
aad
xor
ret
add
loop,pt
js
push
clc
js
sbb
in
mov
insb
xlat
testl
test
rcll
push
adc
hlt
test
mov
daa
lock
mull
pop
fwait
repnz
mov
inc
add
mov
cmpsl
movl
xchg
mov
cmpsl
jg
cmp
push
popa
lock
xchg
push
dec
adc
jae
mov
xchg
loopne
loope
dec
cmpsl
stos
orl
xchg
faddl
dec
cltd
cmp
jo
mov
add
dec
aad
xor
lret
inc
and
popa
jne
imul
fs
pop
into
cmp
stos
movsl
stos
pop
pushf
jmp
inc
test
or
push
adc
and
jno
iret
les
movsl
add
sbb
mov
xor
or
loop
repnz
dec
sub
push
xor
mov
loopne
or
inc
push
pop
ss
pop
lcall
jg
sbb
sbb
sbb
push
sub
enter
cmc
cmpl
jmp
in
scas
lret
mov
out
lea
ja
cmc
dec
iret
imul
gs
jo
lret
jo
icebp
or
sahf
jp
es
das
push
add
mov
movsb
sub
xor
cld
or
movsb
lods
xor
inc
sbb
fs
cmp
jnp
ljmp
imul
loopne
pop
pop
nop
push
push
data16
mov
adc
insb
pusha
fwait
mov
call
fstpl
push
xchg
insl
inc
xchg
gs
fldenv
loop
ret
sbb
out
and
mov
fcoms
shlb
icebp
jo
mov
xor
das
std
push
inc
faddl
stos
outsl
mov
mov
cld
adc
jns
pushf
add
push
xchg
add
frstor
stc
pop
testl
xchg
mov
push
sbb
mov
mov
fnsave
and
push
mov
or
and
mov
adc
mov
arpl
int
push
push
cmp
and
in
dec
in
push
push
ja
and
cmp
cli
mov
sub
cltd
push
push
mov
aas
shlb
xchg
pop
xchg
fsubrl
arpl
test
mov
insl
lret
pop
push
nop
outsb
shrl
ffree
cmp
test
mov
mov
mov
and
push
pushf
sar
mov
sbb
fdivrl
movsb
call
shlb
add
push
and
mov
sahf
test
or
jmp
out
shr
aas
insl
add
xor
mov
je
aam
jle
movsb
jg
mov
xchg
mov
or
outsl
shrl
stc
pop
fildl
cmpl
ficoml
and
loopne
push
pop
insl
lods
lods
andl
loope
cltd
popa
push
inc
test
flds
pushf
xchg
inc
popf
or
push
insb
cld
sbb
cmp
popa
addr16
hlt
and
sti
jp
adcl
repz
mov
pop
push
aad
addb
dec
jns
mov
mov
push
fldt
mov
repnz
jno
iret
bsf
insb
ljmp
mov
jle
or
cmp
int
and
pop
sbb
mov
mov
es
cmpsb
xchg
xor
sarl
popf
loopne
inc
into
push
shll
inc
dec
dec
xchg
out
jg
sbb
inc
push
insb
int
add
jne
icebp
push
cmp
inc
dec
ret
jle
lods
fsubs
push
mov
fstl
cmpsb
sbb
loop
mov
cli
lcall
sbb
or
lahf
pop
lret
int
mov
data16
mov
push
pop
lea
mov
push
lret
sub
cltd
bound
lahf
pop
out
add
test
stc
sahf
inc
int
out
xchg
cmp
sub
leave
sub
cmp
outsb
out
stc
sbb
sti
lods
push
push
pushl
ljmp
daa
adc
sti
mov
movsl
je
xor
ja
ja
aam
mov
xchg
xchg
hlt
gs
movsb
jl
and
add
and
cld
sub
out
inc
cld
and
sbbb
adc
dec
test
scas
mov
cmp
adc
mov
sbbb
shll
xchg
out
xchg
push
sbb
xchg
cmpsl
xor
dec
pusha
hlt
sbb
stos
xor
js
jle
mov
popf
loopne
fdiv
mov
outsb
jns
repnz
cmp
aam
jbe
aaa
hlt
in
jle
iret
or
repnz
jmp
mov
jmp
push
lcall
aad
mov
and
and
lea
lret
push
and
xchg
pop
dec
push
push
push
mov
push
jns
das
ficoml
cmp
push
mov
enter
add
jg
aas
inc
inc
dec
push
inc
and
cld
sub
push
adc
mov
repz
adc
jecxz
xor
mov
in
mov
test
divl
jbe
pop
repz
adc
push
xlat
push
and
sahf
std
jle
cmp
daa
icebp
daa
js
sbb
inc
sbb
add
adc
movsb
loopne
xchg
js
mov
sbb
and
and
test
arpl
sahf
dec
test
gs
cmp
and
lds
out
mov
or
cmp
mov
jp
lcall
inc
in
das
stos
test
push
test
icebp
popf
rcl
mov
test
jecxz
sahf
test
movsb
into
xchg
xor
push
jecxz
aas
sbb
daa
adc
out
add
cs
jecxz
mov
adc
ret
arpl
push
scas
mov
sub
and
xchg
jmp
in
scas
stc
repz
lds
mov
push
push
mov
mov
pop
shrl
sbbl
cmp
ror
pushf
xor
mov
test
adc
inc
dec
les
rcll
rolb
xchg
xchg
xchg
loope
das
hlt
popf
jae
test
test
outsb
cmpsl
pop
inc
sahf
aad
add
lahf
mov
inc
inc
mov
sahf
jmp
push
sbb
in
int
loopne
cwtl
mov
mov
and
adc
dec
dec
and
sbb
inc
add
aad
mov
fwait
mov
mov
addb
lods
mov
or
sbb
pop
mov
std
sti
ds
push
push
mov
sbb
xor
and
xor
pop
mov
das
push
ljmp
aas
rep
lds
pop
mov
inc
mov
mov
movsl
push
test
cmp
int
pop
cmpsb
popa
jecxz
pop
mov
fldt
imul
jg
sbb
push
rclb
inc
jg
mov
mov
outsl
leave
cmp
in
inc
mov
loope
out
dec
or
shrl
xchg
out
inc
mov
stc
insb
rol
sbb
je
cli
incl
adc
xor
testl
insb
mov
xchg
les
mov
mov
repz
inc
hlt
and
in
cli
dec
mov
hlt
repz
es
js
aas
add
push
mov
sarb
pop
sahf
mov
jo
sub
lods
out
jle
mov
pusha
sahf
out
ret
and
subl
push
cmp
cld
loopne
xchg
out
leave
xor
mov
dec
mov
fwait
push
jl
mov
lret
xor
icebp
pop
les
xor
popf
pusha
ror
xchg
out
loopne
add
leave
lods
pop
stc
movsl
ret
pop
mov
ljmp
rclb
dec
cld
nop
and
sub
js
insl
xchg
shlb
xor
cmp
out
cltd
jecxz
faddl
inc
push
repnz
shlb
push
or
and
fdivl
push
ss
movb
scas
repnz
std
outsb
int
pop
les
data16
jnp
sarb
sbb
or
inc
lods
pushf
and
and
mov
data16
rolb
pop
push
fistl
hlt
xchg
inc
gs
xor
divl
cmpxchg
sub
or
mov
sbb
lds
rclb
outsb
add
mov
push
pop
scas
pop
xchg
dec
ret
pop
decl
or
aaa
andl
jnp
in
je
sbb
and
loopne
repz
fxch
dec
push
push
lods
imul
fmulp
lea
in
imul
test
outsb
enter
pop
sbb
jl
or
outsb
lock
movsl
call
xlat
push
shrl
fscale
jecxz
adc
cltd
jo
loope
inc
cmc
movsb
push
push
add
lcall
inc
or
mov
sti
addr16
ret
clc
stos
dec
mov
test
loop
sub
pop
pop
pop
pop
pop
push
out
adc
cmp
xorw
xchg
mov
or
in
inc
loop
test
repnz
iret
and
mov
into
inc
mov
mov
xor
fnsave
and
adc
pop
and
cmc
and
lea
ljmp
push
xchg
icebp
sti
js
xlat
stos
fidivl
inc
cs
lods
pop
push
or
daa
mov
mov
push
fiaddl
sbb
dec
cmp
mov
pushw
jmp
or
in
sbb
popa
push
jg
rcrl
push
nop
int3
shrb
je
push
call
scas
notb
pusha
pop
lea
xor
or
jb
movsl
or
xchg
sarb
repnz
in
addb
dec
cmp
jle
mov
pop
pop
cmp
xchg
ficoms
ret
xor
mov
jo
dec
push
fcmovu
cmp
mov
sbb
and
call
mov
add
mov
call
dec
mov
sbb
inc
test
icebp
push
or
pop
mov
mov
jecxz
int3
nop
std
mov
cmc
fimuls
loopne
in
pop
aad
jl
mov
jnp
cmp
je
dec
sbb
jo
shl
mov
push
das
xchg
add
mov
jo
cmpsl
cmpl
mov
aad
out
stc
in
and
mov
adc
sub
add
shl
addr16
jae
push
adc
gs
lahf
mov
cltd
dec
xor
sub
pop
fbld
inc
dec
outsb
cmp
ja
mov
push
fnsave
enter
jbe
sbb
outsb
inc
or
xchg
jne
pop
inc
popa
enter
and
lods
enter
mov
push
ja
push
push
call
cmpsb
les
or
dec
incb
inc
cs
ja
sbb
insl
dec
stos
sub
out
roll
sbb
dec
stos
sahf
loope
std
sub
setp
jl
sbb
movsl
decl
dec
shr
jg
stc
cwtl
sub
inc
negl
outsb
xchg
decl
add
ror
jp
loopne
inc
push
into
xchg
in
repz
in
inc
push
ss
ror
nop
dec
and
aas
test
popf
lock
xor
ljmp
xor
cli
cld
in
insb
xchg
fisubs
pop
push
jnp
movl
rolb
sub
stos
ds
flds
or
adc
or
lcall
lret
mov
and
sbb
call
loopne
and
cltd
dec
jge
jecxz
aas
loopne
pop
push
inc
jle
dec
xchg
rcrb
pop
adc
sub
pop
jne
inc
hlt
movsb
mov
mov
xor
das
xchg
mov
push
jle
mov
push
in
pop
aam
inc
testb
std
and
mov
cmpl
xlat
xor
aas
pop
cmp
enter
adc
jb
or
scas
jo
stos
mov
adc
mov
dec
pop
gs
pop
call
mov
dec
jp
es
in
popf
sub
loop
outsl
pusha
js
sub
clc
daa
jno
in
adc
nop
dec
addr16
mull
push
mov
xchg
aas
sub
mov
mov
arpl
jae
sbb
daa
es
mov
je
and
jbe
mov
dec
and
push
leave
cmp
in
jl
rol
jmp
add
cli
into
push
xor
sbb
or
test
hlt
stos
es
popf
jle
mov
add
mov
adc
dec
xchg
movsb
test
mov
testb
cwtl
shrb
mov
fidivl
pand
mov
adc
es
sub
pop
lret
push
das
push
stos
iret
es
in
xor
jle
ja
mov
dec
and
jne
xor
int3
outsl
je
pop
inc
das
or
inc
shl
jmp
shrl
jns
mov
jne
jo
lods
in
pop
add
xchg
test
test
xor
mulb
lods
mov
mov
cmp
sub
mov
mov
mov
sub
xlat
add
loop
imul
hlt
popf
ljmp
jne
xchg
cvttps2pi
in
loop
in
aam
cmp
popl
push
push
push
in
mov
je
jnp
xchg
dec
orl
push
fucom
sub
and
dec
xchg
mov
ss
push
xchg
fcmovnu
mov
mov
jne
stc
int3
lods
es
outsl
icebp
sbb
scas
fildll
mov
mov
popf
aam
jne
push
pop
je
dec
pop
outsb
loop
sbb
lret
dec
adc
dec
hlt
popf
xlat
lret
addr16
mov
jno
pop
movsl
cmp
popf
js
sub
mov
lds
mov
in
mov
ja
cmp
gs
cmpsb
xor
out
sbb
sahf
or
repnz
xor
dec
icebp
sbb
dec
cs
sub
mov
scas
pop
mov
dec
mov
and
sub
pop
jecxz
adc
or
scas
repz
je
or
push
outsl
rcrb
mov
mov
push
fucomp
jne
call
or
cwtl
or
loope
nop
xchg
loop
test
push
inc
dec
shrb
out
dec
jmp
fnstenv
and
xorl
aas
addr16
mov
lods
cmp
xor
frstor
xor
jl
adc
adc
fucom
push
ss
ds
shr
fwait
add
gs
xor
sbb
cmp
rcll
daa
dec
bound
or
leave
mov
sub
out
add
xorl
ror
mov
xchg
aaa
mov
xor
sub
call
jb
aad
dec
in
lods
aam
and
xchg
adc
pop
dec
mov
dec
mov
mov
shr
in
cmp
mov
push
cld
in
sbb
sub
outsl
imul
xchg
or
in
or
push
xor
jmp
je
scas
xor
pop
sbb
xlat
cmp
xchg
lret
cld
xchg
popa
in
adc
sbb
sti
sbb
adc
insl
loopne
or
mov
andb
pop
mov
jns
jne
or
imul
shlb
pop
add
mov
inc
push
jecxz
out
pop
je
mov
sbb
dec
jo
pop
outsb
or
fdivr
shrb
dec
dec
add
ljmp
and
or
sub
cwtl
push
dec
pusha
push
jge
xor
data16
mov
push
push
movsl
push
sub
fsubrp
cwtl
and
fdivs
mov
inc
add
ret
rclb
push
pop
les
cmp
in
cmp
in
call
sbb
or
mov
ret
mov
ret
sbbl
test
pop
jge
int3
popa
repz
push
out
pop
outsl
adc
icebp
pop
cli
jns
push
push
mov
cltd
gs
aaa
fists
cltd
adcb
dec
pop
xor
push
in
jle
mov
dec
xchg
pop
idivl
dec
add
pop
and
fsubrl
push
movsl
xor
hlt
loope
sbb
in
cmp
adc
cmp
jmp
lret
movsl
xchg
inc
gs
pop
incb
cmp
mov
push
sbb
idiv
adc
cmc
jno
pop
sbb
sbb
lods
push
fsubl
loopne
push
inc
dec
out
sahf
shll
test
inc
dec
sub
pop
cmp
enter
cmp
pushf
lret
lods
mov
jne
loope
in
xchg
xchg
sbb
dec
mov
or
xchg
out
test
mov
je
lds
xor
cmp
push
pusha
pop
pushf
out
jo
ds
icebp
and
jl
dec
into
inc
xor
push
and
and
xchg
mov
pop
push
cwtl
sbb
cld
cmp
flds
repz
test
jo
xchg
adc
aam
dec
dec
pop
or
aad
test
dec
cmp
iret
cli
sbb
mov
pushf
sub
test
xchg
out
jb
jge
dec
jne
test
int
or
mov
and
pop
dec
push
mov
mov
mov
ljmp
mov
pop
cli
xchg
in
xchg
dec
add
enter
mov
ret
or
in
cld
dec
jmp
dec
fstpl
icebp
lret
adcl
cmpxchg
or
xchg
fistpll
pop
test
loope
inc
mov
adc
lret
ret
out
mov
not
pop
and
push
adc
cmp
jb
mov
inc
aad
sbb
sti
cmp
movb
add
imul
mov
pop
dec
lea
fcmove
in
mov
icebp
pusha
add
or
push
cmp
into
or
push
inc
sbb
inc
push
add
add
and
hlt
imul
lock
sbb
out
and
in
push
pop
push
lret
iret
std
dec
rorb
push
and
test
inc
sbb
out
arpl
inc
jp
movsb
xchg
jg
mov
hlt
adc
or
add
fstpl
pop
arpl
dec
dec
lret
sbb
mov
dec
mov
mov
gs
scas
sub
gs
xor
pop
xor
jns
jl
aas
sbb
psllq
loopne
stos
add
aad
ja
sub
bound
and
mov
cld
xor
bound
or
mov
xchg
inc
aas
nop
add
pusha
jmp
call
fists
iret
inc
test
sub
mov
rcrb
leavew
inc
mov
in
sbb
addr16
cmp
sub
jp
arpl
jl
imul
sbb
jmp
jmp
jb
out
mov
nop
enter
das
pusha
or
jle
or
lods
sub
cwtl
std
imul
xchg
lret
insl
fcmovbe
sub
jo
scas
lahf
test
fdivrp
pop
shrl
adc
cli
dec
into
xchg
push
xchg
js
dec
mov
cwtl
or
cmp
sbb
stos
fimull
xchg
inc
jae
lods
cwtl
push
jo
sbb
ret
push
mov
lea
inc
mov
sub
ss
sbb
mov
testl
fsubs
inc
xchg
sub
out
xchg
mov
pop
loope
outsl
shr
xor
cmp
dec
ja
push
stos
and
hlt
push
push
push
fdivrs
lcall
inc
aaa
and
loop
clc
add
out
or
cmp
bound
data16
adc
mov
pop
popf
subl
mov
pop
dec
rcrl
mov
out
daa
shrw
cld
enter
add
dec
sub
or
mov
ret
call
lret
inc
lret
mov
lcall
and
push
dec
sbb
in
push
je
inc
jp
in
es
dec
sbb
mov
out
cmp
dec
xor
lods
cmp
scas
push
mov
dec
sbbl
adc
insb
loop
mov
movups
lret
jp
lret
bound
or
cli
stos
fsts
aad
mov
mov
into
sarb
sub
cs
cmp
inc
cmpsl
lahf
std
nop
arpl
ss
and
inc
xor
pop
fcmovb
cs
out
testb
mov
inc
mov
ja
push
ja
cld
sbb
pushf
adc
mov
pushf
push
and
shlb
push
das
inc
add
out
test
and
pop
jbe
int
cmp
rorb
repnz
lds
scas
cmpsl
into
lea
cmp
xchg
addr16
dec
inc
in
sub
sub
in
lods
xlat
mov
push
pop
jbe
imul
mov
push
and
inc
sbb
mov
pop
jnp
jge
loopne
jns
fnstcw
in
shll
mov
adc
fwait
mov
clc
dec
pop
xorb
cmc
sbb
test
repz
push
add
inc
adc
in
out
test
repnz
or
sti
xorl
mov
into
stos
es
subl
jg
pusha
push
pop
mov
stc
out
pop
mov
add
test
filds
out
inc
out
and
scas
push
sub
loope
outsl
in
lock
test
xor
and
jecxz
adc
scas
push
mov
decb
imul
jnp
pop
into
inc
or
mov
mov
div
cmpsb
mov
xorl
sub
push
push
test
es
daa
and
outsl
mov
or
pop
mov
mov
cs
loop
lock
cmp
hlt
inc
std
mov
test
jle
out
dec
jo
pop
adc
ljmp
outsl
mov
jle
ljmp
repnz
mov
xor
pop
dec
jmp
sbb
call
int3
test
xor
arpl
mov
gs
push
inc
adc
fmull
scas
jmp
data16
das
leave
movsb
mov
ljmp
mov
sub
xor
sarl
rcl
cmp
pop
scas
mov
shl
sbb
aas
xor
adc
mov
lcall
jp
inc
mov
jb
orl
repz
movsl
out
mov
adc
mov
xchg
cltd
jge
hlt
push
fwait
or
imul
push
imul
iret
incb
inc
mov
or
jmp
icebp
addl
aaa
inc
push
jo
mov
sbb
insb
cmp
std
xchg
lea
lret
shll
mov
ret
push
pop
mov
dec
mov
pop
pop
or
sbb
nop
sub
leave
aas
stc
sub
cwtl
mov
shl
jp
or
js
in
shrb
or
loopne
xor
js
aam
cmpsl
mov
mov
jmp
add
fsubl
mov
add
jg
xor
test
movsb
push
add
bound
mov
add
mov
popl
cmp
mov
jp
sub
das
scas
cs
adc
mov
into
sti
adc
ret
xor
sub
aad
subl
xchg
imul
movsb
jae
mov
jb
nop
sub
std
out
in
push
lods
push
mov
lahf
xor
rol
cld
fsts
mov
mov
in
movsl
ljmp
and
push
clc
iret
sti
mov
inc
cs
out
or
pusha
divb
or
sub
out
outsl
in
int
mov
mov
add
int
fists
movsl
out
jns
inc
lods
xor
mov
mov
sbbl
stos
pop
fisubrl
and
ficompl
pop
pop
sub
aaa
xchg
jg
inc
pushf
jbe
lret
ds
sbb
mov
cld
cli
mov
and
mov
out
push
jbe
jo
ljmp
iret
cwtl
push
icebp
push
xor
pop
in
or
mov
cwtl
mov
mov
dec
mov
sub
xor
fidivrl
cld
jp
jmp
mov
andb
push
icebp
das
lock
adc
adc
or
jg
and
inc
rcrl
outsl
dec
dec
add
xor
out
push
or
out
pop
test
xchg
mov
inc
test
add
jno
popf
mov
pop
add
cmp
test
ljmp
sub
jecxz
jmp
jbe
out
js
hlt
cmpsb
push
dec
adc
adc
dec
call
ljmp
nop
cmp
pushf
push
jmp
cli
inc
add
fisttps
jae
std
nop
bound
rclb
jmp
jnp
add
jnp
clc
outsl
insb
cld
or
sarb
in
fdivrs
cmp
roll
ret
mov
xchg
movsb
mov
rorb
aas
xchg
std
sub
nop
mov
rorl
into
stos
stos
mov
adc
sbb
push
scas
pop
in
cmc
enter
sti
pop
xor
mov
jnp
in
mov
inc
adc
fiadds
loopne
xor
push
inc
fldl
add
cmp
sbb
shlb
mov
int
fld1
ljmp
adcl
ja
into
fmul
sahf
jmp
xchg
iret
inc
outsl
jecxz
lret
push
dec
das
in
mov
in
adc
jo
xchg
ret
sarl
negb
aaa
dec
outsb
pop
xor
push
repnz
jl
lret
add
adc
or
arpl
add
js
sbb
bound
ficoms
or
pop
mov
mov
aam
lea
pop
inc
sbbb
mov
pop
mov
dec
inc
mov
jecxz
mov
mov
jno
inc
jne
idivb
aas
nop
into
outsb
nop
push
pop
cltd
lahf
sar
mov
mov
std
adc
add
std
pop
aaa
jae
mov
aam
cmp
mov
inc
cwtl
mov
push
cmpsb
loope
sbbl
push
lret
int
fwait
push
fcoms
sbb
lock
mov
and
xor
sub
push
aad
or
data16
pop
bound
out
cmc
cmpb
xor
mov
das
inc
sahf
cmp
out
push
fistpl
imul
lods
mov
rorl
dec
mov
add
mov
sub
inc
sbb
and
lret
repnz
push
sub
dec
int
xor
xchg
shl
and
jbe
ror
jns
sbb
shlb
adc
in
jg
sbb
repz
cmp
fstps
rcll
adc
push
xchg
cmpsb
mov
bound
js
pushf
test
pop
sub
mov
dec
cmp
jmp
mov
pop
test
xor
and
ficoms
xor
pop
lock
dec
lods
sub
mov
popf
push
fs
gs
mov
test
popa
inc
out
mov
ja
pop
outsb
nop
cmc
shll
fdivs
or
inc
lcall
cmp
xchg
adc
in
unpckhps
adc
jp
xor
xor
pusha
lea
dec
mov
inc
gs
xor
in
ja
scas
mov
cmc
sub
lret
mov
test
cmpsl
cmpsb
test
sbb
out
cmp
js
or
jp
scas
or
xorl
xor
test
fildl
sti
push
jmp
mov
nop
aad
xlat
xor
push
sub
inc
rolb
jno
shrb
lds
cmp
jns
addb
or
pop
pushf
cmp
dec
arpl
lar
enter
outsl
aad
mov
es
xor
stos
pop
pop
cmp
xor
xorl
pop
rcrl
mov
lret
mov
add
test
cmc
iret
out
cwtl
flds
or
ja
les
cs
push
cmc
xchg
inc
std
fs
cmp
pop
jmp
stc
cltd
push
ret
icebp
popa
cs
cld
cmpsb
sub
idivl
sub
xchg
mov
jae
inc
mov
and
aaa
mov
pop
mov
insb
add
ror
sarb
jnp
xchg
jno
loopne
xor
and
pop
add
repz
scas
cs
xchg
xor
push
clc
insl
jge
pop
jnp
imul
mov
cmp
lret
stos
jmp
jmp
or
pop
std
xor
in
mov
shl
push
xchg
scas
insl
pop
arpl
aad
xor
or
xchg
cmp
adc
bound
test
mov
rol
add
scas
rclb
lea
outsl
xor
or
jg
and
shll
cmp
jne
sbb
mov
inc
mov
push
testb
lcall
mov
ss
xor
mov
push
dec
add
dec
and
ljmp
or
mov
ret
imul
in
stos
mov
cmp
orl
daa
adc
insl
cld
dec
fwait
xor
mov
int3
or
bound
cmp
xor
jle
push
jge
mov
cmp
je
out
loopne
hlt
ljmp
fldenv
mov
pop
mov
lods
out
sub
jp
adc
sbb
loope
and
aaa
xchg
inc
dec
scas
int3
cmp
cmp
or
mov
and
dec
out
inc
outsb
and
add
pop
pop
adc
call
pop
icebp
and
jmp
pop
push
int
add
test
cmp
test
push
mov
dec
push
push
in
nop
inc
icebp
cmp
scas
jmp
push
test
sbb
mov
fnstsw
mov
xchg
jmp
stos
into
add
jp
xor
shr
pop
sti
xchg
mov
lahf
adc
cwtl
ret
mov
shr
mov
xchg
jl
cli
test
repz
inc
ret
xchg
inc
icebp
mov
daa
add
inc
xor
xchg
add
xor
dec
lea
inc
mov
dec
std
fwait
lods
mov
loope
sti
and
int
xlat
jo
insl
cmp
pop
xchg
aad
repz
stos
in
pusha
out
popa
das
push
mov
mov
rcrb
and
jge
es
pop
add
pop
shll
mov
push
add
adc
std
pop
cmpl
xchg
jp
xchg
inc
cmc
dec
icebp
jg
flds
add
push
sbb
aam
push
in
pop
dec
mov
cmpsb
repz
test
gs
lock
daa
movsb
sahf
lret
test
sbb
push
add
push
ljmp
stos
push
dec
in
arpl
adc
pop
sbb
roll
stos
cmp
or
jl
and
lock
push
adc
loopne
push
rorl
test
loopne
push
rclb
push
or
clc
stos
adc
test
aaa
dec
adc
loop
das
push
fsubrs
jle
add
mov
inc
xchg
das
js
lret
xchg
je
outsb
add
iret
enter
or
xor
pop
cmc
pop
insl
dec
mov
jmp
inc
in
push
stos
dec
dec
mov
mov
iret
jo
ret
sub
popa
shll
decl
sahf
jl
dec
mov
or
pushf
jecxz
adc
mov
int
sub
mov
or
in
loop
adc
jb
mov
mov
jl
gs
outsb
sub
xor
jns
orb
ds
ds
mov
insb
mov
insb
rclb
jl
lret
arpl
cmp
adc
movsb
inc
jecxz
pop
mov
add
jnp
cmp
mov
mov
sahf
cwtl
outsl
or
loop
xchg
mov
lret
ljmp
sbb
and
sbb
mov
cli
cmpb
add
sbb
aaa
les
jne
pop
xchg
push
sahf
std
jp
mov
xchg
or
xor
pusha
or
xchg
outsb
clc
sti
nop
sbb
dec
sti
and
jnp
js
or
fwait
dec
push
movups
outsl
push
pusha
test
inc
call
mov
call
cmp
or
ds
mov
loop
sub
mov
mov
lds
rorl
dec
jge
movsb
push
fsubrl
imul
ret
ja
mov
inc
cli
shll
jmp
subl
dec
scas
movsb
lods
lret
clc
xchg
mov
sub
leave
cmp
rcll
aad
fistpll
bswap
mov
add
jl
movsb
add
test
push
popf
clc
inc
lds
cwtl
hlt
sbb
cli
fadds
mov
push
add
lock
and
adc
in
or
fwait
pop
sahf
jmp
bound
mov
xrelease
cmpsl
dec
hlt
movb
inc
into
xchg
call
pop
jo
and
dec
mov
mov
ficompl
add
mov
fistps
rcrb
mov
push
push
in
enter
hlt
in
push
pop
mov
inc
jns
mov
rclb
pop
es
xchg
and
jno
dec
jnp
rolb
pushf
add
mov
and
outsl
jl
cltd
in
inc
push
mov
xor
xchg
gs
pushf
push
mov
aad
add
or
xchg
mov
push
je
cmp
inc
and
xchg
decl
xor
mov
push
add
sbb
cltd
xor
jnp
or
out
inc
leave
adc
mov
fmuls
or
dec
sbb
adc
pop
loop
and
and
loop
in
mov
loopne
mov
lcall
sub
mov
push
mov
xlat
lcall
push
mov
out
sbb
pop
xchg
add
xlat
popf
pop
jl
shll
adc
xchg
jecxz
jb
fwait
mov
lret
or
mov
aas
jnp
pop
js
fnstsw
stos
dec
mov
xchg
es
adc
fdivl
xor
cmpsb
mov
fmuls
sbb
and
movsb
ljmp
push
fsubr
dec
shl
lcall
pminub
icebp
les
imul
in
les
test
and
push
mov
lret
enter
dec
xchg
xor
inc
test
mov
cmpsl
sub
das
ret
in
pop
cmpsl
addb
fiadds
fmull
cmc
or
adcb
js
fstpl
sbb
jbe
arpl
or
aas
xchg
mov
xor
cmp
or
popa
pop
xor
in
pop
fimull
sbb
out
repnz
sub
add
lret
inc
and
cmp
fld
or
js
xor
je
inc
xor
cmp
repz
pusha
sbb
mov
push
ss
nopl
and
lods
out
orl
inc
lret
repnz
sub
out
xor
mov
push
mov
sub
cmpsl
enter
fbstp
xor
leave
xchg
cmp
inc
ret
test
xorb
push
and
loop
scas
cmp
push
cmp
sub
sub
sti
das
dec
push
jmp
jne
int3
data16
add
xchg
mov
leave
repnz
movsl
mov
push
jecxz
scas
jno
adc
push
sbb
mov
dec
push
sub
mov
je
out
jp
mov
xchg
inc
push
mov
pop
sub
mulb
mov
pop
inc
icebp
push
imul
mov
push
fdivp
mov
int3
jp
add
movsb
sahf
pop
push
rcrl
idivl
or
sub
repnz
push
mov
rcrb
notl
pop
in
test
push
mov
fidivrl
test
leave
std
push
adc
xchg
cltd
into
push
mov
add
and
mov
stos
std
pushf
xchg
or
lret
out
aaa
rcr
ja
stc
les
shll
jns
js
dec
outsl
into
dec
repz
aad
xor
pushf
mov
idivb
hlt
pop
dec
inc
addl
pop
xlat
pop
mov
xchg
icebp
adc
enter
daa
into
mov
jp
or
ds
inc
cmp
stc
jns
add
out
lret
add
ljmp
dec
xorl
mov
and
in
dec
pop
push
add
xor
mov
sbb
mov
gs
mov
call
imul
pop
fsts
dec
mov
jmp
loope
and
cmp
jg
mov
pop
cwtl
mov
and
push
scas
mov
adc
cmc
pop
push
mov
lods
or
in
xchg
movsb
fstps
int3
aaa
rcr
adc
les
or
push
notl
loope
and
pusha
lret
jl
xchg
jecxz
pop
push
cmp
inc
cmpsl
mov
js
sbb
push
fdiv
jg
dec
rclb
jg
scas
lock
les
sarl
mov
inc
and
adc
test
sub
sub
in
xor
push
push
add
sbbb
mov
lcall
orb
push
mov
add
dec
dec
mov
sbb
xor
jmp
leave
cmp
jl
test
inc
ja
roll
cltd
test
lock
push
xor
pop
mov
iret
and
jle
rcrb
push
ja
and
enter
stos
lahf
testb
push
sbb
push
stc
dec
mov
sbb
mov
sbbl
bound
adc
cmpsb
lds
mov
shlb
mov
dec
pop
xchg
push
popa
push
sbb
xor
scas
sub
adc
inc
push
or
jp
adc
stos
jl
mov
and
in
sbb
inc
movsb
fsubp
pop
mov
mov
adc
and
loop
outsl
dec
and
dec
mov
fimull
loop
arpl
mov
lock
pop
fwait
mov
inc
aaa
and
jae
sub
lods
xchg
ljmp
xchg
lcall
int
leave
jg
aaa
push
adcl
sub
mov
pusha
mov
into
sbb
jmp
sbb
pop
add
sbb
pop
sub
push
ret
sub
arpl
or
call
lds
push
mov
inc
ss
outsb
sarb
jne
mov
pop
test
xor
pop
movsl
icebp
xchg
mov
mov
test
cli
sbb
lret
and
pushf
inc
inc
pop
xor
scas
arpl
pop
int
jge
mov
rol
or
aad
mov
test
dec
in
out
cltd
adc
fmuls
shrb
dec
or
fldt
lret
ret
fdivl
jle
daa
aas
lea
int
push
loopne
xchg
add
shl
movsl
imul
adc
mov
je
test
cmpsl
mov
adc
xor
cmp
pop
push
std
mov
hlt
pop
dec
int
cmp
sub
movsb
fmuls
pop
sti
mov
minps
jg
jmp
xor
jo
and
nop
add
push
jnp
push
fcomps
mov
sub
clc
fldenv
inc
jecxz
pop
xor
out
aad
aas
iret
jge
addl
outsb
mov
mov
mov
mov
xchg
imul
mov
daa
add
icebp
pop
jecxz
adc
sarb
mov
cmp
cld
out
pop
repz
cmp
xor
mov
loope
movsl
sahf
mov
les
pop
aas
lods
orl
in
dec
push
adc
ret
cmp
rolb
js
bndstx
pop
call
imul
mov
xchg
jmp
add
stos
cmp
mov
push
insb
sarb
sbb
ljmp
mov
es
cmp
xchg
repnz
daa
mov
cs
sbb
aad
ljmp
jecxz
xchg
fldl
cli
popa
es
adc
xchg
jno
dec
addr16
mov
xor
xchg
lds
adc
mov
sbb
inc
cmp
mov
or
mov
scas
test
out
faddl
lods
fucom
adc
cli
cmc
xor
rolb
adc
xor
pop
lods
push
test
ret
cld
je
aad
rcr
lret
push
ret
arpl
xor
cmpsb
jmp
jb
pop
cs
jns
or
fs
incb
movl
jecxz
pop
mov
testl
adc
rcl
xchg
fisubrl
xor
push
arpl
push
sbb
into
jbe
jne
lods
mov
add
das
adc
sbb
das
test
fcoml
into
and
xor
test
subl
adc
push
add
inc
lods
in
movsb
push
xchg
rol
pop
insb
sbb
dec
cmp
aad
cmp
pop
fiaddl
jecxz
cmp
aas
inc
fldpi
gs
inc
mov
add
adc
adc
loopne
lret
bound
shrl
push
nop
or
add
pushf
sbb
mov
repz
ja
adcl
mov
jmp
push
push
cs
and
or
movsl
cmp
and
fists
mov
adc
pusha
lds
jbe
rcll
jmp
mov
xor
ret
xlat
loope
jle
jnp
out
jnp
inc
fs
jns
inc
in
jno
inc
pop
in
jb
adc
imul
mov
add
pop
mov
shrd
mov
push
and
jnp
pop
cmp
jge
sub
mov
mov
jmp
hlt
loopne
xchg
mov
hlt
jae
push
insl
and
sub
out
add
mov
or
push
sub
jo
pop
or
stos
xor
mov
sarb
or
mov
fldl
sarb
jne
dec
jns
lret
mov
pop
cmpsb
pop
loop
popf
jp
push
jmp
daa
dec
ljmp
test
inc
scas
lahf
addr16
xchg
fbstp
sub
test
xor
in
and
and
in
adc
dec
roll
xor
cmp
xchg
test
mov
jecxz
movsb
xchg
and
daa
mov
fsubrp
jne
cmp
int
push
inc
xor
cmc
stos
pop
dec
clc
jmp
int
fcomps
pop
loopne
xor
inc
sub
mov
rorb
sub
scas
loopne
pop
push
hlt
or
or
addr16
out
shld
cmp
daa
mov
or
arpl
mov
xor
out
sbb
push
int
cmp
pusha
sar
lret
sbb
mov
sti
sub
mov
popa
outsb
cs
sbb
dec
jl
sbb
ret
outsl
xchg
jl
nop
xchg
or
aas
and
xor
inc
adc
out
fmul
xchg
clc
add
fmul
nop
lods
mov
insb
push
dec
lret
in
add
push
mov
cmp
popf
and
pop
test
pushl
mov
or
xchg
daa
lock
sahf
jns
jb
outsb
cli
adcb
jmp
push
popf
ljmp
jb
aam
dec
loope
pushf
push
add
scas
fistpl
add
pop
pop
lcall
add
das
pop
inc
daa
enter
pusha
push
xchg
mov
orb
mov
or
in
add
push
or
pavgw
rclb
push
loopne
lcall
pop
les
sbb
and
xchg
sub
es
xor
scas
push
jnp
in
cmp
inc
sahf
repz
xlat
addr16
or
or
cwtl
mov
sbbl
sub
mov
mov
in
mov
xor
xor
pop
loope
data16
xchg
jmp
popa
aam
hlt
shrl
jg
mov
daa
sbb
jecxz
xchg
mov
mov
cld
sub
bound
jge
jbe
push
popa
gs
adc
jnp
mov
or
mov
popa
outsb
push
inc
movsl
scas
lods
sahf
cli
mov
sub
lcall
mov
pcmpgtb
dec
into
mov
mov
xchg
cld
pop
sarb
adc
sub
loop
inc
mov
shl
and
push
pcmpgtd
mov
mov
xor
jnp
cmc
pop
adc
sub
jae
imul
les
cmp
sti
mov
jns
jnp
cmp
jmp
dec
pushf
xor
aaa
loop
xchg
cmpsb
pop
movsb
push
sbb
fs
dec
mov
std
movsb
int
cli
fmull
push
lods
ficoml
cmp
adc
lock
lods
aam
scas
pop
cmc
js
hlt
js
add
xchg
imul
lds
mov
lods
mov
push
or
xchg
jmp
ja
jbe
dec
xlat
mov
mov
scas
out
call
in
in
dec
into
pop
xor
leave
pop
mov
inc
cltd
imul
popa
mov
hlt
or
adc
stos
inc
adc
jae
mov
insb
lcall
sub
inc
call
add
adc
pop
lods
in
cmp
xchg
inc
es
mov
div
mov
dec
inc
ds
hlt
mov
mov
add
mov
test
adc
sarb
aas
aad
shrb
inc
cli
adc
addl
sbb
push
stos
andb
mov
cmp
fisubs
stos
flds
xor
ja
lock
jmp
pop
dec
rcrb
jmp
xor
nop
push
shll
scas
push
mov
jecxz
rorb
jecxz
xchg
jae
push
jmp
add
add
jbe
push
pop
shll
adc
jp
mov
sub
adc
rolb
shrb
dec
push
push
lahf
int
push
add
fidivrs
in
pop
or
xchg
sarl
in
sbb
out
xlat
sub
mov
adc
fcomps
or
insl
icebp
push
icebp
mov
data16
push
inc
aad
test
mov
inc
xchg
in
imul
push
xchg
loopne
push
push
inc
inc
clc
jl
shlb
jmp
mov
mov
fwait
dec
popa
stos
stos
sub
shll
fs
sub
mov
out
xchg
jge
data16
adc
insl
inc
adc
cmp
pop
sub
mov
xor
sub
mov
fnstenv
pop
push
xor
in
int3
and
lods
jecxz
and
pop
aam
xor
push
dec
jno
cld
in
arpl
and
pop
in
stc
push
fwait
push
mov
fsubrs
das
adc
stos
outsb
insb
fs
xchg
or
sub
fldt
push
jp
aad
ss
fs
lahf
mov
pop
stos
xchg
movsl
push
sbb
shl
cltd
ret
add
or
movsl
ljmp
imul
in
lea
sbb
xchg
inc
aam
or
xor
outsl
ljmp
inc
rclb
popf
xor
orl
jmp
scas
or
jns
hlt
in
mov
sbb
cmp
in
adc
mov
push
stos
cmpsl
test
push
stc
xor
fldcw
test
push
insb
jp
sbb
mov
leave
sub
inc
mov
out
adc
or
in
fbld
mov
orl
dec
mov
sbb
movl
jecxz
or
lret
loop
inc
popl
loope
cmp
jp
pusha
icebp
out
push
mov
es
dec
mov
push
mov
out
sti
loop
cmp
push
aad
or
or
dec
or
icebp
and
cli
sbb
dec
pop
and
jo
out
fsubrl
push
jns
in
dec
mov
xor
xchg
or
jo
aas
fidivrs
xchg
jge
inc
out
out
scas
and
pushf
orl
pop
jo
mov
jmp
mov
mov
mov
sbb
icebp
pop
lds
ret
xor
xchg
push
pop
popf
jbe
ror
sub
je
jl
imul
lds
popa
xchg
popf
cmpsl
jno
cmp
iret
cs
jecxz
icebp
push
out
xor
xchg
rcr
push
pop
loop
push
xchg
ss
jmp
jnp
and
push
stos
clc
xchg
cmp
fnsave
push
rcr
pushf
adc
jnp
sbb
xchg
ss
jg
mov
pop
sahf
test
test
jl
mov
dec
insb
gs
add
mov
ljmp
inc
out
sbb
push
xor
int
xchg
jecxz
lods
jno
dec
inc
and
les
jge
cli
push
xchg
aad
bound
call
gs
xor
call
dec
imulb
mov
shlb
dec
subl
out
mov
xor
insl
adc
xchg
fsubr
pop
jmp
int3
movsb
xor
cmp
sbb
dec
repnz
xlat
in
xor
gs
into
adc
and
scas
mov
or
pop
add
pop
scas
fwait
lods
cmp
pop
jg
push
pop
jbe
xor
adc
lret
aam
das
adc
push
cmp
fimull
jb
pop
xorb
cmp
mov
xchg
loope
xlat
pop
cmp
movsb
and
pop
aad
sub
sub
cwtl
sbb
daa
pop
ja
jbe
push
inc
pop
cmp
popf
cltd
push
or
mov
and
add
stc
hlt
adc
cmpl
pop
add
pop
stos
loop
insb
dec
sti
adc
int3
insb
into
test
cmp
in
gs
inc
outsb
adc
jle
lock
cs
subl
push
imul
aas
stos
shrl
push
rclb
adc
ret
fwait
push
mov
jnp
lods
sub
adc
call
mov
xor
inc
sbb
dec
and
shlb
cmpsl
xor
ds
mov
mov
xchg
pop
adc
and
mov
pop
cwtl
add
sarl
cmp
cmpsb
pushf
arpl
fsubrs
dec
lcall
sti
cmp
adc
jp
daa
loopne
addb
add
cwtd
cli
and
push
cwtl
mov
ret
add
pop
inc
inc
xchg
test
pop
jbe
sahf
dec
dec
in
jge
jge
dec
adc
jmp
add
shrl
inc
pop
mov
ljmp
jge
xchg
sub
cmovno
inc
nop
inc
adc
sti
xchg
insb
out
adc
scas
sbb
sbb
xchg
rclb
xchg
inc
movsb
xor
pushf
shlb
mov
in
pop
loop
pop
and
inc
divb
test
push
cltd
rcrb
shll
and
aaa
push
and
dec
jns
das
inc
mov
lods
sbb
pop
adc
and
xorl
sarl
mov
es
fs
daa
cli
add
dec
push
mov
out
xchg
addr16
ss
mov
cmp
call
add
jecxz
outsl
add
pop
mov
inc
sbb
jb
repz
cs
ret
pop
mov
out
push
sahf
inc
int
or
xlat
dec
mov
or
push
jge
sbb
lret
cld
mov
jmp
lcall
jge
cmpsl
dec
out
mov
imul
cmp
mov
icebp
in
lea
fisubs
push
xor
cmp
into
das
movsl
cli
mov
mov
lret
insb
ret
movsl
push
push
add
inc
hlt
das
insb
lods
fwait
js
ss
push
cmp
pop
outsl
clc
jo
push
shll
and
les
sub
mov
data16
jle
mov
xchg
cmp
mov
dec
and
mov
jge
xor
cmp
inc
xchg
jge
push
outsb
dec
dec
mov
ss
mov
sbb
popf
sub
das
sbb
inc
pop
lods
out
xchg
push
testl
pop
push
and
xorl
je
aaa
dec
mov
and
dec
inc
les
rcrb
stc
jns
mov
insb
sub
dec
aad
add
ror
nop
cmc
cmp
cli
pop
lahf
inc
jge
lcall
les
or
jp
jb
pop
js
dec
cmpsl
adc
sub
mov
sbb
fadds
scas
xor
xor
xchg
adc
aad
pop
stc
mov
jo
mov
insl
sti
cli
push
mov
mov
daa
jo
inc
dec
jge
mov
cmp
jg
ret
push
hlt
das
sarb
push
movsl
pop
orl
adc
icebp
xor
aad
adc
pop
or
pusha
sahf
js
dec
or
push
mov
xchg
sbbl
dec
mov
add
cli
inc
dec
inc
cmp
pop
sbb
pop
xor
mov
mov
xchg
jae
adc
jle
ret
mov
jno
imul
dec
adc
xlat
popa
or
subb
xor
out
ljmp
in
hlt
cmp
clc
stc
imul
mov
test
pop
sub
inc
pop
jo
pop
pop
int
xchg
inc
xor
in
sbb
addr16
jnp
inc
enterw
clc
data16
arpl
inc
push
fs
hlt
xor
mov
xchg
call
cmpsl
cmp
jne
push
fadds
add
cmp
xchg
mov
arpl
mov
test
out
into
call
test
push
mov
push
out
inc
lret
rorl
push
rol
hlt
popf
cmp
sub
test
push
dec
mov
xchg
cmp
pop
popf
sti
xchg
fisubs
mov
xchg
rcr
or
xlat
or
jmp
mov
cmpsl
unpckhps
dec
dec
hlt
daa
mov
jmp
movsb
inc
je
int3
jne
outsb
xchg
jne
popa
shll
in
sub
mov
mov
cli
pop
cld
sbb
mov
pop
cld
push
jg
jecxz
das
decl
mov
scas
push
sar
add
mov
pop
adc
aas
and
jnp
movsl
fnstcw
jo
cmp
loop
mov
in
sbb
jecxz
mov
add
jecxz
sbb
mov
push
add
mov
mov
mov
xor
dec
push
or
test
adc
jmp
aad
scas
cmc
jns
or
insb
lock
cmp
and
add
or
push
add
lods
inc
and
outsl
imul
nop
out
gs
fdivp
fwait
xlat
xor
iret
sbb
jae
jp
push
test
out
leave
sbb
inc
mov
mov
jo
mov
iret
xor
mov
jecxz
pusha
and
inc
pushf
popf
out
stos
xor
mov
add
into
mov
loope
adc
xchg
mov
je
mov
dec
in
mov
xor
stc
mov
out
imul
push
daa
push
xchg
push
daa
fsubrl
pop
cli
add
mov
lcall
dec
pop
lahf
mov
and
ficoml
mov
dec
or
repz
mov
rcrb
lods
fidivrs
and
lret
dec
mov
cltd
int
test
mov
lods
shlb
out
xchg
sub
cmp
movb
dec
pop
cmp
std
adc
jl
xchg
lods
dec
shl
aaa
sub
aad
xlat
mov
or
or
mov
cld
das
fcmovu
into
jne
xor
xchg
xchg
or
or
out
sbb
push
add
stos
sti
cld
mov
xor
mov
mov
or
sti
lock
pop
pop
jecxz
aam
movsl
dec
popa
xchg
sbb
mov
notl
adc
jmp
push
mov
push
fstl
test
imul
shlb
xor
fsubrl
dec
xor
into
sahf
daa
jle
pop
add
iret
jl
cmp
push
sub
xchg
mov
enter
dec
xchg
mov
adc
ss
fidivrl
jae
adc
xchg
push
mov
xor
adc
lock
add
dec
push
cmpsl
imul
vmovdqa
imul
fdivrs
xor
cmp
lret
loopne
mov
dec
idiv
push
sbb
adc
mov
jnp
mov
stc
arpl
fs
inc
or
add
mov
repnz
xchg
push
lcall
xchg
mov
pop
xor
shll
dec
push
in
sti
sarb
sbb
jmp
jbe
repnz
dec
push
out
push
inc
loopne
in
lea
push
test
mov
push
mov
sbb
jge
jle
or
push
roll
cmp
fisttpll
leave
jbe
mov
in
pusha
jo
push
or
or
call
mov
sbb
jp
mov
clc
adc
sub
in
outsb
in
mov
pop
sub
adc
and
mov
sub
xorb
sbb
inc
xor
bound
push
mov
lcall
push
adc
bound
cmc
loopne
stc
push
lret
movsb
adc
jl
test
add
divl
mov
cmpsb
mov
scas
mov
icebp
inc
js
cwtl
xor
daa
mov
sub
mov
aam
mov
mov
or
adc
leave
jmp
sahf
daa
or
shll
stos
cli
mov
pop
push
adc
mov
in
add
repnz
prefetch
inc
mov
out
outsb
cmp
cmp
mov
xchg
inc
push
push
jo
fadd
aaa
imul
in
sub
addr16
faddl
adc
xchg
jns
pop
cmp
mov
pusha
ficompl
rcrb
jg
es
adc
jno
xor
dec
mov
jle
pop
ss
jne
ficoms
xchg
inc
inc
pop
dec
mov
sbb
arpl
sbb
leave
jnp
ljmp
adc
in
jne
scas
mov
inc
iret
xor
sub
fs
jnp
xor
inc
push
cmpsb
add
xchg
fwait
add
imul
out
mov
mov
or
rcrl
sbb
add
or
in
cmp
popf
inc
repz
insb
loope
or
push
cwtl
loope
jnp
add
sbb
outsl
fiadds
rcrb
arpl
cmp
and
mov
mov
lahf
ret
mov
pop
adc
sahf
or
mov
mov
bound
gs
sbb
add
push
mov
inc
and
mov
mov
xchg
push
jle
and
mov
pop
mov
push
call
lods
pop
cmp
outsb
push
cmpsb
popf
addr16
xchg
insb
sbb
push
rcrb
scas
lahf
aam
imul
jns
mov
xorb
sbb
clc
jp
imul
dec
cmc
mov
repz
fwait
test
fadd
inc
add
loopne
mov
sbbb
and
lahf
or
loop
fdivr
es
pop
xor
push
test
dec
imul
mov
push
ficoml
mov
ljmp
jbe
mov
sbb
je
sub
pop
xchg
test
push
scas
test
rcrl
sbb
mov
test
cmp
clc
shll
js
daa
repnz
mov
pop
rcl
in
xchg
andb
mov
jae
pop
cs
adc
pusha
and
scas
dec
push
jbe
sbb
or
cmpl
lock
lea
sbb
dec
add
movsb
jle
pop
sbb
aaa
pusha
enter
je
mov
test
shll
lcall
in
push
mov
int
sbb
cld
inc
mov
bound
aaa
push
insl
hlt
push
ja
addr16
xor
das
jp
or
test
das
push
dec
mov
mov
pusha
push
push
xor
adc
xor
daa
popa
and
xor
mov
into
nop
inc
test
add
int
dec
and
movsl
push
mov
int3
aad
pop
les
mov
mov
gs
ja
fwait
pop
enter
in
orl
in
pop
arpl
fisubs
dec
call
imul
dec
mov
push
inc
pop
and
cs
inc
dec
push
fadds
xlat
cmpsl
test
aaa
push
add
in
in
mov
cmp
testl
je
mov
gs
mov
in
jo
push
pushf
test
mov
xchg
xchg
loopne
dec
cmp
aas
or
mov
push
jl
movsb
pop
inc
stos
or
xlat
adc
xor
das
cwtl
lods
adc
mov
or
cmp
lds
dec
popa
xor
ss
inc
cwtl
lahf
xor
std
mov
scas
in
adc
mov
push
mov
jecxz
adc
popa
mov
sbb
pop
sbb
loope
mov
arpl
sarb
jb
mov
dec
in
pop
and
jb
xchg
pop
cmc
xchg
jno
cwtl
pop
mov
ret
fwait
push
and
cmp
ja
imul
xchg
push
scas
dec
inc
rcrb
std
cwtl
fstpt
mov
mov
sbb
xor
mov
subl
jg
inc
adc
pushf
cli
push
lahf
jno
cli
pop
mov
lock
adc
mov
arpl
cmp
push
hlt
push
and
out
xchg
lret
repnz
dec
fsub
loop
sahf
mov
std
mov
push
std
or
mov
popf
jp
cmp
cwtl
out
adc
lds
sub
icebp
cs
dec
push
cmpsb
mov
test
fnsave
mov
loopne
in
pop
mov
sbb
insl
cmp
mov
pop
mov
inc
push
outsl
push
es
xchg
xchg
sub
icebp
pop
xchg
inc
jl
cmp
pop
mov
inc
jmp
cmp
scas
vpsubd
pop
add
jle
fwait
mov
push
out
inc
std
pop
pop
sbb
ss
stos
pop
test
mov
push
xor
adc
lock
cmp
ljmp
faddl
pop
rcrl
shll
in
jo
ficompl
push
push
fldenv
lock
mov
mov
pop
ror
mov
cmc
mov
mov
out
loope
fldt
mov
out
dec
sti
adc
sbb
sbb
bound
out
mov
aas
pop
add
leave
test
bound
or
mov
xchg
out
mov
jo
aam
filds
push
data16
add
inc
and
mov
jge
dec
nop
loopne
or
add
test
or
sahf
mov
cmpsb
adcl
sti
cmpsb
push
out
jbe
clc
pushf
ficoms
or
into
mov
lcall
xor
cwtl
rorb
mov
pop
out
push
sbb
imul
and
mov
add
in
jo
add
push
pop
cmp
inc
ljmp
aas
jecxz
mov
mov
fwait
roll
cmp
sub
mov
fidivrs
mov
nop
in
stos
or
mov
mov
jg
or
repnz
gs
jbe
jmp
mov
or
es
pop
mov
call
xor
lea
cmp
jns
sbb
arpl
cmc
pop
inc
xlat
xor
cwtl
nop
pop
adc
sti
xlat
push
mov
sub
xchg
xor
pop
icebp
or
add
arpl
pop
and
pop
jmp
scas
sbb
rclb
jae
sbb
or
mov
mov
mov
push
daa
daa
aas
cli
mov
add
xchg
lret
lret
cmp
mov
mov
fdivrl
sub
fwait
decl
add
cmp
xchg
loop
jbe
jle
sbb
xchg
mov
bnd
int3
dec
add
push
jl
sbb
adc
mov
push
jns
xchg
fmuls
push
pop
mov
mov
dec
popa
mov
rcrb
sbb
cmp
mov
rcrb
xchg
mov
arpl
shll
xchg
scas
jbe
out
lods
mov
xchg
jae
mov
movsl
int
jns
movq
xor
out
aaa
ret
pushf
xor
outsb
mov
scas
inc
pop
push
sarb
pop
adc
or
pop
xor
xchg
shll
add
mov
cld
in
push
lcall
imul
shrl
lea
loopne
sbb
dec
jg
inc
mov
fimuls
shrl
push
or
xchg
test
mov
adc
xor
sar
enter
mov
mov
adc
xor
mov
mov
fcoml
adc
push
add
inc
adc
add
and
rol
sbb
mov
or
mov
movsb
jl
inc
xchg
insl
insb
cwtl
test
add
pop
sar
ljmp
dec
fildll
popa
jbe
pop
mov
mov
jmp
test
inc
xchg
js
scas
js
shl
jae
xchg
push
inc
cmp
jge
test
lods
ljmp
and
or
xchg
sub
xor
mov
lahf
test
fisubl
arpl
das
fistps
jmp
pop
lret
fildl
repz
and
sbb
ret
pop
xor
pop
orb
movsb
cmpsl
push
and
cmp
test
cmpsb
jle
xchg
ja
push
roll
cmp
jne
mov
mov
out
loop
data16
dec
fdivl
paddusw
mov
sti
shrb
push
orb
mov
add
in
sub
push
xlat
lock
andl
mov
mov
add
retw
dec
sub
xchg
fldenv
mov
adc
cmp
mov
out
fs
popf
sbb
dec
jmp
out
fucomip
scas
fsubrl
add
fmull
scas
insb
inc
test
or
jle
xchg
mov
xor
mov
dec
nop
cmc
ss
sbb
adc
and
cmp
push
inc
cmp
adc
scas
jmp
in
pop
xor
push
int
movsl
gs
test
sbb
cmpsb
inc
sub
push
dec
mov
leave
test
movb
fmull
mov
and
test
cmp
pop
inc
mov
ds
dec
jecxz
inc
mov
jno
or
test
jbe
push
mov
shrl
aaa
and
aam
xor
cwtl
std
stos
xchg
test
adc
mov
rcl
or
mov
xor
or
adc
hlt
cwtl
pop
cmp
xchg
add
jne
arpl
and
aam
sub
jnp
push
adc
jo
add
jle
out
dec
dec
sbb
data16
push
xor
ficompl
mov
repz
pop
mov
cmpsl
ds
xchg
out
xchg
fildll
jbe
mov
mov
enter
lods
scas
into
outsl
jmp
ret
pop
pop
push
xor
loop
roll
sahf
lret
inc
loope
insb
or
mov
wrmsr
jge
sbb
lods
sbb
adc
xchg
push
or
in
icebp
fldl
push
call
loope
dec
add
xchg
xchg
cmpsl
dec
cli
out
out
sub
jns
jbe
cmp
cltd
sbb
inc
mov
outsb
lods
jno
push
mov
out
push
lret
pop
xor
lock
xlat
push
dec
sbb
inc
mov
push
jns
cmpsb
inc
and
mov
shll
adcl
sahf
push
movsl
xor
loopne,pn
mov
inc
mov
fsubr
jmp
xchg
mov
push
cmp
push
mov
mov
mov
aad
sub
adc
xor
test
imul
jae
fidivrs
lret
xchg
scas
mov
int
hlt
lcall
xor
iret
pop
xchg
loope
jmp
xchg
sub
jne
mov
cmp
pop
mov
pop
or
fwait
sbb
aam
mov
adc
mov
lods
mov
stc
adc
ljmp
sbb
xchg
jne
adc
dec
push
mov
pop
test
fucomip
call
mov
cld
mov
repnz
mov
add
pop
nop
gs
jno
sbb
ja
repnz
orb
inc
cmp
dec
adc
xchg
cmpsb
mov
mov
aad
lods
out
inc
imul
xchg
mov
xchg
push
push
xorb
or
shll
call
jp
test
inc
jmp
jns
in
pop
sbb
in
pop
jno
negl
and
std
testl
fstpl
scas
push
rcrl
addr16
enter
xchg
repz
inc
dec
leave
out
mov
cld
sub
inc
call
mov
inc
push
cmp
daa
xchg
or
adc
add
xor
insl
or
inc
mov
or
inc
int3
lret
push
adc
cltd
stos
imul
jno
scas
jo
mov
lods
sbb
stos
dec
lret
dec
dec
mul
hlt
pop
rep
lods
jae
and
out
push
add
mov
dec
and
mov
inc
xchg
js
aaa
mov
push
pop
push
lock
dec
loopne
and
add
js
loope
aad
jl
sbb
xchg
sti
iret
cli
jle
fnsetpm(287
in
je
mov
xor
jns
fdivs
fcmovne
adc
and
jns
cmc
adcl
inc
pop
ljmp
mov
or
mov
mov
ljmp
subb
mov
pop
pop
mov
lock
scas
popa
imul
sahf
add
add
leave
rcrl
insb
xchg
adc
sub
sub
cld
push
xchg
lahf
ret
xor
aam
fs
int3
dec
stc
sti
jle
mov
inc
push
hlt
scas
cmp
and
cmp
adc
jne
adc
mov
cmpsb
aad
cmp
pop
dec
xor
nop
jno
mov
std
stos
pop
push
xchg
mov
and
jg
dec
pop
es
sbb
lods
mov
stos
cmpl
movsl
mov
mov
pop
inc
test
fiaddl
pop
lods
dec
mov
xchg
xor
ret
rep
xchg
inc
dec
pop
push
jnp
imul
icebp
aas
lret
int
lods
jne
xchg
sbb
in
sbb
or
fldl
imul
pop
or
insl
inc
mov
movsb
xchg
ss
jg
inc
adc
sbb
jg
inc
fisubrl
lahf
loope
aad
ja
cmpsl
xor
jecxz
dec
push
imul
test
mov
int3
xor
sbb
lods
outsb
sahf
xchg
sbb
sahf
inc
mov
mov
rcrb
negl
pop
andb
pop
and
xor
mov
cmp
std
xorl
enter
in
lock
ret
and
imul
mov
cltd
xor
inc
dec
adc
cmpsb
mov
add
add
icebp
loop
mov
xor
mov
or
jge
dec
leave
repnz
jbe
add
push
popa
inc
cltd
mov
mov
divl
dec
sbb
jbe
int
jb
mov
mov
dec
and
sub
fs
xchg
mov
shl
dec
mov
inc
outsl
fs
inc
pop
xchg
aad
daa
push
jnp
push
in
cs
mov
inc
paddusw
stos
fst
mov
ss
inc
mov
xchg
loop
mov
and
lods
inc
or
sub
leave
inc
sbb
enter
xor
xchg
adc
push
pop
addr16
jle
aam
cmp
loope
inc
pushf
add
fcmovb
sbb
xchg
stos
fistps
dec
pop
aas
decb
cwtl
clc
inc
jmp
push
ja
shrb
pop
scas
pop
fucom
dec
dec
shrb
mov
pop
lods
cmp
scas
loop
mov
std
cmp
int
mov
pop
std
cmp
scas
inc
lea
sbb
dec
push
insb
sti
mov
hlt
sbb
sub
mov
ljmp
adc
push
cwtl
adc
or
xchg
sbb
movsb
stc
xchg
dec
sub
cld
push
mov
push
pop
xor
xchg
pop
mov
in
sbb
cmc
mov
cmpsl
mov
adc
decl
cmp
and
fistpll
jnp
dec
cmp
data16
xor
in
push
clc
lret
mov
dec
mov
setge
test
stos
mov
dec
jo
repz
xchg
test
cmp
push
jae
push
mov
leave
ja
lods
xchg
daa
addr16
fisttpll
add
aaa
inc
repnz
fwait
mov
dec
dec
sub
xlat
pop
clc
mov
leave
test
push
xor
mov
aaa
frstor
pop
ficomps
cwtl
fdivl
repnz
in
mov
pop
inc
adc
jecxz
ficompl
add
push
push
rcrb
sarb
in
adc
in
adc
sub
movsl
xor
adc
push
and
dec
cmp
add
fs
xor
jecxz
inc
sti
call
jle
and
pop
mov
xlat
push
sub
divb
pop
pop
sub
add
rcr
dec
scas
pop
xchg
jno
mov
cmp
pop
fldt
stos
cli
sub
scas
push
mov
sbb
mov
lds
sbb
dec
mov
out
add
test
imul
push
fs
push
jp
xor
shlb
mov
xor
outsb
rolb
jmp
cli
lret
inc
pop
popf
mov
js
mov
mov
pop
inc
sbb
xor
jmp
or
mov
ljmp
ss
xor
lock
and
sarb
and
out
sub
inc
out
xchg
cmp
cld
adc
pop
stos
mov
mov
ja
adc
fisubrs
xor
fldl2e
mov
jnp
mov
loop
push
mov
fdivrl
nop
or
faddl
imul
mov
popf
mov
setne
mov
popa
and
enter
jo
push
clc
xchg
leave
ficoml
jns
mov
je
and
adc
leave
sub
inc
jno
outsb
pusha
enter
jne
pop
jl
mov
mov
or
dec
or
xchg
cmp
and
pop
movsb
mov
lret
pop
sbb
movsb
fs
popf
sahf
rcrb
xchg
int3
into
add
pop
mov
arpl
insb
lea
push
movsl
xchg
leave
leave
jp
jae
jl
fwait
push
popa
loope
clc
mov
jns
cmp
xchg
mov
pushf
in
in
rorl
lahf
and
cmpsl
xor
xor
mov
dec
rcl
outsb
push
mov
jns
scas
push
in
push
pop
test
sub
adc
fidivrs
roll
je
ss
arpl
mov
mov
aaa
adc
mov
push
dec
lods
nop
mov
or
mov
ror
xor
mov
movsb
adc
sbb
cltd
sub
in
ja
aad
in
sbb
jnp
in
out
jecxz
repz
xor
cs
mov
pop
imul
test
and
mov
call
adc
aas
fldcw
xor
push
sub
and
andb
mov
mov
mov
xorl
neg
stos
sti
inc
aaa
add
or
xor
test
mov
out
pop
pop
cwtl
jmp
adc
cli
xchg
push
jl
cmp
inc
mov
mov
negl
xchg
prefetch
jb
mov
test
out
push
cld
and
cs
xor
pop
ficoml
cmp
mov
movsl
xorl
lea
sbb
and
arpl
sub
sbb
lock
dec
dec
cmp
adc
xchg
mov
dec
andl
inc
aad
mov
in
fstl
inc
pop
xor
xchg
cmp
xchg
add
out
mov
movsl
das
movsl
sub
cmp
mov
lock
clc
mov
pop
out
adc
inc
or
lret
jle
lcall
inc
push
movsl
imul
lds
fistps
pop
xchg
mov
jae
and
es
fidivl
or
jmp
cmpsl
insl
mov
dec
addr16
mov
repz
scas
add
add
pop
xchg
pop
lcall
pop
ljmp
out
aas
leave
or
or
or
add
cmp
mov
jl
add
data16
sbb
popl
cmp
orl
xchg
cmp
pop
div
jo
rorb
orb
fdivrp
mov
push
dec
add
xor
inc
test
lea
sahf
test
mov
cmp
in
into
sub
dec
sbb
sti
scas
pop
jae
xchg
stos
mov
in
popa
and
push
and
data16
jg
addps
cmp
in
push
stos
out
cmc
in
push
mov
mov
inc
sub
mov
data16
push
cmc
out
mov
rol
sub
dec
cmpsb
mov
int
hlt
testl
mov
xchg
mov
rorb
scas
pop
jo
int3
cmpsb
push
lret
insl
and
mov
or
lods
push
mov
out
scas
pop
mov
cmp
loopne
in
or
jecxz
sub
inc
mov
mov
aas
sbb
pop
sub
dec
arpl
pop
mov
mov
ss
sub
jecxz
jo
fwait
xor
rolb
lret
mov
rolb
les
push
adc
jecxz
mov
lock
ret
jno
notl
aam
inc
inc
pop
xlat
push
pop
mov
push
push
rcl
jg
fistl
stc
mov
loopne
mov
xor
lock
icebp
rolb
push
and
jge
xchg
cs
xor
jmp
push
les
adc
pusha
lods
movsl
adc
xor
mov
hlt
mov
scas
pop
in
cltd
xchg
lcall
aaa
xor
negb
in
dec
sahf
mov
movsb
jno
dec
mov
out
mov
icebp
call
dec
cmpsl
jb
sbb
insl
xchg
inc
mov
fs
pop
ja
ret
inc
jmp
dec
add
sbb
out
cwtl
add
test
dec
jmp
cmp
mov
mov
dec
sub
imull
or
mov
cmp
test
out
jecxz
push
or
push
mov
enter
mov
mov
scas
pop
or
lret
jge
push
xchg
in
loop
sbb
test
push
cmpsb
arpl
loope
les
add
mov
je
insb
jl
testl
dec
mov
push
fsubs
sub
mov
jge
xor
push
fnsave
dec
sbb
les
in
add
sub
cltd
lea
push
xor
outsl
mov
insb
or
movsl
or
pop
or
xchg
call
pusha
jp
lods
int
lret
inc
mov
or
test
popa
xchg
loop
push
jg
inc
jbe
or
inc
outsb
ljmp
test
sub
js
jae
hlt
xor
rcrb
mov
mov
and
xchg
inc
in
int3
nop
cli
xor
js
push
xchg
rorb
mov
loop
and
push
mov
mov
adc
xor
xchg
dec
into
pushf
or
cmpsl
push
ficompl
inc
imull
scas
int3
xor
shll
rolb
cmp
push
add
insl
xor
in
jb
mov
and
js
xor
testl
daa
outsb
sbbb
aaa
test
fwait
stos
leave
hlt
icebp
out
sbbb
jnp
lds
fwait
or
or
sub
add
rcrl
push
lods
stc
mov
xchg
leave
mov
ds
test
jl
lock
sbb
popf
and
stos
mov
rcl
cmp
dec
dec
or
inc
jbe
mov
bound
es
xor
in
daa
xchg
mov
dec
add
cmp
sub
xchg
xchg
call
mov
dec
loopne
xor
dec
faddl
xchg
mov
jl
aam
jae
or
or
xor
jae
mov
xchg
dec
lock
pop
adc
ret
popa
xor
daa
xor
je
arpl
inc
out
mov
sub
popf
jb
or
lahf
lock
gs
and
loope
aas
stc
rcrb
inc
shl
pop
inc
ss
stos
mov
add
xor
loope
adc
xchg
mov
in
and
mov
add
sbb
jo
inc
les
xchg
jmp
mov
fldcw
insl
add
sar
cs
in
push
push
sbb
mov
bound
inc
adc
jbe
aad
popa
mov
adc
pushf
jge
mov
lods
loopne
inc
fnstenv
jp
jae
cmp
push
pop
mov
adc
push
in
xchg
rcrb
mov
outsb
add
jecxz
enter
sbb
aaa
add
gs
jp
mov
rcl
in
sub
pop
add
loopne
xchg
cs
ret
xchg
dec
leave
xchg
das
rorb
iret
popf
mov
test
outsb
sbb
out
dec
push
jb
mov
sbb
sbb
mov
scas
imul
lock
addr16
dec
xchg
dec
testb
pusha
imul
loope
xor
cwtl
pop
rorb
imul
bound
cmp
jmp
aam
sti
xchg
test
dec
push
and
cmp
adc
mov
repz
mov
or
sbb
lods
or
fld
or
roll
pop
sub
xchg
stc
jo
daa
sbb
divl
and
in
data16
or
jg
adc
xchg
mov
xor
mov
shlb
or
shl
insb
mov
aad
ret
push
or
scas
scas
ret
mov
stc
lret
aaa
xor
push
push
inc
sbb
cli
sbb
pushf
loopne
sub
aam
jg
shlb
mov
inc
sbb
push
cmp
and
cli
out
inc
out
cltd
xor
cmpsb
call
jns
sub
std
addr16
dec
rcl
scas
ret
fcomps
leave
inc
inc
lds
mov
push
cmp
and
mov
insl
pop
jne
std
cmpsl
mov
sub
iret
lods
fndisi(8087
je
outsl
lahf
sbb
add
xchg
mov
loope
jge
cmp
and
adc
test
and
mov
jo
mov
lret
imul
insl
fdivr
inc
test
adc
sub
repz
and
mov
lods
pop
sbb
mov
scas
xor
insb
iret
popa
out
fcompp
pusha
pop
dec
leave
lcall
mov
xchg
xchg
and
dec
jmp
fxch
shl
jnp
sti
es
xchg
jmp
and
hlt
cmp
xchg
jl
aas
in
push
lea
inc
mov
mov
mov
jb
sub
pop
test
mov
mov
outsb
rcll
imul
mov
and
cmc
push
enter
cs
test
push
je
and
inc
adc
loope
fcomp
outsb
iret
push
xor
cs
add
mov
mov
shlb
adc
fmuls
movsb
lcall
jle
xor
sahf
mov
pop
cmp
sbb
dec
dec
push
dec
daa
sbb
inc
jno
stos
ficoms
inc
mov
jmp
adc
cs
and
hlt
mov
movsl
or
enter
movsl
orb
mov
add
test
and
test
inc
sti
sbb
sbb
pop
and
adc
pop
clc
mov
push
sub
int3
fdivs
dec
mov
clc
cwtl
shr
push
jb
gs
push
inc
test
lahf
lahf
adc
cltd
unpcklps
and
xchg
mov
fwait
push
les
in
subb
adc
push
cli
adc
or
sarb
mov
and
push
and
loop
int
mov
pop
jno
and
repz
das
add
rclb
and
shll
sub
jl
xor
negb
and
aam
imul
or
cmp
jno
mov
and
imul
cwtl
mov
jg
pop
sbb
xor
imul
sbb
inc
lods
int3
sbb
in
icebp
fs
jl
xchg
movsl
xchg
call
cmp
or
int
pop
outsl
jae
outsb
ljmp
rclb
or
jno
push
jl
jle
imul
push
loop
aam
scas
not
sbb
xor
repnz
push
sbb
iret
add
mov
fidivrl
shrb
cmpb
ret
inc
cmp
std
dec
cmpsl
aad
jno
lea
jnp
test
dec
dec
push
je
jmp
sub
push
hlt
in
fmuls
pop
sbb
sub
xor
repnz
bnd
int
mov
adc
or
adc
mov
movsb
push
out
adc
andl
push
fmuls
inc
mov
int3
subb
push
fsubl
aad
mov
sbb
adc
sti
pop
in
sub
dec
mov
data16
mov
sbb
xlat
test
lods
sub
fxch
test
inc
aas
jo
or
mov
mov
jae
push
pusha
sbb
jnp
in
orb
aas
push
sbb
jle
or
mov
adc
mov
mov
pop
mov
jnp
push
sub
ret
add
pop
mov
xchg
fbstp
cmp
push
fstpl
out
mov
mov
shlb
jmp
jg
jmp
push
mov
ds
rcrl
inc
je
in
cmp
mov
ljmp
imul
push
scas
stos
mov
cmc
aam
adcl
ja
mov
ljmp
sbb
test
popl
jle
push
sbb
rcll
mov
aad
jb,pt
push
jp
mov
fdivr
lock
sbb
pop
insl
xchg
leave
dec
mov
test
mov
mov
push
jbe
scas
cmp
lea
faddl
mov
sub
mov
sarb
lret
mov
fsts
xor
add
xchg
sub
cmc
dec
push
lea
testl
sub
lods
or
inc
mov
pop
push
jecxz
sbb
shr
adc
lods
out
in
add
int3
inc
mov
xor
in
dec
mov
jmp
cld
scas
xchg
push
inc
push
mov
jg
and
subb
push
or
cmp
inc
xchg
mull
std
and
sub
in
sbb
ljmp
mov
cmp
lea
lahf
xor
add
lods
ja
push
mov
cmc
cmc
pop
push
inc
inc
aaa
xchg
or
pop
push
loop
loope
inc
xchg
iret
loop
mov
sti
mov
dec
push
fmulp
ret
or
push
adc
jo
cmp
imul
fsubrl
push
pop
test
xchg
movsl
lock
lods
into
xlat
or
pop
fcoml
rcrl
mov
popf
gs
mov
loopne
xchg
dec
jl
je
jle
out
sbb
rorl
movsl
add
mov
pop
cmp
push
les
xor
cltd
mov
cmp
inc
mov
sar
sbb
or
js
inc
and
shl
test
or
ljmp
dec
xor
addr16
cmovl
insb
out
data16
repnz
fwait
lret
and
js
movsl
fs
pop
pushf
adc
sub
js
pusha
mov
pop
adc
or
pmullw
mov
mul
adcb
dec
add
movsl
cmc
ret
sbb
push
cli
fwait
xor
mov
data16
insb
das
xorl
sub
cmp
fdivrs
gs
popf
addb
cmp
sub
push
add
push
xor
lret
sti
jnp
in
rcrb
xor
xchg
jbe
loop
mov
lods
or
jg
fcmovne
adc
sbb
pop
mov
insl
jecxz
mov
cmc
inc
push
push
add
jg
into
sti
push
sbb
sahf
inc
jl
cltd
xchg
shrl
jo
rorb
mov
bnd
cs
sahf
in
mov
xchg
xor
mov
mov
out
xchg
push
cltd
xchg
cltd
aas
jns
dec
cmc
fxch
xor
jb
inc
imul
imulb
xchg
hlt
inc
fwait
out
mov
adc
cmpsl
sub
addr16
xor
test
xor
stos
in
loop
pop
mov
outsb
cmp
out
mov
sbb
sub
mov
or
add
cltd
daa
pop
out
jge
mov
xor
mov
xchg
in
ucomiss
push
jge
out
jno
fdivrs
ret
jmp
mov
test
orb
push
xchg
test
cmpsl
xchg
mov
pop
lret
and
scas
add
mov
sti
push
mov
cmp
sub
movsb
test
push
inc
scas
cmp
std
mov
sub
out
mov
mov
cmp
fdiv
inc
add
xchg
mov
inc
mov
jge
inc
std
loop
fmull
mov
scas
xchg
bound
notl
mov
adc
subb
sbb
cmpsb
test
lock
inc
mov
shlb
inc
ret
out
repz
notb
stos
cmc
ja
mov
add
mov
jae
imul
xor
scas
jg
call
cli
dec
rcll
icebp
pop
push
outsl
inc
mov
or
cld
or
repz
cmp
scas
xchg
aaa
call
pop
cmp
ljmp
fcmove
or
mov
fs
push
cmpsl
adc
cmc
int
pop
aam
lock
ret
decl
shl
ljmp
push
xor
fmuls
or
bnd
jbe
mov
outsl
xorb
sub
clc
lds
push
xor
and
adc
dec
cwtl
int
jmp
jbe
pop
mov
rclb
mov
and
pop
test
cwtl
scas
and
insl
xor
cmp
and
icebp
cmp
mov
jbe
int
pop
fdivs
push
inc
fcmovne
mov
imul
scas
fwait
adc
out
bound
push
shll
inc
ja
orb
nop
popa
shr
movsl
test
inc
insb
inc
push
cmp
mov
sub
into
sub
xor
das
les
sbb
push
arpl
addb
in
popf
pop
cmpsb
es
pop
dec
out
add
sbb
mov
outsb
fwait
popf
jbe
adc
fsts
lods
shrb
inc
jle
inc
enter
sub
jo
and
popf
int3
addr16
jmp
mov
stc
jge
pop
daa
and
into
and
push
xor
stos
dec
mov
mov
push
sub
push
lcall
adc
repnz
sti
psadbw
push
mov
notb
adc
mov
add
sahf
add
movsl
jge
inc
repnz
pop
out
xchg
ljmp
mov
stos
popf
push
mov
xchg
test
es
sub
fists
outsb
push
call
loopne
mov
xor
xchg
imul
inc
mov
andl
popf
sub
jne
or
ret
addr16
in
test
leave
pop
jb
xchg
add
ret
push
jno
enter
insl
repz
sub
outsl
lea
mov
dec
jbe
push
enter
aas
fldcw
lcall
dec
pop
jnp
lock
mov
cld
out
in
and
mov
popa
popa
sbb
into
mov
or
mov
mov
inc
les
movb
jmp
je
sar
inc
cmpsl
loopne
jb
fwait
xchg
mov
loope
hlt
movsb
cmp
adc
jmp
push
mov
int
outsl
aam
testl
popf
jns
sbbl
or
adc
loopne
lahf
push
punpcklbw
xor
rcll
xor
jns
cltd
std
inc
lods
fdivl
or
pop
movsb
inc
idivb
xorb
cmc
and
xchg
and
xchg
push
mov
popf
mov
ret
movsb
adc
aas
and
or
lahf
push
xor
jne
xchg
ja
je
mov
mov
mov
mov
daa
test
test
and
add
imul
dec
addb
leave
xchg
xchg
pop
mov
mov
nop
xor
aad
sub
dec
push
pop
jge
inc
mov
fdivp
dec
fcmove
and
popf
pop
popa
or
sub
jnp
sub
or
and
jle
jl
jno
fistpl
out
or
cmp
adc
loopne
xor
dec
cld
lea
cld
push
adc
scas
add
shr
xor
div
ds
mov
pop
pushf
ss
addr16
fsubrs
mov
push
imul
xlat
cld
pop
push
jno
es
jl
cmp
arpl
jg
dec
add
in
test
mov
pop
push
adc
dec
rolb
inc
jno
pop
cmc
push
adc
dec
mov
add
push
inc
xor
dec
mov
jo
lret
add
dec
lock
gs
sbb
cmpsl
mov
cmc
cmpb
lahf
jg
mov
ja
push
mov
stos
nop
adc
mov
cmpsl
fdecstp
rcrl
sub
or
aaa
dec
mov
sub
inc
pop
mov
out
es
jg
stc
lcall
jo
loopne
and
out
and
push
dec
cld
mov
push
pop
or
insb
mov
push
frstor
arpl
push
arpl
insb
sbb
xlat
dec
mov
dec
lds
push
and
or
mov
jl
and
stc
mov
mov
sub
xchg
dec
dec
sub
mov
xor
cmpl
out
mov
sub
mov
dec
inc
lea
test
je
in
mov
mov
test
lahf
jg
rorb
fistl
cmp
lret
push
movsb
xchg
adc
je
push
cmp
addb
sahf
sub
push
jno
cmp
sti
icebp
pop
fisubrl
pop
sbb
jbe
push
pop
jmp
or
subl
es
jl
fldenv
scas
shl
es
and
mov
call
cmpsb
repnz
xor
sub
enter
pop
mov
loope
dec
inc
inc
test
shl
cwtl
adc
xor
mov
jbe
arpl
pusha
lea
or
outsl
cmpb
daa
imul
xchg
fcoml
pop
lahf
ljmp
lods
aaa
fmuls
xor
jp
lahf
xchg
mov
and
mov
mull
cmp
and
pop
push
jmp
lahf
fadds
cmp
lods
sbb
push
xchg
xchg
pop
jno
cmp
and
sbbb
mov
mov
mov
fs
pop
xlat
pop
in
jbe
popa
sbb
lock
fnstcw
in
lret
movsl
aaa
xchg
and
fs
xchg
pusha
orl
dec
rorl
sub
fcomip
movsl
mov
insl
jns
js
pop
pusha
jle
sbb
xchg
pop
add
inc
call
lea
fnstcw
xchg
add
subl
cmp
cs
jmp
ret
sub
push
out
inc
push
add
push
rolb
xor
xor
jae
stos
jns
jbe
sub
dec
dec
xor
int
sbb
ljmp
loop
jo
cmpb
je,pt
fildll
mov
mov
jl
xchg
rorl
jne
mov
push
mov
out
cltd
adc
adc
push
fiadds
sub
jge
mov
xor
sbb
ret
fucomp
xchg
cs
dec
push
pop
std
add
stos
and
notb
xor
test
add
lcall
or
add
cli
nop
rcr
movsb
addb
push
into
lret
lea
pop
add
and
xchg
push
ljmp
idivb
mov
jae
dec
jg
add
adcb
mov
push
call
mov
stc
push
or
mov
or
daa
leave
pop
mov
sub
jle
push
sub
and
cmp
inc
nop
xchg
jne
je
aad
cltd
and
movsl
popa
insb
aam
jae
dec
dec
test
fistpll
ret
dec
or
test
push
loope
adc
sub
jmp
inc
or
inc
adc
loopne
cmp
add
xchg
mov
test
xor
sbb
out
mov
jb
pop
mov
or
lds
fadds
sub
fcom
xchg
jmp
cmpsl
imul
aad
dec
lcall
addr16
rcrb
iret
pop
aad
lea
int3
lret
mov
daa
jmp
sbb
nop
xchg
adc
mov
push
push
jg
and
fldcw
xor
in
xor
xchg
mov
cltd
add
sbb
push
mov
js
or
negl
cmpsl
fidivs
inc
mov
pop
aam
xor
adcb
pop
loop
das
test
lcall
jmp
adc
mov
sub
lods
ret
das
xchg
mov
js
jno
push
js
jo
push
rorl
jg
xchg
mov
xor
add
pop
scas
leave
pushf
test
push
mov
pop
push
pop
and
in
add
clc
sbb
aaa
repnz
jp
add
mov
xor
mov
or
nop
cld
enter
frstor
in
lcall
mov
stos
pop
mov
lret
adc
pop
dec
out
push
mov
cmp
sub
aas
add
ss
cli
test
pop
ret
or
insb
xchg
pop
mov
xchg
ret
das
push
sub
jne
mov
scas
mov
or
xor
push
or
inc
or
ficomps
mov
pop
inc
xor
test
jmp
cmp
shll
add
out
ja
pushf
lret
ljmp
pop
sub
ss
repnz
pop
add
scas
out
mov
push
inc
in
enter
jo
cltd
and
mov
fst
leave
mov
es
xor
sbb
rorb
test
push
sbb
clc
push
pop
pusha
cmp
add
mov
les
test
push
sub
inc
cmp
fcompp
aaa
ss
movsl
mul
movsl
and
adc
xchg
fwait
cmp
shr
mov
xchg
ret
xor
fwait
pop
cmc
adc
aaa
pop
sub
sbbb
out
pop
sar
inc
mov
mov
lgs
mov
fistpll
dec
push
push
stos
int3
pusha
stos
lds
stos
mov
jnp
fmuls
ficomps
mov
ja
jno
ficoml
insl
pop
lahf
sbb
jne
jmp
stos
aam
lcall
xlat
loopne
inc
fnsave
dec
jge
int3
outsl
pop
jl
inc
mov
mov
mov
mov
in
mov
jae
in
outsl
sbb
mov
fsubl
or
jmp
mov
lods
les
movsb
dec
out
nop
push
lret
cmp
or
loope
adc
lods
mov
fstpt
lcall
sub
xchg
outsb
orl
loop
rol
jb
adc
jmp
jns
test
orl
xchg
push
pop
movsb
xor
rcll
fstl
adc
lcall
jl
mov
jb
inc
aam
lock
repnz
dec
loopne
hlt
out
pop
fildll
mov
ret
enter
xchg
test
add
maxps
mov
push
je
push
inc
daa
out
cmp
and
enter
testl
jg
jbe
in
jge
adc
test
jmp
dec
outsb
mov
push
fstl
iret
ss
popf
sbb
loopne
jne
aas
cmp
sahf
les
imul
mov
int
out
cmp
pop
jns
scas
cmp
fisubs
sub
xchg
xor
sbb
and
xchg
loop
lret
jno
lret
ret
xor
mov
mov
inc
idivl
sub
es
dec
mov
das
mov
jecxz
mov
stc
fstpl
imul
outsl
sub
leave
test
gs
jne
push
push
cmpb
nop
mov
repnz
sbb
lea
cmp
aas
dec
cmp
mov
leave
sub
jae
adc
lds
dec
jmp
sub
ret
cmp
mov
mov
sti
fs
mov
iret
add
ljmp
sub
ss
jge
sbb
jb
pop
fidivrl
inc
dec
mov
stc
or
jl
hlt
pop
icebp
cltd
push
push
cmc
jo
jbe
fdivs
push
lret
fwait
cmp
test
xor
outsb
pop
or
stos
jnp
fsub
bound
add
add
enter
leave
or
loopne
cmp
mov
push
arpl
stos
outsb
lahf
xlat
clc
dec
in
xchg
sbb
push
cmpsl
data16
cmp
and
cmp
mov
outsl
sub
adc
jp,pt
jbe
call
test
cmp
sub
ret
ret
bound
negl
aad
mov
jo
in
stos
xor
xor
in
cmp
mov
mov
cmp
fsubs
add
pop
stos
cmp
pushf
or
mov
sbb
lret
stos
sub
ja
mov
push
cli
stc
dec
mov
outsl
insb
push
pusha
mov
push
inc
int
loope
fists
inc
inc
mov
loope
add
addr16
xor
sbb
ss
xchg
dec
jb
mov
mov
int3
stc
inc
pushf
outsb
xchg
pop
xor
jle
cwtl
cmp
adc
sub
dec
test
call
sar
sbb
das
add
int
dec
out
fsts
in
fldcw
clc
push
pop
ds
je
xchg
pop
jp
lahf
mov
test
jno
movsb
push
cwtl
mov
push
in
and
jmp
icebp
sarb
sbb
rcrb
mov
pop
push
lcall
xchg
lret
fisubrl
xchg
bound
dec
or
ja
ds
mov
aaa
add
mov
add
cltd
mov
into
cmp
cmpsl
pop
lret
je
sub
iret
mov
cmp
xchg
pop
cld
sub
ja
outsl
icebp
pop
dec
arpl
cli
push
mov
inc
xchg
cmpsl
sahf
pop
dec
pop
push
adc
push
insb
sub
add
test
and
mov
lods
add
stc
pushf
dec
xchg
cmp
ljmp
dec
push
and
mov
test
nop
lret
push
fcmovnbe
aad
pop
xor
dec
adc
push
mov
and
or
cmp
cmpsb
sbb
cmp
lcall
popa
aad
pop
addb
xlat
test
jo
cltd
push
push
inc
out
stos
xor
cmp
jae
inc
cmpsl
std
loop
out
hlt
ljmp
push
imul
call
enter
pop
pushl
jns
fldenv
orl
jae
push
cmp
mov
jb
ljmp
push
insl
cmp
xchg
mov
xchg
sub
lods
repnz
ret
adc
cmp
cmpsb
push
jp
jle
mov
movswl
add
mov
je
jnp
pop
fmuls
dec
fbstp
add
push
movsl
xchg
decb
mov
jno
adc
sbb
insb
fs
mov
movb
cwtl
not
in
fldln2
out
jns
or
push
cmp
jecxz
jle
inc
ss
mov
cld
dec
xchg
sub
xlat
mov
xchg
sub
pop
sbb
push
xor
pushf
aad
scas
sbb
faddp
or
js
xchg
mov
imul
lcall
scas
jmp
cmp
mov
inc
sub
int3
add
inc
pop
or
out
ret
cli
leave
push
movsb
imul
push
and
jmp
icebp
repz
push
stos
sti
fmull
dec
fdiv
das
sbb
cltd
cmpsl
out
daa
inc
dec
sbb
push
jp
outsl
adc
jo
adc
test
stc
aaa
repz
icebp
mov
loope
fwait
test
inc
das
jne
dec
into
in
dec
dec
mov
inc
rorl
test
outsb
fcomi
movsb
sbb
jae
cltd
test
push
dec
fidivrl
test
je
mov
int3
mov
scas
js
pop
dec
imul
dec
fsts
scas
mov
ja
jg
push
xor
mov
ljmp
imul
jg,pt
das
movsl
sar
loop
rol
jnp
inc
test
lods
pop
xchg
aam
sbb
and
je
lahf
xchg
pushf
sti
cwtl
and
push
push
or
dec
pop
xchg
mov
pop
push
mov
mov
lret
incb
call
dec
sbb
enter
pop
popf
rclb
shll
repz
arpl
aaa
int3
xchg
cld
cmp
js
dec
into
mov
mov
mov
pop
das
push
std
pop
into
push
jmp
dec
xchg
and
mov
xorb
xor
jmp
mov
popf
out
pop
jnp
inc
out
push
jbe
mov
movsb
xchg
mov
int
lea
ret
loope
jecxz
push
stos
dec
adc
sub
je
test
and
adc
movsb
push
push
and
cmp
dec
add
sarb
pop
data16
hlt
cs
dec
pop
adc
sahf
out
ret
mov
xor
or
in
mov
sbb
add
cmp
add
fidivrl
movl
addl
push
repz
xor
xor
jo
lret
bound
dec
jb
add
sub
and
outsl
insb
loopne
sbb
xor
jge
rorb
pusha
jnp
pushf
push
in
add
pop
sbb
push
mov
jmp
lret
mov
repnz
fwait
jle
mov
imul
jle
cli
stos
mov
jbe
jl
and
out
es
inc
inc
les
fdivr
push
sbb
mov
push
sbb
mov
outsb
daa
daa
lock
rorl
cmpsl
sub
mov
daa
test
rcrb
mov
push
push
insl
sarw
dec
jno
jmp
inc
rcll
pushf
sub
iret
mov
ljmp
imul
in
pop
pushl
jle
les
push
inc
jmp
ljmp
push
jae
xor
inc
dec
mov
leave
fs
fsubl
daa
gs
xor
addb
aam
and
ret
int
sub
lods
fnstcw
aad
inc
lcall
add
dec
jo
aam
imul
and
or
mov
sti
push
push
aaa
orb
inc
cmp
cmp
shrb
adc
add
out
dec
mov
fistpl
adc
bound
add
stc
lds
js
pushf
pop
xor
cli
sbb
and
fdiv
cmc
sbb
dec
pop
lds
jnp
mov
sbb
je
mov
test
leave
or
inc
pusha
or
enter
mov
movb
popa
push
stc
xor
leave
cs
add
cmc
dec
stc
cli
mov
ds
aam
rcrl
out
lods
fsubs
movsb
rol
adc
pop
pushl
mov
jbe
cmp
sbb
in
pop
xchg
insl
pop
repnz
cmp
call
push
mov
mov
in
out
int3
ja
fcoml
lods
adc
dec
orb
cmp
in
xor
xchg
inc
mov
mov
xchg
pop
xor
out
decl
mov
fnstcw
xchg
std
inc
pop
push
pop
scas
loop
movsb
wbinvd
outsl
cmpb
fwait
pop
cmp
mov
mov
adc
adc
inc
jb
ret
pushf
jmp
mov
in
push
loopne
dec
push
mov
sub
imul
cmpsb
push
cmp
stc
movsb
shlb
mov
je
stc
stos
cltd
sub
mov
les
xor
adc
push
jmp
jge
cmpsb
test
cmpsb
cmp
or
lods
add
add
jl
mov
push
dec
mov
xchg
xor
push
jg
repnz
pop
sbb
jae
add
stos
add
enter
mov
int3
das
fldt
out
fdivrs
ret
lods
xchg
cltd
movsl
lds
push
inc
add
and
jge
add
dec
into
ss
jecxz
mov
leave
bound
ss
andb
cmp
cmp
xchg
shrb
mov
pop
std
mov
movsl
imul
pop
out
or
aad
pop
ja
adc
repz
xlat
pop
mov
subb
jecxz
fidivrs
call
ja
in
rcrb
add
pop
pop
mov
inc
cmp
call
adc
shlb
xchg
jl
mov
bound
xor
mov
add
and
or
and
insl
repz
test
insl
cs
out
sub
pmaxub
out
icebp
out
xchg
add
rcl
insl
in
mov
les
cmp
jmp
clc
mov
lahf
mov
add
or
jno
pushf
out
lret
cmovo
cmpb
xchg
sbb
mov
bound
lock
sub
adc
js
push
push
mov
push
clc
adcb
cld
and
data16
insl
lds
push
dec
orl
dec
xchg
pop
test
popa
and
out
in
es
add
jno
push
xor
dec
cmc
lock
jns
sbb
lea
pop
cltd
int3
flds
sbb
xchg
adc
dec
jp
inc
cmp
sar
sbb
pop
in
sbb
loope
in
add
mov
xor
scas
inc
sbb
add
out
mov
sbb
lcall
shll
sub
pop
pop
mov
pop
xor
pop
test
mov
jecxz
pop
test
lret
and
mul
xchg
iret
sub
lcall
xor
pop
jb
or
cmp
fadds
inc
loopne
pop
sub
jp
add
mov
shl
push
mov
addl
test
mov
outsl
mov
repz
cltd
cmc
sbb
vmread
iret
sahf
cli
enter
test
fbstp
xor
pop
push
fdivrp
pop
cwtl
cmp
loope
iret
mov
add
or
sbb
fwait
add
loopne
inc
jbe
cmpl
xchg
stos
jbe
stos
xor
xor
mov
rcll
out
push
sahf
mov
sbb
in
jl
push
stos
and
lock
out
arpl
testb
jle
sbb
repz
inc
cmpsb
pushl
and
and
lea
xor
pop
das
into
nop
mov
call
mov
pop
repnz
pop
push
push
es
stos
mov
popf
ret
pop
mov
mov
std
inc
and
add
adc
jge
and
popa
jnp
sbb
dec
ret
mov
mov
inc
adc
insb
mov
sbb
xor
mov
sti
sbb
subl
mov
mov
jb
ret
inc
xchg
sub
sub
sahf
mov
lcall
xchg
adc
lods
iret
sub
cwtl
mov
jg
cmpsl
test
push
das
cltd
adc
mov
ss
dec
nop
adc
xchg
xchg
xor
xor
dec
lds
es
sub
stc
dec
jo
jmp
mov
cmpsb
fdivp
clc
sbb
jmp
es
rcrb
xchg
push
sbb
int
lahf
sbb
push
jno
xchg
push
hlt
mov
xor
and
pop
pop
xchg
mov
out
add
cwtl
and
test
bswap
and
lds
testw
lods
in
int3
mov
pop
stos
aam
stos
and
inc
push
xchg
jl
mov
xorl
mov
pop
xor
stc
stos
mov
xchg
xchg
outsb
es
and
loop
mov
ljmp
mov
push
insl
or
add
xor
jg
or
inc
push
mov
or
loopne
lret
add
stc
ds
cmp
push
shl
and
or
imul
adc
pop
js
movsl
addb
sbb
cmp
movsb
rclb
sub
xor
rolb
dec
sub
jle
cmc
ljmp
cmp
mov
adc
mov
push
test
mov
sub
sbb
push
dec
xlat
push
sbb
pusha
jecxz
add
stc
frstor
cmp
fs
mov
mov
loop
and
mov
push
sahf
jns
hlt
xchg
and
std
push
sub
bswap
xchg
adc
pop
mov
fwait
pop
add
ret
insl
into
dec
xor
rorb
fistpll
mov
jge
adc
xchg
lret
hlt
aaa
loopne
inc
repnz
push
sbb
mov
outsb
xchg
jmp
fsubrl
std
outsb
mov
jnp
xor
mov
mov
out
in
jbe
pop
or
sub
bound
jmp
iret
xchg
lods
icebp
jns
push
pop
mov
xor
std
push
pushf
fsincos
or
sub
mov
out
and
xchg
mov
cmp
loop
xchg
or
dec
ss
dec
cmpsb
pushf
stos
mov
pop
aas
ret
pop
cmp
sahf
mov
dec
mov
sbb
xchg
jns
lret
jecxz
aam
xor
pop
out
stc
sbb
push
fwait
sub
jno
loope
rolb
or
outsb
jp
scas
neg
pop
scas
stos
inc
pusha
jae
pop
fldl
mov
lret
popa
jb,pn
fsts
mov
push
and
aad
xchg
dec
sbbl
mov
pop
xchg
in
lret
test
js
imul
pop
enter
daa
push
call
mov
mov
shl
inc
ja
push
movsl
into
xchg
imul
sbb
jnp
out
cmp
xor
jae
dec
mov
divl
cmp
push
addr16
repnz
leave
and
jnp
sbbl
fs
js
subb
mov
mov
fcmovne
aam
mov
cltd
stos
pop
out
push
push
mov
outsb
clc
aam
inc
les
jne
cli
enter
or
mov
or
stos
add
or
ficomps
or
mov
jbe
inc
cli
fiadds
out
xchg
mov
aas
fiadds
in
xor
adc
stc
adc
inc
or
and
das
das
out
clc
sbb
lret
lods
pop
mov
push
inc
lahf
pop
mov
mov
dec
int3
or
inc
pushf
cmp
or
fbld
repz
lret
lods
push
aaa
or
test
sub
dec
push
test
in
iret
cli
and
add
pop
push
addl
sub
lcall
mov
inc
and
jmp
je
mov
jbe
jno
orb
lods
test
movsb
ud0
push
mov
sub
in
pop
in
xor
push
push
rolb
stc
cmp
stos
push
shlb
loope
jg
adc
inc
jae
pop
mov
ljmp
xor
int
jmp
jae
test
add
roll
sbb
push
call
pusha
or
jl
cmp
cmc
fisubl
mov
jb
push
mov
call
testl
mov
dec
mov
icebp
adc
xchg
call
mov
insb
cmp
aam
jp
jae
mov
fldenv
xor
in
ret
add
pop
and
pop
testb
shlb
dec
inc
sub
add
add
ret
dec
push
jmp
mov
pusha
scas
cmp
xor
and
mov
addb
xchg
shll
cli
mov
inc
int
movsb
cmp
and
rcrl
sar
bound
cmp
aas
insb
add
sub
inc
xchg
adc
jo
jg
sbb
addr16
hlt
push
jo
aam
je
xchg
cmc
and
dec
fcompl
addl
sahf
and
dec
adc
xor
xchg
xchg
mov
adc
into
aas
sbb
push
loopne
push
je
push
jb
negb
jo
fistpll
xor
or
pop
fnstenv
adc
pusha
shll
out
cmp
or
out
mov
std
mov
or
sbb
jmp
xchg
xchg
in
mov
push
sti
outsb
js
imul
jge
in
push
lds
adcb
cmp
cmc
xchg
jne
pop
lcall
movsb
jbe
test
sub
ret
loopne
imul
cli
xchg
iret
jbe
jno
iret
in
bnd
cmp
pop
and
and
xchg
in
xchg
xchg
fwait
dec
lret
add
cmpsb
mov
fistpl
push
xchg
es
push
xchg
incb
adc
xchg
sub
jg
sahf
subb
insb
js
aas
in
scas
add
inc
fstps
cmp
adc
push
or
scas
pop
mov
inc
inc
sbb
andl
sbb
in
stos
sar
icebp
cmp
fldenv
scas
push
push
add
sub
xor
lea
in
cmp
call
push
cli
mov
push
jecxz
je
iret
mov
testl
jg
popf
jg
test
fstl
repz
cltd
xor
adc
ret
push
aas
into
mov
jno
cmp
sbb
popf
or
scas
adc
gs
cmp
cmpsl
jl
pop
sub
mov
jle
sarl
in
xor
insl
or
inc
xor
xor
lods
mov
in
lcall
int
ret
loop
jnp
and
push
sbbb
imul
jnp
sarl
push
lods
ljmp
dec
lcall
pushf
cld
cmp
jecxz
pop
in
pop
or
xor
jmp
add
sbb
sahf
pop
lds
jle
popa
add
sbb
test
test
mov
repz
fldt
mov
xchg
jmp
out
dec
mov
fcomps
imul
movl
add
mov
xor
xor
je
shlb
and
jmp
mov
arpl
outsl
sbb
push
aaa
ja
adc
out
ss
sbb
jle
mov
inc
or
adc
fdecstp
cltd
bound
lods
inc
push
sahf
repnz
xor
inc
and
push
push
xchg
enter
hlt
mov
sub
insl
popa
les
jecxz
xchg
dec
pusha
inc
xchg
lret
outsl
and
ja
subb
jp
xchg
add
mov
ja
cltd
iret
cmp
push
push
ds
stos
stos
jle
lock
jge,pt
cmpl
data16
hlt
repnz
cmc
fcompl
dec
cmpsb
xchg
shlb
jne
dec
xchg
stos
imul
lods
stc
dec
std
lea
sbb
sub
inc
popf
aaa
mov
test
or
inc
xchg
lcall
arpl
add
aad
mov
sbb
add
pop
jbe
xorb
aaa
pop
pushl
jge
or
pop
xchg
jno
add
or
loopne
xchg
xchg
push
jecxz
cmpsl
popa
inc
jno
aam
neg
mov
ret
outsb
shll
fldenv
adc
xchg
aad
in
cltd
inc
jge
xchg
inc
cmp
push
push
test
xchg
adc
idiv
lahf
cmp
jns
scas
cld
sti
mov
jno
xchg
mov
arpl
test
jns
mov
push
dec
push
jnp
pop
subb
cmp
mov
or
push
stos
cli
dec
xchg
mov
jl
cmp
out
jo
mov
xchg
clc
repnz
ss
fwait
push
push
jg
pop
js
adc
jae
inc
movsb
pop
in
xchg
or
stc
fcmovnb
ljmp
scas
xchg
rorb
mov
push
ret
jnp
sarb
outsb
mov
aad
sar
jmp
bound
dec
push
data16
xlat
shrl
aam
mov
add
lret
sbb
pusha
add
jmp
mov
and
xchg
cmpsl
push
shrb
push
repz
push
or
sub
shr
lret
push
mov
mov
test
or
dec
push
pop
std
dec
inc
mov
mov
aam
add
hlt
push
push
fwait
mov
push
je
adc
shlb
jge
sbb
add
pop
cmc
pop
lds
sub
push
pop
mov
lret
sub
pop
fsubrs
stos
imul
dec
pop
int3
scas
xor
inc
inc
into
cli
imul
outsb
jnp
movsb
iret
cwtl
xor
or
clc
pop
scas
dec
jge
int
add
pop
adc
std
sub
dec
shrl
lods
xchg
repz
sbb
inc
cmp
into
and
sbb
mov
dec
rcl
dec
cmpsb
adc
xchg
or
cmovbe
sub
mov
or
jp
rcll
mov
cmc
xor
ror
dec
jo
xchg
ret
das
je
std
outsb
or
add
sbb
sub
cmpsl
dec
or
int
loope
ret
out
mov
dec
cmpsb
rorl
mov
dec
fists
aas
vmovmskps
imul
xchg
leave
repnz
pop
pop
in
rcll
stos
sub
sbb
aam
jns
jno
cmpsb
mov
lods
cmc
jns
xlat
sub
mov
arpl
push
les
push
mov
xchg
mov
mov
mov
xchg
nop
mov
xor
pusha
data16
sbb
loopne
outsb
data16
in
lods
or
lcall
test
lock
ds
sub
aaa
and
push
scas
inc
rolb
mov
pop
push
test
xor
push
lret
xchg
xorb
push
jae
int3
jp
cmp
pop
inc
adc
leave
frstor
dec
imul
leave
fldenv
adc
dec
cmp
std
xchg
mov
jle
clc
imul
mov
mov
aaa
nop
lea
cli
sub
sub
mov
and
ss
hlt
lahf
push
gs
mov
stc
cmpsl
pop
push
data16
cmp
adc
bound
or
das
inc
xor
mov
imul
xor
or
sub
jns
insl
mov
in
ljmp
adc
std
lret
mov
sub
pushf
inc
cltd
or
outsb
cmpsb
lahf
adc
cli
call
fldl
mov
ds
test
xor
inc
aam
jae
imul
stc
sbb
test
lods
adcl
scas
push
sbbl
xlat
xchg
mov
mov
jl
shlb
jae
stos
sbb
cmpb
out
mov
stc
rclb
jae
inc
adc
repnz
leave
hlt
push
loopne
repnz
call
insl
hlt
xchg
or
jle
pop
mov
xorl
xor
pusha
ja
inc
jp
call
push
mov
and
cli
sbb
sub
movsl
inc
enter
gs
les
pop
cmpsb
jecxz
xchg
in
mov
mov
push
sub
fsubs
clc
loope
jbe
test
or
and
sbb
repnz
iret
fldl
mov
mov
loope
je
popa
ret
arpl
insb
push
arpl
loope
aad
adc
adc
test
adc
lret
outsl
sbb
sub
lret
loopne
mov
and
or
test
je
stos
mov
adc
mov
fdiv
out
dec
lds
outsb
inc
jl
cli
push
or
icebp
int
jno
jmp
ss
rclb
push
test
scas
cmp
cld
add
out
adc
push
enter
dec
mov
add
lods
loope
dec
jecxz
or
or
adc
cmpsl
cli
fcmovbe
bound
pop
popf
jo
int
push
sbb
movsl
push
sbb
push
stos
ss
push
test
push
test
idivl
lret
mov
adc
cli
leave
push
rcrb
lods
rcl
cmp
xor
dec
sub
inc
pop
inc
in
or
lods
jb
dec
xchg
push
push
aas
jg
jmp
out
stc
mov
movsl
mov
cli
xchg
jmp
dec
popa
inc
mov
pop
push
dec
mov
test
jbe
push
push
or
ficoms
cmpsl
pop
incb
test
les
mov
mov
inc
xlat
mov
insl
mov
loop
xor
inc
inc
les
xchg
pop
pop
dec
push
mov
pop
out
mov
sub
mov
popf
mov
sub
xor
xor
gs
jb
adc
imul
dec
incl
mov
or
orb
pop
sbb
push
xlat
cmp
sbbl
xlat
lods
rorb
rorl
adc
negl
cmpb
pop
xchg
dec
mov
dec
rcrl
xchg
sub
mov
das
or
mov
adc
lcall
cltd
inc
pushf
xchg
fcmove
les
mov
or
push
push
mov
and
add
dec
or
std
cmc
lea
mov
jmp
jne
push
sbb
lret
xlat
sbb
and
dec
or
push
icebp
daa
jg
hlt
jnp
subl
sarl
xor
ds
dec
add
pop
fsubs
dec
jb
divb
push
push
lcall
data16
enter
mov
adc
mov
loope
call
aam
add
sbb
repnz
xor
ret
mov
lret
popa
cmp
push
sbb
xor
pop
mov
test
or
aas
sub
jae
mov
push
inc
mov
stos
das
push
sbb
aad
mov
jmp
cmp
pop
hlt
jns
fsubs
pop
in
add
fimuls
jae
push
fbld
adc
pop
xor
lcall
fdivl
mov
mov
pop
pop
les
xor
test
jmp
sbb
xchg
jae
popf
leave
arpl
or
sub
cwtl
add
pop
xor
sbb
test
sbb
xchg
push
lahf
test
mov
add
push
mov
in
sbb
xor
insl
js
jnp
push
scas
dec
inc
dec
mov
sbb
outsb
and
call
cmpsl
clc
scas
and
popl
scas
call
stc
mov
or
pop
sahf
repz
jge
js
mov
fdivs
bound
iret
mov
dec
pop
ret
push
ja
sub
leave
mov
xlat
loope
addr16
out
outsl
lock
adc
dec
sti
push
test
jb
inc
cmp
mov
cmp
aas
jb
imul
data16
out
nop
add
pop
cwtl
cmp
idivb
add
lahf
mov
aad
xchg
jmp
sub
mov
iret
outsl
lock
dec
mov
loop
aaa
add
inc
jp
mov
mov
in
das
nop
pop
mov
adc
xor
jmp
int3
fyl2xp1
cmpsl
mov
jns
push
push
mov
lods
inc
cmp
lea
mov
ljmp
stc
call
pusha
fs
icebp
push
mov
jle
dec
mov
or
lods
adc
adc
insl
scas
imul
dec
je
or
xchg
cmp
adc
mov
lcall
mov
cmp
dec
sbb
ljmp
loopne
pop
and
enter
pop
and
inc
cmp
dec
jmp
pop
lock
pop
and
cmp
cmp
adc
add
mov
or
xchg
imul
sub
std
std
mov
cmc
nop
pushf
sahf
push
stos
mov
dec
inc
dec
jno
insb
sub
into
adc
inc
mov
mov
or
cwtl
mov
jge
ss
inc
dec
mov
lahf
dec
gs
push
cli
cmp
push
test
mov
leave
loop
roll
imul
or
mov
inc
mov
insl
sbb
mov
sbb
mov
push
inc
mov
fs
outsb
pop
jbe
ja
jmp
jmp
sbb
xor
sbb
push
testl
inc
test
dec
ffree
sbbl
sbb
mov
movl
enter
push
jg
jno
jmp
inc
xchg
adcb
repz
insb
out
jb
clc
shlb
call
out
push
add
mov
jecxz
cld
aaa
mov
leave
sub
sbbl
jb
pop
mov
mov
xchg
fisubs
mov
xor
leave
vpcmpeqd
jl,pn
push
or
mov
lcall
fs
mov
push
aad
in
fs
cmp
sub
imul
push
or
push
insb
xchg
push
pushf
adc
iret
dec
stos
xor
cmpsl
fisubs
and
jbe
pusha
rorl
xchg
push
fadds
jge
xor
mov
mov
push
sub
mov
adc
or
lret
inc
ljmp
stos
cwtl
xor
shl
add
scas
xlat
sqrtps
sbb
add
adc
pop
aam
rcll
loop
sbb
loop
pop
or
gs
sahf
out
and
dec
imul
cld
testl
es
frstor
push
js
pop
add
push
jg
hlt
cmc
mov
rcll
cmpsb
ficompl
fsubrs
push
mov
stos
fsub
adc
xchg
repnz
sarl
aas
pop
decb
dec
pop
js
push
fs
xor
jbe
push
push
inc
ja
imul
ss
cmp
insb
jns
cli
xorb
dec
incb
sti
insl
jo
frstor
mov
ljmp
lret
mov
add
mov
xlat
jnp
outsb
pop
arpl
or
jp
add
mov
loope
int
xchg
fistl
jge
test
mov
out
mov
push
mov
dec
sub
outsb
adc
dec
pop
mov
notb
loope
scas
add
xor
data16
push
pop
or
divps
adc
int3
xchg
insb
cmpsb
xor
pop
out
dec
out
and
jecxz
mov
sbb
es
cld
fmull
mov
cmc
xor
xchg
mov
jbe
imul
sub
cs
ds
inc
insl
cwtl
and
es
leave
aad
js
scas
cmp
std
addr16
scas
stos
aad
dec
test
arpl
call
mov
sbb
jl
mov
fmuls
and
loop
sbb
icebp
js
mov
fisttpl
repz
lods
and
in
mov
pop
popf
mov
lret
sub
add
push
stos
dec
xchg
insb
lds
fbld
js
ret
push
xor
xchg
sbb
mov
sbb
scas
into
addr16
fsubs
cltd
roll
dec
jg
jne
add
adc
cmpl
add
add
or
jo
outsl
mov
inc
stos
lock
cmp
int
enter
adc
sbb
in
lcall
xor
xchg
test
aam
and
mov
xor
inc
mov
ljmp
aam
or
add
and
xor
icebp
pop
inc
add
fimuls
push
push
or
dec
mov
cmp
aas
sub
mov
rorl
cmc
das
cmpsl
xor
push
jmp
cmp
in
loopne
hlt
out
cltd
repz
das
int3
pop
or
add
cli
fs
dec
sub
and
rcrb
adc
sub
jo
outsb
xchg
arpl
pop
imul
and
dec
psubusw
test
movsl
movsb
hlt
imul
xor
cmp
loop
lods
sbb
out
dec
jl
xchg
dec
xchg
push
pop
call
inc
or
cmc
cmp
decb
fndisi(8087
repnz
mov
out
cmp
ret
or
mov
adc
lss
js
ja
and
sub
leave
dec
nop
cmp
pop
push
xchg
jae
imul
pop
mov
enter
fbld
std
in
xchg
cmp
mov
xchg
dec
mov
mov
js
rclb
lret
push
mov
jl
xchg
pop
jg
out
and
mov
icebp
iret
hlt
data16
jnp
sbb
xchg
pop
insl
push
cld
imul
jnp
std
sbb
dec
xchg
test
or
sarl
inc
mov
xchg
cmp
data16
push
inc
push
adc
out
movb
jmp
shrb
add
insl
xchg
push
mov
sub
icebp
div
mov
mov
push
arpl
inc
jmp
push
clc
pop
push
and
mov
rcr
inc
sub
mov
cs
mov
mov
lcall
cmpsl
mov
pusha
adc
pop
pop
or
repnz
outsb
push
dec
popa
shll
jb
loop
out
fs
push
or
fmul
test
sub
xchg
and
push
daa
enter
mov
mov
or
mov
mov
ja
xor
push
xor
iret
and
stos
mov
fcompl
les
push
mov
ja
mov
mov
repz
insl
xchg
das
push
loope
inc
jno
arpl
inc
jg
cmp
movsl
bound
add
push
mov
rcrl
pop
add
das
fisubs
mov
mov
ss
out
ljmp
testl
xchg
lea
push
jnp
ds
orb
jp
adc
mov
ss
dec
lea
xor
movsl
jp
incb
scas
repnz
adc
adc
inc
out
in
scas
ret
lock
mov
ds
add
add
sbb
ret
fldln2
jmp
sub
sbb
push
jnp
xor
addr16
test
cmc
dec
stc
aas
lods
into
ljmp
dec
imul
insb
and
jg
lcall
arpl
fwait
pop
cmp
je
pop
pop
mov
sbb
jle
subb
inc
inc
lds
scas
sarb
dec
aad
ss
and
adc
sbb
jmp
xchg
mov
cmpsb
mov
mov
mov
ret
ror
xor
mov
arpl
dec
ss
lcall
mov
ja
sbb
repnz
cmp
std
cmp
sti
jb
test
jbe
sbb
adc
fiaddl
add
mov
adc
fldcw
xchg
push
and
jb
push
mov
mov
cli
pop
testb
and
negl
lahf
jmp
sti
inc
repnz
sub
movsl
push
in
mov
fcoms
mov
hlt
jg
push
cmp
mov
lret
test
sub
ret
jns
cmp
jmp
and
frstor
inc
dec
cmp
push
popa
ret
adc
jno
add
bound
jl
lcall
jae
adc
sbb
xchg
sbbl
in
iret
adc
cmpsl
push
pop
mov
jbe
push
stos
test
cmpsl
jl
jns
dec
fbstp
out
jge
hlt
call
pop
test
xchg
pop
mov
stc
push
pop
xchg
xor
cmp
mov
push
fstl
mov
or
pop
xchg
sti
mov
sbb
inc
jl
cmc
dec
mov
stc
fbld
cmpsb
pop
fldt
mov
sbb
cmp
push
fnstenv
popf
mov
insl
xor
popa
in
dec
mov
imul
pop
cli
negl
push
out
or
cmp
xchg
std
lea
cmp
js
cmpsl
push
in
gs
pop
fildll
js
adc
xor
xor
lahf
andl
sub
jge
popa
push
in
iret
mov
insb
or
arpl
add
adc
in
mov
mov
stc
dec
in
es
dec
or
sub
fdivrl
lahf
push
cmp
aad
add
ss
neg
push
mov
pop
lods
mov
lods
and
xchg
xchg
mov
stos
xchg
sahf
imul
enter
leave
lahf
xchg
sub
xchg
sti
inc
jbe
xchg
xor
adc
jg
dec
sub
mov
clc
iret
pop
inc
std
add
xor
jg
cld
outsl
jnp
incb
sub
pusha
ret
push
jle
inc
sbb
popa
mov
xchg
jle
clc
fsubrl
movsl
fimuls
das
push
mov
and
push
sub
test
ja
and
pop
fisttpl
sahf
mov
insl
dec
dec
cmp
scas
or
pop
adc
femms
cmpsl
lret
mov
ds
mov
and
push
inc
push
xor
mov
into
or
test
test
or
ret
imul
xor
sti
insb
sbb
fbld
sbb
inc
push
in
out
mov
andl
mov
lahf
xchg
in
fsubp
or
push
add
sbb
stc
sbbl
in
or
addl
mov
dec
xor
sub
lcall
lods
fstpl
pop
rcrb
lret
shrb
insb
push
mov
out
mov
xchg
pop
mulb
push
test
fcoms
loopne
push
insl
push
jg
xchg
into
or
fwait
xor
sti
xchg
push
outsl
jg
out
in
lods
push
ja
lret
xor
push
sub
addr16
aaa
cmp
adc
pop
jmp
cmpsl
mov
xchg
mov
xchg
mov
pop
insb
sbb
lods
xor
arpl
push
test
test
std
les
call
mov
push
pop
in
les
mov
pop
sub
shl
mov
dec
pop
fnstsw
mov
rol
mov
int3
scas
test
loope
xor
mov
pushw
ret
push
sub
and
out
repnz
je
jge
and
or
inc
xchg
aam
mulb
test
jle
test
imul
daa
push
dec
mov
ds
out
test
jno
mov
sub
jnp
negl
inc
call
mov
daa
ficoml
fwait
repz
jmp
arpl
mov
fs
adc
aaa
mov
icebp
jl
xchg
loopne
mov
roll
stos
pop
into
inc
push
dec
imul
loope
je
mov
int
inc
cmpsb
lret
xor
rorl
mov
push
insl
xor
cvtps2pd
mov
imul
mov
and
sub
sbb
pop
mov
out
cld
sbb
sub
xchg
sar
xor
pop
mov
flds
cwtl
push
jne
inc
repz
or
ret
lcall
rcr
pusha
icebp
fs
pop
mov
cmp
push
xor
stos
xor
dec
enter
test
shrb
adc
ljmp
cmp
nop
pusha
add
scas
dec
inc
cmpsb
add
sub
cld
imul
add
add
mov
mov
and
movswl
and
movzbl
dec
add
xor
imul
mov
inc
add
mov
inc
dec
mov
imul
dec
lea
dec
jne
mov
mov
add
movzwl
imul
mov
pop
dec
inc
pop
add
mov
pop
lea
dec
dec
inc
sub
lea
inc
inc
or
add
ret
push
xor
mov
add
add
add
or
sub
add
push
push
push
push
add
dec
mov
push
imul
lea
imul
and
xor
mov
imul
lea
mov
mov
sub
push
add
mov
xor
add
dec
push
inc
add
push
dec
lea
pushl
mov
call
add
add
mov
add
mov
mov
add
lea
movsbl
pop
ret
or
mov
inc
sub
inc
inc
movzwl
sub
mov
dec
mov
cmp
jb
xor
inc
inc
inc
add
inc
add
lea
and
sub
mov
sub
xor
mov
dec
xor
mov
dec
pop
dec
or
test
jbe
add
mov
mov
mov
dec
and
dec
sub
lea
inc
sub
add
inc
inc
add
add
lea
inc
add
mov
mov
lea
or
and
mov
mov
mov
movzwl
inc
movzbl
lea
dec
add
and
xor
and
inc
mov
inc
mov
inc
xor
mov
add
imul
mov
add
dec
mov
add
movzwl
xor
dec
jne
dec
mov
or
imul
sub
movzbl
add
sub
dec
movzbl
dec
dec
mov
sub
imul
dec
dec
lea
dec
sub
sub
mov
inc
mov
test
jbe
lea
xor
imul
add
movzwl
or
add
sub
sub
mov
lea
add
imul
and
sub
inc
lea
mov
sub
inc
inc
mov
and
movswl
mov
mov
or
inc
movzbl
add
lea
add
inc
lea
and
mov
mov
mov
xor
add
movzbl
dec
or
mov
inc
mov
mov
lea
dec
movzbl
dec
jmp
mov
push
or
mov
add
sub
imul
call
pop
ret
push
or
dec
imul
dec
movzbl
mov
inc
dec
mov
add
inc
sub
mov
inc
sub
mov
mov
imul
imul
lea
xor
add
sub
dec
xor
cmp
je
call
call
call
call
mov
dec
dec
imul
xor
lea
dec
inc
dec
mov
mov
inc
lea
dec
dec
movzbl
mov
imul
lea
mov
inc
inc
add
pop
mov
ret
push
mov
push
lea
dec
push
movzwl
push
dec
push
dec
xor
push
sub
call
inc
push
dec
inc
xor
dec
lea
inc
mov
add
add
mov
imul
dec
test
je
sub
add
dec
lea
mov
lea
dec
xor
inc
mov
dec
inc
dec
and
lea
or
dec
inc
repnz
dec
jmp
push
pop
mov
push
inc
movsbl
mov
dec
add
mov
dec
inc
inc
imul
mov
mov
call
imul
mov
mov
add
imul
mov
and
dec
movzwl
dec
dec
dec
inc
inc
inc
lea
mov
mov
call
inc
dec
call
dec
add
add
mov
mov
or
mov
call
mov
push
sub
movzwl
movzbl
mov
mov
dec
inc
movsbl
movzbl
add
movsbl
inc
dec
inc
dec
call
inc
add
movswl
inc
dec
xor
inc
sub
pop
mov
and
mov
add
movzbl
pop
inc
dec
pop
add
inc
dec
mov
pop
lea
imul
mov
dec
add
xor
dec
inc
pop
mov
mov
pop
xor
movswl
mov
dec
inc
call
lea
inc
xor
inc
ret
inc
mov
push
add
mov
push
dec
mov
push
inc
dec
push
inc
inc
push
inc
mov
mov
imul
dec
push
add
ret
push
mov
imul
and
mov
jmp
lea
add
inc
jmp
dec
mov
dec
mov
inc
mov
mov
lea
inc
dec
or
add
pop
pop
ret
push
inc
xor
add
lea
push
mov
add
push
movzwl
mov
push
sub
movswl
push
and
call
pop
ret
sub
dec
mov
dec
movzwl
mov
lea
dec
mov
add
movswl
mov
inc
movsbl
xor
add
mov
mov
inc
mov
inc
mov
mov
and
dec
sub
lea
cmp
jb
add
push
and
dec
mov
add
xor
push
dec
or
push
inc
lea
xor
add
inc
xor
mov
sub
xor
mov
push
lea
dec
xor
sub
add
mov
inc
dec
mov
movzbl
inc
movzbl
dec
movsbl
dec
add
movswl
inc
add
sub
dec
movzbl
or
inc
dec
mov
lea
inc
lea
add
mov
inc
dec
inc
mov
mov
mov
cmp
jb
inc
xor
movzbl
mov
mov
inc
jmp
push
xchg
or
adc
imul
sbb
aaa
cmp
pop
mov
jns
cld
into
inc
mov
sbb
jle
bound
js
adc
cmp
pop
js
lahf
loope
or
fwait
out
and
clc
mov
jl
and
add
mov
cmp
xchg
aas
js
sub
mov
stos
sub
jl
pop
ret
mov
and
dec
inc
into
and
jmp
jecxz
xchg
enter
or
inc
pop
mov
fldcw
mov
add
testl
dec
add
orl
pop
jp
rclb
push
push
mov
pop
ror
xchg
stos
mov
jp
add
jo
inc
add
and
inc
fisttps
adc
lahf
cmpsb
aam
jbe
in
pusha
mov
shrl
jns
bound
adc
mov
lock
loop
rorl
mov
cmp
adc
ds
sti
inc
push
icebp
mov
dec
enter
push
and
jl
jae
in
xor
daa
mov
pop
adc
mov
sbb
inc
dec
cmpsb
sbb
out
jne
inc
cmc
ja
jmp
dec
ja
mov
dec
mov
in
test
and
movb
arpl
cmp
or
jo
jg
lahf
or
ficoml
movsb
inc
rcrb
xchg
shr
jmp
in
cmp
arpl
in
push
mov
dec
push
sahf
mov
lcall
jnp
dec
rorl
or
pop
popa
movsb
inc
sub
inc
into
and
push
inc
pop
cmp
and
cmc
xor
pop
cmp
mov
imul
es
adc
loope
aam
stos
xchg
mov
pop
icebp
mov
mov
cltd
pop
imul
add
pop
mov
lret
mov
or
mov
cmpsb
cltd
in
orl
jg
roll
lea
js
sbb
mov
fndisi(8087
aam
add
xor
movsl
jno
xchg
data16
cld
pop
stos
pop
and
mov
aas
mov
imul
loopne
call
dec
scas
mov
ss
mov
clc
jo
sbb
cmp
dec
scas
cmpsb
fs
imul
jp
dec
repz
ret
xchg
into
stc
decl
ret
add
std
in
sub
int
xor
rolb
xchg
adc
dec
push
pop
js
out
xor
imul
xchg
rolb
sbb
mov
into
pop
push
imul
ljmp
ret
lret
nop
fisubrs
clc
xchg
mov
int
xchg
scas
imul
jbe
out
jg
sahf
adc
adc
or
cmp
fisubrl
ficoml
cltd
dec
jbe
out
rcrl
push
inc
fildll
cwtl
jb
leave
addb
xor
jp
js
popf
roll
push
xchg
jmp
sbb
add
pusha
test
inc
jne
push
fimull
sub
shlb
pop
fimull
cs
pop
outsb
add
jne
push
and
cmpsb
push
push
and
cs
in
jecxz
mov
sbb
mov
dec
bound
out
gs
sub
pop
scas
add
mov
inc
popa
push
inc
or
lods
pop
fdivrl
les
adc
lods
jecxz
inc
sub
gs
lea
push
push
nop
fs
xor
jnp
cmp
bound
pop
cltd
sub
jb
xlat
dec
cmp
mov
aam
test
rcrl
mov
loope
pop
adc
jbe
pop
jmp
and
sti
out
dec
ja
pop
cmc
into
push
aam
andl
popf
adc
mov
push
xchg
mov
fistpl
mov
scas
cmp
subb
aam
mov
daa
outsb
icebp
cmp
push
or
call
aas
int3
inc
jl
pop
ret
ljmp
dec
dec
call
lods
imul
sub
push
test
add
mov
inc
aad
test
mov
pop
sub
shlb
xchg
lret
jg
xor
ret
mov
cmp
int3
lahf
aaa
sub
repz
or
out
sub
sub
out
push
and
adc
punpckhdq
addr16
daa
dec
adc
mov
arpl
push
dec
loope
jnp
les
adc
js
sbb
dec
mov
test
push
mov
push
daa
inc
lret
mov
jmp
cmp
push
scas
sahf
sbb
out
popa
shl
pop
dec
or
xor
lds
mov
sahf
and
jmp
aaa
in
and
xor
leave
loop
lret
jns
sbb
xchg
mov
xchg
mov
pop
jge
adc
sbb
sbb
movsb
jecxz
sub
ljmp
popa
push
inc
in
add
adc
push
inc
fdivs
iret
xlat
mov
jl
push
mov
stc
lcall
jbe
fmul
xlat
popa
imul
push
jp
pusha
or
fldt
sti
lahf
cwtl
sbb
adc
mov
clc
inc
dec
repz
pushf
cs
insb
mov
xor
not
push
bnd
clc
in
xor
leave
cmp
add
popa
xchg
jnp
inc
sub
adc
sub
sti
insl
xchg
push
jb
test
loope
das
dec
scas
dec
ret
dec
rcrb
stos
xor
das
out
in
adc
adc
push
js
shll
mov
adc
xor
xchg
loop
les
sub
outsb
std
enter
mov
dec
sbb
mov
push
fmull
jbe
jne
lahf
adc
jge
sub
aas
mov
aam
mov
xchg
sbb
aam
push
cmpsb
inc
xor
sub
push
in
imul
test
push
add
adc
jp
inc
test
xor
jmp
stos
sahf
jo
call
push
ds
jo
cltd
and
lods
sub
call
mov
cmc
sbb
in
imul
scas
push
loope
push
xchg
inc
jg
stos
aaa
dec
ja
stos
mov
lcall
xchg
iret
push
sub
lock
scas
xchg
into
cli
scas
sub
xchg
test
adc
jbe
cltd
test
out
out
mov
xorb
cltd
mov
xchg
addr16
cs
xor
rcll
mov
out
lods
add
xchg
xor
adc
pop
paddw
test
xor
mov
push
adc
mov
push
cmc
mov
lods
jae
hlt
inc
leave
pop
add
jp
shll
xchg
leave
xchg
mov
sbb
ret
sub
andb
jns
sub
les
xchg
fs
mov
lahf
and
rorl
test
jnp
sahf
ja
xor
cli
ret
sar
leave
cmp
mov
sahf
cmpsl
stos
sub
clc
insb
lock
mov
xlat
inc
push
aad
mov
sub
add
jns
inc
iret
pop
enter
lock
frstor
adc
jb
lea
insl
add
xchg
xchg
sbb
add
je
xchg
jne
xor
pop
inc
cld
hlt
lcall
sbb
xor
cmp
push
pusha
out
xchg
ljmp
lcall
mov
push
or
cltd
sbb
shl
jg
rorb
popa
jne
loope
cmp
push
and
push
inc
cmpsb
cmp
and
fs
and
loop
xchg
xchg
adc
repnz
dec
dec
sub
enter
fstps
jge
nop
ljmp
xchg
lret
jno
xchg
mov
jno
sub
xor
or
scas
adc
inc
add
dec
jecxz
fcoml
sahf
inc
ss
ljmp
cli
xor
xorb
push
xor
test
adc
inc
in
push
xchg
cmpsb
data16
fiaddl
inc
les
jmp
add
mov
loop
popa
fs
and
push
mulb
pop
jo
dec
jmp
sbb
dec
mov
clc
xchg
out
pop
cli
add
push
mov
dec
inc
and
lods
out
jg
out
adc
outsl
sub
syscall
lret
xor
insl
xchg
ja
sbb
sbb
icebp
lds
mov
cmp
cmp
pushf
sbbb
stos
jle
arpl
leave
mov
ds
in
scas
mov
inc
leave
jmp
daa
push
ds
add
add
leave
mull
mov
and
out
pop
inc
stos
ret
cmp
cmp
je
pop
aad
lods
mov
push
add
out
lcall
in
cmc
test
lea
xchg
ret
insb
sbb
xchg
mov
sub
sub
pusha
or
pop
das
push
imul
dec
scas
and
ret
aas
rep
sub
insb
pop
cmc
pushf
mov
jns
jecxz
fstp
mov
mov
popf
outsl
fnsave
fistl
sub
jne
mov
mov
insb
loop
stos
push
adcl
xchg
jo
xchg
sub
jb
sbb
rolb
andb
cmp
mov
rol
add
js
cmp
loope
and
movsb
fisubl
sbb
pop
insl
cmp
pop
daa
out
lret
sbb
sub
or
dec
aam
inc
mov
daa
inc
lcall
mov
orl
loop
push
arpl
or
inc
inc
sbb
add
mov
push
mov
xchg
out
xchg
push
xchg
arpl
jae
jge
sbb
stos
xor
mov
jns
adc
cli
std
cmp
jo
xor
push
pop
mov
or
out
ljmp
inc
jle
out
jp
out
in
mov
fiaddl
adc
push
dec
pop
dec
lret
lcall
cmp
cld
adc
popa
adc
mov
fistps
mov
fsts
jae
and
xor
enter
push
pop
mov
dec
inc
adc
enter
shrb
enter
iret
or
fisubrs
pop
ljmp
and
push
cmp
test
or
push
add
out
jmp
into
jbe
xor
xchg
hlt
xor
outsb
sahf
xor
mov
test
jns
test
sub
sub
pop
stos
les
pop
sub
cmp
xor
loope
inc
fs
punpcklwd
sarl
out
cmp
scas
push
fnstcw
ficoml
inc
orb
dec
jecxz
jl
insl
out
arpl
stos
jae
aad
popf
inc
movb
and
loop
push
fsts
cmp
loop
cmpsb
xor
cmpsl
sbb
dec
jge
jle
pop
sbb
and
jl
sbb
or
mov
xor
add
arpl
ret
inc
cmpsb
das
mov
cmp
mov
push
push
addr16
int
and
shr
subl
lcall
fsts
shrb
mov
fnstsw
push
fs
inc
ror
lret
mov
xchg
lret
mov
popa
gs
addr16
add
push
rolb
outsb
push
and
divb
xchg
icebp
push
xchg
push
ret
push
push
in
cmpsl
es
lea
stos
stc
jo
fiadds
add
cmp
pop
cld
mov
inc
mov
and
cmp
mov
xor
pop
js
dec
mov
sbb
push
pop
mov
xchg
shll
xchg
fdivp
in
aam
arpl
jae
pop
fwait
and
sub
push
insb
pop
mov
pop
or
insl
push
and
sub
dec
lea
mov
mov
pop
xor
scas
hlt
in
aad
adc
div
and
fdivl
loop
jl
inc
pop
andl
cmc
test
cmpsb
jmp
or
fsts
jle
dec
sub
inc
add
cmp
dec
dec
hlt
xchg
frstor
clc
aam
xchg
scas
idivb
ffree
mov
mov
cwtl
sub
xor
xor
aas
sub
mov
mov
fwait
push
fistpll
xor
mov
ds
adc
lock
push
in
cwtl
adc
and
jl
repnz
rorl
inc
popa
ret
jb
xor
mov
and
ret
std
shl
inc
mov
cmp
jmpw
sbb
mov
and
sub
cmpsl
cmp
xchg
mov
cltd
outsl
mov
vmread
cmc
cmp
fildll
cmc
leave
ljmp
sub
mov
test
push
lock
lea
jle
and
jb
cmpsb
sub
ret
test
fiadds
add
sbb
add
into
cmp
pop
cmc
sahf
cmp
pushf
movsl
mov
jl
inc
pushf
or
jmp
mov
out
mov
or
push
lahf
sarb
andb
xor
arpl
xchg
lds
mov
push
lcall
push
push
imul
sti
lock
add
pushf
mov
lods
xchg
and
jae
jle
jmp
inc
mov
out
push
mov
pushf
sbb
mov
pop
aas
out
xor
jg
out
stos
or
mov
cld
sbb
adcb
or
divb
lahf
shll
sbb
sarl
mov
xchg
scas
das
inc
cmp
stos
loop
stos
mov
sbb
and
xchg
sbb
lods
inc
and
test
cmp
loope
mov
mov
dec
fsts
sub
inc
test
sbb
inc
roll
arpl
xchg
movsb
xchg
adc
in
jle
movb
shrl
push
arpl
adc
add
fcoms
sti
jle
call
adc
lret
jmp
stos
pmaddwd
rorl
jbe
imull
popf
or
lods
mov
mov
mov
cmpsl
mov
sbb
stos
sbb
in
mov
das
or
sub
mov
pand
pop
stos
pop
mov
cmp
cmp
aaa
lret
roll
mov
adc
data16
sarb
pop
stc
arpl
and
mov
fiadds
add
into
adc
cltd
sar
mov
insb
xor
xchg
inc
xor
sbb
xorl
jl
xor
add
data16
cmp
into
imul
adc
adc
pop
lcall
fsubrp
dec
mov
ljmp
cmp
mov
push
popa
mov
dec
pop
mov
and
xor
sahf
repnz
add
mov
mov
aad
add
adc
cmp
and
outsb
mov
cmc
jmp
and
lock
sbb
in
es
gs
dec
dec
push
cld
sbb
and
in
and
mov
mov
and
cld
xchg
inc
out
clc
sbb
xchg
jecxz
push
into
push
movsb
cmp
lcall
jge
dec
lods
adc
adc
mov
sarl
adc
and
popf
ficompl
dec
test
push
mov
fwait
jmp
mov
push
cmp
dec
mov
lea
dec
inc
or
repnz
mov
sub
lds
mov
inc
pop
xor
pop
lods
pop
inc
xor
aam
xor
std
cmp
or
inc
outsl
and
cmpsb
cmpsb
push
icebp
lahf
adcl
inc
dec
sub
clc
pusha
adc
or
ficoml
xchg
into
cmpsb
or
push
push
dec
pop
push
cli
repz
mov
dec
loop
xor
lock
mov
sub
adc
hlt
loopne
daa
mov
jecxz
xor
sbb
outsl
cmp
ficoms
fxam
in
adc
loopne
dec
xchg
lret
pop
sbb
push
daa
xchg
repnz
data16
push
pop
and
sbbl
fwait
xor
imul
or
and
pop
imull
adc
mov
xor
loop
adc
inc
pop
xchg
mov
icebp
out
sbb
or
movsb
push
lret
loop
sbb
cmc
lods
sub
jle
and
push
mov
inc
fildll
lock
frstor
cltd
push
or
xor
jg
lds
or
sbb
dec
imul
lea
arpl
test
inc
call
pop
and
sbb
les
push
mov
int3
loop
add
call
out
les
adc
jo
push
or
jne
repnz
add
das
mov
pusha
lret
arpl
xchg
inc
mov
js
adc
rorb
jp
in
mov
iret
arpl
out
ljmp
cltd
xlat
mov
xchg
in
or
jo
adc
jno
mov
ja
pop
sub
ret
fdivl
pop
pop
xchg
je
dec
out
ficoms
xor
push
shl
sbb
push
cmp
sbb
mov
dec
jge
stos
insb
not
jbe
fmull
mov
cwtl
pop
out
pop
adc
push
push
push
imul
adc
stos
pop
pop
fcompl
js
pushf
gs
fistps
sub
dec
push
pop
and
shrb
inc
sbb
ja
dec
sub
dec
in
pop
shrl
xor
push
enter
shrb
dec
pushf
in
mov
adc
adc
ret
lods
imul
push
mov
xor
aaa
xchg
adc
ror
or
aaa
dec
xchg
add
inc
mov
mov
cmp
popa
pop
mov
stos
jns
mov
inc
js
cmp
add
aad
add
iret
fidivrl
lea
ret
adc
lods
push
popa
sub
lahf
mov
cli
add
fildll
mov
cli
outsl
insb
movsb
jns
cltd
pop
push
sbb
nop
dec
xchg
loope
sbb
insb
aaa
jecxz
lods
ja
fisubl
jge
je
mov
adc
mov
out
std
adc
cwtl
cs
icebp
add
imul
lret
stos
or
add
and
mov
mov
inc
jno
shll
mov
mov
out
cltd
fs
pusha
push
jbe
xchg
jne
jo
daa
xlat
stos
adc
mov
add
push
repz
lods
iret
or
jb
popa
test
popf
shlb
stc
push
lds
add
stos
cmp
fsubr
xchg
ret
xchg
adc
sbb
mov
pop
push
sbbl
adc
jle
mov
subb
sbb
pop
movsl
dec
adc
dec
popf
sbb
sbb
cmpsb
mov
aas
xchg
pop
in
xchg
jp
addr16
push
jno
pop
push
inc
pop
jo
es
aaa
out
push
cltd
add
xchg
mull
add
lea
fiadds
mov
outsb
les
xchg
xchg
jp
aas
inc
mov
ds
sarb
push
push
inc
jno
out
in
loope
and
aam
in
ja
pushf
add
into
cmp
and
dec
stc
call
mov
fstps
dec
cmp
add
test
sub
or
pop
fisttpll
shrl
or
call
lock
and
jecxz
cli
adc
daa
xor
movsl
and
jno
mov
push
sti
adc
hlt
cmp
lahf
push
fistps
mov
dec
ret
stc
nop
pop
mov
adc
xor
frstor
add
scas
aas
aaa
in
outsb
pop
ljmp
mov
sub
popa
enter
roll
int
cmp
dec
lcall
jb
mov
lret
lods
add
shll
je
pop
cmpsl
xchg
mov
and
xchg
into
push
lock
adc
mov
cli
add
mov
push
and
inc
fbld
mov
xor
or
mull
pop
test
pusha
dec
loopne
call
out
xchg
mov
mov
mov
loop
outsb
mov
out
mov
dec
mov
ret
cmpsl
cmp
popa
popf
jle
test
shll
out
fwait
repz
xchg
cmc
push
decl
fadds
mov
mov
inc
mov
das
pusha
xor
loopne
pushl
push
lods
pop
and
lock
push
and
mov
push
jb
por
sub
push
add
mov
jae
aaa
xchg
and
jecxz
or
and
jmp
sbb
lret
js
add
dec
mov
pusha
xchg
lock
pop
out
xchg
add
iret
mov
idiv
insl
mov
inc
jns
sahf
fiadds
fists
outsb
mov
shll
sbbl
fsubrl
ljmp
je
cs
jecxz
je
pop
inc
inc
xorb
or
mov
bound
jb
ss
gs
sbb
and
out
push
jecxz
bnd
out
push
xor
leave
mov
fnstsw
iret
or
sbb
mov
cmpsb
add
fnsave
adc
js
in
cli
lea
repz
xorl
lcall
sbb
scas
fcomps
push
cli
add
xlat
movsl
dec
repz
pusha
push
and
js
rclb
rclb
cmpsb
mov
xor
test
pop
aas
mov
call
xchg
das
mov
scas
shll
dec
and
push
hlt
cwtl
add
sbb
xorl
cltd
cltd
adc
cmpl
lret
rcr
pop
or
or
jno
mov
pop
xchg
scas
jecxz
loop
in
jmp
push
insb
pop
in
sub
inc
sub
lea
adc
out
lret
out
sub
dec
pop
jb
xor
out
rorb
shll
ret
loop
ljmp
xchg
and
outsb
loopne,pn
mov
ret
int3
or
popa
xlat
pop
or
jp
mov
xchg
sahf
ror
movsbl
inc
arpl
mov
cmp
mov
mov
repz
sbbl
jo
sbb
sub
pop
cmp
ja
fisttps
aaa
loope
push
ja
pop
pop
adc
mov
pop
xchg
jg
push
mov
sbb
push
ja
jge
mov
sahf
mov
xor
xor
mov
cs
sub
mov
pop
mov
and
add
and
push
scas
push
mov
loope
mov
in
jecxz
bound
sahf
lcall
daa
pop
test
cmpl
xor
stos
and
fisttpl
sub
and
add
ret
in
sti
jo
and
cmc
or
jge
jle
xor
xchg
inc
xchg
inc
fnstenv
mov
ljmp
sub
or
lcall
push
mov
or
and
out
dec
out
ret
pop
mov
add
dec
jno
mov
or
bound
cltd
out
xchg
mov
inc
adc
cmp
jne
fldt
cli
sbb
fmull
scas
iret
push
and
sbb
lahf
pusha
adc
fwait
cmp
pop
xchg
call
mov
jns
adc
stos
jecxz
cwtl
pop
clc
cmp
xor
into
lahf
mov
jns
xchg
dec
pop
dec
push
test
loopne
inc
outsl
jg
push
movsl
cmpsl
mov
sbb
xor
lods
out
pop
call
or
sub
adc
lcall
loopne
dec
ret
cmp
lock
fwait
add
push
push
sub
rcrb
mov
movsl
push
mov
aad
sbb
insb
js
bound
fsubr
pop
mov
push
pop
push
bound
fyl2x
jmp
push
adc
xchg
out
mov
pushf
addr16
repnz
jns
icebp
adc
scas
imul
clc
shll
push
or
lods
sub
lcall
dec
outsb
jne
jae
repz
pop
mov
mov
cmp
jae
fst
mov
shll
ljmp
ss
add
mov
sbb
mov
fldl
push
adc
add
jmp
mov
and
out
push
ss
sbb
mov
imul
xchg
push
jl
jne
hlt
repz
lds
movsl
push
bound
jmp
cmp
sbb
int3
pop
push
xchg
or
mov
movsb
sahf
inc
ret
rcrl
mov
out
mov
fs
add
xor
dec
hlt
loopne
cmp
or
stc
mov
lods
pop
sub
cmp
sub
pop
adc
fstps
into
scas
repnz
push
sbb
xchg
fisubrs
pusha
loopne
cmpsl
push
mov
sbb
jbe
fsts
push
popa
xchg
push
dec
jns
inc
lods
movsl
aas
cld
enter
xchg
push
cs
movsb
mov
xchg
in
mov
fdivrl
adc
lods
xlat
xchg
push
ss
shl
adc
jb
push
sub
mov
inc
mov
pop
loope
mov
or
dec
and
mov
test
mov
xor
inc
sub
adc
add
push
ret
push
cltd
pop
es
rorb
inc
add
stc
or
das
dec
sub
mov
lods
mov
mov
mov
jle
lcall
cltd
out
xor
jne
imul
es
das
pop
scas
push
pop
inc
into
out
dec
cmp
inc
clc
mov
jmp
and
pushf
in
xchg
inc
pop
mov
je
fildll
les
dec
sarb
or
lds
repz
aad
pop
cmc
lods
ss
xor
es
out
xchg
rcl
or
sbb
ja
xchg
sti
cli
dec
jns
sbb
push
pushf
cmp
repnz
jg
jnp
sarb
pop
lea
adc
push
int3
out
jo
add
filds
cmp
or
adc
inc
adc
dec
and
dec
lds
in
or
push
arpl
cmpsb
and
outsb
pop
pop
add
loop
mov
not
xchg
pop
popa
push
mov
js
in
push
pop
jae
mov
ljmp
lods
sbb
bound
xor
jb
movsb
jg
mov
xchg
cmp
jne
les
adc
lret
pop
aas
pop
dec
fdivl
cmc
je
test
xchg
xor
test
loop
sbb
pushf
scas
shll
inc
fnstsw
mov
outsb
jmp
pushf
jbe
cmpsl
loopne
cmp
std
push
loop
das
sarb
jns
insl
adc
xchg
loope
xor
stos
dec
ss
insl
sbb
sbb
les
pop
jne
adc
idivl
mov
or
aaa
mov
les
je
sbb
mov
xchg
or
and
sub
mov
mov
push
inc
loop
es
push
cwtl
js
scas
das
adc
sub
xlat
or
pop
xor
cs
jo
rclb
lods
jns
pusha
dec
lods
sbb
push
pop
push
inc
sahf
in
imul
not
push
out
in
inc
jmp
and
xlat
jl
push
sbbb
inc
in
jl
mov
push
test
pop
int
rorb
fidivrl
push
add
stc
imul
out
jbe
pop
xchg
xor
push
dec
out
inc
inc
mov
cmp
xchg
sbb
int3
ja
inc
jecxz
adc
push
cmp
push
jno
xchg
adc
outsb
pop
jg
not
pop
or
adc
test
cmp
mov
pop
out
cli
movsb
arpl
jae
sub
call
mov
fsubl
inc
packuswb
scas
xchg
cmp
arpl
dec
loopne
icebp
into
inc
lods
push
xor
lea
fstps
fwait
sub
adc
out
mov
ds
ret
cmpsl
popf
stos
cmp
rolb
pop
cmp
pop
out
rcl
inc
adc
push
adc
xlat
mov
mov
xchg
and
ljmp
xlat
testb
jns
test
push
mov
fwait
in
push
sub
xor
cmpsl
nop
push
mov
loope
xor
movsl
pushf
mov
ret
insl
popa
ljmp
notb
mov
mov
jmp
dec
sub
push
cmpl
gs
stos
shrl
inc
in
stc
mov
out
add
jns
mov
in
les
inc
adc
jp
mov
orb
or
inc
out
mov
mov
test
bound
sbb
jae
and
inc
sbb
insb
cmp
adc
or
repnz
popf
dec
sub
push
nop
and
mov
mov
movsl
fildl
push
xchg
lods
lods
pop
lret
test
outsl
xchg
pop
add
and
lods
add
mov
jg
sub
test
scas
cmp
or
mov
xchg
jae
cmp
pop
add
shrb
insl
iret
daa
mov
insl
dec
test
lret
test
lret
aad
fnsave
and
and
call
push
add
and
mulb
es
ss
addr16
mov
xchg
cmc
mov
lret
and
rcrl
out
loopne
dec
enter
sti
outsb
dec
xchg
arpl
adc
lret
and
mov
out
inc
fcoms
aas
jns
lret
xlat
testl
xor
or
fmull
xor
imul
jns
movsl
mov
pushl
cmpsb
mov
pop
inc
mov
push
inc
and
xlat
jnp
lcall
icebp
lcall
movsb
mov
ret
cmpsl
outsl
iret
push
lds
in
enter
fldl
popa
xchg
push
xor
or
dec
mov
andl
or
les
pusha
ret
out
add
fsubr
adc
mov
cmp
das
rorb
addr16
and
mov
adc
mov
hlt
aaa
push
jnp
cmpsl
mov
pushf
mov
adc
mov
mov
mull
mov
ss
popf
mov
cmp
xor
imul
mov
push
ss
or
mov
lahf
xlat
add
ja
push
dec
in
sbbl
and
and
or
rcrl
dec
in
jp
push
das
mov
jo
cmc
imul
jbe
arpl
iret
popa
push
leave
pusha
xchg
mov
mov
out
pop
xchg
or
imul
lds
orb
ljmp
pop
lods
xlat
mov
popa
es
sti
and
or
adc
shrl
sub
xchg
xor
mov
fsubs
and
fdiv
xor
push
jo
stos
push
push
ljmp
push
mov
mov
jp
cmp
je
jae
xchg
or
cltd
sahf
lahf
mov
xor
arpl
pusha
jp
das
outsb
rcll
sbb
mov
jo,pt
inc
pusha
xchg
xor
push
lret
add
aam
xlat
rorl
fs
mov
int
pop
jbe
and
pop
or
movsl
rcll
sub
pop
nop
mov
insl
test
addr16
daa
inc
hlt
sbb
out
fnstcw
dec
insb
fcoms
mov
mov
and
pushf
enter
xchg
ss
out
mov
or
insl
stc
lret
mov
push
cmp
popf
mov
sub
jp
sahf
xor
jno
mov
icebp
push
inc
sbb
cmc
leave
pop
fimull
in
loop
push
sub
das
jl
ret
mov
push
scas
or
cmpsl
cli
aam
add
and
xchg
fsubl
dec
loopne
lea
popa
adc
or
xorl
dec
mov
ljmp
mov
push
unpcklps
out
xlat
mov
ficomps
push
stos
ret
repnz
jo
fiadds
sub
push
addr16
jne
jnp
mul
jge
xchg
test
mov
push
sbb
outsb
ficoms
stos
xchg
in
paddsw
jg
dec
xchg
mov
xlat
and
in
mov
lea
push
das
cmp
and
fmull
cmp
sbb
loope
mov
lcall
ss
orb
rcll
xchg
dec
sub
pop
ljmp
cld
stc
mov
mov
inc
cld
icebp
push
xchg
dec
lods
xchg
int3
test
jae
pop
push
ss
push
dec
jns
push
popa
jge
fistpll
bound
loop
mov
mov
adcl
push
inc
dec
add
mov
xor
jp
push
push
dec
sbb
popf
dec
cld
or
aaa
dec
xor
jp,pn
pop
lahf
jo
and
sub
or
pop
imul
icebp
lock
cs
mov
cmp
jo
test
pop
int3
rolb
xor
cmp
les
pop
mov
xorb
sub
out
and
pusha
cwtl
xchg
pop
fbld
jg
imul
mov
test
sahf
mov
jb
dec
enter
insl
inc
iret
ds
mov
cltd
jge
push
dec
aam
icebp
dec
push
push
pop
stc
in
enter
mov
movsb
stos
adc
xchg
mov
sub
mov
movaps
dec
xchg
sbb
mov
pusha
psubq
insb
mov
mov
enter
fs
out
js
adc
inc
rcr
dec
jnp
push
lret
push
jg
int3
and
xchg
imul
pushl
dec
in
dec
and
in
pop
outsb
leave
dec
jo
mov
dec
insl
pop
mov
lret
mov
pop
dec
and
popf
pop
outsl
xchg
in
fcoml
sub
stos
push
and
out
cmp
loopne
int
jb
call
inc
sbb
pusha
insl
shl
xchg
pop
add
orb
mov
loop
jno
xchg
stos
cmp
insb
shrb
movsb
loope
xor
js
or
lds
xor
inc
sbb
inc
jg
unpckhps
insl
xchg
and
mov
push
ret
subl
xor
lds
fists
xchg
jne
mov
fists
mov
aad
dec
inc
mov
xchg
repnz
in
repnz
cmp
sti
pop
les
test
in
cmc
sub
stos
inc
int
push
pop
ds
inc
fidivs
fstps
stc
cmp
mov
sar
mov
sbb
cmp
pop
out
push
push
mov
sti
adc
or
dec
add
dec
mov
inc
stc
xchg
ljmp
stos
hlt
mov
lcall
mov
push
nop
jns
into
cwtl
sbb
inc
sub
xchg
divb
pop
sub
mov
pop
inc
mov
pop
adc
cltd
movsl
nop
xchg
jmp
stos
imul
ja
scas
sbb
cld
sbb
repnz
push
pop
pushf
add
pop
sbb
roll
jb
lcall
adc
faddl
cmpsl
aad
xor
pop
pop
icebp
loopne
dec
loop
fisubs
fs
imul
adc
stos
mov
ja
aaa
cmp
sbb
mov
les
lcall
sti
cltd
je
test
and
pop
mov
or
in
loope
pushf
dec
stos
cli
ljmp
stos
jns
in
subb
cmc
cmpsl
stc
jb
lahf
or
add
nop
aaa
cwtl
outsb
aaa
popf
cs
cmp
cmc
and
adc
xor
das
mov
sbb
push
sarb
sbb
loope
ds
add
test
daa
cmp
sahf
xor
add
mov
mov
add
xor
pop
mov
loopne
daa
mov
push
and
or
lea
xor
sbb
int3
fcompl
jnp
add
pop
and
fisttpll
lds
aas
stc
pop
std
jb
loopne
pop
ja
push
mov
pop
jae
sbb
sub
cmp
or
cmpsl
test
stos
lret
dec
mov
jecxz
pop
dec
popa
sahf
or
arpl
ficoml
mov
sbbl
daa
xchg
popf
cs
shrb
xlat
out
sbb
or
or
mov
pop
fs
jns
dec
jno
popf
pusha
jnp
xor
pop
xor
in
mov
leave
and
mov
jmp
dec
pop
cltd
cli
fnstenv
and
pop
je
push
repz
mov
mov
inc
repnz
imul
cli
mov
test
cs
add
jno
fldcw
aad
xchg
js
clc
pop
push
sub
sub
jge
cmp
addr16
aam
push
xchg
push
cmp
in
lock
sbb
sub
mov
adc
testb
push
inc
jbe
inc
push
and
repz
push
pop
fwait
pop
xchg
push
mov
pop
xor
ficompl
mov
mov
inc
enter
push
cld
outsb
xchg
in
in
mov
or
out
inc
arpl
push
mov
leave
fadds
mov
cmp
cwtl
pop
fisttpl
rcll
test
pop
in
lret
divb
xchg
adc
mov
adc
outsb
sub
out
iret
dec
pop
or
je
sub
dec
pushf
sub
adc
inc
adc
xchg
rcrl
dec
xor
push
stos
lret
sub
lds
ret
mov
pop
lods
adc
push
and
pushf
or
into
lods
or
rcll
fdivs
aad
mov
sbbl
lea
insl
dec
fnsave
xchg
jnp
out
push
lea
jge
imul
jbe
pop
jge
jbe
mov
loopne
js
add
lea
dec
ja
mov
out
xor
out
test
dec
cmpsl
inc
nop
fdivrs
out
jbe
mov
lods
sub
fs
xchg
addr16
xor
jge
push
mov
mov
cmpb
fcmovb
ljmp
adc
and
adc
mov
pop
ret
pop
pusha
testb
jo
mov
xor
dec
push
mov
mov
sub
cmp
fildll
xor
leave
fs
aad
leave
xchg
mov
addr16
stc
call
adc
ficoms
jecxz
aaa
dec
test
mulb
jmp
aam
xchg
xchg
fidivs
cmpb
push
inc
cmp
iret
pop
bnd
pop
popf
ja
xchg
push
lea
or
cs
sub
imul
jmp
fbstp
jb
sub
mov
push
fnstcw
lds
dec
pop
pop
pop
dec
sbb
movsb
or
enter
lods
shrl
faddl
push
sub
add
fcmovnu
out
sub
out
jg
push
xchg
insl
fs
pop
or
ret
xchg
mov
push
int3
jo
dec
cmc
jecxz
dec
hlt
cmp
inc
in
cld
inc
ljmp
mov
mov
ss
neg
xor
adc
jmp
stc
out
mov
dec
mov
imul
mov
fcmovne
sarb
cli
movsb
aam
iret
xor
pusha
mov
xchg
sub
adc
subb
xor
into
mov
sti
sahf
cmc
stc
stos
push
sub
xor
popa
outsl
lock
mov
or
push
sahf
cmp
test
movsl
test
mov
lock
jle
daa
or
cmp
push
fcmovbe
rolb
jo
lods
fcomps
movsb
or
push
arpl
or
xchg
in
mov
xchg
dec
nop
cltd
jne
dec
sub
add
movsb
sbb
push
xchg
cmp
and
test
movsl
and
or
cmp
jae
stos
add
rorl
mov
jno
sbb
jmp
fldl
pop
stos
clc
scas
in
inc
and
arpl
sub
bound
cmp
jnp
mov
mov
pop
pop
andl
movsbl
loop
push
ja
jecxz
mov
cmp
out
cmp
in
scas
or
decb
mov
cmpsl
scas
or
xchg
xchg
adc
mov
insb
mov
out
mov
cmp
xlat
inc
xchg
mov
shl
jbe
std
aad
push
test
adc
and
lahf
mov
push
int
or
pop
repz
js
lods
in
cmp
xchg
je
add
xor
push
mov
fwait
sbb
add
loope
rolb
jmp
pop
movb
stc
gs
sbb
xor
inc
test
es
push
sub
jp
out
ret
aaa
push
sbb
insb
pop
inc
inc
ljmp
lds
sbb
add
jle
cltd
test
xor
lahf
adc
jecxz
mov
cmpb
adc
sbb
mov
leave
out
addr16
popf
lods
outsb
lret
dec
dec
mov
stos
cltd
fadds
rolb
push
jg
xorl
push
fidivrl
loop
stc
xor
cli
decb
mov
mov
popf
xor
dec
test
outsl
xchg
cltd
pop
adc
ja
arpl
pushf
push
and
ror
sbb
dec
addr16
inc
adcl
add
and
mov
mov
xchg
mov
add
or
test
das
jge
and
shrl
sbbb
or
cs
adc
inc
pop
push
cmp
repnz
jge
xor
inc
fisttpll
pushf
mov
aam
push
roll
xlat
nop
adc
int3
jecxz
stos
xchg
std
dec
sbb
insb
int
xor
pop
xor
sub
popa
jb
jae
fmull
sbbl
or
mov
or
xor
out
stos
stc
imul
xchg
inc
and
pusha
adc
mov
pop
fistl
mov
add
lahf
pushf
mov
fdivrl
jae
jbe
xchg
cmc
ret
jns
jb
dec
xchg
xchg
lods
shlb
icebp
mov
fs
std
gs
xor
std
loope
lret
pop
xor
push
enter
jp
sub
sub
sti
aaa
in
dec
lcall
daa
add
pop
xchg
movsb
sbb
or
not
loopne
enter
out
push
mov
dec
and
fmuls
inc
push
mov
leave
add
dec
enter
adc
dec
pop
add
mov
flds
ficomps
mov
loopne
imul
or
inc
je
adc
clc
aas
push
xchg
mov
and
outsl
out
test
das
orb
push
pop
pop
dec
cmp
ljmp
sti
or
push
xchg
lds
jnp
mov
pushf
in
int3
out
shr
roll
mov
in
dec
or
and
xchg
lret
ret
out
adc
push
out
adc
pop
enter
lods
icebp
out
dec
test
icebp
xor
mov
jl
mov
push
and
mov
pop
push
lahf
fcmovne
adc
ljmp
fistl
cltd
cmc
jne
add
add
sbb
in
subb
mov
pusha
jmp
dec
mov
out
lcall
jge
inc
mov
xchg
divl
jg
cmp
outsb
pushf
cmp
mov
and
sahf
lret
in
js
sub
and
mov
dec
je
in
icebp
mov
lods
out
aad
xchg
cwtl
jg
push
jne
add
inc
jp
repz
push
jmp
jne
call
lea
inc
sahf
cmp
aaa
pop
dec
push
ret
aaa
jmp
xor
inc
in
jecxz
xorb
push
xor
cmpsl
roll
mov
inc
lds
pop
xor
cli
xchg
xchg
push
sub
jge
daa
test
ja
ret
and
stos
cmp
mov
mov
and
push
or
push
shll
and
adc
jb
push
or
jg
inc
stc
cli
outsl
pop
iret
cmp
push
mov
xchg
xor
or
add
adc
insb
in
shlb
xor
dec
mov
fmul
pop
loop
dec
not
xlat
push
push
aaa
dec
mov
lods
dec
sub
xchg
rcrb
adc
sub
xor
sahf
gs
or
out
lcall
push
shll
adc
fimuls
iret
addr16
mov
mov
push
ds
sbb
iret
sarb
lods
insl
pop
jp
push
aam
jle
js
into
and
fmull
and
out
clc
inc
pop
mov
mov
jnp
add
inc
in
mov
ret
inc
icebp
jle
push
shlb
roll
and
incb
sub
jb
xorl
out
and
push
int
enter
mov
push
ds
out
pop
jecxz
out
or
pushf
adcb
or
xchg
loope
adc
push
fdivrl
sarl
jg
rol
popa
inc
inc
ret
mov
aaa
or
lret
je
insl
bound
adc
aam
inc
xchg
push
xchg
stc
jno
push
dec
fisubrs
xchg
insl
mov
popf
push
cli
int3
or
xchg
cmpsl
fst
pop
xor
into
stos
popa
gs
pop
xor
fstl
int
jmp
mov
add
mov
xlat
scas
or
xlat
cs
aad
movb
enter
in
lcall
and
xor
ss
sub
lea
xorl
arpl
mov
push
sub
iret
aad
dec
pop
pop
dec
push
inc
stos
and
std
mov
call
filds
mov
stos
and
pop
enter
mov
dec
xchg
les
data16
mov
add
or
data16
test
outsl
jnp
fistpll
jmp
stc
push
les
jo
xor
and
mov
mov
mov
dec
fisttpl
xchg
sub
pop
dec
daa
fsubrl
mov
sbb
cld
out
xor
jbe
mov
testb
sbb
std
cmp
ja
cmp
bound
lods
jp
lahf
push
mov
jnp
mov
xorb
data16
inc
adc
pop
test
and
cltd
push
jp
pop
shrb
jp
pushf
jg
add
fstl
xchg
insl
cmp
cltd
ss
sub
mov
std
mov
aaa
shll
mov
mov
out
sbb
mov
xor
push
decb
cs
in
adc
popa
nop
sbb
rorb
and
adc
out
fistpll
call
push
pop
sbbb
inc
addr16
stos
jmp
orl
xchg
es
fs
xchg
cld
mov
add
add
and
xlat
xchg
fdivl
push
sbb
sub
enter
leave
icebp
push
xor
test
int3
aam
pop
xchg
and
add
hlt
lods
aad
aas
mov
into
imul
adc
jle
xchg
jl
sahf
lock
mov
leave
cmp
xchg
setae
add
sarl
mov
pop
bound
incl
jecxz
dec
ret
mov
iret
xor
loopne
cmpl
sahf
test
inc
sbb
arpl
cmpsl
xchg
pop
insb
hlt
lods
test
into
addr16
or
dec
out
scas
mov
dec
pop
fs
cltd
mov
in
out
and
icebp
mov
call
jmp
cmpsl
scas
sbb
test
sysret
imul
pop
imul
sub
cmp
xor
push
or
fldl
mov
stc
add
xchg
push
outsl
cmpsb
push
loope
jmp
sbb
fidivl
cmp
mov
jmp
push
xor
jl
xchg
sahf
cltd
test
incl
jp
clc
sbb
int
add
in
in
cmp
dec
xchg
xor
cmpsb
xchg
sbb
mov
sar
inc
push
outsb
das
je
iret
daa
lods
dec
xchg
pop
or
hlt
fstl
sub
enter
cmp
jne
ljmp
jg
xchg
sbb
pop
movsl
push
adc
out
fwait
pop
cmpsb
pop
sarb
jae
aad
sbb
push
push
sub
pushf
icebp
ja
cmpsl
pop
cmp
sub
pop
std
xor
mov
mov
subb
push
mov
testb
add
stos
mov
mov
mov
mov
jne
sub
mov
test
sub
movsl
xor
add
mov
fbld
pop
fidivl
fsubrs
inc
fmul
cltd
fs
fst
xor
fwait
imul
sub
or
js
ds
ss
inc
out
cs
push
add
lods
out
shl
or
mov
add
sbb
or
and
rolb
rol
fmuls
movb
sbb
pop
adc
push
out
sbb
mov
and
or
mov
jge
outsb
push
mov
add
daa
and
rcll
out
int3
andl
and
insl
gs
aas
sub
xor
nop
add
nop
jg
mov
and
inc
xchg
push
mov
imul
add
pop
daa
pop
shrl
mov
mov
push
sub
mov
or
sbb
repz
jne
pop
lods
push
sub
sbb
xor
lock
cmp
jg
in
test
or
in
dec
mov
jnp
divl
sub
and
dec
mov
xchg
mov
daa
test
dec
sbb
pop
movsl
mov
out
xchg
add
imul
ret
xchg
push
aad
in
pop
push
pushf
enter
je
xor
xchg
dec
in
jae
cmp
testb
js
sahf
push
fsub
je
mov
jnp
cmp
cltd
push
int3
adc
add
mov
adc
shll
push
aad
cltd
add
jle
das
popa
or
mov
pop
mov
mov
cmp
pop
adc
push
into
dec
lret
cmpb
add
cmc
dec
je
and
push
pusha
mov
lahf
ds
push
cld
repnz
insb
es
hlt
pop
lcall
cmp
or
jnp
fidivl
lods
xor
mov
and
call
fmull
pop
or
mov
les
xlat
cli
or
pop
insl
sahf
out
adc
ja
push
outsb
mov
hlt
in
sub
cmp
roll
cmp
lret
xchg
xor
cli
dec
mov
iret
enter
pop
int
adc
sarl
pop
cld
mov
mulb
nop
mov
in
jno
loopne
jg
cmpsl
jns
test
test
jle
roll
mov
add
jno
sub
push
gs
test
cmp
aaa
cmp
insl
orl
leave
cld
enter
dec
push
adc
push
movsb
call
or
and
push
ljmp
addr16
cmp
pop
push
fcomi
sub
insb
jb
in
fistl
xchg
jmp
mov
jl
or
sbb
xchg
and
and
mov
iret
or
bound
mov
push
cmc
rclb
fdivrl
or
pop
scas
shrd
pop
xor
mov
or
fwait
inc
add
push
in
xor
fdivrs
orb
mov
sub
jge
pushf
xchg
hlt
into
xor
jns
movsl
scas
popf
inc
pop
das
or
mov
xorl
cmp
loopne
das
mov
icebp
inc
sub
xchg
pop
dec
cmpsb
sub
out
lahf
push
shrb
add
adc
dec
cltd
mov
xchg
inc
pop
sbbb
pushl
push
loope
adc
cmpsb
sbb
stc
js
fimull
mov
xchg
inc
mov
mov
jne
call
push
test
push
mov
mov
and
enter
xchg
addr16
stos
fmuls
and
mov
mov
sub
jae
divb
mov
jmp
or
sarl
xchg
repz
icebp
push
mov
je
aaa
jbe
imul
les
repz
and
cltd
mov
ja
lahf
fdivrs
sti
mov
cltd
sbb
ret
loopne
aas
fists
adc
inc
mov
ljmp
cltd
call
add
cmp
fisubrl
movsl
pop
cs
fs
mov
pop
or
jecxz
popa
mov
mov
jnp
and
mov
and
mov
cmp
not
les
or
xor
sbb
adc
decb
aaa
fnstcw
js
sarb
mov
jge
cltd
push
mov
push
outsb
push
je
stos
and
inc
mov
push
push
lret
rol
popa
push
fidivrl
cld
sub
xchg
sbb
stos
dec
mov
xchg
scas
adc
out
aas
fisubrs
imul
xchg
push
das
add
pop
jo
dec
sbb
mov
xor
xlat
sbb
jle
loope
shlb
xor
xor
push
insl
mov
mov
aad
ja
mov
xchg
add
or
xchg
inc
int3
xor
inc
in
sbb
mov
adc
pop
and
aas
push
js
pop
dec
sti
pusha
inc
fldenv
add
out
jp
mov
xchg
popa
orb
dec
lar
sbb
jl
and
mov
rcrl
xchg
mov
sub
out
stc
mov
int3
cmp
and
les
gs
dec
lahf
pop
push
push
rorb
aad
mov
cmp
sub
pop
add
lock
outsl
add
sbb
sbb
and
cmp
out
mov
enter
stos
xor
inc
enter
or
bound
adc
movsl
xchg
inc
popa
mov
icebp
xor
jle
ret
js
mov
insl
gs
cs
inc
pusha
nop
mov
out
inc
jne
shlb
sbb
dec
int3
ud2
ljmp
fnstsw
pop
repnz
lahf
shr
and
add
fdivs
lea
addr16
and
sarb
cli
dec
adc
sub
cld
pop
pop
add
shll
xchg
popa
xor
mov
mov
jl
movsb
arpl
lret
stos
mov
nop
ret
pop
or
pop
cmpl
mov
inc
jmp
scas
mov
in
jg
push
xor
pop
cmp
add
push
mov
adc
xrelease
push
std
leave
cltd
add
push
mov
or
and
mov
pop
jmp
shll
xor
rclb
mov
das
int
dec
push
shl
pop
loop
pop
adc
mov
adc
xlat
sbb
sbb
sti
xor
jl
mov
neg
mov
xchg
or
jmp
lret
xchg
xor
cmp
lds
repnz
sub
popa
push
jae
xor
fcomip
adc
lret
gs
sar
imul
ret
inc
mov
int3
mov
xor
call
cwtl
idivl
shlb
push
lcall
cld
mov
pop
call
mov
cli
test
cmpsb
inc
je
rcrb
mov
in
mov
movsb
push
in
dec
gs
jg
jmp
gs
rcr
stos
jne
and
or
lcall
inc
mov
out
sbb
cltd
lret
sbbl
add
loopne
imul
xor
into
add
jp
cltd
outsb
sti
mov
xor
sub
shlb
cmp
in
pop
mov
shlb
imul
inc
sbb
or
xor
outsl
rolb
xor
out
cmc
pop
leave
pop
imul
lds
and
repz
mov
mov
adc
js
sarb
loope
push
sbb
mov
pushf
or
loop
add
inc
stc
xor
sbb
movb
loop
rorb
leave
xor
les
movsb
cmp
cmc
jno
and
cltd
push
ja
cltd
mov
mov
pop
fcoml
fdivs
or
xchg
negb
xchg
in
jnp
mov
ss
and
jp
lock
test
int3
mov
cmp
movsl
or
imul
inc
xchg
fwait
jge
lea
jg
or
icebp
sub
xor
leave
test
mov
mov
dec
push
in
pop
int
pop
ret
or
sbb
aas
iret
pop
cld
dec
cmp
add
ret
aam
add
mov
adc
mov
testl
cmpsb
lea
rorb
imul
lock
and
loop
and
scas
jb
leave
cmp
dec
xlat
loope
sub
xchg
mov
test
mov
leave
dec
inc
dec
shl
out
fmuls
sub
xor
xor
xor
mov
push
insb
push
mov
push
jle
pop
mov
jb
cmc
jbe
mov
inc
cmp
and
rcrb
add
and
pop
mov
pop
das
or
cltd
inc
fistpll
push
xor
mov
pushf
xchg
ret
scas
pop
aad
pop
inc
mov
mov
lahf
mul
adc
mov
adc
xor
push
sbb
push
mov
sub
les
cld
add
adc
inc
fucom
xchg
les
scas
mov
test
std
cmp
cmp
push
ret
add
xchg
fists
into
cmp
mov
jae
aam
sub
lahf
sarl
daa
adc
outsl
jle
inc
shll
and
dec
mov
push
lock
das
inc
sbb
cld
cmp
pop
test
jecxz
test
mov
addr16
fisubrl
adc
mov
or
dec
add
fs
push
push
sub
mov
lcall
pop
adc
sbb
das
aas
mov
fwait
mov
lock
lahf
das
outsl
pop
shll
lods
sbb
add
add
mov
ret
pusha
sbb
jns
inc
lret
cmp
pop
cmp
and
push
cld
cmp
lods
mov
inc
ficoml
jg
das
mov
adc
stos
mov
xor
xor
cmp
gs
push
out
xchg
out
sub
lcall
pop
mov
dec
inc
popf
rolb
adc
cmp
imul
xchg
popa
in
add
popa
mov
dec
fisttps
xor
aad
rcrb
jecxz
mov
daa
orl
dec
cmpb
lods
test
rclb
mov
cmp
or
inc
lods
mov
jb
lcall
and
rolb
ss
push
and
data16
add
nop
pusha
push
gs
into
outsl
adc
cli
or
sub
test
stos
adc
adc
jnp
addb
fcomps
into
and
push
inc
ja
push
mov
enter
and
pop
pop
arpl
imul
test
inc
stos
sti
call
insb
jge
ret
jg
jge
fwait
jbe
mov
popf
fildl
les
sbb
sub
ficomps
sti
inc
inc
dec
int
mov
dec
jbe
xchg
and
xor
aaa
dec
push
cmp
sub
xchg
xchg
adc
cmp
ret
shl
cmp
div
jno
xchg
mov
pop
aad
jnp
lds
or
fcompl
adc
and
dec
sahf
outsl
xor
int
pop
mov
and
or
inc
sbb
movsl
adc
test
pop
repz
adc
cmp
aam
sub
mov
adc
lahf
pop
or
fucomi
dec
xor
mov
adc
jge
ds
mov
fisubrl
insb
jns
jnp
js
scas
aad
shr
dec
push
xchg
cmpsb
pop
into
sub
jbe
fidivrs
dec
mov
jmp
addr16
xor
xchg
js
nop
test
mov
cmpsl
movsb
xorb
dec
daa
lret
jb
scas
xor
out
adc
pusha
popa
fnstcw
mov
pop
inc
lahf
jb
inc
adc
sbb
inc
and
lcall
cli
cs
adc
test
movsl
aas
lahf
xorl
push
repz
aam
std
pusha
jg
in
shrl
sahf
inc
sub
adc
lods
pop
out
out
jecxz
repz
idivb
sbb
fldcw
retw
lods
cs
lcall
std
sub
mov
sbb
add
sub
je
mov
sub
xchg
add
or
hlt
add
and
movd
jecxz
test
test
pop
mov
jecxz
ja
fldcw
outsl
lahf
adc
dec
sub
aas
loope
lds
cmp
js
int
std
rep
bound
push
addb
xor
mov
adc
js
fbstp
inc
sub
pop
dec
add
movsb
dec
cmp
test
and
or
insb
loop
xchg
jb
push
jmp
push
cmp
sub
aaa
mov
cli
mov
mov
out
es
dec
shlb
xlat
scas
leave
std
and
and
ljmp
inc
insb
movsb
dec
and
sub
xchg
addr16
or
inc
mov
pop
movsb
lcall
sub
jge
in
cmp
sub
shll
pop
dec
jg
fidivrs
dec
or
and
mov
stos
pop
mov
dec
and
lret
out
mov
test
movsb
jo
sub
nop
js
ds
ror
pop
mov
push
xor
pop
xchg
adc
jns
pop
mov
cmpsb
cmpsb
xor
in
std
int
mov
cwtl
mov
sbb
inc
and
adc
jnp
pop
cmp
out
cmp
inc
enter
call
sub
lret
ss
mov
sub
pop
pop
xor
bound
aaa
jns
adc
loop
sbb
mov
sahf
sbb
lds
movsl
shrl
adc
mov
xchg
xchg
inc
mov
jnp
cmp
aas
into
pmulhuw
xor
dec
xchg
cli
lods
cs
mov
int
out
ret
mov
adc
or
fistpl
leave
xorl
ss
out
out
repz
movsl
and
cmpl
inc
sbb
cmp
mov
mov
push
dec
push
mov
ret
jnp
pop
or
add
bound
movsl
and
and
sbb
lret
sbb
push
lods
insb
mov
sbb
ja
cmp
bound
and
sub
sbb
out
push
ljmp
pop
js
xlat
cmp
cmpsb
jmp
add
or
shlb
inc
ret
cwtl
lcall
push
sbb
rcrl
cmp
rorb
cmpl
mov
xchg
out
test
xchg
jg
and
push
cmp
xor
mov
sub
arpl
mov
shrl
xchg
es
je
mov
loope
push
cs
xchg
adc
push
test
inc
faddl
mov
sahf
outsl
dec
repz
cmpsl
jb
jp
insl
fidivrs
lret
ljmp
or
cmp
int
pop
dec
je
push
push
mov
es
gs
push
sbb
int
mov
and
sbb
inc
je
push
fcomps
fistps
jne
inc
imul
xchg
arpl
add
divb
int
repnz
je
sub
fidivrl
cld
out
out
push
sub
sbb
push
inc
push
mov
fs
lods
or
sbb
sbb
lods
add
in
mov
aas
sbb
int
or
ret
push
orb
sub
popw
les
push
jp
sub
fmull
dec
es
cmp
mul
call
outsl
ja
aaa
pop
xchg
push
jl,pn
loope
add
movsl
ret
dec
jecxz
jne
gs
subl
mov
stos
xor
mov
mov
inc
insl
sbb
scas
push
sahf
xchg
sbb
inc
mov
jb
sbb
popf
jp
in
insb
stc
cmp
arpl
push
add
fcmovnu
insb
fs
into
leave
pushf
dec
sbb
scas
popa
test
loop
outsl
dec
mov
stos
mov
mov
lcall
js
mov
aas
add
lds
in
xor
sbb
xchg
clc
adc
pop
sti
xchg
push
sub
sub
jmp
xchg
xchg
les
incl
cs
stc
mov
sub
movsb
rclb
xor
movsb
inc
sti
xor
pop
icebp
xchg
outsl
int3
lock
push
insb
test
mov
mov
shll
cltd
in
enter
mov
pushf
insl
repz
adc
mov
imul
add
jne
imul
add
adc
imul
dec
pop
js
xchg
lahf
leave
push
push
mov
fnstsw
inc
push
mov
push
cmp
jnp
and
loopne
clc
mov
lock
movsl
stc
sbb
inc
repnz
sbb
cmpb
add
mov
fbstp
gs
xor
sub
test
xor
daa
inc
inc
or
cmp
and
jo
addr16
test
sbb
sub
testl
nop
or
in
xrelease
push
mov
arpl
lret
jne
jg
clc
pop
sub
rcll
xor
sahf
leave
ret
and
sub
pop
sub
mov
jnp
std
scas
test
push
out
les
add
inc
sub
scas
adc
pushf
xor
bound
in
cmp
dec
jecxz
cmp
adc
jnp
ja
lcall
in
rolb
xor
in
pop
loop
and
pusha
test
data16
and
js
ja
mov
in
inc
inc
enter
and
leave
dec
ljmp
cmp
frstor
and
int3
add
mov
ret
cmp
pminsw
push
scas
jp
xor
adc
cmpsl
andl
sahf
insl
jg
and
and
arpl
nop
push
subb
dec
mov
pop
or
cli
dec
sub
int
das
mov
push
out
pop
andl
cmp
outsl
fcos
subb
sub
add
pop
sub
or
ret
cld
mov
or
push
cmpsb
mov
mov
sahf
mov
dec
dec
ret
lret
in
loope
xlat
jp
scas
testl
jmp
pop
pusha
sbb
std
clc
cmp
daa
pop
icebp
stc
sarl
ljmp
inc
inc
xchg
test
pop
and
sarl
cmpl
mov
add
add
aas
sbbb
bound
popf
addr16
cmpsl
sub
jbe
sub
dec
push
mov
outsb
xchg
dec
fstpt
and
pop
and
and
ljmp
repnz
mov
or
lea
mov
aaa
and
shll
sub
lds
sbb
mov
mov
clc
sti
leave
cld
popa
rcrb
enter
sbb
into
ss
js
fwait
in
push
jne
and
mov
or
lret
push
add
pop
push
stos
hlt
aaa
jnp,pt
shl
ds
ret
add
inc
sahf
or
xlat
cmp
or
mov
loopne
xchg
lods
ja
push
mov
mov
inc
fstl
mov
push
add
jnp
cltd
sub
add
out
int3
or
fs
push
gs
jecxz
ss
cwtl
hlt
xor
int
jno
ja
or
or
int
xlat
cmp
add
sub
xchg
push
test
jo
je
js
pushl
mov
aaa
jae
and
sbb
stos
sub
mov
sahf
lods
xor
xlat
xor
adc
test
pushf
pop
je
pop
mov
pop
daa
xor
mov
xchg
dec
in
cmc
sub
mov
push
jp
sub
in
adc
rol
fnstsw
or
in
loop
inc
pop
push
fucom
js
pushf
mov
mov
incl
sub
sbb
out
inc
sahf
mov
cmpsl
push
adc
pop
daa
aad
out
cmp
jecxz
enter
jae
inc
aad
cltd
pop
jge
cwtl
xchg
push
push
in
fisttpll
inc
xor
aas
cmp
cmp
movsl
das
or
mov
rep
ljmp
push
loop
inc
jge
dec
test
xchg
scas
mov
jp
je
out
sub
push
outsl
clc
mov
cmc
mov
ror
mov
lret
nop
lret
push
cmpsb
mov
iret
lret
or
mov
movsl
lods
shl
dec
cltd
push
and
mov
jecxz
aam
push
mov
repnz
push
dec
fldl
xlat
adc
push
lahf
sub
ja
jecxz
push
flds
mov
ljmp
inc
shlb
xor
in
push
adc
outsl
sbb
jp
call
loopne
int
jecxz
test
lds
push
roll
fbstp
sti
iret
dec
daa
call
sti
mov
push
das
lahf
int3
mov
fcompl
fcompl
test
daa
xlat
popl
pop
sbb
ss
push
fcoms
xlat
adc
pop
mov
pop
mov
rorb
and
pop
sbb
push
pusha
loop
in
sbb
dec
mov
lahf
js
pushl
mov
addl
and
shl
dec
sub
ja
xchg
jmp
fldt
inc
out
repz
push
orl
xchg
out
sbb
mov
out
push
hlt
inc
fwait
push
lds
push
jb
or
flds
aas
xor
dec
mov
adc
andb
cmp
andb
cmp
enter
mov
out
lock
je
jne
xchg
ret
pop
stos
and
push
mov
loope
mov
and
imul
stos
xchg
rolb
dec
insb
inc
leave
out
sarb
mov
fmuls
enter
icebp
fptan
inc
sti
push
pusha
sub
leave
pop
cmp
push
inc
pop
lds
sub
mov
and
jo
cmp
sub
cmp
xchg
sbb
in
arpl
xchg
mov
jecxz
arpl
std
xchg
addl
cmp
das
push
adc
cs
add
inc
mov
out
sbb
dec
rorl
lods
xor
mov
out
std
dec
jae
test
push
jle
sbb
add
stos
int
mov
fstl
hlt
data16
pop
loopne
aad
mov
jp
lret
aad
cli
ss
fstps
sbb
dec
mov
xchg
mov
aaa
lret
lcall
pop
insb
mov
and
mov
bound
testl
inc
hlt
bswap
ss
repz
and
and
je
sub
pop
xchg
inc
aas
subl
push
fsts
ds
mov
push
sarl
cmpsb
scas
mov
add
add
xchg
fsubr
or
or
cmpb
dec
and
xchg
insb
test
mov
fs
jae
loop
and
in
addl
cmpsb
cmc
sub
test
mov
add
push
pushf
push
and
out
fcmovnu
mov
test
and
jbe
sbb
int3
gs
mov
fildl
in
fisubrs
adc
add
ds
cmpsb
jmp
daa
jle
sbb
cmp
pop
add
xchg
jp
test
lods
popa
aaa
or
sbb
jp
jg
in
js
jecxz
cltd
sahf
repnz
pop
mov
or
repz
lar
push
aad
jecxz
mov
pushf
sbb
xchg
sbb
mov
aad
ficomps
mov
mov
xchg
ss
sbb
int3
dec
incb
pop
xor
andl
ficomps
shll
aaa
pop
pop
rcl
push
insb
call
inc
stc
imul
dec
out
loope
sub
outsb
lret
in
popa
fidivl
lcall
adc
test
and
jns
push
enter
mov
in
in
outsl
dec
adc
mov
loopne
dec
fildll
jl
les
addr16
lcall
sub
dec
adc
jmp
jb
cmp
adcb
lret
pop
push
jle
add
or
call
aad
in
loop
mov
inc
mov
sub
mov
push
enter
dec
push
mov
mov
test
sub
lods
or
rorb
add
jg
insb
lods
cwtl
mov
fmull
movsb
in
sti
loop
fnsave
mov
data16
std
sub
lcall
das
cld
mov
aad
jb
test
cwtl
push
lcall
ret
push
jno
mov
fcomps
and
xlat
pop
push
cmp
xchg
adc
and
cmp
inc
cli
add
xor
add
pop
repnz
cmp
iret
mov
popa
bound
dec
sbb
in
pop
stos
xchg
inc
or
add
shl
insb
sbb
xchg
jne
mov
in
push
lods
je,pn
insl
and
pushf
in
xchg
pop
test
pop
xor
in
flds
push
cmc
jb
mov
fwait
lret
push
push
mov
popa
cltd
xchg
sbb
pop
arpl
xorb
loop
mov
pop
push
push
xchg
and
push
dec
shll
cmp
cwtl
and
pop
mov
adc
sahf
insb
mov
sbb
mov
cmp
subl
or
push
dec
inc
daa
into
ss
and
es
or
shlb
pop
fdivl
mov
je
mov
rcrb
dec
clc
aaa
fisubrl
addr16
insb
add
pop
ret
pop
mov
pop
adc
bound
mov
adc
mov
cmp
xchg
std
mov
mov
add
cmp
jne
xor
sahf
cmp
rcr
or
test
popa
pop
mov
jl
xor
mov
xchg
adc
testb
fs
jecxz
stc
or
pop
mov
xor
pushf
sub
cld
adc
rorl
lds
lret
clc
jle
in
test
inc
mov
mov
jp
inc
sub
push
lds
shll
rcrb
xchg
xchg
sbb
sbb
mov
ret
lret
pop
inc
imull
xchg
xor
jle
mov
or
add
scas
scas
sbb
sub
mov
and
jae
jo
insl
cmc
mov
push
dec
inc
out
jge
dec
sbb
cltd
cwtl
add
mov
or
mov
js
dec
loope
insb
pop
fnstenv
std
das
lds
pop
or
sub
fs
xchg
jl
sarl
insb
std
add
pop
push
pop
mov
pushf
push
inc
adc
subl
and
ret
jo
into
inc
inc
inc
aad
xor
notb
and
xchg
sahf
inc
pusha
fiadds
aaa
sahf
jle
or
js
adc
pop
je
jnp
mov
jb
add
xorb
xor
filds
clc
iret
call
or
cmp
mov
les
add
jbe
call
call
and
mov
out
cmp
adc
pop
jne
jno
mov
pop
push
in
ficompl
push
jp
into
shlb
cli
pop
insb
stos
xchg
cltd
cld
dec
clc
in
and
mov
in
stos
out
stos
cwtl
jmp
push
outsb
fmull
cmp
popf
add
cmp
jecxz
movsb
push
inc
or
mov
jmp
test
mov
out
jnp
loop
int3
jae
movsb
xchg
fidivrl
add
decb
pop
or
js
push
cld
push
jmp
icebp
insl
push
les
fadds
inc
mov
in
cmc
addb
mov
or
test
js
lret
ds
movsl
movsb
sub
scas
inc
outsl
daa
pop
jne
ds
ljmp
ds
push
jmp
ror
jp
sub
inc
jg
pop
inc
cmpl
ljmp
fs
or
xchg
cmc
sub
mov
jo
sbb
sub
push
outsl
sbb
jl
shlb
adc
lds
movsl
roll
xchg
lock
repnz
adc
daa
mov
pop
dec
sbb
lret
cmp
or
aas
sub
lret
cmp
hlt
cwtl
leave
pop
fsubrl
adc
ds
sbb
jmp
mov
mov
cwtl
push
inc
sti
mov
sbb
js
inc
mov
andl
sub
mov
push
jnp
xchg
mov
rcrb
ljmp
jae
mov
test
push
loop
test
repnz
sbb
js
ja
ds
pop
pop
cmpb
xchg
scas
mov
xor
ja
adc
mov
mov
cmp
int
in
inc
sahf
in
pop
mov
sub
adc
subb
mov
fsubr
xchg
or
cwtl
rcr
shufps
loop
inc
test
shr
out
out
test
dec
and
or
xbegin
and
fsts
jb
cmc
push
add
or
rcll
addl
inc
cmp
mov
dec
int3
inc
in
inc
xchg
gs
lret
int3
sbb
mov
sub
xor
pop
loop
fwait
pusha
das
add
mov
sahf
adc
or
iret
icebp
out
xor
push
cmp
data16
and
sub
xor
mov
test
mov
fs
add
in
add
imul
insl
xchg
push
dec
movsb
dec
inc
andb
gs
xor
shll
add
push
repz
shll
xchg
mov
add
push
mov
jbe
hlt
xchg
ja
mov
xchg
in
mov
dec
sbb
fdivrs
data16
mov
shll
or
and
lea
mov
mov
dec
fisttpll
int
cmpsl
movsb
mov
iret
in
popa
mov
or
subl
cltd
adc
lcall
pop
or
push
stc
mov
daa
ss
sti
pop
cwtl
push
lahf
mov
icebp
jb
mov
sahf
or
bound
outsl
icebp
es
dec
jle
scas
mov
cmp
imul
les
dec
sbb
lcall
pop
sbb
std
jno
cmp
outsb
xor
lret
mov
xchg
adc
das
pushf
nop
andb
sub
repz
and
fldl
cmp
sbb
mov
jle
pop
lcall
jl
push
sub
jae
loopne
sti
repz
mov
xor
adc
inc
push
add
imul
inc
dec
pop
dec
shlb
sbb
dec
jne
sub
imul
jae
popf
and
adc
add
mov
sahf
es
lods
lret
shr
xor
and
mov
js
ret
loopne
mov
shr
add
push
mov
or
cltd
int3
pop
popa
sbb
pushf
aam
sbb
orb
dec
adc
jle
jae
xchg
xchg
sbb
adc
lods
push
add
paddw
pop
orl
lret
xchg
ja
loope
jecxz
pushf
xchg
gs
lret
mov
jb
into
stos
xchg
lcall
or
ja
pop
xchg
lret
mov
xchg
outsb
xor
ret
or
add
dec
and
mov
dec
xor
mov
movsl
inc
pusha
dec
xchg
call
fs
sti
xchg
test
lahf
adc
mov
and
outsl
mov
xchg
and
and
popa
xchg
lods
cmc
ret
into
mov
sarb
sbb
sub
cltd
call
jno
stos
mov
movsb
sbb
movsb
sub
push
int3
jecxz
adc
push
fisttpl
lods
dec
and
sbb
push
pusha
jbe
xchg
inc
out
les
ss
mov
mov
mov
jle
add
outsb
shrb
cvttps2pi
lcall
pop
imul
movsb
jb
push
hlt
ficoms
lcall
pop
inc
push
repz
jo
jns
mov
out
pop
addr16
cmp
jo
push
ret
dec
adc
jno
in
scas
adc
add
cmp
mov
shrb
shll
xor
pop
imul
push
inc
out
cltd
lret
cmp
insb
hlt
es
das
sbb
fst
xor
movsl
loopne
in
ret
jno
mov
push
outsb
enter
enter
lods
rorl
xchg
pop
inc
iret
pop
outsl
xchg
out
push
les
cmpsb
stc
mov
pop
repnz
and
or
inc
push
in
mov
iret
pop
push
or
mov
in
ret
pop
push
mov
xchg
fs
adc
scas
push
lods
xor
icebp
xchg
into
and
push
sbb
insb
ja
jge
push
pop
stos
push
sbb
xor
inc
and
cli
repz
loope
xchg
pop
pop
test
popa
inc
scas
cmpsb
sbb
lods
gs
test
stos
pop
mov
ret
sbb
jne
jnp
lcall
fsubrl
jmp
fbstp
test
adc
or
sub
ja
setns
xor
sub
dec
mov
mov
sbb
dec
pop
lods
dec
cwtl
and
fwait
dec
and
shl
hlt
ret
jno,pn
pop
repz
test
adc
push
push
xchg
scas
inc
arpl
jbe
enter
xlat
and
or
push
push
mov
push
fnstenv
and
mov
mov
and
jmp
gs
cmpsl
adc
int3
int
mov
aas
push
push
fldt
push
and
cmpsl
lcall
cmp
aas
push
xor
pop
rorl
stos
jmp
out
pushf
in
jno
xorb
mov
mov
mov
sarl
cmpsl
sti
and
add
fistps
jp
xor
loope
and
jecxz
jno
stos
mov
pop
push
add
insl
adc
arpl
mov
das
ret
sub
dec
test
jo
ficompl
jne
dec
mov
pop
inc
gs
and
mov
sahf
push
push
mov
sbb
cmp
lret
imul
fwait
jne
add
xchg
ds
cmp
and
push
xchg
mov
xchg
outsb
mov
lods
dec
xlat
fdivl
adc
xchg
repnz
ja
xor
int
cli
movsb
xlat
cmpsb
sbb
sub
mov
out
popa
push
les
movsl
push
dec
jno
mov
out
jmp
jmp
scas
stos
xchg
jne
push
jg
dec
hlt
mov
js
mov
fisttpll
mov
rorb
jg
daa
outsb
mov
jo
or
or
es
inc
insb
xor
arpl
and
in
pusha
arpl
xchg
or
bnd
rcll
leave
cltd
mov
xchg
push
vphaddubw
mov
mov
inc
cmp
adc
pop
or
je
dec
popf
test
sub
push
adcb
in
rcll
lea
jno
adc
pop
js
adc
push
mov
pop
stos
and
fistl
cwtl
sbb
xorb
int3
nop
sbb
pusha
movsb
add
xor
mov
in
data16
dec
or
dec
cltd
repnz
mov
cmp
adc
push
aad
and
xchg
test
xlat
cmp
sbb
imul
xchg
jle
xor
add
xor
or
cld
inc
hlt
jbe
clc
adc
fisttps
out
lds
lea
jbe
sbb
ret
sahf
dec
mov
mov
xorl
sub
aad
mov
xor
mov
inc
iret
mov
outsl
cs
sub
mov
sahf
loopne
imul
insb
cmp
jbe
loope
mov
loopne
xor
in
xchg
pop
push
xor
sub
fwait
inc
fcomps
xchg
test
ficomps
js
aaa
es
mov
adc
pop
dec
cs
xchg
in
mov
cmp
push
test
sbb
sbb
in
or
sub
xchg
sub
jnp
pop
loope
jnp
inc
iret
mov
jmp
adc
in
call
add
popa
mov
mov
mov
insl
leave
call
fldcw
push
adc
sti
movsb
fsubrs
dec
pop
outsl
push
dec
push
xchg
sub
mov
mov
sahf
fwait
std
mov
push
in
les
cltd
daa
add
aam
and
pop
lcall
cmp
enter
dec
adc
dec
mov
aad
out
es
div
jns
dec
and
aas
ds
fiaddl
lock
movsl
mov
jg
scas
sub
pop
xor
sbb
jl
mov
inc
flds
xor
push
lret
clc
fiaddl
fstl
test
mov
cwtl
std
imul
setns
psubb
mov
add
push
mov
pop
mov
lret
lock
test
xor
movsb
jge
cmp
sbb
add
push
xchg
add
xchg
adc
add
cmc
shlb
add
inc
lods
push
cld
jecxz
shl
pusha
sub
adc
mov
mov
loope
test
fdivrs
jns
rclb
test
push
sbb
jl
xor
mov
mov
inc
push
xchg
inc
ss
or
out
ret
clc
gs
mov
sub
lds
lods
sbb
jecxz
jns
add
rcl
pop
pop
dec
lret
mov
fmul
insl
sub
cmp
mov
push
pop
lods
sub
add
adc
testb
dec
icebp
add
jg
add
lock
and
add
sub
imul
filds
loope
lret
jl
popa
xor
lock
jns
fstl
inc
mul
fildll
ja
rcr
mov
pushf
sbb
insl
mov
jmp
aad
lods
push
and
fs
stos
and
cmp
idiv
push
vandpd
nop
mov
sbb
xor
mov
ljmp
sub
pushf
cmp
sub
mov
dec
test
loopne
dec
imul
adc
test
push
xor
sbb
jp
pop
mov
std
cli
stos
fcompl
add
loope
bound
cmpsb
push
nop
addr16
mov
aam
popf
sub
mov
adc
ret
out
or
fidivrs
icebp
ljmp
mov
xor
add
into
rcl
cld
mov
inc
int
jecxz
fs
and
mov
mov
int
rcrb
cwtl
lahf
push
aas
stc
dec
pop
out
mov
adc
sbb
in
mov
lods
outsl
push
sub
or
inc
mov
out
movsb
push
cli
ds
jne
push
bound
test
js
xchg
aam
es
jle
rcrl
mov
add
add
sarl
ss
cwtl
adc
mov
push
cmp
aaa
inc
mov
xlat
mov
sub
xchg
lret
outsl
mov
and
gs
pop
adc
xor
or
xor
sbb
inc
ret
inc
lahf
gs
imul
push
rcrb
dec
scas
sbb
xor
mov
and
aad
xchg
and
push
bound
pushf
xlat
fiadds
movsl
rolb
cli
add
outsl
and
or
scas
lods
pop
outsb
bound
ret
shl
daa
insb
out
push
ret
mov
or
add
mov
stc
stos
ret
cmp
add
pop
idivl
fsubl
pushf
xor
lock
lcall
mov
push
pusha
xchg
and
int3
lods
jle
mulb
xchg
fcoms
icebp
lret
test
dec
pop
mov
sub
adc
jmp
mov
inc
adc
pop
iret
pop
sbb
pushf
ss
cwtl
arpl
dec
xor
testb
jne
add
adc
test
outsl
sbb
sbb
fisttpll
js
add
mov
ret
stos
cmc
xor
lahf
icebp
stos
xor
mov
jmp
dec
clc
adc
cmp
mov
mov
push
lcall
sub
mov
pushl
mov
xchg
icebp
aas
pop
fxch
cmp
in
sub
cmp
je
pusha
arpl
lods
outsb
sar
out
inc
mov
jmp
cmpl
ret
mov
fstpl
loopne
pushf
sub
add
std
mov
fldenv
sub
jne
bound
push
lock
and
mov
jmp
sub
sub
rolb
xor
jbe
jp
aad
xor
dec
js
nop
lcall
cmp
jb
cmp
xlat
testl
loop
push
scas
hlt
xor
sahf
jnp
out
test
xor
inc
iret
sbb
fisttpll
xor
xor
push
xor
shlb
inc
inc
loope
mov
push
mov
adc
mov
xchg
jbe
js
inc
subl
inc
lcall
xchg
add
or
jae
repnz
cmp
jg
sbb
movsl
fwait
add
and
aaa
popf
sbb
push
push
push
mov
mov
cld
aas
aaa
es
jo
jo
adc
lock
xchg
mov
xchg
or
pop
and
ss
je
xchg
pusha
subb
or
outsb
xchg
and
rcrl
mov
pop
add
inc
lret
mov
adc
pop
push
cs
xchg
inc
mov
lea
lea
xchg
dec
cmpsb
fistpl
les
xorl
and
xor
in
pop
fwait
jne
adc
scas
mov
jl
mov
out
push
aam
push
out
mov
stc
jecxz
push
mov
mov
test
out
stos
xlat
mov
or
xor
jp
mov
in
lods
mov
adc
or
jecxz
insl
wrmsr
mov
mov
push
inc
imul
fucomip
lret
fisubrl
dec
mov
mov
pop
in
popf
lret
cmp
xchg
lret
add
mov
scas
xchg
mov
add
in
pop
pop
es
mov
mov
lahf
or
mov
das
lcall
mov
inc
sti
lds
mov
pop
out
cld
loop
add
mov
xchg
mov
andl
or
pop
nop
or
insl
mov
repz
or
lret
shll
mov
dec
sti
fstpl
lods
in
jno
xor
stos
jg
mov
in
xchg
dec
sub
iret
sar
pop
inc
dec
out
dec
in
sbb
dec
aam
or
mov
std
adc
loopne
jbe
repnz
jle
add
popl
adc
and
mov
adc
fneni(8087
popf
cmp
enter
xor
pop
adc
xor
mov
sbb
loopne
adc
pop
sbb
adc
popf
cmpb
out
jae
push
scas
loope
cmpsl
xor
nop
aam
jecxz
test
dec
mov
mov
or
rorl
fwait
push
cmp
xchg
or
jbe
cmc
mov
fwait
sub
lods
in
xlat
aad
ret
sahf
jo
xor
xchg
int3
jne
ljmp
ficomps
dec
fildl
rolb
inc
xchg
lds
inc
cwtl
ljmp
loope
add
mov
daa
adc
fimuls
das
dec
mov
jne
lock
cmpsb
xchg
test
js
sub
or
dec
sbb
pop
and
adc
push
cwtl
jge
popf
lods
fidivrl
arpl
or
stos
lods
mov
cltd
fdivl
mov
inc
mov
sbb
jmp
mov
icebp
jge
ja
leave
mov
adcb
pop
cwtl
lcall
cmpb
cmp
push
inc
out
pushf
jge
es
mov
lret
jnp
mov
pop
int3
in
addl
scas
or
in
adc
cmc
pop
fisttps
sbb
inc
shrb
cmpsl
sub
jae
cmp
iret
mov
nop
in
subl
in
mov
push
popf
ret
cli
jge
mov
pop
inc
dec
pop
pop
xchg
and
add
lcall
push
mov
sub
insb
dec
push
xchg
pop
fdivr
fnstsw
sub
dec
addl
scas
push
xchg
stos
mov
lahf
push
mov
lods
repnz
adc
inc
mov
add
aaa
shr
mov
xor
scas
push
test
stos
jb
pop
insl
mov
jnp
aaa
stc
lcall
cmpsb
ljmp
aas
insl
jp
jle
lret
push
shrb
pushf
insb
ja
push
push
sbb
jmp
pop
sar
sar
add
pop
cli
popa
jae
mov
inc
push
gs
mov
es
dec
dec
jbe
pushf
mov
push
outsb
mov
pusha
add
ret
fcoml
testb
test
xor
fcoms
push
add
shll
loop,pn
pop
sub
and
mov
arpl
loope
pop
nop
sub
into
in
mov
jl
stos
push
mov
mov
shrl
rolb
push
sbb
hlt
dec
or
movsb
fwait
push
xor
fistpl
jno
inc
add
testl
fdivl
in
xor
mov
lret
xor
jo
xchg
cmp
add
and
aam
add
adc
ret
mov
push
mov
cmp
inc
leave
xchg
out
repnz
mov
movsb
mov
sub
cmp
nop
inc
data16
mov
stos
push
into
xchg
pop
call
cs
out
aaa
xor
push
imulb
addr16
push
pop
mov
in
sub
dec
int
adc
jecxz
data16
decb
pop
in
nop
xchg
filds
dec
rclb
mov
mov
jbe
shrb
push
adc
fucomi
orl
loope
fnstsw
addr16
add
dec
pusha
add
mov
push
mov
stos
rcrb
adc
and
pop
cmp
je
mov
stc
mov
fnstcw
push
jle
cld
jp
subb
fsubr
movsl
das
in
in
nop
sub
inc
mov
std
pop
testl
sbb
stc
iret
mov
out
mov
lret
cmp
scas
dec
xchg
pop
xor
xor
std
push
cmp
jecxz
adc
jg
mov
fdivrl
scas
out
xchg
ds
lahf
inc
sbbl
es
and
roll
test
fisttpl
rclb
leave
inc
mov
sti
dec
les
cmp
dec
mov
mov
mov
or
arpl
pop
mov
pop
shl
popa
add
push
ficoms
xlat
in
imul
jno
insb
sub
add
jb
fcmovnu
popa
pop
je
ljmp
repnz
adc
stos
sbbl
fs
adc
int
rcrb
pop
or
pop
loope
cmp
and
jg
ljmp
js
enter
inc
or
leave
sbb
loop
push
push
loop
pop
push
js
xchg
cmp
pushl
jbe
cmpsl
cltd
push
ss
cmpsl
adc
sahf
push
popa
cmpsl
inc
arpl
mov
sbb
pusha
loop
or
cltd
cmp
mov
rorl
sbb
pop
inc
aaa
dec
loop
or
cmp
mov
xchg
fwait
xor
xor
sub
mov
fistl
call
inc
dec
pop
mov
cmpsl
jg
add
negl
sbb
addr16
sub
inc
imul
fnsave
cmp
add
add
adc
pop
stos
and
testb
into
xor
jmp
ret
les
popl
es
arpl
jne
push
icebp
or
loope
aas
movsl
or
lds
mov
cltd
pop
ss
repz
add
mov
lret
addr16
mov
nop
mov
and
data16
rcl
lods
lods
jbe
or
jno
sub
lods
jmp
imul
xor
adc
mov
gs
xchg
cs
push
sub
mov
imul
mov
xor
lret
add
xchg
rcrl
js
insb
lock
and
mov
ljmp
fdivrs
shrb
mov
idiv
nop
sbb
push
fsub
sbb
xor
sahf
out
push
add
int3
mov
not
rcr
lahf
sbb
add
push
sbb
hlt
aad
adc
daa
inc
std
mov
xor
enter
dec
daa
rsm
ret
pop
fs
cld
fsubrs
pop
jmp
fldl
sbb
xor
bound
inc
std
lahf
xor
sub
test
in
and
mov
pushf
mov
loop
jb
neg
cmp
mov
sub
mov
mov
pop
jmp
mov
xor
jge
enter
add
call
jecxz
xlat
pop
pop
push
enter
mov
sub
out
pop
mov
js
inc
shlb
push
in
xor
jg
xchg
push
mov
ret
mov
mov
aaa
push
jmp
and
cmp
push
repz
cmp
js
rolb
pusha
mov
std
adc
dec
out
cld
pop
enter
cmp
inc
mov
into
mov
ret
adc
aad
fucomi
fldt
gs
xchg
fsubrs
test
sarl
lcall
cltd
out
xor
into
push
mov
icebp
cmp
or
xlat
or
adc
cmp
sar
mov
sbb
outsb
sub
cmpsl
imul
jl
js
leave
and
rol
adc
cmpsb
mov
sbb
in
neg
sbb
aas
or
insl
fs
jle
mov
mov
decl
or
add
sbbl
inc
dec
inc
xchg
insl
push
pop
lcall
mov
pop
es
addr16
insl
lods
fisubrs
bound
arpl
mov
lds
jmp
xchg
inc
pop
pop
add
test
inc
iret
mov
pop
jo
pop
xchg
push
loop
or
fstps
arpl
xor
lahf
pop
aas
or
pop
fidivl
xchg
and
pop
lds
sbb
sar
mov
outsb
mov
jns
lds
fpatan
jl
ret
shr
cmpsl
jg
pushf
pop
mov
das
mov
and
mov
jns
xchg
pop
mov
mull
xchg
jle
fdivrs
ret
loope
mov
inc
jecxz
adc
ds
add
aaa
push
cs
cmpsb
pushfw
test
lock
sub
hlt
jle
mov
test
mov
ja
pop
sub
inc
popf
subl
aam
pop
test
adc
loopne
es
cld
int3
stos
xchg
negl
aas
mov
stos
ljmp
bound
lock
dec
nop
jbe
icebp
fcmovnb
out
mov
inc
pop
sti
mov
cmp
addl
mov
ljmp
mov
fidivrs
daa
rcrb
mov
mov
mov
lock
push
cmp
dec
popf
insl
popf
and
dec
jnp
mov
pop
adc
inc
inc
test
test
lock
leave
mov
and
sbb
push
pop
cli
cmc
imul
xor
test
xor
int
stc
dec
icebp
imul
addr16
test
xchg
pop
jmp
movsl
enter
pushf
xchg
sub
dec
pop
mov
sbb
jmp
lret
fcoml
movsb
pop
push
sbb
adc
jne
xor
jmp
in
lods
mov
adc
xchg
jecxz
ss
push
mov
mov
xchg
fimull
shl
xor
fnstenv
add
xor
cmp
adc
mov
pusha
xchg
ret
cmpsl
cli
adc
cmp
inc
mov
xchg
int3
push
xchg
sub
jb
inc
shrl
in
inc
jns
mov
push
dec
xchg
inc
and
jb
ss
or
lea
stc
xchg
jecxz
jb
enter
cmp
jmp
push
adc
stos
dec
ja
cmp
cmp
jae
out
iret
bound
fstps
adc
cmc
adc
mov
jmp
ljmp
insl
xchg
fisubl
cmpsl
sub
jg
or
out
imull
cmp
in
add
dec
sti
fstl
fwait
mov
test
testl
inc
in
outsb
xor
sub
in
jg
lea
xchg
iret
idivb
xor
inc
jb
jge
xor
jo
jl
xor
ret
lock
call
xchg
pop
xchg
adc
cmc
lret
fadds
mov
mov
dec
sub
movsl
ja
jecxz
jge
jnp
mov
jecxz
imul
gs
imul
in
push
mov
inc
xchg
cmpsb
sbb
sbbb
push
testl
xchg
mov
or
adcb
or
jecxz
jns
push
insb
mov
fimuls
xchg
xchg
or
dec
jns
adc
pusha
es
idivl
adc
jbe
fldenv
inc
mov
push
xorb
push
cmc
mov
push
pop
leave
pop
mov
outsb
std
sbb
lret
and
pop
jo
stos
xor
das
je
arpl
inc
jle
push
and
popf
stc
adc
dec
or
les
imul
andb
inc
xchg
cmp
jns
das
outsl
cmp
pop
mov
push
xlat
fildl
sub
push
test
faddl
das
mov
jl
in
scas
mov
cmp
mov
test
mov
add
fiadds
movb
mov
ljmp
xchg
rorl
pop
or
rcl
cmp
cmc
ja
adc
push
mov
les
xor
pop
cli
aad
aas
pop
jns
in
sbb
outsb
movsl
fwait
or
xorb
fldenv
inc
jae
and
add
mov
aad
outsl
mov
xchg
add
push
stos
lahf
cmp
jo
adc
pop
int3
int
add
cmp
js
xor
arpl
ret
loop
imul
mov
in
sub
repz
fidivl
push
dec
paddq
sub
mov
mov
out
inc
fld
mov
lret
mov
sub
int
xor
push
in
jle
xor
shll
mov
outsb
bound
mov
dec
test
popa
xchg
mov
mov
fwait
sub
inc
dec
xchg
mov
out
rorl
cmp
and
jno
jne
shlb
bound
imul
hlt
inc
inc
call
test
xchg
sub
add
xchg
sbb
cli
sbb
sbb
sub
mov
mov
dec
or
in
nop
lds
repz
daa
mov
push
mov
sub
mov
test
sbb
adc
movb
test
pop
inc
lods
out
mov
ss
push
cmpsl
push
cmp
scas
movsb
mov
jbe
test
mov
pop
idivb
add
pop
loopne
pop
int3
insb
mov
sbb
sub
jge
adc
nop
push
jecxz
push
or
ds
or
or
jne
inc
lods
dec
ret
rcrl
iret
leave
mov
jb
inc
push
popf
and
mov
pop
data16
jb
mov
imul
cmp
or
addl
mov
mov
adc
aad
pop
xchg
in
outsl
cltd
dec
inc
outsl
or
mov
ret
jle
jg
jl
outsl
int
or
loope
outsb
adc
sbb
adc
push
xchg
stos
into
cltd
insb
ljmp
mov
mov
jbe
jnp
mov
dec
ret
xchg
and
mov
jnp
jb
mov
inc
out
lahf
fisubs
insl
xlat
and
mov
inc
jbe
ss
xor
add
push
mov
mov
jnp
dec
mov
mov
bound
fisubrl
mov
cwtl
jecxz
stc
add
scas
pop
push
lock
or
sarb
push
jbe
cli
or
hlt
insl
mov
sarl
inc
jg
out
cmp
or
int
fadd
hlt
mov
cmp
sub
adc
repnz
addr16
push
mov
mov
pop
jecxz
and
mov
not
pop
push
mov
dec
mov
adc
lret
xor
xor
arpl
push
sbb
insb
test
nop
add
push
sub
jp
mov
repnz
clc
adc
and
xlat
movsb
mov
mov
push
add
shlb
insb
inc
dec
dec
xor
jle
push
ja
lods
cmp
fcom
add
stc
inc
mov
shlb
daa
dec
stc
stos
aaa
push
aad
inc
lret
test
lea
cmp
inc
mov
sti
stc
stc
loop
xchg
inc
outsb
bound
jge
jmp
inc
add
adc
ret
mov
dec
mov
mov
sub
fists
and
clc
fcoml
push
mov
add
dec
cmp
into
mov
cltd
test
mov
push
mov
dec
jbe
jno
arpl
dec
out
and
jecxz
dec
jb
xor
mov
adc
push
stos
push
or
divb
xor
je
push
out
int
mov
es
repnz
pop
or
cmp
fndisi(8087
sarl
jns
insb
add
arpl
mov
push
dec
pusha
mov
push
adc
xor
insl
jbe
repnz
sbb
dec
inc
mov
inc
xlat
jg
xor
jp
out
push
mov
cmp
mov
mov
mov
jns
icebp
fnsave
push
mov
xchg
sub
aad
sub
dec
in
sub
push
pop
testl
jg
loope
hlt
add
xor
loop
out
pushf
outsl
push
mov
les
loope
ret
std
sbb
jmp
push
les
xor
dec
push
arpl
loope
cmpsb
xor
pop
push
add
or
js
mov
jmp
fyl2x
push
mov
bound
sbb
sarb
sahf
insb
fs
cmp
sahf
jno
inc
inc
pop
jns
outsb
pmaddwd
mov
hlt
popa
stos
add
imul
mov
not
pop
cmp
rcr
inc
jb
or
incb
int3
pop
pop
dec
jecxz
addr16
push
repnz
popf
lcall
mov
leave
test
xchg
jg
and
cmpsl
cmp
or
jns
sub
clc
jg
sbb
jae
fldt
mov
mov
popa
xchg
sbb
sbb
xchg
out
jle
test
push
icebp
movsl
sub
push
push
xor
dec
push
dec
in
mov
pop
xor
add
mov
xlat
test
cmp
dec
add
arpl
jle
aaa
pop
stos
popf
dec
mov
sbb
int3
out
loop
dec
bound
in
pop
stc
icebp
jne
push
sti
sbb
xchg
mov
sub
loop
neg
or
fists
pop
sahf
adc
jb
xchg
add
mov
je
sbb
push
dec
cmpsb
mov
or
push
pusha
scas
fs
push
mov
subl
pop
sub
add
fxch
mov
jb
mov
xchg
cwtl
add
enter
dec
cmp
and
cmp
lock
pop
adc
lock
cwtl
dec
mov
jle
mov
pop
in
mov
sub
lods
rclb
cltd
out
movsl
js
jecxz
incl
mov
nop
mov
rorl
insb
mov
mov
cmc
dec
outsb
inc
sub
imul
or
movsb
ret
add
and
jmp
or
jmp
sub
xlat
pop
mov
negl
jg
insb
lret
mov
cmpsb
push
popa
adc
repz
pop
inc
inc
mov
add
xor
pop
pop
jg
out
mov
clc
sbb
call
popa
test
jmp
shrb
dec
cmp
xchg
stos
jo
sbb
push
sbb
cmp
js
mov
jp
shl
sbb
pop
xchg
or
xor
or
dec
mov
or
popa
outsb
loopne
adc
leave
push
leave
mov
lods
popf
test
cmp
jne
push
xorl
aam
mov
loopne
sbb
je
rol
push
test
pop
loopne
sbb
aam
enter
lock
mov
lcall
scas
cmp
mov
sub
jl
or
lret
mov
cld
mov
mov
insl
test
pop
fidivs
mov
insb
lcall
iret
gs
jne
cmpsb
sub
adc
pusha
ljmp
adc
jmp
cmp
add
insb
add
ret
test
mov
js
repnz
xchg
or
pop
xor
xlat
push
sti
rorb
daa
pushf
into
call
ja
lea
jnp
pop
xchg
lahf
leave
outsb
xor
mov
adc
xor
shll
adc
xor
xor
inc
sbb
push
ret
mov
inc
xchg
nop
pop
dec
pop
int3
cmp
pop
mov
lahf
jl
mov
addl
popf
fisttps
bound
push
inc
jns
push
jb
aad
add
lret
ljmp
loop
push
dec
movsl
ljmp
dec
fidivrl
rcl
jmp
icebp
jl
add
rorb
jns
gs
repz
shlb
ds
mov
inc
dec
fscale
or
int3
jbe
cmp
mov
dec
sbb
mov
mov
dec
jnp
inc
pop
mov
mov
dec
daa
popf
scas
xchg
inc
push
popf
inc
loopne
cmc
bound
jnp
daa
sub
mov
dec
or
push
addl
push
std
adc
jg
cld
adc
pop
pop
scas
popf
jmp
cli
xor
popf
push
andl
movsb
call
arpl
cs
stos
in
loop
std
mov
jg
sub
push
test
sub
fildll
pop
mov
inc
push
cltd
dec
adc
insb
add
mov
push
sahf
sbb
sub
aam
sub
aam
inc
movb
hlt
jno
push
pusha
enter
sbb
xor
jmp
pop
cs
aaa
rep
adc
mov
mull
loop
cli
dec
into
mov
add
das
xor
adc
addl
jno
sbb
inc
loope
out
pop
push
jecxz
mov
ds
pop
jns
and
mov
mov
scas
add
and
pop
inc
into
dec
jl
lret
push
in
mov
in
addr16
push
jae
inc
test
adc
xchg
addr16
mov
jg
push
lea
fstpl
enter
fs
dec
xchg
push
or
jae
cmpsb
jmp
mov
aas
or
fnstsw
es
mov
xchg
cmp
push
inc
or
stos
int3
ds
arpl
xor
fisttpl
in
adc
jno
pushf
adc
mov
jge
push
stc
inc
mov
adc
mov
into
rcrb
jnp
cmp
je
pusha
daa
dec
adc
push
push
jo
or
inc
add
das
dec
out
pop
inc
data16
xchg
and
inc
mov
mov
and
gs
pop
inc
std
cmp
out
mov
ss
or
mov
mov
jnp
push
cmp
fadd
push
mov
cmc
jne
cmp
movsb
pushf
adc
popf
lea
add
in
pusha
dec
adc
inc
dec
aas
adc
and
lock
mov
stos
push
and
push
push
pop
mov
pop
lods
inc
inc
loopne
mov
and
rcl
mov
test
popa
mov
push
jg
push
mov
sbb
add
rol
ja
or
insl
cmpsb
mov
push
addsd
outsl
divb
adc
out
push
pop
xchg
insl
cmp
sub
js
dec
jno
xchg
xchg
stos
adc
sub
dec
int3
inc
and
adc
xchg
fnstsw
xchg
popa
pop
shrl
xchg
out
sti
push
jbe
sub
cmc
jle
push
push
cwtl
xor
mov
adc
sbb
lock
aad
sub
cmp
push
cwtl
cmpl
fidivrl
xor
imul
aam
aam
and
adc
bound
xor
mov
jl
nop
xchg
icebp
jp
pop
xchg
sub
jno
push
fists
jb
ffreep
outsl
dec
push
dec
jmp
subl
xchg
cmpsl
or
add
mov
jle
dec
xchg
inc
fldenv
mov
sbb
pmuludq
inc
roll
imul
or
bound
and
dec
pop
add
push
iret
cmc
adcb
test
or
jno
leave
out
sbb
in
mov
pusha
add
mov
leavew
cvtdq2ps
inc
adc
or
bound
cmp
pop
sbb
mov
or
mov
jle
mov
popa
pop
repnz
movsb
push
sbb
pop
dec
fcoml
outsl
cmpsb
cmp
xor
jno
mov
dec
mov
xor
or
jne
mov
and
aas
icebp
test
xchg
mov
ret
vsqrtss
push
sahf
aam
xor
sbb
sub
jae
outsb
ret
sub
loop
dec
dec
jb
cmp
xchg
pop
loope
cmp
sbb
mov
arpl
add
lcall
nop
xor
jmp
dec
push
sbb
inc
pop
inc
add
repz
pop
icebp
xor
pop
outsl
roll
or
lock
jb
sbbl
mov
or
movsl
mov
int3
ljmp
dec
sub
adc
lods
or
cli
cmpsb
pop
sub
xor
iret
push
mov
sub
mov
ljmp
mov
mov
inc
xor
cmc
sub
xor
and
mov
sub
repnz
pop
adc
adc
dec
scas
outsl
jp
dec
adc
loop
rorl
les
pop
push
adc
push
fdivrl
xchg
xchg
push
ror
sahf
notl
dec
sub
cli
sbb
in
adc
movsb
test
jbe
in
and
xchg
cli
push
adc
loop
mov
int
and
cs
xchg
jmp
sbb
sbb
sbb
std
stos
and
aaa
jle
sbb
or
shrb
inc
cltd
sahf
pop
repz
popa
hlt
cltd
mov
cmp
clc
or
dec
push
aad
notl
dec
mov
int
daa
sbb
adc
outsb
imulb
ret
lret
or
addr16
adc
idivl
lcall
repnz
xor
add
adc
lcall
movsl
add
fcmovbe
sub
adc
sbb
lret
or
mov
fwait
jg
fcoml
mov
adc
rclb
std
test
insl
sub
loopne
mov
add
pusha
mov
rorl
ret
rcrb
xcrypt-ofb
cmpsl
sub
test
add
xor
xchg
push
mov
mov
mov
nop
jmp
push
push
dec
cmpsb
stos
jl
adc
push
stc
adc
add
xchg
dec
sti
xlat
stc
imul
movb
mov
inc
mov
pop
pop
fsubrs
in
mov
push
dec
repnz
pop
xchg
movsb
xor
or
inc
and
adc
cmc
jecxz
ljmp
aad
fsubrp
sub
xchg
in
xor
rcr
enter
imul
loope
in
jnp
ret
or
in
push
xor
mov
fimull
mov
jmp
ror
sub
xlat
neg
in
push
dec
lods
insl
dec
pusha
in
add
dec
fs
int
int
scas
leave
cmp
clc
sbb
jns
sti
jno
in
pop
pop
jbe
sbb
out
je
jmp
daa
arpl
jbe
and
xorb
xor
insb
test
in
imul
clc
cltd
lcall
cltd
mov
divl
rcr
inc
clc
in
in
and
add
int3
inc
in
sub
inc
leave
jno
dec
stos
pop
shlb
jl
cmp
jb
jge
push
xor
aaa
add
enter
dec
pop
add
mov
sub
dec
sub
sbb
mov
sahf
out
call
cwtl
xchg
popa
cmp
aad
mov
enter
cmp
xchg
lret
or
xor
and
adc
add
mov
out
xchg
rol
or
mov
stos
mov
pop
mov
lds
adc
incl
cmp
jg
in
mov
lret
addr16
jecxz
jmp
or
aas
and
scas
mov
out
mov
sub
cld
test
jle
pushf
pop
push
cltd
mov
sbb
call
addl
fcmovnbe
call
fwait
add
movsl
inc
xor
lods
ljmp
out
enter
jge
and
inc
inc
and
imul
sub
jp
cmp
mulb
cmp
stos
mov
jg
std
dec
outsl
mov
cmp
aas
shll
pop
lock
mov
movsl
pop
hlt
in
jmp
mov
jmp
or
lret
xor
jnp
inc
into
imul
in
in
rcrl
add
sbb
inc
mov
mov
xor
jp
inc
outsl
fsubl
popf
jne
leave
dec
das
xlat
js
loop
das
cmpsl
out
push
xchg
mull
ljmp
xchg
or
ja
jp
mov
ljmp
pop
repz
inc
mov
imul
cli
xor
push
scas
ja
push
test
ds
inc
bound
gs
and
mov
into
xchg
les
mov
repz
shrb
jecxz
or
cmp
mov
sbb
mov
pushf
inc
sbb
sub
lret
or
xchg
push
and
jns
add
sub
out
mov
sub
and
xchg
push
sub
cltd
ja
hlt
inc
or
dec
aas
in
fs
mull
sbbl
lcall
xor
repz
sub
adc
mov
sbb
mov
and
inc
fisttps
test
iret
outsl
push
sub
or
jp
mov
shrb
sub
divb
inc
mov
mov
push
adc
mov
in
add
sub
lods
pop
js
stc
jl
pop
inc
fisubs
cli
dec
and
mov
jle
cld
adc
or
and
cmp
mov
cmp
add
push
push
gs
push
sub
xor
stos
lods
in
sub
mov
sub
test
out
pop
and
mov
sub
sbb
popa
push
and
in
movsb
cs
ljmp
pop
inc
mov
jb
push
loopne
sub
xlat
loope
fsub
push
in
int3
mov
pop
pop
sub
jl
sbb
cmp
cmp
les
mov
push
loop
scas
loop
shrl
sti
jo
psrad
mov
jae
jae
xor
shrl
cmovno
cmc
pop
aad
or
cmpsb
out
push
adcl
gs
or
adc
dec
test
mov
jge
test
pop
jo
es
or
aad
fistl
mov
int3
pop
mov
pop
dec
loope
pop
scas
jmp
leave
xchg
std
outsl
sbb
lea
pop
inc
xchg
ret
xchg
pop
mov
or
fwait
pop
jg
xchg
ret
jge
dec
dec
scas
stos
adc
imul
lods
into
inc
gs
ja
jnp
popf
jo
outsb
pop
iret
and
cmp
sbb
rorb
or
stc
cld
arpl
repnz
call
in
mov
cmp
das
stos
movsb
or
jne
mov
xor
outsl
push
sar
mov
push
aas
cmpsb
jecxz
bound
and
stos
popf
rol
cmc
data16
mov
inc
adcb
push
testb
and
mov
or
fstps
push
mov
add
jns
test
cltd
outsb
pcmpgtw
js
mov
cld
scas
add
jle
enter
imul
add
loope
and
ret
inc
rcrl
sub
sbb
xchg
sbb
push
jne
pop
xchg
test
sub
inc
cld
jecxz
decb
rcrb
dec
mov
mov
add
lods
cmp
fdivrs
push
mov
in
mov
jnp
outsl
mov
fcomps
out
xchg
inc
push
and
mov
pop
cmpsb
out
adcb
hlt
sbb
out
push
dec
xchg
bound
iret
ds
nop
shll
sub
aas
jbe
xor
stos
and
shrl
or
jnp
in
or
xor
sbb
call
iret
jg
fs
js
stos
fistpl
mov
das
sbb
xchg
lahf
cmp
lods
jnp
and
sub
icebp
ja
mov
sbb
xchg
fidivrl
mov
jle
mov
ret
xorl
jg
aam
nop
imul
fmull
cmp
std
lods
lahf
je
inc
mov
in
ss
add
sub
stos
out
hlt
mov
add
ja
dec
inc
pop
int3
sub
jmp
loopne
jp
add
or
xchg
leave
test
ret
sub
lds
imul
push
xlat
xchg
lods
jae
int
xchg
shr
int
das
shlb
xor
lahf
repnz
add
xchg
test
sbb
add
xchg
stos
mov
mov
pop
sbb
pop
mov
mov
jle
sub
mov
push
push
ret
xor
xor
in
pop
pop
out
adc
leave
jno
shll
lods
fsts
jp
sub
fimull
ret
in
ret
frstor
lcall
xchg
gs
scas
push
inc
jns
dec
xchg
ja
into
cmc
testb
pop
push
xor
xchg
xor
dec
push
fcmovne
xchg
sbb
scas
jp
testb
ret
mov
xor
clc
mov
and
shl
in
aaa
adc
adc
cli
scas
adcl
scas
fwait
in
ja
sti
daa
pop
ss
pop
es
jmp
ja
hlt
jo
add
sub
rol
cmpsb
aam
ret
pop
adc
jb
std
imul
ret
loopne
test
pop
jecxz
xchg
jmp
inc
rcrb
lcall
lods
mov
adc
ds
push
xchg
push
das
xchg
or
push
push
push
cmpsl
add
fld1
std
loop
mov
sub
inc
mov
or
in
adc
ja
inc
ja
scas
mov
xchg
dec
mov
adc
xor
das
sti
out
cmp
dec
pop
jle
xchg
stos
xchg
movsb
imul
inc
fildll
movsl
repz
add
xor
fldt
pop
mov
xor
aad
pop
test
add
out
mov
data16
xchg
xor
test
sbb
xor
out
cltd
ja
pop
sub
lods
call
push
adc
xor
push
dec
push
loope
push
test
push
or
lods
cmp
roll
rcr
mov
or
cmc
cli
sar
add
mov
xor
pop
loope
mov
mov
stc
imul
inc
jo
adc
jg
mov
or
mov
add
lret
scas
mov
lock
xor
insb
clc
xchg
sub
movsb
jae
jb
stos
lret
add
or
dec
scas
mov
movsb
fisubrs
pop
and
icebp
sbb
add
cmp
lods
jg
fucomip
mov
pushl
cmp
mov
bound
insb
fildll
mov
jno
es
lahf
das
loop
sbb
out
and
movsl
lods
sti
adc
sub
pop
sbb
mov
sbb
push
xorb
sub
sub
dec
cmp
xchg
scas
dec
push
mov
orb
jmp
and
popf
ret
pusha
pop
adc
push
push
sbbl
pop
or
nop
jns
stos
pop
lds
or
sub
dec
lret
and
fistl
cmp
mov
mov
enter
pusha
fwait
or
sub
add
pop
fistps
aad
clc
es
adc
pop
push
xchg
pop
pop
lds
ljmp
pop
cmp
loope
scas
jnp
mov
out
jnp
into
test
addb
pop
inc
and
fldl
or
stos
pop
add
inc
lret
adc
aaa
dec
xchg
loop
loope
xchg
or
ret
dec
jns
loop
dec
fs
fisubl
hlt
adc
lods
fisubs
mov
das
lret
sbbl
push
sub
in
push
jnp
inc
arpl
push
inc
in
cli
je
mov
adc
clc
xchg
xor
adc
mov
jl
inc
dec
and
dec
into
or
push
test
or
inc
repz
aad
add
jg
sub
mov
sbb
pop
dec
jecxz
fs
fdivl
mov
and
push
mov
mov
cmp
lods
out
addr16
ja
repz
leave
push
inc
cmp
pop
out
fstpl
adc
movsl
dec
bnd
or
loopne
pop
outsb
test
sbb
in
mov
cmpb
nop
pop
xcrypt-cbc
cmpsl
push
and
stc
mov
lcall
pop
in
push
fs
mov
and
push
mov
jb
mov
dec
and
push
leave
pop
inc
mov
orb
popa
lock
out
cmp
in
cmc
notl
and
sbb
fidivs
inc
jmp
jne
js
lds
popf
fwait
jae
ljmp
cmp
repnz
push
loope
sub
imul
mov
mov
aad
xchg
mov
enter
lret
mov
out
jle
outsb
clc
cmp
popf
xor
cmpsl
mov
mov
pushf
je
pusha
test
movsl
lods
pop
dec
mov
leave
inc
xchg
sbb
cmp
int3
rep
lahf
or
xchg
insb
mov
push
sahf
outsb
in
lcall
in
cmp
jecxz
push
jl
scas
insb
push
inc
xchg
hlt
mov
clc
lds
jbe
xchg
les
inc
sub
or
imulb
adc
pop
out
or
mov
dec
and
adc
push
ds
push
aas
push
fs
lods
adc
popf
push
xchg
cmp
add
pop
in
xlat
xorb
xor
xchg
sub
pop
push
mov
mull
inc
xchg
cli
jmp
push
jns
and
ljmp
mov
outsl
pop
jne
mov
clc
popl
mov
imul
mov
ret
sti
aam
ljmp
or
in
jl
sub
sbbl
pop
push
rcrb
mov
add
push
daa
add
inc
rcl
aad
jp
adc
cmp
into
hlt
mov
cwtl
mov
mov
rorl
outsb
jle
stc
iret
jge
rclb
in
addr16
lock
je
loope
xchg
mov
add
fists
adc
xlat
push
aad
push
ret
pushf
pop
test
mov
and
jne
push
xor
movsl
sar
repz
popf
imul
outsb
leave
dec
cvtps2pi
cmp
adc
lods
scas
scas
jecxz,pt
and
cmp
mov
dec
sbb
dec
push
sub
sbb
pop
insb
xchg
inc
negb
pop
cmp
jge
jo
jo
aas
add
cmp
xor
adc
and
shlb
insl
lea
stc
push
stos
loopne
jg
xor
mov
ror
jl
sub
dec
por
mov
les
jno
aaa
jae
mov
fisubrs
aas
mov
repz
cmpsb
stc
and
dec
mov
sub
xchg
sub
out
cmp
into
or
xlat
js
imul
adc
mov
xchg
cmp
lds
cmp
jecxz
fdivs
aaa
push
mov
popa
fcomp
mov
ret
push
adc
outsb
cwtl
cmc
adc
fidivs
xlat
and
insl
mov
sbb
in
rcll
sbb
jl
jg
pop
xor
ds
xchg
xchg
lea
cmpl
imul
in
jg
mov
mov
add
adc
xchg
stc
scas
int
add
sbb
repnz
xor
or
mov
push
fwait
mov
arpl
adc
push
stos
sub
hlt
cs
adc
scas
retw
sbb
mov
inc
mov
faddl
push
sti
arpl
pushf
gs
dec
mov
rcll
xchg
frstor
jo
xchg
and
stc
daa
adc
push
sbb
cmp
iret
adc
xchg
jbe
out
push
leave
mov
jge
xor
add
jle
ja
or
adc
jno
pop
aam
push
xor
push
fiaddl
and
push
mov
sub
lods
int
and
imul
iret
or
cli
inc
in
imul
or
outsb
test
fcmovnbe
les
enter
insb
inc
push
xchg
gs
push
xor
lds
pop
xor
mov
sbb
mov
mov
jge
dec
adc
xchg
push
inc
inc
pop
idivl
shll
or
inc
dec
fwait
xor
pop
outsb
out
enter
jo
int
sub
mov
out
xor
add
xchg
mov
inc
cmpsb
iret
jbe
jnp
aas
sub
push
into
cmp
sahf
inc
jo
mov
sbb
lcall
ljmp
sbb
adc
pop
rolb
fmul
pop
pop
xor
xchg
push
rcrb
nop
mov
arpl
jmp
jbe
inc
clc
fcompl
sub
jle
jle
jbe
sahf
fwait
xor
jno
and
pop
js
mov
shr
lods
pop
mov
mov
icebp
lahf
mov
jno
out
hlt
test
mov
inc
push
jmp
loope
cmp
imul
add
xchg
testb
idivb
xor
divb
or
and
inc
mov
roll
pop
xchg
push
adc
jb
add
and
dec
sbbl
adc
fldenv
dec
xchg
scas
mov
pop
enter
mov
int3
fistps
loopne
jle
or
pop
mov
rorb
or
inc
sbb
pop
jecxz
push
rcr
xchg
mov
pop
sbb
daa
push
mov
daa
popa
sub
outsl
test
mov
test
movsl
add
adc
sti
jecxz
shrb
test
jae
add
cmp
sub
popf
push
mov
popf
daa
dec
inc
jb
xor
jbe
call
cmp
cmp
mov
pop
adc
repnz
pop
arpl
fistl
push
cld
dec
inc
inc
push
cmp
push
out
xchg
push
jbe
pop
xchg
xor
data16
aas
dec
cmp
mov
cwtl
pop
pop
cmp
mov
shll
nopl
arpl
jbe
test
pop
pop
cmpsl
out
in
mov
fcompl
shr
sub
inc
in
push
mov
sbb
leave
mov
push
out
add
push
cmp
pushf
jp
pop
add
mov
cmpsb
jp
lret
stc
movsb
call
popf
or
pop
js
pop
mov
mov
in
sti
ficompl
jae
xchg
xchg
mov
mov
fldenv
sbb
add
sub
frstor
fs
pop
adc
cmp
nop
fbld
repnz
jbe
mov
lret
mov
pop
ficomps
hlt
inc
add
mov
sbb
mov
xchg
xlat
xor
out
pusha
test
pop
sub
sbb
cli
mov
inc
lea
stos
ret
lea
out
in
int3
sbb
sub
adc
jmp
dec
jb
rcl
xchg
mov
fwait
lcall
cmc
iret
dec
and
xor
gs
or
dec
js
out
insb
sbb
push
push
jno
adc
lret
and
out
dec
jne
pushf
jo
je
outsb
test
movsb
jnp
push
into
fists
roll
testb
ljmp
fmuls
sub
fnstcw
lds
out
sbb
cmpsb
push
adc
sbb
push
jo
pop
or
xor
xchg
mov
mov
cmp
cld
adc
lods
push
cmp
sbb
mov
fcmovnb
nop
jl
xlat
lods
ja
pop
cmpsl
insb
pop
bnd
hlt
jo
andb
xchg
dec
dec
mov
lcall
aad
lock
xor
iret
pop
push
mov
dec
loopne
xchg
fwait
icebp
cmp
dec
insb
in
cwtl
lret
pop
adc
sbb
jg
mov
movl
cmp
mov
or
jnp
insl
push
int3
pop
and
mov
inc
adc
clc
push
lock
push
add
pop
and
icebp
xchg
cmpl
mov
jle
sub
sbb
jl
cmp
jge
addr16
fdivrl
cmp
data16
push
pusha
xchg
fsubs
xor
hlt
in
mov
cli
mov
jo
or
mov
cld
cmpsl
int
sbb
loop
xchg
and
clc
push
mov
push
adc
mov
xor
push
sbb
xor
movsb
inc
fldt
fldl
clc
stc
pop
in
filds
mov
mov
sete
adc
mov
pop
push
rcr
aad
arpl
mov
add
push
fistps
lock
lods
jbe
outsl
cmp
sahf
subb
mov
cmp
push
out
fisubs
sbb
xchg
out
leave
fidivl
add
icebp
add
cmpsl
cltd
push
js
jmp
mov
sub
movsb
mov
outsb
add
inc
out
imul
andb
add
loopne
cmp
int3
fiaddl
dec
mov
int
out
int
jnp
loope
mov
adc
das
mov
sub
shlb
outsb
outsb
xchg
jo
std
mov
cmpsl
pop
outsb
lods
icebp
pop
insb
lea
adc
sbb
out
mov
gs
adc
and
and
pop
mov
js
jno
jle
rcrl
mov
test
inc
insb
xor
cli
sub
inc
and
dec
mov
pop
jne
inc
dec
rorb
sub
jno
or
inc
jg
dec
jecxz
sbb
inc
cmp
sti
or
addr16
cmp
call
and
repnz
mov
adc
push
push
enter
pop
data16
inc
std
mov
stos
nop
cmova
sbb
jge
int
xchg
jle
scas
test
shl
cli
pusha
mov
mov
xchg
mov
leave
jl
fstl
pushl
iret
and
xchg
repnz
add
leave
lret
les
mov
cmpsb
jge
pusha
ret
mov
dec
movsl
jge
push
je
sar
outsb
pop
mov
xor
or
outsb
cmp
fisubs
jmp
mov
mov
and
loope
les
daa
sub
adc
int
jmp
push
bound
add
int
lcall
or
in
push
mov
cmp
es
fcomp
lret
fwait
inc
mov
inc
add
adc
sub
stos
mov
fadd
ret
insb
inc
gs
in
jo
pushf
adc
neg
ljmp
cld
int3
or
mov
aas
push
jbe
and
lods
out
push
push
add
pop
pop
and
pop
add
xor
sbb
outsb
mov
add
adc
shll
into
jl
xorb
push
rol
icebp
in
idiv
push
and
mov
and
xchg
sbb
pop
inc
lock
push
xor
pop
push
mov
lock
push
sub
xor
cmpsb
lcall
mov
mov
inc
lea
cmp
jmp
sub
or
sbb
subb
mov
int
enter
push
std
pop
rorl
movsb
leave
xchg
push
jbe
lea
push
or
scas
jbe
fwait
lea
inc
cli
inc
jl
sar
mov
mov
bound
mov
and
xor
in
cmp
xlat
fsts
jns
mov
pop
std
jge
out
in
stos
cmp
lret
cmc
jge
sti
roll
out
xor
iret
insl
outsb
icebp
call
and
sahf
or
sub
sbbl
push
inc
sub
dec
rcll
mov
xchg
dec
push
in
push
dec
mov
imul
into
pop
mov
pop
or
cwtl
mov
jo
jbe
loope
pop
scas
push
ret
push
addr16
inc
sub
and
arpl
pop
xor
xchg
ljmp
psubsb
lds
xchg
xor
test
das
and
sub
lcall
fwait
sub
movsl
mov
lahf
movsl
popa
repz
test
outsl
stos
in
push
les
orl
xor
cmp
jmp
and
pop
dec
aad
nop
push
mov
or
mov
mov
sub
hlt
loope
push
xchg
jmp
fimuls
test
mov
les
outsl
out
mov
inc
fdivr
xchg
movb
inc
xor
adc
mov
xor
mov
out
dec
vcvtss2sd
inc
outsb
or
mov
sub
loopne
pop
gs
test
adc
pusha
pop
cwtl
addr16
lods
daa
aas
cli
jne
jnp
sub
rolb
hlt
movsb
adc
pop
dec
ljmp
fwait
xchg
inc
push
aam
jl
notb
add
mov
inc
push
aaa
inc
repz
mov
popa
mov
or
aad
push
pushf
sbb
pop
mov
movsl
aam
loopne
fwait
out
je
cli
mov
mov
mov
sbb
mov
mov
fildll
lock
inc
stos
int
mov
fadds
ficompl
popa
xchg
bound
scas
int
stc
movsb
dec
xchg
pop
xchg
jmp
push
stos
pop
fsubl
xor
outsb
push
dec
stos
inc
gs
cwtl
adc
mov
fdivrl
mov
flds
xchg
je
cld
push
cwtl
lret
lds
fistpl
imul
sbb
leave
or
mov
adc
es
cwtl
jmp
dec
ret
sbb
sbb
cmpsb
fldenv
or
cld
xchg
cmpsb
mov
mov
data16
imull
outsl
mov
jl
lcall
adc
imul
mov
pushf
push
push
les
int
dec
nop
add
xchg
pushf
add
out
data16
setns
cwtl
fnstcw
ljmp
mulb
mov
int
cmp
xchg
in
inc
in
ret
mov
inc
fcmovnbe
sub
and
movsl
dec
pop
mov
inc
mov
cwtl
cli
xchg
xchg
xchg
or
mov
xchg
push
sub
fstps
iret
mov
jp
es
popa
xor
addl
fidivrs
in
or
int
mov
fbstp
push
mov
divl
popf
mov
cltd
call
xor
cmp
enter
lods
cmp
sub
mov
and
push
jb
or
jb
clc
icebp
popa
mov
fsubl
add
aam
dec
cltd
data16
mov
cmpl
cmp
imul
jb
and
and
adc
out
and
mov
pop
clc
cs
or
dec
add
xchg
mov
cwtl
fisttps
int
sub
push
push
adc
jne
imul
lods
jnp
pop
sti
xchg
loop
cs
jecxz
icebp
cmp
push
lret
sahf
cltd
xchg
fyl2xp1
in
daa
sarb
hlt
aas
arpl
add
xchg
cltd
pop
pop
nop
dec
test
jl
cmp
dec
dec
mov
ss
cmp
pop
and
inc
mov
mov
xchg
push
mov
or
and
bnd
xchg
xchg
arpl
xchg
push
add
imul
insb
loopne
fxch
int3
cmp
jnp
aas
add
fbstp
lds
jo
fimuls
in
in
in
fdivl
lret
rorb
lods
and
sbb
sbb
pop
cmc
lods
sbb
data16
push
mov
into
pop
lcall
into
insl
aaa
add
jg
push
cmp
pusha
fsts
pop
das
mov
mov
pop
movsl
lcall
cltd
repnz
dec
mov
pop
and
lds
cmp
hlt
iret
push
inc
xor
sub
stos
in
sti
iret
pop
shrb
jg
repnz
into
cmp
data16
aaa
sub
sub
js
dec
mov
dec
aad
and
or
adc
in
xchg
pushf
fldcw
mov
mov
popa
push
mov
mov
sub
arpl
add
push
ljmp
lret
cmc
lret
cmp
push
adc
out
cld
into
mov
dec
flds
inc
jb
jge
aad
and
adc
push
rcll
xchg
ljmp
leave
iret
pop
stc
fucom
out
pop
ja
rclb
stos
insl
inc
clc
and
xchg
jns
or
ret
push
pop
repz
aad
cmp
xor
lds
push
mov
sar
out
loop
in
cld
mov
jae
push
and
bound
pop
cmpsb
aam
movsl
cmp
aas
sti
int3
lds
repz
mov
in
imulb
addr16
pusha
mov
xchg
cmpsl
lret
sub
jmp
inc
add
fisttpl
or
fadds
sub
icebp
loopne
out
push
into
ja
xor
dec
jmp
add
outsl
sub
addr16
mov
jnp
pop
in
sahf
jb
negl
fistpll
sub
loope
sbb
dec
mov
or
les
dec
xchg
mov
push
adc
lret
divb
dec
sub
mov
call
fs
lret
xor
dec
mov
or
xchg
mov
das
push
lods
insl
gs
mov
popf
pushf
outsl
jb
mov
shll
pop
stc
cld
lcall
out
lock
cmp
out
pop
add
repnz
inc
xchg
or
mov
adc
bound
pop
lret
out
ds
fs
push
dec
andl
and
sub
insb
mov
enter
cmp
mov
lret
mov
and
add
aad
xchg
pop
inc
das
scas
mov
add
sbbb
lods
pop
outsb
sbb
xchg
int
lods
dec
das
or
iret
sbb
daa
cmp
fnstcw
div
cmp
push
add
gs
lock
dec
xor
out
pop
adc
es
add
pushf
xchg
pop
insb
std
mov
or
aad
les
dec
sbb
cmc
xchg
test
add
sbb
push
adc
movsl
popf
cmpsl
cmc
lret
sti
add
hlt
das
mov
movsb
aad
fs
out
push
cmc
daa
enter
pop
jb
loop
mov
jp
fcomp
lret
cmp
cmp
dec
stos
daa
data16
add
out
pop
cmpsl
jp
cltd
push
xor
add
out
ret
popa
mov
pop
ja
and
push
pop
jb
fsubrl
lahf
mov
hlt
es
adc
jno
mov
divl
daa
cmpb
sub
lahf
cwtl
test
mov
jno
adc
pop
das
mov
or
daa
stos
mov
jl
pop
gs
add
xchg
pop
addr16
arpl
pop
enter
xchg
mov
out
cmp
popa
js
xchg
dec
fcomip
in
mov
faddp
lahf
scas
adc
sbb
in
inc
or
push
out
imul
lods
inc
push
xchg
sbb
pop
jo
mov
fsubs
pop
testb
fdivs
rcrl
pop
sahf
mov
inc
ret
mov
arpl
cmc
leave
xchg
ljmp
fsts
push
dec
movsl
outsl
xchg
pop
adc
shll
scas
inc
imul
dec
xlat
dec
jns
add
leave
adc
jg
push
adc
fiaddl
cli
dec
lds
push
and
shrl
push
and
push
in
xlat
daa
pop
pop
sbbb
arpl
cmp
xchg
lret
mov
out
xorl
sub
lret
and
loope
cwtl
xchg
push
mov
push
rorl
mov
jl
mov
xchg
pushf
jg
and
or
outsl
out
pop
mov
ret
ljmp
outsl
jb
ret
movsl
ja
cmpsw
fnstcw
cmp
sub
or
push
and
cltd
cmp
hlt
mov
lea
jmp
lea
dec
cmp
or
xchg
or
dec
stos
cmp
dec
jl
sbb
sbb
icebp
pop
xchg
hlt
push
lahf
pop
shll
mov
mov
out
adc
add
cmpb
mull
lea
ja
sti
scas
ljmp
xchg
jnp
xchg
or
xor
mov
add
xchg
hlt
enter
into
xorl
movsb
push
out
aaa
sub
cwtl
ret
cs
cltd
ds
jge
mov
xchg
xchg
jge
jmp
fmuls
test
and
std
sub
adc
and
pop
xchg
je
out
call
pushf
sbb
inc
sbb
loop
ljmp
push
cs
int
test
sub
repnz
bound
imulb
xor
jp
cmp
leave
xor
std
pop
subl
out
mov
imul
cmp
xor
jle
int3
cld
add
jnp
jp
mov
cmp
and
nop
mov
adc
imul
pop
lods
mov
stc
mov
mov
cmp
aaa
das
mov
mov
ret
mov
ret
pop
out
ja
sub
push
lcall
pop
jno
pop
sbb
or
or
ds
fisttpl
mov
pop
push
bound
push
lods
addb
jae
and
sub
dec
movsb
notl
xor
out
loopne
outsb
hlt
dec
mov
mov
js
mov
mov
jmp
sarl
pop
dec
sbb
adc
pop
popf
popa
mov
sbb
adc
ds
sub
pop
shrl
mov
xor
jmp
pop
call
pop
lods
lea
aam
and
mov
push
pop
js
cmp
loope
test
adc
leave
outsl
mov
call
in
call
dec
pop
sub
inc
xchg
sub
adc
push
push
movsb
loop
dec
jo
int3
xchg
fisubrl
in
sahf
xor
or
mov
gs
stc
iret
mov
in
js
jo
pop
repz
sti
inc
inc
or
pop
inc
fildll
xor
lret
mov
jp
ret
stos
das
sahf
out
sahf
push
or
dec
movsb
lods
mov
add
push
sbb
or
xor
inc
jmp
dec
dec
arpl
aam
xchg
and
push
outsb
fwait
insl
arpl
fstpl
lods
inc
leave
dec
insl
cltd
pop
inc
xchg
mov
setp
rorb
hlt
loopne
repnz
das
sbb
cmp
dec
sub
and
xlat
cmp
out
cmp
mov
inc
mov
jae
mov
les
in
cli
test
jno
mov
sbb
fidivl
loop
push
hlt
imull
push
scas
adc
xchg
xchg
mov
mov
xchg
je
pop
cmp
call
pushf
push
mov
push
cld
xchg
int3
pop
jo
or
int3
mov
lea
adc
sbb
mov
mov
mov
dec
add
leave
xor
and
jne
cmp
sbb
jp
cmc
xchg
lcall
jle
hlt
or
je
in
push
aaa
aam
int
notb
dec
imul
inc
add
add
lods
mov
add
adc
add
jne
add
stos
add
push
and
pop
xchg
add
pop
sub
xor
add
add
popa
cmpsb
xor
jae
cmpb
or
mov
mov
jnp
arpl
fdivs
add
push
int3
add
ss
fmul
mov
jae
jnp
sbb
movsb
adc
mov
clc
scas
int
scas
sahf
cwtl
sbb
pop
aam
mov
fiaddl
xor
lret
leave
fnstsw
sub
lods
or
bound
pop
cli
or
fldt
ja
mov
mov
cli
mov
inc
mov
daa
sub
sbb
or
push
outsl
sub
aas
inc
sub
mov
stos
cmpsl
mov
rorl
js
std
movsl
push
and
dec
out
mov
push
lret
mulb
or
fcmovnu
aaa
push
or
out
xchg
xor
xchg
sub
add
jge
dec
leave
outsb
xchg
das
rcr
lea
add
or
jg
mov
scas
bound
pop
mov
adc
in
and
sub
rol
adc
imul
test
shrb
xchg
test
ret
sbb
out
inc
mov
arpl
ljmp
mov
jmp
xchg
pop
pusha
inc
adc
pop
mov
daa
sub
cld
aaa
jl
push
inc
call
aaa
loope
enter
ss
jbe
pop
loop
mov
sbb
movl
push
push
add
sub
xchg
iret
test
rclb
or
fldt
mov
test
test
jmp
std
insb
cld
mov
movsb
pop
mov
leave
mov
lret
pop
das
add
pop
xchg
lock
inc
mov
mov
int3
mov
pop
int
mov
mov
das
lds
subl
ss
cmpsb
sbb
adc
xlat
sbb
stos
arpl
out
jge
lcall
or
je
jne
push
loope
lea
dec
outsb
xor
fld
movsl
dec
sub
dec
cmpsb
push
mov
mov
dec
and
out
jle
clc
cmpsl
dec
cmp
call
stos
mov
je
in
push
dec
mov
cmpsb
xchg
pop
xor
movb
jl
or
clc
xchg
push
cld
scas
outsb
jle
out
fadd
aad
xor
inc
xchg
jns
pusha
loope
std
addr16
mov
add
mov
das
repz
push
jae,pt
mov
jmp
in
inc
xchg
ljmp
jl
ss
repnz
mov
dec
cli
pop
add
lretw
dec
push
or
mov
stc
push
pop
enter
pop
clc
les
xchg
jmp
out
aas
ja
and
iret
dec
mov
sub
xchg
leave
xchg
out
das
rcll
loope
daa
stos
orb
xchg
in
inc
cmpl
jp
movsb
lods
test
nop
sbb
jo
out
fiaddl
data16
mov
xchg
cmp
enter
push
pushf
dec
lret
jne
xchg
pop
xchg
repz
enter
es
pop
in
inc
data16
mov
mov
fdivrl
jle
cmpsl
cmpsb
xlat
mov
cltd
rorb
xchg
jo
fldenv
push
pop
pop
push
rorb
test
bound
inc
cwtl
inc
nop
adc
outsb
loopne
or
pop
cmp
sbb
cmpl
imul
jmp
add
lods
outsl
pushf
andb
sub
sub
loope
loope
je
cmp
das
lcall
xor
mov
pmaxub
popa
or
jmp
mov
adc
push
add
mov
sbb
int
xor
cmc
ss
hlt
xchg
lret
xchg
les
notb
mulb
insl
dec
xchg
leave
jecxz
xor
lret
lret
dec
xor
jne
imull
push
add
xchg
or
jns
dec
repnz
xor
int
adc
add
ljmp
lahf
cmp
lret
dec
pop
pop
add
mov
sub
arpl
test
aaa
or
rcrb
pop
andl
xchg
repz
fsubr
out
scas
fimull
inc
jo
into
clc
add
xchg
add
xorl
lock
test
or
add
inc
xchg
mov
fisttps
sbb
enter
add
into
inc
lds
or
xchg
daa
bound
roll
or
mov
rorl
in
jecxz
sbb
es
mov
mov
or
inc
hlt
mov
jecxz
jmp
fdivl
xchg
cmp
mov
inc
and
push
imul
inc
dec
data16
bound
shlb
mov
jno
jp
into
movsb
cmc
add
pop
idivl
cltd
inc
in
ret
mov
jmp
pusha
lds
notb
mov
out
and
cmp
daa
push
stos
xchg
fwait
jg
popf
movsl
push
xchg
loopne
fs
adc
xor
mov
loope
arpl
xor
fbstp
mov
adc
mov
divb
cli
adc
loopne
dec
repnz
push
and
pop
or
fnsave
xor
pop
fimull
je
lret
sbb
dec
addl
adc
inc
mov
jle
ja
pop
mov
fstl
and
jnp
adc
mul
sbbb
sbb
mov
jns
addr16
ficomps
mov
stc
outsb
test
mov
pop
lods
std
pop
dec
mov
push
cmc
xor
inc
imul
sub
xchg
pusha
mov
aas
mull
repz
mov
push
mov
jo
xor
arpl
jns
pop
in
jle
lds
scas
adc
pop
jae
iret
subb
daa
ficoms
push
mov
push
es
jle
les
addr16
or
push
xchg
cwtl
push
pop
dec
mov
int
ret
fwait
inc
add
pop
adc
idivw
mov
jno
mov
push
inc
aam
inc
inc
sub
or
out
dec
test
sbb
pop
scas
out
and
mov
adcl
jae,pt
outsb
lods
scas
hlt
xchg
rclb
lea
call
imul
out
and
fwait
push
jne
add
stos
cmp
sbb
xor
adc
push
adc
jo
jno
das
pop
mov
sahf
lea
fcompl
add
lret
pop
mov
jno
pop
xor
ja
movsl
mov
inc
testb
loope
arpl
je
inc
cltd
and
pusha
aas
dec
aad
fisubrs
repz
sbb
fwait
mov
xchg
hlt
push
mov
cs
sbb
pop
nop
lds
fldenv
jae
ja
ljmp
stc
push
int
dec
enter
pop
or
out
pushf
mov
mov
inc
bound
das
test
and
xor
cmpxchg
push
push
aas
sbb
lcall
pop
push
call
mov
push
adcl
mov
add
cmp
xchg
mov
jp
fcmovnbe
xor
push
sub
int3
and
adc
jo
pop
addr16
jl
mov
pop
push
cwtl
out
das
fisttpll
icebp
ss
in
push
push
lock
xchg
push
lock
xor
aam
sub
jp
std
pop
pop
dec
pop
jmp
sbb
adc
sbb
out
aaa
icebp
xchg
jb
cwtl
fldenv
pop
jg
sbb
test
pop
sahf
ret
rorl
jne
pop
int
stos
jb
adc
fld1
bound
xchg
add
ja
fwait
lds
out
jecxz
pop
mov
push
stc
mov
mov
pop
sarl
cmpl
cmp
rol
fwait
pop
adc
test
pop
ja
jnp
lods
pop
ret
es
scas
xchg
add
jp
addl
pop
lahf
or
lahf
cld
testb
lods
out
fisttpl
mov
in
jne
pop
xor
mov
test
jb
das
imul
scas
sub
mov
in
sbbb
inc
int
and
insl
dec
jns
sbb
mov
and
fcomps
jne
push
xor
sub
sbb
pusha
adc
mov
xlat
lods
xchg
lods
adc
insb
push
stc
xor
lods
insl
pushf
cld
iret
mov
sub
movsb
xchg
scas
shl
arpl
or
jbe
test
mov
sbb
inc
cmpsb
and
dec
fidivl
fistl
xor
in
das
sti
sti
test
push
dec
fisubrl
outsl
xchg
xlat
adc
mov
xor
pop
add
add
jo
and
adc
push
sbb
test
inc
pushf
int3
ds
jge
popf
call
divb
shll
mov
mov
adc
mov
mov
hlt
pusha
inc
mov
or
cwtl
mov
sub
adc
cs
jo
in
push
iret
dec
fnstcw
adc
outsb
push
push
sahf
inc
xor
out
dec
or
repz
inc
xchg
pusha
dec
mov
push
clc
cmc
aaa
imul
push
insl
shll
out
or
mov
notl
push
jb
jo
ret
js
lret
cli
sbb
rolb
and
sub
jmp
call
dec
mov
sub
mov
repnz
pop
nop
lahf
pop
loope
sbb
mov
mov
in
mov
xlat
xchg
lret
mov
jne
adc
pop
and
inc
pop
and
push
mov
sbb
add
nop
mov
std
lahf
in
adc
mov
nop
aaa
and
xchg
pop
shrl
aaa
aad
loop
enter
xchg
add
cltd
mov
cld
rol
pop
inc
je
xor
fwait
test
fs
loop
in
sahf
xchg
mov
xchg
or
add
idivb
ss
and
out
pop
fldt
push
xor
dec
dec
jp
in
xchg
pop
inc
adc
bound
xor
mov
or
movsb
push
lods
sbb
stos
je
jne
mov
fidivl
mov
das
xchg
sbb
js
inc
or
lret
mov
mov
xchg
jl
mov
lahf
and
push
push
add
sub
dec
shrb
test
sti
mov
aaa
jmp
push
jbe
inc
dec
nop
jp
aas
test
pop
into
mov
addr16
push
mov
data16
int3
out
test
insb
fcmovnu
cwtl
mov
out
inc
pop
dec
mov
add
lea
dec
mov
stos
sti
in
and
add
sahf
shl
xor
out
pop
xchg
popf
mov
dec
cmpb
testb
and
sub
xchg
outsl
imul
mov
sub
xchg
jne
mov
xchg
add
inc
mov
mov
cmpsl
les
stc
into
push
cwtl
lea
jecxz
mov
push
gs
flds
xor
stos
loop
xchg
push
xor
or
cwtl
test
mov
sbb
jb
into
jmpw
sbbl
call
ljmp
pop
decl
test
or
adc
pop
hlt
jp
gs
add
and
and
iret
dec
xchg
test
lds
lcall
adc
in
repz
cmc
xor
test
and
movsl
shl
test
sbb
xchg
xor
rcll
jbe
insb
cmp
dec
add
push
nop
xlat
mov
xchg
shrb
push
scas
aas
adcl
call
inc
loope
mov
jnp
jnp
cltd
cmp
fistpl
or
cmpsb
jo
mov
gs
and
cmp
sbb
lret
inc
cltd
test
imul
mov
negb
xchg
pop
pop
xchg
lret
sbb
xchg
push
sub
jb
out
adc
icebp
dec
sbb
sub
push
mov
mov
hlt
sti
and
lods
sub
xchg
xor
push
and
hlt
dec
fadd
in
jno
lahf
je
adc
xor
mov
jmp
xor
rol
loop
and
notl
test
mov
mov
cmpb
add
adc
sub
push
cmp
sbb
cmc
xchg
xor
loope
inc
push
xor
jl
es
adc
or
push
cmp
mov
or
dec
xchg
sti
imul
inc
fsts
dec
fdivp
jg
pusha
dec
xor
nop
out
pop
or
mov
imul
adc
lret
icebp
lret
fidivl
out
inc
push
cmp
jge
aad
mov
xchg
jb
jb
push
mov
xor
pop
sub
sahf
add
stos
xchg
mov
test
lret
add
gs
gs
in
xchg
lret
cs
cmp
push
mov
or
addr16
ja
into
fsts
cmp
jp
push
scas
jae
mov
loope
adc
push
adc
cltd
mov
mov
nop
xor
aas
push
jle
xor
iret
inc
loope
push
push
xor
mov
add
ja
mov
nop
push
insb
and
pop
scas
out
or
sbb
push
leave
adc
pushf
add
dec
aaa
mov
dec
mov
add
jg
fdivs
or
bound
enter
sbb
lcall
or
adcw
cmp
addb
adcb
sar
pop
xor
in
pusha
shrl
push
sub
add
sarl
movsl
sbb
mov
pop
call
outsb
push
lock
adc
jge
insb
ljmp
mov
bound
xchg
mov
stos
cltd
test
fbld
sbb
adc
out
nop
add
out
call
roll
sub
pusha
push
cmpsb
push
push
movsb
sub
mov
scas
repnz
enter
insb
aaa
insb
cmp
sbb
sbb
movsl
mov
dec
mov
adc
and
dec
pop
cmp
lahf
pop
sbb
mov
and
jnp
pop
adc
sub
cmp
sub
int3
adc
cmpsl
dec
push
or
sbb
repz
jnp
lock
rcrb
adc
xchg
movsb
popf
cmp
pop
or
or
inc
push
inc
gs
inc
cmpb
jae,pt
push
sub
and
sti
adcb
push
mov
mov
enter
frstor
shll
xchg
pop
jp
pop
cmc
add
xchg
dec
cmc
pop
lret
mov
fdivrl
jbe
loop
pop
fmuls
push
jo
pushf
jge
cmp
dec
incb
fs
push
xchg
mov
sbb
sti
mov
add
in
jne
and
or
cmp
xchg
cmp
fsubl
cmp
aaa
mov
ja
inc
or
inc
sub
sbb
sbb
imul
push
mov
dec
jecxz
adc
jne
xchg
repnz
xor
cwtl
scas
or
mov
imul
add
mov
inc
lods
inc
or
lock
jge
repnz
push
jns
mov
push
loope
mov
xor
daa
cs
push
fdivrl
inc
mov
mov
leave
mov
sub
jl
xor
fsubrs
xchg
mov
nop
movsl
iret
sub
xor
or
ljmp
in
repnz
jmp
lods
loop
je
xor
cmpsl
cmpsb
sub
pop
jae
inc
mov
xor
mov
inc
lds
lods
int
add
pop
scas
addr16
mov
inc
lods
flds
add
imul
push
in
les
pusha
xor
dec
jge
xor
repz
cmp
mov
stos
leave
mov
out
loope
xor
inc
dec
repnz
inc
pop
es
pusha
into
jnp
dec
in
imul
inc
inc
fbld
sub
dec
cmpsl
xlat
pop
dec
nop
mov
lcall
cmp
xchg
jns
mov
cwtl
mov
lea
cmp
out
gs
xor
loopne
movsl
call
mov
pop
nop
enter
dec
in
xor
mov
sbb
into
jmp
imul
inc
push
jne
push
and
push
scas
fbstp
adc
dec
outsb
in
stos
xlat
jp
repz
mov
or
inc
xlat
sti
ja
xor
cmp
fdivs
insb
pop
rcrl
add
cmp
push
popa
cmpsb
inc
ds
aas
jae
adc
inc
and
pop
mov
jp
sahf
add
inc
jmp
lea
std
test
xor
cmp
fbld
fisttpll
xchg
push
lea
mov
scas
or
test
mov
mov
push
sbb
add
xchg
mov
mov
mov
testl
jg
outsl
imul
repz
int3
insb
fcomps
sbb
add
xchg
sbb
mov
jl
aam
dec
rclb
push
cmc
inc
push
inc
sbb
push
popf
shr
sti
or
int
mov
pop
neg
jecxz
sti
pop
mov
pop
mov
test
icebp
insb
adc
pop
xor
xor
cmp
adc
imul
outsb
and
adc
pushf
rolb
push
xorb
inc
sub
push
stc
or
in
sbb
add
in
scas
arpl
lcall
push
mov
push
sbb
test
iret
mov
and
mov
lock
fdivp
add
pop
adc
mov
into
dec
ret
ljmp
pop
jg
xlat
push
mov
and
inc
dec
sub
jne
mov
dec
sbbb
rorb
dec
dec
scas
jo
test
push
stos
dec
dec
aam
mov
inc
sti
pop
out
es
insl
pop
adc
jp
pushf
jno
ss
ficomps
fists
xor
sub
push
fidivl
xchg
nop
sbb
rcr
xlat
mov
fnstsw
adc
add
add
aad
movsb
sti
ror
xchg
aam
fstp
int
out
clc
into
pop
test
xchg
out
sub
xor
addr16
das
dec
pop
mov
outsb
dec
sub
and
aas
push
dec
ja
lea
aad
insb
cmpb
loope
enter
adc
aas
mov
lcall
psllq
fst
insb
repnz
mov
jbe
imulb
mov
and
lahf
test
jle
sub
into
outsb
std
or
stc
sub
pushf
mov
push
xchg
and
ficompl
inc
cmp
bound
dec
ret
jl
mov
mov
add
int3
inc
pop
jnp
int
xlat
je
xchg
inc
cmpsl
out
movsb
popf
lds
ja
jnp
mov
out
gs
mov
cmp
mov
aaa
in
sub
or
sbb
out
imul
cwtl
adc
outsb
scas
xchg
or
mov
lahf
or
imul
dec
push
dec
mov
popa
and
or
out
fstpt
xor
push
pop
jno
and
sti
sahf
hlt
xchg
fbld
nop
roll
mov
fists
pushf
and
cltd
and
sarl
adc
shll
imul
bound
test
arpl
aam
lea
jae
adc
lahf
push
mov
fbstp
psllq
mov
jb
lret
lods
push
es
gs
pop
bound
xor
xor
and
out
dec
sti
inc
imul
leave
dec
add
jno
adc
and
jnp
xor
sub
pop
jns
mov
pusha
loop
xor
rsqrtps
and
jns
pop
fdivs
arpl
xor
pushf
out
xchg
sbb
sub
aam
in
pop
dec
lret
mov
mov
mov
loope
nop
inc
scas
inc
add
jecxz
sub
lcall
shl
sub
mov
lock
and
stc
adc
lods
dec
lods
lds
cmp
push
aam
andps
aad
adcl
dec
aad
sti
mov
pop
inc
roll
into
mov
xlat
mov
ds
cmp
mov
clc
and
mov
gs
mov
mov
frstor
lods
inc
adc
xor
sbb
cmp
mov
or
fisttpll
push
imul
dec
cmp
and
mov
fidivrl
xor
jmp
push
shll
or
daa
jb
addr16
dec
pop
or
pop
sub
fs
push
jbe
sbb
call
cmc
lcall
adc
jae
inc
mov
aaa
outsb
xlat
sbb
icebp
or
mov
std
loope
movsb
ss
lret
mov
adc
fidivrs
test
sbb
popf
mov
pushf
mov
or
or
and
ret
dec
int3
sbb
cmp
or
push
lret
outsl
xchg
mov
scas
or
xlat
cwtl
inc
jne
dec
jo
ficompl
push
scas
test
loop
mov
rcrb
shll
loopne
xchg
jge
jl
inc
adc
adc
mov
or
adc
mov
jns
inc
movsl
test
sub
lret
sub
push
sbb
push
sub
jmp
cmpsb
mov
xchg
adc
lahf
daa
fcmovu
fmull
sbb
bswap
mov
mov
sarb
stos
loope
and
cmp
repnz
int
popf
cld
add
add
test
and
int
adc
mov
out
and
jns
into
pop
addr16
mov
xor
jno
and
cmpsl
push
push
mov
mov
es
lret
and
sbb
enter
pop
loop
and
mov
fcomps
push
add
or
nop
fstps
into
psllq
aas
mov
mov
or
pop
cmp
addr16
and
ljmp
cmp
arpl
das
in
or
cmp
mov
jmp
inc
pop
mov
add
add
mov
addr16
mov
mov
jl
stc
mov
jno
jo
xchg
mov
mov
in
xor
test
call
roll
les
mov
fldcw
dec
mov
or
mov
int3
fs
negb
fistl
ficomps
lret
jl
push
jns
pop
adc
cmp
rcrl
lods
rcrl
xchg
int
data16
sbb
sub
call
push
pushw
mov
add
jnp
ret
sbb
pop
add
pop
xchg
data16
pushf
and
sbb
out
fildl
hlt
stc
xor
or
push
test
flds
gs
cmpsl
push
sbb
shrb
xchg
fmuls
or
add
xchg
imul
adc
repnz
mov
shll
pop
jg
sti
or
push
mov
outsb
imul
sahf
test
mov
pop
icebp
xlat
shlb
insl
or
push
rorb
xchg
xchg
mov
ret
pop
sbb
xchg
dec
or
or
out
ja
cli
cmp
int
sub
pop
cmp
out
jge
or
add
pop
pop
sysret
inc
mov
pop
jg
lea
pop
leave
mov
out
in
cwtl
adc
cld
es
outsb
out
push
mov
push
push
cld
outsl
jnp
jae
push
xchg
js
stos
pop
sbb
cmc
mov
cli
stos
daa
pop
sbb
cmp
nop
mov
or
mov
or
mov
inc
test
mov
orb
pusha
and
push
and
add
xchg
push
sub
ret
push
mov
movsl
jno
cmp
imul
out
jge
xchg
mov
sub
pushf
pop
adc
jle
mov
flds
repz
xchg
insb
mov
adc
sbb
mov
call
push
scas
or
mov
pusha
pop
add
dec
roll
jecxz
xor
faddp
inc
out
xchg
cmp
dec
imul
mov
jp
jecxz
sub
fdivrs
add
xchg
and
mov
fldcw
jge
xchg
sub
cmpsl
insl
jns
lods
xchg
mov
sbb
push
sub
outsb
pop
out
popf
xchg
mov
or
xchg
mov
push
das
cmp
ljmp
sbb
mov
into
rorl
dec
mov
pop
xor
push
test
mov
nop
cmp
mov
aam
bound
inc
xor
xlat
or
mov
add
das
cmp
outsb
push
das
inc
out
out
sbb
inc
leave
inc
add
js
ret
and
adc
or
xor
popa
xor
jbe
jb
pop
bound
shrb
test
mov
mov
xor
and
jp
clc
pop
daa
lahf
adc
cmpsb
cmp
sbb
xor
shll
or
fs
jo
fstpl
inc
pop
inc
mov
mov
test
xorb
jno
cmpsl
fcomps
xor
cmpsb
jge
gs
out
jmp
outsb
daa
sbb
inc
pop
mov
sbb
inc
movsl
mov
add
pop
test
dec
fwait
pusha
in
inc
jg
sub
mov
jns
out
dec
jno
adc
lea
xor
sbb
jle
testb
in
loope
stc
inc
cmc
daa
in
cmp
outsl
mov
imul
dec
jl
dec
sbb
lods
mov
cmc
push
stos
stos
mov
sbb
jle
add
scas
stc
imul
push
std
add
mov
pop
cwtl
pop
clc
cmpsl
jmp
or
test
add
and
or
mov
and
shlb
mov
repnz
or
scas
lahf
icebp
xchg
cmp
pop
repz
sti
adc
xchg
push
xchg
dec
ja
test
pop
push
in
fcmovu
dec
mov
xor
mov
stc
sbb
in
clc
sub
xor
sub
insb
mov
inc
push
sbb
subb
pop
add
fsts
in
je
and
pop
imul
fcoml
outsb
push
adc
sub
fcompl
push
and
repz
sahf
dec
mov
and
enter
mov
cwtl
sbb
ljmp
scas
aam
pop
clc
push
rcll
mov
shrb
mov
sahf
adc
dec
loope
dec
iret
mov
ds
repnz
or
jo
scas
iret
fstps
pop
aam
xlat
repz
sub
push
outsl
and
mov
int3
xchg
mov
mov
mov
mov
iret
or
xlat
pop
xor
jo
sarb
sbb
stos
mov
int3
outsb
data16
cld
lcall
push
arpl
add
cmpsb
mov
or
or
mov
ret
xchg
loop
dec
outsl
pop
inc
push
fistps
in
outsb
mov
lcall
shl
cmp
mov
or
ljmp
mov
test
out
mov
and
clc
out
and
out
stos
outsb
mov
test
sbb
push
arpl
sub
fcmovnu
adc
jae
adc
std
dec
sub
hlt
lds
dec
push
or
sbb
xchg
xor
adc
pop
inc
fdiv
arpl
pushl
or
push
push
mov
dec
fisttpl
and
popa
xchg
into
sub
in
xchg
or
sub
inc
adc
sbb
into
sbb
or
pushf
pop
cld
repz
sub
pop
pop
lds
into
pushf
mov
lahf
mov
in
cli
add
jl
movsl
dec
or
in
add
add
imul
fsubl
imul
jmp
cli
xchg
addr16
cmp
xchg
sub
jle
jbe
cld
inc
test
into
fisubrs
inc
cmpsl
sbb
add
test
pop
push
ret
ss
inc
fstpt
bound
mov
mov
jbe
sbbl
ret
mov
mov
or
xorb
andb
adcb
lea
pop
add
ljmp
cli
ret
or
out
dec
add
xor
adc
add
jecxz
sbb
ljmp
adc
aas
mov
sub
sub
xchg
xchg
inc
fcmovb
jecxz
push
mov
aad
jo
inc
adc
mov
xchg
add
mov
ret
push
sub
hlt
mov
jnp
rorb
mov
ret
sbb
je
into
add
push
inc
fwait
pop
jmp
jmp
lods
lea
loopne
push
out
and
leave
push
jmp
mov
cs
mov
lea
data16
mov
inc
or
jl
out
inc
das
mul
pop
cmc
inc
lea
mov
dec
test
fsubs
fisubs
xchg
pop
dec
jnp
lret
sahf
imul
je
nop
or
cld
loope
xchg
nop
cld
hlt
xlat
out
cmc
mov
fnsave
cli
repz
std
pop
and
jg
sub
mov
cmpsl
push
push
adc
outsl
dec
loopne
bound
lret
or
stos
xchg
ror
dec
mov
mov
cld
out
push
imul
and
adc
sub
fdivs
and
out
jbe
movb
add
jmp
lret
cs
test
andb
inc
gs
cmc
outsl
dec
mov
mov
pop
stos
mov
addr16
xchg
pop
pusha
pop
movsl
inc
inc
mov
pop
fisttpl
xor
stc
or
mov
pop
adc
and
sub
fs
push
les
xor
xlat
add
xchg
sbb
andl
sbb
pop
lods
lahf
cmpsl
adc
out
faddl
jb
ror
inc
hlt
loope
sub
call
ljmp
mov
push
insl
repz
aad
push
mov
imul
mov
sbb
test
push
shlb
imul
movsl
and
cmp
xchg
jecxz
sub
inc
push
mov
cmp
enter
dec
lahf
rorl
dec
push
lods
int3
mov
sbb
mov
push
mov
add
xor
sbb
push
lahf
aas
xlat
and
and
mov
bound
jmp
and
sbb
mov
test
push
in
fcompl
cmp
jne
loope
aaa
pusha
adc
lock
aad
mov
lcall
mov
mov
movsb
movsb
xlat
lahf
and
mov
jecxz
xor
ljmp
in
lock
cmp
add
inc
or
sub
lret
mov
shrl
in
mov
add
sbb
xor
adc
lock
or
and
repnz
cmpsl
sub
outsb
test
xor
vmovaps
adc
int3
jb
dec
pusha
cltd
mov
xchg
je
shrl
add
test
inc
dec
stos
movsb
fildll
mov
push
dec
xor
inc
lds
pop
faddl
cmpsl
in
jmp
sub
mov
jp
sub
and
or
jns
cmpsl
sub
test
dec
xor
vmovntps
jl
mov
popa
or
jle
jne
or
in
lods
pop
jle
sub
scas
jne
mov
fdivs
fdiv
iret
mov
and
add
inc
pxor
bound
inc
pop
add
mov
lret
mov
int
sahf
mov
inc
jbe
jp
and
repnz
mov
jne
repz
mov
leave
test
orb
mov
fistps
xchg
leave
jecxz
adc
or
loop
dec
dec
pop
mov
add
fldt
fbld
int
push
mov
jmp
lods
inc
mov
xchg
shlb
add
cmp
test
js
mov
push
mov
into
notb
popf
mov
push
daa
cs
or
add
ret
aad
frstor
inc
outsb
push
pop
jne
adc
xchg
dec
sbb
sub
mov
sbb
sub
pop
stos
and
mov
aaa
lret
int3
into
scas
adc
sub
add
jbe
cltd
ss
mov
fwait
addl
pop
pop
mov
popl
sbb
mov
pop
adc
lods
daa
or
sbb
js
sub
add
mov
aam
or
repnz
rcrl
xchg
pushf
push
inc
jnp
outsl
outsl
adc
ja
inc
add
fld
xor
pop
mov
cmp
and
call
sbb
mov
sub
jo
and
lcall
push
or
and
adc
cmp
loope
pop
xchg
pushf
xchg
mov
icebp
and
or
or
pop
mov
and
xor
or
push
push
lret
mov
xlat
popa
rorb
mov
cmc
push
sub
add
ret
fidivrs
ss
in
fists
mov
cmp
stc
fdivs
test
pop
iret
adc
adc
sbb
enter
arpl
test
xor
divl
out
sbb
faddl
filds
cmp
call
xor
aaa
leave
adc
jp
icebp
in
stos
xchg
xchg
int3
xchg
jae
inc
mov
sahf
dec
or
sub
lock
sti
ss
cwtl
mov
or
mov
sbb
pop
xor
xchg
pop
lcall
daa
push
jno
test
loopne
in
hlt
pop
push
mov
xor
jecxz
sbb
jo
inc
adc
cmp
inc
sub
and
lcall
push
jae
mov
aam
inc
mov
jne
add
dec
mov
into
or
les
mov
into
insb
shl
sub
cmp
movsb
test
dec
jge
dec
adc
fwait
jg
push
orb
fs
mov
ds
push
or
add
mov
stos
push
icebp
jmp
xchg
push
in
jge
lret
out
call
or
cmp
push
mov
sbb
adc
jmp
jno
add
into
inc
sub
faddl
cmpsb
cmc
sbb
jb
mov
fsubrs
sub
cwtl
loopne
dec
or
adc
ret
adc
xor
movsl
cli
outsl
rclb
sti
mov
add
dec
int3
sbb
je
out
xor
jl
stos
sub
dec
mov
addr16
and
lods
and
sbb
fwait
cmp
mov
in
sahf
pop
imul
shl
mov
stos
mov
or
lahf
rcr
push
in
roll
push
pop
scas
sub
ret
sub
or
add
pushf
xor
xor
and
dec
inc
stos
lods
stos
jmp
shlb
es
repz
shr
ficomps
decl
add
movsb
aas
jae
xchg
adcl
orb
add
ss
shlb
popf
sti
mov
iret
jle
test
cli
repnz
pop
cmp
jg
mov
flds
ss
icebp
scas
pop
mov
add
std
ret
stc
or
lock
push
cwtl
adc
sahf
aaa
jmp
add
mov
jg
into
mov
dec
mov
mov
push
dec
sub
push
inc
push
push
push
shrb
es
nop
imul
jno
lcall
nop
or
nop
scas
test
and
mov
mov
push
push
inc
js
mov
je
fistps
mov
xchg
dec
lahf
call
push
push
push
mov
push
pop
shrl
adc
mov
push
cltd
stc
add
lret
lret
in
pminub
int3
ja
insl
pop
jecxz
cwtl
push
lret
rcl
ret
jp
push
fimull
out
cmp
dec
adc
cmp
add
dec
add
add
lock
xchg
add
das
pop
cmp
or
cmp
adc
sbb
test
fs
jnp
or
stos
xor
xchg
or
pop
clc
sub
std
sub
xchg
jecxz
mov
mov
jmp
jecxz
test
repnz
pushf
fdivrp
dec
mov
arpl
int3
or
inc
lods
mov
or
adc
adc
push
fs
insb
punpckhwd
add
xor
pop
jns
aas
xor
push
divb
imul
je
xor
fsubl
fldcw
jmp
sbb
add
xor
je
bound
xor
into
stos
adcl
scas
jge
xchg
adc
mov
jp
das
ds
fnstsw
push
and
mov
mov
outsb
pop
push
mov
clc
xor
mov
mov
mov
sub
xor
inc
mov
enter
mov
xchg
push
xor
js
push
imul
and
mov
or
cltd
lods
add
out
push
xlat
or
mov
and
add
xor
xchg
jmp
andl
pop
test
push
loope
stos
push
ja
call
loop
ja
add
cli
hlt
icebp
lock
pop
pop
jge
clc
imul
mov
mov
ret
imul
mov
shr
pop
ja
js
popa
adcl
lret
ljmp
into
adc
inc
rol
movsl
push
fmull
dec
xchg
enter
or
xor
popf
fcompl
cmp
xchg
jecxz
pop
dec
sbb
xchg
leave
lock
pop
and
pop
jbe
test
fisubs
cmp
ljmp
pop
jl
jp
lods
push
aam
mov
dec
pushf
push
xchg
sbb
mov
dec
or
xlat
test
arpl
movsl
or
pop
insl
lods
xchg
lahf
stc
mov
outsl
xchg
std
xchg
fisubs
icebp
cmp
repz
ja
sbb
jge
sbb
aaa
sahf
sti
mov
flds
into
std
lcall
popf
inc
lret
jle
inc
pop
mov
lods
loopne
aad
dec
xchg
mov
pop
or
pop
or
mov
cmp
mov
jge
outsb
cmp
jmp
repnz
mov
cltd
cmp
fmul
mull
mov
jmp
insb
daa
xlat
movsb
jg
cmp
aas
out
std
adc
xor
xchg
dec
push
mov
das
cs
cmpsl
mov
das
xchg
negl
or
iret
push
and
ljmp
mov
cld
in
imul
in
lock
add
sahf
jne
add
adc
mov
and
stc
pop
push
arpl
pop
push
inc
sti
clc
jge
xorb
adc
fwait
and
cmpl
jle
mov
cmp
inc
inc
cmp
mov
aas
add
mov
jmp
insl
std
icebp
cmc
ljmp
mov
lea
mov
mov
jmp
pushl
dec
ficomps
pop
rcrl
call
xor
or
test
repz
xor
mov
pop
add
mov
jmp
movsl
jge
lret
gs
ret
dec
aam
or
pop
fldenv
push
push
lret
jae
imul
loope
into
movsb
jmp
imull
dec
shr
lea
and
fdivrs
and
cmp
iret
loopne
outsb
sbb
cwtl
outsl
daa
lret
push
repnz
sbb
ret
loopne
imul
cld
das
xchg
ret
lret
cs
notl
pop
inc
pop
xchg
cmpsb
cmpsl
icebp
inc
and
lods
stos
hlt
pushf
mov
cmp
sub
divb
rcrb
rolb
dec
mov
mov
sub
or
lret
test
call
lcall
add
pop
and
or
adc
outsb
cmp
dec
xchg
ja
adc
dec
mov
test
add
pop
cli
sub
xor
jmp
push
jne
popf
stc
mov
push
cmpsb
push
mov
mov
dec
xchg
out
aaa
dec
mov
hlt
ds
jecxz
sbb
fcmovnbe
ljmp
ss
movsb
arpl
pop
push
and
pop
loopne
fidivrs
and
jbe
mov
out
and
ss
pusha
fimuls
sbb
cmc
mov
cld
imul
sub
add
mov
cmp
cld
xlat
inc
mov
add
orb
arpl
stc
dec
shlb
xchg
repnz
and
ljmp
mov
cld
dec
xchg
movl
rcll
ja
push
roll
inc
loop
xchg
imulb
xlat
lods
mul
jecxz
push
dec
imul
imul
outsl
in
daa
js
ja
int3
cmpsl
push
loop
add
aas
jnp
push
mov
leave
jns
mov
sub
xlat
push
fwait
shl
shlb
lods
mov
jne
sbb
sbb
out
add
and
cmpsb
inc
jle
mov
rcrl
cmp
xorl
adc
mov
push
jl
fldcw
repz
rcl
test
push
push
movsl
or
jbe
mov
lret
scas
sti
xor
xor
aas
pop
popa
outsl
jne
out
lcall
cli
jmp
stos
loopne
clc
repnz
nop
hlt
lock
push
push
popf
fisubrs
inc
adc
in
adc
test
dec
in
int3
pop
pop
lret
sub
inc
mov
andl
fnstenv
lret
or
xchg
iret
jne
mov
xlat
inc
mov
aas
add
push
lds
cld
mov
loope
sysenter
dec
repz
lret
addr16
lahf
lea
push
xor
add
addb
adc
mov
sarb
stc
mov
test
pop
add
mov
mov
inc
fisubl
and
mov
push
fisubl
cmp
fisttps
jne
stos
test
sbb
push
icebp
lahf
sbb
rcll
sub
push
or
addr16
jmp
leave
pop
and
mov
mov
xchg
cmpsb
je
imul
mov
out
jge
in
sbb
aaa
jecxz
xor
or
inc
and
rorb
jecxz
loop
cmp
inc
aas
sahf
mov
and
dec
imul
mov
adc
or
adc
sbb
pushf
lds
lock
pop
cmp
cmp
cmp
call
push
stc
jp
scas
pushaw
mov
mov
cs
dec
lea
mov
cmp
dec
push
mull
in
loop
mov
out
shll
in
inc
jle
movsl
shll
jbe
leave
push
sti
sub
into
lret
pop
movsb
dec
mov
mov
xlat
dec
ret
ss
scas
je
xorb
jl
bound
shl
xor
or
insb
add
push
or
test
outsl
cmp
fmul
adc
pushf
stos
sbb
or
mov
gs
aaa
addr16
or
mov
push
ljmp
xchg
xchg
out
xchg
add
jecxz
push
cmp
mov
lcall
jo
xor
cmp
adc
cmp
or
mov
mov
cmp
push
les
pop
dec
aad
je
cwtl
popf
xlat
icebp
sahf
dec
test
pop
jp
notl
in
inc
fistpll
jmp
xchg
xchg
jne
push
lahf
push
bound
inc
shl
push
push
stc
lds
mull
dec
mov
dec
xchg
cwtl
lea
or
jecxz
lock
lret
jmp
mov
into
imulb
sbb
cltd
pop
pop
or
pusha
arpl
popf
or
adc
mov
cmp
popf
jg
int
shll
dec
adcb
adc
inc
out
cwtl
jp
mov
sarb
cmp
sub
xor
adc
mov
pop
adc
fldl
ret
and
mov
cmpl
fistpl
xchg
inc
pop
add
test
jp
sub
insl
nop
out
call
out
imul
cmp
mov
fcom
js
lret
jmp
rsm
inc
sbb
stos
jp
loope
push
mov
out
mov
ja
inc
frstor
xchg
test
pop
dec
jns
or
roll
popf
adc
adc
mov
fwait
xchg
frstor
push
cmp
movntps
stos
loopne
fidivrs
or
xor
ret
xchg
inc
add
xchg
sbbl
sub
ljmp
cmpsl
push
scas
push
or
cs
push
lret
and
iret
lods
imul
xchg
pop
fwait
cwtl
lods
jmp
ficomps
xor
add
xchg
pushf
scas
add
dec
add
stos
adc
fdivs
or
fcompl
out
cmpsl
xor
es
ret
insb
mov
mov
popa
xchg
inc
shrb
js
inc
dec
fsubp
adc
aaa
jbe
mov
out
and
imul
call
out
popa
aaa
insb
mov
push
push
ja
jge
mov
flds
stos
into
in
sbb
xor
ljmp
decl
push
hlt
xor
xchg
dec
das
or
bnd
ljmp
xor
xlat
sub
sbb
int
stos
mov
test
sub
pop
clc
and
dec
rep
rdpmc
xchg
add
dec
cmp
jmp
mov
enter
aam
lahf
testb
lods
or
fsubs
or
clc
test
mov
add
add
add
test
jmp
je
in
and
test
xchg
inc
inc
cmpb
pop
adc
xchg
in
loopnew
jecxz
pop
test
stos
lret
mov
dec
xchg
push
enter
insl
cmp
imull
mov
rolb
jo
sub
pop
pop
mov
mov
mov
mov
into
xor
xor
push
xchg
dec
ljmp
lcall
sub
or
xor
stc
cwtl
sbb
push
popf
add
inc
xchg
shll
in
loopne
add
incl
insl
bound
icebp
popa
aas
jne
arpl
pop
pop
mov
into
lret
mov
fidivrs
adc
add
sbbl
subb
clc
xchg
adc
sub
add
push
xchg
hlt
loopne
add
mov
or
das
and
cmp
adc
les
cmp
insb
in
fwait
je
adc
push
pushf
sbb
dec
insb
ja
xor
pop
push
pop
out
jecxz
int
inc
notb
imul
ret
inc
pop
mov
push
sub
xor
sub
popa
cs
xchg
xchg
jl
jae
jmp
fs
lods
jo
cmp
sbb
sar
popf
hlt
lcall
adc
dec
loope
xor
nop
xchg
scas
mov
insl
push
aam
mov
daa
add
push
sti
add
std
push
xchg
adc
incb
push
sub
jns
test
xchg
lret
mov
roll
xchg
movl
rol
aaa
cmp
call
in
loopne
mov
out
adc
xor
sub
imul
mov
sti
and
sub
popf
push
andb
adc
mov
pop
bts
test
mov
inc
push
adc
bound
idiv
xchg
sub
jle
negl
int3
jnp
sbb
fidivrl
or
push
decb
ret
mov
jb
cmpsl
fistps
jp
test
mov
sub
addr16
pop
push
jb
jecxz
mov
jns
fdiv
or
xchg
xchg
jg
push
sbb
adc
ret
enter
imul
lock
xor
shrl
in
clc
cmp
fmull
fldlg2
lods
sbb
out
or
xor
add
cmp
stc
push
insb
mov
and
rorl
mov
adc
push
loop
and
mov
inc
cmp
outsl
lret
sbb
xchg
pushf
imul
popf
mov
aaa
jb
xor
ret
push
cmp
flds
pop
mov
stc
jo
aad
mov
ret
es
aas
sub
xchg
stos
inc
dec
xor
mov
xchg
push
pop
std
not
test
shrb
dec
sub
inc
xchg
jmp
inc
test
mov
je
inc
push
cmp
dec
scas
jge
icebp
adc
fistl
clc
insb
pop
mov
or
test
cmc
enter
cltd
xchg
fwait
pop
int
outsl
cmp
or
inc
lret
mov
cmp
adc
aad
jns
jl
mov
test
cmpsb
mov
add
ror
aas
ror
xchg
jbe
mov
cmc
inc
lcall
inc
jnp
nop
js
push
jmp
inc
fsubrs
push
and
rorl
jns
scas
adc
adc
out
jecxz
std
cltd
aam
in
pop
xchg
negl
icebp
pushf
in
stos
mov
sub
add
adc
repz
inc
stc
loop
add
ret
cmp
jmp
adc
and
xchg
jg
mov
pop
sbb
pusha
data16
pushf
icebp
shll
das
jne
or
aaa
or
mov
or
cmp
mov
aam
pop
add
add
lcall
loope
add
out
sahf
out
push
push
loopne
inc
cs
mov
mov
ljmp
cli
shlb
int3
cmp
into
lret
aad
sub
lods
xchg
dec
push
jb
stc
pop
iret
fnstsw
inc
adc
inc
fwait
add
aas
rolb
mov
mov
movsb
loope
repz
mull
mov
mov
aam
jg
movsb
sbb
hlt
cmp
and
movsb
out
test
mov
in
push
fyl2x
jg
mov
push
add
std
daa
xlat
leave
lods
sbb
loope
sbb
fwait
addr16
inc
jl
je
call
push
jmp
call
xlat
aas
xor
mov
adc
and
ljmp
cmp
or
lds
test
sub
mov
sbb
adc
mov
loopne
fbld
enter
push
and
lahf
add
push
mov
sti
adc
push
out
ret
jnp
push
push
cmpsl
mov
xor
push
dec
inc
sub
mov
loope
inc
inc
fs
cmp
lret
mov
fldenv
pop
shl
sbb
ret
pusha
test
ja
movsl
cmp
pusha
xchg
dec
xchg
pop
and
mov
pop
cmp
or
jp
mov
out
fsubrs
and
data16
insb
mov
pushf
add
dec
pop
aas
leave
mov
out
mov
cwtl
mov
icebp
inc
ficomps
push
cmp
lcall
lahf
jmp
and
dec
call
lods
aaa
dec
xchg
cmpsl
jecxz
jp
mul
cld
and
sbb
dec
mov
in
inc
push
pop
sub
push
add
pop
sbb
add
scas
cmpsb
jmp
dec
cwtl
shr
push
in
add
sbb
stos
inc
jae
xchg
mov
movsl
stos
mov
aas
adc
cmp
ret
imul
aaa
ror
lods
mov
or
shll
mov
lret
jl
jecxz
push
fsub
xchg
insl
jl
arpl
ljmp
jl
aad
psrad
fnsave
das
pop
push
mov
push
call
add
or
push
xor
in
sbb
add
cmp
ljmp
cmp
das
xlat
fdivl
add
loop
in
sub
dec
in
repnz
in
stos
rorb
jl
addr16
add
sub
insb
push
bound
pop
jb
enter
inc
xchg
dec
push
movsb
into
inc
dec
pop
orl
xor
push
and
xchg
out
mov
sub
mov
add
xchg
je
jae
mov
sub
dec
clc
jecxz
mov
rclb
inc
sarb
mov
data16
push
sbb
std
mov
ss
push
push
jnp
or
ljmp
outsb
out
mov
out
jge
inc
jg
dec
cmp
cmp
jnp
sub
pop
ja
sti
lea
push
stos
jmp
not
shll
pusha
push
cmp
pop
movsl
pop
call
mov
in
fwait
scas
push
inc
sbb
push
push
in
out
fdiv
add
popa
push
fdivrs
mov
test
loop
in
push
cli
out
inc
push
pop
int3
adc
hlt
pop
lahf
iret
cld
out
xor
sbb
in
lods
lahf
out
add
arpl
cmpsl
loop
ljmp
cmp
add
dec
jne
out
test
arpl
and
dec
data16
push
add
xchg
lds
fucom
cmc
and
shr
push
cld
sub
lock
addr16
dec
lahf
and
cmpb
lods
cmp
int
pop
adc
xor
mov
inc
jecxz
or
sub
stos
lock
test
shrb
ret
pop
scas
add
sarb
je
xchg
fsubp
and
add
ja
cmc
add
enter
push
jne
xchg
enter
sub
pusha
push
lahf
insl
je
out
jg
test
sbb
arpl
xchg
fwait
repnz
add
mov
call
jnp
movsb
mov
orl
insb
enter
jle
mov
clc
es
lcall
cs
int
mov
mov
imul
sbb
cmp
scas
or
dec
sbb
inc
jb
aad
inc
loop
xchg
mov
dec
and
test
push
fsubl
mov
mov
sub
sahf
outsb
or
jmp
jle
jb
cwtl
mov
aam
sub
cmp
je
pusha
push
es
mov
xor
fcompl
fs
into
fisttpl
pop
icebp
push
movnti
lock
sbb
pop
mov
loope
fxch
loope
fdiv
fistps
jo
adc
mov
sub
mov
shll
adc
outsl
inc
pop
and
lret
mov
call
add
shlb
repnz
jp
cwtl
inc
leave
ljmp
fdiv
push
jbe
xorb
mov
xchg
ret
push
inc
lods
push
ss
mov
lods
mov
inc
cmc
cmp
loop
aad
or
jg
inc
add
adc
lea
ret
cmpsl
dec
and
pop
aam
sbb
mov
push
ds
sub
leave
icebp
xchg
or
mov
repnz
push
adc
adc
jmp
fcmovb
mov
pop
mov
popa
jle
add
popa
les
pop
pop
in
xor
mov
outsl
not
pop
flds
in
popa
ret
pop
dec
adc
call
inc
push
jle
cmp
sbb
scas
pop
pop
and
jle
cmpl
fs
in
add
mov
mov
ret
or
inc
fisttpll
mov
ljmp
mov
sti
fbld
iret
es
fdivrs
lock
add
in
fadds
jno
fldcw
mov
int3
pop
dec
push
pop
lret
sti
sub
jmp
enter
lea
inc
fiadds
cmp
test
ljmp
jmp
pop
lcall
sbbb
outsb
xor
shll
mov
xor
push
add
gs
out
and
pop
push
xor
data16
sub
outsb
mov
sbb
cmp
cmp
pop
cmp
stos
mov
aam
in
dec
clc
inc
mov
add
cmc
bound
loopne
imul
pop
sub
js
sti
mov
add
mov
xor
jno
into
sub
insl
aad
sub
fistl
in
clc
stos
jbe
xchg
sub
cli
or
hlt
mov
in
jg
inc
cmpsb
jb
ret
jns
test
cmp
inc
sub
cs
cmpsl
cmp
lea
addr16
cmp
test
cmp
or
lahf
rcl
fnsave
hlt
jne
push
dec
pop
dec
pushf
aad
movsb
jo
mov
xor
pop
cmpsl
test
mov
xor
jmp
test
xchg
pop
cld
and
xchg
dec
adc
xor
cltd
stos
lret
stos
sub
leave
mov
mov
mov
adc
add
inc
enter
jge
push
mov
mov
stc
ret
test
mov
jl
inc
xor
test
pushf
scas
mov
pushf
iret
aaa
jmp
mov
sub
imul
mov
repz
into
clc
pop
jae
push
fisubs
push
xchg
inc
test
daa
mulb
in
sub
inc
add
in
fwait
outsb
sub
sub
adc
dec
je
xor
dec
inc
adc
and
xchg
pusha
fwait
add
fwait
xor
stc
aaa
dec
lcall
stos
hlt
shlb
or
loop
push
sub
shl
lcall
mov
ss
fldcw
je
fisubrl
out
aad
sub
cmp
lods
cmp
cmp
aam
mov
lods
add
pop
and
andb
rcrl
cmp
dec
cltd
es
stos
xchg
or
mov
fsts
or
dec
mov
fdivs
sub
stc
lcall
and
imul
inc
dec
pop
jge
outsl
jne
fsubrl
sub
jg
mov
push
js
push
dec
jne
aaa
lret
sbb
xor
jg
sahf
mov
cmc
inc
mov
and
jg
xchg
jnp
lcall
push
ret
or
mov
fucom
cmp
je
xchg
mov
jb
inc
les
loopne
dec
or
shrl
push
pushf
adc
dec
stc
rcll
pusha
repz
andl
les
pop
stos
adc
repnz
mov
adc
mov
fwait
lods
mov
jge
and
popa
ds
gs
push
ljmp
pop
jno
xchg
inc
mov
pop
mov
adc
lret
shll
fs
mov
les
dec
outsl
fdivrs
inc
xor
xlat
outsb
dec
test
outsl
out
jo
add
or
sbb
fcoms
int
push
pop
clc
ljmp
push
mov
inc
sbb
mov
jbe
inc
mov
popa
int3
bswap
adc
mov
sub
adc
pop
pop
lret
cmp
popf
roll
inc
dec
pop
mov
xor
adc
popf
xchg
push
or
jae
xchg
mov
xor
test
xchg
cli
gs
rclb
add
inc
or
inc
iret
std
scas
iret
bound
push
test
adc
push
insl
dec
and
shlb
cmp
nop
imulb
xchg
xchg
mov
mov
xchg
lock
xchg
sub
xor
mov
fxam
inc
and
pop
sbb
repz
push
lock
movsb
stos
mov
jecxz
repz
or
sbb
pushf
sbb
push
outsb
fdivp
insl
push
mov
in
ss
sbb
mov
out
cltd
pop
nop
pusha
cmc
fdivs
mov
fsts
pop
pop
sarb
and
sbb
inc
add
fwait
inc
mov
loop
and
cmp
fidivl
mov
jno
xor
nop
mov
jp
test
inc
pop
test
cmpsb
or
mov
pop
into
shlb
inc
or
aaa
mov
inc
ds
inc
in
sub
pop
add
jmp
adc
mov
lods
js
sbb
adc
inc
ds
cwtl
push
inc
cmp
ljmp
adc
rorb
shl
iret
mov
repnz
repz
cmp
in
or
test
mov
mov
dec
add
mov
mull
cmp
and
js
push
mov
in
shrb
add
fstpl
pop
sti
jb
cltd
sub
enter
pushf
xchg
ja
in
cmp
mov
xor
sti
mov
mov
lds
dec
push
loop
and
cmp
sub
and
cmp
sub
hlt
divb
mov
dec
fstps
add
mov
and
jl
out
and
add
mov
inc
cmp
inc
cwtl
orl
insb
xchg
cld
mov
fadds
subb
jl
cwtl
outsb
dec
dec
cmp
stos
mov
mov
ds
pop
add
mov
push
cmp
or
jno
xchg
sarb
in
fs
test
enter
adc
sbb
rorb
mov
xor
mov
ss
adc
sbb
mov
mov
inc
inc
or
cmpsb
ror
fdivl
cmp
les
push
test
sub
dec
add
xor
shlb
pushf
xchg
mov
mov
add
rorb
lret
adc
stos
sub
pushf
mov
jnp
adc
push
fcomps
push
in
call
addl
fldenv
jg
subl
jnp
pop
ja
pop
xor
adc
add
lret
lea
enter
cmc
and
test
jns
add
lds
add
lea
loope
mov
mov
insb
repz
enter
icebp
shr
cmpsb
jg
jae
pop
popf
cld
cmpb
fstpl
pusha
jnp
data16
push
cmp
sub
arpl
add
push
xor
imul
mov
dec
shll
mov
fcmovnu
pop
ds
popf
and
adc
std
shl
cwtl
cmp
mov
xchg
pop
fcmovnb
push
xchg
cmpsl
xor
jae
mov
jbe
jnp
aam
cmp
pop
cmp
int
sub
outsl
cmp
pop
push
dec
movl
add
repnz
or
out
or
das
clc
stc
sbb
fbld
mov
cmp
mov
popa
test
lret
cmp
sub
xor
pop
dec
popa
cmc
pop
rolb
jl
dec
popf
pop
jno
int3
mov
inc
pop
test
push
fsubs
addl
div
bnd
push
loopne
fnstenv
nop
jnp
orl
out
lods
sarb
out
adc
xchg
cmp
das
or
and
movsl
mov
jne
popa
out
flds
call
lods
mov
test
rcl
les
mov
pop
dec
pop
sub
leave
sahf
cli
cmp
push
pop
scas
xchg
or
scas
in
push
fcoml
mov
mov
pushf
xchg
cmp
jle
mov
insl
ljmp
imul
push
push
movsl
pop
enter
dec
mov
adc
jae
xor
sbb
or
shll
into
loopne
test
pushf
dec
bound
jmp
push
jmp
xor
add
inc
xchg
testl
push
pop
or
adc
gs
push
sub
xor
cmpsb
out
movsl
or
push
out
inc
add
lret
mov
ljmp
shr
add
cmp
fiadds
int
aam
pop
xchg
into
js
pop
pop
xlat
loopne
sar
fsubrs
xchg
fimull
inc
ret
outsb
pop
les
mov
shll
out
es
stc
aaa
push
dec
test
imul
mov
push
mov
dec
xor
mov
stos
mov
xchg
mov
test
sbb
mov
adcb
push
xor
scas
movl
pop
popf
sarl
mov
out
jns
pusha
cmp
or
push
pop
mov
movsb
xor
out
rcl
add
repnz
mov
and
mov
adc
or
pop
cmp
es
lret
outsl
sbb
add
fldenv
or
add
push
in
mov
cmp
add
repnz
push
mov
icebp
or
das
movsb
cmpsb
mov
push
cmp
jbe
pop
imul
aam
sbb
shrb
pop
fiadds
ljmp
xchg
xchg
popa
jne
xchg
pop
loopne
mov
add
and
add
jbe
imul
arpl
sbb
lret
jns
pop
movsl
add
mov
insb
stc
out
in
ret
pop
test
mov
dec
and
cmpsl
xlat
lods
sti
xchg
mov
mov
xchg
cli
sti
or
inc
dec
xchg
adc
icebp
mov
cltd
push
fcompl
sbbb
cli
outsl
pop
or
push
pop
loop
sub
xchg
sub
push
xchg
cli
sbb
jp
pushf
or
xor
xor
push
int3
push
xchg
out
pop
dec
fimuls
add
cmp
data16
call
pop
mov
and
mov
lods
je
xchg
std
rcl
mov
adc
jns
je
cltd
sbb
jmp
outsl
or
insl
popf
push
rcll
cmpsb
insl
addb
sahf
jbe
enter
test
dec
test
mov
js
lcall
inc
mov
mov
int
hlt
cmpsl
das
dec
aaa
inc
mov
dec
aad
cmp
mov
cmp
nop
imul
mull
loopne
and
stos
xchg
or
push
pop
push
mov
adcb
mov
mov
stc
cmp
mov
sahf
push
pop
es
and
and
jns
push
imul
ret
xchg
insl
mov
mov
jmp
or
inc
int3
jecxz
xchg
xchg
dec
icebp
test
addr16
rclb
inc
cmp
add
stc
mov
sbb
imul
out
test
lds
add
inc
adc
pusha
pop
mov
stc
sti
adc
xchg
sub
jo
lea
fwait
mov
cwtl
or
pop
sub
loopne
insl
fstpl
jae
xchg
jl
mov
cli
daa
fildl
jo
pushf
pop
push
jo
ja
shll
jg
mov
inc
adc
jo
xor
dec
pop
jo
dec
clc
movsl
dec
and
rcr
cld
in
mov
scas
test
inc
mov
imul
xchg
lods
ror
mov
mov
leave
mov
adc
cs
iret
lret
in
push
loope
adc
mov
ret
fwait
int
fdivrl
fisubrs
jo
popf
xchg
lock
outsl
xor
ds
inc
pop
push
xor
pushf
imul
lret
mov
fidivrl
cli
adc
sub
pop
or
dec
fnsave
out
fdivrs
or
ret
or
lock
sbb
shrb
stos
shll
ret
dec
lea
pop
push
imul
pop
pop
xchg
lods
jmp
int
out
movsl
lods
loopnew
and
cmp
add
lret
push
out
clc
ret
in
adc
in
mov
into
pop
insl
ja
decl
or
jae
sub
push
jl
cmpsl
xor
pop
ljmp
cmp
fdivr
push
leave
fidivrl
mov
mov
pop
mov
xor
rcll
sti
ljmp
mov
lahf
add
insb
orl
xor
sbb
outsb
add
call
arpl
pusha
sub
sbb
or
test
cltd
subb
cmp
jae
sub
sbb
das
xor
adc
clc
in
enter
add
mov
test
push
aas
clc
loope
enter
push
xor
adc
or
cmc
inc
inc
inc
dec
mov
arpl
adc
mov
mov
push
add
test
rclb
mov
mov
andb
imul
loope
push
cltd
mov
adc
push
movsl
sbb
cli
je
pop
outsb
je
add
lds
fldl
mov
in
adc
popa
in
or
out
stc
insb
cld
lods
and
push
jnp
inc
jge
dec
inc
inc
andl
mov
iret
adc
sbb
insl
les
stos
push
xchg
mov
lea
lock
es
cs
push
fildl
stos
xlat
pop
out
mov
test
dec
sbbl
xor
negl
mov
fs
xchg
or
cmp
fsubr
outsl
mov
loopne
xchg
pop
mov
leave
rcrb
mov
cli
push
push
movsb
dec
lods
aad
or
pop
and
jo
nop
scas
into
sbb
loop
cltd
mov
and
loopne
imul
jg
icebp
mov
inc
xchg
push
jl
or
pop
repz
aas
daa
jle
adc
data16
dec
jb
sti
lcall
pushf
push
movsl
dec
imul
pop
and
xchg
test
aam
loope
into
push
rorb
cmpsl
sti
adc
dec
ret
mov
popf
xchg
in
jp
pop
fucom
js
mov
mov
and
dec
jnp
mov
xchg
mov
adc
pop
daa
es
js
popw
xor
mov
sbb
aam
pop
adc
xchg
nop
sbb
adc
pop
incl
xlat
leave
jbe
out
add
out
dec
or
test
inc
jmp
push
inc
lret
and
adc
and
jbe
cmc
inc
jb
lahf
mov
cmp
sar
cli
and
adc
sbb
fstl
jae
jnp
mov
push
std
lods
dec
jmp
arpl
fs
imul
sub
movsl
imul
into
mov
aas
push
jnp
pop
dec
and
call
lods
clc
sub
aas
xchg
push
sbb
mov
lcall
mov
pop
mov
je
mov
fsubr
decl
pusha
insb
shrl
pop
inc
lods
mov
stos
shrl
cmc
mov
int
xchg
push
repz
movsb
clc
mov
pop
jp
mov
push
or
lret
inc
incl
push
inc
fistps
cmpsl
push
sub
cs
aam
xchg
loop
lock
out
push
adc
sub
hlt
pop
xor
lock
pop
aas
mov
bound
jecxz
or
or
cmp
mov
mov
or
jecxz
xchg
ret
xchg
dec
ja
lds
mov
addr16
xchg
xorb
pop
dec
insl
fsubrs
xorl
lea
mov
cs
dec
mov
in
mov
xchg
stc
inc
inc
fisttpl
fcmovne
xchg
xor
mov
adc
mov
fnstsw
icebp
ljmp
and
pop
sub
fs
push
inc
imull
push
cmp
cmp
jnp
xchg
ja
sarb
ss
fiaddl
push
dec
pop
sbb
pop
daa
fdivl
add
push
hlt
data16
xor
and
arpl
popf
out
rol
in
in
cli
pop
xor
adc
add
mov
xor
fiaddl
sub
mov
add
adc
dec
dec
adc
cmpsl
pop
push
pop
pop
push
dec
add
sub
mov
jb
add
adc
fnsave
or
lods
lea
mov
aas
stos
jo
pop
xchg
xlat
mov
lcall
test
ds
out
mov
adcl
or
push
fldl
pop
jg
pop
fistpll
popa
aaa
sbb
cld
xlat
fbld
stos
inc
jno
repz
sub
pop
cld
scas
mov
out
or
xchg
xchg
repz
mov
aas
mov
xchg
jle
sti
outsl
xor
test
dec
cmp
dec
push
xchg
cmp
fildll
mov
or
ss
pop
sub
adc
cmc
ss
mov
das
jle
int
mov
rcrb
addr16
sub
in
movsl
orb
out
cli
pop
scas
and
xor
jecxz
push
add
or
add
lret
dec
aad
out
push
xchg
xchg
cld
dec
pop
stos
jno
test
mov
push
fsubl
mov
dec
xchg
dec
sbbb
push
shll
in
out
cli
mov
add
pusha
push
jmp
bound
or
adc
rorl
jnp
mov
jne
dec
jmp
insl
insl
pop
pop
xchg
clc
push
inc
ret
roll
cs
sub
aas
iret
and
mov
xor
mov
jbe
imul
xor
sub
mov
mov
pushf
mov
cmp
subb
fidivrl
lea
cs
adc
sub
mov
xor
mov
and
mov
xchg
mov
mov
or
mov
pop
lds
std
repz
or
xor
insl
pop
aad
aas
movb
int
je
into
ficoms
mov
nop
insl
je
inc
mov
or
xchg
mov
dec
mov
filds
fildll
data16
sub
mov
ljmp
pusha
add
or
loope
sbb
pop
adc
or
push
dec
push
mov
lret
mov
int
mov
xchg
mov
in
mov
pusha
sub
mov
and
cmpsb
inc
push
test
ret
pop
cbtw
dec
rclb
mov
jle
pop
cs
mov
add
xchg
les
or
fmul
test
xchg
push
in
bound
popf
pop
xor
jge
mov
ljmp
mov
and
add
cmpsb
xor
push
mov
add
call
orl
cmp
stc
loopne
leave
insb
xchg
test
inc
cmp
push
cwtl
lahf
cmp
add
sub
xstore-rng
cmpsl
add
cmp
and
sub
dec
mov
pusha
sub
push
scas
dec
stos
mov
int
mov
mov
xchg
jg
sbb
xchg
mov
ss
jb
leave
xchg
adc
lret
mov
jb
add
and
sub
cmp
xlat
add
mull
add
xchg
pop
scas
or
and
outsb
shlb
jae
push
or
lea
int3
cmovg
fldcw
pushl
jno
les
adc
cmp
movsl
sub
aaa
ss
add
in
fsubl
test
inc
ss
iret
repz
and
out
daa
out
jp
das
call
pop
bound
dec
pushf
std
push
pop
pop
ficoms
lods
inc
push
jp
outsb
enter
and
mov
dec
test
mov
sub
aam
push
pop
cmp
fildl
add
test
jo
mov
push
int
push
push
popa
sbb
xchg
int
jecxz
adc
fwait
popf
jg
sub
data16
mov
lods
fcmovnb
mov
xchg
insl
adc
fsubl
call
jecxz
add
mov
daa
dec
imul
jmp
lahf
xchg
sbb
pop
test
pusha
jecxz
xor
jne
jae
jge
push
cli
out
pop
cmp
add
dec
stc
adcl
fwait
sub
in
pusha
insl
out
cli
cwtl
bound
fdiv
addb
paddd
cltd
movsb
repnz
jno
rorb
push
jnp
arpl
int3
xlat
or
test
dec
icebp
cmp
rcrl
mov
sbb
push
or
jnp
mov
lret
cmp
mov
mov
daa
push
push
jecxz
dec
insb
je
push
push
stc
add
ja
push
aam
xchg
push
sub
scas
inc
pop
jle
ja
cmp
xor
and
mov
xor
pop
add
out
aam
aad
rcr
jl
push
mov
inc
sub
sub
push
lcall
xchg
enter
cwtl
mov
and
mov
addr16
repnz
mov
and
rolb
outsb
scas
mov
lcall
std
lret
jne
xchg
xchg
cmpsb
cmp
and
ljmp
sbb
push
adc
aam
inc
fcmovb
cltd
cmp
lcall
push
dec
out
lds
adc
inc
js
int
in
jo
nop
or
imul
testl
and
nop
mov
jns
test
sti
cmpsb
pop
stos
jnp
call
cltd
push
loope
xchg
lea
rorb
sub
push
or
sbb
in
push
cmp
in
mov
cmp
lds
mov
push
xor
dec
xchg
jl
cld
add
mov
std
push
mov
sbb
fs
lret
jl
sub
enter
jecxz
dec
into
xchg
cld
jne
and
xlat
mov
pusha
cmpsb
mov
sahf
xchg
cmpb
lea
xchg
repz
and
mov
repz
fwait
mov
and
sbb
jg
les
xchg
cmpsb
mov
loop
fmull
test
jp
lahf
arpl
add
mov
and
std
repnz
add
pop
push
mov
scas
jecxz
add
xchg
sbb
add
add
mov
sbb
adcb
cmpxchg
xchg
int3
mov
fmul
xchg
or
jnp
push
mov
pushf
jecxz
xor
mov
or
push
mov
push
xchg
sbb
dec
jb
jg
mov
hlt
mov
sarl
jg
mov
sbb
jmp
pop
inc
arpl
mov
fs
dec
xor
rcr
imul
icebp
lahf
testb
jno
dec
dec
fisubrs
rclb
into
and
sbb
lds
adc
scas
popf
inc
jae
gs
mov
cmc
data16
mov
or
div
xchg
shrl
push
lock
ds
call
fs
sahf
enter
pop
sbb
ss
jno
mov
mov
in
test
adc
out
stos
loopne
jg
cmp
or
clc
sti
add
fsubrs
popf
and
xor
and
popa
pop
or
jns
std
pusha
cld
rclb
movsb
jnp
std
pop
push
lea
daa
dec
popa
lock
into
shrb
push
jecxz
int3
cmp
sbb
xchg
cmpsl
jb
sbb
test
mov
mov
jno
imul
adc
leave
pop
pusha
rcrl
lret
push
movsb
in
dec
sub
push
notb
ss
cld
in
xchg
test
sbb
shll
and
add
pop
adc
shrl
je
iret
je
push
push
xchg
mov
sub
push
pop
or
xor
sub
or
or
mov
orl
fbstp
fs
es
mov
in
movsb
cld
subl
leave
movsl
pusha
dec
mov
mov
push
pop
dec
test
mov
jp
paddq
cltd
or
ret
idivl
insl
or
ret
cmp
jmp
mov
inc
js
fldl
std
rcrb
sahf
push
inc
and
inc
loop
js
es
sti
sbb
sub
jg
aas
jge
rcrb
je
into
ljmp
loopne
xlat
pop
sbb
lea
pop
dec
mov
in
popa
push
addr16
lods
stc
dec
mov
dec
mov
pop
sbb
in
xor
lahf
jmp
loop
or
in
das
fcoms
xlat
jo
bound
adc
cmp
pop
lret
addr16
jb
rorl
mov
add
aad
jae
cmp
sbb
xor
mov
pop
insb
stc
adc
ds
clc
sbb
je
mov
mov
inc
and
pop
daa
in
pop
xchg
fcomps
clc
jle
dec
mov
std
fimull
lret
dec
and
sub
cli
mov
leave
jecxz
cmp
mov
pop
cwtl
ret
imul
fs
jp,pt
cmp
jle
out
fsubrl
xchg
adc
std
pushf
pushf
xor
push
sbb
mov
cld
loop
sub
lahf
or
xchg
ret
mov
sti
pop
inc
lock
jb
or
int3
ficompl
sbb
mov
adc
inc
add
dec
add
stc
dec
mov
loopne
in
fidivs
lods
arpl
jg
pop
add
push
jmp
ficomps
mov
shll
pop
test
add
pop
and
xchg
lcall
xchg
push
and
and
push
dec
sub
ret
jp
dec
std
call
jo
test
imul
jb
mov
xor
loope
cmp
adc
adc
inc
dec
nop
ret
mov
sub
mov
push
or
jae
cld
lods
test
scas
jne
and
ror
or
jne
mov
mov
pop
sti
loopne
pop
mov
mov
hlt
dec
dec
cwtl
mov
sub
dec
sbbb
in
into
mov
xchg
mov
loope
inc
pop
scas
in
sbb
inc
mov
ficoml
daa
push
dec
jae
mov
fmuls
scas
int3
call
repnz
js
dec
xor
loopne
and
mov
repz
cmp
jae
fbstp
rcrb
sarb
mov
scas
xchg
mov
test
xchg
cmp
popa
xorb
das
dec
mov
popf
in
je
enter
cli
jno
mov
lahf
std
cltd
aad
aas
rorb
pop
movsb
inc
pushf
sarl
lahf
dec
hlt
ret
rcrl
or
jecxz
int
ds
mov
inc
xchg
jbe
mov
sbb
movsb
pop
inc
out
jae
loopne
mov
int3
sub
sbb
dec
repnz
mov
push
jo
push
inc
cwtl
dec
es
fidivrs
push
jp
loope
pop
xchg
dec
push
mulps
repnz
xchg
xor
sub
jl
pushf
ds
orl
inc
out
mov
repnz
repz
push
adc
test
dec
lds
mov
xchg
shr
pop
loopne
mov
sti
mov
hlt
dec
lcall
loopne
inc
or
scas
lea
scas
adc
and
fs
loopne
sbb
es
lods
sbb
pop
es
insl
js
pop
in
dec
stos
andb
xchg
pop
fldenv
mov
testl
xchg
lods
shlb
mov
inc
xchg
cli
inc
xchg
push
inc
hlt
insl
loope
mov
repz
pop
scas
and
mov
cltd
out
pop
and
xchg
daa
les
mov
icebp
ja
jecxz
stos
into
sbb
test
push
fcoml
mov
inc
xor
mull
test
cmp
lahf
jne
lcall
mov
orl
pop
pop
outsb
sarb
pop
pop
or
ja
in
arpl
pop
jg
pop
andb
fstpl
xor
jns
or
pop
push
and
mov
insl
adc
mov
je
clc
insb
pop
mov
sbb
cmc
fmull
and
xchg
adc
repnz
pminub
push
data16
sti
sahf
pushf
push
sub
fldt
push
ljmp
inc
iret
jg
and
mov
sti
ret
xchg
test
adc
ljmp
sub
ljmp
push
lcall
pop
xchg
test
lret
hlt
aad
insb
mov
repz
std
mov
shl
pop
testl
orb
jo
aam
ss
push
faddl
mov
jle
sbb
leave
add
pop
push
sti
push
xchg
scas
xchg
and
push
ret
mov
mov
fildll
jp
outsl
lret
cwtl
je
push
mov
pop
lods
or
mov
mov
in
xor
sbb
ds
inc
and
stc
mov
and
es
fidivl
jnp
mov
fiadds
scas
add
mov
add
cmpsb
clc
pop
inc
mov
fs
repnz
lret
jo
imul
sbb
cmpsl
add
iret
add
std
add
ret
dec
cmp
push
jmp
add
xchg
inc
or
mov
push
push
dec
pop
mov
jg
push
xchg
stc
fildll
nop
cmc
pop
pop
cmp
dec
fsts
popf
mov
sbb
sbb
sub
bound
rcrb
dec
xchg
outsl
aad
cltd
push
jnp
scas
lret
add
pop
and
notb
repnz
or
pop
inc
fmull
jl
adc
repnz
mov
jns
mov
jns
add
in
xor
cmp
xchg
sub
dec
dec
xchg
push
xlat
ficoml
ret
mov
filds
cwtl
rolb
imul
in
jbe
ret
mov
push
push
stc
movsl
or
and
sub
mov
xor
icebp
fcomps
int
mov
sbb
inc
and
add
mull
mov
cwtl
movb
mov
push
dec
out
cwtl
repnz
adc
movsb
scas
pop
mov
add
fdivrl
pop
bts
mov
mov
mov
lret
adc
int
adc
sbb
adc
jmp
mov
pop
out
jne
pop
es
xor
dec
popf
jnp
push
cmp
outsl
xchg
imulb
shrb
xchg
imul
ljmp
xor
pop
mov
adc
push
push
scas
scas
mov
cmp
clc
and
jo
call
nop
xchg
pop
xchg
dec
pop
mov
testl
mov
ret
jecxz
lds
mov
or
lock
fisubrs
scas
or
inc
loopne
ret
or
push
cli
xchg
xchg
mov
mov
push
addr16
and
in
push
jl
sbb
and
inc
scas
int3
movsb
push
add
das
sti
hlt
push
mov
clc
lock
aas
jmp
xchg
stc
push
call
inc
addl
aad
fs
sbb
out
mov
movsl
imul
mov
js
mov
add
push
push
orb
sbb
pusha
stos
xor
xchg
sub
into
push
je
add
dec
arpl
test
jae
push
pusha
mov
daa
fmuls
xchg
rcrl
mov
push
mov
sub
cmpsb
das
in
xchg
mov
fmuls
push
cmp
clc
adc
inc
imul
and
xchg
mov
or
mov
lods
pop
sub
inc
stos
sarl
mov
xor
pop
cld
imul
es
xlat
pop
aas
fwait
ss
inc
insl
icebp
push
xor
cmp
mov
dec
rcrb
fs
xor
or
aaa
jns
out
test
ret
into
mov
sahf
imul
ja
mov
ficoml
xchg
pop
mov
and
test
dec
inc
nop
shll
xor
out
lods
jle
sub
int
les
js
push
inc
cmpxchg
mov
out
insb
je
cmc
adc
mov
jl
loop
pop
or
mov
adc
inc
pop
cli
in
loope
add
xchg
shl
popf
push
int
int3
push
pop
int3
sti
sbb
aas
sbb
or
dec
push
mov
rcrb
cltd
int
and
sbb
mov
dec
dec
pushf
mov
jge
xor
adc
insl
cwtl
mov
add
or
lret
mov
lret
mov
xlat
mov
neg
dec
add
sahf
sbb
push
inc
and
dec
outsb
mov
lods
sub
dec
adc
pop
push
push
nop
jl
lods
in
subb
scas
ficoml
jnp
jg
mov
pause
or
mov
jecxz
jge
data16
mov
jb
sbb
add
cs
in
adc
pop
popf
je
mov
dec
je
adc
cmp
fs
aaa
sbb
mov
xchg
imul
mov
pop
std
pop
cltd
and
aas
pop
call
enter
sbb
je
push
aas
mov
sbb
cltd
lods
fadd
rcr
data16
or
cmp
push
push
decb
jno
mov
sbb
add
aad
aam
xchg
add
xchg
inc
outsb
jb
out
gs
mov
and
xchg
insl
dec
and
or
push
aaa
pushf
ss
shr
aaa
push
xlat
int3
cmp
out
cmp
adc
add
sbbl
jecxz
sbb
sub
shl
sbb
lds
sahf
sub
add
adc
pop
add
mov
ja
outsl
cld
sub
and
jno
sub
mov
and
inc
shl
mov
jo
push
cmpsl
mov
mov
ficompl
mov
js
test
loop
pop
mov
cmp
data16
sbb
xlat
lahf
icebp
dec
fsts
adc
lahf
xor
xor
pop
or
or
mov
push
mov
cmpsb
adc
cpuid
sub
cmp
aaa
rorb
repnz
cmp
push
rcr
fdivrs
pop
insl
add
movsl
push
mov
push
dec
inc
bound
or
add
or
cmp
test
mov
or
nop
cltd
mov
icebp
add
jecxz
lahf
cmc
xor
rorb
and
sbb
pushw
mov
in
fbld
ret
inc
aas
inc
sarl
and
idivb
add
push
lods
movsb
lds
dec
mov
movsb
pop
addr16
push
inc
mov
shlw
pop
xchg
xchg
push
cli
or
xchg
adc
jle
mov
mov
or
cld
jbe
dec
mov
outsb
mov
xor
push
xchg
push
ret
add
dec
adc
mov
jno
les
sub
fstp
lret
push
mov
jg
add
cs
aaa
and
fstps
out
dec
jne
divb
daa
sub
repnz
mov
gs
dec
add
jmp
xchg
ds
jl
mov
dec
std
movsb
inc
dec
enter
and
mov
fldenv
or
sub
xchg
je
inc
daa
add
dec
lcall
repz
pop
lods
push
repz
out
push
repz
jge
rcrb
inc
xor
inc
push
pop
or
jmp
fwait
or
fcmovnb
and
into
push
rcrb
or
jge
dec
ret
cmp
iret
xor
adc
push
mov
ss
xchg
popa
pop
or
imul
push
fdivrl
and
or
ficoml
jp
rorb
aam
popa
xchg
add
push
daa
and
pop
rorb
mov
push
leave
pop
clc
daa
jge
pop
pop
ret
movsl
ljmp
mov
mov
fs
push
lods
mov
out
jl
aas
scas
daa
aad
xchg
cmp
and
xor
call
inc
jae
lahf
adc
loope
and
or
mov
in
js
loop
lods
add
pop
je
jb
inc
popf
or
mov
bound
mov
movsl
pop
sub
int3
ja
mov
out
xor
lock
xlat
inc
icebp
nop
push
lcall
fisttpl
inc
add
movsl
mov
fnstsw
lock
loope
cltd
rcrl
test
push
jns
mov
loop,pn
jnp
pop
and
pop
int
cltd
flds
mov
add
loope
inc
pop
mov
cmpb
arpl
lcall
in
add
add
add
testl
cltd
jge
mov
test
dec
mov
cltd
mov
icebp
sbb
sarb
dec
bound
sbb
repnz
sbb
lock
stc
dec
push
rcrb
in
imul
push
in
jp
pop
jecxz
add
push
add
jno,pt
fisttps
test
push
aaa
movsl
movsl
in
sub
cmp
lea
jo
fsubrl
jnp
es
pop
mov
xor
push
dec
lock
cs
mov
and
pop
xchg
adc
push
pop
xor
mov
xchg
enter
mov
pop
mull
shll
and
cmp
push
push
ja
mov
decl
inc
lahf
adc
jg
mov
cmpsl
sbb
stos
dec
cmp
into
and
popf
shrl
adc
fldl
enter
xchg
adc
mov
and
mov
pop
hlt
popf
lds
test
insl
insb
mov
ljmp
xchg
call
xchg
ret
movsb
add
imul
dec
cmp
aaa
cwtl
and
js
push
aam
hlt
cmp
std
leave
roll
in
inc
ja
push
xorb
add
xor
in
pop
pop
in
cmp
xchg
mov
push
xchg
mov
and
lods
cmp
lds
mov
scas
dec
lods
daa
mov
and
in
loop
popf
scas
sub
inc
dec
xchg
insb
mov
ljmp
push
outsb
adc
gs
lds
xchg
loop
inc
and
jmp
push
jbe
stc
jecxz
js
xor
loopne
dec
sub
iret
jl
rolb
mov
rol
and
lcall
jmp
xor
jns
xchg
mov
stos
sub
inc
cmp
jno
cmpsb
inc
or
fnstsw
lahf
xchg
imul
adc
test
icebp
inc
fucomp
and
enter
add
cmpsl
push
push
xchg
inc
mov
sbb
push
and
lret
fidivrs
clc
or
fcmovbe
sub
add
in
mov
or
lar
aaa
lds
sbb
add
cmp
imul
cmp
outsl
faddl
pop
mov
pop
adcl
pop
stos
cmp
popf
loopne
ss
repnz
popa
push
mov
fimuls
lret
jmp
adc
jl
test
loope
pusha
dec
adc
mov
dec
into
popa
push
addr16
ja
aas
pop
shrl
movb
xor
jmp
sbb
fidivrl
imul
fwait
aaa
std
insb
cmpsb
push
push
mov
rcl
lret
test
mov
int
cmp
dec
mov
cmp
test
mov
int3
les
jmp
xchg
push
and
je
cmp
mov
add
xor
repz
pop
pop
sbb
xor
mov
test
negl
or
imul
lahf
xchg
push
nop
sbb
mov
lods
or
sub
adc
jle
pop
fsubp
cmpsl
jbe
je
gs
cmp
push
jge
aaa
insb
jle
xchg
adc
xor
mov
lcall
cmpsb
fldenv
fsub
xor
mov
add
dec
lods
xchg
push
fadd
fcoms
ret
popf
pop
push
dec
loopne
pop
std
sbb
mov
call
movsl
inc
nop
push
jmp
mov
fsts
test
pop
dec
sti
rorb
xchg
mov
int3
into
popa
xchg
dec
sbb
mov
imul
in
or
imul
push
loope
push
aaa
sub
sub
mov
mov
outsl
cmc
xor
cli
jne
sbb
push
inc
mov
jecxz
adc
ds
mulb
out
pmulhuw
pop
lahf
pusha
enter
jae
cld
cld
fs
push
cmp
js
pop
dec
adc
cmpb
es
fdivp
xor
sub
aam
inc
addr16
fs
arpl
sub
lods
sbb
js
lods
rorb
cltd
loopne
ja
mov
jb
push
aaa
cmp
lcall
mov
adc
ljmp
jge
dec
xor
jmp
dec
fwait
xor
jmp
and
es
mov
adc
mov
in
repnz
je
out
jo
stos
cmp
push
push
push
out
or
pop
pop
mov
xor
sub
outsb
fs
fbstp
add
add
cmp
push
aad
jns
int
add
lods
orl
mov
test
add
push
mov
mov
dec
cmpsb
aad
inc
pop
mov
loop
repnz
mov
enter
fabs
push
push
and
adc
fsts
cld
stc
out
cwtl
push
leave
iret
jle
movsb
fstl
mov
xchg
sub
out
cs
or
jnp
jle
pop
arpl
mov
clc
adc
pop
ffree
jmp
js
leave
jg
and
pop
dec
cmpsl
in
pop
stc
sbb
add
add
arpl
pop
cli
stos
std
dec
lahf
mov
movsb
lock
lcall
inc
sub
mov
xchg
mov
pushf
adc
push
lods
adc
pop
clc
test
inc
xlat
or
lods
xchg
enter
adc
push
popl
mov
lcall
sub
sahf
xor
sti
inc
add
add
mov
fadds
jb
dec
jne
daa
sbb
in
sbb
scas
inc
sub
adc
js
mov
dec
scas
cmpsb
xchg
cmpl
sti
enter
cmpsb
loope
loop
inc
jno
out
adc
leave
adc
and
lods
cmp
fisubs
imul
aam
push
rcll
inc
imul
push
xchg
mov
rclb
mov
and
leave
loop
lods
test
jecxz
sub
and
xorb
daa
mov
or
xor
push
or
jne
data16
sahf
adc
pop
ret
pop
mov
jno
adcb
mov
lods
rclb
fdivr
nop
mov
cwtl
mov
sub
aaa
inc
or
jne
ret
push
in
mov
rorb
dec
jmp
or
in
orl
cli
icebp
insb
cltd
push
aas
push
call
ret
add
hlt
xor
sub
imul
lock
push
pusha
add
jp
sub
clc
xchg
jp
pop
cmp
outsl
aad
hlt
xchg
sub
pmaxsw
sub
imul
xchg
repnz
cmpl
adc
push
cmp
test
mov
jge
push
adc
loopne
mov
sbb
mov
jo
fs
vpcmpeqb
push
push
into
sbb
idivb
dec
int
jp
mov
icebp
push
mov
adc
bound
dec
shlb
sub
rcll
jmp
pcmpgtd
test
and
popa
sub
sti
daa
int3
icebp
fs
sbb
leave
inc
and
loopne
sbb
add
mov
out
sbb
int3
mov
cmp
mov
scas
iret
and
shrb
daa
mov
jbe
cld
popf
push
ja
mov
into
lock
sub
sub
jmp
icebp
scas
lea
clc
aad
ficompl
imul
sub
fistpll
push
jg
cmp
jmp
mov
sub
in
enter
sub
sub
fidivrs
sbbl
xor
cmp
std
dec
rcl
jmp
pop
cmp
lock
das
clc
ret
sub
xchg
dec
xor
int3
push
add
flds
std
jmp
stos
push
rolb
std
sub
push
cmp
fnstcw
cmpsb
fnstenv
xchg
inc
or
leave
testl
xor
sarb
cmp
or
lods
imul
jns
fdivl
rorl
lret
out
movsl
cmp
ret
jmp
nop
dec
xor
hlt
fwait
push
mov
inc
inc
ret
jno
mov
mov
push
adc
out
sbb
or
and
pop
shll
jg
add
sub
mov
aas
cs
or
ficoms
out
enter
cli
and
cmc
scas
hlt
xchg
jnp
aaa
lods
jmp
or
dec
pop
pop
xor
cld
icebp
cmp
and
push
loop
xchg
pop
xor
int
fistl
aas
push
and
out
cltd
stos
subb
push
cmpsl
sbb
aas
push
insl
pop
repnz
inc
xor
push
fldl
or
mov
add
loop
xor
lods
leave
rorl
adc
movsl
and
jo
pop
mov
pop
mov
jp
ficomps
fildll
and
iret
inc
dec
or
jae
sub
rcl
iret
xchg
cwtl
xlat
mov
adc
ja
add
je
xchg
aam
mov
sar
fcomps
add
test
popa
push
rcrl
xor
mov
mov
cltd
mov
dec
ret
aas
jp
push
les
sub
sub
xchg
pop
mov
or
or
nop
out
mov
cmp
fnstsw
xor
jle
lret
lret
xor
fwait
sbb
imulb
sub
call
rorl
in
and
movsl
test
aas
and
sbb
out
movsl
jg
mov
fwait
loop
mov
xchg
insl
jb
dec
shr
mov
and
lods
cmpsl
xchg
pushf
add
dec
xor
xor
leave
sti
mov
sahf
xchg
jp
adc
xlat
sub
sbb
jo
jbe
fs
push
hlt
pop
sub
insb
cmp
pop
pop
mov
xchg
das
out
mov
and
into
in
filds
ret
xchg
inc
add
cli
adc
mov
test
jb
mov
push
pop
mov
lock
push
push
xlat
push
and
adc
scas
pop
adc
and
pop
push
daa
push
adc
das
push
nop
popf
mov
das
add
sbbl
daa
inc
adc
xor
lods
or
mov
jmp
or
cs
in
dec
jp
enter
sub
int
adc
daa
stos
pop
inc
fldt
mov
fnstenv
divb
outsl
mov
xchg
jp
out
inc
inc
xchg
jno
xor
dec
or
addl
not
jmp
or
cmp
sbb
lods
mov
mov
add
mov
lcall
lret
jmp
jo
add
das
aam
insb
mov
je
mov
xchg
std
pop
scas
fldenv
in
push
mov
bound
sub
xlat
int
dec
adc
ret
inc
pop
add
jne
push
add
leave
out
mov
mov
xlat
pop
dec
loope
mov
repnz
add
and
fsubs
icebp
and
mov
mov
je
je
insl
adc
repz
inc
lret
sarb
insb
icebp
out
push
pop
clc
jae
xor
mov
fisttps
mov
sub
xchg
sarl
inc
das
ss
and
inc
pop
popa
mov
add
jae
outsb
fisttps
movsb
inc
out
dec
lahf
in
aam
xorb
adc
clc
xchg
insl
sbb
cli
sub
sub
pop
test
out
shlb
push
nop
and
and
bound
std
add
jmp
repz
mov
pop
add
mov
adc
repnz
subb
push
pop
sti
insw
adc
insb
int3
sub
es
in
cmc
mov
jno
push
leave
cmp
popa
jecxz
xor
sbb
xor
and
in
xchg
movsb
push
mov
lcall
xor
jb
outsl
mov
fstps
cmpsl
roll
nop
rcpps
sub
jns
add
ret
jle
stc
pop
loope
sbb
jecxz
stos
in
jg
outsl
xchg
in
cmp
arpl
sub
sbbl
pop
adc
and
and
pop
in
ret
lock
loopne
jmp
aad
cmp
ret
out
lret
push
adc
mov
jb
shll
insb
insl
and
mov
cmpsl
in
sub
xchg
dec
insl
fs
sub
xor
inc
or
inc
push
xor
ja
lahf
mov
mov
gs
xchg
push
in
mov
xchg
inc
idivb
sub
mov
jb
xchg
xchg
or
push
out
test
pusha
xchg
push
jb
adc
pop
insl
ljmp
shlb
iret
pop
lahf
mov
mov
subb
or
out
pop
out
movsb
pop
jne
sub
add
in
push
repz
pop
xchg
movsb
jbe
arpl
xchg
sub
outsb
mov
or
sbb
inc
imul
popa
inc
ja
iret
lret
mov
jbe
mov
call
add
cs
cli
jno
mov
mov
stc
sti
adc
pop
mov
pop
jae
pop
mov
or
mov
cli
movsb
loope
test
gs
xchg
pusha
cmc
xchg
pop
cltd
pop
jbe
sbb
lret
xor
inc
adc
outsb
ret
pop
add
lds
shl
adc
icebp
aas
adc
mov
jle
stc
js
std
or
mov
cmp
and
ljmp
pop
dec
ds
push
add
out
cwtl
push
cmp
arpl
xchg
push
cwtl
jb
xchg
push
jmp
in
mov
in
outsb
push
popa
sahf
scas
xor
ret
hlt
stos
into
mov
inc
add
jl
repnz
fdivrs
fldenv
aam
push
mov
or
and
xor
dec
pop
lahf
rcrb
dec
imul
imul
xor
inc
stc
ret
mov
sbb
rcrl
dec
or
mov
inc
sub
repz
push
movsl
pop
fdivs
push
and
shrl
or
shrl
pop
out
pop
sub
scas
mov
iret
arpl
add
shlb
sub
mov
xlat
ds
icebp
mov
add
mov
test
aas
push
xor
test
mov
mov
xchg
xor
add
lods
sbb
popf
shlb
or
dec
mov
xor
cmpsb
xchg
fwait
dec
adc
sub
paddb
cmp
fs
cmp
mov
addr16
idivb
mov
sarb
scas
pop
and
mov
sub
push
adc
in
nop
leave
dec
mov
scas
sti
jno
mov
inc
xor
fwait
stos
mov
jl
sub
inc
mov
cmp
xor
inc
xchg
cmp
cli
push
shrl
cld
or
and
or
mov
repz
add
mov
shll
rcrl
fwait
inc
inc
pushf
xchg
fisttpll
pop
lods
fisttpl
mov
jae
jecxz
outsl
jne
cmpb
stc
imull
aam
stos
sahf
mov
testl
jmp
xchg
jg
sub
push
jge
adc
in
shlb
sub
divl
je
push
xor
push
inc
insb
popa
das
mov
cli
or
shl
push
mov
out
jno
dec
xchg
sub
loop
cmp
cs
cltd
out
cmp
mov
mov
stc
addr16
mov
push
test
jmp
out
mov
loopne
mov
mov
xchg
testl
test
pop
and
inc
pop
mov
les
fcmovu
inc
add
pusha
jl
outsb
ss
data16
xchg
inc
pop
call
loope
sbb
xchg
push
mov
fwait
out
dec
shrl
hlt
xchg
xchg
inc
std
scas
dec
jbe
xor
leave
out
shlb
push
cli
jno
jb
cltd
mov
push
test
sbb
mov
lods
lret
mov
mov
sbb
jmp
iret
imul
rol
clc
cld
xlat
dec
mov
rol
add
movsb
inc
outsl
and
lods
fistl
mov
mov
mov
sub
cmp
add
xchg
stos
mov
or
push
sarl
sub
sub
or
inc
inc
je
mov
aas
cmp
and
inc
scas
imul
push
dec
lds
leave
push
jp
mov
mov
and
rorb
and
sbb
mov
pop
cmp
xchg
push
jnp
mov
sbb
pop
mov
sbb
dec
sarl
icebp
xchg
or
jb
cmp
inc
xchg
mov
lods
push
in
sub
fwait
je
shl
icebp
and
dec
cmc
arpl
loopne
out
in
shlb
lret
sub
imul
push
iret
ret
mov
sbb
push
or
sbb
pop
jecxz
xchg
jle
sbb
push
imul
mov
push
enter
push
out
mov
insl
pop
sahf
pop
je
mov
js
fcomps
unpckhps
jnp
mov
movsl
push
mov
ss
lods
sbb
inc
mov
mov
pop
sbb
test
in
jae
xchg
mov
cld
mov
mov
push
add
out
pop
jmp
mov
inc
rorl
push
xchg
lods
andl
ss
testl
mov
data16
or
jns
hlt
js
dec
outsl
xor
insb
insb
into
fldcw
jg
or
movsl
lret
adc
sub
xor
pop
mov
cs
out
jnp
or
das
cli
ss
adc
mov
push
xor
test
rclb
sahf
push
movb
cmp
test
mov
ret
push
pop
cmp
pop
add
xchg
inc
pop
ja,pt
fdivrl
mov
fiaddl
push
ja
and
mov
dec
decb
sahf
out
data16
sub
enter
add
xchg
ds
ja
jns
sbb
test
test
inc
into
mov
out
ret
fisubl
push
bound
loop
sarl
xchg
and
test
fsubrl
mov
mov
mul
push
aam
fsubl
call
push
sbb
loope
dec
call
xchg
jo
out
mov
outsb
mov
sbb
cld
lds
xlat
ljmp
jecxz
jecxz
sub
sbb
pop
mov
sbb
fdivrp
mov
jno
add
nop
adc
js
aad
inc
jno
pop
cmc
sbb
js
out
andb
xor
mov
pop
mov
sbb
mov
xchg
cmpsb
test
bound
add
xor
pop
dec
mov
jne
imul
scas
nop
data16
lds
repz
cmp
dec
add
nop
or
outsb
lock
pop
scas
dec
stc
cmp
orb
pop
dec
rolb
or
es
adc
dec
add
xor
cltd
mov
iret
test
mov
xlat
add
mov
pop
pop
loopne
xchg
in
js
sahf
push
dec
sbb
out
test
cmpl
add
jmp
jge
stos
repnz
adc
cwtl
jno
jb
lahf
xlat
lret
int3
std
cmp
push
cmp
loop
or
jle
adc
pop
sub
jno
mov
lret
out
outsl
and
cmc
mov
and
mov
in
or
push
sub
mov
mov
rorl
adc
and
add
sti
std
mov
mov
push
or
add
je
out
mov
mov
adc
fistpll
es
mov
fwait
out
add
aad
cs
or
lret
xchg
ret
mov
adc
shll
xor
repnz
mov
pusha
mov
mov
xor
jp
sub
inc
sub
pop
cmp
xchg
sbb
test
xchg
or
mov
cwtl
and
fwait
pusha
sbb
ljmp
shl
push
in
mov
addr16
jle
push
aas
loop
daa
jo
ds
aad
push
call
or
or
sbb
test
mov
mov
mov
data16
jae
inc
mov
mov
mov
jbe
dec
push
pop
rorb
pop
clc
adc
mov
add
xchg
jb
mov
and
or
adc
out
sbb
out
shll
push
mov
pop
repnz
mov
jns
push
fcomip
pop
lea
ljmp
lcall
lea
mov
fisubrl
int3
lods
sbb
fcompl
inc
mov
xor
insl
adc
ret
mov
sti
pop
push
repnz
call
in
aas
test
sub
out
mov
cld
jmp
jmp
into
dec
lea
repz
and
in
sarb
pop
push
out
mov
mov
jp
mov
outsl
and
push
imull
jecxz
jb
cmpsl
xor
add
pop
jno
cmp
or
sub
add
add
sbb
es
add
mov
enter
xor
ret
js
push
pop
push
sbb
xchg
and
or
loope
pop
out
push
pop
adcl
hlt
mov
sbb
aam
push
mov
call
pop
cmpl
add
pop
loope
inc
dec
push
clc
movsb
cmp
mov
outsb
enter
push
ds
enter
mov
fldcw
stos
add
stos
enter
dec
dec
pop
xor
add
cmp
inc
or
cld
out
mov
pop
inc
arpl
hlt
js
dec
insl
mov
aas
mov
test
test
cmp
xor
cld
rorl
scas
ljmp
hlt
shlb
push
inc
xchg
add
aad
dec
dec
shll
fstl
cmp
mov
mov
addr16
mov
cld
dec
stc
push
stc
ror
cmp
mov
mov
cli
mov
test
or
fucompp
cmp
pushf
jae
cmc
stos
aas
sti
scas
adc
lods
aaa
xor
test
jp
loopne
adc
jnp
jbe
mov
popa
ds
pop
ret
jge
popf
in
ja
cmp
mov
jge
into
int
pop
lods
pop
or
dec
dec
ret
jp
cld
and
iret
jg
adc
int
push
xlat
cs
pusha
pop
jae
cmp
and
popf
call
xorl
jnp
push
jo
out
dec
aaa
lret
iret
outsl
jbe
aad
sbb
sub
ljmp
je
and
in
or
mov
push
jae
popa
ja
dec
ja
scas
rorb
cmp
push
inc
dec
pop
or
leave
nop
sub
lret
pop
push
cmp
add
pop
pop
add
daa
dec
push
or
xchg
push
hlt
xor
add
jmp
int3
stc
and
lock
sub
and
or
lock
nop
sbb
push
xchg
jl
test
mov
nop
pop
fimuls
xchg
test
dec
adc
adc
pusha
xchg
jnp
push
xor
and
mov
fs
adc
test
cltd
push
sub
push
xor
mov
push
ret
jne
pop
xor
jno
in
pushf
mov
repz
test
test
jl
ljmp
inc
rorb
push
loopne
xchg
adc
adc
inc
sub
rcll
adc
insl
call
repnz
into
nop
xchg
jmp
pop
arpl
pusha
aas
outsl
int
cmp
mov
sahf
stc
mov
dec
dec
daa
aas
out
out
mov
push
aam
jle
jp
mov
push
aad
sub
daa
mov
lock
dec
xor
push
mov
jmp
jns
popf
pop
out
cs
sti
inc
es
shlb
xchg
lcall
iret
dec
xchg
aas
and
xchg
dec
divl
das
in
in
push
lret
cwtl
cmp
into
inc
or
lds
sbb
adc
fistpll
dec
imul
roll
rcrl
stc
lcall
jo
imul
dec
into
call
mov
pop
xchg
xor
test
push
out
jg
sbb
gs
xlat
movsl
shll
xor
pusha
loope
lock
adc
fsubrs
push
or
jo
mov
mov
dec
out
lea
js
fwait
dec
and
jo
mov
mov
in
scas
je
leave
mov
mov
cli
movl
pop
filds
mov
test
fsubr
xor
push
mov
mov
arpl
push
lea
push
sub
xor
xchg
pop
adc
inc
lea
mov
or
shll
push
xchg
sbb
inc
fwait
sub
ret
cmp
mov
pop
xchg
lahf
outsl
cmpb
sbb
xor
push
mov
dec
jge
das
pop
aad
fnstenv
jle
daa
adc
into
jg
xor
clc
xchg
add
sti
adc
or
mov
mov
pushf
push
jbe
out
push
or
xor
out
xor
mov
fs
orl
aam
add
push
jb
int
mov
insb
push
fwait
dec
adc
adc
sbb
daa
push
sahf
pop
popa
xor
rolb
repz
or
fistps
sti
xor
sarb
inc
insb
mov
mov
push
lcall
jecxz
nop
je
adcl
jae
adc
repz
xchg
mov
lret
repz
dec
sbb
adc
popf
jmp
mov
push
xchg
mov
imull
jbe
popa
sbbl
int
xchg
dec
imul
or
mov
fbstp
cmp
add
ds
es
std
ret
out
mov
sub
lea
and
jg
and
xchg
ret
mov
loopne
aad
out
inc
pop
ret
leave
cmp
mov
jmp
ret
push
out
push
addr16
mov
jle
loope
movsl
mov
mov
sbb
mov
cltd
sbb
cld
sbb
ja
scas
stos
mov
and
jae
pop
sub
aas
fst
js
ja
test
call
loopne
ja
shll
loope
lret
mov
popa
jge
in
negb
cmc
mov
fcomp
mov
pop
cmp
inc
nop
mov
xchg
add
jp
scas
mov
dec
enter
mov
mov
stc
jnp
sbb
cmp
or
pop
out
jo
popf
sbb
jecxz
pop
cltd
pop
imul
sbb
or
repz
fcmovnb
loope
adc
xchg
adc
cmp
fisttpll
adcb
subl
je
pusha
mov
out
ret
insl
les
xchg
mov
leave
push
jmp
stc
inc
adc
push
adc
out
fildl
mov
popf
subl
pop
xor
fwait
ret
or
xor
xchg
call
lret
ret
cli
outsl
jg
bound
int
aaa
dec
xchg
push
inc
xchg
repnz
jge
cmpsl
sbb
nop
dec
hlt
push
jmp
xlat
je
movsl
mov
fists
outsb
jge
sub
push
pop
cmovs
inc
stos
in
gs
popa
jb
es
icebp
jns
mov
dec
in
andl
cld
dec
addb
stos
in
and
mov
sti
add
repz
ror
das
bound
mov
pop
push
ljmp
cltd
roll
xorl
push
outsl
imul
push
cs
out
dec
loop
lods
out
sub
lcall
pop
mov
sub
rorb
sub
imul
push
rorb
clc
push
daa
cmp
repnz
cmpl
sahf
mov
xchg
aam
jbe
mov
adc
mov
jnp
cmp
pusha
mov
insb
cmp
les
fmull
aam
lret
jge
sub
pusha
adc
stc
lea
shll
aaa
jb
loop
sub
xchg
in
sbb
adc
sahf
or
scas
lods
inc
xor
or
fisttpll
lcall
mov
or
rorl
imul
js
push
loope
cmp
aam
into
shlb
pop
mov
sub
sahf
cs
inc
ss
cmpsb
leave
std
pop
fwait
sub
daa
adc
jg
jg
std
std
sub
pusha
mov
cmp
pusha
dec
scas
lods
and
dec
pop
xor
xchg
mov
loope
or
cli
xchg
push
inc
pop
adc
fdivl
mov
test
lret
adc
cmp
push
mov
adc
jl
pop
outsl
loop
cmp
mov
js
mov
fidivrs
lea
and
sub
jnp
xor
dec
xchg
mov
jp
and
mov
bound
pop
loopne
js
sbb
enter
enter
out
adc
popa
inc
movsl
daa
mov
lahf
hlt
dec
imull
mov
jmp
cmp
inc
mov
fwait
ss
jns
stos
pop
sub
adc
cmp
lret
jle
ret
xchg
outsl
jp
scas
call
in
test
adc
rcrb
cmp
sub
jecxz
push
mov
jns
dec
aad
add
push
fidivrs
mov
loopne
out
mov
push
cmp
aad
rcr
jb
cmc
push
ret
insb
sarb
fldcw
cmp
rol
cmp
mov
and
rcrl
arpl
add
mov
fdivrs
sub
push
aas
xchg
mov
imul
pop
inc
fcoms
rep
popa
mov
repnz
lcall
xor
nop
idiv
mov
adc
mov
int3
daa
mov
out
jle
outsb
or
inc
sub
or
push
testl
jle
cli
and
addb
rcrb
sub
jne
iret
xor
pop
jb
cmpsl
stos
sahf
data16
pop
sub
pop
push
cmp
mov
lods
jns
cmpsb
cli
mov
jecxz
mov
or
jmp
in
jg
aas
mov
mov
jl
dec
cmpsl
or
cmp
dec
and
xor
test
mov
scas
fdivl
fbstp
daa
xchg
es
lods
push
and
std
or
repnz
adc
or
mov
in
test
shrl
dec
dec
push
repnz
sbb
fnstsw
push
pop
xchg
lods
pop
mov
cmp
push
js
mov
pop
arpl
gs
ss
adc
imul
mov
outsb
loop
push
loopne
ljmp
das
sbb
movsl
dec
or
mov
pushf
insl
out
movsl
jp
sbb
mov
mov
mov
add
cmc
mov
sbb
cmp
imul
test
test
addr16
mov
les
adc
mov
dec
xchg
jmp
dec
lds
incb
jo
addr16
aaa
dec
dec
or
add
add
fists
ret
add
mov
pushf
or
sbb
dec
and
cmp
pushf
pop
mov
inc
gs
hlt
xchg
jne
ja
loop
push
subb
das
lods
repz
in
xchg
dec
adc
sbbb
xchg
fbstp
int3
xchg
dec
loopne
into
adc
testl
adc
jg
cmp
stos
enter
inc
push
adc
jg
ret
addb
mov
mov
shll
icebp
leave
dec
lea
or
and
add
mov
sub
mov
out
inc
cltd
mov
pop
into
xchg
movsl
push
divb
xor
dec
or
jl
loopne
leave
adc
pusha
int
hlt
shr
rcrl
addr16
inc
ret
sbb
pop
scas
ja
xor
cmp
insl
xor
mov
jo
stos
imul
push
pusha
scas
es
lahf
sbb
cld
popf
sbb
in
dec
nop
lds
mov
pop
dec
out
rol
outsl
lods
mov
out
inc
call
das
jbe
test
fdivrl
adc
loopne
rolb
and
xor
and
push
sbb
push
xchg
insb
jmp
std
pusha
fbld
popf
orb
lock
xchg
mov
insb
je
adc
popa
lcall
and
jb
cmp
cmp
and
mov
icebp
add
jmp
rcll
sbbl
js
push
lock
jg
xor
sbb
sub
mov
scas
les
arpl
stc
lahf
dec
cmp
mov
lcall
push
pop
repz
jp
dec
clc
fs
bound
xor
push
inc
mov
cmp
mov
movsb
dec
sbb
xchg
add
push
aas
ja
jecxz
lcall
jnp
lock
fisttpll
popf
push
cmp
lock
sbb
and
and
adcl
dec
jbe
add
pop
sbb
sub
call
mov
js
xchg
ds
mov
jle
xchg
xor
sbb
and
sbb
cmp
sti
xor
pop
mov
jmp
inc
cmp
mov
or
rcrb
pop
hlt
fistl
adc
cmovne
arpl
add
iret
repz
cmpsb
push
test
mov
scas
stos
dec
xorb
out
fdivrl
dec
add
mov
dec
loope
sub
bound
prefetch
push
fildl
add
jae
stc
ljmp
sub
mov
repnz
jle
inc
int3
xlat
cmp
cwtl
sub
incl
mov
imul
jmp
pop
add
out
gs
xchg
dec
inc
sbb
gs
and
test
aad
xchg
divl
pop
push
out
and
and
cmp
pop
int
idivl
incl
cmp
ja
mov
push
mov
cmp
sub
inc
or
jge
daa
sub
daa
int
xorb
sbb
adcl
push
stos
cmp
lods
aaa
addr16
cmp
xor
int
mov
daa
fstpt
sub
sbb
gs
sub
and
cmp
sub
lret
scas
es
andb
mov
sbb
leave
or
push
mov
out
pop
enter
out
and
out
imul
sbb
loopne
jb
inc
mov
add
pop
cmp
sti
sub
jb
dec
cmc
fstps
sarb
adc
push
pop
test
sahf
sbb
lods
jecxz
test
dec
insl
sbb
add
movsb
jmp
mov
addb
lods
dec
pusha
movsb
rorb
shr
pop
or
jp
call
push
pop
sbbb
test
mov
lea
dec
add
out
scas
push
dec
mov
adc
pop
cld
add
pop
les
es
add
pushf
jns
or
xlat
lret
sbb
call
jle
sbb
or
mov
xor
inc
adc
mov
lret
mov
pop
push
ss
add
jae
sbb
setge
pushf
in
mov
enter
xchg
xchg
rorl
sbb
fwait
and
sbb
enter
push
popa
into
je
mov
in
xchg
xlat
pop
pop
dec
mov
cmp
test
sbb
adc
out
pop
rolb
mov
xchg
subl
adc
and
ret
mov
dec
js
in
adc
cmc
stc
sbb
aas
mov
and
fstpl
idiv
jns
movsb
pop
mov
loop
into
enter
pushf
clc
or
roll
pop
cmp
mov
and
sahf
fcompl
adcb
sub
xor
lods
or
pusha
inc
pusha
pusha
xchg
iret
cmpsl
cmpsl
pushf
pop
xchg
add
push
call
mov
sub
inc
arpl
lret
daa
daa
lds
into
xchg
data16
sahf
clc
xchg
mov
lock
mov
loopne
inc
mov
push
jae
add
mov
push
pop
mov
sarb
mov
lock
jle
mov
push
xchg
insl
jne
in
mov
sub
cmp
sub
dec
in
mov
fbstp
scas
pop
lods
add
or
xchg
inc
cmp
scas
jge
aad
pop
jge
bound
daa
test
pop
push
loopne
stos
lea
add
es
xchg
pushf
and
sub
sti
loop
rol
sarb
sbb
std
popa
in
inc
xchg
pop
repnz
xchg
lock
daa
jae
hlt
mov
pop
aad
pushf
scas
add
add
xor
adc
cmp
cwtl
fidivs
add
inc
and
xchg
cmp
xlat
mov
cmp
aas
sets
add
lret
stos
popf
add
outsl
sahf
xlat
and
ja
insl
int3
pop
imul
insl
int3
repz
push
sbb
mov
pop
sbb
dec
mov
inc
jno
and
es
in
movsb
adc
sti
in
or
addr16
aas
push
sbb
adc
fwait
xchg
insl
sub
xor
mov
mov
pop
add
add
push
in
lock
sbb
inc
aad
pop
shlb
xchg
dec
mov
mov
push
push
inc
lds
arpl
stc
or
test
out
add
push
cwtl
or
repnz
scas
cmovl
loop
or
js
incl
mov
pop
adc
test
mov
movsl
mov
xchg
pop
imul
sbb
jl
clc
xor
loopne
push
and
iret
or
adc
xchg
insl
cmpsb
js
adc
mov
fistl
sub
ret
shrl
inc
add
cltd
sbb
mov
fst
xchg
stos
mov
aad
xor
xchg
ja
sti
andb
das
cltd
test
push
aad
jns
pextrw
insl
mov
movsb
lds
cmp
jp
pop
mov
sub
mov
fbld
sbbb
or
push
ret
push
andb
mov
rcl
repz
xor
clc
es
push
xchg
daa
inc
fwait
pop
mov
push
ret
cmp
sbb
mov
push
mov
mov
xchg
jns
or
in
ret
cwtl
cltd
cmp
jae
or
jp
das
sub
loopne
aam
mov
outsb
dec
sub
add
repnz
xchg
dec
scas
adc
jg
stos
push
lret
mov
je
or
or
push
adc
sbb
mov
out
xor
cli
cmp
das
mov
test
popf
sbb
jmp
inc
rorb
mov
out
and
idivb
jge
nop
dec
push
loop
test
adc
pop
xchg
or
xlat
nop
sbb
or
xor
pop
lock
roll
mov
in
push
sbb
subl
imul
sbb
shrb
es
cmp
add
inc
int3
push
aaa
sbb
xor
mov
mov
jns
add
pop
andl
mov
add
mov
sbb
mov
jnp
push
shrl
mov
mov
jmp
popf
push
test
stos
cmp
xchg
mov
jo
pop
repnz
mov
push
sub
iret
loop
inc
inc
cmpsl
xchg
hlt
cmp
xorb
mov
or
cmpb
mov
lahf
in
iret
or
jno
jae
cs
lcall
mov
inc
jnp
pop
ret
leave
or
ss
push
jnp
lcall
dec
xchg
lods
xor
movl
and
mov
mov
xchg
lret
mov
mov
inc
jo
pop
or
outsl
test
jns
push
inc
push
mov
popf
mov
aas
ljmp
in
pop
int
pop
sbb
pop
dec
scas
shll
das
icebp
mov
jle
testl
cmp
lods
add
enter
xlat
cmp
and
dec
pop
add
xor
adc
gs
xor
out
dec
addr16
popf
xorl
icebp
pop
pop
out
shrb
cs
ljmp
jnp
jecxz
push
call
fwait
iret
out
lret
sbb
in
lods
adc
or
and
stos
pop
lcall
jge
fnstcw
imul
push
or
xchg
cmc
popa
and
adc
fsubrp
adcl
flds
jo
mov
pop
addl
xor
push
pop
std
or
mov
jp
ljmp
mov
shr
adc
repz
fldcw
and
push
or
std
js
xor
int
or
xchg
decl
bound
out
pop
ffree
jno
sub
cli
arpl
das
xor
push
and
xchg
ds
mov
sub
push
mov
and
scas
cld
test
lock
push
out
cmp
pop
movsb
insb
in
scas
push
mov
mov
sub
pushf
sub
xchg
add
adc
dec
mov
leave
pop
sarl
pop
int
mov
cmc
mov
aam
andl
pop
dec
and
and
inc
loop
and
adc
jecxz
sub
fwait
push
rolb
ss
iret
xchg
and
push
xchg
icebp
cmp
loope
sbb
xchg
lods
cmp
lret
ljmp
jns
insb
push
push
out
push
fucomip
test
les
mov
test
mov
adc
aam
push
inc
ljmp
jl
dec
subl
int3
mov
sub
dec
dec
mov
int3
cmp
sbb
fs
lods
test
movsb
rclb
jmp
jge
lret
bound
cmp
in
nop
xchg
popa
aad
cmpsb
mov
adc
mov
sbb
into
or
push
push
add
jb
and
jmp
xchg
shll
xchg
lret
ret
scas
negl
sbb
ss
mov
mov
push
insb
fstpt
dec
scas
push
in
mov
lcall
dec
sub
iret
and
cmp
xor
pop
aas
loopne
mov
mov
pushf
das
shll
adc
inc
cmp
dec
ss
push
push
cmp
jns
mov
jmp
imul
mov
add
fnstsw
aaa
pop
xor
mov
pushf
in
fisubrs
repz
jmp
stc
ds
aad
rcr
in
aad
mov
cmpsb
add
shlb
out
out
push
aad
dec
xor
dec
cmp
ficompl
push
faddl
jne
rorl
test
jle
xor
sub
fistps
pop
mov
jbe
mov
jae
lods
push
jge
adc
inc
add
cmp
test
popa
ja
les
adc
loope
jns
jecxz
pop
lcall
push
sub
test
or
add
sbb
add
xchg
mov
mov
cmpsb
fldcw
rol
adc
mov
fistpll
mov
xor
lea
pop
dec
repnz
jae
pop
dec
stc
mov
cld
pop
cld
sbb
cmc
movsb
mov
jb
dec
lret
push
repnz
cmpsl
inc
in
dec
repz
xchg
orl
push
out
mov
add
cmp
les
out
in
jns
mov
mov
enter
push
jns
ret
add
call
dec
sub
jge
daa
pusha
lea
mov
cmp
or
ficomps
sub
int
push
mov
jp
or
mov
jg
push
or
loopne
or
int
jns
fwait
xor
push
inc
mov
xor
jge
std
mov
xor
pop
test
pop
sub
xchg
ret
pop
bound
mov
inc
ret
fiaddl
enter
xor
jmp
sbb
jmp
out
pop
sub
fdivs
in
aam
lods
sub
flds
lods
adc
pop
push
mov
cwtl
push
popf
and
mov
dec
push
cli
test
roll
sub
xchg
mov
xchg
cmp
fiaddl
and
ds
xlat
fists
scas
push
mov
addr16
nop
jle
repz
jbe
mov
inc
xlat
xor
loopne
mov
stos
lds
cmc
pop
mov
aam
addr16
dec
pop
jb
jo
jno
jle
popa
inc
and
push
mov
inc
adc
imul
cmpsb
fildll
add
movsb
test
pushf
test
pop
mov
enter
popl
mov
ja
push
or
imul
imul
xchg
xor
mov
mov
xchg
inc
adc
scas
iret
sbb
cmp
and
lret
pop
push
and
lods
pop
imul
and
xor
pusha
dec
pop
sub
sub
mov
leave
pop
aas
in
stos
inc
and
cmpsb
add
jbe
movsl
fldl
fldcw
and
jnp
mov
mov
in
pop
pop
fisttps
testl
pop
pop
pushl
push
push
hlt
jae
or
adc
stos
int
jl
push
add
shlb
adc
dec
fs
pushl
sbb
stos
mov
jmp
push
mov
add
addr16
shll
lahf
pusha
xlat
mov
daa
xor
arpl
std
adc
jo
push
lret
hlt
xor
out
lea
jg
pop
xor
call
jae
inc
push
rorb
push
loope
inc
fcoms
push
mov
subb
pop
in
jno
jp
mov
ljmp
mov
add
iret
mov
xchg
dec
sahf
aad
mov
xor
pop
popa
aaa
sbb
ss
lods
and
adc
sub
js
repnz
adc
jmp
cltd
rolb
lods
mov
xor
cmc
mov
mov
jge
loop
add
add
fwait
push
lock
xchg
lods
jge
adc
pop
je
sbb
inc
fdiv
push
push
adc
cld
push
adc
xchg
xor
repnz
into
popf
xchg
clc
cmp
xchg
push
stos
cmpsb
repz
in
mov
push
shll
push
inc
lock
pop
jmp
out
push
sbb
dec
enter
sub
mov
push
ret
ljmp
sbb
xchg
mov
movsb
aam
mov
icebp
icebp
rcrb
outsb
jmp
popf
cmp
push
lock
fwait
mov
dec
out
aad
jmp
or
mov
icebp
out
fwait
jle
add
xchg
rorl
gs
lock
jb
stos
pop
add
mov
or
lods
popf
sti
sarb
int
adc
cmp
lret
jo
out
pop
or
pop
mov
fucomi
pop
popa
test
and
andl
lahf
xor
pop
ljmp
hlt
cld
aam
and
clc
testb
fs
jo
cmc
sbb
mov
or
xchg
sub
cli
insb
dec
jns
adc
push
hlt
lods
arpl
jmp
dec
jb
imul
jle
call
add
popa
mov
xchg
shrb
stos
inc
mov
shll
out
fsubs
or
mov
mov
push
das
push
inc
fldt
dec
popf
mov
cmp
lds
loope
dec
xor
cli
xchg
pop
mov
push
mov
push
xchg
pop
xchg
push
mov
jo
jo
les
mov
sub
sbb
pop
add
mov
nop
jns
xor
fisubl
dec
lret
lea
sbb
aam
dec
hlt
imul
sub
or
cltd
push
push
loop
dec
mov
sbb
pop
xchg
scas
sbb
xor
aas
mov
mov
and
jo
movsb
mov
out
andb
cmpl
or
sbb
pusha
loop
inc
or
or
xchg
sbb
loop
mov
jo
enter
leave
cmp
ds
insb
add
cmc
flds
stos
ljmp
test
mov
andl
push
lock
dec
inc
lock
mov
add
mov
imul
popa
pusha
pushf
test
ficomps
into
dec
fwait
mov
sub
mov
pop
fsubrl
jb
add
test
mov
hlt
gs
push
or
loope
ja
popf
mov
subl
pop
add
movb
add
sarb
adc
inc
cltd
ss
pop
mov
mov
dec
test
xchg
pop
sub
test
push
sbb
fcmovnu
insb
mov
add
divl
mov
adc
clc
outsl
loopne
xchg
mov
stc
cmp
fwait
and
clc
add
jg
jb
mov
rcr
cwtl
enter
mov
sub
pop
loope
sub
push
dec
mov
dec
sbb
lods
stc
xor
jns
mov
jo
jge,pt
cmp
inc
pop
bound
or
sub
aaa
mov
xchg
imul
popf
sti
cwtl
ror
jp
dec
std
and
hlt
popa
test
and
fisttps
outsb
repnz
sub
inc
gs
aaa
outsl
mov
test
xchg
dec
pop
mov
pop
rcrl
popf
add
sub
insb
stos
iret
cmp
push
sti
cltd
jge
int3
test
push
lcall
es
mov
pop
outsl
jecxz
jp
loop
cmc
mov
lahf
xchg
pusha
jnp
sbb
cli
pop
stos
clc
std
lcall
inc
test
jg
movsb
and
lea
xchg
pop
shrb
fldcw
mov
adcb
es
dec
inc
cmpl
or
insb
hlt
inc
testl
insl
data16
jecxz
mov
jmp
imul
data16
mov
pop
xor
clc
sbb
pushf
bndstx
scas
xor
leave
dec
jge
lret
jno
lcall
call
das
fldenv
imul
add
std
mov
and
test
in
inc
shrl
popa
das
sbb
xor
sub
orb
out
push
inc
test
mov
mov
dec
push
push
mov
daa
scas
aaa
push
loopne
cmp
lods
fcmovnu
cmpsb
sbb
inc
mov
cli
mov
scas
cltd
dec
adcb
or
icebp
dec
inc
jno
push
fcmovnu
movsl
and
xchg
dec
fsts
mov
loopne
sbb
icebp
sub
pop
xor
scas
sbb
mov
shrb
dec
mov
rorb
mov
push
add
aam
rorb
and
pop
cmp
or
sub
in
sbb
imul
mov
gs
sub
negb
adc
push
je
mov
or
ja
pop
mov
aam
aam
sub
add
adc
push
lahf
pop
mov
faddp
in
bound
cmp
inc
mov
decb
xor
pop
addb
xor
movsb
in
lods
leave
bound
and
imul
xchg
push
mov
sub
mov
jne
cmc
xchg
adc
ss
xchg
or
aas
test
xchg
scas
or
fnstenv
inc
loop
ds
dec
sub
bnd
fcompl
fsubrs
dec
test
xor
scas
lcall
ret
sub
jg
add
movsb
inc
xor
leave
mov
test
pop
mov
adc
push
movb
push
add
cmpsb
nop
sub
rcrl
sub
inc
mov
push
add
mov
jae
clc
mov
cli
adc
xor
add
std
jecxz
fwait
ja
jp
pop
xor
jp
and
sbb
mov
adc
scas
mov
inc
cmp
push
je
adc
in
jp
inc
out
cmp
cmp
arpl
movsl
scas
inc
lods
mov
add
cmpl
bound
shll
dec
data16
movsl
out
popa
lods
mov
inc
test
jg
xor
xor
cld
fists
mov
xor
inc
lcall
or
mov
out
lcall
mov
xor
out
popa
insl
fcomip
xchg
ss
mov
insb
jne
call
adc
jns
mov
sbb
inc
call
lods
into
cmp
mov
aaa
xor
std
out
lds
fdivs
lahf
xchg
sub
js
adc
arpl
dec
pop
mov
mov
xor
sbb
shll
mov
adcl
shll
leave
jp
je
aas
add
movsb
pop
divb
icebp
add
cmp
aas
sub
sub
mov
push
xchg
mov
es
inc
in
cmp
rolb
pop
fisttps
daa
mov
repz
xchg
cmpsl
push
daa
dec
ds
int
mov
fs
out
jecxz
ror
sahf
xchg
xor
movsl
sub
out
push
xlat
dec
lret
xor
or
shll
dec
adcb
daa
sbb
test
jecxz
outsb
mov
imul
xchg
sbb
repnz
adcb
xchg
jp
aas
push
je
adc
lds
iret
lret
mov
inc
mov
mov
movsl
ss
insb
jge
sar
popf
xchg
xchg
mov
add
pop
jecxz
jo
or
push
repz
imul
fidivrl
bound
test
cmp
push
imul
ljmp
fs
xchg
out
jno
mulb
xlat
es
jecxz
push
lcall
loopne
mov
clc
popa
fwait
mov
and
pop
push
and
clc
jle
sub
rclb
jp
lds
mov
stos
mov
cmc
pop
xchg
sub
imul
inc
enter
push
out
bound
cwtl
ja
or
cmpsb
test
divb
push
fidivrl
les
fldl
movsb
pop
jae
aas
imul
