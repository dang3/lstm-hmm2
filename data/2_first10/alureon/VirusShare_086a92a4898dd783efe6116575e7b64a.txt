push
sub
mov
pop
pop
xchg
sub
mov
xchg
sub
mov
mov
pop
push
push
pop
pop
push
mov
pop
mov
push
mov
pop
push
push
pop
pop
sub
push
sub
mov
pop
pop
xchg
sub
mov
push
mov
pop
sub
mov
sub
mov
pop
pop
call
and
pop
nop
push
sbb
add
jno
in
cmpsl
ret
pop
ret
xlat
or
dec
inc
ret
add
repnz
jo
add
cld
pop
and
pop
scas
xchg
pop
add
inc
aas
out
pusha
push
add
das
sub
push
lcall
std
pop
fimull
jp
xor
iret
xor
mov
sbb
mov
adc
inc
imul
pop
xchg
bndstx
inc
pusha
inc
adc
or
adc
adc
inc
push
inc
pop
inc
push
daa
pop
jae
lods
std
mov
xor
or
insb
push
or
add
xor
movl
or
into
push
xchg
or
std
xchg
sub
jae
psubw
sub
rcr
mov
add
outsb
dec
enter
lods
inc
lea
xlat
sbb
sbbb
orl
or
in
rorb
pop
mov
subl
aas
push
sbb
aas
stos
pop
testb
xchg
in
or
out
or
adc
lea
mov
jmp
or
or
and
nop
nop
and
sbb
push
lock
or
or
nopl
jno
outsl
push
mov
pop
xor
sub
orl
or
ret
push
sbb
xchg
push
mov
mov
scas
dec
mov
std
das
sbb
add
iret
pop
adc
xchg
decl
mov
pop
cmp
and
or
xchg
inc
fsubrs
pop
shrl
add
fidivs
adc
hlt
ret
hlt
push
push
push
sub
jne
jne
in
lcall
clc
outsl
outsb
adc
pushf
repz
aaa
cmp
and
js
les
stos
scas
dec
cmp
add
push
inc
pop
xor
xor
adc
push
cld
inc
sub
push
in
mov
push
dec
push
push
rol
arpl
cmpl
enter
jne
cmpsl
mov
nop
dec
call
addl
out
cmp
push
add
push
ret
scas
int
sbb
lods
sbb
lods
ret
push
cmp
mov
mul
push
mov
and
nop
movl
push
pop
sub
and
stos
imul
and
cmp
and
add
in
push
jo
cmp
fcoml
aas
lods
sarl
mov
pop
cmpsb
adc
and
mov
pop
fistl
push
inc
sub
cmp
sbbl
in
push
out
adc
lods
sbb
icebp
call
dec
add
cmp
inc
sub
inc
adc
add
pop
fucomip
add
xchg
lea
mov
jmp
sub
mov
sbb
sbb
adc
sbb
dec
push
push
adc
dec
add
inc
cltd
stos
shlb
cmp
movsl
adc
sub
pop
ret
adc
leave
or
gs
sbb
add
ret
ret
in
or
sub
in
dec
xorl
divl
call
xchg
call
pusha
movaps
xchg
push
sub
lods
ficoms
mov
push
xor
sub
add
enter
movsb
sbb
mov
por
loop
dec
dec
out
adcb
adc
hlt
dec
and
dec
cld
stos
out
mov
sbb
adc
sbb
mov
push
add
rcrl
aaa
scas
pop
cmp
sub
lds
out
mov
or
cmp
insl
sahf
int
lret
rorl
ja
rcrl
in
int
cmpb
aad
in
leave
xor
hlt
push
fstps
or
fmull
mov
or
gs
mov
xor
xchg
in
test
or
push
pop
ljmp
es
pop
pop
out
ss
outsl
lock
lahf
icebp
sub
in
cmp
xor
add
out
add
dec
xor
inc
adcl
shll
call
nop
in
nop
xchg
inc
out
xor
mov
and
mov
in
pop
adc
lret
dec
mov
xor
cmp
fmulp
xchg
repz
and
fsubl
clc
add
sbb
insl
es
sbb
adc
push
inc
mov
adc
pusha
ja
pop
dec
push
mov
xchg
sub
movsl
lods
jnp
xchg
test
inc
mov
xor
repnz
add
sbb
inc
in
cld
xor
sbb
or
lcall
push
ss
inc
pop
loopne
xchg
or
js
and
adc
sub
pushf
sbb
cmp
inc
cmp
add
into
orb
and
adc
dec
cmpsl
addl
mov
dec
add
out
cmp
pop
jl
into
push
sahf
mov
push
xlat
jo
jo
inc
or
and
ja
and
scas
inc
lds
in
xchg
lcall
xor
js
enter
movsb
push
out
adc
xor
or
dec
pop
xchg
ret
pop
or
dec
inc
int3
xchg
cmp
call
xor
xor
rcrb
fs
pop
sbb
lcall
inc
mov
les
xor
mov
push
and
cmpsb
adc
pop
dec
lds
ja
push
sti
cmp
mov
sbb
mov
mov
dec
fmul
push
jae
sub
into
jb
sbb
and
push
inc
sub
fsubl
xlat
nop
push
sub
aaa
je
xlat
or
call
dec
in
dec
shll
mov
cmp
popf
and
add
hlt
pop
call
js
insl
push
lods
pop
or
sbb
cmpb
dec
and
inc
popa
push
ja
in
add
mov
sti
hlt
mov
mov
notb
out
pop
es
dec
adc
xor
lock
add
sbb
sub
dec
push
dec
lods
daa
inc
nop/reserved
jmp
aam
dec
lea
lds
push
mov
xor
push
les
adc
or
into
xor
enterw
sub
sub
adc
loope
push
mov
js
fsubrs
inc
rclb
jo
sbb
mov
aas
dec
mov
movsb
popa
push
aas
push
add
xlat
les
push
clc
jle
adc
push
lods
and
outsl
mov
inc
jne
insb
push
aad
gs
addl
xor
xor
xor
xor
xchg
jns
decb
mov
xchg
mov
push
andl
pop
lds
lcall
out
rcll
push
push
push
movzbl
pop
or
pop
push
gs
fisttps
fs
or
mov
pushf
and
decb
inc
jo
cmp
mov
lcall
mov
dec
push
or
fsubp
adc
xor
jo
push
push
cltd
incb
inc
ljmp
test
fadds
push
jge
and
popl
mov
xchg
mov
sbb
sub
hlt
cltd
inc
and
mov
jbe
dec
sub
scas
adc
and
xchg
repz
jno
mov
sub
movsb
xadd
loope
loopne
cmp
jns
inc
and
push
xchg
jge
int
xchg
aad
ret
les
icebp
adc
call
imul
jb
pop
mov
xor
bnd
pop
push
inc
sti
and
out
xor
dec
mov
mov
and
push
cltd
mov
fisttpll
pop
cltd
fistpl
jo
test
popf
xchg
adc
xchg
insb
pop
dec
lods
loop
sub
or
mov
and
aaa
sub
sbb
dec
push
sbb
xchg
and
dec
lods
pop
and
pop
sub
dec
movsb
insl
add
sbbl
push
mov
or
and
mov
test
cli
rcrl
jmp
scas
or
and
sti
cltd
in
push
jbe
lea
fs
jae
ret
xchg
sub
sbbb
xchg
inc
insb
inc
gs
pop
and
dec
push
pop
adc
add
push
in
push
xchg
cltd
jmp
inc
adc
repnz
push
adc
int3
pop
imul
leave
pushf
repz
push
push
mov
cwtl
adc
jmp
sub
sub
sub
adcl
add
iret
push
out
cmp
inc
rclb
ss
std
imul
xor
int
outsb
popf
cmp
sbb
cmp
test
cltd
dec
adc
cmpsl
aaa
and
pusha
cmc
adc
inc
or
movsl
cmc
and
push
mov
jge
imull
dec
addr16
pop
inc
andl
fcoms
addr16
loopne
inc
pushl
data16
xor
inc
xchg
push
push
ficompl
and
sub
in
inc
mov
lea
xor
fsubl
mov
sub
xchg
mov
adc
xor
loop
push
and
fwait
and
popa
or
or
and
fimull
inc
mov
vcmpnle_uqps
bound
adc
jns
or
call
je,pn
pushf
adc
pop
xor
into
out
push
push
cwtl
sub
or
pop
ret
in
lea
out
or
sbb
imul
xchg
mov
sub
in
in
xchg
inc
adc
or
and
jbe
add
scas
jo
dec
xchg
andb
push
lcall
add
or
jmp
xchg
insb
xor
jbe
or
mov
xor
aas
in
xlat
cmpb
add
test
and
jnp
xchg
ja
pop
and
adc
sbb
leave
jns
movsb
pop
mov
outsb
arpl
imul
inc
mov
xchg
mov
ds
sbb
jmp
xlat
xor
jl
push
jp
addr16
lcall
push
arpl
and
push
mov
cmpsb
mov
xor
ss
inc
aas
and
out
mov
mov
adc
jo
cmpl
or
or
pop
inc
mov
sub
mov
adc
dec
testl
enter
sbb
and
pop
xchg
iret
dec
fdivr
repz
or
jns
gs
sub
in
adc
ja
jbe
xchg
and
nop
or
add
clc
cmp
or
jmp
scas
inc
pop
adc
pop
xor
push
dec
push
or
ds
xor
cmpsb
pushf
lock
push
jle
sub
or
mov
bound
sti
jle
test
xchg
loop
xchg
cmp
push
inc
or
inc
pop
and
pop
xor
add
xor
das
hlt
outsl
add
jl
clc
fldt
or
pop
insl
or
mov
gs
repz
adc
movb
adc
push
packssdw
or
pop
dec
js
pop
popa
popa
in
jbe
es
jns
lret
fwait
movsb
jb
mov
push
ret
or
xor
push
das
push
cmp
mov
inc
push
xchg
jmp
in
push
cmp
or
sub
inc
mov
aas
outsl
jns
sbb
add
push
inc
xor
stos
cmpsl
sbb
jl
lock
data16
sahf
xchg
or
popf
imul
daa
sahf
sbb
jb
sbb
movsb
enter
lret
pop
push
popa
add
push
cmp
pop
add
xor
push
pop
popl
outsl
or
sbb
orb
jne
je
dec
outsb
mov
sbb
bound
mov
inc
push
or
or
inc
dec
push
xor
jns
mov
cmp
stos
mov
cwtl
inc
xor
inc
push
jb
mov
push
adc
addr16
cmp
jo
fdivrl
loopne
xor
shlb
andb
subl
jns
ja
adc
testl
cmp
inc
fwait
lcall
adc
jae
dec
push
cmp
xchg
and
sbb
jns
adc
add
aas
push
je
es
les
aas
dec
sbb
push
addr16
and
cltd
adc
jle
dec
out
and
daa
or
mov
faddl
xchg
ret
ds
loop
cmp
es
cmp
push
mov
call
sbb
roll
sub
pop
sub
ds
mov
pop
pop
jno
test
cwtl
mov
fs
push
jne
pop
dec
and
pop
popf
xchg
addr16
pop
pop
xor
inc
push
sarb
xor
clc
jbe
jae
add
cs
dec
cmp
dec
aaa
decl
movsb
sbb
int
pop
xchg
and
cli
pop
pop
lods
pop
lcall
outsb
lret
lds
mov
jg
pop
or
jno
or
faddp
push
or
inc
dec
dec
dec
push
mov
add
jno
insb
mov
fdivrs
cmp
inc
cmp
cmp
adc
outsl
sbb
pop
push
dec
add
dec
dec
xorb
rclb
dec
mov
push
jae
hlt
pusha
push
dec
mov
xchg
inc
and
mov
adc
jne
cld
or
fs
popa
pop
inc
lea
sub
cltd
push
jmp
sub
inc
js
and
dec
sbb
inc
add
cld
xchg
pushf
cmpsb
add
dec
add
jl
xorl
push
ss
jb
lahf
loopne
mov
fidivs
sub
push
pop
into
mov
pushf
arpl
mov
rolb
das
rcrl
jmp
pop
xchg
in
dec
jno
and
and
sub
xchg
mov
mov
aas
or
jp
mov
xsha1
cmpsb
push
jmp
outsl
stc
jle
dec
cmp
push
nop
and
mov
sbb
lock
sub
jb
out
pop
out
push
xchg
add
in
xlat
das
sub
mov
test
jge,pn
pop
iret
lahf
in
add
and
psubsw
push
jns
jo
push
sbb
inc
add
ljmp
jl
sbb
mov
pop
push
aas
dec
mov
mov
sub
cmpsl
std
jns
stc
jo
ss
outsb
cmp
insb
call
out
xor
daa
aad
mov
dec
movsb
cmpsb
cwtl
test
pop
dec
push
inc
cmp
jno
cs
sbb
out
xchg
fs
add
or
in
push
cmp
orl
push
jg
scas
add
cmpsb
insl
or
lods
and
int3
ficomps
adc
cli
pop
and
dec
pop
jle
jne
add
aad
mov
adc
add
and
xor
push
add
xchg
push
dec
test
mov
xchg
std
aaa
in
jns
pop
ja
es
adc
jge
sub
cmpsb
cmp
pop
jbe
cmp
hlt
or
cmp
add
jge
push
ljmp
mov
xchg
cmpsb
adc
push
xchg
outsb
pop
lods
cltd
jmp
add
inc
dec
or
add
stc
and
lret
push
and
mov
push
clc
add
daa
loop
mov
mov
xlat
mov
mov
in
fnstsw
sbb
push
pop
xor
inc
pop
shl
bound
xchg
or
lods
push
xor
add
jno
inc
add
push
jl
adc
sub
addl
mov
jecxz
xchg
xchg
cmp
xchg
je
and
jno
add
jmp
sbb
fldcw
int3
mov
mov
add
cmpl
std
cld
test
les
ror
sarb
xlat
clc
fbstp
notl
hlt
jmp
loop
sti
in
jno
or
icebp
aad
in
nop
sahf
lock
sahf
in
hlt
sbb
xchg
in
or
loope
sarb
add
pop
and
sbb
sbb
adc
push
adc
jmp
pop
test
jae
add
dec
cmp
movsl
dec
cmp
add
sub
pop
xlat
xor
sub
aaa
push
cmp
push
pop
cmp
inc
das
pop
add
pop
pop
dec
es
dec
add
push
dec
push
cmp
sbb
add
popa
add
jp
push
imul
adc
mov
lcall
mov
movsl
lret
test
pop
stos
lods
shll
add
aam
mov
mov
insb
fadd
lds
sbb
mov
and
aaa
mov
leave
add
shl
loopne
call
in
xor
rcrb
mov
outsl
sbb
jb
adc
or
adc
jbe
add
add
push
sub
cmp
dec
push
cmp
test
sbb
lods
sub
or
das
and
subb
and
in
add
mov
pop
add
xor
icebp
sub
pop
push
adc
mov
insb
aas
or
push
inc
out
xlat
rclb
mov
cmp
mov
shll
add
adc
loope
pushf
push
add
cltd
jmp
add
imul
sbb
ja
add
cmp
and
cs
adc
add
and
push
add
add
pop
jle
sbb
insl
and
test
sub
arpl
mov
cvtpi2ps
lods
sbb
movsb
push
test
or
xor
pop
cwtl
jg
pop
pushf
and
cmp
fwait
repnz
sti
add
push
loopne
sub
int3
inc
call
or
js
and
ja
leave
sub
mov
add
pop
sbb
aaa
push
and
insb
inc
lods
sbb
pop
xchg
aad
movsb
in
rolb
add
loopne
scas
jnp
stos
dec
pop
jp
xchg
gs
lods
inc
notl
sahf
sbb
mov
int3
incl
adc
call
in
in
push
adc
and
mov
bound
js
ficomps
fs
fs
insb
add
push
or
std
out
push
insb
outsb
xor
add
xor
xchg
inc
push
inc
sub
pop
or
add
ret
faddp
pushf
out
add
sub
fdivrl
xor
mov
lds
dec
mov
and
arpl
sbb
outsb
ljmp
fidivrl
xchg
cmpsl
in
mulb
push
xchg
sbb
outsb
nop
sbb
adc
mov
adc
psllq
cmp
out
sbb
inc
mov
loope
pop
data16
push
or
fstps
jge
mov
rol
jl
test
insb
out
outsb
add
rcr
sbb
test
mov
add
int3
add
clc
mov
dec
idivl
mov
sub
movsb
cltd
gs
scas
xchg
sub
lods
xchg
insb
popa
mov
fistps
in
bound
lcall
xor
push
or
jbe
call
ds
adc
je
and
sbb
imul
cmpsl
inc
shrb
pop
iret
or
inc
add
clc
in
insb
push
dec
aas
fcomps
adc
xchg
out
out
in
nop
or
stos
bound
ret
jb
add
push
fsubrs
push
jg
adc
int3
push
ja
sbb
ljmp
or
jmp
push
aaa
cmpsl
lcall
jp
iret
or
xchg
outsl
pop
pop
pop
test
add
jns
test
sbb
xor
mov
or
xor
call
in
outsb
leave
int3
add
cld
insb
xchg
ljmp
loope
aam
xchg
push
sub
insl
insl
cmp
imulb
push
daa
xchg
arpl
add
mov
mov
dec
loopne
push
mov
or
aaa
push
push
mov
and
mov
stc
insb
jle
xchg
arpl
add
dec
mov
add
xchg
jg
pop
mov
add
ss
ja
add
push
nop
lcall
ds
pushf
imul
xor
cwtl
punpcklbw
arpl
test
ror
ficomps
decb
insb
in
pusha
or
in
sbb
jno
add
adcb
gs
sbb
loope
sbbb
sbb
push
add
adc
bound
or
adc
jb
dec
and
arpl
hlt
cld
popf
or
pop
push
repnz
lock
insb
shrl
push
adc
fcompl
mov
out
insb
jns
push
dec
lcall
sub
xchg
enter
xorb
nop
addr16
sbb
pop
cmp
loop
insl
cmp
sbb
test
loop
pop
jb
sbb
ret
and
and
xor
push
sti
add
movsb
sub
push
outsl
xor
and
je
outsl
cmp
pop
test
clc
iret
bound
pop
push
scas
loopne
add
cmp
mov
xchg
pop
cmp
aam
stc
shl
rcrb
insb
push
out
lcall
pusha
in
mov
push
inc
xor
repnz
faddl
add
js
loope
fldenv
sahf
insl
add
cmp
mov
jmp
inc
daa
mov
loope
push
mov
adc
es
pop
ret
roll
push
sbb
add
sbb
testb
movsb
shrb
filds
mov
repz
jge
std
nop
subl
fs
mov
js
inc
lds
mov
inc
shll
push
adc
push
pop
cmp
daa
push
lcall
fcmovu
inc
ficoms
jb
and
aaa
ror
popa
insb
jo
pop
mov
push
push
and
cmpsl
insl
movsl
outsl
adc
push
insb
xor
push
pop
mov
pop
cmp
xchg
push
pusha
add
xchg
mov
pop
jecxz
add
xchg
loopne
call
andb
xchg
inc
add
xor
adc
pop
test
xor
adcb
cmp
movsl
or
xchg
pushl
jo
popa
add
out
insb
lret
dec
imul
aad
sbb
jmp
jns
pop
push
ds
push
inc
mov
mov
movsl
adc
mov
add
push
enter
add
pandn
or
mov
mov
or
aad
fs
xor
das
add
outsb
pop
jp
mov
inc
imul
mov
mov
imul
icebp
xor
adc
mov
inc
cmp
inc
add
lea
push
lods
pop
mov
push
or
cmpsb
test
pop
scas
mov
sti
les
adc
cmp
inc
ss
loopne
mov
sub
mov
push
push
ficoms
xchg
les
fcom
ja
gs
add
xorb
lock
into
insb
push
sbb
cmc
pop
push
test
bound
lea
aad
xchg
xor
xchg
add
xchg
lock
cmovbe
fsubl
nop
add
adc
adc
xor
dec
or
out
nop
sub
stc
fldenv
jns
test
add
hlt
cmpsl
xlat
add
loopne
mov
push
movb
add
in
mov
adc
jecxz
pop
shll
insb
xchg
mov
pop
loopne
mov
inc
pop
clc
cmc
pop
push
iret
xlat
xchg
cmpsl
cli
pop
pop
mov
push
cmp
jp
jle
test
add
xchg
xor
ret
mov
xlat
lret
mov
jo
sbb
loopne
dec
inc
mov
push
jb
imul
pop
aaa
mov
xor
insb
call
clc
mov
mov
add
mov
mov
sahf
xchg
imul
jae
inc
sbb
mov
push
add
or
call
rorb
mov
in
add
movsl
add
push
negl
add
lahf
pop
addr16
inc
lods
sysret
dec
ret
lret
daa
mov
mov
vandnps
and
aaa
lods
inc
dec
adc
fiaddl
pusha
push
imul
scas
push
sub
jg
aad
pop
dec
mov
pmulhw
mov
xchg
data16
jo
dec
push
das
mov
fadds
jb
push
add
or
pushf
subb
rorl
mov
mov
ljmp
andb
mov
mov
int3
imul
xchg
testl
mov
mov
testl
xor
dec
xor
jo
sbb
and
adc
mov
mov
es
inc
movl
dec
movsl
sbb
clc
sbb
mov
cli
sbb
daa
lret
lds
mov
xor
imul
inc
test
mov
pop
push
jge
mov
sti
sbb
adc
in
scas
icebp
ljmp
loopne
xor
jb
shll
addb
push
in
xchg
lods
std
cmp
lods
inc
add
adc
pop
test
cwtl
movsb
push
add
xorl
dec
sahf
push
add
ss
mov
xchg
add
pop
pop
cmp
imul
or
sbbl
bound
insb
adc
idiv
mov
add
xchg
shlb
push
add
cmp
inc
mov
mov
push
add
xchg
mov
in
cmpsb
and
sbb
add
arpl
adc
sbb
into
add
xor
mov
sbb
pop
aas
sbb
pop
push
add
jp
loop
rorl
add
and
mov
les
mov
push
cmp
inc
mov
rolb
scas
pushf
aas
loope
pushf
or
or
call
cmp
loope
mov
scas
add
vpsubusb
rclb
xor
and
pusha
pop
push
fldcw
pop
insl
test
rorb
or
jmp
nop
pop
and
fistpl
lods
xor
pushf
pop
shrb
pop
pop
fadd
lock
or
jge
testb
dec
mov
testb
and
out
jmp
lods
popa
jne
insb
xchg
stos
inc
data16
int3
out
mov
push
into
sub
mov
push
insb
inc
movsb
fisttpll
pop
xchg
sbb
push
popa
pop
shlb
movsb
insb
jne
inc
mov
mov
cmp
out
cmp
xor
shll
and
test
mov
and
cmovle
xor
mov
inc
pop
test
and
popf
std
repz
add
js
ja
mov
mov
jmp
insb
sub
incl
mov
add
inc
add
insb
adc
les
push
xchg
jnp
add
push
int
fcomps
mov
mov
add
sub
jns
cmp
fcomps
out
aas
or
insb
mov
inc
dec
loopne
les
stos
scas
add
and
fldt
dec
cmp
pop
mov
cmc
pushf
xchg
sbb
push
loop
xchg
in
dec
jecxz
rorb
inc
xchg
faddl
jmp
push
add
xchg
nop
jnp
aad
loope
mov
push
jbe
or
cmp
add
dec
dec
pop
push
repz
jecxz
ret
stos
lret
mov
std
pop
mov
xor
notl
push
aas
aaa
loopne
shlb
jb
push
dec
cmp
lock
cmp
mov
pop
dec
insb
pop
hlt
sub
js
jno
pop
sbb
int3
hlt
loope
cmp
mov
insl
or
hlt
inc
shr
add
jno
sbb
int3
popa
jg
out
push
pop
pop
push
cli
mov
or
mov
pop
fnsave
leave
ret
scas
and
sbb
pop
bound
std
subl
mov
add
mov
inc
iret
outsl
shll
aad
imul
jg
add
bound
push
push
popf
pop
shll
sbb
add
in
xor
sub
jo
loope
pop
xchg
nop
jecxz
pop
scas
adcb
adc
arpl
insb
mov
loopne
lahf
or
mov
sahf
insl
jl
add
rolb
pop
jecxz
push
mov
inc
fs
inc
fwait
dec
pop
mov
outsl
popf
and
inc
pop
push
int3
aas
dec
push
jge
sub
jo
add
push
and
inc
pop
lea
insb
fisttpl
push
popf
add
xchg
pop
and
pusha
pop
or
dec
pop
adc
or
push
stos
or
jno
xchg
hlt
add
push
and
pushf
cmp
mov
fwait
jmp
fiadds
sbb
addb
adc
add
insb
adc
mov
cmp
inc
mov
add
fsubl
aaa
add
mov
int
jnp
outsl
insb
aad
mov
stos
rcr
pop
mov
ret
xor
lahf
movsl
icebp
xor
inc
into
sbb
stos
add
push
test
push
orb
gs
arpl
lcall
jno
inc
pusha
add
xchg
sbb
stc
xchg
or
fisubrs
subb
ret
outsb
cltd
scas
mov
add
and
add
fstpl
ss
test
jo
es
lahf
stos
pusha
fildl
scas
mov
test
adc
dec
add
scas
or
add
imul
out
int3
add
clc
adc
jb
sub
sbb
das
sbb
xor
fdivp
or
pop
jo
xchg
mov
aad
test
or
sbb
xor
repz
out
pop
xchg
call
lret
in
mov
cmp
test
pop
addr16
and
mov
insb
cmp
or
adc
lret
cmpsb
or
mov
faddl
das
pushf
lods
stos
xor
lcall
es
lret
adc
insb
fcmovnu
addr16
in
push
out
pop
test
jo
or
xchg
xchg
clc
pop
scas
pop
dec
cmpsl
add
filds
cmc
cmp
xchg
lods
lcall
or
pop
insl
jno
insb
pop
lock
js
aaa
idivl
adc
add
test
movsl
dec
jns
pop
out
mov
sub
fisttpll
dec
inc
stc
mov
add
sub
hlt
movsb
cld
jne
insb
std
cltd
jne
xor
push
cmp
sub
les
repz
loope
and
jge
pop
pop
add
xchg
lock
sbb
add
cmp
cli
imul
jnp
adc
jb
mov
fiadds
xchg
repnz
pop
dec
sbb
dec
cmp
or
push
add
lret
mov
shlb
test
subb
insb
jae
imul
push
rclb
pop
lret
out
imul
jecxz
mov
insb
push
xchg
inc
xor
add
cmp
insl
mov
jle
mov
or
mov
in
push
and
add
inc
in
ljmp
pop
adc
sbb
fstps
xchg
xchg
repz
jb
or
add
push
inc
rolb
repnz
add
imull
pop
insb
popf
repz
push
xor
mov
add
sahf
xor
les
cmp
call
adc
or
movb
rcrl
inc
xor
push
insb
and
push
xor
jae
call
adc
inc
in
popf
xlat
adc
inc
add
adc
or
hlt
mov
in
stc
mov
xchg
xchg
std
pop
in
mov
mov
add
ss
pop
imul
add
adc
insl
sub
and
mov
add
sub
inc
and
add
pop
ret
add
and
adc
fcoms
insb
xlat
or
ss
mov
test
xchg
mov
jp
test
lret
lea
xchg
or
jmp
dec
add
sbb
cmp
out
jnp
popf
subl
sti
xchg
cltd
pop
imul
jo
cmp
fldenv
pop
sbb
insb
lock
mov
cwtl
shll
sbb
pop
mov
jno
jae
ss
pop
fbstp
cmp
ljmp
sub
inc
stos
mov
sub
cmp
and
cmp
fucom
lcall
insl
shr
jmp
dec
pop
pusha
add
and
je
lahf
add
pop
sub
and
dec
enter
push
shll
or
add
hlt
jmp
xor
cmc
adc
icebp
add
movsl
test
es
inc
aas
push
add
dec
clc
xchg
pop
test
pop
cmp
mov
add
sub
adc
cmpsl
add
sbb
xchg
cmp
notl
mov
add
mov
bound
xor
call
add
add
pusha
jo
sbb
outsl
loop
ljmp
xchg
in
lea
push
xor
outsl
mov
out
sbb
insl
add
xchg
adc
bound
out
sbb
mov
mov
test
cmp
xor
xor
loop
mov
sahf
ror
adc
and
out
xorb
rcr
or
or
push
or
push
femms
adc
jle
addr16
or
lret
out
out
and
adc
out
pop
jo
mov
mov
or
enter
loop
mov
sub
xchg
add
mov
pop
inc
out
push
pop
int3
sbb
aad
mov
lods
arpl
daa
pop
mov
icebp
pusha
das
jnp
push
or
cwtl
movsl
push
pop
xchg
popf
in
pop
push
in
daa
add
cld
addr16
jb
push
inc
pusha
aaa
pop
push
pop
add
cmc
dec
data16
jmp
xchg
and
mov
and
add
lahf
add
push
loope
fidivrs
test
notb
inc
icebp
or
fwait
xor
mov
dec
push
xchg
hlt
pop
aaa
mov
scas
xor
stos
out
pop
pop
popf
inc
sub
testl
setnp
es
sub
add
add
pop
aad
xlat
xor
pop
pop
pop
dec
fs
mov
lods
jp
cli
imul
adc
insl
out
test
sbb
ret
add
add
test
pop
icebp
cwtl
insb
inc
inc
add
push
imul
negb
adc
notb
leave
paddsb
jl
stos
adc
add
cwtl
xlat
leave
mov
xchg
cmp
call
add
and
ds
or
lds
ss
pop
inc
insb
add
into
bound
out
negl
lcall
xor
popa
mov
add
cmp
and
lcall
mov
mov
sub
push
insb
add
test
fldenv
daa
aaa
es
pop
insl
std
sub
ds
pop
xchg
jo
sub
push
insb
sbb
insb
push
rorl
das
mov
int3
pop
rolb
xor
in
cmpl
adc
rorl
pop
pusha
ja
out
call
enter
add
push
repnz
mov
push
insb
pusha
in
std
sub
or
in
notl
xor
add
shrb
outsl
cmp
in
movsl
push
shlb
add
into
fisubl
jo
sub
and
daa
call
arpl
fmuls
cmpsb
xchg
je
mov
mov
jo
pop
mov
lret
arpl
add
outsl
xor
in
inc
call
sti
divl
lahf
lret
pop
test
jle
cmc
add
jp
pop
out
push
or
add
jb
movsb
jmp
inc
mov
add
lret
daa
mov
loopne
adcb
mov
in
daa
aas
add
insb
dec
mov
call
test
mov
loope
inc
ficomps
fdivr
sbb
pop
or
jb
mov
lret
pop
in
imul
pop
rcr
loope
adc
in
xchg
lods
pop
fidivrs
insl
daa
aam
jge
add
in
xchg
ret
jno
add
xor
pop
adc
sbb
xlat
xchg
incb
je
push
mov
mov
jg
mov
sbbb
les
cmpsb
add
dec
enter
mov
flds
add
mov
add
push
dec
inc
es
dec
add
dec
xchg
add
in
and
xchg
inc
cmpsl
pop
insb
xorl
adc
insl
cmpb
mov
xchg
sub
notl
cmpsl
cld
fwait
adc
pusha
scas
add
jge
dec
cmpl
addr16
push
fwait
mov
ret
popf
add
das
jg
into
mov
cmp
inc
sub
add
add
xor
cli
mov
loop
outsb
pop
cmp
jbe
push
shrl
add
inc
mov
gs
movl
jle
sti
jle
or
mov
ljmp
xchg
mov
flds
in
push
add
out
pop
outsb
pop
sub
mov
pop
es
mov
dec
scas
out
push
iret
mov
sarl
add
adc
jb
or
add
and
insl
dec
insl
push
jl
rep
fsubrl
xor
dec
movsb
leave
aas
ja
mov
sbbb
clc
out
decb
mov
and
pop
arpl
shr
cs
arpl
add
mov
test
ret
popf
pop
rcrl
xchg
xchg
popf
into
cltd
div
pop
xchg
add
pop
jl
scas
jo
pop
cmpsb
cmpsl
mov
dec
add
scas
xor
mov
mov
bound
jne
push
cmp
adc
pop
popf
inc
pop
ret
push
dec
inc
mov
mov
xlat
pop
insb
std
push
dec
jmp
add
pop
fstpt
roll
loopne
dec
gs
jno
insl
add
xchg
or
push
pop
mov
insl
div
sahf
xor
aas
adc
ds
pop
or
call
sbb
in
or
sub
mov
jnp
xor
stos
pop
adc
cmpsb
std
dec
pop
pop
aas
subl
addb
cmp
sar
mov
add
add
bound
jne
cmp
aam
sub
sbb
xchg
shrb
les
add
imull
popf
ficoml
xchg
pushf
inc
or
mov
pop
xchg
shl
popl
pop
jns
add
jp
xchg
je
pusha
xor
es
filds
pop
xchg
cmp
jecxz
pop
add
push
jecxz
loop
mov
test
aas
ror
dec
xchg
push
and
or
pop
stos
dec
das
enter
mov
addb
add
add
sbb
push
jno
lods
shrb
in
ljmp
test
push
or
pop
in
adc
push
int3
sub
adc
lea
add
movl
xor
scas
in
pop
and
lds
lahf
std
fildll
and
andl
pop
mov
fimull
rcrb
data16
push
sbb
pop
pusha
jge
setp
incl
in
ret
pop
xor
outsb
push
ss
ljmp
loop,pn
jbe
or
das
out
add
sbb
or
jg
cmp
rorl
out
push
mov
mov
sub
int
jl
adc
rclb
out
aam
mov
jge
jno
adc
mov
lcall
iret
pop
int3
pop
dec
test
es
cvttps2pi
pop
bound
inc
cwtl
push
in
lock
add
adc
in
xchg
in
pusha
and
add
lods
jns
or
sbbb
rcrb
out
jp
orb
and
sbb
jae
inc
or
add
xor
sbb
outsb
cmp
cmpsb
mov
mov
xor
dec
out
loopne
fucom
shrl
inc
pop
inc
test
int
in
pop
into
pop
adc
cli
nop
push
int3
xchg
add
rclb
xlat
sbb
add
dec
loopne
push
add
int3
negb
xchg
push
jno
rcll
popf
mov
cwtl
add
in
adc
lahf
jg
push
push
xlat
xchg
sahf
add
insb
nop
movsb
or
lods
clc
sbb
out
insl
add
js
pop
icebp
push
clc
cmp
push
dec
dec
sub
dec
into
add
mov
jno
mov
xor
and
movsb
aad
mov
repnz
imul
inc
cs
pushf
pop
adc
outsb
repz
sbb
jno
fisubrs
sub
insb
scas
and
pop
sti
nop
sbb
mov
insl
insb
xchg
shl
pushf
lock
mov
adc
or
fwait
push
insb
lds
or
xchg
xor
das
out
mov
int
cvtps2pd
mov
cmpb
add
das
int
xchg
pusha
add
pop
or
nop
pop
mov
bound
add
mov
imul
or
dec
dec
xchg
daa
jg
loop
mov
push
xchg
pop
mov
lret
cld
lods
sbb
jg
insb
clc
dec
or
sbb
inc
negb
loopne
insb
adc
hlt
add
push
stc
and
lcall
daa
add
aas
jl
call
insb
pop
les
daa
push
pop
mov
pop
daa
in
pop
pop
xor
adc
jmp
and
outsl
xchg
aad
push
out
aam
cmp
and
sbb
and
pop
add
mov
call
data16
jg
xor
add
bound
add
xchg
out
add
sub
or
add
mov
adc
lea
inc
inc
sbb
imul
mov
xchg
sub
fisubrl
and
out
fldcw
in
imulb
mov
xchg
sbb
add
cmpsl
mov
adc
add
dec
jecxz
cli
pop
add
inc
nop
mov
popa
negb
lahf
add
mov
and
repnz
jg
adc
xchg
in
or
xor
add
push
mov
xchg
mov
add
bound
xchg
sub
sub
test
insb
mov
inc
std
mov
sbbb
test
call
rolb
xor
pop
dec
cs
mov
pusha
shrb
mov
jb
push
sbb
adc
xchg
adc
ds
cld
hlt
in
insl
js
dec
pop
lcall
pop
cmp
call
jl
add
push
cli
add
add
xlat
inc
cmp
cmpsb
out
sbb
insl
lret
addl
out
lret
cmpsb
jmp
mov
andb
mov
xor
add
sub
imul
leave
js
cmp
mov
add
push
in
dec
addb
cmpsb
sbb
jp
adc
mov
repz
mov
insb
mov
jnp
jl
addb
pop
mov
add
push
call
rolb
ret
out
imull
icebp
mov
mov
into
dec
or
inc
lods
repz
pop
adc
lahf
cmp
outsb
daa
test
arpl
pop
fildll
inc
fcoml
jo
and
mov
lock
or
add
imul
imul
or
jae
test
insb
mov
sbb
out
add
dec
push
push
push
add
cmp
xchg
fnsave
sub
in
sbb
cmc
jns
add
push
inc
pop
scas
shll
and
arpl
or
and
enter
mov
addr16
roll
or
inc
sbb
jg
dec
and
fnsave
push
stc
pop
add
pop
inc
orb
mov
hlt
stos
add
ljmp
jne
repnz
decl
leave
cpuid
jns
imul
adc
insl
nop
insb
push
sub
rcll
loopne
mov
push
inc
push
movsl
in
test
mov
inc
lret
fidivrs
insl
push
insb
add
xchg
mov
shrb
inc
push
ljmp
test
subb
jle
ja
outsl
movsb
mov
mov
out
jecxz
mov
outsl
jnp
test
insb
pop
jge
xchg
test
icebp
xlat
sarb
out
vpcomuw
pushf
mov
cld
cmp
mov
sti
push
sahf
xchg
xchg
jne
pusha
insb
call
aad
mov
test
lock
add
jl
xchg
insl
pusha
inc
inc
or
fwait
mov
stos
jo
movsl
xchg
loopne
xor
dec
stc
insb
pop
fidivs
sbb
lret
add
ja
ljmp
inc
and
and
lods
add
punpckhdq
fcoml
or
pop
add
jno
outsl
insb
hlt
sub
popf
insb
mov
xchg
rorb
fnsave
inc
pop
fmull
and
inc
es
mov
repnz
add
roll
leave
sub
push
add
stos
cmp
add
shrl
loopne
rcrl
pop
mov
fwait
popa
adc
fisttps
in
fisubrl
mov
cmpsb
push
hlt
xor
and
icebp
hlt
pop
xchg
call
out
sub
or
cli
or
pop
ret
xchg
insb
clc
jo
idivl
jb
insb
push
mov
add
jmp
stos
push
add
jo
pop
add
mov
mov
lea
insb
je
lret
in
popa
and
loope
dec
loopne
lds
adc
cwtl
pop
roll
inc
hlt
in
mov
pop
in
jp
add
adcb
add
imul
sbb
psadbw
mov
and
lcall
sbb
sbb
loop
insb
mov
imul
mov
insb
iret
mov
pop
push
cmpsb
add
inc
pop
add
pop
mov
add
jge
insb
out
push
or
dec
loop
pop
add
aaa
sub
dec
cmp
adc
inc
int3
subb
aam
out
and
add
push
push
punpcklbw
or
loop
lret
adcl
add
add
shl
dec
outsb
pop
add
shlb
xchg
pop
and
ja
adc
adc
xor
or
fidivl
sub
insl
push
mov
rol
testb
mov
in
aad
call
or
mov
push
push
inc
pop
popf
xor
hlt
dec
add
inc
add
sub
push
mov
push
addr16
incl
hlt
xor
pop
mov
in
add
orb
inc
filds
cmpb
add
incl
stos
mov
pushf
xchg
mov
test
cmp
shrb
into
xor
loope
push
sub
sbb
mov
cmpsl
dec
into
sbb
fadds
gs
push
incb
dec
pushf
dec
bound
sbb
mov
gs
gs
inc
add
lcall
subb
cmp
or
mov
mov
clc
adc
sbb
jnp
mul
ljmp
push
jb
inc
adc
int3
lcall
cmc
stos
outsl
aam
jno
add
lahf
push
lods
or
pop
cmp
sbb
and
push
jl
inc
scas
xchg
xchg
imul
dec
lahf
cwtl
lods
scas
dec
dec
shl
xchg
cmpsl
fcom
xor
inc
das
pop
pop
push
xor
sbb
jmp
lods
pop
adc
mov
jecxz
jge
adc
jp
xchg
mov
inc
xchg
mov
mov
cmp
jl
jb
mov
mov
pop
fistpl
dec
xor
shrb
cmp
push
orb
test
push
pop
add
arpl
js
push
mov
int
mov
sbb
add
int
adc
add
jns
mov
lcall
pop
adc
shrb
push
stos
add
out
dec
add
pop
and
jle
mov
lods
pop
ss
sbb
lock
test
loopne
sub
add
ret
and
insb
ficompl
jae
pcmpeqd
fistpl
div
mov
orl
insb
fsubr
or
add
icebp
int
xchg
inc
push
test
cltd
rorl
pop
inc
insb
dec
sbb
add
bound
es
xlat
pop
add
movsl
xor
mov
add
lahf
js
insb
mov
add
sbb
mov
sbb
mov
cltd
jg
mov
dec
or
mov
scas
lret
in
push
cmp
cmp
lods
pop
mov
ds
les
loope
mov
xlat
push
xor
jmp
or
and
jbe
push
scas
push
push
lds
loop
insb
js
fmull
and
inc
insl
push
insb
sbb
outsb
jl
xor
inc
mov
insb
mov
add
jmp
clc
or
stc
and
push
or
or
in
sbb
pop
pop
mov
cmc
adc
scas
inc
addb
sti
push
fsubrl
fsubs
mov
adc
adc
pop
and
add
xchg
nop
and
sub
mov
shl
xchg
clc
cwtl
movsl
and
dec
fadds
jo
sbb
sub
cmp
mov
popf
cwtl
insb
adc
pop
mov
push
add
je
xchg
xchg
mov
push
xchg
xchg
cmp
add
pop
dec
repnz
nop
adc
and
fsubl
insb
xchg
mov
inc
ja
fiadds
jle
push
or
mov
ret
cs
out
scas
mov
aad
lea
xlat
and
outsl
fwait
rol
pop
mov
push
xlat
cmpsl
dec
dec
push
or
pop
jecxz
push
xor
push
rcll
fcmovnu
mov
sbb
popl
push
ds
cmp
pop
push
test
sbb
mov
insb
mov
push
cmp
hlt
add
orb
push
icebp
cmp
insb
mov
shlb
jb
insb
decb
outsb
jmp
test
filds
xor
aas
sbb
jl
mov
clc
insb
pop
sbb
es
leave
insb
out
mov
mov
sbb
addb
lds
dec
pop
and
int
fstpl
add
lds
out
add
fildl
cwtl
insb
pop
push
cs
dec
mov
pop
insb
test
mov
xchg
pushf
call
insb
dec
je
pop
xor
nop
arpl
adc
outsb
shrb
pop
cwtl
pop
sub
xchg
dec
add
icebp
aas
lret
adc
mov
cmpb
call
sub
push
lock
pop
add
mov
roll
ja
dec
cmp
pop
sub
fnstenv
adc
lock
or
sahf
push
arpl
and
mov
cmp
insb
pop
and
xchg
out
mov
xor
sti
int3
sbb
push
xorl
pop
adc
sub
pop
add
jle
outsl
add
sub
cmp
cld
mov
mov
in
mov
jnp
dec
stos
mov
insb
cmp
mov
or
in
sub
pop
das
insb
or
dec
ja
data16
xchg
std
shrb
insb
orb
addr16
aas
xchg
or
xor
cli
insb
mov
mov
inc
adcl
xor
or
add
push
sarb
in
out
jns
adc
mov
add
dec
inc
mov
mov
test
sbb
das
das
cs
xor
add
xlat
enter
cltd
insb
rcll
data16
jecxz
add
mov
test
pop
add
ret
mov
testl
push
pushf
cmp
add
repz
lret
mov
pop
cs
icebp
push
sbb
xchg
pop
lahf
xchg
testl
or
cmp
or
add
xchg
mov
mov
mov
push
dec
ret
stc
jno
push
or
mov
pop
pop
xchg
mov
add
inc
mov
rsqrtps
inc
add
insb
fisubrs
sub
xchg
mov
aam
sti
sub
pop
add
sub
add
xchg
mov
push
mov
mov
jp
hlt
add
aam
repnz
lock
pop
push
stc
aas
cmpsl
mov
shrl
std
dec
hlt
pop
pop
push
cltd
inc
mov
mov
pop
loopne
insb
pop
dec
das
push
rcl
movsl
push
sbb
jo
push
popa
lock
dec
fwait
add
gs
add
test
lret
std
in
add
loope
jb
decb
or
cli
xchg
and
cmp
pop
xchg
and
out
dec
pop
or
dec
scas
pop
test
xchg
iret
popa
add
sub
int
pop
mov
mov
push
mov
mov
shrb
in
mov
add
add
out
je
insb
push
inc
inc
cmp
add
scas
aad
scas
in
pop
push
add
xor
mov
adc
cmp
jmp
jp
add
push
cs
imul
fwait
out
aas
divl
orb
jle
fistpll
or
in
pop
loopne
popa
sahf
add
insb
mov
sub
in
or
movsb
add
in
lahf
add
lods
cwtl
add
insb
cs
hlt
pop
pop
add
push
dec
mov
insb
mov
add
sub
loopne
insb
jle
mov
push
jle
aam
mov
movsb
fadds
insb
aam
inc
jno
sbb
adc
mov
xchg
xor
xor
pop
js
lret
add
ds
subl
adc
ret
nop
sti
mov
outsb
cltd
mov
scas
add
insb
add
and
pop
lcall
xor
aas
aad
add
or
push
scas
roll
shrb
decb
sbb
xchg
outsl
fldenv
int
cmp
insb
sbb
imul
daa
mov
mov
cld
repnz
add
inc
jns
add
dec
pusha
xchg
add
sub
out
subb
loopne
fs
in
pop
mov
jmp
or
pop
scas
add
push
cmp
addb
and
dec
add
cld
movsb
scas
shlb
jb
pop
and
inc
in
pop
mov
push
jle
cmp
dec
mov
inc
and
inc
xchg
sub
fstl
mov
cld
mov
dec
gs
add
flds
repnz
xchg
sbb
sti
cmpl
data16
adc
jg
icebp
jle
sbb
incl
pop
dec
xchg
inc
js
daa
jb
clc
xchg
jmp
divl
aas
lock
stos
fisubs
jae
das
sub
fs
cmp
inc
mov
push
andb
inc
movsb
int3
cmp
push
js
mov
rolb
aam
cmp
fiaddl
cli
jae
or
mov
sbbb
lahf
in
movsl
scas
xorb
dec
cwtl
insb
pop
add
movsb
test
sbb
rclb
sbb
jne
mov
xchg
pop
pop
cmp
nop
shrb
arpl
add
add
int3
loope
jbe
add
popl
cwtl
cld
xchg
add
pop
addr16
add
fldenv
add
jb
or
sarb
jbe
in
loope
pop
cmp
in
sahf
aaa
xchg
rcl
in
fnstcw
dec
pop
and
mov
pop
xchg
pushf
scas
pop
mov
xor
sbb
and
cmp
add
aad
inc
ss
and
insb
dec
rol
push
mov
inc
cmp
dec
out
fisubl
out
push
xor
stos
inc
inc
insb
sbb
add
sbb
sahf
pop
arpl
cld
js
fs
push
cmp
scas
inc
jns
pop
add
in
jge
pop
mov
add
rcrb
push
xchg
add
jno
test
pushl
bswap
push
popa
pushf
pop
mov
cmp
jo
movmskps
icebp
pop
mov
in
pop
inc
inc
sarl
xor
or
and
add
repnz
mov
sbb
icebp
ja
jbe
insl
iret
pop
xor
enter
pop
nop
insb
push
out
cmpsl
mov
lret
add
ss
or
insb
aam
into
lcall
pop
ljmp
mov
test
xor
sbb
sbb
mov
pop
insb
scas
lret
leave
and
add
pop
pop
add
xor
cmp
add
xor
xchg
inc
lea
lock
adc
pop
push
gs
imul
xor
add
ficoml
rol
sbb
and
icebp
ja
adc
clc
mov
inc
std
pop
adc
pop
jmp
jns
adc
insb
sbb
mov
mov
push
xchg
insb
add
xchg
pusha
adc
out
mov
imul
enter
insb
das
jbe
insb
sahf
mov
push
dec
mov
sarl
xchg
mov
ret
enter
cli
push
inc
sub
out
pop
in
pop
push
dec
inc
fisubl
sbb
add
decl
fs
pop
adc
pop
jecxz
cld
xchg
outsb
dec
daa
mov
add
push
mov
xchg
sbb
imul
jbe
add
lods
pop
aaa
fsubrl
mov
test
adc
repz
and
repnz
pop
ret
add
sbb
jl
lahf
aad
pop
sub
and
or
inc
and
cmpl
int
stos
mov
fcomip
lock
xlat
sbb
push
fs
imul
adc
icebp
std
testl
cli
push
cltd
out
mov
cltd
in
lahf
mov
pop
cli
add
or
in
popf
sti
in
bound
stos
test
jp
or
hlt
test
or
popa
add
inc
add
add
fsubl
add
aas
iret
adc
sub
int3
aad
push
dec
mov
decl
rclb
test
push
xor
ficoms
cmpl
insb
shlb
jnp
sarb
push
fcomps
ljmp
xor
inc
dec
sub
aas
add
xchg
out
outsb
pop
sbb
xchg
pop
or
add
add
test
jg
loop
outsl
icebp
and
ds
pop
gs
add
sub
xchg
rcrl
loopne
test
fcompl
push
and
mov
repnz
xchg
hlt
pop
push
bound
dec
mov
xchg
mov
insb
jnp
sbb
movb
add
mov
add
sbb
imul
pushf
jle
mov
lret
dec
stos
push
add
cs
cli
out
repz
test
in
nop
mov
cmp
mov
mov
inc
rcll
pop
pushf
pop
cli
in
jo
jns
sub
push
push
xchg
fildl
insb
pop
sbb
aad
lea
xorb
add
jmp
adc
adc
jmp
push
sbb
lods
add
les
xchg
inc
pop
add
pushf
fistps
add
test
sbb
or
mov
push
scas
and
pop
out
scas
dec
aas
fadds
xchg
mov
xor
fwait
mov
outsb
push
pop
xor
daa
sbb
rorb
lahf
add
iret
adc
rolb
mov
cld
and
inc
addl
push
decb
jae
popf
or
subb
clc
pop
jne
loopne
dec
add
sahf
add
mov
nop
ret
add
or
shrb
xchg
push
scas
and
add
dec
xchg
xor
jo
cmpb
pop
sbb
push
sbb
sub
in
mov
xor
das
sbb
add
into
ljmp
xor
xchg
lret
lods
sub
outsb
loop
int
jns
test
bound
repnz
add
push
call
xchg
cmp
dec
pusha
aas
inc
add
add
xchg
push
dec
adc
stc
cmpsb
and
jg
or
leave
cs
jnp
add
push
sub
neg
lods
xor
xor
in
xor
in
mov
push
inc
xor
pop
mov
js
push
insb
sarl
add
fldcw
lahf
jbe
shll
js
add
jg
insb
pop
call
insl
add
cltd
jp
inc
mov
jg
fimull
pop
or
insb
sbb
add
out
pop
push
add
popa
add
into
int3
sahf
mov
pop
lcall
mov
lds
loopne
lods
es
insb
popf
repz
sti
mov
call
sub
out
push
insb
and
cmp
pop
lods
dec
adc
xor
inc
lahf
or
xor
inc
cmp
mov
jb
jnp
movsb
sti
mov
add
pushf
lds
enter
add
ret
mov
push
daa
and
popa
add
mov
hlt
lahf
in
nop
xchg
cmp
or
push
js
xor
daa
fnsave
adc
cmp
mov
scas
jle
pop
mov
leave
sub
jl
push
adc
insb
mov
add
mov
xchg
hlt
jp
mov
mov
rcrb
push
aas
or
pop
jno
bound
push
add
outsl
adc
arpl
out
insb
pop
jae
dec
add
testl
sub
add
cs
pop
orb
dec
pushf
inc
xor
inc
ja
jnp,pn
pop
cltd
fcomi
mov
fldl
repnz
inc
idivl
xchg
jne
adc
das
mov
cmp
dec
fcompl
cmp
push
or
pop
loopne
rcl
enter
add
dec
push
mov
cmpl
dec
xor
sub
xor
lret
cmp
les
in
mov
in
inc
outsb
xor
sub
cmp
pop
lds
sbb
sti
stc
xchg
or
sub
addb
pop
cltd
cwtl
and
add
mov
and
xor
xor
jmp
sub
fistpl
nop
jno,pn
add
out
stc
stc
add
scas
iret
idiv
mov
mov
add
xchg
dec
dec
and
jnp
aam
mov
xlat
daa
shrl
add
sub
jl
loop
pop
mov
jle
and
hlt
and
dec
xchg
push
ds
dec
in
dec
ljmp
jg
or
mov
jnp
push
xchg
sbb
cli
cltd
loope
mov
and
pop
add
jl
mov
mov
jno
imul
inc
imul
fmuls
jne
sub
insb
out
mov
out
dec
and
jo
jle
jne
sbbb
sbb
sbb
sub
enter
jle
jl
stos
cmpb
rdpmc
cmp
test
push
pop
xchg
pop
jmp
fwait
mov
add
outsl
cmp
cs
ja
add
add
mov
push
sub
outsb
pcmpgtw
imul
mov
fld
mov
and
ret
sbb
cmc
add
int
push
push
cmp
cmp
xchg
fcoms
insb
rorl
popl
subb
stc
pop
add
lea
cmc
cwtl
mov
jge
inc
testl
xchg
or
add
les
jnp
jb
xchg
nop
push
inc
push
sbb
repz
ret
sbb
ja
push
cmovae
pop
push
fldl
jnp
pop
add
jmp
leave
sbb
push
dec
mov
mov
cltd
fmuls
xor
pop
or
imul
push
cmp
mov
add
imul
das
mov
jmp
sbb
add
mov
xor
add
bound
or
xor
push
fs
mov
das
int3
pop
jp
mov
xor
xor
pop
jmp
jo
aaa
shlb
inc
insl
das
addr16
ljmp
popl
pop
dec
xchg
sbb
shll
cmp
adc
push
jmp
or
add
sti
mov
decl
hlt
outsb
loopne
mov
in
adc
test
incl
aad
pop
ret
pop
mov
lahf
xchg
lock
add
testl
fmuls
jle
and
stos
pop
pop
mov
mov
dec
dec
dec
hlt
sub
mov
push
or
shrl
int
mov
add
lret
add
mov
pop
push
pop
sub
mov
xor
rorb
xchg
loope
enter
insb
jbe
es
std
in
in
mov
xor
insl
loopne
in
sbb
push
xchg
lds
sbb
pop
test
imul
add
stc
xor
add
sbb
pop
cltd
xchg
ds
add
aad
stos
loopne
mov
stos
mov
iret
jne
add
sub
adc
insb
cmpsl
divl
test
inc
mov
bound
inc
add
pop
rcr
pop
fildl
dec
je
mov
es
pop
add
test
push
test
cli
push
dec
daa
or
add
insl
adc
and
and
outsl
decb
insb
pop
clc
push
adc
adc
cltd
testl
jo
outsb
pop
lcall
daa
xor
mov
add
test
mov
mov
aam
inc
adc
xor
insb
scas
add
add
cmp
movb
sti
into
cs
pop
add
in
xchg
push
push
ljmp
call
jmp
inc
in
das
add
insb
pop
and
das
mov
mov
pop
dec
clc
bound
xor
aad
adc
hlt
pop
sbb
repnz
push
das
add
insb
xor
adc
int
lret
mov
push
adc
inc
adc
inc
pop
hlt
int
cmp
hlt
dec
mov
add
jnp
ja
mov
add
in
loopne
add
outsb
pop
das
cwtl
or
add
mov
pop
loop
pop
add
repz
sbb
pop
mov
lcall
bound
int
add
adc
cmpsl
inc
rcl
add
scas
xchg
adc
in
jne
cmp
mov
pop
lods
jmp
cmp
sbb
add
incb
repz
pop
cmp
outsb
nop
add
jl
sbbb
or
in
imul
inc
call
and
and
daa
push
lods
xchg
leave
cwtl
fcomi
push
xor
add
mov
xchg
insb
pop
xchg
hlt
push
push
add
outsl
jbe
or
and
sub
cmpsb
or
arpl
test
mov
adc
mov
test
jg
cmp
ret
and
fistpl
andl
repz
or
add
or
imul
jno
and
je
pop
xchg
pusha
stos
add
test
imul
xchg
sti
mov
lret
das
imul
testb
test
cwtl
dec
rcrb
insb
pop
pop
add
cmpsl
inc
fbld
dec
pop
inc
mov
shll
js
jno
cltd
ljmp
lds
mov
sub
push
inc
cmpsb
pop
sub
xor
push
pop
test
mov
inc
xor
add
jae
pop
mov
fidivl
mov
xchg
aas
test
jns
notl
mov
or
fstps
mov
scas
stos
push
insb
sbb
out
or
test
add
iret
int
cmp
lahf
push
insb
dec
scas
xchg
out
sbb
lret
cli
nop
mov
mov
add
jmp
push
add
ret
mov
push
and
rcr
push
lahf
sahf
or
xchg
jmp
add
outsl
icebp
dec
fldt
clc
insb
inc
mov
insb
dec
mov
push
push
push
mov
ljmp
aad
mov
adc
adc
add
or
inc
pop
pop
arpl
dec
into
jno
das
or
cmp
xor
cmpsl
add
push
sub
lock
or
shrl
aaa
stc
add
dec
cmp
rcr
add
jnp
les
out
iret
and
fidivl
cmp
loope
inc
cmp
lods
pop
jnp
outsb
enter
jb
jge
pop
fidivrs
pop
inc
or
icebp
movups
or
lods
adc
imul
add
fistps
insl
imul
push
sub
mov
aaa
jmp
add
xchg
pop
xchg
sbb
outsb
das
sahf
push
enter
test
jmp
xchg
dec
jae
add
mov
jl
mov
mov
mov
shlb
cmp
daa
mov
in
add
sub
outsl
push
add
add
popf
add
dec
loop
add
lods
hlt
add
fcomi
mov
jecxz
pop
aaa
mov
push
loop
sbb
adcb
imul
addb
push
and
imul
fcmovnbe
test
nop
add
loop
in
je
inc
pop
movlps
pop
add
insb
loopne
aad
cmc
incb
xchg
jecxz
out
add
or
jl
push
insb
fists
out
push
lcall
call
cmpsb
lret
sbb
jp
pop
adc
out
adc
je
sub
outsl
xchg
inc
js
outsb
pop
cwtl
jp
mov
add
lcall
dec
adc
push
mov
call
test
filds
insl
shll
imul
popl
mov
cmp
inc
insb
sbb
addr16
add
mov
sbb
ret
ja
and
mov
mov
ja
pop
subl
add
jl
fs
inc
subb
inc
insb
adc
call
add
shrl
xchg
add
mov
mov
jg
loopne
mov
in
xchg
shl
gs
dec
xchg
add
das
mov
add
cli
pop
mov
test
sub
sub
in
or
rolb
jge
jne
int3
sub
push
pop
pop
cs
add
add
xchg
adc
das
sub
push
mov
sahf
test
mov
push
pop
add
and
mov
cmpsl
mov
add
fstl
dec
push
xor
sbb
sub
jl
add
ret
push
cmpsb
clc
or
add
lcall
jle
test
test
fstp
incb
mov
pop
and
repz
add
mov
fisubrs
aaa
mov
inc
pop
sarl
incl
test
xchg
subl
sub
xor
loopne
mov
dec
xchg
shrb
sbb
std
sub
add
inc
xor
adc
inc
or
fists
push
and
bound
insb
les
jg
adc
push
fldenv
xorb
out
xchg
loop
mov
pop
idiv
pop
pop
movl
jmp
fists
icebp
dec
adc
add
adc
lret
pushf
and
push
fistpll
sbb
jae
inc
cmpsb
lahf
jnp
pop
ret
adc
mov
insb
shlb
mov
dec
mov
pusha
inc
sahf
add
xor
jns
cmp
es
push
dec
xlat
push
add
jbe
cmp
xchg
inc
movsb
add
dec
sub
inc
or
adc
inc
movsb
add
popa
mov
mov
sbb
sub
lcall
jle
enter
push
pushf
and
cmp
or
and
insb
cli
dec
pop
pop
add
daa
sub
movsl
lret
insb
inc
inc
rolb
sub
xor
jle
aas
add
push
iret
sti
add
adc
clc
sbb
push
popf
lods
pop
fstpl
sub
add
sbb
out
repnz
pushf
bound
sahf
add
insb
and
xchg
insl
jmp
lds
mov
sub
pop
ljmp
add
pop
and
inc
mov
addr16
push
in
pop
mov
add
in
lock
pop
mov
mov
adc
push
sbb
dec
imul
add
out
jle
mov
mov
add
push
mov
ret
insb
dec
lock
jecxz
pushf
dec
mov
add
xchg
add
pop
or
fildl
adc
scas
add
mov
sbb
cmp
and
fs
mov
fistpll
add
and
in
int
pop
fmuls
insb
jp
jmp
es
rolb
fcomi
xorb
and
dec
jp
and
add
inc
xchg
int
cld
xor
push
adc
cmp
xchg
fnstenv
in
imul
sbb
int3
pop
and
les
pop
data16
clc
or
in
sbb
mov
and
bound
movsb
pop
dec
pop
cld
cli
jl
testb
sub
cmp
sub
aas
cltd
add
ror
jle
out
test
and
inc
dec
and
mov
mov
mov
pop
xor
or
test
jo
pop
sub
jno
shlb
pop
clc
mov
lret
mov
in
add
cld
push
mov
jle
adc
movb
mov
mov
mov
mov
pusha
clc
add
push
cmp
call
and
sbb
xor
mov
aas
sub
loopne
test
xor
xor
aam
add
fisubrl
dec
adc
cmp
int3
mov
add
fs
lahf
add
inc
fiaddl
sub
push
loop
daa
jbe
pushf
incl
in
sub
sub
mov
push
loope
sub
jl
xchg
adc
in
sbb
mov
lcall
xor
add
das
xor
ds
add
xor
push
mov
test
push
add
cmp
sbb
xor
pop
ret
addb
mov
cmpl
nop
sub
mov
lock
lahf
stc
pop
out
pop
adc
xor
fs
pop
mov
sbb
add
inc
shrl
fbld
xor
fcoms
add
out
inc
dec
inc
insb
mov
or
fcompl
and
add
and
and
insb
push
dec
adc
es
inc
scas
push
xchg
inc
sarb
and
add
or
xor
cmp
pop
mov
pop
addr16
fldl
and
inc
in
rcll
add
lods
cmp
add
hlt
pop
fstpl
pop
xchg
aaa
xor
insb
cltd
popf
inc
insb
pop
mov
add
sarb
add
insb
push
aam
jo
lret
mov
les
adc
jo
inc
fcoml
dec
gs
int3
loopne
jmp
pushf
jnp
sbb
jbe
add
push
mov
xlat
mov
test
bound
sub
add
and
push
xchg
add
mov
jmp
je
popf
mov
xlat
push
sbb
pushf
pop
adc
sti
movups
push
add
mov
xchg
test
insb
ljmp
lods
pop
mov
lods
lea
push
pusha
pop
dec
adc
rep
push
mov
into
mov
sub
add
icebp
pushf
xlat
xchg
sbb
jbe
aas
idiv
or
push
dec
add
mov
sti
fnstsw
ltr
pop
pushf
lock
cmp
adc
inc
jp
add
xor
adc
and
addr16
pushf
leave
pop
loopne
sbb
stos
stos
clc
lret
add
add
cmp
data16
cmp
dec
scas
add
sti
shll
les
ss
push
pop
pop
sbb
sbb
or
push
dec
mov
incb
insb
jne
add
outsl
filds
insb
cmp
outsb
jb
pop
jbe
out
pop
add
fmull
jno
insb
adc
shlb
mov
xor
pop
scas
hlt
fldlg2
pop
iret
lods
add
mov
sub
mov
jg
jo
pop
sub
cmp
pop
or
pushf
cmp
insb
out
pop
mov
xchg
add
sub
imull
pop
rclb
mov
add
cmp
pop
jmp
jae
outsb
add
mov
mov
repnz
xor
cmp
les
or
push
int3
push
sub
jnp
mov
pop
adc
imul
mov
jne
add
fmul
mov
clc
hlt
pop
inc
mov
sbb
shll
cs
add
pop
mov
push
add
das
aam
mov
mov
fisttpl
notl
outsb
mov
loop
push
les
add
je
fsubs
push
in
inc
jne
add
mov
mov
add
rcrl
filds
mov
pop
inc
xchg
dec
sub
insb
push
xchg
insb
pop
mov
fisubrs
mov
shlb
leave
inc
insb
mov
fs
in
pop
arpl
loope
add
add
add
push
mov
dec
insl
dec
pop
add
gs
jno
inc
add
loopne
pusha
add
jae
sbb
mov
jnp
xchg
mov
jo
cltd
in
insb
dec
mov
dec
mov
xor
jnp
adc
dec
pop
adc
xchg
push
in
add
adc
lock
roll
fiaddl
shr
mov
mov
fcompl
mov
add
jmp
push
xchg
cltd
dec
sub
outsb
dec
or
in
pop
in
sub
pop
lret
pop
cmpsl
inc
push
je
clc
sbb
and
sahf
pop
add
fisubrs
imul
add
dec
cwtl
jnp
adc
lcall
nop
stos
xchg
xchg
in
pop
stos
or
and
add
mov
xor
add
hlt
testb
sub
in
insb
or
sub
push
add
and
popa
add
and
xchg
xorb
pop
add
jp
xor
ror
adc
push
scas
pop
rolb
int3
cmpb
mov
lret
add
mov
filds
sub
sub
add
push
mov
or
or
pop
repz
inc
xchg
or
dec
ret
lahf
inc
mov
sub
push
xor
jne
and
orb
jl
insb
xlat
rcll
into
or
les
add
arpl
lds
out
add
cmc
flds
pop
mov
adc
xlat
xor
mov
add
add
xchg
inc
pcmpeqw
loope
stc
mov
ret
addb
es
add
pop
scas
lcall
xchg
pusha
insb
dec
xchg
and
arpl
mov
add
mov
hlt
iret
jg
push
push
rcrb
pop
arpl
dec
add
mov
sbb
into
pop
sub
fst
jg
fwait
mov
cltd
hlt
adc
stos
pop
push
call
out
insb
push
cmp
sbb
sbb
add
adc
insl
das
ficoms
movsb
fs
les
add
call
jecxz
aas
dec
xchg
shufps
or
mov
rcl
ficoms
jecxz
out
xor
pop
sbb
loop
fwait
pop
add
and
lea
enter
mov
insl
lahf
mov
dec
lcall
pop
push
push
sub
pop
jo
cli
jle
xchg
sbbb
cld
repz
cmp
and
or
cmp
add
pop
add
cld
js
jp
addb
lods
filds
insb
mov
aad
aam
gs
push
mov
insb
add
dec
fildll
mov
push
xor
push
add
pop
test
xor
das
sbbb
lds
adc
add
cld
addr16
dec
imul
fwait
stc
out
fmull
push
aam
fildll
xor
jp
out
add
in
jmp
icebp
push
pushf
or
adc
mov
int3
icebp
lods
daa
mov
pop
dec
inc
lret
mov
pop
inc
movsl
stos
sub
mov
inc
sbb
mov
push
fcmovb
subb
mov
add
pop
add
push
inc
add
pop
pop
sbb
ja
cmc
xor
pop
mov
mov
std
xchg
and
popa
add
push
clc
inc
cmpsl
xchg
addb
push
loope
xchg
mov
in
popf
and
arpl
dec
bound
shr
je
and
add
icebp
or
subb
fs
mov
int3
sub
mov
gs
add
xor
into
jl
pop
ss
xchg
mov
pop
push
push
push
jne
pop
hlt
dec
jge
add
sbb
dec
mov
add
cmc
jmp
ret
filds
addl
pop
out
insb
xor
fbstp
mov
into
add
push
mov
in
xor
insb
pop
or
popf
lock
jmp
push
aam
lock
add
ds
in
pop
push
xchg
xor
movd
adc
es
jp
add
insb
fdivl
inc
movsl
mov
jne
insb
fs
imul
inc
add
push
setno
jl
lock
lods
add
mov
pop
lock
dec
pop
popa
xor
addr16
clc
mov
pop
subb
inc
adc
mov
outsl
xchg
inc
push
xchg
add
push
movsl
or
inc
pop
or
mov
mov
pop
add
loopne
js
xor
mov
nop
movsl
cmp
movsl
pop
call
call
not
lcall
fdivr
out
and
add
xor
ret
and
in
dec
pop
gs
in
iret
aas
xchg
insb
jae
aad
aas
mov
adcl
pop
and
sbb
int3
jecxz
test
xchg
mov
push
sbb
out
adc
and
les
or
mov
sbb
and
std
add
clc
pop
xlat
xchg
insb
ret
sarb
dec
jnp
insb
xor
push
cmc
imul
insb
int3
xchg
imul
push
push
leave
or
pop
inc
sbb
add
dec
pop
jecxz
in
pop
das
outsl
and
dec
mov
push
insb
or
sbb
sahf
or
xor
insb
pop
dec
test
xchg
or
test
negl
insb
insb
mov
ljmp
add
xor
add
test
or
and
mov
aaa
jbe
push
xchg
shrb
std
fisttpl
int3
in
leave
lcall
subb
enter
inc
add
xchg
adc
xor
pop
push
insb
xor
add
xor
xor
ja
les
add
subb
int
pop
push
outsl
ret
pop
pcmpgtb
xchg
rcrb
adc
inc
push
pop
insb
sbb
sub
or
insl
data16
repz
insl
add
xor
test
ss
pop
add
inc
xor
add
roll
pop
dec
fwait
or
cltd
xchg
scas
pop
hlt
pop
or
cmpsl
cmpsb
jle
movsb
mov
push
pop
add
rclb
and
or
mov
pop
in
sbb
imul
inc
jg
insb
pushaw
add
add
out
in
popf
insb
mov
xchg
pushl
cld
pop
add
add
sahf
repz
std
lret
into
add
push
push
insb
dec
sub
lods
pop
movsl
fisubl
dec
lea
pop
subb
imul
sbb
imul
clc
ror
call
insb
aaa
testb
movsb
into
add
mov
cwtl
pop
push
dec
add
and
lock
insl
repz
add
xor
push
push
jg
add
add
pop
sbb
push
js
fidivs
ljmp
or
arpl
add
add
adc
pop
pop
mov
add
pop
pop
sbb
add
outsl
cli
inc
insl
jae
inc
push
int3
and
add
fiadds
iret
pop
je
mov
pop
vcvttss2si
les
out
stc
add
or
jns
add
add
push
int3
pushf
insl
sti
cwtl
add
push
mov
pop
addb
push
inc
aam
inc
mov
pop
mov
sub
add
out
add
push
push
pop
insl
jae
add
dec
add
push
lcall
pop
add
insl
shll
mov
add
add
sub
je
inc
bound
push
sbb
add
inc
adc
adc
adc
outsb
lss
jl
cmp
out
sub
xchg
pop
vmread
jl
adc
push
jno
mov
adc
movups
jl
cmc
adc
xor
add
fiaddl
pop
movsl
sbb
rcl
rolb
fcom
loop
fisubs
stos
clc
les
mov
mov
das
jo
dec
mov
xchg
outsl
mov
xor
icebp
lahf
test
ret
cmpsl
insl
xchg
popl
lcall
cld
call
adc
inc
sti
rorl
inc
add
ja
je
faddl
imul
subl
insb
out
sbb
fs
outsb
push
pop
dec
push
inc
jae
lahf
cmp
jo
jo
dec
sub
dec
pop
out
cmp
ja
outsb
daa
addb
loopne
jns
cmp
dec
sbb
and
gs
dec
xchg
cmp
inc
sbb
inc
sub
pop
insl
pop
cmp
or
dec
add
fnsave
push
push
adc
jl
and
jne
sbb
adc
jg
in
mov
icebp
xchg
loope
je
add
out
pop
ret
jmp
xchg
outsl
mov
cld
fcomps
shlb
mov
aam
les
fcmovu
mov
cld
cli
divb
int
add
push
xchg
cmpsl
fidivrl
test
cld
lods
test
clc
imul
mov
cmpsl
pusha
add
repnz
cld
mov
cmc
test
inc
sbb
pop
imul
lea
inc
and
adc
cmp
push
sbb
jae
dec
sbb
and
sbb
inc
lret
pop
movups
pop
repnz
or
jae
sbb
adc
dec
lahf
adc
sub
ja,pt
jns
push
adc
and
cmp
push
imul
insb
inc
or
ja
sub
adc
data16
outsb
or
aad
jecxz
sbb
jl
sub
jae
fdivrs
push
sbb
cwtl
jmp
pop
xchg
in
ljmp
dec
repnz
dec
fadds
insb
mov
add
mov
ficompl
sbb
add
mov
rcr
inc
int
stos
lods
jg
cmp
xchg
mov
xchg
lods
pop
xchg
mov
dec
pop
hlt
pop
mov
out
xchg
je
insb
xchg
mov
mov
lret
fwait
cld
xlat
xchg
mov
pop
dec
bound
push
push
pop
or
enter
imul
or
push
add
sbb
adc
push
sub
arpl
pop
add
inc
bound
xor
add
and
pop
inc
push
and
and
xor
dec
sbb
insl
add
xor
sbb
pop
and
popa
and
or
add
inc
and
dec
inc
pop
inc
in
push
add
outsb
cmp
jle
adc
imul
repnz
cwtl
sub
icebp
je
jo
lock
sti
repnz
cmc
sbbb
mov
enter
mov
lods
in
fsubrl
vcmpleps
stos
mov
xchg
shlb
mov
sarb
push
sbb
mov
xchg
in
mov
cltd
frstor
jecxz
cli
mov
ljmp
xchg
les
ds
jmp
stc
add
stos
pushf
or
roll
jg
pop
pop
add
and
unpcklps
push
adc
push
enter
and
jbe
pop
outsb
in
pop
and
pop
cs
adc
jae
std
daa
sub
xor
xor
int3
pop
outsl
xor
adc
push
xor
mov
jae
sub
jge
and
pop
xor
cmpb
xor
insb
cmp
sub
ss
insl
adc
sbb
jb
or
jp
cmp
bound
cmp
bound
jecxz
lea
test
jmp
lock
cmpsb
push
call
sbb
icebp
push
cld
jno
out
in
jmp
lret
cmp
ror
stc
mov
stos
mov
iret
jmp
popf
sti
rcrl
or
sbb
pop
test
aad
sti
mov
and
add
shll
out
add
xchg
loop
out
cli
mov
add
lahf
adcl
movsb
mov
notb
cld
add
sbb
add
push
jo
insl
pcmpeqw
jne
aam
add
outsl
bound
arpl
insl
data16
push
push
push
outsb
dec
add
dec
cmp
sub
pop
mov
pop
inc
pop
fs
inc
push
cmp
xchg
add
push
daa
clc
sub
insl
xor
add
icebp
push
xchg
sbb
add
cmp
push
and
xor
xor
push
add
addr16
adc
inc
push
das
sbb
outsb
dec
jb
sldt
pop
adc
or
or
or
pop
call
mov
stc
out
cltd
testb
pop
std
test
bnd
arpl
or
or
inc
insb
ror
loopne
loope
fildll
shrb
mov
clc
mov
fdivl
enter
add
mov
test
jae
mov
test
cmp
cmp
adc
cmpsb
test
add
repnz
xchg
insb
xchg
xchg
call
in
cwtl
out
add
jns
jae
pop
jno
mov
jg
movsb
push
and
imul
jb
loop
dec
cs
push
push
dec
sbb
daa
add
mov
sub
push
add
pop
cmp
pop
pop
hlt
xor
xor
dec
cmp
sti
pop
push
sub
sub
push
and
adc
cmp
or
daa
adc
fsubrl
adc
outsl
cmp
xor
jo
nopl
push
out
jne
cli
enter
andl
lds
rolb
jns
in
js
mov
sbbl
xchg
fadds
jmp
stos
test
sub
rcl
and
pop
int3
rcll
ret
mov
ret
out
rolb
mov
add
ret
mov
out
mov
inc
lahf
iret
xchg
fst
mov
cmpsl
test
mov
add
andl
mov
sahf
call
scas
pop
dec
sbbb
push
push
and
mov
lahf
jge
sbb
scas
add
sub
and
xor
aad
push
data16
sbb
dec
push
inc
pop
pop
and
add
sbb
js
mov
insl
aaa
aas
or
mov
pop
xor
dec
pop
ss
addl
pusha
loope
or
adc
xor
sub
pop
pop
jno,pt
pop
and
pop
pop
cmp
jg
sbb
adc
mov
pusha
call
pushf
xchg
add
cli
filds
lcall
lcall
aam
insl
loopne
lret
jmp
mov
shrd
scas
and
not
mov
inc
insb
mov
cmpsb
mov
das
mov
mov
dec
inc
aam
jg
stos
punpcklwd
add
cld
test
pop
popf
jecxz
push
sub
jmp
xchg
xchg
pop
sti
mov
or
sbb
orb
dec
dec
xor
out
clc
imul
push
in
popf
dec
cmp
cwtl
dec
dec
xor
inc
dec
cmp
push
pop
pop
xor
pop
sbb
dec
dec
or
rolb
sub
add
pop
dec
jbe
and
imul
xor
pop
xor
sub
sub
bswap
or
sbb
outsb
add
jbe
or
or
cmp
jae
mov
jo
lret
mov
dec
imul
mov
outsl
add
pop
add
or
lret
cltd
xchg
inc
test
scas
cmp
jns
push
hlt
cmc
inc
mov
mov
pop
jge
adc
pusha
xchg
add
pop
or
insb
cwtl
fimuls
idiv
insb
sbb
pop
jne
js
add
or
inc
into
mov
mov
stc
mov
in
push
pop
or
jecxz
and
inc
imul
insl
in
mov
add
lret
test
add
add
idivl
lods
cmpsb
add
and
inc
insb
dec
movsb
iret
cmp
aas
or
sub
pop
pop
sbb
iret
rolb
dec
mov
aaa
test
or
in
sbb
mov
cmp
push
dec
mov
add
mov
jmp
pop
add
test
imul
inc
mov
mov
add
cmpsb
loopne
sahf
pop
lahf
jns
add
addr16
lcall
inc
inc
jmp
les
aaa
out
das
ss
push
cmp
jb
cli
mov
mov
jmp
xchg
jle
add
imul
cld
adc
mov
xchg
add
cmp
out
push
clc
lods
out
shlb
pop
adc
pop
cld
mov
inc
add
pop
test
pushf
stos
inc
insb
mov
jecxz
cmpsl
pop
decl
sbb
pop
test
sbb
xor
dec
push
dec
add
fbstp
orb
add
xchg
fnstsw
push
dec
inc
cmp
in
in
int3
in
sbbb
mov
mov
outsb
or
sub
jge
inc
mov
jle
jns
fsubrs
daa
mov
mov
pop
addr16
add
jb
mov
fwait
std
into
rcrl
lahf
dec
inc
enter
fs
pop
mov
daa
mov
xchg
insb
cmp
ret
pop
fidivrl
repnz
shl
xchg
lret
push
adc
add
int3
fldt
sub
fisubs
sbb
lret
lea
jmp
lcall
negl
jecxz
jmp
fdivrs
sbb
insl
xor
ret
or
mov
int3
pop
aad
icebp
cmp
mov
mov
das
push
movups
rorl
add
mov
cmp
ret
add
cmp
insl
add
add
sbb
pop
lds
push
int3
or
xor
add
push
mov
outsb
adc
cltd
lods
dec
mov
scas
xor
fstps
xor
adc
dec
nop
fldt
hlt
pop
jo
movb
or
clc
incl
add
mov
or
mov
hlt
push
xchg
sub
sbb
daa
stos
cmpsb
jmp
hlt
sbb
sbb
stc
xchg
sarl
sub
adc
mov
outsb
lret
sub
mov
lahf
lret
add
inc
daa
add
hlt
into
or
movsl
enter
cwtl
lret
add
sub
int3
sti
jno
jo
and
mov
bound
jmp
test
cli
cmp
lods
cltd
pop
repnz
iret
pop
dec
ficoml
pop
mov
shll
push
xor
jecxz
lock
xchg
and
in
mov
hlt
mov
add
pop
mov
jle
into
pop
insb
push
mov
xor
add
push
lds
ljmp
insb
cmp
bound
or
cmpsb
insl
ljmp
fidivrs
push
leave
ret
imul
arpl
gs
jg
jae
xchg
mov
nop
push
cwtl
push
push
mov
pop
dec
pop
jge
aaa
imul
pop
or
orb
imul
mov
data16
call
movsb
aad
sbb
adc
repz
scas
subl
xor
stos
in
add
cmp
or
int3
mov
add
lcall
adc
add
dec
mov
test
inc
push
aas
lcall
mov
clc
mov
xchg
sti
outsl
in
fst
leave
push
mov
pushf
push
shrb
repnz
xchg
test
add
ljmp
paddd
shrb
pop
insl
in
aas
pop
push
ret
das
xchg
test
push
cmpsl
jae
cmc
and
pushf
mov
xchg
xchg
jl
insl
outsl
xchg
dec
pop
sub
sahf
sub
jb
push
les
mov
movsl
mov
icebp
aad
xchg
cmp
lods
push
adc
inc
mov
filds
xorl
pusha
inc
loope
mov
mov
adc
pop
dec
jge
lret
add
mov
call
in
ljmp
cmp
pusha
pop
jo
or
cmp
jmp
repnz
pop
pop
ret
and
inc
cld
add
sbb
push
lea
cmp
lods
clc
dec
push
cmp
daa
js
push
cmp
add
fwait
in
fidivrl
xchg
imul
das
pop
mov
pop
fldt
enter
fldl
movhps
test
add
insl
cmp
sub
imul
add
shld
pop
popa
and
push
in
aas
lock
dec
les
movsl
imul
and
dec
bound
cmp
jne
jo
pop
jle
gs
jbe
sub
mov
cmpsb
out
rclb
pop
xor
inc
test
stc
inc
jmp
fcmovnbe
bound
mov
and
insb
sar
push
mov
test
pop
mov
mov
shlb
data16
movb
adc
inc
dec
lods
leave
and
pop
fwait
mov
mov
and
lahf
cmpb
push
cld
sub
or
cltd
push
push
add
xchg
pop
mov
outsl
ss
pusha
jo
loop
scas
cmp
add
rcrb
sti
push
mov
test
jl
mov
cmp
lcall
ss
mov
fs
add
inc
insb
jmp
pop
cmp
push
shlb
ds
add
sub
sub
add
test
negb
data16
adcl
addr16
in
ret
insb
xchg
ret
mov
mov
hlt
pop
adc
sbb
mov
insb
fwait
mov
lods
sti
xor
pop
hlt
pop
cmpsb
mov
pop
pop
imul
int3
xor
js,pt
out
pop
add
mov
fldl2e
dec
lods
add
test
dec
mov
mov
pop
scas
mov
aam
add
pop
jle
mov
mov
cmc
xchg
or
out
aad
rcrb
sbb
or
or
xor
xor
repnz
push
mov
add
es
cmp
ficompl
sahf
mov
sbb
jmp
jp
inc
dec
in
dec
add
loop
jns
in
pop
mov
pop
mov
fisubl
push
enter
fidivs
dec
xchg
push
testl
lret
in
icebp
fld
cmc
call
test
push
subb
sbb
dec
jnp
mov
jae
xchg
pop
jmp
aam
cld
pop
out
mov
jnp
sub
cs
and
cmp
dec
jmp
pop
insl
mov
xchg
push
les
jmp
xor
mov
sarb
fstpt
add
mov
insl
ror
push
jno
inc
pop
int3
int3
sarl
loop
add
or
dec
repz
stc
cmp
nop
add
sbbb
insb
enter
rorb
std
lahf
stos
fbstp
jnp
pusha
out
int3
xor
fiaddl
inc
loopne
pop
mov
fstpt
push
insl
mov
add
mov
in
sub
mov
addr16
fs
jge
pop
in
sbb
jg
lea
jno
jg
jne
insb
sub
in
pop
sub
adc
adc
sub
test
push
stos
add
add
frstor
pusha
orl
jne
pop
fistl
xor
cwtl
pop
inc
add
xor
xchg
and
lods
dec
stc
pop
dec
mov
movsb
cmp
insb
cmp
sub
push
mov
div
shrl
out
mov
outsl
ljmp
lcall
fs
testl
jne
fstps
xchg
add
mov
add
insl
mov
lods
add
mov
in
adc
addr16
jne
pop
cmpl
and
fstl
adc
sbb
xchg
dec
mov
addr16
xchg
iret
insb
stos
aam
xchg
sub
in
loop
loop
pop
imul
or
push
test
and
int
add
cmp
insb
xchg
push
insb
frstor
jge
jg,pn
hlt
arpl
mov
fbld
push
in
pop
push
lods
push
jg
mov
add
in
out
stc
pop
fsubl
or
scas
test
mov
jmp
int3
cwtl
orb
push
pop
pop
pop
add
and
mov
mov
mov
add
call
es
int3
cmp
out
pop
and
mov
mov
popa
dec
cmp
push
dec
mul
leave
addr16
sarl
cwtl
xor
sbb
int
cmpsl
pop
les
sar
pop
add
pop
inc
sbb
call
iret
pop
cwtl
or
cmp
lahf
push
sub
inc
add
clc
push
mov
aaa
mov
orb
add
in
sbb
xchg
add
jge
cmp
in
xor
or
fsts
pushl
addl
cs
js
pop
pop
sub
xor
add
fmull
in
jno
sbb
pop
aas
cmp
inc
insb
lods
aam
add
cmc
aas
in
lds
add
movsb
addl
mov
lods
pop
into
jnp
imul
cltd
inc
addl
pop
pop
xlat
dec
cs
pop
xor
fbstp
fwait
xchg
add
nop
mov
mov
add
xchg
fisubrl
loope
lret
pop
into
aaa
xchg
fisubl
bound
push
ficomps
adc
add
inc
int3
pusha
adc
push
add
pop
pop
pop
adc
push
in
iret
shlb
fs
js
add
das
lcall
dec
ficoms
lea
andb
sub
notb
cmc
in
enter
iret
insb
flds
adc
xor
leave
mov
cmp
inc
cwtl
inc
inc
fbstp
or
xor
cmp
push
insl
jmp
push
dec
add
ds
inc
sub
xlat
push
dec
xor
icebp
test
sbb
movsl
fs
insb
sbb
lcall
mov
jne
inc
movsl
sub
and
ja
and
pushf
inc
xchg
pushf
sub
sahf
push
dec
dec
jae
sarl
mov
push
jae
insb
shl
mov
mov
pop
mov
daa
mov
cmp
lock
xor
and
xchg
add
idiv
imull
cli
test
into
push
dec
push
enter
cmpsl
lds
push
flds
mov
pop
stos
xchg
jo
inc
mov
jg
clc
and
mov
cmp
push
mov
enter
loopne
fcmovnb
outsl
nop
push
mov
nop
mov
pop
std
orb
pop
mov
cmp
ficompl
push
mov
cld
mov
orb
or
imul
test
sbb
inc
call
outsl
pushf
in
add
dec
fwait
mov
pop
inc
lds
lahf
pop
outsl
jae
dec
stos
insb
add
xor
outsb
test
dec
mov
sub
mov
fwait
add
pop
aad
es
mov
pushf
sbb
adc
add
cmp
push
arpl
lods
ds
inc
pop
pushl
gs
add
aad
popa
cmp
add
lods
movsb
mov
pop
int
lods
push
out
cmp
mov
pop
call
jl
or
outsl
jge
and
in
pop
push
mov
sbb
enter
cmp
les
imul
xor
pop
subb
lods
add
rorb
cmp
test
mov
in
fldenv
ljmp
fbstp
adc
sarb
loopne
adc
shlb
mov
bound
arpl
mov
sti
or
fbld
insb
jnp
test
mov
mov
test
ljmp
flds
jbe
fnsave
jae
loope
nop
shll
pusha
aas
mov
enter
sahf
inc
jle
or
pop
push
pop
les
lahf
js
stc
mov
adc
ljmp
push
aaa
insb
aam
pop
add
and
popa
lds
adc
xor
cmp
enter
push
mov
jo
mov
pop
sbb
lcall
inc
es
insl
jne
push
sub
jmp
sub
fdivs
aam
imul
ja
cmp
insl
and
mov
dec
pop
pop
outsl
adc
daa
jo
add
sbb
mov
and
sub
sub
aad
hlt
pop
call
mov
dec
add
push
jbe
inc
pop
lock
cmpsb
xchg
or
fsub
dec
xchg
and
adc
sbb
pop
pop
cmp
jae
aaa
pop
cwtl
mov
dec
popf
mov
mov
adc
stos
test
cltd
insb
imul
add
ret
rclb
lcall
out
std
dec
movsb
add
or
mov
or
push
add
scas
out
mov
insb
or
in
pop
push
stos
cs
sahf
mov
adc
loope
andb
loop
jl
jmp
les
pop
cmp
dec
dec
mov
out
incb
test
sbb
mov
add
call
add
and
add
loop
add
add
mov
mov
adcb
les
xchg
int3
cs
loope
pop
int3
ja
pop
jle
rorl
dec
pop
lock
sub
add
scas
fldcw
inc
push
dec
sbb
add
push
push
pop
bnd
add
adc
pusha
insb
mov
repnz
rcrb
dec
fdivrl
clc
es
out
mov
sub
popf
cmc
pop
add
je
sub
repz
ja
jno
pop
sbb
fstpl
mov
adc
mov
scas
lods
aad
cmp
add
dec
mov
xor
out
add
or
inc
icebp
adc
mov
scas
lock
repz
lods
scas
insb
push
bound
pop
add
mov
dec
and
in
aaa
fmul
mov
ss
or
mov
sti
lods
lret
daa
mov
mov
aas
push
xlat
push
imul
adc
push
xchg
mov
pop
xor
add
add
mul
fadds
in
xchg
push
insb
aad
in
mov
imul
cmpsl
adc
cmp
adc
ds
nop
iret
daa
in
in
mov
push
in
out
inc
adc
xor
mov
imul
mov
add
iret
cmp
pop
mov
sub
cmpsb
addb
andb
ljmp
insb
xchg
xor
addr16
cmpsl
lret
jne
nop
mov
add
ds
stos
mov
pop
push
dec
and
adc
mov
js
stc
adcb
das
dec
ret
stos
mov
test
lods
mov
mov
xlat
daa
push
repz
add
add
adc
add
and
sbb
popa
data16
inc
mov
lea
push
in
mov
mov
jg
jb
lret
rcrb
add
repz
cli
and
sbb
xchg
push
leavew
shrl
and
pop
sbb
jl
ret
mov
imul
imul
andb
test
rclb
stos
xchg
jae
push
shr
movsb
fs
int3
roll
push
xchg
xchg
ja
or
sub
inc
es
pop
hlt
sub
test
push
lret
ret
into
jl
cmp
add
cmp
jp
insb
out
cmpsb
xor
add
mov
addb
rorb
mov
jbe
add
mov
xchg
insb
dec
cmc
pop
popw
jg
cmpsl
and
and
inc
je
sub
repnz
inc
dec
push
sahf
js
pop
in
push
add
scas
in
jnp
aaa
fnstcw
aam
push
hlt
push
dec
out
or
add
push
and
add
cli
ss
jg
stc
std
dec
jge
xchg
sarl
je
add
movsl
ja
xchg
filds
mov
loopne
adc
jns
add
push
mov
cmp
lods
or
mov
xchg
xor
and
xchg
add
sub
and
and
out
push
dec
jo
insb
popa
sbb
lock
pop
push
mov
mov
mov
in
jmp
cmp
ja
std
fmul
hlt
and
test
or
add
cwtl
adc
outsl
sarb
imul
xchg
xchg
dec
in
jns
push
xlat
xlat
cmp
push
js
stos
jo
xchg
and
cmp
cmpsl
pop
repnz
loope
cmc
or
sbb
out
sub
add
loope
jnp
cmp
addr16
xorl
or
lret
pop
adc
bound
pop
sbb
cwtl
xchg
sar
mov
cwtl
in
mov
push
adc
popa
sbb
push
mov
fwait
insb
in
scas
adc
sbb
mov
pop
int
lods
or
jle
jg
cltd
mov
pop
pop
stc
mov
ret
movsb
loopne
sub
xchg
pop
or
xchg
push
adc
nop
or
lods
push
add
mov
mov
push
sbb
rcrl
jo
jne
loopne
jg
ds
mov
jl
cli
mov
sub
cmpl
dec
les
call
icebp
js
push
in
dec
out
lcall
fwait
xlat
xlat
jnp
adc
sbb
xchg
push
mov
push
pop
sbb
pop
mov
or
aas
ret
mov
test
add
push
mov
sbb
xchg
insb
jge
or
sub
in
pop
mov
je
mov
push
pop
sub
cmp
inc
js
add
add
call
mov
xor
lcall
ss
mov
insb
enter
jl
push
adc
inc
hlt
nop
inc
add
push
das
jmp
push
in
add
dec
sbb
outsl
rol
arpl
sub
loope
add
std
or
iret
movsb
cmp
xchg
insb
in
mov
fstpl
stos
sub
push
adc
xchg
repz
jl
cmpsl
pop
inc
jge
adc
aas
roll
fsubrs
out
adc
pop
jns
fsubrl
jne
insb
popf
add
fbld
sbb
pop
or
add
xor
int
sub
mov
and
fstpl
or
sbb
scas
addr16
jno
dec
imul
mov
pop
rcll
add
pop
lds
cmp
insb
ret
sbb
jp
inc
push
inc
fwait
and
cmpsb
insb
and
stos
pop
inc
jle
insb
mov
insb
popf
ret
jge
clc
lahf
pop
loop
fwait
mov
xchg
add
jne
fstpt
push
and
mov
sbb
dec
add
rolb
add
inc
xor
iret
jl
dec
push
xchg
jecxz
jecxz
dec
pop
rclb
dec
imul
push
bound
xchg
repnz
dec
rcrl
loope
jno
push
jb
stos
std
jmp
fsubrs
xor
icebp
imul
cmp
lea
add
add
inc
add
pop
add
add
rcll
cmpl
rol
inc
imul
hlt
in
ficomps
int
mov
push
arpl
jb
mov
xor
and
pop
flds
inc
push
aad
xchg
mov
fisubl
pusha
mov
mov
sbb
lds
clc
and
lock
xor
je
push
testb
add
movsb
add
cli
sbb
jnp
sub
ljmp
mov
adc
add
jecxz
mov
insb
jns
push
push
aaa
in
push
sbb
push
lods
add
ret
fistpll
mov
or
lcall
pop
cmp
fiadds
loop
cmp
add
jle
int3
inc
cmc
int
xchg
pop
sbb
xchg
cwtl
fsubrl
sbb
iret
add
loop
cmc
insb
or
sub
loope
push
int
test
enter
pop
push
mov
nop
pop
cmp
add
test
and
dec
addl
or
add
data16
mov
lahf
out
jnp
sbb
mov
cld
out
cmp
mov
addr16
pop
lock
sahf
pop
dec
jne
insb
mov
adc
adc
rorb
xor
push
sbb
cld
pop
push
pushf
nop
addr16
pop
loopne
sahf
test
roll
out
mov
loope
dec
jl
push
and
push
xchg
ljmp
mov
dec
dec
or
add
dec
jecxz
popa
push
aad
insb
movsb
js
xchg
les
pop
test
mov
addl
add
fidivrl
mov
sbb
pop
mov
sbb
cmpsb
add
adc
pop
xlat
pop
or
fwait
jb
cli
dec
jae
push
in
sbb
loope
mov
mov
xchg
push
push
lods
pop
cmp
sti
xor
mov
jno
test
mov
dec
lcall
sub
sub
bound
jle
pop
icebp
js
enter
xor
xchg
cmp
and
sbb
clc
in
xchg
cmc
mov
adc
cmpsb
sub
jns
imul
mov
ljmp
scas
out
fsubl
jno
sbb
sbb
push
js
add
outsb
sbb
into
les
bound
dec
push
test
jle
cmp
pop
aam
or
or
xchg
popf
out
mov
and
push
jnp
mov
and
cmpb
mov
dec
jno
add
cld
cmp
fwait
imul
push
insb
lret
cmp
mov
in
lods
adc
jo
xchg
dec
or
add
inc
sbb
ss
or
mov
mov
aam
lds
iret
cmp
add
inc
xchg
xchg
lea
mov
loopne
arpl
or
and
or
mov
inc
jne
ds
sub
insb
jmp
mov
or
push
xchg
jl
mov
iret
stos
in
sahf
insb
idivl
cmp
inc
out
rol
dec
sub
mov
adc
cld
sbb
rclb
mov
shll
push
xorb
pop
xchg
pop
dec
arpl
mov
inc
sub
popa
dec
out
stos
stos
insb
lods
bound
mov
divl
pop
dec
lcall
add
inc
js
pop
mov
sarb
lahf
daa
mov
mov
mov
lock
jg
xchg
in
or
mov
xor
mov
fisubs
test
mov
sub
clc
stc
ffreep
pop
sbb
mov
jmp
mov
pop
mov
icebp
mov
sub
insl
pushf
fidivrs
adc
xor
hlt
sub
fcmove
gs
sbb
js
imul
pop
data16
jmp
pop
lret
or
xchg
xchg
dec
mov
mov
aaa
in
insb
jmp
inc
sbb
stos
orl
sub
in
insl
dec
lret
mov
fimuls
lock
aam
pop
or
and
mov
out
push
das
pop
xchg
nopl
jbe
xor
pop
xor
xor
out
int3
cmp
add
mov
test
xchg
xchg
js
cmc
rcrl
adc
mov
sub
mov
mov
jp
mov
sarb
dec
mov
sub
pop
sti
or
ret
lret
mov
add
sbb
xor
rolb
inc
add
mov
push
test
sti
insb
imul
inc
add
inc
mov
clc
jecxz
adc
loop
jg
sbb
pop
xchg
inc
shl
clc
out
scas
insb
xchg
sbb
push
insl
sub
mov
sarb
shll
mov
adcb
cmc
or
in
and
sbb
jns
pop
cmp
pop
xor
ljmp
or
aam
cld
loope
lds
sub
rcl
ds
and
fs
shl
xchg
sbb
push
and
cmp
stos
dec
add
lcall
add
mov
add
ficompl
xchg
daa
aas
mov
jnp
adc
xchg
lock
and
mov
imul
shll
aam
adc
mov
and
xchg
aam
orb
outsb
rolb
jge
mov
pop
loope
jl
call
add
das
rcll
sahf
or
clc
push
imul
fldcw
pop
test
add
mov
sbb
xlat
jo
stos
push
cmp
jge
mov
or
add
mov
in
imul
and
shl
xor
add
sbb
cmp
push
adc
pop
in
push
in
ret
enter
lcall
fwait
inc
hlt
add
jmp
push
pop
xor
add
pop
mov
ror
gs
jns
adc
jp
inc
lea
loopne
push
mov
lods
imul
pop
and
ja
mov
mov
imul
insb
push
popa
xchg
sub
and
out
sbb
sbb
out
adcl
test
aad
in
inc
cmp
sbbb
inc
outsl
into
add
mov
cmpb
push
jl
sbb
jmp
cwtl
jle
add
mov
lahf
jecxz
add
loopne
insb
cwtl
daa
pop
cmp
rcrl
lods
jb
insb
sbb
stos
scas
mov
dec
sub
pusha
rolb
popa
nop
insb
lds
sub
mov
push
jp
pop
aad
xchg
add
xchg
mov
add
jnp
in
loope
sbb
inc
test
call
push
and
loopne
xchg
add
in
and
mov
sub
aam
clc
pop
sbb
or
sti
push
ret
iret
js
add
mov
pop
push
rcll
shll
add
xchg
mov
jecxz
cmp
aam
mov
inc
dec
dec
loopne
jg
jmp
sbb
cli
movsb
lock
pusha
cli
sbb
mov
fnstsw
push
add
jecxz
xor
pusha
pop
adc
out
xor
fldl
arpl
jns
adc
out
lods
lret
and
add
lret
sarb
mov
data16
jno
insb
pusha
jmp
clc
js
ficoml
inc
jno
xchg
pusha
push
adc
lret
cli
das
or
bound
jge
leave
sbb
insl
testl
xchg
jle
add
test
pop
ret
lods
pop
insb
cmpsl
mov
test
sti
aam
add
push
and
movsb
cmpsl
fbstp
pusha
scas
sub
aam
xrelease
lock
pusha
mov
leave
pop
mov
sti
jge
outsl
dec
fisttps
jo
xlat
add
stos
inc
mov
sbb
sbb
in
mov
test
push
adc
sti
pop
in
add
xor
rcll
mov
les
mov
add
aam
sub
mov
cmp
adc
mov
add
cli
inc
pop
in
and
cmp
dec
ss
lock
mov
sar
or
jno
add
inc
idiv
jb
imul
inc
or
inc
sbb
mov
insl
inc
and
cmp
gs
jle
mov
rcll
dec
push
ror
add
out
add
add
call
scas
mov
sub
pop
add
mov
test
cmpsl
clc
ja
aaa
cli
push
js
or
pop
aaa
data16
inc
sbb
or
mov
xor
mov
add
pop
or
push
dec
adc
and
call
mov
ss
clc
push
lret
cmp
andb
mov
add
push
clc
cltd
sbb
rcll
dec
fists
ret
imul
pop
test
mov
fs
mov
or
cmp
adc
cmp
stos
int3
mov
cmp
jo
add
push
pop
mov
rol
jae
insb
xor
fidivrl
fdivrs
mov
inc
enter
ret
mov
xchg
dec
out
push
mov
xchg
repz
data16
cs
ds
and
rcrl
mov
das
adc
fsubrl
cmpsl
mov
jae
popf
sbb
mov
mov
and
inc
inc
and
push
adc
into
or
int
xor
addr16
out
inc
or
sub
add
xchg
dec
mov
dec
cltd
pop
mov
sbb
out
in
scas
lods
adc
inc
sbb
call
adc
add
mov
testb
gs
mov
cmpsb
cwtl
add
ja
adc
lret
jns
and
bound
pusha
orl
inc
add
sahf
enter
add
jb
sub
or
andb
and
mov
fwait
adc
test
into
and
prefetch
inc
jp
pusha
out
sub
pop
jb
nop
popa
cwtl
xchg
push
push
cmpsl
iret
subb
jle
fmull
sbb
nop
cmp
addl
or
out
dec
dec
pop
shlb
jg
into
add
mov
pandn
pop
repnz
lret
mov
push
pop
jbe
jp
sub
mov
aad
mov
popa
pop
xor
jmp
idiv
push
arpl
lock
xlat
push
jg
es
insb
xchg
xor
mov
mov
sub
push
or
cs
add
and
enter
stos
and
jg
insb
ja
lret
repnz
sbb
adc
scas
imul
ja
and
out
repnz
xor
lret
fbld
fiaddl
cmpsb
sbb
das
in
ja
das
aad
xchg
out
ljmp
xchg
and
pop
jb
mov
mul
iret
int3
loopne
or
cmp
sbb
sbb
lock
add
jmp
dec
movsb
loop
push
movsl
xchg
add
dec
ficomps
insb
dec
test
sub
sbb
loop
sub
xchg
arpl
lods
imul
mov
add
out
jl
adc
mov
jl
add
clc
and
jg
push
cmp
mov
ret
je
add
mov
jnp
mov
push
in
sub
subl
mov
cmp
inc
add
int
lret
ljmp
outsl
movsl
aad
imul
inc
add
mov
pushf
jns
and
out
mov
or
in
add
jo
in
ljmp
pop
cmc
xchg
add
int3
sub
sbb
les
int
stos
loopne
cmp
lea
sbb
adc
bound
dec
sub
cmp
push
popa
insb
sbb
xadd
push
pop
cmp
push
out
loope
sti
scas
add
clc
and
cmp
push
jge
add
dec
in
jle
in
push
test
mov
divb
inc
iret
pop
xchg
cld
sar
sbb
mov
sub
dec
cwtl
insb
test
inc
ljmp
push
mov
sbb
sub
inc
and
outsb
and
out
imul
add
adc
push
mov
add
ja
xor
xor
jg
negl
insb
push
pop
and
mov
add
push
cmp
push
addps
std
out
fisttps
mov
into
mov
fsubr
in
mov
repz
mov
mov
mov
aam
jle
sub
cmpsb
cmc
push
pop
fnstenv
mov
je
insb
pop
notl
mov
mov
or
fmul
fwait
add
xor
sti
lea
xor
pop
adc
mov
xchg
lret
int3
lahf
mov
add
fisubs
mov
fs
and
mov
xchg
adc
ds
pop
add
or
out
scas
mov
daa
pushf
jg
sub
in
repz
inc
cmpsb
pop
or
sub
lcall
imul
mov
adc
icebp
or
jb
sub
add
adc
jns
pop
xor
out
adc
xchg
or
insb
insl
pop
add
int
xchg
popa
fistps
inc
mov
insb
sub
repz
mov
dec
scas
gs
loope
ja
sbb
mov
rorl
nop
in
lret
insb
and
jnp
js
test
dec
xchg
adc
inc
aam
pop
mov
add
repnz
les
push
imul
adc
mov
push
add
mov
movl
mov
aad
xor
aas
insb
das
mov
sub
jae
lahf
jle
scas
or
js
stos
mov
sahf
cmp
stc
in
and
xlat
sti
ficomps
mov
add
sbb
push
add
push
mov
fs
mov
out
bound
rcrl
mov
add
mov
scas
aam
call
pop
jp
popf
scas
lahf
les
in
add
xchg
loope
push
repnz
gs
add
neg
lods
fnstenv
and
loop
stos
pop
fstps
pushf
cmp
rcr
mov
dec
inc
pop
test
mov
aad
and
jne
stc
sbb
jle
adcb
cli
ss
scas
repnz
dec
or
repz
xor
add
xor
inc
sub
adc
jecxz
fmul
scas
add
xlat
popf
mov
and
mov
jnp
mov
outsb
xchg
outsl
loopne
lds
cmp
lret
insl
lret
ds
jnp
ja
jmp
je
leave
stos
cwtl
mov
pop
cld
iret
pop
mov
les
fists
add
test
cmpsb
mov
lds
xlat
dec
test
mov
sbb
xchg
jno
mov
mov
std
pop
cmp
aas
icebp
inc
jae
mov
add
pusha
xchg
jmp
xor
cmp
sbb
das
pop
mov
pop
jo
and
and
cmpsl
mov
cmp
xor
ret
cmp
pop
aas
loop
movsb
xor
or
push
jne
pop
inc
mov
jae
xor
pop
inc
leave
cmpsl
movsl
sahf
adc
in
lcall
insb
xchg
xchg
test
outsb
cs
push
sbb
pop
xchg
popa
jns
out
jp
mov
add
mov
adc
xchg
pop
mov
push
lods
js
insb
shrl
in
or
movsb
jnp
cmpsb
imul
push
cmp
fisttpl
dec
js
dec
xchg
mov
mov
mov
jg
ret
sub
push
jge
mov
insb
xor
rcll
lret
push
dec
push
dec
inc
shlb
sbb
fidivs
lds
sbb
mov
and
insb
cmp
mov
pmaxsw
xor
loopne
push
das
adc
icebp
mov
cmpl
jne
cwtl
adc
xor
lds
xchg
shrb
adcl
xor
pop
outsb
lods
sbb
out
adc
inc
insb
fisubl
add
mul
pushf
shll
and
inc
movsl
add
sbb
outsb
jo
sbb
lods
fisubrs
aas
js
icebp
add
int
xchg
rep
add
dec
in
loope
rcll
in
movsb
mov
pop
xchg
dec
push
jno
orb
testb
jne
mov
mov
pop
and
xor
pop
dec
jne
sbb
adc
and
subl
xlat
sub
jle
jle
sbb
push
fbstp
or
scas
sbb
pop
pop
jl
xchg
loopne
ret
in
sbb
test
push
clc
mov
add
jle
test
ret
adc
into
and
enter
jle
stos
lea
hlt
aaa
adc
push
sbb
mov
scas
pop
popa
mov
adc
pop
push
ljmp
sub
pop
lods
pop
mov
add
jmp
stos
sbb
mov
xor
cmp
add
xor
jmp
inc
add
out
push
sbb
sub
repz
ja
pusha
fiaddl
mov
sbb
enter
add
nop
mov
xor
jecxz
jnp
fsub
inc
mov
mov
dec
add
add
cmpsl
mov
mov
lret
js
insb
push
and
cmc
and
aaa
ja
pop
jb
xchg
andb
cltd
icebp
aaa
les
rclb
call
insb
push
pop
stos
jb
push
mov
xlat
add
cmp
lret
jnp
jbe
pop
outsb
fldl
jmp
add
test
shll
mov
mov
pop
jecxz
in
or
int3
add
mov
call
pop
add
push
aas
xorb
add
out
sahf
test
ja
pop
xor
add
fs
rcl
sub
and
cld
pop
aas
in
cmp
mov
mov
mov
sub
or
into
mov
add
or
sahf
test
cli
into
adc
insb
addr16
or
push
xchg
pop
mov
ja
xchg
ficompl
test
push
add
mov
mov
sbb
jns
adc
cmp
dec
stos
imul
popf
orb
and
iret
inc
cwtl
sbb
mov
dec
jp
add
add
and
push
mov
mov
insb
xchg
popf
sub
mov
mov
pop
pop
inc
and
sbb
adc
dec
cmp
mov
pop
das
cmp
xor
dec
fists
dec
cmp
mov
ds
sub
inc
leave
mov
xor
pop
sbb
add
jne
es
mov
cmpsl
insb
xor
insb
imul
cmp
add
add
fcompl
jg
xchg
hlt
pop
jmp
std
int3
sahf
inc
add
es
bound
push
xchg
fisttps
xor
pop
mov
jl
ljmp
seta
lea
cltd
xor
ds
xchg
add
mov
mov
fld
out
jl
add
js
fwait
and
pop
sbb
add
xchg
gs
outsl
cmp
add
stos
dec
js
fdivr
push
pop
adc
addb
pop
inc
cs
sbb
and
add
xor
sub
fs
dec
aam
cmpb
mov
push
add
push
xor
cmp
push
pop
insb
pop
cmp
cmp
xchg
leave
xchg
fcoms
jno
insb
xorb
cmpsb
subb
stc
inc
cli
sarl
mov
add
mov
pop
insl
fidivrs
es
jo
mov
or
xchg
shr
push
inc
scas
lret
dec
sub
dec
repz
and
ljmp
lcall
pop
in
ret
xchg
add
dec
cmc
clc
dec
cli
add
jo
pop
stos
adc
and
int
mov
mov
fidivl
repnz
sahf
adcb
add
sbb
add
jge
dec
inc
pusha
sub
cmc
add
sbb
sbb
orb
mov
icebp
mov
xorl
popw
mov
daa
and
add
mov
sahf
dec
pop
fiaddl
adc
add
push
pop
js
std
mov
add
in
mov
out
imull
scas
or
fs
xchg
shl
push
adc
into
add
shlb
cmc
mov
jbe
inc
orb
pop
lcall
push
jns
xor
aam
popf
pushf
hlt
mov
fldenv
jmp
sub
shll
push
xchg
sub
mov
pop
pop
and
fstpl
clc
cltd
loope
jge
repz
shll
sbb
pop
mov
or
ret
bound
add
inc
inc
unpcklps
add
icebp
cmp
imul
mov
pop
stc
and
push
adc
mov
add
in
or
clc
inc
shl
push
pop
jp
mov
push
or
lret
push
adc
test
and
movb
rclb
fisubrl
sub
sbb
mov
mov
leave
add
mov
jns
mov
ds
loope
or
and
scas
out
jo
and
popa
sbb
adc
lea
add
inc
hlt
rolb
lods
xchg
sub
insb
inc
push
inc
les
push
inc
pop
sbb
and
bound
mov
push
mov
mov
pop
lods
push
test
orl
pop
mov
add
sbb
push
mov
adc
sub
aas
mov
ret
shrl
pushf
insb
push
inc
sbb
cmp
jne
sbb
mov
faddl
pop
outsl
push
imulb
out
inc
add
xchg
adc
lods
pop
inc
add
or
stos
jp
test
inc
daa
and
mov
sub
jp
adc
jbe
mov
pop
mov
pushf
addl
stos
orl
pop
add
shll
and
dec
stos
les
and
icebp
icebp
add
lds
push
push
add
rcll
cmp
jmp
mov
out
mov
pop
xorl
ljmp
mov
or
fildll
daa
dec
sbb
add
mov
push
add
mov
loopne
ljmp
sar
inc
jo
pusha
mov
xor
cli
mov
sub
in
inc
je
imul
and
jecxz
add
iret
push
xchg
data16
mov
jle
stos
test
pop
mov
adc
mov
or
icebp
dec
outsb
xchg
fmulp
clc
das
xlat
mov
insb
lds
pop
addr16
loope
insb
cmp
data16
out
divb
loopne
shlb
mov
sbb
sub
nop
out
cltd
ljmp
inc
pop
stc
mov
in
cmp
xor
pusha
ljmp
out
lock
insb
sub
hlt
and
pop
and
xlat
inc
mov
inc
adc
push
push
xchg
cmp
cvtpi2ps
imul
and
mov
mov
push
mov
clc
add
add
sub
push
inc
dec
icebp
cmp
dec
xchg
or
cmp
push
cmpb
out
dec
test
inc
enter
popf
mov
dec
and
aas
enter
pop
scas
adc
inc
inc
ficoms
cmp
loope
nop
inc
mov
and
add
ja
dec
not
pop
je
sub
xchg
add
int3
iret
mov
lahf
rcl
sbb
push
pop
out
in
ljmp
mov
cmp
inc
lahf
lods
inc
in
cmp
fistpll
jne
cwtl
add
dec
inc
lods
add
sub
cwtl
addb
push
out
in
add
enter
je
popl
cli
outsb
cmp
pushf
insb
inc
aad
cmp
inc
xchg
pop
xor
jnp
out
loopne
insb
jmp
mov
int3
imul
add
aad
nop
push
shlb
loopne
std
js
out
pop
jno
cmp
sub
adc
aas
pop
push
push
mov
js
xchg
js
insl
int
aaa
test
movsb
sbbl
inc
push
dec
imul
cmp
call
mov
cmp
pop
fwait
insb
sub
add
inc
jp
inc
pop
push
jae
sub
sbb
or
pop
push
insb
cmpsb
out
mov
and
jno
push
jnp
mov
arpl
add
dec
mov
push
insb
xchg
daa
and
outsl
jge,pn
je
dec
sub
out
cmp
ret
imul
fcomi
insb
lods
nop
jle
dec
subb
subl
xchg
subps
jnp
inc
xor
stos
fisubrl
out
add
dec
pop
inc
imul
jl
lock
mov
jno
lods
sahf
dec
insb
cmp
and
pop
clc
cmp
xchg
cmp
test
add
stc
mov
imul
push
adc
repnz
jns
push
pop
orb
mov
xor
jmp
mov
and
inc
ret
push
push
adc
jmp
roll
les
mov
mov
filds
shrb
sbb
push
jo
mov
pop
sbb
icebp
outsl
clc
imul
inc
aas
sbb
pop
pop
adc
insb
test
loope,pt
pop
sahf
sub
addb
js
dec
inc
sbb
xchg
test
add
cli
out
pop
es
add
xchg
mov
xchg
sbb
mov
sub
icebp
lahf
fbstp
pop
outsb
push
pop
in
cwtl
xchg
insb
das
gs
push
inc
jle
popf
pop
lds
ljmp
inc
fsubrs
add
xchg
cmpsb
test
ljmp
shl
jns
lods
insb
movsl
mulb
loop
in
add
popa
enter
sbb
mov
xchg
lds
push
pop
pusha
in
icebp
add
insb
movsl
ret
adc
out
rcrb
add
jae
sbb
xor
dec
add
cld
push
jmp
pop
lock
mov
movb
jp
sub
pop
das
mov
insb
rclb
jbe
add
divl
fxch
outsl
sbb
inc
pop
jbe
loope
pusha
cmp
aaa
inc
mov
insl
xchg
jo
pop
test
mov
adc
and
lcall
adc
shrb
jno
sti
test
cmp
mov
shl
xor
pop
into
add
mov
inc
mov
scas
lea
scas
iret
push
testb
pop
sar
adcl
cld
or
inc
fs
inc
clc
test
dec
stos
mov
add
movsb
xchg
leave
xchg
mov
fstpl
movsl
pop
jecxz
push
or
or
pop
or
out
ltr
jb
cmp
inc
push
inc
cmp
fcomps
add
iret
pop
pop
push
aas
lds
les
adc
jp
push
rcr
fwait
loope
js
lret
jmp
inc
fcomps
xor
pop
lods
add
adc
loop
fstps
lret
jbe
out
mov
insl
rcll
add
or
ljmp
xlat
add
jo
shrb
add
loope
insb
lcall
repz
cmc
adc
insl
inc
bnd
dec
clc
xor
jmp
jno
rorb
push
lahf
dec
call
ret
add
dec
pushf
push
in
cmp
mov
pop
into
std
enter
out
pop
loopne
inc
ja
or
push
mov
or
imul
sub
cs
mov
push
xor
pusha
push
sub
or
ss
pop
pushf
arpl
push
into
jge
cwtl
add
sub
mov
in
je
cmp
out
ljmp
adc
mov
and
add
cld
mov
and
outsl
mov
call
cmp
xor
pop
pop
sbb
xchg
sub
les
stos
rol
cmpsl
pop
imul
sub
jb
ss
das
cli
adc
aad
or
adc
pop
sub
enter
fwait
sub
enter
in
icebp
dec
pop
std
test
pop
daa
adc
add
jg
repnz
pop
mov
adc
add
movsl
and
add
in
jno
arpl
out
fs
shll
and
add
jg
cld
dec
mov
pushf
push
jnp
inc
in
push
pusha
mov
fnstcw
clc
and
ljmp
insb
adc
cmc
lcall
int3
jne
mov
sub
adc
push
daa
test
jb
pop
jg
jb
add
mov
mov
sbb
mov
xchg
add
aam
xor
push
inc
fnstsw
adc
push
push
pop
std
in
test
push
repz
shl
cmp
add
dec
mov
push
sbb
mov
movsl
push
or
dec
sbb
inc
test
jno
lds
adc
fs
out
jl
sbb
add
in
push
sub
xor
imul
lock
pop
lret
lea
ja
ss
and
or
sbb
add
or
enter
and
movsl
add
insb
cmp
cmp
or
repnz
push
mov
clc
movsl
mov
sub
dec
loopne
sbb
inc
dec
jecxz
add
dec
into
jns
rclb
push
int3
mov
cld
sub
rol
out
lahf
or
popf
out
xor
loopne
pop
lahf
or
pop
imul
jne
out
mov
inc
rcll
push
mov
cmpsl
test
stos
fcmovnb
loope
mov
pop
iret
and
fisttpl
rclb
hlt
inc
ljmp
mov
imul
add
xchg
xchg
sub
aam
shlb
add
ret
fcompl
repz
pop
cmpsl
add
rclb
lock
push
popf
out
xor
or
jg
test
insb
es
call
test
pop
xchg
aas
lret
test
rcrb
ja
push
or
xchg
lods
std
add
das
pop
xchg
mov
stc
subb
loopne
pop
xor
jl
pop
push
lods
jl
movsl
in
std
jae
xor
aad
cmp
add
xchg
mov
in
insb
jo
and
mov
ds
sahf
lods
dec
lods
aaa
jg
hlt
js
fcom
outsl
push
add
shlb
scas
pop
adc
push
push
int3
jnp
insb
cmp
sbbb
int3
out
movsl
mov
outsb
jecxz
scas
pop
pop
mov
xor
enter
add
sub
lock
add
in
sub
shrb
sbb
mov
mov
mov
xor
rcrl
xchg
sbb
and
out
test
sbb
jno
sbb
mov
sbb
inc
inc
pop
daa
adc
shr
addl
adc
sub
push
xor
inc
in
movsb
lea
jge
add
outsl
xchg
lret
add
mov
iret
push
push
rorb
add
je
jmp
lock
rcrb
repz
add
and
dec
int
xchg
adc
outsb
js
jo
je
push
pop
and
and
add
ds
daa
xorb
add
fidivrs
xor
xor
inc
movsb
mov
add
lds
popa
cmc
sarl
flds
hlt
fs
icebp
mov
mov
adc
mov
add
lods
cs
or
ficomps
addr16
or
insl
pop
mov
cmpsb
movsb
xchg
add
jb
insb
lock
sub
in
xchg
push
cld
iret
aas
fildl
mov
mov
pop
call
add
and
pop
cmp
sbb
sbb
mov
lock
fcoms
test
xor
jmp
sub
pop
shlb
adc
mov
nop
pop
insb
mov
xor
add
stos
out
fiaddl
fucomp
clc
xchg
push
jno
xor
sbb
mov
or
cli
sbb
inc
pop
and
jg
incb
andl
sahf
xor
add
dec
pushl
pop
ror
jne
adc
push
pop
push
in
dec
cmp
test
bound
xchg
test
mov
xchg
loop
mov
jo
arpl
iret
inc
sbb
jo
xchg
stc
subl
stos
rcrb
add
cli
jmp
mov
iret
bswap
insl
sub
add
pop
xchg
fistpl
bound
xchg
jge
loop
cmp
in
add
sub
in
sub
stc
add
lcall
jns
lods
pop
fnsave
ljmp
add
test
fisttps
ficomps
in
sub
in
insb
lret
jmp
js
pop
xor
cmp
cmpsl
jnp
insl
push
iret
add
mov
xor
sub
sbb
push
mov
xor
push
add
or
aad
xchg
decl
mov
lahf
add
movsb
xchg
push
sbb
jbe
xor
xchg
lods
pusha
lcall
ja
cli
es
push
pop
mov
dec
add
in
aam
mov
sub
pusha
filds
pushf
add
xchg
adc
dec
add
lods
add
testb
das
mov
sub
lret
cwtl
sti
lods
push
fldl
lds
adc
arpl
ljmp
or
pop
mov
insb
xor
or
dec
xchg
and
adc
dec
aaa
ss
sbb
mov
and
into
add
cld
inc
testb
rcrb
pop
cmp
mov
pop
add
jmp
mov
fs
mov
pminub
mov
or
mov
push
xor
enter
dec
dec
aad
add
mov
jg
xchg
add
inc
test
push
jmp
add
inc
mov
pop
cmp
jno
mov
mov
in
rorl
pop
xlat
mov
insb
push
out
ret
inc
pop
shr
mov
mov
sub
lahf
stos
and
push
or
notl
insb
push
sub
jle
xor
inc
fcoml
add
or
movsb
jno
mov
sbb
pop
dec
stc
insb
icebp
fnsave
push
clc
xchg
into
mov
fsubs
mov
lret
sbb
rorb
ret
xchg
ds
add
test
sub
dec
mov
jp
push
pop
and
subl
and
xor
xor
mov
daa
or
add
frndint
in
mov
mov
enter
add
add
scas
xor
or
das
add
loop
insb
and
mov
inc
adc
jbe
pusha
add
rorl
pop
sti
mov
xor
xchg
jno
mov
lock
add
inc
mov
jecxz
orb
mov
add
xchg
or
jmp
cmp
jae
mov
jle
rclb
and
pop
lahf
daa
rclb
jne
mov
lods
insl
out
push
jmp
orb
adc
movsl
push
push
fcoms
ret
lock
adc
cltd
test
inc
fidivrl
xchg
rorb
jb
push
scas
add
out
jns
mov
add
push
pop
xlat
data16
loop
js
sti
add
mov
xor
pusha
xchg
jl
sub
pop
aas
push
mov
inc
call
push
repnz
mov
xchg
fnstsw
es
cmpsb
mov
cwtl
arpl
shl
adc
jmp
add
push
pushf
and
int
or
imul
sbb
inc
dec
mov
jo
sti
jp
push
or
mov
xchg
lea
xchg
mov
imul
lds
jmp
pop
push
scas
adc
int3
insb
aam
dec
mov
and
push
pop
jl
repnz
ss
cmpsl
add
or
add
fxam
test
jo
jmp
dec
ffreep
imul
popf
adc
fsubrl
jo
dec
and
xchg
lods
xchg
add
or
fistpl
inc
and
xlat
adc
sbb
cmp
mov
add
inc
adcb
cmp
addr16
lret
pop
add
push
pop
lret
sbb
lahf
loopne
pop
adc
insb
adc
stos
int3
or
lahf
jne
adc
cmp
pop
cmp
lret
ds
sbb
add
inc
cmp
aad
inc
arpl
insb
mov
inc
push
pop
cmp
ficompl
sub
pop
iret
dec
ds
bound
dec
mov
mov
call
cmpsb
add
fisttps
cwtl
fldl
mov
and
add
xchg
adcb
out
insb
pop
mov
movsb
push
xchg
mov
dec
iret
les
jo
mov
add
inc
fcomp
adc
inc
ror
imul
push
dec
xchg
pop
insb
scas
sbb
pop
add
jmp
in
and
in
les
add
mov
jge
cwtl
or
insb
add
inc
mov
jno
cmp
mov
rolb
hlt
add
jg
mov
xchg
pop
insb
jb
aad
sbb
inc
scas
inc
push
pop
fnstcw
mov
mov
movb
push
adc
add
enter
std
add
xor
fcomps
xchg
add
into
lahf
nop
mov
aaa
adc
cmp
push
xor
sldt
push
cmpsb
xchg
scas
xchg
mov
push
call
and
stc
out
cld
mov
fiadds
dec
push
cmp
insb
stc
mov
sbb
sub
pop
fst
and
pop
xlat
sti
int
inc
aam
inc
sub
dec
sbb
arpl
stos
loopne
frstor
jb
sub
popa
leave
cli
inc
cmp
dec
add
sub
daa
add
repnz
xchg
sub
mov
xchg
pop
inc
cmp
scas
push
adc
mov
mov
insb
adc
rclb
je
pop
or
pusha
pop
int
sub
xorb
testl
fdiv
pop
sub
cmpsl
dec
add
inc
imul
rcrb
inc
or
adc
fisttps
imul
popf
xchg
sbb
sbb
jae
fildll
pop
adc
cli
int
add
shrb
fdivrs
imul
and
mov
rcrl
call
ret
pop
leave
addr16
sbbb
fisubl
das
divb
adc
cmp
pop
push
pop
lcall
jecxz
push
fs
pop
jle
push
imul
adc
nop
mov
scas
je
mov
add
adc
daa
add
sbb
ljmp
iret
and
dec
push
pop
xor
jnp
add
jge
roll
leave
cmp
xchg
insl
outsb
add
mov
test
scas
jge
pop
popl
push
aaa
ret
xchg
adc
imul
xor
or
xor
or
movsb
cmp
cmp
repnz
mov
add
pop
nop
js
daa
add
leave
test
dec
mov
mov
mov
int
push
outsl
adc
les
cmp
in
shlb
push
daa
push
sbb
inc
inc
lahf
add
enter
fisttps
pop
movsl
ljmp
add
das
repz
mov
aaa
sbb
outsb
sub
jmp
and
sub
mov
cli
push
div
fildl
jge
xchg
add
xchg
mov
lcall
pop
insb
in
cmpsb
cmpsl
add
pop
jl
pop
cmp
jb
sbb
and
dec
ret
int3
adc
mov
add
insl
aaa
repnz
jp
clc
sub
push
dec
jae
xor
sub
in
cltd
out
addl
jl
push
or
cmp
bound
dec
push
mov
out
sbb
lret
adc
ljmp
adcl
add
lock
pop
jl,pn
xorps
mov
push
jns
lcall
add
cmp
xchg
jo
dec
mov
push
sub
or
push
adc
inc
push
push
pop
shll
iret
sti
dec
imul
push
repz
cmpl
jo
gs
sbb
ja
jmp
add
sbb
clc
loop
push
cwtl
xorb
lods
cmp
enter
insb
lock
inc
adc
push
jl
inc
adc
cmpsb
callw
adc
push
lcall
pop
mov
pusha
test
mov
push
fwait
xchg
pop
and
push
sub
loopne
scas
fnstenv
rcrb
movsb
fimuls
aad
sub
and
sti
add
sub
cmpsb
cmp
testl
push
ds
inc
mov
mov
inc
mov
shlb
cwtl
add
inc
jmp
daa
subl
jmp
rorb
in
sbb
lret
addl
sbb
push
lods
cmp
pop
dec
lcall
hlt
mov
sub
pop
xchg
aad
pop
stc
icebp
or
jge
add
sub
add
cmp
into
add
push
jp
ljmp
sub
dec
mov
cmpsl
inc
mov
adc
add
inc
jae
iret
mov
loopne
das
add
jne
std
cwtl
push
lea
pop
sbb
jns
sbb
fmull
into
mov
xchg
test
pusha
nop
pop
mov
mov
addb
repz
sahf
les
jo
jmp
and
push
add
and
dec
lods
pop
push
testb
push
adc
shrl
cld
movsl
out
mov
lods
inc
stos
jl
in
sub
xor
cld
pop
sub
dec
popf
lods
adc
xchg
loop
jmp
cmp
or
scas
push
pop
std
pop
imul
out
adc
inc
push
add
add
cmc
popa
aaa
add
adc
cmp
mov
xchg
pop
or
mov
mov
pop
pop
or
jp
inc
add
lret
add
cmpb
cmpsl
rep
test
xchg
add
xchg
rcrl
jg
stos
cmp
mov
mov
cmpsl
out
cs
inc
iret
fadds
adc
and
movsb
push
sbbb
add
test
xchg
js
imul
sbbl
pop
xchg
add
rcr
adc
insb
pop
pop
xchg
pop
pop
cli
clc
test
add
outsl
push
in
or
jmp
pop
outsb
mov
rorb
out
cmp
sbb
mov
add
lock
insb
sub
jle
pop
mov
jmp
jle
decb
das
add
fists
in
add
pop
fistps
push
sub
add
xor
sbb
hlt
cld
mov
mov
iret
aaa
insb
mov
dec
sbb
mov
or
sub
cltd
insl
push
std
mov
and
sbb
repnz
fiaddl
adc
push
aad
cmp
pop
pushf
leave
pushf
or
iret
stos
pop
js
adc
in
add
cmp
dec
adc
aad
dec
adc
bound
mov
mov
add
inc
xor
out
jnp
fsub
jle
jno
je
lods
mov
fildl
sbb
sub
bound
test
je
jg
cmp
outsl
scas
sahf
aaa
dec
add
aas
lea
adc
pop
xor
mov
xchg
add
leave
xchg
insb
or
in
add
lret
outsl
mov
mov
jg
add
shl
ret
bound
ss
pop
lret
enter
cli
add
jg
repnz
sub
loopne
push
out
mov
sbbb
rorb
mov
imul
sti
sbb
inc
push
inc
pop
cld
or
and
push
sbb
adc
bound
ret
push
hlt
cmp
add
mov
adc
hlt
insb
adc
add
fs
add
add
std
jb
in
add
pop
push
test
adc
or
push
xchg
mov
push
data16
enter
and
inc
decl
test
shlb
sbb
xor
outsl
xchg
in
or
scas
cld
lcall
das
push
bound
pop
mov
pop
push
sahf
test
sti
out
ss
push
adc
xchg
imul
aad
into
adc
enter
push
xor
bound
jmp
pop
push
jae
aas
or
shll
insb
pop
sub
sub
or
inc
pop
leave
sbb
mov
mov
cmp
insl
pop
adc
repnz
xchg
pushf
dec
and
sbb
lods
les
dec
inc
outsb
jecxz
repnz
clc
fsubl
pop
xchg
movsl
push
les
pop
mov
daa
test
mov
pop
add
jne
jno
sub
shl
cmpsb
mov
pop
push
mov
xchg
lods
int3
pop
xor
fildl
sub
bound
push
jmp
and
pop
fistpl
lahf
int3
imul
pop
add
xor
test
repz
add
fwait
push
pop
popa
adc
loopne
pusha
sbb
add
popf
cmp
pop
jmp
aaa
arpl
in
outsb
int3
bound
sub
lods
xchg
ficompl
pusha
push
push
jnp
iret
and
js
lods
mov
or
idiv
lods
in
push
mov
dec
add
popl
flds
imul
and
pop
or
mov
add
cmp
ret
sbb
xchg
mov
add
cmc
xchg
jno
jnp
lods
leave
sub
xor
xchg
add
cmp
dec
scas
je
enter
mov
jge
mov
xchg
and
out
sbb
cmp
sub
pop
pop
ljmp
add
sbb
jge
jge
std
cmc
add
in
cmp
scas
dec
outsb
pop
xlat
icebp
cmp
add
and
shrb
shll
push
push
pop
js
add
jmp
add
out
clc
add
adc
mov
insb
repz
insl
in
xchg
or
jecxz
sahf
pop
push
sbb
ljmp
cli
jbe
shlb
mov
shrl
jne
popa
pop
dec
push
pushf
jae
sub
enter
sub
insb
xchg
sub
mov
xor
clc
loopne
sbb
cli
pop
jg
adc
movsl
rcrl
add
push
cmp
imul
mov
cmp
xor
pop
pop
jb
insb
stos
mov
stc
dec
mov
add
jle
sti
sbb
add
sub
rclb
mov
add
push
test
push
pop
loopne
push
jo
sub
mov
push
jg
add
mov
rolb
jg
sahf
or
bound
sub
and
add
sub
jecxz
aaa
pop
insb
xchg
in
adc
add
pop
mov
js
push
jp
lcall
imul
scas
add
arpl
fistps
jle
sub
in
add
mov
or
jne
jp
mov
add
add
xchg
shll
insb
mov
jmp
sbb
inc
xlat
xlat
jmp
lods
ss
adc
and
in
adc
mov
je
popa
xor
add
or
daa
insl
sbb
jno
dec
xor
pop
call
and
bound
add
pop
gs
daa
fsubr
dec
or
push
dec
cld
push
in
pextrw
es
pop
int3
push
loope
jg,pt
pop
sub
mov
cmp
push
add
sahf
add
or
jo
xchg
add
imul
gs
lcall
inc
mov
add
fldt
jb
pop
insb
mov
shll
jae
loop
jge
cmp
mov
hlt
inc
into
add
lahf
iret
js
enter
adc
lahf
or
shll
out
adc
addr16
and
insl
mov
pop
ljmp
rolb
push
sbb
cld
scas
push
call
push
bound
mov
dec
arpl
in
inc
in
pushl
push
xchg
filds
mov
sahf
or
insb
or
push
add
pop
pop
cmpsl
in
dec
jp
push
mov
inc
cmp
sbb
xchg
jg
or
iret
push
lret
mov
out
mov
addr16
add
std
orl
mov
cld
or
sti
scas
add
add
adc
out
mov
jno
ret
mov
pop
jbe
mov
lock
or
ljmp
incl
pushf
xchg
add
push
aad
fldt
pop
sbb
push
daa
xor
es
pop
addb
xor
in
push
test
mov
mov
dec
cli
test
outsl
jmp
dec
test
adc
mov
push
add
test
add
jno
stc
push
jmp
and
call
jp
xchg
dec
into
out
pop
repnz
pushf
loope
repz
inc
add
mov
insb
int
sub
mov
xchg
cmp
cmp
and
adc
pop
add
clc
push
pop
mov
inc
sbb
mov
sub
loop
out
rclb
test
lock
push
mov
xor
inc
out
sub
incb
mov
or
int3
lods
fimull
rclb
movsl
insb
push
iret
outsl
mov
dec
stos
insl
push
push
test
jae
ds
inc
pop
sbb
out
addr16
cmp
jbe
pop
in
das
push
rcll
xchg
mull
into
addb
adc
xor
cli
mov
or
cld
mov
add
or
adcl
pop
xchg
adc
lcall
pushf
mov
iret
pop
push
inc
cmp
sbb
pop
pcmpgtb
in
mov
push
ds
pop
cmp
sbb
shrb
imul
mov
dec
pop
shrb
mov
cwtl
and
insb
imul
mov
lea
pushl
fiadds
lahf
stc
xchg
imul
mov
ror
add
pop
cmpsb
add
filds
aas
loop
pusha
jno
cmp
xor
or
push
insb
mov
add
loop
repz
sbb
pop
les
and
dec
add
sti
andl
insb
rorl
enter
pop
xchg
mov
add
repnz
fwait
ror
mov
push
icebp
pop
inc
pop
xchg
fs
les
leave
arpl
insl
dec
sbb
lock
je
cmp
and
xchg
pop
cmp
fwait
js
movl
in
push
add
mov
nop
loopne
inc
add
mov
in
mov
negl
insb
repz
into
cmp
lds
push
movsb
mov
add
xor
stc
sbb
xor
sarb
mov
cmpsb
fistl
adc
call
andb
test
and
dec
sbb
jmp
das
push
lahf
fcoml
ja
enter
xchg
xchg
scas
imul
sub
aam
outsb
rcrb
imul
enter
cmp
add
dec
in
orl
repz
data16
mov
outsb
xor
int
dec
cmp
sahf
add
jecxz
vminss
mov
mov
rcll
and
cmp
dec
rclb
jecxz
xchg
add
mov
mov
add
push
cmp
out
das
mov
inc
rcrb
mov
and
rcrl
test
xor
pop
sub
or
and
sbb
lods
fists
adc
std
xor
cli
lock
add
in
iret
stc
pop
mov
lcall
pop
add
int
pop
hlt
rcrb
insl
jns
pop
daa
xchg
mov
movsb
fwait
bound
cmp
push
sahf
pop
pop
mov
insb
pop
lret
movsl
add
in
jp
jl
in
andb
mov
bound
mov
push
movsb
hlt
stc
pop
xchg
int
dec
out
mov
pop
mov
call
add
decl
pop
adc
mov
insb
and
add
mov
adc
mov
adc
daa
push
add
xchg
adc
adc
ret
js
movsb
rolb
inc
xchg
stos
stc
pusha
cmp
mov
std
mov
and
insl
in
mov
gs
insb
fwait
out
cmc
cmpl
inc
xchg
stos
cmpsb
cmpb
out
arpl
arpl
movsb
fs
pop
mov
mov
inc
loopne
dec
lret
bound
arpl
popf
or
jae
and
xlat
pop
and
das
push
push
add
fdivs
pop
add
mov
pop
push
pop
popf
inc
or
adcl
jp
test
lret
ja
pop
pop
insb
push
sub
and
inc
mov
out
mov
fildll
add
cmp
test
test
or
cmp
sar
aad
push
pop
scas
jnp
stos
inc
or
aad
stc
mov
hlt
dec
jp
and
cmpsl
out
insb
fimuls
sbb
mov
add
xlat
in
add
fildl
sbb
rcrb
ja
xor
pushl
clc
add
xchg
int
imul
xchg
insb
vpackssdw
jnp
lret
jo
push
add
jnp
xchg
and
ja
outsl
ud0
iret
movsl
add
out
and
lods
jnp
mov
outsb
mov
add
je
outsl
add
cmp
xchg
add
mov
movsb
pop
add
jl
sbb
sbb
cmp
add
ror
dec
insb
stos
ss
shrl
fwait
mull
mov
push
or
pop
xchg
sbb
std
sub
xchg
pop
jno
test
xchg
sbb
jmp
into
insb
je
lahf
inc
add
iret
jns
or
mov
xlat
mov
adc
cld
dec
idivb
mov
add
add
pop
pop
cmp
leave
xor
sub
int
outsl
ss
div
aad
mov
mov
inc
int3
ror
cli
cmpb
and
push
add
enter
add
or
xor
fsubl
mov
dec
mov
inc
jl
loop
cmp
fisubs
in
adc
test
xchg
bound
pop
neg
dec
xor
mov
movsb
and
jmp
imul
in
adc
out
inc
jl
add
lret
in
data16
loop
icebp
lea
pop
shlb
cltd
and
cmp
out
divl
pop
adc
inc
push
fsubl
add
shr
stos
or
imul
icebp
pop
add
jp
movsl
jbe
mov
rcr
orb
fs
add
add
cli
push
jl
add
jle
repnz
hlt
pop
adc
sub
jno
or
sub
jecxz
adc
add
or
repz
fmulp
cmc
in
cmc
or
pop
push
out
mov
arpl
push
pop
or
andb
cmp
sbb
lock
mov
andb
aam
push
pop
fwait
out
aas
mov
arpl
add
adc
sbb
shll
mov
push
xchg
stos
sbb
dec
push
push
insl
mov
xchg
shlb
fcoml
mov
add
pop
push
subl
add
xchg
adc
insb
xchg
das
popf
mov
jne
sbb
cld
and
cli
mov
repz
mov
movl
arpl
dec
stc
insb
mov
dec
loopne
mov
jmp
or
cmp
popa
std
js
and
jmp
repz
and
iret
add
je
cwtl
add
mov
cmp
cmp
movsl
push
out
test
sbb
mov
push
push
and
nop
add
ja
add
jnp
xor
lock
push
or
mov
cld
aaa
adc
or
push
sub
subl
js
xor
sahf
insb
stos
dec
adc
adc
mov
or
jg
lahf
add
add
aaa
add
xor
fdivs
adc
xchg
mov
sbb
stos
xchg
add
mov
pop
mov
push
aad
mov
inc
and
int3
add
mov
xor
enter
mov
pop
pop
enter
and
cltd
mov
pop
or
inc
les
xchg
add
cli
xorb
cld
push
imul
mov
push
cwtl
cmp
jl
das
add
dec
adc
sbb
sbb
lods
mov
xor
test
jmp
aam
jg
imul
iret
insb
loopne
add
xor
iret
xchg
out
and
and
xchg
mov
das
inc
and
negb
dec
add
icebp
adc
mov
insl
mov
out
sti
shll
dec
pop
xor
jb
rolb
movsl
enter
push
mov
lcall
int3
outsl
pop
mov
enter
add
push
cmp
jl
jge
adc
jnp
mov
add
pop
adc
xor
dec
lcall
lock
std
icebp
add
cmpsb
in
shlb
sbb
add
jg
stc
mov
iret
inc
insb
jmp
ficoms
cmc
insl
add
xor
jl
es
push
inc
lea
and
out
or
jae
fsub
lahf
xor
js
imul
xchg
inc
idivl
sub
testl
fnstsw
enter
jbe
sbb
pop
push
jle
mov
sub
subl
dec
popf
sub
push
mov
or
popa
ja
shlb
sub
cli
adc
mov
jnp
test
in
xor
add
jne
push
pop
inc
and
pop
test
outsl
pop
pusha
mov
lahf
pop
push
and
sub
mov
push
lods
pop
jg
push
stos
jne
mov
fdivr
mov
sbb
add
jp
scas
fsubl
jne
loopne
dec
insb
ljmp
outsb
pop
aaa
insb
lret
aas
fidivs
clc
inc
dec
icebp
and
add
stos
mov
pop
lds
leave
insb
or
sub
or
push
lcall
in
or
xchg
push
cli
sub
mov
movsb
hlt
fucomip
je
rcrb
sbb
cmp
or
cmp
ljmp
test
in
and
push
mov
jp
imulb
cmp
pop
stc
insb
jnp
push
cmpsb
sub
add
mov
inc
jbe
int
push
pop
cmp
mov
add
sub
push
mov
out
add
jmp
adc
enter
repz
jge
les
mov
outsl
mov
fnstcw
je
aam
lea
xchg
in
jbe
mov
insb
mov
ljmp
lret
imul
insb
scas
mov
dec
mov
pop
pop
xchg
and
inc
cs
scas
pop
inc
insl
adc
mov
int3
add
add
insb
ss
jb
or
mov
mov
pop
add
push
sbb
out
xchg
jle
jmp
adcl
icebp
mov
push
and
je
and
insb
and
aas
movb
xor
cmp
pop
inc
push
ljmp
stos
in
leave
repz
ja
sub
insb
push
bound
repnz
repnz
inc
pop
div
sub
lock
stos
mov
pusha
fcmovne
jnp
mov
add
mov
and
shlb
and
inc
insb
out
dec
mov
cli
imul
pop
xlat
lahf
pop
cli
adc
add
adc
or
test
mov
aas
out
pop
xor
adc
dec
fldenv
sbb
out
dec
out
cwtl
lahf
ds
mov
adc
dec
ret
test
mov
shll
sbb
popf
mov
inc
lahf
test
incl
mov
ds
lock
int3
mov
insb
jge
iret
pop
sub
cwtl
pop
sub
jb
cmp
push
cs
ss
pop
push
mov
jg
mov
insb
jecxz
xchg
xchg
scas
and
ficomps
push
cltd
pop
add
in
lds
xchg
fistps
stc
pop
cmp
xchg
popa
rcr
insb
jae
sbb
cld
pop
in
dec
inc
pushf
and
add
pop
insl
mov
and
repnz
stos
outsb
inc
pop
pop
movsl
outsl
pop
pop
jmp
mov
mov
lds
xchg
sbb
pop
push
fs
int
push
jb
xchg
or
dec
cmp
test
or
in
lret
inc
adc
dec
mov
jge
in
movsb
push
push
xlat
cmp
rcrb
cmp
sbb
cwtl
sbb
xlat
pop
stos
fs
adc
sbb
add
js
pop
and
arpl
stc
insb
test
fldl
in
adc
or
cld
sbb
push
push
js
insb
fs
movsb
push
fcoml
jl
sbbl
insl
and
or
or
jo
pop
ss
mov
shll
jle
push
shrl
cmp
xchg
add
xchg
add
imul
mov
mov
aaa
xor
icebp
jg
je
lods
add
repnz
pop
dec
adc
arpl
mov
out
push
sbb
mov
add
gs
push
iret
mov
push
inc
mov
xlat
repnz
jo
pop
mov
add
pop
xor
add
icebp
jb
adc
adc
lds
sub
fwait
test
mov
insb
dec
imul
stc
aam
inc
pop
and
add
int
xchg
daa
subl
dec
xchg
lods
fnstsw
and
jbe
cmp
pop
mov
sbb
dec
movsl
fistl
add
sti
aas
mov
push
cmp
inc
pop
das
mov
jg
stos
cmpsl
jae
daa
xchg
and
sbb
mov
adc
inc
insl
or
aas
dec
or
dec
enter
jo
ror
sub
mov
sbb
jnp
pop
les
das
insb
sbb
cmp
jmp
pop
movl
add
iret
or
es
ret
fists
add
or
loopne
iret
aad
imul
pushf
adc
jge
cmp
dec
int3
adc
xchg
add
jp
or
fcmovu
mov
cli
enter
pushf
mov
push
jno
push
mov
subb
andl
rolb
inc
cmp
stc
fisttpl
add
daa
and
stos
push
add
mov
enter
das
pop
les
ficompl
psllw
jp
insb
dec
fst
jp
adc
push
add
lret
pcmpeqb
nop
scas
hlt
in
push
and
pop
inc
pop
add
mov
call
mov
or
mov
aam
or
jmp
sbb
push
pop
into
cmp
jge
mov
stc
push
and
adc
in
call
lods
movsb
add
sub
pushf
adc
lahf
mov
push
cs
sub
int
ret
fildl
push
lcall
add
fdivl
sahf
imul
aam
stc
adc
shll
popa
xor
xchg
repnz
mov
popa
jbe
mov
xorl
sahf
movsl
out
push
add
paddb
imul
jge
or
dec
out
test
xor
test
sti
add
add
int
sti
add
repnz
pop
fwait
and
loop
fs
inc
mov
aad
iret
jo
in
or
xchg
mov
lods
data16
push
jo
scas
fdivs
xor
xchg
jb
insl
adc
push
or
filds
test
scas
push
leave
test
mov
or
ficompl
ljmp
cltd
add
adc
pop
mov
or
fidivs
outsl
add
out
sbb
dec
scas
leave
add
push
inc
mov
jle
cmp
and
adc
insb
push
sbb
int
inc
daa
in
mov
repnz
scas
or
iret
pop
jb
sub
insb
imull
pop
and
inc
ret
pop
xor
out
in
ljmp
jns
push
aaa
adc
sarb
fsubrp
push
xchg
into
cmp
pusha
ljmp
pop
ss
in
cli
int3
mov
pop
sti
jle
inc
or
lahf
je
adc
add
inc
lret
add
in
js
mulb
call
or
push
rol
sub
das
fstl
movsb
jp
add
insb
sbb
call
cli
pop
xchg
sbb
dec
add
and
movsl
jno
push
sub
or
push
jle
stos
bound
comiss
xchg
lds
fnsave
cmp
add
inc
push
jae
out
in
nop
xchg
dec
add
lcall
fcmovnb
out
push
lock
lcall
adc
push
add
and
pop
jl
pushf
daa
add
or
das
mov
fs
insb
dec
cmpsb
add
fstps
clc
and
cmp
mov
or
sub
and
test
shl
mov
cwtl
iret
add
stos
int
test
stos
inc
fisubrs
mov
arpl
sbbl
popf
cli
testl
mov
jo
add
pop
xor
je
cmpsb
insb
xchg
pop
mov
add
movsl
mov
push
xchg
mov
fnstsw
push
movsl
jo
addps
and
pop
lret
add
enter
xchg
sub
imul
sbb
fs
or
adcb
pop
call
sub
imul
stos
outsb
rolb
pop
add
or
fucomi
ficomps
or
pop
int3
push
pop
and
push
mov
add
cmp
out
leave
jne
xor
mov
sbb
inc
jo
xchg
in
adc
fs
ja
pop
lea
imul
xchg
push
xor
into
add
jns
jecxz
aam
pop
es
or
cmp
cmpsl
loopne
insb
sub
std
inc
pop
sahf
cwtl
lret
jmp
mov
nop
adc
mov
out
mov
adc
pusha
jl
aaa
aas
adc
mov
add
popf
xchg
negl
mov
fnstcw
jnp
jmp
dec
dec
mov
add
pop
cld
inc
mov
cmp
orl
pop
data16
loopne
repz
test
iret
insb
leave
cmp
push
pop
out
outsb
clc
push
push
rorb
xchg
scas
sti
push
js
dec
add
or
andb
mov
arpl
lock
sbb
sub
add
cli
pop
in
shll
add
ja
or
xchg
mov
push
push
sahf
rcrl
push
xchg
mov
clc
pop
hlt
fmull
mov
pop
add
outsl
daa
fsubl
cmc
cs
add
mov
mov
add
inc
lea
mov
popf
mov
inc
sbb
push
adc
pop
jo
pushf
addr16
fwait
jp
subl
gs
insb
push
cmpsb
mov
adc
mov
out
sbb
xor
sbbb
lock
add
in
sub
filds
insb
mov
sbb
or
adc
repnz
js
add
nop
xchg
aas
xor
ret
fisubs
push
rcll
add
adc
sub
jl
or
aam
push
fwait
add
movsl
xor
cmpsl
push
dec
mov
xchg
lock
stc
add
xlat
mov
test
popa
mov
add
xchg
fisttps
daa
das
pop
jo
push
xchg
fstp
aaa
lds
and
insb
xchg
mov
mov
pop
pop
and
add
add
test
sub
dec
nop
mov
add
sub
mov
push
pusha
cmpsl
jp
inc
inc
out
vmovlps
mov
add
inc
stos
subb
or
test
shlb
mov
add
or
ret
push
cmpb
mov
les
sub
or
rclb
xor
mov
mov
add
push
sbb
aas
jae,pn
sarl
and
and
or
pop
jecxz
insb
rolb
ret
cmp
push
add
inc
roll
xchg
pop
mov
jns
cmpsl
mov
and
xlat
xchg
xchg
insl
inc
jecxz
or
add
cli
aas
inc
push
xchg
fmull
inc
adc
fistpl
mov
int3
mov
add
sahf
push
sbbb
xor
notl
push
jmp
jg
pop
outsl
jg
and
xor
or
xchg
sbb
add
clc
loop
insb
adc
test
add
jns
xor
add
aam
pop
mov
dec
fstl
cmp
mov
loope
pushf
cmpsb
pushf
add
mov
mov
pop
xchg
negb
mov
incl
xor
out
and
bound
jbe
mov
push
popa
sub
shlb
lret
addr16
jo
jns
shlb
lahf
cld
addb
addr16
ret
je
add
jne
arpl
xacquire
inc
stc
push
or
outsb
inc
roll
je
add
iret
mov
xchg
in
push
jae
pop
dec
inc
lcall
push
push
mov
xchg
stos
mov
push
push
cltd
mov
sbb
adc
aas
in
cmp
outsb
add
insb
into
push
jge
push
movsb
jle
nop
rcrb
or
sbb
xchg
test
dec
mov
mov
adcl
mov
fcoml
imul
inc
and
icebp
mov
fadds
test
mov
sti
mov
jo
mov
mov
jecxz
mov
cmp
insb
pop
ret
pop
pop
pop
pop
jle
fidivrs
mov
jg
insb
movsb
mov
pop
or
xor
add
mov
sub
enter
dec
hlt
cltd
or
fdivrl
pop
cmpl
insl
add
add
cmp
fidivrl
and
add
adc
addb
adc
mov
in
add
and
fs
stos
movsl
mov
stc
add
xorl
add
xchg
in
xchg
aaa
je
xchg
lret
push
loop
sub
pop
add
inc
frstpm(287
xchg
pop
jnp,pt
scas
cmp
and
bnd
lods
insb
ror
and
and
dec
cmpsl
out
test
sbb
jle
xor
lahf
cmc
test
out
ficoml
pop
pusha
mov
test
pop
push
mov
ret
jp
or
push
gs
jno
shlb
fcomip
daa
push
add
xchg
pushf
dec
out
frstor
add
out
insb
stos
lret
jno
imul
add
xor
and
cmp
stos
imul
cld
mov
inc
and
mov
shll
add
je
fisubrs
cmp
pop
dec
outsl
clc
cld
lcall
xor
inc
and
insb
inc
jns
pop
push
sbb
pop
xor
ret
subb
rcrb
and
pop
pusha
cli
inc
int3
scas
jl
inc
add
jge
std
or
adc
adc
pop
sub
dec
movb
stos
and
jae
fwait
add
sub
fisubrs
ror
cs
adc
mov
rcll
mov
mov
inc
mov
add
cmpsb
sub
sbb
dec
xchg
pop
pop
jnp
aas
rorl
lock
hlt
insb
sub
call
jo
lea
push
movups
stos
hlt
pop
sub
js
mov
sbb
jg
or
add
mov
loope
scas
inc
outsl
add
leave
fistps
orl
mov
add
pop
in
adc
xchg
mov
adc
or
sbb
cmc
mov
xchg
pop
fistpl
mov
pushf
in
or
add
mov
xor
push
sahf
test
pop
inc
fwait
pop
orb
rclb
nop
sub
add
test
ss
mov
pop
lahf
pop
sbb
into
arpl
scas
cmp
stos
adc
and
mov
lret
loop
and
cltd
cld
movb
cmpsb
sub
adc
sarb
add
inc
lods
adc
add
fs
movsb
repz
ja
imul
movsb
jns
hlt
insb
jg
inc
std
pop
cld
dec
les
sub
addr16
lret
nop
loope
pop
out
and
bound
ret
scas
inc
pop
outsb
test
ja
shll
test
lods
mov
cmp
dec
jmp
cmc
nop
imul
jmp
imul
rcr
scas
sbb
ret
addr16
push
incb
or
call
mov
push
rclb
pusha
mov
imul
or
addr16
push
sub
dec
enter
mov
mov
test
xor
mov
stos
xchg
repz
pop
add
lds
imul
cmp
inc
xchg
add
or
test
iret
cmpsb
loope
lcall
dec
rcll
jnp
mov
cmc
pusha
leave
loope
lahf
pop
mov
nop
mov
dec
insb
xchg
int3
xchg
test
dec
adc
pop
xchg
push
ficoms
insb
enter
popf
push
mov
insl
ror
in
mov
lret
lahf
imul
out
add
sub
sub
inc
or
cmp
inc
mov
add
outsl
test
add
or
add
icebp
outsl
push
xor
clc
pop
jge
cli
pop
pop
and
dec
push
push
sub
fsubs
test
adc
adc
insb
ret
pop
lods
pop
pop
push
adc
cmpsb
mov
fcom
mov
scas
cld
lea
sbb
rcl
and
adc
lock
sbb
cmc
jno
jbe
gs
add
aaa
pop
pop
push
dec
out
mov
insl
add
fsub
cmp
lret
mov
cmpsl
xor
add
cmp
mov
pop
pop
jo
rcrb
pop
pop
lock
psubusb
add
add
ljmp
arpl
sahf
push
test
cmp
movsl
xor
jns
repz
dec
pop
xor
fwait
sbb
insb
push
sahf
jmp
roll
jns
sbb
cwtl
lea
loopne
fildl
mov
xchg
xlat
push
sub
aas
or
add
lcall
insb
and
pop
adc
lahf
aaa
mov
push
inc
movsl
rorl
mov
in
mov
out
pushf
add
mov
xor
movb
mov
push
mov
lret
pop
out
cmc
in
aam
push
es
shrl
jne
or
out
icebp
sbb
insb
push
jge
arpl
dec
adc
sbb
push
mov
xchg
push
or
repnz
push
fsts
push
idivl
leave
int
pop
fldcw
jns
push
call
clc
repnz
imul
jl
jl
lods
dec
ja
and
sbb
out
xchg
scas
add
sub
cltd
adc
mov
pop
rolb
or
push
jle
lret
sbb
cmp
pusha
roll
add
pop
lock
pop
add
sub
loop
inc
cmp
or
pop
scas
jp
cmpsb
inc
cmpsb
arpl
out
cltd
jg
sub
push
pop
jle
sbb
fmull
imul
jne
cmpb
push
add
nop
test
insb
mov
add
cwtl
pop
in
scas
andl
xor
sub
pop
cli
add
mov
in
movsl
test
add
insl
cltd
bnd
pop
bswap
push
loope
mov
inc
stos
flds
push
xchg
add
mov
pop
test
jle
cmc
sbb
stos
jns
pop
lea
mov
dec
and
sbb
mov
lods
dec
push
mov
and
sub
inc
mov
lds
cmp
shrb
outsb
insl
or
cmc
out
push
jbe
and
mov
jmp
jge
add
mov
mov
inc
fldt
test
insb
jecxz
in
mov
inc
sbb
jae,pn
cmp
cwtl
mov
push
popf
pusha
jo
jbe
sub
push
mov
or
lret
dec
push
jg
sub
and
test
ret
pop
testl
in
add
xchg
shlb
add
stos
inc
lret
sbb
imul
arpl
arpl
pop
jmp
in
jp
test
mov
mov
leave
cwtl
add
mov
adc
adc
mov
pop
lods
enter
pop
add
ror
in
cmpsl
mov
adc
sbb
push
aas
inc
cmp
imul
mov
or
enter
inc
fcmovnu
add
sbb
sahf
pop
fnstenv
decl
pop
cltd
push
fimull
and
pop
inc
xor
xchg
lret
les
add
sub
lea
dec
xchg
sub
push
enter
add
xor
shlb
and
mov
imul
jmp
movsb
push
add
sub
cmp
xchg
mov
mov
push
rcl
pop
outsl
sub
add
ljmp
flds
loop
ja
mov
inc
add
icebp
mov
aas
daa
addb
push
repnz
aam
inc
mov
xor
dec
add
imul
pop
in
ret
aad
mov
pop
icebp
aas
add
xor
hlt
sub
jno
nop
std
sahf
jnp
sbb
rclb
gs
inc
repz
adc
and
jno
fwait
add
push
pop
push
and
pop
cs
leave
fsts
arpl
push
push
cmpsl
lock
arpl
sti
in
shlb
add
sub
sbb
push
repnz
popf
outsl
ret
xchg
flds
test
mov
js
and
aaa
or
addl
mov
mov
jb
pop
lock
jae
xor
and
ds
stc
mov
pop
pop
lret
pop
push
jge
jle
mov
add
sub
mov
add
arpl
fldt
fs
daa
jmp
gs
insb
orb
popf
mov
pop
pop
jle
negl
ret
aas
jle
pop
outsl
lods
test
in
ds
mov
pusha
or
fs
fidivrs
cmpsb
insb
cmp
xor
sub
popf
mov
insb
loopne
inc
dec
adc
icebp
push
xor
push
inc
mov
call
test
sub
fnsave
imul
jp
jbe
int3
mov
lods
pop
sbb
fsubrs
jnp
and
mov
les
mov
pop
test
xor
cwtl
insb
jecxz
push
mov
call
rclb
mov
inc
pop
lods
jno
mov
fstpl
add
xchg
insb
shl
lahf
sub
sbb
push
iret
mov
push
shrb
cli
add
not
cltd
imul
mov
pusha
bound
das
or
iret
and
lahf
popf
ja
lock
add
mov
pop
outsb
int3
mov
out
add
jns
insb
mov
push
insb
xchg
xchg
inc
pop
dec
mov
outsl
xchg
idivb
test
mov
testl
shr
mov
shr
outsl
std
pop
mov
cmpsb
enter
pop
add
outsl
call
cmp
and
shrl
daa
dec
cmp
test
adc
xchg
add
fdivrp
push
adc
aad
cmp
sbb
lock
cmp
dec
movsl
call
addl
jmp
dec
loope
sti
mov
jecxz
cmp
sbb
mov
scas
fsubs
sub
int3
push
pop
cvtps2pi
sarb
daa
add
jg
add
mov
imul
jbe
mov
fiaddl
stos
push
test
lcall
adc
shr
mov
cmpsl
xchg
insb
pop
inc
jmp
imul
xchg
push
ja
adc
push
sbb
add
xchg
add
jne
jle
enter
add
sbb
lds
sbb
lret
pushw
pop
add
jmp
inc
gs
outsb
lcall
pop
add
mov
and
inc
and
fnstenv
int
stos
es
pop
test
incl
xor
loopne
loopne
les
add
movsl
stos
imul
sahf
loopne
pop
mov
push
lock
mov
aas
inc
xchg
stos
sti
and
fstpl
addr16
push
rcrb
insb
cmp
ljmp
clc
lret
add
rolb
pop
repz
jmp
jmp
into
push
lods
lock
loopne
push
xlat
js
jecxz
adc
pop
in
mov
aaa
push
pop
mov
int
hlt
adc
lret
cmc
adc
test
subl
dec
pop
out
fiaddl
aaa
inc
negl
mov
insb
ja
cli
sub
mov
xor
pushf
xchg
add
push
mov
inc
pop
mov
mov
add
out
pop
cmp
xchg
xchg
lret
test
sbb
movsl
sub
fs
test
add
cld
or
sahf
push
mov
mov
pop
sbb
jle
adc
lret
xchg
fcoml
scas
adcb
iret
cmp
mov
stos
xchg
or
inc
inc
mov
das
sbb
or
es
sbb
jne
popa
push
test
or
xchg
rorl
jnp
jno
mov
pop
mov
inc
xchg
idivl
xor
mov
mov
loopne
imul
sub
ja
adc
push
dec
dec
mov
lods
pop
sbb
hlt
jno
add
loopne
insb
mov
xlat
mov
add
iret
or
jl
stos
add
jg
imul
xlat
push
sub
cmpsl
jl
sbb
cmp
call
std
or
add
sarb
pop
lret
or
push
inc
pop
addr16
out
push
in
add
xor
jb
or
mov
in
xchg
dec
dec
and
lret
jg
insb
pop
adc
lahf
fidivrs
lods
stos
in
lcall
adc
loopne
sub
push
orb
sub
add
add
push
mov
sbb
lea
or
cli
mov
mov
add
dec
fsubs
fdivl
pop
sbb
test
out
lret
into
es
leave
sub
ss
sbb
push
add
sti
lods
adc
push
int
adc
cwtl
mov
mov
or
mov
mov
push
data16
pop
repz
mov
jl
fsub
add
jp
push
jns
pop
pop
pop
sub
in
cmpsl
sub
cmc
out
dec
xor
push
adc
mov
xor
and
test
push
fidivrl
test
pop
mov
pop
cwtl
inc
jg
sbb
push
cmp
into
cmp
fsubrl
dec
jne
bnd
xchg
jae
in
cld
sbb
aam
mov
pop
test
adc
inc
ljmp
fistpll
aaa
push
and
insb
imul
add
pop
clc
insl
sub
xlat
mov
hlt
push
add
divb
inc
add
leave
adc
add
xchg
test
shlb
xor
push
pop
stos
add
lods
xlat
add
fadds
sub
cmpsl
add
mov
lahf
int
mov
inc
add
sbb
out
in
add
in
jmp
push
dec
jnp
stos
sti
andl
gs
dec
dec
in
pop
jecxz
into
add
mov
aam
jp
insb
outsb
xchg
dec
pop
popa
int
dec
mov
and
push
add
das
imul
inc
bound
add
mov
mov
out
lock
push
sub
imul
and
mov
insb
jnp
jae
out
test
dec
sarb
movsb
adc
xchg
out
add
outsl
xchg
pop
push
pop
test
xor
add
ss
stos
aaa
lods
dec
mov
xchg
into
adc
adc
cmp
mov
sub
imull
fptan
sub
fldl
mov
add
icebp
repz
adc
inc
mov
and
mov
add
fs
fwait
lock
insb
aad
test
mov
sub
add
fbld
iret
call
mov
adc
or
rclb
adc
pop
or
cmp
pop
pop
fimull
push
jbe
roll
stos
push
stos
sub
gs
dec
and
sub
and
jle
pop
stos
xchg
mov
repz
mov
rcrb
and
in
xchg
lcall
jge
call
jae
fwait
shlb
jecxz
inc
sbb
fdivp
xchg
jmp
add
jge
mov
rolb
and
test
cwtl
mov
andb
cmc
ja
or
pushl
jno
fstps
mov
in
sub
cs
pop
pop
inc
mov
insl
add
dec
push
mov
dec
in
es
insb
or
pushf
xchg
idivb
xor
mov
xchg
fwait
or
nop
pop
sbb
add
das
lock
stos
insl
mov
scas
rorl
hlt
andb
push
aam
aas
jo
pop
push
push
lcall
ljmp
in
insb
int
cltd
pop
cli
xlat
loope
xchg
stos
sbb
sub
mov
repz
mov
sbb
sub
test
or
jmp
ror
fwait
mov
fs
adc
inc
out
jb
mov
scas
call
pop
dec
xlat
mov
aad
notb
lretw
push
cmp
in
or
add
mov
push
stos
aam
adcb
popa
andb
pop
cmpsl
mov
rcrb
add
push
int
fcmove
sbb
inc
push
sbb
inc
xchg
jmp
lock
es
jg
pop
push
aad
dec
mov
mov
inc
dec
aaa
pop
pop
adc
lock
andl
pop
scas
xchg
test
adc
outsb
mov
insl
push
sub
xchg
nop
xlat
cmpb
stc
les
add
pop
leave
mov
xchg
call
repnz
fs
outsb
push
push
and
je
insb
cmp
xchg
enter
ljmp
fcoms
jbe
pop
push
add
int3
and
cli
add
pop
out
xor
and
jb
jl
orb
insl
in
das
push
xchg
lds
mov
adc
imul
push
cli
adc
loope
scas
fmull
dec
xchg
jnp
test
adc
enter
movsb
pop
dec
dec
xchg
cs
adc
scas
mov
adc
fidivrl
lahf
jns
add
mov
fstpt
stc
insb
cltd
xchg
movsb
xor
pop
mov
fstpl
add
mov
xchg
push
cld
shl
dec
call
xchg
testb
mov
stos
out
lods
lea
push
xchg
js
sub
mov
pop
xor
and
leave
mov
inc
and
adc
cmpsb
ret
inc
insb
push
push
push
mov
dec
aad
filds
and
pextrw
mov
js
test
dec
scas
cwtl
cli
xchg
push
addb
xchg
insl
sbb
outsb
push
mov
inc
outsl
mov
negb
xchg
pop
mov
dec
lret
aaa
adc
fst
pfsub
ss
stos
data16
addl
cltd
mov
loop
fwait
notl
add
ret
cmp
dec
jb
insb
xchg
popf
loope
mov
add
stos
in
mov
das
dec
enter
push
lcall
or
and
xor
pusha
pushf
loop,pt
add
rolb
jg
xor
arpl
enter
mov
test
cwtl
push
pushf
imul
out
je
cmp
adc
repz
dec
and
adc
pop
xor
fdivrs
jbe
stc
pop
lods
inc
lods
add
test
cmp
std
mov
cmp
add
cmc
jmp
cmp
fcmovnbe
rcrl
mov
sub
out
sbb
sbb
nop
out
repz
add
cltd
test
movl
inc
push
sbbb
jge
pusha
sbb
and
insb
or
jae
mov
and
or
mov
cltd
sbb
clc
loop
xchg
insl
adcb
fcomp
fisubl
scas
sbb
popa
iret
mov
and
inc
iret
pusha
sbb
cmp
popa
int
sbb
fldl
sub
das
jp
pop
imul
test
sbb
insb
dec
aas
jb
ja
add
icebp
add
insb
fidivrs
add
pop
lods
into
xlat
lods
std
les
and
mov
xlat
and
jo
ljmp
or
add
push
adc
sti
cmc
call
push
mov
fsubrs
lcall
sub
mov
mov
cwtl
cmc
bswap
cmp
insl
adc
daa
jp
inc
jb
inc
faddl
add
sub
insl
outsb
dec
add
xchg
dec
adc
mov
fisttpll
movsl
jbe
or
push
into
insb
cmp
mov
cmp
add
insl
pop
add
cmp
add
daa
and
pusha
mov
rclb
add
shrl
imul
ljmp
add
mov
jp
add
or
jo
cltd
int
dec
pop
mov
dec
fnstsw
insl
aam
mov
add
sub
pop
mov
add
push
xchg
xor
cld
fcoms
test
push
adc
inc
and
inc
cmp
ficoml
in
repz
rorl
inc
test
pushf
cli
dec
insb
test
push
fiaddl
ds
inc
das
pop
mov
rclb
xor
rorb
int
push
pop
out
call
push
add
or
add
adc
add
cmp
jl
jecxz
sbb
enter
mov
mov
add
add
mov
ja
je
sub
xlat
sbb
mov
lahf
fadds
mov
cvtpi2ps
jp
inc
leave
or
mov
in
dec
fstpl
jp
add
rcr
pop
mov
jl
repnz
pop
cmpsl
mov
pop
scas
scas
sbb
cmc
loopw
std
sbb
inc
jle
and
imul
mov
mov
cmp
outsl
sub
mov
or
lods
leave
pop
push
ficompl
mov
jb
lret
push
push
movsb
stc
adc
dec
push
lcall
ret
fimuls
cmp
sub
les
sbb
scas
out
clc
pop
pop
mov
pop
mov
add
incl
adc
jbe
es
out
ja
jnp
mov
xchg
notb
push
push
pop
add
lock
mov
lahf
adc
bound
add
fcompl
insl
mov
cmc
in
jns
sti
sbb
test
pop
lret
stc
dec
cwtl
aad
push
testl
repnz
rclb
addb
push
enter
add
pop
push
pop
subl
xchg
pop
rorb
std
add
cmp
mov
jmp
insl
mov
js
xorb
les
idivb
lret
cmp
loop
pop
mov
orb
adc
or
pop
ljmp
adc
or
add
jecxz
add
push
adc
and
xchg
scas
addl
enter
cld
lods
push
and
int3
rcrb
cmp
mov
popaw
pop
and
fsubl
or
inc
call
inc
xchg
mov
inc
movsb
pop
cld
fstps
out
dec
pop
mov
cmp
cld
outsl
mov
mov
hlt
gs
inc
outsl
lods
fcmovnb
in
add
fwait
or
inc
into
stc
or
aaa
add
pop
pop
mov
sti
in
xchg
iret
fiadds
mov
ficoml
push
jae
add
fwait
movsb
or
fwait
pop
mov
gs
insl
xchg
test
stos
pop
out
or
sub
xlat
popa
cs
adc
mov
iret
aas
fsubrp
add
arpl
xlat
add
add
mov
aam
pop
pop
xor
and
loopne
xor
int3
mov
jecxz
out
das
add
ret
sbb
push
add
out
imul
dec
cmp
mov
mov
sub
cmpsl
xchg
xchg
sub
pop
or
mov
in
in
loopne
test
add
lods
adc
call
aas
xor
in
ret
mov
icebp
in
imulb
xlat
push
or
sti
cld
sub
int
push
mov
add
insb
lock
pop
adc
push
out
aad
sbb
sahf
out
lock
pop
pop
mov
insb
mov
fwait
iret
xchg
cli
test
pop
cmpsb
xchg
and
mov
and
add
pop
add
idivl
insb
inc
rcl
sti
adc
jnp
js
add
stc
add
ret
cmp
sub
add
arpl
call
xor
and
sbb
jg
psllw
arpl
jae
int
mov
clc
push
aas
cwtl
shl
movsl
and
out
add
pop
adc
mov
sub
loope
mov
fldt
xor
test
xchg
push
or
ja
hlt
push
pushl
mov
add
mov
push
cmpsl
pop
popa
loop
jge
in
cmp
ss
dec
test
cltd
cmp
imul
mov
pop
scas
push
les
loop
insb
dec
inc
push
lods
insb
test
xor
popa
pop
aam
negl
mov
cmp
lds
push
and
mull
adc
pop
and
sbb
ja
adc
adc
mov
cmp
mov
dec
arpl
movl
js
addb
add
shrb
xchg
fwait
je
shlb
clc
insb
outsl
push
xor
std
xchg
add
mov
pop
or
mov
addr16
jbe
pop
in
jnp
jle
add
pop
mov
jge
int3
pop
cli
sub
call
test
sub
adc
int
xchg
cmp
sub
lret
popa
add
fs
ds
rcrl
pusha
cmpsb
pusha
adc
sahf
add
sbb
pop
mov
adc
jge
pop
add
or
cs
cmp
in
sbb
inc
shll
and
arpl
popa
fisttpll
inc
cmc
dec
cmp
cmp
setbe
popa
cmc
lods
rcll
jne
pop
mov
shlb
inc
mov
bound
data16
inc
leave
mov
mov
pop
pop
aas
mov
and
imul
mov
adc
adc
repz
add
cli
sahf
pop
test
nop
rcl
cwtl
sbb
mov
mov
cmp
cmpsl
pop
stc
xchg
test
jns
fmull
add
push
jns
jo
decb
xor
or
cld
or
xchg
add
loopne
movsb
test
add
sbb
je
and
lods
mov
cmp
push
lcall
fiadds
cmp
pop
pushf
fstl
arpl
out
add
in
jg
add
repz
inc
sbbb
enter
mov
sub
je
xor
sbb
mov
xchg
and
sbb
std
sbb
sub
notb
xlat
movsb
sarb
lds
loop
sbbb
les
push
sbb
push
pop
sbb
scas
cmpsb
mov
dec
and
sahf
gs
lods
popa
pop
xchg
cltd
je
lret
movb
sbb
ds
sbb
xchg
mov
insb
inc
and
push
or
ret
mov
dec
dec
sub
bound
xchg
add
adc
dec
cmp
push
loopne
jl
gs
and
scas
adc
xchg
int3
push
aam
jmp
inc
in
pop
lods
sbb
cwtl
sbb
jne
push
add
mov
insb
cli
movsb
adc
mov
or
or
rcr
pop
xor
je
mov
xchg
push
push
cmpsb
or
add
push
jae
add
loop
int
shlb
add
cltd
lea
pop
pop
push
enter
adc
xor
push
lds
popl
dec
or
dec
add
or
bound
popf
mov
repnz
pusha
mov
add
sbb
in
or
ljmp
in
dec
out
cmp
lds
push
dec
inc
je
mull
ljmp
repnz
xchg
cmpsb
in
mov
mov
ss
xor
mov
jo
lds
and
pop
or
imul
push
and
mov
xchg
shr
jl
mov
jmp
movsb
adcb
das
sbb
cmp
or
cmc
and
lods
add
xchg
in
mov
inc
popa
inc
add
roll
ret
pusha
daa
mov
mov
sub
xchg
fnstsw
insb
mov
add
push
pop
aad
clc
mov
cmp
add
xchg
loope
mov
dec
arpl
out
add
lahf
jne
inc
loop
loop
sbb
push
add
mov
js
xor
imul
dec
dec
int
add
in
inc
adc
idivb
pop
dec
cld
aad
mov
rcrl
aas
arpl
jge
xchg
punpcklbw
sbb
sub
cli
scas
mov
mov
and
mov
dec
lea
pop
or
pop
mov
testl
and
pop
mov
inc
arpl
popa
xor
outsb
popf
dec
sbb
repz
xor
andl
imul
pusha
mov
xchg
lock
imul
rcrb
xchg
lret
jle
cmp
mov
and
pop
add
inc
add
add
cwtl
insb
sbb
inc
aaa
test
loopne
insb
sbb
mov
test
dec
insl
in
mov
push
stos
out
adc
push
or
test
sbb
nop
test
outsl
adc
xchg
pop
xor
es
popl
pop
in
dec
lret
jl
xchg
imul
inc
lahf
cmpsb
dec
jb
insb
imul
popf
mov
or
adc
sub
stos
push
sti
lds
mov
js
fdivl
jle
jl
in
je
push
sbb
dec
inc
idivb
lds
cli
mov
cltd
add
loopne
loopne
xchg
fmul
insl
faddl
test
imulb
adc
lahf
jp
add
add
jnp
mov
in
pop
pop
sub
cmp
lahf
insb
jae
lds
popf
loope
pop
adc
xor
psubq
inc
mov
xchg
mov
testl
mov
aas
mov
jo
add
mov
or
aam
push
cmp
loopne
movsb
xor
pushf
in
rcrl
or
cmp
in
dec
add
sar
jns
push
test
in
jmp
ret
imul
pop
mov
jbe
push
inc
mov
and
fmul
adc
pushf
int3
push
pop
mov
in
inc
imull
add
in
fwait
loop
insb
push
jl
les
mov
js
xchg
es
sbb
lods
cli
or
stos
lret
mov
testb
inc
hlt
mov
loope
repz
in
and
inc
out
cltd
jne
out
pusha
pushf
jno
add
roll
scas
push
xor
ret
mov
insb
pop
sbb
xchg
ja
and
insb
aad
cmpl
in
insb
push
jbe
pop
or
insb
add
xor
push
cli
ret
pushf
rorb
in
jge
xor
sbbb
push
xchg
mov
loopne
mov
pushf
loop
aas
jecxz
out
add
xchg
enter
popa
imul
fwait
add
loope
in
inc
sbbb
push
nop
pop
dec
scas
add
xor
stc
xchg
mov
insb
xor
fstpt
pop
stos
pop
les
aaa
add
jmp
add
dec
loope
mov
inc
pop
insl
jp
hlt
inc
icebp
jns
mov
sbb
jle
xchg
cmp
adc
lock
inc
xchg
add
xchg
add
xlat
insb
jno
push
mov
mov
sbb
out
adc
insb
shlb
dec
sub
add
sbbl
clc
jecxz
jge
add
or
add
mov
adc
push
sbb
xchg
mov
or
xchg
lahf
pop
sbb
push
fwait
outsl
lcall
sub
dec
mov
mov
adc
push
outsb
pop
inc
das
adc
test
mov
adc
add
test
in
pop
jo
es
les
test
clc
movsb
and
add
sbb
add
mov
out
jae
pushf
mov
mov
push
mov
pop
pop
jbe
div
push
outsl
ds
xchg
push
shl
mov
xor
inc
jg
fwait
pop
pop
add
mov
push
xchg
pop
mov
mov
outsl
adc
lcall
xor
clc
jmp
pop
push
dec
mov
mov
int
or
push
inc
fildl
dec
xchg
insb
ficoms
neg
icebp
icebp
in
sbb
aaa
mov
mov
xor
sub
lock
add
ss
insb
xor
leave
xchg
inc
loop
sub
fistl
mov
mov
mov
sbb
test
mov
icebp
cmp
push
or
xchg
mov
xchg
movsb
into
push
sbb
cmpsl
mov
push
addr16
cmpsb
insb
nop
jb
das
in
jg
pop
fs
dec
ret
in
out
or
jmp
aam
jmp
mov
push
stc
stos
dec
mov
mov
pop
push
cwtd
xor
adc
not
shrl
xchg
fistps
jo
mov
mov
test
cmp
aam
daa
mov
xchg
add
add
das
nop
out
ja
fwait
pop
test
je
jae
imul
adc
lret
bound
stos
pop
lahf
js
mov
sbb
xchg
sti
sbb
jns
push
hlt
loop
sub
sbb
dec
pop
push
fimull
insb
negl
sarl
adc
push
push
test
inc
and
loopne
in
aaa
inc
call
push
inc
mulb
push
dec
stos
bound
mov
imul
sub
adc
push
je
push
add
fnsave
rorl
insb
mov
or
cmp
test
pop
stc
or
sbb
in
ss
dec
jmp
dec
shlb
cmp
in
sub
insb
or
dec
inc
test
in
fsubl
pop
add
pop
adcl
addr16
mov
inc
and
test
jl
outsl
jne
ja
lret
rorb
cmpsl
push
jmp
mov
mov
shrb
mov
mov
popf
adc
loop
mov
data16
sub
mov
add
mov
fbld
mov
mov
xor
sbb
loop
add
xlat
and
add
stos
cmp
sub
add
aam
data16
dec
sbb
sarb
outsl
js
xor
popa
in
lock
xor
test
outsl
sahf
xlat
roll
insb
and
and
pop
cs
lds
push
movsl
out
add
dec
fstpt
popa
insl
add
dec
add
insl
jmp
jae
mov
xor
cmpsl
dec
iret
jnp
pop
xchg
mov
cmp
clc
mov
scas
push
movsl
jge
das
add
jle
xor
add
pop
and
jp
push
mov
idivl
or
lret
xor
push
gs
mov
jmp
ret
pop
pop
jle
jbe
cmp
xor
jp
loopne
in
jle
insb
sub
push
daa
push
ror
add
push
loope
sbb
push
adc
js
insb
out
aaa
sbb
ficomps
and
push
test
add
mov
hlt
inc
shrl
enter
xor
or
push
xchg
pop
movsb
inc
mov
rolb
call
shlb
cli
stos
rorl
out
xor
add
shll
imul
test
ljmp
dec
pop
in
pop
scas
ss
inc
call
or
push
push
shrb
loope
ljmp
jmp
ja
add
das
aad
data16
sarb
rcrl
dec
js
sar
bound
ljmp
sbb
mov
in
aad
add
scas
rorb
jns
dec
cmp
sti
add
outsl
sbb
repnz
xchg
insb
xchg
add
testb
pop
or
sbbl
add
pop
sbb
adc
insb
clc
mov
inc
mov
out
dec
imul
xor
mov
jl
mov
pop
popa
std
add
push
pop
mov
int3
pop
sub
enter
jmp
insb
ss
adc
pop
pop
cld
or
in
mov
test
testl
cltd
lahf
or
fs
pop
mov
ror
mov
inc
adc
stos
addr16
jle
mov
jge
insb
pop
cmp
popf
sub
out
and
imul
push
outsl
test
cwtl
xchg
aas
call
ret
sahf
fmuls
fsubrl
movsl
push
mov
stc
lods
rclb
and
mov
xchg
jno
aam
sub
or
insb
imul
mov
adc
mov
cmp
imul
xchg
int3
pop
inc
gs
pop
add
mov
sbb
insl
dec
xor
outsl
mov
jnp
pop
int
xor
test
push
bswap
lock
stos
int3
lds
pop
insb
pop
inc
ret
inc
xchg
xchg
push
add
adc
sti
inc
add
cmp
push
insl
adc
loopne
popa
and
dec
fxch
add
jmp
add
je
add
sbb
or
adc
sbb
js
inc
push
xchg
das
out
repnz
push
or
xchg
out
sbb
es
ss
add
xchg
iret
or
rorl
lcall
push
rcl
sub
dec
add
xor
pop
imull
inc
fcmovne
pusha
fstpl
pop
shll
gs
mov
popf
cmp
fwait
sub
dec
sbb
es
pusha
dec
inc
insb
push
and
fistpl
scas
add
mov
es
sub
or
insb
popa
cli
jbe
test
xchg
dec
xor
not
pop
addr16
and
add
push
popa
add
pop
dec
popl
pop
loop
jne
add
jnp
imul
pop
xchg
in
inc
jl
insb
out
dec
ds
movsb
pop
int
push
adc
add
pop
test
add
clc
add
mov
fsubrs
add
int
jg
xorb
mov
xchg
cmpsb
pop
je
mov
mov
dec
pop
aaa
aas
arpl
push
add
add
out
lret
gs
lldt
in
mov
sub
into
sbb
notl
mov
outsl
xlat
dec
and
xchg
dec
test
add
add
dec
cld
test
ljmp
imul
mov
or
inc
ss
add
lcall
sarl
dec
repnz
dec
in
add
sub
fbld
cmp
inc
lret
add
jl
adcb
lock
mov
inc
mov
loopne
mov
andb
mov
shl
sbb
jge
lahf
xchg
sub
jno
add
xchg
lret
ljmp
lods
lcall
fwait
pop
and
out
cli
adc
push
jb
je
add
sbb
fs
inc
in
and
cmpsl
pop
lds
in
xchg
ljmp
int3
test
adc
push
ss
xchg
cwtl
or
cmp
lret
cmp
jo
add
test
fsubrl
push
inc
aas
xchg
add
sub
inc
shrl
xor
push
pop
fs
inc
mov
insb
insl
call
rorl
jmp
ss
xor
gs
and
add
adc
and
loopne
loope
aas
push
pushf
xchg
ret
fsubl
mov
fnstsw
incl
inc
or
cld
sbb
jns
stc
mov
xchg
insl
out
cld
loopne
icebp
insb
add
add
push
pushf
repnz
ficoml
sub
clc
btr
push
mov
dec
insb
cltd
lea
aam
mov
pop
push
cmp
push
das
mov
and
cmpsl
fwait
orb
in
cld
and
outsl
add
add
and
sbb
nop
adc
push
sbb
mov
mov
mov
jle
cld
stos
repnz
pop
jge
dec
fst
pop
mov
and
add
in
lcall
mov
add
xchg
mov
mov
out
iret
add
cmc
pop
mov
jno
insb
adc
mov
dec
dec
mov
cmp
insb
push
shll
pop
cmp
and
push
popf
dec
add
loope
pushf
fidivl
adc
insl
cmp
pop
cwtl
outsb
cmp
or
dec
inc
mov
mov
daa
lods
add
lods
sub
into
pop
push
push
fs
out
call
jg
xchg
pop
or
movsl
imul
push
roll
xchg
sbb
ret
add
inc
inc
mov
imul
jnp
filds
sbb
aad
lea
push
insb
add
push
addl
mov
imul
sbb
sbb
test
xor
or
add
aaa
pusha
in
cmp
insl
add
enter
rorl
adcb
inc
or
cs
inc
out
out
test
sti
pop
and
shlb
push
push
xrelease
lods
pop
add
iret
pop
bound
sbb
and
mov
dec
adc
cmp
push
jmp
popa
loop
xor
add
pop
mov
insb
pop
pusha
jl
inc
cmp
pop
pop
in
arpl
inc
or
sbb
clc
mov
leave
xchg
out
stc
add
mov
dec
iret
insb
js
inc
jp
pop
sbb
insb
icebp
int
push
xchg
roll
imul
sbb
outsl
add
sbb
jns
popf
lock
xchg
lret
lret
mov
mov
rcll
push
sbb
pop
mov
or
aas
in
dec
add
les
or
arpl
add
in
repnz
pop
mov
unpckhps
and
pushl
push
push
sbb
mov
shlb
mov
in
test
lock
mov
adc
notl
lea
jns
cmp
daa
imul
popf
insb
pop
cld
aam
mov
pop
sbb
js
call
fwait
insb
insb
int3
pop
pop
xlat
xchg
push
fistpl
inc
inc
push
xchg
mov
fcoml
andb
das
push
aam
out
cli
sub
sbb
pop
adc
add
mov
sub
jno
cmp
inc
add
outsl
inc
nopl
xor
jg
sbb
mov
test
int3
mov
ds
test
data16
insb
divb
popf
imul
xchg
push
pop
sub
ja
lahf
cmp
add
add
and
push
lret
out
mov
lods
idivl
mov
lods
popa
pop
out
insb
add
arpl
ret
adc
insb
xchg
inc
fldenv
or
adc
aaa
xor
push
out
sub
cmp
arpl
loop
xchg
popf
and
cwtl
ja
pop
sarb
inc
insb
or
sub
push
dec
xchg
bound
or
imull
out
sbb
fcomi
sbb
cmpsb
jle
sbb
push
fcmovu
mov
loopne
inc
jne
mov
out
push
add
jno
insb
out
cmp
push
sbb
imul
cmp
sub
les
sub
scas
mov
or
bound
pop
sub
inc
test
jmp
aam
cmp
add
add
stos
sbbb
xor
jmp
jae
inc
gs
fisttps
cmp
mov
test
cmp
sub
mov
stc
add
mov
mov
sbb
popa
pushf
xchg
mov
mov
xor
or
out
mov
data16
fimull
cmpl
popa
fisubs
or
fcoml
jle
pop
inc
mov
add
arpl
cwtl
cld
insb
dec
adc
sbb
xchg
imul
jnp
xor
mov
cmp
sahf
mov
xchg
je
stos
rcll
insb
notl
and
pop
into
std
iret
cmpsb
xor
or
sub
pop
leave
lock
fiadds
js
add
rcrb
push
mov
cli
in
movsl
cmp
int3
dec
cmp
out
jp
cmp
pop
sub
push
push
andl
or
arpl
ljmp
imulb
pop
insb
test
xchg
aaa
push
stos
push
mov
push
test
enter
in
push
insb
rcrb
mov
out
sbbb
mov
xor
add
insb
and
jg
xchg
pop
enter
and
icebp
push
in
out
lods
mov
bound
adc
faddl
add
cmp
outsl
in
leave
out
mov
cld
pop
or
loopne
mov
imulb
lret
add
fwait
lods
pop
in
je
pop
sbb
popa
push
pop
int3
lds
mov
insb
call
mov
push
add
lret
sbb
dec
inc
sbb
stos
push
cmpl
add
orl
loopne
aad
or
pop
add
lds
push
push
mov
sbb
cmp
cmpsb
shll
pop
out
and
inc
mov
mov
lods
aaa
mov
add
outsl
clc
jne
cltd
call
jmp
mov
cltd
ja
outsb
sti
insb
insb
jge
adc
mov
push
push
fldt
or
and
insb
jae
test
mov
cmpsl
push
inc
pop
std
xor
repz
bound
or
push
jae
nop
push
add
pushf
enter
jnp
pop
cld
mov
ljmp
mov
add
mov
pusha
sbb
arpl
ret
jno
pop
mov
xor
add
int
dec
jne
mov
movlps
stos
repnz
repnz
insb
cld
lods
sub
fstpt
push
pop
ret
into
fsubr
movsb
push
add
data16
sub
rolb
repnz
dec
mov
pop
insb
mov
sbb
out
cmpsl
andb
hlt
cmp
adc
sbb
int3
lcall
xor
cmp
adc
cmc
ds
clc
xor
jo
push
shll
xlat
enter
xor
jg
sbb
dec
mov
mov
push
mov
add
push
inc
jp
add
add
adc
push
and
add
daa
and
imul
xchg
xchg
mov
insb
rclb
adc
pop
sahf
inc
test
loop
roll
cmp
shll
mov
dec
mov
push
insb
xlat
icebp
loop
xor
mov
out
dec
dec
data16
shlb
xor
jae
push
es
test
add
mov
mov
xchg
mov
scas
push
sbb
loope
xchg
insb
push
adc
mov
imul
inc
jae
aam
jnp
popa
inc
vmptrld
and
cmp
fbstp
pop
pop
rep
add
cld
sub
inc
add
sti
or
ret
jne
mov
and
repnz
dec
cmp
pop
in
dec
sahf
fst
cmpsl
xor
fisubs
sbb
add
push
andl
jno
dec
cmp
cmp
insb
clc
iret
xor
inc
loope
cmp
testb
adc
xor
mov
test
sbb
push
mov
sbb
lds
pop
ficoml
pop
negb
ss
add
add
sbb
mov
aaa
shrb
and
sahf
cmp
imul
pop
adc
add
loope
and
adc
jno
inc
insl
adc
fldt
clc
imul
push
pop
pop
lods
cmpsl
mov
xchg
sbb
insl
mov
and
cmp
fwait
add
stos
jge
sub
cmp
xor
push
or
fcomps
fnstcw
xor
and
pop
jge
les
xor
cld
jno
push
pop
punpckhbw
dec
pop
fnstsw
inc
rcrl
xchg
movsl
jb
inc
stc
sbb
stc
ja
outsl
popf
xchg
cld
mov
jle
cmp
out
mulb
leave
pop
fdivrl
adc
stos
or
iret
imul
bound
sbb
xchg
repz
jge
popa
stc
push
test
mov
lock
repz
cmp
xchg
mov
movsb
lahf
sub
or
mov
mov
scas
xor
jns
leave
popa
cwtl
sbb
sub
pushf
sti
outsl
inc
cmp
popf
insl
je
ficoms
rcll
lds
clc
nop
fisubrl
pop
jno
popa
fldt
and
xor
jecxz
add
das
xchg
mov
fdivrs
lods
or
xor
add
mov
shll
mov
inc
cmpsb
test
mov
scas
loope
out
sub
mov
xchg
lahf
cld
sbb
push
scas
sub
mov
mov
inc
fistpl
lcall
xchg
cmp
add
or
pop
lret
push
and
jno
ljmp
pop
adc
push
imul
dec
inc
mov
pop
mov
pusha
push
lcall
jbe
pushf
insl
xchg
add
repz
jmp
jnp
pop
push
pop
dec
test
jl
push
sahf
fcmovbe
imul
in
jb
mov
je
jmp
stos
aam
popf
jbe
out
push
sbb
jns
sub
lret
arpl
adc
push
xchg
mov
adc
jmp
adc
out
dec
scas
pop
add
repnz
das
add
ja
mov
cs
push
mov
fs
and
insb
icebp
lea
incl
mov
xchg
mov
mov
sbb
push
inc
xchg
add
outsb
in
push
clc
xor
jno
sbb
rolb
push
dec
std
mov
sbb
ret
add
pop
movsb
xor
out
sti
int3
add
cli
dec
or
filds
clc
mov
dec
jle
cmc
mov
lahf
hlt
xchg
push
loope
add
adc
insb
andb
insl
xlat
mov
jne
mov
add
cmp
dec
mov
pop
push
hlt
xor
rclb
mov
mov
adc
test
inc
jne
insb
dec
mov
pop
cmpb
iret
sbb
bound
loop
pop
or
int
adc
push
daa
ljmp
lcall
and
loope
mov
leave
sbb
xor
scas
and
or
dec
mov
push
add
jb
sub
insb
ja
mov
mov
test
pop
jns
xor
add
xor
inc
iret
cmp
inc
into
sbb
add
add
por
outsl
cmpl
clc
sbb
push
pop
push
push
inc
adc
aaa
pop
cwtl
mov
jmp
fcmovnb
adc
pop
negl
nop
lock
getsec
mov
xor
add
mov
jb
fiaddl
add
sbb
jg
cmp
lock
xchg
sahf
cmpsb
push
shr
xchg
repnz
push
xor
adc
insb
ljmp
das
pop
xchg
mov
lods
ficoms
mov
outsb
or
inc
add
cmpb
fcompl
icebp
mov
cmp
adcl
and
cltd
pushf
add
js
pop
loopne
sbb
js
pop
jge
xchg
jb
insb
ficoms
inc
sub
add
test
push
sub
pushf
fimuls
ja
inc
leave
aas
cmp
insb
mov
outsl
mov
faddp
stc
pusha
or
push
sub
sub
out
fucomip
icebp
dec
push
cmp
lahf
sbb
sbb
cmp
cs
fstp
push
mov
adc
mov
leave
sub
mov
cmp
scas
ret
out
in
mov
ret
mov
addb
push
add
cltd
inc
mov
mov
mov
xor
sbb
add
sbb
xlat
out
or
xorl
adc
shlb
adc
outsb
pop
and
rorl
test
mov
out
pop
add
jp
mov
and
sbb
adc
add
popa
jo
xor
or
lock
add
add
cwtl
jne
repz
insb
jp
inc
filds
ret
push
or
add
jge
push
push
fdivl
push
pop
fs
loop
sbb
insb
jg
sbb
mov
nop
push
add
cs
push
in
cmpb
sbb
inc
test
cmpsl
repnz
flds
sub
push
divl
mov
adc
lcall
hlt
push
orb
adc
enter
sub
in
int
adc
cmp
roll
stc
fcmovnbe
xchg
cmp
add
mov
bound
mov
rorb
inc
jmp
push
cwtl
into
adc
lods
pop
imul
push
icebp
jae
andb
pop
adc
addr16
test
add
add
rolb
fildl
iret
mov
cmp
cwtl
imul
fistl
adc
sbb
sarl
dec
out
add
adc
filds
icebp
test
cltd
fsubrs
lret
neg
add
das
dec
xchg
mov
loop
imul
pop
cwtl
lds
inc
icebp
jp
mov
outsl
jmp
mov
mov
xlat
or
cmc
js
int3
jle
jle
lea
cmp
jecxz
push
repnz
adc
push
add
pushf
or
or
fs
jb
pop
fdivr
lods
and
cs
mov
push
std
add
aad
xchg
add
test
adc
jle
sub
mov
fsubrp
in
push
pop
add
mov
lcall
push
jl
xchg
pop
xchg
fbstp
add
push
fwait
outsb
push
mov
jge
mov
data16
xchg
jle
lcall
pop
push
push
dec
shrb
mov
pop
mov
dec
mov
imul
xchg
test
push
stc
add
inc
and
jno
and
mov
das
fnsave
push
pop
cs
int3
ficoms
enter
addr16
adc
sti
mov
xchg
addr16
add
addb
or
mov
scas
sti
in
add
lods
idiv
ljmp
sub
xchg
popf
pop
add
ror
mov
cmpsl
shrl
insb
sti
jle
xor
scas
add
jno
out
stos
mov
xor
and
ja
sti
test
adc
mov
std
add
sub
insb
mov
movsb
popf
pop
popf
repz
mov
add
scas
sub
push
push
sub
xor
mov
or
push
xchg
pop
inc
loope
pop
imul
add
mov
js
mov
inc
mov
mov
and
sub
cli
adc
in
jle
jmp
xlat
addl
std
adc
dec
dec
std
inc
sahf
jne
test
insb
cmc
fprem1
xchg
test
push
inc
push
add
jno
insl
sbb
add
push
push
or
cli
pop
dec
and
iret
imul
fstpt
icebp
int
pop
mov
dec
adc
push
add
popf
or
inc
inc
jnp
arpl
fdivr
cld
negb
sub
out
adc
mov
jecxz
outsb
jo
cmp
test
int
in
cmp
jo
je
push
insb
xchg
popf
pop
pop
out
or
mov
sbb
mov
int3
pusha
mov
out
pushf
pushf
push
mov
movd
push
pop
inc
adc
repnz
incb
mov
pop
jb
mov
adc
sbb
add
pop
sub
daa
scas
jge
jp
in
insb
test
movsb
dec
adc
lcall
adc
pop
std
stos
shr
mov
loopne
lods
lods
or
add
out
addl
out
inc
movsl
lock
add
shrb
mov
mov
scas
dec
jbe
cltd
sahf
fldt
pop
xor
fildl
push
adc
into
sub
mov
scas
adcb
adc
shrl
cwtl
pop
psubb
dec
or
sub
das
adc
jnp
insb
xchg
decb
enter
pop
jae
movzwl
aas
aam
ljmp
stc
pop
inc
cwtl
pop
lahf
or
das
sbb
mov
test
popf
icebp
in
add
ret
arpl
repz
ja
test
in
roll
add
mov
scas
add
mov
xchg
pusha
sub
rolb
jmp
add
ljmp
xor
fmuls
sahf
cmp
imul
pop
ds
xor
pop
push
fcoml
andl
daa
jae
cli
sub
adc
rcr
mov
cmpsb
std
cmp
ret
insb
in
jbe
add
testl
js
or
movl
cmp
or
enter
mov
out
xor
cli
fadd
adc
or
inc
cmpsb
lock
popf
pop
data16
sbb
mov
in
push
fsubs
adc
and
mov
repz
iret
insl
das
add
xchg
jecxz
leave
xchg
add
nop
xor
pop
mov
add
repnz
aaa
push
jmp
add
xchg
stos
sub
push
mov
pop
xchg
lahf
divb
es
roll
inc
test
add
insb
inc
jle
inc
dec
sbb
fs
mov
leave
std
sbb
mov
sub
fbstp
push
pusha
mov
xchg
sbb
in
pop
cltd
lods
rorb
in
mov
std
push
es
sti
inc
or
cmp
mov
pop
test
cmp
inc
add
pop
cmp
push
adc
dec
inc
fdivrl
mov
ficompl
mov
movsl
addr16
xlat
sahf
movsb
and
xchg
jge
addr16
xchg
sub
cwtl
lock
add
mov
jmp
lock
decb
nop
fildl
std
xchg
lcall
pop
cli
adc
insb
and
out
mov
jbe
mov
cmp
sub
pop
ret
test
testl
negb
stos
mov
hlt
pop
sub
adc
jg
or
xor
push
sarl
lahf
pop
xor
xlat
movsl
sti
pop
clc
je
lahf
sub
sub
push
cmp
push
mov
pop
xchg
js
int3
pop
push
or
add
fsubl
mov
gs
add
pop
data16
inc
add
add
pop
pop
pusha
push
orl
mov
in
or
pop
lret
sub
and
sbb
ss
sub
add
dec
cmp
sub
lods
insl
pop
mov
push
je
lea
fwait
pop
shlb
sbb
and
ja
cmp
pop
arpl
cs
mov
repnz
decl
inc
mul
xchg
pop
cltd
in
imul
fs
mov
leave
adc
and
in
sbb
xchg
std
cmp
dec
adc
inc
add
xor
xchg
test
in
repnz
inc
movhps
push
push
lret
loop
dec
imul
sbb
pop
push
imul
fsubrs
fisubrs
aam
add
lods
sub
mov
push
mov
cmp
ss
sbb
jl
out
mov
pop
cmp
mov
icebp
sarl
adc
dec
icebp
pusha
pop
and
inc
push
mov
xlat
mov
and
bound
or
jle
sarb
add
insl
or
mov
out
ss
shl
jp
das
xchg
fldz
xor
xchg
push
rorb
sbb
arpl
add
fiaddl
test
xor
movsl
push
clc
adc
into
ds
add
pusha
mov
mov
add
jge
pop
cmp
xor
mov
ds
and
setae
cmp
lahf
fstpt
push
mov
jmp
movsb
lret
push
shrb
nop
xchg
add
mov
xchg
incb
pop
addr16
sub
repnz
cmp
jg
lret
ret
xchg
sbb
test
dec
dec
insb
in
sahf
out
lock
adc
aas
inc
dec
adc
add
int
xchg
and
sub
lahf
cmp
andl
add
inc
cmp
rorb
gs
pmaxub
insb
imul
enter
outsb
adc
idivl
cmp
jmp
popa
mov
inc
jge
call
sub
or
cld
mov
inc
mov
test
pop
adc
fs
rcrl
xchg
movsb
aam
push
aas
negb
add
out
mov
dec
xchg
pusha
stos
pop
bound
push
push
cmp
into
mov
fistps
pop
test
aam
ficoml
adc
cli
adc
clc
repz
or
add
mov
sbb
jl
clc
add
xchg
cmc
enter
mov
jae
pop
sbb
sbb
xor
lds
push
loop
stos
mov
add
inc
xlat
add
pop
add
sbb
cmp
adc
imul
add
cmp
js
insb
push
pop
repz
lods
lods
mov
cmpsb
xchg
test
or
mov
xor
jno
adc
insb
sarb
xor
jg
mov
add
push
pop
call
dec
push
flds
inc
test
aas
add
mov
jne
dec
add
sub
je
cmpsl
imul
xchg
scas
mov
pop
insb
push
mov
lods
cli
arpl
hlt
nop
fst
or
pop
inc
push
sub
in
insb
into
ret
imul
mov
leave
shll
aaa
jp
pop
repnz
jne
mov
xor
mov
xrelease
xchg
cmpsl
sub
push
push
xchg
das
sub
pop
pop
outsl
or
xchg
sub
jno
cmc
mov
outsb
pop
and
jbe
lahf
hlt
in
add
stos
inc
loopne
add
loopne
cmp
and
add
adc
jae
insl
xor
jnp
fstpl
jbe
push
orl
pop
pop
shll
pop
enter
lds
testl
rcl
add
pushf
push
push
mov
jmp
mov
add
jmp
popf
push
sti
lea
or
jnp
pop
xor
push
stc
and
and
xor
sub
shrb
clc
arpl
add
push
loope
dec
divl
insb
cli
add
aaa
ret
sbb
jb
pop
push
lret
daa
xorl
call
add
enter
mov
int
jge
mov
push
stc
nop
loop
test
sbb
mov
ds
jnp
loopne
fwait
jmp
mov
mov
popf
add
sbb
out
xchg
jno
cs
jno
rcl
pop
test
bound
lds
jb
leave
movsl
js
adc
hlt
cmp
adc
xor
pop
add
ss
insb
mov
stos
pop
cwtl
cmpsb
leave
mov
pushf
mov
cs
out
test
add
insl
jno
adc
les
inc
clc
pop
add
fcoml
push
std
xchg
push
or
insl
xchg
roll
add
push
stos
dec
jbe
pop
sub
push
mov
inc
imul
popf
jae
mov
mov
imul
cmp
inc
inc
dec
je
in
mov
xor
mov
test
push
sbb
in
je
pop
xor
pop
jle
mov
xor
clc
mov
xchg
insb
das
pop
incl
js
and
sti
fcmovnu
addb
xor
pop
addb
lret
xchg
add
mov
pop
add
aam
jns
inc
cmp
add
popa
mov
jmp
insb
push
stos
rcll
test
jl
ds
adc
daa
pop
mov
sub
pop
push
imul
or
jb
sbbb
outsb
push
sub
stos
inc
ret
push
jg
loope
adc
cmp
sub
inc
jnp
push
jno
push
repnz
in
sbb
and
popl
dec
push
scas
mov
mov
adc
in
push
ja
push
popf
mov
mulb
mov
jns
inc
fimuls
pop
adc
lcall
bound
mov
pop
cmp
insb
outsb
push
mov
pop
add
jbe
leave
pop
jp
pop
jecxz
idivl
mov
stc
orb
inc
mov
es
lahf
ret
xor
adc
out
adc
and
pop
inc
or
dec
faddl
add
jle
adc
sub
and
pop
cmp
mov
ja
sbb
sub
in
jmp
add
inc
sub
sub
loop
jns
pop
lds
sbb
pop
sar
cld
stos
push
or
rorb
lahf
add
and
add
push
jmp
cmp
push
sbb
mov
xacquire
loop
pusha
insb
push
push
push
mov
outsb
adc
push
xchg
add
mulb
lods
add
pushf
adc
adc
addr16
fwait
lods
es
and
mov
les
add
and
add
pop
lods
icebp
pushf
lods
pop
ror
bound
cmp
sbb
xor
add
loopne
insb
rcrl
pop
cmpl
aad
add
jmp
mov
scas
sbb
adc
push
aas
cmp
sbb
add
rcrl
add
add
dec
jns
scas
pop
repnz
add
jl
inc
and
fwait
cs
dec
add
ja
push
mov
pop
insb
add
sub
in
lock
filds
pushf
pop
inc
js
and
xor
push
push
aad
insb
call
add
fidivrs
ja
xchg
js
sbb
insl
pop
lret
ja
addl
insb
pop
out
mov
nop
scas
mov
test
add
insl
data16
out
push
popf
sbb
arpl
insb
pop
mov
add
lods
dec
sbb
or
xor
rcrl
inc
clc
testb
add
add
hlt
js
push
sti
inc
inc
dec
sbb
cmp
insl
lret
pop
cmp
es
adc
sub
or
xlat
in
xchg
fiaddl
das
cmp
push
inc
mov
sbb
lods
fstps
add
add
jecxz
cmp
push
lds
fnstenv
es
jmp
sti
inc
aas
daa
add
inc
sbb
or
mov
add
fsubrp
mov
daa
jp
add
fcompl
inc
cmp
in
push
mov
movsb
add
stos
sub
sbb
add
mov
ljmp
movaps
shrl
cmc
push
lods
ficompl
and
inc
mov
add
cld
mov
mov
add
insb
xchg
mov
out
mov
cmp
xchg
mov
shrl
insl
add
test
outsl
or
mov
or
negb
push
cltd
rol
push
inc
cmovne
in
loope
jne
int3
add
adc
pop
hlt
pop
add
inc
push
push
mov
pop
gs
imul
jl
movl
out
inc
push
pop
fsubp
js
insb
fwait
sbb
insb
fidivl
mov
lahf
in
inc
mov
add
test
sub
push
mov
push
or
sahf
add
roll
add
ds
sarl
or
pop
es
arpl
push
das
lret
or
js,pn
xor
insb
pop
dec
test
xor
outsb
mov
insb
adc
cmpsb
mov
push
inc
test
pop
add
jmp
mov
insb
pop
mov
cmpsl
xor
mov
mov
sti
std
pusha
aad
imul
adc
pop
push
jb
mov
addr16
leave
add
cmpsb
fimuls
inc
jae
add
cmc
xlat
jae
pop
adc
adc
fistps
cmpsl
mov
adc
add
xchg
cld
scas
subb
ficompl
pslld
ror
push
adc
xchg
imul
jb
shrb
jbe
pusha
and
sti
or
adc
mov
xchg
mov
lods
fsqrt
dec
push
sub
insb
sbb
loopne
mov
lods
aaa
into
add
and
jb
sbb
lahf
rorl
jle
arpl
inc
outsb
test
js
push
adc
add
into
sbb
fsubrs
mov
clc
js
push
dec
mov
fldl2e
pop
xchg
mov
gs
icebp
in
lcall
cs
push
pop
add
xor
mov
push
fbld
add
pushf
data16
adc
rolb
push
inc
cmp
movsl
rolb
and
xchg
lret
mov
inc
out
pop
pop
adc
xchg
sub
popf
adc
xor
pop
add
insb
pusha
push
lds
push
adc
add
test
cmp
out
add
iret
mov
push
enter
scas
jge
insb
sbb
add
jp
sahf
mulb
ret
dec
mov
inc
adc
lahf
daa
out
add
lock
add
lcall
mov
fld
lcall
adc
insb
je
pop
inc
leave
jb
ror
mov
insb
push
test
scas
xor
test
cmp
lret
gs
add
jl
push
cmc
lock
mov
inc
push
fstpt
shl
js
jbe
cs
mov
mov
repz
and
inc
jecxz
insb
sbb
test
addr16
js
mov
add
inc
std
pop
repz
les
add
fdivl
jbe
pop
lret
fldenv
pop
add
or
push
mov
dec
pop
lret
out
loopne
pop
xor
scas
lds
sbb
jecxz
jg
in
adc
jb
filds
loope
sbb
add
sub
or
loopne
pop
add
dec
sub
out
rol
add
xchg
jmp
inc
sub
mov
ficoms
lods
push
pop
add
addl
pop
mov
lret
mov
push
insb
add
je
inc
fs
mov
jns
pop
jo
pusha
push
mov
ja
add
stos
repnz
adc
cmp
add
ss
js
and
pusha
push
les
xorb
mov
outsb
mov
add
xor
add
inc
jl
add
lret
sbb
loop
mov
mov
sbb
pushf
or
xchg
in
cs
negl
vpandn
cmp
dec
inc
sbb
add
pop
negb
add
or
test
lret
popf
std
adc
sbb
pop
xor
xchg
out
movsl
inc
adc
dec
fidivrs
test
jg
fcomps
jb
sub
imul
fwait
dec
or
sahf
movsl
push
pop
mov
jmp
nop
mov
xor
pop
cli
cmpsb
fildll
into
lds
dec
mov
jge
int
movsl
mov
sbb
add
inc
dec
sahf
in
push
fsubrs
mov
add
add
int
repnz
bound
insb
mov
push
push
push
lahf
add
sti
mov
inc
xor
add
adc
cwtl
in
dec
adc
negl
xor
jb
mov
xlat
insb
mov
mov
push
arpl
push
mov
fimull
sahf
std
push
aam
in
lds
fcomi
mov
insb
lahf
push
imulb
cmp
mov
insb
pop
pop
cld
dec
popa
mulb
fdivr
in
lods
xor
xchg
push
pop
in
add
mov
push
and
add
std
shlb
dec
lahf
cmpsb
loope
pop
add
pushf
mov
paddusw
daa
cmp
cmp
sub
rolb
hlt
mov
dec
stos
dec
jbe
hlt
xlat
mov
dec
push
pop
mov
frstor
jmp
mov
imul
add
in
popf
out
jb
daa
jne
out
in
jno
mov
add
lods
jns
jl
movsb
mov
repnz
inc
ljmp
test
cltd
mov
push
sbb
xor
xchg
insb
pop
xor
shrl
mov
lcall
iret
pop
push
push
push
test
popl
mov
pop
or
jne
add
fsubrl
loopne
ss
sbb
mov
inc
int3
data16
sbb
add
add
iret
pop
mov
cmp
mov
dec
movsb
in
pop
sbb
cmp
and
xor
loop
insb
sti
dec
push
push
jl
xor
mov
add
push
jmp
inc
push
lods
xchg
call
mov
push
add
in
pcmpgtb
stos
pop
stos
imul
adc
ret
insb
push
inc
mov
push
and
ljmp
nop
mov
fisttpl
add
push
outsb
mov
inc
jp
or
js
pusha
mov
lods
add
sbb
push
dec
rcrb
cmp
shrb
jge
js
lcall
and
aaa
cli
or
fsubs
add
dec
aaa
daa
pop
pop
rcll
mov
push
in
insb
push
popa
cld
push
cld
add
insb
pop
sbb
rcrl
sahf
enter
push
sub
pop
adc
out
xorl
add
arpl
lret
ficoml
mov
outsb
add
sti
sbb
insb
mov
outsl
pop
xchg
push
int
icebp
sbb
pop
and
jae
mov
or
or
loopne
daa
ret
addb
pusha
push
xor
imul
mov
xchg
mov
test
dec
nop
add
mov
pop
inc
arpl
jbe
inc
stos
mov
sub
mov
dec
dec
xlat
insl
adc
test
sbb
mov
sub
es
push
aas
sbbb
sbb
iret
shll
outsl
hlt
xchg
in
pop
cmc
sbb
mov
ljmp
mov
xchg
cmp
lods
or
ret
fnsave
inc
rcll
adc
lds
rorb
sbb
int3
sub
rcr
mov
or
cs
sbb
mov
insb
repz
fsubl
add
push
mov
les
bound
das
pop
stos
fisubs
pop
mov
les
popf
out
hlt
popa
bound
int
inc
adcl
cmp
pop
jo
push
add
in
jmp
lods
xor
mov
fwait
test
push
outsl
imul
and
pop
cld
pop
imul
dec
dec
pop
add
cld
loopne
scas
js
outsb
dec
xchg
xor
xchg
cli
add
xor
push
mov
pop
out
cmp
les
shll
aam
or
mov
subl
lods
sub
insb
and
imul
insb
aad
jb
push
jl
xor
inc
push
add
les
scas
add
add
add
int
xchg
jl
inc
shrl
push
inc
inc
and
inc
mov
push
rcrb
xlat
sahf
mull
push
xchg
dec
rcll
loop
insb
pop
aad
sbb
add
jecxz
fmull
mov
fmulp
fmuls
xorb
jl
repz
mov
push
clc
jns
xor
mov
ret
add
dec
subb
adc
or
sti
add
enter
inc
lock
jmp
icebp
xchg
daa
dec
adc
orl
xchg
cmp
jg
cmp
insb
lahf
adc
add
pop
dec
ds
sub
addl
mov
out
add
jge
push
or
insl
dec
xchg
pop
add
jne
push
loop
out
in
dec
insl
sbb
inc
dec
lret
sti
cli
test
rorb
add
rclb
or
fstpt
pop
dec
mov
push
mov
mov
push
leave
pop
loopne
push
insb
lcall
outsb
cmp
inc
push
in
addb
arpl
pop
push
imul
dec
in
pop
pop
sub
cmpsl
add
mov
insb
cmp
add
ds
jmp
jecxz
fcoml
mov
xor
std
fisubrl
loopne
jb
cmp
adc
in
out
rolb
sahf
std
jns
push
lods
sti
inc
shll
test
lcall
pop
mov
xor
sub
adc
fwait
mov
mov
outsl
mov
cmc
xchg
lods
jg
lock
es
pop
sub
call
gs
dec
into
es
sbb
loope
mov
mov
push
subb
in
rcrl
sbb
or
add
int3
cmp
shl
mov
in
push
mov
movsb
xor
pop
mov
pusha
or
push
pop
push
sbb
mov
xor
add
xchg
mov
inc
inc
add
adc
leave
pop
les
fcmove
repnz
add
lcall
sub
jnp
cld
pop
cmp
out
dec
insb
sub
jnp
fiadds
sbb
repz
incl
lcall
cmp
xchg
loopne
cmc
xchg
jmp
sbb
mov
inc
idivl
test
mov
in
outsb
mov
cltd
stos
add
ljmp
sbb
pusha
insb
sub
addb
and
mov
mov
repnz
pop
push
cmp
lahf
and
mov
sbb
jbe
loope
insb
aaa
cltd
cmp
jge
repnz
add
fmull
push
sbb
fistpll
xlat
add
lahf
repz
insb
ret
pop
ja
fwait
mov
in
mov
insb
add
push
rolb
lea
mov
adc
mov
fs
pop
adc
mov
xchg
add
daa
fsubs
inc
add
negb
shl
hlt
pop
jge
jecxz
nop
xchg
pop
fnsave
add
out
pop
adc
jmp
cmpsb
push
adc
fistps
adc
popa
mov
xor
pop
dec
xor
push
sub
pop
mov
pop
imul
lds
test
sbb
add
mov
rcrb
or
pop
cmp
sbb
add
sbb
adc
sbb
insb
mov
add
dec
movsb
cmp
xchg
repz
in
push
cltd
mov
leave
stos
jle
cmp
inc
sbb
pusha
insb
aam
es
add
outsb
ds
clc
pusha
push
loopne
push
adc
sub
xor
lods
loopne
leave
out
sbb
or
add
pop
push
xchg
mov
decl
aam
int
dec
dec
stos
xchg
idivb
outsl
in
js
sbb
add
cmp
adc
push
fcoml
dec
hlt
sbb
jecxz
jg
xor
mov
add
ja
push
rep
xor
mov
insl
pop
cmpb
pop
xor
push
mov
adc
lods
sub
mov
inc
dec
pop
fdivr
mov
gs
loope
push
dec
add
sbb
fwait
aad
push
bound
pusha
lods
std
shl
or
pop
dec
shl
sub
jae
adc
int3
pop
sbb
adc
adc
mov
xchg
xor
xorb
adc
sti
cwtl
add
lods
add
std
scas
push
shl
imul
cs
shrl
lods
in
pop
mov
jl
inc
cmp
in
or
jno
in
xchg
or
or
mov
push
sbb
jne
pop
inc
jo
add
xchg
or
pop
cmp
adc
repz
insl
add
jbe
inc
add
cmpsl
js
pop
pop
adc
xor
fmul
ret
repz
sahf
cs
mov
stos
push
cmpsl
inc
test
in
push
dec
xor
inc
shll
add
or
adc
std
xchg
push
jg
push
insb
mov
imul
repz
or
add
repnz
push
mov
sub
push
ror
pop
add
lret
imul
es
rolb
inc
pop
sub
stc
popl
cli
into
mov
xchg
or
cmp
in
cmp
adc
add
inc
lea
jns
rcrb
jno
jnp
hlt
leave
mov
or
int
sub
rorb
lods
pop
loopne
add
mov
or
in
dec
rcrl
jno
out
jnp
pop
and
es
gs
jnp
or
clc
lock
ljmp
cmp
cwtl
xchg
test
repnz
mov
or
popf
int3
pop
cmpsl
and
sbbb
mov
mov
std
ljmp
cmpsb
inc
popa
rolb
push
or
rcrb
rorb
sti
xor
push
test
pop
or
cmp
jbe
mov
jge
leave
push
jl
outsb
aaa
je
adc
lcall
mov
xchg
loope
sti
popf
lea
and
add
loopne
cmpsl
cmpl
pop
mov
loop
mov
adc
xchg
stos
cmpsb
xor
insl
mov
insl
ljmp
sbb
int3
pop
jp
fucom
or
dec
or
sub
loope
add
inc
icebp
push
jne
pop
or
xor
mov
mov
add
mov
sahf
out
popf
in
pop
jmp
cli
loope
test
xchg
push
add
sub
pop
and
movaps
out
pop
or
pop
in
leave
cmp
adc
negb
imul
dec
xor
les
push
arpl
out
inc
lock
pusha
insb
iret
xchg
add
adcb
incl
dec
jg
and
pushf
pop
movsl
mov
pop
mov
js
jbe
mov
cltd
mov
inc
ficompl
rcll
add
movsl
pusha
cmc
or
inc
das
xchg
pop
jg
cmpsb
or
push
inc
cmp
adc
in
add
pop
pusha
lcall
pop
sub
xchg
pop
add
sub
cmp
pop
sbb
cs
sub
add
sbb
cmc
add
jns
add
sbb
inc
incb
outsb
out
es
add
mov
or
sbb
pop
jmp
mov
jno
cli
sub
adc
insl
mov
sbb
xor
imul
pop
lret
insb
push
stos
lock
push
pop
adc
aaa
sub
pop
add
dec
pop
or
jbe
or
mov
test
pop
inc
inc
insb
imul
sar
out
stos
add
clc
popa
pop
es
sahf
fs
fistpl
pop
insb
loope
dec
add
add
insb
jge
mov
lods
pop
push
mov
insb
mov
or
insb
sbb
call
cwtl
pop
push
jle
aas
lret
fwait
jnp
push
insl
stos
pop
push
pusha
aad
lods
mov
lock
add
add
fwait
add
call
push
ja
and
add
sbb
lock
sub
mov
mov
pusha
add
aas
test
insb
sbb
xor
add
or
out
fistps
mov
pop
jecxz
insb
jecxz
lock
mov
and
adc
add
or
adc
xor
lea
jae
xor
std
popf
insb
inc
sbb
out
dec
cmp
call
push
fldcw
lock
rorl
sbb
movsl
pop
pop
add
insb
adc
call
loop
xor
mov
mov
mov
ret
dec
mov
scas
mov
jle
iret
adc
int3
pop
lahf
in
je
ss
add
fwait
jnp
out
int3
xchg
pop
pop
add
pushf
sbb
loop
push
sbb
dec
adc
stos
pop
add
sbb
add
shlb
lods
lret
insb
notb
in
rclb
pop
popl
push
jo
rclb
stos
add
clc
cmp
or
push
cvtps2pd
add
lock
hlt
outsl
pop
sbb
mov
sub
loopne
test
ds
iret
adc
push
push
int
mov
mov
insb
fildll
mov
in
nop
mov
and
mov
notl
cmp
mov
das
sub
stc
push
lahf
insb
hlt
inc
mov
pop
adc
and
or
sub
mov
in
rol
push
sbb
add
mov
add
dec
push
dec
adc
into
adc
ja
add
stc
arpl
xchg
jg
xorb
int3
lea
xor
lret
loop
es
int
dec
pop
movsb
add
mov
outsl
and
imul
test
and
hlt
jb
rclb
add
arpl
add
pop
dec
pop
jnp
lds
or
add
mov
or
es
xor
or
mov
lahf
clc
fisubrl
mov
jecxz
add
mov
pusha
add
xchg
xchg
lods
icebp
scas
pop
lahf
and
mov
mov
shrl
and
push
or
add
arpl
sub
es
xchg
xchg
call
pop
fisubrs
push
mov
inc
pop
push
add
fwait
loopne
jp
or
ljmp
pop
adc
call
insb
jl
lea
scas
outsl
std
vpsrlw
je
test
mov
sahf
enter
dec
insb
out
mov
push
pop
cli
mov
std
rdmsr
in
dec
pusha
ret
sbbb
jecxz
dec
rcrb
add
mov
adc
inc
mov
daa
mov
pop
inc
lock
adc
and
scas
cmp
jne
inc
pop
cmpsb
add
std
std
jne
ret
pop
cmp
mov
cmpb
loope
lcall
dec
mov
out
jl
call
mov
repnz
icebp
or
out
add
xor
stos
jbe
push
cmp
filds
movsb
sbb
sbb
xchg
incb
icebp
and
add
sbb
insb
sub
stos
aaa
fdivr
aas
fstps
pop
ror
jge
add
pushf
add
cmp
jl
pop
int
neg
xorb
adc
mov
mov
mov
add
mov
push
insb
lock
lods
cmp
mov
mov
add
sub
ss
sbb
pop
loop
mov
sar
and
mov
push
adc
add
adc
adc
inc
push
dec
jl
jns
cmp
pop
test
or
scas
pop
insb
lods
addr16
imul
push
movsl
out
add
jb
imul
out
insb
dec
or
pop
xlat
mov
jmp
lahf
sbb
ror
outsb
aas
xor
fdiv
imul
sub
outsl
cmpl
sbb
insb
stos
or
cmp
push
jg
jnp
add
insl
sar
push
pop
add
cmpsl
cli
shl
sbb
push
and
inc
test
repz
aad
xchg
and
js
push
add
add
insb
ja
xchg
call
add
cwtl
sub
pop
inc
pop
or
insb
int3
xadd
mov
mov
loope
jns
loope
in
nop
scas
imul
jo
xchg
jnp
pop
imul
xchg
adcl
add
int
sahf
add
adc
inc
fildll
mov
push
inc
repz
into
pop
inc
orb
outsl
ja
cmp
lret
lods
lds
add
inc
push
push
and
xchg
shlb
mov
enter
xchg
and
andb
imul
push
pop
xlat
rclb
push
insb
jg,pt
sbb
sbb
movsl
add
add
test
fbld
cmp
lret
add
loop
das
insb
mov
ja
ficomps
inc
leave
das
ror
lods
dec
rcrl
jge
lds
sbb
add
movsb
push
or
gs
lods
aaa
dec
xchg
in
pop
bound
jne
add
imul
mov
sti
pop
ljmp
punpcklbw
and
and
xchg
sub
cmc
ret
xor
cld
fiadds
leave
sub
pop
push
call
ret
mov
rcll
jp
xor
adc
inc
mov
xchg
les
adc
push
mov
jns
daa
scas
std
add
mov
pop
nop
ja
outsb
or
add
mov
push
cltd
insb
dec
test
int3
and
daa
outsb
mov
or
addr16
call
dec
jb
pop
inc
icebp
mov
pushf
es
rol
sub
pop
and
jo
sub
jns
imul
inc
jnp
ret
inc
sbb
data16
ja
or
lret
mov
add
cld
popa
fidivl
ret
push
push
adcb
inc
lea
sahf
aad
pusha
fstps
add
gs
jmp
pop
int3
mov
andnps
add
hlt
out
pop
shll
xchg
mov
and
xor
jg
in
hlt
shll
stos
test
hlt
fsubrs
and
pop
rclb
scas
mov
aaa
and
pushf
push
outsb
gs
aas
mov
xor
mov
test
roll
sbb
add
jp
fs
insb
iret
movsl
inc
ss
mov
push
movb
rorb
dec
sub
sbb
das
lods
inc
sub
loopne
lcall
test
dec
push
sbb
pop
sbb
sbb
ss
mov
add
push
lods
out
adc
inc
cld
push
in
daa
xchg
pop
xchg
push
stc
insb
fldl
inc
jbe
and
rcll
je
and
int3
jmp
insb
std
mov
hlt
inc
lea
push
xchg
and
add
inc
fdivr
xor
adc
or
or
fs
insl
rcll
adcb
jo
insb
inc
sbb
and
push
cld
test
sub
and
add
popf
mov
lahf
shl
add
sbb
adc
xor
das
xor
xchg
push
pop
jns
aaa
scas
js
and
push
dec
cmp
rorb
repnz
pop
icebp
push
and
pop
mov
std
sub
xchg
seto
pop
xchg
aaa
add
and
sub
push
out
imul
jmp
mov
pop
fldenv
rclb
push
scas
fisttps
cmp
mov
data16
jno
movsb
mov
clc
insb
jl
lret
je
rcrl
or
xor
test
aad
dec
insb
push
enter
dec
repnz
pop
cmpsb
iret
mov
jo
fwait
dec
jmp
push
in
lock
inc
jno
pop
push
loope
mov
mov
push
add
sub
stc
add
adc
insb
call
cmp
fwait
pop
sub
pusha
lds
add
adc
sbb
jle
mov
jno
insb
mov
dec
repnz
pop
in
lret
push
xor
mov
stc
lock
stos
xchg
xchg
sbb
bound
iret
arpl
nop
jns
pop
jecxz
fwait
out
out
ljmp
mov
fldcw
sti
and
insb
popa
jg
inc
sub
cmp
cli
mov
call
in
clc
stc
cmp
xor
lahf
and
subb
rcl
mov
jecxz
test
jb
insb
sub
ja
push
fcomp
insb
adc
lea
fst
lock
xor
rolb
sbb
enter
adc
mov
cmp
subl
insl
addr16
icebp
leave
and
add
insb
jbe
das
xchg
imul
and
cmpsb
in
push
mov
fldcw
addr16
inc
shl
pop
xorl
scas
sbb
arpl
sub
push
imul
add
mov
dec
pop
out
sbb
ret
pop
jmp
clc
test
add
test
mov
jecxz
pop
xor
dec
dec
xor
aaa
ret
out
fcmovnbe
testb
bswap
rcr
xor
adc
subb
sbb
jl
pop
jb
and
dec
mov
gs
cmp
jl
push
inc
fisttpll
int3
js
push
mov
and
hlt
pop
sbb
xor
sub
insb
pop
je
scas
loope
lock
pop
and
sub
leave
add
es
jecxz
inc
jge
add
decb
and
and
out
lock
shrb
push
add
insb
or
jb
les
out
mov
push
test
push
and
les
in
sbb
ret
insb
xlat
jae
push
andl
pop
jle
jp
dec
call
fdivrs
insl
pop
pop
sub
add
push
movsl
aad
clc
insb
pop
xor
xor
test
cwtl
addr16
test
fldcw
lcall
mull
pop
sub
sub
jp
stos
ds
sahf
cmpl
add
mov
jnp
cmpsl
sub
lds
stc
add
dec
outsl
nop
test
xor
pop
gs
sbb
repnz
sbb
test
sbbb
insb
pop
push
int
rcl
push
push
cwtl
add
in
shlb
and
mov
je
xchg
or
xchg
mov
mov
lret
repnz
mov
aam
and
mov
mov
mov
imul
push
xor
into
sbb
or
mov
xor
inc
fldt
rcr
jecxz
add
call
aam
jb
cmp
mov
cwtl
sahf
addr16
lea
insb
cmpb
pop
adc
mov
scas
mov
popf
mov
dec
xchg
out
pop
movsb
jmp
xchg
daa
jne
add
je
or
mov
adc
pop
add
hlt
lods
insb
mov
test
jle
dec
fistps
mov
jle
inc
add
out
pop
imul
adc
add
cmp
mov
adc
sub
mov
clc
pop
popf
je
movsl
les
xor
hlt
dec
add
mov
pop
lret
out
add
add
dec
cmp
dec
add
mov
cmp
pop
int3
fs
loopne
pushf
sbb
add
stc
sarl
add
jne
xor
insb
jp
popf
xchg
cmpsb
cmc
cmp
leave
jnp
add
scas
lcall
loope
subb
jns
out
outsl
mov
jl
or
data16
mov
insb
jecxz
hlt
inc
mov
push
lods
dec
jle
dec
insb
jg
adc
push
cs
mov
int3
sbb
jle
inc
mov
rol
fdivp
pop
insb
jmp
popf
mov
dec
pop
fldt
insb
lret
mov
ret
mulb
xchg
mov
fiadds
fdivl
insb
adc
jge
pop
ss
in
cmp
filds
pusha
inc
lds
cmp
or
add
adc
out
push
movsb
in
bound
mov
pop
add
insl
mov
sub
xchg
cmpsb
add
pop
and
aad
lock
jo
ret
out
movsb
insb
orb
lds
outsb
or
mov
mov
sbb
lahf
mov
pop
or
xor
or
mov
pop
and
dec
iret
repnz
out
stos
ja
mov
inc
pushf
add
inc
cmp
or
adc
jg
add
das
add
lock
lea
das
cltd
out
rorb
imul
or
xor
and
sbbb
jne
aas
or
loopne
insb
sub
xchg
loope
test
into
adc
add
push
hlt
stc
push
add
pop
outsb
mov
ja
movsb
mov
dec
add
sub
pop
in
add
mov
je
and
push
test
ret
outsl
inc
push
andb
mov
xor
and
mov
sbb
adc
or
int3
in
jmp
pop
je
adc
movsl
stos
inc
je
mov
push
out
addb
aas
push
and
cmpb
add
push
dec
sub
adc
in
xchg
inc
inc
and
inc
adc
in
and
cmpb
jmp
push
iret
les
adc
inc
jp
mov
add
ss
sarl
data16
mov
pop
or
outsb
js
mov
ss
mov
cmpsb
inc
pop
rcrl
jg
adc
iret
ret
fldt
cmp
xchg
mov
add
inc
mov
outsl
sbb
clc
adc
jns
sbb
mov
fidivs
aam
ret
mov
add
dec
xor
mov
imul
cmp
or
jl
mov
aas
add
inc
rol
in
mov
mov
adc
push
push
inc
aam
jp
enter
mov
dec
cmpsl
pop
in
sub
xchg
sub
bound
fldcw
lret
lahf
dec
arpl
xchg
add
stos
push
push
xchg
and
rorl
add
std
pop
xchg
ficompl
subl
insb
in
into
das
push
scas
mov
mov
orb
enter
pop
gs
xchg
dec
and
pop
mov
imul
adc
or
and
xlat
mov
stos
push
ds
add
fucom
pop
loop
rolb
cmp
cwtl
mov
rorl
adcl
lret
and
insl
pop
insb
cmc
sub
inc
sbb
add
and
jns
insl
push
in
sub
jp
outsb
cmp
adc
adc
mov
jne
cmpsl
subl
push
int3
push
insb
pop
mov
imul
pusha
aas
inc
add
cmc
icebp
inc
sbb
repz
pop
jmp
add
fldcw
add
push
bound
insb
push
les
aas
rcrb
js
xor
xchg
xchg
mov
cltd
cmp
call
lds
dec
insb
bound
mov
rclb
insb
or
pop
and
xchg
test
sahf
movntq
mov
push
and
fucomp
and
ja
insb
pusha
xor
into
sub
je
pop
insl
xor
bound
in
inc
adc
mov
mov
mov
negl
pop
push
lcall
mov
pop
sbb
or
cmp
in
pop
sbb
fldt
dec
aam
insb
outsb
lods
pop
jmp
push
adc
mov
xor
inc
push
jo
shrb
xchg
arpl
pushf
mov
cmpsl
insb
leave
add
mov
pop
das
loop
cltd
out
cmpsl
or
or
mov
leave
inc
sub
xchg
popa
insb
dec
push
adc
push
in
mov
jnp
shll
add
jne
insb
sti
pop
jb
or
add
fsubl
loop
inc
add
aad
fs
pushf
inc
mov
fistl
shrl
mov
pop
lock
pop
stc
sbb
jb
mov
mov
xor
cmp
pop
or
jae
inc
sti
clc
push
add
fbld
add
pushf
hlt
clc
orb
pop
fistpl
sub
int
mov
push
add
mov
imul
jmp
test
dec
adc
fbstp
insb
mov
mov
std
add
outsb
inc
sbb
out
stos
imul
fcmovbe
aam
call
rorl
pop
loop
cmp
out
js
cmp
sbb
in
pop
arpl
jmp
add
cwtl
int3
mov
xchg
xchg
lock
pushf
push
frstor
nop
dec
and
arpl
hlt
sub
or
and
or
fistpl
mov
das
mov
rolb
inc
imul
pop
pop
mov
mov
insb
in
fs
cmp
stos
repnz
inc
sub
out
insb
fdivr
int
mov
sarl
stc
scas
orl
nop
iret
enter
cli
addr16
shll
sbb
xor
and
icebp
insb
push
pop
mull
sbb
pop
push
outsb
xchg
push
push
test
push
sub
ret
fwait
fwait
add
and
add
jecxz
sub
mov
clc
adc
filds
mov
xchg
pop
cmc
cmc
add
cmp
repnz
flds
xchg
call
inc
xor
add
xor
jb
adc
xchg
fcomps
xchg
jg
subl
out
pop
lret
jo
movsl
push
jns
stos
testl
mov
popf
inc
push
addl
inc
insb
aam
lock
in
cmp
xchg
fsubrl
into
or
push
mov
test
lahf
adc
sbb
pop
pop
cwtl
pop
loopne
mov
push
fidivl
inc
out
mov
mov
pop
xchg
dec
pop
and
pop
xchg
add
mov
call
js
sub
std
push
sbb
jo
pop
imul
push
pop
stc
cli
jb
cmpsl
fistps
stos
add
test
adc
out
add
pop
bound
push
sub
add
add
int3
out
test
ljmp
mov
mov
add
sub
ror
add
add
jmp
add
out
push
out
lods
xor
adc
lds
pop
dec
js
rol
shrb
movsl
xchg
mov
shlb
xlat
cwtl
and
dec
lret
push
scas
outsl
jmp
mov
imul
and
movsl
jnp
aas
pop
orb
rclb
fcmovbe
cmp
pop
push
insl
push
js
aas
mov
pushf
jnp
pop
ror
inc
call
insl
sbb
jne
imul
rol
xor
pop
fldenv
push
mov
xor
xchg
jmp
and
add
and
lock
rol
orl
insb
push
inc
lcall
lods
sahf
mov
sbb
mov
outsb
and
push
push
into
mov
rclb
push
and
adc
aas
add
outsl
out
add
divb
mov
sbb
push
out
out
sub
xchg
dec
inc
jmp
inc
lock
inc
sarl
nop
pop
add
sbb
outsb
add
jno
mov
pop
pop
cmp
push
xchg
mov
popf
mov
mov
pop
inc
fists
pop
sbb
and
pop
xor
mov
call
adc
mov
loope
enter
test
adc
shlb
push
push
or
scas
sahf
jo
je
jno
cmp
mov
testb
pop
add
mov
add
lcall
test
fwait
adc
pop
add
stos
inc
sbb
loop
push
push
insb
mov
xor
jle
mov
insb
test
jo
or
in
jp
jl
flds
mov
sub
sbb
mov
push
mov
push
inc
insl
ljmp
nop
incl
loopne
subb
emms
inc
jns
add
lods
idivb
test
jnp
push
pushf
jb
mov
insb
hlt
pop
or
and
fsubr
jl
cmc
cmpsb
es
fs
hlt
adc
sbb
dec
fwait
das
xor
add
fsts
add
icebp
xor
push
add
inc
add
push
rcr
leave
lahf
std
mov
in
je
loop
mov
iret
pushf
ja
loopne
stc
add
jb
pop
add
in
fildl
xchg
push
push
cltd
pop
fcoml
das
push
jl
and
or
loope
test
mov
pop
dec
mov
and
pop
jecxz
xchg
sti
xor
or
loopne
insb
sub
outsl
push
outsb
sti
or
movsl
lea
dec
sbb
add
or
jge
adc
pushf
sub
dec
mov
push
sbb
cli
jecxz
pop
insb
jg
sbb
mov
pop
jmp
dec
aas
in
loopne
js
arpl
and
aas
cltd
lret
add
shll
ss
pop
push
shrl
outsb
jl
sbb
inc
xchg
loopne
adc
arpl
inc
inc
sbb
pop
xchg
loopne
scas
ja
mov
sbb
cmp
pop
aam
loope
mov
adc
jo
test
add
mov
push
add
notb
ret
test
scas
mov
repnz
cwtl
pop
filds
adc
mov
or
stc
mov
mov
dec
sbb
add
ret
xor
inc
mov
jbe
iret
mov
pop
aaa
decb
and
jg
rep
lds
xor
es
arpl
xchg
popf
cmpsl
popl
adc
ljmp
mov
popa
sahf
lahf
push
mov
rcrb
mov
push
jnp
xchg
pop
lds
outsb
sub
add
js
xor
xorb
pop
icebp
fsubrs
cld
gs
mov
mov
push
aad
out
adc
repz
xchg
rcl
arpl
pop
xchg
cmp
mov
mov
mov
iret
ja
jb
pop
sahf
jmp
fisttpl
mov
add
sbb
lcall
adc
ja
mov
sbb
push
out
add
cs
or
add
pop
inc
out
cmp
push
mov
jb
pop
xor
call
add
and
fcomps
or
cmp
push
pop
jle
int
xchg
fsubl
or
inc
push
push
cmp
pop
hlt
push
ret
dec
xchg
push
sub
cmc
jmp
ss
addb
mov
lods
xor
in
lcall
jo
mov
movb
push
popa
adc
push
push
bound
lret
xor
sub
lret
jno
pop
mov
scas
sahf
cmp
cmp
mov
fstpt
pushf
pop
sub
ja
adc
in
test
sub
adc
and
aaa
insb
inc
test
popf
or
inc
lcall
cmp
xchg
testb
loopne
and
add
int
lret
mov
in
insb
push
pop
push
jne
cmp
loope
adcl
mov
jo
jo
ret
add
lock
inc
out
sub
and
adc
sub
mov
insb
xchg
dec
mov
xchg
xor
push
enter
and
push
leave
jbe
sbb
add
rclb
xchg
push
jge
lret
nop
sub
push
mov
xor
push
push
mov
fucomi
xor
arpl
fdivrs
mov
or
insb
sub
fcomip
push
test
cmp
mov
insb
fistl
out
in
cmp
xor
xchg
pusha
pop
bound
insb
sahf
or
push
pop
or
or
lret
sbb
pop
cld
adc
aaa
adcl
push
xchg
mov
push
sarl
mov
movsl
shr
jge
mov
imul
cmp
insb
cld
mov
sbb
jp
leave
outsb
mov
xchg
add
and
imul
lahf
xchg
cmp
pop
mov
insl
jle
lods
add
movsb
cli
xchg
stos
inc
cmp
add
jno
fldt
jne
insb
addr16
in
loope
and
data16
fistps
pushf
dec
insb
add
fisubrs
sbb
jg
data16
lahf
mov
roll
sbb
push
jae
add
mov
xchg
inc
xchg
lret
call
mov
rolb
pop
rcrb
cmpsb
les
xorb
stos
or
loope
leave
insb
sbb
jecxz
daa
mov
push
mov
cmpsl
pop
sub
sbb
pop
sub
out
orl
push
in
test
push
add
repnz
adc
add
addr16
pop
movsb
jne
pop
negl
pop
in
cwtl
outsb
and
dec
add
rorl
cmpsl
pop
dec
sbb
xchg
push
xor
loop
and
mov
pusha
cmp
js
jl
pop
sbb
lods
jp
js
push
aas
xor
jge
fists
add
cmpsl
movb
ret
imull
test
stos
ljmp
add
adc
xchg
sarl
lods
testb
inc
add
add
std
xor
andb
in
jnp
add
and
js
xorl
cmp
fiadds
insb
out
pop
in
push
inc
push
jg
pop
mov
add
push
push
push
sub
or
pop
insb
mov
andl
cmpsl
mov
cwtl
xchg
or
pop
lods
jae
loop
sbb
movsb
xchg
inc
pop
adc
test
pop
xchg
mov
pop
stos
mov
cmp
pop
add
mov
clc
outsb
lds
or
mov
imul
xchg
out
cwtl
mov
mov
outsl
jno
and
or
insb
mov
outsl
add
fbstp
inc
ljmp
add
mov
jns,pn
clc
adc
repnz
lcall
enter
les
or
add
cld
pop
repnz
movsl
mull
inc
pop
insb
push
push
cwtl
add
pushf
out
pop
ljmp
xchg
add
mov
sbb
dec
shrl
add
push
and
pop
aaa
mov
int3
add
adc
in
jecxz
add
movsb
and
inc
add
sbb
add
cmp
imul
mov
dec
iret
sbb
jge
jg
rorl
sbbb
out
add
cmp
adc
pop
jl
rolb
sbb
movsb
not
push
and
xchg
cmpsb
pop
insb
popf
xchg
or
mov
add
fstpl
pop
dec
repnz
dec
add
test
gs
fstps
add
mov
ret
and
insb
lahf
int
popf
pop
jecxz
add
pop
stc
out
pusha
jge
cmp
shll
add
dec
insb
sub
add
push
inc
pop
xlat
ljmp
outsl
inc
ficoml
loop
shlb
test
insb
stc
jp
jl
shl
mov
push
idivl
pop
sub
les
ret
mov
push
mov
sbb
int
imul
push
repz
pop
or
in
dec
mov
cmp
pop
cmp
sub
adc
test
pusha
scas
dec
inc
ret
into
ficomps
pop
inc
ficomps
shrb
lcall
sbb
mov
xchg
fstps
mov
fs
insb
cmp
mov
pop
loop
jo
add
xchg
sub
cmp
add
push
jno
ds
push
clc
pop
je
lods
hlt
cli
out
roll
or
in
andl
push
lea
add
nop
mov
push
imull
sti
aaa
int
gs
add
lock
insb
push
mov
cld
add
add
out
pusha
jae
lock
sub
xchg
dec
ror
or
lds
and
lret
sub
scas
imul
sub
mov
ret
out
lahf
insb
dec
dec
and
js
int
mov
loopne
roll
data16
push
add
pop
adc
into
movsl
loop
xchg
mov
dec
xor
icebp
sbb
push
cmc
test
mov
shrb
jmp
loopne
dec
adc
pushf
mov
add
cmpsb
jp
mov
mov
xor
inc
insb
pop
dec
mov
addr16
xchg
scas
and
jo
stc
daa
shr
in
pop
sbb
pop
fwait
imul
cli
jmp
xchg
rcrb
dec
pop
iret
cmpl
add
das
in
fistl
inc
and
mov
cmc
pop
vpavgw
mov
inc
pusha
lock
ficomps
pop
loop
push
repz
jg
jbe
adc
push
and
lcall
lds
sbb
xchg
jae
cwtl
mov
loop
test
arpl
jp
iret
ljmp
mov
fcomp
fdivl
jbe
adc
out
xchg
jb
xchg
incl
xor
stc
pusha
sub
fxch
add
arpl
xchg
inc
add
mov
call
sbb
jmp
test
push
push
das
lds
add
sbb
add
push
aas
add
push
sub
adc
xchg
cwtl
in
add
sahf
scas
stos
loope
clc
shlb
cmp
cmp
xchg
mov
add
push
shlb
xchg
pop
dec
or
and
jne
clc
xor
fcoms
ja
adc
and
rclb
insb
repz
arpl
inc
fisubl
movsb
call
add
lcall
add
cmpsl
shl
imul
enter
add
mov
and
repz
cmp
add
cmp
add
sbb
jno
xchg
lds
je
jno
or
cs
add
shll
xchg
adc
shrb
movsl
mov
bswap
sbb
or
imul
shr
das
fwait
outsb
movsl
rorb
cltd
aas
loopne
sbb
inc
jns
sbb
sbb
mov
repnz
aaa
adc
xchg
add
adcb
hlt
ljmp
daa
xchg
xlat
sbb
add
sub
add
jnp
stos
add
sbb
push
hlt
cmc
scas
pushf
and
mov
xor
or
lock
push
rol
adc
add
mov
pop
add
fs
ret
xchg
mov
jmp
inc
ds
aas
out
mov
rcrb
loope
inc
mov
out
imul
add
cmp
add
insb
pop
test
inc
mov
pusha
push
sbb
xchg
sbb
adc
sub
gs
test
aad
jp
insb
mov
loope
mov
cmp
sbbb
popf
cmpsb
or
hlt
loop
ret
adc
out
sub
adc
lcall
pop
inc
dec
and
pop
pop
cmpsl
push
into
mov
aas
pop
ss
in
out
jge
iret
lahf
add
xchg
cwtl
ret
insl
inc
dec
mov
out
sbb
jecxz
and
cmp
fs
mov
orb
xchg
sbb
ror
add
push
cmpsb
xor
pop
fs
fldt
icebp
insb
js
pop
fdivrl
pop
cmp
pop
fisubl
loope
jo
jge
add
sbb
push
insl
or
jbe
cmc
fdivrl
and
dec
aas
sbb
sub
hlt
xor
hlt
arpl
sub
fcomip
push
sbb
rcr
lods
jmp
adc
mov
sub
and
scas
bnd
cmpsl
in
add
sbb
arpl
fldt
cmpsl
ss
pushl
sbb
pop
ret
inc
sub
jno
pop
push
xchg
add
xchg
and
jo
push
xchg
ss
lds
stos
lea
repnz
mov
out
jmp
inc
iret
dec
incl
mov
sbb
jb
xorb
mov
add
mov
xchg
outsb
sbb
adc
cmp
ss
dec
bound
or
cmpsb
add
in
sbb
mov
jle
daa
insb
dec
xchg
call
out
repnz
push
out
cmp
scas
inc
xor
or
sbb
ds
mov
jle
add
in
test
out
lods
xchg
push
pop
pop
dec
mov
dec
and
mov
lret
adc
pop
add
ds
sbb
pop
leave
divb
mov
daa
loope
lahf
insb
xchg
ss
add
inc
and
inc
dec
out
xchg
out
dec
shrl
cmc
inc
sbb
dec
loopne
gs
push
sbb
pop
xor
pop
lods
enter
sti
add
js
mov
xchg
pop
repz
fiadds
insl
pop
cli
jbe
out
call
mov
add
stos
push
cltd
in
ljmp
movsb
xchg
xchg
and
mov
push
outsl
stos
push
fcmovnb
push
push
add
cmp
test
sahf
pop
push
scas
mov
push
movsl
dec
roll
dec
sub
add
inc
lea
jg
lods
cld
pop
jns
pushf
cmp
xchg
addb
lods
inc
dec
push
and
mov
rolb
xchg
push
xor
ss
inc
imul
jnp
insb
inc
push
in
dec
inc
pop
jmp
xor
cs
mov
pop
mov
inc
pop
xadd
dec
and
cmpsl
insb
aad
mov
push
fildl
mov
mov
inc
mov
xchg
pop
outsl
ljmp
push
in
add
jge
or
ja
pop
dec
xchg
dec
jle
sbb
add
mov
in
pop
lea
leave
and
sbb
add
push
or
into
loop
push
adc
jg
and
xchg
push
imul
jns
lds
shr
xlat
loop
cmc
test
inc
jo
inc
das
insb
addr16
lret
add
add
aam
pushf
aam
cmp
xor
pop
add
rorl
lahf
out
jb
cld
mov
insb
out
pop
fcmovne
mov
outsb
sarl
xchg
rolb
jne
fadds
insl
and
sub
push
or
fldcw
mov
push
mov
insb
add
dec
out
jo
ljmp
insb
insb
imul
push
add
sub
movsl
les
push
jae
xchg
enter
pop
add
ja
sub
repnz
movsb
sarb
pop
mov
add
stc
push
adc
clc
or
cmpsb
pop
out
fmull
pusha
inc
fwait
mov
jb
jo
dec
nop
dec
xor
xlat
mov
insb
ret
int3
rcr
fsts
pop
repz
or
sahf
xor
lds
or
xchg
shl
pushf
xor
dec
or
add
loopne
cmpl
pop
mov
push
fidivrs
inc
rcrb
fistps
pop
daa
and
push
je
jae
lods
xchg
add
arpl
add
mov
or
dec
adc
add
sub
stos
add
xor
lcall
inc
stos
or
pop
mov
icebp
jg
xchg
cmc
loopne
in
dec
je
outsl
scas
mov
imul
loopne
insb
inc
add
shr
clc
fnstsw
in
bswap
sub
enter
push
inc
mov
daa
dec
repnz
fsubp
fistpl
inc
iret
testl
mov
add
ljmp
dec
orl
insb
es
and
pop
adc
stos
push
cwtl
enter
mov
dec
sbb
jnp
sub
sahf
sub
push
idivb
ret
inc
in
xchg
ficompl
jmp
mov
test
add
xor
push
inc
fstl
lea
mov
mov
sbb
cs
test
nop
out
repz
scas
sbb
add
or
aaa
iret
push
mov
loopne
xchg
sbbb
loop
pop
pop
fwait
repz
or
sub
pop
cwtl
inc
sbb
test
sbb
adc
imul
mov
mov
outsl
testl
fsubr
pop
dec
ss
pop
push
popa
fcmovbe
xchg
and
add
push
out
or
push
enter
xchg
jo
pop
sahf
add
fdivrs
dec
add
jle
cmpsb
mov
lgs
adc
mov
nop
insb
test
jecxz
repnz
jae
insb
fs
outsl
fs
dec
cs
fiaddl
clc
addl
inc
push
inc
add
jge
mov
mov
psraw
add
sub
fldt
into
data16
call
je
in
xchg
sbb
xor
cmpsb
add
adc
sub
jecxz
orb
cmp
insb
addr16
bound
xor
das
icebp
pop
xchg
call
pop
pop
testl
jbe
jecxz
shl
cli
sbb
jp
jns
loope
scas
sbb
inc
add
mov
inc
pushf
sbb
jb
icebp
mov
xchg
cmpsl
add
xor
and
scas
push
loope
dec
and
cmp
cmp
mull
cltd
add
les
nop
inc
sarb
insb
xchg
out
jg
mov
pop
xchg
pop
insb
pop
or
dec
pushf
or
mov
xchg
lods
nop
cmpsl
sbb
mov
xorb
ja
sub
adc
jns
ret
lcall
pop
jnp
mov
in
add
out
shll
add
ret
adc
jge
or
ss
pushf
mov
lock
pop
adc
cli
mov
mov
push
scas
add
dec
xor
ja
jno
dec
mov
pop
add
mov
insl
xchg
in
scas
mov
mov
pop
adc
jp
fidivrs
push
subl
add
pusha
ljmp
cmp
pop
sub
mov
insl
pop
jae
hlt
or
addl
rcrb
add
push
in
adc
xor
pop
and
inc
add
or
jnp
in
out
adc
sub
mov
ljmp
cs
sub
insb
fistl
push
popf
aas
int
sbb
mov
lret
out
shll
vpsllq
movb
push
jae
push
pushf
jecxz
gs
fwait
jmp
push
insb
pop
sbb
loop
arpl
daa
mov
ret
orb
sub
xchg
xchg
fsubs
pop
pop
aam
in
inc
push
ret
pop
and
and
adc
jge
ficompl
insb
or
xchg
adc
inc
mov
add
movsl
rorb
sub
dec
je
pop
int3
fldl
das
imul
jecxz
imul
in
xchg
fiadds
aaa
imul
jmp
jnp
cltd
ja
imul
bound
stc
movl
into
push
jo
sahf
add
int
cmp
mov
pop
popf
mov
out
sbb
inc
lods
lahf
mov
pop
dec
orb
test
push
aad
add
cmp
nop
jbe
mov
or
cwtl
inc
and
out
rep
scas
mov
ret
and
ret
in
sti
cmp
add
insb
jbe
adc
mov
push
test
scas
and
in
mov
dec
jg
stos
imul
aam
xchg
xor
and
mov
loopne
jo
das
jecxz
repz
push
pop
mov
insb
xor
daa
jmp
pop
mov
xchg
fisubl
shl
or
scas
push
orb
adc
mov
add
jmp
or
push
dec
divb
dec
setb
mov
into
sbb
mov
daa
push
sub
pushf
stos
cmpsl
push
sub
add
xchg
xlat
and
call
andnps
popf
cmpsl
dec
push
insl
mov
inc
inc
imul
jne
iret
mov
insb
cmp
stos
hlt
arpl
pop
adc
cs
xchg
add
or
push
jns
push
add
add
loop
cmp
popa
push
leave
adc
in
repz
add
test
jle
jecxz
jmp
mov
rcl
ret
add
sub
cld
or
test
and
in
jbe
dec
out
aaa
xchg
scas
xchg
xchg
pop
adc
mov
cltd
inc
push
ljmp
out
scas
push
push
pop
xchg
and
je
xacquire
push
xor
jecxz
imulb
aaa
pop
jns
add
mov
insb
sbb
push
jp
adc
jo
aad
and
xor
pop
in
jmp
jg
pop
adc
pop
aam
xchg
push
test
jg
xchg
mov
js
add
aad
dec
cmp
cli
or
insb
sbb
mov
repz
and
push
sti
mov
notl
add
dec
pop
xor
xchg
leave
jo
sti
dec
xchg
insb
mov
xchg
pop
call
bound
add
sbb
mov
add
in
jbe
pushl
aam
jg
imulb
shll
test
jp
aas
shll
jnp
mov
icebp
push
sbb
data16
pop
mulps
mov
lret
lcall
adc
xor
mov
inc
js
outsl
lea
in
pusha
and
test
fstps
les
sbb
pop
push
jecxz
pop
dec
mov
add
lahf
adc
sub
push
sbb
push
cltd
lods
ret
pushf
fiaddl
pushf
inc
push
sbb
fbstp
sti
xchg
daa
iret
xor
add
xorb
cmc
clc
adc
pop
xchg
pop
add
mov
ja
add
shlb
add
fstl
push
bound
and
add
pop
int3
clc
push
xchg
sbbb
pop
sbb
xchg
filds
sbb
js
pop
and
stos
push
xor
jge
insb
jno
push
add
xor
sbb
add
in
cmpsl
incb
loop
pop
add
pop
cmp
in
jg
hlt
stos
pop
ds
jp
in
test
scas
pop
or
inc
sti
aam
fistps
sbb
mov
cs
insb
xchg
inc
mov
or
xchg
mov
jmp
shll
sbb
pop
loop
inc
add
push
pop
mov
mov
xchg
sub
int
mov
push
add
lods
lahf
ja
mov
or
or
xchg
add
ss
loop
lods
rcrb
test
xor
lahf
jmp
gs
or
cli
shlb
sbb
mov
ljmp
call
sbb
xor
cmp
cmp
gs
daa
xor
mov
cs
aas
and
xor
push
leave
rcrb
ret
pop
test
jo
out
mov
roll
addb
pop
add
das
adcb
popa
add
fcompl
js
jl
divl
insb
push
xor
pop
push
pop
scas
adc
add
add
mov
pop
icebp
dec
in
inc
cmc
sahf
inc
popf
add
jne
cmp
lock
dec
test
adc
or
aaa
push
mov
add
test
stc
mov
add
adc
cli
mov
add
cli
jge
or
adc
xor
vpsubusw
fwait
lret
push
into
pop
lcall
int
sub
lods
lock
jle
mov
xor
adc
ss
scas
arpl
lock
inc
aam
mov
adc
add
lret
test
das
pop
test
jno
das
cmpsl
add
add
fst
push
cmp
hlt
aad
pop
dec
mov
adc
jecxz
xlat
cmp
mov
inc
add
jg
add
mov
jle
pusha
mov
not
xchg
mov
sub
flds
add
mov
push
jae
int
fstpt
les
movl
cld
pop
xchg
adc
out
aam
dec
lahf
and
sbb
inc
push
jo
adc
add
stos
dec
cltd
or
sahf
insb
mov
cmp
aas
negb
and
fisubl
and
push
ss
xor
call
dec
pop
cmp
mov
gs
cli
pop
lcall
or
rorl
jae
fisubrl
push
int3
imul
movl
pop
jg
insl
push
test
pusha
add
insb
pop
movsl
xchg
push
add
sarl
mov
clc
mov
push
xchg
cmp
leave
sbb
inc
mov
lods
pushf
adc
cmp
dec
add
adc
les
jne
insb
mov
mov
sub
inc
jle
add
ljmp
add
mov
pop
pop
push
out
add
jge
push
jno
push
dec
imul
pop
pop
stos
mov
mov
or
jmp
mov
xchg
jns
mov
out
notb
pop
mov
dec
aaa
outsb
add
push
jg
test
inc
jmp
add
imul
mov
dec
inc
fwait
pop
scas
push
out
jmp
inc
dec
icebp
mov
lock
daa
add
inc
pop
cmc
add
shll
sbb
insb
xchg
test
dec
xor
mov
cmp
addr16
cld
or
pop
sbb
pop
in
movsl
cs
lods
xchg
shlb
or
out
add
push
dec
and
loopne
aas
xor
jg
xchg
pop
clc
fldt
gs
ret
pushf
sub
jne
ja
add
fucomi
movsl
insb
jmp
roll
mov
dec
push
outsl
add
mov
cmp
inc
add
pop
add
push
add
push
and
push
mov
jb
mov
aad
add
les
adc
leave
xor
insb
loopne
ret
out
push
jg
push
pop
and
fsubrs
loopne
and
outsb
cmp
inc
outsl
mov
nop
cmp
pop
jo
sbb
or
stos
iret
out
jl
add
shrl
clc
dec
fwait
add
shr
sub
add
push
xchg
jns
or
andl
mov
lahf
or
jecxz
rclb
ret
pop
add
mov
call
mov
fcmovnu
or
push
mov
pusha
sti
xor
out
lea
push
jbe
inc
add
xchg
mov
xor
cmp
pop
sbb
sbbb
mov
les
mov
cli
sub
or
fstpl
pop
lahf
in
mov
add
popa
leave
cltd
mov
xchg
add
sarl
sbb
shrb
or
js
ret
mov
addb
mov
mov
jbe
cmpsl
arpl
push
mov
jp
xor
insb
xchg
add
or
push
adc
aas
arpl
iret
xchg
aas
out
add
add
xchg
or
ja
sub
insb
jle
xchg
imul
ret
and
jecxz
sbb
jmp
shrb
ljmp
fstps
fbld
cmpsl
jae
in
lods
cmp
add
mov
inc
mov
gs
xor
mov
lea
sbb
int3
pushf
mov
pop
pop
in
xchg
mov
popl
mov
push
in
pop
and
hlt
dec
sub
jae
adc
jecxz
lahf
call
push
insb
ret
inc
xchg
insl
daa
repnz
mov
mov
call
xor
sbb
lahf
test
push
fwait
add
insl
add
ljmp
dec
pop
or
adc
leave
mov
test
fwait
inc
jae
scas
fadd
in
pop
call
movsl
add
jb
insl
pusha
xlat
push
lcall
add
pop
imul
inc
js
addl
nop
xchg
xchg
xchg
insb
out
call
jl
or
lahf
dec
add
movsl
lahf
rolb
cmp
into
notb
jno
sub
rorb
pushf
and
mov
push
aad
bound
je
loop
jae
push
jbe
pop
xchg
xchg
out
add
mov
cli
add
bound
mov
rcll
aaa
adc
jne
test
xor
fnstsw
mov
xor
pop
mov
vmwrite
or
out
pop
stos
in
dec
or
adc
mov
adc
dec
mov
cmp
jmp
call
popf
out
insb
mov
cwtl
shlb
andb
mov
mov
or
xchg
pusha
shlb
dec
shr
add
fbld
test
es
mov
sbbl
mov
jl
imul
sbbl
movntq
daa
mov
and
add
test
jp
loopne
mov
ficoms
xchg
xor
cmp
pop
not
ret
gs
scas
inc
sbb
pop
add
loopne
sbb
sbb
mov
mov
ret
pop
cli
int3
or
add
je
add
add
insb
push
icebp
leave
mov
aam
fbld
xor
fsubs
dec
jmp
and
rorb
jl
push
sub
add
cmp
nop
jp
push
xorl
or
jl
jmp
add
mov
xlat
scas
mov
les
pop
pop
push
out
or
add
push
and
outsl
sbb
pop
push
adc
jg
xchg
pop
push
add
scas
mov
int3
out
imul
adc
push
or
call
fldl
stos
sbb
push
lret
mov
das
flds
mov
cmp
in
jo
outsb
xchg
cmp
dec
sub
adc
adc
dec
out
add
stos
in
jecxz
imul
mull
adc
mov
decl
lret
add
subl
ret
mov
stc
mov
xchg
jmp
xchg
mov
mov
lahf
cld
pop
add
mov
mov
mov
cmpsl
shlb
jecxz
cli
inc
and
aas
jmp
rclb
mov
mov
pushf
xchg
jb
data16
sbb
add
sbb
jb
data16
popa
pop
jl
pop
adc
jg
jo
sbb
imul
push
inc
adc
push
adc
pop
sub
cmp
pop
inc
cmp
or
sbb
insl
dec
pop
xor
sub
cld
daa
outsl
and
mov
adc
negl
xor
sbb
insb
pop
add
sbb
jno
sub
lock
push
sbb
nop
adc
xor
sti
jns
mov
andl
fwait
jecxz
shl
xchg
ljmp
insb
lods
in
jmp
icebp
leave
dec
sahf
fcom
out
iret
aad
movsl
ret
mov
and
scas
push
aam
fisttps
fbld
lds
push
fistpl
xchg
lods
cmp
cmpsb
aam
lret
fisubs
movsb
mov
mov
in
mov
cwtl
mov
lea
xor
xchg
pushf
sahf
das
jge
popf
out
out
or
lahf
mov
cwtl
mov
std
pop
je
mov
fs
insb
and
ds
add
or
adc
enter
incl
dec
dec
push
dec
add
andl
pop
pop
jno
bound
cmp
pop
push
or
ret
sbb
add
and
dec
aas
and
adc
dec
and
cmp
pop
sbb
imul
adc
outsb
pop
cwtl
add
cmp
mov
adc
js,pn
push
sbb
fsubp
mov
ret
loope
xchg
icebp
hlt
nop
insb
sbb
nop
mov
shlb
xchg
in
xlat
sti
and
popf
adc
aad
sub
pop
add
mov
imul
fnstcw
enter
in
or
or
sub
cmpsl
repz
stos
cld
add
cmp
lods
pop
add
jecxz
loop
pop
push
in
dec
sahf
jae
addb
sahf
push
xchg
lea
arpl
fldt
jnp
jg
outsb
xor
add
insl
out
dec
mov
jne
int3
imul
add
imul
dec
and
sub
pop
dec
or
inc
jbe
in
sbb
inc
push
inc
adc
es
jp
outsb
dec
push
jb
sub
shrb
addr16
sbb
test
add
push
sub
xor
push
or
jecxz
pop
push
add
adc
jnp
or
adc
lret
mov
lar
insb
cmpsl
push
xchg
xchg
jg
pop
pop
inc
dec
pop
xor
dec
inc
inc
pop
adc
push
jns
insb
out
dec
loop
cmp
mov
lods
nop
mov
aam
rcl
ret
cmpsb
enter
mov
mov
xchg
or
or
dec
cwtl
sub
test
out
cmp
pop
rorb
cmp
add
jp
jl
pop
sti
add
ss
cli
vrcpss
loopne
sub
cwtl
xchg
pushf
aam
int
shrb
fisubrs
mov
fiaddl
cmpsl
stc
int
mov
fcompl
push
mov
aas
add
icebp
aaa
outsl
add
sub
inc
cmp
sub
cmp
mov
aam
sbbl
adc
js
push
add
adc
or
insl
or
add
push
jnp
data16
jg
bound
iret
pop
fidivl
sbb
jne
xorl
jo
insl
insb
mov
pop
or
dec
or
xor
pop
xchg
push
insb
call
push
test
icebp
push
test
add
jnp
pop
das
mov
add
movsb
or
sbb
or
cmp
sbb
scas
inc
mov
stos
cld
mov
mov
rcl
cwtl
sbb
test
fwait
lea
fchs
fmull
add
adc
push
adc
add
sub
fdiv
mov
repnz
cld
icebp
add
popl
add
shlb
les
outsb
dec
xlat
das
mov
loopne
push
adc
lret
mov
ret
shlb
cmp
push
pop
mov
xor
add
cmp
andb
xor
dec
xor
pop
inc
insl
adc
inc
adc
sbb
add
sbb
insl
lahf
add
push
pop
js
or
outsl
add
push
int3
je
sbb
cld
repnz
pop
mov
push
arpl
jle
insb
or
gs
cmp
mov
dec
mov
fimull
mov
xor
pop
cmp
pop
pop
inc
nop
pop
add
es
lret
dec
add
xchg
mov
mov
mov
xlat
fisubl
mov
insb
xor
inc
stc
pop
mov
ljmp
lret
cwtl
test
pop
and
inc
popf
sbb
sbb
or
out
clc
push
test
std
int3
in
stc
ljmp
jo
imul
jmp
testb
push
add
rcr
mov
faddl
rol
mov
hlt
scas
add
fldl
ja
jns
dec
mov
xlat
fidivl
xchg
cld
xor
add
xor
stc
aaa
add
ss
sub
jle
insb
andb
dec
mov
sbb
test
sbb
insb
enter
sbb
or
pop
or
push
add
sbb
cmpsb
push
js
push
in
test
cmpsl
add
push
adc
add
ds
insb
jle
scas
jp
pop
lret
xchg
xor
pop
jnp
pop
push
pop
sbb
push
push
push
sub
push
add
hlt
sub
inc
iret
sub
mov
out
movsb
xchg
flds
mov
insb
mov
scas
test
and
ds
push
popf
pop
insb
sbbb
add
xchg
cmp
mov
mov
add
add
in
movl
cli
push
jmp
imulb
ss
int3
out
flds
testb
std
cli
mov
insb
scas
loope
mov
fnstsw
dec
fnstcw
enter
jb
jg
outsl
add
addl
push
jl
sbb
mov
xor
dec
data16
adc
or
dec
imul
dec
out
lcall
sbb
mov
xchg
pop
dec
add
mov
add
or
imul
mov
jo
subl
push
mov
push
push
or
push
or
mov
xor
jl
dec
sbb
mov
fs
jbe
cmp
je
pushf
add
or
dec
sub
pop
mov
sub
pop
push
push
sub
dec
inc
push
add
mov
test
adc
adc
cmp
dec
loopne
roll
cmp
lods
inc
pusha
adc
ja
or
int3
cld
inc
xor
lret
mov
and
push
dec
inc
imul
clc
xlat
inc
and
fs
mov
jo
jp
dec
sbb
rcrb
std
cmp
pop
dec
movsl
bound
jg
dec
sub
push
int
cltd
es
cmp
and
jns
cmp
add
call
mov
je
add
das
push
leave
or
outsl
fsts
decb
stc
lret
out
stc
shl
add
sub
sub
push
jp
ja
lcall
adc
jle
adc
sbb
pop
adc
adc
add
xor
movsl
shll
push
out
or
je
add
int
cli
loope
pop
or
daa
mov
push
jmp
pusha
xchg
jns
insb
xchg
insl
stc
js
popa
stc
test
xlat
stc
into
xchg
sbb
jb
imul
cmpl
popa
ret
add
cmp
xor
clc
cwtl
xor
inc
js
xchg
pop
cmp
sbb
js
xchg
jb
aad
lret
clc
sti
loope
and
leave
and
mov
movsb
fucomi
jo
jb
sbb
adc
jp
adc
jle
adc
sbb
push
inc
popf
addr16
sahf
jge
xchg
lahf
lahf
jae
lahf
mov
fistpl
mov
inc
sbb
lret
iret
sub
mov
or
out
xchg
add
push
push
pop
pop
push
mov
pop
mov
sub
mov
push
pop
pop
xchg
push
mov
pop
sub
mov
push
pop
pop
lea
push
mov
pop
push
mov
pop
xchg
sub
mov
mov
pop
sub
mov
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
push
mov
pop
sub
mov
mov
pop
push
xchg
xchg
push
mov
pop
sub
mov
mov
pop
push
sub
mov
mov
pop
sub
mov
push
pop
pop
push
mov
pop
xchg
lea
xchg
push
mov
pop
push
mov
pop
xchg
push
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
xchg
push
sub
mov
pop
pop
popl
push
sub
mov
pop
pop
push
mov
pop
add
xchg
xchg
mov
sub
mov
push
pop
pop
push
sub
mov
pop
pop
push
mov
pop
sub
mov
push
pop
pop
mov
push
mov
pop
xchg
push
push
pop
pop
xchg
movl
sub
mov
sub
mov
pop
pop
push
push
pop
pop
inc
incl
push
sub
mov
pop
pop
xchg
mov
sub
mov
mov
pop
sub
mov
push
pop
pop
call
cmp
jne
sub
mov
push
pop
pop
sub
mov
sub
mov
pop
pop
mov
sub
mov
push
pop
pop
xchg
inc
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
mov
push
mov
pop
push
mov
pop
call
cmp
jne
xchg
xchg
mov
push
push
pop
pop
push
mov
pop
sub
mov
mov
pop
sub
mov
mov
pop
mov
push
push
pop
pop
push
sub
mov
pop
pop
add
add
jmp
jmp
xchg
sub
mov
mov
pop
mov
xchg
push
sub
mov
pop
pop
sub
mov
push
pop
pop
push
sub
mov
pop
pop
lea
xchg
push
push
pop
pop
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
push
xchg
push
mov
pop
xchg
xchg
sub
movl
push
sub
mov
pop
pop
xchg
xchg
xchg
push
xchg
sub
mov
mov
pop
push
mov
pop
xchg
lea
sub
mov
sub
mov
pop
pop
sub
mov
push
pop
pop
xchg
xchg
push
sub
mov
mov
pop
push
push
pop
pop
push
push
pop
pop
xchg
lea
xchg
push
mov
pop
call
sub
mov
sub
mov
pop
pop
push
sub
mov
pop
pop
mov
push
sub
mov
pop
pop
sub
mov
mov
pop
push
mov
pop
xchg
lea
xchg
sub
mov
sub
mov
pop
pop
push
mov
pop
sub
mov
mov
pop
mov
sub
mov
mov
pop
sub
mov
push
pop
pop
push
push
pop
pop
push
push
pop
pop
xorl
xchg
sub
mov
mov
pop
add
cmp
jb
jmp
sub
mov
sub
mov
pop
pop
push
push
pop
pop
push
push
mov
pop
push
mov
pop
xchg
sub
mov
push
pop
pop
mov
push
mov
pop
xchg
sub
mov
sub
mov
pop
pop
xchg
mov
sub
mov
mov
pop
xchg
push
sub
mov
pop
pop
sub
mov
mov
pop
mov
xchg
sub
mov
sub
mov
pop
pop
add
subl
xchg
xchg
pop
sub
mov
mov
pop
push
mov
pop
push
mov
pop
sub
mov
sub
mov
pop
pop
mov
push
mov
pop
xchg
ret
push
mov
pop
xchg
pop
xchg
sub
mov
mov
pop
sub
xchg
push
push
pop
pop
mov
xchg
sub
mov
mov
pop
xchg
push
sub
mov
pop
pop
sub
mov
push
sub
mov
pop
pop
xchg
addl
xchg
sub
mov
mov
pop
pushl
push
mov
pop
xchg
push
mov
pop
push
mov
pop
mov
xchg
sub
mov
push
pop
pop
xchg
sub
mov
sub
mov
pop
pop
mov
xchg
sub
mov
mov
pop
add
incb
addl
