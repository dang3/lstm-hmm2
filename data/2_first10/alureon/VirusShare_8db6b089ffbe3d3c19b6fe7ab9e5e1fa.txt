xchg
mov
push
ljmp
dec
cmp
jo
push
inc
and
adc
dec
mov
cmpsb
xchg
inc
mov
cli
dec
insb
lret
pop
xchg
mov
pop
cwtl
cmp
inc
adc
mov
add
test
push
mov
jo
push
xchg
dec
faddl
loope
xor
push
mov
mov
stos
pop
enter
testl
es
rclb
add
xor
ljmp
xor
dec
movsb
sahf
xchg
je
shlb
lret
jns
xchg
mov
rcrb
int
int
xchg
fwait
push
test
adc
jle
pop
pop
inc
and
sub
imul
xlat
int3
movsb
ficompl
imul
ret
mov
mov
pop
fwait
out
scas
sub
jae
push
imul
imul
cmp
mov
xchg
pop
xor
test
in
xchg
lods
pop
mov
jecxz
mov
js
and
push
xchg
gs
jno
pop
adc
push
fwait
mov
repz
and
jmp
lds
outsl
xchg
cmovp
or
mov
mov
adc
enter
and
or
xor
xorl
xor
dec
inc
cltd
mov
push
mov
inc
sub
call
lea
and
call
mov
push
dec
call
mov
inc
inc
sub
dec
call
dec
or
mov
inc
mov
sub
inc
add
lea
movzbl
sub
mov
inc
dec
call
inc
add
movsbl
mov
inc
call
mov
dec
call
inc
add
lea
dec
dec
inc
mov
lea
inc
pop
movswl
mov
mov
add
mov
pop
inc
add
pop
imul
dec
movzwl
inc
pop
inc
dec
lea
imul
sub
add
imul
add
pop
imul
mov
pop
movsbl
sub
mov
dec
mov
call
add
and
inc
dec
ret
inc
add
push
mov
add
push
sub
xor
push
add
inc
push
mov
xor
push
mov
mov
mov
imul
dec
push
mov
ret
push
sub
inc
lea
inc
inc
xor
add
push
dec
dec
lea
call
pop
ret
jmp
mov
and
movsbl
dec
movzbl
mov
imul
xchg
dec
add
mov
dec
xor
lea
mov
or
dec
inc
mov
inc
dec
jne
lea
mov
mov
movzbl
pop
inc
lea
pop
mov
sub
pop
inc
lea
movzwl
or
mov
add
inc
mov
lea
inc
lea
add
ret
push
push
add
lea
push
mov
inc
dec
lea
inc
mov
push
imul
dec
movzbl
movzwl
push
add
imul
dec
lea
and
sub
inc
push
add
mov
mov
push
imul
mov
xor
mov
inc
push
dec
lea
push
lea
add
pushl
and
call
add
add
mov
add
imul
movsbl
mov
imul
imul
pop
ret
add
cmp
jb
movzbl
xor
lea
lea
mov
dec
lea
mov
or
inc
imul
dec
lea
inc
add
mov
sub
movzbl
cmp
jb
lea
pop
lea
lea
add
inc
inc
add
sub
dec
xor
imul
inc
xor
and
movzwl
xor
lea
inc
mov
imul
lea
test
jbe
add
dec
dec
mov
add
inc
dec
inc
movzbl
sub
dec
inc
and
sub
dec
mov
dec
mov
movzbl
dec
sub
add
dec
inc
and
sub
xor
mov
mov
inc
mov
and
movsbl
mov
xor
imul
mov
movsbl
dec
imul
mov
add
dec
dec
jne
mov
mov
inc
sub
imul
dec
inc
mov
lea
and
sub
inc
mov
and
inc
imul
inc
add
dec
dec
inc
mov
mov
mov
test
jbe
dec
add
imul
and
movsbl
mov
imul
mov
mov
dec
mov
add
imul
lea
dec
inc
and
inc
dec
movsbl
add
mov
and
add
imul
mov
movsbl
mov
movzbl
add
add
add
or
inc
and
lea
add
mov
mov
or
movzbl
add
dec
mov
add
mov
mov
lea
mov
movzbl
lea
sub
add
sub
jmp
push
inc
inc
dec
dec
movzwl
sub
add
inc
sub
mov
mov
mov
mov
add
dec
inc
sub
mov
mov
add
inc
mov
add
add
mov
mov
dec
dec
mov
add
dec
mov
mov
mov
imul
mov
imul
inc
lea
cmp
je
imul
dec
sub
push
dec
call
call
imul
dec
call
call
mov
lea
imul
add
lea
dec
sub
ret
dec
mov
pop
add
ret
push
mov
mov
or
imul
mov
push
add
inc
push
or
push
mov
push
dec
add
mov
imul
mov
call
mov
push
inc
dec
xor
dec
sub
inc
neg
mov
mov
imul
mov
inc
xor
mov
mov
imul
mov
mov
mov
inc
xor
mov
dec
je
add
or
mov
mov
and
imul
mov
dec
inc
lea
inc
repnz
sub
mov
add
inc
jmp
inc
mov
lea
sub
imul
dec
dec
dec
jmp
mov
add
movzbl
mov
inc
and
dec
mov
pop
pop
ret
push
inc
inc
mov
inc
inc
dec
sub
imul
mov
add
lea
mov
sub
add
inc
mov
dec
dec
sub
dec
add
add
add
mov
movzwl
pop
ret
sub
mov
mov
or
and
mov
imul
or
mov
mov
mov
mov
mov
mov
xor
mov
movzbl
mov
add
mov
inc
dec
mov
movswl
movzbl
lea
movswl
cmp
jb
add
push
inc
movzbl
push
dec
dec
push
add
mov
xor
inc
inc
xor
add
mov
xor
imul
sub
push
dec
sub
mov
lea
imul
xor
movzwl
mov
mov
lea
xor
mov
or
mov
movzbl
mov
imul
add
lea
inc
add
dec
movzbl
sub
dec
and
movsbl
dec
movzwl
inc
and
movzwl
mov
sub
dec
dec
inc
jmp
mov
into
lahf
sti
lcall
xor
add
mov
cld
cmp
lods
pop
data16
xor
addl
test
test
shlb
outsb
loopne
xlat
sub
mov
cmp
sbb
stc
enter
enter
daa
scas
das
roll
jmp
mov
cli
movl
cmpb
sti
mov
sub
mov
test
xor
repz
pop
jge
loopne
adc
lahf
das
sbb
fisubl
lds
xlat
lea
into
xchg
mov
cwtl
hlt
enter
push
orl
xchg
push
cmpsb
mov
fcompl
ja
mov
dec
add
lods
xchg
mov
adc
sarl
adc
fld
mov
test
push
dec
jno
loop
add
into
mov
aam
cmp
mov
cwtl
mov
cmpsb
sbb
loope
pop
mov
ljmp
cmp
cmp
mul
pop
fld
and
dec
outsb
out
test
dec
sbb
popa
mov
dec
push
add
mov
push
pop
daa
test
cld
rorl
fdivrl
mov
sub
xchg
in
lcall
add
sbb
sub
nop
or
ljmp
xchg
mov
stos
xor
fistpll
mov
sub
xor
insl
mov
cmp
adc
sbb
lcall
das
mov
sbb
pushaw
jmp
ja
orl
pop
or
or
aad
sub
or
jno
dec
std
pop
fnstenv
pop
push
lds
xchg
pop
daa
ret
push
cmp
fmull
adc
fs
push
xchg
ljmp
mov
push
cld
int
lahf
icebp
push
add
and
clc
in
mov
sbb
hlt
mov
dec
imul
stos
cmp
lods
insb
ja
repnz
mov
xor
and
roll
adc
pop
sbb
adc
ja
lret
dec
int3
ja
pusha
or
jnp
ljmp
push
jle
outsl
out
out
jo
add
sti
hlt
xchg
jmp
jl
das
ja
mov
add
adc
dec
js
sub
jb
ror
mov
les
and
sub
or
es
cld
imul
std
mov
push
dec
outsb
sub
lret
bound
addr16
data16
loopne
pop
lds
loope
inc
mov
out
ja
stos
fsubs
mov
inc
aaa
scas
mov
mov
pop
mov
in
lea
mov
movb
test
cs
dec
adc
mul
pop
xor
jl
repz
jnp
mov
jmp
sub
out
mov
je
rolb
mov
inc
mov
jo
bsf
inc
addr16
imul
cmp
shrl
jp
jge
inc
mov
mov
loope
sub
and
mov
jle
add
sub
movsl
or
mov
mov
iret
push
lahf
and
adc
mov
cwtl
sbb
clc
mov
repnz
jecxz
push
adc
dec
jg
insl
xchg
scas
sahf
shlb
cltd
insb
iret
mov
lcall
cmp
jg
pop
pop
fmul
and
mov
jo
dec
cmp
jg
push
shlb
outsb
jae
add
xor
add
and
outsb
jle
popf
mov
mov
xchg
lret
pop
or
sub
sbb
out
jb
lahf
sarb
mov
lods
dec
mov
and
jg
addl
out
jge
xchg
movsl
jne
subl
sti
in
add
and
sbb
xchg
bound
pushf
and
lods
shr
mov
cmp
push
hlt
cmpsb
or
rolb
sub
loop
cmp
cs
std
ret
iret
stc
and
inc
scas
and
insb
clc
aaa
js
sub
cmpsb
sub
jns
pusha
push
jl
insl
pop
cmpsb
mov
cltd
dec
xor
push
dec
lock
mov
jg
mov
inc
mov
daa
adc
test
inc
fiadds
iretw
mov
inc
das
arpl
ret
cmc
and
mov
insb
mov
pop
addl
int
xchg
cs
mov
adc
pushf
add
inc
ds
jne
leave
call
pusha
daa
mov
push
push
xchg
hlt
adc
iret
stc
out
imull
cli
xchg
mov
ljmp
pop
out
lds
divl
mov
xchg
inc
push
movsb
push
les
and
cmp
mov
dec
push
jno
sarl
frstor
mov
jle
rcrl
add
movsb
cmovne
filds
repnz
fsubrp
cmp
adc
xor
and
mov
mov
icebp
outsl
in
jno
std
enter
test
mov
xor
cmp
roll
shr
push
sub
in
popf
xor
dec
inc
sbb
adc
test
movsb
stos
inc
js
mov
jge
pushf
stc
sub
jns
jo
pusha
inc
les
out
jno
pop
outsb
mov
stos
inc
nop
mov
dec
mov
loop
adc
data16
or
xchg
or
js
lock
adc
out
es
cmpsb
lods
into
jbe
test
and
movsl
xor
sbb
jnp
push
cmp
clc
jns
mov
xchg
and
negb
gs
fldt
stos
push
adc
lds
arpl
jo
mov
clc
lock
enter
aam
cltd
pusha
repz
sub
and
jmp
sarb
cmp
dec
xorl
mov
adc
repz
mov
pop
inc
push
mov
mov
arpl
mov
lds
fstpt
movsl
insl
into
jnp
fnstsw
inc
xor
adc
sarb
cwtl
int
push
push
push
cld
sub
in
pop
adc
mov
ss
pop
lock
push
das
std
insl
adc
fnstsw
add
pop
sti
mov
loop
mov
lret
jo
jno
dec
xor
aad
dec
gs
push
mov
sub
cmp
std
mov
cmp
sti
jl
clc
into
ffree
and
dec
popa
rorl
jle
into
jno
aad
iret
push
inc
add
cli
pop
and
dec
js
pop
dec
push
shll
or
dec
js
gs
dec
aaa
cmc
fs
lret
sub
xor
mov
in
mov
insb
mov
fdivrp
sbb
aaa
out
fwait
es
cwtl
and
js
lret
jl
adc
adc
daa
add
jle
gs
mov
shrb
mov
and
sbb
fisttpll
xor
cld
xchg
movsb
mov
mov
push
push
insb
int
popf
out
xchg
jge
add
insb
into
repz
das
mov
xlat
cli
dec
popf
mov
inc
mov
dec
fcompl
and
test
push
stos
or
sarl
rolb
xchg
mov
les
xor
push
pushf
or
push
stos
and
test
sub
cs
orb
rol
sti
cmp
fwait
decl
lods
in
aaa
xchg
cmpsl
inc
lods
ret
pop
push
sbb
subl
int3
push
std
scas
out
sub
mov
jb
out
dec
arpl
and
xlat
and
or
sub
popa
xor
cmp
rorb
add
rorb
dec
inc
in
jmp
loop
add
xchg
push
mov
jge
cmc
mov
lcall
push
je
mov
push
jmp
inc
push
arpl
jle
insl
in
add
adc
mov
pushl
mov
pusha
pop
pop
mov
dec
lock
cmp
imul
sarl
or
loope
mov
ret
leave
and
in
adc
out
sbb
movsl
xchg
sbb
and
sbb
cmc
mov
int3
mov
int
mov
test
pop
pop
adc
jl
aas
cmp
xchg
jmp
adc
inc
mov
lcall
arpl
data16
mov
in
insl
and
cmpsb
test
lea
int
mov
into
js
loop
fstl
jmp
fwait
or
arpl
les
adc
fiaddl
std
push
mov
lahf
and
pusha
lods
sarl
lods
push
cli
inc
mov
popf
movb
ja
sti
in
rol
scas
cmp
pop
fistl
push
xor
mov
cmp
stos
repz
xor
xchg
fnstsw
pop
xrelease
mov
pop
lgs
cs
pop
mov
jg
filds
xchg
mov
divl
push
cmpsb
xchg
mov
adc
iret
out
out
dec
jno
mov
pop
int
push
imul
adc
aam
jbe
sub
sbb
repnz
imul
push
in
insb
sbbb
and
sbbl
pop
out
push
les
popf
out
cmp
rorb
pop
insl
push
pusha
out
add
mov
decb
test
int
icebp
pop
cmp
sub
addr16
jmp
in
loopne
xor
out
mov
jp
sub
in
dec
lods
xchg
pop
lret
sahf
pop
sbb
sbbl
ds
pop
mov
repz
adc
dec
jle
jno
and
out
jle
jp
sbb
add
push
mov
sub
adcb
cmp
icebp
arpl
mov
pop
or
shrb
fstl
xlat
sub
push
faddp
cld
fcmovnu
js
inc
call
mov
in
xchg
jno
dec
addr16
xchg
sahf
or
les
cld
inc
lret
xor
inc
aad
mov
sub
fstl
jbe
mov
ljmp
lret
push
push
sbb
out
stos
xchg
sbb
lds
hlt
sbb
hlt
popf
mov
std
push
mov
in
xorb
jo
cmp
lret
push
cli
lods
sarl
in
push
and
stos
add
jns
mov
cld
xor
mov
frstor
imul
sub
out
shll
loope
inc
dec
jnp
and
pop
add
das
es
mov
push
sbb
mov
outsb
cmp
mov
or
sub
pop
sub
or
pusha
or
das
xor
cmpsb
leave
push
clc
addr16
pop
insb
pop
adcl
jle
push
js
jp
sub
sub
jmp
into
popf
lret
cmp
pop
xchg
test
xor
pop
in
mov
pop
xor
ss
sub
mov
push
xor
adc
int
lcall
mov
lcall
scas
rcr
push
je
push
jbe
test
and
mov
out
sbb
loop
movsb
fadd
xor
imul
rcr
adc
xchg
cmp
jns
aaa
push
in
pop
push
paddd
push
fs
test
push
cmp
insl
adcb
in
lret
in
mov
outsb
mov
lret
mov
subl
in
dec
cmp
mov
lcall
sbb
cmpl
xchg
aam
and
stos
fisttpl
xor
icebp
or
xchg
divb
repz
and
pop
int
ret
gs
rcrl
inc
and
mov
sub
popf
or
movsl
and
adc
mov
adc
and
es
je
aad
pop
mov
clc
or
roll
mov
mov
iret
pop
xlat
repnz
lds
repnz
inc
or
arpl
cmp
dec
jg
jae
arpl
inc
in
mov
jg
js
fmul
jno
fisttpl
dec
cwtl
int3
sbb
add
lcall
in
dec
leave
addr16
mov
cli
fcomps
repz
add
jbe
pop
mov
test
iret
pushf
test
outsl
inc
ja
jmp
mov
lods
dec
push
mov
fcmovnb
aaa
mov
sbb
add
xchg
xchg
inc
pop
and
imul
xchg
test
xchg
and
icebp
ds
mov
repnz
mov
pop
xchg
xchg
pop
out
int3
je
sahf
adc
jb
mov
es
inc
mov
pop
insb
int
mov
fsts
ljmp
adc
ljmp
or
mov
movsb
hlt
in
cmp
les
push
xor
mov
arpl
xchg
mov
pop
lcall
out
lods
jecxz
iret
push
dec
push
sub
xchg
mov
mov
mov
dec
inc
mov
imul
jae
jge
add
xchg
or
in
jne
in
cmp
js
cmp
jnp
sar
xor
cmp
pop
sbb
mov
cmpsl
sub
in
xor
pop
dec
sub
cmp
mov
push
cld
icebp
jmp
int
decl
cmp
jg
xor
jb
push
js
scas
js
mov
push
xor
mov
xor
sti
inc
sbb
movsl
pop
inc
dec
jle
mov
jp
pop
fadds
stc
pop
jae
push
fisubs
adc
mov
out
fdiv
mov
cmp
je
mov
adc
xchg
arpl
ficompl
sbb
mov
dec
imul
and
fldenv
or
pop
push
add
adc
test
jns
inc
andl
dec
sub
movsb
adc
xchg
mov
mov
lods
sub
push
inc
dec
adc
push
xchg
mov
repnz
iret
push
jb
jmp
gs
sbbl
daa
in
mov
cli
popf
ss
popa
or
jne
xor
fildl
add
jbe
ret
jbe
arpl
cs
xor
push
lahf
cld
xchg
fmuls
and
xorb
cmc
sbb
sub
icebp
and
push
imul
push
xor
repz
dec
sahf
ljmp
mov
dec
div
mov
cmpsl
xchg
inc
lret
pop
jnp
inc
mov
inc
shll
in
pop
es
out
pusha
add
xchg
sub
ljmp
jp
pop
nop
iret
mov
rolb
cwtl
mov
pop
jmp
push
loop
sbb
test
jle
imul
cmc
or
jecxz
jecxz
movsb
mov
fs
daa
push
mov
stos
sbb
out
or
dec
mov
dec
add
int
sub
popa
cltd
shr
cmpsl
or
mov
add
lret
pusha
repnz
push
dec
clc
mov
push
xor
pop
xchg
sbb
ljmp
mov
sbbb
loopew
pop
imul
out
mov
xchg
xchg
add
or
cmp
repz
cwtl
test
imul
jp
hlt
pop
arpl
lahf
andb
push
lar
push
pop
data16
hlt
pop
inc
fstps
insb
sbb
xchg
movsl
mov
and
xchg
adcl
fsts
add
and
xor
leave
fs
aas
push
in
cmp
out
dec
jae
ja
pusha
fimuls
shlb
add
pop
jbe
gs
mov
add
pop
repz
adc
inc
movl
popa
jne
pop
and
gs
cld
cld
pop
js
jmp
aas
mov
adc
push
mov
orb
push
dec
pop
les
in
sbb
movsl
jl
rcrb
pushf
pop
push
mov
push
ja
xor
xchg
xchg
imul
gs
lea
mov
divl
and
push
cmpsl
sarl
cmp
push
lcall
and
outsb
pop
push
into
cmp
mov
ror
lret
mov
pop
sbb
aaa
das
mov
enter
jne
sub
rol
cmp
mov
leave
push
mov
addr16
xor
xorb
stc
test
inc
aad
in
mov
or
sahf
inc
adc
xor
aaa
cmpsb
pop
sbb
mov
out
mov
enter
xchg
xchg
mov
cmpsl
xor
sub
roll
cmc
jl
aaa
push
stos
lret
cmpsb
sbb
sbb
int3
mov
xor
aas
mov
xchg
ret
cmp
and
jle
cltd
test
or
sub
sub
mov
sbb
mov
flds
xor
lcall
mov
mov
add
jp
enter
dec
cmp
or
lret
in
mov
inc
pop
int3
cmpsl
and
add
inc
subb
cmp
mov
pop
ficoml
xlat
arpl
add
rep
out
add
pop
dec
xlat
imul
mov
jno
out
sbb
outsl
add
cli
jp
pop
jle
mov
pop
xchg
test
sub
ret
fists
enter
ficoms
mov
scas
jecxz
movsb
push
sbb
faddl
jg
outsl
fidivs
sti
popa
push
lcall
adc
jo
add
mov
xchg
lret
or
imul
movsl
push
mov
or
push
jo
mov
mov
xchg
cmp
sbb
mov
and
rcrb
inc
jae
cmp
shrl
jno
cmp
leave
mov
xchg
icebp
mov
test
push
push
cwtl
sbb
aam
inc
xor
lret
mov
push
sub
jb
add
inc
test
jne
adc
jne
andb
loope
outsb
inc
mov
das
aam
jns
jle
or
xor
pushf
push
inc
clc
sbb
push
inc
addr16
mov
mov
sti
in
cmp
imul
popa
or
xchg
inc
push
jmp
cltd
shl
pusha
add
cs
inc
xor
push
sarb
dec
mov
dec
jae
je
add
nop
stos
js
add
out
xchg
enter
addr16
fbstp
rol
dec
inc
fisubrs
mov
mov
push
pop
repnz
and
and
and
ljmp
xchg
loop
adc
jb
pop
shll
testb
in
imul
pop
icebp
movb
fmul
mov
jb
jns
sarl
test
dec
add
adc
rcr
pop
push
ds
pop
hlt
xchg
test
jp
cmp
push
cmpsl
addl
jne
mov
lods
stc
test
inc
scas
adc
scas
dec
mov
fldl
mov
cmp
fsubl
in
clc
insb
in
and
loope
sub
fbld
adc
cmpsb
sahf
stc
repnz
test
data16
mov
cld
testl
push
mov
in
pop
dec
jecxz
mov
sar
hlt
mov
pop
int
movsl
add
mov
sarb
cmp
mov
adc
pop
add
lcall
nop
sarl
js
and
cwtl
adcb
xlat
add
loopne
inc
aam
mov
inc
add
cmpb
xchg
pop
or
out
negl
ret
xchg
stos
popa
jno
orl
cmc
mov
mov
and
movsl
imul
add
repnz
enter
fmull
xchg
push
outsb
inc
mov
movsl
or
mov
inc
jge
dec
pop
cmp
fwait
jae
add
or
or
push
stos
stos
jmp
out
add
pop
sub
mov
jbe
daa
mov
adc
jbe
mov
loopne
dec
test
ret
push
movsl
aas
and
ficompl
sub
push
test
out
push
jmp
xor
xlat
cmpsb
ds
cmp
fbstp
ss
jb
jbe
mov
dec
or
insl
loopne
jecxz
mov
pop
in
add
icebp
mov
add
fs
aad
sarl
fs
insl
jnp
out
imul
cwtl
imul
enter
int
lods
sub
dec
mov
repz
jge
mov
bound
jb
stc
inc
push
sbbl
in
test
add
mov
cwtl
xor
ss
mov
sbb
sbb
mov
fwait
aam
and
pop
pop
xor
inc
aad
push
pop
insl
outsl
sbb
mov
leave
pop
fstl
gs
xor
sbb
scas
subl
cmp
bnd
mov
inc
push
lret
or
in
int
test
adc
adc
bnd
pop
rcll
or
movsl
xchg
xor
shr
and
pop
push
or
mov
ret
add
out
mov
insb
test
pop
cmp
add
daa
gs
outsl
cli
cmpsb
xor
mov
repnz
jmp
adc
pop
test
out
mov
jo
sbb
pop
or
mov
jge
loop
xchg
and
push
mov
mov
and
push
adc
mov
pop
ja
jge,pn
sub
xchg
dec
into
pop
in
sarb
in
movsl
andl
mov
arpl
push
pop
inc
mov
faddl
into
and
popa
call
adc
push
adcb
xor
mov
jecxz
push
add
imul
stos
adcb
fadd
outsb
insl
inc
push
shlb
pushf
lret
xchg
jmp
xor
inc
loope
std
fwait
aaa
int
roll
xor
add
mov
test
xchg
lea
enter
xchg
iret
or
dec
xlat
xor
dec
daa
ret
jg
lret
repz
cmp
addb
dec
xacquire
mov
mov
or
sub
shl
xor
pop
or
mov
xchg
clc
sub
sbb
fsubs
aad
jns
aas
stos
pusha
hlt
jae
or
push
iret
xchg
jo
mov
push
xor
scas
insb
ret
repz
xor
xchg
cltd
sub
cmc
out
pop
vpmadcsswd
and
add
movsb
cmp
push
xor
insb
rolb
fildll
das
push
stos
push
jns
xor
pushf
mov
lret
xchg
mov
jnp
sub
push
pop
push
mov
ds
inc
mov
or
or
lret
insb
ss
repnz
into
jb
ret
test
pop
stc
push
loopne
lret
or
pop
shll
jge
push
cmp
loopne
sub
lods
and
and
or
cmp
add
pop
pop
rol
jbe
and
inc
dec
mov
in
and
aaa
sarl
orb
rcl
into
and
sub
in
jo
push
ficoms
data16
imul
jae
cwtl
js
rcrb
filds
xchg
stos
clc
clc
inc
fiaddl
and
sbb
cmp
cld
inc
push
hlt
mov
xlat
xor
les
addr16
adcl
ret
popa
add
dec
cltd
adc
and
cmpsl
or
sub
andl
sub
pop
lea
out
in
arpl
movsb
es
sub
outsl
xchg
or
cmp
inc
iret
xchg
int3
mov
pop
sbb
sbb
pop
shll
sti
pop
shrd
lret
sub
outsl
mov
mov
and
mov
xchg
pop
insb
adc
dec
cltd
cmp
cmp
notl
stos
sti
mov
mov
and
fistpl
add
cmc
cmp
fcomps
cmc
pushf
jne
mov
call
pop
sti
imul
pop
ljmp
pusha
jp
cmp
adc
sub
js
movsl
or
ret
into
cmp
addr16
lret
gs
mov
cmc
cs
inc
jo
mov
pop
rcl
dec
mov
sbb
cli
and
sbb
std
std
movsb
sbb
out
scas
hlt
jnp
arpl
mov
xor
roll
mov
mov
mov
push
in
lahf
lret
add
fdivrs
mov
or
mov
dec
xchg
or
mov
push
mov
movsl
sub
xor
movsb
roll
out
ds
shrb
adc
pop
jne
test
add
mov
lods
rcrl
int3
adc
sub
les
inc
mov
sbb
js
int3
adc
sub
or
es
and
out
lock
rcrb
pop
and
mov
push
int3
push
jnp
cwtl
lahf
in
ljmp
and
int
dec
inc
ss
xor
sahf
subb
mov
stc
pop
sub
dec
scas
sub
xchg
add
dec
sbb
dec
lock
out
inc
sar
in
or
sti
iret
mov
push
imull
divb
pop
or
jno
mov
adc
ret
xor
loopne
faddl
adc
xorb
cld
mov
andl
js
push
pop
shlb
jb
dec
and
daa
daa
dec
mov
pop
jmp
cld
push
mov
rcll
mov
mov
dec
and
es
cmp
pop
jnp
inc
adc
pop
xorl
xlat
aam
inc
pop
call
pop
push
daa
fisubrl
or
insb
pop
das
lahf
and
mov
dec
and
in
adc
addr16
test
push
pop
xor
pop
mov
cmp
mov
insl
into
fsub
jae
pop
scas
xchg
mov
sarl
or
jns
mov
and
add
cwtl
dec
cld
cld
dec
inc
mov
das
test
inc
push
fmull
sti
xchg
lahf
adc
dec
and
out
dec
fs
inc
fimuls
push
sbb
in
leave
mov
push
xor
cmpsl
lahf
pushf
lods
sbb
cltd
arpl
sarl
push
test
inc
sbb
jb
repz
xor
ss
push
outsb
adc
popa
cmpb
sub
push
push
dec
push
rcrb
dec
sti
test
lds
imul
xchg
cwtl
jg
mov
inc
sbb
les
fbld
sbb
daa
call
sub
repnz
jmp
xchg
push
popa
lahf
mov
sbb
push
lock
ficoms
mov
xor
fldcw
mov
lock
push
mov
or
icebp
jge
pop
fcompl
push
insl
and
jp
aas
jno
inc
dec
lret
and
cmp
roll
lods
adc
nop
dec
sbb
cli
shl
shll
dec
dec
fildl
xchg
inc
mov
inc
ja
fwait
ret
cld
in
lods
mov
orb
into
jmp
aad
xor
orl
or
or
xchg
mov
rcrl
sub
lahf
sbb
negb
sar
loop
add
dec
push
cli
push
inc
lds
or
lret
pop
jae
cmp
xor
or
xor
add
dec
add
clc
rcll
push
je
cmp
xchg
icebp
imul
push
fwait
aad
xor
loopne
jne
sub
out
push
pop
lods
addl
shr
lds
cmpsb
xor
push
jle
std
andl
fisubs
lret
xor
add
xorl
mov
icebp
add
rcr
gs
jne
sbb
shlb
mov
iret
xrelease
and
pushf
cs
cltd
insb
sub
insl
mov
iret
cmp
outsb
push
scas
or
insl
lods
adc
mov
je
aam
jae
mov
imul
cmp
sti
dec
enter
xlat
call
enter
xorl
pop
cwtl
jno
xor
xor
fwait
jbe
xchg
daa
pop
sti
out
pop
mov
int
push
stos
jb
shrl
pop
cmp
xchg
inc
jle
sub
and
lret
or
shll
pop
xor
in
xchg
pop
enter
das
xchg
popf
jno
jbe
jne
push
mulb
cmp
icebp
cmp
push
adc
hlt
add
xor
andb
jge
and
test
fs
scas
mov
mov
xlat
sbb
imul
sbb
pushf
mov
aad
or
stc
popa
or
mov
movsl
or
ror
lods
repnz
shll
lock
cmpsl
jmp
xchg
fs
mov
mov
sti
push
xor
xchg
out
sub
jg
stos
shll
test
in
jge
add
and
sbb
jne
mov
lahf
pop
test
fwait
outsb
pop
mov
pop
mov
adc
inc
mov
sub
jecxz
mov
repz
mov
ja
nop
fnstcw
addb
aas
xchg
sub
fsts
inc
aam
inc
sub
jo
arpl
stos
sbb
and
jbe
xchg
push
and
movb
add
imul
out
dec
insl
jnp
or
sub
and
das
cmc
pop
sub
rol
cs
sub
fmull
sub
cltd
cwtl
mov
jnp
push
shlb
mov
outsl
sbb
pop
or
ficoml
jecxz
mov
sbb
out
cs
push
pop
or
and
out
add
bound
jbe
add
testl
add
shll
pop
jae
jae
fcoml
sbb
cld
daa
and
push
out
subw
adc
mov
adc
mov
xlat
xchg
dec
jno
add
shrb
inc
pop
push
pop
xor
jne
pop
cltd
mov
jnp
sbb
fdivrl
js
and
inc
scas
and
lret
addb
adc
and
out
inc
add
js
iret
rolb
ja
xlat
leave
rcrb
xor
cmp
je
sbb
test
jge
push
dec
cmp
lea
nop
call
aad
push
pop
insb
lods
out
lods
xlat
mov
faddl
cmpsb
mov
push
mov
add
jecxz
mov
pop
gs
mov
hlt
into
std
xchg
add
push
shll
sub
add
inc
jno
iret
pop
aad
inc
rcrb
and
ja
xchg
cs
mov
xchg
loope
xchg
jbe
sub
rcll
call
cli
lret
fs
mov
sbb
push
xor
cmp
cmp
xchg
rcrb
xchg
jmp
jbe
push
je
lds
add
fidivs
inc
neg
fldt
enter
push
xchg
scas
fldenv
adc
lods
leave
loop
pop
push
dec
iret
jmp
push
std
in
fabs
adc
adc
sub
push
jl
sbb
mov
adc
call
jmp
push
or
inc
in
adc
sub
ficoml
jne
mov
pop
ds
vmovsldup
ss
adc
in
ja
xchg
movsl
pop
insb
in
cwtl
insl
and
lods
sbb
jae
data16
mov
pop
ljmp
fst
cmp
dec
xchg
jl
push
cmp
out
xchg
mov
xchg
gs
or
fistpl
xor
and
push
rcl
bound
into
loopne
aas
dec
enter
movq
stos
pop
pop
jle
push
pusha
and
inc
xchg
cmp
mov
cmp
ffreep
inc
loopne
xchg
and
xlat
fs
aam
ss
jl
pop
jnp
inc
lods
jno
mov
pop
into
insl
xchg
test
inc
and
add
sub
inc
jmp
push
inc
cwtl
mov
push
fisubrl
gs
les
pushf
adc
mov
mov
push
adc
ss
push
mov
rorl
mov
cli
fwait
jne
out
push
xorb
cld
shrl
xchg
pop
or
cld
push
imul
das
cmp
dec
scas
lods
sbb
fdivl
shl
add
popa
jg
sbb
div
mov
test
dec
in
lret
movb
jns
pop
adcb
mov
aam
cmpsb
and
add
sub
cltd
inc
inc
in
mov
adc
ret
outsb
jne
sub
cmp
loop
jl
lds
dec
mov
jns
test
movsl
leave
lret
les
pop
push
and
push
push
xlat
icebp
aam
jb
stc
xor
outsl
arpl
and
sbb
push
cmp
imul
in
inc
push
or
jno
jbe
gs
jno
xor
jo
aas
jns
jmp
push
or
pop
gs
dec
jnp
repnz
ss
pop
cmpsl
cmp
repnz
les
std
jge
aad
loop
setne
lods
jmp
mov
mov
bound
shl
rcrl
out
pop
fnstsw
mov
testb
and
sbb
in
adc
mov
xchg
xchg
out
xchg
jbe
popf
dec
mov
xor
mov
sub
sti
xor
push
call
inc
stos
push
mov
add
jmp
mov
xchg
mov
frstor
adc
or
into
lret
jge
xor
push
push
rcrb
es
mov
in
scas
icebp
cmp
mov
out
subl
fldl
bound
jg
mov
add
xchg
mov
popa
lds
inc
jecxz
add
jo
xor
mov
and
mov
cwtl
pop
pop
xor
mov
xchg
lods
xor
std
mov
sub
int3
into
pop
and
in
cmp
das
shl
int
popa
les
sub
inc
les
pop
push
ret
push
addl
je
xor
mov
mov
jmp
sbb
xchg
xor
out
nop
shrb
jne
leave
inc
push
dec
dec
jo
outsb
sub
jae
xor
ja
lret
cmp
inc
adc
pop
mov
or
sub
xchg
mov
pop
les
mov
js
xor
bound
xchg
jmp
gs
push
pop
dec
xchg
mov
lods
xor
lea
adc
mov
inc
add
je
lret
lds
enter
add
icebp
inc
push
loope
jl
cmp
and
add
add
adc
xchg
jecxz
jnp
push
mov
bound
sarl
cs
jbe
jge
out
sub
fsubl
xchg
push
leave
push
pop
dec
pop
das
addr16
dec
cltd
xor
lods
arpl
hlt
divl
lret
fimull
pop
pop
aaa
movsl
mov
cwtl
xor
negb
xchg
mov
mov
push
arpl
adc
mov
fcomip
mov
fcompl
out
or
mov
rolb
push
imul
adc
xor
sub
nop
pop
stos
insl
mov
leave
inc
stos
cmc
cs
mov
mov
or
rcl
call
mov
mov
sbb
xor
xor
sbb
je
loop
rcr
lock
les
pop
pop
adc
out
jo
mov
arpl
shrl
insl
pop
xchg
inc
pop
daa
pop
mov
sarl
mov
movsl
inc
push
into
jne
bswap
clc
pop
mov
loop
or
mov
cmp
mov
mov
jg
and
jg
iret
fistps
pop
add
les
scas
test
inc
into
xchg
shlb
mov
stos
icebp
arpl
lock
dec
inc
xorb
stos
stc
stc
leave
adc
adc
in
xchg
lock
in
add
out
inc
std
jle
adc
xor
inc
jl
int
xor
push
imul
xchg
fdivs
repnz
pop
aaa
sub
in
pop
lea
cmpsb
sub
cmp
push
mov
jp
movsl
fsubl
je,pn
add
int3
jge
rcl
movsb
push
jg
aaa
in
js
fisubs
loopne
leave
sub
rcr
adc
insb
xlat
push
push
jecxz
mov
movsl
mov
dec
xor
cmc
cmp
add
cltd
shll
fnstsw
jnp
hlt
xor
das
and
and
xchg
fs
adc
xchg
movsl
in
fldl
dec
and
cmp
loopne
ss
clc
ret
add
sub
punpckhdq
out
or
sti
cmpsb
mov
fidivrs
ret
inc
xchg
das
mov
and
push
push
sahf
bound
and
push
loopne
push
into
xchg
sbb
add
jge
roll
stc
cltd
sub
ret
xlat
enter
popa
into
in
adc
sbb
fstp
mov
pushf
jno
xchg
mov
mov
fcmovb
aad
into
int3
and
pop
dec
pop
jecxz
adc
dec
cli
cmpsb
cmpb
lcall
addl
aam
stos
subl
je
sbb
adc
sbb
and
mov
enter
push
shlb
in
mov
cmp
dec
pop
dec
jnp
mov
push
rcll
lret
sbb
into
hlt
xchg
lock
aas
daa
sbb
stos
xchg
jb
xor
xchg
jo
xor
push
jns
cld
neg
xor
inc
sub
mov
and
fdivrl
inc
inc
out
lea
andl
lcall
mov
test
mov
jl
in
in
movsl
mov
ds
add
xchg
inc
mov
pop
outsb
aas
sbb
fiadds
rorl
sbb
test
pop
sbb
cmp
int3
insl
dec
aad
bound
aad
pop
and
ja
dec
and
push
fmul
loope
cld
fcoml
pushf
gs
enter
jb
int3
mull
mov
dec
xchg
cld
and
and
call
xchg
std
sbb
outsl
test
push
sub
hlt
icebp
xor
das
out
lret
mov
mov
pop
mov
pop
outsb
mov
mov
ja
cli
fs
adc
fisttpll
xchg
cmp
push
jl
roll
outsl
outsl
xor
divl
cld
mov
push
movsb
cmp
insl
or
ds
cmp
sbb
scas
inc
cmpsl
ljmp
jmp
mov
cmp
clc
sbb
sbb
in
das
aaa
test
fsubs
xchg
outsb
fcomip
jne
mov
sbb
sbb
mov
es
mov
cmp
sub
imul
imul
jp
or
dec
and
sbb
jnp
scas
or
push
imul
mov
loopne
das
loopne
rcr
cmpsl
in
das
call
stc
jbe
push
mov
xor
jmp
mov
sbb
push
ds
aad
pop
jo
mov
pushf
lret
or
push
or
jmp
fldcw
mov
pop
repz
gs
or
popf
dec
hlt
ret
stos
jae
mov
mov
lds
jmp
sbb
mov
idivb
lods
in
and
fcompl
sbb
xor
lcall
lods
jmp
or
jle
jb
or
pop
enter
xor
xor
xchg
mov
call
in
mov
cmp
inc
push
cmp
cmpsb
xchg
mov
or
mov
out
dec
les
add
cmp
out
sbb
loop
dec
cmp
dec
shrl
inc
jne
ret
jle
push
xor
dec
stos
cmpsl
insl
outsl
sub
popa
xor
push
insl
adc
add
popa
mov
loope
fwait
adc
dec
pop
icebp
daa
movsl
or
adc
pop
pop
je
adc
test
pop
repz
xor
or
or
mov
aad
push
sbb
mov
cli
std
sub
cli
push
inc
rcll
lcall
add
std
sbb
cmpsb
repnz
jb
aaa
int3
enter
imul
mov
insl
mov
xchg
adc
das
jmp
pop
je
pop
jg
jp
add
ja
ret
jns
fwait
js
jb
xor
xlat
stos
rcr
or
push
pusha
sub
hlt
pop
pop
jecxz
jns
push
inc
ja
mov
pop
in
mov
mov
or
push
inc
xchg
add
in
ds
jle
adc
adc
inc
dec
das
mov
fisubl
mov
inc
mov
xor
aaa
jmp
sub
jmp
in
pop
aaa
mov
shl
xchg
jnp
mov
out
sub
andl
sti
inc
cmc
shl
cmp
adc
and
fistpll
nop
mov
pop
rcrb
aam
sbb
stos
adcb
mov
out
push
sbb
outsb
mov
jecxz
fs
div
add
jl
xor
aad
mov
sub
mov
std
xchg
sahf
jno
sub
in
xlat
fcoml
pop
push
mov
cs
in
and
push
cmp
call
rolb
adc
popf
add
pop
mov
xchg
out
imul
mov
mov
xchg
insb
das
out
sbb
push
das
pusha
sbb
int3
push
push
ja
mov
stos
rorb
mov
cmp
jp
sub
jge
xchg
push
lods
mov
cmpb
sub
mov
test
insb
xlat
xor
sub
pop
adcb
inc
adc
dec
repz
out
pop
aaa
sbb
cmp
mov
lahf
dec
mov
stos
test
push
cmc
sarb
xor
inc
ret
mov
lock
das
and
mov
loope
or
add
cmp
jmp
dec
xchg
sub
pop
xchg
pushf
fs
mov
cmc
ficomps
jp
add
dec
xor
pop
lock
mov
sub
jle
inc
or
pop
add
mov
cmp
or
pop
cmp
in
aam
or
mov
cmp
inc
push
lock
adc
xchg
jg
repnz
sbb
lods
xor
xor
xchg
call
out
ja
lds
fucomi
nop
push
cmpsl
sbb
push
adc
cltd
cli
leave
jle
push
mov
push
push
mov
xor
mov
xchg
cld
mov
dec
cmpb
sub
shr
pusha
lock
and
adc
push
add
mov
in
jne
mov
imulb
jns
popf
xchg
or
fsub
aam
shl
sbb
call
pop
faddl
push
leave
mov
lea
in
and
mov
clc
mov
ss
sub
xchg
lds
in
add
adc
inc
call
sub
sti
repnz
ror
inc
rcrb
mov
cmp
or
movsl
dec
mov
and
mov
xchg
push
rorl
mov
push
mov
lods
mov
jns
insl
jno
dec
dec
pushf
aad
dec
push
dec
in
cmpsb
pop
adc
jns
rclb
mov
push
pop
pusha
inc
jmp
in
xchg
loope
imul
jl
outsl
jle
loop
pop
or
sbb
in
mov
and
jmp
pop
notl
or
shl
ss
sub
pop
and
mov
cmp
sbb
insl
jns
inc
inc
int3
test
std
mov
cmp
data16
es
ljmp
fstl
or
xchg
test
sbb
test
push
in
fmul
inc
fistl
lcall
scas
mov
mov
mov
mov
scas
pop
jae
add
xor
stc
fiaddl
jnp
test
cmp
jne
aad
jae
or
mov
mov
mull
inc
out
jbe
icebp
mov
icebp
js
sahf
icebp
cmp
and
mov
sub
push
mov
lea
xchg
loop
dec
pop
mov
std
mov
out
addr16
mov
mov
add
mov
sbb
pop
cmpl
cmp
sarl
scas
and
sahf
push
mov
pop
lahf
jo
les
sub
xor
inc
cmpsb
or
jno
cmpsl
dec
outsl
pop
adc
fiadds
or
test
cmp
mov
adc
pop
sbb
inc
lock
jmp
shlb
cli
inc
adc
rol
pop
push
sbb
into
xchg
ja
cvtps2pi
xchg
fmuls
adcb
ja
cmp
mov
dec
mov
or
and
push
inc
fistl
jge
rcrb
dec
scas
incb
xchg
popa
nop
cli
sub
mov
rcrl
fs
mov
xor
push
adc
sbb
outsl
repnz
push
sbb
div
adc
push
push
loope
int3
hlt
pop
out
pop
mov
inc
rcl
aas
arpl
mov
int
inc
stc
js
ljmp
fisttpl
and
xor
roll
jb
mov
sbb
cmp
jne
inc
mov
leave
pop
daa
or
dec
cmp
sahf
push
dec
nop
inc
adc
subl
add
xor
arpl
adc
insl
push
gs
sti
sub
add
cmpsb
adc
mov
data16
jle
leave
jmp
out
mov
pop
pop
mov
dec
gs
mov
sbb
dec
popf
xchg
and
pop
cmc
push
lods
pop
pop
fsubp
jl
xchg
das
cmpsl
cmc
lahf
test
in
shlb
mov
cltd
or
out
pusha
out
js
cwtl
dec
loope
dec
ret
inc
lret
pushf
pop
sbb
dec
sbb
mov
xor
cmp
das
arpl
aaa
idivb
xchg
call
hlt
cmp
xchg
rolb
mov
push
add
test
daa
fdivs
sbb
in
cld
test
call
mov
cli
push
inc
or
ljmp
dec
or
mov
push
jmp
loop
inc
xchg
mov
pop
pop
and
jns
enter
aam
sti
aam
decl
adc
adc
jno
mov
sub
jbe
fidivs
mov
nop
pop
inc
xchg
cmpsl
js
subl
sub
mov
repz
mov
addb
out
imul
lods
cmpsb
aaa
mov
mov
aad
stos
dec
lahf
mov
inc
pop
popf
mov
push
adc
inc
repnz
xlat
bound
xor
push
or
cmpsb
fs
testl
in
test
inc
cltd
lds
dec
sbbl
mov
sub
movsl
pop
int
fidivrs
lock
dec
testb
loop
and
je
call
dec
aaa
mov
push
rcll
push
mov
dec
or
jae
leave
leave
pop
js
push
mov
xchg
mov
push
xchg
and
rorb
das
loope
hlt
lods
popa
aam
pushf
sub
jge
dec
xchg
das
pushl
cltd
adc
lahf
xor
fwait
jmp
jnp
fs
aad
int
inc
dec
cli
nop
mov
and
pop
jge
pop
mov
pop
and
sbb
mov
icebp
pop
aad
fdivs
in
ret
cs
sub
xchg
xor
ret
mov
cli
jge
fisttpl
inc
test
and
xchg
fwait
out
sub
shrb
sub
and
aaa
dec
es
jecxz
loop
fldt
jmp
dec
pop
push
push
mov
sbb
jg
mov
aaa
cmpsl
dec
xchg
test
mov
out
pushf
loope
jnp
pop
mov
and
insb
mov
inc
stos
xchg
mov
mov
push
aaa
add
imul
lcall
cwtl
aaa
fstpl
test
inc
pop
in
jge
mov
push
cli
neg
mov
enter
xor
pop
sbbl
daa
push
ja
pop
jle
cwtl
std
and
insb
inc
pop
jp
xchg
bound
xor
dec
mov
pop
sub
cmp
testb
clc
jnp
loop
add
cmp
fstps
jmp
mov
mov
push
js
adc
and
outsb
ret
stos
sub
lods
xor
lods
lret
fiaddl
out
les
pop
cwtl
sub
movsb
sti
scas
xchg
aas
sub
ret
enter
jno
adc
and
add
fs
out
sbb
sbb
lahf
xlat
lods
ljmp
mov
call
jo
inc
xlat
loopne
and
mov
xor
cmp
loope
lcall
int3
pop
orl
nop
jl
jmp
ds
mov
mov
mov
sbb
pushf
hlt
pop
jbe
mull
xchg
cwtl
mov
sbb
in
cmc
loop
dec
iret
push
push
in
roll
xlat
sbb
fdivs
or
cli
cli
push
adc
loop
and
int
sarb
jle
insb
cs
push
ret
in
imull
jl
fs
mov
dec
xchg
into
popa
fwait
push
add
xchg
nop
lock
jbe
jle
mov
mov
push
sbb
lods
ret
cs
std
loopne
scas
fisttpl
ds
mov
mov
fidivs
scas
addr16
mov
sub
cmp
cmpsb
icebp
roll
imul
lahf
dec
sti
jne
js
fildll
and
mov
out
stos
add
mov
push
push
lods
faddp
ret
and
pushl
push
sub
std
test
aam
sbb
out
icebp
and
shld
cmpsb
ja
sub
add
outsl
dec
adc
xor
pop
bound
call
mov
or
in
or
pushf
push
jecxz
outsl
and
xchg
leave
xor
push
cmc
or
or
dec
ficomps
sbb
sbbb
mov
outsl
pop
fdivr
or
mov
mov
imul
and
add
gs
jnp
jecxz
movsl
rorl
sub
fwait
insb
andl
loope,pt
jmp
gs
stos
and
lahf
sbb
into
adc
cmpsl
repnz
pop
roll
cmp
sub
outsl
xchg
xor
push
jecxz
xlat
sbb
mov
mov
js
iret
in
scas
pop
mov
insl
push
or
mov
stos
and
and
and
cmp
imul
aaa
lcall
std
mov
pop
push
xchg
xchg
lret
and
add
repnz
fidivrs
mov
clc
xchg
push
shlb
cmp
cltd
in
push
sbb
xchg
je
xchg
dec
sti
and
mov
jl
iret
mov
pop
into
push
pushf
xor
subl
jp
pop
mov
push
outsl
mov
mov
je
jo
imul
test
int3
inc
xorl
mov
in
and
add
add
shl
fiaddl
fwait
adc
sub
sbb
and
stos
dec
pop
lods
or
xchg
xchg
or
jg
imul
push
ror
xor
mul
xchg
test
adc
mov
pop
fsubrs
outsb
loope
mov
std
pop
aaa
sti
add
add
and
push
insb
dec
mov
fmuls
addr16
loop
aas
cmp
or
dec
pop
test
das
loopne
mov
out
hlt
and
int
bound
add
pop
stos
and
sbb
adc
imul
scas
and
dec
push
adc
addr16
pop
inc
or
movsb
sahf
adc
aas
xchg
shrb
add
or
aaa
xor
call
mov
jns
xchg
call
or
mov
adc
sbb
std
subl
fdivrs
jle
mov
aam
inc
add
sub
jmp
ret
inc
daa
mov
pop
lods
mov
clc
inc
inc
cmp
pop
cwtl
xlat
int
cmp
pop
sub
sbb
sbb
sbb
cmpsl
xchg
mov
and
lods
shl
sub
movb
ja
syscall
test
jo
pop
insl
jl
xchg
bound
idivb
sub
adc
jmp
rcl
inc
mov
test
sub
iret
fs
inc
pop
xchg
or
add
sbb
iret
jge
shrl
xchg
or
lods
shr
sbb
xchg
or
jo
dec
loope
mov
mov
push
cmp
lds
ss
and
int
hlt
xchg
lahf
push
fs
je
lds
jb
into
shll
cwtl
repnz
arpl
fdivs
fmul
lret
dec
outsl
loopne
pop
add
sbb
push
call
negb
xchg
jbe
mov
fcmovnb
sti
lcall
idivl
jbe
dec
div
xorb
or
test
hlt
mov
xlat
sbb
hlt
jae
repz
nop
lods
mov
add
in
mov
push
and
mov
inc
xchg
insb
lcall
push
jae
ror
sbb
mov
lods
and
inc
mov
dec
or
xor
dec
repnz
repnz
pop
fnstsw
out
add
lea
mov
mov
faddp
inc
cli
jb
hlt
sub
cmpsl
push
pop
mov
int3
mov
xor
repnz
pop
aaa
daa
int3
pop
jns
std
jle
repnz
jmp
dec
fsubl
in
jmp
cmp
lahf
inc
cli
and
push
out
xlat
pop
imul
cmp
push
in
sub
lahf
inc
rorb
test
inc
adc
pusha
jb
jae
cmp
rcrb
sub
stc
dec
cmc
push
lods
dec
cmp
lods
loop
mov
dec
sbb
dec
lret
and
movsl
adcl
pop
cli
add
mov
insb
and
or
ret
faddl
or
mov
das
sarb
push
xlat
test
js
mov
loop
fnstsw
int
inc
arpl
sub
lea
ret
repnz
test
mov
lcall
jnp
fimull
push
lods
and
cmpsb
cmp
shll
xchg
in
mov
push
aad
mov
popf
fs
add
cli
jb
jp
imul
xchg
add
icebp
jb
int3
xchg
inc
fisubs
pop
test
xchg
fcompl
rolb
jmp
lcall
call
out
je
pusha
mov
bt
icebp
jo
repz
sub
xlat
addr16
push
pop
ljmp
ror
adc
push
fnstcw
out
shl
addr16
mov
jecxz
js
jg
dec
popf
loopne
mov
push
cmp
ret
movsl
out
call
cmp
test
cmp
loope
add
push
xchg
popl
xor
jecxz
pop
mov
jns
imul
xchg
pushf
xchg
push
sbb
push
in
cmp
inc
cmp
pop
std
divl
inc
insl
sti
xor
cmp
pushf
mov
mov
int
loop
mov
repz
mov
out
stc
dec
adc
cmp
and
pushf
sub
rclb
mov
imul
aaa
icebp
aam
pop
jo
lods
pop
out
xchg
pop
pop
jbe
push
ret
dec
pop
imulb
shll
mov
push
xchg
mov
push
test
mov
fisubrs
popf
stos
insb
mov
rclb
insl
insb
xchg
leave
inc
ds
rcrb
std
xor
push
leave
and
inc
mov
lea
xchg
outsb
les
icebp
cmc
dec
fmuls
cmp
outsl
add
jb
outsb
jnp
or
cmp
in
pushf
sti
mov
inc
mov
lds
or
repnz
jbe
bound
or
sub
imul
push
or
adc
mov
cmpsb
outsl
bound
jge
sub
jge
fstl
jno
rorb
loope
push
pop
jno
outsb
int3
xor
out
cmp
leavew
out
insl
scas
int3
loopne
roll
fcmovnbe
push
xor
mov
pop
scas
repnz
pop
stc
ret
pop
adc
bound
xchg
sar
aad
mov
cs
loopne
jmp
sub
mov
dec
jecxz
xchg
adc
mov
gs
dec
orl
loope
pusha
je
lock
sub
inc
xchg
ljmp
sahf
stc
jl
inc
je
adc
jno
int3
push
adc
into
mov
lds
inc
jo
js
test
jo
ret
add
add
shr
mov
mov
inc
push
outsb
loopne
data16
jmp
dec
ud1
push
push
dec
mov
ljmp
push
lahf
popa
push
mov
mov
aas
xorl
test
das
mov
int3
pop
int
and
xchg
cwtl
xor
pop
les
fsubrs
sbb
xchg
fcmovnbe
stos
fdivs
fldt
sbb
outsl
inc
mov
xchg
fists
mov
mov
cmpl
lahf
clc
mov
jp
cli
push
xchg
mov
mov
dec
dec
xchg
mov
ja
add
mov
cs
mov
icebp
hlt
push
sub
pop
jg
push
arpl
lcall
js
push
test
xchg
sub
xchg
push
jnp
sub
dec
iret
popf
outsl
mov
movsb
shll
orl
xchg
dec
and
cli
test
xchg
mov
inc
pop
sbb
xor
out
xchg
cmp
push
out
loopne
loop
imulb
or
lret
outsb
push
sub
in
sub
jno
iret
test
daa
cmpsl
jo
dec
jecxz
divl
pop
cmp
push
cmp
add
inc
testb
cmp
add
add
sbb
sbb
test
push
mov
stos
mov
lods
pushf
jle
daa
dec
fcmovne
push
mov
sub
movsb
movsl
aas
outsb
pop
shl
enter
call
fsubs
xor
in
xchg
out
and
and
jnp
in
lds
inc
sub
int
jns
inc
and
in
and
in
fdivl
lret
out
push
push
push
xchg
mov
dec
out
jae
push
aad
fcomps
pop
scas
mov
dec
xchg
rcrb
cmp
sub
mov
cltd
insb
daa
imul
add
pop
xchg
int
xchg
sub
fwait
pusha
shlb
sub
sbb
adcl
in
jle
push
data16
imul
jbe
cli
cwtd
jl
add
cmpsb
inc
and
icebp
movb
mov
das
lods
sub
mov
sbb
rclb
movsl
inc
dec
or
out
inc
or
dec
loope
jmp
sbb
sbb
js
sub
outsl
lea
push
sti
or
shrb
imul
fmuls
stos
mov
insl
outsb
pop
mov
jbe
in
iret
jmp
mov
popa
aas
mov
hlt
arpl
faddl
lret
repnz
jb
popa
scas
std
iret
inc
lret
add
dec
cltd
inc
fstpl
pop
and
cmp
jl
inc
popf
ffree
movaps
xchg
addl
pushl
xchg
mov
pop
rcl
movsb
testl
adc
gs
lea
ds
xor
push
and
inc
or
mov
pop
mov
cmpl
pop
xorb
sub
popf
jmp
lret
pusha
mov
sub
push
psubd
add
cmp
fstps
decl
cld
cmp
xlat
in
sub
cld
jbe
sbb
inc
mov
mov
out
outsl
aam
mov
cmpsb
push
cmp
cmpsb
jl
daa
push
xor
mov
xchg
aaa
inc
das
fdivl
adc
fdivrs
dec
sbb
dec
jge
jecxz
add
loope
cmpsl
ret
cs
add
push
shlb
jle
movsl
jb
jle
sbb
aad
cmp
cmc
or
cmp
insl
scas
sarl
inc
lret
push
or
sbb
out
pushf
arpl
cmp
mov
stc
push
mov
jb
es
hlt
rcll
dec
hlt
lds
adc
pushf
mov
pop
cmovp
rorl
cwtl
dec
xchg
test
add
jg
push
outsl
ror
or
cmp
cmp
mov
push
jno
xchg
std
push
add
scas
xchg
sub
adc
add
mov
out
push
adc
or
mov
sbb
push
sarl
cmp
loop
push
loope
pop
pop
mov
std
lods
dec
mov
and
and
aaa
or
adc
pusha
test
in
popa
rcll
cmpsb
mov
addb
bound
adc
and
and
roll
sbb
rorl
or
in
mov
int
mov
and
lods
scas
mov
xchg
stc
lcall
mov
jno
xlat
xchg
push
dec
pop
mov
dec
adc
es
aaa
or
mov
repz
ljmp
call
gs
repz
stc
lcall
cwtl
icebp
lcall
xor
mov
inc
adc
add
and
pop
inc
mov
xchg
sarl
dec
mov
pop
rcll
or
or
fidivl
rcll
mov
lahf
lahf
or
xorl
cmp
cmp
addr16
cmp
repnz
dec
mov
fs
and
test
add
out
pop
mov
jl
pop
stc
xchg
push
mov
mov
dec
pop
dec
inc
add
push
and
adc
popa
repz
cmp
call
dec
mov
outsb
mov
int3
les
cwtl
cwtl
inc
jle
sub
mov
adc
imul
sahf
lock
adc
scas
xchg
cmpsb
inc
cmc
pop
pop
dec
or
or
dec
repz
js
fldenv
cmp
inc
fnstcw
fs
out
xchg
xor
dec
push
fstl
jle
push
and
or
pop
mov
or
ds
jle
loop
fnstenv
iret
movl
aaa
mov
mov
arpl
pop
mov
dec
fdivrl
and
mov
mov
gs
push
mov
add
mov
shr
sti
int3
inc
iret
jl
aam
js
rorb
mov
push
or
adc
lea
add
pusha
aam
je
stos
in
and
sbb
cmovle
int3
xchg
xor
in
push
mov
xor
daa
out
pusha
cmp
ficomps
sti
arpl
in
shll
aas
add
xlat
fidivs
es
jo
addr16
and
out
inc
test
dec
inc
xchg
push
xchg
inc
push
test
test
xorb
pop
cld
mov
scas
sbb
lcall
pop
xor
and
fisttps
xchg
jecxz
mov
insb
lods
loope
jl
mov
inc
in
lods
pushf
cmpsb
mov
jo
push
xor
pop
scas
stc
ret
sar
inc
nop
sub
stos
add
sbb
bnd
cld
insl
ss
xor
adc
mov
push
mov
loopne
ret
xchg
outsb
and
or
jns
lods
lods
jnp
push
gs
pop
lea
outsl
mov
pop
sbb
loope
xchg
pusha
dec
mov
xor
sbb
stos
scas
cmp
stos
clc
adc
orb
push
in
fwait
cmovge
cmp
repnz
dec
cmc
daa
cwtl
and
icebp
shll
mov
cwtl
cmp
xchg
loope
movsl
xor
xchg
mov
fidivrl
mov
or
cmp
pop
in
push
mov
jp
sub
lock
test
cmpsl
push
push
clc
ret
jge
scas
notl
sub
clc
repz
out
lret
out
adc
js
jae
adc
in
push
jmp
inc
movsb
lods
mov
xchg
mov
adc
jmp
movsb
aam
mov
dec
adc
pop
push
push
cmpsl
jp
loope
enter
shrb
hlt
in
and
out
push
call
enter
xchg
push
xor
xchg
push
add
fsts
movsl
leave
cmpsb
les
fidivrs
or
js
jns
stos
cmp
xor
insl
scas
dec
rcll
inc
add
push
cwtl
iret
pop
xchg
movsl
sbb
push
lret
nop
scas
sub
fistl
int
push
psubb
and
outsl
aam
sahf
or
pop
mul
sbb
ljmp
adc
rcrb
pop
push
push
bound
add
adc
rcrl
aaa
push
repnz
jnp
std
movl
lret
cltd
fnsave
test
push
imul
dec
inc
push
inc
mov
xchg
mov
aad
cli
sub
rcl
mov
adc
sub
mov
test
dec
lds
clc
xchg
lock
insb
mov
jns
jle
fidivrs
sbb
dec
ret
sbb
jg
cmp
xchg
dec
mov
mov
test
xlat
loopne
jb
add
sahf
fcompl
movsb
or
inc
dec
push
jl
out
cmpsl
mov
jecxz
push
dec
ja
repz
adc
aad
mov
cs
aaa
xor
stc
outsl
inc
push
cltd
sub
jno
gs
scas
or
mov
push
dec
mov
fcomps
push
fisttpl
aad
mov
popa
movzbl
aas
cmp
jbe
imulb
pop
sub
cmp
adc
or
pop
sti
and
enter
jge
aas
ja
mov
out
shl
iret
cmp
addl
sub
or
movsl
sbb
xchg
push
inc
inc
outsl
imul
sub
lret
aad
sub
cs
push
cwtl
cmp
les
lods
push
fildll
stc
fistl
aaa
scas
mov
inc
adc
jbe
imul
push
and
ja
aas
ja
lahf
insb
push
jmp
jnp
int
push
nop
jmp
cmpl
lods
sub
sub
mov
out
jp
ljmp
mov
cmp
arpl
sbb
sahf
mov
jns
mov
std
mov
jge
push
xor
dec
outsb
xorb
and
mov
mov
testb
stos
mov
fsts
push
call
lcall
in
sahf
ljmp
rol
aam
and
cli
pop
jmp
cli
jmp
pop
scas
out
arpl
cmpsb
dec
jp
in
icebp
adc
aaa
imul
push
out
mov
test
adcb
enter
inc
sbb
cmpsb
shlb
data16
sti
mov
and
inc
cli
add
adc
jns
ja
aad
mov
push
popa
lret
mov
test
out
les
jno
adc
sbb
aam
test
loop
lds
mov
jge
mov
lock
cmp
scas
xor
push
int3
inc
addr16
mov
pop
rorb
pop
push
inc
jb
jg
mov
mov
push
je
pop
jl
push
mov
rorl
inc
fcompp
pandn
dec
sub
jo
jg
rcrb
mov
loope
xchg
cmpsl
inc
dec
std
shlb
andl
filds
imul
ljmp
sub
cmp
pop
out
push
and
mov
pop
movsl
jae
leave
arpl
lret
call
daa
pop
arpl
pause
pop
das
xlat
xor
xchg
ss
and
lea
mov
push
orl
add
mov
pop
mov
pop
fildl
mov
sub
jne
inc
jle
or
xor
lock
iret
pop
mov
xchg
xchg
stos
mov
pop
inc
cmpsb
adc
mov
jns
cmpsl
les
inc
inc
aas
movsb
pop
outsb
mov
dec
jne
fnsave
sub
or
xchg
pop
loopne
jne
mov
movsl
aas
jno
mov
loop
push
and
inc
jo
fcom
or
test
jno
in
in
rorl
stos
add
daa
fisubrl
fisubs
inc
or
in
test
pop
cli
sahf
pop
cmc
or
aas
rol
mov
mov
or
cmp
xchg
and
fs
test
stos
cmc
call
add
and
pop
fdivrl
ret
cld
ficomps
repz
in
and
gs
adc
rcr
push
xor
cs
sbb
inc
dec
push
stos
fbstp
outsl
loop
mov
pop
mov
jecxz
fwait
cmpb
sub
sbb
je
mov
mov
xchg
and
enter
add
es
sub
jb
lahf
add
inc
lods
ret
xor
mov
sub
cmc
movsb
scas
daa
dec
fdivrl
fdivs
lea
sarb
sbb
inc
or
push
push
adc
jecxz
mov
lds
lret
dec
mov
sbb
scas
out
add
test
pop
fisttpll
shl
mov
out
push
cmpsb
cli
in
sub
outsl
sub
fstl
or
cmp
ret
push
xor
dec
hlt
sub
test
test
xor
leave
ret
out
fldenv
nop
dec
int3
fsubrs
sahf
or
fisubs
dec
or
mov
movsl
ror
pop
cmp
inc
ret
cld
jns
push
xchg
fstl
lahf
fneni(8087
xchg
mov
pop
negl
push
or
push
movsl
or
pusha
stos
adc
sub
add
inc
iret
cli
sarl
aad
push
je
int
fnstenv
xor
bound
dec
adc
or
sub
cmp
dec
stos
ja
sub
add
bound
mov
pop
adcl
scas
lret
xchg
insl
push
movntps
sbb
mov
inc
mov
or
inc
cmp
ror
adc
lahf
or
stos
cwtl
arpl
inc
push
inc
push
repnz
xchg
mov
xlat
adc
bnd
push
movaps
lock
mov
xchg
dec
add
jmp
and
inc
jl
jbe
out
dec
dec
cmp
pop
jp
sti
popf
out
call
mov
lret
leave
loopne
add
in
sahf
sub
push
mov
jnp
sub
mov
xor
xchg
mov
test
inc
push
nop
scas
loope
rolb
scas
sbb
adc
les
ljmp
inc
jne
xchg
outsl
jno
fmul
mov
cmp
push
scas
pop
dec
inc
xchg
jnp
add
sbb
mov
pop
cmp
popf
adc
mov
mov
loope
je
mov
fnstsw
inc
or
adc
bound
mov
insl
stos
mov
ret
and
bound
xchg
pop
jne
fs
add
test
xchg
in
into
cltd
mov
mov
clc
sub
xor
mov
mov
les
fwait
adc
cmp
jne
cwtl
in
jae
je
fucomp
pop
sbb
jae
or
inc
mov
add
push
stos
mov
dec
jbe
std
push
out
inc
das
mov
lock
imul
xor
cmpsb
mov
test
fnsave
daa
xchg
scas
repnz
or
pop
mov
xor
popa
dec
sub
mov
outsl
pushf
loopne
push
stc
movsb
fs
xlat
insb
pushf
and
mov
pop
std
xorb
in
mov
or
xchg
pop
mov
in
push
mov
leave
push
ds
xchg
es
ss
fldt
lock
repnz
mov
iret
or
jnp
repnz
je
mov
ds
stos
test
out
add
xor
arpl
movsb
gs
nop
xchg
ret
lds
fs
xor
scas
push
mov
std
lea
inc
add
mov
sbb
sub
pop
mov
cs
out
inc
mov
mov
repnz
test
js
xor
addr16
fcoml
inc
orb
dec
icebp
push
jmp
lcall
push
out
sahf
daa
filds
or
cmp
pop
jnp
jp
out
pop
stc
or
lret
loope
dec
in
dec
jnp
aas
aas
dec
pop
out
mov
leave
push
jo
fistpl
mov
hlt
in
inc
gs
lea
jmp
stos
mov
imul
mov
dec
push
pop
dec
out
mov
mov
in
rcrl
sub
and
and
push
inc
jg
push
ljmp
loope
or
xchg
push
jp
pop
pop
into
push
mov
and
int3
push
leave
test
xchg
mov
inc
lret
aaa
mov
into
sarl
dec
xchg
int
mov
mov
lock
in
popf
movsl
mov
push
stos
cmp
lds
pop
cltd
pop
sub
push
and
pop
or
jge
jg
cld
sub
adc
xlat
test
stc
sti
push
or
aam
mov
fimull
decl
repnz
dec
cmp
jno
inc
inc
test
or
repz
dec
and
and
addr16
sbb
xor
stos
ljmp
cmp
dec
push
mov
mov
fisttps
or
xor
mov
xchg
inc
cmc
xchg
sarb
pop
sbb
pusha
addb
jmp
xor
adc
lods
jle
in
fldt
push
ss
lret
aad
adc
add
xchg
inc
mov
jnp
push
push
mov
sti
shlb
mov
ret
jne
in
outsl
addl
lock
imul
or
test
or
push
pop
xlat
sahf
push
pop
pop
sar
adcl
jge
add
les
in
inc
insl
les
iret
les
aas
stc
lret
mov
cmp
add
rcll
std
mov
sbb
add
jo
scas
push
clc
lret
xchg
xor
stc
pop
fstl
orb
das
xorl
es
or
jbe
xchg
push
adc
ja
inc
cmpsb
mov
mov
lcall
rcr
popf
push
lods
cmc
cmp
push
xor
jmp
loop
cwtl
xchg
push
stc
sbb
les
data16
ret
xchg
lods
or
insb
sarl
and
mov
jae
call
lods
cmpsb
repz
movb
dec
cmp
jecxz
dec
dec
fadd
mov
int
aam
mov
rcr
into
fistpll
mov
pop
xchg
std
scas
into
mov
inc
inc
and
pop
stc
dec
leave
adc
je
in
rclb
xchg
mov
pop
and
sarb
inc
mov
sbb
ljmp
xor
pop
stos
xchg
mov
mov
shrl
sbb
popf
inc
push
ss
mov
test
iret
cmpb
adc
inc
aaa
clc
aam
jae
or
mov
push
jecxz
fcompl
lods
ss
jbe
jne
pop
imul
mov
jo
cmp
testl
jl
push
xchg
fisubl
push
imul
mov
insb
cmp
lods
idiv
cmp
mov
je
das
cmpb
ja
or
mov
ret
clc
push
pop
xor
adc
fwait
mov
scas
adc
sbb
dec
pusha
lahf
shlb
outsl
xor
mov
pop
cmp
iret
xchg
jge
or
sub
add
js
sub
jmp
xchg
mov
inc
or
sbb
dec
xchg
sbb
ficoml
ss
inc
jmp
and
test
sarb
movsb
nop
mov
adc
mov
jle
clc
cmpsb
lock
adc
sbb
mov
pusha
out
sbb
daa
fidivrs
ja
movsl
ret
mov
adc
ljmp
push
inc
mov
add
hlt
bound
push
cmp
fstl
pushf
repz
pusha
add
adc
jnp
lcall
adc
dec
pop
int
fs
adc
icebp
gs
xchg
loopne
test
push
data16
in
stos
hlt
jnp
jmp
cmpsl
inc
pusha
jge
adc
mov
and
mov
push
adc
mov
cmp
cli
cmp
enter
pop
in
cld
aas
sub
dec
aam
mov
xchg
dec
lcall
xlat
aad
fmull
mov
inc
int
push
push
sbb
and
jns
addr16
into
stc
imul
popf
mov
repz
int3
xchg
sbb
fiaddl
push
in
lods
pop
adc
shll
sbb
test
pop
out
test
test
test
jbe
dec
xchg
std
lds
sbb
jns
arpl
pop
loopne
xchg
andb
mov
pusha
pusha
out
inc
into
xor
jno
cmc
test
xchg
cmp
mov
ja
cld
jno
jb
sbb
fwait
mov
pop
arpl
mov
ffree
loope
leave
mov
xor
push
jae
outsb
mov
imul
jnp
xor
fsubrs
sahf
mov
mov
push
jl
adc
mov
fsubrs
mov
mov
cmp
outsb
imul
adc
aad
into
xor
push
push
das
and
xor
scas
xor
divb
adc
ljmp
imull
add
cmc
loop
mov
das
iret
clc
pop
mov
inc
paddusw
lret
mov
aas
into
sub
loop
mov
mov
in
mov
lcall
push
push
or
xchg
jo
clc
cs
pop
in
sbb
fstp
sub
aad
roll
sbb
test
pop
lret
rcll
inc
sub
cmp
xchg
sti
sbb
push
neg
js
xchg
mov
cmc
into
push
mov
into
sti
ds
ret
or
je
fbld
dec
pop
cmp
and
scas
mov
mov
sub
jle
call
outsl
add
jne
cmc
pop
lret
mov
ret
jle
dec
xchg
mov
ljmp
jl
lods
lret
dec
sub
adc
dec
sarl
and
es
mov
xchg
xchg
leave
cmpsl
enter
int
xchg
and
push
jmp
test
fisubrl
lds
mov
cmp
mov
xlat
xchg
adc
jns
push
jmp
daa
push
lock
sbb
and
js
pop
dec
jnp
inc
push
scas
sub
pop
sub
pusha
sti
pop
adc
mov
pop
cmp
pusha
lcall
clc
adc
mov
pop
and
stc
pushf
adc
fsub
popf
dec
adc
ljmp
xchg
dec
leave
insl
outsb
mov
sbb
cmp
xlat
fs
sub
icebp
push
inc
icebp
cmpsb
mov
gs
insb
out
roll
pop
cmp
lds
cmpsb
adc
testb
and
out
mov
loopne
push
mov
je
fxtract
sub
nop
sub
popl
add
popa
fwait
dec
mov
es
cmc
outsb
and
inc
jae
xlat
cmp
lods
test
fstl
out
repz
popf
lret
cmpsl
lds
sbbl
adc
fwait
mov
aas
outsl
or
mov
mov
nop
sti
mov
mov
mov
dec
mov
jl
pop
sub
test
cs
repz
jmp
dec
orl
movl
lcall
addl
xlat
inc
cmpsb
jno
sbb
inc
xor
popf
arpl
imul
mov
xchg
mov
jne
std
outsl
xor
jb
cmpsl
test
and
or
lret
mov
psrlq
cmp
inc
int3
adc
outsb
lret
pop
fwait
sub
fs
sbb
aaa
test
aad
inc
and
call
mov
jbe
inc
clc
push
add
adc
xchg
sbb
xor
popa
aaa
push
sbb
movsb
mov
mov
mov
mov
cld
sub
cwtl
enter
ljmp
popa
xor
or
popf
add
mov
pextrw
pop
sti
jo
jmp
xchg
jle
dec
sarb
jbe
int3
je
loopne
sbb
jg
push
cmp
inc
test
fsts
stos
dec
dec
push
jnp
mov
mov
or
mov
mov
test
lret
push
sahf
ljmp
gs
mov
xchg
mov
ds
sbb
fwait
dec
and
les
hlt
push
popa
jmp
shll
pop
cmp
jle
fcomip
sahf
add
adc
aaa
lock
add
sub
lret
xchg
mov
std
cmc
fidivs
jb
cmp
add
es
in
xchg
outsl
mov
adc
sahf
dec
leave
jae
dec
push
or
push
dec
scas
cwtl
cltd
and
adc
loop
jae
sub
sbb
jl
in
mov
scas
adc
cwtl
scas
or
cmp
stos
ds
ja
leave
repz
cltd
imul
xchg
jmp
xor
xchg
fistpl
cmp
or
xchg
les
xor
cltd
lcall
pop
mov
pop
mov
mov
iret
jne
insb
mov
into
push
push
es
les
mov
aad
pop
imul
ret
inc
subb
out
pop
mov
fwait
push
hlt
jl
push
lea
xchg
lds
add
movsl
mov
repnz
cmp
movsl
inc
xchg
jge
pushf
insl
call
cmp
cld
dec
rorl
add
jmp
test
bnd
add
dec
mov
mov
cmp
jbe
mov
xchg
xor
lea
out
jmp
cmp
imul
xor
mov
inc
adc
xor
cmpsb
adc
push
cmp
inc
andl
aad
xchg
out
lea
pusha
cmc
sbb
cwtl
es
mov
inc
mov
jbe
cmp
pop
mov
lock
xchg
ficoml
movsl
inc
iret
add
ret
xchg
adcb
cmp
mov
jl
push
jne
pop
and
cmp
mov
cmp
dec
jg
mov
pop
push
stos
je
push
ret
add
and
inc
adc
cltd
data16
fcomp
dec
test
in
or
repnz
add
push
ljmp
sti
jl
mov
sbb
jp
cld
jno
es
xchg
xor
mov
shr
js
gs
lcall
call
pushf
xchg
pop
subl
mov
loope
mov
fmulp
pop
fildl
aaa
sbb
jo
icebp
cmp
icebp
push
addr16
js
imul
lret
cmp
inc
xchg
mov
mov
adc
pop
mov
sub
jmp
xchg
mov
fucomp
mov
repz
rorb
xchg
mov
inc
or
mov
jbe
pushf
xchg
sub
mov
adc
cwtl
addb
imul
sbb
pop
daa
insl
and
mov
out
imul
in
icebp
cmp
push
popf
insb
lock
push
add
rorl
aas
and
dec
pop
pusha
ret
xlat
and
xchg
repnz
mov
es
lods
lahf
aam
loopne
mov
mov
inc
imul
pop
mov
mov
sub
cs
aad
aad
jns
out
movl
add
mov
push
and
daa
mov
sbb
fldl
pop
jg
lock
fld
mov
push
in
iret
mov
xor
into
jg
or
stc
rorb
insb
cltd
in
jle
jmp
mov
loope
dec
pop
mov
pop
int
addr16
outsb
xor
push
outsl
mov
lods
push
xchg
jno
mov
add
cltd
roll
mov
out
scas
lods
dec
jl
inc
jecxz
cmpsb
insb
arpl
int
inc
lods
adc
sti
xchg
fs
mov
jp
out
xchg
fnstenv
mov
fcomi
dec
fidivrl
stos
cmpxchg
dec
in
hlt
mov
xchg
push
sub
adc
imul
xchg
pop
mov
pop
ljmp
lea
mov
jmp
cmp
fisttpll
push
dec
arpl
jmp
jbe
aaa
jmp
pop
loop
je
xor
xlat
loope
jns
lret
push
lods
sbb
mov
pop
movsl
push
and
repz
popa
add
mov
in
xchg
nop
jmp
dec
xchg
pushf
jae
dec
sub
jge
aam
lods
divl
int
lock
jp
lret
dec
ret
push
int3
scas
cmp
add
sbb
jne
das
cwtl
inc
mov
cs
ret
cmp
sti
mov
adc
or
jl
mov
and
popf
daa
mov
lcall
vsqrtps
addr16
or
add
add
sub
lahf
movsb
xor
cld
outsb
repz
lock
mov
xchg
mov
ljmp
dec
xchg
loope
aad
cs
jnp
testb
sbb
popa
mov
cltd
clc
popf
push
jl
or
mov
or
sti
push
loopne
jo
loope
mov
das
cltd
inc
stos
add
inc
addr16
aam
xor
push
mov
cmc
cld
sub
and
or
lods
xchg
inc
dec
sub
sub
mov
adc
enter
pop
jns
xchg
dec
jnp
int
xor
imulb
push
scas
dec
repz
adc
mov
scas
ror
xlat
adc
les
sub
push
sahf
scas
mov
es
out
push
in
add
xor
inc
jno
nop
push
mov
call
fcomps
fstpt
xor
testl
mov
mov
es
cmp
ficoml
adc
out
jg
jp
insb
jg
and
icebp
mov
enter
iret
mov
je
cmpsb
aaa
adc
inc
addr16
ss
mov
sub
lods
repz
fsubrs
jl
stc
mov
mov
mov
enter
lds
sti
std
mov
push
push
sub
mov
push
lret
das
jno
cmpsl
xchg
ret
cmp
inc
loopne
cmc
insl
fisubrs
push
ds
aad
je
jb
xor
dec
push
xor
bnd
dec
mov
mov
push
inc
mov
inc
xchg
outsb
or
imul
lret
enter
int
jecxz
test
push
add
scas
and
dec
mov
call
fcoml
jne
ds
aas
inc
inc
hlt
int
xchg
cmc
lret
dec
push
jns
in
sbb
cmp
loope
rclb
imul
loope
mov
xorb
adc
inc
mov
addr16
sarl
call
fisttpl
insl
icebp
sbb
push
inc
pop
dec
or
movsb
out
test
test
imul
call
adc
arpl
les
adc
ja
mov
lock
scas
add
pop
dec
add
out
mov
out
popa
mov
test
sub
ljmp
daa
cmp
test
jnp
jl
movsl
jmp
test
xchg
and
sbb
in
mov
sbb
fdivs
andl
stc
cmpsb
or
xchg
cmpsb
push
popa
aad
and
add
out
adc
add
shr
sbb
aaa
int
arpl
and
push
ret
shrb
xor
out
loop
xor
or
push
and
pop
push
lock
jnp
cmp
xchg
iret
or
les
inc
xor
lret
dec
adc
dec
adcb
in
or
ja
sub
sbb
pop
dec
mov
mov
mov
mov
xor
hlt
cmp
lock
movsl
out
sub
mov
mov
adc
inc
inc
xor
aaa
jne
iret
push
mov
add
cmp
testb
aaa
cmpsl
sbb
ja
jecxz
inc
cmp
hlt
imul
scas
in
ficoms
sbb
xchg
push
or
aad
mov
xchg
ja
out
cmpb
test
cli
fisttps
inc
adc
insb
lea
sbb
push
or
js
adcl
in
jns
idivl
lods
imul
faddl
fs
inc
xchg
jb
pop
cmpsl
mov
mov
push
push
sbb
and
imul
cmp
out
call
out
cmp
mov
lahf
sub
fsubrl
pushf
add
cmp
fisubrs
fmuls
or
lahf
icebp
add
out
jnp
push
insl
mov
sub
je
push
es
stos
jno
lahf
into
xor
mov
pop
fldt
pop
divb
add
int
cld
roll
cmp
leave
leave
outsb
scas
push
or
jmp
aas
add
imul
lret
lahf
out
dec
or
repz
mov
sbb
and
sub
sar
bnd
outsb
lret
mov
pushf
pop
or
in
xchg
je
xor
dec
pop
cmp
gs
je
cmpsb
imul
in
and
xchg
or
sbb
mov
cmp
mov
punpcklwd
bound
pop
sbb
push
sub
mov
ds
je
rol
stos
or
sub
jns
jmp
mov
pop
dec
inc
fsts
push
push
test
sbb
pop
addb
jge
sbb
push
mov
shrb
dec
xchg
adc
inc
sub
je
ja
inc
lods
add
mov
cmp
sbb
mov
sbb
xchg
repnz
fwait
adc
sbb
inc
sbb
shrb
hlt
nop
ja
popa
out
mov
into
dec
mov
shlb
or
pop
lret
xorb
adc
mov
scas
adc
sbb
lcall
aas
mov
pop
daa
jp
enter
sbb
dec
cmpsl
movsl
popa
or
xchg
xor
movsl
add
or
inc
stc
and
sub
mov
xor
mov
cmc
imul
jmp
cmp
cmpsb
sbb
fistpl
fucomp
jbe
mov
jnp
xchg
je
stc
mov
mov
xor
aas
inc
clc
mov
loop
or
lcall
pop
fs
cmp
in
shr
mov
stos
adc
cwtl
je
xchg
mov
or
je
sbb
xchg
call
enter
ja
jno
mov
rcrl
cmp
mov
cltd
into
and
jns
inc
cmp
push
stos
in
inc
mov
mov
xchg
mov
push
or
ret
mov
mov
sbb
push
icebp
test
lods
fwait
inc
sti
push
dec
add
in
jl
jge
cmp
add
neg
cmp
mov
mov
nop
clc
pop
mov
mov
loopne
mov
fidivrs
mov
mov
dec
lods
sbb
inc
sti
sub
lods
mov
int3
into
cmpsb
ret
cli
cld
scas
push
je
pop
lret
lods
cmc
sub
inc
les
add
mov
pop
cmp
pushf
inc
jns
mov
push
jns
xor
out
jne
int3
sub
cmpsb
and
or
adc
add
popa
div
cli
andl
fs
sub
push
mov
lds
cmp
cli
xchg
mov
push
xchg
or
fimuls
pop
sti
adc
int3
push
loop
adc
lods
cmpsb
stos
fildll
fsubrs
and
dec
pop
and
mov
out
inc
mov
mov
lahf
test
jns
in
push
dec
xor
pusha
rclb
jg
xchg
adc
dec
insb
sbb
mov
adc
xchg
stc
push
xchg
orl
test
jmp
lret
imul
sub
cmp
jp
fwait
mov
mov
push
mov
cwtl
scas
repz
push
bound
mov
inc
insl
sar
hlt
push
out
and
fsubr
lock
add
jmp
jbe
xor
mov
xchg
je
and
pop
fsubrs
fs
shl
int
imul
test
and
repz
into
and
call
mov
test
out
push
aad
and
xchg
test
outsb
jnp
popf
stc
enter
cwtl
fdivrl
and
xor
out
cmc
mov
dec
gs
enter
loopne
fcomi
sub
or
aad
fbld
pop
popa
mov
xor
push
cmpsl
insb
mov
lret
cmp
lahf
mov
cmc
insb
lock
add
rcrl
or
jbe
push
iret
pop
push
or
dec
in
push
cli
jp
adc
cmpsb
jne
sahf
icebp
ret
cmovge
rorb
jo
push
lods
xchg
push
sbb
mov
cmp
insl
std
pop
lods
sbb
xor
or
push
push
or
inc
mov
in
mov
mov
and
fwait
outsl
xor
mov
test
cs
dec
inc
dec
pop
and
mov
inc
adc
mov
cld
arpl
cmp
mov
mov
inc
sbb
and
push
imul
or
xchg
add
mov
adc
aad
cmp
lret
popf
mov
jnp
inc
xchg
dec
xchg
and
bound
stos
jmp
inc
mov
int
lock
divl
repnz
mov
xor
mov
shrb
adc
psubw
cmc
mov
clc
mov
add
loopne
subl
stos
stc
xchg
push
call
inc
cmp
cmp
mov
in
or
std
decl
xchg
shrl
je
push
mov
lods
sbb
out
sbb
or
ja
popf
sbb
push
or
sti
mov
pop
insb
mov
jp
fmul
fsubs
jae
or
out
mov
jne
push
xor
scas
jnp
pop
sbb
and
popa
ds
pop
les
std
imul
ljmp
mov
sbb
or
sti
cwtl
subb
bound
pusha
lock
adc
jl
push
mov
xor
pop
popa
jne
out
sahf
fwait
sbb
jecxz
lods
data16
adc
mov
mov
cmpsl
loope
pop
or
iret
push
aam
xchg
in
hlt
mov
jmp
pop
sub
cmp
jb
inc
jl
dec
fsts
leave
jo
out
lret
in
xchg
fdivp
pop
popf
mov
mov
lret
mov
sub
xchg
insl
cmpsb
xchg
mov
pop
jl
fbld
out
mulb
movsl
jle
xchg
xlat
ficompl
and
test
and
mov
es
xchg
xor
mov
stc
push
jecxz
xchg
std
cld
das
lcall
out
js
shrb
and
negl
cmpsl
jmp
mov
pusha
mov
enter
or
mov
ja
fs
ret
push
push
out
push
ds
fisubl
into
push
insb
jle
test
push
les
sbb
adcb
push
lret
pop
xor
jle
xor
stc
inc
jne
adc
out
mov
loopne
repz
cs
loope
cs
sub
shr
jne
in
fiaddl
push
pop
mov
jge
jb
sbb
mov
loopne
fdivrl
lods
addl
clc
test
push
lods
xor
and
add
mov
add
rorl
mov
xor
jmp
inc
fbstp
jg
and
sub
and
aas
icebp
adc
add
jecxz
xor
imul
push
dec
sti
push
out
test
insb
aaa
fdivrl
mov
out
inc
sbb
mov
adc
repnz
rol
aas
test
icebp
inc
cwtl
push
pop
mov
cmp
lea
rcrl
shrl
jae
add
xchg
jl
fistpl
std
pop
xlat
mov
jl
rorb
sbb
aad
mov
jo
or
insb
inc
sbb
mov
cmp
mov
loop
outsl
xor
lcall
jge
pop
shll
cmp
nop
lretw
jmp
cmpsl
addr16
mov
dec
xor
cmp
rorl
push
in
call
divl
push
sub
add
out
gs
aad
adc
cmpb
mov
int3
sub
mov
mov
shll
popa
sbb
sub
dec
test
clc
fiadds
sub
sbb
sarl
lods
int3
mov
ret
push
cmp
mov
shlb
hlt
cs
out
dec
je
mov
pusha
popl
enter
cmp
pop
cli
jb
and
neg
outsl
repz
ja
xchg
mov
sbbb
sbb
pop
jae
pop
mov
popa
jmp
repz
jp
daa
enter
dec
insb
jnp
cmp
push
jg
jnp
dec
add
ret
scas
stos
push
cmp
xchg
cmp
bswap
out
push
and
xchg
sti
dec
iret
test
in
in
outsl
sub
inc
in
xor
cmp
jecxz
adc
mov
push
pop
roll
push
pop
xchg
rorb
ja
and
arpl
dec
sbb
out
jb
pusha
es
dec
ds
sbb
ss
pop
fs
jns
xchg
mov
fucomp
stos
in
cmp
cmp
addr16
mov
dec
rcll
test
scas
xchg
fidivs
sbb
lret
push
repz
jmp
jno
aad
sahf
mull
push
cmc
or
sti
rol
insl
and
jbe
int
jg
mov
cltd
dec
cmp
mov
repz
mov
insl
jo
movsl
movsb
fcmovbe
mull
pop
scas
fs
in
jge
jp
leave
loopne
arpl
xor
push
lods
fstpt
mov
shll
std
jp
test
pop
mov
test
rolb
mov
fistpl
data16
icebp
xor
mov
imull
fsubr
test
sub
xchg
add
jmp
push
out
adc
mov
xchg
mov
pop
mov
mov
out
test
lea
imul
mov
into
out
fisubs
stos
nop
sbb
xorb
xlat
cwtl
pop
dec
sub
clc
test
cs
adc
setge
jae
outsb
add
mov
lods
int3
mov
add
pop
stc
cmc
adc
test
push
cwtl
add
sbb
out
or
bound
mov
inc
lds
pusha
cld
loopne
inc
lods
pop
jmp
add
aaa
mov
insb
ss
ljmp
xor
sbb
xor
mov
fstps
enter
jle
dec
xor
shl
dec
sub
xor
push
pop
mov
aaa
cmp
push
cmp
ret
xchg
pushf
sub
rcrl
cmp
fsubrp
mov
std
add
mov
pusha
add
iret
in
add
sbb
cmp
mov
push
or
fimull
mov
lahf
cmp
out
push
jnp
xor
mov
dec
aad
jae
fs
inc
gs
sbb
jle
shlb
test
cwtl
jae
hlt
test
nop
aaa
enter
sbbl
ret
insb
add
in
push
mov
sbb
cmp
sbb
test
stc
mov
test
lods
dec
cwtl
push
cmp
inc
mov
std
test
push
orb
test
jge
ljmp
and
lds
aad
mov
fimull
gs
lock
mov
dec
cmpb
sti
js
cmp
adc
leave
std
shlb
xchg
jo
int3
icebp
lods
push
sbb
add
arpl
fprem
sarb
mov
mov
cmp
lcall
add
insb
inc
adc
xchg
xchg
mull
sub
js
mov
sub
xor
rdmsr
lahf
pop
notl
mov
or
xor
scas
add
cmp
mov
jge
out
mov
jl
ds
lret
adc
add
test
or
in
mov
fimull
pop
push
cmp
and
and
mov
xorl
mov
cld
ds
or
pop
push
out
inc
loopne
xchg
stos
sub
push
adc
sbb
jnp
adc
sbb
xor
push
xchg
fstpt
les
roll
or
xor
outsl
mov
jne
cmc
in
lock
iret
jmp
adc
es
xchg
ret
xchg
aam
outsb
and
mov
mov
dec
fadd
dec
and
movaps
xchg
push
pop
sub
aaa
xchg
and
add
ja
loop
cmp
pop
inc
pop
push
ss
jnp
mov
or
iret
mov
fistps
fnstsw
xchg
scas
pop
sbb
jno
rol
jb
lock
out
je
pop
add
jnp
ss
test
out
push
sbb
lret
sbb
lock
mov
jne
or
adc
pusha
popa
dec
cmp
sbb
cmp
lods
loopne
imul
cmp
dec
in
sub
dec
mov
mov
dec
mov
adc
orb
adc
imul
lret
and
out
stos
push
test
mov
jne
lds
push
adc
stos
insb
inc
fwait
pop
sahf
mov
mov
pop
inc
inc
outsb
iret
xlat
and
pop
mov
cld
fcoms
jo
imul
mov
and
insl
push
push
add
jnp
xor
int3
repnz
adc
lcall
sub
mov
repnz
xchg
mov
lret
mov
jno
cmp
lock
sub
pop
in
mov
call
imul
sbb
rcrb
arpl
aad
out
mov
mov
divb
dec
aad
lods
xchg
sbb
das
shrb
aad
inc
notl
leave
test
push
fsubrl
ret
push
iret
in
mov
mov
jg
aad
sahf
scas
and
mov
cmpsl
jnp
int
push
sub
filds
sbb
inc
enter
add
jbe
pop
test
push
jae
out
jnp
clc
cs
sub
in
int3
and
scas
mov
sbb
jbe
add
mov
mov
pop
notl
sub
rclb
jmp
lret
idiv
call
inc
ljmp
mov
jmp
pop
add
bound
push
jmp
mov
call
mov
in
jns
pop
push
sbb
pop
push
shrl
push
dec
jl
cmp
push
sbb
and
push
in
test
arpl
mov
pop
or
loopne
inc
cmp
loope
ret
loopne
cmc
jne
xchg
sub
cmp
jge
scas
imul
inc
daa
sub
push
xor
fidivrs
cltd
sarb
js
push
out
lds
sbb
cmpsb
mov
rorb
cmp
pop
int
add
into
cltd
add
js
insw
ds
in
ret
jnp,pn
fstpl
clc
or
jns
scas
int
cltd
adc
in
rolb
or
ss
insb
aas
cmp
test
ret
and
sub
mov
inc
xchg
out
adc
sti
out
test
or
push
mov
fiaddl
out
pop
dec
les
adcl
mov
pop
jp
sbb
pusha
jl
repz
hlt
jl
dec
jl
push
inc
ficoms
mov
mov
pop
pushf
or
pusha
movsb
ljmp
and
or
test
mov
mov
ficoms
gs
rcrb
jp
stos
mov
iret
popf
xchg
ds
std
scas
arpl
jbe
sti
test
into
mulb
mov
jo
add
dec
fsubl
fcmovb
dec
or
cwtl
pop
fcmovnu
add
pusha
inc
sarl
xchg
sbb
xor
pop
xchg
sub
xor
mov
sub
rol
add
push
mov
jmp
sahf
xchg
mov
pushf
scas
cmp
add
movsl
pop
jge
test
xorl
inc
test
std
das
daa
or
aas
xchg
lret
lock
pop
ret
mov
jb
and
leave
inc
adc
mov
in
ficomps
fcoms
stc
popa
scas
xor
sbb
adc
aas
pop
out
adc
add
add
fbstp
mov
jg
jecxz
stc
push
mov
inc
cmc
xchg
sub
lea
and
out
push
div
lahf
in
and
jb
cmpl
shll
xchg
shlb
cmc
test
fisubrs
sbbb
out
sar
ss
lea
bound
outsb
jne
lds
ficompl
mov
lea
in
inc
or
pop
or
push
cmp
mov
popa
cmpsb
mov
cmpsl
cmc
push
mov
jnp
scas
inc
mov
out
ljmp
bound
rcrb
add
rcll
adc
pushl
mov
and
and
test
outsl
sahf
cmp
in
daa
cmp
loopne
shlb
xor
or
sub
jno
inc
cmc
and
int
lret
outsl
or
scas
jnp
ror
popa
pop
pop
xor
ret
and
or
leave
push
fidivrl
or
and
mov
test
jg
iret
xchg
icebp
jae
jne
pop
das
jmp
sti
mov
jp
mov
icebp
loope
rcl
pusha
jg
and
push
dec
and
mov
inc
call
fcoms
in
jg
xchg
sub
adc
out
lret
mov
sub
and
lret
jno
mov
sub
mov
bound
xchg
shll
lret
cmp
or
cmpsl
inc
add
cs
daa
sub
inc
mov
movsl
insb
push
pop
outsl
cmpsl
les
movsb
cmp
mov
adcl
iret
lahf
mov
sub
and
jae
adc
sbb
push
lds
sti
lock
xchg
orb
shl
flds
lods
push
jge
sbb
stos
sahf
mov
adc
jbe
mov
jle
fbstp
mov
arpl
mov
into
jno
inc
jo
sub
imul
and
jns
shlb
pop
mov
lds
xchg
jns
pop
xchg
je
outsl
sub
test
test
data16
sub
mov
out
fldcw
cwtl
inc
pop
pop
stos
mov
adc
add
mov
push
jnp
out
sti
mov
les
adc
es
push
repz
sbb
outsb
test
jl
sub
movl
int3
or
inc
mov
sbb
mov
inc
lods
outsl
pusha
lds
in
das
jbe
lods
cmc
movsb
push
push
xchg
cwtl
lret
push
sbb
xchg
push
movsl
xchg
mov
xchg
std
faddl
or
inc
jbe
aas
insb
mov
popa
aad
data16
lahf
sbb
mov
insl
pop
sub
add
and
dec
js
imul
xchg
fsubrs
mov
inc
adc
mov
mov
sbb
pop
jl
stc
mov
popf
cwtl
stos
call
les
cs
cltd
add
int3
sub
inc
dec
hlt
cwtl
and
pushf
icebp
sub
adc
adc
or
push
dec
dec
in
mov
dec
pop
push
jp
mov
jecxz
push
jo
mov
adc
jg
xlat
or
std
xor
stos
fwait
dec
lahf
loope
ja
imul
mov
shll
nop
test
sub
sahf
push
inc
mov
mov
sub
addr16
sub
sub
sub
cltd
bound
ljmp
cltd
pop
sub
cli
inc
jg
push
out
popf
jp
add
dec
sub
loope
adc
mov
bound
cmc
mov
lods
test
ret
jbe
push
cwtl
movsb
cmpsb
pop
lret
pop
push
stc
clc
mov
or
repz
dec
add
mov
add
repnz
lret
cmpb
mov
nop
loop
popf
in
rcl
nop
lea
mov
inc
out
lds
fisubrl
leave
dec
add
imul
add
push
push
xchg
push
ret
in
sbb
mov
xlat
test
xchg
hlt
inc
fdivrl
mov
inc
pop
xchg
or
sub
mov
popf
jo
test
mov
shrl
add
loop
mov
cmp
rorl
cmpsl
jecxz
cmpsb
push
dec
pop
out
cmp
test
push
pop
insl
xchg
fdivs
pop
adc
xchg
les
lea
inc
iret
je
pop
cmp
xchg
pushf
sbb
testl
out
jnp
push
cltd
sti
lcall
repz
xchg
sub
pop
cmp
push
xlat
cmp
in
rorl
cltd
xor
jg
push
or
pop
cmp
sbb
inc
insb
idiv
mov
addps
mov
cmp
add
in
push
loop
push
push
scas
cmc
lods
je
and
or
int
mov
cmp
xchg
ficompl
fimull
fsub
cld
jmp
inc
push
enter
or
push
out
in
or
das
ja
das
fidivs
add
cltd
add
mov
fs
rorl
es
jg
repz
aaa
repnz
dec
cltd
cmp
inc
scas
lret
sub
push
insl
call
jnp
imul
aam
inc
fucomi
add
dec
inc
fldt
leave
movsl
xorl
jne
test
jecxz
cmp
dec
out
loope
push
mov
pop
or
insl
sub
lahf
rcrl
push
cld
lock
leave
or
and
data16
repnz
fwait
clc
push
adc
sub
int
inc
xor
sahf
pop
adc
pop
push
jb
repz
or
out
xchg
pusha
daa
and
pop
fcmove
push
rolb
bound
dec
jecxz
lcall
xlat
sub
jp
cwtl
cs
movb
ja
outsl
cmp
cwtl
pop
mov
daa
addl
out
push
jb
inc
lret
jge
mov
je
jns
repnz
int3
pop
push
ret
outsl
mov
les
adc
fmul
mov
fwait
xchg
push
stc
aad
mov
das
cmp
scas
push
push
inc
mov
insl
add
arpl
inc
in
xor
mov
xchg
mov
icebp
dec
les
cmp
repz
mov
inc
mov
in
shll
pushf
fwait
pop
push
and
outsl
dec
push
cmp
repz
popfw
sbb
dec
mov
mov
cmp
cmc
mov
or
mov
mov
sbb
xchg
mov
pop
arpl
mov
clc
lcall
sahf
rep
popw
cmp
int
dec
iret
inc
cmp
xor
ss
cwtl
mov
and
sub
mov
xchg
cwtl
rorb
dec
popa
inc
add
sbb
and
xchg
and
pop
push
xchg
mov
cmpsb
mov
push
xchg
push
lret
dec
pop
aaa
shrb
pop
sub
xchg
dec
sbb
pop
jmp
mov
ret
xchg
xchg
repz
and
repz
inc
or
fs
adc
call
shll
adc
fimuls
jp
test
add
mov
outsl
cmp
jmp
popa
ficompl
movsl
roll
lret
dec
adc
sub
push
add
xor
mov
inc
cmpsb
pop
mov
cmpsb
inc
ja
movaps
rcll
outsl
mov
rclb
rorb
pop
xor
sbb
mov
shrb
inc
sub
lods
cmp
inc
clc
int3
loopne
popf
test
xchg
push
aad
sahf
arpl
push
jo
test
lea
mov
pusha
mov
xchg
sub
rcll
loope
int
repnz
add
xor
sub
cmp
fmull
pushf
cmp
cmp
roll
mov
cltd
mov
pop
out
addb
ret
out
rclb
mov
lret
push
mov
mov
push
clc
idivl
add
add
aaa
daa
push
jno
sub
mov
or
loopne
rolb
inc
xchg
leave
and
fldt
sub
fstps
lods
push
xchg
or
lea
sub
adc
jnp
shl
xor
in
je
lods
pop
jo
sbb
dec
pop
loop
mov
js
inc
cmc
rolb
mov
adc
inc
aam
push
sbb
mov
adc
mov
mov
stos
cmpsl
fmuls
mov
jb
shll
or
popa
dec
sub
xchg
mov
fwait
xchg
or
sahf
popa
int3
inc
adcl
jbe
in
das
test
xchg
sbb
es
jno
pop
xchg
push
test
sbbl
lods
dec
lods
mov
test
push
push
lret
fisttps
sbb
add
test
xor
or
lahf
insl
push
mov
in
repz
pop
xor
and
rcrb
dec
push
std
cmp
adc
ss
test
popf
aad
jnp
sub
dec
dec
mov
pop
fnsave
jae
pop
mov
dec
jl
fsub
xchg
sbb
push
dec
sub
out
fisubs
or
shll
mov
outsl
popf
push
insl
mov
insl
mov
jl
outsb
cmpsl
dec
daa
jne
arpl
xchg
xlat
aad
stos
pushf
test
inc
mov
cli
lahf
pavgb
out
mov
jge
push
push
test
sbb
push
sub
aam
fnstsw
inc
pop
inc
mov
bound
incb
jnp
iret
scas
jae
dec
int3
jne
sarb
clc
adc
xlat
sub
sti
mov
xchg
inc
inc
xorb
cmp
push
xchg
and
popf
adc
dec
xor
adc
inc
jne
movsb
js
sub
mov
xor
push
push
pop
inc
inc
ret
leave
sub
adc
mov
add
movsl
daa
das
imul
outsb
inc
ret
imul
fsubrl
imul
in
mov
sub
inc
outsl
adc
xchg
add
shlb
push
fisubs
and
or
fwait
lock
xchg
cli
shrl
and
arpl
in
mov
dec
xchg
pusha
inc
mov
jbe
sub
pop
inc
js
mov
test
pop
popf
lods
sar
add
gs
and
scas
add
mov
pop
jmp
mov
loope
dec
and
xor
xor
xor
pop
fs
sub
mov
repz
fstps
aam
icebp
test
jl
ja
rep
jp
cmp
nop
lcall
push
lahf
aas
out
push
sarb
outsb
lret
and
rorb
inc
inc
arpl
add
xchg
lahf
rclb
inc
movsb
sub
push
fsubrp
and
es
lods
mov
mov
mov
nop
in
cmpb
push
subb
pop
adc
insb
pushf
xor
ffreep
inc
or
in
in
ss
and
cmpsb
dec
push
aam
aad
sub
in
test
insl
das
mov
insb
sbb
mov
cmp
mov
arpl
and
pop
jae
and
and
nop
lcall
mov
imul
rolb
sub
push
in
and
arpl
dec
mov
out
or
fstpt
pop
sub
lcall
cmp
xchg
insl
pop
jmp
mull
xchg
sahf
test
xchg
fwait
repnz
mov
mov
in
or
mov
xchg
icebp
push
mov
jne
add
cmp
push
sbb
jno
lret
mov
sbb
aad
scas
insl
les
gs
sub
add
sbb
mov
int
sahf
cmp
ret
rolb
clc
push
mov
movsb
popf
sub
add
pop
ljmp
es
je
inc
filds
int3
shrb
cmp
shrl
stos
inc
out
cmpsb
faddl
push
cmp
jmp
xchg
insl
dec
adc
jg
lahf
push
in
sbb
and
mov
fs
cld
idivl
adc
xchg
jp
bound
and
ljmp
or
popl
fdivrl
jg
mov
aad
inc
push
mov
lods
adc
push
das
ret
inc
cmp
cmp
jbe
andb
test
inc
adc
orl
or
fcoms
lret
repnz
inc
and
pushw
xchg
inc
in
fimull
push
inc
cmp
mov
nop
add
cmc
pop
mov
imul
mov
jns
push
notl
daa
push
jl
sbb
jle
push
jmp
in
cmp
clc
clc
xchg
pop
sub
cltd
sub
sbb
jecxz
xor
lods
ss
or
sub
neg
test
pop
repz
mov
cmp
mov
inc
xchg
test
jae
jnp
pop
inc
xchg
cli
mov
iret
sbb
fs
sub
leave
sarb
xor
js
xor
aaa
push
pop
mov
test
push
jbe
inc
test
jecxz
into
mov
inc
xlat
dec
fndisi(8087
lods
loopne
xchg
call
imul
pop
push
lcall
adc
sbb
mov
outsb
jl
ja
test
fnsave
jmp
xor
push
int
adcb
xchg
sub
pop
sub
cwtl
loope
or
mov
push
jb
and
add
mov
push
add
pop
pop
jnp
fistpl
or
mov
xchg
adc
and
and
jge
dec
lock
into
lahf
cld
cmpsl
into
mov
nop
insb
cmp
js
dec
movsb
loope
imul
leave
jg
push
into
dec
push
aaa
pop
hlt
sbb
dec
lock
ljmp
test
mov
shll
scas
arpl
sarl
push
imul
push
pop
fcmovb
jl
sbb
fildl
sbb
loopne
push
loopne
imul
sbb
addr16
repnz
mov
lods
jb
add
mov
icebp
stos
insl
push
pop
loopne
mov
mov
cmpsb
pusha
fs
aas
xchg
add
scas
push
inc
xlat
mov
das
sahf
popf
out
push
jne
ret
mov
pop
cmp
js
and
imul
and
sbb
xchg
cmc
xor
repz
out
add
and
lds
fsub
sbb
push
inc
orl
add
pushf
or
sub
push
aam
clc
stos
jl
mov
cmp
push
fsubl
es
ja
sbb
cmp
andb
dec
inc
rcrb
xchg
mov
mov
pop
addr16
or
mov
pop
dec
outsl
pop
lea
scas
shl
clc
sahf
sub
stos
std
fcmovu
mov
sub
fldt
sub
dec
xchg
and
clc
inc
pusha
inc
arpl
pop
repnz
mov
mov
inc
loopne
mov
scas
sub
pop
dec
fs
scas
lret
jae
jne
mov
xchg
push
fidivl
push
sub
in
mov
adc
dec
inc
clc
lret
jo
mov
out
inc
aam
cmp
sub
in
stc
clc
mov
mov
sub
in
jb
int3
pop
jl
push
sub
jle
ljmp
jp
and
and
je
sbb
push
sub
data16
cs
adc
mov
stc
adc
inc
pop
adc
clc
ds
insb
cmp
mov
aas
mov
mov
enter
jno
mov
mov
in
scas
inc
and
dec
xchg
iret
leave
dec
cmp
stos
ret
or
ss
jmp
inc
rcll
xchg
sub
lret
pop
std
push
into
std
and
sbb
push
bound
add
xor
lea
jae
loopne
scas
dec
jne
jmp
pop
fistpll
das
fstpl
mov
leave
mov
mull
sub
push
out
sbb
push
arpl
push
adc
call
mov
es
andl
mov
jnp
stos
fwait
inc
cmp
stc
xchg
shll
sahf
and
nop
or
ret
sub
imul
stos
jmp
cmp
or
dec
inc
pop
imul
sbb
bound
lds
hlt
add
mov
or
clc
xor
pop
inc
insb
lret
adc
inc
sub
adc
add
mov
xchg
int3
andb
sub
out
add
mov
fistps
testb
iret
into
jecxz
xchg
enter
xchg
rolb
bound
jl
mov
test
dec
mov
adc
dec
in
jbe
out
push
inc
inc
and
add
call
jnp
cmp
add
inc
mov
push
and
sbb
mov
aam
sbb
inc
dec
jae
and
in
sub
mov
mov
aam
clc
xor
es
lds
outsl
test
nop
test
xor
cmp
int
shrb
shrb
push
inc
mov
popa
jmp
mov
mov
push
cmpsb
push
dec
cld
push
or
mov
push
mov
dec
testl
jmp
mov
add
fcomps
dec
fadds
loopne
push
cmc
aam
dec
add
int3
dec
sarb
adc
cmp
and
iret
add
ror
push
adc
mov
add
int3
xchg
cmp
insb
into
push
pop
ss
inc
jmp
test
cmp
cmp
imul
push
push
sbb
cli
int3
mov
xchg
ja
outsb
cmp
cmp
sbb
sub
fmuls
xorb
lret
fs
xor
sbb
fdivrs
push
fdivp
imul
jno
mov
gs
into
jb
mov
mov
cmp
dec
mov
cmp
into
vpshlb
int
sbb
mov
dec
outsb
cmpsl
imul
aad
cs
push
es
ret
dec
dec
jno
in
in
or
shl
into
rcr
cmp
imul
lods
insl
call
and
sbb
jg
cmpsl
and
in
xor
mov
inc
in
stos
jns
cmp
add
rclb
dec
pop
shlb
in
xchg
mov
call
shl
add
sub
and
cmp
adc
clc
dec
or
sbb
outsb
test
mov
shrl
cmp
jl
jge
rcl
fwait
mov
into
clc
jl
add
mov
lret
pop
inc
fdivl
dec
sub
inc
inc
test
fwait
xor
jmp
push
push
lret
pop
sti
pop
sub
sbb
push
ss
in
pop
push
sbb
or
adc
mov
mov
mov
xor
sub
pusha
inc
repnz
pop
sbb
dec
xlat
sbb
inc
aad
aad
fnstenv
addr16
cli
push
pusha
adc
into
jnp
jno
aam
cmp
xchg
mov
jge
lods
movsl
aaa
push
std
pop
xorl
inc
mov
add
mov
shrb
arpl
cmp
inc
divb
fwait
mov
test
pop
pusha
iret
jae
sub
inc
mov
cmp
push
mov
and
jnp
and
nop
xor
insl
shl
or
andb
into
xor
add
xor
aad
mov
mov
xor
lcall
cmp
or
test
cmp
cmp
daa
mov
mov
sub
jno
mov
or
rol
inc
inc
andl
movsl
and
fcomip
mov
sbb
mov
rcll
xchg
mov
jl
mov
stos
daa
push
jbe
jno
push
enter
scas
test
lret
xchg
inc
push
dec
jg
imul
mulb
sbb
cmovns
sub
xchg
mov
sub
and
inc
xor
sbb
push
lods
hlt
cmpsb
fadd
and
and
or
xchg
push
pop
xchg
mov
in
sub
cli
call
test
add
push
mov
insl
cmp
mov
imul
cmp
ret
jg
xor
stc
and
ret
lds
out
into
cmp
inc
iret
push
ja
xchg
fstpl
and
aad
adc
pop
jno
insb
and
outsb
cli
addr16
inc
push
test
stos
pop
add
repnz
dec
xchg
subb
loopne
xor
lock
push
mov
dec
outsb
xor
jp
xor
in
mov
sub
mov
clc
push
push
jl
aaa
jbe
pop
ds
xor
daa
push
pusha
decb
push
mov
adc
dec
mov
ss
cmp
xor
adc
pop
dec
or
cmp
adc
push
jmp
fldl2e
in
sub
cwtl
xor
or
xor
dec
imul
js
leave
add
dec
mov
mov
adc
push
xchg
jl
movsl
int3
pop
and
out
mov
lods
jb
and
sbb
adc
cmc
xchg
cli
lds
pop
loopne
xlat
ficoms
idivb
loope
popf
fiadds
push
test
xchg
sbb
sbb
jns
inc
jb
jge
xchg
cmc
dec
lret
cmp
lahf
das
clc
sub
xchg
push
sub
lds
arpl
fnstenv
outsl
jl
rcl
cmp
test
stc
shrb
fistpll
add
fwait
int3
cmpsb
das
inc
lcall
pop
cmova
lock
lahf
je
lret
cltd
inc
pop
mov
stc
or
out
jmp
mov
jg
cmpsb
sahf
xchg
push
jecxz
jp
and
adc
test
movsl
fcomip
in
insl
inc
pop
pusha
gs
lret
movl
pop
jg
call
jl
insl
mov
add
insb
rcll
push
cmp
in
cltd
and
pop
pop
dec
cld
pop
addr16
dec
data16
xor
cwtl
sub
cmpsl
pushf
push
mov
rcrb
test
dec
jne
sbb
movsb
dec
xchg
add
sub
sbb
js
inc
xchg
sub
jl
in
cmp
cmpsb
dec
hlt
xor
mov
test
test
iret
imul
movsb
lea
sub
lret
aam
scas
pop
sbb
xchg
xor
pop
push
fstl
arpl
adc
icebp
fstpt
test
mov
mov
inc
test
jbe
sbbb
inc
rolb
sub
cmp
push
jno
dec
cmpsb
sahf
gs
mov
inc
push
loope
in
push
xor
jo
shl
inc
iret
jne
mov
in
jg
mov
cli
mov
hlt
or
push
ret
dec
inc
push
mov
adc
jnp
sarb
mov
mov
fsubl
dec
sti
fucomip
cltd
movsl
and
xor
pushf
lcall
mov
lods
lret
outsl
mov
loope
nop
jbe
pushf
repz
js
adc
fidivs
test
pop
ja
pop
scas
or
lcall
cmpsl
cmp
mov
or
ja
sarl
jp
iret
add
cmp
lcall
lods
xchg
dec
xchg
loop
mov
rorb
and
test
or
pop
and
xor
push
cmc
cmp
movsb
mov
cmp
ret
inc
les
sub
jb
je
jnp
push
lods
in
test
imul
xor
ficompl
xchg
xor
push
jge
shrb
jae
cli
dec
aad
push
lret
and
xor
inc
ret
imul
jae
jmp
data16
inc
ds
push
dec
push
jb
test
sub
pop
xchg
addb
adcl
in
xchg
notl
mov
gs
mov
cmp
imul
jbe
push
jno
nop
jns
mov
add
jo
mov
xchg
das
mov
xor
in
scas
mov
fwait
test
push
enter
cmp
cs
cmp
fnsave
inc
cmc
lahf
or
cmp
stc
jno
push
xchg
mov
or
loope
add
inc
mov
mov
int
mov
mov
icebp
hlt
in
cmpsb
out
orl
add
enter
xchg
aad
js
scas
in
es
fistpl
push
aaa
repz
mov
rcrb
mov
sbb
mov
mov
js
arpl
lods
les
and
ret
pop
add
ja
stos
movsl
out
enter
fidivrs
lret
lds
loopne
xchg
add
dec
sbb
das
data16
sub
lret
push
imul
jmp
out
jmp
gs
pop
lahf
pop
jmp
lds
jns
jge
loopne
mov
sub
dec
pop
or
in
or
popa
insl
shll
cld
test
push
or
adc
ds
mov
xchg
adc
sub
mov
sbb
mov
pop
xchg
shll
sub
jnp
fdivr
cmp
ret
xchg
pop
push
mov
test
inc
imul
gs
and
dec
repnz
mov
pop
inc
jo
adc
sbb
dec
mov
inc
in
stos
nop
call
clc
jmp
xchg
push
adc
xor
popa
inc
flds
pop
outsl
push
mov
xorl
mov
mov
in
xor
rolb
test
fidivrl
pusha
xchg
mov
pop
mov
int3
push
cmp
andl
cmpsb
xor
dec
in
sub
inc
push
xchg
sbb
out
aaa
push
out
std
push
data16
cmp
mov
mov
mov
arpl
jmp
js
push
cmp
sbb
daa
out
and
adc
test
or
loope
push
and
fldt
push
ds
adc
sbb
xor
loop
xorb
adc
les
les
pop
mov
leave
loope
nop
lds
fwait
popf
int
outsb
xchg
in
jne
ljmp
jmp
jb
lret
jecxz
bound
mov
cmp
hlt
xchg
and
push
aad
sbb
aaa
inc
pop
movl
inc
push
mov
inc
call
roll
xor
jnp
scas
push
jb
adc
fcmovne
in
xor
loop
mov
pop
mov
test
adc
inc
pop
les
or
mov
mov
into
mov
xchg
sbb
sarb
push
push
mov
inc
and
inc
jo
dec
inc
lea
mov
into
sub
iret
insl
test
push
loope
xor
mov
adc
imul
xlat
add
xchg
incl
cmp
pop
jle
push
sti
sub
mov
jl
in
test
rcrl
pop
out
xchg
dec
cmp
inc
ljmp
or
lock
xchg
push
add
scas
xchg
mov
xchg
sub
in
scas
rcrb
jl
iret
push
mov
sarl
addr16
xor
push
xchg
or
add
xchg
into
add
sub
xlat
mov
outsb
mov
inc
adcb
mov
xor
es
add
or
lods
mov
cld
out
lea
dec
cmp
xor
aas
fldcw
mov
add
push
sahf
inc
stc
push
js
adc
adc
and
popf
and
xchg
insl
inc
pop
push
lds
jge
scas
loop
cmp
movsl
push
repz
jle
dec
daa
jae
call
or
add
repnz
push
pop
sahf
ss
stos
lds
push
and
outsb
or
dec
lock
rorl
inc
inc
add
dec
cltd
or
or
ds
xchg
sti
daa
or
mov
push
aaa
scas
cwtl
lea
jns
fwait
in
push
fisubrl
cli
sbb
push
cmc
mov
mov
ret
mov
inc
sub
pop
jb
lret
mov
jmp
arpl
fisubrl
cs
shlb
jecxz
scas
stc
dec
and
sbb
or
mov
push
xor
xor
ret
cltd
sbb
jnp
repz
mov
pop
adc
repz
pop
xchg
cmpsb
fwait
mov
mov
jo
mov
sbb
mov
faddp
adc
jl
inc
rcrl
inc
cltd
jnp
out
cs
adc
fs
jg
adc
es
popa
sahf
sbb
fdivrl
xchg
jo
test
adc
adc
jbe
inc
sbb
mov
add
jo
sbb
jg
or
mov
push
xchg
movhps
psubsw
xchg
push
pushf
incb
dec
cwtl
jnp
in
jno
cmp
out
insl
adcb
push
mov
pop
xchg
test
push
outsb
push
push
fimull
fcmovnb
outsl
sbb
mov
adc
pop
sub
shll
sbb
mov
in
cld
into
xchg
aaa
lea
mov
loopne
sbb
out
idiv
fidivl
ret
mov
int
push
xchg
mov
push
pop
hlt
data16
pop
push
repnz
dec
fidivs
and
call
outsl
jae
jmp
in
cmp
int3
and
dec
inc
test
pop
outsl
scas
add
jnp
fcmove
fisttpll
mov
loop
in
dec
push
popf
hlt
pop
add
push
adc
sbb
adc
xchg
push
mov
adc
mov
int3
clc
push
mov
inc
jo
cmpsb
lods
jnp
movsl
ja
rcrb
test
clc
shlb
push
jns
jo
dec
push
in
pop
xor
jg
aad
imul
je
sub
movsl
push
xor
ret
xchg
jo
cmp
lcall
pop
add
xor
cmpsb
adc
bound
inc
mov
jno
das
rclb
rorb
push
lds
aaa
nop
or
out
and
jl
movsl
test
jno
pop
push
into
or
clc
pop
push
cmpsl
add
jle
inc
lock
stc
inc
add
ret
mov
jecxz
lods
pop
addb
or
jns
adc
inc
or
dec
or
out
push
cltd
dec
dec
dec
call
ja
std
cmp
mov
add
in
mov
jo
jns
jns
adcl
ret
enter
jmp
clc
xor
adc
out
movsb
rolb
add
shrb
mull
or
and
into
rcll
or
nop
cmp
push
stos
cmp
neg
int3
arpl
sahf
mov
add
jnp
and
mov
dec
and
shlb
xor
in
add
scas
clc
pusha
jmp
lahf
mov
push
lahf
pop
cmp
jp
and
stc
and
or
xchg
jp
testl
js
and
out
xchg
mov
popa
icebp
test
or
loopne
jno
mov
mov
sbb
test
movsb
push
jecxz
repnz
out
pop
sahf
sub
and
inc
push
adc
jge
into
fadds
dec
loop
test
in
sub
dec
ret
frndint
push
fwait
jbe
leave
cmp
insl
inc
xor
or
xchg
sbbb
xchg
mov
and
push
lods
das
and
fwait
gs
fisttpll
pop
inc
scas
das
pop
sbb
pop
rcll
jge
add
int
jne
fdivrl
mov
xchg
aam
xchg
stc
cmp
shr
push
pop
rol
xor
popa
test
gs
and
pop
pushf
iret
mov
loop
dec
sbb
and
jle
outsb
popa
movsl
fsubrs
sti
stos
lcall
mov
xchg
push
clc
sbb
mov
out
dec
sbb
xchg
sub
add
bound
sti
mov
into
mov
pop
cmp
adc
cmp
imul
jmp
stos
cmc
mov
les
pop
xor
pop
stc
jmp
test
aam
push
fsubl
lds
mov
sub
xchg
ret
clc
inc
xor
cmp
sub
sbb
xchg
dec
dec
jmp
pushf
subl
lea
xchg
mov
cmpsb
mov
stos
lds
add
iret
cli
jbe
or
aam
std
pop
push
mov
mov
lret
bound
and
sbb
lcall
jp
inc
xchg
dec
adc
pop
jecxz
in
lcall
lock
jbe
and
pop
ret
cld
arpl
push
sbb
sbb
loopne
enter
cltd
in
in
shlb
add
dec
sbb
fwait
jecxz
inc
imul
push
mov
loop
ds
cmp
cmpsl
stos
inc
jo
pop
pop
jmp
mov
addr16
add
jl
fs
divb
inc
out
pop
les
sbb
jl
and
hlt
das
mov
aam
mov
xchg
mov
mov
sub
cwtl
movsl
jl
xchg
mov
out
ss
lock
movsl
dec
out
mov
cmp
test
fidivrl
jle
gs
mov
mov
inc
pop
ret
test
scas
xor
lret
jb
std
add
mov
jne
or
cmp
mov
scas
das
aad
mov
or
test
in
in
push
test
lcall
jne
imul
loope
push
sahf
data16
pop
adc
insb
jle
cltd
xchg
xchg
push
loop
or
cmc
jg
dec
mov
loopne
cmpsb
aas
cli
dec
adc
shrl
mov
arpl
sbb
inc
insl
jb
adc
sbb
jl
jo
push
mov
incb
sbb
xchg
es
sub
rcrl
or
cs
sub
inc
jecxz,pn
jbe
stos
fdivrs
leave
add
add
jno
adc
xor
xor
iret
das
clc
dec
dec
adc
mov
ja
shll
cmp
mov
and
rorl
outsb
pop
addb
test
xchg
int
mov
fisttpll
and
shlb
scas
pop
xor
ds
jns
lods
stos
jmp
xchg
cld
mov
movsb
outsb
dec
andb
sbb
scas
inc
popa
add
and
repz
mov
inc
ss
outsl
cmp
push
pop
bound
cli
dec
xchg
int
loope
roll
and
sub
mov
sbb
ss
out
and
lret
and
xor
call
pop
cmp
loop
mov
mov
test
and
mov
lcall
sbb
jl
mov
rcr
jmp
adc
dec
xchg
cs
in
lock
icebp
test
out
lods
lret
out
inc
add
lds
cli
cmp
push
sbb
es
cmp
and
sub
je
mov
cmp
call
pop
xchg
mov
mov
add
and
cmp
mov
jnp
lds
mov
addr16
sbb
xor
fisubrs
sbb
mov
data16
or
xor
cmp
pop
imul
push
filds
and
or
das
dec
gs
push
testl
leave
push
adc
pop
and
push
cld
ret
push
push
loop
jl
mov
aaa
in
xchg
xor
into
sub
andl
adc
sbb
pop
cld
in
mov
mov
loope
add
or
sub
cmp
xor
adc
adc
xchg
mov
xchg
lcall
inc
lds
insb
jae
cmpb
stos
rolb
xor
pop
lock
xchg
pop
ja
arpl
and
je
mov
or
rolb
inc
mov
lcall
push
xchg
mov
xor
inc
xchg
mov
loope
jle
cmp
mov
mov
and
xor
loop
xchg
cmp
aad
sbb
lret
push
pop
lret
mov
scas
in
ja
inc
fcoml
outsb
xchg
addb
sahf
sub
and
lret
adc
dec
hlt
mov
test
add
or
sbb
pop
test
repz
mov
loop
jae
xchg
xchg
jp
stc
sarl
cwtl
loopne
jbe
enter
int3
mov
in
ret
and
lcall
into
dec
frstor
cld
aam
mov
sub
aaa
scas
shl
adc
sbb
sub
xor
inc
les
inc
pop
pop
stos
dec
loopnew
repz
cmp
scas
out
outsb
fsts
je
jl
arpl
adcb
sub
push
insb
js
mov
mov
jl
adc
jnp
aam
and
sbb
mov
les
push
aas
mov
sub
xchg
test
repz
adc
sti
inc
into
test
out
or
mov
jmp
xchg
pop
cltd
jecxz
pushf
add
in
lds
test
mov
icebp
jg
xchg
xchg
icebp
xor
push
outsb
adcl
inc
das
lret
insl
xor
push
push
fidivl
mov
subb
pop
es
pop
insl
rcr
or
je,pt
push
mov
movsb
pop
sbb
xor
sbb
call
popa
cs
push
lock
sbb
pop
sbb
mov
lock
mov
jl
sbb
dec
shl
push
add
mov
fsub
rorl
xor
fs
sub
es
jg
ds
mov
rorb
jg
dec
js
xchg
cmpsl
insb
sub
sub
cmc
aas
ret
jle
adc
mov
in
cwtl
cwtl
cmp
pop
insb
and
aam
push
outsl
dec
push
push
in
mov
lods
lea
and
ljmp
push
xchg
mov
arpl
movsb
or
das
test
inc
bound
push
out
and
xchg
mov
cmp
sbb
or
add
lock
fistpl
pop
mov
pusha
push
jo
imul
int3
jg
repz
or
mov
jmp
je
mov
jg
jb
inc
dec
scas
adc
mov
jnp
rol
push
fcmovu
rcrb
cmp
ss
repnz
testl
adc
dec
push
pusha
adc
xor
push
int
sub
jnp
add
shl
or
inc
mov
movsl
push
cltd
push
movsl
aam
cld
cmpsl
shll
mov
mov
data16
push
jnp
sub
outsb
cmp
adc
scas
fistps
cmp
xchg
jne
iret
mov
lret
insl
add
cld
cwtl
out
jp
ret
incb
xor
daa
mov
mov
in
dec
shlb
stos
adc
out
xchg
fidivs
rolb
jecxz
and
adc
rcr
rorl
push
adc
les
fdivl
mov
data16
dec
cli
jg
sbb
orl
xor
xchg
sub
jge
sub
jmp
xchg
je
cltd
push
gs
xchg
and
add
int3
push
cmp
xchg
push
jnp
in
bound
idivb
inc
inc
scas
xchg
fs
dec
ret
sbb
andb
sahf
xchg
dec
add
cmpb
out
xor
mov
fcmovnu
pop
sbb
leave
ljmp
push
or
mov
fdivr
inc
loopne
sbb
push
ljmp
add
push
push
dec
jecxz
sub
mov
call
iret
add
or
inc
sbb
push
xchg
cmp
mov
mov
aas
mov
aad
pop
mov
xor
punpckhdq
cmp
or
jecxz
nop
xchg
in
add
out
add
leave
cmp
jae
adc
cltd
iret
or
stc
iret
or
pusha
cmp
sbb
arpl
sbb
cmpsl
cli
adc
jle
gs
and
adc
mov
sub
inc
scas
sbb
cmp
frstor
or
mov
jno
shrl
or
test
add
and
out
and
pop
cltd
nop
stos
and
inc
adc
push
mov
std
cmpsl
sub
xchg
imul
and
ret
mov
or
in
pop
ret
jmp
and
or
shlb
mov
mov
add
andl
lods
sub
xor
dec
push
loop
js
pop
xchg
fcom
and
add
push
out
in
mov
lahf
adc
cmc
mov
sti
movsb
jo
or
js
scas
mov
aaa
mov
stos
cmp
sub
sbb
movsb
in
push
inc
aam
or
mov
out
movsb
outsl
and
xor
xchg
add
ja
cmpsl
shlb
lret
pop
adc
jle
and
rorl
aad
inc
jns
leave
mov
pop
mov
pop
aam
inc
add
jg
pop
aaa
add
ret
push
add
test
pusha
sub
ret
fisubs
lea
or
scas
out
sahf
push
push
rcll
cld
popf
loop
pusha
int3
das
dec
sub
aas
jae
inc
and
or
and
les
sbb
adc
idiv
fs
aad
in
clc
inc
std
adc
or
data16
loopne
mov
xchg
fs
dec
fnstsw
sti
cmpsb
jge
xchg
jbe
lahf
and
xor
push
mov
cltd
movsl
xchg
ficoms
xor
jbe
xchg
call
fcmovbe
fldt
inc
daa
adc
and
push
gs
xchg
mov
iret
std
sub
and
fisubs
shll
cmp
or
mov
pop
jo
les
inc
xchg
mov
sahf
add
rol
xchg
sbb
icebp
test
testb
add
stos
lahf
add
test
or
jecxz
leave
xadd
test
mov
mov
ss
mov
mov
sbb
lods
or
and
repnz
rcll
mov
inc
push
nop
add
ret
xchg
scas
and
inc
iret
stc
incl
imul
xor
push
jnp
jb
dec
mov
push
iret
nop
inc
lret
popf
adc
adc
insb
stos
mov
stos
inc
jne
mov
jp
mov
inc
inc
gs
push
lret
cld
rorl
ud2
pop
xchg
lock
mov
sarl
in
mov
rcrb
aad
lock
dec
mov
mov
lods
adc
inc
gs
jecxz
and
xchg
pop
pusha
insb
pop
adc
jbe
int3
das
ret
fsub
sti
cmpsl
mov
jns
xorb
fldenv
pop
jle
mov
xor
scas
rcl
mov
add
sbb
orb
and
hlt
inc
xor
nop
lock
in
repz
xor
xor
loopne
lods
in
hlt
mov
cmp
push
add
xor
das
dec
lret
xor
aad
dec
add
aam
jmp
lods
fs
fldcw
mov
icebp
sti
xchg
loope
pop
add
or
mov
sbb
fstp
push
jge
movsb
int3
pop
push
push
sti
fdivl
xlat
sahf
dec
ljmp
sbb
std
sub
cmp
lds
in
mov
xchg
push
cmc
fstp
or
aad
pushf
rclb
fs
insl
xchg
adc
ret
add
adc
out
test
testl
add
rcl
cmpsl
popf
xchg
div
stos
pop
enter
notb
jbe
mov
mov
lea
pop
jno
mov
fcmovb
fcoms
inc
jmp
dec
aas
and
dec
loope
xor
jnp
cld
shlb
cmp
mov
fwait
push
lret
mov
cmp
idivl
mov
adc
js
test
add
mov
aam
cmp
ljmp
fstpl
repz
movsl
iret
pop
and
pop
jo
push
sub
in
pop
cmp
imul
jle
cmpl
and
push
mov
mov
cld
jge
inc
pop
mov
add
ja
int3
andl
mov
fldt
jl
pop
push
outsl
int3
jmp
jge
scas
cmp
lds
lods
mov
jnp
mov
add
jo
movsl
fildll
or
add
enter
bndstx
cmp
push
dec
hlt
push
add
push
gs
outsl
test
mov
out
mov
pop
pop
mov
divb
in
adc
jo
adcl
sarl
cmp
imul
xor
int3
mov
cmp
mov
flds
jecxz
dec
out
lcall
pop
push
or
jne
in
dec
push
rclb
pusha
adc
addr16
adcb
popf
sahf
pop
sbb
jmp
repnz
js
cmp
imul
scas
jg
push
dec
shlb
mov
stos
hlt
movsl
cld
inc
mov
adc
rorb
adc
dec
push
scas
popa
stos
mov
jecxz
sub
mov
add
sbb
or
mov
addr16
push
ss
ret
push
dec
pushf
or
imul
repnz
fbstp
or
test
push
sbb
aam
dec
sub
mov
out
mov
xchg
or
aam
in
or
push
fistl
inc
test
hlt
outsl
mov
scas
in
inc
push
push
dec
arpl
pop
xor
nop
jne
mov
les
insl
das
clc
mul
push
adc
pop
jecxz
scas
mov
jg
fcmovne
xchg
add
inc
in
mov
cmp
fadds
pushf
inc
jge
cmp
adc
cmp
mov
loope
imul
push
lcall
jbe
testl
enter
lahf
fadds
cmc
int
test
fdivl
jne
jl
xor
inc
loopne
jb
mov
cltd
cwtl
xor
xor
inc
lods
and
sub
jmp
repnz
lock
push
testb
test
dec
xor
sbb
xor
loope
dec
test
movsb
cli
push
inc
pop
mov
lret
and
call
orl
xlat
sahf
mov
je
inc
cmp
sub
mov
inc
mov
movsb
ljmp
and
ss
push
mov
dec
inc
pop
in
movsb
or
arpl
cmp
xchg
sub
cmp
pop
pop
adc
cmp
loopne
mull
arpl
sbb
push
nop
mov
inc
les
mov
addr16
ret
daa
sbb
xor
andl
pushf
add
aad
xlat
rcr
mov
aad
vmwrite
hlt
and
mov
mov
inc
ja
fwait
ret
or
and
dec
repz
add
jle
jno
jb
dec
xchg
and
or
add
mov
stos
mov
xor
xor
js
and
push
adc
jnp
xchg
ficompl
out
mov
daa
xchg
dec
jae
js
sti
scas
adcb
cli
stc
push
push
jge
add
push
ja
pop
cltd
out
fs
add
sahf
xchg
inc
decb
sbb
lret
test
xchg
test
ret
xchg
rcrb
imul
movsl
add
repnz
cmp
push
in
sbb
scas
jo
cmp
cmpsl
mov
out
xlat
out
fcmovnu
scas
fldcw
dec
arpl
fdiv
sbb
inc
cmp
fldl
fwait
aas
and
or
xchg
fwait
mov
fcomps
push
mov
ljmp
cmp
popa
mov
mov
sub
stos
insl
call
repnz
xchg
jmp
pop
push
js
repz
loop
ficoms
xor
mov
push
out
sbb
test
mov
push
loop
jl
andl
js
adc
dec
divb
fcmovnu
mov
test
jbe
aas
xor
in
outsl
cld
push
clc
mov
lahf
enter
pop
popa
mov
lods
pop
shll
mov
scas
aam
sbbl
int
ret
cld
dec
xchg
push
lahf
mov
out
mov
jno
in
cmpl
mov
rol
adc
decl
inc
adc
mov
mov
inc
lods
ja
call
cltd
pushf
jae
leave
ret
daa
cwtl
add
into
test
out
fdivl
pop
mov
xchg
les
fsubl
sahf
mov
pop
faddl
shrl
or
lods
mov
mov
icebp
cmp
mov
test
insl
nop
int
jecxz
cmp
push
pushf
jns
fwait
cmp
push
cmp
jp
mov
add
fistpl
sbb
cmpb
pop
xor
outsb
lods
push
mov
xor
pop
sub
icebp
repnz
int3
aam
and
mov
sub
xor
cmpsl
push
bound
fcompp
mov
add
jge
bound
xchg
pop
sbb
push
lds
or
test
fisttps
cmp
sar
push
xchg
push
out
ljmp
repnz
xor
les
dec
cs
cmpsb
xchg
adcl
fsubrl
push
jg
int
pushf
pop
mov
les
lahf
ja
ljmp
push
arpl
or
notl
mov
inc
pop
out
xchg
cmp
xchg
pop
flds
fwait
adc
adc
stos
lahf
in
pusha
mov
lods
pop
xchg
push
mov
xor
mov
pop
mov
sub
loope
fmull
pop
sarl
cmp
adc
addr16
push
mov
xor
xchg
pop
outsb
repnz
loopne
sub
pop
or
inc
xchg
mov
push
push
dec
rcrb
mov
aad
mov
clc
fldenv
mov
jnp
mov
jge
repnz
dec
stos
xor
lret
daa
es
clc
out
std
xchg
mov
es
sub
mov
sbb
in
cli
mov
mov
and
fimuls
mov
decb
scas
sub
xor
out
in
subb
mov
adc
jge
rclb
shrb
test
in
das
imul
arpl
xor
inc
popf
mov
add
xchg
sbb
xchg
repnz
pop
iret
js
not
arpl
mov
push
cli
sbb
sysret
or
fildl
xchg
sub
lret
push
mov
cmc
mov
dec
mov
add
lahf
mov
jns
lods
adc
sbb
testl
mov
lret
inc
and
pop
add
aad
mov
xchg
xor
insb
mov
mov
push
pop
ss
mov
pop
sbb
mov
out
or
ja
cmp
push
cmp
and
fbld
scas
sbb
and
inc
test
jo
xchg
nop
xchg
lret
push
cmpsl
mov
fcoml
cmc
or
scas
rcll
sub
in
jl,pn
shrb
test
fwait
add
loope
test
adc
dec
sbb
push
adc
cmp
bound
add
pusha
ret
jb
popf
mov
mov
push
push
sub
or
dec
sbb
mov
pop
pop
loope
shll
mov
insl
aam
push
mov
xor
xor
or
or
test
shr
pop
and
push
xchg
in
fdivrl
pop
enter
xchg
cld
inc
pop
loop
int
enter
lret
adc
insl
mov
dec
fisubs
out
stos
cmc
xlat
jno
add
ror
cmp
adc
iret
loop
hlt
add
jnp
fisttps
pop
pop
rcll
into
daa
mov
sarl
xor
subps
lret
pop
cmp
mov
andb
xchg
sbb
adc
loop
into
imul
in
mov
adc
xor
adc
sub
gs
and
jge
push
mov
icebp
mov
cwtl
call
and
xchg
fwait
adc
sub
idiv
leave
jecxz
mov
jl
xor
xchg
test
mov
jae
scas
mov
xlat
mov
sbb
repz
fstpt
xor
leave
or
es
fmul
clc
and
jmp
lcall
jbe
jns
cld
fmul
pop
jne
hlt
jo
xchg
cwtl
pop
and
lds
pusha
dec
mov
mov
cmp
test
test
push
test
mov
outsb
imul
jb
add
dec
movb
adc
imul
ret
sbb
dec
push
inc
je
jmp
nop
and
fmull
jb
pusha
mov
outsb
sbb
in
add
add
in
loop
pop
mov
push
or
add
cmp
jl
adc
aam
stos
pop
xor
mov
inc
xor
xchg
push
mov
int
lock
push
or
add
loop
or
repnz
inc
mov
ja
outsb
sub
pop
pushf
jl
jp
mov
int3
in
mov
jns
xorl
jns
sti
iret
adc
loop
pop
aas
in
in
add
lods
adc
and
aaa
cli
push
sub
dec
mov
lock
sbb
or
add
int3
xlat
jns
adc
insb
outsb
xchg
enter
movsl
add
aaa
test
mov
mov
sbb
mov
xor
jb
pusha
je
xor
aad
dec
cmpsl
outsb
int
lret
sub
mov
cld
adc
lea
dec
mov
rcll
xor
gs
mov
mov
test
sub
add
int3
push
mov
pop
shll
sub
cwtl
xor
dec
push
mov
jge
inc
cwtl
mov
jg
sbb
in
adc
push
loopne
xchg
insl
repnz
test
test
loopne
lods
bound
sar
aas
std
push
negb
test
pop
xor
fscale
pop
in
cmp
jg
clc
lods
int
sub
push
std
test
shrb
push
mov
sbb
lret
inc
xchg
mov
stos
mov
sbb
jl
lret
inc
repz
and
stos
inc
cld
xlat
repnz
movsl
rclb
inc
shlb
mov
mov
pop
inc
xchg
pop
mov
mov
addr16
into
mov
inc
jnp
mov
or
lock
negb
leave
nop
movsb
pusha
jbe
xlat
push
insl
cli
lcall
sub
or
sbb
cmp
add
xchg
bound
std
mov
push
addr16
sti
jg
mov
inc
stos
fisttpll
fcoms
movsl
pop
jae
pop
rcll
aaa
lret
fdivs
lock
aad
in
test
xor
push
add
gs
mov
int
mov
in
loope
push
add
or
je
mov
cmp
repz
xchg
popa
mov
xchg
pop
mov
pmaxsw
rorl
xchg
es
lcall
outsl
mov
mov
xchg
cmc
adc
and
lret
jbe
mov
fsubl
fsubs
das
xchg
sbb
lret
das
and
mov
mov
push
cmp
cmp
xchg
leave
ss
add
stos
je
add
jns
scas
lods
es
js
xor
daa
xor
push
mov
int
test
sub
jno
and
loop
push
and
xchg
in
je,pt
pusha
or
dec
fcomps
fwait
add
inc
les
cwtl
xlat
add
test
mov
sqrtps
mov
sbb
jae
xchg
gs
shlb
adc
mov
sbb
mov
adc
cmp
outsl
sbb
filds
mov
pop
fisubrs
std
and
mov
std
pop
into
fcomp
lods
in
insl
pushf
cmc
fldenv
test
sub
stos
inc
jns
sbb
dec
lcall
cmc
into
stos
js
loop,pn
cli
inc
jmp
sbb
mov
jge
mov
inc
aam
loopne
sub
mov
lock
ss
mov
or
repnz
cwtl
icebp
mov
lea
mov
data16
sub
jns
fldcw
adc
xchg
adc
inc
inc
cmp
xor
add
inc
mov
cmp
fcompl
mov
jae
xchg
xor
or
negb
repnz
inc
stc
inc
lcall
nop
iret
pop
cs
popf
push
adc
cmp
xchg
inc
mov
je
shlb
lret
cs
cmp
std
mul
push
xchg
mov
popa
test
in
jnp
outsl
jmp
incb
or
inc
inc
fnsave
sub
ret
lcall
test
fnsave
jl
sbb
js
hlt
test
mov
jo
aam
push
aad
dec
push
jb
inc
cmp
and
cmp
jle
xor
sub
sub
xchg
dec
js
mov
lret
pop
daa
pop
and
jb
push
inc
mov
jl
push
cwtl
les
xlat
test
cmp
mov
sbb
jecxz
imul
jg
xchg
mov
mov
cld
push
aaa
xchg
das
pop
mov
fcom
mov
lds
push
mov
dec
in
jmp
outsb
push
and
iret
pop
mov
push
sbb
popa
sbb
pop
pop
in
jg
dec
mov
push
shll
imul
jg
pusha
and
test
and
movsl
divl
sub
inc
inc
xchg
test
add
icebp
jle
pop
in
mov
mov
push
mov
push
ja
add
jbe
or
aam
mov
outsb
mov
sti
xchg
xor
sbbb
mov
sub
fdivrp
cwtl
roll
xchg
pop
decb
and
out
shlb
fyl2xp1
cltd
jecxz
cmovg
leave
inc
inc
fisttpl
xor
fstps
xor
cmpl
pop
pop
popa
inc
jmp
add
pushf
addr16
call
jp
outsb
mov
push
out
adc
pop
ss
ret
int
mov
mov
mov
out
push
cld
adc
inc
mov
or
cmp
cs
mov
dec
out
test
sahf
int3
shlb
shlb
lods
mov
repnz
lfs
inc
je
test
dec
and
push
add
lods
lds
xchg
dec
or
xor
sub
fucomp
lods
sbb
mov
in
cli
fwait
rcll
push
lods
xor
outsb
sub
mov
push
mov
pop
pop
pop
sbb
sbb
sub
sub
pop
push
fmull
fmull
xlat
iret
scas
test
stc
adc
mov
ss
push
lods
mov
imul
rorb
adc
js
imul
ja
jne
ffreep
add
stos
inc
call
mov
int3
sub
rorb
xor
stos
lea
aad
mov
mov
ljmp
xor
bnd
jns
mov
cmp
sahf
add
shl
loope
jg
dec
cmp
inc
push
repnz
and
insl
add
clc
xchg
pop
stos
pop
in
aas
aas
fwait
shll
lret
cmp
out
xorb
mov
push
mov
xor
mov
mov
mov
mov
pop
or
xor
mov
stos
out
loopne
je
jecxz
into
lahf
xchg
cwtl
rcrl
mov
enter
inc
sbb
out
mov
fdivl
inc
call
sbb
jne
enter
dec
mov
pusha
mov
jcxz
xchg
mov
adc
inc
test
pop
nop
loop
sbb
cmp
stos
mov
jns
into
cmp
xchg
cmpl
shlb
jl
cmp
sbb
jle
and
bound
fbstp
push
mov
popf
jb
mov
hlt
mov
adc
es
sbb
cli
jo
fcomi
outsl
fsubl
pop
jp
mov
jnp
sub
mov
mov
cmp
insb
pop
sbb
divb
dec
ja
xchg
fdivrp
stos
mov
mov
mov
cmp
ret
jmp
arpl
scas
push
jmp
cmp
femms
gs
mov
add
arpl
popf
ret
sbb
cld
pop
insb
sti
pop
dec
inc
and
push
fwait
inc
mov
lcall
xchg
out
in
lea
pop
xchg
dec
cmpsl
mov
mov
pop
ja
inc
xchg
sbb
dec
negb
popf
cltd
repnz
cmp
jp
sub
inc
mov
lea
repz
adc
and
xlat
imul
hlt
pop
add
cmp
xchg
sub
xchg
adc
lret
shrb
out
inc
fs
js
mov
jns
imul
out
fxam
push
inc
repnz
jns
orl
add
jmp
push
lea
jno
push
dec
aaa
cmpsb
outsb
sarb
ljmp
inc
pop
pusha
mov
inc
addr16
dec
fwait
sbb
jle
xor
and
scas
pop
xchg
je
test
sub
in
jp
mov
mov
pop
add
js
add
push
jne
jmp
dec
add
out
sbb
cmpsl
mov
shll
inc
incl
and
test
sub
mov
fildll
mov
dec
out
pop
inc
and
pop
ret
arpl
sbb
lds
mov
jmp
enter
inc
pop
mov
addr16
jle
add
lods
jno
push
loopne
pushf
mov
fsubrl
gs
cld
inc
in
out
stos
adc
sub
out
sbb
pop
dec
push
in
xor
in
flds
das
jge
int
pushf
enter
mov
push
cmp
or
inc
data16
inc
inc
inc
pop
addb
addr16
sub
xchg
mov
out
movsl
lods
add
out
fnstcw
sbb
mov
sbb
cwtl
clc
in
push
push
sub
into
enter
sbb
inc
hlt
jl
sbb
pop
sbb
rorb
add
outsl
cltd
mov
adc
fildll
out
pop
fisttpl
add
test
and
repz
rcll
pop
movsb
sahf
pop
mov
call
xor
into
dec
in
outsb
add
aas
xlat
mov
pushf
pop
pop
repnz
sub
jge
and
lock
ja
pop
pop
cmpsl
mov
mov
mov
mov
pop
out
scas
daa
cmpsb
sbb
jecxz
jo
cmc
and
sbb
aad
dec
lret
lcall
in
aas
sub
push
push
mov
movl
pop
add
inc
sti
mov
outsb
mov
jbe
out
sbb
sub
adc
ret
adc
mov
iret
xor
fcoms
fisttpl
add
mov
add
mov
lret
lahf
ljmp
push
add
int
xor
jbe
call
jecxz
jmp
lods
inc
pushl
shlb
test
rcrl
sbb
jecxz
js
nop
pop
or
gs
test
addr16
int3
xor
in
xchg
mov
inc
inc
jge
fwait
scas
sub
jle
xor
cli
mov
std
jecxz
outsl
or
pop
jg
cmp
xchg
sbb
inc
inc
mov
fs
cmp
movsb
sub
or
lds
mov
jle
leave
and
incl
adc
stos
loope
out
push
push
adc
cmc
cmp
repz
ret
inc
inc
and
fisubl
cmc
cli
push
outsb
push
imul
cmp
or
xor
mov
iret
xchg
adc
hlt
mov
popf
push
shl
mov
js
rep
aam
lods
push
icebp
test
dec
inc
jmp
or
push
or
ss
adcb
mov
call
adc
mov
lcall
xchg
push
out
xor
in
int3
addr16
mov
lahf
loop
push
jbe
int
mov
xlat
in
andb
mov
xor
mov
enter
sbb
push
fsubl
leave
jb
popa
or
lret
out
xchg
fs
rcr
jle
inc
idivl
ljmp
lods
pop
adc
mov
push
pcmpeqw
fs
rcll
dec
movsb
clc
inc
repz
dec
dec
pop
push
push
stos
cmp
scas
sbb
jp
popf
jb
stos
push
aam
in
pop
cmp
imul
xchg
jb
lahf
adc
pop
sbb
insb
ret
jl
out
enter
fdivr
in
jmp
pop
cs
add
sub
mov
cs
cmpsl
adc
ret
in
jmp
cli
ja
adc
out
fcomps
jle
clc
mov
or
ret
iret
mov
js
test
fwait
xchg
push
popf
dec
adc
loop
jo
cmp
xor
lock
push
sbb
xlat
mov
lds
cmp
pop
push
jns
popa
pushl
int
inc
aad
hlt
push
xchg
add
pop
xor
jp
or
add
ds
and
mov
in
sbb
xor
inc
push
leave
nop
pushf
lret
jb
cmc
shrb
sub
scas
int3
mov
sub
mov
in
jmp
shl
mov
mov
mov
insl
outsl
cwtl
and
stos
add
push
sub
shll
inc
sahf
mov
hlt
inc
fdivs
or
pop
scas
psubsb
sbbl
sbb
adc
cs
icebp
das
adc
fnstsw
and
arpl
sbb
enter
imulb
cmp
jle
fisttpl
push
inc
ljmp
pushf
scas
movsl
and
sub
aaa
rcr
pop
movsl
aam
lcall
int3
pushf
jle
pop
xchg
nop
fcomi
inc
punpckhbw
shlb
int
xor
mov
mov
testb
push
xor
addr16
pop
rorl
gs
imul
push
aas
cmpl
scas
mov
icebp
inc
or
jbe
scas
or
psubsb
inc
mov
jle
mov
xchg
call
xor
int
cmp
push
or
sub
xor
cwtl
mov
arpl
test
imul
out
aas
test
notl
andl
jmp
outsl
xchg
jmp
jmp
in
enter
flds
movsl
mov
out
mov
push
xchg
fwait
sub
fists
and
jp
add
fstpt
add
outsb
daa
inc
add
jmp
add
fcmovne
inc
add
add
jns
and
inc
sub
and
sti
mov
adc
in
lea
lock
mov
jne
pop
inc
inc
mov
rcll
icebp
mov
sub
scas
mov
pop
lcall
mov
loope
xchg
sub
hlt
je
rorb
pop
sti
addr16
sbb
out
pop
mov
and
xchg
pop
lods
mov
sbb
leave
pop
pop
or
fcoms
sbb
neg
mov
sbb
mov
and
jbe
frstor
mov
jno
iret
imul
xchg
sbb
bnd
pop
cmp
jo
push
cmp
cmp
push
fnsave
mov
sbb
out
ja
mov
mov
sub
cltd
mov
and
popa
enter
loop
mov
cmp
adc
jb
decb
ret
shr
push
lret
and
mov
and
push
into
sbb
ds
movsl
adc
sub
sub
fiaddl
mulb
jg
mov
dec
aam
imul
imul
sbb
bound
mov
stos
adc
pop
insb
enter
xchg
lret
push
cs
adc
bound
imul
and
into
or
xchg
nop
int
lret
mov
dec
cmp
jno
cld
xor
cmp
fldenv
popa
sub
mov
cwtl
std
nop
sti
enter
fcomp
rclb
mov
mov
mov
dec
ja,pt
clc
sti
push
cmp
jmp
jl
mov
sahf
inc
nop
mov
mov
adc
xchg
popf
push
mov
sbb
cmp
js
fimull
test
sbb
cmc
in
xchg
push
xor
xchg
and
lret
mov
sti
xchg
push
xor
lods
fdivrs
pushf
cli
and
out
pop
ds
loope
imul
fndisi(8087
loopne
iret
popf
inc
mov
xor
loop
push
repnz
jp
cld
inc
lret
cmp
mov
notl
rcl
jmp
sarb
mov
cmc
and
mov
xchg
jl
cli
mov
add
mov
jns
and
xchg
aaa
mov
jbe
incl
mov
imul
movl
inc
mov
mov
cwtl
iret
ficoml
test
stc
cmpsb
les
xor
mov
dec
ds
jo
sbb
jle
push
sqrtps
lahf
jge
mov
clc
aam
push
popf
fwait
in
cmpsb
movsb
mov
or
in
mov
arpl
repz
lods
aad
dec
addr16
xchg
pop
mov
inc
xchg
ljmp
mov
push
cmc
sub
dec
mov
pop
loop
repz
or
inc
mov
push
pop
enter
mov
jne
fstps
movsb
cltd
lret
xor
or
scas
and
shrd
push
cmp
mov
imul
sbb
mov
or
push
cli
lahf
lret
mov
loope
aaa
sbb
jno
dec
scas
mov
jo
cmp
mov
clc
nop
int
leave
jnp
cmp
dec
mov
shlb
lea
dec
mov
sub
jmp
cmp
stos
addb
xchg
push
mov
jle
push
dec
cltd
jl
or
test
xchg
addr16
mov
frstor
jns
and
hlt
xchg
xor
mov
std
or
push
add
inc
into
sub
lock
push
xchg
mov
gs
or
in
dec
mov
fwait
mov
push
or
ffreep
push
fwait
pop
pop
ja
loopne
pop
ja
pop
mov
jne
sub
je
sbb
cmp
aas
sahf
pushf
pop
jbe
std
loopne
lahf
loop
iret
inc
nop
das
dec
cltd
adc
loopne
add
test
add
es
cltd
sub
pop
pop
sbb
std
sbb
add
lcall
and
adc
jl
lahf
movsl
lea
cmp
pushf
cld
or
add
cmc
cmpsb
push
filds
sub
mov
push
gs
add
mov
js
lret
ret
or
push
insl
aad
in
sarl
xor
xor
dec
xor
lcall
or
or
rcrb
outsb
dec
inc
sbb
decb
cmpb
or
loope
in
cwtl
xlat
mov
xchg
lahf
mov
dec
test
cmp
sbbl
inc
lods
or
jno
sub
in
sbbl
insl
mov
icebp
in
mov
jecxz
or
xchg
adc
pop
push
mov
lock
push
push
xor
mov
decb
xor
jg
push
add
mov
or
sub
xor
jl
enter
adc
popf
lods
lahf
mov
jmp
rorl
sbb
adc
lods
test
sahf
add
lahf
nop
addr16
xor
inc
mov
dec
loopne
jecxz
test
sbb
push
push
incb
shlb
ret
orb
scas
push
push
insl
popa
mov
sbb
adc
inc
mov
test
into
jbe
mov
dec
cltd
add
out
rcpps
in
gs
add
das
cmp
loop
mov
mov
loop
dec
jmp
jb
aaa
iret
lds
test
sti
push
and
xchg
mov
fwait
dec
loop
mov
sub
jle
iret
dec
popf
cmp
and
jae
jnp
inc
lret
iret
loope
lret
pop
xchg
jp
into
xchg
mov
outsb
push
adc
xor
movsl
push
icebp
and
je
mov
push
lea
jo
adc
inc
and
icebp
outsl
push
loope,pn
repz
test
in
pop
pop
scas
mov
and
jno
push
popf
imul
ds
scas
dec
out
push
jp
mov
std
sbb
lcall
je
int
sti
mov
pop
fcomps
enter
fsubs
mov
mov
xchg
out
out
mov
dec
shll
xchg
push
jno
loop
iret
mov
xor
sahf
sarl
adc
inc
xchg
add
scas
rolb
cmp
mov
mov
icebp
mov
imul
mov
pop
add
mov
cwtl
ret
repz
jns
push
cmp
lcall
adc
mov
pop
pop
push
mov
aam
lahf
sub
xlat
lock
jne
sbb
and
nop
mov
inc
lods
or
pop
xorl
loopne
scas
insl
mov
jcxz
int3
and
pop
xchg
sbb
sub
lret
lcall
cmp
inc
or
mov
sbbb
mov
fsub
mov
push
leave
int
inc
adc
repz
mov
or
push
clc
xor
cmp
pop
inc
enter
test
lcall
ljmp
jp
lods
push
lret
fistl
jnp
int3
mov
pop
pop
lea
js
into
lea
enter
ja
add
inc
xchg
push
scas
and
data16
inc
pushf
inc
imul
adc
imul
mov
shl
sub
xchg
jmp
cmp
dec
cwtl
in
jb
mov
shll
sub
idivb
mov
insl
xchg
imul
push
insl
lahf
lock
add
lret
push
sub
lds
pop
lret
jns
cmp
and
mov
inc
in
into
dec
pop
adc
cld
add
xchg
movsl
aam
divl
adc
mov
xlat
xor
pop
cs
mov
icebp
dec
xor
outsb
repnz
test
push
popa
or
imul
mov
adc
les
out
and
notl
shl
and
and
stc
out
and
jmp
pop
pushf
push
insb
mov
ljmp
iret
in
mov
xchg
xchg
lret
mov
pop
xchg
in
lods
ljmp
mov
or
out
jae
lcall
ret
fists
lea
subl
sbb
movsb
in
loope
scas
pushl
pop
mov
jp
ljmp
sbb
mov
xor
or
adc
cmpsb
adc
or
push
sahf
sub
ss
popa
sub
sbb
sub
stc
jno
add
mov
lods
add
inc
or
iret
fbstp
in
mov
leave
inc
dec
or
cli
add
mov
jle
push
jp
jecxz
push
mov
int
adc
js
or
aad
testl
or
pop
or
sbb
and
and
dec
xor
fisttpl
and
lcall
stc
cmp
sub
jecxz
aas
movsl
sub
mov
jge
fnsave
fucomip
out
mov
btc
sub
popa
loop
cmp
xchg
loopne
lds
icebp
jl
dec
mov
lahf
insb
loopne
jae
adcl
or
loope
xor
scas
cmpb
dec
out
xchg
add
cmp
mov
xor
sbb
xor
jb
inc
push
lock
in
inc
stos
mov
jg
pushf
notl
loope
mov
push
in
pop
mov
push
movsl
sbb
inc
test
adc
adc
dec
daa
lret
mov
xchg
ret
or
dec
add
sbb
sub
cs
addr16
cmpsl
fldt
cld
fdivs
cltd
ds
pop
jmp
jmp
and
jecxz
orl
jg
insl
sarl
xchg
mov
xor
punpckhbw
arpl
mov
or
add
xor
jl
mov
mov
ret
mov
mov
aad
mov
arpl
out
ja
dec
aad
lods
ficoms
sbb
push
jecxz
lcall
sub
or
push
mov
mov
cs
inc
ljmp
pop
pop
movsb
stc
xchg
add
ret
imul
mov
xchg
sbb
cld
push
popa
repz
jns
lds
adc
cltd
mov
ja
rorb
mov
negb
scas
mov
ljmp
outsb
loop
sarb
sbb
mov
loope
lahf
jns
aaa
or
hlt
cmpsl
sahf
into
xorb
jle
jle
xchg
inc
cmp
inc
ret
pushf
mov
push
or
pusha
dec
jbe
test
jns
dec
nop
jp
pop
imul
fsub
out
lds
mov
test
icebp
push
repnz
pushf
mov
and
and
fwait
ds
aam
or
mov
icebp
jne
inc
mov
inc
test
inc
gs
insb
mov
lock
cmp
testb
mov
fbstp
cmp
push
add
xor
push
loopne
mov
fcoms
lea
lea
sbb
sbb
sub
adc
xchg
rorb
inc
pop
ds
hlt
test
mov
mov
loope
stos
dec
test
pop
in
hlt
jnp
or
lds
add
cmp
pop
ret
jge
dec
sbb
mov
xor
sub
jge
push
cmc
xchg
dec
jmp
and
mov
xor
jne
or
ds
dec
push
data16
inc
inc
pop
dec
gs
and
dec
pop
test
adc
clc
xor
jne
loopne
in
loope
movsl
dec
lahf
mov
ja
repnz
popa
cmp
fprem
cltd
adcb
cld
pop
adc
popf
jne
addr16
ffree
inc
stos
add
fwait
int3
push
inc
adc
mov
jb
jl
cmp
push
xlat
jmp
lods
adc
mov
adc
scas
into
xchg
jge
in
mov
jae
stos
imul
mov
adc
cmp
mov
in
adc
inc
adc
in
pop
inc
adc
outsb
sbb
repz
test
inc
in
inc
call
pop
xor
and
xchg
pushf
jmp
cmp
lcall
cld
adcb
fisttpl
das
cli
or
mov
call
outsb
fsubrs
orb
iret
dec
xor
out
lret
les
push
lock
add
imul
lods
dec
testl
fwait
push
sub
xchg
ds
jbe
out
inc
jns
out
fdivs
cmp
xchg
and
add
sti
dec
pop
out
scas
push
jnp
pop
mov
icebp
mov
xchg
push
cmp
int3
push
adc
int
xor
inc
sbb
jge
stc
sub
jb
mov
push
test
ret
call
jg
pop
push
roll
int
dec
dec
test
enter
faddl
xor
sbb
or
rorb
mov
out
leave
jle
int
sub
jno
cmpsl
loopne
and
mov
dec
add
enter
arpl
xor
cwtl
or
ret
ds
xchg
mul
mov
aas
jmp
daa
shll
sub
repz
and
sub
daa
sti
test
and
popf
ja
dec
inc
xchg
fiaddl
mov
aas
out
fldenv
in
je
jp
and
mov
mov
mov
mov
sub
adc
dec
mov
popf
dec
push
cmp
fmulp
jle
adc
insb
xor
add
pop
or
push
je
pop
cmp
fwait
mov
pop
pop
leave
loopne
xchg
stos
dec
xchg
mov
adc
ljmp
out
mov
mov
scas
xchg
es
mov
pushf
sub
cmpsb
or
aad
adc
mov
mov
rcrl
xchg
sbbl
xor
and
lret
fistpll
testb
jecxz
fldt
dec
jae
push
xor
sbb
lret
jno
mov
and
hlt
pop
je
enter
xor
in
push
shll
out
das
fwait
out
int3
inc
pop
or
lds
sbb
iret
decl
sub
xchg
push
movsb
ljmp
inc
jno
pushf
dec
aam
mov
sbb
mov
aad
cmp
adc
testl
orb
test
push
push
mov
divl
fdivr
enter
adc
arpl
cltd
pop
push
push
jl
mov
insb
int3
fs
js
lea
jg
test
sub
in
ss
js
jmp
add
jecxz
fsubl
xchg
inc
jbe
ret
xorl
mov
pop
pushl
inc
in
fbld
mov
add
or
cmpsl
add
pop
jge
adc
insl
pop
inc
fs
dec
or
fdivrp
jmp
les
xchg
imul
sbb
xchg
jo
popa
inc
inc
aaa
adcb
sub
dec
cmp
jae
add
sar
fiaddl
or
cmp
clc
push
adcl
mov
daa
sbb
ss
pop
dec
mov
dec
lahf
rorl
or
mov
fdivr
outsb
xor
es
xor
jg
test
outsb
imul
into
jmp
pop
ss
cmp
loop
sbb
push
ja
mov
sub
pop
sub
mov
insb
push
divb
cmp
push
gs
mov
inc
push
sbb
ss
fdivrl
fcmovnu
nop
mov
lock
push
adc
es
jnp
push
enter
lds
adcb
adc
xchg
pop
iret
or
subl
lea
xchg
hlt
cmp
hlt
cmpb
push
fcmovbe
mov
cmpsl
mov
adc
xlat
bound
jb
test
fisubl
faddl
mov
push
cmpps
imul
pop
push
and
pop
ret
jbe
xchg
mov
leave
es
rclb
jo
cmp
pop
imul
xor
jae
push
mov
lods
pop
jp
dec
sbb
jmp
jle
iret
dec
inc
add
sbb
adc
cmp
add
iret
push
cmc
dec
call
mov
lret
pop
sbb
out
addr16
pushf
cltd
sbb
mov
insb
outsl
cltd
sub
enter
enter
lods
or
sub
ret
movsl
cld
ror
add
pop
test
mov
pop
push
xchg
repz
je
pop
ja
int
mov
cwtl
nop
xor
leave
mov
fadds
lcall
sub
cmpsb
lret
test
push
icebp
ret
cwtl
fbstp
pop
inc
pop
int
or
arpl
mov
outsb
inc
mov
inc
mov
dec
movsb
mov
push
xor
xchg
cli
xchg
cmp
das
sub
in
add
xor
xchg
out
xchg
adc
mov
or
inc
sub
inc
in
ds
sbb
dec
and
xlat
xor
push
mov
dec
xchg
iret
xchg
jb
lahf
cltd
int3
mov
cmpl
sarb
mov
pushl
test
mov
jg
aad
xlat
ds
pop
jmp
div
scas
cmp
cmp
mov
mov
fists
data16
jo
popf
out
test
inc
pushf
sub
add
ljmp
xchg
repnz
cltd
movsl
idiv
xor
mov
sub
clc
mov
push
jo
cwtl
rolb
repnz
movsl
mov
jb
mov
xchg
sahf
sbb
lret
shl
fs
sbbb
or
lods
sub
adc
and
sbb
cld
es
movsb
push
outsl
xchg
sbb
adc
arpl
pop
lds
xchg
sbb
xor
fiaddl
cmp
pusha
pxor
lcall
insb
pop
cmp
mov
sbb
push
je
jecxz
clc
hlt
add
cmp
ret
mov
fstl
bound
push
icebp
pop
imul
inc
pop
lcall
mov
je
mov
xchg
das
addl
cmpb
mov
jle
adc
pop
mov
cmp
addb
fistps
or
inc
adc
inc
adc
sub
xor
stc
mov
dec
in
fs
sahf
fists
mov
outsb
adc
jg
mov
sub
jp
or
add
add
adc
outsl
push
arpl
xchg
into
xorl
data16
jo
stc
add
cmp
mov
and
cmp
lds
and
scas
enter
test
xlat
and
pop
cmp
mov
stc
mov
lahf
sbb
xchg
scas
or
mov
mov
push
lret
loope
or
adcl
addr16
filds
pop
lds
pop
js
testl
fwait
std
jle
xchg
mov
push
hlt
in
mov
in
addb
adc
pop
adc
jne
jecxz
jge
or
movl
or
pop
lods
inc
mov
jecxz
inc
aad
push
xor
mov
imul
cmpsb
lods
lock
mov
cmp
jo
cmpsb
sub
lock
dec
pop
mov
pop
andl
pop
sub
loopne
xchg
out
add
push
dec
dec
aas
inc
sub
push
ror
fstpl
pop
xorl
jnp
shlb
add
arpl
nop
pop
adc
pop
mull
xchg
inc
jb
int3
add
lds
jae
sub
ret
dec
or
cwtl
cmp
outsl
mov
dec
insb
add
in
xchg
and
cmpsl
notl
mov
mov
sbbl
aaa
or
jp
ja
outsb
sub
cld
add
das
fmull
adc
loop
sub
push
inc
fists
sub
add
adc
mov
mov
add
xor
or
sbb
xor
call
cli
push
adc
lods
mov
pop
in
push
aam
jnp
xchg
xchg
push
inc
stos
test
xchg
cwtl
int3
pop
lods
cmpb
jne
mov
xchg
mov
push
mov
aas
mov
pop
and
jp
adc
lahf
jecxz
jp
adc
and
mov
dec
lock
pusha
loope
jmp
mov
cmpsb
cmp
lret
inc
mov
inc
ja
idiv
sub
das
mov
pop
test
push
lea
push
pop
sahf
popl
adc
mov
int
mov
cmp
pop
rcrb
jns
or
into
mov
jno
cmp
out
push
mov
das
add
and
not
movsl
in
add
xor
mov
fnstcw
dec
mov
dec
cmpsl
fbld
adc
mov
pop
adc
pop
inc
mov
loop
adc
add
js
inc
inc
mov
jo
pop
cli
lahf
roll
outsb
xchg
fstps
movsb
jl
int3
inc
punpckldq
and
out
mov
cmp
mov
add
cld
je
mov
mov
insl
xchg
popa
and
out
dec
xchg
cmp
popa
add
movsb
jno
mov
push
mov
fwait
xchg
mov
pusha
jns
aam
mov
lret
ds
and
mov
xchg
lods
int
and
cmpsl
test
or
lea
lea
sub
fdivl
add
cmc
fcmovbe
mov
aas
fstpt
call
add
inc
push
xchg
stc
dec
jmp
and
inc
xchg
and
mov
mov
inc
jmp
ficoml
int3
sahf
sti
stos
popl
jmp
push
call
lock
push
out
jo,pn
out
cmp
sub
icebp
pusha
shr
pop
lcall
pop
insl
and
or
xchg
jge
add
cld
cmp
jp
test
lret
xor
int
jl
xchg
mov
jl
leave
add
xchg
fadd
dec
mov
inc
adc
cmp
lds
aam
popa
ror
cwtl
sub
sbb
insl
add
arpl
imul
mov
pusha
xor
aad
xchg
test
in
add
inc
in
and
repz
psrlq
inc
nop
loop
int
dec
stos
mov
lods
fildll
repz
cs
or
jns
and
cltd
or
mov
mov
imul
push
push
loopne
jl
addr16
ret
loopne
push
ficoml
ja
xchg
lret
stos
pop
adc
pop
add
out
and
fs
mov
into
xchg
gs
int3
adc
dec
mov
push
ljmp
pop
cmpsl
inc
push
into
pop
xchg
pop
je
das
cmpsl
into
or
cli
mov
repnz
pop
xchg
out
js
inc
jno
in
aam
xchg
sub
in
dec
inc
pop
cld
sub
lret
push
cmc
xchg
push
cltd
and
js
loop
inc
adc
hlt
mov
add
push
mov
gs
sbb
pop
pushf
movsl
dec
jno
pop
call
lods
daa
jns
push
sbb
inc
dec
sub
aaa
imul
fwait
lods
inc
in
xchg
sub
incl
popf
inc
ds
or
dec
orl
aam
and
inc
pop
orl
pushf
pop
rorl
push
imul
jno
cli
enter
or
aad
iret
push
lahf
mov
push
shrb
xor
aam
shr
or
jg
mov
cmp
arpl
out
sahf
mov
sbb
into
leave
imul
jb
clc
sbb
or
and
loop,pt
aad
daa
or
jns
xorl
lods
cwtl
mov
xor
loope
out
popf
push
dec
add
dec
pop
jns
loop
pushf
mov
dec
push
mov
cli
adc
and
pop
add
fsubrl
and
cmpsb
fisubrl
aam
and
xor
flds
jnp
test
rolb
mov
incb
in
insl
inc
arpl
push
lods
cmp
dec
jle
jns
or
fiadds
in
js
lahf
jne
bound
int3
int
fsubl
push
movsl
pop
inc
push
mov
decb
call
and
ffreep
lret
vpshuflw
mov
jle
imul
sbb
fadds
xlat
inc
movsl
xor
push
mov
call
popf
test
div
mov
lret
mov
xor
jne
out
sub
xchg
je
aaa
or
flds
sub
cmp
inc
test
jns
lcall
in
xchg
movb
inc
pop
cmp
push
mov
mov
pusha
xor
or
das
sbb
inc
fcomi
hlt
testl
mov
xchg
dec
mov
mov
sbb
iret
cmp
dec
cmpsb
test
movsb
mov
cwtl
aam
testl
aas
inc
inc
scas
push
pop
fcmovu
push
jae
jl
pop
xchg
pop
push
rolb
inc
sbb
out
das
lods
icebp
insl
mov
inc
cmp
fcompl
movsb
mov
shlb
mov
mov
or
jno
popf
xchg
inc
in
dec
jnp
dec
jnp
mov
popa
lret
out
mov
int
test
cmp
dec
or
mov
pushf
push
pusha
jmp
lock
adc
jmp
sbb
cltd
mov
imul
popa
cmc
stc
adc
or
jmp
arpl
and
inc
jmp
cli
push
test
or
jmp
or
arpl
dec
and
cmp
xchg
lods
enter
mov
out
pause
pusha
xchg
inc
mov
test
andl
mov
mov
cmp
mov
imul
stos
jne
scas
jmp
or
clc
ret
unpckhps
jg
outsl
daa
rclb
test
test
loop
xor
and
and
sub
dec
dec
fisubs
mov
pop
pushf
and
or
out
addl
jne
xchg
cld
outsb
loopne
xor
and
aad
sarl
cwtl
mov
mov
cmp
jno
testb
cmpsb
jno
loopne
test
addr16
pusha
xchg
lds
ficomps
ds
xchg
push
pop
les
hlt
pop
in
xchg
nop
loop
negb
pop
in
leave
sub
jge
xor
ret
xor
inc
shlb
sub
pop
sub
push
mov
dec
mov
imul
adc
cmp
sub
jo
xor
push
cmp
lcall
lret
xchg
fbld
mov
xchg
popa
pop
lahf
shll
push
dec
xchg
pop
lret
push
outsl
jl
pop
mov
cmp
testb
pushf
movsb
add
fildl
pop
negb
mov
fwait
cmpsl
sbb
inc
aad
push
jb
in
jo
cmc
dec
push
sar
mov
sti
xor
and
inc
add
add
fwait
ja
inc
imull
and
repz
popf
leave
cli
xor
jb
lea
pop
sbb
roll
outsb
data16
xor
pop
push
je
ficompl
fsubr
cld
jmp
and
mov
fcomps
fsubp
xchg
inc
mov
lcall
test
out
loope
dec
mov
cmc
inc
cli
inc
stc
mov
stos
mov
testb
cld
js
mov
xchg
out
jl
dec
pop
stc
lods
xchg
and
lds
jle
jae
xor
insl
mov
incb
mov
or
popa
pop
adc
lcall
stos
sub
imul
add
jle
dec
out
push
out
cwtl
pushl
mov
int3
mov
fisttpl
stos
lods
sub
lods
mov
cmp
xor
inc
lcall
cmpsl
mov
movsl
jbe
lcall
sub
mov
mulb
mov
fcmove
shlb
cmp
or
fstpl
xor
fldenv
leave
xor
sahf
addr16
std
in
mov
in
lret
cmp
mov
mov
dec
test
inc
out
popf
fnsave
jle
cmpsb
xor
cmc
cmp
ficompl
repnz
outsb
add
test
jo
pop
push
aam
decl
jl
test
xor
and
dec
push
jbe
jo
fstps
and
cmp
mov
pop
pushf
rcrb
loopne
xorb
sbb
mov
and
in
push
inc
push
dec
inc
inc
insl
cmp
dec
test
movsb
sbb
outsl
jnp
outsb
or
mov
les
cmp
insb
loop
popa
push
ror
or
xlat
xlat
pop
mov
and
and
add
icebp
xor
push
cmp
mov
orl
popf
enter
xor
push
or
stos
mov
loopne
inc
lea
add
rclb
arpl
or
shl
inc
rcrl
sub
xchg
inc
call
inc
mov
push
loopne
jo
enter
dec
or
nop
addr16
lret
cmp
inc
dec
fiadds
jnp
pop
inc
stc
jnp
aam
fmul
ss
cmpsb
faddp
push
test
test
mov
mov
loopne
filds
dec
mov
jb
dec
fildll
scas
sbb
mov
push
push
xchg
fsubs
lret
add
aad
mov
js
fdiv
pop
faddl
push
dec
inc
mov
pop
push
pop
pop
mov
adc
test
xchg
insb
mov
popf
js
imul
cld
xor
fld
mov
inc
mov
cs
inc
lds
std
jg
fs
shlb
or
push
stc
iret
push
adc
stc
sbbl
or
sub
iret
pop
scas
lcall
call
mov
loop
sahf
js
movsb
adc
mov
int
add
roll
outsl
sub
ret
fs
xchg
dec
xchg
fwait
push
push
sub
xchg
sbbb
cmp
pusha
push
mov
leave
lret
inc
enter
ret
cmp
daa
cmp
sbb
movsb
and
jno
fldz
xorb
and
dec
mov
test
pop
xchg
mov
or
jbe
xchg
xchg
loope
sub
decl
repz
pop
sti
daa
and
xlat
dec
clc
mov
mov
xor
inc
and
push
inc
and
in
sarl
fbstp
shrl
mov
outsl
xchg
addl
rcrb
negb
xor
mov
outsb
sbb
in
sbb
pop
insb
stos
fwait
and
mov
inc
pop
stos
add
gs
push
into
aas
xor
notl
push
and
push
stos
loope
nop
jp
inc
outsb
and
mov
js
mov
mov
dec
push
sbb
divb
popa
pop
or
push
xchg
add
cltd
mov
shl
cmp
mov
xorl
mov
add
xchg
cwtl
cmc
pushf
rorb
fs
jae
out
cmpsl
xor
insb
mov
push
jbe
in
pop
adc
pop
adc
push
outsb
stc
cld
pop
push
loope
cmc
push
pop
inc
jle
pop
lcall
ja
cmp
and
mov
sbb
fstps
push
inc
mov
mov
pop
xor
cmp
sub
push
jne
xlat
sub
fnstsw
dec
fisttpl
test
inc
out
jb
lahf
lods
or
mov
inc
call
xlat
pusha
sub
addr16
mov
pop
mov
scas
sbb
pop
fistpll
pop
cwtl
cmpsb
orl
adc
fmul
flds
les
aam
cmp
out
mov
sub
ds
xchg
jb
jp
adc
daa
xchg
cltd
or
jns
je
pop
es
jno
jae
or
mov
push
int
pop
xchg
loope
dec
inc
hlt
xchg
flds
push
sar
jne
in
add
mov
xor
push
hlt
cmpsl
je
pusha
mov
pop
ja
sub
cmp
push
aaa
outsl
jno
dec
test
lods
inc
sbb
adc
pop
into
mov
ljmp
add
test
mov
xchg
insl
push
xor
add
imul
pop
xchg
shrl
push
pop
mov
mov
jp
sub
dec
mov
adc
mov
flds
and
push
add
mov
jl
push
pop
and
pop
into
pusha
roll
cmp
sbb
xchg
sbb
fwait
outsb
pop
mov
nop
add
test
push
add
jo
cmpl
dec
jge
ret
adc
sub
stos
ss
pop
inc
add
xor
jmp
sub
dec
idivl
les
lods
cmpsl
lock
push
add
dec
sbb
mov
mov
fmuls
stos
inc
jl
jge
sahf
outsl
jl
xor
inc
or
mov
sub
fldt
les
cld
mov
jge
xchg
lret
mov
cs
push
xor
mov
sbb
cwtl
sub
sti
mov
inc
rcrb
mov
and
mov
int3
lods
sub
push
shl
xchg
ja
dec
je
dec
xor
and
or
xchg
cmp
imul
sub
mov
mov
insb
fcoml
adc
mov
ret
shlb
and
pop
inc
lahf
stc
pop
stos
pusha
mov
push
testl
xor
mov
inc
xor
lret
cs
out
orl
and
jmp
gs
mov
cli
pop
lcall
ret
enter
jge
xorl
and
test
lds
lret
jae
pop
or
and
inc
jbe
add
aaa
lea
cmpsl
mov
jl
lret
arpl
inc
inc
cmp
repz
pop
lods
js
dec
or
fwait
jle
pop
cmp
pop
in
hlt
dec
mov
inc
inc
mov
jb
ret
movsl
push
call
cmpsl
mov
or
and
arpl
addr16
lods
dec
test
cmpsl
mov
or
pop
jge
jp
testl
add
ss
adc
push
bound
push
push
out
loope
cmpsb
cmp
mov
sub
ja
std
inc
inc
sbb
icebp
mov
and
push
fnclex
xchg
and
ficoms
jecxz
ret
scas
popa
xor
mov
cli
mov
inc
aad
into
in
lret
xor
xlat
fstpt
rorb
push
pop
bound
cmp
ret
in
xorb
push
mov
outsb
lods
cmp
xchg
stos
inc
inc
or
dec
sarb
or
test
dec
xor
cmp
cmp
sbb
jae
adc
jl
stc
outsb
in
xor
cmovne
fnstcw
xchg
cmp
or
cld
push
pop
rcrl
rclb
mov
jmp
mov
les
cmc
lahf
ds
cld
sub
add
outsb
shrl
ja
fstpl
pop
inc
int
fldcw
mov
gs
jb
pop
fstpt
push
and
lea
std
shlb
push
mov
push
inc
clc
mov
inc
das
adc
lcall
pop
pop
xor
test
adc
adc
sbb
inc
jle
jle
sub
push
negl
xchg
xchg
cmc
fistpl
xor
in
pop
sbb
mov
loopne
jns
pop
ja
subl
frstor
jno
adc
lret
ss
in
jns
inc
or
pop
adc
sbb
mov
cmp
das
cmpsl
add
pop
push
fcomps
xor
mov
sub
xor
or
das
shrl
dec
push
inc
push
insl
or
rcl
jae
inc
orb
fwait
inc
loope
inc
push
pop
dec
mov
stc
cli
mov
dec
add
mov
sbb
mov
lahf
inc
dec
sub
les
pushf
lahf
arpl
fiadds
or
mov
scas
adc
jno
cmpsb
jle
fisubs
ds
jns
popf
addb
fdivrs
ss
shrb
pusha
xlat
fsubrp
cltd
jb
pop
jl
cmpsl
mov
push
add
les
mov
roll
xchg
jno
sbbb
mov
xchg
jae
inc
fsubl
into
xor
push
sbb
cmpsb
lcall
add
mov
pop
and
or
cld
je
sbb
idiv
xor
jns
pusha
ss
lret
dec
mov
fldt
lods
jg
testb
pop
and
adc
loop
addb
jg
enter
xchg
in
mov
sarb
lds
add
int
cmc
test
mov
add
lods
mov
mov
aas
pop
rolb
mov
jmp
ljmp
xor
ja
repz
negb
adc
sub
mov
or
ljmp
sbb
jp
ja
cmpsl
insl
adc
sti
xor
imul
in
jl
aam
test
js
xchg
loope
xor
inc
xor
jnp
hlt
add
dec
lods
fcomip
mov
in
mov
bound
and
jmp
leave
into
mov
divb
add
ret
rcll
mov
xchg
in
shrb
pop
push
mov
out
addb
or
les
pop
outsl
mov
xor
popa
movsb
les
fdivrs
arpl
in
xor
cld
test
shrb
inc
jg
js
mov
jne
dec
imul
icebp
scas
repnz
or
cli
or
bound
daa
pop
sbb
mov
jge
cltd
mov
daa
pop
sub
sub
mov
xchg
pop
pop
xlat
mov
jnp
sub
or
push
push
test
cmpsb
sarb
mov
fdiv
sahf
jno
aad
daa
lcall
ror
pop
ss
enter
mov
stos
std
jl
int
ret
add
inc
ds
dec
fs
and
stos
mov
fildll
dec
adc
fadd
push
sahf
adc
fwait
push
jns
add
enter
mov
loope
adc
mov
adc
and
xor
inc
call
stos
pop
dec
sbb
test
sub
aaa
sub
push
into
xchg
movsl
in
dec
insl
jno
test
shlb
scas
bound
fsts
lret
fistps
push
xchg
xchg
loope,pt
mov
xchg
xor
loope
lret
ja
das
jb
scas
popf
mov
cs
ficoms
or
adcb
push
jecxz
push
popf
mov
dec
inc
mov
aam
and
scas
dec
lods
cmp
jecxz
pop
enter
mov
lock
add
xor
mov
mov
mov
push
xchg
xchg
xor
not
xor
push
sbb
rol
sbb
pop
mov
add
or
mov
dec
daa
divb
add
in
push
lock
stc
push
loop
jmp
sub
xor
mov
cs
outsb
push
mov
pop
idivb
lods
das
inc
mov
push
jns
sbb
inc
or
test
add
cmpl
dec
lahf
xor
cmp
jmp
ret
pop
mov
loope
mov
inc
in
loopne
mov
clc
cmp
add
lea
loop
rorl
test
and
push
pop
mov
mov
cld
mov
dec
orl
inc
rcr
mov
xchg
inc
scas
insb
pusha
adc
xor
mov
loope
sub
jge
push
add
push
dec
test
sahf
andl
push
xchg
mov
mov
out
call
data16
lret
shrb
jnp
roll
mov
sub
lea
lret
dec
xchg
fnstsw
xchg
outsl
cmpsb
mov
ret
or
pop
and
jmp
inc
jno
add
mov
lea
fldenv
pop
leave
mov
testl
push
std
insb
pushf
mov
or
nop
pop
sarb
mov
das
rcrb
fs
pop
js
or
shlb
shll
and
aam
mov
push
or
pop
sbb
out
dec
icebp
cmp
cmp
in
cmp
or
xchg
xor
aam
loope
dec
into
mov
inc
loope
aas
mov
dec
cmp
popf
adc
cmpl
fstpt
sahf
dec
movsl
shrl
aaa
sbb
mov
fadds
imul
sub
mov
jo
outsl
data16
lcall
pop
fcompl
pushf
aad
xchg
add
inc
mov
push
addr16
in
mov
and
in
daa
cmp
fstp
dec
mov
mov
dec
inc
jb
iret
fnstsw
daa
push
pop
lods
push
ljmp
out
lcall
sti
fnstenv
ret
dec
std
jb
es
loop
pop
push
jbe
mov
or
push
int
mov
add
xchg
mov
lock
daa
lret
fucom
gs
mov
xor
jg
jecxz
stc
xchg
mov
pop
loope
data16
int3
scas
in
sbb
les
out
shlw
cmpsb
mov
movsb
ret
cmpsb
sub
lock
popa
inc
and
mov
lods
cmc
mov
sub
call
add
popf
mov
and
in
xor
popa
adc
in
int
fmulp
push
inc
icebp
jle
push
xchg
dec
inc
dec
insb
cmp
add
outsl
loope
mov
iret
xor
xor
jo
mov
push
nop
clc
pop
out
arpl
mov
xchg
adc
or
xor
ss
aam
mov
leave
mov
push
in
fldlg2
jp
mov
into
dec
jno
add
cmp
into
xchg
jmp
insl
xchg
insl
pop
adc
stos
clc
mov
loopne
and
mov
cmp
fidivl
xchg
jmp
or
mov
addl
mov
mov
xor
xchg
loop
jmp
gs
lea
das
cmp
sbb
fucompp
xchg
pushf
scas
jno
mov
inc
dec
jae
or
aaa
push
cltd
std
xor
imul
mov
stos
pop
adcb
xchg
adc
or
sub
sbb
adc
push
imul
outsl
cmp
rol
pushl
dec
and
es
mov
lds
int3
pop
or
mov
pop
dec
dec
cmp
cwtl
int
pushl
rcl
popf
dec
xor
fstl
adc
call
jl
dec
fmuls
jne
jmp
push
sbb
push
incb
mov
dec
pusha
add
fwait
dec
lret
cwtl
push
pop
lock
fs
pop
xor
fsubs
aam
and
fdivs
fwait
rorl
jae
cmp
xchg
ja
jne
xor
scas
adc
add
arpl
lods
test
inc
ficoms
mov
xor
into
loopne
push
inc
sbb
sub
and
std
repz
fs
and
xchg
inc
cmp
arpl
jne
imul
or
mov
and
xlat
cs
xchg
xor
adc
mov
mov
jp
clc
daa
call
xor
cli
icebp
fsubrs
test
inc
xlat
jle
mov
in
movsl
std
mov
add
mov
xchg
add
mov
jge
cmp
test
xlat
repz
mov
movsb
cmp
repnz
hlt
addr16
sbb
dec
pop
into
lcall
jle
xor
fsubl
pop
filds
fists
cmp
push
push
addr16
outsb
lods
sti
or
xor
iret
popf
inc
inc
outsb
mov
jecxz
mov
cmpsl
mov
cwtl
nop
les
gs
movsb
jno,pn
add
jbe
scas
jg
sub
outsl
or
jno
sub
push
xlat
lock
repz
aas
push
mov
add
loope
xor
and
xchg
mov
xchg
clc
pop
mov
cld
jg
sub
movsl
popfw
in
push
jle
inc
jb
repnz
out
movsb
xor
mov
stc
adc
mov
dec
fldenv
sbb
pop
lcall
pop
icebp
stos
mov
sbb
nop
out
sub
lahf
hlt
add
or
fidivl
call
jae
xchg
jl
dec
mov
leave
loopne
add
add
into
sbb
xchg
sbb
lods
outsl
lds
push
and
jge
xchg
dec
loop
sub
jbe
ds
inc
mov
adc
inc
jl
pop
shrl
scas
push
pushf
sbb
gs
das
mov
adc
cwtl
jo
pop
test
dec
jg
sub
xchg
or
adc
jge
cli
and
icebp
lret
dec
and
mov
jge
xlat
jnp
das
mov
les
repnz
fs
inc
stos
xor
or
adc
out
mov
pop
sbb
movsl
or
or
ret
push
lcall
in
rorl
sbb
push
ljmp
shl
jle
lret
loop
lock
or
gs
roll
inc
js
fs
leave
push
inc
jnp
jle
ss
jb
pop
inc
push
rol
out
sub
mov
shrb
dec
dec
pop
std
ret
sahf
pusha
mov
sarl
dec
push
ds
jae
jle
mov
mov
in
sbb
fs
push
sbb
dec
test
dec
add
mov
add
xorb
sub
notb
outsl
sbb
cs
push
cmp
cmp
mov
fs
ret
stos
in
fimuls
ret
imul
stos
adc
hlt
xchg
repnz
adc
mov
add
mov
pushf
xor
mov
inc
std
and
lods
inc
rep
pusha
shlb
pop
pop
mov
xlat
shll
out
lock
xchg
movsl
xor
je
outsb
xor
jb
mov
and
xchg
xlat
stos
ficoms
mov
pmaddwd
lods
bound
mull
inc
stc
rorl
xchg
mov
js
movsb
mov
xchg
adc
lret
mov
mov
ljmp
adc
ljmp
sub
inc
jp,pn
lcall
test
xor
jno
push
mov
fdivrs
ret
popa
push
shlb
in
sub
stos
test
or
mov
add
mov
and
incl
inc
insb
lods
pushf
fwait
push
and
push
mov
dec
adc
jns
mov
mov
gs
pop
cmp
aad
xchg
cmp
jl
arpl
dec
adcb
pop
fcomps
dec
adc
insl
jae
outsb
mov
adc
or
sbb
sarb
rcll
out
pop
test
cmc
cld
out
jl
pop
ljmp
jnp
icebp
movsb
or
fstpl
lahf
shrb
sub
push
jp
xchg
sbb
imul
dec
mov
rorb
dec
pop
push
and
clc
and
adc
sub
add
dec
je
jge
stc
cwtl
cli
pop
add
xor
sbb
jbe
jbe
test
mov
leave
jge
popf
mov
mov
outsb
loope
sbb
sbb
and
xor
outsb
dec
mov
int
mov
es
and
movsb
pop
pop
sub
jg
sub
push
imul
sub
stc
stos
pop
mov
lret
sub
jp
cmpsl
xor
xchg
scas
stc
enter
test
imul
movl
ss
inc
lret
outsl
pop
cmp
push
adc
cmc
mov
inc
cmp
push
xchg
lcall
into
inc
adc
push
push
push
push
push
call
xlat
lods
mov
xchg
inc
jp
test
sbb
and
cld
jg
add
into
cs
cmp
test
lahf
out
jns
push
and
sti
shlb
cmp
xchg
fnstcw
bound
notl
orb
jns
or
bsf
and
sbb
mov
cld
in
lods
sbb
fisubs
popf
les
sbb
cltd
jmp
adc
ret
and
fdivrl
mull
and
call
mov
xchg
and
adc
cli
cltd
ja
sti
into
mov
push
inc
movsl
adc
in
sub
in
stc
xor
into
pop
push
cmp
movsb
jne
pop
inc
add
inc
push
xchg
inc
cmp
mov
sub
shlb
int
int
add
ss
pushf
loope
lods
insb
inc
mov
jmp
shrb
hlt
and
push
hlt
pop
mov
push
cltd
fsub
pop
push
ret
lods
aad
subb
cmp
jmp
jecxz
xchg
insb
test
int
aas
mov
lret
mov
gs
ss
pop
pusha
ficoml
in
shll
or
mov
addr16
xor
push
mov
and
enter
jge
adc
les
cmpsl
xlat
lret
adc
cmp
or
xorl
pop
mov
fcmovbe
pop
iret
dec
fidivrl
and
push
icebp
inc
or
addb
out
pushf
sti
pop
mov
inc
mov
and
stos
sub
imul
add
mov
dec
stos
and
outsb
insb
push
mov
daa
lods
ret
pop
ret
dec
xchg
idiv
test
in
mov
in
push
sahf
xor
and
stos
mov
inc
inc
nop
inc
xor
mov
xor
add
test
jmp
je
in
xchg
jno
and
pop
sbb
and
lods
cli
push
test
add
or
fsubrl
jmp
dec
lock
outsl
arpl
movsl
fsubrp
sub
cmp
call
arpl
pop
fnstcw
insl
xchg
test
fwait
pop
pusha
loopne
push
inc
cmp
fwait
dec
popf
pop
shlb
push
xlat
and
into
scas
rclb
stc
shl
ret
pop
repz
loop
fwait
sbb
pop
scas
xlat
gs
out
out
xlat
sub
repnz
fldt
add
cmpsl
hlt
xchg
cli
stos
test
push
pop
test
or
sahf
inc
test
aaa
jle
insl
outsl
or
or
sub
and
movsl
clc
mov
or
xchg
push
dec
ret
fimuls
mov
pop
cs
std
pushf
std
mov
aaa
xor
or
aaa
xor
scas
and
ret
aam
popa
push
xlat
outsl
sbb
mov
mov
std
cmp
mov
pop
mov
sbb
xor
mov
xchg
aaa
lods
pop
xor
mov
mov
scas
xchg
fwait
or
xor
aas
jae
cwtl
lcall
int3
pop
sbb
test
mov
adc
cmpsl
mov
push
int3
notl
push
repz
enter
out
int3
in
test
ss
mov
cmp
mov
cs
ds
imul
xor
loopne
mov
frstpm(287
aad
cmc
scas
arpl
add
mov
lcall
and
pop
pop
push
sub
int
mov
dec
push
mov
cmpsb
icebp
je
add
jmp
fs
mov
xchg
mov
out
js
xchg
push
cmpsb
push
xor
rolb
enter
inc
ljmp
gs
and
fstps
cmp
into
inc
xchg
js
push
divb
test
in
jmp
aas
mov
in
inc
xchg
inc
push
lcall
rclb
lods
outsl
mov
xchg
les
imul
sti
mov
ds
and
test
xchg
imulb
sub
adc
mov
lahf
pop
jge
and
push
loope
sbb
xchg
es
shlb
inc
mov
into
aaa
xchg
add
xchg
push
ret
insl
xlat
popf
loope
adc
cmpsb
mov
lcall
and
push
testb
fstps
popa
sub
lock
jns
mov
addl
insl
or
jno
push
add
test
imul
add
fnstsw
leave
cli
sbb
cmp
movsb
mov
or
cmpsl
cwtl
loop
mov
rorl
mov
cmp
sbb
push
dec
loopne
pop
pop
xchg
and
jmp
pop
jl
mov
mov
out
or
jb
inc
mov
push
and
jl
subb
or
pop
test
push
mov
add
sbb
cmp
fstpl
push
stos
imul
out
push
stos
je
ja
sbb
negl
dec
lahf
push
dec
cli
jno
aam
or
cli
mov
sub
push
sahf
scas
add
xor
adc
xlat
add
pusha
fldcw
push
cld
xor
repnz
mov
cmp
push
or
mov
mov
sub
mov
sbb
aas
pop
frstor
jl
loopne
jmp
mov
jo
leave
mov
cwtl
push
inc
sbb
adc
daa
pop
xor
sarl
and
fimuls
lea
insb
in
popf
js
mov
sbb
jns
enter
or
rcrb
add
sahf
mov
jnp
ljmp
sub
fwait
dec
or
xchg
mov
adc
nop
and
call
cmp
sub
mov
and
ljmp
aaa
mov
xchg
dec
dec
jno
daa
ljmp
std
lret
loop
cmp
xor
fcompl
jg
cmpsl
mov
jl
sahf
mov
cmp
shrl
or
hlt
pop
and
lahf
pusha
movsb
dec
lea
xchg
mov
mov
test
insl
sbb
push
xorb
xchg
add
outsb
std
jnp
push
adc
lods
into
mov
imul
sbb
mov
shl
sub
mov
pop
bound
jnp
or
jnp
mov
aam
scas
push
icebp
inc
loopne
xchg
xor
mov
ret
xlat
xlat
data16
inc
scas
sbb
xchg
imul
out
in
inc
lret
push
rclb
and
sbb
inc
ljmp
in
sbb
jp
orl
xchg
push
pop
sarl
sub
loop
loop
fwait
and
add
ret
jl
xor
jg
sbb
iret
hlt
mov
inc
add
mov
sbb
mov
inc
mov
jb
sub
lds
dec
fucomip
psubsb
fstpl
and
add
mov
ljmp
aas
inc
cs
lret
aas
sub
xor
push
inc
dec
stos
ret
movsb
orb
add
inc
push
push
popa
test
imul
mov
js
pop
pop
addr16
sbb
int3
or
add
sub
push
cmp
pusha
dec
cmp
js
adc
sub
mov
mov
lret
repz
dec
loopne
pop
rolb
cmp
gs
dec
push
add
pop
inc
mov
xchg
cmpl
xor
cmc
popa
pop
mov
out
mov
adc
pop
jg
xor
leave
repz
jo
mov
das
das
lahf
cld
stc
xchg
jbe
test
push
outsb
mov
sub
test
pop
jle
lods
aad
xchg
xchg
and
sti
xorb
pop
mov
dec
lcallw
mov
fwait
insl
mov
dec
adc
or
pusha
adc
push
ss
mov
jmp
sub
lret
arpl
movsb
sbb
pop
add
les
inc
adc
and
mov
pop
imul
add
icebp
loop
popa
pop
stos
adc
xchg
sub
fnstsw
insb
scas
jp
aad
mov
add
push
stos
jno
xor
inc
fsts
fistps
mov
and
sti
outsl
loop
cli
sub
sub
jae
dec
fistl
xchg
in
or
in
and
push
lret
inc
dec
in
jnp
aas
ret
cmpsl
pop
dec
inc
jb
sub
xchg
lcall
addl
stc
bound
mov
mov
int3
stc
pop
xchg
pop
push
inc
jo
sti
lea
jg
les
and
dec
cli
mov
jmp
pushf
imul
shlb
das
cs
mul
and
pop
gs
imul
jmp
mov
add
mov
adc
jl
jne
push
xchg
clc
jbe
in
in
jp
and
pop
shrl
outsl
jo
not
xor
ds
and
cli
shrb
pop
in
movsl
jnp
pop
fidivl
lret
lret
out
inc
xchg
sub
data16
xor
fadds
cmpsl
push
push
sbb
insw
push
cmp
leave
cld
and
jg
mov
insl
lret
sub
popf
popa
dec
dec
push
aam
leave
adc
mov
mov
mov
cltd
sbb
adc
sbb
shr
aaa
sahf
ljmp
fiadds
dec
scas
shrl
pop
push
xchg
addr16
xchg
xchg
dec
cmpsb
adc
pop
and
aaa
in
inc
jno
addr16
sbb
scas
cmp
add
outsb
xor
mov
mov
mov
mov
cmp
jge
push
pop
out
xchg
jb
mov
xchg
int3
xchg
adc
pop
mov
das
pop
in
flds
add
and
mov
jo
xchg
mov
test
and
jecxz
xchg
sahf
mulb
inc
add
inc
rcl
jns
fldenv
mov
pop
jnp
mov
push
inc
add
push
mov
decb
cltd
roll
inc
testl
push
push
rclb
jge
stc
das
sbb
daa
or
add
xlat
pop
icebp
cmp
sub
push
mov
mov
mov
data16
sub
mov
aam
adc
xor
mov
insl
cmp
xchg
push
push
insl
movsb
icebp
ret
sub
xor
push
push
pop
shl
cmp
decb
mov
dec
ds
out
pop
push
clc
ret
jnp
and
mov
add
shr
jae
test
dec
push
stos
outsl
stos
dec
xchg
shll
test
inc
scas
jnp
xchg
scas
cmp
pop
mov
jb
sub
sub
rcrl
or
loop
ljmp
pop
cmpl
mov
fwait
dec
xchg
jbe
ror
adcb
mov
mov
addb
jno
xchg
cmp
loop
mov
call
dec
sti
mov
aas
jno
push
roll
test
or
cltd
adc
lods
pushf
jo
shrb
xor
fs
or
xor
iret
outsb
jbe
and
ss
dec
lods
xor
test
stc
add
fimuls
into
inc
mov
outsb
mov
inc
cltd
adc
dec
leave
dec
push
cmp
gs
je
adc
mov
into
stc
jnp
lods
push
call
xor
addr16
outsb
mov
divb
cmpb
ficomps
xchg
push
movsl
xor
or
mov
scas
pop
add
inc
and
das
pop
xchg
push
mov
sahf
insb
aam
loopne
imul
xor
xlat
rorb
pop
inc
xchg
push
inc
loope
xchg
xor
and
aam
sbb
fsub
sub
aaa
es
sub
push
enter
insb
test
in
jmp
insl
dec
jnp
fisubl
adc
or
adc
inc
xor
dec
mov
fdivrs
xor
movsb
ljmp
mov
shll
push
push
jno
mov
rclb
adc
and
mov
push
bound
data16
push
sbb
push
rcrb
sbb
ds
ss
stos
out
imul
xor
adc
out
mov
aas
push
fprem
xchg
and
fs
arpl
mov
leave
fists
add
adc
sub
mov
scas
popf
rol
popf
push
mov
fists
fcoml
add
sbb
or
sbb
push
jns
shrl
dec
mov
adc
lds
mov
shll
jmp
flds
pop
sbb
int3
add
mov
add
lret
addb
js
out
and
movsb
pop
lds
xchg
into
cmp
stos
mov
cmp
cwtl
cmpsl
iret
cmpsl
in
inc
int
dec
push
cli
inc
popf
add
jecxz
or
stos
lds
dec
fimuls
lock
loopne
lods
mov
adc
jl
xor
jo
daa
mov
bound
pop
ja
lret
fisubrs
dec
int
out
push
xchg
cmpsb
xor
add
pop
adc
or
sub
or
insb
rcrb
ds
add
ficoms
mov
add
dec
cmpsb
inc
jns
mov
cwtl
inc
dec
movsb
in
stos
iret
and
dec
xlat
sub
stos
inc
xchg
fstpt
or
imul
decl
dec
sub
cs
cmc
jecxz
push
out
pop
sub
sar
cmpsl
xor
imul
aam
lcall
psllw
je
add
push
outsb
movsb
enter
push
loopne
imulb
and
push
and
dec
scas
cltd
in
mov
or
mov
test
mov
ja
dec
in
stc
or
add
shlb
inc
jl
test
pop
pop
dec
adc
mov
jg
inc
mov
fcoms
icebp
mov
frstor
lea
loop
jecxz
pop
sti
mov
outsl
loope
mov
cli
adc
jb
shrb
fwait
sub
sahf
cmp
add
roll
or
mov
pop
fisttps
mov
test
xchg
mov
arpl
insb
add
xchg
pop
sbb
pop
into
inc
jns
loop
loopne
jl
in
xor
aas
xchg
inc
jae
cmp
inc
jns
inc
sbb
nop
mov
or
and
jbe
mov
stos
or
inc
sub
xchg
push
shrb
xchg
gs
jb
daa
inc
sbb
mov
cmp
movsb
inc
repz
out
in
jae
adc
mov
add
cmp
mov
cmp
popf
dec
icebp
repnz
mov
or
enter
rolb
je
push
or
jmp
inc
std
jbe
push
testl
nop
outsl
or
out
sub
sub
enter
pop
add
mov
das
cmp
arpl
loope
inc
je
xchg
sbb
add
addr16
outsl
sbb
add
or
and
lret
push
dec
add
or
or
out
cmp
nop
jl
aaa
jo
mov
std
inc
in
ficoml
sub
out
ficompl
push
lods
add
mov
jecxz
and
psraw
pop
pop
int
insl
testb
jnp
int3
or
and
nop
push
out
mov
sbb
js
cmp
lock
mov
rclb
mov
aas
outsb
and
jno
lcall
inc
sub
pop
jge
or
push
fwait
out
cmp
jno
sbb
ljmp
mov
inc
dec
out
shlb
dec
pop
lods
push
fwait
stos
push
push
mov
mov
aam
mov
mov
sub
cmp
test
push
in
das
dec
repz
sub
rcl
sbb
insb
stos
mov
incl
test
jb
aas
lea
xor
dec
stc
adc
and
xchg
enter
shll
jne
movsl
aad
rorb
dec
loop
xchg
xchg
out
lret
push
xchg
lret
cwtl
sub
lahf
sub
idivb
and
jle
cwtl
scas
mov
mov
adc
jno
je
push
cmc
xchg
out
mov
idiv
mov
ss
icebp
add
stos
xchg
cltd
scas
fidivs
ds
dec
xchg
andl
out
pop
out
leave
test
mov
ljmp
cmp
jecxz
test
rcl
cmp
ljmp
push
add
hlt
sub
pop
je
movsl
jle
xchg
mov
lcall
jecxz
mov
mov
jge
pop
inc
bnd
xchg
push
mov
xor
pop
adc
pop
mov
dec
mull
push
and
arpl
std
xchg
and
imul
sub
push
lcall
cli
leave
lods
imul
jl
adc
push
sbb
cmp
xchg
mov
ficomps
jns
mov
imul
push
sti
sub
push
cld
inc
cltd
lahf
xlat
mov
lods
mov
mov
ss
in
jns
cmc
movsb
and
scas
mov
lret
mov
rcl
or
push
mov
mov
ljmp
repnz
dec
imul
cmp
enter
jno
and
cwtl
jge
dec
or
mov
outsl
ret
pop
pop
rcl
imul
lds
sub
lret
les
jmp
das
pop
test
dec
cmp
dec
cld
dec
inc
mov
aas
mov
cmpsb
mov
adc
out
and
inc
cmp
push
sti
std
cli
adc
push
mov
vmovss
mov
ds
jg
inc
leave
ficoms
xlat
popa
adc
movsb
mov
dec
loop
imul
pop
repnz
jnp
scas
in
jge
fsubp
out
xchg
sbb
andps
mov
inc
int
or
movl
jns
push
lock
mov
mov
enter
ret
into
lock
repz
push
dec
xchg
daa
out
aaa
pop
mov
gs
lock
xchg
add
or
dec
lods
mov
pop
mov
aam
lods
testb
jno
lods
xchg
sub
les
lss
ret
mov
push
or
dec
push
cmpsl
lds
xchg
stc
lcall
or
ficoml
or
loope
lahf
loopne
fsubs
pop
test
enter
ret
popa
mov
xchg
pushf
mov
nop
pop
clc
xlat
fistl
jns
sbbb
fs
out
xor
push
jg
dec
clc
xlat
cld
in
pop
cwtl
dec
daa
sub
push
jp
shll
shr
into
arpl
jne
pop
pusha
pop
test
push
sbb
orl
pop
sub
aas
xchg
mov
dec
icebp
xchg
bound
mov
out
cmp
sbb
cmp
add
jnp
jo
gs
inc
fstpt
mov
pop
arpl
pop
pop
add
jmp
sbb
data16
ss
jno
inc
enter
cmp
cmp
fisubrl
sbb
dec
es
outsb
cmpsb
push
scas
in
ss
cmp
xchg
roll
fwait
clc
enter
jno
in
popa
xor
adc
insb
repz
cmp
add
cmp
jns
push
jecxz
adc
test
mov
mov
pop
mov
add
addl
xorl
push
ret
jp
inc
mov
and
sub
jmp
inc
shrb
jmp
or
jae
sbb
cmp
or
pop
dec
mov
scas
lahf
mov
nop
dec
inc
mov
jge
mov
mov
sub
jle
dec
inc
fisubrs
mov
xchg
mov
pop
and
lret
sbb
loopne
cli
aaa
mov
leavew
lods
mov
xor
ja
ret
or
and
mov
stc
fdivs
mov
insl
fisttpll
hlt
jo
nop
pusha
leave
ret
stos
loop
push
push
inc
or
outsl
cli
inc
sbb
sti
ret
dec
aad
and
or
inc
mov
and
adcb
mov
pushf
jl
cmp
cmpsb
das
les
xchg
pop
scas
mov
mov
push
gs
xor
mov
hlt
pop
sub
or
test
imul
mov
pop
int3
cltd
or
xchg
sbb
cmp
cs
jae
aaa
adc
and
add
loopne
ror
mov
ret
adc
pop
sub
fnstenv
mov
sub
dec
mov
fs
fs
fstp
imul
add
xchg
mov
faddl
dec
out
or
sub
mov
mov
sub
push
and
aaa
imul
dec
stc
dec
pushf
shlb
or
test
jge
cmpsb
std
inc
mov
sub
fwait
scas
add
in
int
adc
outsb
test
daa
xlat
insl
shrb
repz
lds
xor
test
inc
aas
and
ret
insl
repz
sahf
pop
push
out
movsl
mov
pop
push
cmp
pop
and
mov
enter
add
fisubs
or
jbe
in
stos
fs
push
loop
dec
leave
mov
stos
xchg
xor
das
std
daa
sbb
fwait
nop
cltd
inc
dec
inc
xchg
in
mov
je
vpmacsdd
jne
les
les
or
mov
dec
loopne
push
fwait
jno
test
add
push
xchg
cmp
ljmp
sbb
mov
mov
cltd
dec
xchg
adc
addr16
jae
sarb
loope
jle
lods
mov
inc
scas
xchg
aaa
enter
mov
das
test
mov
iret
fdivs
fs
and
loop
sbb
push
fildll
std
sbb
mov
jno
pop
pop
jge
dec
outsb
xchg
jmp
into
rolb
imul
insb
lods
jge
sbb
lods
mov
inc
lea
or
add
lcall
adc
inc
mov
xchg
in
lahf
hlt
adc
mov
sar
push
sub
insb
mov
hlt
jmp
out
cmp
sub
mov
push
lods
fmuls
fmuls
test
addb
test
fwait
dec
cmp
ljmp
pop
xchg
xchg
fldlg2
add
out
lea
nop
jg
in
pop
sbb
imul
movsb
pop
scas
xor
cmp
adc
inc
sub
xchg
das
insb
imull
bound
xor
xchg
sbb
adc
and
dec
pop
jmp
int3
pop
lahf
xchg
mov
mov
movsb
fs
xor
cmp
add
out
nop
nop
and
pop
jle
mov
and
jb
and
test
dec
cmp
movsl
jg
sub
mov
in
cld
shrb
int
mov
jns
sub
rcrb
xor
movsb
je
adc
mov
ret
lahf
lahf
push
and
mov
ds
xlat
addr16
or
dec
push
jo
xor
push
jno
fwait
mov
sub
fldenv
jge
out
sub
mov
popa
push
lahf
pop
cmpsb
gs
xchg
and
in
mov
mov
push
popa
pop
dec
xchg
xlat
or
jne
and
inc
inc
jle
divb
mov
call
mov
fs
or
sbb
inc
adc
fdivrl
imul
inc
xchg
subl
or
or
pushf
in
cwtl
jmp
cli
mov
imul
scas
lahf
fnstenv
add
mov
jp
jbe
leave
push
xchg
xchg
enter
cmp
dec
test
int
mov
out
jns
dec
pop
test
mov
shll
cld
xor
mov
dec
cmc
rcrl
mov
or
push
pop
push
call
cli
jl
or
adcl
scas
in
filds
out
inc
nop
cmp
sar
test
and
push
lret
loop
pop
scas
pop
iret
jbe
icebp
loopne
addr16
and
ds
stos
adc
mov
shlb
xchg
mov
sub
addb
inc
and
jae
pusha
mov
sub
cmp
aas
faddl
add
stc
ja
es
je,pt
stc
loope
jno
inc
push
rclb
mov
or
sub
clc
inc
or
sub
jge
sti
jne
sbb
pop
cld
mov
mov
sbb
mov
xor
sahf
arpl
aad
push
xchg
pop
push
mov
neg
jge
out
cmp
stc
loop
or
inc
sub
and
push
je
xor
jp
inc
push
outsl
push
or
int3
sahf
rcll
addr16
jae
test
out
test
lods
nop
xchg
pop
and
sbb
insl
cmc
cmp
mov
and
dec
inc
sub
pop
mov
cmpsl
and
cld
and
outsl
add
imul
push
lods
repnz
cwtl
mov
ss
cmpsb
hlt
mov
xor
les
cmp
sub
dec
in
cmc
fwait
or
sub
adc
outsl
hlt
cmp
mov
test
mov
mov
aam
pop
dec
mov
test
and
sar
mov
mov
and
out
push
mov
mov
je
popf
ret
sahf
or
scas
imulb
popf
stos
jnp
aaa
mov
bound
in
mov
cmc
in
push
outsb
inc
mul
imull
fcomps
rcll
outsl
adc
mov
les
sub
mov
lcall
lret
xchg
xorb
and
push
push
add
jnp
ret
lods
aas
not
sub
in
xchg
sarl
data16
popa
ds
dec
xor
xor
test
mov
jo
cmp
xor
shlb
je
jb
inc
push
repnz
xor
popf
mov
xor
inc
rorb
fstpl
test
push
cmpsl
outsb
adc
mov
aad
jl
cmp
push
xchg
dec
adc
mov
arpl
popa
or
xchg
xor
inc
stos
and
xor
and
iret
inc
mov
cmp
dec
xor
cmp
xchg
pop
mov
ret
push
cmp
dec
mov
lcall
test
sbb
rorl
pop
aaa
shrl
pop
add
into
movsb
mov
add
dec
and
sbb
lcall
and
jmp
mov
jg
xchg
push
out
sarl
inc
mov
xchg
push
icebp
rorb
insl
loope
add
int
pop
add
test
jnp
xor
jns
mov
or
in
bndstx
and
or
mov
inc
aas
rep
je
pop
mov
sub
dec
cmpsl
mov
gs
bnd
adc
pop
mov
cmp
lahf
pop
jmp
jmp
xchg
popf
test
mov
adc
lret
mov
push
clc
aam
sub
sub
shlb
hlt
and
or
addb
imul
rcr
and
jbe
nop
and
sbb
fs
push
jo
inc
in
bound
inc
xor
or
sbb
dec
sbb
ficompl
adcl
pop
mov
dec
pushf
cli
mov
and
sbb
mov
outsl
jmp
jge
dec
test
mov
mov
in
call
and
or
push
pop
or
sahf
mov
adcl
ss
pushf
and
xchg
push
fnstcw
jbe
jne
xchg
lea
push
mov
mov
sub
mov
sahf
cmp
xlat
mov
loop
out
addps
xor
in
push
lods
xor
insb
cmp
in
dec
addr16
pop
mov
pop
inc
ret
popa
adc
dec
mov
jecxz
xchg
aad
nop
push
and
lret
xchg
dec
mov
cltd
out
fnstenv
in
mov
hlt
fs
nop
mov
jbe
sbb
add
ljmp
nop
xchg
cmpsl
repnz
xor
xchg
jae
mov
pop
jb
stos
je
or
jge
dec
push
icebp
int
aam
adc
insb
int3
xchg
or
mov
xchg
xchg
inc
rcrb
mov
mov
jecxz
pop
mov
in
adc
jnp
xor
aam
sub
lea
mov
pop
inc
jb
test
add
fnstcw
jnp
xchg
loop
xchg
ja
xchg
cli
sub
adc
fidivrs
cltd
xor
ret
jbe
adc
sbb
adc
jmp
pushf
popl
jnp
dec
nop
cli
adc
scas
and
mov
dec
push
ja
mov
jg
out
in
mov
arpl
test
insb
sar
nop
das
push
ja
dec
add
inc
sbb
lods
pop
sbb
or
out
cmp
sbb
outsl
dec
aas
enter
je
jmp
push
push
daa
addr16
sarl
inc
adc
mov
adc
lret
ret
testb
jle
xchg
push
filds
mov
inc
jne
rcrb
sbb
sti
sub
testb
sbb
rcr
and
sarb
repnz
mov
adc
shl
inc
in
cmp
adc
ficompl
xchg
loope
sti
loopne
out
test
popf
aad
out
mov
mov
and
bound
ljmp
hlt
sbb
cs
mov
lret
rclb
mov
cld
jne
add
mov
inc
cli
repz
leave
in
cmp
xchg
gs
push
lods
ret
cmpsb
cli
jmp
vpshufb
hlt
out
add
cvttps2pi
inc
jmp
xor
and
in
pop
mov
push
fisubl
push
pusha
and
aaa
jle
mov
test
dec
mov
int
mov
aas
aaa
mov
into
mov
mov
rolb
mov
pop
faddp
adc
adc
loop
push
or
or
mov
mov
inc
add
outsl
jmp
pop
test
mov
in
jle
cmpl
repnz
out
cmp
add
sub
cmp
xchg
daa
mov
adc
xor
popf
jmp
cli
mov
xor
outsl
std
lock
les
push
sahf
fdivl
stos
enter
inc
scas
lret
aas
call
push
pop
lock
adc
sti
xor
pop
loop
push
lds
bound
xor
stc
or
cmpsb
test
int
and
inc
xchg
iret
aad
xchg
pop
xor
jae
add
mov
dec
ret
pop
int3
ret
int3
aam
cs
fnstsw
ljmp
and
pop
pop
mov
mov
add
inc
lock
add
mov
dec
xchg
mov
int
mov
data16
inc
sub
cli
fbstp
scas
lods
aas
inc
xor
gs
lds
mov
dec
mov
out
ljmp
rclb
adc
adc
xor
push
mov
push
in
mov
lods
push
faddl
xor
out
or
xchg
xchg
out
insl
leave
xor
dec
or
jecxz
mov
add
adc
fwait
xor
xchg
js
mov
xchg
dec
aas
rorl
pusha
push
outsb
fstpl
mov
jbe
ds
cmp
xchg
mov
pop
test
pop
sbb
lds
sub
mov
data16
inc
ds
and
sarl
mov
dec
xlat
mov
ret
ficompl
aas
ret
cmp
repz
cmc
sbb
cmp
xchg
dec
and
int3
dec
and
mov
xor
push
and
sbb
inc
test
cmpsb
or
xor
in
xchg
xchg
inc
push
or
andl
imul
push
mov
inc
outsl
xlat
add
sbb
xchg
sub
leave
ljmp
ret
xchg
inc
and
lcall
loopne
jecxz
int3
xchg
and
adc
fldenv
sbb
cmc
xchg
es
pop
inc
jg
outsl
mov
imul
mov
adc
and
sub
inc
loop
sbb
dec
lret
dec
mov
cmp
pusha
push
cmpl
sbb
cmp
xchg
stc
aad
sarl
adc
mov
xchg
mov
cmp
call
xor
test
sahf
jecxz
sbb
jbe
das
push
add
mov
mov
push
pop
in
add
fdivp
pop
cmp
mov
jmp
sbb
sub
in
das
fwait
loope
jnp
xchg
out
clc
loop
lret
das
nop
sub
cmc
clc
leave
add
movsl
cmp
fcom
fsts
ret
ljmp
push
test
aas
push
int
jno
js
rorb
cld
push
aad
inc
sbb
movsl
jo
out
and
lcall
aas
sbb
jbe
out
popf
int3
sti
sub
jo
loopne
jle
sub
cmp
push
adcb
push
mov
push
sub
pop
dec
pop
mov
push
xchg
push
mov
test
pop
xchg
mov
ja
dec
outsb
jbe
out
mov
ss
push
cmp
jmp
lods
addr16
xorl
xor
mov
adc
fbld
popf
int
shrb
pop
xor
mov
jne
jno
mov
mov
xor
pop
pop
int3
ror
shll
jecxz
bound
adc
aas
dec
jmp
and
sub
insb
call
xchg
lods
xor
cmp
push
mov
xchg
lret
loop
imul
jb
inc
xchg
or
into
inc
add
lcall
shlb
xchg
fsub
pushf
mov
inc
push
scas
sbb
adc
dec
pop
aas
jg
pop
data16
push
adc
mov
test
jmp
push
add
aad
and
int
test
adc
data16
ss
mov
push
xor
or
cld
aaa
push
jp
or
dec
cld
loop
fsubr
mov
add
mov
in
inc
lret
dec
sub
inc
outsb
jl
cmp
outsb
mov
lcall
bound
or
push
cltd
stc
lds
and
xlat
push
outsl
inc
popa
outsb
ds
sub
nop
fidivrl
idivb
std
icebp
imul
xchg
fstpt
subb
mov
or
cmp
xor
out
sub
dec
sub
jno
rclb
mov
nop
in
add
addr16
mov
pmulhw
lds
inc
loope
mov
daa
push
mov
mov
shlb
mov
push
pop
mov
pusha
fistl
add
push
fistl
daa
sbb
adc
fnstcw
pop
pop
nop
stc
mov
jbe
sbb
stos
dec
pop
incb
jmp
in
sbb
push
sub
jl
stos
adc
js
mov
jle
or
cmpsl
pushl
xor
cmpsl
fwait
cltd
ss
adc
arpl
movb
cwtl
loopne
dec
sbb
fisubrs
push
inc
cltd
cmpb
push
mov
test
mov
rcrl
and
xchg
sub
mov
hlt
fwait
mov
call
sahf
outsb
icebp
leave
cmp
cli
mov
inc
ja
mov
inc
lods
aas
es
cmp
add
jne
dec
rorl
outsl
push
mov
add
xor
movsb
je
xchg
inc
sub
rcrb
leave
jbe
mov
or
out
mov
pop
je
push
cmpsb
test
mov
sahf
mov
mov
repnz
dec
fnsave
aaa
fmull
pop
xor
mov
movsl
movsl
inc
imul
popf
push
sbb
push
inc
adcl
pop
cmp
cltd
push
popa
inc
push
adc
add
movsl
cli
mov
adc
and
test
imul
push
testl
xor
mov
adc
rcrb
pop
out
int
push
daa
bound
sarl
jmp
sbb
and
imul
adc
adc
add
lcall
aaa
jns
add
mov
jo
lret
fwait
outsb
in
mov
test
push
add
ret
cmp
mov
prefetch
roll
test
pushf
fwait
int
inc
lock
sbb
or
xor
or
cmpsl
repnz
push
mov
jge
dec
daa
js
outsl
jp
fwait
iret
mov
xchg
mov
dec
add
sbb
inc
scas
cwtl
sbb
outsl
out
sbb
push
repnz
sahf
mov
xchg
dec
call
xor
pop
test
call
out
jge
dec
sbb
inc
adc
out
mov
imul
sbb
xor
sub
dec
das
or
std
cmp
lods
insb
clc
inc
call
repnz
adc
lea
push
or
push
jl
adc
pop
adc
xchg
fs
leave
sub
outsb
xor
out
mov
xchg
incl
mov
push
icebp
jae
lea
cli
push
xor
sub
repnz
ret
loope
inc
movsl
push
push
inc
push
lcall
xor
icebp
jge
outsl
jmp
ds
fwait
inc
shlb
stc
stos
mov
sub
sbb
pop
popa
insl
subl
and
or
in
and
and
pop
pop
mov
pushl
je
imul
and
pcmpeqb
or
add
mov
mov
fwait
inc
movsb
adc
add
ss
cmp
into
mul
pop
arpl
cmp
sbb
pop
mov
and
les
popa
fidivl
mov
mov
push
xor
mov
hlt
js
inc
cs
xchg
divl
ds
mov
lcall
fbstp
cmp
dec
popa
inc
aas
cli
insb
push
jbe
dec
add
mov
dec
cmpsl
es
bound
fstps
adcl
fmulp
enter
call
mov
pop
mov
arpl
movsl
mov
in
xchg
inc
xchg
pop
imul
imul
cmp
and
mov
clc
or
and
std
sbb
mov
ljmp
daa
insl
popa
clc
fimull
jmp
mov
aaa
inc
fdivs
xor
cmpsb
div
jbe
das
sub
in
push
fnstsw
inc
push
shlb
jle
adc
cmp
pop
aaa
inc
add
mov
cmpsb
sarb
mov
stos
loopne
mov
int
lcall
loop
rorb
outsl
fsts
push
cmp
clc
shll
xchg
and
mov
jecxz
sub
sbb
mov
jo
mov
rcll
cli
ja
lahf
mov
inc
popw
insl
test
aas
push
inc
es
arpl
and
jmp
shll
sbb
sbb
sbb
or
xor
inc
xchg
mov
jnp
adc
add
push
arpl
mov
clc
xor
aas
jns
or
test
fs
jnp
xchg
pop
mov
mov
je
and
pop
mov
or
mov
ss
test
int3
sbb
mov
cltd
pop
sub
xchg
mov
sub
sti
sub
ja
add
mov
ret
dec
mov
enter
stos
mov
js
out
dec
sbb
test
cmpl
lret
or
js
mov
gs
lds
stos
repz
dec
xchg
rorl
imul
mov
or
cld
sub
popf
sbb
lgs
scas
pushw
js
fcomps
ret
imul
and
and
xor
lcall
icebp
inc
aaa
pop
test
dec
stos
je
push
in
pop
adc
or
aad
cmpsb
mov
mov
mov
std
and
jecxz
xlat
aaa
push
or
clc
sub
roll
jne
pop
out
sub
sarb
mov
sarb
fs
aaa
lods
pop
dec
mov
push
iret
sub
in
pop
fs
insl
pop
cmp
sub
adc
mov
add
xor
push
mov
mov
xor
inc
mov
test
push
repz
dec
cmpsb
ss
mov
xchg
and
stos
repz
test
into
add
mov
push
nop
lret
jnp
inc
lds
in
loope
cmc
cmp
inc
or
jns
fidivs
jbe
add
sub
mov
sub
adc
dec
xlat
ljmp
xor
je
mov
add
push
push
jb
pop
js
or
loopne
jns
mov
rcl
into
mov
in
loope
orl
and
sbb
and
in
aas
fnstsw
fldenv
xchg
into
into
xchg
int3
mov
in
stc
adc
das
jmp
stos
xor
xor
mov
xorb
mov
mov
aam
cmp
cld
adc
stos
ret
sbb
or
or
mov
shr
rcrb
jl
mov
mov
lds
fistpll
mov
inc
fstl
mov
ja
or
imul
or
and
xor
dec
jo
xor
adc
mov
cmp
adc
mov
xchg
inc
mov
push
mulb
cmpsl
outsl
jnp
ficoms
pop
jae
fwait
test
add
cwtl
das
insl
mov
cltd
testl
rep
imul
jno
xor
loop
jl
ret
insl
add
dec
jle
lods
sarl
dec
push
cmpsl
aad
daa
stos
imul
push
or
sbb
es
es
inc
pop
inc
xchg
movd
lods
sub
in
jl
inc
lret
mov
in
jg
aad
cltd
inc
rcr
mov
cmp
xor
test
ffreep
push
es
jmp
imul
pop
sbb
out
fstpl
pop
adc
xor
and
mov
xchg
adc
and
rcr
lret
scas
int3
sbb
mov
lods
arpl
orb
push
pop
ret
cmp
lret
loopne
jno
push
adc
mov
xchg
or
mov
pop
add
xor
dec
push
mov
push
insl
mov
jl
sahf
je
xor
test
push
roll
adc
adc
std
mov
jmp
cmpl
iret
xchg
lcall
divl
or
mov
lds
adc
in
pop
fwait
cmp
insb
jae
fiadds
psubb
out
cli
insb
inc
clc
sbb
clc
out
adc
push
mov
push
int
rol
aam
cs
push
cs
xor
sub
adc
cmp
movsl
jl
push
mov
adc
push
std
push
stos
push
daa
das
bound
pop
cmp
xchg
cld
xchg
lret
cmp
sub
xor
jne
mov
mov
dec
or
sub
je
test
rorl
loopne
lods
sub
lea
dec
mov
mov
popf
bound
fldl
xor
jne
mov
rdpmc
xor
das
mov
repnz
ljmp
cwtl
movb
test
pop
ljmp
push
jl
mov
mov
mov
jmp
lds
icebp
test
adc
cmp
jns
fldl
test
sbb
xor
nop
inc
outsb
pop
jo
fists
inc
add
sarb
pop
mov
repnz
adc
xor
or
out
fucomip
pop
cld
push
ljmp
push
xchg
js
push
int3
aad
xchg
aad
xchg
and
rcrl
sbb
sub
sti
sbb
stos
or
aad
dec
xchg
clc
ror
in
or
sub
sahf
cmp
adc
push
xor
add
ds
int3
inc
movsb
jo
pop
inc
sbb
jge
pop
addr16
xchg
movsl
inc
int3
cmp
push
cld
xor
xchg
fs
dec
adc
leave
adc
sbb
adc
mov
adc
xchg
sarb
add
mov
imul
sub
cmpsl
scas
popa
pop
movsl
inc
iret
xchg
loopne
repnz
pop
mull
jbe
cmp
inc
das
ds
scas
or
and
insl
dec
out
mov
xor
inc
fs
fdivrp
lret
test
dec
fs
rcll
ja
jge
rcrl
test
fcmovb
pop
mov
outsb
sbb
frstor
leave
sub
xchg
xchg
jae
pop
iret
lea
ss
pushf
popf
lock
loope
in
inc
mov
int
xchg
sbbl
addr16
bound
mull
inc
cs
pop
or
push
push
mov
xor
mov
movsl
ds
inc
add
and
popa
lods
mov
jno
and
add
test
popf
das
mov
andl
mov
dec
movsl
cmp
mov
cmpsl
jbe
xchg
pop
xor
xchg
dec
add
dec
imul
imul
mov
je
cltd
stos
aas
out
test
xchg
js
dec
xchg
shll
aaa
mov
shlb
cli
or
les
insl
add
jmp
orl
jle
inc
hlt
add
nop
dec
push
fstpl
cmp
test
test
mov
outsl
and
xchg
loopne
mov
shrl
mov
adc
mov
mov
pop
xor
fmuls
rcll
or
outsb
je
xor
inc
mov
enter
testl
add
xor
mov
insl
mov
or
sub
cltd
cmc
jae
push
jecxz
bound
pop
aad
xor
lcall
push
xchg
jecxz
inc
leave
pop
ljmp
loop
mov
stos
jb
xchg
mov
mov
mov
faddl
push
jge
inc
jb
mov
add
aas
add
xchg
xchg
and
insl
in
fistpll
mov
pop
cmc
push
ds
adcb
rcll
xor
sarl
adc
cmpsb
xchg
pop
bound
sub
lahf
rcrl
cmp
pop
mov
sahf
mov
adc
pop
adc
les
call
outsb
icebp
addr16
shll
jns
mov
cmp
lret
pop
mov
adc
jle
add
mov
scas
dec
jno
movb
cltd
or
cmp
jae
fistpll
xor
cmpsb
push
ljmp
cwtl
add
mov
mov
fcompl
dec
jg
adc
out
jg
mov
jae
fcmovbe
imul
pop
ljmp
sar
or
fcoml
loopne
aad
dec
mov
ljmp
je
or
mov
jmp
adc
nop
pop
sbb
lret
std
xchg
mov
mov
xor
jo
fwait
or
add
xor
aaa
inc
push
mov
push
call
idivb
aam
dec
push
sti
pop
sub
dec
cltd
cli
cs
xchg
test
lds
loopne
popa
push
push
bswap
loope
xor
adc
cmp
xlat
add
and
xor
outsb
stos
je
inc
mov
fldl
pop
jmp
aad
aam
inc
pop
test
lods
gs
adc
jne
push
sbb
xor
in
jne
jo
stc
inc
clc
cmp
sti
andl
mov
push
pop
pop
inc
and
inc
sbb
mov
int
lahf
xor
stos
inc
mov
mov
cmp
fwait
in
lds
repnz
push
les
mov
pushf
leave
loop
push
addr16
scas
rclb
shll
icebp
xor
add
mov
inc
mov
imul
ret
out
xchg
xchg
dec
in
mov
shlb
add
xchg
jecxz
cli
sbb
fcoml
jp
jns
icebp
nop
out
rorl
adc
sbb
push
stc
scas
cmp
or
or
movb
jnp
xor
lret
pop
fstl
xchg
nopl
icebp
shrl
outsb
add
sub
and
insl
fcompl
loop
lods
movb
lret
pop
inc
xchg
add
hlt
out
sub
add
shr
mull
stc
dec
inc
sbb
dec
mov
push
imul
push
in
jno
push
add
fbld
sbb
pop
sahf
mov
lea
dec
inc
xchg
sub
ret
std
push
adc
outsb
jne
sbb
out
imul
nop
es
es
icebp
rclb
lret
add
adc
arpl
scas
aam
mov
out
js
dec
popa
call
adc
sbb
shrl
xchg
sub
pop
repz
lcall
mov
jmp
pop
daa
jg
and
adc
aad
sub
ret
inc
iret
xchg
jne
or
add
movsb
test
mov
xchg
adc
mov
fiadds
and
sbb
xchg
xchg
fcoml
xor
push
andb
mov
cmp
in
xchg
jge
sbb
icebp
sbb
or
scas
push
mov
jp
cli
loop
dec
xchg
pop
push
fnstcw
mov
stos
dec
dec
in
adc
or
jns
inc
shll
insb
push
sub
data16
fidivrl
adc
push
gs
cmp
rorb
repnz
xor
lds
in
push
and
jecxz
test
pop
mov
ja
dec
cmpsl
or
loop
nop
mov
xchg
cmp
jae
std
mov
adcb
cmp
jmp
mov
lea
fstl
das
cmc
std
lods
and
mov
adc
imul
push
jle
out
jae
xchg
mov
ret
fidivrl
add
les
inc
cwtl
push
mov
xchg
notl
adc
aad
jno
sbb
xchg
imul
shrl
inc
int
cmp
mov
jmp
aam
fsts
in
pop
mov
enter
and
call
aas
xchg
dec
add
fsts
adcl
rcrl
adc
fwait
incb
loop
xchg
cwtd
in
push
push
xor
iret
testl
je
cmc
loope
xlat
xchg
addl
rcl
icebp
fs
sub
jns
aad
push
inc
repz
sahf
inc
add
in
push
cmp
adc
fs
aas
testb
pop
mov
push
arpl
hlt
mov
sbb
clc
jl
outsl
inc
sbb
imul
lahf
xor
mov
mov
cmp
xchg
pop
xchg
jae
aas
mov
js
jle
push
pop
out
repz
mov
shll
stc
and
loope
pusha
aaa
mov
or
ret
stos
arpl
pushf
add
cmp
lret
and
sub
xchg
mov
mov
lret
and
jbe
add
add
and
inc
icebp
into
mov
popa
arpl
add
sub
sbb
xchg
test
pop
popf
cmpl
xchg
call
cmc
mov
andl
pop
dec
out
incb
sbb
push
mov
sub
mov
fisubrs
jb
ss
fldt
pop
sbb
fadd
mov
dec
pusha
lret
test
insb
sbb
xorb
jle
sbb
dec
push
jae
loopne
aad
dec
mov
out
xor
test
xor
jecxz
into
lock
mov
and
aaa
std
repz
loop
dec
dec
mov
inc
adc
sub
and
xchg
push
jbe
cli
call
aaa
cwtl
scas
jbe
out
adc
jg
daa
call
test
mov
aam
xor
test
scas
adc
test
hlt
ds
inc
adc
call
or
mov
jnp
test
out
leave
shrb
and
lods
fmull
test
and
cmp
jl
gs
das
movsb
or
mov
arpl
push
fs
scas
cmp
adc
out
pop
clc
xor
cs
shr
mov
das
movsl
setp
sti
andl
jecxz
pop
sbb
adc
pushf
gs
xorb
and
sub
mov
add
xchg
add
pop
sbb
push
mov
xchg
aas
add
js
pusha
push
xchg
mov
jae
gs
cli
mov
dec
in
sub
cmp
into
dec
lods
adc
aaa
outsb
dec
xor
sbb
fsts
inc
out
leave
cwtl
dec
push
ljmp
push
xchg
dec
mov
mov
leave
sub
jbe
sbb
mov
sub
jne
push
jne
pop
and
sbb
lahf
jl
addr16
and
pop
vmwrite
and
popf
dec
das
mov
sbb
pop
lock
rcrl
mov
jne
pop
aaa
and
xchg
outsl
cli
mov
jbe,pt
les
and
mov
inc
mov
ljmp
sbb
dec
mov
inc
mov
cmc
cld
sti
mov
mov
outsb
stc
loop
pop
and
fmull
insb
push
cmp
and
pop
nop
idivl
dec
add
das
jl
insl
sbb
xor
jge
lahf
cmp
les
mov
lcall
rorb
sbb
movsl
sahf
js
jno
test
pop
mov
xchg
lods
sbb
fnsave
jb
leave
std
push
xchg
cmc
jmp
jp
cmp
lcall
daa
cmpsl
sbb
pop
lods
jo
sahf
jbe
test
outsl
inc
mov
sbb
xor
jge
dec
pop
push
outsb
lcall
cld
xor
std
xor
cmp
in
and
fiadds
rcr
fiaddl
sarb
push
pop
jmp
mov
dec
dec
sbb
xor
add
pop
jno
dec
test
sub
dec
adc
into
and
popf
fstps
mov
bound
add
and
rorb
aaa
into
fstpl
pop
jno
inc
lds
in
iret
lret
adc
leave
fildl
xchg
or
cltd
or
out
repnz
fdivs
or
inc
sub
lds
pop
js
push
pop
adc
add
jle
xor
test
adc
es
inc
aas
jge
cs
cmp
icebp
xchg
xchg
aam
xchg
in
sahf
sarl
mov
inc
sti
pop
push
xchg
dec
fmuls
int
negl
or
bound
loopne
cmp
subb
out
loopne
iret
cmp
add
push
fisubs
push
mov
xchg
cmpsl
jg
mov
mov
adc
shl
lret
mov
daa
ret
in
pusha
icebp
jmp
jmp
dec
push
inc
repnz
jae
in
out
cmp
mov
pop
ja
sbb
dec
das
in
ret
dec
mul
inc
fidivl
test
imul
pop
cmovs
fistl
dec
mov
fwait
movsb
mov
adc
push
pusha
push
lahf
cmc
xchg
dec
mov
add
sbb
jo
insb
sbb
pop
ds
mov
xchg
arpl
mov
adc
out
sub
sub
lods
jae
fnsave
mov
xchg
mov
xor
sub
imul
pop
loop
cwtl
repz
mov
jmp
jecxz
cmp
jp
out
xchg
dec
or
rcrb
decl
mov
daa
dec
add
mov
pop
test
mov
fmuls
rorb
and
add
jno
sbb
mov
enter
in
jno
shlb
loop
mov
iret
push
cs
mov
lods
pop
xchg
testb
and
mov
scas
shlb
pop
jnp
ret
add
int
sbb
popf
loopne
xchg
adc
sub
fcmovnu
out
lods
dec
mov
xchg
in
cwtl
cwtl
aas
out
xchg
loopne
insb
lcall
es
insb
sbb
inc
mov
shr
rorl
xor
fadds
jo
push
mov
ss
or
sbb
dec
inc
and
jl
add
adc
test
mov
shll
shrb
xlat
mov
sbb
dec
adc
dec
xchg
dec
sbb
arpl
pusha
mov
push
mov
xor
shlb
leave
movsb
lret
or
add
sub
cli
adc
cmp
xor
hlt
shlb
xor
sub
nop
jle
enter
jb
cmp
stos
jle
xor
mov
leave
mov
ja
fisubrl
cmp
imul
shl
repz
data16
and
push
out
mov
mov
lods
sub
inc
dec
jmp
les
in
popa
pop
inc
lcall
pusha
rsm
pop
jb
pop
dec
sbb
jle
cmp
pop
push
mov
movsl
adc
stos
test
loopne
push
dec
sbb
xchg
add
xor
push
cld
scas
stc
mov
loopne
sbb
mov
into
cmp
xor
sbb
aaa
test
hlt
mov
pop
mov
push
arpl
aad
out
divb
addl
lcall
je
xlat
inc
outsl
jo
popf
std
jge
sbb
sbb
aad
push
inc
insb
dec
push
mov
inc
imul
jle
inc
xchg
shll
dec
sub
push
addr16
in
sub
into
mov
icebp
test
fwait
mov
clc
out
adc
call
pusha
jg
std
shrl
fisubs
aaa
outsb
cmpsb
fldz
dec
dec
mov
push
lods
xor
jo
jnp
add
aaa
add
pushf
xchg
aam
xchg
rep
scas
sti
xor
insl
lret
mov
fwait
test
andb
cltd
fsubrs
pop
inc
aaa
pop
sarb
subl
je
stc
add
xlat
adc
lahf
push
daa
mov
or
ljmp
inc
jl
dec
sbb
mov
leave
es
out
scas
dec
test
cmpb
sbb
inc
dec
sahf
mov
repz
int
lds
pop
fldcw
aaa
pop
push
into
imul
arpl
xchg
dec
inc
es
cli
cmp
jo
stos
jnp
adc
leave
fs
rorl
cmp
push
sub
idivb
aam
imul
pop
orb
into
mov
xchg
xchg
sub
je
xchg
cmp
ret
stc
imul
cmc
cmp
mov
pushf
in
mov
push
push
out
inc
aaa
ljmp
insl
inc
loopne
mov
out
jmp
or
xchg
xchg
rcl
push
lods
lods
cmp
mov
cmp
sub
orb
out
sbb
add
pop
inc
inc
inc
stc
loop
jns
add
sti
push
and
xchg
sti
or
mov
sub
cmpb
jne
add
pop
sbb
and
aad
dec
sarl
push
cmp
or
fiaddl
mov
ss
dec
cmp
pop
aaa
xchg
test
inc
mov
pop
popa
sbb
cs
lcall
mov
jbe
lods
lock
adc
or
or
push
sbb
and
mov
scas
cmp
out
js
and
xlat
xorl
sbb
nop
push
push
jmp
in
fistl
cmp
inc
jae
mov
and
out
aad
push
xchg
sub
mov
mov
add
xlat
loope
cmp
int
js
smsw
push
and
jmp
adc
xchg
add
inc
cmp
and
pop
pop
or
jp
cmpsl
sahf
ret
xchg
push
pop
xor
sbb
xchg
jg
scas
push
cmp
push
sbbl
mov
inc
and
push
fwait
sahf
and
jp
xorb
je
cmp
xor
mov
stc
cmc
xor
add
mov
pop
pop
jbe
xchg
or
rcll
jbe
xchg
cmp
mov
fdivr
mov
lea
sbb
scas
ror
cltd
sub
lret
mov
push
js
sahf
push
add
ror
mov
in
or
ret
repz
test
jmp
popf
mov
xchg
xor
stos
jns
xchg
shll
push
add
fildl
fstpt
xchg
jl
inc
imul
roll
jne
adcb
xchg
push
pop
imul
test
ja
inc
xchg
jae
inc
xlat
jae
cmp
loope
pop
cmp
ss
and
push
jmp
arpl
fs
mov
aas
shlb
and
mov
stc
mov
pushf
imul
icebp
roll
mov
sub
mov
push
popf
mov
andb
nop
or
jecxz
cli
test
sahf
cmp
out
xchg
push
adc
or
stos
or
stos
lea
hlt
adc
sbb
push
jle
hlt
test
insb
mul
push
or
fcmovnb
mov
cmp
adc
cmp
mov
pop
out
mov
xchg
and
mov
mov
adc
scas
cmp
jg
pop
in
mov
sbb
sbb
pop
add
stc
xchg
aas
fidivrs
comiss
lahf
out
xchg
out
sub
stc
mov
jns
lahf
add
inc
and
sbb
sbb
mov
or
fwait
repz
stc
mov
cwtl
push
mov
lcall
lret
cmp
dec
mul
push
addr16
sarb
jo
add
repnz
ja
out
sbb
mov
ljmp
leave
scas
dec
push
jle
ljmp
or
push
roll
xchg
lods
mov
jl
cmc
xchg
popf
xchg
ror
roll
in
sbb
call
or
loop
hlt
xor
outsl
sub
dec
inc
dec
sub
jo
aaa
jbe
pop
aas
adc
push
je
xchg
test
and
jb
out
stc
cmpb
scas
push
std
mov
mov
push
subl
xchg
mov
aas
jns
out
out
cmp
ja
incl
stos
adc
push
push
adc
sub
mov
shl
add
lds
push
push
mov
xor
xor
cmp
ja
clc
jmp
cmp
daa
loope
ja
decb
scas
add
and
xchg
outsb
jno
xor
repnz
sti
loope
xchg
std
xchg
sar
ja
push
fisubs
call
mov
jb
mov
mov
add
aad
popl
decb
jl
pop
push
les
out
arpl
or
jle
inc
push
lret
stos
and
push
push
mov
xchg
dec
lret
loope
cmovl
pop
fcompl
xchg
imul
xchg
and
or
push
jp
aas
subb
mov
adc
add
sub
sahf
or
sti
push
shrb
test
dec
mov
adc
xchg
pop
cmc
add
andb
cltd
out
inc
jbe
scas
aaa
mov
pop
popa
cmp
mov
int
jg
shll
ljmp
dec
inc
jo
aas
add
mov
mov
lahf
sbb
jle
pop
inc
mov
ret
movd
punpckhbw
jp
push
xchg
pop
test
sti
add
in
cld
push
out
out
xchg
sbb
loop
cwtl
add
push
int
imul
jnp
jnp
inc
testb
pop
movsl
andb
shl
mov
test
cmp
enter
rcrl
xchg
adc
jae
xor
add
fs
rorl
inc
jno
push
lret
jp
inc
clc
mov
scas
insl
dec
dec
cmpl
stc
mov
imul
pop
mov
xchg
sti
adc
shll
inc
and
or
outsl
dec
filds
mov
jmp
jb
loope
or
mov
sbb
and
repz
mov
in
out
or
xlat
xchg
loop
or
mov
add
test
popfw
mov
in
fcmovnbe
jl
aaa
mov
sub
jg
shlb
lret
neg
test
test
sbb
mov
call
push
mov
push
and
mov
sub
xchg
sub
sub
adc
lcall
adc
testl
in
lahf
aad
imul
enter
dec
push
jb
stos
xchg
stos
clc
xor
jnp
and
or
or
lds
jae
shll
outsl
dec
xor
add
and
adc
pop
and
jmp
outsb
orl
sbb
jae
cmp
add
aas
or
leave
xchg
inc
inc
adc
bound
or
inc
mov
addl
cmpsb
pop
dec
js
xchg
les
loop
add
loopne
fst
add
mov
push
lods
mov
mov
insb
xor
outsb
mov
push
and
sahf
movsb
push
jecxz
aam
mov
roll
cmpb
aad
xor
jge
vzeroupper
mov
push
lret
dec
ret
aas
inc
aaa
fwait
addr16
sahf
dec
add
inc
daa
mov
cld
inc
bound
stc
in
mov
mov
mov
push
pop
sbb
jnp
pop
fnsave
mov
pop
lods
or
fwait
movsb
inc
test
jmp
pusha
sbb
mov
mov
inc
cmp
or
jle
pop
in
push
push
push
ret
lods
pop
cs
sub
jmp
int
adc
jae
xor
sub
mov
mov
cwtl
mov
jl
mov
add
xchg
and
push
jle
pop
push
lcall
test
push
dec
sbb
add
dec
shr
dec
cmp
xchg
imul
adc
stc
jns
aaa
mov
dec
xor
sbb
mov
pop
sbb
push
call
pop
sub
mov
in
stos
xor
ficoms
or
jb
cmp
adc
roll
aam
cmp
mov
mov
inc
gs
pop
push
jnp
pop
adc
push
add
std
sbbb
mov
test
pop
fisubs
iret
adc
insb
fwait
or
and
fistpll
imul
mov
xor
xchg
mov
cmp
fisubl
fsubrl
insl
mov
fwait
cmp
mov
sbb
mov
lock
xchg
adc
iret
mov
stos
push
clc
jmp
adc
sahf
testl
shr
sub
cld
into
clc
rclb
jne
std
daa
fisubrs
and
xchg
push
mov
inc
arpl
in
cmp
mov
stos
imul
fistpll
sti
xchg
pop
push
push
dec
scas
pushf
pop
dec
sub
lcall
icebp
bound
sbb
lahf
test
ljmp
mov
push
icebp
es
fistl
xchg
pop
imul
mov
lret
les
push
mov
les
movsb
jb
push
int3
shrl
jbe
mov
dec
sbb
or
xor
mov
and
popl
dec
test
lea
sub
jp
jae
int3
fs
pop
rcll
imul
cli
cmp
hlt
xchg
cmpb
pushf
insl
jle
popa
mov
das
mov
imul
dec
out
std
or
sar
sub
nop
movsl
mov
or
add
jns
cmp
mov
push
loopne
fs
xor
mov
addr16
xchg
mov
mov
dec
movsb
stc
sbb
jle
inc
xor
popf
rorb
out
pop
adc
lods
imul
sbb
adc
loopne
in
int
sbb
adcb
shll
and
xor
lahf
mov
inc
lret
sti
loop
and
ss
jae
mov
mov
xchg
fiaddl
repnz
fcoml
ficoms
scas
loopne
jmp
rorb
clc
pop
or
imul
inc
dec
and
and
rorl
pop
nop
pop
pusha
shlb
sbb
sbbl
pop
pop
les
daa
inc
test
dec
shrb
outsb
scas
aad
push
sub
jmp
mov
into
pop
scas
fsts
jno
or
add
cmpl
cmovno
add
jg
mov
xchg
icebp
lahf
mov
stos
cmp
es
popa
sbb
mov
xorb
popf
lret
nop
inc
mov
sarl
popf
cltd
dec
cmp
imul
mov
test
gs
xchg
stc
into
fwait
shl
mov
sbb
orb
mov
loope
cwtl
in
mov
inc
mov
stc
notl
cmp
in
ret
sub
pop
movsb
nop
bound
sbb
stos
dec
test
or
movsb
repnz
sahf
sbb
clc
jl
sbb
je
and
add
sarb
cmpsb
mov
in
outsl
popa
aad
sub
mov
sub
stc
push
js
testb
in
cli
repz
cmp
xchg
push
popa
push
es
aas
mov
xor
out
out
out
xchg
inc
inc
cs
into
jno
mov
sub
divl
mov
loop
fisttps
push
jnp
hlt
sarb
pop
clc
icebp
or
into
sbb
xlat
sbb
or
leave
and
add
pop
cltd
loope
lcall
mov
lock
inc
push
shrb
mov
pop
arpl
sbb
jo
pop
xor
inc
mov
hlt
inc
mov
and
cmc
cs
icebp
stos
sbb
fmuls
popf
jmp
mov
pop
dec
gs
mov
jg
and
das
es
scas
test
xor
mov
repz
jae
pop
dec
ret
addl
push
inc
jne
bound
lahf
sbb
ds
and
stos
and
push
mov
lods
xor
roll
mov
jbe
mov
xchg
adc
jo
dec
lea
fstpt
lahf
loope
mov
push
add
push
jg
jne
roll
lahf
and
sahf
inc
cmc
xor
jnp
mov
fucomp
inc
cmp
popf
fldt
mov
mov
fwait
cmp
mov
sti
in
flds
push
pop
popa
push
int
cmp
decb
push
xor
inc
lds
or
out
add
fstp
and
mov
and
stos
add
pushf
mov
iret
mov
fsubrl
lret
in
push
inc
mov
decl
xchg
enter
cmc
rclb
out
xchg
icebp
movb
mov
in
imul
ja
inc
cmp
mov
fidivrs
dec
fcmovbe
les
xchg
mov
xchg
jae
jge
push
leave
sbb
add
push
pop
cmp
cmp
imulb
cwtl
fldenv
fwait
xor
pop
or
int
repnz
mov
and
pop
or
aam
std
mov
lds
in
mov
je
adc
xchg
les
lcall
stos
xchg
pop
dec
push
aaa
addb
test
dec
shlb
es
xchg
pop
mov
in
xor
mov
call
push
outsb
in
jae
or
pop
repz
mov
sbb
xor
mov
pop
mov
outsl
movsb
xor
add
or
adcl
les
ror
push
int
hlt
mov
stos
pop
mov
xchg
inc
push
inc
dec
icebp
test
xchg
das
fcmovb
out
in
inc
stos
dec
fistpll
arpl
add
add
imul
shll
cltd
fxch
push
mov
cmpsl
cmovs
fadds
adc
movsl
push
test
sbb
leave
in
or
addl
fisubs
jecxz
jbe
insb
push
pushf
jg
into
add
sti
mov
sbb
sbb
inc
mov
js
sahf
xor
push
test
push
dec
std
les
out
ret
leave
insb
stos
cmpsl
mov
push
sbb
xor
add
je
andb
mov
or
das
dec
imul
add
fcmovnu
hlt
sbb
cmp
or
repnz
sbbl
cmp
call
adc
cli
sbb
in
leave
add
loop
inc
mov
fdivrp
xor
dec
add
lods
mov
push
jbe
out
and
jg
push
ffreep
push
add
je
mov
fadds
das
add
mov
push
xchg
jge
adc
lds
aam
loope
cmp
xor
out
cltd
adc
imul
inc
insb
xchg
lods
mov
xchg
jb
mov
sbb
adcl
cmp
mov
or
das
aad
mov
mov
jnp
mov
mov
sti
xchg
dec
popf
or
xor
dec
jb
jmp
cwtl
mov
lods
add
repnz
cmp
xchg
jae
add
push
push
popa
aas
push
sti
push
add
iret
test
cmp
inc
ja
aad
cltd
daa
cmpsb
xchg
das
pop
andb
rcrb
es
inc
dec
pop
xlat
and
dec
push
add
push
leave
push
lods
imul
inc
aaa
leave
mov
cmp
gs
les
sti
pop
arpl
jae
inc
pop
enter
push
addr16
sub
out
out
popa
or
scas
stos
jmp
mov
lahf
ret
add
push
ja
ret
jg
mov
popa
sbb
mov
insb
mov
popa
mov
mov
add
shll
js
push
mov
pusha
xchg
sub
jo
fs
push
push
cs
mov
mov
ja
in
xchg
dec
ror
jnp
inc
pop
sahf
cmp
and
mov
out
inc
sub
and
lods
mov
into
push
adcl
cmp
xor
rolb
xor
sub
dec
arpl
shrb
aas
lea
mov
sub
adc
out
lret
enter
aad
pop
js
sbb
mov
jnp
rcrb
cmp
jae
aaa
daa
sbb
loope
mov
fidivrl
fildl
sbb
jo
ljmp
shrl
dec
fsubl
scas
mov
mov
pop
dec
or
test
xor
rorb
cmpsb
das
dec
cmp
rcr
out
pmulhuw
negb
cmpsl
das
jnp
push
pop
aaa
shl
xchg
sti
mov
sbb
in
sbb
movsl
fucom
lahf
repz
lock
enter
dec
inc
lea
inc
cmp
test
adc
cmp
scas
sti
sti
int
ss
and
test
mov
mov
push
popa
loopne
xor
in
scas
pop
pop
outsl
ja
dec
enter
jp
in
sbb
mov
mov
out
adc
mov
inc
jecxz
fisubl
mov
xchg
cmpsb
mov
pop
xor
adc
insb
sub
inc
adc
clc
ficoml
bound
cmp
sbb
cltd
jo
lret
fwait
xchg
movsb
stos
iret
inc
lcall
push
xchg
jnp
push
sub
loope
arpl
cltd
and
jg
vphsubd
sub
dec
scas
dec
or
pop
mov
imul
insl
addr16
je
mov
cmp
mov
jns
rclb
xchg
stos
mov
pop
sbb
and
mov
xchg
nop
lcall
sahf
jno
aas
out
pushf
pop
jmp
jp
cmp
sub
fsubs
lret
sbb
mov
dec
or
push
xor
cmc
mov
repz
pusha
xor
loop
addr16
jp
repnz
pop
scas
test
test
clc
xor
add
sbb
lret
sub
jbe
imul
push
jl
in
mov
daa
stos
inc
inc
in
aas
mov
jae
pop
inc
fnsave
and
mov
lock
das
push
ljmp
sbb
xlat
js
lahf
pop
lcall
ja
rcr
stos
movsb
addb
cs
fstps
xchg
and
adc
dec
adc
shll
bound
cmp
mov
cmp
std
sub
xchg
push
jle
aam
out
roll
xchg
sbb
fwait
sahf
pusha
cmp
jbe
adc
sub
cmp
test
test
ret
jecxz
repz
push
or
outsb
xchg
lret
add
std
add
jo
insb
fidivl
cltd
cmp
xchg
pop
sbb
inc
inc
pop
out
inc
aaa
sbb
xchg
movsb
inc
jae
sub
mov
pushf
lds
cmpsb
xor
popa
xor
sub
mov
and
cmc
stc
movsl
and
xlat
mov
mov
sbb
add
lea
add
pusha
or
loopne
rorl
out
xchg
mov
sub
or
mov
loopne
or
mov
ror
mov
cmp
lods
xor
lods
movsb
sub
iret
inc
jecxz
add
pop
hlt
je
pop
loop
fnstsw
mov
inc
and
inc
mov
jnp
sub
xor
clc
jp
aad
add
xlat
mov
addr16
adc
mov
insl
leave
lcall
lods
fbstp
mov
into
test
and
cmp
ja
fwait
xlat
push
fnstenv
test
push
notb
jnp
hlt
jnp
notb
fimull
sub
mov
jo
clc
pop
xor
sub
mov
test
jl
or
sti
cmp
jg
mov
pushf
sub
sarl
inc
push
sahf
cmp
xchg
cmp
jl
aam
mov
gs
mov
dec
mov
jmp
ja
notl
inc
loop
jno
and
xor
dec
mov
mov
mov
pusha
or
mov
movsl
mov
push
aaa
or
sbb
xor
push
pop
sbb
test
jge
fcmovnbe
jno
pop
testl
xchg
dec
jecxz
mov
mov
outsl
jnp
imul
jp
ret
pop
xor
in
dec
iret
add
aad
aas
popf
out
out
jp
push
lock
ss
sbb
jle
inc
dec
and
mov
jl
out
lea
aam
sarl
rorl
les
sbbb
sbb
mov
arpl
xorl
sbb
lock
xor
fstl
mov
mov
add
in
aaa
cmp
aas
adc
fsts
jge
or
sarl
and
push
xchg
add
leave
imul
pushf
add
xor
js
lret
add
or
int3
cwtl
ret
stc
in
fst
nop
dec
ficoml
jl
insb
xor
adc
push
test
mov
and
cltd
jne
imul
jge
lods
lcall
inc
clc
aam
fcomps
movsb
cmp
repnz
dec
sbb
in
pop
cmp
jl
fs
and
cld
xor
adc
adc
fadds
nop
push
rcl
jp
jae
mov
jne
movsl
pushf
in
jne
push
and
fistl
xchg
sub
cmpsb
add
mov
clc
dec
mov
dec
inc
arpl
dec
leave
pop
hlt
subb
nop
jl
fbstp
lds
mov
stos
jne
or
add
in
loope
pop
das
xchg
sub
cmp
adc
in
bound
stc
xor
cwtl
test
fisttps
and
sbb
pop
mov
and
dec
and
stos
test
arpl
divb
mov
sti
sub
sub
movsl
andb
pop
and
fwait
xchg
nop
lret
add
icebp
and
in
add
fs
xchg
inc
pop
ror
idivb
nop
or
pop
int3
icebp
cmp
arpl
cmp
rep
xlat
cmp
jmp
sub
or
mov
das
rclb
dec
dec
das
repz
add
popf
mov
mov
fwait
clc
xchg
mov
jo
dec
les
lahf
sbb
or
cmpsl
adc
push
inc
push
lret
dec
data16
adc
inc
inc
or
sub
mov
add
test
xor
dec
daa
mov
inc
and
mov
push
xchg
add
push
pop
pusha
mov
dec
decb
lahf
mov
sbb
lds
xlat
mov
fucomip
xor
sbb
loopne
push
cmp
cmp
adc
lock
sub
and
jns
push
repz
pop
jb
adc
jbe
mov
and
rcrl
dec
out
adc
in
out
mov
into
js
je
mov
xor
xchg
imul
push
mov
aam
repz
out
mov
dec
les
scas
mov
out
jae
lods
mov
loopne
into
out
mov
mov
test
cwtl
daa
fstps
lret
test
dec
sub
jb
fs
push
push
imull
dec
pop
repz
clc
out
data16
pop
adc
jns
mov
outsb
pop
mov
mov
ja
sub
cmpl
sbb
mov
adc
mov
daa
into
stos
and
push
rorb
movsl
in
pop
push
and
cmp
add
loope
sub
or
jle
int
mov
subb
in
pop
adc
mov
push
lret
and
cli
arpl
adc
mov
imul
aas
sub
jae
mov
add
inc
fwait
mov
pushf
push
popf
aam
fwait
inc
dec
out
aaa
push
pop
dec
call
push
addb
ret
ret
jb
idivl
mov
pop
jle
xor
in
jae
cmp
lret
pop
push
fiadds
cwtl
lock
cwtl
pop
mov
sti
mov
sub
mov
outsl
sti
jne
sbb
repnz
sbb
pop
into
sbb
inc
imul
inc
xor
sbb
jne
cmp
shr
mov
mov
jmp
cmp
adc
push
lcall
fs
xchg
inc
fisttps
mov
inc
lock
mov
xchg
dec
arpl
adc
shr
push
enter
fldcw
xchg
loop
dec
mov
or
stos
cli
call
das
fs
xchg
or
lahf
mov
fcomp
xor
push
jmp
adc
roll
ja
ficompl
ljmp
mov
jns
inc
cmp
xor
jg
jg
and
jno
adc
scas
cs
push
sub
inc
cmpb
in
adcl
clc
push
stc
mov
sub
cltd
enter
test
adc
dec
jns
inc
mov
repz
call
and
mov
add
cmpsb
add
inc
cmp
repz
cmpsl
jl
fidivrl
pop
outsl
jle
xchg
xchg
loope
dec
aaa
jg
ds
push
outsl
mov
cmp
stc
and
push
ljmp
sbb
fnstcw
pop
hlt
repnz
sub
outsb
ficoms
jp
jge
sbb
push
xchg
and
push
jb
in
fists
cmp
shr
dec
xchg
pop
or
or
stos
scas
adc
dec
lea
sbb
lret
shll
in
push
rorl
jl
subb
inc
popf
andb
aas
divl
std
push
adc
mov
vcvtdq2pd
sti
hlt
jno
jg
in
dec
adc
loop
pop
pusha
push
dec
pop
imul
cmp
idivb
mov
sarb
xor
dec
or
jmp
movsb
sub
and
test
in
mov
pusha
push
fstpt
inc
test
cmp
sbb
sbb
jns
aad
outsl
dec
fwait
lretw
mov
lods
pop
and
sbb
xchg
or
mov
mov
das
and
bound
stc
andb
mov
out
xchg
cmp
test
sub
or
outsb
xchg
pop
push
and
test
mov
adc
arpl
aas
jge
fisubl
cmp
mov
jmp
sbb
out
add
xchg
int3
mov
aam
test
shll
fisttpl
mov
outsb
aam
sahf
pop
cld
rclb
mov
std
mov
push
mov
pop
xor
subb
and
mov
out
push
aas
dec
bound
or
cmp
and
sbb
dec
mov
into
mov
ret
and
movsl
imul
repnz
fisubs
or
sti
das
jnp
ror
shlb
or
adc
sbb
outsl
imul
xor
jg
jmp
cwtl
enter
test
add
cmpsb
inc
jge
and
test
fldl
addr16
daa
into
addr16
dec
lods
push
repz
cmp
pop
imul
out
xchg
loope
cmp
cmc
ficomps
lret
gs
fnstcw
push
fildl
das
push
std
adc
push
push
sahf
mov
mov
sub
add
cmc
xchg
mov
sub
mov
test
add
std
mov
mov
inc
divb
insb
fptan
lock
mov
test
fcomps
fisubrl
jae
cmp
mov
movsb
xchg
jle
fdiv
ds
mov
js
addl
bound
or
enter
dec
into
test
push
movsl
inc
std
and
aam
xchg
inc
cld
inc
hlt
sbb
ficompl
push
mov
sahf
xchg
and
cmpsb
push
push
cli
cli
cld
push
sbb
cmp
and
and
push
cs
sub
sub
push
jg
imul
jl
inc
mov
xchg
cli
add
mov
lret
add
inc
sub
cli
dec
xorb
sbb
int
lahf
xchg
into
sub
sbb
imul
lahf
xchg
jl
and
lahf
sbb
inc
sub
push
dec
inc
es
pop
cmp
jnp
jbe
xorb
stos
rolb
lock
mov
mov
and
add
int
jl
outsl
xchg
push
lret
aas
negl
or
lods
sbb
inc
pushf
push
scas
out
xchg
fwait
ret
addr16
inc
insb
jl
adc
loopne
sbb
iret
cwtl
pushf
iret
dec
int
lods
sbb
jle
sub
mov
fcmovne
mov
aam
adc
bound
dec
pop
addr16
and
mov
jp
mov
sbb
push
dec
push
lret
out
inc
cmp
fwait
sbb
lea
inc
adc
xor
movsl
cmp
xchg
mov
push
jg
lcall
arpl
cmpsb
outsl
cld
adc
jmp
sub
cltd
aad
ljmp
inc
inc
add
mov
or
scas
or
xchg
nop
mov
cmp
data16
pop
std
mov
setbe
cs
aam
in
cmp
adc
mov
in
jecxz
push
imul
outsb
sub
push
push
sbb
mov
mov
sub
fidivrs
add
xchg
xchg
xor
xchg
inc
inc
inc
sub
mov
jns
fcom
mov
jp
test
mov
sbb
mov
es
mov
mov
loopne
jmp
inc
jne
adc
clc
nop
jb
callw
inc
mov
lahf
outsb
add
adc
mov
jmp
jmp
sub
and
mov
cmpl
mov
inc
xor
mov
int3
mov
or
sub
mov
xor
fsubrs
cmp
xor
pop
lods
sub
lret
dec
out
push
mov
or
imul
mov
and
sahf
push
pushf
xor
imul
cmpsl
mov
lods
movsb
pushf
pop
test
scas
andl
inc
mov
mov
lcall
sbb
add
adc
mov
and
cwtl
sub
orb
fdivp
xchg
in
sub
std
xor
xor
xchg
jl
cmp
mov
adc
add
fwait
mov
ds
xor
ss
negb
adc
mov
or
sub
jle
cwtl
sbb
pop
fisttps
lods
pop
cmp
mov
and
pop
in
cmp
shr
pop
rcrl
push
add
lret
pop
lahf
loop
jne
xchg
cld
popa
xchg
push
repnz
pop
or
push
in
fprem1
sub
sbb
xorl
stc
lcall
mov
cwtl
pop
xchg
cwtl
sbb
movsl
stos
mov
fbstp
fadds
nop
cmp
jl
and
outsb
std
sub
jbe
mov
mov
out
or
mov
inc
mov
ror
mov
fidivl
aaa
sbb
ud2
cmp
xchg
ja,pn
xchg
xor
test
nop
xchg
xor
fistpll
insb
aam
cwtl
sti
fsub
int
lret
les
jae
mov
xchg
mov
sbbb
scas
cmp
mov
rclb
push
xchg
xchg
inc
loop
bound
mov
adc
push
addr16
xorl
push
sub
lret
outsb
pop
pushf
add
mov
leave
fdivl
jle
inc
mov
adc
jae
int3
mov
hlt
xchg
pop
pusha
push
jns
cs
ret
mov
popf
enter
push
mov
int3
cmp
sarl
pop
std
iret
dec
sahf
ja
sub
mov
loopne
cmp
inc
aad
adc
mov
pushf
mull
test
push
pop
add
pop
sub
and
sub
sbb
aas
popa
mov
sbb
pop
xchg
bound
ret
mov
int3
repnz
call
daa
sbb
dec
lcall
add
pop
aam
jmp
adc
pusha
sub
xor
and
xor
jecxz
pushf
mov
je
xchg
daa
sbb
adcl
mov
adc
sarb
jnp
das
jo
cmp
xchg
popa
ss
movsb
xlat
mov
mov
repnz
jmp
push
xchg
and
sub
pop
cmp
push
popa
xchg
jecxz
mov
inc
shlb
ss
sub
lret
xorb
mov
fimuls
mov
sub
andb
loop
sbb
xchg
pop
push
andl
test
xor
pop
int3
jp
jp
cmpsl
data16
pop
fcomps
inc
loop
stos
mov
jecxz
daa
loop
xor
outsb
xor
dec
out
push
cmp
cmpsl
add
mov
or
push
mov
out
test
loop
aas
mov
daa
imul
jg
imulb
test
or
jne
rcl
insl
stos
xor
in
mov
jnp
adc
test
sub
insl
mov
cmp
mov
cs
mov
inc
xlat
and
nop
lret
gs
or
sbb
fdivrl
xchg
in
adc
aaa
xchg
and
lea
dec
out
pop
negl
pop
mov
out
sbb
in
jmp
addr16
xchg
add
movsb
fbstp
mov
pop
bound
mov
call
lret
adc
adcl
dec
mov
jecxz
jecxz
in
pop
int3
lret
adc
insl
repnz
aas
sub
ret
lods
int
fcomp
in
jnp
test
mov
inc
mov
das
lods
jl
pop
dec
fdivs
push
les
aad
les
or
mov
dec
inc
bound
add
xchg
ret
adc
jbe
mov
fildll
mov
stos
insb
push
adcl
aas
dec
fwait
mov
fmul
lds
jle
enter
adc
xchg
pop
xor
out
xchg
pop
fcomps
add
fbld
ss
out
xchg
test
inc
jle
and
add
aaa
jno
cwtl
xchg
shll
testl
and
daa
xchg
pop
in
fxch
call
pop
mov
dec
imul
cmp
inc
mov
jp
sbb
inc
push
mov
mov
add
mov
jg
cmp
data16
push
insb
and
xchg
fnstcw
lea
mov
xchg
fmul
popa
stc
cwtl
xor
inc
push
mov
or
aam
push
or
popf
incb
jg
jle
lock
loopne
stos
leave
mov
mov
mov
push
add
sbb
scas
in
jle
sub
xchg
mov
in
jmp
pop
mov
jge
int
lods
mov
cmc
lds
pop
inc
push
mov
sahf
sub
lret
mov
test
pushf
out
loope
mov
cmp
popa
adc
add
pop
jne
inc
mov
or
rorb
in
pop
out
divb
and
cmp
sbb
aas
mov
xor
lret
mov
dec
je
cli
mov
dec
xchg
sahf
push
xor
or
inc
push
pop
cmp
mov
adc
cmc
data16
jno
arpl
dec
pop
insl
push
js
inc
flds
mov
dec
jno
popf
or
xor
and
cli
sahf
lock
arpl
add
gs
push
mov
adc
sbb
push
xor
stos
mov
iret
test
bound
std
cli
lret
stc
lcall
push
ds
cwtl
mov
add
sub
xchg
dec
aaa
lods
or
push
xor
push
iret
popf
testl
popf
ja
push
sub
mov
cltd
ficomps
sbb
and
and
jb
push
cmp
mov
movsb
je
sub
jo
cmp
xor
mov
stc
sub
xchg
repz
pop
daa
clc
cld
mov
gs
sbb
pop
push
negb
in
mov
movsl
mov
cmp
andl
and
ret
cmp
push
ja
jo
dec
aaa
shlb
xor
xor
pop
xchg
mov
loopne
inc
mov
hlt
clc
fldl
mov
jne
mov
and
ja
rol
jp
or
aad
nop
mov
std
out
push
cwtl
inc
sbb
mov
aaa
dec
fistpl
or
repz
xor
sar
insb
mov
add
lret
loope
xor
push
sbb
scas
pop
mov
inc
jl
mov
es
mov
and
dec
stos
in
in
inc
push
push
stos
push
jno
test
ja
push
popf
mov
inc
js
push
cmp
and
lret
lahf
or
imul
xchg
or
sbb
into
mov
lods
loopne
inc
dec
loop
jp
fcoms
add
jnp
jae
in
inc
lahf
jge
mov
pop
subb
in
dec
movsl
ljmp
push
xchg
sbb
dec
lods
adc
sub
jmp
mov
mov
or
pop
xchg
sti
push
sbb
mov
xlat
pop
push
mov
sbb
jne
rcrb
push
ficomps
push
mov
movsl
or
aaa
and
cld
inc
dec
xchg
inc
xchg
scas
lods
push
imul
or
ret
jmp
repz
andl
pushf
cmp
imul
mov
jg
push
ss
cmp
ret
inc
pop
mov
js
xchg
mov
enter
imul
sarb
pop
cli
or
pop
pop
loopne
inc
cmpsb
and
sbb
mov
dec
int
rcrl
mov
push
in
popf
cmc
add
xchg
test
je
or
movsl
jnp
out
lret
aas
fdivp
xor
jns
lock
ret
cmp
jl
daa
lret
or
dec
and
mov
jnp
push
jno
je
sbb
xchg
daa
cmp
mov
loope
nop
jb
push
mov
or
cmp
push
mov
jo
lret
jne
nop
dec
jne
cmpsl
test
pop
sub
jbe
fdivp
lret
cld
push
jle
dec
jmp
push
dec
inc
mov
sub
push
mov
pop
inc
dec
ret
jne
stc
in
cwtl
lret
repnz
mov
icebp
cld
cmpsb
or
mov
out
cltd
xchg
fcmovnb
fwait
insl
fcompl
mov
out
je
inc
addl
mov
add
mov
hlt
cmpsb
scas
inc
subb
pop
mov
nop
fcos
shrl
and
add
lahf
orb
xchg
lret
add
dec
and
dec
dec
pusha
out
cmp
mov
pop
xor
mov
pmulhuw
push
mov
fdivr
push
sub
ja
jg
or
or
adc
aas
lods
push
xor
and
push
push
pusha
sbb
mov
movsb
testb
push
popf
in
dec
pusha
mov
mov
sub
inc
ret
and
test
xchg
inc
fstl
inc
fisttps
mov
mov
in
jecxz
aas
mov
shlb
lret
mov
sbb
inc
xor
push
sbb
repnz
jns
lock
adc
je
inc
push
push
add
mov
arpl
scas
fstl
adc
ror
jecxz
mov
jmp
or
xchg
sbb
je
ss
fldenv
jb
pop
xchg
in
outsl
add
fisttpll
adc
pop
jmp
jmp
jae
lock
jge
fisttpl
fisubs
lock
push
dec
pop
inc
xor
jb
in
mov
mov
dec
or
sub
fcmovne
inc
mov
cmp
mov
inc
fistpll
repz
cmp
mov
jl
mov
jmp
cmp
inc
mul
push
and
mov
leave
aam
into
test
cmc
nop
insb
jb
add
stos
xchg
lock
out
xchg
dec
mov
jnp
push
dec
insb
mov
out
rcl
outsl
jle
ror
jl
xor
loop
pop
sub
sub
xor
mov
mov
fnstsw
xlat
jl
shl
sub
xor
dec
stc
sahf
in
fldcw
test
fisttps
mov
gs
mov
repz
rorl
rcrl
xchg
sti
or
hlt
mov
or
loopne
mov
xchg
aad
movsl
scas
push
movsb
sahf
inc
jnp
xor
icebp
bound
push
arpl
mov
lahf
xchg
fwait
push
pusha
mov
lret
sub
pusha
stc
dec
test
je
xchg
sahf
dec
cmp
dec
sahf
fadds
mov
mov
sbb
sub
sbb
hlt
shrl
stos
loop
aam
loopne
clc
push
mov
push
cmp
popf
dec
pop
ss
mov
ficomps
int
in
pop
xor
cmp
push
mov
add
xlat
inc
test
lret
xor
push
xor
rcrb
loope
or
adc
or
lea
xchg
dec
pop
imul
ret
mov
inc
jle
out
or
test
cmp
pop
push
xorl
cmp
dec
sub
ror
or
jg
pop
dec
cs
jg
adc
mov
xor
xchg
xorb
icebp
mov
adc
push
fwait
in
ret
fldenv
push
xchg
in
push
cmp
repnz
insl
or
add
mov
mov
pop
dec
cwtl
repnz
push
xchg
or
or
dec
pop
mov
adc
or
adc
lret
test
mov
loope
sahf
aas
or
dec
inc
mov
cwtl
dec
mov
out
sbb
inc
ficomps
mov
dec
lret
sbb
push
sub
ret
mov
push
lcall
shl
pusha
sub
imul
jno
jae
jo
pop
sub
jl
jg
jmp
shlb
imul
mulb
mov
jmp
add
in
cmp
shlb
cmc
stos
xchg
faddl
or
add
add
cs
dec
adc
add
mov
mov
out
dec
cmp
pushf
leave
xor
rcrl
jnp
out
fldt
testl
aas
insb
adc
inc
jle
cmp
or
repz
jg
cmp
cmp
xor
jmp
mov
mov
xor
repnz
call
inc
fidivs
sti
lods
pop
movsl
in
icebp
xchg
into
pushf
jne
movsb
sbb
push
dec
imul
pop
pop
xor
ss
xlat
mov
lods
rol
mov
int
std
inc
in
test
sub
testb
sub
call
xor
ret
push
ror
mov
outsl
pop
mov
sbb
mov
xor
lods
or
cmp
mov
mov
pusha
sbb
pop
lret
int
jo
leave
adc
add
mov
pop
lahf
cld
ss
jp
mov
repz
orl
pushf
push
ret
pusha
clc
pop
pop
bound
cltd
push
stos
pop
inc
add
ja
aaa
push
dec
sub
test
mov
sbb
pushf
lock
dec
dec
insb
scas
mov
inc
pop
xchg
inc
dec
sub
jbe
mov
fcmovu
in
test
aam
cs
or
outsl
pushf
mov
adc
sti
mov
outsl
xchg
sti
add
sub
in
mov
add
dec
out
imul
sub
std
mov
out
ljmp
lcall
add
es
sbb
repz
lods
icebp
jmp
movups
xlat
fadd
lret
or
adc
enter
push
aaa
loop
xor
jge
stc
push
ficoml
jmp
sub
cmp
hlt
pop
mov
je
inc
mov
insb
cmpsl
xor
or
outsb
adc
stos
lods
movl
pop
mov
adc
fs
mov
sbb
addr16
push
idivb
add
icebp
add
ljmp
cltd
stos
add
and
outsb
jmp
mov
push
push
sub
mov
outsl
xchg
jb
fidivrs
les
jge
mov
gs
cmpsl
mov
es
popa
pop
inc
sbb
inc
push
aaa
inc
inc
jnp
js
xchg
fldl
push
ficompl
jns
lea
jns
cmc
dec
adc
push
fmuls
xchg
orl
adc
mov
pop
sub
sbb
adc
mov
sub
mov
clc
push
leave
mov
mov
or
lcall
popf
fists
xchg
mov
gs
pop
pop
gs
aaa
iret
movsl
cld
push
push
push
or
cmp
or
jl
insb
push
fadds
subb
rcll
cltd
push
ljmp
roll
test
inc
push
test
jp
leave
pop
push
mov
jns
in
push
mov
out
pushf
lods
sbb
jns
test
cmp
sar
xchg
lea
xlat
aam
jmp
aam
insb
cmp
inc
ds
je
scas
and
jbe
dec
push
stos
sbb
xlat
mov
cltd
cmc
jmp
xor
xlat
das
mov
addr16
add
lcall
popa
mov
popf
push
sarl
xchg
fimuls
cltd
or
dec
add
out
test
inc
cmp
pop
push
sbb
movsb
stos
fwait
aad
push
jmp
pusha
mov
pop
mov
mov
inc
test
mov
cmpsb
roll
insl
cltd
call
xchg
ds
rclb
rclw
cmp
imul
pop
mov
jl
mov
fnsave
in
push
pop
mov
and
pop
pop
fs
cmpsl
xchg
ss
lods
jmp
aad
sub
sarb
in
aam
gs
sub
dec
mov
lret
std
mov
arpl
sahf
mov
cmp
aad
negb
push
cmp
mov
xchg
mov
repnz
inc
dec
lcall
jl
xchg
adc
add
mov
insb
out
cmpsl
stos
cli
enter
cmp
lcall
mov
loop
mov
sub
cmp
sub
fidivl
pop
aam
repnz
or
pop
jmp
sbb
shll
cmp
dec
ss
push
push
inc
add
mov
fadds
xchg
fnstenv
xlat
cmpb
fwait
in
outsb
xchg
and
iret
mov
lret
mov
mov
popf
mov
sbb
and
xchg
cmpsb
bnd
inc
jmp
shr
sahf
mov
insb
neg
xor
int
pop
xor
scas
mov
push
jae
dec
xchg
or
jbe
in
pop
cld
mov
sbb
shrl
dec
andb
je
sub
cs
sub
dec
mov
and
cltd
addr16
call
aaa
imul
sbb
jle
test
popa
test
xor
mov
fdivl
sub
mov
mov
call
cmpsl
stos
shrb
aam
shrl
lods
sarb
xor
mov
bnd
sbb
out
in
xchg
outsb
pop
insl
and
pop
call
addl
movsb
dec
jbe
add
add
arpl
ss
mov
jno
jne
push
add
add
jmp
out
fdivl
lahf
test
test
add
xor
and
out
inc
mov
outsb
mov
mov
pop
push
into
int
in
ljmp
inc
add
clc
xorl
ljmp
or
lock
jl
push
adc
push
cmp
mov
sub
out
pop
adcl
int
rorb
jns
jle
lret
lds
cmp
adc
cmp
fisubl
xor
add
inc
adc
rcll
xchg
mov
pop
push
out
in
add
xchg
add
pop
jns
or
shll
pop
sub
repz
inc
inc
cmp
mov
push
push
push
mov
xlat
test
push
std
adc
hlt
push
mov
cmp
push
pop
xorl
rcr
incl
xchg
xor
mov
jge
dec
adc
das
bound
dec
mov
lret
test
adc
jns
push
repnz
dec
repnz
push
mov
xor
push
pop
in
xor
icebp
jnp
filds
xchg
lds
or
cmp
add
int3
outsb
jmp
repnz
adc
or
rolb
jb
inc
push
dec
ds
mov
sahf
and
mov
popf
push
xchg
daa
sub
xor
jnp
scas
cmp
inc
mov
or
lock
xchg
mov
jae
or
mov
jp
movsb
jmp
jno
sti
mov
sub
pop
dec
mov
mov
lods
pusha
jle
mov
scas
cmp
clc
cmp
xchg
jns
push
cs
pop
dec
ficomps
aas
push
dec
jmp
or
nop
inc
js
mov
iret
lcall
xor
cmp
aas
rcrb
sbbl
push
sar
mov
push
test
mov
cmp
inc
mov
inc
pop
loop
or
jae
call
popf
cmp
cli
jne
cli
xor
add
xor
jle
nop
in
data16
jecxz
push
test
jno
repz
push
shrl
ljmp
dec
add
push
or
mov
push
pop
gs
rcll
mov
out
data16
or
push
inc
cli
dec
jmp
jae
in
xor
and
je
mov
shll
dec
movsb
sub
loop
pop
mov
xchg
jecxz
int3
xor
imul
mov
mov
ret
push
aad
pop
jecxz
repnz
xchg
stos
lock
sbb
insl
jl
test
and
add
cmp
push
sti
neg
jle
cld
xor
mov
xchg
add
call
clc
into
adc
push
lret
fdivr
data16
push
lea
dec
pop
mov
jne
push
ss
imul
pop
scas
imul
andb
dec
adc
xor
xor
stos
lds
rcr
fdivr
adc
adc
clc
test
mov
in
add
inc
mov
jo
repz
inc
mov
icebp
popa
testl
mov
and
pop
stos
fs
inc
cmc
push
mov
sarb
insl
out
and
je
xchg
adc
out
inc
sbb
sub
or
adc
inc
dec
mov
or
pop
inc
inc
lds
jmp
mulb
sbb
or
jne
mov
adc
jg
ret
loopne
sbb
pop
sub
outsl
fsubrl
rol
add
xlat
pop
mov
push
in
scas
mov
mov
jmp
sub
push
mov
stos
cmp
xchg
andb
ljmp
ss
daa
sub
fiaddl
or
and
jecxz
adc
xchg
leave
pop
jo
movsb
fwait
outsw
popf
mov
lea
inc
jecxz
jge
pop
loope
loopne
sti
outsl
xor
or
rorl
rolb
mov
sub
std
cmp
mov
fmuls
stc
sbb
cmp
das
pop
jmp
pop
lods
add
enter
inc
or
popa
mov
insb
out
outsl
xchg
mov
dec
jp
jnp
mov
icebp
mov
popa
cmp
mul
fcompl
xchg
and
mov
dec
das
imul
enter
lock
shll
cmp
adcl
shll
and
dec
addr16
xor
mov
orl
jp
fs
inc
sub
movsl
pop
icebp
test
les
iret
call
inc
stos
es
mov
sub
xor
cmp
repz
dec
rclb
in
das
sub
cs
daa
xchg
jns
cwtl
std
sarl
ja
jns
xlat
inc
cmpsb
lret
popa
ss
data16
decl
jb
rclb
fidivrl
xlat
and
fcompl
cwtl
pusha
cwtl
adc
pop
bound
lcall
lds
push
rcll
pop
inc
test
dec
push
mov
cltd
add
lret
cmp
mov
dec
call
insl
jmp
push
movl
subb
lret
mov
cmp
cmp
xor
call
adc
sub
out
sub
movsl
xchg
clc
adc
and
lcall
loop
filds
and
in
lods
or
and
fs
aaa
and
ret
hlt
push
outsb
mov
mov
push
fstps
xchg
ljmp
dec
ret
test
mov
sub
call
fs
cs
loope
xor
jl
andb
mov
test
fisttpl
mov
ljmp
jge
aad
mov
inc
sub
inc
sub
cwtl
roll
rolb
outsl
jnp
mov
scas
cmpsl
dec
mov
test
hlt
or
add
test
inc
inc
adc
dec
enter
fdivrs
mov
sbb
nop
xchg
mov
repnz
pop
clc
mov
in
mov
shl
push
clc
movaps
push
nop
out
insb
push
mov
xchg
pusha
xchg
cmp
into
sti
cld
leave
outsl
mov
subb
js
mov
fistpl
cli
lret
cmc
out
sti
cli
mov
insb
and
add
cmp
lahf
sahf
jns
subl
shrl
fstl
mov
lock
hlt
lret
xor
rorb
fidivrl
scas
pop
jnp
jecxz
cwtl
pushf
xchg
inc
ficomps
std
sbb
pop
mov
aaa
imul
inc
cmp
rolb
add
ret
cltd
fwait
mov
out
mov
repnz
jae
pop
pop
sub
add
xor
mov
iret
mov
adc
inc
mov
mov
data16
ljmp
addr16
sub
pop
rolb
adc
inc
or
mov
push
popa
dec
mov
adcb
shl
outsb
gs
mov
adc
clc
xchg
pop
mov
dec
jmp
mov
cmp
inc
lods
notb
pop
stos
pop
xchg
mov
int3
mov
repz
imul
xchg
in
cmp
sub
dec
mov
push
mov
or
lea
fdivrs
cmp
dec
jmp
movsl
jbe
aad
in
dec
fcmovnb
or
lret
sti
mov
pop
push
out
cmp
mov
mov
outsb
in
sti
mov
push
push
outsl
imul
add
mov
shlb
daa
and
inc
xor
xchg
lock
pop
xchg
xor
iret
adc
xchg
insl
int
pusha
int
fildl
fisttps
inc
cmp
cmp
sbb
lcall
or
xor
lods
andb
dec
push
mov
cmp
in
int3
call
ja
mov
dec
mov
jmp
or
push
xchg
push
cwtl
xchg
pusha
mov
in
test
sbb
xor
rclb
push
adc
int3
gs
push
mov
jp
jl
sbb
scas
dec
shlb
xor
mov
cmp
mov
mov
mov
adc
ret
jo
jb
and
nop
sub
or
adc
das
xchg
push
fildll
pop
xchg
inc
sbb
ljmp
mov
insb
jo
popf
cs
cltd
ds
mov
hlt
push
inc
lahf
or
push
jge
and
inc
lret
imulb
ret
sbb
lret
jb
jge
or
popf
jp
in
xorl
add
cmc
mov
pop
out
mov
jmp
lea
mov
adc
popf
es
sbb
gs
xchg
in
mov
push
das
int
jmp
es
clc
add
add
andb
mov
fstpl
xor
sarl
xchg
xor
pop
lock
adc
daa
in
ss
test
ret
lock
jl
push
inc
cmpsl
ljmp
add
arpl
call
sub
aad
in
xor
inc
sub
push
mov
mov
daa
lcall
std
jp
mov
mov
ret
clc
sub
scas
dec
out
divl
sahf
arpl
jbe
cwtl
cmp
imul
movsb
jl
mov
pop
loop
inc
lahf
adc
add
sbb
jbe
pop
xor
add
lods
mov
adc
cwtl
fists
xchg
imul
xchg
fildll
lock
jne
adc
and
ficompl
aaa
mov
add
xor
xchg
jle
lock
inc
ret
push
dec
into
orb
ss
pop
or
push
jae
inc
fmuls
fldt
scas
jge
and
leave
jl
xor
addl
addr16
loopne
std
and
sub
xor
jmp
scas
in
jg
insb
icebp
dec
inc
dec
leave
daa
dec
rorb
add
adc
rcr
cld
dec
das
lahf
test
lret
test
test
lret
bound
in
movb
cld
mov
push
pop
repz
sahf
jmp
and
and
cmpsl
fisubl
cmp
sbb
je
jle
shrl
jne
icebp
add
and
sub
dec
jecxz
add
xor
push
push
ds
es
aad
mov
adc
mov
outsl
and
pop
icebp
mov
xchg
cmp
push
addr16
or
jnp
andb
outsb
xchg
movsb
mov
inc
insl
imul
cmc
gs
push
xor
jg
sbb
mov
sahf
push
lock
ja
rorl
or
mov
add
outsb
mov
jnp
inc
fisubl
sbb
add
lods
shl
inc
mov
outsb
lcall
out
test
mov
push
xchg
arpl
es
int
outsb
xor
dec
out
xor
hlt
sub
mov
cwtl
pop
daa
and
scas
mov
es
int
mov
push
fistpl
pop
jecxz
pop
mov
mov
xchg
and
mov
stos
decb
xor
iret
cmp
or
fdivrs
inc
pop
incl
rorb
jns
sbb
adc
push
push
jg
mov
stos
jecxz
or
adc
mov
cmpl
cli
mov
sub
repnz
push
cmpsl
idivb
sub
inc
jb
lcall
inc
pop
pop
mov
clc
addr16
lds
mov
xor
mov
addb
mov
xor
xchg
mov
loopne
pop
add
inc
cmovo
push
cmp
imul
inc
out
in
push
cli
or
int
rorl
aam
sub
push
aas
lcall
cwtl
sub
cmp
mov
or
sbb
sub
hlt
mov
mov
dec
aad
mov
es
cs
mov
outsl
mov
adc
in
fwait
setne
gs
add
mov
xor
dec
inc
dec
xor
jno
xchg
jp
jb
lods
sbb
stos
adc
push
sub
sarl
pop
insl
xchg
mov
dec
ret
mov
adc
movsl
ja
out
xor
push
stos
mov
adc
popa
stos
mov
mul
push
aad
push
rcll
test
dec
lock
test
nop
xchg
pop
pop
mov
out
inc
pop
cmpsb
mov
rorl
push
jp
add
lret
es
xor
adc
sub
cmpl
jmp
push
dec
xor
mov
pop
mov
mov
shll
popa
outsl
roll
adc
into
mov
stos
nop
xor
pop
movsl
push
pusha
jae
mov
sti
push
sub
clc
cld
movsb
mov
lret
mov
sbb
decl
in
xor
fstl
fucom
int3
push
notl
xchg
bound
and
mov
xor
popa
ret
fstp
insb
shll
xchg
in
jmp
aas
mov
dec
push
adc
pop
adc
adcl
mov
cmp
daa
das
out
mov
lcall
popf
addr16
gs
movsl
inc
scas
dec
roll
push
jmp
outsb
ret
xchg
clc
aaa
pop
and
sbb
out
mov
into
adc
insb
dec
push
mov
sbb
mov
addr16
cltd
addr16
popf
aam
lret
xor
shrl
push
and
push
gs
enter
psubd
jo
push
xchg
mull
inc
mov
mov
mov
or
jmp
cmp
pop
jecxz
add
or
loopne
xor
jb
roll
adc
aam
adc
or
mov
xor
mov
mov
dec
mov
xchg
cltd
mov
addr16
push
mov
orl
pop
stos
lods
repnz
ds
add
ja
cmp
xchg
stc
rclb
lret
aam
inc
or
outsb
and
xor
xlat
orb
movsl
inc
and
call
pop
xor
pop
pop
int3
ds
shlb
pop
test
sahf
out
incb
mov
lods
mov
mov
add
lds
movsb
mov
in
push
insb
push
rclb
mov
mov
jo
mulb
sti
repz
int
push
xchg
adc
bound
sbb
out
test
sbb
insb
popa
sub
stos
mov
in
mov
push
pop
loope
lret
inc
popf
jne
shrl
push
sbb
negb
add
imul
hlt
repz
and
dec
call
xchg
fisttpll
adc
fwait
test
cld
pop
mov
lret
aam
je
fstpt
scas
push
jmp
cmp
mov
adc
push
jno
push
aad
les
sub
jmp
cwtl
in
mov
rclb
inc
lahf
inc
and
jnp
cltd
xchg
ja
js
inc
sub
stos
mov
dec
mov
fisubrl
iret
sbb
int3
or
fildl
movsb
cmp
fisttpll
rcrb
loopne
jns
aam
mov
roll
fildll
push
icebp
les
daa
fbld
and
xor
jo
adc
cmp
xor
outsb
test
cli
testl
clc
lret
pop
mov
and
fwait
push
outsb
dec
test
cmc
sbb
aam
aad
call
fidivs
les
psrlw
add
nop
sbb
cmp
inc
aam
jnp
dec
jg
aam
repz
es
das
neg
fsubrs
mov
je
push
stos
or
xor
xor
xchg
sbbl
in
push
sahf
cmp
shrl
int
dec
pop
ss
cmpsl
jmp
imul
dec
test
arpl
lock
ffreep
pop
jno
fnsetpm(287
test
add
or
xchg
inc
ds
cmp
push
cmp
adc
imul
hlt
inc
aas
mov
cmpsb
lods
xchg
call
inc
int
loopne
mov
add
clc
sahf
xor
sti
jle
dec
je
and
or
cli
lea
jl
sahf
std
loop
pop
jb
stos
loope
sub
lods
lsl
aas
jle
sub
loopne
xor
pushf
pop
add
loopne
jns
lret
jmp
xlat
fsubr
mov
gs
jl
test
add
ficoml
out
bound
out
xchg
lods
nopl
cmpsl
pop
cmp
hlt
rcrl
or
scas
dec
xchg
push
jg
loope
mov
sbb
sub
cwtl
inc
rcrb
inc
fidivrs
dec
pop
pop
cmp
xor
int
je
insb
ret
sub
imul
insl
sub
mov
scas
mov
sub
minps
sbb
sbb
mov
adc
lock
repz
sbb
pop
mov
test
jns
or
jno
cmpsb
jae
or
and
ficoms
pushf
mov
add
add
cmp
pop
inc
push
jecxz
lods
loop
test
mov
cmp
sbb
push
cmp
cli
in
cwtl
insl
fwait
test
sti
xor
gs
mov
outsb
insb
mov
mov
fadd
xchg
mov
daa
mov
test
mov
sti
mov
dec
push
xchg
mov
daa
pop
mov
cmp
fisubrs
lods
xchg
repz
gs
outsb
shll
into
mov
setb
fidivrl
xor
arpl
mov
or
lods
inc
or
cmp
sbb
push
test
inc
lcall
outsl
hlt
adc
fimull
popa
mov
jp
mov
lret
push
loop
les
call
sbb
aaa
jp
outsl
out
aam
rcll
cmp
cld
fcoms
push
repz
add
or
aam
dec
xchg
mov
data16
insb
fbld
shl
ds
sub
mov
and
mov
xchg
mov
das
iret
repnz
aam
and
cltd
ljmp
pop
push
out
ss
push
mov
push
ficompl
outsl
cltd
jmp
xor
icebp
jge
jae
adc
jmp
imul
pop
mov
and
add
sbb
and
mov
std
test
cld
mov
inc
and
xor
addr16
xchg
inc
or
inc
jmp
jbe
scas
shll
popf
xorb
aaa
and
sbb
mov
or
push
ficomps
and
data16
leave
mov
mov
adc
jbe
and
mov
adc
pop
push
add
popa
frstor
lahf
lock
inc
out
ficomps
adcb
cmpsb
testl
cs
xchg
popa
dec
mov
xchg
or
dec
adc
jb
fimull
stos
icebp
or
out
scas
push
out
push
mov
sbb
shll
shl
push
out
rcrl
fs
pop
add
add
xchg
cmp
pop
fdivl
xor
dec
xchg
sbb
mov
mov
and
lret
jne
pop
cmp
stc
aad
repz
cmp
mov
cmp
int3
add
fisttps
fldcw
jno
adc
dec
fs
mov
adc
fwait
bound
xlat
arpl
xlat
lods
sub
mov
mov
xor
mov
lahf
cltd
into
xchg
sbb
bound
xor
adc
sbb
pop
pop
js
jno
push
xor
ror
inc
das
and
dec
push
inc
inc
jmp
xlat
int3
popa
pop
je
inc
aad
mov
mov
ja
shlb
cmp
push
fidivs
push
ja
out
adc
clc
in
or
dec
cmp
sub
push
aad
adc
frstor
loope
push
outsb
std
add
mov
jbe
fidivrs
stos
add
dec
inc
adc
mov
gs
mov
push
inc
cwtl
dec
jno
inc
jb
imul
aaa
jns
das
push
pop
add
xchg
cltd
int3
or
out
xchg
lcall
mov
das
push
jnp
and
stc
and
cli
push
mov
xor
mov
and
pop
inc
lret
stos
stos
jl
out
push
cmp
mov
out
out
sbb
mov
into
dec
add
push
mov
imul
sbb
les
cld
gs
cltd
jl
sub
pop
and
add
jbe
mov
ss
aaa
xchg
fisubrs
adc
imul
gs
lock
lret
dec
cmp
inc
sub
das
sbb
std
adc
hlt
cmpsb
cs
push
jae
cwtl
cmp
ja
jp
push
or
enter
cmc
aaa
add
lods
in
orb
dec
leave
imul
jmp
pop
test
mov
loop
jne
xor
mov
cmp
adc
sbbb
mov
dec
test
lea
not
cmp
rcll
push
loop
cmp
mov
enter
push
andl
test
mov
gs
pop
dec
lcall
mov
add
mull
push
jg
lock
fisubrs
jbe
mov
shlb
out
fiaddl
jg
movl
add
jle
xchg
pop
scas
pop
js
jmp
push
and
xor
ret
call
in
ret
cmpsb
mov
arpl
clc
sub
loope
jle
adc
jmp
test
mov
mov
clc
pusha
jmp
mov
jns
fsubrl
sub
cmpsb
xor
pop
mov
loop
sbb
aaa
inc
lret
and
mov
ss
in
mov
adc
mov
xor
or
test
push
push
sbb
ds
push
xor
pusha
sub
push
stc
popa
popf
aaa
gs
shlb
add
rol
add
xchg
pop
lcall
cmc
xchg
and
pop
jl
out
sub
xlat
test
lds
out
mov
cmpsb
repz
xor
pop
dec
cmp
fmuls
xchg
cmp
xchg
push
mov
jmp
xchg
lock
int
adc
icebp
ljmp
sbb
mov
cmp
add
ret
imul
loop
mov
jae
sti
jecxz
sub
sahf
and
lahf
mov
xor
jge
cli
test
fadd
or
es
hlt
sbb
and
sti
into
dec
sub
mov
mov
push
addr16
and
out
sub
push
xchg
mov
cli
sub
clc
or
lods
inc
pop
and
aad
or
xor
mov
or
shll
or
not
push
repz
dec
in
cs
add
jno
mov
pop
and
insb
xor
mov
or
fcompl
or
lahf
adc
push
rol
add
cli
dec
js
jecxz
adc
xor
pop
push
xchg
ret
xchg
lods
rcrl
cwtl
cmp
sbb
mov
xchg
jae
mov
iret
fildll
in
aam
mov
add
int3
sub
and
das
fists
adc
in
mov
stos
push
lcall
xchg
test
js
jmp
inc
mov
fdivrl
pop
inc
in
enter
shl
mov
icebp
fists
push
mov
and
or
jg
xchg
jno
mov
mov
adc
dec
std
int3
cmp
and
sahf
mov
inc
mov
icebp
fmull
aas
stos
dec
or
lcall
xchg
popa
cltd
pop
mov
mov
ds
cli
fs
xchg
cmpl
into
mov
lods
es
sbb
mov
mov
sahf
repz
dec
xchg
or
add
movsb
mov
in
xor
push
add
int3
lret
or
lods
xchg
iret
mov
mov
xor
cmpsl
pop
xor
ss
sbb
fstpl
loop
mov
xchg
fisttpll
sub
sbb
lea
or
addb
cli
mov
push
cltd
out
mov
lcall
mov
push
inc
and
dec
push
or
das
add
dec
mov
lret
shlb
test
cs
orb
cmp
mov
xchg
xorl
pop
cmc
mov
dec
sub
pop
push
push
sahf
dec
inc
lcall
cmpsb
int
outsl
xor
data16
mov
repz
mov
or
into
bound
insb
xor
mov
ljmp
xchg
sub
sbb
push
push
inc
adc
loope
int3
push
in
cltd
jo
lahf
and
fistps
dec
xor
or
iret
andl
sbb
mov
icebp
sub
adcl
bound
pop
sbb
adc
imul
cli
mov
imul
lods
cmpsl
bound
pop
and
fmull
pop
mov
jbe
ljmp
xchg
jmp
mov
pop
push
mov
out
cmp
out
daa
aaa
rcr
cmpsb
mov
xor
jae
add
xor
out
pop
jno
mov
jmp
jecxz
jecxz
mulb
pop
lock
push
pop
sub
mov
incl
push
sub
inc
push
sub
repz
cmp
adc
sbb
test
dec
sbb
push
les
lret
pop
cld
add
fnstsw
repnz
fldenv
cld
rclb
push
ljmp
daa
push
mov
sbb
decb
adc
sub
mov
mov
inc
aam
test
sarb
xchg
xchg
mov
push
cs
out
xor
flds
pusha
pop
loop
and
pop
push
test
in
cmpsb
lods
push
mov
fdiv
aad
sub
mov
add
push
jbe
xchg
xchg
push
sahf
lret
arpl
mov
in
movsb
jbe
cmp
ss
fmull
out
pop
rcrl
jns
dec
sub
stos
cmpsb
ds
rolb
mov
pop
outsb
sbb
inc
xlat
in
lods
jne
enter
mov
xor
fsubr
cld
dec
jb
jo
adc
jg
fistpl
cmpsb
mov
mov
pop
sarl
dec
rcll
rcrb
cmp
pop
pusha
ret
nop
inc
je
dec
mov
scas
jecxz
mov
pop
sub
push
rcrl
js
daa
popa
movsb
push
daa
and
aas
ljmp
sbb
sarb
insb
scas
adc
iret
jge
cmp
cmp
pop
pop
jmp
cwtl
cmp
sahf
lret
pop
cmp
jno
daa
scas
and
pop
inc
fstl
into
stc
test
inc
into
daa
sub
outsb
push
aas
addb
aas
and
push
stc
scas
mov
jb
movsb
pop
cld
mov
jnp
sbb
cmp
clc
dec
shll
in
xchg
xor
imul
and
in
or
or
ljmp
add
lret
push
aad
and
std
mov
pop
repz
dec
aaa
stc
push
cmpsb
xor
call
add
push
mov
pop
xchg
sub
push
aas
lcall
jno
mov
enter
add
enter
mov
cmp
cli
jbe
push
xor
cld
mov
ret
inc
pop
and
mov
les
adc
jo
orb
scas
jmp
mov
pop
dec
inc
fs
sub
mov
call
bound
jo
dec
lock
jmp
setne
cmp
add
ss
mov
ss
fildll
push
dec
xor
insl
and
insl
pop
mov
bound
mov
push
jbe
dec
out
xchg
pusha
push
mov
push
dec
pop
aam
jle
mov
xor
in
push
xor
leave
in
mov
std
data16
xor
inc
jno
out
mov
in
and
sbb
mov
int
jle
scas
inc
aam
add
insl
out
jmp
ja
mov
mov
mov
daa
aaa
fwait
shlb
mov
or
std
add
adc
cmp
mov
mov
push
in
jo
pushf
jmp
pop
add
mov
add
sahf
sbb
repz
out
repz
or
xor
jbe
mov
neg
jg
mov
mov
sahf
cmpsl
aad
es
fwait
repnz
push
xchg
jne
lahf
lcall
js
cltd
shlb
dec
pop
cmp
inc
xlat
sbb
hlt
xor
mov
fisttpl
decb
rclb
sti
sub
test
addb
cmpsl
cwtl
sub
je
js
call
and
lcall
ss
dec
or
testb
pop
clc
fnstcw
sbb
rcrb
xor
xor
aaa
rcl
and
movsb
cmp
or
outsb
fiaddl
push
adc
pop
adc
jg
pop
cmpsl
ss
dec
fwait
mov
pop
cli
mov
popa
add
mov
mov
leavew
dec
lret
lret
cmpsl
in
fcmovnb
fimull
fwait
mov
mov
pop
std
test
es
lahf
xor
push
ret
mov
adcw
jbe
xor
repnz
or
sub
popa
rcrb
dec
or
xchg
pushf
pop
mov
jmp
sub
mov
jmp
pop
pop
mov
jmp
mov
xchg
inc
dec
cmp
fwait
stos
leave
scas
jge
push
xchg
outsb
rcrl
aaa
lret
pushf
add
xlat
or
jb
leave
dec
test
fdivl
jecxz
ljmp
mov
xadd
mov
and
jne
pop
and
lret
sti
testb
rorl
xchg
jo
shlb
outsb
xlat
inc
clc
loopne
out
shll
pop
dec
test
aas
mov
add
cmpb
int3
jne
mov
loopnew
into
xor
sub
pop
shrb
aam
jns
test
das
mov
arpl
adc
dec
dec
jmp
ja
xor
push
sub
test
cwtl
dec
inc
pusha
inc
and
out
pusha
push
or
test
dec
test
cmp
jnp
imull
jne
mov
sub
orl
dec
scas
jecxz
pop
ret
fstpl
bnd
add
push
mov
rolb
jl
push
pop
adc
sbb
inc
push
call
push
mov
inc
mov
test
mov
push
clc
cld
cmpl
mov
mov
out
lahf
and
popa
mull
test
jnp
adc
pop
add
fildll
pop
aad
mov
stos
lcall
pop
sahf
cli
dec
mov
push
popa
push
stc
or
pop
pop
sbb
popf
mov
stc
inc
ret
and
lcall
ror
fisubrs
sbb
cmp
mov
dec
ljmp
adc
pop
pop
jle
jge
into
xchg
mov
jmp
sarb
lods
daa
stos
fcmovu
out
jne
mov
mov
fcmove
jbe
mov
adc
adc
sub
adc
sbb
or
pop
pop
idiv
xor
add
add
shll
pop
xchg
cltd
cmpsb
xchg
mov
xor
lea
push
cmp
sub
push
shrb
xchg
sar
mov
push
cmp
push
jne
lds
push
xor
xchg
addl
mov
shrb
add
enter
inc
mov
loope
sbb
subb
jne
or
fisubrs
mov
mov
lcall
pop
sbb
mov
push
fwait
xchg
imul
xor
sahf
mov
mov
mov
lahf
aas
inc
addb
adc
mov
push
pop
lods
mov
xor
pop
cmpsb
arpl
add
jle
test
mov
orw
cmp
inc
add
std
xor
and
adc
mov
mov
imul
cld
xchg
dec
add
sub
stc
push
inc
les
test
xchg
xchg
stos
mov
andb
cmc
js
mov
je
push
mov
inc
add
imul
cmpsl
jne
lahf
add
ja
inc
xchg
rcrl
lods
cmp
std
mov
inc
out
repnz
jno
call
cmp
xor
mov
mov
dec
cli
dec
xchg
clc
xchg
loop,pt
pop
add
pop
adc
mov
shll
jl
mov
inc
cmpsl
ja
stos
cmp
adc
fbld
gs
or
cli
mov
and
xchg
fadds
lods
jle
or
xchg
or
xchg
stc
or
xchg
lods
rcrb
jno
movaps
cltd
xorl
sub
adc
mov
mov
push
jns
jnp
es
sub
cmp
adc
loop
xchg
fldt
inc
repz
xor
pop
pushl
fmull
mov
pop
loop
sbb
call
mov
jns
dec
pop
std
fwait
enter
adc
dec
dec
inc
shlb
out
inc
pop
push
scas
and
lret
cmpsl
hlt
jo
pop
sub
fisttpl
jno
data16
pop
repnz
outsb
push
mov
test
xor
cmp
adc
or
gs
or
pop
mov
or
cmp
fwait
nop
push
inc
lret
inc
out
leave
sbb
sub
js
mov
xor
mov
push
dec
adc
mov
out
shlb
xchg
sub
sbb
add
hlt
dec
adc
xor
push
and
leave
shrd
sbb
rolb
xchg
cmp
sarl
pushf
enter
call
arpl
out
int
lods
sarl
xchg
adc
xor
cmp
xchg
jge
addb
or
mov
jle
push
outsb
jle
xor
outsl
mov
dec
daa
jmp
jecxz
mov
xchg
dec
fldl
pop
addr16
shrb
push
push
fcomps
mov
sub
in
add
inc
int3
mov
repnz
cmpsl
shrl
or
sbb
or
insl
add
test
mov
mov
push
adc
mov
jb
vmwrite
pop
pop
or
push
sub
sub
sbb
in
sarl
movsl
inc
adc
jae
mov
pop
movl
dec
xor
scas
ljmp
jmp
lock
fstl
icebp
test
mov
mov
es
lcall
xor
lret
and
stos
pushf
popf
insb
jnp
jb
int3
adc
mov
sbb
mov
xor
and
mov
xchg
jle
std
fmul
int3
mov
out
lods
cmp
je
push
jae
mov
mov
movsb
fs
fwait
insb
stos
jbe
lret
fsubrl
pusha
std
pop
jbe
aad
cmp
neg
jbe
jbe
fnstcw
xor
push
fld
xchg
and
inc
push
and
adc
xor
xlat
xchg
jnp
add
lret
xchg
or
iret
stc
cltd
fmul
or
mov
out
push
and
addl
push
mov
mov
push
pushf
sub
push
scas
cmp
aaa
out
mov
int3
mov
daa
dec
inc
mov
push
xor
mov
in
cmp
sbb
inc
sbb
outsl
nop
mov
dec
lds
gs
inc
xchg
dec
jg
insb
and
pop
dec
mov
loope
xor
imul
sbbb
cmpsb
mov
mov
test
outsb
std
and
int
icebp
inc
xchg
out
jp
and
push
or
lods
dec
stc
lock
xchg
pop
jnp
mov
outsb
or
sbb
xchg
pop
repz
or
and
mov
out
jae
sbb
push
mov
mov
inc
pop
xchg
dec
daa
or
sub
into
outsb
mov
or
scas
xor
push
lcall
cs
out
xlat
adcb
pop
inc
cltd
ljmp
daa
mov
add
add
cmpsb
test
sarb
mov
std
mov
fnstenv
loopne
xor
cmpsb
adc
loopne
or
adc
aaa
cmpsl
or
cmpl
push
mov
lods
ret
xor
inc
xchg
xor
push
les
cli
push
sbb
xchg
mov
je
adc
int3
data16
in
in
jle
cltd
inc
sub
or
subl
xor
add
arpl
mov
jnp
inc
or
sbb
notb
inc
cmp
outsb
pop
cmp
mov
mov
sbb
stos
cwtl
loope
pop
out
jmp
mov
fcompl
sub
mov
arpl
outsl
mov
xor
popa
jno
cmc
cmp
mov
clc
cmp
inc
inc
outsl
push
xor
sub
sahf
scas
ja
sahf
bound
mov
pop
cmp
fstpl
mov
cltd
addr16
mov
aas
es
sti
inc
ljmp
adc
mov
inc
insb
inc
mov
test
out
inc
xchg
dec
adc
enter
addr16
out
aaa
xor
in
mov
and
jp
mov
mov
daa
mov
divl
xchg
insl
xchg
mov
sub
mov
jecxz
lea
addl
adc
xchg
xlat
sub
arpl
lods
push
mov
into
adc
xchg
mov
mov
or
ss
sub
into
mov
into
ret
mov
push
or
or
jle
testl
das
call
movsl
enter
cmpsb
hlt
aam
out
outsl
jne
cmp
cmp
andl
sbb
adcl
enter
push
fs
pop
pop
or
dec
jbe
pop
add
call
cld
pop
xchg
fcoms
cmp
pop
dec
jmp
pushl
mov
popf
xor
addr16
stc
xor
mov
cwtl
dec
ret
mov
ss
cwtl
fistps
jne
and
mov
ret
pusha
mov
es
dec
cs
jge
ret
pop
mov
shl
mov
lods
pop
movsl
scas
stos
je
push
pop
pop
push
testb
lret
sbb
cmp
lcall
cmpsb
push
dec
adc
xor
notl
mov
mov
xor
mov
fstl
lods
and
lods
sbbb
pop
lcall
jecxz
pop
xor
stos
mov
in
jns
xchg
inc
aas
fldcw
add
icebp
mov
in
sub
pusha
dec
pop
cltd
movsb
cmp
xchg
hlt
mov
jmp
in
add
sahf
test
or
insl
mov
jecxz
faddl
xor
inc
movsb
and
push
mov
fbstp
jle
lret
gs
xchg
rclb
xchg
and
push
das
adc
sub
sbb
in
adc
clc
inc
add
frstor
sub
in
mov
mov
adc
mov
jge
imul
negb
xchg
inc
jnp
fiaddl
add
lahf
jb
xlat
inc
cwtl
cmp
mov
jg
jb
int3
jg
push
jg
test
sub
mov
or
dec
jle
adc
sbb
sbb
aam
jno
and
imul
mov
cwtl
jno
je
inc
fildll
adc
loopne
jge
mov
popf
pop
sub
add
mov
xchg
aaa
popa
inc
pop
add
mov
addr16
pop
iret
sbb
push
cltd
mov
popf
mov
das
jno
pop
pushf
xchg
les
jns
out
xor
fisubrl
sbb
cmp
cmp
xorl
test
mov
cmpsl
pop
data16
popf
push
sub
mov
enter
sti
adc
jg
mov
leave
shlb
push
cmpb
sub
iret
ret
push
add
sbbb
adc
mov
bound
outsl
push
fists
aad
xchg
mov
mov
outsl
sbb
out
lock
outsb
push
popf
push
dec
loopne
lods
push
push
in
dec
sub
data16
scas
dec
hlt
mov
dec
leave
fs
nop
mov
add
jb
fcomps
loop
mov
popf
cmp
mov
aad
imul
push
xchg
and
push
shrb
out
loop
aas
mov
mov
lret
inc
loopne
orb
sub
adc
cmc
sbb
fwait
pop
hlt
jecxz
cmp
jns
inc
or
push
ret
out
sbb
add
aam
data16
jmp
fldenv
fwait
arpl
nop
fistps
sbb
mov
dec
xchg
jne
xor
jb
fidivrs
push
in
xor
and
or
insb
inc
pop
in
push
sub
sub
jbe
push
mov
mov
dec
data16
jo
flds
sbb
imul
mov
cltd
fcomp
arpl
lea
cmp
movsl
outsb
jge
fidivs
jbe
sub
leave
add
xor
add
test
jbe
mov
lods
data16
xor
mov
jno
notb
scas
push
push
or
sbb
sbb
loop
test
ja
int
push
gs
jmp
xchg
push
fmull
icebp
iret
xor
test
movb
nop
addr16
push
pop
inc
pop
sbbl
repnz
test
push
movsb
fistpl
test
bound
fimuls
cmp
xchg
mov
jp
xchg
mov
scas
add
jo
lret
xor
cmpsl
and
mov
out
dec
or
jne
ljmp
outsb
mul
push
lds
sbb
push
and
aaa
jo
ss
pop
or
sbb
scas
js
shll
es
test
insl
enter
jle
mov
out
sbb
in
dec
and
cmp
lods
je
sub
test
ret
ds
inc
sahf
clc
jo
inc
int3
rorb
mov
push
out
mov
sub
jl
and
push
lret
push
lds
sbb
sbb
cmpl
hlt
cmp
and
dec
cmpsl
enter
sbb
sub
xchg
jl
loop
pop
add
pushf
xchg
xor
fdivrl
mov
mov
imul
jnp
les
outsl
out
scas
add
imul
pop
fidivs
mov
xor
test
div
aad
faddl
jbe
test
sub
jno
sub
add
cmp
pop
insl
test
fwait
out
xchg
mov
dec
xchg
mov
lret
xorl
jae
lea
stos
and
inc
stos
into
inc
test
add
pop
outsl
call
das
or
xchg
jle
mov
dec
push
sub
mulb
add
inc
daa
sub
mov
and
rorl
add
mov
shll
sarl
pop
sahf
cmp
clc
mov
sbb
pop
lret
push
jecxz
inc
dec
ds
outsb
sbb
sahf
rclb
stos
cld
out
int3
in
cli
jecxz
or
or
es
mov
dec
imul
aad
push
in
cli
stos
dec
in
aas
push
fisubl
jp
fistps
jge
xchg
mov
push
jg
test
movsb
lods
mov
mov
pop
fs
push
jb
test
out
repnz
jmp
push
daa
mov
aaa
hlt
inc
outsl
loope
jae
std
je
pushf
jecxz
call
jl
mov
add
dec
xchg
push
popa
adc
push
ror
cmpsl
aam
jbe
jno
jl
mov
mov
xchg
pop
add
add
jno
out
out
sbb
mov
ds
pop
inc
cs
sub
cmp
and
aaa
mov
pop
movsb
and
xlat
lock
std
lcall
add
add
mov
mov
inc
push
enter
lods
pushf
jno
adc
xchg
jmp
stos
jge
call
out
into
test
jmp
xor
aam
dec
mov
lcallw
sbb
mov
mov
dec
jnp
mov
push
pop
icebp
bound
xor
lods
icebp
xor
int3
mov
and
sbb
jecxz
fwait
sbb
adc
es
jmp
cltd
aam
jmp
or
inc
pusha
shll
xor
in
lock
mov
jb
and
sub
nop
enter
adc
xchg
aam
ljmp
loope
mov
fsubrp
inc
inc
cmc
and
mov
xchg
cs
fldenv
or
out
xchg
jne
and
push
add
fs
xchg
xchg
in
jno
push
pusha
mov
mov
lds
pop
xchg
xchg
sbb
jns
js
mov
aam
jge
jo
cmp
in
mov
push
pushl
ret
mov
or
and
mov
xor
out
jge
inc
dec
pop
sub
push
rclb
mov
xor
outsl
repnz
daa
jecxz
imul
pop
movsl
pop
lret
aas
mov
test
dec
gs
movsl
mov
es
fnstenv
dec
mov
in
mov
aam
stos
vminsd
ficompl
sbb
bound
add
xor
mov
out
sti
and
xchg
jecxz
lret
jge
outsb
push
xor
imul
lock
hlt
push
jg
das
mov
and
add
stc
push
add
cli
jmp
jno
cmp
mov
popf
mov
es
out
cmp
mov
xchg
or
stc
xchg
movb
dec
push
inc
pop
aam
out
aam
push
jns
mov
or
push
shl
imul
mov
cmp
sbb
pop
nop
pop
or
sahf
pop
dec
std
push
dec
push
mov
clc
mov
daa
icebp
bound
push
mov
push
push
arpl
dec
jecxz
lods
pushf
arpl
dec
fs
mov
mov
jno
popa
lods
mov
inc
daa
adc
out
imul
lahf
xor
mov
mov
lea
fstpt
fldenv
ret
push
pop
rorb
push
sub
lods
add
in
jne
vmread
outsl
mov
ja
push
roll
sti
std
add
mov
shrb
add
cld
sbb
inc
rclb
mov
jbe
dec
jnp
mov
xchg
popa
adc
shl
outsl
sub
jae
xor
jbe
mov
mov
jmp
mov
test
or
push
cmp
inc
clc
xor
mov
jp
mov
and
xor
mov
lcall
clc
jno
mov
cli
mov
mov
loopne
lcall
stc
jle
xorl
rcrl
sarl
jns
repz
xchg
dec
push
xor
lods
pop
popf
cltd
imul
out
cmpsl
pop
xchg
jb
mov
outsl
mov
rorb
mov
pop
loope
sub
enter
enter
cmp
scas
xor
out
jle
test
mov
gs
inc
js
in
int
push
outsl
in
cmpsl
adc
sub
push
pop
and
xor
mov
adc
mov
inc
sbb
mov
jnp
dec
mov
into
std
loope
add
xchg
pxor
pop
mov
mov
push
cltd
xor
xchg
sub
pop
jl
push
lret
ret
cmp
cwtl
rcrl
push
mov
frstpm(287
insb
jnp
add
adc
pop
xor
mov
into
addr16
rclb
je
mov
fstl
iret
sbb
push
repnz
test
shlb
int3
xchg
sub
mov
sub
pop
mov
adc
mov
daa
rcrl
pop
aaa
out
adc
jo
jb
pop
or
call
out
pop
inc
rcl
cmp
fs
mov
std
xchg
pop
add
subb
xchg
lret
repnz
shlb
lods
insb
mov
mov
or
inc
mov
sbb
pop
mov
mov
out
js
dec
sti
shlb
rcrl
sti
adc
dec
inc
pop
push
mov
or
add
xchg
xor
ret
inc
adc
push
cwtl
cmpsl
pop
rcrl
mov
test
out
cli
jg
xor
inc
fs
jl
adc
cmp
notrack
cmp
mov
jle
aam
nop
adc
mov
icebp
lds
xchg
xor
dec
sub
mov
mov
cltd
inc
mov
pop
adc
jb
add
cwtl
xor
fdivp
sti
sarl
je
test
pop
fisubrl
fbstp
fsubs
out
mov
sbb
push
inc
pop
pop
insb
add
jp
cwtl
jno
cltd
sbb
cmp
iret
shrb
ret
jg
fildl
mov
arpl
test
stc
xlat
and
lock
adc
push
dec
sub
test
aad
xor
mov
cwtl
add
fdivrs
js
rclb
xor
std
in
ljmp
adc
inc
jne
dec
add
roll
sub
mov
addb
out
cs
fidivrs
lock
sub
mov
push
add
test
push
jmp
mov
lods
mov
xchg
inc
push
fisubl
ljmp
ret
and
addr16
nop
jge
out
sub
faddl
mov
push
loop
push
mov
mov
sbb
aaa
adc
hlt
xchg
push
sub
mov
xchg
lcall
jae
popf
xchg
mov
clc
dec
int
in
or
mov
mov
adc
adc
repz
or
lea
addr16
out
adc
sub
ds
cmp
sbb
mov
cmpsl
push
fildll
or
sub
pop
mov
mov
pushf
cmpsb
or
adc
idiv
mov
xor
xchg
push
jecxz
push
insl
or
scas
js
adc
mov
xchg
pop
fwait
pop
jno
xlat
sahf
popa
in
frstor
mov
cmp
out
in
xor
mov
in
or
pop
fs
mov
mov
gs
std
push
lods
dec
add
mov
nop
popa
fcoms
in
add
rorl
lret
test
scas
stos
inc
test
sub
cli
jge
and
mov
out
mov
adc
sub
rorl
subl
ss
add
lods
cmp
sbb
ret
sub
sbb
fbstp
jb
fwait
movsb
rclb
mov
clc
xor
push
push
out
mov
xor
mov
jnp
sti
movsl
fidivrs
imulb
aam
and
outsb
mov
push
stos
mov
cld
enter
fwait
jmp
cs
jnp
cmp
addr16
push
in
out
cmpsl
and
dec
fistl
jae
adc
pop
or
add
int3
inc
lds
jb
iret
into
pop
or
stc
add
adcb
sub
push
shll
movl
test
add
sub
add
xor
repnz
adc
fs
xor
dec
xchg
cmpsb
mov
ret
popf
mov
cmp
inc
mov
ret
adc
loopne
mov
ret
inc
lods
loope
jl
fistpl
jmp
fildll
mov
sahf
inc
fsubl
mov
arpl
dec
pop
std
dec
ret
shufps
xorb
je
and
cmp
int
lds
push
call
icebp
ljmp
dec
sub
shlb
sub
lock
inc
int3
shrb
into
jb
push
adc
mov
insb
add
push
fmuls
ret
in
movsb
sub
leave
pop
jne
stc
rcl
call
and
mov
dec
jmp
jle
xor
pop
fwait
pop
fcoms
inc
addr16
fsubs
mov
sbb
mov
jl
shlb
aas
shlb
and
aam
jp
pushf
push
dec
push
push
or
inc
xchg
jmpw
lcall
aas
fs
mull
push
inc
daa
loop
and
popa
lahf
and
sbb
lea
insb
and
lcall
push
cmp
mov
movsb
push
xorb
cmc
pop
add
adc
sarb
stos
add
mov
call
pandn
lret
mov
mov
cli
jno
cli
ret
out
mov
cmp
mov
lods
push
gs
inc
sub
cmp
pop
and
and
xchg
lahf
sub
sbb
lds
adc
pop
inc
aaa
movsl
pop
dec
or
xlat
mov
jmp
inc
cmp
adc
cwtl
nop
jle
insb
and
movb
sub
or
scas
jno
push
pop
xchg
fwait
dec
lret
cmp
clc
sbb
fidivl
jp
dec
mov
and
dec
adc
cmpsb
mov
lods
push
jae
jb
out
jno
push
fiaddl
fists
jmp
mov
push
clc
fwait
mov
andps
rcrb
xor
sbb
call
inc
roll
loopne
cli
inc
pop
rolb
adc
inc
shll
inc
imul
rcrb
ljmp
xchg
inc
ficompl
push
lods
push
xchg
cmpsl
enter
out
adc
push
push
cmpsl
inc
iret
sub
fcoms
mov
loopne
add
jmp
stc
test
sub
mov
ss
mov
mov
dec
push
add
mov
ja
pop
cld
mov
mov
mov
roll
negb
sub
vmovhps
mov
adc
jmp
mov
cld
xchg
xchg
mov
les
lock
pop
loopne
lds
cmpsb
or
pop
shll
rclb
inc
adc
jmp
jle
rclb
lret
decl
imul
insb
aad
scas
jnp
ret
push
fbstp
xchg
lcall
sub
ljmp
mov
sub
in
pop
mov
into
aam
dec
lcall
ret
cwtl
jg
insb
xor
mov
pop
hlt
call
mov
mov
sbb
cmp
xchg
cwtl
jge
sbb
and
and
jecxz
in
jns
sbb
fcomps
xchg
pop
push
cmp
gs
cmp
outsl
decb
or
sti
cmp
scas
jb
es
notb
pop
movb
pop
or
aaa
push
mov
mov
loop
fnstenv
shr
inc
popa
cmp
mov
inc
mov
lods
push
ret
imul
cli
mov
dec
inc
mov
sahf
push
inc
mov
jnp
push
or
jecxz
dec
lahf
cmpsb
test
aam
mov
dec
pop
jp
sub
xor
xorl
push
push
subl
aad
bswap
pop
pop
push
add
push
daa
push
in
insb
adc
mov
ffree
into
mov
jae
jp
call
aam
dec
dec
push
adc
cltd
testb
push
or
inc
xchg
push
add
and
aad
xor
jo
fildll
sbb
push
outsb
push
arpl
int
data16
push
decb
inc
ss
jp
pop
in
fwait
sub
xor
push
popa
inc
mov
jo
and
clc
adc
loop
addr16
andl
cltd
mov
or
aas
lcall
xchg
bound
int3
out
jo
dec
out
and
xchg
stc
gs
je
dec
lods
cwtl
push
sbb
xchg
popf
push
outsl
xor
lods
or
repz
jo
pusha
sti
outsb
jmp
adc
aas
ss
xchg
jmp
inc
push
push
jge
cmp
cmp
insb
or
outsb
aas
scas
jecxz
jbe
std
xchg
loope
jo
cmp
roll
and
mov
xchg
mov
mov
repz
into
xchg
int
jo
push
mov
sbb
gs
xchg
xchg
mov
xchg
loop
push
jne
push
pop
adc
jns
jmp
mov
cmc
inc
lahf
sub
inc
fldcw
jge
and
sub
cmpsb
jae
or
fcmovu
loope
loope
mov
mov
sbb
leave
dec
jb
jb
mov
cltd
or
sti
shll
push
inc
pop
cmp
jb
mov
cld
cmpsl
and
shl
xor
adc
or
aam
out
jg
cmp
ret
cli
push
cltd
pop
arpl
sub
mov
loopne
repz
jl
je
lea
and
repnz
daa
sahf
or
mov
lret
mov
sbb
das
ficomps
das
out
scas
mov
fst
lcall
lds
popf
inc
and
jns
xor
xchg
sahf
iret
xchg
lock
stc
jl
cs
sub
popa
aas
and
scas
inc
notb
push
pop
ficoms
jne
fidivrs
adc
out
jmp
dec
xchg
pop
adc
lock
cmp
cmpsl
ficoml
js
rcrl
mov
imul
mov
lods
test
push
out
pop
and
mov
cmp
enter
cmc
cmc
sbb
mov
sti
inc
fcmovnb
mov
aad
mov
cmpsl
adc
xchg
or
inc
roll
fdiv
shr
jno
rclb
xor
fstpt
sub
adc
push
dec
mov
push
ret
pop
insl
and
out
push
jg
bound
or
call
cld
jno
cli
pop
imul
lahf
sub
insb
fs
jbe
das
adc
jmp
popa
scas
lea
imul
dec
out
in
and
xlat
adc
jbe
push
sub
lods
push
sbb
mov
bound
sar
mov
cli
mov
inc
inc
mov
or
sbb
inc
sbb
aas
jmp
gs
jg
mov
fldenv
mov
xchg
ret
pop
mov
dec
popa
out
xor
ss
push
xchg
sub
stos
mov
mov
push
rorl
pop
jmp
lods
or
insb
repnz
push
cmp
jae
outsl
in
jb
adc
rep
clc
dec
cmp
xchg
outsl
int
dec
or
fbstp
cmp
rorb
lret
adcl
faddl
pop
lcall
mov
scas
xor
out
mov
adc
or
push
mov
push
pop
or
cmp
push
cmp
pop
mulb
xor
jmp
repnz
push
dec
mov
stos
out
add
adc
fs
pop
sahf
xchg
jmp
xor
test
jnp
scas
int
mov
mov
push
insb
sti
pop
es
jno
outsl
dec
sbb
add
outsl
adc
ja
jle
lds
jl
fisttpll
lret
js
cmpsb
ljmp
sub
jnp
mov
jb
stos
cwtl
lea
xchg
and
ficoms
jbe
imul
mov
mov
loopne
shlb
xchg
daa
sbb
mov
scas
ja,pn
cmp
xor
test
mov
adc
aas
sbb
aam
fs
sarb
loope
add
rcl
mov
out
mov
outsb
clc
sub
sbb
fdivl
mov
imul
cltd
cli
cs
inc
sbb
pop
out
xor
mov
mov
out
clc
mov
cmp
out
jo
shr
pop
loop
dec
inc
iret
xlat
add
jp
mov
lds
cmpsb
rcl
lds
mov
mov
scas
cmp
push
mov
lcall
popf
sbb
je
sub
orl
inc
enter
enter
dec
mov
pop
fs
cmc
jg
dec
arpl
addr16
jle
jge
mov
clc
rcl
movsb
mov
inc
xor
repnz
sahf
movsl
fldenv
test
dec
sub
repnz
sub
pop
andb
out
xchg
pop
push
fiadds
call
aam
jle
push
xlat
je
loopne
in
sbbb
test
bound
pushf
out
fstps
es
shrb
sub
or
test
and
sbb
sub
sub
fcmovu
idivl
mov
sub
add
jbe
dec
sub
inc
add
or
jae
aaa
jp,pn
adc
sbb
mov
stc
push
xorl
add
xor
push
mov
mov
ds
sbb
jnp
push
add
dec
shrd
and
lock
or
cmp
mov
movsb
call
and
xor
mov
jge
stos
and
jecxz
mov
in
stos
fcmove
cmp
mov
fnstenv
outsl
gs
out
pop
or
and
adc
and
inc
insb
or
adc
dec
insb
js
movsb
sbb
and
cmc
imul
outsb
jo
add
pushf
fs
outsl
or
jo
or
ja
inc
sub
cld
stos
push
fildll
es
fcomps
out
bound
inc
cmp
pushf
xchg
pop
pop
sbb
jp
jg
mov
xor
sti
sub
fmuls
or
jmp
in
in
jp
mov
add
cmp
icebp
xor
outsl
outsl
xor
xchg
push
and
fs
add
lds
xchg
fiaddl
fs
stos
adc
add
xchg
add
push
pop
ds
cld
inc
fistl
lahf
hlt
insl
outsl
in
mov
fnstsw
adc
nop
push
cmp
arpl
mov
dec
aas
jle
xor
mov
adcb
pop
push
xchg
lock
in
cmp
mov
jns
loope
inc
xor
outsl
ficompl
rolb
sbb
aaa
arpl
rcrl
mov
or
xchg
xlat
jnp
test
aas
cli
cmp
mov
mov
fidivs
push
movsl
mov
and
and
sarl
shl
cmc
addr16
js
sbb
push
out
loop
fs
jno
xchg
addr16
sub
mov
add
mov
imull
or
inc
mov
shlb
ljmp
and
mov
mov
and
test
cmpsb
ret
iret
in
pop
jns
pop
mov
es
iret
mov
lock
fs
insb
mov
cltd
outsl
insl
std
pop
push
dec
pop
pop
dec
enter
ret
add
jae
jmp
and
dec
gs
dec
mov
fisttpl
jl
scas
shr
inc
std
push
test
loop
add
push
cmpsb
sti
mov
sbb
cwtl
test
fxch
stos
pop
daa
data16
add
mov
rcr
sub
adcl
sub
inc
adcb
lods
stos
jp
mov
lret
negb
dec
mov
push
js
stc
push
loope
test
pop
btr
fmulp
in
test
cmp
add
dec
dec
add
jp
sbb
sti
je,pn
adc
rcr
imul
out
out
cwtl
sahf
xor
bnd
fldt
jne
push
test
pushf
dec
mov
mov
movsb
inc
pop
fwait
lods
adc
xorb
test
data16
add
data16
xor
cli
pusha
adc
aaa
jae
in
es
imul
aaa
and
jo
jp
out
mov
pop
xor
and
jno
mov
push
lahf
or
aaa
scas
add
or
xchg
imul
inc
int
out
vorpd
push
hlt
rolb
cmp
cmc
popf
push
stos
jle
stos
mov
das
loope
ficomps
ja
or
adc
add
lret
xchg
int
inc
mov
test
rorl
negb
fwait
in
iret
or
xor
aas
xchg
and
icebp
je
cmp
stc
inc
cmp
adc
jne
int3
mov
jae
jno
jmp
xor
cmp
clc
mov
imul
adc
xchg
js
jmp
jle
add
adc
outsb
push
test
add
sbb
inc
pop
inc
cmp
pop
fisubl
pop
mov
mov
icebp
inc
mov
out
add
jecxz
xchg
inc
dec
cs
outsl
jbe
adc
mov
popa
lods
jp
inc
mov
push
addl
add
std
xor
testl
arpl
sub
or
mov
sbb
jg
out
fnstenv
lret
adc
mov
test
adc
cwtl
dec
jmp
les
ja
addr16
rcl
lds
cwtl
xchg
pop
sub
repz
cmp
out
iret
cltd
xorl
mov
pop
push
aas
test
jmp
jnp
inc
dec
inc
out
cmc
mov
sbb
fcoml
jne
xchg
std
repnz
sbb
mov
mov
mov
loope
rorl
xchg
outsb
add
mov
xchg
jle
fstpt
dec
ds
cmp
outsl
inc
pop
insl
outsl
stos
push
int
push
mov
aad
jb
add
sub
mov
addb
pop
inc
jae
icebp
stos
test
dec
inc
mov
mov
in
sahf
xchg
mov
stos
aaa
jle
out
popa
xor
jbe
xor
xor
repnz
cmp
aas
xchg
orl
xchg
fwait
leave
sub
jecxz
inc
jecxz
daa
mov
outsl
cmp
dec
mov
aam
inc
push
sbb
loopne
dec
aam
xor
xorb
xorb
xchg
jns
mov
aas
movsl
lea
outsb
in
adc
sbb
pusha
push
xlat
stos
or
inc
adc
jmp
jmp
cmp
ja
fnsave
aam
andl
jl
aas
fwait
je
ljmp
pop
fs
xlat
sub
lods
or
pushf
fimull
cmp
lods
enter
js
push
imul
lea
jo
lahf
ja
xchg
jg
jecxz
aad
or
fcmovu
mov
fcomps
adc
pop
push
sub
or
mov
push
lret
mov
jno
divl
ljmp
testb
add
fidivl
repz
loopne
mov
add
jnp
popf
mov
and
imull
xchg
or
mov
fiadds
dec
cld
jecxz
in
aam
sbb
adc
test
insl
xchg
js
popa
iret
call
movsl
outsb
test
jbe
push
or
mov
push
test
repnz
adc
mov
push
lret
xlat
imull
xor
pop
and
push
jno
or
int
aas
adc
shl
sbb
lea
mov
dec
test
jb
imul
lret
gs
mov
das
ucomiss
icebp
jmp
push
addr16
lahf
add
pushf
out
push
cmpb
xor
loop
dec
nop
or
and
in
nop
out
xchg
aas
adc
sbb
jnp
dec
xor
and
mulb
testl
das
insb
je
mov
add
push
addl
bound
push
cmp
adc
xchg
cld
mov
ja
scas
xor
mov
nop
stos
pop
mov
out
lock
cmp
lock
push
jne
adc
dec
out
mov
scas
jge
in
dec
jge
sbb
scas
pop
xchg
cmp
add
repz
shl
mov
lcall
xchg
and
mov
push
cli
sbbb
out
lods
cmp
dec
ret
jb
ret
push
xchg
or
push
adc
mov
lods
and
xlat
xor
mov
jle
and
repz
xor
cmc
pushf
jne
pop
fdivrl
cmp
cwtl
neg
mov
push
mov
les
sub
inc
adc
mov
pop
dec
sbb
out
lods
mov
push
test
iret
mov
jge
jnp
insb
int3
push
sub
xchg
sahf
xchg
cs
test
in
shlb
inc
pushl
adc
add
outsb
daa
dec
fs
inc
not
fistpl
adc
lods
das
cltd
mov
lahf
sub
repnz
daa
push
or
pop
sub
add
xchg
jbe
sub
adc
out
jo
sbb
repnz
dec
mov
push
imul
push
pop
inc
shr
mov
jno
xor
popw
cmpb
sub
jbe
icebp
lds
push
push
pop
pushw
leave
add
add
sub
out
mov
les
arpl
aaa
outsl
iret
lret
inc
inc
jle
inc
cs
loopne
cld
push
push
mov
inc
aaa
mov
mov
lahf
sbb
xor
jnp
push
mov
mov
fsts
je
xlat
iret
or
notl
cwtl
xor
lea
ja
test
xchg
xor
lret
shll
and
scas
dec
xor
jo
or
cmpsb
fisubrl
cli
adc
mov
fnstenv
or
dec
mov
mov
add
adc
stc
jns
pop
xor
jmp
gs
mov
or
mov
enter
jg
jl
or
aam
out
dec
pop
or
push
sbb
jbe
es
in
stc
mov
push
jae
sar
push
int
jo
jl
je
push
mov
mov
cmp
jmp
mov
and
mov
pop
test
icebp
jmp
rorb
fmul
stos
fwait
sub
lea
sbb
insl
test
and
aad
clc
sahf
sub
lds
jae
jnp
jno
aas
fstpl
test
imul
les
cwtl
xchg
xchg
nop
xor
sbb
adc
xor
mov
dec
lods
or
cld
push
or
cmpsb
mov
out
imul
test
iret
lret
dec
dec
aad
insl
repnz
ja
cltd
sbb
mov
xchg
xor
inc
ret
sbb
jmp
inc
inc
mov
insb
jmp
insb
daa
arpl
lcall
testl
sub
fcoms
pop
ja
out
jb
shrb
fsin
aad
pop
daa
inc
dec
mov
aad
lcall
xor
or
lss
les
into
mov
sbb
test
stos
andl
xor
adc
push
ret
inc
js
mov
xchg
jl
adc
lds
add
dec
inc
sbb
jle
inc
aam
inc
sbb
insb
movsb
out
imul
jge
mov
dec
xchg
call
dec
cltd
cwtl
push
mov
fidivs
sbb
push
jnp
dec
mov
jno
hlt
loopne
add
inc
call
nop
lea
inc
push
out
or
imul
lea
daa
adc
dec
gs
mov
or
adc
push
inc
jne
jo
adc
shlb
repz
jae
dec
jp
pop
jecxz
xchg
adc
test
sarl
ljmp
divb
dec
fstps
xchg
add
mov
or
dec
mov
mov
dec
lcall
pop
fistps
cli
mov
rorl
mov
pusha
adc
cwtl
outsl
sub
or
lcall
divl
or
adc
mov
shrl
and
or
das
pop
cmp
sub
add
int
lock
sub
pop
rclb
decl
ss
cli
mov
and
jno
inc
lods
sub
out
js
daa
loope
call
mov
push
fsts
orb
jp
les
jl
add
adc
mov
sub
xchg
mov
lret
mov
xchg
sub
hlt
pop
lahf
cmp
push
aas
lret
jno
jl
push
call
cmc
mov
add
mov
pop
inc
jl
dec
add
rcrl
sbb
lds
cwtl
mov
in
xchg
and
fmuls
xor
mov
hlt
sbb
mov
mov
scas
fs
aas
push
xor
push
stos
cld
and
xchg
roll
and
into
mov
repz
and
xlat
fstpl
or
jl
in
xlat
mov
jecxz
mov
xor
lods
imull
pop
inc
sub
data16
and
jl
test
aam
enter
push
jns
enter
clc
mov
sub
push
int
nop
sub
mov
cmpsb
xchg
sub
lcall
pop
mov
fisubl
test
pop
insb
mov
push
push
push
mov
inc
mov
pop
cwtl
test
mov
pusha
lret
lahf
xchg
mov
bound
adc
inc
lods
ds
sahf
scas
and
popf
ret
fidivl
cmp
mov
mov
flds
jb
addr16
lods
pop
cmp
sahf
mov
inc
fs
in
cmp
fwait
int3
sbb
dec
test
mov
test
xlat
xchg
roll
cmp
bnd
ja
jae
mov
inc
in
shrb
shrl
sub
scas
and
jo
lock
stos
xlat
xchg
fcomps
sub
insl
add
and
es
dec
ficoms
sub
aam
stos
mov
push
jae
adc
rorl
cmp
icebp
leave
pop
in
dec
int
inc
mov
arpl
push
clc
jge
adc
std
andl
in
add
call
and
cli
mov
dec
pop
es
fstpl
testl
into
repz
pop
stos
xchg
jno
sub
or
sbb
aas
fldl
insb
repnz
hlt
lods
xlat
sub
out
lret
inc
aas
push
jo
test
pop
and
dec
lret
filds
mov
aam
inc
inc
xchg
call
xor
inc
sub
es
mov
mov
jl
in
add
rclb
int3
dec
push
stos
mov
sarb
cmpsb
andb
or
adc
jg
pop
lock
repz
add
mov
std
xor
cmp
cmpsl
push
mov
ret
call
int3
lea
adc
or
mov
pop
push
xchg
add
inc
test
pop
cmpsb
xor
or
and
out
and
imul
cmc
jle
jno
fiadds
mov
sbb
data16
mov
jno
int
add
aad
pop
mov
int
js
cmc
cmp
fmulp
dec
xchg
pushf
test
or
js
xchg
negb
dec
lfs
incl
push
mov
mov
in
mov
sbb
sub
cltd
jl
push
lahf
dec
negl
loope
cmp
mov
pusha
jae
dec
push
addr16
out
shrl
dec
fs
add
or
adc
rclb
loope
add
cmp
add
test
mov
or
adc
dec
pop
lret
push
adc
mov
ds
or
mov
fwait
call
ljmp
sarb
mov
pop
cmp
fcmovne
sbb
cli
inc
movsb
adc
lds
daa
mov
jae
outsb
push
mov
and
out
xchg
mov
sbb
inc
mov
adc
and
pop
add
test
psrlw
mov
shll
mov
pop
es
popa
cmp
mov
inc
jmp
mov
movsb
or
push
pop
mov
lea
cmpl
out
jns
fbld
mov
hlt
shlb
lods
push
mov
shl
int
pop
dec
mov
adc
add
cmp
and
jne
xchg
mov
js
popa
fldcw
jb
subb
hlt
pusha
xor
mov
inc
and
jle
and
test
add
ljmp
sub
cltd
inc
lock
mov
mov
pop
push
mov
stos
mov
rcrb
stos
push
cmpsb
mov
cld
xor
adc
pop
push
jmp
jle
std
rcll
ja
or
or
mov
jl
dec
push
push
xor
cld
pop
push
divps
fsts
popf
pusha
or
fildll
push
xor
pop
mov
sub
and
fidivrl
cmp
mov
into
das
das
xor
mov
fmuls
and
mov
add
shr
inc
lahf
sbb
sub
sbb
mov
push
scas
xchg
loope
sbb
lods
jmp
leave
das
popa
ja
jl
mov
loop
aad
and
jmp
adc
sbb
into
hlt
aad
sub
inc
pop
int
test
in
in
mov
iret
mov
sti
mov
inc
sub
les
or
ss
lods
pop
jle
pop
jle
lock
push
adcl
repnz
cmp
dec
imul
jbe
sub
aas
stos
inc
ffree
scas
inc
movsl
jnp
test
sub
lahf
stos
rorl
cli
test
pop
dec
inc
cmp
pop
sub
xchg
out
aad
jge
ljmp
fdivrl
dec
dec
push
jno
shlb
repnz
sahf
fcoml
push
repz
loope
and
add
rcrl
mov
std
pop
add
lock
xchg
lahf
gs
or
push
fs
daa
push
pop
test
out
repnz
ficoms
in
and
dec
movb
mov
xchg
push
mov
or
inc
pop
loope
scas
mov
fsub
test
add
xor
push
mov
inc
sub
mov
repnz
jo
les
mov
data16
mov
pop
ret
xorl
pop
mov
lret
es
pushf
out
mov
scas
lea
xchg
pop
std
cmp
nop
rolb
pop
push
int3
repz
hlt
and
pop
fs
add
dec
imul
hlt
negl
and
mov
sbb
mov
pusha
push
xor
out
test
fcompp
scas
dec
outsb
mull
xchg
and
icebp
pop
push
xchg
cmpsb
push
mov
jb
loope
cmp
shll
cmp
cmp
pushf
sub
fs
cwtl
sub
dec
outsb
mov
es
test
push
push
inc
test
popa
and
scas
aas
mov
xchg
cli
fcmovu
xchg
sbbl
and
shrb
in
dec
dec
jno
or
imul
mov
lea
and
cld
test
lods
shrl
jne
sbb
je
mov
mov
sbb
in
mov
shlb
mov
stc
ds
and
inc
std
addr16
mov
push
push
loope
jg
out
sahf
inc
xchg
jnp
rcrl
cmp
dec
push
mov
or
inc
jge
push
push
in
mov
adc
xchg
mov
sub
lods
insl
adc
jp
popa
mov
aad
sarl
push
mov
mov
xchg
fucom
rclb
cmp
sahf
roll
pop
push
pop
pushf
das
xchg
sub
cmp
ss
icebp
popf
fidivrs
cwtl
pop
lcall
bound
xchg
les
mov
in
mov
cltd
daa
call
gs
aam
mov
insl
leave
pop
lods
faddl
or
add
ret
push
test
mov
cwtl
jmp
inc
xor
subb
inc
lock
ffree
xor
adc
ficoms
mov
dec
cld
out
fsubrp
jmp
jnp
xchg
fisubl
cmc
jne
dec
mov
push
bound
mov
cmp
add
push
xor
sti
pop
outsl
jne
addr16
sub
inc
outsb
inc
cmpsl
divb
out
lods
bound
sbb
test
loopne
ds
inc
push
and
stos
fidivs
mov
outsl
jmp
loop
aam
sub
mov
rorb
mov
xchg
adc
cmp
fsub
in
std
lcall
mov
xchg
les
movsb
sub
pop
fnstsw
dec
fsubrs
movsl
adcb
loop
jne
inc
ljmp
cmp
push
in
or
cld
fimull
sti
mov
add
mov
movsb
pushf
push
outsb
xor
xorl
decl
inc
ret
push
out
push
into
mov
pop
in
lcall
and
push
xchg
or
nop
mov
sahf
lock
jge
jno
push
ret
jg
dec
iret
pop
mov
pop
lahf
cwtl
cmc
or
pusha
icebp
push
sbb
pop
adc
adc
jb
inc
mov
insb
mov
mov
ud2
xor
and
cwtl
fdivr
test
pop
sbb
scas
mov
adc
aad
cmp
mov
push
adc
push
xchg
jns
mov
leave
dec
loopne
out
inc
fcmovu
sbb
test
pushf
sub
cmp
aam
or
push
pop
cmp
push
hlt
data16
pop
ret
mov
lret
pop
xchg
popa
xlat
mov
jbe
repz
mov
and
xlat
mov
loop
or
mov
mov
outsl
add
sbb
dec
mov
sbb
lods
cmp
jo
cltd
stos
je
movsb
jnp
in
mov
inc
into
pushf
daa
mov
push
xor
jnp
mov
in
jmp
fldl2e
mov
imul
gs
xchg
and
popf
out
test
inc
adc
mov
nop
adc
adc
push
jne
pushf
lock
scas
dec
in
dec
add
cmpsb
push
mov
ret
lret
fucom
dec
adc
add
bound
and
xor
jo
in
adc
and
and
add
loopne
inc
mov
nop
xchg
xchg
mov
or
mov
add
mov
outsl
out
sbb
icebp
and
aas
mov
cmp
pop
pop
xchg
rcl
sbb
outsl
jle
cmp
or
mov
jecxz
push
adc
xor
jl
negl
mov
mov
pop
jmp
cmp
cmp
iret
stos
mov
xchg
mov
pop
inc
lcall
push
jl
jp
lods
sub
jle
dec
pop
fisttps
push
test
push
mov
jg
nop
inc
mov
add
int
and
inc
xchg
cmp
sbb
cmp
jb
cli
jmp
movsb
cmc
cmpsl
xchg
jmp
jne
shl
imul
ja
js
mov
xlat
cwtl
pop
out
lock
fwait
mov
into
adc
mov
sub
mov
in
je
ja
leave
lret
int3
inc
stc
arpl
mov
xchg
sub
sahf
loop
xlat
or
movsb
in
inc
dec
mov
adcl
push
fidivrs
out
in
mov
lock
dec
cmp
mov
insl
lds
shll
nop
shrb
pop
add
xor
dec
je
push
les
divl
xor
mov
mulb
mov
popa
xor
add
and
andb
rcrb
lods
cld
sti
inc
or
enter
subb
mov
scas
cmp
push
push
mov
sbb
pop
loop
xchg
cmpsl
inc
fwait
cltd
test
fcoml
dec
testl
mov
fsubs
adc
insb
cmp
cwtl
push
mov
push
mov
pop
iret
mov
dec
add
out
das
sbb
pop
mov
dec
xor
test
xor
sbb
filds
sahf
int
insb
inc
cmp
jg
push
dec
vpmacssdqh
cmp
pop
pop
xchg
jae
cmp
sbb
aad
cmpsl
and
cmp
sbb
sub
shrb
xor
scas
mov
sbb
rolb
inc
outsl
push
fdivs
out
inc
cs
mov
dec
ja
loop
fidivl
jns
cltd
push
test
mov
adc
test
aaa
fstps
loopne
dec
fstpl
scas
sbb
mov
out
cmpsl
int
cwtl
pmaxub
add
in
push
inc
fisttps
shlb
sub
cmp
add
ret
xchg
sbb
das
iret
insl
add
xchg
add
add
cmp
sbb
sub
inc
xchg
pop
inc
xchg
dec
jge
mov
adc
cmp
mov
mov
dec
rclb
xchg
inc
lahf
mov
adc
jge
js
pop
cmp
add
int3
xor
stos
push
cmpsb
sbb
mov
fsubrs
pusha
and
stos
inc
xor
and
mov
js
in
add
ss
or
ss
out
add
sbb
insl
popa
gs
popa
push
lcall
push
popf
aam
inc
les
jg
out
inc
lcall
sub
jp
mov
and
out
in
in
in
mov
or
pop
xor
cmp
xor
sub
push
ljmp
call
jl
imul
mov
xor
outsb
push
dec
rcrb
jl
jg
sub
imul
loopne
inc
xor
dec
pushf
pop
int
stos
lcall
dec
fldenv
jnp
and
shrb
mov
imul
cmpsl
mov
scas
pop
push
cmpsl
mov
or
sub
int
push
cwtl
ss
sbbl
adc
outsl
sbb
mov
int
cli
mov
adc
mov
cmp
mov
pop
adc
shlb
in
mov
movsl
dec
jl
addr16
push
pop
mov
inc
lods
jecxz
loop
gs
add
in
jnp
fimuls
mov
mov
sbb
fnstsw
pop
jno
add
mov
adc
mov
jnp
or
fistpl
addr16
cli
mov
int
add
in
repnz
pop
aam
addb
push
add
push
jne
dec
push
fisubl
sub
and
and
mov
and
jmp
ret
push
push
stc
fcmovb
in
out
push
scas
push
rcrb
xchg
push
arpl
dec
jge
push
adc
popa
add
jnp
ja
jno
mov
and
lock
jmp
loop
mov
dec
rol
adc
sbb
inc
ss
aam
pop
dec
fcompl
scas
push
stos
movsl
mov
imul
inc
sub
xchg
sub
outsl
xchg
mov
insl
ret
mov
mov
das
pop
daa
sub
jne
mov
xor
adc
aad
jecxz
pusha
jno
hlt
fnstsw
daa
mov
jp
subl
hlt
enter
mov
add
lods
leave
out
je
inc
xor
rorl
ds
jge
cmp
out
aaa
push
aad
pushf
push
lock
mov
mov
inc
lret
popf
cmp
test
cmpsl
dec
jb
mov
inc
decl
push
stos
ljmp
inc
sub
mov
inc
jnp
ja
or
sahf
sbb
add
psrld
stos
add
mov
stos
sti
movsl
outsl
and
adc
and
daa
xchg
mov
mov
sbb
movsl
fs
sub
fmul
jmp
out
adc
pop
push
repz
mul
mov
jbe
jecxz
jge
add
add
mov
cmpsl
ljmp
jp
xchg
cmc
leave
mov
loope
mov
mov
dec
mov
cmp
ffreep
aas
loopne
test
mov
push
add
fcmove
pop
cmc
inc
xchg
es
add
rcrb
adc
test
pop
mov
cld
push
aaa
popf
pop
out
dec
bound
fcom
call
fnstcw
fcomp
cmp
sahf
jg
sub
lock
inc
mov
loope
xor
mov
out
jno
push
mov
mov
push
aaa
shrb
rcrl
xor
femms
dec
lods
adc
fsubs
fyl2x
jg
daa
nop
pusha
dec
push
iret
sub
jmp
pusha
cmpb
pushf
movsb
leave
mov
and
mov
test
bound
xor
ljmp
fcomps
pusha
int
xchg
cltd
lds
fdivs
jg
or
popf
add
int3
ret
movl
dec
outsb
push
cwtl
lahf
sti
inc
xchg
adc
mov
push
sbb
pop
test
xor
adc
lock
mov
adc
ret
lret
and
sub
and
int
cmp
mov
or
popf
pop
scas
std
push
cmp
sbb
lret
iret
stos
xor
shlb
lahf
or
or
or
mov
dec
ja
push
lods
jmp
clc
cmp
jmp
outsl
or
inc
sub
add
test
sub
clc
cltd
popa
ss
call
xchg
xor
dec
dec
jmp
fimuls
inc
mov
cmp
push
pushf
pushf
dec
into
aam
mov
or
mov
pop
mov
xchg
inc
jle
inc
lahf
imul
sbb
xchg
js
and
rclb
fisubl
push
lods
out
rcll
aaa
or
fisttpll
lods
jne
and
xchg
mov
test
loop
jl
adc
ljmp
inc
ljmp
pushl
cmp
sub
adc
sbb
jne
into
fs
bound
mov
lock
dec
or
push
dec
push
mov
sub
jmp
test
push
adc
fdivrl
jb
fiadds
mov
and
mov
mov
and
scas
push
jg
dec
jecxz
out
xor
sub
lods
push
xor
fildll
dec
inc
and
mov
mov
mov
xor
jo
adc
in
inc
fwait
test
or
jl
fmull
jnp
pushl
rcr
out
fsubl
adc
xor
aaa
adc
lods
sub
aaa
adc
pop
rcrb
cmp
mov
cmp
xor
sbb
pop
loop
push
adc
push
add
insl
or
pushf
rcr
sub
lds
loop
adc
xchg
jb
xchg
xor
leave
jl
mov
or
jg
mov
popf
sbb
xlat
jp
mov
mov
movsl
mov
pop
jg
addl
std
fidivrl
adc
and
out
push
push
jmp
mov
test
jp
movsb
sahf
pop
or
cmp
mov
lods
and
imul
out
mov
cmpsl
mov
mov
lods
cli
aam
call
aas
jae
add
leave
fidivrs
cmc
adc
clc
dec
lcall
aad
out
jl
cld
jle
es
hlt
add
das
mov
cli
cld
cmpsb
daa
ror
jmp
add
sti
out
movsl
push
push
aad
insl
xor
xchg
add
lds
add
mov
js
addb
subb
add
pushf
les
leave
xchg
loopne
xchg
dec
out
or
sbb
in
cmp
ss
xchg
jmp
js
pop
pop
sub
mov
add
jae
sub
cmp
jno
addl
mov
xchg
enter
mov
std
and
nop
xor
mov
or
mov
call
sub
jp
and
jno
es
stos
bound
or
mov
pusha
mov
fdivrs
stc
lcall
pop
adc
or
sbbl
inc
push
and
mov
lea
ret
lret
sbb
fsubl
test
into
cltd
outsb
xor
dec
sahf
mov
fdivrl
dec
jmp
rcll
cmp
ds
xor
xor
sbb
pushaw
mov
jecxz
je
cmc
test
movsb
xchg
and
enter
scas
imul
xchg
imul
ja,pt
out
hlt
push
push
fiadds
jo
test
dec
movsl
jecxz
inc
mov
test
and
mov
inc
push
push
clc
scas
inc
jb
and
jbe
push
out
push
ss
xor
lret
xchg
sub
lods
inc
lea
xchg
mov
xchg
mov
mov
mov
mov
pop
ret
sbb
clc
mov
out
test
mov
push
test
sbb
daa
pop
fcmovnb
das
pushf
sarl
jbe
or
aad
dec
jno
leave
add
std
les
pop
xor
dec
mov
or
jp
ja
les
sub
subl
and
or
addr16
push
gs
lahf
loop
sysenter
iret
mov
jg
xor
push
dec
popa
lret
or
clc
mov
jns
rol
xlat
pop
scas
ljmp
in
lcall
mov
lahf
inc
and
mov
das
adc
push
dec
xor
daa
mov
ss
popa
cwtl
dec
sbb
out
ds
dec
lds
mov
pop
scas
test
mov
push
mov
dec
int
or
imul
add
pop
inc
mov
xchg
mov
xchg
les
adc
leave
cmpsb
in
cmp
stos
lea
sbb
call
in
sarb
xor
aad
xchg
shl
mov
dec
test
inc
mov
test
push
int
mov
push
pusha
push
inc
jnp
loope
cmp
push
inc
adc
repnz
jo
cmp
or
mov
inc
stos
lret
sbb
scas
mov
ror
and
mov
pop
iret
cld
pop
call
outsl
imul
xchg
fsubs
xor
popa
cmp
into
push
out
repnz
or
mov
mov
push
imul
fcoms
jnp
dec
cmpsb
test
sub
lcall
mov
inc
pusha
xor
jno
xor
mov
call
sahf
xchg
test
popa
into
push
out
lret
into
rclb
and
popa
mov
in
push
pop
sti
xchg
mov
dec
push
xor
cmovle
insl
incl
cs
iret
bound
sti
xlat
arpl
test
outsl
pop
popf
jo
jmp
pop
inc
mov
scas
sub
fisttpll
mov
out
fs
dec
jno
adc
push
rolb
sbb
xchg
mov
or
sub
jp
lret
sbb
test
cli
inc
xchg
dec
or
push
das
cmc
adc
inc
push
pop
push
mov
mov
cmp
and
and
out
adc
adc
test
push
dec
shrl
xchg
adc
mov
and
dec
inc
dec
xchg
xchg
adcl
push
dec
mov
cmp
lcall
xchg
sbb
shll
call
mov
xor
pop
push
daa
jbe
sbb
in
add
fsubr
cmp
icebp
add
scas
cmp
sub
jno
sub
pop
iret
jge
xchg
pop
aad
leave
int3
xchg
fildll
jae
push
xchg
sub
push
inc
popa
pop
jae
xchg
xlat
pop
imul
in
push
shr
pop
jo
out
out
push
cmpsl
or
dec
fcoml
jge
jl
and
cs
add
out
xchg
and
adc
push
imul
imul
pop
cmp
jle
dec
pop
fdivp
aaa
cmc
mov
dec
lods
jle
xor
xchg
pop
xorl
insl
mov
es
ficoms
scas
scas
mov
xchg
sub
jge
xchg
lahf
inc
jns
fcoms
push
dec
andb
ret
mov
push
xor
cmp
cmc
insl
imul
jo
pop
lret
rcpps
loopne
or
mov
adc
lods
jns
mov
xchg
pop
sbb
adc
xor
in
and
shrl
push
cmp
cld
add
jbe
mov
xor
rcr
sbb
outsb
call
cmp
jmp
or
ds
imul
add
out
mov
sub
pop
mov
mov
nop
into
mov
es
and
movsb
or
dec
ficoml
andb
inc
mov
nop
scas
pusha
lods
or
test
lods
fwait
lods
inc
sarb
inc
dec
fs
mov
mov
cmc
sbb
push
lods
xor
jae
lret
lods
in
out
xchg
cmp
push
iret
sbb
cmc
add
add
loopne
frstor
add
data16
cmpl
mov
es
pop
sbb
pop
sbb
stos
js
add
push
xor
and
and
std
inc
inc
sbb
pop
sub
fwait
and
outsb
xlat
mov
pop
jne
adc
xor
jbe
sahf
stc
push
in
cmc
test
or
out
mov
out
dec
xchg
orb
sbb
and
fs
out
cmp
mov
out
mov
lods
or
mov
mov
pushf
lock
xchg
orl
int3
imul
add
xchg
cld
outsl
and
nop
daa
aas
push
inc
fwait
clc
sub
sahf
pop
xchg
mov
adc
clc
into
fstl
inc
mov
mov
cmpsl
call
out
rclb
pop
fldcw
push
aam
mov
fwait
cmp
mov
lahf
sti
test
imul
push
out
lock
adc
dec
push
aad
clc
leave
sub
and
std
aam
data16
addb
lods
xchg
inc
jnp
popf
sub
loopne
dec
clc
aad
mov
lods
sbb
jecxz
dec
mov
out
dec
xchg
pushf
jecxz
arpl
pop
in
cltd
push
adc
addr16
fstpl
inc
js
xchg
sub
and
jg
adc
jge
in
mov
out
repz
jg
dec
aad
imul
xchg
pushf
xchg
cwtl
dec
cltd
sbb
pop
fnstsw
and
std
and
inc
sub
jbe
addb
flds
mov
orl
pop
ljmp
pushf
pop
mov
mov
into
outsb
mov
mov
stos
mov
call
mov
icebp
lret
pusha
dec
pop
test
mov
je
sub
pop
jb
cs
jecxz
inc
xor
js
out
adc
nop
jns
inc
mov
mov
clc
push
lods
cmp
mov
es
mov
or
pop
in
add
push
add
or
rcl
or
inc
or
and
mov
int3
test
insl
push
stos
sub
xbegin
out
out
ja
pop
inc
fldt
sbb
stc
mov
xor
nop
sub
mov
dec
dec
mov
xor
aas
mov
addr16
cld
insb
inc
add
popf
pusha
rcrl
in
dec
lret
add
sbb
and
push
ss
int
push
fs
fstl
cmp
pop
shr
enter
icebp
xchg
jbe
or
iret
mov
jl
push
inc
pusha
and
js
ja
std
adc
or
push
pop
int
test
arpl
or
and
imul
loop
insl
stos
cmp
sahf
push
inc
and
jae
aam
dec
mov
pusha
mov
or
or
cwtl
cmpsb
sarb
fwait
test
or
mov
notb
test
sbb
and
jb
in
adcb
loope
fs
sahf
aaa
cmp
xchg
jno
mov
pusha
mov
cltd
cmp
push
inc
js
push
jno
push
shr
lret
loop
jbe
loopne
leave
cmpsb
mov
addr16
imul
push
mov
add
xor
jno
lock
pop
jg
sbb
or
aas
imul
adc
mov
cmpl
cmp
adc
test
push
fnstcw
mov
into
jne
dec
pop
les
leave
push
enter
jnp
clc
or
movsl
and
xchg
and
mov
imul
lock
dec
and
jmp
xor
divb
fwait
lcall
mov
sub
or
bound
pop
add
popa
push
xchg
cmp
jnp
das
gs
dec
and
xchg
test
outsl
loop
mov
adcl
pushl
mov
into
into
add
stos
ret
cmpsl
dec
or
push
and
inc
mov
xor
and
movsb
dec
xor
add
or
jbe
popa
cli
dec
xchg
aad
mov
out
xchg
jl
cmp
sub
in
push
mov
stc
pop
js
push
sbb
mov
xchg
push
dec
xor
aad
pop
pop
ret
rclb
sbb
xlat
fstp
lods
in
xchg
sbb
sub
mov
addl
mov
mov
sbb
aaa
fs
xchg
push
cmp
xlat
aad
mov
adc
out
add
sub
mov
cld
rcr
sbb
les
aas
fwait
dec
sub
and
clc
sub
out
dec
mov
xor
jmp
fdivr
and
cmp
cli
movsl
scas
mov
inc
lret
jmp
pextrw
or
sbb
cmp
aaa
jge
dec
cmc
adc
and
in
push
jmp
movsb
xchg
xchg
mov
sub
icebp
xchg
push
xchg
fdivrl
mov
xor
mov
xchg
dec
dec
jg
movsl
xchg
jp
push
mov
out
std
lret
sahf
pop
xor
dec
and
cli
add
imul
mov
push
pop
adc
fcompl
dec
mov
lds
mov
divl
xchg
loop
dec
adc
push
sbb
movsl
sbb
push
inc
push
mov
repz
fwait
int
cmp
in
pop
mov
or
mov
add
bound
mov
jmp
ss
push
jge
insb
cmc
inc
jnp
dec
mov
add
or
loop
fwait
nop
jge
jbe
push
mov
push
lea
dec
jbe
aaa
xor
mov
sub
loopne
movsb
in
ficomps
jg
in
mov
mov
xchg
sahf
mov
push
mov
cmpsb
pop
mov
mov
and
popa
mov
xchg
sti
push
xchg
adc
rcrl
xor
lea
ja
sub
mov
movsl
stos
xor
mov
fldl
inc
call
arpl
shlb
pop
add
mov
sub
mov
or
inc
push
sahf
add
fld1
psubw
ja
dec
mov
subb
or
push
loope
or
dec
pusha
shlb
or
cmp
xor
xchg
std
mov
pop
repz
push
xor
mov
add
flds
lcall
or
cltd
jp
int3
dec
cld
shll
adc
adc
jecxz
push
mov
push
lods
int
push
pop
cmp
pop
movsb
add
push
xchg
pop
jno
outsb
vmread
std
arpl
push
dec
hlt
push
cmp
lcall
pop
pop
fistl
mov
dec
jg
and
into
xchg
ja
mov
push
rolb
jmp
jle
xor
imul
sbb
aad
adc
inc
mov
das
and
or
sub
sub
into
ficoml
aaa
xlat
jns
xor
adc
popa
adc
inc
mov
xor
mov
xor
mov
xor
aam
jl
imul
in
xor
push
jo
add
cmc
pop
cmpsl
gs
outsl
lods
jbe
fsubrl
ficomps
and
aaa
shl
daa
aas
sbb
bound
mov
daa
aad
loope
dec
xor
jae
repz
ja
in
xchg
and
and
cmpsb
pop
cmp
fisubrl
call
xor
shlb
jo
fimull
bound
push
cld
add
cmp
dec
mov
cmc
sbb
fiadds
mov
loope
ja
mov
xchg
lahf
mov
incb
clc
std
fldl
adc
inc
sub
fiadds
jl
inc
and
pop
and
sbb
lods
outsb
stos
xchg
popf
jno
add
pushf
outsb
test
out
jnp
bound
sub
sub
mov
inc
inc
lods
xchg
mov
or
and
lcall
mov
es
xchg
xor
out
cld
mov
movsl
fstpl
dec
call
add
xor
daa
add
xchg
adc
out
jbe
mov
ss
cmp
loopne
test
sahf
and
cli
ja
add
or
and
sti
jns
jbe
iret
or
addr16
mov
mov
adcb
insb
jg
ret
pop
insb
paddq
inc
jge
jne
jno
push
or
push
stc
cmpsl
cld
sub
pop
in
inc
sahf
nop
into
push
cmp
pop
sbb
adc
hlt
in
shll
test
hlt
xor
mov
mov
ds
jbe
jno
stos
sbb
sub
insl
add
mov
cltd
or
jne
dec
sbb
dec
ljmp
inc
jecxz
inc
cs
test
mov
adc
andb
out
xchg
mov
adc
xchg
xor
movsl
add
dec
aaa
and
pop
int
js
call
sub
xchg
imul
aas
rdmsr
icebp
ret
mov
cmp
dec
cmp
stc
xchg
or
mov
xchg
lods
sub
lds
cmp
cmp
inc
xchg
cmpsl
pop
adc
cld
push
mov
pop
inc
mov
mov
pop
outsl
push
pop
push
sub
sub
icebp
popa
or
ja
ret
pop
fisubs
lods
adc
adc
insl
push
decb
adc
je
inc
idivl
mov
inc
jmp
and
loope
mov
cmp
push
dec
push
jno
cwtl
stc
int3
movsb
fcmovnu
jl
loopne
call
xor
lods
mov
push
pop
add
lea
dec
cmpsb
mov
hlt
inc
out
sarl
in
xchg
je
daa
scas
aad
out
rep
sbb
rclb
dec
add
dec
jbe
cltd
and
inc
mov
xchg
and
rcrb
push
addr16
jae
bnd
push
iret
pusha
leave
repz
add
mov
test
xchg
popa
push
jno
cmp
mov
fisubrl
js
jmp
dec
andl
sub
inc
xchg
push
popa
sub
loope
test
in
int3
adc
and
mov
push
or
xchg
gs
andl
push
and
fs
dec
sbb
ret
cmp
push
jle
cld
pop
cmp
adc
xor
popf
pop
xor
jl
ljmp
test
sbb
add
lahf
mov
dec
leave
bswap
push
aad
stos
imul
xor
in
or
into
inc
testb
or
dec
sahf
cmc
or
gs
inc
dec
ss
push
mov
fimuls
sub
test
fildll
sbb
enter
sbb
lds
mov
and
and
mov
mov
cmp
jge
dec
sub
adc
fstpl
xor
xor
sub
addr16
aaa
cmp
repnz
xor
and
cmp
sub
push
dec
adc
roll
cmpsb
sti
or
call
outsl
or
inc
and
cmpsb
mov
dec
pop
sub
sbb
push
insl
dec
mov
jb
inc
icebp
ret
repz
das
fists
fdiv
addr16
push
jne
cmc
stos
adc
push
jecxz
push
call
or
jecxz
inc
hlt
and
lds
mov
or
fwait
js
in
movsl
loopne
pusha
aaa
mov
es
sbb
cmp
add
cltd
mov
shll
in
pop
pop
cld
mov
pop
cli
fistl
inc
imul
push
adc
in
mov
cmc
scas
daa
jne
out
imul
scas
push
cmpsl
data16
fsubs
jne
dec
dec
lods
cmpsl
xor
xor
mov
stos
push
rcr
jecxz
lock
popa
jo
dec
orl
xorb
insb
add
mov
nop
pop
pop
popa
fcoml
jo
std
adc
aad
popa
adc
cwtl
xchg
data16
mov
fwait
jmp
stos
sub
mov
pop
dec
and
push
mov
mov
shl
mov
cmp
pop
pop
nop
sbb
sub
or
out
test
call
out
push
inc
xor
add
and
fcompl
fdivrl
or
adc
paddq
ljmp
jmp
bound
les
popf
loopne
and
insl
cmpb
push
push
dec
imul
push
push
js
cmp
jo
imul
daa
cmpsl
mov
out
jnp
push
insl
mov
dec
bnd
mov
int
les
pusha
in
iret
mov
xchg
sbb
fsubrs
dec
repnz
lods
js
add
loop
pop
inc
xchg
mov
in
and
daa
loope
pop
lahf
andl
or
mov
pop
cmp
cmc
xchg
push
push
mov
fdivp
aas
in
mov
xchg
mov
cmp
shl
lods
shll
enter
or
mov
scas
fstpt
inc
or
mov
pop
add
jbe
mov
cli
dec
xor
pop
aaa
sbb
int
mov
and
ja
xor
out
jle
shl
stos
and
sbb
mov
cmp
rcl
pop
mov
inc
ret
stos
notl
lods
dec
lcall
inc
pop
or
das
mov
adc
push
fwait
pop
leave
std
fcmovb
rolb
sub
or
push
dec
mov
dec
addb
insb
jle
jbe
fnstcw
or
stc
popf
pop
loopne
mov
xor
mov
push
xchg
call
rorb
mull
nop
or
repnz
cmpl
enter
cli
dec
dec
cmpl
add
dec
dec
pop
adc
mov
ret
push
daa
ja
fldt
sbbl
in
or
sahf
lahf
ds
sbb
cmp
or
ja
test
mov
add
aam
push
lock
lods
fs
rcr
inc
iret
sbb
jmp
fsts
mov
sbbl
mov
inc
pop
xor
bound
fidivl
repnz
repnz
jp
adc
jl,pn
mov
push
adc
mov
sahf
movsl
stos
lods
cmpsb
add
or
or
in
mov
jns
bound
dec
fs
jg
cmp
xchg
jb
fimuls
sub
push
sub
jne
inc
movl
rcll
pop
scas
sahf
mov
ficoms
mov
out
setl
jl
xor
scas
cmp
push
adc
ret
jecxz
sub
lea
clc
pop
popf
scas
rcr
or
jg
xchg
mov
testb
cwtl
lea
test
xchg
push
js
adc
xor
inc
push
popa
fwait
int3
pop
test
inc
inc
in
outsl
pusha
pushw
andb
push
fdivs
jl
dec
ljmp
inc
fstl
enter
sub
sti
sarb
inc
and
add
dec
ljmp
lods
pop
out
inc
adc
fwait
xchg
rcll
cmp
idivl
pop
stos
adc
jns
mov
cmpb
and
fwait
repnz
lahf
push
lret
add
sub
call
and
cmpsb
xor
adc
sub
and
andb
and
enter
negl
push
jmp
stc
ja
popa
leave
cmpb
andl
popa
sahf
idivl
add
push
jns
inc
fld
jl
lods
jns
add
test
dec
andl
xchg
xor
ret
jno
fimuls
xchg
mov
pop
fs
or
mov
shrb
adc
sub
les
in
sub
mov
jle
in
dec
ljmp
sub
popa
jmp
pusha
rorl
mov
dec
fwait
mov
lcall
sub
sbb
lret
mov
outsl
push
fmul
stc
in
jp
sub
shrb
mov
xor
pop
dec
mov
stos
in
jecxz
sub
push
mov
stc
mov
sahf
dec
sub
int
xchg
in
cli
mov
or
add
int3
xor
inc
jmp
dec
stos
dec
test
push
xchg
mov
mov
push
jnp
test
mov
out
addr16
sbb
jp
lar
xor
stc
pop
orl
push
push
stos
mov
inc
stos
fucomp
push
lds
adc
push
dec
sbb
orl
xchg
stos
mov
adc
push
xor
test
cmp
dec
inc
inc
callw
push
push
mov
test
jle
xlat
and
xchg
mov
dec
int3
adc
data16
adc
cmc
es
cmp
mov
cli
inc
repz
push
pop
xchg
mov
aam
int3
adc
sahf
mov
xchg
pop
xchg
sti
sbb
ss
sbb
xchg
sbb
sub
mov
lret
push
dec
sarb
cmpsl
dec
mov
xor
popf
iret
fucomi
and
loop
loopne
test
in
into
or
adc
andb
sbb
push
ljmp
repnz
add
jbe
cltd
mov
or
movsl
das
cmp
lcall
fcmovnbe
mov
jo
shlb
pop
shll
pop
incb
fistl
incb
les
lea
or
in
das
jp
push
fisttps
jno
sub
adc
dec
sub
in
fisubl
mov
pushf
dec
adc
xor
stc
fstp
pusha
mov
fcomps
shl
int3
addl
test
pop
mov
scas
jl
push
ja
and
insb
outsb
mov
dec
add
cmp
lcall
mov
sub
cld
jb
inc
jge
dec
pop
ret
dec
add
adc
fdivrs
sbb
inc
cmpsb
jo
int
popf
popa
lock
lcall
sarl
cmp
cmp
mov
xor
xor
mov
loopne
leave
mov
jp
pusha
loopne
cmp
mov
scas
push
adc
xchg
add
jae
sbb
or
mov
jecxz
adc
call
push
fs
in
cmp
and
xchg
add
mov
cmp
push
lods
push
mov
and
bound
fxch
inc
cs
add
xchg
xchg
stc
adc
cld
mov
add
mov
mov
xchg
jecxz
add
hlt
mov
mov
cld
inc
sbb
mov
popf
call
cld
movsl
jl
and
or
scas
mov
mov
dec
xlat
aam
inc
mov
pop
inc
les
xor
call
mov
and
mov
jecxz
out
in
add
xchg
mov
xchg
cmp
frstor
sbb
mov
mov
mov
ss
arpl
mov
lods
sub
push
into
mov
add
inc
xor
test
dec
and
movb
rcl
jmp
scas
out
adc
mov
pop
sbb
jmp
xor
inc
mov
jl
in
pop
or
push
fstpt
adcb
xchg
mov
leave
mov
push
pop
fcoml
and
or
push
mull
xchg
mov
aam
jl
jnp
in
lock
cmp
and
or
and
enter
hlt
or
adc
adc
in
jmp
rorb
and
iret
fcompl
fisttpl
jne
dec
xchg
xor
fdivl
lods
mov
fwait
mov
xlat
push
clc
test
adcb
sti
jecxz
mov
jge
imul
lods
fdiv
mov
pop
repnz
add
lcall
and
push
fistl
scas
mov
loop
xchg
fsubl
loop
mov
sar
push
lret
pop
mov
icebp
xchg
dec
mov
xor
mov
call
cmp
pop
rorb
leave
and
cmpsl
mov
iret
subb
xor
pop
and
es
je
imul
ja
jne
je
insl
mov
adc
das
pusha
outsb
shlb
cli
pop
cmpsl
xchg
repz
lahf
mov
sbb
adc
cmpsl
cmp
hlt
or
fsubs
imul
xorb
dec
cmp
cwtl
push
mov
icebp
imul
divb
jecxz
push
xchg
cmp
push
fistl
arpl
pop
cmp
cwtl
dec
sarl
dec
pop
sub
rcrb
cmp
jg
inc
mov
xchg
inc
cmpl
cmp
xchg
dec
or
or
fsubl
jae
push
cltd
arpl
out
mov
push
push
icebp
adc
add
outsl
add
sbb
shrb
inc
and
xlat
xchg
pop
cmp
and
pop
lcall
pop
data16
inc
adc
testl
or
pop
jnp
sbb
test
mov
lret
mov
or
pop
ja
mov
in
outsl
cmpsb
push
add
sbb
mov
push
adc
pop
ds
inc
clc
sub
test
push
mov
stos
mov
stos
stc
popa
jo
data16
call
xchg
in
int
inc
loope
mov
jl
divb
jns
add
xchg
jl
pop
jnp
ds
loop
jno
shl
movsl
test
movl
lahf
mov
push
mov
cmp
test
cmp
pop
and
push
rclb
xorb
mov
adc
inc
jle
ja
mov
lret
popa
push
xchg
lods
pop
sub
jns
xchg
idiv
jns
clc
jae
std
ret
mov
mov
pushf
loop
adc
add
and
and
or
push
xchg
and
mov
ficomps
js
xchg
or
mov
adc
xchg
fldenv
movl
repnz
and
in
sub
mov
cmpsb
imul
aas
and
fwait
sub
lds
lock
cwtl
stc
cmc
test
pop
aad
hlt
cmp
into
inc
mov
mov
data16
adc
sbb
inc
sub
insb
iret
or
dec
inc
jbe
sbb
inc
push
pop
inc
arpl
js
xchg
push
dec
dec
push
call
add
dec
mov
clc
xlat
inc
imul
and
and
dec
out
addr16
mov
loopne
in
scas
cmp
jbe
jb
fidivrs
jmp
push
idivb
stos
sub
mov
dec
adc
scas
push
or
jae
push
mov
ljmp
xchg
pop
jl
rcl
mov
or
jg
adc
xchg
orps
mov
add
jg
rcrb
xor
call
jns
mov
les
xchg
xor
int3
xor
iret
sub
cltd
imul
mov
in
faddl
mov
mov
mov
add
imul
sbb
pop
mov
fisttps
mov
add
andl
lahf
lahf
mov
idiv
mov
dec
pop
add
ja
sub
lret
jo
lcall
jecxz
jb
cmp
mov
daa
movsb
imul
and
fstpt
dec
sub
xor
in
and
cmp
jl
push
rolb
cmp
xchg
xchg
outsl
fidivrl
clc
cs
les
cmc
push
leave
je
inc
mov
aaa
mov
in
cmp
outsl
ja
cmp
push
popf
daa
movsb
push
jb
test
fnstsw
xorb
enter
inc
xchg
loopne
mov
or
jns
add
test
inc
jp
mov
imul
ss
xor
cmp
scas
xchg
adc
sub
sub
std
xor
pusha
xchg
xor
or
xor
mov
cmpsb
clc
scas
rorl
cmpsl
jp
not
xor
add
push
and
dec
xchg
movsb
jb
dec
hlt
fdivrl
adc
sub
scas
imul
and
fdivl
push
mov
sub
in
xchg
int3
rolb
add
jbe
lock
cwtl
sub
outsl
shll
fildl
loopne
mov
cmp
jbe
sbb
insb
xor
pushf
iret
lea
xchg
ljmp
mov
jbe
push
movsb
roll
adc
xchg
stos
aad
push
fucom
int
mov
and
jns
stc
test
mov
pop
cld
sbb
insb
sbb
daa
mov
repz
scas
add
shr
jmp
or
mov
icebp
jecxz
sti
sbb
rcl
adc
jb
xchg
das
pusha
addb
xor
in
push
xor
dec
lahf
adc
add
dec
in
in
adc
lods
repz
push
jnp
pop
jl
mov
xorb
jo
adc
enter
or
and
adc
sub
lock
bnd
and
and
jmp
iret
mov
mov
push
cmpsb
jbe
popf
cmpsb
inc
icebp
jg
and
rep
insb
pop
das
pop
cmp
scas
nop
inc
mov
or
pop
movsb
divb
scas
loope
rorl
popf
dec
popa
mov
pushf
int
cli
sub
test
mov
out
pop
cwtl
out
std
push
cmc
or
adc
cmp
test
inc
dec
xchg
push
call
test
adc
mov
addl
scas
cli
repnz
push
sbb
pop
into
and
mov
xchg
xor
sub
cltd
dec
lcall
test
out
ss
dec
cmp
sbb
mov
inc
xor
xor
or
mov
ds
mov
ja
arpl
orl
sub
ficomps
popf
insb
cmpsl
fcomps
int
scas
ror
xchg
jae
or
in
lret
jb
daa
dec
or
and
shll
fwait
sub
scas
and
roll
cli
jne
mov
xchg
test
push
jp
popf
adcb
rolb
inc
sbb
daa
loopne
xchg
add
loope,pt
sahf
js
adc
adc
iret
sbb
mov
repnz
cld
add
jmp
mov
cmp
lahf
ja
or
std
popa
cld
insb
inc
inc
fs
push
push
in
je
cwtl
sub
out
or
pop
ror
test
xor
sub
test
dec
js,pn
cli
pop
js
pop
jg
sbb
fildl
clc
or
into
jg
mov
rorl
aam
push
scas
mov
cltd
jecxz
mov
mull
out
jae
push
lea
pop
repz
adc
cmp
xor
xor
mov
in
out
lock
inc
daa
roll
and
adc
popf
and
xchg
xchg
sub
jbe
xchg
aas
rcr
mov
dec
pushf
adc
daa
rcl
gs
sbb
in
out
xchg
push
and
adc
data16
pop
dec
ret
lret
sbb
mov
jbe
sub
sbb
cmp
cmpl
sahf
push
jmp
cli
ss
repnz
enter
sbb
adc
leave
or
inc
push
mov
xor
movsw
push
xor
pop
pop
xchg
sub
movsl
add
xor
mov
stos
mov
push
cli
ficoml
mov
das
icebp
jae
stos
dec
fcoml
mov
aas
addr16
adc
into
mov
dec
xor
in
mov
imul
jp
sub
imul
adc
pop
add
lahf
dec
cmp
out
add
adc
mov
subl
inc
imul
cwtl
xor
sahf
addb
mov
push
mov
pop
sahf
jae
repz
shr
or
sbb
arpl
scas
iret
arpl
movsb
jno
push
dec
push
jbe
lcall
dec
arpl
cmp
push
dec
mov
add
es
push
and
mov
push
pushf
ficomps
mov
int3
push
xorb
pop
push
adc
lea
inc
adc
aaa
loope
adc
fildl
dec
decb
clc
mov
sub
push
daa
fcoml
mov
pop
mov
in
sbb
xor
jae
and
repnz
out
shl
jge
dec
and
scas
das
add
in
add
int3
les
ficomps
mov
fnstcw
pop
loop
jg
push
loopne
mov
out
pop
js
xchg
stos
dec
addb
xor
dec
and
cmpsl
push
popf
mov
sarb
shlb
lods
sbb
xor
pop
nop
out
or
ds
loopne
sbb
or
sahf
insl
add
or
bnd
rcr
pop
jo
in
add
lods
lods
stc
scas
xor
jle
flds
in
mov
dec
or
lcall
sub
jl
inc
ljmp
imul
inc
das
out
aam
jmp
pop
mov
rclb
push
imul
cmc
mov
adc
aad
popa
testl
arpl
jo
or
dec
aam
movsb
outsb
sbb
aad
mov
pop
fs
mov
outsb
mov
xor
push
aam
popf
pusha
mov
adc
dec
std
mov
arpl
dec
mov
rclb
add
in
fwait
add
mov
lods
inc
and
sar
outsb
ss
pop
push
jge
sub
cmpsl
outsl
sub
push
lds
lock
shlb
sbb
lods
popf
popf
lds
adc
push
stc
push
lods
mov
dec
shlb
scas
lods
inc
ja
xlat
pop
in
dec
adc
bnd
scas
pop
xor
sbb
daa
lar
stc
negb
movsl
dec
or
movsb
jmp
add
cmp
xchg
ljmp
cmpsl
into
sbb
gs
aam
into
adc
dec
or
pop
sbb
fs
cmp
js
pop
xchg
in
cld
in
push
data16
out
pop
inc
js
repz
into
cmp
mov
jle
pop
inc
dec
adc
sub
sub
mov
into
imul
push
pop
adc
mov
call
aad
push
popa
notb
xchg
push
push
mov
mov
and
ret
jle
pop
nop
out
stc
decb
insb
mov
flds
fs
lea
push
cmpsl
movsl
inc
divb
inc
loopne
cmp
mov
sub
cmp
in
add
fldcw
mov
jecxz
or
sbb
jmp
add
int3
sbb
lret
mov
push
test
movsb
mov
pop
dec
mov
stos
pop
inc
insb
js
std
jne
mov
mov
sub
stos
and
in
pmuludq
lods
ja
dec
push
dec
xchg
cmp
or
inc
jmp
cli
daa
cmp
lcall
cmp
hlt
xlat
pop
inc
loopne
push
push
cwtl
shll
adc
mov
decl
mov
dec
dec
dec
xchg
jno
adc
sub
xlat
xchg
and
push
loopne
dec
jae
cmp
sbb
call
xor
das
insl
movsb
ret
sahf
and
dec
fdivs
aad
rcrl
cmc
out
mov
mov
xor
das
jp
mov
push
les
cmpsl
rcpps
jl
loopew
inc
insb
into
test
jmp
and
out
xor
add
push
xchg
sbb
mov
fsubp
xor
jmp
mov
out
sub
mov
jb
pop
gs
push
jl
addr16
lods
lcall
mov
cmp
xorl
aas
jns
sub
sarl
push
rcr
loopne
sbb
pop
gs
dec
ror
sbb
pop
pop
out
loopne
dec
sbb
fdivp
fcompl
mov
mov
mov
mov
or
cmp
sub
dec
ret
mov
dec
cmp
fstpl
ds
int
push
test
insb
xlat
xchg
lret
jbe
add
repnz
mov
sahf
sbbb
loopne
jbe
mov
xor
popf
dec
loopne
jg
jp
popa
in
xor
push
orl
mov
push
sbb
pop
pushf
cmp
aaa
mov
addr16
icebp
int3
push
push
ret
ds
aam
xchg
pop
enter
loop
sub
mov
push
jnp
sub
dec
sar
adc
jl
sub
stos
push
sbb
mov
push
aam
aas
movsb
test
insl
cs
push
push
bnd
sbb
jae
in
inc
sub
jmp
push
mov
sub
push
outsl
inc
xor
scas
outsl
int
jl
stos
ja
jae
stos
cmp
stos
mov
cmpsl
les
cmc
sub
ja
xor
es
stc
rclb
mov
or
sbb
jns
das
enter
mov
fists
xor
scas
and
out
xchg
mov
aad
nop
xchg
adc
dec
pop
pop
out
add
mov
cmpsl
sbb
inc
jbe
push
ret
xor
inc
inc
inc
sbb
and
ljmp
xchg
inc
add
jmp
pusha
int3
es
sbb
cli
adc
and
xchg
mov
mov
xchg
add
cmp
arpl
lods
add
fwait
push
inc
jg
insb
das
addb
aam
outsb
clc
pop
loop
sbb
sbbb
rcll
mov
sub
jbe
icebp
js
xchg
add
sar
and
popf
inc
push
out
mov
mov
movsb
mov
add
scas
sub
out
and
stc
xlat
lret
inc
ret
in
inc
enter
push
xor
sub
jl
repz
or
xor
cmpl
int
insl
inc
in
push
inc
push
sub
mov
or
inc
or
int3
or
push
divl
test
pop
inc
lcall
sub
insb
pop
stos
movsl
ds
data16
mov
test
push
ljmp
mov
mov
test
push
lret
decb
shll
std
mov
in
add
std
xor
dec
nop
lcall
cmpsb
fsts
add
mov
and
cmp
jmp
and
outsb
and
inc
and
cmpb
inc
adcl
bound
push
mov
inc
mov
push
push
push
xor
cmp
lahf
leave
inc
dec
addl
std
mov
lods
mov
sbb
sbb
jecxz
push
lret
nop
add
mov
lcall
iret
cmc
inc
sub
fwait
xor
cs
loope
jp
mov
jne
pusha
jecxz
jg
jmp
sub
pop
or
lods
cmp
lret
pop
cmpsl
cmp
nop
mov
xchg
mov
nop
mov
mov
fdivl
notl
int3
mov
mov
ss
add
call
mov
pop
dec
testl
jmp
popf
lret
inc
or
sub
mov
in
mov
insl
dec
xlat
jae
test
add
idivl
cmp
ja
inc
outsl
sbb
gs
cmovb
cwtl
clc
std
or
pop
mov
sbb
out
test
cmp
inc
xchg
call
ret
sbb
jmp
pop
push
pop
mov
clc
call
inc
cli
cld
adc
es
lret
pop
mov
xor
xor
add
xchg
and
int
daa
jnp
sbb
out
pop
ljmp
in
nop
insb
mov
xchg
stc
sbbb
mov
jge
mov
cmp
lds
mov
cmp
sbb
das
mov
sbb
je
pop
jmp
jns
addl
jae
xor
adc
dec
js
adc
xchg
test
subl
in
imul
mov
add
hlt
or
cmpsb
inc
test
mov
sub
xor
xor
aam
bnd
cwtl
lods
inc
add
xchg
inc
mov
xchg
or
or
mov
cltd
lods
and
and
pushf
pop
push
mov
push
jb
mov
or
sti
dec
jge
and
lods
mov
pop
sbb
xchg
daa
add
and
rorb
cmp
fsubl
ud0
es
dec
lret
add
testb
fidivs
and
pushf
sbb
je
jl
sbb
das
mov
into
push
push
mov
fisttpl
imul
xchg
sub
pop
sub
add
pop
push
scas
repnz
xchg
mov
fwait
leave
fs
jmp
out
inc
mov
inc
xchg
xchg
cmpsl
jge
rcrb
mov
mov
aaa
sub
stc
pop
add
arpl
leave
push
daa
cmc
mov
inc
lret
mov
iret
out
sub
xchg
mov
dec
mov
or
loop
mov
pop
sahf
pop
movsl
nop
cld
inc
test
pop
adc
push
insb
int
enter
cmp
pop
sarl
add
mov
insl
arpl
add
mov
inc
lcall
xor
pop
cmc
es
jecxz
or
stc
shrb
repz
addr16
pop
popf
or
and
push
inc
cmp
push
jle
and
cmp
int
loope
imul
xor
nop
pop
fldl
jge
mov
push
sbb
xlat
add
out
in
sbbb
loope
popf
jb
push
lds
mov
lds
mov
jmp
jne
dec
int3
push
pop
cmpsb
sub
cmp
jmp
mov
push
cld
or
xchg
shrl
leave
adc
faddl
aad
in
cld
xchg
out
push
hlt
movzwl
sti
gs
scas
repnz
mov
pop
insb
jle
fsubrl
fs
ss
enter
pop
jno
adc
inc
jae
lret
xor
inc
repnz
int3
das
pushf
cwtl
adc
lods
shll
push
test
push
cmpb
out
mov
or
fsts
mov
pop
and
loop
cmpsl
jmp
nop
orb
add
cmc
fwait
push
aam
dec
lea
push
jle
xchg
enter
add
adc
cld
inc
or
inc
ljmp
xor
jl
jp
xchg
shlb
jae
xor
popf
cmp
push
xchg
out
xchg
mov
imul
scas
fsubl
jp
or
rol
mov
jge
int
cwtl
test
jo
pop
cmp
jnp
cld
leave
fnsave
mov
clc
and
out
and
pop
out
out
mov
pop
or
pop
js
inc
add
maxps
shrl
sub
xchg
mov
push
or
dec
push
stc
mov
in
popf
push
dec
les
adc
lods
push
test
adc
shrl
fildll
dec
roll
or
std
cmpsb
inc
and
js
pop
ret
jbe
dec
mov
sbb
and
push
mov
sti
dec
lahf
stos
stos
add
lret
jnp
lahf
pop
test
lea
pop
loop
jmp
xor
repz
imul
int
xor
lods
fdivl
inc
mov
or
ja
arpl
cld
pop
xor
cmp
adc
fsubrl
sahf
push
xchg
subb
mov
sahf
aad
test
xor
repz
xor
adc
mov
jmp
jbe
icebp
rcll
loope
sbb
pop
loopne
lret
ljmp
repz
pop
in
inc
in
mov
inc
das
ja
andb
sub
xchg
enter
jl
mov
add
repnz
test
mov
movsb
push
mov
xchg
rcll
nop
or
xchg
out
pop
bound
test
dec
mov
cmp
pop
iret
cmpsl
or
in
mov
pushf
dec
pusha
pop
mov
daa
mov
mov
in
scas
push
test
imul
pop
int
mov
jo
mov
fldenv
add
stc
aam
xor
mov
mov
lret
xlat
loop
push
sub
push
sub
cltd
xor
in
jle
dec
mov
add
insl
rclb
outsb
out
mov
stos
xchg
jnp
mov
jmp
sbb
or
loopne
es
adcl
sub
out
add
inc
cs
cmc
or
out
cmp
mov
insl
les
pcmpeqb
push
push
movsb
outsb
aad
cmp
sub
mov
das
and
pop
inc
aaa
test
call
stos
pop
stos
test
popa
sub
and
pop
add
pop
mov
sbb
mov
jge
mov
shll
mov
outsb
mul
jnp
and
xchg
sbb
jbe
xchg
insl
loope
jecxz
xchg
xchg
js
loopne
inc
cld
sbb
mov
and
push
and
cltd
and
push
inc
shlb
inc
dec
rcll
dec
jge
jl
lret
add
xorl
lods
mov
xor
and
xchg
mov
sti
dec
lret
inc
pop
jnp
ljmp
test
pop
neg
daa
jo
pop
aas
out
cwtl
dec
cli
xor
cltd
insl
adc
xlat
xor
lcall
push
imul
out
loopne
mov
xor
lcall
loop
int
shrl
cmp
aam
and
xlat
hlt
jne
mov
xchg
xchg
fnstenv
daa
mov
daa
orl
xor
mov
hlt
fcoml
shll
and
pop
mov
roll
test
out
or
fmull
xchg
xor
cmp
loope
shl
xlat
imul
dec
rolb
out
mov
dec
testl
mov
cltd
cmpsl
sub
push
adc
add
xor
aas
enter
or
push
nop
fistpll
adc
cmp
cmp
mov
mov
pop
fwait
jns
adc
sti
scas
sbb
lret
xor
mov
mov
ret
aas
or
mov
outsl
xor
lods
dec
stc
idivb
lods
mov
gs
mov
cmpsb
cwtl
test
enter
push
mov
out
sti
das
mov
enter
push
lea
jecxz
insl
insl
inc
push
inc
jnp
cld
icebp
mov
and
pop
inc
mov
xor
paddusb
das
mov
mov
xor
xlat
add
mov
adc
lret
popa
xchg
addl
rcrl
nop
pop
mov
dec
ret
rcll
mov
pop
mov
xchg
pop
in
add
or
or
sbb
lret
add
testl
sub
aas
or
ljmp
xchg
mov
pop
sub
mov
jg
mov
cmc
jno
cmp
imul
pcmpeqb
aam
sbb
gs
dec
movsb
ret
mov
xchg
clc
adc
test
ss
test
cmp
or
je
pop
dec
xorl
jno
cld
mov
sti
add
jb
sbb
repz
adc
adc
inc
into
xor
xchg
xor
imul
mov
dec
stos
add
xchg
push
push
test
fcomi
lock
aas
aas
jo
dec
add
jmp
test
and
jne
jg
jmp
xchg
in
iret
scas
lret
cmpl
outsl
jl
int3
inc
test
lods
mov
push
outsl
out
inc
dec
dec
das
fiadds
mov
mov
nop
cmp
js
iret
push
add
outsb
lret
mov
int3
mov
das
cwtl
and
add
xchg
add
mov
lret
jp
mul
data16
inc
or
testl
loopne
cld
int
jae
mov
push
jl
int3
dec
pop
notb
xor
and
lret
js
cmp
jno
inc
loop
inc
nop
fidivrl
dec
add
sbb
sub
mov
cs
jnp
mov
lea
iret
ror
lcall
stos
nop
in
cmp
push
mov
arpl
movsl
lret
idivl
test
outsl
dec
dec
data16
pop
adc
sahf
into
xchg
sub
ljmp
rcll
rol
cmp
clc
mov
cmp
cmp
xchg
add
test
add
pop
mov
adc
loop
xlat
mov
gs
test
dec
ds
andl
dec
cltd
popf
ljmp
nop
or
push
xor
loop
add
or
push
push
push
jae
jb
cli
inc
clc
pop
and
outsb
pop
out
cmc
add
or
icebp
lret
or
lahf
lea
and
out
xor
outsb
std
or
lret
cmc
fucomp
imul
aas
fldenv
mov
insb
xlat
ljmp
mov
shl
rcll
jmp
mov
mov
mov
outsl
cli
les
adc
sbb
dec
mov
cmp
jmp
adc
mov
rolb
loop
in
mov
add
mov
ds
outsl
ds
call
rorb
adc
or
jle
sti
aam
sbb
mov
nop
cld
dec
punpckldq
xor
dec
shr
fiadds
dec
addr16
pop
dec
pop
popf
push
mov
push
pop
ret
mov
repz
mov
aam
ss
inc
or
mov
xor
sarl
pop
in
mov
mov
sub
adc
jp
dec
sub
leave
imul
mov
xor
aas
es
out
sbb
dec
gs
ret
ret
mov
bound
inc
adc
push
xor
dec
push
dec
aaa
pop
dec
fnstenv
sbb
cmpsl
cmp
or
fnsave
std
lret
pushf
stc
mov
daa
add
xchg
push
inc
pushl
mov
and
pop
sbb
je
push
stos
js
sub
adc
push
adc
popf
fs
mov
jecxz
lcall
in
data16
push
lods
push
add
rolb
push
push
push
xor
lods
fwait
outsl
arpl
sbb
push
iret
inc
fdivs
mov
lock
jbe
scas
and
inc
jnp
pushf
clc
sbbl
mov
dec
cltd
mov
out
pop
repnz
bnd
es
std
ss
mov
movsl
mov
mov
cmpsb
sbb
push
test
loopne
cmpsb
mov
fidivs
fldcw
lcall
fwait
shll
mov
jne
sub
sarl
divl
ljmp
or
mov
pop
jns
jne
cmp
xchg
shll
stos
jno
add
pop
jnp
xor
and
movsb
dec
test
adc
sub
jnp
xchg
inc
inc
imulb
mov
cs
push
mov
scas
fcoml
xor
aad
push
cmpsb
push
test
psrlw
xchg
lock
xchg
out
pop
shll
mov
push
or
lods
popf
aaa
add
push
pop
mov
mov
int3
in
xor
lret
pop
jb
push
fstps
and
mov
mov
ljmp
cmp
push
push
add
cli
mov
push
std
stos
push
adc
lock
je
mov
push
or
lods
jmp
insl
push
push
scas
jae
lods
push
mov
cmpsl
pusha
inc
cltd
rcrl
xor
push
adc
mov
outsb
sbb
lods
aad
push
dec
and
daa
pop
xor
jnp
sbb
ror
icebp
dec
shll
loope
lret
jge
mov
gs
cmp
cmc
imul
cld
xchg
mov
cmp
sub
pop
decb
mov
call
loopne
rcrl
jecxz
hlt
leave
and
ljmp
inc
ss
aaa
insb
jns
mov
shll
mov
stc
mov
stos
shlb
in
sub
fs
mov
sbb
sahf
jns
pop
insl
jmp
add
lcall
jg
test
pop
mov
clc
xchg
lock
iret
or
pop
movsb
mov
sbb
clc
pop
imulb
lcall
popa
cmpl
mov
and
adc
jecxz
fbld
mov
sarb
in
out
scas
ficoml
mov
or
add
pop
dec
xor
dec
xchg
daa
cmpsl
pop
hlt
mov
test
ret
xor
loopne
cmpsb
mov
push
add
mov
pop
xor
fnsave
mov
addl
call
add
fsts
pop
jl
out
es
fisubs
or
repnz
pop
cmp
jge
filds
add
mov
xchg
imul
fucomp
test
xchg
clc
inc
fs
imul
iret
jge
or
jo
inc
sbb
mov
cs
push
hlt
push
pusha
dec
xchg
pop
test
mov
dec
outsb
pushf
adc
fisttpll
mov
push
ret
out
sub
push
mov
inc
lahf
mov
in
xlat
lret
xchg
inc
cmp
iret
sarl
xor
fstpl
push
push
stos
in
or
cmpsb
sbb
mov
in
push
mov
shrd
xchg
xchg
inc
or
xchg
aas
ret
cmp
inc
outsl
stc
rcrb
push
push
es
mov
jae
xchg
movsb
jp
pop
aaa
xor
ja
jmp
nop
lret
ss
sti
pop
out
mov
mov
arpl
mov
mov
xor
shl
xchg
out
rclb
sbb
in
in
aaa
or
mov
insb
xor
adc
jmp
pop
roll
sahf
call
out
imul
add
int
loope
cmpsb
js
rol
mov
fdivl
das
cmp
pop
and
adc
adc
lds
test
jmp
imull
in
arpl
fcompl
xchg
call
cli
cmc
push
lahf
jle
popf
imul
push
rcr
mov
adc
roll
div
ljmp
loop
dec
pop
add
loopne
inc
mov
mov
adc
icebp
fidivs
pop
outsb
push
mov
pop
sub
or
jne
cmp
in
js
outsl
stos
inc
xchg
mov
in
jbe
aas
out
in
pop
dec
add
fwait
sub
fucomip
aam
xchg
insb
jge
test
ret
push
mov
out
shrl
ret
dec
push
inc
cmp
fcoms
dec
mov
xchg
dec
ret
jae
xchg
in
mov
xchg
pusha
rolb
mov
cli
xchg
pop
out
mov
push
sahf
xor
add
cld
aaa
push
pop
ljmp
loop
repnz
cwtl
jg
mov
cs
pop
enter
cltd
mov
stos
daa
loop
xchg
insb
inc
mov
inc
sbb
add
imulb
insb
out
in
mov
pop
rcrl
gs
in
fiaddl
or
xchg
enter
xchg
fwait
insb
jo
xchg
out
jo
push
jbe
loope
dec
aaa
hlt
out
pop
sti
in
xchg
push
jecxz
call
imul
pop
mov
push
sbb
push
dec
xchg
jecxz
lods
shll
lahf
cmp
sbb
scas
jns
add
pop
in
or
mov
fucomip
jp
add
lea
in
into
adc
cmp
dec
inc
sti
xchg
xchg
adc
dec
jecxz
std
roll
xor
mov
adc
sbb
imul
rol
cli
hlt
in
cltd
ljmp
gs
iret
or
inc
shlb
fwait
lock
sbb
out
jl
nop
test
pop
insl
or
jge
cmpsb
push
xor
cli
ror
xchg
out
xchg
xor
shl
scas
mov
or
cmpsl
lods
jmp
mov
test
hlt
pop
bswap
pop
and
iret
inc
pop
sub
pop
mov
lock
xchg
xor
fcmovne
jg
ss
sbb
ret
cmp
jmp
pop
movsb
cli
xor
movsl
jno
movsl
inc
je
cs
jmp
push
subb
fcomps
fbld
push
into
loop
xor
js
lret
xchg
adc
add
test
xor
gs
mov
testl
sbb
popa
ja
dec
cmp
sub
mov
dec
in
dec
add
lock
cwtl
js
dec
aad
aam
aam
mov
and
in
push
adcb
cltd
loop
jo
push
je
cwtl
jo
popa
addr16
mov
and
xorl
test
test
jmp
xor
dec
jns,pn
ja
dec
aam
push
scas
test
call
jge
push
loopne
or
je
pop
loopne
outsb
and
push
fxch
jb
jmp
pop
sbb
add
sti
loop
adc
xchg
xlat
mov
push
je
sbb
jns,pn
cld
mov
jno
jns
pushf
push
push
nop
push
call
xchg
pushfw
or
and
mov
push
idivl
pop
movsb
les
sti
iret
and
jno
dec
adc
and
xor
pusha
cmpl
inc
mov
nop
fstl
sbb
arpl
mov
andb
add
jb
pop
add
les
inc
lahf
pop
test
out
leave
shl
jb
mov
sub
push
insb
mov
jg
jno
push
imul
mov
adc
xor
inc
mov
inc
in
call
xchg
sub
cld
sbb
xchg
jl
xchg
gs
inc
shlb
call
dec
and
sahf
sub
pop
or
mov
cs
push
xorl
fmuls
icebp
les
rorb
cld
adc
test
mov
dec
mov
sub
inc
fldz
dec
test
les
ficompl
shlb
mov
iret
and
in
jp
data16
push
ja
push
xor
fcoms
or
cli
or
dec
or
pop
getsec
outsl
in
pop
adc
xchg
loop
push
das
sbb
pop
dec
xchg
jo
xor
mov
lea
xchg
push
mov
mov
cltd
daa
mov
or
lods
pop
jno
pusha
lea
pop
stc
incl
jns
dec
arpl
inc
mov
jno
adc
push
iret
cmpsb
jne
shll
pop
test
dec
fsubs
in
aaa
outsb
or
lret
leave
inc
jmp
pop
mov
cld
xchg
stos
or
bound
in
in
out
and
jnp
sub
cld
mov
lahf
or
aaa
test
bswap
fadds
sbb
mov
cli
mov
ljmp
or
jp
push
adc
lret
cmp
movsb
inc
add
push
jp
hlt
pop
cmp
inc
outsl
pushf
dec
subb
sbb
bound
pop
adc
xor
ss
scas
dec
mov
and
and
aas
mov
es
sti
pop
mov
pushf
pop
shll
ja
dec
inc
mov
in
out
frndint
inc
mov
sub
mov
adc
addl
cmp
push
cwtl
loop
mov
mov
mov
mov
flds
ret
mov
inc
repnz
cwtl
jo
and
mov
test
pop
inc
jecxz
aaa
in
mov
or
lods
cmp
pop
bnd
in
scas
cmp
jno
mov
jo
mov
fimuls
push
mov
xchg
push
enter
out
es
sbb
sbb
xchg
mov
cmpsb
cmp
fdecstp
cmpsb
cmp
sub
sub
add
js
lcall
dec
cmpb
sbb
nop
stos
jle
xchg
ljmp
jmp
jl
mov
stos
icebp
jne
shrl
mov
out
cmp
lret
es
xchg
test
xor
fmuls
push
jno
mov
shlb
pop
shll
test
call
push
int
jp
and
and
iret
addr16
adc
shrb
xchg
sub
outsb
and
inc
ss
sbb
xchg
aad
mov
xlat
fwait
cltd
xorb
push
loopne
cmp
scas
in
push
dec
mov
jge
sbb
inc
sbb
je
dec
inc
fldenv
cmpsl
push
xor
jge
stc
or
call
dec
jmp
outsb
movsl
or
mov
dec
cmpb
cmp
or
stos
xchg
into
cld
imul
cmp
sbbb
sbb
shrb
add
stos
or
inc
ljmp
negb
ss
pop
xchg
in
push
mov
test
fistl
mov
jecxz
ss
outsb
jl
mov
jae
dec
adc
push
fsubrl
xor
push
mov
std
xchg
int
push
scas
int
les
rolb
iret
xchg
je
scas
pusha
into
rcll
mov
fsubr
xchg
pusha
in
push
jp
or
scas
repnz
sub
inc
add
mov
imul
inc
adc
movsb
or
leave
ret
shll
adc
jge
ret
addr16
stc
stos
in
push
adc
out
movsb
rolb
movsl
xchg
lahf
lahf
pop
out
pop
fisubs
int
dec
sbb
movsl
cmc
cmp
cwtl
repz
arpl
push
adc
dec
jge
cmpsb
sub
add
mov
popa
mov
cwtl
xchg
shrb
int3
fdivl
rolb
xchg
push
jl
pop
inc
add
jge
and
lret
jecxz
popf
cmp
les
push
and
inc
sbb
cmp
jo
jmp
shll
mov
adc
js
pop
adc
ja
mov
ljmp
movl
xor
push
jb
mov
adc
fidivrs
push
es
popa
insb
jae
lock
aam
ror
jns
imul
sbb
outsl
mov
mov
test
jb
jecxz
mov
jno
faddl
jl
xchg
jb
outsl
movsl
inc
pop
mov
push
int
pusha
mov
mov
add
insb
fstpt
aas
xorb
xor
imull
mov
or
dec
arpl
cli
lock
xor
rclb
fisubl
add
sub
sbb
sub
aad
pop
aaa
je
sub
int3
dec
ret
aad
add
xchg
sar
jmp
push
icebp
jg
aaa
hlt
xor
push
ljmp
roll
gs
pusha
sbb
and
and
xor
dec
lods
sbb
fdivrs
insb
mov
mov
je
scas
ret
es
and
or
xor
sub
xor
mov
stos
imul
lret
add
shl
lods
or
push
sub
daa
adcl
inc
enter
mov
push
scas
aas
and
and
lods
lret
cmp
test
ficoms
fmull
outsl
mov
sub
xlat
movsb
lret
add
std
jo
sti
mov
inc
call
mov
and
scas
jo
popf
cmpl
fildll
shlb
add
xor
ljmp
in
cmp
push
cli
into
xchg
ja
sahf
insl
lret
jmp
cmc
ror
push
xchg
dec
cs
les
mov
adc
mov
sub
jno
movsb
test
xor
pop
iret
sbbb
out
xor
sbb
dec
dec
ss
into
inc
out
push
js
insl
fxch
mov
addl
pop
rcr
lods
movsl
daa
test
rcl
repnz
or
scas
mov
adcw
pop
jno
fld
sub
cmp
pop
jecxz
ret
mov
call
outsb
in
fstl
lahf
clc
xor
jnp
adc
lret
mov
ret
push
jmp
xor
fwait
sbb
inc
mov
adc
clc
insb
in
add
shl
outsb
and
xchg
in
cmpsl
cmp
ss
push
cwtl
repz
pop
icebp
cmc
movsb
adc
mov
fstps
insl
xchg
sub
or
xchg
pop
add
out
mov
les
pop
xchg
pop
or
imul
xchg
dec
enter
mov
mov
jnp
mov
bound
mov
rcl
out
xor
in
xor
sbb
shlb
lods
shrl
sbb
ds
xor
out
pop
ljmp
cmc
xchg
dec
xor
xor
jl
rcrb
adc
sub
xchg
nop
mov
adcb
cmp
sahf
fldenv
in
cmpsb
jecxz
push
scas
insb
fidivrl
test
mov
mov
gs
pop
mov
push
mov
dec
jae
mov
mov
nop
cwtl
data16
pop
dec
and
jno
psrlq
or
jle
jmp
mov
sbb
jb
jb
mov
dec
das
push
aad
stos
and
into
sub
rcll
xor
mov
test
dec
in
push
inc
movsl
hlt
stos
insb
inc
sbb
and
lcall
out
push
insb
lahf
xlat
sub
in
mov
pop
dec
lock
int3
aad
adc
insl
imul
mov
xlat
mov
and
add
inc
lods
xchg
stos
xchg
pop
mov
ret
add
fwait
int3
das
adc
mov
push
ffree
andb
inc
insb
dec
jecxz
mov
imul
bound
mov
divb
adc
andb
stos
add
dec
testl
leave
add
push
mov
mov
mov
scas
jge
mov
add
push
push
push
movsl
cwtl
out
pop
aas
popf
sbb
xchg
jbe
mov
or
dec
pop
xlat
aad
xchg
les
dec
add
fwait
inc
data16
mov
sub
lahf
lret
iret
jb
rcll
cmp
and
int3
dec
stos
lods
pop
jecxz
movsb
jl
pop
inc
test
push
jne
add
dec
push
pop
jno,pt
dec
sub
fldt
lea
mov
push
add
int
scas
fnstenv
jae
sub
scas
lret
mov
add
popa
sbb
sbb
push
mov
mov
sarl
mov
xor
gs
adc
out
xchg
or
xchg
cltd
and
jns
sbb
pop
sahf
sbb
inc
mov
test
cmp
adc
jecxz
int3
push
push
ljmp
pushf
leave
out
fs
adcb
pusha
dec
xchg
outsb
xor
push
mov
arpl
out
repz
mov
in
les
mov
push
popl
mov
jo
mov
fists
ret
pop
mov
inc
rclb
in
stos
cli
lcall
pop
pushf
or
arpl
lea
cmpsb
cmp
add
nop
mov
test
in
push
sub
outsb
add
add
in
sbb
pop
dec
imul
mov
arpl
xchg
fcoms
add
lods
and
and
sbb
mov
dec
jae
in
iret
or
js
jbe
push
fbld
mov
sub
push
sti
movsb
das
sahf
xchg
xchg
repnz
in
leave
xchg
gs
or
adc
hlt
mov
mov
sub
add
sub
les
pop
sbb
cs
push
pushl
jne
jae
dec
out
and
or
loope
dec
ret
aas
jo
inc
addr16
outsl
xor
sub
out
hlt
mov
jno
and
movsb
add
jae
popf
aad
or
xchg
cmp
orl
cmp
push
adc
xlat
roll
repnz
popf
pop
movsl
jge
push
das
je
cmp
sbb
adc
mov
push
mov
xor
or
rorb
fsubs
mov
outsb
dec
jns
stos
insl
les
ss
mov
repz
push
add
rclb
pop
sti
inc
xchg
sbbb
and
xchg
push
cmpsl
stc
dec
in
in
in
sbb
insb
adc
repnz
xor
jno
pop
les
test
mov
ud1
xor
es
rclb
xchg
mov
lahf
dec
mov
rcrb
inc
ja
push
push
in
arpl
push
adc
popa
xchg
sti
sbb
adc
loop
cwtl
xchg
add
dec
jno
inc
jne
arpl
fcmovnu
cld
cmpsb
cmp
push
sub
aaa
pop
sbb
fsubs
push
stos
jle
stos
insl
inc
mov
mov
hlt
shll
inc
xlat
or
mov
subl
into
xchg
mov
cmp
xlat
clc
xchg
pop
std
pop
into
ret
ds
iret
xor
lret
adc
mov
add
aas
jo
insb
lcall
in
sbb
push
scas
pushf
shr
push
add
dec
add
pop
xor
cmp
shl
lret
xchg
gs
popf
or
stos
test
int3
cmp
stc
aas
cmc
in
insl
and
daa
or
cmp
jb
shr
mov
pusha
lret
movsb
push
dec
sbb
lea
jb
push
cwtl
scas
push
pop
jg
push
mov
ss
dec
xchg
xor
cs
mov
stos
jmp
lds
ret
xor
imul
icebp
imul
in
jmp
js
pop
push
movsb
fnstsw
push
clc
inc
jb
lods
push
out
sbb
pop
sbb
loopne
iret
in
adc
or
mov
jns
pop
mov
fwait
in
fs
xchg
in
jecxz
pop
testl
cmp
xor
cmc
aam
imul
xchg
push
cmp
mov
lods
dec
call
mov
mov
out
ret
mov
mov
lcall
bt
cmp
mov
lcall
adc
dec
jns
js
pop
adc
sub
sti
push
mov
ficoms
inc
and
hlt
test
inc
movsl
cmp
sbb
filds
sbb
jbe
jnp
xchg
scas
xor
cld
jecxz
outsb
cmpsl
scas
stos
aad
cmpsb
push
mov
mov
in
cld
sbb
inc
arpl
adc
jns
addr16
sbb
inc
mov
cli
sbbl
jbe
popf
mov
xor
cmp
cltd
dec
outsl
mov
jge
aad
mov
adc
out
out
cmpsb
movsl
cmc
adcb
hlt
xchg
popf
mov
dec
xor
pop
and
or
icebp
mov
lea
xor
pop
xor
pslld
add
enter
adc
jge
rcrb
in
pop
in
push
out
dec
lods
cmp
pop
cmpsl
das
sbb
mov
dec
push
cmpsl
sbb
push
adc
mov
pushf
add
pop
jbe
les
inc
xor
push
dec
push
jbe
xor
dec
pop
int
lods
pushf
pop
lods
es
adc
addr16
mov
popf
inc
sub
sbb
loop
cmc
ja
mov
mov
mov
cli
movsl
dec
push
add
lds
cs
pop
repnz
xchg
push
outsb
cwtl
cmp
dec
xor
jg
cmc
or
into
or
ret
je
xor
cmp
lds
jp
cmp
addl
jae
and
rorb
divb
shl
roll
and
mov
loop
ret
addl
test
inc
inc
outsb
pop
mov
sti
test
xor
xor
out
sbb
out
test
imul
je
stc
fidivl
and
fcoms
pop
imul
scas
cmp
out
das
aad
xchg
mov
pop
and
mul
inc
lock
mov
in
ds
pop
and
mov
popa
sbb
int
mov
mov
cli
scas
lahf
js
int3
push
fstps
js
popl
mov
push
add
shl
inc
lds
out
loopne
dec
mov
add
fbstp
fs
pop
inc
lahf
dec
movsl
ficoms
and
ljmp
xchg
mov
pop
jl
add
cmc
cmpsb
mov
mov
pusha
pop
dec
nop
shlb
daa
fnstenv
repz
push
fisttpll
and
loopne
aaa
into
popf
popa
sub
xchg
jecxz
inc
aad
sub
cmc
jns
push
push
fcmovnu
or
jle
dec
insb
shll
xor
jno
jns
pop
and
cmpb
push
or
dec
adcb
popa
ret
push
rcr
dec
inc
call
dec
loope
subb
mov
xlat
xchg
push
mov
add
mov
rclb
mov
push
mov
push
inc
adc
enter
mov
inc
fsubs
mov
jb
fdivs
xor
jns
mov
popf
call
inc
scas
jp
ret
in
mov
push
movsb
mov
dec
cmpsb
xchg
and
je
cmp
iret
into
add
add
cltd
xor
icebp
pop
rorl
sbb
pop
add
mov
adc
iret
mov
mov
je
shlb
add
push
rcl
pushf
xchg
insl
rcrl
xor
or
cmpsl
xchg
add
fcmovne
jle
mov
mov
je
stos
clc
add
in
mov
aad
es
and
pop
scas
mov
outsl
pop
test
insb
mov
jnp
jl
addl
xlat
repz
push
mov
scas
xchg
jns
sub
cmp
xchg
lods
loop
mov
adc
sub
and
addr16
xchg
sbb
ds
add
sbb
add
das
lock
sbb
insb
test
sub
aas
out
shrl
xor
push
cwtl
dec
je
adc
movsl
mov
xchg
test
lret
jecxz
data16
mov
and
cmp
cltd
pop
jmp
mov
sub
sbb
sbb
cmpb
iret
jmp
or
xor
mov
jne
push
loope
lea
test
dec
sub
insb
jge
dec
jmp
cmp
adc
leave
or
jecxz
mov
dec
xchg
add
out
adc
add
fdivs
dec
jns
stos
subb
push
arpl
clc
incb
cmp
sti
pop
push
in
and
ss
xlat
cmp
aam
lods
inc
lahf
call
lods
lods
outsl
enter
into
mov
loop
jl
pop
jno
pop
inc
jmp
imul
das
mov
test
lret
push
xchg
lods
mov
in
mov
mov
xchg
push
inc
cmpsl
scas
in
insb
or
mov
push
movsl
xchg
lock
scas
dec
xchg
mov
add
xor
out
xchg
sbb
cmp
sbb
fnstsw
add
ljmp
cmpsl
adc
test
mov
jnp
inc
lcall
and
xor
lar
cld
cld
dec
xchg
add
orb
mov
adc
mov
mov
mov
push
lds
ss
and
jae
push
or
sbb
fldt
sbbl
test
push
xorb
jl
nop
inc
add
dec
sub
loop
subb
cmp
shr
stc
ds
pusha
or
mov
push
sarb
add
fimuls
jmp
xchg
inc
sub
push
xlat
fsubs
test
rcrl
adc
mov
or
and
das
inc
roll
insl
nop
jnp
insb
scas
fdivs
dec
dec
cmp
stos
jg
icebp
jge
cmpsl
ret
mov
add
loope
jmp
jo
nop
sbb
push
mov
adc
cmp
idiv
push
mov
add
test
mov
lds
in
in
xchg
cmp
pushaw
call
inc
jp
add
push
loopne
fcoms
adc
gs
or
in
mov
push
pop
and
mov
nop
adc
add
loope
test
sub
mov
xlat
xchg
in
add
fistpl
inc
imul
push
lds
outsb
cmp
cmpsb
xchg
fwait
cmp
push
push
mov
pop
shlb
fwait
cld
cmpb
call
mov
cwtl
xchg
pop
sbb
mov
popa
test
les
fs
cmc
push
sbb
pushf
test
jg
out
dec
jae
jb
and
sbbb
and
adc
jbe
mov
and
std
shlb
aaa
adc
sahf
push
inc
push
ds
mov
sbb
aam
push
test
in
addl
pop
movsb
cmpsb
jecxz
or
jecxz
dec
mov
mov
les
and
sub
jo
clc
fwait
inc
mov
lret
outsl
adc
mov
fisubrl
jo
cmp
lds
xlat
call
out
sbb
xchg
leave
mov
inc
mov
or
cld
push
xor
fldl
cmp
fisttpll
sub
and
pop
inc
mov
mov
stos
sbb
fists
out
jb
mov
add
inc
mov
push
xchg
jle
pop
pop
inc
aaa
xor
inc
mov
mov
stos
nop
inc
pop
lahf
pop
lds
push
cmp
mov
lea
in
mov
fidivrl
or
lods
ret
or
fldt
rclb
add
fmuls
dec
stos
in
inc
adc
mov
repnz
dec
adc
inc
nop
test
mov
sub
pop
test
add
mov
testb
jae
adc
stos
outsl
sbb
mov
popl
rolb
or
lea
jle
in
xor
xchg
ficompl
pop
jo
push
jmp
cwtl
xchg
xchg
push
sarl
std
mov
test
xlat
es
pushf
fldl2e
mov
inc
arpl
aad
into
sbb
stc
icebp
mov
lods
inc
sarl
push
or
lock
dec
add
push
fadds
dec
loope
pop
mov
jns
pop
push
repnz
imul
pop
add
aas
ljmp
les
or
aam
sbb
popf
xchg
mov
shrb
jno
cmp
mov
lds
push
addl
cmp
in
out
sbb
cmp
aaa
iret
jge
mov
scas
out
and
int3
push
dec
pop
push
cmpsb
mov
jo
pop
nop
jo
push
jp
push
cmpsl
jmp
cmpsl
cmp
mov
sbb
and
testb
pushf
shll
add
fcomps
cmpsb
sbb
mov
rorb
nop
jmp
push
aad
mov
inc
mov
negb
jecxz
rcrb
std
ds
in
push
pop
dec
iret
addr16
lret
in
fs
arpl
adcl
sbbb
inc
int3
mov
inc
rcll
inc
adc
sahf
sbb
inc
sbbl
push
xlat
stos
cmpsl
or
or
jp
push
cmp
dec
dec
jg
jg
jae
xchg
hlt
test
lock
jnp
and
pop
std
and
cltd
push
int
mov
xor
push
jmp
mov
cld
jns
leave
inc
repnz
add
out
pop
pusha
int3
aaa
dec
inc
dec
push
fs
mov
bound
adc
cltd
insb
repnz
out
inc
mov
enter
xor
lret
bound
adc
push
push
std
lods
dec
inc
sub
out
pop
std
cmp
lcall
stos
fldcw
mov
jns
push
das
std
xorb
cmp
cmp
inc
adc
push
shrb
pop
jbe
jbe
xor
adc
daa
hlt
stos
jg
insb
or
cmp
cmp
jg
xchg
mov
subl
ret
add
out
jmp
shll
cmp
jg
in
jnp
xchg
mov
in
push
dec
fisubrs
inc
push
sub
push
in
call
mov
sub
test
push
and
rorl
and
lcall
xchg
mov
into
lahf
xchg
mov
jg
lea
call
mov
pop
push
mov
enter
movsb
and
sti
push
shlb
or
cmp
in
icebp
sub
sbb
cmp
cld
repz
rep
xchg
iret
xchg
mov
mov
cmp
or
lods
adc
rcl
sahf
pushf
adc
ss
fs
into
pop
sub
imul
xchg
daa
dec
mov
jns
sub
cmp
int3
stos
movsb
xchg
pop
jb
les
fnsave
sub
mov
test
mov
or
out
jbe
sub
sub
dec
sub
daa
mov
push
xor
dec
push
outsl
lock
scas
pop
cli
adc
outsb
rorl
jge
cmp
adc
pop
xor
into
add
divl
dec
or
sbbl
andb
mov
dec
xor
jecxz
jmp
sbb
sahf
in
sub
xor
mov
xchg
xchg
cld
ds
outsl
and
lods
fwait
push
push
insl
mov
scas
in
outsl
sub
mov
jecxz
mov
jbe
sub
popa
rolb
xchg
in
dec
out
xchg
dec
lods
fisubl
mov
jb
int
adcb
push
fstp
jl
cmp
stos
mov
push
mov
sub
inc
mov
jp
pop
pop
ljmp
cld
adc
mov
inc
push
hlt
lret
xor
repz
jle
aaa
cmp
ljmp
fdivs
sti
pop
leave
popa
mov
sub
cwtl
mov
cwtl
adc
addl
sarb
xor
pop
in
aad
clc
xor
sbb
sbb
or
sub
pop
xchg
js
ret
xor
adc
fisubrs
sahf
mov
mov
fnstsw
ret
stc
ljmp
test
decl
outsb
jnp
es
push
fs
scas
jmp
pusha
add
mov
push
movl
loope
pop
and
mov
mov
and
stc
aaa
add
test
stos
popf
mov
push
pop
jbe
pop
or
sbb
mov
cmc
jo
hlt
and
sub
pop
add
mov
push
daa
out
mov
loopne
es
push
pushf
jecxz
dec
push
adc
pushf
xor
jne
rclb
mov
loop
sbb
add
fdivrl
jl
fcoml
mov
in
fsub
dec
inc
cli
mov
loopne
xchg
stos
icebp
adc
fstpl
imul
stos
sub
stc
test
xor
movsb
dec
nop
movsl
int
mov
insl
mov
testb
pusha
popa
lock
xchg
jb
inc
cmp
loopne
test
int3
in
out
sub
sub
inc
xor
popf
fistpll
dec
adc
repz
lea
cli
inc
lock
fsts
fimuls
mov
mov
xlat
loopne
pop
cmp
fmull
add
cmpsl
les
repz
jp
shr
fwait
lods
outsl
lcall
test
mov
adc
push
in
addl
mov
insl
int3
movb
jmp
out
popf
sub
add
pop
jno
cltd
jge
leave
les
clc
push
mov
jns
sets
inc
cld
ss
or
mov
es
es
dec
hlt
jae
lret
xchg
pop
movsb
pop
push
jns
arpl
push
pop
lret
mov
xchg
jmp
cmp
pop
mov
push
dec
lods
aad
int
icebp
lcall
out
push
or
inc
push
aaa
call
mov
mov
push
xor
int3
xor
fs
scas
bound
adc
pushf
push
lret
rorb
insb
out
adc
icebp
leave
push
test
inc
inc
lret
in
or
xchg
outsl
fcmovne
and
mov
sbb
pop
je
mov
in
popf
aas
repnz
jmp
leave
dec
sbb
aaa
ljmp
leave
mov
mov
daa
pop
ja
iret
in
movntq
jae
sahf
dec
sub
outsb
mov
std
and
sbb
in
jp
cli
push
idiv
xchg
cmp
dec
int
sahf
hlt
adc
xor
sahf
leave
mov
xchg
enter
shll
jb
mov
ficoml
repz
jg
gs
rclb
jae
or
nop
fcoms
xchg
andl
test
ret
mov
and
sub
mov
pop
xor
add
cs
xchg
mov
push
cmp
sub
dec
addb
les
adc
bswap
dec
inc
frstor
flds
sbb
daa
lods
aaa
mov
xchg
mov
scas
sahf
int3
xor
pop
push
pop
pop
inc
inc
sbb
and
rcll
jp
pop
imul
pop
sbb
int3
xor
jg
iret
adc
mov
enter
jl
jle
mov
mov
pop
shlb
loope
mov
mov
mov
test
sbb
inc
js
mov
inc
test
cmpsl
test
add
add
jae
out
push
aaa
sbb
jne
sbb
cmc
in
iret
mov
mov
sub
mov
pop
add
ljmp
pop
or
inc
iret
out
mov
pop
or
idivl
pop
dec
mov
cmpsl
xchg
and
jmp
mov
sbb
jmp
jmp
mov
jbe
lcall
or
fwait
stos
cmp
test
push
dec
loop
out
mov
leave
inc
addr16
mov
cld
cmp
or
repz
sbb
dec
insl
sub
lahf
mov
shr
test
popf
adc
cli
sub
push
mov
xchg
push
and
lcall
in
pushf
pop
dec
push
loope
cmp
test
lock
mov
push
push
ret
int3
mov
mov
flds
pushf
cli
or
cltd
push
pop
lea
dec
mov
jl
out
push
push
mov
xlat
mov
jle
outsl
jl
outsb
pop
sub
mov
cld
aaa
adc
sbb
jl
pop
jmp
shlb
mov
dec
aaa
out
aas
pusha
jge
pop
ss
jl
das
ret
sbb
loop
dec
mov
xor
pop
fidivrs
cmp
push
xchg
cmp
adc
loop
jge
jmp
pop
mov
imul
inc
call
int
lcall
add
movsb
fcoms
mov
call
mov
in
jle
cmc
in
jbe
and
mov
xor
mov
push
je
mov
into
lock
int3
mov
mov
js
test
test
xchg
je
das
imul
rorb
sti
les
xor
mov
mov
out
mov
xor
dec
dec
ret
lea
lret
cltd
nop
divl
sbb
dec
or
mov
sbb
xchg
scas
rorl
or
lods
mov
pop
rorl
sbbl
rolb
dec
call
adc
clc
hlt
push
mov
xchg
fs
sbb
xchg
outsl
pop
inc
subb
popa
sub
fisttpll
subb
std
cmc
jne
pop
jg
mov
xor
in
add
jne
mov
in
fcomps
pop
xchg
xor
adc
js
aad
jl
dec
addr16
repz
push
repz
add
sbb
ljmp
inc
loope
insl
mov
test
enter
mov
fimuls
dec
aas
aas
insl
adc
push
std
sbb
cmp
add
movsl
jb
cltd
adc
subps
fmulp
cmp
test
test
filds
cmpsl
xchg
xchg
or
mov
and
jg
insl
aam
pop
testb
xor
mov
fstl
xchg
mov
ljmp
mov
ljmp
fisubl
xor
push
sub
outsb
sbb
adc
cltd
xor
push
cmpsb
rcll
push
mov
and
das
loopne
clc
or
push
ja
dec
frstor
push
fs
das
clc
mov
jo
lods
inc
repz
dec
lret
inc
xchg
clc
icebp
lret
icebp
cmpsb
stc
mov
jno
imul
repnz
test
or
out
jecxz
lds
cltd
pop
sub
inc
adcl
mov
repz
or
cmp
call
mov
xchg
in
mov
mov
add
test
cmpsl
out
jg
lcall
popa
lret
sarb
dec
scas
hlt
shl
out
fidivl
mov
je
imul
dec
and
pop
sar
xchg
fisttpl
movsb
sbb
in
dec
jecxz
cli
lret
es
ror
test
pop
cli
sahf
push
imul
add
nop
adc
pop
stos
leave
andb
push
cmp
clc
insl
test
jge
jo
hlt
dec
lahf
xchg
inc
mov
or
mov
adc
add
setno
subb
xor
jecxz
inc
mov
push
push
xor
dec
clc
jno
pop
add
adc
loope
movsb
mov
es
cmp
outsl
clc
cli
xchg
sbb
xor
jnp
into
arpl
cld
inc
add
test
hlt
or
mov
faddl
mov
fwait
lret
idiv
int3
adc
das
nop
mov
pop
mov
sub
cmc
adc
stc
inc
rclb
scas
jno
stos
dec
popa
sbb
push
mov
lods
pop
das
out
push
and
pop
jnp
mov
and
into
add
xchg
notl
xchg
fistl
gs
add
pop
clc
mov
push
jnp
icebp
and
add
scas
push
mov
or
and
inc
divl
add
push
mov
cmp
arpl
addr16
es
adc
push
mov
fsubrl
clc
dec
insb
xchg
jae
cmp
jp
jb
out
in
and
fs
andb
out
mov
xor
cmp
xchg
vpmacssdql
mov
inc
jle
shrl
or
adc
xchg
sub
aaa
or
add
stc
in
push
ret
mov
pop
xchg
int
popa
les
je
add
test
push
dec
mov
sbb
ret
jmp
fisubl
and
adc
dec
add
ss
fbstp
inc
je
out
pop
xchg
adc
xchg
jo
cmpsl
cs
add
sbb
jne
data16
cmp
and
clc
lea
les
out
inc
addr16
in
lods
iret
in
fidivrs
int
fdiv
out
mov
inc
fwait
mov
scas
dec
pop
xor
arpl
hlt
dec
mov
or
mov
mov
decl
gs
push
inc
or
fs
cmp
jns
aas
arpl
pop
aam
in
in
and
cmpb
sub
jecxz
filds
scas
out
lahf
ss
xchg
sub
aas
lret
cmp
xchg
fwait
in
inc
mov
inc
jmp
push
jns
pop
lds
into
xor
dec
insl
pop
shrb
lods
sbb
jp
xchg
popa
mov
push
jmp
stos
xor
inc
int
mov
dec
je
add
xor
pop
sub
repnz
mov
or
mov
lret
es
imul
cwtl
gs
lcall
sub
mov
imul
es
pop
push
cmp
cmp
jnp
out
pop
add
popf
jb
vmovdqu
and
mov
inc
dec
cltd
jb
movsb
fsubl
cmp
sbb
hlt
xor
test
aaa
bound
or
sub
sub
mov
std
xchg
loopne
insb
je
test
lods
push
push
push
mov
mov
add
jle
push
sbb
lds
lcall
mov
xor
test
dec
mov
lcall
xor
stos
fbstp
in
sub
mov
mov
adc
jnp
faddl
cmp
les
loopne
mov
iret
scas
test
mov
ss
xor
ret
stos
push
sahf
xchg
arpl
adc
ret
jb
or
xor
fcoms
loopne
ret
mov
jg
ljmp
push
xchg
mov
sub
rclb
dec
lock
xchg
pop
inc
mov
outsb
mov
mov
add
or
iret
stos
add
stos
or
push
test
lcallw
in
cmp
lret
fisubrs
jle
add
fwait
lcall
negl
push
jl
cmp
gs
lock
fcmovnu
pop
lret
aam
ss
add
adc
mov
xor
and
ret
mov
jl
insb
ret
pop
subb
fs
pop
pop
lea
movb
xchg
decl
mov
jp
pop
out
outsl
dec
or
or
stos
mov
popa
jl
mov
mov
push
fsubrl
xor
or
repnz
adc
cmp
pop
push
inc
or
data16
scas
cmp
lea
push
movsl
add
sbb
imul
clc
pop
mov
sub
in
iret
mov
dec
cmc
fsubrs
inc
push
cmp
xchg
stos
inc
hlt
jne
mov
lahf
dec
das
lds
es
loope
lahf
inc
jo
in
mov
leave
xor
jmp
rcrb
shrb
jecxz
fildll
cmp
fsubrs
xor
incb
enter
or
insl
and
xchg
je
loop
lret
ret
jmp
cltd
pop
aam
push
sub
adc
into
popf
inc
std
pop
xor
addr16
and
test
sarb
cltd
pop
mov
inc
daa
inc
and
outsb
push
dec
repz
add
mov
jo
jmp
mov
mov
lret
sbb
hlt
pop
je
xor
insb
das
mov
pop
pop
add
aaa
fs
add
sub
jle
mov
sub
lods
dec
pop
sub
xchg
xchg
jae
mov
int
fcmovbe
lahf
cli
outsl
ss
roll
dec
adc
ret
mov
pop
in
cmp
pop
cmp
inc
repnz
sub
push
sbb
cmpsb
test
add
mov
hlt
mov
jno
or
sti
mov
or
leave
pop
mov
add
ret
push
xor
pop
popa
hlt
xchg
subl
xchg
xchg
lcall
daa
jae
push
les
ja
aaa
ret
movsb
popa
pop
jmp
or
rcrb
sbb
push
mov
xchg
xchg
stc
jle
dec
faddl
cwtl
addr16
add
xchg
pop
jle
push
ljmp
ljmp
int
add
jp
xchg
dec
pusha
adc
xor
cmpsb
mov
cmpsl
xchg
xchg
or
add
push
sub
movb
and
jae
clc
ja
cld
sahf
mov
lret
inc
inc
xor
das
mov
lock
xchg
mov
movsb
sbb
call
sub
lahf
sbb
pop
jmp
mov
gs
xor
vpshaq
dec
fisttpl
mov
int3
cmc
fldpi
adc
or
mov
dec
cmc
loopne
sbb
adc
pop
enter
pop
enter
jg
pusha
in
adc
hlt
insl
pop
jae
xlat
jp
add
and
dec
mov
insl
inc
dec
paddq
mov
fidivrl
mov
lods
add
insb
imul
sbb
aam
push
sbb
jp
pop
stc
fdivrp
ja
mov
jmp
rorb
mov
out
pop
cs
sub
in
pop
je
fcompl
xor
add
ret
mov
fdivs
adc
mov
mov
je
add
iret
xor
ljmp
inc
imul
pop
nop
or
outsl
add
iret
test
push
aam
cmp
enter
or
adc
cmp
aad
inc
jno
push
lods
cmp
test
icebp
pop
sarl
sub
xchg
mov
jle
stos
xlat
mov
mov
test
in
jns
lods
pop
fsubl
sbb
sbb
sahf
adc
sarb
adc
sbb
aam
lea
mov
shrb
mov
out
jl
nop
scas
aas
xor
stos
out
push
fnstcw
jge
sub
xor
lods
test
mov
incb
jb
test
scas
out
sbb
or
popa
fistpll
xchg
mov
aas
jmp
and
in
js
dec
iret
jle
repnz
aas
test
jg
rorl
pushf
xchg
out
nop
repnz
cmpsb
sahf
cmp
or
inc
jnp
aas
cmp
mov
popa
loopne
xor
loop
push
rcrl
lea
out
push
subl
std
out
sub
call
and
loop
mov
mov
or
mull
scas
adc
add
stos
mov
mov
call
mov
push
cld
and
inc
repnz
cmovg
pop
cmp
sbb
mov
push
push
inc
pop
test
sete
xchg
or
push
mov
in
insb
cmp
in
cmp
lock
xchg
pushf
inc
out
mov
pop
or
es
adc
nop
fsts
pop
iret
cmc
cwtl
mov
add
dec
inc
bound
mov
lret
cld
pop
cltd
cmp
out
adc
test
xor
cmpsl
ret
push
jecxz
add
or
mov
sbb
dec
mov
adc
cmp
int
fpatan
out
subl
cld
or
repnz
or
lds
adc
cmpsb
jne
adc
inc
pop
movsb
xchg
push
jle
add
add
cmpsb
jbe
mov
and
xorb
add
xor
jge
inc
add
dec
sub
cli
ror
add
xchg
jp
in
aam
in
dec
test
int3
xor
gs
enter
and
push
mov
scas
int
sub
icebp
inc
push
cmpsl
loopne
aaa
repz
push
outsl
fwait
pop
jno
loop
cmp
mov
sbb
insl
sub
jge
adcb
ss
out
cmpsb
jecxz
mov
xor
movsl
fmull
nop
pushf
xor
ljmp
int
out
xorb
outsl
in
in
xchg
and
and
mov
add
fmulp
jnp
adc
push
mov
xchg
xchg
cmp
dec
xchg
pushf
pop
data16
xor
lea
or
jp
and
stos
outsb
lods
pop
pop
push
rcrl
mov
mov
mov
and
lret
mov
mov
loop
into
cli
push
out
mov
scas
data16
sbb
rcr
mov
in
pushf
and
dec
add
sbb
cmp
jg
sub
mov
aaa
mov
dec
in
fisubl
sub
mov
push
mov
adc
cmp
cmp
fucomi
jo
jge
in
sub
mov
or
ja
jecxz
arpl
outsb
imul
lea
push
jmp
das
rorl
jb
stc
pop
push
das
or
mov
repz
hlt
cltd
into
dec
ficoms
fs
and
pop
xor
fcmove
ljmp
insl
push
jb,pn
ds
mov
mov
inc
aaa
loopne
sbb
push
jg
shlb
mull
push
aad
sbbb
dec
outsb
jnp
test
dec
or
out
adc
mov
dec
push
lods
fdivs
xor
push
sub
test
sbb
leave
push
pusha
adcl
xchg
cli
inc
clc
inc
sahf
repz
push
inc
rcrl
fcoml
jmp
push
loopne
push
inc
rorl
clc
jecxz
pop
add
incl
mov
xchg
movsl
mov
out
sub
dec
sub
pop
and
int
lods
in
pushl
popa
es
movsb
sbb
xchg
push
fiadds
xchg
push
out
rcrb
and
movsl
xchg
fldl
fimuls
add
outsl
mov
xchg
mov
dec
mulb
negl
jp
ret
inc
cmc
sub
fidivrl
int3
inc
in
in
pop
enter
test
mov
sub
push
les
pop
lea
unpckhps
fcoms
add
pop
xor
jp
and
xchg
and
andb
push
pop
xchg
jb
xor
dec
movsb
jmp
push
int3
or
pop
xchg
adc
sbb
mov
mov
rcl
jg
ret
pop
mull
aad
mov
andl
pop
cmp
mov
mov
ss
in
std
cld
mov
mov
push
dec
cmp
shrb
xor
fwait
push
push
pushf
daa
or
nop
lods
lahf
neg
outsl
repz
xchg
and
addr16
sub
dec
push
scas
popf
pop
mov
jmp
mov
cmpsl
test
sbb
jl
xchg
inc
sbb
pop
fnstsw
push
inc
lret
ljmp
inc
or
sets
icebp
mov
in
adc
sub
es
push
andb
sarl
xor
aaa
xchg
lea
or
dec
inc
xchg
inc
fwait
bound
or
mov
fisubl
inc
mov
lods
stc
add
xchg
and
movsb
mov
cmpsl
mov
mov
pop
add
push
pop
xchg
cli
or
mov
xchg
jae
pop
jmp
ret
lahf
push
push
xor
xchg
jae
push
loope
sti
xor
pop
lods
in
push
push
aaa
leave
es
aas
lahf
movsb
or
jne
mov
xchg
fs
adc
cld
and
sbb
xor
int
int
popa
adc
int
test
mov
rorb
cli
ss
fistl
pop
fdivs
mov
repnz
repnz
inc
mov
push
in
jo
data16
push
aad
aas
fistl
fldl
cltd
test
mov
pop
fidivrl
clc
mov
ja
dec
push
sbb
add
stc
fadd
xor
repz
adc
ljmp
test
mov
aas
scas
or
cmp
inc
popf
jg
nop
mov
mov
call
mov
mov
add
add
dec
aaa
sahf
pop
lods
xchg
aaa
jge
fisubs
cmp
sbb
shrb
popa
test
mov
sbb
push
cmp
gs
sbb
add
stos
mov
or
lcall
push
pop
push
scas
lret
cmp
sub
rorl
xor
jmp
xchg
xor
repz
inc
dec
in
jecxz
xorb
cld
adc
xchg
stc
mov
js
loop
daa
cmp
je
push
cmp
insb
sbb
shll
repz
mov
popf
and
lcall
jl
inc
cmp
repnz
mov
pop
mov
and
mov
inc
das
outsl
mov
jg
push
xchg
test
in
pop
aad
push
fwait
test
movsl
or
shll
push
das
sbb
mov
repnz
xlat
pop
js
out
loope
cmp
dec
adc
repnz
dec
loope
ljmp
add
mov
leave
adc
xchg
sub
push
mov
pop
ret
mov
push
mov
pusha
enter
xchg
mov
mov
push
push
fimuls
into
dec
mov
xor
push
ss
and
adc
xchg
mov
mov
or
fistl
cmpsb
lcall
mov
mov
insl
bound
xchg
fildll
mov
imul
aam
shlb
ljmp
sub
xchg
aas
or
rcrb
cmp
std
insb
xlat
mov
mov
jbe
dec
pop
lret
push
stc
push
adc
mov
push
test
aaa
ljmp
pop
xor
xlat
mov
xor
adc
pop
mov
or
mov
in
mov
add
dec
mov
iret
mov
pop
out
scas
jnp
cmc
enter
scas
dec
jns
and
aam
addr16
arpl
fdivl
mov
or
mov
cmp
jecxz
int3
lock
ret
xor
sahf
cwtl
sub
lea
fsubp
dec
pop
cli
sub
jmp
xchg
movb
nop
jge
xchg
mov
fcoml
int
mov
bound
cmpsb
test
outsl
jae
inc
jecxz
add
lock
lods
clc
xchg
iret
sahf
cmp
pop
rcrb
adc
jg
popa
es
mov
data16
sub
jg
push
fstps
cmp
jp
mov
cmp
cmp
mov
xchg
pop
test
in
test
lods
pop
jge
jbe
cs
inc
fs
add
adc
cmp
pop
jmp
cmp
pop
mov
or
xor
dec
mov
jno
adc
sub
cmp
int
les
sub
push
push
aaa
fdivrl
pop
mov
insb
sbb
pop
aas
xor
icebp
push
cmp
and
out
fwait
data16
sti
in
dec
add
enter
lret
adc
dec
adc
mov
es
fwait
xor
push
sub
and
inc
enter
ror
mov
xor
lock
dec
push
cltd
xor
cmc
sbb
xchg
and
mov
addr16
shrl
jg
outsl
subb
mov
lods
mov
jne
fidivrs
add
or
stos
or
pop
sub
inc
cltd
xor
xor
push
aad
inc
movb
dec
iret
xchg
pop
adc
mull
jno
and
mov
sbb
daa
mov
jp
ja
or
push
and
push
enter
fdecstp
aaa
jl
sub
cmp
call
movsb
xchg
inc
mov
add
mov
out
movsl
push
mov
sbb
cmp
lds
mov
push
cmp
pop
pop
mov
aad
in
bound
pop
sub
xchg
and
jge
jae
dec
dec
lods
in
and
jl
or
and
xor
cli
iret
adc
and
cmp
test
out
jne
mov
xlat
clc
mov
cmpsl
loope
lock
loop
cmp
lcall
mov
sub
cmp
ds
lock
cs
nop
std
xchg
push
int3
sub
push
xchg
je
fldt
xchg
cld
and
cli
jnp
fisubrs
test
add
add
and
lods
cmp
sbb
nop
cmp
leave
insl
lds
enter
adc
cmp
push
push
inc
or
aaa
sbb
mov
dec
jl
mov
repz
push
push
cltd
mov
std
or
sub
negb
fldl
popa
int
ja
or
and
loope
or
loope
negb
push
pop
mov
push
in
icebp
jbe
imul
inc
pop
lods
or
into
mov
sbb
adc
or
or
in
xchg
inc
mov
mov
sbb
outsb
pop
leave
test
adc
sbb
mov
icebp
xchg
xchg
xchg
fstpt
mov
or
daa
jmp
rcll
push
mov
outsl
icebp
adcb
adc
cmpsb
mov
jne
mov
cmp
xor
cmp
out
inc
sbb
std
jg
repnz
adc
fnstenv
add
popa
stc
cmp
mov
rcll
jno
add
pop
ret
jmp
sahf
adc
pop
pop
mov
jge
popf
mov
aad
sub
int
inc
mov
fs
sbb
addr16
arpl
imul
adc
sub
fstps
inc
inc
push
stc
cmpsl
dec
xchg
mov
in
sub
loop
jnp
inc
fsubr
push
dec
loopne
add
adc
pop
notb
sbb
flds
std
pop
iret
sbbl
das
bound
dec
cmp
and
and
icebp
out
or
ja
ss
push
ror
jae
pop
std
clc
cmp
std
mov
cltd
jbe
rorl
or
leave
fmuls
cmpb
dec
sub
shll
pop
sub
popa
icebp
add
dec
ror
add
mov
insl
int3
mov
xor
iret
and
pushf
mov
xchg
lret
sbb
stc
shl
fbld
aam
dec
and
fwait
mov
iret
jns
in
cmp
pushf
cmp
xchg
movl
out
stc
insb
sbb
sbb
fwait
mov
mov
scas
mov
movsl
mov
xchg
adc
out
lret
mov
repz
in
xorl
jnp
mov
pushf
orl
addr16
inc
pop
mov
leave
andb
icebp
into
sub
jle
inc
in
jl
pop
mov
jmp
cmp
sahf
popa
subb
rorb
adc
movsb
push
stos
and
shrb
jne
jg
int
or
mov
xor
adc
cmp
or
cli
aaa
iret
jo
in
xchg
or
popf
sub
data16
jp
xor
jl
loopne
decb
imul
es
clc
dec
jl
pop
inc
dec
mov
inc
imul
cwtl
int3
out
mov
mov
int3
jg
push
and
or
mov
and
orb
mov
int3
enter
fdivrs
and
and
xchg
lret
mov
stos
int3
cli
subl
es
push
ss
pop
in
mov
jb
jne
and
bnd
roll
xchg
or
inc
xor
jbe
sar
punpckldq
xor
pinsrw
or
add
std
dec
dec
shl
inc
ljmp
aad
test
and
dec
lds
xor
xor
push
jecxz
push
push
add
jmp
pop
inc
idivb
shrb
mov
xor
movl
testb
fsubrl
cmc
sbb
fnstsw
pop
jmp
sub
daa
fdivrl
enter
mov
dec
xchg
cwtl
test
in
and
aam
xchg
movsb
int3
pop
mov
into
xchg
sbb
sbb
in
out
in
adc
push
jle
sub
arpl
loope
subl
and
lret
ss
jmp
shll
cltd
shll
lahf
jnp
stos
pop
sub
jno
or
icebp
stos
shl
sbb
fldpi
call
mov
in
lods
jae
nop
insl
fnstcw
mov
cli
les
mov
repnz
and
in
nop
out
dec
mov
test
adc
loope
mov
or
add
mov
or
pop
mov
inc
mov
jp
aam
les
aaa
lcall
adc
xchg
xor
xor
mov
mov
jno
and
cmpsl
sarl
mov
or
lea
clc
fcompl
mov
pusha
mov
adc
cmp
je
lods
or
popa
inc
jb
lret
sbb
sub
ljmp
repz
push
mov
insl
cmpsb
fwait
xchg
int
push
cmp
rorb
in
dec
pop
test
sbb
inc
pop
data16
rorl
les
push
mov
lods
or
pop
cmpsl
gs
scas
sahf
aad
push
jg
xor
cli
out
mov
in
jne
mov
mov
adcb
jnp
fucomp
or
dec
fbld
dec
aaa
outsb
pop
scas
ret
jnp
adc
shr
sub
scas
out
test
pop
mov
pop
call
pushf
fisubl
sbb
add
lods
out
pop
mov
in
insb
test
ret
leave
lcall
pop
movsl
notl
jne
scas
push
fld
adc
cmp
scas
outsl
gs
sub
fdiv
mov
mov
mov
out
je
jmp
stos
add
stc
jg
dec
es
and
dec
jl
pop
movsb
or
ret
mov
adc
arpl
xor
adc
sbb
push
or
int
jb
sub
xchg
out
pop
js
int3
ds
aam
cmp
jns
call
in
stc
ja
rolb
jmp
adc
fistl
mov
pop
fdivs
adc
cld
inc
jne
xor
icebp
subl
sub
es
pusha
cmpsb
mov
mov
mov
fadds
inc
movsb
ljmp
mov
inc
pushf
sbb
repnz
lock
jo
gs
cmp
test
dec
rcr
and
test
xchg
dec
push
movsb
sti
jne
jge
lds
sub
xor
je
xor
sub
daa
test
cli
xchg
addr16
arpl
dec
jecxz
push
push
mov
push
in
jmp
jns
mov
inc
and
rcll
adc
scas
xchg
in
stos
test
push
mov
int3
out
or
cli
add
jg
fdivrs
es
out
xchg
iret
adc
inc
push
popa
ficomps
cmp
out
in
cmpsb
jecxz
test
ret
xchg
bound
and
shrb
xchg
sbb
mov
popf
pop
roll
test
jno
test
or
xchg
inc
sbb
icebp
mov
jno
dec
jno
adc
mov
adc
add
sbb
jmp
add
shrb
add
stos
xor
std
negb
xor
sbb
mov
test
and
mov
mov
insl
and
dec
sbb
mov
rclb
push
jl
fdivl
ss
icebp
jbe
aas
pop
lock
ret
outsl
mov
aas
iret
out
jl
cmpsl
loop
popf
ja
mov
push
das
in
das
jle
fs
lret
add
cmc
pusha
pop
adc
adc
js
mov
xor
data16
sarl
pop
mov
dec
and
dec
jl
and
and
cli
mov
mov
mov
mov
sbb
roll
jmp
hlt
in
add
jle
inc
lock
movsl
push
sub
lods
addr16
xor
push
dec
sbb
sbb
daa
fprem
lods
insb
aas
das
stc
in
jne
out
pop
fmulp
insb
xchg
call
outsl
sti
das
push
out
mov
ds
xchg
and
mov
scas
dec
and
sbb
pop
mov
add
insl
pop
inc
stos
jns
mov
leave
xor
mov
mov
jle
mov
leave
shl
inc
aam
mov
cmp
andl
fcoms
stos
aam
fcmovu
int
and
inc
mov
mov
and
sbb
or
jmp
bound
aad
dec
or
sbbl
dec
stos
mov
adc
mov
pop
mov
rcr
xchg
inc
inc
xchg
lods
call
cmpsb
subl
mov
xchg
loope
jmp
aaa
mov
in
pop
mov
lret
jae
test
icebp
into
int3
sbb
lock
xor
cmpsb
in
pusha
xor
push
and
jle
inc
mov
ss
jns
xchg
pop
xor
mov
cmp
rorl
pop
push
and
mov
xchg
fmul
adc
and
jae
and
add
ja
mov
cmpl
push
pop
les
push
js
pop
mov
daa
sub
mov
outsb
cwtl
inc
movsb
leave
xorb
or
xchg
clc
xor
leave
hlt
aas
aad
pop
loope
inc
rclb
cltd
cmpl
ror
push
push
dec
dec
icebp
leave
ja
adc
lret
subl
mov
daa
lea
push
or
jle
mov
inc
test
daa
ret
xchg
in
xchg
lcall
mov
out
pushf
int3
imul
in
xchg
gs
std
mov
sub
sub
xchg
push
or
lds
sarl
std
test
outsl
dec
pop
imul
inc
lock
insb
sbb
fsubrl
lock
lcall
lret
xchg
test
dec
sub
xor
pop
jl
mov
mov
xchg
aad
icebp
push
and
mov
mov
dec
pop
hlt
mov
nop
xchg
test
aas
fsubs
xchg
negb
dec
inc
les
add
pop
icebp
leave
fdivr
ljmp
out
aam
inc
cmpsl
pop
jbe
aam
mov
std
cmp
pop
std
call
lods
adc
inc
lcall
and
mov
adc
stos
pushf
sarb
mov
scas
inc
xchg
add
jbe
push
jne
stos
xchg
lcall
rolb
pop
add
lock
pushf
jle
jae,pt
pop
jmp
pop
mov
push
inc
mov
jns
cs
movsl
jae
dec
cmp
jge
lock
stc
dec
add
adc
shll
cmp
mov
push
mov
sbb
push
xlat
iret
fnstcw
xchg
dec
pop
data16
in
xchg
or
xor
int
xchg
ret
jns
cmp
repnz
inc
dec
push
cmc
mov
adc
xor
or
popf
xchg
les
pop
mov
lds
dec
stos
icebp
lcall
adcb
test
and
inc
insl
sub
cmp
outsl
sbb
lret
push
xor
mov
xchg
mov
adc
pop
test
push
add
push
dec
mov
xchg
rcrl
sub
lret
arpl
stc
adc
jbe
and
js
adc
fisttps
jmp
sub
insl
rorb
data16
lds
xchg
into
cltd
add
jge
adc
pop
pop
pop
iret
int
dec
jb
ret
fcomps
jge
xchg
sbb
imul
mov
movsb
mov
inc
ror
in
sbb
insl
mov
push
ret
ss
mov
pusha
and
in
fmull
push
lret
push
inc
push
inc
out
add
fidivrs
cmpsl
cwtl
roll
add
popa
lea
inc
sub
add
xchg
inc
outsb
jae
add
sbb
push
lock
inc
lds
or
push
sbb
cmp
ss
mov
cld
lret
dec
std
sub
and
inc
or
aas
xor
loopne
insl
jo
pop
xor
or
rcll
push
jns
mov
in
mov
mov
pop
test
sbb
inc
pop
subb
inc
popa
mov
jb
dec
je
adc
mov
push
inc
das
inc
cbtw
fdivrs
sub
aaa
out
incb
cmp
pop
shll
sub
rorb
leave
push
pop
imul
scas
push
leave
sbb
popa
push
pop
mov
test
in
inc
mov
or
inc
repz
jl
decb
lret
jnp
std
mov
iret
pop
jle
or
scas
aam
mov
test
idivb
test
jb
leave
addr16
sub
sbb
mov
iret
sbb
mov
mov
sub
xlat
pop
pusha
stos
mov
fs
out
mov
push
jle
adc
test
addl
cmpsb
mov
ljmp
lcall
inc
or
jnp
push
aas
popa
int3
inc
mov
pusha
jecxz,pn
mov
and
inc
cmp
shll
imul
cld
cmp
int3
ret
xchg
loopne
jmp
mov
enter
pop
outsb
ljmp
add
mov
int
dec
cld
out
lods
lcall
mov
repnz
mov
xor
mov
in
out
inc
enter
mov
add
mov
sbb
sub
push
jmp
int
push
jecxz
dec
xchg
push
out
int
rcrl
or
jge
push
sub
mov
mov
lcall
push
gs
push
push
mov
out
je
mov
push
adc
pop
aam
int
jae
pop
outsl
pop
mov
cwtl
mov
pusha
in
rorl
je
cltd
mov
jns,pn
pushfw
jb
jl
int3
jo
aas
test
daa
adc
pop
dec
jne
sbb
idivb
mov
lock
inc
jae
lahf
hlt
clc
sub
fsubs
or
inc
add
gs
mov
fstenv
add
mov
icebp
xor
into
cmp
outsb
lcall
cmp
mov
jp
lea
pusha
leave
enter
enter
lea
sub
shll
sbb
shr
inc
jns
stos
dec
sar
dec
cmpsb
movb
sbb
addr16
fwait
and
stos
data16
fs
dec
or
fdivrp
and
movsl
nop
repz
movsl
sub
and
inc
or
sti
sub
hlt
sbb
loopne
in
pop
and
int
repnz
ljmp
out
xor
push
cmc
mov
out
aas
clc
addb
stc
scas
pop
es
pop
push
mov
pop
loop
mov
xlat
and
scas
ret
xor
ret
out
mov
inc
in
sbb
fldl
mov
jno
mov
dec
aas
ds
fildll
test
test
and
fnstcw
movups
fs
lods
push
stc
mov
in
add
or
call
cmp
dec
and
scas
icebp
int
sbb
or
fs
adc
mov
icebp
cltd
out
fmuls
lcall
sbbl
iret
rorb
mov
jmp
mov
xor
jp
jge
fisttpl
insb
cmpsb
dec
add
iret
vcvttps2dq
test
out
adc
jns
subb
lcall
xor
cmc
es
xor
mov
mov
xor
inc
push
mov
add
das
aad
repnz
aas
push
pop
int
and
pop
push
add
cmp
xor
push
ljmp
push
cmp
loop
inc
or
pop
int
loop
jecxz
loop
push
arpl
call
stc
hlt
repz
xchg
adc
or
mov
enter
jno
popf
imul
gs
roll
pushf
loope
dec
jmp
jecxz
ss
lcall
sbb
jge
mov
lods
dec
and
and
sub
dec
lods
push
cmp
sbb
dec
negb
lretw
daa
fwait
sbb
popa
xchg
jmp
iret
fdivl
leave
add
lods
cli
fdivl
inc
fmuls
mov
call
push
xchg
push
adc
loopne
jbe
adc
push
out
in
ja
fcomip
rorb
xor
inc
cmp
dec
mov
subb
rcrl
pusha
lods
arpl
mov
rorl
movsb
or
test
stos
mov
inc
std
int
mov
imul
sub
sub
cmp
dec
and
or
jo
jmp
dec
mov
or
aaa
addl
pop
std
flds
mov
popf
cltd
out
repnz
cmp
bnd
fwait
xchg
pop
xor
mov
dec
fs
cmp
jne
mov
shlb
mov
inc
setbe
pop
pop
adc
lcall
aaa
popa
imulb
test
repnz
mov
inc
cmp
add
shrb
inc
out
lds
mov
and
adc
std
clc
cmc
outsl
lcall
mov
imul
cmp
jmp
push
call
xchg
adc
xor
retw
pop
jns
jno
pop
xchg
sbb
dec
cmpsb
lret
mov
popf
addr16
insb
lds
sbb
pop
sarl
mov
jle
hlt
mov
inc
jo
pop
cmp
loopne
cmp
js
shll
jae
es
cwtl
es
lds
dec
jecxz
xchg
add
sti
jo
hlt
bound
or
mov
out
arpl
and
scas
and
gs
or
out
xlat
popa
sub
andb
mov
sub
and
inc
sarb
ret
in
lcall
fnsave
sbb
push
mov
mov
pop
movsl
and
rcl
sti
sbb
xor
and
xchg
jns
inc
mov
dec
sub
lds
lcall
mov
xchg
lea
call
mov
push
xchg
mov
and
add
adc
ret
aas
jecxz
sub
cmp
outsb
cwtl
test
push
add
lea
aas
sub
mov
ret
shll
mov
in
and
sti
ss
xor
shrl
cli
lret
mov
dec
xchg
out
cmpsb
mov
mov
inc
xchg
xor
sbb
sub
adc
std
imul
dec
sbb
test
push
push
adc
in
stos
dec
jns
imul
add
jne
mov
xor
or
adc
pop
xor
mov
jbe
fnstenv
xor
cwtl
out
setl
and
xor
fiaddl
sarb
std
cmp
nop
pop
imulb
loopne
pusha
xchg
jmp
add
and
enter
adcb
dec
fistpll
fidivs
movsl
jg
sub
mov
fnstsw
imul
inc
xor
push
add
addr16
adcl
cmp
lret
mov
cmp
mov
mov
dec
mov
xor
jbe
cmp
mov
jmp
cmp
fwait
xor
push
mov
pop
sbb
push
xchg
loope
or
lret
adc
mov
cmpsb
mov
inc
stc
push
mov
xor
xor
sub
push
inc
mov
adc
test
jg
jbe
movntq
out
enter
pop
or
lds
fs
add
out
popa
add
test
sbb
pop
hlt
xchg
sub
cmp
mov
fidivrs
repz
enter
xor
cmp
jae
cmp
xchg
push
es
pop
cmp
mov
mov
push
les
aaa
xchg
xchg
mov
dec
inc
imul
mov
pop
mov
mov
lcall
and
push
ror
arpl
cltd
xchg
mov
aad
scas
dec
sbb
jmp
in
pop
and
xchg
testl
jb
xor
into
xchg
mov
call
setns
jecxz
xchg
fidivs
xchg
imul
in
aad
nop
ds
call
incb
xlat
stc
aad
push
jmp
mov
pushf
jo
push
in
ds
cmpsl
int
roll
in
movsl
aam
pushf
inc
cmpsb
cld
jns
push
or
cmp
jp
xchg
notb
sub
faddl
pop
sub
inc
rcl
cld
pop
aam
dec
insb
jecxz
insb
dec
and
push
add
and
outsl
outsb
icebp
pop
cmc
divl
add
inc
in
or
push
xor
push
cmpsb
aad
arpl
repz
xchg
out
jle
push
jnp
bound
add
mov
ja
jl
push
mov
push
movzwl
push
mov
cmp
jbe
mov
outsl
push
push
enter
mov
faddl
add
popa
aad
mov
push
sub
arpl
outsl
shl
xor
test
add
and
lret
push
lds
pop
inc
lds
popf
adc
pop
lcall
sbb
aad
sub
mov
repz
loopne
repz
xor
dec
cmpl
mov
dec
data16
lods
mov
push
inc
dec
cmp
cmp
xlat
cltd
inc
xchg
andl
mov
cmp
and
sub
popf
lcall
imull
mov
pop
shr
dec
out
insb
leave
out
jae
daa
mov
ret
testl
test
and
inc
sbb
push
scas
pop
std
push
mov
jmp
mov
pop
movsl
out
mov
mov
sahf
jp
lret
ja
push
sub
cmp
les
out
imul
stos
lods
enter
dec
inc
sub
add
xchg
pusha
in
lods
pop
out
lock
dec
mov
cmpsl
push
dec
andb
stos
lret
je
aaa
inc
dec
cmp
out
hlt
mov
mov
in
dec
out
popa
mov
test
out
movsl
loopne
push
sub
adc
mov
stos
add
jp
test
out
dec
xor
sub
dec
js
sahf
cwtl
jo
outsb
or
loop
jle
mov
dec
outsb
pop
cmp
insl
out
mov
sub
cs
pop
mov
movsl
shll
sti
mov
leave
or
mov
scas
js
inc
jg
lret
sub
sub
lock
pop
testb
test
add
scas
and
and
lcall
bound
cmp
mov
fistpl
enter
outsl
cmpsb
dec
push
pop
sbb
dec
pop
daa
dec
cld
loop
or
xor
test
ret
mov
lret
sub
jle
fldenv
lds
aad
jl
mov
mov
rclb
sbb
test
xlat
fs
shrl
cwtl
dec
or
out
mov
mov
bound
scas
mov
leave
inc
shll
sbb
daa
loopne
testl
iret
flds
pop
lods
test
and
addr16
popf
jle
iret
and
sahf
jg,pn
sti
loop
dec
int
mov
cltd
sbb
rcll
aaa
aas
call
fcmovu
iret
and
jg
cwtl
push
or
scas
sbb
lock
jg
cmc
rcrb
addb
mov
mov
jecxz
aad
push
das
or
ja
push
or
pop
or
cmc
dec
leave
lcall
push
clc
aaa
mov
mov
adc
jmp
dec
rorl
idivl
pop
pop
es
bound
test
push
hlt
push
sti
bound
inc
fmul
in
xchg
jnp,pn
pop
mov
scas
jne
mov
loop
jo
pushf
pop
les
mov
sub
xlat
mov
sahf
xlat
pop
mov
incl
jb
dec
cmp
or
ror
ja
push
jl
adc
mov
mov
icebp
pop
sub
pop
push
in
push
and
adc
or
hlt
or
xchg
mov
int3
and
xorps
mov
gs
or
ret
add
inc
xchg
push
xor
xchg
mov
je
jmp
xor
push
sub
clc
or
cmp
nop
xor
add
