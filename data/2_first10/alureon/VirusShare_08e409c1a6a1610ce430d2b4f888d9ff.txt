and
neg
mov
shr
mov
push
mov
add
pusha
mov
mov
rol
push
lea
mov
ret
or
lea
movl
mov
add
not
mov
movl
mov
xor
shl
mov
mov
movl
mov
mov
movb
mov
not
lea
neg
lea
push
and
lea
rol
neg
mov
nop
mov
mov
nop
mov
not
lea
not
lea
not
mov
push
cmp
mov
call
not
mov
mov
nop
not
xor
cmp
lea
not
nop
mov
lea
rcl
call
mov
sub
push
mov
xchg
lea
mov
add
nop
shr
and
nop
xchg
mov
mov
neg
mov
movl
neg
not
movl
xor
xor
movl
mov
mov
mov
rol
movl
lea
not
ror
nop
mov
mov
mov
mov
or
nop
mov
rcl
mov
lea
xor
nop
mov
neg
rcr
mov
movw
not
mov
movb
mov
ror
not
mov
nop
not
mov
nop
mov
lea
call
shr
xor
mov
rol
or
or
jne
lea
mov
xor
mov
not
nop
rol
neg
nop
mov
lea
mov
neg
lea
mov
mov
or
je
mov
mov
rcl
not
nop
cmp
mov
nop
not
xor
mov
adc
mov
or
nop
lea
or
push
rcl
not
neg
xor
popl
mov
sub
xor
neg
mov
movl
lea
xor
mov
push
mov
neg
not
adc
mov
push
xor
shl
call
rcr
sub
lea
mov
not
inc
jne
lea
rcr
dec
neg
mov
or
not
xor
ror
mov
nop
xor
neg
xor
shr
nop
add
lea
mov
mov
mov
mov
lea
nop
mov
shr
shr
nop
mov
rol
pushl
lea
mov
xchg
rol
pushl
xchg
rcr
lea
xor
xor
nop
ror
cmp
xor
mov
nop
rol
xchg
adc
popl
xor
sub
shl
shl
popl
rcl
mov
neg
lea
xor
nop
mov
not
mov
mov
mov
mov
mov
xor
or
nop
mov
xor
not
nop
mov
lea
mov
mov
mov
xchg
sbb
xor
not
nop
mov
not
lea
not
nop
adc
mov
xor
mov
lea
rcl
mov
mov
mov
mov
push
mov
mov
shr
mov
xor
push
mov
xor
mov
cmp
xor
push
mov
xor
push
rcr
xor
call
add
sub
mov
movl
mov
xor
nop
lea
xor
add
nop
add
mov
lea
xor
mov
rol
push
not
mov
push
lea
mov
ror
push
xor
mov
rcr
push
mov
add
neg
mov
push
not
not
mov
not
call
shl
mov
nop
sbb
mov
mov
nop
not
mov
mov
lea
shr
mov
xor
lea
xor
push
mov
neg
lea
push
xor
not
sbb
sbb
xor
push
sbb
xor
mov
xor
shl
push
adc
add
pushl
lea
mov
mov
call
adc
lea
mov
mov
nop
mov
not
mov
mov
nop
not
mov
lea
or
shr
mov
push
neg
xchg
ror
push
rcr
shl
mov
shr
push
xchg
lea
xchg
pushl
xor
xchg
call
mov
not
mov
lea
nop
neg
sub
nop
xor
lea
add
lea
sub
mov
push
xor
xchg
push
neg
neg
ror
xor
pushl
neg
mov
lea
push
mov
xor
pushl
not
xor
mov
rol
xor
call
xor
adc
nop
xor
mov
nop
xor
adc
push
or
adc
mov
lea
push
mov
xchg
mov
push
lea
mov
and
push
shr
lea
push
shr
lea
mov
add
mov
push
lea
neg
lea
mov
pushl
ror
mov
call
add
mov
rcl
mov
nop
shl
mov
neg
xor
nop
xchg
lea
sbb
not
popa
leave
jmp
xor
mov
xchg
push
mov
mov
call
jge
xchg
jbe
mov
adc
in
mov
mov
dec
adc
cmpsl
adc
jbe
clc
sub
into
fmull
in
popa
lret
test
popf
in
and
nop
adc
xor
rcrb
fwait
clc
push
test
push
and
push
jecxz
jl
sti
les
mov
mov
cwtl
dec
pop
iret
xchg
mov
imul
fidivs
mov
xchg
mov
pushf
loop
lods
adc
nop
repz
fadds
mov
scas
inc
es
fidivrs
fwait
cmp
add
mov
cli
mov
test
mov
mov
cmpl
fsubl
mov
xchg
and
insb
cs
pop
arpl
or
xchg
push
inc
test
movsb
push
insl
fisttpll
or
outsb
push
icebp
xchg
xchg
cli
mov
cmp
dec
dec
out
push
dec
mov
mov
or
or
out
adc
xorb
and
jo
jl
jae
inc
lea
mov
out
jmp
jmp
repnz
insb
xor
cmp
mov
mov
sbb
sub
sahf
or
pop
xchg
rcrb
pop
arpl
ffreep
addr16
ret
stc
or
stos
insb
mov
scas
push
push
in
cmp
mov
rcrb
rolb
mov
xchg
jne
pushf
inc
test
xor
fstpl
add
dec
scas
popf
popf
fsts
add
out
dec
je
jbe
inc
mov
stos
hlt
ljmp
dec
insl
andb
imul
inc
enter
lahf
or
in
push
mul
and
dec
aad
std
dec
fildl
insb
push
jnp
sub
fcmovbe
jo
xchg
inc
and
mov
pop
fisubrl
stos
ljmp
insl
sub
clc
cmp
lods
ss
xchg
dec
pop
xor
adc
lea
stos
shrl
jge
xchg
push
xlat
push
push
jo
lahf
jae
pop
shll
and
or
clc
sub
cmp
and
sbb
pop
sbb
loop
push
jb
mov
mov
ja
xor
aas
mov
enter
cli
fs
mov
dec
adc
lahf
sarb
mov
scas
push
rcrl
push
push
loopne
lahf
adc
test
cmp
std
inc
sub
jnp
inc
lret
sub
mov
loopne
lcall
push
xchg
dec
dec
scas
xchg
or
jae
fcomp
call
fstl
insl
scas
subl
incb
pop
addb
aam
jae
mov
iret
xchg
mov
mov
jae
jae
cmp
xchg
in
xor
mov
pop
repz
mov
adc
rol
mov
insb
mov
add
rcrb
fistps
push
mov
into
adc
mov
fdiv
sahf
xchg
mov
es
imul
mov
dec
imul
bound
push
insl
out
cmc
fldenv
sbb
inc
push
and
pop
cmp
out
cmp
adc
xor
aam
fisubl
int
fwait
sub
cmp
xor
cmp
jl
insl
jl
ja
dec
add
cwtl
fcmovb
nop
lods
sub
sti
jb
pop
ss
testb
sarl
cli
add
jb
xor
loop
jmp
cmp
sub
push
fdivl
jne
pop
xchg
push
push
js
dec
and
and
insb
mov
mov
out
rorb
hlt
movsl
xor
movhps
test
mov
push
cmp
pop
je
jo
icebp
out
mov
xor
adc
scas
repz
xchg
cmp
cmpsl
push
fdivrs
cmc
scas
push
or
ds
stc
lahf
or
mov
cmp
loopne
xor
cmp
mov
push
xchg
mov
popf
stos
pop
icebp
mov
lods
sahf
xchg
xchg
lock
push
sub
rorl
bound
fsincos
mov
push
divb
es
lahf
mov
push
sbb
dec
dec
pop
xchg
cmpb
arpl
lock
pop
test
shlb
test
sub
cmpsl
test
sub
sub
iret
add
inc
cld
pop
stos
mov
push
outsl
bound
lock
xchg
adc
fadd
mov
mov
fcmovnu
outsl
xchg
jne
mov
mov
pop
lcall
mov
inc
imul
lahf
insl
fmulp
test
scas
fnsave
and
jne
pop
xchg
lret
shll
push
scas
or
mov
mov
xchg
lods
dec
pop
xor
or
mov
addb
imul
insb
stos
scas
jnp
sub
jp
lea
test
scas
mov
roll
shll
cmp
inc
and
cmp
popf
and
ds
dec
jbe
cmp
fwait
push
sbb
test
or
cli
in
insb
sbb
jns
test
xchg
hlt
sar
call
and
pop
xchg
ret
or
sbb
xchg
test
mov
test
fistps
insl
rcl
into
push
fcomi
outsl
cli
imul
into
mov
xor
cmp
xor
leave
xor
mov
inc
push
aam
sar
dec
and
cs
jp
ret
bound
pushf
dec
rclb
pop
stc
nop
cmpsl
add
dec
sbb
fisubs
push
jmp
dec
test
sbb
sahf
push
xchg
add
mov
cwtl
out
out
jecxz
aad
lret
enter
aad
add
inc
fsubp
scas
dec
testl
push
inc
popl
adc
add
ret
push
lret
ja
inc
jnp
adc
push
ds
out
sbb
insb
push
arpl
jne
adc
fidivs
div
test
sbb
xchg
lds
mov
cltd
jns
xchg
push
aaa
bnd
fadds
sahf
leave
add
rclb
mov
xchg
data16
add
jle
stos
rorl
pop
jo
mov
push
inc
xadd
in
push
push
ret
loopne
movsl
pop
aam
mov
sbb
mov
addb
rcll
popf
imul
mov
mov
testl
mov
adcl
mov
cltd
dec
jg
into
call
adc
iret
mov
cmpsb
out
leave
sahf
jbe
mov
and
mov
pop
adc
add
roll
cmp
mov
pop
pop
fisubs
int
cmp
sbb
sbb
gs
mov
xchg
push
popl
pop
cmc
je
in
mov
sbb
inc
leave
xchg
das
int3
and
xchg
push
adc
fisubs
inc
inc
insb
gs
imul
sub
hlt
hlt
sbb
lcall
std
pop
push
push
sahf
and
sub
cmp
ljmp
adcl
call
leave
aad
jne
sahf
xor
pop
aad
loop
imul
out
lret
icebp
add
std
mov
add
xchg
stc
out
mov
aaa
ss
imul
test
mov
imul
outsb
pop
add
xchg
fcoml
mov
repz
inc
xchg
les
jl
inc
jo
es
mov
fxch
mov
mov
lcall
pop
shlb
mov
and
fwait
and
addr16
adc
push
aas
pop
jne
repnz
imul
jno
sbb
xchg
je
or
mov
aaa
sbb
cmp
lahf
sbb
or
push
into
das
scas
dec
sub
jmp
xor
rcll
arpl
lds
xchg
ret
out
sub
pushf
notl
andl
pop
cmp
