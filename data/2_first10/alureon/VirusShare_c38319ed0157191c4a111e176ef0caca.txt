push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
mov
cmc
mov
mov
jne
outsl
pop
iret
ljmp
fiaddl
jnp
into
rolb
pop
sub
aaa
sbb
mov
push
add
leave
mov
andb
test
and
in
push
in
and
out
cmc
aaa
pop
add
ficompl
jl
mov
sbb
ds
or
mov
or
add
xchg
repz
sub
mov
mov
out
and
add
jnp
imul
inc
inc
std
dec
loop
dec
ss
mov
cli
lea
rol
inc
and
cmp
mov
inc
lock
xchg
dec
cmp
ja
xchg
lds
test
mov
lcall
sub
repnz
out
ljmp
push
int
js
inc
setnp
popa
fimuls
pop
dec
test
arpl
sub
add
sbb
push
push
sub
lcall
jl
cmpsb
mov
addr16
shrb
mov
sub
js
lock
mov
inc
arpl
es
cltd
adc
pop
orb
movsb
inc
lock
ret
les
pop
nop
mov
pop
ja
and
mov
mov
pop
or
sarl
ljmp
bound
out
sub
pop
dec
push
jl
rcll
mov
push
clc
iret
or
comiss
add
fistps
fiadds
jns
lds
lds
or
sub
pop
sub
aaa
push
movsl
mov
sarl
jl
int
adc
outsb
dec
or
adc
cli
lret
sarb
mov
js
sti
outsl
or
inc
mov
dec
adc
lea
mov
mul
rcrb
out
cmpsl
mov
out
shrl
add
add
inc
lret
add
fs
sbb
lret
mov
xchg
mov
push
mov
xorl
xor
addr16
cmp
scas
scas
xchg
push
stos
sti
lds
lods
jmp
fsubrl
hlt
dec
call
adc
and
in
sub
sub
test
push
mov
loop
int
pop
test
icebp
std
daa
int3
and
loopne
xor
sbb
dec
xchg
or
mov
lea
pop
in
test
mov
sub
xchg
ds
ret
cltd
pop
or
push
push
add
mov
icebp
sub
and
mov
mov
fscale
ja
cld
and
mov
jno
mov
stc
and
inc
inc
pop
pop
mov
mov
cmpsb
inc
lock
xchg
mov
cmp
sub
push
data16
popa
cmpsl
out
bnd
mov
sbb
cmp
pusha
jp
cmc
lods
enter
insl
pop
mov
enter
lret
adc
ret
or
aam
fdivl
das
inc
insb
sbb
xchg
inc
jge
daa
test
inc
and
mov
lock
jbe
push
mov
enter
fisttpll
fsts
imul
jge
pushl
mov
imul
mov
aas
repz
add
add
in
cmc
push
xchg
jmp
imulb
subb
inc
mov
push
das
sub
aad
movsl
mov
test
inc
clc
scas
pop
in
and
push
jb
jle
fidivrl
arpl
fldenv
cmpsl
xchg
icebp
lret
fimuls
rcrb
add
mov
repz
inc
push
xor
lret
fdivp
cmpsl
pop
push
xor
lahf
push
sbb
and
push
ljmp
testb
cmc
push
mov
dec
jmp
call
lods
call
sbb
int
les
pop
xchg
ds
mov
adc
cmp
fidivs
into
sbb
loope
fstl
stos
icebp
mov
ficompl
leave
hlt
in
pushf
xlat
pop
jl
cmp
sub
sbb
sbb
and
insl
dec
mov
inc
loopne
paddsb
push
bound
cmpsb
pop
push
push
pop
sub
lea
add
jge
add
jne
and
lahf
loop
and
dec
int
fnclex
xchg
insl
cmpsl
sub
lret
into
scas
adc
movsl
outsb
cmc
xchg
xchg
into
lock
loope
mov
dec
and
push
lcall
out
sub
sub
push
xor
xchg
imul
pushf
rclb
sbb
xchg
fwait
subl
pop
shll
andb
sub
inc
and
jb
imul
xchg
mov
and
jb
push
push
loopne
and
cmp
pop
loope
inc
fcmovnb
cli
stc
fs
add
ja
sub
sub
arpl
cwtl
mov
mov
jnp
std
add
push
paddq
stc
aam
lea
add
add
outsb
leave
push
test
inc
fmull
xlat
data16
mov
or
fs
lods
mov
je
mov
mov
clc
jp
mov
jmp
xchg
cmp
in
sti
add
inc
aad
daa
inc
ficompl
jnp
xor
push
test
xor
imul
out
shlb
or
repnz
hlt
filds
xor
mov
das
ret
jbe
xchg
adc
rol
mov
jl
pop
mov
jge
movsb
neg
dec
fstps
push
cwtl
out
ffreep
loopne
and
call
insl
cld
mov
sbb
sbb
adc
add
pop
test
aad
fsubl
imul
adc
pop
int
fstpl
or
xchg
sbb
insl
mov
int
adc
inc
mov
data16
mov
addr16
xor
inc
aaa
cmc
popf
das
out
add
add
mov
adc
push
clc
jmp
in
and
rcl
adc
sub
sahf
lods
sub
dec
lods
xor
and
pusha
inc
popf
int3
push
std
dec
movsb
inc
jnp
daa
sub
out
loopne
push
add
cs
cmp
inc
test
in
int
fmull
jge
mov
pop
aad
cmp
xor
shr
insl
out
addr16
pop
xor
cli
ja
in
dec
mov
add
add
inc
or
add
pop
push
add
mov
stos
outsl
inc
fisubs
scas
jg
sbb
iret
popf
push
rcrl
push
in
sub
adc
aaa
imul
negb
jecxz
fsubr
mov
jmp
aad
data16
lcall
aam
cs
xorb
add
pop
popf
mov
int3
add
aad
inc
push
int
cltd
xor
lcall
inc
xor
xor
mov
outsl
cs
insb
out
pop
lods
sbb
and
aaa
enter
mov
pop
in
sbb
push
test
mov
fildl
mov
xor
mov
xchg
or
test
std
aad
testb
jo
ret
add
add
pop
shlb
mov
je
cs
cmp
adc
add
push
fistpl
jmp
inc
lahf
or
jae
mov
loopne
add
cli
mov
or
add
lea
popa
loop
je
pop
push
push
jl
in
adc
jmp
jo
pop
pop
dec
sbb
push
mov
jno
pop
mov
shrl
jae
jl
add
jns
pop
mov
jmp
arpl
lcall
in
or
insb
test
push
jl
ret
add
cmpsl
sub
xor
mov
mov
xchg
call
adc
or
xchg
popl
xor
fstl
push
dec
fnsave
pop
cltd
inc
incb
subl
add
addr16
mov
mov
loopne
sar
jp
pop
push
mov
sbb
aaa
ficoms
in
cmp
testb
adc
push
dec
cmp
lea
pop
inc
adc
adcl
mov
scas
cmp
int
fdivp
test
shll
xchg
xor
push
mov
mov
push
in
popa
jl
sti
lret
mov
add
add
add
ss
jecxz
add
and
nop
xchg
jbe
push
mov
xor
lret
les
rol
dec
and
mov
out
inc
ss
jo
rcrb
fcoml
adc
test
popa
pop
cltd
cmp
sbb
dec
mov
dec
popa
test
sub
mov
xchg
adc
add
in
nop
push
add
xchg
cmpsb
add
xor
les
jo
add
pop
xor
add
add
pop
cmc
sbb
jo
mov
test
fcompl
iret
lea
std
call
xor
jns
mov
cmp
push
sub
hlt
mov
adc
and
mov
out
pop
sub
cli
movsb
jmp
adc
dec
jge
cs
aas
pop
lock
inc
stos
mov
dec
leave
xor
out
sbb
lods
fistpl
enter
or
sbb
dec
jno
addb
fdivrl
es
lcall
sarl
jae
fidivrl
sbb
mov
push
pop
divl
das
inc
lret
and
adc
lret
pop
jno
jl
mov
xor
mov
push
pop
nop
jbe
push
dec
sbb
pop
inc
stc
or
mov
leave
stos
cs
cmp
adc
push
mov
add
xor
scas
sbb
and
sub
xchg
mov
dec
push
mov
cmp
iret
sub
loope
mov
pop
test
test
pop
jmp
loop
pop
xlat
push
sub
xor
mov
cmp
das
or
gs
ret
mov
repnz
mov
or
cmp
cmp
imull
cmp
mov
xor
lods
nop
mov
popl
out
rcr
xor
ja
mov
add
outsb
aad
xchg
jp
out
int
enter
cmpsl
pusha
out
ljmp
inc
sub
fisubs
jmp
mov
fsubrl
adc
adc
cmpsb
inc
sub
push
fidivl
fwait
bound
test
test
jae
xchg
call
das
sub
movsb
aad
push
xchg
cltd
pusha
push
xchg
push
scas
mull
mov
xchg
lods
les
lret
mov
add
xor
repz
push
insl
cmp
decl
aaa
inc
mov
std
push
cltd
das
inc
inc
sbb
xor
sbb
inc
cmp
out
sbb
jne
jl
loop
cmp
test
add
dec
lock
lcall
and
add
inc
fimuls
cmp
cmp
out
jbe
mov
cmc
inc
pusha
insl
iret
cwtl
jl
iret
cmp
inc
mov
push
mov
pop
mov
xchg
popa
mov
add
dec
ficoms
mov
mov
fs
shlb
cmp
adc
add
push
mov
rcr
dec
or
js
push
mov
jmp
cmpb
add
mov
clc
xchg
in
incl
dec
push
icebp
pop
mov
sahf
cwtl
or
jmp
jle
sbb
dec
imul
insl
push
and
sub
cmpb
mov
stc
xor
mov
cld
in
mov
popa
add
std
sub
xchg
in
jecxz
stc
iret
out
out
mov
or
test
xor
out
mov
pop
int3
jle
hlt
pop
dec
je
movsl
ret
push
outsl
xchg
mov
es
sbb
adc
add
sbbb
cmc
loope
andl
inc
xor
in
and
cli
add
cmpsb
jg
lods
jnp
inc
jne
dec
pusha
int3
jne
add
les
xor
leave
lds
cwtl
push
adc
mov
pop
mov
push
mov
fimull
add
fistpll
push
mov
fisubs
cli
insl
or
popa
je
popa
not
add
add
and
ja
push
or
inc
adc
icebp
dec
cmp
jbe
xchg
sbb
and
roll
and
clc
pop
fmulp
xchg
cmpsl
inc
cli
fcmove
jbe
inc
adc
add
sbb
sbb
sub
cli
pusha
enter
popa
jo
popf
das
dec
mov
aad
pop
test
xchg
dec
add
test
inc
jbe
push
das
rol
jne
jge
push
nop
pop
enter
xor
stc
or
push
xchg
or
pushf
xchg
in
jo
adc
stos
and
add
rcrb
mov
sbb
mov
mov
mov
shlb
inc
fldenv
mov
sar
cmc
xorb
xchg
jp
dec
pop
outsb
or
sarb
out
pop
cld
lahf
repnz
sahf
add
sti
add
in
mov
or
pop
out
add
pusha
pop
mov
push
inc
rorl
dec
stc
subb
imul
inc
orl
jb
and
pop
jmp
fmull
adc
arpl
mull
cmp
xor
mov
loopne
jno
push
and
sub
xchg
int3
xchg
or
cld
cmpsb
and
xchg
cmpb
test
popf
pop
add
pop
notb
mov
mov
adc
xor
pop
es
dec
pop
jl
mov
and
xor
aad
sbb
clc
pusha
je
stos
jo
xchg
or
inc
aaa
xor
sub
sub
inc
or
loopne
test
bound
mov
adcl
adc
das
cld
pop
arpl
adc
stos
push
push
loop
lahf
rcll
addr16
adc
mov
cmp
add
add
add
pop
push
repz
add
mov
jle
out
mov
loopne
int
inc
loope
xor
rclb
dec
sbb
adc
mov
orb
sbb
xchg
push
push
inc
stos
fcos
aad
xchg
xchg
repz
lods
call
nop
mov
std
or
xor
jno
ror
adc
cld
scas
movsb
shr
cmp
mov
lcall
shrb
cmpsb
outsl
dec
cmc
push
inc
mov
xlat
leave
mov
rclb
mov
wrmsr
stos
cli
pop
fucomip
mov
xchg
gs
xchg
arpl
scas
sub
les
lcall
cmp
mov
rcrl
mov
mov
int
push
leave
icebp
mov
mov
jne
fistps
cmpsl
shld
in
cs
jns
fwait
dec
gs
sbb
add
adc
cmp
add
add
mov
out
aaa
xchg
enter
stos
xchg
aaa
jge
xor
lods
jb
lret
inc
loope
mov
mov
xchg
int3
mov
push
inc
in
and
pop
jg
xor
popa
test
push
pop
adc
mov
mov
subb
roll
sbb
shlb
push
and
notb
sbb
mov
sbb
mov
mov
out
add
jbe
cmpsl
push
mov
lahf
adc
xor
xor
cmp
mov
test
mov
enter
fwait
sbb
sbb
push
and
popa
ret
test
push
pop
out
or
int
mov
add
aad
out
adc
dec
push
cmpl
push
out
push
mov
push
ret
pop
push
test
lods
das
cld
sbb
out
pop
insl
ret
mov
xor
inc
insb
jg
inc
mov
pusha
mov
into
add
insl
mov
fldt
add
and
adc
jecxz
mov
dec
divl
pop
push
outsl
mov
imul
out
lahf
jl
es
sub
popa
push
sbb
xchg
add
sub
xor
mov
imul
push
outsl
push
shrl
enter
and
inc
or
pusha
add
mov
xor
out
jbe
jg
nop
sbb
jg
adc
xlat
push
lea
mov
jae
ljmp
icebp
lds
lock
int3
mov
add
and
addl
cwtl
test
sub
ja
vmwrite
push
cs
or
push
test
lock
loope
inc
jp,pn
adc
clc
dec
mov
aam
lock
mov
cld
xchg
sti
insb
push
std
imul
add
push
dec
push
mov
dec
and
and
add
frstor
pop
gs
cmpsb
pop
leave
repnz
scas
mov
pop
mov
sbb
push
mov
xor
stos
js
lods
push
pop
push
cmp
popa
lcall
push
out
lret
sub
sbb
sbb
cmp
mov
fwait
iret
data16
mov
adc
mov
andb
loop
imul
or
ror
mov
adc
add
adc
add
jo
xorl
pushf
notb
in
or
les
add
and
cmpsl
xorb
sub
mov
lds
into
xor
test
call
iret
pop
and
xor
cmp
push
pop
lret
cwtl
and
xchg
xchg
in
sbb
aas
lods
bound
cmp
loope
ds
fadd
inc
stos
fiadds
adc
icebp
ss
fisttpll
add
mov
rcll
fisubrl
cmpsl
ret
lret
hlt
subb
inc
mov
shl
and
cld
mov
inc
xor
shll
sbb
mov
sub
or
dec
or
jno
test
pop
insl
dec
sub
kmovw
push
scas
jecxz
mov
mov
push
fimuls
adc
xor
lds
inc
scas
cmpsl
jecxz
mov
mov
inc
add
add
call
xchg
push
mov
xchg
and
insb
test
mov
cmp
mov
out
ret
mov
cmp
pop
shll
pop
sub
pop
sti
out
add
inc
push
push
jmp
lahf
push
pop
pop
ffreep
imul
and
addr16
fs
add
ja
pop
mov
mov
cmp
adc
inc
or
movsb
loope
sub
sbb
pusha
fstpt
and
add
les
cwtl
hlt
test
sahf
mov
sbb
pusha
xor
add
mov
mov
push
jecxz
mov
inc
aaa
leave
js
sbb
inc
jle
inc
cmp
pop
xchg
mov
fstps
adc
lock
les
xchg
xor
adc
cmp
or
xchg
paddb
cs
pushf
push
xlat
stos
scas
xor
in
add
xor
ret
es
fwait
jo
add
sbb
xchg
xor
ja
mov
lret
mov
adc
lods
xor
pusha
jb
pop
dec
lods
lods
push
loope
in
cmp
lds
into
les
push
xchg
sti
jo
xchg
cs
movsl
cs
push
inc
jbe
sub
add
les
fildl
adc
test
add
adc
cmc
xchg
popa
and
scas
cmpsl
cs
lret
push
stos
repz
adc
mov
iret
pushf
cld
decb
ret
fcmovbe
mov
xchg
aad
movsb
mov
pop
daa
jge
ret
lret
hlt
mov
jo
test
xor
inc
cmp
jecxz
cltd
lds
popa
out
jo
push
outsb
outsl
cmpsb
xor
jecxz
mov
in
xchg
movsb
or
aaa
cltd
sti
roll
fs
icebp
jno
xchg
mov
jb
sbb
inc
cs
sub
add
negl
in
aam
jp
je
sahf
test
out
pop
out
jb
fstpl
jge
pushf
xlat
ds
mov
out
or
mov
mov
iret
aas
pop
xor
cmpsb
mov
je
out
cmp
add
out
jmp
jmp
sbb
out
jg,pn
lock
sub
loopne
imul
std
jmp
jae
mov
divb
push
sub
test
mov
ret
add
add
push
mov
js
test
inc
dec
gs
pusha
mov
in
test
jmp
not
push
lea
insb
pop
imul
add
sbb
int
mov
cmp
inc
and
imul
mov
scas
scas
sub
dec
in
clc
icebp
das
es
push
inc
push
loope
movsb
ficoms
cld
or
jge
mov
fldcw
daa
lahf
prefetch
or
stos
pop
dec
popa
push
mov
mov
or
push
xchg
jns
mov
nop
mov
jo
loop
dec
iret
imul
bsf
data16
rcrl
int
xor
pop
stos
xor
or
test
jbe
stos
cltd
pop
test
and
mov
mov
cmp
mov
dec
adc
loopne
in
in
lods
nop
sarl
cltd
lret
and
sbb
mov
xchg
mov
test
in
out
enter
pop
mov
add
xchg
faddl
out
outsl
jns
lret
lahf
cmpsb
dec
inc
cmpsl
inc
push
les
aaa
lret
add
jns
or
lods
movsb
stos
aas
lock
imulb
xorl
sub
je
add
and
mov
add
cmpsl
insb
inc
adc
outsl
shrb
xchg
bound
or
loop
xchg
out
cwtl
aad
icebp
or
ljmp
add
rcll
dec
orb
iret
cmp
sbb
inc
mov
bound
mov
dec
mov
addr16
pop
aas
jne
inc
lods
lods
mov
pop
scas
popa
enter
scas
es
outsl
iret
rcll
xchg
fisubrs
jb
lcall
sbb
mov
pop
pop
mov
rorb
cmp
jl
mov
xor
mov
mov
subb
cmp
add
add
scas
pop
nop
jno
lods
pop
mov
insl
dec
sbb
lea
imul
loopne
xchg
pop
jnp
mov
xor
inc
pop
jbe
xchg
cmpl
aas
pop
mov
cmp
jmp
sbb
cmpl
into
cmpb
jo
add
cwtl
mov
xchg
mov
pushf
push
or
ds
or
dec
adc
mov
jmp
test
into
jns
adcl
int3
es
cmp
adc
sbb
cwtl
shlb
jo
je
clc
dec
iret
sti
jnp
and
mov
lahf
out
adc
popa
popa
stc
xchg
imul
push
aas
sub
out
aas
xchg
jo
mov
pop
xor
popf
and
dec
inc
sbb
cmp
cltd
push
inc
dec
cmp
mov
leave
mul
push
add
add
aas
push
fstp
lds
mov
xor
sti
sub
loope
loopne
adcl
leave
mov
jle
aas
add
sub
mov
cmpsl
pop
adc
mov
cltd
mov
imul
add
ror
loopne
rcll
cli
in
pop
xchg
repnz
fs
adc
loop
cmp
pop
xchg
rcll
or
xor
add
fcoms
dec
insl
jb
push
les
push
lods
add
test
mov
xchg
and
rcrb
inc
add
je
fadds
test
cmpsl
jl
jecxz
xchg
or
jns,pt
sbb
jp
insb
mov
dec
cwtl
and
rorb
adc
inc
mov
ljmp
js
jno
dec
stos
dec
mov
adcl
movl
dec
out
enter
mov
xor
jne
sbb
test
in
or
sbbl
jb
and
ljmp
imul
aam
sbb
add
neg
cmp
xchg
int3
lret
popa
movsb
repnz
cmp
roll
stc
enter
repnz
lds
add
push
test
add
into
mov
lret
test
sbb
mov
push
scas
jns
mov
xchg
xchg
or
ljmp
cld
int3
add
inc
push
adc
shl
push
dec
lods
imul
lods
mov
xchg
sub
and
push
pop
adc
aam
mov
add
sub
jmp
xchg
xchg
sub
and
sar
dec
add
xor
shl
mov
jnp
dec
test
mov
xor
add
and
rorb
xor
iret
pop
pop
push
cmp
pop
mov
dec
lds
xorl
xchg
cmpb
adc
rol
and
cmpsb
dec
jno
in
dec
lret
fcoms
ljmp
fwait
scas
ja
cmc
lock
xchg
xchg
xlat
inc
mov
inc
mov
jbe
xchg
loope,pt
and
or
pop
mov
xor
fiaddl
lahf
dec
push
xor
sbb
ss
add
xor
mov
lds
aas
mov
sbb
inc
mov
xor
inc
mov
popf
xchg
pop
jae
sub
mov
out
loope
cwtl
inc
lcall
les
xor
inc
call
fcmovnu
push
or
dec
xor
inc
pop
ja
xchg
dec
repnz
fiadds
cmc
pop
cmp
jno
fsubs
fnstsw
add
add
aas
pop
dec
xchg
jp
adc
xchg
xor
sub
out
jns
add
adc
xchg
xor
xchg
add
jge
dec
pop
popf
fnstcw
cmpsb
xor
push
nop
add
das
pusha
push
cmp
test
dec
adc
popa
ljmp
xchg
push
jns
adc
cmc
cmp
inc
ss
adc
enterw
addl
add
add
cltd
mov
pop
ds
sahf
rcl
int
cltd
enter
adc
js
cwtl
stos
cld
xchg
cmp
int
in
cwtl
gs
pusha
inc
ret
outsl
push
mov
mov
and
jae
movsl
aam
inc
adc
out
mov
imul
popa
adcb
xchg
adc
xor
adc
mov
aas
xchg
das
loopne
call
mov
xor
cmc
mov
mov
add
cmpsl
push
loop
mov
dec
pop
lcall
or
mov
scas
lods
ja
sbb
movb
sahf
cmp
mov
sbb
sub
and
out
add
inc
outsl
test
rcrl
out
nop
push
lret
ficoms
std
ret
aad
shlb
mov
cmp
or
into
outsb
inc
or
jns
and
mov
mov
lods
xor
add
add
movsb
sbb
filds
cwtl
and
push
or
sti
test
cmp
cmp
sahf
sub
aam
cs
movsl
ds
push
mov
push
sti
pop
adc
pop
or
jbe
mov
push
pop
push
out
pop
jne
add
push
movsb
mov
outsl
ja
out
mov
xchg
pop
push
subl
push
fildll
popf
hlt
inc
xchg
xchg
push
cltd
sbb
out
xor
push
loop
pusha
fsubrl
clc
cld
inc
push
loopne
stos
shr
sbb
pusha
mov
inc
and
movsl
adc
call
pop
xor
pop
sbb
mov
mov
add
mov
fmul
mov
testb
dec
mov
mov
jmp
ja
xor
clc
xchg
lods
cmp
add
fcompl
jmp
xor
xchg
hlt
mov
fildl
jne
xor
inc
scas
outsl
xchg
loop
pop
push
add
mov
xchg
dec
test
xchg
adc
mov
add
gs
ret
jmp
adc
inc
and
jmp
out
mov
insl
cmpsb
push
or
scas
cld
xchg
pop
rcrb
add
loopne
negl
mov
or
add
xor
cmp
shll
dec
cltd
outsb
in
cld
sbb
mov
xchg
inc
dec
mov
repnz
or
jmp
into
xlat
jg
xchg
lods
or
subl
leave
lcall
mov
ret
push
xor
out
dec
sbb
nop
jl
dec
cmp
ret
jno
stos
outsb
lods
or
adc
pusha
mov
scas
pop
mov
xor
les
fdivp
icebp
mov
mov
cwtl
in
fsubl
pop
push
xchg
repz
push
xchg
arpl
pop
arpl
cs
insb
ljmp
insb
faddl
sarb
push
mov
xchg
in
test
hlt
adc
xor
sbb
iret
iret
aam
xor
push
adc
xchg
ret
in
push
jbe
clc
adc
sbb
ljmp
mov
push
outsl
ret
mov
incb
ljmp
ljmp
inc
xchg
cmp
int3
and
scas
sbb
jne
icebp
ljmp
loope
lcall
lahf
cmp
dec
jecxz
loop
xchg
scas
inc
jle
data16
cmp
icebp
and
loopne
mov
cwtl
xchg
xchg
mov
mov
cs
push
out
add
dec
pop
nop
xchg
dec
test
xor
loopne
add
add
mov
insl
jle
outsl
or
jp
scas
aas
cmpl
jecxz
hlt
fsubrs
les
push
xor
fisubs
aaa
mov
mov
popf
inc
dec
lock
push
aam
pop
psubusb
jle
pop
sub
in
jb
aas
movsl
daa
add
mov
cmp
std
jns
rclb
lds
popf
sti
int3
cmpsb
lcall
pusha
dec
int
lock
ret
mov
popa
push
loope
lret
add
add
pop
adc
not
js
pop
repz
and
mov
out
cmp
jb
js
aas
or
