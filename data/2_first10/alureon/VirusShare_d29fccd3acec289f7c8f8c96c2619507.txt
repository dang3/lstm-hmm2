push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsb
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
js
mov
xchg
in
gs
subl
push
pusha
aad
mov
jle
fwait
loop
rcr
jno
lock
mov
sbbb
outsl
cmp
je
push
movsb
scas
sub
stos
out
dec
xchg
bound
dec
pop
aas
jno
jne
dec
shlb
out
inc
pop
cmp
add
mov
insb
stos
jb
adcl
hlt
fisttpll
inc
int
lahf
cmp
movsb
sbb
xor
loopne
inc
mov
movsb
xor
mov
mov
cmpsb
movsb
mov
add
mov
arpl
jp
icebp
push
add
push
mov
add
add
daa
icebp
mov
fldenv
mov
pop
sbb
mov
add
xchg
frstor
pop
shrb
daa
xchg
fs
lea
jmp
lcall
cwtl
pop
and
xlat
add
mov
push
imul
outsb
xchg
and
lret
mov
mov
mov
jae
mov
inc
jo
sti
xchg
add
add
xchg
sub
scas
in
jecxz
mov
test
cmp
cmpsl
scas
cmp
gs
and
mov
cld
lods
inc
dec
jnp
add
in
pop
orl
sub
xchg
or
jnp
mov
je
or
push
scas
dec
pop
cmp
adc
add
insb
add
inc
in
mov
lods
int3
enter
pop
lods
and
mov
imul
je
sbb
imul
lahf
dec
mov
neg
push
pop
ds
fwait
add
movntq
push
mov
les
fmull
pop
adc
aas
sub
pop
push
jbe
loopne
faddl
cltd
or
repnz
sbb
insb
xchg
out
shld
jnp
insl
ret
mov
fldl
cwtl
dec
pop
add
jg
stc
add
lea
sub
subl
aaa
in
push
imul
cs
jne
test
je
repnz
mov
andb
mov
test
xlat
lret
pop
jbe
fmul
andb
out
orb
adc
xchg
fcompl
popf
call
xchg
mov
enter
shrl
xor
pop
add
add
lods
nop
mov
xlat
cli
outsb
cs
push
ret
sbb
mov
and
inc
dec
jg
in
or
popw
mov
test
out
leave
sub
sbb
or
pop
adc
aaa
cmc
mov
push
inc
in
mov
mov
inc
mov
lods
addr16
pop
fimull
jns
imul
sbb
jo
pop
push
ret
out
stos
gs
test
add
jg
jmp
test
push
test
mov
add
outsb
xor
dec
inc
inc
cmp
cli
ds
mov
inc
push
jmp
adc
push
adc
stc
push
mov
adc
gs
sub
cmpsl
loop
jl
push
mov
pop
aam
push
mov
dec
sbb
in
dec
sub
dec
cmp
jo
int3
int
mov
into
adc
aaa
inc
mul
shlb
xchg
ret
sub
out
mov
dec
fbld
out
add
xchg
mov
cpuid
sti
push
add
js
sub
xor
inc
pop
inc
pop
jge
mov
loopne
dec
inc
test
adc
adc
insb
adc
inc
xchg
dec
scas
lea
cld
in
or
sub
sahf
mov
sti
lods
and
popf
push
pop
push
dec
xchg
rolb
adc
ret
test
rcll
test
sbb
stos
push
jg
or
add
dec
daa
pop
lds
cwtl
xor
mov
je
add
mov
fisttpl
daa
mov
in
jne
sbb
pop
fsubl
mov
mov
outsb
inc
inc
out
aas
jmp
stos
jns
mov
aam
jmp
add
pop
mov
xchg
movsl
lods
fs
pop
mov
rcl
mov
inc
push
jns
pop
lods
pop
inc
lcall
mov
push
sbb
inc
cwtl
pop
inc
add
clc
aam
in
xor
pusha
pop
data16
in
push
ret
dec
or
movsl
ds
adc
aaa
clc
pop
pop
cmp
cmpsb
adc
out
insl
aas
in
sti
and
mov
pop
pop
rcll
movsb
imul
xchg
mov
fldt
adc
out
scas
das
pop
int
add
outsl
xchg
or
ljmp
mov
shr
stos
xor
shr
jl
add
aad
sub
and
test
push
rol
xchg
sbb
cmp
nop
fcmovbe
lret
and
gs
andb
test
fistps
or
inc
in
sbb
aas
mov
xor
dec
jmp
inc
into
cmpsl
out
cltd
out
pushf
xor
pop
jge
test
les
push
sbb
add
add
sti
dec
sahf
xchg
push
dec
inc
xor
adc
roll
test
jbe
cmp
inc
sub
push
shrl
push
loope
sbb
add
enter
sub
mov
mov
lods
repz
enter
movsl
add
leave
mov
ret
or
mov
jbe
in
out
insb
insb
push
dec
cmc
push
roll
sbb
dec
je
mov
fcomps
sbb
stc
add
testl
ljmp
dec
addr16
pop
push
pop
sub
push
out
inc
icebp
addr16
lds
lock
sbb
fsubs
imul
xor
frstor
add
or
mov
mov
repz
mov
clc
inc
push
dec
cs
ss
movsb
cwtl
pop
incl
aad
in
shl
call
pop
insb
outsb
pop
add
out
inc
pop
push
add
out
adc
jae
and
addr16
cmpsl
movb
pop
mov
mov
notb
and
cmp
test
sub
arpl
xchg
ss
mov
cmp
daa
shll
into
jle
mov
pop
xchg
xchg
cmp
not
jnp
adc
push
xor
jecxz
inc
sti
rcl
cmc
mov
into
xor
repz
pop
sti
daa
sub
jne
push
add
add
mov
pop
cmp
shrl
xorl
outsl
mov
lock
mov
push
out
movsl
cmp
pop
adc
das
and
push
incl
xor
imul
add
pop
or
cmp
jecxz
push
call
jb
lea
lods
fwait
addr16
jb
or
in
out
lahf
sbb
inc
hlt
or
push
add
push
data16
aaa
adc
cmp
add
adc
xchg
or
mov
cwtl
dec
out
jge
dec
adc
les
mov
sti
inc
inc
xor
jp
cmp
pop
dec
clc
cmp
imul
lea
daa
lods
push
mov
mov
lea
mov
mul
mov
and
sbb
jns
pmullw
popa
or
xor
pusha
adc
add
add
pop
push
popf
pop
sti
outsb
enter
mov
rcr
xor
fnstenv
mov
roll
mov
stos
xchg
xchg
adc
mov
pop
dec
enter
cs
add
add
inc
aas
mov
adc
std
lock
push
push
push
out
xchg
ss
insl
adc
and
add
ja
aaa
xchg
rol
adc
xchg
lds
in
cmp
sbbb
fisttps
add
hlt
mov
inc
lods
cmpb
cmc
jge
int3
negl
movsl
add
push
jns
xchg
je
fdivl
pop
daa
es
ljmp
mov
fwait
lods
mov
and
xchg
push
push
or
sbb
add
enter
jle
lock
mov
add
cmp
pop
mov
inc
addr16
gs
sbb
cltd
pop
in
pushf
pop
mov
mov
into
data16
adcl
imul
xchg
out
ds
nop
sahf
mov
jp
cmp
adcb
mov
pop
add
int3
sbb
and
out
dec
cmc
or
clc
push
inc
sbb
dec
dec
divl
pop
sub
outsl
push
bnd
call
xchg
xor
xchg
mov
push
xorb
add
idiv
or
movsl
andb
cltd
aam
dec
xchg
repnz
mov
mov
mov
sub
pop
out
lods
cld
std
mov
aam
jnp
aad
fcompl
or
add
add
add
inc
dec
mov
fcomps
dec
bnd
call
outsl
add
mov
and
cmp
add
and
jg
gs
cmpsl
xchg
xor
mov
out
add
xor
inc
out
mov
fidivrl
out
orl
mov
clc
xor
les
imull
adc
or
dec
or
xor
movsl
adc
pop
xchg
fcomps
dec
cmp
add
stos
mov
jle
jnp
ret
jmp
cwtl
lock
fisttpl
nop
mov
into
bound
fists
xor
add
jecxz
and
add
add
pop
popf
adc
xor
insb
nop
push
loop
in
mov
add
loop
outsl
sub
out
xchg
jbe
les
fisubl
insb
mov
shrl
subb
insl
inc
dec
dec
lods
movsl
out
mov
sbb
addr16
iret
sub
mov
mov
lock
push
mov
xchg
fwait
in
jle
push
fdivrs
shll
cld
aam
inc
bound
push
les
add
mov
aad
lcall
lea
das
add
or
mov
xor
fbld
push
lods
arpl
mov
imul
mov
cli
mov
dec
popa
dec
insb
dec
mov
push
std
jg
jb
jno
mov
push
stc
add
mov
ja
lahf
xchg
mov
inc
inc
lods
inc
dec
scas
mov
push
jecxz
sub
jge
sbb
test
out
mov
adc
lds
movsb
or
insb
aas
pop
mov
movsb
scas
add
test
test
jo
into
mov
jno
pop
push
add
mov
sbb
push
and
xor
adc
push
mov
repz
adc
addr16
mov
in
adc
push
push
cld
data16
dec
lds
stc
or
mov
cmp
sub
add
add
or
les
shufps
push
xchg
imul
popf
loopne
sbb
xchg
push
jle
or
movsl
xchg
and
xorb
aad
sbb
mov
mull
lock
lds
call
into
dec
insl
pushf
out
data16
adc
ret
adc
mov
pop
jmp
mov
add
mov
pop
jnp
cld
cltd
and
sbb
adc
int3
stos
xor
rcrb
fdivr
add
pop
mov
lahf
mov
push
push
sbb
jmp
insl
js
icebp
in
cmp
add
jno
dec
lds
xchg
mov
ret
int
imul
mov
jno
je
adc
aad
lds
add
adc
pop
push
js
xlat
xor
je
xor
add
add
mov
jae
js
sub
hlt
mov
call
jns
test
daa
cmp
mov
loope
jg
mov
movsl
xor
aaa
fsubr
pop
add
jl
cmpsl
ds
push
test
cmpb
adc
jo
mov
mov
push
ret
pop
cmp
les
je
popf
popa
sahf
lods
adc
outsb
sub
adc
pusha
sti
test
mov
clc
fildl
add
add
sub
ss
mov
cld
fisttps
jno
dec
das
mov
clc
scas
movsb
icebp
sub
dec
push
pop
fmull
sub
dec
push
pop
mov
or
mov
stos
dec
mov
flds
scas
xor
sahf
lock
shrb
rcl
sub
pop
inc
into
inc
jb
add
cltd
pusha
mov
push
aam
jne
cmp
lea
cwtl
sarl
mov
adc
repz
jb
sub
dec
leave
pop
mov
call
insb
icebp
mov
btsl
inc
rolb
or
inc
mov
jmp
bts
lahf
fidivrl
insl
out
xchg
jmp
jp
adc
iret
pop
xor
and
dec
inc
adc
aas
add
pop
push
dec
pop
mov
popa
aam
sarb
sahf
cmpl
gs
testl
arpl
pop
icebp
ret
aaa
js
leave
das
clc
xor
xlat
dec
dec
clc
shll
sbb
pop
adc
add
ret
out
cmp
into
lods
xchg
mov
js
pop
sbb
mov
jmp
in
sub
lcall
cmp
add
add
xor
ficomps
fsubrs
inc
push
cmp
cli
movsl
dec
cltd
jo
mov
mov
push
push
dec
aaa
and
int3
push
pop
or
jp
lahf
call
std
xchg
outsl
daa
outsl
ja
cmp
movsl
inc
jb
mov
inc
ss
mulb
push
clc
xchg
push
or
push
jns
add
jbe
ljmp
xchg
or
push
fs
mov
xor
pop
sbb
pop
xchg
cmpl
sbb
cld
inc
mov
add
pop
leave
cs
mov
je
pop
ret
mov
pusha
cmc
lcall
pushf
repnz
fimull
inc
sub
mov
xor
or
cwtl
ss
mov
shrl
lods
adc
pop
dec
sub
add
add
sti
outsb
pop
mov
and
dec
sarb
push
mov
int3
cmp
nop
testb
sbb
aas
or
fs
lcall
loope
mov
jns
out
add
sahf
or
xchg
sbb
movl
sbb
out
cmc
cmp
sbb
pop
popf
mov
jge
xlat
fidivs
lret
cld
lret
dec
jmp
sub
scas
xchg
xchg
into
test
rorl
add
pushf
in
outsb
fisttps
es
and
sbbl
adc
popf
insl
jg
and
scas
mov
iret
adc
jp
push
data16
iret
or
test
mull
push
popf
push
cmp
xor
pop
int3
mov
out
shll
pop
xchg
mov
dec
int3
je
sbb
jle
dec
pop
pop
push
mov
add
scas
movsb
roll
push
or
test
xchg
pop
enter
mov
sbb
pop
mov
shll
sbb
scas
cltd
jl
outsl
imul
into
mov
jl
stc
out
add
xchg
in
push
sub
outsb
test
jmp
aas
push
ljmp
lcall
mov
mov
pop
sub
mov
add
add
ja,pn
push
push
popf
mov
arpl
loope
xor
insb
icebp
dec
jle
sbb
decl
arpl
aad
cld
cmp
inc
enter
sbb
mov
mov
cmp
enter
dec
and
mov
sbb
aam
orl
sarb
xlat
cmpsb
cmpsl
outsl
icebp
sahf
dec
lret
dec
in
loope
xchg
into
cld
aas
jp
push
popa
cmc
addr16
and
xchg
fldcw
xchg
repz
sbb
xchg
out
add
add
jbe
push
pusha
dec
and
xor
push
icebp
inc
mov
jle
rolb
outsl
jae
fisubrs
das
xor
popf
adc
and
sub
push
cmp
loop
mov
lods
add
js
fs
test
add
pop
fwait
leave
in
popa
icebp
cmpsb
adc
sbb
insb
cwtl
and
dec
ret
mul
jmp
mov
ja
or
sar
mov
add
or
lret
sub
lds
push
xor
ret
addl
push
fiaddl
nop
pop
mulb
or
sbbb
mov
jnp
mov
iret
pop
sysret
xlat
sbb
icebp
in
pop
cmpsb
andb
stc
sub
ja
lods
mov
pushf
push
test
push
cmpsb
int3
jnp
dec
fucomp
mov
imul
movsl
dec
aad
push
sub
and
sbb
add
cmp
cwtl
add
add
push
jb
push
inc
out
jae
fwait
inc
bound
lret
outsb
xlat
pop
push
ljmp
push
ror
pop
jmp
add
add
call
fucomp
sub
ret
or
sub
jle
fidivrs
scas
pop
add
push
push
jle
and
inc
mov
filds
sbbb
adc
sarb
inc
pushf
mov
mov
add
pop
sbb
add
add
pop
push
sbb
jns
mov
jb
push
mov
mov
outsb
mov
jmp
clc
std
and
pusha
lret
aaa
mov
adc
insb
in
dec
mov
mov
dec
aad
cltd
xchg
sbb
cltd
jge
loope
mov
push
push
jecxz
jne
mov
jae
sub
getsec
jge,pn
addr16
push
int3
cmp
pusha
rcll
xchg
add
add
xor
enter
js
notl
std
shll
sbb
or
jge
mov
mov
push
push
xchg
popa
sbb
or
int
mov
lock
scas
mov
lods
cmp
and
xchg
sbb
mov
js
cmp
insl
js
sbb
inc
call
fstp
inc
jnp
fistps
repnz
sbb
fdivrl
add
call
push
out
inc
fsubs
std
sbb
inc
xchg
leave
push
dec
add
in
lret
enter
int3
mov
jle
cld
mov
out
in
mov
ficoml
dec
xchg
add
outsb
pop
mov
mov
xchg
lock
cmp
fnstcw
inc
fs
call
or
mov
imul
lea
add
and
outsl
cmp
scas
stos
pusha
je
insb
dec
mov
aaa
or
lahf
outsl
test
movsl
pop
adc
adc
xor
lock
add
inc
and
out
data16
or
cmp
and
mov
loopne
mov
inc
cltd
jle
inc
push
fistpl
mov
out
mov
mov
push
push
fwait
lret
jg
orl
add
pushf
jae
sbb
ret
scas
xchg
xorb
aad
jle
mov
push
adc
dec
xchg
les
sub
repz
das
in
jp
aaa
mov
icebp
push
sbb
pusha
sti
mov
xchg
cwtl
movsl
jl
leave
push
jmp
js
leave
aam
dec
pop
sub
andb
mov
cmp
ljmp
mov
dec
and
pushf
test
inc
sub
test
scas
push
cmpsb
adc
jae
mov
adc
mov
inc
jge
dec
into
out
mov
mov
push
addl
inc
and
and
test
sarb
aas
sub
xchg
not
fimuls
mov
int
enter
outsb
pop
cwtl
xchg
push
mov
outsb
cmpsl
and
jl
leave
push
mov
mov
add
add
mov
sbb
cld
jg
inc
dec
cmp
cmp
es
pop
nop
adc
xor
add
mov
pop
push
icebp
jmp
std
pop
pop
fucomp
loop
cmp
clc
cltd
or
push
mov
rorl
inc
rclb
fisubrs
test
cmpsb
insl
xor
push
test
xchg
out
outsl
iret
insl
sbb
jle
je
mov
push
testb
mov
scas
sbb
in
loopne
fists
popa
push
nop
cltd
or
idiv
mul
ljmp
loope
jbe
add
push
xor
lret
enter
es
push
es
xor
jl
movsb
inc
and
dec
or
ds
cs
mov
pop
xor
mov
dec
mov
shlb
xchg
ss
gs
hlt
adc
pushf
fcomps
mull
adc
repnz
dec
push
mov
sbb
inc
iret
push
pop
adc
les
pop
dec
in
aam
fmul
and
add
xor
mov
sarl
leave
ljmp
ret
out
pop
pop
mov
dec
subb
push
mov
sbb
aam
call
cmp
dec
push
push
inc
fs
repz
mov
pop
jae
jbe
js
adc
jb
fld
shrb
inc
leave
iret
test
loope
aad
mov
shll
in
pop
roll
leave
xchg
fisubrl
clc
out
sbb
js,pn
sahf
pusha
adc
cmp
shr
mov
popw
sti
sbb
mov
push
or
lods
jnp
ficomps
insl
cmp
add
add
inc
xchg
jno
jbe
loopne
js
mov
pop
or
push
aas
or
or
mov
jl
jmp
aam
fsubl
js
xchg
sti
cmp
push
and
movsl
dec
cmp
jge
mov
dec
or
or
push
push
ret
add
dec
sub
daa
sbb
gs
jb
mov
enter
fdivp
addr16
in
sub
lea
push
fucomp
insb
push
add
outsb
ljmp
dec
adc
mov
mov
or
push
cmp
or
incb
pusha
adc
hlt
mov
addr16
mov
xor
mov
or
aad
fsubl
or
insl
lahf
dec
jecxz
push
pop
adc
push
cld
mov
std
cltd
aaa
out
test
mov
inc
rorb
roll
pop
stos
cli
dec
push
shrb
add
push
inc
sbb
or
add
sbbl
lret
mov
in
shl
add
cwtl
js
dec
xor
adc
sbb
sti
lcall
inc
adc
cmp
les
adc
cmp
sub
sub
es
jg
aam
lret
addr16
cmp
pushf
mov
data16
inc
out
jl
repnz
cmp
mov
loop
insb
pushf
inc
mov
call
adc
pop
sbb
mov
jge
int3
mov
fdivrs
push
sbb
out
das
cltd
cmc
ljmp
sbb
jl
cmp
dec
push
iret
ds
jb
jo
lret
sbb
push
cltd
lahf
pushf
int
out
inc
ljmp
bound
add
dec
inc
and
aas
std
mov
sub
pop
or
mov
add
or
mov
and
cmp
fstps
inc
outsl
hlt
aas
scas
je
pop
and
xorb
mov
dec
xchg
mov
mov
dec
mov
sarl
jns
pop
mov
pop
pop
jae
xchg
aam
add
fucomp
push
das
adc
incb
push
je
inc
sub
rcl
call
sbbl
push
dec
iret
out
roll
adc
mov
cli
cmp
lcall
inc
cmpsl
xchg
inc
je
mov
push
in
push
data16
push
aad
cli
jno
hlt
mov
xor
jmp
jmp
xchg
aas
xlat
repz
into
lock
inc
inc
sub
mov
dec
stc
push
inc
push
in
imul
sub
cli
push
lods
or
cltd
ret
add
out
int3
out
add
dec
xchg
push
jae
mov
aad
add
mov
sbb
out
mov
daa
jmp
xchg
aad
inc
in
stc
cld
popf
and
cwtl
dec
inc
and
dec
xchg
sub
lods
test
or
push
ja
inc
popa
int3
out
push
adc
inc
cli
push
dec
jp
xchg
or
rclb
in
fdivrl
jmp
xor
mov
out
dec
int
cmpsb
and
iret
inc
cmp
lods
rorb
mov
movsb
iret
mov
out
jle
xor
cmp
insl
cmp
cld
aad
mov
loop
inc
dec
imul
shrd
xchg
into
xchg
test
popa
pushf
scas
jmp
add
out
iret
sub
or
pop
xchg
fidivrl
addr16
int3
outsl
aas
out
ffree
cmp
pop
and
rcl
nop
repnz
inc
add
or
xchg
inc
lcall
xchg
int
inc
add
and
out
leave
dec
ja
sbb
pop
sub
out
in
sub
outsl
dec
fwait
je
lds
adc
xchg
out
pusha
adc
fsubrs
pop
adc
cmc
xor
scas
cmp
push
into
mov
hlt
testb
lods
lds
dec
or
jns
and
and
xor
cmc
in
int3
and
sti
popa
into
or
pushf
xchg
aaa
lret
mov
pop
pop
stc
lods
dec
jb
sbb
jp
pop
int
ss
add
xchg
or
gs
push
xorb
cmc
jo
add
sahf
sub
dec
in
push
fists
mov
mov
into
test
cld
rolb
negb
jp
or
cmp
xchg
movsl
adc
dec
enter
jns
insl
sbb
mov
fadds
sti
scas
es
lret
lods
push
scas
pop
negb
arpl
add
push
test
mov
dec
icebp
test
adc
leave
mov
adc
arpl
mov
or
mov
mov
adc
jmp
bound
call
das
cmp
lret
or
adc
stos
sbb
in
xchg
loopne
and
out
pop
lock
in
cli
mov
daa
add
mov
push
jle
pop
push
enter
scas
pushw
imul
add
add
or
test
setae
jp
jle
in
or
enter
sahf
outsb
push
imul
mov
sub
fdivs
pop
pop
sbb
ret
fwait
aad
pop
addr16
sbb
lea
addr16
icebp
and
std
aaa
add
das
test
jb
jl
mov
imul
sbb
repz
sbbb
xchg
and
roll
mov
cmp
es
add
addr16
mov
testb
inc
sbb
xor
dec
into
push
leave
inc
sti
dec
fiaddl
dec
lret
arpl
aad
outsb
pop
push
xchg
enter
fnstenv
adc
pop
sub
or
jecxz
jmp
sbb
test
cmp
mov
dec
sbb
mov
inc
jnp
cmp
fidivrl
adc
add
push
push
icebp
and
xchg
cmpsb
add
cli
in
addr16
add
imul
push
mov
push
fidivs
cltd
mov
jno
xor
push
stos
out
inc
clc
xchg
xchg
out
repnz
fwait
lahf
mov
xchg
add
mov
fisttps
setp
add
mov
dec
dec
std
jno
mov
call
and
stc
ja
push
pop
fwait
cwtl
push
add
cmp
in
stos
clc
outsb
movsb
daa
xor
pop
es
rorb
push
cmp
stc
inc
jne
lret
sbb
sahf
sub
mov
cwtl
adc
or
and
mov
je
ret
out
mov
shrl
or
adc
pop
scas
or
mov
and
mov
fxch
xchg
add
inc
lea
push
jne
in
or
mov
xchg
inc
ljmp
adc
insb
mov
jp
aaa
aam
pop
mov
popa
popa
aam
test
adc
push
pop
loop
fcmovnu
xchg
pushf
adc
xchg
testb
jg
or
push
xchg
pop
lret
push
loop
jnp
ljmp
mov
int3
adc
sahf
test
pop
std
movsl
and
mov
ret
and
or
fmull
mov
inc
jmp
jle
push
jl
pop
jb
out
je
adc
ds
movsl
or
inc
xchg
push
mov
add
inc
jnp
mov
arpl
repz
fs
mov
pusha
xchg
mov
jo
addl
jnp
cmp
mov
sub
cmc
in
jmp
addr16
adc
push
int
jne
sbb
push
scas
xlat
jge
add
pop
jecxz
sti
in
fildl
cmp
and
mov
data16
xchg
cli
scas
mov
out
cmpsb
rcrb
mov
div
mov
in
sub
in
push
ret
lret
mov
xor
and
push
addl
pop
fidivl
jp
pop
push
cwtl
xchg
xor
push
pop
out
and
bound
inc
add
mov
and
lods
sub
jecxz
mov
dec
rolb
inc
add
cltd
stc
leave
cmp
es
lods
cli
sbb
jg
push
iret
lds
push
daa
mov
mov
mov
repz
into
mov
xor
or
stos
inc
or
sub
pop
mov
dec
dec
adc
jne
add
insl
jb
incb
enter
scas
push
