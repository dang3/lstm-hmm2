xchg
not
shl
not
neg
movl
xor
lea
lea
jmp
lea
mov
neg
rcl
lea
lea
mov
mov
push
lea
lea
mov
rol
shr
xor
jmp
mov
lea
mov
not
mov
shl
adc
lea
and
mov
xor
add
mov
lea
jmp
neg
xor
push
rcl
mov
lea
jmp
rcl
rcl
shr
rcr
xor
mov
lea
adc
lea
add
xor
shr
xchg
jmp
mov
lea
neg
mov
xor
rcr
ror
jmp
mov
xchg
xchg
add
lea
add
mov
rol
mov
lea
lea
not
neg
ror
jmp
and
lea
mov
neg
adc
mov
mov
mov
xor
not
lea
jmp
not
lea
mov
mov
ret
mov
add
jmp
lea
xor
ror
mov
xor
shl
shl
mov
rcl
lea
xor
xor
mov
lea
add
jmp
neg
add
mov
not
mov
not
xor
lea
xor
xor
jmp
adc
rcr
lea
xchg
xor
adc
mov
xor
jmp
popl
rol
mov
add
and
lea
rol
xor
lea
mov
mov
xchg
decl
jne
jmp
mov
xor
xor
mov
push
mov
sub
push
push
push
lea
rol
xor
shr
xor
push
xor
xor
mov
jmp
mov
push
xor
lea
xor
push
ror
and
shl
jmp
shrl
mov
rol
lea
mov
lea
lea
shl
mov
lea
xchg
rol
xor
xor
jmp
shl
and
mov
xor
not
neg
jmp
xor
pop
lea
not
lea
mov
xor
mov
mov
jmp
mov
xor
xor
pushl
xor
mov
add
pushl
mov
lea
adc
call
adc
mov
jmp
and
and
xor
mov
mov
xor
not
mov
mov
mov
xor
jmp
mov
mov
neg
not
rcr
xor
adc
not
mov
jmp
lea
xchg
shr
shl
lea
lea
shl
mov
mov
neg
xor
lea
jmp
jmp
xor
mov
lea
not
xor
add
mov
mov
mov
xchg
mov
xor
and
xor
lea
mov
xor
mov
mov
jmp
lea
mov
mov
rcr
mov
xor
mov
xchg
mov
xor
mov
xor
xchg
jmp
jmp
mov
lea
xor
mov
lea
adc
rol
push
call
jmp
rcl
neg
not
xor
xchg
lea
mov
add
adc
mov
mov
rcr
neg
mov
rol
neg
xor
xchg
lea
xor
lea
jmp
xchg
lea
xor
shl
xor
xchg
rcl
xor
jmp
jne
push
ret
ret
dec
sub
sub
push
sub
cmp
dec
imul
sbb
jg
xchg
in
add
push
pop
andl
test
test
repnz
mov
fwait
cmp
fcmovnb
cmp
aas
or
mov
aad
jp
leave
cmpsl
clc
fisubl
or
sub
test
test
jmp
dec
rcrb
sub
cmpl
sbb
js
repnz
sub
cmpsl
subl
sub
jp
cmpsb
ss
or
adc
das
imul
inc
jge,pn
pop
mov
cmp
ds
push
movsb
and
daa
jp
stos
ss
or
test
rcl
imul
push
dec
int3
xchg
xorb
or
sub
or
loopne
lock
mov
cmc
imul
pop
loop
mov
cmc
adc
pop
jg
lcall
sub
sti
subl
outsl
adc
mov
or
jecxz
pop
inc
out
aam
lock
lods
dec
sub
jle
jecxz
out
mov
subl
lock
stos
jae
push
pop
dec
inc
loope
ret
ret
dec
sub
and
mov
dec
or
mov
wbinvd
test
adc
ret
inc
or
sbb
cmc
pop
mov
or
add
and
xchg
shlb
clc
inc
sub
test
fsubr
test
rolb
pop
push
pop
and
mov
jno
cld
mov
pop
xchg
dec
sub
test
adc
mov
dec
mov
xor
jno
sub
adc
shlb
push
test
test
or
jno
dec
or
sbb
cmc
dec
dec
and
int
xchg
mov
incl
cmp
sti
xchg
or
push
xchg
test
fs
fnstenv
fs
outsb
mov
fs
mov
mov
mov
sub
outsb
test
jecxz
xor
pop
into
mov
inc
xlat
jge
and
loopne
inc
adc
nop
mov
rol
arpl
ret
outsb
xchg
out
add
add
in
ss
sbb
or
fs
adc
lock
mov
fstpl
nop
cwtl
jmp
xlat
xchg
jns
int3
xchg
jge
mov
popf
xchg
pop
cwtl
cwtl
psllq
add
jecxz
sbb
sbb
cli
nop
lret
push
jg
cmp
jl
cmp
aas
sbb
es
push
jg
xchg
dec
jl
cmp
sbb
andb
out
push
xchg
mov
dec
imul
or
push
enter
jge
rcll
hlt
fs
mulb
mov
push
lods
push
loope
xor
or
mov
xchg
sar
mov
mov
out
jecxz
hlt
sbb
ds
xchg
or
or
movsl
sub
add
mov
fs
int3
data16
push
outsl
mov
in
test
aad
inc
or
push
scas
jecxz
xchg
es
in
mov
test
lods
jge
out
sub
add
jg
xchg
fdivrs
xchg
in
outsb
push
sbb
nop
xchg
loope
ds
xchg
mov
xchg
mov
push
icebp
inc
nop
jp
andb
and
imul
sbbb
rcll
shll
daa
ja
ret
outsb
xchg
out
adc
out
shr
pop
data16
loop,pt
aaa
insb
cmp
jg
xchg
fs
inc
fs
lds
in
out
std
cld
aas
fs
test
push
lea
xchg
in
push
xchg
lea
nop
push
sbb
xlat
cld
aas
fs
sbb
mov
sbb
jg
in
test
push
jne
in
xlat
std
cld
aas
rorb
out
cld
aas
fs
pusha
cmp
in
xlat
in
aas
fs
movsl
pop
push
loop
add
mov
sti
dec
xchg
in
out
outsb
mov
mov
sbb
jge
in
loope
out
fs
mov
ljmp
data16
ljmp
jecxz
hlt
sbb
inc
fs
in
rcrb
mov
in
sbb
shl
sbb
shl
hlt
sub
ss
cld
in
push
sbb
xor
nop
ja
mov
filds
sbb
sub
outsb
xor
hlt
cmp
push
xor
cltd
push
or
sbb
hlt
sbb
stos
ja
aad
aaa
addr16
adc
movsw
and
outsl
out
call
out
nop
xchg
cwtl
ja
xor
test
nop
mov
sti
adc
jle
sbbb
in
xchg
outsb
in
xchg
in
addr16
in
hlt
pop
lcall
insb
rorb
aam
sbb
xor
push
ficomps
sbb
out
mov
xchg
outsb
mov
in
jl
sahf
dec
je
loop
jo
data16
or
and
mov
ss
sbb
pop
or
and
cmpsl
orb
out
ret
in
hlt
cmp
mov
adc
xorl
repz
fisubs
rclb
hlt
adc
in
out
test
add
jnp
jg
scas
lea
ror
lock
sbb
xchg
aad
insb
mov
jo
xchg
in
pop
je
hlt
and
in
addr16
fimuls
mov
enter
xchg
in
jcxz
hlt
sub
loope
push
lea
sub
sub
loope
push
sbb
fmull
in
out
shr
xchg
in
fs
in
fs
nop
ja
loopne
je
loop
shrb
xchg
outsl
addr16
pop
push
xchg
jle
jecxz
xorb
jg
xchg
outsb
aas
push
fdivrp
hlt
xor
loop
fs
lods
adc
and
xchg
mov
idivb
xchg
test
fs
in
test
cmc
pop
mov
sbb
hlt
scas
out
xchg
in
push
fwait
pop
pop
mov
jno
sub
lds
pop
jle
push
out
sub
xchg
pop
push
xchg
adc
icebp
test
jecxz
mov
cwtl
push
repz
mov
leave
jge
stos
add
xchg
mov
add
lret
jb
pushf
shll
sbb
mov
jmp
scas
jnp
aad
jne
inc
cmp
xchg
cmp
mov
std
incl
sub
push
sub
mov
jo
add
pop
insb
lcall
test
mov
dec
mov
fildll
out
daa
mov
xchg
jb
mov
dec
fsubrp
xchg
imul
repz
xchg
dec
cmp
pop
in
jnp
lret
or
out
sub
cltd
pop
out
sar
arpl
mul
push
push
repnz
dec
pushf
outsl
jbe
jo
jbe
or
and
lret
fildl
dec
sbb
aad
and
push
gs
cmp
xor
xchg
imul
or
sbb
jl
push
daa
sub
ds
mov
mov
jns
inc
xor
fimull
and
mov
in
inc
adc
gs
jecxz,pn
mul
sbb
ds
cmc
jle
ljmp
push
fucomi
ja
and
ret
scas
in
popf
clc
movsl
jle
int
add
inc
xchg
nop
sahf
xchg
inc
sub
add
lods
jge
aaa
shl
push
fsubl
cwtl
push
pusha
mov
adc
xchg
push
mov
nop
jecxz
mov
jmp
sahf
dec
sub
pop
adc
fimuls
cmp
push
cwtl
imul
mov
lods
fwait
rcrl
dec
ljmp
insl
and
int
mov
and
push
mov
pusha
cwtl
jae
xchg
jecxz
xor
ja
js
nop
ja
xorl
mov
sar
sub
insl
xchg
inc
lret
into
sub
xchg
pop
sub
fidivrs
add
pop
or
sarb
vpmovsxbd
push
jmp
data16
push
cwtl
sbb
add
fs
or
jne
aam
inc
in
mov
adc
loope
xchg
xchg
push
push
es
arpl
out
nop
sub
ljmp
cs
xchg
xchg
inc
mov
popf
loop
cmp
nop
lcall
loopne
lcall
lret
in
inc
mov
sbb
sbb
and
out
shrl
jle
filds
pop
inc
dec
dec
or
push
shld
loope
add
mov
andl
sub
lcall
aaa
pop
and
cwtl
mov
cmp
shrl
mov
fs
inc
out
jle
add
shl
cmp
dec
xchg
aad
pop
mov
int3
xchg
lods
mov
inc
mov
lea
inc
jle
xor
mov
jnp
push
outsl
and
aaa
or
or
stos
pop
push
fcomps
pop
fisubs
and
test
gs
iret
cmp
mull
pop
lret
movsb
xlat
stos
and
icebp
mov
sub
pusha
add
jge
inc
shll
jno
in
mov
out
cmp
std
ficoml
xchg
xlat
mov
and
fidivrl
push
dec
js
daa
pop
insb
movsb
xor
test
cmpsb
pop
test
push
add
push
aaa
out
xchg
xchg
push
int3
leave
fidivs
pop
shlb
fistpll
jge
jmp
cmpsl
push
das
mov
movsb
xlat
or
in
hlt
xor
or
addl
or
mov
and
fxtract
sub
jmp
dec
push
rcrb
cmp
inc
in
pop
xor
cmp
imul
adc
into
pushf
hlt
mov
stos
jno
dec
aas
shrd
je
in
xor
pop
into
aaa
movhps
cltd
fs
hlt
and
push
or
lret
shrb
push
push
cmpsl
sbb
stc
in
stc
lahf
jecxz
lcall
push
outsb
mov
test
pop
std
negb
push
fwait
test
xchg
rclb
in
fildl
loope
es
jl
je
add
pop
push
rorl
mov
mov
sub
cmpsb
jp,pn
imul
sub
cmpsb
mov
imul
loope
out
lcall
insl
xchg
adc
out
mov
int
cli
add
mov
imul
dec
cld
sub
call
cmp
outsl
mov
bound
ret
lcall
push
loop
jbe
ret
ljmp
int
sbb
outsl
clc
push
dec
loopne
sbb
push
loop
pop
fistpll
cwtl
sbb
sub
repz
daa
or
cmp
outsb
add
xchg
xor
insb
dec
ret
dec
dec
cmpsb
out
call
outsb
jl
pusha
mov
xor
rorl
movd
cmp
popa
rclb
cmpsl
outsb
or
enter
fcmovbe
jae
and
je
jecxz
jle
pusha
mov
loopne
hlt
xor
leave
inc
xor
popf
ja
insb
or
les
mov
cli
in
add
hlt
insl
xchg
aas
cld
outsb
sub
jmp
stos
lods
mov
cmpsb
jae
mov
ja
cmp
out
jg
bound
jns
xchg
sti
out
xor
pop
data16
shrl
cli
repnz
hlt
out
imul
ja
mov
mov
rclb
pusha
imulb
jb
or
jmp
sub
inc
testl
sbb
jbe
adc
jae
xchg
sbb
and
movsb
idivb
lock
mov
loop
out
cmp
push
cmp
mov
push
push
add
mov
imul
pop
repnz
loope
adc
mov
fisubs
push
fs
dec
maskmovq
negl
jb
and
or
and
aaa
gs
aad
jecxz
jno
cld
testl
pop
adc
xchg
jnp
lcall
aaa
std
icebp
mov
sbbb
xchg
iret
pop
aas
mov
push
out
aaa
mov
call
aad
aaa
pop
add
fdiv
in
ret
inc
add
data16
or
inc
jmp
mov
insl
jle
sbb
movsl
icebp
subb
jl
inc
xor
jo
jg
mov
in
inc
jmp
fwait
outsb
enter
lret
mov
pop
arpl
fdivrp
fptan
les
dec
idivl
adc
pop
jp
dec
test
push
cmpsb
mov
and
rclb
ja
arpl
outsl
pusha
ja
imul
mov
push
inc
scas
dec
jo
or
mov
aas
xchg
or
sub
aad
nop
repz
fldt
out
fimull
xlat
call
out
cmp
and
jecxz
or
pop
fisubs
insb
sub
movsb
stc
inc
mov
jp
scas
std
loop
cld
inc
jl
incb
push
jle
out
fldt
mov
je
in
push
xchg
out
sub
sub
cmp
cmc
fnstcw
mov
sub
mov
ror
test
mov
fwait
