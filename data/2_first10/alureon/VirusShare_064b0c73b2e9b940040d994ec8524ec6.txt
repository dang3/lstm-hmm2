push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
mov
pop
add
sub
mov
mov
mov
mov
ror
lea
imul
inc
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
cmpl
je
incl
xor
inc
ret
pushl
call
test
jne
ret
push
push
push
call
xor
inc
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
jmp
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
mov
sub
mov
mov
mov
test
jbe
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
incl
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
push
mov
lea
push
call
mov
mov
push
mov
call
pop
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
push
mov
pop
xor
movl
lea
rep
mov
push
lea
push
call
push
push
mov
push
lea
push
push
mov
push
call
mov
lea
mov
inc
test
jne
sub
cmp
jae
dec
mov
inc
test
jne
mov
mov
movsl
movsl
movsl
push
push
push
push
call
push
pushl
mov
push
call
mov
pop
pop
pop
call
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
mov
push
push
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
push
call
mov
mov
add
lea
add
cmpl
je
mov
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
pushl
pushl
call
pop
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
push
xor
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
add
xor
add
incl
mov
push
call
mov
mov
mov
xor
mov
div
mov
mov
mov
not
add
mov
sub
xor
mov
mov
add
inc
cmpl
jb
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
mov
push
rol
push
mov
test
je
mov
jmp
push
call
mov
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
push
mov
call
pop
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
mov
ret
mov
push
mov
mov
mov
mov
add
cmpl
jne
xor
jmp
push
mov
push
mov
push
lea
mov
push
push
mov
push
push
mov
call
cmpl
jne
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
cmpl
jne
push
push
push
push
call
movzwl
push
pushl
push
push
call
pop
xor
pop
inc
pop
pop
ret
popa
subb
rorb
js
int3
dec
or
xchg
mov
shrl
adc
fiadds
push
lret
movsb
xor
mov
cmpsb
je
mov
lret
repnz
dec
sbb
popa
stc
pop
xor
adc
mov
std
jp
dec
sbb
test
push
lret
xchg
or
mov
xor
mov
test
filds
mov
and
xor
int
xlat
push
int
test
xor
mov
dec
inc
fidivs
sub
or
fdivrs
aad
mov
cmp
xor
xor
cs
xlat
inc
clc
fwait
int
mov
sub
mov
dec
fistl
cs
dec
xor
add
sub
outsl
clc
jmp
lret
mov
or
sbb
es
in
icebp
cmpsb
nop
movsb
adc
inc
sub
xor
add
push
sbb
movsl
sub
movsl
popa
add
stc
popf
shll
jno
dec
test
sub
jge
mov
sbb
fadd
cltd
stc
dec
add
dec
or
cmp
pop
push
ds
icebp
ljmp
add
dec
loope
jae
js
mov
jle
ret
pop
and
pop
sti
stos
imul
mov
push
dec
jl
in
sub
add
incl
or
fisubl
dec
jno
mov
fs
push
xor
xor
adc
jbe
mov
cmp
leave
into
mov
jle
stos
jne
in
loope
je
insl
mov
lea
mov
test
adc
aaa
sti
stos
pop
jmp
xlat
mov
xor
pop
inc
popa
call
lret
call
cld
cmp
cli
stc
dec
cltd
clc
rorb
add
int3
jmp
and
jo
dec
jns
rcrb
xorl
mov
movsl
jae
aad
mov
sbb
cli
in
xchg
cmc
pop
lock
pop
push
fcomps
std
xor
imul
adc
or
into
cltd
jmp
leave
push
aas
fnclex
outsb
mov
inc
fists
and
rolb
ret
push
subl
sti
into
sub
test
push
mov
adc
add
add
les
xchg
cmp
inc
fisubs
cmp
adcl
stos
mov
out
dec
out
call
test
sbb
repnz
out
fdivs
pop
movsl
call
xchg
mov
stos
mov
cmpb
push
je
fdivrs
mov
mov
add
push
sbb
es
mov
mov
jns
int
jnp
fcmovbe
test
add
add
sub
add
int3
sub
mov
mov
mov
mov
jmp
jbe
lds
loope
enter
cld
xchg
dec
adc
pushf
in
mov
sti
inc
into
adc
idivl
scas
mov
int
xchg
xorl
test
test
das
fdivrs
stc
adc
sub
or
jo
lds
sbb
fmuls
insl
xor
xlat
add
add
or
outsb
out
sub
xchg
jp
aad
adc
or
mov
inc
push
pop
fists
sub
int
nop
mov
cltd
push
add
inc
mov
outsb
rorb
push
iret
int3
push
aam
or
inc
pop
add
nop
push
cmp
sub
in
outsl
scas
les
mov
xchg
or
xchg
sbb
push
outsb
sub
fs
sti
jae
int
xchg
orb
add
mov
and
sub
add
cmp
mov
nop
cmc
dec
sub
mov
ret
xlat
repz
nop
stos
mov
test
aas
cmp
test
pushf
add
aas
test
test
cli
in
pop
or
js
push
mov
cwtl
or
or
sub
dec
mov
stc
mov
inc
add
add
int
push
inc
sub
data16
daa
andl
fistl
add
dec
arpl
mov
fidivrs
lods
cmp
insb
or
cmpsb
mov
xor
xchg
pusha
jecxz
mov
popf
pop
in
pop
sub
int
sbb
xchg
mov
test
mov
rolb
repnz
mulb
imul
sbb
dec
mov
sbb
outsb
sub
pushf
cmp
lcall
lea
and
lahf
out
sbb
pushf
lret
lret
mov
mov
add
push
xor
cmp
shll
into
mov
lock
scas
ljmp
jp
cmpsl
and
adc
xchg
enter
shl
addl
test
scas
cmp
pop
jecxz
out
inc
dec
jp
jecxz
mov
jb
xor
mov
fmull
int
lret
inc
mov
add
pushf
and
mov
xchg
ret
push
aad
cmc
test
clc
imul
ss
ja
into
shrl
shrb
lea
inc
pushf
push
xchg
mov
cld
push
and
dec
out
ljmp
cmp
dec
mov
and
fisttps
outsl
les
rorl
test
stos
push
xchg
out
lock
imul
mov
subl
add
add
pop
leave
es
pop
or
shr
out
xor
rcrb
and
xor
adc
movsl
mov
lahf
mov
xor
rclb
in
cwtl
xchg
push
mov
cmc
hlt
dec
adc
jbe
pushf
pop
pop
cltd
push
iret
stos
subl
mov
lock
mov
mov
repnz
sbb
and
rorb
xor
int3
adcb
mov
je
out
add
test
pop
cmp
rorl
lcall
xor
dec
push
leave
xor
or
mov
push
push
fwait
out
out
xchg
aaa
xor
fucomp
xor
outsb
popa
add
mov
popf
decb
xchg
outsb
mov
insb
nop
inc
outsl
mov
push
pop
std
jecxz
or
mov
sbb
pusha
aam
inc
cwtl
roll
or
sub
ud0
add
sub
fildl
arpl
pop
xor
dec
pop
cwtl
add
out
imul
int3
mov
rolb
iret
mov
ja
mov
out
and
pusha
loopne
sbb
pop
das
xchg
push
sub
test
jecxz
cwtl
and
add
xchg
sub
les
inc
lret
jb
push
push
and
push
push
ret
lods
stos
xchg
andb
push
jmp
out
dec
or
sti
mov
in
mov
add
stos
lea
out
outsl
out
movsb
or
and
mov
cmp
cmp
pop
fstpt
pusha
jne
movsl
sarl
mov
ret
insb
fidivs
shll
and
mov
add
or
jge
cli
xchg
jb
shlb
mov
xchg
cltd
ficoml
xchg
push
fwait
rorl
xchg
push
xchg
xchg
or
pop
dec
cli
sbb
sbb
add
inc
sbb
mov
ds
dec
lock
ret
push
shrl
xor
mov
xchg
pop
test
mov
aam
lret
pop
or
cli
xchg
jo
push
clc
mov
cmp
add
hlt
pushl
call
sbb
adc
push
sbb
pop
iret
movsl
dec
dec
loopne
jmp
daa
xor
sti
pop
push
xorb
add
mov
add
jnp
rcr
lods
stos
test
movups
mov
lret
cmp
in
cmp
push
sub
daa
add
mull
push
fdivrp
les
fimuls
or
aas
andl
cs
cmp
sbb
sti
mov
xor
stos
fldenv
or
jo
jecxz
cli
mov
mov
add
jns
dec
jae
pop
mov
inc
cmpsb
mov
inc
test
insl
cmp
sarb
inc
add
add
xor
ljmp
mov
orl
ljmp
test
out
pop
dec
fwait
test
push
es
push
negb
cmp
fs
mov
add
pop
jecxz
sub
push
xchg
ds
enter
or
out
iretw
add
sahf
inc
push
xchg
mov
adc
in
inc
call
jecxz
test
mov
and
cmp
out
test
in
in
xchg
sbb
idivb
dec
ret
push
scas
pop
outsl
xor
inc
mov
dec
test
sti
mov
mov
shlb
cmp
jge
dec
bt
xlat
adcb
mov
xor
adc
cmpl
in
or
aas
add
add
mov
das
fwait
shrb
movsb
add
push
and
mov
xor
pop
fs
sub
in
lret
dec
inc
or
jo
aam
xor
popa
and
add
in
test
inc
shrb
add
and
mov
lods
sti
jne
push
mov
mov
iret
dec
arpl
mov
xchg
adc
daa
mov
ljmp
or
sbbl
mov
sbb
add
aaa
add
dec
jns
pop
loope
iret
dec
int
mov
push
push
jge
repnz
xor
or
adc
sahf
in
mov
cmp
mov
xchg
js
xchg
lahf
sbb
mov
pop
cmc
int
add
push
sub
or
outsl
mov
fbstp
push
ljmp
pop
incl
pop
cs
dec
cmc
pop
hlt
add
orb
jne
add
jmp
lcall
add
mov
loope
jbe
adc
int
mov
sub
ret
pop
cli
lret
std
insb
movsl
cmpsb
pop
test
aad
inc
test
mov
ljmp
movsl
aas
cmp
imul
xchg
lods
sar
aam
mov
call
add
fldcw
cmp
inc
or
movb
ret
cmc
push
fstps
jmp
rcrb
mov
je
push
popa
and
pop
push
push
sbb
cmpsl
mov
sub
xchg
xor
test
xor
inc
outsb
adc
in
mov
rcrl
rcrl
push
dec
fsubrs
mov
sub
mov
lcall
xchg
pop
mov
pop
cli
addb
icebp
negb
icebp
push
mov
dec
push
sti
add
jae
jmp
fidivs
sbb
daa
adcb
or
pop
movsl
movsl
sbb
pop
sbb
js
lret
jno
mov
les
push
std
mov
cmp
ss
adc
fimuls
cmp
scas
mov
xor
test
adc
dec
mov
xor
iret
popaw
out
movl
popa
push
cmp
ss
fsubrp
pusha
push
or
pop
stc
add
les
push
icebp
jae
mov
pop
add
ss
arpl
cmc
ret
mov
iret
mov
push
outsb
push
test
mov
inc
stos
xchg
into
pop
lret
je
mov
dec
jp
ret
rcrl
jle
clc
mov
or
jb
xchg
dec
add
push
mov
or
test
cli
outsl
push
jecxz
jp
fwait
int
aad
lods
cmp
test
out
add
and
xor
push
mov
fisubrs
xchg
addr16
hlt
push
xchg
xchg
mov
push
mov
mov
dec
leave
out
mov
jno
fisubrs
in
pop
and
jno
cmp
push
sarb
inc
fcoms
sbb
adc
and
cmp
fdiv
daa
lds
mov
or
sub
fnstcw
dec
ja
xchg
and
add
pusha
out
testl
test
mov
rorb
add
fsubrp
mov
lods
mov
jle
mov
cltd
jp
mov
jecxz
int
lahf
pop
aad
rcrl
filds
out
repnz
sbb
mov
mov
pop
in
cmpb
and
iret
add
stos
lods
adc
in
jbe
imul
negl
push
ret
inc
inc
lods
fwait
mov
js
mov
jae
sti
xchg
mov
shll
iret
cmp
ss
or
punpckhdq
add
insl
push
jle
int
add
aas
outsl
test
jbe
incl
lea
mov
imul
popf
pop
loopne
test
shlb
leave
movsl
shll
adc
scas
rorl
lahf
roll
xorl
aas
in
sbb
xchg
subl
lcall
movsb
test
stos
xchg
pop
adc
sub
xchg
sub
xor
shrb
xor
imul
dec
add
jp
xorb
lcall
mov
add
pop
sahf
pop
jmp
push
fsubr
out
inc
pxor
pop
dec
cmpsl
cli
arpl
mov
add
push
jmp
dec
stc
shll
sub
push
clc
fsubrs
jo
xchg
std
ja
add
test
faddl
inc
pop
xor
dec
sub
sub
mov
push
cmc
aas
ret
jb
jne
add
add
loope
pop
cmpsl
jge
jns
pop
pop
data16
mov
orb
sbb
or
mov
jmp
add
jae
and
andb
mov
ror
pop
cmp
sbb
add
add
out
pop
es
nop
or
fmul
inc
jge
xchg
or
cmp
scas
xchg
push
outsl
xor
gs
leave
ds
sbb
lods
pop
sub
test
xchg
pop
cmp
popa
cmpsb
inc
js
sbb
mov
jno
pop
push
push
repnz
sub
sahf
push
daa
out
xchg
test
scas
nop
addr16
pop
cltd
add
sahf
arpl
enter
pop
icebp
fimuls
and
sbb
cmpsl
jmp
mov
je
push
pop
lods
inc
cwtl
adc
std
xchg
xchg
push
jmp
mov
push
push
xchg
jmp
pop
push
into
or
and
mov
ljmp
dec
xor
mov
add
jae
jne
inc
loope
enter
hlt
add
lea
out
lock
loop
lcall
sub
sbb
cmp
pusha
mov
icebp
imul
jmp
ja
nop
lods
xor
das
imul
xor
movsl
popf
add
push
adc
mov
cli
add
out
pop
addl
outsl
cltd
lret
call
mov
cld
scas
mov
test
ja
sti
jno,pn
fimuls
cmpsb
dec
in
cwtl
jge
stos
dec
frstor
adc
mov
mov
push
cmp
xchg
xchg
and
jecxz
jne,pn
or
xchg
add
push
ljmp
jne
cmpsb
leave
filds
xchg
sub
xor
pop
adc
das
mov
sarl
add
add
jb,pn
sbb
mov
insb
mov
ficomps
or
stos
push
in
in
xlat
push
mov
mov
mov
testb
rcl
clc
jae
arpl
pop
cwtl
xchg
and
jmp
sub
cld
cmpsl
jae
popf
das
sub
mov
pop
mov
push
adc
data16
ds
xor
leave
mov
mov
push
inc
xor
jp
add
add
push
push
fs
jnp
jmp
mov
sub
jg
xchg
cmp
insl
mov
icebp
leave
test
stos
xchg
pop
and
sub
addb
mov
mov
pop
pusha
std
lahf
call
xchg
mov
pop
scas
jne
jg
xlat
pop
and
out
shll
sar
mov
xor
push
add
xchg
js
mov
daa
dec
int3
int
push
testl
iret
sub
bound
xchg
jnp
in
mov
mov
add
dec
jge
mov
mov
sti
icebp
mov
inc
in
push
notb
pop
mov
das
jne
nop
xor
test
sub
mov
test
pop
mov
cmpsl
iret
jecxz
ret
jno
out
je
lcall
lods
out
cli
xor
or
ret
jne
mov
std
mov
and
xchg
jb
scas
scas
mov
repnz
jge
add
cmc
sbb
cmp
sbb
subb
pop
mov
mov
sub
jg
iret
or
repz
sbb
out
loope
jecxz
dec
push
adc
nop
flds
and
jae
popa
inc
mov
xor
mov
push
inc
mov
scas
jmp
sbb
test
cmp
cmp
in
cmpb
je
inc
xchg
mov
add
mov
mov
and
mov
dec
xor
movsl
stc
xor
jae
sbb
jb
daa
mov
cmc
scas
cmp
popl
sub
pop
sbb
ret
jg
dec
push
sbb
pop
push
mov
daa
mov
mov
jae
jae
aas
push
xlat
or
jmp
sahf
je
jp
fisttps
sahf
fcomp
fadds
or
lds
mov
repz
add
pusha
faddl
bound
fdivr
xor
dec
adc
sbb
and
mov
mov
or
inc
dec
jecxz
imul
mov
int
jno
mov
mov
sbb
sti
loop
cmc
jb
arpl
jno
cs
or
imul
push
fsubl
jp
sbb
add
enter
insb
or
add
test
push
mov
inc
fsubs
jnp
sbb
sbb
mov
ljmp
or
adc
sub
push
and
rcrb
daa
mov
rcrl
loope
andb
addr16
stc
lods
push
test
push
or
sbb
out
jb
add
pop
jl
cmp
cmp
and
sub
fisttpl
icebp
or
aaa
insl
gs
xchg
sbb
xlat
sbb
push
popf
pop
push
push
mov
sbb
inc
pushf
mov
repnz
or
shlb
fld
int
mov
sub
xchg
jbe
jge
xor
in
inc
jno
dec
pushf
out
cltd
xor
lcall
pop
fstpl
xchg
adc
rcll
push
sub
lds
add
add
subb
iret
addb
inc
jp
cmc
mov
adc
sub
movsl
movsl
jle
sub
dec
inc
add
mov
mov
aas
add
test
cwtl
inc
add
das
arpl
std
xchg
push
loope
call
xor
inc
cmp
inc
addr16
mov
dec
lret
inc
mov
pop
sbb
cli
sub
std
ja
mov
push
mov
stos
iret
nop
repnz
add
mov
repz
jno
pop
loope
sti
sbb
ja
push
mov
add
mov
mov
fsubrs
push
out
ret
push
fadds
nop
pop
inc
pop
ja
push
loope
mov
lahf
aad
mov
fstpt
lret
mov
mov
dec
pop
add
jnp
mov
leave
inc
out
sub
mov
jecxz
cs
out
adc
jb
mov
test
out
mov
dec
cmpsl
or
pop
add
cmp
addb
xchg
cmp
pop
daa
sub
mov
push
cmpl
test
xchg
hlt
loopne
adc
pop
pop
into
mov
or
sti
shl
or
pop
and
fdivr
fadd
sbb
mov
repnz
dec
imul
adc
or
lods
outsb
ret
out
mov
clc
adc
add
add
pop
loop
jns
ror
add
call
mov
fdivrs
xor
jno
mov
cli
aad
sub
pushf
test
adc
xchg
jb
and
pop
je
adc
mov
js
sub
add
pcmpgtb
ja
out
adc
mov
mov
push
pop
pushf
adc
mov
fstpt
cmp
push
add
add
int3
mov
stc
aas
jbe
shll
pop
pop
xor
jg
repz
mov
mov
mov
clc
push
push
push
fistl
jg
dec
popf
shl
sahf
lcall
aad
in
sub
mov
shrl
mov
and
es
pop
mov
fadds
jle
repnz
or
jo
pop
cltd
xchg
add
add
repnz
outsl
sbb
jp
stos
xor
xchg
popf
sub
sub
icebp
repz
rolb
iret
les
cwtl
sub
push
inc
icebp
rcrb
and
shll
jmp
js
stc
mov
xor
mov
pop
inc
loop
dec
mov
repnz
test
sub
insb
lea
xchg
insb
push
mov
out
sbb
loop
cmp
push
scas
xchg
shll
pop
pop
sar
add
add
adc
fistps
mov
push
xchg
ss
adc
cs
mov
ljmp
sub
push
out
mov
mov
cli
pop
pop
xchg
mov
cmp
or
mov
scas
rcrb
outsb
popl
or
xor
or
lods
or
cmp
xchg
inc
inc
dec
test
pop
cld
clc
cmpsb
lock
outsb
pop
sbbb
sahf
sbb
push
mov
inc
jne
clc
ds
add
sbb
fs
cmp
xor
sub
cld
and
inc
ja
sub
sub
ja
xchg
out
test
adcl
out
out
adc
push
xor
mov
shrb
lret
add
mov
pop
loopne
xchg
incb
popf
push
sub
xchg
adc
int
jnp
mov
jo
cmp
rcr
or
add
movsl
lock
push
stc
filds
clc
arpl
xlat
in
repz
mov
aam
fldenv
add
sub
jl
xchg
cmp
cmp
in
mov
pop
jnp
paddsw
xor
hlt
adc
arpl
xchg
cmc
leave
stos
das
pop
imul
jne
lods
sbb
test
xor
dec
or
cmpl
dec
fnstenv
imul
sub
loope
jle
mov
ret
mov
out
cs
mov
das
xor
sarl
adc
lahf
mov
imul
inc
cld
mov
jbe
mov
push
mov
sbb
subl
xchg
cmp
in
mov
mov
inc
stos
pop
jnp
insb
push
xchg
ret
sbbl
dec
in
subl
add
popa
jns
dec
add
lret
pop
dec
ds
xchg
lcall
idiv
mov
add
pop
pop
rorb
loop
les
leave
daa
mov
in
stos
loopne
sbb
fmull
push
sar
loope
lds
jp
cmp
or
push
outsb
in
ja
js
add
xor
jg
mov
add
stos
fwait
stc
cltd
mov
stos
inc
pop
pop
xchg
jb
fisttps
repnz
jp
and
adc
adc
ret
sbb
fdivp
xchg
lea
loopne
cmp
push
pop
sub
das
mov
push
sub
jmp
into
loopne
mov
cs
pop
push
cmp
mov
xor
pop
mov
adc
popa
inc
mov
divl
gs
lea
arpl
sub
mov
in
movsb
or
mov
cmpsl
push
pop
das
negl
sub
inc
int
rcrl
jne
xchg
jae
push
xchg
lret
cmpl
pop
push
pop
add
pop
in
roll
dec
push
daa
mov
jmp
iret
sbb
pop
push
push
inc
sbb
cmp
cltd
cmpsb
cmc
cmpsl
loope
or
fbld
and
out
or
jecxz
xrelease
inc
xor
cwtl
repnz
pop
mov
mov
mov
xchg
or
adc
xchg
and
xor
add
mov
sbb
sbb
repnz
jnp
or
lret
cmp
mov
add
pop
jp
push
stos
dec
jo
imul
daa
push
js
mov
mov
sub
inc
sub
arpl
mov
mov
dec
imul
or
mov
add
icebp
pop
inc
popa
pop
loope
xchg
sbb
dec
jne
call
cltd
add
cwtl
jmp
adc
jae
sub
pushf
push
jecxz
pop
sub
test
leave
fs
fcmovu
mov
mov
cmc
fildl
jmp
mov
cmp
mov
pop
jge
xchg
aad
inc
leave
sub
xchg
sbb
push
icebp
sbb
xchg
xchg
cmc
jge
xchg
mov
xor
rcrl
add
loope
insb
add
xchg
or
add
mov
test
cwtl
mov
mov
or
jae
ror
jae
in
push
and
icebp
mov
and
dec
and
movsl
ret
jnp
loopne
cmp
es
rcll
inc
sub
int3
fldt
add
enter
sbb
iret
mov
inc
push
add
pop
sbb
or
mov
icebp
xchg
leave
aaa
jecxz
push
sub
push
cmp
pop
pop
movsl
mov
dec
jae
jmp
add
add
adc
push
xchg
dec
push
adc
cmp
and
sbb
fwait
add
rorb
sbb
pop
ja
jge
or
cmp
enter
xchg
jl
sbb
jmp
lea
mov
in
cli
sub
out
pop
sbb
mov
adc
mulb
das
xor
cmp
and
or
fstpt
int3
xor
addr16
insl
mov
jp
sbb
add
xchg
cltd
out
push
rorl
test
push
inc
push
test
xor
xchg
xor
mov
xor
cli
dec
arpl
hlt
inc
ljmp
dec
repnz
inc
and
push
movsl
stos
sbb
cmp
xchg
dec
scas
outsl
adc
add
cmp
je
adc
les
and
outsb
jmp
xchg
in
out
rorb
jmp
add
call
clc
mov
aad
mov
jp
xchg
sub
mov
pop
loopne
xor
daa
orl
cmp
icebp
xor
mov
mov
int3
and
sub
lds
sti
mov
popa
inc
das
cmp
out
ja
addr16
xchg
xchg
movups
mov
popf
ljmp
cli
sarb
and
std
divl
ja
stos
push
mov
sub
mov
push
xor
in
pop
rol
inc
rolb
add
repz
pop
inc
fsubrs
fwait
inc
jecxz
xchg
dec
dec
xor
push
jmp
popa
mov
sub
mov
mov
inc
mov
sub
es
add
mov
jg
movlps
cmp
daa
and
add
cmpsb
add
xlat
mov
insb
pop
pushf
adc
popa
sbb
push
cmc
jbe
adc
mov
fsubr
inc
inc
add
popa
notb
mov
and
imul
mov
cmpsl
and
jo
dec
je
ja
loop
les
inc
clc
adc
inc
pop
aam
repz
xchg
jb
mov
mov
xor
loopnew
mov
push
mov
mov
sbb
mov
pop
xchg
out
xor
pop
fcomi
test
mov
loop
dec
aad
jmp
pop
fidivs
add
xor
add
add
insb
sahf
jo
hlt
iret
enter
cwtl
pop
stos
jmp
and
pop
nop
push
addr16
xor
dec
bound
out
ret
jge
add
xchg
ljmp
gs
fdivs
iret
test
xor
mov
js
dec
stos
jp
and
repnz
sbb
mov
cs
mov
cmp
rorb
mov
and
lea
add
xor
leave
adc
pop
test
mov
ja
push
adc
jp
inc
repnz
or
dec
pop
scas
mov
mov
inc
adc
or
or
sbb
cmpsb
std
out
or
lahf
inc
adc
arpl
ds
movsl
in
jmp
bswap
cmp
mov
loopne
shll
mov
mov
adc
add
adc
cmp
push
fwait
cmp
mov
mov
and
cli
push
pop
pop
pop
into
andl
loop
adc
enter
mov
loopne
loope
dec
mov
inc
rolb
shrl
mov
sbb
sbb
mov
popa
std
cmp
mov
xor
push
or
mov
jge
sbb
dec
loopne
lea
mov
cmp
dec
inc
sbb
test
