push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
sub
sub
sub
cmp
sub
roll
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
add
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
inc
pop
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
push
add
pop
add
cmp
add
cmp
jb
pop
pop
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
dec
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
mov
or
mov
movzbl
inc
mov
mov
imul
add
sub
mov
mov
decl
jne
lea
pop
ret
push
mov
sub
sub
sub
mov
add
mov
xor
mov
cmp
je
add
add
test
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
inc
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
push
push
xor
mov
push
mov
call
mov
push
push
mov
call
push
call
mov
xor
inc
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
jne
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
pop
ret
push
mov
sub
cmp
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
push
add
pop
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
call
mov
jmp
mov
xor
cmp
je
push
add
pop
inc
cmpb
jne
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
sub
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
test
add
push
lea
push
mov
call
sub
add
add
mov
mov
mov
mov
push
popl
sub
sub
lods
xor
stos
sub
add
sub
sub
roll
sub
lea
test
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
sub
decl
mov
jne
addl
add
addl
pop
pop
leave
ret
push
mov
sub
sub
push
push
push
mov
xor
mov
cmp
je
mov
jmp
push
mov
call
mov
push
mov
mov
call
push
push
push
push
mov
call
mov
push
lea
push
xor
inc
push
pushl
mov
call
push
mov
call
push
mov
call
mov
mov
call
cmp
jne
cmp
je
cmp
jne
push
push
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
pushw
add
pop
mov
mov
mov
add
xor
xor
cmp
jae
mov
mov
mov
addl
subl
push
pop
rep
mov
add
add
sub
mov
movzwl
inc
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
or
add
js
add
add
add
jno
fisubs
jbe
in
lds
pop
push
rorl
ret
dec
stos
add
pop
sarl
js
shrl
lods
jbe
adc
mov
insl
movsb
mov
mov
call
inc
push
jecxz
xor
test
inc
dec
pop
movsb
and
xor
iret
mov
lret
mov
sub
out
mov
movsb
popl
jae
fidivrs
outsl
xor
test
call
mov
lea
dec
cmc
add
lock
dec
mov
jne
lret
mov
jmp
jns
jae
cmpsb
or
cmpb
inc
cltd
jns
or
jns
jle
lods
inc
jg
addr16
sbb
call
sbb
jo
add
insl
popa
mov
pop
lahf
push
or
insb
repz
jl
leave
mov
hlt
test
jmp
cmc
clc
lock
xchg
push
cli
pop
sbb
ljmp
lret
cvtps2pd
xchg
pop
pop
inc
cmp
jb
mov
push
and
inc
push
or
mov
and
divl
dec
inc
ljmp
aad
adc
push
sub
cmc
jmp
bound
cli
and
sbb
push
sbb
into
cmp
ss
neg
xchg
cmp
or
scas
xor
and
es
inc
lods
mov
push
jg
rorb
mov
test
inc
test
mov
xchg
fstl
aad
xor
mov
adc
xchg
aas
jbe
ret
sti
or
sbb
mov
mull
or
je
fstps
mov
xor
mov
sub
pop
inc
jl
push
inc
mov
or
mov
fwait
jg
adc
and
jg
imul
arpl
dec
inc
leave
callw
dec
mov
xchg
aaa
data16
imul
nop
dec
loope
iret
sbb
loope
sbb
or
incl
jle
cs
jo
push
push
xchg
cli
out
dec
fdivrs
jno
and
sarb
test
int
push
cwtl
add
and
aad
mov
lods
enter
into
in
ret
fbld
xchg
cli
cmc
mov
pop
imul
mov
add
orb
stc
pop
int3
and
mov
dec
mov
xchg
fdivl
fidivrl
dec
add
inc
or
inc
jno
cmc
fs
jp
mov
adc
cmpsb
jmp
mov
jge
jmp
les
iret
sbb
imul
call
mov
out
add
cmp
pop
push
fcoml
mov
rcr
xchg
movsl
cmc
lock
loop
shr
sbb
cltd
xor
out
out
push
call
or
jno
jg
lcall
mov
push
out
and
stos
jne
fistpl
cli
clc
es
mov
push
cs
imul
gs
loopne
in
faddl
push
inc
ret
mov
cli
adc
imul
bound
add
movaps
jmp
push
pop
pusha
lea
andb
inc
add
js
stos
loop
js
arpl
jno
pop
rolb
out
xchg
gs
outsl
mov
mov
repz
mov
int3
fistps
cmp
jecxz
push
aad
popa
clc
adc
push
out
lret
push
loope
mov
ds
arpl
repz
mov
mov
mov
or
sbb
repnz
mov
js
test
movsl
sub
repz
mov
mov
mov
imul
adc
aaa
xchg
ss
jae
fistl
cmpsb
in
jmp
sbb
clc
int
xchg
xor
movl
pop
out
mov
and
pop
and
jnp
push
ret
and
push
cmpsl
fadd
into
or
clc
idivl
das
jo
idivb
lahf
cmp
in
push
pop
mov
sub
adc
mov
call
das
xor
mov
mov
mov
mov
xor
cmp
and
push
sub
sarb
lcall
lods
add
gs
lds
mov
jecxz
out
adc
movsb
jmp
xor
add
jecxz
sti
xchg
push
cmp
mov
je
es
push
out
movsl
iret
adc
push
fcomps
dec
lods
jmp
sub
repnz
push
xor
sbb
mov
dec
cli
pop
negl
push
mov
stos
fistps
pop
into
mov
fwait
ja
pop
pop
mov
jns
imul
lods
pushf
push
add
sbb
adc
xchg
jge
mov
dec
and
adc
gs
stc
test
cmpsb
dec
mov
es
mov
std
add
xchg
stos
jecxz
jmp
loope
popf
xchg
jle
adc
test
xchg
xchg
xchg
mov
xchg
ret
clc
adc
lret
xchg
mov
xchg
ljmp
rol
and
adc
jecxz
repz
or
pop
sbb
dec
aaa
sub
mov
lods
cmp
scas
jno
cmp
add
loope
xor
call
loop
out
dec
lcall
cmp
aam
jne
dec
ds
pop
or
rcl
ds
push
mov
mov
and
stos
jne
add
out
test
cmp
int3
insb
mov
lret
mov
in
mov
cmpsl
sbb
pusha
inc
sub
cld
pop
jae
mov
cmp
ja
xor
movsb
sub
jmp
mov
xor
xor
sar
push
out
cmp
cli
sahf
or
sbb
adc
ljmp
sbbl
outsl
xor
xchg
je
sbb
aam
call
push
test
mov
xchg
jb
mov
xchg
pop
nop
out
mov
pushl
and
and
push
push
popa
sarl
aaa
scas
jae
push
adc
lods
pop
inc
arpl
push
cmp
sbb
mov
cmp
shrl
iret
add
or
call
out
fstl
pop
clc
hlt
mov
mov
xlat
jmp
jno
cmpsb
jnp
js
daa
cmpsl
mov
cmp
insl
aam
sub
jp
and
int
out
xchg
shrl
movsl
push
dec
mov
sbb
mov
push
iret
aaa
pop
xor
adc
mov
and
inc
insl
xchg
xlat
dec
cmp
in
ss
and
mov
cwtl
movsb
or
and
rorl
lods
xor
push
mov
mov
loop
loopne
ja
mov
push
add
dec
xorl
mov
lcall
mov
ret
mov
mov
out
jp
out
stc
xlat
mov
dec
mov
cmpsb
push
jbe
mov
loop
test
loopne
mov
in
cwtl
add
pop
ljmp
adc
adc
mov
test
jmp
aam
inc
push
jne
push
sub
shrl
sbb
ljmp
mov
jo
f2xm1
ds
test
fstps
insb
int3
repnz
lahf
add
sbb
ja
mov
stos
repnz
mov
adc
out
loop
sub
call
lock
xor
lea
nop
cmc
leave
sbb
mov
sub
mov
inc
mov
push
rcrb
mov
jge
out
movsb
jae
cwtl
mov
cmc
mov
stc
pop
push
sbb
push
dec
mov
repnz
add
push
popf
and
jp
lds
mov
lock
je
pusha
test
mov
fcomps
stc
fbld
ja
data16
xchg
pushf
sub
sbb
cmc
inc
pop
dec
enter
push
ret
ss
jb
insl
push
push
jecxz
jl
xor
sbbb
repz
outsl
sub
cmp
and
popa
and
stos
xchg
loope
pop
inc
scas
bound
sahf
jle
adc
clc
jp
scas
and
push
jge
pop
aad
or
outsb
mov
xchg
ds
pop
adc
icebp
jmp
mov
mov
lea
push
sbb
pop
sub
mov
jbe
mov
adc
aaa
aas
adc
stos
add
test
push
test
pop
add
stc
pop
and
pushl
rcl
and
sbb
sbb
sbb
xchg
ss
inc
out
dec
ficoml
jno
cmp
pop
ret
cs
into
push
mov
ljmp
jne
ds
aaa
mov
decb
dec
loopne
adc
fildl
and
sbb
and
push
addr16
mov
popf
push
and
cmp
add
movsb
cmc
pop
push
mov
jmp
jbe
gs
cmp
ret
imul
lret
mov
enter
sub
movsl
jle
sub
mov
test
sarb
push
mov
mov
shll
add
dec
xchg
mov
xchg
rcrl
and
cmp
pusha
mov
pop
mov
pushf
add
mov
aas
fldcw
push
dec
pop
cld
mov
xchg
push
or
inc
out
cmp
xor
inc
or
sub
cmpsl
jne
xchg
xchg
cmp
mov
xchg
mov
pop
test
xor
jno
cli
inc
mov
aaa
addr16
xchg
pop
inc
lock
sbbl
pop
cmp
pop
pop
pop
mov
sbb
xchg
push
data16
pop
jbe
push
mov
or
mov
push
add
out
xchg
mov
pop
pop
pop
stos
lret
jge
mov
sbb
jo
pop
aaa
dec
add
jg
pop
mov
insb
jge
jmp
scas
std
mov
xchg
pop
sub
inc
mov
cld
fidivrs
mov
pop
lcall
test
mov
sub
imul
imul
sub
jo
dec
mov
nop
jg
in
addl
pop
mov
subb
sub
mov
sbb
stos
push
cmpsb
popf
xchg
or
inc
dec
repz
cmp
out
scas
cmc
sbb
out
fstpl
xchg
pop
sbb
movsb
mov
sub
sub
daa
fsubl
lods
pop
lcall
mov
inc
jno
sub
xor
adc
xchg
or
xchg
rol
add
aaa
sti
jle
lahf
push
sub
ljmp
and
hlt
fsts
or
sub
or
sbb
mov
mov
sahf
inc
sarb
cmpsl
jmp
xchg
daa
jne
jg
adc
pop
leave
test
or
cmp
mov
mov
lods
jle
fmull
cld
ljmp
int
mov
jnp
jg
sbb
and
jnp
daa
aaa
xchg
icebp
aad
xchg
repnz
jmp
add
jp
aad
sub
xchg
roll
mov
aad
xchg
xor
xchg
mov
pop
cmp
add
leave
popa
decb
add
cmp
jle
outsb
and
xor
fcom
inc
xor
das
dec
addl
lods
jae
or
push
inc
int3
testl
ret
adc
les
mov
imul
call
movsl
aaa
or
jbe
scas
mov
test
insb
push
fcmove
pop
mov
sbb
lahf
cmpsl
or
dec
das
outsl
filds
xorl
push
mov
ret
or
pop
arpl
je
adc
jg
pop
addl
mov
sub
or
jg
dec
lret
mov
fwait
pop
mov
pusha
sub
jno
lea
popf
mov
push
cmpsl
add
adc
xchg
cmp
push
fwait
jmp
mov
inc
xchg
xor
dec
push
jp
xor
pop
rcrb
cmp
xor
push
daa
shrl
mov
mov
sbb
adc
lea
add
inc
fisubrl
je
mov
xchg
shlb
repnz
fsubrs
ljmp
inc
das
mov
cwtl
jbe
cwtl
addr16
movsl
movsb
inc
xor
into
insl
lahf
test
popf
mov
pop
cmp
cmpl
repz
pop
xor
outsb
cmp
repz
pop
sub
aam
pop
jge
mov
sbb
cmp
leave
ss
xchg
test
iret
cltd
pop
clc
movsl
cmp
das
hlt
sbbb
cmp
sbb
inc
ss
and
out
push
sub
loop
in
std
jbe
cmpb
loope
das
or
js
aam
divl
add
inc
xchg
or
pop
xchg
dec
xor
sub
addl
xchg
fsubrs
fistpl
test
out
int3
orl
xchg
int3
inc
jae
sbb
inc
cmp
out
push
xchg
mov
stos
inc
out
mov
mov
hlt
cmpsl
rcll
push
rclb
in
out
nop
adc
xor
dec
bound
xor
lods
and
ret
les
jl
sbb
jbe
mov
imul
jb
mov
les
sub
cli
mov
sbb
iret
aam
or
dec
add
and
or
push
mov
mov
xchg
into
pushf
in
inc
xor
fnstcw
xor
insl
adc
lahf
add
aam
stc
jl
and
jbe
testl
insb
out
icebp
adc
xlat
mov
or
xchg
inc
xor
jne
lods
popf
dec
pop
insl
clc
hlt
jnp
pusha
and
xchg
out
cmp
clc
cmpsb
in
sub
lahf
and
dec
pop
stc
je
aad
xchg
push
stos
jno
popa
sbb
jle
push
pusha
inc
js
push
pop
decb
jge
inc
pop
in
scas
pop
push
and
push
jle
inc
mov
add
stos
push
mov
jne
dec
fldenv
add
pushf
sub
inc
mov
stc
clc
add
xchg
mov
or
push
stc
stos
ret
push
movsb
mov
ret
enter
xor
in
fs
jo
leave
and
sbb
mulb
fisttps
add
or
dec
mov
mov
add
repz
js
sbb
mov
adc
ja
jg
pop
or
push
dec
push
cwtl
fisubs
popa
sub
jle
ljmp
sbb
and
rcll
insb
push
in
inc
push
mov
and
mov
and
add
insb
dec
iret
cs
into
aam
sbb
cld
les
push
xor
mov
add
cs
jno
lret
aaa
rorb
inc
ds
rcl
xor
mov
cmc
lock
mov
add
repz
loop
fcompl
jns,pt
lods
mov
out
xchg
sbb
sbb
sbb
adc
sbb
mov
fs
fldt
fdivr
cmp
xor
or
mov
repz
push
hlt
repnz
xor
sub
cmp
in
mov
adcl
jg
movhps
xor
add
xchg
leave
ss
enter
adc
and
fbstp
fdiv
mov
or
adc
push
pop
push
jg
inc
inc
cmp
mov
cmp
pusha
movsb
mov
fsubl
jmp
das
lahf
into
call
push
sbb
outsl
movaps
sub
out
xchg
sub
push
add
out
fistl
push
mov
cmpsb
mov
stos
push
jb
mov
cmp
sbb
jno
dec
sub
test
imul
iret
dec
dec
sub
test
sbb
xchg
sti
aam
iret
add
popf
adc
dec
mov
aam
push
test
xchg
dec
pushf
jmp
sbb
dec
mov
call
inc
add
shl
or
fmull
or
mov
jae
jg
jbe
shll
jmp
or
mov
decb
bound
add
stos
rolb
inc
cmp
mov
orl
mov
pusha
daa
aas
cltd
push
lret
jecxz
pusha
in
mov
in
sbb
dec
mov
sub
out
mov
repz
les
jbe
jp
push
dec
mov
dec
test
sti
lsl
shl
vldmxcsr
and
mov
popa
jg
mov
in
cmpsb
xor
adc
lods
adc
mov
pop
repnz
loopne
mov
inc
xrelease
xchg
fwait
or
cmp
cwtl
loop
sub
jae
push
in
jae
into
xor
iret
add
repz
mov
dec
hlt
negl
repz
inc
sahf
sbb
fimull
jecxz
loopne
gs
mov
out
ret
les
mulb
call
loope
jmp
mov
jmp
lea
xor
aam
mov
fldenv
icebp
nop
cmp
enter
mov
jmp
sub
pop
pusha
in
push
outsl
adc
in
in
push
aaa
daa
xor
mov
fistl
sub
mov
cmp
addr16
clc
pop
sbb
and
mov
dec
mov
lods
pop
sahf
add
insb
jb
repnz
rcll
xchg
push
dec
inc
clc
jle
cmp
sub
dec
mov
sbb
jo
lcall
push
jp
out
out
pop
aad
enter
repnz
lcall
neg
adc
pop
inc
pop
xchg
mov
test
test
or
lcall
loope
xor
sbb
cmp
out
or
xor
mov
mulb
or
in
sub
inc
add
jl
xchg
movsl
xchg
inc
lock
and
jno
inc
dec
push
ja,pn
movsl
pop
mov
lds
mov
push
add
jle
cmp
jbe
fisttpl
mov
cmpl
ss
xor
pop
pusha
jnp
xor
imulb
in
das
js
ret
push
sahf
cmp
add
arpl
push
mov
dec
cmc
mov
jns
data16
lret
jo
and
or
push
mov
das
clc
jno
ss
pop
add
sti
mov
push
add
adc
pop
fisubrl
dec
jno
or
pop
cld
adc
xchg
cwtl
cmc
rcrb
mov
mov
mov
enter
js
fistps
sub
mov
popf
jmp
gs
mov
in
xchg
rolb
jb
push
ss
inc
sub
xchg
ret
add
sbb
jg
push
pushf
push
scas
cmpsl
mov
xor
mov
cmpsl
mov
jl
cli
or
fwait
pusha
sub
jbe
dec
mov
aad
pop
mov
test
mov
aas
pop
xor
movsl
setle
adc
je
cmp
cmp
es
pop
jo
lock
lret
inc
push
cmp
shll
mov
cmp
pop
scas
add
inc
push
cmpsl
or
xor
idivl
call
push
xchg
sub
cwtl
idiv
cmpsb
sti
sbb
cs
negb
shlb
insb
negl
in
stos
push
hlt
and
add
add
imul
inc
add
cmp
jl
jp
mov
dec
shrb
std
sti
inc
neg
int
add
ret
rorl
ja
sub
jp
addr16
loope
movsl
jo
sahf
push
mov
arpl
add
sbb
rcll
mov
insb
mov
push
dec
sahf
les
push
xor
mov
mov
fistpll
and
test
jl
call
push
cmpsl
out
outsl
jb
mov
dec
pop
sahf
mov
jp
cmc
jge
sarb
mov
ss
mov
lret
lds
stos
jae
jo
divps
shlb
jae
push
cmp
sti
ficoml
xor
push
hlt
hlt
mov
sub
adc
dec
es
mov
add
icebp
outsl
jne
add
cltd
xchg
lock
enter
lahf
mov
ljmp
aaa
xchg
sub
inc
or
mov
adc
add
cmp
jp
jo
popa
ja
pop
xorl
inc
mov
mov
sbb
lea
pop
scas
cmpsb
int
dec
push
xor
adc
ret
xor
idivb
push
pop
scas
adc
ljmp
gs
push
adc
adc
movsb
mov
lock
scas
enter
jnp
daa
mov
mov
dec
cmpsb
mov
lods
dec
insl
dec
sarb
jl
mov
xchg
popf
shll
ljmp
lds
add
jmp
mov
add
jmp
push
pop
mov
jge
aaa
mov
das
fs
inc
xchg
ljmp
sti
outsb
inc
arpl
dec
inc
and
sub
mov
notb
xor
dec
sbb
add
and
inc
in
lods
ljmp
lods
aad
lods
popl
mov
stc
dec
shll
scas
cmp
push
or
jb
jns
fstp
outsb
xchg
loope
aas
nop
push
xchg
mov
flds
pop
xchg
cli
iret
pop
dec
xchg
push
fstpt
cwtl
ljmp
push
es
stos
pop
jns
icebp
cmp
mov
jnp
cld
fists
cs
out
aad
adc
push
orb
je
add
enter
mov
ss
rcll
fistl
jle
ret
pop
mov
adc
insb
outsl
jle
mov
jp
mov
cmp
mov
ss
mov
add
push
sub
loopne
mov
xorb
push
imul
push
pop
scas
jb
lea
fnstenv
enter
jmp
arpl
or
aad
or
jne
xchg
inc
lock
sub
in
leave
divl
dec
and
push
push
sub
iret
cmp
mov
cmp
test
arpl
aaa
mov
xchg
fstps
mov
sub
mov
pushf
scas
push
loop
mov
int3
mov
scas
add
aas
add
dec
call
cwtl
data16
loopne
push
orl
pop
push
sbb
scas
dec
cmp
cli
in
lds
adc
mov
jb
mov
outsl
sub
scas
inc
pusha
mov
stos
addl
xor
popf
stos
leave
into
inc
dec
push
aaa
movsl
aaa
es
xor
mov
jbe
addb
test
pop
mov
es
sub
sub
fbstp
fcoml
push
push
jmp
fdivrs
outsl
and
pop
ljmp
pop
mov
test
cmp
int
nop
sub
and
std
mov
adc
das
cltd
andl
pop
jmp
push
test
pop
dec
adc
pop
aam
insl
out
adc
xchg
xor
adc
aam
mulb
sub
lods
push
mov
sbb
push
dec
inc
add
sbb
das
popa
dec
and
jle
mov
pop
fisttpll
adc
xchg
fldenv
jp
push
lcall
out
ljmp
cs
push
out
mov
push
pusha
mov
fcompl
cmc
ret
sub
or
aas
cmp
sbb
testb
mov
cmpsb
ljmp
or
cld
pop
adc
xor
iret
test
ds
and
mov
addb
mov
fmuls
or
cwtl
jnp
stc
xchg
insl
xchg
je
lret
outsb
jp
in
ja
mov
insb
inc
out
or
cmpsb
test
sbb
push
lods
popa
jp
mov
testl
nop
jbe
dec
fs
or
movzwl
mov
in
in
mov
mov
data16
push
pop
data16
hlt
dec
rorl
mov
dec
cs
xor
or
xchg
push
leave
icebp
call
adc
dec
movsb
xlat
cld
out
and
and
sahf
sbb
jb
adc
or
out
push
bound
push
lock
pop
dec
sub
fdiv
inc
xor
clc
dec
pop
mov
cmpsl
push
lcall
inc
fistl
mov
push
pop
icebp
pusha
dec
inc
jl
fsubs
sub
add
pop
dec
dec
test
sub
inc
jne
les
adc
lret
sub
inc
dec
imul
sarb
mov
in
cli
xchg
xor
out
scas
hlt
sbb
pop
pop
cmc
lods
test
clc
push
test
push
arpl
adc
mov
orb
pop
fstpt
shlb
mov
test
xchg
in
xor
cmp
inc
ds
das
in
out
fdivr
out
mov
cmp
in
ljmp
lods
lds
rclb
push
lods
mov
or
inc
mov
pop
mov
and
dec
mov
sbb
xchg
bound
ss
mov
push
pop
sarl
js
mov
clc
and
mov
sub
stos
inc
xor
movsb
outsb
loopne
out
mov
call
xchg
cs
jmp
push
faddl
js
aad
movsb
imull
rcrb
or
jmp
push
fs
das
std
leave
sbb
je
mov
shlb
test
jne
ret
in
and
adc
bound
push
rolb
arpl
fwait
loope
mov
mov
imul
icebp
xor
leave
sub
jge
daa
adc
or
mov
inc
and
stc
or
xchg
hlt
data16
movsl
movsb
es
jnp
xchg
popa
cli
data16
add
fimuls
mov
push
cmpl
xchg
cmpsb
mov
sub
sub
pop
add
add
test
push
push
push
push
jmp
jecxz
mov
adc
insb
jnp
lret
pop
adc
pop
push
arpl
mov
rorl
push
push
and
sbb
jns
leave
pop
dec
stos
mov
data16
push
pop
dec
int
femms
xchg
aas
sbb
add
pop
mov
jecxz
xor
xchg
shll
imul
test
rorl
mov
pop
and
in
repnz
push
jmp
hlt
cmp
cmp
fwait
cwtl
mov
push
or
lock
jae
push
gs
sbb
xor
jl
sbb
lods
jl
and
les
fnstenv
iret
in
inc
push
and
int
or
pusha
test
cli
dec
mov
sbb
shlb
fnstenv
inc
rorl
inc
data16
popa
test
jns
push
add
call
in
push
pop
mov
cmpl
pusha
push
dec
cmp
out
lock
xlat
xor
mov
in
add
das
loop
mov
xorb
jno
in
cmp
popf
sub
int
mov
mov
outsb
xchg
adc
pop
jmp
and
call
sub
mov
imull
movsb
pop
ja
mov
mov
arpl
add
push
outsl
pop
inc
xor
mov
cltd
sbb
adc
dec
iret
divb
test
xchg
xor
out
mov
testl
cmp
inc
fldl
loop
es
sarb
pop
push
mov
ss
mov
es
push
add
dec
and
mov
mov
mov
cltd
sbb
sti
je
mov
arpl
loopne
xchg
cmp
or
clc
jnp
das
xchg
push
cmp
loopne
xchg
addr16
or
dec
popa
out
scas
loop
xchg
arpl
pop
adc
sarl
dec
mov
lea
jae
mov
rolb
pusha
lret
fdivrs
out
sbb
dec
imul
mov
sbb
add
push
jmp
cmp
sbb
mov
sub
push
lret
cwtl
sub
jnp
xchg
pop
nop
ret
out
pusha
cs
js
xchg
mov
out
xor
lea
stc
hlt
jecxz
cmpsl
pushf
jbe
add
mov
fcomps
cmp
xor
lods
shrb
push
aam
mov
clc
mov
cs
mov
int
out
cli
dec
or
fsubp
loopne
xor
adc
mov
lahf
jl
imul
cltd
jl,pt
add
sbb
inc
icebp
pop
loope
mov
rcl
lods
jne
shrl
xchg
add
push
push
mov
repz
sahf
hlt
inc
dec
pop
loope
push
mov
push
scas
sti
iret
add
fiadds
or
ljmp
jnp
stos
dec
jecxz
inc
push
and
pop
lret
js
in
pop
fldenv
lea
or
push
fisubrs
fs
xor
loope
insb
dec
add
mov
sbb
movsb
jo
push
xchg
add
sub
lds
movsl
lahf
push
mov
push
or
jno
cmp
gs
push
int3
and
fstp
pop
or
sbb
mov
ja
push
xchg
xor
repz
xchg
or
cmp
mov
ljmp
push
xor
pop
pushf
pop
push
addr16
dec
or
mov
push
inc
cmp
hlt
pop
push
sar
pop
sub
adc
or
imul
dec
lret
push
or
std
insl
sub
icebp
cmpsl
cli
pop
sub
in
imul
adc
jecxz
popf
fs
cmp
xchg
dec
xor
xor
and
jmp
iret
divb
rcr
dec
or
in
shlb
fstp
sub
psraw
sub
xchg
jl
je
or
push
pop
aaa
dec
cs
dec
pop
xor
mov
icebp
loop
xor
test
int
int3
leave
jno
addl
sub
and
mov
jmp
data16
ret
push
cmp
push
xchg
sub
inc
in
lcall
les
mov
mov
jns
sti
fsubp
mov
rolb
inc
xor
xchg
xor
lds
pop
pusha
or
or
cmp
fwait
mov
add
stos
iret
pop
ret
out
or
cmp
outsb
and
inc
inc
je
xor
mov
dec
jae
imul
repnz
jge
cmp
jnp
xor
jmp
scas
pop
aad
or
jmp
inc
sub
or
xchg
in
ds
cmp
and
fs
test
idivl
fxtract
icebp
xchg
in
and
pop
in
push
adc
in
hlt
and
push
cld
xchg
inc
add
arpl
movsl
xchg
daa
lahf
push
mov
pop
fnsave
push
insb
fucomip
jo
out
int
mov
inc
ljmp
sahf
adc
adc
mov
cmp
and
std
sarl
add
js
mov
sbb
mov
sbb
mov
fisubrs
loopne
lret
adc
rclb
cmp
les
cmp
addb
js
push
jno
lods
xor
fstps
ss
nop
es
repz
add
adc
into
xchg
pop
hlt
movl
icebp
nop
pop
push
lods
out
outsb
lret
push
test
call
testl
mov
aad
insb
loopne
sub
rolb
in
xchg
cmp
test
dec
xlat
xlat
fisubrl
add
hlt
sub
ss
push
test
mull
into
cli
faddl
out
aaa
add
ss
inc
sar
or
divl
xor
xor
insl
or
jmp
jnp
jmp
add
inc
inc
xchg
icebp
adcl
and
sbbb
fildl
mov
xor
dec
stos
loop
pop
ds
pop
pop
cmp
jg
ja
fcmovne
jbe
mov
inc
jb,pn
mov
popa
and
xor
shrl
hlt
jbe
aaa
inc
push
or
dec
pop
hlt
cmc
fdivrl
pop
and
aad
pop
mov
sub
dec
js
xchg
sub
xlat
xor
sbb
cmp
ds
push
pop
mov
insl
fistps
mov
xchg
dec
push
mov
cmp
adc
call
fucom
fadd
mov
mov
push
out
dec
lea
and
mov
pop
push
push
lods
xchg
clc
hlt
out
adc
rol
mov
inc
lods
std
movsl
push
pop
out
pop
mov
xor
or
or
test
testl
in
inc
sbb
or
ret
xorb
push
rolb
pop
leave
dec
lcall
and
mov
adcb
sub
int3
push
pop
adc
jne
leave
divb
insb
xor
inc
push
add
dec
or
mov
jle
inc
xor
fisubrs
mov
push
orb
idivb
inc
arpl
mov
ret
dec
pop
add
in
out
or
xor
mov
and
sbb
int3
inc
pop
int3
pop
js
jno
xlat
fcompl
push
pop
iret
out
mov
cld
out
shlb
incb
lock
adc
mov
jbe
mov
out
sarl
push
and
in
mov
mov
adc
mov
cmp
lds
aad
in
std
cmp
lahf
pop
loope
es
mov
xor
outsb
and
jno
imul
scas
or
sti
fwait
data16
stc
cmp
lcall
sarb
mov
xchg
addb
adc
fnsave
shl
arpl
push
xchg
add
loope
push
js
test
inc
popf
inc
lock
in
movsb
lcall
pusha
push
loop
adc
sbb
aaa
dec
jl
pop
mov
imul
jl
int3
sarl
jecxz
push
das
mov
cmp
fsubl
pop
leave
mov
inc
mov
jno
cltd
rcrl
pop
dec
adc
sahf
js
xchg
xchg
lea
push
push
jecxz
jno
xchg
xchg
and
addb
shrb
dec
pop
div
pop
cmp
or
stos
push
push
test
lods
enter
shrl
jmp
or
push
lock
out
mov
cmp
dec
notl
int
sbb
test
push
popf
pop
pusha
mov
jne
cmc
int
into
rcll
cwtl
addr16
fsubl
jecxz
test
mov
popa
jb
sahf
repz
xor
jns
push
or
push
inc
addr16
add
push
adc
dec
push
aaa
icebp
sub
loop
lcall
and
jl
mov
mov
mov
adc
div
xor
arpl
add
sbb
mov
rclb
cmp
arpl
das
fcompl
loop
sbb
aaa
and
pushf
push
adc
or
dec
out
stos
cwtl
das
lock
pop
sub
testb
pop
out
inc
mov
fisubrl
inc
and
mov
sub
inc
in
push
nop
dec
idivb
jnp
cmp
xchg
pop
and
into
stos
clc
push
xchg
test
pop
les
dec
xor
pusha
shlb
sbb
sbb
mov
jle
scas
cmp
fwait
cmp
outsl
xchg
loop
stos
mov
in
std
movsl
xchg
movsl
xor
cltd
mov
xchg
or
cmpsb
sbb
addl
cmpb
mov
mov
aam
or
inc
or
or
inc
add
mov
jle
add
push
mov
lcall
fdivrl
aas
and
add
mov
jmp
add
out
push
inc
mov
xlat
ret
pxor
jl
xchg
aad
inc
xchg
cltd
dec
in
cli
lret
sub
pop
scas
or
mov
orb
mov
arpl
and
ss
inc
lock
dec
ror
int3
cmp
das
ret
jg
adc
sub
ds
push
mov
shlb
pusha
es
pop
ret
nop
je
std
ja
sbb
fistpl
arpl
mov
jl
xchg
xchg
cmc
dec
sub
or
sub
mov
rcr
sbb
pop
or
loope
mov
das
test
dec
sub
or
call
addr16
sbb
popl
mov
inc
jmp
or
mov
into
push
lret
es
sahf
in
and
inc
popa
out
sbb
lock
xor
popf
adcl
push
mov
sti
aas
mov
fstl
mov
fld
ficompl
dec
add
cmp
push
sub
std
addr16
ret
js
hlt
je
push
push
rcr
inc
sbb
push
addr16
mov
jnp
mov
push
push
sub
add
dec
adc
sti
sub
iret
cmpsl
push
add
xchg
xor
mov
das
popa
push
lea
add
mov
cmp
dec
jb
jns
popa
std
cmp
mov
jnp
les
out
pcmpgtd
jae
std
xor
inc
xchg
insl
insb
shr
cmp
push
dec
xchg
dec
std
cltd
in
pop
jo
cmp
lea
add
pop
inc
call
dec
jne
shr
push
push
ret
nop
xorb
jno
ss
loopne
or
popf
mov
jge
test
pop
mov
dec
inc
das
add
jp
xor
shrl
stos
in
jae
mov
xor
xlat
jecxz
cmpsb
andl
adc
mov
sub
xchg
dec
jg
int
mov
shll
pop
push
lods
push
mov
xorl
xorb
mov
cltd
fidivrl
jb
adc
mov
fsub
sbb
dec
fdivs
cli
arpl
cmp
imul
inc
jns
jne
in
push
ret
push
aad
fcom
lods
test
aad
or
xchg
mov
inc
enter
lods
xchg
loope
popa
out
out
in
pop
mov
insl
push
divb
adc
shlb
mov
rolb
inc
push
das
in
fdivrp
ja
sub
jbe
mov
xorl
data16
xlat
mov
imul
pop
rcl
adc
push
pusha
and
mov
lock
cmpl
jg
jle
sub
mov
mov
pop
inc
stc
lods
jbe
mov
dec
mov
mov
cmp
lcall
mov
inc
mov
push
lret
xchg
xor
or
push
outsb
test
mov
daa
fnstcw
inc
and
lds
and
mov
ret
into
jbe
outsb
dec
pop
inc
inc
jp
jmp
fisubl
in
sti
aam
inc
xchg
jmp
outsb
iret
mov
lock
and
fwait
clc
sbbb
rorb
mov
in
out
sarl
fs
cmp
scas
inc
dec
sub
jge
ljmp
ficompl
mov
push
hlt
js
mov
cmc
jnp
cmpsb
shrb
push
insl
and
mov
inc
sub
lea
loopne
push
sbb
adcl
sub
add
xchg
mov
ja
add
jle
cmpsb
inc
pushf
xor
addr16
mov
cli
jmp
push
jge
fidivrs
cwtl
sub
dec
xchg
loopne
push
cld
hlt
insb
leave
rcll
sar
sahf
dec
mov
sub
pop
cmp
cmpsl
mov
mov
sahf
mov
add
adc
out
stos
pop
pop
rorl
test
aas
nop
pop
das
inc
cmpsb
scas
gs
cld
repz
push
test
jg
fwait
pop
cli
jmp
xor
jb
mov
cs
outsl
popf
adc
pop
inc
mov
mov
nop
aam
xor
cmp
inc
lods
or
xchg
jno
add
movsb
mov
xchg
repz
push
sub
inc
dec
inc
pop
xchg
jo
inc
dec
xchg
fwait
cmp
sti
mov
push
std
mov
ret
lahf
push
out
and
fldl
popa
in
jae
lods
or
aad
mov
ret
sub
sbb
into
sbbb
adc
mov
push
cmp
xor
in
mov
test
push
fdiv
sub
fcoms
mov
xor
and
leave
divl
pop
and
fcoms
push
int
loope
push
clc
add
icebp
or
jecxz
sbb
repnz
jmp
movsb
inc
out
push
mov
push
add
test
add
leave
push
or
popl
jmp
int
jnp
subb
movsb
inc
cmpsl
in
inc
cmp
mov
inc
fldz
mov
and
jnp
repz
aas
imul
addr16
and
jne
out
les
push
stc
mov
mov
cld
scas
cmp
sti
xchg
int3
lea
sub
pop
stos
stos
fldt
leave
stc
fcompl
mov
jns
adc
fs
lahf
jl
sub
and
mov
mov
lods
push
add
and
test
jmp
loop
xor
add
mov
adc
outsb
mov
stc
mov
pop
jb
cltd
lds
out
lods
sub
stos
daa
lret
or
stc
mov
mov
and
fisttpll
mov
mov
sub
bound
dec
xchg
mov
mul
xchg
and
push
mov
add
add
out
int3
stos
mov
leave
xor
push
test
jne
and
nop
push
sbb
mov
mov
xor
mov
scas
sub
iret
test
jb
fwait
stos
or
aam
daa
cmp
cmp
xchg
cmp
cmpsb
jnp
inc
add
ret
push
push
pop
lds
add
cmp
jmp
int
sub
lret
inc
mov
movsl
and
xchg
sti
xor
movsl
pusha
lods
pop
cmc
cmpsl
or
lods
push
rolb
or
jle
into
jl
inc
mov
sub
dec
pop
mov
out
or
adc
sbb
and
pop
inc
fldt
adc
xor
or
nop
mov
inc
mov
shl
ret
ret
pushl
sbb
rolb
mov
cmpsl
adc
addr16
dec
cld
add
xchg
and
xchg
xchg
or
test
xor
dec
lcall
adc
push
testl
add
mov
fisttpll
leave
cld
dec
pop
push
addr16
or
jmp
mov
pop
push
push
fwait
pop
fs
fidivrs
jmp
inc
pop
jo
lret
inc
ljmp
or
ds
xchg
leave
xchg
mov
fwait
repnz
testb
aad
sarl
xchg
ret
mov
push
and
inc
repnz
cld
push
aad
inc
shl
mov
shrl
sbb
sbb
loop
sub
and
neg
dec
inc
fistps
mov
aam
add
into
aad
lret
sbb
jmp
push
shlb
push
add
dec
sbb
add
jns
cmp
pminsw
mov
imul
cmc
sbb
and
xor
aaa
test
mov
cwtl
mov
push
ja
int3
mov
xor
inc
pop
sub
or
mov
mov
add
nop
fwait
lret
aam
ljmp
xchg
fdivrl
push
xor
jb
jne
outsl
xchg
mov
jne
sbb
fcom
adc
cmp
popa
leave
stos
stos
stos
mov
dec
mov
jnp
sahf
shrd
fistpll
inc
ficomps
je
push
lds
loopne
icebp
mov
outsl
sbb
cmpsb
test
lret
fsubp
fcoms
jle
mov
xchg
int
test
sub
cmp
stc
and
outsb
cmp
jb
sti
mov
lret
dec
xor
push
adc
jle
jl
inc
mov
push
lock
push
or
mov
jge
and
jp
add
stos
mov
adc
push
push
iret
popf
pop
or
mov
aam
dec
sub
clc
xchg
movsl
ret
scas
dec
mov
int
mov
jae
cwtl
inc
lahf
or
cmpsl
loop
xchg
sbb
fsubs
faddl
aam
dec
pop
jno
add
out
btc
test
jns
lock
push
fs
out
stos
sbb
stos
mov
xchg
aam
data16
les
imul
jmp
leave
xchg
mov
cltd
cmpsl
mov
pop
cmp
les
add
lea
and
mov
jecxz
xchg
repz
pop
mov
add
inc
mov
pop
les
pop
js
out
jg
lret
repz
push
jno
pop
pop
cmpl
outsb
sahf
mov
pop
push
out
and
in
sbb
jge
mov
cmp
stos
add
xchg
and
leave
lret
xchg
and
popa
pop
mov
into
inc
mov
mov
jg
leave
fimuls
xor
push
sub
dec
or
dec
jmp
push
mov
add
and
inc
jl
sub
orl
aam
jl
mov
loop
in
stos
sub
add
sub
hlt
sti
push
cmp
sbb
orl
inc
daa
xchg
mov
popf
test
stos
pushf
push
out
adc
cmpsb
rolb
pop
adc
mov
fidivl
fisubl
pop
jb
pop
cmpsl
cli
out
cmpsb
lahf
pop
imul
lret
loopne
lds
push
ja
jg
inc
xchg
xor
stos
leave
add
push
xor
nop
mov
sub
and
sub
mov
pop
in
inc
push
adc
or
sti
lret
cld
repnz
push
add
daa
push
je
and
outsl
sub
ljmp
mov
lea
cmp
push
xchg
fists
ficompl
cmpsb
sti
dec
push
cmc
ret
jg
aaa
fs
xor
fisubrl
add
movsb
fwait
jnp
dec
test
adc
lret
adc
int
jne
je
inc
fcmovbe
xchg
sarb
pop
mov
cmp
icebp
std
out
cld
movsl
add
cmpsl
lahf
or
ds
popa
add
jp
jg
sbb
cld
bnd
data16
cmp
fmuls
mov
jle
push
pop
pop
aas
inc
xchg
add
les
lcall
out
jbe
xchg
dec
jmp
outsb
dec
call
psubusw
push
pop
sub
mov
fwait
test
adc
repz
shrl
sub
lods
xorl
lahf
pop
cmp
xchg
cmp
mov
push
sub
scas
or
push
mov
add
xchg
idivl
adc
cmpsl
fld
leave
and
push
imul
call
adc
fs
leave
std
jg
stos
je
call
xor
addr16
dec
mov
jnp
add
push
jp
in
and
adc
add
sub
mov
mov
std
add
push
aam
fbld
mov
jns
xchg
push
xor
or
shrl
test
mov
xor
es
orl
stc
adc
mov
shrd
fidivrl
movsl
mov
movsl
add
push
push
outsl
fildl
pop
das
fidivrl
mov
rorb
aaa
bound
mov
out
repz
lcall
push
mov
rcrl
cmp
mov
data16
sbb
dec
cs
mov
or
xchg
je
xorl
and
xor
repz
call
jge
stos
pop
xlat
pop
xchg
pop
inc
popf
sub
dec
lcall
adcb
pop
push
out
std
gs
jbe
add
push
insl
pop
data16
cmp
fsubrs
js
ficompl
pop
ffreep
popa
daa
fidivrl
mov
and
inc
mov
lret
fadds
mov
push
rcrl
lock
inc
add
xchg
xor
adc
mov
sub
inc
in
jmp
dec
dec
jle
adc
mov
cs
sub
jb
or
dec
adc
filds
repz
inc
arpl
jne
xchg
dec
mov
xchg
hlt
cmp
mov
addr16
push
inc
or
call
jo
add
ret
or
ret
imul
mov
pop
push
sbb
mov
pop
xchg
or
cmp
jb
push
lahf
adc
jae
cwtl
push
aas
and
dec
or
xchg
xchg
jns
imull
inc
push
pop
sbb
mov
push
cld
inc
push
test
and
pop
jae
shl
sahf
test
dec
mov
iret
xchg
inc
sbb
loopne
cmp
adc
or
addr16
lds
xchg
nop
sub
pop
fnsave
jg
popf
push
lret
fs
inc
pop
pushf
dec
adc
repnz
or
dec
cwtl
or
pop
or
imul
ss
adc
cmpsl
roll
pop
push
pop
cmc
pusha
imul
jb
hlt
or
stos
outsl
fcmove
outsb
mov
mov
ds
xor
cmp
mov
push
pop
pop
push
mov
imul
add
addl
rcr
pop
mov
lods
jo
out
int
mov
arpl
out
lahf
cmp
mov
lods
cmp
xor
shlb
pop
jb
sub
pop
jge
add
jb
mov
pop
cltd
fcmovnbe
and
aad
xlat
pop
stc
xor
sub
sbb
inc
dec
cmp
lahf
pop
sub
sub
mov
rolb
fnstsw
sarb
sbb
sbb
outsb
pop
shll
push
push
jae
mov
pop
cmp
insl
mov
leave
sbb
pushf
outsb
lods
mov
push
xchg
sbb
xor
mov
fcmovnb
dec
xchg
mov
xchg
arpl
push
jecxz
sub
mov
adcb
aam
test
sbb
lcall
mov
stos
lahf
cmp
cmp
nop
movsb
repz
xchg
push
test
inc
mov
in
or
outsb
pop
mov
pop
leave
add
or
aad
jbe
les
pop
stos
dec
stc
adcl
dec
cmp
movsl
jns
mov
cmpsl
insb
ss
popa
push
dec
ucomiss
cli
inc
popf
sbb
pop
cmpsl
out
cli
xor
inc
outsb
xchg
out
sbb
in
fidivrl
or
xchg
cmp
fwait
push
jl
loop
cmp
xor
mov
sub
xor
notl
add
or
push
loope
dec
mov
adc
xchg
arpl
in
insb
in
in
sbb
jne
into
cmpsl
cld
ljmp
ja
in
inc
sti
stos
cs
push
sbb
mov
in
fisubrs
movl
das
cli
mov
loope
xchg
out
inc
in
loop
mov
mov
repz
popa
aaa
es
decl
in
xchg
int3
lcall
pusha
int3
push
dec
adc
sbbl
sbb
adc
pop
sti
lock
pop
or
ljmp
pop
xchg
and
xchg
js
in
cwtl
mov
cmp
jg
mov
cmp
xchg
jge
adc
andl
mov
call
push
xchg
add
cmp
lea
cmp
repz
and
or
inc
cmp
push
notl
js
push
xchg
iret
lock
imul
adc
jns
popa
mov
bound
push
dec
xor
out
insl
ss
add
dec
cld
inc
roll
mov
push
lods
adc
xchg
and
insb
adcb
aas
lds
shrb
mov
mov
push
or
and
orl
xchg
lea
xor
inc
out
lea
movsb
rcrl
xor
inc
rcrb
orl
push
dec
pusha
xlat
jge
jns
xchg
ret
fs
fcom
lret
cltd
cmc
sahf
fbstp
int3
lret
lcall
xchg
push
xor
pushf
xor
cmc
mov
add
mov
insl
pusha
jmp
stos
jecxz
int
insl
shll
ds
sahf
sub
push
lods
inc
hlt
int
push
dec
test
loope
movsl
push
mov
mov
dec
mov
mov
int3
adc
jnp
xchg
rorl
shr
sub
mov
call
and
fldt
dec
imul
adc
mov
or
pop
pop
adc
scas
or
arpl
jp
icebp
rclb
push
cwtl
cmp
int3
or
cmp
or
mov
jl
imul
out
cmp
mov
dec
icebp
ret
lahf
mov
and
int3
push
pop
ja
lds
jl
push
insb
sbb
fisubs
test
mov
loope
ss
add
stos
shl
sbb
dec
divl
in
ret
push
push
int
inc
sub
or
or
jle
and
mov
mov
and
push
and
rolb
mov
rcll
sti
test
vphaddudq
pop
ds
addr16
shr
enter
daa
xchg
test
or
jmp
in
repnz
imul
sub
aaa
lods
dec
cltd
rcrl
push
push
xchg
imul
cs
gs
nop
pop
pop
fimuls
push
js
sub
lock
push
cltd
add
arpl
mov
fimuls
jnp
fmuls
adcl
sbb
out
je
add
cmp
out
xchg
popf
mov
or
int
xchg
xor
jmp
mov
or
mov
cli
lcall
rep
sub
test
jo
mov
repz
divb
mov
pop
mov
leave
xchg
or
addl
out
icebp
mov
xchg
mov
push
loope
sbb
sbb
jns
jecxz
and
out
out
shlb
int3
lcall
out
sti
ret
fwait
jl
enter
insl
pop
push
test
cmp
mov
jp
fists
clc
pushf
cmp
shlb
dec
inc
icebp
sahf
call
push
or
ret
xchg
lret
inc
or
shr
aas
inc
xchg
sbb
ja
mov
push
jl
jo
xchg
cmp
cmp
das
fsubr
nop
mov
pop
cmp
push
jmp
aas
loope
incb
pop
in
bound
mov
dec
repz
mov
pop
sti
into
out
push
push
into
sub
xchg
inc
xlat
mov
sub
pop
or
ds
cmp
inc
pop
sbb
pop
add
stc
icebp
xchg
dec
xor
pusha
jnp
jb
mov
mov
xchg
rep
mov
or
pop
cmc
es
jmp
inc
aam
mov
mov
inc
out
push
or
fs
data16
outsl
cmp
repnz
cld
imul
test
mov
iret
jg
orb
and
mov
nop
sarl
fwait
rcll
psllw
xchg
jge
inc
and
push
fidivs
insb
push
push
dec
mov
loope
outsb
adc
mov
dec
mov
jmp
add
je
enter
int3
out
sub
adc
int3
gs
shrl
pop
movb
mov
and
sub
dec
fistpl
dec
push
and
ljmp
mov
loopne,pn
push
sub
mov
test
fdivrp
out
push
xor
or
or
pushf
test
xchg
outsb
test
mov
and
adc
jl
xor
imull
hlt
and
mov
adc
imul
push
sbb
mov
jp
sahf
mov
push
mov
dec
push
mov
ret
mov
pop
push
mov
jno
mov
dec
mov
pusha
xchg
out
and
and
push
ret
sahf
push
lea
push
ds
adc
repz
pusha
test
sub
cs
jns
sub
mov
jmp
or
inc
pop
jp
sbb
adc
insb
das
push
stc
mov
mov
jne
add
fs
rcrb
xchg
and
adc
sub
lds
test
mov
loope
sub
cmp
jne
lret
lcall
mov
shlb
test
inc
pop
cld
mov
jae
jne
xlat
pop
mov
mov
aad
movsb
stos
jno
addl
shll
push
push
aaa
jle
mov
out
jnp
outsb
iret
mov
into
inc
scas
xchg
add
push
in
negb
int
and
sbb
pop
imul
xchg
ret
daa
out
popf
lret
mov
fs
jnp
xor
sub
or
mov
lods
xchg
xor
push
out
dec
pop
sub
shl
into
xor
loopne
int
or
lret
shlb
mov
data16
lods
lret
push
sahf
sub
cmc
push
jne
cltd
jb
hlt
cltd
cmc
rcrl
mov
pop
xor
mov
push
jnp
popf
lahf
mov
cld
stos
ret
and
popf
mov
add
jb
nop
ja
int
mov
icebp
sbb
inc
cs
adc
and
repnz
mov
test
lds
loopne
mov
int3
sbb
xlat
mov
mov
push
push
xchg
std
jo
aas
mov
mov
jae
clc
ret
mov
add
es
jbe
mov
mov
nop
pop
into
orl
popf
lock
es
cli
ja
pop
jns
mov
loop
andl
icebp
xchg
imul
inc
add
jnp
adc
push
xchg
cltd
jb
and
mov
testb
iret
pop
and
and
mov
jnp
js
vfrczsd
ret
cmp
in
mov
out
ficomps
iret
movsb
data16
add
aam
xchg
push
into
loope
or
jl
ljmp
push
jno
lea
inc
jmp
lds
stc
mov
jbe
sbb
mov
push
lret
push
mov
bound
mov
mov
sbb
pop
shl
cmp
xor
dec
mov
dec
xor
insl
or
hlt
rol
inc
adc
xchg
xchg
repz
int3
les
xchg
sti
jns
rcl
ljmp
div
mov
gs
lock
inc
pop
mov
push
loop
test
adc
aam
fnstcw
xlat
loopne
and
outsb
lods
xor
into
sub
pop
pop
jle
rcrb
shl
and
imulb
mov
mov
das
and
mov
ret
push
loopne
movsb
ds
inc
les
mov
jp,pn
sbbl
cmc
mov
loopne
and
clc
aad
add
adc
ja
or
push
fstpl
stc
xor
add
xchg
cmpsl
in
sbb
movb
mov
sub
lea
nop
add
sahf
jnp
jmp
pop
pop
inc
lock
inc
inc
aad
rolb
sbb
and
jbe
aad
sbb
lcall
insl
pusha
imul
push
mov
shlb
call
fsubl
nop
pop
addr16
add
adc
out
add
add
shrl
pushf
pop
inc
cld
jno
lcall
cld
repnz
in
adc
pop
mov
sub
sbb
jnp
jbe
jo
xchg
je
outsb
clc
xor
movsl
ret
jp
fnstcw
mov
lods
pop
movsl
leave
adc
cs
test
stos
mov
out
xor
sbb
xchg
loop
mov
mov
fcmovnb
jne
fcoml
pop
xchg
mov
cmp
shrb
hlt
and
mov
add
mov
and
mov
test
sub
bound
mov
pop
pop
inc
inc
xor
dec
xor
dec
cs
xor
push
inc
mov
pushf
cwtl
jle
push
mov
push
out
pop
addl
fdivl
cli
pushf
outsb
sub
sahf
jns
dec
cs
rorb
pop
mov
popa
je
and
out
and
insb
mov
outsl
decl
and
shlb
push
jp
orl
out
mov
cmp
push
inc
test
out
xchg
jmp
in
stos
and
push
int3
jb
xor
mov
mov
xor
pop
imul
jae
inc
or
inc
daa
movsb
or
andl
test
ret
loopne
adc
cld
or
sbb
push
inc
or
jl
push
pop
dec
pop
inc
sbb
jmp
fadds
mov
pop
and
shr
mov
xchg
jo
dec
xor
push
add
rolb
jmp
in
and
sarl
mov
insl
lahf
add
mov
jmp
in
insl
sbb
loope
aaa
std
or
or
mov
inc
xchg
mov
lahf
or
lock
lock
jl
jmp
lret
and
test
shl
cmc
jecxz
popa
lret
add
in
mov
hlt
jl
or
fisubl
mov
cmp
aaa
mov
xor
mov
xlat
push
inc
mov
int3
test
add
cmp
sti
rcl
push
mov
push
mov
popf
adc
jns
push
jle
stos
stos
push
inc
lcall
jp
xorl
jns
je
pushw
js
cwtl
mov
and
in
lock
mov
cmpsl
ror
mov
aaa
xchg
mov
or
or
sbb
sub
ffreep
mov
pop
mov
aad
outsb
adc
push
fucom
sbb
xchg
pop
and
inc
xor
rol
mov
pop
jmp
jns
pop
jo
push
pop
pushf
loop
push
outsl
mov
outsl
mov
bound
xor
dec
or
or
pushf
mov
mov
andb
pusha
pop
inc
insb
nop
mov
fcomps
lcall
cld
and
aaa
pop
subl
cmp
daa
fwait
and
xor
pop
dec
inc
cmpsb
adc
shr
jl
dec
stos
jge
clc
xchg
push
cmp
cli
sub
pop
and
hlt
lds
fiadds
lahf
std
orl
je
inc
inc
bound
cmp
lods
call
sbbl
xor
out
and
dec
pusha
fistpll
das
outsb
jo
dec
dec
sub
jnp
pop
pop
ret
add
jecxz
push
std
add
jge
dec
loopne
outsb
cltd
jmp
or
loope
pushf
rorl
das
and
mov
pop
dec
add
lret
pop
dec
or
test
andb
sub
je
jae
adc
push
jp
push
jne
xchg
add
cmp
fstpl
add
clc
sub
lds
ret
in
out
push
lea
push
subb
cmc
sub
jge
jno
imul
ljmp
jns
stc
repz
cmp
enter
xchg
add
xchg
xchg
adcl
dec
lahf
mov
loop
shl
out
pushf
xchg
pop
and
push
xchg
cmp
adc
jle
adc
add
xchg
in
sub
jmp
clc
mov
adc
push
xor
xchg
rorb
cmp
sub
sti
push
sub
jecxz
loope
pop
pop
fisttps
imul
inc
pop
movsb
inc
pop
repnz
jmp
pusha
out
sub
sub
sbb
rorb
cs
mov
xor
and
fsubs
test
sbb
je
or
dec
dec
pop
aaa
iret
imul
mov
pushf
lods
add
fwait
insl
aam
cmpsb
jecxz
jl
mov
cmp
inc
int
stos
jp
mov
mov
pop
xchg
fwait
test
adc
pop
fists
xor
fwait
out
and
pop
je
mov
stc
xchg
les
cs
icebp
js
das
inc
divl
movsl
adc
lods
pusha
and
add
add
addr16
xchg
int
xor
push
lret
fsts
cmpsb
cmpsb
call
rcr
test
push
cmc
cmp
sti
mov
shrb
sub
xchg
jno
js
lds
aaa
scas
pop
and
pop
sbb
and
sbb
dec
xchg
inc
push
inc
add
rcll
mov
in
mov
sbb
nop
ss
popf
outsb
cltd
sub
lea
lret
adcl
xchg
pop
xor
or
or
xchg
cmpsl
outsl
push
push
test
ss
lret
sbb
cmp
add
roll
cmp
or
mov
in
or
pop
hlt
cli
jbe
or
mov
mov
push
or
xchg
dec
fadds
repnz
cwtl
jnp
jno
jnp
movsb
shrl
cs
xchg
or
icebp
dec
movsl
mov
or
dec
inc
sahf
jmp
mov
pop
gs
lock
repnz
and
orl
out
push
mov
push
dec
pop
lcall
mov
mov
test
mov
add
sbbb
mov
xchg
cmp
cwtl
sub
and
jns
fnstsw
iret
aad
test
icebp
leave
jb
loope
push
insb
inc
out
imul
push
lret
insb
mov
addr16
lods
xor
xchg
or
and
xchg
pop
mov
cmp
sub
sub
ret
jl
inc
dec
jecxz
mov
pop
int
nop
fwait
pop
mov
jle
adc
push
out
xchg
dec
movsb
stos
outsb
and
pop
lods
inc
xchg
repz
mov
hlt
imul
mov
cmpsl
sbb
fsubl
or
call
imul
rclb
add
repnz
cli
test
enter
fs
inc
test
mov
jbe
fidivrl
push
sbbl
sub
adc
out
mov
cmp
gs
das
inc
outsl
mov
add
test
jno
int3
sub
sub
xchg
adc
inc
adc
xchg
mov
inc
and
mov
pop
shl
out
xchg
std
lret
adc
out
adc
push
xlat
aas
and
popa
dec
mov
push
mov
gs
adc
subb
xchg
dec
das
pop
rcl
int3
fnstenv
ficoms
ds
and
into
aam
fstl
fcompl
pop
xor
cmpsb
cld
xchg
loop
add
lods
mov
scas
iret
add
xor
rcl
rep
mov
sub
imul
push
add
sbb
test
cmp
shr
xchg
incl
sbb
aaa
mov
sbb
push
mov
or
movsl
dec
dec
add
jmp
and
push
cmc
push
sbb
sub
hlt
arpl
jae
sub
rorl
scas
sub
add
mov
mov
jb
fisttpll
xor
mov
jb
les
add
cs
dec
inc
inc
xchg
cs
xor
push
and
inc
js
lds
add
push
sub
sbb
cli
sub
sahf
cltd
outsb
sahf
loop
add
mov
fdivrs
or
rcll
dec
push
adc
mov
jnp
inc
cmc
daa
aaa
iret
cmc
xor
lret
jmp
adc
cmp
mov
sahf
loop
fimull
or
jae
ss
push
jp
mov
rorl
and
call
fldt
dec
jecxz
jbe
xchg
lcall
or
mov
imul
sub
fnstcw
xchg
xor
cmp
das
add
cmpsl
adc
adcb
popa
adc
jbe
push
pusha
cmpsl
adc
dec
mov
sahf
pusha
ja
pop
mov
fidivrs
sub
shrl
mov
test
sbb
sub
sahf
or
sbb
clc
pop
mov
and
fsts
lds
cmp
fdivrs
sub
scas
jo
in
push
sub
sub
xor
jne
cwtl
and
test
scas
pop
xchg
notb
xchg
fidivs
mov
test
xor
push
lea
les
dec
or
repz
mov
cltd
ret
aas
push
ss
cmpb
push
and
shlb
xchg
dec
xchg
jns
ret
mov
pop
fstl
out
push
pop
jg
imul
lock
jo
repnz
mov
rcl
adc
pop
sub
jg
out
inc
xchg
xorb
lahf
adc
pop
pop
add
popa
subl
dec
push
lahf
cmp
jp
or
in
sbb
add
enter
popa
xor
mov
stos
fwait
add
jne
xchg
sbb
ret
pop
fldpi
sahf
cmpsl
push
xchg
das
sbb
dec
cltd
imul
dec
pushf
jge
sahf
jno
jle
call
sub
lahf
test
imul
add
adc
xchg
sub
jbe
popa
xor
xchg
shll
rorl
aaa
or
or
outsl
and
stos
test
pop
add
nop
out
mov
ljmp
adc
pusha
mov
xchg
outsl
pop
xchg
mov
or
sbb
lahf
shll
data16
dec
mov
mov
dec
dec
push
dec
sbb
roll
mov
repz
inc
je
sub
cld
jp
jmp
inc
fldenv
xchg
inc
xlat
movsl
dec
mov
insl
sbb
stc
jmp
ljmp
arpl
cmp
adc
fs
aam
pop
mov
arpl
xchg
std
rorl
jo,pt
ret
fnstenv
xor
or
call
push
int
cwtl
mov
fstpt
jnp
sbb
push
mov
and
hlt
jecxz
adc
mov
or
dec
mov
sbb
mov
or
fimuls
loop
adc
push
mov
outsb
jmp
ds
push
pop
jg
shlb
lods
cltd
and
jbe
repz
jnp
repz
inc
stc
or
test
out
pop
xchg
cmp
xchg
cltd
sub
fwait
cmc
imul
xchg
mov
mov
mov
xchg
push
cmp
mov
dec
jle
push
jmp
mov
aam
pop
xchg
xchg
xchg
addr16
lea
pusha
sbb
jl
xchg
roll
lea
jbe
add
scas
xor
inc
cs
pop
fldenv
xor
adc
jbe
lret
xlat
sub
test
fwait
cmp
add
jb
fimull
sahf
and
rolb
xchg
jp
mov
mov
mov
sub
leave
cmp
cmpsb
mov
sahf
bound
jl
xchg
cs
mov
stos
jl
mov
pop
cmp
lods
xchg
clc
lods
test
aas
test
push
jle
daa
xchg
cmp
cmp
and
pop
sahf
inc
push
ja
movsl
shlb
mov
imul
inc
stos
mov
inc
push
lret
test
ret
mov
push
leave
mov
mov
rolb
jne
inc
mov
jecxz
push
pop
lock
mov
mulb
or
xchg
mov
or
adc
lret
jmp
sahf
push
inc
scas
ja
cmp
xchg
mov
dec
dec
popa
stos
mov
shrb
jl
lahf
imulb
add
movl
xorb
xor
mov
pop
push
cmp
dec
in
call
jl
fsubrp
in
xchg
mov
xchg
fs
mov
lret
loope
sti
leave
push
repnz
and
push
push
sar
sub
in
lods
shlb
ficompl
mov
mov
lds
ret
sub
aas
int3
dec
lret
adc
test
jge
sub
sub
xchg
mov
pop
les
or
jecxz
andl
push
fstps
lea
mov
inc
iret
fcmove
push
outsb
gs
iret
fadds
jp
lret
popa
and
fsubs
mov
jnp
add
mull
and
mov
mov
addb
sub
mov
xchg
lret
jbe,pn
orl
cmp
sub
fldenv
cmpsl
push
inc
xor
jae
daa
movsb
lock
jno
stos
add
mov
js
je
rcrb
jg
loop
mov
rcr
movsl
push
mov
outsl
les
jg
mov
movsb
cmc
push
and
clc
lods
xor
add
cmp
dec
jmp
inc
scas
xchg
lea
imul
call
mov
and
push
jg
and
insb
pop
inc
add
lret
adc
mov
push
xchg
in
dec
sti
sub
xchg
lds
or
mov
xor
jb
xchg
rcll
rolb
adc
add
shr
sahf
mov
iret
cs
mov
out
call
or
or
movsb
mov
pushf
popf
jl
insb
out
add
mov
sar
dec
scas
xchg
aam
mov
aad
jbe
stos
int
cmp
cld
push
mov
dec
mov
push
es
sti
aas
mov
adc
add
cmpsb
pop
jne
cld
dec
in
dec
add
loop
mov
inc
or
jle
jno
ds
pop
jae
add
push
das
adc
cmp
sti
pop
xchg
out
dec
and
inc
push
popf
lds
pop
sub
xor
mov
xchg
lea
mov
add
add
roll
add
and
push
mov
mov
inc
add
jno
test
fimull
iret
pop
popa
push
jns
add
repz
inc
mov
icebp
xchg
mov
repnz
cmp
gs
add
xchg
je,pt
addr16
jo
fsubl
push
sub
cmpsb
loop
cmp
jbe
inc
or
push
push
les
and
xlat
sbb
daa
mov
aas
add
nop
sub
ret
loopne
pushf
lods
pop
loope
dec
lods
out
fistps
jp
mov
sub
adc
lock
daa
pop
fdivl
pop
scas
inc
pop
mov
and
dec
xchg
cs
mov
add
push
adc
imul
add
push
inc
loopne
cmp
mov
xchg
pop
movsl
jle,pn
aas
mov
cmp
fdiv
adc
mov
sbb
and
movsb
push
fists
mov
ljmp
and
and
dec
movsl
bts
out
cld
dec
cmp
lods
out
add
mov
test
mov
aas
lret
sub
inc
pop
das
ds
ss
fnsave
push
je
lea
fwait
idivl
lret
xchg
push
push
push
sbb
xchg
pusha
push
jmp
test
stos
ret
cmp
jp
xchg
cli
scas
fdivrl
lods
sti
add
andl
pushl
xchg
icebp
jns
out
fnstsw
hlt
popf
iret
pushf
or
sub
ljmp
cmp
xchg
cmpsl
pop
out
sub
fwait
lahf
in
outsb
and
shll
shlb
aad
and
lcall
jmp
scas
mov
mov
stos
xor
xor
xchg
push
enterw
dec
int3
idiv
imul
push
xor
jo
pop
sub
xorb
je
and
int
add
push
push
xchg
ja
dec
je
das
push
pushf
mov
cmp
rcr
pusha
sbbl
push
adc
adc
int
jl
or
dec
mov
pop
pop
or
mov
cmp
aad
pop
xchg
sahf
xchg
xchg
xor
push
cmp
mov
or
nop
ja
and
jmp
cmp
push
xchg
mov
cmp
sub
push
popa
mov
inc
xor
inc
ret
xchg
je
fsts
stos
inc
mov
cmp
push
lret
push
addr16
arpl
inc
push
mov
shlb
jae
aad
fidivrs
cmp
cmp
xchg
jg
push
pop
es
pop
add
push
jns
stc
mov
xor
sbb
add
add
mov
sbb
push
or
push
xchg
ja
imul
cld
cwtl
out
jge
outsl
mov
cltd
sbb
inc
ljmp
pop
lods
cwtl
push
or
shlb
sbbl
rolb
enter
xchg
rcrl
bnd
outsl
dec
mov
cmp
test
shld
mov
imul
jnp
and
mov
inc
and
add
dec
fbstp
push
aas
insl
test
jo
push
decb
fldt
cmp
test
or
movsl
mov
jge
cmp
xchg
insl
lcall
or
into
das
xor
cmp
or
adc
dec
or
cs
and
xchg
cwtl
pop
xchg
aad
arpl
mov
sbb
inc
dec
push
dec
push
jne
or
jae
mov
adc
sub
insl
cltd
and
andb
cmp
call
mov
fs
cld
or
dec
xchg
or
mov
nop
push
xchg
test
dec
mov
enter
jne
push
sbb
loope
cmc
stos
js
mov
mov
sbb
arpl
jg
pop
cltd
xchg
gs
lods
add
notb
mov
adc
push
rol
scas
jecxz
dec
jnp
aad
inc
mov
and
pop
out
push
in
dec
cwtl
or
mov
adc
xchg
adc
loop
out
sbb
rcll
out
jge
popf
mov
and
roll
movntps
cld
push
fs
lret
fwait
daa
or
popf
mov
fwait
loopne
mov
in
mov
cltd
fimuls
xor
mull
xor
push
mov
add
jns
mov
xor
dec
mov
mov
arpl
sub
les
and
outsl
jg
xchg
pushf
in
movl
cwtl
xchg
in
roll
sti
lods
out
xor
add
mov
or
add
sbb
xor
je
pop
push
and
mov
mov
mov
lods
inc
xorb
cmp
leave
or
push
out
xchg
test
xor
dec
push
mov
bound
mov
push
mov
repz
cmc
sar
testb
xor
lds
adc
daa
push
lock
pop
xor
jmp
aaa
dec
and
push
outsl
pushf
xor
mov
xchg
pop
xor
dec
jno
lea
xor
enter
pusha
rcl
sub
sbb
xlat
jns
cli
shl
fs
jle
fdivrs
call
push
jge
lods
ja
lds
in
cmpsb
dec
loop
and
scas
and
sub
ror
fcmove
rcl
loope
sti
cmp
adc
imul
popa
mov
mov
mov
je
out
fmull
f2xm1
je
insl
push
mov
add
pop
mov
jl
fistpl
sub
pusha
add
mov
mov
pop
ret
es
xor
pop
loope
add
adc
fdiv
popa
outsl
das
ss
in
xchg
push
test
pop
mov
loop
movsb
lahf
jge
push
addb
or
loopne
call
sub
movsl
sbb
jns
push
jo
das
add
out
adc
cmp
push
sub
aam
frstor
movsl
notb
mov
cwtl
cmp
es
jge
dec
sbb
add
lcall
sbb
mov
rcr
movsl
movsb
rclb
xchg
pop
test
movl
pushf
fdivs
xchg
cmp
xlat
sbb
sbb
mov
mov
push
xor
sbb
jo
and
in
test
out
or
fisubs
xor
xor
fsubr
in
and
fsubl
daa
scas
dec
mov
and
lock
loope
pop
push
add
insl
jp
dec
or
jge
stos
mov
sahf
jo
shrb
push
inc
sahf
shl
push
fcomp
leave
loope
in
fdivl
and
loop
gs
mov
mov
stos
dec
push
sub
jne
and
mov
imul
repnz
push
dec
mov
iret
inc
outsb
dec
mov
fucomi
int
je
xor
out
call
shlb
insl
stc
push
xchg
addr16
pop
sbb
imul
movsb
mov
int3
mov
lret
out
bound
or
push
mov
ss
adc
int
mov
push
mov
shl
div
mov
mov
fwait
xlat
and
mov
jb
out
mov
jnp
mov
lods
jbe
push
movsb
outsb
ljmp
cmpsb
and
dec
out
lds
dec
inc
ss
jle
push
aas
outsl
popf
jae
or
mov
fisttps
sub
aam
mov
in
test
sbb
xchg
mov
or
dec
nop
int3
inc
leave
xchg
mov
ja
cmc
int
mov
scas
sub
mov
xchg
add
push
dec
ss
mov
or
shll
pusha
xchg
add
sub
arpl
paddusw
es
push
mov
cwtl
lock
into
mov
pushf
lcall
cmpsl
mov
int
movsl
pop
dec
jne
sbbb
adc
push
push
popa
push
cmp
dec
icebp
sub
test
lds
dec
icebp
dec
sbb
bound
std
cmp
adc
dec
sub
fwait
int
outsb
sub
fstp
into
cs
loope
test
jle
ja
insb
or
aad
faddl
addl
outsl
jne
sub
mov
bound
xor
repz
sbb
es
aas
xor
cli
into
adc
insb
cwtl
or
not
arpl
addr16
push
imul
fidivl
lods
stos
sti
cmp
push
and
mov
sti
or
cltd
rcrl
call
dec
imul
fwait
mov
mov
xchg
int
sti
sub
xchg
jae
xlat
or
xlat
add
pop
dec
or
adcb
jne
pop
lahf
das
lods
in
mov
adc
xor
cli
data16
mov
pop
jnp
push
pop
cld
lahf
shlb
imul
push
insl
insl
mov
ret
push
pop
mov
xor
cltd
and
mov
fisttpl
movsl
fdivl
lods
xchg
inc
add
sbb
mov
sub
mov
cmc
and
sub
add
ds
rolb
lcall
jp
add
ja,pt
xchg
clc
mov
clc
rcrl
cmp
in
xor
sbb
push
aam
ss
sahf
cmp
lds
leave
mov
push
sub
ss
bound
scas
dec
fimuls
push
push
jnp
or
lods
cmp
dec
lods
xor
data16
mov
addr16
sub
push
aam
dec
sbb
push
mov
push
jno
insl
xchg
push
xor
rcl
push
ja
inc
adc
and
rcrb
test
sbb
inc
push
out
or
cmp
cli
sub
lods
lret
pop
pop
fnsave
dec
pop
adc
adc
adc
push
lcall
out
dec
mov
dec
dec
shlb
out
and
movsl
jge
adcl
sbb
imul
jle
inc
nop
test
aad
adc
cmp
sti
dec
stos
das
pop
clc
jo
add
cmp
rorl
aas
jo
cltd
jno
xorb
mov
bnd
adc
adc
popa
sub
cld
pushf
sti
mov
rcrb
sbb
sti
addr16
and
push
stc
movsb
mov
loopne
out
sub
jo,pt
into
mov
jmp
dec
loop
pushf
mov
xlat
xor
sub
out
inc
jbe
jno
idivl
aad
jle
scas
sbb
loopne
lcall
sub
insb
inc
push
data16
test
lods
mov
ss
push
arpl
lret
pop
mov
imul
gs
push
in
daa
dec
divb
push
sti
outsl
xchg
xchg
imul
mov
adc
aaa
xchg
pop
into
bound
je
jo
inc
mov
xchg
inc
pushf
repnz
push
mov
sti
rcrb
xchg
imul
adc
popa
xor
jmp
or
cmp
jo
lods
inc
push
sti
arpl
xchg
or
xchg
fdivl
int3
fcmovu
jo
loopne
cmp
or
sub
adc
arpl
cld
bound
in
stc
andb
stc
jecxz
xchg
imul
fmull
cli
stos
cmpsb
lahf
jo
xor
lret
mov
push
sarl
mov
int3
xlat
call
sti
ficompl
je
xchg
dec
cmp
adc
scas
and
push
pop
les
das
push
and
scas
xchg
dec
loop
inc
es
scas
add
pushf
pushf
pop
xchg
dec
pusha
or
imul
sbb
push
mov
lods
pop
inc
jb
shl
lret
push
repz
add
popf
je
inc
jmp
xchg
xchg
adc
lods
es
cmp
addl
jnp
sahf
dec
pop
jb
mov
scas
aam
xchg
xchg
test
jno
fs
js
push
jg
dec
ss
adc
and
push
jp
xchg
icebp
pop
mov
pop
add
mov
push
jl
dec
xchg
and
adc
dec
push
or
jge
mov
loope
xchg
testl
rcrl
cmp
cld
mov
adc
insb
stos
jle,pt
js
push
adc
push
sbbl
adc
push
xchg
xchg
inc
gs
les
fildll
data16
cmp
push
outsb
xchg
cwtl
dec
mov
int3
mov
stos
push
cwtl
mov
and
aaa
lds
movsb
jne
mov
inc
pop
movl
mov
jae
mov
sub
sbb
sahf
pop
or
mov
cmp
lds
mov
fstl
or
inc
js
jge
outsl
mov
outsl
push
cld
inc
adc
test
mov
in
adcl
cmp
and
aam
sub
mov
sarb
push
xor
jo
inc
sub
imul
xlat
les
loope
in
test
imul
adc
lret
sahf
popf
mov
xor
sbb
int
adc
rolb
mov
hlt
mov
nopl
push
aad
aas
push
pop
into
addr16
xchg
sti
ret
sbb
cld
jbe
sub
push
pminsw
mov
push
xchg
outsb
jg
imul
outsl
ret
cmpsl
inc
mov
adc
xchg
sub
or
inc
subl
xor
insl
or
dec
mov
orl
adc
xor
jle
movsb
jns
jae
jge
sub
mov
mov
xchg
jbe
cmp
xchg
fisubl
xor
sub
push
dec
dec
ss
mov
inc
sahf
xor
rclb
addr16
inc
mov
sbb
aam
inc
add
push
rorb
pop
mov
fldt
pop
ficompl
lret
adc
jo
push
sub
fucomip
mov
testl
jnp
dec
lods
movsb
pop
sbb
fwait
scas
inc
imul
push
adc
fdivr
cltd
push
or
test
rclb
xor
ficoml
sub
and
mov
pop
loope
jno
sbb
push
in
lods
fcmovne
lret
jno
xchg
fists
jmp
pop
test
mov
cwtl
adc
or
inc
icebp
pop
arpl
cmp
subl
adc
mulb
inc
in
cmp
cs
loopne
and
add
nop
insl
mov
xchg
mov
scas
fbld
fimuls
mov
dec
adc
mov
push
xor
mov
inc
push
xorb
loop
push
pop
push
addr16
std
shl
jns
pusha
sub
sbb
jmp
pop
mov
dec
movsl
mov
add
dec
stos
mov
in
cmp
loopne
mov
lea
push
sub
aas
adc
int3
fcmove
push
mov
add
fdivl
ret
rorb
negb
test
mov
and
sub
imul
js
std
movsl
push
std
inc
jb
xchg
mov
inc
negl
ja
gs
add
and
stos
adc
stos
dec
push
pushf
push
jp
cmpsl
xor
xor
ret
sub
idivl
fsubs
adc
xor
bound
fwait
repnz
repz
jp
pop
inc
popa
ss
ret
ret
imul
enter
clc
xor
mov
and
clc
and
jl
test
mov
push
or
call
lods
cli
sbb
pop
aas
jno
loopne
aaa
inc
pushf
sbb
push
jbe
cld
ja
cmc
sbb
lds
jp
out
pop
xor
gs
or
out
loop
cmpsl
xchg
jnp
push
mov
andb
mov
and
jmp
int3
imul
xchg
add
inc
push
xor
or
add
jns
xchg
andb
and
jp
leave
mov
loop
jmp
inc
int
fs
xchg
dec
enter
jmp
push
and
leave
outsb
fidivs
adc
jbe
das
jo
mov
adc
in
pop
jge
xor
mov
cmpsl
mov
add
push
data16
inc
push
cmp
dec
mov
pop
add
cmp
mov
mov
stos
xchg
out
dec
ds
push
imul
sub
aam
data16
and
or
pop
mov
mov
dec
lods
sub
scas
and
xchg
shl
cmp
xchg
add
shr
arpl
fcoms
sbb
mov
mov
ficompl
ret
cmpsl
push
mov
cltd
mov
lret
dec
mov
sub
ljmp
decb
push
shll
jp
xlat
lods
cmpl
sbb
xchg
and
jle
in
fs
ret
xchg
sti
pop
imul
cmp
call
push
shll
mov
cmpb
pop
aas
imul
xchg
sti
adc
cmc
gs
push
dec
add
pop
std
cmp
xor
or
mov
xchg
sbb
fcoml
dec
sub
jge
cmp
pop
adc
mov
jnp
mov
lds
xchg
mov
sub
movsl
unpckhpd
aaa
out
mov
cwtl
add
mov
add
mov
add
pop
xchg
inc
addl
sub
int3
repz
push
inc
lret
out
test
dec
cmp
insb
push
inc
or
mov
pop
jb
bound
sub
lea
jecxz
decl
imul
imul
data16
xor
or
xchg
add
pop
push
mov
xor
inc
out
jmp
mov
mov
cwtl
pop
test
cmp
fsubrs
pop
mov
jge
xchg
pop
xor
add
add
add
imul
add
jns
insl
add
insb
add
add
add
insl
outsw
jb
add
add
add
add
data16
popa
add
add
bound
imul
jae
add
add
add
jae
add
add
data16
add
add
insb
add
add
add
add
add
imul
jne
jae
je
imul
sub
add
add
add
add
outsl
add
add
jbe
add
add
imul
outsl
add
popa
add
arpl
add
add
add
insb
add
add
add
inc
add
add
push
add
jb
outsl
add
add
add
outsb
add
add
jb
add
bound
imul
jb
add
jae
imul
add
add
add
add
add
je
outsl
jb
imul
add
add
insl
add
add
add
je
add
push
add
add
add
arpl
imul
add
outsw
jb
add
outsb
imul
add
add
je
gs
add
add
add
bound
jne
je
add
jns
jne
add
outsb
insb
add
jb
imul
add
add
add
insl
add
add
add
add
inc
add
jb
add
add
add
add
insb
popa
push
add
jae
add
add
add
add
jb
