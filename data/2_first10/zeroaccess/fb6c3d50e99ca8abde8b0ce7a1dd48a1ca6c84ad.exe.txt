push
mov
sub
xor
jmp
into
rcr
aad
mov
test
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
lret
enter
fadds
test
cltd
stos
xchg
nop
lods
jae
iret
mov
outsb
cmpsb
push
divb
inc
test
or
nop
sub
sbb
subl
popf
pop
bound
dec
mov
or
sub
in
push
jnp
outsb
rorl
fnstcw
jp
out
mov
or
sbb
sbb
jmp
and
mov
mov
push
jns
push
mov
push
lods
mov
out
sub
int3
adc
inc
inc
cmp
test
adc
jge
inc
mov
inc
jl
mov
jg
cli
int3
and
in
xor
or
mov
pop
lahf
push
inc
scas
fsubrl
addr16
and
jp
mov
mov
jle
xor
xor
jp
cld
pop
xchg
mov
cltd
jbe
ficompl
cmp
xchg
or
mov
pusha
mov
and
cmp
mov
pop
aaa
dec
scas
out
pop
popa
fcmovnb
pop
sahf
stc
adc
daa
pusha
push
jge
gs
dec
sub
enter
cmc
adc
xchg
add
andl
iret
mov
imul
sub
push
bound
movsb
sahf
in
std
and
inc
xchg
fisubl
lods
push
daa
loop
jae
ret
mov
out
add
push
repnz
mov
fnstcw
inc
mov
jae
jmp
inc
dec
fisubrs
lods
xchg
cli
add
movsb
divb
push
pop
pmaddwd
pop
and
pop
lods
pop
and
test
jg
push
fstpt
ljmp
inc
add
add
add
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
shrb
js
jle
js
cmc
arpl
sub
lds
push
jmp
xchg
icebp
int3
arpl
sbb
jecxz
cld
iret
je
jnp
and
hlt
and
enter
scas
scas
push
jns
cmp
mov
xchg
call
add
in
jbe
jnp
fsub
addr16
lods
repz
shl
inc
dec
cmp
loop
dec
sarb
movsb
jne
subb
pop
out
cltd
faddl
out
and
out
imul
mov
dec
sub
jo
shl
xor
xor
add
dec
hlt
pop
call
adc
jl
ja
inc
lock
into
loopne
insl
sbbb
insb
out
call
sbb
addr16
movsl
in
sbb
insb
data16
stc
mov
mov
icebp
cmp
int3
js
lock
andb
iret
mov
sbbl
inc
jl
nop
push
enter
adc
cmpsb
pop
test
lds
insl
loope
mov
xor
or
push
sub
jo
inc
inc
mov
inc
fldz
mov
scas
sub
fildll
shl
lret
xchg
mov
aad
sub
mov
out
jae
sub
mov
test
or
stos
cmp
mov
pop
jns
xchg
sub
fcompl
pop
push
xchg
movsb
mov
test
aaa
insl
jecxz
cli
cli
mov
scas
pop
daa
jmp
outsb
outsb
sahf
push
add
pushf
pop
push
lea
leave
inc
lods
rcrb
lret
sub
std
mov
arpl
test
data16
dec
loopw
cli
test
bound
das
int
mov
and
and
push
jg
daa
stos
dec
sub
adc
ljmp
lods
sarb
enter
iret
popa
inc
mov
data16
or
insb
int
lahf
push
and
sub
imul
cmp
sub
es
adc
xor
dec
ret
sub
and
cmp
cmpl
lock
outsl
or
int
daa
jge
sbb
js
addr16
push
push
js
imul
mov
xchg
push
add
pop
jae
mov
loopne
int3
xor
dec
mov
test
fnsave
xchg
mov
add
push
movl
add
cmpsl
inc
add
imul
lock
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
scas
jl
js
jle
js
inc
test
mov
inc
add
jge
push
and
push
daa
imulb
hlt
jbe
mov
std
gs
imul
jb
cmpsb
fcmovne
out
stos
out
jne
jae
cmc
push
out
mov
and
bound
xor
add
roll
shr
cmpsl
shrb
sub
inc
dec
inc
sub
xchg
adc
in
mov
es
xchg
jo
sub
push
fbld
mov
xchg
sub
aad
aaa
sub
mov
in
xchg
cmp
cmc
sbb
sbb
mov
movsb
mov
adc
not
adc
push
in
js
out
xchg
push
pop
pop
xor
or
mov
sbb
jmp
js
inc
dec
in
leave
addr16
int
sarl
cmp
lretw
lea
lea
or
outsl
sbb
add
fucomp
jp
cmp
add
imul
jbe
mov
lahf
aaa
sbb
xchg
ficompl
and
xor
push
aas
aaa
test
push
mov
cmp
mov
dec
rcll
sub
pop
inc
repz
push
stos
pop
cmp
cmp
pop
lock
jo
inc
cld
leave
shll
jecxz
push
cltd
mov
xor
fimuls
lcall
ja
enter
mov
int
cmp
xchg
aam
add
cwtl
jmp
mov
popa
packssdw
shlb
fcompl
call
pop
clc
add
mov
xor
or
lds
xchg
lahf
or
in
mov
fsubp
mov
dec
xor
jnp
push
hlt
loopne
xchg
addr16
sub
negb
dec
fnstenv
jmp
jmp
jb
ja
shlb
or
sbb
xor
pop
mov
add
push
repnz
mov
jle
imul
stc
dec
jae
test
push
adc
sbb
mov
ds
es
jmp
push
xchg
inc
or
stc
je
or
cmc
adc
jne
cmpl
inc
hlt
mov
stos
out
pop
dec
dec
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
sub
xchg
js
jle
js
cmpsb
adc
ret
cli
jp
fidivrl
jge
in
jp
sbb
and
fnstcw
sub
fisubrl
shlb
jae
lcall
lods
mov
xchg
out
add
and
lcall
mov
pop
aam
rcll
in
lret
andb
cld
mov
jmp
xor
sbb
lcall
ret
add
jnp
push
xor
insb
mov
fldz
add
mov
pop
xchg
xchg
nop
mov
push
xorl
pop
aaa
sub
gs
test
or
jno
inc
mov
popa
mov
push
fnstcw
xchg
xor
mov
mov
sub
xor
bnd
mov
or
push
pushf
insl
es
lret
push
in
push
mov
push
ret
mov
cmpsb
mov
pop
xor
insb
scas
or
xor
fidivrs
outsb
xor
add
fldl
or
imul
cmp
mov
and
xchg
pop
lcall
inc
jb
int
imul
mov
test
stc
push
dec
popf
stos
sbb
repz
data16
mov
add
sub
stc
in
adc
outsl
sbb
ljmp
shl
movsl
mov
lods
mov
cmp
xor
mov
add
pop
xor
mov
mov
pop
jno
mov
in
les
push
pop
enter
shrl
ss
enter
fdecstp
ja
jbe
mov
test
sub
push
pop
movsl
addb
xor
jp
lea
jno
repz
push
adc
stc
jb
popl
cmc
pop
int
daa
adc
daa
pop
aad
adc
lds
dec
cmp
push
adc
comiss
mov
push
mov
pop
mov
xchg
mov
aas
dec
cmp
sub
es
emms
mov
icebp
jo
clc
jnp
mov
fmull
les
or
hlt
scas
lret
fwait
ljmp
cmc
in
mov
fldcw
lahf
mov
ret
ret
test
inc
loopne
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
push
js
jle
js
pop
lcall
out
pop
mov
push
mov
or
out
lock
pop
xorl
sub
lock
mov
xor
push
add
hlt
inc
adcb
pop
aam
int3
popf
loopne
enter
add
out
ret
sub
add
or
leave
pop
sbb
mov
adc
dec
jo
sub
repnz
xchg
leave
add
js
bswap
push
pop
xchg
dec
jge
push
and
inc
shll
jae
mov
insl
sbb
pop
push
je
in
jae
or
cs
call
and
or
xchg
adc
pop
xchg
jecxz
outsb
xor
out
out
xchg
out
and
pop
and
shlb
push
cmpsl
xchg
and
lds
test
xor
lds
addr16
test
imul
sub
fimull
mov
jp
or
sbb
jbe
out
add
out
arpl
sub
push
shlb
push
cmp
mov
data16
insl
ret
add
jmp
push
dec
dec
adc
jecxz
sti
ja
push
repz
jg
jmp
lds
cltd
jl
xor
pop
loopne
and
sti
cs
cld
cmp
dec
arpl
jge
inc
jno
jmp
cwtl
jb
movq
xchg
xchg
xchg
xchg
sub
fwait
std
cmp
pop
and
leave
mulb
pop
imul
sbb
mov
jnp
jno
js
adc
cmp
jmp
and
out
jge
cmp
aad
inc
enter
inc
je
dec
lahf
xor
jg
or
jns
out
cltd
inc
rolb
daa
imul
mov
sbb
fmuls
pop
jae
mov
add
jl
mov
inc
arpl
repnz
pushf
sub
mov
cltd
mov
jb
xchg
out
push
push
xor
in
xchg
or
jl
stc
inc
mov
repz
sbb
rclb
mov
enter
inc
call
add
sbb
cmp
repz
mov
std
dec
idivb
movsb
mov
xchg
add
adcl
ret
cmp
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
xrelease
js
jle
js
in
in
rclb
adc
xchg
xor
sbb
popf
leave
push
fnstenv
outsl
dec
adc
mov
and
cmp
lods
stos
mov
inc
mov
cmp
sbb
cmpsb
pop
lods
jg
int
add
jne
mov
mov
dec
cmp
xor
lahf
add
fmuls
push
inc
push
mov
insl
sbb
adc
cmpsl
mov
bt
hlt
jp
dec
pop
cwtl
int3
idivl
and
test
insb
cmc
idivl
dec
adc
add
mov
sub
insb
repnz
addr16
shlb
jp
test
imul
out
iret
and
clc
aas
dec
imul
xor
or
xor
xchg
gs
or
mov
mov
in
nop
cmp
xchg
loope
push
shll
loope
and
hlt
out
fsubr
or
out
fwait
push
mov
lods
sub
mov
add
shl
lret
xchg
mov
jae
test
sub
dec
nop
aas
test
xor
or
mov
push
cmp
pop
sti
inc
xor
loopne
mov
mov
scas
jl
jmp
push
inc
push
jmp
scas
mov
mov
dec
testb
dec
adc
daa
cmp
mov
scas
movsb
inc
add
adc
daa
movsl
outsl
test
xor
cmpsb
outsb
rcr
iret
sub
cmpsb
mov
or
jg
push
out
dec
movsb
fwait
data16
cmpsl
cmp
cmp
pop
enter
mov
in
jmp
push
cmc
cmp
dec
mov
cltd
sbb
inc
shrb
iret
push
fildll
xor
addb
sbb
push
push
or
cltd
xchg
xchg
jmp
push
sarl
jae
sub
cmpsb
jo
ret
fs
out
cmc
scas
ss
cld
popa
jnp
bnd
roll
ja
in
jae
mov
cmc
dec
or
push
inc
ja
jnp
push
xchg
mov
or
mov
and
push
hlt
inc
pop
mov
xlat
jne
mov
outsl
dec
in
push
mov
pop
xor
rclb
push
in
lea
ja
ss
dec
fwait
sub
stc
jo
imul
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
add
pushf
add
js
jle
js
add
inc
mov
push
jg
cmp
mov
hlt
push
push
std
test
mov
push
push
jp
lods
out
jp
sti
sbb
xor
xchg
dec
pop
mov
testb
shll
divl
jo
mov
mov
mov
pop
in
mov
push
insb
je
fdivrp
sub
or
mov
xchg
push
dec
dec
push
subb
pusha
je
xor
negb
aaa
paddd
sbb
cmp
dec
xchg
das
pop
lods
jle
cmp
ret
stc
incl
xorb
jmp
mov
fwait
and
xchg
inc
dec
push
outsl
imul
jecxz
stos
mov
sbb
jae
popa
add
cmp
xor
in
shlb
pop
hlt
enter
ret
mov
mov
data16
loopne
cli
ljmp
gs
mov
leave
sub
dec
cmp
mov
scas
inc
sub
ljmp
arpl
jecxz
and
add
rcr
addr16
jns
mov
ret
out
inc
or
adc
outsl
cmp
clc
rcr
dec
cmc
jne
imul
jl
jl
mov
or
mov
xchg
cmp
mov
pop
push
or
push
jecxz
xchg
out
fs
sbb
pop
jns
xor
adc
roll
cmp
mov
pop
fwait
cs
lds
jb
scas
push
inc
dec
scas
xchg
mov
sub
lret
pop
sub
dec
sub
xchg
in
push
out
dec
cmp
add
imul
or
inc
xor
pushf
xchg
test
je
push
xor
fldenv
jb
repz
mov
pop
pop
das
xor
mov
xchg
xchg
mov
pop
mov
fmuls
stos
mov
add
xor
add
iret
mov
jno
inc
mov
shll
xchg
adc
or
xchg
je
sbb
add
cli
xor
mov
xor
es
and
jl
sub
clc
cmp
neg
arpl
mov
insl
sti
jge
mov
push
mov
and
xchg
add
lahf
aad
ljmp
jb
push
jg
popa
enter
pusha
movsl
pop
lea
add
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
inc
orb
js
jle
js
aam
iret
mov
mov
mov
inc
jnp
ret
movb
lcall
mov
sbb
xchg
mov
jb
negb
inc
push
jnp
push
ljmp
cmp
and
and
out
imul
push
cmpsl
sub
aas
lds
mov
xchg
scas
xchg
inc
outsl
push
sbb
sbb
push
sub
int3
arpl
xlat
dec
iret
push
pop
ficompl
lock
xlat
hlt
mov
or
or
cmpsl
lds
adc
sti
pop
jle
imul
imul
arpl
adc
push
xlat
xor
xor
lods
pusha
movsb
fstpt
popa
cmp
ret
dec
dec
arpl
das
adc
aam
andl
xchg
push
lahf
mov
mov
lcall
jp
pop
ret
xor
jb
fisubl
lea
out
in
push
jb
outsb
sbb
out
cli
imul
insl
sub
ja
sbb
adc
jle
sub
adc
movsl
hlt
mov
and
xchg
xchg
mov
push
dec
imul
imul
iret
sub
loop
cmp
fiaddl
int
ret
sar
and
fstpl
test
hlt
gs
lret
pushf
cmp
mov
movsb
sahf
mov
out
ficomps
subl
mov
cli
pop
dec
movsb
adc
push
enter
push
mov
push
xchg
hlt
and
divb
notb
orb
fildll
add
js
jg
jmp
fnstenv
hlt
xor
add
or
dec
cmpsb
idivl
cmp
mov
pop
stos
fwait
lret
mov
mov
cmp
mov
or
and
adc
std
xchg
imul
lret
popf
inc
les
data16
pop
cmc
pop
mov
cltd
add
test
shll
sbb
pop
fwait
cmp
fucomp
jp
xor
inc
mov
sahf
shlb
pop
aam
add
sub
or
test
cmp
hlt
xchg
sbb
jbe
add
outsb
mov
lea
pop
inc
arpl
pop
stc
jo
and
addb
jmp
nop
fisttpl
adc
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
cmp
or
js
jle
js
push
adc
pop
movb
div
sbb
ss
bound
aam
jg
add
cmpsl
sub
arpl
dec
cltd
xor
xor
mov
popf
call
test
pop
stos
xor
jnp
imul
sub
out
xor
stc
daa
xor
push
adc
mov
cli
dec
not
fs
std
sub
cltd
repz
push
jmp
mov
aas
bound
pop
rcl
enter
dec
stos
outsl
popf
and
sub
pop
inc
sub
leave
cmpsb
mov
or
mov
pop
andl
out
xor
sbb
nop
adc
les
mov
jmp
test
push
sbb
mov
push
push
jbe
pushf
repz
mov
and
fwait
imull
fcomi
test
push
xchg
xchg
js
mov
fldl
pop
cmpsl
scas
cld
mov
jae
push
cmp
mov
mov
xchg
push
jecxz
jg
lahf
divl
pop
sub
lock
mov
lahf
and
cmp
stc
leave
mov
rorl
daa
inc
mov
sub
sub
jmp
cltd
fwait
or
ljmp
sub
mov
xor
cmp
jge
add
movsb
inc
mov
addl
xor
cmp
xchg
sub
adc
or
pusha
pop
pop
mov
push
or
mov
loope
inc
jp
mov
das
or
cmp
add
adc
or
mov
ljmp
xchg
mov
xorb
mov
imul
in
adc
xchg
jns
mov
push
out
enter
mov
cli
mov
test
scas
mov
sub
xchg
dec
cwtl
mov
xor
rcll
jnp
push
dec
mov
adc
pushl
pop
outsl
and
shrl
push
xor
pop
adc
and
or
repz
je
popf
pop
in
addr16
in
dec
dec
ja
mov
negb
inc
cmp
xchg
mov
jp
sar
sub
or
das
sbb
outsl
add
push
lret
dec
loopne
mov
inc
push
loop
cmp
pop
aas
pop
ret
ljmp
or
iret
jns
adcb
fdivrl
ret
add
jmp
ror
int
rcr
aad
bound
mov
sti
test
jle
js
jge
jecxz
fstl
into
dec
push
fnstenv
pop
mov
mov
or
in
shrl
scas
and
jae
call
xchg
cwtl
clc
outsb
repz
mov
ret
push
xchg
jle
jae
outsl
xchg
add
mov
inc
into
or
neg
aad
push
pop
sub
jns
fdivrp
mov
gs
cmp
ljmp
out
cmc
sti
cmp
dec
fwait
jnp
dec
lret
lods
or
imul
dec
lcall
insb
outsl
jmp
bound
jle
repz
add
jo
xchg
adc
xor
jg
cmp
negl
mov
jns
shrb
push
mov
sarb
xor
pushf
out
sarb
scas
stos
push
add
mov
pop
lahf
push
cmp
mov
sbb
add
iret
adcl
add
shrb
jb
test
xchg
mov
xor
mov
fadds
add
je
int3
lret
cmp
add
fadds
roll
pusha
and
cli
test
sub
xlat
add
out
adc
sub
jb
push
les
fwait
inc
ficoml
jle
add
ds
in
int
sbb
pop
and
ss
loop
jno
push
testb
das
lea
dec
fldcw
push
test
sub
adc
mov
mov
sbb
ret
jecxz
cwtl
sbb
sbb
movl
mov
addps
mov
iret
test
or
roll
and
fcoml
jg
xor
rcr
shr
sbb
cwtl
adc
mov
add
mov
cltd
dec
inc
in
in
in
sub
jle
lods
jl
mov
jns
arpl
adc
dec
scas
mull
cmpsl
inc
jecxz
mov
repnz
pop
aas
jno
insl
pop
xor
push
js
push
lret
sub
sub
and
call
fcoml
xchg
pusha
fs
jnp
cmp
mov
push
jnp
js
scas
pop
and
leave
lds
inc
movsb
aam
adc
pop
scas
popf
push
dec
mov
pop
into
mov
sub
rcll
iret
dec
lods
daa
mov
xchg
jb
sbb
iret
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
out
pop
mov
or
js
jle
js
mov
fwait
cmp
clc
mov
push
xor
xor
push
pop
inc
arpl
pop
in
daa
ss
dec
adc
mov
add
out
in
faddl
jg
imul
dec
ljmp
fldln2
cmp
pop
movsl
repz
out
pop
fsubl
xchg
push
mov
mov
add
out
insb
nop
jb
push
into
xchg
hlt
pop
xchg
gs
add
xor
in
mov
xchg
test
and
fcomps
stos
das
stos
dec
cmp
cld
loope
mov
sbb
xchg
or
lods
add
mov
xchg
ja
adc
or
test
mov
sub
loope
push
jmp
and
sahf
mov
adc
xchg
xchg
dec
lcall
pop
sub
loope
xor
pusha
sbb
adcl
sub
adc
jmp
mov
fcomi
clc
sbbb
cmp
scas
shll
dec
push
dec
jo
daa
and
inc
jmp
xor
sub
movb
mov
js
xchg
out
or
lods
jnp
mov
mov
inc
fiadds
jecxz
sub
mov
adc
jb
popf
repnz
fcomps
or
jns
add
jmp
inc
stos
aaa
pop
mov
inc
sahf
sbb
movsl
jg
cs
inc
dec
sti
fcmove
in
test
xor
push
mov
or
inc
nop
ja
ja
dec
or
fwait
movsb
repz
dec
and
xchg
js
leave
aam
lret
dec
pop
call
dec
xor
adc
aas
jmp
xorb
inc
mov
flds
adc
sub
jno
and
nop
adc
push
adc
mov
dec
dec
ret
vmread
pop
call
cmc
shl
shll
subb
xchg
aad
add
pushf
lods
xchg
das
cli
fisubs
cmp
cmpsl
jmp
push
cs
mov
xchg
mov
cld
out
rcrl
mov
push
cmc
xchg
loop
mov
mov
clc
scas
and
xchg
cli
addr16
fwait
popf
aas
mov
sahf
inc
pop
sbb
pop
add
dec
xlat
das
daa
xchg
xor
scas
mov
inc
or
add
add
int3
ror
ror
test
xchg
push
insb
add
xchg
adc
js
mov
xchg
dec
je
dec
arpl
adc
in
cltd
pop
scas
mov
sbb
pop
daa
call
or
and
xchg
jb
mov
xor
decb
call
adc
inc
push
pop
inc
repnz
test
xor
push
jns
and
rcl
mov
fldcw
sbb
adc
ja
pushf
iret
jecxz
jo
test
loop
mov
cmpsb
fcmove
and
or
repnz
in
mov
and
add
mov
arpl
jb
dec
les
fsubr
roll
scas
testl
cs
mov
dec
jb
pop
push
mov
adc
fcomi
pop
push
inc
es
or
imul
fs
cmp
int
sbb
mov
xlat
fnstsw
sbb
jnp
xchg
out
repnz
lds
fldt
sub
jmp
or
out
lcall
mov
test
pinsrw
sbb
into
iret
jns
lock
pop
lock
cmpsl
pop
es
cmp
das
data16
hlt
fsub
orl
mov
aaa
pop
ja
lods
cmpsl
movsl
pop
das
sarl
ret
sub
add
push
adc
ds
lea
outsb
add
mov
mov
addr16
aaa
jns
jle
mov
push
xor
dec
scas
mov
sbb
fmuls
inc
shrb
nop
xchg
pushf
xor
outsb
daa
es
es
enter
push
out
dec
and
imul
mov
ja
adc
lea
ja
or
je
loop
fsubrl
pop
repnz
or
ds
rolb
sub
jecxz
sbbl
xchg
sbb
adc
insl
pop
push
cwtl
mov
jle
mov
test
scas
mov
mov
aas
scas
stos
bsf
idivl
sub
clc
stos
outsb
and
fdiv
arpl
fstp
pusha
mov
cmp
mov
jl
adc
out
xchg
mov
xor
popl
flds
pushf
add
xor
cld
xchg
lahf
insl
xlat
in
testl
in
cwtl
fmull
aas
loop
sub
icebp
or
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
cmp
js
jle
js
lahf
aad
loope
jae
loopne
and
fldl
cmp
mov
jl
jb
jp
fcomps
repz
or
add
sbb
cmp
inc
push
add
jg
scas
les
lods
and
xchg
add
inc
aad
and
fsubrl
repz
cmp
test
mov
dec
sahf
iret
sbb
decl
mov
lahf
sbb
lcall
lock
std
shll
fildl
cltd
cmp
xchg
inc
mov
rcl
nop
xchg
add
xchg
insl
xchg
sti
mov
cmovle
xchg
dec
push
jb
add
dec
ds
pop
in
inc
insl
sub
sbb
mov
and
into
add
in
sub
fwait
jno
xchg
mov
imul
loop
or
adc
test
push
xor
std
dec
mov
fld
jecxz
clc
push
mov
call
leave
divb
aas
int3
xor
lcall
movsb
sahf
adc
mov
lods
push
fldcw
push
dec
lds
leave
sahf
test
jp
pusha
pop
and
std
test
sbb
sbb
out
xchg
call
lcall
and
cmp
lret
in
xor
mov
stc
sub
les
roll
jno
stc
jno
fwait
cmp
jo
sub
daa
push
pop
and
movsb
scas
hlt
and
sti
mov
bound
adc
inc
adc
sbb
mov
ficompl
add
xchg
js
mov
jns
dec
fldcw
movsl
dec
fisttpl
scas
loopne
pop
cmp
sub
dec
cmp
xchg
pop
mov
pushf
adc
outsb
and
movsl
clc
sbb
cmp
clc
lahf
xor
mov
xor
shrb
les
decl
sbb
jns
lods
mov
in
cli
mov
sbb
jmp
inc
hlt
loop
add
sbb
loopne
add
push
dec
pop
lret
outsb
inc
out
out
pop
lock
sub
inc
in
or
shld
ja
lahf
test
in
mov
mov
dec
sbb
je
xor
jbe
mov
add
lods
testl
mov
scas
popf
int3
call
jb
push
loop
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
stos
out
stc
mov
sub
shlb
fwait
mov
adc
jo
insb
mov
push
js
scas
and
cmp
pop
aaa
inc
cwtl
in
call
dec
daa
inc
xor
sbb
in
jne
ret
pop
mov
dec
sar
cltd
lahf
inc
dec
lret
and
int
add
pop
cwtl
adc
fistpl
out
pop
rcr
sub
lret
mov
mov
cld
inc
jb
into
call
mov
popa
rcrl
push
jno
mov
adc
sarb
rolb
cmpsb
imul
hlt
and
pop
or
test
scas
pop
fsubr
push
sbb
shll
test
xor
test
nop
or
mov
insl
or
xor
fdivrl
and
cmpsb
sti
pushf
sbbl
ds
rcrb
pop
nop
adc
icebp
shrb
push
ret
xlat
stos
mov
push
jo
add
dec
lret
jae
or
jo
push
aaa
out
outsb
xor
hlt
cmpsb
pushf
cmpsb
cmp
adc
cli
gs
inc
push
int
pop
int
adc
jns
in
les
repnz
mulb
addr16
fdivrs
mov
sub
fcomps
sub
testl
int
insl
lods
xor
mov
jnp
cwtl
loop
mov
repnz
ljmp
mov
cmpsl
inc
mov
cld
mov
pop
popf
mov
iret
xchg
mov
jo
push
jo
outsb
insl
ret
loopne
mov
sahf
jno
sub
mov
ja
adc
cmp
loopne
push
mov
add
push
or
xor
jo
les
xchg
xchg
jle
sbb
fimull
shr
repnz
das
in
push
mov
cmp
or
imul
mov
or
jge
pushf
mov
inc
fwait
mov
xchg
sbbb
cmp
mov
or
mov
xchg
mov
jle
call
repz
scas
cmc
call
inc
shlb
pushf
incb
xlat
data16
movsb
mov
cmp
and
jne
mov
insl
gs
dec
clc
popa
jae
lods
push
inc
outsb
imul
lcall
ror
mov
sbb
js
jle
js
sbb
imul
pop
inc
dec
in
mov
mov
mov
push
loope
add
jbe
cmp
push
dec
xchg
or
pushf
cwtl
cli
adcl
rol
cs
mov
push
pop
movsl
pop
inc
aas
call
in
iret
lcall
push
dec
xchg
jbe
sub
push
nop
rcll
fdivs
push
jbe
mov
mov
lock
dec
mov
mov
push
mov
call
std
cmp
mov
jle
push
inc
loopne
testb
lock
sub
sarb
inc
cmc
enter
jge
fcomps
ds
dec
dec
cld
pop
scas
lods
or
lods
sbb
ljmp
imul
clc
ja
jg
incl
pop
imul
enter
xor
dec
cmp
lret
jmp
mov
mov
xor
xchg
push
jns
imul
push
xchg
inc
fdiv
adc
add
sbb
jle
stos
inc
dec
xchg
xchg
nop
sub
xor
cmp
jg
in
xor
stos
mov
or
mov
lds
inc
test
nop
xorb
xor
aas
outsb
fidivrs
sbb
pop
insl
pop
aad
mov
call
stos
cmp
jl
and
mov
push
lods
outsl
leave
pushw
pop
mov
gs
jb
setne
fldl
mov
sti
push
outsl
lcall
pusha
lods
fmuls
loop
repnz
or
xor
stos
xchg
mov
mov
mov
cli
sbb
ljmp
shrl
jmp
cwtl
iret
fsubs
lahf
add
shrb
out
out
mov
jp
repz
mov
cmp
aaa
adc
ret
rorl
aad
cmp
jp
fwait
ljmp
push
popf
scas
ss
test
incl
jnp
out
fs
xor
aam
pop
cld
dec
jbe
push
cmp
and
or
das
repz
sbb
enter
mov
lods
mov
out
pop
sub
sahf
loope
push
mov
or
stos
sub
fsubrp
addr16
sbb
inc
pop
outsl
jne
cs
loop
dec
insb
push
cmp
mov
and
lods
lret
and
inc
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
inc
add
js
jle
js
mov
sub
std
jl
cmpsb
sub
fsincos
and
and
test
or
movsl
inc
and
lret
inc
jno
xor
incw
inc
ret
push
xchg
mov
push
fiadds
cmpsb
and
xor
sbb
test
outsb
dec
fidivrs
mov
scas
jecxz
pop
outsl
pop
sbb
pop
or
cmpsl
and
lcall
push
lods
aam
das
jae
fmul
jp
mov
add
lahf
mov
mov
lret
push
test
push
cltd
push
push
xchg
jae
mov
inc
lret
and
pop
jo
push
lcall
mov
jp
iret
mov
jbe
jmp
inc
xchg
cli
shll
in
cli
sti
push
pop
jecxz
mov
out
and
movsl
push
jns
out
sarb
mov
xor
mov
lock
cwtl
sub
notl
sub
mov
mov
mov
pusha
iret
inc
adc
fdivl
sbb
mov
pusha
xchg
push
in
push
movsb
cmc
jp
sbb
xchg
sarb
outsl
sarb
sbb
lahf
bound
js
sub
ror
les
hlt
loope
movsl
std
iret
out
mov
aam
sbbl
call
loopne
mov
inc
rclb
xchg
fsts
rclb
js
sti
xlat
mov
push
lret
and
push
lcall
cmp
xchg
adc
xchg
push
scas
dec
sahf
dec
xchg
fwait
cmpsl
mov
jb
lods
dec
mov
test
aas
mov
xor
lahf
add
sub
pop
out
mov
outsl
cwtl
popf
sbb
push
in
cmp
test
push
daa
je
in
out
pop
adc
loop
js
cmp
filds
xchg
mov
ljmp
xor
push
push
lret
sub
sbb
mov
decb
jae
xor
xchg
es
ficompl
pop
sbb
jge
mov
dec
and
mov
adc
daa
inc
jno
cmp
daa
mov
or
mov
cs
test
jecxz
and
cs
lcall
xchg
sarl
sar
push
jmp
pushf
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
enter
and
jle
js
push
in
lret
js
je
nop
sbb
in
lods
pop
dec
xchg
pop
xchg
add
push
popa
cli
pop
fldt
adc
sub
lods
push
das
push
enter
iret
add
cmp
push
jg
cmpsl
inc
out
xchg
jecxz
out
push
out
cld
dec
inc
xor
fdivrl
dec
push
dec
outsl
mov
divb
in
pop
test
jge
cmp
shlb
sbb
mov
push
popfw
test
and
bound
insb
scas
fmul
test
shlb
outsb
lcall
jbe
jp
inc
stc
mov
aas
add
aas
mov
jb
jl
ss
ja
das
or
fnsave
adc
in
fs
mov
mov
add
mov
inc
jge
mov
sahf
xchg
pushf
sbb
std
lods
je
flds
adc
lods
sbb
cmpsb
icebp
nop
lds
dec
mov
fs
cs
inc
repz
fwait
inc
pop
lods
adc
ret
ret
movsb
mov
xchg
test
pop
mov
in
lds
decl
mov
push
out
aam
cli
shl
or
scas
stc
push
inc
mov
sarb
xor
mov
sub
and
sub
jmp
mov
rorl
xchg
shrl
les
adc
les
mov
xor
xchg
mov
mov
mov
mov
add
sub
in
jge
in
or
hlt
xchg
mov
xchg
pop
xor
adcb
subl
je
jmp
add
push
shrb
outsl
adc
dec
inc
test
jg
out
and
push
les
sbb
push
adc
hlt
or
hlt
jo
shrb
pop
sub
test
lsl
test
xchg
in
addr16
outsb
gs
stos
push
dec
int3
je
shlb
sub
out
mov
cmp
pop
inc
pusha
jl
mov
jne,pn
sub
push
shlb
jae
cli
cmpsl
xchg
stos
jnp
jp
jle
xor
xchg
icebp
idivl
pop
sarb
dec
dec
pop
out
inc
cmp
in
enter
fidivrs
push
dec
fwait
pop
daa
inc
and
push
mov
iret
dec
ja
sbb
jne
jne
aas
sbb
cmp
jne
mov
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
sub
js
jle
js
pop
cmp
push
repz
loopne
dec
dec
in
jb
or
rorl
inc
clc
xchg
lea
or
add
call
outsb
xchg
movsb
pop
das
inc
fisubs
popa
mov
stos
dec
or
shll
push
jbe
add
out
mov
cmpsb
push
lock
push
pusha
pop
lret
call
pop
int3
sbb
pop
test
pop
ret
or
ret
dec
movsl
stos
xlat
mov
shl
xchg
in
or
je
jecxz
mov
mov
xchg
adc
sbbb
stos
mov
dec
ja
je
xchg
das
ja
ja
mov
in
pop
add
cmpsl
cmp
dec
xchg
adc
shlb
inc
pop
or
and
std
lahf
ljmp
es
jge
sub
sub
jbe
cmpsl
in
pop
push
fdivrl
push
sub
pop
fadd
dec
or
fdivs
cmp
cmp
and
xor
ss
std
andl
outsb
xlat
jne
pusha
pop
inc
in
inc
sti
inc
fldt
cmp
dec
xor
mov
push
popa
xor
es
add
cwtl
lahf
adc
mov
cli
stos
mov
inc
pushf
mov
sbb
das
fiaddl
mov
add
mov
mov
cwtl
cmp
and
jl
cmpl
and
loope
aas
and
stos
xor
push
das
imul
lods
cld
arpl
pop
push
jb
xchg
lods
dec
orb
mov
pop
outsw
and
and
insb
cltd
mov
mov
and
pop
xchg
cwtl
sub
cs
pop
stos
insl
pop
jne
or
dec
sbb
mov
mov
jno
fisubl
ds
ss
clc
dec
imul
fisubrl
js
stos
jge
or
int3
loopne
mov
popa
jae
xlat
leave
pop
lods
or
push
add
ljmp
sub
into
aaa
and
dec
mov
and
ret
out
sbb
fnstenvs
pop
subb
orl
mov
mov
ljmp
pop
hlt
out
nop
pop
pushf
outsb
pop
mov
cltd
ret
push
or
mov
ss
lret
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
push
das
ret
sbb
js
dec
jle
js
push
std
insb
es
or
cmc
jecxz
jmp
cmp
movsb
fisttpll
jo
in
and
mov
and
mov
imul
sub
inc
shr
or
std
in
xchg
sub
popa
mov
xchg
mov
push
lea
inc
or
stos
in
push
ja
or
mov
hlt
insl
test
push
sti
and
or
pop
jns
in
add
xor
jo
xchg
lds
test
inc
and
push
test
sahf
jns
mov
push
sbb
jle
faddp
jge
push
and
cltd
xor
pop
in
scas
dec
je
lahf
adc
mov
dec
and
xchg
pop
imul
test
cmp
dec
xor
cli
stc
xchg
stos
xchg
lret
rorb
push
ror
adc
xchg
cmp
lds
lock
jmp
nop
pop
call
mov
cmp
into
dec
push
pop
cmpsl
mov
clc
aas
sbb
add
hlt
ds
push
repz
sub
in
shl
test
xchg
jg
stos
fbld
jge
hlt
into
in
sahf
dec
jne
ja
lods
mov
pop
ds
ret
push
jno
test
loop
inc
movsb
ja
lret
jns
les
mov
jecxz
fldcw
inc
aam
fcmovbe
mov
sahf
popa
sbb
test
dec
mov
leave
push
lahf
popa
pop
adc
ljmp
fdivrs
sub
cmp
and
loopne
xchg
mov
into
loop
sbb
pop
pop
pop
push
stos
lds
cltd
mov
sub
into
xchg
sub
cld
dec
cmpsb
cltd
push
ja
jge
pop
lods
cli
mov
or
int3
ljmp
mov
xchg
mov
clc
sub
or
dec
outsl
lahf
and
imul
xor
add
dec
xchg
sub
pop
test
dec
dec
cmp
cmp
push
sub
pop
fiaddl
mov
or
xor
xor
out
dec
sub
pop
pushf
mov
adc
xor
and
inc
je
pop
xchg
andl
imulb
xor
ficompl
pop
addb
mov
mov
shl
push
je
xchg
decl
jg
rcll
xchg
cmp
sub
and
mov
sub
fsubrl
call
mov
out
lds
mov
popa
in
in
mov
pop
lahf
mov
rcr
mov
add
xchg
es
cmp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
xor
jno
js
dec
jle
js
mov
sub
xchg
leave
pop
scas
pop
sbb
cmp
popa
fdivs
shr
loopne
sbb
iret
mov
dec
pusha
stos
aad
jmp
dec
and
mov
mov
notb
hlt
jo
or
subl
stos
push
nop
in
mov
loope
jecxz
popl
hlt
jl
xlat
jle
jl
insl
mov
inc
pop
movsl
loope
pop
data16
sbb
mov
das
aad
pop
xor
leave
outsb
mov
lods
test
aam
cmp
cld
inc
cltd
xor
stos
add
xor
pop
fstl
je
sub
fsubrl
icebp
or
lret
in
mov
cmp
or
or
xchg
inc
fcmovne
aam
mov
xorb
aam
or
cltd
xchg
outsb
imul
pop
dec
mov
xor
mov
xor
lock
sub
fcomps
xchg
orb
int3
loope
adc
lcall
cmp
cmpsl
fists
mov
fldenv
inc
jne
xorl
shll
or
icebp
cs
mov
cli
fisubs
mov
add
add
mov
adc
in
sub
out
push
pop
cmpsl
sub
adc
dec
and
dec
xor
pop
jo
in
repz
je
imul
imul
xchg
rcll
or
sbb
sahf
jns
sub
sub
pop
enter
subl
cmp
adc
je
jecxz
and
jmp
adc
aam
outsl
jbe
jecxz
std
and
clc
popl
ffree
mov
jb
out
int
jmp
ret
in
jae
jg
fdecstp
dec
lock
fidivrs
outsb
movsb
jecxz
cmc
enter
test
lods
adc
inc
div
aas
fisubl
das
lock
and
cltd
jmp
jl
in
repz
xor
xchg
outsl
inc
notl
mov
mov
das
lahf
jecxz
pop
sbb
xor
inc
sub
push
mov
out
cmpsl
pop
das
push
and
pop
xchg
insb
fcoms
mov
jae
jge
inc
jns
push
arpl
xchg
lods
les
shl
mov
stos
mov
ds
movsb
mov
imull
std
jp
sub
fstps
cmp
push
cmp
iret
jbe
stos
imul
test
cmc
pop
movsb
aaa
lds
sbb
sub
imul
stc
dec
mov
fcomps
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
roll
js
jle
js
js
in
push
or
shll
and
mov
push
les
hlt
mov
imul
sbb
push
push
jp
movsb
ljmp
cwtl
jne
lcall
jmp
test
lods
adc
mov
jns
je
push
add
push
sbbb
lahf
fs
mov
iret
mov
subb
pop
icebp
push
into
mov
push
adc
inc
lock
nop
int3
push
dec
stos
and
xor
frstor
mov
mov
rolb
add
movsb
dec
add
jmp
cmp
in
push
mov
movsl
fimull
xchg
iret
ffree
daa
rclb
nop
push
gs
repnz
mov
fnstcw
data16
shll
and
mov
jae,pn
jno
lock
dec
leave
sti
repz
xchg
daa
add
lds
adc
rcrl
mov
aas
mov
jmp
xor
pop
lock
xor
mov
jmp
in
es
xor
cld
dec
adc
jg
dec
cmpsb
mov
rcll
mov
mov
mov
pop
repnz
and
gs
decl
repnz
or
mov
outsl
sub
push
push
icebp
ljmp
mov
sarl
addr16
jp
xor
loop
fwait
pushf
cmc
sarb
and
inc
test
inc
imul
out
mov
imul
pushf
in
xchg
lret
data16
stc
loop
push
mull
sti
js
rcrb
inc
hlt
inc
jnp
or
dec
push
push
mov
and
test
pop
ret
and
lods
repz
cli
and
jl
popf
loopne
xor
xlat
insb
inc
pop
dec
imul
daa
sub
lea
cli
out
dec
inc
mov
inc
ss
inc
daa
pop
mov
mov
dec
xor
sti
imul
call
gs
jo
sub
jno
push
push
dec
leave
das
mov
outsb
xlat
mov
mov
push
aam
test
into
mov
cmp
lret
push
adc
test
orb
fstps
add
movb
sbb
push
mov
aaa
xor
mov
mov
push
call
pop
inc
aam
xor
rcrb
stos
sahf
enter
add
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
mov
rorl
xor
dec
jle
js
inc
pop
pop
cs
or
dec
mov
mov
mov
jnp
dec
pop
movsb
stos
inc
jb
sbb
push
fs
in
xchg
add
push
imul
stos
lret
pop
sbb
popf
insl
dec
xor
mov
loope
xchg
and
xchg
ljmp
std
xchg
adc
mov
incb
movsl
push
je
rol
lea
and
je
pusha
adc
icebp
push
ljmp
test
mov
pop
cmp
in
mov
jg
imul
pop
push
cli
frstor
push
and
stc
inc
mov
ja
sti
pusha
mov
fimuls
ja
and
jbe
fdivr
sahf
adc
sbb
add
mov
lods
mov
inc
push
mov
dec
mov
dec
push
cmp
mov
into
cmp
lcall
lea
lods
iret
pop
sub
mov
sub
dec
mov
cmpl
fpatan
xchg
sub
in
les
cmp
xor
add
or
pop
jb,pn
jbe
lds
decb
ret
pop
aas
pop
sahf
loope
mov
outsb
mov
adc
clc
mov
loopne
bound
xchg
pushf
pusha
adc
dec
inc
push
mov
sub
dec
sub
add
in
mov
popa
mov
lea
mov
sub
lods
sub
rclb
inc
pop
sar
add
push
lahf
int3
jb
ja
outsl
pop
ja
pop
xchg
sbb
sbb
rolb
add
mov
out
push
movsl
stos
shlb
sub
fsubl
and
push
or
jl
jns
and
xor
push
scas
ret
aaa
push
icebp
mov
mov
test
inc
je
std
or
adc
les
xchg
mov
int3
mov
insb
cmp
pop
shrb
js
cmp
mov
jo
push
nop
pop
and
add
test
iret
stc
jns
ja
fildll
ret
daa
push
out
loope
mov
jle
xlat
jge
inc
fst
and
lods
jmp
imul
pop
mov
inc
cmp
push
pop
cltd
ljmp
loop
sub
xchg
or
inc
iret
pop
fwait
enter
mov
inc
pushf
xchg
nop
dec
jo
fwait
cltd
mov
cmp
bswap
cs
xchg
add
clc
rcll
inc
fldcw
pop
adc
insb
insb
adc
lret
sbb
fimuls
cltd
hlt
fisttps
aaa
int
insl
mov
cmpsl
lock
mov
int
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
jge
xor
dec
jle
js
ret
mov
lret
jle
movsb
dec
lret
mov
push
imul
adc
jmp
iret
sahf
pop
mov
stos
dec
popf
mov
scas
dec
xor
imul
and
addl
or
sbb
test
cmp
out
push
daa
jae
lahf
notl
ret
add
cwtl
dec
push
loope
ret
addb
push
lea
lock
or
xchg
icebp
xor
push
jo
stc
push
in
jmp
gs
add
test
icebp
push
sub
xorl
mov
lcall
out
adc
mov
and
push
stc
cltd
xchg
rolb
clc
sbb
bound
fsts
into
scas
scas
stos
cmpsb
enter
mov
lret
pop
push
stc
mov
or
add
out
push
dec
sbb
mov
mov
inc
add
push
pop
adc
call
fstpl
inc
pop
out
les
dec
pop
jle
test
pop
push
push
mov
add
cmp
in
sbb
ret
pushf
mov
adc
pop
push
sahf
imul
xor
lock
mov
push
loopne
add
mov
xchg
popa
addr16
repnz
push
push
xor
test
pop
cmp
jo
xlat
iret
lock
xchg
adc
jb
scas
adc
xchg
mov
js
cmpsl
stos
sarl
mov
sub
daa
dec
dec
and
ljmp
shrl
stos
mov
movswl
cmpl
imul
cwtl
pop
pusha
mov
pop
test
cmp
aam
pop
inc
out
add
jno
jp
stc
xor
daa
out
push
push
and
mov
cmp
daa
xchg
outsb
lcall
pop
add
pop
loopne
pop
jb
dec
pop
sub
inc
xor
mov
pop
int
aam
inc
jge
push
jle
lahf
pop
mov
iret
xor
push
mov
push
cld
jno
and
mov
and
jge
lret
mov
sarb
xchg
xor
sbb
inc
in
jnp
mov
arpl
mov
push
cwtl
pop
and
adc
mov
xchg
icebp
inc
add
mov
jnp
mov
iret
subb
jb
push
roll
shll
inc
pop
negb
in
and
in
mov
pop
movsl
sbb
aas
iret
jne
pusha
cltd
jg
fldt
scas
aad
mov
clc
jmp
int
rol
ror
aad
inc
jecxz
fsubrl
mov
js
jle
js
mov
cli
into
pop
mov
xor
cltd
dec
loop
pop
mov
or
push
insl
dec
bsf
daa
jp
dec
sub
push
mov
fstpt
loopne
imul
jo
loop
xchg
xchg
mov
mov
cs
aad
in
in
dec
and
ja
movsl
std
aas
std
ret
insl
outsl
dec
hlt
int
sub
xor
jmp
sti
repz
adc
addr16
jnp
xchg
cmp
filds
cmp
icebp
fistpll
jb
icebp
loope
lds
jecxz
fs
inc
lods
adc
arpl
repz
push
inc
sub
cmpsl
pop
jns
pop
push
int
mov
cmp
xchg
jo
into
adc
mov
out
xchg
or
push
push
or
sahf
and
mov
loop
mov
aas
ret
insb
mov
adc
adc
inc
add
aam
adc
or
idivl
and
test
mov
inc
pop
push
jecxz
cmp
xchg
in
dec
popf
jge
push
xor
outsb
ljmp
dec
rcrb
push
popa
aad
shrl
dec
lahf
pop
or
aaa
mov
or
pop
mov
mov
mov
fstpt
pop
cltd
js
fisubrs
mov
jmp
inc
sub
and
das
pop
add
inc
push
rorl
jae
jnp
stos
dec
push
cli
cmpsb
xchg
cltd
or
rol
xlat
or
pop
mov
rcrb
jb
cmp
cltd
jecxz
mov
and
sahf
mov
das
jno
icebp
add
jl
cld
notb
loop
jl
fnsave
outsb
pusha
orl
jne
cmpsl
or
scas
pop
mov
push
js,pt
in
mov
das
adc
cmp
and
jmp
das
xchg
cmp
sbb
dec
test
mov
orb
mov
add
cmp
jp
mov
or
mov
jl
jmp
rcl
jmp
stc
jo
and
adc
push
test
dec
nop
sub
adc
js
bound
mov
fxch
inc
sbb
push
lcall
outsb
cmp
les
pop
and
outsl
sti
pop
cld
or
loope
mov
jbe
stos
mov
lea
dec
hlt
xchg
or
int3
dec
repnz
push
cli
repz
sub
xor
add
fmul
fists
cmp
imul
jp
ja
mov
imul
jne
insl
adc
push
nop
jle
lret
pushf
arpl
pop
mov
xchg
test
mov
inc
mov
lcall
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
jbe
in
cmp
dec
jle
js
ucomiss
add
stc
cli
fiadds
int
lahf
inc
pop
rorl
loope
dec
mov
xor
scas
pushf
cmpl
or
fstl
mov
pop
push
lret
fwait
and
xchg
xchg
inc
push
loope
jmp
das
out
xchg
aaa
add
push
loop
sbb
push
outsb
cld
mov
inc
sbb
xorb
xor
jne
jns
shrb
push
insl
mov
out
xchg
mov
in
jo
inc
xchg
popa
or
aaa
nop
popf
sbb
sbb
int3
cmp
das
adc
add
rcrb
pop
xchg
mov
test
pop
inc
sahf
push
fmul
adc
mov
pop
or
jns
mov
pushf
inc
mov
sub
ret
clc
in
dec
arpl
sti
in
adc
push
add
cmp
cmpsb
and
jns
aam
sbb
mov
mov
into
mov
pop
xorl
dec
mov
ficoml
push
jb,pt
or
fwait
dec
adc
add
jle
jl
fcmovu
les
xor
jg
adc
jecxz
ret
mov
out
mov
repz
mov
movsl
aaa
ret
cmpsl
jle
outsl
fwait
repz
push
fs
popa
repz
aaa
subb
arpl
negl
dec
or
cmp
test
mov
push
pop
xchg
cmp
in
pop
jns
out
nop
mov
xchg
sbb
loop
scas
mov
ds
mov
rclb
ret
or
popa
scas
iret
addr16
cmc
daa
jbe
jo
fildll
fimull
xchg
sti
xor
cmc
cs
jl
pop
enter
loope
xchg
rcll
test
in
jmp
sbb
clc
lahf
imul
add
cmp
std
icebp
fwait
popa
out
pop
cwtl
js
iret
testl
aam
pop
push
leave
add
or
mov
xchg
sahf
dec
into
lea
sub
and
iret
xor
testl
data16
push
out
cmp
sbb
movsl
fucomi
cwtl
add
pop
psraw
outsl
inc
or
mov
mov
mov
incl
les
sarl
jl
push
lret
mov
popf
mov
cmp
lret
xchg
cmp
addb
pushf
inc
imul
or
lcall
add
pusha
xchg
cld
adc
inc
pop
mov
jge
or
ja
pop
in
pop
cmp
push
bound
mov
in
in
cmpsl
fcmove
xchg
adc
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
idivl
js
jle
js
cli
cmp
pop
mov
push
inc
sub
ja
icebp
cld
xchg
mov
push
ds
add
lahf
inc
jle
lods
stos
sub
dec
cmp
and
arpl
adcl
daa
xlat
ljmp
pop
xor
or
mov
and
or
add
addr16
mov
push
adc
aam
pop
push
and
cmp
jg
imul
pop
out
mov
jae
mov
out
and
cmpsl
enter
sub
insl
mov
cwtl
adc
insb
shlb
repz
jne
xorl
cld
pop
push
pop
imul
cmpsl
jecxz
adc
pop
mov
and
add
push
ss
sarl
xchg
lea
pop
test
xlat
push
dec
aaa
call
enter
push
loop
arpl
je
stc
cmpsl
push
es
dec
xchg
mov
lods
cmp
mov
addr16
int3
xchg
test
or
test
mov
in
out
pop
test
popa
inc
lahf
arpl
imul
repnz
orb
sub
add
lods
aas
mov
inc
addb
and
mov
push
mov
fidivrs
push
mov
mov
ss
aam
add
shrb
or
mov
push
sub
cmc
fimull
gs
push
movb
stos
mov
push
mov
lahf
cmpb
inc
sub
icebp
lahf
bound
lcall
mov
cmp
loopne
push
int
add
cmovp
jo
outsb
stos
aaa
out
sub
and
repz
mov
sbb
sbb
dec
dec
data16
iret
aas
imul
ds
xor
push
sub
test
and
jnp
jb
frstor
push
push
lods
jmp
cmp
fstpl
xchg
fucomip
rorb
subb
sarb
push
pop
out
imul
dec
dec
and
stos
or
scas
addb
sub
call
push
int
pusha
insb
test
nop
and
add
mov
stos
dec
cmp
mov
sbb
mov
xchg
or
dec
dec
cmc
lds
pushf
sub
frndint
loopne
movsb
dec
pop
je
cmp
dec
adc
lock
sarb
andb
pusha
mov
mov
aas
cmp
adc
repnz
adc
jmp
add
rol
ror
leave
rcr
aaa
mov
insb
je
cmp
js
inc
push
push
mov
cmc
cwtl
sub
hlt
popa
data16
aaa
or
aas
pop
scas
push
xchg
mov
dec
xchg
fcomps
and
scas
mov
jg
pop
mov
mov
jb
add
lahf
test
xchg
mov
jg
mov
imul
inc
scas
fldcw
mov
jb
inc
pop
cmp
or
mov
out
hlt
das
popa
mov
and
sub
ss
daa
aam
sbb
pop
xor
outsl
xor
and
add
pop
jle
mov
mov
fidivrl
add
mull
dec
dec
xor
jmp
inc
out
movsb
out
push
xor
mov
int3
test
pop
mov
mov
dec
inc
lock
mov
or
xchg
jmp
pop
fsubrl
pop
gs
dec
add
push
mov
mov
cmc
xlat
pop
out
dec
add
mov
fwait
je
insl
dec
xlat
sub
mov
rolb
or
mov
sub
popa
test
popf
xchg
xor
insb
mov
mov
xchg
or
repz
sti
jne
or
insb
mov
mov
sub
out
cli
dec
mov
jae
imul
xchg
dec
jo
jne
mov
jae
pop
push
test
in
mov
dec
xor
add
fdiv
jecxz
cmpsb
or
aad
xor
dec
inc
jp
or
enter
pushf
push
or
dec
pop
xlat
sub
mov
mov
cmp
gs
pop
out
loope
dec
inc
stc
pusha
stc
enter
and
adc
jo
fs
lret
cmp
pop
adc
jmp
and
dec
cli
mov
xchg
or
je
outsl
sub
or
addr16
pusha
jo
xchg
insb
mov
call
sbb
mov
int3
dec
outsb
and
mov
fcoms
lock
push
pop
sbb
sbb
cli
or
pop
lahf
aas
cs
dec
or
add
negl
inc
dec
stos
mov
rcrl
aad
aaa
cmp
scas
shll
dec
sbb
push
popf
arpl
xor
into
push
loope
rcl
xor
sarb
movsb
imul
mov
enter
xor
insb
dec
lds
cmp
std
cmp
clc
iret
in
in
mov
addb
aad
and
lods
imul
jl
ffreep
xor
push
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
cld
or
mov
js
dec
jle
js
sarb
imul
jo
dec
inc
push
adc
jns
and
inc
adc
das
clc
popf
daa
repz
ljmp
dec
push
enter
adc
and
adc
sbb
mulb
push
adc
sbb
mov
pop
inc
ja
loopne
scas
mov
adc
mov
cs
or
jno
loop
or
inc
inc
dec
or
jb
cmpl
xchg
mov
shrb
lret
and
aaa
pop
adc
fsubrl
andl
ficoms
inc
jle
gs
ret
lret
out
jb
add
mov
cmc
xor
sub
mov
aaa
dec
mov
xor
movsb
xchg
lods
subb
add
into
js
mov
cmpsl
shl
call
scas
lea
nop
mov
in
fcmovnu
popa
out
jmp
jge
fstpt
out
clc
lods
pop
mov
sbb
popf
lods
mov
cltd
mov
and
rep
cmpsb
sub
jg
mov
out
push
lock
lods
jle
jmp
mov
dec
push
sub
xchg
jbe
pop
dec
es
jb
daa
mov
mov
in
es
and
sbb
loop
incb
sub
repnz
movsb
jle
mov
hlt
loop
and
nop
shll
hlt
push
test
addr16
out
sarb
out
outsb
ljmp
mov
dec
lods
fldl
mov
jb
fldl
mov
sub
mov
sbb
hlt
mov
push
jp
jg
pop
inc
xor
out
mov
dec
xchg
mov
lret
in
jmp
jb
xchg
lret
shl
loop
enter
inc
xchg
push
mov
and
roll
xor
jge
pop
push
aam
popa
int3
ja
pop
inc
out
das
and
xchg
movsl
cwtl
sbb
dec
cmp
jge
xchg
outsb
xor
mulb
inc
test
sbb
clc
inc
mov
fwait
adc
add
sub
xchg
push
cmp
call
mov
mov
pop
xor
or
lock
xchg
dec
mov
popa
fsubrl
insb
mull
push
inc
mov
pop
out
imul
enter
into
stos
push
imul
pop
loopne
imul
mov
add
cmpsb
gs
inc
xor
out
mov
jae
fs
pop
mov
insl
add
sbb
insb
sbbl
scas
and
rorb
fidivrs
xchg
icebp
mov
jmp
aas
ret
rol
sbbl
rcr
js
dec
jle
js
lahf
add
mov
lds
xor
outsb
xor
jae
or
lret
shl
sbb
or
push
jp
andl
int
xor
mov
repz
push
sahf
add
dec
pusha
pop
cmp
pop
pop
sbb
mov
and
add
pushf
in
negl
neg
pop
clc
leave
stc
imul
notl
movb
std
push
bound
push
ja
lcall
ret
nop
dec
sbb
loopne
out
outsb
inc
daa
fdivs
lods
int3
jecxz
out
dec
in
fwait
mov
adc
push
jns
lock
shl
mov
mov
pop
jo
cmp
out
mov
add
shll
mov
insl
sub
cltd
pop
xchg
cmpsl
add
pop
cli
jecxz
das
repz
mov
movsb
dec
push
in
adc
lds
sub
pushf
test
mov
frstor
lock
sbb
inc
push
aad
aam
dec
js
jb
lea
cld
ljmp
leave
xchg
push
repz
int3
pop
cli
add
mov
inc
fucomi
sbb
test
cld
mov
cld
adc
mov
aas
fmulp
arpl
bound
rolb
xchg
fidivs
xor
sub
inc
adc
pop
sbb
std
mov
dec
pop
int3
and
sbb
mov
test
adc
sub
fcmovnb
int
out
rorl
jp
jmp
mov
lods
mov
lods
addl
dec
add
push
dec
dec
loopne
pop
sub
sbb
nop
mov
das
dec
lds
popf
in
mov
sub
cmp
mov
mov
and
lock
idivl
ljmp
sbb
std
push
or
dec
fdivr
push
popf
dec
mov
cmpsb
mov
hlt
or
shll
xchg
mov
sti
fsubs
movsl
frstor
imul
push
ret
test
mov
xchg
sbb
clc
repz
jbe
mov
push
push
push
and
sbb
cmp
imul
pop
push
subb
pop
pusha
cli
gs
push
out
mov
jb
fidivrl
and
mov
lret
adc
mov
notl
or
mov
daa
fldl
mov
repnz
sbb
cmp
cmp
jmp
std
into
mov
xor
fisubrl
add
pop
mov
and
xchg
addr16
dec
xchg
jmp
imul
mov
jecxz
cli
jmp
lock
mov
enter
sbb
jmp
ds
cmp
mov
fisubrs
and
les
dec
jle
js
in
mov
ffreep
popa
loop
xchg
outsb
mov
inc
mov
in
es
mov
lahf
xlat
fnsave
out
repnz
cmp
lahf
movsb
fsubs
repnz
or
ss
mov
int3
push
in
xor
incl
jo
jmp
out
fmul
sahf
stos
fwait
inc
lahf
je
cmp
cmp
aaa
jb
add
sbb
or
cmp
lahf
dec
out
and
dec
lods
inc
inc
popa
lea
adc
call
sbb
add
cli
fnstenv
push
std
or
add
shll
ret
lock
jmp
sub
sarl
cmpsb
dec
lea
in
data16
inc
fwait
arpl
push
stc
mov
ret
xor
dec
push
mov
jbe
or
cmpsb
shlb
bound
push
or
dec
add
inc
fisubrl
mov
or
aad
cmp
js
jge
repnz
jl
jns
lahf
testb
sub
cltd
pop
cmp
sbb
mov
push
inc
std
push
push
js
pusha
into
mov
fimull
mov
jmp
movb
ljmp
int
push
fsubrl
aad
mov
jge
in
mov
pusha
adcl
jae
jl
sub
lea
std
pop
repnz
or
rcrl
pop
adc
jmp
lcall
lds
inc
add
nop
iret
or
das
sub
lods
push
adc
xor
fimuls
jle
scas
sub
shl
dec
mov
adcl
sub
andl
lahf
gs
out
push
pop
push
cmp
lcall
add
sahf
sub
lods
decl
cs
repnz
gs
stos
mov
into
test
pop
xor
push
mov
in
enter
std
lcall
xor
stos
xor
jnp
add
or
pop
mov
cmp
xchg
mov
xorb
insl
cmp
loope
mov
xor
aaa
imull
test
iret
push
cmp
mov
enter
lret
lds
jg
sub
imul
and
out
mov
mov
push
test
ret
adc
pop
dec
insl
lock
pop
lret
sbb
mov
stc
mov
test
lcall
jns
cmp
jmp
mov
ja
out
jmp
jecxz
test
dec
std
daa
push
jne
cltd
sub
adc
mov
addr16
and
pop
xor
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
movsb
in
lea
leave
js
fs
js
std
shl
pop
lcall
sub
add
adc
pop
dec
bnd
outsb
pop
xor
test
push
mov
sti
dec
hlt
notl
push
mov
out
add
sub
xor
add
adc
movsl
std
push
cmpsl
sar
scas
push
repnz
sti
push
jle
test
jae
push
lea
or
pop
in
sbb
mov
filds
cmp
and
arpl
mov
pop
cmp
xchg
maskmovq
negl
insb
adc
sbb
jecxz
inc
movl
testb
xchg
push
push
cmp
sub
xchg
mov
je
mov
int
cmp
push
not
and
sbb
outsb
mov
nop
mov
push
jns
dec
in
dec
push
mov
ljmp
mov
adc
push
and
sti
lock
xchg
sti
and
loope
rcrl
icebp
jl
mov
fisttps
cs
and
icebp
fisttps
or
add
scas
je
jle
xlat
dec
and
sarb
and
jns
mov
popf
in
xchg
pop
into
loop
leave
lock
adc
xor
and
sti
int
inc
mov
jle
jecxz
stos
mov
orl
cmp
outsl
xor
push
lahf
add
push
test
add
and
xchg
mov
leave
out
es
xor
sbb
sub
inc
cmpsl
jmp
movl
cmp
mov
push
cmp
data16
int3
fldt
ljmp
jb
in
add
push
and
cmc
dec
test
mov
movsb
aam
dec
mov
xchg
inc
push
adc
mov
or
mov
mov
push
shrb
mulb
push
inc
in
jo
gs
fnstsw
scas
repnz
inc
or
arpl
aas
jbe
adc
mov
lods
enter
mov
dec
scas
nop
mov
cli
push
outsl
inc
cmc
cmp
sub
out
repnz
movsb
xchg
pop
sarl
imul
pushf
aas
xchg
inc
pop
mov
add
add
cmp
mov
jae
mov
in
jns
mov
rcrb
xor
lcall
shrl
ficoms
std
andb
xor
xchg
pusha
mov
pop
xchg
inc
andl
je
pop
push
aad
mov
inc
lret
dec
xor
or
pop
inc
popa
dec
and
and
ret
inc
fs
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
test
js
fs
js
fisttps
xor
imull
scas
lds
fnstenv
subb
test
fcomi
cmp
out
int3
imul
mov
xchg
pop
lods
add
lcall
xor
push
lock
pushf
rcll
adc
cwtl
add
push
lock
mov
mov
ja
sbb
cmp
xor
mov
xorb
divl
lea
mov
mov
out
adc
loope
push
mov
std
mov
in
int
xchg
or
push
fisubl
pusha
das
fimull
xchg
mov
sbb
and
dec
insb
push
pop
idivl
mov
push
sar
fsts
xorl
mov
adc
mull
mov
mov
xchg
cs
cmc
aas
xorl
xor
outsl
mov
shl
stos
xchg
mov
js
outsl
je
repz
mov
data16
xchg
xor
inc
popf
lods
jmp
pop
mov
dec
lret
cmp
xchg
jae
inc
fnstenv
enter
shlb
bound
mov
dec
dec
pop
outsb
xor
nop
lahf
mov
ret
xorb
mov
add
and
fsub
ds
lock
cmp
mov
lret
addr16
adc
pop
mov
or
stos
ja
and
stos
adc
mov
xor
js
mov
mov
push
lret
std
popa
rorl
insb
fs
fcmovnu
pop
rcl
fs
dec
pushf
loope
or
xchg
fisubs
mov
add
dec
adc
jb
scas
pop
pop
negl
imulb
add
sbb
xchg
add
jo
cmpsl
fcmovne
adc
mov
pop
push
fmuls
pushf
cld
cmc
sub
call
lea
xor
adc
cmp
bnd
mov
iret
std
cmc
sub
sub
cmp
dec
test
pop
cltd
gs
xchg
ss
pushf
xchg
pop
xchg
inc
cwtl
inc
int3
aam
cwtl
adc
shll
cmp
add
mov
test
enter
push
test
xlat
test
roll
inc
mov
jb
jns
lahf
dec
jmp
adc
push
scas
push
mov
mov
frstor
inc
nop
ja
mov
ja
leave
das
sub
xchg
jl
jns
xchg
xchg
lock
mov
jecxz
movb
into
movsb
frstor
sbb
sub
lods
mov
clc
mov
or
icebp
hlt
fnstenv
push
cmpsb
and
mov
jmp
pop
test
push
dec
jmp
cmp
pushf
int3
imul
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
and
int3
js
fs
js
dec
jne
insb
jnp
sub
mov
js
mov
mov
mov
aaa
shlb
or
add
aas
in
xlat
adc
ds
inc
sub
sbb
add
add
gs
sarb
lret
and
mov
jmp
inc
dec
imul
push
ret
jl
xchg
into
mov
push
sub
push
movsb
push
in
fimull
dec
mov
adc
fcomps
xor
adc
loop
add
xchg
outsl
push
pop
fdivl
add
imul
sub
inc
jnp
sbb
outsb
inc
mov
into
fisttps
cmpsl
push
call
cmp
stos
inc
sub
imul
roll
pop
adc
mov
pop
and
mov
orl
mov
jns
call
cmp
popf
jle
or
jbe
cmp
xchg
shll
cmp
test
or
mov
adcl
and
dec
call
and
add
mov
mov
hlt
cmp
lods
push
lahf
dec
pop
jb
insl
adc
movsb
or
ljmp
aad
cmp
ja
es
int
push
push
hlt
jle
cmc
xchg
jmp
push
jmp
aam
xor
xchg
ljmp
mov
test
push
mov
out
int3
out
loop
mov
out
mov
shlb
dec
push
and
adc
sbb
sbb
add
sbb
adc
stc
shl
fadds
sar
cmpsl
mov
mov
cmpsl
ret
fs
jl
xchg
dec
inc
das
mov
jg
push
nop
sub
pop
cmp
or
mov
shl
outsl
jns
inc
xlat
push
jg
shrl
cld
cmp
pop
sti
cmpsb
mov
push
cmpsl
mov
cmc
cltd
mov
js
cwtl
xor
mov
mov
icebp
setge
mov
pop
in
xor
inc
sbb
loop
sbb
jmp
push
lock
mov
cwtl
addl
and
or
adc
fcomi
insb
arpl
adc
cmpsb
shl
pop
and
inc
push
xor
inc
mov
dec
addb
jmp
xor
mov
jns
xchg
and
call
push
fs
sbb
andl
dec
rcl
popl
aad
pop
mov
mov
pop
xlat
mov
int3
lcall
add
out
mov
mov
add
sub
insb
and
in
cltd
xchg
fiaddl
cmp
movsb
insb
out
push
movb
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
mov
rcll
out
sub
repnz
rcrb
neg
inc
inc
mov
xorps
les
pshufw
xchg
jno
outsl
pop
pop
inc
jns
subl
outsl
and
leave
pop
out
push
sub
mov
scas
out
imul
jp
xchg
jmp
dec
mov
mov
loopne
dec
sbb
jmp
mov
push
jne
outsl
je
jl
je
add
and
icebp
xor
pop
shrb
xchg
dec
jbe
adc
adc
mov
insl
iret
mov
jecxz
sahf
dec
scas
faddl
sub
adc
fiadds
aaa
mov
jg
mov
xchg
lds
and
inc
mov
popf
jbe
lods
fcompl
jne
mov
mov
dec
fcomps
inc
js
jno
mov
clc
mov
dec
cmpsl
insb
sarl
adc
cmp
push
into
es
add
dec
shrb
lret
arpl
movsl
mov
cwtl
lahf
cltd
clc
lret
aas
pop
in
and
push
insb
dec
adc
jecxz
push
cmp
mov
and
sahf
mov
sbb
inc
outsl
add
push
dec
pop
cmp
fsubl
mov
pop
mov
lahf
inc
rol
and
ret
es
xchg
repnz
fistpll
jmp
stos
dec
pop
outsb
pusha
lds
lahf
nopl
lods
imul
or
jp
jo
mov
in
ja
dec
roll
add
and
rcll
cwtl
rolb
mov
jno
push
stc
push
mov
scas
clc
cmpsb
addr16
popa
lret
insb
adc
addb
fdivl
push
imull
sub
add
test
add
push
mov
jns
in
loope
gs
jmp
mov
sbb
out
xorb
mov
or
pop
rcll
cld
mov
sub
ss
testb
pop
dec
hlt
ljmp
sarb
sahf
mulb
sarl
pop
divb
adc
ret
in
cmp
loop
ret
lock
iret
aas
jno
fwait
in
insb
shrl
add
lds
jmp
jmp
add
or
nop
pop
or
jle
push
nop
inc
dec
xlat
mov
out
xor
add
jecxz
shll
mov
out
adc
push
push
pop
cltd
hlt
ret
add
add
lods
cmp
mov
dec
pop
mov
aad
outsl
inc
mov
loop
stos
negb
test
and
loopne
push
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
shrb
js
jle
js
fbstp
ret
sub
adc
enter
sti
lock
add
lret
popa
pusha
aaa
jg
mov
jg
sub
inc
inc
mov
xchg
aaa
and
pop
mov
lods
sub
cmp
xorb
movsl
ret
rorb
call
jecxz
dec
mov
inc
je
xor
pusha
sarb
es
in
inc
sub
lea
outsl
sbbl
ret
lret
push
or
stos
in
and
idivb
sub
pop
push
mov
pop
and
push
push
rcr
push
and
out
lcall
cmp
mov
call
inc
mov
pop
mov
add
pop
lret
and
jecxz
loopne
xor
movsb
adc
icebp
lods
pop
pop
pop
or
shll
dec
or
aaa
mov
in
mov
cmp
xor
jo
cwtl
lea
push
les
jne
xchg
mov
stos
call
push
mov
mov
repnz
subl
cmp
lret
add
fimull
ficomps
into
push
in
leave
mov
push
xor
out
mov
cmp
int3
xchg
shll
sar
insl
pusha
push
mov
rorb
cli
pop
divl
push
mov
fimull
outsb
lret
and
outsl
aaa
or
shlb
outsl
nop
pop
ja
outsb
int3
add
clc
push
enter
adcb
fisubrl
adc
xor
test
fdivrl
mov
mov
push
push
xor
adc
daa
sub
jmp
imul
shrb
fmull
mov
mov
mov
mov
daa
xlat
cmp
push
adc
sub
lcall
cmp
push
daa
in
add
mov
mov
int
insl
adc
lret
cltd
xchg
jne
push
or
sarl
pop
cli
cmc
push
mov
gs
loop
jl
sub
xchg
mov
mov
adc
les
stos
sbb
inc
out
push
xor
movsl
std
cmpsb
cmpsb
push
push
xchg
shl
call
fdivr
sarb
and
lds
pop
or
outsb
mov
adc
aad
icebp
jge
and
negl
xor
lcall
movsb
inc
not
in
mov
lods
push
xchg
outsl
mov
cmp
mov
jge
lock
out
add
dec
int3
mov
or
adcl
push
and
mov
or
ss
insb
pushf
rcl
pop
cmpsb
insb
popf
inc
out
popf
push
mov
mov
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
in
xchg
lds
fstpt
fs
js
jb
out
adc
out
adc
lcall
testb
in
adc
out
fistps
lods
in
ret
dec
xchg
daa
sbb
mov
mov
mov
repz
out
sbb
lock
loope
lods
jno
daa
mov
add
loope
lock
xchg
pop
xchg
pop
mov
sub
arpl
outsl
pop
mov
adc
jecxz
push
mov
mov
xchg
jmp
pop
les
insb
addr16
push
movsb
and
xor
aad
adc
push
lock
ficoms
and
mov
scas
repz
in
add
push
aas
decb
gs
cmp
lret
test
mov
popf
insl
push
dec
inc
cmp
sub
ret
push
sub
push
sbb
daa
inc
mov
inc
in
aam
in
sti
mov
repz
enter
fistpll
cmp
push
mov
inc
jbe
out
push
stc
xchg
pop
daa
in
idivb
lods
movsl
xchg
sar
inc
xchg
nop
sub
std
jg
xchg
push
push
sbb
mov
pop
ret
pop
dec
data16
cmc
mov
pop
mov
pushf
fldcw
pop
pop
repz
cmc
and
dec
sub
pop
rcrb
stos
add
inc
sub
int3
addr16
xor
leave
mov
popf
sub
jae
add
sbbl
fsub
add
dec
push
mov
iret
ds
lret
mov
xor
das
mov
arpl
in
std
mov
rorl
jne
inc
imul
dec
mov
clc
ret
push
lret
xlat
dec
push
dec
xchg
int3
shl
cmp
mov
xchg
xchg
mov
cli
pop
ret
pop
popf
push
iret
test
in
je
sbb
iret
or
sbb
jecxz
jge
jae
outsl
sbb
mov
adc
inc
int3
inc
jle
adc
lahf
sub
cwtl
aad
pop
shll
jp
sbb
cwtl
fists
jg
push
addb
pop
mov
fmul
les
cmp
lret
dec
repz
pop
xchg
adc
sub
in
mov
test
aam
jne
shr
aam
xchg
push
push
adc
pop
addr16
push
in
sub
fnstenv
jge
das
xchg
mov
mov
sbb
push
adc
pop
pop
xchg
mov
div
loope
shll
iret
neg
jge
xor
cmp
das
pop
jo
pop
inc
push
out
scas
das
test
insl
cs
icebp
xor
insl
cmpsb
jne
dec
es
pop
inc
and
stos
stos
clc
dec
stos
push
mov
pop
int3
int3
pop
lods
mov
lcall
sti
ss
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fdivrs
fdivrs
fs
js
imulb
and
pushf
add
fistl
adc
sar
push
pop
ljmp
jb
sub
ljmp
fisttpl
jnp
xor
lcall
cmp
xchg
mov
push
icebp
xor
hlt
mov
mov
jns
dec
addl
sahf
rolb
xor
push
ss
aad
or
inc
in
repnz
mov
jg
mov
and
cli
popa
icebp
mov
or
stc
jb
movsl
mov
test
stos
pop
packuswb
shr
and
ficoml
leave
xchg
out
sti
or
cmp
adc
dec
xchg
in
stos
out
dec
jnp
mov
or
xor
scas
and
or
push
daa
pop
das
inc
mov
sbb
negb
popa
mov
mov
pusha
popf
mov
mov
scas
mov
dec
and
ret
test
hlt
cs
lods
lods
out
leave
insb
in
xchg
leave
dec
into
mov
xchg
jg
xchg
daa
mov
inc
inc
lfs
movsl
and
lahf
insb
lods
mov
sbb
adc
sub
ret
dec
cmc
iret
and
pop
ss
mov
inc
push
push
pop
popf
and
sti
xchg
shlb
ljmp
das
adc
xchg
ss
add
lahf
lods
imul
iret
cmp
jl
xor
sub
and
jl
faddl
movsl
jo
test
aas
mov
adc
cmp
mov
xchg
cs
cltd
xchg
in
sti
push
jmp
out
cmp
push
mov
jl
arpl
and
out
jmp
test
cmp
pop
nop
fwait
inc
imul
es
sti
dec
pop
je
inc
pop
fiadds
mov
mulb
pop
xor
and
adc
hlt
cmp
int
sbb
sbb
lods
mov
mov
stos
cld
dec
pop
rcl
sarb
mov
decl
and
xchg
lret
fwait
dec
jbe
out
mov
cmp
inc
shlb
loopne
std
in
cmc
or
mov
and
test
cmp
add
scas
insl
nop
das
inc
mov
cmc
dec
add
in
ja
cltd
cmp
mov
in
jle
shrl
cmp
lock
repz
lock
loop
mov
arpl
out
add
lretw
xor
popa
test
jg
mov
pop
xchg
push
or
dec
jo
lods
lea
dec
xor
mov
xchg
jmp
adc
pop
inc
cmp
loopne
sti
lret
add
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
or
fs
js
push
pop
test
xchg
inc
and
pushf
xor
cli
mov
sbb
sub
mov
mov
shl
hlt
inc
add
jb
xor
mov
or
add
test
mov
jo
stc
das
xchg
es
int3
pop
push
or
lcall
mov
out
inc
outsl
pop
sarl
mov
push
lds
loope
es
rol
gs
cld
mov
ret
das
add
push
pop
pop
dec
push
daa
mov
movsl
xor
cwtl
push
ljmp
mov
rol
mov
or
sub
sub
push
inc
sti
daa
xor
addl
lods
cwtl
jo
adc
loopne
call
idivl
mov
or
and
or
test
ljmp
testb
add
adc
or
jo
in
faddl
lea
fsubrl
repnz
clc
movsb
sti
and
out
sub
dec
mov
mov
push
scas
mov
aas
jecxz
mov
dec
inc
push
int3
rclb
sbb
cltd
cmpl
jle
fisttpll
ret
jne
sar
pop
lret
push
scas
lret
inc
pop
mov
cmc
adc
out
mov
scas
stos
fistl
xchg
bound
cmc
or
xor
mov
nop
test
lret
mov
mov
insl
jae
jmp
xlat
inc
cwtl
lahf
insl
mov
out
ljmp
fidivs
call
cmp
inc
push
outsl
decb
fwait
clc
pushf
mov
mov
jl
sub
bound
jmp
and
inc
xor
sahf
mov
in
mov
pushf
pop
pop
enter
insl
fst
gs
pop
andb
jmp
fisttpll
pop
inc
enter
ds
mov
testl
inc
cmp
sub
fimuls
mov
ret
movsl
xor
testl
cmp
or
mov
int3
mov
push
cvtdq2ps
xchg
xor
mov
lods
aad
add
dec
dec
sub
rcll
add
or
in
sbb
mov
lods
mov
stos
icebp
je
into
xchg
loop,pt
cmp
pop
js
je
jg
ret
ss
jae
das
bnd
hlt
pop
cwtl
push
nop
test
xor
jne
push
stos
fildll
jge
stc
push
rorl
dec
adcb
or
aaa
lods
add
dec
add
ja
test
nop
loopne
or
loopne
mov
or
jnp
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
cmp
sub
test
out
and
test
mov
daa
sub
sahf
mov
xor
adc
mov
cmpsl
pop
mov
iret
cmp
adc
mov
adc
inc
xchg
jne
pop
sub
pop
sub
fdivs
sub
jb
aad
test
mov
sub
push
fcoml
mov
pop
imul
sub
icebp
neg
lock
in
mov
dec
adc
push
push
cmp
xchg
lret
movl
cmc
enter
stos
push
and
loop
add
aam
add
xor
add
add
pop
repnz
stc
pusha
jecxz
ficompl
add
inc
lock
inc
jle
ds
mov
add
insl
xchg
jnp
test
int3
shlb
mov
shlb
int
das
in
sub
popa
pop
bound
jns
or
test
pop
fldenv
ret
ja
inc
inc
fwait
sbb
jo
filds
insb
insl
mov
sub
sahf
jnp
adc
jns
stc
sub
stos
sahf
cmp
push
and
in
shrb
cmpsl
jnp
ljmp
insl
int
cmp
mov
xchg
xor
popf
sbb
cmp
in
aad
push
jp
adc
jo
mov
sbb
cmpsb
xor
jae
test
xor
pop
out
movsb
push
scas
pop
lret
add
call
inc
push
xchg
jle
xor
aas
mov
dec
push
pop
inc
xor
loope
adc
jbe
push
xor
orb
jne
pop
mov
scas
mov
fdivrl
adc
jo
mov
add
mov
sbb
push
fisubrs
jge
testb
inc
cli
and
loop
sbb
std
sbb
popa
fmuls
nop
je
ret
fdivrl
dec
or
cwtl
mov
push
stc
ja
adc
add
or
std
inc
les
inc
mov
pop
add
pop
out
dec
pop
rol
setbe
lods
leave
add
sbb
or
mov
stos
push
mov
inc
scas
inc
add
frstor
imul
jbe
add
rcl
hlt
cs
stc
lods
push
mov
mov
dec
dec
orb
add
xor
shll
xchg
fwait
sbb
xor
fistpl
add
imul
sahf
inc
int3
aas
arpl
enter
faddp
add
gs
shrl
push
into
xchg
aas
and
jge
in
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
call
out
js
jle
js
stos
and
cwtl
push
push
adc
xor
and
or
push
cmp
cmp
pop
cmpsl
je
dec
lcall
test
inc
xorb
bound
movsl
xchg
pop
aad
sbb
dec
aad
or
adc
sbb
fldenv
lcall
shr
xlat
pop
xor
mov
jb
cmpsl
nop
addr16
fwait
xchg
shrb
out
clc
xlat
cmp
int
pushf
cmpsl
or
in
inc
adc
je
jbe
push
out
leave
and
sbb
ja
jmp
aas
sbb
out
pusha
mov
sbb
jmp
fnstenv
in
movsl
iret
fdivs
and
shl
jmp
sbb
xchg
ret
inc
fnclex
roll
lcall
pop
ret
inc
cmp
xchg
rcr
adc
dec
repnz
dec
xchg
out
cwtl
jb
scas
adc
sub
addr16
test
in
adc
cmp
xorl
pop
lcall
push
or
lds
and
xchg
sub
repz
mov
xor
popa
and
add
dec
pop
les
pop
inc
xchg
das
and
push
stos
push
enter
jg
inc
fisubs
mov
sub
xlat
nop/reserved
sbb
mov
pop
lret
cltd
mov
rcrl
mov
fld
cld
dec
jp
cld
stos
lods
fbld
loope
lret
adc
xchg
ljmp
add
addl
inc
leave
pop
pop
test
imul
jmp
xchg
daa
aad
mov
lea
int3
int3
or
mov
rcll
jmp
xor
xchg
cmp
mov
mov
mov
add
out
add
enter
icebp
jns
inc
pop
push
rorl
fcoms
insb
arpl
sub
dec
outsl
xor
sahf
sub
push
jmp
in
dec
imul
out
clc
xchg
lahf
mov
leave
mov
cltd
pop
pop
mov
sub
out
pushf
gs
xchg
xchg
les
iret
mov
lods
mov
test
shl
lahf
fcomps
dec
push
mov
cmp
cld
icebp
popf
inc
mov
mov
xor
pop
adc
push
push
and
adc
and
jae
adcb
lcall
pop
xorb
dec
lahf
and
nop
jle
adc
imul
stc
jg
push
and
gs
int
imul
es
jp
sarb
jnp
outsb
iret
gs
je
imul
mov
xor
fbstp
lcall
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
adc
push
cmp
js
cmpsl
jle
js
std
ja
jb
xor
repnz
xlat
sti
insb
imul
scas
pop
mov
push
pop
add
xchg
mov
dec
icebp
xor
mov
dec
out
je
sbbb
ja
rcrb
inc
sbb
das
or
movsb
mov
daa
jae
lea
adc
sbb
stc
push
cmpsb
push
jmp
inc
ds
mov
out
in
cmpsl
les
fisubs
repz
add
pop
adc
rolb
jnp
xchg
loope
shlb
pushf
inc
push
ss
into
movsl
and
xchg
ret
cmp
xchg
pop
es
add
dec
sub
xor
test
adc
xlat
fnstenv
jne
inc
aad
adc
int
pop
and
ss
int
imul
pop
aaa
daa
jo
pop
inc
lret
int
push
lahf
adc
jg
xor
adc
dec
lcall
icebp
clc
arpl
ret
das
jo
fnstenv
test
js
xchg
enter
xor
mov
jmp
jg
pop
adc
mov
inc
xchg
xchg
push
adc
shl
jb
int
maxps
or
fs
pop
mov
and
imul
inc
mov
pop
sub
repz
lea
sahf
push
mov
test
repnz
adc
push
mov
xchg
sarb
add
in
popf
jae
jecxz
loope
int
push
outsl
imul
lods
jge
push
inc
pushf
out
pop
ret
jne
in
imul
push
cli
inc
enter
and
add
sub
and
adc
cli
sub
pushf
test
xchg
jno
add
gs
inc
test
or
std
cs
mov
repz
int3
cmp
mov
jmp
push
inc
dec
cs
jnp
push
out
push
or
xchg
mov
or
pop
fisubrl
fsubrl
loop
testl
xchg
lret
sub
cmpsb
sti
dec
mov
xor
push
jne
arpl
dec
imul
pop
iret
imul
rorb
imul
out
scas
add
mov
sbbb
jns
insb
xchg
or
subb
push
je
arpl
je
gs
lock
xchg
push
mov
add
inc
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
popf
jae
addr16
lret
insl
jbe
fnstenv
lahf
push
and
mov
fisubl
dec
xchg
xlat
sub
inc
cwtl
jae
and
mov
mov
pop
sub
adc
jo
mov
sbb
jmp
and
cmp
jae
lret
movsb
sbb
mov
cmp
add
out
or
out
sbb
dec
loopne
mov
dec
push
adc
jecxz
xchg
mov
sub
mov
mov
push
hlt
ja
adc
sub
xchg
ret
mov
out
fidivrl
push
insb
or
mov
cmp
das
fmuls
xlat
notl
rcr
jmp
cmp
xchg
cmpsb
fs
add
sbb
mov
cwtl
pop
dec
enter
rcrl
and
or
leave
insb
or
jge
or
jo
and
enter
pop
mov
xchg
insl
pop
and
push
pop
clc
and
push
mov
fcomip
pop
sub
pop
add
sti
imul
push
outsb
test
cmpsl
and
or
sbb
inc
adc
addr16
nop
cwtl
add
scas
cmp
push
inc
cmc
and
pushf
lods
repnz
sub
out
pop
mov
sahf
pop
pop
sbb
fcoml
push
outsl
popf
fdivs
inc
jmp
out
es
mov
daa
in
stos
cmp
popa
xor
mov
xchg
sub
xchg
push
xchg
arpl
and
jg
ret
and
dec
add
push
cmp
fistps
xlat
loop
pop
rorl
call
mov
cs
xchg
inc
xor
insb
mov
shll
out
lods
les
clc
dec
pop
test
je
jmp
xor
jbe
arpl
sub
loope
fistps
or
adc
pop
aad
jnp
cmc
outsl
jb
insl
inc
gs
adcl
call
or
aaa
sbb
comiss
fisttpl
pop
push
xor
in
push
push
pop
dec
dec
addl
icebp
push
pop
dec
aam
mov
es
std
push
arpl
dec
popa
leave
dec
repnz
cmp
add
sahf
rorb
rcll
cmp
fsubl
sahf
xchg
xorl
movsb
into
test
pop
int
cmp
mov
mov
add
jne
add
jne
jmp
lret
cmp
mov
mov
cmpsl
mov
js
cmpsl
jle
js
sub
pop
out
aam
int3
aad
mov
xchg
mov
rcrb
shl
mov
lahf
adc
mov
mov
icebp
cmp
xor
inc
out
int3
sub
cmp
sub
rolb
jmp
pusha
push
mov
lcall
adc
ljmp
pop
dec
add
shll
mov
sub
cmc
ret
mov
aam
mov
pop
dec
add
mov
aaa
cmp
cmp
es
js
dec
shll
or
mov
sub
xchg
shrb
rol
fisttps
aam
outsl
pushf
jo
jg
inc
popa
jbe
rolb
int
fimuls
dec
or
jbe
xor
cmp
test
mov
test
stos
loop
push
jl
in
and
scas
jae
and
loope
adc
rorl
test
and
je
jns
jno
mov
pop
fs
xchg
pop
adc
jmp
cmp
sub
inc
lock
enter
clc
sub
lods
or
mov
fsubl
jnp
mov
sbb
sbb
cmp
les
xchg
mov
adc
xor
mov
adc
movsl
repz
adc
and
fdivs
cmpsb
stc
pop
es
cmpsl
inc
push
xchg
lcall
jl
dec
mov
cmp
cmp
data16
and
pop
jl
pop
loopne
and
mov
cli
jns
pusha
int
xor
addr16
ret
test
xchg
dec
or
adc
adc
pop
jg
aam
push
mov
sbb
outsl
jae
and
les
stos
sub
pop
inc
loope
sbb
push
xchg
or
nop
test
fcompl
inc
inc
cwtl
xor
add
sub
insl
imul
pop
fidivrs
inc
mov
mov
dec
daa
enter
add
in
dec
jle
mov
cmpl
fs
pop
shll
jbe
dec
inc
sub
ficompl
push
rorb
xor
imul
adc
dec
mov
fs
js
sbb
enter
clc
mov
jp
dec
ret
fldcw
cmp
push
push
adc
push
add
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
pop
cmp
in
js
cmpsl
jle
js
sub
into
mov
insl
mov
dec
mov
in
in
loopne
stos
push
jmp
pushf
mov
sub
popf
xchg
jecxz
mov
clc
outsb
lods
scas
adc
inc
mov
jbe
cmp
push
push
mov
cmpsl
mov
cmp
xor
dec
fnstcw
shr
pop
fnstsw
mov
jmp
shl
sbb
insl
mov
mov
popf
out
ja
shll
cs
mov
xor
add
fdivs
stos
and
or
fildl
ja
es
pop
cwtl
pop
mov
idiv
jns
lea
and
repz
xchg
arpl
push
xor
xchg
jle
mov
jo
rol
cmp
shll
xor
jnp
push
mov
gs
and
sub
movsl
fcompl
or
add
push
xchg
mov
ds
or
int3
sbb
stc
rcrl
test
lea
jecxz
xchg
bound
stos
sub
aam
aad
xor
xchg
adc
dec
outsb
mov
ret
cltd
push
adc
and
in
cmp
mov
xchg
fs
popa
pop
mov
jl
test
xor
scas
aaa
xchg
ret
inc
scas
mov
inc
aaa
and
js
cli
mov
jno
sahf
push
loope
popw
xchg
push
mov
xor
loopne
xchg
xchg
jae
mov
sub
xor
cmp
add
lret
stos
pusha
leave
aad
cmp
test
xchg
mov
cli
push
sub
push
inc
xor
sbb
push
jnp
mov
test
mov
sub
mov
call
loop
cmp
jp
adc
mov
dec
rolb
or
mov
jp
push
repz
add
lea
cmp
pop
cmp
xor
mov
cmp
mov
sub
aam
iret
cltd
ror
push
sub
xchg
or
dec
mov
in
in
mov
push
xchg
jb
pop
sar
addl
pop
mov
ja
sti
scas
dec
mov
mov
add
stos
sub
aad
dec
lret
scas
mov
cli
stc
idivl
push
jo
jecxz
push
sbb
popf
mov
fsts
xchg
das
aaa
xchg
xor
fstps
pushf
icebp
jg
insb
leave
and
and
ljmp
inc
cld
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
push
push
pop
bnd
push
jle
js
daa
push
mov
addr16
mov
adc
sti
dec
lods
push
or
repnz
pop
es
test
in
dec
sbb
inc
jl
adc
jo
jnp
sbb
ja
lods
fwait
notb
mov
les
jnp
cmp
mov
push
xor
int3
fcomps
cmp
es
loop
mov
sahf
lret
ret
mov
outsb
ficomps
lock
pop
loop
mov
aas
in
fs
test
mov
je
inc
mov
sarl
dec
lds
sub
enter
xchg
mov
mov
aam
outsl
and
jbe
aam
xchg
sbbb
sbb
aam
into
pop
jns
jns
pop
inc
int
jp
enter
xor
ret
mov
dec
sbb
jg
inc
xchg
insb
xorb
in
test
push
or
notl
inc
imul
ret
cmp
add
xor
addb
inc
lahf
out
mov
lahf
leave
dec
pop
dec
xchg
lea
mov
mulb
arpl
push
xchg
sbb
loope
mov
and
dec
loop
lret
and
xor
ds
ja
xchg
pop
scas
mov
cwtl
js
cmp
aaa
or
and
popa
daa
mov
pop
and
xchg
add
cmp
shll
adc
fists
fucomip
mov
push
and
pop
es
andb
ds
xor
xor
inc
and
loopne
loop
lcall
shrl
adcb
and
cmp
scas
jl
or
movsl
sbb
shrl
jns
rcrl
inc
call
pusha
leave
sbb
mov
pop
inc
ljmp
dec
push
add
xor
lret
stos
mov
dec
arpl
sti
nop
sbbb
dec
icebp
out
sbb
mov
fnsave
or
add
dec
xchg
cmpsb
es
mov
mov
popf
mov
pusha
fistpl
pop
push
outsl
movsb
ss
push
adc
in
aas
or
pop
lods
xor
xor
inc
js
sub
lock
ja
ss
push
ds
outsb
mov
add
jb
fwait
xchg
and
mov
dec
sub
cmp
scas
popf
and
js
iret
ja
frstor
push
rcrl
pop
mov
ljmp
test
inc
sbb
mov
repz
mov
je
push
into
std
xlat
imul
and
jae
xor
negl
ja
scas
scas
insl
sarb
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
les
in
idivl
push
jle
js
sub
int3
jge
lret
mov
mov
icebp
inc
or
jno
dec
xor
add
lea
mov
push
xor
cmp
mov
mov
mov
fldt
xor
dec
bound
xchg
sbb
xor
test
test
in
aas
lods
and
mov
fs
push
data16
mov
aam
cmp
push
fsts
or
jne
jg
aad
jnp
add
adc
and
fisubrl
push
in
gs
addl
and
stos
jmp
jno
adc
and
jmp
insl
sarl
mov
aad
xchg
jnp
push
popf
mov
cmp
or
rclb
pusha
scas
inc
push
fsubrs
xchg
mov
sbbb
in
mov
add
jge
int3
inc
ficoms
gs
sub
arpl
sub
out
in
xchg
inc
fistpl
mov
jnp
mov
sbb
out
les
xchg
inc
mov
nop
clc
test
rcl
cmp
sbb
je
lahf
jp
inc
or
inc
xor
ja
fs
bound
mov
pop
xchg
enter
adc
mov
mov
or
jne
aam
movsb
loopne
dec
lds
call
jmp
in
pusha
mov
scas
cmpsl
push
daa
xchg
out
pop
repnz
mov
aas
call
gs
aaa
mov
jge
das
out
loop
aaa
sub
insl
dec
jp
jl
pop
inc
je
sbb
push
test
imul
lcall
adc
mov
fidivrl
popa
adcb
aam
sub
mov
mov
inc
sbb
jns
pop
xchg
addr16
insb
insl
cmp
dec
add
jns
iret
adc
jl
mov
out
inc
dec
jecxz
push
sarb
add
mov
fldl
and
sub
jb
cmp
jle
ljmp
in
pop
insl
pop
sbb
gs
cmp
jmp
jp
pop
xchg
add
test
negb
roll
loop
xor
cwtl
and
fs
pop
insb
dec
sbb
cli
jp
mov
int3
in
mov
mov
stc
popf
movsb
es
adc
jb
in
jmp
pop
pop
jl
iret
clc
pop
jns
cmpsl
xor
mov
jmp
cmpsb
out
lahf
imul
lcall
xchg
pop
loop
xchg
daa
movsb
lods
xor
lcall
cmp
rcll
mov
lret
xchg
inc
cs
lds
pop
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
adc
jmp
push
xor
inc
mov
dec
shll
dec
mov
pushf
or
sbb
rorl
add
lret
mov
jmp
or
movsb
or
fbstp
mov
ss
lods
and
pop
jge
ds
sbb
test
cmpsb
je
cmp
adc
popa
imulb
mov
jno
inc
pop
inc
in
adc
dec
sarb
cmp
lds
clc
xlat
iret
loope
lcall
xchg
jnp
dec
lea
in
push
movsb
int3
pop
cmp
and
movsl
inc
sbb
movsl
sbb
pop
xor
xchg
xor
repnz
roll
add
pop
jmp
lea
cmp
dec
add
stos
mov
mov
loope
stos
push
inc
addl
je
pop
sbb
push
subl
cmpb
push
iret
in
popf
inc
jo
bnd
sbb
sbb
jle
push
psrlw
or
and
cli
andps
aaa
imul
pop
imul
or
inc
pop
lock
in
stos
fs
mov
push
insl
xchg
sbb
sbb
inc
insl
cmpsl
or
sub
cs
mov
or
movsb
or
std
int
std
mov
jbe
jge
out
jge
cmpsb
xor
ror
js
push
push
xchg
sub
lret
out
in
sbb
cmc
inc
lea
pop
mov
lahf
dec
mov
and
jnp
add
jns
dec
ljmp
sub
mov
add
leave
inc
xchg
in
jge
stos
shrl
xor
dec
inc
push
mov
outsl
xor
aam
loop
pop
mov
lahf
test
fwait
hlt
xchg
push
testb
mov
nop
cs
js
dec
mov
rorl
mov
or
sub
inc
push
inc
lods
cmpsl
sbb
mov
xorl
fisttpll
push
mov
outsl
iret
imul
pop
aad
sbb
adcl
mov
dec
push
inc
mov
lods
into
aad
gs
fbstp
and
push
push
xor
lods
lds
in
mov
inc
add
jns
pop
out
or
xchg
push
test
xlat
popa
xchg
jecxz
push
imul
jge
lock
scas
inc
mov
cmp
mov
das
add
cmp
pushf
ss
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
jecxz
loop
js
je
js
xchg
test
scas
popl
pop
out
adc
mov
jge
fistpl
push
and
addb
push
mov
sbb
bound
mov
pop
push
cmpsl
mov
pop
stos
daa
in
jb
daa
dec
jmp
popa
fs
sbb
lret
nop
push
sbb
lret
dec
mov
adc
hlt
negl
sbb
ja
shll
cmp
or
sbb
shrb
sub
sbb
cwtl
aaa
aam
icebp
push
add
in
mov
push
imul
lret
jp
repnz
aas
fsubrs
mov
in
jne
call
int
stos
push
arpl
xchg
xchg
repnz
fcomps
out
pop
nop
adc
out
mov
jge
and
ja
data16
inc
shlb
mov
lcall
inc
mov
out
sbb
adc
xchg
sub
jp
sbb
loop
repnz
fs
fmuls
lea
jno
xor
mov
or
jns
jnp
lods
aaa
xchg
xor
or
cmovnp
xlat
adc
mov
ss
push
mov
ror
stos
jns
and
or
loopne
fsubs
adc
push
push
in
jg
push
lret
pop
loopne
cwtl
imul
js
mov
cmpsb
push
xchg
xor
addr16
inc
rcrl
ds
cld
inc
jmp
adc
pop
sbb
jbe
popf
jg
test
pop
sarb
ss
lods
or
pop
mov
mov
ja
mov
je
mov
sub
lds
mov
lea
fsub
or
jno
pop
pop
push
pop
movsb
mov
in
out
pop
out
loop
pop
cmpsl
jmp
pushl
pop
rorl
in
inc
xchg
xchg
mov
int3
jns
mov
sub
xchg
imul
pop
inc
add
ja
dec
mov
push
sbb
adc
xor
sbb
inc
xchg
fdivs
pusha
lock
xchg
lea
xlat
cmp
rol
push
test
xor
subl
adc
daa
in
xchg
jp
enter
loopne
cmp
filds
mov
int3
pop
shrl
mov
xchg
pop
sub
sbb
insb
and
pop
cmpsl
or
addr16
or
cmp
in
and
mov
and
sti
outsl
hlt
iret
and
jb
jmp
xchg
dec
jle
lcall
xchg
and
out
xchg
and
jbe
jg
add
popf
lea
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
mov
fdivrp
js
je
js
bound
jecxz
jb
repnz
xchg
fimull
rcr
out
clc
rolb
xor
scas
adc
cmp
bound
lock
pop
xor
loope
iret
inc
add
cmpsb
hlt
scas
push
aad
mov
popa
leave
pop
or
rclb
xor
mov
fldcw
nop
stos
in
and
andl
push
add
ljmp
stc
add
dec
mov
jmp
ret
rolb
scas
sub
add
hlt
or
test
xchg
std
in
subl
ljmp
xchg
xchg
mov
fistl
adc
jl
sub
clc
insb
movsl
add
cmpsl
mov
jo
xchg
lcall
enter
lea
or
mov
lds
mov
push
test
test
add
cltd
xor
enter
aas
push
test
xchg
jno
fucomi
cmp
imul
movsl
mov
and
imul
mov
pushf
mov
hlt
push
lods
out
or
or
push
das
cmp
ljmp
pslld
lret
lahf
or
mov
jns
lcall
push
dec
addr16
and
or
imulb
ss
insb
fstps
fnstenv
test
pop
bound
lea
ret
out
and
movb
into
stc
push
xchg
adc
or
call
push
mov
add
jnp
push
jle
sub
out
sbb
push
rorb
mov
pop
lock
xor
mov
outsl
shrb
aaa
sub
fdivs
lds
push
movsl
cld
adc
lahf
pushf
in
test
lods
cmp
in
mov
mov
inc
or
loop
or
mov
cltd
mulb
dec
mov
pop
ja
add
lods
adc
repz
fidivs
xor
mov
scas
push
dec
inc
or
xor
fcompl
push
mov
cwtl
adc
insb
nop
cmp
xchg
jp
mov
mov
push
mov
adc
hlt
cmpl
iret
jbe
divb
or
mov
out
or
repz
cmp
inc
or
sahf
xor
dec
mov
sarl
repnz
ja
les
sbb
cmp
ljmp
sbb
mov
gs
loope
cs
or
loop
sub
mov
and
mov
jae
xchg
sbb
int
and
out
cmp
les
inc
in
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
mov
fiaddl
js
jb
mov
inc
out
dec
xorb
mov
rcrb
call
sbb
iret
pop
fucomip
popf
bound
add
push
outsl
adc
xchg
aad
out
aam
adc
lods
xchg
push
loope
fldpi
or
hlt
push
xor
xchg
add
mov
jp
xor
jl
cltd
in
mov
and
jecxz
xchg
mov
mov
aaa
sbb
out
xor
adc
sub
fwait
mov
inc
mov
or
mov
cli
icebp
mov
jle
movsb
out
inc
divb
inc
jge
dec
mov
mov
xchg
lret
lcall
repz
das
ljmp
pop
pop
adc
in
pop
or
inc
cmp
and
sbb
das
mov
imul
rcll
cld
addr16
push
push
rorl
inc
add
pop
imul
dec
xchg
sub
sub
sub
stos
es
xor
jl
fwait
in
sbb
mov
mov
mov
mov
mov
xchg
incl
cmp
sub
popa
jecxz
dec
aam
lods
pop
push
sbb
sub
mov
popa
hlt
cli
mov
and
add
stc
fucomip
sub
punpckhwd
add
mov
mov
aam
inc
lods
jb
jl
xor
jb
ss
les
lock
andl
xchg
inc
sbbl
adc
ja
mov
loopne
in
dec
lock
in
fcompl
imul
aaa
fdivr
aam
inc
dec
ds
pop
mov
jne
ds
pop
mov
jmp
data16
lods
test
divl
xor
jl
les
fstpt
adc
push
pusha
test
inc
cmpb
les
popf
lret
gs
sarl
outsb
dec
xchg
lds
cmp
call
xchg
cmp
xorl
pop
and
xchg
andb
inc
jle
test
adc
mov
ds
popf
add
add
pop
pop
leave
pop
adc
add
sub
sarb
stos
xlat
inc
aad
cmp
push
mov
dec
testl
jae
sub
sti
pop
xchg
jl
stc
mov
push
sub
sub
jbe
adc
lcall
cmp
mov
inc
imul
mov
mov
lods
lds
jmp
je
lods
jno
xor
orb
sbb
popa
fmul
insb
mov
xchg
jo
cli
cmp
ss
leave
push
aaa
adc
xchg
sub
mov
xor
in
mov
and
pop
cli
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
movsbl
mov
cmpb
jle
js
adc
ret
andb
jno
mov
sub
ret
mov
cmp
cli
addr16
fidivs
popa
mov
mov
cmp
scas
shll
lods
jno
lock
js
inc
test
std
call
and
stos
lret
rol
sub
sbb
cld
push
cmp
movsb
mov
repnz
mov
sub
jl
stos
stos
clc
shll
pusha
orb
fists
loope
or
dec
test
xor
xchg
mov
cld
and
out
mov
cs
add
ds
lret
inc
stos
xor
jae
add
imul
sbb
out
inc
in
lret
call
push
movsl
leave
test
xorl
test
mov
mul
xchg
dec
xlat
or
lea
dec
cmp
mov
mov
jg
adc
cwtl
mov
mov
lcall
push
sti
add
jge
jge,pt
push
ljmp
movsl
sbb
mov
lcall
dec
fisttps
jp
jle
push
and
addr16
inc
and
or
pusha
and
int3
les
pop
mov
clc
fwait
and
das
ret
dec
rcll
dec
cltd
in
pop
inc
int3
mov
mov
mov
sub
scas
loope
jp
cs
push
mov
and
fcoml
call
mov
pop
push
aam
outsl
xchg
mov
pop
jmp
test
dec
testl
mov
in
push
aad
xchg
cmp
mov
mov
push
mov
rorb
xchg
mov
fmul
and
rorb
mov
pop
loopne
jns
pop
adc
pop
cs
out
jmp
test
mov
mov
jb
imul
cwtl
inc
stos
jb
cmp
les
adc
wbinvd
lea
mov
push
pop
popa
div
mov
jb
add
cwtl
mov
mov
xchg
into
sarl
push
xor
aaa
cmp
jb
movsb
xor
lret
stos
jae
sbb
pop
mov
xchg
jle
loop
fmulp
xchg
addl
jge
cs
ljmp
cmpl
mov
adc
dec
dec
aam
xor
jns
in
jge
aam
push
lea
inc
sbb
scas
fsubrl
pop
fwait
loop
movsl
or
scas
andb
mov
inc
repnz
mov
in
subl
fildll
scas
xchg
xor
mov
mov
jp
lds
jns
and
and
or
pop
out
in
adc
in
test
mov
jmp
sarl
fcmovne
mov
fsubr
outsb
inc
cmp
rolb
js
aad
jb
push
aas
bound
repnz
cmp
flds
add
pop
shll
sbb
xchg
dec
add
into
fstpl
lea
mov
push
shl
sub
jg
xor
adc
andb
jmp
add
arpl
in
pop
sti
daa
sbb
or
xlat
and
inc
mov
xchg
and
scas
insb
adc
lret
lea
xorl
test
jle
or
cmpsb
mov
fisubrs
and
jg
fsubs
fs
stc
lods
loopne
cmp
mov
adc
or
bound
jecxz
repnz
popa
push
cmp
or
gs
cli
or
sahf
mov
and
mov
adc
rcr
in
sub
rol
sbb
jb
mulb
jecxz
shll
jne
subb
daa
int3
divl
xor
mov
inc
dec
sbb
idivl
sub
in
cld
sbb
fldenv
pop
jle
xchg
pop
jns
in
stos
mov
test
cmpsb
sub
cmp
dec
jle
outsb
movsb
adc
shrb
fsubrs
sub
sub
or
push
inc
ficompl
push
mov
rcrb
push
xor
pop
movsb
movsl
loope
sbb
fistpl
xchg
fldl
mov
cmp
pushf
sub
enter
fwait
mov
sbb
inc
outsl
push
testl
sbb
fmulp
in
push
add
xor
popf
aad
es
addr16
dec
or
lea
das
cmc
push
shlb
inc
inc
loopne
push
les
fdivrl
mov
popf
arpl
sub
loopne
loopne
dec
mov
xchg
sub
inc
sbb
fidivs
jno
sub
sub
push
lds
cmpsl
loop
adc
sbb
js
hlt
outsb
xor
cmp
nop
xchg
fiadds
addr16
cmpsb
mov
cmp
hlt
fcomps
jnp
sub
and
mov
dec
dec
or
fistpll
cmp
lock
js
dec
sahf
in
cmp
push
sbb
pusha
add
pop
pusha
cmp
dec
or
imulb
pop
test
jle
mov
imul
lds
mov
insl
lea
call
jge
imul
sbb
or
adcb
out
lret
dec
xor
adc
fwait
outsb
sub
mov
out
pop
inc
sarb
jo
and
imul
jmp
pop
insb
test
andb
add
out
and
and
loope
pop
mov
scas
or
adc
jbe
xchg
sub
add
add
rol
fcmove
rcl
pop
mov
ret
mov
je
js
imul
out
stc
and
sub
or
mov
sbb
data16
sahf
repnz
sbbl
cmc
in
inc
test
pop
adc
imul
push
lock
inc
scas
data16
sbbb
mov
int
mov
and
scas
fdivrl
mov
pop
loopnew
inc
add
push
pop
xchg
jp
add
mov
jg
push
and
xor
in
mov
cld
sub
mov
es
rorb
xor
push
andnps
roll
cltd
jp
aam
push
mov
xor
das
add
scas
sbb
jp
jns
xchg
aam
int3
or
xchg
and
fs
xor
pushf
repnz
dec
and
sub
cld
shll
enter
je
push
pop
sbbb
ds
cmp
pop
inc
cmp
dec
push
aas
mov
sbb
nop
jnp
clc
sub
push
xchg
enter
mov
sub
fisubrl
mov
ret
outsl
cmpsl
or
sbbl
adc
test
mov
fucomi
push
xchg
out
sbb
idivb
jmp
jl
incl
mov
in
inc
mov
pusha
mov
fsubs
imul
sahf
addr16
aam
fldenv
jmp
fstps
add
jmp
pop
out
mov
js
xlat
iret
icebp
out
ret
mov
pop
push
popa
lcall
cmp
ficoml
pop
push
lahf
or
mov
icebp
xchg
sbb
pushf
lods
js
mov
sub
aam
test
rcr
dec
sahf
rolb
jb
aaa
mov
inc
push
pusha
and
inc
mov
cli
in
imul
mov
in
fdivrl
in
push
jge
fsubr
pusha
push
aam
mov
test
cmpsb
pop
xchg
out
inc
add
std
or
inc
sbb
sti
xchg
std
aad
gs
push
divb
jne
push
mov
ja
lods
lds
and
arpl
jne
cmp
ror
bound
jge
dec
dec
dec
xor
hlt
rcr
jle
cmpsl
xchg
imul
je
dec
movsb
repz
xchg
xchg
out
pop
add
pop
or
mov
mov
jg
or
xchg
xlat
stos
sub
clc
gs
push
fs
cmpsb
nop
lret
or
int3
andb
cmpl
inc
ret
loop
in
iret
xchg
pushf
out
and
dec
sti
and
lret
inc
or
lahf
and
pop
and
and
inc
insb
scas
sbb
xchg
or
or
aad
ficoml
lret
cltd
scas
addr16
fwait
fwait
pushl
push
insl
ret
pop
sahf
adc
adc
test
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
sbb
js
je
js
inc
add
or
inc
lcall
mov
push
xchg
out
mov
mov
shrl
mov
mov
negl
lock
mov
sahf
mov
fdiv
cs
repnz
or
and
shlb
mov
mov
fnstcw
cmpsb
fisubl
xor
or
rcrb
outsb
add
inc
pop
fiaddl
jo
ret
dec
iret
adc
popf
sub
lea
shlb
stos
cmc
les
enter
push
jmp
mov
or
inc
rcrb
mov
rclb
push
xor
mov
inc
mov
out
or
pop
hlt
or
ss
int3
mov
jecxz
roll
cld
mov
and
jmp
ja
adc
dec
das
pop
shrl
das
jne
inc
push
pop
test
or
sub
jg,pn
xchg
push
test
cmp
gs
jno
mov
div
clc
push
ljmp
or
inc
add
jno
inc
testb
or
rclb
das
push
insl
mov
push
push
aam
and
fsts
cmp
je
pop
mov
fldl
fwait
push
and
sbb
inc
sub
daa
cwtl
jbe
xchg
rcll
mov
pop
pop
popf
pop
dec
mov
out
pusha
lret
fcoms
scas
push
jmp
add
adc
sbb
sub
divl
xchg
push
sti
les
test
or
fmuls
js
dec
jl
sub
popf
sub
scas
cmp
xchg
adc
pop
adc
loopne
pusha
icebp
push
sub
insl
pop
sub
divb
stos
or
jbe
lock
hlt
ss
mov
in
mov
mov
mov
fldt
jbe
ja
pop
scas
xor
and
cmp
jecxz,pn
and
add
sti
pop
test
sub
addb
leave
in
pop
mov
outsb
ljmp
adcl
roll
adc
sub
lret
sti
repz
movsl
aas
stc
fmuls
mov
gs
push
dec
xchg
push
mov
cmp
lds
fistpl
xchg
jl
dec
test
xchg
scas
and
ss
pop
or
loope
mov
mov
aas
mov
pop
je
cwtl
sbb
inc
mov
loopne
sti
popf
sarl
pop
mov
mov
testl
test
mov
mov
push
jle
js
push
pop
sti
cmpl
push
sbb
mov
test
movsl
mov
jb
jnp
les
dec
iret
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
shrl
js
je
js
clc
pop
es
xor
dec
mov
lods
mov
add
call
mov
out
inc
test
mov
fidivrs
in
out
into
dec
dec
sub
sbb
shlb
push
push
pop
mov
out
mov
imul
inc
mov
test
hlt
inc
ret
imul
or
inc
push
fldt
es
sbb
and
jno
cmpsb
ja
xchg
pop
inc
and
mov
pop
aam
rcrb
leave
inc
push
mov
int3
imul
or
out
andl
stos
shlb
adc
cmp
adc
mov
mov
mov
ret
mov
lret
mov
mov
call
es
mov
cli
test
push
and
stc
mov
fstpl
sub
cwtl
inc
std
cmp
out
shlb
inc
data16
mov
inc
pop
or
xchg
dec
jno
mov
cs
inc
inc
lods
ja
push
inc
mov
dec
out
mov
sub
aam
je
jae
or
add
gs
lods
rcr
sub
adc
subl
cmpsl
xchg
pop
lock
cs
sub
inc
int
jno
cmpsl
lcall
xor
icebp
ret
push
cltd
push
xchg
hlt
jae
adcl
push
ljmp
adc
jmp
mov
call
loop
mov
dec
add
fcoms
and
fcomp
sti
mov
stc
les
xchg
fbstp
test
pushf
in
rclb
jge
test
adc
idiv
lock
in
cltd
pop
jbe
das
imul
adc
jp
in
jbe
adc
repnz
add
lahf
icebp
sub
aad
aad
std
insb
push
bound
lcall
inc
pop
test
mov
dec
int3
pop
cmc
rcrb
jns
psubw
mov
dec
pop
mov
push
pushf
cmp
negl
mov
sbb
daa
and
in
sbbb
stc
test
xsha1
cmpsb
push
shlb
mov
adc
xor
mov
ljmp
mov
sub
add
mov
pusha
enter
sub
xchg
mov
insl
mov
out
sbb
xchg
cli
sbb
movsb
lock
sbb
movsl
ja
fs
or
push
test
out
mov
cmp
xchg
sahf
cs
sub
pop
ja
jns
cmpsb
mov
and
add
push
aad
jmp
inc
sub
mov
mov
and
subb
in
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
and
cs
js
jle
js
add
repnz
std
shlb
aad
jns
pusha
dec
or
dec
adcl
pop
mov
negb
jle
nop
jo
xchg
imul
popa
or
push
or
pop
nop/reserved
imul
adc
sbb
je
fistps
jbe
dec
xchg
cld
mov
add
mov
adc
and
mov
push
outsb
loop
ret
test
pushl
sahf
pop
iret
xchg
inc
pop
aaa
shrl
insb
dec
mov
mov
mov
and
mov
xchg
rolb
dec
sub
sub
pop
add
jo
pop
loopne
push
xchg
xor
cld
fldlg2
aaa
or
in
adc
inc
stos
daa
jge
xchg
adc
cmp
test
clc
sub
add
add
test
jb
xchg
out
int3
xchg
cwtl
lea
mov
mov
sbb
pop
call
dec
imul
jns
sbb
cli
arpl
stc
pop
mov
in
lahf
rorb
gs
push
popf
addr16
enter
mov
ds
adc
in
fisttpl
out
mov
lea
loopne
sbb
add
clc
int
push
inc
adc
pushf
push
xor
lret
mov
mov
adc
je
inc
jnp
inc
and
popa
js
mov
mov
data16
test
adc
int
nop
cmp
ret
hlt
orl
cld
out
sahf
bound
hlt
mov
and
ja
sbb
adc
and
lods
ja
mov
stos
inc
pusha
fstl
mov
push
cltd
mov
xchg
ret
jnp
or
cltd
sub
xor
add
call
fucomi
or
lods
push
add
cmp
mov
mov
mov
std
mov
or
adc
push
mov
push
add
loopne
inc
int
shll
xor
popf
sti
insb
mov
mov
int3
xchg
lods
ret
cmc
lcall
aaa
aas
in
stos
int
in
push
js
aad
add
mov
inc
jge
aas
add
cmp
xchg
jge
cmpb
xorb
push
jp
and
dec
lret
dec
clc
adc
adc
push
dec
and
dec
mov
pop
aas
dec
push
pop
push
arpl
push
jle
je
enter
and
stos
fisttpl
aad
into
xchg
inc
lea
add
jle
leave
lods
push
inc
xor
jle
push
push
mov
out
addr16
js
jne
iret
cmp
push
fcompl
add
xchg
std
adc
inc
xor
popf
add
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
movsl
and
js
je
js
adc
dec
mov
arpl
dec
imul
jg
aas
and
and
push
xchg
xor
push
mov
add
or
xchg
lds
imul
cmp
push
roll
jae
in
mov
mov
sub
aam
cmpsl
addr16
add
dec
call
movsb
in
sbb
inc
push
rolb
enter
add
and
push
sarb
inc
xchg
mov
cmp
dec
mov
outsl
pop
mov
lret
mov
jbe
jo
mov
fsubs
outsl
mov
in
dec
mov
test
int
mov
add
cmp
in
push
cmp
push
sti
sbbb
xchg
es
dec
and
push
insb
es
mov
jno
lahf
daa
dec
inc
nop
int
mov
loop
ja
and
frstor
ret
pop
scas
sbb
add
popf
mov
cmp
mov
in
mov
xchg
imul
cli
or
insb
dec
push
je
inc
pop
cmp
add
js
push
adc
pop
cmpsl
mov
mulb
aam
leave
jo
xchg
movsl
test
cmpsl
fs
mov
push
add
cmp
out
adc
jno
daa
sub
jnp
cli
cmp
sub
jbe
push
cmp
int3
mulb
dec
test
xor
adc
mov
mov
cltd
push
jb
inc
repz
mov
test
imul
and
movsl
sbb
add
test
lea
or
mov
lods
pop
dec
cli
xchg
cwtl
jbe
leave
adc
or
data16
cmpsl
out
mov
rclb
rcrl
or
xchg
sbb
lret
inc
push
lea
imul
lods
mov
in
dec
lret
and
shll
jno
jnp
sbb
pop
mov
sub
loopne
jno
or
arpl
mov
out
inc
fcomps
push
inc
addr16
mov
icebp
mov
inc
and
rclb
stos
lock
dec
adc
pushf
data16
and
xor
mov
or
aad
cs
mov
adc
lahf
sbb
fnstsw
or
mov
data16
mov
call
je
lret
pop
cmpsb
ja
out
pop
fidivs
divl
xchg
adc
inc
jge
scas
std
fs
ja
addr16
add
inc
je
dec
pop
add
and
jo
inc
lea
adc
push
xchg
mov
call
fsubs
jge
mov
jmp
xlat
cmp
ds
js
adc
and
dec
cmp
js
arpl
pop
in
jo
ds
jge
lret
leave
enter
sub
pop
testl
sub
inc
jns
iret
ret
jb
outsb
mov
cmc
push
pop
xor
scas
add
push
jecxz
push
xchg
ljmp
mov
sti
test
scas
ffree
inc
xchg
enter
rolb
push
cmpsb
test
daa
in
js
xor
je
fadd
gs
and
jl
push
lahf
xchg
jbe
sbb
loopne
push
mov
xchg
fs
dec
cmp
aam
mov
psubusw
fbstp
adc
lods
icebp
mov
pop
insl
add
xor
xchg
push
imul
push
sbb
ja
insb
cmpb
jge
jb
test
ss
js
mov
mov
imul
addr16
fimull
add
xlat
push
dec
rcll
daa
test
xchg
js
jo
inc
adc
out
sbb
jns
shl
inc
jo
mov
mov
xor
ret
cwtl
cld
or
in
jb
fld
mov
pusha
ret
popf
mov
lahf
sarl
sbb
xor
shll
movsl
hlt
cs
mov
sbbb
dec
push
cs
imul
into
push
sti
cli
repnz
fnsave
ljmp
add
cmp
jecxz
xor
mov
and
inc
adc
pop
lea
cwtl
dec
les
imul
leave
in
xchg
sbb
sbb
xor
testl
inc
in
jecxz
xorb
add
les
xchg
pop
mov
or
in
sti
enter
or
in
push
movsl
xchg
roll
push
cmp
push
cmp
fwait
out
mov
sbb
sarl
shlb
xchg
jno
lds
push
nopl
loopne
jle
loopne
dec
std
sub
aas
push
int
xor
pop
loop
std
inc
xor
in
sbb
cmp
in
dec
loop
inc
xrelease
sbb
imul
xchg
dec
test
push
inc
mov
and
stc
enter
inc
lock
jbe
sbb
daa
ds
add
outsb
in
scas
repz
fisttpl
out
mov
in
pushf
test
jle
mov
popa
outsb
cli
fnsave
add
jns
test
mov
scas
cmp
mov
lods
loop
adc
jle
insl
adc
cmpsb
in
inc
mov
and
lods
pop
data16
xchg
je
adc
lahf
test
jbe
popa
scas
pop
stos
loopne
test
ljmp
loope
pusha
xchg
pop
jg
rclb
jge
insl
sub
jbe
xor
ja
ss
sbb
cmp
pop
push
hlt
mov
iret
iret
or
les
pop
xor
sub
sbb
addr16
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
adc
js
je
js
jns
push
and
push
gs
jle
nop
cli
jnp
mov
jns
icebp
fmull
mov
sarb
int
addl
push
add
mov
and
in
pusha
sub
lods
icebp
scas
cmp
sub
sbb
or
repz
mov
in
cmp
ja
sbb
roll
mov
push
das
lea
and
jl
dec
ljmp
and
es
andl
lock
nop
cmpl
jbe
sbb
out
xlat
hlt
lahf
je
cmp
or
xor
adc
clc
insb
iret
ljmp
xchg
in
dec
sbb
cmp
das
cs
adc
lahf
mov
sbb
mov
mov
out
int3
iret
push
scas
mov
push
lahf
or
inc
lret
out
mov
lods
xor
bound
xchg
pop
out
adc
pop
adc
enter
jo
or
jo
les
out
mov
repz
cmp
jg
divb
mov
add
xor
sbbl
jnp
dec
adc
sub
popa
pop
jb
dec
loop
aad
pop
xor
inc
mov
mov
push
cs
adc
not
lret
das
inc
std
imul
mov
and
ret
out
xchg
dec
mov
pushf
push
pop
js
lds
cmp
shl
pop
push
mov
call
fdiv
cmp
add
push
or
sub
int3
push
cmp
shll
jmp
std
adc
inc
nop
add
aam
mov
pusha
mov
xor
arpl
sti
jae
jecxz
sub
pop
mov
ss
xchg
inc
shll
mov
mov
pop
mov
insb
enter
dec
imul
and
enter
mov
loope
out
repz
push
aaa
stc
fs
testb
clc
ror
inc
dec
inc
mov
inc
push
scas
adc
mov
imul
insl
jg
mov
ficoml
mov
xchg
cltd
and
ret
pushf
cmpsl
mov
je
in
xor
xchg
outsl
jnp
jo
xlat
and
or
cmp
pop
mov
stc
jo
loop
pop
mov
scas
cmp
ret
aas
enter
inc
js
mov
and
jo
movsb
leave
iret
ds
adc
ja
fsubs
sbb
xchg
lds
sar
movsb
test
sub
outsb
lea
push
fldenv
lcall
fwait
sbb
sbb
mov
aaa
adc
mov
sti
nop
push
mov
psraw
dec
dec
dec
inc
xlat
push
pop
cwtl
stos
push
jge
mov
push
clc
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
mov
xorl
js
je
js
xchg
xor
filds
push
pop
outsl
arpl
add
insl
xchg
xchg
mov
and
fadd
lock
push
xchg
jo
insb
lret
dec
mov
mov
nop
nop
add
idivb
push
sub
cld
adc
mov
mov
push
mov
add
inc
loope
xor
out
cltd
or
dec
inc
xor
in
mov
mov
inc
pop
outsl
orb
test
int3
cltd
or
sbb
cmp
outsl
loope
xchg
rep
ljmpw
mov
push
pop
xchg
enter
inc
je
add
mov
jl
hlt
jmp
adc
xchg
iret
mov
hlt
lret
cwtl
lods
aaa
mov
inc
dec
fmul
sbb
stos
test
xchg
data16
xor
enter
and
mov
popa
fwait
les
leave
adc
pop
inc
cmc
jmp
ja
sub
mov
rolb
jmp
out
mov
ret
adc
fnsave
fldl
and
dec
push
icebp
sbb
adc
mov
scas
pop
js
mov
je
out
out
mov
mov
cmp
sub
mov
add
add
cli
xlat
push
jp
fbld
push
imul
mov
mov
push
lock
sti
push
mull
pusha
or
movsb
stos
scas
jp
xchg
out
mov
shl
pop
jecxz
and
xor
sti
incl
dec
jmp
into
jecxz
pop
add
inc
sub
lret
ss
inc
lds
mov
shl
cltd
sti
dec
es
xorb
rolb
lcall
xor
test
jp
mov
or
out
mov
sahf
jmp
insb
jne
cmp
pop
mov
mov
daa
cld
mov
fsubl
sbb
mov
cmp
sub
xorb
xor
test
jp
dec
cmp
pop
jns
mov
mov
sub
ret
repnz
xor
or
mov
inc
repz
cmp
data16
mov
lods
mov
jbe
repz
xor
scas
gs
out
mov
jecxz
lds
ficompl
shll
fwait
xlat
xor
out
rcrl
sub
and
imul
push
out
fadds
mov
push
dec
andb
je
push
jge
hlt
sbb
shll
jg
cmp
inc
inc
std
repnz
stos
cmpsb
sub
data16
push
sbb
pop
jecxz
adc
dec
or
test
mov
or
in
push
addl
mov
jne
push
jp
test
enter
mov
inc
or
filds
cmp
jne
test
daa
pop
movsbl
in
cmp
jmp
rol
ror
aad
xchg
mov
aad
imull
mov
js
imul
lret
rclb
cmp
xchg
mov
test
add
xor
mov
out
rcll
stc
adc
icebp
dec
sub
cmp
mov
scas
sub
adc
je
loop
imul
lahf
cmc
sbb
or
sub
jl
mov
sti
xchg
mov
adc
lods
mov
mov
ds
xchg
or
xchg
in
xchg
xlat
push
mov
xchg
dec
clc
xchg
jmp
aas
cli
push
fbstp
jb
cmp
testl
add
into
or
mov
ret
lret
jmp
and
or
fidivrl
cmp
imul
xor
mov
lods
cwtl
and
fsub
lcall
xor
jne
rorb
cli
lods
and
xor
sbb
sbb
jge
cs
lods
repz
mov
call
xlat
mov
rorb
gs
rolb
cli
sbb
jbe
inc
daa
das
cmp
decl
iret
pop
adc
outsb
gs
decb
gs
mov
les
ret
je
out
inc
fiadds
inc
jecxz
movsb
fidivrl
cmpsl
leave
out
jo
add
sub
divl
fnstsw
popa
popf
xor
xchg
pop
or
xchg
inc
sbb
sub
jns
add
orb
jns
add
in
pop
gs
push
gs
es
xor
mov
daa
xor
push
xor
testl
dec
in
add
sbb
mov
test
cwtl
jne
xchg
icebp
and
cmp
out
cmp
xor
cmpsb
adc
sub
pop
jae
imul
mov
into
rol
and
dec
iret
popf
loope
mov
test
sbbl
imul
add
shlb
add
cmp
stos
mov
into
sbb
leave
inc
inc
cmp
cmpsb
in
and
lret
pop
push
adc
xlat
and
cmp
es
dec
inc
outsb
jns
repnz
hlt
movsb
cmp
hlt
test
sbb
jnp
mov
mov
loop
sbb
xchg
outsb
outsl
shl
fildll
icebp
in
ljmp
adc
cmp
outsl
adc
lock
mov
mov
xchg
std
mov
mov
mov
and
pop
insb
insb
stc
inc
xchg
and
cmpsl
pop
cmp
fistps
mov
push
ds
dec
pop
gs
les
cltd
lret
inc
cmp
sbb
test
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
filds
js
jle
js
mov
hlt
cmpsl
jle
clc
int
subl
arpl
jb
sbb
ss
daa
test
add
push
dec
aaa
bound
and
mov
dec
movsl
cld
mov
dec
mov
in
sahf
andb
imul
push
insl
pushf
je
cltd
sub
mov
xchg
xchg
rclb
pusha
xlat
out
in
repz
push
add
jle
cmpsl
iret
cs
popf
inc
pop
cwtl
ss
cmpsl
ljmp
inc
jge
out
and
fdivrl
test
push
fstpl
lods
jmp
jne
ja
pop
cmp
call
mov
xchg
jne
sbb
sbb
insb
sahf
outsb
jg
pop
push
jmp
mov
or
cmp
push
ljmp
lcall
or
dec
or
pop
add
lret
sub
std
add
cmp
lock
pop
add
jb
ss
jmp
sub
or
mov
lea
ja
aam
xlat
dec
lret
popf
xchg
mov
decb
xchg
cmp
pop
mov
or
faddl
mov
and
lock
loopne
mov
orl
pusha
mov
and
out
sbb
mov
cmp
jne
hlt
insl
test
push
ds
and
repnz
insl
jne
aam
sbb
and
in
mov
stc
dec
push
mov
in
and
mov
jg
daa
lods
add
scas
mov
rorb
popa
cmp
das
cmp
loope
cmp
xor
and
cwtl
xchg
gs
mov
out
shlb
jns
or
dec
lret
imulb
jns
add
ror
jo
bound
hlt
out
jl
and
add
cmp
cli
cli
lods
mov
fimull
mov
setbe
mov
add
aas
push
insb
fs
cmpsb
jae
ds
imul
cwtl
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
mov
sahf
pop
out
js
xor
push
cmp
mov
mov
into
push
es
ds
pop
inc
jecxz
inc
lds
xchg
push
xchg
scas
in
stos
mov
leave
lds
add
xchg
dec
mov
cmp
sbb
rcr
push
sub
call
call
push
xor
add
xor
les
mov
or
push
stc
out
das
and
lret
mov
imull
xor
xor
push
shl
cs
jle
int
cmp
cmp
jbe
orb
pushf
mov
jge
mov
in
pop
xchg
andl
not
stos
add
int3
xor
stos
bound
imul
push
jne
in
inc
addr16
sbb
add
jne
jbe
ficoml
ret
das
jo
pop
adc
add
cmpsl
xchg
fdivr
xor
es
and
adc
dec
shrb
mov
incb
mov
lods
sub
je,pt
mov
lods
cmp
gs
mov
fadd
jne
fnstsw
inc
pop
push
orb
pop
inc
and
dec
mov
xlat
and
pop
test
xchg
pop
xlat
inc
fwait
scas
cli
or
fucomp
sbb
mov
mov
loop
dec
sti
dec
push
cmpsb
lds
orl
and
cmpsb
add
lret
movsb
lods
cmp
lods
inc
leave
aad
pushf
int
pop
inc
sub
insb
scas
lods
push
mov
or
clc
scas
fstpl
inc
cmpl
pop
arpl
add
cmpsb
dec
mov
cltd
mul
cmp
mov
jae
cmp
dec
test
scas
adc
rclb
mov
mull
dec
loopne
mov
out
ds
sbb
mov
mov
xchg
xor
and
jno
mov
jne
dec
mov
in
inc
repnz
xor
lods
or
mov
shrl
dec
xor
insl
ficoms
xchg
stos
fsubrp
arpl
idiv
sbb
and
aam
popf
push
in
rcrl
cs
add
ja
shrl
inc
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
fmulp
xchg
loopne
stos
js
xor
mov
das
push
clc
pop
dec
dec
adc
jae
cmp
and
scas
jo
jno
jmp
and
insl
adc
mov
enter
xchg
xchg
es
adcl
call
pushf
rep
rcrl
adc
hlt
add
xor
lahf
cli
aam
stos
je
out
enter
or
rorl
stos
sbb
adc
movsl
pop
jl
popa
lea
cli
pop
stos
and
pop
or
cltd
pop
xchg
les
sub
mov
sbb
jmp
push
cmp
push
mov
rcrb
fstps
int
popf
in
mov
xor
ja
adc
sbb
xchg
sub
cs
add
mov
mov
sbb
jmp
sbb
mov
leave
add
cli
cltd
pop
xchg
in
stc
sub
adc
fldl
cmp
and
mov
int
loop
inc
insl
dec
pop
mov
xacquire
repnz
pop
dec
cmpsb
xor
ret
aaa
and
cmpsb
sub
out
inc
pop
sub
cmp
loop
xchg
dec
push
xchg
pop
sub
js
add
jp
sbb
adc
lods
fs
stc
pusha
pop
jl
sub
subb
jp
stos
lods
xchg
test
xchg
inc
mov
icebp
sub
jmp
je
inc
dec
pop
xchg
in
or
or
sub
int
or
outsb
cmp
jo
sbb
loop
add
hlt
dec
jge
scas
xchg
xor
mov
and
dec
jno
xchg
mov
lret
pop
fimull
das
adc
cmp
stos
push
mov
xor
jmp
cmp
fmuls
push
mov
int
in
and
pop
pusha
cld
jb
jnp
fsubl
sbb
mov
adc
cmp
xchg
sub
pusha
push
clc
or
jbe
sub
push
std
js
imul
add
fcmovnb
cmp
movl
jne
and
jmp
int
into
aad
lea
in
mov
xor
imul
inc
mov
fstsw
int
jns
push
dec
push
jns
dec
dec
sbb
mov
iret
inc
inc
ljmp
incl
je
js
pop
nop
scas
xchg
leave
mov
jb
jnp
xchg
nop
dec
jmp
dec
jmp
jg
addr16
dec
inc
loopne
shll
in
mov
xchg
jge
movsl
push
mov
lock
icebp
jno
and
popf
xlat
cld
push
repz
popf
mov
add
rcrb
rolb
xor
cmpsb
cltd
movsl
lcall
sbb
or
push
les
fs
xchg
jo
ljmpw
mov
adc
mov
hlt
add
jo
test
pop
sti
es
clc
sub
adc
xlat
mov
mov
adc
mov
cmpl
and
or
xchg
cs
push
pop
daa
or
xor
out
cmp
adc
inc
and
lcall
adc
inc
fnstcw
mov
rclb
paddw
fldenv
into
push
pop
mov
mov
rcll
lods
dec
jmp
ja
lahf
xor
jae
insb
xchg
or
lcall
das
bnd
jp
jp
rcl
mov
adc
imul
fbstp
pop
shll
fnsave
jl
leave
adc
mov
ficoms
jbe
sar
pop
pop
xor
lcall
xorl
push
cmpsl
push
test
and
dec
sbb
out
push
or
leave
and
test
subl
daa
sub
jno
or
cmp
xor
push
mov
jl
jae
cmp
and
inc
add
int3
push
pop
sub
sub
jo
xorps
xchg
aaa
inc
adc
mov
push
sub
sub
arpl
dec
sahf
imul
rcrb
loopne
call
insb
push
lahf
push
jo
adc
add
int3
pushf
dec
outsl
cmp
push
lea
test
add
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
psubusb
js
jle
js
sub
test
adc
das
gs
xchg
or
cld
fidivrs
jecxz
ljmp
dec
cmpsl
sahf
je
jae
imul
sub
inc
jl
imul
mov
andl
imul
jb
sub
pop
data16
add
pop
daa
ficoms
out
push
mov
mov
fdivrs
fbld
adc
sahf
lret
dec
sub
movsl
out
mov
negl
push
out
outsb
mov
adcl
xchg
add
adc
mov
mov
jge
jbe
push
test
cmp
xor
push
das
cmpsl
repz
push
mov
dec
andb
inc
pusha
jns
push
xchg
push
pop
repnz
mov
inc
push
loopne
popf
daa
mov
cmp
outsb
or
xor
adc
imul
push
cltd
ljmp
adc
movsb
mov
mov
int
mov
lcall
pop
lret
scas
in
adc
mov
out
std
xchg
popf
scas
dec
repz
gs
rcrb
into
dec
cltd
sarb
or
lcall
ror
loop
pop
cld
or
popf
push
jb
push
sub
stos
jb
in
fstpt
ror
cmp
mov
fmull
sub
mov
cmp
cltd
jo
pop
pop
into
insl
out
mov
inc
inc
sbb
loope
shlb
outsb
push
add
daa
pop
xor
mov
mov
xchg
jbe
sub
and
and
cmp
mov
xor
sahf
loopne
aam
pop
into
xchg
fs
data16
nop
push
ljmp
pop
mov
add
xchg
lahf
mov
out
mov
mov
into
inc
mov
push
jle
addr16
sahf
outsl
aaa
mov
cmpsb
jbe
pop
xor
iret
mov
gs
pushf
outsb
lock
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
lds
js
xor
jecxz
aad
sub
div
push
xor
imul
jo
mov
xor
imul
push
lcall
lock
aam
mov
cmp
outsl
mov
imul
push
adc
ljmp
xchg
out
xchg
cltd
iret
sub
int
mov
fisubrl
xor
faddl
leave
pop
scas
out
shll
sub
pmaxsw
sub
cmp
pop
movsb
mov
cmp
mov
fucomip
es
pop
mov
roll
adc
sti
inc
adc
aaa
push
sarl
jnp
or
sub
clc
inc
pushf
shrb
mov
lcall
and
cmp
pop
out
enter
cmpb
and
xorl
dec
shrb
outsb
inc
sti
adcb
xchg
stos
test
mov
or
scas
leave
xchg
jbe
sbb
jbe
cmp
aas
pop
mov
shrb
and
iret
dec
fnstsw
mov
aaa
jo
sbb
xchg
add
push
lret
ds
fucomip
test
test
pop
aas
fnstcw
adc
aas
mov
imul
test
lods
js
std
pop
inc
popl
xchg
pop
dec
push
sti
arpl
push
outsl
mov
mov
and
or
mov
xor
xor
leave
mov
in
add
inc
scas
sbb
mov
lret
pushf
and
repz
iret
push
add
jne
jnp
xchg
jmp
ss
repz
xor
or
dec
fdivr
adc
push
and
lds
cmp
jl
mov
ffree
or
sub
cltd
stc
aaa
jno
sbb
aas
cli
mov
jb
sub
mov
enter
out
les
pop
into
mov
jb
inc
test
sub
mov
or
faddp
fimull
lea
aas
iret
or
pop
ljmp
adc
cmp
loop
ret
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
int
cmc
mov
js
inc
std
xor
or
sbb
add
jg
push
adc
push
sbb
push
movb
lahf
fldenv
sbb
xchg
or
in
inc
adc
jb
jge
push
mov
insb
dec
test
les
das
cmc
cmpsl
mov
and
mov
je
or
mov
ss
jmp
into
shl
pop
orl
xchg
test
cmpl
pop
inc
orl
test
shl
mov
cli
stc
sbb
adc
adc
in
dec
and
xchg
pusha
dec
lds
je
js
out
out
enter
mov
add
pop
and
pop
sub
test
xorb
leave
dec
loopne
add
bound
fcmovne
jmp
testb
repnz
adc
jnp
jnp
cmp
xchg
repz
lahf
add
ja
cltd
xor
movsb
pop
inc
int
out
pop
and
addb
jp
sub
test
shrb
cmp
dec
icebp
mov
pop
pop
das
push
int3
pop
clc
and
addr16
iret
jecxz
xchg
imul
add
ljmp
int3
adc
nopl
lea
scas
add
inc
repnz
add
mov
mov
iret
pop
push
incl
xchg
mov
jp
mov
xor
sub
jecxz
pop
mov
enter
pop
inc
cmp
push
xchg
xchg
into
sti
aas
je
out
pop
ss
mov
je
rorl
test
aaa
cmc
inc
and
loope
js
inc
scas
sbb
mov
xchg
les
ja
xor
cmpsb
mov
mov
mov
out
xor
out
jecxz
add
dec
push
subb
pop
mov
mov
inc
push
jl
mov
mov
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
sbb
sahf
inc
mov
js
jle
js
out
jmp
inc
ljmp
pop
loope
adc
mov
mov
and
mov
hlt
movb
pop
aam
int
data16
insl
xchg
in
sub
mov
jge
and
dec
xor
adc
fwait
and
int3
std
repz
push
mov
dec
pushf
or
dec
ret
stos
mov
push
cmp
add
pop
test
pop
cld
jg
adc
aas
jl
sbb
mov
mov
push
push
xor
ljmp
inc
subb
mov
cwtl
or
aaa
mov
dec
cld
outsl
es
inc
jns
in
lahf
gs
jae
xchg
jge
add
fwait
mov
push
pop
loopne
or
scas
mulb
jmp
int3
iret
xchg
inc
popa
lahf
pop
adc
ss
xorb
pop
push
sub
call
mov
popa
sub
hlt
stos
jle
sbb
cmp
in
in
lods
inc
and
mov
and
jg
push
stos
xor
loopne
into
ret
mov
xor
push
xchg
push
mov
dec
stc
outsb
dec
test
mov
rolb
in
xchg
xchg
movsl
imul
cmp
andl
inc
mov
mov
inc
les
add
xor
dec
xchg
pop
and
mov
adcb
int3
or
out
sti
pop
jg
inc
lcall
mov
aam
leave
in
cmp
jb
push
lods
sub
stc
out
enter
lret
fsubr
add
xchg
xchg
nop
arpl
mov
adc
dec
mov
push
and
mul
dec
in
loop
mov
mov
movsl
lret
lock
ja
mov
out
sub
push
mov
ds
es
ds
addb
scas
aas
and
sub
add
xchg
loopne
mov
or
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
jle
js
or
push
mov
loopne
xorl
sub
or
or
lret
fwait
sbb
ret
mov
mov
movsb
arpl
lret
mov
repz
mov
cli
xchg
inc
jno
subl
lahf
cltd
adc
inc
testl
jge
shlb
xor
xchg
imul
jmp
dec
rclb
cmpsl
adc
test
push
and
xchg
lret
rcll
jae
mov
fidivrl
jg
outsb
loopne
data16
add
shld
daa
push
mov
add
or
je
scas
repz
add
ds
add
adc
test
mov
xchg
lret
cmp
outsl
sub
stos
jo
add
jb
bound
push
int
xlat
fcoml
arpl
push
mov
sub
std
sub
in
jno
lret
sub
sub
negb
sbbb
mov
hlt
push
push
movl
int3
nop
ja
je
hlt
jbe
mov
ret
cmpsl
ss
cwtl
sbb
in
lcall
scas
stos
out
ja
orl
ja
and
gs
mov
jne
notb
jns
add
mov
push
pusha
jo
nop
mov
add
adc
xchg
cmc
jbe
decb
push
shl
mov
rcrl
or
sbb
arpl
jno
xor
xchg
push
in
lea
mov
mov
test
out
lods
and
jg
inc
sbb
push
lea
push
adc
adc
in
or
imul
scas
fwait
sbbb
nop
scas
and
adc
aaa
addb
xor
add
je
xchg
stos
ret
dec
das
and
gs
repz
cmp
jne
and
repz
xchg
lret
inc
add
xchg
lods
jl
sbb
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
test
mov
js
sbb
test
adc
mov
sbb
adc
sub
pop
clc
scas
cmpsb
or
mov
enter
jb
cmp
lret
sbb
or
jae
cmp
pop
pop
sbb
loop
cwtl
mov
ss
xor
mov
pop
mov
xchg
mov
repz
jle
mov
push
push
push
push
cmp
jno
lcall
cwtl
loop
jae
xchg
and
lods
xor
jle
loop
sub
sub
or
lahf
inc
je
push
iret
push
sbb
and
call
loopne
pop
lds
mov
pop
cmpsl
adc
std
jne
mov
cmpl
xchg
mov
cltd
jmp
mov
cmpsl
add
jb
sbbb
in
aad
aam
adc
jmp
cmp
push
pop
xchg
xor
jae
pop
adc
and
mov
loop
xchg
pusha
push
and
jno
frstor
je
jae
jl
xor
mov
add
push
jb
cmp
js
movsl
adc
das
and
or
dec
jge
gs
clc
les
sub
mov
movsl
lret
sub
xchg
scas
cmp
xchg
or
test
sub
and
sub
jle
adc
mov
rcrb
or
pusha
fstl
js
rol
add
xchg
out
fbstp
int
cmp
push
jns
leave
bound
and
xor
loope
mov
icebp
cmp
pop
rclb
subb
mov
cltd
xchg
outsl
pop
jg
lods
mov
dec
inc
jae
add
cltd
xchg
flds
test
adc
in
fdivr
sbb
sbb
iret
mov
mov
jge
jge
outsb
aaa
adc
mov
fadd
push
fs
popa
loope
mov
pop
fwait
mov
icebp
xchg
lods
xchg
adc
fwait
lret
push
pop
ss
or
push
add
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
add
movsb
sahf
hlt
mov
js
dec
cmp
ljmp
xchg
and
notl
or
movsl
aad
jle
idivl
mov
ljmp
lret
or
jno
pop
and
rcrb
push
jnp
pushf
lea
shr
cmp
pop
mull
dec
mov
dec
dec
pushf
and
lret
cmp
lds
out
loop
mov
mov
or
and
loope
inc
test
push
das
aad
jne
and
xchg
popf
out
add
add
sub
int3
jne
inc
mov
das
outsl
xchg
or
stc
or
adc
dec
or
xlat
and
mov
aas
mov
add
mov
add
mov
adc
jb
xchg
pop
and
sbb
ljmp
mov
imul
pusha
orb
imul
push
mov
int3
add
jmp
fidivrs
xor
inc
pop
push
sbb
ss
je
ja
mov
insb
roll
fwait
or
cmp
arpl
push
sti
stos
sbb
adc
mov
lock
test
sti
add
lret
mov
push
mov
sti
lret
xchg
jne
daa
bound
xor
arpl
sbb
dec
pop
pop
xbegin
xchg
mov
mov
add
jae
int3
adc
mov
aaa
lock
ljmp
push
pop
dec
in
shlb
and
mov
cli
adc
push
test
mov
or
in
adc
mov
cs
lret
mov
and
sub
jne
sub
das
xor
pop
js
loop
orb
clc
inc
fdivrs
xchg
test
jns
adc
add
fldt
mov
xor
fstl
ja
mov
mov
js
mov
dec
dec
mov
cmpsl
stos
or
aad
stc
cmp
mov
and
mov
out
dec
mov
cmpsb
std
push
cmp
testb
xchg
xor
xchg
aad
adc
leave
mov
movsb
clc
lret
imul
or
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
cld
aas
call
js
jle
js
mov
in
rcll
daa
mov
in
cmpsb
nop
adc
push
into
xor
and
les
jo
stc
adc
ljmp
jmp
push
daa
sbb
fldenv
or
ja
jle
insl
rcrl
aam
jb
pusha
inc
stos
sub
ja
and
mov
xor
je
cmpsl
push
shrl
cmp
ret
in
dec
nop
inc
xchg
xchg
jne,pn
cmpl
xchg
mov
in
inc
into
repz
jnp
mov
lods
into
lahf
dec
aam
push
pusha
xchg
lret
out
adc
push
leave
push
ror
xchg
lret
jmp
xlat
fld
xchg
fidivl
dec
mov
hlt
add
cmp
testb
and
dec
sub
das
jns
inc
mov
lret
pop
sub
xchg
addl
sub
das
pusha
or
sbb
sbb
movsl
or
addb
fsubp
adc
lret
jbe
and
adc
aad
push
movsb
mov
adc
inc
cmc
stos
pop
sub
movzbl
cmp
rorb
mov
in
hlt
xchg
or
hlt
mov
rcrb
lock
sub
xlat
fs
scas
mov
loop
mov
in
ret
stos
cmp
mov
inc
and
rorl
mov
adc
xor
pop
repz
movsb
sarl
out
repz
lcall
out
ret
inc
jo
je
xchg
sub
push
pop
outsl
ret
xor
lret
movsl
hlt
xor
xor
cs
dec
jns
loop
or
sbb
clc
sti
rorl
clc
push
cmp
jae
shll
aam
mov
mov
imul
inc
xchg
push
sub
das
shl
jnp
add
xchg
pop
mov
and
pop
and
stc
cmpsl
xor
fmuls
dec
mov
pop
inc
push
adc
push
hlt
sti
mov
into
add
push
stos
es
aam
mov
stc
adc
loope
je
scas
arpl
flds
shrb
nop
jbe
cs
jae
mov
push
mov
mov
mov
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
sbb
jle
js
xlat
xchg
je
subl
inc
int3
mov
fdiv
cltd
ret
test
mov
lea
jl
xor
mov
push
adc
xor
or
iret
cmp
and
fsubs
cmp
mov
adcl
pop
fnstcw
sbb
jge
jle
sub
mov
mov
sub
jl
dec
cmp
in
push
or
or
dec
mov
sbb
add
inc
sahf
test
out
add
sahf
test
addr16
mov
lods
pusha
imul
pop
dec
addr16
xlat
ds
ret
cmp
push
add
andl
cli
fmuls
icebp
push
mov
jbe
cwtl
lock
lcall
mov
setl
inc
cltd
out
cli
bound
loop
push
cmp
fisubrl
push
test
cwtl
xchg
pop
dec
repnz
js
aaa
pop
and
mov
out
into
call
fwait
addr16
xor
mov
inc
arpl
mov
iret
sbb
sub
andb
or
ljmp
dec
mov
adc
int
repz
dec
push
sub
andl
xor
addl
dec
pop
test
das
push
popa
rolb
xor
xchg
xor
jae
sbb
lods
dec
jns
call
fimull
outsb
mov
jecxz
fists
adc
andb
xchg
shrl
int3
adc
imul
stos
cmp
pop
xchg
sti
addr16
fadds
push
mov
mov
xor
sbb
sbb
loop
push
dec
mov
xor
xor
xor
stos
xor
mov
mov
popf
stos
sbb
sub
add
jl
ret
pop
adc
addr16
jae
testl
fimull
jp
push
leave
insb
call
adc
cmp
jmp
mov
push
cmp
and
mov
jl
or
fwait
mov
loop
xchg
aaa
inc
stc
iret
dec
and
bound
dec
ljmp
outsl
jne
sbb
xchg
pop
xchg
push
sub
add
pushf
jmp
xchg
pop
mov
pop
out
rol
add
sbb
cmp
add
test
add
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
sarl
pop
dec
mov
jle
js
jae
push
mov
ss
fs
push
inc
push
leave
dec
mov
or
pushw
pop
push
or
flds
imul
jmp
idivl
jmp
scas
or
cmp
xor
dec
pop
lret
mov
inc
dec
push
mov
fldt
idiv
es
jmp
push
insb
cmp
lahf
ds
movsb
sahf
das
cmp
push
arpl
in
sarb
cmp
das
xchg
aaa
add
rorb
mov
fildl
test
mov
push
and
gs
stos
cli
shl
xor
pop
mov
mov
add
mov
push
xor
inc
adcl
shrl
leave
mov
mov
sbb
add
mov
mov
sub
add
add
xor
in
jge
imul
jmp
outsl
out
jns
das
mov
mov
add
or
adc
leave
cmp
test
std
mov
cmpl
ljmp
aam
mov
insb
jp
out
and
fsubrl
std
cmp
loopne
outsl
cmp
add
or
lret
mov
sub
clc
push
cmp
add
push
call
add
jne
loopne
imul
nop
movsl
lea
bnd
xor
je
lea
pop
icebp
add
or
xor
fs
sbb
shr
repnz
jge
mov
das
push
push
ds
mov
popf
and
and
arpl
daa
out
push
jl
gs
mov
cmp
and
lret
orb
xchg
rcr
mov
nop
xchg
mov
add
dec
xchg
in
sub
lds
rclb
nop
add
mov
xor
in
sahf
sbb
push
cmp
fisubl
nop
mov
xor
lcall
out
addr16
testl
fnsave
adc
push
sbb
outsb
enter
pop
mov
insl
and
pop
xchg
cmc
push
negl
mov
fdivr
ja
mov
sbb
add
push
lock
push
sbb
pushl
lahf
xor
xchg
add
cmp
movl
jmp
ret
ret
lret
test
into
and
js
jle
js
xchg
int
js
gs
inc
adc
repnz
cmp
mov
sub
sub
push
ficomps
sub
popa
aam
inc
test
fcomi
bound
xor
shl
out
sbb
push
dec
sti
pop
shrb
pop
lcall
roll
stos
nop
inc
and
je
stos
test
mov
lock
lret
cli
sahf
lock
push
xchg
ss
sarb
mov
repz
inc
xchg
rol
inc
push
aaa
fnstsw
mov
mov
movsl
and
sahf
test
add
pop
lret
ret
pop
adc
dec
ficomps
mov
push
push
mov
jmp
daa
out
cmpsl
mov
lcall
fs
inc
enter
adc
push
cmp
mov
cmp
test
pusha
inc
mov
inc
sti
xlat
je
iret
insl
mov
pop
add
adc
mov
frstor
in
adc
imul
sub
sub
push
cmp
pop
and
jnp
aam
jge
pop
imul
rcr
fwait
xchg
jmp
cmp
imul
daa
cltd
jecxz
jmp
adc
and
mov
xlat
bnd
pop
push
xor
je
dec
repz
sub
fstps
mov
xchg
or
mov
and
cs
daa
dec
jg
lret
adc
jo
cmp
lods
mov
and
mov
cmp
cwtl
inc
int
imul
xchg
lods
outsb
movsb
pushf
inc
outsb
push
xor
jmp
sub
mov
arpl
lahf
or
sbb
inc
adc
pop
out
xor
mov
adcb
mov
inc
inc
cmp
adc
test
pop
pop
xchg
xor
rcll
jae
mov
aas
nop
or
sub
fs
push
dec
mov
dec
int
out
sbb
bound
lods
inc
frstor
sbb
sub
mov
sti
mov
cli
repz
shl
mov
pushf
mov
or
inc
nop
and
add
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
jl
lret
lea
js
jle
js
repnz
pop
pop
mov
out
push
std
inc
lcall
sbb
jl
and
lods
dec
cmpsb
mov
loope
push
cwtl
pop
mov
fsubrl
out
push
mov
fnstsw
and
add
or
dec
jl
push
sti
xor
std
dec
xorb
inc
inc
dec
add
loopne
gs
sub
scas
or
push
gs
movl
cmpsb
dec
jb
inc
mov
sub
fstl
ss
nop
push
gs
gs
imul
in
dec
fisubrl
sub
add
dec
es
jae
and
aam
iret
mov
out
out
inc
shl
jbe
fsubrl
cld
mov
lret
jne
roll
es
jno
lock
pop
fs
in
sbb
stos
mov
data16
jno
lods
ret
mov
adc
cmp
mov
lock
mov
and
sti
fwait
pop
into
ret
pop
xchg
repz
xor
cmp
subl
lcall
subl
lods
ret
sub
and
mov
fs
scas
add
fsts
inc
aad
stc
outsb
xchg
xchg
inc
bound
cmpsb
lods
xchg
sbbb
pop
add
mov
xchg
fs
fmull
pop
dec
ljmpw
sub
fbstp
movsb
orb
ja
xchg
push
enter
push
or
add
stos
cltd
pop
xchg
jle
negb
mov
aaa
roll
mov
xor
mov
lods
jp
mov
in
stc
hlt
mov
popa
in
into
fisttpll
jle
push
movsb
or
inc
pop
in
daa
das
mov
sbbb
cld
jg
push
stos
cltd
popf
and
js
mov
jge
push
lret
mov
stos
es
mov
push
sub
mov
pop
adc
mov
mov
cmp
js
in
xor
sub
mov
fildl
out
sti
mov
dec
std
ja
xchg
inc
ret
adc
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
jmp
dec
js
in
js
mov
call
xlat
fidivrl
jnp
das
jmp
mov
push
and
ds
mov
sahf
roll
inc
out
in
xchg
pop
iret
and
imul
lds
dec
xor
aaa
inc
push
cmpsb
push
xchg
rol
aad
rcr
fwait
mov
sub
bound
jecxz
and
into
mov
mov
ja
out
pop
movsl
push
xchg
dec
mov
mov
pop
movsb
mov
xchg
test
jnp
push
inc
ss
xchg
push
sbb
aaa
push
dec
cli
jae
dec
mov
test
cmc
enter
jae
cmp
idiv
adc
sub
cld
aas
pop
cmpsl
pop
jb
mov
push
pusha
inc
imul
jb,pt
mov
add
mov
sahf
xchg
movl
je
sbb
int3
subb
insb
push
faddl
mov
xorl
mov
and
or
outsb
or
cmp
jo
into
jmp
xchg
fsts
and
mov
jecxz
cld
frstor
lahf
sbb
push
loope
in
push
inc
lods
and
mov
xor
jb
fildll
push
aam
or
jmp
sbbb
cld
sub
push
sub
out
cmc
jno
gs
dec
add
jle
stc
mov
sub
push
adc
xor
mov
aaa
and
pop
ss
pop
xor
arpl
push
les
int
clc
fwait
sbb
movsl
into
stos
ret
and
mov
ret
mov
jno
add
in
mov
scas
jae
mov
push
jmp
cli
pop
ja
ret
xor
sub
and
loopne
mov
sub
mov
jl
loop
loop
or
mov
scas
aam
call
ljmp
push
addr16
push
mov
jne
repnz
push
ljmp
nop
sub
popa
adc
dec
aaa
sbb
sub
sti
add
xor
dec
movsb
loop
push
jmp
loop
out
dec
pop
adc
std
cld
sbb
in
in
test
sarl
sub
popf
and
ja
movsl
scas
jecxz
mov
shlb
test
mov
sbb
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
int
pop
dec
js
in
js
rcl
fs
hlt
das
push
cmpsl
shrb
adc
sbb
sub
lds
push
xor
mov
push
aam
clc
scas
xor
sbb
cmp
in
pushf
and
xchg
outsl
or
or
mov
pop
enter
ss
cmpsb
jmp
mov
clc
and
movsb
rolb
jmp
aas
mov
xor
imull
mov
andl
jmp
mov
bound
scas
mov
cmp
pop
andl
lods
and
in
jns
jg
jmp
or
gs
mov
adc
inc
sbb
push
dec
adc
ds
leave
sbb
fidivl
das
mov
and
add
sbb
pop
gs
in
ret
dec
into
rolb
mov
lods
or
stos
cmp
jge
xchg
fwait
dec
ja
out
add
sbb
repz
loopne
call
fwait
std
xchg
das
pop
in
xorb
or
sub
in
mov
scas
xor
fimuls
jp
dec
or
imul
mov
out
cmp
das
pop
pop
scas
add
mov
popa
imul
pop
bound
and
pop
mov
cmp
inc
lods
mov
outsb
pop
adc
out
xchg
pusha
inc
sahf
out
mov
xor
pop
test
xchg
jbe
and
in
fcompl
out
fxch
cwtl
dec
cmp
pop
xchg
pop
xor
das
in
pushf
mov
aas
cmp
and
mov
out
mov
adc
rcrl
inc
cmp
inc
jle
pop
lret
fldenv
bnd
das
pop
dec
mov
jle
leave
stos
inc
daa
insl
add
adc
jge
inc
mov
mov
leave
add
mov
mov
pop
mov
mov
xor
mov
call
test
lcallw
xchg
mov
add
pop
rol
mov
inc
inc
pop
inc
addr16
arpl
test
aas
push
or
data16
lods
adcl
xorl
enter
sbb
cmp
shr
addl
add
int
into
xchg
jle
xchg
aas
dec
dec
js
in
js
test
sahf
nop
sub
inc
jg
inc
dec
popl
or
xorb
mov
sysenter
pop
in
xchg
lods
sub
sbb
enter
jmp
into
cltd
negb
cmp
add
adc
shll
imulb
mov
jge
out
jl
xor
int
mov
popf
mov
jp
sahf
rcl
sbb
in
enter
dec
sahf
cvttps2pi
pop
mov
pop
gs
or
jb
or
mov
xor
add
add
or
pmovmskb
pop
mov
in
xor
test
jo
xor
dec
mov
jmp
push
ret
adc
lds
push
jmp
call
pop
xchg
or
dec
adc
bound
nop
jbe
push
fwait
jg
loop
add
mov
in
dec
add
inc
mov
xchg
and
data16
ror
ss
mov
jp
lds
jle
lods
mov
mov
dec
dec
inc
insb
sbb
push
mov
adc
sahf
push
fucom
scas
in
jge
and
push
test
push
and
loop
add
inc
and
data16
pop
mov
stos
test
das
and
cld
xchg
add
push
int3
push
sbb
pop
xor
mov
std
mov
dec
sbb
imul
xlat
icebp
test
fildll
pop
fimull
cwtl
out
icebp
xchg
xchg
insb
xlat
out
mov
mov
cmp
int
xor
mov
inc
shl
pop
loopne
imul
pop
xor
mov
jne
add
sbbl
into
jecxz
mov
mov
lods
sbb
call
mov
lea
inc
pop
nop
pop
out
gs
mov
stos
sbb
arpl
jge
out
fdiv
andl
iret
insl
xchg
dec
int3
repnz
mov
in
and
pop
lock
and
mov
mov
add
daa
stc
adc
js
and
mov
add
js
xor
movsb
jo
mov
push
mov
jmp
movb
xor
xor
mov
movsb
sti
fs
lcall
xor
aad
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
mov
js
in
js
rcr
xchg
inc
pop
and
adc
push
mov
int3
fidivs
cmp
or
out
lahf
vmread
dec
out
add
aaa
aad
pop
mov
es
adc
xor
fs
stc
cwtl
dec
nop
mov
push
and
arpl
cmc
add
mov
loop
sti
imul
aad
imul
jo
sub
dec
popl
scas
faddl
dec
mov
fsubr
add
fs
push
sbb
cmpsb
movsb
jo
mov
cltd
push
addr16
mov
lret
mov
jnp
outsb
movsb
mov
rorb
xchg
or
pop
lea
mov
mov
ret
or
mov
fwait
hlt
push
ljmp
arpl
jle
shrl
out
nop
mov
or
sbb
lock
add
outsl
arpl
pusha
xchg
cmp
out
jo
lods
push
or
sbb
fwait
adc
mov
pop
sbb
gs
jl
mov
and
lret
loop
int
mov
ljmp
dec
imul
pop
int3
sub
cmp
imul
mov
xlat
sti
cmp
nop
std
aaa
stos
add
hlt
test
or
dec
xchg
cmp
mov
sbb
les
das
adc
mov
testb
inc
fwait
xchg
daa
popf
insb
cmp
fidivl
xor
rolb
outsb
mov
in
cli
mov
push
push
push
sti
sub
cmp
mov
repz
jmp
movsb
jp
leave
inc
clc
pop
decb
call
pop
ja
clc
or
dec
add
cmp
es
pop
shlw
sub
xchg
movl
xchg
mov
mov
dec
jmp
stos
daa
push
rol
mov
mov
test
fstps
js
jl
cmp
mov
push
aas
dec
sbb
dec
aam
sub
std
sbb
cltd
xchg
xchg
addr16
std
outsb
lds
outsl
pop
inc
mov
mov
add
stos
dec
negb
push
inc
ret
dec
sbb
push
adc
cltd
dec
xor
sbb
inc
xchg
call
mov
inc
fistps
stc
sbb
jb
push
movsl
ficomps
push
ja
sahf
push
jae
fbstp
jb
movsl
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
dec
adc
in
js
xchg
cmp
lahf
mov
jl
pop
test
andl
push
js
ret
scas
pusha
dec
jmp
or
enter
mov
arpl
repz
aam
fbld
hlt
ja
popa
cltd
mov
mov
loopne
inc
out
xor
ret
jnp
lds
insl
fcomip
js
dec
ficoms
hlt
repnz
pop
out
shr
jno
mov
xlat
mov
pop
pop
dec
rorb
and
pop
test
jle
mov
or
insb
mov
subl
mov
cltd
movsb
in
lods
adc
push
xchg
sbb
xor
enter
jmp
mov
or
jnp
xor
test
sbb
mov
cwtl
movsl
sbb
fisubs
enter
shlb
imul
push
call
mov
mov
aas
adc
out
dec
mov
stos
jle
arpl
mov
aam
cmc
pop
add
mov
cs
pop
mov
mov
lock
fildl
std
loopne
and
lods
xchg
or
sbb
push
daa
out
inc
xor
out
xchg
add
aad
xchg
cs
mov
idivb
outsb
jecxz
jl
pop
call
test
xchg
cmp
pop
cmpsl
bound
pop
fwait
lret
ljmp
pop
add
iret
mov
ja
jmp
mov
mov
xlat
fucomip
pusha
pop
push
mov
stc
add
inc
xor
shrl
adc
push
insb
test
add
lret
jne
pop
xor
xchg
dec
orl
push
js
nop
pop
jo
mov
push
and
out
xchg
or
stos
shll
mov
dec
mov
aam
add
outsl
inc
cmp
cmp
ja
adc
pop
push
fidivrl
loop
test
inc
jp
xchg
aaa
pop
frstor
sbb
jecxz
cmp
jnp
lods
jmp
mov
cmp
call
adc
mov
xchg
mov
push
leave
test
pop
sub
lds
and
push
fisttpl
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
mull
push
js
in
js
pop
test
iret
push
pop
outsb
jns
dec
push
fildl
cmp
lret
xor
xchg
lret
pop
dec
xchg
xchg
mov
mov
cli
aas
push
test
xchg
cmp
lea
jge,pn
dec
jl
xchg
mov
incb
popl
test
clc
pop
pop
enter
cmp
mov
ficomps
xchg
mov
fldenv
frstor
xchg
xchg
dec
jecxz
inc
mov
aaa
dec
movsl
test
push
repnz
addb
cmpsl
shll
cld
xchg
cwtl
add
sub
iret
or
adc
sbb
pop
imul
xchg
jns
pop
in
sbb
xchg
cmpsl
clc
dec
xlat
pusha
dec
fimuls
push
pop
sbb
fucomip
or
add
mov
mov
out
fs
maxps
cmp
dec
test
dec
sarl
ja
sub
ss
lret
cmc
ficoml
fiaddl
lods
sahf
cmp
js
dec
mov
xor
sahf
xorb
mov
lret
mov
fucomp
test
sbb
les
and
pop
fdivs
sub
xlat
das
insb
xchg
xchg
mov
lock
rorb
add
out
sub
jle
jecxz
jnp
inc
inc
push
sbb
jmp
movsl
bound
sbb
jl
mov
inc
clc
fisttpl
movb
cwtl
adc
cli
inc
or
adc
mov
addb
icebp
in
sub
xor
push
cli
jmp
arpl
add
pop
push
ja
popa
jge
or
pop
icebp
xchg
inc
aam
mov
sub
sub
cmpsl
pop
icebp
xlat
call
sbb
or
and
sahf
icebp
push
push
ficoml
jl
ljmp
cmpb
cmpsb
sti
jbe
ja
sti
dec
lds
or
fs
sub
sbb
subl
add
xor
push
inc
es
or
mov
es
or
mov
movsb
dec
or
into
dec
cld
fldcw
dec
push
enter
dec
fstpt
jno
test
jbe
lods
xorl
xor
in
add
les
rorl
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
add
push
js
in
js
lods
leave
jnp
push
imul
cmp
cmp
add
cmp
enter
xlat
or
mov
inc
insb
std
out
test
aad
and
stos
test
stos
lcall
and
fmull
lock
dec
mov
and
daa
icebp
mov
ret
jmp
adc
mov
push
mov
outsl
mov
popf
dec
shlb
cmpsb
mov
dec
dec
clc
pop
dec
in
mov
mov
sbb
fadd
out
fidivs
mov
mov
rcll
aad
mov
mov
xchg
jmp
dec
int
mov
pop
gs
fcos
push
inc
rolb
mov
cwtl
add
push
lds
sbb
mov
push
xor
inc
ficoms
xchg
insl
sahf
mov
dec
repnz
insl
int3
call
je
fwait
push
pop
or
ret
cmp
xorb
in
fs
mov
mov
add
pushf
pop
push
arpl
enter
dec
icebp
mov
pushf
push
repnz
push
push
pushl
or
xor
dec
inc
jge
fstl
pop
cmp
xchg
pop
jno
mov
add
dec
neg
adc
subb
add
lods
dec
jl
cwtl
push
int3
add
and
mov
cld
icebp
mov
inc
add
xchg
stos
pushf
mov
push
lcall
inc
or
loope
les
xchg
movsb
inc
adc
cs
cli
push
xchg
add
pusha
mov
xchg
and
int3
xor
and
xor
and
popf
iret
xchg
loope
xchg
or
xchg
dec
lcall
xchg
or
and
inc
cmp
lret
inc
jne
dec
test
lahf
mov
xor
sarl
and
jmp
mov
shll
pushf
arpl
mov
or
fcmovnbe
or
jnp
cmp
cmp
sbb
add
inc
dec
mov
push
cmc
aam
aaa
hlt
hlt
data16
jl
imul
mov
mov
xorl
inc
and
or
add
jmp
int3
into
ror
rcl
into
jbe
inc
or
das
gs
js
in
js
pushf
pushf
push
mov
ret
xlat
mov
push
dec
cmpl
popf
je
into
and
xor
inc
cld
push
mov
cmp
push
ljmp
jmp
addr16
incl
mov
xchg
jne
arpl
arpl
cmp
test
lods
out
decl
pop
outsb
inc
add
cwtl
aam
adc
and
pusha
dec
idivb
lcall
shr
xor
or
sbb
dec
mov
ja
jne
xchg
divl
add
xor
mov
xor
pop
cwtl
sarb
fcoml
push
mov
add
addr16
pop
cmp
xchg
push
hlt
xor
popa
lds
xor
or
out
xor
jb
xor
add
mov
out
imul
sbb
and
cmc
and
les
js
int
add
insb
jp
lock
jne
jge
pop
or
or
out
xor
aaa
shlb
sub
or
mov
scas
xlat
jg
cwtl
ljmp
jne
pop
jmp
loop
cmc
nop
lods
sbb
leave
mov
mov
mov
lret
mov
lcall
mov
pop
ret
jmp
adc
addr16
outsb
mov
subl
outsl
dec
mov
pop
dec
jo
fcmovnbe
mov
and
push
dec
add
stc
lods
push
and
out
xor
inc
aas
ror
out
and
jle
int3
inc
imul
repz
mov
dec
xor
mov
sub
movsb
jns
xchg
jnp
push
iret
out
xorb
les
push
dec
mov
inc
movsb
sbb
pop
push
pop
sub
popa
daa
inc
pop
xchg
dec
mov
cwtl
fisttpl
scas
cmp
jecxz
adc
sub
jle
and
xorps
loope
ds
push
jb
xchg
push
cmpsl
xor
pmaddwd
or
es
xchg
fmul
test
cmpsb
fs
fildl
mov
ljmp
mov
inc
lret
push
rorl
scas
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
cld
pop
cmp
pop
js
in
js
insb
inc
add
xor
sub
sarl
hlt
mov
test
inc
inc
gs
dec
inc
in
cmp
in
roll
push
lds
xchg
adc
call
mov
int3
or
test
pop
cmp
sub
aad
fcoms
imul
icebp
xchg
pop
loop
mov
scas
out
xor
sub
inc
mov
jle
movsb
jb
cs
orb
push
lods
addl
dec
ss
std
fiaddl
loop
in
enter
ja
add
mov
sbb
mov
adc
nop
ret
mov
repnz
xchg
xchg
or
in
mov
inc
aad
xor
mov
nop
data16
mov
adc
push
out
xchg
cmpl
jno
sbb
repz
jo
ss
cli
shll
inc
xchg
mov
mov
fldenv
decb
inc
cmp
or
es
and
rorl
or
xlat
dec
lds
sbb
aas
mov
and
shlb
xor
xor
scas
and
test
xchg
sub
rol
inc
and
ss
dec
fstpt
movsl
pop
cmp
fisubrs
stc
and
shrb
lods
nop
cld
adc
ja
add
add
mov
dec
dec
repz
aad
adc
cli
mov
movsb
jne
sbb
sub
sbb
mov
push
jb
lods
cmp
or
test
insl
jno
ret
xchg
pusha
mov
mov
cwtl
rcrb
or
es
push
or
lods
xchg
xchg
push
pop
add
adc
mov
shr
js
pushf
mov
leave
pushf
mov
cmc
fwait
imul
insl
xor
sbbb
sar
add
cmp
and
cmp
int
fs
cmpb
pop
rcrb
movsl
repz
dec
test
inc
fwait
imul
paddsw
in
jg
subb
outsl
and
xlat
xchg
testb
mov
rclb
popa
jge
scas
sub
mov
mov
sub
cmp
ja
jmp
rol
xor
daa
push
aad
pop
js
in
js
cmp
xor
mov
mov
mov
sbb
sub
cmp
cmp
sahf
xor
imul
jg
and
mov
sbb
pop
popf
test
add
sub
sub
sbb
xor
das
push
call
addr16
fldl
inc
inc
sub
bound
xor
imul
jl
ljmp
addr16
pop
mov
sub
in
xor
pop
out
jne
sbb
mov
in
fdivr
sbb
sub
mov
leave
mov
jns
imul
mov
sbb
push
mov
das
fstpt
and
and
in
xchg
mov
pop
pop
mov
adc
xor
xor
out
dec
inc
pop
dec
mov
pop
sub
shlb
popf
gs
mov
movsl
add
mov
mov
jo
stos
sbb
mov
xchg
lcall
fadd
and
push
in
xchg
nop
arpl
adc
mov
sbb
xor
arpl
xlat
daa
int3
cmc
mov
cmp
jg
out
stc
cli
fs
pusha
incb
fldenv
scas
pop
cmp
ret
shlb
insb
mov
and
dec
jg
adc
xor
dec
and
mov
and
sbbb
cmp
pop
mov
xchg
sub
inc
cmp
push
cmpsl
int
jecxz
arpl
push
push
mov
inc
lea
vmovdqu
mov
mov
fwait
cli
mov
hlt
ror
sub
add
div
ret
adc
cmp
mov
mov
ret
pop
or
pop
repnz
shl
xchg
push
adc
iret
sbb
je
sbb
mov
jmp
dec
mov
inc
sbb
mov
jo
adc
cmp
aaa
and
pop
jbe
xchg
int
pop
les
cmpsb
push
xor
adc
cmp
dec
in
and
iret
jo
fnstsw
les
sbb
int3
add
lss
shrb
xlat
mov
scas
xor
dec
lret
jnp
xor
pop
xor
sahf
pop
in
push
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
push
jne
and
js
in
js
js
xchg
push
jno
sub
xchg
out
outsb
iret
push
jno
push
sub
jns
out
inc
inc
test
xor
movsb
sbb
xor
and
ljmp
cltd
xor
mov
bound
aaa
dec
rolb
mov
pop
ds
mov
out
sbbl
mov
sbb
stc
pop
int3
scas
cs
push
lock
stos
arpl
xchg
scas
test
movsb
call
int3
ja
enter
sbb
dec
scas
sbb
and
mov
aam
or
mov
imul
jl
repnz
cmp
jg
push
or
in
int3
aad
sub
outsb
stos
xchg
push
mov
in
daa
mov
xchg
int
ja
mov
mov
adc
loop
mov
and
dec
push
lea
cmp
mov
mov
jmp
lods
insb
sub
cld
jbe
push
inc
jle
loopne
add
cli
and
mov
sbb
pusha
ss
dec
pop
loopne
dec
sub
or
and
mov
sub
mov
mov
adc
mov
add
cmp
cmp
fwait
xchg
in
pop
or
xor
or
cmp
inc
dec
or
push
loop
out
in
cmp
ss
aad
xchg
xor
test
and
push
enter
mov
mov
cwtl
mov
push
outsb
cmp
outsl
mov
repz
adc
repnz
add
leave
xchg
push
xlat
sahf
ljmp
jg
sbb
das
xchg
in
sbb
rcl
icebp
lret
sub
pushf
fisttpll
xchg
int
lock
mov
push
jb
aam
stc
mov
pop
push
outsb
push
mov
mov
jbe
dec
jecxz
sbb
mov
stos
popa
pop
cmp
sarb
push
pop
popf
mov
mov
mov
ror
cltd
pop
adc
inc
or
fdivrs
sbb
jge
fs
inc
orb
aas
dec
pop
push
xchg
jg
in
sarb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
or
js
jle
js
aad
or
sti
testl
inc
mov
subl
fadds
inc
sbb
pop
sbb
jns
pop
mov
xchg
push
dec
push
xor
mov
inc
inc
jg
mov
pop
jmp
mov
packssdw
pop
in
jecxz
outsl
iret
xor
call
pop
and
stos
in
inc
icebp
hlt
lods
je
stos
dec
in
cmp
cld
push
shlb
je
dec
adcl
hlt
jns
add
fld
mov
mov
ja
aam
arpl
mov
jle
mov
add
lods
test
mov
fidivs
sub
call
pop
jbe
dec
dec
jmp
cmp
ret
cmp
insb
cs
pop
imull
mov
in
and
cld
xchg
mov
mov
sbb
jae
or
and
cmp
lret
mov
jl
cmp
mov
push
loopne
inc
in
hlt
out
dec
cmc
aas
daa
add
or
mov
movsl
fwait
jne
xor
pop
mov
shlb
sbb
mov
popf
jb
sti
dec
and
lods
adc
or
push
mov
dec
fisttpll
inc
repnz
xchg
je
leave
lcall
mov
fidivs
dec
in
call
icebp
mov
loopne
sti
push
jmp
sub
pop
sub
jge
js
cmpsb
iret
outsl
mov
cmpb
test
pushw
stc
int3
cltd
sbb
mov
inc
mov
xor
into
adc
push
mov
xor
rolb
cld
sbb
push
in
in
subl
sub
sti
add
mov
aad
xor
pushf
jns
mov
xchg
fnstcw
jmp
jb
sbb
push
scas
sub
mov
xor
jnp
push
negb
xor
aad
pop
xor
inc
and
sub
fmul
mov
int
adc
mov
or
xchg
adc
or
xchg
les
repnz
mov
dec
out
mov
sbb
fwait
lretw
push
lret
push
imul
add
pop
clc
lds
add
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
mov
inc
jle
js
in
js
ja
jmp
and
cmp
xor
repz
xchg
push
pop
out
leave
mov
mov
jmp
movl
incl
in
shll
xchg
outsb
push
mov
add
pop
lock
loope
addr16
in
jmp
mov
dec
hlt
inc
inc
sub
push
jnp
in
out
into
xor
inc
lods
pop
jle
mov
sahf
cmp
pop
out
mov
mov
push
mov
gs
pop
out
xchg
pusha
xor
lret
out
enter
fisubl
dec
push
or
nop
jmp
inc
or
xchg
aaa
and
cmp
outsl
mov
dec
lcall
dec
test
pusha
insl
sbb
add
in
jl
je
cld
jg
leave
mov
daa
jo
pop
add
scas
mov
call
es
adc
adc
mov
cmp
inc
fnstcw
inc
testb
sahf
imul
adc
xlat
adc
dec
repz
outsb
mov
mov
pop
je
ss
adc
xchg
xchg
inc
inc
popf
jnp
les
fwait
add
mov
xlat
sub
popa
fcompl
lcall
dec
inc
pop
jae
push
loop
dec
imul
fistpll
roll
jnp
imul
iret
vmwrite
push
xchg
ret
adc
mov
or
adc
mov
je
stc
dec
pop
or
clc
cld
mov
mov
loop
enter
shlb
pop
lods
rorb
stc
imul
filds
cmc
xor
sub
shll
adc
or
int
stos
repnz
xor
dec
xchg
dec
or
lea
cli
pop
fstl
cmpsb
sti
xchg
mov
out
xchg
movsl
aad
in
jecxz
fwait
mov
roll
push
shl
sbb
xchg
jg
mov
xor
mov
add
test
out
outsl
out
xchg
cld
mov
pop
ljmp
ret
pop
aad
sbb
sub
imul
mov
cmc
mov
adcl
mov
mov
les
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
jmp
out
jmp
js
in
js
add
cmp
or
jae
adcl
jge
mov
scas
lcall
paddq
sub
mov
jb
in
popa
subb
add
mov
jbe
js
sahf
idivl
outsb
cmp
in
aam
xor
pop
leave
test
popa
repnz
cs
sbb
iret
cmp
insb
test
mov
xchg
or
push
pop
sub
xchg
or
pop
je
mov
pop
stos
arpl
popa
xchg
cmpsb
lcall
leave
cmp
daa
int
out
xor
je
flds
mov
push
mov
mov
daa
sbb
fdiv
xchg
adc
arpl
sub
in
aad
jge
and
negl
lds
pushf
and
jne
xchg
loopne
xor
and
inc
lds
sub
and
cmpsl
nop
cmp
mov
rcr
dec
outsl
scas
fcmovnbe
xor
or
xchg
enter
lahf
fsubrs
mov
dec
loop
jne
shr
rcl
jb
xchg
lods
stos
xor
test
dec
cs
xchg
push
xorl
inc
pop
movsb
lcall
mov
int
sub
mov
xchg
lret
push
enter
xchg
xor
stos
ror
cmp
insb
mov
inc
push
cld
add
and
imul
jnp
cwtl
mov
pop
aaa
data16
mov
cwtl
movsl
insb
insl
jp
pop
and
lcall
inc
dec
push
inc
or
jl
ss
popf
push
adc
mov
cmpsl
lea
jo
jb
and
addr16
xchg
je
shl
lods
ja
sub
dec
fwait
bound
insb
arpl
mov
in
mov
popf
push
scas
daa
add
xchg
cmp
lea
sbb
jecxz
mov
dec
mov
lods
cwtl
jbe
pop
das
test
cmp
out
inc
fwait
dec
dec
mov
arpl
arpl
xchg
imul
daa
daa
daa
lret
in
out
inc
cli
ja
lahf
mov
lea
test
xlat
sbb
shll
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
adc
pop
and
js
in
js
sub
sub
push
push
mov
lcall
pop
sbb
not
cmpsl
sub
cmp
mov
pop
pop
mov
imul
mov
cwtl
pop
test
jne
lods
aaa
sub
or
jl
sub
jecxz
mov
sbb
dec
pop
inc
lods
xor
fnstenv
push
es
push
stc
test
repz
inc
push
fildl
rclb
dec
jns
data16
movsl
or
aam
test
and
dec
xchg
mov
xchg
loopne
mov
jl
and
cmp
int
jmp
into
mov
dec
das
into
out
cmp
popa
fs
add
pop
popa
mov
add
jmp
xchg
xor
loope
leave
or
out
aaa
mov
flds
mov
ret
ficoms
gs
adc
mov
hlt
popa
out
mov
mov
cmp
add
jnp
loop
aaa
clc
out
inc
lret
fnstenv
lcall
push
movsb
aas
mov
jmp
daa
scas
lods
jbe,pt
std
mov
xor
dec
gs
imul
movsb
popf
pop
mov
scas
sbb
mov
push
mov
addl
cwtl
xlat
daa
dec
cmpl
mov
inc
dec
enter
add
sbb
jle
xor
out
stc
add
lret
pop
ret
ja
es
cli
aad
sbb
pcmpgtb
movsl
incw
fstps
inc
clc
cltd
into
ficompl
xor
sub
popf
cmp
xor
sbb
outsb
inc
mov
xchg
and
push
sbb
mov
pop
cmp
mov
rcll
or
popf
cmpsl
ja
or
dec
or
std
es
inc
mov
and
adc
add
outsb
adcb
cmp
push
mov
insb
push
adc
xlat
stos
outsb
lods
stos
imul
aam
fs
and
sbb
rolb
out
sub
pop
inc
rcl
jp
and
xor
shll
leave
mov
pmulhw
in
jo
mov
iret
inc
xlat
data16
mov
xchg
call
sbb
lret
test
push
in
addl
add
ret
rol
fcmovnu
mov
scas
pop
std
cmp
jle
js
xchg
dec
mov
dec
filds
sbbl
dec
inc
mov
and
lock
outsb
cwtl
mov
rcl
mov
fld1
dec
into
loope
jo
and
push
es
jecxz
push
sbb
cmp
xchg
cmp
jge
popf
add
in
dec
sbb
add
ss
mov
movsl
iret
xor
hlt
cli
and
insl
mov
data16
aas
sahf
fsubr
xlat
and
cmc
bound
inc
dec
popa
xorb
andl
in
ja
out
mov
and
mov
add
rcr
jbe
and
fcoms
mov
pop
fstpl
test
jae
divl
outsl
dec
fbstp
fildll
and
cmc
je
aaa
test
vcomiss
in
mov
fstpl
or
mov
mov
int
imul
xchg
jbe
jecxz
movsl
mov
cs
loopne
in
cmp
jg
outsl
mov
popa
sahf
adc
dec
sub
inc
pop
lea
push
adc
mov
sub
xchg
jo
movb
aam
mov
ja
fwait
test
jge
push
ds
sahf
js
mov
cmp
pop
inc
int
jae
pusha
xchg
inc
or
loop
ja
mov
test
jb
pop
push
and
lods
xchg
or
cmp
sti
in
mov
pop
ret
jae
shll
pop
pop
imul
jl
mov
repz
dec
mov
sbb
movsl
cmp
loopne
test
ds
or
repz
mov
mov
push
jg
pop
call
push
lahf
pop
loope
cmp
lods
sahf
fs
inc
pop
jae
cmc
test
fs
sbb
cmp
lods
inc
daa
rorb
imul
mov
cmp
aas
stos
or
push
cmpsb
mov
jns
jmp
pop
flds
fisttps
addl
loopne
cmp
mov
dec
add
add
xor
lcall
in
xchg
jl
pusha
orb
jae
lahf
mov
aam
cmpsl
cld
movl
movl
jmp
int
ror
fcmove
leave
sub
test
insb
js
in
js
loopne
repz
ret
rcrb
in
roll
out
mov
adc
insb
cmp
inc
das
xchg
sbb
into
sbb
inc
mov
push
and
stos
ret
sbb
mov
cmp
xchg
incl
popa
ss
dec
add
fists
dec
xchg
pop
ds
icebp
out
inc
sub
test
fldenv
xlat
movsb
insl
xchg
xor
or
shrb
sub
jae
es
clc
cmp
mov
push
mov
jl
frstor
or
xchg
xchg
or
add
or
fidivrs
divb
decl
mov
cli
pushf
fcmovnbe
mov
mov
add
or
mov
fbstp
inc
out
popf
fdivl
mov
dec
mov
sub
repz
xlat
xchg
xor
ss
cmp
jecxz
incl
mov
mov
enter
rcll
in
orps
inc
daa
les
sbb
mov
je
sub
bound
js
js
jle
sarl
sbb
loope
push
sub
or
pop
jle
loopne
ret
cmp
jnp
cs
pop
mov
test
sub
clc
in
adc
in
pop
pusha
scas
inc
cli
cmpsl
jne
lods
mov
arpl
xlat
sub
push
xchg
mov
adc
or
out
push
mov
int
ja
push
dec
dec
into
xor
jnp
nop
divb
pop
icebp
ja
fildl
retw
fadd
in
inc
dec
push
in
into
inc
xlat
xchg
ss
adcl
jmp
sti
imull
mov
sbb
stos
push
cwtl
std
aaa
adc
int3
fcomps
mov
mov
dec
xor
mov
enter
nop
push
gs
and
pop
sbb
hlt
lcall
test
pop
mov
push
jne
stos
orl
push
pop
push
cmp
nop
leave
std
inc
mov
mov
f2xm1
dec
mov
in
test
xorl
or
mov
lock
jnp
insl
aam
mov
xchg
xor
or
sbb
rorl
daa
loopne
ds
push
sub
push
les
mov
rolb
shr
cwtl
sldt
mov
xor
add
jmp
ret
xlat
data16
js
jne
jno
js
jle
js
mov
push
inc
dec
jmp
mov
test
inc
sbb
cmp
xor
lret
adc
adc
rorb
mov
jge
and
mov
loopne
es
sbb
xchg
and
sbb
and
dec
pop
mov
mov
xchg
push
and
push
inc
jns
cmp
imul
ficoml
dec
inc
add
in
sbbb
leave
pop
add
adc
std
adc
fcmovbe
sbb
mov
divb
lods
loope
and
outsb
cld
xchg
dec
push
insb
adc
iret
lret
out
dec
inc
das
sbb
push
push
push
lods
out
adc
or
imul
cmp
or
mov
add
lahf
sbb
sarb
xchg
andb
xchg
inc
sahf
cmp
sbb
nop
sub
fbstp
adc
pop
lret
sbb
add
xchg
sahf
daa
cli
jg
lret
pcmpeqd
cltd
inc
cmp
and
lahf
inc
cmp
push
pushf
stos
jnp
gs
mov
sbb
cvtps2pd
popa
iret
xor
pop
mov
sub
movsb
repz
sarl
lds
das
fldl
cmpsl
dec
cmp
and
jne
outsl
cmp
pop
pop
daa
mov
les
leave
roll
sub
cmp
add
fnsave
and
popf
cli
pop
aaa
shll
adc
xchg
popa
int
ljmp
add
push
lcall
xlat
inc
imul
jne
shll
inc
xor
cmpsl
testl
jo
popa
push
nop
es
test
inc
lods
icebp
bound
call
cmp
push
xchg
mov
jb
testb
and
cld
mov
or
loopne
pusha
ljmp
and
lea
das
cmp
sbb
add
pop
icebp
pusha
mov
mov
into
jmp
push
lds
cmp
sbb
pop
sub
mov
mov
pop
xchg
mov
dec
js
lds
lcall
popa
push
jo
mov
aam
pop
mov
mov
out
xchg
jmp
xor
inc
mov
mov
jmp
int
xlat
enter
shll
std
xchg
shlb
ja
js
jle
js
adc
scas
cmpl
cmp
xor
pop
test
sub
or
mov
pop
popl
out
jbe
mov
sbb
jae
scas
adc
insb
xorb
ficompl
mov
push
aad
adc
repz
dec
pop
and
sbb
xchg
xchg
popa
mov
addr16
lods
lret
arpl
ret
ss
dec
into
xchg
dec
test
xchg
std
outsb
and
xchg
out
push
xchg
and
mov
out
sar
and
sub
dec
cwtl
lods
xor
cmp
push
inc
ret
pusha
movsb
and
cmp
sub
dec
and
push
insb
out
inc
repnz
cmpsb
cmp
mov
ljmp
adc
xchg
cwtl
cmc
push
enter
insl
xor
fnstenv
jnp
mov
loop
xchg
pop
int
insl
cwtl
insl
xchg
pop
outsb
pop
jno
mov
test
out
or
adc
jecxz
jmp
jo
arpl
or
roll
mov
mov
sbb
leave
popf
je
scas
cmp
rcrl
in
imul
push
xor
pusha
fldt
std
jecxz
fstps
in
mov
mov
ja
mov
sub
mov
inc
ret
popa
icebp
jecxz
xor
aaa
mov
inc
and
xchg
jg
cmp
adc
xor
outsl
sbb
push
int
mov
ss
mov
cmp
addr16
aas
popf
mov
jne
arpl
pop
jle
sti
aam
es
movsb
insb
mov
adc
std
in
fisubrl
lods
ret
fdivp
inc
es
mov
or
addr16
add
mov
mov
mov
out
int
inc
loop
notl
pop
sti
jbe
sub
outsb
mov
scas
jp
jne
inc
cmp
rcl
pop
mov
or
mov
loopne
aam
jbe
push
fadds
cmpsl
xchg
insb
sub
aaa
cmpsb
mov
scas
sub
mov
cmpsb
clc
popa
or
int3
adc
jp
sbb
push
xor
mov
mov
mov
inc
pushf
jmp
jns
mov
mov
mov
pop
outsb
shrl
mov
cltd
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
test
js
in
js
dec
cmp
xor
lea
push
lea
js
scas
mov
cld
or
sbb
test
andl
enter
sub
mov
stc
push
movsb
add
pop
add
mov
push
mov
adc
sahf
push
out
push
xor
in
jne
and
or
pop
adc
mov
sub
dec
pop
push
inc
loop
mov
adc
je
cmp
jno
bound
test
lret
fimull
mov
ds
call
push
js
lcall
cmp
inc
outsb
xlat
jg
loope
inc
pushf
ljmp
pushf
xor
sarb
push
cmp
push
lods
and
xchg
fwait
rcrl
inc
sub
sbbl
in
loopne
subb
loope
test
sarl
push
pop
and
pop
xor
lret
out
pop
repnz
repz
cli
dec
fiadds
and
push
out
fs
sub
xchg
jne
xor
cmp
das
dec
xchg
cmc
ljmp
fs
mov
je
pop
repnz
pop
stos
xor
imul
popa
sbb
push
dec
ficoms
cli
push
sub
pop
and
aam
movsb
aaa
fisttpll
adc
aam
push
and
lcall
jb
enter
cmp
inc
cld
lcall
pop
inc
mov
jno
dec
cmp
insb
inc
call
outsb
popa
mov
xor
popf
adc
js
jl
daa
ret
mov
jmp
push
mov
pop
cmp
jle
cltd
xchg
sub
adc
pop
lahf
add
imul
mov
sti
pop
jg
dec
inc
add
sbb
cmp
adc
orb
and
push
jle
mov
rorl
cltd
aaa
lcall
repz
and
aaa
cmp
mov
mov
stos
in
mov
mov
test
test
mov
movsb
adc
xchg
xlat
fcompl
jl
pop
leave
dec
das
dec
push
jg
imul
leave
test
aas
push
jmp
shlb
lret
jne
xchg
in
repnz
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
mov
mov
js
jle
js
in
mov
lahf
orl
cmpsl
xchg
jbe
sbb
xlat
cmp
push
sub
push
bound
add
mov
out
pop
pop
dec
add
sbb
mov
xrstors
test
fistpl
cmpsb
mov
movsl
adc
mov
xor
mov
aam
inc
xchg
xor
mov
mov
call
xchg
xchg
xor
out
jnp
dec
inc
sub
movsb
loop
iret
ss
mov
xchg
mov
mov
dec
popaw
popa
mov
jle
pop
sbbl
shl
idiv
lods
jb
xchg
sbb
js
jmp
and
adc
push
adc
xchg
mov
xor
rcl
inc
outsb
or
mov
outsl
das
or
xchg
clc
stos
mov
std
push
mov
bound
mov
mov
mulb
pop
jge
add
jae
test
xchg
cmp
add
sbb
mov
mov
sub
xor
and
push
pop
movsl
mov
mov
imul
movsb
ficoml
and
icebp
into
sbb
daa
fs
jno
iret
mov
add
cmp
inc
aad
xor
clc
divl
clc
mov
cmpsb
sub
pop
adc
ss
and
push
add
clc
fmulp
mov
movsb
shll
or
jb
pop
outsb
dec
leave
subb
pop
fiadds
mov
lret
lock
dec
pop
adc
std
inc
sub
push
shll
enter
sub
push
jne
int3
jge
stos
or
ret
xor
cmp
mov
icebp
adc
test
or
ret
iret
popf
lea
jl
lods
push
sub
cmp
cmp
fsubr
dec
insl
insl
lcall
sarl
pop
lock
and
fnstcw
push
or
dec
hlt
or
cmp
mov
insb
aam
add
fwait
and
cmpb
gs
popa
lods
mov
aas
fidivrl
cli
add
shr
insl
les
mov
cmpsl
jg
sub
push
mov
or
and
cli
push
or
xor
pop
in
xchg
pop
cwtl
jb
add
addl
add
cld
imul
insl
inc
js
js
jle
js
adc
jo
out
vcomiss
push
clc
int3
add
outsb
mov
mov
mov
cmc
push
or
cltd
dec
scas
lea
mov
call
adc
lods
jl
inc
fwait
and
add
outsb
fists
dec
add
jno
std
mov
lahf
out
sbb
in
lret
inc
insl
xchg
lods
enter
cmp
xor
js
mov
nop
orb
mov
arpl
xor
mov
cwtl
pop
pop
loop
popa
xchg
dec
ret
arpl
call
lds
xchg
scas
out
cmp
mov
frndint
xor
or
sub
in
xor
test
loope
dec
sbb
divl
mov
mov
xor
inc
jne
cltd
mov
aam
push
cmp
shll
je
push
scas
lods
xchg
adc
push
mov
pop
sbb
xchg
and
or
mov
rorl
pop
jmp
shlb
and
adc
sbb
add
outsl
dec
je
insl
inc
jns
in
cmp
lods
insb
and
loop
add
mov
test
pop
dec
ljmp
das
inc
cmp
repz
jge
jle
sbb
jbe
mov
mov
pop
aas
adc
int
push
inc
mov
jne
xor
mov
popf
sbb
clc
push
out
roll
or
addb
adc
subb
push
xchg
mov
mov
fs
rcl
fsubl
dec
dec
jl
mov
loop
fcomi
stos
ret
in
push
dec
fwait
pop
movsb
push
std
in
mov
divb
and
scas
imul
pop
sub
adc
out
add
rcrl
gs
dec
inc
data16
cmp
push
sub
enter
or
ljmp
test
sub
ret
jb
pop
outsl
roll
scas
lds
xchg
dec
inc
dec
or
cmp
xchg
fcmovu
cmp
pand
jge
leave
fnstenv
mov
shlb
clc
add
add
jmp
ror
ror
leave
leave
mov
insl
scas
sub
js
jle
js
int3
and
int
mov
ja
jo
dec
loope
out
add
cmp
jnp
and
or
lea
test
mov
jecxz
mov
jecxz
xchg
adc
mov
lea
je
dec
dec
jle
call
mov
inc
dec
stos
or
out
push
and
out
or
xchg
test
jbe
insl
aam
push
xchg
and
jge
pop
out
sti
sahf
sti
iret
adc
xchg
cmp
cmp
jecxz
dec
cmp
push
test
aaa
jg
dec
sbbl
pop
in
aad
loop
push
dec
xor
fcompl
outsb
push
jmp
push
inc
add
add
insl
les
iret
pop
aaa
arpl
cs
cld
imul
imul
sub
test
scas
daa
test
cld
shll
repnz
mov
std
in
xchg
sbb
adc
or
scas
ljmp
inc
lret
movsb
movsb
mov
pop
imul
add
push
das
test
sub
lret
insb
or
fisttpl
mov
movsb
fstp
testb
push
imul
push
cwtl
out
jb
jne
aas
std
scas
int
or
mov
cmpsl
ret
push
scas
jmp
mov
mov
mov
and
rorl
mov
pusha
pushf
rorl
xlat
test
cld
or
daa
js
push
mov
fwait
jb
cmp
jmp
cwtl
dec
adc
outsb
out
cmp
and
fcompl
repz
sahf
push
hlt
dec
jne
adc
in
pop
lret
lea
mov
std
aaa
mov
cmp
mov
mov
cmp
je
out
ds
pop
ja
ja
rorb
mov
ljmp
pop
out
mov
aad
imul
test
mov
mov
je
std
and
or
sbb
dec
cmpsb
cli
enter
sbb
mov
xchg
push
clc
or
and
jns
stc
pusha
sub
sahf
mov
fmulp
ljmp
or
mov
lods
or
push
ret
ror
mov
hlt
sub
add
and
notb
pop
dec
movsl
out
fcmove
add
ss
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
cmpsb
inc
push
xchg
add
in
js
or
in
dec
pop
lods
sarl
nop
outsl
int
sbb
mov
lods
mov
stc
or
pop
cwtl
jb
xchg
xor
ds
pop
xor
gs
sbb
xchg
jmp
pop
cmp
pushf
mov
fidivrl
int3
out
call
sub
pop
push
in
lret
jns
mov
imul
mov
outsl
loopne
inc
in
sub
sub
cld
scas
jmp
push
bound
xchg
push
sub
sub
fidivl
rcll
fs
out
call
push
in
sub
fdivl
lret
pop
jp
add
je
sbb
sbb
and
out
mov
cs
push
xchg
pop
shll
daa
sub
pop
xchg
jae
loop
mov
fldl
push
xchg
mov
mov
je
hlt
ljmp
xchg
bound
cmpsb
cmc
xor
mov
std
aad
enter
adcl
adc
inc
ds
ds
mov
dec
out
jmp
daa
pusha
push
xorl
pop
fcomip
push
xchg
mov
adc
push
js
gs
xor
mov
mov
addr16
les
mov
push
xchg
xchg
mov
dec
mov
and
and
push
imul
mov
push
add
jg
outsl
mov
push
xorl
stos
gs
jns
mov
and
jbe
jl
test
xlat
jo
mov
xor
push
xorl
and
xchg
fnstsw
lret
xchg
stos
xor
sub
lcall
arpl
mov
hlt
das
into
push
out
cmc
jg
je
mov
lret
inc
jge
gs
iret
les
xchg
pop
shrl
ss
aad
cltd
pop
xchg
mov
cmpb
and
mov
jne
ret
xchg
push
cmp
push
sub
pop
push
loopne
fnstsw
cmpsl
mov
jle
sbb
cmc
jb
xor
xorps
in
pop
fmull
stos
int3
xchg
outsl
xchg
nop
cmpl
cmpsl
mov
push
xorl
push
mov
jbe
loopne
faddl
hlt
push
add
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
cmp
movsb
xor
in
js
jl
popf
mov
sub
cs
pushf
inc
adc
xchg
lods
push
ds
leave
icebp
or
into
or
and
jno
xchg
xchg
loop
gs
sahf
pop
iret
inc
iret
jecxz
cmp
jbe
adc
fistl
cmp
leave
bound
es
dec
ret
cmp
jle
leave
lods
scas
xchg
and
aam
jne
xchg
jmp
inc
fucom
jae
xor
filds
push
cmpsl
cmp
cmpsl
inc
inc
daa
push
jp
fwait
scas
jo
jns
fldt
in
popa
mov
mov
sub
lock
mov
mov
mov
xor
or
mov
test
lods
or
paddsw
popa
in
in
push
insb
jecxz
pop
call
cmp
aas
mov
mov
ja
add
es
push
push
mov
and
repnz
xlat
mov
mov
pop
out
iret
aaa
mov
jo
loope
xchg
test
dec
mov
imul
or
dec
dec
xchg
cmp
dec
sub
inc
xchg
pop
inc
ljmp
pop
and
bound
sahf
sbb
in
repnz
rcll
popl
dec
mov
mull
xor
and
test
mov
bound
stc
dec
filds
ficoml
flds
stos
lock
sub
cmp
scas
aad
push
inc
xchg
xor
sbbl
out
cmpsl
faddl
out
insb
in
push
xlat
pushf
mov
dec
push
fstp
adc
insb
xor
sbb
cmpb
lods
inc
pop
in
sbb
pop
cmp
jae
push
movsl
and
mov
in
loop
push
sub
inc
in
js
pop
jmp
mov
jmp
into
scas
pop
rcr
push
cmp
in
sbb
test
adc
js
adc
pop
push
inc
jge
mov
mov
sbb
sbb
cmp
inc
xor
push
sub
mov
push
in
cmp
ja
inc
or
adc
fdivp
int
bound
push
sbb
test
rclb
rorl
scas
sti
mov
jmp
rol
leave
rcr
rcr
enter
out
je
push
jg
in
js
push
mov
mov
push
pop
enter
sti
in
sbb
gs
jmp
pop
scas
adc
mov
sahf
imul
jbe
cmp
or
jb
scas
cld
imul
dec
insb
cwtl
imul
jne
xor
dec
inc
ds
jle
out
sub
xchg
data16
std
dec
cmc
sub
iret
cwtl
int3
mov
xchg
push
imul
or
mov
jecxz
jno
pop
add
repz
pop
sbb
das
stc
pop
sbb
imul
lock
fdivrp
fnsave
pushf
fsts
ret
jl
cmp
repz
stos
aam
dec
popf
adc
sub
jns
rcr
sahf
inc
xchg
sub
loopne
das
dec
pushf
cmpsl
repnz
jp
shr
sti
inc
int3
mov
inc
arpl
aam
out
adc
inc
out
push
xor
aaa
jl
sbb
into
stos
or
sahf
and
aam
aam
xor
cmpsb
and
call
cmp
dec
in
dec
mov
jp
cltd
cwtl
test
jl
add
cmp
orb
cmpsb
subb
sbb
shl
sbb
ljmp
sbb
loope
mov
xor
iret
push
mov
dec
inc
inc
add
cltd
in
mov
jne
imul
sub
scas
cmpsl
mov
cwtl
lods
jg
rorb
test
std
mov
test
xchg
and
movsb
mov
add
push
stos
adc
sti
call
dec
dec
fdivl
jae
mov
bt
pop
dec
test
mov
xchg
xchg
mov
mov
call
adc
jle
xchg
dec
insl
pop
push
daa
iret
xchg
sbb
dec
mov
fstpt
sbb
xor
mov
out
jbe
lret
sti
fdivs
sub
mov
xchg
rolb
test
cmp
inc
aad
lret
loope
mov
pusha
out
lcall
popf
in
adc
lds
scas
xor
stos
or
jnp
adcl
cwtl
mov
addl
add
aas
int
aam
mov
mov
addr16
add
js
jle
js
push
pop
dec
sbb
pop
sti
mov
cld
dec
cmp
jne
inc
push
inc
test
pop
movsl
shll
daa
pop
shrb
xchg
or
pop
sahf
arpl
pop
adc
xchg
dec
fisttpl
nop
ret
add
rcll
fldcw
cmp
mov
stc
aas
cltd
jle
mov
xchg
pop
mov
repnz
daa
add
xor
mov
test
jge
sbb
xor
jge
stc
mov
je
mov
cmp
leave
and
out
pop
enter
sbbl
jbe
cmp
cmp
cmc
int3
loope
dec
xchg
xor
or
insl
loope
sbb
subl
movsl
mov
jmp
adc
xchg
add
cltd
sub
or
fidivl
adc
movsb
lods
sarl
dec
pop
jnp
jmp
lock
fdivl
xchg
dec
sbb
fstl
jmp
mov
mov
mov
xlat
add
adc
xor
jecxz
mov
cltd
xchg
add
push
repnz
stc
stos
test
scas
mov
pop
leave
fwait
cs
push
jmp
test
add
mov
lret
pop
xor
je
das
or
cmpsl
pop
mov
jge
in
out
nop
sub
push
out
loope
push
shll
in
cmp
or
loopne
dec
or
mov
mov
addr16
ret
cmp
pop
ret
jnp
xor
stos
in
jnp
call
adc
movsl
mov
mov
movsl
adc
xor
jns
sbbb
loopne
aad
cli
mov
testb
test
push
add
pop
out
mov
and
lods
push
fcmove
jle
jmp
mov
push
outsb
xor
push
add
xor
xchg
jecxz
sbb
ja
mov
js
push
aam
pop
scas
aam
mov
push
mov
sbb
sbb
out
hlt
rorb
sub
cmp
push
outsl
dec
pop
mov
fs
xchg
xor
cwtl
fcoml
leave
cmp
inc
xchg
xor
cmpl
cmp
add
testb
or
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
outsb
rorl
js
jle
js
jae
leave
mov
inc
and
bound
movb
pushf
test
out
jmp
adc
insl
inc
dec
outsl
in
stc
repz
test
addr16
xchg
pop
inc
fnstenv
aaa
mov
and
imul
jge
outsb
loopne
push
dec
lahf
dec
dec
xchg
mov
push
in
test
sub
jne
xor
rep
es
lds
lcall
dec
fdivrl
pop
mov
int3
movsb
push
lds
maskmovq
idivl
sti
sub
xchg
scas
xor
imul
fmull
scas
mov
icebp
lret
data16
xchg
cmpsb
jbe
pop
test
fdiv
pop
add
sbb
sbb
cmp
loop
inc
jne
sbb
xor
cld
sub
pop
push
aas
xlat
clc
leave
out
addr16
out
fucomip
push
mov
movsl
pop
in
or
dec
mov
sbb
jmp
cli
aaa
cmp
mov
mov
js
or
jg
jmp
mov
call
cmp
cmp
je
sub
pop
mov
inc
push
movsl
enter
lret
sub
and
push
ret
leave
mov
dec
xor
mov
js
outsl
imul
push
adc
pushf
jnp
pop
inc
mov
add
pop
jnp
loopne
xor
fldenv
dec
int
movsl
mov
or
enter
stos
pop
ss
inc
fcompl
add
jge
mov
mov
inc
arpl
jo
xchg
jne
inc
lcall
clc
mov
aad
xor
fwait
or
xor
push
sub
mov
xor
or
mov
pop
mov
fwait
hlt
sti
cltd
adc
mov
out
sbb
mov
lret
lret
cmp
xchg
mov
mov
mov
sbbb
popa
aaa
call
mov
add
movsb
pop
out
sub
gs
jnp
cmp
popf
mov
adc
adc
jnp
cmp
and
sub
dec
mov
jmp
xchg
mov
repnz
gs
mov
mov
sbb
scas
xlat
mov
jmp
lret
ret
vpand
ret
subb
shrl
js
push
sti
push
ficoms
mov
ret
mov
jp
mov
das
xchg
mov
push
in
loopne
xor
jns
sbb
xchg
dec
shrl
mov
fwait
push
adc
pop
cmc
xlat
ficoml
cld
pop
or
aad
outsl
cmc
sub
dec
mov
adc
add
popf
lds
in
cmp
outsl
jp
das
in
lods
into
pop
sahf
clc
mov
stc
movsl
mov
push
jae
cmp
mov
pop
inc
xchg
fcmove
out
inc
fstpl
add
xchg
sbb
xchg
jl
popa
imul
enter
jb
ja
dec
popa
jbe
sahf
mov
mov
mov
push
ret
or
iret
dec
cs
fisubrs
jmp
icebp
pop
lcall
lock
mov
test
shl
pop
jae
test
out
aaa
xor
xor
outsb
xor
bnd
outsl
add
testb
movsl
in
mov
icebp
adc
lods
xchg
pop
out
push
daa
lds
cmp
push
fdivr
mov
pop
in
jo
iret
dec
mov
mov
pop
out
sahf
bound
mov
jbe
icebp
push
roll
loope
sub
pop
call
jge
test
inc
mov
lods
loope
sub
out
test
sbb
clc
daa
fcomps
dec
fdivrl
test
xchg
jle
inc
jo
mov
sub
ja
dec
jne
cmp
push
arpl
in
ja
lret
aad
shll
out
push
mov
xor
inc
adc
mov
xchg
int3
pop
mov
and
test
aam
pop
jb
lahf
insb
push
mov
mov
lods
push
jae
mov
xchg
add
fstp
jge
inc
js
jns
aad
cmp
xor
inc
sbb
lret
imul
cwtl
popa
xchg
mov
out
test
insl
in
loope
push
pop
pop
sub
and
cmp
mov
movsb
xchg
into
push
push
mov
push
into
imulb
lock
inc
xchg
or
push
ds
add
cmp
mov
push
add
sub
cmp
inc
mov
fstps
iret
test
add
out
sbb
inc
push
mov
mov
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
fucom
stos
sbb
js
jle
js
bound
xor
js
mov
loop
in
pop
mov
icebp
pop
fimuls
test
test
out
aad
jb
jo
mov
je
jl
stos
push
lret
stos
add
or
les
mov
or
mov
xlat
imul
jo
lcall
call
cmc
sahf
jbe
nop
xor
vorps
pop
out
dec
pop
and
mov
fcmovb
inc
in
repz
rcll
loop
jns
pop
and
jl
std
xchg
inc
push
gs
neg
cltd
jo
sub
insb
int
pop
xchg
test
sar
inc
inc
jecxz
sbb
add
xchg
sub
in
adc
xor
stos
pushf
rorl
test
mov
xchg
addr16
idivl
push
mov
mov
sbb
arpl
sbb
cld
jp
in
dec
les
and
incb
adc
or
xchg
jae
or
fwait
add
mov
sub
loope
xchg
push
int
pop
xlat
pusha
sbb
push
and
xchg
cmpb
sbb
pushf
nop
adc
xchg
fstl
adc
lahf
cltd
in
lret
hlt
in
loop
and
out
push
lcall
sbbl
add
mov
pop
dec
fnstenv
inc
shrb
xorl
ficomps
cmp
mov
cmpsl
cli
mov
faddl
sub
mov
ljmp
jno
cmp
jns
aaa
push
hlt
jg
aas
inc
mov
in
jbe
lds
sbb
imul
jbe
or
test
pop
pop
insb
enter
cld
jp
ss
cmc
notb
jns
imul
add
jbe
aas
jg
outsb
xor
inc
inc
sub
fucomp
lods
leave
xor
xor
pusha
out
jl
and
push
cmpsb
pop
mov
iret
outsb
dec
pop
gs
pop
xchg
dec
mov
xchg
dec
adc
sub
ret
adc
mov
in
lret
nop
icebp
push
ret
outsl
mov
adc
jmp
test
xchg
jp
out
mov
iret
mov
js
repz
add
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
xchg
lcall
js
jle
js
test
insl
and
testb
mov
fcom
dec
and
mov
ss
neg
push
daa
add
xchg
sub
in
adc
and
imul
in
sub
sub
cmp
repz
pop
out
roll
frstor
jge
xor
sbb
and
repz
sub
test
jno
je
add
sbb
test
les
lcall
cmc
in
cld
jmp
repz
lods
scas
mulb
into
in
cld
nop
mov
outsb
mov
lods
xor
mov
mov
iret
hlt
add
clc
jb
pop
inc
mov
mov
mov
fsubrl
clc
out
int
adc
cld
es
push
mov
sub
sub
jmp
and
popf
sbb
jnp
mov
andl
adc
jmp
es
movsl
lds
sub
imul
inc
push
ja
or
pop
cmpsl
jl
js
imul
jmp
mov
sub
cmc
imulb
pop
shl
add
xchg
movsl
xor
mov
mov
iret
divb
jmp
cmp
or
mov
jbe
data16
push
loope
jp
pop
pop
rorb
jecxz
add
pop
sbb
xchg
loopne
xchg
jno
mov
xchg
js
xorb
mov
ret
xchg
push
sbb
sar
dec
jecxz
sub
pop
cli
enter
movb
push
inc
cmp
movsl
arpl
mov
dec
or
cwtl
push
js
scas
mov
cs
mov
movsl
sarb
lcall
xor
and
shlb
shlb
xor
xchg
pop
pop
ret
ja
pop
pop
imul
sbb
fmul
gs
popf
adc
aad
sbb
dec
xor
mov
lods
in
loopne
sub
cmp
and
insl
adc
sbb
mov
ss
mov
sbb
push
jecxz
arpl
mov
imul
inc
shlb
xchg
sbb
jp
lods
imulb
jne
xchg
adc
sbb
lea
and
pusha
jbe
pop
pop
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
mov
insl
adc
xchg
jle
js
jb
pop
incb
ret
fisubs
test
loopne
lret
adc
xchg
and
pop
push
mov
push
add
shl
add
add
cmpsl
mov
jae
pushf
pop
xchg
sub
adc
roll
push
jl
jno
imul
and
test
mov
adc
dec
aas
push
pusha
int
mov
push
stos
or
sub
sbb
imul
fldl
xchg
mov
and
mov
mov
jae
mov
and
push
lock
imul
ficoms
adc
into
sbb
div
je
jae
repnz
jl
cmp
out
jbe
cmpsl
push
xchg
out
out
push
cli
sbb
dec
jg
push
cli
add
cmp
mov
ret
inc
cmpsl
pop
jo
push
shlb
movsb
cmp
jbe
fsubr
sbb
mov
or
dec
adc
jecxz
mov
mov
fisubrl
inc
jae
rclb
in
pop
lock
enter
add
rorl
lahf
repz
sbb
add
outsl
dec
cmc
ljmp
loopne
mov
or
push
jo
imul
pop
add
and
push
adc
xchg
in
and
xor
mov
mov
xchg
out
cmp
data16
addl
push
push
push
pop
rcrb
roll
lea
sbb
xchg
stc
mov
mov
jno
rorb
dec
movsb
pusha
xchg
cli
pop
pusha
stos
aam
mov
gs
adc
icebp
adc
stos
jbe
mov
outsb
push
fwait
xchg
addr16
push
addr16
daa
jp
mov
jnp
cmpsl
outsb
test
push
lock
sar
hlt
insl
push
inc
inc
sub
fsts
enter
adcl
cmp
leave
and
mov
pop
fcomp
rcrl
xorb
pop
xor
pop
mov
std
data16
gs
adc
hlt
or
jo
dec
std
dec
loopne
test
xchg
inc
pop
bnd
add
mov
cmp
loop
mov
das
push
jo
dec
filds
mov
in
loope
sbb
in
sbb
mov
sub
test
push
and
add
rorb
inc
cmp
sbb
jbe
into
add
mov
cmc
cmpsl
inc
add
adc
add
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
mov
adc
js
stos
cmp
jb
jle
hlt
sbb
mov
mov
xchg
sbb
cmpsb
adc
sub
std
clc
mov
lcall
lahf
std
xchg
stc
ret
scas
iret
cmpb
mov
xchg
sub
mov
sub
or
mov
cld
ja
or
mov
int
add
in
in
jmp
pop
scas
cmp
cltd
arpl
and
dec
jmp
das
push
fldcw
repnz
jbe
fisubrs
mov
sub
inc
mov
add
ss
sarb
shll
insl
pop
aas
sti
jne
push
dec
mov
xlat
mov
jo
addl
cltd
adc
dec
cmpsb
sub
jo
and
xchg
in
push
xorl
mov
adc
xchg
xchg
lret
lret
jo
mov
mov
inc
movsb
das
in
std
lock
mov
inc
subb
lds
inc
push
adc
push
fwait
add
xlat
cmp
sub
sbb
fldl
mov
adc
mov
arpl
cmp
lods
or
andb
outsl
or
pop
cwtl
dec
orb
mov
lahf
inc
dec
cld
shll
and
imul
mov
jg
jae
jae
fs
ret
cmp
int
fsubs
fstpt
jnp
fcmovnb
xor
cmp
lret
mov
jno
adc
fcmovnbe
cltd
dec
xor
xchg
enter
xchg
cmp
and
mov
jnp
loope
pop
fisubl
inc
jp
mov
shlb
push
insb
mov
repz
mov
xlat
lcall
add
test
mov
pushf
xchg
arpl
jmp
stos
cmp
mov
lret
pop
jge
jp
xchg
mov
inc
mov
push
inc
outsl
int3
sub
cmpsl
in
jno
dec
icebp
jl
mov
xor
bound
push
push
loop
jl
rorb
jb
pop
test
add
push
and
shrl
xchg
bound
nop
xor
pop
adc
icebp
cmc
jecxz
in
xor
test
addl
clc
mov
sti
mov
cmpsl
mov
outsl
arpl
jb
stos
in
cmp
or
inc
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
jg
out
shll
sbb
xchg
jle
js
mov
insb
pop
add
dec
sub
enter
fstps
mov
repnz
add
imul
sub
sahf
dec
mov
mov
and
out
add
fadds
loopne
adc
shrb
and
mov
add
scas
add
sbb
aaa
pop
push
fsubl
push
lahf
scas
or
sbb
lret
enter
sub
cmp
movsl
shrl
adcb
pop
aaa
sbb
jb
jbe,pt
outsl
jmp
clc
in
fidivrs
jb
movsb
pop
pop
mov
xchg
add
adc
xchg
inc
imul
inc
mov
push
xchg
insb
mov
ffreep
hlt
dec
int
pop
push
mov
or
mov
aam
test
mov
mov
cltd
sub
mov
sbb
jle
arpl
hlt
sbb
sbb
inc
sbb
popf
mov
arpl
jmp
push
out
nop
cli
stos
shlb
test
add
fidivs
pop
and
mov
sbb
out
mov
inc
cmp
out
in
jl
adc
dec
push
arpl
loope
inc
xchg
mov
pop
mov
aaa
pop
movsb
fidivl
pop
sub
sahf
into
fnstenv
push
fsubrl
enter
xor
test
sub
andl
nop
loopne
pop
arpl
pusha
aas
pop
lcall
roll
add
push
scas
insl
scas
push
jge
or
xor
sbb
mov
add
push
pusha
fs
inc
stos
push
in
into
mov
gs
loope
adc
stc
ja
push
and
xchg
aaa
scas
daa
fsubs
xor
aas
dec
push
add
push
jnp
adc
pushf
addb
and
dec
pop
inc
add
or
xor
or
cli
mov
mov
dec
sti
inc
dec
jnp
jge
mov
test
sbb
lods
fmul
cmp
push
mov
pop
insl
mov
in
xchg
jp
cmp
or
push
mov
mov
cld
pop
sub
fs
daa
fwait
sub
rcll
and
pushf
cmc
and
xchg
loop
mov
dec
mov
xor
push
sub
ljmp
adc
xchg
push
inc
or
push
adc
int3
leave
out
sub
arpl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
idivl
js
out
inc
dec
mov
mov
push
andl
cmp
fnsave
xorl
rorb
inc
pop
pop
cmp
adc
add
or
ret
push
pop
cmp
cmc
cmpsb
shlb
xchg
ret
or
mov
push
aad
test
mov
fidivrl
xchg
push
mov
push
aad
xchg
testb
adc
daa
ds
test
sbb
cmp
ss
test
xchg
pop
jp
ljmp
test
pop
out
dec
test
jl
pop
jmp
lret
or
bound
mov
jg
fwait
lea
dec
fisubrs
push
jmp
leave
mov
pusha
mov
jns
es
ret
add
or
jb
mov
cld
ret
aas
add
shrl
bound
pusha
lahf
sbb
test
std
test
call
stos
push
adc
aam
mov
pop
into
sahf
push
out
mov
leave
push
xor
sti
lahf
mov
sub
cli
cld
and
dec
fistps
sti
sarb
pop
xor
dec
cmp
jns
inc
add
stos
nop
es
test
mov
rcpps
jbe
inc
xor
iret
mov
sub
cmpsb
mov
jns
sbb
mov
mov
jl
ja
ja
out
lock
ror
jb
dec
ds
loop
aas
pop
in
dec
or
mov
add
add
lea
cmp
std
dec
mov
sub
mov
xchg
push
pop
fildll
adc
sti
stc
in
dec
lahf
repz
pop
into
arpl
scas
pop
jbe
jbe
arpl
nop
push
fbstp
mov
mov
or
and
inc
pop
pop
cltd
pop
hlt
xor
mov
mov
mov
mov
dec
adc
movsl
mov
add
popa
aaa
mov
xchg
mov
add
lret
aam
push
adc
out
idiv
mov
lcall
repz
cli
lcall
ret
pop
cmpl
call
dec
and
sub
sbb
lea
bound
popf
pop
fwait
or
ret
sub
loop
sub
push
dec
orb
push
pop
add
jae
cli
sti
in
sbb
pop
je
adc
cmp
add
add
add
mov
add
ret
int3
int3
aad
leave
roll
movsl
ds
fstps
js
or
cmpsb
add
movzbl
sbb
inc
and
insl
jb
lods
std
dec
and
in
or
mov
jp
imul
mov
hlt
adc
mov
lds
sar
inc
lock
cmp
mov
test
sbb
mov
mov
mov
dec
loope
dec
xchg
pushf
add
mov
adc
push
dec
xchg
jmp
out
sub
and
pop
mov
mov
pop
add
mov
iret
cmc
cs
dec
fwait
add
ss
and
dec
shll
movsl
jb
stos
xchg
dec
adc
mov
jb
adc
mov
sbb
adc
sbb
lods
pop
adc
pop
sahf
pop
fs
fsubl
xchg
test
stc
pop
sbb
push
fwait
cli
xchg
xchg
sbb
outsb
xchg
stos
ljmp
xor
inc
and
scas
pop
pusha
pop
add
mov
adc
hlt
jp
cs
mov
jb
push
add
or
inc
clc
cmp
sbb
mov
sub
lods
sbb
adc
xor
sbb
jb
jo
sbb
inc
lcall
inc
adc
cmp
dec
add
sbb
sub
push
outsb
aad
adc
or
add
xchg
ja
call
fistpll
fwait
sub
push
mov
adcb
mov
lret
push
or
jl
test
dec
out
bound
cwtl
nop
push
test
movsb
sbb
pop
xchg
repz
cwtl
xchg
jp
icebp
out
jnp
cmpl
bound
push
mov
aaa
inc
pop
loopne
cmp
ret
dec
fisttps
pushf
dec
jnp
test
stos
rcrl
or
and
ljmp
add
aaa
lea
lea
sub
es
loopne
movsl
in
cli
movl
mov
data16
inc
mov
ljmp
jecxz
mov
clc
hlt
addr16
mov
sbb
or
adc
test
fwait
cld
pop
and
lods
adc
and
and
scas
push
lahf
jae
sub
xor
gs
fcmovnu
xor
les
xor
mov
icebp
add
cmc
mov
arpl
jmp
jmp
ds
int3
lret
xchg
aam
outsb
mov
and
xchg
jle
js
or
dec
inc
push
mov
xchg
push
pop
or
dec
mov
es
lock
mov
and
sub
sbb
dec
xchg
jb
xchg
xchg
mov
push
xor
inc
flds
dec
rcrl
xchg
mov
sub
and
xchg
add
lods
sarb
dec
outsl
push
dec
ds
mov
cmpsl
fcomi
pop
pop
outsb
rol
outsb
lret
mov
data16
mov
sti
aam
mov
mov
popa
sub
mov
lret
mov
add
addl
insb
push
aam
repz
mov
out
les
cmp
in
add
cs
lds
fmulp
in
lahf
ret
sub
sbb
mov
in
xor
or
and
xor
push
mov
insb
out
js
sbb
cmpsb
addr16
leave
out
outsb
popf
leave
test
push
sub
sub
mov
adc
mov
sbb
xchg
lahf
testb
inc
mov
dec
xor
movaps
in
jbe
mov
or
lock
mov
aaa
jne
lods
test
lret
pop
mov
roll
sbb
cs
dec
repz
adc
enter
int3
pop
or
xor
cmp
out
lods
push
dec
cmp
pop
stos
and
mov
stos
push
or
rorl
hlt
test
adc
aam
loope
cmp
test
xchg
add
adc
adc
clc
es
rorl
jmp
pop
lods
and
into
inc
and
sub
xchg
and
xchg
je
out
stc
call
dec
jmp
ja
jb
mov
mov
cmp
mov
or
push
loop
into
out
xchg
push
push
sbb
xor
inc
xchg
or
icebp
mov
jmp
mov
aaa
aas
out
mov
ret
dec
call
test
addr16
call
jno
cmp
mov
test
jo
int3
sub
xchg
mov
xchg
daa
mov
jnp
lahf
inc
test
pushl
cwtl
cmpsb
and
cld
rcll
int
int
inc
push
es
mov
sbb
pop
lret
mov
sbb
out
xchg
ud1
jecxz
cmp
imul
data16
inc
mov
les
test
mov
pop
call
pop
mov
inc
cld
jmp
rol
iret
fcmovbe
fcmovne
mov
shl
adcb
js
insl
fs
scas
xor
sti
jge
add
jl
out
cmpsb
inc
popf
add
cmp
lcall
ljmp
push
shrl
mov
push
ss
daa
arpl
leave
add
dec
icebp
fists
push
test
sbb
dec
ja
adc
mov
sbb
mov
inc
cmp
jmp
or
sub
lahf
push
idivb
in
mov
test
jl
lds
pop
jecxz
sti
mov
dec
lea
mov
daa
dec
notl
lods
fistl
and
xchg
inc
or
and
xor
cmpsl
xor
add
lods
insl
ja
inc
and
dec
xchg
and
movsl
pop
fdiv
xor
mov
sub
lret
popf
gs
sarb
in
lock
pop
mov
xor
mov
inc
xchg
mov
and
cmc
nop
sbb
xor
or
dec
loop
and
jnp
xlat
jp
push
cmp
inc
dec
enter
or
movsb
pop
pusha
les
adc
shlb
loope
push
sar
aam
aad
jno
jb
adc
loope
lahf
bound
push
dec
aad
push
call
in
cmp
jbe
mov
or
dec
aas
add
es
jb
push
xor
xor
lret
xor
lds
push
mov
addr16
pop
sahf
lea
aam
push
push
pop
jmp
lcall
sbb
fstpl
jmp
pushf
scas
mov
and
pop
inc
rolb
xor
aas
aas
jnp
mov
cwtl
sub
or
mov
cmp
jg
ret
ret
dec
xor
test
xor
mov
add
inc
fidivs
adc
sub
je
orb
sti
fisttpll
push
lock
fadds
xchg
imul
addl
jp
adc
rsm
adc
sub
push
mov
dec
imul
hlt
cmp
sub
pop
mov
and
js
cwtl
test
fsts
jge
or
into
inc
mov
sbb
dec
imul
ret
add
fnstsw
cwtl
dec
rcrb
mov
and
xor
mov
push
ret
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
insb
or
ret
fdivrs
mov
push
cli
ss
lds
push
daa
ja
orb
mov
cli
push
stos
xor
mov
int3
movsb
scas
and
je
push
gs
filds
aad
push
aaa
stos
notb
add
push
push
pop
lods
inc
mov
mov
sub
xor
inc
dec
flds
and
shll
push
cmp
sbb
mov
fxch
adc
dec
test
inc
xor
punpcklbw
sbb
sbbb
add
cmpsb
mov
jo
aad
push
cs
test
sbb
ftst
cmp
shrl
call
sbb
inc
mov
je
cmp
and
xchg
fwait
mov
push
cwtl
pushf
mov
ret
es
fs
mov
sti
mov
fdivrs
mov
mov
push
adc
inc
dec
shl
pop
pop
pop
aad
and
cmpb
fs
js
xchg
data16
push
xchg
mov
sub
mov
data16
dec
dec
subl
ds
lds
mov
test
push
mov
or
inc
popa
fbstp
scas
cmpsl
jge
sahf
loop
lock
jp
js
add
cltd
addr16
jl
xor
adc
mov
jge
call
fbstp
ljmp
std
ret
xchg
mov
adc
xchg
or
sub
adc
fnstenv
sbb
jecxz
decl
inc
adc
jl
xchg
jb
mov
inc
dec
test
daa
rolb
jecxz
cmpsb
stos
mov
cli
int3
jno
dec
es
push
mov
sub
in
push
xor
pop
cmovns
pop
sbb
aam
cmpb
test
push
mov
jle
pop
hlt
or
and
enter
and
and
mov
sbb
jnp
inc
insl
xor
daa
push
sub
adc
stos
or
jle
out
jmp
adc
xchg
daa
shlb
iret
aaa
bound
mov
mov
cld
jo
insl
mov
scas
push
and
xchg
das
and
ret
xor
arpl
outsb
gs
push
test
imul
cmp
imul
imul
scas
inc
enter
sbb
pusha
sub
xchg
mov
adc
insl
mov
ljmp
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
out
sub
xchg
jle
js
push
out
aas
mov
xchg
cli
scas
fisubl
nop
xlat
push
mov
fs
inc
sbb
ss
js
lea
jnp
add
movb
dec
sub
loop
ret
push
out
xor
stos
imul
fwait
mov
sbb
jnp
pop
idivb
rorl
push
add
mov
push
mov
dec
cmp
bound
mov
ss
into
mov
jmp
loopne
stos
sbb
add
daa
mov
or
insl
vprotq
fsubrs
pop
mov
cli
pop
ss
mov
mov
stos
mov
sti
arpl
jp
cmp
addb
repz
aam
cmp
movsl
jbe
xchg
mov
jne
sub
sbb
lods
ljmp
cmp
adc
out
rclb
andl
ret
data16
mov
insl
imul
fcomps
mov
icebp
or
rol
xor
aas
add
jg
sahf
add
jmp
inc
push
jno
or
mov
arpl
xchg
lods
insl
out
xchg
inc
jge
sub
cmp
xchg
aam
adc
filds
lret
adc
add
int3
aad
xchg
jne
adc
icebp
ficompl
sbb
sbbl
mov
dec
xchg
adc
and
sbb
mov
sti
jmp
mov
mov
adc
xor
inc
scas
and
and
mov
or
cmp
dec
or
xor
adcb
cmpb
cs
sbbb
mov
rorb
sahf
fs
xor
es
jle
pop
dec
rclb
rol
mov
out
sub
in
ljmp
jmp
mov
xchg
mov
and
call
mov
das
test
xchg
inc
push
inc
lods
leave
out
lods
out
or
mov
inc
mov
push
lcall
movsl
inc
adc
fld
iret
xorb
mov
pop
xchg
testb
push
fldl
inc
dec
hlt
cwtl
fs
filds
jnp
adc
xchg
repz
or
sub
sti
lcall
dec
mov
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
sarb
add
jle
js
push
pusha
mov
aaa
push
cmovo
stos
mov
std
insl
jmp
addr16
mov
push
inc
enter
out
out
or
pop
pushf
xchg
cvtps2pi
push
push
sub
mov
pop
inc
xchg
loop
inc
negb
enter
sbb
xor
xchg
dec
push
xor
sub
repz
push
dec
adc
pop
sub
in
adc
aam
nop
mov
je
mov
and
cwtl
add
push
adc
cli
or
and
popf
jecxz
stc
cld
data16
inc
lods
aad
ss
push
inc
mov
jmp
enter
mov
add
inc
mov
test
enter
test
cmpsb
aas
addl
rcrl
dec
xchg
sbb
lods
and
or
out
mov
pop
lea
fnop
andl
cwtl
xchg
inc
ret
aam
popf
shlb
pusha
jl
movsl
mov
jae
in
cmpsl
mov
dec
das
sub
ret
vminps
dec
dec
mov
sub
add
ds
ja
flds
mov
pop
cmp
pop
lds
jmp
loop
mov
loop
or
sub
pop
imul
cmp
mov
sub
push
lods
mov
lods
pop
pop
inc
negl
sti
sahf
sbb
fildl
add
adc
push
mov
xchg
outsl
adc
divb
movb
lods
enter
ja
mov
ret
arpl
dec
shl
xchg
fldl
jbe
mov
or
out
daa
cmpsl
or
or
movsb
std
mov
cltd
and
push
or
pusha
mov
loopne
mov
imul
lock
fadds
sbbb
xchg
in
or
inc
xchg
loope
fcompl
mov
aas
or
movsb
xchg
fldenv
daa
int3
or
inc
xlat
mov
sub
hlt
pop
or
fsubrs
and
mov
mov
insl
lea
adc
push
sub
pop
daa
xchg
pop
jnp
sub
mov
xchg
gs
xor
push
pop
fnsave
outsb
pop
jle
addl
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
xor
pop
jg
jg
add
add
int
xchg
sbb
xor
nop
inc
sub
xchg
or
mov
aad
push
adc
sbb
hlt
pop
loop
adc
int
in
xchg
lahf
mov
stos
cmp
ds
aad
inc
call
mov
add
out
jbe
movsb
pop
jb
movsl
inc
or
scas
jb
scas
lods
xchg
arpl
mov
push
loop
mov
in
mov
xchg
outsb
sbb
pop
sub
rol
mov
push
inc
rol
jg
popl
or
inc
jb
xor
mov
je
ret
sar
xchg
mov
popf
mov
push
lods
sub
call
cmp
jae
xchg
jp
jge
mov
pop
pop
sbb
imul
scas
outsl
std
cld
push
in
mov
pop
ds
adc
pushf
add
sub
out
mov
jno
jecxz
fs
mov
and
in
cmpsb
insb
je
imul
jl
ds
jecxz
es
inc
xchg
arpl
cmp
cmp
je
mov
pop
jo
dec
icebp
out
and
push
cld
mov
insl
aad
cmp
dec
imul
cmp
jb
cmp
fstpt
xor
sbb
xchg
inc
or
push
pusha
cmpsb
pop
mov
out
cmpb
jbe
fisubrs
inc
cmp
fcoml
push
push
imul
jns
imul
aam
pop
and
jecxz
lret
inc
insb
push
cmp
add
or
popa
mov
out
mov
sub
imul
xlat
sub
cmc
jecxz
iret
fwait
jae
cli
outsb
stos
outsl
lret
popa
add
test
inc
push
xchg
mov
push
adc
fcoms
and
cmpsb
mov
addr16
outsl
ret
out
js
fsubp
cs
mov
adc
mov
ret
xor
dec
imul
cmp
and
add
cmp
aad
aad
popa
adc
fwait
in
loopne
add
jg
add
scas
ret
jecxz
stos
nop
jb
repz
js
divl
cld
insb
push
push
add
push
adc
push
into
std
orb
adcb
mov
add
daa
and
sbb
push
ja
jne
in
cmp
dec
xchg
cmp
shlb
leave
push
and
xchg
sub
fildl
cltd
test
cs
std
je
dec
mov
orb
cmp
jns
gs
push
dec
in
sub
rcll
sbbb
inc
cmp
mov
aas
in
hlt
jle
dec
mov
push
jmp
push
push
xor
xor
pop
cmpsb
pop
sahf
enter
cmp
lods
sub
jne
scas
nop
sub
out
lcall
push
data16
jl
jmp
xchg
nop
mov
les
fs
sarb
dec
popa
out
jecxz
imul
xlat
cmp
scas
lret
push
mov
es
shl
mov
mov
inc
dec
movsl
out
arpl
sub
cs
xchg
iret
cs
inc
test
sub
je
rcl
lcall
dec
xor
fnstsw
fcompl
icebp
jnp
je
sub
add
jb
loop
decb
imul
sbb
rcrl
inc
add
ret
rdmsr
sbb
or
sub
or
fsubp
cmp
push
es
fld1
xor
fldl
jae
mov
test
or
sbb
lahf
into
dec
mov
pop
popa
cmpsl
sub
popf
sbb
dec
je
test
pop
and
or
je
jl
mov
subl
adc
mov
xchg
jbe
jp
repz
stc
cs
xchg
inc
bound
in
out
outsb
rol
movsl
bound
out
xchg
into
add
fidivrl
pop
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
movsb
adc
jg
add
cmp
jmp
ja
sbbl
mov
mov
or
fists
sbb
nop
jns
cs
movsb
mov
pop
xchg
mov
bound
jle
add
cmp
ljmp
arpl
push
ss
rolb
ret
push
mul
lret
jmp
popf
ljmp
test
fcmovbe
dec
out
adc
iret
popf
and
in
repz
inc
add
orb
or
rorb
xchg
xlat
or
push
sarl
enter
js
call
aad
inc
inc
dec
fisttps
pop
sub
cli
stos
pop
hlt
in
push
addr16
cmp
es
lcall
or
push
inc
jmp
xchg
je
stos
cmp
xchg
push
daa
imul
adc
scas
adc
mov
mov
hlt
pop
in
adc
pop
leave
mov
jle
in
or
or
dec
lea
push
mov
js
sub
jge
fs
mov
cmp
mov
lods
fmul
loop
test
xor
sbb
fs
ds
pop
mov
clc
xor
push
xchg
sti
xchg
dec
cmpsb
arpl
fmuls
xor
xor
push
mov
repnz
and
xchg
mov
jns
clc
imul
push
loop
jo
sub
mov
in
test
test
mov
ret
in
in
sbb
mov
ljmp
ljmp
cmpsl
sbb
pop
mov
out
dec
ret
iret
jb
lret
xchg
or
and
xor
adc
faddl
inc
fstpl
lret
mov
jne
iret
mov
ja
dec
ja
rclb
loop
popa
clc
repnz
pop
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
ljmp
adc
push
aaa
jg
jnp
js
xor
pushf
inc
push
decl
and
sarl
repnz
mov
out
jne
mov
cmp
ljmp
mov
rcrb
stos
lods
add
push
mov
xchg
add
jmp
add
loopne
repz
cmc
addb
scas
out
fucomp
in
jo
pop
xor
cmp
out
xor
fdivrp
inc
sbb
adc
sarl
imul
sahf
add
lods
and
xor
scas
mov
xchg
dec
push
rep
repz
bound
or
or
cs
lcall
adc
lea
inc
ficomps
push
inc
test
and
movsb
out
frstor
sub
fnstsw
test
out
sbb
dec
adc
out
nop
js
jl
sub
sti
cmp
xor
or
cmp
ret
add
or
mov
push
mov
nop
pop
jl
xchg
cmp
xlat
cwtl
push
ljmp
aam
jge
xchg
std
mov
push
shlb
sub
cwtl
loope
xchg
sbb
xchg
mov
in
cmpsl
and
popf
das
xchg
fwait
add
xlat
cmc
jmp
in
lods
and
cmp
xchg
dec
jge
sub
adc
outsb
push
sub
inc
fiadds
out
cmpsl
mov
push
add
popf
ds
movsb
dec
push
add
lea
dec
nop
xchg
push
mov
iret
xor
pop
pop
mov
outsb
out
mov
popa
jecxz
enter
aaa
dec
sub
lahf
fisubs
clc
mov
push
mov
fiadds
dec
sub
mov
sub
jg
mov
push
push
das
js
sub
xchg
pop
inc
mov
je
paddusb
mov
xor
xchg
dec
sbb
and
fld
jae
adc
push
andl
mov
xor
adc
mov
adc
mov
outsl
mov
sub
incl
addl
push
enter
stc
fs
clc
and
and
lods
fdivrl
lds
and
sahf
jbe
repnz
repnz
jmp
pushl
inc
mov
jns
orb
push
loopne
push
jo
pop
aaa
adc
lcallw
xchg
jecxz
xor
mov
jbe
or
mov
xchg
pop
iret
adc
dec
aas
mov
repnz
les
jnp
sbb
inc
fwait
test
mov
cmp
imul
push
adc
pop
pop
push
mov
nop
jno
gs
push
push
or
shll
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
ss
jg
jnp
js
aas
xchg
popf
pop
lahf
popf
sub
aas
pop
roll
adc
cmpsb
xchg
xor
lret
mov
xor
pop
imul
pop
fidivrs
sub
mov
jg
jecxz
inc
out
pushl
ss
ret
sub
loop
aam
xchg
or
cmp
pop
bound
mov
inc
js
pop
std
and
scas
popa
push
ret
dec
mov
int3
hlt
cmc
sbb
dec
faddp
mov
leave
xchg
xor
xor
es
lcall
push
add
leave
jecxz
pop
mov
add
sbb
xchg
sub
mul
dec
fldl
xor
cmp
xor
lcall
dec
test
mov
sub
inc
shl
loopne
scas
and
xor
lcall
xchg
popa
and
in
nop
mov
mov
xchg
sti
jae
dec
arpl
push
xchg
movsb
popf
inc
adc
jge
jns
fwait
imulb
test
xadd
cmp
fidivl
jnp
cs
subb
sahf
out
lahf
scas
push
pop
jecxz
cmp
and
cs
and
nop
cld
sub
loope
push
jns
cmpb
sbb
arpl
popa
and
mov
xchg
fidivl
xchg
push
movb
add
xor
push
pcmpgtb
stos
xchg
stos
addr16
sbb
pop
xchg
rcll
and
pop
stc
cli
lret
iret
cli
push
rcr
fnsave
adc
sbb
inc
mov
test
iret
clc
push
dec
or
in
or
clc
fidivl
jge
in
aam
js
movsl
push
fwait
mov
ret
pop
jecxz
push
inc
popa
dec
into
cs
or
add
decl
xchg
lcall
lret
xchg
into
jmp
jo
mov
cmp
les
pop
rcrb
sbb
adc
je
das
pop
push
push
scas
pushf
mov
shll
je
sbb
leave
cs
fdivrs
fidivrs
outsb
adc
sahf
mov
dec
sub
sbb
test
scas
sbb
pop
in
xor
and
dec
fbstp
jle
jl
xchg
lahf
cmpsl
add
sbb
sub
lods
lods
in
in
pop
sbb
and
or
jle
lret
mov
cmpsb
mov
mov
sbb
out
in
mov
sub
xchg
fidivs
mov
aam
add
sahf
adcb
sbb
fsubrl
mov
xchg
mov
jp
push
cmpsb
out
push
jmp
mov
stos
mov
or
pusha
rclb
mov
push
imul
out
cld
sbb
dec
dec
iret
mov
dec
adc
pop
ja
pushw
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
push
jne
adc
jg
jnp
js
ds
in
mov
out
xchg
mov
adc
dec
push
shlb
push
cmp
leave
mov
cmpsl
mov
test
int3
stos
idivb
inc
cmp
stos
dec
jns
test
adcl
out
push
mov
call
mov
lret
mov
dec
aad
arpl
leave
and
mov
push
lds
std
or
mov
xor
fs
lea
pop
and
add
fsubs
mov
nop
pop
in
outsb
jg
dec
leave
test
pusha
in
inc
xchg
xor
lret
or
cwtl
test
sub
cmp
jle
jg
out
push
enter
ja
rcrb
in
out
and
aaa
daa
sahf
pop
inc
xor
les
inc
mov
adc
rcrl
mov
fbld
inc
mov
cli
sub
adc
sahf
mov
aas
sti
ficoml
xor
jp
inc
sub
loopne
out
mov
or
das
pop
jns
and
fbld
mov
fcomps
fldenv
jae
and
push
xchg
call
add
adc
mov
pop
mov
mov
lods
cs
sub
add
gs
test
sub
fs
lret
jns
sbb
sub
sbb
or
scas
push
imul
fldl
dec
jg
arpl
mov
fimuls
stos
pop
mov
icebp
outsb
int
scas
cmp
mov
mov
sub
inc
bound
xor
sbb
out
adc
push
daa
out
out
jmp
jb
sbb
sar
iret
std
mov
push
out
ret
loopne
daa
stos
and
push
mov
std
std
sub
jnp
gs
imul
adc
scas
fwait
push
xchg
pop
pop
notb
xchg
jo
cmp
sbb
push
insb
call
xchg
fxch
sub
lahf
add
xchg
stos
push
das
roll
fstpt
xchg
repnz
fcomip
cmp
sub
pop
mov
xchg
push
mov
and
xor
stos
mov
icebp
int3
sub
inc
add
testb
sbb
jbe
icebp
movsl
sarl
xchg
push
mov
mov
mov
ficoms
test
jmp
jp
negl
repz
cmp
shlb
or
dec
popa
inc
nop
ja
push
repz
push
cwtl
mov
in
and
pop
adc
out
xor
mov
push
stc
and
push
jb
shrl
decl
jne
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
and
js
jle
js
lock
je
dec
ud1
dec
fldl
sbb
mov
push
rol
sbb
cmpsb
push
in
mov
pop
movsl
cmpsb
sub
pop
shll
cmpsb
cmp
dec
sub
shlb
cltd
pop
sbb
push
add
movsb
iret
test
or
loop
insl
psrld
sbb
push
call
mov
das
push
inc
js
inc
mov
pop
rolb
leave
mov
lods
les
andl
pop
push
sahf
adc
hlt
xchg
adc
xor
mov
loopne
xchg
pop
dec
lods
and
mov
pop
fldl
inc
and
push
fidivl
rcll
pop
ds
adc
adc
insb
out
fs
push
sub
push
cli
dec
jno
aam
pop
pop
mov
enter
leave
mov
dec
sahf
stos
orb
in
ljmp
scas
mov
and
inc
add
test
jle
mov
das
dec
dec
shlb
ja
andb
fsqrt
add
ds
je
es
in
jmp
insl
aam
hlt
mov
aad
push
pop
lret
and
ret
dec
sahf
xlat
sub
adc
mov
adc
je
mov
inc
push
popw
xor
cmp
pop
or
movsb
in
mov
mov
cmp
cmp
imul
and
push
mov
xor
mov
and
and
fcomip
push
fidivl
sub
stos
shrb
setb
sbb
inc
movsb
or
sub
mov
sahf
jmp
push
sbb
cli
out
mov
adc
mov
cmp
cmp
jno
rcll
push
decl
jae
add
cmp
pop
mov
mov
ficompl
rclb
dec
in
pop
jo
push
push
repz
int3
dec
and
dec
sti
aaa
mov
sub
in
sbb
mov
addr16
js
shr
mov
xchg
imul
fisttpll
aaa
pop
cmc
or
sub
cwtl
lods
fdivl
dec
dec
jge
sub
insb
ljmp
jns
mov
or
notb
call
mov
jge
and
fadds
inc
inc
mov
mov
and
rcrb
mov
or
leave
rcr
fdivr
scas
mov
out
dec
loop
push
xor
cmp
xchg
mov
jbe
ljmp
lcall
and
test
sbb
pop
push
repz
movsl
ret
add
push
mov
clc
mov
jbe
cmpsl
dec
cwtl
mov
mov
xor
jg
bound
xchg
fs
xor
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
mov
ret
dec
adc
jg
jnp
js
push
loope
cmp
insl
inc
and
push
orl
cs
sbb
mov
mov
mov
int
push
loopne
inc
pcmpgtb
dec
ljmp
jl
inc
rclb
push
shrl
sub
adc
or
pop
inc
jg
addr16
lret
jg
and
and
movsb
mov
inc
lcall
mov
xlat
lret
xor
arpl
add
cmpsl
jl
out
cmp
cmpb
outsb
sub
sbb
movsl
js
mov
addl
loop
xor
mov
push
sub
imul
sbb
aam
pop
mov
mov
lsl
addl
leave
rorl
int3
cmp
cs
push
pop
sbb
pop
pop
out
or
out
decb
call
popa
push
imul
xchg
dec
icebp
sbb
imul
pop
jg
stos
nop
add
sbb
and
inc
in
aas
ds
sbb
mov
sbb
pop
pop
pop
shll
fwait
aaa
imul
daa
xor
push
aas
rol
or
adc
mov
repnz
inc
in
loope
movsl
mov
nop
sub
dec
jbe
inc
add
subl
pop
andl
insl
dec
insl
in
fdivs
mov
stos
jle
inc
loope
fsub
push
adc
daa
push
pop
add
and
jmp
popf
dec
adcb
sarl
shr
int3
fsubrs
aam
push
adc
xor
inc
cli
lods
mov
negl
push
nop
insl
mov
mov
repnz
in
imull
pusha
shlb
stos
xor
test
jecxz
jp
mov
sub
faddl
mov
pop
inc
jle
test
jnp
and
data16
mov
sti
jne
jo
std
into
fstpt
mov
insb
fs
mov
pop
xchg
mov
push
jge
cld
ficoml
mov
dec
dec
iret
mov
and
scas
and
lods
rcll
lcall
adc
arpl
inc
out
dec
jnp
cmp
jns
push
add
sub
adc
enter
sti
sub
lahf
push
sub
jb
test
aas
sbb
lods
bound
push
and
movsb
popl
jno
mov
inc
sub
jnp
out
es
and
jge
jnp
rolb
cmp
out
subl
jge
lret
push
inc
ret
xor
imull
daa
mov
cmp
iret
insb
adc
shrb
pushl
mov
jmp
lret
rol
leave
shll
or
leave
or
jle
js
cld
out
fistl
in
cmp
sbb
jecxz
xor
xchg
divb
inc
repz
or
pop
pop
lods
shl
mov
sbb
movsl
ss
jb
data16
push
mov
xchg
je
fs
out
and
push
stc
mov
xor
outsl
fwait
mov
loope
cmpsb
push
aad
inc
pop
jne
push
push
mov
dec
loope
add
sub
adc
orl
lret
fists
mov
mov
mov
mov
push
out
int3
insb
dec
js
xchg
push
xchg
jnp
out
je
dec
adc
xchg
mov
xchg
arpl
push
int
dec
mov
fimuls
pop
push
notb
js
jp
sub
cmp
inc
loop
or
sub
cmp
sbb
loope
pop
dec
mov
add
icebp
les
jge
mov
fsubr
cmp
push
ret
sahf
adc
pushl
push
mov
adc
clc
jbe
xor
inc
xchg
call
xchg
sub
sub
xor
jb
push
fwait
mov
lea
pop
je
sbb
xor
stos
jp
xlat
idivb
mov
xor
add
add
inc
add
in
adc
shrl
dec
push
xor
sbb
or
lahf
push
mov
call
loopne
fs
mov
lea
sub
bound
jl
loopne
dec
push
xor
test
rorb
xlat
imul
movsl
dec
mov
mov
cmp
inc
mov
push
insl
movsl
cmp
mov
lock
add
xor
sub
aaa
or
or
mov
xchg
add
es
push
repnz
mov
fsincos
dec
sbb
sti
int3
push
pusha
xchg
lods
pop
and
out
les
leave
push
iret
mov
xchg
cmp
outsb
icebp
sub
outsl
mov
jmp
std
in
lret
adc
lahf
sbb
pushf
movl
les
or
mov
outsb
out
inc
mov
subl
inc
jne
jecxz
inc
gs
fstl
cltd
rcrl
imul
dec
notl
loopne
lret
mov
inc
push
in
aad
test
lods
xchg
ljmp
jns
ds
cs
jl
popa
xlat
into
inc
inc
fstps
cmpsb
mov
jge
test
xor
pusha
cmp
test
test
inc
je
test
icebp
mov
or
mov
shlb
mov
test
add
add
mov
ljmp
enter
insl
jmp
push
inc
jne
push
notl
inc
push
inc
loopne
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
lds
adc
js
outsb
dec
push
inc
or
mov
call
cwtl
fdivrp
pusha
out
xor
popa
push
fwait
sub
ret
dec
addr16
pop
jnp
cmc
inc
cmp
xlat
push
mov
ja
push
insb
xor
gs
push
pop
stc
ret
fs
hlt
pushf
push
gs
cli
mov
shll
inc
and
inc
ud2
or
inc
sub
pusha
xor
xchg
lea
sbb
jns
push
adc
xor
cmpsl
inc
pop
sub
dec
loop
mov
and
cli
mov
adc
inc
xor
movsl
clc
jno
and
sbb
int
dec
and
lcall
and
roll
sbb
sbb
or
xchg
cld
sahf
rorb
dec
lcall
ja
xchg
out
cltd
push
fsubrl
lret
sub
lahf
orl
mov
rcrl
sub
aaa
imul
jbe
aas
jns
sub
and
adc
sti
bound
int
scas
or
sub
pop
inc
stos
jno
outsb
and
rcll
shlb
adc
xor
stos
nop
pop
pop
stos
rorb
addr16
and
xor
add
das
sub
dec
pop
cmpsl
sbb
test
lea
jg
out
or
inc
arpl
or
jnp
dec
pop
aam
mov
shr
or
aas
mov
xchg
jge
mov
stos
mov
jle
enter
subl
dec
xchg
add
aam
dec
jnp
shll
dec
hlt
sahf
iret
push
mov
inc
push
jnp
insl
mov
cmp
lods
cmpsb
adcl
adc
pop
dec
push
stos
dec
adc
inc
mov
inc
xchg
sub
adc
xorl
and
hlt
aam
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
xchg
lods
and
lret
jg
adc
js
icebp
mov
imul
sub
ret
pop
push
push
xlat
lcall
or
adc
adc
int
addr16
or
in
mov
mov
and
in
repz
ds
arpl
enter
sbb
mov
inc
xlat
push
mov
push
mov
fdivs
repz
push
lea
mov
mulb
cmp
jae
or
nop
fsubs
testl
mov
xchg
movsl
ljmp
fsubl
inc
pop
test
add
or
sbb
mov
lods
cwtl
jae
add
adc
push
push
fwait
cmp
lods
sbb
sar
sbb
lock
or
dec
xor
dec
pop
xchg
aaa
hlt
xlat
pop
ret
jae
xor
aaa
mov
jnp
mov
enter
lods
pop
fnstenv
jne
dec
xchg
cmp
test
mov
jo
inc
inc
movsl
cs
or
xchg
fistpll
xchg
inc
test
std
xor
orb
inc
test
jp
ss
ret
sbb
rcr
ds
lcall
cmp
pop
pop
jns
push
sbb
fwait
add
popf
pop
inc
sbb
dec
or
inc
sbb
faddp
lock
push
cmpsb
loop
mov
inc
push
mov
mov
pop
dec
negl
ljmp
in
inc
xchg
push
loope
inc
mov
scas
loop
jge
cmp
sbb
lock
je
sbb
mov
sbb
mov
in
sbb
fs
xchg
inc
outsl
dec
and
stos
jns
xor
xor
sbb
ss
jecxz
ss
jecxz
inc
rolb
jae
enter
and
adc
rol
cmovae
stos
sahf
jge
cs
movsl
arpl
mov
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
xor
cmp
jg
adc
js
pop
out
movsb
int
inc
push
ret
or
push
mov
dec
lret
dec
int
add
jnp
iret
or
cltd
mov
or
and
and
sub
xchg
into
add
imul
aam
hlt
mov
fwait
insl
pop
jnp
xor
stos
in
xor
and
cld
ret
test
ds
repnz
ljmp
mov
mov
shll
xchg
cld
or
std
sub
ljmp
mov
sahf
sub
adc
cltd
fsts
cmp
push
arpl
dec
cmpsb
shlb
pop
ficoml
xor
pop
pop
push
scas
jl
ds
divb
shrb
adc
movsl
js
mov
jle
popa
cmp
xchg
inc
mov
dec
dec
sub
jge
popf
imul
aad
outsl
sbb
xchg
add
mov
push
mov
sub
cmpsl
cld
fsubs
and
imul
push
dec
mov
ja
cld
sub
lret
scas
xchg
sbb
jp
mov
aaa
xchg
orb
mov
outsl
pop
fdivl
mov
and
lahf
sbb
nop
jo
pop
dec
mov
inc
mov
idivb
stc
int
fstl
ret
dec
scas
or
int
fisubrs
pop
sahf
jnp
imul
popaw
sbb
xchg
mov
test
std
xchg
ljmp
xorb
cmp
mov
scas
add
mov
mov
insb
jl
mov
fs
je
mov
push
jge
xchg
icebp
push
in
jp
mov
jbe
mov
mov
xchg
add
fmuls
popf
scas
sti
ds
inc
xchg
or
or
in
imul
inc
and
movsl
les
cmp
pushf
push
repnz
and
sub
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
and
mov
iret
jg
adc
js
shl
pop
or
xchg
inc
adc
or
cmp
and
xchg
jmp
fnstenv
lea
push
mov
cld
mov
sbb
add
and
rcrb
pop
aas
jns,pt
repnz
adc
add
cs
cli
movsl
lcall
xor
repz
adc
orl
popa
popf
sub
inc
mov
pop
dec
push
imul
add
bound
pop
aaa
ret
mov
das
pushf
pop
out
in
cli
cli
mov
int3
mov
data16
xchg
imul
insl
jecxz
outsl
inc
and
and
xor
jl
pop
mov
mov
inc
stc
or
lds
jp
jno
cmc
pop
in
mov
xchg
inc
in
fisubrs
push
cmpsl
out
add
fcmove
and
xchg
dec
push
ja
push
pop
or
fdivs
jb
push
ss
xor
pop
jg
xchg
movsb
outsb
cs
call
scas
rcll
jecxz
push
jno
cmc
or
mov
imull
out
ljmp
xchg
pop
lahf
mov
push
inc
mov
int3
pop
mov
mov
mov
pushf
mov
push
testl
sub
into
mov
insl
jne
test
in
dec
jle
or
adc
movq
int3
inc
adc
cmc
popf
icebp
fs
cmp
lcall
xchg
cmp
and
or
pop
add
mov
cli
jecxz
cmpsb
mov
dec
xchg
inc
mov
push
sbb
out
mov
xchg
push
jne
leave
jae
and
cmp
add
rcrb
notb
cmp
sub
xlat
ret
lods
es
jb
mov
and
mov
mov
xchg
pop
int
lcall
sarb
sbb
lret
push
mov
pop
pop
dec
adc
lods
xor
push
loope
pop
cmp
xor
mov
add
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
and
and
adc
js
popa
hlt
xor
inc
push
es
push
popa
loop
push
lahf
test
sub
jmp
andb
out
enter
adcl
jl
inc
cmp
fnsave
add
sahf
inc
popa
cmc
std
sbb
setp
lea
xor
adc
scas
cmpsl
pop
je
mov
dec
xchg
sub
nop
mov
sub
nop
cmp
sub
iret
popl
notb
sbb
mov
push
mov
pushf
adc
dec
inc
jge
arpl
fsts
testl
xor
fidivrs
mov
inc
cld
aaa
outsl
sbb
inc
cmp
push
ja
ret
xor
push
pop
xor
dec
dec
cmp
pop
test
dec
or
mov
iret
aam
xchg
cmc
mov
lcall
in
jnp
popa
jecxz
xchg
aam
fnstenv
rolb
push
xor
mov
jle
pushf
mov
lods
sub
or
inc
loop
adc
xchg
and
sarl
mov
cltd
out
push
sahf
loop
inc
subl
mov
mov
ffree
inc
aaa
icebp
pop
loopne
mov
push
adc
pop
cld
out
pop
dec
sbb
popa
inc
sub
mov
mov
push
into
jg
pop
movsl
pop
mov
ds
or
push
jbe
adc
fsubrs
test
jmp
arpl
test
insb
cli
jb
movsb
push
addr16
jg
out
in
mov
clc
imul
and
add
inc
pop
mov
bound
adcb
outsl
out
pop
pop
popf
clc
xchg
xor
cmc
adc
mov
cmp
sbb
xlat
add
mov
mov
inc
pop
stc
add
inc
mov
inc
inc
int3
scas
hlt
mov
add
ffreep
fwait
sbb
shlb
jge
lea
imul
jae
orb
xchg
push
add
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
xchg
pop
xchg
jle
js
sahf
arpl
popl
popa
les
mov
cmp
cmc
lea
adcb
repz
jns
pop
pop
inc
test
pop
or
lahf
mov
mov
mov
xor
dec
out
and
or
push
das
push
jnp
push
xchg
inc
popa
cmpsl
lcall
mov
adc
clc
push
pop
sub
sbb
out
dec
incl
push
add
jnp
sti
cmp
xor
inc
inc
push
aad
jb
jno
xchg
or
sbb
mov
int
or
cmpsb
add
pop
xchg
rep
xor
aad
fnstsw
xor
cld
adc
cmp
and
and
loopne
push
out
xchg
les
lret
outsb
shld
cmc
and
xchg
xor
sbb
cld
mov
lea
shll
or
lods
inc
pushf
fmull
je
or
cmp
aad
cld
xor
mov
mov
jno
test
inc
out
idivl
cmpsl
dec
fisubs
je,pn
xor
sub
xchg
xchg
imul
cmp
xchg
adc
jbe
scas
stc
mov
jge
fldl
mov
push
sbb
jg
dec
sahf
jecxz
push
sbb
pop
mov
rcr
inc
mov
scas
fidivl
mov
cli
xlat
xor
jg
lret
cmpsl
push
cli
fwait
shlb
cmp
push
es
sub
fisttps
add
cltd
idivb
xor
xchg
or
es
andb
push
xor
jp
xor
arpl
imul
push
leave
in
sub
lret
inc
stos
pop
inc
pop
pop
mov
or
fsubrp
pop
decl
mov
fs
inc
cmp
repz
sbb
or
shrb
adc
repz
lcall
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
push
inc
inc
cwtl
sarl
adc
js
dec
adc
out
or
xchg
sub
js
or
jmp
insl
aaa
sub
mov
mov
mov
sub
hlt
and
inc
rolb
fcmove
sbb
xchg
lods
fisubrs
hlt
ret
add
mov
repz
std
aas
pop
mov
iret
imul
test
mov
loop
cmp
sub
test
scas
inc
pop
stos
cmp
or
or
jbe
jmp
fcomps
pop
mov
test
daa
lret
or
jecxz
in
adc
mov
push
adc
mov
sub
in
or
xor
lds
addr16
addb
xchg
jbe
in
push
pop
xorl
lcall
mov
ja
pop
gs
pop
shlb
addr16
push
sub
ds
dec
fisttpll
sbb
call
xor
les
mov
mov
cmc
ret
mov
sti
push
nop
mov
lcall
cmp
and
cmp
loopne
jmp
or
int
cmp
pusha
lock
icebp
xchg
je
repz
mov
ficompl
repz
pop
lcall
mov
xchg
aaa
pop
fucomp
fucomi
lds
pop
pop
adc
mov
mov
mov
jge
sbb
inc
adc
sbb
xchg
cli
stos
dec
and
push
ja
xchg
push
stc
mov
push
jmp
jg
add
push
xchg
jmp
dec
lret
cmc
mov
add
sub
push
xchg
aad
das
sub
out
out
repz
rol
test
shlb
and
add
rcll
stc
gs
fs
and
lret
sahf
cmp
mov
icebp
cld
outsl
leave
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
rcr
or
mov
jg
adc
js
push
push
or
in
push
insl
stos
fcoml
mov
push
mov
dec
lea
pop
push
outsl
cmp
jle
sub
pop
add
xorb
or
cmpsb
add
lods
test
sbb
xor
mov
scas
test
mov
mov
push
shrb
adc
repz
xor
sar
push
cld
outsl
jmp
fiaddl
jno
xchg
popf
sarl
and
imul
fstpl
jp
mov
pop
dec
or
ret
arpl
test
mov
cmc
cli
icebp
mov
aas
negl
ss
add
iret
pusha
push
aad
sbb
pop
xor
into
out
xor
adc
sub
test
outsl
pop
pop
adc
and
out
test
fcomps
inc
pop
rclb
adc
push
repnz
clc
xchg
push
arpl
mov
jg
sbb
mov
adc
cmpsl
loop
fldt
das
loope
jne
xorb
out
cwtl
push
sbbb
add
aad
mov
sub
lock
test
fcomi
jmp
daa
fistps
mov
mov
outsl
and
bt
push
sub
mov
xchg
xchg
dec
sub
adc
dec
insl
jge
add
xor
mov
mov
imul
sbbb
and
sbb
add
popa
fs
scas
out
mov
std
scas
out
mov
and
push
jno
push
popa
mov
lds
icebp
fsub
pop
push
shll
and
jns
sub
sub
mov
pop
bound
add
dec
test
inc
or
out
cmp
dec
hlt
inc
push
jnp
imul
cmp
aaa
adc
and
ret
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
sbb
lock
dec
aad
js
jle
js
mov
adc
es
push
xchg
sti
push
data16
sti
dec
xor
lcall
stos
in
jp
lcall
inc
and
pop
inc
xchg
add
shrb
jnp
inc
fdivp
push
xchg
push
aas
stc
ljmp
loopne
jmp
rcrb
mov
cmp
mov
dec
movsb
in
or
cmc
adc
push
sub
iret
pop
test
pop
pop
cmpsl
ret
push
adcb
test
das
xchg
aam
jb
test
test
mov
pop
sbb
pop
sub
shlb
inc
jb
inc
xor
adc
dec
jns
push
mov
jmp
imul
mov
in
mov
inc
lret
pop
sahf
es
push
xchg
xlat
mov
add
je
sbb
sub
sar
stos
lock
mov
sub
dec
xor
js
insl
insb
mov
cwtl
movsl
push
mov
push
dec
adc
mov
stc
lret
out
xlat
mov
int3
jne
sti
fs
xchg
push
gs
jbe
jno
pop
mov
pop
lcall
dec
ret
jbe
xor
rolb
xchg
push
sbb
jge
and
xchg
xlat
pushf
adc
push
jl
dec
xchg
enter
daa
js
in
mov
mov
inc
xchg
sbb
jnp
cwtl
sub
mov
adc
mov
pop
cmp
dec
cmpsb
or
ret
push
sbb
test
add
pop
or
adc
bound
adc
std
lea
jns
cmp
mov
add
call
jb
lea
xlat
sbb
push
mov
adc
cltd
push
stc
cld
xor
test
add
xchg
pop
sbb
jmp
mov
xor
les
inc
les
cs
andl
and
inc
add
add
add
add
sarl
leave
cmp
pushf
mov
dec
pusha
fstpt
adc
js
daa
pop
std
stos
dec
into
mov
arpl
adc
sbb
stos
inc
adc
xchg
push
imulb
and
popf
mov
cmp
lahf
movsl
push
iret
fidivrl
pop
push
arpl
lahf
mov
es
ljmp
jns
cmp
mov
pop
addr16
popa
rcrb
xchg
sub
popf
test
sub
lods
sbb
stos
sbb
das
jnp
in
jno
xor
sbb
std
scas
or
in
and
and
inc
cmp
xchg
adc
xor
adc
dec
popa
pusha
pop
and
test
jo
mov
daa
mov
cmpsb
fbstp
call
out
fldcw
adc
sub
inc
pop
xor
dec
adc
ja
cmp
into
sub
xchg
jne
or
cmc
fldcw
sbb
sub
mov
lea
mov
paddusb
in
ret
pop
cs
inc
inc
daa
jmp
shll
js
xchg
lods
jno
mov
jnp
add
push
data16
sub
inc
sbb
nop
mov
enter
loopne
pop
mov
pop
or
lret
jmp
pop
ja
mov
xchg
xor
dec
jge
test
aas
sti
imul
sub
int3
mov
adc
ja
or
sbb
jl
push
cltd
xor
pop
or
sbb
mov
sbb
repnz
ljmp
jae
and
mov
mov
or
inc
iret
clc
fcmovbe
dec
xorl
sbb
sarb
jnp
jne
adc
mov
pop
lock
lahf
or
iret
out
jmp
mov
ss
jo
push
pushf
xor
and
shll
loop
mov
orb
sti
aas
sbb
stc
sbb
in
dec
iret
adc
jae
mov
in
mov
sbb
push
sub
insb
xchg
ja
pop
ds
push
xchg
loopne
in
lret
sub
jmp
ret
aas
fxch
rcr
mov
jmp
jg
adc
js
movl
push
addr16
jmp
sub
add
cmp
mov
clc
pop
jle
xchg
bound
pop
loop
inc
xchg
xchg
sub
je
scas
jge
loopne
dec
ffree
xchg
pop
jp
add
pushl
sbb
scas
dec
incb
inc
aas
pop
in
movsl
jb
repz
adcb
mov
push
mov
sub
xchg
test
pushf
mov
adc
nop
cmp
data16
aaa
cwtl
sbb
lahf
jno
int3
in
inc
test
cwtl
xorl
fs
nop
xor
adc
adcl
stos
ret
shlb
and
sarl
repnz
sub
lret
cmpsl
mov
aam
xchg
xchg
push
add
add
fldl
sbb
push
mov
and
shl
mov
mov
pop
int
dec
les
jns
icebp
ja
push
in
fistps
popf
scas
or
sbb
rcll
jmp
imul
lret
push
xchg
push
jne
lock
in
data16
cmc
loopne
jge
sahf
ja
outsb
dec
enter
jp
ss
into
push
test
sbb
jnp
sub
mov
dec
sbb
inc
aaa
roll
test
or
repnz
movsb
push
test
cmpsl
and
iret
lods
repz
pop
dec
loope
inc
dec
add
add
mov
outsl
xchg
cmp
mov
rorb
in
cmp
or
sarl
int3
aas
in
stc
fbstp
outsl
dec
es
push
cmpsb
and
jmp
jae
jl
negl
push
in
mov
and
mov
dec
jne
pusha
gs
or
das
add
mov
inc
jbe
xchg
aaa
mov
std
dec
sbb
pop
jns
rcll
push
les
sbb
data16
xor
rcrb
loop
xchg
nop
outsb
mov
sub
daa
in
xchg
jmp
int
int
fnstcw
pop
cli
xchg
fidivrs
adc
js
pushf
mov
xor
cmpl
xor
sti
inc
dec
jne
xchg
fsts
xor
sub
mov
bound
and
dec
push
imul
repnz
call
pusha
in
sti
mov
sub
xor
lahf
sbb
adc
xchg
add
fwait
pop
pop
inc
mov
cmp
leave
mov
andl
push
aaa
in
test
xchg
jg
cmp
push
and
xchg
mov
scas
hlt
sub
mov
addl
cmp
js
adc
add
leave
jecxz
lds
scas
call
add
xchg
shl
xor
jae
fidivs
sbb
loopne
iret
dec
gs
sub
mov
negb
scas
leave
daa
add
mov
data16
jne
aaa
sub
push
cltd
inc
addr16
push
jmp
pop
cltd
lcall
jnp
cli
add
dec
scas
and
dec
pusha
sub
mov
ljmp
int
fprem
je
imul
fisttpll
dec
lods
mov
push
xlat
ja
inc
lods
dec
xor
ret
nop
mov
repnz
mov
nop
jb
aam
notb
sub
xor
sub
push
mov
rorl
sahf
adc
stos
mov
inc
addr16
clc
insl
ljmp
pop
mov
setle
call
mov
sub
jle
jl
xorb
dec
mov
lahf
push
mov
sub
sbb
outsb
aaa
stc
rcll
jnp
jo
lds
xor
inc
add
push
inc
lahf
adc
push
aaa
inc
rol
dec
lcall
out
subl
push
jle
jg
ljmp
aas
mov
adc
mov
loope
adc
arpl
fimuls
mov
dec
inc
push
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
shrb
sub
jg
adc
js
xor
xor
mov
or
ret
rol
sub
int3
add
pop
std
mov
cli
pop
sub
xchg
add
xor
lds
stc
pushf
orb
mov
arpl
push
sbb
sti
mov
cmp
inc
jno
push
frstor
jl
clc
xor
pop
mov
inc
jae
or
shlb
popa
xor
add
sbb
das
jmp
lea
adc
orl
aam
jae
cmp
int3
imul
cmpsl
push
repz
sti
fs
jg
jp
mov
mov
scas
cmc
fistpll
insl
and
push
sarl
nop
pop
xor
dec
push
daa
rcrl
bound
clc
inc
mov
movsb
jge
mov
add
jno
sbb
jg
call
mov
int3
cmc
dec
xor
repnz
bound
sbb
outsl
les
pop
es
popa
xor
jge
ret
sub
ds
daa
sub
mov
aaa
xchg
xchg
je
lret
lods
jge
lahf
lods
jl
ja
in
push
lret
push
mov
stos
pop
cwtl
cmc
jno
shrl
inc
loop
rcrl
int3
sbb
test
cs
out
pop
mov
daa
jb
fmull
fadds
and
mov
and
inc
clc
or
or
adc
fildll
adc
push
dec
jb
xor
push
lock
xorb
fmulp
mov
rolb
fisttpll
int3
sbb
mov
je
jns
inc
nop
in
lret
loop
or
fs
inc
pop
sub
mov
cltd
cmpsl
push
popa
push
pop
mov
dec
jp
lock
pusha
int
iret
ret
xor
jge
dec
xchg
xor
out
in
fidivrs
repz
lods
inc
jns
cli
sub
mov
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
adc
scas
xchg
shl
js
jle
js
cmp
jne
rcll
inc
outsb
adc
mov
xor
xchg
xchg
mov
xorb
mov
pop
or
movsl
fisubrl
movsl
sub
xchg
sar
cmpsb
adc
bound
ja
pop
sahf
xchg
pop
sub
pop
xor
loop
xor
mov
mov
dec
out
xchg
sub
adc
arpl
mov
lea
mov
je
sbbb
sub
xor
aad
stos
inc
fwait
inc
js
psubq
enter
pop
pop
xchg
inc
fcmove
and
push
out
dec
pop
xchg
pop
movb
push
test
scas
adc
cmp
mov
pop
ds
pushf
adc
gs
inc
filds
sbb
insl
hlt
jg
stos
lcall
dec
pop
cmpsl
or
cmp
ror
aaa
jo
pop
incb
movsl
jle
push
pop
ljmp
out
pop
xchg
xor
adc
push
popa
jp
jns
test
inc
in
jnp
jns
mov
fsubl
jle
pop
jae
cli
dec
xchg
pop
push
or
xor
mov
out
movb
jae
jne
push
xlat
movsb
jg
call
mov
lock
cmpsl
cmpsb
andl
jecxz
mov
out
push
sarb
xchg
jbe
jne
sbb
rcll
or
or
or
ret
sar
stos
aaa
aas
bound
sub
and
sbb
movsb
mov
and
adc
mov
insb
gs
mov
out
ficoml
out
jecxz
test
push
jae
inc
rolb
leave
and
nop
inc
push
sarl
push
or
mov
xor
pushf
in
das
pop
lret
cmc
mov
mov
add
lods
das
dec
int
xor
xor
lcall
and
jmp
int
int
rcl
int
cmp
rorb
adc
js
std
push
pop
lahf
aad
fldl
pop
sbb
iret
sbb
call
in
lods
cli
dec
mov
mov
clc
pop
pop
popa
lcall
in
jl
jne
ret
out
pop
push
mov
std
repnz
pop
and
or
pusha
mov
pop
and
testl
adc
xchg
daa
lahf
or
out
jmp
pop
es
dec
int3
mov
lret
call
lods
xchg
rcrb
and
adc
test
jg
or
or
ss
aad
fchs
xchg
loopne
push
mov
clc
mov
sti
adc
stos
push
sti
inc
rclb
fisttpll
xchg
adc
xchg
repnz
scas
jns
and
pop
rol
xor
ja
call
jne
or
dec
aad
jp
sbb
arpl
mov
pushf
fcoml
ret
mov
stos
mov
jae
push
sbb
fdivs
test
enter
and
into
and
mov
jae
sub
push
inc
rcl
std
push
clc
js
mov
fwait
out
xor
loope
xchg
pop
pusha
pushf
sbb
vcvtsi2ssl
arpl
sub
cli
outsl
lds
sti
and
inc
inc
outsb
adc
or
cmpl
push
mov
std
adc
mov
mov
lret
nop
icebp
dec
test
xor
xlat
lods
data16
lcall
jnp
movsb
or
test
cs
or
hlt
std
fldt
movsl
xor
jo
pop
xor
ret
test
xlat
cmpsl
lret
mov
sub
pop
pop
call
pop
mov
ret
jnp
nop
mov
adc
gs
cmp
cmp
ljmp
call
mov
and
mov
add
inc
test
es
fstps
mov
insb
divl
ds
inc
or
cltd
jg
scas
add
add
add
lret
xlat
vpsubusw
lret
xor
push
cmp
out
js
jle
js
mov
add
inc
lcall
ret
and
repnz
insb
cwtl
int
add
adc
pop
dec
nop
leave
dec
mov
mov
adc
mov
insb
js
pop
sub
push
adc
dec
loopne
mov
pushf
jge
rorl
dec
xchg
mov
pop
test
jl
aas
out
push
js
in
jns
stc
xor
pop
push
jnp
mov
xchg
aaa
fiadds
adc
andb
incl
mov
data16
cld
mov
xchg
dec
arpl
ja
test
dec
dec
push
dec
outsl
add
jp
or
xchg
and
scas
dec
ds
jbe
repnz
jl
mov
aaa
adc
out
mov
out
andl
mov
mov
dec
nop
pop
mov
lahf
lods
rcrb
cmp
mov
scas
sbb
mov
in
mov
sbb
xlat
sbb
rol
data16
fisttpll
std
ljmp
lret
mov
or
jge
push
sbb
addb
xchg
push
dec
inc
mov
mov
xchg
or
inc
in
mov
rcr
std
adc
ljmp
enter
cmp
inc
push
fwait
xor
clc
and
pop
nop
push
mov
sub
mov
add
lret
sbb
pop
fistps
shlb
and
sarl
pushf
int
iret
or
xlat
sbb
or
pop
push
lret
cmpb
xchg
and
xor
ljmp
imul
sbb
cwtl
dec
test
dec
xor
fscale
cltd
stos
pop
int3
repz
adc
je
pop
mov
mov
sub
xchg
sahf
stos
push
ret
iret
inc
cmp
push
es
lods
std
mulb
push
xor
jmp
enter
iret
rcl
mov
xor
mov
jg
adc
js
pop
sbb
stos
mov
push
add
in
dec
pop
mov
insb
push
mov
shlb
shlb
sahf
push
xchg
jo
mov
cmp
mov
inc
pop
lret
call
mov
dec
lea
and
inc
xor
sub
jo
stc
shll
jg
aad
and
dec
lea
mov
test
push
cmp
inc
jbe
jno
mov
pop
in
lcall
cmp
pusha
imul
nop
add
mov
jne
mov
xorb
jl
clc
xchg
push
sub
pop
aad
pop
pop
int3
jl
frstor
pusha
add
mov
scas
rcl
xchg
jp
dec
xchg
imul
orb
jp
pop
xchg
fcoms
push
push
pop
and
loopne
hlt
dec
mov
xor
mov
and
jb
ja
xlat
or
dec
sti
adc
ficoml
xchg
lcall
push
push
cmp
push
xchg
pop
dec
sbb
mov
ja
cld
mov
repz
dec
inc
cmp
outsl
popf
pop
sub
insb
sbbl
push
mov
sti
mov
shl
loope
je
push
mov
pushf
sti
lahf
jb
mov
ja
or
enter
mov
push
out
repnz
mov
out
sub
ror
sti
lock
or
gs
and
sub
loope
fdivrl
push
out
add
mov
adc
das
iret
lods
addb
xchg
es
adc
adc
repz
cli
aaa
and
shrl
fcmovne
jae
into
dec
mov
in
test
adc
cli
dec
mov
ror
pop
es
push
mov
push
mov
fwait
ret
pop
bound
push
jmp
jnp
sub
push
dec
ret
shl
ret
add
and
call
xchg
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
mov
jg
adc
js
daa
hlt
or
movsl
data16
aaa
pop
adc
leave
outsb
mulb
mov
ret
sbb
into
cld
out
test
int3
dec
cmp
or
faddp
test
pop
xchg
aad
mov
sub
dec
repnz
or
push
push
push
push
xor
sti
nop
xchg
mov
jecxz
add
inc
rcl
in
inc
lahf
mov
add
cld
movsl
lret
pop
pop
clc
adcl
fsubr
xchg
popa
dec
movsb
lret
adcb
sub
sti
movsb
pushf
in
jl
mov
adc
ss
sarl
cld
ret
fsubl
ljmp
pop
xor
pop
push
dec
lock
fwait
lcall
inc
lahf
out
cmpsl
sub
inc
out
shrl
rolb
fs
mov
sub
mov
mov
outsb
pop
test
mov
divb
mov
ret
daa
shll
add
sbb
lahf
sbb
add
mov
das
mov
push
ljmp
movsl
inc
icebp
dec
inc
sbb
dec
shrb
outsl
dec
fldl
push
dec
push
std
mov
xor
clc
arpl
in
aas
repz
pop
xchg
dec
and
test
stos
stc
ss
loope
fwait
pop
rorl
or
ja
mov
mov
jg
dec
sub
pusha
mov
sub
in
push
push
inc
mov
inc
push
arpl
mov
shll
mov
mov
in
push
xchg
xchg
icebp
cmpb
sahf
test
xor
stc
sub
sbb
cltd
fdivrp
push
icebp
sbb
pop
xorb
and
inc
fidivrs
mov
or
xor
enter
xchg
mov
sti
push
stc
out
sub
cmp
shll
inc
mov
ss
les
adc
test
xor
shll
ljmp
push
pushf
das
jbe
pop
mov
mov
lods
sahf
lahf
fwait
pushf
mov
lock
mov
loope
mov
cwtl
jb
add
enter
hlt
decl
add
mov
mov
jmp
mov
xlat
movsb
inc
imul
mov
jle
js
cmpsl
xor
popw
lahf
arpl
cmp
idivb
adc
pop
lahf
out
cld
in
xchg
out
xlat
rolb
push
mov
scas
jbe
sub
insl
sar
pop
pop
inc
les
push
movsl
test
dec
add
js
push
mov
lock
lret
inc
je
jne
cmp
push
jmp
loopne
push
cmpsl
les
mov
dec
fwait
cld
xchg
ss
xor
mov
inc
fimull
mov
cmpb
pop
call
add
jns
sub
cwtl
inc
in
dec
mov
sub
jle
dec
fdivr
repz
sub
xorl
inc
test
jne
xchg
pop
ret
adc
jl
lods
pop
cmpsb
jmp
test
xor
in
dec
mov
cmp
pop
jb
xchg
add
mov
mov
pop
mov
jge
sbb
int3
stos
xlat
xchg
xchg
or
bound
xor
inc
push
pop
popa
lret
pop
cmp
nop
daa
mov
dec
clc
insb
stos
push
daa
popa
sbb
pop
lcall
fs
stc
repz
int3
adc
lahf
imul
dec
dec
test
and
dec
or
mov
notb
sub
xor
aad
and
outsb
out
ret
out
jno
fnsave
sbb
fmul
adc
push
and
pop
icebp
pop
pop
fstl
and
bound
and
daa
sub
call
jo
lret
loope
lahf
arpl
jno
sahf
ja
test
cmp
inc
xor
lods
lods
ds
pop
xchg
cmp
sbb
push
call
xchg
adc
xlat
data16
insl
xchg
push
cmp
data16
xchg
lods
sbb
pop
pop
dec
push
mov
pusha
xchg
sarb
out
or
inc
cli
dec
xlat
nop
aam
push
or
add
jmp
cmp
rol
jb
dec
pop
loope
pop
std
push
out
jg
adc
js
lret
scas
dec
mov
daa
iret
or
cmp
xor
xlat
pop
jae
inc
cmp
mov
mov
jge
mov
mov
sbb
inc
pop
sub
add
sub
dec
mov
loopne
sub
lret
call
xchg
mov
push
lds
pushf
mov
dec
test
xor
mov
sbb
leave
jge
lock
mov
or
in
testl
adcb
test
pop
jp
xlat
les
nopl
add
shlb
dec
mov
xchg
jb
insb
xchg
sub
out
fcomps
and
mov
fmul
push
or
dec
mov
cmc
dec
rorb
add
push
push
mov
hlt
push
jmp
out
and
pop
aam
int3
push
aam
arpl
xor
mov
imul
sbb
in
outsb
xor
pop
jmp
push
adc
les
fimuls
xor
mov
fs
sbb
sahf
push
fcmove
sub
or
fldlg2
jo
pushf
add
xchg
cmp
adc
mov
rcl
inc
pmullw
insb
bound
mov
stc
test
pop
or
imul
xchg
in
test
and
cmc
mov
arpl
es
push
ret
adc
aaa
outsl
cmc
xchg
cltd
sbb
sub
lods
adc
lcall
push
loopne
rol
push
adc
or
jae
insl
push
rorb
push
mov
fwait
xor
stos
lret
add
lds
inc
cltd
or
clc
lods
cmp
mov
adc
sti
sarb
jo
pop
mov
repnz
dec
dec
dec
gs
xchg
mov
push
xchg
cs
jle
lock
lret
enter
sub
iret
push
xor
aam
loope
pop
sahf
xor
inc
jmp
lret
jecxz
mov
jmp
rol
enter
lret
pop
jp
mov
push
jle
js
add
pushf
fwait
mov
or
test
fsubr
jecxz
push
arpl
cmp
inc
inc
add
pop
shl
add
xchg
arpl
popf
daa
aaa
sbb
das
jmp
je
pop
jbe
scas
cmp
ja
jl
lret
xor
movsl
dec
pop
jno
mov
daa
ss
sbb
mov
push
bound
lea
scas
into
inc
repnz
dec
mov
fwait
insl
lcall
and
mov
nop
movsl
adc
stc
or
add
xor
outsl
push
mov
mov
fimuls
mov
adcb
in
bound
sbb
sbb
popf
lods
das
das
cmp
and
imul
scas
data16
mov
or
int
int
add
cmp
dec
xor
out
test
adc
pop
push
test
fs
xor
jg
jge
mov
fisubrl
nop
jb
xorl
xchg
sbb
fsubs
lcall
pop
xor
or
push
pushf
insl
and
lds
iret
cmpsb
mov
andl
loope
icebp
sub
pop
jb
jno
sub
and
sub
mov
jnp
inc
sbbb
xor
int
in
pop
cmp
rorl
xlat
mov
push
icebp
das
es
dec
out
push
jl
cmpl
test
pop
cld
lret
xor
sahf
cmpsb
dec
mov
push
ret
gs
stos
sub
pusha
mov
dec
mov
cmp
mov
or
repz
ret
mov
xchg
or
sub
and
xlat
mov
aaa
call
data16
test
and
mov
outsl
fiadds
adc
scas
or
test
mov
and
fildll
into
jle
jle
lock
push
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
sbb
icebp
jg
adc
js
and
mov
or
cwtl
mov
push
xchg
ret
cs
or
or
jmp
test
outsl
add
movsl
loope
imul
dec
lcall
shll
pop
and
inc
sbb
scas
inc
lcall
jbe
sbb
insl
xchg
mov
shrl
mov
in
cld
test
jno
add
pushf
lock
lret
rcll
inc
mov
adc
std
lret
test
mov
sbb
insl
lock
dec
shrl
cltd
rcrb
xor
mov
das
lea
out
rcrl
test
dec
jecxz
jo
repz
scas
jne
inc
mov
loope
and
leave
in
loope
fsubrl
pop
sbb
mov
jbe
cwtl
insl
xchg
adc
mov
outsb
pusha
in
sbb
mov
jecxz
or
adc
push
lds
les
sti
repz
jmp
out
jl
or
sahf
insb
pop
roll
fdivl
sub
push
ret
jae
jne
insl
aam
mov
xor
pushf
lret
adc
les
sahf
cmp
cmp
aaa
shl
jno
iret
outsl
pop
or
ficompl
out
ljmp
mov
and
or
sarb
aad
lret
js
cld
mov
pop
xchg
sbb
mov
nop
lock
icebp
jnp
hlt
jbe
loop
shrl
xor
xor
js
pop
push
jmp
ret
push
cwtl
cli
imul
push
scas
scas
sub
jmp
loope
adc
pop
xlat
jnp
rcrl
jns
test
and
sub
inc
aam
sarb
push
dec
add
pop
bound
cmp
daa
dec
dec
ret
mov
outsl
or
sbb
push
push
adc
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
mov
idivl
adc
js
push
ds
shrl
cld
jb
sub
test
cmp
popa
orb
and
es
jp
pop
mov
ss
adc
add
shll
or
pushf
addr16
loopne
lcall
xor
pop
mov
jg
push
pop
mov
dec
lahf
jo
int
cmp
ds
jns
pop
adc
test
fimull
pop
es
andl
xor
gs
lret
cmp
push
lds
jp
mull
and
push
cmc
xor
dec
cmp
cmp
lock
sub
cmp
ds
pop
in
or
mov
dec
gs
pop
push
mov
lds
and
cltd
test
mov
pop
dec
fstps
repnz
imul
sbb
aam
clc
je
xor
xchg
int
leave
mov
sarb
leave
mov
pop
outsb
out
or
leave
sbb
arpl
xchg
sbb
or
lret
loopne
lods
jb
pop
xor
popa
aaa
sbb
nop
out
test
mov
repnz
aaa
inc
jae
dec
xor
data16
cld
insb
lods
pop
jmp
jmp
clc
andb
sub
sub
ja
cmp
xor
orl
inc
testl
xchg
inc
and
pop
nop
bound
mov
imul
dec
xor
or
fstps
pop
cmp
and
aad
shlb
hlt
daa
das
lock
xchg
jp
nop
imul
push
fistpl
push
clc
fsubr
pop
lock
sbb
popf
cmp
push
addb
sbb
inc
jno
out
sub
int
add
cmp
cltd
inc
jns
lods
aas
inc
fldt
nop
daa
add
fs
gs
cltd
cmpsl
aad
pop
jmp
into
iret
into
ror
aad
aad
mov
fiadds
adc
js
mov
out
sub
fisubrl
mov
outsl
hlt
mov
adc
jecxz
inc
jmp
add
aas
out
in
mov
enter
sbb
int
xor
xchg
push
add
push
mov
mov
push
call
push
sub
push
xor
xchg
fidivrs
sbb
jo
subl
pop
push
cmpsb
inc
enter
repnz
ss
jp
test
inc
lret
rcr
mov
sti
sbb
sub
scas
aaa
or
jl
in
push
push
and
pusha
mov
popa
sahf
cmp
add
dec
mov
pop
shrb
insb
push
sub
sbb
lret
sub
jecxz
fldl
or
mov
and
xchg
sub
pop
jp
loop
lret
daa
bound
push
xchg
or
mov
mov
xchg
push
or
sub
xor
mov
pop
push
das
cmp
scas
sarl
mov
lods
popf
add
cmpsb
sub
adc
pop
popf
lock
roll
inc
shl
push
jnp
div
inc
cmc
pop
pop
cmp
push
sub
pop
push
or
sti
pop
mov
js
cltd
shl
out
mov
dec
test
fadds
jb
cmp
in
cvtps2pd
adc
jns
mov
sahf
out
adc
mov
mov
dec
cmp
lds
push
leave
int3
inc
test
lcall
xorb
mov
sbb
sub
sti
test
add
mov
ja
xchg
inc
je
scas
mov
dec
cmp
in
fmull
mov
dec
fbld
lahf
add
inc
loop
in
inc
cmc
sbb
out
insb
fnstcw
lock
jno
ret
daa
cmpsl
lcall
es
movsl
ja
es
aas
js
mov
mov
adc
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
repz
sub
insl
cwtl
lret
popa
xchg
pushf
sbb
out
mov
pop
pop
clc
dec
mov
sbb
sbbb
xchg
jae
push
jge
sbb
test
push
ja
ret
mov
cmp
pop
mov
shll
xchg
mov
mov
xchg
pushf
addr16
push
in
shll
sti
rol
fdivr
shlb
dec
cmpsl
xchg
addb
inc
jmp
cmp
test
test
inc
sbb
aas
fcomip
jb
or
stos
in
mov
jae
shll
test
mov
adc
ss
popa
push
pushf
mov
push
pop
inc
xchg
lock
ret
xchg
sti
inc
bound
js
iret
dec
daa
jl
mov
adc
lahf
insb
push
int3
icebp
aaa
pushf
lods
leave
adc
pop
movsb
repz
inc
and
mov
dec
inc
mov
sub
daa
pop
lret
icebp
xlat
pop
cld
outsb
jb
sahf
adc
cli
fisttpl
jb
sbb
loop
cmp
cmpsb
jbe
dec
dec
ret
push
xchg
inc
jno
push
cmp
push
push
mov
call
sbb
ds
adc
ret
fldpi
xor
xchg
cmp
inc
mov
popf
into
orl
push
mov
adc
sub
fcmovne
jb
dec
shlb
push
adc
enter
push
mov
mov
pop
adc
fidivrl
std
lds
movsl
scas
fld
mov
cmpsb
outsl
stos
cmp
xor
scas
lds
xchg
add
dec
inc
imul
sbb
negb
or
dec
ss
or
adc
call
subl
sub
pop
repz
xchg
loope
cld
xorb
cmp
add
movlps
xor
sbb
mov
push
cs
ljmp
push
notl
mov
test
xor
mov
lods
dec
mov
dec
xchg
int3
mov
sbb
sub
test
jb
mov
cmp
test
push
inc
xchg
sbb
mov
lods
jmp
les
cmp
jbe
adc
popa
adc
sbb
push
sbb
cmp
test
and
loop
test
xor
lcall
pusha
mov
sbb
stos
test
fcomi
push
insl
movsl
call
cmpsl
mov
icebp
stos
rcrl
pop
out
pusha
jno
cmpsl
cwtl
je
ret
and
or
outsb
out
adc
dec
mov
jo
repnz
sbb
aaa
xor
pop
mov
or
jns
sbb
fwait
out
jg
inc
int
movl
sub
or
nop
pop
rcrb
mov
mov
repz
push
xchg
cmpsb
nop
add
out
cmpsl
les
pop
xor
rcll
push
mov
inc
nop
xor
outsb
addl
push
stc
adc
xorl
packsswb
sbb
jmp
inc
adc
mov
fcoms
call
xor
inc
push
std
addr16
mov
dec
inc
in
add
mov
fiaddl
cmpb
mov
sbb
cs
pop
cmp
loop
xor
dec
or
mov
sbb
daa
adc
jecxz
push
or
mov
sub
add
cs
std
add
and
out
inc
xchg
mov
push
xor
lods
cltd
push
arpl
xchg
fstps
int
xor
push
jnp
or
addb
sti
mov
movsl
out
popa
adcb
lds
lods
in
sahf
jbe
lds
mov
adc
push
inc
or
clc
movl
cvtps2pi
inc
mov
dec
lock
das
jp
push
adc
inc
ret
mov
sub
aam
adc
imul
adc
int3
orl
or
jl
divl
std
xchg
jnp
stos
clc
mov
nop
mov
frstor
jo
mov
call
jecxz
push
loopne
sahf
clc
fldcw
and
lock
sub
mov
inc
out
call
jbe
mov
pop
dec
pop
mov
js
dec
xor
mov
pop
sarb
add
add
pop
push
test
gs
or
mov
nop
enter
mov
adc
ds
mov
test
inc
imul
shl
mov
dec
mov
outsb
or
cli
inc
jbe
push
mulb
cmc
mov
rol
xor
xor
fistps
sub
xchg
pop
and
mov
sahf
push
push
sahf
bound
add
out
mov
cmp
or
pop
adc
lret
test
rclb
cmpsb
jo
push
cmp
dec
notl
mov
pop
mov
scas
insl
pop
or
aaa
xor
push
cmp
in
leave
js
or
dec
and
dec
mov
into
dec
icebp
nop
ret
inc
inc
and
xor
dec
xchg
and
inc
jmp
insb
xor
popa
push
sbb
cmc
inc
cmp
jl
icebp
and
push
xchg
dec
xor
in
dec
mov
into
jge
cld
scas
cmp
int3
lock
imul
dec
push
inc
aaa
mov
pop
dec
rorl
fwait
or
mov
mov
aad
stos
jmp
push
aad
pop
testl
shrb
outsl
cwtl
jb
xchg
sbb
inc
std
adc
inc
cmp
ljmp
pop
cs
jle
mov
xlat
inc
and
mov
fcompl
xor
add
dec
inc
pop
inc
pop
pop
shrb
mov
pop
push
addl
xchg
add
adc
out
push
xor
mov
and
dec
repz
int
jp
out
repz
popf
ja
pop
mov
sbb
lods
in
cmp
or
jo
xor
or
add
push
ljmp
enter
adc
cmpsl
mov
outsl
pop
fcmovu
test
jo
add
xchg
mov
rolb
push
jno
add
inc
mov
lds
repz
je
scas
test
cmp
movsl
jg
leave
cld
scas
jb
pop
mov
unpckhps
xchg
ret
out
mov
push
addr16
cmc
xchg
loopne
sub
mov
jecxz
inc
nop
mov
inc
in
js
sbb
lret
jp
int
push
outsb
iret
dec
fcompl
aam
out
jo
es
xchg
je
pop
in
fnstenv
lds
es
inc
and
jns
inc
iret
js
es
push
or
sbb
xlat
fdiv
push
push
add
lcall
sti
jg
fistl
cmp
jp
sbb
out
jmp
jne
cltd
push
test
lds
pop
negl
insl
fstp
push
clc
pushf
fwait
lret
push
rolb
cmp
mov
ljmp
lcall
sbb
add
adc
daa
mov
mov
jle
add
pop
inc
movsb
mov
jo
imul
inc
sbb
lret
mov
pop
mov
loopne
jg
lock
sub
mov
push
pop
cwtl
push
xlat
inc
je
xor
lret
pcmpgtb
mov
nopl
adc
addr16
addr16
xchg
jle
in
dec
outsb
mov
mov
cmp
jno
movsl
sub
shl
dec
leave
push
cmp
sbbb
setb
inc
fldcw
push
sbb
adc
insb
pushf
mov
rorl
add
in
adc
ljmp
hlt
mov
mov
push
loopne
das
icebp
bound
xor
or
stos
cmp
icebp
cmc
and
push
inc
xor
lret
push
dec
dec
push
cmp
lcall
roll
push
sbbl
jnp
out
mov
clc
dec
in
mov
lock
shl
xor
fldenv
add
and
sbb
popa
outsl
mov
inc
jno
sub
and
psubd
inc
mov
ss
push
mov
mov
test
les
xchg
adc
pop
sarb
incb
cmpsb
js
jecxz
mov
mov
cmp
push
lock
out
bound
loopne
xchg
pop
lea
into
lods
clc
movsb
outsl
ljmp
cmc
adc
pop
stc
xchg
sub
xor
dec
dec
jmp
outsb
fidivs
fstl
push
dec
or
insl
or
pop
hlt
cmpsl
aaa
fstpt
sti
repz
xchg
fs
and
outsl
sbb
xchg
popf
xor
outsl
fwait
xor
sti
add
test
adc
arpl
rorb
ret
pop
add
and
xor
movsb
in
subb
jnp
sahf
dec
fcomi
add
sahf
shrb
js
out
shll
push
rolb
inc
popl
mov
pop
in
pop
push
mov
adc
movsb
sub
cmpl
pop
js
and
js
mov
cmp
in
push
fucom
outsl
mov
or
sbbl
pop
jle
mov
lcall
adc
mov
adc
xchg
movsl
out
mov
mov
pop
push
add
adc
xchg
in
ret
cmp
outsl
out
fdivr
sahf
cwtl
sub
stos
sub
ficoms
scas
cmp
jns
pop
movsb
jno
test
sti
xchg
add
xchg
ret
aam
loop
fstpl
lea
mov
mov
bound
call
cmp
mov
cmp
repnz
mov
push
mov
sarb
pusha
pop
cmpb
xchg
jbe
adc
sarl
popf
ret
xor
hlt
xor
notb
aas
mov
push
dec
mov
outsb
pushf
push
loop
stc
push
mov
inc
jnp
add
and
and
adc
out
daa
addr16
or
dec
dec
pop
fmul
dec
jecxz
lds
push
jns
or
pushf
sbb
imul
test
gs
les
mov
std
dec
shlb
aad
imul
mov
ret
subb
aas
xor
sahf
cmp
shl
ja
pop
cmp
cmpl
testb
inc
lock
inc
lods
xor
gs
fucom
stos
in
jp
push
out
imul
and
jmp
das
adc
pop
cli
sbb
int3
mov
or
sbb
mov
mov
nop
or
sbb
mov
cs
dec
xchg
inc
lods
sbb
add
mov
cwtl
pop
cli
hlt
xchg
fwait
icebp
fwait
mov
or
fsubr
lahf
out
pop
sahf
pop
outsl
push
idivb
mov
mov
sbb
jne
jns
sbb
ret
ja
outsl
push
jbe
dec
cmp
in
shl
clc
imul
push
cmp
push
jbe
inc
jns
dec
lds
sub
js
mov
bound
data16
inc
outsl
mov
sbb
cmpsb
aas
cmp
movsb
ret
jmp
xchg
jno
jge
sbb
xchg
xor
rorl
or
adc
dec
dec
add
dec
pop
add
and
imul
adc
fwait
pop
hlt
jns
pop
mov
jnp
cmp
or
adc
push
inc
mov
lds
xlat
fidivrs
pop
add
pop
dec
dec
push
pop
push
pop
dec
mov
dec
push
mov
add
xchg
add
push
add
or
mov
sahf
inc
mov
sbb
cmp
adc
outsl
xor
cli
mov
mov
leave
das
sbb
mov
lcall
lods
fildll
push
jecxz
gs
movsl
cwtl
adc
sub
mov
enter
push
loop
insl
push
insl
ljmp
jo
add
jg
lods
dec
sbb
out
pusha
cmp
and
pop
push
popa
lods
dec
inc
jecxz
fcoml
cs
daa
push
pop
xchg
fildl
scas
push
roll
jle
xchg
or
stos
jns
dec
mov
loope
or
mov
jnp
push
sbb
aaa
mov
adc
pop
iret
nop
cmp
pop
dec
negb
and
rol
sbb
ja
movsb
jg
push
mov
pop
mov
xlat
adc
scas
fimull
aas
loop
pushf
mov
das
outsl
xchg
test
inc
ljmp
jl
outsl
popf
dec
test
sbb
jmp
cmp
mov
sub
or
xchg
movsl
int3
add
mov
mov
pop
mov
lahf
pop
idivl
ret
push
repz
fimull
push
dec
les
pop
mov
stos
inc
and
sti
iret
imul
dec
xchg
in
daa
aas
mov
nop
add
sarl
cwtd
pop
out
sahf
cwtl
ret
gs
jae
repnz
push
or
fists
dec
fwait
mov
les
stc
hlt
cld
fstp
and
mov
jns
aas
mov
adc
gs
stos
filds
cwtl
inc
cltd
mov
lcall
dec
pop
shrb
bound
repnz
mov
rcrl
hlt
jmp
shr
cmpsl
int
mov
aas
mov
xor
xor
nop
mov
xchg
stos
mov
call
and
jns
mov
arpl
pop
sbb
add
stc
repnz
adc
and
or
arpl
ficomps
add
movl
bound
inc
dec
int3
sub
sub
rclb
out
jg
sbb
bound
sbb
jge
fdivrl
xchg
jns
outsl
add
cltd
and
dec
outsl
pop
and
xchg
into
mov
adc
mov
sti
jnp
mov
imul
xchg
aas
add
lock
mov
scas
inc
lds
daa
aad
jge
dec
adc
std
testl
mov
or
cmp
insl
xor
shll
movsl
and
std
inc
lfs
cmp
cmp
mov
das
xor
inc
hlt
inc
cmp
cmp
xor
pop
mov
push
ret
inc
clc
inc
cmpsl
cmc
xor
cmpsb
push
mov
inc
adc
cmp
fwait
push
add
int3
and
mov
cs
and
ficoml
fwait
xchg
adc
jecxz
mov
repnz
repnz
rol
dec
das
mov
hlt
xchg
hlt
sbbb
int3
and
adc
push
pop
lods
xchg
pop
shl
subb
add
sbb
mov
push
jno
xchg
and
mov
mov
fnsave
xor
notl
xor
push
ret
sarl
xor
mov
sub
int3
je
in
and
loope
sahf
in
sti
inc
sub
mov
jecxz
pushf
jbe
ss
xor
or
stos
mov
mov
xor
outsl
mov
push
xchg
jo
js
and
lods
jge
test
adc
push
mov
test
jecxz
nop
ret
push
push
jl
push
cmpl
pop
jno
cmp
aaa
push
testb
fsub
push
cli
push
rcll
push
sub
push
ljmp
fwait
andb
add
call
movsb
ss
rclb
loope
inc
je
or
iret
shlb
iret
mov
jo
mov
mov
pop
or
addr16
cmp
pop
pop
addr16
sbb
xor
shl
push
loopne
adcl
out
and
stc
jbe
jns
dec
and
push
ss
add
and
fistpl
insb
cld
xchg
pop
xchg
repz
mov
mov
mov
imul
sahf
inc
data16
inc
xchg
inc
daa
dec
divl
test
push
or
ret
push
and
mov
cltd
pop
pop
repz
lret
jae
sub
sarl
mov
and
push
push
or
xchg
test
mov
lahf
xchg
xor
ljmp
ror
movsl
fwait
adc
jbe
jg
push
xchg
lods
lret
call
mov
arpl
lahf
ficoms
sbb
or
pop
cmp
mov
sbb
andl
popa
or
arpl
repz
xchg
pop
mov
mov
jle
int
pop
scas
iret
add
pop
cmp
jecxz
lods
xor
mov
or
rorl
movsl
stos
and
dec
push
mov
push
test
ret
or
in
cmp
or
adc
mov
cmp
xor
or
dec
jnp
scas
sbb
bound
arpl
fwait
idivl
xchg
jecxz
pop
filds
sti
xor
cld
xor
adc
or
pop
test
mov
mov
inc
push
aam
adcl
push
jnp
fwait
sbb
push
gs
leave
dec
cld
or
lods
sbb
sub
mov
fsubrs
leave
out
push
sti
mov
fsubp
lock
mov
jg
xchg
xor
daa
daa
inc
add
iret
test
xchg
das
add
lret
mov
insb
mov
cmp
ss
nop
insl
shrl
push
add
movb
and
into
xchg
pop
add
mov
aas
pop
int3
mov
xor
orb
test
bound
add
lds
cltd
rcll
lret
out
mov
dec
sbb
cwtl
xchg
adc
lcall
ss
add
pop
push
inc
dec
dec
pop
pop
push
sub
xchg
lods
mov
nop
add
xchg
add
pushf
mov
sub
and
das
fs
or
mov
in
jge
mov
pop
xlat
jle
mov
int3
add
fcmove
pop
mov
loop
jne
xchg
xchg
mov
xchg
data16
dec
cmp
or
push
pop
mov
gs
fnstsw
inc
inc
jne
sub
sahf
sbb
jecxz
xor
stos
inc
inc
lods
repz
adc
pop
jmp
pop
ror
hlt
enter
lcall
repz
loope
out
add
jge
dec
or
lock
je
jp
pop
call
jg
push
inc
push
xchg
call
mov
and
je
je
hlt
sub
mov
push
jmp
mulb
mov
fisttps
push
arpl
scas
pop
call
sub
xor
in
and
push
test
pop
jb
lcall
les
out
fisttpl
ja
push
mov
cmp
add
cmpsb
mov
inc
orb
mov
and
sub
cmp
fisubrs
mov
lods
aam
sbb
shl
xchg
inc
cmp
push
fcmovb
xor
sbb
sbbb
xchg
cmc
lret
call
mov
aam
subb
incb
mov
cmpsl
or
call
dec
inc
lahf
dec
or
repnz
out
dec
adcb
test
lds
mov
mov
sahf
mov
cld
mov
iret
dec
xor
loop
das
mov
mov
lods
js
outsb
dec
out
push
in
repz
mov
push
in
sbb
jae
sarl
jbe
addr16
repz
out
out
mov
mov
lret
imul
je
dec
xchg
adc
push
out
pop
fnstcw
push
inc
mov
mov
insb
dec
jb
test
incl
mov
mov
push
mov
ret
xchg
loope
repnz
cmp
and
pop
int
xlat
movsb
adc
inc
fsubl
push
test
mov
fistl
movsb
movsl
xor
out
adc
sub
sbb
clc
dec
sahf
lods
xlat
inc
cmp
jl
and
and
cwtl
repz
jg
adc
dec
xchg
test
and
mov
ss
push
dec
mov
dec
orb
stos
inc
jo
fcoml
xchg
pop
push
mov
cli
movd
enter
inc
mov
mov
cld
and
xor
repz
add
xchg
xchg
xchg
stc
adc
cli
and
pop
mov
push
mov
mov
adc
mov
jns
js
mov
loop
andb
data16
ret
sbb
arpl
dec
xchg
cwtl
jnp
adc
addr16
in
mov
in
sahf
xchg
push
mov
js
rcrl
jb
in
addb
dec
mov
cmc
dec
mov
gs
mov
mov
push
mov
sbb
mov
pop
lods
sub
sub
inc
insb
cmp
jne
xchg
inc
xchg
bound
cmp
mov
pop
sti
js
xor
sbb
adc
dec
test
ljmp
hlt
fisubrl
and
dec
stos
movsb
fbld
push
push
stc
cmpb
and
cmpb
cs
add
push
outsb
or
paddq
stos
pop
sub
shrl
pop
or
pop
int3
ss
mov
loopne
jo
sbb
sbb
jno
and
xchg
shlb
mov
rolb
in
cmpsl
cmp
mov
pop
fisttps
cmpsl
mov
pop
pop
cs
adc
push
and
scas
test
mov
lahf
cmpsb
and
pop
mov
daa
xchg
inc
cmc
outsl
in
and
inc
popl
and
cmp
notb
sbb
stc
bound
in
mov
es
push
mov
xchg
dec
sbb
cmpsb
fdivr
push
adc
cmp
fwait
fwait
push
sbb
push
dec
lahf
sbb
mov
xchg
dec
cltd
sar
loopne
popf
lea
pop
cmpsl
xlat
or
lret
cs
jne
inc
into
out
xor
fisubs
popf
sub
mov
lock
cmp
xchg
jle
cmp
mov
xor
mov
mov
pop
add
push
lods
stos
lcall
gs
push
rol
dec
push
adc
xor
loopne
fs
fstpt
sub
pop
lods
addr16
scas
sub
pop
adc
jp
mov
aam
push
pop
pop
mov
test
dec
cmp
pusha
js
xchg
mov
pop
dec
lret
cs
mov
push
xor
insl
or
push
lret
jbe
imul
stos
xchg
xorb
push
lcall
mov
jns
psubsb
add
xchg
popa
xchg
fs
sbbl
xchg
or
add
jg
and
xor
shrb
mov
cli
inc
adc
sbbb
sub
icebp
out
fisttpll
jp
sbb
enter
leave
aaa
int
pop
out
rorl
test
divb
shll
scas
movsl
inc
dec
ds
std
xlat
aaa
orb
add
jno
mov
mov
cltd
dec
in
cmpsb
aaa
or
xchg
push
pop
adc
repz
push
pusha
inc
dec
xchg
in
cmp
and
inc
test
fcoms
fiadds
nop
pop
mov
cmc
xor
cmpsl
inc
popf
shlb
xlat
sti
add
mov
movsb
xorl
and
mov
sub
mov
inc
jl
inc
arpl
insb
divl
and
call
sub
add
out
loope
sub
dec
pusha
inc
fwait
insb
xchg
sbb
pop
mov
movsl
call
sar
testl
dec
dec
dec
inc
dec
sub
ds
add
xchg
ja
test
enter
imul
int3
xchg
loopne
les
jbe
repnz
rcrb
fs
xor
jnp
inc
and
in
je
test
pop
jno
jns
xor
pop
sbb
mov
sub
das
lret
add
xor
out
xor
scas
add
mov
icebp
inc
hlt
sbb
sbb
push
cmpsb
inc
jb
hlt
ret
sbb
xor
shr
adc
push
fdiv
js
dec
sti
sbbb
stos
into
mov
dec
hlt
lret
jno
sub
push
adc
mov
mov
sbb
insl
push
movsl
call
sub
aam
pop
fisubrl
inc
mov
jbe
mov
in
xchg
mov
mov
jne
jne
mov
loope
pushf
repnz
pop
jne
or
inc
inc
popf
cmp
mov
push
push
xchg
jae
fidivs
hlt
jnp
push
xor
lods
adc
push
sbbb
push
add
stc
int3
test
scas
xchg
lret
inc
inc
cmp
cld
mov
cmp
mov
arpl
push
mov
cmp
hlt
outsl
data16
insl
and
popa
adc
roll
mov
xor
inc
pop
fimull
adc
icebp
fildll
mov
sub
lds
mov
adc
push
mov
sbb
jns
ja
dec
fs
pop
lock
add
repnz
or
int3
dec
call
or
mov
movsb
jne
jno
sbb
mov
jge
mov
and
jne
push
insb
pop
stc
lret
int
leave
pop
add
fxch
sub
cmpsb
insl
test
push
clc
lds
mov
and
aad
add
dec
inc
icebp
xchg
lahf
add
xchg
jo
stc
lcall
mov
gs
pop
sbb
mov
aas
xchg
fnstsw
data16
mov
scas
in
mov
push
sub
aas
push
stc
into
mov
xor
rcl
test
in
pusha
cmp
push
js
bound
in
data16
data16
or
or
mov
mov
mov
shll
cmpsb
dec
cs
sbb
sbb
je
push
ljmp
add
sbb
lods
pop
in
add
jg
or
xchg
aaa
mov
push
insl
mov
adc
fwait
inc
mov
jne
pop
jmp
mov
adc
sti
cmpsb
mov
ja
jae
cmpsl
mov
or
out
sbb
fdivrs
test
sbb
movsl
js
mov
jl
lods
daa
mov
subb
push
jnp
insb
loopne
rcll
sbb
adcb
xor
xor
rcrl
mov
loopne
xor
test
testl
pop
pop
mov
shlb
mulb
sbb
push
add
and
aam
sbb
ds
int3
mov
cmp
cmp
pop
das
out
push
mov
jmp
push
jp
and
pusha
addr16
jmp
movsl
sub
xor
ss
lcall
mov
lret
leave
cld
push
jp
test
call
bound
push
fnstsw
dec
enter
adc
sub
xchg
ret
jo
loopne
push
data16
mov
cmp
sbb
mov
jo
cmp
cmp
cmpsb
pop
fcmovne
mov
jg
dec
adc
mov
outsb
jno
shll
push
sbb
mov
jecxz
sar
adc
push
mov
xor
push
jmp
push
lret
jae,pn
rolb
adc
adc
imul
xchg
sub
fmulp
test
inc
into
fldt
gs
jmp
insl
fs
adc
daa
sarb
cli
into
mov
testb
mov
cmpsl
or
scas
xchg
xchg
jmp
leave
cwtl
ss
or
aam
add
or
cltd
mov
push
imul
pushf
lea
rcl
imul
movsl
ss
jge
push
mov
pop
test
sar
loop
out
push
cmp
shr
les
fs
push
push
pop
xor
nop
test
out
xchg
out
arpl
pop
notl
sahf
pop
jp
cmp
mov
aaa
movsl
push
mov
lcall
shll
cmp
xor
mov
fimuls
pusha
inc
aaa
outsl
aas
sahf
jnp
push
push
push
mov
mov
ds
mov
not
push
loope
add
stos
adc
xor
jle
loop
pop
xlat
or
sub
andb
xor
mov
in
in
fsubs
shlb
in
or
mov
in
adc
insl
or
fisubrs
repz
in
xchg
push
sbb
pop
mov
lds
xchg
lahf
sub
and
notl
shl
clc
sub
mov
fcoml
loopne
stc
mov
repz
cli
sub
out
add
jb
sti
pop
and
dec
xlat
ljmp
and
lret
pop
imul
push
adcb
fidivs
outsl
dec
enter
iret
add
mov
cmp
sbb
inc
lret
in
xlat
lret
dec
aas
repnz
dec
adc
mov
jg
mov
insb
cmp
movsb
inc
sub
pop
pop
xchg
pop
dec
xchg
pop
cmp
xchg
lret
gs
cmp
xchg
add
sti
mov
lock
movsl
pop
sub
movsl
stos
out
iret
cltd
add
fdivrl
lods
loopne
call
xchg
and
xorl
cli
jp
mov
adc
mov
sbb
push
in
outsl
mov
movsb
jge
ret
pop
imulb
stos
jmp
out
xor
out
mov
sub
sub
test
inc
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
popf
add
xchg
add
jl
fs
push
jge
mov
push
sub
ret
or
sbb
insb
in
jns
int3
pop
movsl
pop
mov
fmuls
mov
add
lea
sbb
in
mov
pop
les
ja
ja
fsubs
mov
mov
subb
jecxz
cmpsl
jnp
ljmp
cs
pusha
push
mov
pop
mov
mov
xchg
shr
vmwrite
jns
push
idivl
xor
and
movsl
sub
call
lea
hlt
pop
repz
push
in
rorl
ja
icebp
rorl
leave
dec
xorl
mov
xor
insl
fxch
sub
jbe
lahf
sar
and
xor
xor
pop
dec
js
jne
xorl
cs
mov
xchg
xchg
adc
sti
fstps
imul
push
sub
sti
pushf
fs
sub
mov
mov
sub
or
mov
pop
fmulp
push
xchg
pop
loopne
mov
mov
insl
add
or
repz
inc
out
test
stc
movsl
js
or
in
shlb
inc
sbb
push
in
loopne
shlb
xchg
jo
stos
mov
mov
sub
cmp
push
repz
mov
cmp
adc
out
data16
xchg
shlb
paddb
stc
push
xchg
dec
push
jmp
movsl
rcll
out
push
push
or
jl
mov
sbb
sbb
dec
sub
or
jmp
mov
cld
fs
inc
mov
mov
push
out
test
div
clc
fdivp
shlb
pop
in
sti
dec
testb
mov
dec
cmp
xor
or
dec
push
movsl
jmp
xchg
add
pop
and
in
mov
mov
insb
push
mov
repz
sub
cmp
push
stc
imul
inc
push
fbld
and
pusha
mov
arpl
imul
jmp
loopne
std
outsb
dec
pushf
xchg
les
pop
and
xor
loope
mov
ljmp
or
testb
mov
sub
sub
xorb
xchg
inc
sub
rclb
push
sbb
mov
pushf
insl
inc
fists
xchg
jmp
mov
leave
dec
adc
cmc
movsl
int3
pusha
inc
rcl
ret
inc
sbb
aas
sbb
aad
lcall
sbb
das
inc
shrb
loopne
loopne
enter
out
sub
or
lret
xchg
and
and
inc
sub
stc
imul
mov
pop
arpl
push
xchg
stos
inc
and
jle
test
sbb
xchg
jbe
push
and
imul
sahf
jno
data16
mov
inc
stc
sub
mov
mov
push
sub
stos
icebp
push
cmp
test
mov
fstp
test
adc
jne
les
sub
cmpsb
cmpsb
xchg
sbb
xchg
sbb
push
enter
jb
fs
mov
xor
adc
add
pop
add
es
push
mov
lock
out
push
push
stos
xorb
push
popf
jl
add
rcll
aad
add
inc
cmc
daa
jg
push
or
shlb
inc
arpl
cltd
fcmovbe
repz
mov
sub
insb
pop
leave
fs
pop
sbb
leave
imul
loopne
cmp
jmp
and
jbe
ret
dec
dec
or
pushl
inc
jae
xchg
ja
scas
adc
mov
cmp
lods
push
mov
lods
jbe
repnz
or
xor
sbb
cs
xchg
imul
fcmovbe
imul
test
imul
push
repnz
pushf
dec
fcmovnbe
ret
sub
hlt
hlt
cs
imull
xchg
mov
cvttps2pi
push
mov
imul
sub
fimuls
push
aam
pop
or
xchg
stos
xchg
jnp
or
sub
sub
loope
mov
sub
cmpb
mov
daa
and
mov
mov
xchg
repz
sub
mov
out
fimull
dec
xlat
out
sbb
sbb
je
adc
or
das
test
jl
orb
xchg
inc
mov
stos
fdivs
or
stos
ja
sbb
cwtl
les
pop
xchg
jae
mov
push
mov
faddl
jne
mov
xchg
jle
sbb
push
ror
cmp
pop
or
push
lea
sub
lahf
in
dec
stos
outsl
mov
cmpsl
sub
jmp
sbb
adc
adc
in
cwtl
jne
dec
sbb
or
nop
adc
sbb
mov
popf
pop
adc
cmp
jbe
jle
push
adc
add
std
xchg
jmp
mov
xor
pop
icebp
sbb
jno
dec
mov
out
inc
adc
jae
pusha
cmp
mov
gs
cmpb
push
scas
int3
jne
call
jbe
mov
addr16
sbbl
pop
fldcw
insl
xchg
jl
divl
pop
mov
inc
jne
dec
ss
add
jecxz
mov
push
ljmp
test
mov
ret
dec
icebp
mov
clc
movsl
mov
fimuls
jns
pop
xchg
xor
pop
sahf
popf
jo
sbb
adc
xor
mov
pop
jbe
pop
bound
push
loopne
sbb
aas
sbb
inc
lcall
cmpsb
mov
stc
cltd
pop
icebp
xchg
sarb
or
and
leave
cld
adc
ljmp
sbb
mov
aam
add
lret
mov
inc
adc
mov
dec
inc
dec
push
pop
pop
push
inc
cmp
inc
je
add
xchg
add
add
lahf
adc
mov
lret
xchg
xchg
xor
add
mov
sbb
xchg
sub
scas
jne
repz
mov
orl
add
push
pop
outsb
inc
cltd
je
add
sub
xchg
inc
or
fdiv
shlb
mov
sub
andl
and
mov
fbld
lock
inc
pushf
and
mov
mov
cmp
sbb
rorb
sbb
dec
cmp
pushf
add
cmpsl
mov
and
jne
push
mov
shrl
das
popa
mov
pop
mov
outsb
mov
hlt
mov
jo
push
test
orb
and
icebp
mov
push
fdivrl
outsb
cmp
push
jbe
pusha
sarl
mov
jns
sbb
jne
sti
repnz
sbb
adc
sbb
inc
dec
rorl
mov
sub
into
xor
mov
into
mov
mov
cmp
cli
xchg
cli
js
jp
popf
enter
fwait
test
fxch
and
out
test
lahf
push
add
mov
pop
ret
sub
xchg
cli
xor
push
adc
adc
aas
lods
and
cli
inc
mov
mov
xorl
push
cli
adc
out
and
aad
xchg
add
ret
adc
xor
cld
mov
cltd
mov
push
rdmsr
fdivrs
jbe,pn
outsl
aam
cld
fisttpll
pop
decl
mov
out
mov
add
popa
jns
adc
repnz
rorb
and
into
push
js
fldl
fdivr
jl
out
push
fsubrs
ror
xlat
shlb
mov
std
jae
lock
push
mov
adc
push
jbe
repnz
movsb
neg
orl
add
enter
push
cld
sub
xchg
fbstp
cltd
sub
pusha
cmp
inc
mov
xchg
mov
rclb
xchg
hlt
and
pop
push
mov
jns
addr16
icebp
cld
adc
add
or
xor
jne
mov
mov
jae
sub
lds
in
jl
push
dec
sbb
mov
push
out
popa
in
arpl
jmp
outsb
adc
orl
sbb
sbb
test
movsl
int
out
pop
jno
xor
fiaddl
sbb
push
jo
cmpsl
push
popa
pop
scas
add
sbb
cmpsl
fwait
push
jle
dec
pop
sub
adc
test
mov
xor
inc
addr16
lret
jnp
and
test
sarl
popa
push
adc
xorl
insb
lds
std
sbb
icebp
mov
cs
cmpsl
mov
pusha
mov
pop
icebp
fcoms
test
or
sbb
cmpsb
mov
inc
rol
shrb
xorb
mov
aas
dec
jl
jp
into
stos
outsb
adcb
sbb
scas
adc
sub
sub
je
sub
xchg
stos
ret
nop
dec
mov
xchg
ja
pop
sti
in
add
ret
mov
inc
mov
sub
xor
dec
jae
push
notl
insl
xchg
dec
mov
loop
testl
out
notb
clc
aaa
insb
mov
inc
aaa
insb
mov
fstpt
push
sub
pop
test
mov
push
insl
pushf
xchg
push
fsubl
and
inc
ret
cmp
shll
mov
shlb
xchg
inc
data16
xor
in
jns
dec
dec
cmp
loop
mov
push
mov
icebp
and
loopne
sub
ss
lret
ret
or
push
jo
and
pushf
out
andb
jae
sbb
add
lods
insl
aam
cs
mov
fcmovu
test
ficoms
jmp
cmp
lods
es
inc
mov
inc
outsl
sarb
sbb
inc
cmp
sbb
mov
xchg
fs
mov
push
sbb
popf
aad
xorl
std
push
fsubl
bound
xchg
ss
pop
fwait
iret
push
xchg
and
cmpl
test
sbb
push
xlat
ret
jb
sub
xor
clc
sbb
and
loope
sbb
sub
pop
fdivl
dec
nop
idivb
filds
or
lret
mov
inc
inc
adc
inc
fimull
lret
dec
jns
rcrb
mov
cld
jp
out
lds
jle
ds
mov
mov
lock
mov
in
jl
or
sbb
pop
cmp
fmuls
mov
rcrl
sarl
lret
fcmovb
aas
mov
xchg
xor
out
sub
aaa
cmpsb
call
testb
fcmovnu
pop
jge
lock
mov
push
fstpt
in
push
xchg
sti
int3
sbb
xor
fs
pop
adc
repnz
xchg
das
insb
nop
repz
movsb
and
pop
or
lret
xchg
aam
jb
int
fucomi
hlt
shll
push
xchg
adc
mov
movsl
mov
push
loop
jo
pop
cmp
cld
int
cmc
cmpsl
psubw
dec
jo
inc
xchg
xchg
mov
add
mov
xorb
mov
push
mov
aad
out
imul
pop
and
in
shll
adc
ds
adc
andl
and
sahf
mov
outsl
adc
int3
inc
enter
mov
ret
mov
and
mov
push
icebp
xchg
inc
aas
lcall
inc
out
popa
mov
mov
data16
pushf
and
inc
sbb
repz
mov
enter
mov
jo
pop
imull
adc
mov
cli
mov
nop
sbb
mov
mov
popa
int
ja
adc
sbb
pop
cs
inc
jbe
pop
stos
jo
cli
sbb
insl
bnd
xchg
das
xorl
jns
add
push
inc
pop
pop
pop
pop
push
dec
mov
push
or
stos
add
xchg
add
cmp
call
add
outsb
loopne
std
or
fldl
adc
fmuls
jne
or
inc
lahf
push
cwtl
mov
mov
mov
sarb
xchg
add
or
and
adc
aam
iret
xchg
or
push
mov
xor
scas
mov
push
sbb
stos
dec
scas
and
cmpsl
or
sahf
xor
dec
ficompl
add
adc
cmp
imul
mov
popa
pop
cmc
lret
nop
mov
adc
faddp
pop
repnz
jecxz
or
sub
cmp
add
hlt
movsb
pop
in
adcl
push
out
inc
jbe
mov
out
pusha
js
pop
mov
test
cmp
pop
jp
mov
xchg
mov
jnp
sbb
sbb
or
xor
pop
clc
jns
outsl
leave
ficomps
aad
hlt
pop
add
outsb
xchg
cmp
xchg
mov
aas
xchg
sbbb
push
loopne
push
js
jecxz
pusha
into
out
xchg
es
push
pop
in
sarl
dec
mov
xchg
push
into
cltd
pop
xor
mov
daa
fcomps
adc
mov
repz
lods
bnd
adc
jb
cwtl
imul
or
std
std
ret
sbb
and
xor
pop
fldcw
leave
sub
lret
incb
xchg
cmp
movsb
push
mov
cld
fmulp
mov
fmuls
jmp
fidivrs
pop
adc
pop
lods
ja
cli
adc
cmp
mov
dec
into
push
in
test
enter
xor
jle
movsl
mov
stos
mov
fcom
lods
movsb
out
cwtl
in
test
cmp
test
mov
out
out
pop
rclb
pop
int
insb
les
xor
add
cs
mov
ret
pop
ds
sbb
push
jnp
gs
xlat
fiadds
jns,pt
mov
stc
je
sbb
adc
dec
clc
and
sbb
sub
lds
push
push
sub
pushl
mov
xor
cmp
mov
mov
sub
jge
out
scas
push
lods
push
jle
push
jno
icebp
xchg
mov
lods
or
xor
scas
repnz
gs
jno
jno
ds
push
lret
adc
add
stos
dec
in
push
push
aam
ss
pop
rcrl
or
jne
pop
jl
out
jmp
mulb
dec
int3
jg
lea
dec
push
popf
fstl
aam
insb
push
sub
xchg
scas
imul
lods
lods
aam
lods
std
adc
mov
std
daa
cmp
push
pop
loopne
push
lock
aaa
js
je
jmp
mov
sbb
bound
jnp
repz
pop
push
add
scas
xor
nop
sub
out
pop
cmc
mov
cmp
aad
mov
insb
xlat
add
out
xor
notb
imul
mov
lods
adc
inc
or
sbb
sub
add
aas
outsl
fs
mov
pop
pmulhw
ficoms
enter
lods
into
or
lcall
mov
mov
addr16
in
pop
or
es
out
fimull
sar
cli
stos
dec
mov
jns
adc
mov
add
insl
clc
int
sub
dec
xchg
dec
movsb
mov
sub
mov
mov
pop
addb
ficomps
add
add
iret
adc
stos
jno
aad
pop
mov
daa
sbb
mov
hlt
xor
enter
movzwl
or
loope
aas
and
imul
gs
aas
ret
sub
out
inc
and
cmp
pop
jl
pop
adc
sar
es
or
inc
mov
mov
push
lret
outsl
pop
push
lea
icebp
adc
and
and
lock
cld
pop
fs
or
cmp
into
inc
jp
mov
addr16
and
jge
sbb
jp
lcall
shr
clc
sbb
js
orb
cmpsl
nop
sarl
into
jge
mov
shl
xchg
adc
cli
int3
and
enter
xchg
test
mov
inc
and
sarl
loope
or
lea
inc
sub
cmp
aad
scas
shrb
aaa
push
xchg
xchg
cmp
jge
mov
cmp
inc
xor
mov
ljmp
inc
sbb
pop
cmc
popf
iret
daa
cs
jge
mov
in
aam
push
test
xchg
nop
mov
sub
xchg
mov
cmp
xor
nop
mov
push
sub
js
lds
cmp
pop
es
mov
outsl
lds
cmp
imul
in
or
andl
pop
bound
and
fdivrl
xor
sub
mov
mov
loope
lahf
and
data16
roll
and
call
in
jno
adc
ja
cmpsb
pop
lods
push
push
subb
and
mov
push
cltd
mov
push
mov
dec
mov
sar
mov
pop
rorb
xchg
pop
xchg
pop
sbb
arpl
lods
mov
jp
jo
dec
xchg
insl
lret
add
in
movsb
push
enter
outsb
nop
or
adc
fucomi
xor
imul
aaa
outsb
inc
push
bound
adc
sbb
data16
add
das
cs
lret
int
insb
ret
test
hlt
es
jl
test
add
iret
iret
mov
jmp
incl
clc
xor
add
in
aad
cmp
lcall
mov
aaa
test
aam
mov
mov
mov
xor
std
repz
mov
add
int
sbb
inc
repz
fyl2x
decb
mov
push
mov
adcb
mov
xor
leave
lods
mov
adc
xchg
add
inc
push
inc
push
push
push
outsl
pop
mov
cltd
xorb
add
mov
faddp
add
inc
xchg
inc
insl
iret
lahf
pop
pop
dec
pop
dec
bnd
inc
adc
in
mov
push
divl
cmp
loop
enter
cmp
pop
xor
stc
push
add
sub
jno
push
push
test
inc
xchg
inc
sub
ja
and
sbb
push
pop
mov
xlat
pop
xchg
and
add
and
outsl
mov
mov
flds
rorl
mov
inc
clc
cmp
mov
jnp
mov
pushl
inc
movsb
idivb
aam
out
pusha
add
xor
out
nop
popf
lds
leave
clc
xor
test
jge
je
and
xchg
out
lods
mov
mulb
jb
cld
pop
lret
add
xorb
and
frstor
repnz
fs
outsl
roll
cmp
cwtl
pushf
clc
pop
int3
pop
add
test
out
repnz
repnz
inc
incb
insl
sub
mov
pop
jmp
stos
mov
mov
jg
pop
leave
cmp
lea
loop
mov
push
mov
sub
stc
add
mov
loopne
xchg
xor
nop
call
popa
add
in
or
add
sbb
add
js
lcall
xlat
jecxz
enter
adc
pusha
lret
mov
in
cmp
fcmovbe
pop
and
pop
test
outsb
sbb
test
pop
aas
and
imul
lds
test
repz
scas
mov
cmpsl
dec
sti
jle
push
mov
mov
ljmpw
or
loope
pushf
xchg
lock
cld
inc
lds
add
dec
daa
outsl
movsl
xorl
rcr
mov
cmp
aam
xor
jl
dec
push
fistpl
enter
jmp
mov
and
in
aas
test
hlt
jbe
jb
mov
lcall
rorb
sarl
push
mov
aam
inc
mov
mov
leave
stos
dec
push
repz
fnstsw
add
inc
movsb
adc
sub
sbb
push
xor
outsb
sti
add
mov
test
adc
and
into
ljmp
inc
mov
push
in
shrb
int
stos
sti
mov
sub
and
xor
and
jae
push
fstpl
and
rcl
adc
push
ja
push
jae
ljmp
call
xor
mov
mov
push
mov
addr16
xchg
jecxz
mov
jno
pop
jge
push
imul
cwtl
aas
cmp
jecxz
shlb
call
push
fimuls
mov
outsl
mov
xchg
inc
sub
or
dec
jle
xchg
adc
es
mov
lret
mov
loopne
cltd
add
sub
jg
jne
adc
adc
mov
lock
in
push
cwtl
lds
adc
xorl
movsl
scas
add
inc
mov
out
popf
test
cmp
push
stc
test
adcl
fucom
sub
jp
fiadds
lret
movhps
mov
jns
cmp
push
adc
ss
pop
in
fmull
adc
sti
push
mov
gs
sbb
int3
sbb
jo
pop
mov
pop
xor
stos
sub
aad
movsl
outsb
andb
mov
icebp
sub
pushl
js
sub
sub
push
or
or
loope
in
int
cmp
push
sub
mov
mov
mov
sub
cmp
loope
ds
push
jne
gs
outsb
push
pop
loope
sbb
mov
popa
mov
and
lahf
xchg
dec
addl
inc
dec
dec
shrb
fsts
loop
inc
mov
push
pop
into
sbb
jnp,pt
add
cmc
jmp
adc
ljmp
aas
or
ret
pop
mov
fdivs
enter
bound
xorl
pop
pop
ret
xchg
or
or
dec
divb
movb
adc
shr
jp
dec
pop
add
cltd
sub
scas
inc
out
pop
cmp
jns
jb
aas
in
mov
sub
cmp
cmpsl
cld
popf
fwait
jb
ljmp
jnp
adc
mov
mov
or
mov
jecxz
dec
sbb
int3
xchg
jl
pop
ret
mov
cmc
ror
jle
xchg
ljmp
test
mov
loop
out
and
fwait
push
xchg
aad
and
sbb
dec
hlt
fbstp
stos
out
fisttps
pop
arpl
mov
mov
in
cli
inc
lock
aam
pop
rcrb
mov
inc
mov
xchg
loope
lret
call
imul
xor
push
dec
fs
push
lret
cltd
lcall
or
dec
xchg
mov
js
dec
add
mov
jo
xchg
sbb
lahf
mov
push
leave
inc
ss
xchg
dec
dec
stos
ljmp
xor
out
out
ljmp
rep
jmp
pop
test
mov
lock
data16
pop
fs
push
xchg
mov
mov
scas
jle
pusha
stos
popf
popf
ja
mov
rclb
lds
dec
pop
mov
jl
inc
std
filds
lock
push
cwtl
repz
and
bound
stos
sub
jns
ja
or
xchg
xchg
pop
movsl
jl
cltd
decb
add
inc
btc
dec
data16
mov
adc
mov
dec
add
pop
or
and
xchg
scas
mov
mov
cmp
pop
pushf
xor
out
or
pop
adc
xor
jmp
fiaddl
outsl
fcompl
sarb
lods
enter
jnp
cmp
cmp
and
pop
outsl
int3
dec
sbb
pop
add
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
adc
int
push
mov
add
es
es
sbb
pop
cmp
das
mov
divb
jbe
jbe
pop
rcrl
mov
ljmp
and
repz
dec
outsl
movsl
in
cmpl
aaa
popa
lock
dec
dec
scas
rclb
or
mov
shlb
cmp
cltd
cs
jne
and
push
dec
test
cwtl
jns
mov
sub
add
mov
lods
xchg
insl
outsl
imul
scas
jle
fs
pop
popa
mov
push
pushf
add
add
lret
xor
out
xchg
cmp
int
rorb
movsl
and
pushf
push
daa
ret
pop
adc
popf
cmp
je
push
push
into
push
pusha
adc
fwait
adc
sbb
jns
sbb
int
adc
adc
popf
cmp
loope
call
mov
rclb
pop
outsb
sahf
cmpsl
inc
movsl
sti
mov
push
addr16
pop
in
loopne
sbb
mov
push
inc
jmp
push
cmc
fistpll
mov
out
jecxz
add
inc
lods
or
dec
xchg
stos
std
add
movsl
xchg
and
insl
sub
pop
sub
jecxz
out
fcomp
nop
fistps
pushf
pop
xchg
pop
in
sbb
into
cli
cmc
es
arpl
jg
scas
or
xchg
leave
adc
insl
pop
arpl
jo
cmpsl
and
push
mov
pop
jb
xchg
dec
lahf
adc
js
aam
je
xor
mov
scas
or
adc
jb
cmp
jb
cwtl
sub
inc
mov
mov
cld
flds
loopne
int3
xchg
inc
push
mov
cmp
cli
xor
xchg
cli
test
inc
mov
jg
xchg
insb
sbb
cld
mov
sub
adc
sub
es
ja
xor
mov
inc
mov
push
push
dec
xchg
mov
out
enter
sbb
rcll
mov
push
and
sub
rorb
push
js
rorl
jg
mov
lahf
das
inc
pop
pop
adc
out
add
mov
xchg
mov
xchg
jnp
sub
out
es
jle
jne
inc
push
rcrl
push
adc
icebp
push
rcrb
call
and
mov
sbb
test
dec
cltd
enter
pop
cmpl
jp
daa
pop
dec
jecxz
jle
add
in
das
pop
sub
aam
inc
xorb
inc
fstpl
adc
out
jle
sbb
retw
fsubl
mov
cmp
and
outsb
inc
stos
cmp
mov
dec
xlat
push
add
jnp
mov
aad
push
pop
pop
mov
inc
or
aad
loope
jl
int3
addr16
mov
fisttpll
cmp
mov
ljmp
adc
mov
outsb
jo
in
out
cmp
adc
pop
int
pusha
inc
jae
sbb
and
mov
mov
clc
dec
sti
xchg
sbbl
pop
stc
dec
adc
mov
lret
xchg
clc
xchg
jo
pop
mov
test
and
mov
addb
pop
inc
fs
jbe
rcll
imul
push
cs
mov
cmp
push
aad
inc
cmpsl
mov
rorl
sbb
xchg
pop
inc
aad
pushf
inc
dec
les
mov
flds
sbbl
lods
push
push
cltd
or
jmp
outsb
xchg
mov
shlb
push
push
add
lea
jno
cli
je
sbb
cltd
lahf
popa
mov
je
pop
inc
xorb
and
pop
fcmovbe
sbb
pop
mov
jmp
and
adc
call
fsubs
sahf
in
hlt
stos
pop
jle
popa
mov
out
in
test
xlat
data16
iret
leave
and
outsb
xor
jp
cltd
mov
imul
or
pop
int3
and
icebp
xor
push
call
inc
mov
jb
sbb
xchg
enter
adc
scas
jne
pop
mov
mov
out
sahf
in
loope
jnp
sub
mov
aam
cmp
adc
rorl
inc
jge
call
cltd
icebp
je
mov
add
aas
sub
or
ror
test
into
out
xchg
out
cltd
aaa
pop
adc
jbe
insb
loop
sub
adc
ds
cwtl
cmp
sub
int3
in
stos
dec
in
pop
push
add
les
and
xor
test
repz
jl
mov
ja
cmp
xchg
js
icebp
jmp
or
aam
jne
push
xchg
xor
mov
ret
push
jnp
dec
inc
cmpsl
adc
sub
push
ja
xchg
loopne
fdivs
fisubs
loop
push
movb
cmp
addr16
movsl
inc
cmpsl
ja
mov
pop
mov
xor
pop
sbb
mov
stos
iret
gs
daa
sbb
mov
inc
dec
movsb
subb
leave
mov
mov
pop
rcrb
cltd
dec
mov
mov
test
inc
addr16
call
fisubrs
sbb
cmp
sarb
pop
cmpsb
je
mov
or
cmp
addr16
out
int
cmp
ficomps
movsb
jb
mov
jno
daa
mov
push
sub
add
in
push
out
xchg
xorb
into
orl
fnstenv
or
mov
and
cmp
push
dec
das
mov
das
repz
enter
sub
jecxz
cwtl
leave
push
enter
inc
mov
clc
das
enter
ljmp
rcrb
imul
xchg
enter
add
aam
inc
jmp
mov
test
jp
cmpsl
dec
adc
popa
shl
insb
xchg
and
xchg
movsl
pop
pop
xchg
jge
ljmp
ljmp
addr16
mul
icebp
sti
fsubrl
add
push
dec
dec
push
pop
push
pop
dec
idivb
jns
int
das
mov
add
js
adc
push
sub
out
dec
jb
jb
test
icebp
mov
push
int3
stos
sbb
pop
outsb
push
shll
xchg
cmpsb
daa
pop
fs
std
mov
push
jp
mov
inc
repz
lretw
push
scas
test
sbb
imul
push
gs
pop
xchg
pop
scas
jae
xor
sbb
daa
cmpsl
rcr
imul
insl
mov
popw
and
aam
mov
lahf
js
and
std
push
scas
std
pop
push
mov
xchg
fldcw
loop
mov
mov
popa
arpl
imul
test
jo
adc
gs
repz
inc
cmp
xchg
ss
inc
outsl
lahf
adc
cmpsl
inc
sbb
aam
leave
mov
mov
pop
mov
push
xlat
dec
push
cld
push
imul
test
push
test
sahf
shlb
popl
mov
sub
cmp
lahf
xor
mov
shl
dec
hlt
sub
lret
arpl
testl
push
and
fimuls
cmpsb
or
hlt
mov
cmpsl
inc
mov
lret
push
pop
imul
jecxz
cld
xchg
add
fcmovnbe
sbb
dec
lret
test
xor
mov
cmp
mov
mov
cli
push
loopne
xorb
shl
dec
and
xchg
jge
daa
lods
and
bound
clc
mov
aaa
das
lds
test
int
mov
insl
adc
ds
xchg
pop
pop
mov
push
mov
mov
adc
mov
inc
shll
push
mov
lcall
int
outsb
fwait
cmp
andb
mov
adc
in
jb
mov
xchg
push
icebp
jne
jnp
inc
fbld
or
das
xchg
in
rcrl
or
xchg
sbb
cmp
add
out
jne
mov
daa
test
mov
sub
push
cmpsl
lahf
inc
imul
movl
test
push
adc
cli
mov
mov
cs
shrl
in
in
lds
fisttpll
pop
adc
mov
out
xor
cmpsl
add
out
int3
adc
lods
mov
arpl
fwait
mov
mov
or
andb
cwtl
stos
cmpsl
stos
adc
int
repz
dec
gs
stos
xor
xorl
or
jecxz
cld
xchg
mov
les
cwtl
movsl
in
pop
pop
shll
mov
lods
test
or
call
ss
cmp
jl
pop
je
cmp
xchg
addl
fcoml
test
and
push
sbb
push
sub
jg
je
xchg
js
movsl
inc
dec
dec
push
test
add
pop
mov
or
inc
mov
pushf
cmp
lods
sbb
pop
xchg
add
sar
push
pop
rclb
mov
mov
sbb
es
loop
ss
xchg
cmp
mov
xchg
pop
arpl
sbb
pop
je
jnp
clc
lret
scas
pop
or
jg
sbb
stos
cmp
insb
call
mov
and
fbld
cmp
into
loop
repnz
mov
lret
rcll
gs
sbb
jmp
and
cmp
sbb
data16
jbe
hlt
mov
popa
mov
dec
clc
adc
pop
ret
rclb
dec
jmp
sub
out
mov
loop
push
test
pusha
adc
frstor
insl
das
or
inc
in
mov
hlt
cltd
adc
fsubp
mov
xlat
adc
cltd
and
dec
pop
bound
gs
mov
push
sbb
div
sub
push
add
mov
lahf
xor
inc
and
add
loope
aas
inc
or
sub
andl
or
lock
push
rorb
stc
in
lds
ret
adc
or
das
rcrl
das
dec
mov
xor
cs
jmp
fnstcw
or
imul
or
mov
sbb
add
xchg
imul
push
icebp
fstpl
jbe
test
mov
sub
scas
das
cld
lret
xchg
stc
mov
test
pop
jmp
js
xchg
pop
or
out
in
push
xchg
pop
adc
jecxz
push
xchg
cmp
inc
lods
sahf
xchg
loopne
and
test
adc
sub
test
lahf
xchg
mov
les
stos
lahf
movsb
pushf
add
mov
pop
into
cmpsb
adc
lret
fildl
div
pop
jp
pop
cmpsb
inc
test
in
xor
test
cld
je
mov
push
jno
inc
mov
decb
fnstsw
je
hlt
push
inc
cmpsb
cmp
lret
push
sbb
jp
xor
ds
or
cmp
rolb
pop
insl
lea
cmp
shlb
pusha
outsb
cmpsb
fucomp
popf
jg
pushf
enter
xchg
movsl
inc
or
in
lock
jnp
mov
loope
scas
nop
mov
adc
es
or
icebp
rcrb
add
outsl
jmp
sbb
les
xor
icebp
cmp
rolb
or
adcb
in
push
sar
or
call
fldt
jle
inc
insb
jb
adc
and
adc
jae
cmp
lret
pusha
in
adc
bound
insl
push
mov
cmp
in
pop
pop
mov
fdivrl
cs
pop
aas
add
mov
fucomp
fidivl
rcrb
sbbb
test
adcb
rcll
push
outsl
dec
scas
push
out
popf
js
sub
rorb
xchg
sub
push
xchg
mov
mov
adc
stos
push
out
add
inc
mov
inc
mov
loope
repnz
jecxz
pop
lahf
mov
mov
mov
fisttpll
mov
mov
push
sub
repnz
sub
add
dec
push
dec
push
pop
pop
mov
out
dec
adc
add
xchg
add
inc
pop
enter
outsb
gs
hlt
adc
mov
out
test
imul
inc
nopl
gs
xchg
inc
pop
mov
popf
mov
addl
mov
cmp
cltd
orl
inc
vmaxsd
mov
adc
data16
push
in
jb
cmp
sbb
loope
ret
loop
scas
aad
movsl
jle
xchg
xor
stc
pop
ss
les
pop
inc
lods
sbb
lods
push
jmp
dec
sub
pop
stos
or
insb
jg
loop
lds
add
jl
xchg
into
push
or
push
lcall
in
icebp
and
add
ret
mov
imul
add
dec
lret
fwait
pop
mov
mov
xchg
mov
clc
xchg
sbb
cwtl
out
or
add
pusha
sbb
add
xchg
and
fcoml
ljmp
mov
or
mov
add
mov
pop
pusha
xchg
bound
fcoms
addl
jb
mov
push
outsl
mov
xor
flds
jge
pusha
cmp
mov
arpl
xor
inc
dec
adc
lods
mov
aam
flds
fucomp
imul
jnp
cmc
int
inc
ret
enter
push
lock
jp
cwtl
xchg
jns
push
inc
das
cmp
dec
les
cwtl
mov
out
nop
pop
sub
ljmp
aaa
adc
jp
movsl
popf
add
cmp
cmp
sub
mov
in
push
pop
mov
or
mov
mov
mov
imul
cwtl
hlt
insl
xchg
adc
or
pop
add
das
pop
lock
add
ret
incb
push
mov
inc
movlps
dec
sub
mov
popa
insl
iret
cmp
lret
mov
jae
mov
out
inc
pop
sbb
loopne
xor
idivl
mov
add
adc
dec
jo
mov
jle
dec
in
pop
mov
pop
push
sbb
les
mov
mov
adc
xchg
repnz
shrb
lahf
int3
test
xchg
push
dec
in
ss
jbe
mov
mov
inc
lret
pop
jbe
xchg
shrb
xor
and
inc
fwait
std
aaa
cmp
fistpll
jnp
or
lods
cmp
jmp
sub
jnp
and
push
das
int
gs
in
jmp
daa
aad
call
pop
aas
xchg
lret
adc
in
xor
or
popf
xor
outsb
pop
test
cmp
cmpl
pusha
outsl
lahf
rorb
mov
dec
xor
loop
pop
pop
cltd
into
jb
arpl
fstpt
cmp
aam
pop
jl
sahf
mov
xor
push
cmpsb
cmc
stos
push
in
test
xchg
xor
decl
cmp
pop
scas
ret
or
mov
push
shrb
enter
adc
adc
pop
mov
popf
cld
mov
jle
mov
les
aam
popa
pop
xor
push
cmpsl
stc
fsubs
loop
inc
adc
mov
std
push
jbe
xchg
xor
cmp
popa
imul
data16
shlb
pop
cmpsb
stos
add
pop
test
mov
dec
sahf
inc
insb
push
sbb
push
jno
mov
popa
movsl
fwait
sbb
aaa
imul
scas
shlb
mov
inc
ds
sbb
xorl
lea
pop
fistl
xor
jns
loop
xchg
lock
mov
cltd
fldt
dec
inc
inc
insl
ja
lahf
mov
pop
pop
fmul
popf
aam
in
push
sbb
mov
in
dec
push
mov
test
cwtl
jg
dec
cmp
out
cmp
fcomi
rcrl
inc
adc
into
test
xlat
jge
ss
andb
and
loop
add
dec
mov
cmp
sahf
jo
or
add
insl
and
cmp
jecxz
data16
imul
dec
addr16
sub
mov
push
inc
ret
mov
xchg
lock
or
jae
mov
fmull
inc
jge
jmp
xchg
cli
rcll
incl
cltd
sbb
leave
cmp
adc
cltd
sarb
inc
push
and
sub
xchg
jnp
lods
sub
clc
lcall
out
ret
mov
scas
sahf
mull
mov
xor
iret
mov
mov
mov
jb
data16
pop
sahf
sub
xchg
sti
fdivs
dec
orb
js
sbb
mov
mov
sbb
jecxz
push
outsl
lret
cmp
shlb
pop
xchg
call
idivl
jae
xchg
into
push
and
mov
and
ds
or
aas
add
sbb
sub
mov
inc
loope
test
jbe
mov
dec
mov
pusha
jne
pop
mov
cmp
popf
mov
fs
xchg
lds
sti
ja
mov
loop
cmp
xor
iret
mov
movsl
dec
stos
pusha
and
and
and
lret
xchg
add
movsl
jmp
mov
push
mov
xchg
test
dec
hlt
sub
sub
mov
cmp
cld
inc
ljmp
in
mov
add
ds
mov
mov
pop
ror
xor
movsl
sbb
and
pop
inc
aam
push
xor
lock
sub
push
pusha
xchg
sbb
mov
add
call
cli
mov
adc
insb
xchg
sub
aaa
iret
jae
xor
sub
mov
add
sub
int
gs
add
inc
push
push
push
push
push
inc
push
test
pop
stc
cwtl
lret
add
xchg
add
test
cld
push
pop
adcl
pop
xor
inc
mov
loop
test
push
lret
adc
inc
xor
lret
adc
xchg
int
dec
sub
pop
xchg
add
in
pop
stc
or
std
ja
pop
in
ljmp
jo
and
xor
aas
sbb
dec
popf
roll
push
pushw
xor
loope
lods
push
mov
lods
sub
movsl
mov
cld
int3
xor
das
das
or
iret
dec
jo
test
fstpl
adc
jecxz
outsl
push
adcl
or
cmp
mov
lock
inc
int
sbb
push
mov
out
ja
lret
sbb
pusha
in
ret
adcl
gs
and
cmp
sahf
push
jp
stos
or
ret
int
aad
repz
fstpt
mov
jo
lods
mov
ret
mov
xchg
sti
xchg
pusha
subb
in
leave
repz
lds
flds
scas
push
inc
subl
push
out
in
mov
rcll
jo
das
jae
jl
js
lods
out
fstpl
or
sbb
nop
pop
mov
insl
mov
cmc
addr16
ficoms
push
sub
sahf
mov
fsubs
leave
stos
mov
add
pop
int3
xchg
test
adc
mov
xchg
shl
int
jl
mov
mov
aaa
sub
xor
adc
insl
adc
insb
sub
push
mov
out
lock
xchg
pushf
das
mov
fnstsw
add
in
les
mov
or
mov
aaa
jmp
sbb
fnstsw
stos
sbbb
inc
push
jp
aaa
dec
and
fnstsw
fwait
lods
test
ja
mov
xor
loope
add
mov
push
push
add
jno
or
lds
cmc
fidivl
xchg
sahf
pop
hlt
mov
bound
adc
aam
xchg
sahf
and
cli
imul
jp
lds
movsl
xchg
xchg
mov
mov
jnp
shlb
cmp
mov
testl
sbb
int3
jle
filds
cmp
mov
sbb
jmp
pop
movsb
imul
daa
test
aam
pop
jbe
and
sbb
insb
push
into
xor
insb
jmp
cmp
cmp
mov
xchg
loop
xchg
leave
mov
shlb
bnd
and
imul
and
push
in
adc
push
cltd
stos
or
jl
inc
xor
sbb
and
mov
or
sbb
cli
movsb
inc
dec
dec
xor
test
dec
fcompl
pop
pop
lods
mov
push
lcall
fs
xchg
std
xlat
sub
ficomps
push
add
pop
sti
adc
pop
out
dec
dec
jo
cs
cltd
scas
or
push
sub
mov
aam
xor
mov
mov
lock
mov
pop
push
mov
xor
in
pop
sub
repnz
daa
and
arpl
daa
push
fistps
xchg
adc
enter
mov
push
jge
es
jae
push
cltd
cmp
jne
and
mov
test
clc
jp
mov
sub
cli
addr16
enter
out
jl
mov
ret
roll
or
loop
adc
out
push
sbb
xchg
fs
mov
xor
xor
adc
push
nop
out
pop
cmpb
fwait
popa
addr16
das
sbb
test
rcll
jl
iret
pushf
les
cli
fsubs
subb
inc
lret
aaa
arpl
je
test
not
je
jl
push
outsb
imul
dec
leave
adc
fisttps
inc
leave
and
jmp
scas
aas
scas
subb
sbb
jb
fs
push
xchg
mov
cmp
adc
xchg
in
repz
push
sti
xchg
sub
mov
inc
jl
cld
ret
push
std
and
pop
cmc
ret
adc
mov
mov
js
aas
push
stos
and
rol
jo
cmpsl
pop
cwtl
daa
repnz
inc
stos
add
xlat
rolb
repnz
cmp
scas
js
mov
pop
cmpb
aad
fistl
add
movsl
data16
fisubs
lahf
add
popf
loopne
adc
jp
add
mov
mov
lock
dec
dec
xchg
xchg
xchg
in
pop
pop
jnp
xchg
mov
sti
jns
mov
sbb
stos
stc
sub
inc
xchg
push
mov
inc
scas
ret
push
mov
js
sahf
lcall
jecxz
imul
mov
aad
add
fwait
ds
ret
rorb
addr16
mov
and
fadds
jne
pop
or
loop
xchg
jl
jmp
cmpsb
sub
adc
popa
int3
ds
nop
in
imul
fldl
verw
ret
dec
ret
xor
test
loope
xor
push
push
xchg
sbb
mov
cs
js
leave
enter
mov
out
cmp
es
jmp
cmpsl
sbb
cli
inc
xlat
in
popf
and
dec
lahf
hlt
and
add
adc
jae
push
cmp
inc
pusha
pop
in
xchg
jl
push
nop
repnz
push
sub
adc
xchg
outsb
fidivrl
les
xchg
js
mov
sbb
jne
leave
inc
inc
mov
pop
xor
loop
clc
mov
adc
out
xchg
mov
or
xchg
xchg
movsl
cmc
mov
hlt
arpl
mov
lods
ret
inc
push
jmp
pop
cmp
cld
imul
cs
pusha
cwtl
repz
and
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
std
test
rolb
add
scas
mov
push
inc
mov
inc
or
adc
inc
das
movsb
xchg
out
xchg
iret
mov
adc
xorl
es
xchg
jb
lock
mov
repnz
inc
add
test
xchg
push
insl
or
in
test
mov
jne
stos
iret
sti
mov
cmp
dec
push
sti
mov
pop
out
sub
cltd
aaa
jnp
repz
cld
push
roll
mov
xlat
xchg
sub
nop
adc
js
jmp
push
mov
xor
int3
lds
sbb
or
xchg
jbe
xor
call
aad
mov
imul
inc
fcomps
fwait
pop
push
fwait
lods
and
sti
ret
std
push
data16
push
dec
jae
fadds
inc
adc
adc
mov
leave
lret
not
jo
and
cmpsb
leave
hlt
mov
sub
call
lock
sub
adc
pop
mov
jp
mov
cwtl
and
pop
ss
jb
add
and
fcompl
mov
in
enter
cmp
mov
mov
adc
test
sub
sub
cs
sbb
jg
fwait
cmp
push
repnz
mov
or
ret
mov
subl
and
dec
leave
dec
push
sub
test
mov
popa
and
and
adc
xor
sbb
int3
in
ljmp
push
clc
mov
add
movsb
int
maxps
into
jp
xchg
movsl
hlt
mov
cmp
popa
es
cmp
inc
adc
push
cmp
cmp
mov
or
js
sub
notb
add
ja
clc
les
das
xor
negl
ljmp
fcmovnbe
cmpsl
jl
mov
inc
call
ret
mov
mov
ljmp
lods
mov
adc
cmpsl
pop
mov
rcl
xlat
rcl
lcall
inc
cli
mov
cmp
in
xchg
cmp
jecxz
dec
aaa
push
dec
es
mov
out
aaa
mov
repnz
addl
std
repnz
sbb
js
or
cmpl
add
loopne
cwtl
addr16
aaa
or
push
pop
adc
hlt
test
and
rclb
out
xor
aam
movsl
insl
mull
shrb
cmp
cmp
lret
inc
nop
push
jp
outsb
cmpsl
out
push
lea
orl
arpl
rcl
lcall
testl
fcompl
mov
cmp
jecxz
xchg
leave
fiaddl
or
int
scas
outsl
dec
jns
js
adc
aam
dec
adc
add
mov
shlb
adc
dec
inc
jge
or
in
fisubrs
pop
bound
imul
outsb
fldcw
sbb
int
lods
xchg
test
stc
mov
xor
xor
es
mov
jno
mov
adc
jecxz
sub
lahf
pop
cmp
inc
gs
sti
pop
pop
shlb
dec
into
mov
dec
xchg
jo
out
dec
cli
xorl
and
std
cmc
inc
inc
jns
test
xchg
mov
lock
or
jbe
push
cmp
lret
jno
dec
mov
les
adc
mov
call
call
aad
lods
and
push
lret
popf
lcall
aad
stc
je
outsb
icebp
sub
inc
cld
fisubl
cld
mov
rorb
mov
inc
rorb
aam
inc
arpl
cmp
loope
lret
int
scas
movsl
mov
push
sbb
sbb
aad
sub
xchg
push
push
jge
fidivrs
adcl
aam
and
fstpl
cmp
inc
frstor
and
gs
loopne
in
jg
cli
push
sbb
movsl
mov
pop
aad
jne
jle
stc
xchg
insb
or
cmc
inc
jl
push
sbb
in
sahf
adc
push
and
insb
cmc
jmp
test
mov
lea
call
cs
cmp
push
xor
pop
push
ss
pushf
xlat
int3
sbb
pop
int
andb
shrb
lds
ja
inc
push
pusha
push
mov
or
sbb
pop
push
out
inc
push
cmp
dec
fcoml
pop
push
mov
adc
inc
lahf
std
cltd
mov
inc
dec
cltd
rcrl
sbb
imul
les
and
push
adc
ffree
repnz
xchg
mov
mov
mov
cs
or
adc
cmp
pop
pop
rcrb
mov
add
dec
cld
cmp
inc
inc
mov
add
cmpsl
and
dec
jmp
sub
pop
mov
adc
test
mov
imul
mov
js
gs
push
insb
lret
in
fs
scas
gs
stos
mov
inc
repnz
das
dec
arpl
dec
cmp
movsb
nop
sub
sub
cld
sbb
add
inc
fadds
lds
sbb
scas
mov
pop
push
jne
or
out
adc
xchg
adc
mov
jp
into
jge
pop
mov
ja
mov
inc
jo
fwait
scas
sbb
xchg
ljmp
fcompl
mov
ds
sti
pusha
mov
rclb
xor
sub
jns
aam
mov
push
in
sbb
out
jbe
cmpsb
add
and
mov
mov
stc
outsb
mov
push
jp
and
or
nop
cs
pop
dec
push
decb
adc
inc
or
fwait
or
mov
ss
stc
or
mov
imul
xchg
jne
or
mov
cltd
insl
call
push
xlat
imul
es
inc
cs
aaa
subb
add
push
push
push
push
push
inc
rorl
popf
add
cmp
xchg
add
lea
into
add
insl
fwait
cmc
loopne
or
xor
push
outsl
insl
ds
jo
and
adc
dec
cmp
inc
and
inc
mov
mov
into
pusha
xor
lcall
jnp
push
inc
fistl
nop
push
inc
cmp
dec
jle
lds
push
inc
mov
aam
je
imul
xor
sti
sbb
cmpsb
and
xor
sub
push
push
mov
call
xchg
jge
rorb
jg
je
call
sub
xchg
popf
cmc
aas
mov
int
in
and
add
orl
xchg
adc
dec
cmpsb
sbb
cli
and
jns
icebp
push
push
jno
rcrl
lret
adc
fsubrs
call
sti
js
ja
shll
mov
mov
mov
int3
in
sti
out
andb
dec
dec
dec
dec
mov
enter
push
lret
lret
rorl
jne
dec
out
inc
test
repnz
ljmp
lcall
roll
sbb
xor
mov
rorl
pushf
out
adc
cld
push
outsl
push
dec
mov
out
adc
jl
push
ffree
xlat
xlat
std
mov
mov
out
pusha
enter
jae
in
and
fildl
add
pushf
fdivr
dec
and
sbb
repnz
inc
scas
aaa
sub
jo
or
sarl
sub
sub
mov
and
push
int3
mov
lods
movq
fnstsw
cltd
divb
fld
jmp
gs
and
sub
jbe
pushf
int
andl
loop
cli
mov
mov
jp
dec
test
push
mov
movsb
pusha
cmp
adcb
test
ljmp
xchg
bound
xor
fdivrp
mov
ljmp
dec
aam
fistpll
jo
xchg
xchg
inc
dec
cmp
sbb
and
std
imul
xchg
movsb
lock
inc
mov
scas
sbb
outsl
and
movsl
xchg
mov
sbb
sub
andl
sub
jg
movsb
loop
mov
mov
jae
bound
push
stos
mov
aaa
or
sub
sti
fwait
xchg
cwtl
mov
xchg
into
mov
repnz
lods
imul
adc
sti
sbb
lret
icebp
mov
push
and
jno
mov
call
mov
and
out
mov
in
lahf
inc
sbb
mov
push
cmp
int3
pop
adc
xor
das
inc
mov
dec
mov
cmp
mov
or
or
lods
adc
pop
mov
inc
jge
shrd
mov
mulps
cmp
adc
jge
and
push
or
mov
ret
hlt
jge
test
xor
jl
inc
out
cmpsb
test
cmp
cmp
mov
cmpsl
addb
jmp
cmp
std
lock
add
aam
test
xchg
or
sub
fistpll
pop
dec
push
inc
fdiv
ds
pop
xchg
in
mov
divl
rorb
jnp
mov
cld
pop
add
insl
push
inc
dec
lret
in
xor
pop
push
test
shlw
stc
orl
dec
lds
and
stos
dec
pusha
stos
repz
mov
iret
ja
pop
das
andb
pop
lock
rcrl
fdivrs
enter
pop
pusha
mov
adc
cwtl
dec
int3
cmp
aam
xchg
fistpl
fisttpl
lahf
and
jns
push
aad
sub
fldt
test
inc
mov
std
cltd
stos
jne
loopne
lods
fldenv
insl
xor
repnz
lods
shl
xchg
sbb
mov
fildll
jae
xchg
clc
push
out
movsb
popf
dec
std
pop
out
das
adc
xor
inc
add
out
rorb
in
loopne
mov
adcb
mov
scas
mov
sub
stc
mov
insl
in
lods
mov
shlb
aam
jo
mov
cmp
out
jg
loopne
out
cmp
int3
cld
pop
jl
es
xlat
loop
jns
test
ds
jne
flds
jecxz
lods
dec
adc
cmp
cmp
jge
decl
jle
out
insb
sbb
sub
jmp
fisttpll
cltd
pop
into
jo
lods
jecxz
shll
loop
jl
shrl
lcall
out
es
cmp
lahf
mov
imul
or
sub
loopne
xchg
ret
sbb
sub
movsl
fadd
fstl
mov
fsubrs
push
in
jmp
jns
mov
imul
aad
jne
mov
mov
call
or
push
pusha
sub
jmp
push
mov
stc
push
test
filds
jecxz
test
fdivs
jp
mull
in
enter
lods
ljmp
test
pop
mov
pop
aaa
pusha
adc
movsb
cmp
fld
in
fstps
sub
mov
lods
in
movsl
lds
sbb
fcmovb
push
mov
sub
push
shrl
and
outsb
adc
je
ret
sub
pop
mov
xor
rclb
daa
jae
outsl
addr16
push
fwait
aaa
ljmp
stos
inc
pop
mov
dec
push
fcomps
pop
jo
es
sti
mov
lret
sarl
and
mov
loope
mov
and
sbb
lret
cmp
mov
add
jb
mov
fdivs
cmc
test
clc
fs
mov
xor
pop
jbe
out
sub
sub
inc
xor
push
push
push
pop
push
pop
pop
xchg
stos
mov
and
filds
add
es
test
in
ds
and
xor
and
inc
jl
lock
rorl
dec
pop
addr16
ret
cmpsl
mov
or
jns
inc
addl
clc
imul
mov
stos
jbe
cli
sbb
xchg
add
mov
inc
inc
popf
push
sub
or
adc
into
es
imul
stos
lods
inc
push
inc
pop
mov
repnz
mov
and
insb
imul
push
adc
ss
push
push
rcll
cmp
cmp
xchg
jo
ljmp
enter
test
sbb
adc
cmp
es
pop
mov
xchg
mov
jae
ret
scas
add
repz
pop
aad
xor
movsb
pop
inc
das
pop
incl
dec
in
inc
into
sub
mov
or
adc
cld
adc
inc
es
cwtl
inc
and
xchg
and
push
sub
stos
in
aad
add
xor
sbb
lret
popf
cmp
inc
xorl
movsb
cwtl
add
adc
scas
insb
xor
subl
push
stc
les
leave
sub
mov
mov
sbb
aas
cld
inc
fildll
out
cltd
enter
adc
scas
or
hlt
fisubs
xor
pop
push
mov
test
mov
sub
xchg
cmp
jle
xlat
aaa
lods
jle
mov
push
cmp
xor
nopl
cmp
cmp
cld
inc
adc
scas
sub
addr16
lock
shl
loopne
lods
icebp
cmp
mov
frstor
fsubrs
dec
in
or
je
sub
lahf
push
mov
jbe
popf
sub
notl
movsb
mov
mov
and
scas
nop
jge
cmp
out
test
xchg
and
test
dec
lods
pop
inc
mov
dec
xchg
outsb
dec
sbb
jmp
imul
dec
mov
dec
push
and
jmp
add
jp
loope
xchg
fmull
cmp
push
xchg
cs
cmc
orl
push
and
jb
pop
test
test
sub
sbb
mov
arpl
in
xchg
mov
inc
int3
out
or
movsl
mov
cmp
mul
inc
clc
aam
sub
lock
mov
idivl
dec
shrb
inc
sub
push
or
dec
je
mov
dec
iret
mov
inc
sbb
push
dec
mov
addr16
mov
fnstcw
mov
rcrb
rcrb
cld
xchg
sub
shll
cwtl
mov
or
insl
add
mov
pop
icebp
testb
xchg
hlt
push
test
enter
and
out
mov
lock
dec
ret
cmp
or
pop
mov
or
test
scas
mov
int3
inc
xchg
movsl
jecxz
dec
xchg
adc
sub
lea
jnp
shll
mov
arpl
lds
dec
test
ljmp
cmp
cmp
sbb
inc
pushf
xchg
ss
sbb
and
xchg
jecxz
ds
dec
cs
test
add
add
lods
stc
out
or
leave
hlt
aad
jb
sbb
cmp
pop
pop
mov
push
xlat
inc
pop
inc
pop
or
scas
ljmp
mov
roll
dec
xchg
push
xor
sub
jb
adc
es
sub
xchg
push
flds
arpl
leave
loope
fmuls
pop
mov
push
iret
adcb
sub
dec
xchg
jbe
mov
jno
cmpsb
push
xorb
mov
out
add
mov
mov
inc
pop
push
lods
push
scas
in
jnp
add
mov
outsl
stos
fsubr
cwtl
and
pop
xlat
mov
add
and
pop
pusha
mov
enter
or
js
xlat
stos
push
cmpsb
lret
and
pop
mov
lahf
add
das
clc
xor
das
cli
cmp
shlb
insl
adc
dec
out
rcl
pop
insl
sub
mov
into
jo
shl
and
push
inc
inc
dec
mov
lods
movsl
xchg
dec
shl
inc
cwtl
lret
sub
cmp
leave
dec
adc
decl
imull
test
jecxz
inc
sahf
and
sti
jge
pushf
mov
xlat
inc
lds
add
daa
cwtl
lods
andb
shrl
xchg
stos
add
adc
jno
mov
sarb
shrb
aaa
push
cmp
cltd
movsl
sbb
mov
addl
or
lea
test
in
lock
sub
jb
or
scas
lods
test
pop
xchg
outsl
adc
jmp
not
in
xor
inc
cmpsb
loope
stc
sbb
sub
cltd
movsb
lods
cmpsb
cmp
cmp
loop
inc
out
std
sti
imull
add
or
insl
and
fmul
aam
mov
sbb
mov
push
lock
loopne
imul
in
sahf
sbb
sub
lahf
ja
jg
rcrl
xor
fisttpll
cmpb
adc
cmp
pusha
or
or
push
mov
cmp
fs
and
push
add
sbb
xchg
push
push
push
mov
int3
or
inc
xchg
lcall
xlat
arpl
sub
icebp
pop
xor
mov
add
inc
mov
sub
pop
or
xchg
stc
push
in
xchg
rol
outsb
pop
sub
mov
hlt
ja
mov
ss
cmp
jnp
pop
dec
pop
out
add
sbb
mov
cld
dec
or
jnp
jp
cmpsl
in
pop
jge
adc
mov
stos
push
push
xchg
cs
test
rcll
adc
sub
mov
subl
adc
fwait
sub
cmp
pop
fcomp
jbe
pop
out
jnp
int3
daa
cs
inc
xchg
pop
add
dec
inc
push
push
pop
push
dec
pop
idiv
cli
fbstp
push
add
movsb
ret
push
mov
dec
push
popf
sub
adc
xor
pop
mov
jl
jmp
into
and
cld
lds
add
in
or
add
imul
and
cld
add
pop
test
loop
xchg
sub
icebp
in
pop
or
popf
out
xchg
cmp
sub
or
clc
jg
and
jecxz
or
outsb
jne
sub
bound
inc
and
inc
cmp
xor
stos
aas
jl
pushf
pop
mov
jns
cmp
test
sub
movsl
or
lods
mov
cli
lret
dec
aam
inc
imul
cmp
cmp
add
ret
addr16
jl
jle
test
paddq
inc
enter
aam
cwtl
xor
inc
jae
mov
out
gs
mov
or
sti
shlb
mov
fmuls
lret
lret
or
popa
aaa
fcmove
sbb
js
or
stos
es
insl
popf
leave
mov
ffree
outsb
adc
mov
arpl
mov
xor
repnz
jecxz
xchg
aad
mov
arpl
xchg
cmpsb
jg
int
stos
lock
xor
fucom
sub
cmp
repnz
repz
jae
sub
clc
dec
out
fadds
xchg
cwtl
insl
adc
fucomi
imul
dec
imul
push
shrl
dec
imul
sub
fimull
jge
js
mov
outsl
cmp
adc
test
sbb
mov
movsl
aam
test
sarb
cmpsb
mov
cmpsl
or
iret
and
xor
movsl
jno
mov
ds
popf
jno
push
jge
xchg
jmp
xor
lods
aad
or
mov
cmpsb
sbb
out
mov
std
test
ja
fdivrp
xchg
mov
push
add
add
jns
push
pop
xchg
lods
movsl
mov
and
je
mov
movsb
daa
adc
ret
adc
fists
jecxz
xor
cmp
ss
dec
xchg
dec
xor
xlat
idivb
mov
pop
in
bound
inc
sbb
enter
jecxz
cmp
sahf
hlt
pop
pop
ljmp
cmc
pop
out
and
fstpl
jle
xchg
loopne
inc
xchg
repz
pop
loope
out
fdivrl
ds
push
outsb
ljmp
ss
push
xor
mov
ljmp
fists
inc
cmp
sub
es
mov
xlat
push
dec
jmp
repnz
lods
jle
mov
ret
into
mov
cmc
or
dec
cmpl
mov
and
mov
mov
mov
cmpsl
rcr
mov
mov
jecxz
test
xchg
mov
rcl
adcb
adc
addb
int
scas
popf
loop
sahf
sbb
sub
fdivrp
dec
scas
mov
mov
lods
sbbb
adc
rol
fnstsw
into
int
lahf
lcall
cmp
popa
xchg
and
sbb
lret
shld
xchg
adc
inc
pushf
jg
dec
mov
push
insl
xchg
mov
cmp
fildl
fsubl
cmp
int
cmpsl
out
call
loope
inc
dec
test
pop
insl
lret
movsl
adc
test
out
pop
fwait
movsb
stos
aas
push
jecxz
mov
mov
es
pop
cmpsb
adc
popa
add
inc
push
js
pop
mov
movsl
mov
jbe
int3
cltd
push
lret
out
sbb
outsb
cmpsl
test
xchg
outsl
push
jno
ljmp
push
aam
and
nop
std
mov
aad
cmpl
inc
decb
leave
adc
mov
clc
mov
inc
push
out
outsl
shrb
sub
add
sub
repnz
push
repnz
mov
js
sahf
je
jmp
push
outsb
pop
fbld
mov
daa
andb
pop
mov
pop
pop
out
scas
test
push
fstl
add
mov
fdivs
jo
mov
cmpsl
mov
add
add
xor
test
xor
mov
or
adc
packsswb
imul
dec
loop
push
jb
sbb
cmp
test
dec
inc
in
mov
xchg
sahf
aaa
stos
lea
sub
bound
inc
mov
push
fwait
hlt
dec
mov
test
inc
sbb
and
pop
sti
pop
xor
aaa
xchg
mov
cmp
sahf
cmpl
xor
into
cwtl
mov
lret
and
arpl
mov
aas
mov
pop
outsb
idivb
sbb
cmc
jo
or
jne
dec
stos
pop
ret
loope
xchg
pop
mov
leave
add
rcll
jl
adc
jmp
xlat
outsb
mov
and
scas
pop
into
inc
xchg
pop
sbb
test
dec
xchg
mov
ret
popf
scas
test
inc
sti
xchg
push
and
push
aas
fsts
lret
xchg
push
adc
loop
or
sahf
push
lods
xchg
mov
ficoml
ss
insb
mov
outsb
negl
fildl
pop
idivl
jg
sahf
xor
pop
js
jge
ljmp
aad
test
mov
xor
clc
lcall
int
and
sub
and
aad
or
rorb
cld
and
ljmp
push
daa
push
in
xor
mov
mov
sub
shll
mov
fstpl
mov
sub
jnp
sbb
lahf
push
cmc
mov
and
fsubrs
push
aaa
pop
enter
adc
mov
inc
out
out
add
add
inc
pop
inc
pop
pop
pop
mov
push
mov
inc
xor
in
add
xchg
add
add
ja
dec
loope
jns
inc
push
aad
in
push
adc
fisttpll
jecxz
push
add
popf
cs
pop
mov
pushf
pop
push
xchg
les
and
mov
sub
bound
cmp
xchg
jnp
lretw
pop
ds
ss
xchg
mov
les
lret
loopne
push
movsb
and
xchg
mov
cmp
inc
mov
cmp
clc
push
dec
add
mov
xchg
dec
adc
push
shrl
sbb
mov
scas
aaa
mov
ljmp
fstpl
fists
mov
loopne
sub
repnz
push
cmp
fcmovnb
lahf
loopne
movsb
mov
out
fcompp
mov
push
xchg
leave
mov
rcrl
xchg
int
cmp
jmp
testl
lds
mov
ret
mov
cmp
pop
mov
pop
das
rorb
pop
push
sub
bound
mov
mov
bound
mov
in
dec
loope
lahf
orl
jnp
push
in
pushf
mov
pop
daa
les
jmp
sub
sub
mov
outsl
imul
push
add
aas
jg
lods
jmp
inc
test
inc
push
repz
mov
xor
sbb
sbb
ja
mov
xchg
addr16
xchg
das
or
adc
push
in
pop
mov
mov
or
mov
sbb
pop
shl
cmp
daa
xchg
pop
aaa
xlat
lcall
popf
notl
adc
into
hlt
xlat
inc
icebp
pop
fwait
push
imul
rclb
ljmp
cmp
mov
jmp
iret
testl
sub
sti
enter
adc
sub
in
popa
pop
cmp
or
mov
xchg
xor
hlt
fnstenv
push
in
lods
inc
xor
sub
push
int3
sti
enter
int3
and
enter
mov
jg
jle
ja
into
aaa
xchg
mov
push
cli
mov
adc
xor
cwtl
ret
or
mov
subb
orps
pop
xchg
add
cmp
xor
mov
fwait
inc
test
movsb
pushf
add
mov
in
scas
int
repz
lcall
dec
sub
pop
fsub
loope
rcll
mov
sbb
sub
outsl
dec
lds
shlb
sbb
ret
aas
mov
rcr
pop
sbb
ffreep
jmp
pop
fsubrp
dec
mov
push
cmp
ss
cli
lods
popf
inc
mov
add
xlat
ret
push
sub
dec
dec
mov
pop
add
push
fistl
mov
push
xor
adcb
xor
or
adcb
sbb
aaa
pop
pushf
out
cmp
push
pusha
mov
or
sbb
jecxz
sti
popa
test
and
fists
mov
mov
outsl
add
xor
lcall
aaa
fnstsw
sbb
mov
cmpsl
sbb
mov
push
fstpt
cltd
sbb
dec
nop
movsl
cmc
std
aaa
les
popa
stos
pop
mov
cli
loopne
or
add
mov
out
or
mov
mov
faddp
sti
or
and
addb
movsb
loope
aad
mov
xchg
sbb
jns
iret
push
rolb
cmc
inc
stc
call
arpl
imul
dec
enter
add
jle
jg
enter
push
add
out
cmc
mov
cmpsb
cmpsl
adc
or
xchg
pop
jbe
data16
cmpsl
ljmp
popf
or
lahf
mov
pop
push
cmp
xchg
inc
xor
xlat
jecxz
leave
mov
stos
loope
cmp
push
cmp
add
scas
dec
dec
add
mov
lds
add
mov
das
bnd
dec
jl
stos
jle
add
or
mov
leave
adc
fisttps
xchg
outsl
xchg
ds
jns
fldl
dec
pop
rorl
adc
mov
mov
sbb
lcall
pop
in
outsb
mov
lea
test
push
adc
je
mov
inc
bound
sub
mov
mov
sub
jno
js
nop
cmp
mov
data16
lret
dec
lds
out
cli
xor
clc
out
jle
lds
inc
xchg
into
xchg
stos
sarl
push
movsl
xchg
lcall
out
repnz
aam
mov
mov
outsb
or
sti
out
or
sub
clc
pop
std
pop
mov
int
stos
pop
add
call
mov
mov
lcall
or
popf
or
and
stos
imul
cmp
mov
sbb
inc
and
xchg
push
push
cwtl
and
test
adc
mov
add
jno
mov
cli
jae
cmp
inc
mov
out
lcall
xchg
cli
push
xchg
fcomp
or
sub
lods
scas
xchg
lock
nop
sbb
mov
mov
xor
and
mov
stos
push
or
xchg
fwait
jnp
in
sub
xchg
fsub
pop
cltd
cmp
popa
mov
adc
inc
mov
cmp
dec
in
movsl
dec
xchg
mov
add
testb
push
sbb
adc
mov
iret
jae
cmp
sbb
les
lods
push
cmpsl
xchg
xchg
icebp
lahf
sbb
mov
movsb
jp
repnz
inc
fsubl
enter
mov
test
or
sar
lea
push
push
jp
je
push
je
adc
pop
adc
jmp
jmp
sahf
sbb
and
lods
cmp
mov
pop
and
xor
pop
and
jl
mov
dec
push
xor
jg
inc
jl
je
jg
aaa
movsl
mov
dec
push
inc
push
pop
push
pop
pop
ss
imulb
lds
add
xchg
add
or
mov
inc
sbb
in
loope
bound
adc
and
mov
sarl
add
bound
and
mov
shrl
cmp
mov
js
in
sbb
mov
cmc
add
lods
mov
push
repnz
add
xchg
push
orl
xchg
pop
in
shll
pushf
testb
xor
mov
xchg
xchg
push
rorb
loope
shr
jmp
add
and
clc
xor
inc
daa
cs
or
mov
ja
xor
mov
push
jecxz
cmp
mov
and
push
dec
xor
loope
ror
inc
cmc
cli
inc
sbb
add
xchg
sbb
pusha
and
outsb
and
in
fsts
aas
cwtl
xchg
mov
leave
rcl
es
xor
push
repz
xchg
sbb
testl
or
xchg
aaa
inc
mov
ror
sbb
enter
cmp
push
mov
pop
cmpsb
xor
mov
xor
xchg
sbb
sahf
btr
xchg
idiv
add
mov
pop
lcall
arpl
dec
lods
pop
pop
jle
in
test
lcall
xchg
popl
icebp
jno
mov
or
xor
das
popa
dec
xchg
pop
mov
cmpsl
mov
fcmovnbe
stos
pushf
mov
add
lea
lea
aad
mov
mov
lods
lds
sub
cs
add
in
mov
fs
movsb
and
addb
cmpsb
mov
or
inc
add
cmp
ror
inc
cmpsb
daa
bound
orl
cmp
push
mov
cltd
mov
mov
inc
mov
clc
out
iret
mov
repnz
pop
icebp
fadd
jle
inc
add
adcb
inc
jg
movsb
test
push
gs
push
push
sub
adc
mov
in
fimuls
orb
mov
adc
xchg
fidivs
mov
push
shl
scas
fisubs
adc
loop
jg
in
jnp
lcall
enter
fldenv
dec
pop
dec
or
or
orl
aam
mov
inc
dec
ret
cmc
lret
mov
pop
sub
imul
pop
pop
lock
sbb
js
xor
gs
jg
pushf
clc
inc
inc
adc
jno
dec
xorl
cli
out
mov
mov
pop
cld
jp
insb
inc
xchg
in
in
inc
xchg
inc
pop
and
cs
push
pop
pop
lods
stos
inc
aam
sbb
inc
push
jo
jae
jg
sbb
pop
sub
sbbl
stc
mov
push
mov
push
pop
scas
and
pushf
mov
sbb
jb
jo
mov
jmp
pop
add
push
and
push
sarb
adc
mov
mov
mov
lcall
loopne
xor
xlat
xchg
or
xchg
divl
sub
or
inc
mov
jne
or
jae
inc
in
pushf
lock
pop
scas
pusha
fstp
lret
mov
cmp
mov
pop
adc
nop
test
lea
push
insb
fcmovne
dec
cmpsl
inc
imul
hlt
adc
mov
xchg
lcall
mov
cmp
or
movsl
cli
or
sbb
fidivs
jnp
xor
pop
ljmp
cmp
add
pop
mov
jb
pop
jge
shrb
fs
in
xchg
stos
xchg
sbb
lods
cmp
fnstcw
je
cltd
sub
push
jp
pop
push
out
rorb
sbb
adc
test
sbb
negl
xchg
rcrl
add
xchg
lcall
iret
push
fldt
mov
repnz
push
out
and
je
xchg
test
jnp
jns
inc
mov
sarb
pop
fwait
dec
sbb
mov
pop
into
mov
test
lret
adc
andl
sub
xor
fdivrp
in
test
cmp
pop
jecxz
cld
mov
and
adc
push
sub
shrl
imul
lods
pop
xchg
cmp
xor
shlb
loopne
fnstsw
int
xor
lcall
inc
xchg
in
cmp
js
sbb
and
cmpsb
sbb
in
mov
xor
cmp
sbb
iret
mov
mov
sahf
fimull
mov
adc
lcall
jne
les
pop
jp
into
fildl
adc
mov
sub
sbb
mov
mov
cwtl
fisubl
cli
mov
mov
cmpsl
mov
out
mov
jno
or
test
sarl
lahf
fldt
xchg
shr
shlb
xor
sahf
sbb
in
nop
cmpsl
sbb
add
sub
aad
sbb
popf
jnp
aam
dec
js
data16
mov
idivl
cmp
xchg
arpl
ret
arpl
mov
lahf
inc
or
add
pop
test
stos
inc
test
dec
mov
clc
fwait
mov
test
leave
outsl
jle
add
movsl
out
inc
fbstp
shll
ficoms
push
jmp
xchg
mov
add
addl
sti
push
mov
or
mov
jg
insb
fisttps
push
lret
xor
leave
inc
jbe
aad
cmp
and
adc
mov
push
fdivs
cmc
inc
or
stos
xchg
push
cmpsl
sbb
in
add
mov
and
adc
lds
push
adc
shlb
inc
sub
push
pop
and
lock
mov
inc
cmpsb
xlat
in
xchg
mov
and
and
cmp
and
addr16
imull
jg
sbb
out
loope
clc
in
repz
inc
imul
rolw
or
push
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
pop
aam
stc
add
jle
add
mov
and
leave
lds
push
dec
lea
xor
jnp
hlt
or
jo
jecxz
jne
mov
xchg
xor
cmp
jae
outsb
scas
cmpl
stc
lds
pop
pusha
xlat
jno
mov
inc
sti
int3
xor
push
jl
pop
cmp
adc
xor
mov
popa
popf
or
lds
jecxz
cli
xor
jle
std
stos
or
mov
adc
pop
mov
testb
enter
mov
arpl
ss
jae
sbb
mov
lea
daa
xor
xor
push
aaa
cltd
lods
arpl
iret
pop
leave
add
hlt
mov
incl
aaa
xlat
rcll
lret
loopne
jecxz
or
lret
jne
into
xor
and
cmp
xchg
jmp
xor
addl
cmp
data16
jo
shll
daa
repz
inc
inc
stos
ljmp
mov
add
mov
jle
sub
sbb
gs
jnp
push
pop
imul
cmpl
jb
xchg
add
jge
mov
pop
stos
cmp
popf
aad
adc
jne
jne
pushf
ss
xchg
lds
lcall
out
push
mov
in
sub
aas
fcmovbe
movsb
les
jmp
mov
daa
hlt
sub
out
mov
mov
add
pop
jge
test
call
and
scas
aas
fdivs
mov
jne,pt
push
and
ds
adc
aaa
stos
aas
adc
xchg
sub
and
ret
hlt
dec
dec
sahf
pop
pop
out
aad
ficoms
xlat
mov
cld
out
dec
fmul
mov
push
mov
jl
mov
jne
fstpl
pop
testb
insb
incl
stos
popa
sbb
daa
daa
pop
popa
jo
movsl
push
into
insb
js
aam
xor
cltd
or
mov
sahf
out
mov
jl
sub
fistpl
dec
adc
pop
pushl
int3
aad
jno
add
into
sub
mov
mov
int3
or
push
sub
sbb
flds
jecxz
jge
rol
xor
jo
sub
mov
and
scas
fs
rcrb
jl
adc
xor
test
jp
mov
pop
sbbl
cmc
loope
enter
adc
push
inc
push
or
mov
mov
sbb
enter
insl
or
push
aaa
iret
jns
cmp
test
pop
and
sub
stc
inc
mov
shll
pusha
iret
mov
pop
fucomip
insb
cmp
inc
out
lock
cmp
js
clc
adcb
cmc
clc
inc
mov
sarl
add
mov
sub
jl
popa
sub
mov
sbb
mov
xchg
jecxz
cs
inc
jp
mov
ret
jo
push
call
ja
shlb
out
xchg
jge
sahf
repz
pop
ss
push
jmp
mov
mov
ds
int3
jl
int
sub
daa
or
sub
dec
inc
addr16
outsl
xchg
jmp
cmpsl
inc
xor
mov
adc
mov
stos
inc
dec
hlt
xchg
stos
mov
inc
xor
jno
mov
fcmovnbe
add
push
jae
sti
test
jae
addr16
repnz
bound
iret
iret
pushf
mov
sub
push
data16
shll
rorb
mov
out
insb
mov
mov
aas
pop
mov
cmp
popf
into
sbb
push
int
cs
popa
ja
mov
or
ss
mov
das
sbb
inc
cmpsb
push
mov
and
fwait
push
push
sbb
imul
and
mov
push
sub
mov
lea
lods
test
call
lahf
inc
or
arpl
push
cmpsb
xor
mov
popf
fcmovb
mov
ret
icebp
clc
hlt
jp
test
fisubl
test
test
mov
insl
enter
jecxz
inc
aas
cmp
cs
or
cmp
ficoms
mov
jnp
orb
insl
nop
packuswb
stos
movsb
xchg
jmp
push
addl
xchg
lock
fldenv
mov
ds
and
pop
pop
test
arpl
lahf
and
int3
repz
mov
aam
xchg
scas
mov
sbb
mov
testl
test
cli
pop
mov
sbb
xchg
cmc
dec
loope
xchg
jl
iret
jp
repnz
push
lods
les
addr16
lock
push
xor
inc
orb
lods
adc
cmpsb
nop
add
and
xchg
sub
das
lahf
ret
sub
popa
pop
dec
les
lahf
xor
or
mov
test
jnp
mov
sbb
int
xchg
add
xor
jecxz
mov
adcl
pushf
mov
pop
mov
jbe
fstpl
sbb
add
push
mov
adc
enter
dec
adc
sub
loopne
and
adc
mov
sub
fs
lods
rorl
inc
push
aam
arpl
pop
pop
leave
jmp
arpl
mov
adc
movsb
adc
loop
push
cmpb
push
aad
mov
xchg
sbb
sub
mov
sbb
dec
cs
pop
cmpsb
jbe
pop
popf
inc
push
dec
mov
add
aaa
stc
insb
imul
fs
ret
jp
push
cmc
inc
loop
jns
loope
push
xchg
mov
sbb
mov
cltd
mov
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
push
push
fstpt
mov
cli
xchg
addb
add
add
pop
outsl
push
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
