push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
and
mov
les
mov
ds
inc
pop
xlat
ffree
outsb
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
cmp
jnp
cmp
jle
mov
shl
xchg
rol
sbb
insb
nop
aas
jecxz
mov
inc
leave
movsl
inc
ss
xchg
rclb
pop
mov
adc
js
jns
or
dec
mov
xor
adc
dec
cmp
mov
std
std
mov
sbb
add
lcall
cltd
ficompl
inc
jne
es
sub
sarb
jmp
shll
shrb
push
mull
nop
push
xor
add
addr16
mov
outsb
xor
ja
pop
in
sti
lret
sbb
inc
sub
fwait
cmp
mov
xchg
shlb
loopne
inc
jne
in
sbb
scas
inc
xchg
xorb
js
sbb
jmp
pop
rol
add
scas
sub
loopne
cli
mov
add
inc
push
cmp
arpl
mov
inc
pop
mov
test
mov
push
fsts
jns
push
inc
dec
jecxz
cmp
cltd
sar
pop
jecxz
lret
ljmp
or
jns
aam
inc
pop
push
or
mov
fadd
push
aam
pop
pop
lock
movsl
or
scas
or
sbb
push
js
enter
lret
dec
insl
mov
inc
out
dec
outsw
mov
pop
and
pop
das
dec
fnsave
js
jns
call
add
adc
into
inc
cmp
inc
dec
popa
prefetch
or
cli
jno
mov
push
push
pop
js
orl
xchg
mov
cli
sub
sbbl
pop
mov
pop
jae
cwtl
adc
popf
pop
or
in
add
sbb
or
movsl
cltd
mov
xchg
jg
pop
std
sub
pop
mov
test
lret
mov
imull
in
outsb
sbb
fcompl
dec
cmpsb
dec
ljmp
test
fstps
aam
push
pop
xchg
dec
aas
mov
sub
dec
mov
pop
shrb
cld
cs
mov
xchg
imul
jnp
in
cld
out
xchg
cmp
jne
mov
jmp
fisubl
daa
scas
sub
mov
pusha
jne
jle
lods
enter
fstcw
lret
mov
rclb
stos
pop
inc
sahf
or
lock
nop
mov
out
cld
and
add
add
scas
shrl
push
rolb
sti
mov
sbb
cli
jmp
sbb
push
xor
fisubrl
xor
inc
fwait
xchg
shrl
imul
push
inc
jg
pop
mov
sbb
cwtl
das
mov
pop
aad
xor
jmp
sub
mov
mov
jno
sbb
mov
jecxz
stc
or
cwtl
fdivs
out
dec
in
pop
xchg
jecxz
mov
or
adc
push
mov
add
mov
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
xchg
insl
jle
fldcw
sub
cmpb
roll
xor
in
test
cmp
sbb
aam
jne
rcr
jnp
xor
jp
jo
jl
repnz
iret
shll
jle
xchg
xorb
adc
sub
test
push
dec
mov
dec
popf
pop
lds
in
mov
dec
negl
dec
aas
jge
mov
stos
adc
mov
test
xor
lcall
sub
mov
xlat
jg
xchg
or
adc
insl
lret
xchg
lret
push
pop
aad
sarb
mov
lret
jg
xor
jg
sbb
popf
jge
pop
test
jmp
push
jle
lcall
ds
sub
lret
lea
mov
scas
icebp
cwtl
in
cmp
xchg
pop
mov
loop
cmpsl
or
add
decb
jge
cmp
and
aad
in
cs
pop
and
cmp
faddl
fs
sahf
inc
aas
cmpsl
mov
jl
imul
rcl
nop
ljmp
and
enter
pop
dec
daa
lret
testb
inc
pop
pop
jp
hlt
ss
xchg
pop
ficoms
imul
dec
cmc
out
pusha
hlt
sbb
mov
leave
push
jle
or
push
fnsave
lods
repz
sbb
dec
les
sbb
iret
ret
jb
sti
cltd
or
and
push
int3
adc
popf
push
jmp
inc
aas
pop
add
cmp
filds
adc
test
pcmpgtb
in
popf
insb
add
sub
push
bnd
daa
and
lds
in
xchg
jo
jnp
loope
push
and
xchg
psllw
push
add
out
cmp
jo
sub
mov
enter
push
nop
ror
inc
jecxz
frstor
mov
push
mov
cmp
pop
push
pop
nop
js
test
and
and
dec
std
fstpt
pop
jmp
test
xor
inc
ret
pusha
jbe
pop
in
sub
shll
outsb
xchg
cmp
push
fwait
dec
pop
jo
js
inc
addb
cmpsb
leave
lret
xchg
fmul
std
pop
push
movsl
dec
inc
jle
push
repnz
leave
lods
cmp
pop
fwait
mov
push
neg
into
add
fwait
or
or
xor
fs
pusha
inc
lods
es
push
xchg
dec
adc
shll
xlat
arpl
xchg
pusha
ficoml
cmp
loop
pop
xchg
icebp
mov
adc
adc
push
fldl
loop
cmp
stos
hlt
and
sbb
xor
sub
and
cmp
sub
pop
les
pop
repnz
or
push
inc
inc
add
sbb
scas
mov
out
gs
aaa
daa
jmp
repz
pop
push
in
mov
xchg
xchg
sub
xchg
adc
sbb
wrmsr
call
or
and
push
in
arpl
cltd
into
les
push
loop
mov
and
xchg
pop
shl
rcrb
fwait
dec
or
xchg
add
jle
mov
xchg
sahf
dec
movsl
ja
or
cmp
mov
sbb
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
sahf
mov
les
mov
loope
add
ja
test
repnz
pushl
push
jl
jecxz
push
imul
inc
pop
xchg
daa
and
pop
out
fs
jp
pushf
in
mov
movsb
cmp
sbb
aas
lods
std
sub
sub
pusha
sub
lods
out
mov
in
out
out
sub
push
cmc
push
cmpsb
push
enter
push
jecxz
adc
jnp
in
pop
in
test
inc
ret
mov
imul
sahf
mov
test
in
fcmovbe
pop
sti
inc
cmp
data16
mov
jmp
xchg
push
nop
mov
pop
xchg
inc
jecxz
loopne
add
cmc
jb
rorb
jl
ja
cmp
mov
pop
in
inc
xlat
repz
in
sub
daa
sbb
lock
lea
inc
dec
pop
cld
out
scas
leave
mov
push
in
aam
add
popa
jp
out
jl
addr16
js
xchg
cmp
jne
imulb
jns
daa
and
jmp
cmpsb
jnp
mov
xchg
bt
dec
sub
mov
stc
mov
push
or
lods
fisubrl
push
int
sarb
pop
fwait
push
adcb
xor
sbb
push
xchg
jmp
jo
xchg
rclb
notl
insl
sbb
js
push
or
aam
xor
imul
cmp
jmp
les
pop
and
jecxz
or
sar
mov
add
inc
mov
call
pop
into
nop
mov
jb
int3
add
imull
sbb
out
loop
and
mull
stc
fimull
int3
pop
sub
in
cs
and
mov
push
dec
stos
out
pop
fstl
les
movsb
push
sub
int
jne
sbb
pop
adc
mov
stos
arpl
cmp
push
xor
inc
ljmp
push
xor
addr16
sti
or
mov
mov
xor
mov
iret
data16
adc
sbb
int3
mov
inc
ja
and
call
mov
fcomps
xchg
pop
xor
pusha
jo
add
iret
repz
dec
xchg
rclb
ljmp
xchg
and
pushf
cmpsl
hlt
ret
sbb
xor
repz
fstpt
jl
xchg
icebp
stc
xchg
jmp
stc
add
sbb
dec
pop
pop
fbld
int
into
push
mov
rolb
sub
push
cld
cmp
mov
pop
push
and
sti
test
and
in
cltd
cmc
cmc
pop
ja
or
in
adc
test
sub
push
push
cmp
fbld
loopne
lcall
fstps
adc
lods
push
push
sub
push
xchg
cmpsl
adc
ljmp
stc
and
sub
fucomi
dec
inc
xlat
lods
and
jbe
scas
fsubs
adc
clc
outsl
adc
mov
aas
mov
scas
roll
mov
pushf
test
aaa
hlt
pop
adc
xor
xor
mov
mov
push
sub
jle
xchg
lds
out
sbb
int
mov
push
xchg
and
scas
jge
in
neg
ret
outsl
jb
mov
or
xchg
jnp
lods
sti
call
cwtl
or
jg
mov
mov
ja
rol
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
jae
stos
jecxz
sarb
mov
shl
and
fwait
inc
or
daa
aad
in
jle
cs
sbb
out
iret
incb
subl
insl
jae
push
cmpsw
pop
out
test
mov
mov
inc
ficoms
iret
inc
lret
or
xor
cmp
jb
pop
or
jl
cmp
xor
push
int
outsl
or
aad
pop
dec
inc
repz
inc
lock
xchg
ss
in
jb
scas
xor
iret
or
add
std
cwtl
rol
add
in
xor
sub
iret
adc
mov
pop
jp
xchg
rclb
popf
pushf
movsb
movb
jb
sbb
sub
std
mov
cmp
stos
ja
cs
leave
testb
fs
clc
outsl
xchg
sbb
add
je
or
cmp
xchg
push
push
or
fldcw
lods
push
push
ljmp
in
xor
lods
ror
push
dec
testb
aas
mov
push
iret
dec
hlt
imul
dec
movl
outsl
popf
jg
inc
cmc
daa
sbb
cli
popf
mov
push
pop
notb
xchg
add
hlt
loop
inc
lcall
cli
imul
outsl
sbb
lea
cmp
inc
add
cmp
xchg
addr16
lret
sub
pop
cld
lods
pop
fiaddl
aad
loope
pop
mov
adc
subb
sbb
mov
bound
ja
push
xor
jge
cli
push
insl
data16
inc
inc
xchg
and
cmp
fwait
cmp
push
adc
or
xchg
dec
mov
sbb
adc
call
sub
repnz
xorl
xchg
or
cmpb
mov
enter
mov
jecxz
in
inc
imulb
lret
mov
adc
clc
xor
cltd
movsb
mov
aaa
test
pop
arpl
mov
push
mov
lret
je
sbb
cmpsl
xor
xor
jg
xchg
mov
movsb
sbb
pop
push
mov
imul
mov
adc
lock
mull
dec
dec
aam
lods
or
adc
or
push
mov
mov
xor
inc
js
adc
inc
mov
mov
jo
clts
jge
inc
push
loope,pt
aad
cmpb
out
lock
adc
cmp
add
xlat
push
push
insb
inc
shr
sbb
divb
sub
jp
negb
ret
lret
mov
mov
push
sub
add
pushf
gs
lret
cli
mov
jecxz
out
fwait
out
mov
sub
jnp
add
xor
sbb
xlat
adc
fdivrl
jp
jle
test
jno
xchg
and
pop
in
push
scas
out
sub
push
mov
mov
xlat
jo
jne
mov
addr16
adc
push
loope
xor
scas
idivl
pop
xor
cld
dec
fnstenv
es
lock
js
inc
jne
jge
loop
sarl
and
test
cmp
pop
xor
test
mov
sbb
cmp
dec
cmp
or
mov
sub
imul
add
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
popf
pop
je
mov
les
mov
aaa
push
das
cmpl
jne
jne
sbb
test
out
or
sub
div
jmp
push
popf
sti
loope
lock
push
arpl
sbb
aam
and
arpl
add
mov
scas
ret
mov
in
in
mov
push
bound
cmp
jle
dec
jnp
inc
cmp
push
pop
lods
mov
ret
xchg
ret
push
add
mov
fldcw
push
outsl
mov
pop
pop
into
decl
jmp
and
dec
mov
fistpl
lds
lcall
or
inc
das
add
loop
out
aas
outsb
push
out
fdivrs
mov
jl
icebp
xor
in
and
stos
cltd
jnp
insb
jmp
sarb
jbe
push
push
adc
mov
into
repnz
mov
mov
jmp
aaa
pop
into
ror
imul
insl
shlb
aas
rcl
dec
jg
mov
add
jbe
fisubrs
rolb
push
lea
addr16
mov
fisubrl
das
jb
mov
dec
aas
jmp
popf
cld
cwtl
cs
add
mov
jp
scas
dec
push
insl
add
dec
popa
loopne
stos
lods
lds
xlat
mov
push
sub
xor
mov
xlat
fmulp
nop
std
jmp
inc
xor
sar
and
stc
pop
stc
push
daa
test
fbld
xor
mov
cli
ljmp
mov
lock
fcompl
jnp
fsubr
ret
mov
sbb
inc
out
dec
mov
fstcw
xchg
add
pushf
notl
xor
mov
mov
bnd
loope
rorl
pop
cmpsl
xchg
xor
push
pop
arpl
stos
mov
mov
iret
add
xlat
mov
add
and
mov
xchg
addr16
dec
cmp
js
shlb
xor
pusha
xor
test
cltd
jne
push
xchg
xchg
int3
mov
frstor
inc
mov
out
aas
lret
pop
fstl
enter
sub
mov
aam
push
xchg
mov
pop
movsl
sub
fmuls
adc
imul
int3
push
and
mov
xor
loopne
cmp
movb
and
sbb
mov
jns
int3
mov
lock
push
or
in
pop
loop
lahf
lret
or
push
lcall
mov
cli
or
inc
xchg
jle
lods
test
mov
ret
inc
popf
and
imul
ss
sbb
inc
stc
iret
scas
pop
in
iret
popf
jae
push
mov
xlat
push
enter
not
mov
stc
cmp
dec
fistl
push
test
adc
aaa
mov
lret
in
dec
sahf
test
jne
mov
xor
pop
hlt
cltd
icebp
mov
mov
jp
push
icebp
sbb
stos
and
xchg
lcall
bound
mov
dec
insb
adc
add
lahf
jp
inc
imul
mov
pop
fcomp
jp
jns
cmp
and
orb
add
sbb
add
test
add
add
add
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
push
hlt
iret
mov
les
ret
adc
cmpsb
fldt
dec
cmp
pushf
int
fcompl
jb
lock
jns
or
and
jb
adcl
popa
aam
das
aas
jne
mov
ficomps
imul
push
add
adc
adc
lods
sub
lds
push
pop
mov
stos
adc
xor
ret
arpl
scas
mov
daa
test
je
or
shrb
dec
mov
dec
mov
inc
or
aad
scas
pushf
push
push
sahf
dec
xor
fsts
and
lods
dec
sub
iret
mov
push
mov
mov
jg
jnp
push
mov
shll
pop
or
add
mov
cmp
and
aaa
push
jae
rclb
aad
enter
mov
push
mov
cltd
jg
orb
sub
dec
xor
test
jg
xchg
in
xor
add
add
jbe
inc
ds
push
andl
and
out
shl
imul
and
add
leave
push
lret
es
dec
push
cmpsl
fldenv
ja
lahf
fistps
adc
fcompl
out
out
hlt
hlt
jmp
pop
or
sub
fs
add
out
hlt
jl
fcmove
rcr
xor
pop
pop
fcoml
dec
sub
rolb
int
in
cmpsl
mov
repz
xchg
fidivrs
enter
and
rcll
sbb
test
cmp
and
test
mov
mov
cwtl
mov
jnp
ret
xor
das
cltd
jmp
push
pop
lea
imul
ds
std
adc
hlt
jp
mov
xchg
fs
mov
sub
xor
xchg
mov
popa
jbe
pop
mov
inc
cmpl
dec
out
push
jp
stos
fists
stos
js
pop
imul
adc
loopne
xor
inc
ret
mov
xor
in
lcall
fs
jo
in
sti
loopne
lds
stos
mov
scas
js
lea
xlat
pop
xchg
mov
xor
lahf
mov
adc
sub
add
sarl
out
shlb
movsl
adc
or
arpl
and
mov
or
sbb
cmp
fadd
fisubl
lret
imul
out
cmc
inc
inc
imul
movsb
xchg
daa
mov
xchg
inc
pop
mov
cwtl
jmp
adc
lcall
add
fcmovu
jne
jmp
stos
mov
testb
popf
ds
neg
sahf
int3
inc
pop
loope
mov
in
jmp
inc
jo
xchg
mov
or
dec
sub
in
pushf
add
mov
push
test
adc
inc
out
push
cwtl
insb
andl
mov
cmpsb
repz
add
adc
loope
pop
mov
jb
inc
fs
sahf
js
xchg
in
ja
xor
xchg
lds
leave
pop
int3
lock
into
mov
lock
dec
mov
mov
adc
jo
jg
rorl
mov
divb
cmpsl
out
dec
or
outsb
rol
flds
int3
divl
jmp
push
fcomp
xchg
mov
fidivl
push
fbld
cmp
mov
xor
dec
sub
in
inc
mov
add
jge
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fstl
stos
jecxz
call
mov
xchg
les
mov
pop
imul
adc
and
mov
neg
insb
pop
sub
and
in
shlb
dec
popf
add
stos
push
dec
and
test
xor
stos
ret
xor
call
insb
daa
movsb
daa
mov
push
stc
test
adcb
out
xchg
xor
adc
pop
push
sbb
sub
jbe
cmp
cmp
sbb
lahf
jp
ja
aam
xlat
mov
imul
sub
loope
mov
std
xor
ror
filds
xor
mov
lcall
test
mov
xchg
lock
jl
je
add
xchg
push
mov
sub
lea
pop
int3
in
pop
loop
lds
in
inc
mov
lods
outsb
adc
push
adc
cs
lahf
movsl
addb
and
and
push
subl
andl
lds
sub
mov
lcall
sbb
adc
ljmp
sbb
inc
sbb
sub
gs
aaa
mov
mov
das
fimull
sti
clc
fucomi
mov
jp
test
mov
push
cmc
popa
ljmp
stc
popa
pushf
gs
pop
mov
sbb
enter
lret
test
pop
mov
sub
enter
outsl
popf
and
pop
faddl
xchg
push
fistpl
and
out
fdivrl
and
inc
testl
in
pop
ret
sbb
jb
ljmp
les
rclb
push
pop
xor
or
fists
cltd
mov
adc
push
int
lods
je
xchg
jns
scas
add
popa
fs
xchg
arpl
mov
add
fldt
push
xor
sub
mov
sub
imul
inc
int3
fsub
pop
jmp
sbb
add
inc
dec
int
lock
or
and
inc
cmp
mov
inc
and
inc
xchg
aad
sbb
sub
push
sti
test
fdivl
rorl
daa
jns,pn
lahf
jmp
add
jmp
xchg
sub
lds
sub
nop
mov
and
ret
add
aam
xchg
icebp
mov
xchg
stos
adc
push
cmp
push
cmpsb
imul
push
xchg
pop
nop
fldlg2
movsl
repz
mov
sbb
stos
aaa
mov
pop
movsb
aaa
jle
mov
rorb
aas
add
jnp
imul
in
mov
mov
cld
inc
shll
pop
pop
sub
shl
data16
out
stos
jle
loopne
mov
or
mov
out
in
lret
out
outsb
in
mov
pushf
popf
cmp
mov
mov
in
aaa
imul
cmp
sbb
enter
xor
pop
xor
jp
cmp
and
sarl
psrad
popa
lcall
xlat
inc
in
test
jne
mov
jl
aam
shrd
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
roll
cmp
movb
lods
or
or
lahf
mov
lods
xchg
dec
pop
mov
cmp
pop
mov
pop
mov
scas
insb
cmp
mov
loopne
loop
lods
and
out
ljmp
leave
xor
out
stc
in
mov
or
mov
fildll
and
jne
outsb
jae
leave
jno,pn
cmp
movsl
pop
test
decb
frstor
cmp
jno
jbe
add
nop
orl
sbb
orl
or
rcll
jne
daa
push
add
mov
fldt
xchg
imul
rclb
notb
dec
xchg
mov
test
hlt
aas
icebp
sbb
ret
push
cwtl
cli
orb
mov
jbe
or
ficomps
and
mov
ja
or
push
lahf
idivb
aad
dec
je
add
pop
insb
inc
push
mov
jbe
lret
cmp
mov
ds
int
mov
test
pop
pusha
xor
jbe
or
adc
sub
sbb
leave
int
jge
cwtl
outsb
imul
xor
popf
int3
jnp
rorb
scas
into
rorb
into
pop
enter
sbb
js
insb
imul
pushf
and
push
cli
jle
icebp
inc
sub
icebp
ret
xor
in
test
xor
lret
ds
outsl
lock
loope
or
jno
lret
jb
sahf
mov
pop
daa
out
push
ja
jne
cmp
mov
and
insl
mov
mov
dec
xchg
xchg
and
cmpsb
fisttpl
std
aad
dec
lock
fstps
lcall
lea
movsl
cmp
pusha
cmp
mov
mov
insl
popa
pusha
mov
inc
mov
and
xchg
stos
cmp
ja
bound
mov
imul
jl
xor
mov
adc
cmp
dec
and
sub
adc
mov
jb
dec
stc
adcl
ret
pop
fdivrs
ret
test
ljmp
mov
sub
and
mov
movsl
jmp
daa
cwtl
add
sbb
mov
pop
pop
cmp
test
sbb
roll
xlat
add
scas
cs
fdivrs
dec
lods
out
shlb
mov
pusha
sub
pop
pop
mov
xchg
in
and
inc
mov
inc
outsb
pop
test
addl
sub
rorl
lods
movsb
imul
mov
lcall
and
jbe
mov
pop
inc
adc
and
ror
jg
push
jp
and
scas
and
bound
out
stos
and
mov
addr16
std
insb
pop
cwtl
jl
fistl
out
add
cmp
daa
adc
iret
sbb
xchg
jecxz
push
repz
dec
sub
add
in
and
push
add
shrl
hlt
or
mov
arpl
mov
inc
cmc
les
mov
or
imul
jo
sub
adc
add
mov
inc
test
and
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
roll
cmpsb
jecxz
cmc
mov
mov
fsubl
loop
jno
aad
ljmp
loopne
fdivs
xchg
cmc
aas
mov
cmp
xor
cmpsl
xor
jle
daa
dec
mov
aaa
mov
and
sbb
aas
test
jle
and
movsl
or
pop
xchg
mov
dec
push
scas
adc
fcmovb
or
sub
mov
ret
xlat
test
pop
add
mov
lcall
loope
xchg
fistpl
ficomps
push
lods
icebp
xchg
and
das
add
lcall
mov
repz
in
or
test
jl
fiadds
js
push
int
mov
jae
movsl
push
xlat
or
or
int
cli
adc
es
pop
loop
cmp
xchg
mov
adc
fscale
aad
sti
inc
inc
or
mov
inc
test
test
mov
jo
mov
std
lret
rcr
lcall
jmp
je
mov
and
in
xchg
xchg
mov
mov
mov
jnp
out
in
cmp
int3
rcll
jmp
shll
movsl
bound
jbe
dec
fcoms
lds
movsb
frstor
aam
cli
jbe
sub
and
adc
xchg
orb
fwait
mov
cwtl
xor
rclb
xor
sbb
push
ljmp
mov
sbb
xchg
in
jno
and
add
pop
mov
and
ds
or
std
std
je
test
adc
mov
rcrl
mov
jo
outsb
mov
xchg
sbb
push
mov
insb
adc
faddl
add
pop
mov
imull
iret
stc
jmp
xchg
sbb
sub
jg
addr16
push
mov
xchg
test
add
dec
fisttpl
cmp
and
or
pop
lret
clc
mov
mov
enter
addr16
leave
mov
cwtl
push
push
fimuls
mov
outsb
sarl
cltd
lret
and
fbstp
adc
lret
out
mov
fists
cmc
pop
repnz
xchg
cmp
sti
adc
sub
fcmovb
shrl
mov
add
nop
pusha
xchg
jne
add
mov
cmp
xchg
mov
cmp
stc
sbb
sbb
testb
or
pop
sub
sbb
pop
dec
pop
stc
ret
push
in
and
aad
out
dec
aam
repz
jmp
scas
xchg
push
adc
push
rorb
xor
leave
inc
scas
add
pushf
cmp
fdivs
addr16
cmp
pop
popf
add
jp
jo
jle
test
das
add
add
and
mov
shll
mov
scas
and
sbb
mov
dec
xchg
lcall
jo
adc
and
cwtl
push
sahf
out
jns
inc
mov
insl
addl
aaa
into
pushf
mov
adc
shlb
and
dec
in
pop
stc
xlat
adc
mov
hlt
mov
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
insb
lock
out
cld
pop
xchg
rclb
adc
add
sbb
mov
sbb
loop
dec
cmpsb
aad
mov
inc
lahf
scas
pushl
lret
movb
lret
sbb
sti
xchg
int
out
jge
shll
sbb
jno
pop
xlat
mov
jns,pt
js
imul
inc
pop
mov
ds
sbbl
adc
pop
adc
mov
jl
call
mov
jns
adc
notb
rorb
or
ret
popa
jp
push
cmpsl
sarl
push
push
pop
mov
push
cmpsl
pop
es
subb
dec
sub
insl
aad
pop
adc
ret
filds
jnp
sub
repz
insl
mov
rolb
test
or
jmp
icebp
fs
rcl
jle
lret
push
inc
jge
rcr
pop
fs
push
push
mov
adc
or
inc
mulb
imul
imul
pop
add
rcrb
rcrl
push
add
je
imul
stc
imul
mov
or
pop
cs
lret
pop
add
test
mov
stos
jo
je
outsb
pusha
mov
repnz
xchg
and
sub
dec
shrl
iret
jae
int
mov
sbb
push
jno
pop
xor
out
loope
je
pop
add
sbbl
dec
xchg
cmpsb
lds
sbb
adc
jne
loop
dec
dec
or
in
mov
shlb
add
jnp
imul
xor
mov
pop
jbe
or
push
pusha
xchg
inc
push
cmp
xchg
push
mov
pop
mov
xchg
mov
lret
ja
pop
mov
cmp
inc
push
sbb
es
outsb
sarl
and
iret
push
lds
pop
ja
in
lock
mov
je
mov
mov
ss
sub
add
arpl
daa
loopne
and
lret
in
leave
cmp
fistpll
lret
fstpl
pop
gs
add
sub
aas
fistl
enter
or
lea
sar
sti
cltd
jno
mov
sbb
cmp
adc
mov
cmc
jns
pop
lea
jo
pop
sbb
lods
xor
pop
jl
cmp
cmpsl
out
movsb
adc
push
addr16
imul
sub
mov
add
ds
and
mov
aam
mov
xor
or
pop
dec
jnp
pop
xchg
mov
mov
sub
mov
addr16
dec
data16
test
pop
daa
inc
xchg
mov
mov
cld
aas
xchg
lahf
dec
mov
gs
pop
ljmp
mov
and
adc
jge
or
xchg
fnstenv
out
fsubrp
xchg
xchg
in
jns
lea
das
xchg
arpl
dec
cmp
inc
fstl
fisubl
jno
mov
jecxz
pop
movsb
cmp
inc
mov
data16
fwait
andb
es
and
in
add
sbb
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
jmp
outsb
fnstsw
les
mov
mov
mov
lds
jb
pop
fldenv
cmpsb
mov
xchg
sar
enter
xchg
add
sbb
and
sbb
fsubs
icebp
push
pusha
xchg
lret
xchg
xor
pop
cmp
jne
scas
enter
idivb
rcll
adc
xor
cmpsl
mov
cmp
dec
call
ret
push
outsl
push
mov
jae
arpl
mov
xor
je
inc
movsl
cld
mov
or
scas
clc
cmp
adc
cmp
inc
mov
or
pop
xlat
sub
mov
pop
jl
jbe
sub
dec
test
dec
stos
dec
bound
add
adc
mov
jge
jp
and
in
jl
pushf
jg
mov
rcrb
mov
aaa
shl
repnz
cmp
xchg
pop
xor
shll
and
push
sub
or
aaa
sbb
mov
push
xchg
mov
mov
imul
rorb
push
lret
push
in
shrb
dec
mov
cmpsb
fwait
cmp
jl
xor
arpl
in
push
fnsave
das
dec
ficoms
add
in
test
fisubrs
jmp
xor
mov
shl
cmp
mov
imul
xor
xor
rcr
xchg
lds
outsb
pushf
icebp
cmpsb
adc
mov
mov
mov
pop
jmp
inc
mov
mov
mov
hlt
icebp
popa
cmpl
iret
fadds
lods
mov
shrb
iret
mov
adc
sbb
cwtl
jb
inc
cmp
ljmp
jle
lcall
adc
dec
xor
push
xor
dec
rcrb
lcall
shlb
add
and
mov
clc
xor
cltd
jmp
jb
clc
cli
add
sbb
test
repz
pop
mov
cltd
jae
push
sbb
in
repnz
scas
jbe
shll
xor
mov
cli
lods
xor
sbbl
jns
add
xchg
lahf
sub
cli
add
xor
aaa
sbb
mov
fnstenv
hlt
mov
das
mull
pop
sub
adcb
inc
ret
mov
adc
push
pop
scas
jmp
aam
inc
fisubs
cmp
adc
shlb
movsb
cld
leave
pusha
mov
pop
shrl
lcall
sub
adc
fisttpll
mov
fidivs
cltd
push
lea
add
push
adc
icebp
iret
das
jmp
jae
xlat
mov
adc
cmp
xchg
inc
bound
push
push
int3
dec
lcall
sbb
loop
dec
insl
xlat
insl
jns
pop
jg
inc
shrl
xor
cmp
test
fidivrs
lock
mov
cmp
inc
test
addr16
mov
stos
sbb
sub
enter
push
mov
adc
push
lea
ljmp
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
dec
sahf
push
sahf
mov
les
mov
cmp
adc
cltd
shll
sub
test
cmp
and
inc
fnsetpm(287
adc
rcrb
xchg
ss
rolb
aas
gs
out
pop
outsb
clc
in
sbb
ss
ficomps
in
pop
mov
psubq
dec
add
push
repnz
data16
pop
jo
fstl
push
mov
loop
inc
xlat
add
fsubl
movl
mov
xor
cmp
lods
rclb
mov
mov
jne
js
test
loop
add
inc
xor
dec
loop
and
dec
mov
pop
stos
jmp
mov
inc
mov
mov
push
inc
push
test
mov
jge
movsb
mov
inc
and
jne
pop
loope
repz
xor
nop
adc
arpl
leave
xor
mov
lcall
les
pop
pop
sti
inc
cmpb
hlt
inc
aam
sub
adc
and
ss
fisttpll
jno
iret
aaa
cmp
mov
xchg
enter
lods
mov
in
jns
jo
add
test
bound
adc
ret
inc
jns
lahf
push
mov
push
hlt
dec
daa
pop
add
imul
outsl
in
int
stos
sbb
int
sub
cmp
lods
dec
iret
dec
outsl
test
stos
mov
jne
lret
jae
outsl
xor
mov
mov
shll
mov
out
pop
jecxz
lods
or
arpl
jmp
mov
pushf
inc
sub
popa
ret
xor
push
insb
mov
bound
jno
jge
or
sub
pop
sbb
pop
adc
or
xchg
sbb
fdiv
mov
pop
push
and
pop
lods
out
call
ss
pop
xchg
inc
pop
cld
insb
sbb
sub
dec
adc
inc
fbld
stc
ds
cmp
mov
push
xor
mov
xor
call
testb
outsb
dec
aam
lcall
sti
adc
aam
cmp
sbb
popf
test
and
adc
insb
jnp
shrl
imul
loop
addr16
ficoml
xor
ss
pop
scas
es
lahf
jle
stc
fs
pop
movsl
cmpsl
mov
mov
loope
push
mov
fldlg2
fiadds
pop
shll
inc
sbb
sar
ljmp
and
xor
inc
and
daa
lds
aad
inc
imul
nop
test
test
jne
mov
jg
mov
bound
mov
add
std
aas
dec
jg
fcomps
jne
lods
pop
std
out
or
adc
lods
sub
sbb
ficoml
add
add
pop
sahf
shrl
iret
cmp
xor
outsl
add
in
push
pop
jo
jbe
pushf
push
cwtl
ss
mov
int
cs
aad
lahf
add
cltd
pop
or
mov
mov
xchg
in
add
lods
mov
jo
fwait
push
mov
lret
mov
jo
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
jp
jecxz
adc
mov
add
and
inc
mov
inc
sbb
push
cmpsb
sbb
mov
sbb
add
adc
inc
mov
popa
movsb
mov
sub
xchg
mov
cmp
mov
adc
ret
test
stos
lods
fidivrs
jecxz
mov
pop
sub
jl
loopne
ja
jb
jno
rolb
lock
fisttpll
push
ficomps
push
sub
mov
pop
dec
jmp
inc
mov
out
pop
pop
aaa
ja
mov
xlat
mov
push
in
or
int
mov
popf
sub
arpl
push
xchg
popa
lcall
inc
movb
push
mov
leave
fmull
xlat
dec
dec
dec
cwtl
mov
mov
jae
mov
loop
fildll
cmp
mov
adc
int
or
sar
cmp
push
cmp
hlt
mov
cmp
sbb
les
fistpll
out
adc
aad
sbb
loop
jle
iret
mov
adc
les
test
adc
fstl
mov
mov
enter
or
sti
inc
mov
add
pushf
pop
sbb
outsl
outsb
test
loop
in
inc
in
popf
in
fstpt
inc
mov
lea
mov
in
popa
or
mov
ja
cmpsb
adc
or
push
inc
cmp
sbb
xor
mov
mov
inc
adc
sub
cli
fwait
lods
cmp
out
fnsave
add
in
in
loop
or
cmp
movsl
xchg
push
sbb
mov
pop
mov
push
hlt
cmp
fidivs
mov
pop
sarb
xchg
sub
in
jge
sub
bswap
sub
xchg
xor
insl
and
fldcw
cltd
insl
sub
dec
jnp
xor
int3
sbbb
jns
loop
mov
fstpl
daa
jb
leave
std
bound
aam
sbb
add
push
ret
stos
sub
push
cmpb
fwait
sub
pushf
and
hlt
inc
and
jge
aad
and
mov
and
mov
test
ja
pop
sbbl
add
sbb
add
push
or
xchg
rcrb
in
in
mov
fnstsw
mov
aaa
adcb
andb
addr16
adc
pop
xchg
nop
jp
inc
lahf
addr16
ljmp
push
cld
mov
mov
push
sbb
pop
leave
imul
cmp
mov
iret
or
jl
inc
push
sbb
out
xchg
inc
mov
fsubrl
xchg
mov
ret
and
xchg
subb
and
pop
fwait
aad
stos
or
or
xchg
clc
aas
pop
push
cmp
cli
cmp
loope
clflush
sbb
mov
and
mov
movsl
xor
push
add
mov
sti
jl
aam
lret
add
fwait
arpl
cs
adc
mov
ret
inc
xchg
out
jecxz
mov
roll
pusha
dec
or
fadds
push
movsb
imul
ja
outsl
push
pop
fildl
mov
out
dec
fiaddl
adc
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
or
mov
daa
aas
pop
les
mov
push
dec
into
imul
shll
mov
scas
or
and
xor
adc
imul
cmp
loope
dec
das
fcompl
aam
hlt
xlat
lret
push
push
das
fistpl
aad
mov
clc
sbb
push
stos
bound
inc
jecxz
jns
out
sub
lods
outsb
lea
xchg
add
in
pop
sti
sbb
int3
in
sub
xchg
iret
xor
jno
test
mov
sub
cmp
mov
lcall
ss
and
adc
test
sbb
subb
mov
das
adc
imul
cltd
xor
dec
jle
leave
pop
stos
or
dec
xchg
sub
cltd
cli
mov
punpckhwd
icebp
icebp
notb
outsl
in
popf
lcall
daa
and
fstpt
dec
xor
inc
cli
sub
mov
add
fistps
sarl
subl
fs
sub
cmp
int
dec
inc
xlat
lahf
std
cltd
mov
sti
lods
pop
scas
inc
call
jge
fstl
int3
adc
outsb
mov
cli
adc
push
add
jmp
inc
pop
push
js
int
aad
scas
into
sarb
outsl
test
sbb
mov
sub
dec
xchg
cmpsb
sub
imul
push
ficoml
daa
push
rcrl
mov
push
mov
inc
je
push
lcall
adc
fwait
cmp
pop
dec
push
or
ljmp
xchg
jnp
xchg
mov
inc
hlt
pop
loopne
pop
xor
jle
xchg
adc
mov
dec
loop
jno
clc
cmp
movsb
pop
cwtl
mov
into
mov
into
adc
mov
adc
testl
lock
xchg
mov
push
mov
stc
sbb
imul
mov
icebp
inc
int3
xchg
mov
mov
pop
and
push
add
dec
ljmp
mov
xchg
test
xchg
inc
lods
sbb
pop
dec
push
sbb
cmp
sub
and
aam
bound
cmovo
subb
arpl
jl
xlat
mov
sarl
imul
dec
subb
or
xor
pop
push
in
mov
out
imul
aaa
rcrl
xchg
dec
cmp
push
sarb
cmp
pop
push
std
jns
add
push
rolb
hlt
xor
mov
sub
je
sahf
std
and
jmp
inc
push
mov
push
or
loopne
xor
adc
hlt
xor
xlat
inc
mov
jecxz
imul
mov
jb
fnstcw
push
js
push
out
pop
fdivs
inc
pop
arpl
mov
rcl
cld
jbe
out
and
xchg
sti
add
or
pop
cmpsl
mov
loopne
cli
aas
mov
clc
xlat
pushf
repnz
add
push
push
jge
xor
icebp
inc
jle
shl
pop
xor
sbb
add
popa
jns
add
pop
inc
add
or
mov
dec
not
jmp
int
mov
sbb
mov
rorl
pop
mov
mov
inc
mov
shld
aaa
dec
addr16
popa
loop
pop
aad
aas
mulps
test
fnsave
pop
pop
adc
test
psubusb
jl
inc
xchg
test
jp
cmc
and
aam
pop
in
roll
fistps
out
adc
jp
enter
sub
or
lea
inc
xchg
xor
popa
xor
mov
jle
into
jp
cmp
lcall
cmp
jle
cltd
fisubrs
daa
mov
cld
add
xor
fidivrs
cld
mov
addr16
mov
js
mov
cld
mov
xor
rorb
mov
pop
jbe
mov
pop
adc
ss
mov
pop
push
paddsw
add
imul
push
push
insl
dec
test
and
testl
loope
push
adc
pop
fs
addr16
dec
test
pop
bound
popa
mov
out
adc
enter
inc
mov
andb
outsl
lret
adc
and
push
call
int
outsl
ret
dec
les
pop
jp
mulb
inc
dec
shll
cmp
rorl
sarb
jle
cmpsl
call
aam
rolb
fidivrs
fwait
xchg
mov
mov
loopne
ficompl
insl
je
dec
nop
pop
and
mov
mov
dec
inc
addr16
scas
dec
mov
fiaddl
out
inc
out
enter
movsb
repnz
or
pop
insl
inc
inc
sub
mov
outsl
cld
mov
or
in
loopne
xchg
repz
cmp
xor
dec
lahf
faddl
mov
mov
cmp
stos
xor
arpl
xchg
movsl
or
mov
adc
mov
je
dec
sub
mov
xchg
jbe
popf
icebp
rcr
loop
ss
sbb
inc
mov
sbb
out
fstpl
sub
cmp
test
mov
pushf
movsl
addr16
sub
xlat
icebp
or
inc
mov
xchg
popa
jbe
cs
loopne
sbb
mov
popa
or
push
aad
mov
pop
mov
lret
or
sarl
push
test
dec
jle
xchg
dec
movsb
outsb
test
cmp
aam
cwtl
or
adc
jmp
int
inc
push
or
dec
enter
rcrl
sbb
stos
or
mov
lock
inc
mov
rcr
rolb
pop
in
leave
xchg
cmc
jno
push
or
cmp
jnp
cmp
icebp
xchg
orl
mov
into
cmp
pop
xor
sbb
pop
fldcw
int
mov
outsb
je
mov
mov
xchg
adc
mov
mov
popa
pop
fisttpl
insb
xor
inc
movsb
push
push
std
fidivl
jnp
inc
mov
dec
push
sarb
in
lock
ret
xor
les
es
data16
nop
loopne
lods
push
jge
add
in
sahf
test
ja
pop
sbb
jle
mov
mov
dec
ja
ficomps
and
jns
lods
push
mov
sar
cmpsb
arpl
pop
lods
push
cmpsl
sbb
mov
pop
push
adc
push
movsb
dec
or
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
popf
push
xor
mov
les
mov
roll
loop
jne
adc
or
cltd
or
sbb
imul
out
adc
pop
inc
push
out
scas
inc
push
hlt
sub
pop
mov
imul
sbb
xor
pop
push
imul
cs
call
dec
loop
clc
push
jl
mull
push
test
push
add
and
repnz
push
je
xor
cwtl
test
fisubrl
xchg
pop
xchg
test
cli
lods
fwait
add
dec
into
xor
fwait
in
movsl
sbb
sahf
push
enter
addl
sub
incl
icebp
stos
sub
leave
and
jnp
fcomip
aam
inc
xchg
insl
sbb
mov
inc
adc
cmpsl
xchg
inc
in
xor
sahf
dec
pop
or
push
lods
mov
dec
xchg
jb
sbb
jne
push
ror
arpl
xchg
cltd
rcl
or
popa
cmpsl
ljmp
push
das
lahf
and
loope
mov
mov
ja
out
adc
movsl
aaa
es
or
js
and
mov
daa
insl
and
xor
mov
test
test
leave
cmp
jmp
sbb
jmp
and
leave
aad
je
mov
icebp
jge
and
or
xchg
popf
add
or
loop
test
pop
rolb
add
pop
cmpsl
fstpl
nop
fildll
lret
sub
push
pop
pop
cmpsl
xor
fisttpl
dec
or
xchg
dec
ja
jp
adc
sbb
out
movl
push
out
or
sahf
dec
jne
pop
sub
js
and
pop
mov
push
lods
and
pop
mov
push
fisttpl
je
jp
jge
jne
call
mov
push
mov
xlat
jge
scas
dec
sub
repz
sbb
xor
push
nop
mov
insl
jmp
lods
push
gs
das
scas
mov
mov
push
aad
ret
mov
inc
aad
icebp
or
mov
push
arpl
clc
mov
jge
sti
dec
add
inc
and
icebp
subb
gs
test
push
mov
js
mov
cmc
sti
fs
stos
push
movsl
lahf
dec
xor
std
inc
fistpl
pop
in
or
in
or
in
inc
sub
adc
xchg
jg
push
test
jecxz
xchg
jle
xlat
in
int3
andb
jne
xor
and
rorb
out
mov
ret
sti
pop
fidivrs
loope
cmc
pusha
fldl
adc
hlt
adcl
xchg
testl
fcompl
sbb
jp
jge
inc
inc
xchg
xor
xchg
aas
inc
jne
mov
xchg
mov
inc
or
xor
xchg
and
mov
mov
mov
clc
mov
mov
add
and
loop
dec
fstps
mov
fistpll
or
cmpb
cmp
les
fcomi
push
and
dec
add
enter
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
fstl
fnstsw
les
mov
iret
out
and
lds
mov
ficoms
jmp
es
lods
sub
and
outsb
adc
inc
sahf
or
xor
out
ljmp
or
push
mov
nop
cmc
add
push
cltd
in
fld
mov
add
imul
repnz
cmp
sbbb
or
pop
ret
xor
scas
xlat
lahf
test
test
mov
add
dec
cs
dec
mov
and
and
mov
dec
push
loopne
push
push
test
xchg
fisubs
mov
daa
mov
or
adc
sahf
test
and
movsb
sti
or
out
sbb
cmpsl
pusha
into
mov
sub
in
aas
arpl
mov
sbb
lods
je
push
xor
nop
mov
sbb
mov
mov
ficompl
popa
ret
or
das
sub
test
cltd
sahf
adc
push
out
xchg
or
aaa
push
cmp
stos
aad
loopne
xor
fcmovnbe
aad
or
aam
xchg
push
pop
cmp
nop
dec
shrl
mov
addl
mov
in
dec
sub
mov
cmc
icebp
cmp
mov
mov
cld
rcl
or
mov
jmp
sub
enter
sub
sti
add
dec
hlt
es
jmp
mov
sub
imul
sti
enter
call
ds
sahf
shrl
xchg
je
xor
push
mov
in
int3
jae
test
cmp
mov
pop
jb
jp
add
imul
adc
sbb
adc
lock
jg
cmc
and
inc
inc
cmpsb
xchg
out
dec
xchg
loope
leave
mov
push
in
leave
cmp
xor
stc
dec
fwait
repnz
jns
ret
loope
loope
adc
inc
lahf
stos
mov
pop
dec
push
dec
or
fistpll
jo
add
addb
inc
cmc
push
push
int3
test
mov
sub
mov
pushf
push
dec
xchg
inc
dec
xor
mov
fadd
inc
inc
adc
jg
or
sar
jns
gs
jne
cld
jae
sbb
mov
outsb
adcb
ud2
xor
push
test
arpl
sub
loop
xlat
ret
adc
push
js
ret
stos
out
cmpsb
pushf
or
in
nop
orb
sbb
shll
push
jl
mov
fcmovnb
jnp
addr16
mov
arpl
scas
push
ficompl
jno
lods
adc
mov
add
pusha
jge
add
in
push
inc
or
pop
pop
ds
jno
sbbl
lret
aad
or
jecxz
mov
aaa
nop
addr16
jmp
jge
or
push
test
cmp
fisubs
xchg
ljmp
xchg
movsl
jno
mov
cltd
and
mov
mov
push
cltd
std
sbb
sub
xchg
and
loopne
fists
test
sbb
std
loope
push
push
pop
dec
test
test
popf
dec
das
cltd
push
cmpsl
mov
in
jnp
or
cmp
add
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
dec
shll
xor
mov
outsb
pop
icebp
rcrb
xor
js
inc
inc
out
je
pop
lock
mov
sbb
dec
int
mov
mov
scas
fisubl
sar
aam
mov
jl
outsb
mov
imul
pop
ds
stos
fucom
or
clc
mov
ds
out
sub
rcll
ss
testl
repnz
fcmovb
out
and
mov
iret
mov
rcr
mov
pushf
pop
push
ret
sub
stos
dec
sub
arpl
xor
jnp
inc
mov
mov
in
mov
dec
jo
add
xchg
push
lret
cmp
pusha
dec
sub
jo
int
mov
mov
cmp
sbb
add
out
mov
into
mov
mov
test
xchg
and
js
add
in
mov
and
repnz
testb
mov
movsb
xor
int
add
mov
stos
insb
scas
pop
shlb
jl
bnd
mov
out
jp
inc
cwtl
in
out
sahf
es
or
repnz
nop
repnz
pop
push
outsb
rcll
xchg
xor
hlt
jo
nop
aam
sbb
and
push
xchg
and
xlat
push
add
outsb
in
jae
inc
or
mov
jae
std
in
xor
sub
nop
mov
push
jo
add
add
das
add
ja
push
mov
xchg
push
and
orl
in
ret
jmp
inc
test
std
jge
test
gs
jno
mov
test
xchg
fstpl
rol
lret
mov
sub
mov
sbb
mov
or
pop
mov
int
add
add
dec
dec
or
pushf
dec
out
pop
mov
push
mov
mov
mov
das
jb
cltd
and
jns
sbb
push
xor
cmpsl
cs
iret
mov
jb
lods
pop
js
xchg
mov
mov
das
sub
jns
and
pop
divb
hlt
clc
mov
and
cmp
jp
sbb
adc
shrb
mov
sub
lret
inc
pop
outsb
mov
mov
push
lcall
xorl
and
jp
popa
adc
lods
es
and
jge
popa
ficoml
mov
push
add
sub
lahf
add
testl
mov
or
jmp
mov
xorl
xor
into
imul
imul
jae
mov
pop
icebp
adc
xchg
andb
cs
sbb
jp
cmc
pop
jne
dec
mov
adc
adc
and
ljmp
sub
xchg
xchg
out
sub
scas
mov
cmp
aaa
loop
adc
and
xor
mov
es
ljmp
mov
cli
pusha
inc
jmp
inc
mov
cwtl
insb
data16
scas
sbb
add
xchg
adc
inc
ror
jbe
adc
sub
cmp
and
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
loope
mov
les
aad
mov
mov
add
je
push
mov
stc
jl
ret
jne
mov
xchg
fsts
jge
cmpsl
daa
push
xor
mov
pop
cmc
test
inc
cld
mov
dec
xchg
mov
in
xchg
repnz
lret
scas
adc
popa
mulb
stos
repnz
std
and
das
notb
iret
outsb
loopne
aas
push
ljmp
hlt
movsb
bound
or
sbb
inc
sbb
push
out
pop
movsb
xchg
xchg
pop
imul
add
xchg
loop
sahf
divl
jno
outsl
add
xchg
push
js
inc
insb
cmp
and
mov
mov
jbe
add
jnp
lcall
dec
adc
add
repnz
std
xchg
loope
inc
push
movsl
popf
jl
sti
in
inc
xor
cltd
jns
pop
cmp
stc
lahf
je
cmpsb
mov
repz
cmp
dec
cmpsl
push
cmc
daa
adc
out
xchg
imul
xlat
jne,pn
push
scas
push
mov
dec
mov
mov
imul
mov
inc
xorb
sti
movb
mov
out
scas
shlb
add
sub
fnstcw
ss
lods
adc
sub
inc
and
lds
fs
xchg
cld
out
cmp
sbb
pop
xlat
orl
mov
aaa
xchg
mov
sbb
testl
addb
mov
push
add
stos
mov
ffree
pop
stos
int
pusha
stos
aam
cli
push
mov
aas
outsl
add
jmp
adc
xchg
out
leave
or
adc
repz
fs
dec
lcall
bound
lods
stos
sub
sti
jae
mov
mov
dec
add
ljmp
stos
sbb
xor
fwait
dec
arpl
dec
popa
or
popf
push
mov
cmc
lcall
sti
sub
and
dec
xor
jb
and
clc
sub
or
lods
and
push
mov
pop
dec
add
es
sub
mov
dec
push
inc
add
cmp
jno
std
cmc
in
fcomp
ds
fdivr
ljmp
lods
lret
test
pop
mov
aam
sub
test
fildll
mov
cmp
ss
sub
cli
pop
xlat
fmull
sbb
mov
movsl
mov
loopne
and
in
data16
mov
sbb
sub
rorl
mov
dec
movsl
cmp
mov
lods
testl
stc
sub
scas
mov
dec
ret
test
aaa
xchg
sbb
test
in
push
negb
fsubrs
push
push
adc
mov
sub
adc
out
daa
test
divb
cmp
xchg
or
jns
push
mov
jecxz
aas
xchg
test
sub
rorb
stos
flds
loope
rolb
leave
mov
pop
mov
cmpsl
fisttpll
xor
repz
stos
xchg
push
rorb
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
scas
loop
sarl
les
fsin
cltd
mov
das
cld
icebp
sbb
fs
cmpsb
cmp
mov
add
div
push
pop
pop
enter
imul
cmp
inc
sbb
adc
mov
xor
dec
popf
in
repnz
push
dec
out
fldl2e
outsl
sbb
inc
outsl
call
test
cmp
lea
lahf
lods
test
hlt
pop
add
clc
push
sub
lret
push
idivb
inc
movsl
sti
push
fcompl
into
xchg
ret
push
adc
xor
cmp
and
or
fscale
cwtl
mov
sub
int3
aas
sbb
cmc
repz
aad
xor
or
cmp
popa
xor
xchg
xor
test
addr16
outsb
scas
rcrl
call
adc
outsl
call
mov
jae
not
pop
lds
fs
fildll
push
jo
stos
mov
push
pop
lcall
and
dec
pop
and
dec
inc
out
dec
cmc
popa
jp
call
aam
popf
in
popf
xchg
out
cmpb
push
imul
loope
inc
xchg
jne
push
repnz
insl
pushl
pop
popa
arpl
or
imul
aam
add
pushf
xchg
int3
mov
xorb
cmp
in
or
push
lret
dec
in
aaa
inc
mov
mov
push
mov
add
mov
push
mov
mov
mov
dec
addb
ret
push
pop
fstpt
arpl
and
jl
push
insl
push
xor
adc
pop
sbbb
jl
push
dec
outsb
fwait
jnp
sbb
fs
xchg
add
movsl
stos
mov
and
add
add
pop
and
ljmp
dec
clc
ficomps
cltd
xor
cli
pushl
fs
ja
pop
adc
mov
xor
pop
daa
mov
scas
jp
mov
scas
cld
scas
ret
xchg
fmuls
push
aam
scas
dec
sub
dec
out
lods
add
push
xor
cli
pusha
popa
scas
sbb
js
enter
push
cmp
jp
push
repnz
push
scas
mov
dec
or
pop
clc
pop
xchg
sbb
push
jns
into
push
push
xor
pusha
lahf
xor
xchg
rol
mov
or
or
push
hlt
call
lea
int
insl
rolb
stos
enter
cmp
mov
enter
pusha
clc
push
pop
scas
mov
inc
mov
sbb
mov
test
pop
jle
pop
sahf
jl
jle
fstl
inc
and
add
pop
dec
mov
int3
rcl
ret
jg
and
aas
and
inc
fbstp
lret
mov
jle
jg
pop
sahf
fwait
out
enter
repz
sub
jecxz
jge
cs
dec
mov
pop
or
jne
xor
data16
add
sahf
cmpsb
stc
or
mov
movsb
xchg
imul
and
add
mov
mov
dec
fidivrs
aad
adcl
adc
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
jns
dec
cs
adc
nop
bound
ret
aad
clc
dec
pop
pop
cmpl
dec
pusha
es
lret
in
xor
sbb
jb
pop
das
push
dec
int
notb
add
or
lret
inc
leave
cmp
push
lds
lods
les
in
sub
cmp
jmp
pop
fstp
xchg
xchg
xor
sbb
popf
lock
push
imul
add
xlat
out
or
sub
and
int
ja
loopne
inc
inc
or
bound
jmp
int
mov
ficompl
inc
inc
dec
lret
jns
jne
pop
rcrl
push
aad
cltd
fildl
jns
stos
jae
mov
dec
daa
pushf
inc
aad
adc
mov
lods
lods
roll
test
mov
insl
test
jle
pop
jne
cs
cwtl
mov
pop
inc
sbbb
jg
lods
adc
sti
inc
cmp
pusha
sub
dec
sahf
and
sbb
outsb
sub
repnz
adc
jbe
fistl
lods
mov
adc
nop
mov
sub
adc
cmp
push
sub
mov
aad
push
addb
test
leave
or
pusha
rolb
into
arpl
cmp
lock
aam
sahf
or
pop
ja
jecxz
inc
flds
jbe
divb
push
jnp
adc
fcoms
push
add
push
movsl
jmp
js
enter
cmc
jnp
push
push
push
mov
mov
mov
sbb
xchg
inc
outsb
iret
loopne
dec
in
out
mov
jle
sahf
out
call
cmp
insb
pop
lahf
pop
push
les
inc
dec
test
std
das
push
mov
ret
mov
out
lret
ret
shrl
push
lret
sbb
mov
lret
jp
or
inc
fs
mov
xchg
or
test
mov
or
std
xlat
adc
inc
jo
test
add
int3
mov
sbb
mov
and
mov
lds
lock
icebp
xchg
cmp
shrl
and
out
sub
out
and
mov
hlt
stos
sub
mov
mov
add
stos
xchg
je
mov
mov
mov
aas
dec
mov
pop
mov
push
dec
adc
sarl
mov
adc
fwait
scas
in
xor
cmpsb
mov
fwait
stos
int3
sub
popa
dec
pop
mov
lret
into
rcrl
adc
jecxz
repz
adc
sti
inc
cmc
adcb
in
sub
cmp
cltd
data16
mov
adc
cmp
out
pop
dec
mov
sub
fistps
mov
dec
mov
cld
scas
lcall
loop
rolb
dec
out
daa
add
test
mov
cmp
lcall
mov
adc
daa
adc
loopne
ljmp
mov
push
add
mov
mov
insb
cmpsb
sub
push
lcall
push
shll
popf
stc
xchg
dec
add
insl
push
inc
xchg
inc
js
ss
xor
add
xchg
test
test
mov
xchg
imul
rolb
lret
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fldl
jo
mov
les
mov
mov
jp
push
fst
cmp
rcll
lds
daa
mov
in
push
loopne
push
mov
shlb
cld
scas
lret
cmpsb
imul
mov
faddl
cmp
add
pop
cld
out
mov
imul
loope
adcb
insl
in
ret
popa
mov
xchg
mov
jecxz
aam
ljmp
push
stos
rcrl
adc
mov
aam
insl
insb
inc
dec
icebp
test
movsb
mov
jle
push
aaa
sbb
popa
xor
adc
mov
and
lock
xchg
inc
lret
adc
bound
pop
jmp
mov
lods
jo
pushl
sub
cmp
adc
and
shll
xlat
jl
addl
loope
adc
sub
lea
adc
out
es
call
mov
dec
in
or
pop
sbb
mov
xchg
scas
push
outsl
pop
cmpsl
js
push
js
mov
in
mov
push
nop
lods
mov
fwait
stc
test
adc
jmp
jnp
and
mov
inc
daa
sub
inc
rorb
jb
mov
xchg
das
cltd
fidivrl
sbb
lcall
out
xchg
ja
stos
sub
sbb
cmpsl
mov
enter
es
sbb
sbb
sti
inc
cmp
mul
pushf
dec
lret
xlat
rcrl
mov
cmpsl
adc
dec
add
dec
mov
or
pop
or
cltd
mov
lret
dec
push
jns
mov
insl
stc
ljmp
or
xchg
push
idivb
vmovdqu
ret
mov
arpl
stos
jo
outsb
adc
inc
mov
cmpsb
fldenv
sub
arpl
outsb
insl
cmp
mov
sbbl
jnp
jge
and
mov
aas
push
mov
jg
mov
sbb
mov
das
xchg
fwait
pop
int
scas
mov
mov
adc
pop
aas
lock
pop
jbe
rolb
enter
xor
jns
xor
cmp
jnp
into
rorb
andl
pop
shrl
ja
and
inc
mov
daa
and
or
orb
jle
fwait
mov
jmp
xchg
ret
add
sbb
mov
dec
aad
dec
fildl
mov
hlt
arpl
lods
ret
cmp
adc
jmp
jno
daa
push
mov
push
mul
sahf
js
iret
divl
lock
cltd
jle
sub
sub
call
push
dec
mov
adc
sub
cld
scas
mov
inc
int3
and
sbb
pop
jo
movsb
adc
outsl
clc
aam
push
sub
dec
fdivp
and
inc
push
hlt
cwtl
mov
xor
push
xor
or
gs
mov
xchg
push
xor
insb
outsl
or
lods
stos
mov
faddl
add
xor
call
popf
stos
xor
int3
mov
lahf
xorl
ret
fildll
mov
add
xchg
or
faddl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
adc
iret
mov
les
ret
pushf
nop
sub
fistl
mov
cmp
push
out
push
dec
adc
add
stc
push
cli
or
nop
js
pop
loopne
mov
xorb
mov
dec
sbb
push
and
or
cmpsb
mov
call
pop
push
mov
stos
or
shlb
xorl
adc
cmp
mov
cmp
lock
sbb
inc
add
mov
mov
scas
dec
bound
pop
inc
aaa
push
push
insl
scas
lods
popa
xchg
mov
jg
and
cmpsb
mov
nop
loopne
lea
outsl
adc
mov
xchg
jmp
xor
repnz
cmpsb
cltd
lock
fisttpl
aas
push
mov
add
dec
jns
jne
or
xchg
jge
and
cld
add
sarl
nop
ds
sbb
push
out
xlat
cmp
mov
dec
faddl
inc
fists
pop
pop
es
mov
and
movsb
lcall
test
jae
hlt
sbb
sub
ret
ret
cmp
lret
aad
nop
les
sti
int
pop
leave
cmp
push
inc
pop
xor
std
xlat
mov
sub
mov
dec
or
out
add
xchg
adc
fisttpll
jmp
data16
es
add
mov
fidivrs
mov
sti
std
jo
lods
adc
addr16
cmp
jne
cmpsl
scas
cwtl
xchg
loope
in
lods
lods
mov
pop
fcompl
and
shrl
push
inc
in
lret
jle
sbb
call
lea
arpl
pop
roll
push
push
add
out
jbe
loop
jecxz
sahf
shll
std
xchg
pop
sbb
mov
xchg
pop
or
imul
int
repnz
pushf
es
inc
xor
dec
sub
inc
push
xchg
inc
fisubrl
loopne
outsb
pop
adc
aaa
pushf
orl
call
mov
data16
shlb
sbb
push
cmc
addr16
xor
pop
mov
dec
pop
xor
mov
mov
mov
nop
inc
lret
cmpsl
cld
push
push
jecxz
cmc
in
push
cmp
pop
test
sahf
cwtl
in
adc
scas
mov
or
mov
je
test
adc
inc
das
gs
repnz
dec
or
std
stos
adc
movsl
jl
int
sub
mov
adc
test
mov
test
xorl
clc
dec
xlat
or
xlat
xor
scas
sti
add
and
shrb
mov
lds
inc
xor
je
loopne
xchg
sub
xchg
xchg
ret
jmp
mov
in
fwait
in
push
ficompl
gs
je
lcall
stc
jmp
repz
rcr
pop
int3
mov
aad
jns
jp
mov
insl
pushf
mov
push
push
jl
xchg
and
ss
cmp
int
xchg
outsl
in
add
inc
ljmp
loopne
push
jbe
adc
cs
dec
and
icebp
and
xchg
pop
or
cli
enter
ret
mov
dec
push
pushf
inc
repz
imul
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
mov
pop
mov
mov
std
icebp
and
pop
out
or
lods
addr16
add
push
out
je
push
sub
jge
mov
inc
in
adc
out
pushf
out
mov
mov
subl
sbb
inc
pop
xor
lcall
lcall
movsw
ficoms
out
cmp
test
pushf
and
outsb
xor
loopne
inc
repnz
loope
pop
pop
popl
mov
jle
and
inc
xchg
xor
ss
xchg
fstpt
cld
lahf
inc
arpl
test
dec
lahf
fsubl
xchg
and
std
xchg
mov
popf
in
ret
clc
jmp
xchg
and
push
dec
aaa
mov
sbb
inc
jb
lds
insl
jbe
fildll
je
xchg
mov
aas
fsubl
xchg
insl
sub
scas
in
push
lret
incb
inc
pop
and
fnsave
dec
in
lcall
and
sbb
iret
xor
loopne
jmp
jb
dec
lret
pop
popf
sti
adc
pop
xchg
or
sub
lock
lea
mov
sbb
pushf
fs
stos
sahf
lods
xor
inc
test
mov
xchg
adc
xor
fcompl
fisttps
cs
sbb
loop
fimuls
add
sbb
outsl
xchg
mov
cwtl
mov
xor
daa
mov
cmc
call
orl
dec
daa
in
js
inc
jnp
dec
cmp
mov
pushf
and
mov
mov
add
inc
cmp
scas
imul
add
or
add
mov
inc
test
mov
fprem1
and
lahf
dec
push
or
jns
hlt
xchg
sahf
imul
jmp
and
xlat
push
cmp
mov
xor
pop
inc
addr16
fcoms
xchg
and
lret
stos
popf
insl
fwait
inc
pop
in
add
cli
in
pop
fmuls
xlat
mov
inc
mov
push
test
jmp
push
fwait
scas
sbb
ret
sub
cmp
rcrl
out
insl
loope
ds
sub
mov
ret
daa
and
icebp
in
or
mov
inc
sbb
jb
add
sbb
arpl
js
xor
and
sub
cmp
int
cmc
call
or
enter
cwtl
dec
inc
outsb
push
pop
pop
lods
pop
mov
test
push
out
jecxz
inc
stos
outsl
dec
jge
push
xlat
xor
inc
cs
xor
in
sbb
push
test
xchg
or
addr16
std
aam
test
adc
sti
stos
xchg
or
shld
lds
rolb
ja
lret
gs
jb
pop
dec
loope
ror
inc
movsl
sub
xchg
inc
cltd
or
aad
jg
arpl
dec
jbe
push
mov
bnd
loop
cmp
cmp
and
icebp
insl
loope
mov
xor
inc
or
sar
lds
sbb
flds
frstor
lods
jnp
fisubrl
mov
aad
pop
je
and
add
stos
rolb
dec
xchg
adc
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
cs
mov
les
mov
repz
or
xchg
and
daa
or
es
jne
push
clc
cltd
out
orl
ljmp
std
xchg
lahf
pop
clc
and
inc
jmp
in
mov
das
stos
inc
fcmovb
mov
insb
movups
call
arpl
xor
nop
call
mov
inc
gs
lret
outsl
sbb
mov
mov
pop
cmp
sarl
sbb
mov
xor
ljmp
out
imul
push
popf
test
gs
hlt
rcll
and
std
mov
add
imul
das
outsl
cmp
out
jle
popa
fisttps
mov
pop
fisubl
aad
sbb
mov
iret
test
movsl
mov
mov
jbe
sbb
inc
push
lcall
xor
daa
cmp
ret
into
pop
lods
adc
rolb
xor
call
gs
sti
das
xchg
or
mov
test
add
sahf
push
in
ficompl
push
adc
mov
adc
add
dec
es
call
lea
mov
fisubs
mov
adc
mov
mov
fisttpll
outsl
xchg
cmp
xor
mov
sbb
lahf
stos
loop
dec
and
inc
sbb
pop
movsb
andl
fstl
adc
cld
sub
mov
in
rorb
mov
leave
outsl
and
jl
iret
cltd
sbb
data16
jge
push
pop
pop
rcrw
imull
mov
pop
std
push
addr16
mov
xchg
scas
fisttpl
out
pop
cmp
inc
sar
push
aas
xchg
scas
sub
mov
divl
imul
xorl
mov
xlat
adc
std
je
call
cmpsb
movsl
xchg
lods
push
cmp
jg
add
mov
pop
in
loopne
rcrb
nop
pop
ret
sub
fwait
pop
out
cmp
push
ret
roll
cmpsl
inc
xchg
push
adc
inc
cltd
fwait
sbb
xchg
inc
sahf
jo
in
xor
into
push
arpl
roll
pop
add
icebp
into
aad
push
outsl
push
leave
lods
jge
sahf
bound
sbb
cmp
jl
int
mov
sub
mov
stos
cs
cmp
mov
jmp
pushf
dec
pushf
test
mov
cmpsw
fucomip
mov
inc
xor
cmpsl
mov
mov
push
insb
aam
xor
mov
xor
dec
sbb
data16
jle
add
sub
imul
ja
shrb
sti
cmp
dec
jmp
fidivrs
aam
and
mov
lret
lret
adc
mov
or
pop
insl
pusha
adc
cli
cli
xchg
jbe
imul
xchg
jmp
fisubrl
bound
push
cmp
stos
clc
pusha
jns
xchg
rol
test
fcomps
xor
mov
pop
mov
jp
dec
in
or
jl
fisubl
aas
outsl
sarl
or
add
iret
stos
mov
pop
xor
xchg
imul
jo
sbb
xor
movsl
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
cmpsl
popf
mov
les
xchg
mov
and
or
stos
outsb
jo
sub
out
inc
movsb
jae
cmp
outsl
pop
pushf
popa
pop
and
out
movsb
rol
and
dec
fisubl
jne
pop
fdivrs
scas
mov
pop
push
in
movsb
mov
popa
aaa
cmp
in
das
je
pop
insl
mov
mov
shll
and
mov
inc
pop
adc
xchg
jecxz
mov
in
xor
fs
sbb
imul
xchg
lods
sub
mov
loop
daa
test
leave
js
push
sub
stos
xor
dec
jmp
pop
out
sahf
cmpsb
mov
cltd
arpl
xchg
inc
inc
lret
int
outsb
xchg
test
and
and
and
fsub
mov
cmpsl
adc
sarl
adc
sahf
pop
aaa
nop
in
mov
xchg
or
and
cmp
push
lcall
cs
jb
out
jle
jecxz
clc
mov
add
pop
sbb
cmpsl
mov
pop
push
mov
movsb
jbe
mov
adc
fwait
dec
dec
mov
sub
push
test
scas
adcl
jg
sbb
imul
and
sbb
mov
mov
sbb
xchg
adc
adc
push
inc
add
cs
jl
outsl
scas
dec
push
pop
loopne
mov
testb
add
in
sub
iret
mov
test
xchg
dec
push
dec
ret
lahf
in
cmpsl
inc
add
fisttps
imul
pop
cmp
jg
sub
mov
sbb
lods
cli
ljmp
iret
lret
xchg
ret
sub
aad
xchg
xchg
ds
push
or
or
pop
test
mov
lea
cwtl
iret
sbb
cmp
cmc
xlat
push
or
inc
outsb
imul
cwtl
jecxz
sub
out
pop
dec
or
or
xchg
adc
cmpb
cmp
and
aad
rcr
sub
or
pop
notb
push
ja
sub
stos
int3
sbbl
aas
push
rorl
push
lcall
jne
mov
js
shlb
out
stos
adc
dec
cmp
mov
jle
and
fldenv
and
mov
aad
lcall
or
jl
lret
mov
pop
test
dec
add
mov
adc
cmp
cltd
lods
xor
into
nop
cmp
jge
dec
clc
xlat
dec
mov
icebp
xor
test
xchg
cltd
loopne
mov
filds
dec
rcll
data16
push
js
pusha
int3
gs
into
xor
jb
lret
mov
cli
sub
xor
aas
movsb
fs
push
popa
dec
mov
inc
imul
cmp
and
stc
sub
int3
inc
xor
jg
add
jl
sti
mov
inc
inc
iret
fildl
stc
arpl
xor
cltd
jae
add
push
xchg
adc
or
jo
fcmovnbe
sbb
jge
mov
adc
jae
arpl
mov
clc
jecxz
cmp
dec
sbb
stc
jb
and
dec
dec
popa
xchg
imul
shll
ljmp
xchg
dec
stos
insl
inc
sbb
mov
mov
pushf
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
xchg
outsb
jb
mov
les
mov
idivb
sbb
sbb
pop
mov
sahf
ret
scas
jle
js
and
or
fucom
jp
bound
jne
dec
stos
cmpsl
jno
push
in
add
outsl
inc
sub
das
inc
xor
repnz
imul
outsb
in
popf
sub
mov
mov
out
dec
int
fldenv
andb
pusha
fwait
jns
fs
mov
mov
mov
ss
or
andl
out
jmp
inc
jp
dec
sub
test
mov
jae
or
lock
out
ss
push
aas
popa
into
scas
test
adcl
inc
adc
xchg
sub
xor
movsl
mov
fildll
clc
cmpsb
push
xchg
mov
cli
push
xchg
mov
pop
or
xor
int
adc
ljmp
in
shlb
cmp
push
hlt
jge
xchg
and
ret
mov
outsl
lock
sbb
cmp
and
andl
jno
inc
push
lea
push
stos
jge
insb
fadds
inc
scas
cld
and
pop
ljmp
mov
fs
inc
inc
inc
in
loop
mov
xchg
ret
int3
push
and
pop
scas
xor
dec
mov
test
bound
add
fstpl
fwait
int
nop
mov
pop
and
scas
and
inc
ret
jae
sub
faddl
pop
sbbb
daa
sarl
mov
std
test
int
xchg
aas
inc
outsl
ret
and
add
push
stc
divl
pop
sahf
jb
scas
xor
das
cmp
adc
jnp
dec
stos
add
movsb
test
cs
mull
sub
sub
incb
and
pop
sbb
jp
arpl
and
test
mov
ficoml
push
xchg
jmp
xor
divl
mov
out
arpl
enter
xchg
pusha
sbb
xlat
mov
dec
cs
stos
jg
and
mov
aas
movsb
fldl
loopne
push
pusha
and
stos
orb
in
and
mov
xacquire
pop
int3
pop
into
fcmove
fidivrl
sbb
mov
push
mov
testl
in
loopne
aaa
add
mov
pop
jge
mov
imul
push
js
add
js
adc
sub
sub
js
out
pushf
pushf
mov
dec
test
dec
adc
cwtl
cwtl
lret
and
sub
or
jmp
cwtl
hlt
and
add
stc
lcall
mov
fistpll
out
cmp
jae
decl
aas
lock
js
and
in
cmp
clc
adc
cmp
fcmovb
outsb
lds
push
and
sub
inc
rcr
lods
add
call
ja
arpl
addr16
les
out
jmp
sub
or
or
push
bound
jmp
scas
sub
gs
rol
ljmp
pop
inc
mov
dec
mov
lret
mov
ss
in
in
cmp
adc
aam
outsl
out
cmp
push
js
add
cmp
add
fstp
jge
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
rcrb
mov
mov
push
and
faddl
and
cmpsl
cmp
or
dec
stos
gs
push
mov
xchg
movsl
lahf
jmp
fcomp
std
jbe
bound
out
out
out
and
rclb
ja
xchg
call
scas
mov
lock
sti
repz
dec
fcmovu
repnz
repz
out
pop
cmpsb
push
add
js
push
cmc
rol
push
cmc
jns
push
mov
or
pusha
in
in
lods
adc
mov
inc
sub
xor
sub
gs
arpl
adc
pop
ds
pop
cld
pop
iret
mov
pop
push
dec
mov
sub
addl
es
cmp
sub
fistps
sbb
mov
jbe
cmp
mov
inc
mov
mov
lock
pushf
pop
push
fidivrl
mov
std
adc
aaa
sub
jge
ljmp
inc
pop
xchg
gs
notl
sbb
lahf
mov
nop
push
or
enter
mov
xlat
and
add
push
cmp
push
stc
jmp
push
cwtl
and
and
adc
jecxz
xchg
movsl
in
jb
enter
mov
addl
mov
imul
sbb
mov
pop
inc
sub
jo
mov
mov
mov
rorl
cld
cmp
outsb
jne
sub
jb
ljmp
mov
mov
mov
mov
stc
int3
jle
testl
scas
mov
sti
hlt
insb
icebp
data16
std
dec
xor
cmp
and
and
addr16
push
inc
ffree
out
ret
int3
jmp
jge
into
pop
imul
test
aam
mov
pop
icebp
add
outsl
pushf
mov
inc
ret
aas
hlt
gs
jb
int
mov
xor
movsl
pop
and
sbb
sub
ss
incl
jecxz
cmp
mov
mov
mov
fcomip
es
push
pop
jp
insb
dec
stos
ret
testb
ficomps
movl
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
sti
fxch
movsb
jp
mov
mov
and
out
scas
pop
pop
mov
mov
movsl
aaa
lcall
aam
test
mov
push
xlat
loope
hlt
xchg
mov
or
fldcw
mov
mov
pop
lcall
xor
adc
std
ret
jmp
int
xor
mov
mov
cwtl
jmp
mov
ss
lret
int3
rclb
cmp
ret
sub
in
addr16
lea
testb
adc
cmpsb
loopne
and
jp
jno
ret
cwtl
dec
out
push
out
xchg
add
xlat
jnp
inc
inc
aas
pushf
cmp
dec
mov
repnz
lret
adc
cmpsl
in
mov
mov
scas
pop
pop
test
inc
ja
stos
add
and
push
ficoms
push
sahf
outsb
sub
fld
sub
jp
sbb
das
xchg
mov
pop
jp
ss
gs
sub
push
repz
pop
sbb
dec
imul
adc
jmp
pop
mov
push
jp
add
pop
in
mov
mov
sti
stc
mov
sbb
inc
das
aad
repz
or
jg
lret
sub
sbb
ret
lea
or
cltd
jle
xchg
sbb
and
je
clc
rcrl
in
cli
lcall
pop
lods
outsb
outsl
aam
arpl
mov
add
mov
mov
stc
pop
sarl
push
cmp
int3
pop
sar
pop
cmp
jle
scas
cmpsb
hlt
negl
iret
inc
push
push
inc
movsb
jno
push
mov
inc
daa
test
mov
jbe
fistpll
jo
fistpll
je
into
lcall
lahf
out
inc
inc
int3
adc
and
jns
add
subb
mov
test
fsts
push
das
xor
out
dec
lea
out
mov
inc
push
je
je
or
int3
push
test
push
mov
adc
stc
adcl
imul
adc
mov
xchg
js
sbb
sub
jp
shrl
cmpsl
adc
in
xchg
inc
iret
mov
movl
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
pusha
xor
mov
mov
jp
cmp
mov
cld
xor
push
js
movsb
arpl
cmp
push
or
xor
test
lret
cmp
pop
and
outsl
sub
jo
pop
arpl
fistpll
jecxz
lds
das
xor
adc
xchg
dec
push
mov
xchg
xchg
jmp
shl
xchg
lcall
andb
and
or
xor
pop
dec
imul
pop
lret
or
push
xchg
in
cmp
test
add
je
mov
push
cmp
mov
cmp
imul
mov
sbb
dec
xchg
hlt
scas
movsb
pusha
sbb
push
mov
mov
lahf
jo
in
jecxz
arpl
enter
int3
shlb
xchg
xlat
mov
dec
cmc
das
loopne
shl
xchg
mov
adc
jmp
fucomi
in
addb
lock
mov
fstp
xchg
push
jo
mov
sub
daa
push
mov
popa
mov
and
dec
jp
shlb
cli
add
dec
push
shlb
lea
testl
mov
mov
fistl
add
adc
outsb
test
xchg
push
cs
gs
mov
roll
push
outsb
xor
adc
pop
sti
test
mov
jb
stos
mov
jecxz
iret
mov
cmpsl
mov
ss
dec
mov
mov
lahf
pop
sub
ficompl
iret
lret
divl
or
ljmp
add
int3
xchg
pop
mov
fstl
les
lret
adc
inc
aad
xchg
mov
inc
sti
push
jb
dec
xchg
test
negb
aam
mov
add
js
pop
mov
cmp
xchg
sbb
divl
cwtl
insl
fimull
push
mov
pop
lcall
jo
jmp
cs
jle,pt
mov
xchg
stos
in
lock
jb
imull
rorl
jg
and
adc
lahf
test
xchg
addr16
out
popf
mov
test
cmpsb
fidivrs
sarl
pop
jno
cwtl
push
sub
ja
jmp
adc
xcrypt-cbc
cmpsl
push
mov
jge
inc
add
popa
add
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
cmpsl
jmp
mov
mov
inc
sti
sbb
xlat
cmpsb
sub
pushf
std
jns
push
cmpl
push
jp
imul
loop
fidivrl
fwait
fs
andb
dec
xor
sub
sti
sub
and
std
push
push
stc
jle
jno
dec
sbb
xor
push
sub
and
jmp
push
and
jecxz
cmp
jbe
fstps
adcl
and
fwait
das
xor
cmpsl
neg
arpl
shll
smsw
fwait
push
mov
fs
lods
imul
mov
sub
cmpsl
out
movsb
mov
fwait
pop
mov
movsb
pop
cmp
cmpb
pop
mov
sbb
push
mov
adc
cmc
dec
xchg
jbe
jmp
jmp
sub
cmp
and
push
insb
jp
and
stos
jmp
mov
and
pop
ljmp
mov
cmp
xor
jo
push
std
xchg
pop
mov
scas
add
pop
push
call
cmp
sbb
je
or
cmc
lea
mov
mov
adc
stos
cmp
dec
dec
popl
insl
inc
or
les
in
scas
fsubs
and
sbb
icebp
rorb
pusha
jp
shlb
hlt
ret
stos
add
mov
push
jbe
dec
into
mov
mov
imul
mov
insb
aam
dec
sub
je
jbe
sbbb
dec
push
xchg
and
lahf
sbbl
dec
cmp
jle
je
inc
icebp
outsb
dec
lock
push
push
mov
jno
or
inc
dec
stos
adc
xchg
movsb
adc
int
jecxz
ljmp
stos
enter
daa
or
out
cltd
cmpsl
fidivrs
xchg
aam
ficompl
cli
test
inc
insl
in
daa
jb
call
jbe
mov
adc
pop
pop
mov
mov
popa
aas
leave
push
mov
mov
dec
out
cmp
fadds
mov
jg
jle
addr16
xlat
gs
dec
imul
fidivrs
dec
fdivrs
sub
bound
test
addb
dec
aam
jl
add
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
mov
sahf
scas
mov
mov
aad
push
out
in
adc
adc
inc
inc
in
data16
push
jo
push
sub
cli
fiadds
mov
mov
sbbl
or
mov
iret
lahf
and
mov
jp
pop
es
pop
push
or
sub
xchg
arpl
mov
xor
sbb
cmp
sub
cmp
mov
call
lret
fdivr
std
aad
cs
jo
sub
or
pushf
cmc
push
mov
dec
call
nop
cmp
mov
jle
scas
sbb
addl
nop
js
mov
or
fs
in
pcmpeqd
daa
or
mov
sbb
test
test
mov
shlb
jne
clc
push
pop
xor
cmp
inc
xchg
pushf
popf
rcr
and
cmp
setae
xlat
ds
fimull
gs
adc
stos
mov
mull
xor
xchg
test
add
les
adc
dec
ror
dec
add
cwtl
push
xchg
jae
jns
scas
jbe
subl
and
adc
jge
jmp
hlt
das
pop
in
push
xchg
iret
sbb
jns
jno
inc
repnz
and
ds
roll
iret
arpl
and
loope
adc
mov
jb
divl
xor
dec
fldt
mov
jmp
cmp
cmpb
push
sti
dec
int3
aaa
or
leave
fcomps
xor
inc
testb
cmpsb
and
jg
mov
xor
adc
mov
cmp
in
and
xchg
movsl
inc
push
mov
addr16
test
and
out
clc
jl
cmp
outsl
lea
arpl
cmpsb
sti
in
adc
dec
loopne
data16
push
fwait
movb
and
push
or
insb
arpl
mov
xor
test
pop
pop
in
orl
or
out
sarb
xor
pushf
xchg
sub
or
insb
or
or
mov
in
jge
cmpsb
ret
dec
scas
xchg
adc
pop
xor
mov
xor
and
adc
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
jo
imul
jge
movsb
mov
rcll
and
lea
or
in
mov
pop
sbb
lock
or
push
ljmp
dec
add
fstpt
hlt
inc
sub
dec
jle
pop
and
into
lods
mov
outsl
shrb
mov
cmp
or
cmp
push
push
stos
js
icebp
in
cli
inc
or
pop
inc
dec
xchg
int3
in
or
fidivrs
xlat
sar
adc
sarl
push
xlat
mov
mov
adc
sahf
fdivrl
xchg
ret
andl
inc
inc
mov
adc
aam
sbb
dec
lahf
sbb
jp
xchg
ds
sahf
lock
mov
test
cmp
arpl
fdivrs
les
les
jle
test
cmp
test
es
push
ja
or
cli
jb
mov
xchg
icebp
adcl
mov
mov
dec
fmull
in
sub
es
outsb
mov
imull
leave
andl
rol
fisubl
in
dec
xor
aas
cmpsl
movb
sbb
and
in
gs
cmc
cmp
ds
movsb
push
or
add
adc
pop
mov
or
ds
add
lret
xor
cmpsl
neg
rorl
jnp
loope
mov
and
sbb
cmp
inc
out
pop
cli
pop
dec
mov
sbb
push
or
sahf
jp
sub
sbb
or
fldenv
mov
into
xor
pushw
cmc
shl
adc
push
cmp
outsb
aam
jg
mov
push
jle
out
andl
jg,pt
pop
dec
sbb
fs
cwtl
ret
pop
push
inc
cmp
mov
pop
xchg
call
mov
push
sbb
push
inc
cmp
pop
adc
dec
mov
test
cmp
mov
sbb
xchg
xchg
lods
int3
sbb
lcall
setge
hlt
inc
fdivr
sahf
adc
repnz
cmp
mov
popf
repz
iret
push
mov
cmp
fiadds
sbb
jb
mov
xor
inc
cmp
mov
xor
mov
lret
mov
push
mov
push
in
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
fwait
sbb
es
mov
mov
repnz
int
adc
ficoml
and
dec
or
nop
mov
cmp
scas
sub
push
mov
or
fwait
addr16
pop
pop
lds
push
rolb
xor
lret
cli
jne
shll
les
int
sub
dec
in
xor
mov
aam
xor
sarl
xor
icebp
cmpb
sti
add
xchg
xorb
inc
pushf
lods
jne
dec
sahf
ss
shrl
icebp
iret
into
test
rorl
les
imul
mov
and
cmp
dec
in
fcmovnu
jg
pop
loope
mov
pop
stos
inc
jg
and
pushw
leave
jb
pop
scas
sub
push
outsl
lcall
and
jmp
mov
pop
xor
xchg
fstpt
sub
clc
test
fisubs
test
xorb
pop
add
movsl
inc
mov
lods
mov
fistpll
push
cmpsb
pop
push
pop
fucomp
inc
or
add
jmp
shlb
dec
mov
mov
mov
movsl
mov
clc
pop
cwtl
jb
fldl
pop
movsl
or
pop
sub
mov
aam
fimull
out
mov
cmc
pushf
jg
jl
sub
lods
sahf
mov
outsl
lods
inc
dec
gs
and
insb
add
xchg
flds
cs
aam
and
push
jg
cmp
lahf
movsb
push
lds
xor
popf
cmpsl
repz
add
fmull
jmp
adc
enter
mov
adc
fimull
sbb
jne
mov
or
pop
cmp
cmpl
xor
bound
or
push
inc
push
inc
mov
lret
lods
out
push
cmp
mov
inc
mov
in
jb
jno
push
test
push
cmc
arpl
mov
or
and
mov
shrl
cmp
xchg
sub
xor
lret
cmp
arpl
dec
xor
jnp
test
mov
mov
in
test
stos
or
lods
pop
nop
iret
or
xor
divb
aam
cs
bound
dec
inc
call
subl
std
ret
xor
jmp
xchg
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
lret
jbe
fstl
fwait
mov
mov
mov
sbb
dec
xchg
iret
out
add
mov
xor
sub
call
dec
in
jb
in
jae
stos
cs
out
add
and
pop
sbb
jle
movsb
into
adc
or
xchg
sbb
mov
mov
cmpsb
dec
clc
ja
gs
out
pop
fcompl
cmp
out
sbb
mov
push
and
pop
inc
dec
call
in
pusha
mov
test
xchg
and
add
dec
cmpsl
inc
sbb
mov
mov
test
pop
nop
mov
mov
sbb
imul
cli
out
sarl
data16
into
ljmp
daa
add
sbb
pop
loop
es
adc
inc
and
cmp
in
cmp
mov
push
pop
push
shr
cmp
shll
es
es
rcr
and
fadds
push
fsubs
lods
int3
xor
adc
out
fmul
and
jmp
mov
mov
sub
adc
aad
fsincos
jg
stos
lea
call
in
dec
rorb
test
mov
add
cmpsb
xor
jns
pop
fsubrl
call
push
fstl
fs
bound
aam
in
incb
fwait
call
pop
inc
int3
inc
lea
rcll
adc
sub
jns
mov
je
popf
xchg
insb
cltd
fimuls
push
xchg
sbb
or
xchg
jle
mov
sbb
cmp
mov
mov
into
test
je
adc
dec
pop
cli
imul
or
dec
mov
mov
xchg
push
fdivl
mov
or
jge
rcr
sbb
xor
scas
inc
jae
jle
cmp
mov
aas
push
filds
jl
call
mov
cwtl
xchg
js
push
jno
pop
or
xor
cmp
call
adc
call
xchg
int3
dec
mov
cmc
xor
sub
dec
push
mov
fidivs
dec
or
jmp
mov
pop
call
jbe
add
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
xchg
fadd
movsb
lahf
mov
mov
test
xchg
jle
jno,pn
cmc
out
add
fs
jnp
ljmp
and
enter
in
cmpsl
arpl
lods
lcall
jne
lret
sub
arpl
dec
xor
jp
stos
scas
bound
inc
dec
cmp
rcrl
sub
aam
xchg
int3
pop
mov
xor
subb
push
rorb
push
aad
or
mov
cmp
cmp
outsb
addr16
stos
fimuls
fcomip
js
pop
int3
imul
ret
out
movsb
iret
dec
adcl
inc
push
sbb
xchg
shll
int
lcall
fildll
xchg
ljmp
sarb
jle
pop
subl
jmp
mov
push
jp
inc
cld
mov
mov
aam
sub
and
and
mov
shrb
xchg
daa
inc
in
pop
lds
xor
jo
sbb
in
mov
subl
push
xchg
mov
movsl
dec
jge
cwtl
jns
aas
push
iret
pop
xlat
je
or
lret
jmp
test
lret
scas
mov
daa
push
or
punpckldq
fwait
stc
fsts
sbb
or
jmp
lea
stos
mov
xchg
repz
mov
push
jmp
dec
stc
mov
sti
fldt
scas
into
or
pop
scas
scas
inc
jg
sub
dec
call
lds
and
add
fsts
sti
cld
imul
lret
je
mov
popa
sbb
mov
movsb
andb
addr16
jmp
cmp
and
out
imull
sbb
cmp
pop
out
lods
hlt
ret
rcll
shl
lock
sbb
cmpsl
jbe
xor
and
mov
xlat
and
pop
sbb
sarl
ret
test
pop
xlat
lods
loop
xor
xchg
test
adcb
popa
mov
cmpsb
mov
mov
xchg
cmp
enter
test
es
pusha
loope
insl
insl
cmp
hlt
lcall
leave
jmp
shrl
ret
popf
call
push
fildll
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
sub
mov
popf
add
ret
pop
int
fst
fwait
or
inc
mov
sub
cwtl
cwtl
adc
pop
push
push
shrb
loopne
pushf
dec
test
or
punpckhdq
paddd
fistl
push
dec
mov
pop
mov
mov
enter
xor
xchg
lock
orl
xchg
fistps
lcall
bound
into
or
fldl
movsb
cwtl
outsl
test
jecxz
sbb
lods
not
cmp
loope
and
in
daa
push
fsubrs
mov
cmp
xchg
adc
into
xor
dec
cmp
xchg
nop
cltd
add
jl
xchg
mov
icebp
jbe
iret
loop
pop
daa
das
jno
js
pop
push
lcall
xchg
out
loopne
inc
scas
jno
cmp
adc
xchg
mov
fs
in
jg
jne
cmp
cmpsl
jae
aam
in
movsb
mov
jne
jns
out
lret
sub
push
or
mov
add
mov
icebp
scas
add
adc
in
adc
mov
insb
ja
repnz
mov
sbb
sbb
push
cmp
and
xorl
cmp
sub
ljmp
ds
xchg
ret
adc
pop
adc
sub
mov
js
in
push
mov
or
mov
sbb
adcl
lock
jno
lods
mov
js
fimuls
lods
repz
xor
rorl
lods
jecxz
cmp
daa
pop
adc
cs
xchg
popf
dec
inc
and
div
xchg
mov
loop
push
fnstsw
dec
flds
mov
or
jle
fsubr
inc
push
xor
popa
add
add
sbb
outsb
scas
cs
sbb
jo
mov
mov
sbb
aaa
ds
add
ja
jmp
xchg
inc
inc
aas
dec
call
add
push
add
jmp
mov
lret
lock
ljmp
bound
mov
ljmp
daa
pop
popf
lret
push
or
dec
sbb
pop
pop
daa
mov
adc
push
jb
arpl
shll
sub
mov
adc
cmpsl
stc
je
push
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
nop
aad
mov
mov
out
cmp
dec
jnp
in
mov
inc
cmpsl
xor
dec
fadd
xchg
inc
cmp
add
test
push
xor
dec
js
rcl
fisubl
jle
sub
cmp
je
add
popa
iret
lods
and
sbb
dec
push
mov
cmc
je
mov
lahf
scas
push
jno
aam
fiaddl
xor
push
lcall
adc
push
dec
pop
cmp
mov
aam
or
xchg
sbb
lods
outsl
cmp
arpl
pop
js
xchg
iret
notb
rcrl
lods
ljmp
pop
mull
popf
enter
int
jmp
lods
out
test
mov
cmc
js
push
fldt
arpl
xor
test
sub
push
popa
cwtl
adc
orb
inc
nop
xchg
sarb
lods
cmc
lea
cwtl
aas
jno
outsb
mov
push
jle
mov
cltd
sarb
pop
inc
not
push
fcmovbe
nop
jp
mov
out
sbb
add
inc
ficoml
into
popa
push
movsb
mov
dec
cmp
sbb
mov
mov
jnp
and
lret
iret
orl
jmp
xchg
cld
insl
jmp
mov
xorl
and
movsl
repnz
mov
dec
cli
mov
fwait
mov
shl
repz
and
iret
push
xchg
inc
sub
adc
xor
pusha
filds
in
mov
sub
addr16
sbb
and
ret
push
pop
dec
addr16
mov
adc
sub
adc
mov
lretw
jo,pn
xor
andl
push
push
pusha
addr16
push
adc
into
out
je
int
inc
and
xchg
adc
outsl
loope
out
pop
es
and
cmp
bound
jns
fstpl
sbb
mov
sbb
xchg
pop
das
mov
jmp
imul
sbb
fadd
out
inc
lock
mov
test
or
popa
adc
outsl
adc
inc
hlt
add
mov
insl
jmp
fs
push
movsl
push
jb
pop
daa
iret
push
or
das
movsl
dec
push
push
or
divb
out
aaa
cmp
inc
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fstp
push
fs
ret
mov
out
dec
mov
cmpsb
fwait
bound
sub
mov
xchg
or
jmp
push
xchg
and
movb
xchg
push
xor
pop
xor
push
inc
pop
pop
test
ds
int3
fwait
sbb
fdivl
dec
aad
and
xchg
xchg
stos
inc
dec
sbb
fsincos
daa
int3
push
pop
push
sub
rcll
sahf
jb
lret
mov
or
pusha
push
outsb
popa
hlt
lret
test
cmpsl
pop
icebp
adc
push
sub
out
mov
mov
stos
mov
sbb
pusha
mov
inc
dec
ffreep
pop
cli
cmp
sahf
jl
jle
lods
loopne
call
out
jl
add
sub
adc
lds
and
pop
mov
dec
nop
lahf
sbb
pushf
aad
test
add
cmpsb
mov
sbb
sbb
insl
push
xchg
sbb
rorl
testb
test
pop
mov
lock
pop
xor
out
mov
jnp
arpl
fstl
push
push
fs
jl
jmp
loopne
mov
sub
dec
mov
fsub
loop
ret
xchg
xchg
push
jecxz
out
pop
dec
incb
jo
mov
adc
mov
and
or
sub
inc
jns
out
xchg
rorb
dec
jmp
fstl
es
movsl
in
and
in
push
bound
ss
adc
adc
fildll
mov
sbb
in
adc
loope
xor
adc
es
cltd
add
cltd
adc
mov
xchg
in
aam
jmp
pushf
out
fcoms
mov
je
fs
inc
repz
std
and
std
scas
push
inc
insb
mov
push
inc
mov
lea
jnp
add
jg
adc
cmp
push
cld
test
std
sti
push
adc
pusha
and
cmp
int3
mov
outsl
arpl
fildll
xchg
repnz
lods
sbb
push
adc
jns
mov
mov
les
xchg
test
cwtl
pop
or
lret
aaa
cld
mov
aaa
mov
sub
add
push
call
es
dec
lods
push
pop
inc
es
faddl
insl
or
cmp
jg
sarl
fmuls
loopne
ret
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
xchg
sub
test
push
int
cwtl
sbb
fstpl
std
mov
pushf
clc
cmp
cmp
jnp
pop
xchg
pushf
sub
ltr
lods
mov
test
inc
jp
pop
enter
ss
ret
cmp
and
xchg
xor
fldt
push
int3
add
inc
int3
popa
mov
into
or
cmc
cmpsb
in
stos
cmpsl
outsl
mov
mov
cmpsb
cltd
cmp
pop
xchg
cld
mov
mov
xlat
and
popa
adc
push
cmp
cmpsb
sub
mov
add
sbb
mov
sbb
into
sbb
cmp
fcoms
xchg
pop
and
cli
adcb
inc
sti
das
icebp
push
sbb
mov
movsb
jg
mov
inc
scas
stos
jno
adc
and
stc
mov
jns
sub
aaa
xchg
loop
pusha
mov
add
push
mov
arpl
sbb
pop
sub
or
lcall
js
in
aam
scas
mov
mov
outsb
adc
not
mov
sub
inc
or
shll
mov
cmpsb
nop
fdivl
push
inc
xchg
cli
cmpsb
push
jb
mov
outsl
mov
leave
jle
inc
fwait
mov
scas
std
pusha
cmp
call
sti
cmp
loope
daa
mov
mov
cmp
sahf
push
insb
add
popf
pop
xor
scas
lcall
testl
ror
sbb
mov
mov
inc
or
decl
jle
imulb
mov
add
loope
mov
mov
xchg
icebp
into
push
pop
inc
imul
sbb
xchg
mov
int
xchg
jle
lret
add
mov
cli
dec
setae
stc
adc
mov
mov
adc
fwait
gs
cli
xor
rcrl
push
clc
add
mov
add
adc
aad
rcrl
jb
inc
lret
outsb
jmp
xlat
jae
movsb
and
inc
cmp
leave
mov
iret
mov
aad
mov
popa
adc
test
idiv
ss
inc
jae
mov
mov
mov
or
adc
stos
push
xchg
lcall
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
and
xchg
les
mov
cmc
mov
push
shl
pop
xchg
shlb
sub
and
and
loope
fwait
jge
subb
inc
push
iret
dec
push
cmpsb
mov
sub
stos
shll
xchg
mov
das
mov
xchg
cmp
add
or
push
push
cmpb
cmp
stc
push
push
and
lds
rep
shrb
xchg
bound
mov
or
addr16
ljmp
adc
mov
or
rorb
mov
inc
or
movsb
clc
cwtl
xchg
lods
push
add
mov
rcr
aad
test
and
iret
movsl
inc
jbe
cs
fidivrl
sbb
jmp
cmpsl
jo
mov
push
xchg
jns
sarb
outsl
testl
out
xor
out
fcoml
pop
xchg
dec
cmp
add
js
pop
mov
mov
cld
or
ja
mov
and
and
ljmp
enter
inc
dec
shl
cmpsl
mov
nop
cmp
insl
cmp
jg
jmp
xchg
aas
push
mov
pop
jns
jno
inc
adc
cmpsb
lahf
mov
ret
cmc
popf
push
out
roll
fisubrl
xchg
jl
jecxz
icebp
testb
clc
xlat
pop
jnp
je
xchg
pop
xchg
sbb
dec
inc
and
jg
jbe
ljmp
push
jnp
sub
fistpl
and
add
dec
inc
sub
loopew
sub
sbb
xchg
cmp
gs
je
sbb
jb
mov
mov
test
inc
dec
cmp
mov
popf
ror
ds
movsb
xor
int3
push
lret
add
cmc
push
aam
and
cmp
lret
repz
in
add
xchg
dec
outsb
inc
sbbl
fstps
mov
nop
repnz
je
mov
clc
mov
ret
sahf
xchg
sbb
repnz
out
pop
push
dec
leave
loopne
popa
cmpsl
mov
fs
dec
aam
rcrl
out
mov
cmp
pop
shll
imul
push
int3
lods
pop
push
inc
aam
test
adc
cli
cmpsl
mov
lcall
inc
jle
and
enter
mov
push
cs
mov
jns
push
out
sbb
push
arpl
stc
je
ret
lods
lcall
nop
jmp
outsl
loopne
push
pop
and
addr16
cltd
inc
sub
and
and
int3
ljmp
cmp
xor
in
inc
mov
jnp
orl
cmc
je
bound
mov
inc
xchg
ss
sub
jae
imul
or
pushf
aas
dec
or
xor
mov
jo
cmp
adc
pop
ja
imul
faddl
testb
incl
xchg
pop
xchg
cmp
sarb
push
push
mov
test
insb
and
gs
xchg
cmp
lock
into
js
cmc
daa
dec
lods
and
sbb
addr16
mov
mov
push
std
out
into
fsts
mov
add
xor
popf
ljmp
push
push
pop
fistl
std
leave
pop
sbb
arpl
sbb
jg
xlat
bound
stos
and
int
cmpl
or
xchg
add
xchg
adc
xchg
push
insl
sbb
jmp
push
sti
xlat
aas
mov
loop
sbb
xor
jge
push
adc
in
fwait
push
and
push
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
sub
lods
jecxz
mov
mov
xchg
inc
and
jle
xor
clc
xchg
les
xchg
mov
inc
leave
cmp
mov
dec
aas
pop
jmp
add
xlat
call
push
push
or
mov
rclb
sub
pusha
xchg
mov
jnp
jbe
adc
sti
add
mov
jecxz
xchg
add
sbb
iret
pop
adc
inc
les
imul
fsubrs
pop
push
add
mulb
shll
cmp
pop
mov
dec
mov
push
cmp
lcall
lahf
push
jmp
cld
les
les
nop
cltd
stos
push
or
mov
xorl
inc
mov
xchg
fwait
inc
fisubrs
push
mov
imul
dec
push
pop
xchg
mov
or
xor
ljmp
out
andb
repnz
pusha
xchg
lcall
inc
jbe
mov
arpl
daa
out
lahf
std
lcall
mov
dec
and
ja
aad
and
xor
mov
jge
fistpll
stos
push
cmp
iret
gs
in
sbb
and
insb
js
andb
pop
dec
or
stc
push
fwait
sub
mov
xchg
test
or
test
xor
mov
imul
cmp
shrb
dec
mov
aaa
popa
das
fs
mov
imul
test
mov
aad
stos
mov
cmp
jl
leave
loopne
negb
ret
fcmove
out
ds
test
fwait
adc
in
and
adc
sub
movsb
in
sub
inc
test
stc
inc
cwtl
cwtl
stc
xchg
cmpsl
pusha
inc
add
cmp
sar
test
xorl
stos
ret
hlt
sbb
les
mov
testl
push
mov
xor
xchg
loopne
xchg
jl
and
mov
jmp
cmp
sub
dec
push
imul
les
sbb
pop
ja
movsb
ret
nop
out
push
mov
pop
pop
mov
push
add
xchg
rorb
sbb
pop
cmp
push
adc
sarb
in
stos
sub
dec
and
int
sub
enter
lret
fldz
test
mov
cmp
mov
hlt
adc
pop
inc
in
and
repz
add
das
clc
shlb
add
nop
lahf
lds
loope
add
loopne
or
cmpsl
fdivrp
inc
dec
or
jae
mov
mov
and
sbb
fcompl
xchg
lds
add
mov
mov
stos
aas
fcmovnb
mov
jno
rol
pop
push
clc
push
push
mov
lret
add
mov
imul
mov
or
adc
fisubs
mov
stos
mov
aaa
inc
xchg
sbb
cmp
adc
sbb
adcl
icebp
mov
add
loope
paddusw
push
xchg
dec
fwait
pop
cltd
in
push
gs
pop
ja
enter
ss
shr
les
fbld
into
insb
adc
cmc
jp
mov
push
clc
inc
dec
lock
sti
add
push
add
push
dec
cmc
leave
jle
cmpsb
mov
mov
popa
dec
fisubrs
mov
cmp
mov
mov
inc
sub
or
movsl
sub
imul
and
out
and
loop
fwait
pop
xchg
mov
js
les
clc
loop
adc
pushf
cmp
inc
shlb
jle
sub
test
loope
add
in
movsb
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
jecxz
mov
mov
mov
mov
inc
inc
fwait
add
int
lds
mov
ljmp
xchg
aam
lcall
cmc
and
idiv
fiadds
lret
cli
push
fsubrs
stc
jg
xor
sub
lods
loop
lea
and
aad
mov
or
ret
mov
push
pushf
mov
cwtl
mov
mov
mov
gs
dec
in
rclb
xor
fldenv
xlat
loope
sub
fcoms
pop
xor
jl
sub
rcll
xchg
ret
bound
sub
xchg
sub
jae
adc
push
mov
push
sarl
and
call
int3
pop
aaa
lds
and
jno
xchg
lea
push
aam
xchg
dec
ja
loopne
ja
inc
fwait
inc
push
sti
dec
scas
push
pop
arpl
int3
push
ret
push
aaa
mov
insb
xchg
adc
std
and
add
inc
mov
sub
pop
pusha
loopne
or
sbb
add
rol
jp
and
fucom
cmp
ds
out
push
popa
xchg
mov
pop
inc
jnp
mov
sub
xlat
sub
inc
jg
or
mov
cmc
xchg
decl
add
hlt
test
push
out
popa
mov
out
dec
mov
stos
mov
mov
insl
sarl
sahf
dec
and
mov
pushf
cltd
push
repz
fsubr
test
adc
out
xor
xchg
test
mov
xor
test
dec
and
arpl
sbb
sub
imul
jmp
fnsave
cld
filds
adc
fidivrs
out
dec
arpl
add
lock
push
fcom
xchg
out
lret
insb
jne
repz
ds
push
movsb
iret
cwtl
test
outsb
outsl
add
lock
into
fisubl
daa
iret
mov
in
and
lcall
imul
sub
cli
imul
mov
dec
lea
mov
mov
cmp
push
dec
add
dec
and
mov
jle
jbe
lds
shlb
pop
mov
inc
dec
cwtl
call
stos
sub
fdivrl
push
stos
mov
xchg
add
and
mov
cmp
test
xchg
mov
fdivrl
imul
and
or
jns
rcrb
push
fwait
cmp
pop
test
inc
push
loop
push
inc
in
cmp
repz
pop
xchg
inc
sub
pop
test
ss
jne
pop
outsb
jb
dec
sti
inc
or
leave
roll
push
call
cmp
cli
push
je
cs
add
jns
mov
dec
sbb
pmaxsw
jne
pop
js
add
mov
sub
dec
rcll
push
lds
adc
loopne
add
loope
push
or
repnz
push
add
lock
imul
cmc
insl
mov
pop
out
pop
cmpsl
jne
hlt
jns
adc
fcoms
and
xchg
xor
dec
dec
and
insb
sub
test
sbb
jno
subb
jno
jns
sbb
cmc
cmp
sub
mov
add
mov
sbb
add
fdivl
loop
insl
das
jmp
repnz
jmp
adc
and
stc
loopne
ret
xchg
aad
sbb
or
sub
or
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
movsb
push
iret
mov
mov
aas
inc
sub
jb
jae
movsb
in
xchg
inc
xor
das
jno
pop
fisttpl
sub
sbb
in
inc
and
inc
jae
in
dec
dec
push
jae
jecxz
jmp
mov
sub
popa
xchg
imul
mov
push
fs
jg
and
adc
lret
jecxz
xchg
cmp
nop
test
ss
lcall
xchg
stc
leave
cmp
fisubrs
push
inc
or
insl
in
lock
mov
cli
scas
jp
jae
pop
imul
and
iret
dec
push
push
mov
fldt
dec
orl
adc
mov
mov
js
push
inc
loop,pt
ficomps
mov
rcll
mov
test
xor
or
push
inc
pop
das
cli
addl
cmc
in
scas
jne
ficomps
aad
mov
pusha
xor
sub
xchg
push
mov
mov
cmp
stc
xchg
mov
inc
mov
fisubrs
mov
pop
ficompl
and
sub
dec
cmp
lock
mov
std
hlt
xchg
jecxz
push
xor
dec
jg
orb
repz
pop
mov
test
je
and
mov
jp
jo
test
imul
jnp
cmp
lock
cld
push
pop
push
push
subb
popf
push
hlt
nop
aad
add
pushf
imul
push
mov
iret
enter
in
cmp
subl
stos
shrl
repz
add
pop
jg
push
inc
movsl
pop
and
sbb
mov
popf
jp
cwtl
fmul
sahf
jnp
test
jnp
mov
xor
xchg
dec
cld
xor
test
and
es
lret
mov
pop
roll
idivb
cltd
mov
gs
ss
aam
clc
jbe
std
adc
aam
into
repnz
and
xchg
lds
lock
leave
idivb
test
jp
pusha
stos
mov
dec
fucomp
mov
dec
or
loop
pop
pop
or
stos
repnz
stos
lods
sti
lods
or
test
push
pop
sub
lods
and
pushf
shlb
and
xchg
mov
aas
cmp
dec
insb
jge
dec
xor
pop
pop
adc
mov
mov
inc
jge
mov
jbe
push
pop
dec
pop
sbb
dec
das
jbe
popf
arpl
daa
dec
mov
inc
dec
inc
rclb
pushf
push
enter
pop
mov
fld
and
pop
test
lock
jmp
les
and
loopne
lds
icebp
inc
or
dec
or
in
mov
inc
inc
popf
add
jbe
ds
les
fdivrl
fidivrs
add
call
in
loope
add
xlat
mov
and
cmpsb
notb
jg
inc
outsl
lds
ret
xchg
es
cmp
sbb
cmp
adc
mov
mov
mov
addr16
cmpb
mov
mulb
sub
lret
rolb
fcompl
dec
xor
and
fcmovnu
pushf
mov
adc
iret
push
mov
mov
aas
inc
push
or
das
and
aaa
push
icebp
imul
xor
fidivrl
icebp
jno
pushf
je
push
decb
stos
dec
inc
xor
icebp
xchg
je
xor
pop
mov
rorb
rcl
out
jl
adc
stc
imul
rolb
shll
sub
add
inc
in
jno
add
add
add
fisubrl
mov
or
fucomp
xlat
mov
mov
jg
xor
loopne
push
jnp
add
or
jno
jl
clc
sub
dec
out
orl
xchg
addr16
sarb
mov
push
dec
insl
xor
insl
jno
add
test
sbb
cmp
xchg
push
xor
mov
out
nop
data16
or
push
and
adc
jno
jecxz
leave
sub
sub
dec
arpl
inc
dec
mov
or
cmp
mov
jbe
jl
subl
test
push
dec
sahf
dec
mov
iret
push
sbb
shrl
mov
mov
pop
out
pop
sub
inc
addr16
decb
scas
fwait
sub
mov
inc
in
cmpsb
shll
shll
xchg
js
clc
jg
in
cmp
or
cld
cmp
cmpsb
mul
daa
mov
stos
jmp
in
test
sbb
stc
dec
cmp
sbbb
fisttpl
xchg
ds
push
lods
pop
outsl
inc
imul
outsb
push
sub
jmp
addr16
dec
xlat
pop
loope
pop
loop
dec
mov
rorl
push
mov
into
mov
inc
xchg
fcomip
jecxz
lods
xchg
adc
aam
pop
adc
sub
ss
shrb
jbe
push
insb
test
lea
es
dec
dec
test
std
fidivrl
icebp
insb
dec
clc
adc
pminub
testl
xor
jg
inc
xorl
inc
adc
in
out
ds
cltd
loope
inc
and
in
loope
int3
mov
fidivrl
ljmp
xchg
sub
popa
les
inc
xor
and
pushf
sbb
and
sbbl
dec
ficompl
jge
cld
adc
loopne
jg
mov
in
cmp
and
out
xchg
shrl
in
dec
stos
nop
jge
addr16
or
mov
mov
or
in
sub
pop
push
add
push
cwtl
cs
xor
xor
jge
add
jne
push
int
and
cmpsb
push
xchg
mov
fs
ja
mov
xor
xchg
inc
xor
or
or
adc
sbb
jno
lcall
aad
aas
cmpsl
add
fs
aam
clc
cmp
ret
and
arpl
sbb
jb
stc
mov
cmp
lock
adc
stos
cltd
jns
xor
or
orl
xor
lock
or
hlt
std
xchg
mov
jne
sub
jle
out
nop
roll
outsb
or
test
popf
nop
mov
dec
mov
pop
out
movsb
push
or
into
xor
inc
sub
into
xchg
and
inc
push
mov
inc
mov
sub
or
cmp
add
xlat
inc
adc
or
mov
jae
xor
andl
jbe
scas
and
xchg
out
add
pop
sub
mov
adc
je
adc
leave
cmp
mov
xchg
loopne
dec
jmp
scas
sub
addl
dec
sbb
out
out
sbb
sbb
push
add
popf
push
shll
sbb
push
dec
test
bound
fwait
sbbb
and
les
imul
mov
pop
jae
dec
push
fdivrl
mov
loop
mov
lea
xor
inc
loope
sbb
fdivrp
mov
mov
in
xor
fmuls
leave
incl
decl
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
dec
hlt
iret
mov
les
ret
dec
cmp
or
jns
ret
sbbl
out
cmpsb
mov
mov
lds
xchg
mov
cld
cli
out
jae
adc
xchg
sbb
fs
sub
sbb
adc
sahf
cmp
inc
cmp
pop
call
sbb
popf
ja
fistpl
xchg
cmp
outsl
push
pop
mov
mov
imul
fwait
push
adc
xchg
xchg
in
mov
jne
in
and
sub
sub
js
xchg
xor
daa
ds
clc
sub
sub
mov
mov
adc
lea
psubusb
test
xchg
nop
push
pusha
gs
xor
inc
lret
cmp
pusha
add
mov
push
and
addr16
jl
jne
cmc
pop
stc
and
inc
mov
push
data16
or
and
jbe
test
ja
adc
nop
mov
nop
lret
sbb
sti
test
gs
mull
inc
shrl
add
adc
out
jl
xchg
int
cmp
sbbb
inc
mov
repz
sub
mov
es
dec
leave
push
loope
cli
ficomps
mov
out
lret
pusha
imul
dec
or
es
sarl
enter
add
and
je
ja
enter
cli
dec
add
mov
mov
jo
fsubrs
scas
xchg
fstps
lock
insl
mov
loope,pn
repz
cmp
and
adc
xor
movsl
fsts
lock
arpl
cmp
aaa
dec
push
adc
inc
fstp
les
inc
stos
mov
ja
pop
hlt
lea
push
push
pusha
fcmovnu
and
lea
mov
aas
hlt
push
and
sbb
lret
cmp
pop
stos
cmp
or
adc
hlt
pushf
out
fists
call
jl
movl
mov
pushf
fdivl
imul
inc
xchg
int
stos
mov
sub
popa
cmp
sbb
or
sbb
xchg
add
insl
inc
insb
into
and
jg
mov
into
jne
icebp
mov
cmp
mov
inc
aas
lea
test
icebp
call
adc
push
and
in
jo
and
out
rolb
inc
in
mov
leave
xchg
jne
or
cmpsl
arpl
sub
xor
add
shl
rcr
aad
mov
mov
add
inc
and
scas
xchg
pop
fistpl
test
sub
test
psadbw
inc
adc
mov
cmp
mov
mov
cmpsb
in
lcall
mov
ljmp
xchg
ficompl
xlat
pop
ss
bound
jnp
xchg
and
xchg
lahf
movsb
cmp
xor
clc
mov
outsb
or
fadds
fbld
lahf
clc
repnz
in
pop
repnz
jnp
or
leave
or
aad
xor
mov
mov
js
nop
or
mov
mov
mov
lret
xchg
sub
cltd
push
mov
push
mov
sub
sbb
and
xorb
cmp
cmpsl
dec
loop
lods
mov
mov
pop
xlat
fcomps
mov
imul
inc
mov
fidivrs
imul
shlb
rcrb
push
in
inc
andb
mov
add
inc
xchg
adc
add
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
mov
mov
mov
push
in
jno
shr
ret
lcall
dec
xor
or
or
inc
jp
mov
test
fs
jae
out
and
int3
mov
push
int3
in
aad
adc
or
adc
lods
mov
xchg
fnstenv
pop
stos
std
sbb
mov
sti
add
ret
jno
in
mov
sahf
rclb
loope
iret
ficompl
test
push
xor
xlat
mov
insb
insl
sbb
dec
push
dec
fmuls
mov
jo
mov
popf
xchg
bound
int3
stos
sub
pop
int
enter
faddl
out
mov
lret
mov
aam
jne
jns
insl
mov
jnp
dec
xchg
idivb
inc
std
test
sub
mov
test
sub
mov
arpl
jae
add
les
sub
dec
mov
add
mov
jg
dec
ret
stos
adc
pop
ret
es
sbb
bound
push
scas
into
in
enter
lds
pusha
dec
xchg
loope
dec
push
fimuls
pop
mov
out
xchg
cmp
lcall
push
dec
mov
jb
out
or
push
gs
loope
xor
lret
mov
popa
push
scas
mov
ja
xchg
fsubs
ret
jbe
ljmp
mulb
insl
mov
int3
outsl
sub
aad
or
daa
stos
xchg
fsub
fstpt
movsl
pushl
mov
fiadds
je
jp
ret
cmpl
dec
cmp
adc
jle
gs
outsb
scas
cmp
dec
and
out
cli
dec
jge
mov
cltd
mov
mov
cmp
insb
and
imul
in
call
rcr
add
pop
lahf
push
ds
cmp
shlb
jne
sub
je
jecxz
mov
jge
add
ljmp
inc
clc
shll
sub
inc
cwtl
popf
ret
mov
insb
repz
sbb
jnp
inc
push
fwait
inc
lret
nop
insb
xor
shll
adc
cli
pop
xchg
dec
mov
out
mov
call
pop
sbb
and
jmp
hlt
ja
inc
xchg
add
fisttpl
jb
out
test
fwait
ds
out
sbb
cwtl
mov
mov
bound
dec
sub
or
mov
fiadds
sub
mov
inc
adc
sti
je
imul
ljmp
pushf
push
repz
xchg
mov
stc
add
lahf
lret
jo
xor
jp
in
loopne
mov
add
push
dec
mov
popf
lret
and
jl
je
fidivs
sbb
inc
test
loope
sub
mov
out
jo
out
insb
xor
xchg
push
mov
movsb
inc
jge
push
aam
outsl
cmp
push
test
sub
scas
push
or
xchg
xchg
push
sbb
std
cmp
pop
pop
jne
xchg
sub
fisubs
dec
add
lds
or
ds
lret
ja
mov
cmovne
jl
add
mov
aas
lret
mov
out
sub
out
repnz
in
andb
movsl
or
test
sar
int
dec
ds
mov
cmp
fdivrs
je
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
mul
adc
xchg
les
mov
imul
push
adc
dec
jne
out
mov
ds
add
hlt
xchg
mov
ss
sub
adc
repz
or
push
sub
adc
leave
sarl
fwait
outsl
insl
pop
sbb
test
jns
aas
iret
cmp
push
mov
or
cmpsl
jne
fs
cld
or
or
pop
mov
int3
ljmp
inc
repnz
and
adc
arpl
mov
xor
mov
sbbb
sub
mov
sbbl
xor
adc
scas
push
xchg
call
and
popa
jae
lret
push
fs
mov
dec
mov
jecxz
imul
iret
mov
sarl
fadds
push
sub
popf
jbe
mov
push
data16
cs
loop
inc
mov
fs
fisttpl
sahf
or
jecxz
push
lret
gs
adc
sub
and
clc
pop
movsl
jle
adc
sti
jg
test
mov
and
jo
lods
fbstp
xchg
or
cld
mov
out
xor
fsts
int
sbb
pop
lahf
into
dec
fiaddl
and
mov
seto
xchg
jno
shlb
insl
fs
and
xor
fdivl
dec
cmc
mov
lahf
jb
loopne
jle
xor
std
mov
sub
cwtl
lea
cmp
ret
int
js
mov
rolb
dec
jb
add
xor
nop
dec
dec
inc
arpl
mov
daa
rol
ret
add
cmp
sbb
or
fsubrs
or
iret
int3
in
in
test
addr16
ds
jp
shll
mov
shll
out
lret
inc
sbb
inc
scas
cmp
push
in
js
push
pop
and
fwait
inc
je
and
pop
mov
xchg
adc
jp
or
out
cwtl
or
jle
sbb
mov
push
jne
xchg
lods
addl
stos
sbb
loope
fsubl
mov
sbb
fnstcw
jle
repnz
test
adc
and
rcll
test
mov
stos
pop
arpl
in
xlat
xor
int3
add
enter
insl
mov
das
rcrl
mov
mov
sbb
lcall
loopne
sar
lods
or
sbb
mov
dec
mov
mov
in
dec
cs
mov
test
and
add
xor
sub
xchg
sub
out
add
fcmovu
imul
mov
imul
mov
loope
test
loopne
lods
cmp
call
sbb
in
aam
hlt
sub
shlb
pop
jl
push
jne
mov
fwait
mov
in
add
jno
add
movsb
add
cmpsl
aas
out
sti
mov
out
xor
loop
mov
out
int
jg
scas
faddl
fs
jns
inc
aaa
jno
adc
gs
sub
das
in
push
arpl
stos
mov
aaa
cli
add
mov
insl
nop
les
pop
pop
xor
lods
or
out
ror
pop
sbb
ficompl
sub
icebp
sub
jne
add
sub
xchg
and
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
rol
out
mov
mov
cmp
xchg
pop
int3
daa
mov
or
mov
jno
sbb
sar
adc
inc
mov
pop
jne
push
xor
clc
jno
lods
test
or
jno
fistpl
push
fisubs
hlt
or
sub
and
divb
leave
je
out
adc
jno
mov
sbbb
adc
stos
xchg
pmullw
sbb
and
inc
pop
cmp
das
pop
dec
lahf
mov
int
lret
fsts
addr16
or
adcl
dec
gs
sub
xchg
hlt
push
or
mov
xchg
push
aam
and
mov
fldl
push
pop
mov
in
mov
inc
cwtl
sbb
add
mov
mov
ss
sub
lret
push
ss
push
stos
add
loop
sarb
in
mov
fwait
arpl
add
hlt
jnp
mov
add
push
mov
gs
scas
mov
stos
data16
mov
push
xor
clc
xor
dec
push
or
jecxz
arpl
movsl
insb
or
cmc
sbb
push
inc
popa
push
ja
aad
mov
sub
dec
outsb
add
push
shll
or
lods
lock
jecxz
push
aas
or
push
mov
pop
insl
andl
rcrb
out
jg
in
sbb
add
jl
dec
daa
popf
fdivl
mov
fidivrs
out
xor
lcall
fwait
pop
jge
aam
mov
cmp
pop
lahf
and
add
lds
out
xor
outsb
mov
lock
xchg
cmpsb
push
arpl
adc
nop
xor
int
aad
and
pop
push
sbbb
js
bound
hlt
sub
leave
mov
andb
leave
in
mov
inc
jne
adc
mov
jbe
pop
imul
pusha
jl
cmp
fwait
test
push
push
push
cmp
jo
mov
insl
insb
int3
gs
xor
dec
incb
mov
xchg
mov
pop
push
mov
pop
popf
cmp
inc
call
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
jno
fninit
push
cld
mov
mov
mov
nop
lods
pop
jns
je
and
loopne
pop
add
ljmp
and
leave
push
mov
and
scas
mov
aas
xor
ret
add
addr16
cmc
mov
gs
mov
repnz
add
dec
lods
xchg
mov
shrb
mov
or
sub
test
inc
jl
cmp
sub
loope
shrb
ja
push
scas
hlt
jne
int3
arpl
push
cmc
push
enter
cmp
shrb
adc
in
sarl
jnp
and
cmp
and
sbb
or
cmp
add
stos
sub
mov
mov
popl
enter
ret
lock
jmp
repnz
xchg
les
pushf
sti
pop
leave
imul
xchg
jne
daa
sub
shrl
fisubs
lock
xchg
les
jge
leave
adc
loope
push
jns
and
jmp
xor
push
fidivrs
pop
inc
xor
sbb
in
pop
xchg
pop
ja
xchg
ds
xor
ret
movb
xchg
shlb
push
test
cs
fisubrs
pop
std
and
mov
inc
mov
mov
lock
rcrb
daa
push
outsl
sub
push
out
mov
push
fcmove
cmp
sysexit
popf
in
push
fcomps
mov
mov
out
jo
and
daa
repz
shrl
push
mov
les
mov
das
xchg
inc
or
movsb
ret
mov
adc
inc
push
push
mov
or
mull
icebp
or
movb
xchg
xor
push
jns
das
ds
jp
adc
mov
mov
in
subl
in
sbb
rcrb
jge
lcall
dec
mov
std
mov
divl
adc
cmp
fsubrs
je
sbb
loopne
mov
mov
cmpsl
jecxz
adc
xchg
out
call
adc
add
dec
push
mov
cmp
dec
mov
jmp
push
and
mov
sbb
push
xor
add
inc
in
jge
add
inc
call
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
jmp
add
mov
aaa
scas
push
inc
test
jae
dec
sbb
jbe
jecxz
sub
orb
push
xor
jg
cs
stc
stc
cmpsl
sub
out
out
hlt
gs
add
or
sti
call
push
cmp
pop
nop
pop
xorl
xor
jp
and
out
inc
sbb
sbb
xor
sbb
roll
mov
xchg
xor
or
gs
insb
dec
fistpll
mov
add
fnstcw
mov
sarl
cmp
fld
imul
xor
cld
lea
inc
dec
sarb
stc
cwtl
sub
jle
sub
mov
int3
lahf
aaa
pop
inc
fs
push
push
push
arpl
imul
fsts
fcom
out
inc
cmpsl
aaa
jae
inc
sub
outsl
popf
out
and
cmp
nop
das
or
xor
cmp
xor
pop
call
dec
jge
and
loope
sbb
inc
adc
cs
mov
add
icebp
xor
sti
out
inc
xchg
push
sti
pop
pop
cmc
cmp
inc
stc
xchg
xor
ret
jbe
mov
push
sbb
jg
daa
loope
adc
mov
cltd
stos
loopne
add
jne
ret
fwait
sti
or
inc
cmp
and
dec
mov
jp
dec
shl
icebp
shr
inc
mov
clc
dec
mov
lods
mov
into
mov
pushf
out
ss
fimull
add
adc
fildll
mov
cltd
insb
insb
jns
mov
sub
cld
dec
jns
mov
pop
push
push
cli
int
jge
jnp
lds
mov
sub
pop
outsl
mov
jae
sti
lds
dec
scas
mov
fwait
xor
aam
push
mov
out
fsubl
test
xchg
fdivrl
xchg
in
pusha
lret
fwait
popf
shlb
adc
or
sbb
sub
outsb
leave
mov
xchg
lock
lods
jmp
shrb
fildll
mov
pusha
xor
push
push
fs
dec
outsb
push
mulb
cmp
push
mov
or
adc
std
adc
insl
or
lock
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fldl
push
sahf
int
mov
mov
icebp
jp
hlt
jg
in
cmpsl
loopne
push
dec
stc
stos
in
insl
adcl
jae
or
mov
pop
or
sti
sbb
add
sub
pushf
dec
mov
mov
movsl
insb
cli
add
lret
addr16
lds
call
lcall
ljmp
pop
into
mov
ret
sub
dec
mov
pop
dec
sbb
add
int
pushf
lret
sti
push
dec
or
and
in
inc
jmp
in
sub
pushf
dec
shlb
movsl
pop
push
sbb
xchg
imul
pop
push
loopne
or
push
das
jne
add
jmp
add
pushf
shlb
stos
lds
inc
and
or
push
jg
aad
or
loop
push
xor
or
and
outsl
lahf
loopne
enter
push
pusha
or
pop
inc
cltd
adc
movsb
out
lret
push
adc
stc
mov
sub
sub
pop
imul
dec
test
psrld
sbb
clc
cld
test
addr16
aaa
leave
mov
or
lahf
jmp
and
aam
test
out
sub
imul
xor
enter
push
ss
or
sub
in
jge
add
dec
arpl
mov
scas
cmp
adc
dec
pop
arpl
loop
shll
hlt
sbb
popl
test
movsl
inc
mov
cmp
pop
ljmp
sub
clc
or
ja
and
repnz
sub
mov
mov
cmp
test
jns
pop
leave
lret
push
push
pop
hlt
pushf
sbb
xlat
adc
pop
xor
sub
je
adc
mov
aaa
add
xchg
xor
and
inc
cmp
shlb
cli
lods
lcall
in
nop
clc
jl
pop
mov
add
sbb
jl
rcr
int
and
orl
mov
xor
dec
push
push
pop
lods
shll
ret
xchg
into
sub
mov
loope
aas
pop
mull
mov
gs
xor
inc
ss
pop
stos
movsl
cmovae
ss
fcoml
imul
jecxz
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
shrl
les
fildl
sbb
pop
xor
je
lea
call
or
shll
aaa
hlt
sub
imul
inc
dec
mov
ds
xchg
sbb
xchg
cwtl
loop
xchg
cmp
je
scas
adc
arpl
jecxz
dec
mul
jle
sub
mov
shr
xor
fwait
mov
in
push
cmp
mov
movsl
cmp
cmp
cli
add
out
hlt
mov
xchg
andl
mov
int3
push
push
aad
sub
mov
mov
jmp
scas
jo
fistps
mov
pminub
rol
dec
mov
dec
and
gs
inc
mov
rsqrtps
loopne
iret
mov
loopne
cwtl
jge
loop
pop
cmp
mov
sbbl
inc
mov
pop
lret
mov
mov
and
push
push
push
mov
xchg
mov
test
add
daa
mov
cwtl
add
rorb
xchg
inc
xor
iret
fcompl
cli
push
insl
xor
add
sub
adc
push
adc
js
mov
repnz
outsl
xor
sbb
repnz
jb
dec
clc
popl
sahf
or
adc
ss
jmp
sub
popf
repnz
ds
enter
cmp
sbb
loope
or
adc
mov
repnz
jle
leave
jbe
call
imul
pusha
addr16
jo
outsb
andb
ds
dec
dec
aam
outsl
scas
je
push
sub
inc
dec
xor
pop
and
mov
mov
pop
push
xor
sbb
sub
ja
mov
or
in
xor
mov
rcrb
outsl
inc
or
test
cmp
sub
adc
sbb
iret
inc
push
mov
mov
mov
or
mov
dec
fstps
pop
outsl
notl
scas
jne
lds
ret
bound
push
jge
xlat
std
xor
jo
repnz
and
add
mov
cmp
int3
xorl
mov
push
imul
lret
leave
xor
jnp
pop
pop
cmpsl
or
or
mov
inc
mov
leave
into
and
jno
mov
stc
and
jnp
outsb
negl
stos
mov
xchg
and
xor
shlb
xchg
mov
pop
insl
dec
out
roll
ret
imul
inc
lss
or
fstpl
mov
pop
ret
and
sub
shlb
aas
cltd
hlt
pop
inc
fists
sub
dec
cmpsl
sub
push
fmul
clc
dec
push
push
xor
ret
icebp
hlt
pop
les
sbb
push
das
adc
test
sub
cmp
xchg
fs
pusha
cld
push
push
pop
arpl
and
mov
pop
and
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
adc
leave
movsb
in
adc
mov
sbb
clc
xor
xor
shrl
popf
jecxz
popf
sbb
ror
aas
mov
cmpl
mov
popf
stos
mov
mov
outsl
pop
mov
inc
sbb
movl
cmc
aas
outsl
sub
gs
sbb
rol
or
xchg
pop
pop
in
les
xchg
sub
fnstenv
add
mov
shll
xchg
adc
mov
dec
lret
mov
sti
aaa
mov
inc
lret
mov
lods
addb
rcl
push
into
sbb
sbb
bound
movsl
push
xchg
or
lcall
mov
pop
fs
iret
pushf
and
loop
ja
sbbb
xor
pop
out
shl
outsb
lea
lock
nop
shlb
aaa
mov
sbb
insb
imul
fcoms
std
push
out
mov
test
dec
sbb
push
sti
shrl
int
addr16
ret
out
push
sub
shll
mov
sbb
out
scas
add
ret
aaa
inc
ja,pn
and
lea
rcrl
outsl
rcll
insl
pop
and
pusha
fwait
push
mov
push
or
mov
push
inc
into
lret
xchg
jmp
sub
out
clc
cmpsb
repnz
insl
dec
add
frstor
xchg
dec
mov
jne
je
cmpsl
xor
sub
jae
sbb
out
jo
fimull
ror
push
or
sub
cmc
stos
std
insl
out
testl
sahf
jbe
addr16
push
mov
into
aad
lret
inc
pop
xchg
cmc
pop
cmp
lds
into
mov
mov
push
mov
pushf
jns
cltd
outsb
pop
dec
inc
pop
dec
fiaddl
nop
lcall
mov
add
mov
adc
andb
shrb
jg
icebp
xchg
repnz
dec
inc
lock
mov
rcrb
loopew
cmp
ss
movsb
inc
clc
mov
pop
pushf
subl
dec
lret
or
icebp
xchg
bound
adc
cltd
push
loopne
stos
pusha
insb
outsl
fsubrs
dec
outsb
inc
cltd
out
cmp
add
inc
mov
clc
and
adc
loope
std
mov
rclb
daa
push
mov
lea
mov
pushf
ret
rcll
and
mov
cmp
fmuls
pop
sahf
pop
arpl
cmpsl
repnz
int
daa
mov
xor
leave
push
gs
stos
icebp
dec
and
mov
sbb
pop
pop
pop
xor
dec
outsb
xchg
adc
movsl
es
jb
xchg
xchg
pop
in
xor
imul
mov
xor
push
mov
pop
push
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
and
mov
lds
rcrl
rcll
jnp
adc
icebp
sub
mov
sbb
pop
in
xlat
sub
lcall
ds
mov
xchg
jno
out
mov
adc
mov
repnz
pop
movsb
cmpsb
inc
xlat
repnz
test
cwtl
ss
sbb
mov
daa
cmp
ljmp
loope
mov
out
divb
pop
je
and
xor
lahf
outsb
dec
mov
pusha
int
adc
jno
cmpsl
mov
mov
xor
mov
dec
mov
mov
or
mov
push
adc
add
mov
xchg
dec
out
xor
mov
cli
pop
fstps
rcrl
mov
sahf
xchg
mov
and
dec
pop
out
hlt
sbbl
push
xchg
stos
sbb
aas
pop
or
mov
cmc
sbb
adc
fisubrs
sbb
jo
cltd
test
inc
das
cmpsl
adc
adc
jle
lods
std
cmp
in
push
in
stos
mov
add
test
lods
pop
inc
xchg
outsb
xchg
ret
lret
cmpb
lahf
pop
mov
lahf
movsb
aam
push
xor
sbb
jns
sub
inc
push
pushf
xchg
mov
dec
and
sahf
xchg
mov
jg
popa
xorl
sub
pop
repnz
jmp
mov
push
loop
into
rorb
push
xchg
fs
fs
into
push
enter
jecxz
or
sub
push
push
mov
pop
mov
pop
or
lods
sub
dec
and
fcompl
sub
xchg
clc
in
fnstcw
pop
popa
push
bound
dec
mov
rcr
sub
icebp
rolb
sub
sub
xchg
xor
sub
pop
movsl
out
stc
loopne
adc
inc
jp
popf
dec
push
xchg
loope
dec
mov
push
sub
jae
sbb
nop
in
pop
test
pop
out
dec
std
das
fstl
cmpsl
add
outsl
orb
test
scas
hlt
lea
adc
sbb
mov
xor
int3
inc
inc
cwtl
pop
push
mov
popa
stos
dec
mov
mov
dec
cmp
adc
dec
fcompl
cmpsl
movsl
pusha
repz
sti
or
push
lcall
mov
sub
cld
and
lret
in
mov
in
lods
ffree
or
jmp
push
or
mov
inc
lret
arpl
xchg
mov
leave
add
cltd
pop
stos
push
sub
std
mov
cld
push
sbb
movl
jns
repz
imul
jb
fstps
jmp
mov
ftst
into
mov
fisubl
mov
cmpsb
push
ja
loope
jecxz
xchg
aam
ds
inc
sub
int3
adc
or
cmp
xchg
int3
xor
sub
ret
outsl
addr16
or
imul
mulb
subl
jns
jns
enter
jo
mov
das
das
pop
xor
imul
pop
xchg
add
sub
dec
ret
or
push
pop
imul
ss
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
rcl
fstpl
mov
mov
sub
add
pop
add
dec
dec
pop
pusha
test
mov
outsw
fucom
push
fcmovne
lret
test
sbbl
jecxz
rcl
push
sbbl
jnp
or
ficoms
sbb
sbb
sahf
popa
arpl
jb
and
add
xchg
stos
es
sbb
add
cmp
adc
int
leave
inc
sahf
int3
and
mov
pop
mov
es
mov
mov
out
loopne
out
in
out
pushf
loop
rcr
and
lret
push
mov
mov
in
imul
imul
adc
push
mov
daa
fstpl
scas
lahf
or
sahf
es
pop
popf
sub
arpl
xchg
mov
shl
repz
pop
idiv
dec
test
out
js
sub
imul
mov
je
mov
push
inc
icebp
in
jae
icebp
je
sbb
es
lds
psllq
scas
xor
int
push
push
xchg
mov
add
popf
cmp
mov
int
std
stos
sub
mov
and
sub
ret
call
xchg
jge
xchg
inc
jne
mov
dec
cmpb
cmp
pop
gs
das
fimuls
and
insb
push
test
out
mov
mov
mov
dec
pop
jmp
add
xorb
xlat
xchg
sub
aas
sub
fnstenv
sub
icebp
test
and
xchg
push
daa
aas
outsl
aaa
pop
cmp
push
xchg
rol
mov
jp
xor
xchg
jp
mov
jbe
fadd
sub
pop
xor
hlt
dec
mov
fcoms
out
in
data16
or
cmpsl
rep
cmp
lds
lods
repz
push
andb
jle
loop
dec
out
adc
test
mov
cs
scas
adc
or
out
lcall
mov
outsl
in
aaa
rcrl
mov
push
cld
insl
bound
ret
inc
jnp
mov
clc
mov
cld
fidivs
adc
mov
lcall
pop
incl
push
testl
mov
data16
pop
mov
dec
test
add
sub
mov
mov
cmpsl
or
nop
cmp
xor
jp
in
pop
popa
sub
cltd
or
inc
push
popa
push
inc
jl
add
hlt
push
push
mov
inc
dec
outsl
ret
cli
mov
push
in
loope
inc
call
fwait
pop
xor
push
inc
gs
in
dec
enter
adc
or
jl
add
ss
or
insl
cmpsb
in
cwtl
mov
inc
inc
ds
or
cmpsb
adcl
mov
mov
cmc
adc
dec
das
cmp
gs
add
dec
fimuls
sbbl
std
notl
in
sub
mov
pop
dec
es
repnz
cmp
inc
push
push
pop
cld
mov
push
jns
call
jae
or
jne
enter
ds
fldcw
cmp
mov
aas
out
inc
inc
sbb
es
mov
leave
mov
ret
insl
sub
in
add
xchg
jl
ret
inc
inc
and
dec
cld
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
arpl
push
xchg
jge
mov
mov
mov
and
shrd
jbe
sbb
add
push
inc
fwait
inc
xchg
jle
dec
jno
icebp
xchg
cmp
cmc
test
in
nop
mov
or
rolb
add
jecxz
fcoms
lock
and
and
and
stos
ss
daa
outsl
or
negl
aad
dec
scas
clc
push
xchg
cltd
fucom
int
mov
dec
sbb
adc
andb
inc
add
mov
test
dec
pop
pop
push
in
dec
ss
sub
pusha
add
jp
aaa
hlt
add
sbbl
jmp
xor
mov
jae
xchg
add
in
into
lret
jge
or
jl
push
jno
mov
clc
andb
push
scas
dec
dec
imul
sub
and
int
inc
aad
sbb
xchg
shl
lods
mov
jae
pop
and
hlt
inc
pop
jl
cmp
jl
loope
cmpsb
mov
xor
frstor
mov
cmc
and
xor
in
mov
add
int3
sub
repz
and
bound
inc
push
cmpsl
push
sub
dec
outsl
adc
mov
fldt
shll
es
push
fidivl
and
addl
dec
popf
or
cmp
dec
dec
adc
push
mov
add
inc
jge
rclb
test
lcall
lret
ret
fdivs
mov
lds
xchg
xlat
data16
mov
lret
aaa
cmpsl
loop
ss
mov
xchg
dec
add
add
mov
popf
cmp
fcomip
or
fcomps
sti
mov
test
in
xor
xlat
mov
stc
rol
scas
jb
mov
repz
pop
pop
mov
add
jns
adc
scas
ljmp
jo
adc
mov
or
les
into
int
loopne
lcall
add
loopne
cli
adc
insb
call
mov
pop
lcall
mov
push
xor
pushf
cmpsb
push
jae
cmp
addr16
dec
inc
outsl
arpl
and
outsl
je
inc
rcll
xchg
div
mov
call
cmp
inc
push
pop
idivl
jo
sbbl
cld
movl
aam
fdivrs
cld
loop
inc
js
mov
or
dec
sub
lahf
xchg
loopne,pt
shrl
inc
outsl
pop
inc
xor
insb
push
mov
mov
popa
pop
movsb
daa
xor
gs
push
push
in
es
and
fcoml
mov
mov
imull
adc
mov
jno
push
hlt
adc
xor
pop
gs
pop
aaa
pop
mov
aad
mov
xlat
into
pop
es
push
out
pop
leave
dec
sub
repz
fwait
test
mov
ror
fs
pop
imul
and
mov
mov
leave
mov
insb
std
xchg
lret
push
jp
fadd
add
cmp
cmpsl
jnp
out
mov
call
pop
jmp
sub
mov
xlat
test
add
gs
ljmp
icebp
xor
loopew
shrb
dec
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
xlat
and
jecxz
mov
mov
ljmp
adc
lahf
pop
xor
maxps
sar
imul
dec
jl
mov
xor
jo
pop
incl
dec
outsl
jg
in
adc
insb
lods
mov
dec
gs
push
ja
ss
fiaddl
jne
and
dec
cmp
cmp
inc
add
mov
mov
push
xchg
clc
mov
push
insb
out
mov
les
shll
mov
inc
jecxz
sub
jecxz
or
adc
out
pop
scas
int
jns
nop
mov
out
cmc
ds
jbe
rclb
mov
stos
fisubl
jp
inc
jae
pushf
sbb
ja
and
sub
and
xor
iret
out
addr16
pushf
arpl
dec
mov
sbb
mov
ljmp
mov
fwait
gs
xchg
fstp
repnz
mov
loopne
test
mov
push
pop
xor
push
dec
push
ja
push
xchg
je
add
mov
js
and
jbe
xchg
int
push
mov
fcompl
cmc
push
cmc
mov
leave
jbe
enter
dec
dec
mov
addb
mov
cmp
mov
imul
xor
rcr
ljmp
push
mov
sub
or
sub
or
mov
jmp
sub
inc
js
cmpsb
push
mov
inc
mov
jo
and
lret
xchg
pusha
daa
lcall
xor
or
aam
sub
js
push
adcb
add
jg
pop
push
dec
jmp
cmpsl
pop
jb
sub
out
leave
jle
int
lea
sbb
and
aaa
jae
out
mov
test
jno
pop
lahf
xor
and
mov
loopne
push
adc
lcall
jae
or
test
mov
fmuls
lahf
mul
adc
inc
push
movsl
inc
movsl
add
mov
ss
and
lds
shlb
push
pop
sub
insb
rcrl
xchg
hlt
sti
jae
adc
xchg
add
pop
repz
mov
imul
imul
ret
mov
jmp
movsb
loope
fldt
pop
jne
cmpsl
mov
cmp
and
sub
clc
rolb
fildll
cmpsb
cmpsb
test
mov
insl
and
mov
sub
jb
sub
mov
cltd
xor
pop
cmp
add
mov
scas
mov
shl
ret
inc
cmpsl
insl
dec
fnsave
lea
cld
jmp
stos
inc
or
cmp
lahf
testl
adc
in
pusha
aam
rcll
sti
push
push
repz
lret
pop
aam
adc
test
in
cmp
sbb
cmpsb
xor
notb
int
cld
fidivs
jo
shll
ljmp
je
ss
sbb
repnz
sbb
xor
mov
push
adc
addl
sub
sbb
dec
xchg
xchg
jbe
stos
push
aas
mov
mov
xlat
xor
sbb
leave
cmp
cmp
aas
xchg
stos
ja
sub
bound
dec
add
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
clc
iret
leave
xor
mov
outsb
das
add
popf
and
sbb
scas
inc
pusha
int
lret
jmp
imul
sbb
mov
in
add
inc
jp
adc
mov
cmp
sbb
mov
lods
inc
mov
push
xchg
notl
cmp
cltd
and
pop
push
sub
dec
scas
in
push
dec
inc
test
imul
push
imul
jmp
pop
sbb
add
pop
insb
aaa
or
mov
mov
fldenv
xor
scas
adc
xor
lock
mov
das
xchg
imul
or
sahf
inc
mov
in
xchg
jl
xchg
cld
cltd
int3
add
rorb
test
pop
mov
subl
adc
test
pop
xorb
adc
ret
sub
mov
mov
or
shrb
outsb
pop
add
xlat
fists
lods
jmp
inc
push
test
adc
clc
pop
dec
pop
xchg
mov
xor
out
and
jo
stc
dec
xchg
insb
and
hlt
xor
push
cmp
imul
push
dec
cmp
add
scas
orb
je
sub
or
insl
stos
out
lahf
dec
inc
shrl
mov
aas
inc
jbe
push
jae
inc
loope
mov
orb
ja
adc
sub
push
add
pop
jmp
js
push
in
push
rcrb
xchg
mov
mov
icebp
loope
sbb
movb
and
push
push
aas
lods
cmpsb
lods
adc
pop
pop
inc
dec
mov
xor
insl
and
hlt
jmp
or
adc
mov
mov
lea
stc
xchg
jmp
sub
ja
out
adc
mov
lcall
outsl
jg
inc
imul
xchg
cmp
hlt
mov
and
lret
xor
xor
add
push
gs
dec
popf
xchg
pop
push
cmp
mov
mov
data16
inc
pop
mov
jne
test
add
xor
movsb
mov
fwait
lcall
mov
cmp
adc
int
sbb
lret
pop
mov
push
push
call
int3
imul
rcll
push
push
push
dec
cmp
xchg
test
mulb
nop
mov
mov
mov
dec
rclb
jp
rorl
in
mov
pop
inc
popf
push
cmc
icebp
pusha
leave
mov
inc
nopl
scas
or
xchg
stos
jle
jmp
into
into
push
je
dec
aas
test
push
sahf
adcb
inc
idivl
mov
adc
mov
mov
adc
fwait
mov
cmpsl
fbld
in
shrl
sbb
dec
push
pop
adc
xor
xorl
adc
ret
cmpsl
mov
xchg
ss
and
sub
out
stos
pop
sbb
gs
mov
adc
in
fs
int3
lret
push
and
add
mov
or
xor
lret
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fstl
cmpsb
jecxz
cmp
mov
out
ret
popa
cmp
xorb
aam
jle
aam
push
add
jge
lahf
jb
inc
jbe
jl
mov
popa
sbb
push
and
mov
fdivrs
rclb
jcxz
add
arpl
and
imul
push
pop
jo
pop
sub
es
sbb
push
xlat
bound
mov
pop
lods
pop
pop
inc
hlt
call
xchg
movsl
adc
popf
ja
out
and
pop
push
sbb
pop
fildl
mov
std
aas
test
out
dec
add
lcall
clc
jmp
movsl
add
fdivr
and
pop
mov
xchg
jmp
hlt
cmpsl
add
fidivl
or
aam
xor
fldcw
mov
or
cmc
mov
jl
cmp
jo
mov
inc
jle
mov
or
ret
xchg
xchg
fldln2
pause
jno
dec
sbb
fmul
enter
mov
dec
inc
xchg
fiadds
popl
xor
sbb
shl
xor
mov
int3
lods
pop
imul
lea
pop
sahf
sti
or
ss
out
xor
push
mov
pop
adc
cmc
pop
mov
or
in
ficompl
pop
jbe
lock
ss
outsl
cmp
xchg
das
std
pop
aad
xchg
out
xor
pop
xor
push
jnp
cmp
pop
sub
or
pop
pop
adc
adc
lods
mov
mov
cmp
enter
loope
or
test
and
add
loopne
aad
lahf
adc
lret
outsl
dec
loope
mov
cs
push
popf
ja
mov
and
arpl
shrl
pop
insb
push
push
pop
cmpsl
aaa
push
jnp
scas
test
push
mov
add
pop
dec
add
adc
ja
sbb
rorb
mov
push
stos
idivl
in
inc
or
iret
jle
test
and
roll
adc
subb
sbb
test
fimull
sbb
sbb
mov
push
jle
jbe
cmp
dec
push
jnp
ret
das
mov
jae
jno
or
gs
dec
cmp
mov
test
or
mov
in
sbb
movsb
add
bnd
mov
adc
inc
cwtl
push
popa
push
xchg
pop
ror
fcmovb
and
jmp
push
jae
or
fildll
adc
lock
popf
sub
xor
int3
inc
push
mull
fdivrp
xchg
mov
sarl
bound
cmp
xor
data16
push
bsf
das
push
movsb
xchg
dec
mov
aaa
or
arpl
lock
sbb
or
lea
icebp
xchg
add
mov
inc
sbb
jnp
jmp
popf
and
int
xchg
adc
mov
push
jno
in
loop
stc
dec
cs
shr
xor
dec
or
mov
fistpll
fisttps
mov
lret
in
cmp
adc
jnp
idivl
add
ret
and
addl
pop
test
xchg
test
mov
cmp
jmp
jns
dec
inc
xor
adc
mov
push
adc
fnsave
clc
jl
xchg
mov
jl
aad
lcall
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
xchg
push
inc
mov
mov
cmp
inc
sbb
in
cmpsl
mov
jmp
scas
enter
and
jno
loop
js
xchg
adc
dec
jg
out
int
inc
popa
push
fisubl
push
sub
or
push
add
fbstp
jb
inc
mov
adc
addr16
cmp
mov
pop
sub
insb
push
fdivl
mov
mov
jbe
mov
mov
cmpsb
outsb
loopne
sbb
sbb
nop
and
test
out
mov
cmp
clc
and
push
int3
jnp
dec
dec
stc
sub
stos
mov
add
mov
cmp
mov
gs
sub
hlt
pop
cmp
je
push
cmpsb
stos
sub
push
clc
mov
aas
push
frstor
les
aas
popf
fstl
ficoml
inc
outsb
push
in
inc
push
icebp
aam
sub
mov
xor
mov
and
inc
xchg
int3
in
push
mov
push
inc
dec
sbb
xor
or
testl
popf
orb
sub
pushf
pop
scas
lods
mov
xchg
push
test
lds
mov
and
outsl
out
push
fldenv
xor
rclb
icebp
insb
cmpsl
add
loop
or
test
cwtl
add
mov
jp
fcomp
xor
inc
cmp
and
icebp
xchg
dec
fidivrs
cmpsl
add
aaa
add
sbb
icebp
cmp
and
add
sahf
lcall
and
lods
neg
jae
lret
or
jns
imul
cmp
push
lcall
int
mov
movsb
cmpsl
inc
outsb
lret
test
sbb
jae
or
push
ljmp
inc
xchg
inc
inc
jns
fs
lea
out
push
jnp
insl
rolb
cmpsl
or
jb
push
scas
xor
cmpl
leave
pop
outsl
js
pop
sbbl
popf
push
incl
xlat
insb
call
mov
or
jl
movsl
pop
mov
fsubs
movsb
and
jae
dec
fst
sti
pop
jo
test
cld
out
lea
and
adc
cltd
mov
cmpsl
and
pusha
loop
sbb
xchg
xchg
movsb
out
loop
xchg
dec
sub
mov
jecxz
push
repz
jecxz
cmc
test
mov
outsl
jmp
loop
mov
call
cld
or
cmpsl
shl
inc
and
push
push
bound
xor
cmp
push
jle
rcrl
push
xchg
flds
inc
sbb
fisubrs
or
dec
xchg
cs
sar
call
add
lods
addps
xchg
cmp
test
adc
pop
mov
es
lahf
xor
neg
sub
adc
ret
mov
inc
add
mov
nop
test
jle
call
pop
aam
sahf
xor
dec
addb
pop
cmovns
orb
cld
lcall
not
mov
call
inc
ljmp
insb
sti
inc
pushf
iret
adc
or
mov
pop
mov
cs
insl
mov
fisubs
sti
adc
stos
mov
add
mov
push
push
mov
jno
ja
push
add
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
shrb
cltd
fdiv
dec
adc
sbb
je
hlt
out
lock
pop
divb
mov
mov
and
repnz
mov
mov
mov
xorl
gs
or
adcb
dec
cmp
js
add
mov
cmp
mov
mov
or
aas
mov
daa
fildll
arpl
xor
mov
ljmp
jns
stos
lods
push
imul
xchg
push
mov
jno
in
inc
mov
sub
mov
repz
or
outsb
mov
stos
or
sub
mov
jle
lret
sbb
xor
inc
cmpsb
into
rcl
out
call
sbb
into
adcb
xor
push
jns
fwait
aad
sub
xchg
pop
inc
adc
ret
das
sbb
jge
lods
pop
filds
mov
jle
icebp
sbb
push
mov
adc
pop
dec
and
rcrb
je
rcrl
cltd
xor
dec
test
mov
push
movsl
outsl
cs
into
sar
jnp
fistl
or
ret
mov
je
outsb
xchg
hlt
int
in
ret
push
jmp
cmp
std
in
mov
sub
iret
push
dec
in
imul
shrl
ja
jl
sbb
and
jnp
fmulp
jge
out
sub
or
sbb
cmp
push
xor
inc
popf
rclb
frstor
test
xchg
or
add
out
mov
ficoml
sub
mov
inc
ja
ror
popa
and
ret
or
sub
adc
ja
xor
mov
fwait
bnd
lods
xchg
mov
xchg
jnp
xchg
cltd
xchg
pushf
shll
cltd
mov
repz
dec
loop
fisubrl
and
into
test
pop
sbbb
stos
jno
adc
mov
xor
iret
sahf
or
in
cmp
shll
xor
scas
aas
jl
aas
sbb
sub
nop
jle
sbb
js
xor
mov
lds
out
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
pop
xor
mov
stos
dec
ret
mov
dec
cmp
ror
xor
clc
inc
add
dec
sbb
cld
loopne
xchg
mov
cmp
inc
loopne
sahf
js
jb
xor
or
mov
jl
mov
mov
xchg
inc
pop
dec
aam
push
sbb
repnz
sar
hlt
mov
aam
aad
ret
jo
fwait
xchg
sbb
ja
dec
add
cmp
xchg
inc
frstor
mov
bswap
stos
iret
pusha
gs
add
add
mov
es
adc
fisttpll
ficompl
mov
fsubl
cmp
leave
jb
cmp
inc
mov
jo
cvttps2pi
into
scas
in
dec
mov
ds
inc
nop
lds
faddp
push
and
add
add
les
push
rolb
out
jnp
mov
clc
sbb
jnp
in
imul
xchg
sahf
xchg
repnz
mov
pushf
push
jge
adc
lret
and
mov
inc
cmc
mov
in
dec
fstp
stos
or
fnsave
lods
push
dec
mov
ss
sbb
cmp
jmp
dec
pop
test
sbb
out
lret
and
pop
out
xor
imul
data16
imul
sbb
aad
pop
dec
sub
test
mov
mov
or
andb
jae
xor
call
and
popf
fidivl
xlat
loope
mov
mov
rol
stos
mov
push
inc
push
not
jl
sarb
daa
cld
sub
test
cmp
mov
pop
pop
or
ret
mov
push
daa
mov
stos
or
push
les
and
xor
sbb
dec
shll
and
and
sbb
sub
mov
add
lds
cwtl
mov
stc
mov
into
out
fcmovne
cmp
mov
dec
inc
dec
notb
testb
test
cmpsl
mov
cmova
outsb
push
jb
mov
leave
int3
jne
ret
sbb
xor
lcall
push
call
push
inc
lret
sbb
push
mov
inc
test
subb
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
cmp
push
mov
mov
push
sub
cmpsl
arpl
int
inc
jo
fimuls
out
aad
and
push
out
fsubl
into
leave
cltd
push
and
mov
cld
call
jg
cmp
adc
fisubrs
loope
pop
mov
xor
std
rorb
mov
dec
test
fucomi
pop
call
push
je
or
sti
cmpps
cmpsl
jge
out
je
jae
stc
pushf
mov
aas
scas
and
insl
jecxz
mov
subb
mov
imul
ret
aad
jg
js
push
out
sbb
int
movsb
loopne
loope
xor
mov
vpcmpeqd
sub
in
test
lahf
dec
jb
pop
call
jae
inc
push
sahf
mov
nop
daa
push
jp
lea
pop
sub
and
push
lcall
es
punpckldq
repz
not
and
dec
inc
pop
mov
icebp
or
pushf
pusha
cmp
xchg
les
cmp
repnz
and
push
jne
imul
daa
test
dec
cmp
xchg
push
sbb
enter
aas
loop
xchg
out
cmc
in
cmp
imul
arpl
mov
mov
test
mov
rol
xchg
jecxz
outsl
cld
xchg
int
mov
push
or
lcall
in
sub
inc
mov
pop
fwait
sbb
or
adc
cli
push
xchg
adc
aam
sbb
cmp
in
test
and
in
mov
dec
fnsave
push
cmp
inc
or
sarl
sahf
cmp
dec
pusha
jo
lcall
pop
insl
sti
rcrl
sbb
negl
mov
cmpsl
out
aad
das
add
or
test
and
cmp
call
outsb
movsl
cmpsb
test
arpl
push
mov
or
sbb
xchg
ds
jge
test
aas
sbb
stc
loope
pop
dec
mov
and
test
mov
pop
xchg
xchg
aam
mov
jge
fs
jge
adc
movsb
sbb
mov
nop
pop
jmp
mov
add
stc
imul
add
cwtl
push
repz
or
ljmp
inc
cmp
cli
sbb
in
pusha
push
scas
cmp
xchg
fucomip
pushf
repz
rorl
into
inc
das
test
pop
ja
outsb
cmpsl
rcrl
or
jl
adc
jns
out
xchg
outsb
xchg
pop
push
pop
mov
mov
lods
popf
and
ret
ret
mov
mov
test
cmovs
insb
sti
bound
add
sbbb
dec
xor
jb
mov
insb
push
inc
jb
pop
sbb
inc
fwait
idiv
jnp
test
pop
fwait
or
insl
repz
pop
add
sbb
repz
jae
mov
sbb
adc
dec
mov
in
cmpsl
xor
and
mov
mov
mov
inc
mov
adc
sti
xchg
ds
or
push
xchg
outsb
bound
std
dec
mov
pop
xor
jle
outsl
jecxz
add
jmp
xlat
xchg
push
lcall
fists
jecxz
pop
mov
mov
mov
pop
sti
cld
leave
repnz
inc
popl
icebp
push
mov
cwtl
sub
pop
int3
js
rcll
or
push
fnstcw
mov
shll
cmpl
sub
and
jl
cltd
inc
insb
pop
mov
mov
pop
add
rorb
fcomip
pusha
out
jne
adc
cmp
cwtl
adc
test
sahf
dec
push
insl
xchg
mov
xchg
repz
lods
pop
fwait
test
xlat
out
mov
clc
xor
xchg
push
cli
ret
jns
jo
add
cld
pop
and
jb
jmp
stos
sub
cli
cmc
push
add
dec
dec
mov
dec
insb
int3
lods
sub
clc
pop
sbb
ljmp
xor
or
add
mov
inc
ss
iret
shlb
sub
mov
loope
aam
sbb
ficoms
dec
and
clc
rcll
xor
xor
fwait
test
mov
xor
je
fstpl
pop
frstpm(287
push
out
jmp
js
psrlw
les
mov
push
ret
and
mov
seta
std
push
xchg
adc
adc
loope
pop
and
sub
jne
call
jmp
das
jb
hlt
or
adcl
adc
jno
dec
push
rorl
dec
pop
xchg
xor
shrl
inc
addr16
str
cmp
in
ficompl
stos
movsb
inc
mov
sub
inc
dec
sarb
pop
lock
aam
sbb
in
sti
add
pop
inc
add
and
stc
xchg
orb
lods
ficomps
mov
mov
pop
push
imul
inc
ffreep
add
sub
in
jno
gs
inc
mov
add
xchg
xchg
iret
xchg
xor
cs
icebp
mov
pushf
stc
sub
sbb
mov
add
jg
ficompl
adcb
mov
adc
adc
push
jg
and
sar
jno
mov
mov
adc
pop
jae
push
sbb
hlt
sub
pop
jl
dec
push
cmp
adc
lds
jge
pop
fsub
dec
sub
ja
xorl
in
add
scas
fcmovnb
add
pop
clc
and
les
arpl
insb
test
dec
mov
mov
fldt
das
xlat
fcmovne
jnp
in
pop
test
cmp
mov
xchg
fldenv
aas
sub
shr
cltd
lea
sbb
loopne
repnz
sub
add
sti
dec
iret
sbb
mov
jns
popa
ljmp
inc
pop
jmp
lret
leave
stos
xor
xor
xchg
jg
xor
fsub
pop
or
xor
push
loop
mov
and
jbe
xchg
sbb
mov
push
xchg
mov
shll
arpl
xchg
pop
ret
xchg
push
adcl
fisttpll
ret
push
leave
sbb
fbstp
pop
pop
xorb
in
xchg
dec
hlt
or
inc
add
and
movsb
xor
fstps
cmp
repnz
stc
mov
adc
sub
adc
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
adc
mov
ret
shlb
imul
movsl
sbb
pop
pusha
in
cmp
xchg
dec
fs
inc
andnps
call
in
cmp
loopne
test
mov
je
in
jp
in
pop
sti
jp
or
push
push
leave
push
fcmovnb
faddl
inc
in
and
loope
repz
mov
push
int
jmp
push
xchg
jle
es
int3
cmp
mov
mov
sbb
sahf
loope
pop
sub
sub
add
pop
fildll
inc
mov
sub
xchg
xchg
repz
ja
xchg
inc
push
in
inc
cltd
data16
mov
push
scas
cltd
jo
js
mov
aad
sub
dec
scas
inc
std
xchg
jp
jne
stos
movsl
adc
cmp
mov
int3
dec
mov
mov
mov
add
popf
push
mov
push
in
out
lds
fistpll
mov
mov
dec
mov
jecxz,pn
add
cli
rol
sbb
ljmp
in
mov
push
dec
loopne
inc
sub
scas
and
adc
inc
in
xlat
mov
add
adc
jo
xor
sbb
js
mov
xchg
adc
push
nop
or
add
xchg
dec
loopne
or
sbbb
xchg
ds
and
push
sub
xorl
and
push
iret
rcr
xor
sbb
sbbb
add
aaa
dec
pop
mov
int3
into
inc
jo
mov
adc
mov
xchg
outsb
inc
mov
and
push
lcall
rclb
mov
dec
lcall
das
outsb
insl
sub
cli
sub
decl
call
and
push
fnstcw
cli
int
pop
lcall
imul
xchg
push
push
xlat
mulb
dec
xchg
les
jns
sahf
push
incl
or
lea
addr16
lock
jmp
xchg
xor
xchg
jecxz
mov
mov
push
sbb
pop
and
pop
aaa
push
xchg
push
jb
int3
andb
add
mov
cmpsb
adc
pop
sub
jb
mov
sbb
scas
inc
pop
and
sub
in
xor
cwtl
push
xor
imul
add
xchg
in
es
movsb
mov
rolb
and
cmp
xchg
sbb
leave
xchg
add
bound
movsb
mov
stos
dec
sbb
mov
inc
aaa
xchg
dec
movsl
xchg
mov
loop
jnp
inc
mov
mov
in
push
push
movsb
sbb
lahf
ret
pop
lcall
or
sbb
push
lahf
ficoms
rclb
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
cs
rcrl
mov
push
jg
flds
lcall
insl
inc
sbb
out
mov
mov
out
repz
xor
jge
test
mov
lsl
fwait
mov
mov
dec
mov
or
lret
push
lcall
xchg
xchg
xor
xlat
addr16
or
test
lea
lea
pop
push
nop
dec
ret
cmp
insb
mov
lahf
pop
add
js
xchg
ja
and
std
imul
sbb
inc
inc
cmp
fiadds
dec
enter
outsl
rcr
mov
inc
fsubr
inc
call
stos
mov
lock
adc
aad
jns
lock
jp
sbb
in
fistpll
aas
subl
enter
sub
mov
push
rorl
fstpl
xor
mov
mov
outsl
jecxz
loope
lret
cld
nop
lods
and
xchg
adc
mov
mov
jns
pusha
popf
in
jmp
lds
test
inc
scas
inc
gs
lods
loope
data16
xor
inc
loop
into
jmp
les
pop
in
add
cmp
out
iret
sbb
pushl
and
pushf
mov
ja
loop
mov
movsl
test
incb
aad
ror
push
out
es
in
sub
jne
mov
mov
adcb
inc
add
fdivrp
inc
int3
push
xlat
xor
pop
xchg
and
push
call
xor
inc
jnp
dec
jl
mov
lahf
jg
repz
push
or
in
mov
push
dec
les
repz
rcll
jge
incl
je
dec
adc
push
inc
jp
and
mov
cs
mov
mov
popaw
or
sbb
mov
push
ficoml
add
cmp
cmp
xchg
addb
and
fstpt
sbb
pop
xchg
jbe
test
js
cmp
push
mov
testb
ret
ja
adc
cli
in
lea
inc
lods
lret
lret
popf
fsts
push
and
or
test
popf
jb
push
mov
and
out
sbb
and
push
js
xor
mov
and
inc
imull
pushl
bound
mov
sub
push
push
idiv
out
out
and
push
arpl
mov
les
push
insl
sbbl
mov
or
push
xchg
in
out
vpmaddwd
jnp
pop
pop
cmp
into
imulb
add
repnz
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
in
adc
in
les
mov
mov
mov
ficomps
dec
js
je
data16
out
xor
mov
dec
add
adc
mov
loope
jle
imul
rolb
xor
fadd
cli
jno
ret
inc
pop
or
push
sbb
inc
jae
jl
nop
or
jl
sbb
test
aam
ds
adc
dec
adc
push
mov
jns
out
mov
mov
or
les
bswap
sbb
popa
xchg
stos
aaa
idivb
in
outsl
mov
add
rcr
fdivl
inc
adc
push
movsb
push
push
sub
fidivrl
arpl
and
stos
outsb
pop
addr16
fcmovu
sub
push
outsb
jne
add
aaa
mov
mov
ss
xchg
ja
dec
ja
jb
bound
push
sub
idivb
lds
dec
push
daa
jle
ficoml
scas
lods
lret
insl
cmpsl
out
jle
cmpsl
data16
int3
cmp
push
sub
xchg
pop
negb
sbb
into
add
xchg
sbb
mov
jl
pop
imul
adcl
dec
or
push
out
xchg
repnz
pop
adc
adc
lret
popa
adc
mov
ds
testb
sti
test
xchg
lcall
movsl
xor
mov
imul
inc
out
and
aaa
jg
sar
jmp
mov
aas
or
adc
add
xor
mov
pop
mov
mov
mov
inc
test
out
fidivl
inc
cmp
jecxz
adc
jmp
add
mov
jne
sbb
insl
jp
fidivl
sbb
sbb
mov
sarl
dec
icebp
leave
leave
sub
icebp
out
sbb
mov
pop
xor
mov
ffreep
push
out
adc
icebp
icebp
mov
adc
cmp
inc
lahf
inc
cltd
fimuls
cmp
cmpsl
test
test
mov
fmul
dec
scas
sti
sbb
fstpl
pop
sbb
mov
pushf
pop
fnstenv
int3
aaa
xor
enter
sbb
adc
adc
inc
push
imul
lods
mov
mov
enter
mov
je
shll
int3
dec
lods
ret
loopne
xchg
out
and
shlb
fs
movsl
push
or
cmp
ret
inc
aas
mull
int
push
cmc
lock
mov
pop
imulb
outsb
pop
cmc
or
outsl
in
mov
jge
cmp
and
mov
mov
push
scas
sub
popf
adc
cmp
and
lahf
insl
inc
add
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
sub
pop
jb
mov
xchg
cmp
cmp
add
lret
pusha
sub
shrl
pusha
push
aam
dec
imul
cmpsl
sbb
push
inc
shrb
jae
jbe
gs
xor
leave
cmp
in
aaa
pop
sub
pop
mov
test
cmp
iret
test
scas
je
mov
mov
jl
pushf
ljmp
iret
int3
lods
cmp
or
mov
loop
pop
push
mov
dec
inc
fadds
inc
inc
fld1
pop
mov
sbbl
sbb
loope
jmp
adc
in
mov
dec
cmc
mov
mov
sbb
out
inc
out
mov
ret
dec
mov
ljmp
lcall
mov
in
push
add
sbb
pop
pop
adc
repz
sub
pop
icebp
mov
adc
lods
les
popa
rol
sahf
enter
jb
jp
and
mov
and
jbe
mov
xchg
jbe
incb
cmp
je
push
pushf
sub
cmp
add
adc
sarb
xor
roll
hlt
or
mov
and
sub
push
ror
sbbl
inc
sub
hlt
xchg
ficompl
movsb
push
test
icebp
add
dec
mov
mov
jb
loopne
dec
lret
sbb
in
inc
cltd
lods
inc
mov
xor
jmp
xlat
push
dec
fmulp
ret
call
add
push
test
dec
fincstp
push
jnp
mov
insb
in
pop
aam
mov
outsl
aaa
pop
push
inc
ret
mov
loop
rorb
lret
lods
icebp
and
and
shll
fimuls
jmp
cmp
popa
cmp
xchg
out
mov
iret
jae
cmp
or
pop
cmp
push
pop
push
lcall
shlb
inc
mov
push
xor
lods
mov
push
mov
test
dec
popa
test
repnz
jb
aad
imul
leave
inc
aas
out
addl
pop
test
in
mov
xchg
adc
mov
fs
cmpl
mov
push
mov
cs
xor
stc
xor
sbb
inc
lahf
daa
sbb
jmp
jle
scas
lcall
cli
fs
into
xor
js
adc
enter
mov
out
mov
and
ror
filds
jge
mov
pop
lods
and
mov
dec
popa
inc
out
sti
and
or
add
sub
mov
xchg
or
add
sbb
xchg
fdivr
iret
push
jmp
add
xor
out
out
inc
adc
sbb
xor
xchg
ret
movsl
jmp
hlt
dec
pushf
cld
or
mov
leave
pusha
test
pop
ss
xchg
stos
mov
and
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
pop
mov
ret
ja
pop
xor
in
sub
xchg
push
pop
xchg
xchg
ss
pushf
mov
sub
nop
cli
mov
lcall
popa
nop
jecxz
popf
push
jne
fsubs
mov
cmc
stc
sub
aam
rcrb
data16
dec
pop
mov
scas
push
shlb
xchg
push
xor
xor
enter
lahf
arpl
mov
jmp
mov
and
add
mov
xor
xorl
xchg
jne
push
aad
popa
cli
aaa
xor
xor
daa
pop
pop
stc
xchg
jb
xor
cli
fucomip
jecxz
inc
add
cld
add
lds
xor
pop
sbb
pushf
daa
sub
xchg
adc
fwait
fldl
or
leave
rolb
in
int
sarl
and
lcall
sti
lods
lret
test
mov
xor
or
out
and
lret
clc
ficoml
sbb
cmp
ljmp
dec
pop
stos
adc
jecxz
in
pop
out
in
cmpsl
arpl
aam
cltd
aam
lock
popa
in
mov
aaa
cs
mov
pop
sbb
or
mov
out
testl
inc
push
dec
daa
je
in
shrb
adc
sub
jae
mov
mov
hlt
pop
and
lock
jecxz
pop
add
xor
in
fcompl
jb
xchg
notl
xchg
mov
nopl
push
xchg
jae
cmp
out
inc
popf
sbb
mov
sar
ror
jl
mov
mov
mov
add
testl
leave
pop
xor
mov
scas
ds
dec
mov
test
mov
scas
aas
jae
cmp
stos
mul
clc
adc
mov
xor
mov
push
adc
mov
or
pop
fs
push
outsb
mov
loope
lret
xor
repz
outsb
enter
fistps
mov
mov
sbb
sbb
push
insl
testb
pop
loope
fs
mov
test
adc
ja
jp
outsl
inc
push
aad
add
scas
mov
jl
xor
rcrb
cld
insl
sahf
outsb
outsb
mov
or
ficompl
adcb
sarl
sub
pusha
stos
es
xchg
cmp
test
les
add
add
jmp
push
mov
lods
mov
dec
sub
xchg
jmp
int3
sub
out
mov
add
call
mov
in
mov
rcr
mov
dec
xor
jbe
out
out
and
js
xchg
in
mov
jno
mov
adc
cmp
fcomps
mov
in
and
cli
push
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
loope
pop
sahf
mov
les
mov
cmp
rorl
popf
and
test
jecxz
cltd
stos
mov
in
mov
mov
je
je
lret
sti
fnstcw
std
nop
push
addr16
mov
mov
or
ljmp
aad
adc
in
mov
mulb
pop
or
sbb
mulps
icebp
dec
and
inc
movsb
mov
out
jns
cmp
add
jecxz
cmp
pop
jg
push
mov
pop
mov
mov
or
and
jmp
jl
fdiv
mov
sub
dec
dec
popf
and
lret
jp
push
sub
clc
pop
cmp
insb
roll
cmp
sbb
xor
sti
sub
in
sbbb
xchg
jecxz
jmp
xchg
negl
mov
jle
lock
sub
test
es
aas
out
stc
jo
data16
std
jo
faddl
sbb
cmp
popf
adc
and
in
gs
pop
lds
rcrl
xchg
clc
mov
jmp
dec
dec
xchg
push
lea
es
xchg
xchg
cmp
push
cwtl
pop
ds
loopne
add
mov
mov
push
imul
sub
sar
in
adc
fiadds
adc
mov
aam
enter
or
pop
rcll
adc
das
out
int3
mov
inc
nop
mov
jae
mov
xor
iret
fstpl
lds
mov
add
lea
inc
imul
insb
popf
xor
std
or
add
js
dec
xor
pop
pop
les
jns
es
inc
rcll
pop
lret
lahf
mov
int
movsb
scas
imul
add
xchg
fisttps
mov
xor
outsb
daa
hlt
mov
push
fdivrl
loope
and
adc
fcmovnb
rcl
mov
out
jb
xor
jle
imul
imul
aad
add
dec
jnp
mov
xchg
jo
cltd
or
mov
push
push
adc
mov
repz
loop
out
pop
clc
lret
mov
pop
dec
shl
cwtl
mov
mov
pusha
or
sub
and
fidivrl
mov
mov
rorl
pop
push
popa
scas
pushf
xor
fsts
xor
mov
ret
and
mov
and
scas
or
test
push
pop
test
pop
and
pop
lret
hlt
mov
lcall
xorl
xor
pop
dec
mov
neg
cmp
xchg
xchg
push
or
add
jle
xchg
mov
jno
mov
cmp
cmp
mov
or
push
test
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
mov
mov
mov
push
repz
fmul
xor
mov
sbb
push
fdivp
ss
jp
inc
push
clc
icebp
xchg
sbb
cmp
test
lock
pushf
and
lret
out
add
popa
add
sahf
sbb
das
xchg
ret
lock
test
jg
mov
cmp
repnz
stos
cmp
sti
cs
jae
xor
sbb
pop
mov
test
aad
mov
push
dec
ds
rcll
xchg
jg
sub
ss
cmpsl
rcll
xor
and
fsubs
lret
lock
in
push
fisttps
add
xchg
je
jl
mov
inc
test
inc
movsl
mov
push
add
cmp
es
pop
in
aad
fdivr
in
add
sbb
cmp
lret
pop
mov
daa
and
scas
add
aas
cmpsl
mov
push
dec
stos
out
add
ds
std
jno
ds
mov
pop
int3
lods
fcmovu
add
jl
dec
or
sub
dec
in
icebp
lds
call
or
lods
pop
lea
cmp
pop
loop
jecxz
sbb
or
fcmovnbe
xchg
cmc
mov
sub
rclb
mov
outsl
rolb
cmp
sub
fiadds
mov
setns
sti
xor
fldl
sbb
jg
adc
jae
sub
ja
mov
dec
fwait
mov
mov
cmc
adc
aas
jb
sti
bound
push
and
xchg
int3
adc
mov
cmp
bound
cmpsl
sub
test
lret
cmp
mov
cmc
sbb
cmp
xor
dec
xor
fildl
push
mov
mov
add
dec
popa
fdivrl
ss
sti
push
shl
inc
stos
dec
push
mov
data16
mov
jns
ss
xor
cmp
hlt
es
aaa
sbb
jp
push
push
arpl
xchg
xchg
or
pushf
xchg
xor
shll
dec
xchg
sbb
xorb
add
pop
cmp
shlb
test
mov
rcrl
roll
and
jecxz
pop
push
jo
cmp
mov
push
or
out
mov
jle
fabs
fldenv
nop
cmc
mov
cmpsl
xor
pop
jns
jecxz
xchg
xchg
rcl
adc
lret
cmp
push
jmp
sub
lods
jnp,pt
push
pop
fs
sbb
rorb
xlat
icebp
cmp
in
int3
cli
js
push
fdivs
mov
push
insb
testl
es
mov
sub
adc
ds
test
cli
and
lcall
les
movsb
imul
loope
sub
icebp
imul
pop
orb
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
inc
fstpl
mov
mov
stos
inc
xor
or
push
lret
xor
lret
decl
push
aas
pop
cwtl
in
sbb
mov
pop
mov
sub
shlb
and
fpatan
inc
aad
cmp
popa
not
fcoml
shrl
and
lahf
pop
fwait
inc
fdivs
movsb
mov
arpl
mov
ret
in
sbb
inc
fisttpl
adc
push
inc
add
or
lock
in
jne
fistps
lcall
pop
repz
adc
cmp
push
out
jae
test
mov
lock
push
lds
adc
in
mov
arpl
psubd
test
stc
or
ss
repz
outsb
jno
jmp
xor
imul
inc
cmpsl
outsl
iret
sbb
inc
hlt
fs
jbe
fs
pop
dec
mov
out
mov
xor
clc
dec
xlat
jno
arpl
xchg
sahf
je
cmpsl
cmp
inc
rcrb
mov
push
mov
cmp
cmpsb
and
mov
sbb
sbb
cmp
fnstenv
fsubs
in
mov
out
aam
lret
lds
imul
gs
dec
es
dec
pushl
orl
fstps
andl
test
rcrb
sbb
cmpsl
lahf
mov
dec
stos
push
pop
cmpsb
sub
popa
sbb
lahf
das
int
movsl
pop
test
stos
sar
test
rolb
movsl
fisttpl
lret
push
out
cmpsb
in
and
xlat
push
loope
test
pop
stos
inc
lahf
outsb
jmp
lea
jmp
imul
mov
sub
popa
lahf
mov
cmpsb
jnp
nop
jbe
push
fwait
lret
rorl
jl
jp
aas
outsb
lds
imul
and
rolb
icebp
xchg
sbb
test
adc
add
sti
fcmovnu
adc
mov
and
lret
xchg
mov
fmuls
xchg
hlt
and
sarl
jmp
in
sub
out
dec
shrl
inc
add
and
enter
adc
out
ljmp
cwtl
int
cmp
jne
or
fsubs
int
mov
loopne
lret
cmp
enter
stos
dec
or
mov
js
inc
xchg
push
fwait
arpl
pop
or
outsb
fstl
dec
jg
cwtl
sub
subb
sub
in
in
pop
pop
push
aad
push
fidivrs
outsb
mov
addr16
stc
rol
imul
xor
sahf
imul
int
fsubr
or
lahf
sbb
sbb
mov
adc
scas
inc
pop
push
cmp
mov
add
mov
data16
sub
fsubrl
mov
push
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
cmp
in
les
fcompl
add
and
cs
dec
addr16
mov
fldl
lret
rolb
in
xor
sub
ret
lea
lds
inc
imul
hlt
fstps
xor
mov
test
hlt
jne
dec
push
test
jl
push
in
push
mov
mov
call
lock
mov
sti
cmp
jmp
subl
cltd
rcll
mov
addr16
xchg
sahf
and
int
sub
inc
popa
mov
out
jb
pop
cmc
test
shr
adc
test
aas
mov
sbb
xor
sub
sbb
rcrb
fsubs
inc
inc
push
repz
ds
and
pop
leave
fldl
xchg
xchg
xor
cmp
fdivr
sti
push
cmp
add
mov
fsub
adc
scas
push
mov
or
sahf
jo
shll
mov
xchg
sbb
stc
std
xor
lds
icebp
adc
in
or
das
out
sti
ret
add
testb
lods
loop
imul
cmp
lahf
test
bound
js
xchg
shr
filds
lods
fwait
int
fucom
aaa
mov
cltd
pop
jb
and
jno
sub
push
repz
jbe
sub
sub
out
sahf
into
push
and
outsl
andb
xlat
insl
imul
pushf
idivl
or
je
sbb
nop
xchg
mov
mov
loope
dec
out
push
into
cmc
adc
loop
test
jno
mov
mov
adc
and
xor
and
test
iret
push
adc
lock
out
popa
push
dec
mov
rorb
push
insb
pop
or
cmp
data16
mov
sahf
mov
add
inc
jge
dec
sar
xchg
jbe
orl
xchg
out
lcall
mov
mov
sub
adc
addb
sub
push
sbb
rolb
push
or
and
repz
pop
lock
adc
or
mov
test
xor
mov
fmuls
mov
or
push
std
sahf
pop
inc
adc
enter
rcll
mov
sub
aad
inc
inc
mov
pop
jnp,pn
push
inc
cmp
jmp
and
xchg
xchg
mov
lahf
jl
mov
shlb
repz
sbb
and
or
mov
imul
mov
add
adc
shlb
aaa
mov
stc
stos
xor
sub
jmp
xor
mov
cld
mov
sbb
lcall
mov
iret
mov
push
add
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
outsl
out
cmp
jnp
mov
mov
xor
ss
repnz
data16
or
xchg
iret
jp
ds
lds
incb
mov
jnp
pop
and
cmp
pusha
outsl
andb
loop
xlat
inc
fwait
jne
cmp
sub
movb
iret
movsb
fiaddl
push
jl
xchg
inc
xchg
mov
mov
mov
scas
mov
sti
mov
imul
cmp
push
or
addr16
jmp
mov
jecxz
fwait
and
scas
faddp
fwait
mov
push
lods
mov
fsts
or
xchg
push
negb
and
add
out
jne
jl
cmpl
fmulp
mov
adc
xchg
and
fdiv
xor
imul
mov
sti
lods
inc
add
pushf
push
mov
xchg
fwait
das
dec
inc
sub
mov
sti
popa
popa
adc
sub
and
pusha
inc
hlt
xchg
sub
in
stos
shrl
aam
xlat
test
daa
sbb
std
adc
push
mov
bound
and
xor
mov
mov
lret
shrb
mov
popf
xchg
mov
dec
outsl
mov
mov
idivl
xchg
push
inc
cmp
fidivl
or
jb
lret
cltd
add
xchg
int
dec
out
inc
sub
sbb
push
movsl
ds
xchg
and
add
ja
leave
jp
mov
adc
xchg
adc
icebp
push
mov
lock
in
xchg
jl
fldenv
push
sub
xchg
rorb
sub
jae
insb
mov
hlt
rcll
cwtl
mov
leave
push
lods
mov
out
movsb
lret
cmp
cmovle
addl
sti
or
xchg
and
loopne
sbb
pop
jo
and
or
xlat
pop
and
push
negb
ret
pop
mov
data16
clc
adc
cld
mov
fistl
nop
mov
sub
daa
xor
flds
adc
push
int3
out
inc
or
dec
mov
xchg
push
cmc
jb
adc
mov
xchg
push
shl
mov
cld
dec
mov
pop
xchg
sti
pushf
and
sbb
xor
scas
ret
stos
mov
rcl
pop
pop
lods
movsb
loopne
jo
ja
dec
cmp
mov
cmp
orl
out
mov
cmp
in
outsb
cmpsb
mov
in
ds
xor
cmp
test
push
out
push
out
dec
add
into
add
stos
sbb
mov
inc
int
add
mov
push
pop
xlat
cmp
cmc
pop
push
sub
scas
loope
xchg
hlt
add
fldcw
xor
push
call
shll
out
jns
xor
in
mov
stos
stc
scas
sbb
jl
pop
and
lcall
pop
adc
fisttpl
lret
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
fninit
stos
sahf
mov
mov
adc
and
iret
movsb
or
xchg
xchg
xchg
popa
and
fcoms
test
in
ficomps
imul
insl
in
jmp
inc
and
shlb
xlat
cltd
push
sahf
pop
jmp
pop
daa
add
cwtl
mov
cmp
add
cli
jo
and
loopne
shlb
inc
out
xor
push
adc
mov
imul
xchg
mov
jno
in
jno
ja
mov
jp
repnz
arpl
dec
sub
lock
or
xchg
ja
sbb
dec
push
ljmp
negb
test
jle
ss
in
andl
pop
mov
jmp
cmc
iret
cli
xor
or
jno
push
test
jge
shrb
bswap
mov
dec
and
adc
insb
mov
xor
movsl
es
xor
ljmp
and
into
loop
adc
sub
mov
lods
dec
push
add
dec
out
mov
sbb
sbb
xor
lds
mov
add
mov
cltd
mov
sub
mov
lcall
add
stos
mov
mov
je
imul
xor
dec
dec
mov
rcll
mov
aam
sarb
dec
sbb
inc
cld
in
cwtl
sbb
add
mov
jge
ret
stc
jb
cmpsl
ficoml
test
js
in
lahf
sbb
push
mov
out
push
jmp
xchg
xchg
leave
mov
rcrb
out
and
mov
mov
cmp
sub
jns
rorl
sub
push
xor
popa
test
cs
shlb
push
jge
int
loop
or
inc
pop
iret
jns
sbb
mov
mov
inc
fs
ss
lahf
jl
xchg
dec
add
movsb
add
out
cmp
jbe
xor
aam
push
lods
mov
cli
mov
pop
cmp
aaa
int3
and
dec
pop
cli
jmp
xchg
data16
js
pop
xchg
dec
dec
int3
xor
ljmp
int3
sub
mov
test
js
jp
sti
push
dec
inc
js
loopne
jmp
push
decb
fadd
xor
fimull
jecxz
shl
imul
mov
cli
cmpsl
xor
loop
or
jnp
repz
cmp
pop
out
push
xchg
jo
add
ds
push
jns
xchg
fucomip
fildl
js
das
adc
out
out
mov
shlb
mov
aas
cltd
aaa
jne
ds
aas
sub
jns
cmpsl
jb
aad
mov
ss
jae
icebp
mov
jg
je
arpl
das
lahf
aaa
mov
pushf
rol
jmp
orl
mov
sub
jmp
dec
adc
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
pop
mov
mov
hlt
and
inc
dec
ljmp
sub
sub
aaa
push
pop
cmp
jp
fistpl
dec
rcr
dec
xor
jno
cmp
jg
jecxz
mov
std
mov
mov
inc
jb
je
push
or
in
jbe
xor
arpl
out
xor
inc
inc
mov
int
xchg
incl
cmp
jnp
xchg
loop
mov
clc
and
addr16
pop
push
es
sbb
adc
push
xchg
push
lock
repnz
sub
push
movsb
icebp
lcall
adc
sub
xchg
mov
mov
jne
xchg
push
pop
loop
mov
cltd
mov
shrl
in
lret
cmp
sbb
sbb
rorl
subl
aaa
adc
jg
addr16
testb
mov
sbb
sub
addr16
ret
mov
fdiv
lahf
dec
cmp
aad
adc
adc
pop
xchg
push
mov
pop
lds
sbb
enter
testb
add
add
inc
sbb
testb
test
ss
cmpsl
mov
movsb
out
es
iret
nop
sub
jno
cmp
cli
stc
mov
jb
xchg
je
sbb
imul
call
in
pmovmskb
outsb
movsl
push
jp
js
mov
adc
movsl
mov
dec
ljmp
inc
cmp
jo
insl
shl
jns
cmp
push
mov
and
cmpb
cld
cltd
jmp
repnz
mov
stc
dec
mov
dec
test
cltd
scas
add
leave
test
loop
loope
sub
jb
inc
das
xchg
cmp
add
pop
in
jae
dec
xchg
fprem1
repnz
int
xor
andb
fildll
dec
imul
mov
xchg
xchg
fistl
add
call
outsl
adc
inc
outsb
mov
and
jns
xor
nop
aaa
mov
inc
inc
cmp
mov
adc
xor
les
lahf
jb
bswap
aam
jb
dec
out
leave
xor
mov
push
pop
arpl
sbb
xchg
aaa
inc
mov
lcall
push
shlb
arpl
scas
popa
xor
pop
loop
and
inc
mov
cmp
imul
mov
sbbl
out
mov
dec
push
rolb
cld
out
insl
test
cmp
sbb
and
or
scas
dec
jnp
mov
push
xor
repz
cmp
push
inc
in
sahf
mov
sbb
outsb
sub
push
cmp
push
pop
mov
adc
ds
mov
xor
scas
sub
loopne
lock
daa
mov
into
mov
add
call
mov
mov
mov
rorl
mov
mov
ret
imul
pop
mov
leave
ja
jge
xchg
inc
std
repz
xchg
sbb
in
adc
jge
push
aaa
push
jnp
adc
fildl
inc
js
ficompl
push
clc
and
mov
jmp
loopne
mov
jg
sarl
jge
in
daa
push
dec
idivb
cmpsb
mov
flds
adc
stc
pushf
pushl
scas
outsl
ja
lret
movsb
fs
test
pusha
push
jnp
out
xor
ljmp
jo
mov
dec
loope
call
or
stc
xchg
cmp
xchg
out
addb
fcomip
sbb
repz
sahf
xor
or
les
pop
or
les
dec
sti
insb
andl
add
sbb
mov
xor
loop
xor
in
mov
pop
idivl
fnstcw
lds
gs
mov
xchg
dec
lea
push
xchg
outsb
jno
inc
sahf
in
add
jb
dec
sub
push
push
inc
xor
push
dec
jle
aas
lock
adc
out
out
imul
push
sarb
push
or
add
jg
jle
repnz
and
jmp
dec
lret
mov
xor
push
dec
jle
inc
lds
adc
stos
lcall
mov
pop
pop
pop
fnstcw
insb
out
lods
inc
add
movsb
push
dec
scas
lea
movsb
incb
inc
jg
cs
inc
loope
mov
pushf
jns
mov
ret
push
out
mov
pop
push
hlt
cmp
cs
lcall
repz
jge,pt
lret
in
or
cmp
jmp
add
les
or
sub
xchg
pop
mov
mov
pop
sbb
xchg
cld
mov
sbb
mov
add
dec
dec
jp
int
sti
les
fldcw
lds
testl
repz
insl
add
in
sub
jo
popf
jle
in
xchg
adc
xorb
jle
in
and
jmp
sub
dec
pop
jle
out
lahf
out
sbbb
xchg
add
scas
subb
lock
repz
lcall
xor
dec
lret
scas
dec
and
out
sbbl
adc
std
daa
frstor
xchg
out
pusha
push
repz
xchg
popa
mov
mov
push
mov
mov
dec
enter
movsb
sahf
inc
popa
loop
lcall
xchg
jns
out
mov
add
mov
bound
andb
xchg
pop
mov
in
loope
sbb
lods
lock
mov
fs
dec
dec
adc
dec
push
and
pop
enter
adc
cmp
pushf
leave
xchg
je
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
out
jne
sarl
mov
mov
jge
into
dec
fimuls
xchg
push
cli
jbe
mov
cmp
mov
mov
popf
pop
pusha
sub
lods
pusha
mov
fs
ljmp
mov
rcrl
aam
movb
cltd
push
add
or
xchg
adc
xlat
cmp
and
aaa
lcall
stc
mov
into
frstor
into
mov
scas
mov
loope
shll
and
push
int
addr16
xor
mov
add
sbb
scas
jl
jmp
adc
popf
inc
xor
mov
xor
xor
pop
pop
add
jne
cld
stc
pop
shll
mov
lret
adc
add
xchg
movsb
mov
sub
testb
aad
movsl
pop
stos
sub
add
dec
out
popf
xchg
faddl
es
movl
jo
fisttps
cmp
in
xor
rorl
inc
push
scas
faddl
cmpsb
sbb
xor
hlt
sahf
adc
mov
push
lret
mov
and
pop
shr
push
cwtl
repz
xchg
sub
cmpsl
and
mov
pop
cmpsb
lret
pop
hlt
mov
pop
sub
sbb
xchg
ja
xchg
popa
add
movsl
cmpsl
sub
xchg
jge
pop
rcl
sbb
pop
xor
fdivs
jns
inc
andl
xchg
adc
scas
mov
je
aaa
dec
push
adc
or
jnp
lds
sbbb
lcall
adc
int3
and
or
push
mov
adc
sahf
rclb
pop
inc
sti
push
pop
insb
mov
adc
mov
lcall
aam
push
out
sub
and
jg
pop
jge
push
pop
xor
stos
or
lea
lret
pop
adc
insb
rorl
push
pop
xchg
fs
sub
fsts
ljmp
call
mov
fdiv
pop
and
scas
push
dec
lahf
xchg
test
push
jae
or
push
or
mov
leave
testb
lea
xlat
jb
xchg
je
shrl
xor
mov
mov
cld
bound
and
xchg
sahf
cmc
xchg
stos
movsb
dec
lds
xor
ret
ljmp
jo
xchg
dec
inc
outsb
fidivl
bnd
sbb
xor
insl
add
fadd
popf
lea
mov
sub
cmpsb
into
out
std
stos
sbb
bound
push
add
jle
add
loopne
jae
fwait
repnz
dec
jb
cmpsl
mov
push
mov
inc
lcall
push
and
sbbb
mov
fsubr
loop
aas
xchg
roll
mov
mov
sbb
lret
cmp
stos
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fnsave
jo
nop
insb
mov
mov
outsl
mov
les
mov
mov
mov
cltd
jge
inc
pusha
push
mov
loop
stc
fisttpl
mov
add
inc
ror
mov
jmp
sahf
push
pop
imul
jns
add
mov
cmpsb
into
add
mov
aam
ja
test
das
scas
nop
ss
xchg
mov
jbe
pop
out
es
fmul
rclb
cltd
outsl
jg
stc
ds
adc
mov
callw
scas
and
and
add
aam
inc
pop
add
mov
pop
js
push
aas
mov
aam
jo
xor
shrl
mov
cmp
adc
dec
rcr
icebp
push
cmp
adc
jb
inc
jbe
and
mov
enter
push
mov
mov
lock
mov
pop
sti
lret
xchg
sub
test
mov
adc
add
leave
sahf
xchg
outsb
xchg
push
sbb
mov
aad
fistl
loope
roll
popf
and
cmp
enter
je
leave
xchg
js
jge
jl
dec
sub
cmp
lret
pusha
scas
fisubl
mov
dec
pushf
insl
es
inc
pop
dec
fmul
xchg
cmp
jcxz
add
leave
loop
icebp
jge
movsl
movsl
mov
nop
cmp
or
loop
ss
repnz
ficoms
mov
xchg
iret
mov
jmp
cld
xlat
xchg
into
ss
mov
ror
stos
in
fcomi
inc
je
mov
dec
in
cld
out
lds
cmpsb
scas
push
divl
push
leave
push
cmpsb
and
jno
jns
add
mov
insl
repnz
jns
fsubrl
inc
push
push
adc
xor
mov
ja
out
cmc
int3
mov
fimuls
xor
mov
fisubrl
push
and
and
movsb
jbe
dec
dec
outsb
shl
ds
mov
push
xchg
lret
pusha
stos
mov
pop
std
lret
divb
or
push
in
cmpsl
int
pop
lea
cld
clc
cltd
inc
lock
lahf
jb
mov
push
ficoml
jmp
adc
sub
pop
scas
adc
std
enter
out
sbb
xchg
fistps
mov
pop
cmp
stos
cltd
xchg
aad
subl
in
mov
pop
cmp
adc
pushf
sub
xchg
js
cld
xor
cmpsb
adc
popa
rcl
sbb
in
movsb
mov
fs
dec
xchg
iret
ficomps
cmpsl
cmpsb
inc
adc
das
sbb
pop
and
hlt
xchg
xor
mov
mov
push
mov
fdivl
cmp
mov
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
xchg
pushf
mov
mov
fcompl
movsl
cmp
mov
inc
add
inc
in
adc
addr16
mov
imul
je
mov
dec
in
js
leave
jle,pn
xchg
sub
or
push
mov
dec
pop
jmp
pop
cld
sbb
add
sub
mov
leave
ret
adc
xchg
sub
shll
mov
and
mov
push
rorl
orl
mov
pop
pusha
mov
push
fwait
cmc
pop
clc
aad
or
stc
xor
jb
mov
inc
and
out
fsubrl
and
lahf
dec
dec
and
or
nop
ja
std
ss
dec
mov
xor
les
push
dec
sbb
lods
pop
push
jp
jns
in
push
dec
push
xchg
xor
incb
hlt
push
xorl
fstpt
insb
jg
jne
js
mov
jno
xor
sub
pop
ja
jg
pop
loop
scas
sbb
cmpsb
add
fsubr
add
jne
fistps
ds
push
ss
stc
cs
pop
xor
pop
sub
mov
add
shlb
dec
jge
or
push
test
xor
fmull
sub
mov
les
inc
test
mov
popa
cmp
push
mov
inc
pop
lret
inc
lcall
in
fisttpll
in
rcrb
jnp
addr16
pop
mov
inc
es
xchg
insl
sub
insl
lcall
pop
dec
sbb
dec
addr16
pop
xchg
cld
add
ds
sub
xchg
stos
dec
leave
aam
jle
xchg
and
mov
mov
aaa
push
inc
outsb
cmp
inc
popa
mov
mov
jne
sbb
mov
xor
add
outsl
sub
xor
rcll
outsl
cs
xor
addr16
lea
add
jg
xchg
jnp
pop
inc
rcrb
sbb
jle
negl
inc
push
mov
jg
lods
aam
int3
jmp
leave
mov
sti
mov
xchg
push
data16
add
loop
or
stos
jmp
cli
mov
sbbl
mov
mov
inc
into
pop
sti
je
outsb
mov
sar
sti
std
adc
push
and
cmp
aad
scas
and
imul
int3
cmp
movsb
dec
jle
jnp
out
sub
test
lods
dec
cs
jne
jns
jmp
mov
std
aam
push
hlt
out
push
mov
test
movsl
ror
and
xor
cmpb
mov
pop
inc
xor
adc
aaa
mov
add
xor
cmp
insl
cmp
fisttpll
adc
mov
cmp
mov
xlat
fldcw
cmp
lds
jns,pn
pop
sti
lods
dec
fisubl
incl
jmp
addr16
pop
xlat
add
lcall
andl
in
push
pusha
xchg
cmc
or
jecxz
cmpb
xor
inc
psubb
push
mov
fldl
outsb
add
les
or
or
or
adc
dec
cmc
add
iret
popf
imul
mov
fstpl
mov
jno
outsl
dec
pop
and
pop
inc
push
js
nop
jecxz
call
cmpsl
xchg
dec
das
outsb
mov
xor
rcrl
jp
cmc
stos
cltd
dec
ss
mov
rol
shl
or
inc
push
mov
imul
das
inc
or
test
xor
push
push
shl
dec
mov
mov
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
nop
insb
sarb
out
ret
das
sub
arpl
lods
sti
decl
jecxz
xchg
das
out
inc
cmp
testb
mov
inc
and
inc
outsl
mov
clc
jbe
sub
int3
dec
add
subl
rclb
inc
test
pop
out
ficoml
lcall
jmp
jo
or
mov
xor
adc
jns
xorl
sbb
lods
mov
mov
popa
fisubrs
dec
adc
jns
in
dec
xchg
push
xchg
push
xor
dec
mov
fs
add
call
das
lahf
pop
cltd
cld
filds
push
loopne
mov
dec
rcrl
call
jp
pop
add
adc
pop
cmpsb
or
push
movsl
jbe
xchg
push
ret
lock
mov
sub
mov
mov
lcall
shrb
inc
test
and
movsl
je
bound
push
popf
inc
xor
daa
jmp
mov
jmp
stos
adc
ffree
out
dec
bound
aam
shlb
jns
cwtl
stc
fcomp
inc
cmp
dec
test
inc
add
jbe
repz
push
movsb
mov
add
jecxz
icebp
push
sbb
sahf
sbbb
xor
lret
adc
sbb
dec
push
fcomp
and
aas
dec
push
push
mov
clc
mov
daa
jmp
sbb
xor
insb
cmc
sarl
shll
cwtl
aad
pusha
cs
movsl
lcall
std
cltd
mov
jnp
aam
orl
das
in
stos
mov
enter
mov
cmp
movsb
mov
and
add
inc
hlt
and
addr16
inc
pop
int
bound
push
in
adc
inc
mov
jmp
mov
popa
push
fcompl
in
adc
mov
push
test
std
jo
sbb
sub
add
fcomp
and
scas
jl
pop
rcrb
bswap
xor
xor
incb
lods
and
mov
das
aam
shl
add
push
test
sbb
or
cmpsl
movsl
lods
call
adc
mov
push
fwait
add
add
lock
cmp
mov
xchg
mov
ret
dec
std
ljmp
movsl
pop
jmp
push
das
xchg
inc
mov
lock
fnstenv
xor
into
pop
adc
mov
rclb
mov
push
sbbl
adc
xor
cmp
inc
xchg
sub
inc
mov
mov
out
push
pusha
or
add
subl
cmp
fdivrl
adc
imul
push
gs
add
movb
sbb
subb
mov
lock
sub
dec
ret
dec
ljmp
shlb
mov
add
push
xor
inc
push
stos
rcll
push
clc
addr16
jno
push
cmpsb
or
aas
lret
mov
fistpl
imul
mov
clc
pop
lcall
adc
pop
jle
pop
push
cmp
add
mov
mov
out
pop
sbb
pop
loope
imul
lahf
inc
adc
xchg
cmc
mov
ljmp
mov
pop
add
sub
lds
mov
xlat
jg
fistl
call
and
outsl
pop
mov
adc
push
jbe
test
push
xchg
xchg
push
aad
xlat
jle
loop
push
out
push
mov
les
lret
dec
fsubrl
pop
loop
add
jle
andb
lcall
inc
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
mov
int3
sarb
mov
mov
out
sub
jno,pn
fsubrl
clc
pop
clc
movsl
push
push
or
ret
mov
push
cmpsl
bound
push
sbb
mov
jae
out
enter
imul
bound
inc
adc
gs
jne
jmp
push
sub
xchg
sbb
add
cltd
sbb
mov
out
cld
mov
bound
add
loopne
push
mov
mov
inc
fsubl
enter
xor
sti
stos
cli
nop
fs
push
xlat
bound
adcb
cmc
shll
insb
loope
mov
pop
aad
cmpsl
test
rorl
inc
popl
and
dec
xor
sub
rcll
out
mov
cs
and
sbb
mov
adc
or
cmpsl
adc
add
jl
pop
cmpsl
cs
pop
pusha
call
out
jg
ljmp
pop
in
mov
xor
repz
lcall
jge
test
lahf
subb
cmp
sbb
mov
dec
push
mov
xchg
inc
fcompl
push
sub
outsb
stos
in
xlat
dec
xor
in
ffreep
dec
cmp
push
push
pop
xchg
jo
sub
ss
sbb
inc
dec
ss
push
pop
or
lcall
cs
rorb
dec
sbb
les
adc
add
dec
add
push
mov
cmp
shll
not
cmp
enter
xor
outsl
or
xchg
jg
mov
ret
fdivp
fndisi(8087
jmp
dec
sbb
mov
mulb
das
xor
pushf
ljmp
sub
cmp
sbb
xor
mov
movsb
cmp
or
mov
adc
test
dec
mov
sbb
sbb
adc
icebp
pop
sbb
dec
xor
repnz
fisttpll
and
mov
and
jo
sahf
mov
dec
decl
sti
dec
std
daa
out
jg
xorl
in
lret
nop
lock
flds
or
hlt
pushf
in
add
in
cli
cld
mov
add
mov
mov
mov
mov
adc
test
mov
sub
mov
jno
mov
inc
xchg
in
xchg
out
cli
repz
mov
lret
sbb
pop
clc
sub
ss
push
mov
lea
loope
mul
ljmp
or
int3
lds
ror
cld
jmp
hlt
in
outsb
sub
or
jg
loopne
push
outsl
xchg
mov
cmpsl
fcmovbe
pop
cmp
lahf
xor
jl
push
jo
jb
and
fs
fnstsw
gs
cmc
in
pop
xor
pop
loope
or
int
push
fcomip
shlb
xor
test
xchg
sub
push
adc
push
jmp
stos
xor
lret
fisubl
or
lret
and
lock
push
je
enter
iret
test
mov
ret
pop
or
js
test
cwtl
call
sub
outsb
pop
mov
or
and
adc
jg
sub
cmp
mov
jmp
xor
cmp
jnp
ja
fisubrs
pop
dec
or
xchg
xchg
dec
add
sarb
sbb
and
xor
jg
adc
stos
shrl
mov
push
sbb
add
push
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
mov
aam
mov
gs
ret
pop
inc
xor
imul
mov
jge
out
cmpsl
push
mov
roll
out
xor
icebp
mov
addr16
inc
dec
insb
adc
daa
jge
loopne
into
ds
outsl
pop
lock
scas
cld
pop
sub
xchg
jle
pop
add
push
negl
mov
add
jnp
dec
jge
lds
bound
lock
pop
pop
inc
icebp
cs
fld
cmpl
data16
dec
cld
ds
add
jno
adc
and
mov
mov
popa
jno
call
scas
lret
or
mov
pusha
mov
mov
fbstp
or
add
in
sbb
pusha
adc
loop
shl
sub
fs
and
insb
jmp
mov
mov
jmp
js
rcll
fmull
adc
repz
fdiv
lock
dec
sbb
fimull
mov
jns
sti
aad
push
inc
or
sub
test
lret
mov
jecxz
mov
jnp
fwait
repnz
xor
clc
mov
pop
mov
hlt
arpl
int
mov
in
xchg
cmp
sub
stos
jbe
sbb
jl
ljmp
ljmp
push
imul
loopne
mov
jl
out
mov
or
loopne
insl
sub
xchg
jnp
cmp
aad
lods
push
addr16
lock
cmp
cmc
or
imulb
cmp
pop
pop
mov
loopne
lcall
sub
out
fildll
dec
cmpsl
pushf
sahf
subl
inc
test
mov
imul
sti
fs
cmp
testb
bound
int
es
adc
rcrb
cwtl
push
mov
pop
xchg
lret
insb
lods
mov
pop
adc
dec
aas
fildl
pop
pop
movl
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
push
push
mov
in
sbb
mov
push
in
push
notb
cmpsl
fcmovnbe
push
loopne
mov
cld
add
in
movsb
jecxz
and
fnstcw
cmp
sub
loope
jnp
dec
jbe
xchg
fnstsw
jb
jno
jecxz
lahf
cwtl
and
xchg
mov
daa
sub
and
aas
mov
out
daa
adc
ret
stos
jbe
mov
pop
pop
sahf
iret
xchg
mov
repnz
fwait
cmc
xchg
pop
hlt
repnz
mov
xor
mov
xlat
insb
push
sbb
movsl
pop
test
lea
gs
push
xor
lea
loopne
popa
les
das
leave
and
mov
orb
jnp
loope
ret
aas
jbe
shll
mov
fs
loopne
fdivl
aaa
add
rcll
ret
mov
sbb
or
add
iret
pop
inc
es
stos
imul
push
lahf
outsl
int3
nop
iret
lods
lock
aaa
sar
aaa
mov
mov
dec
es
or
les
out
mov
jg
faddl
or
shlb
mov
in
sbb
mov
push
je
cmpsl
dec
ret
dec
pop
inc
jp
mov
dec
and
shl
mov
dec
stos
out
in
dec
add
pop
pop
stc
pop
mov
call
mov
test
fstpl
xor
add
stos
jle
lret
popf
ret
xchg
fucomi
xchg
shlb
test
mov
popf
stc
xor
data16
mov
cltd
adc
es
movsl
xor
dec
in
adc
stc
adcb
xchg
lea
daa
and
fimull
or
lcall
xchg
jo
rcll
cmp
jno
mov
jmp
mov
dec
xor
sti
mov
fildll
and
push
sbb
cmp
mov
xchg
addb
add
popa
imul
xchg
lods
movsl
sbb
shr
pop
xor
jp
lea
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
scas
mov
iret
sti
faddp
mov
push
lods
pop
cmp
xchg
mov
xchg
mov
arpl
lea
aad
notl
push
mov
add
and
arpl
inc
je
jp
mov
insl
add
inc
push
mov
leave
popa
or
iret
stos
xchg
js
pop
leave
xchg
pop
mov
rclb
lret
cltd
dec
cmp
fmull
adcl
mov
xor
in
xor
xor
pop
out
lods
add
cwtl
inc
jnp
adc
stc
mov
popf
ss
jnp
ja
js
stos
lods
xchg
jg
xor
pop
stc
ds
mov
int
xchg
add
dec
leave
push
pop
repz
or
les
pop
fldl
xlat
fsts
loope
push
pusha
iret
or
cmpsl
push
loope
je
aam
fisttpl
mov
push
xchg
mov
mov
pop
dec
sub
pop
pop
or
sbb
xlat
pushf
pop
sbb
idivb
mov
in
push
fs
mov
xchg
cmp
push
xor
cltd
fistl
ret
repnz
sub
cmp
pop
sysenter
bnd
adc
in
or
or
mov
and
out
xchg
sub
pop
pop
adc
pop
mov
cs
lds
pop
fs
test
iret
ret
sub
or
loopne
lock
jb
test
mov
mov
imul
jmp
pop
data16
fdivrs
dec
cmp
cmpsb
daa
xrelease
adc
and
cmp
shrl
sbb
das
dec
xor
push
mov
nop
mov
push
or
sbb
jbe
fnstsw
xchg
in
stc
in
loope
pop
xor
jnp
xor
dec
stos
sbb
sbb
push
and
xorl
cmp
call
jg
test
sbb
std
fwait
gs
lock
add
inc
xor
repnz
fsts
ret
mov
stos
xchg
das
and
sbb
cmp
pop
mov
adcl
jmp
and
fstl
jb
sahf
nop
adc
cli
movsb
jae
sarb
sub
jmp
mov
addb
sbb
xchg
lds
inc
push
or
lods
mov
xor
push
loope
les
int
lret
jne
shrl
subb
les
add
insb
xor
or
dec
loopne
std
rcrb
push
stos
into
mov
mov
fldt
lds
xchg
mov
into
push
cld
push
or
aas
les
inc
sub
or
lcall
inc
rolb
data16
mov
dec
xchg
adc
xor
dec
outsb
les
sbb
add
xchg
aad
xor
and
lds
jo
cmpsl
idivl
flds
out
jns
jge
fsub
fmull
add
mov
jnp
pop
js
mov
or
mov
shrb
xor
xor
cli
sub
xor
iret
lods
ret
int
xlat
scas
aas
xor
dec
sub
sbb
sbb
cmp
js
add
out
jecxz
repnz
bnd
jle
icebp
jnp
push
popa
mov
jl
xorl
ja
aaa
add
mov
test
in
add
jg
mov
push
add
pop
movsl
scas
adc
dec
mov
mov
xchg
cli
je
jge
mov
sbb
repnz
ret
ret
addb
dec
bound
sbb
aaa
inc
adc
pop
or
imull
gs
mov
adc
cmp
repz
cmp
pop
dec
outsl
clc
repz
dec
addr16
mov
sub
insl
xlat
arpl
ret
out
fwait
cmp
pusha
sti
lods
fisubrl
fdivrs
sbb
cmc
popf
outsl
fs
jmp
adc
xor
xchg
sub
pop
hlt
in
fwait
into
mov
cwtl
mov
cwtl
mov
hlt
test
jae
repz
xchg
in
clc
imul
jg
sbb
cmp
imul
mov
mov
outsl
pusha
loopne
mov
add
pop
push
cmp
out
adc
add
aam
add
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
xor
iret
jmp
sarb
movsl
ret
rcrb
mov
push
sbb
lods
out
adc
pop
leave
fmuls
and
clc
dec
popa
dec
fstps
out
and
pop
xchg
xchg
js
mov
adc
aad
adc
and
sub
subb
ficoms
enter
mov
adc
xor
xchg
push
in
loopne
pop
std
inc
mov
xchg
jb
xor
bound
ljmp
arpl
adc
xchg
pop
jbe
jecxz
sti
push
cmp
or
jbe
push
jl
cmpl
out
out
jge
jp
outsl
imul
mov
jmp
sbb
pop
adc
dec
jecxz
xchg
adc
sti
orl
push
inc
ljmp
sub
lock
aaa
aad
lods
lcall
cmpsl
test
imul
imul
mov
out
adc
hlt
jle
mov
push
xor
lds
cmp
jle
push
arpl
test
rorb
sbb
inc
dec
push
xchg
rorb
sbb
push
mov
xor
or
push
and
shl
ds
pop
mov
xchg
pop
jg
out
loop
add
popf
xor
push
andb
loope
adc
jge
out
jmp
lea
stos
cmp
jl
pop
repz
dec
mov
pop
shl
push
aad
sub
bound
frstor
lods
testb
jnp
js
insb
xchg
fs
sbb
lret
jge
dec
insl
enter
bswap
dec
push
fcomps
xchg
pop
jno
pop
mov
call
addr16
xor
lahf
pop
stos
inc
and
popa
pop
xor
xlat
pushf
lret
mov
rcrb
jne
stos
xor
inc
pop
enter
movsl
test
xor
mov
mov
add
cmp
adc
test
sub
or
xor
pop
xor
dec
pop
andb
lahf
scas
mov
jecxz
mov
loop
addr16
or
mov
push
call
and
add
add
add
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
xor
push
shll
mov
dec
inc
and
pop
dec
sbb
pop
mov
es
je
xchg
or
dec
int3
pop
cmp
movsl
sub
int3
mov
jne
cmc
popa
jnp
mov
adc
xlat
or
push
pop
cmp
shr
call
icebp
mov
lds
cmc
lahf
mov
pop
jp
xchg
jb
lret
scas
xchg
je
jmp
sbb
nop
popa
jp
and
cmp
cli
add
adc
add
xchg
xchg
cmc
aaa
and
xor
fmul
xchg
xchg
hlt
push
push
jmp
lcall
stos
rolb
sti
in
mov
cs
push
sarb
insb
sbb
mov
lock
stos
mov
push
and
inc
sarl
in
jno
int3
mov
inc
repnz
scas
pop
sbb
push
adc
xor
out
jp
adc
lea
rcrb
mov
push
out
xor
rolb
aaa
xchg
dec
cmp
mov
push
in
imul
aaa
mov
jg
lods
xor
pop
das
or
stos
in
pop
repz
stos
sarl
pop
es
nop
and
xchg
add
fcmove
jl
push
mov
cwtl
bound
cmpsl
mov
xor
out
cmp
and
addr16
push
filds
lock
inc
insb
mov
ret
fdivs
lret
jecxz
mov
aad
push
push
jmp
adc
test
hlt
cmpl
mov
dec
ja
negl
push
mov
insb
fnsave
cli
clc
dec
mov
or
mov
insb
cmp
shl
pop
ss
xor
rol
outsb
cli
pop
sbb
dec
jmp
xchg
cmp
mov
les
xor
xchg
out
inc
push
out
xor
icebp
sahf
mov
push
xchg
fwait
xchg
push
jp
mov
rolb
add
adc
inc
fisubrs
sbb
scas
sbb
xchg
sbb
inc
jbe
cmp
mov
push
or
out
js
insl
dec
lods
outsl
call
mov
adc
and
adc
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
fstp
out
sarb
jg
mov
jg
fidivl
lods
adc
dec
mov
xchg
xchg
std
xchg
add
inc
dec
incl
cmp
stc
imul
fldt
push
mov
inc
push
ds
dec
movsl
mov
adc
inc
push
jno
jg
mov
pop
mov
ffreep
inc
mov
xchg
int3
mov
frstor
xchg
in
add
rcrb
mov
shll
xor
sub
adc
pop
and
mov
jp
add
pop
mov
ret
sahf
push
movsb
push
stc
pusha
jns
mov
int3
or
mov
mov
add
push
test
jle
outsb
repnz
mov
mov
and
mov
inc
xchg
xchg
adc
popa
outsl
pop
or
mov
jecxz
pop
xchg
in
lds
outsl
mov
hlt
cmp
jl
loopne
and
mov
sbb
mov
stc
ret
fisubl
push
sti
push
leave
push
push
jb
mov
sbb
adc
cmp
dec
pop
gs
dec
lods
mov
mov
mov
pusha
and
lret
xlat
fwait
cs
in
mov
scas
and
test
sub
fcomi
test
jb
mov
popa
or
int3
xchg
and
mov
jmp
mov
push
imul
sbb
push
mov
xchg
mov
dec
fdivp
aaa
dec
jmp
xor
lea
stc
mov
adc
std
pop
mov
cmp
cmp
adc
adc
xor
in
sbb
adc
and
cwtl
sbb
icebp
jns
sub
aam
add
movsl
add
xchg
cld
shll
scas
lret
jns
push
icebp
or
sub
jae
push
divl
mov
push
movsb
sbb
mov
in
testb
cmp
pop
into
int
cmp
mov
jp
stos
add
cli
pop
das
mov
xchg
xor
jbe
scas
add
mov
pop
adc
decl
mov
shl
ret
or
push
xlat
and
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
movsb
push
repz
in
stos
xchg
in
mov
mov
xor
add
cwtl
adc
add
mov
scas
je
roll
mov
sbb
add
mov
jge
call
scas
and
lds
or
popf
fistpll
testb
adc
adc
imul
cli
pop
adc
adc
roll
int
repnz
sbb
xor
out
inc
xchg
or
imul
or
sahf
cmc
adc
pop
shrl
in
lock
rorl
fbstp
popa
lahf
mov
fneni(8087
gs
or
insb
mov
xchg
cmpsl
movl
sub
adc
testl
inc
dec
out
lock
inc
adc
jmp
sbb
jns
jp
cmp
mov
aas
sub
or
cwtl
fstpt
mov
stos
adc
aam
ds
lock
mov
or
fwait
jmp
mov
push
xor
cmp
jge
jne
mov
cmpsb
jno
ss
pushf
and
push
sub
and
not
jle
jmp
iret
xchg
adc
mov
pusha
push
adc
jne
dec
mov
pop
in
push
mov
mov
inc
sub
imul
mov
jmp
xchg
lds
push
lock
test
aam
push
shll
mov
popa
and
xchg
xchg
adc
and
mov
xor
mov
movsl
and
icebp
or
loop
aam
xorb
dec
mov
addr16
and
mull
mov
dec
iret
mov
pop
in
in
fldt
shl
mov
mov
data16
lcall
scas
and
call
sti
mov
jge
insl
jo
lds
jg
xor
mov
sarb
and
xor
inc
sbb
mov
or
cmpsl
cltd
stc
or
inc
imull
fmull
cmpsb
ljmp
negl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
out
out
iret
lret
test
mov
sub
mov
pop
or
cld
bound
scas
lret
cwtl
dec
inc
lcall
push
pop
stos
xchg
mov
fs
out
push
sub
lds
stos
loop
add
pop
fistpll
rcr
sub
shl
push
pop
iret
out
scas
pop
pop
and
add
in
sub
stos
adc
testb
and
fcom
mov
testl
mov
outsl
jg
adc
ret
pop
pusha
jnp
sbb
cmp
or
mov
pop
add
fwait
sbb
add
fldt
fs
push
pop
les
out
push
mov
pop
xor
push
dec
pushf
jg
repz
das
mov
imul
cmp
loopne
clc
repnz
adc
and
stos
adc
add
ljmp
cmp
mov
sub
lcall
jecxz
dec
ja
imul
jno
in
sarb
jge
and
scas
das
push
push
pop
lock
mov
sbb
mov
test
jbe
or
mov
push
jp
xchg
jne
xor
stos
or
daa
push
fstps
lret
roll
adc
cmp
fwait
popa
xchg
mov
push
push
pop
cmc
jmp
aad
push
cmp
arpl
outsb
ja
pop
adc
xchg
mov
jo
pop
sub
loop
mov
jnp
pushw
add
push
fwait
in
jl
loop
enter
jnp
call
cwtl
stc
add
cmp
pop
inc
push
xorl
outsb
aas
clts
sti
add
dec
test
jb
leave
iret
jg
imul
shrb
add
or
mov
out
int3
lods
das
test
push
lods
sub
adcb
mov
xchg
sub
dec
ja
push
outsl
push
movsl
loopne
fwait
into
xchg
jg
mov
sahf
repnz
arpl
mov
or
hlt
sbb
out
adc
inc
sbbl
xchg
pop
jge
push
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
movsb
inc
sti
sarb
test
loope
and
adc
aas
sub
push
mov
mov
or
dec
adc
andb
cmp
mov
mov
mov
dec
mov
pop
inc
addps
inc
xchg
jl
jae
movsb
xchg
leave
sub
pusha
pushf
pop
shll
inc
pop
in
testl
xchg
adc
pop
pop
pushf
jl
cmpsl
enter
enter
mov
out
into
mov
lods
js
dec
or
xchg
jnp
mov
cli
loop
sbb
jbe
stos
out
decl
out
arpl
movsb
dec
push
leave
enter
pop
test
repz
shll
push
out
sub
xor
cmp
add
adc
cmp
je
push
or
rcr
fisttpll
aas
fmull
mov
scas
repnz
mov
sahf
ljmp
roll
xchg
mov
loopne
repz
jecxz
and
movsb
sahf
cmp
dec
fs
test
cmpsl
xlat
jo
xor
inc
std
push
add
jp
mov
ljmp
rcll
sbb
cmpb
mov
cmp
pop
ss
add
mov
xchg
popf
in
xchg
and
jae
add
leave
fimuls
cmp
ss
adc
rcl
je
inc
test
mov
sub
ljmp
into
call
movsl
pushf
not
aas
addr16
aad
in
addr16
lea
out
nop
xor
cmpsl
mov
aad
int3
adc
fs
xchg
jne
stos
inc
dec
scas
jmp
and
mov
fs
sarl
insl
jecxz
orl
insl
adc
and
push
movsb
push
loopne
loopne,pn
xchg
out
repz
mov
xchg
outsl
es
ja
mov
mov
data16
sbb
and
rolb
movl
sbb
js
mov
dec
enter
dec
push
xchg
mov
add
cmp
jne
cmp
je
mov
mov
xor
shld
jmp
lret
repnz
xchg
xor
call
inc
mov
scas
cmp
roll
pop
insb
xor
lret
mov
aaa
sbb
mov
dec
mov
push
jns
and
mov
jp
imul
xchg
fstps
lds
xor
and
cmpsb
iret
jle
jnp
cmp
nop
inc
fdivrp
sbbb
cmpsb
sub
add
daa
shrl
mov
dec
outsb
xchg
scas
push
cs
xor
xchg
insb
aas
adc
sub
sbb
jg
and
cwtl
pop
jbe
adc
out
stos
mov
fwait
popa
cmp
mov
xor
or
push
adc
scas
jo
mov
mov
call
xchg
cwtl
movsb
xchg
lahf
ljmp
mul
sub
cmpsl
leave
jle
sbb
fwait
leave
test
xchg
les
sbb
mov
dec
cmp
mov
or
popf
loopne
sub
mov
cmp
and
dec
mov
inc
mov
jmp
scas
inc
mov
and
and
rcrb
and
roll
inc
ss
or
sahf
hlt
ds
pop
int
pusha
sbb
inc
ret
popf
sar
aad
test
xchg
jg
cs
xor
push
push
dec
lds
mov
inc
adc
loop
pushf
xor
mov
cmp
fiaddl
movsb
mov
xlat
pop
mov
fwait
mov
inc
xor
inc
stc
xlat
pop
sbbb
sbb
or
pop
mov
or
dec
mov
cmpsb
inc
cmc
pop
xchg
dec
fcompl
sbb
nop
adcl
inc
dec
jb
inc
fdiv
jno
iret
cmpsl
jge
movsl
mov
or
cmc
insl
pop
rcrl
arpl
and
xchg
iretw
lds
jno
clc
xchg
js
test
sahf
sbb
xchg
dec
mov
movsl
int
xlat
lret
cld
push
lds
dec
jl
aas
stos
scas
in
mov
mov
icebp
call
push
cs
cmpb
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
mov
add
mov
les
nop
stc
test
cmp
jmp
aad
dec
mov
sahf
testl
repz
fcompl
add
add
jg
movsl
push
addl
pop
clc
mov
mov
sub
mov
xorl
cli
sub
in
dec
sub
outsl
test
sub
mov
lock
mov
arpl
mov
movsl
test
movsl
adc
cmp
mov
mov
pop
add
clc
jo
mov
inc
dec
jg
test
inc
lahf
ja
shufps
lods
mov
data16
push
sarl
sar
stos
and
xor
nop
orl
jne
imul
inc
push
lret
icebp
inc
out
mov
inc
mov
sub
mov
fcoms
push
out
repnz
lea
cld
push
fwait
mov
mov
lahf
out
xorl
pop
aad
repz
aas
cmpsl
cmp
imul
pop
xor
sbb
mov
and
fdivr
test
test
repnz
mov
adc
or
and
stos
stos
jp
test
jb
out
test
pop
rclb
xchg
mov
mov
inc
out
mov
jne
leave
and
and
movsl
or
jmp
aas
mov
xchg
lods
xchg
cltd
rclb
lcall
roll
xchg
xor
xchg
outsb
lahf
xchg
mov
xlat
lret
lcall
bound
push
insb
mov
outsb
xor
lds
or
scas
lock
mov
ljmp
cmpsb
push
dec
or
fildll
mov
adc
test
adcb
les
hlt
inc
and
and
rolb
mov
and
cmp
arpl
sti
xlat
inc
mov
outsb
loope
in
movsb
loopne
add
shl
dec
or
jnp
mov
cmpsb
insb
lret
xor
xor
aas
sub
adc
jo
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
lcall
mov
call
nop
loop
xor
pop
lock
xchg
shll
or
fnstsw
cmc
aad
aaa
das
or
mov
pop
mov
je
mov
enter
and
xor
xchg
push
and
xor
out
and
mov
sbb
lods
cmpsb
popa
inc
mov
inc
lods
mov
fstpt
fs
je
stos
xor
mov
outsb
dec
xchg
outsb
outsl
mov
pop
sahf
lahf
jle
push
sarl
addr16
dec
jp
adc
stos
push
push
push
loope
fistps
sahf
jo
inc
clc
pop
aam
and
sbb
pop
mov
aad
repz
clc
mov
and
sbb
push
rolb
sti
mov
jbe
sbb
jae
aam
cmc
jnp
sbb
les
pop
mov
test
push
or
jecxz
or
sbb
jno
pop
out
or
test
in
ss
enter
lea
cmp
movsb
dec
mov
cli
push
adc
xchg
sbb
shld
add
nop
mov
out
add
out
in
xor
int
sbb
mov
adc
inc
pop
sbb
jbe
jmp
add
jmp
inc
jne
jb
rorb
xchg
fwait
sub
test
movaps
push
push
mov
out
mov
mov
add
subl
jmp
sbb
loopne
xor
xchg
mov
rcl
push
jge
sub
gs
fstps
ds
sub
hlt
xchg
movl
dec
push
sub
or
rcrl
les
fstpt
mov
sbbb
inc
xor
fistl
je
test
or
or
push
mov
pop
cmp
int3
cltd
ss
push
mov
data16
imul
xlat
inc
aam
cmp
cmp
out
lods
jae
sub
into
sbb
push
cli
cmp
into
clc
pop
push
xchg
mov
scas
scas
test
jnp
inc
pop
xchg
scas
inc
mov
mov
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
mov
or
mov
fmul
push
mov
sahf
fstps
bound
push
sbb
bound
je
icebp
fiaddl
ret
jae
add
lds
lahf
inc
jp
xor
test
sub
push
sbb
mov
pop
lret
inc
dec
test
mov
cmovae
pop
pop
out
and
testb
inc
mov
repnz
and
pop
xchg
adc
cmp
cmp
inc
aam
sti
mov
and
inc
dec
je
outsb
jns
jb
outsl
test
pop
sti
shrb
nop
xchg
loope
js
adc
js
and
insb
movsb
cmc
cmc
jnp
cmpsl
dec
leave
js
rorb
mov
adc
test
subb
pop
addb
lcall
pop
imul
mov
js
inc
out
enter
xor
insl
mov
ja
cwtl
stc
pop
out
out
jo
in
add
into
adc
xor
lds
push
jno
add
data16
sahf
mov
push
cmp
test
insl
push
mov
sarl
shrl
mov
pusha
test
stos
imul
loope
cmc
bound
xchg
mov
pop
xchg
gs
add
mov
lods
mov
adc
and
jmp
dec
inc
push
hlt
cmp
imul
inc
nop
jge
cmp
xchg
lret
outsl
lret
sub
push
ljmp
adc
cwtl
xchg
jb
add
xchg
jg
inc
and
outsb
mov
dec
cmp
call
jp
sbb
cltd
and
mov
mov
mov
repz
arpl
mov
fsub
fdivs
out
test
shl
popf
dec
imull
cmpsb
lods
cs
and
mov
sbb
inc
cmp
dec
lock
adc
in
fisttps
fwait
cmp
filds
iret
and
push
andb
or
cs
mov
xchg
jne
cltd
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
aam
fists
xor
int3
cmp
dec
test
mov
push
cltd
adc
mov
mov
je,pn
mov
mov
dec
mov
ss
punpckhbw
cmpsl
cltd
or
andl
ds
and
cwtl
mov
loope
adc
cmp
xchg
adc
in
cmp
aad
lock
je
xor
loop
xchg
jle
inc
jb
inc
out
test
loop
mov
popf
mov
jl
xor
adc
roll
add
shll
movsl
stos
shrb
mov
cmp
or
out
push
loop
insl
orl
jne
mov
repz
mov
mov
in
and
jo
fwait
jbe
mov
loopne
movsl
cs
jmp
jns
xor
ret
stc
cmc
jmp
aaa
pusha
out
ss
push
or
aad
xchg
cltd
xchg
imul
push
cmp
sbb
clc
in
sub
cmp
scas
addr16
ljmp
mov
xchg
jae
jno
xchg
sub
mov
std
stc
lods
inc
int3
mov
xchg
imul
int3
xchg
arpl
mov
mov
dec
insb
data16
loope
pop
jle
shlb
mov
xchg
mov
ret
inc
jmp
shr
ficoml
imul
rcll
rcrl
xor
cmp
shrb
leave
mov
pop
das
and
push
lea
pop
sahf
frstor
adc
gs
or
adc
adc
push
pop
ja
push
mov
in
sub
xchg
mov
inc
orb
cmp
and
xchg
jmp
call
sti
pop
insb
push
popa
insl
xchg
mov
mov
stos
imul
stos
sbb
jecxz
ds
push
sbb
popf
ljmp
pop
ret
stos
inc
loop
pop
cmp
daa
xchg
js
or
xchg
shll
jo
outsl
in
pop
scas
shr
add
lcall
fnstsw
push
and
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fisttpll
movsb
adc
sarb
mov
xchg
das
fildl
outsb
sub
mov
cmp
aas
jno
mov
adc
add
or
aas
mov
shll
dec
dec
mov
out
xchg
sbb
pop
xchg
lret
mov
lods
inc
nop
dec
test
lods
roll
push
loop
popf
push
loopne
cmp
ljmp
jbe
aaa
adc
test
movsb
lret
pop
lods
nop
sbbb
jae
in
lock
xchg
xchg
data16
imul
inc
das
add
lahf
cmc
jae
sti
mov
out
jo
lock
cmp
clc
fnstcw
or
push
popa
or
jae
jns
test
mov
xor
lock
mov
cmp
rorl
mov
scas
dec
in
fmull
lock
nop
sub
dec
in
shr
mov
and
out
popf
pop
lcall
mov
xchg
movsl
in
xchg
jnp
ja
lret
xchg
sub
sahf
pop
sbb
pop
loop
adcb
je
loop
inc
inc
push
fbstp
add
add
pop
fidivs
pop
and
dec
inc
in
dec
pop
int
add
pop
popf
mov
sahf
dec
test
arpl
jne
and
shl
nop
mov
inc
jle
sbb
sub
jo
adc
inc
ficompl
mov
pop
out
jl
insb
je
clts
dec
mov
xorl
cld
xor
ret
in
and
add
sbb
and
loop
leave
pushf
cmp
dec
ja
xor
out
psubusb
sbb
insb
js
ficoms
stos
and
push
popf
fwait
pop
and
and
ret
stos
inc
cmp
imul
inc
jb
and
mov
cmp
lods
data16
roll
les
sbbb
sbb
jl
insb
jl
scas
lret
es
cmc
call
push
fwait
neg
loope
and
loop
ret
sbb
bound
imul
lds
jge
subl
je
imul
shrl
adc
inc
pop
or
jge
mov
push
addr16
insl
inc
fistpl
insl
push
shrd
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
rcl
fs
mov
sarb
fs
les
or
popf
mov
xchg
int3
out
mov
shr
cmpsb
sbb
data16
pop
add
popf
xor
or
lods
sar
jg
out
cmpsb
push
mov
cs
push
iret
sbb
sbbl
push
sub
mov
mov
pop
jns
push
addr16
and
inc
xor
push
pop
sbb
sub
aad
mov
sahf
mov
insb
jmp
sub
fadds
mov
sub
testl
dec
or
pop
adc
cli
adc
scas
fs
mov
ror
inc
insl
xor
sub
jle
jmp
inc
jno
sbb
fwait
sbb
mov
cmpsb
cmp
adc
popa
aaa
and
adc
lahf
shr
adc
inc
lods
adcl
in
xchg
jge
test
movsb
loop
mov
loopne
push
xchg
fstps
mov
xchg
enter
sub
outsb
xchg
bound
cmp
xchg
lahf
push
push
push
mov
es
sbb
push
popf
je
push
push
sbb
and
push
popf
loopne
out
lret
rcll
jg
enter
pushf
mov
xlat
cmp
pusha
mov
mov
faddp
push
xor
dec
shlb
push
push
rep
push
dec
out
add
out
xor
mov
push
mov
add
int3
scas
dec
pop
sbb
daa
mov
xor
repnz
insl
inc
das
inc
aad
fwait
inc
mov
push
nop
pushf
xchg
push
inc
popa
adc
shl
sahf
xchg
lock
and
xor
xor
mov
xchg
rcl
jnp
rclb
and
mov
lods
cmp
fmull
or
mov
call
sbb
arpl
or
mov
iret
mov
cmp
pushf
leave
xchg
popf
je
sub
mov
cmp
pop
or
mov
add
fdivp
dec
cmp
push
dec
dec
mov
and
jbe
jle
insl
pop
ret
ror
ja
adc
gs
cmp
cmc
fsqrt
loop
mov
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
sub
fldl
sarb
sbb
mov
sub
enter
mov
sbb
sbb
test
sub
xchg
sahf
idiv
bound
push
imul
dec
sti
push
cmpsl
jge
lock
lea
cmpsb
das
cmp
leave
mov
cmp
or
clc
fdivs
and
xchg
sub
shl
push
push
out
mov
inc
cld
xchg
and
pop
add
lret
pushl
pop
sub
movsl
lret
cltd
xlat
mov
into
push
cmc
insl
ljmp
rorl
add
jmp
jl
repz
and
push
fmul
inc
outsl
shlb
scas
bound
hlt
xor
adc
xlat
imul
pop
arpl
notb
pop
ljmp
push
cld
dec
imul
inc
test
cmp
iret
stc
mov
sbb
mov
enter
leave
adc
sbb
lret
pop
pushf
sahf
cmp
jg
mov
mov
or
dec
imul
adc
sub
xchg
or
adc
mov
jl
pusha
sub
jbe
or
inc
pop
jmp
mov
dec
inc
aad
enter
inc
push
xor
loop
pushl
int
das
cmpsb
xchg
cmp
cmp
shll
pop
test
sbbb
sbb
jo
xor
and
dec
mov
andb
repnz
inc
shl
sub
sub
das
addb
push
sub
cs
jae
sbb
add
pop
or
and
xchg
xchg
adc
dec
inc
cmp
push
sti
add
insb
push
xor
jmp
mov
xchg
cmc
or
jp
mov
pop
hlt
jne
mov
jbe
subb
data16
cmc
fwait
loope
into
pop
test
pop
mov
pop
mov
pop
xchg
pop
sbb
pop
xchg
inc
shll
imul
jne
std
xchg
xor
imul
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
xchg
xor
and
mov
mull
pop
dec
scas
rclb
pop
fwait
cmp
repz
add
pushl
imul
popa
jecxz
xor
pushf
dec
add
cmp
fldenv
scas
jle
or
sub
pop
xchg
mov
pop
lods
pusha
jp
xlat
out
push
pop
jmp
popf
pop
jge
loop
mov
dec
insb
xor
in
cmc
mov
lock
popl
lds
repnz
jecxz
adc
mov
inc
push
sbb
mov
aaa
ss
sbb
cmp
ror
inc
popa
pop
jmp
mov
fwait
popl
mov
dec
add
repz
pop
mov
int3
lods
sub
adc
imul
and
pop
adc
dec
addr16
test
ja
fisttps
pop
and
mov
ja
shlb
adc
fstps
jp
ret
xorl
sub
mov
cltd
mov
mov
mov
idivb
dec
loope
movsl
xchg
mov
xchg
fstpt
mov
lcall
es
push
outsb
sub
loope
and
jg
addr16
mov
adc
adc
and
sbb
popf
mov
cmp
add
js
mov
push
pop
and
sub
shrl
xor
add
mov
dec
inc
pop
inc
or
or
and
push
data16
clc
ds
fdivs
xor
sub
das
lods
push
bound
inc
scas
out
pusha
movsb
ja
movsl
pushf
loop
aad
dec
insl
out
dec
dec
ret
push
lods
mov
sub
cmp
jmp
add
jle
das
fwait
js
push
out
mov
mov
je
push
xor
push
outsl
jmp
jns
xorl
in
sub
mov
push
push
or
dec
mov
inc
xchg
ret
pop
cltd
ficoml
push
test
fdivs
jne
jno
movsl
or
inc
and
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
mov
sarb
test
test
cmp
dec
sbb
dec
sbb
insb
lods
sub
icebp
cmp
pusha
push
jp
jg
mov
inc
rorb
insb
repnz
fidivs
mov
cmp
out
aas
sbb
jne
int3
call
adc
jmp
ljmp
popf
xor
enter
xchg
sub
adc
cmc
jbe
pop
ret
dec
pop
dec
addr16
aaa
stos
mov
stc
mov
mov
cmp
stc
addr16
std
inc
xor
sub
div
pop
xlat
adc
jae
mov
lods
das
stc
jg
fcmovbe
push
inc
pop
mov
cmp
aam
dec
inc
and
jge
push
dec
movsl
mov
xchg
fcomps
xchg
insl
bound
mov
lods
daa
lar
jae
int3
push
push
scas
pop
arpl
bound
cmp
sub
test
sbb
sbb
insb
or
stc
lods
adc
andb
jae
test
fwait
mov
loop
fadds
mov
or
icebp
js
fs
roll
jae
mov
hlt
mov
and
jg,pt
mov
push
popa
out
enter
cmpsl
into
dec
sub
leave
pop
jno
stc
mov
add
pop
popa
in
inc
hlt
dec
xor
xorb
push
push
outsl
daa
jb
jge
pop
mov
pop
dec
pop
xchg
mov
sbb
outsb
pop
or
mov
ss
add
fcompl
mov
std
xor
andl
cld
cmc
popa
mov
test
push
insb
test
insb
fcoms
jecxz
mov
leave
loope
xor
andb
cmc
inc
outsb
pop
cmp
dec
jb
push
popa
icebp
sub
xchg
lcall
into
rclb
dec
sbb
lahf
aam
sub
icebp
mov
and
cli
cli
out
add
xchg
adc
or
adc
lea
ds
popf
jmp
aaa
jnp
ret
int
jo
and
aad
jecxz
adc
stos
adc
sarb
push
mov
inc
ret
add
and
jmp
xor
frstor
test
ss
hlt
iret
imul
mov
test
sti
ljmp
add
subl
cmp
imul
dec
dec
inc
jo
sub
test
pop
push
push
sahf
jbe
add
mov
aas
add
in
mov
xchg
or
inc
mov
mov
dec
test
sti
out
test
test
sub
outsb
lods
subb
mov
push
xor
sbb
add
jmp
push
repnz
in
pop
add
jo
mov
fidivl
inc
repnz
or
mov
xchg
stos
pop
test
jns
clc
cmpsl
nop
fcos
icebp
fistps
sbb
pop
inc
dec
cmp
inc
out
movl
adc
adc
cli
sti
push
arpl
icebp
cmpsl
pushf
int3
mov
push
daa
outsl
sahf
jb
mov
ss
xchg
lret
outsl
sbb
xchg
mov
mov
out
cs
xchg
sub
xchg
sahf
inc
xchg
cwtl
pop
mov
jp
dec
inc
dec
inc
jno
sbb
jecxz
push
es
sub
movsb
jne
repnz
push
sti
push
inc
in
test
js
mov
mov
int3
outsb
jne
or
jbe
mov
mov
ficoms
mov
pop
icebp
pop
push
pop
or
push
or
aad
cmpsl
sti
add
shlb
int
lods
aad
cmp
shrb
lahf
lcall
aam
add
xchg
jne
sub
insb
fcoml
mov
xor
jae
fnop
sub
or
std
aad
sub
mov
sbb
ja
shll
and
xchg
int3
int3
push
adc
sub
mov
into
mov
mov
jle
insl
inc
cli
enter
sti
jnp
pop
and
xor
cmp
cmpsb
xor
nop
ror
je
xor
fwait
outsl
pop
add
cmp
repnz
or
jbe
xorb
dec
leave
mov
nop
xchg
push
out
adc
sti
jmp
pusha
icebp
std
push
jmp
or
add
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
outsb
lods
add
jecxz
sarb
mov
mov
jle
mov
stos
xchg
mov
mov
stos
pushf
inc
cmpsb
jle
jnp
or
pop
ljmp
loope
rorl
jle
sub
mov
add
dec
sub
pop
xchg
pop
in
mov
fwait
aam
stos
jbe
inc
adc
fcomps
cmc
cmp
shlb
and
mov
pop
jno
sahf
or
jle
inc
push
jecxz
lock
xchg
mov
lods
push
fwait
les
dec
shrl
sbb
pop
data16
cld
inc
jns,pt
in
inc
repz
sti
jmp
xor
mov
inc
xchg
mov
jmp
xor
jne
and
mov
and
jb
mov
jbe
cmp
mov
ret
and
imul
cmp
andl
dec
nop
or
cmp
jnp
or
add
rorl
push
popf
push
fs
cmc
or
das
cs
jbe
arpl
hlt
dec
subl
lock
cld
enter
mov
xchg
add
and
lds
in
inc
lods
cli
dec
fstps
or
arpl
sub
pop
mov
icebp
nop
mov
ljmp
jp
lock
rcrl
ficoml
pusha
pushf
mov
add
in
scas
popa
inc
out
mov
sbb
and
arpl
test
fidivl
movsb
mov
adc
jno
xchg
mov
mov
xor
dec
push
mov
or
or
hlt
lea
data16
movsl
pop
jns
shlb
ss
cmp
mov
and
sbbb
in
jb
jmp
push
test
sub
mov
in
or
push
jg
or
inc
dec
inc
jne
adc
pop
mov
or
pop
ljmp
iret
shlb
ljmp
inc
or
add
gs
outsb
pop
in
arpl
int3
push
dec
pop
andb
inc
pop
dec
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
cmp
nop
nop
pop
xor
mov
ret
and
ss
cld
mov
push
popa
lds
imul
sub
cmp
das
mov
mov
loope
dec
mov
lret
fistps
pop
shlb
outsb
cli
fdivrs
mov
cmp
mov
popa
push
loopne
xchg
movsb
or
xor
xchg
mov
sub
int
jmp
jp
mov
and
cltd
jno
cmc
rep
and
mov
or
adc
or
out
ret
mov
xchg
cmpsl
inc
push
dec
xchg
inc
int3
mov
sub
test
shrl
adc
lea
push
je
enter
jnp
mov
call
insb
sti
dec
jae
dec
pop
mov
popa
dec
sbb
mov
jle
ja
outsl
aas
aas
cmc
pop
adc
push
push
fists
lods
dec
mov
mov
aam
push
jg
cs
movsl
inc
push
inc
int3
pop
roll
sti
pop
push
lods
xchg
cmc
push
lcall
imul
dec
mov
mov
test
mov
mov
adc
bound
lods
loop
arpl
data16
xchg
call
test
mov
shlb
lea
cmc
pop
outsl
aaa
xchg
mov
scas
mov
cmpsl
inc
inc
adc
ss
pop
neg
rcl
fiadds
cmp
ret
mov
push
insb
outsl
cmp
mov
mov
jbe
in
jmp
sub
test
das
add
and
imul
push
clc
and
inc
fnstcw
ja
ljmp
pushf
mov
xor
adc
push
shll
pop
jno
mov
mov
adc
push
mov
xchg
es
cmp
jne
loop
and
andb
pop
sub
mov
mov
xor
lods
jle
lret
outsl
insl
icebp
pop
mov
jl
push
sub
adc
dec
mov
iret
adc
sarl
jns
mov
dec
inc
pop
cmc
int
ljmp
icebp
inc
call
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
nop
aam
sarb
xor
les
test
rolb
rcrb
stos
xchg
or
dec
loopne
pop
jecxz
cwtl
out
sbb
adc
push
and
or
scas
test
dec
mov
mov
aam
cmp
pop
add
xchg
ja
pop
ret
sub
push
leave
sub
mov
out
and
adcb
xchg
adc
xchg
mov
jp
cmp
and
int3
pop
stos
mov
movsl
ffree
shrb
fstl
iret
les
mov
add
repz
stos
lds
inc
or
test
add
rcr
push
push
aaa
lcall
pop
jmp
xor
inc
icebp
pop
dec
filds
arpl
add
dec
mov
mov
jo
mov
lods
pop
xor
add
and
push
inc
sub
sahf
pop
add
hlt
xor
and
adc
or
in
out
popf
fisttps
jo
xchg
push
popa
or
cs
push
pop
in
jge
cmp
ret
add
cli
pop
inc
out
ds
out
add
loop
sub
outsb
jns
push
jno
and
clc
jno
push
sbb
jge
fstpl
add
sahf
mov
pop
sbb
cwtl
sbb
lret
push
aas
push
add
xor
mull
jo
test
bound
in
sbb
std
ja
loop
ds
dec
inc
mov
scas
adc
cmpsb
call
xchg
jp
sub
pop
sbb
mov
jecxz
cmpsl
mov
pop
lahf
cmp
adc
add
jg
hlt
ret
out
icebp
testl
fsubrl
rclb
cmp
pop
push
mov
repnz
shrl
outsb
addr16
icebp
insl
pop
xor
or
scas
cmp
cmp
jp
imul
test
dec
xchg
mov
fnstcw
cld
mov
fnsave
out
jle
and
gs
insb
jle
fs
stos
pusha
subb
xlat
bound
les
mov
or
mov
scas
and
sub
mov
shlb
jns
jo
and
mov
sti
pop
xchg
ret
mov
push
and
mov
adc
mov
cmp
loop
cmp
adc
mov
ja
aam
mov
inc
mov
lret
inc
lods
xchg
test
xchg
or
cmp
in
sbbl
popf
jg
js
sub
xchg
clc
int3
aas
jg
sub
lcall
loopne
in
mov
cmp
imul
test
test
dec
cmp
pop
xchg
mov
jp
das
fs
sbb
mov
mov
fsubrl
jle
jmp
adc
fidivrl
movsl
ja
push
insb
insl
xchg
bound
adc
adc
addr16
stos
fsubrp
adc
sahf
aas
sub
enter
rclb
rcll
mov
inc
mov
pop
pushf
dec
cmp
lods
xchg
fisubs
and
cs
mov
leave
test
adc
mov
mov
lret
ljmp
int3
fidivrs
fnstenv
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
sbb
xchg
pusha
inc
sarb
jbe
fdivl
aas
bound
jge
sbb
fnstcw
dec
fstpt
or
push
mov
jl
in
mov
mov
jae
ja
pop
ss
jnp
jno
xor
rcll
rorl
addr16
inc
sub
aad
sbb
cs
movsb
jl
mov
fcomps
ds
push
mov
insb
jb
and
pop
dec
mov
adc
sbb
adc
pop
ljmp
rcrb
jle
pop
mov
push
push
por
mov
cmp
out
movsb
jecxz
je
xchg
lods
cmp
and
xchg
cmc
dec
xchg
lcall
or
mov
fimuls
out
jecxz
sub
push
std
repz
les
xlat
aas
push
addb
push
jno
rcr
lcall
jecxz
js
jl
into
push
mov
call
and
jl
push
pop
and
scas
out
les
pop
sahf
aas
xor
lcall
mov
idivl
sbb
inc
pop
cmp
pop
in
cmpsb
pusha
lret
insl
xchg
mov
fwait
xchg
rcr
pop
outsl
add
sahf
movsl
fwait
inc
mov
push
imul
rcll
jp
lods
daa
sahf
mov
mov
push
inc
dec
sbb
mov
inc
xor
insb
popa
and
in
rclb
push
sbb
mov
aas
mov
mov
cmp
ret
sub
adc
push
jle
mov
push
pop
punpckhbw
lret
dec
sub
xchg
jle
push
jl
test
push
lcall
fcom
cmp
cwtl
mov
cmp
mov
add
xchg
scas
incb
xchg
sti
pop
xchg
and
mov
pop
mov
push
sbb
pop
cld
notb
pop
movsb
rcll
mov
std
push
mov
inc
mov
popf
mov
sbbl
dec
shl
out
sbb
mov
mov
out
and
jno
dec
dec
xchg
sbb
pop
pop
sub
or
enter
xchg
je
int3
sbb
and
push
jns
cs
ds
inc
fists
sub
scas
cmc
jmp
jge
mov
movsl
dec
mov
mov
jle
mov
inc
addr16
jl
push
lods
add
or
mov
in
orl
out
aaa
int
xchg
push
dec
fsubrl
gs
loop
dec
xor
mov
adc
cmp
repnz
mov
test
xor
jmp
arpl
mov
push
dec
cmp
les
rcr
adc
cmpsb
das
cmpsb
bound
add
shlb
or
adc
repnz
ljmp
sahf
scas
sub
lea
pop
and
dec
arpl
xchg
rcrb
mov
stc
int3
shll
jne
sbb
in
xor
cmp
in
out
sbb
cmp
iret
icebp
cwtl
inc
adc
sbb
jne
mov
mov
dec
inc
jecxz
mov
sbb
add
rorb
arpl
test
dec
aaa
push
jmp
cltd
xor
xchg
jne
test
fcmovnb
insb
lock
stc
mov
ja
adc
decb
mov
scas
pop
pop
mov
push
out
popa
pop
add
nop
jp
add
popf
jge
pop
aad
inc
and
dec
test
pop
xchg
dec
mov
scas
sbb
add
add
inc
add
rorl
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
dec
jp
jmp
sarb
iret
mov
or
and
sbb
pop
aaa
xchg
mov
mov
and
addl
std
push
inc
outsb
popf
push
pop
outsb
insl
push
insl
test
cmp
jl
ja
cwtl
dec
bound
hlt
or
movsb
and
stos
or
not
lret
xor
in
sahf
cli
fistpl
insl
sahf
cmpsb
lods
cmp
ret
test
dec
mov
cmp
adc
sbb
pop
push
cmpxchg
mov
pusha
arpl
rorl
xchg
adc
cmp
sbb
xchg
jne
cmc
add
into
test
mov
inc
jb
scas
dec
or
cmp
sub
dec
stos
cli
outsb
dec
pop
or
inc
pop
push
std
mov
mov
ss
lock
adc
rcrl
fsubrp
pop
and
out
sbb
add
fs
xchg
and
push
xchg
dec
pop
mov
push
xor
mov
test
push
ror
sti
sub
ror
pop
test
in
ljmp
pop
ret
mov
es
pop
or
outsb
xchg
imul
das
xor
and
mov
xor
movq
popa
xchg
jns
iret
das
fistps
adc
sub
xchg
incb
cs
popf
das
test
push
sbb
fs
sbb
sub
sub
push
lock
xor
cmp
mov
mov
dec
add
cmpsb
leave
test
test
xlat
movsb
out
in
sbb
sahf
sub
push
push
xlat
cmp
pop
imull
xchg
push
iret
lcall
loope
sti
js
int3
mov
pop
push
mov
ds
rol
bound
scas
insl
pop
fcomp
pop
fwait
shl
aas
leave
cld
mov
xchg
mov
sbb
and
sub
idivb
lret
jle
mov
lcall
cmp
pop
jno
fsubl
push
dec
add
sub
ljmp
lcall
push
add
mov
stos
adcb
push
out
mov
popf
lret
aas
cmpsl
es
das
xor
int
lahf
mov
xchg
or
cmp
push
ror
xchg
mov
js
push
out
xor
in
sub
dec
aad
pop
adc
clc
fs
push
jmp
sub
jns
out
xorb
repnz
js
stos
adc
and
das
jbe
loop
and
and
rcrl
clc
call
fidivrl
lods
add
fsubs
mov
jp
out
imul
test
sub
inc
pop
sub
int
dec
xor
push
cmpsb
lea
mov
enter
sti
sub
and
adc
or
jnp
jo
cmp
in
shl
pop
div
cld
clc
jne
inc
addr16
test
or
cvtps2pd
dec
adc
dec
dec
sub
outsl
xor
imul
dec
popa
repz
fidivs
lret
loope
mov
enter
push
ds
xchg
fwait
and
fstpl
pop
cltd
xor
rolb
jns
cmpsb
sbb
inc
mov
and
or
faddl
ljmp
dec
sub
popf
cs
add
push
movsb
scas
add
mov
imul
mov
arpl
sub
fcompl
repz
xlat
out
and
xor
aaa
adc
jbe
jl
les
fdivr
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
int
xchg
sbb
push
cltd
xor
dec
loop
sbb
pop
out
das
sti
cmp
dec
jl
rcrb
arpl
stos
je
mov
mov
out
inc
iret
add
rorl
mov
fs
pop
mov
mov
je
or
sub
pop
or
cmc
push
xlat
out
sbb
xchg
scas
xlat
and
stc
mov
addr16
pop
or
and
clc
imul
adc
ja
stos
cmp
push
stc
stos
jnp
jne
add
pop
pop
movsb
imul
adc
mov
testl
or
pop
iret
xchg
mov
ja
sbb
nop
adc
bound
dec
push
orb
pop
jb
pop
pop
insb
cmpsb
fbstp
cli
push
shr
or
jecxz
mov
adc
test
jbe
ret
jb
fisubl
xchg
lret
mov
xchg
ss
xor
dec
das
mov
fisttps
out
jne
int
cmp
cmp
or
sbb
ljmp
lds
lods
shll
pop
std
sub
outsb
inc
fstl
mov
mov
movsb
mov
cmp
test
fs
movsb
imul
aas
inc
add
mov
call
and
fisubrs
xchg
sti
nop
jecxz
lods
sub
and
daa
pop
inc
mov
adc
pusha
shl
aam
jbe
xchg
add
sub
adc
aad
xor
lahf
gs
std
sub
inc
insb
adc
adc
outsl
sub
mov
mov
fidivl
lods
add
pop
pop
iret
jne
pop
and
jle
xchg
nop
cmp
testb
jmp
out
sbb
pop
cli
mov
cmp
cld
jp
fldt
pop
push
cs
ljmp
push
push
jmp
mov
push
xchg
pop
sub
dec
sub
leave
xor
cltd
sub
test
xchg
out
add
sbb
push
les
sub
mov
test
mov
xchg
inc
iret
daa
scas
or
in
hlt
push
loopne
fs
sbb
mov
mov
pusha
es
cli
jl
loope
lret
sub
push
sbb
pop
mov
sub
xor
adc
adc
loop
mov
mov
jecxz
cmp
inc
xchg
aam
jg
cmp
lea
inc
dec
or
pop
cwtl
not
cmp
sub
in
shlb
int3
insl
cmc
pop
jo
fwait
pop
and
mov
dec
xchg
push
fistpl
xchg
mov
iret
mov
sbb
inc
bound
andl
pop
adc
cmp
out
in
xchg
cwtl
sbb
cmp
xchg
sahf
inc
cmp
pusha
sub
mov
pop
xchg
push
out
sub
aas
xor
jae
int3
scas
or
fistpl
and
in
fwait
orl
jae
mov
das
add
pushf
or
pop
loope
jo
adc
test
lahf
pop
stos
iret
mov
or
pop
inc
shlb
nop
rcrb
fnsave
jns
pusha
ss
ficoms
movsb
scas
sbb
hlt
dec
scas
xchg
cs
arpl
andb
xor
movl
and
ficompl
add
out
adc
loopne
sbb
repz
inc
data16
addr16
jl
testl
mov
adc
mov
push
shrl
xchg
loop
xor
ja
sarl
arpl
lods
movsb
xlat
pop
js
mov
mov
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
push
out
fldl
pop
sarb
mov
mov
inc
dec
add
xor
sub
bndstx
pop
push
xchg
pop
arpl
xchg
sub
or
or
inc
add
sub
mov
add
sbb
mov
jg
dec
mov
jl
mov
rcr
dec
and
add
mov
test
fimuls
popf
mov
pop
jo
es
push
and
jg
imul
jl
inc
xchg
rcrl
mov
aad
mov
mov
mov
mov
sub
push
mov
dec
push
sbb
xor
jmp
dec
into
jo
mov
adcl
ficoml
data16
add
in
xchg
mov
jo
mov
inc
inc
in
xabort
mov
insl
sbb
mov
clc
add
add
data16
mov
stc
das
and
mov
pop
and
inc
pusha
cmp
pop
pop
insl
pop
hlt
sub
aas
mov
cli
mov
xor
ss
sbb
cmp
jp
jmp
cli
out
popa
dec
dec
stos
nop
loope
mov
mov
dec
mov
jmp
movsl
xchg
out
add
xchg
clc
stos
sbb
inc
cli
xchg
and
es
xor
addr16
xchg
jg
shl
fisttps
arpl
mov
fistpl
xchg
mov
or
test
mov
mov
iret
mov
loopne
pop
ds
and
test
rcll
and
jp
ret
lods
addl
divb
or
or
lret
repnz
push
dec
inc
rcl
xchg
and
push
mov
imul
jge
pop
jae
pop
imul
lret
mov
pop
fisttpll
and
pop
xchg
adc
cmpsb
mov
lock
xchg
mov
xchg
int
das
push
neg
push
daa
or
push
jecxz
and
rclb
mov
push
mov
xchg
mov
testb
jg
shlb
ss
sub
arpl
jno
leave
mov
jno
add
aaa
xchg
mov
pop
add
jg
incl
xchg
mov
mov
loop
adc
xchg
mov
test
jo
dec
cmpb
int3
xlat
mov
cmp
push
jp
lret
and
sub
in
or
in
sub
mov
jne
mov
sbb
cmc
inc
repnz
add
imul
xchg
xchg
aad
jnp
ljmp
les
jge
test
jne
rcrl
mov
adc
cmp
add
incb
lahf
push
adc
in
out
sbb
leave
xchg
dec
insl
fcomip
test
mov
adc
pusha
xchg
dec
test
jae
xchg
or
test
shr
push
std
rcr
dec
xlat
fistps
push
stos
addr16
add
xor
std
shlb
outsl
pop
pop
shrb
into
push
rclb
out
xor
and
gs
fwait
xor
sub
dec
fwait
push
xchg
mov
outsl
mov
jns
sub
gs
out
adc
mov
sti
test
mov
xchg
hlt
jmp
jno
cmp
mov
adc
dec
xor
repz
fistpll
mov
cltd
xor
or
bound
sti
sti
fs
insl
leave
xor
imul
sbb
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
dec
or
sarb
cmp
ret
lea
es
in
test
imul
lds
dec
push
push
xchg
pop
jle
in
inc
jo
movsl
xorl
mov
add
jge
daa
xor
mov
cmp
je
mov
mov
loope
imul
addr16
in
mov
test
inc
stos
std
movb
icebp
dec
cmp
insl
and
push
repz
movsl
sub
jo
mov
xor
cmpsb
sbb
repz
inc
or
mov
cmp
rcrl
jmp
push
das
lods
stos
xchg
and
sub
add
aam
xchg
push
mov
shll
std
jb
mov
repz
add
movsb
fisttps
or
pop
sbb
push
and
nop
mov
dec
sahf
das
jle
jp
test
sbb
lahf
sub
cs
test
mov
xor
sub
jne
jge
ja
or
and
adc
mov
mov
mov
sbb
leave
jo
add
fidivrs
mov
scas
cltd
inc
mov
fisttpll
in
add
xchg
insl
sahf
lods
xor
filds
and
in
sub
push
orl
pop
push
loopne
iret
test
sbb
ljmp
sbb
into
adcl
pushf
mov
cltd
data16
cltd
add
arpl
lods
jbe
push
addr16
xor
adc
and
imul
rclb
lret
andb
xchg
mov
or
insb
xchg
or
stc
add
jns
test
shrl
pop
in
add
lea
push
push
addr16
pop
out
out
mov
sbb
jbe
cmc
xchg
jno
xchg
sti
pop
inc
iret
ret
xor
and
fistps
outsl
sub
jle
add
scas
and
jns
iret
push
mov
pop
sub
push
arpl
pop
rcrb
pop
sub
mov
in
xor
aad
mov
xor
xor
outsb
inc
rcrb
mov
xor
arpl
adcl
std
leave
fiaddl
push
imul
push
andb
sbb
out
stos
nop
mov
inc
inc
jns
out
lods
stos
add
pusha
mov
out
aaa
push
and
ja
iret
les
in
cwtl
lea
call
mulb
xchg
hlt
mov
cmpsl
sub
mov
out
mov
push
pop
loope
fimull
pop
leave
or
mov
push
jno
pop
mov
cli
cmc
sbb
cmpsb
jge
das
push
shrb
sahf
ret
ja
inc
pop
mov
dec
add
jmp
dec
nop
dec
xchg
push
pop
sahf
pop
addr16
stc
aam
jg
outsb
shl
push
test
xchg
loope
add
or
xchg
and
out
stc
lods
sbb
add
push
fldl
jp
cwtl
js
mov
and
mov
mov
jno
enter
add
int3
ljmp
dec
arpl
adc
inc
hlt
loopne
movsb
pusha
push
into
cmpsb
fnstsw
xchg
jae
xlat
in
jno
popa
pop
ret
add
es
dec
rcrb
hlt
mov
add
ljmp
std
adc
imul
jg
test
push
lods
ret
mov
jmp
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
movsl
popa
and
dec
les
mov
or
cli
push
cli
dec
outsb
ret
popf
dec
ljmp
repz
out
pop
lods
in
pop
sahf
sbb
lret
lods
xchg
outsb
push
push
out
xchg
je
xor
ret
mov
in
shlb
sbb
es
jl
popa
xchg
adc
sbb
stc
pusha
sbb
xor
sti
nop
push
in
xorl
pop
bound
icebp
cmpsb
packsswb
push
mov
hlt
test
fadd
dec
xor
cmpsb
in
add
mov
push
adc
faddp
add
out
sbb
idivb
movsl
ss
ss
or
mov
push
adc
push
loope
in
push
pop
ja
mov
addr16
dec
addr16
push
dec
dec
adc
dec
dec
test
mov
lods
cmp
div
daa
push
pusha
jle
push
out
mov
jb
adc
addr16
push
cs
data16
cmp
mov
mov
insl
cltd
jnp
movsl
nop
mov
decb
scas
leave
pop
lds
out
add
sbb
int3
pusha
das
scas
lret
stc
fdiv
cli
das
ljmp
addr16
or
test
jl
clc
jns
push
mov
pop
pop
push
jge
es
imulb
lcall
mov
mov
lods
pusha
out
mov
rep
idivb
pusha
sahf
cmc
or
icebp
arpl
scas
bound
imul
mov
push
iret
adc
pop
cwtl
xor
ficomps
xchg
cmpsl
pop
xchg
jle
mov
pop
mov
mov
sub
fnstcw
xor
inc
sbb
in
inc
xchg
std
mov
aam
push
xor
repnz
jp
dec
pop
mov
or
push
mov
lahf
push
shlb
iret
xchg
adc
ss
test
sub
pop
jae
call
mov
fwait
push
push
or
nop
insl
and
push
andb
mov
and
in
lcall
push
int3
xlat
icebp
movsl
filds
loope
in
sub
adc
pop
inc
pop
mov
adc
and
repz
fsubrs
jb
ret
push
aas
adc
fs
aam
shr
cmpsl
int3
dec
fidivrs
dec
cld
bnd
dec
movsb
pop
dec
jne
outsl
cmp
add
cmp
mov
xchg
lcall
fnstenv
std
sub
xor
outsl
data16
jne
loop
inc
das
rcr
xlat
shlb
xchg
xchg
loope
int3
sarl
adc
pop
cs
push
xchg
xchg
testl
in
mov
mov
jle
lcall
xchg
jnp
lods
xlat
cmpsb
nop
cwtl
scas
mov
test
jb
bnd
aam
xchg
test
push
mov
ret
sarb
inc
clc
ficoms
fcmovu
mov
push
lcall
mov
loope
out
xchg
test
stos
ficoms
dec
pushf
mov
xchg
ficoml
mov
mov
xorb
repnz
inc
ja
lock
inc
cmpsl
push
pop
and
rcl
mov
sbb
mov
pop
fwait
and
fadds
into
into
stc
fsubl
or
push
jle
imul
sbb
add
aam
rorl
sbb
or
push
add
test
test
in
xchg
fildl
pushl
repz
push
mov
cmp
in
fs
mov
or
sub
sub
stc
dec
daa
out
sbb
les
insl
mov
cmp
addr16
add
xchg
inc
xchg
mov
jl
leave
dec
cmpsl
xchg
xchg
or
jl
xor
push
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
stc
shlb
cmpsl
outsl
sarb
sub
mov
xor
clc
xor
xlat
mov
adc
dec
push
sbb
imul
pop
orl
aam
inc
aam
xchg
dec
xchg
mov
add
hlt
scas
mov
sti
xor
dec
pop
stc
jae
fs
scas
movsl
pop
push
int
dec
ficompl
pop
es
jae
pop
jecxz
cmp
and
lret
pop
sub
mov
daa
clc
mov
std
nop
add
repz
xor
int
in
cli
stos
add
or
jae
mov
jno
fcoms
icebp
sbb
movsl
jl
mov
fstps
mov
and
cs
sbbl
adc
hlt
out
jg
push
push
mov
mov
or
xchg
cmp
data16
adc
arpl
pop
xchg
push
mov
lds
add
xchg
movsb
std
fmull
inc
jns
pop
sti
das
pop
jbe
sbb
sub
jbe
xor
pop
leave
push
into
push
inc
adc
enter
addr16
pop
inc
cmpsl
test
repz
xchg
inc
aam
cli
stos
add
lods
inc
dec
xchg
push
or
mov
int
mov
push
jne
test
ficomps
in
rolb
les
clc
mov
xchg
shll
in
jb
jae
jnp
mov
dec
mov
jno
mov
out
jle
sub
xor
std
dec
mov
mov
push
cltd
rcll
int
jp
hlt
jae
sbb
ret
sarb
ret
fldt
xlat
xlat
adc
xor
mov
or
push
add
inc
aaa
xor
mov
mov
cli
sti
outsl
divl
xchg
aad
and
inc
test
shl
test
stos
mov
or
fists
sahf
in
push
push
add
or
sbb
je
pop
inc
jns
push
scas
xor
rclb
push
call
cs
inc
sbb
and
push
rcrb
add
sub
shrl
je
xchg
push
cwtl
gs
or
pop
xor
and
sbbb
mov
xor
stc
inc
icebp
pop
into
lcall
lea
ret
pushf
mov
cli
pop
push
popa
std
ljmp
loopne
fmul
mov
imul
push
popf
bound
loop
add
dec
mov
jge
inc
xor
mov
sbb
int3
dec
push
int3
dec
arpl
sbb
test
push
std
out
inc
mov
mov
sbb
icebp
ret
fs
cmp
sub
and
lea
sbb
je
ljmp
dec
xlat
popf
dec
sub
notb
mov
mov
je
cmc
stos
or
fildll
cmp
lods
bound
mov
push
addr16
xor
clc
shr
call
roll
test
push
lock
divl
pop
pop
sahf
aad
addr16
in
xor
int3
cmp
mov
rorb
sub
sbb
xor
movsl
dec
lds
enter
mov
xor
add
pop
subb
mov
sub
lcall
xor
fstps
fildll
cli
in
push
jae
dec
sbb
and
daa
jo
cltd
movsb
pop
xor
push
jo
sub
sbb
lretw
std
repz
xor
and
pop
js
je
mov
jmp
cld
sbb
mov
sahf
mov
ja
mov
addr16
test
sub
lret
inc
xor
notb
js
jg
and
jb
pop
mov
jne
add
jl
ret
lods
loop
fsubrl
pushf
and
sarl
cmp
or
pop
int
and
xchg
out
mov
pop
psubq
xor
out
fs
pop
stos
pop
dec
test
jl
cvtdq2ps
fldl
lods
stos
lcallw
outsl
icebp
mov
test
jo
mov
mov
dec
shlb
and
pop
mov
repz
imul
cmp
lcall
loope
push
add
jecxz
icebp
mov
hlt
cmp
xchg
aas
in
push
mov
dec
outsl
push
ja
imul
mov
insl
and
inc
jg
decb
xchg
sub
push
stos
lret
sbb
add
or
jns
popa
fidivl
add
mov
dec
or
xchg
es
mov
aam
xor
mov
dec
push
dec
xlat
enter
aas
xchg
xchg
xor
mov
sub
mov
xor
adc
scas
mov
dec
test
push
sub
pop
ficoml
fcomi
adc
repnz
rcll
cmp
cltd
push
sahf
mov
jmp
ret
lds
hlt
jp
cld
and
mov
adcb
add
sahf
arpl
sub
inc
inc
pop
jmp
jmp
mov
insl
pop
mov
pop
cmpsb
aas
cwtl
pop
ja
xor
jmp
cli
imul
fistl
or
test
pop
mov
jecxz
fstp
dec
sbbl
pop
dec
jl
add
fldl
cmpl
call
test
pushf
sbb
adc
xor
cld
test
xor
mov
mov
fmulp
notb
add
adc
ret
in
pop
jecxz
dec
xchg
aam
cmp
and
jo
lds
hlt
mov
cld
xchg
repnz
pop
test
fwait
add
cli
cmp
les
mov
jns
bound
adc
cld
cmp
and
lods
xchg
test
dec
jecxz
jge
jmp
inc
push
out
gs
and
push
pop
sbb
inc
jle
mov
out
stos
cmp
sbbb
add
arpl
testb
push
es
lret
fisttpll
pop
outsl
movsl
sbb
push
pop
pushf
arpl
xor
pop
imul
push
lock
scas
push
and
sti
ljmp
leave
inc
push
outsl
sbb
sub
mov
aas
shrb
fsubrl
rorb
shll
pop
push
pop
push
xchg
loop
pop
add
rclb
jno
icebp
test
inc
mov
test
xchg
iret
das
xor
cmp
ja
fcomp
cmp
aaa
xor
add
es
xor
xor
push
cmc
mov
cmp
mov
cli
fisttps
and
jecxz
pushf
gs
mov
mov
pop
jge
adc
jbe
xchg
lds
xchg
or
push
mov
sub
repnz
test
shrb
mov
aad
xor
aaa
pop
cmp
mov
lds
ror
ljmp
inc
push
je
push
add
loopne
sbb
lods
das
add
outsb
ljmp
test
jnp
daa
aad
insl
add
sub
outsb
rcll
out
dec
inc
loope
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
mov
jg
mov
lea
popf
cmp
mov
push
int3
clc
and
fisttps
push
or
jno
es
loope
nop
test
aam
lahf
pop
dec
sub
outsl
sub
aas
in
adc
dec
jge
xor
jnp
repz
lret
enter
mov
popf
pop
out
xchg
xor
cli
outsb
lahf
cmp
adc
lea
sub
mov
add
push
notl
sub
sub
mov
stos
cmp
shrb
xchg
sub
cmc
lcall
dec
aad
mov
jp
lods
or
pop
lods
sbb
pop
movsl
adc
pop
imul
int
mov
mov
adcl
bound
or
fwait
pusha
test
mov
and
rclb
inc
int
xchg
add
flds
in
scas
cmpl
push
movsl
lcall
jbe
popl
sti
or
ret
std
dec
call
inc
stc
pop
push
inc
mov
in
jmp
pop
mov
inc
and
xchg
aas
cmp
add
arpl
mov
aam
jp
sbbl
int3
out
arpl
cwtl
jo
mov
arpl
stos
xorl
cmp
cltd
xor
pop
pop
inc
adc
push
aaa
lods
add
mov
int
sysret
mov
adc
xchg
push
pop
xor
bnd
scas
lods
or
sub
mov
or
ds
dec
movsb
andl
rol
push
fwait
lods
fisubl
js
mov
mov
push
sahf
aas
mov
sbb
jmp
daa
fstl
push
add
jns
cmp
stc
test
xor
ss
stc
mov
sarb
mov
mul
dec
pop
enter
push
jo
loopne
movsl
stos
xchg
imul
rorl
lea
loop
ret
push
and
xchg
dec
sub
icebp
roll
pop
push
stos
out
mov
and
xchg
divl
dec
mov
es
sub
jmp
decb
jns
jne
das
ljmp
aas
imul
push
push
pop
mov
mov
push
stc
mov
mov
sub
pop
mov
test
lret
testb
in
lea
add
movsb
aaa
repz
xchg
cmp
sub
add
sub
fbld
nop
mov
add
int
cmp
push
mov
pusha
sub
add
sub
add
pop
cmp
icebp
arpl
in
clc
lcall
mov
stos
repnz
mov
mov
push
xor
xchg
add
dec
imul
xchg
add
xchg
pop
ss
push
ljmp
int3
and
cmc
rcll
pop
inc
bswap
icebp
mov
fmuls
cld
rcrb
jmp
add
pusha
xchg
cmp
scas
sub
sbb
pop
mov
clc
cmp
inc
xchg
ljmp
mov
lods
les
nop
push
adc
arpl
sbb
clc
hlt
adc
xor
dec
mov
sub
dec
sarb
ret
jno
inc
xor
in
lret
xchg
jl
mov
adc
enter
jle
rcrl
jns
and
je
js
mov
sub
xchg
mov
push
lcall
xchg
dec
data16
decl
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
pop
push
insb
rorl
mov
xchg
adc
add
push
hlt
pushf
or
scas
gs
scas
inc
or
add
sub
std
ror
dec
xor
lock
push
je
lahf
pop
push
push
mov
adc
icebp
lret
cltd
rclb
xchg
shr
and
mov
mull
xchg
cmp
jno
inc
pop
fldcw
xor
mov
inc
xor
sti
mov
and
mov
jb
fcmovu
push
mov
mov
sbb
xchg
xchg
stos
insl
popl
pop
or
cwtl
ljmp
in
fisttpll
jb
rorl
out
test
insb
rcrb
sarb
outsl
in
popf
xchg
data16
xor
sub
add
das
xchg
jae
cmp
test
fld
je
push
mov
and
or
fiaddl
jge
and
and
fs
loopne
cmp
mov
repz
xchg
fistps
jne
ret
cmp
or
mov
pop
mov
lds
adc
mov
rclb
out
xchg
fildll
movsb
mov
jge
ds
mov
jecxz
inc
push
bound
or
repz
pop
paddusb
shr
cmove
icebp
cmp
fidivrs
and
mov
insl
loopne
sbbb
movsl
movsb
int3
int3
push
lea
rorb
je
cltd
cmc
or
loope
in
add
popf
mov
xor
lahf
and
hlt
or
xchg
mov
xor
cmp
cmp
xchg
xchg
mov
lods
pop
cli
shll
out
pop
adcb
iret
out
fs
call
push
hlt
mov
adc
shll
push
inc
push
cmp
sub
or
and
xchg
ffree
fisubrl
push
aas
push
sub
lods
cwtl
scas
imul
pop
push
imul
push
mov
jns
ss
mov
cmp
cmp
push
rolb
or
iret
lret
loope
call
or
ja
ret
orl
or
dec
test
xor
push
lock
mov
sbb
bound
cmp
xor
mov
dec
xchg
dec
or
clc
add
mov
or
test
int
xchg
test
dec
jg,pt
push
popf
mov
jnp
lea
cmp
ljmp
push
jo
jno
jno
lcall
js
je
or
scas
iret
sbbl
les
push
int
pushf
cmovo
out
xchg
xchg
pop
je
clc
sub
int3
clc
ret
inc
dec
dec
dec
xchg
loope
mov
xchg
xchg
add
pop
push
cwtl
shl
daa
push
arpl
les
movsb
outsl
cmc
sub
pop
insl
push
fidivrs
mov
repnz
pop
mov
movsb
not
push
fbld
cmc
cmp
out
mov
das
ja
in
mov
fbstp
inc
lcall
fdivrs
ja
mov
dec
push
push
xor
xchg
mov
cmp
and
sub
cmp
or
call
fcomi
iret
sbbl
fisubs
inc
inc
cs
xchg
lock
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
push
sarb
cmpsb
xchg
cwtl
and
mov
jmp
cmpb
cli
xchg
pop
jl
jae
adc
mov
or
les
das
and
pop
or
cld
jo
and
sahf
movsb
push
lret
jns
fwait
sbb
repnz
lret
mov
push
or
add
xor
movsl
loopne
or
sarb
dec
loop
adc
dec
jb
movsb
xchg
test
xchg
and
inc
and
cvttps2pi
xchg
xchg
loope
adc
cli
aas
fists
push
mov
push
adcb
loop
faddl
in
dec
lds
pop
loop
jnp
or
cltd
inc
repz
push
push
cmp
push
jmp
adc
sti
cmp
jb
in
lret
adcb
push
xchg
inc
add
js
push
xor
dec
int
shl
xchg
fwait
data16
cli
scas
sub
adc
pop
dec
movsb
fst
fdivrl
add
sbb
ljmp
jo
mov
mov
mov
rcr
stc
pop
call
add
add
addr16
xchg
sub
xchg
insl
pop
push
mov
fwait
push
mov
cmp
lea
pop
movsb
dec
mov
popa
push
fdivrp
sti
mov
jno
insb
fcoml
mov
int3
insb
es
das
mov
push
and
ljmp
push
xchg
add
test
mov
mov
add
adc
clc
hlt
js
jmp
dec
cwtl
je
movsb
mov
adc
test
add
pop
push
loope
dec
ja
cli
aam
cmp
repz
inc
xchg
pusha
bound
daa
cld
loope
icebp
les
mov
add
pop
aam
pop
sub
jae
cvtps2pd
jb
jns
jle
push
mulps
call
js
add
out
imul
jnp
push
repnz
sub
adc
rcr
mov
or
insl
add
inc
flds
sbb
cmp
sub
movsl
out
aas
cmp
or
inc
xor
add
pop
lds
subb
cwtl
mov
stc
stos
jae
push
push
jl
dec
pop
bnd
imul
scas
lds
rol
mov
fcomps
cmp
or
xor
aam
arpl
xchg
pop
outsb
cmp
adcb
pop
pop
in
and
xor
mov
add
addb
mov
xor
jno
rcrb
mov
in
in
sbb
aam
je
aas
or
sbb
inc
das
dec
loop
inc
xchg
insl
iret
pop
arpl
repnz
mov
adc
mov
sub
dec
lods
mov
inc
outsb
xchg
mov
push
in
mov
mov
jnp
imul
mov
and
jb
outsl
cmc
out
xchg
jge
mov
aad
popl
push
dec
and
arpl
pop
inc
fs
dec
pusha
daa
jb
loope
mov
punpckhdq
mov
aas
pusha
not
or
popl
outsl
cmp
mov
add
cs
ret
in
mov
ret
adc
jge
mov
mov
repnz
mov
jle
mov
dec
gs
sahf
and
imulb
ret
mov
popf
push
stos
testb
sbb
push
stc
xor
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
pop
stos
ss
arpl
mov
fcoml
mov
or
pop
cld
or
fiadds
push
rcll
data16
out
add
jmp
dec
mov
rorl
test
popa
ficoms
ds
sbb
or
outsb
mov
shlb
shrb
mov
xor
out
pusha
ror
ret
jge
or
mov
xor
push
push
mov
and
push
test
push
in
popa
cmc
fsubs
and
add
add
dec
clc
adc
cmp
nop
inc
int
in
jo
pop
pop
gs
rorl
or
xchg
mov
jp
aad
lds
lcall
jo
decb
fwait
mov
aad
xor
scas
push
int
sub
addl
inc
shrb
sbb
cmp
subl
pop
ds
xchg
rorb
cld
inc
in
xor
xlat
mov
xor
int
dec
xor
xor
xchg
iret
pusha
test
xlat
mov
mov
xor
push
sti
and
or
or
das
lret
xor
in
lock
scas
out
and
cmpsl
push
xor
js
jno
pop
xchg
xchg
mov
mov
dec
pop
and
and
mov
inc
cwtl
push
sbb
dec
es
sbb
jo
cmp
ret
aam
inc
rcrb
fistps
xor
aad
mov
movsl
dec
int3
push
adc
cmp
or
mov
aad
xor
dec
adc
sub
in
sub
cld
mov
jo
mov
inc
loopne
in
jle
div
iret
out
andb
movsl
add
test
mul
xchg
xor
sub
mov
outsb
pop
push
in
addb
xchg
jne
and
icebp
ss
hlt
xchg
push
xchg
jp
xor
andb
fstl
xchg
stos
sti
fstpl
sahf
jmp
and
dec
mov
rcr
push
std
enter
pop
scas
dec
xchg
add
and
insb
std
test
stc
xor
mov
outsl
jg
aad
icebp
jo
xchg
mov
or
mov
loope
pop
int3
test
stc
jo
jge
ds
and
sub
push
scas
pop
test
out
mov
test
pop
test
dec
sbb
cmp
push
mov
xchg
lret
lods
jbe
rol
ret
test
sub
outsl
add
cmp
leave
mov
jp
nop
push
mov
mov
push
inc
stos
xchg
repnz
or
cmp
xor
aaa
pop
xor
mov
xchg
xchg
jae
addr16
mov
pop
stc
adc
fcomps
lea
push
mov
mov
push
lods
jns
mov
aaa
xor
les
mov
fistps
int3
in
xor
xorl
mov
imul
xor
sarb
hlt
in
popf
pusha
mov
pop
dec
or
shll
arpl
enter
xor
ret
xchg
sub
dec
stos
cwtl
lods
fstpt
xor
fwait
out
ja
dec
cmp
loope
mov
mov
fisubrs
sub
adc
push
rcll
inc
add
and
lcall
xchg
gs
and
roll
test
rclb
hlt
mov
ret
pop
mov
pop
mov
scas
je
fcomip
and
jl
or
ss
push
adc
data16
pusha
mov
mov
mov
mov
lea
mov
and
and
sub
xor
mov
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
inc
add
nop
out
popf
sarb
in
std
les
lahf
pop
and
nop
inc
pop
cmp
gs
cwtl
sub
in
mov
std
test
gs
test
push
sub
out
leave
pop
mov
test
mov
jae
mov
or
dec
adc
mov
enter
xor
or
loopne
add
lds
push
dec
sarl
and
ja
cmp
xlat
mov
addr16
cmpsb
cwtl
jg
jb
pop
mov
mov
xchg
jns
mov
or
inc
mov
jecxz
test
test
inc
inc
lea
addb
mov
rorb
movsb
add
lea
sbb
lahf
pop
xchg
lahf
mov
imul
pushf
std
push
cwtl
outsb
insl
jmp
sbb
test
aas
ja
push
leave
push
fwait
hlt
pop
pop
xor
fs
jno
shrl
jb
imul
jno
xchg
push
inc
jl
out
add
stos
outsb
out
test
push
into
xchg
adc
push
ret
mov
int3
cmp
cs
lods
or
mov
call
enter
pop
lcall
lea
adc
in
pusha
push
and
adc
aam
push
cmp
out
jge
mov
push
sbb
pop
gs
mov
rorb
add
add
push
jge
cmpsb
rcrb
test
xor
cwtl
imul
inc
lock
push
sbbb
jg
xor
dec
add
push
inc
lret
cmp
cmpsb
repnz
xor
mov
cwtl
jmp
out
sbb
mov
stos
ds
mov
mov
and
inc
mov
stos
or
lret
insl
fistpl
addr16
or
ja
xor
mov
enter
or
lods
sbb
push
and
roll
movsl
rcl
jp
in
repnz
mov
cmpsb
ret
pushf
leave
jmp
pop
aam
stos
push
mov
leave
xchg
or
cmp
aad
ret
sbb
push
push
mov
add
lock
repnz
daa
rol
test
add
sti
sbb
jno
loop
jnp
aaa
inc
push
inc
mov
fistps
in
sti
push
sbb
sub
pop
test
loopne
std
xchg
mov
incb
imul
test
insb
sub
xlat
std
shrb
pop
adc
jb
push
or
out
call
jl
push
fistps
test
mov
sbb
cmp
stc
test
lret
leave
arpl
ret
xchg
add
addr16
dec
rcr
or
or
pop
add
fucomp
adc
cmc
ljmp
out
pusha
sub
mov
push
loopne,pt
or
sub
stos
mov
jmp
filds
xor
test
jae
iret
fsincos
jmp
push
imul
adc
test
in
jl
pop
jge
cmpl
sub
leave
lods
out
add
leave
and
setge
daa
jg
jecxz
inc
sbb
sbb
sub
mov
and
jns
pop
hlt
xchg
sbb
push
insb
out
jg
mov
jb
cmp
sarb
pop
iret
cmp
pop
push
adc
div
test
fnsave
mov
pop
or
ret
jno
lds
fisubrl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
repnz
jl
sarb
inc
sub
xchg
add
and
sbb
push
mov
je
or
in
jge
xchg
adc
jp
mov
repz
add
cld
xor
dec
into
shll
mov
xorb
dec
repnz
cmc
push
lret
fstpl
clc
out
dec
cmp
adc
fimuls
push
lcall
dec
inc
scas
inc
rolb
rcpps
fmuls
mov
xchg
das
jmp
shl
jae
sub
loope
add
mov
xchg
xchg
outsb
arpl
shrl
mov
hlt
sti
pop
lea
icebp
pop
addr16
pop
lret
repz
rcll
dec
test
add
sub
fwait
das
push
dec
push
lcall
insl
sub
cmp
cmp
jg
pop
mov
fsave
mov
out
cmp
in
push
xor
ret
loope
push
dec
jo
lods
in
roll
pop
bound
dec
inc
test
das
cmpsl
ja
xchg
les
pop
inc
std
cwtl
lods
je
nop
mov
mov
fisubl
movsl
insb
xchg
inc
in
adc
mov
dec
cmp
add
shll
xor
cmp
dec
sbb
sbb
sbb
cltd
pop
imul
test
and
pop
stos
sbb
cs
push
hlt
sub
testl
idivb
push
cmp
mov
movsl
cltd
ss
cmpsl
add
lods
push
ja
gs
mov
push
repz
das
nop
aam
push
imul
jbe
imul
push
pop
inc
jae
push
lret
data16
jp
loopne
mov
dec
or
inc
adcl
loope
jecxz
and
popf
cmp
jp
push
ds
mov
into
pusha
fwait
es
mov
jmp
std
push
push
in
movsb
adc
out
jecxz
movsb
lahf
jmp
push
test
mov
adc
ljmp
cmp
adc
cmc
xor
mov
push
inc
pop
fisttpll
testb
nop
rol
adc
ljmp
lahf
push
pop
loope
mov
add
cli
inc
cli
lock
fstl
sti
les
xchg
pop
lods
jle
lds
out
lock
adc
mov
lahf
or
xlat
insl
or
in
push
jnp,pn
and
mov
out
pop
sbb
pop
lret
les
jl
fimuls
dec
fisttpll
add
aam
lret
iret
cs
ret
cs
inc
xchg
mov
xchg
test
jb
scas
cmp
adc
lock
mov
int
mov
rcll
mov
pusha
mov
xor
and
pop
data16
lea
lds
out
aas
pop
xor
push
mov
mov
or
push
add
jl
add
shll
int
js
imul
xor
int
scas
adc
and
push
test
and
cmc
shlb
mov
inc
insb
scas
filds
cmp
cmp
fadd
sbb
pushf
out
pop
adc
flds
imul
push
push
adc
rorl
gs
lods
push
iret
mov
jg
mov
shll
pop
iret
fcmovbe
jno
loop
in
xlat
movl
andl
fildl
test
std
sti
add
push
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
mov
call
cltd
sarb
lret
jg
dec
or
mov
xchg
dec
jmp
movsb
or
imul
dec
pop
xchg
jg
inc
in
xchg
sbb
in
and
repnz
lock
jne
jmp
faddl
inc
xchg
mov
arpl
add
mov
pop
adc
or
jnp
nop
mov
pushf
adc
outsb
notb
jmp
cvtpi2ps
push
xchg
das
imul
adc
scas
adc
mov
sbb
push
dec
cmp
push
ret
lret
sbbb
icebp
adc
sub
push
xor
int
iret
sbbl
add
int
pop
in
testl
push
out
cmp
movl
inc
mov
push
outsl
pop
mov
push
add
aas
mov
add
mov
les
xchg
sbb
push
jno
addr16
mov
pushf
mov
fmuls
xor
aad
sarl
pop
jbe
pop
out
cmp
dec
jns
cltd
jb
sti
ss
or
lds
je
lcall
lcall
cli
mov
jl
xchg
aad
mull
push
ret
inc
jge
imul
inc
xor
xchg
jb
std
fistps
mov
cmpsb
push
xor
das
xchg
scas
fcompl
pop
cmp
mov
inc
test
pusha
jle
xlat
out
jbe
jne
jo
leave
pop
movl
fsts
fadd
inc
test
dec
jns
fsubrl
out
xchg
hlt
or
leave
jno
jae
int
icebp
aaa
and
push
mov
xchg
arpl
sti
jle
hlt
or
push
test
sahf
jecxz
movsl
sub
push
rorb
mov
mov
mov
sub
mov
int
push
and
ficoml
mov
cmpsb
ret
pop
xor
negb
shl
mov
mov
dec
rol
or
addb
push
movsl
out
mov
inc
clc
dec
in
fldenv
pop
out
lret
mov
dec
flds
jecxz
testb
mov
into
mov
mov
dec
xchg
shll
add
mov
dec
pop
push
xor
xor
dec
hlt
mov
xor
and
jo
jge
push
push
outsb
add
loop
sti
clc
rclb
jb,pt
jb
xchg
subl
mull
pop
or
std
pop
addb
insb
repnz
out
pop
sti
sbb
lret
push
sbb
adc
insb
bound
sbb
daa
or
stos
shlb
leave
movsb
xchg
mov
xlat
lcall
popl
nop
add
adc
inc
mov
adc
sahf
sahf
dec
xchg
aad
pop
pushf
lea
jo
or
outsb
pop
adc
jnp
ret
imul
mov
sub
jno
out
mov
cmp
jp
mov
in
jbe
push
lock
movsl
mov
jns
inc
aad
adc
pop
push
dec
mov
lods
cltd
js
pop
lods
mov
mov
jl
xchg
push
lods
jae
mov
shrl
lds
lods
lret
pop
stos
ds
lds
xchg
imul
addr16
mov
in
inc
rcl
mov
dec
cmc
faddl
and
mov
ret
push
stos
nop
cltd
jmp
test
add
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
mov
dec
xchg
xchg
mov
mov
dec
mov
in
cs
rorb
and
push
ljmp
mov
dec
jl
jl
mov
sub
divl
sub
iret
leave
nop
pushf
movsb
inc
lret
jb
push
loope
sahf
mov
jae
cmpsb
imul
cmpsl
imul
pusha
xor
outsb
jg
cltd
sub
sub
inc
idivl
jge
test
xor
mov
xchg
call
xor
retw
jl
cmp
daa
shrb
jbe
es
leave
rolb
dec
mov
addr16
arpl
adc
fs
insb
andb
mov
pop
lods
push
or
add
cmp
xchg
jle
mov
test
inc
dec
es
mov
sub
test
into
push
jae
inc
inc
fadds
movb
cmp
loopne
orb
dec
cli
xchg
sub
insb
and
mov
dec
jne
pop
divl
add
stos
jno
out
cmp
lcall
andl
pop
inc
lock
xor
adc
mov
jecxz
adc
sbb
pop
mov
lods
mov
cld
jbe
stos
xorl
add
jns
push
mov
outsl
sub
out
cli
shll
adc
andb
push
mov
in
bound
test
add
repz
push
out
test
and
popf
and
aam
jo
lds
and
aad
jne
cli
inc
xchg
jo
fcomps
mov
sbb
sbb
fld
cmp
sahf
ljmp
jne
rolb
movsb
insl
mov
int
inc
mov
xchg
pop
jb
stos
push
sub
push
mov
js
arpl
std
das
cli
mov
cmpsb
adc
and
loope
and
ja
dec
dec
mov
icebp
mov
ljmp
and
cmp
pop
add
in
mov
outsl
pusha
pop
mov
sahf
jbe
scas
nop
or
loopne
lret
sbb
mov
adc
jl
and
sub
sbb
andl
mov
iret
jl
sub
rclb
lods
negl
insb
inc
ret
or
mov
cmpl
jge
jne
lret
outsb
cmp
ret
xchg
fldenv
dec
jo
test
sbb
loopne
and
imul
cmp
cmp
and
aam
or
stos
mov
pop
push
mov
lahf
test
sbb
das
mov
jo
in
sbb
test
cmp
pop
es
xchg
pushf
shrl
xchg
cmp
in
sub
jle
mov
push
mov
in
xchg
stc
lods
cld
stos
lcall
js
jmp
fadds
pop
mov
insl
sbb
or
ficompl
ljmpw
sub
into
jmp
pop
adc
enter
mov
mov
mov
push
das
inc
inc
rclb
cmp
cmc
sub
jmp
pop
jmp
inc
sahf
fldt
fadd
add
mull
gs
inc
inc
fldt
ds
pop
inc
adc
std
fistps
push
mov
mov
arpl
shll
and
in
dec
push
mov
push
imul
mov
fsubrs
jg
pop
sbb
xchg
rorb
addb
mov
call
ds
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
mov
fstpl
mov
mov
mov
fcmovbe
lret
rcr
and
push
negb
ds
test
jecxz
test
mov
jne
lea
xchg
sbb
ljmp
out
sarl
jb
mov
pusha
stc
or
cli
sub
in
xchg
ja
adc
std
and
cld
stos
and
bound
xchg
addr16
xchg
outsl
mov
fcompl
inc
fs
pop
bound
add
into
inc
into
pop
pushf
xor
mov
aam
lcall
jl
pop
stos
mov
sbb
or
lahf
jns
lea
dec
pop
daa
and
jns
gs
mov
inc
or
or
daa
sub
insl
sbb
fmuls
cmpsl
jae
in
fidivrl
jle
daa
or
mov
das
rep
lahf
lret
mov
inc
mov
xchg
lret
lods
sub
hlt
adc
or
in
sti
fldt
jb
or
adc
push
mov
push
xchg
mov
mov
mov
insl
or
mov
mov
test
adc
stos
aad
push
or
lea
xchg
pop
iret
mov
adc
in
outsb
mov
insl
into
lea
repnz
add
aas
adc
cli
push
sbb
xor
ja
jns
ret
jl
cld
in
jecxz
xchg
fwait
je
clc
jg
gs
dec
push
push
in
mov
add
fmuls
push
push
push
or
cs
mov
fstpl
fcoms
pop
hlt
sbb
pop
lds
ss
leave
jmp
mov
repnz
and
jae
inc
fistpll
jae
add
pop
mov
xchg
test
inc
cli
adc
call
mov
xor
rcr
mov
mov
mov
rcrb
xlat
lds
add
cld
sub
xchg
lret
mov
roll
int
dec
iret
or
into
aas
jecxz
mov
and
inc
lods
jne
out
aaa
lret
cmpsb
cmp
aam
sti
adc
shrl
jge
loopne
mov
std
mov
gs
or
jns
aam
into
out
jecxz
mov
mov
adc
sarb
cmp
lahf
jns
lret
mov
leave
and
adc
xchg
std
lret
pushf
test
leave
push
push
xchg
push
jne
cli
add
testb
aad
mov
fsubr
out
push
ss
cmpsb
jp
add
sahf
repnz
dec
mov
dec
cmp
fisttpll
and
pop
jl
test
push
xchg
sub
inc
sbb
and
push
ud0
out
stos
xchg
fwait
pand
jns
jb
shrb
fwait
mov
adc
cmpl
dec
jbe
aad
or
mov
ja
mov
sbb
push
stos
inc
adc
ljmp
in
jae
ja
sysexit
mov
mov
roll
push
ds
inc
scas
xchg
pop
xor
add
inc
mov
cli
cli
add
pop
jmp
mov
pop
adc
popf
inc
sbb
cmp
inc
ds
pop
fst
dec
lcall
sbb
mov
sbb
lret
aas
test
lcall
mov
mov
idivb
gs
lods
inc
cmc
loope
pusha
add
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
cmp
sub
lods
rol
dec
les
fistl
xchg
jo
cmc
mov
rclb
movsb
mov
sbb
lods
mov
fidivl
fcmovu
jnp
dec
negl
jg
mov
push
cmp
jnp
mov
cmp
xchg
cmpsl
inc
dec
xor
lea
mov
push
fadds
mov
arpl
adc
movsl
lahf
mov
push
shl
dec
lcall
ret
ss
sub
mov
push
cmp
adc
in
int
jg
gs
mov
enter
or
adc
xchg
loopne
sahf
sbb
push
mov
add
in
roll
rorl
dec
push
mov
inc
add
jecxz
dec
mov
inc
dec
aam
inc
addr16
and
enter
adc
lock
jle
scas
test
imul
les
clc
loop
fmuls
js
jne
hlt
jae
jmp
mov
or
pop
pop
mov
out
sub
out
mov
jb
cmp
arpl
lods
mov
cltd
icebp
call
mov
daa
das
movsl
lret
es
jb
jmp
ret
and
rcll
sbb
add
jmp
jne
jl
repnz
fistpl
pop
pusha
and
jmp
nop
mov
cmp
mov
nop
mov
dec
popf
xchg
repz
xchg
ror
lods
and
xchg
dec
iret
and
xor
dec
negl
pop
push
fildl
add
ficoml
mov
sarl
xlat
pop
ret
dec
cwtl
rcrb
addb
mov
lods
lret
sahf
xchg
cmp
xchg
lret
add
mov
adcb
aad
js
insl
addl
add
lret
jge
ss
pop
lock
mov
pop
fsubrl
mov
push
mov
add
pop
cmp
int3
and
arpl
std
add
cs
sub
mov
pop
sbb
push
push
daa
jb
add
xchg
dec
bound
xchg
adc
fistpl
lret
mov
test
mov
aad
call
sbb
outsb
std
cmpsb
daa
mov
add
mov
xchg
repz
mov
mull
jb
aad
jb
sbb
mov
sub
dec
xlat
xor
push
cmp
ds
cld
outsb
xor
fnstcw
ja
cmp
sbb
loopne
lret
incl
cmp
mov
mov
out
das
xor
cmp
repnz
out
push
lcall
ret
pop
int
mov
sti
mov
jns
mov
outsb
mov
nop
leave
pop
push
scas
jge
cltd
popa
icebp
jns
movsl
mov
fcmovnb
lds
and
mov
rep
call
movsl
xor
or
je
mov
lcall
leave
pushf
sub
dec
stc
xchg
add
sub
and
sub
mov
stos
fnstenv
lods
xor
jo
xchg
adc
int
stos
out
xchg
jmp
divb
and
shl
jns
scas
pusha
aas
popf
mov
mov
xor
sbb
leave
xlat
dec
int
mov
dec
and
pop
fwait
scas
std
jle
cmp
icebp
push
jns
repz
test
pop
ljmp
sbb
jle,pt
fcmovnb
shll
mov
add
mov
and
std
or
jmp
push
jle
xchg
inc
jno
mov
push
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
jbe
cmp
sarb
enter
imul
in
out
pop
xor
sub
and
fildll
jbe
sub
es
fs
dec
jp
arpl
xor
arpl
and
scas
sbb
mov
gs
xor
cs
pop
stos
push
popa
inc
jecxz
pop
mov
ss
push
decb
int
lcall
mov
mov
cltd
ss
sti
stos
scas
adc
push
xchg
pop
aam
in
and
fldl
cli
or
xor
and
js
pusha
lea
dec
sarb
inc
push
xlat
jmp
mov
and
cs
shll
jbe
xor
mov
xor
inc
aad
mov
das
xor
jne
mov
jae
outsl
clc
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
or
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
xchg
and
add
add
add
push
sub
pop
sub
adc
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
shlb
add
daa
inc
add
add
daa
inc
add
jle
add
inc
add
sub
dec
sub
mov
inc
add
sub
sbb
inc
add
push
movsl
scas
or
inc
add
sub
mov
sub
or
inc
add
inc
add
sub
pusha
sub
scas
fwait
push
movsl
cmp
mov
inc
sub
fsubl
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
mov
inc
add
jae
jns
fwait
push
movsl
cmp
xlat
movsl
dec
add
mov
inc
add
inc
sbb
hlt
stc
sarb
inc
pop
jg
add
add
jle
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
sub
jbe
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
cmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
jne
inc
add
inc
add
inc
add
test
mov
add
test
cltd
test
popf
test
mov
test
test
test
mov
inc
add
jle
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
cmc
test
stc
test
std
test
add
inc
add
test
or
test
adc
test
sbb
test
and
test
sub
test
xlat
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
jne
inc
add
inc
add
inc
add
test
mov
inc
add
test
cltd
test
popf
test
mov
test
test
test
mov
inc
sub
mov
add
add
jo
add
add
add
add
add
add
add
inc
xchg
add
pusha
xchg
add
push
xchg
add
inc
mov
add
add
add
add
jb
add
mov
add
cmpsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
pop
mov
add
add
jp
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
orb
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
bound
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
inc
lea
add
add
add
add
orb
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
and
add
inc
mov
add
add
add
add
xchg
add
test
add
mov
mov
add
mov
add
mov
add
popl
add
popl
add
popl
add
add
add
push
popl
add
popl
add
popl
add
popl
add
popl
add
nop
add
sbb
add
sub
add
cmp
add
pop
nop
add
insb
nop
add
jp
add
mov
add
mov
nop
add
out
add
clc
nop
add
or
add
sub
add
cmp
add
dec
xchg
add
push
xchg
add
outsb
xchg
add
jle
add
mov
add
scas
xchg
add
mov
xchg
add
ficoms
add
push
xchg
add
adc
add
sub
add
cmp
add
pop
xchg
add
outsb
xchg
add
jp
add
mov
add
scas
xchg
add
add
add
xchg
add
aam
add
out
add
xchg
add
adc
add
cmp
add
dec
xchg
add
push
xchg
add
push
xchg
add
nop
xchg
add
mov
xchg
add
ret
add
xchg
add
loopne
add
in
xchg
add
add
add
add
inc
xchg
add
push
xchg
add
push
xchg
add
test
add
add
ficoms
add
xchg
add
sbb
add
inc
xchg
add
push
xchg
add
bound
add
adcb
add
add
rclb
add
out
xchg
add
xchg
add
or
add
and
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
movsb
and
add
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
