push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
idivl
jle
mov
jle
into
xlat
cmp
pop
add
movups
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
mov
scas
loopne
pop
sbb
pushf
aam
or
jne
jns
xchg
pop
xchg
cltd
loopne
push
sahf
push
xchg
fistps
mov
test
lahf
je
mov
pop
popf
in
nop
cmc
mov
aam
xchg
pop
test
je
testb
aam
das
out
dec
nop
cld
aaa
cmpb
lret
sbb
jnp
std
aad
pop
cld
pop
test
pop
je
popf
les
outsl
inc
xlat
test
add
mov
out
xor
cld
mov
ror
mov
and
fimull
add
mov
ljmp
aaa
movsb
pop
mov
pushf
add
mov
lret
ljmp
adc
inc
lret
popa
xor
mov
insb
adc
fadds
dec
mov
std
movsl
sub
xor
popf
adc
dec
fnstenv
mov
lahf
jns
inc
pop
or
fmulp
adc
xchg
test
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
mov
mov
jle
mov
jle
sahf
fwait
sub
sbb
mov
inc
mov
into
and
stc
mov
xor
cmp
adc
lds
repnz
es
aad
jecxz
decb
sub
fstpl
mov
jecxz
cltd
ljmp
test
add
add
mov
popl
xor
in
jge
inc
rclb
dec
or
out
ss
mov
jp
addl
outsl
add
aad
push
lret
add
mov
stos
adc
sbb
dec
pop
loope
pop
nop
jo
xchg
lods
in
into
jns
loope
adc
in
sub
mov
inc
dec
and
rcrb
ds
ljmp
xor
inc
pop
xor
mov
subl
mov
lret
scas
jnp
loope
jecxz
or
mov
repnz
jecxz
add
xchg
add
nop
inc
fnstenv
sti
jl
stc
decl
enter
push
inc
sbb
sbb
add
pop
adc
or
ds
aas
sbb
mov
or
mov
pop
ret
push
les
lret
push
mov
jnp
xchg
jns
in
imul
cmpsl
pop
mov
rorl
mov
hlt
gs
jnp
lods
mov
pop
in
and
xor
popf
and
adc
push
pop
dec
rol
lcall
jnp
or
push
mov
xor
or
add
or
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
mov
jns
jle
jg
jle
pop
addr16
and
and
jae
iret
and
outsb
adc
lret
fsubrs
outsl
mul
nop
xor
xchg
repz
xchg
jb
adcl
imul
fwait
addl
xor
jns
int
movsb
mov
and
and
iret
adc
cmp
xchg
or
dec
lahf
and
mov
inc
pusha
js
sbb
push
pop
loopne
rcrl
dec
mov
xchg
imul
mov
lock
cmp
mov
out
adc
test
lret
mov
cmp
les
dec
jecxz
fsqrt
imul
sbb
rol
ds
outsl
loop
mov
mov
imul
lea
repz
mov
call
gs
pop
sub
imul
jge
xorb
xchg
add
adc
xor
insb
shll
push
rcrl
xchg
mov
push
fwait
loop
push
sub
and
pop
icebp
mov
sub
pop
loope
sbb
adc
xchg
roll
jns
xor
mov
and
pop
dec
dec
das
sarb
fistpl
jbe
or
mov
jmp
or
fistps
sub
arpl
int
fbstp
push
out
shl
push
mov
push
xchg
addr16
hlt
pushf
fstpl
jge
mov
dec
std
gs
pmuludq
mov
rcrb
and
inc
jle
mov
test
test
add
add
add
or
jmp
or
popa
sbb
jnp
jle
jg
jle
cmp
cwtl
into
jnp
sti
psubsw
sub
dec
or
cmp
or
jmp
sbb
dec
push
ja
pusha
fs
xor
inc
aad
icebp
ret
std
lods
ljmp
push
fildl
cmc
cmp
fwait
scas
mov
ja
imul
rcll
dec
mov
daa
cmp
pop
mov
movsl
xor
outsl
add
cld
lcall
inc
cs
fisttpll
mov
ljmp
cmp
out
call
sbb
mov
in
cmpsl
pop
addb
fwait
push
dec
pushf
jo
sbb
pop
in
mov
sub
xor
mov
lea
outsl
movb
mov
stos
into
adc
mov
icebp
mov
std
imul
and
lods
aas
sbb
cmc
add
adcb
push
sub
cmp
sub
sub
xor
imul
insl
cs
shll
scas
lds
jnp
bound
xlat
movsl
xor
or
mov
and
incb
inc
dec
xchg
in
jmp
push
lods
or
pop
in
sbb
enter
add
outsb
cmp
cmc
jp
outsl
and
or
cmp
mov
std
mov
xchg
and
and
rol
adc
scas
adc
imul
jbe
pop
fsts
inc
sbb
stc
adc
pop
mov
cmc
sbb
push
inc
or
int3
xchg
inc
mov
or
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
scas
mov
mov
jle
mov
xor
sbb
fldcw
inc
xchg
lcall
or
pop
idiv
insl
push
push
aas
jp
adc
stos
or
fsubrl
out
mov
scas
daa
fbld
pop
xor
out
jbe
xlat
dec
sar
or
loop
xchg
cwtl
fs
dec
adc
jne
inc
mov
push
jnp
mov
stc
sub
stos
push
sbbb
mov
ret
lds
mov
roll
fwait
jo
mov
jmp
clc
shlb
clc
adc
xchg
mov
in
mov
std
in
jle
mov
imul
js
mov
add
sti
fwait
push
mov
test
jo
sti
pop
bound
push
push
pusha
sub
test
push
ret
push
pop
addb
icebp
mov
xor
shll
push
add
mov
movsl
or
mov
xchg
pop
or
or
test
sub
push
stos
int
mov
dec
xor
mov
and
sub
cmp
lods
mov
enter
lods
mov
dec
or
outsb
sub
sub
xor
dec
and
in
jg
sub
jnp
popf
xchg
cmp
mov
sbb
push
sub
mov
gs
addr16
and
sarb
inc
jmp
inc
out
jmp
xor
in
out
icebp
push
lods
mov
dec
imul
fadds
cmp
dec
or
mov
int3
repz
cmc
shl
dec
xchg
push
add
adc
add
push
inc
addr16
shll
dec
mov
mov
mov
movzwl
add
jmp
push
mov
test
in
mov
mov
jle
mov
jle
ss
inc
adc
push
inc
test
insb
mov
dec
das
mov
or
mov
outsl
mov
or
mov
ljmp
lods
mov
and
and
dec
test
int3
sbb
imul
dec
fisttps
fnstsw
mov
js
outsb
sub
inc
dec
add
stos
push
out
scas
ds
clc
pop
jnp
add
mov
inc
enter
dec
rolb
sub
xlat
dec
push
inc
and
push
inc
mov
in
cld
ds
xchg
inc
add
into
cli
push
mov
and
mov
jecxz
push
sbb
dec
xchg
dec
jbe
cld
and
rorl
mov
insl
ret
ficoms
sarb
pop
or
repz
push
in
movsl
mov
lret
orb
sbbl
inc
sbb
repz
fwait
or
mov
aaa
call
insl
inc
xor
movsl
dec
stc
outsl
push
nop
mov
shll
dec
out
add
shl
lods
or
pop
ss
sub
aaa
lret
sub
jp
rol
fstl
push
lahf
or
jnp
fidivl
mov
dec
sbb
xchg
adc
in
insl
in
push
or
and
imul
mov
dec
push
add
cmp
mov
jge
jno
stc
mov
jg
jmp
xchg
xlat
mov
aam
fstpt
clc
loop
xchg
test
lods
adc
pop
push
dec
dec
mov
xor
or
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
bound
repnz
jle
jg
jle
andl
jp
call
icebp
xchg
jnp
out
sbb
mov
sbb
xor
cmc
ror
push
xchg
fcoml
ja
shl
stos
test
cltd
fwait
repnz
mov
leave
movsb
out
xchg
addr16
add
clc
push
mov
mov
or
sub
fwait
test
push
xor
push
cmp
sbbb
mov
clc
dec
testl
subb
pop
lcall
ljmp
mov
add
mov
pop
int3
imul
sub
pop
js
push
sbb
hlt
idivb
jge
add
rolb
sahf
test
repz
js
pop
mov
and
setg
sbbb
push
gs
adc
xchg
xchg
mov
stos
je
xchg
fstps
sub
es
gs
dec
and
stc
pop
pop
inc
xchg
add
popf
gs
dec
cmpsl
bound
paddd
inc
mov
adc
in
push
jb
outsb
add
stos
mov
iret
mov
push
adc
icebp
sbbb
repz
adc
mov
mov
dec
stc
sar
mov
mov
or
pop
pop
cwtl
pop
orb
sub
push
xchg
xor
mov
inc
adc
mov
outsl
gs
lods
fwait
pusha
cltd
adc
and
jg
sbb
sub
les
test
pop
out
sbb
inc
cmp
mov
cmp
sbb
push
push
popf
jno
adc
das
fisubs
mov
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
fxam
adc
jle
mov
jle
imulb
sub
push
cmpsl
orb
int
idivb
mov
and
adc
jmp
xlat
lock
inc
jle
lcall
fistps
or
imul
pop
fmull
dec
dec
and
outsb
jg
mov
stc
xchg
mov
dec
lea
rol
cli
pop
push
or
into
dec
pop
cwtl
xchg
fs
lcall
add
int
cltd
in
cmp
mov
jg
addr16
xchg
adc
xor
stc
imul
cmp
shlb
cld
test
inc
xor
repnz
insl
scas
jne
fcompp
loopne
aad
out
fnstenv
movsb
mov
fs
dec
lods
mov
ret
lods
jmp
or
fcomps
shlb
pop
cs
xor
mov
mov
mov
je
test
inc
cltd
outsb
scas
adc
xchg
nop
jo
add
loop
xchg
pushf
mov
push
les
mov
ss
xchg
fidivl
in
int3
daa
idiv
adc
rcll
jl
insb
cld
sahf
fdiv
jbe
xchg
je
ljmp
mov
int3
jno
dec
rcrb
repnz
lahf
inc
push
jmp
fst
addr16
pop
mov
lret
pop
mov
dec
repz
mov
push
arpl
xchg
mov
aas
sbb
pop
or
sub
cmpl
mov
add
test
jmp
pop
cmp
out
dec
stos
loop
xchg
cltd
cmpsl
icebp
lods
xor
cmc
das
jne
jg
and
dec
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
cmovle
cli
or
jg
jle
ret
ljmp
xchg
xchg
mov
fs
mov
lret
mov
or
insl
lods
addr16
sub
or
cld
roll
dec
repz
bound
xor
sbb
and
aad
adc
push
mov
jne
sti
jl
xor
enter
mov
mov
fdivr
adc
lahf
sbb
push
push
xor
mov
cmp
call
xchg
repnz
jl
push
cltd
adc
or
push
cmp
cmc
adc
lret
jecxz
gs
test
inc
cmp
js
shlb
ljmp
das
push
lea
inc
mov
or
sub
mov
stos
mov
sub
dec
fwait
outsl
jns
jbe
movsl
mov
mov
sub
shl
jge
mov
out
aad
push
push
push
sar
jmp
lock
xchg
adc
fiaddl
ret
pop
int3
ljmp
into
sbb
and
pop
or
mull
int
dec
into
call
out
jae
rol
cmp
repnz
fsubl
mov
lock
bound
xchg
mov
xchg
inc
aad
js
mov
sbb
lods
jp
mov
add
xchg
in
mov
imul
int
rcll
test
lret
jns
pop
dec
cmpsl
mov
sbb
out
sbb
inc
arpl
xlat
mov
into
rcrb
cmp
lods
jecxz
rcl
pop
push
jecxz
repz
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
pop
add
push
jmp
dec
and
and
imul
pop
lea
lret
push
call
dec
std
adc
push
in
and
pop
out
sti
fdivrl
inc
sbb
pop
mov
dec
ret
cmpsb
xchg
push
out
shll
push
cmpb
mov
dec
in
test
mov
push
fwait
inc
xchg
xor
adc
je
mov
ja
cmp
cs
and
jmp
adc
mov
jae
push
jbe
sub
ffreep
jge
jmp
mov
loopne
mov
aaa
lahf
mov
nop
adc
ret
popf
mov
sahf
stos
jmp
add
fdivrs
xchg
xor
mov
mov
sti
divps
inc
aam
outsl
lcall
pop
jle
mov
xchg
mov
cltd
imul
imul
daa
cmp
fincstp
push
out
cmp
sbb
rorl
clc
sub
lea
mov
or
inc
push
mov
std
cmp
fistl
adcl
sbb
repnz
xor
lret
cmc
inc
arpl
pop
jle
adc
push
in
in
mov
mov
mov
push
adc
xchg
rorl
aas
jae
xorb
cmp
les
and
push
jns
aaa
and
lcall
fcmove
fs
movsl
scas
sub
cwtl
cld
movsl
xlat
push
rorb
clc
clc
adc
pusha
bnd
repnz
jne
repnz
fistpl
add
pushf
xor
in
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
mov
xchg
and
jle
mov
jle
push
fucom
ljmp
mov
and
pop
cltd
es
repz
mov
add
pop
sar
cmp
or
and
mov
or
ja
repz
stos
add
lret
aam
loope
xchg
pop
xchg
xor
pop
aaa
sub
or
fildll
std
pop
lret
test
sbb
add
movsb
adc
lods
push
int
cmp
mov
pop
adc
sub
mov
jl
cmc
ss
xor
dec
movsb
add
or
mov
xchg
xor
test
imulb
imul
out
daa
xorl
mov
stos
je
out
sub
scas
mov
iret
dec
or
xchg
mov
sbb
cld
sub
jns
jae
xor
lods
aad
fwait
stc
sbb
enter
dec
test
inc
mov
sub
imul
loop
loope
or
pop
mov
lods
xchg
repnz
adc
outsl
loopne
jns
jge
lds
notb
inc
pop
aam
xor
mov
jo
lea
stc
std
inc
xor
push
jecxz
push
mov
pop
mov
mov
adc
js
in
testb
mov
and
mov
jno
and
jp
mov
clc
xchg
xor
ror
jbe
pop
imul
shlb
sbb
or
push
jb
or
imul
clc
xchg
xchg
fcmovb
push
lret
scas
mov
sbb
leave
ret
lock
shrb
sub
cld
aaa
push
push
loope
icebp
loopne
mov
pop
dec
cmp
aad
add
and
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
push
scas
push
or
push
jg
jle
pop
enter
stmxcsr
and
push
dec
adc
int3
loop
inc
push
mov
pop
cmp
call
and
jb
mov
lock
jne
xor
cltd
add
cwtl
cwtl
cmp
mov
fwait
out
lahf
enter
dec
out
jbe
add
les
cmp
jno
push
cmp
dec
pushf
dec
mov
lods
sbbl
cmp
adc
jbe
cmp
scas
sub
clc
je
adc
scas
add
gs
std
pushf
aam
cmp
inc
loop
cmp
rol
in
dec
clc
jne
push
jno
mov
xchg
enter
sub
cli
push
mov
or
adc
ljmp
jne
mov
test
xor
test
xor
insb
scas
cwtl
add
pop
popf
rcr
ja
insl
pop
inc
jmp
stos
pop
cwtl
pop
in
sub
pop
ja
xchg
fnsave
xor
xchg
or
dec
mov
pushf
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
push
pop
je
jae
jle
push
jg
jle
arpl
cmp
jno
aaa
sti
in
aas
push
lahf
gs
inc
push
xor
add
dec
pop
inc
sbb
pop
addr16
xchg
fisttps
fwait
std
mov
pop
pop
push
inc
xchg
enter
push
push
jns
push
movsl
xchg
aad
gs
push
push
pop
pop
push
es
test
bound
sub
mov
cmpsb
adc
add
mov
mov
adc
das
lods
xorb
and
pop
or
sub
loop
or
ds
rclb
xor
in
loope
xchg
xchg
push
xor
sti
icebp
leave
xor
push
mov
push
push
movsl
pop
aas
ja
xchg
popa
call
inc
ret
insb
loope
in
fcompl
mov
mov
add
in
pop
add
loop
xchg
jmp
add
lock
jmp
and
push
ficomps
and
mov
pop
mov
test
mov
hlt
pop
dec
xor
scas
jb
iret
push
push
cltd
ret
mov
arpl
scas
xor
sbb
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
cltd
add
push
jg
jle
shrl
xchg
and
cld
das
mov
jecxz
cwtl
subl
adc
jbe
jmp
mov
push
fldenv
jle
pusha
mov
gs
dec
and
mov
jno
mov
je
add
testb
inc
mov
push
cmp
sub
mov
pop
xchg
cmpsl
in
sbb
mov
add
cltd
lret
cld
pop
movsb
pop
push
pusha
loope,pn
pop
pop
fwait
and
or
adc
insl
test
fstps
fdivrl
xchg
pop
cmpsb
and
add
popa
jo
idiv
pop
lret
jp
mov
dec
xlat
mov
dec
mov
push
jnp
lret
mov
scas
mov
ds
sub
jecxz
xchg
xchg
andb
mov
imul
cmp
scas
mov
shll
cmp
lea
push
imul
test
dec
and
push
ds
mov
in
and
int3
stos
pop
fsub
push
lret
mov
sub
xchg
or
add
fsubr
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
adc
jle
jns
jle
out
or
sub
push
in
dec
sarl
scas
clc
pop
inc
or
jbe
ret
cltd
mov
xor
pop
enter
push
adc
mov
xor
push
adc
pop
add
mov
inc
ss
repnz
filds
and
test
vunpcklps
and
mov
xlat
or
sub
aas
test
jno
mov
imul
jle
call
sub
mov
sub
addr16
push
mov
ret
mov
sbb
daa
push
add
fmuls
add
and
jge
push
mov
pusha
xchg
adc
fnstcw
idivl
jo
adc
movsl
test
loopne
add
mov
and
jle
jge
mov
jg
xchg
jecxz
loope
inc
inc
mov
js
fdivl
in
stos
fsubl
mov
adc
icebp
dec
popf
mov
dec
scas
scas
in
xchg
adc
push
push
jo
dec
add
fstps
imul
aad
arpl
out
push
push
push
ja
pop
cmpsl
add
lods
in
add
jbe
mov
mov
push
dec
sti
push
cmp
mov
aam
es
pusha
xor
nop
pusha
jecxz
sahf
xchg
clc
cmp
pushf
mov
xor
dec
push
stos
inc
loop
hlt
in
and
xor
test
add
sbbb
add
push
mov
dec
jae
inc
or
fwait
lea
lahf
xchg
movsl
test
xor
inc
lds
push
cmp
movsb
aad
jno
cli
fdivl
or
fsubrl
sbb
pop
cltd
cmp
and
sbb
push
jae
xchg
jmp
push
nop
mov
adc
sub
jb
ret
push
dec
test
push
mov
pop
mov
dec
lret
enter
push
sbb
pusha
mov
lds
mov
stos
lods
fsubrs
add
ljmp
outsl
repnz
jae
imul
cwtl
js
repnz
scas
inc
rclb
xchg
xchg
mov
test
push
std
mov
les
inc
shl
leave
mov
cli
es
push
in
cmp
mov
inc
pushf
outsl
or
add
popa
jg
mov
inc
pop
or
xlat
lret
jae
xlat
inc
in
sahf
mov
jb
push
cli
out
shrl
out
push
fidivrs
data16
or
lret
aaa
xor
pop
js
iret
inc
arpl
inc
push
test
cmp
cmp
std
inc
inc
push
jecxz
into
add
inc
jo
fstps
xor
dec
dec
push
sbb
sbb
out
jg
xor
mov
jecxz
movsl
pop
ja
xchg
call
mov
jb
adc
shrb
push
test
push
call
repnz
stos
out
int
cmp
xor
xchg
fdivrs
sub
inc
daa
fstp
xor
cmp
lahf
mov
dec
inc
jmp
inc
sbb
dec
push
pop
rcrl
in
or
jl
jg
mov
xchg
sti
xchg
inc
and
or
pop
imul
lods
cmp
push
xchg
sbb
out
daa
jbe
sub
adc
out
jno
inc
bswap
adc
sahf
push
jno
inc
sub
cmpsb
dec
cmc
jns
xor
push
ja
fistpl
mov
or
mov
js
fwait
aad
aad
leave
push
in
addr16
pop
cli
inc
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
sbb
dec
or
jle
push
jns
jle
mov
cmp
dec
mov
fstp
sar
scas
test
xchg
mov
sub
pop
enter
shlb
bound
loopne,pt
xchg
xlat
xor
dec
fisttpl
inc
dec
jno
insb
out
push
add
and
in
mov
xor
mov
jns
sbb
sub
dec
dec
xlat
jo
mov
in
ja
fsubl
pop
ljmp
jns
pop
popf
dec
adc
mov
pop
jecxz
xor
les
subb
pushl
stos
or
cmp
stc
mov
lret
in
movsl
or
mov
int
sub
fdivr
std
test
fildll
loope
and
movsb
aaa
in
mov
adc
ficoms
into
stc
mov
mov
int3
incb
sub
jg
jmp
jb
fistl
sub
loop
scas
xor
imul
and
rep
cmp
adc
cltd
dec
mov
cmp
inc
sarl
xor
and
shll
xchg
xchg
mov
mov
push
push
loop
pop
jbe
popa
addr16
add
dec
lock
inc
rol
fs
repnz
add
or
lods
addr16
test
xor
hlt
mov
and
sub
out
push
rorb
movsl
pop
dec
lds
cmpsl
xchg
pop
or
sbb
inc
outsl
lret
mov
sub
push
sti
cwtl
xor
lea
ljmp
call
xor
popf
xchg
push
mov
jecxz
dec
mov
sahf
aaa
mull
scas
lea
nop
sub
mov
sbb
jae
add
adc
fcmovnb
dec
jg
pop
cmc
push
dec
in
pusha
lret
pusha
mov
stc
xor
clc
pop
mov
in
lcall
fsubrs
rolb
or
in
jl
push
inc
repz
test
add
mov
jno
xor
repz
sbb
or
xchg
cmp
push
insl
xor
jecxz
mov
jno
pushf
pop
xor
push
inc
dec
mov
enter
nop
in
movsb
adc
in
dec
jbe
pop
outsl
inc
inc
sbb
aas
insl
repnz
mov
dec
mov
sub
shrl
or
addb
xor
js
es
mov
cmpsl
fs
sbb
cmp
enter
leave
sbb
enter
neg
dec
and
jmp
mov
jmp
fnstsw
cld
pop
pop
sbb
fsubl
sbb
cld
aaa
aam
xor
stos
lods
or
xchg
popa
cmpsl
cmpb
dec
or
xor
mov
outsl
mov
jno
inc
push
pop
cld
cmp
sbb
stos
sti
hlt
fwait
jmp
imull
jg
pop
adc
jmp
scas
add
rorb
fcompl
out
inc
adcb
dec
mov
and
lahf
loopne,pt
push
negb
mov
push
stos
mov
sub
in
aad
xor
jle
push
mov
mov
jge
or
shll
in
and
sbb
pop
movsl
jno
cmc
cmpsb
ret
mov
rcrb
inc
sub
push
out
frstor
pop
shrl
jmp
sbb
outsl
sti
inc
adc
stos
inc
xchg
dec
dec
ljmp
insb
insl
fwait
dec
pop
mov
xor
jb
int3
mov
xor
push
mov
mov
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
insb
add
or
jle
push
jns
jle
bound
xchg
out
mov
insl
js
dec
icebp
cli
out
notb
jbe
mov
ret
rol
xor
mov
pushf
cmp
xor
in
fwait
loop
popf
mov
flds
fisubrs
popa
rcr
mov
xchg
stc
movsl
jbe
addr16
lret
mov
push
xor
jp
mov
jae
ficompl
mov
push
pop
daa
ja
cmpsl
stos
lahf
int3
xor
cmp
stos
pop
stos
jnp
shrb
cltd
dec
loop
sar
xor
fs
xchg
icebp
les
lret
inc
fstps
inc
jp
push
jmp
ror
or
in
popf
incl
cmp
pusha
push
outsb
pusha
dec
mov
xchg
jmp
les
ret
out
cwtl
jmp
and
sbb
sti
add
and
inc
jae
sti
xor
filds
xchg
in
pop
xchg
addr16
cmc
stos
sbb
cltd
stos
sub
pop
mov
mov
dec
and
mov
mov
mov
aaa
fisubl
pop
cld
mov
call
adc
sbbl
add
sahf
push
notl
leave
out
mov
push
pusha
sarb
out
push
sbb
xchg
cmp
or
pop
push
repnz
das
xchg
inc
mov
add
loopne
jmp
adc
pop
fsts
dec
leave
ficomps
fistps
fwait
mov
inc
fistl
dec
jecxz
jle
push
cltd
pop
or
cwtl
pushf
ret
mov
dec
loope
test
sbb
mov
stos
xchg
cmp
dec
outsb
fstps
outsb
cmp
fadds
movsb
daa
adc
push
loope
jae
test
push
xchg
jns
cs
mov
call
mov
push
dec
dec
addr16
je
mov
jbe
fs
sub
jns
push
pop
in
pop
sub
stos
in
pop
mov
jge
fldcw
lcall
push
mov
daa
aaa
and
sub
mov
fisubrs
cmp
fimull
lret
insb
cld
in
cmp
fisubs
or
sub
je
in
das
xchg
push
jmp
mov
jno
into
pop
dec
cmc
or
xchg
mov
jne
cwtl
sub
test
or
push
push
ret
imul
mov
xor
pop
cwtl
dec
xor
push
aas
jp
sbb
fwait
inc
jecxz
push
ja
sbb
pop
loopne
test
adc
mov
sub
mov
pop
push
pop
dec
push
xchg
fcoml
fnstcw
mov
jecxz
outsl
xchg
sti
cmc
bound
lcall
into
arpl
push
adc
pop
adc
jne
cmp
mov
lahf
ss
add
and
jnp
mov
adc
and
sbb
aaa
push
ljmp
aad
sub
dec
pop
xor
icebp
mov
dec
cmp
push
inc
fnstenv
dec
imul
nop
mov
sahf
inc
mov
jg
add
in
inc
lahf
cwtl
pop
mov
pushf
push
push
lret
cmp
jns
shlb
enter
push
movsb
cmp
fisubs
aam
fwait
or
or
push
fwait
add
fidivrs
jge
jp
arpl
adc
sti
test
pop
xlat
mov
fs
jb
leave
negl
bound
mov
pushf
push
jle
mov
pop
ljmp
loop
xchg
les
dec
addl
jno
and
nop
pop
mov
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
push
outsb
cwtl
push
je
and
mov
cmp
xor
out
jno
stc
repnz
add
fisttpll
notl
addr16
jns
push
lods
out
dec
fsubl
ret
mov
mov
mov
jbe
fcom
and
icebp
pop
mov
lahf
pop
push
js
lock
mov
cmp
mov
inc
shlb
arpl
loopne
inc
lcall
shlb
mov
sub
sbb
mov
sub
xchg
and
push
sub
xor
mov
das
popf
mov
addr16
call
jne
fidivrs
xchg
mov
inc
push
rol
push
popa
daa
nop
xor
stos
xor
pusha
arpl
push
test
pushf
cmp
scas
fidivs
push
dec
lock
fisttpll
aad
aaa
xor
and
fistl
ja
inc
sbb
inc
dec
pop
push
fneni(8087
aam
cmp
add
in
outsl
mov
jg
sbb
in
pop
sub
into
jne
jmp
xchg
dec
ljmp
lods
sar
lret
inc
push
sub
jns
test
mov
push
mov
int
xchg
popf
push
mov
push
cmp
cwtl
xchg
daa
cmpsl
jne
sbb
out
pop
xor
mov
inc
mov
clc
arpl
int
xor
jnp
aas
cmp
inc
adc
pushf
das
sub
std
xchg
mov
mov
enter
jecxz
fcoml
cmp
and
fwait
mov
inc
int3
les
in
xchg
aas
dec
iret
jmp
pop
sbb
and
cmp
add
andb
loopne
sub
pop
ljmp
adc
mov
mov
in
cs
sbb
dec
js
jge
mov
mov
popf
mov
nop
cwtl
xor
push
fimuls
mov
adc
es
imul
mov
cmpsl
subb
cmp
ds
sub
mov
fidivs
and
mov
and
mov
mov
adc
cmp
loope
mov
test
insb
or
cmp
mov
jne
cld
mov
out
leave
or
xor
push
inc
sbb
test
sahf
gs
sahf
lods
inc
jmp
jecxz
push
cmpsb
jnp
xor
jmp
jmp
outsb
mov
cmp
out
cmp
test
fsts
stc
push
add
fisubrs
scas
neg
out
lahf
push
xchg
pushl
pop
ja
mov
cmp
adc
sub
pop
fmull
dec
inc
or
fs
loope
or
mov
leave
test
int3
mov
mov
sbb
lds
imul
sbb
xor
mov
sub
loop
insl
cmpsl
loope
dec
in
inc
pop
dec
in
sahf
fmuls
push
xchg
jnp
push
dec
xor
dec
pop
shrb
int
pushf
mov
mov
sub
push
push
ss
repz
leave
pop
cmp
out
rcrl
push
push
mov
dec
mov
pop
xor
hlt
leave
lds
aaa
nop
popa
pop
iret
ds
repnz
push
call
and
mov
lds
and
std
xor
fdivrp
popf
sub
sbb
jns
sub
mov
pop
std
stos
dec
fadd
mov
mov
loopne
pop
adcb
xchg
sbb
or
clc
lods
lock
push
into
fsubrs
in
add
aaa
adc
mov
add
push
xchg
cltd
mov
adc
add
lcall
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
push
sbb
push
jns
jle
mov
aaa
cmc
scas
dec
inc
mov
pop
out
fst
jl
in
insl
inc
xchg
mov
cmp
sub
xor
adc
scas
scas
or
bound
jl
cltd
std
aas
jge
push
xchg
js
sbb
sbb
bound
dec
lcall
xchg
pop
mov
lds
mov
in
and
pop
jmp
pop
xor
push
push
das
inc
mov
mov
out
push
imul
xor
cmpsl
mov
bound
push
sarl
cltd
push
cltd
pop
adc
pop
jp
mov
add
enter
mov
cltd
decl
les
repz
fstpt
push
cmp
cwtl
icebp
push
or
es
out
push
loopne
ss
insb
shr
addr16
push
clc
xchg
jl
fadds
jp
push
stos
icebp
stc
add
sbb
stos
fiadds
movb
or
cmp
lea
rolb
ret
loop
inc
lods
sbb
pop
mov
mov
mov
rcl
scas
or
or
hlt
rcrb
hlt
cmpsb
sbb
inc
and
pop
out
lea
jl
repz
lods
sbb
sbb
jl
mov
cli
and
std
sar
cltd
pop
jge
pusha
inc
cmpsl
test
inc
xor
daa
rcr
jecxz
movsb
dec
cmc
lods
arpl
testb
popf
inc
inc
fsubl
imul
push
and
mov
push
cmp
or
fwait
inc
mov
mov
fadds
aaa
and
xchg
das
jo
mov
inc
pop
xor
dec
movsb
mov
mov
xor
daa
cmpsb
xchg
test
aad
out
enter
imul
mov
je
push
and
lahf
sub
fnstcw
cld
adc
cmpsb
sbb
xor
xchg
aad
add
ret
js
xchg
mov
aam
push
fwait
loop
or
lret
inc
aad
inc
out
dec
sub
lret
test
stos
pop
mov
int
insl
dec
jb
lea
adc
subl
mov
jo
mov
jl
jns
jmp
fadd
mov
jg
jg
aad
xor
mov
cmp
adc
in
jmp
scas
or
imul
lods
cmp
hlt
xchg
cmpl
cltd
mov
repnz
ss
dec
push
push
ret
inc
inc
data16
outsb
push
imul
or
xor
jb
mov
ficompl
and
mov
test
push
mov
mov
push
cmp
xor
lock
divb
xchg
movl
nop
js
dec
dec
jge
xlat
bound
lcall
lea
push
ljmp
out
jns
icebp
mov
push
jmp
sbb
push
push
xchg
fstps
or
fsub
jns
push
mov
scas
mov
inc
in
idivl
mov
lahf
sti
or
sbb
jmp
inc
xchg
inc
outsl
nop
dec
cmp
mov
adc
scas
push
sbb
and
mov
out
adcb
stos
fwait
sbb
xchg
sahf
lods
shlb
cmpsl
lcall
fidivl
mov
stc
outsb
jno
sub
ss
jg
arpl
sub
negb
xor
xchg
ret
jbe
dec
mov
sti
mov
pushf
mov
out
sub
mov
mov
lret
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
movsl
pop
in
shr
daa
jle
push
jns
jle
test
xor
mov
bound
in
push
rcll
andl
push
xor
popf
lods
popf
dec
movsl
or
pop
mov
add
out
les
scas
pop
pop
inc
popa
shlb
mov
mov
cmp
mov
push
ror
jg
pop
data16
mov
aad
push
addr16
imul
lock
movsb
mov
mov
mov
push
pop
adc
out
mov
adc
scas
dec
xor
inc
fisubl
xchg
imul
and
jle
lret
jo
cli
jge
push
rorl
cmc
out
xor
cmpb
das
jecxz
movsl
stc
cvttps2pi
outsb
adc
sbb
mov
lock
xor
mov
mov
test
cli
mov
jl
andb
xor
rcll
xchg
inc
data16
cmp
and
cmp
mov
sti
push
les
rcrb
in
das
mov
mov
push
pop
mov
mov
mov
ds
addr16
mov
ljmp
mov
movsb
add
mov
fs
pushf
jo
add
mov
push
jmp
jb
in
mov
inc
inc
xchg
in
push
or
mov
mov
stc
nop
pop
lcall
add
cwtd
pop
inc
mov
push
pop
cmp
aas
fld
inc
fldenv
inc
les
cmp
push
in
pop
cmp
in
loop
push
cmpsb
sahf
jbe
adc
jno
cwtl
pop
inc
nop
out
scas
jo
imul
jbe
dec
pushf
pusha
mov
mov
mov
push
push
inc
mulb
sbb
outsl
sbb
fbld
rcll
test
hlt
inc
mov
repz
mov
mov
loopne
push
mov
sar
jmp
push
pop
xchg
mov
sub
mov
cltd
aad
or
pop
mov
js
adc
jle
cli
je
or
pop
outsl
mov
jns
sbb
fsubrl
push
loop
mov
adc
pop
cmp
cmp
xchg
fldl
cmp
pop
fnop
sub
dec
sbb
mov
mov
mov
cwtl
aad
rcl
dec
jns
in
fldt
adc
inc
jle
fistpl
xlat
in
rcr
idivl
lret
out
cmpsl
or
mov
adc
mov
pushf
bound
mov
and
outsb
pop
shll
mov
pop
mov
and
add
leave
xorb
into
add
mov
mov
aam
inc
sub
sub
into
lcall
xor
sbb
sbb
std
pop
jmp
jg
xchg
lea
xchg
push
int3
pop
sahf
cmp
jle
sub
jl
jae
stc
out
mov
sub
in
addr16
repz
pop
dec
shll
mov
lock
dec
mov
icebp
call
sti
add
xchg
dec
mov
js
or
mov
xchg
add
push
je
inc
cmpsb
inc
dec
mov
lret
cli
push
gs
out
push
inc
push
aaa
cmpsl
xlat
pop
stc
fnstsw
icebp
sub
lods
ja
movsl
fcoms
bswap
sub
adc
lods
mov
int3
test
sub
jo
inc
add
and
pushl
jne
frstor
xchg
pop
call
roll
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
lahf
ljmp
push
jns
jle
fiadds
dec
test
pop
enter
inc
jmp
add
imul
out
subl
jmp
xor
inc
mov
outsl
mov
pop
xor
fistpl
outsl
mov
enter
call
out
cmpsl
cmp
inc
mov
lret
push
out
push
out
rcll
or
sbb
lods
out
sub
aam
in
inc
shll
out
pop
je
popf
imul
mov
and
stc
inc
ffree
in
iret
insl
mov
aaa
xchg
pusha
mov
dec
fwait
adcb
sub
clc
insb
mov
add
movsl
fsubrs
adc
mov
fmull
fsubrp
enter
add
mov
mov
mov
sbb
insb
lcall
test
or
push
cwtl
mov
xlat
add
repnz
sbb
mov
push
leave
pushf
inc
mov
xlat
jo
outsl
xchg
mov
jge
in
push
and
in
cld
cmp
js
movsl
aas
jnp
pushf
dec
je
add
enter
js
sbb
fstps
push
cld
and
das
inc
sbb
nop
mov
sbb
in
into
hlt
in
outsb
xchg
jns
sti
pop
push
mov
jle
mov
fnstenv
sarb
or
mov
or
push
shlb
pop
mov
xor
lret
insb
out
fnstsw
unpckhps
cmp
add
test
das
mov
pusha
push
and
xchg
loop
pop
stc
mov
mov
clc
je
movsb
test
idivb
outsl
jnp
shll
mov
clc
daa
aas
cwtl
fs
insb
fwait
mov
stos
cmpsl
lock
icebp
pop
mov
out
adc
add
icebp
add
pop
mov
sub
mov
test
adc
mov
pop
pop
popa
sbb
inc
cli
cmp
dec
cmp
clc
cmp
leave
jmp
and
fwait
inc
test
cltd
stos
lock
jp
scas
sub
mov
cmp
fs
adc
out
and
mov
cltd
dec
mov
pop
ds
stos
xchg
movsl
add
imul
and
push
xchg
in
jp
jb
movsl
icebp
cmp
pushf
adc
jo
orl
adc
xchg
in
xor
jo
fiaddl
test
je
test
imul
push
cvtps2pi
mov
jecxz
xor
pushf
jno
mov
das
push
xchg
xchg
xor
ficoml
rclb
jl
nop
push
dec
pop
stc
jmp
imul
jecxz
leave
mov
movsb
imul
xor
add
scas
daa
insb
mov
cmc
cmp
ret
insl
pop
push
xchg
dec
pusha
cmp
cmp
cmp
insl
mov
dec
push
les
int
in
mov
fdivs
xchg
mov
and
xchg
add
fsubrs
push
and
cmp
lahf
pop
test
lods
aaa
mov
push
fisubl
push
push
dec
in
jo
and
mov
pop
jo
mov
ffreep
aas
and
sub
ss
sub
sbb
movsb
add
adcl
mov
idivb
sub
and
jnp
xchg
cmp
lcall
clc
push
mov
push
out
lds
push
xchg
aam
and
xchg
jne
xchg
iret
cmpsl
mov
shrb
dec
loope
adc
pop
es
push
dec
mov
push
push
ret
clc
or
pop
pop
mov
dec
subb
in
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
sbb
jle
pop
jg
jle
popf
mov
mov
lret
cli
call
jmp
call
arpl
inc
or
dec
mov
lret
loopne
aaa
or
ret
pop
sub
and
in
stc
jne
mov
sbb
dec
lcall
das
std
sub
das
sti
sbb
xchg
push
inc
adc
arpl
dec
int3
jmp
xchg
stc
sbb
inc
test
ficoml
jne
fst
and
push
pop
cmp
fimull
mov
stc
stos
push
inc
ss
xchg
dec
lock
dec
les
pop
cmp
nop
pop
sub
sbb
xor
repz
mov
into
cwtl
cmp
ret
sbb
mov
lock
fwait
push
jnp
pop
clc
dec
std
mov
decl
adc
mov
pop
cmpsb
add
shll
xchg
sub
imul
notl
mov
sahf
add
leave
sahf
clc
and
inc
or
pop
aas
outsb
stos
arpl
xor
movsl
cmp
ret
jl
in
cld
inc
cmp
aad
or
in
dec
or
fs
stos
push
fldenv
aam
adc
shll
add
sarb
in
mov
jo
insb
fidivrs
sub
add
or
or
mov
sahf
inc
test
inc
and
jb
outsb
mov
insl
andb
add
mov
test
mov
dec
movsl
adc
idivb
shlb
dec
mov
pop
add
and
mov
leave
push
sbb
cmp
push
pop
or
pop
inc
cwtl
mov
in
jecxz
fs
ljmp
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
push
mov
pop
jg
jle
pop
jecxz
jge
pushf
pop
in
xchg
xchg
js
jecxz
sbb
cmp
jns
movsb
ret
data16
fisttpl
iret
lods
in
pop
xor
test
sarl
adc
insl
shll
adc
in
and
pop
add
fwait
cli
jle
subl
jmp
adc
xlat
repnz
pop
jg
or
mov
rolb
xchg
sbb
out
cmp
add
jne
push
fldt
js
cld
in
sub
mov
xor
adc
cmp
lds
int
mov
cmp
popf
xchg
jge
call
xchg
repnz
fldt
inc
xor
jl
cltd
pop
xlat
push
sbb
shll
mov
mov
out
test
inc
mov
inc
add
std
call
stos
popa
aaa
sarb
ss
sub
or
int3
lea
cmp
in
leave
sub
fucom
sahf
das
sub
cmc
cmpsb
testb
iret
xor
aaa
jecxz
inc
out
dec
or
push
xchg
fsub
jg
fistpl
popf
jecxz
xchg
add
mov
btc
pop
js
or
jnp
insb
mov
movsb
xchg
sbb
test
lret
negb
push
push
in
push
repnz
lock
fst
ret
jl
jmp
sub
and
dec
std
inc
cmp
jne
pop
out
out
mov
or
das
cs
scas
mov
sbb
jae
add
fcoms
mov
xchg
cwtl
pop
enter
cltd
push
pop
add
inc
in
leave
int
inc
imul
sub
push
outsb
mov
mov
jae
inc
rorl
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
cvtdq2ps
jle
les
jle
adc
cli
frstor
add
xor
jns
insl
lret
mov
inc
test
sbbl
sub
fsubrs
stos
sbb
cmp
xor
xor
cli
add
dec
movsl
pushf
mov
or
xchg
fwait
cmp
xchg
add
mov
sbb
pop
movsl
jp
nop
add
sub
int3
push
mov
js
xor
incb
push
xorl
shrb
loopne
insb
mov
jl
cltd
movzbl
in
pop
jp
aad
test
lahf
cltd
inc
aam
xchg
jmp
rol
ljmp
pop
push
aad
jnp,pn
clc
addb
push
out
xor
test
and
mov
dec
adc
pop
scas
or
xor
pop
dec
mov
shll
add
imul
ds
test
sti
pop
and
and
out
push
pop
imul
out
or
out
xchg
adc
mov
inc
enter
xchg
xlat
in
daa
jge
cmp
pop
scas
addr16
ja
not
push
sahf
iret
sbb
or
mov
fcoml
call
dec
flds
cmp
mov
jae
add
test
jo
dec
jmp
nop
sub
popa
in
stc
in
clc
sbb
adc
dec
push
pop
pop
popa
int3
mov
xor
rclb
cmpsl
rolb
jg
inc
out
mov
lcall
mov
mov
mov
jb
xor
jnp
adc
rcrl
dec
sub
push
in
add
aam
inc
loope
xor
mov
xchg
xchg
std
xchg
test
repz
dec
imul
out
insl
clc
dec
cld
ds
fwait
scas
fbld
es
adc
jae
cmpsb
lret
add
cmove
pop
lret
add
sahf
cmc
push
push
sbb
movb
or
sbb
aad
pop
std
fmull
int
setb
pop
lods
or
xorb
scas
or
adc
mov
inc
in
add
shr
jp
sub
insb
roll
push
das
fisubrl
mov
pop
orb
push
ds
lock
jnp
xchg
push
and
jp
dec
stc
adc
outsb
lahf
ret
scas
mov
fsubrl
shlb
mov
insb
mov
mov
pop
push
cltd
in
and
mov
mov
push
pop
mov
lret
xchg
pop
inc
ljmp
pop
into
insl
xchg
stos
data16
jecxz
dec
or
in
mov
push
push
inc
jbe
test
aaa
dec
add
lds
cmp
iret
sbb
xchg
test
jo
mov
mov
sub
call
mov
cltd
pop
xor
cmc
inc
arpl
pop
cwtl
mov
jmp
aam
fmull
daa
mov
lcall
and
rol
stos
cmpsl
mov
mov
shll
mov
push
or
push
xchg
jbe
or
pop
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
jmp
jle
jns
jle
sarl
inc
jae
mov
repnz
push
imul
cwtl
ds
jl
sub
ss
adc
js
int
int
cmc
cmp
cld
mov
pop
jge
sub
loope
insl
ficompl
jne
jo
loop
mov
pusha
in
sti
mov
mov
imul
test
paddq
test
push
fld
std
ds
loop
mov
jae
xchg
sub
mov
testb
or
pop
lods
cmp
loopne
and
in
enter
xchg
mov
movsl
gs
xchg
data16
cli
repnz
pushf
dec
stos
les
jmp
aam
incb
add
pushw
sub
imull
add
in
insb
adc
jb
pop
jmp
or
sahf
ljmp
sbb
push
das
jns
arpl
int3
int3
ret
sbb
push
fbstp
adc
or
fisttpl
sub
push
outsl
aad
stc
sub
cwtl
and
test
lahf
jge
mov
stc
and
and
mov
les
pushf
inc
pop
adc
fsubrs
push
sbb
aad
inc
or
push
push
push
adc
insl
cwtl
jle
outsl
jnp
je
mov
addl
sub
scas
icebp
repnz
jb
jl
in
mov
xor
in
fsts
int3
mov
cmp
test
outsl
movsb
sub
sbb
test
mov
in
jnp
cli
setno
data16
sbb
sbb
jae
xor
pop
aas
jge
aas
jns
or
adc
push
cmp
in
jle
mov
push
mov
xchg
shl
fstl
sbb
xor
test
dec
movsl
addl
pop
js
push
xchg
outsl
push
inc
push
es
xchg
rorb
lahf
sarl
call
das
popa
fistpll
sbb
bnd
or
sub
cld
inc
pop
in
popf
mov
push
pop
adc
cli
cmpsb
add
ja
cmpb
mov
shrb
pop
out
dec
bnd
arpl
orl
out
adc
stos
jae
lods
lods
add
ror
push
rorl
jo
daa
cmpsb
adc
or
jno
mov
cmp
or
push
das
sub
clc
cmpsb
jle
jmp
xor
loope
std
push
insl
movsb
imul
mov
sub
mov
fldenv
cmp
jo
stos
das
fwait
in
add
jle
mov
and
in
imul
rorl
pop
addr16
gs
lods
rorl
scas
jmp
cli
insl
pop
xchg
out
out
mov
mov
mov
inc
in
or
rolb
adc
mov
call
insb
sbb
cmpsl
out
or
add
add
sub
insb
add
mov
dec
mov
insl
inc
in
pop
inc
mov
lret
xor
adc
test
loope
pusha
clc
in
movl
movl
jmp
mov
pop
arpl
fucomip
clc
pop
out
xor
les
jle
mov
xchg
arpl
adc
stc
push
clc
bound
cmp
dec
ret
pop
xlat
mov
loope
xchg
fbstp
subl
cltd
cwtl
fcom
aaa
out
xchg
mov
mov
and
fsts
ljmp
dec
mov
scas
clc
mov
pusha
js
or
jl
pop
pop
push
jns
rcrl
jp
cwtl
or
loopne
jne
adc
inc
repnz
fcom
xchg
adc
cmp
xor
mov
scas
testb
aas
or
mov
xchg
mov
pop
jp
ljmp
negb
mov
add
aaa
int
ljmp
xchg
inc
mov
push
mov
out
cmp
insb
sub
test
jbe
int3
cwtl
aam
dec
icebp
subb
xor
ret
cmp
bound
pushf
inc
and
rorb
xchg
repnz
movsb
dec
adc
xor
jnp
mov
push
ja
mov
aam
das
dec
imul
and
ret
stc
fwait
push
in
fldenv
mov
add
sub
popf
inc
add
pop
cmc
fs
out
js
ljmp
push
out
sub
fstps
leave
mov
stos
imull
inc
test
pop
sbb
dec
jo
test
aaa
xor
pop
xchg
and
mov
lods
inc
popf
movsl
xor
lea
fdiv
test
mov
push
add
out
std
shll
out
jmp
sti
fs
jb
nop
data16
mov
sub
fadd
mov
pop
inc
sbb
mov
pop
dec
rep
xor
incl
xlat
mov
dec
push
add
hlt
sbb
int
jmp
je
sti
mov
cmp
xor
push
movsl
inc
in
sbb
xor
dec
inc
add
sub
sahf
xchg
push
cmp
or
into
cmpsl
stc
mov
stos
jb
outsl
adc
jmp
xchg
stos
sti
push
subl
pusha
jb
jp
xchg
inc
sbb
in
push
or
data16
call
je
cmp
sbb
leave
dec
rcrl
cmp
push
popl
xchg
or
stos
xchg
xchg
push
xor
inc
push
repnz
xor
jl
xor
pop
xor
pop
push
ja
mov
loopne
mov
cmp
push
xor
mov
or
xchg
mov
loop
push
aam
xor
cmp
pop
pushf
stc
inc
imul
lret
dec
inc
adc
mov
stc
mov
jb
and
lahf
sbb
mov
into
rorb
jbe
aam
test
sbbl
inc
fcom
push
adc
push
aad
fsubr
jl
dec
xchg
pusha
cwtl
cltd
sbb
das
jbe
into
sub
arpl
pusha
mov
xor
pop
ss
sarl
jbe
lahf
out
in
call
jo
loopne
sub
movsl
xchg
mov
or
xchg
push
lcall
call
in
and
enter
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
sub
mov
jle
les
jle
outsb
repz
pop
popl
jbe
xor
enter
test
xchg
xorb
dec
jge
movsl
idivb
mov
mov
subb
push
in
ds
popa
mov
push
incb
out
cs
sub
adc
mov
fcmovbe
pop
dec
mov
out
frstor
add
lea
push
aas
mov
add
repnz
sbb
movsl
pop
pop
xor
jnp
cmpsb
outsl
sahf
pop
lods
inc
iret
sub
or
lock
xor
or
fwait
movsl
call
add
pop
adcb
adc
in
jo
scas
cmp
adc
js
mov
or
loop
dec
nop
and
mov
and
lds
push
inc
push
sbb
push
mov
pop
mov
popf
xchg
jne
fs
mov
jmp
jmp
inc
push
aaa
pusha
mov
jl
and
in
sarb
mov
xor
into
xor
pop
mov
mov
iret
adc
mov
movsl
fnstsw
cmp
add
mov
mov
in
pop
jb
fmull
mov
xchg
mov
cmpsl
and
sbb
leave
outsb
aam
xchg
daa
fs
sbb
inc
jmp
clc
xor
fldenv
mov
fcompl
mov
cmp
stos
adc
mov
fldenv
xchg
xor
adc
add
adc
int3
movsl
arpl
test
jl
and
xchg
js
mov
gs
add
scas
or
xor
and
or
clc
push
push
sub
cli
fidivrs
nop
inc
jmp
inc
mov
lods
subl
push
sti
mov
push
xor
bound
or
ja
dec
or
push
pop
cmp
fisubrl
or
mov
inc
imul
int3
call
testl
repz
jp
ret
je
mov
xor
lret
push
cmp
pushl
or
pusha
pop
dec
or
jns
outsb
data16
pop
clc
pop
pop
scas
nop
jecxz
xor
imul
dec
push
insl
stos
sbb
cli
adc
cltd
push
leave
lock
pop
int3
ret
js
push
nop
push
lcall
clc
sbb
imul
push
xchg
scas
push
jno
lods
pop
sahf
movsb
movsl
popf
add
stc
fwait
add
adc
pop
std
aam
ret
or
mov
out
imul
das
jp
mov
inc
cvtdq2ps
roll
mov
or
mov
jno
lcall
test
mov
sub
sub
push
xchg
movsb
sub
xchg
aas
cs
mov
leave
jae
insl
xchg
test
mov
or
jo
pop
push
xchg
jecxz
xchg
mov
add
ret
aas
js
lea
mov
loopne
mov
xchg
into
and
gs
jbe
push
adc
push
aaa
jecxz
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
jge
dec
dec
jae
jle
dec
jns
jle
cmp
and
rcl
xor
dec
dec
in
ljmp
inc
xor
fs
std
add
xchg
jmp
mov
je
outsl
mov
orl
pop
xor
mov
jnp
adc
xor
pushf
sti
xchg
fildll
adc
push
divl
orl
sub
or
dec
lahf
mov
js
fwait
sub
sub
sub
xor
aas
xchg
jnp
inc
xor
and
mov
cld
or
adc
xlat
loope
scas
pop
mov
fwait
mov
inc
adcl
adc
push
loope
sahf
and
aam
sub
add
sub
cmp
xchg
jb
push
cmp
sub
mov
xor
mov
dec
and
cmp
daa
cmp
inc
push
stos
out
pop
dec
in
into
mov
sti
jmp
insl
and
mov
into
xlat
inc
add
mov
mov
mov
xchg
call
mov
bound
jecxz
and
adc
fs
imul
loop
mov
test
and
jl
jne
lcall
cmp
pop
add
jl
add
out
mov
pop
inc
movq
jae
xchg
in
and
push
mov
imul
test
cltd
cs
in
mov
jmp
push
mov
dec
aad
xchg
sub
pusha
push
push
pop
lock
test
mov
mov
loope
dec
std
outsl
rcrb
mov
add
inc
subb
or
jno
int
popf
call
movsb
test
push
ret
out
subl
mov
xor
pop
rcr
jmp
cmp
aad
stos
xchg
mov
pushf
je
insl
stos
mov
sahf
adc
dec
mov
nop
add
adc
sbb
sbb
negb
xor
mov
ret
ret
ljmp
pop
adc
iret
movsb
jecxz
loop
jecxz
pop
jle
push
shlb
or
outsl
xorb
out
ret
cmp
push
test
out
or
and
popf
push
inc
mov
cs
jns
inc
test
hlt
or
fistl
insl
dec
cmc
dec
cltd
adc
pop
popf
mov
jmp
mov
roll
lods
negb
mov
inc
cmpb
jl
mov
mov
pop
movl
mov
and
xchg
mov
imul
jg
mov
ret
cs
test
cmp
testb
sbb
xchg
loopne
xchg
and
stos
mov
insb
daa
sub
mov
pop
les
mov
jns
push
loop
cmp
je
mov
xchg
repnz
mov
lcall
dec
popa
add
add
mov
fwait
push
inc
and
push
out
or
mov
push
or
clc
ds
test
xchg
adc
push
jge
ret
xor
push
inc
add
iret
shl
clc
dec
adc
inc
adc
dec
pop
mov
push
fwait
or
je
mov
mov
pop
push
leave
sub
loope
dec
pop
cmp
pop
xchg
xchg
fists
sbb
sahf
icebp
push
adc
pop
pop
imul
inc
fmull
mov
cmp
add
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
iret
and
push
dec
cmp
dec
jns
jle
sub
loope
add
and
movsb
lret
pop
xor
out
or
inc
or
int3
arpl
iret
adc
push
lret
and
lret
lret
cmp
add
test
or
fsts
testb
sbb
outsb
cmpsb
scas
cmc
or
sub
rclb
xchg
xchg
push
movsl
shlb
mov
fwait
inc
xchg
add
dec
pop
and
les
cli
add
dec
scas
mov
mulb
and
jno
out
stos
sahf
into
nop
cmp
pop
mov
xor
and
or
push
imul
in
cs
jle
mov
sti
push
rcll
xor
sub
jge
les
xor
pop
xor
call
and
icebp
jno
and
inc
dec
or
rcll
jp
xchg
out
xor
add
sub
inc
lret
dec
lahf
mov
and
lds
loopne
lods
cli
push
jo
mov
and
dec
xor
pop
or
out
das
pop
js
lcall
adc
das
cli
xchg
fstpl
jne
mov
pop
cmpsl
push
push
jecxz
xor
lcall
sbb
stc
xor
fxam
pop
test
movhps
ds
jbe
into
and
test
sub
dec
mov
into
fldcw
cmp
adc
inc
rol
js
insb
push
cmp
stos
push
aas
push
subb
pop
jecxz
push
aad
inc
sub
add
adc
pop
fadds
and
pushf
push
xor
sbb
push
mov
add
test
pop
fists
and
scas
test
cli
or
adc
jae
pusha
sbb
insb
and
cmp
push
iret
cmp
fnstsw
adc
adc
push
lods
mov
xor
push
mov
add
adc
mov
mov
add
mov
mov
or
rorl
sub
push
inc
roll
pop
pushf
aam
add
ret
repnz
push
push
loop
add
xchg
out
dec
lea
cli
push
out
pop
inc
sub
xchg
bound
aam
pop
testl
add
inc
subl
lret
aaa
test
nop
aas
loopne
loop
pop
lods
xor
or
lock
mov
mov
jmp
repz
ds
jne
enter
or
mov
fisttpll
push
jne
dec
dec
add
add
jecxz
xchg
xchg
fcoms
inc
xchg
out
inc
mov
mov
repnz
cwtl
bound
test
arpl
jns
outsb
mov
test
add
cmpsl
imul
and
stc
rcrl
or
shl
popf
dec
cli
cmc
and
add
popa
sar
mov
int
pop
sbb
jl
pop
clc
repnz
daa
jnp
fwait
xchg
je
das
jp
dec
xchg
sub
pop
and
scas
rcll
das
and
mov
xchg
ret
jl
xlat
mov
aam
sarb
add
mov
push
pop
adc
cwtl
lahf
lahf
add
gs
pusha
iret
inc
mov
mov
sbb
xor
inc
mov
das
rcrb
std
insb
sbb
mov
pop
mul
cmp
test
inc
pop
test
out
jo
push
mov
mov
movsl
push
cmp
sbb
or
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
xor
dec
jns
jle
std
xchg
lret
jmp
push
jp
repnz
movb
stc
je
repz
mov
push
test
and
mov
pop
outsb
xor
mov
inc
ljmp
aas
fcmovne
add
mov
stc
ret
xor
pop
dec
test
pop
dec
dec
cwtl
xor
fisttps
scas
shl
jnp
or
movsl
jge
fnstsw
mov
ficomps
lods
sub
ret
pop
outsb
ret
inc
jge
add
lret
pop
adc
push
loope
shlb
pop
rorb
rcll
or
xchg
adc
js
jb
fstps
dec
dec
and
rcll
pusha
ss
fwait
testl
xchg
fs
jecxz
test
sahf
pop
push
adc
add
stc
pop
and
jbe
xlat
repnz
mov
cmp
or
mov
mov
nop
jp
inc
cmp
les
sbb
jp
dec
jp
out
sub
push
int3
jo
push
pop
int3
mov
push
jnp
cmp
jb
jmp
das
fs
fsubs
mov
jae
popa
shr
sti
sti
sub
hlt
mul
jge
or
xchg
dec
mov
sub
popa
pop
sar
jl
fcom
pop
xor
stos
ficompl
dec
dec
mov
in
push
outsb
inc
in
adc
decb
bound
lret
inc
xchg
push
dec
and
add
and
fistps
shr
jecxz
es
push
cmpsb
jnp
pop
add
push
repz
adc
ja
lahf
sbb
lcall
lcall
jle
test
push
leave
test
ds
in
cmp
ljmp
push
jle
dec
jbe
fcmove
mov
pop
xchg
cmpsl
and
dec
mov
loop
stos
repnz
adc
mov
and
sbb
test
push
daa
filds
xchg
jl
loopne
gs
dec
xchg
rorb
inc
mov
cmc
ljmp
ret
push
cmp
jg
insb
fistpl
add
out
sub
jno
popa
cmp
fdiv
outsl
xor
les
jmp
adc
mov
test
rolb
cld
sbb
cmc
or
rclb
mov
dec
and
and
sbb
xchg
sbb
cs
inc
add
aas
in
add
outsb
sub
pushf
inc
and
push
mov
jbe
inc
sbb
inc
dec
mov
xlat
pop
mov
int
out
push
sbb
sbb
inc
in
sti
jbe
jg
xor
and
xlat
pusha
mov
adc
pushf
or
mov
inc
dec
xchg
outsl
xor
push
cld
jae
sub
arpl
sbb
les
cmp
cmp
xor
jbe
data16
mov
jne
repz
push
das
scas
aam
mov
or
pop
je
dec
ja
inc
je
and
mov
incb
mov
sbb
filds
cwtl
inc
push
cmpl
fcoms
aas
stos
bound
cmpsb
and
xchg
pop
pop
adc
xchg
popf
ss
lahf
cmp
aad
adc
dec
loopne
mov
inc
inc
lahf
cmp
ficoms
add
or
dec
test
pop
inc
xchg
mov
mov
pop
in
pop
sub
jns
inc
inc
sub
push
jo
add
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
out
xchg
jnp
adc
mov
dec
out
pop
lret
and
and
decb
mov
scas
xchg
jb
loope
push
adc
jmp
lcall
lcall
pop
sbb
adc
push
dec
rolb
mov
jecxz
out
mov
gs
rcrl
push
mov
fmul
mov
rcll
jnp
push
mov
fnsave
in
in
repnz
jo
fdivrl
dec
lahf
sbb
aam
ljmp
sbb
mov
mov
mov
sbb
xor
push
and
push
hlt
hlt
dec
jl
push
cmp
sub
xchg
add
pop
pushf
add
leave
test
sbb
push
pop
adc
pop
add
pop
in
cmpb
sbb
pop
mov
inc
lds
cmp
shll
sti
pushf
push
and
inc
or
pop
add
cltd
jecxz
fdivrs
dec
clc
and
ss
lret
and
pop
lods
sbb
pushf
mov
mul
lds
pop
push
hlt
lret
rcl
test
fs
daa
sbb
cmp
int
mov
jge
jle
sub
into
lea
jb
in
mov
bnd
mov
lret
in
push
xchg
jp
lret
hlt
push
push
cs
data16
fildl
cmc
push
call
rcr
sarl
or
sub
cmp
add
and
scas
add
pop
and
add
ds
call
adc
add
sub
push
orb
mov
imul
push
call
mov
inc
imul
lahf
clc
movsb
movsb
fldcw
cltd
rorl
fstps
ja
inc
cmp
or
jle
ror
ss
bound
mov
popf
stos
or
push
test
pop
lret
imul
push
sarl
jmp
add
push
rcrb
or
lock
mov
aad
repnz
sub
pushf
cmp
sbb
jns
int
xchg
fimull
lret
pop
das
test
mov
pop
in
mov
scas
push
push
inc
pop
pop
ds
pop
or
inc
xchg
jae
push
lcall
mov
aas
xor
cld
push
lret
shl
movsl
and
mov
cs
xchg
cmp
ret
imul
out
mul
fs
cld
pop
mov
push
pop
out
bound
stos
and
std
jge
cmpsb
leave
pop
or
int
xchg
sub
mov
inc
jae
icebp
adc
fwait
cld
int
adc
std
jge
pop
jle
jns
xchg
scas
cmpsb
cmp
popf
filds
push
cs
sti
aas
jg
add
mov
xor
aaa
add
lret
imul
cs
sbb
dec
popa
cmp
sub
jg
jle
test
inc
rol
enter
in
push
jo
sbb
jns
pop
clc
adc
and
pop
aas
xchg
inc
repnz
and
and
sub
adc
mov
xchg
push
out
mov
jle
repnz
sarb
mov
adc
movsb
push
xlat
insl
jg
mov
cli
or
mov
lcall
pop
push
push
aam
pop
movsb
hlt
or
jae
ds
movsl
jno
or
aas
aad
test
mov
dec
mov
mov
rorb
mov
inc
movl
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
fsubrl
iret
jle
dec
jns
jle
lret
mov
xor
mov
fnsave
repnz
pop
sahf
push
test
stc
pop
or
aas
stos
and
dec
icebp
mov
cmpsb
orb
cwtl
xorb
subb
xchg
add
jb
call
cwtl
and
cli
sub
add
xor
jnp
repz
movsl
in
adc
fildll
sbb
xor
out
lcall
jo
pop
jl
les
add
push
loope
ljmp
pop
and
lods
lea
mov
push
aaa
ss
fsts
dec
sbb
or
cli
jbe
xor
test
mov
xchg
daa
scas
jmp
sub
adc
mov
fisubrl
in
lock
ss
add
in
pop
test
movsb
test
iret
xchg
jle
adc
fs
and
hlt
and
jnp
sbb
and
lods
or
jecxz
mov
xchg
scas
stc
xchg
mov
enter
fnstcw
lret
mov
int
and
jne
in
jae
cli
pop
ljmp
lock
dec
sbb
jg
std
movsl
dec
in
and
faddl
cmp
adc
adc
iret
mov
jle
dec
cmp
movsb
jb
hlt
cmpsl
nop
jp
pop
mov
jp
jp
clc
sbb
loope
sbb
aad
insb
inc
aaa
movsb
sbb
cmp
push
mov
fists
or
lahf
sbb
cmpsb
mov
xor
sbb
sub
dec
mov
popa
scas
aad
cmp
or
shlb
xchg
outsl
adc
cwtl
je
jecxz
sti
xor
xorb
rcrl
loop
sbb
dec
cmp
jns
inc
test
inc
xor
push
jecxz
mov
jo
cmp
out
sti
mov
cmp
mov
iret
cltd
jp
enter
and
adc
jb
mov
test
xor
fwait
cmp
mov
xchg
push
aad
or
push
cmpsl
jae
outsl
fiaddl
jns
and
dec
xchg
pop
mov
jb
rcll
jge
xor
pop
and
add
scas
outsb
inc
cwtl
pop
add
insl
aas
sub
outsb
lock
pop
mov
mov
add
cmpsb
cmc
xchg
sub
adc
dec
cmpsl
lahf
dec
cmp
ret
movsb
negb
inc
push
or
jne,pt
xchg
and
loope
pop
sahf
rorl
fnclex
pusha
ss
pop
ds
out
mov
xchg
mov
mov
mov
cmp
das
adc
xor
out
bound
ret
pop
cltd
arpl
lret
out
imul
adc
jl
cmp
cs
push
inc
ficoms
das
test
mov
xor
xor
into
scas
mov
xlat
jbe
jle
cmp
xor
sti
add
dec
bound
sahf
je
mov
pop
pop
push
push
inc
push
push
sahf
cs
repz
outsb
out
sbb
jbe
dec
in
push
ds
sbb
add
mov
cld
das
fs
and
sbb
pop
mov
addr16
mov
push
shlb
andl
push
aad
scas
xor
dec
stos
loop
ud0
into
inc
ss
cltd
pop
xor
mov
mov
mov
repz
add
pop
or
pusha
xor
pop
les
stos
jge
dec
out
and
imul
fbstp
push
out
out
dec
sar
adc
mov
mov
add
call
mov
test
add
add
sahf
sbb
add
in
decl
call
das
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
adc
sahf
lcall
mov
push
xlat
cmp
mov
jge
inc
ret
test
jmp
ficomps
cmp
aaa
mull
in
xchg
js
inc
lret
stos
fildll
dec
outsl
cmc
or
jno
mov
lods
mov
xchg
imul
arpl
sbb
shll
push
cmp
lahf
mov
xchg
lret
xchg
pop
bound
aad
sub
or
push
cmp
cmp
mov
dec
repnz
mov
add
inc
rclb
imul
insl
hlt
fdivr
pop
sub
sub
xchg
sbb
fcomps
inc
xor
mov
xchg
sub
mov
mov
adc
pop
out
sbb
movl
xchg
movsl
dec
sub
cmpsl
sub
cld
ja
push
sub
shlb
sub
or
cmp
sub
jmp
in
fisttpll
xchg
and
mov
jge
push
loop
gs
aam
data16
lds
ss
mov
sub
dec
lds
dec
int3
ss
sub
ja
cmp
dec
mov
aaa
lea
adcl
loop
fnstenv
push
xchg
inc
cmp
add
arpl
outsl
dec
enter
inc
mov
or
pop
aaa
out
sub
add
div
push
jle
or
fwait
aad
inc
inc
mov
jmp
lock
jae
xor
dec
cmp
movsb
inc
rolb
jbe
dec
sub
inc
fidivrl
mov
pop
mov
int
out
aam
mov
sahf
xchg
aas
xor
cvttps2pi
into
test
sub
movsl
pop
mov
int3
cmp
rorb
pop
jmp
pop
dec
pop
fistps
mov
in
sbbl
test
add
xlat
mov
mov
push
jbe
pop
adc
mov
xor
sahf
lock
data16
mov
addr16
sub
mov
lock
sbb
jns
jnp
cld
cmp
dec
adc
cmp
cmp
dec
or
andl
push
pop
orb
xlat
pop
lret
in
ret
push
outsb
test
cmp
pop
pop
xchg
xor
and
cmp
push
data16
fs
xchg
rorl
xchg
cmp
jecxz
imul
out
cwtl
mov
mov
xchg
pop
jle
dec
mov
or
push
pushf
mov
in
sub
jnp
mov
imul
xor
cmpsb
pushf
sbb
cli
pop
jle
jne
push
ja
fdivs
or
adcb
fstp
fcom
inc
outsb
repz
mov
das
stc
xchg
xchg
mov
xchg
daa
mov
and
push
cmpl
add
xlat
pop
repnz
into
mov
shl
jnp
lock
outsl
push
negb
insl
popf
add
inc
repz
and
push
mov
jno
sti
int3
mov
mov
add
xchg
ret
popa
mov
jo
mov
or
push
cmp
fsubl
xor
je
jnp
inc
sub
jns
sbb
cmp
mov
dec
inc
xor
pop
loop
push
add
addr16
mov
dec
aam
inc
test
jb
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
sar
push
aas
pop
jle
dec
jns
jle
pop
lcall
mov
inc
jb
ja
shll
adc
jmp
xor
sbb
push
jo
cmp
test
push
or
mov
lods
mov
cmpsb
xchg
or
cmp
outsl
mov
test
mov
outsl
sub
arpl
iret
bound
mov
pop
sbb
xor
out
fimull
test
std
push
mov
in
mov
add
mov
imul
mov
out
outsl
pop
jb
fisubl
push
cmc
push
loopne
inc
jle
loope
sbb
cmpsb
jle
bound
lea
je
push
and
ss
lahf
repz
sub
rcll
loop
jg
and
or
and
ret
cltd
inc
dec
or
out
jle
daa
mov
outsl
pop
or
out
lahf
fisubrs
movsl
add
xchg
mov
or
in
pop
push
lret
or
stos
or
outsb
aad
push
pop
add
ret
push
fucomip
testl
mov
aaa
nop
cmpb
sub
mov
mov
mov
and
inc
fisubl
aam
cmp
mov
mov
dec
and
adc
pop
outsl
cli
inc
and
push
ds
lds
push
dec
jmp
ljmp
dec
scas
out
xor
test
pop
sub
xchg
cmp
jecxz
xlat
lock
mov
push
jbe
movd
sti
dec
mulb
fstps
filds
rcll
addb
inc
sbb
mov
xchg
sbb
test
pushf
pop
mov
push
loope
pop
jnp
pushf
cmpsb
jb
test
insb
or
inc
cmp
pushf
mov
adc
pop
repnz
out
addr16
xchg
push
dec
sbb
fs
push
mov
arpl
xchg
mov
mov
cmp
aam
or
xchg
push
xchg
loope
or
add
arpl
cs
cmpsb
pop
movsl
shll
xchg
sbb
les
js
insb
std
inc
dec
loope
insb
fistpl
lcall
inc
orb
push
dec
xchg
xchg
add
adc
in
jb
in
cmp
push
lods
ret
sahf
lds
jecxz,pt
outsl
sub
xchg
push
push
imul
push
sti
andb
dec
hlt
fmull
dec
out
stc
sbb
dec
sbb
inc
push
push
mov
ficoms
leave
fiaddl
adc
cmc
repz
cmp
and
pop
sub
aas
test
mov
lcall
in
mov
sbb
pop
das
jl
loop
adc
pop
mov
jecxz
aas
xlat
dec
shlb
fwait
daa
movsl
sub
clc
sbb
mov
pop
and
arpl
sub
std
ficompl
mov
popf
test
imul
jle
ds
fisubs
jp
inc
cmp
mov
shrl
nop
xor
add
dec
mov
jbe
xor
adc
hlt
mov
and
leave
xchg
mov
sti
dec
mov
jae
imul
fmuls
cmp
call
adc
or
add
pop
xchg
ljmp
xchg
push
fs
inc
mov
mov
es
cld
mov
xchg
pop
insl
loopne
push
dec
xchg
or
mov
jb
push
xlat
inc
push
mov
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
push
bound
jle
dec
jns
jle
test
out
mov
inc
loop
cmp
test
loopne
mov
adc
add
in
loop
gs
add
jbe
aas
shufps
pop
inc
add
ud0
sbbl
sarl
ret
adc
mov
jno
or
pop
xor
outsl
lahf
lods
inc
fs
dec
dec
dec
cmpsb
push
or
xchg
lahf
inc
pop
iret
adc
inc
test
jg
xchg
cmp
and
mov
sbbb
xlat
in
out
jne
js
int
cmp
je
cwtl
sub
in
clc
mov
push
xor
mov
xor
and
dec
fsub
and
fmuls
dec
adc
lret
mov
sbbl
lea
scas
cmpb
cmp
cmc
sub
sbb
pop
push
cmp
mov
mov
push
pop
or
mov
mov
insb
shrl
pop
mov
jp
jl
shr
lea
xchg
and
push
dec
aam
iret
leave
mov
int3
imul
sub
out
fstps
popa
dec
jno
jno
and
adc
add
nop
mov
mov
imul
jne
in
inc
test
test
sbb
fdivrs
or
jns
inc
sub
ljmp
lods
dec
jmp
pusha
ffree
loope
push
add
add
push
insb
stos
pusha
push
xchg
push
daa
or
fadds
cmp
adc
sub
push
inc
mov
scas
loop
fs
add
sbb
xchg
adc
loop
js
mov
sti
mov
pop
loopne
pop
sbbl
lahf
fs
hlt
jne
ljmp
adc
sub
mov
cmp
das
fwait
pop
push
cmp
cmpsl
jecxz
div
sbb
dec
sub
imul
mul
sarb
jmp
adc
pop
das
xchg
cmp
adc
shr
sarl
jb
pop
pop
xchg
fs
mov
sub
add
lea
xchg
in
pop
xlat
icebp
pop
dec
testb
das
cli
add
xor
sub
sub
cmp
lock
icebp
aam
push
xor
pusha
sarb
inc
push
mov
add
xor
mov
push
fldenv
emms
filds
dec
nop
adc
dec
xchg
xor
mov
gs
sahf
mov
test
lahf
repz
sbb
fiadds
scas
jg
mov
push
btsl
pop
repz
cmp
aad
shl
xor
push
repz
cltd
cltd
out
pop
in
out
mov
mov
fiaddl
push
dec
jecxz
cwtl
out
jbe
aam
mov
jae
dec
or
jecxz
jae
aam
jne
int
xorb
jbe
arpl
push
cmp
jl
adcl
imul
nop
leave
push
in
inc
jo
jle
rcrb
mov
mov
movsb
and
add
add
mov
cwtl
or
fdivrs
mov
ja
dec
lcall
movsb
dec
je
repz
inc
shll
push
xor
jb
xchg
xchg
xor
push
xchg
or
adc
mov
lahf
push
dec
je,pn
pop
fldcw
sub
mov
add
sub
cmc
mov
jnp
and
fildll
outsb
jno
jge
sahf
push
jecxz
loopne
jecxz
ret
or
imul
decl
add
inc
pop
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
sbb
jle
js
jle
mov
adc
jp
ds
rcrl
xchg
sub
push
jl
in
sub
idivl
vmwrite
add
outsb
sbb
jmp
ret
fdivr
out
dec
pop
pop
and
dec
scas
pop
add
mov
ja
cmpb
int3
lods
outsb
outsb
out
nop
pop
cld
loop
movsb
xchg
xorl
or
adc
ljmp
fstpt
mov
pop
clc
or
mov
mov
and
and
in
pusha
sub
int3
cs
cmp
btrl
outsb
mov
cmp
lcall
and
lcall
mov
and
xor
lods
push
loopne
out
rolb
hlt
inc
xchg
dec
mov
popa
mov
popf
rclb
push
stc
dec
add
jp
mov
pushf
push
movsl
inc
or
outsb
stc
roll
callw
xor
xchg
and
pop
adc
mov
mov
lds
sub
std
cmp
mov
or
xchg
mov
cmp
gs
xor
xor
ja
push
pop
dec
loope
xchg
cmp
dec
adc
pop
icebp
cld
or
jg
jbe
xchg
sub
adc
cli
push
ficomps
xchg
fstpt
cmc
lahf
mov
sbb
push
add
jne
jle
out
cmpsl
les
pop
popf
fwait
lahf
addb
inc
repz
pop
movsl
mov
lods
push
mov
out
stos
fisubrs
daa
or
add
mov
jge
movsl
push
cli
push
and
add
sub
dec
mov
adcb
test
divl
aaa
hlt
mov
xor
jle
push
dec
pop
es
das
gs
es
mov
mov
xor
popf
popf
lret
clc
mov
lods
lock
mov
mov
ret
out
in
mov
test
add
add
jbe
popa
fldl
in
mov
leave
pop
xchg
lea
pop
cmpsl
xor
adc
lea
mov
aas
mov
sbb
add
push
sbb
cmp
pusha
insb
ret
push
movsb
ret
mov
movsb
inc
dec
xor
repz
loop
adc
or
add
cmp
pop
xor
fwait
sub
mov
push
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
or
outsb
fdivrs
loope
jle
mov
xchg
popa
jns
and
in
fidivs
das
adc
dec
push
faddp
fimuls
pop
lock
ret
sbb
inc
jne
pushf
xchg
stos
inc
push
popl
ficompl
cmpl
sahf
lods
xchg
jb
pop
inc
xchg
xor
jns
test
sub
add
jnp
stos
pop
ret
add
adc
cmp
shlb
add
mov
addl
or
xlat
mov
add
jnp
lret
pop
jp
pop
ss
lahf
dec
xchg
or
stos
xor
or
dec
mov
mov
fwait
lahf
push
ret
dec
jns
test
repz
xor
lock
fwait
aad
xor
scas
and
pop
and
push
cmp
out
enter
popa
jmp
mov
pop
jae
push
ljmp
call
cmp
pop
inc
loope
mov
adc
jle
cs
pop
adc
adc
jne
xor
push
pop
call
sub
mov
push
int3
jg
outsb
cmp
adc
xchg
in
cmp
std
lds
ss
setg
lahf
cmp
sub
pop
addr16
adc
mov
dec
rcrb
shll
push
hlt
xchg
add
sub
test
push
scas
cmpsb
xchg
xor
mov
mov
push
das
cmpsl
shlb
and
adc
fildll
lea
or
sbb
and
pop
cmp
or
sbb
mov
loopne
mov
filds
sub
mov
mov
push
jo
js
dec
mov
push
jae
jno
jl
sub
xchg
pop
jge
notb
mov
negb
outsb
popa
es
stos
adc
push
ret
ljmp
add
xor
enter
adc
sbb
shll
jp
lcall
pop
dec
and
jl
xchg
mulb
push
cwtl
out
jbe
mov
sub
jne
mov
sub
sbb
xor
jg
stos
hlt
imul
out
and
clc
sub
repz
cmpsl
adc
add
dec
daa
aas
mov
sub
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
pop
push
arpl
loope
jle
pop
cmp
fwait
mov
pcmpeqd
mov
cli
lds
ja
hlt
dec
adc
jg
mov
subl
xor
push
inc
or
and
fs
cmp
push
inc
inc
es
mov
std
and
xchg
adc
xchg
stos
repnz
mov
lea
repz
lds
hlt
mov
aad
mov
lock
pop
mov
pop
push
pop
and
scas
sti
iret
jo
nop
push
sub
push
aam
sbb
pusha
xlat
scas
mov
push
inc
sub
mov
into
ret
cmp
xor
dec
add
nop
test
pop
xor
jb
movsb
sub
outsl
sbbb
lea
push
mov
ljmp
sub
sti
sti
insb
mov
imul
aad
jns
aas
or
mov
fldt
and
mov
mov
pop
pop
add
fstl
insb
imul
mov
or
adc
pop
mov
fstpl
rcll
aad
or
jb
add
mov
push
faddl
ret
mov
loope
mov
sub
inc
rol
xchg
xchg
push
mov
push
in
sub
push
mov
push
addr16
imul
pop
cmpsb
push
loop
cmp
push
inc
cmp
jmp
mov
cwtl
lret
sub
sbb
add
jl
jne
int3
mov
enter
add
sbb
ja
movsb
xor
dec
bound
in
push
mov
mov
fcompl
mov
loope
push
mov
bound
or
aaa
mulb
cli
inc
push
mov
jl
sahf
dec
ss
mov
mov
icebp
xchg
dec
cmpsl
outsl
push
stos
mov
push
out
out
ret
or
sbb
das
pop
into
sbb
xchg
idivl
mov
shrl
push
aaa
and
cmpl
in
lock
jnp
mov
push
nop
shrl
mov
xchg
xlat
xor
sbb
enter
arpl
mov
xchg
mov
jne
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
xchg
sub
jle
loope
jle
mov
xchg
sub
xor
popa
out
dec
fidivrs
imul
or
aad
pop
rorb
andl
stos
mov
cld
xchg
incb
cmp
jne
out
lea
cmp
ret
pop
jl
add
pop
nop
cmpsl
insl
addr16
jmp
aas
jg
lds
imul
ret
loop
ljmp
lahf
pop
mov
out
shll
aaa
pusha
mov
frstor
inc
add
shll
leave
sbb
call
xorl
imul
aaa
xchg
outsb
mov
in
aaa
push
sub
xor
addr16
imul
sbbb
mov
into
mov
or
repz
scas
in
cmpsl
bound
lcall
rep
in
cmpsb
xchg
sbb
testb
fcmovne
push
mov
mov
cmp
cmp
mov
jp
pop
into
pop
addb
mov
cmc
lret
mov
push
ljmp
scas
fwait
push
mov
dec
into
je
mov
push
xchg
outsb
lds
mov
rcll
cmp
loop
add
bound
dec
loope
aam
fisttpll
mov
lret
add
cmp
dec
dec
sub
or
mov
add
ljmp
cmp
loopne
mov
adc
jle
dec
jno
inc
loop
sti
add
sub
jmp
lret
fisttpll
in
mov
es
add
repz
push
outsb
scas
in
push
xor
ja
sub
and
xor
xor
aas
add
jo
ja
std
lds
inc
jbe
push
movsl
cld
out
popa
xchg
std
xor
jbe
add
xor
pop
pushf
sbb
mov
inc
or
shll
dec
repz
icebp
mov
adc
js
mov
pop
or
mov
pop
jnp
mov
stc
pop
cmp
lock
add
aam
lods
jle
push
cmp
pushf
jne
xlat
int
fcoml
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
xor
sbb
call
repnz
push
test
imul
mov
mov
mov
jno
lods
lahf
ljmp
sbb
nop
mov
cmp
adc
add
add
xchg
jne
rep
xchg
pop
mov
xchg
pop
cmp
dec
in
inc
fcmove
leave
xorl
int
int3
jae
andb
xor
popf
adc
rorb
imul
and
subb
add
jmp
insl
in
insl
je
jo
fistpl
lcall
das
adc
mov
les
les
adc
jo
sbb
jns
cmp
pop
aaa
stos
cmc
push
sbb
loop
sub
push
sti
inc
mov
insb
subb
shlb
jno
pop
pop
pusha
xchg
push
push
cmp
pop
inc
ret
sbb
fwait
jg
popf
jb
cmp
incb
push
push
jbe
aad
cmpsb
fstp
dec
lock
mov
xlat
mov
cmc
and
fs
ljmp
fadd
ja
dec
sub
add
xchg
ljmp
and
std
push
faddl
ret
pusha
jbe
or
ja
rcrb
and
sub
add
out
jb
movsl
fs
insb
xorb
push
ja
sbb
gs
pushf
inc
xor
pop
push
xchg
mov
sahf
add
popf
lret
mov
cmp
xor
mov
sub
fimuls
dec
sarb
int3
loopne
xor
inc
les
pop
stos
push
or
mov
sahf
lahf
sub
mov
add
lds
pop
add
mov
xchg
dec
xchg
into
fs
pop
cmc
cmc
lret
push
push
jmp
pop
rcll
popf
and
lods
sbb
cld
jne
icebp
adc
push
aam
and
dec
mov
jl
fidivs
aaa
cld
pop
cmp
xchg
mov
in
les
les
xor
mov
xchg
push
mov
xor
cmc
or
mov
push
push
sbb
adc
repnz
hlt
or
cmp
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
sub
jle
jo
jle
mov
jo
aas
add
out
test
dec
frstor
and
mov
addl
lock
insb
dec
out
jmp
scas
inc
in
and
pop
out
rcll
push
cltd
in
data16
les
or
cmpsl
test
fcoml
cld
xchg
in
cmpl
stos
xor
inc
mov
ud1
jb
and
cmpl
and
es
loop
mov
dec
aaa
les
xor
xor
dec
lock
dec
push
lret
xor
and
aam
rol
lods
inc
jae
mov
and
orb
adc
fwait
add
and
fidivl
sub
in
aam
dec
out
cmp
inc
mov
mov
push
jno
mov
loopne
sbb
shr
and
mov
test
rorl
cmp
fstps
and
jae
in
fstpt
test
jno
ja
add
mov
ret
mov
repz
jmp
out
leave
inc
pushf
and
cmc
adc
leave
push
pop
pop
test
cli
test
repnz
sbb
je
aad
or
cwtl
push
and
clc
mov
push
push
inc
jo
dec
ret
push
xchg
pop
bndstx
pushf
stos
aam
or
fcmovb
stc
in
mov
nop
xchg
pushf
mov
cmp
cld
and
xchg
xlat
mov
sub
sub
repnz
in
mov
dec
lret
imul
negb
movsb
dec
movsb
sub
rcr
push
call
sahf
xor
jle
adc
mov
dec
sbb
out
int3
adc
add
mov
xchg
mov
dec
or
mov
jl
push
push
push
mov
inc
sti
icebp
loop
movsb
adc
inc
fsubrp
pop
test
ret
xor
add
sbbb
adc
sbb
ja
push
pushf
pop
sub
jns
out
daa
mov
or
outsb
pop
adc
movsl
cmpsl
ja
test
mov
jg
mov
clc
mov
out
testl
mov
mov
cmp
decl
fnsave
sbb
dec
jae
outsb
notl
dec
aas
xchg
mov
fsub
scas
testb
sbb
fstpl
aaa
push
jmp
int
or
push
rclb
arpl
jne
xlat
ret
movsb
add
neg
xor
lret
or
cmp
aam
mov
in
jecxz
ljmp
inc
push
repnz
ss
inc
sbb
push
mov
mov
inc
cld
int3
adc
divb
loopne
jnp
or
mov
push
lock
xchg
pop
inc
cmp
sub
jecxz
and
sub
mov
lods
nop
test
mov
adc
rcrb
cmpsb
lea
pusha
fimuls
mov
jecxz
das
out
loopne
clc
mov
test
xchg
stos
xor
dec
cmp
push
push
into
fsub
aas
xchg
adc
enter
lea
xchg
xchg
daa
bound
xor
dec
fstps
push
sbb
mov
data16
xchg
xorb
jecxz
sbb
sbb
xchg
sub
inc
out
popa
or
fldenv
ret
pop
sub
or
enter
aaa
mov
dec
push
push
insb
push
sahf
lahf
mov
jl
mov
out
push
leave
out
loope
idiv
rcll
xchg
cld
aas
mov
mov
or
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
rcrl
xchg
out
jle
jo
jle
xchg
sub
mov
scas
scas
cs
outsb
das
dec
push
mov
cltd
jne
pop
dec
jmp
imul
xchg
test
mov
mov
adc
jbe
xchg
out
aas
xor
inc
pop
jmp
add
add
and
add
xor
jae
mov
push
pop
adc
hlt
imul
int3
insl
add
xchg
lods
xchg
test
jle
xchg
ss
in
es
jle
ss
sar
adc
testb
ret
addr16
pop
shl
scas
sub
mov
xchg
out
xor
xchg
inc
or
lea
cmp
or
jle
rcrb
xlat
jge
ret
addr16
mov
mov
cmp
adc
inc
pop
ds
mov
pop
jae
ljmp
aaa
jbe
mov
imul
mov
lret
lods
cli
sbb
sub
sbb
mov
movsl
fcomps
ss
cmp
mov
push
shll
sbb
mov
movsb
movsl
sub
out
mov
test
pushf
inc
fnstcw
fmuls
std
add
out
popf
push
popf
or
pop
inc
lcall
loopne
dec
inc
mov
inc
mov
cld
cld
mov
das
add
push
dec
es
loop
push
lea
arpl
divb
imul
pop
add
push
scas
mov
mov
pop
dec
lea
fwait
out
add
dec
je
fcoml
add
loopne
into
andb
push
incb
pop
ja
jno
sbb
inc
mov
movsl
jl
or
mov
xchg
jbe
imul
jle
push
les
dec
push
xor
mov
cmp
or
rorb
push
adcb
dec
sbb
add
in
xlat
pushf
cli
inc
xorb
rorl
mov
sbb
cmp
lock
or
pushf
ljmp
clc
and
add
sti
dec
cmp
rcll
or
adc
dec
xor
or
fdivrs
enter
sub
stos
stos
in
xchg
test
testl
pop
mov
cmp
in
shrl
jge
icebp
add
iret
fistps
insb
sbb
xor
popf
and
jp
outsl
popa
in
movsb
cld
adc
xchg
je
jmp
cmp
mov
dec
es
jo
jle
push
aam
test
jae
shlb
js
xchg
stos
push
or
in
fadds
inc
pop
inc
mov
divl
repnz
in
cmpsl
xchg
pop
fistpll
addb
dec
int3
cmp
clc
sbb
xor
andl
mov
xor
or
call
jnp
push
in
mov
jno
icebp
fistps
icebp
sbb
repz
inc
sbb
mov
mov
scas
xchg
mov
sbb
cmp
dec
jbe
push
add
imul
xchg
lea
imul
xor
mov
pop
mov
mov
stos
test
pop
cld
inc
sub
mov
mov
push
and
gs
push
das
scas
dec
sbb
cmc
xor
sahf
leave
dec
dec
jo
push
repnz
jo
fisubs
lds
ljmp
roll
inc
or
hlt
and
sub
mov
pop
les
mov
ja
lret
sbb
dec
pop
into
sahf
pop
pushf
sahf
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
dec
fld
push
ljmp
mov
pop
or
nop
jne
cmp
pop
test
scas
ret
test
xchg
jmp
pop
sub
jno
sub
hlt
cmp
sub
adc
mov
mov
pushf
repz
mov
imul
std
mov
pop
lock
ror
add
push
mov
popa
lret
call
cmp
loope
in
loope
pop
adcl
xchg
and
dec
aad
pop
mov
std
push
sbb
adc
mov
mov
enter
inc
pop
ss
xchg
jp
aam
mov
inc
leave
lock
sbbb
pop
popf
jb
sub
repnz
sbb
aam
dec
andl
hlt
outsl
in
mov
push
xor
subb
rcr
and
shr
fsubl
dec
dec
stos
mov
repz
sti
outsb
push
jno
xor
stos
adc
ljmp
shl
pusha
test
mov
mov
push
lcall
pop
mov
or
cli
xchg
jmp
test
outsl
addr16
pop
push
jae
sub
inc
in
ss
push
mov
mov
call
scas
loope
stos
insl
push
lods
and
sub
mov
mov
pop
inc
jge
mov
enter
and
loope
mov
mov
insb
dec
into
push
hlt
dec
push
jbe
cmp
mov
insl
into
stc
fwait
mov
sbb
movsl
xchg
add
aam
cmp
cmp
aad
and
or
movsl
jecxz
lahf
es
cld
stc
inc
sti
lods
push
push
int3
adc
mov
loopne
sbb
movsb
push
dec
pop
mov
mov
and
pop
add
jnp
in
mov
mov
adcb
stos
dec
cmpsb
sub
fdivrs
push
int
fistps
das
insb
cwtl
shrl
aaa
jne
addr16
mov
into
jle
incb
idivb
stos
sbb
jb
xchg
stc
xchg
imull
loopne
cmp
xchg
loop
insl
jbe
lea
out
mov
adc
test
mov
and
lret
cwtl
mov
or
scas
ss
movsl
pop
mov
movb
loopne
dec
stc
mov
aas
into
neg
cld
loopne
and
adc
in
addr16
call
rcll
adc
lds
stos
cmpsb
sub
dec
xor
pop
gs
ja
jmp
inc
pop
add
iret
add
sbb
jl
stos
pop
mov
jp
ret
scas
xor
jnp
xchg
push
outsl
dec
mov
mov
pop
xchg
jae
push
ret
push
pushf
lods
je
inc
repz
mov
inc
xor
lock
inc
lcall
mov
mov
cwtl
jbe
jae
int3
outsl
stc
js
lods
insb
fbstp
stc
add
imul
fidivrs
js
aaa
sub
dec
or
pushl
xchg
pop
mov
mov
pop
pop
adc
add
cmp
mov
jl
cs
popa
dec
bound
shrb
xchg
jnp
dec
cld
dec
pop
psubusw
jle
cli
push
loopne
repz
dec
jae
sub
insl
lds
dec
mov
lods
repz
mov
mov
jno
rcrb
mov
bound
push
imul
sarb
xor
leave
mov
lea
test
arpl
xor
jnp
jp
add
xchg
cmp
dec
lds
fisttpll
js
mov
insl
rol
inc
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fldenv
push
in
idivb
jo
jle
ss
pop
popf
dec
add
stos
lcall
cmp
fsubl
push
or
inc
lock
je
sub
in
rolb
dec
flds
pusha
movsl
fisttpl
mov
lcall
sti
xchg
jecxz
mov
popf
sbb
outsb
and
mov
int3
in
adc
rolb
xchg
xchg
push
cmovg
inc
and
xchg
cmp
pop
pop
lcall
sbb
mov
xor
lret
sbb
call
jmp
push
or
lds
aas
call
mov
fcoml
hlt
push
outsl
pop
ret
pop
insb
dec
in
stc
movsl
adc
outsl
add
clc
sub
inc
push
mov
add
mov
dec
mov
call
pop
mov
sbb
stos
sahf
out
or
adc
mov
jb
cmp
dec
data16
xor
test
ja
loop
daa
ljmp
gs
xchg
adc
jmp
dec
jmp
cmp
mov
and
cmp
add
sti
stc
addr16
pop
stc
push
jo
pop
xlat
mov
test
mov
pop
popf
xor
jg
pop
cmc
loopne
jno
int
cmp
jle
xlat
cmp
inc
sub
cwtl
fsubrl
data16
jbe
in
and
jle
aas
mov
mov
pusha
loope
xchg
and
mov
cmp
lret
std
jle
push
mov
orl
pusha
pop
push
pushl
ficompl
cwtl
and
out
outsb
stos
movsl
push
mov
xchg
out
scas
les
loopne
cs
out
mov
jae
jp
into
push
inc
fildl
cs
je
mov
repnz
movsl
push
cmp
loopne
lods
in
fisubrs
mov
xor
lret
loope
dec
mov
jae
mov
add
pop
mov
jo
pusha
scas
imul
repz
shr
cmp
scas
sti
xlat
jl
adc
std
and
jmp
clc
fildll
mov
mov
out
pop
pop
std
cmp
test
test
or
repz
inc
je
repz
aam
test
sbb
pop
pop
add
jno
push
mov
mov
ret
dec
daa
xchg
add
or
in
dec
add
testl
movsb
cmp
pop
xchg
and
outsb
mov
int3
add
gs
inc
push
push
lods
mov
xchg
adc
cmpsl
dec
movsl
mov
sti
or
jne
adc
out
inc
inc
mov
nop
inc
mov
cmpsl
mov
push
adc
ficoml
icebp
and
inc
add
sub
out
adc
sbb
orl
popf
add
xor
cli
repz
ja
pop
or
daa
mov
pop
push
push
fcoml
or
je
cli
xor
mov
aad
movsb
ss
in
idivl
adc
shl
cltd
lret
cmpsl
inc
inc
push
in
shlb
mov
mov
fmull
push
xorb
sahf
loop
and
and
push
cmc
mov
mov
jg
loopne
sub
xchg
movsl
xchg
cmp
fmull
xchg
rorl
mov
lret
jo
jbe
cli
int
fnstcw
imul
push
push
popf
mov
ret
das
mov
adc
xchg
jl
inc
push
aas
daa
sub
sbb
out
mov
addr16
popf
jb
icebp
adc
push
sub
call
or
subb
or
lahf
dec
lds
gs
cmp
sarb
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
dec
dec
data16
cli
bnd
jo
jle
jne
pop
pop
icebp
mov
xor
pushf
mov
or
iret
fs
call
outsl
gs
repnz
jb
ja
outsb
fs
pop
mov
push
ss
and
std
xchg
stos
call
cs
xor
andb
xchg
int3
dec
dec
into
sub
adc
rorb
dec
pop
adc
mov
cli
xor
xchg
sti
pushf
aaa
rcrl
mov
repz
rorl
or
xchg
std
loopne
clc
fwait
in
not
test
push
cwtl
push
sbb
jb
mov
gs
sbb
ret
mov
stos
hlt
leave
xor
mov
push
or
xchg
pop
mov
sbb
inc
movsb
scas
stc
or
adc
and
xchg
cmp
pop
jg
xor
in
out
lahf
test
jno
mov
sub
pop
repz
adcl
insl
sbb
std
xchg
cmp
xchg
mov
movsb
inc
enter
mov
iret
lock
push
and
lcall
push
scas
stc
pop
inc
in
aam
sbb
in
sub
loopne
mov
outsl
and
ss
and
call
jl
fistpl
xchg
and
sti
jb
lahf
push
int
xlat
jo
and
in
ja
lcall
jne
imul
jle
push
nop
inc
mov
je
faddl
mov
add
dec
imul
xor
jle
jge
ret
dec
es
jle
lahf
pop
xchg
cld
dec
dec
dec
pushf
mov
sarl
in
cmp
out
shlb
cmc
inc
adc
enter
mov
add
xchg
iret
or
and
mov
int
aaa
nop
mov
movsb
hlt
dec
jno
sbb
sbb
fwait
ds
push
cmp
or
out
pop
push
jno
jnp
sbb
mov
jno
rolb
cmp
sbb
out
mov
cmp
int3
xchg
adc
ds
xlat
mov
nop
xchg
fs
imull
add
xor
fstl
sbb
xchg
inc
jb
pop
mov
xor
push
in
sbb
mov
xchg
repz
push
mov
mov
pop
sub
jnp
cmp
je
xchg
jg
or
sbb
jmp
cmpsl
cmpsl
cld
cmc
xor
popa
fldcw
sarl
mov
fdivrl
jle
xlat
rolb
jmp
jmp
cmp
xlat
jle
mov
and
dec
cmpsb
add
adc
cmpsl
idivl
adcb
arpl
sbb
mov
pop
and
pop
leave
mov
pop
lods
shlb
mov
inc
jge
mov
lcall
pop
leave
lods
adc
mov
jbe
pusha
pop
inc
arpl
inc
adc
add
test
outsl
adc
pushf
cmp
or
cmp
inc
stos
jl
mov
addr16
mov
in
loopne
xchg
shlb
scas
scas
dec
test
sbb
mov
adc
fistpll
jmp
ja
ss
sub
popa
hlt
jne
xor
or
nop
pushf
dec
inc
jb
pop
out
pop
in
pop
sbb
xor
subb
and
jnp
sbb
mov
jb
jl,pt
and
divb
add
mov
lods
call
ja
mov
bound
insb
sti
jmp
loop
cmp
jbe
or
andl
int3
xchg
dec
subl
cli
scas
jno
cmp
das
mov
push
or
jne
data16
daa
jp
xchg
xchg
adc
pop
clc
aas
andb
pushf
stos
mov
pop
mov
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
repnz
jle
jo
jle
lods
pop
js
mov
xchg
cmp
fldenv
inc
outsl
adc
icebp
xchg
sub
cmp
jb
mov
sub
mov
add
xor
xchg
jb
lea
mov
add
push
mov
arpl
sub
sub
lods
fiaddl
dec
and
cmp
outsl
xor
imull
jnp
xchg
pop
or
lahf
das
rcrb
cmp
not
imul
rorl
xor
jmp
xor
mov
popa
inc
imul
iret
jnp
inc
jge
dec
jmp
inc
jbe
sbb
pop
dec
push
sbb
mov
fidivl
mov
jae
addr16
call
test
jbe
mov
sbb
arpl
inc
adc
aad
ljmp
dec
fsincos
push
adc
sbb
xlat
je
rcrl
cmc
cmp
lods
dec
lock
push
fistpll
neg
cmp
mov
fcoms
lock
jne
aas
jne
push
sbb
mov
cmp
icebp
push
insb
fisubs
or
add
outsb
std
sbb
jo
and
outsb
and
cld
sbb
jp
xchg
rcrl
cmp
in
int3
imul
and
and
rclb
clc
or
push
cmp
fiadds
fmull
addr16
push
xor
pusha
cmp
add
cmp
outsb
mov
arpl
xchg
fcmovnbe
aam
jp
adc
insb
jg
cmp
cmpb
sbb
or
loope
int3
mov
into
xor
push
push
sbb
mov
call
push
lods
and
cwtl
xor
push
jle
sbb
in
cwtl
loop
sbb
sub
out
out
cmp
push
xor
outsl
aaa
xchg
push
adc
std
jge
jae
xlat
lds
dec
inc
or
jle
cmpsl
pop
nop
xor
jb
je
mov
in
mov
js
jge
cmp
jb
lret
rclb
cmpsl
jne
adc
loope
mov
mov
cmc
cs
cmp
sti
iret
popa
ret
mov
sbb
mov
js
mov
pop
repnz
cmp
arpl
cmp
xchg
inc
sbbb
push
mov
push
jb
add
pop
nop
fwait
in
fsubl
sbb
sub
and
or
sbb
or
cli
lret
cld
sbb
mov
adc
sbb
stos
das
out
inc
popf
lahf
push
sub
push
xchg
aam
and
xlat
and
sub
fimull
inc
pushf
and
push
dec
int
les
push
pushf
rcrl
lret
jecxz
dec
aas
xchg
mov
scas
mov
pop
sti
rcrb
test
mov
pop
pusha
mov
shll
mov
call
push
or
orl
xchg
fcomps
sbb
aaa
add
cltd
loope
xchg
out
inc
sbb
mov
pop
adc
test
xchg
test
insb
inc
pop
iret
or
xchg
cmp
or
sarl
stos
inc
ror
faddl
or
inc
xor
maxps
dec
dec
inc
mov
jne
push
xor
pushf
fnstsw
cwtl
js
in
lcall
orl
test
jl
xchg
add
popf
dec
pop
jno
mov
mov
in
mov
pop
add
add
negl
loope
imul
loopne
mov
xor
jne
aam
sub
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
xlat
stos
pop
add
cli
jle
jo
jle
pop
sub
lock
or
insb
movsl
loopne
add
bound
mov
add
outsb
cmp
cld
aam
lods
jmp
ljmp
loop
push
add
jne
pusha
or
sbb
fwait
bound
insl
inc
pop
pop
in
pop
xchg
movsb
divl
pop
std
in
fsubl
cs
imull
test
and
xchg
pushf
push
in
cmp
addr16
popa
adc
or
scas
xor
inc
imull
movsl
mov
cmp
ret
fwait
rcrl
sub
fcompl
jb
in
cmp
mov
fdivrs
push
sub
aas
sbb
adc
jmp
xor
xchg
das
imul
fbstp
lret
ret
nop
add
notl
insb
sbb
decl
in
aaa
push
add
pop
mov
inc
push
and
fldenv
jecxz
shrl
adc
jbe
test
xor
inc
sbb
cmpsb
mov
mov
jbe
jb
push
pop
mov
jp
and
std
push
mov
mov
add
jno
mov
inc
xor
lods
jns
shl
mov
cwtl
and
fmull
in
iret
push
push
dec
dec
or
xor
cmp
jae
adc
xor
dec
add
fdivp
leave
enter
es
das
pop
cs
das
sti
fsubs
mov
jecxz
popa
int3
dec
rolb
mov
stc
inc
sub
xor
aaa
mov
bound
repz
mov
sub
sub
adc
or
cld
sub
ret
scas
cltd
mov
cmc
add
inc
insl
jo
jecxz
push
into
or
pop
xchg
sbb
push
xchg
popa
cmp
outsl
mov
into
addr16
cmpb
test
mov
cmp
out
and
outsl
push
push
sub
xchg
mov
cmp
cmp
push
sbb
jecxz
and
scas
out
cmp
mov
inc
add
test
scas
aam
xor
not
pop
repz
xlat
icebp
add
daa
mov
ror
decb
jmp
or
add
fstpt
add
mov
adc
mov
adc
pop
dec
in
fistps
mov
mov
fcoms
jns
pusha
int
push
call
add
push
cmp
repnz
mov
out
jae
daa
ret
loopne
xchg
lods
xor
sbb
adc
push
icebp
lret
mov
orb
cwtl
aas
push
jno
sub
arpl
gs
inc
cmc
in
pop
sti
out
dec
cmp
movsl
pop
cli
inc
push
or
sbbb
mov
sbb
aaa
ret
xor
fs
push
sbb
dec
push
add
aas
push
mov
jmp
ss
and
push
ss
cld
aam
fwait
sbb
lea
mov
add
hlt
pushw
lea
insb
mov
push
jae
cld
cmpb
inc
or
add
ret
cmp
and
mov
bound
daa
pop
rcrl
ss
jnp
xlat
or
add
lock
add
dec
sub
lds
lds
outsb
jbe
je
mov
sbb
or
dec
out
hlt
outsb
imul
mov
test
rorb
push
inc
adc
insl
xor
jno
mov
push
ret
adc
cmp
popf
cmpsb
add
xor
dec
fldenv
sbb
mov
mov
fimull
xchg
add
add
or
add
adc
add
dec
int3
aam
pop
rcll
xchg
mov
push
in
call
jns
jle
nop
call
and
cmp
pop
lahf
loop
push
in
jp
lea
pusha
pop
movsl
sbb
pop
sbbl
xor
inc
in
pop
jnp
lods
push
cmpsl
iret
sbb
dec
movsl
xlat
mov
lods
nop
out
shlb
cmp
xor
sbb
sub
cmp
jge
jl
js
in
xor
daa
movb
rolb
xor
imul
cmp
add
mov
adc
icebp
add
xchg
add
pop
testl
scas
pop
adc
inc
pop
cmp
pop
loope
into
xor
and
push
das
mov
scas
jmp
aam
adc
sbb
ja
rcl
ret
rol
xchg
arpl
inc
push
sub
mov
xchg
jo
gs
jle
push
fisttpll
repz
dec
add
xchg
or
sbb
jle
pop
pusha
inc
fs
adc
lods
sub
sub
xchg
test
ss
out
jl
pop
pop
inc
or
mov
xor
cld
dec
adc
adc
mov
mov
popa
ljmp
jno
jno
pop
or
frstor
outsb
loope
push
adc
sbb
movl
ss
and
sbb
out
xor
xchg
jmp
pop
jmp
add
sub
mov
dec
out
cltd
cmpsb
add
lock
adc
jbe
mov
xchg
outsb
jno
int
aad
mov
inc
mov
dec
inc
mov
adc
jp
or
call
xor
mov
mov
mov
filds
mov
cmp
outsb
push
test
fmull
je
push
popa
cwtl
sbb
xor
shll
in
movb
movsl
adc
bnd
inc
xor
sbb
movsb
dec
popf
stos
cli
mov
xor
xor
out
cmp
sbb
add
dec
dec
mov
arpl
jg
rcrl
jno
lds
lods
aas
fdiv
inc
mov
push
insl
outsb
and
or
ret
add
fsubl
rcrb
push
leave
jno
pop
xchg
test
in
dec
mov
jns
mov
in
enter
mov
or
xlat
call
mov
dec
std
sub
cwtl
jne
popf
insl
dec
push
sbb
pusha
xchg
jl
test
push
out
daa
mov
loopne
add
cmp
and
icebp
sarb
dec
xchg
xlat
lods
fisubrs
mov
jae
push
push
pop
out
lods
and
in
mov
aaa
movsb
jno
push
sbb
cmp
pop
sbb
lods
mov
mov
rorb
lea
rorl
movsl
std
push
loope
mov
and
out
jge
and
mov
imul
add
xchg
fstpt
jge
outsb
pop
push
sbb
dec
iret
inc
pop
mov
outsb
je
hlt
out
sbb
es
xchg
fstpt
mov
mov
stos
sub
xchg
pop
jne
dec
mov
pop
adc
movsl
loopne
enter
mov
inc
or
xchg
lret
and
test
xchg
inc
das
pop
out
scas
shrl
jno
dec
and
jno
mov
xor
pop
mov
ret
push
outsl
jg
fildll
mov
inc
xchg
xchg
sub
dec
arpl
add
lret
loope
ja
mov
sbb
and
jae
cmp
add
jo
cmpsl
pop
insl
out
mov
stos
xchg
inc
or
or
outsb
sbb
push
dec
inc
push
inc
push
xorb
sar
notb
decl
sbb
insl
out
mov
mov
mov
jle
and
and
jp
push
sbb
lret
mov
lea
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
jmp
cmpb
jns
jle
je
testb
xchg
sbbl
out
ljmp
data16
pop
aaa
mov
sub
jecxz
fst
fbstp
jae
xchg
adc
leave
imulb
rcr
xchg
rolb
cmc
cmpsl
mov
test
out
or
add
xor
aaa
out
mov
std
xor
in
dec
rcrb
xchg
popf
dec
or
push
sub
shl
pop
cmpsl
insb
shlb
ljmp
jl
es
xchg
mov
mov
scas
sbb
mov
cmp
or
pop
dec
imul
xchg
cltd
jmp
cmp
and
sbb
fwait
or
jbe
lahf
imul
inc
mov
outsl
call
lcall
pop
clc
ficompl
addl
lahf
and
dec
xchg
js
cltd
xor
mov
negb
test
and
push
push
movsb
jne
jmp
adc
xchg
sub
mov
add
cmp
mov
aas
add
sahf
inc
mov
loope
xchg
mov
inc
jg
mov
cld
insb
fsubs
push
ja
cmp
xlat
pop
leave
imul
cs
out
stos
std
mov
mov
cmp
mov
fisttps
pop
xor
repnz
test
dec
mov
inc
movsb
jge
xor
push
lgs
fdivs
je
test
or
es
clc
icebp
or
je
mov
rcr
adc
push
imul
lahf
in
fcompl
jne
jmp
loope
ljmp
cmp
dec
cli
wrmsr
pop
inc
in
repnz
sub
xor
vphadduwq
dec
jmp
mov
vmovdqa
ljmp
and
push
pop
jecxz
add
in
mov
adc
mov
mov
cmp
push
mov
xchg
loopne
xchg
std
in
cmc
and
xorl
hlt
sbb
arpl
sub
loopne
and
and
cmp
cmp
jmp
jb
dec
pop
sub
rcrb
popa
add
cltd
push
push
inc
cs
jl
adc
push
dec
mov
subl
xchg
inc
xchg
ret
adc
inc
movsl
in
pop
movsb
push
adc
lods
sti
insb
daa
loop
fsts
mov
cltd
push
inc
stos
mov
fwait
adc
xchg
pop
in
pop
sub
push
mov
test
out
xchg
or
jl
dec
loopne
lock
sbb
lahf
outsb
pop
out
popl
int
icebp
cs
mov
pop
jno
out
add
lock
leave
mov
xor
rol
push
aad
enter
imul
aam
fbstp
insl
mov
pop
ja
sub
cld
mov
pop
sub
idivb
arpl
out
shll
xor
push
jg,pt
loope
pop
jmp
orl
outsb
lret
les
pop
es
stos
mov
xchg
add
pop
incl
mov
pmuludq
cmp
mov
push
and
and
pushf
inc
iret
mov
adc
cmp
movsb
jno
fstl
fninit
rorb
push
pop
push
lret
cmp
add
and
sbb
mov
test
push
dec
test
xchg
mov
and
cmc
fwait
jbe
notl
jns
jo
jp
das
push
and
pusha
pop
lods
jae
pop
pushf
sbb
cmp
loopne
mov
shll
xchg
loope
shrb
sub
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
add
jle
jo
jle
or
inc
mov
mov
and
les
inc
jb
inc
or
arpl
pop
inc
es
xchg
inc
shrb
cmp
inc
testl
jnp
int
cmp
popf
mov
mov
inc
dec
and
and
xchg
mov
dec
adcb
es
mov
add
es
or
inc
sub
ret
stc
mov
xor
les
stos
dec
adc
ljmp
outsb
ljmp
rorb
test
push
push
ret
dec
fwait
pushl
push
aam
aam
out
inc
push
loopne
popa
cmpsb
inc
cwtl
and
push
and
xor
xchg
je
or
repz
sbb
popf
jo
and
xor
scas
inc
fwait
mov
cmp
gs
cmp
sub
push
lahf
push
fists
mov
imul
sub
jmp
dec
sub
lods
dec
icebp
out
add
mov
lret
push
aaa
shr
nop
mov
scas
int
cmp
push
lret
punpckldq
mov
mov
or
rcrl
jb
aad
dec
stc
push
push
stc
adc
push
push
ds
fmuls
mov
jge
mov
in
sahf
pop
push
cmp
push
inc
and
lods
lods
lods
pop
xchg
sub
jl
gs
mov
lahf
push
stc
loope
fcmovb
test
add
xchg
and
hlt
push
add
in
mov
push
xor
test
push
add
stos
je
ret
pop
mov
loope
mov
fistps
rclb
xchg
xor
jp
inc
lock
push
xor
push
inc
lahf
xor
pop
scas
lds
or
ljmp
and
sarl
jp
dec
inc
fcomps
mov
fdivrl
gs
mov
mov
lcall
inc
daa
ljmp
add
lret
mov
fldt
out
scas
int3
sub
testl
mov
leave
hlt
and
js
pop
add
loopne
or
es
cmp
lea
aad
and
add
dec
movsl
fdivr
xchg
cli
and
pop
mov
int
xor
mov
clc
add
scas
xchg
cltd
loop
mov
lods
lcall
cmp
insb
iret
dec
add
mov
pop
lock
ret
bnd
sub
lods
aas
xchg
ljmp
pop
jns
pop
pusha
adc
sub
into
inc
testl
and
popa
movsb
repz
jae
mov
cmp
pop
stos
cmp
imul
clc
mov
mov
shrb
mov
stos
cld
mov
push
lcall
out
cmp
jg
lods
ret
lret
jo
and
fwait
out
stos
inc
mov
rolb
mov
stos
notb
test
mov
int
inc
cmp
les
imul
xchg
testb
xchg
fisubrs
adc
mov
xor
xchg
loope
pop
js
insb
or
cmpsl
daa
sbb
cli
int3
mov
jl
jo
and
inc
dec
mov
push
ret
mov
fwait
hlt
or
fimuls
inc
jg
rclb
mov
decb
arpl
into
pop
sti
mov
dec
cli
in
fs
das
lcall
push
mov
std
das
xchg
pop
out
xor
les
ss
aas
mov
mov
test
scas
lea
stc
add
jmp
cmp
dec
mov
shr
push
cmpsb
lcall
jle
test
mov
das
xchg
add
jnp
pusha
fcoml
repnz
inc
imul
sub
push
jl
cmp
jno
popf
rcr
mov
dec
cmpsb
xor
jmp
mov
test
insl
jp
xchg
sub
sbb
mov
jge
xor
push
adc
and
jmp
call
cmp
xchg
std
jle
addr16
in
js
xchg
filds
pop
pushf
mov
push
xor
push
mov
add
int3
inc
subl
or
cmp
fucomp
mov
rcrl
mov
fildll
shl
andb
or
xchg
push
js
push
lret
test
insb
ss
jbe
test
stos
push
mov
mov
hlt
adc
fiadds
mov
jne
out
or
cmp
sbb
into
adc
ljmp
test
xchg
cs
push
add
js
cmpsl
mov
js
fs
icebp
loopne
bound
ds
jmp
push
jl
inc
sub
ss
cli
pop
fistl
pop
out
mov
adc
sbb
add
pop
icebp
sbb
push
roll
ret
shr
jmp
xlat
cmp
ljmpw
or
fcomps
cmp
incb
les
cmp
popa
sbbb
jo
in
xor
sbb
stos
ror
mov
cld
repnz
imul
pop
ss
ficomps
in
sbb
test
mov
dec
pop
rcl
jo
sbb
pop
fiaddl
lods
and
ret
sbb
push
loope
into
gs
sarl
outsb
adcb
dec
in
mov
repz
inc
dec
aam
bound
mulb
aam
sbb
xor
das
lds
jae
aam
xchg
std
push
lcall
push
mov
dec
mov
cmp
fisttps
enter
out
xchg
ljmp
cmpsb
ret
push
jl
outsl
outsb
dec
out
out
mov
inc
dec
lret
inc
sub
push
jmp
push
mov
hlt
test
push
jae
clc
xlat
sub
or
jge
lods
or
or
xchg
pop
inc
mov
and
pop
or
pop
cmpsb
dec
pusha
in
push
mov
or
pop
push
or
fnsave
push
mov
pop
out
sti
sbb
insb
pop
lret
popl
mov
cmp
mov
mov
xlat
in
cmp
sub
ds
sbb
mov
js
xor
cmpsl
loopne
mov
cmp
push
fwait
stos
cmp
aaa
inc
fdivp
out
pop
cmp
and
lods
inc
xor
xchg
and
stos
pop
addr16
loopne
shl
dec
mov
js
dec
in
xor
mov
push
loopne
ret
lret
in
mov
mov
adc
roll
cmpl
xchg
dec
push
iret
xor
sub
insl
dec
and
push
cli
xchg
pop
jmp
fcoml
pushl
add
xor
inc
movsl
fnstsw
ss
pop
ss
sub
ja
and
into
imul
cmp
lret
mov
dec
xor
dec
rcl
mov
jp
repnz
sub
xor
in
gs
push
cs
icebp
sbbb
add
mov
dec
jbe
iret
test
cmpsb
pop
pop
or
adc
push
push
mov
mov
mov
data16
std
out
in
cmpsb
popa
push
jp
pop
fcompl
dec
mov
popf
pop
addl
stc
insl
adc
push
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
int
repz
rclb
jle
das
les
roll
in
xchg
shll
sub
mov
inc
inc
jno
test
sub
sub
shl
pop
jo
push
test
inc
sub
ror
dec
adc
iret
and
jb
sti
add
jge
je
xchg
pop
sbb
cmp
sbb
arpl
adc
push
lcall
outsb
pop
xchg
cmpsl
mov
call
jecxz
cli
lea
mov
fstl
aad
call
xchg
dec
lea
push
jnp
popf
ret
stc
test
aas
movsl
pop
sub
sub
xchg
dec
in
push
icebp
xor
movsb
fdivl
pop
pop
dec
mov
jecxz
into
scas
adc
mov
fs
inc
add
or
shlb
pusha
sub
lods
mov
stos
fidivs
push
mov
movsl
insl
aad
push
mov
xchg
pop
out
popa
mov
stos
xchg
mov
and
xor
nop
dec
inc
aaa
dec
cmp
aam
mov
aad
xchg
in
push
push
ss
mov
iret
pop
xchg
xchg
push
insl
adc
xchg
push
call
cmp
es
int
mov
mov
lods
shl
mov
out
adc
scas
sarb
jecxz
aas
cmpsb
cmpsl
lahf
cwtl
xchg
sbb
leave
or
adc
divb
into
jle
aad
xchg
rclb
pop
test
iret
jle
imul
adc
int
xor
rcl
rcl
mov
gs
jb
dec
or
push
orw
js
nop
mov
sub
push
push
mov
mov
cmp
data16
mulb
add
arpl
lds
xor
jae
loopne
lea
hlt
fwait
xchg
in
xchg
scas
fdiv
ljmp
inc
sarl
imul
nop
xchg
ret
adc
mov
fs
inc
iret
stc
icebp
iret
das
or
test
mov
mov
int
jb
or
lahf
ds
stc
mov
push
mov
and
mov
ja
push
or
pop
rcr
rolb
lret
test
xchg
repnz
ljmp
mov
out
push
mov
insb
jb
mov
test
push
cmp
fs
mov
mov
pop
and
jo
lret
gs
xor
fisubrl
test
xor
mov
push
dec
in
cmp
clc
ss
in
add
enter
testb
push
sbb
daa
mov
xor
or
or
cld
cld
out
leave
ja
inc
mov
dec
or
aam
cli
sbb
mov
mov
and
js
push
or
shrl
shlb
xor
xchg
lahf
pop
mov
and
xchg
adc
or
out
mov
incb
gs
xor
mov
pop
cltd
inc
clc
cmp
push
adc
enter
ss
arpl
push
dec
sub
cmp
pop
std
bound
mov
ljmp
loop
sar
mov
test
push
aaa
fnstcw
mov
in
mov
push
push
xchg
data16
jne
mov
xchg
mov
push
jnp
hlt
jne
and
mov
pop
pop
mov
aad
inc
icebp
stos
add
scas
dec
int3
scas
jge
int
lret
out
pop
or
and
cwtl
fs
lret
cmp
bound
fistps
daa
pop
pop
cli
inc
adc
push
or
jecxz
pop
in
inc
mov
or
lcall
loope
stc
daa
movsl
jg
addl
in
xchg
cmp
push
jnp
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
pmovmskb
jno
lret
jle
jns
jle
loope
adc
enter
bnd
xor
mov
pop
jnp
mov
push
xchg
xor
jge
adc
test
and
popf
xor
dec
pop
and
cmpsb
ret
adc
cmpl
call
cli
in
inc
loopne
lock
arpl
and
jecxz
mov
imul
enter
inc
mov
nop
into
addr16
xchg
adc
sbb
jecxz
mov
ss
aam
int3
dec
pop
movsb
mov
insb
mov
in
jb
stos
jbe
adc
imul
mov
sarl
xchg
sbb
fidivrl
hlt
sub
cmpsb
mov
test
lods
ret
stos
push
repz
in
add
add
daa
mov
clc
sbb
lea
lea
jg
cmpb
sti
aad
jl
test
imul
or
xor
sub
add
ljmp
jnp
insb
shll
pop
cwtl
xor
lcall
mov
fmul
cltd
out
pop
sub
rep
pop
stos
add
or
xchg
pop
shr
andl
test
or
out
xchg
sbb
and
fs
adc
and
mov
dec
inc
mov
add
dec
push
push
mov
ja
inc
cli
sar
sbb
sbb
push
fistps
das
scas
enter
data16
in
and
sti
pusha
sbb
aam
sub
cmpsb
cwtl
lcall
dec
add
leave
jb
xchg
dec
push
inc
test
push
adc
out
mov
or
subb
sub
mov
xchg
push
cmp
movsb
push
adc
jp
push
testb
and
fisttpl
mov
cltd
out
sbb
nop
jp
icebp
lds
and
aam
inc
mov
mov
adc
stos
sti
inc
adc
cld
and
mov
aad
jmp
pop
imul
add
stos
in
pop
cmc
mov
cwtl
xchg
ret
inc
inc
jae
fidivl
jl
jne
mov
lds
or
add
outsb
add
fsubrs
iret
cmp
push
jae
gs
xchg
out
sub
jb
pop
je
incl
insl
or
sbb
dec
jp
cmp
jbe
xor
out
add
mov
sub
fistpll
mov
pop
jl
test
jb
dec
mov
pushf
pop
xchg
outsb
adc
loop
pop
and
xchg
test
adcb
mov
sbb
xlat
and
inc
jp
cli
scas
inc
pop
lret
ja,pn
shll
dec
xlat
repz
pop
pop
or
stos
aad
lcall
xor
pusha
setae
mov
fucomp
loop
shlb
dec
cmp
lea
xor
call
arpl
mov
iret
add
insl
add
ljmp
sbb
stc
pop
xor
in
sbb
or
add
xchg
lods
add
or
xchg
mov
rcrl
outsb
test
lds
pop
or
js
pop
pop
mov
scas
popa
xchg
or
jp
adc
sub
test
adc
fsubrl
fwait
in
adc
adc
push
push
cltd
mov
or
jb
or
stos
in
mov
decl
pop
and
dec
fnstenv
mov
arpl
enter
push
add
mov
pusha
stos
mov
mov
fsub
shll
les
imul
dec
jno
sti
arpl
rol
aas
xchg
dec
mov
pop
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
mov
or
jle
jo
jle
pop
mov
aas
fsubrl
lahf
pop
stc
xchg
xor
paddsw
jno
insb
mov
por
cmp
pop
and
add
in
sbb
sub
push
scas
mov
xchg
outsb
popf
inc
hlt
lods
pop
add
add
cld
pushf
jge
dec
ja
push
adc
add
sti
sub
push
pushf
mov
stc
imul
popa
jecxz
fimuls
jp
mov
into
pop
jb
or
fdivr
mov
sub
push
insl
adc
lret
pop
xor
cs
out
fs
aaa
lods
fcoml
lahf
icebp
dec
pop
ficomps
mov
in
cmc
jno
popf
mov
cli
xchg
sbb
and
push
mov
fwait
mov
sub
into
xchg
cmc
push
pop
roll
cmp
mov
jmp
push
enter
adc
ret
mov
xchg
enter
jge
int
hlt
fwait
xor
pop
and
lds
add
or
jge
xor
pop
adc
scas
mov
cmp
movsl
leave
adc
lret
les
aas
ja
jge
xchg
pop
int
mov
repz
jnp
jmp
sbb
lahf
add
lcall
cmpb
lock
sbb
push
fistps
inc
pop
imul
fcoml
repz
int
or
cmc
and
cmp
and
leave
lods
and
inc
stos
jecxz
ja
lahf
lret
cmp
ja
jae
stc
imul
lret
hlt
cmp
mov
push
ds
pusha
xchg
mov
js
or
jne
jns
les
pop
add
inc
ljmp
test
add
ja
dec
mov
jge
lret
mov
lods
loop
jae
divb
andl
sbb
rol
fucom
add
inc
popa
jmp
and
xor
fwait
dec
cmp
inc
add
xor
outsl
cmp
jmp
xchg
and
or
and
xor
mov
sub
adc
jns
push
movsl
dec
sahf
adc
cmp
xor
test
lods
sti
jb
or
push
sbb
cmovnp
fsubp
jmp
cltd
push
sub
mov
sahf
mov
in
inc
loope
int
inc
mov
mov
lahf
out
inc
scas
mov
out
fildl
jle
sub
das
aaa
ret
mov
jge
lock
mov
cmpsl
mov
pop
repz
sub
lahf
lahf
leave
add
repz
sbb
inc
sbb
adc
add
sub
mov
mov
nop
xor
pop
cmp
sbb
mov
imul
pop
push
in
pop
pusha
add
sbb
in
or
loope
dec
popf
data16
fadds
into
xor
aas
sbb
iret
cmp
mov
mov
stos
jp
pop
mov
lds
dec
lods
mov
sbb
fxch
roll
or
pop
in
cs
sub
dec
sbb
adc
mov
lret
mov
and
lgs
pop
cmp
insl
cmp
call
shll
out
mov
or
mov
insb
mov
push
push
push
pop
nop
or
scas
inc
jbe
add
js
out
sbb
sbb
inc
shll
jmp
rcrb
mov
xchg
jp
mov
cmp
aad
iret
int
sahf
mov
xchg
mov
jo
mov
adc
out
push
sbb
shrb
scas
por
inc
in
fnsave
adc
in
push
or
mov
je
push
sarb
lahf
je
sub
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
cs
dec
inc
lcall
stos
mov
push
jecxz
rorl
sbb
and
jnp
adc
add
cmpsl
loope
cmpsb
inc
xchg
test
shll
xor
cltd
mov
or
xorb
sub
movsl
loop
mov
cmpl
pusha
dec
sub
cltd
or
lods
ret
pop
insb
outsl
sbb
ret
push
push
pushf
dec
jnp
cmpsl
sbb
xchg
js
out
pop
xchg
pop
pavgw
insb
aas
adc
icebp
mov
mov
test
jle
mov
or
mov
mov
mov
add
or
out
add
sbb
cs
sub
xchg
mov
push
cld
mov
mov
icebp
das
je
mov
jo
insl
sub
adc
add
mov
lret
loop
xor
lret
inc
inc
in
out
jl
andb
xor
cwtl
add
data16
mov
shr
int
xchg
out
vpsubd
cs
mov
lock
call
mov
sub
and
add
daa
decb
xor
pop
mov
ds
adc
pushl
outsb
and
test
xor
add
push
push
fs
sbb
std
dec
inc
mov
test
les
pusha
cwtl
adc
add
push
rcll
cmp
jne
data16
lret
fs
sbb
lcall
xchg
adc
ljmp
pop
add
cmpsl
add
sbb
ja
sar
daa
rolb
dec
scas
js
adc
lods
xchg
pop
into
mov
jge
leave
cmp
dec
gs
es
cmpsl
loop
adc
hlt
xacquire
dec
leave
repnz
rcr
mov
and
loopne
idivb
sub
pop
ja
pushf
xor
lahf
js
sti
xchg
scas
pop
test
cmp
sub
and
pop
out
xor
fwait
in
subl
push
fdivrl
fcomip
jne
scas
ret
push
mov
adc
dec
fisubs
rclb
xor
jns
mov
mov
rcll
das
popf
dec
iret
iret
add
push
adc
notl
mov
lret
leave
bound
adc
mov
jb
jbe
push
pop
dec
addl
lock
arpl
lret
cli
pop
lods
sub
int
cli
addr16
mov
cld
inc
push
in
out
xchg
fstpt
popa
popf
mov
fcomip
sbb
push
mov
mov
sub
clc
into
push
stc
push
add
sahf
cld
push
das
scas
sahf
mov
aaa
push
ret
nop
ja
lea
mov
add
push
testb
xchg
lods
popf
clc
sub
add
shll
pop
adc
add
cmp
inc
stos
pusha
push
lods
xchg
or
add
popa
xchg
fcoms
and
loope
lock
cmp
mov
dec
or
rolb
dec
cwtl
or
lds
inc
pop
cmp
jg
fdivl
push
call
stc
jmp
pop
sahf
insb
shll
outsb
inc
pop
outsl
pop
inc
iret
pop
pushl
sti
mov
xor
ret
jl
sbb
mov
movsb
add
sub
in
push
repz
push
rcrl
mov
fistl
dec
int
aad
adc
mov
inc
lods
addr16
ljmp
gs
mov
xchg
mov
jbe
clc
leave
addr16
call
inc
xor
jno
and
loop
cltd
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
cmp
jle
movsb
cmp
das
pushf
xor
mov
mov
pop
loopne
mov
inc
daa
in
cmp
cmpsl
pop
repnz
push
push
pop
out
jbe
movsl
lock
add
adc
mov
aam
outsl
test
push
sbb
loopne
inc
mov
bound
and
mov
dec
repnz
inc
nop
icebp
rclb
dec
xlat
repz
rcrl
jo
jns
sub
cmpsl
mov
dec
test
push
scas
fcmovnbe
mov
and
mov
or
test
mov
jb
fsubl
shrl
sbb
cmp
inc
xchg
mov
nop
add
cli
stc
cmp
sbb
insb
test
add
mov
inc
mov
and
fs
add
xchg
out
jno
stc
mov
mov
fnstsw
lea
adc
adc
pop
or
xchg
cmp
sbb
in
cmp
repz
lods
mov
jge
dec
mov
xchg
and
xchg
scas
pop
adc
nop
sti
je
mov
cmpsb
sbb
xchg
ror
mov
popa
sub
cmp
jecxz
mov
loope
xor
cmp
sbb
sbb
push
dec
xchg
mov
fadds
xor
into
mov
dec
add
pop
inc
push
andl
arpl
rcl
dec
adcb
cmp
iret
inc
mov
or
mov
or
in
push
jo
push
mov
in
mov
mov
inc
adc
xchg
and
mov
lock
inc
popa
aas
enter
loope
rcrb
ret
lea
inc
jb
cmp
es
push
xchg
pop
adc
les
les
or
popf
adc
mov
push
popf
hlt
repz
jae
inc
stc
mov
fdivl
jp
and
test
add
lods
mov
add
mov
mov
aam
and
outsb
sub
shrb
xor
ror
cmp
ss
or
aam
in
mov
xchg
daa
in
xchg
adc
out
negl
negl
je
cmp
std
sbb
fcoml
mov
xor
movsl
sarl
mov
jns
push
push
push
aas
rolb
call
sbb
enter
dec
add
lret
dec
fsubrs
push
lahf
repz
mov
adc
dec
jl
pop
nop
pop
push
dec
inc
lret
mov
push
dec
pop
bound
xor
call
imul
jg
rol
adcl
pop
xor
push
scas
adc
fs
and
adc
in
test
adc
adc
pop
popf
pop
stc
jge
cs
fdivl
xchg
push
js
xor
push
repnz
outsl
gs
jge
ds
cmp
stc
xchg
out
jno
jne
push
in
sub
fwait
into
jecxz
inc
les
mov
pop
dec
out
ss
sbb
sahf
mov
push
les
cmpsb
and
push
sbb
test
push
insb
xor
sub
outsb
negb
pop
gs
push
xor
cmp
decb
gs
sbb
lret
stc
or
out
std
xacquire
sub
stos
inc
jge
sbb
push
and
stos
jecxz
jnp
js
xor
jecxz
inc
cmc
adc
and
in
cmp
mov
test
mov
adc
sbbl
xchg
sbb
mov
sbb
or
push
cmp
frstor
lret
pop
sarb
mov
movsb
push
push
arpl
lret
push
push
jnp
arpl
bound
test
and
xlat
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
pop
inc
pop
xor
jle
pop
xchg
lcall
pop
into
mov
jl
cmp
testb
mov
adc
fs
outsl
popa
dec
les
pop
ds
bound
mov
cmp
lods
sub
mov
cmp
adc
into
push
or
frstor
pop
push
jno
mov
clc
incl
insb
sub
sub
std
dec
pop
add
sub
out
pushl
stos
cmp
pop
outsl
sbb
cmc
xor
and
cmpb
idiv
push
mov
lea
arpl
out
sub
adc
fiadds
sbb
push
jp
push
sub
mov
jmp
or
mov
jb
rcll
stos
push
xchg
dec
fwait
nop
cmp
test
shrb
addr16
ret
push
cmpsb
xchg
roll
or
imul
lret
ret
in
add
jne
cmpsl
and
sbb
sbb
add
push
scas
xor
loop
jne
push
mov
or
shrl
xor
js
nop
dec
mulb
fsts
lods
cmp
addr16
adc
adc
test
mov
sbb
addr16
lahf
popl
cmp
sbb
cmpsl
mov
sub
add
xchg
pop
enter
push
insl
xor
in
push
xor
incl
adc
jns
std
or
js
dec
xchg
stos
adc
cmpsb
pop
push
fsubs
imul
daa
cltd
mov
cmpsl
xchg
sub
lods
cmpsl
xchg
sbb
xchg
lods
add
jecxz
adc
xor
push
movsl
testl
stos
insl
sahf
mov
insl
xchg
jmp
pop
xchg
jno
inc
xchg
test
mov
dec
pop
popf
and
out
rcr
sub
repnz
cmpsl
fisubrs
outsl
jecxz
and
jae
xor
pop
test
mov
fcom
push
mov
ds
sub
sub
test
fimull
ret
dec
sbb
mov
mov
hlt
xchg
cld
inc
xor
jl
xchg
push
xor
jmp
mov
insl
inc
mov
addb
gs
or
aad
xchg
xchg
cwtl
mov
rcrl
push
push
inc
lods
adc
push
test
bnd
lock
loopne
fsubp
push
xchg
cs
mov
enter
cmp
in
lret
cmp
test
in
shrl
pop
mov
data16
push
int
xor
cli
adc
mov
lods
jne
xchg
cmp
jecxz
xchg
mov
loopne
rcrb
fldenv
in
movsb
inc
inc
push
and
js
adc
aaa
sbb
xor
filds
ret
mov
stos
repnz
sbb
imul
bound
je
xchg
pusha
test
fnop
cwtl
int
sub
fadds
mov
das
dec
sbb
fyl2x
filds
push
or
cmp
pop
dec
in
or
xchg
addr16
les
adc
mov
mov
movsl
mov
mov
lds
jnp
out
xor
cld
les
or
adc
adc
outsb
adc
pop
das
jbe
sub
xchg
add
loopne
dec
mov
shll
mov
jl,pn
lahf
frstor
sub
pop
and
cmpsb
and
jo
dec
add
leave
stos
push
xchg
jl
lock
test
xor
xor
cld
add
outsl
mov
mov
stos
subl
add
xchg
mov
jne
or
xchg
xor
xchg
aam
pop
aad
jb
xor
push
loopne
sarb
jmp
sahf
lcall
adc
and
push
jle
sbb
jle
jo
jle
mov
mov
fimuls
data16
dec
add
xchg
jge
or
popf
addr16
inc
or
rclb
add
shlb
and
loope
pop
movsl
xchg
xchg
cmp
mov
in
sub
add
pop
orb
pop
add
movsb
jl
xor
dec
into
lods
sarl
mov
cwtl
in
xchg
sub
out
pop
push
jns
xor
mov
ja
adcb
outsl
jg
sbb
jnp
sub
cwtl
pop
mov
aaa
test
jnp
cwtl
test
xlat
adc
sub
repz
aad
aas
jo
xor
push
lea
xchg
and
test
in
test
dec
test
out
add
sti
xchg
xor
sar
dec
push
pop
and
ficompl
das
jecxz
lock
lds
push
and
pop
cmp
jecxz
es
xlat
icebp
popa
hlt
mov
mov
lret
pop
xlat
jmp
aad
xorl
out
mov
enter
hlt
pusha
clc
inc
or
mov
clc
xor
xchg
mov
dec
fcmove
sbb
or
hlt
jno
fcompl
ret
rorl
cmpsl
mov
or
cmp
lahf
jecxz
jne
xchg
aas
push
loope
cli
cmpsb
loopw
cmp
mov
xor
mov
or
icebp
and
mov
xchg
dec
jge
xchg
mov
dec
xorl
push
aas
cmpb
in
incl
hlt
je
lahf
add
xchg
add
insb
idivl
sub
mov
out
leave
push
enter
mov
shrl
fcomip
aaa
imul
xor
mov
jno
pushf
inc
inc
jns
cld
push
inc
cs
enter
sub
test
leave
sbb
test
stos
adc
sets
outsb
cmpsl
cs
hlt
adc
cmp
jo
xor
pop
stc
or
sub
cmp
mov
fs
in
iret
xchg
addr16
push
lret
mov
mov
imul
arpl
jb
xchg
dec
adc
mov
and
lea
in
ror
lret
inc
sahf
fmuls
sbb
ret
jge
adc
outsl
pusha
in
xchg
jecxz
mov
int
inc
shlb
inc
fs
jl
outsl
mov
mov
loope
or
jnp
es
lcall
adc
or
add
movsb
mov
mov
push
jnp
jle
sub
popa
cmp
lcall
fdivr
imull
pop
dec
sbb
leave
or
insb
sarb
popf
pop
insb
fldcw
imul
dec
xchg
scas
int
pop
pop
or
mov
imul
mov
mov
jecxz
and
ret
jnp
mov
and
iret
sbb
cmp
fisubl
cmpl
jle
cwtl
push
pusha
pushf
clc
jne
push
pop
mov
in
lods
leave
mov
sti
movsl
popa
pop
mov
mov
hlt
in
xchg
pop
loop
lods
inc
push
lahf
mov
popf
jmp
xor
jecxz
ret
repz
mov
jg
je
mov
cmp
lret
popl
mov
inc
sbb
outsl
sub
cmp
push
sub
popa
cltd
push
clc
fidivrl
adc
sub
or
mov
push
pop
pop
loopne
mov
nop
pop
dec
pop
jae
pop
mov
pop
jecxz
xor
lret
movsl
mov
mov
cli
lcall
xchg
orl
lret
inc
push
outsb
and
sarl
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
jg
or
stos
jle
jo
jle
fcomi
ja
cld
jbe
fsubl
in
add
add
leave
cmp
inc
or
out
and
push
insl
stos
push
xor
dec
mov
mov
mov
jmp
xchg
jle
cmpl
dec
mov
outsl
pop
mov
sarl
pop
mov
cs
and
insl
mov
cmp
or
fs
mov
dec
rcll
fidivl
and
nop
and
lds
push
xchg
scas
inc
cmp
gs
cltd
add
jo
inc
pop
loopne
push
mov
add
mov
mov
jmp
fs
mov
dec
mov
je
bound
xchg
push
sbb
xor
xor
xchg
cmp
aas
jns
push
sub
mov
mov
in
cmpsb
push
imul
pop
and
dec
mov
jl
test
lods
pop
xlat
xor
lods
mov
lds
in
out
inc
and
in
dec
mov
shl
cli
inc
scas
repnz
arpl
jno
pushf
pushf
lret
jb
andl
cmp
push
pusha
sahf
das
xchg
negl
push
adc
inc
cmp
inc
inc
rcrl
pop
xchg
int
mov
jae
sbb
pop
mov
add
in
fwait
out
mov
and
leave
and
into
add
pop
jns
push
adc
jl
add
add
xor
cmpl
mov
mov
xchg
push
out
dec
movl
scas
lock
mov
and
lock
xor
inc
or
push
mov
sbbl
xor
loopne
adcb
sub
in
mov
ds
push
mov
jp
arpl
repz
cmc
lcall
push
arpl
icebp
rorl
pop
imul
ror
out
fstpt
jnp
ja
outsb
in
cmp
ret
pop
insl
dec
mov
xchg
and
out
inc
mov
and
jno
lods
insl
xor
or
shl
shlb
sbb
stos
fldcw
mov
cmp
jbe
xchg
push
dec
arpl
aaa
inc
sbb
xor
adc
lock
or
add
pop
pop
popa
dec
repz
dec
push
xchg
fs
cmp
movsb
mov
push
jns
adc
out
sbb
lahf
aas
xchg
ret
int
mov
mov
sbb
xor
outsl
xchg
mov
loope
dec
cs
cmp
sbb
imul
addb
loopne
jp
mov
loopne
and
nop
cmp
cld
cld
pop
mov
mov
sarl
insl
idivl
push
pop
and
ficompl
test
sub
fildl
mov
sub
dec
adc
mov
shlb
mov
gs
es
jp
ret
test
jns
inc
pop
push
add
or
imul
jp
in
int3
xor
fimuls
outsl
inc
rcll
or
int
adc
stos
cmpsb
arpl
dec
dec
in
icebp
int3
data16
shlb
inc
loop
xor
inc
and
or
add
inc
pop
incb
push
out
add
lret
dec
scas
out
enter
or
fcompl
jmp
ret
cmp
stos
cmpsb
in
stos
xchg
aas
arpl
outsl
sub
inc
lahf
inc
or
lods
pop
pop
repnz
subl
or
pusha
adc
out
imul
fs
lret
ja
xchg
jp
mov
push
outsl
ss
into
popf
cli
lret
mov
and
stos
fdiv
sub
cmp
sti
cmp
mov
mov
jae
pop
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
pop
je
and
jle
lcall
loopne
roll
insl
sbb
out
pop
sub
sti
data16
mov
stos
jae
les
mov
xor
sarb
dec
push
pop
stc
mulb
out
xchg
sub
jle
mov
das
mov
mov
lahf
pusha
fwait
mov
lret
sbb
in
aad
pop
xchg
jp
daa
je
fcoml
cwtl
sbb
adc
shrl
imul
scas
negb
adcl
jmp
cmp
mov
cmp
mov
out
xchg
scas
push
inc
out
mov
or
pop
jle
repnz
mov
test
jne
mov
loop
dec
xchg
pop
ror
negl
xchg
jle
pop
loopne
cmp
fisubrs
and
mov
or
xchg
es
stos
rolb
dec
leave
cmp
xlat
insb
pusha
and
data16
pop
adc
in
and
lahf
ret
sub
xchg
cmpl
iret
popa
pop
adcl
je
xchg
std
push
cmp
fmuls
gs
hlt
inc
push
sbb
push
cmp
cmpsb
xorb
pop
and
sbbb
lret
mov
jo
call
cmpsb
scas
js
xor
dec
and
fstpt
gs
shl
pusha
stc
mov
mov
add
fisubrs
xor
movsb
add
push
push
loopne
cmp
mov
scas
jno
pop
jo
popa
cmp
enter
mov
out
lods
inc
fcom
jge
sbb
add
xor
jle
mov
sahf
jmp
pop
test
xchg
in
in
addb
mov
mov
jnp
out
nop
mov
xchg
cmp
pop
mov
mov
mov
dec
das
adc
dec
and
dec
movsl
clc
inc
push
testb
mov
add
xlat
std
mov
iret
fnstsw
psubd
or
ficoms
push
popf
push
out
and
dec
mov
jle
out
lea
push
loopne
xchg
pop
jp
lahf
cs
push
xlat
inc
fidivl
mov
jecxz
ja
add
clc
mov
xchg
lods
out
repnz
jp
sbb
outsl
push
jb
lahf
stos
cmp
xor
sbb
push
mov
dec
ret
mov
out
subl
push
out
jmp
xchg
and
push
xor
dec
mov
and
pusha
cmpsb
push
xchg
movsb
sbb
dec
jae
test
out
fdivrl
inc
mov
mov
insb
test
push
rorb
xorl
ljmp
outsl
mov
jp
jno
pop
cmp
mov
sub
ds
test
adc
mov
jge
mov
sbb
ss
sub
cmc
mov
and
lock
push
movsb
xor
cwtl
xchg
jle
aad
repz
cmp
and
jo
pop
sahf
cltd
xchg
pop
sbb
push
aas
xor
xchg
add
adc
or
outsl
or
add
xlat
mov
mov
je
dec
lret
std
push
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
or
mov
jle
jns
jle
jle
inc
std
cmpsb
loopne
in
sbb
jb
and
or
xchg
into
enter
xor
dec
jmp
movsb
push
fiaddl
fisubl
aad
je
mov
jns
inc
lea
lret
xorl
inc
ds
mov
jecxz
sub
das
dec
sbb
sub
push
add
lcall
cmp
push
les
addl
repz
dec
je
adc
xchg
fs
out
push
sub
and
jmp
mov
mov
mov
int3
addr16
push
ja
sbb
cmp
int3
adc
sti
enter
enter
stc
and
outsb
clc
pop
mov
xorb
enter
xchg
movb
mov
clc
sub
call
cmpsl
in
mov
out
xchg
sub
jo
add
ret
mov
fsub
push
cmpsl
fnsave
jbe
inc
pop
lahf
std
inc
push
lcall
jg
or
pop
mov
bound
adc
or
adc
mov
push
jl
cmp
je
or
in
pop
insl
jae
push
jae
dec
in
adc
subl
pop
jae
and
dec
ds
push
rcr
jo
cmpsl
cwtl
sbb
xor
mov
mov
and
cmp
mov
fidivrs
xor
cwtl
push
mov
rclb
rcll
pop
and
int
dec
jmp
push
jns
dec
mov
shrl
mov
lds
cmc
xchg
insb
out
fprem1
insl
lods
cmp
mov
mov
movsb
inc
movsl
je
lea
sbb
mov
aas
dec
push
ret
inc
pop
sti
push
pop
jmp
mov
xor
ss
push
xchg
in
cmpsl
in
test
leave
daa
sbb
adc
mov
jbe
jg
jle
or
test
pop
or
push
adc
sbb
cli
stos
jb
imul
arpl
or
lock
stos
inc
sti
rcl
pop
aaa
out
out
sub
jmp
int3
out
push
nop
mov
in
sub
mov
pusha
test
push
push
fisubl
mov
mov
push
lret
movsb
negl
push
ficompl
push
dec
jmp
push
out
and
or
dec
lds
dec
adc
push
xor
std
or
sbb
lods
faddl
push
popf
lods
add
jg
sub
mov
sbb
add
jo
sub
pop
or
test
push
pop
pop
icebp
sti
in
jg
ds
push
fs
sbb
or
jno
jae
mov
pop
mov
wrmsr
push
out
dec
xchg
lods
lahf
je
fldt
mov
dec
or
cli
mov
jl
adc
adc
or
aad
mov
xchg
push
in
inc
popf
adc
pop
ds
pop
xchg
inc
dec
repz
mov
mov
sbbb
test
mov
rol
mov
jo
lea
std
ficoms
xchg
sub
dec
call
jbe
jl
popa
pop
cld
adc
int3
jmp
add
or
xor
dec
inc
inc
add
movl
inc
inc
add
rol
popl
add
add
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
sub
add
mov
jle
loop
add
stc
ret
jns
fiadds
sub
push
push
xchg
fldl
outsl
dec
jmp
call
iret
ja
xchg
pop
add
sub
loopne
and
out
pop
sti
movsb
push
les
mov
pop
or
add
push
or
xchg
divl
jl
sbb
out
sarb
pop
pushf
xchg
rcr
sahf
jnp
mov
xor
pop
mov
cmp
ds
dec
enter
addr16
scas
int3
cmp
scas
xor
jmp
lahf
pop
fldcw
xchg
mov
xchg
add
pop
lahf
sbb
pop
jl
push
inc
sub
cmc
test
jne
cmpb
insl
call
mov
lret
loopne
and
hlt
inc
mov
cmp
inc
mov
call
cli
cltd
js
jecxz
cli
out
fldenv
mov
jb
rorl
mov
arpl
cmp
pushf
mov
mov
mov
nop
or
ss
scas
test
in
xchg
cli
mov
outsb
or
dec
out
out
sarb
popf
movsb
cmp
pusha
xlat
out
jne
mov
aam
and
mov
cmp
push
cmp
lods
jge
gs
sub
fnstcw
inc
jne
ret
mov
out
pop
lahf
xor
and
or
sbb
ret
lret
lods
sub
sahf
jg
fidivl
insb
leave
call
xchg
in
enter
lret
pop
sahf
out
dec
cmpsl
mov
push
jg
pop
pusha
jg
dec
mov
addb
int3
mov
dec
jne
int3
in
test
push
imul
jo
mov
add
js
dec
add
sbb
fdecstp
dec
mov
mov
fstps
fwait
and
sub
ficoms
dec
rcrl
in
dec
rcrl
imul
idivl
js
fcoml
les
sub
fsubs
jle
jb
mov
insl
popa
sub
sti
fcomps
std
mov
int
xchg
dec
dec
push
aaa
shr
mov
lods
inc
movsb
dec
and
dec
pop
mov
xchg
push
and
iret
mov
shr
sub
jge
lcall
push
lret
mov
push
push
mov
add
inc
call
xor
cmp
xchg
lods
frstor
sbb
jne
mov
inc
jbe
xchg
test
pop
lret
dec
out
ja
loopne
adcb
iret
add
push
pop
jne
dec
jnp
xor
jg
mov
js
mov
mov
mov
inc
outsl
mov
and
imul
mov
or
shll
dec
mov
scas
std
mov
pop
dec
addl
lock
out
cmp
lea
fstps
and
dec
dec
xchg
repnz
pop
mov
push
ret
sti
mov
jp
push
push
xchg
inc
jb
addr16
pusha
cmc
cmp
ja
mov
and
jp
xor
hlt
xchg
aaa
cmp
pop
aad
mov
jb
imul
out
push
add
mov
ficompl
loop
loope
fimull
adc
outsl
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
rorb
jle
hlt
jns
jle
or
sahf
iret
cmp
jnp
test
sub
out
les
jo
add
dec
int3
jae
xchg
in
push
les
xor
push
mov
test
outsb
fsubrl
hlt
add
ss
jecxz
jecxz
stos
pop
jecxz
add
lods
mov
mov
jg
mov
mov
data16
lods
mov
mov
jecxz
cs
pop
ds
xchg
jp
cmc
mov
push
inc
push
outsb
push
lret
xchg
enter
test
out
xchg
out
xchg
push
shlb
dec
lods
xor
stos
les
mov
lds
push
sbb
rcr
sbb
stc
push
jbe
imul
inc
psadbw
icebp
je
out
push
shll
lcall
cwtl
mov
cmpsl
xor
inc
sub
mull
nop
pop
jmp
and
adc
cmp
out
xchg
push
cli
stos
fmuls
and
add
jge
xchg
cli
call
popf
andl
push
popa
aam
iret
lods
cmpsb
pop
aam
clc
mov
xchg
pop
sub
call
adc
cld
dec
adc
filds
mov
jp
cmc
negl
push
jl
lock
adc
fcmovbe
or
es
adc
inc
cmp
jle
or
inc
hlt
jp
ds
or
fldenv
push
cmp
xor
mov
cmp
fmuls
pushf
cmova
sub
stos
rclb
xor
mov
cmpsb
push
jbe
xchg
insb
jo
mov
pminub
jg
and
aam
out
mov
fsubl
mov
mov
or
movsl
jb
popf
pop
loope
clc
test
xor
mov
or
roll
cmc
lock
call
lods
mov
add
lock
mov
dec
test
cmp
fsubrl
sub
sarb
pop
test
test
insl
adc
push
out
add
stos
push
adcl
xchg
shll
mov
mov
jge
adc
push
adcb
imul
inc
xchg
mull
in
bt
xchg
mov
loop
loopne
cmpsb
mov
mov
push
je
imul
clc
push
xchg
pop
inc
sahf
fs
pushf
pushf
mov
xor
call
stos
adc
adc
in
xchg
add
lock
pushf
movl
lret
mov
xor
lock
push
sub
cmp
inc
cmc
popa
xchg
or
sbb
je
ljmp
mov
std
mov
movsb
mov
lods
fidivs
xor
jo
mov
xlat
sbb
mov
lea
outsb
outsl
pop
shrb
fnsave
cli
mov
sub
cmp
mov
sti
dec
int3
cmp
xchg
les
mov
fwait
cmpsl
aaa
adc
mov
jnp
fdivl
mov
xchg
insb
add
mov
mov
test
mov
sbb
jp
test
add
rorl
pop
fimuls
mov
jno
pop
push
or
cld
xor
pop
jmp
push
clc
clc
mov
test
adc
inc
jle
hlt
jns
jle
aad
pop
bnd
dec
push
lcall
stos
pop
fmul
pop
dec
add
cmp
ror
popf
sti
stos
jno
fsubs
pusha
sbb
in
xchg
imul
lea
xchg
mov
mov
sub
iret
mov
out
cmpb
cmp
in
cmp
addl
pop
xlat
mov
loopne
and
cmc
dec
sbb
jb
fisttps
mov
aam
jmp
xor
imul
mov
ss
fcomps
test
jo
jbe
sbb
dec
hlt
dec
pushf
push
or
xchg
popa
enter
pop
icebp
pop
pop
clc
aad
fstps
jb
or
test
push
pop
shrb
sub
mov
cld
lods
pop
or
sub
push
rcrl
or
add
mov
repnz
das
add
aaa
adc
sbb
movsl
loope
pop
sbb
jae
clc
cmp
lock
mov
outsl
pop
add
or
jb
push
je
lret
push
jmp
lret
push
mov
push
call
enter
mov
xor
imul
fsubl
testb
jl
arpl
pop
pop
aas
in
or
mov
repnz
je
cmp
movsb
pushf
xchg
test
add
jb
int
inc
pushf
xor
sbb
and
mov
mov
in
out
aad
and
pop
popf
jo
push
pushf
xchg
mov
or
adc
jnp
sbb
mov
xor
pop
inc
jg
jmp
mov
scas
outsl
out
rcll
jne
mov
and
xchg
mov
je
pop
and
das
sbb
in
add
dec
sbb
or
dec
fcmovnu
iret
push
push
mov
mov
sbb
out
movsb
outsl
subb
dec
xchg
and
insl
scas
arpl
addb
and
sub
mov
fnstcw
loop
stos
pop
xlat
inc
popa
je
cmp
or
or
lods
int
ss
cmp
jno
ljmp
sub
push
push
std
adc
mov
in
cmp
shll
pop
js
clc
adc
je
insb
pop
loop
insl
sbb
mov
cmp
les
push
inc
mov
rclb
xlat
push
test
dec
inc
adc
and
sub
push
fcmovu
sbb
in
xor
xor
jge
fdiv
inc
pushf
sub
fnstsw
adc
pushf
push
cltd
leave
jecxz
out
mov
jb
sbb
xchg
cmpl
adc
shll
ret
jns
sbbl
bound
jecxz
add
xchg
cmp
stos
jns
enter
sbb
nop
fwait
inc
jp
push
popf
adc
jmp
mov
aam
lea
dec
cmpl
add
sub
nop
pop
lcall
cltd
push
movsl
in
mov
jb
xor
dec
xchg
adc
or
pop
mov
xrelease
mov
dec
sbb
je
mov
leave
jno
orb
xchg
mov
pop
xchg
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
into
pusha
and
pushf
jg
jle
call
jb
scas
cmp
out
shlb
aam
xchg
outsb
jl
pushf
testl
shll
inc
lods
or
jge
inc
fsts
jmp
jl
cmp
lds
push
fcomps
out
jl
sub
xchg
xchg
popa
mov
xchg
iret
testl
test
test
imul
cwtl
das
and
les
pop
mov
insb
mov
aas
sti
sub
xor
icebp
add
inc
dec
shl
inc
ret
dec
dec
lods
pop
mov
xor
js
cmp
inc
and
inc
les
sbb
jecxz
in
popf
adc
add
push
cmp
pop
fmull
or
fstpt
sub
test
jb
in
scas
fldenv
add
mov
sub
fsubs
aad
and
sbb
inc
dec
repz
jo
push
out
jg
mov
fs
fsubl
push
cld
mov
ja
xor
nop
in
inc
hlt
popa
out
loopne
movsb
jbe
mov
pop
aaa
sub
outsb
xchg
loopne
sub
scas
jo
pop
popf
in
xchg
movsb
aaa
jb
push
test
jbe
popa
push
jle
jge
dec
mov
xchg
outsb
or
inc
sbb
arpl
test
sar
push
inc
xor
xchg
add
pextrw
mov
jmp
das
lods
js
jns
pushf
int3
pusha
jp
adc
cmp
mov
adcb
xchg
pop
cmp
idivb
cmp
inc
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
xor
inc
fcoms
jle
pushf
jg
jle
pop
xor
jns
inc
decl
xor
sub
repnz
lods
cmp
in
pusha
mov
cmp
adc
pushf
pop
gs
flds
das
aad
lret
test
daa
xor
jno
stos
mov
pop
mulb
jmp
fisttps
dec
mov
sub
inc
inc
inc
add
mov
cmp
mov
and
inc
push
test
xor
and
popf
jecxz
leave
xor
vmovdqa
cmc
lock
loop
cli
jbe
jecxz
shrb
daa
fisttpll
jno
pop
out
clc
jae
sbb
in
pop
aas
mov
hlt
sub
mov
das
jp
xorb
imul
xorb
sub
mov
pop
jae
mov
inc
add
pusha
and
sbb
loop
pop
scas
aaa
and
jle
xchg
jecxz
add
pop
ljmp
movsb
arpl
cld
mov
cmpsb
mov
div
in
popf
cmp
xchg
inc
adc
sbb
xchg
add
pop
fisubs
or
fdivrp
iret
loope
and
push
mov
fwait
aaa
cmpsb
pop
fwait
sub
ja
ljmp
cmp
sub
pop
dec
cmpsl
fsubrp
fdiv
scas
ja
sbb
lcall
lods
xchg
in
cmp
or
mov
pop
cmp
sbb
roll
movl
xchg
call
cld
push
sti
push
clc
xor
ss
divl
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
ret
stos
inc
jle
popf
js
jle
fchs
mov
pop
xchg
xchg
xor
stos
cmpsl
ficoml
loopne
xchg
sbb
dec
ljmp
test
inc
lahf
lret
inc
test
and
mov
mov
or
push
ret
fidivs
sbb
call
push
subb
jno
mov
ds
sbb
fcoml
xchg
jecxz
data16
inc
mov
jne
and
sbb
xor
xor
sub
pop
hlt
cld
rclb
rclb
push
pusha
ljmp
sarb
jo
add
dec
mov
orb
push
pop
pushf
fnsave
pop
adc
xchg
or
int
ret
pop
mov
xlat
loope
push
ljmp
and
test
or
sarb
imul
sbb
inc
mov
push
movb
int
cwtl
push
or
mov
andl
ja
cmp
jno
decb
inc
rorl
cmp
sbb
push
pop
out
iret
push
les
in
inc
push
push
and
fdivl
adc
repnz
shlb
iret
rolb
insb
jmp
test
mov
enter
cltd
mov
stos
rcl
test
push
and
test
inc
cmp
fs
ja
adc
adc
ds
push
mov
pop
mov
mov
jno
and
adc
push
sbb
nop
out
test
and
stos
ret
ja
xor
addl
pop
dec
sbb
mov
lock
lret
or
sub
pop
mov
test
jb
mov
or
stos
iret
arpl
ds
push
shl
iret
jmp
mov
aam
into
xor
jb
jae
in
sbb
shll
insb
in
adc
scas
jge
insl
out
out
adc
mov
cmp
or
adc
jp
and
bnd
dec
push
cltd
in
mov
cld
and
jne
sahf
or
jb
mov
clc
mov
push
inc
sbb
repz
cmpsb
dec
out
pop
fwait
mov
or
and
insl
bound
and
push
mov
xchg
push
mov
cmp
dec
add
sbb
lds
sub
scas
mov
test
jo
cmp
dec
adc
add
inc
or
inc
cld
cmp
or
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
mov
ds
in
out
push
hlt
ja
mov
lods
test
xor
iret
sub
and
jle
and
insb
pop
divl
pop
xchg
cwtl
cltd
stc
mov
divb
fcoml
imul
cmp
inc
mov
xchg
repz
and
mov
into
dec
jo
dec
lahf
jle
pop
mov
jmp
sub
adcb
mov
es
inc
and
sub
fadd
sub
mov
sbb
jno
sbb
data16
roll
push
aad
test
iretw
cmp
cs
orb
fwait
sub
popf
sahf
push
dec
mov
popf
jl
mov
iret
repz
fwait
out
lahf
ficomps
mov
jge
scas
arpl
je
push
outsb
ret
movsl
lds
add
push
xchg
jb,pn
xchg
shll
xor
int3
fmul
fwait
dec
inc
ljmp
xor
mov
jno
inc
pop
into
aam
push
push
xlat
ret
addl
push
outsb
leave
ja
sarl
and
add
jp
ds
call
push
mull
sbb
jecxz
xor
cmpsb
jns
jne
jne
cmpsl
xchg
xor
push
fisubrl
add
lcall
jp
cwtl
add
pop
mov
jbe
addr16
enter
xchg
and
xor
jge
int3
lock
call
and
dec
jno
pop
jmp
imul
subl
inc
inc
into
adc
cmp
pop
es
dec
out
lahf
loopne
inc
shlb
and
sbb
mov
push
inc
dec
ret
pop
scas
rol
popf
sbb
repnz
push
jae
inc
fld1
mov
cli
inc
addb
inc
lock
hlt
jecxz
mov
clc
aam
xor
out
jae
inc
movsb
jle
outsl
mov
popa
inc
arpl
adc
dec
jbe
add
jl
cs
mov
stos
cmpsb
mov
xchg
subl
xor
jg
jb
imul
adc
adc
mov
jnp
xchg
cmp
js
addr16
mov
out
jmp
xor
arpl
test
jns
xchg
pop
sbb
inc
jne
pop
test
out
je
cmp
push
pop
lds
int
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
out
push
js
jle
arpl
add
jg
sti
dec
bound
fldt
xchg
loopne
shll
or
mov
jle
fldcw
mov
cmp
and
fmull
call
cs
ret
popf
and
or
data16
test
add
xchg
repz
fcomps
adc
dec
daa
xchg
out
sub
dec
pushf
xor
pop
fwait
aam
int
mov
mov
inc
repz
je
subb
ja
xor
in
out
notb
mull
push
mov
jg
imul
lods
repz
enter
stc
jno
inc
jae
dec
lods
inc
in
inc
lahf
loop
aaa
scas
flds
aad
leave
in
fwait
xor
and
lea
in
cmp
jl
imulb
ja
dec
inc
in
cli
push
insl
lret
jp
out
push
sub
dec
dec
faddp
int
cmc
in
sahf
sbb
clc
aam
daa
leave
sub
popf
sbb
xchg
sub
repz
sub
je
mov
add
xor
int3
mov
push
rcrb
cli
push
pop
dec
or
pop
cmpsl
pop
loopne
xor
popf
mov
adc
push
cmpsb
xor
sub
sub
bound
les
aas
mov
sahf
sub
sbb
je
test
mov
in
pop
or
push
daa
mov
mov
cmp
gs
adc
pop
icebp
mov
movb
call
xchg
shrb
push
in
mov
xchg
lods
sub
mov
cmp
or
sbb
jmp
inc
push
mov
ret
xchg
mov
pop
fisttpl
imul
out
pusha
and
iret
cmpsl
test
scas
xor
fsubl
add
mov
xchg
pop
rcr
in
pop
adc
add
fnsave
ret
sbb
xchg
inc
add
sbb
lock
xor
lods
rolb
aas
push
and
inc
inc
cltd
dec
insb
pop
mov
loopne
clc
lret
adc
jecxz
out
inc
sub
mov
jmp
lret
js
mov
fwait
dec
into
push
lcall
fwait
xlat
sub
outsb
jmp
cmp
xor
cmpsl
pop
ret
xchg
push
test
dec
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
divl
jle
jg
jle
leave
and
mov
pop
sub
mov
insl
mov
mov
push
xchg
add
sarb
sub
into
stc
pusha
pop
pop
dec
or
loop
sub
push
mov
scas
fs
cmp
jno
pop
jo
add
sbb
out
pop
mov
push
add
rolb
movaps
cmp
inc
fistpll
mov
xchg
sbb
adc
jle
and
scas
or
sbb
nop
xchg
sbb
mov
lods
mov
stc
xor
test
aaa
aad
bound
sbb
inc
jge
data16
or
dec
fs
push
out
jp
in
jae
out
and
push
lret
lret
cmp
loope
xorl
xor
popa
pop
sbb
lret
mov
dec
cmpsb
leave
out
testl
adc
shll
push
insb
ficoms
xor
push
jo
add
hlt
push
jne
xor
cmpsb
movsl
cmp
add
inc
cmpsb
push
push
dec
fcoml
in
xchg
aam
mov
lret
outsl
xchg
sub
in
ret
ljmp
loope
pop
push
test
lahf
push
pop
add
loope
insb
sub
iret
lret
cmpsb
cmp
jae
insb
mov
dec
ret
ret
and
insb
inc
push
sub
ljmp
push
scas
ds
mov
jmp
sti
xlat
xchg
pop
std
push
mov
xor
or
arpl
mov
ss
call
aad
xchg
mov
add
outsl
popa
nop
pop
out
mov
jno
pop
mov
push
je
pop
xor
insl
fisubrl
mov
sbb
mov
sbb
lods
out
dec
call
jne
lds
lods
data16
insb
movsb
push
push
sbb
fildl
mov
mov
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
testl
jle
jg
jle
and
insb
out
fisttpll
fwait
sbb
nop
pop
popl
mov
adc
out
adc
push
mov
cld
cmp
adc
rcrl
or
adc
mov
sbb
imull
cmc
or
arpl
inc
and
mov
mov
jnp
dec
jnp
sub
or
mov
cmp
test
ja
cmp
fcomp
lea
mov
arpl
decb
mov
xchg
clc
and
inc
dec
movsl
pop
lods
sbb
in
dec
pop
icebp
outsl
ret
mov
adc
scas
sbb
adc
cmp
inc
enter
push
push
sahf
mov
jg
push
xor
add
addl
push
and
js
xor
xor
xchg
scas
inc
in
xchg
hlt
sbb
xor
inc
jae
les
decl
mov
enter
xor
arpl
aam
push
sub
adcl
mov
pop
orb
lret
add
out
jbe
lods
mov
or
mov
insb
mov
icebp
je
leave
or
push
outsb
sbb
and
rcl
dec
cmpsb
or
cld
out
jle
jp
and
test
lods
fs
lods
icebp
fdivrs
cmpsl
mov
call
movsl
mov
dec
out
fldlg2
sbb
aas
fwait
or
add
das
movsb
inc
dec
xor
push
loope
out
imul
push
jae
scas
jecxz
sub
pop
push
or
fisttpll
pop
test
ret
clc
sbb
fsubl
aam
lcall
pop
fpatan
push
shlb
cmpsl
rcrb
scas
push
push
push
lahf
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
xchg
call
jle
pop
jg
jle
xchg
notb
xor
pop
mov
aam
xchg
insb
cmc
or
enter
adc
imul
fildl
aaa
xor
jecxz
cmp
and
fdivl
sub
out
mov
or
imulb
xlat
cwtl
test
dec
in
fdivp
mov
push
sub
icebp
scas
sub
jle
lock
cwtl
inc
adc
std
daa
jmp
push
mov
mov
mov
dec
push
sub
lcall
sbb
cmpl
pop
repz
push
adcl
lods
xor
fsts
jo
shl
rcrb
dec
hlt
add
mov
push
jo
lea
sub
aad
gs
lret
or
add
test
or
std
imulb
js
data16
pop
les
test
and
dec
cmp
leave
in
gs
shrb
shll
das
loope
push
xor
push
cli
inc
lods
inc
test
das
sub
mov
loope
add
inc
mov
sub
pop
pop
add
add
and
mov
jge
test
jge
or
nop
dec
ret
xor
push
vprotq
decb
fadds
fldcw
test
icebp
rclb
icebp
cmpsb
addb
mov
cmp
mov
xor
leave
lahf
pop
and
inc
or
xchg
dec
pop
lods
jbe
sub
fs
jne
arpl
lds
xlat
fisubl
pop
loop
pop
mov
addb
lret
pop
nop
loop
inc
jns
mov
das
loop
push
pop
mov
inc
notb
push
sbb
push
das
popl
mov
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
stos
and
jle
jg
jle
push
mov
and
xchg
xor
outsb
pslld
push
lret
icebp
cmp
lea
cmp
bound
dec
adcb
ret
cwtl
push
sub
nop
xchg
xor
mov
and
cmp
push
push
in
sbbl
lds
xor
xor
add
popf
testl
js
jl
mov
xchg
into
inc
ja
loop
stos
outsb
sbb
outsl
adc
mov
imul
mov
outsb
and
insl
enter
lea
scas
loop
test
mov
push
mov
nop
cli
testl
pop
mov
negb
jp
inc
imul
pop
loop
xor
mov
or
out
adc
push
pop
mov
dec
pop
pop
dec
lds
aad
sti
std
stc
sub
xchg
fcomip
jb
out
div
xchg
add
das
jg
test
icebp
aaa
and
mov
push
int3
push
jbe
popa
dec
inc
cmc
popa
gs
mov
jecxz
push
mov
pop
xor
dec
mov
jmp
out
loope
insb
xchg
shlb
aas
dec
sbb
adc
xor
cmp
push
jmp
insb
sbb
sub
ljmp
inc
cmp
out
cltd
pop
xchg
mov
fcom
addl
fstpl
mov
out
sbb
push
mov
xchg
xor
xor
fldcw
arpl
repnz
fisubrs
jmp
inc
dec
push
test
incb
aaa
data16
mov
movsl
add
cmp
jne
and
mov
sub
fbld
xchg
mov
in
imul
test
cmc
ret
xor
push
loop
and
xchg
gs
mov
mov
jmp
cmp
jne
xchg
mov
pop
cmpsb
inc
sbb
push
jle
pop
jg
jle
repz
insb
push
out
clc
cwtl
popa
xchg
test
add
insb
pop
cld
pop
and
dec
inc
clc
std
lcall
sarb
btc
out
cmp
inc
scas
jmp
popf
sbb
inc
lcall
push
fwait
ja
cld
pop
inc
mov
ret
stos
arpl
mov
inc
fwait
call
push
push
xorps
sbb
sub
loop
mov
int
subb
sbb
das
mov
inc
add
jbe
mov
movsb
push
and
addl
std
fs
out
dec
lds
add
sbb
pop
add
stos
jns
add
repnz
adc
inc
pop
adc
xor
mov
out
les
cmp
pop
xchg
sub
pop
arpl
repz
push
pop
cltd
movsb
inc
pop
cltd
and
sub
or
stc
mov
iret
aaa
pop
jnp
popf
pop
jge
add
in
hlt
call
sbb
push
ret
adc
mov
mov
orb
cmpsb
iret
xor
jmp
dec
mov
inc
mov
jne
pop
in
adc
insl
mov
cmp
mov
enter
jecxz
lds
popf
filds
dec
loope
mov
les
push
rcr
insb
mov
repnz
pop
call
leave
inc
testb
fwait
pop
fstpl
mov
inc
xchg
jecxz
xor
mov
inc
fwait
lahf
outsb
xlat
js
rcrb
pop
movsb
adc
push
mov
xchg
mov
push
je
popf
push
push
mov
inc
stos
mov
inc
call
dec
addr16
sub
mov
sbb
mov
xchg
mov
sbb
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
xor
jle
jle
pop
jg
jle
add
push
fidivrs
add
mov
fsubl
mov
push
cmc
jmp
add
cs
rcll
xchg
hlt
outsl
sbb
std
incb
sub
insl
stc
pop
jns
jno
pop
loop
sub
or
xor
jae
into
gs
test
ljmp
or
xor
and
test
test
xchg
mov
lret
mov
int
lea
mov
pop
and
jno
and
mov
adc
or
movsb
outsb
scas
mov
or
xor
inc
sub
outsl
test
or
sub
xor
mov
orl
push
shl
or
or
jge
pusha
into
sbb
cmc
jnp
push
sbb
xlat
adc
cmp
mov
dec
stc
mov
pop
push
mov
lods
pop
jne
add
das
mov
ja
dec
repz
push
loop
dec
cli
int3
icebp
cmpsb
lods
inc
pop
sbb
sbb
mov
jmp
popf
inc
dec
mov
pop
ret
xchg
cmp
inc
sbb
pop
add
es
mov
out
pop
push
and
rclb
shll
in
aaa
lods
mov
mov
or
sarl
mov
js
in
push
sub
pusha
repz
scas
lea
idivb
inc
in
cmpsl
jbe
mov
cmp
es
inc
cmp
mov
lds
shll
add
mov
mov
out
mov
dec
lods
pop
pop
add
mov
movsl
fldl
mov
in
mov
leave
push
mov
mov
scas
pop
jne
iret
add
sub
loop
or
cmp
inc
cmpsb
pop
adc
inc
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
mov
cwtl
inc
pop
pop
jle
pop
jg
jle
xor
push
add
cltd
add
data16
pop
idivb
jae
inc
int
dec
xchg
inc
and
xchg
mul
fsub
xchg
pop
int
movsb
mov
cwtl
mov
and
push
lock
adc
pop
xchg
sbb
imul
lahf
jnp
pop
ret
jbe
es
popf
enter
pop
addr16
xchg
sub
clc
sbb
inc
inc
fcoms
add
xor
mov
int3
icebp
and
test
dec
cltd
jne
scas
cltd
aad
adc
cmpsl
mov
mov
int
bound
mov
les
sub
into
dec
nop
and
fsubrs
daa
cmp
daa
add
int3
sub
loopne
fdivl
mov
inc
cmp
sarb
cmpsl
add
scas
into
iret
or
lahf
dec
sub
mov
jg
mov
xchg
push
cwtl
shl
adc
cwtl
fwait
int3
inc
aam
shl
and
sbb
test
cmp
arpl
jns
leave
jno,pn
insb
in
inc
insb
fistps
mov
jae
inc
out
mov
outsb
loopne
pop
pop
fnstenv
jl
pop
movsl
mov
jp
jo
das
out
cld
inc
jp
mov
and
mov
adc
jb
imul
cmp
jbe
cmp
ss
pop
dec
cmpsl
pop
push
cmp
std
nop
add
mov
les
fdivl
pop
xor
popf
enter
mov
sbb
nop
xchg
lret
notb
xchg
pop
arpl
sbbl
jo
call
shrb
es
pop
push
movsb
jl
add
adc
jmp
sbbb
pop
clc
xchg
or
xor
jmp
aaa
cmp
cltd
int
jno
ja
loope
es
and
pop
jg
jle
cmc
scas
sub
jbe
push
mov
aas
daa
pop
or
js
pushf
shll
aam
js
loopne
or
je
js
mov
sbb
addr16
xchg
movsl
int3
loopne
dec
test
sbb
or
stc
jp
fcomps
sbb
pop
xchg
leave
or
pop
and
fsubs
mov
ljmp
mov
xchg
sub
test
xor
lcall
lds
inc
adc
ret
in
aam
test
and
notb
movsb
movsl
pop
or
sbb
jecxz
xchg
mov
sbb
movb
shrl
popa
addr16
aaa
mov
rorb
lret
lods
xor
lods
shrb
adc
gs
addb
pop
clc
test
sbb
pop
and
cs
xchg
movhps
adc
inc
and
gs
and
add
sub
lods
data16
xor
fwait
and
in
js
sarl
push
fistps
dec
xchg
daa
pop
jmp
adc
pushf
lods
jbe,pt
int
and
inc
hlt
stos
hlt
fdivs
sti
cld
out
sahf
dec
inc
mov
cmpsl
call
xchg
aad
lods
sbb
adc
scas
sarb
jbe
inc
insl
inc
insb
push
cld
jecxz
in
and
cwtl
sbb
and
insl
adc
cli
gs
inc
xchg
sub
xor
aas
push
cmpsl
mov
sbb
lods
jnp
xchg
ret
push
int3
ss
lcall
or
pop
pusha
js
setae
lret
sbb
daa
pop
lea
and
pushf
fiadds
xor
add
in
xor
ds
push
dec
daa
cmpsb
and
xorb
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fmuls
pop
jle
pop
jg
jle
jl
test
in
bound
jl
scas
jo
sbb
mov
mov
mov
push
jno
out
lds
lahf
pop
adc
add
push
repnz
sbb
xchg
lahf
push
cmc
mov
cmc
mov
ja
pop
insl
and
inc
mov
ret
insb
cmp
dec
iret
mov
loope
push
cwtl
aaa
cmp
mov
xchg
movsb
ret
push
scas
or
mov
mov
ss
push
out
xchg
adc
add
scas
xchg
popf
lds
add
add
push
fistps
cld
sbb
arpl
xchg
jle
sti
sub
outsb
jo
xor
mov
call
stos
cmp
pop
ret
rcrb
lret
add
push
sbb
lret
mov
clc
js
cltd
add
mov
add
inc
fiaddl
aam
mov
mov
subb
enter
mov
mov
sti
aaa
cmp
xchg
or
jmp
fcmovu
push
dec
mov
lcall
cmpb
xchg
sar
pop
add
adc
mov
repz
push
aaa
add
jb
mov
mov
in
rclb
push
or
in
outsb
dec
jae
inc
inc
ficompl
push
pop
push
jl
or
subb
cwtl
or
scas
mov
push
xchg
sarl
push
mov
dec
outsb
xchg
scas
jl
adc
xor
and
dec
xchg
mov
or
adc
out
cmpsb
icebp
loopne
or
fs
cmp
fistpll
test
aam
fnsave
imul
xor
xchg
lret
pop
mov
mov
test
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
inc
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstpl
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
inc
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
pop
and
add
add
dec
add
add
add
dec
add
inc
add
insb
add
inc
add
add
add
push
add
dec
add
add
dec
add
inc
add
imul
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fnstcw
lcall
cmc
add
add
stos
jg
les
lock
test
inc
cmpsl
mov
mov
mov
sbb
out
or
fwait
lret
fisubl
daa
cltd
pop
push
ret
lds
add
add
test
cmc
inc
adc
fstl
fldcw
orb
sub
add
add
nop
fistpl
cmp
xor
jl
lods
frstor
inc
pop
xor
adc
mov
lret
jge
cmp
dec
fdivrl
imull
adc
xor
fwait
ss
cmp
clc
jnp
mov
adc
pop
out
hlt
fs
cld
in
incb
add
jns
cmp
sub
dec
jg
inc
dec
inc
cmp
pop
ror
dec
sub
jg
pusha
sub
icebp
stc
jne
dec
fdivrs
or
int3
add
divl
cmp
pop
ficoml
in
jle
cs
pop
ret
inc
adc
add
add
ficoms
sar
cmpsb
lret
mov
cmpsl
mov
jb
add
pop
cmp
sbb
aas
movsb
out
jl
mov
loop
cmc
lret
movsl
xor
fsubl
aas
lahf
scas
inc
arpl
sbb
pop
xchg
xchg
mov
or
shrl
dec
int3
sub
aas
mov
jge
pop
arpl
out
inc
fwait
mov
clc
push
insb
lods
je
mov
add
push
mov
mov
test
mov
push
loop
outsl
out
inc
scas
xchg
loop
hlt
fwait
stc
ret
lcall
push
imul
inc
clc
pop
or
lahf
and
pop
inc
mov
outsl
xchg
inc
dec
ja
jo
fisubl
and
xor
clc
xchg
fs
mov
aaa
fyl2x
mov
sahf
cmp
mov
sbb
jno
add
popl
inc
add
add
adc
mov
adc
push
fnstenv
add
cmc
add
add
cmp
call
mov
mov
nop
push
mov
sub
loopne
xor
outsl
push
lret
stos
pusha
pop
shl
push
xchg
mov
sbb
shll
xchg
ljmp
ret
shll
outsl
insl
pop
mov
imul
mov
mov
out
jmp
dec
dec
dec
daa
inc
mov
scas
and
inc
mov
imul
mov
sub
cli
mov
push
mov
popa
ljmp
mov
pop
stos
cmp
mov
fisttpl
xchg
add
add
repnz
out
push
cmp
icebp
mov
dec
sbb
fidivl
xorb
push
pop
pop
hlt
jno
xchg
cltd
adc
push
in
xchg
mov
insl
int
int3
pop
lahf
or
sub
xchg
aam
dec
mov
out
mov
popf
jno
setp
ror
or
xchg
mov
cs
lret
push
clc
es
test
and
add
add
mov
stos
dec
out
pop
negb
enter
add
add
add
mov
inc
inc
lea
mov
adc
sub
jae
adc
and
or
enter
imul
jecxz
jbe
ja
lods
ja
sbb
cwtl
pop
sahf
push
add
test
jne
xlat
sbb
inc
dec
mov
mov
andb
or
jae
jmp
scas
sub
mov
sub
pop
leave
dec
cmp
clc
xchg
jo
mov
xlat
pop
jp
mov
leave
xor
in
inc
loop
cmp
movsl
call
cmp
dec
lods
cmp
out
loopne
push
cmp
push
sbb
jb
data16
out
stc
cmpsb
clc
xor
aaa
out
les
push
mov
or
enter
testl
xor
or
add
inc
or
leave
bnd
push
jg
movsl
pusha
jmp
add
sub
mov
cltd
js
pop
or
in
in
enter
sub
and
jg
hlt
mov
cmp
lret
fwait
jle
inc
mov
rolb
mov
mov
and
add
push
sbb
dec
loope
sub
rcl
mov
imull
xlat
imul
mov
adc
ljmp
aaa
cmpsb
sti
popa
sub
jae
jl
or
ss
sub
add
ret
cld
pop
loope
stc
enter
push
dec
mov
add
inc
in
mov
dec
xchg
popf
mov
jge
jl
mov
pop
push
fbstp
mov
xchg
xor
popa
inc
jecxz
inc
popa
fwait
addb
pop
adc
dec
mov
shlb
pop
test
std
inc
ljmp
idivl
push
add
add
cmc
insl
cmc
out
lcall
sub
xor
ljmp
xor
in
in
int
push
rcrb
jmp
mov
dec
daa
mov
mov
mov
lods
and
or
shrd
pop
xor
addl
jb
pop
mov
jl
add
push
mov
filds
add
stos
sbb
notl
test
jne
xor
jbe
stc
sbbb
and
dec
pop
aaa
xor
test
add
in
inc
inc
lret
xchg
in
lahf
inc
cmp
das
das
std
dec
jg
pusha
jp
faddp
jle
int3
lods
cmpsb
dec
or
lcall
pop
test
push
aaa
mov
mov
idivb
jo
mov
sbb
fisubs
out
fcomi
mov
jp
xchg
pop
add
and
jns
cltd
xor
add
add
add
outsl
jle
dec
xchg
call
testb
add
add
add
arpl
sub
icebp
aam
and
imul
mov
shr
clc
mov
push
adc
mov
dec
mov
adc
out
inc
das
push
test
sbb
imul
cld
and
push
imul
dec
adc
jbe
and
out
divb
adc
aas
nop
pop
fisttpl
adc
outsl
or
adc
mov
mov
sarb
xchg
ret
pop
jno
jae
xchg
push
pop
in
sub
jb
pop
rclb
in
xbegin
icebp
sub
dec
cmc
test
das
sti
in
mov
or
lock
add
test
adc
dec
test
mov
aas
faddp
lods
mov
pop
jne
sub
insb
mov
out
addr16
pop
pop
loope
gs
add
add
jle
and
scas
sti
jle
inc
sbb
fnstcw
in
add
cmc
add
add
or
dec
cli
mov
or
jge
insl
add
push
out
shrl
test
test
inc
push
sbb
jb
popl
add
pop
popf
faddl
fmull
push
dec
pop
xchg
dec
lahf
sbb
xchg
out
scas
popl
xor
jno
stos
inc
inc
pusha
or
les
out
stc
push
xchg
mov
lret
icebp
push
fwait
jge
pop
dec
pop
mov
shl
or
xchg
fdivrs
icebp
jo
jae
ror
loopne
and
push
sbb
leave
sahf
or
pop
sub
fwait
mov
jle
insl
dec
cs
idiv
pop
das
jecxz
sub
stc
xor
add
dec
mov
adc
cmp
fpatan
div
jne
leave
ret
lods
movsb
lds
sti
outsl
inc
test
mov
or
and
out
add
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
pop
cmp
add
add
add
push
ss
cmp
pop
std
ret
insb
jb
sahf
sbb
pushf
out
push
outsl
xor
mov
jb
pop
sarl
jnp
sub
daa
hlt
into
outsl
sub
mov
lods
mov
aam
xchg
add
jne
adc
inc
xchg
movsl
push
jmp
and
xchg
stc
leave
movsb
or
pusha
jb
js
xor
push
int3
mov
mov
int
push
mov
paddsw
and
out
mov
jmp
sub
dec
inc
cltd
inc
adc
sub
xchg
push
cmp
dec
in
dec
enter
or
aam
mov
jae
test
lret
xchg
mov
ds
add
out
test
enter
or
sub
add
xor
push
jl
jle
insb
pop
decl
sbb
mov
cmc
add
add
int
lds
lea
cli
mov
ds
gs
mov
fcoml
ss
or
pop
cmc
sub
bound
addr16
jecxz
arpl
data16
or
not
or
push
in
adc
push
mov
iret
pushf
push
add
adc
aad
in
adc
mov
jo
cmc
lea
in
xlat
nop
cmp
std
pushf
xor
push
leave
testb
xor
ljmp
sbb
clc
push
sahf
movsb
mov
clc
pop
nop
mov
dec
bound
ret
enter
cli
into
pop
cmp
lods
jecxz
inc
jecxz
fistps
ljmp
scas
sahf
mov
inc
popf
sarl
sbb
pop
xlat
cmc
shl
push
lods
std
jg
or
and
and
dec
inc
cmp
cmpsl
jne
bound
jnp
pop
jne
add
add
fwait
mov
pop
ljmp
push
out
add
cmc
add
add
test
adc
push
cmpsb
pop
cmp
adc
mov
lods
xor
xor
dec
push
push
cld
sub
dec
jbe
dec
cltd
jb
roll
out
testl
mov
push
roll
cmp
dec
icebp
js
push
or
test
pop
sbb
shr
push
mov
xlat
mov
sub
cli
in
mov
add
sbb
int3
mov
and
inc
jp
push
and
mov
je
rorb
jge
lods
xor
sbb
push
dec
out
xchg
ja
lret
cli
push
push
sub
mov
jno
xchg
fbstp
iret
sub
xlat
in
push
or
pop
jb
sets
jae
or
jle
dec
rolb
sbb
pushf
nop
lock
dec
dec
aam
aam
or
int
scas
push
push
data16
lret
popf
jnp
cltd
shlb
ja
add
test
sti
inc
add
add
data16
jne
mov
gs
sbb
stc
adc
add
cmc
add
add
dec
cli
in
xor
cmp
imul
mov
idivb
jp
sbb
loop
sbb
test
loopne
sbb
push
cmp
adc
inc
dec
pop
adc
xchg
test
jg
ret
xor
notb
dec
sahf
insl
push
inc
icebp
sub
imul
hlt
leave
and
adc
mov
mov
mov
pop
into
adc
ljmp
inc
adc
push
and
jae
push
or
cmp
pop
stc
push
cmc
or
xchg
mov
fs
and
jmp
push
movsl
fucomp
lea
add
xor
dec
mov
mov
lds
lcall
ret
add
cwtl
loope
push
pop
inc
sub
daa
fwait
and
repz
cwtl
add
xchg
rcrb
lock
mov
sub
add
jnp
add
jnp
sti
xchg
rol
imul
dec
out
icebp
add
cmc
add
add
scas
fs
ss
aas
xlat
mov
cmp
movsl
repz
and
sbb
mov
fisubs
clc
adc
jle,pt
jge
gs
xchg
and
pop
mov
es
and
popa
xlat
test
cli
repnz
cmp
jmp
lret
xor
push
mov
mov
in
pusha
loopne
stos
lcall
sub
arpl
cmp
xor
int3
adc
cmp
and
fildl
push
dec
sti
mov
adc
sbb
subb
stos
xor
jne
out
call
mov
flds
adc
jmp
mov
mov
cli
insb
mov
lock
ljmp
cmp
cld
aas
lds
inc
aas
cmpb
mov
jecxz
shll
mov
mov
or
rclw
mov
out
fidivs
add
add
pop
sarl
test
sub
lret
and
add
add
add
lock
pop
insb
lods
stos
fidivs
push
push
and
jp
mov
fsubs
lret
cmp
pop
inc
fcmovb
adc
jecxz
insl
ljmp
dec
rcll
je
je
add
outsl
sbb
aaa
and
mov
sub
lret
pusha
jp
push
outsb
pop
push
pop
addb
adc
cmp
stc
xchg
jecxz
leave
cmp
loope
mov
sub
iret
add
sub
insl
mov
fdivrl
mov
mov
les
push
hlt
in
xchg
js
enter
push
test
cmp
xchg
js
call
ret
xor
lcall
xlat
subl
push
xor
push
movsb
shl
jmp
rorl
adc
mov
pop
add
add
repz
std
repz
xchg
scas
fldl
repnz
cmc
add
add
in
jns
ret
daa
out
arpl
cmpsb
jbe
cwtl
add
mov
test
int3
out
les
adc
andl
int
in
sbb
dec
adcb
mov
out
fdivp
xchg
ret
outsb
xor
mov
ja
mov
insb
mov
sbb
jno
repnz
xlat
int3
pushl
push
cmp
jp
fcom
mov
add
sub
aam
mov
lahf
leave
in
pop
jmp
pop
insl
adc
xchg
call
cmc
mov
push
jb
xchg
adc
in
sbb
and
stos
lret
shrl
mov
jbe
sub
pop
aaa
inc
xor
lret
lcall
repnz
jl
push
les
jno
mov
dec
pusha
out
pop
cmp
int3
jne
add
mov
test
mov
add
lock
add
add
lock
cmp
or
test
cmp
repz
cmc
add
add
les
lods
mov
into
mov
js
aam
and
es
xchg
mov
sbb
loop
xor
enter
in
das
pop
cmc
jnp
push
aad
xor
xor
xor
inc
push
clc
push
pop
and
xor
cmp
or
jl
pop
into
cs
jmp
imul
pop
cmpsb
repz
cmpb
cmp
cltd
rcrb
mov
aad
xor
push
mov
inc
inc
jae
dec
inc
mov
std
pop
ja
jno
lods
sarl
test
push
bound
xchg
push
mov
leave
mov
add
or
cs
jbe
add
cmp
inc
cwtl
sbb
dec
out
jbe
pop
sbb
jnp
fdivrl
ds
pop
mov
xlat
repnz
shrl
adc
add
mov
mov
sbb
sub
fdiv
add
cmc
add
add
adc
jg
adc
pop
jne
pop
in
bound
add
xchg
fisttpll
cld
cwtl
inc
dec
add
cmc
inc
xchg
adc
stos
or
nop
lods
dec
fdivrl
jae
int
pop
xchg
cs
gs
js
push
lods
mov
insb
aad
arpl
cmpsb
movsb
adcl
cmp
leave
cltd
rcr
push
out
sbb
leave
cltd
mov
lds
or
popa
jp
mov
inc
pop
dec
inc
and
leave
loop
and
mov
cmc
mov
pop
ss
mov
adc
pop
lods
mov
jp
cmpsl
xchg
xchg
jl
sahf
jge
fsts
push
sub
iret
out
les
mov
dec
and
nop
xchg
xchg
sbb
shll
xchg
push
testb
and
repnz
clc
inc
or
cltd
sub
push
push
cwtl
pop
clc
mov
loopne
jmp
add
xchg
in
mov
pushl
comiss
pop
rorl
add
add
cmp
and
pusha
pusha
shl
outsb
sti
cmp
fnstcw
mov
lret
icebp
fwait
inc
dec
clc
jae
addr16
cmpsb
dec
sbb
dec
dec
mov
xchg
je
dec
jnp
out
scas
lea
cltd
pop
aad
mov
mov
sahf
push
sub
xchg
mov
sub
jbe
mov
xor
movsl
dec
std
pop
mov
lret
fucomip
repnz
aam
lret
jecxz
mov
outsb
cltd
bound
out
adcl
add
dec
inc
in
jg
lock
add
orb
das
stc
cmp
orb
mov
mov
fs
dec
jb
sti
push
sub
pop
test
pop
xchg
ja
dec
jnp
ss
mov
dec
push
jns
pushl
ret
test
cmpsb
lock
sahf
popf
popa
cmpsb
add
adc
add
add
sub
in
negl
push
inc
push
xor
pop
imul
add
cmc
add
add
mul
push
mov
fs
lods
mov
jmp
inc
addr16
dec
es
pop
adc
lods
test
push
dec
xchg
and
bound
cwtl
inc
lret
leave
dec
out
push
jo
icebp
mov
negl
inc
dec
xor
je
push
xor
and
adc
dec
mov
sub
bound
dec
sub
cmp
fcomp
mov
lock
or
mov
shll
imull
pop
packuswb
test
popf
add
icebp
xor
inc
enter
xchg
leave
enter
cmp
push
cmp
mov
dec
aam
mov
stc
jmp
sbb
iret
int3
mov
mov
adc
lds
push
xor
inc
jo
adc
pop
xor
pop
outsb
fwait
or
int3
push
mov
add
add
mov
nop
fmull
movsb
mov
add
add
mov
xchg
ljmp
nop
jg
inc
xor
or
and
lret
mov
push
lcall
into
nop
rcrb
jns
xchg
xchg
jge
dec
add
das
nop
pop
ss
jl
mov
cmp
adc
sub
xchg
inc
jne
mov
into
lret
mov
sub
xchg
add
ljmp
fs
ds
xchg
and
into
arpl
mov
lret
mov
push
negl
add
in
hlt
xchg
mov
inc
push
popa
jns
and
push
ja
int
rcl
fdivs
cltd
repz
outsl
addr16
jle
imul
data16
aas
xchg
daa
fistps
sbb
push
sub
sahf
addl
data16
mov
push
pop
push
sahf
mov
add
cmp
mov
push
add
adc
sbb
add
add
add
lea
mov
xorl
jb
xchg
push
xchg
cmp
jne
rcrb
xchg
lret
push
and
and
adc
pop
lods
in
dec
xchg
xchg
dec
sub
fsubr
leave
xor
test
push
push
std
jg
dec
repnz
pop
add
jne
xacquire
scas
inc
mov
and
inc
jo
dec
decl
fwait
insb
jmp
ds
lea
cmpsb
sbb
cmp
or
and
mov
test
jns
test
or
das
idivl
mov
inc
arpl
adc
xor
iret
cmp
int
push
icebp
inc
clc
xlat
in
mov
push
outsb
and
xchg
pusha
sti
dec
pop
lock
and
sub
jnp
xor
add
out
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
mov
pusha
insb
fldt
dec
mov
inc
add
faddl
hlt
hlt
insl
les
xor
insb
adc
fsubp
arpl
incl
lahf
and
adc
adc
sarb
sub
add
imul
andl
jmp
jo
push
cs
imul
pop
sbb
pop
je
test
mov
mov
adc
test
in
dec
sbb
mov
cltd
adc
sbb
add
jg
cmp
cltd
or
mov
sbb
dec
in
inc
inc
daa
and
stos
arpl
lods
xchg
xor
daa
add
add
mov
mov
mov
call
pop
dec
push
jp
pop
aas
outsb
out
and
icebp
xchg
add
pushf
mulb
xchg
insb
and
push
sub
mov
ss
out
add
pop
mov
push
decl
fucomi
mov
add
add
add
out
adcb
cli
xor
mov
mov
add
xor
nop
xor
cmpsl
movsl
xchg
pop
mov
cmc
mov
movsb
subl
mov
xor
lcall
out
fldl
sahf
dec
inc
fstl
add
or
dec
cltd
fbld
cmp
movsl
ret
divb
iret
outsb
adcl
push
test
jne
js
cmpsl
repz
xchg
notb
push
adcl
mov
mov
jle
push
jb
mov
xchg
in
lret
xchg
int
xchg
push
mov
lock
push
nop
inc
mov
jge
jnp
int
aas
sub
pop
mov
mov
push
movsb
dec
insb
mov
es
add
stc
or
fnstcw
mov
addr16
dec
xchg
cmc
sub
mov
or
jns
ss
add
add
jmp
in
dec
dec
ret
orl
sti
add
cmc
add
add
add
data16
std
jbe
ds
dec
js
push
inc
fstl
xchg
inc
mov
scas
scas
inc
aad
loopne
inc
add
jmp
das
in
addr16
enter
lret
scas
add
addr16
jb
xchg
adc
out
adc
push
and
push
jb
insl
out
push
fldl
mov
or
dec
sbb
lret
gs
rorl
jo
adc
sub
push
dec
mov
shrb
and
sbb
clc
mov
mov
fcomip
int3
sub
adc
icebp
or
push
add
dec
scas
adc
enter
insb
fucomi
dec
arpl
nop
mov
out
mov
rclb
mov
jne
sbb
xor
ror
jmp
jne
stos
aas
add
mov
lcall
jo
dec
das
subb
adc
cli
int3
in
pop
test
int3
xor
inc
sub
and
add
and
and
or
data16
fwait
repnz
add
cmc
add
add
push
iret
sub
push
xchg
mov
xor
cld
inc
mov
push
push
rorb
cmovl
insb
roll
insb
ja
pusha
test
cmpsb
jnp
mulb
mov
shrl
shll
lret
pop
aad
lods
pop
push
inc
test
sbbl
js
mov
pop
mov
pushf
mov
add
jle
scas
add
fdivp
rcrl
sub
mov
xchg
inc
mov
clc
adc
lds
adc
and
leave
pop
dec
decb
aad
icebp
loope
and
sub
addr16
xchg
add
enter
push
inc
sub
aas
gs
xor
jb
inc
push
ret
dec
and
mov
popf
out
outsb
pop
cmp
frstor
mov
add
shlb
scas
out
mov
into
bnd
fwait
or
fidivrs
sub
mov
repz
ror
lock
jnp
jmp
sbb
pop
pop
repz
add
cmc
add
add
xchg
in
aad
out
roll
cmp
jmp
add
cmp
cmpl
mov
aas
cmp
inc
adc
setno
jb
or
sub
xchg
pop
adc
mov
sbb
xor
pop
jg
mov
sub
jp
cmp
cmp
test
cmp
cli
out
popa
sbb
and
test
cmp
inc
fwait
and
mov
aaa
ss
in
cs
inc
arpl
lea
pop
cwtl
inc
mov
pop
setns
jae
jb
xor
jno
dec
enter
inc
jg
clc
push
or
imul
nop
cmc
ret
jl
adc
push
ret
stos
stos
mov
mov
xlat
scas
dec
cmpb
jnp
cld
rcrl
adcl
inc
cwtl
jo
test
add
add
repz
fimuls
mov
cmp
outsb
incb
add
add
add
lcall
bound
or
cmp
test
sub
cmpl
pop
mov
mov
mov
adc
enter
mov
aaa
mov
vandnps
cld
jle
popf
addb
jno
repz
bound
andb
pushf
in
shlb
xor
push
pop
out
pop
les
scas
icebp
mov
xlat
push
pop
sti
lret
add
aad
addr16
pushf
popf
or
leave
or
in
out
incl
aad
stos
ss
or
add
std
fcoml
mov
mov
jnp
mov
mov
pushf
xchg
std
es
jp
stc
pop
pushf
mov
cmp
pop
xor
cmp
push
xor
push
in
stos
mov
mov
cmp
lea
int
mov
sub
loopne
mov
add
add
out
xchg
jns
fsub
pop
arpl
add
cmc
add
add
fisubrs
cmp
jbe
adcb
popa
test
enter
adc
ljmp
or
cmpsl
rorl
jp
aaa
push
inc
test
xor
pop
clc
inc
push
jge
movsb
mov
maskmovq
testl
and
insl
dec
movsl
loopne
fldenv
inc
xlat
ror
jp
rorl
stos
push
jg
mov
fmuls
adc
fcmovne
mov
xor
jno
sub
lods
flds
adc
and
cmc
dec
jg
cmc
inc
xchg
popf
mov
dec
xor
cmp
push
scas
repz
or
arpl
ret
pop
in
hlt
sub
fidivs
pop
in
stos
aaa
jmp
ss
fsubr
test
mov
inc
iret
pop
and
pop
sub
popf
adc
mov
in
inc
rcrl
lds
inc
adc
add
shrl
cmc
scas
mov
sahf
std
add
add
cmc
add
add
mov
cmpsl
mov
mov
fcmovnb
nop
xchg
and
fsubs
cmp
or
cmp
orl
stos
imul
ret
pop
outsb
rorl
sub
es
cmpl
sbb
xchg
leave
add
dec
popa
cmc
leave
and
jmp
ror
cmp
pop
xchg
test
xlat
xor
ficoms
ret
jns
mov
mov
inc
xor
jne
fs
sub
lahf
mov
ret
imul
sbb
sti
iret
data16
dec
dec
or
adc
cs
popa
xorb
dec
or
mov
cmp
inc
inc
and
pop
jo
push
mov
mov
sub
push
aam
popa
mov
cmpsl
xor
rol
rol
ret
cmp
mov
rolb
lret
pusha
rorb
lea
xor
dec
add
add
add
add
add
fwait
pop
fisubrl
cmpsl
xchg
aam
sbb
xor
sbb
dec
inc
sbb
pop
adc
xchg
xlat
sbbb
push
mov
pop
clc
jae
xchg
sarl
mov
cmc
xor
fadds
fcmovb
sarl
adc
jge
fcompl
dec
lcall
roll
mov
cltd
jo
cmp
xchg
inc
mov
outsl
sti
dec
rorl
cltd
jl
shlb
push
mov
cmp
xchg
and
mov
enter
leave
mov
mov
or
inc
sbbl
xchg
xchg
inc
sbb
cmc
cmp
js
inc
mov
add
out
jp
sub
xor
mulb
leave
sub
pop
aaa
or
subl
inc
xchg
les
push
sub
pop
xorb
dec
lock
add
add
gs
testl
pop
ffreep
inc
add
add
add
add
xor
sub
mov
sbb
scas
fcmovnu
sub
adc
ret
mov
cmp
jg
pop
cmp
mov
push
clc
mov
inc
dec
sbb
lods
or
pop
lds
mov
dec
out
test
bound
in
jl
hlt
add
mov
dec
push
mov
adc
fwait
xor
cltd
js
xchg
out
mov
popf
mov
outsb
outsb
dec
mov
mov
jecxz
jnp
imul
fists
outsb
int3
pop
testb
push
insb
mov
xor
negl
sbb
sbb
repz
mov
call
in
push
adc
fs
sbb
lock
dec
or
mov
pop
inc
icebp
js
pop
jns
cmp
mov
add
ret
leave
mov
add
and
daa
lahf
jle
sbb
cmc
popa
ret
add
cmc
add
add
mov
movsl
pusha
inc
dec
out
lcallw
jp
movsb
push
cmovg
inc
fsts
xor
sbb
in
lcall
ret
rcrb
inc
lret
push
decl
push
inc
out
nop
call
jbe
mov
push
adc
inc
dec
mov
cmpsb
cmp
push
lcall
jge
add
pop
lods
lret
ficomps
insb
sahf
popl
out
sar
jecxz
out
mov
push
cwtl
stos
inc
dec
and
scas
je
es
xchg
or
jnp
call
dec
mov
lock
in
cmp
cmp
aad
sbb
leave
lods
inc
pop
ljmp
push
ja
sbbb
mov
clc
cltd
adc
sub
inc
lret
sbb
popf
imul
mov
out
xorl
add
xlat
aam
std
or
cmc
add
add
push
gs
inc
cmp
pop
and
outsb
in
mov
sub
cmc
pop
popa
lods
movsb
add
cmpsb
loopne
roll
stos
stos
adc
out
repnz
enter
cmp
push
push
lcall
aas
xor
or
test
sbb
adc
adc
cmpsb
cmp
pop
repz
push
bound
mov
ds
imul
pusha
sub
cmpsl
sbb
aaa
out
or
inc
push
dec
adc
push
popa
xchg
push
mov
in
inc
insl
jbe
pop
aam
ja
mov
int3
es
jno
pushf
inc
xor
popf
les
fsubl
jbe
xor
clc
es
adc
leave
in
add
or
jmp
push
daa
pop
leave
lret
imul
fdivs
js
add
fwait
push
push
jbe
push
inc
pop
jns
aas
fisttpl
inc
insl
xchg
adc
add
add
or
push
stos
out
aam
mov
sbb
push
test
jne
mov
loopne
dec
and
repz
add
sub
sarl
sub
out
xor
mov
pop
push
and
xchg
jne
or
inc
cwtl
pop
repz
shl
scas
mov
imul
cltd
clc
xchg
movsl
adc
in
aam
sub
es
dec
jmp
jecxz
push
add
pop
in
pop
or
hlt
sub
mov
inc
mov
testb
sbb
ljmp
leave
mov
inc
js
xlat
dec
sub
xchg
mov
ja
pop
cwtl
dec
leave
mov
cmp
and
imul
clc
adc
addr16
pop
cmp
sbb
je
or
test
jb
or
testb
add
jnp
mov
addl
sub
push
add
cmc
add
add
mov
dec
lods
sbb
out
mov
inc
sbbl
adc
stos
cmpsb
sub
addps
push
inc
dec
cwtl
cmp
adc
sub
mov
mov
sbb
or
xchg
fcmovnb
in
out
je
cmp
stc
fsqrt
lock
mov
repz
pop
cmp
mov
push
push
mov
push
add
jbe
lea
popf
xor
sub
adc
add
rcrl
add
flds
and
repnz
cs
arpl
push
in
lods
push
or
fisttps
dec
sbbl
out
lcall
dec
test
mov
inc
push
mov
pop
mov
push
xorl
popl
xchg
pop
movsl
rcrb
xor
popf
int3
xchg
mov
or
inc
testl
add
imul
adc
jmp
add
cmc
add
add
add
call
push
xor
sbb
jmp
jmp
inc
lcall
filds
mov
or
jno
and
int3
lock
fldcw
out
xchg
sti
push
mov
cmp
sarl
mov
mov
xchg
dec
cmp
dec
std
aaa
stos
stos
jl
stos
mov
dec
pop
adcl
pop
fsubp
lods
dec
inc
inc
inc
fwait
cmpl
add
movsb
gs
push
lahf
xchg
imul
mov
leave
cmpsb
jle
mov
test
cmp
xlat
push
mov
mov
mov
loope
icebp
imul
scas
mov
stc
out
ret
hlt
or
lds
fsubs
pop
sub
mov
or
sub
mov
and
mov
jmp
inc
fimuls
mov
add
mov
rolb
add
fdiv
mov
test
lret
or
add
add
add
jg
fcompl
mov
xor
adc
jae
icebp
xor
popf
fwait
das
push
mov
ret
jl
aas
loop
mov
push
int
jge
cmc
insl
inc
inc
mov
bound
mov
add
test
bound
mov
out
and
add
imul
jns
add
inc
shrb
in
jbe
pop
add
mov
popf
lds
push
sub
jae
in
into
inc
pop
aam
xchg
sub
lods
push
sbb
add
imull
add
outsb
jmp
gs
js
loop
test
out
push
pop
loop
mov
sbb
dec
mov
popa
setae
repz
push
addl
daa
inc
dec
lahf
clc
or
flds
outsb
mov
ds
mov
add
test
mov
stc
ror
int
cmc
or
add
add
add
mov
out
pminub
fstpt
push
outsl
ret
sbb
push
push
or
jg
icebp
test
jmp
xchg
mov
fstps
loopne
add
pop
jecxz
sub
icebp
cmpsb
imul
dec
lods
std
mov
jb
and
jno
inc
lea
movsl
outsb
out
fisttpll
xor
test
xor
fsubrs
jmp
add
mov
push
lods
push
add
xchg
fisubrs
push
in
fs
pushf
adc
xor
xor
es
rol
fbld
jp
jge
ret
int
emms
and
in
lods
mov
and
adc
mov
xchg
jae
fisubrs
movsb
pop
shll
sahf
jge
movsl
popl
pop
pop
mov
sbb
je
push
xor
lret
xor
mov
test
ficoml
add
add
push
pop
push
jmp
sub
mov
adc
or
add
add
add
fisttpll
imul
outsl
rcll
cs
popf
mov
jbe
and
inc
in
and
sbb
stos
pop
sub
je
or
int
adc
int3
popa
push
or
stos
push
xchg
mov
lret
jbe
or
loop
test
mov
push
int3
cmp
xchg
int3
push
int
rorl
add
mov
cs
add
imull
jecxz
fcmovnb
push
push
outsl
cmp
xor
bound
mov
xor
mov
pop
cld
jno
or
test
xchg
dec
jnp
xlat
fnstcw
cmp
jae
cmp
push
adc
mov
pop
popf
je
push
add
rcll
cwtl
pop
cld
xchg
clc
sbb
push
jmp
sbb
out
cmpsl
push
adc
pop
in
in
jno
scas
filds
sarb
das
push
pop
add
add
pop
lods
pop
cli
cmc
inc
mov
jge
or
add
add
add
sub
shll
bound
dec
cltd
test
leave
or
addb
enter
sub
push
pop
push
fisubrl
inc
jne
loopne
fildl
test
shll
mov
std
insb
dec
add
lcall
jmp
fcompl
pusha
addl
cmp
shlb
or
cli
iret
fstpl
lods
fnstenv
nop
cmp
in
mov
push
inc
aaa
add
xchg
sub
inc
sbb
into
cli
inc
or
sub
jnp
ret
jno
add
xchg
lea
and
jecxz
push
jns
in
mov
inc
jno
icebp
lret
outsb
insl
and
and
and
lds
adc
add
dec
in
movsl
adc
in
mov
mov
sub
mov
repz
sub
jns
ret
pushf
outsl
add
xor
test
mov
popf
into
add
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
cmc
out
pop
aam
add
cmc
add
add
popf
lods
stc
or
outsl
mov
sub
mov
std
leave
add
or
flds
add
test
add
pop
xchg
fildll
mov
lret
xor
jp
cmc
cmc
repnz
shl
scas
lds
fcmovnu
icebp
adc
push
rolb
add
push
pushf
leave
aaa
xor
test
popa
stos
fcomps
jp
clc
mov
popa
pop
push
xchg
push
mov
cwtl
fstl
cmp
mov
cmp
xchg
push
aaa
mov
xor
push
mov
inc
pop
enter
shrl
mov
imul
jbe
xlat
lea
int
iret
pop
cmpsb
add
test
or
shl
aad
aam
xchg
dec
imul
lahf
lods
mov
add
add
aam
int
xchg
clc
ds
js
or
add
add
add
scas
daa
rolb
in
adc
insl
gs
cmpsl
push
or
rcll
ror
push
dec
dec
mov
fcompl
imul
dec
or
pop
pop
pop
lods
test
cmp
push
adc
xchg
dec
sub
stc
xchg
push
fdivs
movsb
lret
outsl
mov
ja
or
shlb
sbb
int
xchg
xchg
or
outsl
xchg
mov
int
sub
pop
cmp
mov
dec
and
mov
mov
pop
xor
lahf
jns
mov
popa
shrb
xor
cs
jnp
mov
mov
and
mov
cmp
fimuls
iret
xchg
sbb
scas
and
push
adc
rolb
lock
sub
or
js
call
or
daa
cmp
hlt
dec
roll
out
gs
mov
add
int
mov
add
arpl
addr16
inc
jmp
into
mov
add
add
push
push
movsb
xchg
nop
adc
icebp
mov
jbe
fidivl
cmp
cltd
adc
sbb
sbb
adc
movsb
mov
pushf
push
insb
dec
stos
aam
out
inc
negb
jne
jecxz,pn
mov
pop
repz
imul
push
aaa
aam
or
xor
jnp
arpl
xlat
mov
dec
jl
sub
repz
xchg
stc
add
pop
imul
ljmp
sahf
and
push
push
test
jp
inc
mov
mov
das
push
jo
int3
and
add
scas
pop
and
or
sub
int
adc
mov
sub
cmpsl
fisttpl
test
fcoms
mov
jne
xchg
dec
cltd
test
push
aas
jl
out
cmp
cmp
pushl
jecxz
inc
fdivrl
mov
push
add
cmc
add
add
cli
sbb
mov
divl
lcall
lods
xor
movsb
decb
popa
push
inc
mov
inc
sub
cs
xchg
inc
adc
sti
cmpsb
xchg
jno
dec
inc
ret
and
popa
pop
repz
faddp
fs
movsl
test
sbb
out
xchg
jne
xchg
notb
orb
pop
stc
jo
sub
or
push
cmp
es
push
loop
adc
ds
shrb
mov
imul
push
cwtl
xchg
ret
loopne
pusha
out
scas
jo
pop
cmp
ss
fcomip
cld
xlat
das
in
lret
pop
push
dec
jp
sub
cld
adc
pop
outsl
jecxz
sbb
and
or
jle
xorb
ds
inc
das
shrl
pop
mov
daa
jmp
imulb
xchg
ret
ret
test
or
jmp
nop
sbb
push
xchg
mov
mov
lret
xchg
pop
popa
cwtl
aaa
sbb
xchg
iret
add
add
push
scas
out
mov
rclb
test
cmc
add
add
sbb
xor
mov
xchg
xchg
divl
aad
adc
loopne
decb
pop
push
fwait
push
cmp
rolb
call
sub
call
xchg
lods
stc
roll
loop
lret
push
sti
test
or
cmp
pop
mov
repz
pop
cmp
jbe
aam
cmp
adc
std
xchg
mov
add
push
or
call
push
int3
stos
sbbl
es
and
int
sbb
out
mov
mov
sarb
test
jl
lret
sar
lret
or
mov
mov
push
daa
mov
repz
cmpsb
shrl
cmc
fisubl
pushf
push
movsl
movsl
or
inc
xchg
pop
push
ja
jne
xchg
add
pusha
add
in
iret
push
cmpsl
pop
pop
mov
mov
fiadds
add
aaa
xchg
and
movsl
mov
mov
cmp
scas
mov
adc
add
add
add
cs
lock
push
sbb
mov
enter
push
movsb
faddp
lock
push
xlat
mov
shr
mov
loope
cmpsb
push
popa
inc
std
xchg
ret
cmc
lods
jecxz
cs
sbbl
cmc
test
imul
inc
adc
out
lret
add
sub
dec
mov
push
psrld
push
aas
xchg
xor
jge
lock
out
mov
mov
bound
test
xchg
movsl
arpl
sahf
data16
adc
loop
daa
cmp
adc
out
stos
inc
xchg
mov
imul
outsb
ret
daa
inc
dec
call
pop
mov
mov
lcall
push
fisttps
jg
or
fisttps
ds
push
inc
mov
bound
movsl
outsb
sub
xor
nop
movsl
or
movsb
pop
adc
adc
add
mov
push
jg
mov
adc
xchg
xchg
adc
add
add
add
adc
incb
test
mov
ret
gs
adc
push
pop
inc
mov
insl
dec
repnz
repz
or
into
ja
imul
xchg
sub
mov
outsl
ds
fcmovbe
jo
ret
xchg
lods
dec
stos
adc
out
sbb
add
add
sti
jle
out
das
inc
push
loope
rolb
mov
insb
mov
sbbb
and
push
push
push
jae
jecxz
mov
add
insb
adcb
xor
xchg
add
sub
rcrb
sub
loop
pushf
leave
ds
insl
fistpl
scas
cs
push
pop
or
xchg
or
fbstp
mov
arpl
push
dec
gs
cli
xor
test
and
mov
insb
loop
fildll
fwait
sbb
add
add
mov
mov
fidivrs
mov
adc
add
add
add
push
push
pusha
out
mov
xchg
xor
xchg
pop
xchg
and
jmp
cltd
xlat
cmp
outsl
js
stc
or
mov
imul
shlb
sbb
xor
into
or
xor
aaa
mov
dec
sahf
adc
inc
mov
xor
loopne
add
cmpl
aad
subb
jp
es
xlat
lods
shlb
mov
add
mov
adc
jecxz
dec
sbb
pop
cld
sbb
fsubrl
xchg
lods
fiaddl
aam
icebp
jo
lea
or
imul
lods
mov
add
jo
mov
adc
test
xor
jbe
sub
mov
sbb
iret
cmp
cmp
mov
mov
fcmovnu
mov
mov
mov
cwtl
inc
adc
add
add
mov
or
jl
add
cmc
add
add
faddl
mov
push
testb
dec
test
xor
xor
inc
jae
shlb
mov
movb
in
shrl
in
lret
sbb
fs
stc
call
ds
push
ret
jo
psrad
call
js
mov
imul
cltd
mov
popa
jne,pn
aam
jp
add
fwait
mov
and
test
jb
mov
xor
out
xor
aam
fwait
jecxz
out
nop
mov
and
fsubrs
jne
addr16
nop
pop
jl
cmp
je
add
cmpsl
jp
cmp
mov
jecxz
adc
bound
push
stc
push
sarl
scas
and
dec
mov
pop
xchg
fwait
lret
jge
mov
pop
push
jle
daa
lods
push
icebp
pop
dec
aad
add
add
hlt
fists
mov
add
cmc
add
add
enter
lock
sbb
in
lods
jl
sarb
shl
ljmp
outsl
decb
sub
push
jle
mov
xchg
mov
lahf
jle,pn
jge
adc
js
jmp
shlb
xchg
inc
sbb
imull
dec
mov
add
idivl
or
pop
or
and
jne
pop
mov
leave
loope
jmp
jns
fnstsw
sub
or
lret
xchg
pusha
cli
add
push
adc
and
icebp
pop
inc
ret
adc
pop
rclb
movsl
loopne
or
jmp
jae
xchg
and
adc
scas
ja
iret
and
je
mov
push
fwait
jge
and
cltd
adc
out
jecxz
inc
orl
mov
adc
pop
lea
pop
stc
dec
mov
lret
mov
rcll
fldenv
fstpl
add
add
into
fwait
testb
pop
aad
out
adc
add
aas
data16
jmp
xchg
mov
repnz
cmp
jo
or
testl
jp
aam
jne
js
fisubrl
adc
mov
pop
or
outsb
sub
add
jg
pusha
inc
loop
sub
mov
adc
add
clc
cli
fisubrl
xor
mov
xlat
notl
jae
pop
dec
mov
adc
pop
and
mov
test
fists
and
push
loop
mov
leave
dec
les
lahf
mov
subl
pop
cwtl
stc
fwait
notb
cwtl
dec
push
pop
or
test
aad
jl
adc
jle
mov
ja
cmpsl
dec
pop
mov
cmpsb
jle
scas
jne
loopne
inc
mov
cmpl
mov
pushf
push
je
shll
adcb
inc
xchg
outsb
mov
inc
lods
jge
sbb
add
add
xor
mov
pop
mov
push
in
pop
push
add
cmc
add
add
push
addr16
adc
xor
mov
rolb
xchg
dec
aam
bound
lret
sbb
xchg
outsb
cmpsl
adc
mov
sub
bound
cmp
xor
sbb
notb
mov
sahf
xchg
out
jno
xor
mov
jbe
mov
lock
cmc
popa
rorl
or
fdivrl
mov
push
mov
mov
sbb
in
xor
pop
stos
xor
addb
xor
add
shll
mov
inc
les
sbb
jg
bound
xchg
cmpsl
add
jb
jb
xor
daa
mov
push
xchg
into
xchg
loop
pop
sub
loop
add
sub
fstps
mov
inc
xor
fs
loope
imul
push
pusha
fnstenv
dec
fwait
int
loop
add
sti
inc
out
aas
mov
sub
stc
inc
and
add
cmc
add
add
rolb
jno
mov
les
fildll
pop
bound
and
movsl
pushf
aaa
mov
arpl
xchg
sbb
pushf
push
bound
jb
aam
lcall
jne
dec
aad
dec
enter
dec
mov
ds
adc
adc
leave
iret
and
aad
mov
jmp
xlat
dec
sbb
es
mov
loop
test
push
fstl
sub
cwtl
cli
jmp
jno
mov
add
out
int3
fwait
shll
into
aam
andb
daa
jns
xchg
add
cmpsl
sbb
jae
lds
scas
add
xorl
and
data16
cmpsl
adc
stc
mov
leave
sahf
jne
push
adcb
enter
mov
fistl
fsts
push
bnd
jp
xchg
inc
push
sub
add
add
add
loop
or
pop
xor
sub
stc
stos
dec
cmp
pop
mov
movl
mov
mov
xor
dec
dec
mov
sub
push
fcmovnb
or
cwtl
sub
repz
mov
jnp
xor
xor
in
daa
sbb
arpl
ret
dec
or
pop
pop
iret
jmp
mov
pushf
sub
cwtl
out
into
mov
xchg
cmp
imul
dec
loopne
xor
xchg
into
mov
sbbb
add
out
hlt
lock
dec
mov
or
sub
stos
jb
xchg
sub
das
fimull
lahf
pop
xchg
jge
aad
xchg
mov
push
scas
sub
cmp
stc
divb
es
push
fdivr
imul
jns
je
xchg
push
fisubs
cltd
xor
cltd
test
add
add
in
out
ja
fbstp
mov
je
sbb
add
add
add
pop
inc
adc
inc
and
es
cmp
cmp
mov
mov
orb
mov
sub
je
loopne
inc
push
push
dec
mov
pop
xor
cmc
xchg
xchg
mov
push
cmp
xor
or
jg
pop
loope
push
inc
fisubrl
xchg
scas
outsb
in
out
or
and
mov
and
or
xchg
fistl
push
fldenv
sub
push
test
lcall
ss
lods
das
fldt
xlat
shlb
repz
mov
fisttpl
clc
inc
mov
aad
insl
jl
addr16
lcall
xorb
pop
popf
sub
jmp
cmp
das
sub
call
pop
or
mov
imul
int
movsb
imul
or
xor
push
popa
andl
add
add
pop
in
out
das
sbb
add
add
add
loop
xor
push
lods
cli
cmp
int
dec
pop
mov
push
lret
adc
mov
xchg
mov
movsb
mov
aaa
cwtl
xchg
fiaddl
loope
adc
ja
sbb
xor
aam
mov
push
xchg
pusha
xorl
repz
ficoms
push
cmp
test
stos
negl
filds
outsb
jle
dec
shll
push
lods
roll
jge
adc
inc
add
mov
pop
inc
mov
push
pop
nop
leave
addr16
and
repnz
movsl
cmp
imul
and
scas
ss
popf
push
cmp
out
mov
or
pop
mov
call
inc
loopne
jmp
sarl
rep
mov
push
in
sbb
aad
ret
cmpsb
js
mov
in
xorb
sub
fld
rol
sbb
xor
lea
leave
in
inc
in
sub
xor
add
add
jg
imull
push
idivb
sbb
add
add
add
ljmp
lcall
sub
inc
lods
lds
or
cld
mov
sbb
int3
lods
jns
cwtl
lea
fwait
stos
and
imul
movsb
mov
shl
adc
dec
movsl
cmp
imul
dec
rcl
icebp
stos
mov
out
repz
aas
out
fsin
in
popf
and
lcall
ja
outsl
stos
push
stc
mov
mov
in
mov
ret
shrl
out
sub
dec
jmp
stos
fistpl
ljmp
in
push
call
cld
push
fildll
shll
out
pop
stos
xchg
iret
stc
pop
hlt
sub
cmpsb
cmp
enter
cmpsl
icebp
and
shl
fs
jae
pop
jo
adc
aaa
int3
bound
movsb
or
fistpl
jg
stos
pop
sbb
mov
add
cmp
sti
jg
and
mov
sbb
add
add
add
pop
daa
jnp
ret
mov
sub
fdivl
js
iret
movsl
pop
test
loop
sti
int3
cmp
jns
outsb
mov
gs
xchg
sarl
dec
jp
sub
jmp
push
scas
sbb
ljmp
shll
test
push
or
arpl
jl
mov
xchg
push
push
pop
scas
dec
incb
mov
mov
add
dec
pop
lahf
imul
loopne
lret
data16
mov
gs
mov
mov
adc
aas
in
push
push
mov
pop
testb
push
adc
bound
mov
push
rcl
add
cmp
test
xor
adc
sub
push
decl
push
cmc
mov
int
add
outsl
es
cmp
nop
cmp
mov
lahf
roll
add
jnp
fldl
pop
dec
adc
sbb
add
and
push
lret
out
push
xor
mov
sbb
out
jl
js
in
sahf
add
pop
pusha
mov
mov
in
popa
jb
or
dec
ret
shr
in
dec
push
push
add
out
mov
push
mov
divb
mov
mov
sarb
push
mov
push
insl
push
sbb
in
pop
adc
push
arpl
and
mov
jp
ss
add
dec
hlt
scas
add
inc
dec
lret
fadd
scas
inc
mov
pop
loopne
icebp
mov
loope
hlt
dec
rorl
cmpsl
ret
cli
inc
dec
xor
jp
out
or
sahf
jnp
lds
cmp
ret
in
jmp
test
rclb
push
jle
cmpsl
cwtl
dec
bound
jbe
cs
hlt
ss
inc
rorl
mov
add
dec
test
enter
add
mov
push
dec
pop
out
add
add
outsl
mov
xchg
pop
cltd
mov
jle
faddl
push
add
cmc
add
add
mov
mov
pop
add
lock
pushf
ret
bound
bound
in
mov
lods
ret
int3
sub
dec
lret
mov
sub
ret
cs
imul
and
dec
faddl
cld
xor
xchg
dec
cwtl
add
mov
push
dec
imul
sub
pop
adc
mov
test
into
fistps
loop
sub
pop
jb
clc
lods
cmpsb
mov
daa
or
test
xor
loope
movsl
pop
mov
or
push
into
mov
pushf
sbb
dec
dec
pop
loop
aaa
mov
jmp
adc
xchg
in
ds
xchg
or
mov
mov
pop
fldenv
pop
xchg
jmp
repz
fcmovbe
and
lods
in
mov
ds
mov
mov
out
das
hlt
out
add
add
jmp
loop
clc
push
add
cmc
add
add
pushw
stos
xor
mov
repnz
mov
inc
js
add
xchg
and
push
sbb
cmp
jno
mov
add
fs
add
dec
push
sbb
dec
xchg
fcmovnu
jae
outsl
rol
jae
mov
divw
mov
out
dec
fisttps
xchg
out
int3
iret
test
outsb
push
out
xchg
les
in
jno
movsb
add
adc
aad
outsl
roll
jl
mov
leave
in
cmp
mov
jb
jnp
mov
and
push
in
xchg
scas
into
lock
mov
cmp
ds
xchg
int
mov
sub
je
inc
and
je
ja
pop
nop
scas
iret
jmp
sbb
push
dec
outsl
lea
lods
bound
pop
cli
nop
call
xlat
stc
xchg
imul
pop
push
pop
movsb
fldl
loope
jmp
push
xor
and
jp
jmp
adc
cmp
movsb
add
add
xor
idivl
aaa
sahf
outsb
in
pop
add
cmc
add
add
sub
jmp
gs
dec
jb
popf
rclb
arpl
cwtl
or
cmp
and
jle
into
jae
cmp
mov
cmpsl
and
mov
pop
lcall
imul
int3
inc
xchg
icebp
lods
iret
sub
inc
clc
mov
icebp
pusha
jbe
jge
and
inc
push
pop
cmp
xchg
push
sub
decb
sbb
pusha
in
cvtps2pi
mov
lea
mov
push
int3
pop
xor
mov
imul
pop
repz
xchg
or
jge
or
inc
cmp
out
pop
cmp
xor
and
rcrl
movsl
and
xchg
xor
fs
jns
ss
or
imul
outsl
movsl
in
stos
jb
stc
pop
jno
jns
pop
enter
testl
add
add
cli
inc
jg
int
pop
sbb
sahf
sarl
and
add
add
add
mov
cmc
xchg
jl
mov
cmpsb
push
mov
fwait
xor
mov
pusha
cmp
ret
jne
repz
loop
clc
fmull
mov
out
fwait
shlb
insl
xor
mov
clc
in
adcb
mov
mov
ss
or
scas
jmp
and
rcrb
bnd
jg
mov
faddl
in
scas
fucomi
dec
mov
decb
lcall
or
inc
out
add
cmp
rcrl
push
jbe
push
inc
inc
and
dec
movsl
test
aas
pop
xor
into
fiaddl
xlat
out
jno
mov
mov
sub
xor
movsl
inc
dec
dec
xor
ja
xchg
dec
push
sahf
sub
popa
test
loopne
adc
push
in
mov
out
xchg
std
test
aam
mull
test
pop
jmp
add
add
xchg
std
cmp
jle
fisttps
cmp
push
xlat
and
add
add
add
xor
add
add
xor
mov
fisubs
pop
addb
shl
sbb
jb
add
pushf
mov
scas
scas
popl
pop
xchg
insb
mov
adc
jl
popf
lea
gs
int
sub
ret
add
and
movsb
adc
cmc
mov
cld
clc
dec
mov
negb
pop
jle
aam
out
mov
jle
mov
and
push
aad
push
push
push
mov
test
add
push
movb
aam
rcll
imul
dec
mov
test
ret
fstpt
push
cmp
sub
cmpb
or
out
sti
aam
out
push
out
ret
and
out
mov
sbb
dec
ss
int3
push
scas
loop
ficompl
mov
mov
sarb
lret
sub
sub
push
mov
add
xchg
pop
lds
xlat
ficoml
pshufw
and
add
add
add
cmp
mov
jb
adcl
sbb
clc
adc
inc
js
xchg
pop
and
add
cmp
dec
mov
dec
lret
push
fildll
mov
lds
subb
repz
jnp
and
pop
cmc
mov
cld
dec
dec
mov
mov
enter
xor
or
xor
xor
mov
imul
or
mov
inc
shl
ret
jmp
xchg
mov
cmc
push
jnp
add
push
xchg
push
push
aad
bound
mov
cmp
loope
lods
xor
sahf
sub
pop
xchg
cwtl
fsubrp
push
sbb
and
pop
mov
mov
inc
adc
pop
mov
pop
popf
lahf
daa
cltd
test
sub
mov
push
mov
adc
in
jmp
aam
push
dec
test
add
dec
jmp
dec
scas
iret
outsb
jmp
rcll
adc
add
cmc
add
add
pop
mov
xor
mov
jp
cmp
mov
addr16
adc
int3
in
mov
mov
lcall
stc
cmc
nop
jge
mov
loope
popa
inc
jge
mov
xchg
stc
rcr
and
push
jecxz
inc
movsb
sub
mov
test
fldcw
cmp
pop
call
les
rorl
add
or
cmp
lods
pop
mov
sbb
sub
loope
fldenv
mov
imul
xor
je
inc
cmp
shrl
add
push
xchg
sub
cmp
and
je
lret
lahf
push
mov
mov
xor
jno
jmp
mov
out
arpl
cmp
es
push
subb
lret
push
or
push
ds
dec
jns
das
mov
add
sbb
std
sbb
stc
cld
or
das
wrmsr
xchg
mov
add
cmc
add
add
add
out
in
loopne
out
jnp
outsl
dec
test
sahf
out
and
scas
xchg
cmp
push
repz
stc
mov
adc
jle
mov
pop
outsb
les
lret
and
push
dec
push
dec
scas
loop
mov
out
fisubrs
or
fadds
fnstenv
arpl
outsb
leave
daa
sbb
sub
iret
push
pop
negl
pop
les
cmp
inc
mov
lcall
test
daa
aam
pop
or
xchg
repnz
mov
and
mov
out
sti
jno
mov
inc
stos
in
pop
push
std
mov
jp
lock
push
mov
jl
pop
nop
pusha
bound
adc
mov
fcmovu
loop
scas
jno
movsb
mov
pusha
mov
cmp
mov
add
add
pop
test
scas
repz
cld
cmp
jl
movsb
aaa
sub
and
add
mov
enter
int3
test
cld
push
daa
add
scas
jo
xchg
xchg
jne
mov
xor
test
fimull
and
pop
loop
xchg
out
shll
popa
out
rclb
test
sti
shl
jne
repz
hlt
das
sbb
pop
cmp
sbb
jne
notb
xchg
enter
cltd
iret
mov
or
push
push
mov
adc
cmp
jno
gs
inc
stos
in
adc
push
fmuls
push
lmsw
imul
jl
jno
les
xchg
out
add
mov
mov
fmull
mov
xchg
push
cmpsl
sbb
cltd
xchg
test
faddl
cmp
push
in
pop
fiadds
inc
and
pop
and
fs
xchg
sbb
add
add
add
dec
pushl
add
add
cmc
add
add
xchg
lods
cmp
xor
jmp
cwtl
stos
push
fnsave
insb
int
sub
jno
stos
or
into
mov
daa
lods
jo
pop
rolb
cmpsl
cmp
mov
push
mov
jmp
in
jg
and
dec
addr16
popf
sub
int3
push
jmp
pop
mov
fstpt
roll
and
pusha
lea
nopl
mov
in
fisttpll
push
in
adc
rorl
jle
nop
add
test
inc
fcoms
movsb
dec
fcoml
jmp
pop
and
out
aas
push
inc
in
je
cmpsb
lock
mov
dec
je
movsl
sub
outsb
mov
pop
mov
adc
bound
mov
mov
pop
fstpl
sbb
pop
mov
dec
scas
sti
sbb
jbe
jns
sub
add
add
inc
ja
pop
aas
pop
pop
inc
adc
std
outsl
and
add
add
test
fcompl
mov
cmp
push
pop
out
nop
subb
test
dec
hlt
lock
or
push
pop
or
xor
data16
mov
cmp
jo
push
notl
ja
push
adc
add
mov
sbb
test
xor
int3
sub
xor
js
add
push
xor
adc
jle
sbb
sub
push
ss
test
sub
ljmp
xor
cmpsb
lods
adc
dec
outsb
lds
push
xlat
and
gs
shrb
cmp
add
sub
adc
inc
adc
dec
sbb
fisttps
push
adc
out
sub
pushf
jno
sahf
xor
xor
xchg
cmp
icebp
mov
js
sti
insb
loope
add
mov
bound
xchg
mov
xor
sub
add
repz
jae
ja
div
dec
lods
push
mov
arpl
mov
add
add
std
sub
scas
cmp
push
xor
xchg
lods
or
addr16
fisubs
mov
shlb
push
cmpsb
call
or
mull
cwtl
pusha
inc
fdivrl
inc
clc
arpl
sub
add
dec
or
rolb
cmc
adc
mov
test
dec
add
stc
loope
pop
pop
lcall
stos
sub
stc
or
mov
or
shll
fisubs
sbb
fwait
je
test
imul
jnp
adc
add
fwait
repz
inc
dec
mov
jae
fstpt
mov
mov
push
out
fldenv
pop
cmpl
adc
add
mov
mov
lahf
cs
movsl
xlat
outsb
inc
aaa
stc
mov
mov
push
mov
pop
pop
cmpsb
fdiv
add
add
cli
std
jg
into
jno
xchg
add
cmc
add
add
notl
inc
fs
xchg
shl
mov
jge
jecxz
push
mov
mov
sti
xchg
inc
js
jne
dec
inc
imul
fildl
and
loop
mov
hlt
push
fistpl
adc
pop
mov
mov
mov
adc
push
mov
add
lret
nop
addr16
mov
sbb
notl
fwait
enter
hlt
push
inc
subb
push
scas
sub
add
jbe
fcoms
xchg
ret
sub
pusha
xchg
jo
xor
xor
cmpsb
cmp
movaps
lea
inc
xchg
hlt
xchg
lea
and
dec
imul
mov
jp
inc
incl
movsl
in
call
cmp
lcall
popf
add
inc
cltd
aas
xchg
xchg
cwtl
add
add
add
mov
std
incl
sub
pop
and
sub
je
add
cmc
add
add
out
ror
sbb
mov
test
xor
inc
xor
and
xorb
adc
lea
mov
dec
mov
shlb
daa
mov
test
cltd
mov
std
dec
and
out
iret
ret
insb
clc
ja
out
xor
test
xchg
pop
jecxz
jmp
mov
lcall
jmp
cmp
lahf
push
push
push
push
stos
roll
insb
push
clc
inc
xor
push
mov
push
jne
cmp
cmp
adc
pop
jnp
mov
bound
sarb
stos
adc
ds
aaa
pop
xlat
adc
fisubs
adc
sub
xchg
popl
adc
cmp
test
lahf
pop
xchg
dec
pop
ret
fwait
sar
mov
dec
aam
jnp
mov
inc
pop
movsb
mov
push
jns
rolb
add
es
jg
pop
xorl
pushl
jnp
sub
add
add
add
in
lahf
xchg
mov
mov
jg
popf
outsb
jo
push
mov
xchg
xchg
aas
mov
in
setb
pushf
sub
or
btr
gs
mov
mov
mov
mov
mov
and
cmpsb
push
push
popf
ja
and
cmp
stc
inc
xchg
cmpsb
stos
nop
dec
mov
adc
jge
loope
push
mov
jb
negb
xchg
jmp
jb
fadds
loopne
inc
test
fistl
enter
andl
lea
xchg
sbb
dec
stos
mov
arpl
lret
lods
add
cmpsb
test
lret
xchg
cmp
push
sub
mov
fildll
pop
pop
jns
call
loop
mov
out
push
push
inc
pop
fdivrl
fidivl
or
cmc
add
shr
pop
mov
mov
icebp
inc
cld
ss
in
movsl
jo
enter
imul
add
add
or
cmp
xlat
les
sub
add
add
add
ret
mov
push
jecxz
inc
xchg
subb
and
push
aad
or
es
or
fisttps
shl
in
push
aas
ret
push
lcall
insl
mov
jmp
shlb
test
jecxz
cmpb
pop
lret
mov
test
jmp
mov
cld
pop
mov
int3
mov
push
mov
inc
inc
out
fsubs
sub
jp
outsl
mov
cmc
dec
xchg
or
pop
cwtl
in
movsl
inc
nop
lods
xor
scas
dec
enter
and
and
mov
loope
xchg
fwait
push
in
loopne
mov
pop
cmpb
sbb
insl
sbb
adc
sub
or
mov
shll
into
sub
jge
popl
adc
test
mov
cmp
or
sub
add
add
stc
lods
xor
ja
lret
push
sub
add
push
rcll
jbe
add
sub
pop
imul
mov
xor
add
push
inc
in
adc
xchg
call
or
mov
or
pop
sub
sbb
movsl
ja
xchg
js
loopne
cmc
adc
or
outsl
jl
xchg
enter
mov
inc
xchg
pop
rolb
cmc
lds
jmp
mov
dec
mov
stc
in
mov
loop
cld
fstps
or
push
bound
xchg
mov
ljmp
pushf
jge
imul
xchg
sbb
pop
fs
adc
jmp
adc
popf
xchg
inc
and
shll
pop
push
aam
scas
stc
jb
xor
sbb
cmp
sbb
xor
or
dec
mov
subb
add
ficoms
stos
sbb
ljmp
scas
in
xchg
dec
add
cmc
add
add
outsl
repz
mov
add
push
sbb
xchg
add
sbb
outsb
jo
lods
fnstenv
and
jne
push
fsub
int3
and
mov
add
sarb
repz
scas
adc
xor
in
pop
stc
sbb
pop
adc
ds
cmp
jbe
movsb
fldcw
std
into
cmp
xor
lods
pop
test
add
fcomi
push
mov
push
stos
inc
xchg
ficomps
add
ret
pop
mov
xor
repz
popf
test
fwait
pop
push
inc
add
fildll
test
jnp
ja
fdivrs
aad
rcr
push
sbb
mov
sbb
insb
jecxz
lret
ret
popl
jl
push
test
fsubrs
ja
sbb
insl
adcl
or
cld
scas
sbb
xorl
add
in
out
sbbb
sbb
cmp
add
add
or
dec
pushl
mov
je
mov
inc
outsl
sbb
jg
mov
rol
sub
inc
aas
mov
cwtl
inc
mov
fwait
xor
scas
mov
mov
mov
and
or
push
je
cmp
and
pop
sbb
mov
in
out
loopne
leave
or
xor
out
fcmovu
in
push
shl
cltd
fsubrs
inc
outsb
outsb
test
inc
stos
mov
adc
mov
mov
dec
sarb
int
test
cs
mov
shr
aaa
fsubrp
pushf
divl
pop
fs
push
subl
popf
inc
xor
and
add
mov
in
xlat
dec
dec
xchg
jo
jmp
jecxz
stc
iret
movsb
sub
js
jmp
push
push
xchg
sub
je
mov
pop
jl
jp
testl
testb
add
sbb
out
aad
jo
fnsave
xor
add
cmc
add
add
lds
sbb
lret
imul
push
xchg
rcll
mov
add
mov
pop
stc
mov
xchg
dec
in
mov
and
in
ja
and
test
dec
nop
mov
sbb
fcoms
mov
ret
sbb
testb
cmpsb
adc
jle
mov
enter
call
push
add
loope
pusha
pop
mov
jl
sub
sbb
adc
adc
ss
jle
cltd
xor
arpl
aam
orb
cmp
add
and
iret
inc
adc
sub
sbb
and
dec
push
test
out
cmp
mov
in
aaa
dec
movsl
lds
ss
jnp
cmc
dec
dec
and
mov
jnp
push
repz
in
les
movsb
cwtl
fldcw
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
xchg
mov
or
cmp
cli
lret
insl
cltd
add
pop
jge
inc
mull
std
xchg
enter
jle
and
inc
in
out
mov
scas
mov
mov
inc
jmp
cmp
pop
pop
xchg
mov
jmp
jp
mov
subb
hlt
sahf
subb
lret
sbb
fmul
cmp
pop
mov
pop
stos
jnp
inc
and
dec
int
in
jb
sbb
mov
sub
sbb
pop
and
add
ret
aam
or
mov
pop
mov
cmp
jp
cmpl
addl
cmp
sub
add
xlat
pushf
mov
stc
in
pop
dec
lcall
jge
std
and
jmp
cmp
xor
add
add
lods
jg
add
lods
nop
arpl
sbb
add
cmc
add
add
jns
push
mov
ret
test
mov
inc
xchg
pop
andb
and
mov
seta
lods
inc
aam
rcrb
andb
add
mov
je
adc
pusha
lds
fadd
stc
movsl
mov
xor
ret
lds
int
movsb
jle
hlt
pusha
imul
and
xor
ss
out
data16
test
fnstcw
sbb
sub
mov
xchg
dec
add
jp
pop
mov
sub
xchg
jbe
adc
idivl
cwtl
repz
pop
jge
pop
bound
push
loope
rcll
and
int3
dec
xor
and
ficoms
jb
loop
pop
mov
xchg
jns
in
xchg
mov
mov
mov
negb
mov
and
add
mov
dec
idivl
cld
add
adc
adc
xor
add
add
add
pusha
addr16
int
push
data16
je
mov
push
push
pop
insl
mov
jg
stos
jmp
outsl
push
repz
mov
fs
pop
ljmp
jnp
cwtl
lock
into
push
cs
mov
rcr
rclb
mov
sbb
sbb
and
rclb
sbbb
int3
hlt
or
push
or
out
lcall
inc
aam
jg
pop
pop
xchg
push
jle
imul
cmp
in
xchg
bound
leave
cmp
mov
test
dec
imul
mov
and
outsl
lret
jle
add
fbld
xchg
out
mov
mov
pop
pop
daa
and
mov
sarl
out
imul
sub
lret
jbe
and
scas
xchg
mov
mov
aam
pop
add
add
mov
iret
mov
in
fstps
cmc
add
add
dec
outsl
mov
dec
fsubs
leave
mov
xchg
push
dec
push
scas
push
imul
mov
ret
dec
adc
xor
adc
call
and
lods
mov
push
mov
adc
cmpsb
add
lock
inc
dec
fucomp
movsb
popf
inc
cltd
and
in
or
inc
xchg
adc
mov
cwtl
mov
in
stc
jmp
xchg
and
push
xchg
std
xor
mov
jecxz
jae
bswap
ja
mov
out
mov
in
lock
das
sub
daa
std
mov
mov
adc
and
fsubp
xchg
push
daa
push
scas
xchg
enter
jns
jmp
xchg
inc
pop
int3
insl
lods
rcll
sbb
pop
loopne
pop
scas
sub
cmpsb
outsb
out
in
jbe
add
xchg
xor
mov
add
mov
sbb
mov
sar
xor
add
add
add
lea
xor
jae
pop
dec
mov
push
jp
stos
pop
inc
mov
push
stos
push
ficoms
cmp
xchg
movsb
iret
das
xor
sbb
je
and
dec
mov
out
hlt
inc
xchg
sub
shrl
popa
inc
fs
stos
push
pop
cmpsb
repz
xor
lcall
push
movsb
mov
mov
push
lret
mov
mov
add
and
out
adcb
xor
xlat
or
outsl
xchg
mov
data16
dec
scas
and
movsb
shr
int3
loopne
xor
test
or
cld
lret
int3
or
call
adc
fldenv
jmp
aas
sub
les
jbe
int3
jae
push
xchg
jmp
aad
dec
adc
arpl
xchg
rcrl
mov
pop
xchg
or
adc
add
add
xor
clc
cli
clc
sarb
repnz
inc
aam
insl
pop
sub
xor
add
sbb
call
insl
jne
pushf
es
jns
mov
in
mov
cmp
rcrb
test
rcrl
or
movups
push
jmp
cmpl
pop
xor
dec
popf
xor
je
test
mov
test
loope
xor
sbb
fistpll
adc
push
and
mov
std
js
mov
test
sbb
jge
cmp
es
add
cmpsl
cmpsb
jnp
or
jns
sahf
adcl
push
test
cmpsb
adc
in
je
jg
insl
mov
mov
sub
xor
mov
and
xchg
lock
cmp
cmc
push
movsl
dec
push
pop
pop
dec
cmp
push
fprem1
dec
push
xor
dec
aaa
cmp
fisubrl
leave
mov
add
test
imul
push
lcall
in
add
cmc
add
add
pop
ljmp
inc
jmp
xlat
in
pop
xor
in
loopne
mov
inc
sbb
cltd
xor
and
mov
gs
xor
call
inc
scas
sbb
add
adcb
repnz
arpl
sub
nop
jae
mov
sbb
loope
lods
sbb
push
fidivrs
dec
fwait
inc
push
adc
lahf
imul
pop
aam
xor
or
call
adc
or
mov
loop
adcl
cltd
mov
xor
inc
jmp
push
lea
loopne
movl
jp
jne
sti
out
fidivl
pop
sbb
leave
test
xor
clc
rorb
jno
xchg
jo
sarb
aam
outsl
test
jle
inc
add
in
jno
imul
pop
xchg
andb
cmp
add
add
es
data16
cmc
jle
dec
or
xor
fidivl
add
cmc
add
add
or
cmpsl
jns
fldt
sbb
scas
sbb
mov
ret
add
push
xor
adc
lret
push
mov
add
add
fistpl
cmp
xor
jne
dec
je
jp
repnz
scas
ficompl
sub
adc
fsubl
xchg
lds
mov
mov
push
lret
int3
movsb
dec
or
dec
mov
fcmovne
push
jmp
lods
jle
cmpsb
lods
add
sub
inc
ljmp
xchg
into
mov
mov
es
test
daa
xchg
rcll
mov
stos
mov
test
dec
xchg
adcl
or
data16
lock
testb
daa
fildl
scas
lods
or
int
shl
je
lret
ror
jle
add
inc
call
adc
add
dec
mov
imul
scas
leave
iret
cmp
add
add
add
ficompl
mov
add
cmp
fcompl
or
xorl
push
mov
jae
jle
sbb
xchg
int3
adc
xchg
inc
cmpsl
ss
inc
cld
insb
jnp
in
xchg
jp
mov
lret
mov
xor
sbb
mov
jl
jne
xlat
es
xor
jecxz
jbe
test
sub
jno
jns
inc
mov
inc
or
mov
mov
call
cwtl
pop
mov
sub
cmp
loope
pop
jo
arpl
ret
xor
add
xchg
inc
and
and
inc
jg
fsub
or
sub
les
arpl
mov
or
push
sbb
pop
bound
adc
dec
add
add
and
push
sti
cmpsl
pop
push
jo
pop
or
add
add
add
xor
adc
jg
lahf
mov
and
daa
out
add
add
sarl
clc
mov
cmpsb
xchg
cld
and
pop
insl
js
sub
push
add
stos
sbb
pop
adc
jle,pn
cld
movb
adc
mov
xor
loope
cs
mov
pop
xor
push
jecxz
pop
xchg
test
pushf
xchg
xchg
insl
sbb
sbb
push
jno
jle
hlt
aam
jmp
and
xlat
outsb
sub
inc
cmp
inc
jp
test
scas
push
int
cmp
cs
sbb
stc
and
leave
lods
dec
int
push
addl
mov
mull
inc
dec
and
das
lret
test
dec
mov
gs
pusha
imul
roll
fcoms
mov
bswap
inc
xor
xor
push
fs
clc
and
daa
pop
or
mov
add
add
mov
std
cmp
mov
add
cmp
add
add
add
push
dec
subl
pop
jae
frstor
adc
jb
cmp
ror
xor
imul
push
movsb
mov
enter
mov
push
or
mov
loope
fcompl
and
and
ret
test
fwait
mov
xor
loopne
into
or
scas
pop
pusha
shll
test
sub
inc
lret
mov
dec
xchg
mov
mov
scas
jl
dec
xorl
test
movsl
repnz
mov
jp
add
mov
das
jae
iret
mov
xor
mov
xchg
and
cmpsb
sub
or
adc
cmp
cmp
xchg
ja
in
cmp
mov
push
mov
mov
jmp
adc
jle
or
loop
cmpsl
test
lods
in
dec
xchg
ret
movsl
add
mov
add
add
and
jecxz
or
scas
cmp
add
add
add
cmp
and
ja
in
outsl
cmp
and
ja
loopne
test
sub
lcall
into
out
addl
data16
push
notl
jb
out
push
dec
mov
xchg
xor
stos
xorb
xor
outsb
mov
sub
mov
xor
mov
cmp
add
mov
push
rcr
dec
fwait
mov
and
movsb
mov
orl
adc
dec
cltd
sbb
repnz
pop
clc
jl
xor
jne
adc
push
pop
dec
cwtl
mov
testl
sub
sarb
test
popf
iret
ret
int3
outsb
nop
cmc
ret
icebp
jmp
bound
pop
pop
sbb
clc
fdivl
daa
xchg
sahf
in
pop
mov
push
and
dec
push
rcl
arpl
add
add
add
xchg
ficomps
push
call
add
add
add
sub
cmp
shll
pop
imul
js
mov
mov
fstpt
lds
lock
dec
sub
cltd
inc
push
retw
js
out
push
out
std
pop
lods
lret
sub
cmp
popa
and
sub
out
cmp
mov
mov
or
inc
outsl
push
fdivrp
lea
in
cwtl
xchg
mov
push
inc
and
and
xor
jbe
adc
jb
fistpll
or
lods
lods
dec
sbb
or
xor
dec
rcrl
sbb
into
add
dec
dec
notb
or
mov
adc
add
cs
xor
jecxz
mov
cmpsb
ffree
call
outsl
sub
out
pop
or
enter
or
fs
popf
loope
mov
icebp
imul
xchg
xchg
dec
sub
add
add
lods
xor
mov
pop
add
shlb
cmc
add
add
sub
xor
in
scas
or
dec
cld
aaa
pop
inc
scas
scas
dec
insb
arpl
insl
nop
mov
inc
xchg
mov
leave
in
sbb
rcrl
sbbl
xchg
ja
stos
aad
push
dec
fimull
mov
imul
pushf
jp
mov
jp
fwait
or
lahf
inc
inc
adc
sbb
pop
pushw
sub
call
outsb
inc
decb
pop
mov
imul
fistl
ret
test
pop
or
jecxz
push
in
rol
shrl
ret
add
popa
movsb
sahf
int
sub
stos
and
dec
and
mov
jp
scas
insb
lahf
jne
mov
xchg
lods
fsts
mov
icebp
rorl
das
daa
arpl
nop
mov
adc
cltd
mov
sub
fwait
lahf
add
loop
xchg
mov
pop
test
popa
add
add
lret
mov
cwtl
sbb
add
add
add
ss
xor
sub
cmc
nop
push
xor
lods
cmp
repnz
data16
and
sbb
test
leave
aas
inc
and
pop
mov
int
lahf
and
mov
sbb
jecxz
mov
ror
fnsave
fisttps
pop
imul
sti
test
cmpsb
sahf
and
jle
jmp
push
push
xor
ret
mov
loopne
push
imul
push
in
pop
add
fcoms
das
jbe
test
add
ret
shrb
fwait
shlb
clc
clc
mov
dec
or
rol
add
xor
or
dec
sub
dec
adc
push
mov
sti
into
and
mov
inc
cld
int3
pop
dec
pop
fists
or
scas
xor
pusha
dec
aaa
inc
loop
subl
jae
dec
jne
jo
xchg
nop
cmp
add
add
sti
pop
jge
div
cmp
mov
jbe
cmpb
add
add
add
cmc
clc
insl
ret
out
mov
addl
je
bound
movsl
aam
aas
call
mov
add
sub
subl
aaa
push
sbb
rclb
sahf
cmp
pushf
xchg
mov
pop
fcmovbe
ss
aam
or
repnz
out
push
cmpsb
or
shl
rcr
jmp
jp
and
ficoms
push
xor
push
inc
cmp
test
daa
movsb
push
call
out
cmc
mov
imul
fimull
mul
hlt
push
dec
xor
cmp
jno
mov
repz
mov
hlt
out
xor
inc
out
xlat
jle
inc
cli
dec
cmp
push
jg
adc
add
fmuls
jae
jp
ss
xlat
inc
in
inc
cld
inc
dec
cli
jmp
pop
fists
mov
pusha
cltd
fsub
std
in
popf
jle
es
sbb
imul
add
aad
cmp
pop
push
and
lock
mov
mov
insl
ja
fstpl
jnp
push
fcoms
push
dec
push
movsl
fwait
or
arpl
icebp
cmp
mov
and
out
fnstsw
cmc
xchg
inc
jbe
insb
xor
arpl
or
mov
das
aaa
mov
repz
jbe
adc
scas
push
js
cmp
and
call
aaa
ficoms
pop
add
push
shll
xchg
or
add
out
inc
scas
and
pop
inc
mov
mov
adc
xchg
xlat
adc
dec
jmp
shlb
shlb
mov
lcall
pop
test
loop
stc
xor
or
sub
mov
dec
inc
cld
pop
jcxz
or
int
xchg
or
mov
dec
xchg
jae
imul
push
add
add
jp
jnp
sti
xchg
jle
popf
loopne
cmp
add
cmc
add
add
ret
or
test
xchg
icebp
std
pop
cmp
in
out
pop
cmp
jge
lahf
or
mov
push
pop
imul
adc
pop
insl
cmp
popa
mov
enter
mov
shlb
pop
mov
scas
out
add
and
lcall
cmpsb
mov
add
dec
push
mov
cwtl
jns
xchg
fsubr
push
push
repnz
lock
lret
adc
push
out
sub
sbb
test
testl
stos
lcall
jnp
pop
rorl
xchg
xchg
and
push
mov
repnz
push
jb
pop
lret
sbb
xor
cmp
xchg
push
leave
hlt
stos
jne
sbb
adc
decb
push
add
adc
adc
les
sbb
xor
push
incb
lret
add
mov
push
sti
loopne
cmp
test
add
cmc
add
add
add
clc
cmp
add
mov
insl
and
insb
jp
sahf
dec
outsl
cs
out
adc
push
add
js
mov
in
cmp
mov
enter
movhlps
xchg
movsb
adc
xchg
adc
xchg
div
hlt
xchg
pop
push
gs
sbb
and
lcall
popf
cmp
inc
std
push
scas
insl
mov
bound
sbb
rep
fldt
dec
xchg
mov
inc
or
push
pop
inc
daa
int
push
sub
and
out
std
xor
stc
addb
pop
add
int
imul
nop
orb
popf
in
push
xchg
sbb
mull
icebp
or
dec
repz
dec
xchg
test
dec
add
add
sahf
jl
mov
or
xchg
adcl
or
sub
add
sbb
test
hlt
fwait
int
rcll
push
add
push
ret
cmp
and
push
dec
fnsave
jg
inc
add
cmc
add
add
add
aad
cltd
xor
sahf
mov
pop
imul
mov
or
push
cmp
sbb
fidivs
in
mov
mov
icebp
jge
das
mov
shrl
pop
mov
aaa
jno
pop
dec
mov
mov
out
sub
jne
aas
cmp
or
cmp
sbbl
stc
in
js
pop
fcom
jle
mov
loope
mov
in
ret
xchg
add
pop
jge
scas
stos
jno
popa
sub
outsl
xor
cmc
test
xchg
out
ljmp
fcoms
push
fwait
or
push
jmp
out
pop
add
mov
out
dec
in
xchg
sub
xor
mov
xchg
lcall
and
push
adc
sarl
sahf
and
addb
jg
cmp
lahf
xlat
or
lock
mov
add
add
cmp
jge
stos
movsl
push
arpl
sbb
sub
add
cmc
add
add
arpl
ss
xor
mov
ss
ror
dec
mov
xlat
icebp
sub
jb
stc
lock
insb
icebp
ss
adc
orl
fcmovne
aad
push
mov
jecxz
sub
sbb
popa
adcl
adc
testl
ret
cmp
loope
test
xor
mov
mov
mov
cs
push
cmpsl
enter
cmp
jno
mov
je
xchg
cli
stos
sub
test
pop
mov
jl
adc
test
loop
dec
xor
xor
mov
dec
rcrl
lock
push
out
inc
push
jb
xchg
pop
xchg
jp
mov
lock
std
xor
mov
scas
xchg
aad
jns
out
xchg
push
or
test
daa
test
aas
push
ret
aam
adc
add
add
rclb
mov
sbb
inc
add
cmc
add
add
dec
ror
aas
dec
add
movsl
out
idivb
mov
orb
add
lods
sahf
dec
pop
dec
fildl
ret
mov
adc
ret
inc
mov
ret
adc
pop
es
jecxz
mov
lret
clc
movsl
scas
repnz
pop
sarb
inc
dec
mov
add
or
mov
mov
jge
mov
shlb
or
xchg
es
pop
cmpsb
test
out
int
roll
mov
test
xor
lds
jae
mov
mov
daa
bound
test
xor
push
xchg
pop
xor
and
cli
inc
sahf
out
or
ds
xor
fs
or
mov
int
cmp
mov
stos
addr16
outsb
push
push
cs
stos
sub
push
outsl
or
mov
add
jl
dec
jbe
idivl
ss
repz
enter
add
cmc
add
add
sub
icebp
shlb
xchg
daa
push
xchg
sbb
popf
cmp
addb
sarl
mov
xchg
pop
cmp
fs
jo
inc
loope
iret
ja
pusha
dec
pop
jmp
jecxz
cmpsl
mov
or
stos
adc
shlb
mov
and
fs
ret
call
mov
and
jge
stos
adcl
stc
push
cmpsb
adc
pop
mov
setae
cli
mov
enter
and
rorl
push
adc
dec
in
repz
fisttps
insb
jle
or
pop
test
in
jmp
pushf
push
add
cmc
decb
pop
xor
mov
pop
push
mov
xchg
loope
dec
jmp
nop
call
jg
jnp
lret
stc
mov
repnz
fisubrs
jge
stc
mov
push
and
je
add
add
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
pop
cmp
inc
sub
testb
inc
stos
mov
mov
jns
shll
orl
mov
aad
sahf
push
xchg
faddl
mov
push
xor
mov
xchg
jmp
mov
pop
icebp
mov
mov
lret
jecxz
mov
fidivrl
int3
rcl
cs
mov
int3
inc
cmp
test
outsl
mov
test
pushf
cltd
lods
test
mov
fdivrl
shrl
push
stos
sti
cmp
ds
idivb
and
or
add
outsl
in
cli
in
dec
sbb
jnp
lahf
sub
in
sbb
mov
into
es
movsl
aad
loop
sub
inc
xlat
push
subb
cmp
ss
fisttpl
pop
outsl
pushl
add
push
nop
outsl
ljmp
ds
test
les
scas
fistpll
loop
imul
pop
dec
add
cmc
add
add
jne
out
mov
ljmp
pop
dec
data16
mov
sbb
xor
gs
into
lds
mov
rcl
and
jo
fimuls
scas
inc
dec
test
push
fdivs
scas
lea
sbb
in
adc
pop
inc
pop
nop
mov
mov
xchg
testl
cmp
and
scas
arpl
xlat
out
lcall
bswap
cwtl
sti
cmp
in
mov
fisttpll
adc
push
bound
mov
clc
out
std
jo
jp
adc
ds
xchg
js
lds
data16
aad
cwtl
ret
mov
xchg
aas
lods
cmp
add
lahf
pop
subb
neg
pop
aas
lahf
test
out
call
sub
xchg
xchg
pop
imul
xchg
fcmovnu
test
enter
add
cmp
les
fnstsw
jl
adc
add
cmc
add
add
int
jno
push
cmp
pop
lret
aaa
or
or
jb
sub
jns
imul
push
leave
outsl
lret
popa
xor
sbb
cmpsb
bound
pmaddwd
std
lret
mov
pop
xchg
das
sbb
stos
aas
xchg
in
int
add
jle,pn
clc
jl
das
mov
push
mov
push
sahf
aaa
adc
xchg
outsl
cmpsl
jnp
pop
add
jmp
sbb
cmpsl
jnp
cld
dec
dec
outsl
push
repnz
pop
mov
shll
inc
or
and
clc
jne
call
mov
ss
or
add
std
ret
pop
aas
jmp
hlt
int3
mov
rcll
fnstcw
xchg
mov
and
jae
movsb
mov
outsl
xor
inc
cmp
cmc
bound
mov
enter
popa
cmp
inc
flds
aaa
lcall
outsl
lret
mov
out
incl
arpl
xchg
adc
or
add
add
add
jl
lock
sub
stos
inc
sub
pop
adc
aad
xchg
enter
jbe
jg
adc
jne
sti
lret
mov
rcrl
xchg
xchg
pop
ja
out
out
fisttpl
loope
int
into
push
mov
sub
js
into
push
sahf
cwtl
imul
push
rcr
iret
cmp
jne
aad
hlt
push
cmp
lock
adc
sbb
shr
lcall
mov
cmc
popf
xchg
add
mov
mov
imul
insl
movsb
shl
sbb
mov
pop
cmp
enter
fadds
jl
sbb
mov
sbb
lds
cmpsl
or
adc
dec
iret
push
xchg
sahf
mov
sbb
add
sti
mov
pop
push
movsl
add
add
repz
cmp
lods
repz
in
pusha
out
jmp
jmp
decb
add
add
add
cmp
hlt
adc
add
mov
xchg
pop
push
dec
xor
sub
jmp
push
mov
adc
ss
lea
jno
pop
mov
pop
mov
or
sbb
sub
jne
xlat
push
scas
int3
shll
inc
jl
cmpsb
popa
in
fsubl
mov
mov
dec
mov
nop
fimull
mov
cmp
imulb
aaa
stc
mov
pop
mov
sub
xor
push
mov
out
cmp
jns
sub
or
cmp
jmp
push
scas
in
sti
dec
test
sub
loopne
pop
add
es
xchg
xchg
jb
mov
xor
sbb
movb
lcall
pop
xchg
sahf
xor
add
or
movb
add
daa
push
cld
push
std
jmp
push
jg
push
add
and
dec
add
cmc
add
add
pop
nop
rorb
ret
add
and
inc
outsl
or
or
test
cmc
popl
jmp
mov
inc
pop
mov
frstor
cmp
sarl
mov
int
fsub
cltd
cmp
mov
pop
pop
dec
xor
out
jno
into
push
dec
sti
movsb
and
insb
pop
push
in
add
icebp
xor
or
icebp
in
enter
push
repnz
mov
mov
aaa
pop
aam
pusha
sti
jns
adc
push
lcall
jo
xor
push
sub
sub
jns
mov
adc
inc
cmp
ds
fstpt
push
sub
mov
sub
lock
adc
cmpsl
cli
inc
or
pop
cmp
xchg
push
xchg
xchg
fcoms
out
ficompl
mov
inc
pop
enter
add
add
add
sbb
dec
push
cwtl
adc
insb
dec
sbb
dec
add
cmc
add
add
int
es
mov
shrb
sub
push
loop
js
xor
js
shlb
addl
cmp
test
stos
push
sbb
fsubrp
test
dec
cwtl
shl
bound
cmp
jle
push
push
xchg
or
outsb
sbb
lods
scas
jg
push
fnstcw
paddusw
xchg
pop
movsl
or
mov
mov
mov
daa
push
cmp
imul
sbb
adc
lahf
shl
sahf
shll
das
out
fs
aaa
lret
dec
mov
sub
xchg
mov
mov
shlb
enter
call
cltd
xor
push
and
pop
sub
lret
mov
fcos
mov
in
jo
cld
dec
jae
xorl
lahf
cmp
mov
maxps
popl
and
mov
insb
push
sarb
add
add
idivl
mov
mov
fisttpll
add
add
add
add
xchg
pop
mov
jo
idivl
mov
lea
cltd
cmp
sub
hlt
add
pop
add
inc
gs
push
pushf
sbb
lcall
mov
call
lods
jp
out
clc
out
adc
pop
pop
roll
test
mov
dec
dec
xchg
fdivrp
push
push
sar
xchg
pop
insb
push
sbb
decl
lods
or
cmp
fistpll
jne
in
fidivs
insl
andb
add
jmp
movsb
in
lock
inc
out
std
adc
fst
rcll
push
les
adc
xchg
sti
cltd
push
lret
enter
xlat
and
cli
addl
dec
in
push
adc
leave
xchg
fldl
popa
jnp
dec
xchg
fldt
jns
mov
add
mov
ja
jg
xchg
lcall
cmp
cmc
add
add
popf
inc
xchg
jg
fldenv
out
lods
dec
fnsave
inc
stos
ljmp
pushf
test
js
loop
xor
les
cmc
je
sbbb
mov
addr16
daa
jg
or
xchg
leave
sbb
mov
dec
mov
push
std
xchg
gs
fdivrl
inc
ficoml
imul
loope
adc
and
in
pop
push
and
cld
ljmp
leave
or
xchg
rcr
and
or
pop
mov
mov
sub
das
dec
jns
push
push
arpl
in
sub
cmp
push
add
enter
push
mov
std
out
lods
jle
icebp
arpl
rclb
inc
sti
rorb
cld
inc
lret
cmp
out
xor
dec
shrl
fisubrs
mov
jne
dec
mov
fcom
nop
es
inc
outsl
lods
inc
ljmp
push
int3
and
cld
add
add
push
dec
lret
jmp
imul
xchg
aad
push
cmpsl
cltd
dec
add
cmc
add
add
or
iret
dec
fidivl
cmp
nop
test
mov
stos
leave
cmc
es
inc
inc
jbe
pop
out
scas
mov
push
subl
jecxz
mov
ljmp
je
cmpsb
mov
cmp
mov
sbb
dec
gs
jecxz
dec
ret
shlb
neg
sbb
lock
pop
loop
shrb
dec
sti
mov
cmpsl
aad
rclb
xor
js
xor
loop
jae
dec
xchg
mov
ja
xlat
ja
pop
ljmp
leave
shrl
jno
lods
push
jl
mov
shll
inc
pusha
lcall
popf
addr16
adc
dec
enter
rolb
xchg
cmp
and
movb
pop
mov
test
ljmp
insb
scas
icebp
jo
inc
or
jle
xchg
into
add
add
cwtl
loope
std
jge
cwtl
and
cmpsl
mov
mov
add
add
dec
lea
repz
adc
mov
into
or
lds
les
and
ja
fdivrl
push
aaa
sahf
sbb
pop
and
in
cmp
loop
aad
cmp
jl
or
imul
and
mov
fs
frstor
aaa
stc
mov
inc
mov
clc
sarb
xchg
inc
loop
cmc
lcall
and
adc
inc
inc
out
inc
adc
les
mov
jbe
jnp
and
int3
or
xchg
fistps
cltd
inc
sbb
sti
push
movsl
clc
dec
dec
jb
jge
std
xor
mov
in
in
and
adc
push
or
mov
hlt
mov
sbb
adc
sbbb
push
cmp
push
mov
sub
jns
clc
mov
adc
push
add
cmc
add
add
sub
dec
cmp
cli
and
mov
sar
add
or
je
pop
jg
adc
out
cli
dec
sbb
pop
imul
xchg
and
cmp
stc
and
movsb
call
inc
stos
mov
mov
loope
jno
rcll
inc
movsb
sbb
rcrl
dec
inc
leave
mov
pop
clc
outsb
pop
cmc
popf
insl
cld
pusha
negb
add
in
imul
adc
pop
dec
sub
mov
xor
xor
aad
subl
cli
sub
bound
cmp
aam
push
xchg
adc
pop
lock
mov
jle
insb
nop
mov
mov
das
xor
add
mov
mov
mov
dec
test
call
pushf
pushl
imul
add
js
ret
jg
mov
inc
loop
cmpsb
push
add
cmc
add
add
xor
mov
cmp
xchg
mov
pop
and
jp
sbb
mov
icebp
push
movb
pusha
icebp
ret
test
lret
dec
xchg
xor
test
inc
jbe
pop
or
mov
rclb
jns
xchg
push
dec
and
mov
ljmp
dec
and
dec
aam
xchg
or
xchg
xor
insl
cmp
cltd
pop
insb
rorb
loopne
ljmp
jnp
cmp
inc
vandps
mov
xor
sbb
js
push
sub
jmp
imul
add
lahf
inc
mov
push
sub
notl
jecxz
mov
and
inc
sub
fisubs
aaa
cmpb
out
cmp
int
mov
repnz
or
dec
sbb
adc
add
add
das
mov
cwtl
out
daa
imul
hlt
fwait
push
add
cmc
add
add
hlt
sbb
mov
scas
dec
cltd
das
test
adc
xchg
sbb
pusha
pop
test
addr16
lock
add
jae
sarb
fwait
jnp
out
inc
fistpll
ljmp
pop
sub
mov
ss
enter
jp
mov
inc
ja
and
mov
scas
div
mov
test
or
loopne
pop
loop
pop
dec
aas
xlat
push
xlat
xchg
or
mov
jo
rol
mov
shrb
adc
jbe
dec
mov
enter
pushf
pop
std
ret
xor
faddl
adc
nopl
fistps
xor
lock
xorb
push
mov
jae
icebp
cmpsl
xor
clc
sbb
or
pop
push
arpl
pop
test
les
rorb
add
add
hlt
gs
push
sub
xchg
nop
push
add
cmc
add
add
jb
js
pusha
or
and
lret
mov
dec
je
jbe,pt
test
adcb
ljmp
movsl
pusha
pop
inc
or
mov
loop
cmp
pop
loop
jecxz
std
sub
mov
flds
ss
ret
xchg
call
rcr
ds
mov
in
add
shr
arpl
ret
sub
mov
dec
mov
push
add
cmp
push
imul
cmp
pop
mov
fistpll
inc
mov
push
sub
popa
jae
or
mov
mov
imul
or
movsb
dec
push
out
mov
and
push
subb
adc
aaa
test
or
test
bnd
lahf
cltd
sub
xchg
mov
and
pushf
xchg
xchg
mov
dec
adc
ss
mov
mov
add
add
aas
gs
repnz
and
sbb
test
add
add
add
daa
loopne
xchg
sahf
imul
imul
ret
cmp
dec
icebp
jb
enter
inc
sbb
mov
idivl
mov
mov
sbb
movsl
and
sbb
int3
dec
cli
jg
sbb
aam
push
mov
or
fildll
inc
jle
jle
sbb
add
ss
mov
xor
lret
add
pop
rcr
sbb
pop
mov
js
movsl
jle
pop
xor
sbb
ja
mov
push
mov
cmpsl
dec
outsb
mov
dec
or
or
cmc
sub
add
mov
aad
mov
aam
xor
movsl
xchg
je
fistpl
sub
fsubp
xor
js
sarl
idivb
pop
pop
cmc
pop
out
imul
push
in
jo
dec
scas
pusha
push
add
add
out
fisttpll
mov
jp
add
cmc
add
add
xor
std
iret
das
lods
jmp
fisubrs
or
pop
push
out
clc
mov
test
mov
jmp
dec
fsts
imul
cmc
js
sub
lcall
mov
inc
or
sub
ret
in
push
iret
pop
sbb
and
sub
imul
xor
sbb
jmp
lcall
mov
out
mov
faddp
add
jmp
xchg
push
pop
lock
lea
icebp
lret
sbb
mov
adc
xor
jl
in
sub
and
xor
rcr
pop
fcmovu
or
adc
sbb
pop
mov
and
jae
leave
mov
add
enter
push
sub
sbb
push
push
inc
mov
fs
add
fildll
mov
arpl
outsl
push
add
cmc
add
add
mov
aad
or
mov
and
daa
rcrb
pop
repnz
or
clc
xorl
fnstenv
mov
gs
movsb
and
jle
xor
mov
out
fisttpl
lret
cmp
data16
sahf
iret
cli
cwtl
loopne
xchg
sub
xor
les
cltd
xchg
jge
xorb
adc
inc
mov
les
mov
pop
mov
xchg
or
sbb
cmp
lods
je
xchg
xor
mov
fsubrp
loop
jne
fsubp
jne
mov
leave
dec
push
jmp
lea
mov
sti
nop
xchg
inc
sbb
jmp
lahf
xchg
movsb
xorb
push
pop
daa
sub
push
cli
fnsave
filds
stc
in
inc
mov
mov
fdivs
notl
scas
mov
fwait
and
add
push
sbb
jmpw
fnstcw
mov
dec
fs
add
cmc
add
add
jg
in
xchg
cmp
lods
push
cmp
pop
movsb
pop
mov
mov
mov
mov
in
push
adc
push
jmp
mov
inc
adc
sbb
dec
cs
sub
xchg
bound
mov
test
icebp
and
jo
mov
imull
aaa
sbb
mov
xchg
sbb
js
mov
ror
cld
adc
adc
inc
jecxz
push
push
fidivrl
cmp
popf
or
arpl
mov
adc
stc
movsl
loop
ret
cmp
sti
dec
imul
push
push
xchg
rclb
incb
not
dec
test
mov
cmp
xor
movsl
lods
lret
xchg
fldl
xchg
cmp
dec
or
sub
jb
xor
sbb
push
aad
and
sbb
mov
in
daa
push
int3
add
add
imul
out
mov
arpl
std
xchg
pop
pop
add
cmc
add
add
dec
xchg
jl
js
dec
inc
xchg
adc
xchg
or
add
xchg
out
stc
sub
mov
out
subb
jno
sub
xorb
and
iret
fidivrs
outsb
fwait
lret
out
rorl
adc
jne
rcrl
testl
sbb
insb
imul
stc
cmc
rorl
and
cmp
push
add
adc
push
xor
jno
push
push
loopne
jle
daa
ret
rcrb
jl
imul
xchg
popa
inc
test
call
inc
jne
int3
xchg
sbb
mov
mov
push
popa
xor
mov
stc
and
andl
mov
sarl
addl
mov
and
cmp
push
imul
sti
pop
inc
jae
mov
es
mull
add
add
add
dec
stc
mov
clc
add
inc
or
popf
dec
pop
add
cmc
add
add
scas
jle
jp
cwtl
xchg
cli
add
adc
sub
popf
imull
fisttpl
popa
lods
inc
adc
jae
xchg
push
aad
test
jmp
test
dec
sub
jmp
inc
push
adc
adc
outsl
mov
sub
mov
adc
popf
mov
xchg
cltd
cwtl
insb
sub
inc
mov
jle
add
testb
mov
mov
push
inc
rdtsc
mov
mov
call
addr16
mov
sarl
mov
add
xor
ljmp
and
loop
rcrl
adc
movsl
outsl
dec
mov
testl
sbb
jl
mov
and
in
pop
stos
sub
popf
and
ss
mov
mov
mov
xchg
jle
aaa
test
add
jg
cld
jo
hlt
leave
stos
popa
stos
lcall
add
fdivl
jmp
mov
mov
test
lret
aas
mov
dec
in
in
xchg
fwait
mov
mov
lret
add
inc
repnz
mov
jecxz
fdivrs
mov
lds
rorb
cwtl
inc
adc
lret
inc
lock
divb
cmpsb
jmp
jo
fwait
sub
push
movsb
iret
mov
sbb
cltd
les
stc
sub
ljmp
xchg
jmp
cmp
and
add
ret
popf
xchg
pop
out
fcompl
mov
dec
paddw
pusha
inc
xor
pop
and
adc
or
mov
shr
sub
das
outsl
cmpb
dec
mov
add
push
shl
inc
mov
pop
cmpsl
movsl
xchg
pop
das
mov
sbb
push
roll
decb
lret
add
xchg
mov
mov
cmp
cmp
cmc
add
add
xor
or
arpl
push
jae
pop
cmpsb
mov
in
enter
std
movsb
pop
jp
mov
loopne
sbb
hlt
mov
xlat
cmp
mov
sub
jmp
push
sti
aam
rcll
cmpl
push
movsb
xchg
jbe
int
jp
lock
cld
bound
mov
movsb
ljmp
mov
pusha
pop
fs
jge
jae
mov
adcb
iret
out
or
and
sub
sbbl
js
aaa
mov
int3
mov
outsb
pop
filds
out
jle
mov
mov
push
cmp
mov
outsl
insb
push
outsl
cmpsl
jg
ljmp
mov
enter
adc
inc
mov
and
into
sbb
pop
adc
add
add
jmp
call
adc
add
add
inc
mov
push
push
jmp
sahf
fisubs
jle
addr16
add
add
ret
std
movsb
lods
fsubl
cmp
loopne
add
aas
mov
aam
js
sub
aad
sbb
and
nop
add
and
xchg
mov
and
mov
mov
pop
jnp
sti
xchg
xor
jmp
out
sbbb
lcall
add
sbb
cwtl
adc
pop
out
cmpsb
jp
pop
stos
pop
mov
xchg
cmc
jg
pusha
add
and
sbb
out
inc
mov
add
fcoms
mov
pusha
pop
xchg
js
sahf
inc
push
imul
in
cs
dec
into
rol
dec
push
dec
lea
mov
divb
lcall
aas
pushf
insb
cmpsb
mov
sub
icebp
cmp
mov
jns
in
daa
addr16
mov
cmp
mov
jg
out
pop
and
add
fsubrl
mov
out
cmp
dec
pop
leave
out
pop
add
cmc
add
add
ffreep
pop
sbb
push
addr16
out
cmp
fdiv
add
test
or
into
lock
popa
jnp
icebp
rcrb
add
mov
sub
daa
mov
int3
shll
push
push
push
mov
mov
lahf
mov
xchg
sub
scas
sub
xchg
bound
xor
cwtl
push
xchg
insb
mov
inc
fwait
aad
mov
mov
mov
je
sbb
out
jbe
ret
sarl
mov
clc
je
lock
mov
out
stos
jl
mov
in
ret
outsb
xchg
cmp
mov
loop
ds
mov
call
nop
pop
or
aaa
int
inc
adcb
fidivrl
mov
xor
icebp
cmpsl
xchg
stos
imul
mov
repnz
pushf
sbb
out
and
mov
add
or
push
shll
out
xchg
inc
push
and
pop
add
cmc
add
add
inc
pop
inc
pop
and
or
xor
push
in
xor
xorb
bound
xlat
test
adc
adc
out
or
pushw
mov
leave
adc
mov
xor
cmc
mov
out
aas
int3
les
cmp
out
mov
dec
mov
mov
xor
mull
jb
es
out
xchg
adc
push
cmpsb
sub
loopne
cmc
stos
pusha
sub
daa
iret
xchg
dec
cmp
stos
mov
popa
pop
xchg
sub
iret
pusha
mov
aas
cmpsb
add
testb
sbb
sub
sbb
sti
aaa
jl
lret
sbb
cld
cwtl
dec
pop
mov
shr
pop
es
jne
jo
iret
fwait
in
adc
dec
add
mov
sbb
into
xchg
jns
ds
enter
sbb
jge
push
bound
inc
lret
fs
add
add
out
lcall
inc
and
call
and
cmc
add
add
dec
xchg
out
lret
into
icebp
shll
mov
push
xchg
nop
and
and
sub
dec
cmp
out
leave
mov
lods
xor
xchg
adc
fstpt
inc
jp
and
nop
pop
xor
cld
pop
or
pop
test
or
out
add
inc
ss
cmc
adc
or
fcom
je
xchg
imul
sbb
xchg
cmp
push
cmpsb
xorb
jo
dec
xchg
mov
sub
xchg
fadd
ljmp
xchg
mov
mov
sub
aaa
mov
add
ja
add
mov
mov
jmp
lods
cmc
mov
inc
outsl
out
repz
add
and
sti
mov
iret
popl
bound
sbb
add
add
jbe
idiv
imul
data16
add
add
add
add
pop
adc
testl
rorl
and
and
sbb
fstp
sub
or
lret
imull
in
sub
mov
dec
pop
dec
aad
into
enter
pop
xorb
ss
add
ret
mov
mov
inc
xchg
pop
cmp
lcall
mov
jge
ja
les
cmp
call
jecxz
fsubrs
mov
and
hlt
and
push
testl
lret
and
xchg
fwait
mov
mov
xchg
push
out
out
fidivl
in
lahf
jbe
filds
push
sub
xchg
lea
jae
jae
shlb
fs
dec
mov
adc
pop
popa
pop
enter
mov
sarb
xchg
out
ds
in
sbb
dec
xchg
aas
sbb
mov
add
add
fwait
cmp
dec
data16
mov
add
cmc
add
add
xchg
or
std
adc
out
shlb
popa
jmp
roll
insl
sub
int
lds
mov
in
add
cmpsl
outsl
cmp
xor
dec
push
out
pop
in
xchg
mov
std
dec
add
sbb
stos
int3
jae
adc
ret
jmp
push
dec
mov
jno
outsb
jnp
js
repnz
jle
adc
lods
lahf
ds
loopne
push
popa
in
cmc
and
xchg
cmp
imul
mov
jno
fsts
mov
jmp
inc
inc
sti
and
adc
mov
push
dec
inc
iret
mov
push
dec
fucomi
popa
test
push
test
xor
or
inc
or
in
sbb
les
lahf
jae
inc
adc
xchg
scas
jg
add
mov
inc
push
clc
mov
or
cli
movsl
adc
bound
add
add
add
sub
ja
pushf
mov
xor
sub
add
lcall
xor
mov
aam
mov
mov
jnp
xchg
and
test
adc
or
hlt
mov
aaa
jbe
and
dec
sbb
in
push
mov
sub
into
add
std
ja
adc
pop
sub
pop
jo
les
xchg
pushf
inc
into
mov
andl
push
sbb
test
lock
loopne
sahf
or
xor
cmp
or
ret
mov
mov
enter
jnp
inc
stos
lock
mov
movzbl
jb
sbb
gs
fadd
test
sub
xchg
lea
add
aad
adc
cltd
fnstsw
push
movsb
xchg
rcll
inc
repnz
push
ljmp
in
mov
dec
scas
add
add
shr
mov
and
pop
push
cmc
add
add
fsub
sbb
js
int3
inc
das
cmpsb
jp
bnd
mov
or
cmp
in
mov
js
inc
cmp
repnz
das
lock
leave
add
addr16
xor
cltd
ss
sub
mov
push
xorl
xchg
insl
jbe
ds
mov
jg
rcll
adc
fisubrs
addr16
dec
orl
push
xchg
push
jbe
stos
test
sbb
cmpsl
dec
cmc
dec
jae
addr16
inc
mov
ret
js
pop
lahf
push
adc
jae
loopne
sub
punpcklwd
mov
add
lret
or
cs
int
std
jl
cmp
repz
mov
imul
fcom
bound
push
repz
enter
mov
mov
add
mov
int3
rorb
push
jno
outsb
aad
add
cmc
add
add
dec
mov
xchg
mov
clc
scas
and
cmp
dec
ret
ret
mov
pusha
cmp
stc
js
mov
cmova
stos
fst
xchg
sti
cmc
adc
xchg
ret
ficompl
roll
pop
push
cmp
jo
mov
loop
add
push
iret
test
stos
push
stos
sbb
push
lock
xadd
pop
jl
enter
mov
adc
adc
add
mov
lahf
xchg
cmp
in
aas
ret
inc
mov
div
push
jl
shl
cmpsb
call
int3
and
imul
pop
cmp
in
scas
and
and
aam
scas
ja
sbb
sub
xlat
mov
push
and
push
sti
outsl
js
pushf
movsl
inc
frstor
addr16
xchg
dec
sub
add
mov
cmp
add
cmc
add
add
scas
push
xchg
pop
popf
cltd
mov
jecxz
clc
push
call
imul
pop
rcr
push
fcoms
xchg
hlt
add
jle
repz
mov
scas
pop
inc
arpl
mov
out
scas
or
in
ja
icebp
adc
inc
jle
fcmovnu
ffreep
sub
stos
pop
cld
xchg
test
int3
je
ss
adc
or
loopne
lahf
cmp
sub
into
sbb
or
movl
sti
subb
iret
jmp
in
pop
mov
sarl
pop
psrlw
dec
xor
mov
fcmovnbe
loopne
xlat
jg
push
imul
repnz
cli
cltd
mov
mov
mov
push
sub
call
and
jae
inc
and
ss
sbb
repnz
lods
add
add
fsubl
mov
lods
push
adc
add
cmc
add
add
dec
aad
sub
es
xchg
mov
data16
aam
dec
mov
lahf
aas
insl
xchg
jl
cmp
insl
adc
add
lret
mov
inc
movb
out
ljmp
push
inc
xchg
pop
das
push
cmp
push
lret
sti
cmp
pop
jp
test
push
sub
lret
rcr
test
jae
sub
fwait
xor
sub
xchg
push
or
mov
sbb
pop
enter
imul
adc
popf
mov
xor
ljmp
js
mov
ds
xchg
pushf
bound
push
and
fdivs
mov
cltd
xlat
fsubrl
pushf
iret
in
hlt
sbbb
cmp
sub
int
mov
lods
enter
mov
sub
inc
add
add
xor
mov
and
mov
add
cmc
add
add
repz
jp
mov
sbb
outsb
lock
fiaddl
push
push
pop
mov
arpl
push
mov
fisubl
mov
icebp
sbb
imul
cmpsl
mov
jmp
popf
pop
or
or
ret
inc
out
dec
jns
push
push
xor
mov
xor
mov
aad
adc
push
push
ret
mov
icebp
je
jo
in
pushf
nop
and
mov
mov
lds
or
shlb
push
adc
mov
or
mov
dec
inc
fcomps
xor
negb
xchg
push
dec
repz
ss
push
push
cli
xor
push
add
fnstsw
push
push
sbb
fwait
inc
shll
jle
clc
je
ja
mov
push
ja
mov
mov
add
mov
mov
sub
pop
mov
cmc
add
add
cmp
fwait
sbb
mov
inc
data16
out
inc
mov
sub
jo
mov
sub
mov
je
and
cmpsl
push
adc
xchg
pop
pop
rcl
or
inc
ljmp
xchg
sbb
fs
ficoms
mov
inc
add
in
cmpsl
and
test
pusha
in
push
inc
cmc
jp
adc
mov
rcl
aas
nop
lcall
mov
dec
sub
jne
push
cmpb
mov
push
lock
lahf
push
ret
mov
xor
sti
and
fiaddl
arpl
outsl
adc
or
dec
lcall
pusha
inc
stos
inc
cli
out
cmp
inc
cmp
push
xor
push
in
aam
scas
movsb
cmc
cld
hlt
mov
add
mov
jmp
push
push
jmp
pop
in
pop
aas
xchg
insb
cld
scas
add
add
push
into
push
cmp
sub
sub
imul
add
sbbb
repnz
ret
stc
scas
stos
mov
call
popf
sbb
cltd
outsl
mov
mov
les
sbb
push
push
sub
in
ljmp
clc
cmpsl
push
adc
mov
add
jecxz
mov
push
or
fsts
sub
divl
jp
add
push
sub
xchg
loope
jb
push
fcmovu
mov
mov
lods
jg
out
popf
out
mov
xorb
mov
insl
dec
popa
call
xlat
inc
inc
inc
sub
and
mov
cmpsl
rclb
or
fcomp
stc
hlt
add
inc
leave
jbe
int3
mov
imull
jmp
out
clc
sahf
adc
push
mov
inc
loopne
fs
sbb
inc
sub
and
add
add
xchg
inc
shl
xlat
mov
fisttps
jo
lret
xchg
push
add
add
add
sbb
fadd
push
lods
repnz
icebp
pop
pop
popf
pusha
sbb
mov
out
mov
das
sub
inc
popl
mov
mov
add
add
dec
dec
xchg
into
stc
fdecstp
fcmovu
xchg
notb
push
push
fwait
dec
loope
mov
inc
jmp
cmpsb
inc
scas
in
jmp
out
das
mov
outsl
popa
sub
mov
mov
mov
shll
frstor
and
jae
sub
and
dec
pop
xchg
sbb
out
adc
cwtd
fsubs
bound
adc
test
gs
push
scas
xchg
mov
or
jecxz
xchg
cmpsl
dec
lods
mov
xchg
fsubl
insb
data16
stos
cmp
sbb
es
fnstcw
push
aas
out
adc
cmpsl
pop
add
dec
bound
adc
lcall
add
add
lahf
pop
bnd
mov
mov
add
add
add
push
jp
int3
ljmp
xor
cmpsb
aad
adcb
or
push
mov
mov
pop
popa
mov
sub
insl
cmp
push
ljmp
out
dec
pop
mov
push
mov
sub
push
pop
sti
outsl
js
inc
daa
adc
fdivr
es
dec
and
dec
inc
add
int3
pop
mov
aaa
inc
sub
mov
daa
pop
adc
pop
jecxz
mov
or
mov
mov
mov
je
sbb
pop
roll
lock
dec
mov
add
stc
jo
jo
jmp
shrb
in
add
bound
inc
fnstenv
sub
imul
or
or
jmp
hlt
int3
ror
mov
clc
out
inc
mulb
jp
ret
xchg
mov
sahf
pop
testl
iret
jbe
jge
add
cmc
add
add
xchg
mov
jl
sub
push
out
fisubrs
dec
and
mov
xchg
push
int
stc
cmpl
jle
pop
push
enter
loope
mov
or
out
jmp
jno
arpl
fnstcw
mov
aas
or
cmp
stos
pushf
cmp
incl
push
fistps
mov
stc
aas
jbe
shlb
dec
add
pop
das
sbb
inc
add
mov
jne
jno
push
or
fidivrl
mov
inc
lea
sti
add
cld
adc
xor
and
dec
mov
pop
shr
jl
shll
orb
jmp
sub
add
testb
cmc
xchg
cmp
mov
pusha
xor
ret
jmp
mov
in
loope
and
inc
mov
int
mov
or
dec
dec
inc
and
xor
ja
in
add
add
pop
mov
movsb
inc
gs
stos
and
outsb
jb
add
cmc
add
add
mov
mov
push
xlat
cmp
xor
sbb
push
jno
sbb
or
popf
outsb
pusha
cmp
imul
xchg
mov
adc
loop
repnz
ficoms
notl
out
test
hlt
add
scas
adc
dec
test
cli
push
mov
dec
mov
xchg
lahf
cmp
hlt
ljmp
xor
xchg
out
jnp
mov
inc
sub
andl
bound
xchg
push
dec
sub
inc
dec
ret
push
mov
scas
push
std
test
dec
mov
loope
dec
mov
adc
dec
jb
xchg
ret
mulb
xorb
xor
les
out
fists
std
sbb
cmp
adc
dec
out
add
sbb
sti
aaa
adc
add
add
repnz
movsb
jle
mov
lcall
add
add
jae
cmp
lea
in
movsl
and
mov
push
fimuls
adc
mov
mov
pop
jns
fists
stos
cmc
lock
cld
fdiv
mov
cmp
stos
lods
add
out
add
fwait
mov
and
sub
mov
jne
adc
or
add
xor
xlat
push
cmp
hlt
inc
lcall
sub
xor
mov
rol
inc
sub
or
or
rcrb
jbe
push
imul
jecxz
xlat
js
popf
or
pop
and
or
lret
daa
lock
daa
sub
pop
pop
cltd
push
cmp
mov
inc
pusha
xchg
test
add
adc
jecxz
add
push
in
push
sub
les
sbb
scas
mov
leave
push
movsb
cmp
scas
dec
push
scas
cli
dec
or
jns
pusha
xchg
inc
iret
xor
sbb
sbb
add
add
jmp
sub
xlat
int3
inc
insb
pop
outsl
add
cmc
add
add
jecxz
cmc
loopne
xor
sbb
adc
mov
lds
rcll
sbb
orb
mov
xchg
mov
push
into
shrd
scas
in
mov
xchg
andl
pop
adc
clc
lods
aas
out
ja
lret
shlb
xchg
mov
jb
in
rorl
jl
lds
and
iret
cs
add
ljmp
stos
and
xor
jle
mov
pushf
fnstenv
stos
pop
and
add
loopne
cs
xor
sti
lods
into
dec
inc
cli
xchg
repz
pop
or
xchg
pop
mov
movsb
je
mov
ret
loope
cmp
nop
in
das
mov
js
mov
shlb
mov
dec
adc
and
push
pop
pop
push
xor
jb
cmp
jnp
js
and
mov
adc
inc
imul
add
mov
fnstenv
xchg
and
push
jo
add
add
add
and
pop
sbb
loopne
sub
mov
fldt
jle
sbb
je
lea
mov
aas
and
jp
xchg
xor
push
xchg
push
and
outsl
insb
push
movsl
rcll
cli
fs
mov
push
sbb
test
movsl
in
shlb
jnp
pushf
aad
pushf
inc
jno
adc
cmp
outsl
sub
ror
aas
inc
jl
pop
sbb
pop
or
repz
dec
sbb
mov
add
or
fs
lock
insl
pop
add
inc
inc
and
pop
dec
jmp
lods
sti
mov
cs
sbb
inc
clc
stos
add
cmp
outsl
int3
pop
addb
mov
pop
pop
cwtl
jp
push
out
popa
or
dec
loop
movsb
aaa
xlat
and
push
xchg
xchg
sub
cwtl
sbb
cmp
pop
cld
add
add
cld
je
jbe
jmp
lea
xchg
jl
hlt
fiaddl
add
cmc
add
add
shll
cltd
fs
inc
xchg
sbb
jp
mov
mov
sbb
out
in
cmpsb
xchg
test
mov
mov
insb
cmp
test
imul
or
sub
mov
dec
cmp
jne
pop
rcrb
ret
daa
jno
mov
pop
stc
std
clc
fimuls
enter
jbe
mov
imul
jp
scas
add
pop
push
dec
mov
add
mov
sub
sbb
sub
sub
repz
pop
mov
cmc
mov
and
jnp
dec
movsl
inc
xor
ss
test
sub
sbb
push
cmp
aas
dec
lods
sbb
inc
loop
xchg
ds
loop
rcl
or
mov
lods
cli
and
and
xor
ret
dec
xor
dec
fwait
mov
roll
leave
pop
xchg
mov
pop
push
inc
popl
add
push
cltd
jmp
fcmovnbe
cld
xor
fs
cwtl
mov
jb
add
add
add
hlt
jle
xchg
jns
pop
dec
add
insb
sbb
int
jmp
iret
jno
jbe
iret
adc
imul
addr16
inc
daa
aad
mov
jnp
add
data16
movsb
inc
mov
insl
jp
xchg
pop
aaa
dec
push
mov
pop
out
add
test
mov
int3
inc
jnp
and
stos
mov
jne
std
je
sahf
dec
mov
push
inc
jno
cmp
push
fistps
and
adc
adc
and
ficoml
adcb
xorl
pusha
mov
cld
outsl
sub
sub
cmp
mov
mov
push
cmp
sub
lock
inc
push
adc
dec
xor
push
inc
push
jle
xchg
fsubrl
inc
in
pop
popf
shl
sahf
ficoml
jle
xlat
lahf
fnstsw
xchg
in
aam
adc
jno
jo
cmp
adc
add
mov
mov
push
jg
pop
jne
ret
shlb
jae
add
add
add
icebp
sahf
and
sub
daa
xlat
shlb
push
pop
lea
call
scas
xchg
xchg
fwait
mov
sub
out
cmc
fnstsw
sub
jns
cltd
mov
cs
inc
cmc
insb
xchg
mov
imul
sub
sub
or
cwtl
adc
in
js
and
jmp
inc
adc
sbb
cmpsb
in
pop
sub
cmc
dec
testl
roll
cmp
sub
rcl
adc
lret
mov
out
mov
lahf
push
scas
hlt
imul
jmp
int3
gs
bound
test
stc
pusha
outsb
mov
inc
leave
idivl
push
daa
cmp
or
sub
aas
xchg
push
repz
popa
nop
dec
outsb
repz
push
mov
cmp
in
sub
add
add
mov
fucomip
addr16
mov
add
add
add
xchg
int
jo
jge
jbe
cmp
inc
push
cmpsl
les
or
or
xchg
js
fstpl
mov
sbb
xchg
mov
bndldx
mov
jnp
js
test
xchg
jle
mov
rcr
mov
sub
hlt
lahf
fwait
mov
in
popf
je
mov
inc
cld
ja
jnp
shlb
push
jo
cmpsl
clc
pusha
cmp
repnz
sbb
test
jmp
adc
movsl
inc
xor
push
push
and
lret
mov
or
mov
pop
jae
in
aaa
mov
push
jno
xchg
cld
sub
shlb
xchg
into
dec
incb
aam
xchg
dec
lock
fbld
mov
call
cltd
jno
loopne
xorb
lcall
fnstcw
movsl
nop
add
add
dec
out
iret
jmp
cmpsb
addr16
std
mov
sbb
add
add
add
iret
mov
and
jle
inc
and
cmp
movsl
ds
pop
in
movsb
xchg
mov
adc
add
mov
inc
jg
dec
cmc
outsb
fnop
and
out
nop
aad
mov
loop
rolb
lods
add
sub
arpl
jle
push
fisubl
and
cld
adc
and
popa
mov
cmp
inc
js
mov
xchg
jle
pusha
sbb
sbb
imul
aad
orl
sar
push
adc
sub
xchg
test
mov
ja
mov
call
sti
adc
arpl
into
sub
and
shlb
fsubrs
push
pop
inc
sbb
and
and
dec
push
scas
add
fidivrl
ret
adc
mov
add
std
cmpsb
pop
lods
jne
xchg
mov
jbe
add
add
add
out
lock
and
mov
pop
lods
es
clc
in
out
jp
pop
test
ret
mov
inc
sbb
jge
mov
mov
cs
cmp
dec
xchg
jb
inc
in
adc
mov
jg
push
or
aas
inc
dec
push
mov
repz
mov
fiaddl
loopne
inc
jbe
xlat
and
cli
adc
push
into
pop
mov
pop
mov
xor
push
sbb
adc
jno
das
lret
mov
rcrl
ds
dec
cmp
roll
fnstcw
test
std
loope
data16
jp
shrb
lahf
lods
xchg
lds
addb
cmp
ja
out
gs
rcll
int3
ret
ficompl
and
mov
mov
or
and
lods
xchg
pop
loopne
in
stc
fidivrs
mov
mov
mov
add
add
neg
std
stc
idivl
das
add
add
cmc
add
add
jmp
mov
or
aam
push
jae
jno
fnstsw
sub
testb
sahf
pusha
sub
sbb
mov
loop
add
pop
inc
or
movsb
jmp
fmuls
inc
push
push
cli
mov
dec
cmpsb
mov
push
mov
push
lret
xchg
pop
and
aaa
imul
push
cmpsb
sbbl
mov
adc
into
out
xchg
pop
lcall
fsubrl
and
sub
dec
fs
add
inc
bnd
cmpsl
lret
movsb
mov
imul
push
pop
cmp
lds
mov
push
push
jne
lds
and
dec
dec
jae
pushf
les
lret
stos
and
les
in
lcall
in
pop
cmp
push
cwtl
inc
add
push
lret
aad
xchg
pop
scas
pop
add
or
lret
xchg
cltd
imul
pop
sub
negb
add
add
cs
mov
ljmp
add
xchg
test
cmp
mov
or
in
pop
cmpsl
jp
mov
sti
mov
ds
bound
lret
adc
or
sub
jg
cld
in
jno
out
cmpsl
ds
rcll
push
pop
and
int
push
push
fs
ljmp
lods
cs
stc
fldt
adc
xor
mov
mov
cmpsl
jg
push
push
call
bound
mov
mov
dec
lea
sub
test
loope
xchg
pop
repnz
or
xchg
pop
add
sbb
pop
lcall
outsb
cmpsl
and
jne
sbb
xchg
sub
addb
pop
adc
nop
inc
out
xor
enter
xor
popa
jbe
jmp
scas
jle
rcr
cwtl
or
nop
lret
fs
call
mov
add
add
ja
out
dec
jg
aad
enter
js
add
add
add
xchg
jecxz
cmpsl
in
jp
inc
mov
sub
test
adc
xlat
imul
in
pop
pop
dec
loopne
pop
sbb
lcall
nop
jp
xchg
rolb
adc
lahf
dec
scas
lods
mov
lods
pop
sub
jl
pop
sbb
push
add
xchg
scas
insb
xor
mov
lcall
jmp
filds
cmp
sbb
xor
int3
clc
push
ja
xor
add
movl
sub
mov
sahf
mov
pop
jno
movb
mov
jno
faddl
push
jl
mov
shll
jb
jns
imul
imul
mov
movsb
loop
data16
mov
and
stc
int
inc
test
sahf
mov
adc
or
and
push
or
dec
test
adc
and
aaa
std
add
add
sub
ja
mov
paddq
jns
add
add
add
lret
pop
scas
push
adc
mov
ja
push
movsl
sbb
sbb
or
sbb
dec
xorb
jle
xor
adc
stos
add
xlat
popa
sbb
sbb
pop
fmull
push
js
dec
xchg
stos
jb
pop
pusha
mov
pusha
and
adc
and
pop
movsb
mov
bound
push
xchg
and
add
sub
and
lret
je
pusha
pop
jp
insl
push
add
popf
push
sti
shlb
arpl
aad
sub
call
lods
jge
lods
movsl
pop
fisttps
movsl
jne
push
or
add
fistl
repnz
je
fldcw
lods
inc
in
fsub
sub
insl
jl
push
mov
add
push
pop
aad
inc
loope
rcr
pusha
push
dec
rorl
shll
push
or
jae
mov
add
cmp
jnp
jge
xchg
cs
mov
jp
add
add
add
imul
inc
sbb
dec
mov
in
loop
test
lahf
xor
orl
and
mov
loop
inc
mov
xchg
cmc
arpl
fbld
cmp
or
jmp
pop
mov
pop
pop
adc
pop
and
lock
lret
dec
testl
ret
pop
pop
jg
icebp
mov
pop
test
cmpsb
lcall
cli
in
push
popa
push
lret
pop
std
int3
or
or
xchg
fildl
je
lcall
andb
jo
add
push
shl
popf
sbb
pushf
lret
jle
jo
mov
jne
das
icebp
sbb
in
cmp
pop
xor
push
hlt
dec
mov
adc
out
pop
out
mov
and
sbb
xchg
mov
add
cli
xchg
jle
mov
mov
jnp
add
add
add
push
insb
loope
push
jbe
sub
ret
xchg
push
mov
mov
ja
dec
dec
stos
rorl
inc
xchg
pop
push
cltd
notl
pop
jl
and
mov
jp
add
or
out
imul
aas
cmp
xchg
sub
lahf
dec
push
jle
cli
insl
jg
fiadds
pop
outsl
aam
push
adc
ret
sub
rol
lds
testl
xchg
add
jge
lea
sti
movsb
inc
jnp
xchg
lret
insb
mov
icebp
nop
mov
leave
flds
aas
mov
clc
pop
push
inc
je
mov
loope
lret
insb
enter
les
out
stos
mov
pop
scas
jge
jecxz
cmpsb
cmp
aad
inc
xor
stos
xchg
testb
lret
dec
sti
sti
jmp
fisubs
repnz
pop
dec
inc
inc
repnz
add
fwait
jnp
aad
gs
into
add
es
ret
add
add
add
push
and
or
xchg
and
add
out
lods
outsl
fidivl
bound
pop
cs
leave
outsb
mov
aaa
mov
sarb
sbb
mov
adc
dec
add
js
aas
das
rclb
fs
pop
push
cmc
outsl
cwtl
pop
es
aas
ja
out
jg
xchg
fs
mov
iret
pop
out
xor
aad
mov
pop
js
insl
fucomi
add
addb
hlt
pop
leave
xchg
aad
dec
out
or
repnz
rolb
mov
je,pn
rcll
sahf
inc
add
push
pop
push
aad
es
sub
fstps
mov
cli
cmp
enter
inc
mov
mov
xchg
cs
push
shl
adc
pusha
out
out
xor
fdivrs
lea
les
jmp
int3
push
nop
and
dec
notl
add
add
std
mov
enter
shlb
add
add
pop
nop
jne
leave
push
or
push
negb
ret
mov
insl
icebp
push
xchg
xor
adc
mov
pop
dec
icebp
cmp
dec
cmp
aas
xor
jl
bound
popf
loopne
lret
incl
mov
popa
out
pop
jne
xchg
sbb
rcl
push
ljmp
jbe
stos
inc
shll
lods
pushf
or
pop
xor
inc
imul
aas
sbb
lret
mov
push
jecxz
shl
cmp
out
sbb
add
push
adc
movb
das
std
inc
das
dec
cmp
mov
inc
xchg
inc
data16
shlb
mov
idivl
adc
cli
add
jp
loope
xchg
filds
mov
mov
lret
mov
or
out
dec
push
lcall
repz
neg
and
mov
pop
add
int
mov
dec
jns
add
adcl
xchg
ffreep
dec
imul
mov
hlt
lods
jle
add
add
add
lds
xor
xchg
lret
pop
iret
lahf
ror
mov
dec
addb
jl
sub
mov
rcr
pusha
jns
inc
iret
add
imull
in
pop
jmp
js
pop
xor
ret
lock
fcmovnb
out
adc
jno
nop
loopne
scas
imul
daa
testb
xor
inc
ret
cmp
or
int3
push
ret
inc
aam
xor
push
movsl
leave
jecxz
push
sub
mov
hlt
aaa
mov
jb
test
inc
mov
cmp
lods
mov
xor
in
ljmp
out
inc
das
jle
and
imul
push
adc
mov
out
mov
ret
xchg
fsubr
mov
cs
mov
fmull
fwait
inc
inc
mov
push
fsubr
aad
adc
fcoms
push
jno
add
xchg
add
add
bound
in
pop
test
xlat
mov
mov
add
add
jmp
mov
sub
lret
imull
bnd
jns
ror
shrb
and
cwtl
cmp
jo
adc
and
lret
sarb
adc
push
loopne
xchg
mov
adc
mov
loope
rcrl
xor
dec
ret
xor
cmpsl
ficomps
icebp
rcll
in
push
inc
dec
sbb
lret
mov
inc
jmp
xchg
rorl
cld
add
xchg
scas
jg
imul
daa
mov
test
aas
inc
subl
sbbb
ret
inc
push
mov
pop
gs
fsubrl
dec
adc
scas
lcall
outsl
jle
or
add
daa
adc
in
jns
xor
pop
push
in
inc
frstor
call
jno
fcomps
cmpsb
jl
movsb
dec
aas
cmpsb
imul
arpl
cwtl
xor
mov
add
add
divl
bound
and
xchg
addb
cmc
add
add
movsl
sbb
add
mov
lea
inc
aam
pop
mov
push
sbb
ja
divl
std
rolb
cmpsb
fsts
daa
jne
outsl
xor
xor
ljmp
aam
mov
adc
mov
inc
mov
mov
pushf
push
pop
jle
mov
add
push
std
loopne
mov
fs
push
imul
test
mov
cmpsb
testb
subb
arpl
inc
inc
push
mov
xchg
push
xchg
mov
jecxz
je
mov
test
nop
stc
dec
push
adc
outsl
stc
add
push
or
mov
fdivrs
xlat
or
push
enter
in
icebp
out
or
seta
leave
push
pop
xlat
xchg
stos
cmp
push
sahf
adc
fildll
out
add
add
fisubs
mov
push
mov
outsl
cltd
mov
add
daa
adc
push
add
cwtl
ds
adc
jp
xchg
pop
inc
fsubrl
jbe
shr
inc
fnstcw
pop
fld
mov
push
pop
or
loopne
lea
int
dec
add
or
dec
cmp
ljmp
add
movsb
lock
test
test
int3
arpl
or
inc
std
idivb
js
inc
add
icebp
popf
in
ss
inc
push
test
ret
mulb
xchg
lret
mov
push
sbb
xchg
jbe
push
out
out
adcl
pop
out
push
rorb
imul
shlb
imul
pop
pop
mov
pop
ficomps
mov
inc
cmp
addr16
sub
jbe
push
add
fistpll
lret
lret
int3
out
push
and
and
cmp
outsl
mov
jae
inc
jb
xchg
shlb
mov
repz
push
filds
add
add
jae
xchg
scas
clc
icebp
gs
push
inc
test
cmpsl
jno
jae
outsb
push
out
xchg
lahf
adc
jno
xchg
out
adc
int3
pop
leave
jbe
out
mov
adc
cs
mull
dec
push
inc
add
rorl
adc
fs
fwait
mov
push
inc
insl
adc
fdivrs
pop
or
movsl
in
mov
and
cmpsb
sub
jl
dec
mov
cli
adc
sub
fisttps
mov
inc
divb
ret
outsb
fcmovne
xor
or
les
mov
mov
shl
aam
outsl
mov
mov
cmpsl
insl
arpl
xchg
aaa
aas
adc
lret
aad
sub
xor
lret
fwait
mov
push
xchg
xor
fiaddl
add
orb
jle
insb
xor
popa
xchg
cmc
add
add
cmp
js
pusha
cmpsl
fnstcw
jo
cli
ret
jl
adc
test
mov
loopw
xchg
rcrb
sbb
fcmovb
pop
add
in
adc
cmc
shr
pop
lods
fdivr
in
test
dec
pop
mov
int
test
mov
hlt
movsb
popf
fnsave
jbe
add
loop
ds
jl
andl
inc
out
push
scas
inc
xorb
rcrb
jp
mov
adc
push
mov
mov
cld
xchg
mov
lea
gs
push
dec
scas
adc
shll
imul
jne
xchg
mov
mov
repz
mov
xor
sub
adc
js
or
out
inc
push
test
jno
pop
or
or
adc
add
jo
ja
std
stos
lods
and
fldl
sbbl
test
add
add
add
xlat
cmp
push
sbb
xor
dec
scas
gs
mov
sbb
dec
mov
adc
mov
fidivs
push
stc
or
inc
dec
aam
push
sub
adc
adc
and
jmp
daa
and
cld
xorl
insl
outsl
jp
xchg
popl
out
push
push
jle
cmp
xor
sahf
mov
mov
mov
shll
adc
into
ret
ja
jmp
jg
lods
mov
mov
jbe
jmp
or
frstor
xchg
jp
sarb
popf
shll
cltd
hlt
imul
ljmp
jns
mov
and
stos
add
aam
fwait
ljmp
dec
fsubs
aad
aam
cmp
pop
fwait
lds
mov
iret
fidivl
jo
add
mov
cmpsb
arpl
je
mov
mov
cmc
add
add
out
mov
push
xchg
shll
inc
jns
dec
int3
addr16
bnd
xchg
or
mov
adc
xor
sti
dec
mov
dec
jle
int3
inc
pop
jo
adc
psrlw
push
xchg
das
lcall
mov
cmp
cmp
pop
aam
ljmp
adc
mov
rorb
js
les
out
sbb
pop
xor
mov
push
call
lods
add
insl
xchg
lods
test
aam
and
jae
add
mov
call
sbb
mov
jo
or
xor
cmpl
rolb
rorl
adc
out
add
fistl
repnz
mov
fsubs
xchg
inc
fsubrs
jmp
sbb
daa
addb
xor
add
xor
cli
mov
arpl
mov
xchg
add
add
add
sub
test
fsubl
sbb
mov
stc
dec
adc
pop
adc
jge
loope
mov
cwtl
xchg
add
shrb
test
pop
push
push
mov
and
xchg
inc
mov
push
movsl
or
int3
pop
pop
out
or
mov
sbb
push
inc
js
inc
call
insb
rcrb
inc
mov
or
std
jne
jae
push
jbe
push
inc
inc
shlb
in
cld
popf
fmulp
add
ja
into
cltd
cmp
mov
jl
mov
xchg
xchg
mov
pop
pop
ud1
sub
mov
pop
ja
mov
cmp
fistl
and
rclb
inc
nop
and
inc
inc
scas
lcall
mov
push
gs
stos
scas
add
jg
cwtl
faddl
iret
inc
mov
lock
add
std
test
ljmp
std
fldenv
add
add
in
lahf
mov
dec
fnsave
mov
and
and
addb
sub
cmc
ret
push
jge
inc
mov
movb
lret
sahf
je
mov
push
add
pop
push
out
fsts
push
scas
or
fwait
lea
lods
cmpsb
lods
clc
loope
xor
imul
in
ja
mov
stos
adc
sbb
cmc
mov
lahf
xchg
xchg
push
mov
inc
sarl
jb
in
testl
insb
or
push
int3
loope
mov
aas
xor
sub
sub
xchg
mov
roll
aas
xchg
inc
push
enter
cmpsb
mov
and
fcoml
xchg
loopne
movsl
sti
fsubr
sbb
mov
push
push
sub
call
je
xlat
rcrb
adc
bound
aaa
sub
cmp
cmpsl
add
add
xchg
xchg
jns
incl
push
mov
cmc
add
add
mov
mov
lods
mov
stos
jge
pop
jmp
incb
and
daa
cwtl
test
fiaddl
jns
fisubrl
ja
mov
push
pop
aad
mov
push
lds
pusha
cmp
mov
mov
into
push
sbb
stc
fs
jl
xchg
fmull
mov
push
flds
cmpsb
les
add
inc
adc
out
divl
inc
mov
cmp
pop
cld
rol
cmpsl
ss
lret
mov
jecxz
inc
jge
cs
lea
aam
jne
push
ljmp
push
and
jne
cmp
adc
cmp
jae
sub
cmp
xchg
cld
clc
scas
bound
jb
pushf
mov
mov
dec
mov
cmpsl
pop
cwtl
push
sbb
sub
addb
ljmp
pop
or
roll
sbb
add
scas
lcall
xchg
dec
lea
xor
add
cltd
loopne
adc
mov
inc
or
jl
int3
test
mov
fbstp
aad
shlb
jle
jge
sub
cmpl
test
dec
sub
jne
jns
pop
adc
sub
cmp
stos
xlat
xchg
jae
rclb
jmp
jecxz
int3
cld
repnz
in
gs
jnp
jp
and
cmp
sbb
cli
scas
jecxz
xlat
push
mov
bound
pop
movsb
push
rcl
sub
push
sbb
jmp
mov
mov
jne
dec
dec
pop
js
pop
inc
pop
push
test
push
fsubl
popa
or
sbb
pop
test
jl
mov
lock
pop
push
jns
test
mov
movsl
int
shrl
cltd
push
lods
sti
xor
inc
xchg
sub
insb
xchg
jge
or
jns
adc
or
jge
enter
out
adc
inc
les
jnp
xchg
fwait
sbb
jp
sbb
add
add
mov
idiv
fst
inc
sahf
pop
mov
loopne
sub
add
gs
fs
sahf
cmp
mov
jno
lret
inc
addr16
addr16
pop
mov
cmp
popa
leave
in
imull
xor
loope
push
mov
mov
test
hlt
pop
cmpl
mov
cmpsl
frstor
push
xor
pop
cs
call
xor
lret
dec
and
mov
loope
test
and
pop
mov
mov
jmp
cld
or
popa
sub
enter
out
jmp
push
fwait
cmp
dec
sub
xchg
hlt
pop
jne
jl
mov
sbb
fmul
cwtl
je
fdivrs
jnp
aad
repz
adc
sbb
in
mov
and
jns
rcrb
or
inc
das
mov
and
mov
add
xchg
rcll
mov
aaa
jb
push
mov
push
sti
lods
dec
cmp
mov
jae
mov
add
call
and
mov
push
in
mov
add
add
add
adc
pop
scas
add
adc
lcall
filds
pop
gs
fbstp
push
sbb
xor
mov
sub
fwait
pop
daa
add
std
dec
dec
jo
popf
mov
test
cmp
mov
and
fimull
adc
lret
loopne
or
lods
mov
aaa
mov
jge
jae
divl
repz
mov
lods
sbb
mov
mov
stc
insb
nop
push
in
test
adc
mov
xor
xchg
daa
shl
pusha
or
mov
aaa
hlt
xchg
lcall
push
jecxz
cmpsl
xor
xchg
filds
mov
icebp
jle
adc
pop
dec
fldenv
mov
adcl
mov
mov
sarb
and
add
add
sti
iret
and
repnz
add
add
add
ficomps
mov
jo
cmp
inc
push
jbe
jmp
inc
or
int3
mov
jnp
sti
aaa
pop
inc
ljmp
cs
xchg
xchg
add
ds
jb
outsl
inc
daa
inc
ret
mov
enter
ret
mov
pushf
lea
roll
mov
int
mov
cmp
and
lcall
mov
dec
lcall
mov
dec
sub
and
lods
shl
mov
imul
pop
pop
dec
cmp
ret
dec
dec
sub
adc
rcr
adc
or
push
pop
jl
mov
sbb
mov
loop
dec
outsb
aad
lock
jl
push
lcall
inc
loopne
pop
xchg
sub
fs
jo
xor
push
ret
mov
dec
lods
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
arpl
pop
movsb
pop
lea
add
add
add
lea
or
cmp
mov
rep
pop
and
movsb
inc
pop
ss
or
idivl
fwait
mov
dec
xlat
push
adc
cwtl
lods
dec
imul
leave
aad
cmp
xor
mov
test
push
cmp
and
hlt
dec
mov
jbe
call
push
and
adc
out
fldl
rorl
std
cmpsb
in
jb
in
or
push
or
scas
cmpsl
jl
out
out
clc
or
xchg
mov
sbb
pop
inc
aam
js
pop
or
add
sbb
rorb
lock
aas
cs
pop
pusha
mov
and
repnz
jnp
fwait
roll
bound
sub
push
faddl
ret
js
or
lods
insl
sub
xchg
inc
orb
mov
add
add
mov
into
int
xchg
idiv
lea
add
add
add
out
push
push
subb
ss
lods
mov
inc
sub
mov
aad
jg
popa
imul
push
pop
outsb
fbld
push
imul
and
inc
adc
mov
popf
jne
push
std
push
jecxz
cltd
movsb
iret
fcmovnu
in
rol
cmpsl
lret
mov
movsl
je
mov
inc
daa
mov
adc
adcb
cld
insb
push
out
mov
iret
mov
hlt
mov
or
xorb
loope
test
mov
ret
xor
lods
popa
push
out
adc
mov
xor
jle
xorl
loopne
jg
lods
or
lea
sar
adcb
repnz
xchg
inc
iret
cwtl
fwait
ds
jns
inc
mov
or
adc
jmp
pop
lock
mov
fdiv
add
add
pop
test
ljmp
jp
cmp
loop
stc
sub
mov
add
add
add
xchg
movsl
inc
rcrb
js
inc
lret
orb
ds
or
repz
andl
cwtl
pop
jno
insl
out
xchg
pop
aas
data16
mov
mov
into
leave
cld
pop
les
xor
pop
jbe
mov
leave
inc
nop
adc
mov
mov
push
ja
pusha
bound
cmp
jo
call
xor
inc
dec
pop
push
mov
xor
cmp
dec
and
sbbl
push
icebp
inc
pop
ret
mov
bound
fisubs
lods
and
cltd
add
fs
jmp
gs
add
pop
jb
out
xchg
repz
ret
xor
insb
jl
cld
bndldx
xlat
mov
xchg
adc
add
arpl
jnp
sbb
xchg
sub
outsl
dec
ss
add
cmc
add
add
and
sahf
pop
dec
rorb
push
xor
andb
inc
fwait
push
push
fwait
mov
loop
fimuls
mov
repnz
fs
bound
notl
cwtl
xor
push
aas
cltd
icebp
daa
jle
ss
mov
shll
dec
mov
dec
jg
mov
sub
stos
ds
sub
pop
xchg
mov
adc
mov
xor
bound
xor
inc
popa
xor
pushf
xor
fsts
mov
push
and
inc
inc
jle
sti
in
and
in
jecxz
pop
and
and
jno
adc
subb
vmwrite
lcall
gs
scas
xchg
dec
jl
pop
inc
cmpb
std
xor
shl
popa
cld
stos
sub
push
addr16
ja
sub
push
cmp
inc
add
add
aas
or
mov
mov
cmc
push
fistl
add
adc
xchg
xor
push
pusha
and
add
movsl
mov
fs
scas
ret
cmpsl
xor
pusha
mov
insl
xchg
inc
out
leave
adc
xchg
stos
test
outsb
push
jae
out
out
push
add
xor
mov
and
add
leave
lcall
sbb
jecxz
mov
out
jnp
inc
mov
or
mov
sbb
cmpsb
dec
xchg
test
xchg
inc
lret
loopne
cmp
inc
aad
iret
push
lcall
stos
gs
jo
stos
push
std
outsb
addr16
dec
rcrl
mov
adc
daa
dec
movb
out
into
mov
add
dec
fcoml
out
ret
add
dec
mov
ja
mov
cmp
jae
jns
pusha
movsl
xchg
or
add
jle
push
das
xor
mov
insb
fidivl
cli
sub
lcall
add
cmc
add
add
std
cmp
out
filds
gs
aad
mov
dec
push
ror
push
sbb
mov
push
mov
sub
pop
arpl
mov
repnz
push
sub
cmp
lcall
xchg
pop
out
fucomip
xorl
cmp
rol
inc
enter
and
lret
outsl
adc
outsl
std
arpl
pusha
jecxz
xor
in
loope
push
mov
aaa
adc
test
outsb
xchg
aad
xorl
mov
jno
mov
fs
pusha
inc
ror
ret
or
jo
ret
loop
xlat
imul
std
insb
xchg
mov
iret
rorb
loope
out
stos
fldcw
mov
jae
lret
mov
cld
ret
fcmove
je
add
das
jmp
push
adc
sbb
ss
sub
push
xchg
mov
lods
pop
cmp
add
mov
in
cmc
pop
aad
lds
add
mov
mov
mov
and
or
add
mov
or
shl
jle
mov
pop
out
inc
repnz
jae
fs
pop
sahf
int3
jle
repnz
and
lds
jl
aam
xchg
push
cmp
mov
in
sti
push
ja
lock
fldl
xor
sahf
mov
push
cltd
or
popf
loope
jno
mov
mov
pop
push
pop
scas
rorl
and
lahf
sub
jge
push
cwtl
push
adc
arpl
mov
or
je
jp
aas
rcll
out
add
repnz
sti
sbb
inc
sub
xchg
es
repz
pop
jo
pavgw
jle
vorps
adc
inc
cli
jnp
orl
mov
imul
add
dec
push
int
fstp
iret
push
lock
jmp
or
add
add
add
cld
mov
mov
fwait
popa
add
and
jmp
rclb
mov
enter
jl
mov
popf
push
lods
out
ficomps
stos
xchg
addr16
in
out
lcall
push
mov
fstpl
push
and
adc
cs
inc
cmp
cs
mov
mov
sub
test
fldenv
stos
pop
pop
pop
jnp
insb
mov
repnz
mov
jl
dec
add
sub
cmpsb
test
jmp
dec
insl
push
arpl
adc
or
dec
push
mov
pop
stos
jae
mov
std
int
or
bound
je
xor
mov
lahf
pop
xchg
test
ret
popf
stos
mov
test
icebp
stos
sti
xchg
sbb
xchg
std
ss
out
cltd
not
xor
insl
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
mov
xchg
mov
and
mov
jnp
test
push
cli
push
cmc
dec
sub
push
out
hlt
aam
jns
push
sbb
pop
add
outsb
das
jmp
lock
stc
into
sub
adc
sub
mov
test
pop
sub
in
ljmpw
mov
cmp
pop
mov
jb
popa
mov
fsubr
jbe
in
sub
int
sbb
out
ljmp
stos
jle
jns
pop
mov
insl
hlt
dec
fucomi
outsb
mov
inc
xor
bound
shll
in
jnp
jp
push
adc
sbb
xor
out
mov
mov
shl
incl
mov
sbb
enter
dec
fstpt
out
pop
adc
xorb
mov
lods
fisubrl
daa
dec
leave
gs
fsubs
stos
in
cld
adc
fs
mov
mov
cwtl
add
add
mov
push
inc
cmp
movsb
xchg
add
cmc
add
add
dec
xchg
jmp
sbb
out
or
pop
stos
rclb
jae
aaa
xchg
imul
or
adc
fcmovbe
jo
xor
jno
in
arpl
pushf
loopne
shlb
or
lea
int3
jnp
sbb
sbb
jnp
nop
xchg
xchg
jnp
js
icebp
cmp
mov
pop
or
mov
incl
mov
jae
es
test
xlat
jecxz
mov
es
loop
mov
cli
adc
add
addr16
inc
loop
adc
mov
jg
xor
std
xor
push
pop
mov
mov
sbb
mov
jmp
les
pop
push
mov
fstps
mov
std
aad
pop
dec
lods
dec
adc
cmpsl
push
rcrb
test
or
movsb
pop
enter
repz
add
add
les
mov
js
mov
add
add
add
movsb
cmc
rcrb
fcompl
lods
sbb
mov
or
and
or
or
rcr
mov
pop
adc
int
lret
fcmovb
add
dec
rolb
test
mov
mov
push
leave
cs
repz
mov
xor
stos
inc
fmuls
xchg
pop
pop
into
lcall
out
inc
sub
sarb
iret
add
jb
inc
stos
lret
bound
fiaddl
push
dec
cs
subl
sbb
in
gs
popf
fwait
insl
fiaddl
jecxz
enter
cmp
gs
adc
cmp
push
or
or
daa
lcall
cmp
popa
shr
push
mov
xor
push
pop
sahf
ror
push
lock
or
mov
add
add
ljmp
loop
dec
pop
mov
xor
mov
add
outsb
test
shl
sti
je
bound
test
in
int
xlat
mov
mov
outsb
int
jne
in
roll
lea
repz
dec
jle
mov
insb
xor
xchg
out
xor
push
fs
iret
dec
push
adc
insl
mov
dec
lods
scas
dec
pop
inc
mov
lret
std
cmp
jp
test
mov
inc
pcmpgtw
sub
mov
pop
les
ds
cmp
xchg
dec
xchg
iret
ret
ja
in
les
cmp
cmp
jle
movl
iret
push
sub
mov
push
call
rcrb
fisttpll
imul
pop
ror
repnz
xor
pop
sub
pop
pop
add
sub
cmp
jl
mov
js
mov
add
inc
enter
or
add
add
aaa
shlb
cmc
div
rcl
inc
pop
mov
add
cmc
add
add
mov
add
loope
cmp
mov
pop
int3
jg
outsl
dec
add
loop
jmp
mov
mov
sbb
insl
jnp
sub
and
je
fistpl
and
add
jnp
jl
std
cs
aas
loope
xor
lcall
out
loop
jl
repz
pop
clc
cli
xchg
idivl
or
add
fisttpl
mov
mov
cmc
cmpsb
mov
cld
insb
xor
clc
clc
mov
add
jg
sbb
inc
or
stos
push
mov
pop
adc
jl
xchg
jb
das
push
mov
xor
mov
out
hlt
xchg
punpcklwd
jne
xchg
mov
push
pusha
movsl
sbb
add
fisttpll
pop
lods
adc
mov
icebp
loopne
leave
je
int3
in
mov
lock
and
mov
les
sbb
mov
add
add
push
sahf
rcr
pop
test
mov
cmc
add
add
xorb
sbb
fs
dec
push
or
cli
orl
add
pop
push
subl
cmp
cmp
enter
sbb
imul
inc
lret
addr16
call
xchg
or
push
jmp
std
ds
flds
xchg
or
in
dec
cli
xchg
fcompl
jecxz
mov
cmp
mov
lret
in
sbb
mov
push
repnz
push
adc
mov
jge
lods
xor
test
adcb
cwtl
inc
hlt
xchg
or
lcall
nop
fiaddl
dec
daa
inc
fdivr
ficompl
xor
fisttpl
mov
int
iret
add
sub
in
lods
inc
lcall
imul
pop
and
mov
aad
cwtl
jne
test
int3
sub
sbb
and
add
add
arpl
cmpsb
jcxz
jne
push
inc
ljmp
add
add
add
adc
in
bound
cmpsb
mov
fmull
aad
lea
xchg
fcmovnb
shrl
cmc
sbb
mov
jnp
xor
xchg
add
push
inc
roll
mov
add
sbb
cwtl
insl
dec
mov
or
cmp
push
lods
out
je
push
test
jge,pt
add
call
push
sarb
cmp
pop
jb
aas
shll
leave
das
xor
jecxz
scas
repnz
mov
inc
cli
aas
adc
movsl
or
movsb
lret
adc
xchg
pop
dec
jmp
push
pop
loope
pop
lcall
cmc
xor
lods
mov
out
dec
bsf
push
jmp
mov
mov
pushf
lock
jge
movsb
push
ljmp
xlat
jno
fistpll
icebp
pop
fs
dec
cmc
sbb
clc
jnp
jg
in
cli
cwtl
inc
mov
jo
out
bound
add
add
push
js
hlt
sbb
icebp
inc
add
out
ret
ds
and
into
xchg
test
lahf
inc
leave
fildl
mov
sar
das
sbb
lcall
pop
aam
int
loopne
cwtl
mov
cmpsb
lahf
frstor
test
dec
jmp
and
pop
xchg
lcall
popf
sbb
jnp
cmp
push
shlb
fldenv
adc
dec
out
std
and
inc
push
add
add
rcll
fwait
movsb
xor
sbb
leave
daa
out
and
jno
aad
lahf
les
add
xor
push
in
sub
movsl
jmp
fldt
or
pusha
fs
push
mov
xchg
cld
ret
sbb
mov
rcll
je
das
orl
and
movsl
add
add
lods
faddl
fbstp
cld
inc
push
cltd
das
inc
lret
xchg
cmp
add
cmc
add
add
jecxz
sub
cmpsl
icebp
sub
stos
mov
fnstsw
ret
sub
icebp
jmp
in
lock
or
fnstcw
mov
sahf
lahf
jecxz
inc
and
jp
fisubl
xor
aas
mov
cld
ljmp
xchg
mov
sub
cmpsl
repnz
mov
out
ret
and
push
lock
sbb
scas
mov
jne
sbbl
xchg
stos
add
aad
cmp
lcall
lea
sbb
repz
push
mov
lods
nop
arpl
out
sbbb
in
fldcw
xchg
in
push
in
outsb
or
lret
jnp
mov
sbb
sub
mov
imul
pushf
dec
cld
cli
pop
out
jo
stc
mov
and
out
lods
in
jmp
ja
cmc
mov
fwait
add
mov
add
jl
sar
std
jle
loop
jge
push
add
add
add
add
dec
cwtl
mov
sub
mov
mov
shrb
fisttpl
in
sbb
xorb
loopne
mov
dec
leave
repnz
iret
add
iret
push
ret
fsubp
cmp
cmpsl
dec
jge
jl
fstpl
jg
mov
mull
loope
sbb
or
xor
add
in
subl
clc
xlat
push
mov
cld
push
xchg
enter
sub
xchg
jb
push
leave
cwtl
sub
aas
pop
mov
push
aam
out
mov
jmp
gs
xor
notl
mov
ja
out
xor
xchg
mov
or
jne
pop
mov
into
ret
add
sub
and
clc
outsb
or
movsl
sbb
inc
mov
or
movsl
add
pop
xchg
into
outsb
cs
xchg
std
xor
add
add
cmp
cmp
pop
adc
dec
add
add
cmc
add
add
stos
int
fisubrl
mov
push
jo
cli
test
pop
dec
mov
imul
mov
pushf
lea
mov
push
jmp
in
rclb
dec
add
sub
pop
sbb
and
push
push
call
sub
push
test
cmp
mov
jb
test
inc
pop
gs
repnz
inc
fs
mov
inc
scas
mov
clc
movsb
sbb
mov
popa
das
jo
xchg
xor
in
out
pop
ficompl
mov
shrb
cwtl
inc
mov
je
ret
insb
std
ret
mov
pusha
mov
bound
jmp
xor
mov
test
cmp
les
aaa
out
test
enter
into
mov
pop
inc
lret
loop
sbb
jl
cmp
add
fwait
and
popa
mov
aad
aam
mov
daa
ss
add
cmc
add
add
inc
pop
pop
in
adc
mov
dec
lods
sbb
pop
push
sbb
jae
jl
data16
cld
loopne
mov
dec
pop
push
loope
add
popf
in
ja
mov
push
les
jb
pop
test
push
cli
inc
or
popf
add
test
mov
dec
jp
mov
insb
or
sub
int3
test
addb
ret
sti
mov
pop
push
mov
pushl
dec
arpl
addl
popf
and
cmp
push
aad
adc
movsb
std
pop
cwtl
mov
inc
ljmp
jnp
pop
pushf
iret
out
pcmpgtw
out
sbb
iret
mov
aaa
add
cmpsl
pop
dec
add
test
pop
repz
pushf
mov
test
loope
adc
adc
xor
jnp
insl
pop
leave
push
mov
add
push
and
xlat
aas
jle
ds
sub
add
and
outsb
jne
and
inc
cmp
and
xor
mov
in
insl
jb
pop
xchg
cli
lret
test
out
nop
push
test
pop
cmpsl
push
dec
or
mov
mov
pop
cwtl
fimuls
ljmp
pop
inc
cs
aas
rorl
add
cli
pop
cmc
cmc
fldenv
jno
ja
ret
add
clc
sub
sbb
movsl
jns
das
xchg
rclb
outsl
mov
and
scas
add
add
scas
xchg
pop
push
gs
int
add
cmp
jne
or
mov
ljmp
jbe
and
cmp
daa
int
jo
movsl
mov
and
cmp
inc
scas
je
cmpl
sub
seta
cmpsl
or
sub
jmp
js
ss
pop
lods
fistps
push
xor
mov
add
add
mov
mov
jmp
ljmp
add
cmc
add
add
shr
movsb
stos
pop
jg
cmpsb
mov
int
sbb
push
cwtl
fidivrs
loop
mov
dec
shll
iret
lret
xchg
in
push
jne
sub
inc
bound
mov
aas
xchg
mov
or
pop
cld
ds
pop
test
idiv
call
mov
or
add
and
shlb
or
outsb
add
xor
cmp
push
jle
xchg
xor
outsb
cmp
ds
sub
sub
loope
je
add
ret
ficoms
filds
inc
inc
outsb
pop
imull
test
aad
or
mov
test
loop
and
in
adc
push
dec
adc
sbb
js
negb
out
mov
in
add
adc
sbbl
mov
repz
xor
cmc
add
add
mov
xchg
push
es
xor
mov
dec
leave
das
inc
jmp
and
int3
mov
aas
ret
jns
cmp
adcl
out
cld
or
les
insb
adc
aaa
arpl
mov
jnp
and
jmp
and
movsl
insl
fs
enter
pop
sbb
sub
das
test
adc
pushf
jno
jne
orl
adc
loop
push
xor
mov
outsb
cmp
inc
std
xor
push
and
rcrl
xchg
cmp
sbb
push
lds
push
outsb
inc
out
mov
popf
fisubrs
sbb
mov
mov
ljmp
fsubrl
pop
insl
popf
into
pop
sub
iret
repnz
insl
sub
mov
mov
sbb
dec
or
dec
xchg
add
add
mov
imul
and
or
aas
push
or
add
ret
push
fcmovne
add
xchg
lock
and
ss
jns
fimuls
mov
dec
shrl
xor
sub
xchg
test
inc
ss
inc
and
gs
adc
addb
rorl
push
inc
outsl
or
mov
out
fimuls
notb
into
mov
jecxz
lret
mov
loope
shll
fcmovb
sub
and
adc
mov
xchg
jmp
rcrb
dec
je
jl
mov
sbb
push
xlat
sub
jo
emms
or
add
aam
add
push
dec
jns
add
jle
je
push
rorb
movsb
mov
fsub
xchg
push
cld
adc
dec
push
outsl
inc
inc
pop
rcrb
jle
ja
and
sub
in
inc
dec
mov
add
add
mov
dec
mov
in
jmp
add
cmp
and
jmp
test
xor
mov
xchg
lods
add
stos
mov
sub
clc
js
cld
ds
fwait
mov
mov
test
push
cmp
sub
and
inc
mov
xchg
leave
dec
mov
xchg
sbb
jbe
sub
popl
insl
mov
cli
jne
dec
mov
pop
xor
mov
and
jmp
push
sub
sub
mov
jle
addr16
and
xchg
std
add
shlb
push
out
cmp
xor
lret
jo
mov
paddd
aam
out
push
mov
enter
xchg
aas
pop
jmp
jne
jle
loope
into
fsubs
inc
dec
test
mov
cmp
hlt
jo
aad
adc
sub
xchg
xchg
push
dec
cmp
xor
imul
mov
add
ja
out
das
mov
aam
cmp
mov
cmc
add
add
sbb
mov
shld
sbb
pop
fdivrl
dec
fcmovb
cmc
jb
mov
add
sahf
repnz
jp
in
mov
push
pushf
mov
leave
dec
inc
sbb
fdivp
stos
orl
loop
mov
cltd
push
and
in
jae
clc
dec
add
xchg
test
inc
sarl
hlt
jne
adc
lds
lret
dec
stos
fcoml
or
or
xchg
jno
dec
insl
xchg
adc
sub
jne
js
adc
popf
or
push
add
cmp
or
sub
insl
push
jae
lea
sbb
dec
fbld
jne
xor
add
mov
mov
es
jnp
movsl
cmpsb
cwtl
bound
dec
sahf
mov
mov
arpl
add
add
pusha
test
mov
push
bound
cmc
add
add
dec
movsl
mov
pop
roll
imul
stos
insb
mov
jl
cld
xchg
cmp
add
push
xchg
jae
jae
lods
stc
adcl
data16
ror
cmp
sahf
in
in
mov
xor
addr16
xor
test
int3
movsl
jno
leave
adc
sub
test
and
out
and
cmp
jns
mov
sbb
lea
in
mov
cmc
pusha
mov
inc
movsb
dec
mov
movsl
mov
xor
repnz
and
call
ss
sub
gs
lret
lds
int
xor
xor
mov
movsl
mov
jge
movsb
push
notb
add
addr16
loop
mov
xchg
and
mov
add
lods
ret
mov
jns
aas
xchg
lret
shrb
fstpl
loopne
add
or
lcall
add
cmp
cmpsb
add
cmc
add
add
aam
fwait
rclb
adc
les
push
add
aam
dec
inc
push
ficomps
push
jns
add
pop
add
dec
repz
pop
lods
ret
aam
aas
inc
sbb
mov
push
mov
add
push
stc
decb
rcrb
jmp
mov
jae
test
ftst
mov
loop
ret
push
imul
and
add
aad
lret
xlat
sbb
repnz
xlat
stos
aaa
inc
out
cmc
imul
pop
insb
xchg
outsl
dec
or
arpl
or
popf
or
jecxz
adc
fldenv
lcall
jo
insb
std
imul
imul
fiadds
xor
sbb
jecxz
fiaddl
add
movsb
mov
mov
mov
cmp
jae
pushf
outsl
shll
add
mov
loope
and
andb
mov
xchg
std
mov
push
sub
push
sbb
mov
or
outsl
pop
jle
adc
bound
mov
mov
je
mov
loop
jecxz
sti
push
sub
je
and
cmpsl
inc
push
aad
insb
sub
jo
inc
sti
jmp
out
sub
movsl
add
icebp
push
mov
adc
dec
stos
in
out
lcall
dec
sahf
out
and
push
jg
mov
call
jne
inc
cmpxchg
cmc
pop
mov
repz
or
rolb
or
sub
push
mov
sub
mov
pop
pop
lret
or
inc
imul
fildl
lret
inc
cmp
xchg
adc
push
fldenv
xor
popf
stos
les
out
xlat
xor
xchg
add
add
add
std
mov
xchg
mov
pop
enter
cmc
add
add
lock
stos
test
push
inc
daa
push
push
or
push
ret
jmp
gs
std
ja
arpl
xchg
cmpsl
jge
fs
push
sbb
cmpb
jmp
ja
lock
daa
jl
xor
xchg
pop
popf
aaa
dec
push
clc
lea
sbb
dec
push
and
lahf
nop
mov
add
data16
fiadds
xchg
lea
fisubl
cli
sarl
in
inc
into
xor
push
push
mov
je
ss
xchg
cltd
leave
jp
inc
ss
dec
enter
imul
adc
aam
out
loope
xchg
cwtl
cmp
push
add
iret
bound
scas
cltd
test
cmpsb
jmp
sbb
mov
or
das
cmpsl
mov
mov
notl
addb
insl
lea
cs
pushf
fsincos
and
add
push
inc
fdivl
stos
push
sbb
add
add
inc
add
idiv
test
shr
jle
rcl
sub
pop
ret
inc
movsb
dec
movsl
mov
lcall
xchg
jbe
add
mov
xchg
add
xor
xchg
mov
outsb
outsl
loopne
lea
fists
lcall
xor
xchg
in
neg
mov
sbb
cld
test
pop
cmpsl
mov
gs
stos
or
xchg
mov
jmp
movsl
insl
push
rorl
add
popf
out
mov
in
xor
out
mov
and
and
sbb
sub
jle
popf
xor
xor
inc
scas
jecxz
test
mov
and
out
inc
fstpl
sub
imul
inc
sbb
dec
cmpsl
dec
lods
decl
mov
pop
add
add
sbb
mov
pusha
jecxz
and
mov
add
cmc
add
add
sbb
pop
mov
cmpsl
imul
cmp
add
mov
push
xlat
or
sub
mov
mov
adc
ja
aad
repnz
inc
cltd
mov
movb
imul
and
push
daa
push
and
inc
ror
in
and
dec
dec
rcr
xlat
mov
mov
cmp
and
scas
fsts
xor
ja
mov
inc
aaa
test
lahf
fldl
jns
mov
add
testb
out
dec
pop
jno
jp
inc
fs
lret
orl
shl
ljmp
add
ljmp
hlt
cmpsl
cmp
adc
cwtl
out
outsl
cmp
mov
sub
bound
pop
xor
add
orb
xor
shrb
cmp
adc
dec
mov
std
mov
add
pop
test
stos
hlt
jmp
ljmp
popf
stos
push
cmpsl
stos
add
cmc
add
add
cmp
or
daa
out
cmpb
cltd
inc
sub
push
dec
jge
scas
pushf
inc
pop
dec
and
dec
rcrl
pop
mov
inc
iret
fnstsw
xor
les
sbb
xchg
fisubrs
div
xchg
mov
test
sbb
dec
jb
jbe
imul
repnz
or
in
ret
cmp
xchg
cmp
mov
lret
push
leave
sub
jge
sarl
inc
and
ja
negl
je
pop
pavgb
movsb
mov
xchg
jnp
pop
scas
pop
cmp
add
andl
xchg
jmp
mov
daa
mov
int
cmp
push
push
xchg
imul
sbb
pop
add
jno
movsl
sahf
add
mov
adc
pop
mov
hlt
push
and
jge
rcl
push
mov
add
add
push
nop
out
xlat
out
jg
dec
cmp
inc
mov
add
cmc
add
add
cmp
shr
in
shrl
lret
popf
xchg
xchg
fistps
and
lret
jmp
movsl
cld
ds
aaa
jbe
add
add
adc
cmp
int
mov
into
pop
fnsave
push
into
pop
push
std
sbb
lret
outsl
xchg
cmp
xor
aam
iret
pop
out
xor
pop
mov
xor
data16
adc
mov
pop
push
mov
out
xchg
mov
mov
andl
enter
pop
lods
pop
cmpsb
fisubs
cmp
clc
pusha
outsl
cmp
imul
pop
mov
mov
scas
or
cli
popa
js
mov
cmp
cltd
adc
adc
sbb
dec
or
ficoml
inc
orl
adc
and
movsb
sahf
inc
jae
fildl
add
sbb
pop
fbstp
mov
lds
xchg
lods
add
cmc
add
add
adc
scas
clc
shlw
arpl
push
push
daa
pop
add
pop
arpl
mov
mov
mov
nop
pop
rorb
ja
add
mov
clc
mov
mov
push
mov
pop
imul
shlb
adc
xor
lods
fcoml
xchg
cmp
cld
lds
mov
testb
pushf
and
xchg
mov
adcb
out
adc
jl
push
outsl
movsb
iret
xchg
jl
mov
jp
popf
jbe
imul
and
or
pop
inc
test
in
arpl
mov
lret
ss
dec
mov
mov
int
mov
outsl
movsl
lret
mov
jle
stc
scas
lret
das
jp
jae
pusha
int
cld
cmp
xchg
mov
pop
adc
lcall
sbb
adc
xchg
movsb
pop
sbb
add
mov
ja
mov
scas
add
cmc
add
add
cmp
mov
fisttps
mov
jb
add
movsb
jnp
fwait
xor
jbe
jl
or
mov
jmp
xchg
jmp
push
rcr
xchg
les
xor
cmpb
lock
and
xor
jns
in
sub
and
leave
jg
jmp
sbb
sub
mov
out
xor
dec
pop
stc
cmp
xchg
cmp
insb
jb
mov
push
pushf
cmp
lret
push
outsb
jbe
dec
cmp
cmc
punpckhwd
repz
push
push
push
and
call
xchg
cwtl
repz
and
ror
stc
ss
xor
sbbb
jl
push
loop
push
or
cwtl
pop
in
pop
lods
inc
sti
mov
fdivrl
es
pusha
cmc
lret
xchg
cmp
jecxz
rsqrtps
xor
pop
cld
rdpmc
out
dec
add
add
mov
push
sti
jmp
xchg
sub
mov
cmc
add
add
push
sub
loopne
xchg
cmpsl
testl
dec
repz
insb
mov
add
in
movsl
xor
pop
jmp
mov
sbb
push
or
outsb
cmp
mov
inc
fadd
lret
enter
imul
sub
inc
into
mov
nop
cmp
adc
mov
cmp
adc
add
jmp
icebp
add
arpl
out
cmp
loope
jl
adc
ret
push
push
je
or
sbb
jge
sti
jle
sub
sti
jae
lret
mov
adc
or
jae
aas
mov
leave
imul
bound
nop
xchg
mov
mov
in
cltd
push
fs
mov
int3
jge
fs
and
dec
mov
shl
insl
shrb
xor
clc
xchg
jmp
popf
std
in
mov
or
add
add
jecxz
lock
dec
cmp
cmc
add
add
pop
and
bnd
lea
xchg
push
movsl
dec
lret
sbb
dec
cmp
sub
sbb
mov
cmp
scas
outsl
popa
cmp
sub
jl
pop
push
pop
cmp
pop
leave
push
loop
outsl
jmp
int3
jle
imul
cwtl
mov
pop
xor
push
mov
aas
mov
fidivrl
fadd
inc
cmp
movsl
dec
add
mov
inc
orl
int3
inc
mov
add
or
dec
cmp
push
xor
fsts
inc
or
mov
xchg
push
xor
test
andl
adcl
sbb
push
mov
push
jno
or
in
fstp
test
push
adc
xlat
pushf
and
stc
xor
test
add
cld
mov
test
gs
add
add
add
sub
push
fwait
xor
pop
aaa
mov
loop
push
or
inc
push
push
adc
lods
inc
gs
mov
mov
arpl
lock
or
fbld
or
pop
out
iret
aaa
pop
clc
pop
out
dec
popa
pop
inc
das
jg
cmp
iret
dec
sbb
out
mov
orl
andl
dec
shll
pop
add
pusha
ss
shll
sub
pop
rolb
cmpsl
xchg
pop
xor
js
insb
dec
sbb
xor
sbb
xchg
pop
and
mov
int
pop
ss
cmpsl
sub
and
xchg
xchg
push
mov
inc
fwait
mov
aaa
xlat
and
pushl
cwtl
adc
js
test
xor
sbb
cmpsb
add
add
out
cmc
mov
push
add
lahf
pop
mov
add
add
add
adc
xchg
scas
jns
mov
cmp
lods
mov
inc
jns
enter
iret
pop
lahf
add
shll
or
repnz
movsb
sub
pushf
ljmp
jae
fstl
ljmp
dec
or
sti
jbe
mov
in
push
mov
dec
in
iret
sbbb
push
scas
push
fisttps
iret
ljmp
lds
mov
push
cmpsl
sbb
add
xchg
push
push
push
lahf
add
mov
adcb
leave
sbb
lcall
xor
pop
add
or
ja
cmpb
xor
out
cmp
or
pusha
push
add
xlat
mov
sarl
aas
cmp
aas
add
sbb
pop
mov
mov
daa
xchg
push
mov
mov
mov
lret
aaa
xor
inc
add
add
out
std
dec
std
pop
mov
movb
mov
add
add
add
dec
fcomps
sbb
sbb
ds
jl
or
xlat
jnp
aaa
jmp
xor
stos
ret
shll
filds
adc
xor
repz
loop
jns
mov
xchg
imul
std
xor
nop
push
cmp
jno
mov
clc
pop
and
xchg
pop
mov
pushf
stos
xchg
mov
shll
sub
and
add
or
adc
add
mov
mov
push
sbb
sub
rcrb
mov
mov
inc
adc
mov
mov
mov
push
arpl
add
jg
scas
jo
jge
push
cli
xor
sbb
arpl
mov
inc
lock
inc
aas
lea
xor
jne
fiadds
add
fidivs
loop
ljmp
cmpsl
pop
jp
inc
mov
add
add
add
insb
aam
int3
xchg
negl
add
pop
movsl
fwait
or
dec
jbe
mov
xchg
sub
mov
jecxz
stos
sub
adc
mov
and
stc
pop
mov
add
inc
scas
aaa
stos
rcrb
or
sub
sbb
test
cltd
pusha
push
push
mov
sbb
add
jl
push
inc
mov
push
jbe
daa
into
push
pop
fxch
into
imul
scas
lcall
fistl
push
je
into
pop
vmovupd
popf
adc
dec
sbb
cmp
mov
hlt
xchg
and
xchg
cmp
sbb
jns
lea
jl
adc
dec
jbe
xchg
or
mov
push
fldl2e
and
clc
ja
cmp
jne
mov
fs
icebp
jbe
mov
fwait
mov
inc
dec
inc
into
and
or
insb
ret
cwtl
adc
add
add
xchg
jg
jmp
std
jge
in
xchg
cmp
mov
cmc
add
add
cmpsb
cmp
xor
mov
or
cld
jb
aaa
jbe
cld
dec
les
xchg
js
int
mov
or
std
jne
inc
sbb
mov
add
lahf
and
in
inc
push
les
fiadds
insb
add
into
cwtl
add
pop
decl
mov
out
jns
xchg
cmp
mov
xchg
cmp
test
push
ret
xor
lret
int
cltd
xlat
or
mov
sub
and
jnp
leave
xchg
xchg
sub
lods
shlb
push
gs
cmc
mov
and
push
movsl
sahf
mov
jg
lret
adc
cmpsl
aam
sub
lods
daa
cmp
fdivrp
dec
cs
dec
arpl
jl
add
push
sbb
pop
add
adc
inc
mov
and
mov
push
divb
std
cmp
jl
cs
add
add
add
icebp
pushl
xchg
xchg
sti
mov
xchg
pop
fsubr
push
jno
out
mov
jecxz
sahf
pop
cltd
cld
mov
outsl
lahf
mov
mov
test
lods
enter
mov
push
lock
pop
fcomps
loop
call
lods
or
test
lds
fwait
xchg
addl
cltd
mov
ss
mov
and
jmp
arpl
push
ljmp
test
insl
jo
push
cltd
loope
mov
cmp
xchg
sarb
dec
inc
call
mov
push
loop
les
addb
sbb
dec
xor
xorl
push
sbb
or
sub
int3
stos
jl
sbbb
call
sub
jp
xchg
movsl
or
mov
jl
fdivl
dec
mov
add
xor
cmp
ficoml
mov
sub
add
add
add
outsb
repz
cs
adc
adc
push
sub
lcall
mov
addr16
rolb
dec
jp
push
icebp
mov
cli
mov
ljmp
or
mov
iret
mov
jle
out
lcall
xchg
leave
lods
popf
sahf
push
cld
and
push
ret
add
ljmp
pop
mov
sbb
ljmp
sub
sar
dec
and
xchg
shlb
xor
dec
inc
pop
dec
lock
lret
inc
aaa
ret
sbb
lret
mov
inc
pop
sub
les
cltd
imul
fistpl
dec
mulb
mov
mov
mov
or
in
cmp
lock
imul
lret
rcr
xchg
add
push
lret
imul
push
push
loope
aam
imul
add
add
jp
les
mov
push
push
adc
lea
add
cmc
add
add
movsl
sti
mov
stos
xchg
mov
jae
sahf
ss
enter
mov
fstpl
xchg
pop
cwtl
ret
dec
fistps
mov
cmpsb
mov
pop
mov
jae
leave
adcb
and
lret
mov
cmpsl
push
pop
pop
addr16
xchg
inc
jbe
lcall
enter
out
mov
dec
lds
fcoms
push
dec
test
int3
dec
mov
test
xlat
fimuls
push
outsl
adcb
sar
and
adc
pop
mov
test
popf
mov
xor
cmc
and
insl
rcrl
mov
and
into
add
sub
jecxz
or
js
call
shlb
ret
inc
pushf
scas
mov
dec
mov
aas
ja
push
inc
je
push
mov
daa
jmp
js
lods
push
xchg
test
icebp
mov
shrb
nop
shll
xchg
pop
xorl
add
dec
or
pop
stc
out
push
insb
xchg
cld
sub
lcall
cmc
add
add
xlat
mov
xchg
push
pop
and
maxps
lods
xor
sub
push
or
cmp
inc
loop
sarb
add
fwait
stc
xchg
jbe
adc
lds
popf
lds
xchg
insb
jb
shll
cmpsb
fsubrs
testb
mov
outsl
sbb
in
shrb
scas
dec
mov
sub
cs
cltd
in
es
jge
adc
in
cwtl
sub
sahf
shl
inc
lret
ss
dec
pop
repnz
in
sbb
mov
ret
fdivrs
aaa
pop
dec
imul
pop
dec
xor
mov
and
popa
xchg
and
jne
cmpsl
ss
xchg
sarl
mov
xchg
shll
push
xchg
and
pusha
xchg
xor
lods
sub
dec
mov
imul
add
push
mov
lcall
ret
scas
xor
mov
add
out
es
xchg
inc
mov
add
xor
push
fstps
cmp
or
pop
sar
repz
testl
pop
mov
xor
pop
adc
or
in
repnz
test
mov
iret
cmp
sub
shll
rolb
push
push
repnz
inc
push
sub
loopne
and
jmp
mov
pushf
repnz
sub
or
fstpl
je
xor
je
dec
pop
lcall
int3
push
sbb
aad
repz
movaps
xor
aaa
std
nop
or
cli
aam
mov
adcl
addb
jmp
aam
leave
sub
mov
jl
dec
push
les
lea
addr16
dec
jae
cwtl
or
pop
fldcw
in
and
and
mov
push
cli
add
add
add
jne
mov
xlat
insb
scas
pusha
cmpsl
sbbb
add
cmc
add
add
out
jb
addb
mov
into
adc
lock
rorb
cmp
ds
adcb
mov
sti
lcall
sub
repz
dec
pop
mov
jg
inc
cld
aad
pop
scas
arpl
cmp
push
jbe
and
aaa
dec
aaa
xor
pop
jge
int3
mov
pop
cmp
pop
movsl
jecxz
scas
xor
js
mov
and
stos
movsl
adc
mov
mov
aam
outsl
cltd
js
xlat
fcoml
js
sub
mov
test
sbb
cmp
ljmp
imul
ljmp
inc
imul
into
pop
jns
inc
push
jg
adc
adcb
out
mov
rolb
icebp
and
push
mov
les
mov
pop
lretw
pushf
lret
push
add
mov
pop
aas
dec
mov
sbb
add
dec
pop
pop
sbbl
fstpl
imul
add
add
add
adc
or
idivw
imul
sub
and
or
inc
pop
out
mov
cmp
adc
ja
test
ror
add
adc
xor
loop
add
and
out
mov
dec
or
rcrl
into
cmp
jns
in
cmp
sbb
inc
cld
inc
frstor
xchg
fiaddl
nop
mov
lods
mov
mov
sbb
cmp
xchg
push
orl
cli
sbb
inc
adc
fnstcw
push
and
cli
cmp
mov
dec
add
in
repnz
sub
pop
lock
cmp
sub
movsl
sub
jne
dec
lds
scas
leave
in
test
sarl
les
ds
les
jle
xchg
mov
add
into
mov
add
loope
mov
jecxz
out
sub
cs
mov
add
xor
or
xor
mov
dec
lret
jne
mul
adc
pop
dec
out
xchg
cwtl
stc
xchg
cmp
in
and
ret
cwtl
or
cmp
mov
jmp
push
movsl
je
inc
add
aam
pop
mov
pop
pop
mov
mov
sub
inc
repnz
jmp
repz
pop
adc
sbb
shrl
push
sbb
je
and
cwtl
cwtl
inc
dec
add
push
or
jmp
je
pop
aad
popa
adc
insb
sub
into
adc
in
int3
push
xor
mov
adc
fs
aad
cltd
aaa
leave
cmp
xor
js
pop
sub
clc
jp
cmp
add
imul
xor
test
mov
out
pusha
jae
clc
cmp
and
ficompl
imul
add
std
test
jg
jbe
movsb
icebp
add
mov
add
adc
pop
loop
xchg
fsubrs
ljmp
pop
icebp
dec
add
imul
sbb
sbb
push
add
mov
aad
in
fcoms
cmp
pop
add
push
insb
shrb
icebp
pushf
dec
pop
adc
sub
jp
jmp
sbbl
sahf
test
xor
adc
mov
mov
jle
leave
js
sbb
and
ljmp
mov
std
cltd
cld
dec
adc
scas
jecxz
xor
mov
xchg
cmp
test
mov
ljmp
lds
insl
jl
in
repnz
dec
or
fdivl
es
jge
ret
test
mov
cmp
mov
sub
lea
xor
cmp
fnstenv
xlat
bound
les
insb
add
add
adc
in
lcall
xor
cmpsb
mul
lret
mov
add
ss
insl
das
sub
mov
pslld
mov
dec
mov
or
push
roll
pop
rclb
or
mov
dec
pop
push
or
in
xchg
das
mov
gs
outsl
sub
ficoms
in
dec
or
mov
xlat
cs
jp
leave
sahf
inc
stos
popf
and
imul
inc
lcall
mov
or
pop
cmpb
scas
jne
icebp
aaa
mov
jp
aam
mov
xor
movsl
dec
pop
popa
push
jl
loopne
sub
call
and
mov
popf
test
or
fnstcw
jmp
faddl
cmp
aad
sub
mov
cmp
and
xchg
inc
push
and
mov
xchg
repz
push
add
add
sub
jg,pt
stos
dec
push
jo
xchg
out
sarb
add
push
cmp
mov
arpl
inc
add
and
bound
jmp
fs
cmp
lock
jb
hlt
xchg
adc
pop
in
dec
xor
bound
push
rorb
cwtl
cmp
xor
testl
adc
sbb
mov
popa
test
sub
adc
adc
xor
xchg
daa
mov
outsb
or
fucomi
jo
mov
and
orl
lret
xchg
pop
fwait
xchg
jnp
hlt
sub
cmp
das
sbb
and
push
lret
mov
mov
mov
inc
jne
xcrypt-ecb
cmpsl
mov
loopne
out
cld
mov
mov
in
das
fwait
sub
add
xorb
icebp
repz
sub
cld
leave
push
jo
xor
imul
sub
mov
inc
and
add
insl
sbb
outsl
mov
add
cmp
add
add
adc
lret
cmpsl
pusha
mov
and
sbb
push
mov
xchg
push
adc
aad
jmp
xchg
jno
adc
jecxz
adc
lcall
xor
aas
loop
mov
andl
out
mov
mov
xorb
mov
fstp
pop
popa
pushf
ja
adc
imul
push
inc
jecxz
sub
repz
pop
hlt
mov
repnz
mov
cmp
pop
sub
ficoms
das
cs
lods
sahf
les
inc
xorl
push
mov
pop
cmpsl
hlt
ja
mov
sete
jns
dec
mov
gs
or
add
mov
dec
stos
xchg
repz
cmp
push
pop
nopl
or
pop
xchg
xchg
jecxz
sub
add
inc
fbld
mov
cltd
int
sub
stos
roll
cmc
add
add
ljmp
or
fcmovbe
lret
fisubrl
clc
mov
insb
adc
icebp
fistps
sbb
aam
mov
xchg
mov
rep
or
out
push
mov
mov
ss
aad
adc
xchg
mov
insl
jns
push
sarl
aad
xchg
dec
dec
push
jbe
loop
pop
jg
cmp
mov
jge
fwait
ret
out
lods
pop
les
imul
loope
sbb
mov
les
pop
movsl
subl
dec
push
inc
movsl
test
fidivrs
fisubrl
jae
gs
lea
mov
mov
jmp
mov
rolb
dec
add
dec
push
add
mov
sti
movsb
cmp
mov
in
jae
rorb
xor
xor
sub
xor
movsl
daa
test
insb
adc
inc
mulb
outsb
je
dec
pop
mov
add
push
push
call
mov
ret
cmc
add
add
lret
cltd
sub
inc
xchg
pop
repz
xor
or
adc
test
pop
leave
imul
and
add
add
in
in
aaa
jno
fstl
and
enter
stos
lods
gs
xchg
mov
in
pusha
fwait
push
jnp
sti
jno
shlb
gs
pop
call
or
subb
mov
data16
jne
ss
dec
repz
cmp
mov
das
sbb
mov
cmpsb
push
push
in
xor
xorb
fs
push
adc
mov
mov
rclb
stc
xor
fmull
mov
mov
sbb
aaa
or
imul
sahf
sub
ljmp
sub
jae
inc
movsb
nop
sbb
and
sub
add
std
sti
leave
sti
iret
ljmp
lods
jns
bound
add
and
std
sub
in
pop
and
inc
insb
jnp
add
cli
xchg
data16
xchg
cwtl
dec
adc
lret
push
mov
push
cmp
add
popa
leave
add
or
xor
adc
mov
aas
adc
inc
inc
dec
sahf
rorb
cmp
sahf
and
pop
jl
fwait
push
push
ljmp
jbe
test
xchg
or
test
hlt
jmp
push
popf
stos
push
shll
jp
nop
pop
sar
test
sub
cmpsb
inc
insl
jns
push
xchg
xor
addr16
in
je
inc
lds
dec
mov
sbb
cmp
or
rorb
imul
xor
push
inc
jl
inc
in
movsb
lods
cmpsb
sub
pop
inc
loope
dec
loope
xor
sbb
mov
fsubs
out
je
add
pusha
pop
mov
movsb
pop
adc
add
mov
es
insb
cmpsb
mov
add
add
add
mov
mov
jb
cld
sub
mov
testl
inc
dec
iret
loope
rcll
in
mov
push
add
dec
or
sbb
test
test
cli
cltd
fs
sub
aaa
loope
mov
push
clc
insb
pop
in
inc
mov
test
xor
cli
jbe
fnstsw
es
sbb
aas
cmc
push
dec
sti
roll
fnstcw
fs
mov
cwtl
sahf
push
sbb
cmp
ret
imul
and
mov
data16
mov
pop
minps
rclb
add
mov
lret
mov
sub
or
data16
sahf
adc
push
sbb
xchg
sbb
cmpsb
xchg
push
scas
pop
fs
add
dec
repz
into
mov
lea
cmpb
add
add
jg
mov
sub
divps
add
add
add
xchg
lret
or
loopne
adcl
movsl
inc
dec
and
mov
cmp
push
aad
cmp
das
push
pushf
lods
push
test
ds
inc
cmc
cli
pop
mov
mov
xor
lods
adc
dec
adc
mov
inc
cmp
int
arpl
testb
mov
mov
in
fisubrs
mov
pop
xchg
cltd
add
mov
gs
lock
xlat
xor
ret
mov
pop
loop
xchg
and
adc
cmpsb
aas
cmp
out
pop
inc
enter
jmp
and
movsl
rep
cld
push
clc
divb
or
push
dec
lods
int3
mov
inc
pop
cmp
xorl
clc
popa
hlt
fimull
clc
loop
aaa
adcb
enter
cmp
xor
push
jnp
adc
or
and
js
add
xor
push
cld
pushl
out
adc
leave
jp
xchg
jae
add
cmc
add
add
mov
mov
xchg
dec
and
cld
inc
cmpsb
or
add
lds
adc
into
and
add
fsubrp
push
xchg
aas
add
inc
cmp
adc
mov
lea
mov
or
repz
imul
mov
jmp
iret
ja
mov
out
dec
test
push
lahf
cmp
mov
ja
subb
or
outsb
xchg
cmp
scas
icebp
sti
push
xchg
sbb
sbb
outsb
out
cmp
adc
pop
jo
mov
lret
mov
or
insb
and
mov
stc
clc
sti
pop
aaa
sub
push
gs
enter
push
orb
sti
arpl
push
jge
cld
push
lret
push
test
mov
push
ljmp
in
inc
adc
sub
inc
jmp
add
xlat
pushf
shrb
jb
ret
or
push
add
add
rorl
jno
ss
xchg
mov
adc
jp
aas
clc
iret
dec
mov
lret
int3
clc
mov
add
cwtl
scas
and
sbb
lcall
fmuls
mov
test
test
mov
outsb
negl
sbbl
pop
sub
aaa
dec
ds
inc
pop
dec
cwtl
into
inc
jae
shlb
fdivl
mov
mov
cmpsl
mov
orb
cmp
clc
mov
int
stos
jbe
orb
jne
and
out
pop
pushf
xchg
enter
cmpsb
ficomps
rcrl
jns
movsl
cmp
xor
adc
das
inc
pop
add
add
or
cld
dec
std
stc
cmp
in
clc
fsubrs
rorb
nop
cltd
popf
cmp
add
sub
scas
mov
xchg
push
outsl
push
enter
add
add
fcoms
push
shll
xchg
out
jbe
xchg
test
loopne
cwtl
pop
je
push
retw
dec
in
addl
adc
pushf
and
push
mov
out
je
cmpsb
lock
popa
pusha
add
mov
dec
mov
aas
mov
cmp
cmp
daa
popf
in
push
xchg
xchg
push
xor
scas
popf
sti
lods
pop
repnz
cli
sub
mov
stc
ja
xchg
xor
inc
test
and
test
push
pop
nop
pop
push
pop
fcmovne
or
dec
jnp
insl
sub
rclb
and
es
loopne
jo
dec
scas
push
or
adc
ficoml
mov
cmpsb
push
test
clc
aad
addl
cmp
hlt
loope
xor
into
pop
test
ja
mull
cmp
add
add
jne
jne
jg
out
and
pop
xor
cmc
add
add
pop
xor
lods
pop
subb
add
cmc
xchg
mov
leave
xlat
roll
or
inc
fdivrl
jmp
fwait
or
iret
outsl
adc
mov
lods
and
push
imul
pop
in
xor
rorb
out
sbb
pusha
mov
cmp
mov
cli
enterw
mov
ucomiss
sbb
pop
xor
dec
lahf
leave
and
pop
and
inc
xchg
sub
inc
jbe
out
mov
dec
sub
jg
inc
xor
jmp
mov
mov
sbbb
pop
pop
icebp
sbb
mov
xchg
jb
xor
adc
push
fsubrs
ja
xor
and
mov
mov
push
or
incl
mov
daa
out
cmp
xchg
outsb
push
push
notl
stos
jno
jne
sbb
mov
cmpsb
fstpl
add
adc
lret
cmc
add
add
and
or
cmovle
popa
adc
pop
xchg
xorb
retw
mov
sarl
bound
mov
pop
ja
inc
dec
sub
movl
ds
ja
outsb
cs
aam
mov
mov
notb
and
sbb
pop
push
imul
xchg
mov
icebp
pusha
arpl
nop
xor
xchg
xor
jmp
mov
inc
sahf
adc
dec
dec
push
lcall
ds
sbb
mov
in
add
outsl
shlb
scas
ljmp
jg
cwtl
add
cmp
fmuls
cmp
outsl
sub
aas
add
add
mov
jmp
mov
int
pop
out
pusha
cmc
pop
ds
movsl
or
pop
push
ljmp
add
and
outsb
jle
lods
not
mov
add
lret
add
cmc
add
add
adc
in
cwtl
xchg
into
lods
out
pop
stc
and
cli
imul
xchg
xchg
cmp
inc
push
cmc
lret
pop
fcoms
ja
sahf
pusha
mov
cltd
test
and
mov
jnp
in
sub
mov
jns
and
ds
repnz
push
sti
push
jge
nop
sub
pop
cmp
rolb
push
and
outsb
xor
pop
add
jno
mov
sub
dec
jne
idivl
gs
mov
cmpsb
cld
mov
jae
lcall
xor
jb
inc
inc
xchg
in
inc
mov
mov
test
leave
jmp
jbe
xchg
mov
addb
jmp
jno
jns
sarl
push
lahf
mov
arpl
xchg
adc
out
or
xchg
ljmp
mov
cmp
mov
mov
push
xor
aas
xor
add
cmc
add
add
insb
ret
je
jmp
inc
push
or
lods
cltd
add
push
mov
je
push
cmp
sti
fstpl
or
or
sbb
in
push
adc
pop
or
gs
sub
push
lods
flds
sti
mov
mov
rcrb
pop
insl
out
out
sbb
loopne
cmpps
inc
jl
or
mov
sbb
lahf
imul
or
dec
jp
out
and
pushf
mov
jl
add
and
ficoms
sbb
push
nop
pop
pushf
pushf
add
int
mov
test
push
mov
push
out
divb
push
mov
cmp
imul
add
lahf
pop
loope
mov
pop
push
les
daa
or
outsl
push
jbe
sti
mov
add
test
sbb
xlat
ss
inc
movsb
sbb
roll
es
add
add
add
and
jo
lahf
fidivrl
sbb
xchg
cmp
add
jg
or
imul
int
cpuid
pop
iret
add
ret
cs
hlt
jp
mov
shlb
aam
stc
fisttpll
negl
mov
into
inc
sub
cli
mov
ljmp
aas
rol
insl
push
jge
xchg
sbb
xor
xchg
pop
xlat
sbb
mov
cs
into
sbb
lock
pop
mov
sbb
mov
cltd
sbb
gs
repnz
adcl
ret
addb
rcl
inc
fsts
cmc
pop
jl
sahf
jge
cwtl
fildll
leave
dec
jae
mov
nop
sub
pushf
push
fwait
jl
sub
and
xor
fstpl
pusha
mov
pop
inc
jno
add
ds
sub
cmp
jg
cmp
mov
sbb
add
cmc
add
add
xchg
orl
fildl
aaa
xchg
jecxz
push
repnz
sbb
xor
xchg
mov
fs
clc
or
pop
add
pop
xor
mov
clc
movsb
mov
div
sarl
in
in
sbb
in
rolb
ret
inc
push
jle
mov
push
shll
data16
mov
add
test
insl
jns
fs
or
dec
mov
xor
popf
aam
insl
hlt
jne
insl
je
cwtl
sbb
aas
fisubrs
cmp
sub
inc
leave
lods
les
divb
fstpt
lea
sbb
mov
lds
popf
pop
aaa
cmp
call
clc
push
in
leave
leave
imul
mov
pop
mov
daa
imul
rorb
movsl
icebp
cmp
call
add
add
xor
fistpll
out
repz
aam
in
adc
add
cmc
add
add
iret
pop
shll
mov
int
adc
lods
test
je
popf
test
nop
mov
add
cld
stos
mov
sti
out
jmp
and
jbe
fldl2t
cwtl
xor
push
adc
and
movsl
pop
je
push
jo
mov
cmpsl
inc
decb
adc
mov
sub
or
jle
adc
outsb
lahf
pop
lret
mov
jo
adc
mov
fstl
cli
inc
jmp
rorl
lock
mov
pop
sbb
pop
xchg
push
lds
iret
jns
scas
cmp
inc
xlat
les
add
or
into
push
jmp
repz
in
sub
jae
mov
les
insl
push
xor
push
sub
mov
mov
mov
cmpsl
xor
lret
pushf
mov
adc
dec
testl
outsl
loop
out
cld
pop
repz
xchg
mov
mov
add
add
mov
jne
cld
xchg
pop
add
add
add
leave
and
fs
xchg
or
call
mov
sbb
jmp
ret
sbb
push
lods
daa
ds
andb
gs
idiv
rcll
stos
mov
xor
fisttpl
rcrl
add
shl
inc
ficoms
lock
sub
sub
in
adc
mov
ds
iret
hlt
xchg
mov
mov
stos
ret
and
loop
sbb
inc
loopne
pop
addb
jb
scas
cmp
out
inc
insb
push
adc
in
jb
cmp
test
pop
dec
mov
imull
adc
dec
mov
ja
hlt
jp
out
inc
movsl
sub
sub
cmp
push
imul
enter
and
enter
or
mov
add
add
enter
in
out
mov
dec
call
rolb
add
add
add
outsb
jno
lcall
mov
repnz
mov
add
inc
out
pop
jecxz
ja
adc
cwtl
push
mov
movsb
pop
or
stos
stos
jge
mov
pop
pop
lcall
loope
adc
xor
lock
sbb
paddq
clc
out
dec
call
sub
sub
and
xchg
pop
lcall
int3
push
stos
shl
pop
hlt
jne
push
movsl
leave
test
mov
inc
pop
incl
movsl
movsl
cmp
jecxz
dec
mov
int
adc
jo
xlat
and
mov
cs
test
shrb
insb
stc
xchg
ljmp
mov
and
cld
mov
jl
loopne
adc
pop
aad
jmp
fidivl
sahf
mov
movzwl
test
jne
mov
or
add
add
imul
cmc
call
gs
out
roll
add
add
add
addr16
mov
xor
call
xchg
mov
cmp
pop
inc
orl
push
cmp
sarb
cmpsl
in
ret
mov
sti
inc
fdivs
lods
jno
cmc
ret
push
sub
jbe
sarl
repnz
xchg
loope
inc
pop
xor
lret
or
jg
shl
or
xlat
xchg
xor
hlt
and
cmp
pop
cli
mov
xchg
lods
jnp
push
push
out
and
inc
aaa
push
out
dec
push
pop
jge
jecxz
mov
in
mull
negl
mov
push
push
cwtl
mov
imul
fsubp
test
mov
xchg
mov
test
xor
mov
lods
gs
and
sbb
adc
stc
sub
js
fnstsw
sub
outsb
mov
cmpsb
push
lea
or
add
add
ja
iret
xchg
xor
scas
inc
and
rolb
add
add
add
jne
xchg
dec
push
movsl
and
enter
xor
and
jl
mov
rcl
inc
ljmp
xor
notb
sbb
lods
bound
insb
pop
in
sub
icebp
pop
test
dec
and
inc
pop
mov
lcall
lret
or
xchg
mov
sub
rorl
jns
lret
adc
shlb
push
mov
fidivs
xor
dec
push
out
mov
mov
inc
sub
arpl
int
lahf
and
and
inc
pop
pop
inc
and
jp
adc
mov
pop
shrb
add
gs
fdivrl
cmpsb
test
jecxz
jo
inc
mov
pop
pop
mov
jp
fiadds
or
push
add
mov
out
out
out
into
gs
fsts
roll
add
add
add
icebp
popa
mov
inc
sub
mov
mov
add
mov
out
ljmp
or
jnp
stc
leave
push
dec
or
mov
sbb
loop
movsl
out
fldenv
ja
fisttpll
cmp
dec
xlat
cmpsb
loope
xor
sbb
test
cs
mov
stos
mov
add
in
icebp
lods
js
fwait
scas
dec
push
pop
shl
mov
and
ljmp
sbb
sbb
out
sub
out
inc
test
dec
sub
sbb
push
testl
or
push
out
push
xchg
inc
roll
roll
scas
rol
jbe
adcb
sub
repnz
xchg
mov
sub
neg
pusha
lods
sti
mov
aad
pushw
iret
cmpsl
push
mov
jmp
filds
add
add
xchg
and
je
out
mov
jecxz
lret
add
cmc
add
add
loopne
sbb
repnz
test
stos
dec
pusha
es
sub
jno
mov
data16
aam
scas
fdivp
xchg
or
and
int3
mov
scas
adc
adc
jbe
sub
or
dec
bound
adc
sub
mov
or
adc
mov
cmpsl
mov
les
nop
pop
push
out
scas
inc
mov
push
xor
ds
leave
lcall
roll
mov
mov
hlt
xor
popa
adc
pop
int3
dec
dec
sahf
mov
inc
scas
sbb
jae
pop
cmp
js
fwait
mov
xor
shl
mov
sub
push
aad
push
fs
jmp
ljmp
pop
sbbb
xor
je
xor
cmp
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
jbe
ret
aad
add
add
add
pop
xor
mov
ficomps
repz
insl
mov
or
mov
inc
repnz
pop
xchg
mov
js
fwait
cli
test
push
or
mov
and
call
cmp
aas
push
clc
mov
add
add
xchg
cmp
push
and
sbb
cmp
sub
outsl
or
test
call
pop
xchg
jp
mov
loop
popa
xor
jne
xchg
daa
mov
jl
sarl
pop
pop
mov
jp
pushl
dec
xor
cmp
scas
xor
adc
pop
jb
pop
mov
pop
add
repz
clc
xchg
inc
mov
ljmp
scas
mov
call
xchg
sub
or
ret
sti
lock
adc
push
push
mov
push
fildl
add
call
out
lahf
or
fdivs
mov
add
add
lods
xor
movsl
sarb
insb
mov
rep
mov
das
sub
ja
pop
push
lods
adc
and
mov
loope
or
inc
jo
shl
rolb
fs
cmp
ljmp
mov
gs
jb
push
cli
imulb
pop
mov
mov
bound
xchg
fiaddl
in
inc
cli
insb
mov
dec
mov
jp
add
lret
jl
jb
pusha
bound
rorl
repnz
sbb
pop
arpl
pop
lock
push
mov
mov
movsl
sahf
or
mov
or
mov
adc
out
xlat
test
mov
add
xlat
lret
add
inc
fisubl
divl
add
inc
pusha
ret
or
inc
mov
ljmp
add
neg
outsl
mov
push
and
xlat
add
cmc
add
add
test
pushf
xlat
pop
int
mov
hlt
lds
xor
out
outsb
sub
imul
das
add
aam
or
jmp
push
enter
inc
xor
movsb
cmpsl
mov
mov
mov
inc
icebp
aam
cwtl
adc
mov
pop
popf
jns
and
inc
shr
subl
dec
xchg
shl
dec
pop
push
repnz
nop
dec
scas
push
mov
cld
nop
mov
lds
scas
pop
jmp
and
jns
sti
fidivs
push
into
cwtl
dec
add
faddl
popf
pop
stos
lock
iret
fldt
pop
clc
scas
mov
lret
mov
cwtl
jno
mov
sbb
sbb
ja
lods
jns
test
jmp
fildll
movsl
not
xor
or
adc
enter
mov
dec
test
pop
cs
mov
and
cmovg
lea
mov
add
add
add
sbb
sbb
fs
push
mov
add
add
rol
clc
into
xor
mov
outsl
push
ret
xor
insb
shlb
cmpsb
insw
mov
jp
mov
fs
test
mov
iret
in
scas
cmpsl
test
in
sbb
inc
adc
push
mov
in
lahf
in
mov
stos
in
jmp
rclb
inc
mov
lahf
icebp
pop
ja
stos
adc
xchg
sbb
and
std
arpl
movsb
test
js
test
add
je
scas
xchg
sbb
hlt
mov
test
ror
or
gs
mov
xor
xor
repz
addl
mov
inc
aaa
icebp
fcoms
imul
xchg
les
mov
test
out
mov
xchg
gs
movl
push
add
add
add
ds
sub
push
and
add
add
lcall
dec
rclb
lock
aad
xor
outsb
sbb
data16
rcrl
loopne
inc
xchg
icebp
scas
add
cmovl
jg
pushf
or
jmp
add
xor
xchg
movsl
push
dec
rcrb
mov
push
dec
mov
in
das
cmp
inc
mov
jecxz
jecxz
adc
or
dec
cmp
mov
bound
cmc
add
je
or
add
dec
pusha
into
les
fiadds
xchg
inc
pop
enter
push
call
vshufps
push
jno
adc
scas
pop
mov
pop
or
outsb
test
ss
cwtl
in
cmp
loopne
jge
dec
fwait
push
enter
xchg
xor
sti
sub
inc
cmp
popa
jne
add
mov
inc
lahf
lret
inc
xchg
and
mov
adc
outsl
pop
push
cwtl
call
xchg
and
idiv
lahf
insl
mov
jge,pt
fiaddl
add
add
add
mov
mov
and
push
fcoms
mov
xchg
and
mov
iret
xchg
sub
xchg
pop
ljmp
or
push
xor
jnp
cli
ret
mov
cmp
test
cmp
adc
decl
out
roll
push
pop
mov
xor
xor
pop
aaa
jns
loop
mov
stos
shlb
sbb
inc
aas
jmp
push
and
fsts
stc
mov
enter
leave
or
xor
rorb
imul
in
jnp
scas
xor
repnz
aad
pop
or
push
or
jnp
add
outsb
add
pop
pop
mov
sub
aaa
std
jecxz
xchg
outsb
inc
xchg
test
pop
cmp
xchg
push
sub
ficomps
sbb
leave
xchg
rolb
cmp
jg
loope
cs
mov
xor
add
add
mov
mov
pop
nop
xor
jae
scas
xchg
mov
bound
adc
xor
cwtl
xchg
and
dec
roll
mov
out
mov
mov
shll
pop
test
push
and
aaa
adc
sarb
leave
push
pop
push
outsl
jb
inc
push
rcll
sub
incb
scas
sarb
jl
cmp
mov
pop
test
adc
mulb
insl
sub
fs
push
movsl
in
and
fisubl
mov
lds
push
sub
dec
sub
jno
inc
or
xchg
fists
sub
xchg
xchg
sub
or
enter
aas
push
and
push
jl
and
out
dec
pop
fisttpll
jp
sbbl
xchg
shl
fcmovnbe
pop
pop
or
adc
add
imul
xor
mov
cmc
add
add
iret
ja
or
fstps
fwait
bound
sub
mov
aas
dec
sti
mov
dec
jno
mov
movsl
and
pop
pop
and
sbb
xchg
push
mov
jns
inc
loop
inc
sbb
xchg
into
js
jns
hlt
xchg
out
add
adc
lret
cltd
mov
mov
mov
ret
je
sbb
xchg
out
out
push
hlt
mov
cmp
ja
imul
cmp
mov
xor
shlb
int3
or
sahf
mov
sub
inc
call
mov
add
xor
or
push
enter
mov
sbb
test
popf
ss
and
inc
jb
and
lods
mov
cs
popl
xchg
and
cmp
jmp
das
sbb
lcall
icebp
leave
dec
xchg
add
add
psubusw
push
xchg
fsubrs
inc
push
ljmp
add
jp
mov
push
stos
sub
stc
jae
push
pop
and
sbb
xchg
push
jg
lock
xor
inc
dec
push
packuswb
mov
or
les
cltd
jb
mov
sti
or
je
adc
cmp
outsb
mov
xchg
xor
sbb
movsl
test
insb
and
enter
in
imul
sbb
xchg
or
std
ss
push
jmp
jp
dec
xchg
sahf
mov
cs
aam
mov
shrb
dec
xchg
pop
mov
xchg
sbb
cmp
or
jb
paddb
pop
cmp
mov
or
pextrw
jp
xchg
loopne
lret
push
je
mov
sbb
jne
int3
incb
ret
jmp
jle
xlat
sar
nop
jne
loopne
test
adc
mov
mov
repnz
divl
ds
jg
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
mov
fiadds
add
add
add
mov
pop
rcr
js
xchg
xchg
pop
clc
jnp
add
popf
in
leave
scas
xchg
negl
lds
mov
mov
pushf
sbb
or
inc
jp
jne
cmpl
ds
mov
adc
stos
sar
out
fldt
inc
xchg
push
or
jp
mov
sub
mov
daa
push
adc
jle
jge
sahf
arpl
pop
cmpsl
and
cld
mov
pusha
sbb
xlat
inc
lret
and
enter
or
insl
pusha
repz
mov
int
mov
bnd
pop
sub
js
inc
arpl
pop
int
and
jge
sub
mov
push
mov
dec
cmp
fstpl
mov
gs
mov
jp
jo
std
inc
je
push
cmp
dec
incb
add
pop
dec
jle
jg
std
fldt
cmp
dec
jae
push
cmc
add
add
push
out
and
jle
inc
cwtl
cmpsb
ds
lea
std
add
push
clc
je
push
shrb
mov
out
in
addb
dec
mov
ss
lock
lods
add
int
push
mov
je
push
add
xchg
mov
ds
pop
repz
testl
jp
cwtl
sub
lcall
push
andb
sub
pop
nop
pop
mov
push
cltd
cli
adc
shll
insb
shl
stc
je
push
fldl
mov
rcr
xchg
mov
pop
daa
adc
xchg
pop
sbb
xchg
fdiv
repnz
cmp
aas
pop
push
or
jae
jbe
dec
ja
ds
nop
test
mov
sub
or
xlat
sub
mov
into
inc
and
sbb
inc
jle
mov
add
add
mov
sti
idiv
lods
jne
adc
dec
cmp
xor
cmc
add
add
dec
data16
icebp
push
cmp
and
pop
pop
sbb
or
out
fwait
or
adc
xchg
aad
jne
iret
dec
icebp
incb
cmp
icebp
mov
iret
push
dec
inc
mov
sbb
push
cmpsb
pop
repz
movsb
je
lret
pop
cmp
push
push
js
fldenv
mov
mov
push
fdivrs
cmpsb
or
mov
dec
jnp
pop
and
mov
clc
cmp
ss
outsl
mov
sub
movsb
push
jge
mov
adc
jne
pop
enter
mov
fldenv
nop
ret
scas
ljmp
stc
sbb
pushf
mov
inc
mov
mov
cmp
cmp
xchg
xor
push
fnsave
mov
sub
jp
xchg
scas
xchg
mov
add
add
sbb
jmp
mov
inc
fdivr
aas
loope
add
add
add
inc
jp
cmp
scas
inc
jg
fsubr
dec
orb
cmp
jle
mov
imul
scas
mov
mov
sbb
or
jl
pop
adc
cmp
pop
je
or
jno
push
in
jb
out
xchg
fucomi
lock
loope
add
scas
loope
cmc
jae
fs
or
data16
dec
push
adc
movsl
ljmp
jle,pn
call
and
push
sbb
outsb
mov
lock
dec
and
mov
test
jmp
add
push
ss
jbe
mov
loop
mov
mov
push
fucomi
mov
test
js
loopne
cs
sbb
dec
inc
or
fistpl
lahf
mov
push
xorb
sub
add
cmpsl
fimull
jp
dec
push
xchg
cltd
shlb
add
cmc
add
add
adc
inc
mov
lods
dec
nop
jle
popf
dec
call
imul
cmp
sahf
mov
dec
add
cmc
fs
or
negb
or
sarl
leave
bound
and
mov
cmp
xchg
sub
fcmove
xchg
stos
andl
lds
push
vpblendw
fisubl
lods
lret
je
lock
inc
out
jns
daa
scas
stos
cli
dec
pop
jns
repnz
xchg
std
pop
dec
mov
add
and
sub
jl
loop
je
insl
insb
aam
xlat
inc
int
sahf
pop
les
out
int3
push
iret
cwtl
in
inc
orl
je
and
dec
mov
in
les
cmpsl
cmpsb
popa
ljmp
dec
out
das
lret
dec
push
sub
pop
cmp
push
cmc
cmp
cmpsl
int3
fcoml
xlat
push
or
lds
jg
mov
lcall
mov
daa
sub
add
cmc
add
add
stc
mov
sbb
arpl
jne
cmp
cmp
pop
inc
push
test
roll
cltd
lock
mov
inc
insl
mov
jns
loopew
outsb
xor
pop
loopne
bound
gs
out
mov
pop
lcall
mov
and
outsl
mov
loop
or
push
cmp
inc
in
out
inc
sbb
lods
push
or
jl
ret
cmpl
or
int
jns
pop
rolb
lcall
roll
into
push
jg
mov
lret
push
jl
xor
add
or
dec
lcall
mov
sub
push
cmp
fists
decl
cmpsl
shr
jbe
sub
lret
arpl
dec
out
rcll
push
sarl
test
in
pop
or
jp
mov
dec
popa
pusha
push
add
add
add
mov
jns
daa
data16
push
in
add
add
add
sbb
ds
int
sti
ds
rcr
jb
stc
lock
lcall
test
cmp
ja
inc
ds
mov
les
mov
mov
out
imul
mov
or
mov
mov
mov
test
cmp
mov
std
iret
lods
dec
nop
xlat
imul
movsl
xchg
dec
in
mov
sbb
jmp
lahf
inc
repz
jno
jle
pop
pushf
nop
mov
or
adc
cmc
sarl
lret
and
jne
pop
test
mov
aaa
pushf
cmpl
sub
jl
iret
les
cmp
out
enter
scas
into
in
push
js
mov
cmp
outsb
sbb
cmc
call
ret
mov
pop
ja
push
aam
fmul
dec
or
lahf
lods
shrb
add
add
fadd
fsubp
jnp
push
xor
xor
cmc
add
add
jge
scas
push
fucom
lahf
in
shr
movsb
push
cli
cli
lea
jb
lahf
fcoml
cmpsb
and
xor
out
push
mov
adc
or
ficoms
jp
popa
out
ja
ficomps
fmulp
aas
out
je
sbb
xchg
imul
in
xchg
sub
mov
mov
mov
test
add
shrl
xor
sbb
cmp
sbb
inc
aam
filds
dec
stc
pop
xorb
cwtl
mov
jg
cmpsb
adc
in
pop
popf
fdivrs
adc
mov
jecxz
add
lahf
call
jmp
dec
cmpsl
ret
mull
das
insb
mov
push
js
or
lock
add
lea
cwtl
es
shll
push
cmp
sub
cld
cli
jle
addb
or
add
cmc
add
add
ret
pushf
sub
jnp
or
xor
add
pop
sub
jno
or
sub
dec
inc
lcall
jno
std
hlt
adc
dec
mov
lcall
jmp
inc
or
testl
iret
jns
mov
or
loope
ficoms
xchg
test
cmp
aam
xor
mov
jecxz
std
or
sbb
mov
or
xchg
cmp
std
cmpsl
fbstp
dec
lret
pop
push
push
stc
mov
cmp
out
push
andb
lods
call
ljmp
xchg
out
jbe
les
pop
scas
jmp
mov
xchg
sub
out
xor
bound
dec
ret
sub
lahf
push
and
inc
mov
mov
jmp
mov
add
add
ja
sti
dec
push
sbb
inc
std
out
add
add
add
mov
iret
mov
push
and
or
outsl
bnd
xor
jmp
lods
lahf
inc
and
xor
jle
mov
lret
dec
xchg
jmp
pop
out
push
ljmp
inc
gs
and
mov
scas
inc
lock
ja
in
mov
jle
rorl
mov
xor
dec
xchg
mov
aad
daa
sahf
push
imulb
lods
push
dec
jge
movntps
sarl
dec
lret
cld
int
cltd
push
dec
pop
out
test
xchg
mov
lock
sti
sbb
sbb
ds
mov
loopne
cmpsl
mov
add
out
add
xchg
xor
mov
sub
and
push
int3
rolb
sub
inc
inc
inc
dec
adc
pop
xor
outsb
jg
adc
mov
xchg
cli
arpl
fneni(8087
fisubl
cmpsb
into
clc
add
add
into
arpl
inc
push
cmc
or
int
mov
cmc
add
add
add
in
xor
xor
lret
jns
or
adc
dec
xchg
mov
fimull
and
push
mov
ror
xchg
sbb
sbb
lods
adc
xchg
xchg
shl
jns
or
xor
mov
and
and
data16
jp
rcrl
lock
sub
cmp
jp
push
stos
cmpsb
add
insb
inc
inc
pop
outsl
push
and
and
xchg
mov
jns
xor
test
mov
add
aad
push
pop
dec
scas
xchg
xlat
push
rorb
stos
std
dec
cmp
pop
pop
pop
inc
imul
testb
mov
call
repnz
rcll
pushf
sarb
cmp
jbe
lahf
stos
mov
pusha
stc
inc
hlt
cmp
push
fwait
sbb
ret
stos
imul
add
mov
xor
out
ljmp
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
and
pushf
pop
out
cmpsl
xchg
push
enter
insb
ljmp
stos
fimull
aas
cmc
xchg
push
gs
cmp
mov
gs
mov
les
sub
jge,pn
leave
mov
in
out
inc
mov
pop
fsubr
add
sahf
in
cmp
ret
sti
sti
xchg
mov
sbb
into
fucom
lods
sarb
or
mov
sbb
callw
and
mov
mov
ljmp
mov
out
jne
outsl
les
inc
xor
push
xchg
add
xor
movsb
inc
add
repz
push
or
stos
aaa
mov
pop
je
or
repnz
jno
dec
aas
mov
adc
jbe
mov
mov
jo
jle
shl
add
add
add
lock
jg
mov
pop
mov
add
add
add
dec
fcoms
mov
aas
icebp
cwtl
js
sbb
and
or
mov
sbb
in
mov
test
sub
push
out
xor
sub
int
jno
pop
push
xor
in
xlat
fwait
lods
dec
outsl
popa
mov
jo
ret
in
mov
inc
shl
cmp
ja
xchg
js
mov
mov
imul
fcmovb
mov
or
adc
jbe
xor
fsts
ja
inc
xchg
sub
loopne
add
xlat
mov
mov
xor
xchg
mov
jp
xchg
fdivs
rcrb
mov
into
cwtl
int3
iret
sarb
insb
stos
or
ss
push
cs
cmp
pop
inc
dec
cmc
jbe
or
push
pop
jns
sbb
sub
add
add
pop
xlat
fisttpl
cld
xchg
sbb
ljmp
dec
mov
jo
mov
outsl
xchg
outsb
xchg
pushf
jno
push
cmp
in
fsubr
push
mov
jp
pushf
sahf
jl
imul
lret
jge
clc
sub
repnz
in
jno
out
and
add
pop
movsb
fstl
push
sarl
decl
jnp
in
push
jbe
fs
inc
fldl
sub
xchg
pop
jae
les
inc
push
aad
imul
cmpsb
pop
fbld
jge
lcall
pushf
cmp
lods
js
sti
call
icebp
add
aaa
jle
push
movsb
popa
repz
or
xor
scas
add
pushf
in
sub
in
test
cwtl
add
cs
mov
test
arpl
inc
lcall
inc
and
add
add
mov
dec
js
stc
mov
push
nop
aad
cmp
add
add
add
xor
and
dec
push
popa
enter
push
push
sti
inc
aad
xor
pop
dec
adc
push
dec
adcb
sub
inc
lahf
push
pop
pop
mov
cmp
sbb
jne
and
test
cmpsl
add
sub
rcll
inc
push
or
clc
push
jnp
inc
sahf
out
sbb
int3
jl
cwtl
push
jne
cmp
cmp
test
sbb
fs
sbb
xor
rorb
xchg
lock
push
addl
faddp
stc
xchg
or
pop
or
xchg
and
clc
loopne
mov
loope
cmpsb
pusha
ljmp
setno
ja
out
jns
mov
mov
lcall
pop
test
pop
mov
inc
add
sbb
pop
rorb
add
insl
repz
add
push
cmp
add
cmc
add
add
aas
leave
test
int
mov
inc
xchg
lock
push
adc
sub
and
mov
add
cwtl
add
sub
fsubp
lock
mov
pop
scas
aad
mov
mov
push
mov
jge
sbb
add
loop
or
cld
or
mov
xchg
jne
test
imul
inc
xor
or
pop
push
adc
cmp
push
pushf
pop
and
inc
cltd
jle
sbb
fisubrs
pop
pusha
mov
int
or
ficoms
adc
inc
js
loope
sbb
pop
das
outsl
andb
out
std
outsl
sti
add
rcr
cltd
sbb
dec
jo
cmp
adc
ss
lock
pop
ret
xchg
ss
pusha
stos
cmp
or
pushf
lock
dec
fadd
movsb
mov
and
xor
fstl
xchg
jge
dec
jecxz
into
inc
add
add
mov
pxor
jnp
sbb
movsb
mov
add
cmc
add
add
jbe
js
outsb
jl
lcall
sbb
cmp
push
cltd
cmp
into
mov
push
xor
das
or
or
gs
pop
imul
mov
dec
in
movsl
in
mov
jp
in
xchg
lahf
aam
aad
enter
test
push
or
pop
bound
sbb
cs
lods
fsubs
cmc
js
inc
enter
and
insb
test
jmp
jb
outsb
cmp
loope
aad
ret
jecxz
or
sbb
mov
or
in
xchg
aas
push
daa
fisubl
and
sbbw
sbb
cli
jmp
cmp
mov
mov
pop
pop
out
shrb
sbb
dec
int3
sub
push
test
dec
rol
in
jmp
jecxz
jnp
lret
xorb
add
out
lods
xor
aas
xlat
jmp
popa
test
movsl
out
add
cmc
add
add
cli
pusha
cwtl
std
punpcklwd
ds
dec
ret
push
ljmp
jecxz
adc
mov
mov
call
mov
push
dec
mov
fstpt
dec
lods
cmp
mov
adc
iret
push
lret
loop
or
xchg
jmp
in
cmp
inc
or
hlt
leave
xor
mov
dec
adc
out
shll
fnsave
daa
in
xor
leave
movsl
add
cmp
or
fsubl
int3
and
mov
jecxz
push
inc
xchg
or
addb
sbb
pushf
pop
ds
pop
xor
aad
js
mov
fbstp
movsl
pop
loope
dec
bound
fimull
lods
scas
inc
mov
aam
sub
dec
mov
cmp
push
mov
xchg
jmp
jno
es
add
add
jb
scas
cmp
int3
repnz
out
add
cmc
add
add
sbb
add
movsl
cli
mov
push
cwtl
nop
or
inc
inc
cld
cs
js
std
xchg
cmc
cwtl
sub
mov
call
psrlq
aad
mov
gs
xor
push
lahf
sbb
ja
or
shll
ret
ret
fsubrs
push
pop
jecxz
and
mov
cmp
stc
push
mov
xchg
lcall
into
data16
cmpsb
ja
fdivs
xor
shr
cmpsl
outsb
repnz
lcall
fs
dec
xor
sbb
ljmp
jle
push
pop
jmp
call
jo
mov
sbb
jo
fildl
nop
out
test
mov
pop
jmp
fisubl
bnd
push
ljmp
jmp
xor
cmp
bound
insb
dec
std
adc
cli
cld
add
add
mov
xlat
mov
cli
hlt
pop
lea
add
add
push
and
lahf
fimuls
sub
sub
inc
add
in
mov
mov
andb
imul
dec
sti
jle
lods
sub
insl
cmp
xchg
cmp
jnp
xlat
hlt
inc
cmp
pop
pop
idivb
std
sub
sub
scas
sub
xchg
mov
sbb
sub
mov
outsb
lcall
test
jge
cmpsl
dec
pop
push
andl
mov
inc
cwtl
push
les
dec
xor
pop
push
mov
test
and
add
bound
jmp
dec
push
jmp
loop
mov
daa
sbb
or
mov
add
pop
int
jle
icebp
mov
fdivrs
movsb
and
loopne
inc
ficoms
pushf
cwtl
jno
fcompl
iret
sub
stc
push
daa
push
insb
mov
lods
cmp
lods
aas
jp
int3
icebp
add
add
cmc
add
add
mov
sub
faddl
xor
stc
lret
jge
dec
dec
lret
jbe
or
pusha
sub
mov
adc
add
jb
push
jnp
ljmp
pusha
adc
and
mov
mov
movsb
dec
int
pop
dec
loopne
xlat
scas
lahf
adc
iretw
insl
sbb
cltd
add
jb
loopne
cltd
ss
into
mov
or
les
adc
movsb
mov
xor
push
mov
pop
add
mov
mov
ljmp
shrl
jnp
pushf
pop
hlt
bound
int3
mov
xchg
mov
push
mov
imul
call
shl
push
sub
outsb
leave
pop
and
and
xlat
imul
loopne
repnz
mov
iret
hlt
jl
mov
ljmp
add
mov
sti
mov
sbb
repnz
cmc
add
add
pop
jne
jg
push
aam
cld
cmc
out
inc
xor
mov
cmpsl
xor
add
stos
cli
into
loope
adc
scas
sbb
aam
cmp
pop
cmpsl
orb
ljmp
enter
lods
cs
mov
int
sub
pop
jbe
mov
mov
lods
xor
test
data16
imul
pop
push
jecxz
rol
imul
loop
imul
xor
ljmp
ret
cltd
cmp
fldl
cmp
cmp
cmc
inc
mov
aas
es
sub
jmp
mov
clc
mov
sub
mov
pusha
out
push
jno
mov
jle
ret
lea
pop
push
int3
int3
adc
xchg
sbb
xchg
mov
out
dec
add
add
into
adc
neg
jge
push
xchg
jnp
pop
outsb
repz
cmc
add
add
cmpl
jge
inc
jmp
push
adc
movsl
hlt
pop
mov
jp
outsl
decb
icebp
jg
js
rcrl
and
sbb
addb
pop
xor
js
sbb
sbb
adc
xchg
add
dec
cld
lods
mov
sub
sbb
cmpsl
and
cltd
and
repnz
sub
dec
js
mov
push
mov
ljmp
pop
mov
dec
cmp
imul
mov
aad
and
and
dec
xchg
xlat
loope
mov
loope
cli
lret
orb
lods
stos
pop
push
xor
ret
in
add
enter
and
mov
outsl
push
jno
xchg
ret
iret
mov
cmp
cmp
jbe
js
clc
out
aam
ljmp
in
in
sbb
mov
add
pop
cmp
outsl
jg
jg
mov
xor
hlt
add
cmc
add
add
les
lea
xchg
sahf
nop
sbb
std
jbe
mov
jg
js
cmp
mov
stos
scas
cli
jl
ja,pt
xchg
dec
mov
pushf
addr16
mov
or
test
or
cwtl
inc
jp
cmp
loopne
cmc
fs
sub
inc
in
dec
or
pushf
sub
sub
mov
call
and
add
lcall
jg
jecxz
movsb
out
mov
mov
lds
xor
enter
mov
sbb
inc
jo
aam
inc
cmc
cmp
imul
les
sbb
jnp
sub
push
gs
outsl
ret
sub
rolb
fisubs
sub
out
add
cmp
sbb
sbb
mov
outsl
add
add
ja
and
aaa
negl
cwtl
pusha
sbbb
add
add
add
sub
addr16
insb
cs
data16
lock
lock
jp
xor
inc
neg
jmp
cmp
xor
mov
mov
xchg
sub
mov
xchg
ljmp
incl
inc
out
aad
add
adc
popa
jmp
scas
push
out
jge
into
ljmp
cltd
jnp
inc
imul
add
mov
shr
stos
mov
xchg
data16
xchg
into
inc
push
push
loop
mov
or
add
insl
or
and
out
cli
dec
sub
adc
pusha
enter
cmp
push
and
jb
mov
xchg
dec
movb
dec
cli
add
mov
sbb
or
out
sub
push
inc
test
test
mov
or
xlat
lock
mov
sbb
add
mov
cmc
mov
pop
mov
add
cmc
add
add
cli
jns
aaa
ds
sub
mov
cli
sbb
inc
adcl
or
cmp
mov
loopne
insb
mov
sbb
gs
int3
data16
add
lods
inc
ss
cwtl
mov
xlat
ss
bound
jp
ss
and
ffree
popl
cmp
mov
mov
jnp
sub
pop
movsb
les
inc
cltd
icebp
cmp
xchg
pop
push
pop
pop
je
mov
pop
push
mov
xor
je
out
mov
xchg
dec
jle
xchg
add
mov
fiadds
sbbl
xchg
push
mov
arpl
shufps
and
popa
push
test
or
lret
pop
shr
lods
add
fcmovne
mov
das
pusha
jbe
rcrb
inc
push
dec
pop
lods
lods
inc
stos
js
adc
add
jle
jne
cmp
pop
mov
repnz
add
cmc
add
add
xor
xchg
xchg
jo
cmp
fwait
mov
jl
hlt
cmp
dec
xchg
sbb
lret
sub
int3
out
sub
and
ficompl
jg
add
ljmp
xor
in
push
push
sbb
xlat
push
bound
fadd
mov
sub
jns
adc
sub
xor
xchg
ret
repz
dec
push
pop
jns
sbb
add
pop
mov
fcoml
dec
xor
sahf
cmpsb
push
shlb
adc
fildll
out
test
push
dec
sbb
outsl
mov
xlat
pop
pop
push
pusha
mov
loopne
jno
jge
lea
ljmp
adc
aam
mov
adc
scas
lcall
nop
adc
mov
push
or
push
inc
lret
add
add
add
imulb
testb
mov
aaa
clc
add
cmc
add
add
pop
in
push
cltd
dec
in
jg
jno
xor
loop
and
sub
movsl
mov
inc
sbb
rorb
stos
dec
js
fisttpl
push
cmpsl
insl
mov
push
insb
mov
add
adc
aas
in
push
pop
addr16
mov
movsb
mov
subb
cmp
insl
add
xchg
mov
xchg
push
jns
test
mov
fcoms
mov
dec
sbb
or
xorb
shrl
jmp
icebp
loope
out
push
cmp
push
ret
lock
xlat
js
pusha
outsb
sti
scas
fwait
lcall
mov
xchg
std
cs
inc
pop
ret
movsb
sbbl
xchg
shrb
cli
jp
lcall
mov
push
xchg
or
xchg
push
cmp
and
lret
mov
mov
icebp
lret
add
add
add
xor
xchg
fwait
bound
mov
jbe
sub
add
cmc
add
add
out
mov
jae
ds
lret
loop
or
repz
adc
inc
adc
push
xchg
jns
xchg
hlt
mov
imul
jl
dec
rcr
bound
mov
dec
cmp
push
or
mov
pop
lds
cmpsl
xchg
add
dec
std
repnz
sub
js
arpl
mov
mov
push
cmp
pop
jmp
xchg
shlb
out
in
inc
stc
shl
es
notb
pop
xor
jae
push
arpl
mov
mov
xchg
and
arpl
push
jp
mov
outsl
mov
jle,pt
testb
adc
inc
jno
nop
das
into
call
mov
loop
pop
fnstcw
dec
popa
sbb
pop
fidivl
and
in
ss
fisubl
loope
in
dec
xchg
adc
inc
or
sub
jbe
cli
fsubs
fildl
add
adc
int
in
idivl
pushl
mov
cli
add
cmc
add
add
mov
mov
inc
push
adc
aam
jmp
mov
mov
xchg
dec
jp
test
or
cs
add
or
jp
sub
push
and
jg
inc
loope
cltd
pop
lods
mov
popa
dec
dec
notl
test
cmp
and
jae
adc
cltd
int
in
jae
jl
mov
js
mov
dec
pushf
mov
xor
jge
jne
out
mov
mov
dec
scas
inc
std
int
xor
mov
mov
fldenv
inc
negl
mov
fdivl
inc
aad
inc
outsl
repnz
insl
pop
dec
sahf
clc
xchg
sbb
icebp
and
lcall
xor
jbe
sti
sub
dec
inc
cmp
fdivl
ret
add
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
cwtl
loope
pop
add
aam
pushf
ja
pop
cmp
pop
test
mov
cmp
and
jmp
and
pop
dec
add
inc
cmc
sbb
pop
imul
dec
mov
in
rorl
pop
push
lock
or
cmp
ja
inc
xchg
sub
pop
imul
sti
sub
and
sbb
pop
int3
push
mov
sbb
xchg
stos
es
dec
push
cmovne
aad
cmpb
push
pop
cmc
cmp
out
test
mov
pop
lock
icebp
fdivl
fisttpl
push
or
inc
jl
mov
mov
arpl
mov
push
adc
xor
in
lods
das
sub
leave
add
cmp
inc
lahf
inc
gs
sub
fisttpl
andb
mov
sahf
pop
dec
aad
lahf
dec
sbb
add
mov
lcall
inc
xchg
jbe
or
add
cmc
add
add
mov
cmpsb
adc
leave
add
les
mov
sbb
pop
shll
ja
int
cmp
push
inc
adc
lods
fsubrs
je
mov
fisttpll
and
mov
jecxz
daa
sub
lea
xor
mov
pop
pop
sti
xor
sbb
push
imul
out
loopne
cmp
mov
mov
frstor
pop
lcall
mov
fisubl
js
lret
movsl
call
sub
lcall
sbb
mov
mov
push
shll
ja
mov
inc
push
jno
hlt
arpl
testb
xor
xchg
or
hlt
cmp
loope
mov
shrl
sub
or
pop
and
sar
add
aaa
jae
cltd
dec
mov
fs
add
cmc
add
add
inc
pop
neg
int3
push
push
jmp
scas
mull
scas
pop
mov
add
iret
idiv
lret
icebp
inc
mov
lods
pop
pop
add
sub
ret
adc
mov
ficoms
aaa
adc
inc
mov
push
push
dec
imul
jmp
jns
jne
mov
dec
fsubl
fwait
add
fs
cmp
add
mov
mov
shrl
xor
lret
dec
pop
sub
adc
rol
pop
ljmp
stos
dec
aas
mov
push
xor
cwtl
pop
lahf
imul
imul
scas
movsb
adc
pop
test
into
sub
out
scas
jmp
out
scas
add
pop
push
loopne
sbb
in
cmp
mov
push
cmc
inc
in
bound
mov
jmp
out
sbb
movsl
cmp
xchg
add
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
mov
test
cmc
add
add
daa
scas
imul
outsl
aas
ficompl
sbb
jmp
data16
stos
sbb
mov
push
or
xchg
ja
popl
pop
push
sub
pop
aad
add
mov
mov
rclb
mov
movsb
push
mov
xchg
data16
or
pop
jne
lods
jge
pop
cmp
push
jae
paddw
sub
imul
xchg
insl
mov
cmp
fistps
mov
inc
data16
mov
jnp
inc
sarb
into
mov
mov
cmpb
js
rolb
fadds
mov
inc
xchg
xor
jbe
adc
mov
les
outsl
sbb
cmp
hlt
hlt
cmp
in
jns
seto
mov
pop
push
popf
add
push
add
add
test
jg
xor
or
sarl
add
cmc
add
add
aas
xor
fadd
ljmp
push
sub
lock
push
inc
xor
push
mov
jno
mov
jl
repnz
mov
pmulhw
repnz
shl
adc
sub
insb
sbb
lea
push
xor
push
loopne,pn
mov
push
dec
mov
fwait
in
push
xor
shrb
inc
rorl
negb
mov
pop
inc
addr16
xchg
fwait
add
jno
loop
push
sbbl
and
mov
jns
jnp
sub
push
xor
pop
ss
jb
push
push
leave
mov
pop
pushf
fistps
sbb
movsl
xchg
inc
sahf
aam
fisubs
faddp
push
rclb
sub
stos
cmp
adc
dec
cmpsl
add
pusha
sub
adc
test
inc
sbb
cwtl
enter
addl
add
adc
movsb
push
in
cmc
jne
pop
adc
in
xor
add
cmc
add
add
addr16
call
test
xlat
and
xchg
mov
hlt
fstpl
mov
arpl
testb
dec
jmp
jmp
in
adc
push
pop
cs
fcmovnu
inc
mov
dec
es
jb
xor
pushf
dec
mov
test
fidivl
and
lods
mov
mov
mov
inc
mov
mov
enter
push
mov
push
negb
or
mov
test
lret
outsb
and
or
push
lret
ds
mulb
add
and
in
int3
or
xchg
rclb
insb
sub
xor
cmpb
sbbb
and
xchg
and
mov
xchg
push
mov
cmpb
aam
xchg
les
add
out
shlb
aas
out
fwait
aaa
call
inc
aam
add
cmc
add
add
mov
shll
jge
mov
js
xchg
adc
add
notb
std
add
lea
jecxz
mov
xchg
lret
xor
in
aas
jo
adc
imul
movsl
scas
repz
inc
fcomi
add
pop
sbb
iret
dec
test
subb
mov
lods
xor
pop
xchg
es
mov
xor
lret
adc
clc
imul
icebp
xchg
imul
cmpb
ficomps
mov
fmull
push
and
pop
xchg
mov
adc
lahf
add
xchg
xchg
aad
scas
push
stc
cs
int3
mov
lahf
jb
cmp
inc
mov
adc
adc
imul
movsb
add
add
jmp
mov
push
push
loope
xor
sub
das
inc
in
mov
add
or
mov
aas
adc
fstl
add
add
add
add
push
pop
push
xlat
xorb
and
inc
xchg
in
push
xchg
cld
pop
sbb
mov
loopne
clc
pop
pop
rcr
inc
add
adc
mov
or
out
adc
and
pop
scas
imul
sbb
jmp
or
jns
xor
insb
xor
mov
dec
scas
insl
sub
movsb
mov
xor
int3
jg
or
xor
pop
xchg
sub
ss
imulb
pop
insl
sbb
pop
xor
sbb
and
lock
scas
pop
sub
ljmp
inc
mov
stc
pop
clc
scas
add
sub
daa
orb
or
jg
stc
lods
jbe
adc
rorl
push
jmp
pop
jae
lfs
test
cmp
mov
xchg
push
mov
pop
lcall
scas
int3
fmull
mov
or
add
add
ret
bnd
rorb
cltd
jl
add
add
add
add
bound
leave
out
mov
pop
jbe
push
dec
je
adc
and
test
sub
or
cmpsb
notb
mov
dec
ljmp
fnsave
pop
lret
lcall
mov
fcomi
bound
xchg
add
les
pop
call
xchg
scas
mov
shll
pop
jmp
lods
movsl
pop
ret
add
hlt
adc
xchg
dec
mov
loop
loope
cmp
cmpsl
jns
and
lock
xchg
and
insl
and
push
inc
popf
sub
out
pusha
inc
ljmp
ljmp
sarb
adc
mov
push
cmp
data16
addb
call
andl
xor
adc
push
xchg
sbb
movl
add
std
aaa
mov
lret
jne
lods
inc
mov
add
add
jg
xchg
mov
jge
std
outsb
fcompl
adc
fildl
and
cmpsl
inc
xor
and
das
jno
push
lret
lret
popf
int
fisubrs
xor
xchg
mov
jmp
in
mov
fadds
fnstcw
stos
fsubrl
inc
mov
aaa
shlb
das
sub
sbb
push
imul
push
push
rorb
lcall
pop
push
pop
aam
cwtl
add
push
push
jo
mov
nop
out
testb
cmp
hlt
inc
lock
les
in
icebp
data16
rcll
adc
add
push
dec
cmp
into
add
jae
or
and
push
mull
jmp
mov
insb
xor
fnstsw
shrl
inc
push
mov
add
add
insl
aam
mov
fs
xor
add
jne
add
xchg
jmp
mov
mov
mov
ja
sub
std
push
bnd
sti
adc
push
push
loope
xchg
mov
faddl
sub
mov
insl
push
imul
jg
xor
sar
icebp
shll
jo
xchg
xlat
pop
xor
inc
xchg
fidivl
int
add
fnstcw
xchg
imul
push
in
incb
cmp
adc
sbb
jns
ret
loop
add
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
ja
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
sbb
inc
inc
lods
or
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
