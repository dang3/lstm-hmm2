add
add
adc
cmp
add
add
adc
add
add
add
add
add
add
add
adc
add
add
xor
add
xor
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
add
add
mov
add
inc
and
or
mov
xorl
add
adc
movzwl
mov
mov
sub
mov
and
movb
sbb
lea
xor
xor
adc
mov
mov
mov
sub
mov
mov
xorl
xor
sub
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
push
sub
movl
and
mov
push
mov
xor
or
mov
andl
push
subl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbbl
mov
addl
xor
subl
add
jmp
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
orl
mov
sbbl
xor
xor
mov
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
neg
mov
movl
movzwl
xor
addl
add
movzbl
mov
mov
movl
inc
mov
mov
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
addl
xor
add
mov
xorl
mov
sbbl
xor
add
mov
movl
movl
movl
mov
movl
mov
movl
mov
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
negl
xor
xorl
xor
orl
sub
movzbl
adc
sub
xorl
xor
not
mov
addl
mov
mov
orl
lea
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
pushl
push
push
call
jmp
mov
mov
subl
lea
neg
mov
adc
mov
addl
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
mov
sbb
mov
xorl
mov
lea
xor
mov
mov
mov
adcl
lea
not
mov
mov
mov
lea
mov
dec
mov
xor
orl
add
movl
jne
movl
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
xor
sub
mov
xor
xor
addl
sub
movl
sub
xor
movl
mov
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
add
xchg
dec
xchg
in
sbbl
adc
scas
cmp
bound
sbb
bound
xor
cmp
jns
jne
inc
jnp
jb
sub
sar
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
push
sbb
xor
mov
mov
sub
pop
push
out
adc
lods
mov
popa
push
inc
and
xchg
icebp
mov
cltd
xor
mov
call
sbb
mov
mov
aaa
mov
adc
inc
call
out
idivl
gs
sub
jae
adc
mov
lret
add
dec
push
out
negb
aas
cmp
test
jl
or
test
sub
insb
xchg
pusha
int
inc
xchg
test
imul
adc
adc
cmp
or
adc
and
popf
insl
jmp
repnz
lahf
inc
jb
adc
inc
dec
outsb
dec
adc
or
loopne
scas
insb
in
add
scas
add
lret
xor
jb
xor
std
mov
add
iret
popf
repnz
cmpsb
push
xlat
push
sub
shlb
aad
lea
push
adc
push
stc
push
out
es
shll
dec
push
in
mov
scas
add
jb
mov
dec
rcrl
out
and
cmp
orb
push
ds
xlat
inc
loope
movsb
xor
jl
mov
out
mov
xchg
mov
push
push
dec
mov
and
test
mov
jle
or
sub
idivl
cli
outsb
loopne
jno
cmp
xor
push
imul
cmpsl
push
jae
xor
mov
inc
inc
cmpsb
hlt
mov
call
cmp
stos
mov
lret
mov
jmp
test
imul
fprem
add
push
addr16
ret
es
in
xor
or
cmpsb
mov
push
or
cs
mov
jp
ret
rol
or
scas
xchg
pop
dec
outsb
or
pop
mov
lea
push
push
pusha
bound
mov
dec
add
xlat
pop
addr16
jle
push
jle
test
dec
cld
aaa
xor
adc
sarl
in
in
jne
jnp
sbb
mov
cmp
aas
xchg
pop
fstps
into
cmp
ds
push
dec
xlat
cmp
pusha
sub
movsl
ret
push
xor
lock
fstps
adc
xchg
mov
or
pop
imul
test
mov
sahf
imul
xchg
xor
push
mov
enter
test
jnp
es
and
inc
sahf
aaa
fs
popf
fldl
cmp
and
dec
pop
adc
enter
outsl
idivl
iret
rclb
sub
add
adc
mov
push
inc
adc
iret
mov
pop
pop
mov
mov
lods
and
sbb
es
cmp
aas
mov
mov
push
sub
push
and
in
imulb
mov
jne
and
daa
out
mov
add
lods
rcll
pop
stc
lret
mov
dec
sahf
mov
jns
outsl
negl
loope
arpl
push
repnz
xchg
mov
insl
das
and
jnp
jns
jbe
repnz
scas
cmp
mov
dec
pop
sub
fistpl
rolb
cli
or
xchg
sbb
push
sub
dec
xor
arpl
mov
fsubl
or
rolb
mov
mov
xchg
push
rorl
jl
sub
es
or
sbb
cli
dec
mov
xchg
jo
mov
pusha
cld
inc
pop
sbb
mov
lea
loop
jbe
xlat
stc
dec
sub
jbe
fcomps
nop
inc
jecxz
out
fcomip
adc
inc
mov
or
xor
insl
movsl
clc
dec
xorl
jae
sub
mov
int3
mov
nop
shr
sub
jbe
test
pop
sub
mov
lret
inc
jnp
jb
push
inc
adc
aas
mov
sub
stos
pop
in
addr16
fwait
ret
ja
push
push
std
aas
xchg
sub
loop
jg
mov
leave
cmp
add
dec
or
enter
popf
xchg
pop
lods
lahf
cwtl
outsb
jge,pt
inc
push
aaa
test
in
inc
test
insb
push
nop
movsl
ret
sub
push
ret
rcll
sub
mov
pop
inc
sub
jmp
mov
ss
adc
stos
mov
jns
into
mov
aam
bnd
popa
das
test
loope
sbb
push
or
shrb
sti
mov
ficompl
adc
js
imul
popa
jae
inc
and
lea
cli
mov
outsl
mulb
cmp
xor
xchg
sbbb
xchg
pop
sbb
fistl
mov
jb
fiaddl
or
movl
stos
lcall
mov
add
mov
inc
test
imul
mov
push
and
mov
or
pop
add
add
ret
or
and
add
repnz
sbb
andl
in
pop
jnp
lods
and
push
push
jo
or
push
or
fsubr
lahf
negl
iret
xor
xlat
xorb
icebp
nop
fsubrl
frstor
imul
and
jne
sub
add
repnz
lea
int
sahf
test
mov
movsb
dec
sbb
mov
insl
mov
dec
cmc
add
push
scas
adcl
icebp
xchg
dec
test
ret
xor
jl
data16
iretw
sub
daa
mov
test
xor
dec
rclb
mov
arpl
dec
je
insb
mov
adc
xor
aam
popf
xchg
mov
rcrl
movb
mov
mov
push
jnp
push
sbb
xchg
adc
adc
mov
jb
inc
xor
dec
xchg
clc
pop
mov
mov
mov
lea
jp
popa
push
inc
jmp
jo
or
xor
out
out
insb
inc
pop
mov
or
mov
adc
xor
aam
dec
in
cmp
ds
jmp
mov
shll
jnp
push
lcall
and
fs
adc
xchg
xor
iret
pusha
jne
pusha
fsubs
in
and
push
aaa
cwtl
faddl
sub
xchg
dec
fdivl
add
lods
ret
adc
aam
and
xchg
das
fidivrl
jle
jns
addr16
mov
out
arpl
in
lea
xor
fidivrs
addl
scas
adc
add
out
cmp
shlb
mov
int
push
mov
cmc
pop
fucomp
lods
jl
mov
xchg
mov
lock
pop
mov
test
jl
xchg
jp
xchg
xchg
dec
ss
jnp
mov
mov
cmp
inc
ror
add
stos
pop
fidivrs
mov
sarl
sub
lahf
gs
adc
nop
stos
or
sahf
lods
pop
fmull
dec
inc
aam
jae
lcall
mov
xlat
cmp
or
jmp
fs
dec
mov
or
fldt
inc
popf
mov
jne
inc
sub
rorb
jge
sti
pop
xchg
and
daa
mov
pop
xchg
dec
out
aam
mov
repnz
fdiv
out
fildll
fcomps
pop
cltd
stc
push
mov
inc
lcall
pop
jecxz
gs
daa
xor
jmp
enter
xchg
lcall
mov
cmpsl
mov
add
movups
xchg
pop
and
mov
and
pop
adc
inc
xchg
add
imul
xchg
xor
outsb
cmc
and
roll
sbb
hlt
shr
andl
data16
ficomps
lds
push
jmp
jne
rorb
fsts
sarl
push
es
xchg
xorl
pop
inc
popf
test
jge
clc
loope
mov
or
jno
xor
mov
sbb
xor
roll
idivb
xchg
inc
pushf
or
daa
shlb
in
sub
std
dec
data16
scas
inc
cmpsl
xor
scas
mov
subl
stos
sub
imull
addr16
mov
shrb
mov
ss
xor
sti
test
cmp
push
shlb
int3
jl
jp
mov
adc
jns
sbb
sarb
and
lock
pusha
mov
out
xor
push
jp
cmp
lcall
pusha
xchg
mov
cli
leave
out
push
pop
mov
in
dec
in
xor
jne
pop
push
movsl
into
push
repz
xorl
mov
mov
mov
pop
es
pop
popa
loop
ja
adc
and
adc
filds
in
cmc
push
test
jbe
mov
bound
sahf
sbbb
das
push
lods
add
inc
std
test
add
mov
pushf
pop
in
or
sub
dec
out
sub
into
aam
inc
popf
nop
pop
add
rcrb
mov
fimuls
cli
sahf
or
int
adc
xor
mov
adcl
imul
dec
push
shll
lock
je
cli
dec
cltd
filds
jp
jb
sbb
sbb
cwtl
or
insl
jne
cwtl
sub
pop
hlt
int
dec
sub
sbb
sbb
movsl
data16
jnp
je
cmc
xchg
sti
test
pop
adc
pop
inc
fwait
arpl
ds
int
sarb
push
fcoms
clc
stos
and
xchg
jne
push
inc
xchg
push
push
mov
jnp
pop
jne
hlt
lret
pop
inc
jno
pop
fistl
lock
lret
mov
in
jl
lret
and
sbb
pop
fdivp
or
ljmp
inc
jge
rclb
lret
loopne
test
cli
sbb
les
mov
scas
and
mov
inc
fucomi
ds
mov
and
inc
mov
and
ds
xor
movsl
dec
inc
xor
and
and
sbb
pop
loopne
jmp
sbb
or
adc
or
imul
xchg
cmp
rol
dec
xor
test
movl
sbbl
mov
test
scas
mov
rcr
add
inc
lcall
and
lock
xchg
out
test
mov
jmp
inc
addl
call
sbb
inc
call
mov
pop
push
mov
push
or
fidivl
jne
out
stc
int3
mov
xchg
mov
and
ljmp
push
lret
pop
push
mov
cmp
out
test
movsl
or
xchg
popa
or
std
push
push
adc
jecxz
or
icebp
jne
and
push
insl
out
psadbw
add
dec
call
jge
fisttps
jae
push
testl
mov
jo
xor
or
push
outsb
mov
scas
out
cmpsb
xchg
dec
clc
sbb
xor
jne
mov
scas
mov
pop
cmp
sarl
popf
push
mov
lock
sbb
mov
je
mov
stos
leave
or
sub
push
mov
push
mov
pop
pop
icebp
mov
xchg
xor
jo
add
jno
outsb
jb
mov
xchg
rcll
iret
sbb
xor
sti
shrb
fistpll
sahf
mov
and
push
shlb
dec
movsl
xchg
das
xchg
xor
fistl
bswap
mov
push
int3
add
es
inc
mov
mov
mov
ljmp
push
popa
in
loope
sub
mov
mov
test
mov
fst
mov
mov
lds
fwait
cld
and
out
jnp
mov
push
je
pop
xchg
xor
dec
outsb
sbb
sub
jecxz
sub
mov
lcall
xor
adc
mov
or
pop
push
cli
imul
add
xor
xchg
sbb
jo
sbbl
mov
cmp
aam
dec
call
movsl
lods
out
adc
push
xlat
scas
int
int3
and
loope
jg
sub
scas
outsl
cmp
adc
gs
movsb
aam
add
and
mov
test
insb
jp
sbb
jns
add
loop
lea
jo
shr
xor
and
les
sbb
outsb
sub
pop
mov
inc
or
cmp
int3
push
mov
test
sbb
and
jne
hlt
fists
fidivrl
or
iret
scas
push
add
sub
pop
bound
sub
in
ja
std
sbb
mov
loopne
xor
jge
mov
push
pop
inc
out
xchg
jae
cld
out
sbb
pop
and
clc
ja
push
call
mov
push
outsb
aas
lahf
into
jp
daa
fdivl
pop
mov
adc
ds
cmp
or
leave
mov
inc
mov
dec
lea
mov
movsb
lcall
adc
mov
push
movsl
iret
test
push
in
cli
xchg
imul
cmp
mov
jne,pn
jnp
leave
xor
jno
dec
pop
mov
cmpsb
and
lea
inc
fwait
push
out
sub
outsl
out
test
sub
mov
jge
or
and
fisubl
lock
stc
lahf
cmpsl
ss
icebp
sahf
pop
adc
push
adc
or
popf
mov
push
int
cld
arpl
rolb
les
sarl
arpl
mov
loopne
adcl
repnz
loop
andb
imul
roll
sbb
orb
shrl
dec
sub
xchg
testb
push
inc
rcr
lcall
and
in
cs
and
lret
push
xchg
push
fstl
scas
adc
xchg
stos
push
pop
mov
mov
pop
imul
sub
incb
fidivl
push
inc
xchg
jecxz
xchg
push
add
loop
pop
pop
push
mov
in
mov
jle
pusha
pop
lods
push
mov
cmpl
mov
lret
mov
sub
jbe
pushf
aas
stos
test
sub
jecxz
les
inc
mov
mov
icebp
add
or
mov
xchg
shll
push
and
or
shl
mov
popf
pop
pop
sbb
aam
inc
mov
out
movsb
xlat
ja
push
mov
mov
xchg
iret
in
dec
pop
arpl
jno
in
rol
das
aas
mov
loopne
cmpsl
pop
sub
movsl
and
mov
push
daa
xchg
xchg
mov
iret
repz
xchg
mov
mov
xlat
lds
ss
imul
fst
inc
pushf
in
dec
int
push
dec
in
xor
hlt
cs
push
mov
lods
fnstenv
test
sarb
mov
in
cld
inc
or
int
add
lahf
pop
cli
add
in
dec
sarb
and
xchg
rcrb
ss
jbe
pop
test
int
call
cmpsl
sbb
xchg
into
loope
push
hlt
ja
jl
std
lahf
inc
sub
subb
dec
jae
push
push
adc
jno
ret
cmp
sub
cltd
sub
seta
fs
cmp
ss
mov
adc
out
lret
jo
leave
sti
and
mov
dec
xor
pop
int3
add
mov
lahf
orb
fsubrl
push
test
add
dec
sub
ror
out
pop
daa
add
xchg
mov
dec
or
xchg
lds
lock
pop
xor
loopne
cmpsl
out
inc
loopne
test
shl
sti
jbe
or
cmp
and
loop
cmpsl
push
aaa
fbstp
insb
mov
ljmp
mov
arpl
pop
leave
sarl
inc
push
push
aaa
cmp
jb
jns
mov
data16
push
mov
shrl
push
sbb
jo
daa
xorb
shl
jle
ljmp
stos
mov
stos
data16
push
cmp
fs
lods
divb
and
sarb
sarb
mov
jae
adc
xor
pop
jo
jl
loopne
fisttpll
mov
lcall
lcall
lea
and
cli
push
cmp
sub
adc
unpckhps
loopne
arpl
adc
lods
pop
mov
pushl
gs
and
insl
bound
test
push
test
mov
or
cmp
aas
cltd
cmp
scas
cld
jne
lret
add
or
dec
add
inc
imul
jmp
cld
in
push
adc
pop
into
adcb
mov
push
add
inc
jns
mov
imul
sarl
push
pushf
xchg
sub
sub
shrl
clc
dec
sbb
cld
lods
pop
mov
adc
xchg
ss
mov
jecxz
lods
mov
out
mov
jp
sub
adc
neg
repnz
inc
movsl
mov
cmpsl
mov
mov
pop
cmpsb
push
xchg
and
dec
mov
repnz
sbb
push
daa
mov
pop
cltd
push
pop
dec
ja
int
iret
cmp
insl
or
xchg
pusha
mov
mov
int
test
int
sub
std
sahf
addr16
les
ss
xchg
addr16
cmp
aas
xchg
lods
dec
cmp
xchg
dec
inc
inc
es
fimuls
in
idivb
sbb
cltd
jb
push
cld
jl
and
aad
arpl
add
lock
push
sti
inc
mov
sahf
flds
add
loopne
lcall
cld
or
mov
mov
xchg
scas
arpl
pop
xorb
cmpsb
mulb
push
ret
mov
std
sarb
jbe
sub
lods
mov
jne
mov
out
lret
pop
cmp
fnstsw
das
nop
xor
subl
push
push
xor
addr16
gs
psrlw
add
push
mov
ja
pop
test
cmp
scas
jb
inc
rclb
out
xchg
cld
sub
sub
sub
pusha
ja
arpl
loop
and
pushw
xor
push
xchg
or
loopne
mov
xor
fs
mov
imul
sbb
aaa
dec
cmp
ret
jp
dec
push
push
out
iret
pop
outsl
cltd
sub
mov
out
mov
popf
aam
iret
fs
mov
mov
and
jo
pop
push
movsb
fsubl
subl
clc
dec
pop
sbbb
mov
mov
clc
mov
lret
idiv
in
push
cmpsl
push
sub
das
dec
adc
shr
jo
lea
enter
or
xor
pop
and
xchg
dec
dec
or
xchg
movsl
sbb
cmp
test
push
or
cmp
cli
jmp
out
aam
out
cs
sahf
mov
or
pop
cmp
xlat
add
aas
jns
addr16
add
add
dec
lcall
add
jnp
jg
shll
xchg
and
xchg
jge
repz
sub
jnp
mov
negl
mov
inc
push
jp
push
repz
add
pop
inc
adc
movsb
sbb
lcall
sbb
lret
sahf
xchg
adc
das
pop
enter
xchg
popf
jg
cs
into
mov
mov
cmp
and
sub
ret
cmp
mov
xchg
testb
jae
mov
ss
mov
jae
sub
sbb
sahf
out
aaa
jno
cmp
push
stos
inc
jnp
mov
sub
adc
and
fadds
lret
and
add
add
dec
rcrb
push
pusha
pop
mov
lret
pop
cmp
jl
dec
jle
jb
jnp
mov
mov
xchg
mov
mov
xchg
fidivs
leave
add
ja
aaa
fdivs
test
cmp
pushl
pusha
mov
mov
push
sbb
push
pop
pop
pop
pop
loop
dec
pushf
std
pop
imulb
pop
push
mov
mov
sub
sahf
call
loop
mov
push
bound
and
dec
dec
lret
adc
mov
ret
rcl
stos
enter
shll
lret
lds
cmp
js
sub
mov
fs
sbbl
push
cld
inc
inc
gs
xor
sub
lret
iret
or
push
pop
outsl
sub
lret
fsts
add
sbb
js
cmpsl
or
insb
sub
mov
mov
in
in
bound
push
inc
insb
sub
stc
push
xchg
cmp
push
xchg
cld
orb
lcall
dec
cmpb
das
stc
mov
shl
stos
data16
mov
mov
lret
jbe
adc
mov
dec
loope
cmp
inc
call
enter
insl
in
mov
xor
mov
cmp
inc
shl
or
sbb
cmp
cmp
into
lods
mov
cmp
icebp
fidivl
pop
xchg
clc
dec
pop
sub
xchg
mov
cmpsb
test
mov
pslld
sbbb
mov
adc
icebp
imul
fstp
fcmovne
iret
jnp
ljmp
sub
inc
jns
enter
cmp
imul
push
or
xor
mov
pop
std
int
cmpsb
cmpsb
rorb
and
in
fwait
mov
into
jp
xor
or
mov
stc
cmpsb
xorb
fwait
lock
cmp
mov
call
or
bound
lahf
xchg
inc
push
lds
stc
int
and
push
imul
cld
aas
jmp
fbstp
movsb
insl
das
in
xor
inc
add
push
iret
inc
xor
in
mov
sti
aad
mov
icebp
jnp
cmpsl
stc
pop
pop
mov
xor
pop
add
push
dec
aas
and
and
int
xchg
mov
int3
cmp
mov
mov
jecxz
mov
call
aad
mov
mov
mov
xchg
fxch
push
lahf
mov
aad
call
inc
lock
and
inc
xor
xchg
xor
cmp
arpl
in
addr16
pop
std
shufps
dec
pop
pop
decl
lahf
scas
add
add
or
mov
orl
clc
push
mov
adcb
inc
out
adc
aas
push
and
fildll
and
pop
sub
xchg
inc
lahf
pusha
fadd
lret
xchg
mov
test
jg
push
jnp
cmp
enter
mov
sub
dec
lods
hlt
icebp
xor
jno
in
sub
push
in
sbb
jae
or
dec
ds
mov
xchg
and
inc
aas
and
cld
xor
ja
insl
test
cltd
add
out
jp
xchg
pushf
arpl
fwait
pop
ss
pop
adc
nop
fisubrl
push
rcrb
ja
jecxz
mov
lret
mov
lcall
es
leave
xchg
popf
mov
or
dec
int
pop
out
inc
mov
add
add
cmp
fiaddl
movsb
mov
ljmp
dec
lock
cs
dec
leave
std
dec
test
out
mov
cli
aad
hlt
outsb
lds
sbb
inc
sbb
xchg
outsl
stc
daa
dec
push
pusha
and
xchg
test
mov
sub
repz
fsubrs
cmp
mov
loop
push
loop
add
test
sbb
jb
imul
adc
mov
test
in
fwait
dec
and
push
dec
xchg
int3
ret
xor
fimuls
inc
push
push
mov
pushf
insb
out
mov
inc
mov
mov
repnz
mov
jno
shl
das
push
and
add
rol
push
rcrl
adcb
int3
fs
add
test
cs
jnp
inc
jmp
dec
fistpll
ret
ja
into
pop
ja
fmull
loop
icebp
bound
mov
je
jnp
sbb
jp
jne
fists
lock
xchg
lods
insl
movsb
jl
xor
cmp
add
xchg
cmc
cmp
icebp
bound
sbb
es
xor
fdivr
sbbl
pop
and
dec
jnp
out
ljmp
pop
sbb
subb
aaa
jge
dec
popa
std
or
xor
ja
aad
xor
test
adc
dec
mov
sbb
pcmpeqb
dec
scas
push
sub
or
push
push
add
outsl
pusha
add
lods
scas
pop
sub
fisttps
add
aad
push
lcall
mov
inc
add
bnd
dec
test
pop
outsl
push
cmp
imul
jl
ljmp
mov
cwtl
push
mov
je
gs
jne
mov
push
adc
dec
mov
sbb
dec
push
xor
cmp
adc
popf
add
lret
mov
sbbb
loopne
jbe
call
sbb
mov
push
out
sub
bound
add
push
mov
mov
lods
mov
push
inc
adcl
jno
std
adc
add
bound
jb
popf
add
pop
les
lock
lahf
fwait
stos
lahf
inc
jb
pop
jecxz
pop
scas
or
mov
ljmp
push
xor
lea
in
popf
dec
adc
xchg
or
mov
pop
inc
mov
jo
out
das
and
or
xchg
sbb
insb
push
mov
test
sub
push
adc
fisttpll
cli
mov
orb
jge
out
rorl
add
mov
xor
stos
cwtl
insl
mov
dec
fwait
sbb
fs
inc
fstps
inc
stos
in
inc
int
pop
dec
sbb
mov
loop
cmpsl
arpl
sub
xor
mov
es
dec
and
out
jg
or
cmc
jle
test
adc
int
push
out
mov
imul
adc
fisttpll
movsb
hlt
cmp
sub
fistps
sar
push
pop
xorb
cmc
sbb
push
mov
adc
sbbl
and
adc
adc
lret
lea
inc
inc
xor
mov
mov
xorb
dec
js
lret
sbb
fsubrl
sub
aaa
icebp
jb
fcomi
sarb
and
pop
divl
dec
pushf
add
add
jmp
outsl
pop
fdivrl
adc
lock
fnstcw
dec
mov
xor
fsubr
jne
jmp
insl
mov
xor
loopne
mov
xchg
pop
pushf
sti
mov
fiadds
loope
scas
mov
movw
sahf
test
mov
imul
call
pop
push
adc
dec
sbb
pop
cmp
adc
fmul
lret
mov
jmp
pop
arpl
mov
into
call
idivl
daa
cmp
std
int
aaa
mov
leave
push
or
xlat
test
dec
sub
js
mov
lea
icebp
mov
call
jnp
nop
rcll
inc
mov
call
mov
loope
hlt
test
fnstsw
jo
out
std
jnp
mov
cmp
inc
push
into
roll
ljmp
xor
enter
sbb
js
call
sbb
sahf
lods
ret
push
nop
call
test
cwtl
adc
and
incl
mov
movsb
je
cmp
jg
cmpsb
adc
pop
lcall
fsub
jmp
mov
jle
dec
int3
mov
repnz
jg
cmp
mov
movsl
neg
inc
cwtl
inc
lea
jne
lret
jo
mov
push
jp
fcoms
mov
mov
in
lods
out
fdivl
mov
std
jae
mov
adc
mov
pop
jmp
jg
jnp
push
test
mov
loope
adc
inc
cmc
jge
mov
mov
lods
dec
jmp
shl
gs
fsubl
je
adc
fadds
por
cmpsb
inc
fiadds
mov
repz
test
out
dec
push
push
pop
dec
fdivrl
xor
cmp
push
lods
jecxz
fisttps
inc
sbb
insl
shrl
popf
je
xchg
push
aaa
sbb
in
cmpsl
jecxz
xchg
lea
mov
hlt
out
jmp
mov
rorb
jnp
pop
leave
iret
cwtl
push
mov
in
test
add
addr16
jp
loopne
jle
add
sbb
mov
dec
add
stc
lsl
push
cld
outsl
adc
xor
sbb
stos
mov
xchg
push
repz
push
sub
out
add
stos
mov
inc
ljmp
out
jo
lret
sub
imul
mov
xchg
mov
add
arpl
xlat
or
test
mov
mov
and
movsb
int3
or
shrl
sbb
dec
fbld
inc
decb
jno
add
out
mov
test
sbb
and
movsb
pop
inc
or
mov
adc
ret
mov
faddl
inc
int
jnp
mov
pusha
xchg
jge
in
or
test
add
inc
jl
xchg
mov
out
ss
ficoms
adc
dec
xchg
jb
out
xor
insl
in
xor
push
scas
inc
inc
mov
faddp
mov
pop
andl
mov
jp
pop
leave
int
xchg
insl
lds
push
xchg
paddw
xchg
and
and
pop
lods
xlat
rclb
adc
sbb
jp
sbb
in
aam
push
pop
insl
pushf
add
jb
or
adc
jns
fdivl
in
inc
js
clc
adc
movsl
fiadds
pop
sbb
enter
jg
scas
inc
pop
popf
mov
pop
cli
cmp
rolb
es
aam
arpl
loopne
pop
hlt
cltd
lret
jg
jmp
and
cmc
xchg
xlat
inc
insb
push
shrb
std
pop
fldenv
das
dec
inc
shl
dec
lret
xchg
je
add
mov
adc
mov
gs
mov
push
cltd
pusha
xor
sub
add
cmp
jb
sub
stc
sbb
dec
imul
jmp
mov
sub
add
lods
aam
inc
mov
insl
movsl
iret
loop
jl
dec
jae
adc
inc
in
adcb
loop
jo
xor
addr16
mov
out
test
ljmp
adc
push
sub
fdivrs
jae
outsl
push
push
repnz
cltd
inc
sbb
adc
lods
stos
push
lea
pop
ds
mov
lahf
repz
sub
jge
mov
daa
stc
in
cmpsb
jg
cmpb
shll
sbb
xchg
std
cwtl
or
ret
pusha
test
movl
adc
mov
orl
dec
inc
mov
testb
jo
loopne
loope
sbb
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
jmp
pop
stos
sbb
gs
push
lds
jle
sbb
bound
pop
bound
push
stos
cmpsb
lret
dec
mov
xor
pop
aad
and
sub
push
insb
bound
loope
scas
imul
mov
cmpsb
ljmp
xlat
out
insl
stc
popf
sti
mov
xchg
cmp
jp
mov
aad
add
mov
out
jae
push
dec
mov
mov
xchg
stos
rcl
test
mov
xchg
or
gs
dec
rcl
push
and
xchg
jne
nop
adc
enter
popf
sub
jge
sub
mov
cld
scas
mov
cli
adc
jg
or
xorb
mov
stos
pop
int
test
bound
pop
orl
lcall
mov
inc
leave
into
xchg
ja
xchg
out
popl
sbb
cmovbe
sub
mov
sbb
sub
push
ret
inc
lock
push
lret
fnstsw
aas
lret
xchg
fbstp
mov
push
cmp
and
xor
cmp
pop
jecxz
push
push
sbb
int
push
lret
lods
mov
inc
dec
or
cmpsb
fbstp
mov
scas
lea
cli
xlat
fldcw
sbbb
decb
mov
cmp
sbb
dec
push
divl
daa
outsl
imul
xor
sbb
adc
xor
pop
sub
clc
ret
sbb
cmp
and
lahf
or
mov
mov
sub
test
or
jp
fcompl
and
fidivrs
or
jbe
cmp
adc
leave
ljmp
pop
push
mov
xchg
xor
add
stc
outsl
les
out
fidivl
jno
jnp
ficompl
loop
aad
xchg
xlat
dec
enter
pop
or
xchg
adc
movl
cmpsb
lock
test
stos
repz
lret
aaa
call
xchg
push
push
lcall
lock
mov
cmc
addb
add
addb
xchg
jp
loop
cmp
popa
or
int3
xor
jmp
mov
jmp
jg
pusha
fs
xor
mov
push
dec
stos
rcr
iret
mov
lret
ret
mov
mov
in
div
test
add
aad
adc
sbb
cmp
or
jno
jge
scas
test
add
mov
fstl
jl
sbb
jbe
mov
pop
incb
xchg
jp
pop
gs
cmp
cmp
aas
jns
ja
or
out
imul
sub
mov
lret
xchg
aaa
ret
mov
lahf
cmp
das
add
addr16
mov
inc
push
mov
inc
sarl
xor
dec
cli
lret
push
sub
dec
orb
sub
and
mov
cs
push
jnp
repnz
xor
call
pop
pop
popf
gs
mov
xor
leave
out
pop
xor
cmp
out
adc
popf
movsl
pop
cwtl
test
jmp
mov
mov
xor
sub
aad
cwtl
enter
ja
mov
adc
adc
in
test
mov
pop
add
loop
mov
pop
mov
bt
aam
dec
sbb
dec
cld
push
xchg
push
or
inc
dec
bound
xlat
inc
ss
inc
paddd
inc
mov
lret
sbb
vmaxss
rcll
or
movsb
push
inc
push
mov
ret
xlat
fcom
mov
jno
mov
mov
push
ret
out
sub
ret
dec
test
jecxz
or
fbstp
rcrb
mov
cld
cmc
je
mov
xor
xor
lea
pop
shll
jno
and
jne
insl
jp
scas
inc
ret
xor
push
mov
mov
outsl
mov
and
mov
insl
mov
adc
sub
jmp
fadds
push
jge
enter
pop
mov
or
inc
push
sbbl
mov
sub
add
fidivs
lret
movsl
int
mov
xchg
cmp
mov
mov
cwtl
or
cmpsl
movnti
lret
fcmovnb
rorb
clc
jno
ss
xchg
vunpckhps
push
push
fs
jne
das
fs
addl
ret
test
stos
xchg
mov
and
jo
ss
push
ficoms
scas
sbbb
int3
enter
xor
xchg
inc
mov
sub
add
jl
fwait
jecxz
mov
and
cmpsb
jb
mov
popa
push
adc
xor
dec
jg
inc
xor
sti
push
dec
stos
jns
test
loope
xchg
dec
iret
mov
pushf
jle
les
pop
daa
push
adc
pop
fiaddl
icebp
es
movsl
or
jns
lcall
js
cld
popa
push
aas
out
or
jl
fstl
jnp
notl
mov
inc
aas
xchg
dec
test
orl
insb
xchg
clc
shrl
xchg
push
iret
jns
lds
rolb
sahf
xor
mov
lret
add
lods
or
mov
jne
jecxz
add
adc
adc
loopne
fdivrl
dec
subb
iret
add
sbb
imul
and
dec
lods
xchg
movsl
or
clc
push
stc
add
imul
call
ret
jns
and
clc
popf
in
xchg
fnstsw
and
ficoms
rclb
imul
jb
int
mov
add
adc
in
ret
pop
cmp
inc
inc
mov
and
xchg
insb
pop
and
cwtl
test
sub
xchg
cmpsb
xchg
sti
lods
or
into
xchg
push
adc
lcall
ljmp
clc
cld
rolb
cmc
pop
jecxz
aam
dec
push
lods
outsb
push
outsb
std
daa
mov
addr16
in
xor
aad
clc
cmp
mov
xorb
ret
or
aas
xor
and
adc
out
jno
jmp
and
push
sti
and
and
and
pop
adc
mov
insl
mov
add
popa
jge
test
dec
mov
jmp
add
leave
fidivs
cltd
lock
test
gs
cmp
mov
aam
repz
xchg
sub
ficoml
mov
add
mov
lock
in
jno
mov
scas
shrb
arpl
loop
lods
xor
shl
lock
mov
fldlg2
roll
xchg
xor
xchg
and
std
divps
and
popf
repnz
pop
push
lock
add
dec
xor
jl
pop
mov
pop
subl
lahf
add
pop
enter
stc
cmp
cli
or
xlat
testl
adc
shl
push
sbb
arpl
mov
arpl
enter
popf
ret
xchg
xlat
inc
insb
pop
dec
xlat
outsl
push
pop
xor
mov
pop
in
or
out
lret
mov
dec
push
ljmp
testb
aam
pop
adc
mov
mov
xor
mov
mov
fs
jmp
pop
jbe
dec
mov
and
jmp
mov
repz
cmp
xor
shr
pop
inc
jno
loopne
stc
jae
inc
in
ljmp
jecxz
out
mov
fcomps
xchg
pop
dec
fwait
scas
adc
push
bound
sub
add
shl
mov
add
sarl
xor
mov
mov
data16
lahf
or
test
out
test
sub
xor
rorl
sahf
outsb
and
outsb
pop
sbb
adc
outsb
mov
dec
arpl
loopne
outsl
fdivr
cmp
je
mov
mov
xor
cmpb
inc
int3
cmp
dec
imul
jecxz
mov
xchg
push
imul
aas
pop
imul
sbb
push
cmp
daa
cmp
jns
call
sub
add
cwtl
sub
xchg
xor
jo
cmpsl
sub
jg
adc
adc
add
clc
movsb
dec
outsl
psubusw
call
jbe
sub
pop
aas
ficompl
jge
or
pop
or
loop
mov
mov
mov
inc
dec
rolb
arpl
loop
mov
sub
popa
or
movb
xbegin
and
mov
std
xor
ret
and
mov
jmp
fldl
subl
out
das
push
hlt
div
xor
inc
loopne
arpl
xchg
push
xchg
rol
insb
cwtl
cmp
insl
aam
insl
xchg
adc
adc
iret
aam
pop
and
cmc
nop
cmovge
cli
dec
mov
rcl
jae
inc
imulb
dec
mov
sbb
sub
mov
out
outsl
xor
jo
fidivs
sbb
jb
jg
clc
pushf
idiv
filds
jbe
pop
pop
jb
xor
pop
movsl
sarl
pop
push
lahf
push
jb
aam
dec
jg
stos
test
or
and
pop
scas
addb
loop
and
or
lods
and
cwtl
mov
fcmovnu
mov
fistpll
shlb
fisubrs
shll
mov
or
pop
lea
fstl
dec
jge
mov
movsl
add
pop
cmp
mov
xchg
sbb
push
out
call
add
sub
hlt
pusha
ss
pop
push
dec
loop
xchg
adc
shrl
lahf
jmp
xchg
push
out
ljmp
inc
cli
push
pop
mov
lods
inc
mov
xchg
pop
cli
shrb
loopne
fadds
xlat
notl
fnstcw
adc
movsl
add
popf
dec
sbb
xchg
xchg
xor
mov
pop
in
mov
cmp
repnz
mov
pop
pop
jbe
addr16
mov
adc
xchg
mov
pop
stos
sbb
cmp
cmc
jnp
adc
cli
in
fdivr
sub
andb
hlt
sub
push
lahf
outsl
outsl
shl
das
dec
or
enter
gs
sbb
mov
pusha
divss
adc
lods
imul
int
inc
mov
cmp
push
add
sahf
outsb
fdivr
adc
es
xchg
pop
xor
xchg
enter
add
add
loop
lea
mov
cltd
repz
xlat
xchg
push
bound
sbb
xor
jne
mov
mov
inc
inc
or
in
lret
stc
cmp
xor
push
cmp
nop
pop
jge
lea
inc
cwtl
mov
and
pop
lea
imul
dec
call
and
jae
std
mov
jmp
dec
push
pop
lahf
daa
mov
xor
ret
repnz
mov
pushf
in
cmp
mov
arpl
aad
rclb
xor
cwtl
aas
das
frstor
dec
jp
mov
mov
fstl
mov
sub
jle
push
sbb
addl
jge
pop
fidivl
inc
flds
mov
xchg
sti
jle
pop
ret
mov
in
adc
call
call
sbb
sbb
dec
scas
in
in
rcll
std
adc
cmpsl
test
mov
sub
xchg
sbb
dec
xchg
xchg
sahf
push
cld
out
xor
jns
push
adc
in
push
mov
andb
repz
xor
mov
pusha
cmp
inc
push
dec
sbb
cmpsw
call
lahf
stos
push
xor
int
cmp
jbe
and
scas
mov
daa
inc
ljmp
jl
movsl
jl
test
ja
cmp
loopne
mov
mov
popf
mov
add
jne
jo
fidivrs
arpl
aam
sbb
cmp
dec
pop
sti
fs
enter
out
dec
scas
popa
cs
pushf
repz
leave
out
adc
ljmp
fdiv
in
sbb
jne
cmp
pop
hlt
lcall
inc
leave
push
data16
rcl
fisubrl
push
jge
cld
stos
or
imull
push
push
repnz
mov
add
cmp
lods
aaa
adc
shl
mov
sbb
js
lds
rorb
pop
cmp
inc
fstpt
mov
imul
sub
mov
and
fisubl
dec
pop
ja
daa
dec
mov
test
bound
jge
fnstcw
dec
sbb
jl
add
sub
jg
movsb
je
ret
pop
add
jae
mov
mov
outsb
mov
shl
stos
orb
or
sar
pop
sub
stos
xchg
jle
or
dec
mov
push
insl
out
inc
inc
gs
repz
mov
adc
sbb
cmp
stos
cmpsl
mov
mov
punpcklbw
add
sub
das
pop
inc
fstps
in
mov
jae
xor
cmp
mov
std
mov
mov
lahf
lret
jge
test
lods
cmpsb
pop
sbb
repnz
inc
outsl
dec
pop
call
js
push
xorb
pop
test
je
in
mov
jmp
pop
adcb
out
cwtl
shll
int
jae
jns
mov
sti
jno
pmaxsw
imul
fsubl
cwtl
jg
inc
fisttpl
in
xchg
icebp
mov
add
lgdtl
pop
incb
dec
pop
shlb
sbb
push
movsb
fdivl
adc
add
inc
xor
jns
jnp
shrl
mov
jle
addr16
std
btc
jmp
jg,pt
out
push
fsubrs
add
stos
xorl
ss
stos
scas
mov
sbb
mov
inc
pop
pop
aaa
sub
inc
jns
fcoml
jns
jne
cmp
movsb
fmull
dec
in
iret
mov
lret
cmp
xor
nop
pop
inc
out
inc
sub
cmc
enter
addb
dec
push
repnz
aad
bound
movsb
stos
leave
cmp
mov
sti
sub
arpl
adc
inc
jmp
aaa
lea
and
or
or
fistpl
push
insl
mov
test
mov
jmp
movsl
lcall
sbb
call
das
in
xor
lock
test
in
cld
js
jo
cmpsb
jg
cmp
sbb
sahf
stos
jge
test
push
dec
sarb
or
mov
add
jp
call
out
lods
inc
leave
xchg
shlb
loop
in
inc
aad
cld
adc
and
xor
lret
mov
push
fiadds
bound
mov
adc
pop
popf
cwtl
sti
pusha
mov
push
aam
cmp
addr16
jb
or
cwtl
mov
shrl
sbb
dec
popf
addr16
sahf
es
ret
push
sub
push
stos
imul
xor
rcll
in
shr
aas
mov
loopne
lods
icebp
arpl
lahf
xchg
mov
out
loopne
xchg
adc
xor
xor
jl
mov
hlt
lcall
mov
arpl
add
adcl
jmp
jae
cwtl
mov
and
cmc
sub
ret
mov
or
sub
sbb
shrl
les
fstpl
jne
icebp
mov
mov
mov
int
ror
or
clc
loopne
push
jle
in
out
filds
loopne
sar
icebp
icebp
int3
arpl
scas
stc
fdiv
out
test
insb
out
addr16
or
push
hlt
ret
sahf
and
movsl
pop
bound
push
jbe
data16
dec
adc
lahf
jle
lret
out
sub
jbe
sub
sub
sub
mov
addl
mov
mov
cmp
push
xor
pop
es
loope
or
dec
jnp
ret
inc
in
movnti
mov
ret
dec
rorl
xchg
cmp
mov
inc
rcr
jne
adc
and
cvttps2pi
fwait
stos
icebp
in
insl
cmpsl
sub
fisttps
jo
and
lcall
int3
gs
ret
fdivl
xchg
aaa
pop
push
mov
fstpl
mov
inc
lret
ds
cmp
jle
popa
out
rolb
stc
rclb
pop
pop
aas
ret
lds
adc
adc
cmc
xchg
push
xor
out
iret
mov
shrb
mull
cmp
mov
dec
xor
imul
xorl
dec
fstpl
popa
sbb
repnz
scas
decl
push
mov
lods
pop
dec
inc
pusha
lret
add
pop
int
pop
adc
adc
imulb
dec
ret
jle
xchg
andb
repnz
and
sti
inc
push
push
push
xchg
sub
add
adc
lea
test
in
push
test
fisubs
adc
push
push
std
setle
mov
pop
in
roll
imul
lea
outsb
mov
push
in
jecxz
dec
fwait
rcrb
call
mov
jge
mov
fnstcw
ja
sub
shll
or
outsb
data16
add
sbb
dec
fcoml
pop
sub
pop
adc
scas
iret
rorl
imul
adc
mov
xchg
xlat
or
fsubr
insl
sub
sbb
push
cli
adc
mov
std
leave
cwtl
popf
test
xor
jecxz
adc
mov
xchg
test
sbbl
xor
je
inc
xchg
jp
enter
jmp
loopne
xor
fimull
arpl
in
inc
lcall
cwtl
jg
sub
popf
fldcw
andb
mov
add
outsb
xor
jnp
ret
pop
xor
hlt
mov
push
jp
push
xchg
jg
dec
pop
lret
or
insl
xchg
cltd
or
lahf
jmp
cmpb
mov
adc
sbb
cwtl
in
and
sub
and
or
inc
and
cmc
cmpsl
arpl
mov
pop
lods
cwtl
sub
mov
fistpl
sub
insb
call
add
jne
inc
stos
fistpll
test
sbb
std
repz
mov
dec
adc
loop
xchg
ret
mov
stc
and
push
jae
pop
shll
inc
xor
mov
fldlg2
pop
push
and
dec
mov
popa
xor
jo
xor
inc
out
adc
dec
mov
and
scas
lahf
rcr
mov
push
xor
xchg
scas
inc
frstor
add
xchg
or
pop
add
cmpsb
sub
cwtl
mov
das
mov
rclb
leave
or
lods
jae
repz
mov
stc
dec
ds
xor
mov
imul
mov
pusha
mov
xor
push
jae
jno
jae
jl
les
dec
or
in
add
cltd
nop
loope
jecxz
outsl
jno
jne
repz
in
outsl
jb
jmp
push
push
ficoms
nop
and
mov
inc
into
outsl
call
cmp
add
xor
ret
mov
ficompl
jb
sarl
mov
clc
hlt
scas
or
clc
mov
out
xor
in
xchg
add
js
mov
cltd
icebp
call
xor
xor
adc
push
push
dec
push
push
fstpt
in
mov
push
lock
cmp
leave
xor
sub
pop
add
or
std
adcl
repnz
lcall
pop
arpl
mov
jno
jp
mov
movsb
jb
sub
jmp
adc
add
push
pop
xor
jl
fldenv
jbe
sbb
div
xchg
xor
insb
mov
xor
jbe
subb
insl
loopne
cmp
pop
xor
or
sahf
roll
pop
rsqrtps
adc
cmp
jp
jge
jo
mov
sub
lahf
cli
add
sub
mov
cmpsl
shrl
out
add
orl
and
adc
mov
cld
daa
dec
cli
push
test
push
push
adc
mov
dec
in
jno
push
out
sub
clc
mov
push
nop
xchg
insl
inc
and
fnop
loopne
sarb
cltd
cltd
addr16
push
aad
mov
lea
mov
mov
xor
ljmp
push
outsl
sub
movsl
aaa
aam
xor
jnp
xchg
push
aaa
pop
rcr
sub
into
mov
ret
lahf
lret
mov
mov
xchg
xchg
subl
xor
leave
mov
icebp
cmpsl
add
cli
push
shll
jnp
xlat
mov
test
cld
lods
push
addl
ja
mov
adc
xchg
inc
push
nop
xchg
dec
dec
pop
mov
jno
pop
cmp
dec
cmpl
iret
jle
push
pop
repz
pop
xchg
cmp
adc
lcall
mov
scas
jecxz
inc
xor
xchg
sbb
lods
push
push
adc
dec
outsl
movl
sbb
or
xchg
sub
stos
xchg
ss
xor
lret
dec
cmp
lahf
or
pop
fwait
sub
pop
xchg
push
pop
outsb
ss
pop
pop
fldenv
and
mov
add
stos
aad
cmpl
inc
xor
cmpsw
sbb
repnz
mov
das
repnz
sub
xchg
stc
insb
inc
pop
pop
jge
sti
mov
aad
dec
gs
jnp
jecxz
inc
pop
pushf
xor
fmuls
inc
incb
xchg
xchg
and
into
leave
mov
cmp
shrb
cli
les
ja
xchg
cwtl
jbe
loope
out
stos
jbe
fninit
rclb
inc
push
ret
cmp
add
jbe
in
shll
into
dec
call
fucomip
inc
dec
mov
jne
iret
test
mov
pop
jne
xor
jnp
mov
mov
inc
ljmp
das
xor
sub
into
dec
inc
rcrl
lods
dec
push
jecxz
iret
sub
or
sub
fwait
push
pusha
out
adc
shlb
shlb
fcompl
xchg
adc
movsl
sbb
and
cmpsb
iret
cmp
repnz
repnz
push
inc
xchg
in
adc
xor
mov
fdivs
adc
aaa
jl
sbb
or
push
inc
xchg
std
fisubrs
orl
pop
test
push
jns
pop
aas
dec
dec
adc
int3
inc
pop
dec
ja
jb
dec
movsb
filds
lcall
push
pop
icebp
or
mov
ljmp
aad
sbb
loope
pop
adc
nop
je
int
cli
and
xchg
or
shlb
test
dec
leave
inc
sbb
mov
cmpsl
and
test
stc
xchg
addr16
adc
loope
roll
es
push
icebp
push
daa
jns
ret
mov
mov
mov
aad
shl
pop
es
pop
shr
shrb
test
dec
loopne
sub
es
mov
sbb
xchg
pop
stc
sbb
cmp
mov
adc
and
xchg
mov
xor
test
bnd
lahf
js
xchg
icebp
loope
pop
dec
cmp
repz
ds
out
lods
lret
xor
pop
xchg
inc
sub
mov
mov
sysret
cmc
mov
das
jae
xchg
sub
xor
leave
imul
arpl
jbe
jp
and
popf
and
adc
xor
cmp
dec
mov
mov
bound
mov
sbb
xlat
icebp
stos
inc
jne
xorb
dec
add
add
aas
call
push
push
mov
div
repnz
lea
jnp
test
movsl
jp
cld
cwtl
mov
push
push
xorl
pop
subl
ja
and
fldt
faddp
sbb
pop
sub
xchg
jno
scas
dec
sbb
sub
sbb
push
mov
ret
jns
adc
pop
add
pop
mulb
iret
and
mov
lock
aad
push
xor
xor
inc
jbe
dec
imul
mov
cmc
icebp
cmp
sbb
and
enter
clc
and
lods
lret
ss
pop
fldl
mov
outsb
lds
lods
cmpsl
test
and
or
jmp
adc
fcoms
jo
jmp
cmp
and
adc
inc
add
sarl
push
xchg
cmp
ds
mov
inc
mov
dec
or
movsb
xor
fmuls
mov
lea
sbb
sbb
jle
mov
shrb
enter
test
les
adc
cld
xchg
loop
adc
ror
cmpl
int
adc
std
adc
push
fisubrs
push
push
jmp
std
and
lahf
xchg
int
jns
inc
jne
loopne
mov
pop
sbb
xor
call
shlb
bound
dec
addr16
popa
cmp
pop
sub
mov
and
sti
pop
adc
aad
mov
and
xchg
xor
xor
and
jb
sub
jmp
iret
outsl
scas
stos
cmp
cli
cld
mov
das
xchg
cmp
cs
fimuls
fcmove
fwait
jb
mov
imul
inc
and
fs
jae
repz
jbe
pusha
lret
and
loope
push
stos
xchg
loopne
lods
mov
mov
je
test
push
jmp
cmc
add
lret
dec
adc
dec
cmp
and
adc
ljmp
nop
mov
lret
or
dec
test
sarl
imul
sub
insb
jg
aas
in
sbb
and
fisubrl
loope
dec
stc
push
sub
cli
ss
sbb
fs
lods
lret
adc
push
in
jbe
cwtl
lds
xchg
mov
push
data16
das
pop
cmp
testb
cmpsb
xchg
inc
popa
mov
xor
mov
mov
sbb
mov
inc
mov
mov
inc
notl
outsb
or
movsb
add
mov
xor
int3
add
shlb
mov
cmpsb
sarl
dec
rcl
roll
test
movsb
mov
jnp
repz
xchg
cmp
cmpsb
nop
pop
pop
mov
icebp
repnz
pop
cltd
push
mov
mov
gs
or
or
sbb
popl
jp
in
inc
or
and
add
push
in
pop
push
add
test
push
das
mov
call
rcrl
mov
pop
frstor
mov
or
sub
je
aam
mov
scas
sbb
fcoms
sbb
xor
mov
mov
sbb
jp
test
dec
iret
in
xchg
jl
mov
sahf
push
test
sar
adc
mov
je
aad
ret
orb
mov
mov
sub
mov
inc
lcall
add
mov
nop
out
adc
cmp
rep
rol
pop
add
loopne
mov
mov
test
stc
adc
hlt
mov
push
call
loopne
lods
add
in
fnstsw
dec
and
divl
je
pushf
mov
enter
scas
movsb
xor
pop
imul
lods
shll
in
hlt
test
lods
xchg
or
loop
pop
xchg
pusha
stos
xchg
xor
mov
icebp
cwtl
outsb
adc
icebp
and
in
popf
sbb
sub
fwait
push
dec
in
cmovs
inc
sub
sub
adc
pop
pop
out
lods
mov
mov
cmp
mov
sub
loop
test
loope
lods
pop
sub
test
out
or
movsl
mov
stc
jg
inc
dec
xor
popf
pop
mov
orl
adc
xor
lds
ljmp
ljmp
mov
sbb
data16
js
test
and
inc
movsl
aad
jmp
cmp
push
or
inc
addr16
push
call
inc
gs
stc
in
out
mov
insb
xor
loope
adc
cmp
nop
cs
sub
out
ljmp
jnp
xlat
xchg
iret
sbb
imul
push
mov
jmp
inc
lock
add
cmp
xor
bound
pop
shrb
push
sbb
mov
push
iret
shll
or
je
mov
mov
loope
repz
ss
inc
cmp
int3
mov
mov
icebp
pop
call
jl
mov
pusha
mov
xchg
and
xcrypt-ofb
cmpsl
outsb
cmp
pop
enter
and
push
adc
jmp
xchg
out
cmc
push
adc
push
nop
int
cmp
xchg
cmp
nop
mov
icebp
and
mov
in
sti
mov
movsl
mov
inc
repz
jecxz
arpl
fcompp
pop
stos
jecxz
sbb
lcall
add
pop
lret
adcb
sbb
jne
sarb
scas
mov
lods
adcl
mov
push
test
mov
or
xchg
test
or
mov
cld
pop
jmp
rcrl
aas
dec
pop
xchg
inc
mov
dec
add
xchg
lret
xchg
adc
popf
enter
cmc
jge
enter
outsw
aas
test
inc
mov
pop
scas
jnp
dec
cltd
dec
jecxz
ljmp
xor
fadds
test
jae
roll
mov
fwait
aad
fdivs
xor
push
mov
lods
mov
mov
das
cmp
inc
cmpsb
sub
dec
outsb
in
mov
lcall
and
movsb
mov
ds
fldt
and
pop
leave
ss
out
jp
stos
xor
mov
shrb
dec
cltd
arpl
bndstx
iret
iret
and
pop
lret
jnp
sub
fildll
decl
pop
rolb
pop
int
push
repz
mov
stos
mov
daa
mov
pop
inc
movsb
mov
jmp
or
int3
fs
mov
div
fsubrp
outsl
outsl
xchg
fwait
test
push
mov
mov
mov
add
imul
push
stos
sbb
push
mov
or
call
cmpsb
jle
cmpsb
and
jle
mov
sbb
or
pop
and
and
dec
mov
inc
and
jne
mov
mov
bound
jecxz
jne
daa
int3
lea
cmpsl
xchg
scas
push
ret
sub
push
or
mov
sbb
inc
test
inc
pop
pusha
pusha
gs
xchg
stos
clc
jle
ljmp
mov
dec
cmp
mov
aas
std
cmpl
ja
jnp
push
sub
add
orb
lahf
les
add
aas
sub
cmp
push
xchg
test
jmp
mov
scas
cmp
sub
std
fs
lock
movsl
jns
in
fs
sbb
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
inc
push
add
imul
arpl
bound
bound
cmp
and
adc
nop
cmp
mov
and
jne
shll
sub
dec
call
inc
test
jmp
stos
add
js
frstor
sbb
mov
ljmp
and
fcoml
mov
mov
push
fldl
shl
add
out
push
jg
jmp
pop
add
cmp
decl
movsb
mov
jne
jge
and
mov
xchg
dec
jbe
rcrb
push
lcall
pop
sub
jecxz
rclb
jmp
into
add
xlat
stc
cmp
imul
push
mov
xchg
lahf
faddp
dec
call
jno
imul
and
push
pop
and
ss
xchg
loope
in
mov
hlt
mov
stos
push
mov
pusha
shll
or
pop
adc
mov
ja
bound
push
sbb
fcomip
xor
sbb
mov
or
fcmovb
jb
jbe
sbb
push
cmp
dec
std
mov
pop
pusha
mov
les
dec
jbe
xor
cltd
dec
lock
or
loop
jg
cmpsl
xchg
sub
sahf
frstor
or
xchg
jecxz
pop
cmp
aas
enter
jmp
jnp
nop
fidivl
lods
lea
sbb
loope
arpl
adc
loope
pop
xchg
pushf
ret
sbb
pop
xor
sbb
clc
lods
cs
out
mov
or
and
movsl
or
jge
or
flds
mov
xor
add
cli
aad
xor
cmpsb
add
cwtl
test
gs
out
jmp
fdivrl
adc
imul
pop
mov
rcl
jecxz
mov
movsl
add
popf
fldcw
cld
adc
movb
xchg
ficoml
arpl
mov
mov
push
fnstenv
xlat
push
xchg
daa
ret
or
push
and
gs
push
pop
inc
mov
push
lcall
jle
and
sbb
cmp
lock
rep
push
add
stc
lds
cmp
insl
fbstp
mov
leave
cld
fmuls
lods
sub
hlt
or
lods
fisubrl
cmovp
int
out
push
cmp
adc
dec
xor
push
mov
mov
add
call
cmp
cmpsb
add
inc
aaa
lret
addb
push
add
repnz
jb
jb
clc
cmp
fwait
inc
nop
sbb
inc
int3
dec
mov
or
sub
movl
repnz
daa
or
sbb
push
loopne
fstpl
dec
fistpll
test
pop
std
dec
adcb
cmpsl
lcall
xor
aaa
or
dec
lods
cmpsl
push
jns
push
lea
xchg
aaa
cmp
and
jmp
mov
loope
lods
pushf
rcr
enter
movsl
bound
test
jns
ljmp
jmp
nop
and
sbb
fs
in
sbb
or
ret
mov
pop
das
sbb
mov
mov
in
andl
dec
imul
outsb
sarl
dec
add
pop
sbb
dec
add
loopne
test
mov
pushf
arpl
rorb
adc
pop
pop
sub
ja
xchg
mov
mov
repz
jbe
call
xchg
insl
sahf
repnz
fstl
sbb
dec
cmpsb
add
scas
xchg
ret
out
mov
sahf
inc
jno
popf
nop
xchg
je
mov
and
adc
out
rclb
aas
xor
mov
dec
in
mov
repnz
pop
outsb
or
and
test
xchg
xlat
xchg
lret
sub
lahf
das
inc
xchg
rorl
pushf
lds
or
dec
fildl
push
data16
sbb
pop
cmp
mov
mov
clc
clc
fstpl
or
sub
mov
lds
mov
mul
mov
adc
mov
outsb
notb
xor
ret
mov
and
repnz
xor
pop
sahf
mov
and
popf
mov
repnz
inc
cmpb
movsl
jb
cmp
push
or
lock
add
pop
out
sub
notb
neg
inc
pop
push
dec
xor
xchg
cmp
dec
or
push
mov
jle
push
sub
out
jno
mov
xchg
cmp
push
add
rolb
inc
jle
nop
jnp
pop
jo
js
mov
bnd
inc
mov
outsl
aam
lods
cli
stc
jg
xchg
js
in
jmp
mov
in
jge
fsubrl
cltd
in
stos
mov
gs
mov
and
cmp
fdivs
mov
aaa
les
aaa
lret
or
push
add
dec
movsl
xor
in
inc
mov
int3
outsl
push
sar
sub
mov
addl
test
popf
mov
adcb
pop
dec
dec
adc
test
fcom
add
sbb
call
adcl
sarb
repz
fs
mov
sbb
enter
adc
pop
cld
mov
jmp
and
or
and
addr16
hlt
xchg
xor
add
inc
cmp
repnz
cmp
mov
add
jo
loope
das
xchg
xor
or
cmp
add
xchg
mov
sub
scas
bound
cmc
xchg
insb
dec
ss
inc
out
and
pushf
mov
mov
out
ret
sub
and
in
outsb
das
lret
iret
add
cmpb
cmc
sub
mov
pop
jns
notl
movsb
gs
jp
pushf
imull
subl
imul
cmpsb
std
push
fnstcw
loope
cld
adc
mov
or
xor
frstor
push
sbb
dec
add
int3
and
ljmp
push
out
inc
xchg
stos
ljmp
jno
xor
iret
push
aam
ss
xchg
fnsave
sbb
bound
ljmp
imul
dec
cmp
push
out
rclb
movb
stc
add
sbb
lds
mov
popa
mov
out
test
mov
xchg
push
push
mov
fisttps
sbb
mov
xchg
js
jmp
cmp
xchg
or
cld
cmc
adc
scas
popf
xor
imul
mov
divb
add
sub
sub
or
mov
or
and
pop
mov
xor
decb
mov
je
cli
cld
pop
test
test
dec
mov
shrb
dec
mov
jae
inc
xor
outsb
pop
fs
fcmove
mov
stos
add
inc
mov
jmp
mov
icebp
lcall
add
imul
xor
and
jp
sub
push
pop
out
stos
push
ret
jge
outsl
pop
mov
xchg
mov
cmp
popa
repz
or
or
lock
ret
jno
xor
xor
clc
dec
cmpsl
jae
pop
fs
jg
out
ss
scas
orb
lcall
std
negb
jns
cmc
out
mov
lock
dec
xchg
xor
mov
enter
push
sub
mov
bound
mov
out
data16
loope
xchg
sub
incl
repnz
cmpsl
daa
xorl
sbb
dec
in
xorb
dec
in
movb
loope
je
arpl
into
jbe
test
jno
fs
add
jmp
sbb
pop
pop
adc
sub
and
pop
dec
arpl
or
adc
mov
lods
adc
cmp
popf
pop
inc
pushf
mov
xor
cltd
mov
or
sarl
mov
inc
add
arpl
notl
jge
clc
arpl
icebp
mov
loope
lahf
hlt
cmp
sbb
push
into
and
jo
fnsave
lahf
stc
mov
icebp
mov
rorl
ret
adc
in
sub
jo
and
lret
sahf
pop
push
pop
out
lods
jb
fdivrs
pushf
int3
lcall
lret
push
rorl
mov
mov
rolb
outsb
imul
sbbb
mov
test
sqrtps
ret
mov
dec
or
push
mov
cld
adc
imulb
mov
or
push
addr16
adc
imul
int
mov
adc
or
ds
mov
clc
jl
loope
mov
cmc
push
mov
or
add
jns
sarb
xor
sub
cwtl
insl
cmc
in
dec
adc
jecxz
popf
push
mov
jmp
lea
jmp
pop
and
hlt
sbb
push
test
xchg
aaa
in
das
mov
jo
and
out
inc
daa
cmpsl
pushl
into
adc
add
clc
inc
dec
pop
mov
subl
jmp
repz
mov
sub
ljmp
pop
jo
mov
cwtl
rcrl
inc
mov
mull
sub
mov
les
mov
nop
mov
push
add
jns
lea
test
pushf
pop
in
adc
test
xchg
cmpsl
repz
mov
mov
ret
and
push
and
jmp
in
cmp
adc
inc
loop
cs
pop
pop
xor
mov
push
fs
mov
pop
in
xor
jo
push
sbb
fidivrl
add
lock
fwait
push
in
sub
stos
out
sub
decl
sbb
lahf
sar
sub
sarl
scas
addr16
xchg
cmp
xor
leave
pop
in
xchg
or
jg
pop
pop
mov
xchg
aaa
mov
insb
in
push
inc
ss
jnp
ss
mov
sub
in
nop
add
stc
das
sub
and
adc
cmovl
leave
out
fldl
test
mov
jno
outsb
lods
mov
push
enter
sbb
gs
mov
adc
xchg
push
into
fsts
rorb
sbb
pusha
xchg
rorl
dec
jecxz
mov
cmp
scas
and
test
sbb
or
mov
cmp
std
cmp
mov
rclb
sbb
outsl
jbe
pop
or
insb
scas
into
pop
bound
int3
sub
add
je
ljmp
fdivrl
jge
xor
adc
ret
mov
mov
inc
adc
xchg
scas
pop
jle
sub
testl
and
stos
outsb
stos
fwait
aad
mov
xor
popa
fisubs
or
inc
jno
in
cmovo
or
ss
hlt
ljmp
sbb
push
jb
gs
sub
fistpl
push
mov
xchg
aam
es
fmull
js
jns
inc
inc
enter
pushf
les
push
or
xor
add
mov
jge
push
push
jmp
inc
sbb
xor
pop
pop
scas
lock
pop
out
loope
push
pop
push
mov
mov
jecxz
xchg
icebp
lcall
or
add
and
cmp
mov
add
bound
xor
adc
add
icebp
js
or
sub
repz
stos
outsb
add
pop
mov
push
repnz
mov
stos
vpavgw
sub
xchg
jbe
cwtl
test
jns
lea
push
jnp
jecxz
xchg
imul
push
sbbb
push
movsl
jo
adc
into
fldl
jae
inc
adc
into
pusha
mov
sbb
mov
stc
xor
sbbb
sarl
in
push
add
inc
repnz
mov
push
mov
test
loope
loop
xchg
sbb
xor
mov
push
gs
xor
fcomi
jg
pop
jecxz
sbb
cmp
es
pop
fs
jo
add
mov
scas
fdivl
xchg
mov
repnz
mov
mov
and
test
lret
pop
jns
inc
cmp
imull
sub
push
call
push
pop
mov
xor
mov
js
fildll
cs
repnz
add
arpl
movsl
cli
pop
or
sub
decl
mov
pop
jne
pop
mov
movsl
lock
lock
int3
std
aaa
dec
in
and
stos
jecxz
ret
add
jns
jecxz
xor
push
movsb
xor
ss
pusha
mov
cmp
les
notb
or
imul
mov
mov
loope
pop
test
add
sbbl
mov
mov
xchg
mov
sub
fcompl
inc
xor
js
or
or
push
pop
jl
dec
mov
leave
mov
hlt
insb
mov
mov
or
addr16
call
pop
xchg
in
and
cli
enter
push
mov
pop
imul
xor
mov
dec
cmp
imul
dec
jg
jb
out
adc
or
lds
mov
notl
mov
insb
inc
cmp
jbe
pop
lret
stos
jl
scas
lret
dec
xor
div
mull
out
or
stos
aaa
into
ds
xchg
into
jno
pushf
into
test
std
mov
dec
movsl
repz
sub
scas
jno
cltd
ss
imul
rcll
pop
xor
sbb
cmp
leave
add
and
mov
push
push
push
mov
sbb
mov
movntq
mov
cmp
jo
push
enter
bound
incl
adc
test
push
dec
push
push
ffree
inc
inc
imul
cs
push
loopne
mov
pop
add
dec
mov
and
jnp
mov
mov
mov
mov
jg
sub
mov
dec
cmp
insl
dec
sti
jge
imul
add
test
scas
cmpsl
sbb
jnp
test
stc
jb
mov
jge
xchg
and
jns
dec
mov
mulb
jge
mov
cmp
mov
pop
out
xchg
pop
shll
xor
inc
and
fmul
push
push
mov
scas
cmp
popf
ds
lea
mov
pop
jp
inc
dec
push
imul
adc
or
and
sub
sbb
out
mov
test
out
jp
adc
icebp
cmpsl
sbb
in
push
sub
or
pop
sahf
pop
loop
sbb
sub
cli
andb
fucomp
jns
push
and
xor
mov
scas
cwtl
in
test
dec
out
mov
jbe
fidivl
xorl
jo
xor
scas
cltd
movsl
xchg
ja
rolb
xor
das
call
lock
cmp
and
pop
jbe
rorl
ja
rcrb
jns
cli
xor
out
in
frstor
inc
pusha
xor
fcomps
test
jne
sbb
cmp
dec
sahf
fcmovnb
xchg
cltd
inc
bound
ret
fnsave
dec
cmp
loope
xor
lcall
xor
fs
add
ficomps
jp
jmp
lcall
mov
add
outsb
fucom
aaa
jno
in
sub
or
dec
xchg
setle
xor
js
cwtl
xchg
jle
test
and
mov
sbb
push
mov
test
inc
mov
test
outsb
sbb
mov
mov
imul
in
imul
nop
cmp
insb
jnp
and
mov
imul
faddp
and
cmc
fidivrl
pop
sbb
out
cltd
test
ret
xchg
aaa
mov
dec
aam
jmp
cmc
pop
adc
sbb
cmpsl
xchg
or
das
pop
test
sub
loope
shll
nop
sub
nop
repnz
sbb
inc
mov
cltd
mov
pushf
or
push
or
cmc
dec
filds
push
mov
push
shll
ss
rcll
jne
mov
sub
or
ss
outsb
xchg
inc
add
nop
fimull
dec
pop
lods
sti
xchg
sbb
dec
rcr
and
mov
mov
in
test
sarl
xorl
cmpsl
and
out
fisubrs
or
jmp
mov
leave
notb
sarl
test
sbb
xchg
mov
sti
adc
ret
lret
lds
cltd
decb
bound
fmul
inc
icebp
gs
jle
addr16
cmp
mov
mov
cmp
mov
xchg
xchg
and
repz
popf
sti
mov
or
or
dec
dec
addr16
fwait
cwtl
pop
xchg
dec
das
lret
or
pushf
int
mov
cmpl
add
enter
mov
addr16
pop
fsubrl
sbb
shll
mov
xlat
enter
sbb
mov
lea
push
mov
negb
sbb
mov
dec
cmp
sub
jle
sub
movl
repnz
cltd
popa
aad
push
xor
sbb
xlat
mov
sahf
xchg
jmp
mov
jecxz
sub
hlt
call
lret
adc
xchg
and
out
fcoms
js
in
xchg
in
add
push
testl
adc
cs
push
jge
push
ds
dec
pop
iret
test
and
loopne
inc
mov
daa
and
cmpsb
push
cmp
sbb
push
dec
ja
stc
stos
ret
and
sbb
loope
ds
cmpl
subb
lods
dec
jno
out
loop
daa
insl
dec
sahf
es
cmp
nopl
jae
add
fwait
mov
sub
scas
push
outsb
xor
out
or
aas
jnp
and
sub
outsl
bound
push
test
into
fcmovnb
cmc
mov
in
stos
sbb
lret
pushf
jmp
roll
jp
test
movsb
stc
lds
push
cmp
das
rcll
add
mov
hlt
sahf
ss
and
inc
inc
sti
xchg
shrl
sub
punpcklbw
xchg
in
sub
pop
jno
or
pop
add
xor
movzwl
jecxz
sbb
mov
xlat
add
aam
popf
xor
inc
mov
inc
inc
pop
sub
flds
pop
pop
push
inc
sbb
push
jecxz
pop
into
xchg
lods
xchg
popa
and
test
movsl
and
aam
call
add
jns
push
dec
test
add
cwtl
and
les
mov
cmp
cmp
push
mov
or
js
mov
lock
repnz
push
dec
mul
outsb
cltd
adc
imul
ret
push
jae
jg
and
sub
cmc
pop
push
loope
mov
push
pusha
mov
mov
fdivrl
push
jg
jge
int3
lods
inc
js
mov
pop
int
les
scas
in
cmc
mov
sbb
dec
xchg
andl
orb
xor
cli
mov
ret
xchg
test
add
ja
mov
das
mov
ret
dec
ds
push
adc
sbb
jae
mov
sbb
scas
mov
out
or
popf
xchg
outsl
fs
sub
lcall
repz
fidivs
xlat
xchg
repz
into
mov
push
test
jns
jnp
insl
inc
push
lods
shl
push
stos
inc
clc
jp
or
stos
xchg
int
out
pop
push
xor
fnstcw
insb
inc
cmpsl
repz
cmpsl
push
push
pop
nop
jae
mov
neg
xor
add
xchg
ror
in
jns
daa
inc
popf
sbb
fcmovnu
push
mov
test
lahf
subl
cmp
mov
aas
dec
lcall
pop
movlps
sub
mov
cwtl
dec
push
fwait
push
ds
cmp
addr16
mov
das
cmc
dec
mov
pop
call
divb
arpl
push
movsl
popa
shlb
jns
sahf
lea
ficomps
cmp
ret
mov
in
std
jo
mov
stc
add
inc
sbb
loop
js
mov
push
arpl
andl
pop
push
jmp
repz
in
mov
mov
pop
test
lret
mov
xchg
inc
insb
dec
mov
ret
mov
rol
bound
xor
mov
xor
lods
mov
cmp
mov
movsl
dec
or
in
scas
jbe
and
jmp
dec
lahf
sbbl
dec
jg
fisubl
mov
cwtl
pushl
cli
or
fcomps
jle
add
mov
ja
jo
ds
sti
push
inc
xchg
test
dec
inc
outsl
mov
adc
add
mov
ds
xchg
shll
popf
ss
outsl
shlb
testb
mov
pop
js
in
in
mov
xchg
cmp
push
mov
cmp
in
jns
mov
dec
arpl
mov
testl
imul
fldt
daa
push
adc
stc
nop
inc
repnz
mov
mov
test
or
add
adc
loope
les
and
sub
mov
addl
enter
je
or
dec
jo
xchg
or
inc
cltd
arpl
mov
inc
mov
jmp
cmp
shl
repnz
dec
dec
fbstp
or
aam
in
cld
mov
add
add
outsl
push
inc
jp
dec
inc
pop
jnp
cmp
mov
inc
inc
sbb
shrl
adc
aam
or
movups
loop
ja
xor
mov
cmpsb
int3
or
mov
cli
lahf
imul
mov
push
cltd
add
cltd
sahf
lahf
mov
pop
mov
and
bound
add
add
cmc
and
lcall
daa
aaa
mov
mov
ds
pop
addr16
sbbb
out
popf
mov
jns
addr16
inc
test
xchg
inc
push
and
or
ss
int
add
cmp
scas
mov
mov
pop
mov
cmp
pop
imul
lds
and
cld
jp
in
or
bts
aam
lcall
int
movsb
insl
out
ss
sub
mov
fcmovu
push
inc
dec
mov
test
mov
mov
fdivrs
fimuls
sub
test
jmp
inc
mov
in
dec
jns
lret
push
cli
xorb
mov
push
mov
xor
in
inc
xchg
inc
jno
jbe
mov
and
mov
xchg
xchg
inc
popa
insb
jp
data16
jp
enter
imul
popf
loop
fcomi
jmp
mov
repnz
pop
cmp
xlat
in
inc
bound
pushf
jp
dec
mov
xchg
cmc
cltd
xchg
cmp
xchg
push
mov
outsl
sarl
dec
adc
cmp
mov
in
sub
test
xchg
mov
pop
add
xorl
lock
mov
negb
push
leave
jnp
ret
pop
or
and
int3
inc
in
inc
mov
push
pop
fbstp
cwtl
pop
pop
push
bound
ljmp
orb
pop
xchg
mov
xchg
add
jns
andb
xchg
ss
add
dec
sub
push
xor
xchg
jns
xor
adc
pop
dec
ljmp
aam
stos
imul
mov
sbb
mov
add
in
imul
cmp
mov
movb
jb
sub
jmp
out
and
push
push
inc
clc
imul
mov
mov
xchg
shlb
out
lcall
mov
add
nop
rcl
jns
mov
adc
cmc
aam
test
cli
ljmp
clc
das
sub
nop
inc
fsubrs
pop
cmpl
aas
je
popa
aad
inc
imul
mov
enter
pop
sbb
mov
sbb
cwtl
mov
gs
scas
inc
mov
out
pop
movsb
mov
mov
mov
lds
pop
data16
imul
jo
inc
sar
push
cwtl
inc
fldenv
or
inc
inc
ljmp
sub
icebp
xor
notb
mov
movhps
aad
pop
xor
test
fldcw
mov
or
fmul
imul
rcr
cmp
mov
fs
jo
in
xchg
mov
loopne
dec
stc
movsb
lock
mov
push
inc
dec
loope
lods
out
mov
mov
sub
xor
enter
pop
push
aam
xchg
xor
jge
dec
sbb
loop
enter
into
sub
jae
inc
fimull
lcall
mov
sub
sub
sti
aad
adc
loope
push
xlat
and
lock
rorl
mov
int
and
mov
icebp
out
int3
mov
loop
push
dec
jp
insl
pop
jno
int
xor
ss
pop
or
cmp
aas
inc
pop
ret
inc
loope
pop
into
adc
gs
sahf
cmp
pop
jo
mov
sbbb
das
inc
add
pop
outsl
test
xor
lret
jne
xchg
mov
mov
cltd
stos
jno
mov
xchg
xchg
stos
pop
filds
fsubl
push
gs
xor
add
pop
and
xchg
mov
nop
outsb
repz
xchg
cmp
out
lcall
inc
test
aad
loopne
jnp
xchg
cmp
and
fwait
xor
aaa
sub
movsl
enter
mov
leave
gs
lahf
add
add
xchg
xchg
gs
repz
pop
mov
mov
xchg
std
jge
jne
mov
pop
mov
fidivrs
out
das
cltd
mov
jno
dec
ret
movsl
iret
andb
pop
push
xchg
repz
dec
xchg
xchg
add
dec
gs
lock
notb
testl
repz
pushf
mov
je
xor
inc
add
mov
fistpll
jecxz
push
inc
jb
clc
cmp
and
ret
pop
vmwrite
push
pop
pop
xchg
pop
test
cltd
xchg
mov
xor
or
cmp
xchg
push
ror
cmp
int3
and
xchg
dec
xchg
mov
sub
pop
push
int3
test
out
sub
and
mov
repnz
and
clc
jecxz
push
mov
cmp
daa
test
into
call
fstpt
adc
or
lret
mov
pandn
add
lahf
data16
xchg
stos
test
rcl
jmp
pop
and
cli
xchg
int
call
mov
js
xchg
test
add
jmp
cmp
inc
ud1
scas
sub
push
gs
mov
gs
sbb
movsb
add
push
xchg
enter
xchg
xchg
adc
loopne
push
sahf
cmp
mov
arpl
dec
fcoms
xor
sbb
roll
sbb
or
in
inc
adc
push
inc
and
and
add
inc
add
xchg
sub
outsl
test
in
add
iret
sar
inc
push
in
dec
mov
call
sub
jo
hlt
testb
insb
xor
pop
dec
dec
mov
loope
out
rcrb
fimuls
cmpsb
rclb
mov
mov
jecxz
inc
push
fwait
inc
mov
dec
adc
call
imul
pop
push
adc
les
movsb
inc
lods
sub
mov
iret
outsl
sub
flds
xor
lahf
pop
push
hlt
lea
push
aam
popa
sbb
mov
mov
insl
inc
dec
bnd
push
int3
xchg
hlt
inc
inc
into
mov
dec
das
cmc
cmc
adc
sbb
cmp
sub
mov
movsl
clc
pop
lea
je
ret
jb
imul
es
cmpsl
loope
lods
cltd
aad
adc
arpl
movsl
jae
repz
xchg
sbbb
and
xor
cli
js
mov
mov
jmp
push
int3
aad
sbb
mov
xor
mov
movsl
ss
push
gs
add
inc
push
mov
popf
imul
adc
or
ret
add
fcoml
stc
or
add
cltd
test
dec
pop
insb
lret
sbb
arpl
test
icebp
push
iret
pop
adc
fstpt
test
sbb
fmul
sti
xlat
stos
mov
xorb
cwtl
outsl
in
pop
mov
dec
ja
and
mov
sti
lea
jle
push
pop
push
jl
push
mov
fdivl
jg
ss
ret
pop
add
mov
cwtl
push
aas
lea
mov
push
sub
push
jp
clc
test
enter
inc
jae
inc
divl
gs
out
sub
mov
push
je
ds
sar
push
aam
lods
jp
pop
sub
into
or
es
outsb
in
jecxz
mov
inc
or
mov
or
dec
and
pushf
inc
mov
popf
inc
push
cmp
jnp
mov
lea
push
test
lahf
push
out
mov
cld
mov
inc
mov
xchg
jo
mov
jmp
adc
test
ja
and
sar
popf
pop
and
cmc
orb
push
sbb
push
je
aas
and
out
lea
stos
xchg
loope
push
fdivr
aas
inc
jb
cmp
pop
pop
and
test
add
es
scas
sbb
jnp
push
push
bound
cli
cmpl
mov
mov
ss
cmp
roll
jnp
or
adc
add
lret
cmc
sarb
and
je
imul
cmp
push
mov
dec
jns
das
imul
sub
test
cmp
mov
js
cmp
out
xor
jne
rolw
ss
pop
lods
fwait
mov
adcl
rcr
mov
cmpsb
aaa
in
xor
bound
inc
push
jbe
bound
jns
push
or
inc
jp
pop
mov
or
jp
loop
lret
das
fisttpll
nop
push
cmc
outsl
ljmp
jecxz
mov
inc
leave
jmp
fnstcw
nop
insb
insb
sahf
add
idivl
inc
fistpll
cwtl
fisttps
iret
ret
push
lahf
jae
stc
xor
xor
lods
mov
ret
mov
imul
inc
pop
or
mov
lods
pop
sub
orb
jae
in
dec
cltd
fsub
js
xchg
js
mov
or
ficomps
test
add
cmpsb
int3
hlt
pop
cs
pop
push
test
and
jb
loope
and
dec
in
inc
cmp
xchg
or
shl
addr16
and
aas
jmp
xor
and
push
cmp
je
shll
in
movsb
pop
in
jp
das
cli
sub
xchg
out
cmp
inc
daa
in
pop
lcall
mov
addr16
xor
jns
mov
jecxz
or
leave
fstpt
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
orl
inc
ret
push
mov
sub
sbb
mov
mov
add
mov
dec
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
mov
movl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
dec
mov
xorl
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
orl
push
sbbl
push
push
andl
lea
push
notl
push
xorl
jmp
movsb
xchg
sub
out
arpl
mov
bound
pop
bound
mov
lea
and
cmc
sub
aam
jp
adc
lret
inc
aad
jle
sub
sbb
and
jmp
ss
jnp
addb
cmp
mov
mov
loop
adc
dec
and
je
jae
imull
jge
mov
and
repnz
ds
mov
mov
mov
or
stos
shl
int
dec
inc
xor
mov
mov
and
add
sub
ja
mov
or
lea
xchg
fiaddl
in
clc
pop
xchg
adc
ss
ja,pn
out
push
scas
push
cmp
mov
sti
pop
int3
sahf
pop
jbe
jmp
ss
mov
faddp
loopne
mul
sub
fcmovnb
dec
lds
dec
sub
mov
xor
into
dec
dec
sub
fimull
inc
fcmovu
sbb
dec
mov
mov
sbb
dec
rcrb
sbb
test
shll
mov
hlt
cmc
fcomi
out
fstl
dec
and
je
mov
clc
mov
cld
testb
out
mov
pop
jb
pop
jo
mov
dec
aam
push
enter
imul
aam
fistl
sarl
jp
push
push
in
sbb
movsb
fmul
jne
xor
add
fidivs
out
mov
popw
cld
dec
rorb
nop
shll
cmc
pop
jns
pop
orb
jbe
inc
and
or
mov
inc
sahf
fsubrl
dec
push
sbb
int
jne
add
mov
leave
ljmp
enter
and
mov
cmp
mov
outsl
sbb
test
fsts
jo
sahf
cmp
cmp
push
or
push
scas
jae
je
mov
or
xor
mov
icebp
aam
cwtl
add
popa
sub
aam
mull
dec
std
sbb
repz
mov
mov
mov
cmpsb
jmp
dec
sbb
das
arpl
test
mov
cmp
fsubrs
fsub
gs
ds
lret
sbb
test
sbb
sbb
lahf
test
dec
enter
daa
push
and
xchg
fs
pop
xchg
jb
cld
cmc
ds
pop
push
cmpl
sub
imul
repz
inc
adcl
xchg
test
cld
aam
fwait
pop
ret
mov
dec
jno
and
cmpsb
lds
sub
sarl
dec
cmpsl
mov
and
or
cmpsl
mov
xor
inc
shrl
adc
or
shll
or
and
mov
imul
out
hlt
in
inc
iret
cli
and
fs
mov
movsl
adc
inc
mov
mov
leave
and
fisttps
xor
addr16
add
iret
test
adc
fs
mov
push
and
imul
dec
push
xor
mov
dec
and
enter
inc
movsl
mov
les
cmp
pop
sbb
inc
push
fistps
outsb
or
aaa
xchg
push
mov
pop
aaa
inc
mov
mov
nop
lds
or
cmp
add
int3
jo
inc
test
add
mov
jp
sub
push
nop
lods
test
jmp
jae
pop
mov
cmpsb
leave
scas
sahf
dec
mov
sbbl
clc
fs
push
jg
dec
aaa
add
cmpsl
cmp
mov
dec
daa
into
and
fnstsw
xor
add
ss
and
in
sbb
pop
sahf
sbb
adc
cmp
int3
push
in
push
push
dec
lcall
rorb
cmpsb
xchg
mov
inc
xchg
loope,pt
mov
mov
mov
jns
push
xchg
and
dec
jecxz
stc
push
pop
cmp
ja
outsl
fldt
lea
push
and
adc
gs
push
mov
stc
push
push
cmp
and
push
mov
fadds
push
cmpsb
cmp
scas
movsl
or
sahf
and
out
cltd
push
scas
push
testl
ret
and
ret
sub
or
or
jb
int
or
int3
nop
dec
mov
xchg
dec
daa
lret
xchg
call
inc
push
repnz
cmp
scas
adc
or
mov
out
pop
mov
stc
lods
cmp
lret
test
repz
sub
inc
dec
pop
inc
jmp
inc
and
mov
add
mov
daa
jo
mov
outsl
subl
mov
gs
mov
ret
cld
mov
aaa
int3
fsin
lods
xchg
sahf
fldenv
daa
xlat
mov
andl
dec
sbb
pop
repz
pop
stos
cmpsl
or
scas
jl
popf
leave
pop
nop
es
adc
iret
test
mov
fildll
push
mov
cmpsb
sub
mov
push
xor
push
out
mov
mov
movsl
ljmp
fcomp
pop
pop
xchg
jb
repnz
data16
mov
add
push
cs
add
adc
xor
test
popa
stos
js
subl
cmpsl
or
xchg
ss
push
mov
hlt
movsb
xchg
iret
adc
mov
xor
cmc
fisubrs
push
adc
and
jno
stos
and
loopne
pop
push
sbb
aaa
xchg
adc
stos
dec
xor
mov
je
push
fnsave
icebp
sub
xchg
repnz
mov
sub
xor
xor
push
mov
fs
mov
mov
out
cmp
add
std
lds
push
fcoml
inc
push
in
into
sbb
and
sbb
repnz
nop
fcmovnbe
cmp
int
shll
insb
xchg
scas
stc
sti
int3
scas
jle
insb
and
aad
push
adc
call
sbb
mov
or
ljmp
xor
adc
fsubs
ret
add
inc
inc
outsl
pop
xor
fidivl
fidivs
cmp
cmp
cmp
popa
mov
cmp
sti
jne
das
movsl
pop
push
in
arpl
sbb
mov
rcrb
dec
addr16
jecxz
leave
rorb
sti
pop
xchg
js
adcb
clc
xor
icebp
mov
or
mov
ds
pop
test
fstpl
lret
pop
and
add
frstor
jb
and
push
cmc
outsl
xchg
ds
push
mov
pop
xchg
mov
mov
fsubl
push
out
mull
sar
lea
mov
adc
mov
in
pop
mov
and
xchg
aad
repnz
lcall
xor
mov
mov
inc
add
cltd
or
in
sub
pop
pop
enter
loopne
jl
fbld
loop
clc
xchg
sub
test
test
push
sbb
shl
movsb
mov
pop
xchg
scas
cmp
repz
inc
pop
lahf
popa
rolb
ret
push
adc
jp
sbb
rclb
inc
clc
lds
adc
add
call
pop
mov
sub
sbb
add
mov
nop
xchg
out
inc
iret
push
aas
jnp
fwait
popa
fildll
inc
adc
mov
popa
xchg
mov
sahf
lret
test
popf
cmp
iret
jp
sti
mov
mov
loopne
cmp
stos
outsl
jmp
mov
inc
scas
adc
xchg
movsl
jb
xor
ficompl
fadds
lea
pushf
pop
sub
enter
js
pusha
lcall
sub
mov
ret
fs
aaa
xchg
movsl
adc
loopne
mov
jl
inc
andl
push
call
pop
scas
sub
int
pop
sbb
cld
es
cmp
adc
fcoml
fcmovnb
xor
dec
inc
adc
sub
jno
stos
sbb
test
xor
mov
nop
mov
lock
sub
shll
call
sub
or
or
fnstcw
sahf
movsl
repz
lret
push
nop
rcrl
sbb
ljmp
lods
test
aam
rorb
mov
mov
cs
cmc
xor
cmp
stc
popf
xchg
cs
in
push
idivl
push
mov
push
push
movl
sti
inc
pop
inc
xchg
fstl
pop
or
dec
xchg
test
data16
stos
insb
mov
cmp
iret
test
addr16
aaa
push
fs
bound
inc
sbb
dec
and
cmp
jns
out
mov
dec
roll
and
stos
aam
fwait
popa
bsr
icebp
xor
push
addb
lret
inc
shr
add
sub
testl
xchg
test
dec
les
jge
pop
inc
pop
sahf
movsl
push
popa
lock
pop
lods
or
notb
fisubrs
ja
inc
mov
xchg
jbe
loop
mov
arpl
repz
push
mov
lods
std
fwait
int
leave
clc
xchg
and
lds
dec
dec
stos
rcl
lret
stos
mov
xor
xchg
sbb
pop
stos
push
jmp
ficomps
mov
popf
adc
loope
xchg
ficoml
jo
shlb
cmpsl
insb
addr16
test
aas
and
rcrb
jle
out
sbb
call
test
xor
clc
or
popl
fcmovnbe
clc
xor
inc
icebp
or
fwait
add
sarb
cs
or
or
ret
out
xchg
pop
repnz
lods
mov
filds
cltd
add
out
or
sub
dec
dec
outsb
movsb
imul
decl
test
movsb
stc
xorl
or
pushf
bound
test
mov
and
sbb
push
sub
or
dec
aas
add
jb
push
ss
fstpl
push
cld
mov
clc
jle
adc
popa
fs
mov
lock
cmc
pop
pop
js
pop
cmpsb
cmp
cmp
add
mov
mov
iret
push
ss
cmpsb
andb
cmp
mov
jae
je
dec
mov
jg
add
out
sbb
xlat
cmpsb
lock
sub
int3
adc
enter
xor
xor
rcll
sbbb
xchg
add
fdivp
or
lcall
movsb
ret
jbe
adc
ja
cmp
daa
pop
addr16
fidivs
xchg
jmp
xor
enter
adc
cmp
cmc
dec
test
lcall
mov
mov
bound
sbbb
mov
or
inc
mov
call
inc
rolb
shlb
loope
mov
dec
test
fwait
mov
daa
push
push
lret
mov
sub
int
outsl
mov
gs
rol
gs
in
pusha
dec
xchg
arpl
cli
call
scas
mov
ret
mov
in
loop
xorl
shrl
das
shlb
insl
cmpsl
jg
mov
xor
lcall
or
sbb
cli
or
xchg
adc
stc
mov
xchg
jne
jle
adc
rcr
insl
mov
inc
mov
pop
repnz
into
clc
repnz
xchg
or
mov
pop
push
shlb
push
cwtl
mov
jmp
sub
out
add
sahf
push
pop
sti
scas
adcb
movsl
outsb
dec
fs
and
fsubrl
add
pushf
cmpsl
xorl
pushf
mov
cmc
adc
fcmove
mov
and
or
ret
pop
mov
and
add
lods
jmp
cmp
sub
mov
and
sbb
outsb
jno
movsb
aam
ror
lock
lcall
sub
xlat
mov
inc
mov
jbe
iret
aaa
popa
iret
stos
cmp
cmpl
and
pop
call
sbb
xchg
inc
testl
test
sub
lret
outsb
dec
rcrb
and
sbb
lahf
leave
lds
xchg
pop
stos
mov
pushf
xchg
fcoms
push
mov
xor
add
aaa
push
adc
mov
es
out
test
inc
fs
test
sbb
sarb
decb
cmp
adc
mov
xchg
xor
pushl
cltd
sbb
outsl
je
les
push
and
stos
jg
cs
repz
lret
adc
outsl
into
jecxz
or
and
sahf
mov
data16
adc
and
xlat
pop
cltd
cs
fs
push
sti
adc
inc
dec
dec
test
bound
inc
fwait
push
mov
sti
push
repnz
stos
xchg
js
or
jns
xor
out
cmpsl
jo
and
insb
daa
hlt
js
in
adc
inc
fcompp
int
and
gs
mov
mov
sbb
jp
xchg
jge
cld
mov
imul
push
mov
xchg
xor
xchg
mov
dec
and
cmp
fstl
loopne
sub
repnz
sub
cwtl
aad
movsl
and
stc
scas
mov
arpl
mov
js
push
add
aad
dec
sub
cmpsl
in
mov
jg
in
adc
or
pop
mov
push
jne
mov
daa
movsb
lea
fdivrs
pusha
push
xchg
pop
imul
fcoms
sub
xorb
sbb
sbb
iret
push
test
stos
mov
aam
out
cwtl
enter
cwtl
dec
mov
and
add
sbb
outsl
mov
mov
cltd
loope
outsl
jle
out
inc
mov
pop
rcrb
inc
push
mov
add
repnz
push
add
fwait
push
jecxz
aaa
cli
cld
js
adc
sahf
xchg
lds
mov
mov
pop
add
sub
xor
xchg
lds
popa
lds
in
fsubp
jmp
adc
lods
outsb
xor
cs
xorps
cmpsb
adc
mov
sub
insl
mov
pop
subl
dec
adc
mov
xchg
sub
xchg
xchg
clc
enter
jns
daa
jae
bnd
mov
in
scas
sbb
fnstsw
dec
add
jecxz,pt
lret
dec
cltd
jno
add
lods
cmc
stc
idivl
ja
test
mov
ljmp
scas
pop
loope
in
push
pop
mov
sub
ficompl
or
mov
mov
add
push
or
fistpl
pushf
xor
shll
sti
and
mov
sbb
pop
jo
iret
add
xlat
pop
pop
or
mov
movsb
adc
mov
int3
ja
out
aaa
pop
clc
xchg
test
loop
dec
test
cmpsb
shrl
sbb
add
lcall
fsubrl
sub
out
inc
mov
pop
push
xchg
pop
pop
push
lods
and
push
inc
mov
sub
out
sarl
xor
stos
lds
pop
xchg
aad
push
mov
inc
leave
loope
mov
sub
mov
imul
mov
lcall
or
dec
daa
ja
fisubs
mov
cli
push
pop
mov
jle
fnstsw
fisubs
int3
pop
clc
mov
mov
std
int3
cs
outsl
cmp
loope
cmp
or
cmp
mov
fldcw
clc
jl
xlat
adc
test
aaa
nop
mov
lds
dec
enter
cs
outsl
xchg
movsb
gs
sub
hlt
loope
adc
mov
jo
addr16
push
popa
dec
lock
mov
orb
sub
shlb
test
xlat
and
loopne
rcll
xchg
push
stos
mov
xor
jne
inc
test
movsl
lret
or
jmp
inc
xor
push
les
sbb
push
dec
sbb
sahf
sti
inc
and
sub
lock
or
test
mov
mov
call
mov
insl
pushf
imul
pop
inc
fcomi
xor
dec
adc
sbb
dec
shll
out
pop
or
sti
jp
fisubl
loopne
pop
or
xchg
loopne
stc
shr
sub
fimull
bound
fldt
mov
jnp
sti
repz
dec
cld
dec
pop
in
sub
sub
test
sbb
jo
adc
or
sti
jo
enter
or
jge
mov
fs
in
repnz
xor
sti
jge
enter
mov
test
imul
push
dec
leave
enter
xor
pop
pop
dec
ljmp
mov
sub
dec
test
dec
xchg
inc
in
push
aas
jl
lahf
push
lds
jl
out
push
cmpl
mov
rclb
sbb
xchg
scas
insb
es
or
dec
adc
divb
mov
cmpsl
xchg
xchg
mov
sub
push
push
aam
out
arpl
das
in
xchg
add
push
rclb
xor
mov
dec
cmpsl
addb
cmc
mov
adcb
sarl
or
hlt
inc
cmp
mov
xchg
adc
cmp
sub
and
pop
and
cli
jg
jo
sub
pop
mov
aam
cmpsb
fldt
outsl
ljmp
test
out
out
lods
test
dec
movsl
cmc
dec
inc
movsb
push
ret
int
cmp
data16
in
movb
sub
add
add
push
shll
scas
jg
cwtl
adc
lock
test
inc
xchg
add
mov
add
andl
dec
out
inc
test
inc
in
repz
mov
aas
ja
cltd
xor
test
jp
push
bnd
cmp
pusha
jle
lret
mov
ret
stos
icebp
mov
fdivs
mov
sub
pop
jle
push
loope
pushf
adc
popf
pop
sub
cs
ja
xchg
cltd
out
fcomps
test
push
push
jb
fs
mov
jp
test
pop
arpl
aaa
lahf
adc
sbb
imul
mov
inc
pusha
jnp
jb
sbb
movsb
xchg
mov
leave
aaa
into
jo
push
add
jecxz
int
arpl
or
dec
les
sbb
pusha
push
mov
adc
inc
fiaddl
jmp
pop
lret
lods
lret
in
and
sub
adc
arpl
iret
mov
mov
divb
jno
inc
or
ficoml
stos
jns
xchg
inc
pop
jecxz
popa
jl
les
aam
add
sbb
loopne
loop
gs
mov
push
insl
and
arpl
andb
xchg
mov
rsm
icebp
cld
test
fimuls
dec
adc
xchg
jmp
xchg
and
jecxz
test
fcmovnb
pop
cmc
xchg
inc
out
pop
scas
out
insb
aas
push
andl
les
pop
test
cwtl
lods
pop
out
add
lea
lret
xor
sbb
adc
sbb
leave
scas
xchg
jl
pop
inc
jecxz
cmc
or
xchg
imul
push
mov
mov
fwait
and
lods
cmc
dec
ljmp
inc
bnd
addb
outsb
pop
or
xor
imul
xlat
dec
xchg
loopne
mov
sbb
ret
push
jge
test
sbbb
adc
scas
mov
xchg
jmp
loope
in
push
shr
fsub
inc
lcall
test
or
push
jmp
jp
pusha
aaa
mov
sub
cmp
outsl
pop
lds
rcrl
test
adc
inc
mov
xor
push
pop
aad
fsubrs
mov
jmp
ja
loope
stos
inc
bound
inc
sbb
lds
dec
mov
ret
mov
test
in
cld
ficomps
jecxz
jae
mov
adc
pop
test
cmc
push
sub
push
jmp
push
filds
aas
fcmovne
mov
aam
test
push
in
or
mov
jns
gs
inc
ss
cli
inc
popf
fcomp
xchg
stc
jp
cmp
xchg
fisttpll
push
fisubl
xchg
addl
mov
jp
cmpsb
cvtdq2ps
adc
ljmp
fwait
stos
stc
push
pop
or
mov
sub
loopne
ss
jle
push
jne
into
mov
sbb
sti
out
inc
mov
mov
popa
movsl
shll
out
push
int3
mov
pop
bound
xor
pop
add
notl
mov
sub
hlt
adc
jge
cmp
daa
push
aad
dec
mov
call
popa
ret
test
cmp
mov
loope
pushf
xor
inc
scas
pop
dec
xor
mov
pop
xchg
inc
icebp
rclb
mov
imul
xchg
sbbl
adc
les
adc
cltd
aaa
and
in
add
in
bound
xor
cwtl
mov
mov
fdivs
add
mov
sub
xor
mov
pop
mov
lods
aad
xor
jmp
push
les
jae
mov
jae
add
stos
repnz
pop
scas
iret
and
lret
xchg
popf
sub
test
xor
or
jbe
sarb
dec
ja
sub
or
lret
and
pop
cmp
int3
jo
andb
push
repnz
or
mov
ret
test
js
fsubrp
stos
add
xor
inc
int
sub
popl
mov
cmp
fcmovbe
pushf
push
iret
jb
shlb
fidivl
xor
or
sub
or
and
or
sbb
or
mov
fistl
test
and
movsb
jbe
add
mov
xchg
mov
jns
pop
test
sbbb
inc
cli
cmp
mov
mov
dec
out
xor
cli
mov
iret
sub
movsl
mov
cmpsl
adc
dec
scas
shrb
mov
jmp
imul
add
imul
test
ret
fsubl
xchg
sahf
sub
scas
mov
rcll
test
je
dec
cwtl
mov
pop
cltd
mov
pop
popa
stos
add
push
mov
mov
call
push
xor
sub
mov
imul
pop
mov
pop
stos
jmp
add
jge
loope
jo
es
pushf
test
fiaddl
fisubrs
sti
add
call
add
pop
xor
out
in
sbb
cld
inc
outsb
cmp
int
test
insl
mov
add
loope
int
xor
orb
sti
sti
ljmp
jae
pop
sub
fwait
adc
stos
pop
out
pusha
xchg
rorl
ret
push
stos
call
sub
aaa
dec
cmpb
pop
dec
or
stc
inc
outsb
sti
sbb
notb
lahf
icebp
mov
dec
arpl
pop
sub
mov
xor
mov
pop
jge
pop
sbb
in
push
push
jbe
sub
fisttps
cmp
push
and
imul
clc
jecxz
mulps
cmc
imul
inc
mov
js
fdivl
leave
and
mov
fwait
adc
mov
insl
sbb
sbb
jne
std
push
lods
fildll
ret
adc
arpl
rorl
repz
xor
insb
push
aam
clc
mov
add
in
cmp
mov
mov
test
int
sub
mulb
sbb
add
xlat
and
jbe
stos
push
pop
adc
dec
bound
pop
mov
lcall
aaa
push
shlb
mov
mov
enter
shrl
push
idivl
dec
cwtl
cmp
cli
test
jbe
shll
jne
aad
adc
dec
adc
jle
and
adc
sbb
imul
jecxz
pop
decl
add
loopne
mov
sub
outsb
out
mov
cmp
in
jl
ja
test
imul
mov
std
lret
in
inc
iret
sbb
aas
xor
enter
ss
xor
arpl
cmpsl
inc
je
lahf
and
mov
out
jno
cmc
jae
fiaddl
push
pop
sub
add
fs
add
mov
movsb
dec
bound
loop
add
cmp
lahf
xor
popf
add
frstor
mov
mov
cli
add
orb
push
mov
and
ret
test
dec
adc
dec
mov
mov
add
stos
lods
jo
ret
add
aad
in
mov
jl
pop
push
fdivrp
pop
push
add
lret
adc
mov
out
bts
pop
mov
jg
or
mov
rcrl
ret
rorb
clc
sti
fdiv
lods
scas
jecxz
lods
cmp
xchg
lods
push
ja
in
cs
icebp
and
jp
cs
imul
cmp
cmp
outsb
clc
sbb
arpl
imul
in
dec
popf
in
in
xchg
push
sbb
inc
inc
adc
and
jmp
shll
adc
cs
xchg
clc
mov
loope
cmp
fwait
popa
inc
push
xchg
test
xor
cmpsb
or
inc
fstpl
and
test
cwtl
dec
inc
sarl
jbe
sub
test
pushf
cmp
jp
and
or
mul
int3
add
or
cmp
push
fiadds
out
inc
popf
jne
aad
jne
fcmovu
cwtl
ss
mov
jl
sub
cmc
jmp
fistpll
lock
push
insl
and
xchg
insb
mov
jmp
dec
jnp
mov
outsl
cmp
sbb
setno
jo
fwait
sbb
out
fldl
sahf
rcrl
leave
test
lds
push
mov
pop
push
cs
adc
fadds
xchg
cmpsb
mov
or
and
sbb
push
sub
sbbb
sbb
addl
xorl
cmp
jl
mov
scas
add
pop
or
outsb
cmp
sub
scas
mov
gs
mov
aas
std
daa
bound
inc
into
push
dec
inc
pop
das
jge
push
ds
or
ret
outsl
popa
or
aaa
cli
mov
cmp
nop
xlat
inc
loope
jge
mov
popa
out
clc
mov
in
mov
dec
mov
sbb
mov
jne
sub
lahf
dec
fcmovne
mov
add
fistpll
sbb
mov
ss
xchg
sbb
jns
jbe
ja
cmpl
pop
mov
cmp
or
cli
insl
inc
fstpl
bound
sbb
push
outsl
pop
mov
fsts
aam
xchg
daa
out
push
outsb
iret
data16
push
shll
push
test
fisttps
leave
sbb
into
popf
fcmovnb
mov
sub
mov
mov
mov
fisttpl
jo
roll
jns
dec
outsl
call
xor
add
mov
lret
mov
pop
lds
pop
jecxz
fstps
cwtl
cld
add
jecxz
adc
in
fildl
daa
test
lods
push
mov
std
in
mov
xchg
push
into
in
gs
rcr
mov
stc
cmpsb
subl
scas
fimull
aas
shrb
lahf
dec
xor
lods
pop
adc
push
stc
inc
or
sub
lods
aaa
or
xor
jnp
or
orl
call
sbbl
lret
xor
dec
mov
repz
or
aad
sahf
inc
pop
push
push
out
xlat
scas
or
and
xor
mov
popa
xor
gs
fsubr
cmp
and
inc
lcall
cld
mov
cmp
sbb
cli
cld
sahf
mov
cmp
pop
stos
push
adc
cmp
aaa
arpl
fs
fwait
shll
jp
rorb
push
jle
pop
std
fidivs
in
push
pop
sub
push
mov
pop
lcall
cmp
int
adcl
mov
jne
or
ds
mov
addb
jo
jle
in
cwtl
cmp
adc
xor
lret
jnp
or
pop
movsl
cmp
push
inc
jno
je
aad
mov
std
sub
les
aaa
cmp
push
call
cltd
inc
iret
and
dec
xchg
sbb
rcrb
push
inc
jle
sub
pop
out
in
movsl
jae
cmp
ror
jo
jbe
adc
push
clc
adc
inc
fsts
cmpsb
xor
leave
pop
jb
inc
arpl
cmp
and
add
imul
imul
xor
out
outsb
jge
mov
add
hlt
es
pop
cmp
mov
stc
roll
aaa
jbe
sarl
cs
popf
cli
inc
add
add
sbb
add
out
mov
aad
cmpsb
mov
test
cltd
inc
outsb
lret
js
addl
mov
lret
push
jae
add
push
cltd
mov
and
loop
in
outsb
mov
sbb
or
adc
enter
adc
or
inc
mov
cmc
sbb
scas
pop
sbb
pusha
outsb
jo
out
xor
cmc
int
jmp
cli
cmp
sbbl
adc
adc
sbb
xor
les
jns
dec
lods
iret
jne
push
sbb
lret
pop
sti
push
lds
or
stos
cmp
pop
inc
pop
ret
add
enter
or
push
imul
les
and
fsubrl
adc
sub
loop
mov
insb
pop
pop
and
xchg
xchg
ss
xlat
pop
mov
xlat
pop
loopne
aad
sbb
push
sbb
mov
pop
mov
pop
mov
cmp
mov
or
jb
mov
jb
popa
incb
mov
push
gs
ds
dec
adc
push
cmpb
loope
adc
pushf
nop
adc
adc
jecxz
pop
hlt
ficomps
mov
and
test
mov
insl
dec
and
pop
xchg
movsb
add
stc
fcomi
jne
call
stc
imul
and
mov
push
pop
mov
dec
sub
cli
jnp
js
and
xchg
sub
loopne
push
dec
fwait
sub
and
adcb
adc
adcl
cmp
sahf
mov
sub
add
jbe
and
cmp
ret
fisubrs
or
scas
sbb
or
add
pop
xor
sub
pop
inc
and
xor
mov
xor
shl
mov
mov
sbb
shll
cld
xchg
roll
mov
mov
cmp
fdivs
xchg
daa
shlb
in
call
push
orl
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
xor
movl
or
movl
mov
or
mov
xor
or
mov
or
xor
not
mov
orl
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
xor
xor
mov
sbb
mov
test
je
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
adc
mov
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
xchg
or
mov
movzbl
sbb
sub
mov
sbbl
xor
and
add
mov
movl
mov
add
xor
addl
add
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
adc
mov
xor
add
add
mov
or
mov
inc
xor
mov
mov
adc
add
mov
subl
sub
lea
xorl
xor
xor
movl
cmp
movl
je
sub
mov
andl
xor
addl
add
movl
cmp
movl
jne
pushl
call
mov
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
push
call
jmp
or
mov
add
movl
cmp
movl
je
subl
pushl
andl
pushl
decl
call
orl
mov
mov
sbbl
mov
xor
addl
add
movl
cmp
je
mov
mov
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
sub
mov
mov
inc
mov
add
mov
xor
mov
or
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
fidivl
jb
xor
ss
add
psubsb
bound
pop
bound
testb
mov
sbbb
push
and
loopne
aas
rolb
and
xor
jp
jae
inc
nop
clc
int
cmp
add
and
sbb
mov
orb
repnz
popf
faddl
mov
lret
push
out
mov
or
outsb
or
xchg
scas
call
cltd
arpl
push
jmp
insb
xchg
and
hlt
loopne
mov
jle
xchg
mov
sbb
stos
jg
aam
xchg
inc
or
subl
xchg
xor
rcl
xor
cld
test
cmpsl
cmp
mov
repnz
std
xlat
scas
inc
in
dec
dec
rcll
push
sbbl
mov
movl
aad
sub
pop
dec
jnp
ret
inc
push
and
jg
test
bound
clc
jno
icebp
lods
mov
jp
loope
scas
push
inc
adc
inc
jmp
push
add
call
lock
fyl2x
stc
mov
cltd
sub
pop
mov
std
and
inc
push
lcall
test
aas
iret
dec
mov
bound
ds
rolb
dec
mov
mov
jno
aad
and
dec
into
inc
push
mov
test
push
jecxz
pop
pop
jp
mov
xor
mov
add
jge
ds
pusha
ja
int
lds
test
mov
push
or
insl
dec
enter
js
mov
ret
ja
xor
jle
xchg
mov
pop
fiadds
inc
sbb
mov
sar
fs
cmc
adc
in
adc
mov
dec
inc
jg
pop
into
mov
cwtl
data16
fmull
or
dec
lods
fdivr
dec
mov
decb
or
add
mov
xor
mov
dec
adcl
xlat
fisubl
jae
icebp
loope
pushl
sarb
adcl
xchg
test
fwait
addb
sbb
xor
xchg
mov
aaa
mov
scas
lea
lret
aam
out
jb
les
mov
push
iret
dec
jno
jno
clc
cmp
orb
insl
add
push
cwtl
popa
mov
test
shll
fstpl
and
mov
outsl
lcall
cmp
bound
leave
cmp
jo
int
loopne
cmp
xchg
sahf
test
stc
bound
pop
out
lret
pop
cmpsb
add
xor
call
ja
xchg
adc
mov
int3
lahf
mov
jbe
aaa
xchg
insb
shrl
inc
mov
mov
jecxz
xchg
cmpsb
in
out
stc
ds
jmp
js
inc
mov
sahf
jns
fs
jae
int
pusha
pop
sub
or
incl
and
jo
repz
inc
jg
add
test
pop
les
sbb
and
in
jmp
pop
jnp
fidivrl
je
sub
sub
insl
test
fwait
jmp
addr16
hlt
cmpsl
jp
rcr
dec
fcmovne
mov
jo
pop
xchg
pushf
lea
pusha
jg
push
push
fnstsw
xchg
push
jb
adc
adc
in
out
aas
lcall
iret
ss
iret
and
daa
mov
fs
push
mov
cmp
and
cmp
repz
fs
fbld
xchg
rclb
jl
dec
or
dec
dec
aam
xchg
sarb
js
and
int3
inc
push
pushf
outsl
es
rorl
ds
in
negb
divb
jmp
movsb
ss
aaa
out
sbbb
add
sbb
popa
arpl
inc
dec
pop
lahf
or
adcb
dec
and
popa
daa
and
aaa
sbb
mov
stos
mov
dec
movsl
mov
sbb
push
orb
jge
test
sti
adc
and
pop
xchg
xchg
sbb
or
test
popa
repnz
clc
sub
movsb
dec
inc
or
rorl
outsl
xor
pusha
fstpt
icebp
cld
hlt
dec
in
jp
shlb
je
hlt
shll
movsb
pop
sti
jmp
cwtl
push
outsl
xor
test
bound
fldl
push
inc
dec
data16
imul
adc
push
fistl
sub
cmp
shll
sub
je
add
inc
test
dec
cmp
cmp
mov
cmp
mov
dec
mov
or
rcrb
stos
cs
adc
addr16
jl
sub
cmpsb
mov
adc
sbb
jnp
mov
push
add
mov
out
cld
nop
add
das
roll
cmp
fidivs
insb
add
jnp
fstps
or
mov
loop
or
lea
mov
mov
lods
xor
js
xchg
xchg
test
cs
dec
and
adc
rol
push
xchg
mov
sbb
mov
loop
hlt
sbb
mov
aad
das
or
mov
mov
add
dec
inc
xchg
push
mov
mov
pop
outsb
mov
iret
add
mov
pop
jo
pop
es
out
mov
inc
push
aad
sarb
mov
and
or
lods
mov
sbb
and
jp
mov
lcall
cmp
cmp
push
pop
adc
cmp
mov
mov
nop
das
mov
adc
sub
ret
push
fs
xchg
cmpsl
or
outsl
in
mov
addl
repnz
pop
push
dec
loopne
bound
inc
dec
popa
jno
loopne
sub
pushf
xchg
loopne
ss
pushw
pop
mov
mulb
clc
xchg
das
into
push
ficoml
inc
xchg
push
outsb
loopne
ret
pop
xchg
in
xchg
enter
mov
out
lea
mov
mov
jbe
cmpsb
sub
int3
cld
cmpsl
push
gs
leave
xchg
cld
sub
cmp
pop
push
sbb
int
repz
cmp
mov
icebp
popa
mov
lcall
lds
in
test
int
sbb
jo
ja
fsubs
std
sbb
mov
aad
push
jl
jl
mov
adc
rorb
cltd
movsb
outsb
jp
cli
sarb
jle
pop
push
and
lods
rolb
lret
outsb
xchg
stos
xor
mov
fldcw
test
jns
dec
push
cmpsb
in
sahf
push
or
repnz
push
xchg
aad
fldl
pop
call
in
or
movsb
pop
nop
cmc
lret
shrb
xor
or
insl
ljmp
cmp
cmp
outsb
fcompl
mov
cmp
dec
sbb
insl
mov
test
jno
xchg
out
nop
mov
mov
jle
int
pushf
mov
sbb
dec
pop
testb
aam
jo
cmc
data16
mov
mov
sub
mov
mov
adc
push
in
out
in
js
out
in
shlb
sbb
fdiv
mov
jns
mov
inc
mov
in
cwtl
popl
icebp
add
mov
push
lds
fcos
jno
hlt
dec
jae
push
or
pop
xchg
js
xchg
popf
and
mov
movsb
sub
popa
push
in
fnstenv
jl
addr16
jns
hlt
dec
jnp
inc
movsb
mov
aas
xchg
add
daa
insb
inc
sub
xchg
movsb
sahf
stos
cmp
es
push
add
mov
pop
adc
push
mov
pop
mov
or
repnz
sbb
call
pop
test
enter
call
jge
mov
cwtl
jg
cmp
mov
mov
in
cmp
loope
leave
sbb
repnz
test
arpl
jmp
or
cmc
or
cs
ja
pop
pushf
add
cmp
and
cmp
fcomps
mov
sbb
adc
andl
test
mov
popa
xor
xchg
ret
and
cs
mov
inc
int3
call
nop
jne
ucomiss
adc
xor
lods
mov
outsb
movsl
dec
outsl
inc
adc
ret
or
ljmp
pop
and
adc
mov
movsb
fildl
das
enter
shl
xor
sub
inc
jae
aam
push
xor
cmp
add
mov
mov
lret
int
call
enter
call
adcb
shr
dec
dec
mov
mov
mov
adc
lods
scas
aam
mov
pop
adc
and
and
jb
ret
pop
xchg
out
int3
push
inc
xchg
mov
aaa
int3
add
lea
lods
cmc
test
jecxz
pop
pushf
cmpsl
outsb
in
ljmp
push
int
sbb
fimull
stos
out
and
add
push
pop
jecxz
push
or
stos
dec
xchg
aam
testb
cli
ljmp
push
popa
fsubs
pop
sbb
adc
in
mov
mov
xchg
aaa
stos
jle
andl
push
test
or
stc
in
arpl
ds
andl
inc
xchg
mov
movsl
push
ret
mov
mov
fimull
or
jne
ret
pushl
je
and
or
sbb
sub
cmp
xor
push
lock
mov
test
xor
sbbl
and
push
inc
add
jo
mov
int3
cmc
mov
add
jo
add
or
jno
cmp
mov
pop
pushf
push
cmpsb
testl
enter
pop
cmpsl
add
scas
ja
insl
out
add
cwtl
repnz
cwtl
pop
mov
mov
xor
add
mov
fimuls
mov
aas
shrl
or
rdtsc
adc
test
fists
dec
mov
mov
dec
pop
scas
cwtl
xchg
popa
and
rep
loop
stos
push
or
bound
sub
dec
xchg
cmp
push
shl
aam
cmp
das
insb
dec
loopne
add
cli
xor
and
cwtl
bound
sbb
inc
fsubrl
movsb
popf
dec
out
add
lods
inc
adc
fs
sti
inc
sub
xor
xor
mov
iret
out
test
mov
testb
dec
outsl
dec
xchg
pop
cld
addb
add
ret
mov
ljmp
je
pusha
lods
xchg
mov
mov
jg
in
sub
xchg
xlat
imul
dec
mov
popa
gs
lcall
lret
inc
sbb
dec
mov
pop
pop
xor
inc
push
adcb
and
mov
sbb
pop
loopne
dec
nop
sub
movsl
dec
mov
test
aas
mov
jle
xlat
sub
and
adc
cmp
aas
jecxz
jns
xchg
add
sub
bound
pop
push
pop
outsb
loope
xchg
repnz
test
lock
shlb
rorb
adc
lahf
xor
mov
xchg
sti
flds
sub
adc
ret
bound
dec
pop
and
sub
rorl
test
sub
in
jne
imul
dec
xchg
jno
in
xchg
mov
dec
or
ds
and
sbb
add
lods
mov
and
mov
and
and
cmpsl
sub
dec
pop
iret
ja
mov
sbb
adc
mov
mov
aam
outsl
mov
cmp
mov
fmulp
leave
inc
pusha
in
loope
push
stos
aaa
push
cmpsl
imul
cmp
ljmp
mov
jmp
and
leave
xor
sbb
aad
aad
cli
mov
cmp
fists
repz
sbb
inc
or
pop
bound
clc
sub
lds
mov
jo
in
bound
sbb
vpaddd
fs
jae
mov
sbb
cmp
inc
aaa
sub
sahf
subb
mov
ret
loopne
xor
lds
inc
inc
rcl
xchg
push
out
sbb
and
and
jg
cmp
inc
mov
push
aas
inc
add
jg
mov
mov
and
jo
int3
leave
mov
mov
in
insb
cmp
pop
mov
dec
test
repnz
hlt
xchg
jns
lret
jg
je
stc
arpl
ja
add
js
loop
fdivs
cmp
mov
mov
or
mov
push
push
in
dec
mov
scas
mov
imul
test
or
test
mov
sub
pop
sbbb
insb
pusha
scas
mov
mov
inc
outsl
inc
and
inc
les
lds
push
jp
mov
jge
clc
nop
jns
rorl
inc
imul
adc
adc
je
insb
push
je
jns
push
or
nop
cmc
imul
inc
fnstenv
mov
je
inc
or
enter
push
pop
cmp
push
popf
cli
lret
ja
adc
mov
inc
inc
sub
mov
leave
adc
fyl2x
mov
sti
cli
mov
xor
pop
into
stos
push
push
cmpl
push
fwait
mov
dec
mov
push
jecxz
pop
inc
sti
mov
lods
ds
iret
and
mov
mov
jne
imul
cld
sbb
adc
in
pop
out
jmp
cmp
scas
in
jge
mov
rclb
pop
ffreep
push
sarl
dec
pop
mov
aad
lahf
xchg
inc
push
mov
xor
or
lahf
fisubl
dec
mov
cmp
push
xchg
nop
outsl
add
nop
popf
xchg
mov
mov
mov
sub
dec
push
add
sbb
shrb
test
movsl
rcr
inc
push
out
and
lcall
push
dec
inc
xchg
cmp
mov
push
imul
orb
int3
mov
inc
mov
inc
or
fisttpll
popa
int3
test
pcmpeqb
push
add
or
xchg
idiv
jne
lods
xchg
push
adc
aam
jl
loopne
js
pop
fsub
add
in
test
mov
iret
leave
fidivrl
inc
fwait
xor
out
xor
das
xchg
mov
cld
ljmp
inc
or
cmp
js
dec
shrl
imul
cwtl
or
jle
cld
test
mov
pop
lret
dec
lahf
das
lret
lcall
addr16
adc
fwait
sub
shl
jecxz
pop
xchg
das
mov
xchg
and
dec
or
and
sarb
xchg
mov
pop
jns
cmpsb
sbb
mov
test
inc
popa
lods
mov
sub
ja
ror
repnz
sbb
lahf
notl
add
cmc
int
mov
sub
pop
into
negl
xor
dec
data16
cmp
in
loop
add
int3
iret
std
dec
shll
push
push
pop
dec
jnp
push
lock
dec
cmp
mov
outsl
out
sub
dec
int
dec
inc
mov
test
aas
pop
mov
ret
clc
sbb
jle
mov
je
arpl
sbb
jno
push
xlat
sti
call
pop
inc
mov
xchg
ret
xlat
aas
stos
test
insl
ret
mov
mov
pop
arpl
leave
loop
lea
out
inc
sbb
jp
divl
in
gs
pop
cltd
shr
cmp
jno
nop
mov
cmp
xor
daa
add
dec
out
div
inc
add
daa
mov
insb
sbb
cltd
mov
sub
out
mov
push
loope
pop
pusha
add
flds
pop
sbb
xchg
sub
sbb
ror
push
insb
rcl
sbb
add
repz
test
dec
ljmp
push
sahf
dec
js
mov
out
ds
out
cli
insl
inc
jmp
gs
mov
stos
cmp
sbb
pop
mov
lds
dec
mov
mov
int
stc
xor
xchg
repz
adc
inc
out
push
mov
test
mov
add
in
jnp
push
lea
fists
pop
adc
jns
dec
arpl
lds
jmp
int
flds
in
dec
sub
lock
push
push
lea
dec
data16
mov
inc
testl
lcall
outsl
jo
stc
je
dec
and
push
ja
jmp
enter
test
dec
test
jae
fucomip
fnstsw
and
sub
push
into
js
sbb
xor
stc
mov
xchg
xor
xor
mov
popl
mov
mov
sbb
popf
mov
ss
dec
mov
cli
es
cmp
sub
mov
fs
movb
xchg
mov
mov
jnp
add
mov
jb
push
xchg
imul
scas
insb
sar
adc
js
jp
std
in
mov
repnz
xchg
xchg
sub
cmpsb
out
mov
stos
fwait
dec
adc
or
out
inc
add
sbb
xchg
or
sub
test
pop
adc
push
add
xchg
pop
mov
jb
aaa
cmpsb
leave
addl
sbb
mov
mov
faddl
xchg
pop
test
insb
lds
jo
in
notb
or
stos
cmc
imul
insb
daa
dec
movsl
jbe
or
roll
pop
mov
adc
mov
sub
popf
dec
ficoml
pop
dec
inc
mov
fnstcw
jns
cmp
lret
in
pop
cwtl
lret
add
dec
mov
push
jl
inc
add
popf
xchg
sub
into
insl
mov
xor
inc
xchg
xor
cmp
dec
push
out
stos
and
es
js
cmpb
jl
push
mov
sub
aas
adc
leave
fiaddl
sbb
subb
lret
inc
or
jno
push
xorb
xlat
cltd
xor
xor
cli
in
adc
aas
xchg
pusha
hlt
jns
pop
ss
xor
jne
mov
push
push
adc
dec
xchg
add
add
mov
xor
pop
lock
mov
push
test
adc
mov
mov
leave
pop
or
jb
js
adc
popf
fwait
aaa
ja
data16
int3
mov
out
dec
fisttps
mov
pop
sahf
xchg
cmp
movq
mov
xor
push
push
pop
mov
push
cld
mov
inc
mov
or
cmp
xchg
xchg
out
in
aas
push
pop
mov
xchg
add
or
xor
inc
inc
ret
xor
lahf
shlb
xor
pop
rorb
in
call
jle
movsl
mov
adc
push
jmp
jno
stc
jp
add
sub
mov
fwait
shll
mov
mov
adc
inc
push
es
cmp
mov
addl
cmp
and
mov
xchg
xchg
jae
sbb
jle
jg
fldl
sarb
add
cmc
sbb
sbb
leave
mov
xchg
sbb
jnp
arpl
add
sub
mov
in
add
inc
clc
mov
cmp
or
loopne
sub
movsl
inc
sbb
inc
lcall
clc
fidivl
mov
daa
xor
dec
repz
or
push
inc
xlat
out
leave
sti
repnz
jmp
pushf
or
fcmove
pop
test
mov
sbb
mov
xor
inc
das
cmp
js
loop
cs
out
ds
shl
add
stc
lods
ffree
inc
test
inc
scas
subb
int3
addr16
mov
sbb
jae
push
jns
sbb
cs
inc
mov
adc
inc
adcb
inc
inc
lret
cmp
test
mov
mov
into
popa
repz
inc
mov
pop
xorl
add
push
xor
pusha
rcr
lods
in
cltd
out
inc
push
adc
xor
dec
hlt
pushf
and
pushf
inc
aaa
or
add
cli
and
int
mov
xor
jo
xchg
mov
cli
cmp
mov
jp
call
mov
aad
mov
sub
dec
mov
jae,pt
sub
mov
ret
out
mov
lods
adc
icebp
mov
xchg
adc
or
mov
cmpsb
out
scas
sahf
mov
pop
pushf
loope
pop
aam
and
aas
addr16
shlb
neg
push
or
mov
jmp
and
mov
daa
inc
xchg
dec
es
mov
out
rclb
cs
add
iret
pop
mov
mov
xchg
adc
addr16
sahf
sub
lds
dec
sbbl
xchg
outsb
ret
aam
jecxz
push
in
insb
cmp
movsl
xchg
imull
dec
pop
push
dec
aaa
popf
loopne
pusha
or
rcr
dec
ljmp
stos
rclb
dec
cmp
cmp
and
xchg
jecxz
push
ret
daa
aam
fisttpll
mov
daa
inc
mov
cmp
push
and
mov
std
mov
repnz
push
rclb
or
fsubs
sbb
cwtl
push
std
leave
lds
mov
lea
pusha
scas
inc
cs
sahf
stos
into
stos
out
ds
jae
cli
imul
jge
xchg
lcall
test
cltd
inc
rorl
add
cltd
jnp
clc
inc
rcrb
xor
lea
fs
je
jo
fwait
adc
push
xor
in
cmp
xchg
ds
or
pop
inc
push
icebp
mov
shl
dec
ficomps
xchg
bound
xor
mov
test
ficomps
jecxz
xchg
push
shll
mov
js
sbb
mov
mov
mov
out
mov
push
push
cmp
adc
mov
fdivrl
insl
push
outsb
or
lret
mov
cmpl
sub
adc
scas
mov
daa
std
movsl
add
push
imull
pop
mov
sbbl
xor
sbb
aas
mov
pop
fdivr
rol
repnz
push
shl
daa
popf
pop
xchg
in
daa
and
jns
inc
fwait
cmpsl
filds
jle
cmpsb
pop
jecxz
push
push
add
stc
mov
gs
pop
and
pop
mov
cmp
pshufw
cmp
mov
popa
jl
movsl
push
loop
pop
or
and
mov
mov
shll
fs
clc
loope
pop
inc
or
jnp
icebp
sbb
mov
inc
enter
pop
mov
popf
mov
dec
jmp
or
sub
ds
mov
stos
adc
addb
shr
dec
dec
mov
sub
mov
xlat
push
lock
xchg
adc
xchg
mov
cmpsl
repnz
loopne
ja
sbb
add
das
cmp
ds
test
cmpl
popf
in
imul
loopne
jno
inc
push
mov
dec
insl
mov
test
add
mov
insb
out
inc
adc
pop
dec
mov
dec
mov
or
xchg
ss
sub
jmp
aam
push
xor
stc
scas
pusha
aaa
cwtl
sub
pop
xlat
mov
and
out
int3
adc
or
arpl
sub
dec
fidivl
pop
inc
adc
inc
movsl
fsubl
sbb
adc
das
xchg
inc
sub
and
inc
fldl
or
faddl
mov
mov
mov
test
jle
int3
in
out
jge
xchg
jo
xor
repz
pop
leave
aas
in
leave
add
rcrl
jnp
xchg
dec
mov
pop
shlb
sti
mov
xor
in
jecxz
int3
pop
lea
xor
repz
push
into
jne
repnz
push
sub
int
mov
push
inc
or
and
add
adc
iret
lret
movsb
or
lcall
pop
add
int
pop
push
push
data16
add
loope
xlat
jns
jnp
int
ja
ret
fstps
nop
mov
jne
or
test
push
sub
pop
mov
rcr
les
cmp
adc
jl
jno
lds
mov
iret
insb
push
lea
xchg
mov
xor
xchg
scas
test
and
xor
lret
push
xchg
scas
jg
inc
jmp
jmp
dec
push
inc
dec
iret
push
sbb
ret
push
lods
call
adc
fcomp
inc
out
cmp
movsb
inc
sbb
frstor
arpl
cmp
mov
in
add
js
and
xchg
subl
cltd
cmpsb
ja
adc
ljmp
in
jp
xchg
scas
pmaxub
and
sbbb
mov
aam
pop
mov
insl
dec
sub
pop
jo
cmpsl
jmp
jl
clc
pop
pavgb
mov
out
mov
cld
jge
adc
je
mov
clc
sub
inc
pop
xchg
pop
push
clc
push
push
jp
pop
popf
scas
jge
scas
cmp
scas
push
bound
mov
leave
ja
sbb
aas
pop
xchg
xchg
adc
push
adc
dec
cld
sbb
mov
xchg
out
pop
inc
xor
roll
sbb
leave
xchg
inc
mov
and
cltd
fwait
cs
mov
pop
imulb
sub
stc
jmp
arpl
xlat
xchg
mov
adc
xor
or
lock
jo
aad
inc
jnp
pop
mov
lds
add
push
mov
cmp
and
xchg
cmp
inc
inc
jp
sub
jl
adc
ds
out
and
xchg
dec
sbb
xchg
and
div
and
or
pop
cs
pop
sub
jnp
movsl
or
or
and
cmc
dec
fcoml
sub
icebp
pop
inc
popf
push
add
pop
dec
jo
adc
into
ficomps
jns
stc
js
clc
inc
lret
push
mov
and
fistps
je
sti
and
sub
aaa
xchg
rorl
cmp
add
push
sub
mov
aas
xor
roll
sub
rcrl
jno
ljmp
je
into
jmp
out
pop
or
das
ja
push
pop
cmp
movsb
dec
ja
dec
shll
mov
push
testl
add
scas
fdiv
mov
and
movsl
mov
out
xchg
iret
xchg
xor
jno
inc
fwait
lcall
sub
std
and
fisubl
lods
inc
inc
lret
xor
call
mov
pop
push
outsl
or
push
lods
add
dec
cmpsl
cmp
jno
inc
add
aaa
mov
mov
cwtl
cmp
dec
subb
mov
scas
mov
adcl
ljmp
int3
jg
cmpsb
adc
call
sbb
in
ljmp
jge
pop
sub
jo
in
repnz
lods
xchg
xor
pop
in
xchg
mov
jns
fcoms
aam
jb
add
repz
inc
nop
fmull
out
dec
stos
dec
xor
mov
in
fdivrl
mov
mov
pop
cmpb
inc
xchg
mov
adc
cld
pop
sub
insb
das
dec
push
mull
scas
int
je
add
jmp
and
icebp
xchg
mov
push
ja
push
insb
dec
aam
in
nop
jle
xor
int
hlt
in
sbb
push
out
lock
inc
insl
mov
xor
xlat
cmpsl
rcr
in
inc
mov
lcall
dec
rorb
jno
lods
xchg
bound
sahf
adc
add
js
add
sbb
roll
mov
cmp
les
or
test
xchg
pop
nop
int3
push
mov
mov
inc
imul
out
mov
mov
xchg
cmpb
cmp
out
or
out
mov
adc
mov
data16
xchg
cmpsb
jb
jg
add
add
gs
pop
fwait
inc
pop
xchg
push
push
mov
scas
inc
jge
sub
pop
cltd
enter
loope
shrb
les
inc
cmp
mov
into
out
jb
lret
jno
mov
add
sub
pop
popf
dec
xchg
push
push
adc
push
mov
out
mov
xchg
outsb
pushf
or
xchg
subb
cmp
add
xor
xchg
push
pop
ficompl
adc
int3
xor
and
lods
add
cmp
inc
inc
int3
stc
daa
frstor
data16
pop
test
dec
mov
add
mov
xor
jns
push
jecxz
mov
aaa
and
js,pt
fidivrs
mov
fiaddl
xlat
pop
adc
add
rol
mov
scas
cs
outsb
cmpsb
cmp
enter
adc
push
out
or
add
dec
sbb
mov
std
ficomps
dec
xchg
mov
cmp
pop
sub
jl
imul
xchg
add
call
loope
cli
ret
fildll
lds
test
test
inc
mov
xor
push
adc
pop
test
rcl
mov
cwtl
pop
jge
lcall
mov
add
js
dec
bound
inc
push
xchg
push
pop
out
mov
jo
pushf
cmp
push
cmp
movsb
or
sahf
xorl
ds
jae
jmp
lahf
aas
cmp
jbe
mov
pop
pop
dec
pop
push
dec
test
or
xor
xchg
sub
sbb
mov
jecxz
and
data16
stc
scas
lods
dec
xchg
lods
xor
sbb
xor
inc
cmpsl
push
sub
nop
fsubrs
icebp
sub
and
push
clc
pop
fnstcw
mov
out
or
jecxz
mov
jecxz
hlt
les
adc
sub
and
cld
mov
mov
outsb
xchg
mov
lea
leave
stos
lahf
add
daa
jnp
jbe
cmp
xchg
int3
es
iret
and
sti
ds
or
pop
fucomp
lret
pop
into
add
mov
inc
rol
add
mov
ljmp
scas
fsubrl
mov
sub
lret
jecxz
mov
inc
adc
sbb
jae
dec
pop
or
jmp
xor
lock
jge
add
inc
pop
add
cmp
ja
inc
push
inc
clc
sahf
lcall
adc
fdivrs
push
out
or
sub
imul
rcr
in
cmpsb
mov
fdivrs
loope
pusha
loopne
cmc
dec
daa
jb
test
cmp
pop
in
div
adc
rcll
inc
jle
lods
outsl
data16
sub
push
mov
sbb
mov
dec
loope
pop
fldcw
push
cmp
stc
jns
lcall
sbb
push
push
lcall
and
adc
adc
in
xor
pop
loopne
adc
adc
mov
ret
mov
test
fstpt
es
in
push
xor
out
shrb
in
add
insl
leave
ljmp
mov
mov
mov
jmp
sti
xor
jl
stc
pop
jno
push
in
loopew
fcmovb
les
pop
xchg
xchg
lods
sahf
jne
cmc
fistpll
notl
cld
xor
popa
adc
sbb
inc
jne
push
and
jae
sbb
pop
mul
popa
nop
jecxz
dec
es
or
call
mov
jle
xchg
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
jmp
jl
pop
call
andb
adc
shlb
cmp
bound
lret
into
sub
or
iret
loope
mov
ja
ss
or
xchg
push
push
mov
stos
fsubrl
cltd
stc
add
stc
adc
pop
and
sar
mov
add
fwait
pop
jp
mov
cld
lock
and
pop
test
jns
test
cmpsl
push
jnp
popf
imul
pop
in
adc
mov
hlt
add
arpl
iret
adc
or
roll
clc
xor
adc
in
mov
fsub
jbe
cmp
jle
mov
aam
in
and
sub
leave
jg
loop
inc
lea
fwait
dec
inc
mov
shrb
xchg
nop
xchg
xlat
mov
arpl
pusha
adc
pop
repz
mov
and
sub
aad
aaa
out
jb
insl
pushf
adc
in
lock
mov
icebp
sbb
fs
inc
and
dec
test
adc
scas
inc
cmp
sbb
out
in
push
mov
sub
push
mov
insl
sbb
jl
cld
dec
jle
adc
xchg
fidivrl
inc
outsl
popf
sarl
push
scas
subb
mov
pop
jae
imul
and
clc
jmp
push
mov
daa
xchg
push
imul
loop
add
ss
jp
or
add
sub
mov
xor
fsub
ljmp
jno
cld
gs
popf
or
lods
in
pop
ficoml
cmp
fucomip
test
lret
push
pusha
imul
xlat
ljmp
or
add
daa
lcall
imul
xor
add
lods
in
dec
push
loopne
dec
xor
mov
shl
mov
xchg
stos
jl
push
fucomi
gs
xchg
inc
mov
cli
testl
out
mov
push
mov
push
mov
and
sbb
cmp
jp
leave
xchg
in
rorb
mov
jge
mov
adc
pop
mov
cs
xor
xchg
inc
sub
scas
repz
cmp
cmp
mov
mov
xor
flds
lds
popf
es
push
mov
cmc
pop
jbe
xchg
ja
andb
lds
xchg
in
pop
mov
xchg
pop
mov
fldt
mov
mov
jmp
imul
mov
dec
loope
jmp
je
lock
fidivl
mov
dec
pop
loope
bound
pop
ja
push
ret
xchg
addl
lret
loope
adc
jb
dec
mov
into
lea
in
stc
fwait
pop
jae
mov
inc
jle
sbbl
sysexit
scas
ss
lahf
xchg
call
xchg
inc
dec
test
mov
pop
fisttps
in
rorl
dec
sbb
dec
stos
mov
mov
sbb
loopne
inc
test
sbb
mov
and
lods
jge
jae
inc
pop
xor
ss
push
aas
pop
xchg
push
fbld
pop
jbe
sbb
je
sahf
mov
imul
sbb
in
mov
xor
aad
dec
sub
push
pop
pop
push
fisttps
inc
adc
pop
insb
mov
or
inc
cmpb
add
aam
shr
jae
loop
pushl
fs
and
fistpl
test
push
mov
jae
add
rcr
cltd
incl
loop
pop
inc
mov
inc
enter
cmp
sbb
loop
jns,pn
cmp
out
enter
jge
sbb
outsl
rcll
jo
jo
into
dec
xchg
jbe
dec
mov
push
xor
xor
cwtl
lock
movntps
dec
aad
test
lea
fsubl
xchg
mov
add
dec
mov
jecxz
je
inc
in
cmpsb
out
loopne
sarb
jo
xchg
cld
inc
aam
push
mov
cmpsl
jp
mov
jge
dec
jp
push
popf
mov
hlt
aad
mov
push
pop
cmpl
xchg
mov
test
dec
das
push
int
push
xlat
jle
adc
ljmp
or
mov
stc
and
lock
mov
fistps
cmp
push
test
loope
insb
mov
push
xor
fldenv
leave
mov
mov
sbb
movsl
mov
mov
insb
fs
cmpsb
mov
adc
int
scas
sub
and
frstor
pop
pushf
adc
test
jo
scas
dec
pop
fstl
dec
sbb
imul
sub
push
xchg
mov
and
jo
push
inc
shrl
ljmp
mov
test
dec
xor
out
insl
pop
dec
mov
mov
xlat
and
int3
popf
mov
dec
data16
mov
pop
and
adc
mov
sbb
jmp
sahf
lock
out
add
ret
in
jle
sbb
aad
adc
iret
pop
xor
mov
sbb
bound
sbb
iret
shlb
cmpsb
mov
arpl
jmp
jg
jmp
pop
mov
mov
in
pop
cld
xchg
hlt
and
sub
sahf
jo
mov
jne
mov
adc
push
adc
aaa
xchg
cmp
fildl
in
push
xor
test
lret
fdivrl
add
push
loop
lcall
dec
dec
mov
mov
push
ret
pop
outsb
movsb
inc
dec
int
cmpsb
ds
andb
in
int
mov
sbb
mov
mov
push
cwtl
mov
dec
push
popa
cmp
mov
dec
push
iret
mov
addr16
dec
js
xor
pop
mov
xor
jae
pusha
or
in
cmpsl
xor
inc
cmpl
pop
jbe
jo
into
mov
out
stc
sub
es
pop
jmp
js
test
roll
out
stos
push
out
adc
mov
and
ret
push
pushf
ret
dec
xor
pop
bnd
data16
add
movsb
outsl
jecxz
shll
mov
imul
or
loopne
fstpl
insb
pop
stos
shll
cmpl
pop
xor
arpl
aam
push
popf
daa
xchg
in
pop
dec
jmp
add
sub
pop
bound
sbbb
into
sahf
inc
fwait
pop
scas
or
pop
and
shll
pop
scas
dec
jge
push
or
mov
xor
cmp
cmp
push
sbb
or
fnsave
sub
add
xlat
push
push
mull
push
inc
scas
dec
test
xor
movl
lahf
fsubl
adc
mov
repz
fadd
sbb
pop
cld
adc
or
imul
add
adc
xor
stc
movsb
mulb
sbb
mov
sub
imul
adc
jl
cmp
jne
and
push
add
jl
sub
push
test
mov
jae
add
pop
clc
fsubrl
shl
pop
iret
cwtl
xchg
dec
fwait
pop
ja
push
arpl
mov
cld
stos
andb
mov
fld
or
cmp
xor
push
push
je
pop
fdivrs
adc
push
push
cmpsb
pop
add
mov
scas
fnstsw
and
pop
mov
stos
pusha
int
jle
sbb
push
arpl
movsl
or
popf
fcmove
imul
pop
xor
stc
inc
mov
adc
xor
inc
mov
push
jmp
jmp
das
dec
dec
and
add
lods
fistpl
scas
lahf
insb
out
push
imulb
mov
sbb
add
cmpl
xor
push
push
rclb
adc
inc
pusha
pop
fidivl
or
mov
xchg
dec
std
pop
inc
pop
das
dec
fdivs
cli
push
mov
jmp
ljmp
cmp
mov
jno,pt
pushw
mov
sub
int
fwait
sbb
fldenv
int
arpl
xchg
out
gs
cmp
imul
mov
neg
bnd
shrb
ljmp
xchg
jno
jge
xor
test
dec
loop
bound
push
jmp
xor
sub
pop
out
jle
je
mov
or
and
or
lret
pop
mov
test
repnz
xchg
mov
jg
mov
inc
out
notb
xchg
lcall
cmp
jo
sbb
pop
jne
test
js
cmp
pop
aaa
cmpl
pushf
int3
je
ret
fstps
adc
pop
add
adc
add
dec
or
fwait
dec
mov
pop
rclb
adc
arpl
clc
sbb
mov
addl
mov
cmp
mov
mov
pushf
loope
mov
add
inc
mov
loopne
ljmp
push
test
das
into
ds
mov
daa
notb
cmp
outsl
mov
es
subb
js
cmp
adc
js
popa
cmpsl
sub
sbb
arpl
test
clc
js
popa
movsl
sbb
pushw
int3
cmp
or
hlt
add
or
pop
xor
sub
into
lods
and
fnstenv
mov
int
adc
popa
adc
xor
and
das
push
mov
xchg
in
push
out
loope
scas
add
popf
call
or
movsl
aad
aad
icebp
jne
dec
dec
hlt
rcpps
dec
out
fwait
loop
sbb
jge
push
loop
dec
push
fcompl
fnstenv
sahf
jecxz
jp
xor
xor
sti
icebp
and
outsb
sub
lods
lods
es
mov
dec
cmpl
add
mov
bound
push
fdivrl
test
pushw
scas
xchg
mov
dec
jmp
adc
xor
lods
push
fstl
or
mov
andb
pop
jp
pop
ljmp
stc
fnstenv
adc
int
inc
sbb
inc
push
jg
and
push
into
or
mov
mov
mov
mov
dec
shrb
xchg
jecxz
cs
add
rcrb
fwait
dec
shlb
jae
or
loopne
fs
sahf
push
popa
imul
imul
out
lahf
test
in
push
add
nop
aaa
call
mov
pop
xor
adc
cmp
iret
mov
and
mov
addr16
push
jg
out
mov
repnz
sarl
jae
repnz
mov
and
sbbl
and
ljmp
loopne
cmpsb
xor
push
out
gs
push
out
out
shrl
and
ss
mov
mov
notl
or
mov
adc
nop
mov
lea
mov
fstps
or
push
andb
aam
add
and
push
cld
dec
scas
pop
add
insb
sbb
mov
mov
mov
adc
xchg
and
test
in
sub
bswap
push
mov
cmp
out
cltd
sbb
jne
and
sub
adcb
ja
lods
in
in
jne
call
push
xchg
add
lahf
test
movsl
or
insl
lcall
mov
mov
add
add
lcall
adc
mov
and
mov
sub
loopne
ss
mov
es
and
pop
dec
lretw
pop
sub
paddq
lret
sbb
xchg
mov
mov
inc
loopne
xor
into
pop
and
cmp
mov
aam
xor
mov
adc
jp
xchg
out
push
cmp
mov
jne
mov
cmp
mov
scas
lret
mov
int3
push
adc
mov
xchg
cmp
fwait
pushf
mov
out
lahf
pop
lds
cli
jbe
int3
jbe
pop
divb
lods
xchg
sub
push
sub
xchg
clc
fs
call
jge
jge
pmullw
and
xor
mov
lahf
xchg
scas
cmp
cs
daa
daa
out
jecxz
jp
cmp
js
cli
push
inc
pop
sbbl
dec
addr16
leave
into
loopne
add
mov
addb
test
iret
je
adc
pop
fsubrl
cmp
int3
dec
loope
incl
js
stos
add
mov
icebp
xor
add
bound
sub
pop
inc
ljmp
mov
jle
cli
xor
cmp
bound
mov
in
popa
pop
dec
xor
pop
out
jp
push
lcall
pop
sbb
push
mov
les
in
cmpsl
or
cmpl
push
jl
inc
insb
mov
lods
inc
mov
loop
je
or
cmp
insl
or
pusha
sub
es
cmp
push
bound
nop
cmp
into
popf
cmp
out
je
mov
mov
push
hlt
xchg
sub
in
out
mov
stos
or
push
jecxz
cmp
and
into
mov
stos
dec
sbb
mov
ljmp
addr16
imul
imul
imulb
jp
int
stos
into
mov
mov
lcall
inc
in
sub
or
cmp
cmp
enter
push
jecxz
jecxz
jno
push
fisttpl
push
scas
adc
cmp
adc
pushf
sbb
mov
xchg
or
xchg
inc
pop
arpl
xor
inc
sbb
or
bsf
or
or
lock
scas
out
sbb
in
ljmp
lret
add
inc
dec
cmpsl
fadds
ret
bnd
xor
shll
inc
cli
jg
dec
mov
es
cmc
testl
je
jb
out
test
subb
test
pop
and
lret
stos
int
in
mov
out
cmp
and
add
inc
push
outsb
mov
xchg
sub
scas
or
loope
testb
jge
jmp
lcall
cli
mov
xchg
mov
lret
mov
xor
popl
or
push
iret
pop
test
popf
sub
pop
stos
fwait
aad
testb
jae
push
call
dec
mov
mov
jmp
sbb
sbb
mov
adc
out
rcrb
cwtl
mov
push
stc
sarl
inc
pop
and
xchg
cmp
lret
jmp
pop
popa
cwtl
push
inc
outsl
fwait
xchg
fldl
add
push
mov
lret
adc
adcl
insl
fisubl
test
in
js
dec
xor
std
cmc
mov
ljmp
sbb
cwtl
lret
push
lcall
push
push
hlt
and
push
lcall
and
loopne
xchg
mov
pop
xor
cwtl
pop
jno
and
repz
push
and
jecxz
mov
and
loope
or
ss
push
jmp
jl
inc
mov
pop
ret
mov
xchg
stc
call
add
imul
ljmp
pop
pusha
xor
mov
push
leave
dec
cltd
sub
test
add
inc
xor
je
bound
fwait
sub
repnz
out
int3
out
and
push
sub
and
sub
push
stc
xorb
sbb
lea
popf
or
pop
rcl
dec
rcrb
test
dec
jbe
shrb
mov
or
cwtl
loop
cmp
xor
inc
jge
or
ficoml
and
and
or
sbb
out
cli
mov
jmp
in
pop
out
adc
imul
or
adc
mov
int3
lods
divl
fstpl
mov
jmp
push
adc
mov
out
dec
fsubp
xlat
xchg
mov
movsl
lds
loope
xor
lods
je
sub
pop
leave
jnp
sub
ss
cltd
stc
mov
mov
add
mov
mov
xchg
js
xchg
mov
xchg
mov
sbb
cltd
mov
stos
push
fmull
cmp
mov
jno
lods
insl
in
in
push
movsb
pop
mov
pop
cwtl
sub
xchg
mov
mov
mov
cltd
movsb
imul
mov
xchg
mov
mov
les
sub
adc
mov
sahf
dec
ficomps
sahf
sbb
sub
loopew
repz
adc
outsb
sub
mov
lcall
out
movsb
das
jno
and
jbe
add
iret
cmp
mov
inc
mov
jne
mov
std
call
inc
fidivl
subb
pop
sbb
and
mov
sub
pop
je
xchg
ds
out
orl
fcmovb
aad
aas
jno
shll
jo
scas
iret
mov
gs
rorl
in
mov
push
mov
jmp
repnz
fdivrs
pop
pop
roll
out
outsl
cmp
lea
xchg
jb
jbe
sbb
pop
shll
push
arpl
movsl
adc
mov
push
adc
loopne
inc
imul
sahf
fildll
repz
jnp
add
push
mov
sbb
sti
mov
pop
insl
push
dec
in
fidivrs
add
xor
adc
out
rcrl
mov
test
addl
mov
jmp
or
pop
push
add
xchg
mov
cmp
clc
sub
fsubrl
lea
cwtl
or
cwtl
push
fdiv
sbb
jne
sbb
push
inc
out
ficompl
lret
lcall
fistps
popf
pop
cli
mov
dec
negl
loop
dec
add
cmp
scas
pop
inc
fcoml
inc
loopne
push
fstp
gs
rcrl
jg
push
fldenv
sbb
cltd
test
xlat
inc
lcall
imull
popf
or
dec
cld
dec
pop
iret
sbb
std
ljmp
cmp
lret
dec
or
pop
push
lret
xchg
inc
cmp
shll
fcmovnu
dec
xor
and
aad
repnz
jp
dec
adc
sbb
sub
orb
filds
sub
jbe
pop
repz
pop
mov
push
stos
adc
push
mov
in
movsl
leave
icebp
ffreep
pop
adcl
inc
push
int3
setb
std
mov
jae
loop
lds
jp
jge
shlb
xor
inc
cli
mov
xor
mov
jle
repz
mov
loopne
popa
ljmp
flds
push
xchg
ret
mov
imul
js
xor
mull
test
mov
mov
pop
scas
ljmp
xchg
cmc
imul
imul
push
rcl
push
mov
dec
out
xchg
pop
mov
and
push
dec
xor
std
mov
jbe
outsl
aaa
mov
mov
pop
jge
and
cmp
inc
cmp
xor
mov
stos
push
mov
mov
or
jle
add
add
mov
shl
jno
lret
ds
push
lret
ret
pop
pusha
outsb
nop
cli
jne
arpl
cli
jns
mov
or
dec
fidivrl
or
idivb
fsubl
imul
dec
jl
xor
fstpt
jae
dec
jno
js,pt
mov
push
mov
fmul
inc
mov
mov
mov
push
xchg
popf
scas
xchg
int
outsb
or
shrb
fwait
sub
and
sbb
mov
xchg
popf
xchg
and
mov
push
push
daa
xor
cmc
xchg
scas
mov
or
mov
ds
mov
mov
ss
jo
es
stc
repz
adc
outsl
nop
mov
push
cmpsb
cmc
and
loopne
xchg
bound
lea
pop
inc
test
iret
idivl
in
sub
sbb
sub
in
arpl
cmc
out
idiv
push
inc
sbb
mov
cmp
mov
out
inc
inc
cmp
pop
mov
jmp
dec
push
daa
mov
cmpsl
inc
shrb
mov
test
mov
stos
adc
lret
jge
cltd
lret
cmc
outsl
fcomps
leave
repz
push
cld
test
add
sub
stc
mov
shrb
test
pop
pop
sti
inc
gs
loop
addr16
outsb
jb
int
dec
bound
aam
ds
out
push
ja
insl
jo
push
aas
mov
add
outsb
push
inc
xchg
push
ffreep
adc
jle
sti
cmp
cwtl
popf
test
add
sbb
inc
xchg
add
sub
shll
or
insl
cmc
les
iret
jno
and
sbb
pop
aas
pop
pop
aam
cmp
inc
add
scas
pop
jb
add
xchg
mov
pushf
sahf
and
mov
dec
push
sbb
sbb
mov
loope
cltd
jb
push
push
push
enter
sub
xchg
pop
inc
sti
into
and
daa
dec
hlt
xchg
pop
add
pop
cmp
lock
cmp
xchg
mov
rorl
in
mov
push
sub
ds
pop
lods
sahf
js
mov
jmp
lahf
rorl
insl
incl
mov
push
shl
xlat
test
fucomip
inc
mov
mov
fimull
sub
adc
lahf
add
cmp
pusha
xor
aam
xchg
inc
outsb
ss
fabs
cmp
outsb
pop
aaa
lret
adc
movsl
fisttpl
inc
push
and
mov
sahf
mov
daa
mov
mov
bswap
cmpsb
push
cld
xor
addr16
mov
or
xchg
dec
ficomps
in
add
je
fs
rcrb
adc
mov
das
push
xor
pop
or
sbb
and
pop
in
adc
mov
cmp
je
mov
push
movlps
jno
es
cmc
push
in
and
repnz
fistpl
ljmp
iret
iret
xchg
das
test
sub
clc
lret
adc
adcb
push
jno
mov
and
pop
fstpt
aad
mov
adc
ss
mov
mov
icebp
cmp
sub
clc
jne
push
into
mov
icebp
sbb
rcrl
push
push
jmp
add
xor
inc
mov
imul
xor
loopne
or
push
lock
sub
inc
lock
ret
mov
and
jge
xlat
add
sub
pop
lret
in
sti
enter
lcall
inc
mov
pop
xchg
aad
je
mov
sub
adc
dec
push
mov
cmc
test
out
cmpsl
outsb
push
sahf
mov
popf
dec
es
push
icebp
aam
stos
adc
out
jno
push
adc
mov
leave
mov
js
mov
jle
insl
leave
sarl
fucomip
outsb
ss
in
sbb
xor
out
sbb
push
in
mov
adc
pop
jge
cmp
xor
cmp
jb
push
adc
js
cmp
ja
lods
pop
das
and
push
das
fisttpl
xchg
ret
inc
std
mov
insl
dec
insl
fimull
cs
push
mov
movsb
mov
scas
lock
scas
cmc
xor
lock
imul
ss
testb
xchg
in
sar
adc
jno
scas
enter
stc
icebp
ss
pop
jl
push
mov
jge
xor
push
hlt
sub
les
packuswb
rcrb
js
lods
mov
nopl
cmp
jecxz
push
dec
movsb
je
fadd
push
je
lret
pusha
adc
test
pop
add
mov
or
addr16
shl
cmp
notb
arpl
movsb
fsubr
push
xchg
ds
mov
in
cs
and
xor
rolb
pop
push
ds
bnd
test
jecxz
rolb
insb
js
mov
or
jae
fs
es
lock
icebp
push
loopne
adc
repnz
pop
jnp
add
aaa
sub
cmp
sbb
push
inc
pop
mov
aas
push
fwait
cli
mov
adcl
int
lcall
pop
dec
popf
jae
pop
or
inc
adc
shl
dec
sub
mov
xor
jmp
repnz
movsl
aaa
adc
mov
mov
jg
mov
jecxz
push
push
inc
xor
cmpsl
push
inc
jae
fwait
loope
fimuls
pop
inc
cmp
int
jne
mov
sub
dec
cmp
test
pop
jns
ljmp
ja
lods
imul
cltd
test
ja
inc
imul
into
out
mov
mov
xor
cmp
xorb
cli
icebp
das
jbe
aad
xchg
xor
jno
mov
js
sub
fdivl
mov
jl
int
popf
insb
cmpsb
inc
xor
fs
aaa
jmp
movb
rcr
and
divl
sbbl
dec
enter
pop
sbb
inc
dec
aas
push
lds
xor
or
ja
sbb
inc
sbb
lret
pop
and
adc
test
icebp
jmp
test
stos
xor
adc
and
xchg
add
call
mov
bound
adc
pop
insb
push
mov
mov
into
pushf
cmpl
jbe
add
push
loope
push
out
jbe
push
aad
scas
adc
outsl
test
dec
push
rol
imul
flds
mov
xchg
push
inc
or
xlat
add
jecxz
lods
cmp
sbb
imul
pop
aad
sbb
inc
rclb
jnp
cs
insl
fsubrl
movsb
mov
push
mov
mov
pop
mov
xor
cmp
or
movsl
out
add
movsl
enter
sbbb
outsb
adc
pop
inc
adc
cs
push
insl
aad
lret
sbb
and
jp
and
lods
or
into
fcompl
xor
outsb
pop
test
cmp
cmp
cltd
mov
sub
std
pop
xor
mov
adcb
pop
mov
sahf
fisttpll
push
mov
cmp
mov
add
jge
sub
stc
cmpsl
lea
repz
lods
sti
jo
jecxz
das
inc
addr16
sub
cmp
fbstp
xor
andl
xchg
xchg
sbb
lret
dec
fcom
ljmp
lcall
ret
xchg
sub
test
inc
icebp
imul
jl
sub
pop
lahf
mov
pop
and
push
std
xor
ret
test
dec
xor
push
repnz
in
fnstsw
outsb
call
and
cmc
mov
adc
cmp
daa
cmp
xor
pop
fld
loop
xor
lcall
shll
push
cmc
cmpsl
js
shll
rcll
mov
outsb
mov
lock
pushf
pop
dec
or
fmul
dec
sbbb
cmpsb
lret
mov
lea
push
dec
stc
test
stos
push
jle
rorb
out
and
jge
int3
jle
pop
adc
push
cmpsb
gs
pop
mov
loope
test
jl
sub
dec
rcrl
out
fimuls
xchg
sbb
popf
adc
jb
mov
mov
cmp
mov
lea
mov
repz
gs
pushf
push
arpl
cli
std
inc
loopne
inc
adc
xchg
pop
sub
mov
clc
inc
call
mov
xchg
flds
ror
outsb
add
lahf
inc
ljmp
fcomp
inc
cmpsl
adc
cmp
shll
jne
into
pop
imul
push
cmpsb
imul
sarb
mov
cwtl
jno
into
mov
xchg
mov
inc
sbb
add
mov
movsb
lahf
out
jl
movsl
imul
icebp
mov
out
lea
cmp
mov
dec
jg,pt
mov
mov
adcl
jmp
adc
ss
fstpl
mov
mov
sub
data16
or
push
mov
or
mov
leave
cwtl
mov
sarl
stc
xchg
loopne
xor
xor
cmpsl
pushf
sbb
pop
in
repnz
movsl
stos
jp
std
insb
fdivrl
mov
stos
inc
cli
cld
pop
or
in
outsl
int
mov
stos
out
xchg
xchg
iret
or
or
je
ficoml
cld
sbb
xor
jae
jg
push
call
lods
sarw
aam
in
insb
lds
push
xor
sbb
test
into
repz
fildll
sbb
hlt
jns
shl
xor
fidivs
movsb
mov
test
fwait
and
inc
cmpsl
mov
decb
sub
in
iret
xchg
jg
inc
iret
insb
pop
lret
lahf
push
inc
jmp
movsb
push
cmp
and
jb
daa
daa
push
bound
jl
les
cmp
in
xchg
xchg
test
imul
pop
ficoml
pushf
mov
mov
decb
call
ficompl
jecxz
scas
out
push
pop
stc
xor
jns
or
rcl
xchg
mov
cli
fildll
jmp
push
pushf
das
or
push
or
nop
push
into
roll
fdiv
mov
aaa
shrb
sub
outsl
dec
jae
adc
daa
cmp
insb
cmp
mov
jne
les
repz
push
fildl
mov
in
pop
insl
dec
pop
cmp
mov
mov
adc
cmpsb
fbld
es
xchg
mov
cwtl
jns
sbb
mov
clc
movsl
pop
sahf
scas
insb
loope
mov
pushf
pop
shlb
pushf
cltd
stos
adc
testb
jmp
adc
mov
fisubrl
div
sbb
sahf
or
ficoml
lcall
inc
lods
fcomp
dec
sbb
std
mov
gs
lret
dec
xor
cmp
cmpsb
out
aas
repz
and
mov
fs
loopne
and
xlat
sbb
shll
scas
jae
xor
shl
xor
push
xor
mov
test
loop
sub
push
fcomps
mov
pop
push
andl
imull
cmp
enter
call
xchg
mov
dec
push
lahf
scas
leave
push
jo
pop
orb
add
mov
jne
sub
xlat
jl
bound
push
dec
xchg
data16
orl
lret
add
fxtract
xchg
xlat
inc
fwait
sbb
movsl
and
rcrb
imul
adc
loope
xchg
rep
xor
xchg
jp
aam
lcall
sahf
ja
jmp
xchg
adcb
out
mov
dec
or
xlat
inc
outsb
mov
pop
scas
ficoms
cmpsb
inc
rcll
insb
adc
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
addl
mov
or
mov
mov
xor
andl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
mov
mov
movzbl
and
cltd
push
addl
mov
add
movl
adc
or
push
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
mov
movl
mov
andl
mov
xor
orl
xor
orl
xor
andl
add
adc
xor
orl
jmp
mov
arpl
jno
rorb
pushf
leave
lods
js
bound
pop
bound
jno
test
jg
outsl
pop
cmp
test
js
lods
xchg
mov
jle
mov
pop
mov
les
shll
popf
mov
pushf
jecxz
daa
rorb
lea
xor
pop
inc
out
insl
add
mov
test
dec
daa
mov
push
adcb
sub
loopne
ret
in
push
mov
adc
fstpl
xor
in
push
je,pt
rcrb
stos
cltd
fld
mov
jnp
mov
pop
dec
inc
out
xchg
xor
iret
out
sbb
jg
dec
icebp
imul
loop
dec
sub
rclb
push
add
push
fldenv
mov
and
rclb
fcompl
in
test
cmp
xor
and
add
cmp
fdivrl
gs
andb
rcrb
jle
cpuid
ret
xor
jle
out
mov
jno
cmp
push
fiadds
cmpsl
jp
clc
stos
and
xchg
cmpsl
fwait
xlat
jge
xchg
sbb
lret
push
iret
jbe
cmp
cmp
xor
push
mov
jbe
xor
mov
data16
into
and
pop
ficompl
sarl
jnp
cmp
and
cld
mov
aam
xchg
in
sbb
lcall
testl
lret
lods
push
lods
mov
rolb
lock
jg
sbb
xchg
inc
cmp
and
in
add
jne
bnd
add
cld
jbe
out
rcll
and
jbe
cld
sub
loopne
push
mov
jecxz
xchg
rcrl
lock
lds
jae
into
mov
shrl
and
mov
jnp
loop
xchg
jae
add
sub
movsb
jb
in
lsl
mov
inc
lds
jo
sarl
cmpb
cmp
popf
push
bswap
inc
add
test
lds
pusha
fninit
aad
mov
pop
cmp
dec
sub
into
es
cmc
jb
cmp
mov
dec
mov
add
cmp
imul
and
sahf
sahf
sub
mov
lret
or
movsb
add
sbb
mov
movsb
xchg
mov
js
insl
cmp
cmc
inc
fisttpl
arpl
mov
sub
pop
lret
cmp
xchg
outsl
inc
jg
xchg
jle
cmpsb
lock
dec
inc
mov
and
fsubl
ljmp
sbb
sub
clc
fwait
xchg
adc
adc
pop
inc
ret
lcall
ret
or
and
sub
push
adc
std
dec
movsb
ficomps
xchg
inc
inc
inc
adc
inc
xor
cld
mov
jne
mov
mov
sahf
lds
icebp
and
fstpl
xchg
xlat
stc
nop
jcxz
std
rol
dec
stc
pusha
inc
into
pop
cmp
sub
daa
je
inc
int3
cld
dec
arpl
out
xchg
jno
stc
imul
jo
jns
adc
mov
pop
mov
adc
cmp
popa
aad
cmc
push
and
mov
adc
push
packsswb
or
dec
sbb
in
loopne
xchg
test
inc
mov
lret
inc
jp
dec
cmp
test
fstl
adc
fdivl
pop
cmp
mov
test
in
cmp
pop
adc
lea
pop
cmp
and
cltd
popf
popf
shlb
in
inc
mov
add
mov
xor
jo
add
insl
mov
jns
or
orb
imul
scas
dec
cwtl
sub
outsb
inc
fs
mov
fidivl
or
or
data16
jg
dec
jle
aas
loop
rolb
dec
cld
fdivrl
sbb
mov
jbe
sbb
cmp
push
pop
mov
jbe
cmpsl
scas
adcb
outsl
lock
scas
and
cltd
jge
jns
mov
into
stos
leave
xlat
dec
adc
lcall
repnz
lret
cmp
adc
pop
pushf
js
push
jae
xchg
jo
adc
enter
imul
or
subb
ds
pop
adc
pop
insl
scas
or
cld
push
dec
sub
adc
xor
sub
cli
pop
and
pop
cmp
xor
jb
jmp
mov
test
orl
popf
addb
and
inc
sahf
sbb
je
pop
jo
out
fninit
test
push
pop
mov
repnz
push
in
sarb
lret
lock
imul
push
cld
shr
adc
or
lds
dec
imul
pop
outsb
sub
imulb
dec
lock
dec
das
mov
mov
shlb
test
enter
outsb
sub
mov
out
inc
sub
cmpsb
sbb
mov
pop
jae
inc
jne
dec
cmp
mov
fnstenv
add
pop
aaa
xchg
lahf
into
xor
cmc
dec
dec
arpl
xchg
mov
and
mov
mov
clc
pop
stc
fbld
mov
call
cmp
jns
movsl
pushf
in
jns
les
inc
rorb
scas
jge
or
mov
mov
mov
mov
or
add
test
xorl
addr16
jno
inc
mov
das
jle
push
pop
ret
mov
lods
das
shl
fninit
mov
movsb
lahf
mov
pop
xor
int3
call
stc
push
push
mov
idivl
mov
mov
sub
sub
mov
repnz
dec
dec
out
cwtl
xchg
and
dec
lods
and
jnp
and
pusha
jle
adc
cmp
scas
movsl
lds
mov
pop
jle
pop
pop
xchg
hlt
mov
dec
pop
ljmp
push
add
lea
jg
es
inc
lret
lods
mov
jae
addr16
insb
roll
jg
lds
in
cmp
mov
or
inc
testl
cmp
ret
gs
or
dec
pop
sti
mov
ret
or
and
dec
jecxz
push
hlt
dec
mov
insb
xor
add
cwtl
push
mov
mov
mov
sub
inc
sub
push
and
mov
mov
cwtl
mov
cmp
clc
push
dec
icebp
and
leave
pop
sub
popa
int3
xchg
aad
pop
push
lock
or
lods
adc
inc
mov
ljmp
push
dec
adc
iret
xor
pop
test
movsb
subb
call
test
sbb
out
hlt
mov
sub
jne
xchg
fiadds
mov
test
fwait
test
mulb
sar
lahf
call
jg
scas
insb
mov
or
lea
jmp
cmp
lea
jno
sbbl
sbb
dec
shll
add
pop
into
mov
test
rcll
ror
les
mov
lahf
nop
fsubrs
ss
rcll
xchg
jl
popf
popa
xchg
dec
icebp
sub
ds
mov
fsub
jle
mov
jns
sti
out
cmpsb
jno
jno
ljmp
mov
aaa
sbb
xor
subl
dec
and
sti
add
and
in
mov
push
aam
jns
pop
andnps
jmp
in
and
dec
cwtl
xlat
adc
sbb
sub
test
loop
out
push
frstor
sbb
add
outsl
out
jecxz
jns
sub
jbe
adcb
add
in
dec
movsl
jb
addl
xchg
ret
inc
sahf
fwait
aas
stc
mov
int3
addl
subb
notl
cmp
inc
stc
lret
sbb
xchg
adcl
jbe
sub
pushf
add
xchg
test
fistpll
jbe
pop
pop
jl
aam
popf
pop
mov
call
cmp
or
mov
jmp
cmp
sti
cs
stc
scas
push
rclb
stos
lods
rcl
xchg
push
pop
and
rorb
xor
js
push
lret
cmp
push
cld
jb,pn
in
adc
xor
xchg
loop
jp
sti
stos
stos
test
push
cmp
jecxz
mov
sar
fwait
mov
jge
cli
jbe
adc
mov
jb
jl
mov
mov
mov
stos
ja
enter
lret
inc
fsts
push
out
imul
sbb
mov
push
mov
or
mov
mov
popa
mov
fsubs
xchg
mov
pop
les
jne
sub
jno
ret
dec
adc
out
mov
adc
jp
push
aam
push
xchg
mov
cld
jle
xor
pop
mov
sub
add
cmp
xor
stos
call
mov
in
pop
push
movsl
stos
lock
jle
jne
int3
outsl
fstps
not
adc
lahf
jg
jb
pop
pop
lret
pop
pop
sub
movsl
ja
mov
subl
pop
jle
add
out
mov
mov
mov
pop
lret
or
data16
dec
mov
ret
addl
outsb
mov
and
shlb
mov
mov
js
xchg
inc
out
jno
xlat
notb
and
repz
lea
fwait
cs
cmp
rcrl
sub
rclb
xlat
jo
fstpt
rclb
jp
dec
test
jnp
dec
or
xchg
pusha
sar
mov
mov
mov
fs
push
push
pop
lods
pusha
lods
mov
jmp
sub
jp
sbb
out
adc
sub
xor
xchg
or
out
test
jge
aad
inc
pop
adc
sbb
cmp
cmp
adc
pop
cmpsl
pop
jbe
in
dec
adc
mov
sub
jno
xchg
stos
xchg
cmp
pop
sahf
or
int
pop
bound
dec
xchg
pusha
push
aas
mov
or
adc
data16
xchg
and
inc
adc
cmp
jl
fdivr
cmp
popa
cmp
hlt
fidivrl
dec
cltd
xchg
cmc
jno
es
sahf
orb
shll
add
xchg
mov
sub
add
mov
pop
cmpsb
mov
mov
hlt
shll
cmpsb
cmpsl
jae
lea
lods
pop
sub
push
dec
out
enter
inc
vxorps
stos
dec
mov
jecxz
mull
xorl
call
inc
jns
out
mov
fs
sub
pop
jl
jle
sbb
aas
shl
push
dec
lock
rcll
cli
sub
outsb
add
negb
cmp
add
mov
sbb
jno
jns
lds
std
xchg
dec
mov
push
sub
sub
push
mov
or
cld
jno
jle
loop,pn
push
fxam
push
idivl
sbb
loope
push
pop
adc
daa
divb
lahf
push
add
jo
xchg
iret
jg
xor
clc
pop
xlat
dec
fidivl
sahf
xchg
fldenv
les
ja
cmp
mov
int
jnp
ja
push
mov
invd
fsubrl
insl
sub
push
dec
lods
in
shll
xor
pop
mov
pop
mov
fsubrp
push
jnp
divl
outsl
je
push
cmp
outsb
fldenv
xorw
cltd
gs
jge,pn
adc
xchg
mov
mov
stc
fildll
in
cltd
sub
arpl
xchg
cmp
jecxz
popa
sub
adc
lcall
mov
dec
scas
xchg
or
rcll
test
pop
xor
and
mov
mov
jne
mov
mov
jmp
cli
dec
lcall
mov
sub
nop
push
cmp
jl
sbb
arpl
sbb
and
movsl
sub
negl
or
mov
pop
inc
lahf
jp,pt
mov
dec
addr16
push
ret
xlat
push
pushf
addr16
and
sub
andl
jl
lods
pop
mov
dec
mov
mov
jle
dec
fwait
jle
cmp
pop
jbe,pn
inc
dec
leave
dec
test
inc
sarl
dec
imull
mov
in
and
push
xor
je
fsubrl
std
mov
add
push
add
sbb
insl
rcll
repz
shll
inc
mov
and
cmp
aas
sbb
sbbb
outsl
xchg
sbb
cmp
lret
xorl
or
and
stos
movb
mov
fwait
rorl
outsl
xor
out
dec
les
mov
in
flds
xor
mov
das
mov
add
adc
cmpsl
lock
dec
cs
jmp
outsb
sti
nop
cmp
stc
lcall
in
das
test
lock
mov
in
add
xor
and
sbb
cmp
sub
mov
jecxz
cmpsb
cmc
imul
aam
sbb
scas
cmp
and
pop
movsb
mov
or
push
mov
clc
adc
sti
lret
sbb
pop
popf
or
xchg
and
js
adcl
sub
sbb
lret
jmp
push
scas
push
sahf
pop
imul
cli
cld
mov
cli
rolb
aaa
adc
das
push
ds
test
sar
jle
pop
jecxz
not
and
enter
cmpsb
addb
and
cmpl
sub
imul
mov
cmp
faddl
adcl
jp
ret
cld
clc
jp
cltd
enter
cwtl
sbb
imul
sub
jae
cmc
scas
mov
aad
jns
xlat
inc
inc
xor
cmpsb
dec
add
cmp
cmp
jnp
jae
repnz
add
push
movl
jnp
pop
mov
test
addr16
dec
cmp
push
lock
enter
insl
nop
xchg
je
mov
push
std
outsb
mov
push
adc
xor
xor
jbe
sub
stos
andl
mov
push
push
sbb
sbbb
cs
mov
dec
inc
mov
or
stos
mov
jns
stc
aam
aas
xchg
stos
mov
and
adc
clc
jge
das
loope
xchg
insl
xor
cwtl
pushf
push
xchg
or
mov
sub
ds
or
add
out
mov
mov
lock
bound
es
lds
dec
push
sub
leave
pop
test
fbstp
mov
cmp
xchg
and
jl
push
fiaddl
dec
in
mov
fxch
dec
fmulp
pop
inc
je
lods
push
leave
push
and
rolb
xor
outsl
inc
sbb
cli
lea
int3
pop
inc
mov
mov
sbb
addb
push
push
shr
cwtl
pop
fimull
test
lret
xchg
mov
xchg
fwait
fs
cmp
lds
and
scas
mov
add
sbb
rolb
data16
xchg
clc
subl
mov
push
es
sbb
jle
inc
ret
cmpsb
lock
or
out
cmp
test
sbb
push
lods
shlb
scas
mov
mov
or
addr16
movsl
in
outsb
sbbb
gs
lods
jbe
add
push
cmp
ja
adc
sbbl
pusha
outsl
xchg
xchg
out
sbb
xchg
xchg
in
outsb
inc
pop
sub
or
pop
cli
cmp
mov
jmp
mov
inc
pop
pop
dec
jae
lock
xchg
je
or
sbb
icebp
clc
adc
shll
mov
aaa
call
in
xchg
fnstsw
dec
out
movsl
mov
adc
loope
xchg
adc
dec
inc
push
push
mov
pusha
adc
mov
gs
xchg
stos
add
nop
dec
pop
mov
mov
sbb
int
mov
jmp
shl
js
xor
dec
cmp
jno
je
push
out
addr16
pop
xor
xchg
dec
push
mov
jg
adc
filds
dec
les
cwtl
jge
sub
or
dec
test
inc
aaa
idivb
sbb
pop
repz
dec
int3
scas
shlb
into
ret
mov
pop
imul
jne
mov
mov
aad
sub
push
mov
lea
test
push
inc
dec
loopne
adc
sbb
cmp
lods
das
mov
scas
loop
sarb
pop
rolb
or
mov
pushf
aam
pop
or
jl
out
enter
xor
hlt
dec
rcl
loope
ss
clc
jecxz
jae
mov
push
lret
loope
pusha
hlt
mov
rcl
and
and
sbb
imull
cwtl
adc
xchg
das
and
adc
ds
mov
stc
arpl
and
push
pop
xor
les
orb
and
packuswb
sbb
div
xchg
dec
lret
andl
mov
leave
ret
inc
data16
fwait
les
arpl
sub
adc
pop
fdiv
out
mov
lock
fcomp
ds
ljmp
push
lret
sub
cmc
pop
adc
or
adc
sahf
in
rorl
hlt
mov
add
je
xchg
jl
mov
sub
lret
repz
add
or
xchg
push
xor
or
test
xchg
js
jns
repnz
or
stc
lcall
mov
mov
movsb
repz
push
outsb
fsubrs
xchg
divl
ljmp
stos
xlat
out
inc
xor
mov
movsb
pop
cwtl
test
in
dec
repnz
cmc
bound
repnz
or
sub
lret
outsb
andl
incb
sub
cld
repnz
inc
mov
cmpsl
add
andnps
sub
bound
cmp
sti
sbb
jge
sbb
std
cmpsl
test
imul
mov
outsl
xchg
pop
jle
add
rcr
and
add
adc
loopne
xor
lcall
cmpsl
mov
insb
sbb
jnp
dec
or
negl
lret
and
ss
or
cmp
imul
and
jo
out
or
jg
sub
imul
insb
and
jae
mov
mov
les
fnstcw
fiaddl
and
push
in
xor
cwtl
push
cli
test
jle
cli
stos
jae
lock
es
sysexit
stc
hlt
lahf
jno
inc
int
mov
push
scas
mov
inc
test
mov
adc
and
sbb
mov
sub
cltd
sbb
ret
and
sbb
idivb
jne
sbb
mov
xor
aas
clc
cmp
pop
pushf
xchg
lods
lock
cmpsb
iret
sbbl
xchg
repnz
add
jo
stos
fs
ljmp
movsl
sub
leave
and
cmpsl
popf
sti
mov
das
cmpb
mov
pusha
mov
mov
pop
mov
add
test
inc
mov
daa
lret
loop
fcmovnu
xor
jge
arpl
and
sbb
aam
pushf
insl
and
sbb
mov
mov
xchg
or
out
into
arpl
lret
test
jae
pop
and
call
dec
sub
jmp
ds
mov
jp
shll
pop
push
popa
cmpsl
jmp
mov
fidivrs
xchg
sub
mov
divb
test
mov
ret
scas
sbb
lock
or
ficoml
or
mov
mov
je
int
ret
xchg
pop
mov
movsl
push
icebp
adc
fimull
pusha
push
aas
xor
imul
push
imul
pop
inc
shlb
sub
and
dec
test
das
movsl
cmpsb
test
sbb
cmp
push
int3
sbb
xchg
xchg
lahf
popa
cmpsl
mov
das
push
jg
push
sub
xor
add
fs
lret
xor
in
lods
jmp
pop
dec
aad
sti
mov
jle
add
scas
mov
and
cmp
dec
in
out
ds
sub
aad
loop
xchg
sbb
xchg
sbb
xchg
fildll
imul
insl
mov
lods
testb
outsb
sbb
dec
loopne
jl
push
mov
pop
lods
fdecstp
pop
das
call
add
sbb
inc
push
jl
dec
jge
pop
push
or
mov
dec
jge
bound
mov
sub
out
push
push
orl
inc
lds
cli
pop
xchg
cltd
cld
and
mov
mov
jae
es
ss
jb
jno
popf
mov
jge
cmp
stos
sub
test
test
push
jmp
xchg
pop
dec
sub
dec
mov
xor
push
aad
dec
mov
test
mov
mov
add
jnp
sbb
addb
xlat
jmp
mov
dec
pop
add
fcmovnbe
jne
test
out
stos
xchg
mov
add
push
lock
jae
test
push
stc
fwait
idivb
sub
and
jnp
mov
mov
dec
lea
clc
lret
mov
mov
data16
xor
enter
mov
sub
mov
cmp
jmp
add
fistpll
cmpsl
aad
addr16
dec
aad
push
test
jle
sbb
aaa
xchg
pop
clc
cmp
iret
mov
lds
xchg
sub
ret
sbbb
fisubl
jno
je
ret
fnstcw
mov
jae
push
pop
js
in
xchg
ja
shrl
lods
mov
imulb
sti
cmp
cmp
cld
or
push
jg
pop
mov
mov
bound
mov
jge
cmp
cld
xchg
clc
aam
bound
loop
dec
lret
xor
jno
bound
js
test
fwait
mov
movsl
xchg
stos
cmp
add
jb
mov
mov
push
pop
add
mov
ror
add
mov
inc
dec
mov
and
push
in
notb
sbb
mov
sti
push
dec
xchg
fadds
sbb
dec
out
out
orb
cli
dec
sbb
sub
jo
shll
hlt
add
pop
cmpsl
cmp
cld
lods
push
movsb
push
xchg
cmc
pushf
jecxz
lea
mov
cmpsl
cmp
loop
push
jecxz
test
cmp
or
fucomip
cmp
in
pop
stos
adc
in
lret
mov
pop
ljmp
push
inc
sub
jae
arpl
adcl
lock
cmpsl
in
jnp
cmc
add
fnsave
jnp
cld
cmp
mov
pop
addl
mov
mov
lcall
mov
imul
das
and
push
pop
std
dec
sbb
fidivrs
fcmove
out
jnp
mov
mov
mov
in
pusha
cmp
dec
jo
mov
sub
stc
or
jp
push
ret
sub
xor
rol
mov
les
sbb
push
push
sbb
cld
xchg
sarb
jl
icebp
gs
je
mov
pop
xchg
add
out
pop
in
mulb
jmp
std
and
jno
rcr
bound
mov
lock
and
mov
mov
outsl
xchg
inc
out
sbb
fidivl
mov
sti
mov
gs
jmp
push
cmp
push
aam
shlb
mov
mov
sbb
lret
cmpsl
jge
xor
add
and
clc
jae
ds
pop
loopne
movsb
xchg
dec
testb
mov
xchg
push
xadd
mov
or
ja
cmp
lods
push
inc
aas
cld
xchg
jl
ljmp
jl
jg
add
iret
add
sbb
daa
imul
aaa
dec
jae
pop
sbb
jl
push
loop
fidivs
lahf
jae
inc
xor
addr16
lret
adc
jmp
das
mov
xchg
jl
inc
or
pop
test
loop
jmp
mov
xorb
movsb
out
mov
pop
and
push
inc
test
fsubrl
test
popf
cmc
mov
popa
out
cmp
and
adc
clc
loopne
hlt
je
cmp
add
inc
push
out
mov
rcrb
push
push
push
insb
xchg
lods
jge
cwtl
mov
mov
js
mov
push
stos
jle
mov
lods
push
gs
mov
mov
pop
rclb
jl
out
sahf
aaa
insl
lahf
xlat
mov
push
or
add
push
daa
sub
int3
mov
adc
les
test
ss
xor
js
or
pop
sub
mov
xlat
in
add
in
les
sub
xchg
hlt
push
adc
clc
dec
dec
clc
jmp
std
inc
adc
pop
sbb
cmp
cmp
nop
insl
and
js
push
mov
addr16
mov
xor
dec
ret
out
outsl
negb
inc
sub
cld
inc
jae
leave
in
popf
mov
sbbl
int
push
dec
add
bound
mov
pop
outsl
imul
mov
in
mov
popf
sub
add
pop
jb
add
daa
out
cs
lea
push
ret
cmc
fisttpll
mov
xchg
mov
xchg
repz
and
mov
adc
mov
push
jno
lea
inc
pop
ret
hlt
lahf
jmp
stos
jbe
fistps
cmp
out
pusha
cmp
add
subl
add
icebp
jmp
es
enter
dec
sub
aas
bnd
sti
ja
loopne
pop
inc
mov
mov
push
ljmp
adc
loopne
cwtl
pusha
ja
mov
or
xlat
test
mov
sub
stc
loope
xchg
mov
stos
push
cmpsl
orb
push
push
mov
and
sarl
or
sbbl
fdiv
ret
mov
xor
dec
jp
test
pop
inc
iret
rcl
sub
inc
fsubrl
imul
mov
adcb
or
and
leave
dec
pop
mov
sub
sbb
das
cmp
in
pop
into
xchg
mov
push
xchg
lods
and
sbb
pop
mov
loop
jno
movsb
jge
popa
mov
ljmp
outsl
mov
ja
cltd
addb
fcompl
inc
mov
decl
lods
shrb
call
jne
sbb
sub
adc
scas
pop
push
stos
lods
cwtl
jl
out
mul
sub
bound
fwait
shlb
aad
ror
or
cmp
xchg
or
adc
cmpsb
jmp
dec
and
xor
add
ret
or
cmpsl
push
jbe
shr
shrb
insb
or
cmpsl
out
pop
dec
push
mov
adc
add
inc
mov
lods
fsub
jle
mov
mov
iret
and
js
jp
sar
mov
test
sbb
cmc
mov
aam
xchg
and
sub
jecxz
jg
addr16
je
into
cmp
jge
pop
push
mov
mov
testb
loop
and
ret
popf
dec
dec
iret
es
xbegin
push
enter
out
mov
or
mov
fidivrs
scas
aad
ret
dec
and
xchg
jg
mov
mov
mov
jle
dec
xor
outsl
cmpsb
int
fs
nop
test
fdivl
ret
inc
and
mov
push
test
cmp
adc
push
push
fs
and
push
popf
xchg
lock
fadds
rcll
frstor
and
shrl
aam
sbb
jmp
and
or
push
jle
lcall
sbb
push
cmp
inc
push
rcrl
pop
dec
push
mov
mov
lret
push
xchg
movsl
dec
popa
test
pop
pop
mov
out
in
leave
mov
push
popa
mov
jae
or
cltd
mov
mov
dec
jo
fcompl
and
push
dec
test
int
shl
out
out
pop
adc
inc
fidivrl
mov
test
pop
loope
movsl
scas
clc
aam
cmp
cmpl
insl
sti
xchg
sub
xchg
ret
std
out
or
test
xchg
das
std
int3
pop
xchg
jbe
ja
cs
dec
xor
shrb
std
lahf
adc
lahf
enter
adc
sahf
arpl
mov
lret
mov
insl
inc
stc
push
adcb
std
clc
mov
mov
fwait
sub
addr16
pop
adc
das
test
mov
into
iret
notb
push
jns
ja
inc
xchg
loopne
fnsave
adc
test
add
add
mov
stos
adc
jge
stos
xlat
dec
fisttpl
or
add
enter
int
mov
inc
sbb
xor
stc
lret
mov
inc
cmp
xor
testl
adc
ret
fstl
xor
xlat
or
dec
xor
xchg
or
stc
inc
inc
fidivs
mov
cmp
xchg
imul
lods
lock
push
or
sub
xchg
sub
add
test
jno
rcrl
icebp
sarb
and
popf
pusha
gs
enter
out
add
mov
jecxz
pop
and
xchg
sahf
pminub
aad
iret
dec
xchg
adc
or
pop
sbb
cli
sbb
loope
mov
mov
cmp
cli
xor
sbb
mov
inc
adc
sub
loope
mov
jl
enter
das
adc
insl
popa
data16
cmc
das
xchg
pop
mov
out
das
loope
nopl
es
inc
je
push
add
add
imul
push
decb
test
cmp
inc
dec
mov
sbb
out
xchg
jno
iret
dec
push
pop
xorb
fdivrp
cmp
mov
xchg
ja
pop
loopne
adc
sub
sahf
push
fistps
dec
xor
lcall
sbb
mov
and
dec
icebp
outsl
and
adcb
adc
push
push
int
aaa
mov
imul
stc
mov
mov
adc
sbb
sub
or
int
stc
or
sbb
loop
adc
imul
imul
lea
loop
push
mov
sub
mov
lods
or
or
imul
xchg
aaa
cmp
rcr
les
mov
pop
or
adc
hlt
inc
mov
call
mov
outsb
jecxz
sub
add
sbb
add
push
add
adc
roll
sbbb
jno
push
sbb
sub
outsl
jp
in
and
xchg
mov
cmp
cmpsb
sbb
jns
pushf
popf
test
pop
mov
notl
not
dec
xor
outsl
push
mov
sub
loope
insl
jl
in
and
popf
or
testb
and
cli
inc
pop
sub
test
lea
cmp
fdivrs
jg
jno
mov
cli
es
sub
or
loopne
out
ss
adc
fisubl
mov
add
rorl
test
add
movl
cmp
movl
je
sub
mov
mov
mov
subl
xor
add
adc
xor
andl
xor
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
addl
push
xor
push
xor
mov
add
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
and
andl
xor
movl
movl
and
mov
mov
xor
xor
add
mov
orl
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sub
mov
sub
xor
mov
addl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
xor
xor
xor
sbb
mov
mov
mov
sub
imul
addl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
or
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
xor
mov
addl
sbb
mov
sub
mov
andl
xor
mov
mov
mov
dec
mov
andl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
jmp
test
icebp
arpl
scas
push
dec
sahf
loop
imul
pop
bound
or
lret
cmp
sbb
jb
inc
lcall
push
sbb
sahf
sbb
sub
dec
add
das
adc
fnstsw
fisubrl
movsb
rorl
sub
add
add
and
js
mov
mov
enter
fcmovnb
fsubrs
cmp
or
fwait
sbb
rol
rolb
mov
mov
fidivl
test
pop
shlb
es
inc
insl
jns
sti
insb
mov
inc
stc
push
and
loop
pushf
fiaddl
pop
rcl
int3
movsl
cmp
test
call
jb
xor
xor
inc
leave
push
call
outsb
mov
jg
sub
jbe
jno
sahf
ljmp
aam
adc
out
jne
and
frstor
ds
or
ja
mov
pop
jmp
push
inc
push
jno
sahf
inc
pop
dec
xchg
xchg
and
adc
sti
inc
xorb
lods
fwait
shll
stc
cs
cmp
sub
push
cmpsb
fucomp
arpl
outsl
stos
push
int3
dec
pop
add
std
pushf
jecxz
cld
or
xor
fwait
pop
push
adc
dec
out
mov
adc
or
stos
and
and
lret
out
cmp
jg
mov
in
mov
call
mov
aaa
cmpb
or
lock
add
cmp
icebp
mov
mov
xor
inc
cltd
cmc
xor
xchg
jnp
mov
add
mov
fwait
lret
or
jnp
shll
sbb
and
mov
dec
stos
inc
popf
pop
jmp
in
pop
sub
dec
lds
xchg
movsl
insl
sub
stos
daa
sub
lods
cld
sub
mov
cmpsb
inc
hlt
push
adc
in
mov
xor
ss
jne
cs
divb
cmp
xor
lahf
add
fwait
cmp
sbb
push
jl
testl
psrld
fisubrl
js
mov
push
and
mov
dec
int
inc
push
push
xor
das
hlt
lea
dec
jae
andl
into
push
mov
outsb
loop
dec
lods
insl
xchg
xor
sub
into
mov
lock
mov
mov
nop
pop
cmpsb
xor
xlat
jne
js
xor
or
cmp
ds
xor
and
adc
pop
push
mov
adc
jb
imul
out
xor
sbb
mov
ja
std
hlt
and
inc
cltd
adc
enter
cmp
and
call
mov
mov
mov
lock
adc
jnp
pop
push
lock
adc
outsl
pop
leave
cltd
push
test
xor
cmpsb
shrl
push
loop
pop
jle
sbb
mov
mov
sub
bound
ss
dec
or
lods
ss
rcl
lret
test
lods
cmp
inc
cmpsb
idivl
mov
sub
or
filds
adc
add
xchg
cmc
int3
push
outsl
sbb
inc
xchg
fwait
outsl
jnp
jno
mov
loop
mov
mov
push
add
push
dec
cmp
loop
pop
sbb
xchg
lcall
inc
nop
mov
mov
xchg
stos
imul
push
cs
bound
jns
lcall
adc
ss
xchg
jle
add
or
mov
inc
pop
mov
xor
cltd
and
adc
or
or
hlt
jle
sub
loope
je
cmp
lea
and
inc
xor
out
scas
out
incb
movhps
loopne
stc
mov
pop
jnp
dec
inc
insl
pop
test
jae
mov
cmp
pop
mov
jne,pt
sbb
pop
jb
movsl
or
movsb
sahf
inc
arpl
arpl
outsl
loop
jmp
mov
fisubs
sub
adc
add
push
orb
mov
sub
adc
ds
mov
std
in
je
adc
cltd
jnp
leave
and
xchg
js
insl
cmp
push
or
xor
mov
push
jg
mov
ror
mov
dec
adcl
adc
pushf
jno
dec
add
xor
or
sbb
inc
cmp
out
lds
cmpsb
mov
in
sub
mov
dec
loop
or
in
mov
enter
sbb
lcall
mov
stos
dec
push
sbb
fisubrl
sti
jns
jl
and
imul
popa
xor
cmpb
andl
stc
mov
adcb
dec
xchg
cmp
lock
jl
sub
xor
pusha
sbb
dec
adc
push
adc
nop
ja
cld
loopne
sahf
mov
pop
cmp
mov
lret
jle
mov
bound
in
testl
cltd
fstpl
mov
jo
xchg
cmp
icebp
mov
out
adc
adc
popf
pop
jne
add
inc
or
sub
mov
xchg
cli
xorl
push
jle
push
dec
andl
inc
and
lea
pop
mov
pop
push
mov
call
hlt
insb
cmp
push
add
jp
push
push
into
sbb
sub
in
neg
dec
sub
arpl
idivl
cmp
and
pop
jnp
sbb
repz
cmp
add
and
leave
mov
pop
outsb
dec
fsubrs
add
cmp
pushf
adc
in
push
std
push
mov
mov
sti
jb
and
aaa
fists
inc
pushf
fisttpl
push
ss
jb
movsb
mov
lcall
stos
nop
adc
lock
pop
jl
pop
loop
addl
mov
les
jae
pop
xchg
pop
lret
decb
cltd
loop
mov
sahf
push
inc
add
inc
outsb
dec
sti
shufps
frndint
mov
ficoml
mov
dec
flds
push
push
daa
jp
clc
insb
lret
or
and
jne
lcall
ds
mov
xchg
dec
shr
mov
scas
xchg
mov
repnz
outsl
scas
pop
sbb
por
mov
aad
push
push
xchg
push
cmp
lock
xchg
xchg
and
loope
xor
jle
cmp
test
pop
bound
xchg
mov
in
repnz
incl
movsb
in
aaa
adc
jb
and
jns
add
and
dec
js
mov
dec
test
xor
jge
scas
mov
jbe
scas
dec
inc
jno
add
cld
push
push
inc
mov
sti
xchg
fnsave
mov
je
jmp
mov
and
pop
call
mov
repz
in
sub
jb
inc
pushf
adc
stos
repz
lahf
mov
push
insb
lahf
fs
adc
cmpsl
cs
icebp
mov
inc
xor
and
sub
stc
incb
or
rclb
fsubl
out
or
jmp
outsl
cltd
and
incb
aad
jb
pop
cmp
mov
imul
fwait
mov
cmp
sbb
rolb
mov
xchg
cmc
je
in
fcoms
imul
jp
pop
mov
dec
dec
shr
aad
push
ja
or
mov
jnp
daa
xchg
aam
xchg
sbb
jmp
mov
inc
test
jns
jae
add
cmpsl
jge
xlat
setae
dec
dec
stc
sar
int3
adc
lret
mov
push
mov
add
xchg
xchg
shl
mov
push
jae
fwait
jmp
push
pushl
xchg
mov
inc
outsl
pop
mov
stc
mov
dec
and
mov
mov
cmc
ret
pop
stos
lar
fdiv
cmp
cmp
add
bound
or
inc
mov
push
mov
pop
dec
pushf
and
sub
inc
xor
inc
mov
fistpl
mov
pop
push
adc
idivb
into
shlb
mov
lcall
cmp
mov
sti
xor
and
push
or
pop
fstpt
pop
add
and
lods
test
xchg
push
test
adc
xor
sub
jle
cmc
icebp
xchg
in
movsb
mov
pusha
int3
inc
cli
jp
cmp
jno
or
ret
dec
into
inc
mov
movsb
jecxz
std
sbb
xorl
jecxz
popw
cmpl
and
sbb
jle
out
cmp
sub
xchg
xor
js
in
xchg
jno
fcoms
mov
jmp
loop
shrl
shrl
dec
pop
hlt
sbb
imul
jnp
and
jae
addb
pop
add
enter
repnz
pop
mov
aad
jb
dec
jecxz
aam
or
in
daa
and
test
out
inc
or
aas
or
mov
push
cmp
jle
fsub
rorb
jns
fwait
jmp
mov
stos
lcall
cmpsb
or
leave
adc
into
mov
push
aaa
mov
or
fstpt
lret
jmp
adc
push
and
lods
jmp
mov
shlb
lock
fdivrp
mov
in
add
pop
jae
shrl
jno
jmp
push
xchg
lret
lret
fisubrl
mov
mov
inc
mov
mov
jg
out
push
imul
daa
xchg
ds
jne
scas
dec
mov
push
popa
fsubrl
fistpll
sbb
dec
dec
ss
pop
das
das
pop
std
xchg
adc
jno
xchg
dec
sqrtps
repz
sbb
jp
je
into
jl
cltd
sub
jae
dec
dec
std
mov
gs
mov
pop
sti
clc
cmpl
cli
and
push
xor
push
sbb
inc
xor
iret
ljmp
mov
dec
adcl
sbb
scas
adcl
jno
adc
das
test
fwait
mov
and
into
or
add
mov
sub
dec
repz
adc
rclb
adc
fidivl
mov
mov
pop
in
les
xor
orl
xor
or
add
rolb
lea
sub
movaps
stos
dec
inc
rcll
out
dec
es
pusha
test
lock
mov
into
jl
cmpsb
xchg
cmp
stos
pushf
sbb
or
inc
iret
rcrb
loope
xchg
stos
pop
pop
xlat
dec
aas
inc
dec
jne
cmpb
mov
ror
fidivl
push
lods
push
bound
xchg
popa
ret
or
rcr
push
pusha
dec
arpl
subl
sbb
roll
ljmp
xrelease
sbbl
jo
aaa
stos
icebp
sbb
and
frstor
and
mov
dec
jle
mov
ljmp
sbb
inc
rcrl
jp
leave
dec
or
lea
lock
lret
int
inc
negl
sti
iret
idivl
cmp
hlt
inc
push
fs
xor
hlt
jno
mov
pusha
dec
je
cmp
xchg
out
ss
pop
shll
into
sbb
xor
je
and
cld
jp
rolb
sub
mov
loope
je
push
insl
sti
int
rorb
loope
mov
fldenv
filds
or
idivb
test
mov
mov
cld
scas
cli
or
std
dec
test
mov
out
fsubrs
das
jmp
lds
mov
jno
enter
dec
popf
pop
imul
stos
cmp
pop
mov
dec
ret
mov
fucom
mov
lea
jno
cmp
push
sub
testl
dec
repz
push
out
repz
pop
les
arpl
xlat
push
in
xor
call
mov
pop
sub
daa
pop
pop
decl
xchg
push
mov
sub
push
jne
inc
inc
shrb
pushf
ja
or
xchg
pop
ret
and
pop
cmc
ficomps
sub
push
add
sub
add
add
pop
pop
xor
insb
lods
jns
dec
mov
jbe
and
pushf
ret
jno
loope
xchg
pop
pop
mov
insb
jge
adc
xor
leave
fbstp
mov
fnstsw
inc
sub
rcrb
imul
xor
rcrb
xlat
push
jl
adc
out
mov
fwait
scas
mov
mov
xchg
les
lahf
ljmp
xchg
mov
cmpsb
sarl
cmpsb
in
ret
lcall
lret
pop
clc
lods
xchg
or
pop
jge
pusha
dec
cld
and
fiadds
adc
xchg
push
xchg
sbb
dec
test
in
setne
das
loopne
popa
shl
sub
mov
aas
sub
shlb
mov
inc
outsb
add
outsb
sbb
dec
jno
add
ljmp
aas
mov
pusha
out
xlat
rcr
les
dec
push
or
pop
ja
jns
xchg
and
lods
test
mov
and
lods
fnstenv
jo
xor
sbb
jno
je
pop
cmp
jae
mov
jne
lock
inc
lds
add
cmp
push
sti
mov
mov
divl
pop
outsl
and
pop
sti
rcrl
cmc
xor
mov
xchg
push
mov
inc
movsb
xchg
sbb
mov
push
mov
hlt
xlat
gs
dec
rcrb
cli
cmpb
push
inc
jo
xor
test
ret
fsubrs
lret
jno
lahf
jae
add
xor
sbb
or
ror
xchg
adc
lds
push
push
fildl
xchg
xchg
mov
push
incl
psubsb
in
xchg
les
fisubs
repnz
out
and
sbb
push
xlat
push
addr16
enter
adc
sub
sub
mov
lods
push
mov
mov
dec
cli
pop
and
movsb
or
dec
pop
nop
out
and
dec
or
out
out
and
push
cld
aas
jo
xchg
push
mov
pop
ja
outsb
stos
fs
and
and
imulb
sub
mov
pop
repnz
jmp
adc
das
jge
push
call
sbb
mov
negb
mov
stos
movsb
push
loop
in
fists
dec
pusha
in
int3
xchg
xor
sub
cmpsb
int
repnz
dec
pusha
cld
movsl
ret
fldl
out
fidivl
dec
test
into
pop
mov
pusha
pop
insl
aas
cmp
pushf
jns
pop
stos
repz
inc
test
xchg
lcall
fistps
cmpsl
aam
xchg
mov
xchg
imull
stos
pop
hlt
mov
lods
outsl
jg
sahf
push
inc
daa
sar
data16
pop
repz
pop
pop
scas
adc
add
mov
jae
sub
mov
les
pushf
add
cmp
test
aam
xor
jne
xchg
imul
enter
std
push
inc
xor
cmp
fmull
insb
rorl
or
dec
lea
movsb
repnz
or
dec
push
loop
movsl
rorb
pop
clc
mul
sub
xchg
dec
and
xchg
std
cmp
cmpsl
data16
ljmp
adcl
push
xchg
pop
pop
adc
jbe
pusha
or
or
and
push
aam
sbbb
or
aas
pop
in
call
inc
xor
movsb
mov
cmp
sahf
adcb
mov
cmpsb
cmpsl
cmp
lea
iret
fsubrl
xchg
dec
in
push
je
xor
insb
shlb
daa
pop
fdivrs
lds
psadbw
and
rolb
xchg
lret
or
test
sub
push
dec
arpl
cmp
cld
inc
sub
mov
lock
loop
lcall
movb
movsb
jmp
pop
add
inc
pushf
in
subb
add
shr
popf
loop
pop
in
adc
gs
sbb
bound
or
fistps
jns,pn
into
fcmovnb
xor
or
data16
dec
mov
subl
jp
in
add
andl
pop
out
imul
je
iret
xchg
fadds
hlt
cmpsb
mov
pop
cmp
sub
inc
loopne
test
cmpsb
aam
inc
lock
or
mov
in
xchg
push
xor
loop
add
lock
das
push
xlat
std
cmp
fwait
rcrl
fisttps
pop
and
and
pop
lock
out
mov
out
and
rcrl
iret
lea
and
lea
pop
sar
xchg
jno
push
jno
pusha
ret
add
test
insb
mov
mov
pop
dec
lods
sbb
adc
clc
jmp
push
and
lods
dec
prefetchwt1
or
inc
pusha
push
jp
mov
pop
in
iret
xor
shlb
shrl
js
xlat
push
sub
std
rcll
mov
pop
sbb
push
xor
btr
cwtl
hlt
jns
fwait
pop
ja
sarb
mov
inc
push
mov
xor
sbb
in
enter
int
je
cwtl
aam
aad
cmp
jns
shrl
mov
and
cvtpi2ps
pop
movsl
lret
sub
fistps
outsl
icebp
scas
aaa
outsb
xchg
sarl
and
hlt
or
lods
out
or
fistps
xchg
aaa
sub
xchg
pusha
add
cwtl
add
mov
scas
call
fidivrl
mov
sub
movsb
jno
mov
loope
jge,pt
adc
js
int3
enter
sub
add
mov
push
adc
loope
scas
mov
add
mov
test
jo
push
stc
jle
mov
or
imul
scas
jle
jnp
push
int3
push
push
out
loopne
das
push
cmpsl
sbb
das
cld
push
outsl
outsl
push
ljmp
mov
pop
xor
cs
ljmp
pushf
lods
std
mov
push
roll
pop
or
mov
sarb
sbb
pushf
shlb
cmpsb
add
pop
adc
mov
cmc
popa
test
cltd
lods
mov
aas
sbb
jae
in
add
in
fsubrs
push
lods
mov
cmpsb
lret
stos
pusha
es
outsb
adc
sbb
or
cs
clc
enter
jge
stos
stc
jne
adc
jl
les
in
xchg
push
jecxz
lret
and
push
push
mov
push
lahf
lods
les
xchg
es
bound
mov
jge
mov
mov
cld
or
pop
and
cmp
mov
xor
jnp
fs
xor
xchg
mov
push
pop
into
push
shll
jmp
mov
pushf
sub
jp
xlat
mov
pop
data16
cmp
and
movsb
mov
mov
sti
push
mov
insb
int
mov
pop
mov
shrl
int
or
popa
add
popa
rcrb
nop
lret
adcl
mov
jnp
sub
push
pusha
push
sub
adc
in
out
outsl
xor
xlat
sbb
jecxz
psubd
push
loopne
jne
cmp
lret
jo
pop
lahf
int3
lret
jns
fsts
jno
add
xchg
imul
push
xchg
mov
imulb
out
shlb
sub
icebp
sahf
fdivl
sarl
or
imul
movsl
aad
sub
push
pop
or
iret
fs
mov
cwtl
pop
xchg
mov
xor
aad
ljmp
jp
mov
and
hlt
jle
fucomi
inc
push
mov
iret
lea
outsl
sahf
xlat
mov
or
adc
lcall
roll
sub
out
dec
fidivs
fs
das
lret
pop
jb
cmp
sbb
mov
add
scas
jbe
and
hlt
and
fwait
scas
and
rcrb
pop
inc
pop
cmpsl
cmp
dec
inc
cmp
scas
daa
or
adc
ja
stos
push
sbb
data16
cld
ss
inc
stos
add
lock
pop
sub
push
pop
rorl
data16
filds
test
cli
les
and
rorb
xchg
int
cmpsl
out
sub
rclb
out
jmp
movsb
leave
jmp
ret
lds
shl
testl
mov
fs
cmp
js
xor
shll
shll
jp
enter
cld
inc
xlat
sbb
sahf
das
dec
mov
out
js
sbb
jae
decl
sub
or
pop
daa
dec
ret
inc
or
sarb
sub
in
adc
sar
dec
fwait
sbb
inc
insb
and
loop
jle
jp
dec
test
test
mov
repnz
popf
insb
sub
js
push
push
movsb
fbld
nop
dec
xchg
notb
cmp
testb
pop
xchg
add
aas
into
push
iret
mov
jl
pop
ss
movl
pop
adc
push
mov
jbe
mov
jo
dec
mov
push
std
fldenv
jmp
cmp
sbb
fidivl
scas
or
mov
jae
cmp
in
pop
in
stos
jp
addr16
les
in
fstpl
mov
bound
pop
jecxz
clc
rcr
popa
mov
xlat
sub
stos
sub
xor
pusha
mov
adc
cld
and
lret
jmp
xor
lock
in
lods
sub
cwtl
fldt
mov
mov
sahf
and
enter
jg
mov
mov
repz
ffree
aas
leave
sbb
repz
loop
sub
adc
cltd
data16
lds
outsb
cmpsl
sbb
data16
outsb
fistpl
nop
push
dec
push
or
push
jg
push
adc
jp
pop
cmc
xor
cmp
mov
jmp
std
and
sbb
push
and
sub
je
xchg
push
push
ss
lds
or
jne
xor
insl
movsl
xchg
mov
jmp
ljmp
jne
inc
cli
fisttpll
mov
cltd
repnz
cli
scas
repnz
jo
pop
icebp
adc
pop
ds
ret
fwait
sbbb
inc
add
gs
into
lahf
fistpl
lods
add
outsl
jb
mov
pushf
dec
mov
in
sbb
loop
out
es
loop
dec
jg,pn
push
nop
mov
push
jnp
data16
sbb
or
test
out
mov
dec
cs
xor
xor
pop
ljmp
push
popf
in
cmpsb
mov
andb
jle
cs
pop
jmp
scas
pop
xchg
sub
icebp
fadds
ret
adc
mov
lock
divl
mov
stos
adc
sub
addl
outsl
movsl
or
inc
mov
push
or
xor
fnstenv
fnstenv
mov
popf
fists
add
sub
xchg
xlat
sbb
lret
mov
subb
movsb
push
mov
adc
loopne
push
mov
xor
add
or
fldt
pushf
inc
cmpsb
xchg
xchg
jae
xchg
inc
dec
sbb
popa
or
push
ret
xor
aaa
cld
fs
inc
jno
jns
adc
pop
add
mov
jp
int3
adc
popf
pop
jmp
or
mov
stc
push
jecxz
stc
int3
cwtl
sarb
cwtl
fldenv
je
cmpsb
sar
lea
jg
mov
mov
mov
cmp
sub
les
cmpsl
pop
clc
xor
push
and
xor
pop
inc
jmp
adc
cltd
cmp
push
scas
fwait
ds
mov
mov
mov
jns
or
xor
push
or
push
outsb
js
pop
sub
fisttps
movsb
sub
and
jp
jp,pt
imul
arpl
into
fs
xor
cmp
jb
lds
gs
in
pusha
das
fdivrl
aam
xor
jg
orl
je
or
push
ror
divl
fwait
jno
or
mov
pop
add
es
mov
sub
mov
dec
jb
mov
mov
lret
and
in
mov
outsb
pusha
or
test
clc
sub
dec
mov
das
cwtl
sbb
icebp
jge
mov
mov
int
clc
xchg
scas
gs
test
loop
decl
imul
outsl
sbb
rcrb
leave
xor
pop
jae
sub
or
negb
repnz
xchg
outsb
sbb
mov
adc
cmc
push
mov
ret
inc
fildll
jl
arpl
mov
adc
or
ret
xchg
mov
std
add
push
sbb
int3
push
je
pop
insb
ret
int
or
into
inc
in
add
mov
mov
add
xchg
fidivl
dec
pop
jbe
out
jno
dec
movhps
mov
out
mov
cs
cmpsb
dec
pop
lret
pop
loope
or
sub
push
jmp
arpl
dec
mov
fcmovnu
sub
jle
loop
or
and
int3
insb
push
inc
xchg
ljmp
mov
push
mov
push
js
lock
dec
dec
cmp
xchg
fs
pop
jae
lds
roll
add
mov
push
mov
test
cld
adc
or
xor
shll
stos
stc
jg
das
sub
dec
cltd
adc
mov
pop
cwtl
in
jg
push
push
or
fdivrl
stos
andb
push
jne
cmc
jb
jecxz
sbbl
and
jno
dec
ljmp
outsb
and
sub
setbe
add
push
inc
rcrl
xor
push
jecxz
push
xchg
es
jmp
and
cmpsb
jmp
lods
daa
mov
fstpl
adc
sahf
movsb
pop
jno
push
addl
pop
xor
shlb
cmp
popf
mov
sbb
adc
mov
je
sub
pop
mulb
popf
adc
cmp
push
mov
bound
loope
pop
mov
icebp
fadd
adc
cmp
mov
mov
dec
push
sub
cmp
xlat
xor
aad
andl
adc
mov
mov
dec
lcall
mov
mov
sub
jg
adc
mov
mov
sbb
xchg
or
pop
stos
lods
js
in
push
mov
push
int3
sar
inc
leave
xor
movl
push
inc
clc
inc
xlat
movsb
fisttpll
idivb
adc
mov
push
lods
pop
movsb
call
fwait
mov
jbe
and
pop
sbb
movsl
sbb
mov
cmp
xchg
lds
push
lds
imul
aam
fisttpl
in
mov
sbbb
call
nop
repnz
in
mov
nop
test
pop
repz
push
mov
cmp
xorl
pop
push
ds
fsubs
dec
mov
sarb
or
mov
and
jecxz
inc
fnstcw
sar
pop
push
cs
subb
and
add
andb
mov
test
in
pop
pop
xchg
pop
test
add
add
jnp
jecxz
push
lods
loope
std
jae
fdivl
push
sar
mov
sub
addl
dec
mov
dec
cld
and
es
ret
xor
movsw
int
ss
xlat
jle
sub
lret
jecxz
mov
cmpb
mov
push
movsl
mov
lret
inc
addl
push
mov
fdivl
or
shll
push
cli
mov
loope
fistpll
and
jg
mov
scas
cmpl
sbb
jg
arpl
jo
push
sbb
mov
cmp
sub
mov
push
pop
or
test
push
sbb
jle
stc
pop
mov
mov
test
cmc
mov
shll
xchg
rcrl
stos
add
sub
adc
mov
movsb
ds
leave
test
xor
cmp
popa
int3
xchg
xlat
pop
add
mov
stos
dec
adc
enter
mov
inc
leave
mov
xchg
mov
es
push
adc
insl
fcmovb
mov
fwait
into
cmpsl
pmovmskb
jmp
jl
sbb
repnz
cmp
lock
int
test
mov
mov
and
mov
push
sub
aas
pushf
outsl
fistl
mov
pushf
out
push
xchg
ss
dec
scas
pop
mov
ret
ds
mov
ret
push
lcall
pop
out
push
sub
movsb
out
mov
pop
jns
mov
int
sbb
enter
jbe
mov
data16
mov
inc
xor
mov
xorb
jae
adc
push
mov
repnz
inc
idiv
adc
mov
mov
repnz
pop
adc
pop
flds
pop
xchg
sahf
mov
or
cmpsb
add
sbb
xor
out
daa
jnp
sub
shr
fstps
xor
xchg
add
loope
adc
js
xor
xchg
jge
aas
enter
mov
push
lea
clc
lret
outsl
rorl
pop
adc
sti
jge
dec
imul
push
and
clc
insl
lahf
pop
ret
inc
data16
mov
outsl
sub
addr16
cltd
cmp
xlat
mov
stos
in
jge
cmc
inc
inc
cmc
xor
adc
sbb
out
fisttpl
inc
mov
sbb
xchg
out
scas
aaa
out
shll
adcb
fwait
pushf
sbb
cs
lock
insl
in
mov
ljmp
in
sbb
fadd
pop
aas
sub
inc
xchg
cmp
data16
les
lods
imul
pop
mov
adc
push
das
rol
jl
fistps
xchg
daa
stc
out
dec
cmpsl
xorb
lea
iret
xor
mov
mov
mov
clc
rol
sub
out
sbb
ss
imul
das
scas
lock
push
dec
inc
or
sti
mov
rolb
scas
and
mov
add
ss
adc
clc
pop
mov
sub
in
jno
cmp
jge
sub
pop
in
push
or
mov
es
out
or
je
repz
mov
out
inc
mov
movsl
xchg
sbb
xor
lahf
jl
xor
cld
add
inc
sub
mov
pop
les
inc
jecxz
push
xor
fs
test
sti
nop
mov
push
xchg
cmp
jo
add
rorb
pop
add
movsl
mov
mov
sbb
fcomps
push
mov
mov
test
adc
sub
test
lahf
push
fs
inc
mov
push
cli
popf
into
add
cltd
xor
cld
data16
jmp
mov
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
jmp
jp
int
ret
add
pop
icebp
dec
stos
adc
push
pop
bound
cmp
cmc
cmc
pusha
addl
add
adc
fs
jg
enter
fmuls
pop
inc
ljmp
sub
pop
jbe
negl
pop
aad
inc
stos
ficoms
push
sbb
jns
jbe
sti
push
mov
fstl
mov
ficoml
and
int
fcos
inc
sahf
into
cmp
addr16
inc
pop
sub
aam
cmp
mov
xchg
push
xlat
mov
or
pop
push
and
dec
jns
pop
jb
gs
inc
sti
les
and
insl
cmp
movsl
sub
lcall
aas
add
test
test
insb
in
mov
add
pop
jns
cltd
lcall
ljmp
push
mull
xchg
cltd
fcmove
aam
movsb
popa
push
xor
stc
jl
sbb
xchg
adc
sub
popf
mov
fs
int
jmp
pop
bound
xor
lret
mov
into
sarb
xor
sub
jbe
rorl
mov
les
pop
adc
adc
xlat
xchg
jae
lahf
addl
pop
adc
adc
bound
movsl
cld
and
sbb
aam
fnsave
das
sub
cmpl
add
add
data16
adc
pushf
push
push
adc
and
lret
in
lret
std
mov
jg
jno
and
fdivl
into
shrb
jge
xchg
jo
push
hlt
psubd
and
and
scas
out
push
lods
je
cmp
pop
sub
loope
cmc
xchg
sbb
in
mov
cltd
repz
xor
nop
jbe
mov
xor
popf
xor
jns
adcb
jne
push
call
sub
outsl
in
mov
imul
call
mov
mov
test
adc
mov
mov
dec
lods
or
jmp
xlat
inc
out
les
in
out
mov
pop
cltd
cmpsb
cltd
pusha
fwait
fs
mov
xchg
inc
adc
jge
xor
jecxz
jl
pop
outsl
add
cmp
push
into
repz
int
cli
inc
nop
shlb
cmp
insl
and
and
lahf
daa
lods
es
cmpl
pop
loopne
aad
imul
lret
and
push
pushl
cmc
test
ja
nop
cltd
and
loopne
xchg
mov
sbb
out
jle
and
test
adc
ljmp
and
xchg
adc
stos
shll
push
or
sub
sti
inc
adc
pushf
icebp
insl
aam
hlt
outsb
jno
mov
nop
ljmp
or
mov
test
jno
fcompp
mov
inc
loopne
or
mov
mov
adc
scas
aas
fcom
mov
inc
mov
scas
adcl
cmp
negl
fistpll
andb
xlat
dec
cmp
jne
xchg
jmp
cli
mov
inc
int
or
imul
mov
cmp
mov
mov
in
mov
je
sbb
or
fdivrp
mov
ljmp
shr
mov
adc
xor
add
cs
mov
mov
mov
shll
les
dec
dec
rcrl
outsb
inc
into
jns
push
enter
inc
cwtl
lods
jb
jle
pop
fdivrp
xlat
leave
mov
push
mov
ds
ret
insl
push
push
fwait
jns
dec
jo
or
shlb
jl
and
das
dec
cs
add
das
jno
scas
xchg
xlat
fmul
mov
ficoms
and
pusha
jle
aam
xchg
pop
xor
stos
pop
lcall
cmp
aaa
lds
inc
or
icebp
sub
out
dec
ret
xor
dec
push
lds
shll
std
test
fisubs
push
je
push
iret
in
sub
push
fldenvs
lea
push
popa
or
mov
lcall
sbb
push
mov
aas
or
aad
inc
das
stc
pop
out
stc
xchg
ret
insb
jne
sbb
jmp
push
inc
lret
cmp
or
adc
xchg
xlat
push
and
sbb
add
cmp
ljmp
mov
dec
cmp
insb
cbtw
mov
enter
fiadds
test
out
mov
jg
test
shl
sahf
jae
aam
adc
notb
or
fistpl
std
movsb
inc
enter
pop
sub
xor
roll
ljmp
jno
push
dec
or
xchg
jmp
mov
out
cmp
mov
jno
cmp
mov
pop
mov
test
inc
push
mov
mov
fisttpll
lods
push
sub
or
jmp
cli
cmp
push
push
insb
mov
mov
cmp
subb
sub
or
sub
test
fstp
sbb
aad
les
scas
sub
push
test
dec
lock
adc
cmp
scas
test
cwtl
cs
adc
and
push
lods
pop
lods
mov
xchg
jmp
addr16
imul
fwait
sbb
loope
jbe
scas
cmp
sti
mov
fsubp
movb
or
xchg
jecxz
inc
pop
lcall
sbb
hlt
sahf
lret
sub
sbb
fwait
hlt
gs
loopne
mov
imul
fcomip
xor
mov
or
mov
cmc
adc
and
jle
jno
push
fsts
cmp
mov
or
mov
mov
cwtl
pop
jmp
aam
dec
pusha
mov
cs
or
mov
mov
mov
loope
nop
cwtl
shl
xor
mov
scas
inc
div
sbb
lret
mov
mov
les
cli
pop
outsl
lds
cwtl
xchg
int
mov
inc
pop
push
add
scas
jp
pusha
dec
sub
xor
mov
mov
inc
mov
or
pop
jnp
mov
xchg
movsb
mov
and
add
mov
jnp
aad
fadds
mov
hlt
adc
or
lret
pop
idivb
push
roll
out
mov
sub
gs
sub
and
adc
pop
lds
mov
insb
or
push
mov
jmp
dec
orl
mov
fcmovnb
ret
push
hlt
enter
jl
jg
or
sub
xchg
imul
mov
daa
imul
xor
mov
popf
std
clc
xorb
xor
xlat
fiaddl
or
xorl
stos
repnz
xor
pushf
xor
shrb
xchg
mov
in
xchg
sub
xchg
cmc
out
adc
neg
xlat
loope
mov
pop
jmp
pop
xor
cmp
packuswb
mov
pop
mov
and
pop
sti
lock
adc
fwait
icebp
fcoml
sbbb
fisubrs
push
seta
cmc
addl
push
cmp
cmp
dec
push
mov
and
xchg
xor
pop
or
jge
xlat
mov
pop
mov
add
jl
lods
repz
xor
rcl
out
das
lods
insl
inc
adc
pop
jl
test
cli
sar
or
push
pop
shl
xlat
mov
pop
leave
sub
out
les
arpl
jnp
dec
and
test
popa
push
lahf
cmpsb
adc
mov
dec
imul
or
in
push
jns
les
lds
sub
repnz
mov
xor
xor
aam
mov
dec
cmp
jne
shlb
inc
adc
inc
adc
sbb
jge
rclb
mov
and
les
lcall
rorb
dec
rcl
push
inc
addl
into
imul
cmpsb
scas
out
mov
and
out
sub
dec
dec
dec
push
mov
fucomip
fwait
dec
ljmp
test
dec
test
in
push
xchg
es
insl
mov
jns
push
mov
pushf
fldl
and
subl
adc
and
push
mov
sti
mov
cmpb
mov
or
add
mov
mov
fdiv
pop
dec
ret
mov
jmp
mov
sar
out
stc
in
mov
data16
test
jbe
insl
mov
pop
lods
adc
shr
xchg
or
ficomps
mov
stos
xor
scas
add
stc
mov
dec
push
dec
mov
xor
in
xchg
ret
in
loop
stc
fcoms
inc
daa
fisubs
push
mov
inc
aad
pop
pop
scas
lahf
xlat
and
add
mov
push
jae
mov
lods
adc
or
out
xor
and
push
adc
fdivl
xor
loope
push
sub
add
push
pop
xchg
mov
jmp
dec
ds
mov
push
fisttpl
push
cmp
mov
cs
inc
push
rcrl
pop
je
aas
sbb
int3
leave
out
repnz
shl
push
pop
xlat
xchg
cli
cmp
sbb
pop
xchg
sbb
add
cmp
cltd
adc
mov
pop
mov
xor
ret
mov
mov
aad
fisubrs
lahf
nop
inc
scas
xchg
xchg
out
lcall
into
clc
stos
daa
inc
pop
push
ror
xchg
push
mov
shlb
sbb
and
mov
cwtl
mov
repnz
stos
gs
jae
iret
inc
out
mov
jbe
or
leave
fists
dec
call
cmpsb
jns
cld
sub
xchg
inc
rorl
mov
mov
loope
lods
mov
jmp
fwait
call
xor
lret
call
dec
daa
adc
cmp
leave
hlt
fsub
push
imul
outsb
sbb
into
das
nop
ret
and
lahf
loopne
imul
mov
xchg
pop
cmp
inc
push
aaa
xchg
mov
pop
sbb
jnp
push
add
das
jo
sub
or
pop
inc
ret
and
faddp
pop
xchg
mov
push
jbe
jp
out
and
and
icebp
adc
test
movsl
push
mul
aas
xchg
or
sub
nop
lds
pop
xchg
aad
cmp
mov
movsb
push
adc
pop
mov
push
insb
icebp
ja
out
cmp
mov
inc
js
pop
push
mov
cmp
lds
inc
js
popf
test
jns
jle
out
out
shrl
pop
es
ja
mov
andb
loope
xchg
icebp
js
std
scas
push
outsb
push
mov
sub
adc
scas
and
cltd
roll
adc
int3
or
notb
cmp
les
mov
lods
fs
mov
scas
loop
xor
xchg
xchg
lcall
sbb
sub
mov
mov
sbbb
mov
je
cmpsb
jo
neg
mov
ja
icebp
push
xchg
stos
arpl
pop
jnp
pop
and
mov
inc
aad
clc
sbb
dec
stos
insb
sbb
or
pop
sub
fbld
cmp
cmp
xchg
xor
cld
sbbb
push
inc
pop
outsl
in
test
mov
inc
fbld
fimull
popl
add
xchg
insl
xchg
flds
addl
cltd
nop
loop
pop
lret
xor
mov
xchg
push
ds
inc
dec
lea
sbb
out
mov
sarb
cs
or
pop
pop
add
mov
lods
js
and
push
sbb
ja
lcall
jns
mov
clc
mov
xor
movsb
or
mov
sbbl
repz
into
jle
out
fwait
insl
sub
pop
xlat
xchg
sbb
xor
pushf
andl
sbb
ss
push
hlt
int
push
jbe
sbb
push
ret
mov
jnp
push
sub
cmpsb
sub
movsl
jbe
pop
or
mov
mov
cwtl
hlt
roll
icebp
shl
mov
push
ds
jae
jl
and
pop
imul
ljmp
sbb
pop
ficoms
inc
adc
mov
jge
daa
xchg
cli
jb
adc
and
punpckhwd
in
mov
add
push
out
jno
mov
push
movsb
cmp
and
mov
xor
pop
jno
xchg
push
mov
neg
out
xchg
push
icebp
inc
mov
mov
insb
inc
lret
loopne
add
and
shlb
les
lret
cmp
cwtl
mov
push
outsb
rcrl
arpl
xor
pop
bound
and
scas
insb
imul
lods
testb
les
mov
mov
pop
in
ss
cwtl
mov
fisttpll
rcl
dec
mov
sti
pop
and
push
add
pop
xchg
add
test
gs
hlt
pop
icebp
notb
push
dec
enter
mov
movsl
xor
and
lods
jno
jae
loop
dec
lahf
dec
mov
xchg
out
cmpsl
mov
and
mov
rol
push
pop
pop
jmp
push
sub
jg
test
and
gs
sub
inc
test
inc
jg
xor
cs
fcmove
mov
adc
mov
rclb
inc
jns
cld
ret
push
negl
cmp
mov
jns
add
jnp
repnz
xchg
fdivl
or
xor
mov
enter
ja
inc
dec
in
mov
shl
jo
add
jno
or
es
pop
ds
add
pop
sbb
sbb
cmp
pushf
mov
push
notb
sbb
cmp
into
sub
repz
cmp
inc
scas
inc
outsb
cmp
mov
aaa
stos
sub
add
pinsrw
jecxz
fildl
push
jmp
mov
adc
cmp
ret
insl
out
les
sub
or
cmpl
fisubl
cmp
sarb
or
jns
out
cltd
push
mov
sub
ret
sbb
loopne
int3
cmpsb
mov
cld
je
movsb
icebp
lret
and
cmp
jae
xor
pop
js
mov
in
xor
sarl
movsl
negl
inc
mov
xchg
mov
fnstsw
pop
sbb
inc
ds
mov
add
addl
and
loope
add
pusha
stc
out
push
jecxz
mov
or
pushl
jb
xchg
mov
jns
lret
dec
lret
in
mov
ss
in
pop
push
cs
jb
rol
dec
es
push
out
or
loopne
xchg
mov
imul
adc
sbb
shll
repz
ljmp
or
push
adc
ds
lahf
push
sub
and
hlt
sarl
les
rorl
pop
adc
insl
mov
lods
orb
dec
mov
xchg
mov
adc
mov
add
cmp
mov
sti
push
adc
mov
mov
add
popa
cmp
push
out
jmp
imul
cmp
fnstcw
fnstsw
mov
push
lea
arpl
xor
jmp
pop
loop
leave
repnz
push
adc
aam
xlat
lahf
lret
lahf
movsb
fildl
sbb
es
xor
sub
idivl
sbb
pop
sbb
mov
shlb
in
pop
and
inc
jne
aad
mov
rol
inc
sub
add
xchg
fadds
inc
loope
test
loop
push
pop
pusha
cmp
cmp
icebp
cli
test
lock
leave
and
and
push
add
or
jnp
xchg
cwtl
ljmp
sbb
xor
cwtl
lret
loop
ss
sub
fistpl
lods
fisubrl
push
lock
dec
pop
sub
aaa
sub
adc
inc
cmp
push
sbb
or
int3
jb
xor
dec
pop
sub
sub
add
adc
js
js
pop
sbbl
popa
aad
inc
out
jl
dec
ret
lock
cwtl
inc
jp
clc
inc
aaa
jno
outsl
jae
sarl
sbb
and
hlt
pop
push
adc
icebp
orl
inc
out
cmp
movsl
mov
gs
or
outsl
rcrb
mov
in
fcmovb
and
cmp
xor
sub
sub
outsb
dec
sub
fbld
adc
adc
in
pop
sbb
inc
xchg
pop
jl
sbb
lea
ss
shll
test
sbb
in
dec
insl
dec
loopne
dec
and
call
mov
cmp
mov
call
jns
pop
pop
aam
out
rorl
xor
nop
rcrb
pushf
repnz
cmp
jo
pop
mov
jns
leave
loopne
pop
adc
push
pop
add
xchg
lahf
dec
push
fmull
stos
call
ret
inc
sub
push
imul
and
push
mov
cmp
dec
jmp
es
cmp
fldenv
outsl
sbb
jne
aas
scas
xor
cmp
stc
push
cmp
pop
jp
sti
out
rcl
aam
mov
jecxz
outsl
adc
mov
and
dec
mov
mov
in
dec
mov
push
mov
negb
push
jmp
js
pop
sbb
pusha
iret
roll
stos
mov
push
adc
ret
fadd
mov
mov
leave
insl
minps
sarl
adc
aaa
test
pushl
pop
jg
in
insl
call
jle
push
mov
jb
sub
push
add
xchg
mov
arpl
push
sbb
iret
das
sub
fldt
stc
mov
mov
dec
out
scas
xor
pop
or
and
push
fmull
addr16
aaa
mov
xor
je
push
movsb
jle
aam
fcomps
arpl
inc
jmp
dec
push
sub
std
mov
inc
pop
shl
cli
cli
iret
sar
pop
pop
push
push
and
push
inc
xchg
sbb
in
jge
daa
and
xchg
pusha
jns
mov
add
insb
fstpt
jno
insb
dec
jbe
cmp
cltd
mov
mov
ja
push
in
and
fnsetpm(287
test
clc
andl
pushf
cmpb
dec
dec
cs
xchg
rclb
push
mov
ljmp
daa
out
enter
out
add
mov
push
xor
test
jp
jns
xlat
xchg
stc
ficoms
dec
lret
in
in
push
add
jae,pt
retw
adc
sbb
shrl
jge
mov
mov
cwtl
sbbb
xchg
popa
xor
adc
fldt
in
pop
aaa
lock
pushf
enter
add
outsb
sti
mov
jl
outsb
es
daa
cmp
decl
jmp
mov
dec
ss
icebp
cwtl
rcr
sbb
xor
pop
repnz
cs
adc
daa
ja
jl
repnz
int
cmc
or
xorl
push
cli
dec
scas
cmp
jl
cmp
cmp
xchg
fists
pop
mov
and
cld
xchg
adcl
mov
and
xchg
cwtl
insb
fidivrl
outsb
ds
es
aas
mov
daa
dec
ret
sahf
das
xchg
cwtl
xor
jle
aad
mov
lret
iret
ret
inc
das
pop
cmp
sbb
icebp
les
jge
jp
xor
jg
mov
push
dec
jae
mov
jmp
inc
adc
std
movsl
adc
jb
pushf
push
sub
into
sbb
xor
sbbb
push
mov
ja
push
mov
mov
cmp
out
les
dec
aad
cmp
lds
push
movsl
xor
in
xchg
xorl
scas
rorl
mov
sbb
clc
cmp
movsl
push
push
int
popa
sbb
pop
mov
lcall
xchg
push
and
psubsw
xor
enter
adc
pop
ret
mov
sbbb
loopne
sub
sahf
add
add
ja
jmp
sub
pop
push
sbb
inc
cld
jg
lea
add
inc
sbb
jge
loopne
testl
mov
mov
dec
cmpl
lret
mov
adc
js
fwait
mov
outsb
mov
outsb
jg
mov
lods
add
stc
ja
jne
call
xor
scas
sbb
cs
ror
cmpsl
sub
xchg
mov
iret
pop
fs
mov
jecxz
out
cmp
sub
shrl
lds
outsl
or
inc
mov
and
cs
andb
push
fcomp
cmp
jae
out
xor
aaa
shl
and
scas
repz
xor
dec
out
sbb
add
fstl
sub
daa
int
shrl
sbb
cwtl
out
adc
xlat
pop
jl
jo
lahf
push
dec
mov
mov
in
shlb
xchg
lahf
je
imul
ja
popa
add
and
and
mov
test
add
in
divb
xorps
or
jno
cmp
mov
jge
add
insl
pop
sbb
sub
fwait
jne
jo
lea
outsl
xor
insl
sti
mov
xor
icebp
jp
test
mov
mov
mov
or
aas
push
aaa
jl
add
aas
mov
jg
mov
mov
mov
pop
aad
in
xchg
scas
mov
xchg
inc
cmpsb
int3
es
mov
mov
cmp
sbb
in
xchg
lahf
jnp
leave
mov
mov
filds
adc
int3
pop
cwtd
cmpsl
jmp
pop
adc
movsl
inc
sbb
rcrl
cmp
mov
add
insl
aad
fsubs
push
jp
xchg
test
jle
test
jne
das
in
cmpsl
ror
jmp
mov
xor
into
mov
outsl
into
mov
xor
pop
scas
fimuls
lret
iret
or
dec
push
test
cmpsl
push
ret
pop
sbb
sub
fiadds
in
pop
pop
orl
mov
mov
fiadds
rcrl
xchg
sbb
pusha
push
dec
xchg
push
cmpl
and
inc
pusha
jecxz
test
jge
mov
push
dec
jp
outsl
sub
sahf
rolb
add
sbb
xchg
stos
mov
xor
push
cli
dec
dec
movq
rcl
inc
scas
mov
push
mov
mov
cmpsb
popa
loopne
lea
movl
adc
and
cld
inc
test
je
insl
cmpsb
dec
mov
cs
std
loopne
icebp
mov
sub
mov
jmp
sbb
cmc
inc
aam
cmovbe
pop
jecxz
leave
sbb
int
lcall
cmp
fidivl
test
push
fstps
pop
loop
data16
pop
push
repz
lret
and
jg
pop
xchg
aas
cmp
add
and
adc
imul
mov
sbb
rclb
mov
mov
add
jge
adc
mov
les
adc
fwait
jg
ljmp
sbb
sub
mov
roll
add
jge
shl
lock
inc
dec
cmpsl
das
push
mov
or
adc
dec
stos
pop
pop
nop
sti
nop
subb
mov
mov
adc
xor
mov
out
sbb
mov
inc
mov
fsubrs
add
mov
sub
pop
out
les
pavgb
icebp
add
outsb
inc
and
popf
test
xchg
cmpsb
jmp
ret
inc
add
pop
jle
add
cmpsb
es
adc
mov
mov
and
test
cmp
aas
into
adc
or
pop
cs
leave
dec
mov
dec
jbe
mov
loopne
jge
jg
les
xchg
loope
cmp
adc
enter
fiaddl
into
rcll
mov
jge
jp
mov
push
insb
sub
inc
mul
and
out
push
or
push
add
imul
cmp
aaa
in
aaa
nop
imul
mov
xor
or
inc
ljmp
inc
and
mov
aad
mov
daa
ljmp
fmuls
fxtract
rcrb
in
adc
pushf
or
and
ja
sbb
or
cmpb
shl
and
mov
cmp
mov
rol
out
fidivs
jmp
push
cmpsl
popa
sbb
xchg
sub
add
jmp
lods
push
pushf
lock
inc
lret
jb
lds
jg
add
daa
mov
push
jmp
mov
cmp
jl
cld
push
sub
sub
mov
pop
mov
or
aaa
inc
call
loope
les
adc
and
popf
xlat
ljmp
pop
jmp
adc
xor
loop
popa
notl
mov
in
mov
loope
mov
mov
mov
pop
jo
scas
xchg
jge
mov
jle
sti
cmp
pop
xor
lret
ret
cli
call
pushf
cmp
sub
sti
lock
ret
es
into
aaa
and
into
and
fcmove
pop
adcl
inc
fisubl
xchg
push
repnz
outsb
sub
das
lahf
jge
xor
test
cmp
daa
cmpsl
jno
arpl
mov
xor
test
xor
mov
fstps
lret
scas
ss
loopne
cli
std
mov
jl
and
fidivl
xor
push
push
sahf
dec
jae
jbe
mov
inc
fmull
dec
gs
xchg
pusha
repnz
mov
les
dec
out
pop
sbb
loope
dec
fcmovu
cmp
inc
ret
xchg
xor
jo
scas
sbb
lea
xchg
inc
mov
sub
push
jb
sbb
in
add
addb
or
xlat
pop
test
scas
pop
pop
inc
pusha
out
mov
mov
shlb
jnp
and
mov
jg
cld
push
sub
cli
inc
xor
xor
test
daa
push
jnp
test
jmp
and
or
psubd
or
cmp
stc
push
into
and
mov
dec
cmp
addr16
pushl
popf
xorb
mov
lahf
mov
push
jae
xchg
scas
add
mov
or
aaa
scas
xchg
hlt
and
aaa
xchg
lret
iret
xchg
stc
in
dec
cmpsl
ret
ret
add
into
lahf
lret
add
mov
cmp
in
add
sti
mov
loop
pop
lods
jp
repz
mov
inc
out
lock
mov
or
and
in
mov
test
imul
cmp
inc
loopne
lea
idivb
imul
mov
ljmp
les
out
dec
xor
jl
jne
mov
into
clc
adc
adc
push
insb
jp
aad
es
jl
or
ss
mov
pushf
ret
fwait
lock
cli
fldt
data16
dec
mulb
sub
cmp
js
or
enter
sub
adc
and
pop
pop
dec
mov
repnz
lods
inc
das
popf
fs
inc
pop
sahf
mov
sbb
insl
adc
jnp
ss
movsl
int
sub
mov
mov
pop
lret
popl
mov
or
jno
stos
add
inc
push
inc
mov
repnz
jbe
dec
inc
inc
cmpsb
xor
cwtl
popa
repnz
push
ja
fnstenv
cmp
shll
xor
and
pop
fstpt
loope
fistpll
mov
loopne
imul
push
stos
lods
xchg
xor
aaa
mov
das
movsl
arpl
loope
cli
adc
stos
lds
xor
test
icebp
mov
jg
jp
addb
mov
jo
push
jecxz
jnp
cli
xchg
mov
sub
sbb
push
call
add
lds
push
push
enter
push
in
cltd
or
push
fdivrl
lock
push
imul
repnz
adc
push
jmp
dec
in
les
pop
stc
xor
stc
mov
repnz
lret
out
aaa
push
push
inc
fsubs
addl
xor
outsb
xchg
jbe
push
rep
xor
stc
cmpsb
stc
mov
add
arpl
loop
mov
sub
int
daa
shl
repz
insb
jne
inc
out
push
and
sbb
test
aas
mov
cmp
fcoms
call
mov
adc
insl
jmp
out
xchg
cmp
dec
call
ljmp
in
xchg
xorl
ja
in
daa
jmp
lret
cmp
lds
pop
aam
jecxz
inc
lods
mov
or
cwtl
mov
or
pop
xor
testl
push
sub
lods
pop
mov
or
fisubrs
push
cmpsb
testl
xorl
cmp
cmp
loope
sahf
popf
jns
dec
cmp
xor
subl
outsb
mov
lret
push
xor
push
int
inc
mov
push
movsb
add
ret
cmp
cs
mov
out
jge
jge
notb
jo
mov
shr
push
shrb
fimull
and
pop
lahf
lods
fsubr
stos
sub
pop
fildll
mov
fs
js
movsb
scas
cmp
cmp
cmpsb
lret
ja
cltd
leave
xchg
cli
or
rclb
int
lock
ljmp
push
sbb
test
sub
mov
dec
out
xchg
popa
ja
xlat
and
call
sbb
sub
mov
push
cmp
push
pop
icebp
xchg
fiadds
sub
faddp
inc
sub
xor
dec
stc
outsl
and
xor
fidivl
push
aad
rclb
ret
jnp
ljmp
lock
shlb
ret
es
lcall
jp
outsb
lods
xchg
clc
and
mov
adc
ret
cs
lret
push
jae
mov
dec
pop
pushf
incl
dec
orb
sbb
jg
dec
outsl
shrl
mov
leave
sbb
add
jns
xor
mov
mov
jge
xchg
in
and
jle
lcall
incb
sbb
idivb
inc
mov
out
shll
and
ja
cmpsl
lods
out
lcall
xorl
mov
sbb
mov
mov
ret
inc
and
lahf
jne
lea
fs
push
and
popa
jl
pop
sbb
cmp
ds
mov
out
push
dec
sbb
cli
test
and
push
ret
push
jp
sbb
outsb
stos
cmpsb
adc
sbbb
dec
pop
inc
jge
sbb
lods
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
sub
mov
and
push
sub
mov
sub
mov
orl
lea
subl
mov
add
mov
mov
adcl
mov
xor
subl
add
mov
mov
add
mov
mov
add
mov
subl
mov
add
add
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
mov
adc
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
adcl
mov
mov
mov
add
xor
or
jmp
paddsw
mov
out
cli
inc
jp
popa
pop
bound
mov
dec
enter
dec
sti
stos
adc
cltd
inc
add
xchg
and
cs
cmp
dec
push
jg
outsb
nop
inc
push
or
inc
fildll
ds
fs
arpl
test
test
fwait
aas
mov
push
addb
xor
aas
lret
mov
pop
fwait
insl
mov
lcall
enter
mov
cld
es
dec
cs
outsb
or
data16
jns
pop
jne
loope
iret
mull
movsl
xor
inc
imul
adc
xor
or
push
xchg
mov
pop
add
in
inc
sub
sbb
mov
mov
xchg
ja
rorl
fnstcw
mov
push
push
hlt
sbb
cld
dec
movsb
sti
imull
enter
hlt
ja
int3
aad
in
pop
sbb
xchg
mov
cld
enter
xor
cmp
fistl
mov
dec
mov
dec
dec
pop
mov
cmc
push
sub
gs
jmp
lahf
dec
jns
or
pop
aaa
nop
jne
jb
sub
cmp
lcall
dec
rolb
sti
out
test
jl
fildl
inc
cmc
add
mov
imul
dec
sub
fbstp
aas
dec
push
movsb
cmpsl
repnz
aas
xorb
out
arpl
push
stos
jg
mov
mov
lcall
push
xchg
ss
sbb
clc
xor
push
mov
xorb
stos
cld
lock
imul
cmc
stos
enterw
fldt
or
enter
jp
and
test
in
sbb
sbb
mov
addb
pop
imul
cmpsl
push
inc
jns
in
sbb
cld
arpl
mov
rcrb
in
popf
les
cwtl
mov
mov
mov
lret
loope
in
xchg
fsts
jo
or
jne
je
mov
lahf
push
data16
scas
add
pop
push
sbb
call
clc
or
jbe
arpl
or
push
hlt
add
xchg
inc
nop
adc
push
js
inc
adc
sub
call
in
mov
leave
mov
sbb
jge
or
dec
dec
jge
add
mov
xchg
fucomp
movsb
outsb
sahf
adc
fists
aaa
push
push
sbb
imul
shl
fucomi
insb
jns
xor
popf
xchg
mov
out
xor
mov
test
dec
popf
inc
push
mov
repnz
out
sbb
cmpl
in
bound
clc
loope
mov
scas
cmpsl
xchg
mov
push
insl
outsb
fsubrs
jle
jnp
cwtl
push
cmpsl
pop
iret
jnp
sahf
mov
jl
pop
hlt
int
push
cmp
xchg
lcall
mov
push
sub
aad
push
jns
or
lods
sbb
inc
mov
mov
or
and
sarl
add
roll
in
xor
mov
fnstcw
ljmp
subl
sub
sub
or
orl
mov
in
dec
adc
stc
or
sarl
fmuls
push
mov
leave
lahf
sbb
push
xor
cmpsb
insl
hlt
mov
outsl
adc
xchg
clc
test
lock
cwtl
inc
lahf
push
push
pop
push
mov
mov
lods
dec
xchg
faddp
or
insb
fcomi
pop
jo
leave
push
or
mov
ret
shl
mov
pop
push
mov
pushf
sbb
dec
movsl
mov
cmpl
sub
mov
pop
jns
aaa
push
out
mov
lods
dec
sbb
xchg
push
ss
and
xor
aas
rorb
and
ja
lods
sar
dec
or
sarl
js
jbe
es
lea
xchg
mov
sub
cmp
mov
and
int
rcrb
sahf
div
pop
push
leave
bsf
cmp
fcomp
ja
mov
jle
das
stc
jno
mov
jle
mov
xor
pushf
cmp
aam
bound
aaa
lock
cmp
mov
leave
lds
xor
adc
cltd
adc
fimull
mov
add
dec
push
mov
sub
push
xchg
push
test
sbb
ljmp
add
mov
fwait
hlt
imul
lds
or
cmc
xor
jns
jl
mov
jge
inc
scas
sahf
popf
xchg
aam
ficoms
xlat
push
xor
jbe
nop
and
push
sbb
mov
mov
push
add
push
pop
rorl
mov
mov
in
cld
rol
popf
cs
fsubrs
fisttpl
aas
pop
and
jbe
shll
dec
or
pop
dec
inc
sub
mov
add
popa
pop
inc
mov
sbb
ljmp
mov
ret
mov
adc
pop
mov
fwait
stc
jecxz
rorb
imul
outsb
dec
jmp
ljmp
xchg
in
adc
or
or
outsl
jns
pop
xorl
lahf
and
std
fsubrl
jp
and
int3
mov
stos
arpl
dec
inc
test
mov
ja
or
add
test
orb
movsb
popa
pop
add
jns
mov
mov
jne
hlt
out
roll
out
fcmovu
roll
clc
inc
rclb
hlt
in
inc
lahf
mov
repz
cmpsb
or
sbb
int
or
inc
sub
or
pushf
out
mov
movsl
mul
in
jbe
pop
cmp
cmpsb
dec
ja
jecxz
mov
pop
fdivl
xchg
jbe
jmp
or
mov
int3
lcall
fldl
and
jo
lahf
jp
lods
and
xor
ret
pop
imul
mov
sub
into
int3
fmul
push
std
xchg
pop
push
sub
adc
out
pop
rcrl
sbb
cmp
mov
sub
ds
or
inc
movlps
pop
mov
jns
mov
and
and
decb
std
mov
push
ds
es
mov
add
into
addb
lods
mov
dec
pop
rcr
mov
aaa
shlb
cmpsb
mov
jo
or
fcmovne
daa
mov
mov
xchg
out
lcall
push
dec
mov
pop
pop
jge
ret
mov
pop
lock
adc
fs
lock
jb
popf
test
xchg
in
lea
out
jb
cmp
sub
in
das
jbe
and
idivl
lds
nopl
mov
and
xchg
cld
cmp
dec
inc
mov
mov
inc
jb
mov
dec
daa
js
rcll
mov
jp
div
mov
xor
push
or
scas
std
push
fxch
sub
lock
loope
call
mov
jmp
fnsave
mov
sub
fs
fwait
fwait
ja
push
jmp
mov
mov
dec
cmpsl
pusha
jne
lods
xchg
push
inc
pop
decl
ret
jnp
and
push
inc
mov
pop
faddl
hlt
pop
imul
popa
push
add
xor
imul
enter
stos
dec
mov
or
testb
xchg
sar
and
pop
enter
jmp
jl
lcallw
inc
out
sbb
dec
mov
subl
daa
jo
cmp
mov
inc
adc
lcall
mov
hlt
daa
stc
push
jns
daa
mov
arpl
inc
js
xchg
adc
cld
add
js
test
adc
notl
aas
and
pop
fldcw
add
out
les
or
or
fimull
and
xchg
ret
movsb
or
jge
add
into
cwtl
movsl
jge
lret
mov
cmc
push
push
mov
arpl
sbb
pop
inc
xchg
popf
pop
push
mov
pop
or
pusha
mov
imul
faddl
mov
fdivr
shll
push
shrb
xchg
xor
jno
mov
adc
sbb
or
xchg
push
les
lret
mov
sahf
inc
mov
stos
aaa
test
outsl
mov
jp
fbstp
in
subl
inc
push
ror
call
loope
scas
mov
aaa
loopne
mov
push
out
loope
mov
cmp
inc
andl
rcll
pop
pop
and
jne
imul
sbb
in
shrl
repnz
mov
into
sbb
sub
pop
or
dec
pop
mov
pop
pop
or
xchg
mov
inc
xchg
xchg
fildll
sub
add
pop
test
push
push
jecxz
shr
fsubl
lea
les
ret
mov
mov
xor
inc
stos
in
push
mov
daa
dec
rorb
xchg
lock
out
push
nop
aad
xor
mov
jbe
repz
clc
daa
test
bound
pop
pop
in
cmp
jecxz
or
test
dec
mov
add
sbb
jmp
add
les
ds
filds
cmp
roll
rclb
inc
pushf
mov
repz
or
ret
aas
gs
inc
bound
add
xchg
mov
mov
sub
mov
xor
std
pop
mov
or
push
bound
popf
sti
rcr
or
push
scas
pushf
flds
mov
xchg
jge
mov
and
cmpsb
out
inc
pop
jg
mov
push
in
and
xchg
loopne
cmp
les
movsl
sub
dec
stos
sbb
pop
mov
mov
xor
pop
and
lods
out
jecxz
call
sbb
out
push
adc
pusha
cmp
dec
rclb
scas
in
jmp
mov
aaa
adcb
mov
enter
fxch
adc
lcall
pop
cmpsl
subl
mov
insb
movsb
loopne
mov
ret
adc
cmpsb
shrl
mov
aad
int
repz
aas
push
xor
loopne
push
ret
or
lods
push
xchg
outsl
push
in
sub
cltd
add
lods
and
inc
call
in
pusha
shlb
iret
pop
sbb
mov
out
cld
xchg
outsl
or
xchg
fistl
inc
mov
mov
cmp
daa
jmp
leave
mov
xchg
adc
mov
cmpsw
aad
decb
je
fwait
gs
xor
pop
ljmp
or
cmp
cmpsl
call
pop
or
in
fimuls
mov
push
mov
add
dec
mov
fs
gs
test
dec
push
xchg
ja
lds
in
rcrb
test
pusha
push
fldcw
int3
cmc
shr
xchg
and
ds
push
cmp
push
scas
jo
xor
in
jle
jle
iret
rcll
xchg
aaa
mov
nop
pop
mov
and
mov
ret
fildll
in
jp
setp
lds
mov
cmp
sbb
and
mov
cli
daa
and
add
mov
mov
adc
clc
dec
out
pop
and
or
es
dec
bound
mov
out
orl
jge
xor
nop
out
jg
pop
mov
jns
xchg
adc
sbb
out
repz
mov
sbb
dec
adc
fldcw
lods
nop
sbb
mov
and
or
imul
jns
popf
cwtl
cmp
lods
in
jne
add
in
in
lock
ficomps
or
mov
pop
cmpsl
loop
mov
sub
sbb
call
adc
sbb
sub
mov
dec
test
pop
push
xlat
sbb
jmp
pusha
aam
mov
or
and
mov
xchg
pop
sub
mov
xchg
pop
lcall
xorl
arpl
jmp
mov
pop
nop
cli
les
mov
fnstcw
and
aaa
in
popa
sbbl
aaa
pop
and
sbb
mov
clc
or
shll
mov
sub
sub
adc
push
fdiv
outsl
stos
jo
mov
sub
push
or
in
leave
xchg
iret
pop
mov
lret
js
add
sub
lret
mov
push
xlat
leave
push
ss
xor
xor
or
cmpsb
xchg
lahf
lret
mov
mov
or
out
push
iret
xorb
fnstsw
stos
call
sbb
sbb
movl
loope
out
jbe
cmp
jbe
cld
lods
adc
jo
cmpb
pop
jp
test
inc
mov
cmc
add
aam
std
sti
push
into
stos
xor
dec
push
inc
jge
mov
ja
shrl
adc
jmp
into
adc
shl
aam
subb
sub
je
xchg
imul
mov
in
jne
mov
push
enter
mov
jecxz
add
decl
daa
iret
adc
test
movsl
subb
fimuls
notb
addr16
mov
cltd
add
call
mov
mov
sub
or
push
lahf
cmp
mov
xor
fsubl
add
clc
and
mov
js
jp
shrb
or
fisubrl
add
out
scas
jp
push
cmp
pusha
sub
popa
les
add
push
jecxz
mov
into
and
pop
mov
bound
mov
lds
xchg
lods
cmpsl
mov
cmp
push
sub
sahf
push
dec
add
iret
cmp
cmp
jo
mov
lret
fst
imul
fnstcw
pop
popf
xchg
sub
inc
sarb
sub
insl
mov
inc
and
jnp
out
jae
in
pop
mov
nop
lods
sarl
gs
cltd
jl
mov
jb
push
ret
outsl
mov
sub
mov
rorl
mov
cld
sub
add
xor
loope
mov
stos
rcll
les
aaa
add
or
fidivl
push
jno
dec
cmp
jle
xchg
xchg
xchg
dec
push
mov
adc
adc
xlat
mov
mov
inc
sbb
pop
into
sbb
adc
lds
mov
in
out
mov
pop
cmp
adc
push
or
or
nop
testl
and
xor
insb
dec
outsb
aaa
add
mov
movsb
xor
sbb
ficoms
test
hlt
inc
ljmp
add
dec
outsb
adc
lods
inc
data16
push
xor
lock
gs
or
enter
fnstcw
mov
in
clc
scas
or
fisubs
lea
hlt
aas
xchg
push
push
mulb
and
aaa
outsl
cs
cld
testl
mov
xor
cs
out
cmp
call
xchg
popf
rcr
loopne
add
jbe
imul
lcall
pop
mov
addr16
mov
enter
stos
adc
mov
hlt
push
mov
bound
stos
mov
adc
jp
jne
sahf
mov
in
call
push
push
jae
scas
xor
mov
and
mov
notl
jb
scas
inc
sqrtps
adc
stc
mov
or
mov
adc
out
and
lea
adc
popa
cmp
sbb
adc
mov
and
out
mov
inc
sbb
data16
insb
push
xchg
and
scas
and
cmp
mov
fwait
add
jnp
bound
test
mov
movsl
insl
fs
pop
test
push
jl
out
mov
pop
imull
push
daa
xor
sbb
test
adc
inc
push
push
fld
sbb
cmpsb
push
mov
loopne
rorb
hlt
shrb
inc
fstpl
clc
sti
dec
lea
jmp
dec
aaa
lods
mov
mov
fbld
xor
jl
jp
pop
jb
in
pop
cmp
inc
mulb
jnp
adc
lret
mov
mov
in
jne
pop
mov
pusha
les
sub
aad
cltd
scas
push
pop
mov
clc
or
and
mov
stos
jmp
dec
ja
inc
pop
sti
pop
push
fucomp
clc
cmp
ret
sub
fwait
push
ret
pop
test
inc
pop
pop
xchg
sbb
insl
sbbl
push
cs
pop
pop
cmp
inc
lcall
movsl
rcrb
repnz
sub
dec
es
jbe
xor
dec
dec
sti
pop
cvtps2pi
rcrb
push
jnp
jp
sub
mov
xchg
or
mov
push
stc
xor
push
test
out
aam
dec
insl
jb
fistl
dec
sub
adc
pushf
add
dec
mov
sahf
lahf
mov
andl
jg
mov
sbb
dec
mov
test
adc
popa
jno
inc
lret
sub
lret
cmp
pop
sub
pop
in
jmp
push
popa
ret
push
mov
mov
pop
inc
call
mov
mov
push
mov
jne
ror
jge
push
hlt
sbb
mov
scas
mov
bound
daa
pop
aad
cmpsb
pop
enter
adc
call
lcall
dec
es
into
push
stos
mov
rorb
xor
shll
dec
inc
push
or
popa
mov
jae
arpl
or
iret
aam
cmpsl
pop
sti
inc
sti
jne
adc
adcb
fwait
popa
cli
sbb
mov
xchg
mov
cmp
push
mov
icebp
pop
or
and
jno
shlb
add
jne
mov
cmp
les
imul
test
test
out
test
inc
pop
cmp
lcall
cmovge
test
adc
mov
push
fildl
imulb
jno
mov
shll
sub
test
jo
pop
xor
push
dec
rcll
dec
push
addr16
mov
popf
data16
add
jmp
jne
dec
std
pop
dec
dec
sti
adc
data16
ja
adc
cmp
jmp
in
mov
insl
lret
test
sub
mov
dec
inc
cmpsl
sub
outsb
into
xchg
ljmp
je
aam
mov
stc
test
or
dec
push
cmp
je
mov
sbb
cli
mov
lret
xchg
bound
push
stos
push
pop
sar
in
in
ljmp
fstps
lods
clc
outsb
add
int
rolb
mov
jmp
pop
adc
aaa
mov
dec
cs
jbe
dec
jb
sbb
sti
stos
add
mov
js
sti
nop
std
xchg
das
push
mov
add
sbb
push
inc
sub
subl
movsb
xchg
jb
sub
inc
xchg
xor
lret
jle
jne
adc
in
shl
shr
cmpsb
in
xor
push
imul
aam
in
add
call
xchg
push
shll
add
movsb
jp
aam
shl
mov
and
inc
and
push
iret
mov
xchg
jns
stos
and
cmpsb
shlb
xor
cli
mov
xor
xor
nop
repnz
jl
je
aam
or
mov
push
inc
ret
out
adc
call
mov
int3
push
mov
inc
imul
sbb
es
lret
jp
mov
xor
jp
pusha
mov
xlat
in
inc
mov
mov
sti
or
mov
data16
xchg
mov
fisubrl
fisubrl
loopne
push
sub
dec
sub
xor
jbe
mov
mov
stc
pop
gs
outsl
leave
cltd
aad
adc
cmp
test
sub
lret
pop
mov
shlb
push
pop
outsb
dec
rcr
rolb
cmpsl
movsb
add
jo
mov
es
cmp
pop
repz
into
lods
ja
adc
xlat
ljmp
dec
cmpsl
mov
sti
dec
pop
adc
pop
adcb
mov
pop
mov
push
push
adcb
rorb
les
cmc
data16
adc
adc
xchg
cmp
orb
xor
push
subl
lds
fidivl
mov
xchg
xor
movsl
jne
ljmp
adc
outsl
shlb
pop
xchg
xor
sti
lods
pop
push
inc
lahf
sub
or
fcoml
sahf
add
sbb
rcl
in
roll
popa
int3
xchg
shrl
dec
cmp
frstor
out
add
les
enter
lock
cmp
mov
inc
mov
stc
pop
test
xlat
sti
adc
cs
andb
adc
pop
sbb
std
cs
mov
push
insl
imul
mov
fcom
jne
fdivs
ret
imul
scas
test
push
mov
push
outsb
das
sbb
push
lret
out
mov
push
imul
mov
and
cmpsb
cmpsb
sbb
sahf
adc
dec
ljmp
jne
xchg
mov
push
orb
repz
loope
mov
cmp
pop
enter
dec
lcall
stos
pop
loope,pn
cmp
int3
fsubl
cmp
stos
mov
adc
inc
clc
hlt
outsl
mov
mov
orl
rcrb
add
insl
cmc
push
into
loop
or
mov
mov
inc
mov
out
mov
rorb
or
or
insl
cs
jo
mov
icebp
jnp
or
imul
sub
cwtl
xchg
sbb
les
dec
dec
sub
push
ds
mov
es
cmp
pusha
arpl
ret
je
out
sbb
loope
cmp
sbb
dec
sbb
adc
xchg
add
addr16
adc
sub
and
lret
stos
out
push
jmp
xchg
xchg
cmpsl
aad
int3
fs
imul
iret
or
xor
pop
jns
jnp
inc
pop
je
out
inc
lods
adc
cmc
adc
and
gs
or
xor
mov
push
imul
mov
sub
jl
in
ja
sbb
jg
sbb
push
adc
nop
fdivrp
stos
mov
icebp
rorl
xchg
lcall
test
jno
push
cs
sbb
mov
pop
jge
jmp
adc
adc
cmp
or
cmp
dec
dec
add
pop
cmp
loopne
inc
or
push
fwait
lret
push
scas
xchg
and
lods
in
jmp
sar
fdivs
adc
repnz
fcomp
xor
negb
or
test
push
cs
pushf
mov
add
sub
mov
push
cmp
gs
push
js,pn
addr16
es
mov
scas
mov
xor
mov
je
movsl
outsb
and
mov
lcall
dec
inc
arpl
movsb
dec
aam
sbb
dec
pop
into
fildll
or
shr
ds
enter
gs
push
repz
or
pop
adc
pop
movsb
ret
mov
lds
test
cmpsb
xchg
cmp
push
push
int
dec
movsl
data16
dec
sub
jnp
dec
out
pushf
mov
test
pop
enter
or
dec
lock
xchg
pop
sti
clc
bnd
ja
dec
and
mov
lds
stos
mov
sub
icebp
ss
loope
inc
mov
mov
fwait
movsb
leave
fwait
sahf
sbbb
jb
test
out
and
in
mov
dec
addr16
hlt
flds
push
cmpb
push
repz
neg
and
sahf
mov
inc
test
mov
test
pop
push
pop
test
cwtl
dec
pop
add
mov
dec
push
add
xlat
adc
cmpsl
out
push
stos
pop
insb
inc
test
daa
pop
or
lods
test
std
push
mov
test
lods
add
cld
and
add
int
outsl
data16
jp
sarl
sbb
and
xor
lret
popf
sub
lahf
cmpsl
das
test
push
insl
mov
mov
shll
lods
les
fldenv
fnstcw
shrb
jmp
std
incl
jg
out
cmp
adc
sbb
sahf
jmp
fmull
enter
sub
and
mov
sub
jg
and
in
mov
sub
loopne
inc
mov
rol
fidivrl
clc
ljmp
stc
mov
mov
push
dec
inc
push
aas
clc
sti
fnsave
popf
dec
add
xchg
ds
aad
cmpxchg
aas
into
pop
fcmovnb
imul
mov
pop
dec
rolb
jl
pop
cmpb
pushf
push
das
roll
dec
sub
std
decb
call
shll
std
testl
cltd
call
mov
imul
js
mov
jno
sub
fadd
js
xlat
lock
adc
sbb
fs
adc
mov
jae
loope
stc
jnp
clc
mov
mov
xlat
pop
sbb
jb
loope
testb
outsb
iret
mov
in
jae
imul
mov
mov
jo
jns
faddl
popf
imul
sbb
mov
adc
cmpsl
icebp
push
ja
repz
decb
mov
sub
or
scas
or
adc
in
jae
fiadds
insl
mov
in
sub
bound
iret
and
push
mov
sbb
xor
xor
out
sahf
cmp
push
mov
or
sub
jle
sub
push
jbe
pusha
or
repz
mov
and
mov
gs
cld
sub
pop
xor
ret
in
das
xchg
dec
xor
inc
jl
inc
shrb
push
idiv
in
jecxz
in
scas
or
cmc
in
dec
add
or
jns
sub
push
mov
pop
in
popl
jge
mov
adc
mov
sub
sbb
xchg
mov
inc
inc
dec
jl
pop
dec
pop
lods
sub
sahf
dec
dec
sub
jecxz
mov
inc
popf
rclb
outsb
leave
or
inc
idivl
leave
adc
repz
es
add
ret
mov
daa
in
sub
addr16
or
and
or
add
adc
dec
lahf
cltd
jb
int
hlt
fdivrp
sahf
mov
lds
lcall
int
pop
dec
scas
jmp
pop
cmp
push
dec
xchg
and
sbb
adc
push
lret
subb
xchg
adc
pop
test
fcomps
test
sbb
xchg
and
sbb
push
adc
enter
sti
mov
inc
imul
dec
cmpsl
sub
pop
mov
sbb
jo
push
sahf
out
mov
int3
mov
inc
pop
sbb
sub
icebp
cltd
jb
out
stc
cs
sub
bound
cld
pop
loop
ficompl
push
mov
xlat
jns
ret
cs
idiv
adc
push
xchg
fiaddl
cmpsb
push
ret
nop
shlb
test
mov
cmpsb
mov
cmpsb
aas
mov
jp
xchg
inc
jl
std
push
jb
xchg
imul
leave
mov
xchg
ffree
add
sbb
pop
sub
shlb
adc
xchg
or
sub
fsubr
jns
gs
cmp
lods
jbe
mov
push
roll
out
sub
popa
xchg
xor
test
lret
dec
das
pop
or
iret
or
sahf
iret
cmp
inc
add
push
mov
jp
imul
mov
std
sub
pop
cwtl
mov
mov
and
lea
mov
loop
es
lods
stos
insb
mov
or
scas
test
mov
or
xor
xor
cmpl
pusha
fwait
in
xchg
dec
rcl
fs
pop
ret
hlt
movsl
js
sub
dec
lock
xchg
mov
pop
and
pop
aad
mov
push
add
iret
xor
cmp
or
imul
adc
leave
bound
sbb
cltd
shlb
jnp
lea
rcr
pop
cmp
std
inc
in
ljmp
sbb
adc
mov
xor
inc
test
ret
popa
fs
cmp
or
add
mul
adc
clc
les
mov
fiadds
outsl
mov
adc
jge
fldenv
jo
xchg
jp
or
xor
lods
movsb
pop
add
xor
inc
cld
gs
add
push
sub
inc
push
shlb
cmp
out
insb
push
push
subb
xlat
cmpsl
dec
sarl
iret
push
negb
rcl
mov
sbb
pop
push
mov
xchg
cmp
clc
cmc
mov
sbb
pop
roll
adcl
pop
add
lret
sub
and
push
and
imul
in
adc
mov
xor
sub
rcr
fnstcw
lcall
add
pop
cmp
jecxz
pop
jbe
sahf
mov
stos
test
iret
adc
jno
test
cmpl
xchg
lahf
enter
mov
cmpsl
mov
insl
or
mov
mov
pop
mov
sub
or
leave
add
inc
mov
stos
push
cmp
mov
rcrb
mov
out
jg
jle
fucomp
mov
mov
into
jp
mov
cwtl
mov
imul
mov
sbb
arpl
arpl
bound
pop
mov
adcl
and
shll
push
fcomps
mov
mov
push
les
push
push
pop
mov
aad
adc
sbb
xor
mov
add
imul
pop
lea
mov
in
xorl
jns
dec
lretw
xor
xor
popa
clc
iret
jnp
dec
push
jo
incl
pop
jmp
fnstsw
mov
jb
jno
pop
mov
mov
jle
xchg
sbb
imul
adc
sub
sarb
les
xchg
jmp
push
inc
or
dec
add
pushf
dec
leave
inc
cmp
and
or
and
out
add
mov
lret
fildll
pop
sahf
push
jnp
out
popf
lock
mulb
dec
jp
xor
flds
cltd
loope
cmp
sbb
ljmp
cltd
add
mov
xchg
in
xchg
repnz
mov
or
insl
divl
pop
mov
icebp
scas
scas
mov
jmp
push
pusha
or
mov
aam
xchg
lods
das
sbb
cmp
inc
gs
ds
mov
dec
test
nop
jmp
jbe
or
clc
sbbl
inc
xor
pop
pop
pop
fidivs
push
cmp
fnstsw
addr16
sbb
jecxz
add
jg
xchg
leave
fstpt
test
out
gs
mov
or
and
push
test
cmp
pop
dec
enter
mov
mov
in
shlb
mov
addl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xor
add
mov
and
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
negl
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
xor
incl
add
andl
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
jmp
dec
cmp
orl
push
mov
jge
filds
popa
pop
bound
mov
jnp
push
push
fistpl
out
pop
stos
xchg
pusha
in
mov
mov
negb
in
cmp
test
int
icebp
je
sarl
mov
stos
test
adc
pop
mov
insl
mov
xor
outsb
iret
mov
lcall
outsb
inc
std
mov
inc
add
test
or
or
inc
test
jmp
in
jmp
outsb
addr16
clc
mov
sbb
xchg
adc
enter
and
test
sbb
dec
dec
jl
xor
fistl
pop
stc
mov
jno
cmp
lods
fsub
mov
or
mov
push
push
mov
sub
sbb
xor
loope
add
mov
aad
loope
sub
out
cmp
and
sbb
aaa
ret
int
and
imull
lods
cmp
data16
lods
outsl
pop
pop
imul
gs
out
aas
in
shll
jnp
add
or
stc
cmp
pushf
lret
aad
pop
lods
push
test
adc
cmp
sbb
les
inc
push
out
in
call
mov
cmpl
in
enter
dec
pusha
push
push
outsb
and
adc
adc
clc
mov
mov
xchg
enter
leave
pop
roll
inc
aad
insl
xchg
mov
jg
dec
addr16
xor
pop
jge
fisttpl
shrl
mov
inc
mov
jo
mov
pop
ja
aas
add
aas
imull
xor
inc
bound
mov
inc
pop
jmp
fs
fmull
dec
movl
fisttpl
int
insb
mov
cwtl
out
daa
call
mov
shl
stc
adc
dec
lahf
mov
in
mov
sbb
jp
sub
imul
aam
mov
jecxz
jne
fsub
inc
lods
jge
fistpll
cmp
jo
xor
or
in
mov
decl
test
shrl
add
inc
dec
test
pop
cmp
push
cld
jo
jno
pop
or
adc
adc
push
out
adc
adc
push
lock
xchg
dec
mov
dec
stc
push
push
mov
sbb
and
mov
shl
inc
dec
jle
arpl
sbb
ficompl
jl
data16
popa
sbb
aas
adc
jns
outsb
and
js
cltd
cmp
outsb
mov
xchg
je
sub
mov
sub
jge
jns
sbb
pop
stos
das
outsl
mov
mov
sbb
or
mov
jnp
inc
call
or
push
movsb
jg
xchg
jbe
pop
in
test
stos
mov
lock
in
sbbl
pusha
dec
push
or
std
rcl
xor
es
out
test
or
movsb
ss
dec
test
dec
mov
ljmp
add
or
sbb
xor
and
mov
fisubl
sbb
stos
es
dec
xchg
pusha
or
icebp
inc
push
pop
lahf
cs
xchg
icebp
mov
jae
xchg
das
mov
ret
push
sbb
jnp
pop
xor
add
out
adc
inc
jne
and
movsl
lret
or
xchg
dec
jo
add
and
fnstsw
hlt
lret
lahf
push
iret
inc
sti
mov
mov
push
repnz
subb
das
mov
into
ss
addr16
xor
lea
cwtl
adc
add
sbb
ret
loope
push
ret
in
mov
mov
insb
hlt
push
xor
dec
lods
leave
clc
test
arpl
imul
and
add
mov
add
or
jbe
push
enter
ss
cwtl
test
dec
fdivrl
imul
outsb
mov
pop
cmc
adc
int3
into
js
add
loop
adc
jg
in
add
mov
mov
push
fucom
dec
in
int3
ds
xor
andl
fsub
in
adc
cld
push
jns
mov
mov
cmc
test
mov
lock
lds
dec
stc
push
push
in
mov
xchg
les
test
aam
mov
lea
jg
aas
and
jle
and
arpl
dec
test
sbb
adc
clc
cmp
pop
out
idivb
dec
test
mov
bound
and
das
inc
inc
loop
cmp
sahf
scas
add
adc
cmp
xlat
mov
or
adc
and
sti
add
sti
add
push
comiss
rcrl
imul
inc
cmpsb
xchg
int
stos
mov
add
pop
pop
enter
xor
inc
ficoml
scas
rcll
xor
pop
popa
sbb
ja
add
cmp
loop
pop
push
adc
inc
int
rclb
add
ficomps
dec
and
sti
js
stc
sti
ds
addr16
xor
sarb
bound
punpckhwd
daa
sahf
and
std
cmp
xor
pop
push
arpl
outsb
sub
mov
cmp
dec
jge
cld
mov
lock
inc
sub
mov
fs
jns
xchg
and
mov
scas
out
mov
xchg
sbb
test
adcl
imulb
pop
inc
xchg
loope
lods
push
xor
and
mov
inc
mov
nop
add
mov
fiadds
hlt
out
mov
push
pop
ret
push
rolb
and
icebp
inc
ss
dec
lds
aam
jp
sbb
or
shrb
jb
add
test
jg
or
cmp
mov
xor
loope
push
jp
jns
or
dec
cmp
cmpsl
dec
fs
in
sub
out
inc
mov
ljmp
cmp
imul
and
or
pop
out
es
stos
pop
test
rorl
fwait
or
shrb
jo
adcl
lock
add
cld
xchg
pusha
pop
mov
jb
xchg
push
adc
and
cwtl
lret
adc
out
jns
sub
jl
addr16
jle
cwtl
shl
mov
loop
push
xchg
mov
scas
pop
and
xlat
adc
stc
aas
cmp
repz
cltd
adcb
fucom
push
or
fisubrs
or
int
push
stos
add
jb
xchg
mov
mov
fwait
addl
addb
test
jge
dec
lret
aam
cmp
adc
aad
bound
sti
push
pop
pop
and
mov
cmp
fcomip
xor
mov
push
mov
add
int
mov
movsl
in
out
sbb
push
and
add
mov
mov
out
std
push
jecxz
ror
push
cltd
add
les
into
or
aaa
push
sub
fdivrl
push
sub
out
cmpsb
add
repz
xor
ja
sbb
inc
unpcklps
call
pop
jp
mov
ja
adc
jo
cmc
cs
sbb
in
iret
test
and
cmc
stc
jl
popa
hlt
je
test
int3
dec
ret
add
add
popa
lcall
in
iret
movsb
imul
int3
imul
cmp
out
push
sahf
test
pop
mov
mov
push
and
xor
aaa
mov
sti
fisubrl
js
divl
cmpsb
aam
loopne
and
rorl
mov
adc
loopne
push
lds
inc
imul
call
xchg
out
mov
out
push
cmpsl
movl
xor
xchg
lret
inc
inc
nop
pop
push
sahf
lcall
fstpl
imul
jmp
arpl
outsl
inc
dec
setne
imul
cmp
jo
cmp
xchg
in
dec
pop
and
in
mov
or
sbb
push
out
sti
push
andl
jmp
popf
mov
dec
cmc
mov
xor
out
sub
popf
sahf
mov
sti
or
fs
inc
xor
push
mov
ss
pop
es
cmp
mov
lret
ffree
das
repnz
jge
xchg
les
push
or
pop
cwtl
pop
push
push
sbb
js
and
movsb
ret
push
inc
in
and
inc
repz
push
cltd
lods
pop
sarb
notl
cmpsl
popf
or
mov
push
mov
xchg
ljmp
dec
lods
test
push
ja
fincstp
add
sahf
or
mov
dec
or
aad
ret
fdiv
or
shr
in
dec
jno
push
push
mov
repz
mov
cmp
outsb
repnz
cmp
dec
jb
xchg
push
orb
xchg
in
cmp
scas
mov
jg
in
mov
daa
imul
or
add
imul
or
mov
push
fs
jbe
enter
shlb
xchg
or
inc
mov
ds
mov
int3
int
and
push
jecxz
popa
arpl
repnz
dec
jno
dec
mov
std
add
fucom
mov
mov
dec
mov
push
cmpsl
lret
push
add
addr16
mov
inc
or
jmp
pushf
scas
sti
cmp
cmp
mov
inc
and
and
in
bound
rorl
and
mov
pop
fisttps
xor
push
ret
test
loopne
mov
imul
jno
sub
and
xor
add
jg
cli
sti
mov
mov
pusha
cltd
nop
push
data16
and
test
pop
fucomip
shrb
in
sbb
mov
sbb
into
pusha
or
mov
insl
and
das
loop
lea
push
push
dec
addr16
pmaddwd
call
test
imul
sbb
pop
push
sbb
dec
gs
in
popf
adc
fs
adc
mov
adc
icebp
jmp
lahf
mov
adc
lahf
sbb
xor
call
xlat
xchg
clc
lods
adc
scas
int
or
cli
lock
or
xchg
lods
xchg
sbb
test
dec
dec
inc
imul
mov
dec
dec
dec
inc
outsb
pop
add
imul
fistps
or
cmp
imul
dec
pop
aad
add
cmp
mov
sub
aaa
adc
sti
cmc
sub
push
cwtl
jle
cmp
xchg
and
or
popf
mov
jnp
subl
repnz
xlat
std
mov
fcmovu
ljmp
push
sarb
sbb
push
pop
lds
xchg
xchg
xor
movsl
and
sub
jl
jb
mov
jo
fsts
insl
jle
ret
cld
cmpl
imul
jg
pop
in
xchg
cwtl
scas
xchg
cmp
sar
pop
inc
sbb
or
lods
roll
mov
int3
sbb
mov
pop
ret
jmp
in
inc
xchg
mov
les
jge
frstor
pop
and
cmp
out
hlt
repnz
pop
xchg
aas
pop
out
mov
adc
mov
cmp
outsb
jns
fadds
push
cmp
mov
xchg
notl
xlat
pop
in
and
movsb
xor
insb
sbb
push
cmp
dec
adc
push
leave
clc
ljmp
nop
rorl
xor
ficomps
mov
sbbl
inc
imul
add
jns
test
testl
cmp
cs
add
xchg
adc
arpl
push
and
or
dec
movsb
push
push
jnp
adc
sub
sti
push
or
cmp
or
aad
jnp
repnz
pop
cmpsb
cmp
add
adc
test
push
push
mov
dec
sbb
mov
add
sahf
mov
leave
mov
lds
lret
data16
mov
mov
or
idivl
push
or
rcrl
mov
daa
cwtl
push
int
fldenv
movhps
ds
aam
mov
and
scas
or
out
sbb
add
lds
ret
out
int3
pop
mov
add
adc
rolb
and
or
or
popa
mov
mov
or
mov
rcrl
sbb
int
push
mov
push
repnz
loope
aad
sbbb
negb
cmpsl
adc
sub
arpl
mov
arpl
jecxz
mov
mov
dec
jns
leave
pop
js
and
test
andl
loop
aam
fcmove
and
pop
repnz
inc
test
or
push
adc
fstp
dec
dec
dec
push
loop
lods
divb
data16
xor
cmpb
cld
je
lahf
fcmovnb
jb
enter
mov
pushf
iret
pop
lcall
insl
xor
rorb
mov
test
clc
push
sub
mov
js
inc
and
out
ficoms
adc
dec
xor
jmpw
dec
inc
dec
jecxz
std
mov
out
push
daa
jge
push
inc
xchg
mov
xchg
ret
aam
dec
cltd
fnstcw
popf
popa
mov
dec
test
jge
adc
shrl
pop
mov
ds
mov
add
jge
or
push
adc
dec
mov
clc
jb
subb
lahf
cmp
scas
sar
mov
mov
adc
gs
pop
adc
add
cwtl
jl
add
jle
mov
out
mov
inc
mov
lods
jmp
jns
in
outsl
mov
mov
testb
fstl
in
mov
pop
in
mov
cmp
scas
jl
ficoms
push
movsl
push
mov
sbb
mov
mov
hlt
sarl
xor
mov
pop
jbe
mov
mov
lock
lods
dec
dec
lret
sub
adc
loope
mov
ret
xor
mov
mov
or
incl
sbb
aaa
mov
sub
add
mov
jg
insl
sub
hlt
pop
ljmp
pop
stos
lods
jo
je
push
inc
jno
out
sub
mov
xchg
xchg
lods
frstor
lcall
inc
in
push
inc
cmc
test
pop
push
pop
filds
loope
mov
cltd
dec
and
inc
rolb
loope
pop
xchg
js
mov
xchg
sub
das
mov
cwtl
xchg
cmp
cmpsb
sbb
repz
mov
ficomps
jp
inc
mov
adc
imul
in
inc
jmp
mov
cmp
push
cli
out
lds
and
sbb
inc
testl
dec
sub
int3
imul
mov
adcl
add
inc
mov
ss
inc
into
call
mov
lods
movsb
fwait
addr16
femms
test
add
mov
bound
cld
hlt
cmp
xor
cs
sub
mov
outsl
repz
add
jbe
xlat
mov
push
icebp
jae
jecxz
add
es
sub
jb,pn
loop
mov
mov
into
pop
xor
rcrb
sbb
test
cs
out
mov
pop
xchg
and
sbb
in
mov
vpmacssdqh
mov
nop
outsl
mov
sub
ret
sahf
lret
leave
push
mov
push
outsl
or
stc
jae
or
mov
dec
push
sti
lcall
fnstcw
mov
fadds
xchg
adc
sbb
pop
aaa
xor
fistpll
adc
or
add
bound
xor
cmp
lgs
cltd
jmp
and
xlat
inc
aad
or
xchg
pop
xor
into
mov
loope
push
fistl
jne
adc
clc
out
insl
clc
and
fldl
iret
xchg
adc
cmp
scas
and
call
inc
pop
mov
clc
pusha
or
dec
inc
or
inc
enter
testb
lahf
push
add
loopne
gs
inc
jmp
mov
jmp
inc
sub
jl
shl
es
adc
repnz
out
adc
enter
fmul
cltd
pop
mov
in
mov
and
mov
or
xchg
mov
mov
mov
mov
test
mov
ret
data16
leave
inc
decl
call
test
mov
fiadds
adc
shll
cmc
inc
jb
or
les
jle
mov
cmpsl
jmp
int3
mov
lahf
lcall
and
imul
sbb
dec
add
and
cwtl
clc
and
shlb
adc
cmp
lahf
sbb
cmovl
push
mov
jne
jne
xlat
out
std
pop
adc
mov
loop
out
mov
and
pop
dec
int3
ja
pop
sti
ror
jmp
pop
pop
cmp
cltd
xchg
sarb
movsb
and
fdivrp
push
mov
adc
sub
rcrb
fiaddl
fdivs
daa
mov
lea
out
lea
xor
push
adc
mov
scas
push
fsubrs
mov
push
adcl
mov
xor
xlat
addr16
xchg
mov
outsb
in
inc
sarb
mov
pushf
insl
sub
jno
jp
cs
and
pop
test
fs
popf
movsl
adc
std
cld
dec
mov
jo
adc
push
jbe
addr16
cli
pop
jns
ror
orl
push
outsb
inc
mov
sub
xchg
adc
xlat
xchg
lock
sbb
mov
test
pop
or
add
dec
add
lahf
push
lahf
shlb
and
push
jmp
mov
les
scas
lods
ret
cltd
mov
jmp
jp
dec
add
jge
cmp
ja
adc
adc
push
rol
cmpsb
sbb
imul
mov
rorl
movlps
pop
loope
sub
test
ja
adc
add
mov
push
or
data16
xor
das
xchg
push
jbe
cwtl
repz
push
jnp
cmp
pop
decl
cli
mov
pop
aam
into
xchg
shll
cli
push
mov
push
test
cwtl
push
jge
ljmp
dec
testl
subl
scas
cmpsb
out
faddp
or
fcoml
es
sbb
xchg
iret
lret
test
pop
or
or
inc
shlb
lret
dec
push
and
xchg
xor
cmpsl
inc
inc
mov
gs
mov
rorl
sub
jne
mov
data16
rcr
xor
mov
mov
pop
movsl
movsb
jmp
inc
test
jle
push
popa
and
lds
cwtl
loop
mov
mov
mov
orb
andb
fcmovbe
mov
cmp
adc
pusha
fstps
jne
fstpt
int
or
mov
cmp
cltd
sarb
and
loop
test
aas
jne
jns
popa
test
stc
rcrb
pusha
mov
inc
inc
jb
sub
movsb
stc
mov
pop
mov
dec
sub
gs
sbb
push
out
inc
test
inc
xchg
cld
xchg
int
insb
ja,pt
movsl
or
js
xor
or
scas
mov
fsubrl
sbb
int3
mov
xor
scas
sarb
dec
jge
jmp
pop
mov
movsb
out
dec
and
loopne
imul
or
test
decl
sti
shl
sti
int3
push
or
lods
push
cmp
mov
and
jno
adc
xchg
sbb
movups
push
das
xchg
sahf
mov
push
and
test
sbb
jns
rcll
in
adc
jb
outsb
jb
out
icebp
jne
mov
mov
cld
fildll
in
insl
imul
jo
repz
pushf
and
sub
push
and
xor
lods
and
fnstenv
sti
fisubrl
mov
pop
and
dec
pop
and
stos
pushf
scas
imul
js
sub
scas
cmp
loope
mov
sar
ja
xchg
insb
loop
cltd
movsl
clc
fldenv
push
xchg
xchg
and
sbb
mov
jmp
inc
push
inc
add
fwait
or
lds
out
int
jecxz
nop
cltd
inc
and
mov
xor
mov
push
fistpl
loopne
lahf
xchg
scas
mov
repz
add
js
ds
or
cmp
dec
adc
sarb
jae
push
and
scas
outsb
mov
pop
xchg
ret
icebp
aas
loope
dec
cmp
inc
dec
add
jnp
fistps
mov
ret
fldl
adc
push
popf
ret
and
cmp
adc
xchg
nop
lahf
jl
push
lods
xor
fimuls
js
std
mov
mov
or
mov
js
stc
and
setg
stos
inc
ja
fidivrs
jecxz
loope
out
or
icebp
call
jno
loop
scas
cmp
in
sub
xor
aam
or
pop
or
inc
mov
dec
inc
shrb
int3
cwtl
xchg
movsl
adc
cmpb
int
mov
fucomp
setg
inc
and
mov
fstpt
ljmp
pusha
cmc
cltd
mov
sub
xor
and
xlat
repz
roll
in
pop
cmp
mov
jnp
icebp
jmp
pop
ss
jp
aaa
sti
loope
sub
mov
xor
cmpl
add
fiadds
hlt
push
mov
iret
cli
fsubrl
bound
sub
inc
pop
and
in
cmc
inc
lret
lods
pop
imul
cmp
mov
popf
inc
xchg
mov
gs
add
lret
mov
das
movsl
push
pop
adc
adc
sahf
outsb
loope
sub
loopne
outsl
fs
inc
adc
sbbb
mov
aam
call
mov
int3
test
and
inc
testl
in
adc
mov
add
stc
jns
mov
mov
rclb
or
mov
push
inc
sbbl
mov
loopne
sub
in
dec
out
repnz
add
mov
and
stc
negl
add
in
push
std
shrd
insb
pop
lret
inc
cmp
pop
pop
lock
push
imul
cmp
mov
jae
dec
jge
shll
push
test
jbe
test
mov
mov
cmp
or
fcoml
sub
in
ret
inc
sbb
xor
mov
add
jmp
push
push
loope
sahf
in
mov
imull
cmp
shl
cmp
test
lods
loopne
cmp
pop
rclb
cmp
in
clc
and
mov
cmpsb
leave
aaa
mov
mov
and
lcall
mov
xchg
and
pop
xchg
sub
and
iret
mov
in
inc
push
mov
fs
fildll
add
in
ret
ja
out
cmp
scas
xchg
sbb
insb
push
ret
mov
xchg
bound
sahf
bound
inc
aad
pusha
lcall
sti
cmp
xlat
push
sahf
mov
mov
mov
push
sarb
dec
std
xor
nop
xchg
mov
xchg
cmp
sbb
cmp
xlat
fs
imul
mov
enter
and
sar
fldcw
mov
pop
ja
call
add
mov
jl
mov
dec
call
or
loope
sub
fcom
hlt
sbb
push
js
loope
orl
dec
adc
xchg
or
pop
xchg
sub
sbb
test
imul
push
push
xor
jg
mov
sub
adc
arpl
ds
fsubs
add
data16
leave
mov
xchg
xchg
dec
mov
bound
pushl
test
sub
and
sub
xor
xchg
mov
pop
cmpsl
stos
pop
fwait
insb
icebp
dec
sub
xchg
imul
or
push
dec
cmp
mov
mov
js
lret
xlat
test
mov
fiadds
loope
mov
xchg
test
test
fnsave
and
popa
mov
adc
jge
andb
xor
das
loop
imul
jne
dec
jnp
sbb
jmp
imul
fadds
movsl
push
or
repz
dec
push
cmp
push
and
dec
jge
mov
mov
jecxz
jne
data16
xchg
mov
xchg
pop
sbb
xchg
mov
xchg
mov
adc
inc
nop
daa
sub
ss
add
mov
fwait
int
lods
and
jl
push
ss
adc
jecxz
pushf
jne
icebp
mov
test
out
jns
cmp
mov
stos
push
call
hlt
mov
das
aam
addb
mov
mov
xorb
mov
xor
sub
pop
adc
frstor
ds
jb
and
pop
add
fdivrs
push
outsl
xor
dec
push
mov
fisttpll
pop
jmp
in
insb
jo
ss
xlat
cmc
jns
add
pop
jmp
mov
into
mov
ja
inc
bsr
stos
scas
jnp
xlat
setb
adc
mov
mov
les
ljmp
dec
pop
sbb
lock
mov
fldpi
pop
enter
and
fcmovu
and
pop
sub
out
pop
outsl
aam
sahf
xor
mov
inc
inc
call
pop
aad
cwtl
jns
dec
adc
and
les
mov
or
jns
dec
push
test
jae
aas
gs
fdivrl
push
stos
test
gs
out
jae
bnd
mov
cmp
or
subl
mov
dec
andl
lds
imul
call
add
jns
clc
mov
aas
popa
jmp
adc
or
jmp
shlb
pusha
push
mov
xchg
out
aaa
jns
hlt
mov
sbb
nop
repz
pop
test
jno
mov
xor
fs
call
cli
dec
and
dec
shlb
loop
popa
xchg
pop
cmp
cld
push
clc
cli
rolb
xchg
pop
lock
ja
popa
lods
push
mov
add
xchg
mov
mov
mov
jo
mov
stos
sbb
cmpl
and
mov
rcr
fildl
repz
jo
imul
imul
ficoms
pop
lds
sub
das
inc
xor
notl
je
dec
jno
out
ss
cld
fildl
and
adc
cmp
add
xchg
ljmp
into
mov
cmc
popf
aaa
pop
jae
lods
sbb
adc
stc
mov
pop
sub
sbb
sub
andnps
or
jl
push
sub
mov
cs
mov
scas
inc
sub
pop
mov
xor
mov
gs
mov
push
pop
pushf
outsl
loopne
push
mov
inc
leave
adc
or
ret
and
inc
lret
icebp
fs
aaa
pop
mov
push
nop
sub
jne
mov
jno
mov
incb
adc
testb
or
int3
add
stc
jbe
arpl
mov
in
push
mov
fsubrs
pop
fidivs
loopne
test
jmp
call
sub
xchg
popl
dec
jbe
fistl
dec
addb
popa
mov
push
fstps
pusha
xchg
sub
out
cmpsb
mov
xor
inc
xor
jb
add
fistps
jo
or
mov
mov
sarl
loope
inc
daa
xchg
mov
mov
sub
add
adc
push
stos
dec
xor
es
out
or
filds
and
fnstsw
loopne
mov
cmp
jmp
shll
fsubs
or
in
dec
adc
arpl
jno
loop
fadds
mov
mov
ret
mov
add
lods
int
mov
pusha
jp
pushf
js
lret
sti
xchg
mov
cmp
stos
lods
cli
les
lods
push
movb
in
movsl
sbb
fdivrl
dec
and
daa
sbb
clc
sbb
in
dec
pop
push
int
test
mov
mov
addr16
shl
xor
or
jmp
sub
leave
and
rcll
mov
mov
mov
movhps
js
stos
cmp
xchg
dec
insl
fcmove
adc
stos
lea
jp
into
ss
mov
push
decb
push
gs
fdivrl
cmc
aas
inc
xchg
sub
fnstsw
jns
or
out
or
shrb
mov
aam
pop
xchg
shlb
addr16
mov
cli
mov
and
xchg
or
jp
pop
aad
mov
pop
aaa
aam
mov
test
adc
roll
fs
int3
lea
es
inc
cltd
mov
clc
std
sbb
out
pop
enter
xor
xchg
inc
add
xor
imull
add
mov
xchg
fsubp
inc
shrb
lds
xchg
fwait
inc
bound
lret
xor
fs
cli
mov
mov
cmp
pop
jp
js
lret
sub
inc
fstps
xchg
daa
out
push
push
imul
outsl
add
or
lods
cltd
mov
xchg
cltd
ret
pop
ret
stos
int3
vpaddb
mov
push
mov
nop
push
mov
hlt
leave
pop
dec
adc
bound
rcrl
lcall
mov
xor
or
or
inc
stc
int3
jecxz
mov
push
pop
adc
dec
fcompl
lahf
pop
icebp
pop
mov
mov
out
dec
jecxz
iret
pop
inc
cmpsl
imul
lock
adc
das
or
sub
jnp
test
cmp
les
fldt
fwait
inc
mov
daa
or
aad
inc
fucomp
inc
dec
lea
sahf
stc
push
mov
mov
ljmp
jp
xchg
cld
pop
in
mov
std
inc
imul
or
int3
mov
mov
sbb
pop
push
iret
jb
pushf
mov
xchg
mov
cmpsb
loop
incb
mov
lods
cli
lret
shrl
mov
push
mov
sbb
push
icebp
jmp
mov
dec
push
sbb
test
add
out
inc
jne
ss
xor
push
push
out
jo
fs
mov
iret
xchg
xchg
lret
inc
and
xor
nop
and
mov
data16
frstor
add
lods
mov
cmp
mov
sub
and
jge
adcl
clc
cli
push
out
mov
push
jns
repnz
pop
mov
mov
rcl
push
cld
addr16
negb
bsr
push
sub
rclb
sbb
dec
in
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
movzbl
sub
push
adcl
push
xor
xor
mov
sub
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
pop
push
subl
call
adcl
push
xorl
push
addl
push
push
andl
push
andl
push
sbbl
push
subl
call
push
push
push
push
push
push
subl
call
xorl
dec
movl
jne
push
push
push
call
orl
test
je
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
imul
mov
not
mov
mov
mov
cmp
movl
jne
addl
movl
orl
pushl
pushl
pushl
call
adc
mov
mov
sbb
mov
mov
add
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movzbl
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
push
sbb
push
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
mov
xor
mov
mov
sub
sub
mov
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
jmp
icebp
push
inc
movsl
cmpsl
mov
aaa
and
cmpsl
aam
and
popa
bound
bound
cmp
das
fstpt
mov
repnz
cltd
jle
sub
pop
mov
test
dec
cmp
mov
sahf
popl
in
aas
jae
hlt
lods
jb
out
ficoml
mov
std
or
xchg
sbb
in
out
mov
outsb
or
jnp
addr16
add
fdivrs
pushf
add
addl
jo
or
arpl
out
lds
sub
imul
in
scas
fsubrl
pop
js
dec
daa
das
ret
fisttps
mov
jae
jne
mov
mov
push
mov
fisubl
adc
cmp
and
in
sub
test
inc
mov
sbb
push
sub
cli
sbb
shrb
pusha
insb
xlat
test
jo
cmp
pop
clc
and
sub
loope
jno
fcmovu
stc
arpl
lock
stc
fldl
sub
cs
mov
repz
sbb
inc
lods
movsb
sub
sbb
ss
inc
add
dec
inc
cmpsl
test
xchg
xchg
pop
cltd
pop
and
and
imul
xlat
lahf
sub
mov
adc
xchg
shl
sbb
data16
mov
shl
sarb
mov
sub
out
out
sub
arpl
icebp
push
pop
fcmovu
ja
jp
shll
int
mov
rcrb
mov
jmp
dec
xchg
push
jge
lcall
mov
cmpxchg
dec
insb
and
ljmp
xchg
mov
push
add
mov
lret
test
insb
outsl
mov
imul
xor
mov
xchg
lahf
in
inc
inc
push
dec
xor
inc
or
pop
add
push
adc
fwait
std
adc
mov
push
mov
or
and
aad
pop
je
ds
mov
call
jno
xor
mov
cmpsl
xorb
jge
mov
fwait
mov
test
mov
cmp
fildll
pop
xchg
mov
sub
and
cmp
cmp
mull
mov
outsb
imul
jecxz
cmpsl
aad
sub
ss
adc
jno
cltd
shrb
jecxz
and
or
loopne
and
into
push
xor
bound
mov
in
pop
mov
scas
idivl
mov
aas
mov
and
add
test
cmpsb
adc
sbb
bound
lahf
pop
mul
int
pop
mov
push
mov
sbb
jb
aad
adc
in
mov
enter
xor
xlat
mov
je
push
add
dec
sbb
enter
sub
jmp
mov
ss
in
mov
fldt
jno
sub
in
minps
jbe
lret
pop
mov
orl
inc
xor
cmp
adc
xchg
in
mov
int
shrb
sub
daa
les
sbb
aad
rclb
mov
hlt
push
sub
in
popf
int3
xchg
outsl
xor
rcl
in
dec
leave
inc
mov
mov
ret
mov
andl
in
ss
arpl
or
pop
subb
das
fidivs
icebp
pop
or
adc
ficoms
fdivr
cld
mov
mov
ja
mov
sub
stos
repnz
jge
adc
icebp
jb
mov
xor
mov
fildl
fisubs
dec
xchg
leave
inc
push
push
xchg
mov
pop
mov
lods
lret
test
test
imul
lods
das
and
cmp
or
dec
addr16
aaa
inc
andl
test
movl
jg
rclb
stos
cmp
lcall
xchg
sub
mov
inc
adc
insb
jo
rcll
add
notl
lcall
popf
xor
pushf
sbb
xsha1
cmpsb
lret
cmp
shlb
inc
jge
xchg
mov
push
mov
fucomip
push
pop
xchg
sbb
mov
call
arpl
sahf
ret
dec
adc
hlt
shlb
push
pop
aas
push
inc
mov
insb
in
or
jg
inc
ret
cmp
jns
sahf
lods
and
scas
movsbl
pop
adc
in
mov
push
popa
gs
out
mov
mov
fdivl
stos
inc
xchg
repz
adcb
fwait
pop
xchg
ja
pushf
add
pop
pop
mov
rcll
mov
je
push
hlt
dec
data16
sbbb
movl
and
ret
test
or
cmpsb
mov
aam
out
test
and
sarb
ljmp
dec
dec
fisttpl
add
jb
inc
lea
addr16
inc
negl
mov
outsl
cmp
sub
das
xchg
inc
cmpsb
mov
mov
int
add
push
sbb
inc
clc
cmp
and
adc
cmp
inc
and
adc
lret
push
loop
mov
test
sbb
cmp
mov
push
add
cld
push
push
or
lcall
enter
cwtl
or
adc
jge
or
loop
and
rep
or
sub
push
fcomp
movsb
pop
pop
mov
dec
leave
lods
orb
lods
mov
jns
xchg
jmp
dec
inc
ud2
push
mov
sahf
adc
or
jae
mov
jmp
test
dec
xchg
insl
sbb
push
cli
sahf
inc
mov
fcmovne
mov
fcoml
int3
jnp
dec
into
ss
stos
inc
imul
push
mov
dec
cmp
lcall
push
gs
xor
push
outsb
sub
loope
faddp
imul
mov
sbb
dec
repnz
and
jp
mov
sti
dec
sub
mov
popa
add
adc
mov
outsl
fs
lods
sarb
subl
adc
aad
sbb
je
jbe
mov
test
jle
mov
cltd
xchg
or
mov
aad
ret
out
lods
cmp
insl
sub
mov
test
sub
iret
ret
xor
ja
imul
sub
and
jl
sahf
jae
ret
sbb
mov
sub
repnz
or
sbb
xor
fldt
pop
dec
in
jl
int
iret
mov
adc
sbb
data16
or
inc
mov
mov
cmp
movsb
fdivrp
cmp
lds
lock
pop
xchg
sbb
fists
dec
movb
jb
dec
stos
inc
xchg
mov
in
test
add
xor
cmp
dec
xor
adc
mov
add
mov
dec
push
jl
icebp
xor
dec
stc
enter
and
in
jle
ret
mov
cld
loope
jp
cltd
bound
add
insb
add
xor
imul
insl
das
add
mov
mulb
adc
lods
scas
mov
jnp
test
lock
mov
out
stos
int3
xor
cmp
sub
cmp
sarb
jns
jge
push
shrl
sbb
les
cld
outsl
fnstenv
dec
mov
ss
out
jb
push
mov
mov
and
test
push
ds
mov
push
fildll
or
bnd
mov
sbb
add
xchg
xorl
fldt
push
xchg
ret
pop
dec
jmp
cmp
je
cmpsb
adc
dec
dec
test
mov
xchg
shlb
push
in
jo
lcall
adcl
call
or
aam
call
add
pop
ja
dec
roll
je
mov
mov
fistpl
ret
xchg
lret
xchg
aam
daa
shlb
jge
shlb
mov
xor
or
cmp
pop
fwait
cmp
in
jle
movsb
or
nop
int3
lds
sub
inc
dec
mov
fisttpl
add
adc
sarl
dec
sub
in
lahf
sahf
sub
fstpl
mov
mov
add
jo
cmp
stos
jne
sbb
dec
test
cs
push
stos
outsl
mov
pop
mov
je
adc
xchg
jae
ret
sub
adc
out
add
add
imul
lret
scas
push
mov
jb
xchg
ds
inc
test
push
mov
faddl
shl
inc
aad
sbb
int
repz
mov
push
roll
xchg
adc
mov
popf
fcomps
stc
add
add
inc
repnz
iret
lret
lods
lret
xchg
clc
or
cmp
inc
pop
mov
push
jg
shrl
aam
push
inc
sbbl
cwtl
pop
jns
pop
push
dec
hlt
and
push
hlt
sub
stos
xchg
je
xchg
in
cmpb
sbb
nop
dec
iret
aam
pop
jns
jle
cli
push
jno
mov
xchg
add
lcall
loop
mov
mov
push
rolb
inc
pusha
jmp
inc
test
in
lods
int
lods
shl
sbb
shll
sub
lcall
loopne
shrb
sub
add
jne
ficompl
pop
addb
mov
in
mov
push
mov
push
jecxz
pop
or
or
ret
fldl
mov
inc
push
imul
mov
fidivs
push
xor
pop
outsb
and
ljmp
mov
mov
in
jb
mov
inc
pop
inc
pop
cmpsl
repz
adc
jp
fisubl
scas
inc
lret
and
lods
push
dec
shr
jecxz
rcl
mov
ret
add
imul
ljmp
pshufw
xchg
mov
arpl
jae
pop
stc
xor
dec
push
cld
jecxz
push
push
andl
sahf
push
or
mov
loope
test
add
es
push
inc
push
mov
sbb
mov
scas
or
arpl
addr16
stc
mov
xor
clc
out
and
mov
xchg
nop
mov
orb
outsl
in
xor
jle
fdivs
sbb
push
sar
arpl
inc
mov
jae
std
adc
out
sbb
mov
leave
repz
jmp
dec
mov
or
rcrb
lcall
out
cmp
stc
jb
aam
out
xchg
ret
cmp
cmp
jl
jb
shr
cmp
mov
sbb
insb
and
xor
imull
xchg
adc
mov
shlb
rclb
sarb
adc
push
sbb
daa
lea
enter
xlat
lods
dec
in
add
sub
cmp
mov
test
xor
loop
loope
mov
test
movsb
sbb
mov
xchg
cmc
pop
jne
in
iret
sbb
jg
cmp
lds
fcmovnu
xor
pop
fistps
and
lods
pop
int
int3
push
dec
fst
cld
sub
xchg
xor
fninit
repz
pop
jbe
push
rcll
int3
sbb
mov
scas
imul
cmpl
das
jns
mov
and
lea
out
aaa
ret
mov
lret
mov
sub
xchg
das
lret
es
pushf
nop
sbb
cli
ret
mov
ror
es
loopne
popf
or
mov
out
lods
push
stos
or
mov
lret
or
jmp
iret
div
arpl
mov
xor
ds
das
sub
fidivl
mov
lods
mov
xor
jge
or
call
xchg
pop
adc
dec
pop
pop
ljmp
out
jae
call
clc
into
orl
fnstcw
or
outsb
cltd
movsl
pop
fldcw
rol
sbb
push
ljmp
sub
push
jp
cmp
sub
add
push
xor
pushf
mov
cmp
imul
es
lret
fsubrp
fsts
add
add
mov
xchg
fmuls
scas
mov
mov
cmp
daa
xor
xchg
fdivl
xchg
insb
cs
int
out
cs
daa
subb
bound
or
xchg
mov
adc
js
pop
fistps
jno
in
xchg
sub
outsb
cmc
cli
and
jo
mov
lahf
iret
pushf
lock
push
ret
bound
data16
loop
xchg
test
lcall
adc
ja
ja
in
scas
movsb
jge
mov
xchg
push
insb
rorl
fwait
xor
int3
cmp
adc
inc
std
jl
shll
mov
sbb
xchg
nop
xor
sbb
lahf
es
addr16
jae
and
mov
inc
dec
test
push
mov
shlb
cltd
imull
in
ja
push
je
shlb
push
aam
xlat
aad
and
sti
mov
scas
lahf
jbe
add
leave
and
lahf
sbb
stos
fists
iret
and
xchg
shrl
out
xor
dec
outsb
pop
and
xor
inc
dec
and
push
out
incl
inc
inc
in
xlat
in
jno
mov
outsb
cmpsb
es
dec
push
inc
in
inc
outsb
out
jbe
dec
fdivrs
pop
inc
lods
into
fildll
imul
pusha
lea
fildll
mov
outsl
mov
out
fs
cltd
cmp
xor
mov
clc
pop
inc
jg
add
cmp
arpl
mov
pop
imul
adc
or
mov
or
lcall
lds
inc
clc
jmp
push
push
hlt
mov
mov
dec
mov
push
jne
sti
cld
dec
clc
stos
out
enter
mov
lods
ds
and
adcl
jle
xor
xor
dec
sbb
pop
fldcw
test
fisubl
xor
int
aas
fisttpl
push
in
dec
inc
inc
lret
add
ljmp
add
mov
dec
and
sahf
aad
jge
scas
das
stos
in
mov
mov
xor
and
xor
scas
push
dec
xchg
mov
into
sbb
mov
mov
insl
mov
sub
mov
jmp
jno
dec
pop
mov
and
je
ds
into
in
shr
fisttps
xor
mov
pop
or
or
arpl
daa
loopne
lcall
xchg
lds
xor
std
lock
fdivl
pop
adc
jl
adc
xchg
mov
les
inc
sub
and
cmpsl
mov
xor
jmp
movd
mov
adc
push
mov
test
stos
movsl
insl
xor
xchg
fstpt
mov
xor
mov
stc
cs
sbb
or
js
cmpb
inc
subb
mov
inc
xchg
test
cmp
in
frstor
cmp
jmp
and
fs
ror
xchg
lret
inc
push
jno
loopne
sbb
push
mov
scas
mov
cmp
sub
cmp
add
insb
push
lahf
fwait
add
cli
lea
pop
mov
cli
fldl
xor
lcall
mov
jnp
sub
scas
mov
test
and
mov
lret
mov
into
mov
in
sub
repnz
pop
add
loope
in
push
mov
testb
xor
cmp
cmp
and
dec
data16
or
pop
adc
inc
leave
sub
imul
lods
mov
xlat
jge
mov
xchg
cld
pusha
movb
xor
or
in
stos
test
imul
inc
inc
push
dec
es
pusha
test
test
or
xchg
push
pop
pop
sahf
scas
popa
int3
add
mov
inc
jbe
jno
cmpsl
pop
jmp
push
mov
stos
cltd
mov
cmpsl
push
testl
int
sbb
cmp
andl
icebp
andl
int3
mov
icebp
fcompl
aas
incl
dec
enter
sarb
sub
inc
ret
test
repz
mov
and
mov
push
cmp
cmpsl
ficoml
lea
test
cmpsl
push
mov
cli
jp
outsb
outsb
and
mov
clc
cld
movsl
imul
cmpsl
xchg
mov
mov
ljmp
push
or
mov
jge
cmpl
stos
xchg
pushf
sub
push
cli
aad
mov
pop
pushf
in
push
mov
lret
mov
in
lcall
je,pt
mov
xor
nop
and
push
std
inc
insb
sbb
ja
jb
aam
fs
cltd
arpl
das
sbb
std
add
dec
in
movsb
dec
aas
leave
cs
or
outsb
decl
cwtl
shlb
int3
hlt
and
jb
out
call
push
pop
sub
mov
xchg
pop
jmp
mov
add
out
cli
or
aaa
mov
cmp
or
fildl
outsb
fwait
cmp
xor
ret
pop
cmp
mov
and
fwait
outsl
add
sub
pop
aaa
pop
shlb
pop
ss
inc
adc
fwait
inc
leave
sbb
hlt
nop
mov
loopne
lahf
cmpl
shll
sub
imul
fdivrs
dec
pop
filds
mov
shrl
xor
mov
addr16
add
cmp
fimuls
lcall
dec
rcrb
sbb
scas
ret
cmp
inc
mov
arpl
dec
in
sbb
pop
aad
jnp
hlt
inc
xchg
cmp
out
notb
aaa
gs
repz
add
dec
pop
movsl
xchg
pushf
mov
push
in
push
jp
inc
out
mov
loopne
pop
xchg
repnz
mov
loope
lcall
inc
xchg
xor
fcmovnbe
test
daa
popf
call
dec
inc
xor
fdiv
scas
cld
aas
mov
mov
and
shlb
je
les
out
push
ficompl
je
pusha
test
pop
jne,pn
or
pop
cltd
or
mov
fistpll
roll
out
mov
leave
pop
sbb
clc
mov
sbbb
sbb
push
pop
jo
push
in
cmp
and
push
mov
jbe
adc
into
jl
sbb
push
mov
std
xor
movl
fimull
jne
rcpps
ret
sbb
inc
dec
jle
and
dec
out
movsl
ljmp
jg
sbb
mov
cmpsl
xor
cmp
jl
cmc
push
jecxz
dec
mov
icebp
popa
out
arpl
sbb
aas
lea
data16
popf
mov
sbb
xor
scas
into
sarl
aaa
ja
dec
pop
adc
cmp
sbb
ret
pop
jbe
pushf
jmp
dec
adc
insl
fiadds
pop
dec
sbb
dec
inc
sub
jge
cwtl
pop
sbb
test
imul
pop
insb
mov
not
push
test
fdivl
push
pop
pusha
rcrb
adc
xchg
xor
pop
mov
lcall
push
ret
push
mov
xchg
jne
xchg
xor
and
jo
jecxz
lahf
into
cs
inc
sbb
inc
imull
mov
push
mov
popa
dec
inc
js
push
cltd
adcb
or
loopne
aas
jle
rorb
ljmp
xlat
lret
xchg
dec
cli
ret
inc
fisubrl
leave
repnz
add
sbb
sti
imul
xchg
mov
mov
outsl
les
testb
xor
les
pop
sub
or
jmp
movsb
mov
mov
lea
jne
add
add
mov
jb
dec
mov
fidivs
out
adc
std
or
mov
fbstp
aam
mov
add
fsts
cwtl
sti
pop
jnp
aaa
test
shll
sub
add
pop
xchg
sub
rorb
sbb
insb
jo
fwait
aam
dec
pop
cmpsl
lods
lcall
jg
dec
or
push
inc
imul
nop
ljmp
xorb
mov
scas
sub
sar
xchg
mov
jge
test
lret
pop
mov
push
mov
das
mov
jle
add
dec
push
pop
sti
fsubs
cwtl
mov
inc
das
cmp
jno
lds
sbbb
shrb
mov
lods
inc
push
add
arpl
sarl
mov
lods
dec
roll
mov
jmp
daa
lea
arpl
imul
lods
lcall
xchg
mov
jno
call
jae
lret
push
loop
lahf
frstor
clc
adc
icebp
scas
xor
lret
fsubrs
arpl
fwait
mov
push
ret
mov
jns
rcrb
outsl
js
inc
and
fs
pop
ret
call
mov
outsl
push
outsl
add
jbe
adc
mov
adcb
pop
arpl
repz
aaa
sub
jno
fs
mov
insl
ret
mov
or
xchg
sbb
setg
das
jae
and
add
leave
or
mov
leave
sbb
push
nop
cmpsb
mov
sub
movsl
js
sahf
mov
add
lea
out
in
les
in
mov
cmp
fimull
push
outsb
pop
add
ret
pop
pop
mov
mov
dec
sbb
popa
push
jg
xchg
popf
jbe
into
dec
and
inc
dec
mov
test
rorb
sub
push
mov
sub
jne
jns
cli
and
cmc
and
xchg
push
clc
xchg
xchg
xchg
int
cmp
lods
mov
lock
sbb
dec
outsb
jmp
inc
mov
cli
inc
sbbb
sub
push
cmp
jo
fists
mov
loop
or
insl
push
dec
jne
lods
imulb
popa
outsl
jnp
les
xlat
jno
arpl
loope
out
xchg
ljmp
es
insb
jae
test
ljmp
and
jmp
jge
push
push
in
in
dec
cmp
and
push
in
pop
cmc
popa
fisttps
cmp
jno
adc
xchg
leave
jbe,pn
pop
and
jle
in
mov
dec
data16
xor
in
bound
mov
cmpsb
test
cld
subb
cmc
ja
cmp
mov
mov
adcl
divps
pushf
rolb
loope
outsl
stc
stos
jno
push
mov
adc
arpl
mov
sbb
lret
cmpsl
push
insl
add
push
pop
and
call
inc
mov
sub
pop
add
xor
xchg
cltd
push
inc
adc
scas
xchg
sahf
cmp
xchg
mov
dec
movl
test
inc
dec
mov
leave
jae
gs
inc
mov
in
add
inc
dec
mov
stos
dec
add
out
leave
inc
mov
iret
or
loop
push
jg
jp
pop
xor
mov
jg
shlb
cltd
scas
sub
nop
jg
call
lods
pop
add
loope
fstl
push
inc
cmp
sarl
mov
pusha
hlt
popf
pop
pushf
rcll
xchg
sbb
jg
xlat
fisttpll
insl
jo
lcall
xor
aaa
fdivrl
add
mov
stos
mov
hlt
add
outsb
xchg
jp
popf
daa
popl
lret
leave
les
inc
sbb
mov
cmpsb
or
movsl
xor
pop
aaa
bnd
xchg
arpl
push
dec
in
jno
pop
rol
xlat
in
and
jno
xchg
js
push
xor
testl
loope
xor
xor
mov
movsb
loop
into
xchg
mov
imul
sahf
push
sbb
cwtl
loopne
jbe
pop
add
jnp
push
inc
stc
mov
fisttps
es
mov
subb
push
scas
xor
mov
mov
sbb
fisttps
std
out
xchg
push
pop
imul
or
cmp
pop
push
jae
xorb
shlb
mov
mov
inc
dec
mov
sub
inc
cwtl
int
mov
push
mov
sti
push
lar
jl
loopne
mov
das
mov
or
lods
lods
call
outsb
mov
stos
leave
stos
jmp
mov
fs
jmp
ljmp
jbe
shl
jp
xor
xchg
push
xor
out
jnp
ss
xchg
and
push
cmpsb
pop
mov
lea
or
cli
pusha
fimull
rcr
mov
inc
iret
in
xchg
inc
leave
cmp
xchg
and
cwtl
jmp
lahf
fmull
in
imul
inc
jl
or
idivl
int
fs
outsl
sub
fcmovnu
pop
mov
andl
leave
cmp
bound
lahf
pop
dec
mov
inc
dec
js
jbe
cmpb
call
repnz
sub
mov
leave
movsb
imul
jno
mov
xchg
dec
cmp
and
pop
movnti
mov
jne
add
adc
lds
xor
pop
jno
sub
cmpsl
stc
pop
ret
add
cmpsl
fbld
xchg
sbb
orl
sti
fistps
jo
jg
scas
push
bound
mov
cli
test
mov
mov
inc
xchg
xor
mov
sar
push
subl
clc
stc
dec
or
cmp
dec
popa
sbb
addl
push
testl
mov
stos
sub
sub
xchg
mov
arpl
mov
jmp
movsl
mov
out
mov
in
jmp
xchg
aaa
dec
sbb
data16
cli
push
push
bound
mov
jle
sub
clc
xchg
repz
mov
push
inc
cmp
sbb
adc
adcb
jle
xchg
and
rorb
ret
mov
fucom
shll
cwtl
lret
imul
int
mov
test
fildll
aad
lret
stos
imul
repnz
mov
or
nop
and
fcomp
cmp
scas
dec
or
nop
push
sub
mov
nop
mov
in
jne
sarl
stos
pop
jmp
dec
outsl
push
mov
dec
test
outsl
std
std
sub
fwait
lret
ss
sub
movsb
inc
arpl
mov
leave
jb
jne
insl
push
cmpsb
cmpsb
sbb
lock
mov
jne
or
or
mov
notl
mov
add
push
sub
dec
fidivs
lea
xchg
fwait
loop
addr16
std
imul
mov
test
stos
arpl
add
or
sub
xchg
push
push
pop
int
dec
mov
push
mov
leave
pop
aam
js
int
dec
movsl
push
push
mov
jae
mov
jmp
out
stos
xchg
aas
pop
jmp
addb
xor
push
mov
xor
push
mov
mov
stos
or
add
sub
sti
mov
jnp
push
or
mov
sub
fnsave
or
mov
aam
pusha
mov
mov
sbb
ficoml
out
mov
mov
je
imul
add
and
jo
fistps
ja
pop
mov
pop
orl
xor
mov
sbb
xchg
mov
push
and
mov
std
leave
add
lea
mov
mov
pop
dec
adc
and
xchg
lods
add
lcall
pop
shl
int3
push
or
rcr
repz
in
inc
inc
sahf
xor
sbb
iret
pop
out
fadd
fmuls
outsl
mov
sub
inc
add
das
lcall
or
out
mov
jecxz
mov
cmc
sbb
sbb
push
in
add
cmp
xchg
sub
xor
out
jne
mov
bound
jg
dec
push
mov
aaa
sbbb
es
or
jp
push
cmp
mov
icebp
xor
lret
and
mov
es
cmp
mov
ljmp
dec
lret
jno
test
mov
and
shl
neg
test
mov
mov
rorl
aad
idivb
xor
add
mov
sbb
or
push
and
outsl
adc
or
loope
mov
inc
lret
sub
push
loop
imul
out
or
fnstcw
test
dec
and
jp
mov
rorl
jb
or
cmp
cmp
cmp
push
fs
sbb
shll
pushf
std
std
call
arpl
sbb
repz
ret
jge
mov
fcmove
adc
fisttps
push
ja
push
jnp
and
cmp
or
pop
sbbb
imul
jae
inc
cwtl
jge
xor
push
dec
sbb
adc
jmp
negb
sub
ret
lahf
or
fdivl
in
adc
push
push
mulb
add
stos
push
pusha
cs
cs
pop
jnp
adc
test
js
jb
or
cmp
mov
test
cmpsb
in
adc
es
mov
insb
or
or
dec
out
lock
fucomp
cmpsl
loopne
mov
sbb
mov
fmul
out
mov
mov
in
push
push
jbe
or
pushf
push
fwait
mov
mov
loopne
xchg
xor
xchg
lret
sbb
lcall
xor
add
aam
shlb
xlat
cmp
lods
pop
push
mov
push
mov
stc
xchg
das
cld
mov
adc
daa
cmc
sub
pushf
decb
testb
loop
pusha
loop
mov
repz
test
pop
jg
cmc
inc
hlt
ja
pop
xor
mov
xchg
xchg
cmpsl
inc
fs
mov
xchg
popf
addr16
xchg
movsb
sub
xchg
sbb
lret
mov
jo
mov
jmp
pop
mov
sbb
push
push
add
xlat
jmp
pushf
push
adcl
jmp
cmp
inc
stc
inc
mov
xchg
mov
sub
nop
xchg
and
sbbb
arpl
in
in
fsubr
mov
and
rorb
sbb
sub
psubq
ret
inc
js
add
inc
loopne
add
push
add
add
add
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
or
mov
mov
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
add
xorl
mov
mov
xor
mov
sbb
mov
sub
mov
mov
mov
push
not
pop
adcl
sub
add
mov
or
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
mov
andl
movl
mov
subl
mov
movl
mov
mov
sub
mov
addl
xor
add
orl
mov
xorl
lea
subl
mov
subl
mov
xor
subl
add
mov
andl
lea
sbbl
push
and
mov
subl
xor
add
sbbl
push
and
mov
adcl
push
andl
pushl
xorl
call
inc
mov
add
mov
mov
mov
xorl
xor
mov
xorl
add
jmp
adc
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
call
xor
add
dec
mov
jmp
and
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
sbbl
sub
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
jmp
iret
and
daa
mov
jle
js
mov
fisubl
push
pop
bound
stc
aad
rclb
dec
sbb
mov
jns
js
out
ja
pop
fsubrl
fsubs
std
jne
dec
insb
cmpsb
sbb
or
mov
jb
or
or
push
mov
cmp
scas
push
repnz
pushf
push
mov
leave
aas
scas
xor
mov
cmpsl
repz
pop
popf
jno
adc
out
sbbl
cwtl
cld
push
lahf
rorb
dec
mov
and
es
or
adc
insb
jne
xor
inc
push
ret
cmp
fistpll
ljmp
rcll
jle
add
jno
pushf
sbb
jo
mov
mov
in
jp
cmpsl
int
push
add
mov
jns
movsl
ror
mov
push
jl
sub
push
cltd
fisubrl
inc
ljmp
cmp
cwtl
std
ja
push
pop
test
and
scas
into
mov
cs
popa
mov
pusha
cli
dec
fisttpll
dec
inc
and
dec
mov
jl
mov
and
push
outsl
ret
pushf
push
test
inc
add
cli
fcoml
insl
dec
testl
pop
in
orb
or
inc
push
push
mov
jo
mov
test
daa
jl
push
mov
pop
mov
fldl2t
push
jbe
addl
or
lods
xlat
ja
ucomiss
sti
loop,pt
xor
mov
mov
loopne
dec
lea
lcall
call
lock
xchg
data16
xor
jne
mov
mov
dec
fcoml
pop
fnclex
sub
fisubl
enter
inc
inc
in
pop
mov
xchg
jp
fwait
cmpsb
mov
js
rorl
gs
mov
inc
ret
pop
ds
mov
dec
cmp
dec
shll
xchg
add
jo
lret
les
pusha
addr16
pop
pop
inc
add
arpl
fstl
jb
mov
sbb
xlat
daa
fwait
mov
test
pop
stos
lahf
inc
mov
xchg
mov
cmp
lahf
and
fisubl
adc
xchg
repnz
inc
pusha
lods
push
test
ljmp
bound
inc
fcoml
push
shl
mov
fistps
jl
or
mov
imul
rcr
push
inc
ffreep
test
mov
mov
loop,pt
or
das
fimull
cmc
add
cmp
movsb
shrl
addr16
xor
adc
mov
adc
roll
sbb
xor
jge
test
mov
mov
lea
arpl
mov
int
inc
or
jne
lret
jno
mov
sbb
inc
adc
dec
hlt
lret
movsb
addb
mov
cmp
push
pop
add
xchg
imul
fsts
stc
lods
arpl
aad
rol
repz
sbb
imul
in
fistpl
pop
jecxz
push
ja
pop
jbe
fsubr
xor
cld
or
std
out
pop
jno
and
push
fcom
cmp
and
leave
lds
dec
mov
jle
inc
push
ficoms
push
sti
mov
jmp
cmp
lahf
daa
ret
pop
adc
pop
test
mov
cltd
clc
scas
ljmp
sbb
push
push
int
xor
into
jb
nop
push
jb
jb
aaa
pop
cmpsl
loopne
jg
outsb
daa
mov
push
std
pop
add
notb
addr16
cmp
jns
mov
fs
sbbb
lahf
cmpsb
xchg
mov
push
ds
js
loope
sub
pop
mov
or
ds
push
in
cmp
cmpsl
jb
aas
mov
cmpsl
enter
jnp
mov
push
ret
in
lods
insb
mov
aam
dec
push
inc
mov
cltd
les
xor
out
add
cmc
push
dec
outsl
pop
mov
into
mov
repz
aas
mov
xchg
xor
enter
pushf
sbb
xchg
dec
adc
ss
inc
dec
dec
jg
getsec
sahf
ret
inc
xor
sbb
xchg
je
fmuls
mov
leave
aam
xor
mov
fs
cwtl
adc
mov
leave
push
cwtl
cmp
xor
push
out
arpl
fisttps
mov
mov
pop
aam
stos
or
dec
out
jecxz
pop
scas
jle
sbb
jno
dec
push
divl
ss
add
out
cld
test
jmp
out
imul
lret
dec
mov
sub
cmp
fmuls
lods
adc
cwtl
icebp
jo
jno
and
adc
cmp
flds
cld
fldl
sbb
jge
add
loop
out
repnz
mov
pop
xchg
popa
pop
mov
ljmp
mov
test
xchg
loopne
dec
jbe
xlat
add
sub
int
or
push
lods
push
test
idivb
adc
shrb
cmp
xor
enter
and
jge
mov
imull
inc
cld
int3
adc
cmpsl
push
jbe
or
leave
push
idivl
sub
sarb
or
out
jmp
mov
hlt
xchg
iret
je
and
cmpsl
sub
shl
loop
or
ds
cmp
pop
pop
pop
testl
xchg
add
add
xor
add
jp
cmp
pop
fistl
mov
inc
add
mov
cmc
dec
sub
mov
push
jbe
iret
jbe
lret
movsl
lahf
sbb
and
dec
mov
in
jl
jg
rcl
sub
in
imul
inc
jnp
mov
jno
jp
push
jge
xchg
dec
adc
loopne
xor
add
mov
mov
mov
or
int3
mov
aaa
imul
sarl
loopne
cmp
test
out
lcall
pop
sti
mov
mov
and
jecxz
fstpl
mov
adc
sbb
ror
les
pop
ja
sbb
sbb
stos
inc
mov
xor
add
jne
sbbl
jb
fcoms
add
push
cmp
mov
jae
rcl
fldl
mov
jp
sbb
add
or
jg
ljmp
xor
mov
xor
ljmp
push
push
sub
dec
fnstsw
movsl
sub
or
aam
sbb
pop
mov
xlat
mov
xchg
push
xchg
cltd
enter
jnp
shll
sub
sbb
inc
and
sub
xchg
or
jae
sub
call
push
xor
nop
rcr
xchg
outsb
pop
mov
adc
mov
xchg
aaa
iret
mov
enter
fnstcw
push
or
test
das
xchg
stc
dec
popl
or
arpl
mov
call
jle
cmp
fs
push
and
xor
pop
std
push
add
out
xchg
inc
and
dec
stc
cltd
xchg
test
dec
popa
adc
jmp
mov
xor
inc
cli
je
scas
mov
fucomp
sahf
divl
call
jbe
arpl
xchg
cmp
test
mov
movsl
push
aad
sahf
out
xchg
std
sub
pop
mov
out
push
and
out
push
adc
jbe
or
gs
orb
jno
movsb
or
add
andl
push
adc
inc
pop
xchg
sbb
loop
lcall
hlt
pop
bnd
out
cmp
mov
dec
dec
mov
xor
inc
xchg
mov
out
dec
ljmp
pop
fnsave
bound
add
stos
pop
adc
cmp
daa
repz
cmp
adc
leave
dec
push
sub
decb
sbb
add
repz
repnz
out
pop
loope
mov
inc
lods
cli
call
bnd
fs
dec
andl
mov
xor
mov
fiaddl
outsb
ljmp
bound
fstpt
pop
push
cmp
arpl
das
pop
mov
pop
lock
xchg
mov
cmp
scas
sub
cmp
stos
and
cmp
xor
inc
lea
fldt
imul
push
fsts
and
scas
mov
and
mov
cld
divl
es
nop
sub
flds
xor
or
mov
add
cmpsb
cwtl
xchg
xchg
jo
ret
mov
pop
inc
mov
into
out
mov
aam
insb
int
push
mov
add
cs
mov
test
jge
add
push
jns
rcrb
push
lret
in
enter
jecxz
fildl
jno
popa
dec
repz
sub
int3
dec
sahf
jmp
pop
push
fistpll
out
mov
mov
out
sbb
mov
push
daa
ret
push
iret
sbb
push
sub
inc
rcrl
loopne
and
pop
mov
ja
popf
std
pop
movsl
sub
inc
cwtl
mov
ja
leave
mov
cmp
mov
push
int
ss
pop
mov
divl
dec
cmpsl
icebp
js
cmp
pop
cmp
fidivs
fwait
shr
leave
jp
sbb
push
cmc
repnz
add
mov
push
shrb
je
cs
push
mov
mov
sub
mov
lea
aaa
lds
and
test
fdivrl
adcl
lcall
rcrl
sub
push
xor
jecxz
in
inc
sub
adc
scas
in
fldl
mov
cli
iret
testb
mov
das
adc
dec
insl
out
pop
push
and
popa
cmpsb
pop
mov
ret
xchg
std
mov
addb
test
out
aam
pop
jnp
stos
fnstsw
xchg
pop
cmpsl
scas
je
xchg
xchg
mov
pop
loop
sbb
xchg
std
outsb
dec
movsb
out
inc
jno
or
sub
jns
push
popa
sbb
fistl
inc
xchg
and
push
fbstp
inc
mov
std
es
scas
xor
inc
dec
sub
in
dec
inc
mov
ret
jg
fwait
and
and
popf
jg
pop
iret
mov
inc
pop
movsl
push
jmp
cmp
fcompl
cli
cmp
xchg
push
mov
popf
enter
cmp
cltd
cmp
pop
cltd
mov
pop
pop
lret
xchg
push
loopne
popa
cld
mov
jbe
imul
jg
add
mov
or
or
mov
imulb
out
roll
adc
push
pop
popf
stc
cmp
or
push
mov
insb
mov
xchg
and
xchg
fabs
pop
sahf
iret
or
repz
subb
bound
pop
or
adc
sbb
mov
loop
imul
out
add
push
add
sub
push
cli
mov
sarb
lods
xchg
ljmp
mov
imul
mov
mov
pop
cmc
xlat
dec
test
gs
mov
fcmovbe
imul
ficompl
jae
scas
xchg
lea
push
xor
repnz
int3
pusha
mov
out
sbb
xor
dec
movsb
sbb
fwait
stc
ficomps
sbb
data16
lret
jne
dec
les
popl
daa
inc
cmp
adc
jbe
inc
cmp
xchg
mul
lahf
and
or
rcll
call
xor
or
test
aas
fdivl
stc
pop
fxch
mulb
cwtl
popa
or
popf
push
arpl
outsb
xchg
inc
mov
int3
or
shll
mov
xchg
rol
mov
imul
outsl
xchg
out
data16
mov
gs
dec
inc
push
dec
and
or
ret
jnp
gs
outsl
repz
cmp
pop
ljmp
jae
jnp
fmull
lahf
mov
loope
cwtl
jg
cmp
mov
aaa
jnp
fstpl
xchg
outsl
jmp
mov
stos
jbe
xlat
mov
mov
xchg
mov
stc
mov
in
or
rcl
addb
fists
pop
mov
inc
test
add
mov
jno
hlt
jbe
mov
mov
incl
iret
clc
rcrb
out
jge
leave
iret
out
leave
ljmp
xadd
test
jb
aad
into
adc
and
or
push
dec
xor
gs
push
cmpsl
jo
adc
cmp
dec
loopne
or
leave
jns
insl
xor
leave
xchg
mov
mov
repz
in
xchg
fisttps
aad
or
mov
cltd
sarl
adc
add
aam
or
outsl
insb
xor
rol
mov
jp
call
out
arpl
jbe
adc
jecxz
fcoml
pop
fistl
mov
lret
es
mov
add
into
aad
xor
push
mov
and
adc
les
fcmovnu
pop
or
stc
and
xor
lock
decl
xchg
cmp
icebp
seta
stc
and
gs
popa
add
push
mov
int3
fdivrl
data16
outsb
fdivl
movsl
jnp
scas
dec
xchg
adc
fucomp
mov
ret
jae
mov
scas
adc
inc
call
aad
pushl
test
mov
dec
cmpsl
mov
daa
scas
ficompl
mov
mov
fucom
mov
push
pop
fs
xchg
dec
lea
pop
inc
repnz
sbb
jg
aas
jns
rorl
andb
mov
cmp
cmp
sub
insb
repz
ja
fisttps
icebp
jno
loop
mov
std
mov
jp
sbb
sub
sbb
lods
push
fiaddl
sbb
gs
iret
imul
mov
into
cmp
clc
pop
daa
xlat
push
aas
shlb
sbb
lret
adc
out
xor
int3
jb
mov
push
dec
mov
jle
bound
jbe
or
cmp
sub
inc
stos
add
les
sti
inc
rcrb
pop
lret
bound
fwait
sbb
inc
out
mov
jecxz
ret
in
adc
pop
popa
mov
scas
out
insl
dec
hlt
repnz
test
scas
sbb
andb
sub
mov
sbb
repnz
inc
pop
inc
push
loop
and
in
imul
inc
xchg
inc
popa
fists
pop
out
xchg
gs
jne
jns
repz
clc
sub
jno
mov
jne
subb
inc
lret
sbb
sbb
out
cmc
and
testl
aam
push
sti
and
xorb
stc
push
fldcw
dec
inc
dec
rcl
and
ficoms
jo
xchg
add
sarb
negl
adc
outsl
andb
xchg
aad
aad
daa
pop
sbb
je
mov
sub
sti
rclb
lret
jp
push
rcrl
iret
push
inc
sub
adc
inc
stc
mov
arpl
jecxz
or
fbld
loop
insb
jge
sbb
mov
fwait
xchg
or
loope
pop
nop
cmp
jne
in
mov
mov
addr16
and
push
cmp
mov
lock
or
test
pop
test
cltd
loope
testb
ds
push
push
lds
lret
lret
dec
outsb
push
call
mov
inc
push
clc
scas
jecxz
addl
outsb
sbb
popf
mov
mov
inc
in
jecxz
pop
sub
jmp
pop
push
add
cvtps2pd
pop
addr16
push
test
call
xor
insb
int
mov
jne
mov
dec
cmp
push
jmp
add
and
lahf
xchg
fadds
lods
pop
loopne
mov
lods
jl
test
sti
jno
jecxz
lret
pop
dec
xchg
or
pop
popa
out
fxch
mov
mov
inc
std
lods
sub
cmp
pop
sahf
cltd
sub
pop
les
add
in
jg
test
stos
dec
jmp
sub
xchg
and
dec
lea
jno
int
adc
loopne
pop
icebp
cmp
insb
jg
dec
sbb
test
mov
cmpsb
or
mov
popa
pop
shrl
cmpsl
inc
xor
decl
push
sarb
dec
fiaddl
sahf
jge
daa
push
aad
test
sub
adc
cmc
insb
push
in
clc
xchg
popf
fistps
cld
xlat
loope
mov
jle
jmp
push
in
xlat
mov
pop
pop
pop
pop
unpcklps
cmp
lcall
clc
notb
push
out
xor
add
call
popa
test
das
sbb
das
shrb
dec
pop
cmp
lret
pop
fistpl
jmp
mov
pusha
push
repz
rcrl
push
mov
jno
pop
inc
jne
imul
mov
xchg
push
hlt
pop
enter
int3
pop
nop
jle
mov
pop
stos
pop
push
aad
push
leave
int
lret
mov
or
adc
push
adc
dec
sbb
mov
xchg
lahf
push
popa
and
daa
mov
xorl
mov
or
dec
and
mov
into
xorl
dec
pushf
ficomps
xor
mov
pop
addr16
and
adc
mov
mov
loop
adc
nop
adc
pop
push
stos
stc
cmp
push
jnp
movsl
das
jne
cmp
push
fidivrs
aas
stc
sbb
mov
pop
out
jp
or
test
adc
int
fnstenv
and
pop
inc
js
cmp
push
adc
mov
lea
or
clc
popa
add
fs
call
shl
xchg
xor
cmp
movsb
inc
lods
inc
icebp
insl
dec
or
aaa
add
imul
lea
icebp
adc
sbb
fbld
repz
scas
push
pop
mov
insl
cli
pop
cwtl
adcl
mov
push
sahf
sbbb
sbb
js
sbb
aaa
xchg
sub
imul
mov
arpl
sahf
pop
insw
add
ja
ss
jle
daa
aas
ss
cld
mov
sbb
and
aas
in
lahf
cmp
lcall
mov
scas
jne
test
add
out
test
ss
mov
ljmp
pushf
test
pusha
inc
cmp
xchg
mov
jns
mov
pop
je
sub
sub
mov
and
push
daa
mov
mov
mov
mov
cmpsb
xchg
stos
pop
out
xchg
or
push
fstpl
cltd
mov
ds
mov
pop
mov
cmp
dec
mov
or
pop
lahf
daa
xchg
fidivl
mov
xchg
lahf
outsb
dec
sbb
lahf
cmp
or
ficomps
or
mov
pop
inc
insl
or
adcl
xchg
pop
inc
inc
mov
pop
cmc
mov
sub
cmp
xchg
dec
pop
adc
iret
repz
das
addb
sbb
cmc
xor
sub
jnp
mov
xchg
imul
xchg
sbb
int3
push
mov
jle
jecxz
cli
push
scas
inc
shll
mov
mov
jb
inc
mov
hlt
sbb
ret
int
jge
dec
out
cwtl
test
pop
cs
aam
push
xchg
adc
add
xorb
push
adc
mov
out
mov
imul
insb
fmuls
loop
in
mov
cmp
mov
fiaddl
flds
std
mov
and
cmp
dec
les
faddl
mov
lfs
insl
mov
add
jno
add
push
arpl
jno
leave
popa
xor
mov
fs
test
clc
or
sbb
and
enter
rcr
lahf
pusha
pop
push
imul
mov
testb
rolb
pop
iret
sub
sub
push
fsubs
in
les
jo
inc
decb
shll
cmp
ljmp
sub
jecxz
cmpsb
repz
jne
shll
dec
repz
out
inc
ljmp
mov
push
cmpsl
xor
sub
pusha
push
mov
push
int
fsubrs
pop
pop
or
call
jg
mov
push
sbb
fisubs
push
jno
int3
inc
movsb
shrb
pop
dec
gs
loopne
xchg
cmpsb
pop
xchg
push
inc
fsubrl
mov
push
fdiv
sti
outsl
lods
xchg
in
xchg
sti
das
insb
mov
jo
hlt
out
dec
in
push
jmp
add
xor
stos
lods
clc
ret
mov
fisubrl
scas
push
mov
sub
test
icebp
popf
out
lret
pushf
shll
insl
hlt
daa
and
in
mov
jle
sti
aas
cmp
xchg
mov
mov
rcr
loope
add
and
aaa
adc
pop
shll
mov
inc
dec
push
mov
gs
idiv
dec
inc
fcoms
inc
scas
mov
mov
mov
mov
ljmp
stos
sbb
popf
adc
jmp
lds
cwtl
addr16
jae
mov
push
aad
negb
push
or
daa
shlb
cmp
fsubl
fstl
negb
mov
jle
cmpsb
sub
jo
jae
mov
lret
test
fwait
xor
gs
sub
ret
in
jge
push
mov
add
pop
pop
in
sub
xchg
cmp
insl
test
sbb
and
scas
pop
cmp
xchg
xchg
or
xchg
or
jmp
pusha
dec
out
testl
jle
scas
cmpsl
ret
and
shr
shr
fidivrs
ret
aas
test
in
lret
int3
aad
xchg
add
fistpll
push
cmp
jg
insl
jge
aas
arpl
mov
jecxz
mov
call
xchg
mov
add
arpl
cmpsl
inc
std
xchg
or
fs
outsb
inc
enter
lea
push
arpl
mov
and
stc
cmpsb
mov
push
cmpsb
xchg
ja
lret
push
mov
xlat
push
inc
dec
adc
aam
lods
or
mov
sub
cltd
insb
mov
add
fcomp
pop
iret
add
imul
in
pushf
std
mov
repz
xor
pop
push
jbe
sbb
fldl
push
stc
mov
mov
stc
jae
dec
jne
mov
pop
out
test
jae
push
mov
sahf
rorb
cmp
fcmovne
mov
mov
xchg
hlt
divb
cmp
scas
push
insb
cmp
jbe
push
dec
add
dec
sub
mov
roll
stos
pop
add
pop
inc
jge
cmpsl
cmpsb
mov
call
pop
loopne
shl
xchg
movsl
xchg
jnp
jl
ss
jns
aad
fisubs
gs
icebp
xor
push
xchg
pop
mov
and
je
push
sbb
call
mov
fs
inc
ret
shrl
fldln2
xor
or
adcl
push
decb
std
clc
shl
mov
sub
adc
les
sbb
clc
pop
lcall
mov
cmp
inc
repz
fldenv
lcall
imull
or
aam
in
mov
jge
xchg
xor
xchg
pop
jnp
pcmpgtw
xchg
inc
testl
lea
idivb
lahf
int
test
int
call
sti
ljmp
out
inc
icebp
dec
cmpsb
gs
movsb
and
aas
inc
lods
repnz
ljmp
pop
pop
je
mov
cwtl
push
aas
call
outsl
rcrl
aaa
rcrl
insl
jns
icebp
lret
adc
dec
push
dec
fbld
inc
lods
lahf
xor
popa
test
or
ja
lcall
dec
in
loopne
inc
mov
pop
imul
cmp
stos
fisubs
jns
sub
cmc
adc
fisubl
fmulp
dec
test
xor
push
push
sarl
lock
roll
sahf
test
pop
jl
cmp
or
daa
inc
mov
mulb
xchg
cld
testb
adc
mov
fsubrp
xor
adc
daa
imul
adc
mov
and
loop
fcmovu
loop
loope
outsb
push
fsubrs
jl
dec
push
and
addr16
rorb
jbe
sub
push
jne
dec
inc
clc
cltd
mov
lret
cld
pop
test
loop
roll
push
inc
jno
jmp
sti
fwait
dec
jmp
mov
xor
adc
cltd
hlt
clc
pop
fadds
pusha
movsb
lcall
ss
xorl
into
aad
lea
inc
or
movl
fnstsw
test
xor
inc
jle
js
stc
mulb
call
ja
xlat
inc
mov
icebp
ja
pop
jnp
dec
cld
cmp
and
sahf
mov
adc
adc
idivl
push
push
and
and
adc
roll
jo
mov
insb
call
in
sbb
sub
xor
cltd
mov
pop
mov
mov
sub
outsb
es
testl
mov
cmc
sub
mov
fists
sub
iret
popa
jmp
lahf
test
loop
mov
adc
mov
loopne
rcr
rorl
clc
in
int3
loope
sub
js
dec
std
in
dec
sbb
pop
mov
clc
mov
enter
dec
shl
jae
xchg
push
out
lcall
pusha
push
push
xchg
mov
fwait
ret
call
arpl
pop
pop
pop
aam
mull
lret
jecxz
lret
bound
scas
aaa
shll
mov
addr16
bound
test
rolb
cmpsb
sbb
pop
xchg
xchg
fsubrl
out
mov
data16
xor
int
lds
sti
push
fiadds
hlt
in
mov
ds
inc
pop
pop
pop
test
cmpsl
xchg
inc
inc
cmp
popf
mov
lahf
aam
sbb
lea
push
scas
fsubr
sbb
fs
scas
sub
and
sub
popa
ret
cmc
clc
and
out
and
and
jno
iret
inc
adc
sub
test
jno
push
jp
dec
push
adc
mov
shrb
inc
add
dec
orl
divb
test
in
in
xchg
arpl
pop
adc
inc
adc
vcmpps
xchg
gs
xchg
add
xchg
cmp
push
xchg
imulb
aaa
js
xor
mov
or
xchg
mov
pop
repz
xchg
cmp
test
mov
adc
mov
icebp
enter
jnp
xor
mov
pop
out
xor
jbe
adc
in
pop
lods
adc
dec
shrb
rcrb
outsb
mov
out
add
xor
insl
lock
cli
subb
int
iret
mov
sub
adc
invd
fistps
sub
cld
clc
adc
mov
jg
mov
dec
frstor
add
hlt
add
dec
mov
popf
cmp
cmp
inc
xor
inc
in
push
cmp
fidivrs
mov
rcr
sub
hlt
outsb
mov
adc
jae
or
ljmp
das
pop
es
adc
cld
ljmp
fldcw
lret
ja
loopne
ss
stc
cmp
decl
adc
jae
popf
xor
push
idivl
xchg
fadds
pop
pop
mov
sbb
add
addr16
cmpsb
andl
cld
mov
mov
jmp
stos
and
adc
inc
ja
push
jg
mov
and
xchg
jb
sbb
mov
gs
xchg
movsb
or
xor
inc
stos
jnp
cmp
fsubr
pop
ret
or
loop
out
mov
in
adc
test
add
decb
leave
and
or
sub
push
mov
sbb
in
neg
push
loop
xchg
enter
adc
add
and
icebp
ret
cld
jmp
add
and
int3
mov
in
xchg
shr
and
fnsave
das
rclb
ds
das
clc
sub
sbb
pop
mov
pop
je
sbb
nop
mov
mov
icebp
mov
add
testl
call
pusha
mov
and
gs
push
push
cli
pop
and
stos
cmp
popf
sub
lods
mov
mov
mov
adc
bnd
xchg
les
mov
push
jnp
sti
lahf
roll
pop
push
jae
stos
adc
or
imul
push
mov
mov
imul
jbe
lahf
jmp
mov
sub
cmp
outsl
pop
movsb
orl
out
xor
push
xor
and
iret
imull
jmp
add
mov
adc
xchg
and
mov
jne
cmp
out
cmp
jnp
sbb
fadds
pop
push
dec
mov
mov
inc
adc
mov
dec
dec
sahf
and
or
in
xchg
adc
ret
das
test
in
jae
or
mov
push
mov
xchg
notl
adc
xchg
outsl
mov
xor
mov
pop
cld
mov
sahf
pusha
inc
movl
ljmp
mov
loopne
sub
rolb
fsts
cld
ficoml
or
jge
pushf
out
jne
xchg
sbb
sbb
ror
cltd
sbb
pop
std
in
aam
or
cmp
add
pop
aaa
add
aad
movsl
js
inc
ljmp
push
xor
aaa
xor
push
xchg
add
es
int
les
push
jbe
mov
xchg
or
push
daa
imul
mov
test
dec
pop
stos
arpl
and
jl
dec
test
mov
fbld
aaa
cwtl
and
ret
add
fucomi
orl
add
push
jle
cli
nop
lcall
mov
or
into
clc
pop
and
mov
and
pop
ret
shrl
and
ljmp
in
pushf
cmp
dec
mov
and
cmp
fimuls
out
hlt
xchg
scas
popa
divb
aas
jmp
aad
dec
or
push
add
sub
test
add
push
push
bound
and
mov
mov
test
cmpsb
mov
inc
fwait
pop
push
lods
pop
stc
in
iret
mov
xlat
addr16
mov
bound
sub
cmp
adc
mov
push
cli
out
jle
pop
inc
das
lahf
sub
pop
xchg
dec
mov
jmp
sub
fsubl
jle
pop
hlt
adc
mov
bound
bound
mov
mov
mov
mov
or
adc
loope
pop
jae
stc
dec
lds
xchg
insb
scas
inc
mov
or
aad
jne
lret
or
dec
data16
sbb
mov
add
pop
cmpsl
sub
je
xor
sub
lret
popa
or
pop
add
lret
inc
addr16
jnp
adc
pop
aas
lret
pop
cmp
and
call
dec
test
lahf
iret
cltd
mov
int3
pushf
sub
flds
pop
ljmp
xor
sbb
jo
adc
and
add
and
mov
mov
ret
mov
outsb
push
push
scas
adc
gs
mov
pop
cs
jp
mov
mov
bound
mov
jne
sbb
popf
mov
js
in
and
xchg
mov
or
in
mov
dec
into
sarb
jns
lahf
jecxz
pushf
fwait
and
sbb
pop
xor
cmpsb
in
call
cld
xor
das
mov
loope
add
mov
mov
adc
fdivl
push
sbb
stos
popf
test
xor
add
nop
jmp
and
adc
out
dec
cwtl
xchg
es
add
push
movsb
lock
mov
dec
mov
and
rcll
scas
jge
test
pushf
xlat
movsb
paddsb
mov
pop
pop
les
je
xor
lret
icebp
cmc
out
test
rcr
add
xchg
popa
sub
sub
std
push
gs
jno
pop
stos
rcll
ljmp
aaa
aam
les
or
fdiv
js
aaa
sbb
iret
fistpll
jecxz
xchg
mov
xchg
jge
or
aaa
dec
dec
inc
pop
xchg
mov
xchg
jmp
shrb
test
sbb
push
addl
notl
jl
movsl
cld
jbe
out
xchg
add
mov
xchg
mov
js
sti
pop
mov
pusha
sbb
dec
push
jne
jbe
dec
mov
push
enter
jns
or
jb
xchg
sub
jge
push
test
jmp
push
nop
mov
lods
and
aad
shll
leave
mov
sti
mov
pop
ds
jbe
or
push
mov
fs
roll
data16
mov
jb
pop
mov
ljmp
mov
xchg
fsubp
jecxz
arpl
cld
mov
mov
mov
cltd
or
loop
cmpsl
lcall
rorl
adc
cltd
push
jp
lret
test
mov
xor
mov
movsb
sbb
jo
mov
es
mov
pop
adc
mov
adc
fnsave
fidivl
popa
or
negb
inc
and
dec
mov
andl
xchg
mov
dec
hlt
pop
push
rcrl
jo
xchg
lea
pop
clc
out
cmp
scas
push
cmp
xchg
ja
aaa
pop
pop
pop
or
cwtl
dec
rorl
mov
into
add
cmp
xchg
mov
frstor
test
dec
loopne
mov
testl
mov
rcll
cli
dec
out
inc
push
mov
add
mov
test
hlt
iret
push
push
adc
xchg
xlat
out
xor
in
pop
push
pop
fdivrp
push
daa
jecxz
int
jmp
lret
jno
fwait
dec
subl
add
and
add
pop
dec
fidivl
faddl
jmp
xchg
ret
mov
movsb
scas
ja
push
cmpl
jl
ret
lcall
adc
sub
ret
sbb
imul
xor
es
sbb
mov
fdivs
inc
test
push
jne
sub
in
fiadds
sar
pop
jg
jno
daa
mov
xchg
jmp
notl
testl
sbb
dec
pop
sub
popa
outsb
jp
je
icebp
mov
and
mov
mov
push
jle
pushf
xchg
stc
subb
cmpsl
in
adc
mov
push
dec
ss
fidivl
int3
je
jns,pn
stos
fwait
cwtl
pusha
mov
inc
fnstcw
xchg
movsl
ficomps
cmp
adc
push
lock
push
pop
mov
mov
fidivs
jo
xor
cs
shrl
mov
mov
imul
lea
loope
dec
ljmp
scas
and
cltd
std
ljmp
mov
mov
pop
lahf
mov
sti
pop
leave
flds
mov
loope
mov
lahf
add
xchg
or
inc
pop
out
jae
xor
or
hlt
cmpsl
rclb
popf
hlt
dec
push
insl
dec
mov
stos
daa
stc
cmpsl
sub
push
mov
arpl
jp
fiaddl
fwait
outsl
xchg
or
xor
dec
cwtl
lods
inc
lods
mull
or
sbb
xchg
fs
mov
add
fidivs
fcompl
inc
cmpsb
add
add
arpl
aaa
push
repz
ret
cmpsl
in
cmpsb
aaa
movsl
sub
push
fwait
loop
fcmovu
jmp
mov
iret
jno
jb
cmp
sbb
lret
ss
loope
jg
ret
push
cmp
leave
ds
bound
inc
jmp
mov
loopne
mov
popf
sbb
fcomi
mov
rcrb
int3
es
inc
mov
dec
push
outsb
mov
jg
loop
bound
push
fwait
out
sbb
mov
out
xlat
cmp
lds
loop
pop
or
and
pop
mov
imul
sbb
cld
cltd
mov
call
fwait
sub
sti
or
pop
cmp
les
inc
lahf
fcompl
dec
xchg
and
les
jl
repnz
xor
faddl
mov
mov
aam
jecxz
pop
aas
push
dec
scas
ljmp
enter
int3
stos
ret
ljmp
sub
int3
aaa
xor
clc
aam
das
sbb
aad
in
into
add
inc
adc
dec
imulb
inc
inc
jnp
inc
iret
mov
mov
aaa
out
js
jae
cmpsl
jne
pop
push
or
outsl
push
inc
stos
dec
push
cmp
loop
dec
jo
aad
push
mov
shrb
xchg
push
xor
fstl
jb
add
ficompl
add
not
dec
repz
mov
icebp
lods
int3
ret
or
push
enter
lret
lods
outsb
sub
lret
mov
lock
flds
arpl
es
insl
in
dec
imul
cmp
pop
pop
enter
lock
push
lret
sub
not
movsb
in
fs
shlb
pop
mov
lock
jae
push
subb
ja
or
clc
arpl
or
lods
lret
cs
out
mov
imul
clc
sbb
incb
imul
hlt
les
sbb
xchg
mov
push
js
push
xor
out
mov
jl
mov
aas
xor
or
push
xor
fistps
sub
xchg
push
cld
add
out
jne
test
ds
aam
fs
dec
jp
roll
mov
mov
repnz
push
lret
pusha
sarb
int3
add
cmpsb
sarl
insl
mov
xchg
push
lds
xchg
in
mov
jle
push
fidivrs
push
cmp
fwait
add
sub
dec
repnz
jae
sub
mov
hlt
push
ficomps
ds
mov
mov
int3
dec
ret
out
and
popa
inc
daa
and
push
jae
push
sbb
cmp
cmpl
jecxz
push
pop
mov
ret
jne
mov
rcl
nop
cli
loope
and
sbb
ffree
inc
loopne
lretw
sub
pop
and
mov
idiv
dec
je
xchg
sub
data16
pop
jns
mulb
mov
pop
lds
inc
or
mov
mov
adc
xchg
aad
pusha
lahf
xor
jb
sbb
or
jge
lea
xchg
push
adc
aam
adc
xor
xorl
mov
test
mov
xchg
test
lods
sar
pushf
push
fmul
filds
xchg
loopne
arpl
loopne
test
mov
in
mov
fadd
dec
js
push
push
sarl
pop
stc
stos
in
call
pop
inc
jecxz
scas
fimuls
scas
pop
jb
scas
lock
adc
dec
mov
xchg
push
fwait
mov
iret
xchg
xor
add
aas
sahf
aam
lods
pop
cli
outsl
mov
stos
push
lea
xchg
push
xlat
jnp
jo
fbstp
jecxz
pop
test
mov
push
stos
mov
cmp
fwait
lret
mov
and
jecxz
xchg
ret
cmpsb
push
dec
sbb
ljmp
jp
pop
jge
test
cmp
cmpl
nop
clc
pop
ret
and
mov
cltd
addr16
add
jle
push
flds
inc
loope
rorl
jns
jecxz
inc
rcll
push
rcll
fs
gs
mov
mov
jno
popa
in
gs
jno
jmp
push
int3
aas
popf
cmp
jle
stos
icebp
xor
lock
shlb
inc
in
xchg
push
or
or
ficompl
ror
mov
and
mov
mov
mov
shr
adc
ret
adc
jno
pop
sub
and
cmpsb
cld
add
push
add
orl
cmp
xchg
push
fidivs
fwait
mov
pushf
sub
jge
push
mov
movsb
lahf
push
add
aaa
push
mulb
movsl
xchg
pop
pop
add
pushf
repz
push
xor
sub
ss
push
xchg
add
pop
dec
xchg
xchg
xlat
pusha
jecxz
cli
in
lods
inc
in
mull
mov
adc
dec
call
sub
es
xor
xchg
les
pop
add
stc
fnstcw
cmpsb
jp
pop
mov
imul
or
push
clc
enter
out
cld
jo
jnp
mov
mull
pop
jl
cmp
outsl
mov
pop
inc
sti
pop
mov
in
dec
and
dec
clc
mov
mov
mov
movl
add
push
mov
iret
das
stos
ljmp
and
out
add
sbb
ljmp
xchg
icebp
jo
sub
int
stc
jg
dec
jp
aad
fld
pop
xchg
into
xchg
ss
repnz
nop
test
sbb
mov
mov
stos
daa
dec
bound
ret
xor
or
cmc
cwtl
aad
xor
jl
jecxz
sbb
out
cmc
scas
mov
pop
pop
xchg
sub
cld
enter
cwtl
or
pushf
loopne
and
pop
xor
loope
or
mov
out
stos
mov
lods
pop
xchg
lahf
int
daa
xor
int
sbb
fstpt
inc
inc
addl
mov
sahf
push
cmpsb
pop
lahf
xlat
insl
mov
in
jg
aam
frstor
add
add
mov
imull
and
jb
mov
mov
cmp
clc
imul
inc
add
or
dec
cmp
test
negl
fs
cs
cli
addr16
add
xchg
or
insl
xchg
xchg
mov
lods
pop
bound
ss
cmpsl
mov
jle
xchg
or
imul
push
daa
aas
jl
insb
lcall
add
insb
mov
pop
pop
sti
iret
ja
xor
add
sbb
lret
mov
mov
into
je
mov
mov
leave
or
inc
bound
movsl
in
in
repz
xchg
push
adc
mov
aas
pop
pop
imul
call
loop
lcall
loope
lock
jmp
pop
fcom
stos
in
fcmovne
push
mov
mov
icebp
bnd
cmp
aaa
mov
mov
mov
pop
repz
mov
test
lods
pop
sbb
xchg
sbb
out
cmp
sahf
mov
push
push
xor
in
int
jns
loopne
push
mov
pop
sahf
xchg
cmp
in
sub
jne
pop
popf
jl
inc
pop
int
fs
cmp
mov
jge
push
xlat
jge
sub
inc
loope
idivl
dec
shrb
mov
xchg
std
outsb
mov
cli
inc
adc
sbb
lods
ljmp
xor
cmc
negb
xor
jb
and
jno
int
imul
filds
mov
xchg
mov
push
xchg
lock
pushf
jno
fidivs
push
enter
scas
pop
push
les
add
xchg
or
int
add
xor
divl
ds
xchg
xchg
incl
pusha
nop
push
fs
jbe
insb
cmp
add
xchg
push
mov
dec
and
daa
sbb
cmpsb
adc
and
shlb
jmp
jbe
pop
fdivs
popa
scas
pop
cmc
cs
imul
jmp
mov
pushf
cmpsb
lock
push
sbb
mov
cld
push
cltd
adc
aas
mov
jg
pop
fistl
fldl
sahf
sarb
dec
gs
cmp
orl
ja
out
push
push
mov
push
pop
xchg
loopne
or
out
jle
adc
ja
ror
test
xchg
movsb
pop
push
or
sbb
and
add
or
mov
and
inc
dec
add
cmc
cs
stc
mov
in
aaa
mov
jnp
pop
cwtl
sbb
dec
filds
cs
ja
aad
and
lods
jmp
cmp
pop
mov
lret
rclb
push
xchg
sti
stc
jno
ret
mov
mov
mov
xchg
out
push
insb
lahf
lret
pop
std
call
mov
in
fstl
xor
sub
loope
clc
mov
push
bound
movb
xor
not
or
aas
lahf
cmpsl
cld
sarl
mov
dec
loopne
inc
daa
xchg
cmp
cmp
scas
push
movsb
pop
lret
sbb
lds
clc
sbb
sub
dec
mull
mov
sub
pop
test
daa
loope
push
dec
repz
inc
sub
or
or
ret
pop
das
imul
inc
and
in
cmp
or
incl
lock
and
mov
subl
sub
add
aas
pop
sbb
jbe
jns
dec
inc
ja
insl
pop
loope
jl
mov
aam
gs
inc
add
shrl
pushw
jnp
fldl
leave
ds
pop
loope
gs
in
pop
fs
loop
test
push
ja
mov
test
pusha
mov
pop
inc
rolb
or
dec
mov
test
fsubrp
xchg
out
pusha
xchg
fists
aad
pop
addr16
insl
xor
mov
sub
loopne
fstpt
fadd
rcr
xor
cmpsl
jp
inc
xor
pop
js
xor
arpl
mov
in
xchg
filds
cmc
cmp
test
push
xlat
add
push
sahf
dec
inc
les
jecxz
test
rcrl
iret
arpl
pop
add
insb
push
cmp
rcrl
out
mov
je
fisubrs
repnz
pushf
test
sub
sub
repz
inc
add
repnz
push
xor
add
jne
test
loop
out
add
inc
and
xchg
ror
shrl
and
fs
mov
xor
xchg
mov
sbb
lea
cmpsb
mov
xor
rorb
not
enter
add
mov
xor
movsl
mov
jb
bound
jmp
rcll
push
and
cltd
ja
jns
inc
xor
test
pushf
aam
fiaddl
dec
aas
test
addr16
cltd
sub
pop
dec
xlat
jl
jmp
in
xor
xchg
lcall
dec
ror
insl
lds
out
repz
js
ret
icebp
and
jae
cmc
jno
scas
jno
jle
movsb
xchg
dec
push
fcmovnbe
pop
rcl
mov
out
out
pop
stos
pop
jmp
xor
arpl
out
popa
pop
cmp
add
divl
xchg
dec
push
icebp
jo
fistl
loopne
push
sub
push
push
dec
inc
or
jnp
mov
mov
or
push
jbe
icebp
mov
lods
inc
dec
adc
int3
jg
jl
loopne
push
lret
jne
movsl
or
push
xchg
push
arpl
jle
addr16
xchg
pop
jnp
aaa
pop
sbbl
divl
lret
dec
daa
lods
sub
add
adc
xchg
cmp
nop
xchg
mov
push
fidivs
nop
adc
xor
mov
fidivl
mov
ror
scas
dec
sbb
ret
and
sbb
jg
movsb
mov
jno
push
lods
aaa
dec
and
sub
mov
insb
xchg
xchg
mov
and
data16
pop
pop
and
into
add
inc
dec
or
jmp
jecxz
cmp
lds
dec
ja
adc
pop
jo
or
lcall
lcall
and
and
es
mov
inc
fidivrs
sbb
loope
push
leave
xchg
pushf
xor
std
xchg
fldenv
or
insl
add
in
cmp
test
inc
jns
or
push
popa
shl
jne
loop
dec
or
inc
sahf
imul
push
repz
movsb
mov
jmp
dec
dec
ja
jg
pushf
inc
xchg
in
mov
dec
adc
push
mov
cld
cmpsb
push
mov
sbb
je
jl
or
orb
sub
sbb
xor
pop
mov
lcall
inc
addb
pop
int3
loope
jno
xchg
out
or
mov
les
push
jae
push
loop
es
sbb
cmp
xchg
sbb
test
xor
mov
lea
jne
dec
cmpsl
sahf
daa
test
dec
outsl
jmp
inc
xchg
stos
xor
add
pop
jae
pop
lahf
jno
inc
or
lcall
mov
dec
popf
mov
mov
pop
sahf
cwtl
aaa
test
fdivrl
orb
aaa
sbb
sahf
mov
lcall
testl
cld
pop
cmp
jge
imul
jp
jmp
and
xor
das
push
mov
addr16
repz
leave
pop
movb
aam
rcrl
adc
push
ss
test
add
mov
mov
into
sub
pop
jbe
push
pop
xchg
imul
insb
ret
pop
xchg
negl
in
and
sti
pop
test
mov
and
adc
mov
daa
cmp
fstl
sbb
push
ret
or
jmp
scas
jg
mov
enter
inc
popf
sub
pop
dec
clc
dec
jecxz
dec
pop
popf
pop
push
gs
test
aad
lcall
mov
pusha
push
dec
xor
push
sub
enter
sahf
pop
stos
push
pop
sbb
dec
add
push
test
cmpsb
xor
jno
xchg
int
ret
fs
je
lret
add
push
and
imul
sub
jnp
sub
decl
adc
nop
imul
jo
fwait
push
dec
loopne
lds
mov
inc
mov
lods
mov
push
scas
xchg
dec
mov
loopne
xor
adc
or
push
or
imul
pop
pop
lcall
pop
data16
cmpl
lods
fstl
stos
sbb
mov
out
sub
mov
imulb
xor
push
mov
adc
or
pop
push
push
xchg
mov
fsubrs
or
push
or
addl
jg
in
pop
and
mov
or
gs
dec
insl
pop
sarl
dec
mov
xor
iret
mov
lds
cmpb
mov
test
lahf
cwtl
mov
daa
pop
roll
xor
outsl
jmp
cmc
ret
push
ljmp
loopne
sti
push
lods
dec
lea
loope
scas
jmp
pop
test
jno
mov
cltd
and
and
popf
rclb
mov
lcall
popf
sbb
mov
repz
or
sahf
mov
out
mov
mov
mov
fnsave
push
sti
rcl
add
addr16
test
and
subl
popa
and
pushl
cli
iret
mov
pop
stos
cld
pop
loope
out
pop
pop
cmp
out
loopne
push
aas
and
mov
mov
pop
or
lcall
into
js
xlat
je
ds
into
gs
testb
hlt
adc
in
adc
or
xor
fildll
movsl
xchg
insl
adc
cmpsb
sbb
push
int
adc
fnstsw
jae
inc
xchg
xchg
iret
xor
xor
inc
sbb
bound
sub
jno
or
cs
test
imul
lcall
int3
sub
jl
adc
pop
mov
xor
lock
outsl
pushl
and
sbb
cmp
push
in
mov
push
cmpsl
stc
and
sub
out
adc
mov
inc
mov
std
sbb
hlt
popf
mov
push
mov
popa
mov
shl
in
scas
or
jmp
pop
cmp
sarb
sbb
roll
shll
clc
iret
daa
lds
dec
adc
movsl
mov
mov
push
call
dec
rcl
stos
fstps
aaa
dec
jb
pop
sub
xchg
add
add
fistl
ret
inc
mov
dec
sub
push
notb
dec
push
ds
lock
mov
stos
in
inc
or
push
xchg
cmc
inc
movsb
cltd
or
lret
aaa
dec
decl
cmpsl
imul
push
and
push
insb
ss
scas
sbb
fs
js
dec
xchg
pop
mov
adcl
aad
mov
mov
aad
cmp
pushf
shrl
adc
and
js
dec
fsubs
add
outsl
insb
inc
pop
scas
dec
ja
cli
sbbb
mov
add
clc
add
test
xor
xchg
sub
xor
test
imul
mov
mov
add
mov
push
mov
xor
add
add
adc
sbb
test
pop
dec
cmp
ljmp
lcall
lock
lret
lret
ljmp
cmpsb
mov
jmp
mov
add
jne
dec
cli
insb
fstpl
push
cmp
sbb
push
lock
lods
addl
fidivs
scas
std
mov
icebp
hlt
jle
jge
jmp
cmpsb
shr
add
xor
inc
pop
dec
pop
stos
scas
xchg
ja
lods
jle
add
xorb
std
sub
lcall
inc
movsb
mov
pop
xor
aam
lcall
xor
mov
mov
mov
cmpsb
nop
xchg
pop
pop
scas
mov
icebp
lret
push
inc
movsb
and
adc
rcl
dec
scas
jecxz
out
rolb
mov
jecxz
xlat
jl
xchg
mov
js
imul
idiv
arpl
mov
imul
cmp
sbb
sahf
inc
mov
lock
mov
les
sti
sub
fidivrl
imul
xchg
mov
adc
in
in
sub
push
aam
repnz
cmp
mov
cmpl
out
mov
mov
push
sahf
push
scas
sbbb
xor
sbb
stc
inc
inc
push
js
ljmp
jbe
out
jmp
pcmpgtd
icebp
arpl
sbb
xor
loopne
cmp
mov
add
or
cli
mov
cltd
add
dec
and
xor
pushl
push
mov
mov
mov
jb
mov
cmp
in
sbb
test
xor
pop
jb
mov
insb
dec
sbb
pushf
inc
in
orl
dec
xor
out
aam
dec
in
and
xchg
bound
xchg
inc
inc
pop
nop
inc
adc
dec
and
psrlw
mov
add
loopne
pop
imul
mov
or
gs
dec
clc
dec
xlat
test
push
pop
mov
andb
cmp
rcrb
and
pop
mov
cli
les
lea
arpl
jle
mov
in
subb
jno
jne
cwtl
and
fs
adc
sub
xor
lret
xchg
inc
repnz
inc
daa
cmp
push
pop
das
stos
or
mul
push
aas
cmp
lcall
leave
cld
mov
add
es
lahf
add
pop
mov
test
das
out
sarl
adc
imul
add
adc
mov
and
jl
jle
push
push
imul
roll
test
xor
movsb
sub
pop
mov
clc
jns
or
pusha
das
mov
pop
cmp
and
aaa
sbb
mov
dec
enter
pop
xorl
arpl
xor
pushf
popf
cmpsl
scas
mov
xchg
bound
notl
and
or
jp
add
sbbb
mov
inc
and
outsl
pop
rcr
aaa
ds
icebp
out
xor
add
out
fcmove
mov
pop
inc
loope
popa
fchs
sbb
ret
loope
arpl
aas
lret
pop
loopne
add
push
cmpsb
aas
fimuls
cmp
cltd
cmp
xchg
stc
adc
gs
sub
mov
cld
out
push
repz
jbe
stos
fwait
inc
lret
mov
mov
mov
cmc
adc
pop
aas
jg
push
jae
mov
or
sarl
int
push
nop
ja
int
xchg
arpl
repnz
pop
push
mov
push
xchg
jge
xchg
sti
fistpll
xchg
jbe
movsl
dec
pop
pop
loop
pop
int
push
sbbl
dec
out
mov
scas
xchg
cmpsl
outsb
mov
sub
or
fcmovnu
repz
add
xchg
xchg
pop
int3
pop
in
loop
ret
mov
icebp
pop
or
or
jp
or
pop
xor
mov
cld
push
fistpl
iret
out
ficoms
xor
imul
push
push
jmp
outsb
inc
push
push
out
out
pop
mov
js
mov
push
outsl
xor
hlt
jae
aaa
lcall
inc
fs
scas
fbstp
jo
xchg
js
mov
and
sbb
fbld
sub
cmp
cmp
ficompl
sbbb
inc
xor
xor
cld
loopne
dec
adc
inc
jbe
mov
shll
add
int
imul
nop
add
out
shl
je
cmc
cmp
and
in
xchg
mov
lea
addr16
pop
addb
je
in
daa
and
cmp
data16
insb
ret
sub
pop
out
arpl
daa
enter
aaa
mov
addl
notb
dec
mov
ret
sub
inc
mov
xchg
inc
gs
arpl
pop
mov
call
sub
fidivl
xorb
push
xchg
aas
fs
adc
fwait
or
addr16
adc
sahf
jmp
cmp
sbb
mov
cmpsl
adc
pop
mov
in
mov
jns
lods
jbe
sbb
ficoms
call
jg
fsubs
cmp
repnz
mov
and
xor
lretw
stos
jo
jp
jl
pop
sub
push
xchg
xor
int3
enter
push
ds
dec
push
inc
clc
sbb
jl
dec
jns
pop
xchg
push
jp
sub
icebp
loop
iret
scas
ss
mov
jb
js
fsub
xchg
sub
dec
ret
push
xchg
js
cmp
rclb
jo
xrelease
pusha
xlat
test
fmulp
cld
or
bnd
hlt
test
or
not
cmp
jb
mov
addr16
sub
xchg
sub
in
sbb
pop
shlb
or
pop
into
cwtl
in
scas
es
popa
push
sub
ficoms
xchg
ss
dec
or
insb
sbb
xor
mov
and
out
adc
rcrl
cmpsb
xchg
neg
fdivr
jp
cmp
jmp
pop
pusha
notl
jnp
dec
cs
mov
inc
push
cli
mov
jae
cmp
and
sub
jmp
adc
enter
cwtl
xor
stos
pop
push
cmp
aam
lods
xor
sahf
imul
adc
das
and
lock
push
cwtl
shll
cmp
test
cmp
or
das
arpl
sbb
jo
jmp
mov
pop
aad
pop
dec
inc
fldenv
mov
dec
daa
push
movl
shl
add
out
mov
mov
xchg
ror
ret
jns
jns
incl
out
adc
xchg
cmp
add
mov
fcomps
adc
out
mov
mov
xchg
sub
dec
loope
fistl
adc
movsl
pop
stos
cmp
jg
inc
pop
or
cmp
inc
in
dec
or
insl
push
mov
popf
mov
js
push
nop
cmp
add
sub
sub
stos
mov
add
pop
mov
faddp
das
out
inc
mov
daa
pop
sbb
cmp
pop
ljmp
das
out
rclb
dec
enter
sbb
add
jns
mov
xchg
add
jne
sbb
sarb
jmp
xor
scas
jnp
xor
aam
fisubrl
cmp
scas
sbb
leave
jle
xchg
repz
xlat
sahf
and
es
scas
or
lods
ret
mov
imul
outsl
sub
push
cli
int3
testl
jnp
dec
mov
gs
jge
pop
out
adc
mov
jae
sbb
mov
pop
rcl
or
lahf
adc
lret
cmpsb
addr16
pop
popa
add
pushf
dec
mov
fs
daa
fwait
cmp
dec
adc
xchg
icebp
clc
mov
ja
jnp
test
popa
xchg
xchg
dec
and
sub
movsb
mov
addr16
stos
loop
sub
push
shll
jmp
xchg
sarb
lret
cmp
test
add
mov
pushl
rorb
decl
hlt
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
jmp
mov
stos
arpl
jg
xchg
or
popa
bound
js
bound
push
test
popf
arpl
push
sub
mov
add
inc
roll
imul
pop
lods
dec
mov
mov
pusha
push
insl
add
jg,pn
xor
mov
and
jns
sub
iret
sub
sbb
dec
or
push
inc
push
sbb
pop
setne
pushf
pop
pop
stos
pop
jmp
mov
dec
iret
stos
sub
dec
xor
aaa
addl
mov
jle
mov
sbb
push
xor
add
jns
in
and
mov
repz
push
xor
xchg
dec
fucomp
sub
movb
dec
out
lcall
dec
hlt
out
push
sub
mov
lods
mov
sub
and
add
xor
add
pop
sti
stos
inc
cmc
push
out
aaa
loope
push
xchg
jnp
roll
rorb
xchg
dec
xor
inc
arpl
push
push
and
xchg
cmpsb
popf
dec
mov
cs
andl
cli
roll
or
adc
inc
lret
fwait
sahf
xchg
mov
nop
insb
jl
xchg
adc
cltd
pusha
ss
fmull
scas
adc
pushf
mov
aad
jle
dec
jns
stos
and
inc
pop
push
cmc
ret
mov
int3
dec
mov
in
inc
ds
daa
jp
mov
add
out
or
adcb
mov
dec
pop
cmp
push
lcall
lds
imulb
jo
and
lea
test
mov
xorl
into
add
jo
pop
js
adc
adc
enter
jecxz
adc
sbb
cwtl
stos
push
mov
add
cmpsl
add
jns
xchg
lock
jnp
and
inc
outsb
add
fs
sbb
lret
test
aaa
lods
xor
jp
push
sub
test
outsb
dec
or
mov
pusha
lds
daa
or
stos
inc
adc
test
jp
push
pop
mov
pop
rorl
add
or
cmc
aad
xlat
cmpsl
jns
mov
fisttpll
add
pop
aad
lods
repnz
push
sbb
hlt
std
jb
mov
xor
fsubrl
mov
mov
call
mov
push
xchg
and
mov
and
das
ja
push
subb
sub
sub
mov
sarb
mov
out
out
enter
testb
stos
and
mov
push
pop
bound
insl
pop
sarb
sbb
jns
outsb
sti
cmc
adc
push
fwait
jno
mov
xchg
leave
fnstenv
inc
xor
std
imul
les
cmp
and
jge
popa
push
lods
cmpsl
xor
xchg
cltd
loope
sbb
stos
in
xor
jns
gs
enter
into
mov
sub
xor
cmpsb
ds
fildl
dec
or
sbb
cmp
divl
dec
sbb
fsubrs
popf
insb
or
and
inc
mov
stos
aam
jge
in
sub
sbb
enter
dec
aas
es
in
hlt
std
insb
fstps
imul
in
or
and
aad
cmp
popa
mov
outsl
cmp
out
out
outsl
outsb
loop
mov
dec
loope
movsl
aas
jno
gs
and
bound
aam
stos
sbb
out
sti
pop
adc
adc
fsubl
mov
xchg
mov
jmp
mov
cmp
xchg
gs
jb
cs
jno
and
daa
mov
in
es
stc
lahf
push
cmp
out
adc
addl
test
and
shrl
jb
lahf
cmp
fimull
inc
mov
and
add
inc
adc
push
daa
jecxz
sbb
stc
popa
dec
xor
jecxz
jo
push
mov
inc
inc
insb
mov
sub
mov
movq
fildll
std
jecxz
xor
pusha
mov
cmp
xchg
or
xchg
icebp
xchg
test
xchg
jb
cmp
fcoms
pop
sub
cli
and
and
inc
push
sahf
pusha
lods
jl
inc
sahf
cwtl
jmp
cmp
hlt
loope
or
dec
inc
or
push
mov
std
test
mov
fs
dec
mov
ss
sub
mov
adc
aad
leave
scas
test
in
mov
cmp
xorb
rol
je
or
sahf
sub
inc
and
pop
xlat
jnp,pt
xchg
sub
cmp
repnz
pop
or
jbe
stos
lret
loopne
xchg
mov
fnstcw
std
jne
loop
mov
adc
insl
in
pop
rcll
outsb
inc
jo
fidivs
and
popf
outsl
xorb
xchg
jp
out
xchg
rorl
add
mov
sarb
cmpsl
push
nop
xchg
push
dec
xchg
cmpl
lods
xchg
push
lcall
test
push
je
ja
lds
mov
decl
lds
mov
enter
jge
push
mov
loop
sub
add
call
fucomp
mov
xchg
insb
fdivr
or
vaddsd
testb
add
mov
sbb
jmp
ja
mov
inc
and
stc
insl
inc
cmp
lock
adc
fdiv
int3
arpl
das
pop
and
or
in
cmp
scas
into
push
decb
xor
fdivrs
cwtl
mov
mov
and
cwtl
inc
push
sbb
xchg
cmpsl
push
push
adc
xor
cs
cs
pop
and
add
add
xor
gs
mov
test
mov
frstor
add
xchg
fiadds
jae
rcr
add
cmp
in
inc
ljmp
int3
cmp
mov
ja
jno
es
jle
push
xor
sbb
dec
stos
fimuls
cmpsb
imul
insb
mov
je
mov
cwtl
push
inc
lahf
mov
mov
ss
mov
testb
push
mov
inc
dec
lods
fimull
clc
leave
dec
aas
hlt
cmc
xlat
ja
lods
scas
mov
cmp
stos
ss
lods
jb
ss
cwtl
adc
mov
xor
in
fldl
fwait
jge
sub
int
push
or
or
push
int3
push
testb
xchg
shlb
ret
sbb
adc
push
sbbl
pop
lret
addl
loope
sbb
dec
mov
adc
xchg
inc
mov
cmpsb
jle
ljmp
push
pop
adc
bound
in
push
cwtl
pop
pop
xchg
push
nop
sub
pop
dec
jne
mov
and
jp
stos
cmpsl
lcall
insl
fnstcw
mov
cmp
mov
push
ficomps
inc
setle
cmpsb
scas
shlb
cmp
jae
or
inc
or
xchg
imul
mov
jns
sub
test
jge
leave
xor
sub
cli
xchg
arpl
cwtl
xchg
pop
dec
pushw
sbb
xchg
mov
push
sub
sti
mov
cmp
adc
popa
dec
mov
push
lret
ss
fistl
daa
xor
pop
sbb
jae
stos
add
and
outsb
pop
hlt
outsl
frstor
cmpsb
mov
out
xchg
aas
mov
nop
adc
and
cmc
sbb
mov
pusha
loopne
dec
jnp
jmp
vcmpps
lret
jmp
sbb
fistl
sbbb
push
and
ds
ljmp
aaa
in
mov
and
jmp
or
in
fcoml
xor
fmuls
mov
add
xchg
enter
sub
cmp
push
outsb
dec
sarb
cmp
sbb
loopne
fnstcw
xchg
insb
jb
lock
sub
and
mov
repnz
dec
ss
pop
dec
aas
jbe
ja
sti
adc
setge
je
adc
aad
lods
es
xchg
pushf
test
ror
test
stc
je
xchg
addl
pushf
inc
add
xchg
nop
xor
outsb
lret
stos
adc
negl
rcll
xchg
and
dec
lret
inc
dec
push
lea
cltd
shlb
popf
jns
cmp
movsb
ds
ficoml
dec
inc
xlat
ljmp
dec
jg
mov
fldt
es
mov
daa
push
and
rorb
jno
adc
rolb
mov
jge
imul
or
hlt
enter
cs
mov
dec
scas
and
rcrb
adc
dec
cmpsb
movsl
mov
adc
bound
dec
pushf
out
jb
nop
test
frstor
fidivrs
imulb
iret
seto
add
push
adc
adc
fprem
mov
jne
cli
mov
add
xchg
xor
inc
movsl
mov
dec
mov
cwtl
mov
shl
pop
loopne
or
outsl
out
pop
pop
scas
into
pop
test
lret
aam
or
jecxz
xor
les
sbb
in
inc
sbb
push
clc
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
xor
movl
mov
sbbl
mov
addl
add
xorl
xor
movl
cmp
movl
jne
mov
mov
or
mov
add
mov
adc
mov
mov
xor
adc
push
addl
mov
xor
xor
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
subl
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
pushl
pushl
call
jmp
movl
movl
dec
mov
add
push
mov
adc
mov
sbbl
xor
sbbl
xor
subl
mov
sbbl
add
movl
add
incl
imul
mov
movl
cmp
jne
and
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
insl
push
push
jo
addr16
pop
inc
push
jb
inc
je
gs
dec
js
inc
js
arpl
inc
push
jno
mov
add
inc
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
cld
ds
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
ds
add
add
inc
add
test
add
add
push
orl
add
cmp
ds
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
in
add
in
ds
add
or
jl
inc
add
jne
je
jns
jb
addr16
imul
add
addr16
addr16
pushw
push
jle
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
add
add
cmc
enter
push
inc
add
jp
loopne
inc
add
add
in
adc
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
dec
bound
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
add
add
push
imul
push
je
push
jbe
jo
dec
dec
pop
jp
jbe
pop
jo
push
jbe
ja
js
jno
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
add
jae
dec
gs
insb
jp
add
fs
push
inc
inc
outsb
imul
push
push
push
pop
outsl
push
dec
je
jo
add
inc
dec
outsl
pop
inc
jb
jns
inc
pop
add
dec
dec
dec
inc
jno
jae
push
arpl
add
bound
dec
ja
dec
inc
inc
push
push
add
outsb
dec
jno
jbe
insb
inc
push
add
add
add
add
jbe
imul
insl
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
cmp
inc
aaa
dec
ss
xor
dec
add
xor
dec
inc
dec
xor
dec
xor
dec
inc
xor
dec
pop
xor
dec
pop
xor
pop
inc
push
aaa
xor
pop
cmp
xor
aaa
push
xor
pop
add
push
xor
dec
inc
add
xor
xor
inc
dec
cmp
xor
pop
pop
push
add
cmp
xor
add
dec
pop
push
inc
xor
inc
push
xor
dec
inc
xor
xor
push
cmp
pop
xor
aaa
pop
xor
push
add
push
pop
xor
inc
inc
ss
inc
dec
add
dec
pop
push
cmp
inc
add
pop
xor
pop
cmp
inc
dec
add
xor
pop
dec
inc
push
pop
push
add
dec
pop
xor
pop
push
inc
inc
dec
add
push
pop
inc
pop
xor
inc
dec
xor
push
xor
ss
xor
inc
pop
push
push
inc
pop
xor
add
dec
pop
inc
inc
push
dec
push
add
dec
pop
ss
xor
add
xor
add
dec
add
inc
add
add
push
add
add
pop
add
xor
dec
add
add
pop
add
add
add
dec
add
push
add
inc
add
xor
pop
add
push
add
pop
add
xor
inc
add
add
cmp
push
add
add
push
add
inc
add
add
pop
add
push
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
dec
add
xor
xor
add
pop
add
add
add
pop
add
dec
add
add
add
dec
add
add
xor
add
inc
add
inc
add
add
push
add
add
pop
add
add
add
add
aaa
add
add
push
add
add
pop
add
push
add
pop
add
add
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
