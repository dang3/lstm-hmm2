push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
jmp
adc
xor
test
jg
add
jp
jp
cld
pop
jp
and
daa
cmp
jno
jne
cmc
jbe
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
sbb
sub
es
sbbl
out
sub
and
pop
dec
test
stc
xchg
arpl
push
jbe
mov
xor
aad
ret
mov
push
stos
mov
cmp
out
cwtl
pop
loope
mov
dec
es
jae
mov
inc
push
or
xchg
aas
sub
push
outsl
cs
stos
sbb
cwtl
and
loope
and
lcall
or
imul
adc
mov
mov
xor
insl
adcl
dec
inc
in
arpl
mov
daa
inc
imulb
xlat
push
test
mov
aas
mov
jg
mov
jle
aam
mov
fsub
dec
pop
xchg
faddl
jo
adc
stos
shlb
icebp
cmp
mov
sti
cltd
int
and
mov
lock
jnp
test
mov
test
sub
bswap
push
inc
add
xchg
jnp
pop
pop
cmp
mov
daa
push
and
cmp
aam
or
dec
inc
cmp
negb
std
ds
add
and
lahf
movups
jns
pop
in
xchg
rcrl
pop
test
insb
outsl
cmc
fs
or
cmpsb
sbb
inc
sbb
dec
movsbl
xor
mov
or
fs
dec
dec
ror
or
icebp
dec
mov
mov
cld
add
mov
out
and
sar
lret
shr
xchg
sbb
inc
out
cmp
test
inc
stos
xchg
rcl
push
repnz
filds
and
adc
sbb
or
in
push
aas
fsubs
pop
inc
cltd
fisubrl
pop
pop
cmp
push
mov
outsb
mov
push
repz
dec
jmp
nop
sbb
icebp
sbb
dec
xor
sar
and
mov
lds
push
lret
ret
adc
sar
xchg
enter
xchg
jg
add
add
sbb
sbb
cmp
out
ds
fidivl
fdivs
and
mov
mov
enter
or
dec
daa
or
add
out
stos
fmuls
insb
cmp
test
fs
data16
sbb
nop
lds
ds
scas
in
xchg
nop
fdivl
and
sti
bound
cmp
or
mov
ds
or
cmovl
loope
pop
aam
mov
mov
xor
inc
insb
mov
fsub
inc
das
xchg
push
jb
pop
push
psrlw
mov
mov
push
jl
mov
bound
fcom
mov
aaa
xchg
xchg
xchg
mov
js
pop
je
sub
sub
cwtl
pop
push
jns
mov
pop
test
aad
lds
or
mov
inc
test
push
jbe
xorb
and
xchg
dec
imul
mov
ds
scas
dec
hlt
or
enter
into
push
and
ljmp
mov
dec
call
gs
pusha
sbb
jb
xor
aas
sub
add
out
mov
shlb
mov
xchg
pop
pop
stos
mov
nop
mov
or
cmp
pop
push
pop
cmp
and
mov
lea
xchg
push
cmp
jecxz
imul
aad
fsubl
aad
and
std
rorl
xchg
fs
push
aas
jmp
xchg
cmp
sbb
cld
sbb
insb
pop
mov
icebp
jno
js
jecxz
mulb
and
es
or
int
fcomip
dec
dec
dec
pop
pop
sti
xlat
lds
out
push
setns
loope
mov
leave
jno
popf
cmpsl
sub
pop
loop
stc
jle
mov
push
add
dec
idivb
sbb
cmp
call
ss
mov
cli
add
movsb
ficompl
sub
stos
and
mov
mov
out
add
cmp
add
ror
add
cmp
push
mov
pop
push
cmpsl
testb
fs
pop
ret
roll
cmp
jg
sbb
loopne
dec
adc
ds
stos
and
jge
aaa
pop
divl
fsubrs
mov
pusha
jne
xor
push
movsl
lea
sbb
movsb
xor
inc
mov
or
pop
push
inc
pop
xchg
mov
or
jg
out
or
shll
or
mov
pop
bound
push
cmp
hlt
sbb
push
cmc
mov
jne
pop
or
test
decl
testb
lds
push
or
into
pop
cli
lods
lret
mov
int3
aas
cmpsb
jecxz
inc
repnz
jmpw
insl
mov
testl
mov
scas
xor
pop
pop
ja
mov
pop
xchg
fadd
adc
bound
shr
mov
movsb
xchg
jne
mov
jbe
mov
loopne
adc
adc
xlat
pcmpgtw
lahf
rorb
test
cmpsb
jne
movsb
aam
xchg
mov
aad
rcl
cs
int3
test
in
add
mov
popa
pusha
sbb
mov
cltd
pushf
cmp
push
lock
in
mov
iret
xlat
push
scas
mov
hlt
and
les
push
lret
test
subl
movsl
add
rclb
cmp
mov
lcall
in
push
mov
jge
or
mov
mov
sahf
cmpsl
sahf
sarb
fmuls
stc
ret
xchg
aas
outsl
push
fsub
adc
add
mov
xorl
ss
inc
sub
mov
jne
test
push
push
xor
jg
sbb
adc
scas
adc
xchg
insb
faddp
push
jle
loop
dec
mov
xchg
jmp
mov
std
iret
mov
and
pusha
adc
hlt
cs
and
jnp
jnp
inc
jne,pn
mov
push
and
mov
push
jp
push
rcl
push
pop
jno
jge
mov
test
xchg
lcall
mov
js
mov
pop
test
push
pop
clc
out
mov
pop
aaa
mov
les
lret
xchg
gs
pop
loop
sbbb
clc
and
adc
fdivs
xchg
ret
movsl
out
push
jo
mov
js
xchg
bound
pop
data16
popa
arpl
das
dec
jb
nop
gs
incl
arpl
push
dec
jg
fcomps
adc
jle
fnstcw
cmp
pop
mov
imul
loope
hlt
adc
mov
cmpl
jns
jnp
icebp
insl
movsb
aad
orl
lds
fptan
cli
push
push
or
out
mov
icebp
lea
mov
inc
mov
cmp
pop
lods
mov
mulb
lods
sbb
dec
pop
es
imul
stos
mov
inc
inc
push
adc
divl
aaa
aam
ja
cmp
jo
aaa
xchg
outsb
notl
fsubrl
push
sahf
pop
sub
out
ss
mov
jno
adc
out
ja
std
fdivs
inc
or
sti
push
aas
push
mov
xor
cmp
inc
mov
ds
add
in
std
movsl
jp
insb
hlt
arpl
xchg
mov
inc
ret
loop,pn
out
adc
mov
sbb
dec
dec
xor
scas
sbb
adc
or
cmp
cmp
jle
mov
and
mov
shl
adc
lods
mov
in
jmp
or
mov
pushf
in
sbb
fcomps
sbb
mov
pop
adc
aaa
mov
fs
rclb
add
dec
adc
add
dec
insb
mov
mov
mov
enter
sub
pop
mov
cmpsl
xor
mov
popf
adc
outsb
add
mov
int3
data16
pop
in
lock
or
dec
mov
ret
dec
dec
mov
filds
adcb
loopne
movsl
pushf
icebp
movsb
xchg
inc
popf
xchg
or
cmp
xchg
rcr
mov
in
xor
loop
shlb
lahf
mov
xchg
mov
pop
jb
mov
iret
enter
jmp
mov
enter
test
pop
inc
mov
mov
mov
out
sub
shrl
subl
fiadds
fs
dec
cmp
xchg
fsubs
test
mov
mov
repnz
neg
out
or
and
addr16
add
or
jae
lods
sub
xlat
xchg
jbe
rcrb
pushf
push
insl
hlt
imul
es
mov
sbb
and
repz
pop
pop
fbld
push
mov
pop
enter
sbb
jle
and
pop
xchg
sbb
stos
xor
jmp
cli
movsb
xchg
push
int
pop
aaa
inc
lcall
or
cmp
mov
insb
cmp
lcall
mov
cwtl
imul
push
cmpsl
jle
pop
mov
lods
pushf
jl
ds
or
sbb
enter
xchg
xchg
lock
sub
sub
dec
cwtl
xchg
cmp
outsl
es
jg
pop
and
cmp
ljmp
mov
imul
mov
xor
test
sub
out
jne
add
add
pop
cmpsl
and
stos
std
push
inc
push
imul
cmp
les
iret
lods
adc
adc
mov
mov
fs
jne
repz
jne
ljmp
jne
mov
gs
adc
mov
out
cmp
pop
idiv
mov
cmp
or
loope
dec
out
push
ret
lods
pop
or
mov
push
adc
mov
int
xorb
and
inc
jge
ljmp
adc
lcall
push
leave
mov
fcmovnbe
fimull
out
cmp
pushf
or
fwait
out
in
imul
shrl
jmp
jl
aad
xchg
lret
push
add
or
jmp
pushf
mov
mov
push
out
es
ss
nop
adc
push
mov
lds
jle
sbb
sub
inc
imul
rcll
adc
cmp
cld
dec
cld
push
mov
xchg
shlb
hlt
xchg
push
rolb
jbe
shrb
test
push
pop
inc
dec
xor
pop
push
fstpl
lret
xchg
bound
ljmp
andl
fsubs
mov
test
loopne
mov
jns
cmp
cmp
mull
pop
leave
push
mov
popa
jmp
sub
in
push
cld
in
lock
and
in
scas
into
push
jp
inc
test
ljmp
test
add
sbb
xlat
cmc
inc
add
pop
mov
ret
cli
push
in
xchg
jl
mov
xorl
lods
cmc
test
jp
enter
inc
sbbl
inc
and
jns
sbb
mov
nop
in
jge
pop
mov
shrl
or
arpl
and
sti
xchg
fsubl
cmp
inc
call
xchg
jns
dec
inc
lcall
and
loop
sbb
mov
pop
ja
mov
clc
scas
sbb
pop
jle
fcompl
and
pop
adc
sub
mov
or
sbb
mov
mov
ficomps
and
jae
aaa
cwtl
sbb
std
pop
out
push
or
cmp
mov
ret
aad
out
addr16
mov
adc
insl
mov
pop
adc
adc
jne
and
sub
xor
loop
je
addr16
add
ret
out
xchg
aas
fstps
js
push
sub
out
pop
sub
jecxz
dec
jb
pop
and
jne
pushf
pop
das
mov
out
xchg
lret
add
sbb
mov
test
int3
cmp
sbb
test
xorl
testl
fisubs
mov
xchg
adc
push
add
add
sti
push
and
shrb
and
stc
cltd
mov
and
add
cmc
dec
xchg
sbb
pop
loopne
lret
and
int3
add
pop
clc
jl
ret
stos
mov
jp
inc
mov
push
add
daa
test
push
pop
pop
jns
adc
xchg
aad
cltd
pop
mov
imul
bound
push
out
btc
nop
scas
ret
add
movb
outsb
sub
mull
sub
in
mov
sub
rolb
incb
rcr
push
xor
and
mov
xchg
lods
xor
movsb
xchg
pop
add
mov
pop
jae
jb
mov
or
push
mov
fs
fnstcw
mov
jle
enter
repnz
push
and
inc
or
cmp
add
xor
cmp
pop
loopne
arpl
call
xor
ss
outsl
aaa
pop
cmp
call
das
fists
fwait
in
mov
mov
sarb
fisttpl
dec
lock
jecxz
mov
and
sbb
stos
cmp
nop
test
pop
jo
mov
ret
and
in
stos
xor
insl
cltd
mov
inc
pop
xor
mov
mov
sub
icebp
mov
int3
jle
jbe
lea
cmp
ja
aas
or
mov
sbb
xor
mov
push
aas
push
sbbb
add
mov
pop
jge
test
pop
ljmp
jg
lods
pushf
sub
in
xlat
xchg
xchg
lcall
std
xor
in
aad
cld
mulb
jno
shr
cmpsl
sub
cmp
scas
mov
or
mov
dec
hlt
mov
repnz
adc
and
pusha
cmc
test
mov
fnstcw
xor
dec
mov
or
aam
add
sbb
fldcw
xchg
pop
and
dec
mov
jge
mov
out
pop
mov
and
and
and
cmc
sbb
push
dec
sarb
andl
pop
adc
aad
jl
inc
sbb
push
pop
mov
mov
mov
fldcw
in
jecxz
lock
pop
xlat
push
stos
or
loope
and
loop
es
mov
pop
shl
fstps
in
movsb
das
in
push
or
push
mov
pop
fimull
mov
pop
cmp
pop
pop
add
popa
lea
les
js
mov
xor
dec
mov
stos
push
xor
inc
addr16
sbb
inc
push
popf
sub
fstp
outsb
inc
jne
testb
popf
mov
sub
jns
and
insl
int
std
pop
iret
push
clc
ds
fistpll
mov
inc
pop
aam
mov
test
std
int
push
mov
fsubp
fwait
adc
xlat
mov
addr16
pop
jmp
les
loopne
cltd
sub
mov
int3
cmp
xor
adc
or
jg
leave
sub
outsb
inc
jp
fdiv
stos
jle
adc
push
out
pushf
outsb
sbb
sti
jecxz
ljmp
mov
subb
out
arpl
shl
out
and
sti
arpl
adc
pusha
cltd
or
cwtl
sbb
jecxz
push
je
mov
push
mov
loopne
inc
fldl
daa
je
push
data16
xor
fcmovb
push
gs
push
ret
out
es
pop
mov
cltd
inc
stc
fucom
bound
adc
push
loop
mov
or
pushf
int
mov
mov
mov
iret
inc
pop
jg,pt
outsl
fadds
xchg
js
jecxz
mov
xchg
inc
and
lds
aad
mov
icebp
cmp
les
call
dec
xchg
push
jg
sbb
mov
xchg
jne
mov
mov
int
dec
push
and
mov
sahf
and
adc
pop
mov
ljmp
cmp
or
scas
push
addl
aas
add
call
inc
inc
xchg
sbbb
inc
adc
mov
adc
jbe
or
ds
pop
pushf
dec
out
xchg
int
and
jle
pusha
movsl
leave
int
cmc
insl
dec
mov
into
add
cmp
into
cmp
out
in
adc
push
cmp
jecxz
xchg
xchg
ret
rcll
mov
mov
and
cs
ds
pushf
es
sarb
pop
filds
mov
clc
andb
scas
push
bound
add
add
lods
mov
lock
in
data16
lods
loop
lret
imul
push
fdivrs
push
sub
insl
ret
fimuls
cltd
dec
jo
inc
fidivrs
fcom
xchg
cmc
inc
int
lcall
fistpl
pop
pop
sub
mov
inc
inc
aaa
imul
sub
sub
imul
or
sbb
lock
mov
cld
in
jnp
daa
push
js
mov
pushf
xor
pop
push
cwtl
lods
stos
mov
pop
test
xchg
xchg
gs
inc
dec
dec
test
lods
xlat
stos
push
jp
sub
leave
idivl
push
in
test
push
in
add
lret
pop
jmp
mov
pusha
mov
insl
fsubp
adc
outsl
cli
xor
fcoml
clc
test
mov
jmp
jnp
pop
mov
sub
popa
mov
es
int
ds
fsts
enter
push
xchg
aas
js
mov
jbe
lock
hlt
int3
out
mov
xor
outsb
and
insb
add
push
std
lret
xor
stos
xor
out
sub
mov
dec
xchg
mov
bound
sbb
inc
inc
outsl
xchg
push
pop
movsl
jno
repnz
movsl
push
inc
xor
jno
xchg
mov
cmp
js
lret
inc
and
mov
inc
cltd
testb
sbb
cmp
icebp
int3
mov
mov
cmp
insb
mov
repz
int
jb
into
aad
dec
xor
fsubr
jp
cmp
add
xchg
adc
dec
cmpsb
dec
shrl
lret
iret
shll
cmc
cmpsl
push
test
add
adcl
dec
pop
testb
push
adc
shl
mov
adc
out
mov
popf
cwtl
xor
int3
pextrw
lcall
xchg
aam
fdivrl
xor
hlt
loope
aam
or
pushf
mov
lds
sub
out
inc
cmp
inc
adc
in
mov
test
cmp
mov
cmp
dec
addl
js
mov
stos
shll
push
xor
push
sub
push
aad
mov
cmpsl
fwait
loopne
repnz
lds
shll
pop
xor
ljmp
lock
sbb
outsb
push
mov
jmp
cmp
dec
cld
dec
imul
lret
xor
push
mov
sarb
lahf
jnp
sbb
je
pop
subl
adc
rcrb
push
mov
shrl
leave
xchg
adc
xor
or
inc
mov
fcomi
mov
or
push
aam
jb
lods
jg
sub
sbb
pop
into
sub
inc
pop
pop
pop
and
lret
jmp
dec
lea
push
stos
inc
mov
filds
inc
int3
ror
pop
imul
dec
les
nop
je
addb
std
sub
pop
test
mov
inc
xchg
lods
enter
lods
mov
insb
es
in
inc
ret
data16
dec
outsb
push
xchg
jo
pop
loopne
jl
ret
outsb
and
int3
jecxz
fcompl
cmp
jno
and
mov
movsl
dec
jmp
cmpsb
xor
jo
mov
test
pushf
cmp
std
inc
sbb
call
insb
pop
cli
lahf
lock
mov
dec
sbb
mov
repnz
aaa
push
xorl
shrb
mov
xor
mov
in
mov
xor
inc
dec
loope
pusha
loop
call
mov
pop
lret
in
jnp
jmp
mov
adc
jg
add
mov
addb
dec
sub
inc
into
enter
jno
pushf
shlb
cli
test
dec
jg
inc
push
push
sub
cmc
jl
pop
inc
out
arpl
or
aaa
mov
jmp
out
fstps
jg
pop
push
gs
sbb
fadds
pop
sub
repnz
inc
xchg
or
mov
iret
cmp
mov
inc
cmp
cmp
sar
cli
xchg
scas
das
cwtl
ror
std
mov
mov
stos
cmp
sbb
in
pop
cmc
mov
data16
test
cmc
sbb
fdivrs
pop
icebp
sahf
xor
pop
hlt
or
adc
repz
jne
and
jge
fs
movsl
mov
pop
idivb
xlat
pusha
xchg
ret
sub
fistps
mov
mov
pushf
bound
sbb
notl
push
imul
mov
pop
lret
push
shl
mov
add
mov
mov
insl
pop
pop
loopne
mov
jo
sti
sbb
sbb
add
fisubrl
push
mov
inc
xchg
les
inc
adc
subb
add
push
pop
insl
mov
popa
js
xchg
mov
es
das
or
mov
cltd
call
aaa
pop
cmp
mov
es
lea
in
or
bound
arpl
repz
out
insb
push
dec
cmp
fwait
shrl
inc
cmp
test
and
or
dec
dec
push
dec
sub
movsb
mov
fsubs
jnp
jmp
mov
xor
mov
cli
movsl
movsb
inc
fiadds
js
test
std
outsl
cld
adc
jns
mov
loop
lea
movsl
andl
fldenv
pop
fcoml
sbb
mov
ja
mov
jbe
repnz
xchg
adc
aas
aas
jecxz
cwtl
mov
or
add
mov
or
adc
je
push
lods
gs
inc
loop
int3
push
ja
dec
sbb
sub
inc
mov
jb
xchg
jge
loope
xchg
jae
add
iret
mov
repz
push
icebp
push
stc
push
int3
jecxz
sub
outsb
lahf
lcall
mov
xchg
mov
mov
jecxz
js
insl
cmpsl
xchg
shrb
lock
sahf
adc
mov
sub
pop
sti
imul
sti
cmpsb
iret
daa
lcall
mov
cmp
imul
jecxz
mov
cmp
test
mov
stos
and
push
popf
mov
and
lss
fimull
jp,pt
in
enter
pop
push
lret
das
mov
sub
mov
and
lods
dec
or
pop
movsb
lcall
loopne
inc
mov
sti
pop
inc
adcb
xor
add
adc
jnp
pop
fstl
mov
pop
or
jns
mov
fldt
mov
or
pushf
jb
out
addb
dec
pop
clc
out
ret
fs
lock
cs
pop
mov
test
sti
adc
ja
orb
stos
jne
mov
ret
addr16
sub
push
push
inc
jns
rol
cli
adc
aam
enter
fisubrl
cmp
add
inc
call
jle
sbb
adc
lahf
dec
aam
xchg
sbb
aas
fs
outsb
lds
fadds
inc
cmp
sub
mov
cmp
mov
xor
xor
shlb
or
leave
test
addr16
add
mov
std
stc
mov
xchg
sub
cli
js
push
jno
lods
push
push
addr16
mov
pusha
xlat
shll
inc
jp
loop
and
pop
and
out
in
stos
in
or
ret
or
dec
sub
pop
pop
mov
jae
mov
loopne
shl
in
lock
inc
jmp
mov
lock
dec
sub
test
xchg
lea
lcall
xchg
insl
cmpsl
mov
mov
stos
pop
jbe
iret
insb
and
or
stc
cld
sarb
enter
int3
sbb
repz
into
addl
and
jne
jmp
cltd
push
faddl
cwtl
push
inc
cmp
pop
test
cli
jge
adc
std
bound
jnp
mov
imul
or
iret
nop
fwait
sbb
shll
push
add
xor
mov
xor
cmp
fstpt
ror
aad
jo
fcmovnbe
icebp
and
fsubrp
pop
fildll
push
cltd
lcall
lret
bound
out
movsb
inc
data16
pop
lods
mov
in
mov
dec
xor
icebp
lods
shrl
icebp
bound
ss
dec
sbb
mov
aad
add
xchg
rcrl
lock
arpl
rclb
adc
jo
dec
cmp
aas
hlt
and
dec
bts
pop
cmp
mov
jae
test
sbb
sbb
mov
fmull
dec
outsb
sub
iret
and
and
mov
test
mov
jl
jg
mov
mov
aam
adc
in
mov
repnz
loopne
lret
lods
pop
cmp
std
lret
cmpsl
fldt
dec
arpl
fdivrs
imul
std
pushf
negl
jl
pop
push
cmp
cli
inc
or
pop
repnz
mov
out
addr16
fdivrl
sub
add
xchg
push
ret
repnz
enter
xor
mov
mov
or
sti
in
mov
jmp
xchg
dec
jge
xchg
dec
movsb
sub
adc
mov
adc
cld
mov
mov
mov
xorb
sbb
mov
fimuls
add
dec
movsb
mov
cmp
adc
imul
jmp
addr16
fwait
or
sub
ss
pop
mov
pop
fwait
mov
mov
inc
ljmp
out
dec
lea
pavgw
test
test
push
mov
mov
xchg
inc
push
stos
rcl
stc
lock
lea
dec
scas
cmpl
cmpsl
dec
mov
lret
push
xchg
aaa
push
xlat
jno
scas
nop
repz
sbb
ja
mov
sti
xchg
adc
inc
out
mov
in
hlt
pushf
xchg
in
xor
popa
sbb
into
loopne
mov
pxor
mov
ljmp
jl
inc
and
dec
pop
mov
aaa
sbb
int3
push
clc
inc
mov
jmp
fdivl
jmp
push
mov
add
adc
lods
subl
dec
stos
xchg
sub
cmpb
mov
into
pop
adcb
adc
scas
and
outsb
popf
dec
and
mov
sub
jmp
dec
sub
adc
push
or
jg
jno
sbb
lcall
cltd
jne
sub
lds
out
mov
add
into
loop
int
add
out
or
scas
ret
sub
ja
insl
xchg
dec
jl
shl
jbe
dec
jae
je
pop
push
sub
int3
push
jo
push
shll
push
daa
push
mov
adc
lea
push
scas
dec
xchg
adc
sub
pop
mov
out
out
scas
outsb
inc
or
out
cmp
add
aam
ss
mov
and
inc
dec
adc
shrb
add
jne
sub
mov
jnp
int
pushf
addr16
fwait
addr16
jne
std
lock
into
call
xor
into
faddl
cmp
shrb
es
aad
mov
mov
fwait
sti
add
mov
sahf
xchg
mov
insb
and
cmp
push
jp
inc
inc
add
pop
cmp
push
dec
stos
push
mov
push
cltd
loop
arpl
cmp
test
and
jbe
mov
cmp
push
clc
cmpsb
cmpsb
imul
inc
and
mov
mov
mov
xor
aaa
popf
fdiv
lret
pop
insl
mov
lret
sbb
dec
and
jp
add
sub
push
fsubr
mov
jmp
dec
push
bnd
nop
inc
adc
stos
psubq
adc
pop
shlb
lret
mov
xchg
dec
in
sbbl
pop
push
cmp
pop
mov
jge
jmp
loope
aaa
jno
aaa
sbb
and
lahf
or
push
mov
cmovp
lea
and
call
jbe
shr
mov
pop
out
xchg
test
mov
sbb
lahf
and
inc
gs
fwait
test
jo
inc
xchg
mov
pushf
sbb
pop
pop
int3
fucomp
popa
aad
pop
out
adc
xor
mov
icebp
inc
xchg
fcompl
das
add
in
add
dec
aad
mov
out
adc
sub
push
or
fwait
aam
sahf
mov
sbb
and
cli
popf
stos
lahf
inc
mov
sub
fs
in
and
jge
or
and
pop
stc
hlt
adc
mov
xor
sbb
push
dec
xchg
ljmp
jo
cmpsl
je
ljmp
arpl
jmp
insb
dec
in
out
ficompl
aas
imul
inc
mov
xchg
aam
push
dec
mov
adc
addr16
lds
xchg
sub
stc
icebp
inc
sub
sbb
pop
xor
sbb
test
inc
ljmp
jmp
xlat
stos
add
faddl
pop
add
mov
daa
xor
mov
ljmp
in
in
sbb
pop
test
adcl
into
loop
lock
or
test
decb
movsb
xor
ja
push
sub
xor
sbb
xor
pop
xchg
movsb
cltd
ret
mov
mov
cmp
loop
lcall
cli
and
pop
mov
xor
inc
cwtl
or
inc
test
in
enter
xchg
je
movsb
sbb
mov
scas
popa
push
push
scas
dec
mov
frstpm(287
addl
pop
lret
sbb
xchg
loop
inc
dec
dec
std
or
or
popa
shl
mov
cmp
cmp
push
xchg
rorb
push
inc
lret
cwtl
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
mov
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
jmp
cmc
cld
mov
test
les
cld
pop
jp
mov
add
outsl
dec
repnz
hlt
push
pop
or
ret
imul
dec
cmp
pop
outsb
int3
std
call
ss
xor
inc
std
xchg
das
dec
mov
push
popf
or
xchg
insl
test
push
dec
pop
fld
sbb
enter
cs
popf
cmp
int3
push
cmpsl
cwtl
xor
sbb
mov
sub
shlb
pop
ja
adc
sbb
dec
orb
mov
scas
and
xor
fmull
lods
fcomi
test
cli
outsb
mov
pop
test
xlat
inc
jns
imul
outsb
cmc
int
call
add
sti
xlat
sub
sub
js
loope
cmp
pop
pop
xor
int3
sbb
inc
xchg
repnz
dec
mov
push
mov
ja
add
cmp
adc
in
add
enter
adc
nop
mov
andl
cltd
dec
aas
push
call
sbb
subl
mov
fbstp
in
push
idivb
fisttpll
sub
lcall
push
icebp
adc
test
mov
leave
mov
xor
push
sahf
ss
fidivs
push
lret
mov
test
add
popa
mov
sbb
xchg
sub
dec
fmull
or
hlt
dec
inc
fs
mov
and
mov
enter
jb,pt
and
cltd
pop
xlat
jle
ds
or
ficoms
adc
xchg
inc
lods
ja
push
aam
js
add
sarb
inc
shl
mov
in
pushf
ljmp
cwtl
xor
pop
jp
movb
push
cs
and
nop
leave
sub
xchg
repnz
xor
bound
push
popa
cmpb
and
cmp
mov
sbbb
sti
enter
mov
mov
mov
std
mov
fneni(8087
mov
into
and
cmp
mov
push
mov
push
jne
xor
sub
jl
xchg
sbb
pop
mov
mov
loopne
rcrb
adc
and
mov
mov
scas
pop
xchg
sbb
shll
test
lods
inc
mov
sbb
jo
ds
mov
call
flds
ja
pop
into
xor
lds
xor
push
aam
movsb
aas
vprotw
out
daa
add
sub
dec
mov
lock
inc
fiadds
clc
ror
gs
ficoml
nop
jmp
fwait
mov
mov
shrl
es
mov
fcomps
jno
push
lahf
push
cs
dec
out
loope
mov
stc
ja
insb
aas
push
test
and
or
notb
mov
cmp
inc
pmullw
sub
fldenv
popl
inc
decb
movsl
popf
jae
cmpsb
std
push
sub
xor
mov
leave
push
sarl
into
fwait
push
stc
daa
sbb
mov
sarb
out
or
out
jns
mov
cli
xor
loop
sti
gs
dec
nop
xchg
push
mov
lahf
sbb
fnstsw
mov
into
mov
or
cs
mov
sbb
dec
dec
insl
xchg
jge
dec
negb
push
fs
popa
repnz
jnp
leave
std
xchg
pushf
es
mov
pop
xchg
add
and
std
cmp
cmpsb
mov
test
mov
lahf
fistps
shl
xchg
stos
pop
cld
mov
fists
pop
imul
push
lods
sbb
ja
push
and
lds
push
js
dec
dec
ficomps
push
loope
stc
add
cmp
cli
xor
es
mov
jne
lds
push
ret
jl
xor
aam
and
popa
mov
in
lods
cltd
nop
jno
or
ljmp
out
dec
pop
jecxz
inc
xor
mov
out
push
ja
xor
inc
mov
xchg
mov
xchg
jo
adc
mov
sarl
das
rorb
cld
cltd
imul
icebp
mov
loopne
jg
pop
pop
insl
sub
sub
pop
test
inc
or
leave
mov
cmp
je
stc
cmp
inc
insb
mov
int3
jns
mov
pop
sub
push
mov
jnp,pt
pop
fucomp
and
outsl
loop
int3
inc
subb
addr16
fisttpll
gs
loopne
movsl
and
andb
mov
out
sti
stos
js
sahf
sub
sub
sarl
stos
out
or
cmc
add
pop
cwtl
pushf
adc
mov
and
scas
mov
adc
mov
outsb
mov
cmovb
jle
sub
xchg
ret
insb
dec
out
cmpsb
rcll
jmp
xchg
imul
xchg
in
testl
fxch
mov
jle
movsl
sub
in
pop
pop
jmp
and
cmp
adc
add
repz
add
call
mov
ret
shll
fcoms
ret
int3
push
int
pop
ret
test
push
jnp
mov
mov
xchg
out
sbb
xor
mov
flds
jae
divb
cltd
mov
jae
pusha
enter
loopne
push
pop
lret
mov
int
push
repnz
inc
daa
test
es
xchg
sub
or
out
in
repnz
pop
or
cmpsb
cmpsl
push
adc
ljmp
les
ret
adc
les
mov
cs
xchg
fnsave
stos
sahf
mov
call
icebp
sti
fmuls
test
imul
fcomps
icebp
inc
mov
addr16
sbb
dec
add
pop
xorb
sahf
push
mov
mov
inc
and
inc
mov
in
jb
ret
in
xchg
lret
ficoms
bound
mov
add
rol
pop
xor
mov
mov
andl
and
dec
leave
lret
xor
aad
push
pop
cmp
xor
add
insl
mov
jnp
xchg
xor
mov
dec
adc
mov
or
mov
cmp
jne
inc
repnz
aas
or
and
fadds
repz
bound
test
ret
mov
xor
jl
push
pop
hlt
es
insb
mov
popf
cltd
fidivl
pushf
decl
push
int
cli
add
cmpb
fwait
cli
imul
dec
or
pushf
mov
and
mov
clc
out
sbb
pop
push
mov
dec
fucomip
jp
xchg
mov
dec
cmp
addr16
inc
iret
in
popl
aad
sub
inc
enter
mov
int3
push
dec
outsl
xlat
stos
int3
cmp
sub
inc
insb
rorb
pop
mov
xchg
lret
data16
iret
jle
les
std
mov
xchg
add
negb
mov
in
cmp
and
int
cwtl
pop
dec
xor
add
adc
fwait
iret
cmc
ret
rclb
inc
cmpsl
push
adc
aas
dec
fnsave
ja
dec
stos
xchg
xlat
adc
sbb
fwait
enter
popf
add
cmpsb
ret
jmp
out
fwait
rorl
aaa
cmc
jmp
adc
jne
lret
insb
fists
das
loope
jno
xchg
add
movsb
add
pop
lods
mov
sub
mov
mov
add
jo
inc
cld
or
scas
inc
arpl
outsb
in
out
pushf
xor
iret
les
outsb
dec
lcall
or
int
int
in
mov
mov
lds
daa
sbb
or
bound
cmp
inc
ds
clc
daa
jbe
mov
divb
jg
dec
hlt
adc
push
adc
jmp
and
push
push
dec
xor
xchg
jae
push
lret
ja
repnz
orl
mov
add
or
sbb
jmp
ds
sbb
xor
push
orl
sbb
outsl
adc
pusha
nop
cmpsl
repnz
jmp
xor
cmpl
pop
lret
fdivrl
pop
sub
pop
pushf
xchg
loop
sub
xor
pop
add
ja
pop
cmpsl
sub
jmp
push
fisubs
pushf
pop
ret
xor
ss
nop
cwtl
addl
jae
mov
icebp
fmull
cmp
fwait
std
out
pop
xor
sarl
fstpl
clc
xor
or
cmp
adc
int
sub
add
das
and
push
cmpsb
fimull
inc
mov
mov
push
and
in
int3
pop
or
mov
mov
jge
adcb
mov
xor
out
mov
xor
push
dec
and
pop
or
xchg
or
out
dec
mov
cmpsb
stc
push
adc
imul
mov
aam
pop
outsb
or
movaps
push
daa
mull
mov
scas
jp
jge
sub
mov
out
dec
mov
pop
mov
pcmpgtd
int
popl
pop
inc
lods
cmp
cmpsb
scas
xor
ret
cld
mov
xor
cmpsb
jno
push
mov
imul
or
fs
mov
testl
mov
xchg
insl
aam
push
or
mov
xor
es
std
es
pop
sub
loop
pop
lret
add
insl
ja
insl
and
jp
je
stos
outsb
stos
cmp
fnop
je
pmaxub
fcoms
cmpsl
pmaddwd
sub
movsb
xchg
popa
cmp
add
push
out
rcrl
pop
adc
stos
stos
loop
push
pop
ror
cli
inc
sahf
push
sub
dec
cmp
loop
mov
pop
mov
pusha
stc
adc
lea
aaa
lret
mov
repz
jecxz
aaa
mov
lds
fsubl
es
pop
cmpsl
out
xchg
cmp
int3
ja
mov
leave
jl
push
dec
jbe
mov
mov
inc
fildll
fisubrs
lods
mov
gs
jo
and
dec
jmp
adc
cmp
addr16
das
ss
lret
mov
mov
push
aaa
sti
icebp
loopne
pop
xor
negl
addb
mov
lock
enter
ret
dec
xchg
mov
jl
sub
sti
xor
fdivl
mov
pop
pop
cmc
pop
sarl
and
into
call
repz
rol
jns
repnz
enterw
pop
jo
pop
movsl
insl
sarl
hlt
xchg
cld
pop
mov
call
dec
pop
pop
lods
mov
mov
xor
push
mov
pop
inc
fdivl
test
jno
xchg
pop
xchg
add
js
dec
mov
xchg
xchg
roll
lods
stos
ds
imul
push
add
popf
cmp
outsb
sbb
in
or
xor
sbb
lcall
movsl
inc
pop
mov
mov
cmc
sbb
mov
ret
pop
jae
adc
divl
pop
cmp
cli
jp
sbb
sub
scas
lret
in
sahf
bound
aaa
test
out
xchg
cmp
mov
dec
push
outsb
xchg
pop
xchg
aaa
insb
fsubl
jecxz
movsb
mov
push
jge
sbb
bound
inc
es
stos
das
movsb
add
adc
pop
cmp
icebp
enter
add
int
add
and
pop
test
or
enter
fs
mov
sbb
shl
sbb
rclb
cwtl
cmp
push
inc
aad
daa
xor
imul
mov
sbb
push
xor
pop
pop
sub
js
in
pop
fisubs
mov
sub
xchg
dec
xchg
mov
ljmp
aas
adc
and
add
lret
mul
fcomps
imul
pusha
leave
in
and
ss
sahf
subb
sub
stos
ret
and
mov
ss
cltd
inc
les
pop
fcmovnb
jo
jecxz
sub
add
lcall
je
adc
jbe
jnp
xor
cmp
test
cmc
jecxz
jne
imul
sub
jbe
subb
sbbb
mov
mov
dec
rcrb
push
aaa
mov
addr16
or
push
out
shrb
push
int
push
roll
jmp
jmp
xchg
mov
dec
shll
pmaxub
fwait
test
scas
or
mov
and
mov
lods
dec
cmc
cmpl
xor
lret
mov
mov
fdivl
cmp
push
xor
push
orl
mov
sub
adc
insl
subl
xchg
sbb
test
add
addr16
inc
fnsave
rolb
outsb
rcrb
mov
push
mov
outsb
out
sbb
fld
inc
xchg
pop
js
ret
xchg
mov
mov
imul
fstpl
mov
xor
cmc
scas
ss
in
mov
sub
in
lfs
mov
lods
stos
sti
shrl
mov
fsubr
addr16
rcrl
decb
imul
xlat
or
xchg
movups
pop
cld
mov
les
sti
fadd
mov
out
mov
popa
shl
dec
sti
xlat
xchg
and
jno
gs
jnp
pop
in
test
rcll
loop
inc
les
jo
outsl
mov
jne
repz
gs
sub
sub
xorl
adc
cmp
ljmp
in
daa
mov
aaa
jae
pusha
jl
cs
mov
mov
push
or
das
inc
nop
or
or
and
adc
call
pop
or
or
mov
sbb
out
dec
pop
insl
pop
xlat
xchg
lahf
mov
and
cli
cmpl
xchg
loop
outsb
push
mov
imul
mov
cltd
jecxz
xor
ret
imul
out
inc
nop
scas
adc
insb
pop
in
dec
mov
lea
push
push
loope
jne
or
dec
lcall
fwait
or
cli
pop
repz
push
cmpsl
sbb
mov
xor
cmpsl
es
mov
shl
mov
jmp
mov
arpl
adc
sub
cmp
movsl
dec
mov
xchg
test
mov
add
adc
sbb
cltd
jno
push
xchg
pop
xchg
pop
push
push
mov
fstps
cmp
ss
aaa
cwtl
arpl
test
xor
dec
adc
je
xor
mov
cmp
addl
outsb
popf
pop
test
jb
movsl
in
and
and
mov
inc
out
idivl
mov
inc
pop
les
sub
je
xchg
clc
aas
pop
cmp
stc
push
mov
daa
dec
xchg
rorl
xor
loop
cltd
pop
add
jo
xchg
shlb
push
jo
mov
push
movsb
adc
mov
mov
rcll
push
popf
jl
lods
pop
sub
mov
js
jge
idivl
inc
sub
adc
sbb
jg
xchg
and
in
cmp
mov
test
enter
sub
xor
imul
bound
int
and
jb
sahf
loope
mov
push
pop
ja
sti
lcall
out
push
sub
jge
xor
adc
cmp
sbb
jno
jmp
call
xchg
test
push
jno
cltd
xchg
inc
xchg
hlt
dec
negb
iret
lahf
xchg
pushf
xor
addl
push
push
fwait
and
pusha
adc
shr
or
cmp
lea
or
sarl
shll
in
testl
cmp
jp
mov
dec
xchg
add
mov
mov
adc
lock
dec
test
add
mov
inc
sbb
or
and
push
and
push
jno
xor
mov
inc
scas
pop
pop
je
inc
mov
dec
lcall
aad
pop
je
in
or
in
or
push
inc
in
testb
add
inc
cmp
and
xchg
pop
jmp
sahf
mov
push
frstor
sub
addr16
xlat
mov
mov
adc
in
and
xchg
lcall
sub
dec
nop
je
rcrb
add
xor
nop
mov
mov
nop
mov
out
daa
sub
out
nop
and
cld
jne
mov
sub
adc
pop
or
mov
jge
mov
ret
aas
jne
cmp
gs
and
mov
inc
and
xchg
xor
cmp
iret
gs
sbb
pop
cmp
loope
sub
xchg
xchg
in
bound
mov
dec
outsl
dec
adc
mov
adc
int3
inc
ss
mov
or
cld
lcall
cld
fisttpll
push
sahf
shlb
sub
mov
lret
mov
pop
aas
cmc
mov
push
cld
inc
jmp
leave
in
mov
add
pop
or
mov
adc
lea
sbb
int
fsubr
sbb
fcoms
pop
adc
aaa
scas
add
sub
dec
ret
xor
fs
call
mov
mov
dec
leave
in
push
fsubr
pop
repnz
push
jge
scas
or
lods
popw
in
pop
int3
out
add
dec
xchg
aaa
std
xlat
adc
enter
popf
adc
xor
inc
cmp
clc
mov
jno
lret
dec
lcall
cmp
int
mov
sbb
push
idivb
adc
mov
ss
bound
push
mov
repnz
ret
xchg
xor
cltd
call
aam
mov
fidivs
cmp
jns
xchg
mov
jns
lods
lds
inc
xor
ss
push
call
xlat
inc
test
das
test
sahf
in
rep
or
loop
add
or
aam
lret
test
xchg
pop
out
mov
or
add
or
incl
iret
test
xor
mov
adcl
push
pxor
rol
rclb
cmp
adc
cmp
mov
fincstp
out
jbe
std
jb,pt
mov
mov
popf
jp,pt
ficompl
jb
fdivl
rorl
sub
cmp
jp
aam
add
jno
jne
mov
mov
inc
cmp
insl
in
fsubrl
ss
movsl
xchg
or
rorb
and
dec
sahf
ret
repnz
inc
mov
cmp
imul
push
or
fs
pop
sub
inc
add
sub
mov
xchg
lret
dec
add
cmc
jmp
stos
fcmovu
mov
inc
adc
pushf
xchg
mov
sbb
movsb
cmp
or
das
fisttpl
cmp
mov
sub
xorb
push
and
ret
shlb
sub
sbb
sub
rorl
shlb
cmp
lods
gs
mov
lret
stc
cmp
cmpsb
lods
fildl
test
aaa
mov
ret
jo
pusha
xor
cwtl
lahf
shll
into
add
aam
adc
jecxz
daa
inc
adc
and
in
pop
push
jno
jae
icebp
dec
cmp
push
push
push
out
loope
adc
js
repz
fidivs
divl
fisubrs
arpl
gs
out
test
je
repnz
sub
pop
movsb
daa
cmpsl
mov
ds
pushf
xor
cs
mulb
push
inc
push
xor
out
pop
std
or
fsubr
movsl
mov
push
outsb
adc
jl
xchg
xlat
xor
ficompl
mov
inc
fldl
xor
add
xor
pop
dec
mov
fucom
lds
jnp
sahf
jl
pop
push
mov
dec
test
ja
ss
mov
dec
push
pop
in
int3
ret
aad
or
xor
repnz
call
lea
das
and
xrelease
adc
popa
sarw
xlat
adc
inc
fwait
pop
aad
scas
mov
xchg
dec
cwtl
call
pop
jns
outsb
push
cmpsl
int3
rclb
jb
out
loope
test
ficoms
dec
ds
shl
outsb
js
cmpsb
sub
jmp
xorb
ficoml
daa
jb
int3
mov
imul
inc
xchg
iret
cmp
cmpsl
mov
jle
push
in
xor
mov
sti
push
inc
fs
popa
nop
pop
dec
jae
cld
jmp
test
adc
repnz
dec
mov
test
sub
popf
out
inc
icebp
pusha
dec
jae
sbb
aad
mov
pop
cs
jno,pn
push
int
je
inc
xchg
and
test
stos
stc
sbb
cmp
scas
imul
add
pop
rorl
sub
cmpl
lcall
test
leave
int3
loopne
in
cmp
pop
popf
mov
sbb
enter
push
data16
jl
sbbl
addr16
mov
jno
jle
xchg
andl
cmp
lock
scas
jecxz
or
out
in
ds
inc
sahf
shr
lock
jg
jp
sub
or
js
in
cmp
or
cwtl
mov
inc
clc
icebp
rcrl
sub
icebp
pop
xchg
xlat
inc
iret
sub
cmpsb
sub
fadd
lods
js
mov
xor
imul
xchg
int
sti
dec
popf
mov
xor
xor
xorl
jo
popf
daa
test
and
xor
dec
sub
cmp
insb
sub
mov
out
cmc
movsl
xchg
adc
mov
shlb
xchg
mov
or
sub
jl
jns
cmp
cli
add
adc
mov
fidivs
add
and
loope
dec
ss
jle
je
adc
pop
orl
es
outsb
jge
pop
jmp
mov
ret
insb
fdivl
cmp
enter
mov
adc
mov
inc
arpl
xor
test
adc
jle
pop
sti
cwtl
xchg
pop
push
push
in
lahf
pmuludq
in
outsb
sub
mov
iret
out
popa
jecxz
jns
inc
push
jmp
jge
push
jg
xor
and
mov
cmp
or
sub
sub
ja
cs
imul
push
lock
adc
push
loopne
pop
jbe
enter
jl
push
in
int3
mov
lcall
cmp
arpl
adc
out
gs
movsb
cwtl
cmp
push
pop
pop
and
cmp
enter
xor
mov
stos
jl
outsb
add
pop
sbb
movsb
push
and
and
or
rcrl
jns
and
pop
or
pop
jno
clc
jecxz
push
mov
jno
mov
std
fmul
fwait
pop
scas
in
mov
outsl
or
xor
orb
addb
jge
test
imul
loope
push
jns
stc
arpl
ss
mov
cmp
aaa
xor
jns
and
stc
pop
mov
mov
sbb
pop
in
mov
loopne
nop
mov
or
add
lds
mov
js
push
outsl
mov
cltd
pushf
nop
inc
fldl2e
and
sub
repnz
cld
incb
orl
cmpsl
cmpsb
scas
xchg
push
out
sub
sub
cltd
rol
sti
sub
mov
add
or
and
sub
xchg
sub
cmp
sbb
fld
mov
mov
mov
sub
addr16
addr16
mov
xchg
hlt
nop
cmp
lock
push
daa
jnp
or
int
mov
fs
in
cmp
test
push
out
repz
in
dec
movsb
and
jg
push
sub
repnz
cmp
cld
or
les
xchg
jbe
xor
pop
and
ljmp
inc
adc
stos
push
ja
in
mov
add
cltd
insl
pushf
mov
adc
push
add
ret
mov
aaa
jo
shll
lock
mov
adc
mov
xchg
cmc
insb
imul
out
and
fisubrl
test
in
cmp
popl
ret
mov
dec
dec
push
cmc
sub
push
ljmp
mov
mov
pop
gs
test
out
pop
in
sbb
inc
xchg
repz
test
or
push
dec
into
andl
aad
inc
loopne
lcall
pop
cmp
sbb
movsb
ret
xor
push
movsb
into
push
jmp
rcll
xor
rolb
fsubp
xchg
inc
dec
out
inc
cli
or
push
xlat
in
and
pop
push
lret
dec
cmpsl
xor
push
jle
pop
sbb
fcomps
jbe
lock
fwait
jbe
jo
lahf
stc
pop
pop
and
outsl
mov
mov
push
and
clc
mov
lret
cmpl
shrl
inc
pop
loopne
fwait
loopne
inc
insl
daa
push
test
inc
mov
dec
clc
scas
ljmp
mov
out
ret
in
cli
fisttps
dec
int
aam
push
addr16
sbb
mov
bound
lods
xchg
pop
push
jo
or
inc
sub
dec
daa
push
mov
arpl
sarl
ja
or
call
pop
add
mov
cmp
loopne
mov
into
and
imul
xchg
dec
dec
pop
lret
jge
shrb
mov
outsb
orb
dec
fisttpl
push
js
mov
push
cmp
mov
das
cmp
xlat
dec
outsl
pop
jecxz
out
ds
cli
dec
scas
in
pop
fidivrs
jge,pt
fwait
mov
xchg
out
fcom
daa
push
rcl
mov
jmp
sbb
ret
pop
hlt
cmp
shl
in
or
cmpl
mov
cmc
and
js
inc
xor
sbb
inc
mov
xchg
out
xchg
lods
sahf
fsubrp
lahf
rcr
mov
add
inc
daa
shlb
loope
xchg
ds
inc
xor
stos
repnz
sbb
add
in
fwait
roll
aaa
xor
lahf
daa
es
cwtl
jo
repz
ret
test
pop
stos
push
xlat
jo
test
cs
jno
mov
test
pop
aaa
mov
mov
movaps
stc
mov
or
xchg
xchg
cmovb
add
out
cmp
fwait
cmp
mov
inc
ret
jno
xor
aaa
inc
xor
mov
pushf
mov
mov
or
movsb
xor
subl
icebp
mov
ja
aaa
dec
fimull
stos
jmp
loope
cmp
xor
dec
adc
cmpsl
fcoml
mov
scas
popa
js
dec
push
add
cmp
dec
subb
mov
ljmp
bound
aas
jmp
add
cmp
scas
jae
out
cwtl
sahf
or
aas
inc
mov
pop
sub
or
pushf
mov
sbb
push
stos
and
or
inc
int
cmp
pushl
cmpsb
xlat
mov
sub
xor
jbe
cmp
mov
mov
repnz
leave
mov
pop
dec
dec
mov
mov
inc
cmp
push
push
adc
cmp
je
pop
fwait
ret
adc
rolb
int
outsl
clc
in
popa
cld
inc
xor
mov
arpl
adc
testl
adc
xor
push
sub
xchg
jbe
imul
out
push
ds
in
out
cld
cmp
pop
xchg
xorl
jle
push
xchg
mov
xor
movsl
bound
aam
fcoms
enter
out
hlt
mov
xor
inc
test
pop
test
dec
popf
lds
xchg
push
mov
push
and
inc
test
xor
xor
mov
pop
ja
lods
rorl
mov
outsb
xor
gs
push
mov
mov
mov
test
in
mov
pushf
mov
mov
popa
add
ljmp
cmp
pop
outsb
mov
jno
mov
ficompl
sub
decl
jmp
lods
sbb
test
loope
mov
xor
int
lock
rorl
into
out
out
hlt
add
rol
sbb
add
pop
sti
gs
insl
dec
leave
es
xor
xchg
divb
mov
and
dec
jno
bound
mov
into
test
cmp
jge
mov
push
dec
mov
fsubr
imul
adc
int3
xchg
mov
push
ss
xchg
xchg
les
or
pop
mov
rclb
das
dec
sbb
call
loop
push
inc
jbe
ljmp
insl
mov
xchg
dec
out
bound
xor
fcomi
in
les
dec
xor
hlt
sbb
push
adc
push
fwait
add
adc
mov
mov
xchg
je
fstl
test
xlat
das
jns
or
ficoml
push
inc
dec
inc
mov
inc
inc
std
mov
push
or
push
out
adcb
lret
scas
test
repnz
mov
pop
scas
adc
insb
jns
sahf
mov
insl
push
xorb
or
je
pusha
movsl
je
push
dec
push
outsb
add
lret
jno
fcomps
or
fldt
pop
iret
push
pushf
and
outsl
mov
push
or
ret
in
lcallw
fistpl
test
out
sub
les
jp
in
std
pop
push
adc
adcl
jmp
mov
inc
imul
cltd
push
lods
sub
push
out
cmp
roll
mov
cmp
mov
es
pop
les
daa
sub
out
jl
sbb
mov
xor
aaa
cmp
xor
pop
paddd
jne
test
push
movsl
pop
inc
push
lods
clc
outsl
push
lahf
hlt
dec
sbb
mov
es
push
mov
xchg
mov
das
popa
ret
aaa
mov
aad
inc
aam
aam
sub
dec
pop
push
mov
mov
pop
cmp
loopne
cltd
out
mov
mov
adc
dec
aad
push
es
bnd
fstps
dec
pop
or
sbb
adc
clc
outsl
jmp
outsl
pop
inc
lret
inc
mov
std
jg
adc
lcall
xchg
dec
mov
testl
cmpsb
fcoms
and
xor
rclb
and
std
cmp
into
int3
cmpl
mov
push
pushf
fwait
pushf
xchg
mov
aas
in
xchg
popl
fwait
lods
shlb
imul
and
inc
sub
cwtl
sub
or
pop
mov
push
mov
lcall
in
roll
sub
mov
sbb
push
push
shlb
pop
arpl
out
or
push
popa
inc
sub
mov
dec
jmp
push
cmpsl
and
push
pop
push
sahf
dec
cli
and
cvtps2pi
test
jl
out
jg
into
jo
adc
cli
movsb
inc
sbb
data16
push
je
add
mov
fcoml
scas
stc
stos
cmp
jge
sbb
nop
gs
inc
sub
push
cmp
outsl
pop
jo
mov
aad
lret
and
dec
aam
mov
repz
or
lret
int3
or
add
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
jmp
pop
add
add
xor
adc
jp
cld
pop
jp
pop
mov
xor
pop
nop
aam
inc
xchg
inc
xchg
cmpsb
pushl
or
cmp
std
pop
xchg
push
mov
cmpsb
imul
mov
mov
fisubrs
xchg
pop
jb
insb
das
add
jnp
pop
add
loope
add
mov
arpl
xchg
push
xchg
mov
cld
movd
add
mov
movsb
cs
leave
pushf
insb
push
ja
enter
cmp
pop
outsl
dec
xchg
hlt
xchg
jne
leave
pop
push
xchg
mov
jbe
xor
sbb
pop
jp
xor
inc
mov
lods
adc
test
insl
add
test
adc
add
daa
pop
xchg
or
flds
test
int3
in
xchg
popf
lret
add
xorl
mov
ficompl
inc
cmp
jae
imul
call
push
int
in
lods
adc
aad
ret
push
mov
mov
icebp
sarb
lock
jl
ficoms
scas
out
xor
js
mov
cmp
mov
test
loope
mov
fldt
lcall
jecxz
out
and
je
mov
test
sub
mov
outsl
inc
or
fnsave
push
dec
add
outsl
arpl
xor
jmp
pop
mov
xor
fldt
jmp
inc
pop
jecxz
bound
popf
cmpsb
jne
movsl
rcrl
adc
adc
push
ljmp
lods
leave
sub
rcl
out
mov
aad
addr16
out
or
gs
insl
mov
mov
scas
xchg
add
leave
push
and
mov
fcoms
fwait
jnp
or
sub
cmp
arpl
rol
jmp
fs
rcll
jne
lods
pop
mov
add
cmp
movsb
mov
jl
push
pop
shll
comiss
mov
sbb
sub
aaa
jl
loopne
sub
and
jg
pop
enter
repz
adc
aam
jge
add
loope
shl
mov
mov
mov
pop
xchg
mov
cmpb
add
cli
mov
mov
arpl
xor
add
addr16
mov
jns
ljmp
cmpsl
or
push
cmp
cmp
rorb
jo
xchg
stos
pop
inc
mov
add
addr16
jp
or
repnz
pop
push
cwtl
ss
lods
jle
xor
push
xchg
shlb
xlat
sbb
sahf
imul
sbb
sbb
int
mov
jno
xchg
enter
add
inc
jbe
sub
xchg
cmp
test
push
jae
pop
xor
call
sbb
sub
xchg
call
mov
int
neg
dec
mov
push
xor
pop
adc
ret
xchg
push
test
add
push
add
cwtl
adc
sbb
mov
insb
mov
or
pusha
mov
int3
inc
and
lret
mov
mov
test
adc
xchg
cmp
cli
nop
icebp
dec
loopne
xor
cmpsb
adc
mov
popa
push
dec
xor
in
dec
testb
hlt
fstp
aas
xor
jno
outsb
dec
in
adc
das
xchg
sub
jnp
add
int
mov
mov
mov
xor
incl
lds
out
mov
rcrb
fcoms
inc
rorb
or
add
mov
mov
insb
and
jle
adc
cmp
cmpsl
pusha
jge
mov
xor
dec
shrb
mov
add
push
mov
stos
hlt
std
outsb
mov
ss
sub
mov
push
cwtl
cmp
cmp
jg
xor
in
rcrb
js
stc
mov
loop
inc
mov
scas
or
mov
cmp
sbb
lret
inc
ret
xchg
arpl
sahf
lcall
shll
xchg
sub
cwtl
fists
push
inc
pop
repz
sub
sub
sub
neg
fxch
xchg
or
mov
scas
stos
mov
lock
fwait
mov
int3
fisubrl
sbb
mov
dec
pop
mov
add
pop
jo
movsl
ret
cmp
mov
mov
or
fcoms
int
mov
dec
xor
scas
cmp
test
xchg
and
ss
lock
daa
lods
addr16
inc
cmp
gs
ss
sub
cmp
sti
pop
jecxz
outsb
jns
stos
cmpsb
lret
mov
ja
xchg
add
sub
test
arpl
mov
sbb
cltd
mov
es
scas
dec
xchg
sub
nop
mov
dec
pushf
mov
sub
call
inc
push
inc
nop
lods
lock
shlb
enter
push
mov
cmp
outsl
mov
jmp
in
dec
imull
push
sub
jmp
jl
aam
adc
xor
cld
pop
add
and
das
jae
push
sub
dec
std
xchg
and
scas
sub
flds
insb
imul
outsl
push
mov
or
and
jmp
jp
hlt
jecxz
jno
mov
lods
sbb
dec
or
gs
in
bound
and
mov
push
popf
lods
pop
sbb
dec
sub
hlt
mov
jl
xlat
add
loopne
sbb
inc
jle
rep
xor
decl
fistpl
inc
and
pop
mov
push
sti
rcl
push
jbe
xlat
pop
cmp
and
mov
mov
cmpsl
notb
inc
xor
sub
mov
lret
ret
mov
scas
mov
fbld
mov
or
add
imul
inc
mov
mov
loop
shr
movsb
fidivl
fdivp
lahf
stos
scas
adc
jge
or
inc
xlat
mov
cld
addr16
or
loopne
push
popa
xor
push
jg
add
lods
adc
mov
push
or
push
mov
fnstcw
xchg
lahf
stos
xchg
jge,pt
insl
pop
mov
icebp
loope
addr16
testb
imull
adc
es
fimuls
int
mov
and
outsb
cmp
pushw
mov
sub
jmp
or
les
shrb
and
cltd
outsl
test
lea
rorl
mov
push
add
cmc
jg
xchg
rorl
rdpmc
test
inc
sub
jmp
mov
mov
aam
stc
fmulp
test
rolb
aas
int
ss
lahf
pop
cmp
imul
scas
sbb
scas
ret
loop
icebp
mov
cmpsl
push
push
fnstcw
push
xchg
cltd
inc
mov
cmp
sbb
jne
scas
xchg
push
push
and
ja
lret
clc
int3
xchg
in
es
xchg
lock
addb
or
jbe
mov
daa
dec
pop
xcrypt-cbc
cmpsl
push
push
push
cld
js
cmp
test
push
push
sbb
xchg
cltd
mov
mov
out
xchg
xchg
mov
push
lods
nop
adc
sub
add
pop
cld
mov
ret
adc
div
xchg
adc
icebp
enter
mov
and
sub
int3
pop
repnz
shll
loop
cmp
push
fnstsw
pushf
jl
cmpb
nop
sbb
aaa
cmpsb
loope
mov
outsb
mov
ljmp
loopne
imul
fs
pushf
push
mov
js
popf
adc
adc
lret
out
sti
dec
jb
pop
mov
call
adc
lock
leave
mov
fwait
lock
fcomps
stc
sti
pop
scas
lcall
dec
int3
cmp
movsb
pop
lds
xchg
les
xchg
pop
js
ja
adc
adc
in
fcmovnb
gs
xor
outsl
push
jge
outsl
test
add
dec
outsb
dec
xchg
nop
inc
lock
test
cmp
into
push
pop
inc
mov
dec
imul
sub
cmp
fmull
icebp
inc
rcrl
imul
int3
inc
push
sbb
shrd
jb
ret
popa
arpl
fcoml
xor
mov
idiv
in
daa
insb
fimull
jae
mov
minps
push
add
into
xor
mov
scas
mov
sub
lds
sbb
mov
shl
xchg
inc
or
mov
shll
fldln2
xor
insl
inc
addr16
fsubs
jl
call
dec
mov
cmp
pop
in
mov
insl
movsb
dec
dec
mov
popa
pushf
pop
or
sbb
in
bound
xor
fadds
sbb
mov
inc
xchg
xchg
notb
mov
stc
xor
sbb
js
test
mov
adc
push
push
sbb
sti
fbstp
test
js
and
jmp
xchg
cmp
mov
mov
out
int3
roll
mov
call
pop
inc
fnstcw
pop
and
push
outsl
inc
push
inc
pop
sub
xlat
dec
lahf
fmul
std
lret
into
and
mov
imul
pop
adc
add
push
in
xchg
lahf
jg
repz
aad
mov
sbb
xchg
sbb
outsb
pop
ret
push
cmp
jle
incl
loop
inc
mov
js
adc
jp
inc
or
fiaddl
and
add
lods
scas
and
cmp
loope
jae
js
or
das
and
fadds
enter
xor
shl
in
imul
lock
cmpsb
mov
inc
mov
push
out
or
sub
dec
adc
mov
xor
mov
ja
jl
pop
lcall
imul
insb
sub
push
dec
adc
jge
clc
sbbl
hlt
orl
lahf
ret
fiadds
repz
mov
int
push
sbb
push
aaa
insl
cmp
xor
out
incb
addl
into
push
xlat
mov
xlat
adcb
or
and
stos
jl
jmp
jae
dec
jmp
lds
xchg
es
and
loop
mov
hlt
cmp
mov
outsb
and
sar
jle
sub
icebp
addr16
cmp
pop
mov
push
call
in
mov
out
mov
sbb
incb
or
jmp
imul
sahf
loop
push
push
and
xorb
sbb
mov
jmp
sbb
mov
fstl
movsl
pop
jne
into
jo
mov
jmp
add
lcall
pop
mov
mov
flds
cmp
into
sbbl
sub
int
adc
jg
idiv
das
mov
pop
mov
sub
test
ret
mov
pop
pushf
daa
xor
lock
cmp
int3
xchg
dec
insb
mov
adc
int
int
sbb
test
enter
stos
jae
daa
out
cmp
cwtl
idivb
arpl
push
dec
lds
xchg
cmp
lret
xor
mov
loop
inc
pusha
ss
insb
lret
popf
nop
test
and
push
mov
fwait
or
loopne
mov
loope
xchg
daa
lea
das
rclb
inc
dec
push
cmpsb
mov
push
mov
adc
inc
push
mov
inc
adc
cmp
iret
mov
jbe
pop
neg
lods
sbbb
or
dec
mov
subb
outsb
jbe
pop
stc
jl
js
fwait
or
adc
mov
jns
jno
jno
gs
sub
mov
lret
cmp
jo
ja
mov
jge
jecxz
in
call
dec
in
xorb
pop
pop
xor
push
adc
add
sub
aas
add
jb
jecxz
fdivrl
repz
fildll
rclb
addb
jmp
inc
dec
jp
lahf
int3
or
jbe
lea
push
out
push
mov
loope
loop
stos
lcall
and
out
lods
outsl
int
mov
jae
xchg
adc
cmp
imul
inc
stos
pop
mov
test
mov
stc
imul
popf
je
test
mov
xchg
data16
shlb
sbb
pop
mov
mov
cmc
or
push
mov
shll
cmp
xchg
cli
inc
dec
jmp
mov
scas
add
push
gs
call
add
imul
adc
jae
cmp
in
xor
add
test
data16
jno
and
stos
aaa
cmpsb
enter
inc
cmp
cmp
jecxz
dec
pusha
mov
adc
sbb
jle
jno
inc
lods
in
jno
xor
movsl
repnz
enter
loop
adc
pop
pop
pop
sbb
xchg
or
xor
mov
mov
adc
sub
or
mov
bound
xchg
jge
mov
test
jl
push
push
xor
mov
scas
lahf
xchg
sub
jb
adc
xchg
inc
repnz
xchg
scas
loope
jecxz
inc
push
adc
pop
or
rorb
ss
add
iret
in
shll
ret
inc
mov
stc
data16
jmp
mov
mov
push
inc
sub
rol
push
nop
fidivl
stos
push
repz
ficoms
lods
adc
push
push
push
xor
in
xor
in
push
mov
ljmp
movsl
xor
push
cmc
mov
icebp
add
mov
mov
or
adc
jmpw
push
pop
lods
imul
push
mov
lock
inc
inc
adc
cltd
mov
and
mov
out
call
sbb
icebp
dec
lods
or
xchg
scas
test
xchg
ljmp
imul
pusha
sbb
mov
shlb
roll
jl
add
xchg
mov
addr16
xlat
sub
fldcw
jl
mov
mov
testb
mov
lock
xor
jl
sbb
andb
jae
jae
aaa
out
jae
insl
pop
jmp
test
pop
xchg
push
in
pop
push
orl
or
decl
mov
sub
mov
dec
stos
inc
or
aaa
scas
js
push
test
in
cltd
push
push
adc
cmpsl
push
or
and
data16
out
aas
sbb
and
lret
pop
mov
adc
jbe
mov
sbb
push
add
dec
imul
out
xor
xchg
jmp
mov
inc
cmpsl
or
push
ret
push
and
cwtl
out
push
xor
mov
test
xor
cli
dec
in
leave
xor
or
rcrb
test
rcl
in
or
enter
out
cmp
xor
add
xchg
dec
mov
mov
pusha
jbe
ficompl
mov
scas
inc
mov
cmpsl
in
cmp
loope
cmpsb
enter
jb
es
outsb
lcall
add
cmp
pop
push
inc
add
mov
int
int
jmp
jo
pop
cmp
cmp
and
rcrb
pop
ljmp
aad
mov
leave
je
adc
mov
xor
frstor
outsl
loope
dec
push
xor
xor
in
out
push
lret
cmp
jp
sbb
sarl
push
sbb
push
jno
cmp
jo
and
pop
xor
scas
mov
cwtl
movsb
xorb
lcall
js
cli
lahf
cmp
stos
mov
add
decb
lds
pop
mov
inc
cmp
inc
lahf
xchg
push
pop
testb
fdivrl
iret
test
mov
jns
daa
arpl
stos
std
call
lods
mov
xlat
popa
test
cmpb
and
mov
inc
xchg
fwait
lods
jo
cwtl
cli
stos
aad
shl
test
imul
xchg
aad
dec
jo
lret
cltd
mov
sbb
out
int3
and
lea
jp
outsb
out
std
scas
out
scas
jmp
sbb
lock
mov
hlt
fwait
or
and
sbb
mov
pop
fidivrl
inc
lea
ds
mov
incb
jns
pusha
cmpsb
cmp
popf
adc
stc
jbe
rorl
or
xchg
mov
xchg
movsb
ja
mov
adc
movsl
clc
sbb
push
mov
stos
jp
sub
dec
xchg
shr
mov
je
jl
add
mov
mov
pop
lods
popa
insl
hlt
idivl
andb
mov
outsl
sub
in
xchg
and
dec
mov
push
mov
loop
lock
hlt
in
imulb
jnp
inc
divb
pop
xlat
sahf
outsb
je
test
pop
leave
pusha
mov
cmp
mov
adc
ret
sub
outsb
pusha
cmc
pop
inc
nop
lret
nop
xchg
mov
aad
jl
les
xlat
loop
sub
repnz
fs
adc
jle
test
jmp
pop
divl
cs
jnp
pushf
cwtl
mov
dec
adc
adc
add
int
sub
or
jns
inc
repnz
pop
inc
jne
push
js
xchg
cmp
rcl
add
jle
loop
xchg
jbe
dec
jp
sbb
jge
sub
dec
femms
iret
sbb
cmovg
xor
movsl
clc
pop
es
shll
and
xchg
scas
rcrb
and
pop
movsb
aam
pop
nopl
dec
jno
ret
scas
sbb
mov
xor
pop
xor
mov
rcr
adc
int3
mov
sbb
stc
push
inc
and
fistpll
inc
or
sub
inc
pop
sti
push
enter
jge
jbe
es
or
xor
notl
pop
cmp
mov
sub
orl
daa
fildll
mov
je
sbb
mov
push
mov
push
jg
mov
ret
mov
sub
pop
xchg
gs
jle
cmp
mov
dec
mov
loopne
adc
inc
push
imul
loope
xchg
bound
xor
mov
jg
xor
faddp
cmp
int
xor
inc
mov
xchg
pusha
cs
sub
stc
insl
xor
sub
xor
hlt
je
pop
daa
fbstp
mov
jp
ret
ds
mov
xchg
and
ds
loopne
loop
into
mov
jge
movsb
dec
loopne
ret
sub
shll
hlt
aaa
or
fisttpl
jl
enter
adc
sti
jo
and
jo
rcrl
jae
rcll
sub
cmp
xchg
aaa
outsb
addb
or
push
pop
mov
pop
dec
xchg
push
mov
ds
stc
shrl
gs
aaa
fidivl
out
sbb
push
xlat
and
cltd
aad
and
jge
ret
stos
xchg
add
rol
cmp
push
paddsw
cmp
aas
int
lahf
je
es
mov
gs
pusha
inc
and
or
test
xor
les
lcall
test
xchg
jae
in
add
pop
and
inc
arpl
inc
lds
scas
test
pushf
mov
add
in
xor
push
test
es
pusha
xchg
mov
test
lea
pop
add
jb
imul
xchg
and
sti
mov
xchg
out
push
imul
push
dec
js
xor
adc
insb
add
aad
fcoml
repnz
les
data16
ja
clc
xchg
pusha
pop
add
lods
jns
cmp
ret
and
ja
ret
sar
ret
cmp
cmpsl
mov
movb
mulb
mov
push
out
adc
test
cmp
aas
cmc
sbb
pop
jo
jbe
mov
clc
push
aam
cmc
sbb
fidivs
testb
outsb
in
xor
sub
mov
sub
inc
pushf
orb
enter
in
out
dec
stos
scas
repz
xlat
ss
out
sbb
sub
insb
ret
mov
or
nop
lahf
int3
sub
add
mov
shrb
into
shll
sbb
xchg
mov
xor
aaa
cmp
fs
xor
push
gs
aam
push
lcall
loopw
push
fwait
mov
add
xor
loopne
sbb
mov
std
mov
mov
add
mov
adc
push
jle
jp
add
push
mov
fldenv
xchg
jo
and
cmc
mov
movsl
mov
dec
inc
scas
add
sbb
sbb
dec
adc
call
xchg
lcall
aaa
clc
mov
sub
in
mov
jle
push
jno
fxch
xor
pop
out
and
add
inc
mov
jnp
xchg
popf
insl
dec
loope
cmc
sbb
fstl
xor
inc
jns
fcoms
sti
xor
pop
leave
outsb
iret
fstps
lds
aam
in
aaa
outsl
lahf
int
test
cmc
inc
add
insl
push
es
jge
sahf
sub
into
and
push
insl
jb
repnz
and
xor
sbb
add
int3
mov
add
mov
lcall
mov
es
cmp
popa
ja
hlt
loopne
js
ret
fisttpll
and
sbb
pop
mov
sbb
aaa
cmp
ljmp
dec
dec
push
add
cli
xchg
pop
xchg
mov
shrb
or
mov
push
add
inc
std
lea
cmp
mov
lock
test
std
sub
push
cld
aam
scas
inc
jp
push
adc
pop
popf
pop
sub
lahf
popa
jb
mov
imul
imul
dec
lea
fldt
inc
inc
jecxz
push
std
aaa
lret
mov
imul
mulb
or
mov
test
mov
nop
mov
push
mov
lea
xor
mov
mov
and
mov
push
div
pushf
pop
ret
dec
add
or
roll
or
fisubl
ror
xor
cmp
sti
fwait
cmp
sbb
jmp
cltd
data16
sbb
inc
mov
iret
movsb
test
fdivrp
fiaddl
inc
or
mov
pop
arpl
cmp
aam
mov
fld
pop
push
mov
lods
aas
adc
xlat
mov
cmpsl
push
bts
pop
push
data16
fimull
mov
test
roll
lods
jecxz
pop
push
sbb
addl
pop
orb
shll
inc
push
aaa
dec
mov
xchg
out
iret
js
sbb
mov
add
xchg
xchg
popa
add
push
lahf
int3
pop
dec
mov
xchg
mov
pop
ja
stc
mov
inc
int3
scas
mov
sbb
add
fdivrp
mov
loop
mov
push
inc
mov
add
dec
mov
xadd
mov
idivl
or
mov
push
pop
aaa
or
mov
xlat
addb
cmpsb
add
clc
bound
or
sbb
inc
inc
add
jmp
inc
and
lods
rcrb
push
mov
inc
pop
mov
call
jmp
aad
inc
or
cmpl
jge
add
xorb
cs
xchg
daa
les
jge
jg
mul
fadds
fsubs
out
push
push
jp
stos
sahf
sub
imul
xor
mov
das
or
inc
push
inc
mov
jmp
inc
mov
xor
or
pop
or
mov
sub
or
add
sar
ja
int
pop
into
inc
cmp
add
dec
or
repnz
or
xor
fnsetpm(287
xorl
xchg
mov
xchg
fwait
cs
mov
je
shlb
push
push
mov
bound
test
jbe
jnp
or
and
cmp
ds
cmpsb
mov
idiv
fcomip
ror
fmuls
test
jae
pop
pop
aas
add
cwtl
icebp
stos
fnstenv
lea
xchg
push
mov
push
adc
out
test
pop
inc
cld
jecxz
out
mov
jb
cli
sbb
mov
test
fs
movl
fdiv
popf
inc
addr16
iret
mov
xor
jno
add
scas
sahf
sti
push
pop
notb
pop
add
jo
roll
sub
pop
bound
and
faddl
ret
pop
dec
ljmp
insb
mov
xchg
data16
mov
push
mov
lcall
pop
pusha
mov
cmp
sub
fmuls
add
repz
jae
rol
pop
cmpsl
mov
hlt
or
xchg
and
les
sbb
mov
mov
sub
lret
or
adc
in
sub
scas
aam
mov
call
adc
push
negb
inc
sub
xor
or
shrb
lods
push
add
dec
mov
push
rcll
inc
int3
andl
lahf
push
sarl
test
lret
mov
sbb
push
mov
mov
xlat
dec
sbb
cmpsb
nop
in
aad
mov
ret
lock
ljmp
repnz
loope
fwait
and
pop
add
imul
nop
jle
stc
push
and
outsl
mov
stc
dec
daa
insb
aaa
inc
inc
xchg
loope
sahf
stos
ret
movsb
xor
cs
arpl
sub
nop
add
or
shlb
fwait
pop
psrlw
mov
ret
jp
dec
pop
sbb
in
xor
cmpb
sub
lret
arpl
mov
push
jno
xchg
mov
notb
rorb
fldcw
rclb
imul
gs
lahf
repz
cmpps
xor
or
addr16
cmp
lret
mov
outsb
xor
imul
pusha
pop
and
cmpsl
frstor
push
jne
mov
mov
cmp
outsb
or
xor
sbb
mov
popf
inc
xchg
xor
cmp
test
call
notb
sbb
repnz
das
in
xchg
sbb
test
test
mov
inc
mov
imul
xchg
dec
lahf
ret
ret
out
jl
cmc
jg
flds
scas
xchg
dec
movsb
lock
movsb
push
push
adc
int
adc
push
fstpl
mov
jo
jne
lods
lret
mov
push
add
shr
and
lea
jbe
mov
xchg
push
cltd
movsb
inc
aas
dec
stos
mov
lods
jmp
pshufw
js
push
xchg
inc
lods
out
int
int
pushf
test
or
mov
mov
push
rolb
xor
mov
addr16
popf
mov
push
jecxz
in
out
ljmp
outsb
movsl
jl
outsb
mov
dec
cmp
sbb
ja
jnp
stos
int3
nop
mov
les
xlat
and
cwtl
dec
dec
add
adc
xchg
cltd
or
dec
aam
int3
test
fs
sahf
insl
push
or
pusha
pop
push
and
nop
add
mov
xchg
lret
dec
aam
push
inc
push
cld
pop
mov
inc
cmp
dec
stos
xchg
fdivr
add
test
test
sub
jae
xor
lds
jecxz
into
push
xor
aaa
loop
mov
jb
adc
dec
sti
xor
lret
lods
and
lahf
lods
push
jmp
pop
add
mov
dec
aad
je
jmp
mull
dec
xlat
jle
dec
xor
popa
pushf
jns
fsub
push
loopne
mov
cmpsb
or
push
in
lret
je
rcll
sub
pushf
popf
movsl
shl
test
xor
test
cmp
or
ja
jns
ds
scas
clc
fdivr
cmp
mov
stos
inc
std
scas
loope
ljmp
popf
fidivrl
adc
jne
sub
xchg
sub
ja
loop
out
cmpsb
fistpll
xor
outsl
pop
shll
adc
dec
add
stos
fldcw
popa
xor
in
push
pop
pop
mov
lret
adc
pop
pop
xchg
jb
sbb
jae
push
jl
pusha
daa
jbe
pop
jno
ds
xchg
jle
mov
clc
repz
xor
cmpl
or
dec
hlt
hlt
push
test
iret
nop
shl
ret
push
test
xchg
aaa
xchg
lods
out
aas
pop
loopne
sbb
inc
xor
sbb
dec
cmp
xchg
idivl
sbb
add
rclb
pop
aas
pop
je
cwtl
push
stos
mov
adc
mov
dec
sti
push
pop
pop
lret
orl
mov
addb
scas
in
or
out
jp
adc
mov
sub
cmp
mov
iret
add
jno
push
cmp
push
pop
out
jb
inc
sti
inc
repnz
mov
dec
xor
rcll
add
dec
pop
add
push
add
in
decb
inc
fisubrl
lock
hlt
movsl
dec
jae
xor
fstps
sub
roll
andb
pop
aad
jmp
rcrl
out
push
xchg
jbe
lcall
mov
int
and
xchg
xchg
cs
das
ljmp
rolb
les
cmp
jp
cltd
mov
jecxz
into
insb
adc
mov
rcll
jne
inc
cmp
loop
jle
lock
push
inc
mov
pop
jle
clc
js
in
popf
inc
stos
adc
test
arpl
ss
decb
aam
jmp
mov
or
pop
arpl
mov
outsb
incb
sbb
mov
xor
shll
mov
lret
cmp
adc
sbb
xchg
jnp
xor
jl
rcrl
ret
data16
jg
cmpsl
xchg
lcall
cli
dec
nop
and
or
rcrl
mov
mov
cld
clc
sub
mov
fstl
fcomps
frstor
push
dec
mov
sbb
sbbl
add
dec
stos
pop
enter
push
iret
push
stos
out
adc
xchg
cmp
test
enter
xchg
clc
xchg
or
push
iret
inc
in
fstpl
sbb
hlt
or
and
negl
imul
jbe
mov
push
inc
mov
adc
jae
fistps
mov
repnz
daa
or
cmpsl
lahf
fnstcw
nop
inc
out
imul
cli
adc
push
out
sbb
and
test
pop
hlt
jle
pushl
xchg
add
jbe
loop
ds
inc
or
add
jl
sub
cmp
lcall
movb
add
inc
in
add
xlat
and
or
jns
jg
jecxz
and
lcall
cltd
and
fsubs
int
mov
dec
cmpsb
fidivrs
ror
xor
cwtl
inc
ret
dec
jb
xor
in
sub
adc
popa
and
addr16
inc
fwait
nop
push
xor
push
sub
sub
outsb
test
outsl
stos
ret
lahf
adc
xor
pop
jl
dec
mov
mov
mov
cmp
gs
xor
sub
sbb
insl
ret
fucom
or
fwait
inc
jno
outsb
inc
aas
and
inc
aam
movsl
dec
mov
push
clc
mov
mov
mov
jmp
and
notb
xchg
dec
in
mov
inc
shr
jp
cld
pop
jp
add
in
sbb
sub
sahf
insl
lret
xchg
mov
and
lret
repz
sar
aam
pop
jns
inc
rcll
enter
dec
test
mov
outsl
and
insl
lahf
mov
mov
fmulp
sub
lods
mov
lods
scas
jecxz
outsl
scas
insl
out
jbe
sub
push
or
jmp
dec
adc
les
rorl
jecxz
loop
xchg
sbb
xlat
stc
cs
pop
in
movsb
in
outsb
scas
pop
sbb
cld
hlt
push
and
in
daa
adc
fsubl
cmpsb
jne
mov
inc
icebp
push
cmc
push
shlb
rcrl
mov
repnz
jo
fistl
int3
loope
and
and
lahf
mov
xor
mov
adc
inc
fwait
test
xor
andl
pop
pop
sahf
jns
inc
mov
fcmove
cmp
je
shl
xchg
xchg
int
push
andb
repnz
and
cmpsl
fists
jle
push
mov
cmp
xchg
add
into
mov
xchg
jbe
inc
push
mov
testb
jg
sub
rorl
enter
and
mov
adc
or
pop
int3
ja
mov
ljmp
cmp
sahf
jg
xchg
pop
xchg
gs
cmp
xchg
dec
inc
int
or
pop
gs
adc
es
stos
inc
pop
xor
xchg
stos
loopne
pop
inc
push
or
or
rcrb
pop
mov
push
cmova
inc
cmp
fstpt
jb
clc
popf
and
les
mov
leave
fstpt
sbb
adc
or
pop
pop
push
lret
mov
xchg
xor
cltd
iret
pop
or
ret
in
or
pushf
dec
add
mov
xchg
jmp
sub
std
lahf
mov
jmp
js
cmpsb
pusha
arpl
imul
incb
jp
sbb
pop
aaa
jbe
out
lret
iret
movsb
ret
ljmp
or
or
test
data16
mov
push
jl
in
iret
nop
mov
aaa
testl
sbb
push
mov
lcall
cmp
movsl
mov
or
mov
xor
addr16
pusha
push
xor
or
fcomp
rclb
cld
fwait
mov
neg
jne
adc
aas
push
jle
stos
xchg
push
and
sti
jo
aaa
in
dec
dec
mov
dec
lcall
xor
repz
aam
push
movsb
insb
arpl
add
mov
mov
dec
aam
ja
jg
inc
cmp
mov
jb
call
inc
scas
mov
pop
mov
ficoms
mov
rcl
outsb
clc
jb
stc
pop
dec
ret
into
repnz
mov
cmp
hlt
in
ja
mov
xchg
jge
mov
mov
popa
popl
repnz
rolb
pop
jg
loopne
jno
jno
add
js
ja
lret
ret
jecxz
adc
loopne
dec
in
aaa
out
fsubr
popa
outsb
shrb
sarb
mov
jecxz
lea
jb
push
pusha
cmp
lock
iret
adc
or
pushf
sub
nop
pop
jmp
loopne
in
mov
hlt
cmp
fwait
cmpsl
fistpll
cmp
xchg
inc
pop
xchg
jp
jae
push
adc
push
pop
pop
pop
aad
and
or
jnp
and
sbb
add
outsl
into
outsl
movsb
adc
pop
outsl
inc
sbb
jb
pop
inc
ret
out
cmc
lret
cmp
das
imul
test
jno
ja
sub
testl
xchg
sbb
dec
cmpxchg
mov
sub
cli
mov
push
cmp
and
leave
or
push
stos
pop
dec
fisubrs
mov
in
fisttpl
mov
scas
mov
mov
jae
inc
xchg
push
mov
mov
and
mov
repz
outsl
mov
sub
jno
add
jp
xlat
push
fwait
inc
in
fisubrl
sahf
idivl
dec
cs
jo
and
push
mov
mov
fcompl
pop
popa
xchg
jo
ljmp
imul
push
repz
lret
ss
sub
xchg
mov
lock
mov
and
xor
sub
mov
hlt
or
xor
mov
clc
ss
into
cmp
ljmp
inc
out
cld
jne
xchg
lea
lea
xlat
dec
push
cmp
push
fstps
jno
inc
insl
sbb
xlat
outsb
and
arpl
jb
shr
mov
jg
xor
xor
mov
dec
sbb
cltd
mov
xchg
jp
cld
sti
or
movsb
test
int3
ds
fiaddl
and
jge
and
mov
leave
jnp
cmpsl
in
push
dec
and
lds
xchg
cmp
or
adc
jp
sbb
xor
lahf
mov
xchg
in
dec
adc
mov
popa
push
pop
jecxz
sbb
popa
cli
sub
cmp
sbb
popa
call
pop
clc
pop
cmpsl
divl
and
outsl
cmp
xlat
jb
jns
mov
pusha
jge
pop
fs
add
jbe
sbb
lods
in
xor
lea
test
in
mov
inc
sbb
mov
xor
pop
mov
xchg
adc
ret
sub
pop
je
sbb
mov
jmp
addl
insl
popf
divl
or
loop
out
add
cli
adc
outsb
fildll
or
jnp
adc
in
or
mov
arpl
fidivs
je
shrb
adc
push
aas
add
in
addr16
inc
xchg
test
je
jo
sbb
jo
adc
jae
mov
ja
call
stos
repnz
push
arpl
mov
test
pusha
mov
mov
in
sbb
push
icebp
sbb
cmp
fisttps
push
inc
int
cmp
cmpsb
call
test
lods
shll
xor
adc
mov
jle
pop
int3
sahf
fsubrl
ja,pt
and
lods
mov
imul
cmp
and
inc
or
out
shlb
jecxz
hlt
popa
mov
int
pop
or
js
lea
stos
int3
arpl
pop
jmp
cmp
stos
popf
jae
adc
bound
icebp
fiadds
jae
cmp
inc
ret
ret
xchg
insb
cmp
inc
mov
or
jns
and
add
dec
sbb
xchg
mov
mov
mov
push
cmp
jno
fmul
je
push
rclb
mov
sbb
fdivp
push
pop
stos
dec
enter
inc
inc
xchg
aam
aam
test
add
mov
js
sub
cs
hlt
idiv
cmpsb
mov
sub
test
jg
pop
add
call
ret
imul
insb
fistps
out
test
int
jge
lods
push
test
and
or
and
cld
or
setno
jmp
int
sbb
cli
pusha
dec
dec
imul
mov
incb
popa
mov
ja
xor
subb
jb
das
in
cmpsl
push
xor
mov
inc
xchg
movq
adc
sbb
outsl
jmp
mov
adc
or
adc
jl
loopne
or
and
test
add
lds
ret
dec
imul
in
push
jmp
mov
dec
fdivl
int
adc
fsin
or
fwait
push
addr16
mov
je
xor
push
adc
xor
push
imull
jge
in
push
inc
gs
jno
loop
sub
cmp
mov
xchg
sti
or
div
adc
outsl
clc
xor
push
sbb
aam
dec
jmp
ds
flds
xor
inc
push
cmc
push
jno
add
jl
lret
insb
mov
push
leave
jp
jne
andl
mov
je
mov
and
push
cmp
hlt
pop
push
andb
and
int
test
push
pop
sbb
out
jo
mov
data16
insl
mov
gs
sub
xchg
jmp
inc
lahf
mov
test
test
mov
sub
push
seto
aas
gs
dec
xchg
clc
sbb
push
fs
add
jae
loop
adc
pop
xchg
lea
mov
andb
xchg
or
aam
inc
shlb
or
fwait
addr16
cmp
outsl
and
clc
int
mov
push
movsb
jo
stc
xor
push
imulb
mov
cmp
add
cmpsb
in
enter
aaa
popa
ss
pop
icebp
pop
scas
dec
add
loopne
cld
fistpll
cmp
inc
out
mov
in
es
sub
bound
idivb
and
frstor
xor
lret
dec
push
mov
ljmp
sbb
repnz
sub
data16
cmp
jecxz
jne
int
cmpsl
mov
outsb
iret
inc
cld
lds
in
jmp
mov
jp
outsl
push
push
push
adc
sbb
cmp
add
repnz
mov
xor
push
ret
sbb
push
mov
pusha
popf
js
rcrb
jp
push
lcall
imul
aad
ljmp
xchg
pop
mov
mov
std
jp
dec
dec
jne
aas
test
lret
mov
mov
xor
add
pop
sar
pusha
and
addr16
lret
adc
lock
xor
push
dec
mov
mov
push
cmp
sbb
and
cmp
or
fsts
mov
arpl
aam
mov
xor
rolb
std
rorl
jnp
push
mov
frstor
mov
or
pop
mov
mov
jl
in
outsl
inc
mov
movsbl
sbb
pushl
push
aaa
rolb
pop
iret
movsl
repz
das
mov
inc
shr
cmp
pop
fcoml
jns
xor
sub
cmpsb
adc
enter
ret
sbb
dec
gs
inc
mov
cld
push
inc
and
mov
cmp
fldenv
dec
or
sbb
sub
stc
mov
mov
dec
mov
ja
out
cmp
sub
testb
dec
mov
mov
aas
cltd
mov
ds
pop
lret
ret
jae
bound
test
jae
mov
or
xor
xor
and
add
sub
je
insb
or
out
mov
mov
rolb
inc
lock
push
or
cli
jae
subl
sub
lock
popf
cmpsl
adc
pop
and
cmp
xchg
inc
jb
loopne
popa
test
xchg
pop
mov
cmp
dec
lock
inc
addr16
adc
and
sti
inc
arpl
dec
xchg
or
cmp
aas
add
out
sub
fwait
xchg
jno
inc
add
repnz
dec
loope
cmp
mov
inc
xchg
cmp
cmc
fmulp
pmullw
fnstcw
push
fdivp
xchg
cwtl
mov
sbb
cmp
or
outsb
rolb
arpl
jle
aas
inc
loopne
daa
in
jae
lds
pop
sub
div
xchg
out
hlt
pop
push
daa
insb
adcl
sbb
testb
fs
movsl
lods
cmp
sti
cli
cmpsb
ret
data16
in
ss
loopne
nop
push
movsb
jle
js
or
cmp
sarb
out
roll
cmpl
jne
add
and
ljmp
or
and
jg
mov
inc
faddl
idivb
aaa
lods
xor
mov
adc
fwait
push
outsl
scas
mov
push
push
sub
lret
xor
pop
call
push
shlb
mov
jne
xchg
pushf
sub
pop
and
fnstcw
add
xlat
mov
dec
jle
mov
es
in
cmp
sub
lds
cld
cs
xor
fdivl
mov
cmpsl
sbb
fdivrl
test
js
inc
inc
mov
lret
xor
inc
cmp
jl
jb
push
fs
bound
cmp
rclb
jne
ljmp
in
callw
adc
in
jbe
xchg
pop
sbb
mov
imul
add
mov
xorl
push
js
cmp
das
and
fnsave
xor
pop
aas
in
add
lret
test
and
jp
push
aaa
inc
pop
lcall
aaa
push
stc
cmp
xchg
add
movsb
lods
xchg
test
pop
lods
aam
and
pop
test
sbb
in
inc
inc
xor
push
pop
or
pop
fadds
xchg
sahf
imul
int3
mov
lahf
mov
sbb
mov
fnstenv
xorb
ja
dec
iret
mov
inc
inc
scas
cmp
inc
fnstenv
std
les
icebp
jge
xor
cmp
mov
shlb
repnz
cmp
lret
scas
pop
sbbl
mov
dec
adc
mov
dec
lods
imul
icebp
arpl
jle
pop
xor
pop
test
sbb
sbb
fldenv
xor
test
cmp
push
sub
xchg
rep
aad
mov
add
loope
adc
sahf
dec
push
mov
pop
inc
cwtl
adc
lods
mov
je
push
in
aad
xlat
imull
and
push
or
in
xorl
inc
and
inc
jmp
ds
push
das
push
pop
sub
test
in
mov
rcrl
icebp
xor
subl
aaa
daa
out
or
push
jne
lods
jae
add
xor
aad
or
movsl
and
sub
mov
imul
ss
out
mov
push
push
mov
dec
fdivrl
sbb
push
cs
sbb
cmp
or
imul
iret
adc
xchg
ja
std
adc
mov
fistpl
in
pusha
das
mov
subb
and
xchg
mov
push
pop
pop
fwait
push
xchg
pop
jbe
lcall
movsl
js
mov
and
pop
shlb
adc
push
hlt
mov
jge
mov
add
pop
fadds
push
and
push
inc
cmp
test
push
inc
dec
imul
nop
fwait
lahf
pop
mov
orb
loopne
insb
cmc
rolb
pushf
in
mov
dec
loop
aas
adc
jmp
cs
and
mov
mov
inc
and
mov
aad
popf
cmp
pop
addl
jne
outsb
and
jg
fyl2xp1
stos
push
mov
jl
loope
adc
jae
inc
jae
sbbb
jmp
lcall
sarl
cltd
pop
jne
and
pop
xor
sbb
pop
out
in
lcall
shl
xchg
or
je
and
imul
dec
adc
xchg
cmp
mov
inc
out
cmp
jae
lcall
mov
mov
icebp
mov
out
mov
push
or
imul
jnp
fnstcw
inc
pushf
negl
push
int
outsb
mov
cwtl
fwait
inc
sub
les
sbb
mov
pop
push
push
dec
mov
adc
rcrb
jge
and
cmp
and
pop
push
imul
xor
mov
sbb
xchg
das
add
ficoms
push
es
pop
out
mov
shll
xor
push
hlt
inc
mov
mov
dec
cmpsl
and
xor
sub
jl
jl
cmp
jg
hlt
sbb
imul
lods
sub
inc
stos
stos
aas
lods
xor
jge
pop
mov
mov
push
fwait
inc
push
dec
cmp
jae
and
sbb
out
inc
push
dec
stos
sbb
mov
in
and
pop
dec
dec
clc
dec
movsl
pop
xor
adc
mov
hlt
or
mov
lods
divl
fadd
lods
fmul
fadds
shrb
add
lods
inc
stc
fiaddl
pop
stos
orb
in
dec
add
push
inc
mov
lcall
dec
pop
sub
adc
lcall
xchg
scas
cmp
xor
cld
ror
lods
jl
clc
ds
mov
movsb
test
std
arpl
into
ljmp
push
outsl
shrb
cmc
sbb
mov
popa
jne
jmp
ja
dec
jmp
xchg
xlat
loopne
fwait
xchg
xor
arpl
roll
out
fsubl
mov
adc
lcall
push
rcll
pop
inc
ds
add
ror
or
cmp
mov
stc
mov
loope
not
dec
aad
pop
out
inc
popf
or
and
mov
push
inc
mov
sahf
ja
xor
insb
fldcw
mov
cltd
fdivs
push
pop
andl
loop
xor
inc
jb
cmp
pop
add
inc
imul
rcr
inc
fs
sub
sub
int
pop
or
jns
and
lds
push
or
jnp
loop
fstps
add
dec
pop
das
outsb
imul
cli
test
or
push
out
or
add
idiv
push
mov
dec
jl
rol
pop
jnp
movsb
push
hlt
jmp
xchg
pop
push
js
xor
fistpll
mov
daa
xchg
pop
cld
pop
lret
filds
push
xchg
pop
pop
mov
aam
out
sbb
or
insl
dec
mov
fildl
aas
cmpsl
sub
xchg
push
loop
incl
mov
mov
sub
cmp
xor
lret
jmp
shlb
incb
ficoms
lock
and
jge
push
push
and
mov
data16
hlt
aad
mov
jmp
fcmovbe
xchg
mov
stc
adc
jno
inc
pop
sub
outsb
les
cmc
cmp
loopne
cmp
and
pop
hlt
adc
inc
std
cmp
pop
add
lods
jge
call
add
cld
mov
fisttps
xor
fcomps
out
sbb
ja
dec
push
push
repz
mov
inc
lret
cs
out
mov
dec
lahf
sub
jecxz
mov
jg
push
int
sub
pop
lcall
out
loope
sub
imul
or
daa
mov
push
out
mov
jp
adc
loopne
cmpl
or
jnp
inc
xchg
mov
or
xchg
arpl
fists
dec
cmp
mov
or
sbb
push
inc
mov
pop
js
scas
aaa
aaa
fnstenv
outsb
call
push
xor
idivl
mov
sub
shl
mov
push
btl
push
adc
les
and
and
mov
push
mov
mov
xor
and
xchg
fxch
pop
fldcw
xchg
in
xlat
mov
sub
cmp
bound
xchg
mov
pop
cwtl
out
xlat
jbe
push
das
mov
in
outsb
and
xor
sti
out
nop
into
pop
pop
filds
push
push
inc
and
pushf
pop
mov
sub
mov
out
je
leave
out
xor
pop
pop
out
mov
loop
stc
leave
xor
testb
sub
out
test
and
lea
pop
xchg
jne
cld
inc
fcmovbe
sub
adc
mov
ljmp
jbe
nop
sahf
jl
inc
add
mov
xlat
add
xor
test
subb
test
out
pop
mov
push
jg
das
out
cwtl
mov
out
int3
fcoml
add
fs
dec
xor
in
scas
pop
cwtl
push
mov
and
sahf
xchg
and
pop
mov
dec
loope
adc
push
imull
mov
out
mov
ret
push
inc
adc
mov
ds
cwtl
icebp
int3
lds
aad
aad
cmp
cs
inc
sub
mov
xchg
les
push
mov
cmp
sub
mov
xchg
and
inc
testb
jae
jb
adc
and
shll
lahf
mov
add
mov
pop
dec
push
mov
and
dec
or
jp
lds
aaa
js
je
cmp
adc
jg
inc
xchg
imul
repz
repz
stos
shrl
sub
push
icebp
out
ljmp
inc
aas
cmc
loope,pn
add
lds
sbb
mov
or
iret
inc
or
popa
pop
lods
insl
mov
push
jne
divb
addl
add
stc
iret
add
add
fisttps
add
push
mov
fcoms
addr16
add
mov
jg
pop
ljmp
mov
das
mulb
fistl
shl
loope
lds
out
xchg
pop
inc
into
pusha
dec
fildll
and
sbb
rclb
ret
mov
in
add
xlat
or
adc
xor
das
xchg
dec
sub
call
adc
cmp
xchg
ljmp
gs
std
sbb
lahf
or
and
add
aad
outsl
xchg
test
movsb
call
cltd
push
insl
pop
xor
mov
popa
adc
fs
pop
mov
dec
push
pop
adc
sbb
pop
les
lods
dec
leave
jg
in
adc
push
or
push
pop
lods
lret
xor
sub
ffree
cwtl
lea
icebp
pop
movsb
or
sar
jb
in
cmp
out
add
popf
movd
loop
xchg
rcl
sbb
mov
roll
cmp
pop
push
inc
dec
mov
mov
iret
push
cmp
xchg
dec
pop
inc
adc
mov
xchg
repnz
cmp
cmpsl
loop
and
adc
jae
popf
pop
pop
mov
sbb
mov
jae
xchg
xor
repnz
fdivrp
decl
pop
or
out
orb
enter
pushf
cli
sub
sub
sbb
mov
stos
push
pop
push
fimuls
stos
stos
dec
mov
addr16
lods
lret
pop
jno
mov
xchg
sbb
add
movsb
pop
fcmove
xor
pop
ljmp
mov
sub
cmp
and
mov
mov
ljmp
lahf
scas
sbb
shl
sbb
add
jp
shl
or
fcoml
push
lret
js
push
sbb
lea
xchg
movsb
scas
cmc
add
mov
xlat
pop
xor
repz
xchg
gs
cmp
pushf
push
dec
or
icebp
push
and
sub
push
mov
lds
push
repz
inc
add
cmp
jg
push
int
lods
enter
out
movsl
xchg
test
mov
js
jo
pop
sahf
testb
dec
stos
sbb
jno
sahf
inc
or
dec
jp
es
jae
mov
enter
in
das
mov
cmpsl
or
and
inc
xchg
pop
mov
push
dec
mov
test
dec
stc
mov
stos
dec
fldt
in
in
jo
jl
add
mov
sarl
mov
inc
sahf
inc
aaa
cmp
sbb
lds
dec
aas
add
das
test
aaa
fs
outsb
repnz
movsb
lahf
or
fiaddl
mov
or
or
push
sti
xchg
ret
mov
popa
test
fsubs
rcrl
sub
mov
pop
lods
push
call
addb
cli
cmp
push
sbb
push
andb
lea
xchg
xchg
sbb
pop
in
mov
mov
mov
pop
stos
lret
out
mov
fucomip
insl
gs
adc
xor
push
xchg
fnsave
sub
push
faddl
lea
cltd
xor
pop
sahf
imul
cmpsl
cmp
xchg
adcb
jecxz
addr16
xor
xchg
pop
cmc
loop
mov
outsl
xchg
data16
sub
xor
in
lret
in
ss
jmp
loop
sahf
cmpsl
push
inc
jbe
pop
mov
outsb
or
dec
jno
test
sub
jno
fistl
or
in
and
data16
mov
xchg
or
sbb
iret
ja
out
inc
jp
sbb
jns
insl
cmpsb
adc
ja
fcoml
mov
dec
cmp
aam
mov
in
mov
push
call
out
test
sub
push
jg
adc
inc
in
sahf
cwtl
adc
fs
or
ljmp
push
lds
xor
sbbb
xlat
jge
mov
mov
aad
fistps
jno
clc
outsb
push
mov
or
xlat
mov
repz
bound
push
in
test
lea
push
inc
fnstenv
xor
shrl
rcrl
repnz
gs
cltd
js
push
xchg
imul
mov
gs
xor
mov
fs
movsl
int
lods
gs
jns
call
sbb
pop
lret
cmp
pop
repz
sub
xchg
std
pop
pop
bnd
popf
inc
lcall
dec
add
jnp
cwtl
fistl
xchg
pop
mov
cmp
icebp
jno
push
inc
pop
xchg
sti
movsb
mov
dec
mov
mov
lcall
or
cwtl
popf
repz
jnp
ret
clc
sbb
mov
add
iret
push
xor
push
sti
sti
inc
cmp
mov
xor
in
cli
jge
mov
jp
and
jg
in
dec
lods
ja
addl
loope
jmp
adc
out
test
out
xchg
fistpll
push
idiv
dec
jo
test
xor
lret
inc
sbb
imull
stos
jle
inc
pushf
cmp
inc
mov
mov
jge
and
mov
pushf
sub
sub
orb
xchg
cmpsl
xchg
push
popa
mov
fwait
out
mov
jg
pop
mov
dec
dec
sbb
sbb
js
ret
sbb
xor
int
xor
push
cli
rclb
lahf
xor
push
nop
lret
popf
std
cmp
imul
sub
mov
jg
and
es
popa
lds
or
mov
xchg
lret
xchg
inc
nop
fwait
jb
push
cld
mov
xchg
mov
pop
in
xor
mov
mov
push
mov
sub
xchg
mov
faddl
enter
mov
out
push
idivl
mov
icebp
lcall
test
or
inc
nop
cltd
add
test
out
sbb
fs
mov
push
mov
lcall
clc
dec
aaa
jns
stc
mov
negb
fldt
push
insl
bound
xlat
jns
js
mov
xchg
out
pop
in
call
aam
add
mov
jne
sbb
data16
mov
pop
ficoms
cmp
xchg
mov
pop
add
jecxz
xor
enter
xor
or
pop
inc
mov
mov
sub
push
jae
pop
adc
into
orb
insb
mov
test
lahf
push
int
lock
pop
rcll
cmp
leave
subw
stc
orl
cmp
jns
xchg
stos
cmpsl
push
and
mov
movsb
cmp
or
dec
fwait
pop
mov
cltd
enter
mov
sub
jno
mov
lahf
das
popf
pop
sar
cmp
mov
cmpsb
gs
mov
enter
shlb
jno
or
inc
xor
call
lret
test
jmp
mov
push
pusha
lods
insl
test
jg
mov
and
push
and
or
jno
mov
inc
das
jmp
mov
std
adc
mov
das
pop
sbb
sub
int3
out
adc
aam
cmp
in
aam
adc
loope
mov
mov
dec
adc
mov
call
popf
xchg
cmp
sub
and
mov
hlt
sahf
fwait
mov
cwtl
stos
adc
daa
dec
std
js
dec
add
or
and
push
movsb
add
sti
fs
ficoms
add
movb
outsb
fimull
out
xchg
testl
mov
jae
sarl
in
sbb
scas
mov
pop
mov
fsubrl
loop
pslld
and
notb
jge
popl
and
lods
test
sbb
mov
jge
jl
inc
and
mov
and
enter
cs
sub
andb
inc
in
inc
xor
inc
rcrb
adc
push
mov
xchg
inc
or
inc
aaa
jecxz
sub
jg
in
adcb
repz
or
popf
inc
les
into
cmp
jp
and
dec
stos
divl
pop
stc
ss
scas
sub
sbb
jge
ds
aaa
xchg
cmp
jo
pop
cmpsl
inc
adc
add
cli
in
les
insl
inc
shl
xchg
jg
mov
scas
mov
jne
cld
sbb
js
jg
cwtl
mov
shrb
stos
rcll
pop
dec
fsubs
ljmp
dec
fmuls
cltd
pop
in
pop
in
insb
jge
shrl
dec
arpl
enter
sbb
pop
lret
imul
cmpsl
mulb
mov
gs
enter
mov
sbb
xchg
xchg
inc
test
mov
mov
std
cmp
adc
xor
clc
ds
cmp
ja
sub
ds
ret
or
jp
jecxz
into
inc
dec
jmp
mov
dec
lcall
test
stos
orb
jmp
jo
push
int
das
daa
mov
and
adc
adc
test
adc
pushf
add
xchg
push
mov
push
negl
aaa
lods
mov
int3
xchg
mov
add
lods
push
mov
stos
icebp
dec
pushf
fdivl
cmp
and
mov
or
ret
xlat
dec
outsb
mov
add
es
or
scas
stos
movsl
dec
pop
mov
sbb
mov
mov
and
cmc
dec
add
daa
pop
cli
lods
test
mov
inc
sbb
fadds
dec
cmpsb
loope
mov
adc
push
xor
fcmovb
xchg
aaa
pushf
in
dec
or
shl
push
enter
popa
xchg
rclb
aas
sti
popa
jp
adc
or
xchg
lock
in
and
add
fmul
popf
jnp
lock
xor
sub
add
out
sarl
push
lds
stc
add
pop
sahf
sub
cmp
movsb
cmp
sbb
les
xchg
dec
mov
add
clc
lret
mov
sub
in
lea
jnp
fisttpll
jno
adc
xchg
hlt
sub
pop
ss
in
or
out
outsb
out
ljmp
pushf
sub
push
xchg
jno
repz
push
mov
stos
and
or
sub
imul
sbb
xor
xchg
imul
aam
mov
sub
mov
aas
dec
sbb
aam
mov
aad
fadds
out
or
dec
jge
pop
data16
movsl
cs
sbb
pop
xor
mov
pop
js
dec
add
adc
cmp
cli
insl
push
adc
push
hlt
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
xor
jmp
push
cmpb
mov
icebp
cltd
xchg
int3
and
hlt
jp
fstpl
jp
int
in
mov
cmpsl
insb
pop
push
faddp
pop
rcrb
add
pop
push
iret
and
shl
xor
xchg
jbe
push
scas
jp
in
out
wbinvd
aaa
add
jbe
in
je
mov
clc
lahf
or
mov
add
mov
loope
aam
cs
dec
push
sub
jo
sbb
dec
jo
mov
inc
xchg
push
daa
bound
or
pop
push
mov
mov
dec
out
fadds
aas
mov
es
sub
xchg
sbb
add
out
push
mov
fldl
outsb
or
lock
scas
pop
scas
fstp
int3
gs
pop
adc
cli
std
adc
addb
sahf
cmpsb
pop
iret
push
pop
and
cltd
jg
lods
insl
iret
imul
movsl
or
jno
scas
jmp
std
pop
fcmovnbe
mov
enter
aam
pop
sub
fnstcw
sahf
inc
push
jb
push
jecxz
add
mov
sub
cld
push
add
sbb
dec
xchg
mov
js
iret
sbb
ret
or
jo
xchg
in
jp
push
push
xchg
pusha
sbb
gs
adc
xchg
idiv
mov
xchg
xchg
add
pop
adc
in
repnz
cmc
popa
loope
lret
sub
pop
push
das
dec
ffreep
stos
inc
add
out
insl
ss
mov
mov
push
inc
pop
pop
repz
xchg
jle
push
inc
bnd
cmp
insb
jl
cmpsb
add
push
insb
sbb
dec
mov
pop
adc
int
push
rclb
pop
mov
je
xchg
mov
fsubl
inc
insl
sti
into
shll
imul
push
adc
sub
push
lret
clc
int
adc
or
jge
les
push
push
pop
adc
lods
mov
or
lods
xor
adc
push
jge
imul
cmp
dec
dec
fistps
sbb
xlat
sub
cli
and
push
aas
int3
into
adcl
dec
repnz
inc
stc
xor
add
sbb
psubw
in
or
sub
pushf
xchg
data16
in
jl
in
ljmp
dec
ror
mov
push
xchg
or
pop
dec
or
into
out
fisttpl
pop
rolb
push
movsl
jnp
stos
xor
xor
imulb
cmpsl
mov
shll
jnp
mov
insl
cld
cltd
ret
sub
xor
cld
ret
std
xor
and
shlb
rcr
out
pop
addr16
xor
adc
daa
jbe
mov
mov
aam
pop
inc
or
or
pop
push
inc
lock
ljmp
lea
aad
sub
and
mov
and
mov
jmp
mov
mov
lahf
cld
movsb
ljmp
shlb
sub
xchg
add
adc
cli
dec
xor
scas
jge
icebp
imul
insb
inc
add
xchg
jecxz
call
push
aam
in
test
mov
in
xchg
mov
fsubs
jnp
jecxz
jp
dec
sub
shll
lods
xchg
stos
push
ret
out
pop
cmpsl
mov
jecxz
mov
adc
stos
or
xchg
inc
dec
adc
loop
int3
ja
jo
mov
ficompl
pop
hlt
clc
pop
push
and
insb
add
sbbb
mov
jp
cmpsl
and
sbb
je
sahf
jnp
std
call
pop
adcl
mov
dec
ljmp
pop
icebp
pop
dec
dec
inc
mov
sub
mov
lret
inc
push
cmpsl
pop
daa
jb
in
dec
imul
mov
rorb
nop
dec
jg
push
bound
cmpsl
pop
push
dec
stos
dec
movsb
sbb
aas
idivb
push
cmpsb
push
push
cmpsb
adc
push
sub
nop
pusha
inc
and
loop
xchg
mov
lcall
add
mov
lods
addr16
repnz
cwtl
addr16
jno
inc
lcall
ds
mov
inc
sub
or
hlt
int3
mov
cmpsl
scas
pop
cmp
pop
dec
sbb
pop
jae
lods
sub
hlt
call
pop
enter
test
dec
add
mov
or
push
jmp
mov
inc
push
js
xor
movsl
push
dec
jmp
popa
int3
xchg
cld
sbb
fisttpll
sbb
shll
call
pop
jg
outsl
loopne
sub
adc
in
and
adc
mov
bound
test
rorl
fs
addr16
int3
pop
mov
roll
fdivrs
xor
rorl
xchg
mov
xchg
jne
lret
orb
fimuls
cwtl
and
cltd
lds
fstl
xchg
ja
fldl
adc
ss
outsl
pextrw
jnp
cmp
sbb
sti
divl
mov
jno
in
lret
adc
nopl
sbbb
jg
out
mov
add
sbb
sbb
movsb
sub
pop
or
nop
cmp
mov
ljmp
push
fwait
and
sbb
cmpb
rcll
in
lods
jp
int
inc
and
pop
jbe
push
jmp
aam
sub
pop
cld
adc
mov
mov
jge
sbb
sahf
add
xchg
xchg
insl
cmp
push
sbb
jg
stos
lods
loopne
pop
mov
push
push
dec
pushf
push
and
fcoms
push
jno
hlt
imul
xlat
enter
test
repz
sub
adc
lea
dec
pusha
std
arpl
cmp
adc
xor
jge
sbb
cmpsb
xor
aaa
mov
mov
je
and
and
sub
lahf
loopne
add
nop
mov
in
imul
mov
in
xor
dec
fdivs
and
dec
mov
mov
xor
icebp
orb
ja
sub
inc
nop
insb
mov
pop
and
pop
pop
test
out
xor
jne
xlat
lea
into
sarl
fisttpl
outsb
push
test
imul
pop
ds
cmp
pushw
push
ret
jo
roll
xchg
inc
adc
arpl
insb
mov
sub
xor
fiadds
dec
or
cmpsl
inc
jb
or
in
sahf
pop
enter
aam
sub
mov
jns
inc
scas
leave
mov
and
aaa
dec
sbb
pop
cmc
xchg
fwait
push
popaw
lcall
gs
scas
sarl
mov
leave
cwtl
mov
adc
addl
ljmp
fldcw
ss
fwait
jl
aam
pop
inc
jb
pop
mov
inc
inc
mulb
push
or
cs
lcall
jo
test
pop
insb
out
xchg
lret
dec
add
pop
hlt
mov
push
das
scas
daa
dec
loop
mov
cs
cmpsb
adc
inc
in
dec
cli
fidivs
lret
shlb
cmp
fucomi
clc
cltd
inc
pop
out
and
stos
das
insb
insl
xor
data16
push
gs
fidivs
roll
jmp
inc
nop
push
hlt
push
jecxz
jns
push
and
in
test
jge
fs
mov
mov
arpl
int
xchg
xor
fwait
stos
push
pop
iret
pop
xchg
dec
shll
js
in
ret
sbb
cltd
cmpsb
jle
hlt
icebp
jp
test
ljmp
inc
mov
and
sub
jp
hlt
fnstcw
or
or
xor
xchg
cmp
lock
xor
es
jmp
mov
mov
cmp
push
js
mov
or
xor
xor
and
jne
mov
adc
loope
lret
push
fsubl
xchg
push
in
clc
cmp
shr
pop
pop
lods
or
out
cmpsl
das
xchg
aam
pop
outsl
pop
dec
cmp
aam
mov
test
mov
sub
mov
push
mov
sti
repz
imul
aam
fcoml
roll
icebp
mov
insb
pop
jne
add
aas
fwait
mov
in
xor
dec
push
push
jecxz
sbb
mov
pushf
add
fcomp
cmp
loopne
xor
and
xor
jp
sub
das
cwtl
outsb
sbb
add
lds
mov
xor
mov
es
dec
sahf
hlt
cmc
cmpsb
xchg
xor
mov
cmp
cmp
inc
pop
bound
call
stos
and
sbb
scas
ja
add
insl
mov
repz
cmp
mov
out
ljmp
repz
dec
sub
sub
jg
ja
incb
jns
cli
pop
sub
inc
inc
leave
xchg
dec
pop
cmp
xor
mov
fmuls
imul
fs
lret
add
rorl
dec
loop
fcoml
out
movsl
icebp
mov
sub
test
sahf
imul
xlat
sub
int
jae
inc
mov
mov
xchg
pop
or
mov
ja
mov
inc
xchg
dec
pop
jbe
pop
sub
mov
sub
mov
pop
fs
push
and
scas
adc
mov
cmp
mov
xor
shll
jle
fists
jmp
flds
outsl
fwait
cmp
rcl
into
inc
sub
mov
inc
cli
pop
xlat
mov
out
out
pop
jbe
dec
je
js
out
scas
mov
leave
sub
mov
lods
sub
out
int
lret
push
out
leave
addr16
inc
std
outsl
xchg
mov
xor
mov
push
mov
adc
and
dec
cld
je
jb
or
int3
std
enter
orb
test
fsubr
jle
aam
stos
out
and
xor
cli
popf
fsts
inc
xor
dec
xor
pop
sbb
aam
push
mov
aad
push
cmp
cli
add
push
pop
std
mov
sti
lcall
xchg
cwtl
push
hlt
rcrl
mov
out
adc
cmp
dec
pop
fstpt
xchg
ret
push
pop
fidivl
cmpsb
xor
pushf
adc
mov
jp
jns
jo
or
in
and
jmp
arpl
jecxz
mov
mov
repnz
jbe
movsb
sbb
pop
jle
push
negl
xchg
jle
and
sbb
cld
idivb
stos
pop
pusha
sub
fs
add
loope
pop
adc
push
cmp
lcall
mov
adc
or
shll
inc
int
cmpsl
jb
or
inc
outsb
jne
test
dec
cmp
sbb
popa
movsl
lock
rorl
imul
je
inc
and
xchg
xchg
add
cmp
int3
adc
divl
push
cli
mov
xchg
mov
scas
rcll
inc
xor
and
cltd
add
ds
push
leave
pop
setp
pmaddwd
lcall
mov
mov
outsb
inc
and
add
andb
cmp
je
sub
loope
sahf
in
subb
push
lea
test
jb
movsl
mov
jge
lock
cmpsb
in
jne
fwait
aam
enter
mov
xchg
xchg
mov
jo
lock
jne
cmp
fldenv
aaa
pop
add
aad
inc
stos
js
mov
ret
cmpsl
push
roll
cli
dec
add
mov
test
daa
cmp
subl
cltd
fldt
cwtl
iret
shlb
mov
lahf
adc
inc
or
test
sub
mov
add
loopne
and
std
add
rorb
sub
and
shlb
xor
mov
andl
sub
out
pop
add
adc
std
sub
jecxz
sbb
pushf
xchg
add
mov
int3
movsb
dec
pop
imul
mov
mov
mov
dec
mov
mov
xchg
imul
add
and
jo
out
and
shlb
insl
pop
add
test
or
popf
and
mov
lahf
test
cli
mov
insb
mov
pop
adc
or
or
push
sarb
mov
mov
das
mov
jg
fdivrp
arpl
data16
out
es
daa
xor
mov
pop
pushf
stos
ret
insb
out
je
pop
mov
rorl
or
mov
mov
into
sub
jmp
mov
fldcw
dec
fbstp
xchg
jmp
lcall
xor
sub
popa
sbb
add
and
jnp
mov
sub
ss
sbb
mov
jge
loop
dec
jbe
loope
pop
lretw
mov
cltd
jnp
push
sub
adc
pop
mov
cmp
xor
rolb
pop
daa
dec
jne
arpl
adc
dec
jge
repnz
jg
cs
mov
popa
adc
test
orl
mov
and
xor
pop
fsubrl
jle
push
sub
pop
sub
pop
outsb
fs
cmp
loop
xor
mov
pop
jne
arpl
push
cmp
xchg
sbb
ss
mov
jle
shlb
mov
ret
into
mov
cltd
jmp
push
pushf
jl
aaa
jle
into
test
mov
xor
out
xchg
adc
insb
and
jmp
jne
das
pop
sti
xchg
push
inc
and
mov
sbb
mov
pop
incl
in
pop
leave
rcrb
mov
adc
test
sbb
mov
negl
pop
fstl
popa
push
and
xchg
dec
sub
rcrb
xor
fidivl
pop
jle
sbb
mov
call
mov
inc
ds
cmpb
scas
sbb
lahf
stc
mov
ret
ror
and
mov
add
lock
inc
mov
or
das
fldenv
fidivl
ret
lods
add
mov
xchg
adc
xor
mov
loopne
inc
lahf
shll
push
stos
push
arpl
fmull
addl
in
push
ljmp
cmp
ffreep
sbb
xchg
dec
mov
mov
bound
or
mov
pop
fnstenv
cmpl
fs
ds
add
out
push
movsl
repnz
enter
ret
or
pop
lret
arpl
sbb
daa
sti
mov
pusha
js
xchg
popa
cmp
std
jns
mov
arpl
mov
mov
loopne
sub
stc
push
push
ret
jno
scas
fstps
pop
add
into
mov
insb
cmp
jae
push
jnp
pop
sub
insl
fistl
inc
scas
bnd
mov
shrb
ret
pop
jge
jb
and
dec
mov
sub
pop
xchg
mov
mov
dec
pop
pop
fcoml
sti
hlt
mov
xor
cmp
cld
mov
jge
jns
insl
lods
mov
xor
insl
jae
mov
cmp
xor
in
rcl
mov
cmp
jecxz
sbb
mov
je
enter
rcrl
or
sub
aam
data16
faddl
imul
sti
xchg
sub
and
aam
or
outsl
cmp
in
les
fsubrs
mov
mov
mov
cmp
dec
bound
insl
dec
movsb
mov
pop
outsl
cmpsb
shrl
pop
pop
sub
dec
fdivrl
dec
cmp
dec
push
jbe
popf
movsl
push
jg
andb
jbe
arpl
jbe
ror
orl
mov
jg
push
rolb
insb
inc
add
mov
int
mov
cmp
scas
add
mov
stos
mov
sub
leave
mov
cmpsb
fs
jg
popf
xorb
sbb
sbb
pop
xchg
xchg
stos
sarb
test
dec
or
adc
jle
test
div
es
dec
mov
ja
pop
pop
xchg
hlt
mov
jle
dec
cmp
flds
scas
cs
cwtl
jno
xchg
lea
mov
ss
std
push
jg
jae
iret
lea
stos
jno
fcmovbe
or
lret
lret
mov
sbb
repnz
shlb
sub
xchg
ss
mov
xor
jp
test
mov
and
dec
xor
fimuls
pop
notl
push
pop
adc
mov
shl
sub
sub
filds
out
xchg
daa
mov
adc
mov
aad
inc
das
add
arpl
cmp
out
sbb
cld
jnp
sarl
jno
cmp
movsb
push
xor
inc
loopne
cmp
hlt
mov
lods
mov
out
lcall
xchg
in
call
into
popf
jae
mov
movsl
fimuls
je
jg
sbbb
mov
ja
jg
fsts
jo
dec
mov
pop
ja
inc
adc
push
mov
push
jb
adc
push
mov
ret
sti
or
addr16
int
cwtl
add
arpl
icebp
fs
xchg
shlb
and
cmp
mov
repz
add
out
popf
pop
xchg
mull
mov
pop
cmc
inc
jmp
sbb
add
inc
inc
sub
in
jnp
jns
shlb
sbb
imul
xor
jne
test
and
sub
add
mul
mov
and
xchg
js
bound
or
xor
push
dec
rorl
ret
jnp
push
in
xchg
jnp
stos
push
in
sbbb
mov
push
sbb
sub
fwait
xchg
imul
popl
sub
mov
loop
out
adc
pop
inc
xchg
addr16
nop
arpl
scas
dec
inc
negb
cmp
in
push
or
pop
cmp
loope
and
rol
or
inc
or
mov
fabs
push
jmp
sub
push
mov
mov
mov
and
fdivrl
push
das
sbb
add
in
xchg
out
adc
ljmp
fisubs
xchg
loop
pop
ja
xor
lcall
and
nop
push
and
popa
add
sub
sti
push
or
xchg
cmpsb
and
ja
data16
push
dec
xchg
mov
insl
mov
pushl
push
add
out
mov
xchg
call
scas
movsl
mov
and
hlt
xchg
adc
hlt
inc
ja
les
scas
imul
pushf
push
cmc
sub
jb
inc
andb
mov
inc
movsl
fwait
lahf
sub
adc
neg
cli
fisubs
imul
push
mov
pop
lds
repz
or
and
ds
in
loope
or
bndldx
adc
aaa
inc
jle
iret
outsl
dec
jmp
pop
xchg
push
sbbb
test
and
mov
test
fdivrs
sub
stc
aaa
and
mov
enter
adc
stos
ret
xor
xchg
mov
ret
pop
mov
fwait
pop
cld
mov
es
inc
movsl
in
pushf
insb
mov
aas
scas
and
jecxz
adc
int3
sbb
pop
lret
repnz
insb
aam
pop
dec
or
add
or
loope
cmp
call
xchg
arpl
inc
out
movsl
inc
data16
insb
lcall
aaa
inc
in
mov
jl
into
jle
pushf
pop
push
mov
dec
add
jnp
sub
pop
imul
fmull
jl
popf
sub
daa
test
mov
push
mov
xor
inc
sbb
test
jo
mov
pushf
adc
cwtl
push
sbb
mov
dec
test
add
ret
leave
jae
pop
jno
nop
push
js
insb
pop
push
ss
iret
sahf
sbb
mov
cld
cmpsl
jo
add
ficompl
fisubs
or
cwtl
mov
dec
sbb
push
scas
out
rclb
sbb
cmp
stc
adc
sbb
xor
fimull
adc
push
out
mov
xor
xchg
sbb
jno
cmpsl
xchg
xor
bound
xlat
cmp
fsubrl
loope
sub
xchg
aad
mov
push
std
dec
ret
or
aaa
fistpll
test
dec
ds
mov
addb
dec
in
popa
orb
xchg
push
adc
inc
and
repnz
adc
sahf
cmpsl
dec
movsb
outsl
ss
sub
xor
dec
das
add
add
sti
scas
adc
xor
and
jecxz
scas
sbb
fucomp
xchg
pop
sub
loopne
clc
inc
vunpcklps
xchg
fcmovu
pop
in
or
lods
mov
dec
in
adc
jecxz
mov
loopne
fdivs
sbb
mov
add
ret
cwtl
xor
nop
mov
cld
idiv
insb
mov
push
enter
pop
inc
push
sub
inc
int3
mov
dec
cmc
out
loopne
and
xor
in
arpl
mov
xchg
jo
pop
out
sbb
add
sbb
mov
mov
fmul
loop
ffreep
pushf
ja
incb
xchg
cmpsb
fs
ret
lea
mov
mov
inc
lret
sub
xchg
mov
je
cs
pusha
movsb
sti
cmp
sbb
insb
loop
add
push
adc
lds
fs
jl
xchg
into
add
cmc
dec
push
pop
pop
mov
cmp
mov
mov
mov
fnsave
clc
cmp
lcall
test
lcall
in
pop
cmc
mov
mov
push
sbb
jmp
sub
sbb
mov
cmc
xor
clc
mov
xor
sarb
icebp
mov
psubq
lds
aad
sahf
fcoms
push
adc
test
sti
imul
mov
jne
js
testl
mov
int
jno
xor
mov
or
add
orl
xchg
cmp
stc
outsl
xlat
and
xchg
bound
lahf
call
and
adc
jb
cmp
ret
sbb
fidivl
and
mov
test
jge
sub
movsb
addl
inc
mov
insb
iret
pop
mov
xor
dec
insb
xchg
dec
fiaddl
fnstcw
inc
jp
sbb
call
aam
xchg
pop
xor
mov
lds
push
jle
sub
sbb
xchg
push
pusha
pop
aas
sub
in
std
popf
or
pop
cld
and
popa
sub
push
jmp
nop
inc
gs
pop
ror
mov
push
idivl
dec
push
outsb
int
in
stos
cmp
dec
inc
xor
xor
jmp
xor
lcall
dec
mov
ror
mov
sbb
movsl
mov
mov
inc
shll
lret
movsl
sub
add
xchg
js
inc
ja
cwtl
les
movsb
fimull
push
inc
mov
adc
js
out
std
sub
out
cmp
sub
xchg
mov
dec
movsl
push
jge
bound
mov
out
push
movsb
addr16
mov
movsl
dec
ss
repz
movsb
lods
or
loopne
movsl
test
popa
mov
dec
cld
nop
in
dec
cmp
xor
incb
jns
push
inc
push
mov
jae
push
and
pop
lock
mov
imul
push
fwait
xchg
into
jmp
shll
dec
fnstsw
sbb
jmp
cs
pop
add
in
hlt
xchg
cmpsl
jne
sbb
ss
add
out
pushf
sub
mov
enter
or
bound
insl
test
sub
cwtl
mov
inc
outsb
or
sub
pop
add
ret
popa
adc
ret
cmpl
jo
nop
inc
call
pop
dec
or
shrl
sbb
pop
jle
outsb
iret
in
jo
es
push
xchg
cmp
ret
mov
add
mov
std
fsts
fsubrs
sub
xchg
inc
dec
inc
or
jnp
hlt
aas
cli
push
xchg
repnz
xor
push
in
mov
incl
dec
movsl
pop
cmp
xor
push
xor
sbb
fwait
out
sub
jmp
dec
fcompl
dec
jo
iret
outsb
pusha
stos
mov
add
mov
dec
ret
jne
adc
notb
out
jge
or
shl
add
adc
gs
fdivrs
push
test
cmp
enter
cmp
push
andl
dec
xchg
sbb
jo
xor
lods
imul
stos
stos
mov
es
jle
sar
ss
add
daa
jns
jae
mov
cmp
inc
ljmp
xchg
sbb
inc
out
out
xchg
mov
into
int
in
out
loope
jmp
rcr
pop
ljmp
push
test
insb
pop
je
pop
jp
in
sub
xor
xchg
cld
repnz
fisubs
repnz
ss
test
addr16
add
jle
pop
test
lea
sti
outsb
rcrl
out
in
in
cmp
inc
mov
cmpsb
ret
outsb
jnp
loope
mov
repz
jle
loopne
into
testl
jmp
sub
sahf
fstpl
xchg
movsb
sbb
jp
hlt
push
mulb
cltd
fdivl
mov
mov
call
jno
rcrl
lcall
je
aaa
pcmpgtw
or
pop
not
sub
push
mov
xor
jnp
popa
mov
std
cli
mov
adc
xchg
es
jno
lods
stos
inc
fstl
push
in
mov
jns
dec
nop
push
pop
xchg
fistps
pop
aam
push
in
inc
xchg
sahf
pop
dec
lea
call
sarb
clc
xor
popf
inc
adc
and
inc
pop
iret
push
mov
xchg
je
call
int
jmp
test
arpl
lds
clc
sub
sub
pushf
enter
pusha
inc
enter
add
add
cmp
mov
iret
rcrl
jle
shrb
sub
mov
shl
lods
test
stos
stc
cmpsl
fists
addr16
mov
inc
xor
inc
enter
or
mov
push
jp
ret
addr16
xchg
pop
popa
pusha
mov
sbb
push
sbbb
cmp
mov
sbb
jg
sub
pop
inc
mov
inc
and
pop
inc
hlt
sub
inc
leave
cmpsb
lahf
and
xor
insb
outsb
cmp
aas
inc
jne
and
cmpsl
sub
inc
mov
es
fstpt
mov
iret
das
cld
mov
push
pop
aam
sub
add
xorb
out
iret
pop
and
mov
psrlw
jmp
xchg
daa
sbb
stos
popf
add
inc
outsb
call
xchg
in
mov
fildl
loopne
cwtl
cmc
xor
xor
mov
or
ja
std
cmp
mov
loopne
add
fbstp
fidivl
pop
mov
and
les
scas
ficomps
adc
shlb
xchg
dec
add
sub
les
xchg
dec
les
mov
xor
cmp
inc
push
clc
mov
xor
pop
or
jecxz
popa
ror
inc
sub
ret
stc
mov
pop
jg
scas
leave
xchg
movb
xor
dec
xor
mov
mov
mov
mov
pop
testl
cli
dec
mov
cmp
push
mov
addr16
aad
stos
or
sub
xchg
aas
ss
pop
test
xchg
aaa
shl
dec
sahf
and
dec
mov
cmp
insl
and
mov
cmc
pushf
and
and
shll
sub
stos
cmp
icebp
or
sub
faddl
adc
dec
adc
jle
dec
sbb
inc
fisubrl
inc
iret
mov
movsb
pop
xlat
aaa
scas
fwait
mov
repz
mov
hlt
cmp
decb
sub
jp
lods
cwtl
fildll
xor
inc
and
sbb
sub
jmp
sbb
push
outsl
add
xchg
mov
int3
mov
inc
mov
pusha
call
nop
stos
lahf
xchg
aad
test
js
push
pop
push
fwait
out
movsl
ret
push
orb
mov
push
add
cmp
fiadds
sbb
mov
iret
clc
ss
mov
roll
into
sub
pusha
fisttps
lds
mov
aaa
js,pn
pushf
repz
xchg
inc
fisttps
lock
push
inc
jmp
fs
int
mov
dec
jecxz
ds
adc
sub
test
sub
jnp
bnd
lods
dec
inc
cmpsl
cmp
sbb
xlat
shll
fidivrl
push
dec
aad
into
jg
pop
xchg
and
cmpsb
mov
add
int3
cmpsb
imul
dec
hlt
lret
push
sti
mov
xor
adc
adc
jo
test
jnp
jnp
mov
mov
cltd
or
mov
jbe
out
repnz
mov
sar
popa
lea
lods
inc
push
inc
dec
mov
fisttpll
push
int
jo
je
in
jnp
nop
push
inc
mov
clc
dec
bound
xchg
fdivs
imul
push
fs
test
cmc
adc
imul
sbb
or
sbb
ret
das
loop
daa
mov
jmp
xchg
int3
xor
movb
seta
sub
testl
xchg
push
push
jmp
mov
cmp
mov
clc
movsl
push
xchg
adc
push
in
pop
cmp
in
pop
inc
aad
cmp
cmp
in
jmp
mov
out
sub
inc
std
loope
popa
ret
push
push
add
rorl
ret
aaa
data16
fsubp
sahf
sub
movsl
fsts
rorl
jp
int
out
arpl
mov
pop
cmp
push
pop
push
hlt
mov
pop
test
pop
sbb
inc
add
divb
cmp
cmpsl
adc
dec
push
jecxz
push
cmpsl
lock
jno
cltd
inc
lock
les
cmc
nop
cmp
dec
xor
sbb
and
insl
or
xor
dec
pop
push
inc
cmc
js
mov
or
lea
push
dec
insl
enter
mov
adc
les
fmuls
fisubs
iret
je
jae
fadd
adc
mov
test
in
imul
sbb
jp
push
jl
or
cmpsl
cmp
outsb
push
jge
dec
inc
in
and
pushf
adc
dec
push
xchg
scas
and
cmpsb
xlat
inc
aaa
in
cmc
ret
sub
mov
pop
cwtl
inc
xor
test
add
mov
aad
or
leave
lret
sbb
rclb
repz
pop
ret
out
cmp
jge
cmp
mov
test
mov
or
pop
sub
mov
jg
add
test
fimull
test
repz
loopne
daa
and
leave
mov
fcmovb
ds
add
xor
mov
fildl
or
mov
scas
mov
pop
rorb
mov
in
les
xor
cmpsl
dec
gs
or
cmp
jnp
jp
pop
sbb
dec
ss
dec
lahf
push
or
xor
and
inc
mov
jns
xor
divl
icebp
mov
mov
fildll
cmp
ljmp
mov
ficoml
mov
jmp
call
sbb
js
xor
sub
and
jnp
lret
bound
cmpsl
adc
xchg
fwait
sub
sahf
lcall
knotw
jmp
cld
mov
add
adc
add
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
andl
push
adcl
mov
andl
xor
push
neg
mov
subl
add
mov
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
sbb
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
mov
mov
sbbl
xor
mov
sbb
add
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
sub
lea
orl
xor
subl
xor
cmp
je
inc
mov
addl
xor
xorl
add
movl
cmp
jne
xorl
pushl
call
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
add
and
mov
mov
addl
mov
notl
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
ja
test
mov
testb
leave
jp
fstpl
jp
mov
ljmp
sub
push
mov
adc
xor
clc
jge
sbb
in
ret
into
ja
xchg
dec
mov
clc
enter
sbb
inc
das
inc
xor
pop
push
and
push
shrl
and
sti
add
pop
and
ss
xchg
push
pop
or
iret
insl
inc
movsl
ss
pop
int3
popf
in
pop
mov
int3
inc
sar
push
mov
or
out
dec
stc
stos
mov
sub
xor
mov
cmp
mov
adc
xorl
test
cmc
fimull
std
sbb
test
in
xlat
or
inc
pop
mov
ret
or
cmp
sbb
mov
out
sbb
adc
add
dec
imul
adc
movb
lret
or
jb
push
lea
pop
jo
std
push
stos
and
pop
gs
std
dec
test
nop
or
sbb
cmp
mov
cmpsb
mov
mov
sahf
aaa
add
dec
add
daa
sbbb
sbb
icebp
in
in
stos
loope
test
test
mov
xchg
dec
or
sbb
mov
push
dec
fsts
outsl
push
push
sbb
out
mov
imul
xchg
xchg
sbb
jmp
popa
mov
sti
popf
sbb
push
inc
push
fmuls
dec
or
or
shl
sub
jmp
sbb
rorl
adc
adc
stos
push
jnp
xor
push
pop
jae
jg
ds
lods
mov
fiadds
add
dec
and
in
push
out
lea
mov
in
lcall
shlb
inc
ffreep
daa
loop
ds
jbe
xor
orb
sub
out
push
jg
push
call
inc
lock
lcall
jns
shr
outsb
scas
inc
dec
repz
cmp
xchg
inc
or
test
or
xchg
in
mov
pop
mov
dec
mov
add
out
sbb
cmp
sbb
insb
popaw
and
xchg
push
arpl
or
mov
out
adcb
ss
mov
xor
jmp
jae
outsb
inc
xor
ret
mov
push
jecxz
dec
repnz
scas
cld
mov
filds
incb
lret
ss
mov
dec
fsub
or
sub
xor
cs
mov
mov
push
sub
dec
sahf
js
addr16
or
daa
jle
xchg
jg
xor
js
and
in
dec
add
ljmp
inc
push
pop
dec
rcrb
xchg
shr
or
repz
push
jp
fwait
ds
pop
jae
aas
outsl
and
fisubs
loope
adc
das
out
sbb
je
in
popa
pusha
fisttps
xor
and
sub
aam
mov
cmc
sbb
int
sub
mov
cld
sub
scas
in
test
in
jne
jns
lods
lret
cmc
cmp
sbb
inc
ret
pop
aad
cltd
push
faddl
sbbl
sbb
xor
lret
mov
shr
js
movsb
jg
lcall
mov
jne
int3
daa
lock
lods
mov
push
lock
pop
mov
shl
call
xchg
and
push
cmc
dec
sbb
movsb
xchg
sub
imul
mov
dec
in
popf
jne
subl
repnz
jmp
gs
imul
mov
add
pop
mov
dec
shl
cmpl
sub
outsb
sbb
inc
mov
mov
xchg
pop
nop
enter
ljmp
push
in
mov
ret
xchg
jmp
adc
inc
fcomp
mov
pop
insb
jbe
inc
mov
scas
stc
mov
dec
addb
les
fwait
js
clc
js
mov
jge
scas
sbb
push
dec
lock
mov
push
and
adc
popf
jae
fnstsw
cmpl
arpl
movsl
or
out
sbb
pop
inc
arpl
cli
int
in
inc
decb
aaa
adc
mov
repz
aas
shrl
adc
cs
jl
dec
fistps
push
and
adc
xchg
xchg
fisttps
pop
sahf
mov
jle
mov
lcall
sahf
add
mov
push
cmp
fisubs
out
mov
sub
sub
enter
jg
pushl
adc
repnz
push
jmp
mov
int
push
dec
fcmovne
add
out
xor
and
cs
lock
cmp
xor
push
das
mov
aam
push
enter
pop
es
out
mov
daa
out
and
push
andb
sbb
mov
dec
mov
mov
adc
cmp
xchg
mov
lods
sbb
repnz
mov
xor
adcb
cmc
jle
rcrb
aas
and
je
mov
rcll
ds
mov
in
test
out
pop
pop
mov
xchg
add
fldcw
jp
shrl
inc
pop
xchg
or
out
aad
sbb
mov
popf
mov
cwtl
push
insl
or
xchg
dec
mov
out
fisttpl
subb
testl
outsl
push
popf
push
imul
aas
cli
ds
sbb
mov
cmpb
and
jp
mov
fsubp
pop
jns
popf
std
jb
test
pusha
xor
outsl
fsub
sahf
xchg
jns
inc
das
into
sbb
push
mov
incb
push
fucomip
xchg
filds
push
cmp
lret
nop
mov
fwait
ds
repz
xor
xor
xchg
add
lock
decb
pop
jnp
dec
lea
pop
daa
mov
fcomi
mov
and
in
push
push
and
add
das
sbb
mov
jg
mov
sbb
mov
pusha
mov
aas
mov
ret
rclb
cmpsb
ret
stos
rorb
push
mov
and
leave
mov
bound
xorb
xor
pop
test
das
mov
add
dec
xchg
cltd
insb
daa
lahf
lock
bound
inc
jle
sub
mov
leave
leave
adc
std
ret
je
ja
loop
lahf
jl
or
jb
mov
mov
nop
jecxz
push
outsb
mov
dec
stc
arpl
push
mov
pop
das
stos
or
jge
shrb
pusha
ja
mov
add
or
inc
or
pop
push
pusha
adc
in
and
fnsave
jbe
fmul
or
clc
cmp
push
lea
jecxz
cmp
pop
pop
jnp
int
movsl
arpl
sbb
and
or
fdiv
jmp
or
dec
jb
pop
fucomi
jle
lcall
les
inc
cmp
jge
aaa
scas
mov
mov
into
repnz
mov
pop
stos
xchg
dec
and
test
imul
int
or
mov
pop
pop
pushf
shr
sbb
push
xchg
push
or
pushf
dec
xchg
adc
imul
pushf
cmc
mov
pushf
push
loop
data16
jnp
rclb
ljmp
add
jge
cli
jp
cmp
mov
or
adc
adc
ljmp
rclb
pop
int3
mov
or
fbstp
mov
loopne
adc
mov
call
sbb
xchg
hlt
mov
jp
mov
or
mov
negl
mov
dec
loopne
jnp
and
push
mov
cmp
mov
dec
cmp
push
pop
ljmp
dec
mov
mov
pop
xorb
ja
sub
in
sub
aam
mov
sbb
les
cmp
add
orl
mov
adc
loop
into
add
popa
push
sub
mov
push
js
ds
sbb
jns
or
mov
mov
mov
clc
std
test
mov
inc
test
push
mov
sbb
dec
add
jb
pop
push
test
inc
in
aad
insl
daa
sub
xorb
fimull
pop
clc
dec
dec
lock
inc
mov
je
stc
std
iret
cli
and
fidivrl
insb
es
dec
push
in
cmp
adcl
popf
mov
xchg
insb
lret
dec
std
out
addr16
lahf
fistl
dec
xchg
ss
fildll
xchg
call
pop
sub
cmp
call
or
sub
nop
mov
sub
mov
fsub
sbb
into
cmp
pop
rcrb
sub
ds
mov
mov
inc
inc
outsb
mov
pop
push
orl
cmp
aaa
or
fisubl
loope
mov
or
push
xchg
add
pop
fs
fsubp
dec
lret
pop
adc
enter
sbb
out
mov
sbb
fwait
outsl
push
mov
test
mov
mov
inc
pop
mov
sub
aad
mov
inc
jne
lahf
clc
ret
sub
repz
mov
adc
je
or
insl
mov
insb
sub
xor
outsb
or
in
xlat
push
lds
fs
dec
fnstenv
mov
cmp
xchg
mov
mov
dec
das
adc
cmpsl
and
jno
ret
mov
enter
add
pop
xor
cmp
xchg
mov
lret
adc
ror
rorl
jb
cmc
insl
xchg
andb
imull
insb
xchg
pop
cmovns
pop
mov
dec
ss
jecxz
xorb
aaa
push
ds
mov
xlat
pop
jmp
stc
push
cmp
mov
jle
mov
popf
negl
inc
pop
cmc
mulb
lock
push
data16
pop
cli
ja
repnz
xor
fldt
imul
jge
cli
cmp
or
sub
fildl
mov
dec
ds
ds
out
inc
jb
pusha
dec
dec
dec
lahf
xchg
xchg
sbb
aad
leave
enter
mov
dec
push
sub
mul
push
fistl
outsl
cmp
loope
into
and
mov
mov
enter
arpl
push
insb
fwait
andl
mov
push
jb
fimuls
lods
lahf
push
cmp
adc
fwait
mov
jmp
lds
cmc
ljmp
jnp
out
cmp
push
and
dec
rcl
dec
fcmovu
adcl
cmovne
jb
out
cmp
pop
psubusw
cld
lea
adc
inc
mov
pop
bound
pop
enter
cmp
outsl
cmc
pop
cmc
pop
cld
dec
bound
pop
mov
rorb
pop
setle
mov
mov
in
mov
andb
mov
addl
pop
stc
lock
fisttpl
and
adc
movsb
push
out
ds
xchg
add
xor
jp
cmp
xor
ss
sahf
mov
push
in
sub
pop
push
mov
stos
jle
jl
aad
mov
andl
push
test
xor
jno
fists
imul
mov
mov
mov
repz
inc
std
jg
leave
xchg
outsb
fildll
out
add
loopne
jecxz
popf
dec
loop
fnstsw
das
xor
movsb
dec
mov
or
stos
daa
loopne
cmp
adc
sbb
xchg
push
lret
jnp
pushf
mov
xor
and
xchg
pop
mov
push
pop
and
aad
mov
jge
sbb
out
mov
push
loopne
mov
daa
xchg
pop
inc
mov
jp
xchg
jp
push
repnz
mov
or
mov
mov
fldt
mov
jne
aam
push
ljmp
or
fstps
cli
or
cmp
repz
xor
sub
mov
mov
jns
or
cwtl
movsb
sub
je
lea
mov
imul
jl
mov
cmpsl
inc
mov
mov
mov
ds
sub
ret
outsl
sbb
pushf
clc
bound
testb
stos
jecxz
or
shll
clc
aaa
test
xor
lret
jb
inc
daa
mov
std
aas
std
cmpsb
scas
sbb
fimuls
outsl
xlat
add
push
fists
pop
out
arpl
call
pop
jae
test
cmc
out
or
mov
xchg
push
jmp
jmp
cs
loop
jae
andl
adc
out
mov
xor
gs
movsl
dec
lcall
scas
aad
push
and
andb
pop
into
dec
and
inc
adc
divb
sub
scas
and
xchg
cmpsl
les
mov
push
adc
jmp
xchg
sbb
xchg
insl
cli
sub
or
out
add
mov
pop
dec
movsl
ljmp
sahf
adc
daa
scas
push
insb
aad
loope
mov
xor
in
mov
lea
sbb
push
mov
push
or
out
add
add
dec
out
ja
stos
gs
jge
aam
cmp
loop
mov
inc
repz
ficoms
popf
cmpsl
mov
jbe
sbbl
xchg
rcll
sarl
jecxz
inc
fsubrl
jg
add
pop
and
inc
int3
pop
jp
sarb
xor
xor
popa
movsb
add
mov
test
dec
scas
sti
jae
fidivrl
ficompl
add
iret
pop
xor
adc
nop
scas
pushf
inc
sbb
popf
into
popf
xor
inc
and
jl
adcl
fsubrl
rcrb
ja
fisttps
cmc
data16
xchg
cltd
loope
neg
adc
adc
adc
push
jg
es
mov
adc
shrb
sub
shll
in
mov
sbb
inc
sub
jmp
xlat
gs
rorb
cli
fcmovb
shrb
xchg
xchg
jmp
mov
leave
fistpl
loope
popa
adc
lds
inc
mov
dec
and
ds
out
fcoml
daa
mov
sbb
stos
mov
cwtl
pop
sbb
sub
orb
sub
iret
and
mov
popa
cmp
mov
shrb
int3
sbb
sub
insl
cltd
pushf
not
xor
and
pop
ret
fidivl
dec
jle
mov
adc
shrb
inc
adcb
jno
push
mov
nop
push
jmp
fsubl
shll
loope
and
add
adc
hlt
pmaddwd
push
inc
movl
inc
repz
lcall
in
rcrb
lock
inc
add
mov
stos
into
inc
vpxor
mov
xchg
cltd
imul
iret
sar
sbb
fdivrl
cld
inc
mov
in
cmp
faddl
mov
ss
mov
loope
sub
movsb
fldcw
and
out
pop
push
sub
and
rol
leave
aas
add
sbb
and
pop
fldl
pop
cld
sbb
lea
shll
int3
ficomps
into
sbb
js
xor
pop
dec
mov
jnp
in
add
clc
mov
jno
cmp
icebp
xor
dec
mov
subb
imul
push
je
ljmp
sahf
mov
dec
lds
and
xchg
inc
test
lret
xchg
lea
mov
cmp
mov
dec
jnp
inc
xchg
aad
push
pop
int
daa
add
adc
out
jle
or
and
mov
aad
add
jge
adc
cmpl
add
inc
cltd
aas
test
orb
push
bound
orb
ret
or
jns
mov
shr
sbb
mov
lods
sub
dec
xchg
jno
xchg
lods
adc
add
popf
xchg
into
jmp
out
fisubrl
pusha
out
mov
mov
and
pop
movsl
cmc
dec
pop
popf
cli
or
mov
je
add
sbb
lods
bound
enter
dec
add
loopne
sub
mov
ljmp
cld
ja
push
push
insb
int3
lret
push
js
mov
fmull
xlat
jge
or
movsb
xchg
sbb
mov
fucomip
jge
mov
popa
idivb
stos
mov
in
call
fildl
cld
mov
mov
scas
push
sbb
outsl
jmp
xchg
add
in
and
mov
pop
xchg
jne
pop
insl
daa
daa
pop
or
nop
ljmp
add
pop
outsl
inc
cmpsb
or
jg
xor
push
test
movsl
sbb
lcall
pop
out
lock
sub
pop
or
jecxz
imul
cmpsl
xchg
outsb
test
js
imull
cmp
pop
stc
pandn
aaa
xchg
ret
adc
jnp
cmp
loope
adc
cmp
test
adc
lcall
pop
cmp
leave
cmp
fdivrp
test
add
mov
pop
lods
sub
mov
push
je
xlat
and
sub
stos
ret
insl
dec
lcall
daa
mov
jo
lods
test
subb
jbe
daa
insb
pop
shrb
sub
mov
adc
xor
aaa
out
nop
pop
mov
sbb
jmp
fcompl
lret
cmp
jne
adc
cs
xchg
loopne
cmp
hlt
cli
inc
jp
arpl
ret
loop
push
sahf
ja
out
out
xor
cmpsl
popa
jle
cmp
sbb
dec
mov
push
mov
scas
jb
cwtl
imul
fcomip
jae
sbb
lock
aad
and
pop
jl
push
fbld
jne
mov
jmp
scas
add
dec
lock
pop
stos
xchg
mov
aad
mov
stc
lret
adc
push
and
pop
add
push
mov
imul
sub
xorb
lock
out
test
xchg
and
dec
pop
stos
mov
movsl
movsb
sub
mov
fstpl
adc
add
mov
push
and
add
sub
pop
adc
ret
or
push
mov
add
ret
inc
mov
pop
pop
inc
lahf
sahf
addb
xchg
add
cmc
add
jb
sbb
fidivs
mov
sbb
dec
fidivrs
inc
lods
push
mov
and
sbb
ja
jb
ljmp
mov
sti
mov
into
out
xchg
das
add
push
and
scas
ret
adc
es
pushf
mov
sub
imul
sbb
aas
out
shll
jb
mov
jae
mov
call
jo
insb
xchg
sub
push
sti
mov
pop
cmp
aam
xchg
dec
jge
mov
jb
fdivrp
xlat
and
out
push
sub
les
push
in
xor
out
out
xor
scas
adc
push
rorb
adc
inc
mov
sbb
jl
xchg
in
push
loop
sahf
sbb
vshufps
std
and
aad
ljmp
xor
push
xchg
cmp
out
cmpl
jge
sub
sbb
inc
add
insl
out
sbb
inc
inc
out
in
je
adc
lret
or
mov
lods
mov
adc
cmp
jno
push
into
cmp
jns
fdivrl
lock
jns
mov
mov
lea
sub
and
mov
pop
aaa
mov
jbe
jno
and
das
mov
or
ljmp
mov
mov
and
push
insb
dec
or
mov
adc
xchg
in
ljmp
dec
mov
push
aaa
sub
xchg
call
lret
iret
add
sub
inc
sbb
dec
shl
enter
fsubrl
in
shlb
jmp
pop
subb
xchg
sbb
lods
scas
xchg
in
push
xchg
add
mov
and
mov
and
push
xchg
push
and
push
inc
mov
pop
sub
addr16
sti
aas
icebp
fucomip
cmpsb
loopne
lods
inc
adc
filds
adc
daa
in
mov
push
jmp
lahf
aad
mov
divb
lahf
mov
dec
jns
shlb
lds
out
lcall
imul
popa
or
sub
adc
mov
leave
xor
dec
inc
push
xchg
jns
cmp
fldcw
stos
jbe
mov
test
hlt
push
and
adc
test
push
ret
scas
sbb
sbb
xchg
movq
xor
push
jg
xadd
std
mov
filds
int
mov
inc
addb
aad
lahf
out
pop
jne
xor
lea
lock
push
xlat
pop
or
ret
mov
cmpsl
pop
adc
mov
addb
xor
xchg
inc
stc
inc
mov
pop
mov
into
imul
mov
mov
shrl
iret
aaa
jp
xlat
xchg
jle
mov
clc
dec
mov
sbbb
mov
mov
mov
pusha
pushl
mov
push
ret
jmp
sub
cmc
jl
and
mov
fsubl
movsb
jnp
and
inc
cmp
mov
jb
jg
pop
rcl
stc
inc
jle
cli
xor
pop
cmp
inc
cwtl
mov
add
or
mov
jge
sbb
mov
ja
mov
int3
jo
mov
jmp
or
imul
mov
lds
mov
sbb
mov
pop
dec
jecxz
lret
ss
ret
mov
mov
cmp
call
sbb
mov
fdivl
cmpsb
mov
xchg
xchg
or
mov
cld
sbb
mov
sub
fmull
stos
dec
repz
lock
adc
mov
push
pusha
js
jle
cmp
outsl
or
lods
sbb
loopne
call
xlat
cmpsb
sub
cltd
shlb
xchg
int3
outsb
push
test
push
jae
xor
and
mov
in
adc
shlb
in
cmp
je
push
stos
jmp
adc
or
test
cmpsl
xchg
jle
out
cmpsl
fiaddl
mov
das
cmp
dec
leave
mov
mov
dec
in
xchg
sahf
mov
cmp
mov
fcoms
test
out
movsl
sub
roll
cwtl
cmp
sub
stc
xchg
out
or
push
imul
fistpll
jmp
xchg
std
fcompl
or
xchg
arpl
jmp
into
and
push
xchg
enter
lods
push
enter
mov
mov
mov
or
xchg
icebp
jge
push
mulb
sbb
insl
out
mov
pop
pop
fucomi
dec
inc
push
insl
sbb
stos
ljmp
push
adc
mulb
mov
xor
rorb
stc
aaa
pop
jp
push
lock
adc
adc
cmc
cmp
fs
or
lret
dec
and
cmp
cwtl
sbb
adc
in
loopne
inc
push
sub
add
and
cmp
loopne
or
int3
xchg
inc
imul
push
lods
fiaddl
arpl
sarl
test
pop
cmp
add
adcl
jmp
scas
pop
fstl
or
push
mov
pushf
xchg
xor
pop
stc
xchg
mov
subl
icebp
mov
scas
mov
aas
scas
dec
mov
sub
and
xchg
call
mov
cmp
push
out
shlb
repz
inc
xor
dec
bound
iret
mov
adc
push
lahf
inc
dec
jle
add
add
in
movsl
jmp
rcrb
mov
shr
inc
inc
adc
in
fcomps
sub
and
lock
es
adc
mov
xchg
jns
neg
jg
ss
out
dec
fs
xlat
push
jns
cmc
inc
inc
push
hlt
xchg
jge
sahf
out
add
rcl
int
mov
adc
dec
neg
adc
sub
mov
inc
cmp
shll
outsb
sbb
imul
ret
pop
lret
out
mov
jmp
mov
test
adc
aaa
pop
cmc
dec
cmp
mov
in
lea
dec
aam
inc
and
nop
xor
cmp
jbe
xor
xchg
mov
mov
jns
sub
xor
or
out
push
imul
adc
jnp
cld
rolb
rcrb
inc
push
pop
jg
sub
xor
mov
ljmp
fbld
mov
int3
xchg
aaa
cmpb
add
add
cs
pop
xor
sbb
push
imul
cli
pop
and
pusha
addl
shll
scas
int
ror
sar
sti
push
arpl
aaa
fsubrl
pop
dec
lret
pop
jmp
xor
aas
xchg
add
push
fimull
stc
pop
xchg
pop
in
dec
mov
adc
lock
divl
pop
incl
cwtl
push
push
dec
mov
shr
sub
xlat
out
inc
idivl
clc
dec
push
xor
push
out
sbb
loope
inc
push
jmp
sub
leave
push
jmp
out
mov
cmp
addr16
je
xchg
loop
or
dec
jno
pop
test
movsl
cmovge
xchg
sahf
dec
cmpsl
sub
push
pop
or
and
mov
and
in
ret
dec
mov
dec
pop
xchg
mov
sub
movsb
push
cmc
fdivp
pop
add
movsl
mov
dec
push
roll
cltd
std
fstps
int3
std
add
fildll
or
xor
arpl
ds
stos
ljmp
and
push
int
dec
std
addr16
mov
mov
int
les
pop
pop
cld
pop
ficomps
mov
or
cmpsb
inc
push
lret
dec
pusha
imul
or
iret
popf
arpl
mov
pop
pop
push
jb
inc
and
out
loopne
hlt
cwtl
shrl
inc
sbb
sti
cld
movsl
xlat
lock
imul
pop
dec
mov
clc
push
call
andl
dec
jg
dec
jge
inc
insl
push
in
shlb
lods
dec
jns
adc
or
outsb
mov
jbe
leave
add
mov
adc
lcall
aam
iret
shlb
adc
out
out
scas
and
push
or
in
jmp
out
jbe
push
stos
cmpsb
jmp
popf
mov
inc
mov
lds
adc
inc
and
enter
lahf
nop
imull
mov
out
ret
push
xorl
sti
mov
sub
ljmp
idivb
sarl
sub
test
rcll
push
test
pop
icebp
jmp
fcoml
rclb
xchg
mov
imul
xor
lret
das
sub
jo
sub
cmpsl
jmp
and
nop
lahf
rcrl
mov
popa
sti
jnp
dec
aad
aad
pop
stos
add
and
andb
pop
sub
jne
ss
cltd
add
add
stc
fstps
cmp
sub
faddl
into
gs
sahf
sub
dec
and
inc
insl
in
pusha
ret
popa
andb
adc
cmp
push
bound
xlat
lea
or
pop
mov
lret
mov
stos
and
popf
mov
movsl
sar
sub
fildll
sub
outsl
inc
inc
mov
jb
mov
enter
mov
or
in
inc
cwtl
mov
fidivrs
adc
mov
leave
andb
int
or
cmp
lock
adc
mov
mov
push
adc
lcall
jb
adc
xor
xlat
pop
xchg
mov
sub
pop
xchg
mov
je
leave
sbb
xorl
sub
ja
mov
pusha
mov
cmpl
out
and
add
lods
mov
outsl
sub
jnp
mov
and
and
adc
ss
jge
insl
mov
xchg
jmp
push
push
fistpll
call
push
loope
or
test
jge
dec
movsb
add
or
sbb
cmpsb
out
das
mov
sahf
subl
mov
inc
or
and
jle
adc
mov
cmp
test
pushf
add
pop
mov
insl
in
in
mov
out
stc
inc
out
cs
mov
xchg
out
push
dec
mov
jmp
gs
sbb
test
or
xchg
pop
jecxz
add
cmp
outsb
dec
in
loope
or
test
xchg
into
cmp
imul
rcll
ja
pop
xchg
dec
pop
sbb
sbb
push
stc
test
cmpsb
push
rcr
addr16
outsl
sbb
notl
adc
or
add
shrl
mov
mov
stos
adcl
dec
dec
daa
pop
push
adc
cltd
stc
push
les
add
stos
jnp
sti
dec
push
stos
adcb
pusha
pop
push
arpl
in
or
jae
inc
mov
xchg
decl
inc
fmull
add
cltd
mov
mov
loopne
ret
fsubl
push
mov
pop
mov
or
stos
pop
das
sbb
push
fcoml
push
call
dec
fistps
stos
pop
fdivr
jge
pop
mov
adc
fsub
pop
mov
mov
pusha
mov
loop
dec
inc
jno
pop
pushf
pop
leave
loope
mov
jo
mov
pop
xor
insl
push
add
add
xchg
ss
dec
into
jnp
jno
adc
repnz
outsb
daa
add
orb
push
or
jbe
ret
test
daa
mov
dec
sti
adc
dec
cld
pminub
mov
add
fwait
mov
adc
mov
sbb
test
xchg
pop
cli
or
sub
inc
movsb
mov
and
out
and
add
inc
js
or
jmp
pop
push
xchg
stc
mov
jg
jne
mov
loope
fidivs
bound
jno
push
clc
aaa
sub
outsl
xchg
sub
sub
cltd
aad
push
cmpl
movsb
shll
ljmp
add
pop
push
mov
mov
mov
addl
out
push
add
fsub
iret
cmpsb
repz
mov
fucomp
sub
aas
stos
push
lods
int3
daa
and
stos
cmpsl
dec
cmp
idivl
loop
mov
int
mov
inc
mov
mov
adc
sub
push
popa
ret
pop
lea
push
mov
xchg
sub
cmp
lahf
iret
or
aad
js
inc
sbb
lcall
jle
lods
scas
jp
lods
lock
pop
roll
in
mov
popf
call
sub
cmp
pop
push
jl
cwtl
cmpsl
add
lods
divb
add
cli
mov
jg
rcrl
and
dec
les
outsl
shlb
mov
sbb
lods
cmp
bound
add
loope
push
pop
leave
sub
stos
lahf
mov
mov
test
mov
leave
repz
xchg
add
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
sbbl
movl
andl
mov
mov
mov
addl
xor
xorl
add
andl
mov
and
mov
xor
push
mov
mov
adcl
add
mov
and
mov
sub
mov
mov
mov
movzwl
sbb
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
sbb
mov
or
movb
lea
movl
cmpl
je
cmpl
jle
jmp
push
pushl
call
mov
dec
mov
jmp
mov
adcl
mov
mov
xor
dec
addl
mov
and
movl
jmp
sub
call
ret
int3
pop
mov
jecxz
dec
fstpl
lods
jp
pop
pop
jp
sub
icebp
cld
jge
cwtl
popf
push
repz
in
lods
adc
call
sub
repnz
mov
fdivrp
xchg
inc
jecxz
xchg
js
sub
and
shl
loop
jns
stc
mov
mov
out
sub
mov
adc
cmc
pop
adc
andl
pushf
push
fimuls
or
fmuls
dec
incl
cmovp
inc
adc
pusha
or
nop
fwait
les
mov
and
bnd
inc
stc
lret
ret
inc
dec
fidivl
mov
mov
iret
add
mov
mov
xor
iret
push
mov
adc
sbb
adc
in
imul
and
push
sub
inc
fucomi
pop
ss
shrb
and
and
and
lret
xor
xor
rcll
push
lret
lret
lahf
movsb
mov
in
push
xor
fst
into
shl
sub
inc
mov
fsubp
testl
inc
jle
mov
and
int3
sahf
outsl
leave
add
fsubrl
insl
jecxz
add
fwait
shr
insl
test
int3
or
cmp
dec
cmp
icebp
sub
movsl
push
mov
xor
push
aad
sub
stos
lcall
mov
shll
pop
sbb
pop
pushf
call
cld
push
leave
xchg
mov
jbe
dec
add
jmp
xchg
insl
xor
addr16
stc
lret
add
lods
lds
js
call
push
lods
cwtl
std
push
ret
ret
xor
xchg
insb
mov
leave
xchg
cs
out
mov
inc
shlb
adc
sub
jne
mov
loopne
outsl
xchg
std
jg
call
lcall
sbb
loopne
mov
push
add
sbb
pop
jg
shlb
push
lret
push
cmc
inc
imul
scas
adcb
fiaddl
xlat
popa
lods
adc
cmp
xchg
lahf
sub
add
xor
insl
loope
jo
imul
imull
fmul
sti
sub
add
push
imul
sub
mov
push
loop
and
mov
lods
jmp
sub
stos
sub
cmpb
pop
outsl
out
mov
movsl
ret
push
ss
sbb
sub
and
lods
dec
addb
shll
mov
mov
dec
loopne
sub
icebp
xchg
cmpl
mov
push
mov
icebp
popf
xor
inc
or
sbb
cwtl
jbe
data16
mov
js
mov
push
mov
xor
sbb
cmp
push
sbb
bnd
repnz
push
mov
mov
pop
mov
mov
jl
ja
out
ret
adc
inc
push
ret
dec
mov
das
aad
js
out
pop
je
and
call
dec
dec
mov
sbb
push
push
fstpt
inc
stos
test
cwtl
cld
imul
cmovl
lret
shlb
inc
xor
out
lret
loop
or
jl
je
push
daa
mov
dec
jbe
aam
push
inc
bound
xor
clc
inc
add
subb
notl
and
add
mov
pushf
jl
das
xlat
push
push
xchg
lahf
xor
and
push
fsts
mov
inc
popa
push
into
das
add
nop
cs
mov
xlat
pop
sub
pop
sbb
outsl
cmpsl
xor
gs
cmp
mov
andb
vpmaddwd
movsl
insl
popa
shlb
mov
push
dec
test
movsl
imul
jb
mov
cmpsl
xchg
pop
mov
dec
test
lds
aam
subb
daa
lods
pusha
pop
jecxz
in
arpl
xchg
or
icebp
xor
pop
xor
es
xchg
mov
jle
mov
adc
mov
xchg
pop
mov
mov
xor
pop
or
clc
repz
ja
push
jnp
arpl
orb
es
dec
les
int
cli
je
mov
push
adc
ret
lods
mov
mov
lods
gs
leave
inc
inc
sub
xchg
adc
mov
aad
mov
xor
mov
sbb
dec
in
jno
repz
mov
adc
fwait
das
cli
jbe
movsb
outsl
mov
loope
and
or
mov
test
popa
xchg
in
sub
test
pop
jecxz
or
cs
xchg
lods
call
rclb
xchg
sbb
ljmp
dec
nop
dec
aas
pop
pop
mov
fldl
mov
lcall
divl
or
imul
ja
lock
mov
das
and
ror
lods
cmp
loopne
daa
addr16
pusha
jno
fldenv
dec
dec
pop
adc
xchg
jl
and
ror
push
arpl
in
es
pextrw
cmp
test
pop
pop
xchg
xor
movsl
or
cmpsl
lods
jp
loope
out
dec
daa
inc
xchg
mov
mov
mov
sbb
mov
pop
scas
pop
test
mov
dec
pusha
outsb
andb
les
mov
cmp
lds
jmp
cmp
sbb
loope
rclb
jle
pop
or
pop
or
pop
pop
movsl
out
dec
push
ss
adc
ds
cmpsl
jmp
push
sarb
sbbl
mov
test
pop
and
lahf
outsb
xlat
psllq
ljmp
xchg
test
inc
sub
add
inc
lahf
cmpsb
cltd
or
mov
pop
cltd
xor
js
xchg
lds
jmp
clc
iret
xlat
test
add
mov
push
sub
cmpsl
mov
jge
aas
movsb
cld
js
cmp
dec
xchg
lds
out
push
sbb
notb
repnz
in
inc
sub
or
mov
je
addb
adc
mov
movsl
xchg
aas
or
add
mov
xchg
leave
pop
pop
enter
add
out
cli
rcrb
inc
pop
stos
mov
cmpsl
add
xlat
or
push
lahf
xchg
stos
lods
cmp
mov
pop
or
and
push
xchg
lods
mov
dec
repz
int
jge
push
test
mov
in
jmp
dec
or
imul
test
xchg
jg
lret
je
cs
int
push
popa
inc
insl
mov
std
push
mov
das
sarl
pop
pop
lahf
es
gs
or
push
cmp
xchg
pop
insb
scas
lcall
mov
mov
pushf
rcll
dec
mov
cmpsb
subb
push
out
ja
hlt
int
pop
xor
pusha
in
cs
std
jge
lods
insl
cmp
aad
ss
jns
pop
clc
pop
imul
ret
or
popf
adcl
iret
xorl
iret
sub
sub
mov
loopne
enter
sbb
test
adcb
das
sahf
xlat
push
jp
into
mov
ret
aam
popa
scas
cmp
push
fsubr
add
fldcw
bound
iret
addr16
lods
dec
ds
xchg
jl
mov
add
stos
rol
out
test
dec
stc
sbb
loopne
inc
ljmp
int
cld
pusha
arpl
cli
mov
jnp
movsb
sbb
jmp
fwait
mov
push
adc
add
lock
mov
int3
arpl
inc
lods
xlat
jns
lods
jl
cs
cmp
lret
inc
add
xchg
bound
mov
xor
decb
mov
sbb
cmp
pop
int3
insl
lret
dec
insl
scas
cmpsb
imul
jns
dec
xchg
dec
test
scas
lcall
sub
add
dec
je
testl
sbb
rcrb
stos
push
and
sbb
rclb
dec
imul
lea
push
loopne
adc
mov
pop
std
imul
inc
enter
cs
adc
xchg
pop
int
jnp
call
jb
pop
outsb
jne
clc
jno
nop
cmp
fstpl
mov
loopne
cli
xchg
shlb
mov
jnp
xlat
mov
or
dec
sub
aam
stc
jg
or
test
nop
xchg
pop
xchg
push
xor
xlat
pop
sbb
mov
lds
mov
aas
cmpsb
xor
in
adc
cs
shll
decl
roll
popa
jbe
pusha
das
pop
into
iret
pop
cmpl
jmp
mov
lock
hlt
mov
fbld
adc
and
ret
aad
dec
mov
hlt
pop
push
pop
test
lods
dec
cmp
stos
sub
shlb
jb
out
pop
adc
sbb
loopne
stos
jecxz
jae
pusha
pop
shrb
push
sub
sub
push
movsb
pop
pop
lods
sub
sti
outsb
js
cmpl
jl
or
fnstsw
mov
sti
fcoms
cmp
les
adc
inc
mov
push
test
push
inc
push
cmpsb
fisubrl
out
jmp
loop
mov
aam
inc
push
popa
lea
icebp
ja
or
push
mov
mov
fstl
je
pop
out
sub
add
cmp
inc
ret
ljmp
and
xor
xchg
out
or
push
jp
aaa
call
push
negb
add
cmp
cmp
dec
sbb
int3
sub
or
es
push
loope
adc
outsb
movsb
arpl
xor
les
sbb
rorb
stos
jns
push
or
sub
scas
and
adc
sub
sbb
mov
xchg
jae
dec
cmp
sbb
or
aam
pop
pop
jecxz
cmp
jns
sub
out
mov
data16
int3
nop
int3
es
jae
jno
hlt
out
sub
cmpsl
lock
add
into
push
pop
fbstp
xor
push
adc
insl
sub
imul
jno
movsb
fwait
insl
lret
xchg
nop
inc
pop
dec
and
add
pusha
ret
sahf
sbb
cmp
add
into
test
jo
inc
movsb
in
pop
and
dec
push
and
xchg
pop
test
jo
and
jnp
sbb
jne
notb
fdiv
add
addl
jb
test
add
mov
repnz
jbe
fwait
enter
lods
cmp
fdivl
cmp
and
push
gs
sbb
pop
in
xchg
hlt
adc
ret
xchg
jne
mov
adc
inc
xorb
or
inc
mov
add
mov
push
pop
inc
leave
add
je
mov
daa
push
sbb
pop
cmp
inc
imul
dec
cmp
inc
inc
cmpl
mov
pop
faddl
xchg
cmp
jno
rol
mov
lahf
push
and
std
iret
inc
adc
mov
xchg
bound
sbb
xor
xchg
jle
adc
iret
jo
pushf
aaa
pop
pop
clc
push
into
xchg
add
test
cld
js
incb
pop
imul
inc
sbb
pop
subl
xor
in
cmp
imul
mov
ret
add
push
mov
mov
popa
mov
gs
dec
dec
jl
loopne
adc
jle
jne
push
pop
xchg
push
push
and
xor
roll
ljmp
xor
mov
imul
mov
js
ds
stos
or
jp
xchg
mov
jnp
repz
jecxz
jb
aaa
jge
xchg
enter
sbb
pushf
mov
jle
sahf
aas
xchg
test
shrb
cmp
stos
std
int3
rcrl
mov
int3
xchg
leave
xor
aad
jne
cmc
test
dec
pop
loope
sbb
sar
insb
adc
dec
jp
mov
or
cmpsl
sti
add
xchg
cmp
pop
rcrl
push
push
cmp
add
dec
xor
mov
clc
fdivl
das
push
mov
sub
sti
fidivl
xor
subb
out
mov
sti
ficompl
pop
inc
jp
jecxz
sub
pop
out
dec
inc
inc
fisubrs
roll
pop
inc
push
and
data16
push
inc
int
xor
mov
jnp
push
out
lea
pushf
cmp
hlt
int3
inc
dec
and
jle
inc
mov
mov
mov
or
mov
lock
dec
inc
sbb
push
sahf
icebp
pop
jno
add
pop
cmp
rcll
adc
push
enter
dec
dec
and
xor
push
mov
enter
push
rcll
call
add
cmp
aas
ljmp
fisttpll
jp
aam
mov
movsb
add
mov
fwait
mov
int3
push
lea
dec
stos
adc
xchg
sbb
push
mov
inc
pop
mov
gs
mov
inc
lds
lods
lds
popl
lret
insl
sub
mov
outsl
cld
outsb
jno
xchg
sbb
jmp
dec
stos
test
or
cmp
and
jbe
test
add
in
lcall
xor
je
add
out
cmp
pop
inc
cld
cltd
dec
stos
push
shr
and
push
ds
pop
into
outsl
sub
lds
dec
dec
cmpsb
xorl
sbb
mov
ss
addr16
or
xchg
mov
jb
mov
pop
inc
mov
add
xchg
adc
loop
mov
incb
push
push
cmc
nop
in
ja
xlat
push
mov
sub
sub
arpl
jp
push
insb
sub
mov
hlt
and
int
dec
add
outsb
test
in
or
fisubrs
imul
adc
pop
mov
or
in
pop
fsub
cmpsb
push
fs
sbb
sbb
loopne
cmpsl
mov
arpl
push
stc
xchg
leave
mov
pop
pop
sti
mov
or
popf
sub
sub
sbbl
les
mov
pushf
call
das
jbe
xor
popf
xchg
push
cmp
andl
test
jg
arpl
inc
and
cmp
push
dec
cltd
jae
cmp
pop
test
std
loop
lds
in
add
cmpb
sbb
repz
xor
fdivrs
mov
mov
aam
sbb
rcrl
or
jnp
mov
mov
jns
xor
xchg
xchg
leave
mov
mov
sti
dec
es
sub
and
ljmp
mov
cmp
aam
dec
ljmp
jle
or
es
adc
add
test
js
inc
push
cmpsb
ficompl
mov
dec
cmp
pop
sahf
mov
and
das
add
pop
test
jb
imul
mov
iret
je
mov
ds
xchg
loop
loope
xchg
cli
adc
cmp
lret
sbbl
inc
jne
jb
repz
lcall
idivb
aam
mov
test
fsts
mov
jo
or
ds
mov
mov
in
sub
into
lcall
mov
push
loope
test
xchg
inc
cmp
cmc
push
stc
dec
les
pop
sbb
sahf
cmp
inc
dec
sbbb
push
sub
mov
imul
ss
sub
stc
rcrb
pop
call
xchg
icebp
xchg
pop
sbb
mov
add
int
idiv
pop
pusha
cmp
xor
leave
mov
fcmove
jne
addr16
push
repz
adc
call
cmpsb
jbe
fcoml
ss
jle
ds
push
lret
lahf
out
cld
jge
ret
dec
xchg
adc
lds
adc
mov
sub
xor
sub
test
xchg
mov
push
cmp
fildll
mov
jbe
jg
lret
pusha
popf
push
pop
or
xchg
iret
loopne
ret
push
inc
dec
jmp
inc
jle
clc
inc
int
cmp
nop
stos
mov
aam
push
icebp
mov
cmpsl
lahf
pop
cwtl
das
sahf
push
call
sbb
xchg
loop
fimuls
cmp
test
adc
sub
jbe
ret
or
or
pop
xchg
cld
push
push
mov
nop
cmp
andb
inc
dec
sub
faddl
pop
es
jno
xchg
xchg
push
and
fnstcw
add
add
jnp
popa
jecxz
aad
sbb
stos
or
repnz
mov
sub
cmp
dec
inc
insl
aaa
sbb
mov
jle
sbb
add
dec
cmp
mov
mov
popf
scas
fs
add
adc
in
jmp
dec
dec
nop
hlt
sub
sub
not
and
lret
enter
ret
dec
xchg
push
pop
sbb
notb
bound
mov
sub
mov
fists
cs
aam
xchg
out
out
pop
push
xchg
insb
xchg
lods
das
es
mov
sub
loop
sahf
aas
dec
jae
pusha
int
outsb
push
rol
xor
dec
ret
mov
ljmp
je
xor
xor
out
int
sbbb
mov
jae
ljmp
shlb
popl
mulb
lds
jno
aad
shll
xor
in
pop
gs
out
in
rcll
mov
hlt
lods
jae
sub
mov
adc
scas
orl
icebp
dec
and
stos
in
out
push
loope
dec
pop
icebp
mov
adc
ret
add
pop
adc
fcmovnu
dec
ljmp
inc
mov
shll
mov
mov
jns
xor
or
jae
iret
push
mov
push
sub
mov
dec
xlat
mov
mov
jl
pop
add
mov
aam
icebp
push
lret
push
aaa
gs
outsb
in
push
adc
jns
jle
jp
test
shll
lcall
push
push
jbe
fdivs
sbb
sub
sbb
movsl
cmpsl
fidivl
xchg
add
sub
sub
icebp
sub
xchg
lds
push
fs
bnd
pop
js
imull
test
push
mov
shlb
push
rcrl
or
int
jecxz
mov
lea
sbb
and
lret
scas
jge
pop
mov
xchg
mov
sub
mov
popa
add
andl
push
sub
sbb
loope
jg
test
cmp
loop
pusha
inc
cli
dec
xchg
add
test
mov
push
hlt
lcall
inc
shr
mov
pushl
dec
rorl
loopne
push
jmp
inc
sbb
cmp
roll
test
pushw
test
je
cmpsl
bound
or
jmp
arpl
xor
adc
push
in
cmp
sarb
jmp
push
repz
out
roll
mov
jmp
shl
fists
mov
push
xor
add
lret
loopne
sbb
imul
cmp
jmp
push
sti
pop
aaa
nop
sbb
addr16
sub
adc
lret
loope
mov
sbb
insb
jns
jmp
popf
lds
dec
jecxz
data16
mov
mov
xchg
gs
mov
mov
pop
xlat
inc
mov
lahf
pop
pushf
das
aas
in
inc
sbb
and
xlat
fildl
jp
into
addr16
pop
xchg
icebp
daa
in
xchg
push
hlt
mov
pop
rcl
mov
daa
sbb
inc
fcmovne
push
sbb
repnz
scas
out
inc
jmp
mov
mov
xorl
adc
sub
loope
lret
mov
outsl
les
push
pop
aam
xchg
je
mov
xor
and
jecxz
fiadds
mov
pop
lods
dec
clc
adc
out
and
cmp
pop
mov
fidivrs
mov
xor
imulb
fildl
addr16
stos
bnd
ss
stos
push
sub
sahf
int
add
sahf
pop
aam
cmp
add
roll
and
lcall
sub
lahf
mov
mov
sub
insb
fs
sub
outsl
fnsave
lahf
mov
das
hlt
jg
popa
in
js
sbb
push
mov
adc
out
les
mov
pop
loop
xor
int3
and
dec
ja
mov
xchg
push
mov
xchg
xor
cmpsb
fisubrs
mov
js
test
inc
mov
sbb
dec
cli
xor
inc
jo
dec
mov
gs
pop
push
pushf
outsl
cltd
movsb
sbb
lods
cmpsl
lock
cs
pop
and
xchg
dec
ret
fsubrl
call
rorl
jge
leave
hlt
mov
add
insl
fs
cltd
fwait
inc
bound
aas
jmp
add
pop
xor
lods
inc
out
mov
or
add
in
idiv
xchg
std
incb
add
dec
imul
push
scas
ret
mov
test
cwtl
mov
pop
mov
fisttpl
mov
jo
cmp
je
ss
ret
mov
js
cltd
clc
cmpl
xchg
call
sar
xchg
sbb
inc
or
rclb
push
pop
pop
gs
mov
popf
in
inc
sub
adc
ficompl
mov
mov
test
add
punpckhbw
add
sbb
push
adc
or
jmp
jecxz
rol
imul
ds
push
mov
iret
and
movsl
cmpsb
mov
loopne
mov
dec
or
enter
scas
jmp
mov
repnz
in
mov
ss
mov
scas
mov
jb
mov
es
cmpsl
or
push
shll
pop
cltd
enter
mov
int
add
jle
add
rcrb
lret
pop
repnz
ss
jmp
add
in
sarl
add
mov
pop
ja
addl
mov
int
in
mov
jnp
lock
fwait
and
lcall
dec
out
pop
add
out
lods
js
stos
inc
pop
sbb
mov
and
imul
jo
mov
jl
dec
inc
adc
pushf
aam
xor
pop
xor
fstpl
out
sbb
cltd
daa
inc
cmp
pop
shrl
dec
push
out
in
adc
and
mov
push
pop
sub
cs
cmovnp
fstps
nop
and
xchg
mov
sbb
fisubrl
test
fstl
mov
jg
cvtpi2ps
sti
push
sub
loopne
cmp
stos
jb
out
mov
jbe
mov
mov
push
dec
jge
mov
iret
ror
jle
jne
sbb
xchg
dec
xchg
aas
push
adc
mov
lods
push
sub
xchg
jecxz
out
rcrb
or
sbb
lods
and
adc
mov
lret
scas
sub
mov
mov
xor
mov
lods
fists
xchg
sbbl
mov
je
les
xor
out
leave
mov
push
loopne
dec
js
out
sbb
insl
cltd
push
push
inc
push
mov
rcrl
xchg
mov
sbb
daa
icebp
dec
imul
cld
jl
mov
mov
pop
inc
insl
outsl
sbb
stos
jns
fwait
add
push
cmp
mov
in
xchg
and
dec
notb
jbe
sub
lods
cwtl
and
and
sbb
mov
add
xchg
jb
inc
mov
xor
fsubrl
cwtl
loope
cltd
aam
scas
test
mov
xchg
adc
mov
mov
fidivrs
push
xor
lret
pop
sbb
inc
je
jp,pt
lcall
xlat
arpl
pop
fcmovnbe
nop
push
lret
and
pop
rcl
inc
push
push
sbb
push
loopne
out
clc
jne
mov
lds
ficomps
mov
xchg
jle
add
push
test
sbb
insb
jl
mov
out
jmp
push
loope
adc
mov
dec
imull
scas
mov
cmpsb
push
and
cwtl
add
lahf
popa
lret
mov
xchg
sub
movsl
cmc
ret
cli
stc
movsb
mov
jnp
mov
cmp
and
movsb
cmp
std
ja
adc
sub
and
push
jg
movsb
ficomps
sub
ds
test
ljmp
xchg
adc
movsl
ret
test
xchg
jmp
mov
cmc
subl
movl
sahf
stos
inc
xor
mov
dec
movsb
push
adc
js
pusha
mov
call
loop
test
jns
xchg
or
jne
test
jne
fidivs
jl
or
adc
jl
inc
push
in
add
mov
cmp
cmc
clc
repz
jbe
cmpsb
cmc
xchg
scas
inc
pop
btr
xor
mov
dec
loopne
enter
mov
or
jmp
cltd
in
lahf
mov
sbb
mov
sbb
loope
xor
mov
and
lcall
sbbb
push
xor
mov
sbb
loopne
into
mov
sbb
sahf
push
pop
es
xchg
bound
fcompl
xor
fldcw
inc
or
dec
jbe
and
out
jg
mov
xchg
jle
stc
sahf
mov
or
jne
sbb
lcall
push
pop
in
fxam
gs
push
sbb
js
rorl
push
push
sub
in
repz
inc
imulb
mov
adc
sbb
cmpsb
mov
inc
repnz
push
adc
and
addr16
cli
pop
cmc
shrl
addr16
ja
mov
fsub
sub
mov
adc
dec
es
pop
shrl
inc
lea
mov
pop
sub
insb
xor
lcall
shlb
pop
shrb
add
sub
pop
rcr
xlat
xchg
and
shrb
decl
les
pushf
ljmp
inc
xor
out
xchg
es
push
push
xor
je
insb
mov
mov
mov
jmp
jnp
pop
jnp,pt
push
and
iret
inc
fcmove
push
ss
ja
or
divl
ficoml
movsb
push
pop
push
fidivrl
or
sub
or
stos
mov
scas
xor
movsl
into
sbb
mov
push
movsl
mov
sub
xorl
fistpll
lcall
jns
lcall
ret
dec
push
rcl
stos
mov
je
dec
and
mov
adcb
push
add
das
inc
movsl
loope
jae
repnz
pop
sbb
push
xchg
inc
into
out
mov
cmpsl
sub
loope
jbe
repz
and
sbb
xchg
pop
lcall
or
xor
addl
incb
and
enter
stos
xor
jbe
dec
jp
sbb
adc
loopne
xor
xchg
jo
mov
out
stos
inc
xor
mulb
test
outsb
repz
sub
cmp
jns
stos
scas
xor
rorl
jno
decb
push
mov
mov
add
lahf
leave
aaa
das
or
xchg
push
mov
jp
bound
add
jle
or
jge
mov
cmp
lock
dec
jnp
dec
pop
repz
sbb
out
or
pusha
push
imul
stos
push
in
pop
adc
fisttps
sahf
adc
jb
inc
jno
mov
je
es
and
fmull
mov
sbb
mov
iret
jb
fidivrs
hlt
stc
rcrl
adc
loop
arpl
addr16
cmpb
js
popf
sub
icebp
scas
jo
pop
sub
mov
sbb
in
sbb
xchg
mov
inc
pop
or
mov
stos
mov
sbb
ret
mov
std
pop
jne
dec
jne
dec
sbb
pop
test
mov
sbb
shrb
stc
mov
push
sub
and
xor
sbb
enter
xchg
jp
mov
cmp
andb
xchg
imul
mov
mov
test
fnstenv
mov
mov
stos
jno
xor
push
jge
into
sub
cld
jp
sub
inc
mov
cld
and
lret
add
mov
pop
cmp
xchg
sub
test
fimuls
sub
std
pushf
cld
loope
sub
mov
push
pop
jae
movhlps
xchg
lret
aaa
mov
and
xchg
and
addr16
sub
or
pmulhw
jp
sbb
sbb
pop
inc
data16
cmpsb
subb
add
sti
sbb
adc
push
imul
mov
inc
add
int3
pop
mov
stos
jo
out
mov
int
loopne
add
scas
int3
push
xchg
popf
mov
and
cmp
jno
xor
inc
rcll
imul
cltd
es
pop
fwait
std
and
ss
mov
out
flds
daa
hlt
add
adc
outsl
inc
adc
jmp
insb
imul
bound
dec
xchg
mov
mov
jne
mov
cltd
mov
pop
xchg
jle
or
cmp
cmp
ljmp
inc
jno
add
gs
push
movsb
pop
cmp
adc
push
in
xor
movsb
outsb
xchg
sbb
cmp
repnz
int
loope,pt
arpl
and
and
shll
xchg
int3
lcall
mov
jb
sub
mov
xor
dec
and
lahf
sbb
add
cmp
gs
cmp
stos
inc
or
inc
scas
push
leave
mov
cmp
mov
popf
icebp
inc
lret
sbb
ljmp
push
pusha
daa
pop
ret
loope
xchg
lcall
pusha
lods
adc
std
insl
dec
ret
bound
mov
xor
mov
cmp
in
lock
jae
or
inc
and
lahf
idivb
sub
sub
push
xchg
sbb
insl
inc
push
fiaddl
sub
out
or
lcall
or
roll
cmp
arpl
pop
lods
enter
jbe
ret
cmp
lock
jbe
subb
out
push
repz
dec
add
std
push
xorl
es
cmp
xor
popa
xor
pop
push
not
fidivrl
movsb
cmp
pop
mov
push
jo
pop
out
mov
out
dec
daa
and
sahf
fstl
gs
cmp
popf
lds
stc
add
test
pop
sbb
jb
imul
les
cmp
xor
push
mov
xchg
mov
into
int
mov
loopne
clc
inc
inc
pop
enter
cltd
xor
imul
xchg
and
mov
push
out
sbb
cmp
pop
dec
jge
cmpsb
cld
lahf
in
std
mov
xchg
or
popl
out
pop
loope
and
and
mov
mov
or
xlat
and
jp
and
push
in
inc
imul
jg
fcmovnu
stos
jge
out
rorb
inc
loopne
xor
ja
sub
imul
mov
cld
push
sbb
fimuls
and
xchg
cmpsb
xchg
jge,pn
ljmp
leave
test
ds
pop
or
mov
pop
xchg
enter
pop
int3
je
sub
and
mov
aaa
into
add
inc
push
dec
cli
push
clc
push
test
mov
mov
dec
sub
mov
add
movl
sub
jmp
adc
lea
cmp
test
pop
pop
jp
sahf
push
sbb
mov
orl
sbb
adc
cmc
sbb
rcll
loope
insl
out
out
xchg
pop
pusha
mov
adc
mov
stos
in
rcrl
jecxz
mov
pop
stos
les
fcmovu
inc
shl
pusha
xchg
jo
ljmp
stc
mov
sahf
jg
ja,pt
adcl
dec
xorl
push
mov
jnp
scas
inc
je
loope
jl
pushf
mov
int3
xchg
popf
rorb
loope
nop
out
add
inc
dec
call
insl
js
lcall
push
push
mov
ljmp
dec
or
incl
insl
cmpsb
cmp
mov
cmpl
lods
outsb
mov
jg
pop
pshufw
addr16
cmp
cld
andb
lahf
loop
mov
push
push
rorl
sbb
xor
leave
xchg
mov
in
mov
test
hlt
push
inc
xchg
cmp
out
and
stos
lods
push
mov
dec
insb
and
and
cmp
addb
mov
or
movsb
enter
jno
cmp
fimuls
lcall
sub
dec
sahf
xor
arpl
cmpsl
dec
imul
add
aas
mov
dec
cmpb
pop
in
pop
mov
loop
out
pop
xchg
pop
add
pop
push
add
sub
fs
or
icebp
xchg
sub
sbb
mov
mov
pushf
ss
xchg
sub
int
inc
out
into
mov
mov
les
enter
inc
imul
push
pop
sbb
mov
pusha
jno
ds
shl
mov
adc
or
not
ret
imul
vxorps
dec
lahf
push
push
mov
lahf
cwtl
xchg
out
out
dec
dec
and
mov
adc
xchg
movsb
adc
mov
pop
sub
mov
jmp
cld
xchg
xor
jnp
subb
sub
jne
mov
in
mov
mov
fisubrl
pop
mov
adc
jno
add
mov
rolb
lods
pop
sti
jp
and
gs
pop
addb
imul
mov
cmpl
aaa
les
sbb
cwtl
subb
xor
lahf
int
mov
xor
pop
addr16
and
lahf
andb
outsl
xchg
jle
call
inc
mov
add
dec
add
dec
xor
fwait
inc
fwait
xor
js
dec
pop
cmpsl
out
je
mov
bound
ljmp
sub
lods
das
mov
out
pop
mov
clc
dec
sar
xchg
xchg
jo
out
mov
arpl
repnz
sub
fstpl
jbe
lea
adc
jns
out
mov
add
mov
mov
dec
adc
mov
fsubs
aad
mov
stc
incl
cmp
or
jbe
ret
jb
add
or
jl
mov
jp
or
adc
sub
movl
dec
jge
pop
sarl
cld
dec
dec
loop
xchg
cmpsl
and
leave
into
xor
scas
jb
xchg
aas
sarl
dec
loopne
ss
mov
int
pop
fcmovu
adc
sahf
cmp
mov
and
jo
push
xchg
sbb
pop
mov
sarl
jp
or
xor
nop
jo
stos
mov
xor
lock
loopne
aad
jne
out
push
cmp
sub
dec
sbb
dec
xadd
jnp
dec
mov
shlb
push
cltd
cwtl
pop
loop,pt
mov
xlat
jp
mov
add
adc
ja
or
and
cmp
mov
mov
jno
stos
nop
pop
pop
sub
jmp
dec
inc
pop
imul
sub
sahf
mov
sbb
test
es
lret
je
or
cs
imul
inc
addr16
xor
mov
out
sub
mov
xchg
scas
cmp
shrb
adc
jb
adc
out
insl
pushf
jbe
mov
push
sbb
icebp
je
shrb
es
rorl
loop
sub
testl
add
fcomps
loope
test
scas
mul
mov
add
xchg
idivl
movsb
mov
das
jae
jo
in
jp
fs
leave
mov
aas
jg
mov
cmp
pop
sbb
inc
push
pop
lcall
or
push
mov
sbb
push
add
push
cmpsl
mov
popf
and
aaa
xor
scas
jbe
lahf
mov
xchg
mov
aad
rcrl
xor
stos
xchg
repnz
mov
fneni(8087
rcl
xchg
addl
out
xchg
fbstp
mov
mov
les
popf
ds
lret
xchg
sub
xor
xchg
add
pop
pop
into
pop
fildll
test
xor
bound
popf
leave
aaa
scas
je
shlb
inc
ret
pop
daa
mov
cmp
fistpll
pop
outsl
mov
sahf
cs
jecxz
jg
and
cmc
jge
or
ret
xor
pusha
stos
xlat
cmc
cld
ljmp
inc
and
xor
loopne
in
and
call
aad
add
jle
aad
inc
push
push
mov
sub
add
ljmp
push
xchg
push
cltd
jle
popa
jle
pop
lock
shlb
add
aas
daa
xchg
mov
adc
popf
and
les
cmp
xor
dec
sub
push
out
ds
add
fldl
sub
add
xchg
je
loopne
xlat
xchg
cmp
ds
mov
xlat
je
pop
jle
inc
sub
dec
les
cmc
cli
xchg
mov
pop
leave
inc
cmpl
sbb
mov
inc
mov
jecxz
jge
cmp
pop
cmp
bound
movsb
fs
mov
call
ds
cmp
mov
pop
and
and
mov
cltd
aam
or
cmp
arpl
and
in
ret
inc
mov
pop
inc
mov
out
loop
fs
push
mov
dec
mov
inc
push
clc
adc
cmp
xlat
aam
jmp
push
and
outsb
cmpsl
push
add
mov
lds
mov
push
dec
and
sbb
inc
sub
push
fmuls
push
rol
push
adc
scas
cs
cmpsl
mov
movsb
jno
dec
in
jb
test
ja
sub
mov
and
leave
and
and
rclb
adc
fcompl
cltd
clc
in
leave
sub
int
sub
hlt
add
stos
or
or
push
ljmp
divl
movsl
leave
test
inc
cmp
push
mov
xchg
or
sbb
fidivs
inc
jge
fdivs
movsl
inc
mov
punpckhdq
lret
xchg
add
aad
cmp
das
int
lds
pop
loope
imul
sub
jbe
add
xchg
js
jb
clc
mov
outsl
mov
jae
mov
mov
xchg
aaa
and
das
mov
mov
sub
xchg
addr16
mov
hlt
lds
subl
test
mov
mov
sub
inc
pop
pop
aam
das
sahf
aad
mov
cmp
sbb
aaa
in
ds
jo
inc
sti
outsl
loop
subb
leave
mov
inc
mov
lahf
push
pop
test
pusha
xchg
jns
push
es
jmp
jno
sub
fdivl
sbb
fldcw
std
add
scas
inc
in
mov
sub
xor
pop
xor
adc
pop
popa
jno
dec
add
add
sti
or
shrl
xlat
jbe
aad
mov
jp
fcmovnbe
leave
enter
ja
jae
divl
jl
insl
and
dec
shrl
add
push
mov
cltd
cld
cmpsl
push
add
test
pop
loope
cmp
mov
fs
sbb
imul
push
push
mov
sub
test
fdiv
and
sub
inc
pop
insb
lea
faddp
shll
xor
mov
inc
mov
adc
ja
mov
xor
pusha
xchg
adc
jne
nop
test
push
jg
in
pop
bound
lds
pushf
addr16
movsb
rcl
popa
push
cli
or
and
cmpsb
rcll
sahf
mov
mov
std
jnp
or
push
aam
loopne
mov
pop
xor
or
and
ss
inc
dec
add
xchg
xchg
or
or
jmp
adc
xor
mov
xchg
mov
dec
xchg
dec
in
adc
mov
mov
mov
pushf
or
or
je
icebp
leave
pusha
push
pusha
icebp
dec
add
cmp
pop
mov
jno
ljmp
push
xor
and
xor
or
adc
xor
lds
xchg
jp
int
mov
or
xor
imul
dec
mov
mov
jne
pop
jg
jp
mov
mov
add
clc
push
mov
enter
push
movsb
pusha
dec
ret
cmpl
popf
push
cmp
out
outsl
xchg
cmp
mov
aam
and
out
cmp
and
push
mov
or
pop
into
loope
mov
mov
icebp
icebp
xor
xchg
dec
mov
sub
sub
call
and
lds
inc
mov
mov
in
aas
jecxz
sbb
or
and
cmpsb
lahf
lods
pop
pop
movsb
add
lods
bound
or
xchg
ret
xchg
add
xchg
jno
add
or
dec
lahf
mov
idivl
mov
lea
or
jmp
sarl
outsl
dec
lahf
ss
xor
fstl
or
push
loope
pop
sbb
jmp
cmp
aad
xchg
in
imull
push
rol
inc
inc
pop
cld
or
pop
push
pop
mov
jg
clc
mov
dec
sub
or
mov
mov
sahf
xor
adc
popa
cmpsl
fs
add
in
fcmovu
push
jl
dec
mov
dec
fbstp
in
jl
adc
imul
in
pop
dec
lret
push
mov
std
push
ss
pop
cmp
xchg
push
nop
pushf
inc
jmp
sub
loope
jecxz
inc
cmp
sbb
mov
xor
int
sarb
adc
push
ret
jmp
lahf
fstps
adc
jb
scas
lds
pop
jmp
lods
push
and
sahf
movsb
pop
xor
sub
xor
inc
xor
cmpsl
bound
push
xor
push
rclb
adc
add
or
and
insl
jne
jecxz
and
xchg
dec
dec
lret
adc
imul
add
sbb
imul
jb
xchg
movsb
add
lahf
jnp
sub
adc
mov
pop
shll
push
add
jecxz
push
add
lods
inc
adc
lock
jnp
sbb
push
das
data16
aam
aas
xor
jle
sahf
sti
rcr
mov
sahf
lret
shlb
int3
lret
icebp
out
in
add
mov
mov
out
inc
testb
pop
inc
hlt
enter
sbb
insl
jnp
dec
and
mov
cld
jo
rclb
es
mov
xchg
dec
cmc
xor
repz
fs
js
ror
adc
cmpsb
adc
hlt
or
aaa
dec
and
mov
les
mov
xchg
adc
dec
inc
imul
push
inc
das
ret
outsl
and
or
cmp
scas
lea
mov
or
mov
mov
loopne
adc
sbb
lea
pop
jns
adc
and
les
jle
xchg
sub
cwtl
lea
xchg
lahf
xor
popf
mov
push
and
cmp
call
jmp
sbb
jmp
int3
mov
test
push
xchg
dec
jnp
hlt
push
int
push
jg
stc
xor
lcall
pushf
pop
cmc
into
pop
shll
test
sbb
push
xor
sub
dec
out
mov
cmp
and
or
lahf
pop
inc
subb
jnp
push
lods
ss
jnp
clc
mov
in
pop
adc
in
enter
mul
adc
pop
jg
int
sbb
adc
stos
movsb
jmp
inc
mov
inc
or
or
cmpsl
xchg
jb
xchg
repnz
repnz
in
adcb
sub
aas
mov
aaa
scas
insl
push
repnz
test
and
inc
sbb
add
int3
out
adc
adc
sub
out
std
mov
cmp
xchg
shl
rcll
mov
daa
sub
fsubs
sbb
xchg
leave
cs
shll
scas
insl
jo
fs
lahf
pusha
pop
cmp
mov
int
jge
divb
divl
cmpsb
nop
xchg
lds
inc
adc
insb
outsb
cmp
arpl
push
jb
pop
xor
cltd
mov
dec
dec
sbb
mov
push
sbb
fsubs
leave
bound
xorl
push
rcll
leave
adc
push
test
cli
adc
dec
jmp
call
lret
or
cwtl
inc
and
cmp
and
fcomps
mov
lods
jnp
pushl
adc
test
mov
pop
xlat
dec
cmp
outsl
adc
test
cltd
adc
or
jns
or
cmp
add
mov
xor
aad
rolb
xor
out
dec
enter
lahf
aas
dec
mov
call
sbb
ljmp
mov
fmuls
js
or
inc
jecxz
aad
add
adc
mov
xor
mov
sbb
addr16
bound
rorl
pop
sbb
nop
xor
ja
cmpsl
sbb
jbe
mov
mov
test
mov
mov
movsb
jae
lcall
daa
aaa
subb
fldln2
mov
cmpsl
stc
cwtl
push
sbb
incl
fiaddl
jo
sbb
daa
mov
cmp
jb
jecxz
les
or
mov
push
lret
add
pop
jne
add
gs
lahf
push
xor
clc
mov
test
lock
push
and
outsl
lods
hlt
sbb
mov
rclb
ficompl
subb
pop
out
ret
dec
je
mov
stos
sub
cmc
jae
pop
insl
test
inc
pop
add
sub
movsl
enter
test
xor
push
jno
jne
daa
adc
sahf
pop
js
and
jmp
push
sbb
arpl
xchg
xchg
not
push
pop
push
std
push
cli
cmp
cmp
xchg
or
push
cli
adc
mov
push
loopne
ret
icebp
cmp
xchg
inc
jecxz
inc
and
inc
and
gs
gs
jge
and
dec
push
xor
push
mov
test
lcall
rolb
pushf
in
imul
sbb
sbb
les
or
add
int
cld
outsb
and
stos
test
insb
add
pop
shll
pop
xor
sub
test
xchg
adc
aad
das
xor
scas
dec
lcall
or
jnp
push
sub
xor
sti
cmp
test
loopne
and
cmpsl
vpsubq
xor
clc
int3
test
popf
les
int
mov
inc
fidivrl
fstpl
icebp
and
aam
dec
mov
sbb
mov
fadds
test
scas
sub
jne
push
addb
xchg
xor
push
enter
lods
sub
pop
mov
sub
adc
mov
jno
mov
aam
jmp
sub
add
ss
push
inc
rclb
xor
xor
data16
or
dec
add
xor
push
mov
daa
adc
mov
adc
repz
test
lcall
lret
mov
push
sub
push
push
mov
sub
sahf
xchg
daa
xchg
das
les
pop
insb
loop
mov
fnsave
insb
ret
test
and
sub
dec
movsb
mov
cmpsl
arpl
mov
fisubrs
sbb
mov
adc
cli
xchg
cmpsb
push
push
mov
xchg
dec
jecxz
stc
pop
jnp
and
ss
shufps
dec
lret
movsb
in
js
cmp
sahf
les
call
xorl
dec
call
in
mov
js
dec
pushf
or
daa
sbbl
xor
or
mov
pop
adc
das
xor
jge
inc
daa
jecxz
test
bound
push
testl
or
adc
jl
mov
mov
not
sbb
inc
aam
pop
mov
sub
scas
sar
dec
lds
pop
mov
inc
test
loopne
cltd
subb
xchg
and
and
dec
in
fmuls
jl
insb
sub
xor
mov
jmp
adc
test
arpl
std
and
gs
adc
mov
cld
mov
jnp
jns
test
cltd
gs
cwtl
mov
or
out
xchg
nop
pop
lods
test
cmpsl
aaa
les
mov
dec
shll
push
adcb
and
xor
adc
hlt
pop
sub
popa
mov
ljmp
lret
xchg
pop
add
jbe
in
push
dec
dec
fiadds
mov
xorl
adc
add
std
adc
orl
insl
fistpl
jb
add
xchg
dec
imul
in
dec
gs
sub
jnp
imull
gs
test
jg
ss
xchg
mov
gs
push
frstor
jg
loop
fcomps
movsb
mov
jne
dec
lods
mov
add
pop
leave
testl
outsl
pop
and
adc
clc
xchg
add
lahf
pop
mov
clc
sub
mov
sbb
out
push
scas
gs
loope
push
jno
stos
es
aam
pop
cld
and
or
les
lods
jo
and
xor
fst
jnp
adc
xor
push
xchg
pop
outsl
xchg
ret
daa
xchg
std
push
jmp
pop
icebp
pop
pop
std
cwtl
sti
pop
repnz
dec
stos
je
cmc
pcmpeqb
jno
mov
jae
fmulp
xchg
call
mov
mov
adc
loop
adc
lods
jg
test
pop
cmpsb
add
shll
dec
test
xchg
out
pop
dec
ja
pop
popa
sub
test
mov
fdivs
pop
sub
dec
jno
push
pop
inc
pop
popf
cli
or
arpl
arpl
mov
icebp
out
ret
inc
and
dec
shlb
sub
daa
jg
or
pop
in
pop
jmp
cltd
cli
sub
mov
cmpsl
into
fsubrl
shl
lods
jns
lret
stos
testl
mov
in
or
add
idivb
iret
adc
add
insl
push
jecxz
jbe
dec
cmc
cmp
je
mov
xchg
xchg
pop
cmp
add
jg
les
stos
jbe
out
cmc
jmp
mov
lods
data16
pop
fimuls
add
in
sbb
inc
in
pop
rcrl
or
paddsw
cmp
and
insl
inc
icebp
pop
mov
and
cltd
inc
and
out
data16
stos
adc
dec
jb
out
insl
leave
rcrl
xchg
dec
inc
xchg
push
jg
cmp
jmp
inc
xor
or
or
sbb
cmp
lret
xchg
fcmovbe
mov
icebp
lods
sbb
jno
shll
cmp
add
xlat
pop
adc
pop
aas
bound
aad
outsl
dec
movsl
je
std
out
repnz
jae
mov
inc
call
jne
dec
jmp
ret
arpl
ja
cmp
dec
cmc
stc
mov
xchg
xorb
mov
cmp
lock
inc
aam
gs
sbb
push
fwait
shll
mov
fidivrl
add
jbe
xlat
imul
cltd
dec
bound
lods
test
xor
pop
add
or
out
ss
fildll
adc
push
sbb
xchg
js
or
fwait
jmp
jg
sbb
fwait
push
lock
lret
movaps
push
dec
mov
in
stos
jbe
insl
addr16
mov
andb
sub
scas
sbb
scas
js
test
jnp
mov
pop
sahf
loop
mov
cld
inc
mov
movsl
ret
movsb
sti
ja
cltd
test
addr16
inc
in
or
push
mov
je
inc
push
sahf
out
sbb
sbb
sub
jg
inc
cmp
repz
sub
xchg
leave
mov
bound
loop
fisubs
add
mov
loop
aad
inc
sub
jno
nop
mov
jns
mov
gs
jo
cmpsl
imul
arpl
xchg
jle
pop
cmp
jns
mov
or
push
and
sub
sbb
movsb
mov
pushf
jge
sbb
ret
loopne
xchg
mov
xor
add
mov
sahf
mov
and
push
inc
jl
in
imul
pop
adc
jmp
stos
insb
scas
mov
inc
mov
je
adc
cmp
or
int3
adc
inc
out
or
in
inc
decb
sbb
lcall
cmp
repnz
fnstsw
fmull
pop
cmpl
sbb
add
addl
shll
dec
mov
add
inc
mov
push
adc
testb
mov
mov
pop
es
pusha
popf
into
push
add
movsb
add
mov
leave
test
loope
pushf
movl
ja
push
flds
mov
pushl
pop
les
js
lea
cmp
and
ja
jbe
xchg
add
xor
arpl
je
push
fwait
or
fsubrs
jb
sbb
scas
fiadds
jge
mov
subb
add
stos
lods
mov
xor
cmp
xchg
cli
inc
ds
fs
mov
pop
int3
add
dec
rol
notb
pop
mov
and
aaa
into
and
jg
pop
jg
test
ss
push
lret
je
adc
mov
xchg
aad
in
or
xchg
rcll
clc
mov
insb
jae
cli
shrb
xor
mov
sti
sahf
jo
cld
mov
divl
int3
push
push
out
mov
mov
pushf
push
dec
adc
fs
lods
mov
dec
mov
fsubl
push
xchg
addr16
lret
fdivrl
out
inc
dec
xor
mov
or
ret
or
jp
mov
jbe
push
js
ret
enter
movb
leave
cmp
and
and
fidivs
int
sub
out
test
sbb
mov
pop
mov
lret
adc
aas
pop
cmp
out
or
mov
test
xor
mov
ja
jge
sbb
mov
pop
pop
pop
popa
test
mov
and
push
hlt
inc
mov
lret
shll
sub
fucom
imul
push
imul
jp
js
add
pop
push
frstor
adc
shlb
or
hlt
movsl
or
clc
jb
rcrb
sti
adc
or
insb
mov
mov
sbb
dec
cmp
mov
push
pop
loope
pop
sbb
gs
sub
pop
outsl
mov
outsl
cmp
add
inc
in
loop
cmpsl
mov
pop
ljmp
inc
leave
mov
aas
arpl
dec
popf
out
mov
rclb
xchg
insb
cmp
leave
insl
into
xor
dec
dec
inc
fwait
mov
lock
popf
cmpsl
lret
mov
xor
dec
arpl
push
mov
push
add
push
sti
and
into
and
repnz
or
mov
jge
popa
inc
popa
lds
rcrl
cmc
add
hlt
mov
jnp
xchg
mov
in
mov
pop
or
outsb
lds
sbb
xor
movl
pop
ljmp
jb
fildll
nop
prefetch
or
mov
nop
das
push
enter
and
mov
mov
mov
push
mov
add
push
dec
les
dec
and
loope
lahf
push
scas
or
or
out
xchg
lock
add
andb
cmpsb
orl
call
imul
inc
xor
fst
int
pop
test
aas
cmpsl
mov
jno
sahf
sbb
and
xchg
mov
adc
mov
icebp
add
cmp
push
movl
lods
addr16
ret
xor
jbe
adc
xlat
sbb
dec
dec
sti
in
ret
and
push
cli
sahf
pop
pushf
add
enter
xor
mov
loopne
rcr
enter
inc
bound
jno
jne
inc
imul
pushf
iret
imul
sub
xchg
std
cmpsb
outsb
sbb
inc
push
sub
mov
jmp
lock
repz
inc
stos
in
cmp
hlt
js
imul
pop
lea
out
arpl
iret
xor
push
inc
cmp
add
pop
movl
jle
mov
mov
imul
lret
pop
fmul
xchg
mov
mov
cmp
mov
inc
int
movsl
sub
mov
push
inc
out
lcall
sbb
dec
pop
andl
pushf
fidivl
fidivl
lcall
leave
mov
sbb
mov
and
mov
cmpsb
nop
mov
cmp
xor
ficomps
out
andl
int
rcr
mov
jmp
or
push
pop
sub
in
cmc
cld
jp
out
dec
add
sbb
mov
aad
xchg
mov
fdiv
mov
sub
cltd
jge
push
and
xorl
push
dec
xchg
dec
inc
mov
ret
adc
loop
out
shlb
pop
repz
pop
mov
or
mov
scas
repz
mov
gs
adc
stos
lods
adc
loop
xor
nop
ret
push
out
lods
dec
lcall
add
xchg
or
lcall
push
and
lock
and
push
xchg
mov
hlt
bound
repz
adc
push
test
push
ds
xor
mov
mov
xchg
adc
and
iret
rcrb
sbb
push
push
popa
mov
outsb
and
lahf
pop
pusha
mov
or
mov
push
aad
inc
jno
rol
fsubrp
lcall
and
test
cmc
push
mov
sub
and
add
sbb
jecxz
dec
lcall
mov
and
and
cltd
js
inc
xchg
mov
jmp
adcb
test
adc
pusha
lock
cmp
daa
lahf
mov
jns
pop
add
sbb
jmp
pusha
mov
pop
cmp
loop
bound
jns
aaa
lret
jb
cmp
shl
fs
xor
jbe
dec
shrl
lds
cmpl
xor
mov
sub
add
out
jmp
add
lcall
popa
adc
push
inc
cmc
mov
inc
je
mov
cmpsl
mov
xor
adc
data16
pushf
pop
jo
popf
sti
jnp
negl
push
mov
hlt
mov
pop
dec
bound
xchg
xor
sbb
add
mov
mov
pop
push
mov
nop
sub
hlt
sub
push
xchg
aam
jp
pop
popf
ret
or
int3
inc
xor
stos
add
repz
aad
inc
xor
inc
adc
es
testl
das
movsl
push
xchg
mov
sub
push
nop
sbb
pop
rcrl
mov
inc
mov
sbb
push
jp
fisubs
xor
das
aas
or
pop
bound
ja
hlt
mov
mov
rcrb
shl
xor
mov
xchg
sbb
in
je
rorl
xor
or
lcall
mov
jbe
aaa
call
jp
push
addr16
dec
ljmpw
jne
push
inc
in
sbb
in
push
stos
inc
mov
adc
pop
mov
inc
ja
xchg
cmc
cmpsl
inc
mov
add
mov
xchg
sar
cwtl
mov
sbb
inc
mov
cld
in
inc
dec
movsb
incl
out
out
mov
pop
pop
mov
in
out
repz
add
mov
fbstp
xor
push
jmp
in
dec
enter
aad
xchg
cmp
addr16
or
jp
cmpsb
adc
rep
mov
loopne
jmp
push
xchg
jno
je
rorl
dec
cmp
pop
rclb
movntq
sub
pop
sub
pop
or
clc
mov
sahf
dec
mov
mov
imul
lds
fs
mov
push
cld
sub
add
ljmp
ret
sub
push
jg
stos
rcrl
mov
jge
or
icebp
dec
dec
pop
and
adc
out
or
xor
aas
insl
push
cmp
data16
subb
dec
ja
xchg
scas
int
gs
sub
fisubl
xchg
xor
fs
shl
mov
dec
pop
cli
ret
fucomip
je
or
test
incb
jle
subb
mov
movsb
sub
out
add
dec
popf
and
lea
std
jmp
aad
add
fstp
sbb
sub
test
test
shll
push
adc
mov
push
inc
mov
add
in
shl
push
lret
les
lods
jbe
rcr
xchg
out
sub
push
and
jo
cmp
das
sub
movsb
xlat
lea
mov
out
fistpll
inc
jg
sub
adc
inc
int3
mov
inc
xchg
test
jbe
pop
jge
add
push
rolb
mov
repnz
mov
movsl
out
decl
xlat
mov
fldl
aad
negl
movsl
push
iret
fwait
inc
or
mov
xlat
adc
mov
jmp
ds
scas
sub
ljmp
inc
push
xchg
shlb
ret
adc
dec
xor
xchg
sarb
mov
mov
pop
xor
push
fstpt
sbb
cmp
jge
sub
js
and
xchg
cmp
jns
sub
dec
in
pop
push
into
push
mov
int
xchg
int
sub
mov
xor
xor
test
push
mov
outsl
or
mov
jg
fisttpll
xchg
adc
flds
bnd
mov
ljmp
jns
push
cmp
les
aaa
mov
in
js
cmp
cld
push
mov
or
adc
push
mull
mov
test
jbe
push
cmpsb
scas
decb
mov
inc
add
test
push
pop
sbbl
xor
and
mov
push
sbbl
add
movl
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
sbbl
xor
add
jmp
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jb
mov
mov
xor
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
mov
add
movzwl
mov
adc
mov
negl
movzwl
xor
add
mov
mov
mov
inc
mov
movl
cmp
jne
add
mov
mov
add
xor
add
sub
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
add
mov
and
movl
sbbl
movl
movl
mov
mov
neg
mov
movzbl
sub
xor
add
mov
mov
mov
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
adcl
xor
xor
xorl
sub
sbbl
sub
xor
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
imul
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
or
mov
sbb
mov
add
mov
movl
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
add
adcl
and
mov
neg
mov
mov
lea
mov
mov
mov
and
mov
mov
movl
sub
add
mov
subl
mov
xor
add
movl
jne
movl
jmp
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
subl
mov
xor
xor
orl
sub
sub
andl
xor
mov
mov
mov
mov
jmp
and
mov
mov
subl
xor
adcl
xor
addl
sub
notl
sub
xor
mov
sbb
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
push
and
mov
jno
pop
xchg
inc
data16
pop
pop
jp
loopne
cmpsb
add
outsb
out
cmpsl
out
arpl
pop
add
mov
inc
add
or
test
arpl
jg
adc
pusha
pop
adc
sbb
rcr
ds
fs
push
inc
jp
mov
inc
scas
repnz
adc
and
fs
xchg
das
out
enter
cmpsb
dec
pinsrw
pop
orl
push
push
std
sub
sahf
mov
push
aad
movsl
popf
neg
cmp
stos
iret
xchg
call
fs
stos
dec
jge
cltd
inc
leave
xchg
mov
sahf
aad
dec
sub
cmpsl
movsl
add
xchg
pop
insl
repnz
xor
add
sub
sub
mov
adc
pop
popa
jl
gs
pop
in
xchg
mov
jns
jnp
nop
and
xchg
push
test
aaa
in
xor
mov
inc
addl
or
es
mov
push
pop
dec
sbb
pop
sarl
pop
pop
jbe
jl
mov
outsl
fsub
push
mov
test
add
jne
xchg
inc
dec
loop
int
add
inc
iret
add
cmp
sbb
repnz
push
test
jge
dec
loope
adc
mov
push
cmp
inc
jp
in
out
or
dec
sub
cltd
inc
cmp
cwtl
lock
xchg
jno
jge
stc
and
push
xor
outsb
pop
icebp
mov
lds
stos
cmpsb
sbb
lds
xchg
or
xchg
push
cltd
push
jne
enter
xchg
dec
and
es
ljmp
xchg
adc
cmp
push
test
aaa
cmp
cmp
pop
or
mov
pop
testb
fcmovne
test
adc
xchg
adc
dec
sub
jae
or
mov
mov
faddl
push
inc
adc
push
dec
and
inc
cmpsb
test
mov
mov
repz
pop
or
cmpsb
pop
xchg
stos
jnp
mov
inc
push
repnz
push
imul
movsl
cli
mov
inc
cmpsb
push
mov
push
cmpsb
sbb
fbstp
and
lods
int
xchg
jae
dec
mov
mov
jbe
cmc
mov
push
sbb
push
outsl
cmp
into
pop
push
in
dec
adc
adc
insb
int
imul
sbb
jp
add
lahf
mov
sub
mov
cld
fwait
mov
and
shll
cmp
aam
cmp
test
xchg
dec
in
daa
cmp
sbb
shl
lret
pop
mov
dec
pop
cmp
rolb
cli
mov
xorl
mov
add
subl
popf
addr16
jge
xor
ret
mov
imul
mov
jns
ss
adc
and
lea
and
jmp
cs
pusha
daa
es
dec
nop
mov
or
loop
add
mov
adc
lods
lods
add
cmp
fwait
xchg
jbe
cmp
in
ret
mov
lods
jo
ja
push
outsl
lcall
inc
or
xor
xor
into
mov
int
mov
sbb
fsubl
repnz
fdivp
aas
shl
lret
lret
repnz
pop
push
shrl
dec
dec
cmp
jg
mov
stc
or
shl
mov
cmp
mov
shrb
ja
test
dec
push
test
sub
xchg
push
shl
cltd
xchg
sub
out
ficomps
clc
ljmp
rcll
mov
pop
xlat
mov
cs
icebp
push
ds
clc
mov
movsl
xchg
push
pop
sub
stos
rorb
test
mov
pop
mov
sahf
ljmp
in
push
sbb
ss
clc
iret
or
pop
xchg
lcall
call
outsl
sarb
sbb
mov
ljmp
std
adc
adc
xor
mov
or
push
jecxz
divl
jg
pop
pop
repz
mov
js
mov
subb
jmp
ret
decl
shr
xor
push
mov
sbb
xchg
xor
shlb
add
lea
sub
ja
add
scas
fs
sbb
cmpsl
mov
sbb
sub
lock
in
rorl
loopne
pop
mov
out
xchg
cmp
pop
mov
or
fsubs
lahf
sub
loop
or
sub
jmp
xor
mov
jo
movsl
xchg
rcrl
sub
and
gs
xor
ss
inc
or
lcall
test
frstpm(287
xchg
in
imul
das
movsl
xchg
jne
out
jg
das
jmp
lea
int3
fistpl
and
lds
js
and
add
pop
rcrb
cld
xlat
clc
loope
mov
jno
push
adc
mov
insl
pop
mov
cmp
add
shlb
in
jnp
xchg
xchg
mov
cmp
sub
jne
movsb
jns
mov
mov
jecxz
pop
idivb
sbb
nop
mov
xchg
pop
push
mov
insl
ss
fcoml
inc
fstps
sbb
jb
orl
rolb
adc
jg
pop
arpl
cmpl
cmc
mov
loope
and
jb
imul
pop
iret
sbbb
call
in
sbb
dec
cmpsb
push
mov
xchg
xor
mov
dec
mov
jecxz
pop
stos
cmc
inc
or
je
jne
mov
xor
adcb
xchg
push
jl
lock
push
stc
mov
cmp
popf
outsl
inc
pop
sub
shll
js
ret
lock
fistpl
sub
mov
and
dec
mov
adc
pop
dec
popf
or
dec
push
jmp
or
lea
adc
sbb
add
sub
out
clc
mov
lods
adc
adc
cmp
or
popa
jae
leave
lds
ja
xchg
or
inc
out
out
aad
movsb
jbe
loope
mov
dec
shr
xchg
pushf
sbb
mov
jne
dec
mov
rorb
fstps
sub
aaa
repnz
in
idivb
or
pop
notl
mov
inc
push
push
fldenv
nop
test
jmp
pop
notl
imul
mov
iret
test
sbb
mov
fstl
push
fwait
outsb
fucomp
pop
mov
std
push
mov
xor
mov
xor
bound
rcll
lods
mov
jnp
pusha
pop
ficompl
fidivs
repz
or
and
push
adcl
add
jecxz
jecxz
push
xchg
lods
jb
inc
push
pop
mov
das
mov
push
subb
pop
repnz
mov
test
aad
jle
cli
sbb
mov
or
repz
xor
cmp
mov
int3
repz
pusha
pop
addr16
fwait
cli
bt
bound
dec
cli
stos
dec
jecxz
and
push
test
outsl
in
or
xchg
sbb
sbb
shll
mov
or
push
jle
roll
dec
stos
imul
mov
lds
out
cli
or
jns
lret
jnp
push
add
outsl
pop
sub
pop
xchg
cs
xchg
dec
adc
push
jge
mov
push
dec
pop
jg
or
arpl
negl
js
and
jle
jb
xchg
inc
test
mov
add
pop
pop
out
add
aas
out
sbb
or
imul
and
and
mov
and
pop
xchg
data16
fiadds
add
sbb
or
fsubl
scas
in
push
call
das
mov
roll
mov
sahf
notb
loop
cmovl
xchg
mov
jmp
adcb
icebp
pop
movl
jae
jns
lods
mov
cli
sub
xchg
rcl
push
xchg
dec
out
mov
inc
fildl
sahf
call
pop
hlt
sysenter
test
jle
or
dec
xchg
xchg
mov
adc
loope
adc
dec
jne
sbb
scas
fwait
test
pushf
popa
mov
sarb
push
call
lcall
push
or
add
push
mov
add
xchg
push
jns
dec
sub
repz
jb
xor
js
mov
and
sbbl
stc
xor
lret
imul
cli
imul
or
add
fdivr
es
or
or
ljmp
pop
dec
lea
vandnpd
in
mov
out
ljmp
into
push
cld
fadd
lds
mov
lods
dec
jmp
inc
inc
icebp
dec
and
les
lcall
mov
scas
mov
pop
adc
adc
sub
cmp
or
pop
rolb
push
sbb
xor
bound
idiv
ror
negb
xor
shll
pop
mov
flds
jno
jns
int3
adc
outsl
xchg
and
xchg
inc
mov
rolb
sbb
mov
aas
sub
repz
adc
les
add
int3
enter
lock
pop
roll
lcall
sbb
popf
shrb
lret
mov
scas
push
xlat
and
and
jecxz
movsb
xor
xchg
mov
jae
stos
data16
xchg
jo
inc
sbb
add
mov
mov
fisttps
mov
into
add
sub
sub
or
lds
lea
push
jl
lds
sub
or
mov
fsub
inc
mov
popa
dec
mov
adc
jmp
and
stc
lret
push
imul
add
mov
rclb
pop
mov
test
mov
add
leave
xchg
addl
bound
in
or
imul
loopne
hlt
cmp
adc
enter
fcoml
aaa
fldl
nop
and
dec
mov
fidivs
jmp
sbb
pop
mov
xor
or
out
jno
movb
dec
inc
xchg
pusha
in
jnp
xor
subb
adc
add
insb
mov
mov
pop
push
das
pop
ret
adc
mov
jno
mov
jmp
lahf
popf
popa
adcl
add
js
inc
pop
cmp
inc
mov
jb
xchg
push
sub
adc
scas
mov
push
or
adc
jmp
and
leave
mov
in
mov
movsl
mov
lods
iret
lcall
inc
inc
stos
push
or
shrl
add
pop
test
ds
fcomi
pop
loope
xchg
adc
cmp
sahf
or
xchg
xor
pop
shrb
sbb
push
pusha
and
cmp
xchg
and
divb
and
xchg
gs
cmp
pop
nop
jo
or
mov
dec
ret
pop
outsb
push
sahf
lea
dec
inc
xor
fistps
or
adc
sbb
jnp
pop
sbb
adc
std
pop
or
fcomps
sub
xor
mov
bound
bound
sbb
iret
adc
and
adc
andl
sbb
std
jp
pop
xchg
xchg
lret
pop
fisttpl
sarb
in
popa
add
inc
jno
outsb
inc
ret
sub
scas
xorl
pop
pop
cld
lahf
shrl
mov
or
push
mov
cmp
jbe
mov
std
or
mov
enter
fsubs
or
ss
jp
hlt
out
or
inc
xlat
cmc
repz
xacquire
inc
inc
push
push
adc
imul
mov
mov
xor
mov
iret
pusha
add
rcrb
lods
jmp
in
push
dec
jl
or
mov
in
cmc
add
push
sbb
fbstp
or
jns
push
mov
dec
mov
xchg
xlat
adc
sbb
cmc
cmp
pop
xor
bound
into
fcoms
hlt
inc
push
adc
sarb
sahf
cmp
mov
sahf
sub
xchg
push
push
mov
outsb
ret
push
das
test
nop
outsb
pop
push
ja
insl
cmp
enter
lds
sbb
xor
inc
jg
add
mov
adc
and
add
jge
cltd
jge
rolb
cmp
cli
mov
pop
stos
mov
jg
dec
sbb
mov
cmpsl
movsb
pop
repz
and
dec
cmp
mov
inc
in
sbb
lods
adc
fadds
jg
loopew
mov
imul
xchg
test
xor
jmp
xor
xchg
cmpsb
jae
mov
mov
cmpsl
aam
std
mov
int3
mov
or
xchg
call
cmp
fstpl
ja
fs
flds
sub
adc
shll
ss
sub
je
outsb
daa
sub
scas
sbb
dec
lods
lea
sbb
push
fidivl
and
insb
inc
std
je
pusha
inc
cs
stc
mov
ret
pop
insl
fwait
and
fldenv
jg
stos
fisttpll
and
inc
ret
pusha
pop
mov
xor
data16
mov
ds
adc
cmpsb
ljmp
xchg
jb
jo
or
xchg
shll
mov
repz
or
dec
jb
sahf
dec
jo
addr16
popa
lods
cmp
push
push
push
rolb
in
adc
xchg
mov
lret
pop
inc
dec
insl
lcall
fistps
testb
js
xor
icebp
mov
xchg
jg
psrad
cmpsl
jbe,pn
icebp
sub
cmp
out
sub
je
sbb
loop
mov
push
or
rclb
cmpsl
add
pop
xchg
xor
out
dec
dec
adc
mov
jae
push
rcll
adc
fildll
or
inc
pop
mov
enter
ss
push
or
aam
rcr
roll
jne
sbb
lods
pop
cmp
repz
fidivrl
js
jo
outsb
inc
lock
js
push
fwait
lea
push
fistps
sub
fdivrs
push
or
mov
orb
es
inc
fldenv
ja
or
lret
movsb
jmp
dec
add
pop
loop
and
dec
xchg
add
jns
lcall
enter
or
cmc
xor
cld
or
add
add
iret
or
std
fcmovu
lahf
jb
cmp
pop
rorb
ja
inc
xchg
in
insb
adc
sbb
and
subb
inc
divl
and
cwtl
xor
sbb
push
in
jbe
sub
or
test
and
adc
mov
test
mov
jns
pop
pop
addb
loopne
mov
jae
movsl
ss
mov
les
xchg
stos
pushf
or
xchg
clc
or
push
cwtl
push
or
mov
cld
mov
xchg
and
addl
out
ds
xchg
jl
push
xchg
push
jmp
loopne
pop
sub
push
ljmp
pop
or
xor
ss
fs
sbb
lods
neg
jge
sbb
adc
imulb
pusha
lock
xor
out
push
mov
mov
scas
push
jle
dec
sub
sub
int
push
mov
scas
inc
and
andl
addr16
inc
aad
popf
adc
fistpl
xor
xchg
aaa
add
fs
jmp
or
insb
mov
and
push
sbbl
std
mov
xchg
mov
std
gs
lret
adc
sub
mov
inc
ds
repz
adc
mov
mov
subl
imul
sbb
mov
or
pop
cld
push
mov
pop
cmp
aas
test
das
aad
shrl
loopne,pn
repnz
ja
xchg
inc
dec
fcoml
shll
call
jnp
addr16
mov
and
lahf
adc
add
lods
xchg
loope
nop
inc
icebp
or
dec
call
pop
mov
sbb
gs
xchg
insb
jge
dec
in
not
jns
sahf
imul
inc
mov
xchg
gs
xor
popf
cmp
pop
pop
push
push
fcoms
adc
ds
push
xchg
aam
call
leave
movsb
mov
sbbb
cltd
in
cmp
sbb
sbb
xor
xchg
jmp
mov
fsubl
xchg
cmc
sti
js
mov
add
pop
fidivrl
mov
push
cld
scas
or
insl
dec
fidivl
xor
xchg
mov
sub
dec
and
pop
loope
inc
sti
or
cltd
mov
movsb
adc
repnz
jp
ret
xchg
mov
cmpsb
xchg
push
mov
rclb
jb
insb
repz
pop
adc
sbb
mov
aam
pop
and
movsl
out
lret
pop
cli
hlt
popf
dec
ret
daa
inc
pop
movsl
subl
sub
mov
outsl
mov
stos
add
movsb
dec
aaa
jb
imul
mov
inc
xchg
cmpsl
std
mov
and
lahf
fsubl
jnp
es
popf
xlat
mov
stos
jmp
push
icebp
aas
movsb
adc
testb
and
cmp
dec
xchg
outsl
sbb
out
ds
movsl
out
movsl
jno
into
xchg
into
js
add
loope
rcrb
fidivrs
fstl
inc
sub
sbb
dec
xor
dec
jo
mov
jb
adc
insb
mulb
fbld
xchg
xchg
sub
test
cld
imull
push
int3
sub
pop
mov
xor
add
std
jl
fstpt
neg
popa
xchg
ja
xor
add
xchg
stc
testl
push
test
pop
xchg
stos
and
dec
std
stos
mov
movsl
push
leave
jno
insb
leave
push
sub
or
int
testl
push
cmp
add
mov
xor
push
push
add
addr16
movsb
and
inc
cltd
mov
aad
adc
out
mov
ficomps
and
rsqrtps
and
xlat
rcll
inc
push
xchg
ficomps
ss
adc
push
lds
jne
imul
movsb
loop
xchg
movsl
nopl
fxch
dec
mov
pop
add
ja
or
int3
lcall
jmp
xor
stos
mov
adc
xchg
aam
xor
inc
mov
stc
mov
cmc
mov
cmp
ret
xchg
pop
mov
adc
mov
mov
jne
scas
xchg
xchg
cmp
mov
int
or
dec
add
dec
mov
or
int
fwait
dec
push
repnz
jo
fnstcw
cmp
rcll
orb
sahf
or
jp
pop
mov
mov
push
cmp
outsb
inc
repnz
fisubl
xchg
mov
sbb
jne
inc
dec
push
xchg
and
test
into
cmpsl
or
mov
mov
scas
dec
add
adc
jmp
into
das
xor
aad
jl
lods
mov
stc
xchg
stos
sahf
inc
xor
imull
pop
xchg
add
movsb
test
push
push
jl
pusha
arpl
notl
pop
test
int3
pop
adc
loope
xchg
cltd
pushf
push
push
mov
test
ljmp
mov
sbb
mov
jmp
sbb
sar
and
inc
and
mov
mov
xchg
push
xor
xorb
sbb
idivb
sbb
inc
sub
outsb
and
ss
cmp
mov
int3
sbbl
jno
inc
cli
sub
into
faddl
lcall
and
push
cmp
stos
aad
hlt
jmp
push
mov
adc
dec
out
mov
ljmp
xlat
cmpsl
mov
stos
int
mov
ret
xor
jns
call
movsl
fs
adc
and
aas
fmull
inc
push
xchg
push
inc
push
shlb
sbb
sbb
dec
ret
mov
iret
scas
aad
inc
inc
mov
imul
ljmp
dec
cli
pop
mov
sahf
mov
fmull
xchg
loop
cltd
in
icebp
es
pop
or
fcmovbe
ret
mov
mul
push
sub
lret
push
sbb
mov
loop
imul
xchg
lods
nop
sub
cltd
mov
outsl
jecxz
incb
xor
mov
cmpl
add
xor
jg
data16
adc
in
pop
sub
mov
pushf
insb
shl
adc
es
cltd
mov
enter
adc
and
pop
sub
push
mov
mov
stos
add
shrl
dec
inc
insb
and
pop
out
cs
push
cmp
test
jo
mov
imul
sbb
addb
xor
and
fstpl
xchg
das
pop
jnp
mov
repnz
adc
out
jns
test
lret
sub
lods
subb
sbb
jecxz
adc
jb
pop
sub
mov
rcl
mull
jecxz
jmp
xor
in
popa
mov
jbe
ror
push
or
cmp
ret
adc
les
icebp
insb
dec
pop
cltd
iret
ret
lcall
scas
das
jmp
movsb
jno
aaa
loop
mov
xchg
xor
mov
and
adc
cmc
lret
and
xor
mov
mov
or
mov
xlat
mov
add
mov
lock
inc
mov
movsb
pop
int3
loop
dec
movsl
popf
pop
jle
xchg
adc
mov
in
cmpsl
rclb
leave
ja
test
ljmp
push
mov
dec
dec
mov
in
ds
lods
pop
cs
mov
pushf
inc
orl
mov
xor
sbb
dec
mov
es
lea
mov
pop
dec
stos
jae
fmull
or
sahf
inc
enter
lock
jno
cmp
sub
mov
outsl
adc
cmc
push
insl
mov
pop
adc
or
xlat
xchg
popa
mov
in
jno
leave
mov
leave
adc
push
jb,pt
out
add
xchg
shrb
std
push
push
inc
lods
fdivs
sbb
out
hlt
cmc
mov
pop
fs
js
or
fwait
cmp
or
sub
sti
dec
popf
mov
bound
daa
out
sbb
je
loope
cmp
sahf
dec
mov
into
push
fs
mov
aad
pushf
ret
in
fs
mov
out
pop
out
mov
push
sub
dec
mov
xor
iret
mov
or
mov
sbb
mov
dec
repnz
cmp
jno
daa
lret
sti
adc
ret
and
daa
adc
int
mov
jge
test
push
std
ljmp
inc
out
ret
add
and
test
push
stc
stos
mov
clc
ds
popf
ss
loope
pop
dec
mov
les
pop
mov
jle
and
test
mov
cmp
dec
dec
shl
imul
jmp
mov
lret
mov
pop
aas
negb
lds
cmp
xchg
xor
mov
push
aam
testb
lods
je
xor
cwtl
loope
pop
dec
xchg
ret
fwait
mov
mov
cmp
add
outsl
shrl
add
xchg
jnp
jmp
nop
sbb
mov
aam
test
insl
jge
add
stos
xor
pop
push
scas
rcrb
or
push
xor
test
add
push
xor
jl
lret
hlt
pop
outsb
shlb
pop
test
shl
push
dec
sub
cmp
pushf
or
xchg
fprem1
fnstenv
xchg
mov
lds
dec
pop
mov
aaa
arpl
pop
xchg
test
mov
bound
mov
mov
xor
nop
adc
bound
adc
xchg
xor
shl
lcall
inc
push
pop
ret
mov
sti
roll
push
in
mov
out
aas
cmp
sbb
cli
jmp
inc
pop
fidivs
lods
scas
dec
fisttps
leave
push
pusha
jmp
aad
adc
leave
repz
pop
lret
addr16
cwtl
inc
cmp
dec
jne
cs
push
pop
imul
std
sub
mov
mov
cli
fsubrl
mov
push
arpl
adc
push
cmp
pop
jae
stos
sub
mov
jmp
repz
imul
loopne
sub
lret
repnz
cmpsl
jae
jle
xchg
sar
test
sahf
add
pop
std
repz
xor
shrb
js
or
lea
movsb
pop
sarl
fidivs
adc
aam
pop
test
cmp
scas
movsb
arpl
cmpsb
movsl
lret
pop
mov
xchg
add
pushf
pop
xchg
stc
cmp
daa
mov
pop
dec
aad
sti
mov
movsb
push
arpl
push
ss
xchg
scas
sbb
push
pop
stos
insl
js
loopne
repz
xchg
push
addb
add
jmp
push
add
scas
mov
jp
push
pop
inc
push
cmp
test
pop
addr16
mov
sbb
ret
shlb
sarb
mov
xchg
in
jb
mov
jmp
sarb
mov
mov
jle
lret
pop
mov
imul
jne
js
cltd
cwtl
aam
push
or
xchg
push
jg
rorb
and
mov
ret
push
adc
movsb
lcall
out
iret
je
cmp
add
rorl
push
sub
lret
daa
sbb
repz
inc
arpl
outsb
add
cmp
jb
js
pushl
test
mov
fdivrs
and
xor
lods
push
add
xchg
jbe
sub
jp
add
pop
lea
lret
stc
arpl
xchg
cmp
pextrw
inc
xor
lea
ljmpw
pop
hlt
push
fcomps
and
jl
mov
aad
and
clc
clc
mov
mov
jb
mov
jge
out
js
mov
test
pop
fadds
popf
push
inc
adc
adc
lds
sti
bnd
lahf
jmp
mov
mov
imul
popf
hlt
in
repz
out
xor
sbb
outsb
icebp
jns
sub
mov
xor
sub
movsb
inc
jno
mov
fadds
adc
lahf
xchg
or
xor
add
jge
mov
adc
dec
push
and
push
filds
mov
dec
leave
enter
cwtl
sub
jle
pop
sbb
pop
cwtl
lods
xor
cwtl
xchg
push
xor
mov
fwait
or
popf
cli
jae
divb
lret
xchg
jnp
out
pop
lret
adc
ds
js
mov
xchg
outsl
jg
pop
lea
mov
push
outsb
movsl
fs
fs
mov
insb
orb
or
add
leave
fs
push
pushf
out
sbb
inc
xchg
cmpsl
movsb
loop
and
sti
xlat
movsb
mov
nop
lock
insl
loop
fwait
mov
xor
jle
jne
xchg
adc
inc
cli
mov
vpavgb
pusha
sub
jno
clc
test
shlb
push
add
shrl
std
pop
sti
movsl
cmp
jne
mov
xor
jmp
dec
xchg
mov
shr
ret
ss
sbb
mov
ffree
pop
aas
je
push
inc
imul
push
sbbb
sahf
inc
stos
xchg
mov
mov
subl
in
sbb
pop
adc
pop
add
mov
mov
leave
ja
inc
cmc
or
lock
mov
inc
pop
jo,pt
add
cmpsb
dec
adc
clc
pop
mov
and
push
lcall
aas
push
nop
mov
cwtl
and
xchg
in
fstpt
ret
fnsave
jbe
ss
flds
pop
lret
shr
inc
mov
and
xor
cmc
sub
leave
xchg
outsl
jge
popf
les
das
loop
sub
and
fwait
mov
mov
dec
xchg
mov
adc
sbb
loop
aaa
sub
add
in
push
push
push
adc
ja
cmp
rcrb
loopne
fimull
enter
add
mov
xor
insb
in
and
push
dec
test
jo
sub
xchg
out
pop
decb
xchg
dec
mov
xor
dec
push
daa
and
jg
or
aas
stc
sbbl
dec
outsl
test
adc
inc
ljmp
add
push
pop
clc
pop
cmp
outsb
and
out
faddl
ljmp
or
lret
mov
mov
jecxz
add
xchg
fsubrs
mov
dec
mov
pusha
test
sub
push
cmp
insl
cmpsb
xchg
push
pmaxub
into
inc
cmp
call
mov
cmp
sub
test
repnz
test
mov
nop
lret
jne
jmp
pop
xchg
cwtl
stos
pop
mov
mov
mov
push
lock
mov
cwtl
push
icebp
pop
adc
or
push
push
xchg
add
sbb
movsb
call
sub
adc
xor
iret
jl
in
gs
roll
loope
dec
and
loop
hlt
js
sbb
jge
mov
sbb
pop
add
out
sahf
rorb
fbld
dec
das
sbb
xor
fcmovne
xchg
pop
push
cmp
and
neg
adc
divb
xchg
mov
sub
ja
lahf
push
pop
pop
mov
push
imul
shrl
lcall
push
adc
and
nop
icebp
das
mov
sub
call
loopne
lods
das
in
mov
jo
pop
mov
cmp
sub
inc
xor
mov
sbb
lret
sub
out
mov
js
cmp
aam
pop
lds
xchg
ret
lea
mov
les
into
call
imul
or
stos
movsl
push
mov
lcall
push
stc
mov
sub
push
xchg
rorb
and
fsub
cmp
popf
roll
aaa
insl
movsb
push
jl
das
inc
aaa
jae
lcall
ret
sub
jno
mov
stc
cmpsl
mov
imul
test
jae
fdivrs
sbb
rol
decl
popa
out
push
fs
add
pop
jl
sub
fldenv
pop
lods
fbld
lahf
mov
inc
aaa
pop
icebp
dec
f2xm1
cmp
pop
pop
in
dec
mov
inc
aas
ljmp
xor
shlb
xchg
push
ret
into
inc
push
mov
xor
in
call
jbe
call
or
pusha
loop
sub
add
push
adc
inc
xchg
lret
ficomps
out
rcll
sub
or
push
pushl
movsl
test
addr16
sub
or
sub
inc
mov
icebp
std
adc
mov
add
sbb
jae
imul
outsb
in
das
imul
mov
jo
mov
pop
test
lods
push
cmp
push
popa
sbb
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
jmp
aam
sbb
test
mov
jns
pop
pop
jp
push
inc
cmp
xchg
adc
pop
jmp
outsl
dec
or
lods
rcr
mov
push
pop
or
in
dec
enter
int3
xor
into
shrl
stos
add
xchg
mov
sbbl
mov
add
aas
mov
dec
dec
nop
out
add
cli
insl
imul
mov
adc
bnd
adc
and
lea
hlt
aaa
push
fmul
clc
adc
inc
sbb
aaa
or
xchg
push
rcl
xchg
in
sbb
jg
xchg
pop
lods
in
push
pop
pop
push
inc
sahf
sbb
pop
cmp
addl
inc
sub
lods
imul
das
cmpsl
shld
rcrl
jl
xchg
lods
mov
xchg
or
or
gs
xchg
loop
mov
fcompl
jns
jl
call
fldenv
bound
mov
pop
lcall
xchg
bound
pushf
or
mov
rcl
repnz
pop
push
xchg
cld
adc
dec
adc
divl
add
mov
mov
dec
lock
sidtl
or
call
pop
dec
mov
std
movsl
popf
and
sbb
popa
test
loope
mov
jno
inc
in
xchg
scas
jae
shlb
cmp
movsb
dec
xor
pop
iret
jne
test
es
bound
jg
mov
clc
mov
add
add
inc
add
inc
jo
lcall
repnz
cmpsl
push
push
jne
pop
addr16
mov
insl
mov
mov
stos
pop
scas
cltd
sbb
xchg
add
push
in
xor
movsl
sbb
fsubl
into
jne
inc
int3
push
inc
or
add
and
adc
inc
xor
mov
lea
push
idivb
cmp
ds
mov
fdivp
test
ret
pushf
dec
test
xchg
js
repnz
iret
pop
push
mov
mov
and
and
pop
movl
push
mov
adc
push
mov
stos
pusha
push
mov
outsb
pushf
insb
jae
cmp
stc
add
imul
test
aad
push
jnp
pop
out
inc
adc
jl
outsb
or
bound
add
cmp
jp
xchg
stc
pop
jl
mov
cmp
jecxz
adc
mov
cmp
inc
cmpsb
cmp
pop
fildll
arpl
and
dec
ja
adc
or
gs
mov
movsl
or
inc
jl
lcall
sarb
or
cmpl
push
inc
xchg
jg
fldenv
std
cmpb
lret
ss
aam
xor
jmp
mov
xor
popa
loopne
nop
sub
adc
scas
mov
or
mov
or
iret
adc
adc
mov
fidivl
popf
in
out
mov
jae
xchg
fiaddl
or
outsb
rorl
lods
in
fadd
mov
mov
cmp
push
push
cmc
stc
cmp
sahf
xchg
and
loop
aaa
jg
xchg
jle
mov
dec
adc
inc
cmp
mov
jno
mov
iret
repnz
jle
mov
shll
xor
jp
adc
push
int
xchg
cmp
xchg
fwait
iret
ss
jns
cmpsl
fucom
pop
jge
int3
idiv
add
mov
subb
call
wbinvd
jne
mov
jno
cld
fwait
cmc
cmpsl
sti
sbb
aaa
andb
inc
push
test
inc
xor
js
cmpsb
pop
sub
mov
popf
pop
sub
mov
icebp
addr16
mov
mov
aas
cmp
or
fldl
jae
cwtl
mov
adc
imul
add
test
cli
into
in
mov
movsb
loopne
inc
mov
ja
out
xchg
mov
and
pop
adc
dec
sub
sarl
pop
cmpsb
scas
adcl
or
push
arpl
sbb
fs
mov
jp
lret
in
push
movsb
mov
jecxz,pt
jmp
fdivrl
dec
hlt
lods
hlt
mov
ficoms
ja
dec
sub
mov
and
xchg
loop
add
push
xlat
lds
outsl
or
pusha
inc
xor
or
lahf
xor
mov
push
mov
or
hlt
or
mov
xlat
test
scas
jg
sbb
xchg
sbb
mov
xor
or
mov
test
pop
and
aaa
sub
pop
jno
and
mov
adc
inc
frstor
fisttpl
xor
lret
loopne
xor
sti
and
push
out
movsl
sbb
shlb
inc
and
push
cmc
dec
cs
fcmove
jo
jo
sete
sti
and
jne
jle
mov
sbb
shll
fwait
inc
pop
xor
mov
test
test
ja
es
sbb
popf
mov
movsl
bound
adc
mov
dec
comiss
es
outsl
add
imul
mov
jae
mov
xchg
jge
sahf
xlat
pop
test
aas
xorb
stc
and
pop
ss
or
in
xchg
loope
jg
jb
out
in
xchg
mov
push
push
lcall
loope
imul
xchg
xor
mov
loop
sti
rcr
xor
in
sub
adc
test
push
hlt
movb
cmp
cmpb
xchg
or
xchg
and
in
scas
jb
pop
paddusw
lret
push
test
test
inc
ret
cmp
mov
dec
test
mov
icebp
je
test
daa
sub
dec
mov
jge
fnstsw
lods
sbb
decb
subb
xor
in
mov
loopne
mov
lds
imul
xchg
nop
jns
xchg
ret
xchg
sbb
outsl
enter
jbe
fimull
adc
lock
dec
push
jb
cmp
sub
pop
mov
jge
shl
sbb
gs
lea
or
stos
addb
repz
push
jp
mov
pop
test
mov
dec
dec
jecxz
sub
jo
sub
cli
jecxz
les
push
loop
jno
sbb
mov
icebp
push
xorb
pop
dec
push
sub
lret
ret
push
lahf
test
pop
jl
pop
xchg
ss
icebp
inc
mov
mov
or
insl
lahf
clc
js
add
dec
pop
std
in
clc
inc
scas
sarl
scas
cmpsl
xchg
daa
imul
cltd
jbe
scas
stc
dec
das
xchg
lret
pusha
jns
nop
ja
and
cmpsl
clc
sub
ret
ret
loope
pop
aam
sub
popf
jp,pn
leave
popa
loop
xchg
pop
cmpsl
enter
inc
pop
mov
fldcw
sub
dec
aaa
mov
push
or
and
or
test
pop
popf
lds
in
out
sarl
mov
mov
sbb
subb
sbb
xor
sbb
out
clc
sahf
push
mov
shlb
das
lahf
cmp
xchg
ficoms
mov
rorb
dec
cmp
jmp
xorb
sbb
aad
sub
enter
inc
push
inc
mov
mov
out
dec
sti
insb
loopne
repz
lret
sbbl
cltd
stos
jns
sbb
cmp
dec
pop
sub
imul
xor
sbbl
pop
xchg
insl
insl
push
mov
and
push
inc
mov
imul
mov
dec
mov
and
cmp
mov
ret
aad
fidivl
scas
mov
add
mov
jg
cmp
outsb
divb
xorb
inc
into
je
mov
or
aas
fwait
push
mul
push
push
fs
jno
mov
rorb
in
add
xchg
or
hlt
imul
test
xchg
or
in
loopne
out
dec
gs
test
iret
sub
cltd
jne
xor
pop
in
lock
rorb
enter
jge
add
sbb
insb
popf
mov
out
adc
lock
jns
jge
out
mov
es
mov
sahf
scas
outsl
pop
ljmp
outsb
sbb
sub
cld
jbe
dec
mov
in
push
jg
add
xchg
addr16
push
sub
mull
adc
ljmp
lcall
iret
test
inc
in
dec
mov
adc
loopne
cmpsb
test
add
jle
jecxz
ror
je
loope
or
pop
out
sub
into
cltd
pushf
das
dec
mov
add
aaa
pop
pop
mov
mov
pop
jb
inc
mov
dec
cmpsb
out
shlb
pusha
hlt
push
inc
fucom
rcrl
adc
push
or
sti
std
mov
and
jbe
xor
fildll
or
cmpsb
icebp
cmp
mov
push
or
into
rcrl
pop
or
push
aas
cmpsl
shlb
test
pop
add
mov
mov
pop
data16
sahf
cmp
or
push
inc
sbbb
sbb
jle
xor
negl
movsb
lods
cmp
sub
push
cs
pop
hlt
dec
jae
test
cmpsl
cmp
pop
or
lods
aam
cmp
inc
int
mov
xor
and
add
dec
repz
mov
sub
xor
call
ret
shrb
bound
popa
call
xchg
es
xor
xchg
push
lods
cmp
dec
xchg
xchg
lahf
lock
jbe
or
fdiv
or
aam
inc
es
jp
lcall
push
aaa
out
pop
sub
jo
adc
leave
inc
inc
pop
sbb
sbb
lock
lods
push
cmpsl
stos
dec
sbb
adc
scas
sbb
pusha
or
pop
push
orb
ds
jp
jnp
jecxz
ljmp
xchg
movsb
add
cmp
mov
bound
cmpsl
add
mov
imul
mov
in
adc
jmp
decl
or
cmp
xchg
imul
adc
sbb
pop
xchg
inc
iret
xchg
jno
and
or
or
es
add
sub
fs
sti
mov
sub
adc
xor
xchg
sbb
cmp
sub
jl
call
arpl
enter
push
stos
movsb
fwait
loope
out
sub
pop
dec
sub
or
adc
dec
fcomps
mov
xchg
pop
mov
mov
adc
sarl
xor
ds
cmp
pusha
bswap
repz
pop
in
fdivrs
pop
and
mov
xor
pop
pop
test
sub
inc
push
imul
adc
lods
jae
popa
lret
add
dec
dec
rolb
lods
cmp
jmp
sahf
jl
test
and
xchg
cmp
pop
fsubrl
bound
lods
add
inc
mov
mov
sub
inc
xlat
xchg
test
jno
cwtl
sbb
sbb
pusha
stos
inc
mov
clc
mov
mov
push
loopne
shll
je
sub
icebp
sub
mov
push
push
popa
das
pusha
xchg
cmp
subb
dec
sbb
adc
movb
inc
lret
das
lods
inc
xlat
out
lret
lock
inc
pop
adc
fstpt
or
jns
mov
sti
xor
add
test
cmp
or
push
mov
rcrb
andnps
add
lea
jecxz
ja
xor
cwtl
inc
dec
insl
aas
aaa
or
rcrl
fldenv
aad
jnp
das
add
xchg
push
jbe
test
jg
cmc
insl
dec
mov
outsb
imul
xor
or
nop
cmc
insl
cmp
cmp
jnp
inc
mov
movsb
xchg
in
cltd
add
inc
cmpsb
inc
push
jns
or
sub
loopne
mov
cmp
inc
pop
xchg
movsb
stc
stc
pop
insl
mov
int
jno
jge
lock
mov
jl
into
or
or
xor
sbb
xchg
dec
xchg
mov
daa
and
clc
and
dec
mov
ds
jge
push
call
inc
push
ret
aam
sbb
rcrl
std
subb
sub
adc
adc
mov
lods
sarl
push
iret
cmpsb
cld
pop
add
pop
data16
sub
arpl
mov
pop
fsubrl
sbb
push
aad
xorl
data16
pushf
jno
push
icebp
sbb
jae
fcompl
xchg
stos
pop
fabs
mov
cmp
sbb
out
shl
test
out
test
or
shll
xchg
sarl
mov
adc
dec
jmp
mov
or
fidivrs
jmp
daa
mov
ss
add
in
dec
xchg
sbb
inc
daa
xchg
jg
test
inc
cmpsl
push
cmc
sbb
ja
ds
pop
sbb
cld
mov
das
cli
mov
test
dec
adc
mov
dec
inc
test
int
dec
and
adc
das
out
and
push
fs
sbb
push
adc
pop
mov
mov
aam
sahf
jecxz
adc
jmp
rcl
xchg
out
lea
push
test
div
push
cmpsl
outsl
rcrl
jbe
in
or
clc
ljmp
or
mov
movsl
or
adc
and
insb
cmp
mov
adc
jno
cmp
out
sub
jp
stc
sbb
je
xchg
inc
sarl
jno
inc
pop
cmp
and
sub
mov
out
cmp
imul
inc
xor
out
xor
jb,pn
nop
fs
test
int3
add
mov
cmc
adc
fldt
or
pop
xor
sub
cmp
mov
inc
scas
and
pop
test
imul
jns
or
stos
data16
cmp
dec
add
pop
lret
inc
in
js
mov
js
loopne
lret
xchg
push
ss
cld
cmp
insb
fcmovne
cmp
dec
mov
aam
outsl
inc
stos
aam
cmpsb
jle
nop
ds
mov
aaa
mov
mov
xchg
mov
ja
lods
stc
popf
jb
dec
out
xor
jne
cltd
mov
sub
and
in
dec
sbb
fucomi
scas
cmp
lcall
xor
call
or
test
push
int
mov
jb
jne
cmc
stos
stos
sub
pop
mov
mov
and
xchg
fimull
fcomps
pop
movsb
sbb
incl
imul
repz
imul
pushf
enter
push
rcr
out
lret
adc
sub
mov
mov
fwait
int3
or
cmpb
dec
icebp
cltd
gs
and
cmpsb
jns
into
pop
sbb
or
xchg
inc
into
sbb
loopne
lods
cmp
pop
sbb
fmul
mov
imul
push
jmp
jge
cwtl
pop
out
adc
cmpsb
mov
push
pop
ret
movsl
ficoml
hlt
insl
push
mov
iret
decb
and
inc
loope
mov
inc
xchg
mov
imul
mov
mov
or
mov
stos
bound
lret
inc
jg
mov
loop
fwait
jbe
push
lret
jecxz
xchg
sti
pop
outsb
inc
insl
pop
shrl
jne
loope
outsb
arpl
cmpsb
aaa
mov
mov
push
and
jecxz
jecxz
jno,pt
stos
jae
test
mov
fdivs
adc
sbbb
fcmovnb
jbe
pusha
in
push
insl
aas
and
movsl
fnstcw
pushf
sub
and
adc
int3
outsb
in
adc
push
aas
ret
in
pusha
sub
fistl
fimull
pusha
fnstsw
cmpsb
jl
data16
stc
outsl
mov
lahf
repnz
sbb
mov
xchg
in
mov
loope
aam
push
sbb
or
into
push
frstor
inc
frstor
sub
lret
push
inc
pop
mov
xor
pusha
jb
add
mov
push
push
divb
bound
mov
fdivrl
and
pop
aad
dec
imul
movsb
mov
loop
inc
sarb
sbb
sti
and
imul
leave
in
pusha
jns
mov
adc
cmp
xor
sbb
clc
push
jbe
std
pop
or
hlt
sub
adcb
sub
jmp
push
fldt
adc
roll
or
insb
cld
ljmp
lods
xor
inc
test
push
arpl
scas
mov
xor
jno
jl
pop
jno
mov
sub
sarb
adc
mov
xor
leave
ljmp
sbb
arpl
outsb
sbb
lcall
outsb
pushf
inc
rcrb
cltd
push
or
call
jno
or
mov
aas
dec
adc
xor
sahf
inc
sbb
test
jg
xor
vzeroupper
daa
xor
je
dec
push
push
into
imul
adcb
inc
jno
out
out
mov
notl
mov
or
mov
lret
pop
xor
push
push
pop
popa
outsl
mov
stos
adc
pop
cmp
ja
adc
and
fwait
xchg
out
imul
adcb
shl
and
lock
adc
adc
es
jb,pt
cli
adc
cmp
mov
mov
jno
add
sub
xchg
dec
popa
add
sbbl
mov
mov
xor
jns
hlt
in
lds
xor
imul
stos
sarb
mov
std
xchg
mov
cmc
hlt
cmp
repz
shll
add
push
jb
std
jno
push
cmp
push
aam
mov
pop
mov
stos
mov
mov
test
cmp
cld
and
pop
sbb
or
cli
adc
movaps
and
dec
enter
push
xor
xchg
fnstenv
cmp
in
stos
arpl
and
mov
rsqrtps
lret
fistl
popf
dec
xor
cltd
rorb
mov
sub
mov
adc
pop
mov
cmc
cwtl
stos
lret
sti
mov
jp
jl
mov
outsb
dec
cmp
aad
add
cmp
addl
sbb
daa
add
popf
cld
js
or
jp
jno
jno
subl
pushf
adc
jbe
subb
jbe
test
xchg
test
int3
ret
stos
xchg
jo
imul
mov
pop
andb
inc
pop
jle
out
xor
sarl
xor
shlb
xor
lret
sbb
in
outsb
pusha
push
es
sti
cld
sahf
popf
aaa
sbb
adc
xor
test
imul
fsubl
push
pop
push
sbb
jae
je
sbb
or
das
out
sti
shlb
mov
rorl
shrb
and
push
bound
adc
add
or
mov
add
pop
sub
test
mov
mov
das
and
adc
and
mov
dec
sbb
inc
mov
mov
dec
jbe
fcoml
lcall
cmpsb
enter
mov
jo
ret
xchg
pop
add
sbb
ret
je
cld
test
orl
adc
sbb
repz
scas
filds
mov
cmp
stos
lret
ljmp
mov
jnp
repnz
jg
rcr
sub
mov
and
hlt
insl
cmp
xchg
sub
mov
inc
inc
mov
jnp
fcoml
sbb
popf
mov
and
sub
roll
imul
push
xor
enter
xchg
push
test
aaa
imulb
or
shrl
and
xchg
or
dec
mov
xor
pusha
sub
push
jecxz
cwtl
add
pop
pop
iret
sbb
xchg
dec
push
adc
ret
xchg
sub
cltd
jg
push
dec
push
sub
cmp
pop
adc
sahf
fdivrs
stc
cwtl
leave
or
push
xor
stc
cmc
inc
xor
xorb
shrb
xorl
jnp
push
aaa
or
sub
popf
jmp
cmp
jg
aam
lea
jne
lahf
hlt
lds
mov
mov
movsb
sub
jnp
aaa
loopne
jmp
pop
push
sbb
xchg
cmp
lea
lods
addr16
in
sbb
jge
cmpsb
sub
cmpsb
cltd
mov
lret
inc
repnz
jge
and
dec
sbb
call
jne
push
mov
je
loop
xchg
outsl
imul
int
rorl
or
mov
cs
inc
mov
loopne
mov
inc
cwtl
pop
jge
lret
xchg
and
jle
leave
stos
push
mov
cld
aaa
pop
adc
cmp
lea
popf
sbb
out
imul
rcl
ret
mov
bound
testb
cmp
push
rcr
or
add
pop
ljmp
imul
or
jns
add
xchg
leave
vmovddup
dec
pusha
je
jl
sahf
repnz
repnz
dec
and
xor
loop
gs
loopne
mov
mov
in
inc
in
mov
pop
push
ljmp
xchg
jg
shlb
icebp
stc
mov
push
ljmp
add
lahf
cs
add
xor
popa
cs
cmpsl
xchg
inc
inc
mov
pop
mov
arpl
scas
sbb
ret
in
fs
roll
sti
leave
xor
fwait
mov
pop
xchg
or
aaa
aaa
cmp
jp
and
stc
fcoms
push
fdivl
mov
outsb
sbb
cmp
pop
dec
std
mov
pop
cwtl
fmul
in
push
jp
dec
pop
movsb
rclb
add
arpl
fidivs
pop
inc
aaa
gs
rep
push
mov
inc
xchg
jb
cmc
jns
jne
push
pop
pop
sbb
xchg
push
xor
jmp
xor
rclb
xor
ffreep
fwait
sbb
xchg
mov
bound
sbb
daa
outsl
stc
enter
sahf
push
aam
jg
popa
pop
ss
adc
loop
sub
shlb
push
sbb
outsb
lods
mov
fnstcw
cmpsl
pop
je
out
xor
push
fiaddl
sbb
mov
adc
inc
sbb
or
ja
push
xlat
or
ficoms
inc
aaa
daa
mov
call
daa
cmp
add
ds
pusha
xor
dec
in
aas
add
dec
xchg
icebp
xor
movb
int
cmpsl
and
mov
out
and
and
mov
push
adc
and
ds
jns
jg
fistpl
add
xor
ljmp
cmp
mov
sub
movsl
rclb
jnp
movaps
push
fbld
xor
rorb
daa
lock
fiadds
icebp
inc
adc
push
stos
cmpsl
add
call
push
cmpsb
icebp
xchg
fcoms
add
xor
push
iret
mov
mov
lds
and
sti
lods
or
les
out
idivb
shl
popa
rcll
cli
sbb
or
lods
jmp
test
mov
mov
adc
ss
stos
dec
in
imul
dec
push
das
loop
gs
and
cmp
iret
sbb
sbb
stos
rcll
or
jl
xor
xorb
lea
mov
sub
mov
cmp
add
jmp
and
cmp
add
dec
pushl
xor
jbe
scas
cltd
rolb
push
pop
sbb
mov
add
gs
inc
movsb
iret
clc
mov
ljmp
pop
ret
mov
ljmp
idivb
cmp
mov
pop
data16
setns
in
aas
jp
in
pop
mov
mov
loop
sarl
dec
arpl
pushf
aas
data16
fucomp
push
lods
test
movsb
cld
movsl
fimull
scas
xchg
dec
xchg
dec
mov
nop
lea
inc
shl
test
push
dec
iret
xor
call
push
fsubp
dec
cmp
mov
mov
jne
enter
arpl
hlt
adc
jp
enter
sub
add
and
or
push
or
mov
xlat
add
mov
mov
jecxz
sti
mov
jg
mov
in
popf
ss
std
jo
add
inc
mov
mov
fistps
out
jae
ss
cmp
daa
dec
xor
addb
push
outsb
push
dec
push
jle
add
xor
jl
pop
dec
lcall
mov
xchg
add
insb
jo
jecxz
cmp
aaa
addb
sarl
add
in
cmp
out
cmp
ljmp
mov
das
xlat
stc
loopne
push
xchg
in
jns
mov
mov
mov
push
inc
lret
ret
and
push
cli
cmp
pusha
cmp
in
out
push
in
ljmp
sbb
js
aas
fimuls
fidivl
int
jns
and
push
adc
inc
jecxz
xchg
mov
and
mov
insl
xbegin
fwait
mov
fsts
lahf
sbb
ret
lcall
xchg
add
rol
sub
mov
lds
mov
mov
adc
fs
xchg
mov
xchg
fstps
es
insl
in
cmp
mov
push
mov
rclb
mov
jp
or
lods
frstpm(287
outsl
negl
adc
lahf
push
inc
jns
jne
ficompl
push
das
mov
jnp
xchg
sub
push
cmp
cmpsb
js
mov
push
mov
dec
ljmp
fbld
xor
test
out
lahf
je
inc
mov
call
or
ds
pop
aaa
lret
add
jns
movsb
mov
out
fadds
movsb
addr16
dec
insl
and
subb
cmp
scas
xchg
pop
cli
sbb
imul
int
push
xorb
fldl
or
cld
mov
cltd
pop
inc
int3
cmp
loopne
push
inc
rcl
es
xlat
cmp
mov
out
sub
test
push
xchg
es
xor
xchg
ljmp
mov
mov
bound
fildl
fstpl
add
jp
ds
in
adc
cld
jbe
dec
jne
xchg
outsl
jmp
ss
push
hlt
pop
cmp
xor
and
in
insl
xchg
fs
push
jl
lahf
nop
pushf
jne
jbe
shlb
aaa
pop
mov
std
jae
ret
jns
inc
in
adc
xor
subl
idiv
lods
cmp
sub
loopne
shrb
push
dec
mov
sbb
mov
xlat
xchg
mov
loop
adc
les
mov
jecxz
stos
stos
jbe
xchg
and
add
in
jmp
aaa
adc
iret
mov
outsl
mov
xchg
pop
jle
std
in
xchg
mov
xchg
fsubl
dec
mov
and
jae
push
jns
sbb
and
test
or
xchg
cmp
jno
adc
lcall
in
leave
mov
cmc
cld
test
das
mov
movsl
mov
popf
aaa
outsb
push
sub
push
int3
cmp
sbb
std
pusha
sub
divl
xlat
xor
mov
push
fisttpl
dec
jp
loopne
push
cmp
jns
xor
pandn
mov
mov
outsb
pop
sbb
xchg
cmc
mov
xor
xchg
call
int
stos
bound
scas
xchg
sbb
fisttps
decl
ret
or
enter
inc
jmp
ja
fsubrl
mov
and
cld
pop
insb
sahf
clc
fildll
mov
lods
roll
ljmp
push
mov
xchg
add
es
xchg
test
ss
std
sbb
push
clc
inc
xorl
xor
repnz
paddusb
pop
roll
ljmp
adc
in
in
nop
int
sub
sbb
ss
stos
sbb
outsb
sbb
mov
and
inc
push
movsb
rcr
test
dec
push
jl
jno
jp
dec
push
xchg
out
xor
mov
add
mov
push
sub
int
jae
mov
pop
fs
mov
or
in
xchg
push
call
cli
fs
ficompl
fs
mov
enter
fadd
mov
mov
push
into
push
push
add
cmp
outsb
stos
imul
movsb
inc
cmp
imul
push
push
inc
ret
insb
and
in
aam
sbb
xor
bound
sbb
test
adc
and
push
push
and
sub
in
pop
add
mov
in
out
dec
test
das
inc
add
pop
outsb
mov
inc
cltd
mov
ss
inc
lret
mov
mov
xor
mov
scas
push
push
negl
mov
lock
jno
cli
jne
testb
xchg
rcr
shrb
stc
lahf
dec
xchg
out
test
inc
cmpsb
out
icebp
inc
sarb
dec
pop
repnz
addl
fidivl
sbb
hlt
out
mov
cmpsb
push
pand
cmp
adc
lods
stc
cmp
xor
in
mov
lods
mov
fs
pop
jbe
push
mov
cwtl
and
dec
cltd
repnz
int
loopne
dec
cs
cmc
clc
sub
sahf
dec
dec
xlat
xchg
mov
inc
stos
fs
sbb
dec
rorl
mov
rclb
cmpsl
push
pusha
sahf
add
push
ljmp
sbb
fs
mov
inc
inc
inc
push
or
out
mov
cmpsb
and
dec
ljmp
mov
lret
shl
scas
mov
push
test
jl
sub
inc
sub
dec
sarl
cmp
pop
lock
add
cltd
out
es
ja
inc
outsl
popf
sub
ret
les
jnp
int3
mov
mov
hlt
jmp
imul
sahf
cli
push
shrb
es
dec
mov
js
jbe
sarl
sub
fisubrl
inc
dec
test
aad
mov
in
outsb
incb
dec
mov
push
sub
inc
cmp
paddusb
sub
xchg
push
xor
add
or
jb
sub
mov
cmovbe
icebp
mov
test
jg
push
mov
push
fs
jge
out
mov
jne
pop
rcl
scas
jns
mov
sti
xchg
out
sub
fldenv
mov
clc
mov
iret
imul
mov
cmp
ret
loopne
fwait
xchg
mov
and
fcoms
lods
push
mov
pop
jg
pop
dec
sub
repz
repnz
pop
or
ret
mov
pop
xchg
xor
movsl
jp
xor
lcall
push
adc
or
pop
aaa
fcmove
jmp
pop
push
adc
in
lods
xlat
loope
mov
push
shrb
cmp
xchg
test
inc
push
sbb
loope
ret
mov
cmc
jmp
outsl
fnstsw
inc
lock
push
lock
xor
xchg
pushw
mov
and
add
pusha
test
shll
jo
inc
sarb
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
inc
push
xor
push
mov
mov
add
mov
decl
mov
mov
mov
xor
movl
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
movl
sub
mov
or
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xorl
add
mov
mov
sub
mov
orl
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
call
cmpl
jb
mov
addl
mov
adc
sub
or
mov
orl
subl
mov
mov
sbb
sub
adc
mov
add
orl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
xor
add
dec
mov
jmp
mov
mov
sub
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
jmp
jge
pop
add
sti
jge
jne
pop
in
add
pop
jns
pop
pop
jp
push
sarl
sbbb
jmp
fsts
fildll
movsb
cmpsb
fsubr
pusha
arpl
in
adc
out
xchg
popa
pop
and
mov
cmc
xor
into
ret
pop
pop
nop
lods
cmp
jle
popf
loopne
pushf
xchg
ja
or
xor
out
iret
push
fildll
mov
mov
push
push
xchg
leave
pushf
pop
and
mov
mov
push
cld
push
fprem
cld
es
addr16
or
mov
xchg
das
mov
dec
incl
mov
lods
xor
cld
fwait
scas
jmp
adc
imull
scas
aas
xchg
add
and
and
xchg
pop
ret
xchg
inc
stos
fs
add
lods
imulb
shll
push
lods
xor
and
test
nop
xchg
sbb
scas
inc
shll
dec
xor
fcoms
mov
jge
popa
andl
cmp
mov
jnp
ja
mov
xchg
push
cwtl
jmp
loope
mov
sar
insb
mov
dec
out
stos
mov
inc
popf
aam
out
sbb
inc
mov
shll
push
jecxz
enter
es
jp
xchg
mov
adc
jae
imul
pop
sub
xor
imul
mov
imul
push
pop
jb
in
inc
sub
movsb
or
dec
out
cmpsb
bound
jmp
popf
jo
idivb
jnp
mov
shlb
jnp
out
sub
fildll
out
and
cmc
lcall
jb
notb
and
orl
mov
push
push
popa
imul
add
std
lret
jle
dec
jl
mov
pop
fucom
das
bnd
jecxz
test
pop
push
and
ss
pop
xchg
push
cmp
cmc
push
mov
movsl
aaa
je
adc
je
pop
out
test
outsl
or
ret
pushf
rolb
push
ret
dec
mov
adc
scas
sbb
mov
pushf
and
mov
cmp
pop
loope
add
sti
mov
sbb
xchg
sub
adc
jmp
and
test
dec
add
cmp
sub
mov
or
inc
dec
fpatan
adc
jmp
pop
incb
or
jo
int
mov
imul
out
insl
int
mov
pop
cmp
xor
bound
out
scas
xchg
lods
xchg
dec
test
mov
add
sub
leave
rcrb
xchg
jo
cld
or
pop
rcpps
xchg
push
scas
addb
dec
xchg
testl
inc
in
adc
lret
pop
push
enter
push
daa
add
or
xor
xchg
je
inc
scas
clc
rorb
out
jne
mov
mov
and
lods
push
lds
into
lahf
xor
cmpsb
repz
shrl
mov
mov
and
pushf
jb
cwtl
out
push
jp
filds
sbb
inc
notl
movsb
pop
ljmp
mov
fiaddl
fdivl
adc
ljmp
fcoml
int3
mov
cli
mov
jle
aas
loope
mov
repz
test
mov
xchg
bound
jne
mov
mov
sysenter
arpl
jne
adc
xor
push
mov
inc
sbbb
test
enter
cmp
dec
lcall
inc
xor
cld
jno
cli
push
jne
push
inc
inc
arpl
xchg
mov
fcomi
pop
mov
push
gs
outsl
adc
les
ret
int3
xchg
enter
dec
xchg
popf
pmaddwd
ret
leave
cli
ja
fisttpl
mov
pop
movl
jae
in
adc
xchg
sub
mov
jbe
ret
xor
jmp
test
jmp
and
or
xor
add
sub
mov
cmpl
cmc
test
aam
sub
mov
sub
push
fsubl
xor
sbb
mulb
lods
push
pop
and
push
aas
js
or
out
je
xchg
dec
push
or
push
xor
ja
and
mov
cli
and
mov
pop
dec
adcl
xor
dec
jecxz
mov
push
or
mov
dec
sub
sbbl
sbb
std
popa
and
xchg
into
iret
scas
pop
sub
cmp
clc
inc
lret
xor
xchg
xchg
int3
sub
sub
das
inc
movups
dec
push
xchg
pop
pop
std
outsb
mov
and
mov
out
sbb
in
push
mov
out
aam
push
mov
lock
push
adc
iret
push
test
pop
in
push
mov
jmp
inc
sub
sbb
cmp
test
test
mov
mov
sub
pop
sub
add
cmp
cwtl
icebp
pop
popa
mov
mov
orb
xchg
fisttpl
adc
add
mov
js
es
push
xchg
cmpl
repnz
clc
repnz
fwait
sti
mov
jge
add
aaa
xor
adc
sbb
imul
push
jle
jbe
outsl
cmp
imul
inc
pop
iret
rcll
imul
add
and
mov
stos
push
jnp
push
jmp
adc
dec
dec
cmpsb
sti
movsb
cld
lahf
insb
sti
test
mov
xchg
popw
fnstcw
dec
loope
ret
dec
cmpsl
arpl
push
jae
out
out
xchg
aas
sub
mov
fidivs
gs
mov
xor
xor
sarl
mov
fbstp
sti
sahf
or
mov
out
shr
adc
fiadds
pushl
cmp
js
je
push
dec
out
push
adc
mov
push
adc
ss
vhsubpd
and
jg
cmpsl
lock
inc
xor
lods
jb
addb
pop
movsl
pop
daa
or
xchg
pop
test
gs
and
xrelease
sub
and
rcll
sbb
and
call
push
cmp
adc
test
ret
loope
iret
jns
inc
cmp
xchg
push
cmp
add
xorl
sarl
and
out
add
or
jo
mov
int
mul
rorb
cs
les
sbb
push
adc
jbe
iret
leave
ss
es
sahf
shll
pop
jecxz
call
add
insl
je
jmp
adc
mov
lods
lods
insb
filds
gs
std
fwait
aaa
enter
mov
pop
sub
lods
cld
sub
arpl
lock
inc
jge
sbb
lods
xor
out
stos
outsb
ret
sub
pop
jmp
add
jg
insl
or
sub
scas
ficoms
fadd
inc
sub
xor
sahf
sahf
xor
lret
pushf
stos
dec
lock
fld
call
mov
repz
push
imul
test
ret
mov
popa
loop
cmp
cld
xlat
jno
mov
loope
mov
loop
mov
call
cmpsb
xchg
test
mov
fldenv
fcompl
icebp
dec
add
xchg
das
test
xor
int3
adc
nop
pushf
clc
or
repnz
testl
mov
out
out
lahf
pushw
jo
or
sahf
ror
pop
add
xlat
push
sti
insb
roll
xchg
fst
mov
push
mov
hlt
cwtl
enter
pop
mov
js
push
test
dec
and
je
js
push
in
repnz
mov
mov
in
lahf
sub
pop
sub
scas
or
mov
jne
lahf
inc
jb
cmp
aad
and
ret
mov
icebp
aaa
int
out
or
insb
jnp
dec
sbb
jle
leave
mov
in
hlt
lock
mov
sub
dec
mov
inc
jae
scas
mov
insl
xorb
mov
mov
push
insl
lea
fs
sub
inc
inc
test
lds
pushl
fs
outsl
test
xor
mov
and
xchg
push
mov
test
cmp
data16
not
scas
fsubr
hlt
sub
adc
test
and
dec
test
stos
lcall
jmp
xor
in
mov
dec
jnp
rcrl
push
in
adcb
lea
jne
pop
mov
mov
aam
inc
addr16
test
lret
or
inc
xor
insb
dec
das
pop
bound
mov
mov
sbb
les
xlat
mov
cmp
push
test
xor
inc
jg
sub
pop
add
adc
cmp
add
js
inc
addb
mov
fisubrl
mov
pop
test
xor
pop
rorl
aam
mov
and
stos
lock
popf
dec
inc
iret
add
loope
mov
test
push
mov
mov
or
data16
int3
mov
fst
mov
inc
add
fstpl
push
negl
or
adc
mov
ljmp
cmc
adc
dec
pop
into
jnp
pop
jo
insl
jl
icebp
mov
icebp
data16
mov
xchg
inc
pop
xchg
jle
sbb
outsl
shrb
xchg
dec
adc
push
and
mov
xchg
mov
cld
fwait
cld
push
loopne
cltd
inc
dec
mov
sarb
xchg
cld
test
pop
inc
jle
mov
push
fldenv
push
inc
fdiv
and
xchg
mov
movsl
xor
cmp
addr16
das
mov
cmpsb
stos
add
scas
mov
sbb
jbe
sbb
push
mov
mov
mov
ret
mov
bound
mov
cmp
ret
enter
mov
fwait
sub
push
test
iret
ret
ds
pop
jecxz
imul
sub
ret
xchg
dec
sub
cwtl
pop
push
push
das
push
les
stos
mov
push
ret
sbb
adc
cmp
fs
lret
mov
gs
sub
jno
ret
inc
adc
dec
and
movsb
popf
inc
bound
outsl
xor
and
mov
mov
inc
shr
or
outsl
mov
shll
or
mov
into
mov
mov
xor
ficomps
sub
xchg
jmp
xchg
das
and
and
xchg
sub
popf
nop
jge
pop
or
inc
cltd
xchg
sub
sahf
lds
and
aas
movsb
iret
jae
out
xor
mov
pop
sti
popa
jo
cli
orl
jbe
mov
loope
add
enter
lods
insb
lods
cld
mov
xchg
les
cmpsl
dec
aad
lea
lock
lret
enter
imul
mov
jge
mov
push
mov
outsb
mov
lcall
lea
and
and
stos
xchg
sub
movsl
cmp
add
jmp
enter
push
pop
inc
pcmpgtb
dec
mov
and
cmpsl
inc
adc
ret
sub
xlat
rcr
dec
lock
divl
popl
sbb
pop
stos
lods
aaa
dec
outsb
adc
bound
sbb
test
dec
in
lea
mov
mov
ret
xor
ljmp
outsb
adcb
ja
sbb
lea
add
inc
stc
mov
add
sub
mov
xor
or
adc
mov
xchg
inc
daa
mov
mov
jnp
mov
inc
mov
xchg
subb
nop
popf
imul
daa
pop
and
ret
inc
pop
add
pop
push
cmc
pushf
test
pop
rolb
xchg
pop
test
rorl
lods
dec
stc
mov
mov
pop
mov
and
jns
add
add
cmp
out
inc
andl
jmp
jl
fistps
test
or
icebp
xchg
fnstenv
lea
pop
xchg
sub
xchg
sub
out
pusha
dec
cmc
xchg
xchg
xor
mov
and
add
movsl
shl
jo
dec
int3
sub
outsb
dec
outsl
or
dec
out
insl
enter
cld
aas
sbb
mov
hlt
jmp
out
mov
or
in
loope
int
xchg
cltd
shrb
pop
xchg
xchg
loopne
out
xor
xchg
inc
mov
or
mov
push
test
push
incb
lret
cs
aaa
mov
mov
pop
xchg
ret
test
je
rorb
fwait
rorb
les
add
insb
std
mov
jmp
gs
sbb
push
insl
dec
outsl
jbe
add
lock
mov
adc
dec
mov
je
mov
add
fdivrs
jb
adc
iret
popf
popf
push
adc
mov
mov
cs
das
mov
xor
lds
insb
fwait
jecxz
lret
lock
mov
sbb
icebp
mov
mov
in
or
mov
lret
movd
xchg
lock
pusha
test
push
popf
out
lods
aas
std
stos
mov
inc
loope
jl
jne
fldl
fmull
push
adc
ret
push
xchg
clc
fbstp
adc
adc
push
sbb
cmp
lret
cmpsl
xchg
jne
call
into
negl
arpl
stc
push
repz
xor
pop
lods
fstps
or
add
or
mov
cmpsb
sbb
fwait
mov
iret
movsb
les
subb
sbb
push
cld
mov
jmp
fmulp
or
ss
gs
imul
sbb
rclb
roll
mov
popf
jne
ja
stos
pop
test
mov
scas
imull
in
mov
push
jl
mov
scas
mov
jno
rcrb
pop
popa
lahf
cmp
xor
push
inc
notb
jo
out
jl
shrl
xchg
xor
mov
in
adc
dec
dec
adc
xchg
mov
cmp
jae
sub
xchg
lock
loop
push
adc
xchg
sti
lret
bound
cmp
push
cmpsl
dec
sub
sbb
stos
testb
push
sarl
fwait
pop
inc
fldt
dec
cmp
cld
dec
or
movsl
repz
xchg
aas
add
inc
js
fs
push
push
rcll
ss
hlt
ljmp
inc
jg
lret
sbb
dec
mov
loop
andb
pop
loop
xlat
dec
out
or
push
mov
adc
call
mov
out
or
in
negb
push
xor
mov
cmp
imul
sub
xor
pop
in
shlb
mov
aaa
mov
and
enter
or
lcall
es
cmp
out
sbb
icebp
jmp
mov
jnp
outsl
fisttpll
xchg
mov
mov
push
in
or
icebp
andl
fcomip
movsb
jp
push
je
cmpsb
test
mov
cwtl
mov
cmp
mov
or
andl
and
mov
jl
imul
sahf
jae
xchg
nop
dec
or
frstor
mov
and
xor
mov
dec
pop
push
mov
imul
push
xor
mov
push
lods
call
push
lcall
push
jae
hlt
pushf
xchg
ud2
in
aas
mov
push
icebp
mov
push
repz
or
push
shl
movsl
dec
cs
imul
cltd
idiv
leave
pop
push
jo
mov
jmp
xor
jo
outsb
clc
sbb
dec
mov
cmp
mov
es
mov
mov
gs
stos
pushf
ljmp
sub
mov
int
push
mov
daa
and
adc
mov
cmp
jp
cmp
inc
shrb
inc
outsb
mov
mov
xor
scas
inc
cmp
dec
mov
jmp
cmpsl
dec
clc
pop
test
jno
or
data16
fdivrl
jo
pop
iret
scas
and
loop
cmp
jns
adc
and
lods
push
cli
lods
xor
rclb
movsl
cmp
dec
dec
xchg
mov
bound
test
repz
mov
mov
and
scas
xchg
push
ficompl
hlt
jno
dec
add
push
frstor
cmpsb
jmp
in
xor
repnz
adc
sub
aaa
je
int
fwait
xchg
sbb
fdivrs
jmp
movsb
out
leave
in
jle
testb
sahf
js
enter
not
add
lret
xchg
fsubs
xor
orb
push
sub
lds
push
pop
jo
ss
pop
cmp
addb
lea
mov
loope
or
sbbl
adc
jge
lds
pop
out
push
aaa
jle
pop
fldenv
popa
mov
mov
push
leave
imul
xchg
push
cmp
push
mov
jg
das
test
jb
adc
mov
mov
and
and
inc
or
lods
loopne
xorb
jmp
imul
leave
sub
xor
stc
lcall
cmp
inc
fstl
test
pop
pop
xchg
adc
out
je
stos
pop
in
in
daa
rolb
pop
cmc
pop
cmpsb
lods
xor
sahf
adc
pop
loop
sarl
sub
jp
sbb
xchg
adc
push
ljmp
sub
out
mov
pop
lds
sbb
sahf
mov
rcrl
jb
lds
pop
xor
adc
sbb
negb
or
cltd
xchg
xor
mov
pop
adc
ljmp
icebp
cmp
fs
out
cmp
add
push
lcall
imul
adc
stos
add
lahf
mov
rcrb
adc
lock
stos
cs
das
mov
xlat
ljmp
insb
fnstenv
gs
dec
inc
dec
nop
dec
sub
call
in
aad
popa
mov
add
cmp
movsb
dec
ret
hlt
movsb
pusha
adc
loopne
add
fildl
inc
xchg
jg
sbb
xor
pusha
or
pop
dec
icebp
fnstenv
into
cmpsb
jne
scas
inc
aas
int3
jle
lret
cmp
and
xor
cmp
push
lfs
mov
loope
or
jae
les
es
daa
outsb
and
popf
mov
scas
cld
pop
mov
ret
sub
pop
test
xchg
bound
add
js
fsubrl
adc
out
sbb
xchg
cltd
scas
pop
pop
data16
mov
popf
lret
clc
xchg
notl
mov
clc
rorl
cmpsb
lcall
mov
ss
pop
mov
bnd
add
jne
dec
cmp
das
jbe
add
mov
dec
mov
push
rcl
pop
dec
test
mov
js
xor
lret
mov
sub
push
lcall
cmp
pushf
hlt
in
mov
mov
scas
pushf
sub
cltd
xor
sbb
fstps
dec
js
mov
scas
aad
fucomip
in
lret
xor
cmpsb
jl
mov
das
orb
jecxz
sbbb
mov
add
cli
lds
lahf
or
mov
push
pop
jp
leave
jno
cltd
gs
fdivrl
lods
and
lea
pop
or
test
daa
add
or
cmc
sti
jb
pop
imul
into
inc
adc
xor
cmp
pop
pop
repnz
xchg
mov
fs
in
and
xchg
test
add
adc
inc
or
push
jbe
cmpsb
mov
test
jnp
testb
ljmp
ja
mov
push
lcall
mov
shr
in
sahf
adc
jo
xchg
aad
adcb
gs
insl
add
push
inc
xor
adc
ret
js
push
mov
or
imulb
mov
xor
insb
stos
sti
gs
jbe
xchg
xor
xchg
mov
sarl
pop
or
jnp
loopne
jge
sbb
pop
std
imul
xchg
loopne
subl
call
pop
test
movsl
movsl
imull
lds
lahf
push
lret
pop
mov
cmc
xchg
adc
scas
mov
aam
jbe
cmp
gs
xlat
sub
mov
scas
sub
mov
sbb
icebp
mov
add
mov
popf
mov
imul
into
mov
movl
rcl
sub
inc
lahf
aad
adc
loope
je
dec
leave
mov
dec
out
in
cld
sub
jg
jmp
jecxz
cmp
jp
fdivl
xlat
push
cltd
and
push
mov
pop
shrl
and
mov
add
mov
loope
cmp
mov
push
fs
inc
iret
jnp
and
lcall
jg
mul
loopne
popa
inc
mov
and
mov
sub
xchg
and
add
aas
cmpsl
xor
mov
nop
sub
adc
xor
inc
andb
mov
fcmovb
or
inc
imul
xor
xchg
xchg
add
icebp
add
cmpsb
nop
imul
pop
and
or
aad
mov
je
jecxz
xchg
test
mov
inc
xor
je
inc
pop
inc
sub
sub
sub
xchg
inc
negb
push
jae
cmp
insl
push
inc
xchg
or
xor
inc
push
fwait
and
and
fistpll
inc
xor
dec
das
pop
jge
loop
stos
jnp
mov
jno
cld
cmpsb
dec
cmp
pop
insl
add
or
cs
clc
dec
loop
mov
mov
add
pushf
cmpsl
sub
imul
call
movsl
hlt
inc
xor
cmp
data16
stos
mov
dec
jnp
loopne
xchg
sub
jg
rcll
push
and
ja
jg
xor
cltd
mov
flds
out
loop
ret
mov
mov
lret
in
mov
out
icebp
lret
std
xor
aaa
andb
scas
stos
arpl
add
pop
mov
in
mov
movsb
mov
push
mov
enter
jne
inc
dec
inc
jg
mov
cmp
sti
cmp
jl
cmc
adc
xor
fs
mov
pop
iret
shll
and
dec
jge
mov
cmp
setne
mov
mov
pop
popa
push
dec
repz
loop
jbe
and
addr16
push
pop
sbb
mov
out
xchg
fdiv
xchg
popf
cmpsb
cmp
xchg
push
insb
addr16
fldcw
cli
inc
sahf
inc
fldcw
mov
mov
and
sbb
shrb
out
popa
jo
mov
cmp
movsl
sbb
add
xchg
dec
repz
sub
sti
ja
popf
lods
xchg
push
jnp
movswl
hlt
aaa
jnp
lcall
cmp
int
cmc
xchg
or
xchg
and
aas
leave
jmp
dec
sub
pushf
mov
lock
cmpsb
shl
mov
fcomps
mov
push
adc
inc
mov
ljmp
mov
or
mov
jne
jmp
mov
xor
push
xchg
lahf
fsubs
push
cmp
testl
add
iret
adc
sub
out
and
mov
dec
pop
jg,pt
movsl
nop
fwait
popa
push
std
aam
mov
cmp
sub
add
and
insb
scas
jae
out
jp
movsb
test
sti
sarl
fstp
jne
enter
popa
mov
mov
push
mov
rcrb
fcmove
add
movsb
jno
orb
in
adc
add
xlat
inc
movsb
lret
mov
mov
or
movsl
mov
fldt
or
je
push
sar
cltd
movd
insl
add
lock
xor
and
cs
jmp
arpl
add
jns
out
fisttps
pushf
sbb
mov
loope
lods
push
pop
lahf
mov
out
lods
lock
mov
mov
in
add
out
cmpsb
and
mov
movsb
dec
addr16
lds
jno
xchg
xor
movsb
or
adc
mov
les
jg
xchg
fiaddl
ffree
enter
push
fcomp
shrb
mov
push
push
xchg
and
pop
add
scas
js
push
outsb
sbb
ljmp
subl
loop
add
mull
inc
lret
sbb
std
fldl
in
sahf
std
mov
lret
jo
testl
imull
arpl
mov
xor
mov
aad
adc
push
jle
dec
cld
add
jge
push
xchg
aas
xchg
mov
add
stc
sub
ds
in
ja
dec
lcall
movsb
scas
mul
adc
jmp
xor
imul
mov
mov
outsb
lcall
pop
xchg
paddsb
lcall
push
adcb
int3
adcl
cmc
inc
mov
sbb
test
addr16
testl
push
pusha
pop
inc
vmovlps
mov
fwait
fs
fld
aad
push
gs
adc
sub
test
fmulp
int
mov
in
push
pop
lahf
adc
add
rclb
pushw
ljmp
rcrl
test
arpl
mov
pop
sbb
inc
stos
mov
lcall
shr
xor
cmpl
int
cwtl
push
xchg
mov
push
pop
pushf
or
in
sub
call
mov
inc
sub
cltd
cltd
test
pop
daa
fsubs
jle
mov
adc
mov
mov
out
hlt
jae
push
loope
adc
cld
inc
mov
test
loopne
aam
jmp
rcl
xchg
loop
daa
jns
shlb
cmp
adc
sub
cmp
xor
xor
dec
pop
sbbb
popf
sbb
dec
fdivrs
sub
jg
cmp
lret
xchg
sahf
into
sub
mov
sahf
imul
sbb
cld
cwtl
stos
and
push
xchg
xlat
jae
pop
mov
daa
fmul
mov
scas
sti
lahf
cmc
jbe
sub
jl
fsubrl
dec
mov
dec
or
sbb
aad
mov
shl
push
roll
test
jp
ficoms
out
rcll
nop
lret
call
pop
bt
fdivr
fsub
jnp
cmp
push
mov
mov
and
sub
ss
iret
jno
cmp
xor
rorl
stc
add
adc
test
bound
inc
iret
jmp
and
or
lock
lret
lcall
ljmp
jl
xchg
dec
adc
aam
or
stos
and
pop
and
adc
xchg
pop
ret
xor
lahf
jae
mov
aad
cmp
and
adc
repnz
je
pop
js
xor
sbb
mov
mov
fstpl
in
arpl
cmp
iret
fldenv
or
sbb
pushf
and
push
adc
loopne
sti
test
addr16
pop
std
test
mov
test
mov
inc
fidivrl
pop
fstpl
int3
in
adc
aam
mov
cmpsl
jnp
push
xchg
adc
add
loopne
xchg
add
mov
push
mov
subb
push
mov
lahf
lds
test
push
leave
sub
divb
or
pop
pop
popa
xor
mov
xchg
or
aam
mov
pop
xor
cwtl
outsb
mov
pop
movsl
jp
mov
and
push
and
sub
push
adc
mov
pop
in
enter
mov
or
nop
push
insl
cmp
mov
cmp
outsl
push
xor
xor
push
ror
push
or
sub
lods
mov
sub
lock
fwait
ss
pop
imul
cs
out
and
loopne
xor
repz
rcrb
sub
loopne
rol
outsb
and
push
movsl
push
dec
dec
push
pop
lods
data16
inc
clc
jge
in
sti
cmp
mov
jle
mov
insb
cld
outsb
fcmovnu
data16
xchg
jo
pop
loopne
aad
jp
mov
and
xchg
test
rorb
xchg
scas
jb
jecxz
jmp
repz
aas
adc
xor
stc
pusha
imul
push
in
sbb
stc
imul
push
mov
mov
cmpsb
insb
inc
dec
mov
inc
ret
fwait
divl
repnz
out
clc
aad
imul
xchg
push
call
push
cmp
dec
jp
cmp
movsb
xchg
out
sub
add
aam
and
mov
cmpb
mov
pop
cwtl
clc
mov
mov
push
movsb
jmp
adc
sarl
or
inc
cs
std
pop
mov
sti
cmp
sbb
add
icebp
in
adc
sbb
and
pop
pushf
push
cli
push
movhps
pop
xchg
lret
pop
adc
dec
fidivs
dec
fcom
jle
push
push
mov
jp
push
add
cmp
jecxz
mov
insb
fnstsw
les
mov
shll
jmp
mov
pushf
cmp
mov
and
fidivs
and
insb
pop
xor
cld
jb
sub
push
ja
and
addb
and
xor
mov
sti
jne
scas
mov
ja
ret
sbb
mov
jp
mov
lret
inc
cmp
loop
mov
push
cmc
lods
xchg
mov
sub
inc
lahf
imul
fiaddl
je
cmp
jnp
std
fcompl
jne
sahf
sarb
mov
out
fists
jecxz
lds
sub
popa
fsubs
pop
push
mov
xor
adc
lahf
das
adc
fnsave
and
mov
mov
sub
mov
test
movsl
mov
rcrb
xor
je
shl
rorl
pop
cltd
push
fwait
es
xor
ljmp
xchg
hlt
loopne
mov
push
xchg
xchg
pop
mov
mov
xor
push
mov
scas
jbe
ret
loop
subb
mov
int
es
jmp
mov
fnstsw
adcb
lods
push
mov
test
lret
inc
mov
scas
enter
movsl
xor
mov
sahf
xchg
out
xor
adc
adc
add
ds
icebp
or
dec
adc
push
xchg
or
push
add
pop
xor
jmp
inc
sbb
sub
mov
mov
incl
mov
jmp
jb
sbb
lret
mov
xchg
scas
xor
cld
jns
pop
pop
jp
and
sub
cmc
les
bound
cmp
mov
mov
xchg
mov
js
cwtl
sbb
cmp
dec
xchg
xchg
jp
gs
jmp
pmaddwd
fidivrs
xorb
rcr
aas
rcl
xlat
mov
cmp
or
adc
cmpsl
leave
cs
popf
rclb
mov
add
cs
xlat
jecxz
dec
cmpsl
popa
lret
icebp
xchg
movsl
xor
jns
ss
inc
xchg
pusha
or
xor
jge
pop
test
xchg
into
clc
lods
add
clc
pop
out
or
ss
lahf
fwait
mov
in
jecxz
jne
lock
and
int
push
popa
jl
icebp
test
cwtl
pop
push
sbb
adc
cmp
bound
jecxz
fwait
push
mov
xor
cmp
lods
jle
push
pop
aam
in
popf
movsl
jno
loope
jge
mov
loope
bnd
leave
cmpb
xchg
in
mov
xchg
mov
cmp
add
dec
adc
loope
jle
inc
jecxz
jg
jl
mov
mov
lods
movsl
mov
out
testl
lods
movsb
lcall
out
add
inc
test
sbb
dec
xorb
imul
mov
hlt
mov
mov
loopne
pop
dec
xor
icebp
repnz
inc
das
push
mov
cmp
addr16
jbe
cmpsb
mov
adc
or
xchg
loop
lods
aad
stos
inc
cmp
xlat
cmovp
sbb
add
xor
adc
and
sub
xor
out
xchg
xchg
push
mov
cmp
cmp
xorl
mov
outsb
xorl
adc
sti
push
rcl
sub
outsl
jnp
and
imul
adc
dec
pusha
push
jg
das
xchg
adc
cmpsl
stc
movsl
mov
insl
or
repz
add
imul
in
xchg
out
ret
jns
jbe
leave
pushf
into
ret
pop
stc
inc
data16
cli
enter
out
js
stos
mov
rcrl
bound
xorb
lods
test
push
sub
mov
cmp
shl
cmp
or
xchg
out
mov
mov
daa
push
and
daa
pop
cwtl
repz
add
inc
lret
dec
test
test
xchg
push
ret
cli
and
push
out
cmp
enter
aas
adc
loop
jnp
sub
cmp
mul
mov
adc
fstpl
out
in
std
lret
pop
shll
scas
fsubrl
and
or
mov
cmp
mov
push
push
jg
leave
sub
xor
add
ss
cmpl
pop
adc
mov
mov
js
in
push
mov
cmp
xor
xlat
aaa
arpl
out
or
mov
pop
hlt
fcoml
cld
loope
mov
repnz
cmp
inc
mov
scas
dec
jns
std
pop
xchg
sub
cmp
pop
into
lods
cmc
mov
add
and
lods
out
sub
push
cwtl
mov
dec
xor
inc
popa
jne
and
ss
rcll
pusha
adc
cmp
scas
sub
inc
xor
sub
cmpsb
ret
nop
or
out
out
jns
fsub
pop
and
js
sbb
jecxz
dec
shl
in
cmp
jmp
les
jbe
inc
fwait
enter
lds
pusha
std
sub
push
bound
std
dec
test
mov
je
das
cli
aas
fwait
add
sub
in
imulb
dec
xchg
xchg
int
mov
enter
jnp
dec
insl
test
loopne
mov
inc
ljmp
xchg
sub
push
imul
xor
jecxz
xor
jns
outsl
sbb
arpl
jb
jecxz
push
jp
mov
xor
jp
lds
fwait
mov
aad
mov
mov
xchg
int
roll
out
mov
push
sarb
jno
iret
push
xchg
mov
aam
dec
inc
aas
inc
push
xchg
xchg
out
and
pop
push
sbb
dec
cmp
ss
add
sbb
mov
jl
mov
sbb
addr16
lcall
xchg
leave
dec
or
les
jmp
mov
je
loop
fwait
movsb
loopne
mov
and
cmpsl
mov
jno
int
mov
pop
popa
add
mov
movsb
mov
testb
sub
push
or
js
mov
shrl
aas
adc
mov
jne
push
ss
or
add
sub
add
pop
push
inc
jae
mov
scas
bound
jecxz
mov
imul
dec
jg
stos
dec
enter
rcrl
cmp
pop
mov
fnstcw
pop
sbb
jns
jns
add
sub
mov
stos
or
jecxz
push
rorb
mov
pop
lret
lods
arpl
mov
inc
jg
adc
or
hlt
mov
add
push
sbb
inc
jle
push
jl
stos
mov
cmp
cmpsl
cmp
add
repnz
push
inc
movsl
mov
shl
in
mov
cmc
jle
xchg
adc
sarl
pushf
das
ret
xchg
fbld
xlat
sbb
xlat
mov
xor
movsl
lahf
mov
mov
mov
add
punpckhdq
dec
adc
ficompl
scas
dec
xchg
inc
xlat
movsb
out
jb
or
or
aam
dec
dec
push
adc
or
leave
arpl
je
push
or
or
sub
lods
adc
add
pop
lock
dec
iret
add
sbb
in
mov
pop
in
lds
and
cwtl
sbb
xchg
fcmovu
sti
mov
mov
test
mov
insl
js
int
mov
inc
mov
cli
lock
jnp
cmp
push
mov
sub
ret
mov
out
xorb
lods
jle
and
sub
push
mov
mov
sbb
or
fmul
test
dec
aaa
mov
es
jmp
or
xchg
lods
and
pushl
and
mov
pop
xchg
testb
push
xlat
fcomps
call
and
scas
inc
sub
dec
add
sub
in
hlt
ds
inc
add
mov
mov
push
mov
and
imul
out
sbb
aas
jecxz
xchg
lahf
pop
xor
xchg
pop
sar
mov
xchg
mov
out
mov
pop
fadd
xchg
push
cmp
mov
mov
jo
xchg
int
mov
out
and
mov
pop
es
fildl
adc
sbb
shrl
push
sbb
mov
mov
pop
outsl
icebp
cmpsl
mov
pop
inc
mov
mov
ljmp
push
add
lds
and
fimull
repnz
lock
fstl
out
rcl
cltd
cmpb
es
adc
adc
in
jge
cli
adc
stc
mov
adc
mov
jle
shlb
push
scas
mov
xchg
fadds
cmpsb
popf
adc
adc
push
imul
rclb
lods
inc
mov
lcall
shrb
mov
cmp
in
jb
mov
xchg
mov
or
out
cmp
lahf
fcoml
fstpt
lods
mov
frstor
pop
xor
add
popa
testl
push
test
dec
dec
fisubl
mov
xrelease
mov
jnp
jo
sbb
adc
xor
nop
or
lret
xor
push
arpl
cmp
cmp
or
adc
sbb
fsubrl
fildll
mov
mov
iret
and
aas
inc
pop
mov
sub
sahf
mov
xor
sbb
dec
in
je
inc
jb
sbb
mov
in
sbb
movsl
les
popa
cs
stc
inc
vshufps
lcall
mov
outsb
sbb
xor
rcrl
add
fstl
mov
mov
inc
jmp
es
lock
stos
sbb
sbb
mov
mov
sbb
sbb
xchg
cld
lea
xchg
sbbl
inc
sbb
dec
pop
clc
mov
lcall
jnp
js
xorl
insl
sbb
les
mov
mov
imul
jb
rcrl
popa
in
and
lret
inc
add
leave
daa
into
mov
add
lret
push
push
lret
in
mov
push
rcll
xor
addr16
adc
mov
dec
int3
ljmp
jnp
ja
xor
hlt
shrb
push
fbstp
pop
jp
push
rol
sub
push
lgs
cs
inc
xchg
inc
inc
out
inc
push
fs
mov
pop
fsts
ds
sub
dec
push
shrl
push
mov
in
ret
jmp
xchg
into
ljmp
nop
sub
jp
in
popa
mov
mov
cmpxchg
inc
lahf
sbb
mov
into
dec
push
adc
jmp
out
cmp
std
sub
int
add
daa
hlt
mov
xchg
mov
mov
pop
pop
jmp
dec
cmp
fsts
leave
imul
add
sub
mov
mov
jle
es
pop
cmp
sbb
push
mov
jg
mov
adc
jp
ds
cwtl
xchg
aaa
sbb
lock
out
lret
nop
fidivs
or
nop
sub
pop
mov
cmp
fidivrl
repnz
sti
cmpsb
jbe
int
jl
mov
repz
cmpsl
aam
mov
divb
xchg
push
pop
jl
pop
cmp
lret
ds
in
push
in
jb
cmp
lret
and
dec
and
cmp
jle
movsl
adc
dec
fldt
cltd
dec
aam
lret
fildl
sbb
or
outsb
push
int
sub
inc
andl
push
aad
rorb
xchg
sub
jnp
scas
mov
shl
sbb
in
mov
mov
cmp
cmp
lret
lea
xchg
pop
neg
jecxz
pop
lcall
add
pop
xchg
xchg
adc
push
push
mov
sti
or
test
jmp
out
cmc
xchg
cmp
mov
mov
mov
ffreep
adc
bound
dec
lock
in
jle
mov
push
jne
inc
loop
repnz
movsl
test
jg
pop
bound
hlt
shll
andps
je
xchg
cltd
nop
cmp
jne
sub
pop
dec
sti
cmpsb
jb
xor
jp
inc
push
lods
repnz
int3
add
bound
std
cmpsb
mov
dec
out
rcrl
std
lret
lods
xchg
push
push
js
pop
inc
stos
test
and
loopne
mov
fdivs
sbb
mov
xchg
xor
adc
xchg
adc
xchg
je
cmp
push
pusha
jae
add
adcl
jbe
dec
rcrl
sub
cmp
mov
mov
and
jge
jnp
ja
xchg
xchg
popa
mov
push
cld
jns
mov
in
xchg
xchg
mov
xor
iret
push
sbb
add
sti
mov
leave
addl
pop
xchg
mov
dec
xlat
push
rcll
add
inc
cmp
shrb
sar
test
es
lods
addl
roll
push
cmpsb
ret
lea
cwtl
sub
mov
out
mov
or
setnp
xor
call
mov
xchg
shrb
push
pop
loope
stos
pusha
xchg
cmp
push
scas
call
jno
jne
movsl
adc
lret
and
mov
aad
push
dec
dec
and
pop
adc
lahf
push
mov
aas
xor
mov
lods
add
es
dec
lahf
jecxz
movsl
and
xchg
mov
and
xor
cs
mov
mov
movsb
xchg
adc
sub
cmpsl
sub
sub
ret
cmpsl
cmp
push
xchg
sub
das
mov
jo
sub
pop
jge
fwait
fs
push
popa
test
push
hlt
inc
fucom
shrb
repz
jno
aad
xchg
xchg
inc
testl
jns
mov
sub
clc
dec
add
movsl
inc
xchg
mov
inc
pop
jge
adc
mov
or
std
es
and
mov
pop
fwait
push
mov
orl
in
jnp
insl
mov
or
sbb
push
inc
mov
dec
cmp
xor
fiaddl
cmp
ficoms
stos
dec
mov
cmp
out
ret
fstpl
xor
test
les
int
orl
mov
xchg
mov
sbb
jmp
loope
out
mov
push
pop
inc
bound
cmp
sub
imul
popf
cmc
ret
sahf
mov
or
jae
jo
cmp
gs
negl
pop
sbb
and
mov
jg
cmp
dec
out
mov
iret
test
sbb
ret
mov
dec
sbb
addr16
inc
jecxz
lock
divps
loopne
mov
adc
int3
divb
sub
cli
mov
stos
add
add
push
notl
or
lds
scas
lret
push
and
lret
sbb
jmp
fsubl
adc
or
lods
mov
jo
dec
aad
repz
testb
hlt
jo
adc
in
movsb
inc
lahf
lret
inc
cmp
into
prefetchwt1
or
xchg
inc
mov
jb
or
pop
jle
pop
jb
test
mov
das
lods
fldl
push
adc
xlat
cmp
fildll
inc
daa
js
test
lret
ficompl
lods
xor
mov
or
add
scas
jp
xlat
add
xor
mov
sti
pop
push
xor
aas
adcb
lods
push
inc
outsb
shll
mov
mov
jnp
inc
push
sub
jae
popa
lock
dec
pop
or
mov
incl
fsubl
mov
add
sahf
rcr
repnz
pop
cltd
cmpsb
ds
xchg
add
ficoml
andl
test
dec
jp
sahf
xchg
xor
fsubs
sarl
dec
dec
pop
cld
push
aaa
cmp
mov
fst
scas
mov
lock
les
lahf
push
push
sub
hlt
pop
scas
or
inc
add
mov
fwait
cmp
push
fwait
mov
in
inc
mov
scas
cmp
fisttpl
xchg
fildl
add
sarb
mov
add
push
adc
int3
jmp
mov
mov
aad
inc
int
dec
mov
ljmp
xchg
movsl
gs
sahf
adc
xor
adc
adc
adc
add
js
pop
adc
imul
mov
xor
add
pop
sbb
mov
ss
xlat
and
dec
push
fisttps
mov
mov
cmp
outsb
outsb
sbb
mov
divb
cmp
dec
xchg
cmpsl
adc
mov
mov
pop
pushf
add
cwtl
jne
cmp
repnz
xor
clc
sbb
and
add
loop
xchg
stos
and
inc
bound
cmp
ljmp
push
jmp
pop
aam
dec
clc
call
sbb
dec
je
sbb
mov
jg
mov
dec
mov
fisubrs
push
pusha
stc
gs
mov
jecxz
loope
aas
pop
popa
mov
test
outsb
xor
test
adc
add
enter
scas
xchg
fsubrl
je
ret
mov
popf
mov
movsl
cmc
mov
pop
fldt
mov
adc
daa
in
or
in
xor
scas
sbb
fidivl
mov
sbb
inc
mov
repnz
sbb
cmp
adc
repz
je
ds
movsb
cwtl
negl
mov
jle
jbe
mov
lcall
lret
hlt
ds
pushf
out
daa
mov
enter
aas
dec
sub
jp
repnz
lods
dec
dec
leave
mov
push
push
mov
movsb
dec
pop
push
or
mov
sti
mov
ficomps
movsl
in
pusha
clc
movsl
adc
pop
pavgb
mov
adc
out
adc
loopne
lods
ss
popf
out
inc
pop
stc
xor
mov
mov
sbb
gs
std
cmpsb
and
scas
hlt
mov
cmp
or
xor
jle
sbb
cmp
imul
jns
sbb
xor
jnp
sbb
cld
cmpsl
adc
iret
jg
dec
in
mov
and
mov
add
mov
sarl
mov
mov
xchg
adc
jg
into
in
fildl
ret
std
shlb
jl
sbb
aad
loope
hlt
mov
in
imul
sarl
push
testb
xor
push
sub
push
inc
aas
mov
xchg
jne
aad
inc
mov
shll
pop
cltd
jae
enter
dec
jge
lret
daa
repnz
xchg
jmp
fldcw
orb
or
mov
cwtl
xor
enter
lods
mov
sbb
add
mov
xchg
cwtl
lcall
or
fs
loopne
popa
adcb
testl
add
aaa
repz
lret
dec
cli
lcall
pop
or
icebp
cmc
fcoml
fyl2x
in
popa
pop
adc
imul
dec
arpl
pop
jg
outsl
movsl
loop
jae
mov
int3
fwait
sbb
add
fidivrl
push
in
add
cld
insl
test
aaa
and
test
movsl
scas
xchg
std
mov
cmp
or
ficompl
xor
mov
sbb
add
jg
ja
push
insl
out
pop
add
addl
pop
test
cmc
in
lret
aaa
push
inc
fdivs
cwtl
imul
fstps
or
cmp
cmp
push
adc
stos
mov
pop
jno
cmp
mov
xor
loope
iret
mov
cmp
aad
mov
adc
pop
repnz
bound
push
pushf
jge
jmp
inc
addr16
dec
inc
xchg
scas
sub
icebp
jae
je
mov
iret
jmp
lods
cmp
mov
cwtl
xor
inc
scas
stc
out
and
xchg
mov
jb
sarb
fstp
stos
test
mov
int
mov
cmpsb
arpl
sub
sub
sub
dec
int3
jne
scas
jae
lods
addl
sub
psraw
fstps
pop
cmc
lods
jecxz
push
jp
js
and
jge
fs
pop
loope
push
jo
lea
mov
insl
cmp
leave
leave
ret
fisttpl
xchg
xchg
leave
icebp
out
cmc
out
scas
gs
cld
sbb
negb
xchg
into
xor
add
push
inc
push
jnp
mov
leave
mov
sbb
imul
jae
xor
xchg
inc
xchg
push
pop
cmp
sub
xor
cmp
icebp
pop
sbb
enter
out
cs
cmp
dec
fwait
pop
jecxz
repz
fstl
cmp
or
mov
jp
ret
cld
jmp
mov
mov
test
inc
mov
add
jns
jo
inc
sub
cwtl
test
jge
jne
and
xchg
shrb
xchg
lock
fwait
cmp
xor
pop
jo
das
mov
mov
lock
push
shlb
scas
cmp
jg
pop
mov
icebp
xor
pusha
cmc
shlb
dec
xor
inc
and
icebp
sahf
adc
mov
dec
ljmp
ja
mov
sbb
andl
cmpsl
addps
outsl
movsb
das
jne
xchg
inc
lea
pop
in
add
ss
jmp
out
push
lret
jl
call
jg
xor
lahf
sbb
adc
mov
or
loopne
insl
sub
jecxz
lahf
lcall
imul
sarb
incl
dec
pop
stos
repnz
mov
imul
cmp
lock
pop
jg
notl
in
mov
dec
aas
imul
xlat
test
mov
addb
out
mov
mov
and
adc
jl,pn
xchg
shlb
pop
push
ficoml
mov
cmp
repnz
and
pop
xchg
or
cmp
or
mov
int3
lret
fstpt
cmp
ficoms
insl
xchg
xchg
sbb
cmc
aas
dec
adc
mov
sub
movsl
rorl
adc
push
add
mov
mov
mov
cld
mov
sar
push
dec
ror
in
loope
sub
sbb
pop
sahf
pop
pushf
cld
mov
jecxz
cs
hlt
or
mov
jne
rcrb
inc
pop
xchg
xor
shl
rcrb
bnd
shrl
push
mov
iret
pop
fcmovnb
and
leave
and
sbb
and
lock
lock
in
add
cld
cmp
mov
scas
movsl
xor
cs
xor
ja
xlat
jp
lods
mov
cmp
xchg
icebp
call
add
jge
daa
push
loop
mov
lods
adcb
lods
int3
das
fldcw
cmp
sub
loop
loopne
adc
insl
cmp
adc
movsb
jle
mov
xchg
and
xchg
mov
bound
push
jle
pushl
ja
pop
mov
xor
sub
xorl
je
andb
mov
lods
xor
and
pop
ret
fists
repz
adc
mov
aad
pop
movsl
lret
data16
call
pop
lretw
and
ficompl
dec
fwait
jl
andl
and
lret
adc
mov
pop
push
rcll
call
add
clc
cmp
xor
and
outsb
push
inc
shl
lcall
ljmp
arpl
sub
push
flds
insb
loop
xchg
pushf
sub
inc
mov
inc
mov
ret
cmpsb
inc
inc
pop
dec
addb
and
and
sar
insb
or
fistps
inc
jbe
xchg
jp
xchg
insl
mov
mov
adc
aaa
fwait
enter
pusha
mov
add
cli
js
inc
icebp
pop
pop
push
lret
clc
cmp
jbe
enter
fwait
cmpsl
inc
sub
add
icebp
dec
jbe
pop
mov
ret
push
push
movsl
loopne
sub
inc
xlat
std
in
mov
push
lret
icebp
dec
mov
jns
add
push
mov
dec
popf
push
insl
loope
cld
pop
jg
lret
stc
rcrl
inc
pop
or
cmp
in
or
scas
add
jl
and
sysret
dec
mov
lret
xchg
inc
or
adc
orl
push
add
fimull
adc
xchg
inc
in
or
sub
or
inc
mov
and
enter
repnz
mov
add
pusha
das
popa
gs
movl
push
mov
dec
mov
cltd
jae
xchg
loopne
jp
xchg
mov
adc
and
inc
ds
push
rcrb
out
gs
ds
xlat
pusha
mov
orl
push
rorb
sub
push
xchg
add
cli
xchg
sbb
ret
outsl
mov
rclb
mov
mov
out
imull
mov
jl
push
insb
adc
sbb
mov
icebp
mov
cmp
mov
or
test
jg
xabort
test
cmp
mov
ficomps
cmpsb
push
hlt
roll
lea
pop
mov
inc
jns
jbe
incb
in
sbb
or
mov
fsts
add
or
pop
adc
mov
mov
test
ja
or
push
pop
cmp
and
add
aad
push
lahf
sarb
jno
dec
mov
mov
inc
lock
mov
out
xor
inc
dec
xchg
aam
mov
dec
nop
cmp
cmp
sub
ffree
mov
pop
fs
lods
and
das
jl
subl
addr16
je
loope
jmp
jge
lea
mov
pop
xchg
jnp
fidivrl
xchg
mov
dec
call
dec
pop
jge
or
pop
aam
mov
or
push
sbb
inc
mov
mov
pop
notl
test
ja
out
adc
fsub
dec
jb
mov
orl
mov
fistpl
into
or
insl
pusha
pop
lea
fwait
nop
inc
enter
div
mov
inc
ljmp
jno
loopne
adc
stos
lock
rcrb
stos
xor
int3
addl
xor
inc
inc
inc
push
cmpsl
sub
adc
movsl
push
dec
fs
and
bnd
enter
arpl
cmp
xchg
int3
imul
insb
sti
push
mov
xchg
fwait
add
lock
xchg
lcall
fcoms
fildl
dec
mov
mov
jmp
pop
sub
pop
push
add
movl
data16
and
cli
jo
fiaddl
add
push
clc
data16
and
int
push
jp
adc
lret
mov
mov
icebp
add
int3
in
f2xm1
aad
push
movsb
sub
sub
xchg
pop
push
testb
std
sbb
push
lods
push
jno
aas
hlt
cmpsb
shll
int3
vminps
repnz
push
ret
lea
icebp
mov
out
repz
dec
mov
mov
jnp
rclb
dec
jnp
mov
sbb
push
inc
cmc
stos
out
lcall
rol
push
jl
imul
xchg
fnsave
aad
cmp
push
sbb
jp
cmpsl
fstpl
or
xchg
test
insb
dec
ja
mov
imul
pop
sbb
jecxz
shl
xchg
push
adc
pushf
push
cmp
mov
dec
sub
insb
cmpsl
add
popa
stos
mov
inc
stos
test
dec
and
les
aas
mov
sbb
push
xchg
jge
iret
leave
inc
lahf
pop
fcoml
jl
push
fs
adc
push
cwtl
decl
xor
sar
pop
jo
lahf
out
andb
cmp
push
aad
and
ret
pop
shlb
in
mov
js
in
sbb
pminsw
ret
addr16
push
inc
div
daa
mov
mov
cmp
add
sub
lock
xchg
popa
xlat
fisttpll
mov
push
mov
adc
cmp
cmp
movsl
mov
mov
sbb
push
push
mov
mov
mov
clc
mov
cli
fstl
mov
or
jnp
or
mov
xor
inc
dec
sub
add
or
movsl
ja
cmp
or
cwtl
sbb
into
jne
pop
add
call
mov
push
sahf
fcomps
mov
xor
push
pop
cld
and
icebp
sbb
dec
or
jmp
mov
or
xor
lock
dec
xor
xchg
in
jns
adc
push
ja
adc
mov
pusha
fcmovnbe
addr16
scas
sbb
add
xchg
lods
imul
pop
adc
addr16
cld
inc
jmp
pushf
xchg
dec
pop
aas
push
inc
testb
inc
pop
mov
out
cltd
mov
mov
sbb
mov
push
lcall
cltd
mov
out
orl
pop
adc
jbe
test
xor
addr16
into
push
jecxz
dec
jbe
dec
in
fstp
jecxz
ja
mov
mov
push
add
fisubrs
ret
or
or
test
sarb
push
or
lock
test
add
jl
stc
fnstsw
and
lret
std
pop
dec
mov
es
cmp
int3
faddl
iret
mov
lea
jns
orb
add
sbbl
insb
leave
fs
rclb
iret
jbe
pop
daa
bound
push
lret
adc
lods
dec
push
pop
xchg
push
sub
nop
jbe
mov
and
xchg
mov
add
jnp
xchg
pop
add
outsb
dec
or
insl
jmp
out
fists
inc
cli
fiadds
sub
gs
lret
fcmovnb
lds
push
inc
insb
push
push
xor
jnp
sub
or
fisubrs
clc
test
outsl
xchg
push
pop
movd
cli
xor
push
int
repnz
xchg
ljmp
mov
imul
xchg
ret
in
pusha
or
inc
xor
nopl
add
adc
test
hlt
divl
add
add
imul
mov
cmpsb
insb
hlt
dec
adc
shll
scas
add
dec
mov
mov
jle
addr16
lods
lods
test
call
fwait
push
arpl
imul
jp
cltd
inc
xchg
daa
nop
aas
out
mov
pop
jnp
mov
cltd
rcll
mov
movsl
clc
mov
mov
ret
pop
xchg
push
push
sub
int
das
mov
in
outsl
nop
lods
es
sti
mov
jg
push
mov
insl
push
leave
gs
sbb
in
mov
cmpsb
ljmp
jns
push
sub
sbb
ret
mull
xor
push
cmc
out
mov
lock
jl
lea
push
pop
jle
outsl
out
dec
mov
std
lahf
ret
push
repnz
pusha
pop
cli
mov
out
stos
sarl
ja
out
jns
push
xchg
gs
dec
push
inc
movsb
out
daa
stos
dec
pop
dec
and
int3
push
cmp
xchg
cld
push
xorl
mov
xchg
cld
adc
add
cmp
scas
and
rol
cmc
jl
pop
sbb
test
and
lret
xor
sbbl
jge
mov
movsl
jne
mov
stos
popf
fisttps
lock
inc
add
or
jle
aam
clc
mov
loope
pop
popa
and
mov
jnp
sbb
inc
jno
sbb
mov
ficomps
pushf
scas
pop
cmp
add
push
mov
inc
pop
pop
ds
push
adc
sub
xchg
bound
aas
inc
ljmp
push
sub
push
inc
inc
daa
push
ret
sti
xchg
xor
sbb
out
sbb
inc
sub
sub
xchg
sub
sbb
sub
test
imul
fcmovu
and
cltd
mov
or
add
ss
dec
test
adc
sbb
sub
cmpsb
aam
inc
xor
cltd
inc
or
movsl
sarb
ret
jg
outsl
inc
lock
jmp
repnz
arpl
shlb
call
dec
inc
movsl
arpl
push
push
cmp
and
jnp
and
pop
and
adc
loop
cmp
mov
xchg
inc
pop
jp
addr16
dec
ja
adc
ret
push
xlat
call
pop
test
scas
outsl
icebp
jb
add
stos
xchg
sub
or
movsl
sbb
shlb
pop
call
popa
sub
jne
xchg
jle
mov
push
test
cld
mov
test
add
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
lea
or
mov
xor
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
addl
mov
sbbl
xor
subl
add
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
sbb
push
adcl
mov
adc
mov
mov
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
pushl
call
cmpl
jb
xor
mov
andl
add
cmp
movl
je
mov
jmp
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
subl
xor
push
sbb
add
add
xor
mov
add
push
mov
adc
mov
xor
movl
xor
movl
cmp
jne
movl
cmp
jne
movl
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
xor
mov
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
addl
push
push
xor
movl
push
call
mov
notl
push
mov
addl
lea
andl
push
push
subl
push
push
sbbl
call
movl
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
push
xorl
call
test
movl
jne
orl
push
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
push
call
test
movl
jne
movl
mov
mov
xor
addl
lea
orl
push
mov
sbbl
xor
lea
push
and
mov
sbbl
pushl
addl
call
adcl
mov
andl
mov
movzbl
sub
xor
lea
sub
mov
mov
incl
xor
addl
xor
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
call
cmpl
jb
mov
subl
xor
lea
movl
mov
push
cmp
movl
jbe
sub
mov
xor
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
movl
sub
orl
xor
andl
mov
adcl
lea
sbbl
mov
xorl
lea
orl
mov
subl
lea
andl
push
push
push
push
xorl
call
movl
shl
cmp
jne
notl
push
call
adcl
test
movl
jne
addl
push
call
test
jne
push
lea
xorl
push
push
adcl
push
push
call
shl
cmp
jne
push
call
test
movl
jne
sbbl
push
xorl
call
test
movl
jne
sbbl
push
lea
push
push
push
adcl
push
call
movl
shl
movl
cmp
movl
jne
push
subl
call
adcl
test
movl
jne
orl
push
call
adcl
test
jne
orl
push
lea
subl
push
notl
push
subl
push
xorl
push
call
shl
movl
cmp
movl
jne
push
call
subl
test
movl
jne
subl
push
call
test
jne
negl
push
lea
push
push
addl
push
notl
push
movl
call
shl
cmp
jne
push
addl
call
orl
test
jne
andl
push
xorl
call
orl
test
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
shl
cmp
movl
jne
xorl
push
call
orl
test
jne
push
subl
call
test
jne
orl
push
orl
lea
andl
push
addl
push
push
adcl
push
call
shl
movl
cmp
movl
jne
push
call
test
movl
jne
incl
push
sbbl
call
test
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
push
call
test
jne
xorl
push
lea
push
xorl
push
andl
push
push
decl
call
movl
shl
movl
cmp
movl
jne
sbbl
push
orl
call
test
jne
andl
push
call
xorl
test
movl
jne
push
incl
lea
push
xorl
push
xorl
push
adcl
push
call
movl
shl
movl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
je
xor
jmp
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
or
mov
sub
mov
mov
adc
movl
sub
mov
and
jmp
and
push
sti
shlb
jg
add
jp
pop
jp
jns
out
dec
dec
sbbl
xor
and
cmpsl
lock
movsl
jno
cli
dec
pop
push
sbb
stos
loopne
mov
xor
dec
push
ss
push
push
lret
mov
fcoml
jg
and
insl
sbb
cmp
ljmp
xchg
xor
fildl
dec
aaa
mov
lea
unpcklps
cmp
pop
dec
sub
insl
cmp
sti
xchg
jmp
mull
mov
das
sbb
dec
fdivs
xchg
sti
es
push
adc
cli
xor
inc
out
shr
sahf
sahf
push
popf
loope
dec
add
scas
mov
mov
push
das
gs
mov
jbe
mov
xchg
jb
pusha
fsubs
je
lea
sub
lcall
data16
in
fisttps
add
int3
push
pop
xor
jp
mov
xor
push
adc
sub
and
shrb
mov
shrb
adc
cmp
lret
out
jle
fcmovu
scas
mov
mov
mov
jp
mov
jmp
mov
pop
cmp
or
fwait
adc
cvtpi2ps
xchg
std
add
lcall
xor
test
jo
scas
out
jb
lods
jne
xchg
push
mov
orb
aam
and
push
cltd
inc
dec
sub
mov
sub
add
push
pushf
sub
mov
shl
xchg
or
push
fsin
sbb
lret
cmc
jle
inc
sbb
mov
jne
xor
mov
fs
pushf
int
cltd
ja
jp
or
mov
adc
mov
dec
xchg
data16
ret
jmp
hlt
jb
bound
mov
add
sbb
mov
push
or
cltd
push
xchg
mov
clc
roll
dec
movsl
cmp
je
cmp
std
sub
sub
jg
mov
pop
sbbl
pop
scas
xlat
sbb
hlt
daa
pushf
pop
dec
ret
int
mov
xor
ja
mov
mov
fmull
lret
xchg
xchg
fstpt
xchg
fcomps
fldln2
mov
pop
fmul
lret
mov
sub
loopne
pusha
pop
lods
xchg
int
je
int3
pop
mov
sub
mov
mov
sbb
loop
jmp
mov
popa
cmp
pop
enter
add
xchg
mov
cmp
or
jl
sti
das
fcmovbe
scas
div
lcall
lahf
dec
and
test
jle
cmp
pop
addr16
test
sti
sbb
scas
xor
int
mov
push
lret
in
call
xchg
inc
das
mov
dec
movsb
sbb
lret
movsb
cmc
das
mov
hlt
or
shlb
cwtl
fisttpll
pop
push
fwait
cmp
fsubl
and
and
push
dec
and
test
lcall
int3
xor
mov
cmpl
out
outsb
or
pop
xlat
pop
xor
jmp
xor
inc
and
lahf
mov
add
add
or
sub
push
and
add
or
push
cld
dec
das
xor
and
pop
out
lahf
add
mov
stc
movsb
push
pop
scas
push
xor
cmp
dec
inc
push
push
lret
sbb
sbb
dec
mov
in
inc
outsl
push
or
mov
jb
mov
out
add
pop
std
fcomip
imul
dec
jmp
cwtl
adc
pop
mov
xchg
lock
pop
pop
imul
pop
mov
adc
ficoml
testb
xchg
jo
je
outsl
test
fs
mov
bound
adc
call
cli
adc
sbb
jne
fadd
xor
leave
imul
jns
out
pop
arpl
sbb
dec
jge
andb
arpl
mov
or
inc
pop
dec
cwtl
fdivrl
jo
loop
imul
jge
imul
andb
xchg
stos
dec
test
jmp
lahf
push
popf
leave
test
mov
mov
das
push
test
add
cmp
xchg
outsl
fsts
movsl
inc
mov
lods
test
cmp
dec
mov
div
inc
mov
pop
loope
jg
lahf
sub
sub
push
subl
pop
fwait
jmp
hlt
lcall
sub
mov
pop
imull
mov
xchg
pop
mov
sub
in
divl
int3
pop
add
in
scas
sahf
popf
xchg
outsb
dec
cmp
or
lret
fs
imul
or
dec
dec
fnstenv
sub
mov
push
stos
das
dec
sbb
into
enter
hlt
xor
inc
cmp
enter
mov
cld
mov
or
mov
test
sub
mov
xchg
push
cld
add
add
fninit
mov
fsubl
dec
jb
pop
js
push
push
dec
dec
xchg
mov
xchg
ds
xor
mov
xor
addr16
dec
movsb
cmp
or
arpl
repz
fdivrs
xchg
push
lds
fdivr
xor
pop
push
stos
cmp
negb
scas
inc
push
adc
inc
lock
jle
and
xchg
jne
inc
mov
cwtl
fs
inc
inc
repnz
iret
push
cld
lds
mov
stos
jno
push
stos
scas
jno
dec
xor
enter
repnz
sbb
test
andl
sbb
lret
sahf
push
inc
fldcw
mov
jbe
mov
mov
inc
es
cmp
push
push
fidivl
lahf
inc
int3
cld
imul
shlb
nop
sbb
pop
ljmp
dec
inc
cmpsb
adc
call
pop
ret
add
imul
gs
dec
mov
adc
arpl
lods
icebp
frstor
add
pop
cwtl
jb
daa
push
test
std
rcll
sahf
pop
cmp
cmpsl
xchg
cmpsl
push
cmp
inc
lods
sbb
mov
mov
add
mov
outsl
or
or
jg
pop
and
stc
iret
sbb
es
or
dec
dec
fistpll
stc
jo
stc
adc
mov
adc
test
push
pop
mov
lahf
mov
test
inc
push
dec
in
dec
xor
jecxz
ret
push
das
sbb
pushf
cli
js
lret
cmpsl
push
mov
cmp
mov
mov
lret
in
sbb
mov
std
push
popf
into
or
jnp
inc
ret
fs
push
punpckhdq
fsubrl
sahf
repz
shrl
jne
xor
mov
adc
ss
repnz
and
fistps
xchg
addr16
out
pop
mov
push
fisubs
xchg
movsb
mov
jl
lea
adc
lock
lcall
arpl
lods
fsubrs
push
aam
and
movsl
adc
adc
mov
mulb
popl
adc
mov
cmp
fs
xchg
out
xchg
push
push
repnz
mov
in
fidivl
cwtl
push
pop
shl
movsb
insb
sbbb
lret
rcl
sbb
mov
xor
mov
aad
dec
popf
test
inc
hlt
add
mov
fwait
xor
subb
cmp
xchg
cmpsl
mov
jne
sbb
jmp
adc
cmp
pop
jmp
inc
rcr
cmpsl
movsl
out
or
leave
cmpsb
jo
lods
dec
push
loopne
push
cmpl
clc
ljmp
pusha
adc
dec
in
adcl
fnstenv
xchg
push
ljmp
bound
in
les
sahf
cs
daa
inc
jecxz
incb
test
out
sarb
adc
and
sahf
hlt
fs
mov
and
sub
mov
xchg
jno
jb
es
mov
jnp
ret
out
aaa
bnd
clc
xchg
xor
mov
jns
and
fadds
int3
sub
fimull
sub
push
and
ret
leave
icebp
xlat
sbb
into
gs
in
sub
insl
pop
in
arpl
or
add
dec
scas
aad
cmpsl
loope
inc
mov
outsb
push
fld1
xor
jl
clts
sbb
cmp
or
in
rcll
sub
push
lret
loope
ret
mov
cltd
inc
add
push
mov
sbb
xchg
nop
inc
icebp
sub
inc
sahf
arpl
dec
xchg
imul
jnp
mov
xchg
lea
ret
fsub
jb
push
dec
out
movsb
add
sahf
data16
sbb
outsl
ficoms
ds
lea
in
jecxz
mov
insb
xor
xor
outsl
mov
sbb
cmp
lock
xchg
into
scas
push
and
push
or
ljmp
in
cmp
sub
mov
mov
pop
clc
pop
testb
xchg
lea
orl
dec
sbb
mov
mov
mov
push
iret
scas
or
add
popa
rcll
mov
and
inc
das
test
mov
and
mov
mov
aam
sbb
mov
popa
and
xchg
push
call
jbe
imul
mov
add
xor
xor
mov
and
sub
dec
adc
jl
inc
mov
jmp
lahf
in
ljmp
push
fldlg2
add
mov
enter
pop
out
add
sti
push
xchg
andb
push
dec
cmpsb
int3
lds
xchg
sub
sbb
or
jno
mov
stos
or
test
mov
dec
arpl
sti
test
mov
and
lahf
add
int
popf
sbb
push
jns
add
jb
cmc
shrb
popf
in
sbb
or
mov
push
leave
pminsw
mov
enter
xor
sbb
mov
sbb
xor
rcll
push
or
push
xchg
out
cwtl
mov
push
in
pop
push
adc
xchg
out
sbb
out
mov
pop
inc
push
jo
lods
in
lcall
cs
aad
ljmp
cmp
pop
sti
loopne
loope
push
lea
pop
clc
inc
mov
push
shl
cld
and
adc
test
idivb
or
int
stos
outsb
dec
sbb
lods
out
inc
shlb
test
insl
sti
pop
aad
xor
jecxz
roll
arpl
sbbl
cmpsl
dec
push
xchg
jg
jbe
adc
fwait
add
mov
xchg
sub
rorb
inc
dec
sbb
mov
mov
hlt
inc
repnz
xchg
jb
dec
add
mov
mov
rcl
sarl
mov
mov
out
mov
std
test
es
ja,pt
pop
sub
adc
loop
mov
bound
or
outsb
or
or
xchg
lcall
push
cli
adc
or
outsl
nop
inc
mov
loopne
cmpsb
jno
push
in
clc
pop
jge
mov
xor
and
inc
push
sbb
jae
mov
jg
mov
lret
xchg
popa
add
hlt
ss
and
jns
out
sub
pop
sub
adc
xor
in
jb
lea
inc
lret
incl
lods
das
cwtl
lret
and
test
or
ljmp
add
mov
ljmp
mov
xchg
lret
int3
mov
mov
mov
xchg
add
out
push
and
jecxz
fdivrl
jnp
sarb
xchg
mov
aas
test
pop
pop
lret
sub
and
pop
in
dec
mov
and
push
incl
int
adc
push
push
xor
sub
xor
lds
mov
lsl
push
add
inc
push
aas
xchg
add
outsl
rcl
cmpsl
or
jns
push
and
cmc
jg
push
je
js
add
cmp
inc
out
loop
xchg
xlat
movsl
inc
ja
jns
adc
pop
push
or
cmpsb
push
arpl
rcrl
repnz
push
pusha
imul
mov
push
testl
sbb
scas
and
and
lods
sub
sub
popf
icebp
xor
jecxz
mov
pushf
inc
push
mov
and
or
inc
out
loopne
xor
lock
inc
loop
call
aad
addr16
push
data16
aam
jg
test
cmc
xchg
into
mov
jbe
jne
mov
lock
nop
test
push
jmp
repnz
xlat
aas
ljmp
cmc
lea
lods
movsl
and
mov
xor
cwtl
leave
scas
fadds
mov
lret
mov
in
sub
push
lahf
xor
rolb
shll
or
cmp
pop
inc
hlt
arpl
cmp
push
cwtl
mov
pusha
lret
adc
pop
cwtl
shr
mov
sbb
repnz
mov
test
pop
aam
andb
push
dec
dec
inc
cld
gs
mov
jno
jae
dec
sti
xchg
fisubl
in
jnp
popa
fisubs
jno
incl
pop
mov
jae
mov
imul
popa
jnp
mov
jb
inc
or
aas
xor
adc
hlt
adc
test
mov
push
add
hlt
aaa
cmp
xchg
outsl
pop
insl
cli
inc
clc
aas
int
adc
jp
int
pop
int3
addr16
mov
add
xchg
loop
adc
cli
mov
adc
mov
loopne
or
dec
pop
das
frstor
push
movsl
lods
mov
mov
adc
test
ljmp
insb
sbb
aas
rolb
mov
mov
sbb
test
mov
fwait
rol
mov
mov
ljmp
aad
sbb
cli
negb
jle
add
pop
rorb
dec
stc
lea
or
xor
add
xor
fildll
sbb
cmp
and
or
addl
mov
arpl
dec
dec
popa
ja
add
mov
cmovae
mov
adc
lods
pop
int
push
mov
or
jecxz
jo
pop
lahf
dec
ja
dec
pop
lds
jne
mov
dec
mov
sub
xchg
into
mov
addr16
pop
push
push
pop
dec
and
inc
fbstp
pushf
add
sub
adc
cmpsl
aad
sub
fldt
dec
or
mov
lods
cmp
push
inc
repz
mov
cmpsb
push
jg
outsl
loop
fs
mov
sub
andb
ljmp
and
call
fs
shlb
add
sarb
cmp
je
mov
dec
shlb
xlat
in
pop
add
fidivl
daa
cld
inc
push
inc
lods
xchg
jge
or
sti
xor
push
jg
cmpsb
test
andb
popf
iret
rorb
adc
mov
test
dec
nop
in
lods
pop
test
movsb
mov
adc
outsb
xlat
filds
xchg
aad
arpl
mov
xlat
mov
jmp
fldcw
aam
shlb
mov
mov
cmpsl
pop
pop
add
push
lahf
int3
mov
jo
jp
mov
xor
mov
sbb
sbb
sbb
inc
cld
cld
pop
dec
shrl
popa
mov
mov
sub
jns
ficoml
add
daa
mov
lret
xchg
pop
push
mov
shlb
mov
jbe
ds
mov
push
jg
jg
out
imul
xchg
nop
fmull
inc
gs
pop
push
ret
aam
mov
iret
clc
inc
aam
loope
psubd
es
data16
or
sub
fs
jnp
inc
lock
ljmp
pop
mov
cld
push
daa
xchg
cmp
fists
divb
mov
out
mov
out
fs
adc
cmp
xor
cmp
pusha
lods
insb
ss
adc
sbb
int3
movsl
rorb
pop
jl
mov
add
jecxz
cmp
mov
xchg
jge
adc
cmp
outsb
je
inc
jmp
fwait
bound
subb
repnz
outsb
cmpl
inc
lret
mov
xchg
xor
pop
cli
add
and
pop
les
lock
sub
idiv
arpl
call
push
jl
xor
fwait
int
ljmp
push
push
lds
cld
les
rcll
push
cmp
or
fdivrs
lds
adc
xor
push
add
pop
sub
cmp
enter
stos
sub
inc
insl
cli
inc
imul
or
sbb
rcrb
pop
lods
inc
push
mov
clc
add
shl
xchg
call
or
movsb
mov
add
adc
mov
jb
stos
inc
sub
xchg
cmc
in
aam
xchg
lret
xor
jecxz
fldcw
stos
fbld
or
push
jnp
mov
call
xchg
lods
push
push
push
cmpsb
mov
adc
push
add
xchg
or
xor
xor
and
mov
les
push
fwait
test
hlt
imul
in
daa
nop
inc
jmp
imul
shrl
int
int3
in
sbb
fs
and
fistpll
pop
int3
enter
out
mov
jg
inc
inc
loope
xchg
cmpsl
mov
add
pop
aaa
and
cmp
jg
call
nop
lahf
jge
out
mov
push
mov
out
arpl
jge
sbb
cmp
mov
jp
imul
pop
or
fdivrs
repz
jae
mov
jo
add
pop
fcomps
popf
push
xorb
mov
sarl
mov
ja
stos
out
pop
movsb
jno
lret
jns
mov
fidivl
mov
outsl
mov
outsb
imulb
imul
lds
xchg
xchg
fs
rcll
xor
icebp
push
push
paddd
mov
xor
jne
jg
add
repz
out
test
and
pop
ja
sbb
das
sub
test
push
into
push
movsl
test
inc
adc
jp
sub
mov
lock
aas
pop
decb
jno
cld
lret
loope
sbb
sub
sub
daa
xchg
mov
jle,pt
jae
mov
bound
cld
je
int
ret
fnsave
mov
ds
fnsave
in
mov
sti
shlb
out
lea
inc
mov
fmul
push
lods
adc
inc
adc
jge
mov
and
outsb
jns
aam
rcrl
mov
popf
push
sbb
xor
imulb
pop
xchg
and
popa
adc
bnd
mov
mov
mov
dec
nop
push
inc
or
aad
movsl
bound
mov
ljmp
dec
pop
lds
aaa
adc
mov
pop
out
mov
inc
adc
cmp
ds
mov
aam
sub
and
push
xchg
mov
es
dec
xchg
popf
pop
add
inc
dec
xchg
xor
ja
in
mov
jle
stc
das
push
inc
xor
dec
mov
cmp
movsl
or
pop
jb
scas
sbb
in
mov
cwtl
and
add
dec
mov
sbb
push
xor
mov
cld
es
jne
mov
leave
sbb
clc
mov
or
ss
xor
mov
push
mov
movsb
sub
push
cs
push
imul
out
pop
call
cltd
mov
fldt
mov
js
into
push
test
or
fcmovnu
xor
fisttps
lahf
arpl
popl
mov
and
dec
xor
loopne
sbb
je
ret
and
xchg
add
mov
or
lods
stc
stos
xor
mov
nop
sub
push
cwtl
and
mov
jo
fst
adc
cmp
orl
dec
lods
add
pop
test
cmp
lcall
mov
test
xor
aaa
mov
or
test
notl
fwait
jno
mov
pop
int3
or
push
movsb
cmpsb
mov
les
orl
fcom
dec
sub
es
inc
decl
jg
in
dec
test
push
jp
fnstcw
repz
adc
fisubrs
and
negl
movsl
pop
or
xor
jb
inc
les
incl
clc
mov
ds
pop
jns
loop
mov
mov
test
sub
mov
sti
das
and
mov
cwtl
test
and
sbb
or
insb
cmp
aam
adc
addr16
dec
enter
jmp
in
cli
rorl
add
and
scas
inc
orb
ljmp
xchg
ror
jg
mov
bswap
push
fldcw
and
pop
xor
push
adc
push
jo
xchg
aam
call
sbb
adc
in
imul
adc
test
dec
xchg
les
cwtl
pop
push
and
xlat
pop
ds
mov
leave
insl
nop
lea
cld
xlat
xchg
xor
mov
mov
out
or
test
es
mov
std
shr
cmp
mov
jb
xchg
aas
dec
push
mov
out
mov
mov
push
inc
xor
sub
es
mov
stc
mov
dec
hlt
lods
unpcklps
les
fisubs
jl
stos
outsl
jg
mov
mov
jo
testb
out
and
pop
loopne
pop
mov
nop
scas
imul
frstor
shll
outsl
nop
rcl
xchg
mov
aam
inc
adcb
jmp
in
mov
and
subl
in
adc
add
fbld
sub
int3
dec
cli
imul
imul
cmp
push
mov
cld
xchg
cltd
dec
cld
mov
fsts
mov
sti
outsl
sahf
jbe
lods
pop
cmpb
das
outsl
fsubr
adc
rorl
ds
mov
and
jne
clc
push
or
dec
mov
int
inc
pushf
sti
dec
jno
gs
and
lock
dec
inc
sub
mov
pop
test
cmpsb
lds
xlat
test
lods
and
jne
shll
lds
mov
jae
jecxz
adc
dec
jno
cmp
outsl
cwtl
and
enter
sbb
popa
xchg
out
mov
out
aad
push
addb
jae
ret
mov
mov
cmp
pushf
sub
outsb
cmc
addr16
out
pop
sub
mov
pop
daa
and
or
sub
fdivrs
sub
adc
push
les
scas
push
jo
pusha
nop
mov
cmpsl
in
adc
fiadds
scas
dec
and
jg
ret
scas
and
mov
xor
mov
cmp
call
or
call
inc
fwait
inc
call
or
ret
lods
jmp
ds
adc
sbb
lcall
add
jo
jno
sub
jnp
jnp
movsl
mov
popl
sub
das
add
loope
test
sbb
xor
jb
mov
cli
stc
ret
sub
test
pop
je
pop
xor
call
stc
lea
mov
imull
into
add
cmp
push
mov
je
int
dec
mov
pop
addl
jmp
fidivrl
cmp
arpl
and
imul
xor
lcall
ret
adc
cmpsl
jle
sub
arpl
mov
ds
and
dec
roll
sub
cmp
mov
test
fwait
in
in
pop
outsl
mov
clc
xchg
lcall
mov
sub
daa
int
or
add
fcmovnu
lret
test
pop
cmpsl
inc
ss
pop
push
cmp
mov
xchg
xor
in
enter
adc
out
sub
loope
cmp
xchg
and
rep
xor
ss
dec
popa
stc
sti
xchg
pop
fisttpll
xor
jl
sub
testb
inc
xor
and
jnp
mov
cmpsl
adc
cmpsb
xor
push
out
push
cmp
fimuls
lcall
push
sbb
jg
xchg
insb
cmp
push
insl
inc
cltd
inc
xor
pop
pop
inc
xchg
aas
dec
xor
or
aam
fsub
fadds
cltd
cmp
pop
fistps
movsb
dec
pushf
sub
int3
leave
movsb
push
lock
add
mov
loopne
addl
jp
sbb
dec
fisttps
sub
inc
sarl
mov
mov
jp
stos
sbb
repnz
roll
push
negl
cmpsb
dec
int
rcrl
cld
add
in
subl
push
push
sbb
cmp
cld
lds
mov
call
mov
aad
sbb
mov
aam
test
mov
ja
cmp
cmp
push
inc
and
or
cmp
inc
jae
imul
in
lock
cld
je
lea
jg
jae
push
in
ret
stos
pop
dec
js
movsb
inc
xchg
mov
cld
ljmp
sarb
leave
push
xor
push
pop
test
push
add
enter
sbb
push
cltd
xchg
lret
lret
lcall
adc
loope
sbb
cmc
in
jp
enter
adc
cli
stc
loope
adc
andb
leave
outsl
pushf
xchg
ljmp
and
mov
xor
enter
pushf
pop
or
mov
xor
xchg
sbbb
mov
lahf
call
lea
pop
add
adc
lcall
pushf
clc
ret
cmp
add
jbe
jbe
and
pop
sbb
jb
push
and
int3
inc
sub
into
inc
loope
mov
int3
in
xchg
mov
mov
adc
sbb
ror
push
test
xchg
movsl
jg
nop
jmp
andb
inc
sbb
add
jge
lock
aaa
xor
jbe
outsb
cmp
push
add
push
mov
ss
lcall
js
sub
out
xorb
shrl
mov
fstps
lds
push
icebp
pop
cmpsb
mov
in
jp
mov
dec
fisubrs
sub
sahf
notb
outsb
movsl
ljmp
jbe
aas
gs
sub
pop
cli
loope
movsb
jno
insl
push
cltd
mov
dec
mov
out
push
or
inc
shrl
inc
add
arpl
lret
das
lods
pushf
int3
cmp
jns
nop
mov
and
mov
jmp
das
repz
push
xchg
mov
xor
lods
cmp
leave
dec
ds
push
xlat
mov
add
sub
add
dec
adc
leave
sbb
mov
xorb
sarb
shr
les
mov
mov
fsub
fs
gs
into
cmp
cmpsl
mov
dec
mov
pop
xlat
icebp
dec
cltd
mov
sub
or
gs
jbe
nop
rorl
jmp
mov
fsubrl
jle
loopne
in
fisttps
sub
test
add
mov
mov
xor
in
xor
lods
out
xchg
test
loop
inc
pop
cmp
xor
lea
arpl
clc
ret
test
lock
mov
test
sub
lods
mov
insl
inc
std
or
rcll
mov
jmp
adc
sub
cmp
mov
rcr
lret
xor
or
jle
cmp
mov
pop
enter
movsb
popa
push
mov
cmp
inc
sub
mov
inc
dec
mov
sbb
sub
enter
ret
jns
xor
add
sbb
dec
pusha
ja
push
jne
push
loopne
rclb
int3
adc
test
in
xchg
or
push
mov
inc
out
outsl
sahf
mov
jbe
adc
sbb
sub
jle
out
ficoml
sbb
fiadds
pop
dec
xor
sahf
mov
je
xor
dec
ljmp
inc
dec
push
pop
in
push
rcl
mov
cmp
mov
mov
je
popf
fnstenv
inc
test
xchg
push
icebp
jl
sti
pop
jp
and
push
mov
shrl
jo
cltd
outsl
cmp
in
jge
mov
cwtl
aam
or
xor
pop
out
js
and
popa
nop
out
pop
out
mov
not
pop
clc
jbe
arpl
icebp
pop
andb
push
push
mov
daa
sub
pop
sar
xchg
in
cmp
sbb
jl
cmp
sub
inc
cli
dec
dec
mov
ss
cld
out
iret
mov
in
push
sbbl
and
shrb
jmp
pop
call
sbb
sahf
ljmp
inc
popa
mov
xchg
push
ficomps
and
and
addl
and
mov
xor
xor
loop
pop
and
jl
aam
sub
scas
out
jl
push
sub
ds
adc
xlat
stos
cmp
popf
jo
and
addr16
out
pushf
sarl
out
fwait
push
data16
aad
roll
and
cmp
mov
push
sub
loope
dec
leave
push
inc
sbb
xchg
pop
pop
enter
clc
adc
inc
add
xor
in
dec
lock
push
outsl
rorb
mov
sbb
sbb
adc
shlb
ljmp
cmp
icebp
push
push
mov
mov
and
mov
xor
jo
jmp
les
mov
sarb
pop
lcall
sbb
orl
mov
xchg
das
xor
mov
stos
mov
lcall
fneni(8087
or
stos
add
or
pop
mov
xlat
dec
popf
out
ret
int
data16
inc
clc
xchg
lret
dec
xlat
add
mov
inc
je
pop
pop
aas
daa
cld
sub
cmp
mov
sahf
jle
mov
push
stc
xchg
push
sbb
ficompl
add
lret
push
add
test
jo
cld
shrl
xchg
push
mov
xchg
outsb
and
mov
ljmp
cmp
fimull
rolb
add
pop
in
insb
lods
mov
repz
test
xchg
add
stos
pop
mov
cld
and
js
sub
aam
adc
sti
sarb
shrb
lret
fisubs
fadd
mov
dec
shlb
pusha
imul
pop
mov
rorb
stc
mov
push
imul
call
jb
popa
test
in
mov
push
lret
xor
cmp
stc
pop
sub
stc
jle
aad
out
mov
aad
fsub
insb
bts
jns
push
ds
in
fwait
pop
stc
clc
push
sub
std
fbstp
mov
shll
into
hlt
sbb
stos
mov
xchg
daa
sahf
mov
pop
cmc
xchg
sub
jo
out
fcomi
push
inc
pop
int
jae
jns
std
test
cli
loope
and
cmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
and
xor
xor
mov
subl
push
mov
add
cmp
je
adc
mov
mov
adc
mov
xor
xor
orl
add
adcl
add
movl
adc
adcl
xor
movl
mov
push
adc
xor
xor
add
mov
add
movl
adc
subl
xor
xor
cmp
movl
jne
cmp
jmp
xor
stos
sub
cmc
gs
jns
sbb
jp
cwtl
jno
dec
push
mov
aaa
fnsave
jo
mov
aam
cmp
dec
push
adc
mov
shlb
out
push
xchg
mov
inc
daa
mov
scas
aaa
sti
lret
call
cmpsb
dec
dec
mov
lock
lret
inc
adc
push
mov
in
adc
shufps
or
or
std
es
xor
fisttps
in
dec
push
loop
ror
push
cmp
and
rolb
stc
cwtl
loopne
mov
incl
mov
mov
mov
sbb
popf
iret
dec
out
inc
cltd
cmpsl
lods
mov
add
int
aas
filds
dec
cmpsl
movl
jae
nop
mov
push
enter
leave
aas
mov
aas
pop
in
test
mov
les
xchg
repnz
mov
ror
or
cmp
movsb
inc
mov
dec
test
jno
xchg
mov
sub
maxps
xor
lahf
push
stos
xor
imul
cs
aam
adc
hlt
in
and
pop
sarl
call
sbb
xchg
xor
mov
sub
ljmp
scas
jp
popf
gs
jns
mov
aam
mov
movsl
fwait
adc
imul
rcr
and
dec
mov
jae
cmpsl
mov
cmp
add
xchg
daa
scas
std
mov
mov
add
pop
push
arpl
mov
pop
ss
call
rorl
popf
xlat
stc
cld
sub
data16
lock
jge
dec
in
jns
pop
mov
movsb
sub
scas
xchg
mov
cmp
aad
popf
jmp
dec
inc
cmp
jl
push
sbbb
shr
sti
insl
xchg
and
xchg
movsb
ss
out
push
cltd
ficoms
mov
roll
rorb
inc
clc
adc
scas
jne
orl
lahf
or
xor
xchg
dec
repnz
xor
xchg
dec
cmp
add
ret
fwait
pop
int
sub
xor
lods
jg
pop
vaddps
cmp
lcall
mov
mov
addl
repz
mov
pop
lahf
fdivr
mov
cmp
mov
test
pop
rcll
dec
ja
cmp
push
aas
fisubs
inc
aas
mov
mov
scas
xor
fldl
pop
fisttps
lock
addr16
cs
cmp
mov
jmp
jo
inc
push
xor
fs
mov
out
push
punpcklwd
faddl
daa
pushf
inc
xchg
lods
inc
or
std
jg
lea
jmp
sbb
dec
pop
add
inc
call
cld
cmpsb
mov
ja
mov
clc
sbb
aad
or
cmpsl
out
lods
dec
pushf
jmp
adc
add
mov
mov
aad
jmp
mov
insl
dec
mov
xchg
imul
sub
sti
fldlg2
daa
out
lea
icebp
pop
pop
pop
xchg
push
xor
adc
clc
pop
dec
pop
loop
cld
lds
repz
cmp
das
sbb
xchg
xchg
out
cs
add
and
clts
push
fistpll
jne
mov
jnp
mov
lret
lcall
test
fimuls
dec
xchg
xor
mov
push
lods
adc
test
or
das
jge
mov
stc
mov
mov
popa
sbb
enter
cmpsl
jnp
pop
ret
push
xchg
pusha
and
neg
cmp
outsb
sti
outsl
and
lea
lret
aam
aaa
sbb
outsb
xor
ret
mov
ljmp
in
sbb
rcpps
sti
fistl
cmp
xor
enter
inc
dec
add
jl
in
pop
fnsave
push
xchg
popa
sbb
sbb
ret
sub
sbb
add
ficoml
nop
cmp
jge
arpl
jne
das
xor
cmp
lahf
jl
cltd
cmp
lea
lods
or
pop
push
insl
popf
mov
aas
sahf
jb
jge
pop
arpl
outsl
pop
pop
scas
adc
and
cmp
lret
cwtl
dec
add
cmp
aam
addl
mov
jo
mov
cmp
cmpxchg
add
mov
pop
ss
sbb
add
sbb
fbld
cmp
inc
xchg
movsl
pushf
xor
out
ljmp
mov
into
std
shrl
push
sbb
and
or
xchg
stos
dec
mov
jb
test
fisubl
pop
pushf
ja
sbb
lahf
adc
xchg
outsl
in
xchg
mov
js
push
int
dec
and
test
dec
pop
scas
imul
popa
in
leave
sbb
aad
lds
lret
call
insl
das
out
mov
fbstp
inc
lahf
pop
jb
fucomp
ds
call
add
push
clc
std
add
rclb
push
push
out
imul
sbb
ret
mov
jae
jle
lret
out
cmp
out
aas
mov
movsb
into
ss
mov
int3
lods
sbb
lds
cld
push
dec
adc
icebp
mov
add
sahf
sub
pop
cwtl
pop
ret
int
loopne
sbb
mov
ljmp
jo
pop
adc
iret
sbb
add
mov
or
and
xchg
imulb
shrl
add
sub
aad
pop
test
shrb
ss
mov
popf
push
insl
sbb
int3
fdivrl
cltd
test
pop
push
mov
push
push
outsl
and
pusha
mov
gs
sbb
jo
test
mov
mov
or
jnp
inc
sbb
popf
sub
scas
inc
adc
or
push
fstpt
les
or
dec
cli
xchg
xchg
test
xor
jb
lahf
xchg
loopne
out
jb
nop
jmp
sbb
jecxz
fwait
test
sbb
mov
das
xchg
inc
out
inc
std
sbb
stc
stos
adc
xchg
jecxz
gs
rol
sub
mov
add
sbb
inc
jp
lods
dec
inc
sbb
jbe
xorl
jb
mov
imul
xlat
scas
sbb
lret
enter
fisubrl
cld
xor
in
fistpl
xor
gs
subb
xchg
lds
repnz
xchg
rcrl
push
sbb
ljmp
mov
push
inc
sti
dec
shrl
adc
stos
add
pop
add
cld
clc
arpl
inc
push
sbb
mov
add
mov
test
rorb
lret
xchg
cmp
imul
mov
jae
pop
das
adc
es
call
nop
mov
aad
dec
sbb
sub
fcoml
into
dec
popf
mov
fnstcw
arpl
stos
dec
rolb
mov
and
ds
xor
xor
or
mov
sbb
push
adc
scas
mov
shll
test
lret
mov
mov
out
stos
cmp
ret
es
addr16
jns
push
jl
add
cmpsb
shrb
notb
mov
xchg
mov
fisubs
lds
push
or
dec
cmp
lods
mov
into
lods
inc
xchg
out
inc
cmpsb
mov
nop
inc
cmp
dec
arpl
outsb
in
jne
and
sub
aam
or
sub
xchg
int3
cmpsb
sub
inc
out
das
nop
xchg
sbb
subb
out
popf
lret
enter
jge
push
shll
add
test
cmp
lods
gs
push
mov
cmp
mov
jp
xor
movsl
mov
jmp
movsl
insl
xchg
or
rdtsc
add
add
out
dec
xchg
fs
cmc
popl
outsb
mov
popa
int
scas
test
cwtl
iret
adc
arpl
jp
xor
stos
sub
mov
mov
sub
or
and
dec
call
xchg
lret
std
xchg
lea
cltd
sub
jp
mov
push
mov
enter
sti
or
dec
pause
repnz
daa
push
jns
in
cmp
mov
sbb
lea
imul
mov
lahf
dec
or
cli
pop
repnz
fldenv
scas
push
fildl
in
jo
pop
popf
push
cmp
and
jnp
in
mov
data16
xor
out
sahf
jmp
shl
jns
mov
mov
loop
ds
sub
push
orb
and
and
fisttps
xchg
mov
cmc
imul
jecxz
cmpsb
mov
mov
aam
aaa
rcrl
dec
gs
out
push
jge
popa
divl
popa
sub
xchg
pop
mov
pusha
xchg
rclb
push
mov
push
pop
test
shl
jge
pop
call
xchg
adc
aad
add
dec
test
cmp
lods
jmp
xor
dec
lds
pop
lds
faddl
lret
inc
xor
aaa
cmpsb
loopne
lds
xchg
inc
mov
mov
enter
jmp
enter
jl
pop
mov
insl
mov
mov
loope
stos
cmp
or
fcoml
or
popa
mov
sub
xorl
jl
and
and
xchg
push
pop
out
xchg
sub
xor
sub
into
adc
in
sar
xor
pop
fs
out
jo
inc
mov
sub
loopne
jo
ds
rol
mov
pusha
mov
mov
mov
xchg
mov
xchg
mov
add
xor
xor
lods
inc
xchg
pop
inc
adc
fstp
and
mov
clc
sbb
es
loope
aaa
int
loop
xor
push
fs
push
gs
jbe
jl
out
cmp
testl
not
jo
xchg
movsb
xchg
and
adc
add
xchg
pop
addr16
jp
in
pop
cmp
sbb
dec
sbb
cmp
cmp
je
test
push
mov
dec
out
ffreep
gs
cli
rcl
jne
std
pop
shl
cmc
in
int
cld
arpl
sub
lret
sbb
jg
gs
stos
dec
stos
sahf
in
leave
push
mov
les
inc
sbb
and
lods
add
aam
adc
lods
jo
enter
sub
loope
hlt
adc
shrl
sbb
and
fidivl
add
addb
mov
adc
fmul
imull
fucomp
je
cmpsb
icebp
adc
fidivl
lret
push
sti
stc
or
and
call
mov
add
fimull
in
lods
test
sub
lods
test
pop
ss
push
adc
xchg
pop
jle
sbb
jne
iret
fs
push
sub
xor
sbbb
xchg
and
mov
mov
ficomps
sub
nop
movsb
pop
pop
mov
mov
mov
adc
ret
dec
shl
jle
fildl
and
and
in
loop
icebp
pop
out
mov
scas
lcall
imul
sbb
jbe
pop
xchg
jp
jb
pop
das
jmp
lods
ds
scas
jg
cli
mov
fs
insb
adc
es
sbb
cmpsl
aad
scas
xchg
fldl
push
addr16
mov
lret
hlt
and
push
add
pusha
adc
lods
jno
jno
adc
fisubrs
int3
jnp
addr16
mov
inc
pop
inc
out
movsb
mov
mov
or
lods
imul
call
dec
or
add
js
jne
and
shl
pop
in
test
sar
sub
out
cli
cmp
out
out
inc
mov
and
addl
sub
fs
insl
in
repnz
das
data16
test
pop
idivb
scas
insl
pop
ss
movsb
jno
test
or
test
ss
fwait
test
cmp
push
cmpsl
mov
xor
test
mov
cmp
adc
cmpsl
mov
add
int
lods
out
dec
mov
add
sub
test
mov
lahf
and
pusha
negb
sub
cmpsb
adc
mov
push
pop
mov
icebp
loope
outsb
push
sbb
mov
leave
push
sub
dec
cwtl
rorl
mov
push
cld
jb
sub
adc
icebp
mov
ljmp
call
sbb
sub
leave
push
std
mov
icebp
jmp
adc
sub
pushl
les
loop
dec
add
call
daa
push
add
mov
insb
or
pop
leave
or
or
mov
clc
aas
jp
jge
iret
pop
add
popa
outsl
sahf
mov
scas
cmp
and
jnp
into
cmp
push
mov
es
add
cmp
jmp
scas
add
mov
mov
cmp
lock
jno
cmp
test
repnz
shlb
bound
mov
push
lahf
loopne
cmp
lahf
pop
insb
out
mov
out
repz
sbb
lds
jl
mov
int3
ss
lea
outsb
xchg
aad
xor
push
jnp
out
cmpsb
xchg
cld
sbb
add
pushf
fistl
lock
inc
scas
mov
sbb
lret
push
pop
in
mov
outsb
adc
hlt
adc
sub
push
push
mov
outsl
add
add
cltd
iret
dec
into
lock
cltd
mov
sbb
mov
mov
out
hlt
imul
and
data16
nop
shl
dec
pop
sub
sbb
sub
push
mov
push
add
idivl
jnp
fdiv
sbb
mov
adc
inc
fmuls
adc
mov
fs
lahf
imul
insl
lahf
jecxz
push
and
mov
inc
lods
xor
dec
xchg
nop
popa
ljmp
mov
cmp
aad
add
and
xchg
movsb
mov
push
inc
inc
pop
cltd
sub
aam
mov
inc
repnz
outsb
mov
xor
clc
adc
movsl
jne
lcall
int3
mov
ret
lret
aas
inc
pushf
ret
xchg
dec
and
call
dec
test
ror
ljmp
xchg
daa
sahf
push
out
xor
adc
out
sub
mov
popf
or
pop
xlat
or
insb
mov
sub
fwait
shr
and
adc
push
add
rcrl
movsb
cwtl
sbb
in
pop
xor
lock
test
fldenv
pop
cmpsl
dec
shlb
mov
sub
mov
jge
and
or
in
mov
adc
ja
ret
mov
add
loopne
ss
push
jle
in
xor
lret
lahf
xchg
rcl
xor
mov
xor
pop
xchg
ljmp
sbb
testb
mov
mov
mov
loope
fsts
xor
test
or
or
add
push
add
rcr
lret
icebp
jo
xchg
mov
xchg
cmpsl
movl
punpckhbw
pop
ret
mov
fists
and
fcomi
js
sbbl
data16
push
cmp
push
in
rolb
test
cltd
xchg
mov
dec
sbbb
mov
sbb
xchg
inc
sbb
dec
sub
or
jns
out
repnz
push
pop
add
out
sbb
cmp
mov
data16
stos
scas
mov
and
popa
test
sub
xor
data16
jae
les
mov
into
pop
stos
mov
mov
popa
adc
jae
into
ljmp
insl
ss
addb
loope
and
sbb
add
ficoms
dec
or
mov
cwtl
mov
mov
cmp
and
and
or
lret
mov
lea
add
out
movd
fwait
and
xchg
adc
jle
mov
push
test
jnp
add
aam
pop
mov
push
sahf
loope
aaa
cmp
shrl
xor
es
cmpsl
inc
int
cmp
push
pop
int3
sbb
dec
xor
inc
aam
mov
leave
dec
inc
adc
push
aad
mov
scas
xor
and
xchg
mov
hlt
das
int3
dec
rolb
repz
lods
ss
pop
xor
push
dec
sub
aam
dec
js
cmpsb
mov
pop
pusha
pusha
loopne
lods
repnz
insb
or
cmp
jp
cli
mov
in
xchg
aad
cmp
data16
sbb
adc
cmp
ret
aas
inc
lods
sqrtps
js
pop
add
jo
pop
or
lods
xlat
call
imul
push
sbb
insl
inc
and
sub
or
xor
push
inc
sub
push
out
add
or
sbb
daa
out
jmp
xor
pop
cmpsl
movsl
decb
mov
cmp
testl
stc
xor
call
aad
pop
jp
push
ja
call
in
cmpsl
insb
out
in
push
fs
sbb
pop
or
andb
ret
xchg
outsl
sbb
ds
out
push
cmp
xchg
loop
xchg
jmp
jg
into
or
aaa
pop
repnz
mov
lcall
and
mov
lret
ficomps
mov
in
jl
ret
icebp
push
lods
out
xor
or
mov
sbb
ja
and
add
jg
fs
mov
mov
call
sub
mov
xchg
shrb
push
movsl
aas
mov
cmp
outsl
test
lds
dec
insb
gs
cmpsb
leave
xchg
cmc
scas
pop
enter
in
push
dec
sahf
adc
std
inc
xor
xchg
test
insb
fistpll
in
fnstcw
rorb
nop
mov
dec
cmpsb
or
xchg
pop
cmp
movsb
sarb
dec
test
loope
pop
rcll
mov
popf
iret
add
inc
daa
lods
icebp
cmp
sub
pop
fwait
adc
pop
pop
dec
inc
mov
jge
mov
mov
mov
pusha
mov
mov
mov
cmp
outsl
fistpll
call
inc
pushf
pop
add
and
push
cwtl
adc
push
xor
dec
aad
add
sahf
aas
push
cmpsb
jle
idivl
xor
pop
mov
repnz
out
data16
cli
sbb
pop
sub
addr16
in
sbb
in
int
dec
icebp
push
pop
lods
bound
add
aaa
mov
lcall
rcrl
xchg
subl
fwait
jbe
mov
daa
adc
arpl
out
jl
cmc
sbb
or
pop
inc
sub
jmp
insl
jo
pop
inc
xor
insl
jl
in
push
loop
dec
or
ds
xor
mov
adc
xchg
add
andl
pop
xchg
sbb
sub
cwtl
bound
fcmovne
shr
or
dec
les
das
push
in
cmp
or
filds
jle
ljmp
pop
dec
das
testb
out
addb
pop
addr16
jae
push
shr
mov
out
mov
jno
jg
fiadds
aas
adc
js
mov
mov
pop
into
sub
int3
lret
fucompp
mov
jno
fistpll
in
and
pop
xor
pop
cmp
call
andl
mov
sti
lods
and
lods
fsubrs
mov
out
pop
mov
add
dec
adc
push
test
movl
push
add
mov
pxor
dec
sbb
add
mov
int
fdivl
in
loope
dec
push
or
xor
xchg
das
jns
push
iret
sub
in
xor
filds
je
fisubrl
inc
icebp
push
popf
inc
sub
pop
mov
push
fistl
adc
xchg
mov
add
sub
sbb
jle
subl
mov
pop
sbb
xchg
push
outsb
dec
add
mov
iret
push
jne
shlb
jecxz
in
dec
iret
inc
add
aam
pop
add
or
cltd
enter
cmp
push
sub
sub
imul
inc
adc
iret
leave
cmc
cmp
mov
lcall
stos
xor
loope
mov
pusha
xchg
mov
shrb
fimuls
jle
add
xchg
dec
loope
aas
clc
add
div
mov
mov
addr16
ds
push
pop
and
je
jo
sti
enter
jl
loope
mov
add
pop
cmpsl
call
cli
pop
jnp
cltd
and
nop
iret
mov
icebp
push
movsl
adc
jg
jmp
pop
stos
xor
mov
imul
add
cmpsb
cmp
cmp
mov
pop
loop
fstpl
test
pop
xchg
adc
push
jb
sub
scas
stos
sub
test
test
stos
lcall
pop
push
cwtl
imul
out
push
mov
and
subb
fidivrl
jecxz
and
mov
fidivrs
dec
dec
sbb
sti
pop
push
imul
lret
mov
adc
mov
inc
mov
mov
inc
jmp
insb
cltd
jae
ljmp
jmp
cmpl
push
and
bnd
inc
pop
ljmp
fnsave
jno
xor
movsl
dec
call
jo
jmp
in
dec
or
add
or
mov
jo
push
cmpsl
cli
repnz
rol
and
and
xchg
xor
pushf
subl
loope
and
std
nop
daa
ds
sti
gs
adc
je
dec
jp
add
and
int3
movsb
pusha
push
push
push
popa
xchg
imul
lea
lahf
ds
imul
repz
out
out
popf
insl
rclb
test
pushf
lods
repz
jecxz
add
sbb
imul
jne
leave
rcrb
adc
inc
pop
xor
in
ss
flds
xchg
mov
sbb
lds
cmp
mov
dec
testl
fs
xchg
jbe
je
lret
fstps
push
mov
mov
repnz
xchg
fldt
addb
sbbb
jl
cmpsl
cmpsb
mov
leave
xlat
mov
jb
inc
jne
fldcw
jl
popf
mov
test
or
jle
xlat
out
dec
test
xchg
push
cwtl
clc
pop
rcr
mov
loope
mov
lret
and
cmc
stc
mov
testb
push
fwait
xchg
dec
outsb
jmp
jmp
adcl
cmp
ret
sbb
fnstsw
addr16
insl
sub
lds
push
push
js
fsubrs
xchg
es
outsl
mov
in
cmp
adc
cmp
or
ljmp
pop
or
mov
ja
cmp
fisttpll
lret
shrb
pop
jecxz
int
jp
addl
push
sub
aad
js
adc
test
pop
and
jl
cs
mov
lods
test
fs
sub
jne
dec
lock
repz
cld
cltd
movsb
pop
in
push
mov
aas
mov
jae
inc
push
fmull
sbb
daa
push
out
pop
cs
clc
and
cmp
and
jne
add
shrl
mov
adc
push
shl
lcall
inc
mov
std
xchg
jl
test
pop
mov
je
lds
scas
pop
shll
loop
xchg
pop
push
divl
xor
push
add
push
js
imul
int
jb
sti
int
sub
mov
or
adc
jmp
mov
iret
ds
cwtl
and
shll
dec
mov
fildll
pop
push
sbb
jmp
sarl
mov
sarb
push
flds
add
data16
lret
lock
jns
xchg
dec
lock
cmp
in
sbb
jnp
dec
inc
dec
adc
sub
or
xchg
nop
movsl
out
and
or
ljmp
adc
nop
push
lret
popa
mov
push
out
xchg
andb
ret
lcall
aaa
ss
mov
xchg
stos
jp
push
jle
pop
hlt
cmp
jbe
add
mov
into
int3
fwait
bound
adc
fs
jns
rorl
jae
dec
imul
rolb
outsl
jbe
xorb
pop
popa
int3
js
or
rcrb
cli
cmp
cld
pusha
faddl
add
push
sub
or
fwait
int
inc
mov
stos
je
mov
andl
jae
in
xor
loopne
push
mov
js
or
xchg
call
or
dec
dec
cs
stos
xchg
cmp
adc
or
xor
sbb
int
data16
into
inc
mov
xor
pop
push
fdivs
insl
dec
xor
loop
flds
out
jo
rol
hlt
pop
loopne
fs
inc
and
adc
jecxz
int3
data16
mov
sub
xchg
notl
aam
cmp
aam
or
or
sub
pop
rclb
leave
fadds
enterw
adc
ljmp
es
sbb
xchg
aam
test
popf
movsl
pop
jbe
bound
sub
jne
mov
mov
ljmp
jmp
inc
pop
mov
jecxz
mov
mov
mov
xchg
or
jle
ret
sub
inc
adc
jbe
and
or
imul
push
cwtl
in
inc
pop
lock
imul
fdivrl
push
fs
xchg
negl
fistl
stos
mov
lods
or
sub
in
cmp
fildll
sub
pop
add
mov
rcl
popf
xchg
adc
push
das
rorl
and
add
int3
cmovae
pop
push
pop
sbb
add
andb
push
movsl
add
mov
cmp
fs
pop
mov
jnp
in
cwtl
fdivl
xor
out
push
arpl
dec
fbld
test
icebp
mulb
ja
jne
lret
in
adc
out
lret
popa
fcmovne
mov
jg
pop
iret
adc
add
pop
fidivl
mov
nop
divb
repz
lea
jge,pn
dec
ljmp
gs
jge
push
into
cmp
add
mov
loopne
sub
sub
cmc
sahf
mov
adc
cmpsb
adc
lret
mov
insl
pusha
or
sti
cmc
ljmp
and
jae
inc
dec
test
cmpsl
mov
cmpsb
loope
hlt
push
sub
js
ss
scas
mov
mov
cmp
in
inc
ds
dec
andl
jb
xchg
adc
sti
shlb
int3
mov
push
cmp
push
mov
lea
fmull
je
mov
cs
pop
xor
adc
xchg
call
fiaddl
fcompp
fcoms
das
lret
fldpi
add
les
fstps
sbb
stc
movsl
ret
negl
xchg
inc
jb
je
out
jae
sbb
fistps
mov
ljmp
sbbl
jbe
cmp
rcr
xchg
pop
or
and
or
push
add
neg
add
mov
push
xchg
push
adc
sub
pop
xor
xor
pop
jbe
push
dec
pop
adc
fucomip
sub
ret
sub
mov
add
pop
mov
into
loop
lcall
scas
mov
inc
data16
push
push
in
dec
arpl
test
aam
lcall
lods
adc
test
outsl
sbb
xor
push
ret
xchg
arpl
sub
or
adc
and
in
jno
icebp
jne
push
lret
sbb
int3
in
sub
shll
loop
mov
cmpsb
rorl
xchg
lds
repz
xlat
jo
adc
leave
das
sti
xchg
flds
fistpl
int3
mov
or
scas
pop
jp
cmpsl
dec
repz
fs
fisubl
xchg
jl
cmp
pop
xchg
add
or
xor
lods
lock
pop
into
jg
jbe
inc
mov
mov
loopne
lods
jmp
adc
idivb
hlt
sub
xchg
pop
imul
mov
movl
stos
mov
add
dec
mov
aam
lcall
push
fs
mov
jle
mov
sbb
cmp
rol
pop
aam
scas
mov
loope
xor
dec
fucomp
cmpsb
movsb
fnstcw
movl
stc
into
or
xor
in
ficomps
xchg
out
xlat
je
sti
jne
ds
jge
les
sub
push
inc
mov
js
test
inc
insb
jmp
fwait
jge
xchg
push
pusha
testl
sahf
add
inc
adcb
rcll
cld
shll
arpl
sbb
xorb
shlb
lods
xchg
mov
iret
mov
lods
or
repnz
sahf
fs
xchg
fwait
stos
mov
push
push
iret
inc
xchg
lods
popa
mov
stos
pushf
add
mov
dec
sub
mov
and
scas
xor
inc
add
test
mov
mov
xchg
jl
aam
mov
dec
adc
hlt
push
pusha
stc
mov
popf
pop
out
mov
mov
cwtl
mov
and
xchg
or
cmp
fistpll
sub
jecxz
out
push
push
lock
arpl
mov
in
xorl
loopne
ljmp
enter
dec
or
add
clc
jge
cmpsl
data16
dec
jbe
fwait
leave
inc
pop
in
push
lods
adc
xchg
aad
pop
mov
mov
in
jno
pop
jo
pop
lds
imul
cmp
test
rolb
rorb
shll
or
pop
jmp
aam
into
in
xchg
mov
adc
ficoms
mov
adc
std
lods
rcr
dec
mov
popa
test
shll
inc
cwtl
pop
sahf
das
clc
pusha
jp
pop
inc
mov
adc
jl
dec
inc
out
lahf
push
cwtl
es
cmp
mov
push
mov
mov
int3
xor
jmp
fmulp
fwait
mov
fildll
cmp
sbbl
cli
adc
mov
dec
movsb
mov
pop
shlb
pop
or
scas
in
lds
ja
imul
fimuls
stos
iret
fstpt
dec
mov
sbb
adc
int3
aas
or
rcrl
push
popf
js
in
mov
je
jmp
sub
mov
mov
mov
xor
jmp
sbb
stc
sti
xchg
xchg
iret
scas
enter
jns
xchg
jp
inc
mov
loop
jae
popf
ret
push
or
ficompl
clc
dec
pop
sbb
jmp
int3
ret
mov
xor
pop
push
data16
mov
xlat
test
inc
xor
adc
sbb
pop
lret
dec
mov
jl
idivl
ss
or
cmpsb
outsl
pop
sbb
dec
push
and
ror
adc
xchg
rcrb
addl
ret
cs
jo
xchg
push
or
rclb
fisttpll
cli
iret
inc
sahf
sbb
cli
js
inc
int
mov
inc
in
arpl
dec
sub
jb
xor
shlb
fadds
mov
fsub
popa
test
or
sbb
lea
out
cmp
addr16
and
sbb
divb
hlt
xchg
mov
ja
clc
scas
pop
xor
stos
jns
cmp
jl
pusha
mov
push
test
push
repz
pop
jne
cmp
out
sarb
mov
pop
pop
inc
sahf
call
lahf
add
pop
push
xchg
hlt
daa
adc
xchg
or
ficoms
bndstx
cmp
inc
adc
mov
outsb
cmp
add
jp
aaa
inc
cmp
inc
push
insb
adc
or
shr
cmpsb
inc
sbb
lea
jl
leave
xchg
sub
push
sub
in
pop
sbb
cs
dec
sub
mov
cwtl
mov
lds
push
cmc
jg
cmp
adc
aad
pop
dec
adc
inc
icebp
mull
loopne
out
add
pop
adc
iret
fisubrs
nop
cmp
jle
and
sbb
test
sti
push
ret
pop
xor
inc
jns
fucomp
jns
mov
loopne
popa
jecxz
mov
cmpsl
mov
xor
sbb
in
aas
mov
fnstcw
repnz
sbb
fcoml
add
jo
call
daa
gs
inc
jg
cmpsb
into
in
push
lds
pop
xchg
fldenv
cmp
or
cwtl
inc
push
jb
aam
loope
aas
inc
xchg
dec
jne
jl
pop
ja
call
adc
repnz
gs
mov
stos
pop
andb
repz
xchg
cs
xlat
fucomip
lds
mov
pushf
fs
adc
test
test
mov
fwait
outsl
adc
push
push
mov
jmp
inc
inc
cmp
jp
push
push
xchg
mov
into
push
ja
push
xchg
hlt
add
mov
push
dec
mov
mov
mov
fldl
leave
sub
call
imul
int3
dec
and
mov
sbb
loop
jecxz
xchg
xor
repz
mov
pop
or
push
add
sbb
lcall
push
push
out
call
jmp
cld
insl
cmp
aaa
fstpl
test
out
fildl
out
dec
sbb
jecxz
sti
mov
sbb
sahf
xor
sub
mov
insb
test
test
aaa
loopne
dec
fcmovb
sub
dec
xor
inc
xor
mov
cmpl
fldcw
cmpb
sti
xlat
push
lret
xor
rol
lods
add
mov
and
xor
das
cmp
ja
out
out
test
add
dec
sub
sub
test
pop
popf
ja
pop
fsts
aam
inc
pop
push
xor
and
test
pop
inc
loop
es
or
iret
mov
xchg
faddl
or
jo
inc
mov
jb
add
je
aas
ss
cs
jle
pop
mov
dec
pop
aas
push
pop
pop
xchg
stos
mov
aad
and
sub
or
mov
mov
cmp
xchg
push
cmp
mov
cmp
cwtl
dec
sub
jge
js
into
cmp
mov
mov
push
and
adc
stos
jl
mov
pop
stos
addb
int3
pop
frstor
jle
add
rcrb
jns
push
sbb
jle
fistpll
fcmovne
xor
pushf
cmpsl
ret
call
pop
sbb
push
dec
xchg
std
dec
divl
shll
enter
push
jo
lret
outsb
in
dec
lahf
stc
stos
insb
ret
rcrb
popa
push
lods
pop
pop
fisttps
imull
sti
pop
adc
sbb
inc
mov
mov
fwait
fwait
or
lahf
xor
addr16
sub
negl
gs
dec
mov
ljmp
outsb
jno
add
lcall
mov
rorl
push
mov
ret
movsl
mov
mov
push
scas
mov
fidivs
stc
out
sbb
push
enter
cmpl
in
mov
xor
push
mov
sub
add
iret
mov
jne
sahf
sbb
xchg
outsb
pop
and
test
mov
les
ret
fs
subl
xchg
stc
stos
fchs
pop
and
mov
mov
inc
add
out
cmpsl
lcall
out
mov
mov
xor
xorps
jecxz
sti
jmp
gs
movsl
jbe
fcoms
mov
out
cmp
or
imul
jns
pop
loop
mov
inc
stc
aaa
push
pop
lcall
mov
mov
dec
pop
mov
stos
pop
imul
and
movsl
sahf
imul
adc
sarb
cld
notb
sub
jb
dec
and
loopne
outsl
xchg
movsb
sbb
jae
int3
inc
jnp
sub
push
pop
das
popf
dec
xlat
sti
out
mov
dec
movsb
add
cld
js
sub
or
in
ljmp
mov
pop
out
dec
data16
xchg
je
lret
pop
xor
ret
mov
sbb
icebp
clc
stos
fstpl
jo
jne
or
iret
xchg
mov
push
clc
leave
adc
push
repnz
xor
mov
sbb
inc
jp
push
outsb
push
add
and
and
mov
and
pop
ljmp
lea
mov
mov
pop
icebp
push
mov
dec
js
daa
cmp
mov
inc
test
push
fstpt
lods
sbb
sbb
lcall
mov
pop
xlat
jb
leave
inc
out
mov
dec
ja
xchg
inc
call
adc
aas
mov
push
xchg
add
in
or
push
jb
mov
mov
ret
popf
dec
mov
insl
sti
xchg
gs
cmp
movsb
dec
sbb
jo
mov
popa
cli
ljmp
pop
cwtl
add
sbb
jg
loop
mov
push
pop
sbb
sub
mov
mov
ss
outsb
jmp
loopne
in
lahf
or
inc
add
pop
xlat
push
hlt
test
sub
out
rorb
jo
adc
mov
rcrl
sub
into
add
push
lods
daa
insb
jmp
xor
ljmp
mov
clc
inc
pop
popf
pop
sub
push
dec
dec
cmp
lcall
aam
dec
pop
test
rorb
fsubrs
repz
cmc
inc
movsb
sub
adc
xor
fsubr
cmp
jnp
adc
popa
sub
gs
outsb
fadds
std
pop
inc
sahf
pop
icebp
pop
popf
inc
mov
cs
pop
pop
mov
xchg
xor
popf
cmp
fimuls
push
pop
jb
push
ficoms
imul
xchg
mov
jo
cmpsb
xchg
or
jl
mov
divl
sub
roll
dec
pop
mov
stos
rcll
mov
scas
scas
push
or
arpl
dec
adc
push
cmp
fisubrl
scas
ret
add
push
scas
ret
mov
lea
lods
pop
mov
xor
lret
sahf
das
stc
jno
loop
movsb
xchg
sub
das
cmp
out
shll
push
ljmp
data16
scas
je
xor
inc
sub
jmp
aaa
rol
scas
popa
fsubl
or
lods
and
andl
adc
movsl
pop
cld
inc
xchg
cmc
leave
cmp
cmp
xor
sub
pop
mov
test
inc
cmp
pop
push
idivl
shlb
data16
xor
iret
ja
fcoml
test
cmpsb
push
sbb
bound
lock
mov
negb
sub
adc
sbb
lods
rcrl
push
xorl
aaa
mov
into
cwtl
mov
clc
or
push
ja
cltd
fwait
jge
in
and
pop
lea
loope
push
test
cmp
fmull
dec
sbb
mov
je
or
icebp
pop
push
or
out
fs
icebp
and
pushf
arpl
jno,pt
or
mov
push
xlat
loop
lcall
mov
dec
push
andl
dec
ret
pop
lcall
cmp
decl
fimull
dec
std
lahf
push
sub
jp
xchg
mov
pop
popf
insl
pushf
out
pushl
in
or
push
testb
imul
fxtract
les
je
int3
add
lahf
insb
and
sbb
and
mov
mov
test
aaa
ds
lods
sub
and
dec
cli
ja
xor
fdivrs
add
ds
jmp
cs
inc
das
js
mov
repz
push
push
jp
test
xlat
pop
out
push
mov
mov
sbb
rorb
fucomp
dec
mov
mov
pop
inc
mov
xor
pusha
jmp
sub
mov
pop
in
in
add
cld
push
retw
leave
imul
sbb
cwtl
loope
or
lods
push
push
xor
sahf
aaa
adc
imul
lods
or
aam
and
adc
in
pop
inc
insl
push
mov
jl
xor
jbe
xchg
mov
and
jg
adc
sub
inc
mov
sub
arpl
jge
push
cmpsl
shll
mov
mov
dec
stos
xchg
loope
fadd
pop
push
stos
js
mov
jmp
or
fstps
cmp
sbb
fdivs
lock
xchg
push
lret
sbb
ja
add
lret
sti
sti
pop
sub
gs
mov
mov
les
xor
imul
mov
ret
jae
jbe
pop
pop
dec
enter
push
xor
inc
out
push
inc
sub
adc
jecxz
mov
mov
rcr
fcmovb
jmp
fdiv
xor
inc
repnz
fdivs
or
push
mov
ret
jmp
pop
cmp
fwait
enter
push
loope
push
mov
push
mov
psraw
sbb
pop
rcrl
pusha
ret
mov
jb
loopne
test
inc
cmc
push
dec
lahf
inc
fildl
sub
adc
inc
jne
add
cmp
movb
adc
mov
inc
lea
mov
loopne
imul
test
adc
addr16
addr16
je
mov
jl
sbb
sarl
test
addl
repz
adc
int3
cwtl
sub
scas
out
xchg
jb
push
cmp
fwait
leave
loopne
xchg
mov
jg
and
mov
fdivl
dec
inc
ds
xor
popf
push
repnz
loop
and
fdivl
jl
fmul
rcr
dec
adc
pop
lcall
ss
jb
fildll
insb
out
push
mov
stc
or
rcrb
xor
cbtw
ja
jmp
push
sbb
mov
sub
popa
sub
pop
imul
push
int3
fnsave
sub
loopne
nop
mov
push
popa
inc
and
ljmp
ffree
movsb
jmp
jb
les
sub
sbb
fcoml
dec
mov
into
mov
sub
adc
mov
addb
add
or
mov
cmp
std
add
cmpb
push
pop
bound
stos
adc
pop
pop
cli
rcr
fsubp
iret
mov
stc
shll
inc
mov
sbb
shrl
xchg
fs
xor
push
js
xor
or
scas
shl
mov
stos
les
out
mov
leave
add
loope
lods
cld
inc
push
inc
dec
lock
les
xlat
inc
xchg
jmp
cmpsb
dec
loopne
int3
jmp
rol
in
add
out
test
or
imul
cmpsl
lods
sbb
test
push
decb
stc
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
movsbl
or
mov
mov
mov
sub
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
push
andl
mov
mov
movl
mov
or
push
mov
mov
mov
and
mov
or
xor
xor
and
mov
subl
add
sbbl
add
imul
movl
mov
movl
cmp
je
or
mov
mov
mov
xorl
xor
sbbl
lea
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
pushl
push
push
pushl
call
jmp
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
outsb
sti
ss
add
add
add
add
xor
add
rorb
rolb
add
add
push
push
inc
push
enter
int3
jecxz
inc
movsb
cmpsb
lret
mov
add
inc
cmp
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
