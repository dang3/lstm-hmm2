push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
adc
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
inc
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
push
lea
out
mov
cmp
jp
out
inc
movsb
jns
and
dec
and
inc
shll
inc
adc
daa
fstp
dec
addr16
sub
pop
in
sub
push
sbb
iret
out
leave
dec
jge
pop
aaa
mov
add
sbb
into
daa
push
sarb
into
outsl
mov
dec
pusha
adc
adc
lds
xchg
cwtl
pop
clc
insl
mov
adc
dec
lods
jp
data16
mov
mov
xchg
fwait
push
out
pushf
pop
adc
jo
push
bound
add
arpl
cmp
dec
dec
inc
dec
mov
sbb
js
out
sub
xchg
test
ret
shlb
mov
fimuls
insb
mov
mov
subb
movsb
jo
mov
jl
sbb
pop
pop
and
arpl
bound
loop
or
movsb
scas
or
pop
pushf
imul
mov
ss
and
dec
lods
dec
arpl
cltd
xor
pop
lret
xor
outsb
xchg
mov
push
jle
jl
rol
cs
mov
xchg
push
mov
xchg
cmc
pop
push
lret
jae
add
mov
adc
and
inc
cld
jmp
clc
icebp
mov
icebp
ficompl
mov
jo
jo
jo
jo
inc
repnz
cld
scas
shl
jg
sub
pop
lea
nop
jne
xor
mov
jne
mov
lds
aaa
sahf
push
mov
out
scas
mov
dec
rorl
jmp
test
lret
jmp
cmp
cmpsl
je
jmp
jecxz
cmc
clc
mov
movb
in
aad
test
lret
or
or
int3
std
mov
push
hlt
bnd
mov
test
iret
lcall
and
add
cmp
push
movsl
imulb
test
pop
ja
ret
rcl
jnp
scas
jne
lods
or
jecxz
pop
in
adc
sub
int3
xchg
cli
cmp
ret
sbb
mov
out
leave
loope
xchg
dec
sub
negb
popf
popf
clc
hlt
adc
xor
jbe
test
sbb
xchg
inc
jp
daa
cmp
outsb
popf
test
jp
push
mov
jg
mov
xchg
push
lds
add
fldl
ss
pop
test
outsl
shr
ds
into
jmp
repz
pop
xchg
xor
popa
mov
mov
sub
sbb
daa
dec
ds
fimuls
mov
cs
popa
add
jnp
adc
hlt
lock
inc
push
in
or
sub
cmp
fnsave
mov
mov
and
mov
push
cmpl
ret
dec
pop
cmc
xor
jp
jns
out
jns
lcall
sub
pop
stc
pop
mov
xchg
and
add
jmp
push
add
or
mov
jne
jne
sub
pushf
or
bound
mov
xchg
dec
lods
ss
pushl
les
jnp
sbb
pop
imul
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
xchg
mov
jo
jo
jo
jo
cmp
aad
popf
xor
les
bound
jae
aam
fcomps
inc
xchg
mov
and
lret
pop
int3
xchg
and
in
rorb
jp
hlt
jmp
mov
push
out
adc
cmc
dec
insl
pop
jmp
sbb
mov
rorb
ljmp
cmp
and
sub
imul
hlt
and
sbb
mov
sbb
sub
scas
jg
fldt
mov
ljmp
push
aas
in
or
mov
and
pop
or
push
pop
cmpb
sbb
push
in
sub
pop
adc
xchg
adc
or
sub
and
aad
ret
fchs
cmp
lahf
sub
sub
lret
pop
sarb
outsl
pcmpgtd
sbb
mov
xchg
fldcw
arpl
mov
or
fdivrs
dec
idivl
sub
cmp
jmp
inc
ja
imul
pop
and
cmp
or
adc
cmc
into
stos
and
dec
mov
add
jle
in
mov
cmp
insb
adc
call
je
mov
dec
fcom
addr16
jl
push
test
out
les
jnp
cmpb
xchg
inc
rcrl
jbe
jg
fdivr
nop
jns
insb
hlt
and
pushf
sbb
xchg
pop
cmp
adc
mov
mov
test
lods
pop
imull
in
imul
or
push
subl
jge
or
stc
lods
stos
pop
mov
inc
stos
xchg
rol
push
jg
cmp
jno
cmc
push
mov
test
or
jmpw
jae
sbb
into
and
push
push
std
add
or
mov
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
jmp
jo
jo
jo
jae
push
push
mov
push
mov
xor
int
push
repnz
xchg
pop
or
cs
testb
push
xchg
adc
fadd
cmp
daa
jle
and
jp
cwtl
jb
cmp
lds
push
andb
mov
mov
int3
lds
sbb
stos
push
mov
xchg
ret
pop
push
mov
and
int
cs
daa
imul
insb
pop
xor
daa
pop
mov
orb
in
push
add
loopne
ret
cmp
imul
mov
lods
out
pop
inc
add
and
inc
aaa
jp
pop
in
jmp
fbld
out
out
sub
addr16
pop
aaa
push
mov
push
in
ja
vmovdqu
shlb
jb
cmp
pop
cs
into
aaa
outsl
out
stos
dec
ljmp
inc
jno
repnz
test
fdiv
sbb
fldt
mov
dec
xor
cmpsb
and
mov
and
addb
mov
sbb
inc
les
sub
test
jmp
push
and
jno
bound
pop
loope
insl
adc
pusha
test
out
les
es
xchg
dec
jge
shll
add
lods
cwtl
mov
pop
lret
int
ret
divl
lret
adc
xchg
mov
sbb
icebp
and
popf
cltd
ret
roll
push
in
sti
sbb
aam
repnz
pop
fildl
stos
in
inc
mov
xor
mov
shl
dec
outsb
out
mov
loope
add
cmp
adc
loop
xchg
dec
pop
lds
scas
pushf
mov
popa
adc
mov
push
xor
ss
mov
xchg
jl
rolb
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
mov
jo
jo
jo
cmpsl
push
adc
neg
jbe
mov
mov
or
enter
adc
pop
sub
inc
pop
push
jns
mov
push
xchg
xchg
popf
xchg
adc
cmc
pop
mov
insl
xchg
aaa
push
inc
xor
dec
mov
je
out
adcl
movsb
push
xchg
mov
lock
push
out
mov
out
sbb
testb
les
loop
iret
movl
mov
dec
xor
stos
fucomip
xlat
cwtl
outsb
loope
xchg
movsb
out
push
or
sbb
pop
mov
pop
insb
inc
fisubrs
dec
dec
add
cmp
pop
sbb
mov
inc
jge
jnp
in
loope
mov
dec
mov
sbb
jle
mov
mov
dec
pop
xor
cmp
push
push
ficoml
nop
pop
aam
inc
jle
das
ja
sti
arpl
lock
push
jge
adc
pop
pop
mov
lock
pop
cli
mov
mov
jne
jmp
pop
sbb
pop
pop
das
cli
cmp
or
and
mov
or
in
jb
sbbb
mov
popf
pop
sub
sub
mov
cld
and
cmc
mov
repnz
stos
jge
out
cwtl
dec
je
xchg
cmp
cmpsb
mov
sar
ret
lahf
in
popa
jmp
dec
ds
or
ljmp
inc
movsb
aad
sbb
adc
add
mov
jno
sbb
imul
pop
inc
and
and
das
cwtl
rolb
xor
into
cld
pop
jmp
jg
das
fisubrl
out
fldenv
jg
add
xor
cmpsl
mov
add
mov
imul
lock
roll
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
and
jo
jo
jo
jo
imul
push
jns
pop
int
pop
push
jp
xchg
cmp
xchg
dec
icebp
dec
push
js
outsl
test
mov
ficompl
pop
dec
ds
sub
dec
stos
xchg
add
nop
notl
arpl
js
mov
in
rorb
cmp
adc
dec
insb
mov
lock
ja
fisubrs
pop
sub
pop
push
fsts
cli
mov
sub
inc
sbb
adc
pop
scas
rcll
pop
push
mov
jne
adc
lods
xchg
ss
lock
popf
cmp
repnz
mov
das
stos
and
roll
mov
mov
shll
sbb
inc
sbb
xor
push
popf
mov
inc
in
lods
je
fcompl
mov
dec
das
xor
std
ja
lods
in
add
jb
lahf
fidivrl
cmp
loop
in
sub
stc
xchg
mov
push
mov
xchg
jle
lods
mov
cs
loope
mov
ljmp
and
adc
fcomi
xchg
daa
nop
cmp
imul
fwait
addr16
cmp
xchg
mov
jle
xor
sub
dec
dec
sahf
shrb
adc
sahf
out
push
and
and
shll
and
push
imul
add
nop
out
and
mov
bnd
inc
jbe
aas
xor
sbb
cli
enter
fcomi
adc
movsl
sbb
hlt
fdivrs
int3
cmp
sbb
pop
pop
mov
std
movsl
and
dec
dec
repz
fstps
fwait
mov
cld
mov
leave
adc
loopne
jl
ds
jle
adc
cltd
fwait
pop
adc
or
aaa
filds
lods
insb
cmc
jmp
jp
inc
sti
es
and
in
mov
ret
sub
xchg
inc
and
add
cmp
jmp
ret
gs
cmpsl
insb
cmpb
imul
std
inc
adc
and
lcall
stos
sub
cmc
aaa
aad
jo
sub
sbb
mul
fcomp
mov
scas
and
aam
pop
mov
stos
iret
aaa
mov
sbb
dec
pop
mov
std
mov
ja
imulb
dec
fidivs
cmp
mov
test
fsts
dec
and
inc
popf
xchg
sbb
ret
xchg
inc
jne
mov
inc
daa
mov
outsl
add
xor
out
xlat
rclb
mov
scas
pop
rclb
and
xor
sti
stos
dec
cmp
aad
xlat
popa
inc
scas
sbb
andb
push
or
stos
mov
jnp
jge
jbe
aaa
cli
lods
dec
sub
inc
insb
ret
pop
sbb
sub
ret
or
sbbb
enter
pop
push
jmp
or
in
mov
xor
mov
lret
out
push
mov
xchg
in
lcall
lret
arpl
in
bound
cmp
movsl
sbb
jle
into
jmp
mov
mov
cmp
xlat
jo
xorl
into
stc
jae
inc
xor
adc
jbe
out
jne
enter
enter
ret
xor
dec
adc
arpl
gs
pop
jg
das
leave
pop
mov
xlat
mov
mov
mov
sbb
cmpsl
fisttpll
outsb
cmovs
test
test
hlt
loopne
ja
mov
mov
jnp
sti
imul
adc
pusha
jmp
test
fnstenv
jg
mov
xor
ss
andl
jle
das
sar
push
clc
push
mov
add
nop
push
or
sub
mov
mov
cmpsl
dec
jl
jg
inc
iret
cld
jl
xor
fisttpl
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
adc
enter
mov
xor
gs
inc
imul
das
stos
jmp
jo
mov
xchg
popf
push
pop
cmp
repz
lods
loopne
sahf
add
cmc
lods
jae
mov
mov
adc
lcall
out
fldcw
inc
rep
jae
dec
ss
jmp
sub
lods
jo
dec
imul
stos
or
mov
imul
mov
adc
mov
sub
in
cmpsb
sarl
out
int3
shl
mov
ljmp
and
xchg
mov
mov
fcoms
jecxz
shl
jp
adc
inc
outsl
mov
out
jge,pt
mov
cltd
fwait
test
push
xchg
ficoml
lds
jae
pop
hlt
mov
dec
js
mov
sbb
dec
push
inc
and
mov
adcl
repnz
xchg
mov
mov
loop,pn
and
sub
push
scas
insl
jmp
adcl
arpl
push
pop
mov
xchg
push
test
xor
adc
ret
jbe
scas
int
adc
mov
xlat
clc
ret
push
rcrl
jp
jge
call
out
mov
aam
jle
lar
cli
mov
xchg
or
mov
imul
xor
cwtl
sbb
int3
cmpsb
pop
xor
pop
add
imul
fidivrl
cmpsl
push
mov
mov
test
divb
push
xchg
mov
push
test
aaa
popa
push
xchg
or
arpl
dec
es
pop
xor
loop
int3
add
push
xchg
xchg
lock
xor
fst
sub
jnp
dec
cmpsl
mov
shrb
xor
push
mov
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
movsl
jo
jo
jo
jo
std
decl
dec
inc
cmp
dec
dec
push
ja
pop
movsb
dec
sub
int
mov
shl
aaa
cmpsl
js
and
sbb
mov
inc
pop
jg
mov
imul
mov
shll
add
imul
push
mov
fs
adc
jns
sbb
dec
push
inc
int3
lods
imul
sti
data16
sub
scas
mov
into
or
ljmp
addr16
inc
mov
shrb
mov
push
jge
cmpsl
imul
imul
lods
ja
pop
cmp
push
lods
rcrb
jne
mov
mov
repz
adc
mov
push
xor
mov
and
cmp
imul
jle
sbb
pop
jnp
sbb
inc
xchg
test
mov
inc
inc
mov
sub
out
add
dec
iret
cld
xchg
xchg
sbb
mov
arpl
xchg
popl
sub
sahf
ljmp
dec
inc
cwtl
pop
pop
push
push
dec
push
sub
mov
dec
insb
mov
mov
iret
mov
xlat
sub
push
iret
and
cmpsb
dec
push
or
es
add
in
mov
arpl
imul
xlat
push
cmpsl
ss
push
lods
push
test
inc
mov
int
cmp
dec
ja
and
add
jge
stc
jns
cwtl
popf
lahf
push
mov
jg
mov
jae
add
aas
push
in
ljmp
jbe
dec
mov
xchg
movaps
push
repnz
inc
cld
cmp
repnz
mov
adc
addr16
nop
sahf
push
in
or
shl
inc
mov
scas
push
xor
leave
mov
lock
popa
add
scas
jnp
xor
call
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
push
test
mov
dec
xchg
in
inc
out
fwait
push
std
cmp
adc
pop
mov
cwtl
inc
imul
xchg
sub
adc
cs
mov
std
mov
cwtl
stos
jo
inc
icebp
mov
movsl
sets
rcr
adc
pop
jp
mov
cmpb
test
lods
dec
out
mov
out
fdivs
imul
cmp
fs
shll
insl
sbb
xor
push
or
fdivrl
insb
adc
sub
into
insb
and
sbb
push
or
sbb
sbb
jnp
sbb
mov
mov
and
arpl
adc
ss
mov
ror
in
faddl
arpl
mov
adc
faddl
jle
negb
push
cmpsl
jne
out
sub
adc
mov
ja
ds
das
mov
cwtl
pop
and
push
push
fmuls
arpl
sub
idivb
jo
add
fistpl
into
aam
or
loop
es
mov
ret
and
dec
or
inc
jnp
int
push
sahf
imul
add
or
xor
or
ss
inc
hlt
adc
test
out
adc
movsl
call
ret
mov
adc
push
lds
or
rcr
pop
mov
nop
adc
cmp
loope
xorl
in
xchg
jp
jge
dec
pop
scas
inc
mov
inc
xor
pop
dec
sub
mov
dec
stc
push
cwtl
push
repz
loope
popa
icebp
scas
dec
fimuls
cli
repz
push
test
dec
dec
jge
cmpsb
add
gs
test
rolb
mov
pop
sbb
mov
aas
out
cwtl
jnp
mov
dec
and
stos
test
adc
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
pop
or
arpl
jo
mov
sahf
and
lret
out
shlb
add
stos
out
jbe
out
or
aas
sub
test
xor
jp
cmc
inc
mov
hlt
lahf
inc
notb
movsb
leave
rcll
mov
fcmovb
les
adc
ljmp
jno
lcall
cmp
jle
xorl
in
nop
in
cmpsb
fisubrl
lods
and
dec
or
mov
push
and
call
stos
xchg
xlat
addl
xor
dec
enter
add
xchg
sbbl
sub
pop
jge
popa
dec
jo
fwait
pusha
adc
push
les
call
xor
xlat
xor
test
sarl
rcrl
lret
pop
sub
ret
shrb
sbb
icebp
xor
cwtl
pop
iret
sub
xor
jno
out
push
lock
lea
outsb
pushf
sbb
mov
lret
ficomps
sti
in
xchg
fxch
jb
inc
sub
adc
xor
cltd
xchg
cld
repz
cld
xor
je
out
out
cld
in
movl
stc
push
mov
jno
pop
xor
lret
cmp
cmp
cmc
ljmp
jae
dec
pop
daa
fmulp
fnstsw
push
or
cmc
stos
popf
cmpsb
push
inc
lret
pop
test
xchg
mov
jg
push
jle
pop
sahf
lods
sub
or
xchg
jp
movsb
rcrb
mov
shrl
inc
out
in
cld
mov
scas
mov
xchg
notb
mov
xchg
sbb
mov
pop
mov
lods
pop
inc
sub
pop
lret
repz
push
jo
mov
push
imul
sbb
dec
sbb
ret
add
stos
sbb
inc
push
cmp
movsl
pop
aas
sahf
ficompl
lods
roll
test
xchg
int
cwtl
js
push
cmp
movsl
add
cmp
jns
inc
mov
xchg
mov
popa
dec
inc
es
imul
int3
insl
adc
scas
push
xor
gs
push
icebp
and
sbb
xor
push
daa
pop
shll
dec
pop
fwait
out
fcomp
push
push
stc
mov
fmull
lcall
rcr
cmc
in
add
in
mov
pop
and
fisttps
inc
sahf
mov
inc
sbb
mov
push
movsb
and
inc
or
push
or
inc
lods
inc
mov
sub
cwtl
aas
xor
xor
cmpsb
push
test
push
inc
xchg
xor
sbb
leave
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
cmpsl
lods
pop
mov
mov
and
mov
stos
mov
or
sub
loopne
ljmp
xor
out
mov
inc
outsl
pusha
stos
ficomps
xchg
cmp
xchg
cltd
outsb
mov
jmp
ljmp
mov
sub
inc
rorb
mov
push
ret
add
adc
push
pusha
dec
xor
scas
into
sahf
mov
lea
fiaddl
add
lret
sub
dec
dec
sub
imul
xor
xchg
push
or
dec
mov
lea
mov
rorl
pusha
gs
fmull
adc
int3
xor
dec
cmpsb
popf
cwtl
xchg
scas
jle
dec
cltd
incb
cwtl
sbb
out
sub
inc
xchg
sub
and
mov
sbb
xor
adc
sarl
sarb
xchg
fildl
popf
xchg
or
pop
int
stos
data16
xchg
lahf
iret
std
dec
cltd
adc
push
or
cmp
xchg
in
sbb
sbb
shrl
mov
dec
test
mov
out
andb
and
stos
pop
ja
fnsave
cmpsb
push
loop
xor
cld
fcmovnb
mov
fbld
scas
adc
repz
xchg
or
dec
xchg
aaa
pusha
addr16
inc
cld
icebp
adc
inc
out
sbb
popa
fmulp
inc
jnp
xchg
sub
outsl
sbb
fidivrs
jle
xor
xchg
ja
xchg
in
xlat
cmp
xchg
daa
sub
adc
cmp
jnp
or
std
pop
sub
xchg
adc
imul
push
pop
rclb
aas
sbb
inc
pop
insb
mov
inc
sbb
mov
test
std
shll
test
icebp
js
bound
mov
mov
and
mov
call
mov
pop
mov
mov
jo
movsl
mov
pop
dec
pop
push
sub
inc
cmpsl
call
lock
jo
push
sub
aad
inc
lahf
shrb
cmpb
sub
pop
in
test
xor
xor
imul
mov
add
insl
dec
xchg
mov
and
popf
fstpl
dec
les
adc
addr16
repnz
aad
pop
ret
aam
std
or
mov
xor
jmp
out
je
scas
ficoml
and
xor
sbb
pop
sahf
and
in
push
mov
ja
int3
jp
push
push
ret
ss
jae
out
lea
gs
call
rorb
pushf
jb
add
cld
xor
add
jmp
fistl
loope
lds
add
push
dec
cld
pop
jo
mov
and
or
fnstsw
sar
fnstenv
jae
ljmp
ficomps
inc
adc
xor
jp
xchg
mov
das
sbb
push
or
and
das
and
jge
jg
imul
icebp
push
sub
mov
fbstp
adc
push
or
je
dec
push
mov
aad
mov
add
xchg
jg
lock
pop
sub
sarl
or
ljmp
stc
cli
bnd
rcrl
push
mov
push
inc
icebp
sbb
add
arpl
stc
or
cmp
add
lret
mov
xchg
or
sub
sub
outsl
fisubrl
and
lret
lods
adc
push
xchg
aam
push
test
mov
cmpsl
mov
nop
cmpsl
movsb
lds
xor
sub
fisubrl
out
js
push
ror
icebp
push
mov
cwtl
jmp
mov
pushf
loopne
mov
repnz
pop
out
mov
roll
pop
pop
push
aad
sbb
repnz
cmpsb
xor
pop
lahf
js
scas
xor
mov
inc
jbe
arpl
pusha
hlt
popf
repz
test
cmp
sahf
push
popf
pop
test
lret
adc
or
clc
mov
pop
xor
sub
push
mov
popa
xchg
popf
loopne
mov
cli
outsb
mov
jge
pop
add
inc
jnp
xor
stc
iret
inc
outsb
dec
sub
dec
dec
insl
cltd
mov
inc
sbb
lcall
xchg
jge
mov
hlt
ds
mov
push
cmp
push
inc
lret
jle
jb
adc
clc
push
sub
int
push
pop
xor
adc
test
inc
lea
mov
test
ljmp
popa
ds
pop
enter
popf
rol
or
cmp
shl
pop
sbb
mov
mov
in
int
in
pop
cmpsl
inc
sub
fisubs
adc
in
push
ret
cmp
lds
dec
xor
dec
setae
and
push
in
jmp
sub
xor
mov
or
and
fidivs
in
insb
sub
or
push
insl
fs
xchg
ficoml
xor
mov
sbb
pop
mov
stos
mov
test
insl
mov
mov
or
scas
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
iret
aam
push
cmp
jo
jle
jo
and
lds
bound
fdiv
push
push
mov
mov
inc
mov
leave
fs
cmp
cmp
xchg
fists
sub
or
adc
fmull
xchg
inc
mov
ss
jb
call
fistps
jno
dec
mov
push
mov
aas
loopne
and
add
nop
xor
hlt
lahf
or
ljmp
fldl
mov
test
push
xchg
mov
out
int
xchg
and
mov
jo
iret
push
cmp
cmpsl
fcmovne
jbe
and
jbe
mov
enter
stc
ja
lds
xchg
cmp
negl
mov
testb
mov
repnz
pusha
mov
fists
idivl
mov
cmp
fldenv
lahf
fcompl
fnsave
cmpsl
jb
stc
lds
mov
jo
cmp
outsl
insl
push
xchg
daa
lods
and
push
jnp
int3
dec
xchg
mov
ja
hlt
ficoml
xor
mov
aam
mov
int
cmpsl
and
jl
push
push
jp
cmpsl
mov
repnz
mov
push
fists
test
clc
adc
iret
in
cmpsl
mov
scas
jbe
ret
popf
roll
mov
cmpsb
out
or
sub
and
pop
lea
movsb
push
push
orl
in
pop
or
cmp
shrb
fwait
cmp
clc
lahf
and
xchg
xor
cmp
jbe
sbbl
into
cmp
int3
or
xor
bound
jmp
xchg
addr16
ja
movhps
enter
movsl
inc
scas
xchg
leave
jns
xor
in
mov
jno
push
ljmp
pop
je
test
cmp
in
dec
insb
inc
jl
mov
mov
xor
loop
outsb
jecxz
or
imul
jne
lock
cmp
clc
and
and
data16
xchg
mov
test
push
fldenv
testb
test
imul
insl
or
xor
stos
ja
jp
jl
addr16
push
xchg
add
lock
pop
inc
or
cs
fstl
fidivrs
mov
mov
js
stc
inc
cmp
outsl
or
cli
leave
mov
sbb
pop
inc
mov
mov
push
jecxz
push
mov
adc
mov
mov
es
notb
cmp
xor
sti
cwtl
add
ret
aaa
dec
pop
mov
sub
jb
push
jg
cs
mov
mull
inc
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
mov
mov
cmp
mov
cli
mov
xor
or
adc
mov
inc
cmpsl
jno
rolb
scas
loopne,pn
or
mov
pop
in
jecxz
es
cmpsb
fwait
adc
dec
clc
pop
bound
and
mov
sbb
inc
popf
out
cmp
dec
xchg
jb
cmp
iret
mov
jo
sbb
aad
xchg
dec
push
push
cwtl
loopne
add
test
cmp
inc
mov
push
pop
rcrb
and
scas
pop
fstl
inc
jmp
ss
aaa
jmp
mov
pop
jo
dec
jg
xchg
movsl
jns
adc
arpl
call
and
jle
mov
lea
icebp
push
sub
cmpsb
in
sbb
jle
test
cwtl
inc
lea
jl
movsb
fldcw
jae
out
scas
fs
sti
or
jmp
rorl
outsl
arpl
les
mov
inc
je
dec
sbb
push
pcmpeqd
repz
stos
jecxz,pt
inc
inc
mov
jae
pop
cmp
push
dec
subb
bound
mov
sub
lret
adc
adc
and
fs
cmp
jge
cli
stos
xchg
mov
cltd
cmp
sub
or
mov
in
pop
repnz
and
testb
adc
loope
lds
test
inc
sub
mov
and
jmp
or
enter
loope
push
popa
sbb
add
into
fwait
call
mov
clc
lods
out
mov
ret
push
repnz
repz
imul
push
lds
sbb
jge,pt
clc
push
adc
inc
out
aad
push
push
sbb
fsubrl
int3
rcll
xchg
ss
mov
fadds
jb
ret
test
xor
cmp
mov
test
and
pop
cmp
and
insb
in
popa
lock
popf
test
xchg
or
dec
int3
pop
add
fsubrp
stc
frstor
inc
xor
sub
cwtl
adc
jno
ds
lea
mov
mov
stc
add
and
pop
fistpl
ffreep
dec
cmp
dec
js
jge
mov
inc
mov
mov
js
xor
jmp
mov
inc
pop
push
jns
mov
cmp
sbbb
cwtl
imul
push
adc
push
dec
out
inc
mov
in
into
test
mov
shlb
div
fnstsw
cmp
in
aam
fists
repnz
movb
into
and
loopne
es
inc
or
cmp
test
cmp
sbb
imul
sub
cmc
inc
movsb
in
or
movsl
leave
mov
sbb
aas
pop
lcall
pop
push
mov
push
adc
mov
std
ljmp
lret
lock
sub
mov
pop
addb
cwtl
dec
mov
andb
jae
fisubl
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
cmpsl
lds
jo
cmp
ljmp
dec
pusha
inc
jmp
xchg
cmpsl
cmp
lahf
sahf
iret
imul
xchg
cmp
lcall
or
pop
xchg
pop
ret
and
push
or
xchg
cmp
test
icebp
xchg
mov
stos
inc
data16
ljmp
jae
lea
sub
push
xchg
in
imul
jbe
je
add
sub
cmp
mov
nop
xor
mov
pop
popf
pop
test
icebp
xchg
pop
enter
jbe
aam
lahf
outsl
or
test
pop
shrl
sbb
stos
jb
int3
mov
dec
pop
lret
data16
jns
and
sbb
push
xor
jnp
rcrl
and
and
pop
gs
rcr
push
pushf
dec
lret
inc
daa
inc
les
cmp
popa
iret
cld
add
inc
or
mov
cld
pop
aad
out
and
cmp
adc
sub
sub
cmpsl
daa
mov
loop
or
push
mov
rolb
sbb
test
mov
into
test
stc
flds
cmpsb
imul
outsl
cmc
int
scas
xor
cli
dec
push
or
inc
inc
fs
shlb
ret
pop
jns
testl
loope
cmp
roll
in
cmpsl
std
xor
mov
je
xor
lds
rorl
aas
jge
sbb
in
mov
rcrl
xchg
insb
ret
mov
fsubl
movsb
xor
xor
inc
sahf
ljmp
adc
rolb
test
test
jbe
leave
in
ss
in
or
or
dec
negl
movsb
cltd
clc
and
pop
pop
stc
in
call
inc
xor
jbe
cmp
add
in
push
pop
test
dec
loopne
mov
aas
ljmp
repz
sub
and
nop
push
mov
pop
daa
nop
movsb
inc
ss
inc
scas
repz
fildll
fdivl
sub
dec
pop
mov
cltd
pop
mov
sub
shrb
das
sub
lahf
and
sub
in
js
sar
and
subl
rcr
insb
sahf
push
mov
jecxz
inc
mov
call
ret
sub
dec
jg
push
imul
int
mov
aam
mov
pop
rcll
aas
pusha
and
jb
sbb
pop
nop
mov
cmp
je
movsb
ds
sbb
xor
into
dec
mov
mov
loopne
pop
cmp
or
mov
fwait
repnz
iret
jmp
mov
mov
mov
pop
imul
mov
or
inc
lret
cmovns
jle
in
sbb
inc
movsb
sahf
cli
rcr
xchg
imul
dec
adc
xchg
filds
add
sbb
aad
fisubrl
pop
lods
cmp
xchg
pop
lcall
sbb
mov
rolb
jge
jns
sub
hlt
sbb
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
push
jb
sbb
cmp
xor
jae
xchg
cwtl
inc
xchg
add
add
lods
cmp
fdivp
fwait
movlps
xchg
push
xchg
pop
imul
jae
ficoml
hlt
cli
add
mov
mov
icebp
js
call
and
cmp
mov
mov
addr16
rol
push
mov
jne
fwait
pop
test
jl
loop
daa
cvttps2pi
aas
aad
jge
shll
mov
jg
jnp
xchg
push
mov
mov
jnp
pandn
stos
mov
mov
xchg
data16
lods
dec
and
adc
mov
sub
xchg
and
cs
cmp
enter
mov
inc
movsl
adc
ss
ret
mov
cmpsl
repz
mov
int
outsb
pop
enter
add
add
jg
pop
das
add
push
repz
add
sub
cmpsb
es
inc
mov
lds
xor
mov
enter
mov
loop
inc
or
loop
pushf
es
sti
sbb
and
arpl
mov
das
lods
xorb
cmc
push
les
mov
jne
adc
in
sbb
xor
sar
lahf
imull
fistps
loop
or
outsb
jecxz
jmp
pop
insl
xchg
or
xchg
add
inc
fwait
add
add
or
sbb
or
inc
aaa
jae
divb
cmpsl
fisttpl
pop
das
repz
outsb
sarl
add
sarl
loopne
jecxz
add
stos
mov
imul
lods
xchg
mov
lret
sbb
add
jg
cmpsl
pop
in
mov
mov
test
mov
or
xchg
push
nop
dec
arpl
dec
es
mov
sbb
sbb
pusha
xchg
jmp
and
mov
stos
add
jg
les
movsl
fsubs
cmp
loopne
test
or
les
popf
jns
les
popf
pop
ljmp
fiadds
int3
push
and
js
sar
xchg
add
cmp
xor
data16
pop
sub
mov
push
push
gs
rolb
enter
ret
mov
ljmp
daa
cmp
shll
shlb
jnp
mov
cmp
nop
fs
mov
mov
pop
daa
in
adc
inc
bound
xor
jne
stos
lret
jnp,pn
out
loop
add
or
xor
lock
cmp
xor
scas
lcall
fcmovne
ret
mov
or
sbb
xchg
inc
and
neg
mov
adc
test
mov
push
and
dec
test
shr
les
mov
fsubs
sbb
jmp
aaa
nop
pop
int3
mov
mov
pop
pushf
in
data16
pop
sbb
mov
mov
popf
jno
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
bswap
push
jne
dec
sbb
cmp
adcb
icebp
add
sbb
xchg
dec
add
xchg
sarl
ljmp
jns
cmc
jp
ficoml
scas
xor
and
ror
mov
mov
sti
int
push
pop
push
pop
ret
inc
dec
mov
mov
pop
mov
je
daa
mov
mov
cmpsb
les
mov
jmp
inc
sahf
inc
lahf
cmp
insl
divps
outsl
rcll
or
xchg
add
cmc
hlt
mov
lahf
stos
out
dec
dec
add
into
cmp
dec
imul
xchg
xchg
into
fsubrl
pushw
enter
mov
fldt
pop
das
arpl
mov
push
adcb
lods
jge
inc
xchg
push
nop
pop
ljmp
or
ret
push
nop
iret
insl
xchg
jmp
shll
test
stc
scas
jmp
pop
int
xchg
cmp
jmp
gs
fcmovnb
cmp
or
insb
adc
xor
pusha
imul
pop
push
sbb
mov
es
sbb
insb
push
mov
fdivrs
mov
pop
mov
pop
inc
rorb
sbb
in
test
ficoms
mov
roll
pushl
daa
add
cltd
mov
mov
outsl
mov
in
jb
sbb
and
and
cwtl
int3
cmp
sub
dec
pop
scas
pushf
adc
xorb
add
xchg
nop
xchg
mov
cmp
movsb
cmp
xchg
sbb
in
xchg
jb
cs
mov
decb
out
fcmovnu
jp
adc
loop
xlat
cmp
cmpsb
mov
push
outsb
add
sub
daa
mov
mov
out
mov
rorl
mov
insb
mov
into
ljmp
dec
aaa
xor
push
fisubrl
hlt
sbb
test
stos
call
movl
addr16
cmpsl
xor
cltd
lock
dec
repnz
loop
adc
push
aaa
sahf
adc
or
adc
and
push
mov
imul
add
pop
cld
jecxz
xchg
mov
dec
addr16
icebp
ljmp
outsb
arpl
mov
push
out
lds
mov
enter
popf
in
push
fsubrl
pop
dec
jne
xchg
adc
rcrb
or
mov
mov
jns
xor
push
push
mov
pop
fld
push
and
add
dec
push
or
xchg
and
ret
xor
jl
mov
and
cmp
adc
add
add
push
mov
inc
insl
and
pop
jns
jb
cmpsl
cmp
lods
icebp
xor
dec
xor
mov
lds
xor
mov
jmp
arpl
xor
sub
pop
insb
xchg
pop
sbb
fimull
xchg
inc
aaa
lods
adc
sbb
loopne
das
jnp
int3
pushf
cmp
ja
push
clc
dec
mov
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
sarl
sti
jo
cmp
pop
sbb
push
jno
cmp
jb
mov
fucomip
enter
dec
hlt
loope
test
arpl
fdivs
xchg
jbe
xchg
and
out
repz
stos
fcompl
les
mov
shrl
ljmp
mov
and
mov
jecxz
ds
leave
jnp
jo
shll
jnp
add
movsb
jae
add
aam
leave
ja
aam
lahf
lock
xrelease
pop
daa
setb
inc
and
inc
rol
adc
pusha
pop
xor
js
fnstenv
mov
pop
stos
lret
nop
or
push
xor
outsl
out
repnz
into
cld
cld
data16
lcall
pusha
sub
push
jecxz
push
push
cmp
pusha
and
mov
stos
mov
fstps
push
pop
or
in
jmp
outsb
dec
in
mov
mov
shlb
push
mov
inc
cwtl
aaa
jp
cld
or
and
fiaddl
orl
ds
push
add
scas
inc
aam
dec
sub
js
or
cmpsl
cld
mov
mov
jne
lds
push
lock
out
add
jmp
arpl
jae
shll
jne
je
or
push
lcall
repz
sub
fisubl
aad
jg
mov
mull
test
scas
push
and
xchg
inc
adc
or
mov
idivb
inc
scas
fwait
add
scas
mov
mov
stc
movhlps
jbe
sub
addr16
out
enter
ja
fmuls
jp
jp
flds
cli
out
cmp
inc
les
adc
mov
lahf
in
push
mov
adcb
push
inc
scas
mov
jae
into
mov
push
dec
cwtl
jmp
mov
pop
mov
pop
addr16
iretw
addl
push
int3
lret
out
lahf
sbb
dec
cmp
and
sbb
adc
shll
enter
rorl
mov
push
sti
sub
mov
mov
out
cli
pop
negl
pop
xor
lret
mov
aam
data16
xor
push
mov
in
arpl
dec
and
out
test
ja
lret
cmp
clc
sub
sbb
jmp
cwtl
divl
ret
pop
stos
cmp
ret
fldl
jle
push
insb
xchg
mov
cmp
je
das
pushl
je
pushf
push
cmp
pop
nop
fmuls
stos
hlt
vpsubsb
push
dec
lods
push
mov
les
cmp
pop
sbb
shl
mov
ret
and
cmp
outsl
mov
add
mov
push
jecxz
add
sbb
pop
lcall
jnp
jge
fdiv
pop
xchg
mov
cmp
mov
xchg
icebp
jb
loop
fstp
outsb
jne,pn
push
xor
mov
add
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
addr16
jo
cmp
pop
jae
or
jmp
popf
icebp
test
rcrb
jge
lcall
fs
mov
push
xchg
cmp
cmp
nop
mov
push
sarb
cltd
and
loop
inc
adc
outsl
push
dec
popf
mov
mov
ljmp
pop
push
fists
sbb
jns
pop
dec
sbb
adc
mov
sbb
and
push
push
jae
mov
push
pop
pop
sbb
bound
in
xchg
jae
in
icebp
mov
daa
loopne
pop
mov
add
scas
out
cmpsl
inc
jns
sbb
inc
ret
sub
loop
or
pop
cli
nop
xchg
jae
push
stos
xlat
mov
loopne
push
sbb
jl
sti
sub
and
loope
jne
test
negb
push
pop
adcl
inc
andb
popf
adc
and
xor
jae
push
mov
scas
lock
jo
jae
pushf
mov
and
out
jns
cmpsb
sub
xchg
repz
cmp
cmpsl
cmp
sbb
mov
mov
clc
sti
into
fnstcw
push
push
scas
daa
repnz
lret
and
sbb
les
cmpsl
jge
cld
mov
cmp
and
rolb
test
inc
push
pop
or
dec
push
cmpsl
cmp
mov
mov
fs
in
mov
cld
pop
and
push
dec
xorl
xchg
test
mov
ret
mov
and
mov
scas
rcl
rorl
mov
cmc
mov
jno
rcl
dec
push
iret
inc
fdivr
mov
outsl
xchg
mov
icebp
test
mov
xlat
dec
sbb
mov
jl
idiv
dec
in
cmpsb
cmc
pop
test
in
mov
dec
adc
push
enter
inc
pmulhw
mov
dec
insl
mov
dec
popa
pop
and
fisttpl
leave
mov
mov
jb
push
shlb
or
les
xor
sbb
rol
in
out
cwtl
xchg
in
xchg
insl
jle
push
mov
enter
outsl
ljmp
jmp
out
push
push
add
jnp,pn
pcmpgtw
popf
cli
dec
mov
lret
ljmp
xchg
or
mov
and
mov
fidivl
xchg
mov
sub
xchg
mov
mov
fcmovu
cld
loopne
or
test
and
dec
sbb
inc
test
call
and
xor
leave
das
sub
inc
xor
xchg
dec
sbb
or
outsb
cs
adc
cli
cmc
sub
scas
mov
jae
sahf
dec
in
aam
adc
outsb
cwtl
sbb
hlt
pop
pop
pop
cli
jbe
push
outsl
lock
stc
enter
dec
pop
xchg
or
dec
mov
inc
mov
insb
pop
leave
jns
mov
xchg
push
pop
popf
test
negl
jb
mov
mov
lods
in
sub
mov
and
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
out
imul
jo
cmp
push
adc
push
cmp
testl
gs
mov
fsub
rorb
xchg
cmp
inc
lds
sarl
sahf
repz
push
mov
pop
out
jb
scas
test
xlat
les
insb
ljmp
push
mov
sti
push
adc
das
call
leave
in
pop
ffreep
in
test
imul
xor
jmp
sub
xor
orl
push
popf
xchg
setp
mov
jp
mov
fisubl
or
loop
and
test
test
insb
scas
inc
mov
lahf
iret
lahf
pop
ljmp
test
cltd
cmp
mov
mov
mov
repz
lods
aad
push
ds
xchg
imul
cltd
jns
aam
es
push
xor
shl
fs
int
xor
dec
mov
outsb
sbb
cmpsb
add
pushfw
idivl
push
cld
sbb
mov
pop
add
cmp
stos
jnp
pop
mov
int
inc
shl
mov
sub
and
pop
add
lock
mov
xchg
loope
lret
mov
ss
outsb
dec
add
lds
and
inc
hlt
inc
int
pusha
fwait
imul
data16
sti
std
inc
adc
stos
add
sahf
dec
sub
scas
enter
sub
add
dec
jns
gs
adc
or
xor
bound
out
and
add
jo
lds
and
mov
xchg
sub
push
mov
test
jle
inc
mov
pop
out
pop
jns
add
test
fst
std
bound
test
fidivl
jno
hlt
mov
loop
mov
mov
mov
pop
aam
jns
les
pop
rolb
pop
nop
jle
enter
test
and
cwtl
and
xchg
inc
aas
jmp
lret
pop
adc
adc
movsb
mul
inc
xchg
imul
inc
push
std
xor
test
shll
xor
popa
sbb
std
pop
or
fsubp
rcrl
loopne
pop
xchg
xchg
dec
leave
rolb
xor
mov
lods
mov
clc
jl
icebp
mov
or
clc
pop
fadds
cmp
jnp
cmp
aaa
pop
lock
fxch
pop
inc
test
xchg
mov
inc
cmpl
ret
subb
movsl
outsb
js
std
xchg
adc
mov
popf
xor
enter
inc
or
cltd
pop
sar
push
mov
jbe
xor
shlb
sbb
imul
cmp
jb
popa
jbe
aaa
shlb
in
cwtl
mov
shl
and
jmp
movsb
rol
leave
mulb
pop
mov
pop
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
ror
lods
mov
cmp
push
out
test
push
xor
lahf
sub
in
add
test
inc
into
sub
sub
cmp
jo
je
jnp
mov
mov
shll
leave
int
scas
mov
les
in
fmuls
pop
jecxz
adc
hlt
aaa
cmp
jne
adc
pop
ret
sbb
lret
and
orl
ret
sbb
bound
xor
inc
mov
mov
xor
adc
xchg
dec
bound
div
leave
jae
arpl
fisttpl
cmpsl
jl
xchg
into
adc
aam
mov
cs
dec
push
mov
xor
enter
dec
mov
and
fisubrs
mov
iret
jo
add
out
test
pop
iret
enter
push
into
imul
test
push
int
nop
pushf
xor
hlt
sub
int
in
xchg
mov
mov
mov
jmp
inc
icebp
adc
pusha
scas
lret
pop
pop
sub
fwait
arpl
xor
leave
or
enter
test
mov
cmpsb
mov
jl
jns
popf
imul
adc
xchg
mov
clc
sti
mov
mov
sub
dec
in
pop
pop
into
mov
shrb
enter
std
loope
into
and
insl
mov
xor
leave
aas
jns
push
or
mulb
mov
loopne
bound
fcompl
ljmp
inc
rorb
iret
push
repz
dec
repz
inc
pop
test
mov
idivl
imul
inc
xchg
sbb
pop
adc
int
or
subl
addr16
push
or
or
xlat
fidivl
push
mov
frstor
scas
iret
pop
stos
bound
cmpsb
daa
les
pop
mov
mov
sub
addl
sbb
ret
xor
mov
jmp
in
popl
sub
dec
and
cmp
insl
fisubl
xorb
sub
xchg
lret
outsl
outsl
mov
lret
and
xchg
out
pop
les
sarl
mov
ret
fwait
dec
fldenv
pop
insb
lret
or
ret
lea
inc
mov
cmpb
xor
loope
jne
loopne
sbb
stos
addr16
add
adc
ss
push
sahf
and
ret
xchg
add
inc
inc
out
stc
sub
mov
push
test
jae
test
xchg
out
addb
mov
cmp
or
push
std
mov
cwtl
int3
mov
adc
add
sub
cmpsb
push
xchg
mov
fistpl
cmp
pushl
loopne
push
pop
pop
fidivs
stos
scas
loop
fcomps
aaa
cmp
push
cmp
rolb
mov
or
add
push
fiadds
cmp
push
fwait
adc
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
int3
lods
shlb
aaa
jo
stos
jle
jo
in
xor
push
imul
push
sub
jge
lret
pop
sbb
mov
mov
clc
mov
test
pop
outsl
test
inc
xchg
flds
xor
data16
push
adc
mov
fs
inc
lret
mov
xchg
stc
add
repnz
jl
mov
and
push
push
stos
xchg
test
iret
pop
sbb
lcall
sub
or
mov
cmp
sti
imul
sub
dec
jbe
test
jmp
xchg
movsl
bnd
push
push
fldenv
ret
lahf
xchg
gs
sbb
xor
movsb
xlat
adc
rcrb
push
je
fdivrl
pop
sub
cmpb
mov
xor
sbb
pop
fsub
inc
lret
sbb
repz
mov
in
mov
sbbl
sahf
and
push
push
imul
push
loope
sub
jb
sub
cmpsb
lds
jne
nop
pop
outsl
xchg
sub
sub
rcr
jae
les
rcll
add
cmp
jl
shll
xchg
addr16
pop
outsb
in
adcb
ret
xlat
push
shll
les
adc
scas
dec
stos
mov
fbstp
xchg
data16
insl
int
in
fiaddl
sbb
mov
jle
fbld
dec
xlat
mov
movl
mov
cmp
sbb
rol
sub
xchg
aas
sbb
sbb
xor
imul
inc
add
jl
push
repnz
jns
ja
inc
pop
dec
pop
movsb
call
adc
push
jb
mov
push
test
in
xchg
mov
fdivr
pop
lahf
out
lahf
ret
cmp
loop
loop
test
add
popa
pop
cmpsl
int3
rcrb
les
sub
lods
sbb
xor
in
sub
cmp
inc
or
andl
lcall
mov
int3
dec
cmpsb
mov
mov
or
inc
mov
lahf
adc
pop
cwtl
adc
cld
pop
sbb
rcl
cli
bnd
aam
int3
mov
xchg
pop
loopne
divb
stos
imul
icebp
cmc
dec
mov
cmpsb
cmp
mov
and
adc
arpl
dec
and
push
sub
and
in
mov
test
jp
mov
addb
ret
or
push
movzwl
and
mov
jmp
ja
and
dec
xchg
dec
dec
xor
jo
shlb
in
sub
adc
shl
jo
add
add
jne
pop
sub
fcmovnu
lods
mov
lcall
xchg
cmpsb
shlb
sub
pop
outsl
lods
cmp
in
int
sub
jg
std
add
dec
push
loope
cwtl
push
mov
outsb
rol
into
mov
imul
sbb
sbb
fnstcw
xor
sub
nop
xorl
sti
xchg
push
xchg
pop
std
cmp
fistps
pop
aad
out
fisttpl
in
fmuls
push
push
dec
icebp
stos
mov
repnz
jns
sub
mov
pop
inc
mov
xor
movl
les
sub
jnp
mov
rcl
xchg
pop
in
scas
test
sub
cld
add
push
push
loopne
out
mov
xorl
lahf
add
jmp
pop
in
and
lret
push
daa
div
rol
lcall
mov
inc
call
std
mov
aaa
daa
xor
push
jecxz
push
cltd
push
jmp
and
outsb
sbb
jo
fldenv
aam
pop
mov
sbb
push
std
fisubrl
jecxz
out
jmp
sahf
repnz
dec
jo
xchg
mov
cmp
adc
aad
sub
in
push
flds
popa
pop
out
mov
gs
arpl
in
sbb
or
cmc
or
xor
pop
repnz
push
imul
js
sbbb
xor
das
sbb
sub
cmp
dec
sbbl
inc
mov
pusha
xchg
xchg
xchg
xchg
push
and
cmpsl
sub
pop
cwtl
cmp
xchg
nop
out
mov
int
push
pop
sub
xor
push
pop
imul
cmpsl
mov
negl
loope
scas
mov
jo
push
cld
scas
jge
sbb
dec
into
lock
push
ret
sub
aad
or
sub
lret
loope
add
popf
push
movsb
sub
lods
dec
dec
test
aad
cmp
int
push
in
cmp
ljmp
call
scas
push
push
xchg
xor
mov
int
add
je
jl
arpl
push
cmp
sbb
pusha
cld
stos
xor
movsl
fwait
inc
xor
inc
xchg
leave
and
test
nop
lret
xor
aaa
inc
and
sub
aas
aad
negl
jo
int3
mull
dec
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
push
test
jo
stos
jle
jo
sbb
jnp
xchg
pop
push
dec
les
cmpsl
insb
icebp
pop
ret
sub
or
and
int3
das
dec
and
xchg
jle
cs
jbe
sbb
mov
and
popf
xchg
push
cmp
mov
push
pop
les
pusha
push
pop
aad
es
or
cmpsb
jnp
xchg
mov
sti
sub
fldt
sarb
mov
les
xlat
cmpsb
inc
mov
stos
xchg
out
inc
outsl
loop
rcrl
mov
jp
cli
nop
repnz
call
xchg
xchg
imul
add
jbe
sarl
iret
fiaddl
or
push
es
bound
push
rcrl
push
push
xchg
movsl
mov
hlt
push
mov
inc
scas
sahf
or
setp
sbb
jae
xchg
cmp
mov
jp
int
or
rcrl
push
icebp
dec
ret
fnstcw
sbb
xor
dec
sti
sbb
mov
jno
std
or
pushf
add
movsb
rcr
push
push
and
mov
mov
mov
jae
jle
fstl
test
and
xchg
outsl
cltd
xchg
scas
aad
push
xor
mov
rclb
jno
sbb
sub
movsb
pop
mov
sbbl
add
add
xlat
mov
nop
cmpsl
jg
mov
test
loope
inc
push
xor
or
cmp
push
pop
sub
aaa
popa
popa
sub
mov
test
xor
adc
xchg
or
push
jns
mov
insb
sarl
mov
fnstcw
mov
inc
fcomi
jb
stos
xchg
sahf
sbb
fistpll
push
jo
xor
push
mov
int
cmp
dec
je
pop
movsl
xor
pop
xchg
pop
adc
push
or
push
xchg
mov
inc
sub
std
insl
sub
gs
lahf
cmc
dec
dec
ss
dec
jno
xor
mov
or
and
and
in
arpl
daa
stc
sbb
xchg
shlb
cld
mov
sbb
je
xor
fildl
xor
lret
sti
popf
and
add
out
enter
inc
mov
rcl
xchg
repnz
xor
jg
shl
imul
std
lret
andl
push
dec
inc
sbb
ljmp
xchg
mov
push
ret
fisttpl
add
inc
lods
push
sub
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
in
inc
ds
jo
cmpsl
jg
jo
mov
dec
jne
lahf
xor
push
jno
out
jne
sti
pop
push
and
pop
sub
nop
mov
aaa
mov
push
int
test
lcall
mov
ljmp
lock
imul
loope
dec
cmp
call
push
mov
jl
add
aaa
js
adc
jge
pop
xchg
mov
stos
jmp
mov
cmpsb
mov
hlt
fsubrs
add
addr16
adc
mov
sbb
dec
jb
mov
popf
cmp
pop
mov
popa
arpl
cmp
cmp
dec
inc
sbb
adc
cmovbe
addl
loope
jbe
repnz
sahf
test
push
aam
scas
fcomip
cmp
cmp
mov
cli
lods
jle
cld
outsl
and
or
psubusb
addw
dec
call
mov
mov
xchg
mov
pop
dec
rorb
or
xchg
sub
in
cmp
or
pushf
clc
xchg
fsts
orb
test
dec
inc
in
leave
sbb
imulb
inc
pop
shrl
push
jno
mov
xchg
inc
mov
stos
lock
hlt
sbb
mov
xchg
jp
outsl
xchg
or
adc
cmp
arpl
mov
rcrb
sbb
pop
outsb
jno
call
mov
mov
sbb
rcl
roll
mov
movsl
stos
ljmp
loop
ja
mov
ss
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
int3
gs
cmpsl
jg
jo
push
rcr
loope
cmp
jno
movl
inc
aas
ljmp
fmuls
fimull
jmp
xor
rolb
inc
push
lods
ret
xchg
popf
dec
out
rorb
pop
mov
bound
lea
jae
xor
push
pop
push
xchg
repnz
repnz
popf
jmp
cli
les
mov
push
clc
mov
rclb
lret
loop
dec
jnp
add
roll
mov
rclb
mov
dec
sub
fimuls
mov
jmp
addl
pop
cmc
sub
inc
jnp
cmc
adc
mov
out
jns
jae
orb
mov
mov
inc
pop
fisttpl
aad
fbstp
scas
and
cld
or
sub
call
insb
jg
cmpsb
inc
std
gs
int3
bound
cmp
xchg
gs
sub
test
in
mov
addr16
daa
data16
test
and
sub
test
dec
sub
daa
pop
jge
stc
jne
fdivl
pusha
stos
stos
or
inc
sbbl
sbb
inc
fdivp
and
aad
fwait
mov
rcrl
mov
jmp
sub
cwtl
mov
adc
cmp
movsb
iret
inc
mov
cmpsb
mov
sbb
loopne
rorb
sbb
call
pop
push
sbb
dec
lock
fstps
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
jo
dec
sub
jo
out
stc
xor
push
push
cmp
rcrl
xchg
inc
mov
jo
imul
pop
dec
jne
mov
push
inc
aam
lcall
pop
movsb
xchg
push
mov
sti
mov
and
std
in
dec
adc
in
jmp
inc
dec
or
sbb
or
push
ds
inc
popa
jbe
adc
popa
in
cmc
popf
adc
push
jp
xor
mov
xor
xchg
add
jmp
jp
inc
data16
out
xchg
sub
cmpsl
lds
addr16
sub
ret
xor
sbb
dec
sub
adc
adc
test
dec
cwtl
sub
test
add
xor
jno
movsb
in
fistpll
aam
push
pop
aaa
cwtl
movl
sbb
adc
jns
loopne
jae
dec
mov
inc
xor
inc
jle
mov
test
decl
lret
cmp
dec
fcmove
orb
pop
fadds
pop
inc
xor
mov
inc
dec
movsl
stos
les
adc
xlat
jae
mov
leave
mov
sbbl
jo
aad
dec
xchg
pop
jmp
enter
test
mov
add
aad
lea
inc
adc
mov
add
or
shlb
xor
orl
inc
lret
mov
mov
mov
sbb
and
fst
lods
imull
mov
test
or
mov
movsb
mov
add
in
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
jo
xchg
mov
cmp
loop
jo
cli
pop
inc
mov
lds
xor
sub
pusha
mov
or
lea
insl
scas
lcall
jnp
aam
mov
call
aad
sub
pop
cmp
inc
adcl
push
push
movsl
and
fsubrl
out
push
enter
xlat
push
mov
loopne
fildll
jnp
call
push
xlat
gs
inc
jmp
arpl
push
xor
loop
xor
mov
test
lret
cmpsl
arpl
push
push
test
repnz
sbb
and
inc
add
lret
xchg
jle
fisubs
adc
not
stos
fsub
push
mov
push
sbb
jmp
lcall
scas
test
mov
cmpsb
icebp
pop
cmpsb
jo
pop
jmp
fwait
iret
iret
arpl
lods
outsl
out
rcrb
adc
push
xchg
fists
sub
mov
adc
jae
or
push
adc
insl
arpl
jp
xchg
lods
and
mov
aam
in
enter
rcll
je
in
dec
vmovups
pusha
adc
pop
mov
mov
mov
fdivrs
out
xor
add
push
sarb
and
dec
add
leave
movl
or
jg
filds
jb
jae
sbbb
pop
std
out
jp
and
mov
outsb
sub
sub
push
add
jle
push
and
fimuls
fs
xlat
xchg
sub
dec
es
mov
jl
sub
sbb
xchg
lcall
arpl
lret
jmp
mov
xchg
cmpsb
cwtl
js
sub
inc
push
fldenv
insl
and
or
jp
xor
xor
lcall
sbb
push
aaa
enter
std
inc
daa
xchg
test
mov
test
and
cmpsb
or
in
fisubl
sbb
push
or
out
mov
push
pop
inc
mov
pop
icebp
or
xor
cld
push
insb
stos
mulb
mov
pop
int
jmp
dec
add
add
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
pop
dec
iret
movsl
cmp
loop
jo
inc
ljmp
mov
in
loope
push
lea
inc
scas
outsl
stc
sbb
mov
push
mov
mov
pop
push
in
xor
adc
fwait
scas
andl
sbb
jno
stos
sub
cmp
in
jge
test
jb
fstl
mov
mov
bound
mov
fcmovnbe
stos
mov
cmp
addr16
dec
push
popf
jnp
fdivl
and
sahf
adc
dec
stc
in
dec
loopne
fs
insb
pusha
sarl
dec
scas
dec
lret
ret
mov
clc
pop
xchg
lcall
push
inc
pop
push
das
jno
roll
sub
int3
insl
out
ds
repz
push
in
call
arpl
mov
mov
pop
subb
iret
jno
jnp
mov
stc
movsb
fs
mov
imul
ja
jbe
mov
fstps
sbb
jnp
push
dec
cmpsb
nop
push
and
cld
add
rclb
push
and
les
jecxz
jl
jg
mov
pop
inc
ja
cmpsb
test
leave
cmp
repnz
shrl
shrb
mov
mov
jne
sarl
int
loopne
cmpb
cmp
cwtl
aaa
out
aam
or
cmp
fimuls
dec
cmp
lds
mov
and
and
push
inc
push
dec
mov
add
pop
adc
les
xchg
icebp
aad
lea
cltd
inc
inc
add
filds
push
sbb
xorb
sub
stos
jbe
mov
or
fnstsw
ljmp
xchg
jg
fnop
inc
jbe
push
lahf
test
ret
push
sub
xor
mov
jmp
pop
adc
sbb
sub
push
test
or
mov
mov
jmp
cmp
and
xchg
adc
pop
loop
lahf
dec
mov
pop
mov
ss
add
xchg
aas
daa
push
into
sbb
out
out
les
test
popf
insl
mov
lock
xchg
wrmsr
sar
or
aas
sub
or
pushf
cmp
or
sbb
jb
negb
enter
push
lahf
xchg
inc
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
sbb
lds
and
jo
out
js
jb
cmpsw
test
xchg
inc
enter
mov
dec
movsb
fmull
loope
dec
adc
int
add
js
jnp
and
inc
negl
ss
cmc
in
aaa
sbb
push
pop
arpl
sub
rorb
add
mov
pop
pop
xor
ljmp
xchg
xor
insb
loopne
adc
xor
xchg
or
mov
mov
dec
pop
cmp
nop
mov
pop
or
loope
mov
sbb
loope
inc
mov
xlat
js
lcall
test
das
mov
lock
cs
and
jge
adc
cmp
dec
lds
jge
sbb
sbb
mov
xchg
jg
sub
adc
mov
call
out
add
ret
lahf
sahf
adc
fwait
push
xorl
push
int3
outsb
xchg
pop
push
nopl
xchg
lea
popa
popa
and
cltd
xchg
fbld
test
xor
xorb
cmp
adc
inc
cs
into
jo
adc
scas
stos
mov
shll
mov
mov
inc
test
call
fs
insl
mov
int3
mov
decb
dec
and
and
gs
xor
push
and
sbb
xchg
sbb
pushf
into
jp
or
and
enter
jp
add
push
mov
movsl
imul
out
sbb
movsb
sbb
push
leave
pop
clc
fcoms
jne
ja
lret
scas
aaa
in
rorl
sub
repz
add
lds
pop
push
mov
cmp
dec
inc
add
rolb
cs
cmc
aam
or
cmp
cli
push
lock
mov
aaa
ret
jb
std
mov
lahf
outsl
sti
fs
add
jne
xorl
push
and
mov
test
jg
outsl
pop
inc
add
loope
xchg
push
xchg
xor
hlt
scas
xor
adc
adc
cmp
pop
inc
in
xor
in
sbb
mov
cmp
xor
adc
dec
push
aad
jp
arpl
mov
lret
adc
out
pop
pop
jl
ja
dec
test
cmpsb
pushf
dec
repz
clc
push
mov
in
fwait
pop
movsb
xlat
pop
lret
fstpt
rcrl
pop
xor
iret
push
inc
xchg
aad
iret
lock
leave
jne
or
gs
loop
mov
dec
lcall
lcall
je
xchg
imul
push
scas
dec
pop
xchg
imul
lret
or
xor
scas
jge
push
cmp
ds
adc
sbb
push
fildl
pop
dec
xchg
lahf
push
xchg
cmp
add
adc
mov
pusha
and
out
insb
jp
push
mov
pop
add
inc
inc
push
hlt
rcll
stos
pushf
xchg
xor
imul
or
jo
sbb
int3
xor
jb
inc
add
out
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
ret
and
jo
mov
pop
jnp
enter
cmp
dec
loopne
push
xor
dec
xchg
in
outsl
lret
and
xchg
sar
daa
cmp
scas
pop
cmc
mov
mov
jp
xchg
push
out
sub
jne
dec
jno
add
hlt
xor
aaa
popa
aas
je
stc
lcall
or
sbb
sbb
add
jae
jbe
mov
sbb
jns
repz
sub
rorb
pop
ljmp
jp
aam
popa
lods
ljmp
out
xor
dec
std
xor
inc
push
mov
and
mov
int3
cwtl
adcl
mov
dec
jmp
cmpb
iret
loop
adc
out
sub
inc
xchg
mov
push
in
loope
icebp
fiaddl
lds
lock
inc
adcb
fwait
into
pop
stc
mov
mov
cltd
push
fiaddl
lea
xor
cmp
push
dec
fwait
inc
movsl
xor
lret
inc
xor
rorl
mov
mov
bnd
inc
sbb
clc
sbb
std
xor
push
fidivrs
jle
add
xchg
mov
not
fwait
inc
cli
mov
push
push
in
jae
insl
jecxz
pop
fcom
cmpsw
loop
sub
xor
in
movsl
aad
mov
lcall
scas
pop
pop
sbb
in
dec
jmp
int3
aad
aas
pop
enter
fisubs
push
mov
pop
pop
aam
data16
sub
les
dec
rcll
stos
mov
faddl
roll
push
or
clc
lods
mov
jno
mov
scas
mov
xor
inc
movsl
mov
outsb
adc
std
dec
aam
fimuls
push
gs
mov
xor
inc
lea
int3
lret
adc
mov
xchg
ljmp
in
or
xor
adc
ljmp
js
xchg
push
push
jno
repz
sub
mov
fwait
xchg
daa
sbb
jno
mov
arpl
and
pop
pop
repz
inc
fisubs
fldt
mov
add
stc
shll
jne
dec
bound
mov
xchg
add
nop
mov
lods
mov
adc
gs
insb
stos
lcall
xchg
xchg
repnz
out
loope
push
adcl
outsl
inc
into
and
shlb
movsb
mov
and
scas
inc
dec
nop
imul
in
fistl
xor
push
aaa
pop
nop
mov
addr16
subb
in
xchg
fists
add
std
dec
scas
cmp
popa
or
jmp
paddq
mov
sub
add
push
flds
pushl
adc
orb
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
mov
jb
test
jo
or
mov
ljmp
lods
ret
jb
or
push
mov
xor
push
mov
sub
ret
push
and
lahf
subb
cltd
adcb
mov
pop
jmp
dec
popf
jmp
jbe
insb
cmpsl
cli
mov
and
mov
loope
out
js
roll
xchg
ljmp
sub
fnstsw
int3
ss
mov
lods
adc
adc
or
mov
arpl
out
adc
loop
push
fistl
lods
jge
outsb
movsl
mov
pop
dec
cltd
mov
jmp
fxch
arpl
addr16
add
jns
add
addr16
cwtl
insl
test
pushaw
gs
jo
push
fsubrl
rcr
cmc
xchg
pushf
lahf
mov
and
push
clc
and
and
sub
lcall
das
cltd
cmp
sbb
mov
iret
repz
push
lret
mov
es
mov
out
mov
cmc
cmpb
xor
push
int
push
adc
and
std
iret
stc
push
adc
fistl
fsts
add
addb
pop
inc
inc
repz
cmp
repnz
push
imul
pop
arpl
push
outsl
ret
cmc
adc
mov
push
popf
mov
adc
rcrl
sub
fs
and
cmp
aam
mov
jl
or
and
mov
out
outsl
pop
mov
cmc
out
pop
gs
nop
sarb
or
ret
dec
test
cmp
stos
sbb
push
in
pop
scas
ret
cmpl
sbb
jg
ret
push
scas
fwait
sub
fbld
cli
jnp
shld
lahf
mov
in
fcomi
xlat
jae
push
jae
hlt
pusha
es
add
insl
xlat
cmp
mov
add
add
nop
std
sar
cmpsb
cli
pop
adc
out
push
jg
rcll
fdivrs
cltd
negb
out
or
ja
jbe
test
data16
lods
sahf
sarl
cmp
push
xor
stc
dec
repnz
ret
hlt
inc
imul
cmp
cmp
cli
add
nop
fsub
cmp
in
jns
jge
jl
aaa
inc
mov
xor
or
pop
mov
mov
mov
std
xchg
add
rcrl
dec
adc
push
jmp
add
mov
pusha
rcrl
cmp
test
clc
cmc
rcll
xchg
mov
pop
pop
ss
in
test
cli
inc
push
mov
daa
scas
mov
jge
mov
outsb
mov
mov
out
sbb
and
jae
je
jne
fisttpll
pop
push
jecxz
xchg
dec
dec
test
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
loop
ljmp
jge
jo
sbb
les
mov
push
sub
push
or
mov
jne
xor
cs
adc
into
xchg
cs
cmp
popf
push
pop
push
fdivl
popa
adc
loop
in
addr16
dec
cmp
push
xor
aaa
out
jo
pop
and
push
andl
cmp
or
sbb
jle
scas
mov
scas
jg
sub
xlat
sarl
lds
es
jle
sbb
lcall
jns
mov
jg
dec
push
fmul
insl
cld
out
and
or
push
lea
pop
maxps
lahf
push
push
in
test
inc
mov
dec
test
cmp
inc
scas
xchg
jge
and
xor
or
mov
mov
sbb
push
je
addb
lahf
push
insb
xchg
ds
enter
pushf
in
pusha
fcmovbe
popf
cmp
fldl
pusha
outsl
inc
adc
adc
gs
lahf
repz
fstpt
leave
in
jo
rol
xchg
or
ret
mov
int
and
sub
push
dec
test
mov
cmp
das
out
scas
mov
xor
sbb
fmuls
xlat
push
test
jae
mov
aam
jbe
and
aad
fcmovnbe
cmpsl
xchg
mov
sbb
iret
sbb
mov
in
mov
fstps
push
xor
sub
and
mov
jge
inc
fldenv
sbb
das
fnstcw
dec
sub
enter
xchg
or
adc
mov
sti
adc
mov
jae
inc
jge
xor
push
jnp
test
fsts
push
in
aad
sub
call
sbbl
mov
ljmp
jecxz
arpl
fdivr
xor
lds
orb
xor
mov
pop
add
lret
jno
ja
push
rolb
stos
stc
ljmp
xor
jmp
adc
dec
int
inc
js
mov
insb
xchg
cmp
xchg
je
inc
out
xchg
cld
lock
clc
insl
dec
pop
out
outsb
jl
add
or
add
outsb
jns
roll
out
daa
jl
lods
lcall
mov
jg
cmp
stos
loope
lea
icebp
adc
mov
dec
mov
aam
or
andl
mov
xchg
ss
cs
jnp
xchg
or
fs
mov
mov
cwtl
int
insl
fisubl
imul
dec
popa
jp
ds
or
sub
jl
mov
pop
adc
add
xchg
pop
lods
cmpsl
int3
xor
pop
test
or
mov
mov
dec
or
stc
lret
filds
icebp
loope
ljmp
mov
jge
in
dec
inc
dec
fnstenv
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
sbb
add
jo
jge
jo
scas
or
cmp
push
sub
and
outsl
les
lock
xchg
add
inc
xchg
loope
dec
mov
cli
xchg
mov
fstpl
into
sarl
leave
clc
xchg
fnstsw
cmpsb
dec
cwtl
adcb
stos
stos
das
pop
jo
pop
loop
repz
cmp
mov
js
ret
xchg
pop
mov
mov
jp
sbb
arpl
mov
sub
jno
lahf
jnp
in
sub
cmpsl
scas
rcll
push
fadd
addr16
lods
scas
sahf
push
popa
lods
mov
push
push
mov
data16
jle
outsl
mov
stc
lcall
jno
mov
inc
ret
mov
loop
add
mov
aad
mov
mov
mov
mov
mov
out
or
popa
stos
lods
jbe
add
lahf
neg
je
ds
outsb
sub
inc
shrl
push
or
or
push
hlt
iret
cltd
ljmp
hlt
out
fidivrs
call
sbb
push
dec
push
clc
into
popa
sbb
rorb
xchg
lret
mov
test
fstl
mov
cmp
loop
xor
and
pop
loopne
mov
push
ficompl
popa
jo
jbe
lds
or
push
ret
rcrl
pop
pop
mov
repnz
cmp
xchg
cltd
movsl
push
jle
xor
testl
test
adcl
addr16
in
jecxz
sub
shll
pop
jae
fsts
jl
push
pop
lret
sar
xchg
outsb
xchg
mov
add
jae
cltd
sbbb
add
adc
std
pop
pop
mov
sbb
xchg
gs
jp
ds
cmp
mov
std
mov
and
xor
xchg
je
push
in
push
cmc
shl
shrb
xor
and
pusha
mov
cmpsl
adc
insb
pop
xor
lret
push
jb
mov
aam
cli
sbb
repz
call
mov
push
mov
lahf
loopne
mov
pop
fsubr
pop
test
mov
push
or
shr
or
ret
scas
inc
in
ja
pop
fcomi
cmpsb
ret
fs
mov
mov
loop
pop
mov
mov
xchg
inc
es
mov
and
xor
int
sbb
data16
nop
in
mov
insl
sbb
add
lock
mov
dec
add
test
jl
icebp
xor
jbe
lea
cmc
push
adc
pop
cmp
fnstsw
loop
sti
pop
xor
pusha
pop
sub
mov
jecxz
xor
mov
mov
out
jbe
loop
adc
add
stc
xor
pop
jmp
push
inc
sub
or
mov
cltd
cmp
cmp
mov
adcl
out
jle
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
xor
jo
jge
jo
mov
xchg
xor
clc
and
das
xchg
xchg
movsb
and
das
adc
imul
stos
mov
jb
pop
test
and
inc
cli
xchg
or
dec
mov
sub
push
sahf
add
xchg
inc
adc
inc
jecxz
mov
inc
pop
test
jo
push
adcb
pop
cltd
push
test
imul
das
mov
insb
repz
dec
clc
popa
sub
jns
push
sbb
sbb
js
ja
icebp
inc
sbb
sub
repnz
sbb
int
adc
stos
adc
push
bound
jmp
xchg
not
xchg
sahf
insb
clc
push
or
inc
icebp
pop
mov
ss
inc
lahf
pop
cmp
xor
mov
sbb
sub
int3
or
xchg
fldcw
insl
imul
or
push
inc
xorb
mov
dec
data16
xchg
repnz
movsb
mov
shll
cmp
lock
ret
inc
movsl
cs
mov
movsl
mov
int3
aas
jg
pop
push
test
pop
leave
push
sub
lods
pop
cli
ret
dec
mov
scas
sbb
lahf
pop
sub
lret
enter
and
inc
ja
cmp
and
call
mov
mov
pop
lods
loopne
mov
cmp
out
out
pop
daa
sbb
jl
and
xor
add
les
dec
mov
insb
jo
out
fildll
movsb
cmpsb
xchg
bound
mov
and
call
inc
mov
push
push
je
and
lahf
popa
pop
fiadds
mov
push
popa
mov
sahf
test
add
jmp
or
mov
pop
adc
enter
in
arpl
es
mov
adc
push
sbb
sbb
cmpsb
in
aad
jp
push
mov
jge
daa
and
ret
loopne
pop
add
mov
cli
leave
xchg
dec
jae
es
adc
loopne
xlat
xor
mov
fisttpll
mov
loope
push
shll
mov
add
and
xchg
add
fwait
aad
pusha
dec
jecxz
mov
push
testb
std
xor
and
jl
mov
setnp
xchg
adc
repnz
and
movsl
sub
fs
sti
scas
sarb
lock
in
sbb
jo
incl
stos
hlt
sbb
out
add
dec
xor
mov
or
mov
test
mov
scas
lcall
pop
std
sbb
mov
jmp
std
pop
aad
shlb
xchg
sub
dec
stc
mov
loop
out
and
inc
lcall
fsubr
rclb
mov
add
or
cmc
dec
iret
cmp
pop
xor
lcall
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
outsb
sahf
aas
loope
shlb
and
jo
pop
pushl
orl
fsubrl
lret
push
mov
dec
dec
cmpsl
das
aam
orl
mov
mov
mov
dec
clc
iret
xchg
ret
mov
test
pushf
dec
pop
adc
mov
dec
inc
jl
inc
mov
dec
jle
xchg
push
cmp
arpl
mov
push
or
xor
jg
xchg
mov
jo
dec
cmp
ds
and
pop
sub
xor
test
cs
lret
sub
stc
out
lea
fldenv
or
xchg
sbb
mov
int
icebp
dec
sahf
mov
out
inc
mov
jl
mov
and
add
add
lds
shll
sbb
push
aad
pushf
pop
ret
cwtl
add
xlat
push
xorl
test
sub
daa
sbb
jl
mov
nop
into
or
mull
mov
or
adc
sbb
sub
test
aaa
sbb
pop
mov
mov
xchg
cmp
or
subb
mov
dec
mov
pop
into
sbb
pushf
pop
sbb
and
stos
dec
outsl
shlb
sahf
stos
lret
call
mov
fidivrl
out
mov
and
in
push
movsl
leave
push
sahf
sarl
sub
and
push
sub
cld
cli
add
int3
mov
pop
or
cli
les
rorb
rcl
cli
push
mov
sbb
addl
fsubrl
adc
loopne
call
aas
jns
les
ud2
in
sub
jb
xchg
lcall
dec
xchg
data16
fldcw
mov
mov
dec
pushf
out
cmc
cmp
int
movsl
mov
hlt
and
adc
stos
sub
xchg
shll
aam
rcrb
sub
rep
jne
xchg
or
incb
add
loop
add
cmc
outsl
mov
addr16
sbb
xchg
sbb
imul
aaa
mov
rorb
jg
fldt
cltd
xor
shll
clc
fwait
insl
in
jle
push
pushf
cmp
notb
shl
push
mov
lods
xchg
adc
cld
negb
sbb
push
or
ss
sbb
lods
iret
adc
repz
and
scas
fnstsw
xchg
xor
mov
call
pop
and
cmc
repnz
and
sbb
shll
hlt
or
aaa
fldcw
cvtdq2ps
push
push
mov
js
shlb
movsl
add
push
imull
loope
ljmp
outsl
add
mov
jns
loopne
or
dec
mov
push
mov
fildll
push
xchg
sbb
lds
xor
cmp
mov
das
test
adc
popw
cmpsb
xchg
sbb
rol
outsl
movl
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
mulb
push
dec
mov
fcomp
push
testl
xchg
xchg
sbb
jge
inc
cwtl
loopne
or
cmp
and
jae
push
aaa
dec
and
adc
int3
in
pop
out
sbb
iret
pop
mov
push
cs
pop
mov
mov
mov
xchg
jbe
lds
rcrb
enter
adc
push
mov
mov
divl
out
sbbl
jnp
sub
lahf
xchg
test
push
sbb
mov
push
and
and
arpl
lods
mov
mov
mov
lea
inc
fcmovnbe
out
imul
jo
push
pop
push
fnstcw
cltd
inc
in
adc
out
fcmovne
lods
nop
stos
in
mov
cmc
pop
sub
mov
cmpl
repz
sarl
jns
mov
outsb
pop
jle
dec
mov
adc
daa
das
stos
and
mov
adc
jecxz
iret
test
je
fcmovne
lds
or
inc
lret
inc
call
popf
iret
xchg
mov
jg
fst
jbe
int
jmp
push
fdivl
adc
mov
jmp
xor
jmp
jg
pop
and
das
ror
lods
ja
and
movsl
aam
sub
frstor
adc
outsl
sbbl
push
mov
das
gs
adc
push
and
shlb
in
add
mov
mov
xor
fimuls
mov
loope
ficoml
jg
cli
jne
icebp
or
fisttpl
push
shrl
rcrl
aaa
xchg
push
xchg
out
inc
scas
jmp
es
loop
pop
data16
nop
andb
adc
cltd
sbb
mov
out
dec
sub
clc
movsb
outsl
aas
xor
jl
cmp
subl
call
subl
or
adc
jo
or
xchg
hlt
pop
lret
sbb
notb
push
push
cmp
pop
dec
cmp
push
in
fisubl
pushf
movsl
jns
push
loope
mov
data16
das
mov
sub
jae
push
mov
gs
cmp
xchg
nop
outsb
jl
clc
aas
pop
mov
popf
add
and
idivb
cli
adc
inc
shlb
sub
lahf
cwtl
lock
lret
add
inc
mov
scas
push
xor
sarl
into
mov
out
jno
jge
lcall
pop
and
decl
cltd
xor
adcl
or
jns
lock
sbb
cmp
ret
arpl
mov
shll
shlb
jmp
int3
rorb
xchg
cltd
jno
xchg
ljmp
pop
loopne
pop
sub
aam
jge
mov
mov
pushf
stos
hlt
xor
rcrb
mov
push
add
adc
popf
test
imul
mov
roll
negl
mov
inc
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
inc
jmp
xchg
fdivl
and
jo
xchg
jae
jl
cli
shl
sub
push
push
mov
cs
mov
pop
pop
pop
mov
add
jge
cmp
and
sub
std
inc
inc
data16
push
popf
xchg
jne
test
xchg
stos
out
mov
mov
std
mov
fmull
jge
pusha
or
push
roll
sbb
inc
push
rcll
mov
dec
cmp
cmc
add
mov
jne
mov
lea
jnp
push
pop
addr16
or
xchg
movl
jnp
loope
popl
jp
and
or
push
es
aam
adc
sub
mov
xchg
rep
pop
fs
push
jb
dec
mov
push
rcrb
push
push
or
loop
xchg
push
adc
mov
fs
insl
fisttps
mov
insb
ffree
mov
sbb
insl
xor
in
and
dec
inc
loop
mov
lret
mov
mov
gs
mov
sub
lret
inc
push
lcall
std
mov
mov
fwait
inc
jnp
mov
jl
mov
js
cmp
mov
adc
iret
xor
push
cmp
out
sbb
inc
jbe
rolb
imul
sub
jmp
cwtl
xchg
cmpsb
inc
aam
xchg
in
lret
bound
nop
mov
hlt
pop
call
jo
add
jae
cs
out
aam
mov
lock
inc
stos
rorl
pop
push
sub
sbb
clc
jne
aad
in
mov
aas
or
mov
or
movsl
ss
lds
outsl
fnstenv
loop
mov
out
mov
nop
sub
ljmp
ror
aad
inc
aas
adc
ss
push
mov
cmpsb
jne
fsubrs
add
leave
loope
add
outsl
or
xchg
cli
xchg
add
push
push
push
std
test
je
sbb
je
dec
dec
xchg
outsb
testl
call
out
add
scas
sbb
inc
imul
pop
loope
mov
stc
movsb
rcrb
sub
push
xchg
subb
out
out
lock
inc
loopne
or
add
fstl
nop
adc
aaa
xor
inc
push
lods
mov
dec
xchg
out
fildll
aas
jl
dec
inc
push
mov
xchg
pop
lret
and
iret
jp
jae
mov
xor
jne
loopne
cmp
inc
or
scas
lods
jns
loopne
pushf
cmp
fildll
xor
sub
jl
or
dec
popl
iret
pop
push
mov
lret
ljmp
test
xor
mov
xchg
mov
push
int
mov
inc
mov
das
xchg
divl
pop
sbb
fdivrp
push
fbld
scas
adc
stos
outsl
pop
in
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
inc
jg
dec
sbb
leave
movsl
and
jo
icebp
or
or
push
addr16
stc
rcll
cmpsl
mov
add
mov
mov
push
mov
jl
jp
sbb
and
jle
scas
inc
out
call
lcall
inc
addr16
and
mov
test
fdivl
scas
test
cmp
in
ret
fimull
test
or
pop
sub
mov
cld
xor
dec
fwait
pop
ja
in
stos
fwait
loopne
push
ror
imul
lret
dec
ljmp
mov
mov
mov
into
dec
adc
push
test
lock
insb
test
xor
stos
adc
sub
adc
and
xor
jae
jle
aas
and
out
mov
sahf
pushf
sti
cmp
out
jl
xor
pop
lods
mov
or
inc
in
inc
xor
mov
or
xchg
les
cltd
popa
adc
filds
imul
sbbl
call
xchg
mov
push
pop
fwait
push
pop
inc
push
adc
dec
jo
sbb
fwait
cmp
mov
push
xchg
pusha
mov
xor
lret
popf
repz
dec
push
in
pop
popf
lods
pop
mov
mov
in
adc
imull
mov
lods
mov
pop
push
movb
idiv
test
add
hlt
xor
cmp
movsl
pop
push
pop
xchg
xchg
imul
add
dec
movsb
je
aaa
testl
dec
or
nop
mov
dec
adc
pop
pop
sarb
mov
jp
outsb
pop
inc
xor
dec
divb
in
cmpsl
jge
jle
mul
int
mov
cmp
pusha
mov
decb
or
sbb
push
daa
jne
push
mov
mov
mov
dec
add
xchg
fsts
cmpsl
add
xchg
sti
or
popa
out
cmp
jp
add
and
mov
pop
pusha
leave
xchg
or
lds
and
xor
out
mov
loope
ret
bound
mov
sub
inc
or
iret
lea
add
mov
jl
fimull
ja
imul
lcall
out
mov
push
lods
mov
xchg
pop
sub
pushf
mov
into
xchg
lods
or
add
sbb
stos
fwait
ret
shll
imul
pop
je
add
mov
repnz
pop
clc
cmp
rcrb
lods
pop
xchg
fcomip
xchg
insb
mov
pop
adc
pop
imul
mov
lcall
xorb
pusha
mov
or
pop
mov
cmp
push
les
add
pop
inc
es
or
cmp
mov
pushl
lea
jmp
add
out
out
xor
call
das
sub
jo
jge
jo
imul
pop
jne
sti
gs
imul
dec
push
in
mov
inc
adc
call
mov
cmpsb
lea
sbb
jecxz
mov
xor
mov
mov
dec
sub
aas
nop
sub
xchg
addr16
movsl
ret
mov
xor
sub
sbb
mov
pop
outsb
adc
dec
std
rorl
inc
popa
xor
insb
callw
hlt
stc
mov
mov
adc
divl
sub
jecxz
daa
add
int3
sbb
inc
rolb
or
mov
repz
movsw
loopne
cmp
inc
push
into
jmp
mov
jle
arpl
rcrb
xor
jbe
rorb
jbe
stos
push
je
pop
ds
add
rcll
call
jae
sarl
pushf
mov
call
scas
lea
dec
xchg
or
loop
hlt
and
fisttpl
xor
push
punpckhwd
push
add
sti
dec
sti
insl
jae
aas
dec
sti
mov
push
jae
cmp
aam
mov
mov
out
add
shrl
sub
adc
mov
movsb
rcrl
scas
push
xor
fsts
fisubrl
dec
vpor
adc
jns
std
jg
imul
push
or
jle
testb
dec
mov
push
mov
push
mov
les
out
addl
lret
mov
add
jge
movsl
adc
xchg
ret
lock
xchg
or
movsl
mov
clc
iret
mov
mov
cmp
ljmp
adc
inc
dec
lds
inc
jno
adc
test
or
lea
push
xor
lods
and
cmp
and
xchg
sbb
mov
jo
repnz
daa
pop
ss
xor
push
mov
data16
jmp
testl
pop
lock
test
push
inc
adc
and
ljmp
mov
sbb
jbe
push
cld
lcall
out
push
mov
iret
jg
mov
aas
xor
inc
pusha
clc
mov
xor
pop
sti
mov
sub
out
inc
mov
adc
leave
ret
xor
sbb
mov
mov
push
hlt
in
push
xchg
jle
jp
lods
mov
jmp
lret
sub
les
or
das
inc
mov
add
dec
mov
dec
mov
popf
fwait
push
lea
call
and
fcoml
adc
pop
xor
push
aaa
out
push
inc
adc
int3
and
fnsave
lock
pop
pop
xchg
mov
and
rol
push
mov
test
outsb
jl
test
push
sub
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
loop
test
jo
jge
jo
cmpsl
dec
cmpsb
and
mov
fstp
and
mov
inc
inc
sarb
iret
aad
cld
lea
and
lods
push
mov
sub
scas
jle
mov
pop
sbb
cmpsb
shrl
aam
pop
push
sbb
mov
cmpsl
loopne
and
sub
mov
xchg
into
push
lods
sub
push
and
add
sbb
jnp
fmul
xor
adc
je
mov
xor
jl
or
or
sbb
repz
push
and
rorl
push
cmpsb
mov
in
lea
adc
mov
stos
jns
mov
push
inc
jae
inc
cmpsl
inc
cwtl
addr16
clc
ret
adc
stos
gs
test
sub
jg
lahf
fs
ret
dec
jnp
sbb
pusha
mov
daa
xor
and
shlb
int
out
ja
xabort
bound
mov
pop
mov
lcall
repnz
cmpsl
or
outsl
pop
adc
filds
stos
fidivrl
cmp
rolb
sub
cs
sub
mov
dec
push
rol
jns
pusha
adc
cwtl
dec
mov
call
mov
add
sub
add
pushf
jp
jl
fmull
fwait
xchg
ljmp
ret
push
jae
mov
xchg
dec
jo
int3
jle
add
dec
pop
cmp
leave
dec
push
xchg
pop
xchg
inc
loopne
testb
mov
sub
fbstp
pop
pusha
inc
push
insl
push
dec
ret
loopne
jmp
out
lock
loope
jo
enter
pushf
add
repnz
push
add
jne
pop
shlb
movsb
mov
pop
popa
testl
scas
call
sub
and
xchg
cmpb
sub
pop
xor
shlb
lods
mov
lds
loopne
push
ja
adc
jg
les
stos
data16
dec
lock
jnp
push
mov
sub
std
leave
sub
mov
cmp
test
lds
stc
adc
jp
cmc
push
mov
call
pop
inc
out
or
xor
in
and
aaa
add
pushf
mov
dec
xchg
aas
jmp
rcll
into
out
ja
jl
sbb
mov
cmp
push
cmp
mov
scas
cltd
addl
jl
int
adc
je
out
ucomiss
insb
mov
addb
adc
subb
int3
and
mov
adc
push
jns
pop
dec
fisttpl
out
cmp
repz
sbb
fadds
jg
mov
sti
aam
mov
mov
or
push
pop
pop
push
dec
push
inc
jmp
cmp
les
out
out
inc
jae
dec
adc
jb
movsb
xor
arpl
xor
insb
jecxz
jecxz
jb
dec
mov
lods
xor
scas
mov
call
mov
mov
jmp
out
mov
ja
add
xchg
out
jo
and
jo
xchg
xor
lds
push
ds
inc
and
lods
lea
data16
outsb
pusha
hlt
pop
xchg
iret
stos
jl
in
sbb
notl
pop
sub
or
lahf
push
mov
scas
mov
jecxz
mov
add
push
enter
mov
mov
je
test
in
xchg
lret
dec
in
inc
sub
push
mov
push
mov
sub
lock
movsb
pop
popf
xor
add
push
adcb
xchg
test
mov
jno
mov
les
inc
cmp
lds
repz
jo
mov
in
loop
stos
mov
dec
mov
mov
jno
xchg
out
xorl
ficompl
sbb
jae
dec
jmp
sub
imul
xor
dec
jne
rcr
inc
in
push
invd
jl
pusha
cmpb
inc
pop
in
cmp
lock
sbb
ss
pop
ja
add
aaa
cmp
jne
or
es
cmc
popa
frstor
mov
mov
out
popl
xchg
test
jne
push
jp
icebp
pop
das
hlt
test
or
xor
mov
cmp
insl
sub
andl
lcall
lea
rorb
js
mov
fmuls
sti
iret
loop
mov
mov
bound
mov
repnz
sti
adc
fmuls
dec
in
xchg
out
cwtl
cmc
jo
mov
fbstp
mov
mov
bnd
sub
cmp
xchg
frstpm(287
inc
mov
movsb
popa
or
or
js
mov
mov
pop
push
push
inc
sarb
ficompl
mov
insl
pop
ret
adc
fnsetpm(287
xchg
movsl
movsb
xor
or
jb
cwtl
fsubr
mov
push
sbb
sbb
jnp
mov
sbb
xor
pop
fwait
jg
lds
mov
xor
mov
dec
mov
xlat
inc
nop
sub
hlt
sar
pop
repz
rcl
mov
mov
filds
push
stos
dec
lcall
or
jnp
sbb
and
mov
jne
jp
mov
and
sub
fcmovnb
lret
dec
jecxz
repz
fwait
pushf
outsb
movsl
adc
mov
repz
sbb
lcall
je
and
repnz
pop
flds
jnp
in
in
imul
add
pushf
es
adc
xchg
lcall
xchg
sub
in
in
fldl
test
lahf
push
push
inc
adc
cltd
fsubp
add
jo
test
clc
and
pop
dec
arpl
inc
pop
or
dec
xor
aad
sbb
dec
cvtpi2ps
push
cmc
lret
adc
icebp
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
idivl
jo
lahf
jge
jo
jo
adc
inc
sub
mov
jnp
jle
push
into
adc
mov
lds
xor
jle
lods
icebp
or
out
sbb
sbb
xor
outsb
mov
pop
repnz
mov
popf
and
adc
repz
sub
sub
mov
jae
or
mov
pop
aaa
comiss
lret
rol
int3
pop
clc
imul
pop
arpl
mov
loop
xor
out
xchg
lcall
sti
movsl
shlb
push
xor
push
fisubs
call
cmpsb
subb
sbb
jl
ret
cmp
or
or
leave
sub
pop
jne
jg
and
dec
subb
jbe
mov
cltd
sbb
push
xchg
mov
lock
cld
dec
sub
cmp
and
loope
sub
mov
lock
dec
jae
push
add
push
xor
pop
inc
sahf
fistpl
push
shrb
jmp
jp
dec
sti
ja
popf
pop
fidivs
das
mov
jo
xor
aaa
xchg
loope
mov
fiaddl
pop
xchg
fs
sub
mov
divw
add
aaa
sbb
subl
fwait
or
testl
and
popf
nop
in
movl
sbb
fists
dec
sbb
es
mov
xchg
in
add
fsubrs
inc
jmp
mov
xor
or
daa
clc
cmc
lcall
loopne
scas
jg
movl
push
sbb
popa
insl
mov
rsqrtps
nop
push
adc
cld
mov
enter
ss
arpl
sub
jbe
and
dec
ljmp
xchg
js
xor
pop
lret
xchg
xor
jbe
out
fwait
hlt
or
adc
dec
fidivrs
enter
cmp
sti
mov
repnz
fcomps
jnp
sbb
ds
das
out
sub
cld
les
xlat
xor
adc
repz
xchg
cmp
jl
cmpsb
test
jne
mov
ja
push
icebp
mov
sbb
or
or
mov
dec
add
lret
clc
adc
testb
sbb
push
dec
std
adc
stc
pushf
and
mov
mov
jle
pop
lods
and
scas
dec
insb
das
stc
sbb
mov
sub
cmp
movsb
sbb
shll
dec
mov
dec
mov
imul
bound
adc
and
daa
xchg
xor
dec
mov
loope
cmp
jp
mov
outsl
sarb
call
and
aam
inc
int3
adc
or
icebp
dec
inc
and
or
in
mov
mov
fcmovnu
push
stos
push
sub
insb
mov
ja
push
mov
xor
add
lret
pop
inc
lcall
cs
cmp
ss
aam
fldenv
inc
lods
or
and
leave
scas
mov
xchg
push
js
test
inc
or
adc
jg
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
shrb
lret
es
jo
dec
cmp
xlat
test
aad
fldt
aad
in
clc
addr16
icebp
int
jb
pusha
fcmovbe
fisubs
dec
gs
data16
aam
cmp
and
cld
mov
pop
out
stos
dec
dec
sub
mov
inc
outsl
sbb
insl
sbb
popa
imul
lcall
out
loop
cmp
ljmp
add
pop
dec
fcompl
mov
xor
jno
xchg
xor
sahf
add
pop
icebp
push
into
adc
fsubrs
mov
or
adcb
add
out
stos
pop
inc
iret
push
mov
das
inc
in
sub
xor
enterw
jg
pop
in
arpl
xor
push
int3
lret
push
dec
adc
lcall
in
mulb
test
int
and
addr16
add
xchg
in
rorb
lock
sbb
sar
add
loope
and
vpunpckhbw
fwait
xchg
add
test
xor
aas
lock
repz
dec
pop
cmc
inc
scas
mov
cmp
sarb
push
in
mull
bswap
mov
shrb
adc
pop
push
add
jbe
push
sbb
dec
dec
mov
pusha
enter
out
push
movsl
daa
mov
jno
jp
sbb
repnz
es
pop
push
rcrb
into
in
repz
xlat
and
mov
mov
icebp
push
shlb
or
xchg
mov
ja
sbb
aam
imulb
inc
in
push
or
inc
pop
scas
mov
fdivp
movsb
push
sub
sbb
repz
inc
cmp
popf
adc
push
xor
cltd
mov
fs
pop
xor
or
out
inc
popa
inc
sub
outsl
ljmp
data16
push
sbb
mov
and
out
test
sahf
push
push
or
push
filds
adc
pop
popl
sbb
insl
xor
inc
xchg
movsb
popf
ret
add
nop
out
orl
fiadds
insb
test
jmpw
sbb
sub
arpl
xor
pop
dec
outsb
cmp
lcall
outsb
mov
sbb
leave
ja
fs
fnsave
das
fmul
inc
jae
cmp
inc
adc
pop
mov
adc
pop
sbb
pop
dec
ss
jo
pop
cmpb
idivl
outsb
pop
int3
mov
add
insl
xchg
addr16
xchg
or
mov
in
or
div
xchg
ss
cmp
mov
mov
inc
push
mov
adc
sbb
js
push
inc
out
and
jp
add
inc
mov
mov
push
jne
jl
jl
cmp
mov
push
mov
pop
inc
out
pop
cmp
add
lds
and
jp
mov
pusha
sbb
jb
test
daa
repnz
adc
xchg
jge
nop
popa
mov
int
outsb
ja
rcl
pop
shrl
shrb
sbb
aaa
cli
cs
adc
dec
xchg
pop
scas
adc
mov
inc
xchg
pop
fs
jp
test
mov
fistpl
outsb
fildl
dec
mov
mov
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
in
stos
mov
lahf
jge
jo
mov
and
cmp
mov
subl
push
mov
movsl
je
aam
clc
mov
aam
sbb
add
and
add
imul
clc
test
out
stos
popa
sub
lods
xor
out
add
lods
jnp
or
dec
mov
sub
or
mov
mov
xor
mov
mov
xchg
mov
mov
mov
ss
mov
push
test
jl
repnz
ret
out
shlb
pop
mov
jl
xor
repnz
adc
sbb
call
fcoml
push
add
sti
fwait
cmp
mov
xchg
in
test
adc
sbb
inc
popa
stos
inc
mov
inc
movsb
fistpl
negl
dec
jne
hlt
and
push
shll
scas
xor
lock
pop
rcll
sarl
imul
mov
leave
mov
mov
push
mov
cltd
dec
rorb
testl
adc
sub
nop
add
sarb
lods
mov
dec
stc
out
dec
dec
fmul
or
xor
rcrl
mov
sti
stos
sub
dec
aam
push
into
xor
test
ss
icebp
out
cmp
mov
pop
sbb
dec
lret
sbbb
pop
or
aaa
test
pop
adc
cli
mov
inc
mov
sbb
jb
jp
push
mov
ret
fsub
in
push
shlb
icebp
lods
adc
xor
push
pop
lcall
test
in
shlb
sahf
dec
mov
mov
mov
push
jae
inc
sbbl
pop
jne
movsb
add
je
and
shlb
mov
inc
ja
in
leave
cmp
jb
dec
push
clc
jg
ds
jae
stc
jbe
ret
fadds
cmp
in
pop
lcall
daa
jmp
inc
and
int3
repz
in
inc
push
xchg
shll
fmuls
fstp
jl
aaa
push
and
adc
je
test
or
test
push
xchg
sub
cmp
jo
xchg
mov
dec
sub
sar
in
pop
and
cmp
push
sub
push
xlat
mov
add
xor
lods
out
pop
imul
int3
push
pop
je
stc
push
mov
testl
jmp
push
scas
outsl
insl
in
mov
lcall
xor
aam
inc
push
xchg
add
pop
jae
mov
pop
jb
push
test
notl
test
jns
sar
je
sbb
jno
add
push
cmp
mov
std
fsubl
jp
lods
sbbl
arpl
pushf
mov
sub
pop
in
or
dec
sbb
mov
test
xchg
push
call
jge
hlt
push
mov
repz
inc
cmp
xchg
loope
xchg
and
mov
test
test
sub
dec
or
cs
adc
add
aaa
lods
jb
pop
mov
outsl
outsb
push
call
in
pop
mov
push
sub
mov
mov
push
pop
add
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
into
xchg
add
in
jo
lahf
jge
jo
les
call
je
cmp
pop
data16
mov
inc
rcrb
rorb
fsubl
fmuls
jecxz
inc
gs
adc
and
enter
cmp
push
or
sub
cmpl
out
xor
negb
call
xchg
jbe
lcall
subb
imul
hlt
inc
jnp
xor
ffree
shll
outsl
inc
adc
test
jle
jbe
sti
add
push
lcall
and
outsl
scas
call
and
pop
cmc
cmp
xchg
inc
push
lahf
mov
jecxz
push
mov
or
xorl
inc
aaa
lods
out
jnp
stc
inc
in
mov
pop
in
cmpsl
rorl
inc
pop
cmpsb
dec
push
addr16
fcoml
cmp
aam
sbbb
arpl
and
adc
div
scas
mov
mov
mov
dec
pandn
adc
fs
sub
lods
jae
mov
push
or
loopne
push
add
arpl
or
sbb
repnz
jnp
and
inc
sar
out
lret
lea
inc
xlat
enter
repz
loopne
pop
in
iret
daa
cmp
jo
hlt
std
push
jno
jb
sarb
and
sahf
inc
mov
mov
sbb
mull
mov
popf
mov
adc
mov
inc
mov
dec
jns
lret
xor
jb
arpl
sub
pop
insl
loop
popf
xchg
inc
loope
sbb
lahf
out
push
sbb
nop
push
pop
incb
fs
mov
lret
ret
mov
test
jp
cld
mov
fiaddl
and
jb
pop
push
leave
xor
arpl
xchg
cmp
cmp
in
sub
pop
ds
mov
add
mov
in
repz
xor
imul
jmp
in
and
pop
inc
jne
jg
aas
push
je
sbb
jl
mov
xchg
das
pop
out
inc
dec
nop
mov
mov
xor
cmp
ds
idivb
in
mov
cmpsl
js
jnp
push
inc
cld
ja
popa
sbb
out
into
sub
cmp
inc
dec
sbb
push
mov
add
lea
sbb
sbb
popf
mov
loop
ljmp
mul
sbb
cmc
and
daa
cmp
push
aam
push
nop
insl
cmp
stos
sub
scas
daa
xor
add
icebp
bound
cwtl
jmp
cmp
aam
int
lea
xor
mov
iret
mov
test
mov
out
push
ret
out
test
test
jnp
pop
add
les
iret
in
cmp
ret
movsl
dec
subb
inc
cs
or
mov
push
push
mov
mov
sbb
and
int3
ret
aaa
jp
mov
sti
mov
in
flds
xor
push
adc
sti
jno
daa
cli
shlb
mov
scas
incb
sti
stos
add
arpl
out
push
movsl
mov
js
loopne
js
sbb
in
lret
cmpsl
arpl
scas
fildl
pop
inc
push
and
dec
pop
addr16
pushf
lds
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
push
in
test
std
jo
lahf
jge
jo
mov
lcall
hlt
pop
mov
cmp
sbb
loope
push
aad
sub
push
mov
adc
ljmp
or
mov
fidivl
fisttps
es
ljmp
mov
pop
test
pop
jle
call
std
lss
sbb
xor
stc
push
mov
mov
mov
push
push
in
ss
mov
mov
out
push
cmp
xor
lcall
mov
mov
or
ret
inc
mov
cmp
xor
sahf
inc
sbb
test
das
add
lods
fsubs
fcompl
adc
add
sbb
fld
fwait
dec
popf
pop
nop
repz
fwait
add
cmpb
sub
mov
add
cmp
or
jg
mov
jno
sub
sbb
subl
push
imul
test
and
aaa
and
es
inc
push
std
cltd
sahf
lcall
pop
std
sbb
cmp
nop
mov
sahf
cmp
cld
fwait
and
xchg
sub
loope
cltd
pop
adcl
and
sbb
cmpsb
inc
stos
adc
mov
push
adc
sub
pop
pop
lods
js
mov
shlb
sub
jb
adc
jmp
shll
loope
mov
stc
mov
or
js
mov
flds
insl
pop
in
mov
in
and
lods
sti
shlb
xchg
icebp
xchg
iret
ss
mov
sti
adc
inc
xor
xchg
sub
inc
mov
push
aaa
adc
xor
outsl
sbb
sub
add
cmp
push
mov
rclb
cmpsb
jl
mov
std
or
push
orl
mov
daa
jecxz
cmc
loopne
das
push
jnp
mov
or
test
test
cmpsb
and
and
push
sub
xor
fimull
mov
enter
in
lods
cli
jge
push
inc
rcll
xor
leave
cmp
pop
xchg
dec
inc
loopne
sub
test
test
decl
mulb
push
test
fistpll
sbb
adc
push
pop
fldenv
or
and
jl
xor
mov
arpl
add
add
ljmp
in
pushf
sub
adc
xchg
rorl
movsl
test
in
int3
xchg
push
fxch
bound
out
mov
jo
dec
push
fistps
pop
movsl
pop
enter
inc
xchg
cmp
adc
rcrl
or
ffree
jne
or
lea
dec
push
cld
lcall
std
out
xchg
js
inc
cld
andl
mov
xchg
jg
je
mov
push
push
and
rclb
xlat
mov
or
xor
fs
gs
insl
lahf
xor
jnp
jae
mov
pop
adc
ss
inc
test
out
push
sub
mov
cmpsb
jecxz
sbb
xor
jecxz
mov
add
outsl
dec
sbb
loope
fimuls
inc
subl
loope
test
adc
pusha
and
in
test
xchg
shr
mov
jne
sub
lret
faddl
rclb
lahf
jge
jo
adc
popa
ds
stos
xor
in
call
fscale
out
adc
xchg
inc
or
jge
push
mov
loopne
dec
test
mov
ja
movsl
in
aas
add
pusha
cld
sub
out
push
lods
add
clts
xor
ret
fildl
das
movsb
in
les
pop
adc
js
push
aam
sahf
repnz
dec
mov
cli
xchg
push
xor
inc
push
rcrl
imul
dec
pop
iret
out
je
push
lea
loope
or
outsl
out
and
and
sbb
ja
ret
dec
stos
cltd
mov
pop
push
mov
pop
popa
test
aas
sahf
arpl
in
sub
das
clc
sbb
sbb
mov
test
sbb
push
pinsrw
pop
dec
out
in
fstps
aas
shrl
pop
push
or
mov
dec
and
aad
jne
mov
and
inc
clc
or
daa
mov
sub
and
sub
or
loope
loope
test
xchg
sub
xor
dec
mov
insb
add
mov
or
or
lods
ja
xchg
mov
ret
hlt
daa
into
enter
pop
and
mov
xorb
rcrl
fstpt
rcrb
pop
mov
jae
out
pop
jne
int
dec
ds
pop
shlb
enter
ja
pop
push
gs
mov
test
mov
mov
push
sub
ficompl
dec
pushl
xchg
push
sbb
sahf
cmpb
or
arpl
repnz
inc
pop
push
jmp
jb
sub
mov
cs
add
and
stos
jge
arpl
and
jb
encls
lock
shrl
xchg
sbb
mov
insb
xchg
loope
jae
push
push
ret
pusha
cmpsb
jg
jp
movsl
jl
jp
loopne
push
push
push
call
jno
jno
bound
dec
cmc
into
xchg
cwtl
aaa
inc
and
shrl
aam
xor
mov
inc
shlb
mov
repnz
icebp
testb
loope
pop
jmp
cwtl
and
lcall
mov
adcb
nop
dec
and
add
loop
cmp
sub
imul
mov
je
aam
icebp
in
popf
push
mov
in
lods
lea
orb
and
pop
fxch
roll
es
jne
xor
jb
aad
ljmp
test
nop
mov
sbb
outsl
sub
ret
mov
sub
dec
rolb
lcall
mov
lods
or
or
getsec
jns
mov
push
and
cmpsl
jne
leave
xchg
shll
fdivs
movsl
add
mov
insb
xchg
dec
in
repz
xchg
xchg
xchg
lea
jno
lret
adc
icebp
adc
addr16
inc
xchg
test
pop
or
xchg
ds
or
leave
cld
fisubrs
dec
xor
fimull
inc
inc
xchg
push
adc
fmul
in
push
addb
inc
addr16
pop
xchg
jnp
xchg
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
cmp
lock
roll
jo
add
adcl
ds
and
mov
sbb
add
cs
inc
aas
cmp
stos
lahf
xchg
out
ficoms
dec
testl
loop
cmpsl
jg
mov
ror
int
repz
fidivrs
push
dec
dec
cld
jle
pop
cmp
pushf
loop
aam
imul
jl
sub
add
add
stc
mov
ds
mov
imul
repz
lret
fcompl
fmuls
pop
out
jmp
shrl
or
mov
js
iret
mov
dec
sarb
out
or
cltd
adc
xchg
sbb
or
sahf
lds
outsb
and
fwait
or
shlb
fdivl
push
sbb
imul
inc
in
cs
sub
fidivl
stos
fwait
div
into
ret
dec
xchg
out
add
loop
sub
or
test
mov
push
enter
cli
pop
xchg
push
ret
mov
xchg
aad
inc
xorb
sbb
pop
push
outsb
gs
jae
xchg
sub
pop
shrl
ficoms
fwait
sub
insb
mov
xor
in
pushf
rcrl
lret
out
ror
jl
xchg
or
mov
loopne
insb
and
insl
cmp
cmovp
js
and
repz
popf
in
pop
jo
xchg
icebp
out
sbb
jbe
add
jge
mov
push
outsl
fxam
pop
push
outsl
sub
xor
lret
mov
stos
popf
jbe
sub
xor
xor
pop
popf
int3
imul
xlat
and
fwait
in
and
scas
sub
dec
int3
es
pop
sahf
cmp
pop
or
and
jge
sub
inc
lret
addr16
out
xlat
in
call
js
sub
mov
adc
xor
dec
jl
mov
xlat
adcl
mov
sub
mov
push
mov
sbb
cmp
cld
in
in
imul
mov
or
fs
mov
push
add
sti
hlt
into
mov
or
pop
cmp
shr
lock
sub
add
xor
rcr
lret
adc
inc
movsb
jbe
mov
dec
xchg
mov
mov
and
fld
sbb
sbb
cwtl
sysexit
arpl
cwtl
sub
xchg
insl
mov
jmp
in
aaa
inc
sub
xchg
into
mov
loope
pop
nop
adc
or
or
jo
xor
ret
fimull
bswap
cmp
cmp
inc
fldl
daa
test
inc
in
xor
dec
ljmp
popf
jmp
push
mov
cmp
testl
loopnew
mov
jo
jecxz
mov
movsl
mov
xor
jbe
pushf
push
pop
jne
adc
fsubrl
inc
push
test
inc
jle
loop
mov
xchg
jle
or
in
and
enter
jne
out
addl
lret
fnsave
push
pop
test
rorl
cmp
jbe
mov
jne
int3
xchg
pop
jmp
adc
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
or
pusha
xorl
jge
jo
push
cwtl
mov
and
xchg
in
sub
mov
loopne
out
mov
mov
pop
push
add
pushf
icebp
pop
jns
mov
cmpsl
hlt
orl
int3
and
or
xchg
lret
fstl
arpl
imul
insb
ret
add
pop
xchg
orl
lahf
dec
adc
mov
xchg
or
call
sub
shll
fdivrl
xchg
lret
jle
sbb
inc
inc
mov
push
pop
and
pop
out
mov
dec
mov
lock
test
cmp
cli
lret
add
incl
push
push
and
inc
inc
sub
roll
jle
jb
push
push
arpl
test
lcall
cli
adc
aaa
shll
iret
xor
sub
push
xlat
jmp
and
inc
xchg
inc
adc
jb
test
jno
rol
fistpl
int
shll
jo
movsb
lret
in
arpl
call
lret
dec
es
mov
pop
repnz
in
cmp
movsb
repz
sbb
das
bound
ror
push
xor
push
sbb
sbb
pushfw
popf
dec
or
rcl
mov
sbb
inc
or
lods
cmpb
mov
push
xchg
ret
out
into
lock
xor
movsl
fcomip
mov
push
rclb
lods
bound
mov
rorl
call
sub
jne
ds
into
and
nop
pop
jle
mov
movsl
loopne
cwtl
lock
cmp
stos
lret
mov
fcmovbe
or
insl
dec
mov
out
mov
or
lds
nop
stos
sbb
leave
out
sbb
xchg
sub
and
pusha
inc
mov
stos
xchg
sub
cmpsl
sub
mov
scas
inc
xor
mov
cmp
fcmovu
mov
subb
out
or
push
dec
data16
sbb
add
scas
xchg
sbb
add
test
movsl
aas
pop
xor
mov
pop
xor
adc
mov
fwait
mov
mov
xor
xor
ds
mov
adc
mov
arpl
and
out
iret
je
or
push
ror
enter
cmp
sbb
and
cmp
fcmove
lock
jne
daa
iret
rcrl
ja
fs
adc
sbb
outsl
loope
push
popa
ljmp
adc
scas
es
sbbl
es
fsubp
adc
and
lret
push
rcrb
int
int3
xor
and
cmp
ja
in
cmp
pushf
fcomps
xorb
in
inc
sub
adc
dec
pop
lods
add
sbb
lods
mov
outsl
pop
and
movsl
or
pop
icebp
xchg
dec
sub
mov
mov
fidivs
xchg
xchg
mov
outsb
push
imul
repz
enter
testl
nop
mov
stos
mov
push
popf
clc
imul
jmp
adc
add
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
xchg
lods
rorb
jge
jo
inc
mov
scas
push
inc
stc
dec
mov
cltd
xchg
jne
mov
push
pop
add
dec
jo
jno
sbb
cmp
push
xor
mov
mov
icebp
xchg
jg
in
daa
clc
es
iret
mov
repz
test
lret
test
dec
mov
ss
lret
loopne
and
xlat
adc
mov
ret
sub
loop
add
or
js
push
incb
pop
rcr
pop
out
jnp
sysret
lods
ljmp
test
add
in
cmp
mov
sbb
ja
lods
orl
dec
int3
sbb
adc
dec
or
int3
xor
push
push
outsb
mov
mov
jne
pop
and
mov
daa
or
ffree
pop
in
sti
mov
ja
cmp
ror
pop
and
repnz
sub
jmp
and
sahf
pushw
dec
cltd
ja
inc
nop
lahf
testl
push
fadd
iret
aam
dec
jl
jmp
dec
inc
xor
outsl
and
iret
dec
sbb
cltd
adc
jbe
cs
movsb
or
xchg
or
and
sbb
xor
es
lcall
xchg
cmp
lcall
cmp
arpl
mov
cmp
and
and
out
cmp
and
jbe
rolb
call
daa
push
dec
movsl
sbb
rcrb
cmp
rorl
pop
das
out
mov
xchg
inc
idivl
lock
negb
test
jbe
mov
repnz
adc
sbb
pop
mov
mov
push
pop
lods
bound
xor
rol
adc
int3
fsubs
int3
mov
jne
jae
imul
iret
loopne
xor
xchg
push
loope
push
and
sub
scas
sub
xchg
clc
lcall
mov
fdivrs
lods
pop
into
mov
lret
pop
and
leave
or
mov
sub
int
fs
vmovntps
push
in
lods
or
popa
xchg
add
inc
cmp
dec
mov
jl
int3
add
jg
stos
pushf
jb
imul
aaa
aad
or
int3
cld
adc
pop
inc
loopne
aas
lock
and
inc
and
and
jne
xchg
ret
enter
sbb
or
in
xor
jg
int3
imul
and
aad
arpl
jnp
or
cmpsl
cmp
aad
pop
gs
cwtl
cmpb
or
inc
jae
ljmp
out
loop,pt
sub
inc
push
cli
in
leave
push
movsl
sub
jge
lods
adcb
adc
or
sbb
jmp
movsb
and
stc
loopne
out
inc
add
nop
subl
jge
pushf
dec
pop
sub
sarl
dec
jecxz
mov
pop
mov
adc
movsb
xor
pushf
ficoms
push
negl
inc
adc
lods
cld
inc
int
out
orb
push
scas
jp
movsl
push
lds
popl
aam
add
mov
xor
lods
mov
inc
inc
cmp
inc
push
push
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
or
mov
lahf
jge
jo
push
gs
jbe
pop
mov
fsub
sub
test
sbb
inc
pop
sbbl
ljmp
cld
and
cwtl
push
repnz
xchg
mov
popf
or
push
cmp
push
or
loop
dec
outsl
roll
cwtl
or
sub
por
lahf
lret
xlat
arpl
enter
loopne
in
sbb
push
sub
int3
jge
mov
push
xchg
lds
sub
lock
and
jns
adc
push
xchg
xor
sbb
inc
lock
push
in
add
movsl
cmpsl
or
test
add
cltd
add
jmp
cmp
lret
xchg
dec
bound
adc
stc
dec
or
loope
jne
add
arpl
mov
jo,pn
dec
inc
pop
dec
fmull
xchg
int3
hlt
ret
bound
dec
dec
js
jp
or
sar
adc
fsubrl
xchg
negb
leave
adc
dec
or
clc
adc
cmp
cmp
cmp
pop
testb
or
dec
push
es
cld
jg
pushf
mov
pop
inc
add
int
stos
dec
jb
inc
cmp
mov
jnp
add
fs
mov
js
and
test
push
xacquire
inc
lea
adc
stos
subb
jb
cs
addr16
mov
inc
js
rcr
jecxz
bound
add
cmp
push
nop
fwait
jno
fisubl
cld
pop
dec
sbb
shrl
push
gs
ret
pop
pop
sub
lcall
loope
add
inc
fldt
out
sbb
rorb
pop
dec
pop
or
or
cmp
mov
mov
popf
enter
pop
lret
jnp
sub
cmp
adc
mov
mov
mov
inc
mov
cmpsb
nopl
lea
lret
sub
shll
das
enter
mov
pop
loopne
adc
dec
cmp
pop
pop
xchg
add
pop
sbb
jg
xchg
fldcw
lcall
sarb
scas
popa
xor
mov
xor
xor
bound
fistpll
mov
push
and
sub
divb
mov
test
daa
xor
jne
xor
sbbb
aaa
scas
leave
lods
fisubrl
push
push
into
push
fbstp
fcomp
mov
push
push
adc
test
xor
adc
mov
cwtl
cltd
add
jle
test
insb
mov
and
stc
sub
fmull
cmpsb
icebp
call
mov
cmp
sub
incb
add
icebp
fnstsw
xor
fsubs
inc
pop
push
repz
lock
mov
fmul
imul
lea
hlt
add
xor
fsubr
stos
test
std
mov
stos
sahf
sbb
loopne
test
xorl
jno
popf
repnz
enter
cs
je
roll
aaa
cwtl
and
push
and
sbb
lret
mov
lcall
push
mov
test
add
test
leave
nop
mov
std
xchg
call
insl
inc
jp
popa
loopne
cmp
cmp
fdivrl
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
sbb
jo
lahf
jge
jo
mov
mov
jl
mov
cmp
adc
cld
and
push
mov
cmp
daa
push
sbb
adc
inc
hlt
push
mov
pop
repz
mov
in
xor
jo
sbb
pusha
scas
push
jg
dec
jmp
xchg
jae
xchg
sub
cltd
cltd
and
clc
push
pop
ret
jo
jecxz
dec
loopne
add
add
and
sub
in
test
mov
and
call
cmp
adc
test
fcmovb
mov
lret
enter
xchg
xchg
ja
test
pop
push
clc
cmp
pusha
outsb
push
adc
xchg
mov
sti
jno
cs
stc
ret
pop
sbb
movsl
jle
out
fbld
shrb
adc
cmp
sub
or
sti
hlt
pop
jbe
mov
pop
out
loopne
out
insl
pop
shlb
ljmp
adc
hlt
and
loope
inc
add
cmc
and
fdiv
dec
push
mov
or
jnp
mov
leave
jno
cmp
aas
ficoms
sub
test
fistpl
mov
sarb
lods
mov
xor
fbstp
jmp
jl
dec
rorb
cmp
xor
mov
cmovno
stos
inc
xchg
push
mov
xchg
subb
or
cltd
mov
lock
popf
lods
sbb
push
inc
ja
lret
into
xchg
add
xor
lcall
mov
loopne
repnz
xchg
xor
test
fisubs
mov
inc
and
shl
xor
loope
int
push
or
push
xchg
or
mov
push
inc
or
xchg
dec
jmp
fldt
out
iret
cltd
lds
ss
xor
and
pop
enter
bswap
mov
xor
aaa
add
in
dec
pop
imul
test
push
jmp
aad
gs
shl
sarb
lret
mov
cltd
lcall
adc
leave
aad
aas
out
repnz
test
rcl
ret
out
push
pop
cmc
jne
adc
push
idivb
std
xchg
jge
mov
mov
sub
cmpsl
xor
mov
pop
iret
xchg
pop
push
insl
dec
pop
add
add
xchg
lret
in
push
mov
movntq
std
pop
rcll
xor
test
or
arpl
push
mov
mov
or
js
sbb
into
add
pop
fwait
sbb
sub
ds
xchg
xor
test
or
pop
inc
pushf
ret
or
std
fs
je
mov
aaa
dec
xchg
add
mov
dec
adc
enter
loope
and
xchg
je
inc
xchg
jge
jle
clc
inc
sti
shrl
scas
test
jp
in
data16
jno
insb
movsl
pop
or
ja
data16
outsb
ja
das
scas
mov
sbbb
and
sarb
sub
push
mov
mov
add
push
jecxz
repnz
fsubs
dec
mov
sahf
fisttps
roll
ds
jp
subl
das
adc
jae
test
mov
fdiv
xlat
xchg
orl
pop
in
xchg
pop
pushf
jb
add
hlt
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
add
xchg
jo
lahf
jge
jo
jge
sub
cmp
les
lcall
fs
jnp
add
cmc
es
hlt
mov
xlat
push
sbb
mov
mov
aaa
jne
mov
push
dec
incl
jl
mov
stc
inc
dec
push
xchg
pop
mov
dec
std
out
enter
mov
and
inc
push
mov
push
dec
jmp
xor
cmp
aaa
stos
sbb
adc
out
push
pop
repz
and
xchg
push
ret
push
xchg
cmpsb
lcall
mov
inc
pusha
jge
dec
sbbl
je
sbbl
and
cld
ror
in
xchg
or
pop
mov
cli
and
mov
pop
aad
and
mov
out
sub
xor
cwtl
cmp
push
jmp
fcomps
cli
scas
xor
mov
dec
pop
xchg
ljmp
sub
sbb
aas
jmp
outsl
es
adc
dec
push
ret
pop
pop
divl
push
repnz
ja
fsts
sbb
fwait
jecxz
dec
mov
cmp
js
dec
inc
dec
push
jg
push
push
cmpl
in
or
push
das
adc
cmpsl
lods
inc
arpl
xchg
dec
in
mov
data16
imul
cmc
push
ret
pop
enter
push
inc
dec
mov
xor
jmp
fisubs
xor
mov
sub
pop
mov
add
push
pop
add
in
dec
mov
push
push
push
subb
rclb
insb
scas
and
rcll
push
jnp
pop
repnz
das
hlt
js
jg
mov
das
xchg
lcall
notb
xchg
pop
xchg
dec
mov
xchg
sbb
push
sbb
jge
xor
push
popa
call
ja
push
test
repnz
call
loope
roll
xchg
jecxz
pop
enter
xor
movsl
sbb
mov
or
in
clc
mov
jae
pop
add
push
dec
push
jg,pt
and
and
mov
xor
jae
mov
int3
cld
decb
ds
sbb
and
jmp
mov
sbb
adc
fmulp
rorl
test
les
aad
ss
cmp
mov
ret
scas
in
or
fmuls
and
movsb
fldt
inc
imul
xchg
jae
int
roll
xor
sub
xchg
cli
test
call
lods
jns
adcb
adc
arpl
dec
add
jb
popf
cmp
pop
int
pushf
lret
push
ss
sbb
cmc
cmp
fs
das
push
pop
pop
cmp
cmc
mov
jmp
nop
loop
test
pop
iret
fstl
orl
mov
loop
mov
sbb
lds
in
add
jns
add
or
out
cmp
adc
mov
stos
adc
fwait
rol
int
push
push
pop
jg
mov
push
pop
leave
frstor
push
ds
scas
test
jge
or
add
push
xchg
and
cmp
daa
xor
mov
int3
dec
pop
adc
rorb
or
fdivr
into
andl
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
subl
jo
jge
jo
movsl
fdivl
dec
repz
adc
push
mov
pushl
outsl
lcall
adc
js
sub
mov
into
push
cmp
pop
xchg
push
pop
scas
es
push
mov
movsb
push
out
pusha
scas
out
and
and
add
sahf
rcr
adc
pop
lods
lock
pusha
jo
add
jbe
dec
and
das
enter
jmp
push
ret
call
movsb
test
clc
out
cmp
fdivrs
add
enter
dec
dec
test
lea
lds
adc
inc
mov
fldt
test
lcall
dec
fsubrl
jmp
in
mov
test
stc
xchg
mov
sti
xorb
cld
and
js
mov
or
xchg
xor
push
lret
testl
sub
adc
mov
adc
fbstp
mov
pop
sbbb
mov
mov
sbb
add
mov
xchg
push
inc
jo
or
inc
jno
loopne
push
sti
ror
fnsave
pop
mov
jo
sub
fisttpl
pop
jne
stc
xchg
pop
aad
rcll
jne
mov
aad
dec
rcl
loop
test
inc
xchg
paddusb
shrb
and
popf
pop
popa
dec
mov
cld
in
rcr
mov
inc
pushf
inc
mov
adc
mov
jmp
mov
xchg
mov
sub
sbb
pop
mov
dec
xchg
dec
inc
sbb
je
pop
call
pop
pop
scas
test
sbb
test
jns
ret
sub
sub
xor
call
repnz
addl
repnz
daa
mov
cmpsl
mov
xchg
adc
ficoml
add
xor
fidivs
jae
cs
sub
sub
and
ficoms
jb
fs
call
push
or
sarl
cmc
mov
es
xor
dec
aad
ja
mov
lds
xchg
shll
call
fadds
rcr
mov
xchg
test
or
testl
es
dec
cmp
fists
sbb
or
or
sub
adc
fcompl
sub
fcomi
jo
mov
out
test
jns
adc
cmp
sti
mov
cltd
nopl
clc
lahf
push
std
ret
cmp
rcrl
lods
ret
mov
cmc
fdivl
add
and
mov
lea
and
test
addr16
stos
mov
outsb
pop
in
mov
in
in
movsb
dec
mov
ss
xchg
lods
lahf
or
mov
dec
dec
or
lods
test
mov
lods
or
pop
xchg
pop
xchg
inc
xchg
add
dec
imul
icebp
push
int
add
fisubrl
and
jbe
enter
lock
jge
in
mov
into
jne
sbb
dec
fisttps
mov
lret
cmp
sub
popa
or
cmpb
or
mov
xchg
push
adc
rcrb
push
sbb
out
nop
mov
add
mov
test
jnp
and
ret
lret
data16
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
lds
nop
stos
popf
jo
lahf
jge
jo
js
rcrb
iret
or
aam
jle
dec
test
stos
loop
push
xchg
stos
mov
iret
xchg
popf
sbb
enter
xchg
mov
movsb
subb
mov
incl
mov
outsb
mov
inc
leave
adcl
es
cmp
cmpsb
mov
pop
jp
add
jl,pn
js
fstpt
sub
movswl
mov
sahf
cmp
idivb
sub
mov
imul
xor
pop
fs
xchg
cmp
test
test
or
nop
mov
jbe
jp
mov
mov
enter
mov
lock
std
cwtl
loopne
test
jb
pop
mov
rcll
sbb
mov
stos
lods
push
xor
cltd
jne
add
cld
adc
cmpsl
push
inc
std
adc
dec
add
scas
fcoml
dec
xor
hlt
mov
pop
es
lea
fsubp
mov
lds
jle
xor
loop
cmc
sub
movsb
ret
fnsave
mov
leave
push
or
cli
xor
fisttpl
test
cwtl
loopne
repz
xor
mov
call
loopne
in
int
pop
dec
les
sbb
ret
or
xor
in
fidivs
inc
inc
roll
negl
jge
or
fld
pop
mov
movsb
mov
leave
mov
imul
in
cs
xor
mov
cld
sbb
je
lods
dec
movsb
loop
sbb
cmp
push
fwait
xchg
adc
insb
and
cli
movsl
aaa
ljmp
or
pop
scas
jns
xlat
mov
jne
sbb
and
jns
jae
lods
cli
sub
es
adc
sarl
loope
pop
movsb
mov
shll
icebp
sbb
iret
mov
cld
cmp
jecxz
dec
mov
sub
fsubl
scas
jnp
addb
sbb
js
add
adc
aam
push
push
loop
sti
cmp
test
cmovge
adc
and
lret
mov
enter
xor
lock
pop
jne
pop
cwtl
and
push
pop
xchg
sbb
cmp
mov
lea
mov
xor
cmp
fsubrl
das
xchg
mov
cmp
jg
imul
call
mov
pushf
adc
sbb
ds
test
out
rcrb
stos
cmp
pop
jo
sub
add
xchg
and
mov
outsb
mov
lods
dec
ljmp
mov
rclb
push
lcall
cmp
pop
mov
mov
idivl
repnz
mov
jo
dec
push
sub
and
imul
xchg
sbb
dec
imul
iret
push
sub
pextrw
dec
cmp
inc
outsl
pop
and
xor
das
sbb
add
icebp
xbegin
stos
adc
scas
add
out
nop
cmp
jle
inc
mov
and
mov
mov
push
faddl
mov
push
xor
push
aam
cmc
push
ficomps
mov
les
ja
jge
cld
or
or
mov
movsl
stos
mov
push
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
std
cmp
cltd
jo
lahf
jge
jo
jmp
repnz
leave
cmpl
mov
mov
dec
scas
sub
pop
mov
or
jno
dec
push
imul
push
xor
mov
fsubs
and
ja
lods
jp
mov
mov
or
adc
in
push
pop
mov
cmpsb
xchg
popa
imul
cmp
adc
add
dec
mov
push
repz
jge
dec
xchg
and
or
fnstcw
aas
in
adc
adc
shll
dec
ljmp
loope
or
test
cmp
test
jb
fstl
cmp
lea
sub
imul
push
adc
mov
push
add
lret
sub
sub
cmp
mov
shrl
jae
call
enter
push
ficoml
push
fcomp
add
dec
adc
sbb
push
cmp
and
cmp
rcr
xor
lock
nop
jg
mov
ss
enter
cmpl
scas
xor
or
mov
adc
inc
aaa
nop
adc
call
adc
gs
pop
xor
ret
pop
xor
pop
imul
sub
add
mov
dec
or
dec
dec
sbb
das
lods
mov
jbe,pt
push
mov
adc
mov
pop
or
jl
mov
mov
push
pop
or
sahf
inc
test
add
in
mov
pusha
es
mov
cli
in
jb
inc
pop
or
mov
lahf
fs
adc
gs
mov
mov
adc
pop
stc
rol
dec
xchg
push
cwtl
mov
push
xor
mov
xchg
push
push
jle
cmp
jp
sbb
jns
loop
inc
xorl
dec
lcall
ds
lock
xor
imul
mov
aam
xchg
mov
lcall
stos
mulb
or
movsb
out
lods
vaddpd
cmc
ljmp
repnz
stos
bound
jbe
push
stos
lahf
loop
mov
roll
flds
rcpps
xchg
lahf
fnsave
movsb
mov
dec
arpl
lods
xor
cwtl
lods
clc
cld
les
push
in
out
dec
out
sub
cmp
jg
push
inc
xchg
mov
xchg
sbb
cmp
jl
fdivs
decl
int
push
push
add
rclb
jbe
xchg
adc
insb
insb
jp
mov
adc
lret
lcall
cmpsl
jae
jno
addr16
sbb
dec
out
add
lcall
sarl
or
inc
sbb
pop
aam
andb
xor
inc
mov
cmp
data16
lods
pop
bound
sub
cs
in
shrb
cltd
fnstcw
movb
hlt
push
push
mov
mov
es
lahf
scas
add
ja
rcl
out
dec
pop
leave
insb
fwait
bound
insb
nop
inc
cmpsl
dec
xor
mov
sbb
gs
cmp
stc
adc
dec
mov
pop
xchg
movsl
sub
cmp
mov
lret
into
stos
sbb
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
in
push
jg
jo
sbb
sub
call
fwait
jp
lods
data16
rolw
mov
sbb
xor
jge
cmp
les
stos
xor
pop
push
loop
dec
mulb
repnz
xor
adc
push
push
xor
lea
out
cld
pop
int3
add
mov
dec
das
insl
pushf
jecxz
cs
ljmp
cmp
add
icebp
dec
cmpsb
aam
ljmp
cmpl
xlat
inc
pop
sub
ret
or
pop
daa
dec
push
popf
add
jecxz,pn
jb
pop
fcomi
fwait
movsl
xorb
adc
lods
push
data16
push
call
mov
xor
leave
ret
or
dec
dec
dec
inc
pop
std
lock
ja
shll
push
xchg
daa
dec
arpl
mov
sbb
call
inc
popf
pop
test
fldl
shll
inc
hlt
std
lods
add
cmp
cwtl
jno
mov
test
dec
cwtl
push
sahf
adc
or
es
imul
mov
aad
mov
divl
xchg
mov
push
jb
pop
out
mov
sub
fimuls
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
xchg
aas
xor
jo
jg
jo
push
add
sbb
ljmp
mov
arpl
and
movsl
sbb
cld
sub
adcb
mov
sbb
insb
mov
adc
add
mov
dec
pop
or
sbb
push
js
mov
arpl
out
sub
push
sub
js
xor
ja
out
mov
sbb
and
mov
add
and
xchg
es
arpl
int3
ljmp
xchg
inc
push
test
add
cld
push
xchg
push
out
in
cmp
cmp
jo
dec
scas
jg
pushf
push
test
das
iret
xchg
adc
dec
xor
push
cmp
fstpt
icebp
fsubrp
shlb
call
fiadds
jae
out
and
std
sub
pushf
cmpsb
jae
mov
cmp
jbe
cmp
xchg
bound
ja
cmp
push
dec
jb
add
mov
out
inc
mov
xchg
nop
insl
dec
fwait
clc
cld
xor
bound
mov
jecxz
jmp
popf
outsl
or
cmp
push
movsb
mov
xchg
dec
or
movl
and
lea
mov
jmp
rorl
sbb
jo
mov
jo
ret
xor
push
jns
fildll
inc
cltd
pop
imul
jo
mov
xchg
inc
sahf
push
cmp
add
cmp
fildll
push
jg
xchg
out
fcmovu
pushw
scas
nop
icebp
sbb
cmpsb
sbb
popa
cmp
jae
mov
mov
mov
adc
push
push
ljmp
ret
out
rorb
dec
fwait
mov
cmp
jecxz
enter
shl
decl
ret
ss
fists
inc
js
ss
cmpsb
mov
enter
cmpl
jmp
and
pop
orb
dec
jg
mov
lret
xchg
out
mov
test
push
lret
mov
iret
js
mull
dec
dec
pop
mov
es
gs
sbb
fstpl
mov
aam
aam
sbb
sti
sbb
jp
xchg
or
sub
sbb
scas
mov
xor
mov
inc
das
adcl
cmc
mov
xchg
clc
mov
cmp
mov
push
iret
fwait
xor
mov
jge
or
add
fildl
shr
or
dec
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
mov
mov
jo
aaa
xchg
or
cmc
bound
jne
xchg
mov
pop
add
in
into
sarl
test
movsl
int3
or
movsb
or
cmp
push
lock
loopne
adc
outsl
mov
xlat
adc
je
mov
dec
xchg
or
jmp
sub
rcll
pop
inc
bound
pop
dec
inc
push
aas
ja
lods
xchg
sbb
and
movsb
pushf
ljmp
sarl
mov
popf
jo
mov
int3
imul
lods
dec
and
cmp
lcall
pop
push
jb
xor
insb
lret
push
call
ss
out
and
mov
out
mov
rorl
nop
ret
xchg
pop
xor
mov
testl
das
call
fs
lahf
and
mov
xor
repnz
jl
das
jo
mov
inc
les
pop
jae
or
push
dec
pop
and
add
push
lret
andb
decb
pop
jecxz
mov
ficompl
jbe
test
inc
cmp
aaa
sub
xchg
push
push
inc
out
hlt
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
imul
and
ret
jg
jo
ret
or
out
dec
leave
movsl
cld
das
hlt
pop
push
fwait
cld
daa
dec
sub
das
mov
mov
lock
sti
mov
insl
jns
cltd
and
jl,pn
push
xor
mov
dec
jecxz
cmp
jno
and
subl
and
add
add
push
lea
add
test
dec
cltd
mov
mov
ljmp
or
jle
dec
mov
adc
call
sbb
dec
mov
mov
dec
inc
andl
loopne
dec
fs
or
call
dec
fcomps
xchg
lcall
mov
lea
mov
mov
sbb
dec
pop
add
push
aam
outsl
mov
cmc
cmpsb
mov
or
mov
jbe
jge
in
and
outsb
dec
in
push
addr16
cmp
pop
mov
fildl
stos
fwait
mov
adc
xchg
push
inc
push
loop
jns
lods
testl
add
mov
clc
push
iret
jbe
mov
xor
mov
mov
test
xchg
pop
pop
cmp
test
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
adc
jo
ret
jg
jo
adc
pop
gs
push
mov
pop
xchg
add
cmp
cmp
into
fldl
jnp
iret
sbbb
inc
out
push
adc
mov
rcrl
and
rcll
ret
jbe
je
jecxz
fiadds
xor
icebp
scas
insl
jb
push
gs
shll
xchg
das
push
ljmp
and
xor
push
into
test
pop
dec
aam
arpl
cltd
cmp
js
push
rcrb
lds
fbld
mov
out
sbb
ja
cmpsb
cmp
xchg
jne
sbb
les
or
xchg
subb
stos
insb
xorl
ret
add
push
cmp
outsb
insb
mov
dec
into
adc
dec
and
int3
push
lds
out
movsl
xchg
daa
outsb
mov
push
xchg
addb
inc
sbb
and
iret
stos
mov
shll
mov
lods
push
dec
repnz
dec
dec
jge
rcll
jmp
je
stos
push
xchg
add
out
jne
adc
dec
scas
jmp
lds
xchg
stos
dec
mov
mov
pop
and
cwtl
jmp
sub
lds
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
adc
jo
ret
jg
jo
adc
ds
adc
push
inc
insb
sbb
pop
insl
xchg
dec
fiaddl
test
pop
insb
cmp
cld
xor
or
cmp
scas
jae
movsb
inc
int
push
push
mov
push
push
mov
movsb
outsb
adc
insl
mov
leave
sub
push
xor
jb
popa
mov
jo
add
inc
in
cld
inc
and
jbe
mov
mov
pop
ljmp
add
data16
fwait
mov
lds
sub
push
mov
lret
sub
ret
mov
cmp
push
pop
scas
mov
mov
pop
idivl
iret
sub
mov
call
sti
xchg
shrb
das
xchg
cmp
push
xchg
cmp
aam
inc
mov
imul
cmc
jae
in
rcrl
xchg
out
roll
xlat
rcrb
push
xchg
repnz
int
pop
push
aam
push
std
test
das
outsl
roll
jge
and
dec
rcrl
stos
shr
or
mov
xchg
dec
loop
test
stos
jns
lret
jle
lods
mov
mov
lock
ret
push
sbb
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
or
jo
jg
jo
pop
xor
in
jp
mov
shr
and
mov
scas
sub
mov
push
pop
add
inc
sub
pop
enter
push
pushf
jecxz
outsb
push
js
add
push
push
push
in
movsb
dec
mov
jg
outsl
xchg
jg
ljmp
add
scas
xchg
mov
ljmp
xchg
jle
mov
adc
and
add
mov
imul
cld
add
aam
inc
inc
popl
sub
add
mov
fmuls
mov
push
cli
in
fisubrl
inc
add
aam
dec
ss
mov
xchg
inc
add
mov
aad
push
adc
movsb
lcall
jecxz
pop
test
and
in
aaa
mov
and
sub
sub
icebp
aaa
dec
push
les
loope
push
mov
mov
mov
sub
push
xlat
mov
jno
shrl
gs
scas
xor
adc
cld
dec
cmc
imul
in
adc
in
cmp
lret
jno
sti
dec
rclb
cmp
fcoml
in
into
arpl
sub
mov
aaa
inc
sub
mov
sub
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
arpl
jo
ret
jg
jo
mov
cmp
int
push
imul
pop
addr16
jbe
loop
push
add
pop
repnz
subb
stos
fcomps
push
pop
insl
mov
clc
sub
jns
bound
mov
cli
sbbb
iret
fcompl
movsb
xor
arpl
add
je
fidivrs
jno
jp
push
fadds
les
cmp
cmp
push
test
repnz
icebp
std
enter
inc
adc
jne
dec
pop
cmpsl
push
cmp
sub
mov
adc
arpl
test
add
add
mov
dec
lcall
in
loop
jg
mov
repnz
xor
fldl
sbb
dec
pop
outsl
sbb
jne
push
jae
sub
cltd
out
sbb
ds
inc
insb
or
divb
inc
xchg
jns
mov
adc
stos
leave
loop
jnp
mov
call
dec
inc
inc
in
jmp
enter
xor
or
lods
cmp
dec
out
sti
add
incb
sbb
push
and
es
repnz
cmpsl
js
cmp
add
add
add
add
rep
popa
fdivrs
xchg
test
addr16
jo
jg
jo
mov
add
or
push
lods
mov
punpcklbw
test
scas
aaa
sbb
xchg
frstor
addl
xor
push
xchg
sbb
jae
adc
cld
ds
mov
test
gs
int3
loopne
fs
inc
and
and
nop
icebp
dec
jl
into
jae
sbb
jno
shl
insl
adc
mov
xor
clc
push
sahf
mov
xor
or
lret
jbe
push
leave
cmp
lcall
jns
pop
inc
out
push
mov
mov
cwtl
lret
inc
out
push
xchg
pop
mov
es
push
dec
mov
insl
add
test
mov
xlat
xchg
cmpsb
hlt
arpl
test
test
scas
push
jl
aas
cmp
push
outsl
push
popa
sub
sbb
in
mov
enter
adc
xor
ret
cltd
cmc
xchg
or
iret
subb
outsb
push
or
cmp
ljmp
jbe
inc
xlat
pop
int3
xchg
push
jecxz
jl
ja
mov
xchg
stos
arpl
mov
insl
out
sub
mov
xor
mov
push
mov
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
sarb
repnz
jo
ret
jg
jo
vpmuludq
jecxz
xor
ret
mov
sti
inc
push
popa
pop
jg
mov
pusha
out
pop
push
push
and
mov
xlat
clc
mov
rcl
and
push
lea
leave
mov
or
outsb
dec
xlat
fxtract
sbb
add
in
incb
icebp
ljmp
jmp
inc
cmc
data16
or
repz
cld
aaa
mov
cltd
leave
pop
mov
pop
add
mov
mov
jae
in
xchg
jbe
mov
lcall
inc
xor
jl
outsl
pop
roll
xor
xchg
cmp
mov
cld
stos
push
jns
scas
add
mov
stos
test
jno
jns
cmp
fpatan
xchg
inc
inc
pop
hlt
mov
dec
dec
repz
xor
fcoms
mov
stc
and
xchg
sub
or
outsb
jecxz
jnp
ret
rorl
or
in
push
mov
or
mov
pop
mov
pavgb
addr16
leave
cmp
rorb
adc
mov
xor
add
lret
dec
sub
call
jge
push
and
mov
mov
push
pop
xor
mov
inc
adc
and
clc
jmp
inc
gs
icebp
imul
insl
mov
mov
mov
jo
jg
jo
mov
add
in
cs
cld
or
lds
push
insl
push
rorb
sti
dec
pushf
mov
mov
mov
add
xchg
and
add
out
mov
gs
sbb
push
jmp
outsb
adc
sub
enter
cmp
cwtl
push
mov
shrb
das
sub
movsb
adc
imul
out
cmpsb
jmp
dec
pop
mov
div
dec
mov
popf
out
test
roll
clc
imul
js
fwait
outsb
sub
cmpsl
pop
aaa
cmp
mov
out
xor
mov
jp
cld
pop
call
arpl
push
adc
pusha
mov
push
dec
jbe
sbb
ficoms
lea
jecxz
sub
push
ds
xchg
mov
sar
mov
mov
mov
loop
out
cmp
mov
clc
sub
cmc
add
fisubrl
out
shr
or
out
daa
xchg
or
push
daa
xchg
xlat
imulb
ljmp
cli
pop
fisttpll
fiaddl
push
in
xor
add
divb
push
nop
dec
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
sbb
jo
ret
jg
jo
inc
mov
jbe
adc
arpl
ss
cmp
xchg
xor
rclb
push
pop
cmp
adc
rcr
je
sahf
jg
in
lret
or
xchg
gs
sti
test
cli
xor
insl
rolb
clc
sub
jmp
inc
add
lods
in
xor
push
movsl
jmp
cmpsb
mov
or
lock
addr16
push
insl
adc
xchg
mov
cld
adc
add
pushf
sti
push
jl
jo
int3
mov
test
adc
dec
cmc
xchg
test
ljmp
insl
int3
sbb
dec
fisubrs
pop
xor
arpl
and
adc
out
cmc
int
cs
pushf
push
ds
repnz
pmulhw
jae
lds
ds
sbb
movsb
mov
enter
jnp
mov
repz
stos
out
aas
push
pop
test
dec
pop
jp
pop
pop
adc
and
and
dec
xor
sbb
or
fwait
mov
xchg
pop
pop
test
push
cmp
mov
loop
jae
sbb
dec
xchg
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
imul
jo
mov
adc
jo
mov
jl
lds
mov
cmp
or
pop
aam
mov
sub
or
ss
mov
adc
outsl
cli
or
inc
pop
int3
add
jge
mov
and
pop
test
fidivrl
popf
dec
jmp
mov
jge
xchg
jmp
pusha
decl
push
add
test
xchg
out
pop
aas
push
sbb
mov
push
cmpsb
loope
cmpsl
jne
outsl
sub
mov
xor
sbb
mov
stc
add
je
lcall
xchg
mov
sbb
or
pop
cmpsb
fst
lahf
nop
movsb
push
sarb
push
test
outsl
cs
idivb
js
mov
adc
mov
call
sahf
movsb
pop
push
jbe
and
mov
dec
jns
push
rcr
xor
aas
cmp
jle
xor
sbb
jb
sub
pop
aam
aad
dec
pop
mov
xor
aad
jnp
stos
in
dec
lods
dec
dec
imul
lock
mov
enter
inc
xor
push
fisubl
jb
repnz
mov
dec
jnp
xor
mov
into
fistpl
xor
mov
nop
call
aas
sbb
jp
frstor
je
addr16
sbb
xor
jns
and
lock
arpl
cwtl
sbb
mov
mov
repnz
mov
lret
sbb
out
xlat
sbb
inc
icebp
sti
pop
and
cmc
in
push
movb
jns
lock
cmc
rol
out
dec
sahf
in
and
pop
rcl
in
push
idivb
test
cmp
and
pop
pop
push
push
jmp
mov
nop
mov
clc
jp
pop
dec
and
cwtl
pusha
inc
cmpsb
sub
mov
sarl
mov
imul
pop
mov
out
es
jbe
in
sub
int
fstpl
xor
pop
mov
adc
popa
lgs
pop
and
addr16
jle
fidivl
pusha
clc
or
mov
ljmp
in
push
mov
sub
lret
jg
adc
dec
loope
arpl
fiadds
adc
pop
pop
stos
jae
ljmp
movsb
pop
rorb
cltd
or
fldl
lcall
fistps
xor
adc
inc
dec
hlt
andps
fs
popf
clc
inc
mov
pop
sub
pop
fimull
int
das
cmp
xor
pop
jle
nop
bt
sub
ja
fidivrl
imul
dec
pop
xor
adc
mov
es
movsl
in
test
mov
sub
jne
cmp
lcall
add
mov
sahf
insb
mov
fidivrs
ret
pop
nop
mov
add
aad
mov
mov
cmp
lds
jo
lret
adc
sbb
xor
rol
adc
data16
add
mov
lock
iret
idivb
mov
inc
bound
fst
jno
sbb
clc
xchg
or
movsb
cltd
xchg
ret
mov
push
and
test
cmp
ss
stc
xor
and
mov
sbb
jmp
mov
cli
xor
testb
mov
jo
mov
inc
cmp
or
cld
mov
xlat
pop
mov
jb
fistpll
mov
into
add
adc
pop
lret
fistpl
pop
ds
jle
icebp
cmp
mov
call
mov
jo
mov
mov
pop
std
mov
test
jo
adc
mov
and
xor
sub
lret
mov
dec
dec
inc
imul
add
out
lcall
dec
xor
call
inc
push
sbb
jnp,pt
pop
xor
push
push
sub
lea
mov
enter
and
or
mov
ss
xchg
pop
dec
ret
stos
lock
xchg
inc
orb
js
fistps
cmp
test
or
and
cmp
mov
loopne
push
imul
inc
jbe
mov
jne
xchg
mov
sub
lods
imul
divl
dec
lcall
and
call
cs
pop
sbbb
ret
jns
pop
adc
data16
xchg
les
ret
fcompl
or
addl
jecxz
fstps
adc
mov
mov
inc
int3
dec
mov
iret
shlb
push
add
lea
jp
jno
or
out
aas
push
loop
outsb
jbe
pop
adcl
cmpsb
ja
cmpsl
pop
pop
pop
mov
inc
cmp
imulb
xchg
stc
xchg
fcompp
push
jg
adc
jnp
mov
dec
in
inc
dec
insl
mov
std
in
gs
mov
pop
orb
int
jp
xchg
fndisi(8087
roll
add
and
or
gs
lret
loopne
xchg
pop
test
sub
pop
add
jno
out
or
and
push
xchg
aad
xchg
sbb
bound
mov
sbb
dec
add
enter
shrl
mov
stc
loope
outsl
sar
out
jnp
test
cld
js
jp
mov
and
je
or
jg
push
cwtl
mov
ljmp
testl
xlat
inc
sub
push
into
icebp
fmul
stos
pop
outsl
xchg
add
movsb
call
dec
mov
movsl
and
ss
outsl
inc
outsb
push
sbbb
adc
aam
or
fnstsw
mov
mov
pop
stos
call
mov
sbb
inc
mov
clc
arpl
lods
sbb
mov
andl
fcomi
cmp
push
or
ss
cld
js
or
cld
sar
xor
loope
cli
or
fsubs
or
lret
pushf
cvtsd2si
cld
ja
mov
imul
enter
or
jle
dec
adc
test
out
jno
sbb
lock
mov
out
xchg
xor
sbb
test
push
or
inc
dec
adc
fdiv
clc
je
insl
xlat
es
into
movsb
inc
roll
arpl
and
ret
lock
or
or
xor
jb
sbb
pop
xor
pop
rclb
mov
cli
mov
xchg
xor
sub
mov
dec
ret
add
stos
pop
mov
pusha
clc
jae
daa
outsb
cli
loope,pt
testb
sub
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
cmp
mov
mov
push
repz
sbb
cwtl
cmp
pop
pusha
stos
mov
pop
pop
mov
push
jmp
insb
push
and
jb
mov
subl
inc
test
in
cmp
sbb
ss
xlat
add
xor
push
inc
dec
sub
lds
rcl
adc
lods
ja
mov
and
pop
jg
mov
mov
pop
dec
in
pop
pop
cli
sti
or
add
sub
out
jnp
mov
sub
xor
pop
rcrl
and
in
xchg
adc
je
and
cli
ds
jnp
out
orl
fisttpl
xorl
es
adc
movsb
mov
and
pop
and
ja
js
inc
pop
cmp
jle
cld
xor
cltd
mov
loop
push
mov
sbb
pop
shr
sub
cmp
mov
jmp
stos
pop
xchg
pop
outsl
jae
rcrl
repz
add
mov
aad
sbb
les
call
in
adc
sbb
imul
in
push
cltd
stc
popw
xor
xlat
in
lods
idivl
sbb
cmp
push
and
inc
cmp
cltd
cltd
xchg
icebp
hlt
mov
jae
jecxz
add
or
sbb
mov
mov
dec
pop
fimull
or
test
imul
jl
sub
mov
dec
adc
cmp
iret
mov
loope,pt
scas
sub
outsb
and
cmp
pop
push
and
add
sub
stos
mov
sub
iret
sbb
sub
dec
jnp
faddl
negb
inc
lock
mov
jmp
std
xor
add
cmpsb
mov
je
out
leave
xor
pop
mov
aam
jp
cmp
mov
sahf
mov
and
mov
mov
ret
push
call
jb
sbb
and
repz
movsl
outsb
rorl
rorl
adc
xchg
cmc
add
add
mov
inc
inc
imul
and
jns
dec
pop
xorb
adc
pop
lock
adc
or
jg
je
in
pop
sub
mov
out
mov
jnp
shlb
mov
lods
aaa
sub
sub
jns
mov
or
cmpsb
cs
fmulp
stc
xchg
aam
cmpsb
std
filds
daa
movsl
sub
dec
xchg
aas
outsb
dec
sahf
imul
std
and
ljmp
movsl
xchg
and
movsb
in
pushf
stc
out
sbb
das
aaa
test
xor
mov
es
pop
lahf
sbb
add
pop
pusha
sarb
loope
cmp
dec
push
in
add
push
mov
es
or
mov
sub
insl
mov
cmc
cmp
pop
inc
push
repz
xor
adc
les
adc
mov
cmp
push
adc
aaa
inc
mov
lahf
mov
pusha
aam
mov
cmp
add
sbb
fcoml
out
push
inc
fcomi
gs
ret
outsb
mov
dec
mov
adc
pop
jecxz
mov
fiadds
mov
sub
and
lods
mov
jb
push
adc
inc
inc
aas
jb
je
push
cmpsb
into
xor
aam
jg
cmp
scas
outsb
or
scas
jmp
in
push
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
call
fsubs
push
pop
fcoml
aas
cwtl
adc
push
ljmp
inc
adc
jmp
insb
scas
popa
jp
sbb
dec
inc
add
or
add
xchg
or
adc
stos
adc
mov
repz
out
add
jp
jl
jl
cmpb
xchg
mov
aam
mov
xchg
jbe
push
mov
dec
push
push
lahf
cmp
mov
pop
cmp
popa
adc
inc
inc
push
sub
cmc
mov
dec
pop
mov
push
sahf
xchg
aaa
mov
xchg
cld
push
sti
mov
inc
bound
icebp
pop
dec
insl
in
pop
lcall
push
in
xor
cltd
mov
sub
sbb
pop
dec
out
mov
orb
mov
and
sub
out
jb
xchg
rcrl
aaa
repz
mov
ja
lods
and
repnz
jmp
inc
stc
xchg
loop
dec
jmp
cmp
jne
or
inc
cmp
sbb
cmpsb
xchg
gs
sarl
add
xor
ret
imul
adc
test
ja
cmpsl
scas
push
loope
mov
sub
xor
out
data16
pop
inc
jge
arpl
xchg
movsb
sbb
or
lret
shr
and
aas
pop
push
fwait
scas
xchg
xor
arpl
js
xchg
jae
xlat
cmp
in
mov
repnz
mov
cs
adc
dec
stc
adc
jmp
ret
pop
inc
xchg
xchg
xor
adc
sub
push
pop
pop
popa
jp
aam
pop
clc
xchg
dec
incl
cld
or
test
sahf
dec
cld
xor
or
sbb
jne
xchg
push
or
add
test
aam
cmp
rep
xchg
xchg
pop
sarb
idivl
inc
xchg
hlt
pop
ss
cmc
ret
fbld
jg
jmp
ret
mov
mov
mov
mov
faddl
arpl
nop
add
aas
arpl
add
addr16
adc
jg
dec
xchg
push
rolb
icebp
sahf
jns
adc
dec
xor
test
xchg
cmc
clc
int3
fs
pop
shrl
shl
adc
pop
shr
mov
icebp
jmp
mov
jle
push
cmp
addr16
mov
push
daa
lods
enter
cmp
gs
cmpsb
adc
xor
and
inc
dec
sub
ret
loop
sub
mov
aas
adc
xchg
incb
fwait
sbb
mov
out
rcrb
sbb
adc
push
and
in
pusha
fsubrp
insl
adc
inc
decb
js
mov
fwait
pop
xchg
aad
int
jo
and
lea
lcall
mov
lods
je
sbb
int3
sub
mov
jg
inc
jmp
jp
pop
mov
cli
jmp
leave
sbb
aam
sub
shl
and
xchg
dec
pusha
std
jbe
inc
jg
pop
ret
rcrb
pop
pop
mov
call
lds
push
movsl
mov
dec
leave
call
fdivs
cwtl
or
xchg
ss
push
mov
xchg
test
cmpsb
mov
ret
sti
inc
cmp
dec
mov
mov
jle
mov
sbb
push
mov
sbb
mov
add
jmp
outsl
mov
or
imul
data16
insl
rorb
jge
jo
push
pop
out
in
aam
mov
xchg
mov
mov
or
cmpb
pop
scas
and
jge
insl
dec
rclb
jae
cmp
xor
add
popf
pop
sub
xchg
and
pop
mov
or
sub
ja
lret
sbb
ret
xchg
insl
pop
adc
call
mov
cmp
sbb
scas
push
pop
sbb
dec
int
cmp
push
fdivrs
dec
mov
cmpsb
test
scas
je
std
xchg
andl
leave
adc
pextrw
push
add
sub
loope
jnp
mov
fnop
je
xchg
push
sbb
lods
aaa
push
cmpsl
dec
cld
ss
stos
xchg
inc
nop
gs
xchg
inc
stc
and
mov
xor
cmp
mov
sbb
jl
retw
fimull
clc
mov
jg
mov
popf
sub
sarl
jg
adc
jge
jns
ss
and
jl
lret
fwait
aaa
pop
jle
incl
fwait
mov
and
fisubrs
out
lcall
pop
in
inc
ret
arpl
dec
inc
xchg
pusha
ror
repnz
fidivrl
or
clc
jae
andb
jl
push
lret
mov
fiaddl
xchg
inc
and
insb
sbbl
jb
gs
pushf
and
ljmp
jecxz
dec
inc
mov
popf
lahf
xchg
insb
dec
push
lahf
jmp
mov
leave
scas
and
xor
or
mov
xor
adc
cmp
in
jno
add
call
mov
sahf
fmulp
outsb
aam
adc
mov
dec
nop
inc
jb
cli
mov
dec
push
or
test
les
mov
into
int
mov
jl
pop
xchg
sub
push
insb
outsl
mov
adc
sub
hlt
xlat
fwait
mov
cmp
sbb
add
pop
lods
out
jns
pop
inc
jge
into
fildl
xor
les
cltd
aaa
jo
push
jo
test
mov
hlt
push
mov
xlat
arpl
push
sti
aas
mov
inc
lds
test
ret
or
fbld
rcrl
xor
ss
ds
inc
je
cmp
adc
adc
push
iret
cmp
or
or
sbb
arpl
mov
lret
outsl
lea
sbb
mov
push
xor
stos
sub
xchg
rcll
ljmp
push
jbe
xchg
pop
int
mov
cmp
and
add
xchg
xlat
es
out
in
pop
les
add
cmp
pop
data16
sbb
out
inc
xchg
sbb
mov
dec
nop
lcall
push
lods
outsl
cmp
mov
out
push
push
dec
push
pop
mov
or
sub
popf
xchg
jns
push
add
inc
cmp
push
fs
int3
xchg
mov
cli
test
test
test
sbb
sbb
xor
xchg
int3
adc
xchg
pusha
add
xchg
add
cwtl
jae
cld
pop
xchg
xor
xchg
js
orl
dec
sahf
push
inc
or
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
cltd
ja
inc
jo
pop
jge
jo
in
sub
sub
mov
add
mov
inc
int
and
mov
sbb
clc
xor
and
ret
push
stc
mov
pop
jp
xor
lods
sbb
jp
xchg
mov
faddl
jge
or
in
data16
icebp
out
inc
dec
push
xor
mov
dec
pop
or
rcrb
int
cld
pusha
mov
stos
pop
ljmp
sub
jp
out
inc
push
pushf
or
mov
xor
mov
ja
movsl
test
fwait
mov
add
outsl
enter
pushf
and
mov
aad
dec
popf
mov
push
jp
stos
add
and
xchg
xor
or
icebp
je
cmp
and
loopne
data16
subl
jae
mov
out
jns
out
and
les
es
or
mov
jae
cmpsb
vandnpd
xchg
adc
sahf
xchg
mov
fldlg2
xchg
cmp
mov
sub
movsl
sub
inc
push
jmp
jg
fs
push
icebp
inc
and
aaa
movsl
jg
loop
mov
in
jg
mov
cltd
popf
fisubrl
mov
push
jnp
repnz
into
xchg
movlps
pop
pop
sub
mov
cltd
sub
xchg
or
xor
scas
ss
mov
fsubrs
fisubl
inc
sbb
cli
xchg
das
ja
lcall
mov
or
jecxz
xchg
jp
cwtl
loope
cmp
andb
mov
mov
icebp
sahf
icebp
jo,pn
jnp
ja
mov
les
pop
call
or
shll
hlt
js
cmp
out
push
mov
icebp
jne
jmp
aam
xchg
push
jns
sub
xlat
test
push
out
add
mov
leave
repz
test
inc
mov
lods
stos
scas
mov
cmp
mov
or
outsl
mov
sub
mov
pop
cmpsb
push
fmuls
lret
pop
das
pusha
sbb
in
push
in
movsb
jno
test
inc
fstpt
int3
sbb
fildll
cli
inc
jo
mov
ja
mov
inc
cs
push
test
push
fstpl
push
dec
mov
adc
cmp
hlt
add
mov
clc
es
daa
push
insl
push
adc
adc
pop
popl
mov
mov
adc
mov
test
adc
add
sub
sbb
inc
lods
cmpsl
in
pop
sbb
lds
fcmovnb
test
sub
adc
pop
sbb
cld
xor
add
mov
fcoms
std
fs
dec
sbb
stos
rcr
xchg
or
pop
data16
ds
inc
and
xor
fcmovnb
out
xchg
adcb
or
xchg
fs
jae
mov
outsl
xchg
sbb
ss
inc
push
sbb
cltd
es
jg
mov
mov
mov
aaa
pushf
addb
sahf
mov
or
and
fldt
pop
pop
lods
jne
sub
lcall
push
xchg
ret
jecxz
add
push
cmp
mov
jae
mov
insl
cltd
add
pop
mov
sub
movsl
jmp
mov
mov
pop
test
int
ficompl
rol
adc
xchg
adc
xchg
sbb
adc
incl
jne
sbb
in
add
dec
sub
mov
cmp
mov
and
fwait
jno
mov
dec
and
loope
push
ss
pusha
fcompl
add
adc
mov
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
mov
das
add
xchg
or
dec
pop
xchg
leave
not
or
pop
jae
dec
out
pushf
or
hlt
xor
outsb
sub
fwait
loopne
fcom
lods
mov
and
xor
stos
mov
clc
dec
lods
int
mov
jnp
ret
sbb
sub
adc
push
jp
pop
loop
mov
mov
cmp
inc
xchg
cltd
and
mov
mov
enter
iret
aaa
push
and
js
pop
lds
scas
xor
test
adc
or
stos
jnp
and
fs
xchg
push
add
adc
lret
addl
cwtl
fnstenv
and
clc
stc
popa
icebp
sbb
push
loopne
adc
hlt
push
and
sbb
adc
mov
adc
hlt
mov
mov
jmp
mov
adc
aam
add
dec
and
inc
inc
in
jne
fnstenv
imulb
hlt
xchg
pushf
out
test
call
in
push
jmp
xor
xchg
add
repz
push
es
loopne
cmp
add
insb
jle
lcall
mov
cmpsl
pop
jb
loope
jge
loope
xchg
pop
dec
push
lret
xor
jp
cmp
pop
cmpsb
clc
sarb
push
add
scas
adc
fistps
loop
loope
jne
inc
cmc
push
sbb
ss
ljmp
and
aad
fbld
pop
push
push
fcmovu
es
outsb
cmp
sar
xor
sub
int3
flds
cmpsl
lcall
add
aad
loopne
jae
cmp
cmp
cmp
adc
fs
xor
lods
insl
mov
xchg
mov
sbb
inc
repnz
pop
cld
cmp
push
pop
cmp
out
ret
rcrb
and
xchg
dec
pop
popa
mov
jmp
mov
mov
test
loope
xchg
pushf
cmp
les
dec
imul
fildl
enter
int
mov
insl
mov
push
pop
adcb
popa
add
mov
push
pop
mov
xor
inc
inc
out
or
or
mov
mov
sub
inc
mov
jno
insl
jg
out
pop
daa
jle
and
stos
dec
pushf
mov
divb
lock
fsubrl
push
pusha
xor
xchg
inc
stos
fucomp
mov
clc
nop
cmp
loopne
inc
adc
adc
rcll
cld
imul
inc
jo
leave
stos
les
add
inc
jae
adc
inc
es
mov
mov
adc
or
dec
popf
lret
insl
aad
loop
adc
mov
cmp
mov
and
push
in
xchg
pop
push
xor
out
add
push
pusha
jns
inc
push
sub
movsl
pop
rep
and
dec
add
dec
xlat
dec
push
or
int3
mov
cwtl
cmc
sub
clc
inc
pop
mov
or
ficomps
sbb
adc
loope
jl
psrad
dec
fnstcw
sbb
jmp
icebp
lods
and
mov
int
xchg
pop
or
aaa
push
jmp
out
pop
out
lret
rolb
imul
fsubrs
add
inc
adc
cmc
inc
mov
sub
pop
movsb
rorb
mov
jge
scas
daa
jb
push
rolb
cmp
cmp
or
push
je
mov
mov
xchg
jnp
in
rcl
xchg
jo
fisttpll
ror
jnp
js
dec
push
mov
pop
push
push
nop
loope
pop
inc
adc
notl
ja
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
nop
inc
adc
jo
jge
jo
adcb
cld
std
add
sub
dec
divb
andb
fldenv
popa
fsubrl
cmp
int3
out
push
fists
scas
int
push
inc
cli
shlb
addr16
lcall
xchg
xchg
mov
subb
push
push
test
and
out
test
add
mov
jbe
or
mov
or
mov
js
addr16
cwtl
mov
jge
push
lcall
cltd
scas
stos
dec
mov
cltd
pop
test
or
test
lds
mov
stc
mov
fcmovnb
pop
and
outsb
sbb
pop
push
xor
lds
and
sbb
add
outsb
mov
addr16
arpl
ret
pop
sub
mov
xor
mov
mov
jecxz
orb
push
jle
mov
mov
jne
lods
jl
push
test
dec
cmp
pop
push
inc
add
fdivrs
or
cwtl
outsb
mov
in
dec
call
push
sbb
push
pushf
test
mov
mov
or
cwtl
pop
lahf
movsb
test
sub
xorb
cmp
cmp
daa
mov
lods
icebp
call
or
pop
mov
sbb
pop
lods
pushf
ja
push
inc
jns
lahf
repnz
aaa
loope
cmp
or
xchg
mov
rolb
mov
or
mov
test
add
imull
lcall
test
cmp
or
in
lds
movsl
int
imull
nop
or
mov
into
into
movl
scas
insl
xchg
dec
into
lea
push
in
out
lods
es
xchg
call
inc
dec
cmp
or
jo
in
xchg
sahf
mov
inc
jnp
jne
jbe
lret
stc
cmp
add
cli
xor
scas
jbe
outsl
les
adc
or
fbstp
cmp
dec
add
push
jns
inc
add
push
sub
hlt
outsb
adc
test
movsl
ret
mov
push
addr16
jb
inc
jmp
dec
xchg
or
out
in
outsl
xchg
ljmp
cmp
mov
pop
addr16
cltd
leave
jle
add
push
lock
pusha
leave
decb
xchg
xor
cmpsl
shll
insl
sub
lock
gs
xchg
fwait
sub
lds
sbb
xchg
aas
sbb
outsl
loope
int
insl
mull
sub
cmp
ss
add
dec
rep
ljmp
aam
pop
dec
jo
jb
jne
rclb
pop
fcmove
dec
push
movsl
cld
sbb
loopne
sbb
test
lret
sahf
and
imul
pushf
std
dec
push
dec
add
daa
stos
xchg
popa
add
lds
add
rcl
in
daa
jle
cmpsb
aaa
dec
jle
arpl
jmp
dec
cmp
push
mov
fwait
or
xchg
jmp
pushf
jae
ret
ret
movl
lods
pop
jne
cmp
add
arpl
lcall
leave
lahf
shl
ds
jg
xchg
push
mov
lret
std
mov
in
add
push
mov
mov
mov
lret
jp
call
push
dec
jecxz
insb
pushf
push
std
push
fstl
insb
sbb
mov
or
mov
cld
sbb
imul
movsb
je
in
shrl
jp
xchg
cmc
pop
sbb
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
icebp
jbe
jo
pop
jge
jo
addb
lds
adc
pandn
fwait
repz
xor
xlat
addr16
repz
shr
out
pop
mov
test
cld
fcoml
xor
lret
push
lret
mov
mov
pop
out
cli
aam
into
pop
stos
cwtl
mov
leave
orb
mov
adc
iret
subl
add
outsl
insb
lcall
sti
push
cmc
push
jb
push
mov
jbe
push
pushf
jne
push
add
rol
add
mov
rolb
dec
dec
add
adcl
loop
xchg
outsl
push
cmp
inc
mov
adcb
adc
xchg
daa
lods
fdivrl
scas
pusha
mov
mov
into
mov
adc
mov
push
fiaddl
jne
cmp
push
mov
add
test
pop
lahf
cmp
lea
ret
sub
adc
std
mov
loop
dec
scas
and
mov
sbb
ljmp
bnd
mov
arpl
nop
add
push
jl
mov
imul
inc
clc
dec
shll
sti
divl
imul
jo
mov
lahf
or
mov
lret
fcomip
push
sbb
push
imul
adc
scas
pop
insb
movsl
adc
jecxz
push
push
movsl
fsubrl
adc
xor
fidivl
dec
loopne
dec
stos
pushl
movsl
xchg
fbld
mov
pop
and
pusha
cmp
ss
fisubs
cmp
jo
adc
fidivrl
test
leave
gs
ja
jp
insb
movsl
xchg
push
int
sub
scas
xor
xchg
dec
adc
imul
jne
sbb
inc
sub
or
je
sarb
pop
inc
xchg
xchg
pop
mov
leave
loopne
ljmp
xor
pusha
movsl
daa
sbb
cmpsb
dec
mov
out
lret
inc
scas
mov
add
or
dec
cmpsb
or
dec
in
cltd
xor
shlb
das
mov
pop
inc
xchg
and
je
fsts
popf
push
mov
imul
addr16
in
data16
mov
mov
ret
sbb
jae
fldl
or
arpl
mov
add
mov
cmpsb
pushf
or
adc
outsb
push
and
pop
xchg
jne
sbb
sub
sbb
outsb
cmovb
sbb
mov
sub
insb
jnp
adc
repz
xchg
mov
add
fdivl
outsl
aad
lods
xlat
xlat
mov
xchg
aad
push
in
lret
ja
roll
cmp
cli
cwtl
pop
mov
imul
addb
mov
imul
cmp
iret
ss
push
pmulhw
sarl
jecxz
ljmp
jg
dec
leave
sbb
neg
popa
xchg
pop
xor
rclb
dec
adc
repz
repnz
xorb
or
seto
jne
adc
test
mov
push
push
mov
mov
pop
dec
adc
cwtl
push
lcall
das
hlt
mov
test
pop
jecxz
int3
sub
and
mov
sahf
or
lret
or
scas
movsl
icebp
mov
add
push
scas
jns
scas
xorl
jo
shll
fisubrl
dec
cmp
dec
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
mov
jo
pop
jge
jo
push
jno
scas
test
aas
popl
cmp
push
push
cmp
leave
insl
mov
inc
add
lahf
and
inc
neg
pop
cmpsl
fdivr
fdivrl
push
jnp
fidivs
lret
xchg
test
dec
xchg
js
dec
ljmp
jecxz
mov
test
pop
pushf
in
hlt
sub
and
es
ss
mov
dec
mov
fildll
adc
push
mov
js
jo
inc
into
add
pop
inc
xor
rclb
fdivr
jae
pushf
and
cmp
cmp
cmp
or
push
cmp
shll
add
jns
mov
mov
loop
inc
push
pop
leave
idivl
lahf
fidivrl
fdivrl
add
mov
es
xchg
sbb
jnp
sub
dec
mov
fcmovnb
pop
mov
xchg
pop
mov
mov
push
daa
addr16
ja
jne
jae
sar
pop
inc
int3
jae
aam
xchg
push
push
call
adc
sbb
mov
test
cmp
repnz
adc
test
add
shll
inc
inc
mov
xchg
lcall
mov
jb
sti
add
sbb
xchg
arpl
out
cmp
pop
dec
jae
inc
es
outsb
dec
je
jmp
sbb
pop
or
cmp
cs
sbb
ljmp
push
dec
imul
loope
out
mov
push
outsl
push
cwtl
and
aad
mov
pop
dec
jp
daa
loopne
lcall
jmp
cwtl
adc
loop
mov
mov
xchg
sbb
stos
or
mov
cmp
jne
pop
lods
int
andb
aas
and
xlat
pop
repz
push
jg
xchg
add
mov
dec
pop
sbb
fdivr
adc
xchg
sbb
push
sahf
lods
out
idivl
jns
cli
pop
mov
lods
cmp
mov
mov
push
je
or
inc
fmulp
fcomps
mov
adcb
and
jp
mov
and
bound
or
mov
inc
into
pop
xor
adc
or
jmp
in
fstl
mov
push
addr16
hlt
dec
sub
push
data16
notl
jae
mov
pop
js
pop
cwtl
dec
lea
je
gs
jg
out
in
xchg
or
jge
loope
bound
mov
lret
mov
adc
out
lcall
mov
pusha
out
rolb
push
sub
add
xchg
ljmp
dec
loopne
sub
stc
andb
clc
sbb
push
cld
jns
js
xchg
ret
mov
sub
cmp
sbb
sbb
insl
pop
dec
mov
push
call
ss
aas
ds
add
dec
sub
movsb
test
enter
outsl
into
sahf
jmp
add
imul
xor
or
fwait
mov
cmp
out
les
jl
add
ret
xor
jg
stc
sbb
rorl
in
mov
stc
push
adc
or
popf
out
jp
pop
xchg
mov
jecxz
stos
insb
cmp
test
test
mov
jns
repz
jmp
aam
mov
lods
pop
jg
pushf
jecxz
mov
mov
shll
inc
push
int3
fidivrl
mov
mov
scas
iret
jns
push
or
je
pop
leave
xchg
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
push
pop
jo
mov
jge
fimuls
insb
cmp
orb
cmp
stc
adc
popf
push
mov
mov
jns
imul
rcl
in
jmp
inc
jns
lahf
pop
mov
jb
cmp
in
fisubs
jns
cmp
or
or
xchg
push
and
lods
jl
or
adc
sbb
stc
scas
sub
jae
xchg
pop
andl
sbb
sbbb
jne
loopne
out
jnp
push
mov
mov
jne
rclb
pushf
and
fs
sbb
ret
mov
scas
pop
push
cmp
and
xchg
push
add
mov
mov
insb
cmpsb
movsl
and
bound
shrb
cmp
jne
fsub
xchg
mov
loop
jnp
push
jne
nop
loopne
pop
outsl
pop
mov
mov
jl
inc
cltd
imul
fisttps
or
pop
pushf
pop
arpl
push
sbb
adc
push
loop
jle
sbb
loop
adc
xor
inc
add
xchg
lret
cmp
int
sbb
jmp
cmp
into
fimuls
mov
out
xor
xor
jge
movsb
outsl
xor
inc
popf
ret
mov
or
xchg
clc
sti
mov
push
sahf
jbe
loopne
push
icebp
rcrl
jle
cltd
mov
and
and
ja
rorb
scas
pop
sbb
inc
xor
xchg
xchg
ja
sbb
ret
lds
xchg
push
nop
mov
sahf
mov
pop
mov
scas
stc
sub
mov
sub
xchg
sbb
inc
movsb
xor
pop
subl
mov
mov
fidivs
je
cmp
ds
mov
outsb
xor
cltd
fbld
or
or
loop
sbb
jb
push
mov
mov
data16
rolb
adc
loopne
ds
or
push
fsubrl
iret
ds
jns
xchg
mov
xor
sbb
jle
fldenv
mov
or
pop
int
repnz
aas
fstpl
scas
inc
repz
loope
or
mov
repnz
and
push
mov
cmp
std
jbe
push
sbb
mov
sub
dec
adc
push
aaa
mov
gs
push
xchg
xor
inc
and
daa
push
sub
pop
add
in
xor
cmp
test
mov
jge
rcll
mov
sbb
sti
test
xchg
lods
jecxz
andps
rorl
push
fiaddl
out
mov
dec
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
push
rorl
pop
jo
mov
iret
sbb
dec
enter
jle
mov
popa
mov
mov
sbb
inc
addr16
mov
sub
pop
cmp
test
outsl
mov
jno
mov
jne
test
jne
insb
sbb
fdivs
movsl
xor
dec
cmpsl
in
arpl
std
stos
sub
mov
push
mov
inc
dec
pop
fmull
bound
leavew
xor
addr16
inc
call
pop
scas
or
push
xchg
pop
jecxz
jb
mov
sub
xlat
stos
sub
mov
jo
cmpsb
push
addr16
cmc
jne
pop
sbb
mov
cld
jns
adc
dec
add
pop
ss
mov
lds
mov
call
movsl
rolb
push
imul
mov
mov
pop
std
leave
test
sbb
imul
push
pushf
pop
fwait
rcrl
call
adc
lock
js
cmpsl
mov
arpl
mov
mov
test
lods
xchg
xor
es
in
repz
aam
gs
outsl
xchg
fsubrl
out
rorb
jmp
in
jne
loopne
ret
fisttpl
pop
mov
dec
in
inc
push
xchg
adcb
lret
dec
or
in
jns
mov
fmul
fwait
aam
pop
ror
sub
push
pop
sbb
negb
pop
repz
mov
or
repnz
shl
mov
pop
loop
scas
outsl
mov
fnstcw
xchg
outsb
addl
jae
cmc
push
jno
scas
jne
daa
lahf
mov
push
cltd
adc
sub
push
cmp
stos
loope
stc
add
add
ds
cli
int3
mov
je
cltd
mov
cmpsl
jge
stos
fmul
sarl
dec
je
ret
mov
sbb
stc
cmpl
daa
add
shufps
mov
test
dec
pusha
or
xor
pop
movsl
repz
dec
jecxz
sbb
or
enter
mov
add
and
incb
mov
pusha
xchg
ret
das
iret
jle
jnp
fdiv
push
sti
fwait
mov
sub
das
gs
popf
out
or
mov
and
adcb
pop
cli
xadd
and
testl
arpl
push
aaa
jmp
mov
and
gs
out
or
and
inc
pop
imul
pop
jg
mov
pop
and
dec
push
in
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
out
xchg
enter
mov
jns
stos
aam
out
push
int3
fisubrl
push
stc
scas
pop
insb
xor
call
sti
lret
lret
out
xchg
adc
adc
test
lock
fwait
outsl
mov
cmpsl
in
std
jbe
mov
jb
mov
fiaddl
cmp
inc
jl
mov
or
addr16
int
ljmp
pop
dec
add
sub
nop
pop
lcall
xchg
or
sbb
shl
rorb
cmpsl
pushf
mov
pop
xchg
lock
adcb
xor
inc
cmp
je
cmpsl
cli
out
les
fsubr
outsl
push
aad
rcr
mov
fs
fdivrs
push
jge
fs
cs
rol
loop
mov
scas
push
mov
ficoms
mov
insl
push
mov
lahf
push
stos
mulb
sub
push
add
jne
jmp
sar
mov
cwtl
mov
sub
inc
lock
outsl
cltd
mov
lock
arpl
cmp
xchg
lods
stc
loop
cmpsl
and
mov
pop
sub
cmp
sarl
mov
das
xchg
jg
dec
cmp
or
or
das
scas
xchg
xchg
je
scas
cmp
stos
lds
cmpsl
push
lds
int3
sbb
mov
sbb
cmp
add
fucom
push
xchg
sub
jno
fisttps
lods
xor
push
or
jae
imul
add
and
dec
cltd
cmp
cmpb
cmp
sub
sbb
jns
jge
scas
vaddsubpd
repz
ss
les
ds
nop
sahf
jecxz
lcall
sarl
pop
es
imul
movsb
mov
ljmp
and
xor
xchg
sub
sbb
aam
cmp
sbb
push
xor
sub
jge
xchg
pop
mov
pop
xor
je
call
lds
sub
mov
inc
cltd
insb
stc
and
lods
hlt
adc
xchg
in
fdiv
mov
mov
sub
cmp
inc
pushf
xor
mov
jo
push
mov
sar
addr16
outsb
mov
cmp
int
xor
or
inc
test
in
mov
adc
inc
fs
std
es
or
pop
dec
cmp
cmp
je
fistl
dec
cmp
faddp
add
push
push
aad
pop
movsl
push
insb
xchg
push
dec
dec
jmp
clc
ds
sub
stos
dec
pop
mov
adc
add
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cmp
jo
mov
cli
lods
loopne
dec
and
add
pop
adc
lock
outsl
insb
out
test
push
pop
dec
lods
adc
inc
cmpsb
pop
scas
cmpsb
adc
sub
popa
shl
test
scas
stos
lahf
inc
mov
xchg
mov
xchg
lods
out
dec
push
aas
or
or
push
daa
sbb
xorb
sbb
jl
pop
or
and
xchg
in
pop
pop
sub
inc
jmp
jns
daa
les
mov
xchg
pop
push
fisubs
loope
sbb
cmp
out
jge
add
jmp
lds
pusha
pop
push
inc
das
and
push
stos
cli
cmovnp
inc
out
rcrl
jmp
pop
mov
push
jle
mov
mov
jle
sbb
sbb
lea
in
push
test
iret
call
push
pusha
jo
cwtl
stos
adc
cmp
or
add
or
mov
dec
mov
stos
ja
daa
sub
in
mov
int3
or
add
popa
push
xchg
cmp
ret
inc
jl
add
adc
sub
xchg
dec
inc
jo
enter
loope
je
loopne
jp
scas
leave
cwtl
pop
pop
sbb
sbb
mov
xchg
xchg
inc
int3
pusha
aam
pop
inc
ljmp
cmp
in
addl
jne
mov
clc
test
hlt
sbb
pop
add
ret
test
xorb
stos
cld
imul
adc
or
loope
sub
adc
inc
gs
fwait
inc
dec
cmc
stc
insl
and
out
mov
or
ds
xchg
or
fildl
lcall
cmp
insl
orb
cmp
shlb
mov
not
sbb
imul
pushf
push
ret
lods
adc
add
ret
cmp
cld
repz
ljmp
fsubp
es
mov
pop
sub
stos
sbb
aad
lret
outsb
movsb
push
lret
loope
add
and
test
aaa
in
sti
push
jnp
sarb
stc
push
bound
mov
popf
pop
ja
xchg
cs
cltd
fidivrl
adc
int3
mov
mov
pop
push
jle
sub
pop
lds
jp
test
xchg
insl
mov
xlat
nop
dec
leave
cltd
daa
sbb
sub
nop
incb
mov
and
into
stos
clc
jmp
in
jnp
mov
fcmovnbe
pop
mov
das
mov
por
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
xchg
jl
fs
mov
xorl
lock
lahf
mov
lahf
xor
pop
sahf
jne
add
add
fadds
lods
repz
mov
test
xchg
mov
jl
je
mov
push
aam
xor
mov
imul
cmpl
jmp
sbb
stos
fsubs
cwtl
inc
and
cmpsb
xor
pop
stc
and
push
mul
adc
xchg
add
adc
lods
mov
push
insl
loope
and
in
mov
mov
mov
sbb
pop
and
mov
jns
cli
adc
hlt
add
in
inc
ret
aam
push
push
into
xlat
mov
cmpsb
cwtl
mov
xchg
popf
xor
push
pop
repnz
cld
leave
jb
adc
fidivl
scas
movsl
pop
mov
scas
test
ljmp
inc
fists
pop
out
cs
test
addr16
pusha
sahf
les
and
es
ja
adc
test
mov
jo
aad
or
add
push
mov
sbb
xor
aas
lea
xor
stos
pop
xchg
cmp
pop
mov
or
adc
or
imul
pushf
dec
sub
sbb
shr
cltd
in
lahf
mov
ret
int3
cmp
pop
inc
lock
gs
jns
movsl
icebp
inc
xor
fistl
sub
mov
fidivs
mov
mov
insb
int3
test
mov
dec
cmp
jg
sub
jl
insb
bound
adc
test
pop
push
data16
loopne
stos
cmp
mov
jl
cltd
fsts
cs
jno
aas
stos
jno
negl
decb
ret
ja
mov
ficomps
jg
cmp
bound
sub
shrb
call
sub
push
in
insl
pop
ficomps
xor
and
xchg
pop
sub
mov
push
mov
sbb
cwtl
jnp
stos
imul
in
and
pop
xchg
xor
jmp
push
mov
mov
and
lods
xchg
push
pusha
imul
scas
dec
xor
mov
mov
jne
je
xlat
push
sbbb
test
jmp
into
push
insl
rcr
in
cwtl
sbb
lahf
xor
daa
cmpsl
jne
cmp
daa
xor
xor
ficoms
pop
mov
in
or
xchg
mov
pop
mov
dec
out
sahf
test
flds
jne
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
inc
pop
sbb
mov
push
cmpl
cmp
dec
inc
test
enter
pop
cli
adc
pushf
mov
lahf
lods
pop
xchg
fnstcw
rcr
pop
mov
stos
sbb
and
or
pop
lret
mov
lret
leave
cltd
aad
add
pop
jmp
test
mov
add
mov
cwtl
mov
pusha
cmpsl
cmp
test
pushf
dec
lret
in
cmp
not
xchg
and
pop
xchg
outsb
mov
btr
mov
mov
add
cli
outsl
adc
int
imul
pop
adc
xor
loop
int
ret
sub
push
pop
cld
adc
jns
in
clc
popf
into
adc
int3
mov
scas
pop
jp
addr16
cmp
cltd
shlb
xchg
call
subb
mov
adc
jb
jmp
test
inc
addr16
scas
jns
jp
sub
mov
nop
mov
icebp
mov
sub
in
push
insl
sbb
in
inc
ds
push
mov
push
sub
add
ss
inc
ret
mov
add
xlat
outsb
cmp
test
inc
sub
push
or
shrl
js
or
cmp
sub
and
rclb
xor
mov
xor
and
ja
xor
cmp
sbbl
jge
stos
lock
mov
mov
mov
mov
add
pop
leave
push
hlt
sahf
lret
sbb
adc
sahf
mov
aaa
cli
pop
mov
cmpsl
int
movb
xchg
jb
xor
stos
xor
mov
sub
jg
aaa
jle
imul
mov
lret
xchg
or
pop
decl
xchg
outsl
dec
adc
dec
in
xchg
mov
pop
stos
or
push
mov
les
mov
xchg
xchg
add
ret
or
jmp
jle
cmp
scas
dec
je
push
cwtl
or
addr16
insb
push
inc
and
inc
jmp
pop
stos
sbb
mov
sbb
push
fstp
dec
push
push
xorl
ret
dec
call
add
and
jo
loopne
or
pop
es
movsb
push
aas
std
push
or
xchg
nop
and
push
xchg
inc
inc
ljmp
mov
jb
sbb
adc
fisubl
lea
mov
cmp
jecxz
mov
pop
pop
push
push
stos
xchg
push
xor
jae
rorl
jne
dec
xchg
std
and
dec
sarl
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
push
mov
adc
xchg
or
std
hlt
insb
add
fmulp
jnp
xchg
xchg
mov
cli
test
mov
or
cltd
es
clc
xchg
mov
icebp
test
mov
leave
insb
loop
push
sub
incl
fimuls
js
sbb
or
popa
jecxz
mov
pushf
mov
jge
add
inc
mov
push
in
rcrl
js
mov
shr
dec
jmp
pop
movsb
lcall
les
cmc
dec
ljmp
adc
int3
and
pop
pushf
and
pop
js
pop
or
dec
jbe
repnz
jo
mov
inc
sbbl
in
add
in
inc
xchg
xor
ja
adc
mov
mov
xchg
cmp
sti
xchg
push
push
jns
movsb
lock
mov
leave
loopne
stos
mov
jg
call
hlt
inc
mov
movsl
cmpsl
scas
outsl
loopw
pusha
sar
shlb
into
insb
adc
xor
cmp
cld
pop
jo
push
add
outsl
cs
aaa
xchg
dec
mov
loope
repnz
cmp
and
aad
jmp
dec
jg
sub
mov
cs
sub
or
test
mov
jge
mov
test
aam
fwait
movsl
dec
adc
xor
fists
jae
push
push
cmpsb
leave
xor
xor
and
add
sbb
pushf
ret
out
mov
jp
jmp
data16
leave
popa
imul
mov
mov
jmp
sbb
inc
push
and
pop
xor
rcrb
jmp
mov
fs
push
pop
mov
lods
ret
adc
mov
jmp
add
sbbb
outsb
add
and
dec
shrb
jne
mov
add
pop
daa
pop
lcall
stos
cmpl
mov
xlat
iret
add
jl
fistpl
sub
ficompl
cmpsb
pop
cmpsl
jle
cmp
pop
push
stos
imul
loopne
sbb
cmp
out
cmpsb
data16
jae
test
fists
jmp
xchg
jae
fdivrs
sbb
xchg
inc
sti
lahf
ja
pop
dec
cmpl
sbb
mov
ss
inc
aam
dec
test
push
ja
rcll
sbb
or
sub
jl
shll
imul
in
call
outsb
rolb
mov
in
fisttpl
test
inc
dec
cmp
jne
pushl
jmp
and
lods
shrb
in
lock
xor
mov
sbb
dec
or
adc
mov
test
loopne
aaa
inc
add
xchg
xor
mov
fsubl
insl
sub
stos
repz
cmp
insb
and
mov
pop
pop
sbb
and
lcall
push
cmpsl
orps
cmp
adc
iret
jg
add
aaa
xor
lea
xchg
fwait
xlat
sub
scas
fwait
push
xchg
ljmp
adc
jnp
pop
mov
xchg
test
js
mov
hlt
push
test
push
test
xor
pushf
loope
xor
mov
lret
adc
sahf
leave
cmp
bound
out
sbb
rol
push
movsb
add
lret
sbbb
mov
ret
div
mov
push
jo
adc
fcomip
xchg
jne
cmpb
push
testb
scas
cltd
jno
jmp
adc
fwait
adc
push
ja
fildll
jbe
pop
jo
or
data16
inc
repnz
insl
hlt
sbb
pop
pop
mov
ret
mov
notb
jg
sub
mov
push
push
sbb
out
push
aad
sbb
xor
push
adc
push
hlt
push
xchg
pop
push
dec
sarb
sbb
outsb
pop
repnz
ja
xor
push
lods
jp
hlt
lfs
jbe
andb
jnp
in
mov
lods
mov
out
std
aad
and
loop
dec
js
in
scas
es
sub
stos
and
xchg
mov
push
sub
and
mov
lcall
mov
or
dec
or
scas
jb
xchg
jne
jecxz
mov
scas
mov
repnz
imul
out
pop
out
mov
lcall
cmp
pop
mov
cmp
pop
lea
jne
mov
lahf
mov
enter
mov
lods
mul
cmpb
fstl
aaa
xor
daa
dec
sub
movsb
loop
adc
aam
or
or
mov
mov
test
shrb
xchg
gs
push
xor
jge
ljmp
pop
pop
inc
ja
push
popf
mov
cmc
add
pop
push
cmpsb
add
mov
jge
push
and
addr16
adc
xor
daa
sbbl
hlt
imul
call
or
fldl
les
fmul
sbb
sub
test
rorb
stos
lret
mov
jmp
pop
insl
and
xor
insl
jp
or
insl
repnz
mov
cld
shll
gs
xor
cmp
call
outsl
out
inc
repz
jns
bound
pusha
test
dec
cmp
adc
xchg
dec
inc
lds
fisubs
mov
add
push
mov
pop
cmp
sub
pop
xor
unpckhps
popa
dec
cmp
dec
and
sti
push
cwtl
and
daa
sub
mov
in
lock
xor
push
mov
test
je
sbb
je
rorb
xchg
and
test
mov
movsb
mov
mov
or
outsb
in
mov
mov
xchg
dec
mov
repz
and
mull
jl
or
rcrb
mov
test
dec
fistpll
xchg
cmpsl
stos
loope
test
sahf
add
mov
sti
mov
sub
popa
dec
sub
je
int3
aam
lods
scas
adc
insb
sbb
imul
pushl
or
ss
push
int3
xchg
ret
rcrb
lods
loope
add
push
ss
inc
jnp
dec
fcomp
and
cld
loopne
inc
cmp
imul
lcall
pusha
lds
out
lret
cli
mov
in
mov
push
cmpsl
cld
fistpl
shlb
push
sbb
mov
icebp
jecxz
xchg
test
or
out
and
pop
xor
sbb
push
push
cmp
push
bound
mov
lret
mov
data16
orb
dec
and
sarb
pop
testl
adc
jp
mov
and
sbb
cmpsl
rorl
or
and
outsl
mov
jmp
scas
hlt
lds
std
icebp
mov
mov
int
lods
and
pop
or
repnz
and
scas
aad
aas
loopne
pop
mov
jne
xchg
mov
cmp
mov
stc
pop
mov
or
enter
cmp
adcl
pop
sbb
cltd
add
pop
lcall
gs
or
sub
xor
and
sarl
fnstsw
orl
idivl
mov
and
inc
sti
and
dec
ror
sti
loope
cmp
lods
dec
sub
xor
cld
add
jmp
arpl
or
test
int
popf
mov
xor
mov
test
call
pop
xor
jl
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
ja
add
mov
lock
push
loopne
lods
add
int
mov
in
xchg
push
lods
sbb
scas
shlb
in
out
xor
repz
out
sbb
xchg
fimuls
dec
sbb
add
sub
cwtl
addr16
es
loopne
mov
jo
jno
cmc
hlt
xchg
aaa
jmp
pop
jnp
xorb
add
sub
lcall
mov
sub
mov
je
lds
push
mov
mov
xchg
mov
xchg
xchg
test
pop
jae
xor
push
sysret
pop
or
xchg
fisubrl
adc
inc
add
mov
jae
or
push
add
loope
cltd
jns
fidivrs
mov
es
push
rcrl
sub
mov
in
popa
add
cltd
pusha
inc
dec
dec
js
sub
cld
std
add
es
into
cmp
divl
rcl
dec
mov
mov
enter
xchg
mov
popa
add
dec
iret
das
xlat
mov
adc
rorl
sbb
jge
dec
inc
ret
cmp
xchg
push
adc
sub
jmp
jge
jge
jmp
lret
jnp
mov
push
sar
pop
daa
dec
xor
lret
lret
pusha
adc
and
dec
mov
sub
xchg
imul
dec
mov
mov
mov
leave
sbb
mov
imul
mov
pop
leave
cli
test
adc
add
pusha
mov
cltd
cmp
and
jecxz
xor
rorl
sbb
mov
icebp
pop
mov
pusha
sub
loop
subb
push
loope
cmpb
pop
jmp
iret
xor
and
and
xor
adcb
mov
mov
in
push
xor
test
and
push
or
mov
mov
icebp
add
inc
mov
ja
jo
out
rcrb
daa
and
dec
into
jns
mov
sbb
cli
loopne
repnz
sub
dec
cltd
in
xchg
stc
add
shll
pushf
loopne
ds
addr16
dec
andb
push
vcvtsd2ss
dec
xor
iret
mov
sbb
add
or
mov
imul
mov
rcrb
or
bound
jl
cmpxchg
test
xchg
add
dec
xor
adc
sbb
mov
jecxz
jge
das
dec
hlt
pop
stc
leave
dec
jle
hlt
add
push
sub
xchg
mov
push
out
and
xchg
je
call
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
adc
jo
jle
jo
mov
jp
xchg
mov
jl
stos
lret
xchg
in
or
xchg
test
test
inc
test
cmc
into
aam
sub
or
hlt
push
out
ja
jmp
fucomi
push
outsl
push
cwtl
add
stos
add
jb
and
inc
or
pop
mov
and
testl
sub
push
scas
inc
shrb
pop
jg
add
sub
xchg
inc
mov
hlt
push
adc
adc
sub
jl
jg
icebp
jmp
enter
lock
loopne
jae
cmp
jns
add
add
fwait
cmc
cmpsb
and
or
in
cs
nop
pop
push
inc
sbb
in
dec
sbb
push
dec
adc
mov
testb
push
testb
or
xor
loop
push
loopne
aam
jmp
insl
add
and
int3
pop
shrb
stc
ljmp
add
or
adc
rorl
lods
fisttpll
push
clc
gs
sbbl
sbb
adc
mov
jge
or
mov
sub
insl
ret
loopne
subb
dec
std
xchg
inc
xchg
and
and
jecxz
push
adc
jne
dec
and
inc
scas
mov
pop
or
adc
xchg
jo
xor
pusha
pushf
in
loopne
push
movsl
mov
in
arpl
outsl
xor
mov
shrb
aaa
mov
data16
push
and
push
rolb
negb
xchg
outsl
outsl
int
les
push
or
fnstenv
ja
cmp
push
push
fsubrs
mov
mov
jecxz
xchg
enter
enter
inc
mov
mov
pop
loop
aaa
andb
cmp
lds
call
fdivs
popf
lahf
lods
jnp
decb
inc
insl
push
mov
cmp
nop
in
push
mov
push
sbb
mov
cmp
pop
fmulp
ficompl
cltd
add
jecxz
push
xor
mov
cmpsb
add
enter
dec
test
push
insl
imul
push
pop
test
insl
iret
inc
aaa
stos
inc
adc
add
lds
fstpt
lret
cmova
int3
test
in
mov
in
mov
sbbb
xor
and
mov
xchg
and
lret
aam
movsb
add
xorl
lea
or
fisttps
jo
inc
or
fs
jmp
push
pop
inc
cmp
sbb
push
orps
jne
xor
out
idiv
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
sub
leave
jo
jo
jle
jo
cmpsl
into
test
out
popf
mov
add
push
xor
xor
sbb
mov
lods
test
push
add
cmp
adc
and
jmp
add
fistpl
push
xchg
sub
sbb
add
inc
jbe
dec
jno
cmpsl
lods
mov
pop
lock
sahf
scas
fnstenv
sub
sahf
jmp
ret
add
push
cmc
push
xor
pop
mov
fdivs
adc
sti
push
dec
pop
dec
aam
sbb
pop
sahf
lret
and
pop
je
pushl
and
pop
mov
mov
adc
mov
cs
arpl
xor
das
shll
adc
sub
aad
adc
ja
mov
sbb
test
test
add
adc
pop
sbb
enter
push
lahf
dec
pop
test
jo
or
cmpsl
or
pop
aaa
add
sbb
mov
sbb
mov
cmp
test
mov
test
xor
out
cs
test
fsubp
mov
xchg
mov
xchg
bound
out
inc
mov
inc
js
mov
push
push
idivl
aas
jge
sub
add
push
leave
and
jo
adc
jae
or
xchg
cltd
fisubl
into
sbb
in
icebp
loopne,pt
and
pop
sub
sbb
jg
xchg
lahf
bound
cmp
stc
xchg
add
push
daa
and
xor
int
push
adc
mov
dec
xor
jno
ficoms
xor
jbe
mov
adc
lods
jae
ficoml
push
cwtl
xchg
les
dec
lret
jbe
push
cwtl
mov
leave
and
subl
xor
aad
sub
inc
push
inc
xor
bound
push
cmpsb
inc
and
cltd
xchg
fdivl
addr16
gs
pop
xlat
rorb
aam
inc
add
insl
xchg
xchg
lret
into
daa
jg
jns
dec
xchg
xchg
add
subb
andl
cmp
push
xor
lds
outsb
int
fs
mov
push
je
in
ds
int3
in
mov
inc
mov
cmp
mov
sub
push
xlat
loopne
mov
cmp
stc
loope
loope
ja
inc
mov
jmp
addr16
mov
in
imul
nop
addr16
jp
add
adc
cmp
add
int
loopne
sub
in
insl
sub
pop
js
and
mov
mov
xor
sub
icebp
loopne
mov
push
or
jmp
add
mov
jb
jge
jge
pop
and
jo
jle
jo
movsl
inc
imul
js,pt
popf
cs
cmp
movsb
mov
enter
rcll
dec
cmp
imul
jle
dec
sbb
imul
xor
mov
imul
movsl
xchg
lock
mov
and
inc
arpl
insb
stc
in
in
mov
sar
pop
stc
push
out
fdivrs
jp
adc
mov
mov
arpl
and
adc
mov
push
cmpsl
xor
inc
scas
ljmp
mov
cmpb
ret
or
add
pop
dec
loope
movsl
xchg
mov
mov
les
leave
sar
pop
dec
shl
xchg
xor
jae
mov
add
pop
cmp
dec
sub
icebp
dec
ss
pop
mov
shll
jecxz
movsl
and
nop
std
push
xor
sbb
mov
out
jnp
sub
dec
ret
fnstcw
out
jl
bound
pop
dec
adc
pop
mov
dec
iret
lods
in
pop
pop
mov
sub
repnz
mov
pusha
xorl
mov
fmulp
dec
cltd
xchg
sub
sbb
inc
and
sbb
xchg
push
fwait
das
push
int3
stos
or
dec
cwtl
or
lret
stc
flds
aad
mov
push
mov
push
js
cld
mov
push
pop
mov
mov
mov
and
mov
test
dec
and
mov
sbb
and
movsl
xor
mov
sbbb
js
jp
nop
sbb
dec
jle
mov
or
fcoml
inc
icebp
push
or
xchg
adc
cmp
xchg
sbb
dec
adc
jmp
inc
clc
leave
sub
mov
ret
and
int
aad
outsl
cli
or
xorl
dec
or
rorl
or
inc
add
sbb
in
and
frstpm(287
leave
push
fimuls
fstps
inc
pusha
xor
inc
cmc
shll
and
stc
lcall
stc
sub
lret
mulb
xor
inc
std
xor
fcoms
adc
or
es
fdivrl
jno
popf
mov
cld
cmp
pushf
inc
add
loope
fcomip
rcrb
push
int
cmp
pop
mov
mov
movsb
push
pusha
ret
mov
lds
outsl
mov
mov
lods
lock
out
imul
adc
repz
xchg
js
shr
lock
push
out
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
icebp
pusha
sub
mov
pusha
not
mov
ficoml
jns
dec
dec
and
js
sbb
mov
xchg
aam
jp
add
jg
insb
xor
adc
testb
push
jnp
das
dec
mov
push
pushf
push
in
or
pop
xor
mov
js
pop
fimuls
jg
out
cs
aam
mov
cmpsb
bound
in
jne
mov
push
ja
push
ss
je
add
mov
lds
faddl
pop
inc
add
lods
jno
dec
jge
mov
and
adc
arpl
pop
int3
cmp
fidivrs
mov
jmp
mov
data16
int
ss
xchg
ret
cltd
mov
insl
ret
testl
lahf
add
jmp
sti
inc
mull
aaa
or
and
sub
cmp
in
cmp
xor
sub
gs
aad
dec
jae
dec
xor
jmp
jnp
cltd
cmp
rolb
rolb
xor
nop
sub
aam
mov
sbb
cmp
xor
les
xor
into
add
jae
adc
fbstp
test
inc
mov
fsubrp
and
pop
dec
loopne
sub
pop
mov
out
stos
in
pushf
adc
clc
push
test
xor
cmp
int
mov
pusha
gs
xchg
subl
outsl
and
and
mov
bts
popa
pop
cmp
mov
push
mov
mov
push
xchg
loope
or
les
add
push
into
scas
inc
adc
es
cmp
repz
in
incb
xchg
dec
xor
sbb
dec
imul
jne
or
icebp
and
ljmp
push
insl
inc
gs
or
push
das
push
adc
cmpsl
jb
push
icebp
addr16
insb
mov
jmp
add
sub
cmp
mov
repz
xor
mov
mov
jle
notl
lret
sbb
jo
leave
insl
fdivl
cmp
ja
test
adc
push
xchg
xchg
shl
pushf
pop
sahf
adc
ret
lds
gs
jge
cmpsl
mov
inc
xchg
inc
cmp
xor
cwtl
ljmp
xor
fidivs
and
and
repnz
jne
cmpsb
mov
es
fisubs
out
add
pop
mov
adc
pop
xlat
movsl
lret
or
dec
out
in
cmp
sub
adc
popf
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
cli
cs
jo
jle
jo
push
xchg
xor
sbb
mov
mov
pop
pop
notl
sub
pop
and
sbb
jmp
sub
cld
xlat
aam
mov
mov
popa
and
push
and
outsl
jle
adc
jno
cmpsb
std
or
lret
sbb
adc
push
lds
cwtl
cli
push
jle
push
or
scas
ja
fldt
or
and
mov
repnz
sub
sbb
pop
stc
fyl2xp1
push
roll
cmp
aaa
andb
mov
movsb
sahf
das
push
daa
adc
lahf
push
sbb
js
add
fdivl
and
jp
sbb
je
mov
dec
or
scas
sbb
sub
push
mov
push
sbb
mov
and
and
add
adc
sbb
cmpsb
lds
into
and
lret
mov
test
lcall
and
out
jmp
pop
push
mov
or
adc
jo
inc
lret
test
xor
dec
mov
sub
ret
mov
add
enter
dec
xchg
push
jne
lods
shrb
xchg
jae
aaa
jnp
push
push
pop
nop
xchg
push
adc
sub
push
vmovd
add
sbb
inc
lods
jb
gs
popa
idivl
sti
xchg
sbb
mov
fistpll
push
out
imul
arpl
xchg
xchg
das
push
cmc
outsl
cld
pop
or
pop
mov
lcall
mov
cmp
or
mov
or
pop
enter
cltd
xchg
dec
push
in
scas
xchg
mov
xor
adc
cmp
add
mov
mov
xchg
pop
pop
mov
js
jle
popf
fdivrp
test
das
pop
mov
dec
ret
push
inc
lahf
loopne
sub
les
jne
jmp
das
mov
test
dec
mov
sbb
inc
dec
adc
mov
mov
out
sahf
mov
lds
loopne
mov
dec
leave
gs
movsl
outsb
mov
xchg
cmp
jp
js
cmp
xchg
mov
inc
sahf
mov
xchg
lahf
mov
cltd
mov
jb
xchg
scas
test
dec
or
mov
jo
sbb
pop
mov
addl
fmull
or
xor
mov
jmp
mov
jne
pop
push
fldenv
add
jo
pop
mov
jge
aam
out
xlat
cmp
pop
jo
mov
repnz
pop
or
pop
out
xchg
dec
sbb
push
out
lds
push
dec
inc
aam
jbe
mov
insl
imul
lods
jo
xchg
sub
push
sahf
insl
fisubl
xor
bound
push
add
fistpll
gs
int
and
aaa
sbb
push
shl
and
popl
insl
push
insl
push
cwtl
push
mov
pop
or
pop
cmp
mov
inc
xchg
push
pop
mov
adc
lock
in
add
mov
test
push
or
push
inc
nop
out
cld
xchg
andb
mov
fists
popf
int3
or
xorb
inc
cwtl
mov
push
pusha
test
stc
fsubrs
push
in
scas
mov
mov
xchg
loopw
mov
mov
sub
inc
sbb
sbbb
mov
aaa
add
sahf
inc
and
mov
arpl
cmp
or
insb
inc
test
dec
lahf
xchg
push
imul
sbb
int
cmp
inc
inc
push
fs
mov
xchg
cmp
aas
repnz
or
fs
xor
movsl
lahf
jle
xor
mov
sub
ja
cmp
mov
xchg
divl
adcl
inc
hlt
xor
mov
cld
int3
fistps
inc
mov
hlt
movsl
hlt
pop
push
test
pop
xchg
or
mov
xor
ljmp
ss
in
xchg
xor
pop
mov
lahf
jp
pop
pop
and
lahf
stc
cmpsl
aaa
and
lcall
sub
clc
push
add
mov
and
loopne
ret
imulb
mov
inc
or
scas
cmp
and
sub
adc
push
push
in
popf
add
stos
mov
sahf
lcall
sti
jmp
or
xor
test
push
outsb
outsl
dec
adc
cmc
mov
cmpsl
insl
dec
out
adc
insl
dec
adc
adc
or
sub
push
mov
xor
lret
mov
sbb
adc
stos
push
repz
int
popl
push
xor
movsl
adc
nop
loopne
inc
xchg
pushf
mov
orl
dec
push
enter
mov
mov
inc
movsb
orb
stos
stos
dec
dec
adcb
pop
xchg
sbb
repz
cmp
mov
add
shlb
ss
mov
jmp
pop
and
daa
adc
out
sub
mov
push
fs
orb
dec
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
xchg
pop
add
mov
xchg
xor
mov
sub
sbbl
mov
dec
sarb
cmp
out
jo,pn
sub
subl
lock
fcmovne
inc
jo
vmovlps
hlt
add
out
push
mov
push
push
mov
mov
insb
sub
push
xchg
das
dec
cmp
xchg
pop
add
push
xchg
arpl
sub
fwait
out
inc
xchg
jle
std
adc
xor
loopne
and
mov
inc
or
jl
addr16
sahf
out
or
dec
mov
fildll
and
dec
jmp
repnz
les
jno,pn
into
das
add
aad
movsl
pushf
mov
ficompl
mulb
dec
dec
dec
filds
imul
cmp
test
fisttpll
cmpsl
push
mov
mov
jl
arpl
pop
outsb
dec
outsb
fbld
inc
jo
out
sub
adc
movsl
stos
xor
loope
call
movsb
clc
fcoml
mov
mov
movsl
aad
mov
insl
ds
mov
repnz
add
adc
pop
mov
or
jmpw
int
adc
stos
sbb
mov
sbb
rcr
aad
dec
out
aad
cmc
cld
cmpsb
ss
aad
fistpll
lods
fstpl
ret
mov
push
bound
ret
lods
fsubl
inc
call
cmp
rcll
data16
into
mov
xor
add
add
mov
inc
movsb
jne
push
xor
cmp
test
or
imul
pop
jle
cmpsb
sbb
shl
mov
popa
mov
add
mov
mov
jns
inc
adc
pop
xor
gs
push
adc
ds
cs
dec
pop
outsb
movsl
loop
pusha
add
stos
sbb
int3
ret
xchg
xor
jns
fadd
fimull
and
arpl
mov
nop
mov
or
jo
dec
mov
rcrl
jmp
flds
addb
or
out
xchg
mov
jnp
rolb
fwait
ljmp
pop
cld
je
mov
xchg
pop
and
or
fld
xchg
push
mov
adc
pushl
test
and
mov
mov
or
xor
jbe
jmp
daa
sub
mov
repnz
daa
cs
in
loopne
mov
inc
mov
sub
xchg
les
movsl
pop
cmp
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
outsl
pusha
or
nop
lds
cld
xor
outsb
xchg
mov
std
cli
and
and
xchg
and
adc
adc
add
notb
rcrb
mov
xor
lret
xchg
pop
jmp
push
mov
add
sub
lcall
pop
dec
stc
xlat
fidivrs
cmc
aad
cmp
hlt
cwtl
loope
xchg
lock
rolb
ljmp
test
mov
cli
test
and
adc
pop
out
jmp
mov
jns
push
add
dec
in
jne
xor
sub
fwait
sub
scas
cmpsl
jmp
pop
sarb
xlat
mov
mov
add
gs
test
cs
subb
push
jmp
pop
fsts
inc
dec
inc
push
enter
lea
push
or
xor
sub
sbb
mov
mov
sbb
mov
and
mov
cmp
cmp
push
sbb
jge
das
add
adc
loopne
mov
inc
negb
sub
or
cmp
rcll
fadd
mov
and
jo
add
lods
mov
push
add
xchg
xor
dec
sub
add
cmp
sbb
jno
pop
mov
incb
idivb
push
or
mov
pop
inc
mov
dec
push
pop
adc
int
inc
hlt
and
inc
in
mov
gs
in
cmp
ds
daa
sti
out
and
add
aaa
jg
ja
mov
pop
mov
cmp
and
mov
ljmp
and
insb
fcomp
mov
inc
push
rcl
and
popa
gs
test
jmp
and
cmp
inc
cmp
sahf
insb
ds
repz
dec
jne
stc
pusha
jmp
outsb
sbb
push
adc
mov
rcll
push
fcoms
enter
lds
inc
push
aad
push
test
jle
enter
in
dec
jae
test
shl
sub
ret
fists
sub
xchg
push
cmp
ficompl
cmp
enter
sbb
fs
cmpsb
les
movsl
sub
cmp
or
in
sti
in
add
icebp
movsb
push
mov
cs
push
cmp
inc
add
incl
out
shrb
lea
cmp
icebp
jns
mov
mov
push
mov
je
cmp
lods
in
sub
stos
out
insb
loope
sub
push
shll
add
add
add
push
fdivrl
pop
xchg
aas
or
fisttpl
or
jo
ljmp
pop
push
dec
dec
out
jbe
inc
mov
jle
fildl
out
xchg
mov
mov
jbe
xor
out
data16
jb
and
fists
add
sub
popf
lods
sub
jl
lahf
imul
push
add
jb
incl
ret
cli
sub
xor
fs
mov
xchg
mov
movsb
inc
and
aas
ret
ret
lods
out
imul
outsl
push
mov
mov
in
sbb
jle
cltd
xchg
push
push
mov
divb
jno
fimull
daa
jae
test
pop
sub
jno
xor
scas
sub
mov
or
in
push
pusha
jg
int
jae
pushl
lods
jmp
subl
test
cltd
scas
push
mov
pop
aad
aas
pop
inc
mov
xchg
xchg
ret
and
int
mov
es
loope
jne
and
dec
pushf
fsubrl
loopne
inc
imul
call
mov
pop
push
stos
rorl
pop
push
loopne
mov
outsl
cltd
lds
dec
stos
test
mov
xor
sti
adc
xor
sub
pop
test
rorb
mov
lret
cmpb
loopne
test
mov
push
lea
ljmp
cltd
test
sarl
and
dec
sbb
jae
cmp
imul
test
mov
nop
add
jae
daa
inc
mov
mov
dec
mov
push
pop
sbb
aam
pop
sbb
nop
and
sbbl
xchg
mov
sub
out
mov
jecxz
jl
mov
push
xchg
pop
dec
adc
imull
lret
fcomp
and
inc
int
mov
push
stos
sbb
mov
lret
inc
pop
cmp
pop
out
or
and
pop
mov
popf
push
test
in
fnstenv
adc
clc
idivl
int3
push
mov
mov
jecxz
stc
das
call
mov
mov
ret
jl
sbb
leave
roll
scas
cmp
je
mov
int3
test
repnz
add
mov
mov
jo
sbb
adc
or
imul
icebp
add
cmpb
es
sbb
add
iret
add
cmp
ss
das
xchg
mov
orl
dec
mov
cmpsl
pop
lods
rcrb
mov
je
out
int3
ja
xchg
ljmp
xchg
loop
or
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
mov
fmuls
mov
pop
arpl
shll
les
aas
adc
subl
push
pop
rol
mov
adc
or
in
repnz
pushl
stos
in
xor
mov
sahf
mov
mov
mov
pop
adc
nop
dec
lds
inc
scas
add
pop
dec
incb
aaa
sub
ret
dec
cmp
addr16
push
mov
pop
leave
imul
xor
out
nop
ja,pn
test
dec
test
mov
loope
je
dec
cmp
sbb
push
cmp
cmc
outsb
and
cmpsl
mov
into
xor
ja
iret
fisubrl
gs
aaa
mov
cli
pop
sbb
outsb
xchg
lods
xlat
mov
je
inc
mov
and
inc
jnp
loop
cld
in
fsubl
xchg
push
mov
mov
xor
nop
sub
pop
clc
ud0
lds
sbbw
outsl
fucomip
into
mov
jmp
jne
call
adc
mov
int
jl
sbb
outsb
cmp
call
addl
iret
sub
push
in
jge
in
sti
iret
loope
sub
subb
sub
jge
xor
leave
ficomps
adc
xchg
mov
inc
push
adc
ds
clc
sub
out
fiadds
test
and
mov
daa
das
push
push
ljmp
push
hlt
imull
xchg
rol
mov
add
scas
pop
cltd
loopne
loope
sbb
inc
loopne
ds
sub
insl
and
add
xorb
mov
andl
mov
ficoml
in
rcll
or
jae
dec
loopne
insl
add
sub
out
mov
cmp
in
sahf
mov
jecxz
jl
xor
or
das
push
and
icebp
mov
cmp
ss
call
pop
cmp
jo
loope
sbb
inc
inc
adc
mov
imul
sub
clc
rcrb
rcll
arpl
pop
xchg
fisubrs
int3
jge
add
outsb
ret
arpl
dec
rorl
and
pop
and
test
repnz
lock
out
cwtl
repz
mov
pop
cs
inc
out
divl
jge
xor
ret
clc
sub
sarl
xlat
imul
cli
out
xchg
mov
addr16
daa
jo
fistpll
iret
and
repz
or
nop
pop
movb
adc
and
sub
loop
sub
jno
push
lods
cmpsb
pop
push
daa
scas
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
lods
or
lret
jo
jle
jo
dec
mov
rol
loope
lea
popa
adc
shr
repz
mov
test
or
shlb
fs
call
int
mov
cwtl
arpl
push
stc
aam
dec
int
data16
dec
testl
aas
jns
add
xchg
adc
lcall
and
pop
gs
xor
mov
out
or
mov
int
mov
dec
xchg
add
xor
inc
push
xchg
adc
repnz
mov
in
xchg
push
incl
add
mov
jmp
xor
loopne
inc
pusha
xor
dec
das
mov
scas
xor
mov
or
sbb
xor
adc
or
and
xchg
dec
dec
xlat
inc
or
out
sti
jg
and
lods
loopne
lahf
sub
mov
cld
loopne
dec
push
rorb
ret
ficoms
les
inc
push
pop
scas
dec
mov
pushf
scas
daa
fildll
adc
in
push
in
mov
xchg
add
mov
ficompl
enter
xor
push
les
dec
mov
into
add
movsl
sbb
int
adc
adc
add
js
ret
jmp
xchg
mov
repnz
xchg
sti
jg
leave
fsubs
jo
iret
repnz
outsl
ss
aas
fcomps
push
dec
jg
add
push
popa
push
ja
hlt
pcmpgtb
xchg
xchg
jbe
mov
push
fwait
idivl
jp
push
or
xor
push
insb
bound
ret
mov
push
mov
mov
in
icebp
mov
or
outsb
adc
push
and
stos
dec
outsb
cwtl
icebp
dec
xor
push
movsl
or
pop
add
test
jns
inc
mov
push
out
push
lret
push
push
ja
daa
jge
dec
aaa
shrl
out
cmp
jg
sarl
in
sub
xchg
mov
mov
mov
adc
cli
popa
xor
iret
mov
sub
stc
push
dec
mov
xchg
fwait
stc
adc
ds
out
enter
jno
jge
shr
push
test
loop
leave
aaa
jl
jb
add
or
rolb
add
sub
xchg
mov
push
popf
sarl
jmp
int
jne
dec
fcomps
mov
pop
dec
aam
dec
adc
cmp
xchg
popa
pop
adc
dec
sti
sahf
iret
push
loop
add
or
test
roll
scas
push
ja
pop
xchg
pop
rcl
mov
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
xchg
out
adc
jo
jle
jo
fsubl
shll
pop
out
jmp
fnstenv
xchg
xchg
pop
scas
push
in
cmp
mov
fstpt
out
xor
sub
mov
cld
insl
js
scas
sbb
sbb
pop
das
clc
ja
out
push
sub
lcall
mov
xor
mov
les
cmp
call
sbb
sti
in
jno
inc
sub
sub
cwtl
incb
mov
hlt
repnz
das
jle
and
inc
push
outsb
std
outsb
mov
dec
sub
jmp
push
mov
and
popa
inc
mov
jb
stos
ret
cmp
call
sbb
and
in
test
sbb
je
cmc
lret
inc
dec
icebp
pop
dec
pop
cmp
sub
js
enter
push
and
fidivrl
jp
jle
or
pusha
fs
mov
cmp
sub
mov
jb
inc
cs
fstps
inc
adc
movsb
or
sahf
test
insb
xor
and
cmc
push
fs
push
push
sub
ljmp
add
imul
mov
cmpsb
decb
jb
dec
mov
inc
mov
cli
cmp
sub
test
jle
ja
inc
cmp
or
ret
mov
add
mov
inc
inc
xchg
or
and
sbb
mov
popa
or
mov
push
add
jge
sbb
cs
mov
mov
and
sub
adc
cwtl
leave
shll
xchg
xchg
sub
sbb
out
dec
jmp
cmp
dec
mov
xor
jno
push
and
pop
sbb
push
into
clc
sub
sbb
fnstenv
popa
jecxz
out
push
and
sub
je
mov
xor
or
xor
jmp
jl
push
sbb
stos
lods
mov
mov
scas
inc
outsl
repnz
jmp
sbb
pop
and
negb
jo
sub
sub
sub
jl
fldcw
movsb
fnstsw
bound
jnp
jp
xor
or
pushf
in
icebp
lds
sahf
jns
mov
int3
mov
out
push
scas
and
movsl
arpl
scas
insl
lock
and
and
movsl
fnstsw
mov
adc
push
or
int
inc
mov
fbld
ja
jp
jns
adc
jp
inc
xor
and
fildl
rcll
aas
jp
lret
pop
and
lahf
fcoms
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
shr
jns
adc
mov
push
iret
cmpsb
insb
int3
jecxz
orb
inc
test
sbb
shll
dec
fs
mov
repnz
rorl
xor
ja
or
adc
dec
xor
test
cmp
mov
out
and
sbb
pop
adc
jo
pop
popl
jb
or
or
leave
lods
mov
in
fisubl
scas
mov
jle
in
fcomp
mov
sub
sbb
push
or
adc
lock
mov
scas
add
int
repz
lret
mov
xor
cmova
inc
ficomps
cmpsl
cmp
pop
mov
push
pop
bound
push
hlt
jle
pop
stos
jmp
jge
cs
nop
cli
cmp
sbb
sub
stos
inc
call
and
lcall
inc
sahf
stc
mov
xchg
sub
arpl
push
cli
in
sbb
push
sbbb
and
push
xchg
xchg
dec
aaa
mov
bound
push
aas
mov
jo
sahf
xchg
push
push
xchg
push
pop
aaa
sbb
xchg
repnz
pop
xchg
lahf
in
jnp
bound
fs
jle
out
test
jle
xchg
enter
sub
push
bound
mov
xor
cmp
pop
or
sbb
mov
cmp
fimull
xchg
push
das
movsl
push
and
xlat
mov
enter
dec
int
xchg
sti
bound
mov
mov
stos
inc
jne
adc
cmp
jg
out
imul
add
mov
push
inc
scas
push
and
inc
in
in
repnz
fiaddl
mov
jmp
pop
and
mov
mov
outsl
and
fdivr
out
js
sbb
mov
in
das
int3
les
aad
daa
sbb
sub
or
push
dec
jne
imulb
ret
lods
int3
mov
loope
xchg
jl
out
inc
adc
scas
jle
jnp
stos
les
xor
in
enter
loope
mov
xor
repz
ret
push
mov
aas
cwtl
inc
cmp
cli
fsubrs
jmp
xorb
or
popa
lods
xchg
aam
cli
sbb
pushf
mov
xlat
sub
push
clc
adc
data16
into
sbbl
test
testb
jnp
call
shr
cli
jmp
stos
mov
test
pop
mov
or
adc
jmp
pop
sub
movsl
in
jp
stc
inc
xor
ljmp
xchg
jmp
cmc
std
fs
jno
mov
sub
cmpsb
rep
pop
jg
mov
xchg
andl
push
lds
inc
outsb
loope
int3
cmpsl
arpl
loope
xlat
mov
icebp
andb
std
in
or
pusha
lds
inc
sbb
pop
push
mov
cs
scas
adc
jne
jmp
dec
mov
pop
stos
testb
nop
mov
mov
mov
and
xchg
pop
loopne
cmpl
pop
xor
in
jle
fs
xor
imul
xchg
hlt
sbb
scas
imul
out
add
push
xchg
aad
push
out
fs
fcos
ret
xor
mov
push
mov
pop
shr
shrb
cs
add
push
push
jg
jle
loopne
rorl
das
cmpsb
data16
dec
or
lds
dec
push
shl
pushf
ss
bound
jo
dec
jae
pop
or
in
loop
data16
pop
jge
stc
dec
ljmp
sahf
xchg
push
push
es
pop
sbbl
mov
jb
movsl
mov
fadds
imul
jle
pop
fs
push
sarl
les
test
and
loopne
fs
popa
int
sbb
stos
dec
jnp
jecxz
pop
mov
adc
fiaddl
inc
pushf
push
jb
push
pop
hlt
iret
push
in
je
mov
cltd
mov
gs
jno
inc
iret
leave
mov
jb
cwtl
cmp
pop
add
xor
jl
mov
inc
mov
jb
cld
jno
mov
sahf
mov
shrb
hlt
aaa
imul
imul
leave
add
mov
insb
outsl
inc
inc
and
and
adc
xchg
into
dec
inc
rorb
rcrl
std
and
pop
cmc
cwtl
pop
mov
push
mov
dec
jae
das
std
icebp
pop
fmul
push
mov
movsl
aad
push
mov
xchg
pop
pop
out
and
mov
jbe
pop
fstl
sub
bswap
rcrl
mov
aad
aad
xchg
add
loopne
cmp
mov
jge
ret
in
mov
add
les
bndstx
out
movsl
sarb
adc
xchg
imul
mov
xor
mov
or
dec
popf
test
mov
mov
pop
and
push
sahf
out
icebp
mov
movsb
jle
push
inc
and
negb
xlat
popa
je
sbb
pop
mov
imull
cltd
pop
adc
repnz
pushf
dec
cmp
subb
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
adc
mov
jo
jle
jo
cs
cs
jns
jmp
fistpll
push
callw
fs
les
repnz
or
sbb
scas
or
xor
or
addr16
push
fidivrs
xchg
mov
xor
or
xor
lods
xchg
mov
ss
mov
mov
call
dec
dec
lock
mov
jbe
mov
pop
shlb
js
and
cltd
mov
in
imulb
popf
data16
lret
int3
into
push
int
ljmp
inc
out
insb
adc
in
movsl
icebp
subl
sbb
pop
mov
inc
pop
push
add
push
out
push
pop
mov
add
pop
adc
cmp
jo
bound
es
sbb
jl
lcall
pop
gs
xor
imul
mov
push
out
fstpt
fdivs
popf
cld
adc
dec
loop
in
ja
aad
loopne
stos
ret
push
push
push
xchg
ja
mov
ret
jg
cmp
sub
out
mov
sahf
or
or
iret
add
jecxz
lds
cwtl
add
in
fisubl
cmpb
ret
sbb
fistpl
sbb
fwait
cmc
jo
jle
pushf
cmp
add
cmp
push
jno
inc
add
out
add
out
in
adc
mov
fwait
push
push
mov
pushf
clc
daa
in
push
push
adc
inc
imul
add
mov
mov
or
fyl2xp1
movl
mov
scas
mov
sbb
and
adc
gs
jp
jge
ss
mov
repz
cmp
int
ret
pop
cli
cltd
mov
and
jle
data16
mov
mov
call
dec
sahf
mov
sbb
mov
pop
push
pop
in
xlat
pop
js
adc
leave
das
xchg
test
aaa
shl
mov
sub
imul
xchg
adc
or
int
push
xchg
rcrb
mov
lods
or
dec
inc
dec
push
cmc
and
test
out
mov
or
loop
mov
ss
xorb
nop
stos
pop
xlat
fcmovnu
sbb
mov
pusha
pop
pop
pop
je
orl
pop
addr16
push
out
push
jmp
repz
in
sbb
rcrl
pop
addr16
sahf
arpl
aas
push
dec
sbb
add
xorl
je
add
orb
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
fcmovne
test
aaa
sbb
mov
rcrb
xchg
out
stos
rcll
mov
test
dec
cmpsb
iret
mov
pop
xchg
cmp
int
ljmp
test
or
dec
outsl
adc
shrl
out
sub
js
sub
adc
sub
pop
sarl
fdivr
cs
jb
sbb
in
mov
in
mov
clc
jae
add
jge
xor
push
dec
dec
repnz
pop
mov
shll
imul
addr16
mov
mov
mov
std
out
pop
pop
jae,pt
test
scas
lods
jl
mov
mov
push
pop
js
ljmp
out
mov
movsb
je
test
xchg
sti
aas
pushf
xor
data16
repz
stos
jno
push
pop
cmpsl
push
pop
mov
add
cmp
jmp
inc
sbb
xlat
jecxz
jge
sti
gs
sbbl
int
mov
aad
push
cmp
int3
or
mov
and
add
les
lods
mov
jb
push
imul
jb
jmp
xchg
push
sbb
sahf
pop
cmc
cmp
inc
add
mov
outsl
cmp
in
daa
pusha
into
lcall
mov
in
es
fs
mov
or
icebp
and
pop
cltd
add
in
inc
jae
add
leave
fwait
add
mov
adc
mov
rol
inc
mov
dec
push
sub
jnp
push
daa
out
sbb
adc
popa
shl
out
mov
sub
mov
lods
jb,pn
pushf
test
mov
pop
es
pushf
scas
clc
fxch
ss
fidivrl
pushf
jmp
in
fnstcw
push
or
adc
in
inc
sub
cmp
sahf
fnstcw
imul
enter
push
xchg
data16
movsl
addb
sti
sub
xlat
fisttpl
repz
dec
dec
push
xchg
cmpsl
out
mov
adc
adc
data16
jno
mov
cmp
push
dec
outsb
xor
aaa
int3
sti
imul
pop
out
jns
xchg
xchg
outsb
mov
repz
dec
jae
stos
cld
push
cmp
mulb
push
jl
pop
fsts
sbb
outsb
xorl
clc
lcall
sbb
or
cmp
xor
mov
jne
cmpsb
shll
mov
mulb
dec
cmp
adc
sub
lea
xor
pop
xchg
clc
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
jnp
lret
out
jo
jg
mov
stc
sbb
lahf
cmpsb
jge
rcll
cmp
cmp
push
ljmp
je
ds
mov
fadds
jno
pop
movsl
sbb
dec
cmpsl
iret
xlat
stc
shll
inc
test
dec
pop
and
cmpsb
fldenv
daa
je
xchg
xchg
outsl
sub
adcb
mov
les
rclb
cwtl
xchg
inc
icebp
fnsetpm(287
fwait
sahf
repz
cmp
cli
sbb
mov
imulb
add
and
pop
mov
iret
xchg
icebp
mov
in
push
enter
repnz
sub
into
std
insl
mov
repnz
out
out
lock
mov
and
fbstp
ja
push
mov
cli
andl
add
je
mov
movsl
cmp
pmuludq
push
dec
addl
lods
jae
mov
mov
clc
xchg
adc
xor
pop
clc
dec
fsubrs
dec
in
rcll
ds
and
into
mov
mov
pusha
pushf
in
aas
jg
out
mov
in
jo
bound
in
int
iret
inc
fisubs
stos
adc
mov
sub
fimuls
pop
mov
mov
push
jb
push
loopw
imul
loopne
test
in
jbe
ja
xchg
xchg
add
mov
xor
sti
xchg
add
outsl
imul
sbb
add
ljmp
or
add
fs
cmpsl
mov
cmp
in
jb
push
fisubl
mov
add
aaa
popa
and
fs
lods
xchg
jo
jmp
inc
pop
out
mov
nop
pop
scas
movsl
mov
push
incb
sub
xchg
lods
add
imul
and
mov
mov
cmpsb
sub
or
pop
xchg
jg
xor
and
mov
sti
test
push
in
and
add
push
pushf
mov
xchg
mov
int
cmp
jp
push
insb
sbb
pop
sub
mov
jl
imul
sub
mov
push
lods
sub
jnp
nop
jb
xorl
rcr
pop
jb
popf
add
cli
jmp
data16
add
pop
sub
pop
test
lods
fistl
dec
add
xchg
inc
jge
hlt
in
mov
fsub
das
out
popa
push
xchg
lahf
popa
sahf
scas
in
jne
fstl
bound
test
jno
imul
pop
lahf
lds
mov
push
cmc
icebp
mov
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
fisttpl
mov
jle
jo
jmp
aam
cmpsl
fldcw
adc
std
icebp
sbb
inc
pop
arpl
push
adc
sbb
sarl
inc
mov
mov
xlat
add
hlt
test
sbb
mov
mov
fsts
and
push
outsl
imul
and
cmpsb
bound
shr
arpl
std
orb
inc
movq
dec
push
jp
xor
jbe
and
loop
mov
dec
pop
leave
adc
fwait
mov
push
and
push
insl
mov
les
pop
dec
xchg
rclb
insl
inc
or
movsl
aas
mov
jp
aad
jmp
jne
mov
sbb
mov
fidivs
popa
sub
jmp
push
pop
es
daa
mov
mov
xor
adc
lods
jmp
call
sbb
push
aaa
inc
adcb
cmp
lcall
and
std
ret
push
and
daa
inc
stos
lcall
pushf
jne
cmpl
jmp
mov
test
outsb
sbb
out
repz
outsl
adc
incb
ret
fistps
cwtl
cwtl
cpuid
or
push
pop
pop
popa
loop
dec
inc
push
xlat
push
mov
test
leave
or
inc
push
inc
fstpt
jae
jno
sti
lret
cwtl
push
and
cld
fs
pop
xchg
popa
dec
xor
mov
push
jns
lods
cmp
mov
xchg
shl
cmpb
pop
pop
push
xchg
mov
xor
stos
adc
fistps
lret
and
out
and
cmp
scas
mov
jns
test
pop
ljmp
je
out
lahf
loop
jmp
testl
nop
sub
lahf
sbb
leave
test
cmp
xchg
ds
add
stos
shrb
mov
push
inc
icebp
mov
stc
mov
sti
repz
or
inc
mov
fdivl
or
decb
adc
cli
loopne
mov
cs
outsl
add
mov
out
sahf
mov
mov
aas
cmp
and
divb
scas
shl
js
lods
mov
leave
mov
sub
xor
jle
pop
inc
adc
ja
in
pop
mov
fisttpl
add
fisubrl
fwait
ret
fwait
ds
jle
movsb
xchg
mov
mov
mov
pop
jecxz
dec
jno
sub
out
or
xchg
aad
pop
add
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
