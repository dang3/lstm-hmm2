push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
ret
ja
dec
or
xchg
mov
jmp
xlat
sahf
adc
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
add
cmp
pop
pop
mov
mov
dec
rcll
push
add
mov
mov
pop
stc
push
cmp
jo
cmc
and
jno
fcmovnbe
lret
dec
insl
sbb
and
leave
hlt
les
movsl
cmp
inc
jns
mov
roll
imul
in
cltd
jg
or
std
movsb
das
add
data16
pop
imulb
mov
faddl
shrl
jmp
out
leave
or
xor
jb
in
ljmp
icebp
lcall
icebp
inc
lock
mov
stos
stos
dec
push
test
leave
mov
pop
or
incb
in
push
dec
sarb
jle
and
fisttps
inc
aaa
cmpsl
pop
test
adc
inc
incl
push
push
aam
xchg
push
negb
adc
pop
not
dec
movsb
cltd
cmpsb
fcoml
adc
rol
push
out
lock
pop
cmc
movsl
mov
jecxz
jecxz
xchg
mov
fadd
or
pushf
or
inc
xchg
xorl
push
jmp
filds
int3
mov
sbb
sahf
cwtl
mov
je
sbb
inc
cs
inc
or
aas
imul
loop
mov
sbb
and
dec
mov
mov
pushf
out
cmpsb
add
sub
out
push
mov
cwtl
std
les
adc
cmc
nop
pop
dec
leave
addr16
roll
test
sti
push
shlb
pop
dec
mov
push
push
in
push
cmp
mov
cmp
hlt
push
and
sub
ss
jle
mov
adc
mov
mov
mov
cmp
jae
outsb
imul
stos
mov
pop
loopne
hlt
stos
mov
test
mov
cmpsl
hlt
or
and
cli
or
je
jle
adc
push
jae
jmp
pop
adc
pop
or
push
add
xchg
ds
dec
addr16
jmp
mov
mov
lock
mov
outsb
bound
sbb
cmp
daa
cmp
jg
pop
bound
xor
sub
mov
shll
loopne
stos
sar
or
adc
aam
xchg
and
mov
pop
call
pushf
outsb
dec
adc
dec
into
lods
cli
or
ja
xor
push
arpl
mov
cld
movsl
or
lods
push
push
jo
sar
movsb
pop
insb
fcomps
or
xchg
jae
pop
std
cmpb
push
shlb
lds
cmp
push
repnz
cmp
imul
arpl
inc
sub
stos
fidivrl
ljmp
jb
leave
fimuls
les
out
dec
xchg
pop
incb
mov
mov
jmp
xor
dec
sbb
or
sub
jp
lods
fs
nop
mov
and
jg
and
sub
sub
rorb
in
cmp
dec
xchg
leave
pop
test
adc
add
test
add
adc
pop
inc
test
fnstsw
rorl
popf
out
xchg
shlb
in
pop
mov
adc
mov
pop
mov
jnp
mov
xor
es
cmp
enter
stos
loope
imul
mov
cmpl
sti
out
iret
imulb
xorb
inc
lret
mov
adcl
shll
mov
outsl
inc
je
xchg
das
cld
pushf
jecxz
mov
mov
jmp
fadd
add
adc
jne
push
xor
dec
lds
mov
shlb
mov
mov
icebp
data16
ss
shll
add
jnp
xchg
ret
sahf
cmp
insl
sahf
lret
leave
cld
sub
mov
sarb
jge
popa
out
dec
jecxz
pop
mov
cmp
xor
push
rcll
mov
xchg
push
cmp
xor
pop
cmp
push
andl
ljmp
or
shll
fcomp
adc
xlat
sbb
and
and
cld
inc
or
into
sub
pop
rolb
fistpl
and
loope
iret
aam
sti
inc
jl
int
mov
mov
or
mov
loope
leave
sbb
cli
clc
into
pushf
movsl
scas
insb
lods
push
ss
imul
push
ret
outsl
inc
out
test
divl
int
mov
leave
repnz
jmp
fwait
in
lods
xor
pop
jge
jno
or
inc
push
aam
xorl
add
test
out
or
lods
xchg
cmc
je
or
xchg
or
sbb
xchg
jp
fadds
mov
mov
jmp
cwtl
cmp
mov
xchg
xorl
and
imul
repnz
push
js
push
cmp
outsb
lods
sbb
jecxz
xchg
and
test
jmp
inc
fdivs
jecxz
xchg
lea
aas
cltd
pop
or
xor
ficompl
rcll
outsl
xchg
call
xchg
push
vmaxps
mov
push
add
mov
enter
mov
cmp
dec
fs
push
pop
adc
movb
or
in
mov
ss
aad
mov
icebp
ss
xchg
shlb
sbb
dec
xchg
mov
mov
bound
testl
iret
mov
cmpb
mov
or
add
sbb
inc
cmp
add
fwait
mov
push
inc
stos
cwtl
sbb
fcoml
jnp
shlb
jp
ffreep
push
jp
inc
in
sbb
out
cmp
aam
lea
mov
lods
push
jae
pop
push
push
insl
adc
adc
dec
mov
push
ror
mov
sbbb
cmp
push
xchg
xchg
dec
lds
movsb
out
sub
xor
sbb
sbb
cmp
mov
cmp
shll
movsbl
fdivs
dec
mov
mov
xor
add
or
call
sahf
sbb
sarl
aas
gs
push
pop
aam
pop
xor
pop
in
lods
mov
scas
nop
mov
test
or
aad
jnp
inc
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
stos
jo
xchg
nopl
pusha
faddl
dec
sub
insl
lahf
filds
out
pop
pop
xchg
xchg
jne
pop
aad
cltd
repz
inc
mov
hlt
sub
sub
imul
sarb
xlat
sbb
popf
fadds
mov
pushf
stos
sub
enter
sbbb
mov
ficoms
daa
fcompl
js
ss
insl
lcall
mov
inc
lahf
xorb
mov
fwait
inc
or
push
sub
sti
mov
xchg
fcmovne
push
cs
call
xchg
out
enter
dec
mov
lret
scas
push
les
mov
stc
hlt
jge
fisttpl
pop
jno
in
imul
push
or
mov
cmp
js
out
cltd
scas
in
push
mov
cltd
xchg
and
jbe
aas
test
pop
rcl
addr16
adc
cltd
lcall
jge
bsr
push
push
cmpsb
inc
sub
jl
push
or
out
addl
cwtl
mov
cmc
repz
orl
jno
lret
pop
test
aas
pop
aas
mov
jecxz
call
or
dec
push
fmulp
inc
ret
inc
push
push
push
in
rcr
pop
dec
sti
arpl
pop
lret
imul
sbb
xor
or
das
pop
int3
mov
mov
call
dec
lret
push
lret
notl
out
sbb
ret
xor
mov
or
out
aas
mov
cmpsb
mov
cmp
arpl
and
neg
dec
adc
or
dec
xchg
out
inc
repnz
aaa
test
in
jecxz
andl
pop
mov
push
fists
dec
xor
ljmp
mov
mov
fs
push
dec
xor
xchg
fnsave
lock
mov
lea
movlps
movsb
sub
scas
xor
in
mov
add
dec
cmp
arpl
fisttpl
imul
xor
data16
xor
mov
rorb
fisubrs
cmpsl
imul
cmp
ja
repz
adc
fistl
aad
out
popf
and
cmc
rorl
cs
in
pop
pop
subl
and
mov
sub
adcb
sub
push
rclb
mov
pop
mov
into
cmp
les
xor
pop
loope
in
fldl
mov
ret
mov
decl
add
jno
lods
movsb
pop
test
mov
ret
lret
lret
scas
iret
sub
mov
xchg
pop
inc
incb
and
pop
jns
icebp
leave
dec
repnz
das
cmp
ja
jmp
add
sbb
dec
out
jle
mulb
xor
xlat
gs
mov
sbb
cld
ds
nop
out
mov
mov
inc
ret
jo
popf
mov
adc
dec
das
dec
mov
call
rcll
daa
pop
push
lds
sahf
test
lock
xchg
xor
into
cli
cs
inc
mov
sub
inc
cmp
popl
imul
adc
lds
pop
mov
jl
and
mov
jnp
push
ret
xchg
adc
cmpsb
shlb
hlt
mov
sub
jl
push
pop
push
lret
sub
mov
scas
sbb
pusha
cld
pop
lods
rclb
test
and
mov
lds
imul
aaa
insl
mov
xchg
mov
jae
leave
test
xchg
push
mov
xor
out
mov
xchg
mov
mov
mov
ds
cwtl
int3
mov
imul
sarb
inc
dec
mov
jae
test
jns
cmp
adc
leave
bound
sub
iret
fsubrs
mov
adc
cmp
pop
xor
test
leave
pop
mov
rcrl
mov
xor
inc
adc
adc
mov
daa
daa
xor
aaa
push
jae
fsubr
jb
fbld
in
ja
xlat
push
sub
mov
or
ljmp
dec
pop
jno
and
push
lret
xor
mov
jo
mov
cltd
adc
dec
pop
out
nop
dec
dec
aaa
push
lds
push
xor
movsl
sbb
ss
dec
gs
xchg
mov
mov
mov
cmp
dec
xor
in
cmp
jae
fldt
fists
lock
out
and
scas
fwait
mov
mov
jns
mov
imull
cli
jl
add
push
lods
jp
dec
ja
pop
dec
dec
addr16
sbb
pop
out
out
mov
pop
cmc
mov
jae
push
hlt
dec
aaa
insb
mov
push
outsl
jmp
mov
jnp
and
pmullw
jb
xchg
pop
or
mov
xchg
xchg
xchg
in
inc
out
loopne
mov
daa
rclb
adc
or
jns
cmp
adc
fsubl
dec
mov
fwait
push
outsl
sub
insb
inc
lods
xchg
sub
pop
jmp
ror
push
xor
jg
mov
jecxz
ljmp
mov
mov
mov
sub
sub
mov
mov
bound
inc
fldt
out
push
adc
lds
mov
popf
cs
xchg
pop
add
mov
out
or
mov
stos
andb
movsb
ds
clc
fiaddl
cmp
jecxz
lret
frstor
jmp
cmc
aam
and
inc
ret
fsqrt
mov
ret
imul
loope
lea
addr16
insl
add
ss
pop
in
sbb
mov
cmp
sub
test
loopne
outsb
cli
and
stc
mov
lret
dec
inc
push
imul
cmp
mov
fnstcw
push
or
iret
repnz
out
int
xchg
lods
orl
mov
xor
aad
mov
xchg
jecxz
add
ret
clc
ja
popf
into
pushf
out
xchg
lds
push
leave
adc
pusha
les
scas
es
add
add
xor
out
outsb
mov
mov
jno
cli
js
mov
add
dec
xchg
sbb
push
inc
cmp
clc
and
insb
push
adc
pop
mov
xor
andl
push
push
popf
fisubs
sub
pop
rcll
inc
out
mov
fld1
test
in
inc
aaa
sbb
scas
mov
int
sbb
fldenv
mov
cmp
sahf
sbb
lock
sbb
push
push
popa
jmp
imul
lret
jecxz
adc
xor
and
and
int
mov
xchg
movsb
clc
jne
cmp
cmpsb
pop
mov
push
ret
push
pop
push
jae
sbb
jno
cli
xor
sub
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
into
popf
aam
and
ja
fwait
cmpsl
pop
cltd
mov
dec
jecxz
cs
testb
adc
sti
shl
lods
pop
in
dec
stos
jnp
sti
and
inc
cmp
sbb
mov
push
sbb
sub
pop
and
std
popf
fsts
xlat
adc
pushw
imul
adc
mov
cld
sub
mov
push
ret
insb
popf
cmp
int3
mov
pop
xchg
fidivrl
mov
mov
movl
lcall
jecxz
lea
cmpl
dec
test
les
sbb
das
imul
fcompl
xor
sub
lret
fcmovnb
mov
lods
lea
das
int3
jns
mov
addl
lcall
push
mov
jecxz
out
lock
pushf
pop
fisubrs
cmp
lsl
cmp
push
adc
cmp
sbb
test
in
jnp,pn
and
sub
leave
xorb
ds
pop
mov
andl
mov
xor
jmp
inc
ret
cld
clc
mov
adc
add
jae
fmull
insb
aaa
mov
nop
ljmp
add
cmp
cmp
shrb
popf
outsl
pop
xorb
mov
or
sbb
int
add
mov
test
jecxz
mov
push
jo
ss
leave
jg
cmp
test
loope
cmc
mov
aad
sbb
shr
test
les
sbb
dec
xchg
das
test
or
inc
shrb
test
push
dec
out
ss
shll
stc
sub
lret
movsl
loop
in
pop
lock
out
pop
shl
addr16
pop
ficoml
inc
addr16
arpl
cmp
jae
pushf
mov
stos
jl
cmc
sarb
rclb
test
enter
pop
pop
inc
cmpl
mov
ret
mov
pop
jg
fisttps
shll
pop
push
inc
sub
or
jne
cmp
in
data16
push
inc
mov
outsl
sti
cli
aaa
vmwrite
lahf
sub
test
pop
jbe
pop
dec
push
insl
filds
xchg
mov
cmp
dec
cmp
iret
fistpl
les
lret
add
mov
cs
jecxz
scas
in
test
xor
pop
in
inc
pop
push
jge
mov
fisubrs
movsl
sub
dec
jns
arpl
or
call
sub
adc
mov
xor
cli
inc
aaa
lcall
ja
ret
das
cmp
dec
push
add
cld
inc
push
mov
xchg
mov
cwtl
lock
nop
add
push
fwait
into
cmp
repnz
lods
push
and
mov
mov
aam
jle
sub
jne
push
or
pop
inc
test
mov
int
pop
test
pop
fdivl
out
xchg
leave
cmp
dec
sbb
jno
inc
lea
popa
cltd
sbb
jbe
outsl
and
cwtl
sub
dec
scas
dec
or
andl
push
and
and
lods
lds
sub
fwait
sbb
das
std
enter
dec
push
mov
in
in
inc
xchg
and
rorb
ljmp
jbe
cmp
dec
add
push
insl
ret
xchg
sub
jle
mov
xor
pushf
jae
neg
rcll
rcrb
cltd
xchg
test
sub
repz
mov
pop
dec
cmp
cmp
cmp
or
xor
in
lds
lods
dec
imul
or
jmp
stc
push
mov
outsl
mov
aaa
in
mov
fnstcw
dec
loopne
dec
push
ret
loope
bound
std
daa
lcall
push
insl
sbb
fdiv
dec
xchg
and
add
stos
test
test
push
jae
cmpsl
adc
jmp
add
push
sbb
leave
and
pusha
lds
js
shrd
cmpsb
stos
add
sbb
push
outsl
mov
aam
dec
fs
mov
mov
testb
push
data16
shll
jne
popf
xor
dec
out
sbb
fs
rcrl
push
jg
sbb
jns
popf
hlt
imul
jns
test
out
sahf
repz
lret
jp
je
adc
out
sahf
stos
add
push
or
or
mov
inc
jbe
ret
or
pop
stc
test
negl
stos
rcrl
icebp
add
lcall
sbb
mov
rcll
inc
decl
cmc
lods
daa
xchg
cmp
sub
leave
arpl
dec
movsb
out
jns
jmp
jecxz
rorb
popf
cld
xchg
cmpsb
cmc
es
out
mov
movsl
jb
daa
or
and
and
mov
xchg
scas
jae
inc
jno
add
dec
xor
pop
dec
push
jne
loop
adc
or
xor
test
and
pop
lea
sub
jae
sahf
stc
xchg
arpl
filds
mov
dec
fcmovu
dec
jg
lfs
push
jg,pt
add
or
sub
mov
push
js
aas
js
insl
mov
mov
call
std
inc
sbb
in
mov
mov
xchg
insl
stc
ds
test
cltd
mov
sub
fadd
test
aas
mov
loopne
sub
dec
push
sbb
bound
pusha
or
mov
xor
and
push
arpl
xchg
mov
in
push
std
mov
rolb
addl
jnp
xchg
sbb
out
sbb
cmp
loope
icebp
ret
jle
mov
mov
jne
shl
icebp
hlt
test
stos
xchg
rcll
repnz
push
dec
movsl
inc
aaa
cmpsl
inc
popf
into
sub
das
scas
inc
nop
fsts
mov
jp
rorb
mov
test
cmpsb
popa
push
push
repz
cmp
mov
xchg
out
jecxz
mov
sbb
fldenv
jo
sub
inc
mov
mov
insl
lods
lods
scas
mov
xor
or
mov
sti
in
mov
and
inc
jg
push
push
jb
stc
or
xlat
cmp
pop
push
xchg
enter
mov
outsb
fisttps
xchg
leave
daa
dec
jmp
pushf
mov
mov
out
cltd
aam
and
dec
pop
mov
jns
xchg
cmpsb
jns
test
jno
xor
xor
leave
adc
rcr
imul
test
xchg
inc
xchg
pop
jmp
pop
inc
mov
cltd
addb
in
test
test
sub
mov
xchg
insb
lds
aas
sub
xor
and
int
int
fisubs
mov
popa
inc
ljmp
xchg
pop
mov
xor
mov
cwtl
inc
mov
mov
xchg
push
ja
mov
repnz
mov
movb
pusha
push
sbb
xor
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
push
clc
test
cwtl
out
ja
cmp
ret
clc
cmc
mov
xchg
mov
cmpsl
mov
mov
cwtl
mov
add
enter
pop
pop
pushf
pop
out
int3
jne
int3
ss
movsl
int3
xlat
mov
rcrl
pushf
mov
lock
lea
jp
aas
sti
mov
js
xchg
pop
xchg
daa
aam
jl
out
xchg
push
add
xor
fwait
cmp
sbb
test
mov
lea
mov
mov
pop
pushf
movsl
inc
xchg
stc
pop
push
adc
mov
fdivp
dec
dec
fcmovnb
inc
repz
negl
imul
adc
xor
pop
pushf
lods
mov
push
scas
iret
loopne
xchg
pushf
and
nop
mov
sub
inc
icebp
push
or
test
fs
test
jle
pop
mov
mov
add
lret
pop
ds
push
or
das
pop
pop
sub
push
and
inc
or
mov
mov
lods
movhps
mov
jae
or
pop
stos
loop
add
mov
out
inc
adc
pop
orl
jmp
inc
test
and
or
jnp
mov
in
call
ds
inc
daa
fsub
jb
neg
fs
dec
add
stc
stos
adc
test
shlb
inc
dec
cwtl
sub
pop
fisttps
push
or
out
mov
pop
fiadds
inc
pop
xor
cmp
mov
int3
arpl
cmp
sbb
aas
jo
or
out
jo
adc
les
lret
arpl
decl
popa
shl
push
cli
dec
lods
add
xchg
adc
rcrl
cmpsl
jo
mov
sbb
cld
out
sub
fs
aaa
inc
mov
div
fimuls
lock
mov
cwtl
cld
mov
lock
push
fdivl
leave
xorl
ljmp
aaa
pusha
bound
dec
lret
adc
mov
and
scas
push
enter
std
aas
xchg
or
mul
add
int3
jbe
out
jge
ja
sub
fisttpl
outsl
jo
mov
cmp
popf
test
or
les
es
sbb
inc
jnp
fnstcw
and
or
addb
ds
sbb
lret
fdivl
xchg
mov
pop
cmp
movsb
push
pushf
std
nop
enter
or
mov
push
hlt
addr16
dec
push
movsb
sahf
adc
inc
paddw
addb
out
loop
cmp
jge
fsubrl
jo,pn
call
in
test
push
std
leave
dec
inc
pop
and
and
jbe
mov
int3
sub
insb
mov
data16
mov
adc
test
leave
into
aas
and
je
and
jmp
sub
sub
pop
mov
xor
insb
mov
insl
xor
jno
mov
adc
outsl
mov
dec
imulb
lret
inc
pop
jns
fimull
push
jecxz
imul
xchg
xor
lret
test
mov
add
mov
test
jl
jb
fstps
int
and
dec
xor
pop
push
orb
push
out
jo
xchg
ss
movsb
mov
mov
mov
sti
xchg
seto
mov
pop
sub
jle
adc
iret
rol
subb
cmpsl
cld
cmp
cli
sub
leave
test
push
cmc
pop
imul
pop
jno
insb
ret
loop
inc
jno
xor
xchg
mov
jo
scas
leave
pop
push
pop
sbb
repnz
mov
mov
cmp
jl
mov
loopne
sub
adc
fbstp
mov
insl
sbb
aas
loop
clc
dec
leave
mov
jp
pusha
repnz
add
push
cmc
test
cmp
fsub
divb
mov
popf
cmp
cmp
fildl
clc
lods
inc
ffree
rcrl
test
std
jbe
push
jnp
sbb
sbb
sbb
pop
mov
adc
xchg
pop
mov
sti
inc
call
mov
xchg
jae
into
out
cmp
or
fcomps
mov
inc
mov
jmp
push
dec
adc
sub
nop
jmp
add
pop
jns
xchg
adc
addl
xchg
dec
int3
cli
mov
mov
pop
mov
in
sbb
mov
nop
sub
addl
pop
ljmp
sbb
xor
mov
pop
inc
in
add
xor
jne
adc
jmp
xlat
xchg
mov
arpl
clc
xchg
imul
push
mov
roll
sbb
or
lahf
mov
sahf
jg
inc
push
push
ljmp
adc
arpl
or
xor
stc
sbb
inc
fisubl
hlt
dec
pop
icebp
push
inc
dec
jnp
in
fldcw
lods
jne
pop
cmp
mov
cld
int
jg
repnz
cli
jbe
rol
pop
push
fmull
jmp
lods
jmp
cmp
in
mov
push
cli
out
hlt
sub
out
xchg
jb
repnz
push
inc
and
xor
push
jl
inc
clc
pop
dec
pusha
and
mov
imul
adc
imul
xchg
ret
push
outsb
xor
pop
shr
lds
adc
mov
pop
std
add
addr16
cwtl
push
mov
out
cmp
cs
cld
int3
xor
or
shrl
sbb
push
out
add
xchg
jnp
pop
sbb
loope
pop
mov
mov
push
or
test
jne
out
adc
mov
std
mov
lret
sbb
xchg
xor
stos
test
mov
aaa
sbb
mov
xchg
jne
and
dec
fwait
dec
push
loope
jle
xorl
mov
loope
adc
push
ss
subl
mov
or
addl
and
mov
bnd
push
jnp
iret
dec
sbb
push
xlat
adc
aad
nop
cmpl
insb
sbb
repz
mov
sub
clc
shl
add
std
sbb
imul
xlat
mov
outsl
nop
pop
mov
xor
cmp
enter
cmpsb
lods
pop
xlat
push
test
inc
fldenv
pop
xchg
or
ljmp
xlat
jns
std
cmp
xor
or
cwtl
xor
scas
fucomip
mov
fidivl
push
xchg
iret
insb
push
xor
cwtl
scas
aaa
dec
push
push
daa
and
sti
stos
mov
xchg
scas
rol
adc
mov
push
clc
shl
add
arpl
dec
xor
mov
loopne
in
int
int
push
cltd
push
or
mov
fxch
sar
mov
mov
inc
jecxz
das
xchg
jno
adc
jbe
xchg
or
clc
xchg
jl
and
push
push
dec
fidivl
push
mov
pop
push
jmp
pop
or
inc
ret
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
cs
js
aam
ja
push
inc
scas
pop
pop
dec
cmpsb
push
int
test
cld
das
cs
outsb
aaa
cmp
fadds
inc
aas
or
jmp
das
orl
and
cmp
pushf
inc
sub
mov
adc
scas
das
in
cmc
lcall
pusha
mov
xor
mov
cltd
stos
stos
adc
roll
xor
adc
inc
cmp
sub
lods
xor
shlb
stos
cmp
add
cltd
jmp
push
ja
in
sbb
push
push
push
dec
xchg
xchg
subl
lock
mov
and
fsubrp
mov
jp
xor
push
inc
adc
mov
push
mov
mov
das
sub
fidivl
shll
rolb
ret
adc
rclb
test
enter
cmpsl
inc
mov
or
insl
mov
sub
cmp
mov
stos
inc
dec
insl
jle
and
add
push
ja
add
aad
imul
mov
loopne
pusha
pop
and
xor
lea
test
adc
and
shll
pop
sub
adc
or
push
add
add
pop
insb
aaa
cmp
push
dec
xchg
iret
insl
fcmovnbe
xchg
mov
mov
mov
jne
inc
jl
xor
mov
into
mov
sub
push
sub
daa
loope
test
pop
push
lods
mov
mul
xchg
and
mov
iret
adc
add
dec
or
subl
push
pop
outsb
cmp
xor
sbb
add
out
and
or
mov
and
stos
call
adc
mov
repz
pusha
dec
sbb
shrb
pop
lods
icebp
pop
xor
rol
cmp
or
fildll
xchg
das
or
add
add
mov
cmp
rol
cmpxchg
xchg
push
jle
dec
in
insl
inc
test
movsl
cmp
leave
and
aam
fstpt
mov
dec
mov
xor
faddl
xchg
adc
push
out
sbb
xchg
mov
or
add
out
sub
jg
add
std
xchg
jbe
sarl
les
xchg
xchg
fsubrl
mov
mov
pop
popa
xchg
lcall
jns
movsl
xchg
cmp
mov
mov
adc
inc
and
xchg
dec
sub
xchg
sahf
add
mov
loope
mov
icebp
loope
mov
pop
pop
xchg
rcr
lds
xlat
aas
jnp
lods
pop
xchg
mov
pop
add
adc
movsl
lret
xchg
int
sub
icebp
shrl
sbb
sub
ret
lret
push
sbb
adc
dec
out
mulb
sbb
dec
push
test
mov
dec
pop
adc
mov
mov
sti
dec
pop
clc
jae
std
pop
jmp
push
popf
adc
push
fucomp
xchg
popf
mov
mov
adc
aad
dec
cltd
loopne
xchg
int
push
push
mov
incb
jne
into
in
sub
inc
sub
loope
sbb
and
and
xchg
or
loopne
enter
mov
jp
ljmp
sbb
xchg
sbb
sbb
rol
mov
fxch
jl
inc
pop
stc
jle
nop
pop
inc
mov
addr16
jle
mov
ret
lock
push
fs
pop
adcl
or
xor
call
call
dec
nop
shll
sbb
xor
outsl
push
insl
push
pushf
xor
and
mov
mov
je
push
fwait
sti
jg
shrl
inc
movsb
fs
mov
and
add
mov
push
or
mov
sbb
push
mul
pop
out
mov
push
imul
ljmp
in
lock
xor
jno
sbb
and
dec
jae
repz
or
sahf
xchg
test
insl
push
fisttpl
inc
and
cmpsb
and
addr16
clc
dec
lods
pop
sbb
imul
cmpsb
cli
ljmp
loope
lods
fistl
jnp
bound
jns
dec
mov
aaa
cmp
add
jne
xchg
stc
inc
pushf
adc
xchg
arpl
fstpt
inc
xchg
adc
mov
pop
mov
push
pop
sbb
fucomip
das
loopne
jnp
mov
cmp
sbb
out
or
jns
das
lods
push
xchg
popf
ja
or
lea
loopne
std
jb
pop
push
nop
mov
jmp
aad
notb
inc
cld
pop
mov
outsb
pop
jmp
pusha
outsl
ficoms
jbe
pop
pop
pop
dec
mov
imul
xchg
mov
xor
scas
xchg
adc
xor
mov
cld
mov
xchg
call
repz
aas
mov
imul
ljmp
loope
into
inc
mov
aam
jecxz
pop
sbb
fcmovb
je
cli
jo
xor
xor
push
fiaddl
lahf
pop
inc
fs
pushf
mov
pop
aad
mov
insl
mov
adc
popf
and
pop
sbb
and
clc
out
push
test
cmpsl
test
jl
and
jmp
mov
mov
subl
lea
cmpsl
pop
jg
arpl
jge
mov
pusha
aas
js
pop
test
pop
loop
sarb
dec
sbb
sbbb
jns
pusha
adc
roll
ja
xor
xor
jne
pop
and
add
in
out
out
ret
jns
mov
mov
fists
lahf
mov
test
mov
cmpsb
or
xor
mov
imulb
lock
inc
test
jae
loope
fsub
cwtl
xor
jecxz
lret
adc
pop
mov
push
push
xchg
xchg
inc
sub
test
fnsave
sub
pop
cmpb
pushf
push
xchg
outsl
or
push
inc
push
ds
fsts
test
cmp
cmp
inc
add
jmp
icebp
out
jl
jne
out
aas
rcrl
add
cmp
and
sbb
cmp
fidivl
jnp
jnp
aaa
out
lea
pop
insl
push
es
fsubrl
pop
int
pop
sub
cmp
andl
mov
pop
xchg
push
mov
mov
inc
aad
aas
mov
lret
jge
hlt
dec
mov
push
call
fcomip
out
mov
jne
dec
mov
jmp
push
mov
fisubrl
cmp
movsl
iret
mov
jne
movsb
cld
mov
ret
dec
push
mov
lea
je
subl
andb
jnp
jb
inc
dec
add
out
mov
push
dec
leave
out
or
mov
repz
xor
pushw
aas
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
add
outsb
pop
clc
add
sarb
mov
in
pop
dec
adc
das
jle
ds
pop
dec
test
mov
icebp
cmpsb
imul
test
stos
inc
stos
and
cmp
imul
or
nop
jbe
stos
or
mov
adcl
in
divb
jmp
fsubl
dec
mov
pushf
add
les
mov
lahf
jbe
and
ficomps
mov
xchg
adc
pop
popf
push
mov
data16
out
pop
inc
aam
fiadds
stc
jo
xorb
shlb
xchg
movb
add
xchg
test
sarb
shrl
jno
xchg
lcall
inc
mov
shll
shl
bound
sbb
mov
popa
aas
ret
imul
rorb
xor
and
dec
in
cmp
inc
scas
cmpsl
fldt
push
stos
outsb
mov
mov
lcall
mull
aam
inc
push
push
fadds
xor
das
mov
jmp
jnp
stos
fs
or
or
jmp
jno
cs
sbb
imul
cmp
or
aas
and
int
out
xor
push
sub
pcmpeqd
pop
repz
push
jbe
pop
or
mov
repz
js
das
incl
ss
inc
or
out
mov
lcall
pop
jl
pop
pop
mov
xchg
repz
adc
add
dec
nop
shl
in
mov
inc
icebp
int3
iret
dec
dec
dec
dec
sbb
int
mov
ret
jne
cltd
cmp
mov
ror
imul
stc
inc
jb
cmp
mov
xchg
mov
subb
out
int3
ljmp
push
nop
fildll
mov
xchg
mov
pop
xor
daa
ds
jge
test
rolb
xor
sbb
decb
lods
push
jmp
push
aad
jbe
push
out
mov
add
fldenv
mov
jmp
jbe
xchg
les
cmp
push
mov
repz
cli
and
mov
lcall
cmovae
or
sub
cmpsl
scas
stc
cmc
loope
and
pop
xchg
inc
enter
add
inc
inc
fcmovu
ficompl
in
inc
loope
popf
gs
in
cld
sahf
lods
cmpsl
add
jmp
jne
lds
xor
cs
mov
lds
jp
ret
aaa
lahf
and
push
or
jb
lret
ret
pop
test
dec
mov
cltd
pusha
mov
inc
movsb
lods
ds
pop
das
mov
or
inc
fs
out
jge
pusha
inc
push
sub
xor
insb
cltd
and
subb
dec
shr
andl
pop
adc
sbb
and
in
jecxz
nop
xor
jae
lret
int3
jp
cmp
fadd
dec
mov
insl
dec
dec
adc
gs
sbb
mov
clc
pop
loope
pop
dec
jae
mov
and
lods
add
outsl
out
jne
fcom
jno
out
mov
imul
jns
cli
mov
add
dec
mov
je
pop
adc
sbbb
sbb
or
in
dec
xlat
jnp
mov
cli
push
mov
hlt
fildl
inc
mov
push
ds
jecxz
fadd
push
ret
mov
sub
add
or
mov
loop
test
iret
push
je
pavgw
les
pop
pop
jbe
sbb
mov
jp
fwait
in
mov
repnz
xor
pop
daa
push
and
or
icebp
loope
mov
add
xchg
pusha
jecxz
mov
jp
sar
sbb
cmp
sbb
imul
cmp
fcoms
add
in
cld
and
outsb
xchg
sub
shlb
arpl
pushf
imul
clc
mov
ret
int3
dec
in
ds
xchg
aam
mov
into
addb
pop
push
sub
int3
fnstsw
bound
subl
cs
sub
fcmovne
sub
es
fcmovnbe
sbb
push
imul
xchg
int3
hlt
mov
add
jg
push
cmpsb
dec
cltd
xchg
mov
sub
test
jnp
pop
fisubrs
push
insb
jmp
xchg
and
mov
test
sbb
fs
iret
mov
outsb
mull
add
mov
adc
mov
xlat
imul
rcrb
mov
popa
xor
mov
pop
lods
cmp
bound
xchg
test
pop
add
xchg
ljmp
jl
enter
mov
shlb
pop
pop
paddsb
in
daa
outsl
lmsw
mov
int3
push
mov
in
sub
lds
xchg
xor
insl
push
mov
cmp
nop
push
inc
add
sbb
les
iret
mov
mov
fidivrl
add
dec
push
rolb
fists
in
add
cltd
fistpl
mov
int
or
add
mov
push
ret
cmp
cmpsb
fprem
outsb
sti
sub
sub
les
stos
sti
xchg
push
push
aam
out
or
sbb
add
mulb
pop
shll
and
psrld
inc
push
push
testb
sbb
rclb
out
repz
cmp
jne
jmp
mov
sub
adc
incb
dec
mov
fbld
mov
lock
inc
lock
mov
repz
inc
outsb
nop
dec
mov
test
jne
mov
dec
cmc
ret
sub
xchg
movsb
movl
outsb
sbb
push
mov
fdivl
ds
push
es
or
out
and
andl
jb
inc
cwtl
imull
lcall
pop
jne
jecxz
test
or
xchg
std
jo
fwait
rclb
mov
or
inc
lods
push
dec
daa
mov
je
mov
cmpsl
ret
fs
aad
ret
jae
xchg
addb
lret
mov
sub
int
jns
inc
add
in
dec
mov
push
mov
pusha
push
jmp
pop
jae
mov
push
inc
xor
leave
jl
cmp
pop
pop
fstpt
into
inc
dec
xchg
into
sub
mov
fbstp
dec
jbe
dec
inc
jb
loopne
sub
push
shlb
shr
jge
cli
mov
es
repnz
int3
push
mov
jle
xor
dec
adc
mov
hlt
test
iret
sub
mov
lret
sti
movsb
hlt
subl
sbb
outsb
pop
out
mov
xor
sbb
cmp
xlat
outsb
nop
jecxz
mov
in
cmp
xchg
sbb
aam
cmp
cld
ss
push
push
pop
xchg
dec
rcl
test
lret
mov
icebp
mov
int
fadd
loope
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
push
ja
push
sbb
ss
adc
xchg
bound
push
xor
or
inc
pop
ljmp
mov
enter
cwtl
add
mov
lea
popf
fs
jbe
jmp
and
and
fsubrs
mov
fwait
mov
mov
mov
stc
xchg
sub
sub
adc
jl
aam
xor
mov
and
pusha
fcoml
cmp
hlt
jno
dec
loop
div
test
insb
inc
cs
fwait
mov
and
fidivl
sub
adc
lods
subb
mov
lret
out
lds
loopne
mov
mov
sbb
imul
xor
jecxz
insl
push
mov
in
add
jl
push
fcoms
xor
mov
lods
lods
push
add
in
movsb
fistl
jle
div
jbe
divb
fwait
inc
push
jmp
cmpsb
jg
mul
loope
in
std
mov
adc
pop
jg
push
mov
sbb
aas
add
cld
xchg
pop
dec
pop
in
jmp
fdiv
jb,pt
lea
fldcw
cli
xchg
in
std
aad
arpl
push
scas
mov
cmpsl
xor
jae
mov
jmp
icebp
repnz
mov
in
bound
push
addl
aad
adc
mov
outsl
nop
mov
push
add
pop
jl
fdivs
mov
lahf
and
fwait
push
int
jp
pop
mov
das
in
and
pop
cli
cmpsl
pop
das
ret
mov
and
fisttps
cltd
std
lcall
movsl
inc
movsl
pop
cltd
shr
and
add
xor
xor
add
leave
lock
gs
xor
adc
gs
cmp
cli
stos
push
int3
cmp
dec
in
imul
mov
jo
bound
stos
ffreep
fsub
and
xchg
cmovg
mov
cld
mov
nop
mov
xor
insb
cmpsb
sar
in
inc
hlt
gs
sub
cmp
cmpb
ret
or
mov
sub
or
imul
rclb
xor
jns
cmc
add
pushf
jbe
enter
shrb
fildll
mov
mov
push
addl
das
into
and
aaa
pop
ret
jns
scas
orl
shll
insb
and
test
add
push
outsb
xchg
cmpsb
icebp
pusha
outsb
hlt
xchg
jno
and
mov
call
fisubl
lea
ficoml
mov
stc
adcb
shlb
add
and
sbb
mov
lds
mov
jmp
or
lds
adc
xor
daa
cltd
cltd
hlt
and
sub
mov
popf
inc
xchg
je
inc
xor
nop
pop
and
and
sbb
jb
lcall
lds
dec
mov
lret
dec
pop
icebp
stc
daa
xchg
pop
fisttpll
inc
adc
or
and
jae
add
rclb
sub
cwtl
bswap
js
daa
popf
mov
clc
sbb
je
mov
push
xlat
lret
jne
or
jge
cmc
repz
sahf
dec
sub
jp
adc
lret
std
and
hlt
push
push
adc
cmp
and
out
inc
xchg
ret
dec
in
jae
push
iret
aas
mov
daa
xchg
push
lods
enter
js
sub
int
sub
lds
rol
jae
pop
mov
cmp
adc
test
imul
pop
mov
aaa
pop
daa
enter
xchg
es
sbb
aaa
jns
aas
lds
sub
leave
sbb
cltd
scas
mov
popa
dec
and
imul
fxam
insl
push
pop
sbb
rcl
mov
test
pop
scas
mov
or
push
stc
dec
shll
jns
mov
mov
insb
or
notl
rcrb
add
xchg
jl
or
sbb
xor
jl
jp
mov
jecxz
popl
clc
cmp
sahf
ret
sub
jecxz
and
xchg
insb
cmpsb
mov
and
data16
dec
ljmp
stos
jmpw
jno
or
stos
pop
add
test
stc
dec
xorb
ffree
cld
adc
adc
in
insl
fwait
testb
adc
out
xor
movsl
outsb
loopne
push
sbb
rol
imul
xor
adc
sub
ror
inc
cmpb
insb
dec
lds
jecxz
imul
test
shlb
sub
mov
pop
in
push
push
or
push
cmc
mov
xor
js
test
lahf
mov
jbe
xchg
mov
mov
divb
or
fstpt
stos
jp
push
lret
and
mov
dec
mov
ljmp
fwait
mov
fdiv
fs
adc
lods
ret
fidivrs
mov
das
jne
fwait
dec
outsl
ss
add
fisttps
mov
sbb
fprem1
iret
aaa
loopne
orl
mov
pop
pop
aaa
ror
xor
jp
mov
push
inc
push
mov
mov
ffreep
lea
sbb
ss
jp
inc
in
lret
mov
or
xchg
inc
push
xor
imul
sarb
jae
dec
mov
sbb
push
mov
fistpll
and
insb
mov
mov
mov
mov
pop
adc
dec
aad
sbb
repnz
and
ds
dec
xchg
and
or
les
test
mov
lods
loope
jno
pop
pusha
inc
add
push
cwtl
xor
jp
popf
call
insl
push
jp
call
adc
push
out
cmp
daa
pop
xchg
mov
or
sub
fcoml
or
push
push
and
push
int3
dec
dec
int3
pusha
mov
pusha
shrb
outsl
cli
movsl
fwait
add
sbb
popf
jp
fwait
inc
pop
jmp
fnstsw
pop
jbe
testb
xchg
lds
iret
mov
dec
or
dec
cld
sub
mov
mov
jno
mov
mov
pushf
add
xor
sbb
cmp
loop
mov
pop
mov
add
pop
pop
adc
jle
ret
jnp
fucomi
xor
sbb
and
push
lret
mov
lea
mov
insb
cmp
push
sbb
movb
ret
add
outsl
sbb
xor
fistps
sub
jmp
or
jnp
jl
jbe
daa
dec
arpl
mov
rorl
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
lret
add
mov
add
rorl
push
lahf
arpl
mov
les
xchg
cltd
out
inc
add
add
icebp
xlat
dec
sbb
push
bts
out
cmc
jmp
push
imul
adc
out
xchg
sahf
xadd
mov
jg
dec
adc
mov
mov
fnstenv
and
mov
fisubrl
daa
cld
std
arpl
fistps
xor
out
or
sti
jb
bound
outsb
mov
lods
fmuls
filds
xor
xchg
addr16
cs
int
pop
es
das
jbe
je
push
and
pop
lods
pusha
mov
cld
fildl
clc
je
sbb
insl
dec
push
shlb
aas
int
and
enter
mov
dec
push
jg
push
and
push
arpl
inc
mov
inc
aas
push
add
pushf
dec
rcrb
adc
jmp
add
ljmp
xchg
fsubr
gs
add
out
out
pop
cs
sbb
popf
cmp
cmp
push
jo
lret
xchg
cmpl
rcrb
xor
inc
xor
sbb
xchg
js
adc
mov
in
push
sahf
insb
rolb
outsl
rorl
or
aad
sub
xor
xchg
sub
insl
jbe
ljmp
ljmp
sub
adc
cmpsb
mov
clc
imulb
mov
mov
mov
pop
mov
xchg
arpl
stos
dec
lahf
shr
std
mov
lahf
cmp
mov
mov
cmp
fcmovnu
mov
imul
jle
mov
fiadds
negb
adc
mov
jnp
xchg
xchg
mov
das
rolb
jl
nop
mov
dec
pop
inc
or
pop
and
xchg
aaa
jmp
push
addr16
call
mov
push
push
lret
and
cmp
add
cs
add
lods
test
inc
cwtl
cmp
ret
jmp
jle
dec
mov
mov
call
movzbl
add
jne
aaa
lea
add
ja
adc
or
sbb
aaa
adc
cmp
sahf
imulb
dec
sub
and
in
test
sub
add
pop
in
gs
leave
jg
lret
out
rorb
mov
stc
sub
in
addr16
cmc
clc
add
and
inc
jae
mov
lea
cmp
stc
add
or
stos
xchg
fldl
inc
xchg
fsubrs
mov
dec
sarb
mov
stos
sti
mov
std
adc
and
mov
aaa
pop
mov
cwtl
movsl
jmp
and
rorb
sub
lcall
push
mov
adc
sub
inc
in
aaa
mov
inc
fs
scas
loopne
aam
adc
fstpt
fisubs
sbb
imul
jmp
push
mov
insb
leavew
popa
lock
pop
sbb
inc
aaa
push
int3
cmp
adc
fistpll
xchg
dec
sbb
xchg
push
pop
loop
lds
lahf
sar
mov
mov
or
movsb
lea
pop
imul
dec
push
jns
adc
jg
jl
fucomp
movsl
hlt
mov
es
pop
lret
xchg
out
jb
ds
in
in
mov
jge
sbbb
mov
outsl
xchg
daa
xor
mov
push
pop
push
fldt
adc
call
mov
fdivrs
in
jg
pop
xchg
ds
test
inc
addr16
inc
leave
jecxz
faddl
int3
cld
jno
adc
pop
xlat
jge
inc
or
insl
addr16
mov
mov
orl
nop
xchg
fldz
dec
dec
xchg
mov
sub
sbb
fisubrs
sbb
out
xor
es
mov
movsl
push
fildll
push
rorl
in
xchg
mov
fs
adc
xor
shll
jecxz
lea
test
shlb
jge
clc
in
adc
push
jae
xor
out
cmpb
mov
jnp
jp
dec
adc
lret
push
adc
ret
shlb
dec
bnd
cmp
push
stos
outsl
jmp
jecxz
dec
xchg
outsl
shrb
in
mov
pop
mov
jmp
sub
push
imul
pop
pop
cltd
enter
pop
lcall
mov
es
enter
ret
stos
icebp
inc
jle
sub
cmpsl
popf
mov
shlb
jecxz
cmp
jg
mov
add
xchg
pop
bound
les
test
fisubrs
pop
xchg
fsubs
adc
xchg
jb
out
push
mov
or
shr
add
add
test
aam
sub
sbb
loopne
nop
mov
jns
inc
leave
adc
jp
out
hlt
push
sub
and
lock
mov
sub
sbb
fdivrl
sub
and
addr16
leave
std
jmp
insb
or
mov
add
mov
out
iret
cli
or
jl
mov
dec
inc
aaa
repnz
lds
sbb
pop
xchg
aad
pop
mov
loope
mov
cwtl
push
or
push
popa
dec
aad
or
jp
xchg
mov
mov
cmpsl
add
dec
cmp
in
mov
mov
ror
test
sub
les
inc
sahf
pop
lret
clc
ljmp
xchg
push
xchg
push
sbb
int
pop
pop
xchg
push
inc
ss
jmp
sub
dec
repz
loop
hlt
imul
arpl
cmp
pushf
push
mov
or
out
movsb
movsb
in
add
jbe
aaa
stc
popf
fwait
inc
push
mov
xchg
mov
popf
mov
int3
leave
mov
push
popa
or
mov
mov
push
sbb
mov
dec
pop
xchg
jbe
int
adc
into
push
cmpsb
push
call
fisubrl
dec
fwait
mov
and
test
test
mov
xor
popa
stos
push
sub
aas
into
out
mov
add
pop
fcomps
xchg
inc
inc
fiaddl
xor
popa
loop
sub
loop
test
cltd
mov
lock
vmovaps
cmp
roll
and
mov
mov
out
lret
jae
icebp
add
dec
insb
iret
incl
shl
xor
sub
cmc
aad
inc
enter
push
adc
push
mov
lds
aam
pop
loop
cmpb
pop
rorl
gs
mov
sahf
into
int3
mov
popf
push
xchg
adc
scas
sbb
ja
aam
mov
dec
test
cmp
push
xchg
adc
notl
rcrb
push
cmpsl
sbb
iret
loope
shrl
push
pushf
jle
dec
aaa
clc
loope
mov
and
xchg
scas
in
fistpl
lret
out
stos
xchg
fnstcw
xor
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
insb
mov
dec
mov
ja
test
mov
pop
xchg
fcoms
lcall
xchg
outsb
jge
jne
and
add
pop
bnd
aad
mov
push
movsl
nop
dec
pop
addl
int
jg
stos
fwait
cmp
xor
adc
imul
pop
inc
jno
jle
pop
ret
sub
fwait
in
fs
fcmovnbe
and
gs
nop
out
add
xchg
xor
inc
test
lret
or
lods
cld
mov
out
and
lcall
add
out
and
stos
sub
ja,pt
popf
test
and
pop
pop
in
fbstp
je
arpl
pushf
adc
fsubs
ds
jmp
dec
sbb
fldln2
jb
cmp
xchg
dec
cmpb
jns
aad
or
stos
sbbb
icebp
stos
inc
out
cmp
mov
orl
adc
push
push
jb
das
inc
and
movsl
adc
imul
jno
lcall
sub
push
xchg
push
mov
int
je
lods
dec
sbb
nop
leave
loop
adc
cli
pop
stc
jp
push
flds
xor
push
ret
aad
sbb
test
or
adc
pop
por
sub
cmp
mov
loope
hlt
mov
and
nop
jbe
ss
fs
add
in
inc
lret
add
adc
fldt
fsts
cmp
pop
sub
addr16
sti
fwait
das
aaa
ss
imul
add
add
sahf
scas
add
mov
lds
mov
stos
mov
mov
scas
imul
ror
push
jae
fstpt
rcrl
cs
sbb
frstor
xor
orb
ss
loop
dec
shlb
out
fcomi
jecxz
inc
mov
jbe
shll
mov
faddl
push
movsl
mov
xor
sub
and
rolb
test
cmp
stc
dec
or
push
mov
xchg
movsl
pop
inc
mov
xchg
mov
cmp
sbb
lret
pop
jmp
add
xor
fists
pop
sti
pop
or
or
in
arpl
jae
lock
rcrl
mov
sbb
out
insb
xchg
cmp
pop
cmp
jno
xchg
mov
xorl
adc
fwait
pop
js
nop
decl
subb
gs
mov
pop
mov
stos
das
hlt
jp
sbb
dec
push
cmpsb
aam
loope
cmp
movsb
inc
sub
cs
push
in
fsubrl
add
shrl
lock
or
mov
cli
adc
aaa
imul
cs
mov
aam
mov
mov
cwtl
adc
sbb
fadd
mov
fwait
sbb
inc
adc
pop
inc
jp
test
add
cs
mov
cmpsb
bound
inc
adc
out
push
mov
add
js
rolb
mov
ja
orb
push
jge
jae
imul
ljmp
rolb
nop
into
mov
aas
push
jmp
subb
xchg
imul
xchg
xchg
fcomi
add
mov
mov
jge
cmpsl
sahf
add
and
or
push
popl
rcll
fisubrs
bswap
inc
dec
adc
std
mov
and
popa
dec
andb
cwtl
jge
leave
mov
sub
mov
mov
push
sbb
mov
push
imul
push
xchg
xor
jge
sub
cmp
jns
lds
xchg
jle
inc
sub
sub
and
xor
adc
mov
rorl
vpunpckhwd
cmp
pop
pop
jl
fsubs
sahf
sbb
push
adc
int
mov
sbb
loopne
dec
aad
mov
or
iret
dec
and
inc
loop
das
loope
sqrtps
cmp
adc
lods
mov
push
cmc
sbb
pop
rorl
xchg
aam
sub
adc
cmpsb
inc
loopne
scas
cs
fwait
push
int
dec
mov
orb
lret
jmp
mov
ja
xchg
out
inc
cmp
mov
sub
stos
outsl
ds
leave
mov
sahf
sbb
or
xchg
mov
stc
imul
xchg
push
mov
jne
xchg
jne
mov
rcll
pop
or
sub
mov
cmp
sarb
test
sti
mov
int
sub
cwtl
cld
enter
andb
push
dec
clc
jle
shll
add
nop
cmp
lcall
push
inc
or
sbb
and
lret
outsb
cmp
int
mov
inc
xchg
jns
cli
adc
enter
sbb
in
aam
lods
mov
push
sti
cli
sub
test
je
jmp
xor
add
mov
nop
jbe
inc
fcoml
xchg
push
xchg
mov
sub
add
mov
gs
sbb
inc
mov
gs
out
dec
push
ret
cltd
mov
mov
dec
cmp
push
movsb
sub
loop
stos
and
in
ret
add
rorb
das
pop
jns
out
inc
stc
mov
and
lret
shl
or
inc
push
mov
repnz
jmp
fidivs
sub
adc
data16
mov
jl
das
std
mov
xlat
ftst
out
loop
xchg
into
cltd
mov
cmc
pop
in
pop
add
mull
adc
sub
mov
arpl
or
icebp
add
lods
ds
dec
push
lock
movsb
ret
ja
stc
test
add
mov
or
sub
lahf
xor
add
lret
dec
and
repz
sahf
addr16
mov
lds
mov
inc
fiaddl
push
stos
sub
mov
fisubrl
fdivrp
cmpsb
adc
arpl
shr
inc
dec
mov
sub
jmp
cmp
lret
xchg
ds
xchg
jbe
mov
psubsw
pop
dec
dec
arpl
test
xchg
das
jbe
adc
mov
and
in
mov
aad
stos
and
stos
add
test
jae
in
push
scas
cmpsb
int
enter
fisttps
ja
cmc
fimuls
imul
push
loope
and
scas
insl
enter
jae
push
int3
adc
ja
push
pop
and
cmpsb
and
mov
mov
add
sahf
aas
push
cli
fwait
add
adc
cmova
add
mov
jo
test
sub
push
adc
mov
inc
outsb
mov
js
sub
adc
xlat
test
dec
or
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
cli
pop
lret
jp
ja
rcl
call
loop
push
cmp
outsl
mov
das
mov
push
loopne,pt
lret
test
xor
cmp
mov
test
or
je
inc
adc
dec
aas
mov
mov
icebp
push
sbb
nop
pop
std
dec
fdivrl
jg
into
adc
adc
pop
adc
vxorpd
jbe
enter
push
xchg
inc
mov
sub
mov
dec
outsb
sbb
and
int3
lahf
bound
cmp
lock
cmpsb
mov
popa
and
add
call
je
xchg
jecxz
mov
sub
bound
loope
aaa
mulb
in
xchg
mov
sti
and
jno
fsts
mov
scas
mov
add
or
lods
cmpsb
dec
arpl
pop
sub
mov
push
insl
out
cmpsl
out
mov
sub
call
popf
mov
testb
inc
dec
mov
jl
stos
mov
insl
and
mov
stos
xor
outsl
xorps
gs
popa
xor
scas
fdiv
push
mov
jg
sti
cmpsl
xchg
jg
bound
in
xchg
mov
in
inc
mov
mov
out
ljmp
or
jbe
aaa
es
dec
icebp
rclb
xchg
fisubrs
stc
sbb
outsb
clc
pop
fmuls
jno
fidivrl
inc
pop
repnz
jge
mov
in
sub
sbb
dec
out
popa
xor
decl
test
jmp
fucomip
jno
sbb
repz
cmp
fldl2e
add
inc
mov
arpl
shll
sub
sub
test
int
sbb
lcall
iret
fbstp
and
stos
stos
out
xlat
pop
mov
dec
inc
rolb
sbb
and
adc
mov
cmp
sub
dec
mov
outsb
jg
ret
sarl
xchg
cmp
cwtl
mov
or
inc
sbb
mov
lahf
test
pop
pop
pop
mov
dec
lcall
ljmp
mov
cli
pop
stos
jle
mov
loope
cmpsl
les
push
cmp
inc
mov
xor
sbb
and
bound
xchg
xor
fisubrs
lea
adc
mov
mov
cmc
and
xor
mov
sub
push
stos
jbe
imul
xlat
cmp
clc
imul
fstps
cltd
push
inc
xchg
movsb
idivb
xor
pop
pushl
dec
out
mov
dec
cmp
adc
adc
fcomp
push
jo
mov
jo
imull
imul
vcmpss
jp
or
dec
sub
fsub
fsubs
pop
sbb
addr16
and
mov
mov
and
ficomps
cwtl
mov
mov
pop
mov
xor
and
int
pop
out
mov
insl
test
repz
stc
aaa
leave
mov
pop
insb
sbb
ja
xchg
rol
mov
addr16
lods
stc
shl
push
or
in
push
hlt
mov
dec
mov
push
sbb
movsl
cmp
inc
test
pusha
mov
inc
fnstcw
mov
mov
pop
mov
jp
inc
jge
lock
lods
and
test
out
inc
sbb
add
aas
scas
out
and
loopne
call
push
pushf
cld
xchg
lcall
int3
adc
jle
cli
cmp
shl
or
lea
inc
and
sub
loope
pop
cmpb
fidivrs
lods
loop
call
insl
call
push
cmp
xchg
rcll
bound
out
repnz
out
pop
stc
test
push
rcr
mov
xor
dec
pushl
xchg
je
and
mov
mov
addr16
sti
inc
add
inc
lods
mov
lahf
sub
xor
cmp
push
pop
and
push
mov
mov
dec
dec
or
xchg
lock
clc
xor
hlt
dec
jne
and
in
std
and
or
jns
dec
in
int
into
xlat
or
insb
pop
adc
enter
and
stos
aam
les
ds
and
cmpsb
and
in
jmp
repnz
push
add
mov
jns
iret
inc
and
rcll
cmp
int
loop
lahf
lret
push
cwtl
sbb
call
outsl
jl
dec
outsb
test
jp
insl
mov
cmpsb
testl
and
mov
mov
mov
xor
je
inc
fimull
fisttps
pop
lret
jne
mov
dec
inc
inc
stos
test
pop
mov
sub
loop
mov
pop
cld
push
cmpsb
jbe
xchg
push
daa
iret
stc
pop
fs
jmp
pop
dec
ret
dec
test
fldt
mov
sbb
and
add
flds
jae
inc
mov
test
stos
mov
lds
pop
lods
aam
xor
addr16
push
mov
xchg
pop
test
ds
stos
adc
mov
add
jns
hlt
adc
int3
repz
cld
xchg
xor
mov
ror
add
movsb
xchg
lods
adc
into
xor
cli
pop
mov
movsl
sahf
xor
adc
sub
jne
cmovnp
fs
movsb
inc
lahf
inc
call
int
add
lcall
in
pop
xor
pushf
push
inc
and
in
dec
inc
outsb
mov
mov
popf
outsb
fsubs
and
in
pusha
mov
jne
mov
dec
loop
fiadds
or
mov
hlt
pop
mov
and
out
add
jno
xchg
jle
adc
jns
je
clc
popa
not
and
fidivrl
rcr
fstl
and
andl
jbe
addb
enter
jg
dec
aam
sub
setae
and
push
jns
je
outsb
out
mov
fwait
leave
int
inc
repz
push
enter
sbb
jmp
lock
fnstsw
sbb
or
and
lds
bnd
xor
pop
test
sbb
les
push
in
and
push
sbb
mov
ds
sbb
cmpsb
jno
jmp
inc
pop
jns
mov
stos
test
push
pop
sub
inc
mov
cmp
cli
xor
mov
pop
mov
lea
xchg
add
out
clc
sub
test
and
pusha
xor
sbb
xchg
sbb
mov
mov
mov
or
cmp
cmc
repz
sbb
insl
sub
push
outsl
int
or
outsb
jecxz
cmpsl
lret
xchg
push
add
loopne
loop
push
in
sub
test
scas
xchg
bound
pop
sub
push
lcallw
adc
xor
outsl
adc
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
or
or
xchg
mov
pop
stc
popf
adc
xor
mov
imul
out
mov
out
test
testl
lret
add
dec
loopne
push
push
dec
and
push
xlat
out
mov
sub
in
fcoml
insb
insb
js
inc
jbe
cmpsb
shl
je
xor
fidivl
jnp
bound
sub
bound
cmp
push
or
test
push
dec
push
rcrl
mov
imul
lahf
aam
add
fidivrl
inc
jne
aas
setg
inc
hlt
push
sbb
mov
mov
mov
test
sub
mov
in
cwtl
dec
push
dec
pop
sub
scas
xor
mov
mov
pop
or
aad
lret
notl
repnz
mov
xlat
loope
mov
pop
push
xor
lods
pushf
sub
mov
leave
lcall
loop
mov
lahf
testl
and
push
stc
loopne
xchg
cld
dec
or
cwtl
rcll
and
mov
or
xchg
push
in
mov
mov
hlt
mov
sbb
mov
dec
dec
or
mov
imul
jmp
mov
aaa
pop
jle
lahf
mov
jp
scas
inc
mov
xorl
and
add
test
je
inc
or
xorb
inc
popl
aam
cltd
or
test
sub
leave
push
cmp
sar
mov
mov
aad
xchg
xor
nop
clc
mov
clc
icebp
imul
cmp
ret
add
xor
inc
pop
jl
outsl
icebp
xchg
push
sub
sbb
cltd
movsl
punpckhwd
add
gs
adc
lea
repz
push
cmp
and
adc
push
push
sti
jnp
mov
mov
je
add
inc
mov
xor
lahf
jle
imul
gs
lahf
fwait
xchg
mov
outsl
mov
and
mov
and
test
dec
and
and
pop
call
sbb
or
loop
mov
gs
sbb
sbb
add
and
lahf
int3
fidivrs
lock
or
fwait
sbb
inc
js
and
in
mov
jmp
enter
popf
dec
push
pop
lods
test
jno
faddl
adc
mov
jne
stc
ficomps
jne
and
in
sti
jae
mov
sbb
sbb
or
lods
cmpsb
loopne
mov
add
xchg
scas
cli
int
sub
xor
xchg
fstps
loop
mov
dec
call
push
test
hlt
add
mov
pop
es
data16
mov
pusha
popf
sub
sub
cmp
lds
ss
movsl
sub
mov
lahf
je
lret
pop
cmp
enter
call
xchg
push
dec
cmc
mov
repz
jp
sti
mov
in
inc
scas
nop
fldt
insb
lcall
jo
dec
out
and
sub
xchg
jb
cmpsl
iret
add
and
push
cmpsl
imulb
scas
inc
imul
int3
jl
mov
leave
jl
insl
jmp
jecxz
lock
push
outsl
popf
inc
jmp
jl
fwait
pusha
jg
mov
push
pop
and
lds
fimuls
movsb
out
pop
adc
mov
or
mov
dec
xor
pop
idivb
jp
loop
inc
xor
adc
mov
push
fwait
es
cmp
lods
lods
xchg
ret
pop
cs
sbb
jbe
aas
ja
xchg
out
cmp
pop
jns
clc
sbb
out
mov
repz
jge
dec
pop
adc
jmp
jecxz
cmc
ljmp
jecxz
xor
cmpl
out
ret
mov
lcall
test
icebp
jg
popa
inc
pop
jg
repnz
push
mov
push
std
xor
mov
mov
mov
mov
outsb
fimull
cmp
inc
mov
dec
outsl
cmp
les
lds
adc
out
xlat
or
jecxz
loop
mov
xorb
mov
push
cs
aas
arpl
rcrb
fwait
cltd
cmp
lods
push
outsb
add
add
insl
mov
leave
cld
jno
xchg
pop
cmp
push
shrl
mov
mov
stc
dec
out
xchg
imul
call
jb
in
and
mov
divb
sub
mov
dec
push
xlat
push
enter
mov
jmp
xor
das
shrl
aaa
sahf
mov
mov
jg
mull
sbb
test
movsl
fdiv
mov
arpl
or
jmp
popa
xchg
mov
in
cmpsb
fstpt
jae
mov
inc
lds
mov
fst
xor
dec
or
mov
inc
sbb
pop
aam
icebp
ret
les
cmp
xchg
or
mov
fwait
sti
cs
test
movsb
dec
sbb
test
mov
jl
call
dec
and
and
adc
pop
cmpsb
testb
or
inc
call
js
lahf
cltd
mov
jg
pop
xchg
test
adc
xchg
sbb
cmp
inc
call
sub
imul
push
out
repnz
movsl
shlb
sbb
repz
or
inc
sub
aas
xchg
lcall
xchg
loope
lods
adc
roll
sbb
push
and
cwtl
sbb
and
jp
mov
fnstenv
js
mov
adc
mov
ja
cltd
pop
cmc
cmp
jg
sub
insl
cmpsl
hlt
in
lret
or
add
and
cltd
push
ljmp
into
pop
add
fwait
mov
out
popf
mov
pop
dec
lret
mov
cmp
stc
xlat
test
lods
xlat
pop
jecxz
pushf
or
bound
xor
push
ljmp
insb
sbb
sti
outsb
divb
mov
jns
xchg
mov
out
test
sub
ja
jecxz
pop
insl
repnz
add
inc
add
insb
les
cmp
or
add
std
loopne
test
test
lahf
out
out
addb
adc
jmp
pop
cmpsl
or
es
loop
mov
lods
pop
push
mov
fdivrl
sub
out
shll
inc
jb
fsubl
add
cmc
xchg
lds
test
lods
inc
sub
add
outsb
or
aaa
mov
movb
xor
ret
das
add
mov
or
xor
inc
xor
cmp
pop
xchg
mov
ret
ja
invd
lock
and
jno
in
push
icebp
call
pop
push
leave
pop
fwait
push
and
dec
add
imul
dec
add
ror
addr16
jg
das
mov
xchg
leave
add
inc
fxch
js
scas
cmpsb
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
lret
daa
lahf
fidivl
dec
arpl
xchg
rcr
mov
mov
les
jp
dec
inc
mov
xchg
cli
mov
or
and
jp
sbb
dec
and
sub
push
sub
in
or
das
adc
cmpsl
cmp
mov
jb
clc
xlat
inc
push
adc
outsb
out
push
xor
mov
xor
mov
sub
hlt
jae
dec
test
clc
jno
inc
sbb
sbb
add
filds
xchg
pop
sti
fsts
loope,pn
popf
push
stos
xor
lea
jle
mov
sar
ja
or
lods
mov
lahf
mov
fwait
jge
loope
insl
les
lods
dec
stc
iret
jmp
adc
or
inc
mov
or
cmp
sbb
inc
xchg
sbb
dec
jecxz
clc
cltd
xor
imul
rclb
pusha
mov
fcmovb
es
mov
inc
mov
ds
sahf
dec
leave
das
cli
cmpsb
imul
push
pop
in
les
sub
movb
out
push
out
mov
fstl
xor
pushl
shrb
pop
sbb
cmp
xlat
push
dec
icebp
notb
fbstp
mov
out
pop
lret
or
stos
cwtl
clc
cltd
stos
inc
insl
lds
arpl
fwait
xchg
test
jge
push
aaa
cmp
dec
out
cmp
test
xor
xor
icebp
add
lea
xchg
xor
xchg
dec
into
or
enter
pop
xchg
leave
push
popf
js
sbb
xchg
out
std
jmp
push
pushf
and
xor
rorl
fiadds
outsl
js
sti
stos
popa
xor
inc
adc
mov
daa
dec
std
adc
out
hlt
int
outsb
fsincos
test
sub
vmwrite
pop
das
int
aaa
mov
loopne
negl
test
les
adc
out
pop
inc
out
aaa
ljmp
cmpsl
outsl
mov
in
sub
mov
xor
cmp
and
arpl
popa
cmp
in
hlt
lahf
out
lds
lret
add
mov
and
and
cmp
pop
lret
imul
sbb
incl
adcb
jae
repnz
loopne
xlat
sub
int3
sub
xchg
push
insl
pop
xchg
lods
inc
icebp
mov
cmpsl
aas
int3
mov
pop
pushf
xor
test
cltd
fsts
test
cmovo
cld
into
cmp
test
ficoml
sbb
fisttpll
repnz
and
cmc
mov
clc
inc
jb
ret
arpl
cmpsl
pop
jle
jmp
xchg
add
mov
into
xlat
jle
mov
sbb
icebp
fisttpl
bound
adc
or
lsl
xchg
ret
test
repz
mov
xchg
pushf
das
fstps
push
xor
loopne
pop
fcmovnb
mov
and
sub
mov
hlt
test
dec
sbb
lcall
mov
sub
jge
movsb
cmp
jo
popf
pop
rcll
ret
mov
ss
push
pusha
mov
lock
aas
mov
rcrb
cltd
cwtl
gs
xchg
leave
je
fnstenv
inc
int3
xchg
mov
sbb
mov
mov
mov
inc
dec
iret
sti
cmp
or
fnstcw
imul
lret
mov
bnd
and
mov
pop
mov
xchg
les
dec
xor
push
add
into
jns
rcll
orl
mov
mov
pop
pop
mov
inc
add
push
pop
adc
enter
in
std
xor
cmp
andl
push
adc
ror
sub
pusha
shll
addr16
pop
pusha
and
cld
cmc
mov
adc
incl
xor
cltd
leave
out
in
xchg
imul
cmp
fiaddl
imul
insb
repz
inc
adc
pusha
inc
cltd
in
adc
out
adc
aam
inc
fsubs
jecxz
mov
inc
orb
jmp
or
jo
jae
js
jg
xchg
sbb
out
and
roll
icebp
into
fldt
or
inc
cmp
mov
test
inc
jp
dec
adc
out
and
jns
xchg
push
inc
xchg
and
test
arpl
pop
mov
arpl
ljmpw
xchg
ds
push
mov
cmpsb
cmp
add
out
jle
pop
test
insb
std
rolb
and
popa
adc
sarl
les
repz
mov
jno
ret
ja
inc
sti
or
in
sub
jecxz
call
insb
xchg
xlat
pushf
xchg
out
mov
arpl
and
mov
mov
popf
mov
aaa
pop
mov
inc
sahf
or
and
add
push
and
js
xchg
lock
movsl
pop
dec
pop
fwait
push
aam
mov
je
lea
and
push
mov
insb
adc
aam
dec
fmull
hlt
adc
push
jge
mov
sub
push
mov
pop
push
in
sub
pop
pop
add
rcrb
dec
mov
std
xchg
add
loope
and
ss
andb
bound
cmpsl
mov
int
cmc
fstp
stc
lret
add
mov
and
sti
mov
stos
cmpsl
and
inc
cmp
ficomps
in
cld
cmp
xchg
call
pop
lods
push
push
xor
call
lds
cmc
mov
out
inc
mov
aam
mov
pop
push
out
sbb
fisttpl
inc
out
aaa
out
push
pop
xor
adc
jg
lret
mov
add
inc
test
dec
cmp
and
adc
movsb
pop
and
xchg
push
shll
pop
jmp
push
rep
lods
js
push
mov
jb
mov
pusha
mov
inc
pop
fldenv
dec
cmpsb
mov
sub
stos
sahf
ror
adc
nop
fdivs
xchg
call
aas
mov
jns
cmp
xor
stos
jns
cwtl
enter
lods
movsl
int3
out
jg
dec
int
orl
sbb
add
sbb
xorl
sbb
clc
aas
fwait
lcall
mov
xchg
sti
mov
in
xor
or
loope
mov
inc
mov
inc
enter
imul
mov
mov
adc
cmpsb
jbe
adcl
mov
dec
sti
xchg
out
fs
mov
outsl
jle
cmp
test
call
jnp
in
pop
scas
dec
xchg
int
xchg
je
dec
test
jns
cmp
outsb
xchg
jge
imul
sahf
mov
ljmp
shlb
cmp
ljmp
into
adc
dec
fucomip
push
repz
dec
ret
and
jge
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
push
outsl
dec
ja
out
mov
loopne
rorb
pop
push
or
leave
sti
aad
jp
sub
fsts
mov
push
stos
xchg
jg
jmp
xor
lock
xor
in
cmp
xchg
vsqrtsd
add
int
stos
mov
sub
sub
xor
push
mov
vcmpps
sbb
inc
lahf
cld
pop
add
pop
imulb
cli
fisttpll
insl
je
pop
je,pn
mov
pusha
and
in
pop
or
ja
push
mov
std
push
adc
sbb
sub
cmp
jecxz
arpl
and
jne
sub
bound
pop
das
cmpsl
gs
inc
or
jmp
les
inc
fisubrl
jae
push
pop
sahf
adc
ss
rcrl
incb
popf
xor
sahf
add
and
jno
mov
icebp
pusha
jae
loope
cmpsb
add
mov
mov
idivl
mov
jmp
daa
mov
jge
push
and
inc
sbb
jns
push
mov
pop
rcrl
lret
inc
or
mov
std
std
inc
fwait
dec
adc
inc
popa
mov
mov
push
dec
jmp
mov
push
sub
stc
bound
jno
movsl
or
xchg
or
cmp
jecxz
lods
cs
pop
rolb
jge
rcl
popf
stos
fstps
mov
sub
push
je
aas
test
dec
cmpsl
vshufps
pop
sub
std
repz
mov
sub
out
inc
daa
pushf
clc
cmp
inc
test
decl
xorb
clc
je
pop
clc
pop
lcall
test
mov
mov
inc
jne
int3
dec
arpl
mov
mov
or
or
mov
jge
sbb
imul
xchg
jg
fwait
adc
sub
popf
inc
add
cs
dec
jge
inc
push
adc
and
mov
or
ret
daa
or
push
push
les
sarl
pop
pop
movsl
sub
in
push
imul
mov
jbe
pushf
addr16
movsl
movsb
inc
mov
mov
xchg
cmp
inc
push
mov
push
jl
mov
loopne
push
sahf
inc
outsb
lods
sub
out
push
test
sbb
shrl
dec
aaa
jnp
mov
push
shll
fs
add
xchg
push
dec
sub
mov
inc
out
jl
out
out
aam
push
xor
or
inc
aam
fs
xor
push
inc
push
mov
test
inc
in
jmp
out
int3
sti
insb
inc
jl
cld
iret
push
mov
lds
pop
ffree
xor
or
cmp
sub
ss
daa
push
or
inc
das
in
dec
lods
mov
jns
sbb
adc
mov
arpl
xorb
add
int3
pop
xor
out
xor
ljmp
jno
out
lcall
cli
in
inc
sub
inc
test
cs
cltd
cmp
mov
dec
and
mov
addl
cs
mov
aas
cmp
inc
mov
aad
mov
jmp
es
inc
popl
or
push
xor
les
push
ficoml
test
push
hlt
xorl
adc
xor
push
inc
fcomip
adc
neg
pop
nop
cltd
pop
movsb
fdiv
sbbb
lret
push
fscale
addr16
inc
add
xchg
les
ja
adc
movsb
nop
adc
push
enter
daa
or
sahf
xchg
std
mov
pop
inc
jae
mov
xchg
insl
jg
and
sahf
int3
xchg
inc
seta
es
out
adc
daa
imul
push
pusha
repz
mov
dec
jl
jae
mov
dec
adc
and
insl
aam
xchg
popa
fldcw
sahf
pop
mov
cld
mov
addb
pop
pop
pushf
push
adc
leave
mov
aas
imul
movsl
jb
nop
out
mov
mov
cmp
jle
adc
push
inc
mov
out
dec
out
push
fsts
dec
pop
sbb
int
nop
lods
xchg
adc
test
mov
out
jg
or
mov
mov
je
aam
add
mov
push
call
movsb
cmc
loopne
sub
into
xlat
fdivs
test
xchg
enter
mov
lret
pop
and
out
pop
fidivrl
je
and
scas
lock
in
jnp
inc
push
pusha
mov
pusha
add
push
std
and
and
cmp
ret
aad
leave
push
push
lds
cmpsl
xchg
ds
dec
inc
pop
out
loope
pop
enter
pop
jo
dec
fmuls
jb
jge
mov
flds
js
add
leave
sbb
dec
mov
jge
shrd
push
mov
push
outsl
shrb
and
lret
in
dec
mov
or
lods
sub
js
cltd
adc
mov
sub
push
xchg
inc
cmpsl
lcall
pop
mov
adc
mov
and
sbb
xchg
in
push
lcall
xchg
xchg
mov
xchg
out
movsl
push
dec
cmc
fs
add
sbb
dec
mov
shrl
sbbl
dec
or
out
fisubl
dec
jg
stos
aad
dec
mov
mov
aad
xor
cmp
cmp
and
out
jns
jle
sbb
pop
cmpsl
sar
push
ret
cmp
adc
cmpsl
out
ljmp
cmp
cmovns
jo
pop
push
insl
out
aad
jns
mov
aam
repnz
shr
aam
cs
bound
adc
mov
xor
inc
int3
cmpl
dec
icebp
adc
dec
xchg
jp
xlat
sbb
push
mov
mov
and
leave
rcll
mov
repz
in
shl
mov
dec
jbe,pt
mov
jae
inc
int3
and
cltd
popa
sbb
gs
xor
cld
lods
push
outsb
push
aad
stos
adc
data16
rclb
nop
jae
imul
push
popf
icebp
incb
aam
ror
cmp
imul
xchg
pop
jne
xor
jbe
xorl
pushf
imul
loope
js
fiadds
mov
mov
lret
mov
inc
lret
push
xlat
inc
aad
ja
xlat
fcoml
ljmp
enter
push
push
jp
aam
jecxz
sub
add
out
je
push
add
iret
lock
push
ja
in
inc
aad
mov
out
mov
dec
add
test
dec
cltd
cmp
mov
inc
repnz
test
or
popa
popf
dec
xlat
sarb
fdivrl
mov
enter
stos
inc
inc
push
rorb
xchg
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
movsb
arpl
cmp
ja
leave
pusha
adc
test
test
fimuls
cmp
test
cmpsb
call
sbb
xchg
push
into
dec
and
int
mov
cmp
mov
cmpsl
in
jmp
dec
test
push
mov
cmp
pop
outsb
and
jns
lahf
insl
xor
lea
jp
push
decb
jge
add
ljmp
mov
std
mov
int3
lret
add
and
mov
pop
fidivs
pop
cmp
ljmp
dec
lds
xchg
inc
cli
xchg
push
mov
and
pop
outsl
daa
in
add
sbb
push
push
data16
and
dec
inc
shr
or
ss
imul
iret
or
mov
dec
js
pop
outsl
ljmp
fs
sub
sub
addl
xor
mov
xchg
lods
scas
ret
adc
cmp
jb
lea
sub
loop
add
push
sar
fs
jo
adc
scas
xchg
jns
xchg
les
movsl
push
and
inc
mov
adc
icebp
repz
imul
insl
mov
sbb
jnp
rcr
repz
sub
lahf
scas
inc
and
in
push
std
inc
push
sbb
lods
jne
xor
out
data16
sub
push
and
sbb
pop
aaa
shl
mov
jnp
shll
les
dec
mov
out
pop
dec
sbb
int
rcrl
es
outsl
mov
daa
jbe
fstpl
push
aad
push
add
je
frstor
jo
pop
jne
jae
adc
int3
in
inc
push
fwait
or
jno
test
sahf
dec
jns
fwait
inc
dec
jo
sete
push
mov
pop
mov
adc
mov
outsb
dec
mulb
mov
in
das
pop
scas
scas
pop
sbb
mov
pop
fdivl
jp
xchg
jecxz
ret
cmpsb
push
or
jb
cwtl
fadd
aaa
mov
scas
std
scas
clc
xchg
dec
cltd
jns
mov
mov
pushf
and
dec
sbb
xor
aad
icebp
into
sbb
sbb
mov
xchg
xor
push
dec
add
push
xchg
jp
loopne
sbb
cmp
and
and
cmp
or
out
rcl
cmpsl
jmp
into
cmp
pop
sbb
test
jmp
lcall
dec
cmp
scas
fcomps
mov
rcrl
pop
mov
mov
and
xorb
lret
mov
aaa
cltd
je
lahf
cltd
mov
jecxz
sub
xor
push
rcrl
js
std
or
pop
andl
cmp
mov
pop
mov
iret
out
push
dec
or
das
rcll
adc
dec
pop
sbb
mov
jns
inc
sbb
in
pop
xchg
fcomps
test
mov
lret
xchg
out
pop
ret
mov
in
pop
ret
add
lods
sub
fsin
and
loope
outsb
xchg
js
das
mov
lea
push
cmp
aas
push
iret
mov
mov
jmp
das
roll
push
push
jle
add
push
dec
ja
ffree
adc
js
pop
cltd
dec
sbb
mov
roll
ficompl
push
mov
sarl
loopne
stos
shrb
push
cld
cli
push
cmp
out
xchg
lret
sub
jmp
scas
push
xchg
scas
xor
dec
inc
fisttps
mov
xchg
inc
into
je
xchg
mov
push
pop
mov
and
jmp
jne
xlat
inc
rorl
out
and
mov
aad
lock
push
je
or
jbe
pop
dec
mov
xchg
mov
push
and
mov
jnp
cmp
xor
ja
pop
insl
xor
push
icebp
ds
in
arpl
sub
cmpl
and
dec
daa
inc
jle
cmp
jae
sbb
popa
push
popf
shll
dec
xchg
bound
or
fwait
enter
out
push
xchg
jecxz
jle
scas
enter
mov
xor
cltd
mov
or
pop
sbb
cmp
add
hlt
std
sbb
divb
fcmove
movsb
xor
or
mov
mov
mov
jb
pop
dec
sub
xor
inc
jmp
cmpsb
push
outsb
or
xor
mov
mov
test
sub
add
jno
dec
imul
add
dec
sub
or
popa
insl
out
push
cmc
sbb
add
movsb
pop
cmpsb
cs
fadds
popf
fisttps
leave
sub
xor
jo
out
sub
mov
cmp
cmp
popf
stos
nop
bound
push
outsl
sub
pop
fdivl
adcl
mov
popf
bound
data16
xor
lea
stos
ja
xchg
or
adc
lea
mov
or
sub
scas
iret
mov
or
sub
call
mov
and
lds
imul
xchg
jp
jmp
and
sub
outsl
xlat
pop
lret
cmp
jge
mov
dec
insl
mov
loope
add
mov
sbb
sahf
cwtl
vmread
repnz
jle
rcrl
ja
xor
les
push
fadd
call
pop
push
ret
sbb
outsb
dec
xor
xor
mov
imul
dec
fwait
dec
int
into
loop
mov
adc
imul
jge
mov
cli
or
mov
adc
test
test
mov
cmp
arpl
pop
xchg
sbbb
adc
leave
scas
or
fwait
pop
mov
jo
cli
movsb
mov
fs
dec
sar
pop
jl
and
inc
jne
daa
or
rcll
inc
mov
dec
xor
divl
adc
pusha
cmpsl
out
imul
add
or
jmp
jne
push
xor
je
xor
leave
inc
sbb
or
outsl
dec
and
jg
ficomps
mov
loop
lods
int3
cs
or
add
and
mov
mov
pop
ret
mov
lods
mulb
or
call
sub
ud0
lods
data16
push
insb
js
loope
mov
jne
or
pusha
mov
add
xor
divl
or
mov
push
sub
sub
test
fcoml
dec
pop
js
pop
xchg
adc
pop
cmp
inc
pop
test
popa
sub
jnp
mov
xchg
and
push
cmp
jbe
adc
mov
lods
push
sub
push
jmp
movaps
push
mov
data16
mov
shll
nop
out
test
pop
adc
imul
faddl
mov
enter
inc
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
stos
adc
dec
subb
ja
add
pop
lret
outsl
out
sbb
pop
ficompl
or
sti
pop
sbb
or
jle
outsl
xchg
mov
and
adc
xchg
cld
pop
xor
outsl
repnz
mov
cmpb
or
pop
scas
bound
xor
lcall
test
or
out
add
loop
jl
mov
stos
in
lds
push
mov
jp
sahf
pop
ror
and
cmp
int
scas
xchg
mov
adc
test
adc
movsl
push
jno
shrb
std
fbld
jecxz
lods
jo
mov
cmp
push
mov
mov
add
inc
jg
or
push
jno
jle
add
arpl
jg
imul
scas
jns
or
lods
fnsave
cltd
and
scas
push
mov
and
jbe
mov
sti
testb
add
sahf
outsb
cmpsb
inc
ror
jnp
sbb
pop
pop
pushf
push
ficomps
adc
push
nop
rcl
mov
les
pop
xchg
or
aam
fsubs
decl
jne
adc
push
jnp
mov
imul
aas
test
lret
mov
and
mov
mov
jo
stos
jne
hlt
push
jle
ds
sti
inc
jmp
repz
stos
cltd
sub
test
cwtl
mov
gs
lcall
or
faddl
or
jecxz
jb
outsl
push
jno
imul
cmp
and
fcoms
iret
xchg
dec
mov
xor
lret
mov
xchg
inc
pop
push
lret
lds
pop
push
stos
cmp
inc
into
dec
adc
push
mov
pop
mov
fiaddl
bound
push
pop
cmp
adc
test
fsubl
repz
cs
pop
fcmovbe
cld
imul
jne
sbb
sbb
mov
ret
inc
cwtl
inc
mov
repz
xchg
in
jmp
loop
dec
sub
cld
mov
or
addb
add
aaa
cmpsl
or
cmp
out
js
inc
rcll
lret
aaa
cmp
add
repz
icebp
into
test
data16
outsl
mov
sub
adc
jno
jp
in
and
xchg
xor
adc
ds
loop
push
cmp
inc
mov
aaa
std
imul
sbb
roll
popl
cmp
sub
add
cmp
test
dec
and
inc
jecxz
out
xor
or
stos
inc
out
push
fstpt
cmp
arpl
add
mov
outsb
add
mov
mov
fdivrl
and
xor
mov
js
imul
sub
jb
cmc
enter
lods
xor
popl
pop
mov
sbb
in
pop
dec
sahf
lret
mov
ss
pusha
or
inc
mov
jnp
ja
lock
iret
xchg
test
clc
es
pop
mov
xchg
adc
stc
repz
mov
add
dec
mov
into
sti
aas
sarb
pop
enter
dec
inc
push
jae
leave
aam
ficoml
push
sub
mov
cmp
cmp
xchg
adc
lret
sbb
pop
mov
dec
pop
stos
push
hlt
outsl
pop
push
and
repz
stc
mov
lret
sbb
fisttpll
jbe
xlat
daa
add
in
jnp
mov
xchg
inc
fwait
jno
and
mov
jle
gs
xor
insl
jne
stos
int3
in
push
dec
repz
add
jle
jg
mov
aam
sub
sub
js
out
adc
psubb
shl
in
lds
test
repz
mov
add
std
out
add
push
xchg
mov
jmp
sub
jno
pop
xorb
test
add
in
sbb
mov
cwtl
push
inc
pop
leave
es
jmp
in
push
pop
dec
ds
mov
push
xchg
fmull
dec
dec
into
nop
or
jo
jmp
aam
daa
mov
pop
or
mov
push
mov
mov
divb
aaa
fisubs
rolb
mov
gs
out
dec
les
gs
je
mov
out
aaa
popf
mov
imul
popf
sbb
push
adc
cmp
outsb
cmp
lret
xor
repz
or
dec
jne
setbe
sbb
shlb
pop
or
enter
xchg
inc
mov
jl
imul
cwtl
leave
pop
mov
sbb
cwtl
lret
mov
jge
cmp
xchg
lahf
mov
call
shlb
addr16
leave
outsl
sbb
mov
mov
ds
dec
sarl
mov
out
mov
lds
call
sub
adc
clc
ficoms
sti
jge
bound
sbb
mov
ret
lcall
in
pop
leave
xlat
xchg
ja
cmpsb
jmp
ja
sub
push
and
sbb
jge
jo
hlt
rorl
sub
rcl
pop
xor
jle
cmp
in
mov
pop
insl
pop
mov
outsl
pop
push
pop
pusha
clc
scas
pop
mov
repz
mov
mov
shrb
outsb
mov
out
aad
inc
ljmp
cmpsb
ffreep
fildl
xchg
cmp
repnz
sub
add
jle
jecxz
fs
and
stos
sbb
cmpsb
rorb
and
cmpsb
push
push
gs
xor
fxch
sub
jl
or
jp
rorl
scas
and
push
arpl
int
mov
and
mov
jne
and
dec
push
shlb
sub
inc
lods
rorl
gs
xchg
loop
out
push
cmp
fisttps
push
pop
xor
mov
adc
mov
loope
lods
jnp
add
mov
scas
or
lahf
sbb
xor
mov
int
gs
mov
and
push
inc
test
push
imul
mov
mov
push
inc
out
push
rcl
fdivp
in
cwtl
dec
cltd
mov
lods
outsl
adc
cmp
xchg
sub
je
jle
loope
inc
icebp
ja
push
jo
pushf
cmp
pop
outsl
cld
hlt
aam
gs
cmc
mov
add
xor
add
mov
loope
cmp
loope
loop
pop
push
mov
cmp
cbtw
or
mov
pop
xchg
and
fsub
insl
or
cmp
or
fcmovnu
ja
iret
mov
test
js
push
loop
insb
pop
fiadds
lock
sbb
pop
push
and
mov
add
and
xor
sub
jo
addr16
xor
test
cmp
imul
or
int3
jbe
push
stc
sub
mov
stos
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
jae,pt
push
negl
ja
xchg
push
lock
inc
fiadds
inc
jb
inc
aad
scas
rolb
mov
xor
popa
jno
add
movsl
ljmp
das
test
push
sbb
pop
push
mov
in
jbe
pop
cld
aad
jmp
mov
xchg
push
push
sti
lock
push
bound
xchg
out
adc
vmwrite
jbe
stc
add
adc
jge
jp
stos
lods
xor
inc
dec
ss
push
hlt
and
loope
int
out
aad
aad
push
xchg
sbb
adc
pop
imul
pop
fcoms
xchg
test
shl
xchg
data16
pop
push
cs
and
gs
scas
or
push
or
arpl
adc
add
or
jb
cmp
cmp
scas
mov
pop
stos
mov
fnstenv
or
lods
or
dec
jno
xchg
xor
mov
out
pop
mov
sbb
ja
js
lods
shl
mov
xor
push
adc
xchg
dec
daa
dec
ss
xor
imul
mov
iret
popa
clc
in
xor
push
inc
loope
or
jecxz
and
xor
aad
sbb
test
in
dec
ds
xchg
jl
sbb
fsub
cs
popf
aam
sti
add
jno
jg
adc
sub
jmp
lock
mov
cwtl
sub
ja
imul
loop
fiaddl
cmpsl
fdivrl
mov
push
push
mov
dec
jno
jno
sti
js
out
cld
mov
int
pop
jb
push
sub
add
cmp
or
lret
jmp
push
stc
pop
mov
push
xchg
sub
pop
pop
xorb
outsl
lock
xor
daa
or
sahf
ss
pop
or
dec
cmp
int3
sub
dec
inc
pop
add
sbb
xor
ja
jnp
cli
xchg
aam
nop
verr
mov
mov
mov
xchg
xchg
notl
lret
aam
or
jmp
xor
das
xor
enter
mov
sub
test
fdivr
cmp
popa
sahf
movsb
into
xchg
dec
scas
jmp
xlat
and
out
xchg
pop
das
subb
in
mov
mov
outsl
stc
add
outsb
jmp
mov
mov
dec
int
outsb
add
sbb
rclb
mov
mov
push
mov
out
pushf
sti
jmp
loope
mov
sub
testb
js
mov
pop
fs
xchg
mov
lahf
jo
xchg
and
sahf
sbbl
lret
sbb
inc
repnz
lcall
std
mov
movsl
in
mov
in
out
cmc
pop
gs
fcmove
fisttps
xchg
int
scas
push
push
daa
in
push
or
pop
dec
inc
shl
loope
gs
fisttpl
inc
stos
pushf
push
mov
lea
add
pop
je
js
or
sahf
or
dec
jno
inc
mov
pop
jecxz
fmull
mov
mov
fisubrl
clc
jmp
push
and
jnp
or
xchg
rcrl
mov
sbb
adcl
push
xchg
inc
lcall
imul
div
dec
in
stc
stos
scas
push
mov
mov
mov
icebp
jno
jb
cli
call
insb
mov
mov
mov
inc
dec
std
cmpsl
lcall
xor
jne
adc
repz
xor
inc
lahf
cmp
and
scas
rcr
out
mov
in
inc
mov
sbb
mov
fmuls
add
sub
stos
iret
xor
or
mov
inc
mov
xchg
cwtl
stc
cmp
dec
xchg
movb
and
not
outsb
and
and
insb
lret
fwait
je
shrl
lea
adc
pop
adc
int
insl
inc
xor
push
xchg
sbb
inc
shlb
pop
insb
mov
inc
mov
outsl
mov
adc
call
mov
lret
mov
jmp
dec
sahf
cli
jb
daa
xor
add
lret
push
in
dec
sti
in
mov
hlt
loope
push
pop
xlat
ljmp
adc
pop
push
dec
ja
xor
push
jg
cmp
out
xchg
cltd
and
pop
movsb
mov
lods
dec
std
clc
aaa
push
jle
push
and
add
loope
cli
pop
fs
pop
jbe
inc
sub
test
fisttps
mov
imul
add
xor
repnz
out
decb
xchg
icebp
leave
or
loop
jno
mov
sbb
jnp
mov
add
loope
addb
fldenv
mov
mov
icebp
dec
lahf
xor
les
xchg
add
dec
xor
mov
in
cmp
lods
imul
lret
add
sarb
xchg
mov
adc
adc
in
and
jae
inc
std
mov
clc
mov
insl
loope
sahf
in
xchg
filds
mov
fcoml
scas
cwtl
popf
test
pushf
lea
out
shrl
adc
xchg
xchg
add
stos
call
inc
sub
cmp
push
mov
ret
ret
stc
js
and
push
cwtl
cmp
inc
es
mov
hlt
ja
popf
pusha
mov
popa
adc
fidivrs
cmc
xchg
lcall
fisttpll
jbe
out
int3
xor
addr16
dec
jmp
dec
mov
add
push
mov
int3
push
test
pop
repz
das
js
or
call
cltd
mov
fstp
lods
das
mov
adc
shll
aas
insb
mov
mov
sbb
push
mov
shrl
add
sub
cmp
or
std
sub
leave
test
pushf
add
sbb
outsb
fmull
push
jmp
testb
inc
inc
in
pusha
push
sahf
xchg
stos
add
jbe
pop
cs
and
sub
cmpsb
xorl
or
pop
aaa
sub
push
xor
cmp
jb
out
int3
cwtl
bound
jecxz
jp
sub
ret
cld
add
not
xor
mov
cmovl
jl
repz
lds
in
test
pop
cmp
nop
ljmp
inc
es
jo
data16
out
subb
stos
push
and
mov
aam
divb
cmpsb
or
in
imul
adc
pop
gs
dec
add
imul
or
jmp
mov
fwait
sub
es
lret
or
push
pushf
jno
mov
fdivrp
inc
stos
push
cmp
lods
mov
inc
add
dec
sub
mov
movsb
push
ficoml
cmp
pop
fidivrl
insl
push
mov
jns
lret
and
icebp
mov
icebp
mov
cmp
xchg
xor
or
addl
shl
imul
jmp
add
or
or
adc
push
push
ja
mov
subl
or
jmp
leave
adc
mov
and
cwtl
out
neg
xchg
dec
mov
flds
test
pop
mov
and
adc
inc
pop
sbb
cmp
stos
inc
call
loope
outsb
inc
add
jmp
pop
jg
std
cmp
mov
dec
test
js
mov
push
jl
fisttps
cli
out
mov
dec
popf
repz
outsl
movsl
lods
ss
push
jb
in
cmc
xor
inc
push
cmp
hlt
in
push
faddl
jbe
fwait
dec
cli
jle
stos
stos
mov
adc
sbb
push
pop
aam
push
out
cmp
jbe
inc
adc
inc
pusha
pop
mov
dec
jp
aaa
inc
add
mov
mov
push
scas
popa
adc
mov
jo,pn
lret
shrl
cwtl
jl
xor
adc
repz
gs
jge
in
sub
fisttpl
xchg
pop
or
mov
imul
insb
push
inc
add
call
fabs
repz
push
add
add
lods
mov
xor
mov
push
jno
adc
adc
mov
int
mov
lods
inc
pop
inc
call
ffreep
movb
xor
xor
pop
push
aaa
addr16
imul
or
cmp
fcompl
cmp
js
fcmovne
jl
xor
fwait
push
dec
pop
lret
mov
fcoms
dec
packssdw
xchg
add
and
ret
mov
cmp
hlt
xor
lret
or
mov
xor
pop
dec
shrb
neg
and
jb
mov
lret
xor
inc
push
or
rol
mov
push
pop
xchg
cmpsl
rorb
adc
cmp
xchg
das
xlat
sarb
lret
movsb
in
dec
xor
and
ds
test
fildll
fcmovnb
loop
clc
out
je
mov
pop
cmp
loopne
repz
stos
sbb
test
adc
jnp
lods
sbb
lea
aaa
loop
fstl
out
and
dec
mov
int
add
mov
cmp
mov
lcall
aaa
stos
das
xchg
dec
mov
xchg
jmp
and
inc
xor
in
xor
adc
jno
mov
popf
in
dec
insb
mov
cwtl
lods
push
inc
cmp
insb
mov
pop
iret
rcrl
sti
hlt
cltd
adc
out
push
sbb
pop
xor
dec
rorl
nop
cwtl
outsb
std
pop
bound
movsb
insb
push
ljmp
jle
mov
inc
lea
push
sub
xchg
imul
push
aaa
jl
cmovbe
stos
mov
js
jnp
jb
xor
cmpl
lea
mov
sbb
push
jnp
out
mov
fwait
mov
pop
xchg
lret
mov
ret
stc
push
loopne
stos
mov
mov
lods
nop
push
xor
ret
adc
mov
data16
sti
sti
mov
adc
jmp
subl
pop
and
or
jg
test
ror
cmp
hlt
mov
sahf
or
aaa
mov
push
jp
pop
fisttps
sub
add
cmp
and
daa
jo
xchg
lretw
mov
or
js
cld
out
sarb
lds
stos
loope
add
movsb
sahf
ret
subb
mov
sbb
jne
lods
gs
jge
scas
xchg
popf
stos
icebp
mov
add
mov
sub
jbe
inc
leave
add
push
mov
inc
cltd
sub
dec
js
cmp
sbb
dec
adc
ror
out
aaa
cmp
aam
mov
pop
ret
mov
jl
loope
lret
mov
pop
adc
mov
cmp
stos
out
imul
scas
pop
std
xchg
cmp
cmp
inc
push
repz
and
xchg
lret
sarl
jno
cmp
mov
fidivrl
data16
dec
insl
clc
mov
fistps
cmp
jp
pop
icebp
dec
jo
xor
shll
insl
daa
sub
xor
sbb
sbb
in
ret
shr
imul
fistpl
scas
jno
test
sbb
imul
and
orl
add
add
xchg
scas
jle
dec
xchg
push
and
mov
xchg
js
mov
in
in
popf
notb
dec
or
stos
or
vpsrlq
popl
and
push
mov
lahf
push
mov
outsb
nop
xchg
repz
shlb
push
cli
sbb
pop
sub
imul
xor
int
cmp
testb
cwtl
jmp
outsl
std
fdivp
imul
dec
push
and
insl
add
or
fs
adc
xchg
xor
ret
je
adc
push
pop
push
jne
push
xor
mov
imul
lock
push
sahf
adc
mov
clc
arpl
dec
pop
jecxz
sub
imul
mov
xchg
les
std
xor
dec
js
movsl
ret
aad
cli
enter
stos
jae
dec
jae
in
fcoms
xor
or
fimuls
inc
sarl
push
sahf
subl
add
insb
int
jne
test
push
sbbb
push
xor
cmp
add
repz
cld
jb
popf
push
das
add
pop
into
lods
test
dec
push
test
xor
add
sub
sub
in
rcll
outsl
dec
sahf
mov
shll
jle
push
mov
fcomi
aad
iret
clc
jecxz
mov
popf
dec
push
in
mov
pop
ret
sbb
add
fwait
jg
pop
out
dec
cltd
dec
fs
dec
pop
aad
xchg
data16
shll
ja
stc
push
int3
daa
or
aas
in
sbbl
cmpsl
jge
iret
jnp
fidivl
xchg
insl
enter
dec
sbb
jns
push
inc
inc
pop
out
mov
daa
in
adc
or
xor
aad
dec
adc
aad
sub
int
aam
jb
push
push
aam
mov
pop
or
pminsw
nop
sub
xchg
mov
sub
push
leave
shrb
je
xchg
lds
addl
into
push
fdivrs
pop
xchg
test
xchg
push
jns
dec
std
mov
cmpsl
pop
jb
imul
pop
aam
sub
and
sbb
icebp
in
xchg
enter
insl
and
std
out
xchg
inc
jne
mov
movsb
enter
outsb
add
add
out
out
xchg
fistpll
ret
scas
sub
mov
movsl
int3
addr16
test
xchg
movsl
cwtl
daa
lods
int
les
insb
dec
or
and
ds
cmp
js
std
mov
pop
add
sti
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
scas
mov
mov
xchg
addr16
push
mov
xor
adc
fidivrs
pop
out
mov
jns
xlat
int
jle
outsb
imul
test
mov
adc
or
in
jns
ds
jp
hlt
fidivrs
or
pushf
push
cmp
dec
arpl
lods
clc
mov
adc
ljmp
pop
scas
mov
test
aam
cmc
addr16
test
dec
adc
or
std
dec
out
mov
push
push
mov
repz
icebp
lds
pushf
inc
and
xchg
mov
jle
aad
andl
cmpsb
push
dec
or
testb
xchg
loopne
test
sbb
test
xor
cli
sub
fsubrp
aad
scas
xchg
adc
and
add
lahf
stos
hlt
xlat
ficoml
iret
sbb
add
push
data16
sbb
push
in
insl
xor
mov
mov
push
lahf
push
and
js
scas
xor
push
and
sbb
mov
cs
icebp
mov
xchg
mov
adc
jl
dec
push
cwtl
jae
mov
lea
or
jo
push
cld
ss
andl
dec
mov
js
push
lahf
jl
sbb
lcall
faddp
mov
push
pop
pop
mov
aam
call
int3
into
mov
xchg
iret
xchg
addl
aam
rcrb
pushl
push
push
push
inc
xchg
cli
stos
adc
mov
or
iret
add
ret
hlt
inc
inc
rcll
push
jb
popa
pop
out
popa
mov
add
dec
jmp
lcall
pop
in
dec
xlat
jl
jbe
xchg
and
lret
mov
mov
xor
ret
inc
sbb
adc
xor
pop
in
push
stos
out
push
push
in
sbb
lahf
push
and
inc
dec
xchg
imul
adcb
pop
mov
inc
push
add
int
xchg
test
insl
ja
jo
mov
adc
push
std
push
sbb
idivb
aas
or
xor
cmpsl
cmpsb
push
pop
xchg
sbb
fs
scas
cmc
cli
mov
fcoms
fcomi
lds
shll
inc
test
jo
movsl
push
mov
xchg
fs
imul
lret
or
adc
pop
lods
pop
mov
je
or
leave
mov
mov
xchg
dec
lret
or
in
mov
fdivl
adc
repz
inc
xchg
jl
incb
popf
xchg
add
je
mov
lret
rolb
jle
add
arpl
mov
cmp
cmc
jge
mov
add
cmp
sarl
jo
js
adc
or
lret
mov
addr16
loope
xchg
xchg
mov
lret
cli
inc
ret
dec
add
mov
push
gs
mov
out
cld
mov
call
xor
test
daa
mov
mov
push
int3
push
rcll
sub
fdivrp
int3
xor
mov
subl
int3
add
test
pop
popa
orb
add
es
pop
ljmp
repnz
dec
clc
pop
inc
stc
cmp
pcmpgtb
or
xchg
pop
ficomps
fdivrs
imul
and
add
bound
les
mov
cmpsl
or
sub
pop
ss
adc
adc
cmpsl
push
testl
ret
pop
push
les
adc
jns
test
jg
mov
push
or
aam
xlat
sbb
mov
pop
push
adc
jmp
dec
cmp
je
addb
push
gs
js
mov
ds
lods
mov
addr16
je
mov
sbb
clc
pop
xchg
cmp
lss
outsb
sub
clc
sbb
loop
stos
jp
xor
js
int3
dec
xchg
adc
push
std
call
out
xchg
out
not
pop
cltd
test
mov
or
pop
aad
inc
mov
sti
insb
aas
xchg
xchg
dec
adc
lock
das
inc
or
sub
repz
inc
jns
xchg
gs
fldl
es
lea
cmp
rol
inc
sub
lea
jp
add
jecxz
sbb
cli
cmp
stos
pop
xor
cld
or
mov
mov
inc
xor
inc
mov
das
shr
mov
push
push
push
int3
fisttps
jg
fidivrs
in
lcall
test
in
adc
icebp
and
add
push
xor
xchg
mov
rcr
lds
or
popf
or
cmp
mov
aad
mov
push
icebp
test
cmp
test
out
cmp
push
sbb
loop
and
stc
mov
add
enter
mov
dec
ss
and
iret
sahf
xchg
adc
mov
mov
xchg
cwtl
gs
pop
ret
mov
adc
stos
or
jo
and
lods
push
pop
adcb
lods
inc
imul
fsubrs
and
sub
fcompl
mov
pop
push
mov
xchg
enter
pop
out
icebp
fcmovb
or
xchg
cmpsl
and
mov
icebp
lret
loope
shr
inc
adc
xchg
mov
jmp
jo
sbb
xchg
dec
pop
test
loope
push
cld
movb
jb
lret
push
inc
and
shll
inc
jl,pn
scas
sub
jnp
addb
rolb
cli
mov
dec
jno
stos
cmp
int
stos
sar
add
xchg
xor
inc
fnstenv
int3
jnp
add
jb
and
loope
adc
xchg
in
jl
cmp
scas
mov
cld
inc
jae
aad
sbb
jl
sbb
movsl
ss
lods
cmp
xor
cpuid
hlt
add
mov
push
arpl
xor
jno
ss
sub
pusha
cli
call
pop
inc
pop
and
cmp
xchg
cmp
aad
pop
mov
leave
sub
lcall
inc
iretw
sti
pop
outsb
mov
add
mov
inc
inc
pop
adc
mov
aad
or
sub
mov
aaa
cmp
insl
rcll
mov
je
pop
or
jmp
into
lahf
gs
test
ret
out
lret
fsubrp
stos
xorl
lcall
xchg
lock
xchg
ja
push
out
loope
jl
cmp
fidivl
movb
cmp
xor
and
mov
jl
loop
inc
stc
mov
sub
inc
sarl
jo
xchg
adc
mov
mov
push
fcompl
adc
push
jns
mov
adc
sub
cmp
stos
movsb
test
jae
xchg
and
scas
shlb
or
pop
test
jp
xor
outsb
imulb
dec
lret
cltd
mov
xchg
hlt
adc
or
mov
daa
imul
jae
add
ja
and
fidivs
pop
fnsave
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
xchg
mov
add
or
flds
scas
js
inc
mov
icebp
lret
or
jb
pop
mov
pop
lods
add
pusha
mov
cli
xor
cmc
and
inc
nop
xorb
sbb
aaa
push
gs
dec
lret
sbb
lahf
insb
lds
jge
aas
cmp
xor
sahf
xchg
pop
xchg
or
xchg
repnz
call
cmp
push
or
in
dec
movb
xor
mov
sbbl
int3
arpl
and
into
mov
cltd
push
pop
es
sub
push
enter
shlb
mov
addl
add
add
lods
test
sub
push
add
sub
mov
cmp
shlb
cli
sbb
pop
mov
pop
pop
mov
sar
mov
fists
pop
push
push
aam
pop
inc
inc
push
fisttps
jo
xor
adc
jmp
lods
ja
sbb
orl
xor
test
jle
xchg
sub
nop
scas
push
mov
je
gs
out
lret
das
and
jae
scas
rclb
inc
and
jns
jl
add
repnz
push
mov
divl
jne
out
fistps
pop
xchg
pop
dec
mov
adcl
popa
xchg
data16
cmp
icebp
xchg
adc
movsb
push
cmp
xchg
jae
sbb
mov
or
push
or
cmpb
addr16
mov
push
xchg
pop
push
push
jno
xchg
jno
or
xor
sub
out
mov
inc
fdivrl
mov
movsb
outsl
lcall
sbb
jge
shll
and
mov
adc
lret
pop
iret
inc
dec
test
sarl
popl
flds
mull
enter
mov
pop
jg
xchg
adc
or
daa
lods
adcl
push
dec
sti
xor
out
and
mov
int3
fdivs
push
mov
lds
test
and
cli
push
sub
or
dec
out
lods
pop
cwtl
inc
mov
jecxz
inc
fwait
outsb
xor
lcall
cmpsl
adc
loopne
sbb
insb
lock
fnstsw
les
add
icebp
add
fsub
inc
sub
push
pop
ss
xchg
mov
mov
xchg
and
rcl
loope
in
pop
fsts
fnstenv
and
mov
cmp
or
jne
mov
ror
addr16
mov
cltd
ds
in
push
loope
xor
xor
jmp
mov
cmp
pop
cmc
xchg
pop
insl
and
xchg
adc
into
mov
fcoml
sbb
jp
cmpsb
add
xor
and
lods
pop
nop
lock
mov
or
xor
mov
faddl
loopne
jmp
jne
and
jge
test
cmpsb
add
add
push
clc
imul
orl
mov
xchg
and
stos
cmp
push
and
mov
clc
xchg
test
test
ss
icebp
test
fwait
insb
pop
jo
jp
es
sbb
rol
mov
xchg
jl
inc
sbb
in
es
push
aad
or
mov
cli
pop
push
sbbb
mov
sub
sti
sahf
mov
rcll
ret
push
int
sbb
adc
je
sbb
xchg
ss
jmp
pop
and
dec
or
push
cmp
add
stos
xchg
xor
bound
imul
xorb
pop
sbb
sbb
insb
xchg
les
ljmp
test
inc
adc
and
xchg
mov
icebp
dec
lret
ret
loop
fistpl
add
mov
or
leave
std
das
jne
orl
int3
shr
fisubl
push
aas
les
scas
dec
sti
movsl
jl
adc
test
rolb
cmp
scas
movsb
xchg
nop
fldcw
add
cmp
mov
add
fsub
into
nop
andb
cwtl
aas
pop
or
push
push
popa
lods
cmp
jmp
mov
ss
test
or
imull
xchg
xchg
adc
jl
or
cmp
ret
dec
mov
lods
cmp
xchg
mov
push
inc
into
mov
dec
adc
pop
and
and
or
pop
jne
pop
repnz
mov
xor
shld
shrl
outsb
mov
jae
out
pop
dec
sbbl
mov
test
test
ljmp
mov
test
inc
mov
fs
into
pop
mov
push
sti
jecxz
les
in
call
push
outsb
sub
xor
ja
xchg
pop
jl
scas
adc
inc
adc
mov
test
ret
sub
push
or
das
daa
std
xlat
sbb
and
and
into
adc
pop
adc
ljmp
and
cmpsb
sarl
lret
lea
jge
mov
cltd
cli
leave
mov
lock
rolb
jle
push
js
shrb
mov
jg
mov
cmpsl
and
push
std
inc
push
dec
mov
cs
int3
pop
lea
mov
pushf
jne
mov
lea
mov
into
mov
sub
lods
and
mov
inc
push
shlb
test
std
sub
out
mov
stos
imul
out
pop
xchg
nop
sbb
shr
repz
inc
push
pusha
or
fbstp
leave
roll
rcrl
fwait
push
xchg
mov
xchg
xchg
imul
stos
ss
cmp
add
cltd
inc
mov
call
pop
insl
sbb
adc
addb
stc
cwtl
cmp
jp
stos
pop
cmpsb
and
fistpl
ret
push
mov
jo
sbbb
adc
and
daa
dec
cltd
sub
imul
lahf
sub
cmp
inc
arpl
ss
je
dec
push
xchg
lahf
repz
bound
imulb
mov
fidivs
push
push
sub
popf
sar
in
mov
sub
arpl
fmul
lret
icebp
test
in
or
scas
sahf
mov
popf
mov
mov
insl
out
mov
mov
popf
loop
cwtl
insb
aam
pop
lds
fimull
sar
jg
mov
and
inc
xor
jl
pop
push
fcom
lea
mov
arpl
out
faddl
nop
fsubrs
mov
shl
or
lea
sahf
idivl
pop
mov
cmp
xor
add
mov
jp
dec
push
adc
adc
adc
stos
mov
popf
push
and
out
pop
inc
and
fnsave
mov
mov
mov
inc
inc
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
cmpsl
outsb
mov
call
mov
mov
iret
aaa
orl
pop
test
outsb
push
or
stc
lods
call
pop
cmp
add
daa
xchg
arpl
filds
mov
orl
fsubs
pop
out
xlat
in
neg
or
cmpsl
insb
sbb
das
ss
xor
ret
enter
and
jp
xchg
ret
mov
insl
jb
pop
mov
pop
dec
mov
pop
int
scas
insb
in
push
adcl
dec
push
sarb
ret
mov
add
test
outsb
xchg
xor
push
mov
adc
dec
jne
daa
mulb
ror
dec
lahf
scas
in
mov
in
xchg
imul
inc
jmp
mov
outsl
xchg
icebp
mov
lret
sti
lods
test
and
push
jp
out
cmpsl
and
in
push
push
cmp
sub
sbb
inc
lds
mov
cmc
imul
cmp
fwait
push
inc
lock
or
loopne
cltd
and
add
push
test
aad
xchg
push
sbb
inc
repnz
mov
jne
sti
rcrl
lret
enter
pop
jns
ffreep
pop
push
and
in
sti
cmpsb
push
je
jge
mov
imul
and
rcrl
xlat
mov
adc
pop
lret
arpl
shlb
sarb
cmpsb
mov
inc
cmpsl
enter
nop
mov
xchg
lret
sbb
dec
loop
dec
icebp
cmp
sub
xor
push
shl
mov
jb
mov
rcll
mov
cmp
mov
xchg
jno
and
xchg
sti
ret
add
jp
xchg
sub
test
pop
orl
add
out
mov
jns
daa
loope
jbe
dec
cmp
gs
push
dec
aad
adc
loop
loop
cld
mov
and
fiaddl
sbb
jg
icebp
fistpl
inc
xchg
fnsave
in
jo
or
rcl
fnstenv
add
xchg
aam
shll
inc
hlt
cmp
in
or
jl
adc
or
push
int3
sub
dec
hlt
or
and
mov
dec
inc
adc
out
cmp
mov
cmp
ss
sbb
mov
arpl
loop
xchg
dec
int3
mov
cwtl
jno
fcmovnbe
dec
push
xchg
leave
push
cltd
fucomp
inc
inc
ds
shl
dec
ss
push
lahf
push
cltd
sub
cmp
push
sbb
and
or
sbb
jb
adc
xor
xor
aad
sbb
incl
sbb
fsubr
and
dec
lahf
dec
push
fisubl
adc
scas
fnstenv
repnz
loopne
dec
xchg
test
adc
push
mov
mov
loope
shlb
mov
sub
mov
mov
pop
and
inc
mov
push
int
pop
lods
xchg
int3
scas
add
adc
fidivrs
push
pop
mov
aaa
push
loopne
fldl2e
fadds
push
lds
adc
fmuls
int
push
retw
repz
inc
dec
mov
int
jo
rcl
out
dec
sbb
filds
cmp
push
hlt
mov
mov
cmpsl
dec
insl
xor
mov
sbb
les
fdivrl
lretw
in
in
imul
mov
jne
sahf
ret
jb
dec
sti
dec
icebp
pop
mov
jg
inc
add
dec
lods
jnp
cmp
push
mov
push
les
mov
xchg
gs
cmp
cmp
jmp
loopne
les
sub
mov
jp
mov
xchg
jae
or
mov
add
dec
push
icebp
iret
xchg
in
pop
cmp
pushf
xchg
sarl
dec
dec
jle
ljmp
mov
mov
adc
mov
xchg
in
sub
mov
and
pop
test
int3
fbld
mov
sbbb
jno
imul
ret
inc
imul
ja
xor
out
or
arpl
cmp
mov
add
mov
cmpsl
cmp
dec
pop
xchg
mov
int
and
pop
push
inc
sub
push
cmc
ficoml
imul
push
fisttpll
sub
and
lret
dec
or
and
repz
cmc
rcrl
jg
dec
divb
or
dec
loope
insb
inc
jmp
fstl
outsb
and
sbb
je
and
sbb
in
mov
dec
inc
mov
and
sbb
mov
xchg
add
fdivrl
popf
adc
xor
stos
pop
dec
jmp
inc
cmp
mov
aad
push
in
into
or
jns
gs
cmp
lock
add
jle
cwtl
or
call
sub
fists
pushf
mov
lds
pop
dec
xchg
add
icebp
gs
sbbl
ss
call
pmulhw
lcall
cmc
push
into
call
out
inc
mov
std
sub
ret
outsb
dec
out
test
lret
jo
and
cwtl
cmp
mov
mov
cmp
lcall
push
insl
sbb
sub
aas
popa
xor
pushf
iret
sub
das
shlb
dec
aas
cs
sub
pop
mov
xchg
sub
imul
sub
loope
and
call
mov
loop
popa
ficompl
xor
inc
push
dec
pop
cs
jl
adc
lcall
leave
pop
pop
mov
xor
sub
test
mov
test
movsl
test
mov
cmp
pop
pop
add
imul
pop
sbb
cs
xor
push
xchg
in
jo
lret
gs
cltd
sub
fwait
pop
xor
test
pop
mov
and
mov
xchg
jl
adc
cs
add
in
data16
dec
shrb
jg
push
gs
mov
or
fisttpl
cmp
idivl
insl
push
pushl
sbb
mov
movsb
push
xor
insb
movsb
das
andl
pop
inc
lret
xchg
es
std
lds
testl
mov
aas
sbbl
sbb
aad
addb
jbe
mov
insb
jbe
dec
je
adc
outsl
popa
cmp
daa
icebp
push
dec
imul
adcb
or
lods
or
rorl
add
mov
fildl
insb
ja
mov
mov
add
jae
mov
lahf
aad
or
jl
mov
push
cs
xchg
mov
or
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
xor
xchg
add
xchg
xchg
add
andl
mov
push
in
add
jo
fildl
mull
scas
dec
mov
and
mov
and
fs
jns
sub
sub
mov
adc
mov
cltd
scas
lds
mov
popf
jge
flds
lods
lea
pop
fiaddl
xchg
push
jp
adc
jmp
lock
ret
aaa
add
add
ror
jge
xor
sbb
sbb
into
pop
adc
jmp
jns
mov
adc
or
xchg
inc
sub
movsb
jno
inc
int3
sarl
fstpt
mov
dec
lahf
mov
loope
mov
in
scas
push
rorb
pop
cld
popa
jb
std
sub
cs
inc
lock
lock
out
sbb
nop
jg
ficoml
imul
xchg
xchg
cltd
jle
or
xchg
jae
and
pop
pop
aas
fidivl
cmc
jp
sub
fcoml
xchg
push
and
sbb
or
inc
dec
mov
xor
mov
fucomi
sub
xchg
or
not
pop
cmp
in
pop
dec
jmp
or
fstpl
xchg
xchg
pusha
shr
psrlw
sbb
leave
hlt
sarb
adc
jle
xchg
out
mov
out
jle
dec
push
test
adc
lcall
push
sbb
push
jb
stc
fnstcw
je
stc
in
push
push
data16
out
jle
rorl
ret
mulb
or
pop
cmpb
cmova
or
call
inc
outsl
mov
and
or
aad
dec
pop
fs
pop
jo
xor
dec
cld
icebp
pop
mov
cltd
call
sahf
jo
dec
adc
stos
jo
jp
fcmovne
mov
adc
cmp
xchg
out
es
pop
xchg
inc
cld
test
pop
out
out
lret
outsl
ds
cmpsl
mov
cmp
mov
push
and
out
cmpsb
dec
std
cmc
push
dec
mov
dec
mov
sub
push
adc
inc
inc
inc
and
mov
xor
pop
add
xchg
in
lock
inc
pop
sub
mov
jecxz
incl
pusha
jbe
mov
and
bound
stos
neg
iret
and
push
lods
fs
jne
mov
add
movl
orl
lods
shrl
mov
mov
daa
mov
in
push
shlb
ret
cmpsl
aam
cld
push
loope
ss
push
dec
mov
scas
mov
inc
std
inc
mov
cmpsb
scas
jne
xchg
frstor
les
inc
popf
roll
mov
xor
mov
stos
ljmp
jmp
sub
je
nop
push
adc
lret
dec
call
ljmp
pusha
xor
movsl
jge
notb
adc
or
pop
jnp
mov
flds
ud0
pushf
sti
jecxz
mov
mov
and
xchg
mov
pop
in
das
hlt
adc
push
sti
gs
ficoms
std
xchg
cmp
repz
stos
inc
jmp
or
pop
xchg
cmp
in
out
push
push
mov
mov
mov
outsb
adc
nop
xchg
mov
jg
ss
cs
popf
fs
lea
jae
mov
int
ds
rclb
fbld
and
xor
cli
movsl
xchg
pusha
mov
ja
rolb
mov
fnstcw
jmp
stc
sti
mov
pop
jne
and
pop
mov
push
cmp
dec
mov
adc
and
sbb
cmp
lods
jnp
dec
sub
and
xchg
inc
in
imul
inc
mov
mov
imul
push
mov
dec
jnp
and
sub
pop
pop
jecxz
jg
sub
insb
roll
add
lods
mov
fistpl
fnstcw
mov
je
mov
jne
cmp
sahf
xor
ret
lods
add
push
xchg
sbb
jns
and
jmp
sbb
ja
pop
mov
sti
jmp
mov
push
dec
fsts
inc
ds
roll
enter
dec
jl
push
dec
lret
or
xor
dec
adc
orb
mov
sub
insb
xor
sub
jnp,pn
jmp
xor
dec
in
jno
pop
pop
popf
gs
xchg
mov
and
insl
call
arpl
jae
push
jb
xorl
mov
mov
jne
sub
outsb
xor
lea
or
out
mov
mov
aad
pop
xchg
xchg
pop
fwait
roll
cli
mov
cs
xchg
mov
je
jo
cltd
and
xchg
icebp
mov
int3
loopne
adc
xchg
xor
jne
sti
mov
andb
sti
insl
outsl
inc
cmpsl
or
lods
pop
addr16
dec
add
jbe
adc
test
jne
repnz
aad
push
inc
inc
lcall
add
lret
xchg
mov
dec
add
paddq
dec
cmp
imul
mov
cs
push
test
xor
or
xor
bound
ds
mov
mov
movsl
dec
adc
and
add
xchg
adc
xchg
lahf
add
adc
in
cmpsb
sbb
inc
sub
fwait
add
repz
sbb
test
fcompl
imul
fdivrs
mov
fcomp
jb
jmp
mov
xor
popf
xchg
in
pop
aad
fcomi
loopne
inc
push
push
inc
or
sahf
movsl
ror
pusha
xchg
xchg
xchg
aam
aaa
and
jb
inc
add
les
dec
es
in
fsubl
les
add
cltd
mov
push
sbb
jo
inc
mov
lock
in
lcall
or
mov
repz
dec
clc
les
cltd
notl
adc
ret
sub
cmp
cld
in
pop
sub
mov
mov
fsubrl
das
dec
psubusw
bound
mov
add
clc
pop
inc
or
leave
push
jo
mov
lahf
iret
pop
xchg
adc
call
psadbw
and
popa
add
ds
daa
cmp
mov
aas
mov
push
arpl
push
adc
loope
mov
popa
mov
mul
mov
push
sbb
gs
and
cltd
inc
cli
idivl
xor
inc
and
xchg
inc
sarl
inc
int
test
movsb
cli
mov
or
lahf
icebp
aam
shrb
add
fsubl
inc
push
pop
cmpsb
fidivrs
lea
addr16
sbb
sbb
lock
pop
add
outsl
shll
in
sbbl
mov
lods
aad
mov
sub
adc
icebp
ficoml
dec
mov
dec
sbb
es
loopne
mov
pop
mov
dec
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
xchg
ss
sub
cmovp
mov
mov
jne
cmp
pop
rcl
test
jnp
je
addr16
repz
icebp
in
mov
scas
inc
mov
ret
movsb
out
pop
push
pusha
mov
inc
les
es
jae
jl
pop
arpl
jbe
loopne
test
inc
cmpsl
cmp
pop
cmp
iret
mov
and
int3
push
lods
xchg
xor
add
pop
adc
outsb
test
pop
aaa
or
sbbb
xor
xchg
movsl
test
mov
popf
test
dec
sbb
mov
pop
mov
xchg
adc
imul
sub
add
adc
dec
aam
mov
fldt
mov
das
jl
mov
sbb
sbb
jo
daa
cmc
pop
jb
fildl
movsb
fldln2
fs
or
inc
xrelease
mov
xor
and
mov
inc
xor
adc
push
mov
outsl
jg
outsb
movl
push
testb
push
in
xor
test
xor
push
out
xchg
adc
arpl
inc
inc
inc
cmp
cmp
xchg
fisttps
ja
lahf
pop
and
adc
adc
out
int3
addr16
jns
mov
pop
add
mov
cmp
addr16
fcmovbe
aad
dec
in
pusha
inc
jo
adc
ljmp
data16
or
cmp
imul
mov
jb
loop
leave
add
mov
mov
mov
mov
push
hlt
fcoml
jmp
lds
or
mov
push
pop
add
inc
fidivl
ret
dec
fldl
pop
cwtl
mov
in
mov
in
outsl
adc
sub
xor
add
ror
mov
aaa
mov
jmp
outsb
mov
ret
bound
add
sbb
push
in
sub
sbbl
lock
jbe
in
mov
mov
push
in
std
ljmp
mov
scas
stc
lock
ljmp
jns
pop
or
jb
xor
and
inc
push
lods
out
and
jp
and
pop
dec
cs
push
cmpsl
and
mov
sbb
call
aam
sub
jae
gs
dec
test
sbb
out
call
mov
shrl
cs
xchg
out
sub
loopne
inc
xlat
add
into
cmp
push
push
push
push
dec
jecxz
popa
pop
cmpsb
js
add
mov
inc
loopne
mov
lret
dec
jb
dec
sbb
fstps
pop
ret
and
loopne
imul
insb
jne
andb
or
int3
daa
mov
cmp
sahf
sysret
mov
jmp
mov
and
cmp
inc
xor
push
mov
pop
imul
stc
sbb
mov
mov
mov
pusha
fldl
ret
push
mov
scas
js
mov
pop
fs
je
pop
stos
adc
stos
testl
hlt
mov
rcll
mov
xchg
sub
mov
call
lret
jmp
test
mov
aad
mov
cmpsb
loopne
bound
cs
ljmp
outsl
push
das
gs
dec
imul
or
mov
orl
stos
or
adcb
call
push
adc
push
lcall
push
fwait
mov
call
inc
imul
pusha
mov
sub
and
jb
aaa
cmp
cmp
les
adc
mov
mov
and
leave
mov
insb
das
in
pop
inc
ds
pop
daa
lods
sub
cmpsw
gs
push
sahf
jg
aad
xor
inc
rclb
sbb
adc
ljmp
xchg
jb
xchg
ljmp
inc
jp
and
push
subb
and
sub
pop
sub
cli
jmp
popa
jle
jecxz
xchg
out
mov
mov
add
in
mov
pop
xlat
sub
cmc
jnp
pop
push
jb
ja
lds
and
test
cld
pop
pop
inc
xchg
iret
outsl
xlat
sbb
fs
ss
cs
lahf
inc
xchg
stos
jno
movsb
lcall
cltd
pop
adc
sub
xchg
xchg
repz
pop
mov
subb
sti
mov
jle
or
sub
xor
call
jmp
add
rol
cld
enter
adc
fildl
movsb
xchg
xor
inc
ja
jae
mov
cmp
sub
pop
or
rcr
out
pop
pop
dec
push
mov
repnz
daa
lret
mov
insb
sbb
jo
cmpsb
iret
mov
pop
pop
inc
test
das
sbb
jne
fidivl
jbe
inc
int
dec
add
sub
jb
scas
mov
mov
ljmp
filds
mov
sbb
sbb
push
jae
in
jb
mov
cltd
lret
sti
icebp
push
inc
jnp
and
push
xor
pop
sub
out
cmpsb
lcall
push
ja
add
fwait
repz
jne
inc
mov
inc
std
mov
jae
jp
fs
fidivs
mov
call
jno
stc
dec
mov
fisttpl
inc
ss
mov
sti
aad
test
jnp
iret
adcl
xchg
mov
call
pop
push
xchg
ss
aas
cli
imul
in
mov
ret
pop
inc
jnp
pop
xor
movsl
jmp
xchg
sbb
xor
call
xor
sbb
mov
sbb
pop
mov
cmpsl
xchg
aas
cmp
jp
add
or
sbb
xchg
mov
xchg
jge
xorb
xchg
aaa
cmp
fisubrl
lods
sub
push
jle
aam
in
cmp
lods
sub
insl
pop
das
not
cli
into
fs
cmp
sub
and
push
add
mov
dec
aam
ja
jb
nop
xor
ss
xor
mov
cmp
pop
add
or
xchg
mov
adc
out
jo
leave
jecxz
loope
push
stos
scas
roll
jb
push
or
stc
gs
inc
mov
sarl
ss
mov
loope
test
push
cmp
frstor
bnd
sti
push
cmp
xchg
push
jb
xor
cli
lcall
test
ljmp
xchg
xchg
mov
psubb
in
cs
out
outsl
pop
sarb
jp
jge
in
inc
inc
dec
push
push
pop
push
loop,pn
sub
lcall
sbb
aam
sti
inc
sbb
clc
pushf
aaa
add
mov
and
mov
xor
call
push
aam
loope
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
lahf
fimull
stos
ja
adc
ds
push
jp
lret
iret
xchg
jmp
imul
test
cmpsb
xor
xor
es
mov
mov
sbb
mov
in
and
pop
xor
lock
dec
and
and
stos
mov
add
sbb
das
sarl
pop
pop
loope
lea
fcomip
and
sub
pop
xor
jecxz
or
jns
inc
mov
call
mov
cmp
cmp
or
pop
fnstsw
out
mov
xlat
jb
outsl
pop
sbb
or
xlat
dec
fs
pop
or
mov
shll
adc
inc
push
cs
jb
inc
dec
mov
rorl
movsb
add
mov
jg
add
mov
inc
mov
mov
enter
add
add
mov
leave
sbb
mov
lea
sbb
loopne
popa
inc
dec
lahf
sub
negb
and
jle
daa
lods
dec
pusha
mov
or
lret
adcb
into
jl
pop
xchg
fs
mov
xchg
dec
stos
jle
pop
and
mov
inc
mov
es
or
push
mov
cmp
dec
shl
gs
ret
bound
xchg
leave
out
repz
jecxz
mov
leave
adc
push
jno
mov
mov
xor
stos
sub
pushf
sahf
popf
xchg
mov
imul
test
jge
mov
rclb
jae
mov
xchg
faddl
pop
mov
cs
ljmp
add
jne
test
or
cld
fistps
sbb
shl
test
mov
js
or
repnz
adc
stc
jge
mov
lret
fwait
push
incl
pop
xor
cli
cmp
xchg
cmpsl
xor
adc
lret
pop
int
xor
dec
sub
cs
dec
mov
negl
fisttpl
mov
repnz
lahf
jbe
xor
das
stc
pop
loop
out
fistl
shll
pop
push
mov
push
sbbb
incl
sbb
cs
lea
nop
fnsave
sbb
sahf
cmpsb
pop
aam
mov
jb
ljmp
lahf
ret
imul
je
cwtl
jno
mov
cwtl
popa
movsl
adc
and
sarb
mov
aad
pop
xor
arpl
ficoml
sub
ja
jbe
imul
jbe
cmpsb
or
push
push
and
int3
cmp
or
cmpsb
fisttpl
jbe
mov
addb
lock
add
hlt
sub
cmp
movsb
mov
lock
push
rorl
movsb
adc
fidivrl
inc
shlb
aas
inc
loop
andb
mov
loope
movsb
stos
pop
xor
popa
sub
addr16
divb
mov
cmp
sub
es
push
pusha
dec
jg
xchg
out
adc
pop
fbld
inc
ret
test
arpl
and
dec
pop
inc
sub
fwait
in
leave
jns
int
fmul
mov
insb
sub
cli
xchg
pop
mov
xchg
mov
enter
out
push
pop
sahf
xor
mov
addl
xchg
out
je
in
cmp
mov
xor
xor
or
dec
push
push
repnz
mov
negl
mov
and
call
adc
rclb
jb
mov
inc
sub
out
inc
sbbl
insb
pop
push
mov
mov
sbb
inc
repz
fwait
insl
lods
mov
dec
or
clc
cmpsl
pusha
xchg
cmp
data16
push
push
int3
adc
out
ficoms
outsb
jae
movsb
xor
sbb
call
cmp
mov
mov
push
dec
pop
cmc
bound
inc
and
dec
mov
stos
pop
pusha
addr16
pusha
xchg
sbb
lret
test
int
xor
mov
dec
rol
or
push
pop
std
lods
inc
push
movsl
lret
enter
push
stos
pop
fcomps
lock
loop
mov
ja
lahf
out
push
cli
jg
and
jge
mov
dec
or
orl
nop
imull
cmp
cmpsl
insl
cmp
out
aas
pop
call
pop
lods
fldt
stos
push
xchg
loope
xchg
lahf
sbb
lcall
mov
ret
mov
jle
cs
out
nop
xlat
std
ret
pop
into
sbb
lcall
jg
pop
out
pop
dec
dec
mov
aas
pop
push
xchg
stos
push
leave
bound
scas
jmp
ret
xchg
aas
outsb
popa
push
or
cmp
loop
rcr
xchg
push
jg
aad
nop
jbe,pn
clc
in
ss
jmp
mov
lahf
cmp
add
adc
aad
inc
insb
xchg
sti
xchg
test
lods
into
out
lret
xchg
add
jno
and
pusha
xchg
repz
push
push
clc
inc
insl
rolb
dec
jbe
std
dec
inc
movsb
mov
push
xor
push
xor
popf
mov
adc
aad
movsl
add
stc
pop
subb
loopne
out
inc
xor
and
lods
jo
outsl
test
in
mov
inc
lock
jle
fwait
add
inc
sub
add
shrl
mov
outsl
sub
ljmp
fs
js
xchg
cltd
jns
int
mov
jp
je
jl
insl
int3
xchg
xchg
adc
lods
cmp
sbb
or
mov
jp
adc
adc
xchg
out
pop
lret
inc
xchg
aaa
ds
leave
rclb
sub
dec
pop
sbb
sbb
out
pop
mov
sbb
addr16
sbb
into
pop
je
ffree
in
mov
loop
push
jmp
pop
dec
adc
jne
call
mov
adc
pushf
fisubl
lcall
ja
stc
adc
popf
test
mov
or
xchg
lret
cmp
lret
into
in
adc
ja
push
mov
in
and
push
frstor
xchg
into
cmp
jno
mov
test
call
insl
pop
push
sbb
cmp
mov
or
aad
fnstenv
sub
clc
dec
push
imul
mov
or
or
data16
cmp
mov
sub
mov
insl
dec
mov
loop
jecxz
cmp
shrl
push
jne
lcall
sbb
mov
leave
loopne
call
pop
add
mov
dec
imulb
call
bswap
mov
cmpsl
loop
sbb
scas
lret
push
fsubr
enter
dec
lods
shl
aad
adc
or
pop
mov
insb
mov
stos
fists
xor
lods
adc
idivb
or
test
cmpsl
push
xchg
fsts
mov
mov
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
cmc
shlb
aaa
mov
ja
adc
jne
pslld
pop
stc
inc
cs
push
dec
add
pop
push
xchg
xchg
pop
jmp
dec
icebp
lret
lret
mov
adc
es
nop
or
sub
dec
mov
or
call
lahf
loopne
xor
xchg
imul
sbb
aas
in
push
cs
in
fiadds
in
mov
pusha
outsb
in
jae
xchg
into
xor
xor
or
repz
add
or
xor
cmp
movsb
in
fs
imul
dec
xchg
orb
int3
in
stos
outsl
rolb
push
fnstenv
mov
cmpsl
mov
or
out
cld
mov
popa
mov
cs
mov
xor
mov
cmp
inc
push
jmp
add
mov
add
pop
incl
lods
cs
in
sbb
fisubl
add
jecxz
cmp
adc
sbb
mov
adc
das
mov
into
in
ret
aaa
inc
insb
mov
arpl
in
test
xchg
mov
mov
pop
sbb
mov
adc
lock
xchg
pop
push
pop
cmpsb
adc
lea
imul
xor
pop
int3
pop
fwait
dec
mov
sahf
cld
jae
rclb
jg
adc
adc
push
jno
into
lea
xor
lea
mov
clc
jg
mov
pop
es
lock
mov
ret
xor
ret
fcmovb
leave
js
cwtl
fists
xchg
sub
pusha
xchg
mov
sti
jne
jbe
jmp
push
stos
cmc
xchg
out
xchg
pop
xor
inc
popa
test
push
push
aam
cltd
aas
adc
sbb
sbb
jns
aad
jae
lahf
fisttpl
inc
push
loope
aam
fimuls
pusha
outsl
fnstsw
jno
fdivl
cmp
cmp
dec
sahf
mov
xchg
pop
adc
mov
xchg
out
push
outsl
push
mov
pop
xorl
push
adc
outsl
testl
mov
imulb
push
jg
push
lea
dec
stc
push
test
mov
pop
dec
repz
push
decl
adc
and
rcrb
int
cmp
mov
pop
push
cmc
jl
pop
or
out
jbe
or
xor
xor
cmp
mov
out
adc
mov
and
mov
lods
hlt
pop
shrb
out
stos
out
ret
xchg
mov
pop
mov
lahf
dec
movsl
aas
es
or
rorb
inc
es
push
push
or
insl
adc
out
push
repnz
fcoms
in
insb
push
loopne
lea
and
out
xor
sbb
leave
rorb
xchg
pop
jmp
sbb
js
xor
jbe
scas
xor
cli
xor
add
pop
and
sub
cwtl
cld
push
jg
orl
sarl
jmp
push
sub
inc
pop
sub
xchg
push
cli
addr16
or
push
cmpb
bound
sub
repnz
jne
push
pop
cs
inc
jae
jmp
jb
and
cltd
addr16
popa
mov
xchg
jno
add
fs
movsl
inc
adc
adc
aam
pop
mov
outsb
mov
flds
push
fucomp
repz
movsl
xchg
std
mov
inc
iret
iret
sub
test
icebp
mov
cmp
push
sub
jle
vaddsd
aam
gs
mov
lret
dec
in
jecxz
cwtl
mov
sub
mov
andl
cwtl
movsb
push
push
or
jg
pop
imul
xchg
aad
sbb
cmp
push
sbbb
loop
sbb
es
icebp
pop
shrb
mov
add
lods
scas
imul
jnp
aam
into
pusha
stos
roll
inc
into
mov
aam
pop
inc
or
lret
stos
mov
das
pop
sub
cltd
aaa
xor
jo
insl
add
mov
xchg
xchg
pop
loope
push
shlb
mov
pushf
movsb
push
icebp
arpl
je
fisubl
or
stos
fsubrl
inc
adc
push
sub
sbb
xchg
pop
call
sarl
out
scas
sti
jns
call
leave
cmp
data16
repnz
in
mov
lea
xchg
mov
jae
outsl
insl
jp
add
mov
pop
xchg
push
lcall
rorb
and
mov
inc
push
pop
cld
mov
mov
shl
ljmp
pop
mov
std
lahf
dec
loop
mov
mov
push
lret
stos
idivl
dec
add
add
inc
sbb
fstpt
jne
jns
lock
jge
pop
push
leave
push
stc
adc
mov
shlb
cs
inc
pop
fisubrl
int3
xor
mov
xchg
xor
xchg
ret
int3
jmp
pusha
or
out
fistpl
and
stos
enter
nop
and
dec
push
dec
cmp
out
lods
and
sub
imulb
lcall
sbb
xor
xor
mov
insl
cs
int3
imul
aaa
ljmp
test
out
lods
pop
pop
cs
cld
sub
shrl
outsb
nop
pop
pop
xchg
mov
repz
je
jecxz
loop
inc
sub
jb
push
outsl
push
adc
scas
rcrl
addr16
sbb
imul
pop
das
pusha
leave
fisttps
int3
test
sbb
arpl
leave
and
subl
push
fnstsw
repz
inc
mov
shll
mov
fnstcw
cmc
lret
rcll
cmp
sbb
cwtl
pushf
shl
in
mulb
sub
in
adc
lods
test
das
sahf
imulb
xor
aaa
xor
aaa
xchg
ss
in
pop
cld
cld
rclb
js
push
cmp
pop
loopne
outsb
jbe
scas
mov
mov
scas
jmp
add
sbb
mov
dec
je
jecxz
mov
leave
cmpsl
sbb
jns
jg
jmp
push
cmc
jne
inc
cmpsl
mov
inc
insb
xor
inc
ds
fdivrs
xor
loopne
out
fdivrs
mov
shlb
lods
dec
int
xchg
lds
fdivrl
mov
add
mov
xor
stc
sbbl
pop
push
fdivrp
sub
and
push
test
leave
xor
in
test
jae,pt
je
cmpsl
out
jns
pusha
test
push
xchg
scas
insb
xlat
sbb
stc
hlt
scas
xor
inc
push
mov
or
xchg
add
and
mov
lock
cwtl
scas
dec
cmc
and
push
daa
movsb
xchg
ror
and
sarb
mov
mov
lret
test
outsb
inc
shl
aam
inc
inc
sub
mov
dec
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
sub
iret
mov
js
push
rcr
inc
call
push
xchg
push
adc
lea
in
lods
jl
addr16
fs
or
div
mov
into
stos
push
daa
insl
sar
jae
lret
idivl
out
stos
movsl
movl
stc
lret
sbb
or
pop
out
jne
out
mov
push
mov
fldenv
push
pop
or
ljmp
cltd
insl
out
out
mov
jo
sbb
cs
dec
fildll
inc
push
out
lock
mov
and
xor
in
mov
gs
add
inc
xchg
sbb
inc
dec
xchg
fwait
xor
add
stos
jecxz
ds
adc
lea
daa
xor
mov
stos
jns
xchg
cli
cmp
mov
add
imul
xor
adc
pop
jo
dec
test
nop
pusha
dec
adc
adc
daa
xchg
dec
pop
cmpl
and
ds
adc
int3
pop
inc
mov
in
in
adc
roll
lahf
sbb
fisttps
lret
loopne
jns
sub
js
ret
add
xor
push
mov
mov
adc
cltd
loopne
lahf
jne
int3
mov
xor
jnp
jle
movl
xor
pop
push
and
lock
daa
nop
loopne
cltd
dec
sbb
jb
lahf
jg
xchg
pop
fs
int3
mov
cmc
ljmp
fs
mov
and
jnp
jne
push
mov
xchg
xchg
sahf
jb
bnd
inc
jle
stos
sub
rorl
in
xchg
lds
and
inc
shr
sahf
cmp
sub
cmp
adc
movsl
mov
pop
mov
lret
test
adc
mov
test
inc
sbb
aam
mov
mov
subb
daa
adc
jae
cmp
dec
or
mov
xor
jp
ror
jne
add
and
dec
ljmp
orb
daa
pop
dec
jmp
insb
push
and
or
sti
test
repnz
lcall
aam
xchg
ja
lock
cmp
inc
pop
fbld
stos
pushf
adc
mov
aas
cmp
pop
popa
mov
adc
push
pmaxsw
add
fisubs
pop
sub
adc
addr16
leave
lods
cmpsb
adc
daa
pop
jbe
ds
and
mov
mov
push
mov
daa
sbb
sub
stos
ljmp
aas
in
pop
jnp
or
mov
cmpsl
repnz
sti
push
cld
xchg
insb
and
add
mov
xorl
fst
mov
ds
fdivr
cmp
out
mov
mov
mov
pop
je
pushf
jmp
lcall
testb
clc
gs
jle
or
xor
adc
cmpsb
push
adc
imul
and
add
stc
pop
mov
sub
and
rclb
xchg
adc
jb
dec
gs
cmpsb
shrb
shr
xor
lcall
popf
pop
sub
or
lods
xchg
pushf
repnz
add
outsb
push
mov
adc
mov
lret
andb
mov
sub
or
xor
xor
add
lea
pop
movl
sahf
jbe
or
pmuludq
push
lods
cli
xchg
divl
aad
push
mov
dec
int
pop
psllq
fwait
jle
sbb
ljmp
out
push
cli
xor
clc
mov
sbb
xchg
in
js
mov
sub
and
aas
hlt
xchg
add
or
inc
mov
mov
shlb
int
ss
and
imul
dec
dec
jae
xor
jae
loopne
jp
testb
and
orb
loop
mov
push
dec
xabort
adc
pop
sti
rorb
cmp
leave
inc
jmp
test
jl
mov
fdivs
aad
inc
mov
fiadds
outsl
jmp
daa
xchg
and
jo
mov
and
sbb
push
test
cli
push
xchg
dec
fcompl
mov
ffreep
pop
inc
or
cld
andb
int3
iret
stc
cs
cmpsb
pop
push
sbb
out
scas
into
and
mov
cld
jb
fwait
loopne
inc
mov
push
jecxz
verw
outsl
jecxz
test
push
aaa
sbb
dec
or
pusha
pushf
lods
adc
js
pusha
dec
push
stos
push
mov
mov
jb
xor
ret
mov
adc
outsl
pusha
adc
fistpl
dec
mov
fstpt
sub
jle
outsl
dec
jge
pop
sti
pushl
jbe
adc
sahf
loope
enter
xchg
in
add
stos
rorb
addr16
adc
jmp
call
in
push
jae
or
or
pop
outsb
xchg
push
jge
push
dec
stos
jnp
jl
xchg
push
insl
cltd
pushf
jb
inc
sbb
pop
ja
inc
push
xchg
jne
and
sub
adcl
cmp
loop
in
mov
data16
dec
add
xor
loope
imull
pop
or
mov
mov
loope
jb
in
dec
sti
pop
aas
out
xchg
pop
pop
jnp
mov
inc
push
cmc
mov
in
adc
in
xchg
lods
test
imul
jecxz
shlb
xchg
jno
out
xchg
xor
xor
mov
out
imul
sbb
mov
test
pop
sub
pop
cmpsl
push
test
test
pop
sbb
cwtl
imul
add
mov
std
adc
jg
cmp
push
test
mov
sbb
in
out
test
stos
push
xor
sbb
and
rcr
inc
mov
fscale
mov
addr16
push
cmc
ljmp
adc
adc
mov
jo
loopne
loopne
xor
in
sbb
add
add
int
mov
enter
cmp
pop
jno
popf
xchg
cmp
adc
mov
cwtl
adc
or
push
int3
xlat
inc
mov
or
icebp
push
xlat
repnz
dec
mov
xchg
out
mov
dec
popf
das
push
xor
fmull
mov
or
push
xor
icebp
add
push
scas
js
repnz
out
outsl
cmp
fdivr
and
mov
mov
sbb
je
fldl
jo
xorb
test
mov
and
cmc
xchg
lret
sbb
mov
cmp
push
nop
fiadds
push
fists
mov
add
aam
dec
dec
call
mov
out
mov
cmc
rcr
xchg
ret
jae
xchg
push
mov
add
push
or
push
cmp
and
push
rcl
lcall
shll
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
pusha
int
mov
ja
fidivs
inc
lahf
xchg
sub
fldz
push
fdiv
add
cmp
out
sub
rol
out
arpl
jae
orb
sub
movsb
dec
adc
movsb
lret
clc
jmp
jnp
in
cmpsb
mov
loope
rolb
pushw
test
mov
sbb
cmp
sub
xchg
fidivs
jno
adc
jno
jno,pt
loope
into
aas
cltd
or
mov
mov
push
inc
jl
sbb
pop
mov
mov
dec
pop
int3
ret
lods
lea
leave
loope
pop
out
cmp
cmp
pop
or
arpl
movsl
sub
mov
rclb
stos
lods
rep
cmp
daa
pop
int3
pop
test
test
fisubrs
in
aam
push
inc
lahf
dec
push
push
out
add
ret
xor
adc
inc
int3
cld
into
adc
ds
xlat
pop
push
xchg
pop
insl
lretw
mov
std
dec
shlb
and
hlt
out
int
inc
and
pop
lock
test
push
dec
cmpsb
or
and
fs
jae
mov
or
jg
stc
jne
clc
dec
mov
call
dec
cmc
repz
nop
mov
movsb
movsl
mov
dec
in
scas
mov
add
js
imul
pop
dec
mov
insl
or
test
mov
cmp
adc
mov
push
iret
rolb
inc
fisubl
jge,pn
xor
mov
dec
lcall
xlat
jae
pop
insb
mov
rcrb
mov
sbb
leave
jmp
mov
sbb
push
das
pop
mov
daa
xor
jnp
mov
jno
adc
orb
sub
add
call
pusha
std
pop
xor
scas
pop
xchg
mov
popf
lahf
adc
sbb
xchg
mov
mov
lods
lods
data16
sti
mov
mov
cmp
daa
icebp
icebp
and
xchg
std
imul
mov
mov
ret
sahf
mov
hlt
mov
pop
inc
lods
jl
loop
stc
outsb
call
and
in
sti
dec
fidivs
xchg
cmp
lcall
call
fdivrs
dec
mov
imul
cld
xor
pop
jmp
pop
ljmp
fwait
repnz
aaa
xchg
pop
lret
push
xlat
les
scas
jae
and
sbb
push
xor
jmp
out
dec
iret
mov
incl
jbe
mov
shl
xorl
addr16
or
int3
xchg
mov
in
lret
pop
mov
je
in
fs
test
stc
aaa
cmp
or
xlat
pop
xchg
fldenv
or
cmc
mov
sub
sbb
push
jb
pmulhuw
loope
les
fimuls
xor
push
inc
add
loop
mov
loope
jle
xchg
jns
cltd
inc
hlt
cli
jnp
icebp
pop
xor
or
jne
fwait
les
inc
mov
sbb
inc
dec
leave
or
jno
cmp
pop
add
push
dec
mov
xchg
push
nop
loop
mov
mov
mov
sarb
dec
mov
clc
nop
fadd
int
data16
in
cs
and
sbb
leave
cs
adc
les
ficoms
push
outsb
sbb
mov
mov
into
or
mov
fstl
and
ret
shl
leave
outsl
mov
enter
push
dec
into
lods
add
push
loope
leave
movsb
jecxz
pushf
mov
mov
mov
jp
mov
or
xlat
pop
push
jle
xchg
into
into
dec
aaa
icebp
andb
push
jo
jae
insl
imul
push
xor
mov
push
test
push
xor
js
jb
ljmp
into
or
adc
xor
cwtl
inc
arpl
roll
xor
pop
test
and
loope
inc
xchg
movsb
xchg
xchg
lods
pop
into
popa
rolb
popa
pushf
xor
loopne
jne
push
aaa
dec
mov
fstpt
inc
and
xchg
mov
lret
xor
dec
fadds
sub
out
fnstsw
mov
iret
hlt
add
out
icebp
hlt
out
mov
es
xchg
jae
mov
stos
xchg
sbb
stos
mov
pop
mov
fstpl
or
push
inc
pop
adc
stos
cmp
pop
push
ljmp
cld
dec
xchg
and
repnz
and
mov
int3
cmp
mov
mov
shll
mov
inc
dec
jnp
sbb
cmpb
adc
xchg
cld
sbb
int
rcrb
mov
add
stos
fwait
nop
jp
add
in
lock
scas
xchg
test
fsubp
pop
aam
push
cmpsl
ljmp
adc
fisttps
sahf
mov
daa
test
cli
je
adc
test
mov
pop
jns
pop
push
hlt
jl
mov
popf
push
push
je
lods
fs
pop
xor
sbb
loope
addb
inc
aaa
or
fs
cmpsb
icebp
test
cli
cwtl
add
rolb
sub
sbb
cld
xor
in
add
add
sar
cmpsb
cmpb
ss
add
xchg
inc
arpl
ret
testb
roll
mov
popf
inc
sahf
dec
out
pushf
mov
xchg
roll
add
les
lahf
cmp
mov
sti
int3
inc
jp
data16
into
out
test
pop
jae
dec
mov
sub
mov
cmp
inc
in
icebp
adc
jbe
lock
dec
loopne
ss
cmc
jmp
xor
je
fistps
and
dec
push
pop
cmp
out
xlat
int
dec
das
push
lahf
jmp
cmc
pusha
jp
xor
ret
roll
xor
fiadds
popf
arpl
xchg
sti
dec
getsec
lret
xchg
add
cmp
test
aas
es
cli
sbb
inc
clc
dec
fadds
and
xor
push
and
xor
push
dec
mov
andb
in
insb
shl
movsb
dec
mov
push
xchg
roll
daa
dec
fs
mov
mov
adc
sbb
scas
arpl
out
subl
insl
mov
jle
xchg
js
dec
es
mov
jl
jno
inc
add
in
lock
call
mov
mov
fsubrl
jnp
mov
jno
sub
addr16
mov
cwtl
shl
push
dec
stc
xabort
push
add
push
push
push
jno
and
fwait
push
inc
sub
std
or
nop
sbb
popf
loop
add
pusha
push
adc
fwait
mov
bound
cs
stc
cmp
xchg
sub
jp
ss
dec
scas
dec
sbb
lcall
sub
xchg
movsl
cmp
add
cmp
movsl
or
outsl
rorl
sbb
lock
orb
pusha
push
hlt
add
jne
imul
adc
sti
mov
mov
je
loopne
sbb
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
ljmp
ja
clc
addr16
outsb
lock
js
int3
aad
leave
mov
mov
pop
scas
std
imul
and
jl
in
add
imul
sub
out
sub
adc
pop
call
xor
aad
dec
jae
xchg
loopne
mov
sbb
mov
stos
or
xchg
andnps
imul
pop
je
int
dec
std
cld
jmp
inc
test
cmp
mov
xlat
repnz
xor
mov
xchg
dec
fimuls
and
les
jmp
movsb
adc
scas
loopne
shlb
mulb
lods
inc
dec
xor
add
pop
dec
data16
jae
push
mov
and
gs
shll
nop
sub
inc
scas
test
sbb
outsb
in
mov
js
or
add
push
dec
iret
lods
and
scas
cmc
leave
adc
fdivl
jge
sbb
cmpsl
fst
and
adc
adc
int
cli
mov
loope
cmpsl
dec
icebp
out
rorb
xor
loope
xor
or
adc
mov
add
mov
dec
cld
push
ljmp
aas
pop
insb
and
sbb
fildl
stos
iret
add
mov
and
adcl
mov
cltd
leave
sbb
xor
test
leave
or
jp
int3
push
in
or
sbb
cmp
pop
xchg
or
lret
sahf
sub
jl
or
mov
add
cmp
mov
pop
mov
data16
push
loopne
mov
ds
dec
pop
dec
out
loopne
cltd
jbe
add
lret
xchg
shlb
cmova
pop
movsb
mov
add
or
push
hlt
shll
fsts
fdivrp
push
push
pop
repz
ds
aam
mov
push
loope
mov
xor
je
call
sbb
mov
lret
mov
bound
mov
jl
in
xor
sbb
push
mov
inc
int
xchg
or
andb
xor
test
push
inc
ret
lods
dec
shrl
loope
aas
mov
adc
add
cmp
clc
jnp
lcall
test
lret
ja
sbb
stc
jno
dec
pop
add
pop
sbb
int3
inc
mov
shll
into
imul
ds
cmpsl
cmpsl
faddl
repnz
aad
ret
int
stos
inc
add
in
dec
int
jmp
xchg
pop
hlt
sbb
mov
jno
inc
fildl
pop
xchg
nop
xlat
clc
jmp
cmp
jae
xor
cwtl
push
add
sti
loop
sbb
mov
cmpb
ja
pushf
test
mov
add
loop
cltd
or
pop
xor
aam
in
push
xchg
iret
pop
or
imul
arpl
stos
sub
lea
clc
push
and
mov
adc
lods
loope
pop
xchg
cmp
daa
or
push
shrl
mov
jne
jge
sub
mov
lea
adcb
cmp
int
loop
xor
jae
push
mov
cmp
jl
rorl
ret
lret
inc
pusha
out
cmp
or
aas
orb
push
mov
test
daa
js
xchg
pop
mov
aam
ja
sub
andl
aaa
fs
mov
xor
out
add
pushf
sbbb
dec
repnz
pop
roll
adc
pop
jns
mov
adc
ret
mov
insl
mov
jmp
xor
loopne
jp
push
int
jmp
sbb
lea
aas
cwtl
add
addr16
dec
pop
in
fcmovnbe
cmp
inc
pop
and
dec
adc
mov
pop
popl
into
loope
pop
outsl
outsb
push
add
mov
mov
hlt
push
test
jo
sub
ja
xchg
xchg
pop
and
jb
ja
xchg
bound
lock
fsubs
outsb
loop
pop
in
cmc
or
icebp
out
cmc
adc
sbb
ret
inc
cmovnp
add
mov
mov
push
inc
loopne
movsb
loop
sub
cmp
mov
cmp
mov
xor
mov
addl
test
cmp
mov
into
or
fnstenv
in
xchg
dec
arpl
inc
imul
inc
xchg
mov
push
loope
push
in
imul
loope
insl
iret
mov
in
pushl
adc
and
fdivl
out
push
mov
cmp
imull
jo
clc
sahf
mov
dec
cmpsb
mov
decl
imul
xchg
sbb
mov
lahf
adc
es
cmp
fimull
mov
adc
into
dec
test
lcall
fldenv
pusha
cmovae
frstor
and
ljmp
into
dec
rcl
int3
sbb
mov
mov
xor
data16
cmpsl
inc
and
out
loopne
jge
mov
loope
jno
divb
adc
jl
xchg
in
fistps
mov
inc
scas
ja
cld
xchg
cmp
je
and
xchg
pop
loop
pop
loopne
scas
mov
pop
push
xchg
fidivrs
test
mov
pusha
lret
fisttps
jo
or
das
inc
xor
xlat
pop
jne
imul
mov
push
push
les
add
shrl
mov
inc
adc
cli
iret
or
cwtl
mov
repnz
pop
test
pop
cmp
ja
mov
out
add
addr16
dec
mov
fdivr
leave
cmc
insl
jo
jnp
xchg
test
movsl
xchg
in
sbb
pop
insb
inc
xchg
shlb
cmpsl
pushf
aam
cltd
ja
shrb
and
ds
lahf
or
dec
xor
mov
pop
insb
lahf
dec
stc
lret
pusha
and
outsb
lret
jbe
xchg
mov
std
sub
xor
out
rcrb
insl
mov
push
jb
js
shlb
inc
loopne
push
pop
fnsave
mov
movl
data16
mov
insb
loope
imul
mov
cmp
mov
icebp
sub
out
mov
cmp
cli
or
int3
xchg
and
inc
jnp
pop
push
stos
out
xchg
aam
sbb
push
xchg
push
loopne
rcll
lds
aad
add
or
dec
inc
shll
mov
sar
and
add
inc
data16
jo
jnp
les
jnp
js
add
adc
jge
sub
jae
dec
fwait
jp
repz
cmpsl
mov
fnstsw
cltd
enter
dec
sbb
dec
and
xchg
or
sbb
push
mov
in
jns
mov
leave
mov
mov
mov
xchg
pop
jmp
cmp
icebp
fsubrs
push
xchg
mov
dec
and
mov
mov
mov
jmp
aam
inc
test
addr16
add
mov
outsl
ja
adc
xchg
pop
fsub
fnstenv
xchg
cmc
jno
xlat
and
dec
add
jecxz
es
adc
or
pop
loop
and
or
or
mov
inc
mov
cmp
push
pusha
jb
iret
hlt
dec
xchg
int3
sub
jbe
inc
notb
or
jae
or
and
notb
jp
sahf
or
cmp
or
push
mov
orb
and
out
xchg
adc
sbb
jnp
xor
js
daa
stos
xchg
mov
xor
fs
lret
clc
pop
mov
inc
push
jbe
ficoms
push
add
mov
daa
inc
in
mov
mov
mov
scas
outsl
test
dec
je
out
sbb
cmp
int3
fs
testb
jecxz
test
mov
mov
sbb
data16
aam
loope
shlb
testl
cmp
jo
lods
add
cmc
dec
pop
repz
cmp
sbb
sbb
jp
inc
mov
and
imul
fnsave
inc
in
xlat
cld
mov
dec
iret
sub
mov
int3
adc
outsb
mov
not
and
xlat
adc
inc
xchg
leave
pop
mov
sbb
mov
add
add
sub
out
les
sbb
xlat
repnz
lahf
outsl
and
imul
pop
aad
enter
data16
adc
push
iret
dec
pop
and
mov
in
adc
fidivrs
ret
mov
fwait
xlat
jbe
aas
xor
pop
stos
cmpsl
mov
push
pop
xchg
lret
push
add
cli
or
insl
mov
sbb
add
mov
push
movsl
into
pop
push
test
adc
sbb
mov
shrl
or
mov
movsl
push
fadds
enter
out
cwtl
hlt
xor
xor
fcmovne
push
mov
jo
mov
nop
ljmp
jno
out
aad
add
pop
fistpl
dec
movsb
push
and
xor
leave
and
inc
mov
sub
or
add
xor
xchg
cmpsl
dec
inc
xchg
in
in
adc
ljmp
ficomps
aas
sti
cwtl
aad
rcr
jo
mov
loopne
pop
andb
in
inc
gs
mov
or
sub
mov
daa
out
sbb
lock
push
outsb
daa
clc
dec
aas
in
mov
out
push
lods
mov
loopne
xor
cmpsb
cmp
les
sbb
xor
push
outsb
scas
inc
es
sbb
cmp
shrl
cmp
cmpl
or
push
cmpsl
cmp
mov
test
movsl
and
sbb
mov
lret
push
mov
push
into
test
das
out
xor
mov
dec
cltd
sub
mov
xchg
push
aad
pop
add
nop
enter
mov
mov
inc
cmc
movsl
in
cmc
sub
pop
test
and
jno
push
dec
sahf
frstor
fidivrl
into
int
inc
das
or
sub
mov
fsts
fcom
mov
insb
mov
shl
mov
sbb
lret
fsubs
sub
cmp
or
mov
mov
je
out
pop
sbb
inc
cmp
jae
or
or
or
xor
sti
into
mov
and
cmp
in
xchg
int3
sbb
daa
mov
shlb
cld
mov
pop
or
push
pop
sbb
mov
push
sub
js,pt
add
aas
mov
cmpl
xor
out
pop
sub
cli
mov
sahf
loope
jbe
sbb
push
adc
push
imul
sbb
movsl
sbb
fisubl
inc
jmp
mov
cltd
dec
xor
jle
sbb
aad
scas
insb
lea
and
mov
xor
mov
sub
popf
inc
mov
mov
addb
leave
sahf
xchg
fisttps
or
lret
xchg
cmp
movsb
adc
cmc
loopne
push
xchg
orl
lahf
xor
outsl
mov
xor
cmp
push
xchg
insb
je
and
loop
pop
sbb
or
mov
pop
das
adc
xchg
shrl
in
mov
jnp
aad
lock
in
cmc
dec
movsl
xor
fsubs
mov
jle
cmp
mov
sbb
sub
xor
mov
pushf
mov
pop
and
rorl
imul
mov
fcmovbe
jmp
mov
jbe
jne
shrl
mov
in
xor
add
icebp
jl
cld
push
lea
cmp
inc
jp
push
mov
pushf
bound
clc
fdivr
rorb
or
jge
mov
fdiv
or
push
orl
adc
mov
sbb
dec
cmp
stos
pop
and
test
xchg
out
xchg
mov
fstl
aad
sbb
inc
xchg
add
or
adc
aam
cmp
and
inc
das
aad
cmp
mov
push
xor
mov
out
xchg
sbb
push
push
test
in
mov
mov
sub
fists
xchg
lods
test
fmul
mov
jecxz
adc
xor
pop
xor
add
ret
jo
mov
dec
and
jb
push
stos
in
inc
mov
pop
lods
mov
mov
aam
shl
or
mov
pusha
xchg
sbbl
push
hlt
mov
mov
add
pop
dec
es
jp
mov
mov
dec
add
repnz
jp
mov
xor
mov
mov
adc
jnp
sbb
and
bound
test
xor
int
mov
mov
mov
push
inc
mov
mov
jge
add
mov
incb
dec
xchg
insb
xor
imul
aas
xor
lret
pop
call
cld
sbb
push
fdivr
repnz
adc
repz
and
shrb
pushf
test
imul
leave
pop
mov
xchg
and
inc
cmp
sub
pop
popa
cld
out
sti
jo
mov
stc
pusha
sub
push
jne
inc
mov
cmpsl
and
pop
call
sbb
add
sbb
lret
rcll
jmp
jg
out
cmc
arpl
jl
call
pop
adc
arpl
sub
push
test
into
push
subb
pushf
fcomps
jnp
fmulp
rcrb
jno
shrl
sbb
xchg
jnp
dec
orl
mov
jno
fs
or
or
insb
popf
addb
rorl
insl
rcll
adc
mov
fimull
lds
add
in
jle
push
jno
jno
in
push
enter
gs
testl
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
pop
pfsubr
lea
mov
rorl
sarb
cmpb
sti
nop
jbe
mov
add
mov
mov
out
or
or
jle
jne
jmp
sub
push
in
inc
xchg
mov
idivb
stc
pop
lahf
test
icebp
dec
or
fwait
xlat
add
xchg
pop
pop
jne
jl
push
jne
popl
insb
push
and
ja
ret
adc
inc
mov
ja
adc
stos
mov
ds
cmpsl
lea
lods
sbb
push
sub
cld
pavgb
insl
lahf
mov
out
jmp
jmp
cmovbe
insb
push
repnz
stos
push
dec
sbb
mov
loop
mov
je
cmp
pusha
mov
fs
je
mov
shr
lods
mov
ljmp
clc
mov
jns
dec
xor
and
roll
adc
push
xlat
js
sbb
vrcpps
imul
mov
out
cmp
js
jbe
sbb
or
mov
test
cmp
push
sub
push
insb
das
xchg
jmp
adc
inc
cld
in
or
adc
xchg
incb
stos
mov
fildl
dec
ss
ret
jl
pop
aam
xchg
cmpsl
adc
nop
fwait
cs
mov
shl
mov
push
dec
fcmovnbe
jo
daa
xor
mov
sahf
aas
je
jns
lods
fdivrl
rcll
and
insb
jg
pop
popa
in
xor
shrl
call
aaa
pop
pop
sti
or
add
cmp
cmc
push
jae
add
cmp
xchg
xor
pop
call
imul
ja
stos
dec
sbb
dec
testl
scas
xchg
cmc
in
gs
cmp
call
cmp
jge
ss
ret
lea
sbb
dec
pop
xchg
repz
xor
push
jge
movsb
xorl
or
mov
push
jg
sbb
aas
inc
lret
pop
aaa
xchg
aaa
or
mov
loop
inc
ss
dec
mov
and
pop
out
mov
pusha
cmpb
cmpsl
jg
mov
les
pop
pop
sub
fs
pop
sahf
out
jmp
mov
outsb
push
or
pop
xor
mov
push
pushf
jno
sbb
jbe
data16
mov
lea
cltd
jno
sub
pushf
lret
jo
sub
jae
jbe
xchg
stos
daa
pusha
mov
mov
enter
xchg
adc
push
jns
xchg
push
in
call
or
imull
popa
xchg
cmc
cmpsb
xor
out
jmp
stc
out
mov
ja
stos
add
movsl
push
add
pop
push
lret
push
lahf
das
push
cmp
pop
es
lret
xchg
dec
in
mov
jecxz
add
sti
and
inc
cmpsl
xchg
push
cmp
and
push
and
es
push
sbb
roll
add
cmp
lcall
sbb
jns
and
pop
ffreep
jmp
inc
mov
pop
push
mov
scas
and
int3
leave
or
stos
xchg
mov
and
mov
mov
inc
mov
pop
fisubl
hlt
push
test
popa
jo
dec
inc
jbe
lret
arpl
cmp
in
roll
stos
jle
sbb
rolb
loope
xchg
dec
mov
lds
pop
dec
push
rclb
imul
pushf
and
popa
jle
ret
xchg
lods
mov
mov
popl
and
and
fdivrl
push
add
xlat
in
ficompl
test
xchg
xchg
fs
jne
sbb
mov
jecxz
ja
out
sub
cli
and
pop
nop
loopne
clc
sbb
inc
mov
enter
mov
in
xchg
push
test
sbb
ret
mov
clc
shll
ljmp
jmp
fcmovb
andb
push
xchg
push
add
push
fimuls
popa
xchg
xor
movsl
je
cmp
ja
rorb
out
les
mov
cmp
insb
pop
rcrl
aas
xchg
movsb
adc
dec
push
pop
roll
pop
in
bound
xor
jae
xchg
sbb
pop
jae
pop
push
scas
loop
or
jle
cmp
lock
mov
stc
push
pop
repz
xchg
and
jmp
jne
mov
mov
inc
scas
mov
clc
push
push
clc
xor
dec
dec
mov
inc
das
cmpsl
sub
pop
jnp
xorb
jp
dec
repnz
leave
shr
into
jmp
aad
adc
test
mov
cmovo
and
and
ds
sub
cmp
mov
pop
out
sbb
mov
inc
inc
shll
mov
push
scas
mov
loopne
test
pop
or
test
in
pop
cld
jge
xchg
mov
sbb
dec
push
repnz
js
aas
jge
fucomp
push
adc
lret
in
jl
shrb
cmp
lea
or
lret
push
mov
popf
int3
arpl
pop
xchg
inc
inc
pop
in
mov
push
test
sbb
dec
rcrb
lret
mov
pop
push
sarb
emms
sub
xchg
into
jle
inc
push
sub
ds
out
in
popf
inc
mov
push
or
imull
int
leave
cmpsl
repz
lcall
out
jle
fcomps
xchg
fnstenv
hlt
outsl
push
movsl
fisttpll
jmp
cmp
push
sub
addb
cmpl
fidivrs
cmp
js
aaa
movsl
into
ja
inc
mov
or
cmpsl
fistps
xor
dec
mov
and
adc
ja
stc
repnz
xorl
cmp
ret
mov
mov
cmp
jnp
inc
push
in
cmp
les
mov
repnz
jb
add
fwait
repnz
and
pop
mov
push
mov
mov
fdivl
xchg
jb
add
pushf
pop
js
fnsave
dec
outsl
arpl
xchg
or
add
cmp
xor
aas
cltd
aas
mov
and
mov
dec
test
xchg
stos
rcrb
popa
scas
les
rol
jnp
mov
arpl
pop
pop
lcall
cmp
sbbb
lods
add
push
jp
xchg
je
sub
sbb
out
xor
inc
leave
js
inc
cmp
dec
loope
add
gs
mov
mov
aaa
loopne
outsl
xchg
lock
jbe
mov
fsubrl
roll
sbb
dec
into
jg
cs
xor
mov
dec
cld
and
cs
jecxz
xchg
mov
dec
dec
jecxz
xchg
cli
movsb
mov
mov
aaa
pop
mov
dec
or
cwtl
iret
aam
mov
je
inc
mov
je
jl
cmp
outsl
out
sahf
inc
int3
pop
sbb
push
add
pop
stos
mov
addb
mov
or
daa
mov
mov
sub
movlps
xchg
mov
adc
jo
or
out
inc
pop
pop
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
fisttpl
ja
or
lds
jno
mov
xchg
xchg
mov
scas
or
jo
push
lea
sahf
and
sbb
rorl
push
cmpsl
pop
xlat
pop
pusha
mov
mov
test
in
dec
adc
repnz
xchg
push
or
aad
pop
leave
sub
pop
sbb
mull
js
inc
jle
jno
inc
or
adc
aad
cld
test
mov
std
repz
sub
push
jecxz
xor
cwtl
dec
das
pop
jns
jle
mov
stos
inc
dec
mov
cs
out
shl
pop
adc
idivl
rcrl
insb
mov
xor
sub
add
inc
iret
stos
dec
jg
ret
in
loop
dec
js
psrlw
jle
aas
xchg
add
and
dec
scas
mov
fistpl
and
adc
dec
repnz
int3
push
jne
std
mov
xchg
mov
sbb
adc
in
test
int
adc
cmp
jnp
sbb
mov
lods
daa
add
test
sbb
mov
xchg
hlt
push
and
aas
jns
mov
fnstsw
dec
fcmovnbe
enter
in
mov
es
cmp
aaa
mov
lds
cld
xor
jp
mov
sbb
mov
hlt
in
insl
addr16
fcoms
cli
push
mov
cmp
mov
sbb
das
push
and
repnz
ljmp
icebp
arpl
loopne
pop
inc
pop
iret
mov
xchg
jbe
and
sub
loope
jae
xor
ds
adc
pop
subl
sbb
fbld
push
mov
stos
inc
and
add
scas
and
fsubs
cmpl
cmpsb
out
repnz
lahf
mov
idiv
enter
pop
mov
bound
push
inc
orb
mov
pop
out
aam
xchg
push
daa
jmp
cmpsb
icebp
inc
fmull
les
addb
and
pop
sub
ds
and
add
cmpsb
insl
ret
sbb
mov
xchg
cli
jmp
jno
dec
test
shrb
adc
ficomps
jns
lret
shrl
out
aaa
movsb
adc
add
shrl
cmp
or
jecxz
sbbl
scas
fsubrl
lea
sub
sub
cmp
clc
jge
cmp
add
pop
sbbb
xchg
push
mov
and
andl
std
fistpll
int3
mov
cmp
fsts
pop
sbb
add
scas
add
push
les
mov
jecxz
sub
dec
jge
push
das
dec
mov
mov
mov
xchg
imul
add
jne
hlt
push
cmp
xor
and
clc
adc
xor
xchg
outsl
adc
mov
xlat
fidivrs
push
push
fwait
sub
stos
bound
daa
xchg
jmp
stos
jp
xchg
test
xchg
loopne
mov
mov
mov
jnp
inc
cmovno
xchg
lret
pop
js
es
dec
ss
dec
in
pop
repz
jmp
dec
dec
xor
xor
sbb
push
mov
mov
inc
add
dec
xchg
insl
testl
fmull
xchg
inc
mov
push
sbb
mov
cmpsb
dec
scas
notl
mov
popf
mov
cmp
and
xchg
dec
cmp
sub
iret
iret
dec
lea
xor
mov
popf
mov
push
sti
xchg
test
push
mov
aad
mov
scas
fsts
cmp
push
lock
push
test
in
hlt
adcb
mov
mov
mov
fisttpll
cmpsb
fldcw
fs
add
pop
out
bound
and
inc
pop
jbe
mov
cmp
mov
xlat
mov
cmpsb
addb
xchg
sub
and
or
jne
xchg
inc
data16
pop
inc
mov
stos
scas
cmp
out
cltd
stos
mov
xor
inc
mov
push
or
add
out
jge
jge
adc
push
cmpb
icebp
jg
popa
mov
sub
je
sarl
cli
movl
sub
icebp
fwait
fwait
lcall
outsl
mov
xor
cmc
lret
mov
fdivrl
hlt
cltd
jge
loopne
adc
adc
pop
push
ja
and
inc
call
cli
stos
mov
icebp
out
loop
push
mov
mov
fnstenv
in
add
xchg
adc
sti
sbb
mov
fwait
mov
int3
daa
pop
adcb
in
jae
cmp
les
cld
xchg
cwtl
mov
xchg
jns
fadds
pop
or
mov
shll
lods
or
call
icebp
subb
lcall
mov
inc
es
xchg
shl
mov
iret
sbb
sbb
decb
or
fldcw
or
push
shrb
and
jmp
jmp
shll
mull
dec
sub
iret
dec
dec
push
daa
pop
cs
jecxz
sub
add
mov
lret
pop
fldenv
mov
js
std
jecxz
std
mov
adc
xchg
cmp
dec
mov
xchg
lods
cmpsb
mov
add
add
or
rcll
xor
aam
pop
scas
loope
sbb
ja
int
pop
arpl
add
pop
cmp
fcompl
into
inc
mov
sbb
std
sub
arpl
in
add
adc
mov
hlt
ret
pushf
addr16
push
leave
rolb
in
mov
mov
xor
cmp
xor
pop
in
scas
test
ds
popa
es
jle
pop
dec
push
imul
loop
in
pop
jmp
je
fidivrl
aas
mov
test
cmp
xchg
out
inc
inc
mov
stc
adc
das
cmp
and
push
or
adc
fsubrs
lret
or
mov
test
repnz
push
in
out
mov
aas
adc
cmp
stos
add
cmpsb
add
rdpmc
int
hlt
rcrl
sbb
mov
mov
xchg
sub
jl
aas
xchg
jmp
lods
sarl
fwait
test
aad
sub
mov
inc
lahf
push
repz
outsl
stos
data16
cmpsb
mov
jmp
js
out
repz
fldl
mov
push
fcmovbe
sbb
mov
loope
int
cli
jno
fnstenv
mov
xchg
mov
push
pusha
jmp
in
dec
shll
cmp
jmp
adc
addr16
adc
call
arpl
inc
pop
jnp
out
cli
arpl
movsb
test
push
in
mov
push
mov
popf
pop
mov
push
push
movsl
xor
push
jge
pushf
jge
and
dec
arpl
addl
jbe
xchg
test
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
movb
ja
cmp
jbe
cmp
loop
adc
inc
pop
or
pop
lds
loop
xor
sbb
and
fistps
jle
out
cld
sub
xchg
repz
iret
inc
aaa
and
cmp
outsb
jg
addr16
pop
addr16
into
ja
sahf
xor
sti
jg
sahf
lret
inc
stos
jo
and
push
push
adc
sub
lret
jo
add
fstpt
mov
sar
mov
add
mov
arpl
ret
or
pop
hlt
push
in
jno
xor
in
clc
pop
call
sbb
jb
les
jle
jmp
adc
stc
or
xor
in
inc
repz
sbb
inc
cltd
dec
push
cltd
mov
mov
sbb
sub
jl
bound
mov
icebp
int3
in
in
sub
cmc
loop
loope
rclb
mov
dec
adc
xchg
mov
sbb
fmuls
popf
lcall
pop
mov
cmpsl
push
inc
push
push
test
mov
aas
pop
fnsave
lahf
mov
les
pusha
mov
jg
neg
ja
inc
addr16
dec
jbe
fsubl
sti
scas
or
or
sahf
lods
sbb
push
lods
or
and
in
xor
movsl
jle
jo
adc
imul
into
cltd
adc
inc
fisubl
addr16
outsl
mov
and
mov
jmp
jb
jmp
hlt
decb
lcall
roll
mov
inc
pop
out
mov
jge
rclb
push
pop
insl
dec
jge
fs
repnz
dec
lcall
aad
push
xchg
sbb
adc
mov
loopne
mov
xor
insb
rcl
sub
mov
es
jno
jle
dec
adc
aad
and
push
pushf
test
and
aad
sahf
sub
sbb
loopne
stc
jl
xchg
push
pop
popa
movd
in
xor
push
mov
pushl
mov
cli
in
int
pop
addr16
or
fnsave
push
loopne
inc
add
inc
lock
xor
inc
sti
ss
push
mov
mov
inc
mov
xlat
out
mov
and
or
xchg
push
pop
or
pop
xor
jo
lock
out
je
testl
es
outsb
push
xor
cmpsb
pop
sub
das
pop
pop
push
dec
cmpsl
sbb
in
xor
jns
sbb
xor
mov
add
mov
imulb
dec
pop
imul
sub
data16
lods
insl
rclb
and
sub
xchg
sahf
adc
push
jno
bound
xchg
dec
insb
data16
insb
xchg
insb
fs
int
aas
mov
xchg
clc
mov
cmp
in
lds
lods
push
xchg
xchg
push
push
testb
sbb
pop
dec
cmp
push
jg
pop
push
nop
std
cli
je
pusha
cmc
cs
leave
lcall
push
pop
push
push
aad
mov
cmc
shrl
push
jge
fwait
cmp
add
push
mov
ja
pop
sbb
mov
pop
je
in
inc
nop
pushf
test
out
pop
pop
xchg
sbb
bnd
cmp
mov
mov
fimuls
orl
xchg
push
push
mov
nop
aaa
sub
xor
or
lods
das
movhps
out
adc
sub
sub
sub
mov
mov
add
sbb
stos
xchg
pop
and
cmp
loope
outsb
test
shlb
sbb
jecxz
lcall
lcall
mov
and
ss
cmp
mov
push
dec
or
ret
movq
xchg
cmpsl
gs
dec
mov
inc
les
lock
sub
rcrl
imul
rclb
push
test
sarb
addr16
and
hlt
or
das
lret
mov
dec
or
mov
push
adc
push
cli
stos
out
pop
inc
mov
rol
inc
rcll
aad
es
jle
gs
add
out
pusha
cmpsb
jge
fidivl
xchg
jle
xchg
lcall
mov
fildll
mov
adc
dec
fcmovbe
int
nop
aaa
add
clc
add
jp
fidivrl
mov
dec
sub
loop
test
lods
test
mov
cmpsl
andl
mov
xchg
xchg
mov
loopne
iret
inc
cli
scas
mov
jb
lahf
or
enter
out
jle
cmp
ret
mov
xchg
pushf
xchg
pop
push
stc
cmpsb
sub
mov
mov
fs
mov
mov
adc
fidivs
and
mov
mov
jg
stc
xlat
mov
dec
mov
mov
pop
cmp
mov
fistl
fnstsw
push
push
rcr
daa
into
push
andb
pop
mov
fstpl
add
add
imul
xor
dec
sbb
adc
mov
push
push
daa
imul
lea
popf
subl
rclb
mov
xchg
mov
cmp
add
jmp
mov
mov
in
mov
out
adc
incb
in
mov
sbb
push
mov
mov
xor
ja
dec
adc
loopne
addl
xchg
inc
push
loopne
sbb
pop
pop
mov
push
jmp
lcall
inc
adc
mov
xor
test
jge
xchg
hlt
testb
in
std
lret
mov
shll
xor
cwtl
pop
or
inc
cld
sub
mov
xchg
aas
pop
jecxz
roll
cwtl
jnp
aam
adc
inc
insl
cltd
movsl
xchg
xor
insb
push
cmp
xchg
sbb
std
inc
pop
pop
imul
outsl
movsl
add
push
mov
xchg
pop
mov
xorl
pop
mov
mov
flds
adc
popa
stos
jecxz
push
ret
frstor
loopne
aas
push
mov
push
shl
adc
subb
popf
fwait
dec
cmp
ja
je,pn
mov
scas
fists
and
rclb
inc
das
mulb
jnp
mov
cmp
cmc
add
pusha
mov
adc
jp
shlb
in
dec
ss
shll
ret
inc
mov
into
inc
sbb
mov
dec
outsl
pushf
inc
xchg
push
and
mov
push
int3
movsl
dec
nop
dec
sub
test
ret
popf
enter
xor
pop
mov
jae
fwait
jmp
cmpsb
stc
push
cmp
sahf
ljmp
and
test
mov
jo
loopne
loope
lea
or
add
inc
dec
das
cmp
pop
jb
sub
vrcpps
mov
and
in
scas
inc
aas
stc
or
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
dec
movsb
js
xor
pslld
cmc
mov
leave
mov
cmp
fwait
les
repz
in
lret
mov
addr16
cld
ret
dec
sti
mov
das
sbb
cmp
test
ds
lock
out
test
les
and
cmc
or
subl
xor
cmp
mov
fistps
in
js
aad
add
jo
cli
dec
sti
jnp
xchg
pop
pop
jnp
jae
outsb
jnp
hlt
lahf
lret
addr16
es
stos
fldl
js
gs
sahf
call
mov
ficompl
das
adc
in
cmp
or
andl
push
leave
inc
icebp
into
loope
and
in
sub
andb
mov
scas
push
movsl
shll
adc
idivb
sbb
add
inc
push
pop
lea
out
mov
and
sbb
je
jge
cli
pusha
jp
mov
lret
and
add
lahf
add
jb
jne
inc
or
jmp
loope
inc
cwtl
push
mov
imul
fistl
cmp
out
inc
lcall
divb
popa
push
sarl
mov
xchg
ror
adc
adc
imul
adc
and
xor
pop
or
or
dec
add
dec
push
int
arpl
fstpl
xchg
iret
sbb
and
push
jno
nop
dec
daa
bound
movsl
in
xor
scas
pop
mov
data16
sbb
and
cmovne
iret
add
leave
stc
movsb
inc
and
inc
test
sti
jo
lock
jge
out
hlt
inc
dec
fcomip
xchg
loopne
cmc
xchg
add
xchg
negl
mov
mov
scas
lods
pop
popa
fsts
mov
sti
pop
mov
ds
mov
loopne
pop
mov
sbb
jmp
xor
or
adc
and
mov
cmp
sub
mov
out
dec
or
adc
mov
sbb
push
push
iret
dec
lahf
mov
sar
outsl
sbb
incl
jae
cli
insb
test
cli
push
pusha
popf
mov
pusha
ja
cld
adc
mov
movsl
les
add
ret
popa
mov
adc
mov
fstl
adcl
sub
pop
out
lock
stos
push
jge
loop
imul
xor
int
ret
insl
lahf
dec
push
daa
and
mov
fsub
push
pop
out
int3
inc
pop
dec
cmp
cwtl
xchg
sub
xchg
add
or
scas
push
clc
lods
and
cmp
xchg
lods
jl
xor
test
sbb
stc
or
sbb
ja
cmp
sub
pop
std
pop
push
adc
and
popa
pop
mov
jno
leave
or
hlt
les
mov
das
in
in
ss
movb
add
sub
mov
imul
sbbl
hlt
cs
je
loopne
fmuls
jmp
push
cltd
xchg
pop
cwtl
push
ds
stos
and
adcl
inc
add
jno
ffreep
mov
and
pop
push
movsl
clc
inc
pop
shlb
icebp
jb
add
shll
mov
pop
pop
xlat
sbb
inc
in
jle
mov
cmpsl
and
mov
pop
xchg
js
mov
adc
out
add
xlat
cwtl
test
jo
mov
adc
movsl
inc
mov
ss
je
inc
sub
ss
or
or
or
mov
mov
insb
adc
pop
into
lds
in
movsb
negl
pusha
inc
push
dec
push
mov
pop
push
pop
push
mov
rorl
jae
xor
popa
sbb
xor
jl
hlt
fwait
pusha
int
daa
pop
and
xchg
fmull
sbb
xchg
in
lret
pushf
ljmp
ret
sub
and
jne
push
pop
or
mov
call
fwait
xchg
lods
icebp
mov
xchg
in
into
pop
push
cmp
jo
xor
nop
fwait
cmp
sub
add
int3
adc
mov
test
cli
roll
pop
roll
jno
sub
inc
mov
jnp
cli
pop
scas
inc
ret
mov
mov
sahf
push
mov
imul
movb
inc
outsb
xchg
sub
xlat
pop
icebp
mov
mov
js
mov
lret
loopne
push
xor
roll
aad
test
movsl
aam
xchg
imul
int
jns
lret
pushl
leave
insb
es
mov
push
push
test
xor
pop
push
sbb
stos
mov
pop
xlat
xor
nop
jae
in
stc
aad
into
cmp
sbb
push
adc
sub
adc
mov
mov
dec
mov
test
sub
and
cmp
push
jnp
jl
pop
push
lcall
xchg
adc
std
inc
mul
push
les
hlt
xchg
jl
push
or
inc
and
in
inc
add
mov
out
mov
jmp
inc
mov
push
cwtl
inc
mov
mov
movsl
test
ret
pop
sti
or
dec
jbe
lods
pop
test
lcall
jae
ret
rclb
or
inc
lods
mov
mov
pop
addb
movlps
mov
pop
in
loop
push
pop
test
testb
sub
aaa
ss
jb
xor
sub
push
stos
test
in
mov
cmpsb
sti
sbb
and
xchg
lret
push
adc
mov
or
rolb
mov
lods
outsb
push
fistpl
sti
or
cld
icebp
mov
jo
insl
sbb
lock
xchg
and
fnstsw
ja
stc
mov
xor
xchg
cli
push
mov
imul
lret
mov
adc
lods
ret
sub
jae
jecxz
insl
or
rcr
int3
inc
sbb
and
pop
fbstp
mov
mov
inc
jns
lods
xchg
mov
enter
daa
add
bound
adc
inc
sub
ret
pop
loopne
dec
pop
sahf
adc
jmp
inc
pop
adc
mov
xchg
push
push
test
cmp
divl
loope
scas
mov
lahf
adc
repnz
outsb
test
push
movsb
sbb
inc
clc
add
out
xor
sbb
nop
mov
outsb
or
push
mov
dec
or
mov
jno
jnp
xchg
pop
add
jo
push
push
mov
jmp
call
lcall
shll
cwtl
xor
pushf
mov
jae
mov
sbb
mov
sub
jae
mov
inc
mov
mov
and
aad
cltd
add
mov
xchg
imul
mov
out
dec
dec
cmp
jo
into
enter
sahf
sbb
jl
je
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
ja
dec
out
pop
sub
pop
cmp
xor
cmp
loop
push
rolb
stc
dec
cmc
xor
mov
enter
lret
scas
fst
or
test
icebp
paddsw
mov
push
clc
cld
inc
pop
fcmovnbe
mov
pop
fstl
mov
jmp
sub
cmp
mov
mov
mov
lea
sbb
mov
mov
pop
ja
or
dec
jmp
jbe
fstp
dec
pop
sbb
loopne
insb
inc
sub
sbb
sbb
jge
scas
fsubrs
fwait
inc
int3
mov
in
pop
add
fstpl
scas
fstpl
int3
cmp
add
adc
cmc
xchg
xchg
in
mov
or
repz
dec
push
nop
dec
ss
in
sub
test
cmp
and
pop
negl
mov
shlb
lret
cmp
pop
push
rorb
push
and
stc
repz
mov
xor
adc
mov
js
mov
shlb
sbb
cmpl
dec
pushf
adc
addb
pop
movsl
xchg
dec
sahf
mov
mov
push
je
stos
sub
cmpb
mov
mov
lea
pop
dec
jnp
push
add
mov
and
dec
adc
and
unpcklps
aaa
inc
sbb
icebp
jp
dec
leave
aad
adc
inc
push
cmp
cmp
mov
sub
xor
mov
aam
push
jle
jge
push
sbb
outsl
insb
pop
popa
dec
loope
lfs
sarb
dec
jecxz
mov
sbb
gs
push
and
imul
cmp
mov
adc
inc
movsl
cmp
ja
sahf
or
addr16
pop
adc
stc
movl
add
es
mov
sub
ret
or
sub
xor
fadds
or
xor
push
rcl
jmp
push
mov
test
in
push
pushf
loop
daa
iret
sbb
add
and
sub
fsubp
dec
xchg
pop
fstpl
mov
mov
adcb
mov
test
mov
es
xchg
ffreep
sub
lret
div
xor
xchg
je
mov
mov
cltd
imul
mov
fwait
or
jbe
pop
ljmp
jg
das
sahf
inc
mov
jns
and
push
dec
inc
or
cmpsb
fucomip
sbb
or
xchg
int
fcmove
mov
fwait
popf
lcall
jae
push
arpl
dec
mov
pop
inc
or
push
mov
repz
test
movsb
lret
daa
adc
adcl
xchg
loopne
or
or
inc
in
sub
inc
or
insb
inc
sub
mov
cli
sub
insl
push
push
pop
pop
pop
out
fidivl
lods
test
sub
xchg
js
lds
aaa
dec
sbb
loope
pop
or
call
in
cmpsl
fisubs
aam
movsl
cmpsb
jmp
adc
mov
mov
lods
mov
lea
iret
ds
repz
mov
cmp
push
push
add
out
cmpsl
add
pop
hlt
add
fdivrs
divb
ljmp
sbb
pusha
xlat
cli
xor
test
sbb
jl
push
jns
sbb
pop
test
mov
loopne
nop
sahf
in
iret
xor
and
mov
push
xchg
stos
mov
repnz
add
dec
inc
cwtl
jle
aam
cld
sbb
nop
xchg
pop
nop
dec
mov
faddl
jns
sub
clc
and
add
dec
xor
popf
sbb
add
aam
pop
loop
pop
pop
sbb
cmp
data16
sbb
out
ja
adc
aad
clc
mov
xchg
jbe
mov
sub
inc
mov
add
mov
ja
mov
pop
cmp
sub
dec
fists
xor
xchg
adc
ror
aad
cmp
data16
adc
xorb
push
stos
loop
enter
and
pushf
sar
imul
das
insl
or
mov
cld
imul
cmpl
popa
sub
das
out
cmpsb
popf
scas
aam
dec
lds
insb
adc
repz
in
je
or
jl
dec
shrl
les
aaa
ret
popf
and
test
sbb
or
idivb
or
xor
lret
shlb
dec
cli
pop
faddp
leave
rcll
mov
daa
or
adc
dec
test
sub
lds
ds
aas
jae
mov
nop
cltd
or
jbe
lods
sti
repnz
in
mov
jecxz
ret
das
stc
hlt
mov
mov
fisubrl
mov
ja
mov
jg
and
jg
cli
add
push
adc
out
xchg
inc
stos
and
inc
ljmp
push
cmpsb
push
nop
dec
xchg
lods
inc
mov
lea
arpl
or
jge
xor
cmpsl
dec
xlat
lret
or
dec
adc
pusha
aam
stos
faddl
idiv
jp
add
sub
and
stc
mov
cltd
fdivp
movsb
scas
jle
fsts
pop
cmc
sub
adc
or
mov
cmp
inc
and
adc
stos
or
jo
in
test
pop
pop
jae
out
inc
out
outsb
in
fcmovb
push
add
jnp
stos
xor
mov
xchg
add
push
adc
imul
in
cltd
stc
movb
sbb
dec
add
xor
pop
icebp
hlt
imul
outsb
jmp
sub
in
push
mov
inc
mov
dec
lods
sbb
push
gs
lea
testb
and
dec
xchg
mov
lahf
sub
xor
cwtd
push
dec
xor
mov
pop
pushf
outsb
insb
pushl
sbb
sub
push
in
adc
lods
inc
mov
movsl
inc
push
data16
jge
xchg
mov
add
xchg
jb
sub
inc
adc
jecxz
xchg
push
add
adc
xchg
insb
ja
sbb
out
adcb
pop
xor
push
dec
and
mov
in
fldt
sbb
inc
ds
mov
jmp
adc
cmpsl
out
mov
jle
sbb
ds
scas
into
mov
nop
fldt
mov
sbb
ficompl
lret
dec
lret
sub
into
scas
xchg
cmp
cmp
xor
iret
shrb
mov
sbb
xor
dec
insb
pop
pop
out
fcompp
fwait
lock
out
mov
insl
sub
push
push
rorl
pop
xchg
lret
mov
cmp
js
push
xchg
pop
ret
fwait
push
in
lcall
and
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
sbb
adcb
vmread
jb,pn
mov
popf
push
fistpll
cs
mov
xlat
adc
cltd
mov
mov
insb
ficoms
or
pop
rcrl
in
inc
adc
jno
call
addr16
addr16
dec
stc
out
mov
jbe
adc
push
fcompl
stos
add
sbb
xchg
cmc
outsl
xchg
pop
lea
aad
xchg
pop
jle
or
cld
jecxz
mov
or
and
lods
pop
pushf
push
stos
sub
cs
pop
adc
pop
sub
ds
and
enter
leave
adc
sub
dec
sub
rolb
sub
scas
aaa
cwtl
xchg
sub
shrb
jns
sahf
cli
sbb
imul
and
shll
sbb
pop
pushf
sbb
aam
jp
pop
sti
sub
mov
or
btc
das
xor
add
rcr
sub
push
xchg
insb
jne
fdiv
jecxz
jno
add
loopne
aas
push
into
test
sbb
pushf
sub
cld
fdivs
add
pop
stos
inc
pop
ret
aas
push
xchg
loope
popf
or
mov
icebp
lret
ret
pusha
mov
cli
or
test
xchg
cmovae
xchg
movsl
cmp
add
adc
lock
nop
insl
mov
fistpll
push
sarl
shll
nop
mov
dec
std
in
fmull
and
jmp
outsl
loope
dec
das
xchg
les
mov
int
dec
mov
lods
outsb
sub
push
sbb
cmp
push
xchg
into
cwtl
or
add
mov
pop
into
hlt
fdivp
fsubs
repnz
outsl
dec
or
push
lcall
push
int3
insl
jg
rol
mov
xchg
in
shl
aas
inc
mov
push
dec
pop
ds
lods
mov
dec
adc
push
mov
leave
jne
fadds
std
cli
push
roll
add
into
faddl
mov
mov
sub
push
stc
dec
and
xor
and
pop
xor
out
rcr
inc
or
lret
xchg
rcrl
pop
push
data16
orl
and
xor
cmc
bound
pop
imul
add
mov
push
mov
mov
xadd
fstps
pusha
mov
fdivl
cmp
mov
mov
jns
pop
ret
in
or
pop
jns
outsl
pop
fwait
mov
jns
adc
mov
lock
addr16
frstor
test
or
gs
test
dec
sbb
sbb
push
shrb
insl
dec
push
div
stos
outsl
sbb
adc
sub
or
pop
sub
sub
adc
or
jnp
outsl
stc
mov
es
cmp
add
cwtl
add
and
repnz
inc
push
inc
mov
out
je
bound
in
dec
jae
frstor
repz
ja
add
fwait
jno
inc
decb
arpl
push
rcrl
and
jnp
push
dec
mov
aaa
cmp
dec
jns
dec
lret
ja
addr16
sub
push
mov
test
push
cmp
jne
ficompl
xchg
jmp
pop
adc
mov
rolb
mov
mov
mov
cmc
jno
mov
mov
mov
clc
cltd
jmp
mov
pusha
xor
leave
loop
sbb
dec
add
jno
inc
sub
xchg
xchg
inc
cmpsb
mov
cwtl
fcomps
sbb
stos
ja
jmp
cmp
rclb
adc
jp
fcomps
adc
cmp
rorb
and
inc
std
mov
dec
push
sbb
xchg
push
andl
xchg
adc
adc
push
rclb
pop
imul
leave
adc
fimull
repz
jb
imull
jns
add
mov
insb
cmpb
ret
dec
and
rolb
dec
adc
push
push
in
jns
push
inc
dec
in
repnz
mov
pop
ret
divb
data16
ret
test
xor
and
enter
add
jle
lahf
pop
xor
add
sub
and
mov
test
ds
imul
cli
push
jbe
mov
into
scas
subb
cs
nop
shrl
adc
es
xor
or
mov
cltd
xchg
xor
or
fmull
es
inc
adc
xchg
mov
repnz
pmullw
call
push
lret
test
das
lods
out
vmaxps
cmpsl
pop
orl
test
jo
neg
xchg
cmp
or
push
fwait
jno
icebp
in
outsb
cmp
les
filds
in
dec
dec
cli
leave
inc
ret
cmp
stos
jns
mov
ffree
xchg
je,pt
xor
mov
xchg
mov
xor
adcl
outsb
fnstcw
xchg
repnz
jnp
outsb
adc
jbe
xor
adc
inc
dec
nop
aas
imul
mov
and
daa
jg
mov
adc
mov
fisubrs
cltd
mov
jmp
mov
lcall
mov
sbb
cmp
sub
sbb
movsb
jno
xor
repnz
fs
imul
mov
test
mov
push
mov
loope
cld
iret
divb
mov
aaa
fdivs
fists
pushf
inc
sub
hlt
sub
cli
mov
mov
inc
pop
stos
ret
adc
inc
mov
pop
aad
sbb
ret
and
loope
sbb
aam
rcrb
sbb
xchg
data16
and
and
iret
jno
sub
shlb
aam
mov
pop
mov
dec
mov
inc
xchg
mov
and
lahf
xor
and
jle
shll
repnz
ds
push
inc
dec
cld
cmp
mov
inc
xchg
sbb
pop
inc
dec
inc
sub
jnp
push
jge
mov
out
jle
cmp
push
stos
pop
sbb
popa
xchg
add
xchg
cmc
jecxz
adc
pop
jge
leave
movsb
ss
fs
xor
xor
inc
and
push
push
pop
aad
mov
xlat
mov
ja
add
dec
in
arpl
pop
push
mov
inc
dec
pop
lret
leave
mov
pop
jmp
rol
mov
and
and
int
add
mov
movsl
std
mov
lock
scas
push
imul
mov
inc
ret
loopne
sub
push
stos
movl
or
xorl
test
sbb
push
outsb
xchg
jecxz
daa
xchg
ror
jg
mov
stc
pop
hlt
ret
test
rcrb
imul
add
inc
adc
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
rclb
adc
xchg
pop
popa
pop
and
inc
push
xchg
mov
bound
test
jg
xchg
fcmovb
shlb
mov
mov
insb
lahf
xchg
jl
outsb
mov
insl
mov
sub
stos
push
jge
mov
mov
jecxz
sub
ret
cmp
lcall
sahf
out
dec
fbld
pop
dec
inc
mov
outsb
xor
sbb
mov
mov
add
or
push
xchg
loope
mov
mov
scas
mov
cli
aam
popf
idiv
test
fists
push
mov
inc
jnp
scas
imul
imul
movsb
addr16
sbb
lcall
aaa
out
out
fwait
or
pop
jge
dec
inc
pop
dec
test
mov
pop
into
dec
repz
xor
stc
push
call
loop
xchg
aam
mov
popf
inc
testb
mov
dec
xor
into
sub
ret
repz
jge
sbb
sub
lahf
test
rorl
in
jnp
scas
aas
dec
dec
fwait
std
dec
xor
adc
sar
bsr
pop
aam
and
out
cwtl
adc
ret
and
popf
lock
push
aad
jbe
mov
sub
scas
sub
arpl
cs
rcrl
pop
push
iret
cmp
jg
adcl
fwait
xor
in
mov
mov
mov
pop
xchg
sub
aaa
in
sub
mov
cmp
pop
filds
add
pop
push
and
sahf
js
into
cli
outsl
cmc
adc
aad
shl
shrl
sub
xchg
mov
aas
and
push
sub
push
mov
fstpl
cmp
daa
addl
or
and
popa
fisubrl
call
jns
out
xor
mov
jb
test
les
cld
popf
mov
dec
jne
testb
in
jbe
xchg
in
mov
push
sub
insb
repz
push
xchg
mov
fldenv
fdivrl
add
addb
dec
xchg
sub
sub
jbe
dec
mov
aad
xlat
outsl
cmp
into
insb
add
out
lret
stos
rorb
sbb
stos
rcr
ja
popa
pop
call
mov
aaa
clc
test
insl
and
dec
xchg
insb
and
pushf
xchg
bound
loope
enter
sub
inc
mov
mov
ds
mov
lret
out
jbe
cmp
lock
das
test
aas
cmp
mov
out
mov
iret
mov
push
shrl
jo
pop
or
xor
test
jge
inc
lods
dec
mov
xor
jmp
jae
xor
jns
push
jb
int
xlat
sbb
into
mov
mov
sbbb
sub
sbb
or
addr16
mov
jl
orb
lahf
insb
sub
inc
push
repnz
fidivl
mov
outsb
add
mov
xchg
adc
scas
test
lock
inc
inc
xchg
in
test
pop
push
cs
or
dec
or
popa
inc
sbb
and
mov
shlb
mov
cmp
roll
test
aas
pop
push
mov
mov
add
fmulp
inc
fsubp
dec
loopne
mov
jge
mov
mov
or
imul
gs
test
sti
repnz
and
mov
sahf
add
lods
adc
dec
inc
jnp
pop
negb
loope
stos
cmp
aas
mov
inc
mov
roll
outsb
pop
pop
sahf
jae
dec
xchg
or
aad
jno
jp
xchg
add
test
in
ljmp
pop
rclb
jo
out
std
fidivrs
and
fstpt
adc
sbb
dec
add
or
movsb
cmp
sbb
rcr
jmp
out
pop
add
sbb
xchg
pop
mov
out
pop
inc
out
and
and
mov
and
bound
insl
push
push
lods
bound
stc
jb
aas
dec
int
mov
test
rolb
ljmp
mov
push
int3
or
adc
mov
mov
and
xor
pusha
sub
add
into
psubusb
cmpsl
mov
pop
movsb
lds
rorb
xlat
dec
inc
xorl
pop
aaa
mov
pop
pop
mov
inc
add
aaa
push
xor
mov
cld
mov
pusha
lret
mov
test
cmpsb
stc
outsl
jecxz
arpl
xchg
cmp
lret
sarl
lods
stc
xor
jmp
stc
gs
adc
pushf
ficomps
fs
xchg
movsl
mov
or
lcall
inc
ret
sarl
dec
push
mov
fidivl
sub
rcll
mov
andb
mov
pop
sbb
push
dec
or
pop
outsb
in
sti
mov
es
xchg
test
push
jecxz
jo
jecxz
jle
movsl
sbb
and
jl
pop
iret
jae
push
sbb
insl
mov
lods
lock
sbb
adc
clc
dec
stos
xchg
in
scas
jmp
je
cmp
mov
or
xorl
xchg
xchg
int3
pop
insl
ja
push
shr
mov
enter
movsl
inc
xchg
ja
andb
test
pop
mov
pop
mov
xchg
adc
loop
and
cltd
cltd
loop
push
clc
fwait
inc
xchg
cwtl
lahf
mov
xor
adc
mov
insb
gs
jg
cmp
fmuls
sti
inc
adc
adc
js
sti
lock
sbb
and
ja
mov
dec
leave
mov
push
orl
sub
push
fstpt
dec
jae
shr
adcl
sub
xor
jne
mov
push
out
rorb
sbb
popf
loop
add
sub
sub
lea
mov
in
imul
mov
psubsw
inc
jp
lods
sbb
icebp
mov
cmc
sbb
lods
stc
sbb
dec
jb
inc
fcmovu
mov
xchg
loopne
ret
pop
shl
dec
push
pop
fsubs
push
push
jmp
mov
mov
insl
js
insl
das
xor
xor
out
iret
jno
fcmovnbe
sub
xchg
movsl
pop
fimull
scas
xlat
lahf
call
faddl
mov
sti
rcrl
xor
ja
mov
outsb
pusha
jl
lds
mov
mov
sahf
xlat
fldl
push
jnp
loope
int3
or
push
and
xor
adc
cs
push
xchg
repz
mov
dec
pop
test
scas
dec
jl
or
loop
xchg
enter
add
ret
mov
adc
mov
arpl
push
and
addr16
lds
dec
hlt
inc
mov
push
pop
mov
jb
pop
mov
jecxz
clc
and
jnp
int
ror
fstps
and
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
addr16
lds
jb
cmp
or
cmpsl
sbb
and
in
sub
adc
mov
mov
jae
inc
sub
xchg
push
stc
daa
sub
imul
lcall
lret
mov
inc
mull
xchg
xchg
int3
mov
imul
and
mov
jo
jmp
sub
inc
in
mov
jne
addr16
cmp
jg
jmp
jg
lods
sub
inc
ret
sahf
inc
jb
rcr
fldenv
lahf
lahf
inc
xor
movsb
pop
incb
fucomip
and
xorl
xchg
decb
jmp
xor
ds
xchg
rclb
jb
sbb
fs
mov
popa
cmp
gs
rclb
mov
mov
in
mov
fisubrl
in
jmp
add
bnd
add
daa
sar
cmp
test
jp
test
adcl
dec
push
sbbb
push
mov
test
add
in
push
jbe
lea
cmp
clc
inc
adc
adcb
jno
push
in
mov
ss
pop
mov
je
cmpsb
pop
test
push
jo
cmc
sbb
lret
and
pop
push
sub
push
sub
xor
cli
xchg
scas
fsubp
sub
and
in
shll
inc
push
pop
xchg
pop
inc
stos
xchg
das
push
test
rcrb
push
push
adc
jmp
ljmp
push
test
sahf
inc
out
inc
xor
ss
data16
pop
je
subl
inc
dec
pop
xchg
push
sub
insb
cltd
test
and
jnp
inc
mov
imul
insl
pushf
xchg
lret
testb
jne
lcall
ds
jno
iret
jge
xor
out
xlat
mov
loop
mov
out
jne
js
inc
outsl
push
xorb
pop
ja
cmp
stc
orl
cs
push
lret
imul
std
add
xchg
cmpsl
and
out
inc
loopne
xchg
sub
sti
jne
cwtl
dec
jne
int
push
cs
pop
mov
sub
lahf
mov
jge
lret
daa
dec
cmpsb
repnz
mov
dec
xchg
fists
imul
sahf
xchg
lods
xor
xor
sbb
mov
ret
cmpsb
jle
jmp
mov
sbb
xchg
xor
mov
sub
add
notb
xor
ds
stc
add
mov
jl
fldenv
jns
arpl
sub
mov
movsl
lods
push
mov
lret
jo
sbb
xchg
stos
sti
incl
pop
lds
faddl
nop
int3
std
inc
cwtl
je
rcr
aam
mov
mov
fwait
ja
dec
and
outsb
hlt
cmp
push
cmp
call
das
adc
enter
cmp
dec
fs
test
mov
repz
ss
ja
sbb
leave
aas
fldpi
or
popa
xorl
cmp
pushf
fisttpl
cli
out
xchg
popa
push
loopne
and
lea
imul
test
and
add
iret
fwait
cmp
repz
call
or
xor
test
sahf
pop
test
out
cmp
pop
mul
sahf
or
icebp
jp
lock
cld
int3
sub
into
aas
mov
jle
push
jmp
scas
sub
xchg
out
rorb
jg
lock
lods
sub
ljmp
cmovne
aas
sub
or
sub
xor
cli
mov
js
stos
jl
jns
and
push
adc
cmpsl
push
mov
loopne
mov
andl
mov
or
popa
xchg
adc
dec
and
pop
outsl
push
or
add
pop
push
push
cmp
mov
push
hlt
cmp
or
and
out
pop
xor
inc
lcall
lret
bound
sbb
pop
subb
sbbb
scas
sub
mov
push
dec
mov
xor
and
rcrl
dec
idivb
sbb
jne
jmp
sbbl
add
mov
std
shlb
pop
ja
xor
pop
aaa
fmull
sahf
inc
or
pop
jl
xchg
mov
cmp
pop
xor
rcrl
std
fiadds
and
in
hlt
inc
aam
std
ja
jne
fwait
sub
sub
jbe
and
pusha
pop
ljmp
mov
iret
cwtl
adc
sub
dec
outsl
lahf
mov
out
arpl
sub
scas
arpl
push
cmp
or
add
mov
inc
and
std
scas
mov
cmp
dec
or
xor
dec
add
xchg
pop
mov
mov
aas
xchg
sbb
std
sbb
cmp
fwait
push
loop
add
add
push
xor
xorl
push
mov
movl
hlt
mov
test
inc
jl
jo
mov
roll
loope
clc
mov
xor
xor
xor
jle
jo
dec
and
shlb
jns
shrl
xchg
inc
mov
cmp
aas
pop
push
push
fisubl
or
mov
ds
std
mov
leave
fdivs
sub
cmc
aam
in
cwtl
and
dec
shrb
jmp
and
push
aas
xchg
pop
xchg
in
push
and
dec
bnd
sub
sub
add
lods
sbb
scas
movsb
mov
fimull
xor
icebp
xchg
xor
lock
or
ds
rorl
icebp
or
inc
mov
adc
and
aam
mov
jmp
adc
cmp
mov
nop
pop
xor
pop
cmp
out
ja
sbb
fisubs
fisttps
call
shlb
in
js
jbe
lret
mov
sbbl
xor
mov
jnp
cmp
je
fwait
enter
fisttps
xchg
fstpl
cld
jg
loop
flds
push
mov
push
xchg
mov
and
vfrczsd
add
mov
movsl
into
testb
imul
mov
fnstsw
and
jg
cmp
and
mov
sbb
push
in
push
dec
add
scas
sbb
sbb
adc
push
iret
jmp
insl
lcall
sbb
add
mov
dec
dec
imul
in
cmc
testl
sbb
and
loop
adc
sbb
inc
repz
jmp
cmp
xchg
hlt
mov
dec
ss
lret
lret
ret
cmp
fbld
pop
lods
pop
cmpsl
jle
sahf
inc
enter
pushf
inc
jp
jg
and
daa
sbb
scas
xchg
adc
sub
jno
add
xchg
jmp
jns
out
bnd
loopne
out
pop
cld
in
push
xchg
pop
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
xorl
test
sahf
call
testb
add
popf
repz
pusha
pop
out
cmpsl
and
insb
lret
pop
fstpt
mov
push
aaa
bound
repz
jmp
add
bound
cmp
repz
cmc
fwait
aas
insl
cwtl
fstpt
les
int
ret
cmp
pop
daa
imul
mov
popf
sbb
or
test
sbb
std
ljmp
cltd
cmp
in
adc
push
sbb
mov
inc
xchg
sti
dec
pop
stos
xor
mov
outsb
jg
mov
aaa
jo
data16
test
mov
mov
pop
sahf
mov
mov
cmp
mov
cmp
sbb
jo
sub
rcrb
sub
jmp
mov
in
and
mov
aas
xor
imul
shl
imul
pop
je
sub
jecxz
jns
push
and
in
ficoml
dec
jb
mov
add
std
cmpsl
pop
dec
push
mov
shll
xorl
test
shlb
pop
sbb
jmp
mov
repnz
push
xor
fwait
adc
fsts
inc
sbb
cmpsb
add
iret
mov
pushw
jmp
cmpsb
jge
and
dec
cld
test
aam
in
mov
and
pop
mov
rclb
inc
jge
pop
pop
imul
sbb
and
rcll
xchg
pop
sbb
dec
iret
je
push
aad
adc
in
pusha
pushf
and
nop
aas
rclb
jge
cmp
stc
fwait
sar
fs
aad
dec
adc
js
adc
push
mov
rcll
int3
xor
sbb
or
jb
cmpsl
gs
sahf
sub
ficoms
adc
int
push
mov
fsubrl
and
push
adc
inc
sub
shll
mov
xor
mov
add
movsb
decb
jnp
cmp
push
aaa
cmp
std
mov
enter
cwtl
rcl
sti
lret
test
mov
push
seta
push
pop
sub
and
jge
mov
adc
scas
push
outsl
rdmsr
outsl
ror
inc
je
cmpl
jp
rcl
sbb
mov
aas
repnz
out
jno
dec
mov
and
mov
ret
bound
fstl
mov
pop
push
test
jp
jo
jb,pt
inc
ret
jno
ljmp
dec
and
data16
js
pop
mov
mov
mov
jge
add
mov
fdiv
adc
in
adc
sbb
sbb
out
xchg
lret
loop
cmp
test
sub
mov
or
sub
mov
loopne
mov
clc
inc
mov
test
and
lock
cmp
mov
enter
cltd
push
sub
dec
into
and
scas
js
cmp
sub
or
push
loop
mov
cli
xchg
test
add
push
and
jnp
dec
mov
andl
hlt
repz
bound
out
push
popa
push
sub
sub
lds
mov
cmpsb
cwtl
cwtl
rcrb
lea
popf
fildll
je
popf
dec
mov
push
lret
popf
jnp
mov
push
xor
adc
sbb
mov
int3
mov
js
std
xchg
jl
mov
jae
imul
and
leave
dec
addr16
popf
popa
imul
aas
int
jge
dec
jo
movsb
pushf
xchg
cmpsb
orl
jmp
bound
das
je
or
mov
stos
lret
mov
fists
aad
test
js
scas
scas
dec
mov
sub
sbb
les
cmp
mov
bound
dec
clc
jnp
and
orl
std
jae
clc
jbe
jmp
pusha
int
in
pop
push
cmp
pop
sub
jmp
sub
mov
pop
in
cli
cmp
mov
push
and
mov
jnp
jmp
and
data16
or
loopne
xchg
bound
bound
mov
inc
dec
outsb
cs
cs
push
ret
adc
xlat
jbe
mov
sbb
push
mov
mov
or
jo
adc
sbb
rorl
daa
and
imull
xchg
add
clc
jb
mov
adc
out
mov
sti
shll
and
mov
imul
shlb
lods
aad
sub
ja
mov
out
adc
inc
repz
adc
jbe
pop
add
sub
adc
sub
insb
cmpsl
idivb
cs
or
lds
int3
sub
imull
in
push
xchg
mov
cmp
lret
dec
das
mov
lods
les
sbb
cwtl
fisubs
in
addr16
jmp
jmp
bound
fsubrl
mov
cltd
xor
jno
pop
test
push
mov
fst
sahf
daa
std
push
addr16
jg
paddsb
push
add
cmpsb
in
int
or
add
cmp
pop
and
push
inc
popa
adc
jno
jecxz
mov
mov
ret
sub
mulb
push
lods
and
leave
leave
pop
or
sbb
mov
js
adc
pop
cltd
out
inc
cmpsl
fildll
in
std
push
out
hlt
fnsave
xchg
add
cmp
rcll
pushf
mov
dec
push
icebp
mov
or
and
pop
addr16
ret
dec
pop
push
mov
cmpb
push
lcall
pusha
mov
iret
repnz
sub
cmp
shrl
mov
or
iret
rorb
sub
jle
mov
fs
das
mov
jmp
xlat
bound
cmp
sub
push
cwtl
gs
xor
pop
push
in
loop
enter
fs
adc
adc
xchg
lds
jb
popf
and
inc
push
push
or
cmp
bound
adc
ficoml
stc
mov
adc
and
in
cmp
adc
aad
testl
sti
cmpsl
cmp
mov
aad
icebp
mov
dec
jnp
add
pop
and
stos
mov
dec
mov
adc
insb
mov
jle
dec
in
rcl
mov
jmp
jmp
fdivs
jb
cmp
scas
xor
insb
jne
jae
xorb
xchg
dec
push
inc
mov
and
pop
pop
adc
pop
jb
negb
das
xor
sub
xchg
outsb
ficompl
jge
icebp
jle
popf
jmp
or
in
insl
das
aaa
dec
cmpsl
or
inc
icebp
xchg
repnz
out
inc
in
and
or
incb
xchg
stos
outsb
cmp
adc
push
add
xchg
pop
xchg
dec
inc
mov
mov
jmp
ljmp
sub
pop
jns
xchg
test
adc
xchg
xor
cmp
bound
mov
pmaxub
fildll
cmpsb
jecxz
out
dec
adc
fwait
rcll
mov
imul
ret
mov
mov
dec
mov
or
sbb
xor
je
dec
int
jbe
jge
inc
adc
dec
jne
sub
aad
out
in
mov
insl
xchg
out
sarb
adc
popf
test
or
mov
pop
push
jl
pusha
and
jne
pop
cwtl
ds
mov
js
pop
insb
out
push
insb
loop
test
repz
pop
sub
loope
push
imul
repnz
shlb
and
cmp
adc
sbbl
and
cmp
xchg
mov
out
sub
in
dec
ret
ljmp
push
mov
cmp
scas
int3
ds
test
mov
cwtl
hlt
bound
xchg
push
lods
cmpsb
xor
xchg
jne
mov
lcall
adc
jp
dec
xor
cld
mov
xchg
daa
inc
push
xor
call
xchg
sub
mov
outsl
sti
mov
sbb
lods
lods
test
and
std
popa
push
mov
dec
mov
jp
imul
dec
orl
test
sbb
sbb
sbb
jo
mov
or
inc
adc
into
leave
mov
and
mov
mov
push
xor
test
xor
rcll
inc
jno
adc
jns
push
clc
sbb
xchg
jg
inc
jnp
lods
mov
push
gs
cs
add
cmpsl
inc
pusha
xor
sub
add
push
cmp
mov
cmpl
xchg
and
out
lock
cmp
inc
inc
jmp
fs
mov
mov
xchg
or
clc
sub
lds
insl
pop
sbb
jno
js
pushl
mov
jge
add
loop
aad
hlt
adc
clc
sbb
inc
notb
mov
cmp
test
in
push
addr16
jp
cmp
adc
sbbl
dec
dec
cmp
fs
inc
lcall
movsb
into
mov
das
mov
add
sahf
xor
lods
les
in
or
xchg
sbb
pop
scas
aad
clc
int
iret
je
sub
or
jle
mov
stos
cvtdq2ps
stos
mov
sbb
arpl
inc
cmp
add
es
mov
mov
add
mov
test
rcrl
addr16
pushf
adc
dec
push
push
stc
dec
push
scas
xchg
movsb
push
in
dec
daa
and
sub
test
inc
push
sahf
and
mov
pop
leave
test
ret
jae
daa
xchg
nop
jo
mov
scas
mov
inc
lret
jmp
mov
cs
and
les
mull
loop
cld
loope
nop
push
out
lcall
dec
pop
xor
or
std
je
add
sub
sbb
mov
bnd
sbb
clc
inc
roll
sbb
inc
add
vmread
int3
push
test
pop
add
inc
movsb
lods
dec
xchg
push
lods
adc
dec
das
mov
dec
and
jmp
and
fwait
cwtl
arpl
push
push
jb
xchg
jg
fidivs
cs
add
jnp
fldenv
jo
adc
push
dec
outsb
not
adc
cmp
jmp
xchg
pusha
movsb
cmp
pop
xlat
mov
xchg
cmp
jge
and
sbb
popf
sbb
inc
adc
mov
or
or
push
add
pop
cld
shll
not
cltd
adc
pop
sub
ret
arpl
inc
orl
push
adc
inc
cmp
lods
push
push
or
xchg
mov
and
fstpt
mov
test
jg
xchg
mov
out
jbe
test
cli
out
mov
cmpsl
mov
jb
mov
sbb
rorb
dec
dec
or
xchg
lods
fwait
jge
jp
test
add
dec
pusha
sub
push
adc
mov
cwtl
pop
inc
pop
lds
inc
pop
jno
dec
leave
mov
push
xchg
push
xor
and
jbe
scas
cmpsb
mov
xor
popf
nop
push
movsl
in
fcompl
stc
int
lret
cmc
mov
pop
dec
and
roll
ja
xchg
sbb
sti
mov
jns
sti
into
adc
imul
in
movl
mov
es
mov
mov
jnp
mov
mov
enter
rolb
cmp
push
ret
sub
enter
ja
inc
cmp
inc
loope
movb
insb
xor
or
es
xlat
jne
fldl
xlat
jne
jg
add
push
mov
movsb
es
add
inc
lods
mov
xchg
enter
inc
xchg
mov
pop
jns
frndint
jp
inc
movsb
xor
adc
adc
imul
icebp
gs
inc
add
push
push
je
in
inc
shrb
push
and
cmp
rcll
decb
fists
jle
xor
imull
cmpsl
cli
push
repnz
mov
and
mov
push
mov
mov
or
repz
icebp
lahf
lahf
sub
das
popf
lret
sbb
dec
dec
out
pop
or
stos
mov
fsts
push
repnz
into
mov
outsb
mulb
jne
cmp
shlb
clc
or
std
jge
arpl
std
mov
or
mov
sbb
scas
andl
jge
out
cs
aaa
ljmp
inc
sbb
sub
lods
enter
and
jg
xor
lret
and
mov
xchg
adc
inc
mov
mov
xchg
pop
ret
fadd
dec
ss
daa
addl
lahf
xor
jno
int
stos
imul
adc
lahf
notb
cmc
mov
scas
inc
mov
push
adc
xor
adc
jbe
push
pop
or
aaa
stos
sbb
xchg
lods
pop
lock
cli
xchg
shlb
mov
fwait
insb
dec
inc
add
push
pusha
sbb
imul
addr16
rcl
nopl
inc
lock
cs
mov
in
lods
aad
int
xchg
test
insb
movsl
aad
mov
jecxz
and
bound
movsb
movsl
dec
pop
sarl
loopne
inc
std
hlt
out
cmp
ret
xchg
push
lret
add
xor
xchg
jge
lahf
xor
scas
cmp
jb
out
and
dec
cmp
loop
nop
jp
jp
enter
sbb
popa
add
ja
xchg
insl
scas
cmp
mov
lods
and
add
pop
xchg
jp
pushf
fwait
int3
outsl
and
mov
push
jle
sbb
inc
aad
jo
test
nop
and
outsl
mov
xchg
fildll
add
lods
cltd
call
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
sub
xchg
mov
cpuid
push
pop
mov
xlat
add
pushf
loop
outsb
adc
ficompl
inc
inc
stos
bnd
cmc
mov
enter
popf
xlat
xor
mov
xor
and
scas
out
sub
daa
mov
int3
incb
not
fs
push
aad
inc
in
lret
push
js
jno
sahf
jge
fstp
cmpl
xchg
pushl
in
in
fldcw
daa
scas
lods
pop
sbb
push
dec
inc
cs
sub
xlat
roll
cmp
rcrl
inc
lods
movsb
dec
jae
push
mov
je
adc
cmp
jp
xor
enter
cmp
in
lahf
and
mov
hlt
xchg
dec
xlat
sub
inc
sub
pop
or
xchg
push
lret
sbb
test
mov
es
test
push
sbb
add
push
js
xor
outsl
xor
in
fbstp
pop
outsl
jns
mov
inc
dec
push
mov
cmc
mov
pop
push
cli
repz
enter
aaa
out
sahf
in
mov
mov
pop
loopne
mov
lcall
js
jb
push
shl
arpl
xlat
adc
in
aam
fcomip
stc
insl
idivl
or
insb
lock
pop
imul
pop
add
insb
movsb
ds
mov
or
mov
push
mov
push
mov
and
dec
test
mov
jge
push
daa
push
imul
pop
or
leave
inc
push
out
addr16
enter
daa
fnstsw
jno
and
shll
mov
push
fbld
shrl
cmp
mov
cltd
aaa
sub
sahf
loop
cld
cmpsl
pusha
add
xchg
out
xchg
push
into
scas
das
repz
add
xor
jmp
out
or
fcmovne
paddsw
xchg
int
or
xor
fwait
shrl
jns
lret
push
daa
xchg
ja
jae
inc
dec
cmp
push
and
fisttpll
mov
icebp
sarl
mov
aad
lock
outsl
or
sub
ja
xchg
sti
fisubs
push
xchg
add
cmpsl
push
add
jo
add
out
sub
mov
jne
inc
jmp
stos
xlat
mov
loopne
repnz
mov
fs
dec
sub
adc
jmp
repnz
icebp
loop
pushf
mulb
add
rcll
iret
and
lock
scas
add
je
cmp
popf
mov
out
push
mov
mov
loop
lret
insl
mov
clc
adc
pushf
imul
popa
dec
rcl
pushl
cmc
cwtl
stc
insl
std
in
lret
lds
lret
dec
test
pop
adcl
repz
xchg
jecxz
and
mov
clc
mul
out
test
shll
and
ret
sub
cwtl
cltd
in
std
dec
stc
dec
mov
and
or
sbb
sbb
in
xor
je
dec
add
sbb
test
jns
add
aas
leave
inc
jp
push
dec
sahf
mov
mov
lods
pop
mov
adc
out
cltd
adc
clc
push
sbb
jns
cwtl
arpl
test
sahf
into
fsubrl
add
lods
in
cmpsb
fstpt
sbb
pushf
stos
push
xor
out
loopne
cmp
xchg
loop
pushl
jb
xchg
loop
mov
shr
pop
ficoms
add
sbb
sub
loopne
fnstsw
jl
or
pop
mov
mov
push
test
outsb
jno
scas
movsl
mov
aad
into
fwait
mov
loope
adcb
inc
or
dec
cmp
push
push
imul
data16
inc
pushf
adc
push
lds
inc
push
in
loop
scas
sbb
push
imul
jg
in
xchg
pop
xor
nop
je
sbb
cs
not
clc
dec
mov
mov
dec
ret
cmp
ret
xor
int
rsm
xchg
out
int
xor
repz
scas
jle
pop
in
fbld
lret
cltd
fldt
mov
dec
jns
xor
stos
fiadds
mov
sub
adc
imul
addb
loopne
js
andl
xor
andl
popf
push
lods
fidivrs
aad
push
cmp
mov
in
jle
int
scas
cmpsl
test
adc
in
leave
mov
ret
xor
call
aaa
lcall
push
inc
loop
xchg
fdivs
pop
outsb
pop
shr
std
lret
push
xor
mov
cmp
sub
in
cmp
bnd
jae
sti
inc
leave
sub
inc
jae
ljmp
rcrb
cmc
insl
sub
fbstp
in
xchg
nop
add
fisttpll
icebp
loope
xchg
mov
sbb
mov
jne
push
sti
nop
xchg
addl
add
pop
aaa
mov
shrb
mov
push
cmp
mov
sbb
div
cmp
jecxz
std
clc
mov
mov
test
sub
outsl
add
sub
xchg
sub
into
outsb
xor
imul
lahf
mov
test
popa
lret
movsb
addl
frstor
sub
lret
pop
jb
ret
inc
rcrb
add
popf
cmp
inc
sbb
dec
imul
ljmp
push
fmull
mov
aas
aaa
movsb
mov
dec
repz
mov
sub
xchg
inc
pop
xchg
push
mov
cld
sbb
jns
cwtl
sbb
cmp
lock
jbe
clc
jmp
out
jnp
inc
in
jp
pop
out
lock
arpl
es
mov
cmc
push
pop
lock
jg
rcr
lds
jno
ja
ror
mov
cmpsl
nop
sbb
sub
pop
mov
push
cmpsb
loope
jae
dec
push
xor
adc
lods
cmp
rcrl
mov
das
loopne
sti
jecxz
dec
jecxz
andb
inc
jne
and
lea
dec
loopne
aam
pop
shll
jnp
je
out
mov
stos
mov
scas
repnz
push
mov
pushf
lds
loope
test
stos
add
cmp
pop
fcomps
rcrb
insw
jb
xchg
pop
xchg
int3
sti
sub
scas
and
push
dec
and
xor
data16
rcll
lret
and
ss
popf
sbb
test
cltd
adc
add
sbb
dec
lods
jle
test
mov
mov
movl
jge
pop
mov
xor
pushf
adc
out
and
je
jecxz
mov
movsl
call
bound
pop
cmp
cltd
jae
mov
les
ss
aam
sub
inc
test
inc
loop
sub
push
pop
push
mov
in
outsl
into
xchg
mov
bound
clc
xchg
test
push
pop
lret
dec
nop
stos
and
push
lods
enter
add
ljmp
imul
scas
sbb
xor
and
mov
adc
xchg
fisttpll
popa
imul
push
ljmp
js
inc
mov
nop
mov
imul
jne
push
cmp
mov
sub
ficompl
decb
ds
frstor
mov
jb
stc
mov
jnp
sub
roll
or
lods
out
or
xchg
cmp
in
push
add
aad
or
jb
dec
outsl
ja
stc
out
jp
bound
xchg
pop
xchg
aad
and
push
imul
xorb
cmp
and
pop
push
inc
ret
rcrl
sahf
mov
ret
add
pop
enter
mov
adc
mov
inc
inc
int
cs
push
stos
das
shrl
bound
push
inc
push
add
inc
clc
shll
repnz
mov
stos
in
std
into
mov
stos
dec
fadds
dec
es
je
sub
into
jg
adc
pop
sbb
cld
loopne
cli
orl
fbld
push
adc
push
xchg
mov
mov
test
push
daa
mov
sub
xorb
pop
xor
scas
imul
xchg
andl
and
mov
sub
inc
cli
mov
sub
jbe
mov
jno
dec
mov
jno
pop
pop
ljmp
pushf
cmc
shlb
scas
std
mov
pushf
dec
imul
aas
lcall
movsb
lds
push
andl
push
xchg
cmp
je
or
xacquire
int3
mov
das
cmpsl
adc
pop
adc
int3
dec
mov
and
or
inc
bound
call
xchg
mov
jmp
rcr
mov
jnp
aaa
pop
out
test
push
lret
stos
xchg
pop
xor
push
lea
mov
sbb
scas
aaa
inc
nop
scas
hlt
add
inc
hlt
cwtl
sub
movsb
xor
push
std
or
mov
cwtd
cld
cmc
cmp
jecxz
dec
xchg
je
jnp
cmp
insb
and
cli
or
lds
ja
add
inc
in
fiaddl
mov
ret
enter
push
xchg
std
insb
inc
fsts
in
push
cmp
xchg
out
jge
pop
ljmp
mov
sarl
xor
push
or
push
sub
inc
insb
dec
and
cmpsl
and
jnp
cmp
push
dec
inc
in
push
push
cld
shlb
fwait
cmp
or
push
fdiv
outsb
add
xor
push
mov
rolb
rcrl
pop
lret
in
orl
add
aam
outsb
lods
aam
jl
jnp
fisubs
sbb
jb
cld
add
mov
adc
jne
repnz
dec
dec
add
outsb
loop
mov
xor
es
mov
aaa
das
movsl
push
ret
mov
xchg
mov
mov
mov
mov
jno
enter
cmp
adc
mov
jnp
sbb
lods
jp
mov
pop
ss
xlat
bound
sub
sbb
cli
mov
mov
mov
pop
outsb
scas
mov
xchg
mov
mov
xchg
jae
or
scas
cmpsb
shr
add
push
je
push
into
sbbb
gs
cs
cmc
xor
mov
jp
jecxz
lods
add
pop
add
cmp
stos
push
lret
mov
sub
xchg
insl
jge
mov
push
rcrl
outsb
stc
xchg
popa
outsb
mov
lock
cmpsb
push
xlat
cmc
jns
sbb
push
cmc
daa
aam
jmp
push
mov
ljmp
xor
pushf
inc
sti
mov
xorb
cmp
negb
out
loop
jle
mov
sub
sbb
ja
push
dec
out
push
sbb
push
into
rorb
sub
and
xor
add
jb
test
push
leave
data16
insb
imul
lret
sub
adc
and
mov
xor
call
addr16
fadds
sbb
jg
int
clc
adc
and
in
jo
inc
arpl
xchg
leave
fsubl
or
cmpsb
in
xor
sahf
sar
mov
sub
in
fadd
inc
aaa
outsb
fwait
mov
sub
xchg
js
ret
aam
ds
out
dec
sbb
icebp
xor
and
xchg
pop
jp
imulb
ja
fsubl
dec
push
sti
lea
shlb
dec
push
ljmp
testb
into
push
sbb
loopne
cmp
lahf
cs
or
sub
jmp
shrl
jl
inc
cld
leave
pop
dec
aad
bound
adc
cs
xor
cmc
icebp
ja
add
ljmp
std
or
inc
mov
sbb
push
pop
xor
adc
push
inc
xor
jmp
in
loop
scas
xor
and
mov
mov
sub
lock
stos
cmp
imul
add
pop
pop
cmpsb
jo
in
jge
lods
inc
popa
jae
fwait
cmpsl
ret
int
push
cli
pop
lret
inc
mov
jp
imul
xor
cs
cli
or
scas
xchg
mov
mov
add
push
mov
add
jmp
data16
arpl
jmp
orb
push
push
outsl
inc
mov
adc
jo
mov
jb
hlt
push
cmp
dec
iret
out
call
shll
adc
jo
leave
loopne
pop
mov
push
aad
xor
imul
mov
jae
jbe
add
in
ret
cwtl
xor
fdivrs
push
ja
gs
ss
lahf
cmc
adc
shrb
out
add
inc
arpl
xchg
push
addr16
cmp
sub
scas
jmp
jmp
cmp
cmp
xchg
jmp
sahf
push
mov
in
pop
jp
out
lds
mov
fisttpl
adc
adc
lret
sti
mov
ret
and
mov
cs
dec
inc
aas
cwtl
add
push
mov
push
cmpsb
cmc
add
jnp
push
mov
fs
cltd
xchg
fs
in
mov
mov
add
push
cs
les
int
int
fildl
ss
rolb
add
ss
xor
push
xlat
sbb
cmp
ljmp
daa
jne
loop
mulb
iret
sbb
sbb
pusha
shll
and
int3
popf
push
pushf
mov
dec
xchg
fidivrs
pop
inc
or
in
loope
aaa
pop
icebp
addl
push
push
stc
in
and
or
lahf
scas
scas
push
adc
rcll
xchg
add
shlb
into
imul
inc
fisubl
mov
pop
repnz
cmp
sbb
cmc
pop
xchg
icebp
push
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
sbb
sub
lcall
bound
scas
sub
addl
test
test
sbb
pop
push
lods
xor
ret
shlb
and
jp
pop
js
aad
mov
lret
out
jae
enter
and
stos
movsl
add
or
lcall
nop
stos
push
fdivrs
cmp
jns
sub
add
pushl
bound
push
shrl
sbb
adc
mov
jmp
mov
mov
dec
cwtl
and
repz
adc
pop
push
repnz
lcall
loop
bound
cmpl
testl
sbb
cmpsb
nop
subl
push
pop
sbb
add
sub
push
sub
mov
lea
js
or
pop
or
jns
push
jle
outsb
mov
jo
int3
shll
in
in
inc
cmp
dec
mov
pushf
test
outsb
xchg
or
xchg
bound
loopne
subl
push
andl
addr16
sub
xchg
leave
sbb
pop
stos
cmp
fwait
inc
sbb
mov
dec
fwait
dec
mov
add
or
test
cltd
repz
daa
cltd
jne
dec
xchg
sub
fistl
or
adc
xchg
fdivl
xchg
movsb
sbb
lret
cmp
into
mov
ret
sbb
push
cmp
fnsave
dec
popa
dec
test
iret
xorl
and
call
jge
aad
aas
test
out
cltd
int3
lock
cltd
in
push
xor
mov
xchg
mov
inc
inc
sub
rorb
push
test
inc
xchg
push
dec
jmp
rorb
inc
jmp
mov
fstl
pop
mov
pushl
cmc
repz
jge
les
loopne
cmp
push
or
mov
movsl
xchg
adc
and
or
and
int3
or
in
rcl
pop
inc
mov
insl
leave
xlat
jo
inc
scas
and
pushf
popf
inc
jb
push
add
push
push
pop
loop
xchg
insb
lea
test
sti
out
daa
xchg
dec
or
pop
mov
mov
xchg
sub
and
xor
daa
pop
daa
nop
add
stos
dec
in
test
mov
int
clc
push
adc
cmp
scas
and
into
lret
push
pop
shrb
jnp
push
jg
adc
in
inc
mov
add
ss
lahf
or
das
mov
jo
incl
push
loop
pusha
dec
roll
aam
arpl
out
cmp
mov
sbb
ljmp
pop
shll
enter
mov
fmuls
fnstcw
sbbb
mov
out
and
popa
out
cmc
ja
mov
das
outsw
push
mov
pop
sbb
dec
push
jge
push
xchg
jecxz,pn
cmp
test
lret
dec
shll
add
xor
arpl
inc
push
lds
arpl
cmpsl
fmull
scas
stos
lds
inc
fsubrp
or
stos
fwait
js
into
jo
lods
and
inc
xchg
dec
mov
jg
pop
push
cwtl
popf
jae
loopne
arpl
incb
scas
pop
jl
adc
jo
adc
sbb
movsb
or
outsl
mov
fmuls
mov
hlt
add
dec
or
or
sub
sbb
popa
aas
cwtl
outsl
stos
pop
dec
mov
push
hlt
push
je
insl
addr16
xchg
push
cmp
xchg
popf
pop
cs
mov
popf
dec
push
pop
xor
push
add
cmp
cs
int
imul
imul
mov
jo
out
adc
jno
outsl
data16
inc
lret
or
pop
arpl
jmp
sub
push
test
push
or
push
shl
jle
add
sub
loope
sbb
or
pop
pop
mov
push
push
scas
jge
loope
xor
pop
pop
iret
or
shll
bound
stos
push
dec
fidivs
in
mov
sub
push
xor
and
xchg
pushf
xchg
rol
xlat
push
mov
fidivrl
push
adcb
inc
sub
xchg
jmp
inc
test
sub
aaa
sub
cmp
push
popa
or
cmc
jecxz
lock
pusha
or
hlt
sbb
jg
dec
stc
inc
inc
cld
mov
cmpsl
gs
mov
or
pop
insl
sub
enter
or
test
mov
rorl
lods
pushf
loopne
neg
xchg
add
sahf
sarl
lcall
dec
sub
push
pop
dec
cwtl
dec
sbb
or
aas
jnp
scas
cli
lods
jecxz
test
add
in
lret
jecxz
test
mov
cld
in
inc
data16
jmp
popa
add
mov
lods
cmpsb
out
inc
fidivs
aad
std
ret
adc
xor
cli
mov
out
lods
lret
popa
mov
enter
pop
sub
into
into
adc
dec
fdivl
test
mov
sahf
shll
das
jno
and
jo
jge
mov
xor
je
test
mov
outsb
pop
xchg
cmp
lods
faddp
fneni(8087
or
outsb
or
xchg
adc
outsb
aaa
inc
lret
sub
pop
mov
mov
pop
faddl
or
lea
mov
sbb
ds
add
mov
fistps
adc
mov
fwait
inc
enter
mov
sub
adc
sbb
push
inc
sbb
cmpl
inc
pop
addr16
xor
bound
push
or
ljmp
xchg
inc
pop
xchg
gs
sbb
lcall
movsb
scas
xor
stos
pushf
test
out
into
les
jmp
mov
std
rorb
ja
sbb
dec
std
loop
nop
or
out
fidivl
pop
loope
jg,pt
insb
or
add
nop
push
add
push
or
int3
loop
andb
push
int
in
adc
mov
fiadds
jns
mov
add
xchg
aas
jge
out
adc
push
sbb
adc
cmpsb
sbb
sbb
dec
cwtl
adc
pushf
nop
loopne
push
loopne
and
cmpsb
bound
jnp
scas
sub
inc
xchg
stos
xchg
jg
mov
adc
add
mov
inc
jmp
mov
add
and
dec
add
scas
jg
dec
js
out
jbe
repz
or
adc
xchg
stc
mov
pop
mov
fistl
jp
sbb
add
pop
dec
adc
das
adc
adc
test
out
test
rolb
cld
mov
lret
jne
push
int
mov
and
push
sbb
jbe
xchg
cmpsl
rcl
out
jmp
lret
adc
fcomip
jp
cmp
xchg
mov
mov
ffreep
cmp
or
xor
mov
push
jns
push
int3
insb
jmp
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
clc
inc
cmpsb
js
mov
ja
aaa
in
mov
sub
add
inc
in
pop
sub
insb
loopne
mov
sub
cmpsl
xlat
scas
enter
outsb
mov
popf
inc
orl
mov
push
xchg
push
add
fadds
shll
sarb
lock
push
out
add
fcom
mov
inc
adc
sbb
in
outsl
idivl
push
fsubs
xor
das
bound
out
aam
bound
repz
lahf
add
rorb
mov
sub
es
les
in
add
sub
mov
movsb
jmp
or
incl
jmp
lds
fsubl
lods
sbb
pop
aas
sbbl
cmpl
add
lds
inc
mov
lret
es
imul
bound
adc
insb
mov
xchg
or
hlt
jo
xor
sbb
gs
orb
aad
rorb
mov
jp
sbb
cli
inc
lea
or
xor
inc
std
or
mov
xor
xor
icebp
inc
push
pop
es
mov
pop
out
aaa
and
mov
xchg
fldcw
push
cld
mov
adc
or
out
cmpsl
xor
scas
cmpsl
cli
xchg
push
outsb
ja
in
inc
sahf
hlt
stos
clc
pop
xor
aad
jp
ja
push
iret
cli
enter
lds
test
insl
push
aam
cltd
push
loopne
shrl
cli
lahf
out
sbb
cmp
outsl
mov
cmp
jo
lds
mov
pop
repz
testl
adc
pop
in
push
mov
inc
cmp
mov
pusha
jp
jecxz
jl
fdiv
dec
xor
in
fs
repz
or
and
fcompl
or
dec
dec
ret
push
jo
jnp
add
out
fcoml
imulb
leave
xchg
dec
mov
sub
dec
jbe
out
dec
mov
cmpsb
sbb
cmp
or
dec
mov
push
inc
fidivrs
and
or
shlb
ficompl
cmp
jecxz
rorb
jle
pusha
les
sub
test
repz
test
jp
aam
jecxz
std
mov
sbb
mov
movsl
sbb
sbb
push
cld
sub
fmull
xchg
hlt
push
jle
mov
or
and
mov
fs
mov
lock
inc
lahf
iret
push
push
dec
and
inc
adc
jo
outsb
push
push
pop
push
shrl
xor
ljmp
adc
ss
lods
jle
adc
ds
dec
sbb
cmp
xor
push
mov
xchg
push
cmpsb
aas
xor
movsb
loope
loopne
stos
inc
or
out
ljmp
fsubp
and
je
lahf
mov
in
push
mov
cli
lahf
dec
pop
or
addr16
add
test
xor
ss
adc
aam
or
lret
fcmovb
into
sub
sbbb
cltd
ja
mov
loopne
aad
pop
cmpsl
xor
push
xchg
lods
pop
out
lds
stos
call
push
out
push
nop
ss
adc
cwtl
repnz
adc
ret
jle
pushf
dec
test
fstpl
insl
or
jne
dec
fsubs
jne
idivb
aas
xor
or
ljmp
or
nop
push
cmp
fdivs
push
arpl
mov
mov
jp
jns
push
icebp
cmpsl
fisubrl
lods
in
int3
lret
xchg
negl
jno
mov
pop
movsb
scas
aas
popf
sbb
js
test
xchg
push
jo
mov
or
loop
sbb
shll
mov
loope
mov
mov
mov
xor
out
cmpsl
scas
push
testl
sti
sahf
mov
sub
rol
out
dec
and
sub
or
mov
in
cmp
mov
adc
mov
push
lock
or
out
pop
mov
push
scas
cmp
sbb
fsubl
rdtsc
mov
out
fwait
fwait
stc
xor
pop
mov
test
ret
out
xor
idiv
fiaddl
mov
dec
xchg
clc
dec
mov
jbe
icebp
nop
lret
enter
iret
lret
test
lock
in
adc
lods
xor
push
xchg
das
adc
test
adc
or
dec
pop
mov
inc
inc
rcr
push
mov
adc
outsb
insb
scas
shlb
xchg
mull
pop
arpl
mov
ret
and
cmpl
adc
sahf
fstl
add
push
push
adc
or
ljmp
int
notl
lock
fidivl
push
inc
adc
xor
sti
data16
pop
movsb
add
shlb
dec
add
jae
inc
mov
inc
sub
mov
mov
pop
xorl
lods
lea
iret
mov
lcall
out
out
push
clc
mov
lcall
adc
xchg
xlat
inc
mov
sbb
repnz
adc
loop
movsl
cld
and
xchg
inc
in
jl
jae
jp
mov
pop
dec
mov
andl
and
push
pop
inc
lahf
adc
jno
rcll
mov
lock
popf
jns
lcall
mov
jmp
fdivrl
js
popf
daa
or
aaa
clc
adc
pop
xchg
inc
mov
test
fcomps
fisttpl
mov
arpl
jecxz
xor
shrl
mov
fidivrl
jns
shld
ret
jne
cld
icebp
fst
fneni(8087
mov
in
out
push
cmp
add
add
dec
push
mov
push
pop
dec
adc
push
dec
test
addr16
cld
repz
rorb
insb
lds
mov
shlb
pusha
loopne
mov
xor
add
mov
call
xor
cmp
pop
add
mov
fstl
xor
mov
cmpsw
xor
inc
sbb
fcoms
data16
jbe
cwtl
repz
ret
dec
add
jb
mov
and
cmc
xchg
lretw
shrl
mov
lahf
sbb
sub
inc
fstps
mov
sarl
jbe
mov
in
pop
int3
loope
jns
dec
cmp
cwtl
fxam
mov
mov
jl
enter
jno
repnz
int
sbb
jmp
scas
std
pop
mov
adc
and
or
lods
mov
cmp
push
dec
push
repz
leave
mov
in
sbb
testl
mov
leave
mov
sbb
stos
rcll
rcll
inc
cltd
test
sub
pop
in
in
mov
pusha
cmp
pushf
pop
icebp
mov
mov
lods
enter
add
fadds
add
and
add
loop
es
pop
js
aam
pop
js
ja
add
sub
mulb
cmpsl
jnp
in
cmpsl
push
xchg
pop
stos
scas
jb
xchg
cmpsl
cmc
xchg
pop
sub
aas
aam
rcll
sahf
sbb
ss
enter
mov
add
les
sub
aad
dec
fsubs
jns
icebp
jp
jl
jmp
imul
imul
add
js
cmpsb
pop
adc
inc
push
fpatan
aad
popa
mov
xor
pop
push
mov
jo
xchg
sub
sbb
lock
or
jns
and
or
mov
popa
or
aad
out
ss
fldpi
mov
hlt
stc
cltd
data16
mov
push
aaa
sbb
and
pusha
sbb
notb
pop
arpl
or
xor
jbe
push
sbb
pop
fisubs
fcmove
sbb
sbb
jmp
mov
jne
loopne
scas
push
mov
jnp
ret
cs
sub
movsl
fildll
and
add
in
jp
adc
or
stos
mov
push
jb
cmp
out
cmpsl
movsb
xor
pop
mov
mov
imul
iret
mov
jl
xchg
out
xchg
cld
movsl
jmp
add
orl
jne
jmp
jmp
xor
fdivrl
fcmovnu
into
xchg
sar
es
sbb
enter
push
repnz
scas
loope
fcompl
jge
ja
dec
pushf
pop
pop
jo
cmp
outsb
cmp
iret
mov
add
xor
aad
cmp
fwait
mov
pop
mov
aas
and
adc
push
sbb
mov
arpl
enter
lret
pop
mov
xor
stos
pop
mov
imul
popf
and
xchg
push
sbb
decl
pop
cmp
loop
cmp
adc
je
or
xor
push
mov
leave
xor
call
xchg
lds
stos
in
cmp
mov
icebp
stc
adc
movsb
push
std
dec
in
movsl
dec
cmp
xchg
jno
jl
mov
iret
mov
inc
jmp
fbstp
push
adc
sbb
jae
in
lcall
dec
pop
inc
lahf
inc
ja
sbb
push
sarl
cli
pop
push
add
bound
or
mov
vmread
adc
pop
mov
aaa
cmpsl
mov
mov
insb
repnz
push
pop
jbe
pop
or
pop
jb
pop
ja
inc
test
jge
aaa
or
das
push
add
lret
inc
jb
sub
repz
test
jle
pop
lahf
fimull
sub
test
test
stc
or
and
repnz
hlt
ret
jnp
gs
imul
sbb
sbb
bound
inc
push
jb
shrb
mov
cmpb
push
xor
ds
bound
and
xchg
jmp
push
dec
paddsw
mov
jmp
cmpsl
aad
outsb
push
movsb
push
out
ficompl
stos
in
mov
dec
xchg
pop
movhps
adc
xchg
bound
sbb
mov
pop
xchg
sub
mov
pop
pop
stos
scas
imul
aad
adc
fnstsw
fs
pusha
pop
lcall
fwait
roll
sbb
lahf
mov
push
decl
mov
mov
xor
add
xor
pusha
dec
pop
bound
dec
pusha
subb
xor
aaa
lock
ja
and
fdivs
incb
jmp
sbb
cmpsl
popf
cmp
rorb
xchg
jl
sbb
fisttpl
insl
daa
lahf
movsl
jne
or
fistpl
movl
scas
dec
inc
push
push
sub
push
lcall
data16
hlt
mov
jne
hlt
fdivrs
mov
inc
movsb
mov
sub
movsl
imul
and
pop
fdivl
fldl
cwtl
mov
in
cli
push
adcl
mov
inc
xchg
and
and
ret
rol
sub
int
ret
aad
pop
inc
fnsave
adc
lcall
inc
or
test
jns
sub
dec
dec
fmulp
inc
decl
push
push
add
pusha
pop
aas
insb
leave
divl
clc
pop
pop
shl
cli
in
inc
sahf
dec
inc
out
and
fs
in
test
ja
xlat
dec
popa
sahf
stc
stos
insb
or
push
es
rolb
test
fsubs
xchg
sub
xchg
and
jp
addl
cld
popa
fwait
sbb
scas
cli
enter
pop
inc
lock
push
xchg
inc
xlat
push
pop
std
aaa
lea
pop
mov
jle
push
out
imul
data16
fidivl
dec
out
lea
lea
int3
cmp
mov
aas
imul
or
gs
push
push
mov
jp,pt
mov
or
lods
jnp
and
out
pop
dec
aaa
xchg
jmp
xor
fcomip
test
std
and
js
test
pop
mov
mov
pop
add
or
iret
inc
jne
jns
sub
fsubs
dec
dec
mov
test
xor
scas
out
cmp
xlat
mov
mov
addr16
sub
js
icebp
cmpsb
mov
mov
sub
loop
aaa
fwait
lahf
movsl
out
lcall
jno
jge
ljmp
mov
jns
testl
adc
mov
sbb
mov
mov
xor
xchg
jne
fwait
push
xchg
scas
insb
mov
loope
jbe
pop
loope
jo
xorl
add
out
lahf
push
xchg
adc
mov
sub
rcl
push
dec
leave
int
sub
jbe
insl
inc
cmc
add
xchg
inc
jbe
and
adc
ret
lret
sub
js
stc
int3
test
mov
adc
fwait
inc
lahf
lock
mov
fadd
rep
test
adc
inc
test
fnsave
rclb
fstpl
test
pop
jg
movsb
push
mov
lds
jae
cmp
addr16
outsl
push
mov
mov
bound
pop
frstor
stos
or
xor
jno
movsl
push
dec
cmp
imul
push
mov
add
jne
pop
pop
pop
rcrl
lcall
push
jg
xor
push
xchg
fs
sub
dec
push
in
insb
rcll
sub
hlt
mov
cmc
rcrl
or
in
lret
sub
push
loope
filds
filds
mov
sti
cmpsl
mov
sub
or
out
push
push
jge
cltd
push
xchg
xchg
loopne
cmp
test
or
xchg
mov
insb
cmpsb
stos
adc
dec
sub
mov
shl
push
cmpb
in
sbb
inc
or
pop
shlb
add
fsts
pop
or
or
shl
xor
or
jmp
aam
mov
xor
push
add
inc
xlat
push
jmp
add
mov
test
ja
xchg
xor
movsb
push
push
mov
jmp
inc
sbb
into
jb
or
add
jge
ds
repz
mov
mov
sub
movsl
jp
mov
pushf
aaa
cmp
push
xlat
mov
enter
mov
add
out
jmp
jnp
shlb
cmpsb
adc
sbb
enter
insl
jnp
sti
push
mov
icebp
lock
dec
fstpt
xchg
pop
sub
push
xchg
mov
rorl
fsubl
in
adc
sbb
out
sti
push
bound
mov
notb
pop
mov
jmp
cmp
xor
adc
sahf
pushf
rcrb
gs
out
mov
jnp
adc
enter
mov
fcomps
pop
xchg
nop
mov
mov
sbbl
lods
inc
inc
jne
jno
cwtl
aas
and
movsb
ljmp
dec
add
arpl
or
test
inc
jle
jmp
jae
xor
aaa
add
mov
sub
pop
mov
cltd
jns
cwtl
add
es
cmp
insb
mov
fnsave
cmc
inc
movntps
das
or
mov
inc
push
jae
aad
pop
add
enter
xchg
lcall
stos
mov
int
sbb
cli
stos
mov
sub
dec
roll
cwtl
cmc
pop
pop
adc
push
lods
sub
rorb
sbb
and
sub
sub
insl
arpl
lock
loop
and
icebp
mov
in
cmpsl
jb
cwtl
jne
mov
pop
testb
imul
aas
std
pop
mov
bound
mov
je
cmpsl
dec
jns
fwait
pop
mov
cs
lahf
nop
jmp
sub
mov
xchg
outsl
les
inc
pop
out
cmpsb
in
addb
ja
loopne
lret
loopne
dec
mov
pop
out
jl
fdivl
adc
iret
jae
test
jo
cmp
pop
popf
aad
jno
cltd
shlb
dec
cmp
scas
xchg
mov
push
in
sti
out
adc
cmp
inc
sahf
xchg
scas
in
pop
jns
in
pusha
adc
subb
mov
or
add
popa
or
lods
mov
push
pop
inc
push
dec
mov
aaa
hlt
pop
xor
out
push
test
dec
mov
pop
or
xor
push
xor
sbb
out
loope
ds
into
adc
fldl
lods
xor
cs
push
out
int3
mov
xor
cmpsb
in
push
sbb
loope
xorb
leave
lods
out
mov
sbb
or
cmp
mov
pop
cmpsl
sbb
mov
jno
gs
or
push
jae
mov
aas
and
ss
push
shlb
ja
xor
and
jno
mov
lea
out
lods
jmp
inc
lods
mov
cmp
push
or
or
cmp
xlat
xor
add
or
push
insl
mov
int3
jno
fnstenv
xchg
mov
mov
sbb
out
data16
mov
add
adc
testl
push
and
loope
jmp
mov
jmp
add
push
lcall
push
adc
xor
shrl
mov
clc
add
clc
sub
ljmp
loopne
mov
cmp
lods
jecxz
add
cltd
push
jno
push
lret
ss
pop
rcll
out
mov
pop
mov
dec
inc
cmp
mov
test
adc
cmc
or
imul
daa
out
pop
sbb
cwtl
cmc
filds
and
sbb
dec
sub
xor
push
xor
imulb
cmp
xchg
mov
jmp
sbb
testw
cmp
lea
invd
sub
out
dec
cld
sbb
and
arpl
inc
jns
inc
nop
inc
mov
fdivrs
and
in
clc
clc
xchg
imul
imul
jp
xlat
out
rcl
jl
mov
and
inc
stos
jl
mov
icebp
fbstp
jmp
xchg
lds
xchg
lods
sub
jmp
imulb
ja
fdiv
sbb
adc
add
xchg
sahf
mov
lods
and
cmp
jo
jo
sbb
mov
mov
sbb
test
or
stc
cmpl
sar
in
icebp
jle
fcmovnu
test
push
cmp
dec
lods
jp
orl
in
test
dec
loopne
mov
scas
push
pop
mov
fadd
push
lods
sub
cwtl
dec
stc
or
jg
outsb
inc
and
xchg
loopne
cmp
sbb
push
fcom
lods
cmpsb
out
jl
pop
lcall
pop
mov
addb
xor
or
insl
pop
mov
xor
mov
sbbl
xchg
movsb
aas
dec
loope
inc
adc
lret
xchg
mov
ljmp
mov
jae
cmpsb
cmc
add
loop
jb
jmp
call
fldenv
mov
mov
cmpb
scas
adc
xchg
in
ret
aaa
inc
mov
xchg
add
mov
or
rorl
iret
xchg
xchg
lret
xor
ret
rol
in
sub
xor
lcall
add
js
insb
mov
cwtl
xlat
lret
aam
dec
mov
aad
or
ss
adc
push
and
cmpsl
iret
lea
cmpsl
pop
mov
mov
clc
clc
xor
inc
xor
add
push
mov
jne
pusha
test
or
cmpsb
sub
out
int
leave
mov
mov
and
movl
sub
lods
cmp
add
cmp
add
orb
shl
lock
gs
inc
cs
push
pop
shll
xor
adc
push
jb
hlt
xchg
dec
pop
add
es
inc
pusha
inc
xchg
or
lds
outsl
imull
mov
clc
mov
xchg
adc
imul
out
aad
popf
sub
mov
or
mov
mov
mov
add
mov
repz
mov
scas
mov
mov
ret
jae
pushf
push
shll
mov
jae
aam
out
in
lret
and
dec
gs
xchg
jp
jg
cmp
imul
push
xor
fldenv
mov
fsub
mov
aas
lret
cltd
push
xor
pop
add
cli
popf
push
cmp
sbb
and
test
jnp
or
test
daa
je
xor
cmp
xchg
sbb
and
cmp
insl
iret
mov
or
sahf
mov
leave
popa
subl
and
pop
push
inc
xchg
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
push
pop
sbb
jmp
or
das
mov
jecxz
sub
mov
sbb
jecxz
aad
repnz
mov
gs
cmc
push
mov
cmp
jle
lods
push
call
fdivrs
push
ja
push
lret
mov
push
xor
aam
push
push
and
mov
sub
jae
jecxz
js
icebp
popf
xchg
mov
push
pop
repnz
les
cltd
enter
jno
adc
test
pop
mov
out
jb
pop
test
out
addr16
jmp
aad
movsl
sbb
iret
insl
sbb
bound
leave
jecxz
sarb
push
imulb
mov
add
sbb
ja
scas
mov
popa
pop
push
pop
push
pop
in
push
cmpsl
xor
repnz
xchg
push
adc
push
scas
and
test
pop
jbe
xor
and
int
xchg
mov
jg
mov
sub
xlat
adcb
cli
cmp
jnp
dec
mov
fldt
movb
rcll
mov
xor
aam
adc
adc
bts
daa
lea
mov
cs
pop
das
jo
mov
or
cmp
or
out
adc
push
cmp
push
push
lods
repnz
stos
xor
mov
dec
roll
sbb
out
cwtl
inc
pushw
jno
scas
jg
sub
xchg
mov
call
sub
cmp
paddd
lcall
add
and
pop
mov
dec
ffreep
aad
dec
jl
loope
jmp
outsl
aas
push
test
stc
xor
daa
cmc
into
xor
and
idivb
jg
jb
mov
lret
lea
ficomps
out
cltd
pop
xor
push
jns
stos
popf
scas
fistpl
inc
push
movsl
jmp
xchg
repz
xchg
dec
shl
mov
lods
int3
or
xchg
xor
inc
sub
or
out
int3
shrb
add
ljmp
cmpl
sbb
sub
xor
sbb
cmp
adc
bound
scas
test
repz
fists
in
add
std
popa
jg
nop
adc
jg
mov
mov
das
leave
xor
into
sahf
mov
mov
cmc
xor
inc
add
lahf
js
xchg
or
aas
addb
stos
and
mov
cltd
mov
fistpl
into
icebp
dec
dec
aas
jbe
stc
fdivrl
and
and
inc
mov
fnstenv
arpl
pop
enter
sub
inc
daa
call
orl
dec
mov
or
xor
addr16
shrd
xchg
iret
bound
mov
js
ret
iret
enter
pop
cli
mov
cltd
fldl
or
inc
push
arpl
cmpsl
sbb
xchg
gs
mov
std
int
add
sti
pop
xor
jecxz
mov
addr16
in
movsb
pop
jae
in
mov
gs
xchg
std
xchg
add
lods
mov
push
movsl
in
adc
fisubs
mov
cwtl
andb
push
cmc
jg
call
andb
fadds
cmp
stos
pop
mov
lds
mov
jb
lock
jge
adc
enter
scas
adc
std
mov
add
cwtl
popa
push
addr16
cmp
popf
frstor
ficompl
cli
outsl
pop
dec
mov
xor
add
sub
adcb
mov
lahf
mov
dec
jno
adcb
push
incl
test
aad
mov
sub
jno
lret
mov
inc
adcl
add
daa
ret
pop
sub
xchg
sbb
xorb
mov
adc
sbbl
fs
cmpb
mov
mov
push
stos
mov
inc
mov
andl
mov
mov
dec
test
shl
xchg
mov
dec
adc
test
pop
jecxz
bound
mov
into
mov
inc
sbb
push
subb
mov
rcll
or
push
sub
dec
lcall
sub
in
sbb
push
add
mov
in
into
push
mov
fcompl
mov
jbe
in
inc
cld
push
jp
in
nop
sub
add
outsl
dec
inc
into
push
xor
add
insb
pushw
xchg
pop
test
cmp
push
pop
out
sbb
mov
lods
pop
aas
push
cmpsb
jmp
movsl
mov
dec
dec
test
adc
adc
xor
add
leave
lret
out
or
stc
sti
jge
fwait
out
inc
dec
mov
xchg
lret
popf
add
push
mov
cltd
rolb
mov
dec
or
mov
mov
fdivs
and
push
jb
fwait
loop
test
add
adc
xchg
popf
orl
pushf
in
push
push
and
rcrb
das
pop
lahf
pop
inc
es
jae
xor
xchg
xchg
dec
cmp
cmp
push
int3
push
push
jp
xor
in
add
xlat
dec
aas
pop
pop
and
in
xchg
push
addb
pusha
push
mov
cmpl
sub
cmpsl
pop
insl
fnstsw
sbb
pop
leave
jg
mov
inc
fwait
ret
add
je
shlb
xchg
ret
mov
ja
das
je
push
lahf
push
jl
sub
imul
fcomip
idivb
mov
movsl
inc
incb
ja
pop
or
xchg
sub
arpl
push
cmp
sbb
pop
mov
jmp
push
movsl
sub
in
or
fistpl
xchg
dec
add
inc
cmp
nop
push
and
mov
aas
leave
pop
dec
pop
sbb
mov
fmuls
jne,pt
xor
xor
lret
mov
push
mov
iret
mov
fsts
ljmp
mov
sbbb
pop
push
jle
xor
cmc
mov
out
xor
dec
push
add
xor
jl
mov
cmp
and
mov
sub
fdivr
mov
iret
mov
adc
idiv
out
lds
mov
fs
push
stc
in
mov
iret
add
xchg
mov
cmp
add
xchg
mov
xchg
pop
pop
outsl
je
int
ljmp
test
sub
mov
sahf
dec
jno
push
repz
sub
push
sub
out
xor
mov
ss
enter
sub
jne
mov
mov
pop
ret
pusha
adc
dec
jp
sbb
dec
sahf
rcl
icebp
cmp
insl
mov
lret
xor
jg
sub
push
dec
add
mov
push
xor
jne
push
push
inc
dec
sub
jle
test
shlb
bound
mov
arpl
gs
push
add
ja
mov
nop
sti
imul
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
outsb
mov
sbb
jb
push
popf
lcall
push
add
or
pusha
movsb
aad
mov
fxch
lret
das
xchg
jecxz
ret
adc
mov
pushf
xchg
test
pushf
das
les
cmc
je
push
in
ds
ljmp
and
mov
push
push
or
pop
mov
icebp
imul
add
sbb
mov
lcall
pop
mov
inc
push
push
enter
mov
movsl
loop
jmp
js
cmc
and
mov
cmp
xchg
mov
dec
and
cli
andb
or
sarb
lock
or
mov
fistpll
inc
mov
das
cmp
jb
jne
lods
add
gs
out
bound
sbb
mov
xchg
nop
push
lock
jns
adc
cmp
fxch
or
add
dec
add
int
cmp
fidivrl
inc
mov
xor
jg
es
push
fdiv
shr
call
push
mov
mov
cmc
dec
add
jle
rorl
mov
add
push
cwtl
mov
adc
lcall
cmpsb
bound
jge
add
jmp
ja
xchg
mov
inc
sbbl
mov
gs
std
jecxz
roll
pop
out
loopne
mov
mov
fcoms
rcrb
enter
test
cwtl
cmp
xchg
fsub
sbb
jle
push
adc
loop
cmp
andb
ljmp
dec
lods
adc
adc
rcrb
sbb
rcll
cmp
xchg
dec
push
mov
xor
push
andl
push
sbb
sbb
lahf
fwait
sbb
xchg
mov
add
insl
add
pop
sbb
and
gs
nop
shrl
xor
and
arpl
sar
in
pop
push
pop
dec
push
and
out
ret
inc
cmpsb
mov
ficomps
pop
lret
add
iret
imul
jo
xor
pop
or
cmp
cmc
test
jmp
das
sub
loopne
bnd
cmpsb
or
cmp
cld
mov
insb
pop
lea
jnp
outsl
mov
loope
popa
mov
data16
sub
pop
inc
ja
in
ret
gs
pushf
push
push
dec
push
sbb
inc
test
lock
data16
dec
mov
cmp
dec
ret
daa
and
add
add
enter
mov
dec
movsl
cmpsb
adc
pop
aad
push
es
fiaddl
mov
mov
outsl
call
pop
xchg
mov
stc
data16
sbb
cmpsl
cmpsb
lret
sbb
pop
push
cmc
mov
or
fwait
pop
lds
popf
jle
imul
or
adc
movsb
xchg
sbb
lret
fadds
imul
cwtl
hlt
adc
jo
outsb
push
dec
sub
cmp
and
push
mov
fiaddl
pop
cmpsl
pop
addb
shlb
subb
cwtl
mov
xchg
outsb
and
ret
aaa
gs
setnp
call
mov
adc
pop
mov
out
stos
pop
out
test
pop
sbb
pop
das
jno
sub
push
pop
setae
lahf
lret
pop
xlat
jo
loope
in
imul
rclb
jp
cmpb
rclb
pop
cmp
fisubrl
xor
or
mov
sub
mov
fstps
pushf
and
cli
xchg
pop
inc
add
fdivl
pop
imul
fwait
xchg
cmp
mov
sub
fcoms
adc
clc
andps
mov
int3
movsb
adc
mov
int
gs
xchg
mov
mov
popa
xor
cs
es
nop
pusha
jg
mov
dec
and
xchg
lods
push
les
sbbl
leave
ficoms
adc
xor
test
test
pop
arpl
pusha
popf
fmuls
inc
jl
out
lret
mov
lods
js
push
shr
dec
ror
mov
and
ljmp
xor
lods
jo
adc
sub
sbb
mov
jne
xchg
cmc
test
lret
xchg
xor
push
fists
push
dec
ljmp
pop
inc
add
addr16
sbb
fldl
add
aaa
mov
sbb
int3
push
ss
in
popl
and
xchg
mov
sahf
popa
daa
pop
loope
stos
jno
in
sbb
add
and
fbstp
add
adc
lods
das
bound
pop
cmpsl
test
mov
pop
sbb
outsb
add
dec
adc
or
mov
pop
mov
pop
sbb
jbe
mov
std
pop
fwait
daa
xchg
lods
out
push
mov
hlt
hlt
xchg
in
pop
pop
ds
lods
nop
pop
popf
jg
sub
or
inc
int3
mov
enter
mov
enter
xor
faddl
movsb
incl
add
adc
call
mov
and
xchg
cmp
xor
pop
mov
movsl
push
dec
jge
sbb
imul
loop
jne
cwtl
ret
xor
add
sbb
in
add
loopne
mov
loopne
sbb
iret
jle
push
lret
fmuls
adc
pusha
sbb
in
lock
cmpsl
push
out
adc
push
xchg
jb
mov
adc
int
pop
sbb
push
mov
pop
stc
xor
test
sbb
adc
cmpsl
inc
add
or
push
dec
incl
fistpll
xchg
jae
pop
or
call
inc
cmp
lods
sub
lret
inc
aas
dec
or
sub
xchg
push
mov
sahf
dec
imul
sbb
xchg
dec
movsl
in
lret
fcoms
adc
or
or
popf
aaa
shrb
rcrl
sti
xor
cmp
fsub
ret
stos
hlt
fildll
ret
jns
sub
xchg
mov
mov
add
scas
xchg
jbe
shl
daa
xchg
imul
sbb
jo
cltd
dec
jl
jp
cmp
jmp
scas
ja
pop
cld
sub
das
or
nop
cmp
aas
out
cmp
adc
jmp
lret
repz
or
inc
add
jnp
movsl
fs
mov
xor
lock
ja
out
jl
stos
xor
ds
fidivl
and
xchg
jno
stos
loop
out
rcrl
push
movsl
jno
in
jle
xchg
cld
mov
mov
inc
or
or
jge
mov
ret
and
cmc
outsb
repz
sub
mov
fcmovb
cmp
aaa
cmp
push
aad
xor
js
dec
imulb
jne
jle
ds
sbb
dec
sub
das
push
das
adc
xor
mov
lret
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
fstp
pushf
xchg
jg
adc
xchg
enter
or
repz
jae
sub
clc
das
jb
mov
popf
bound
shlb
shlb
or
mov
push
sub
push
test
stc
lods
cmp
adc
testb
cltd
loope
out
std
adc
adc
hlt
popf
lcall
cs
icebp
pop
dec
cmp
cmp
nop
xor
mov
sbb
jecxz
xchg
inc
pushf
nop
ds
test
out
lcall
adc
lods
not
mov
pop
bswap
out
mov
int
push
mov
ss
mull
repnz
or
incb
xor
fs
fmull
pop
mov
popf
or
mov
inc
rorl
jo
notl
or
test
lods
xor
ficoms
stos
push
out
or
ds
lods
push
or
pushf
pushf
adc
inc
add
mov
push
dec
xor
aam
sub
stos
xor
test
inc
ret
aam
xchg
ja
sub
mov
mov
aad
inc
stos
dec
push
mov
xchg
out
lret
jb
loop
pop
and
sbb
bound
insb
adc
mov
jnp
and
add
mov
pushf
mov
cwtl
ret
and
or
or
inc
xor
jg
out
jecxz
mov
mov
xor
push
fmull
test
ljmp
xor
pop
test
sub
jmp
nop
or
aas
nop
sbb
xchg
out
mov
ljmp
mov
and
jmp
mov
cwtl
jb
cmpsb
mov
jge
sub
test
cmp
mov
mov
std
jmp
or
and
inc
lds
push
clc
and
add
or
jne,pt
cltd
sbbl
jle
cmp
test
movsb
es
jg
inc
cli
test
in
loope
loope
out
cmpsb
dec
loopne
daa
arpl
fidivs
and
pop
dec
je
add
xchg
adc
rorl
push
jle
leave
mov
sbb
xchg
push
adc
xchg
mov
mov
sbb
add
xchg
pop
push
movsb
dec
dec
inc
aam
sub
jmp
push
sti
adc
jae
or
aam
sahf
aad
sahf
sub
sbb
mov
enter
repz
out
int3
int3
push
mov
or
lahf
mov
add
sub
sbb
fisubrl
push
test
insl
or
cmp
pop
add
movsb
sbb
push
inc
inc
jmp
jle
rcrl
push
aaa
pop
pusha
stc
jl
push
hlt
or
out
jno
lcall
in
iret
or
mov
jl
push
lods
popf
int3
mov
sti
add
and
div
mov
ret
fsts
jle
adc
push
mov
out
lret
nop
into
jge
dec
mov
push
fistpl
inc
sub
popa
mov
cmpsb
mov
out
les
adc
enter
fisttps
xorl
add
push
and
stos
inc
mov
es
lock
adc
pop
dec
iret
bswap
sbb
add
or
xchg
and
enter
insb
icebp
lea
push
sti
push
fs
jp
sub
push
mov
and
mov
mov
es
jns
gs
rolb
lret
movsb
insb
js
cmp
shlb
out
loopne
mov
cmp
xor
stc
insl
addr16
mov
jl
push
notl
repz
add
stos
out
jp
jno
xchg
scas
jp
push
inc
sbb
adc
push
and
imul
jb
sbb
fsts
or
in
orl
nop
pop
mov
mov
jbe
and
mov
sub
jbe
mov
into
inc
pushf
sub
cmp
mov
ret
lea
test
dec
xor
ljmp
cmpsb
in
sbb
mov
sbb
mov
loope
jae
push
push
aas
xorb
test
xchg
add
pop
cmp
hlt
push
mov
out
dec
loope
stos
sbb
mov
sbb
or
inc
sub
sub
mov
push
mov
fwait
push
sub
mov
int3
test
push
adc
outsl
jns
jl
fbld
and
xor
jmp
std
xor
cli
rcrl
imul
lret
lds
pop
push
mov
rcrb
inc
mov
jno
push
xchg
add
push
call
arpl
insl
mov
jb
sahf
ficomps
jl
loopne
movsl
push
mov
push
pop
jne
jle
aaa
mull
pop
xchg
aam
pop
lods
sbb
mov
cmc
or
rcrb
mov
insl
push
sti
jecxz
xchg
int3
cld
aas
push
jle
je
stc
shll
xchg
leave
cwtl
cmc
add
cld
or
xlat
cmp
sbb
add
dec
test
jl
mov
xchg
xchg
mov
orb
push
add
cwtl
add
push
je
cli
mov
mov
mov
fcmovbe
mov
push
inc
add
icebp
lahf
ret
mov
xor
xchg
push
push
mov
lods
push
xor
mov
enter
test
imul
mov
mov
sbb
paddq
xchg
push
pop
xlat
test
out
repz
inc
test
xor
jnp
mov
mov
popa
shll
jge
jo
je
rorb
aad
scas
inc
shlb
aaa
mov
push
dec
pop
imul
in
dec
lock
out
adc
xor
es
mov
jge
push
inc
js
adc
push
inc
mov
dec
mov
leave
pop
sub
std
out
mov
mov
scas
int
aas
sbb
inc
adc
data16
sub
ljmp
jne
outsb
cmp
or
js
inc
xchg
or
pop
jae
cmpsb
cmpsb
in
lods
adc
lds
cmp
jle
mov
xchg
mov
aas
push
mov
mov
mov
js
push
cmpsl
aaa
fisttpl
insl
adc
add
jb
xor
push
push
cld
push
jge
mov
push
mov
mov
out
dec
push
lock
xchg
adc
in
sub
pop
in
sbbl
mov
daa
aaa
or
outsl
scas
adc
je
adc
lret
iret
sbb
jno
das
imul
mov
xlat
es
int3
push
pop
scas
ljmp
call
pop
fsubl
inc
sbb
out
sub
repnz
sbb
xchg
out
cmpsl
mov
mov
das
add
lds
pop
shlb
lret
fwait
mov
cmp
adcb
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
push
push
clc
adc
xchg
sahf
popa
je
mov
cmpb
pop
and
popf
cld
mov
nop
push
or
cmp
jae
ret
dec
jo
push
mov
xchg
sub
xchg
nop
fs
mov
cmp
in
dec
push
in
fs
push
xchg
mov
push
cltd
mov
sti
mov
mov
lea
jmp
xor
xchg
clc
ficomps
fwait
jecxz
jmp
stc
jb
call
aad
cld
sti
cli
and
add
mov
adc
dec
push
stc
arpl
pop
addr16
jg
mov
sbbl
mov
sub
cli
repnz
sub
repz
jmp
lods
pop
xchg
xchg
sbb
mov
repnz
clc
pop
xlat
mov
test
push
gs
and
rcrb
adc
push
mov
add
gs
xor
aam
mov
mov
mov
xchg
js
sub
insl
test
pusha
sub
mov
mov
ljmp
test
les
shl
sarl
add
sbb
addl
or
xor
xchg
push
or
test
cmp
lret
out
mov
xchg
or
pop
negl
adc
push
jmp
xchg
rcrl
sub
stos
pop
pop
mov
cmc
add
neg
add
je
inc
cmc
rcll
lret
stos
in
or
or
clc
stos
fidivrs
xlat
pushf
inc
outsb
xchg
ja
mov
sub
rorb
rcrb
inc
mov
int
add
inc
stc
jno
push
xchg
fwait
lret
faddp
mov
mov
insb
push
sub
pop
dec
les
fwait
xchg
movsb
push
or
add
push
mov
mov
in
enter
ret
shrb
push
sbb
cs
js
mov
push
iret
and
sti
pop
insl
shll
sub
mov
sub
pop
daa
sbb
or
xchg
repz
insl
add
push
lcall
jle
dec
inc
xchg
dec
stos
int
hlt
sub
xor
add
nop
or
dec
xor
cpuid
cmc
repz
cmpsl
outsl
push
icebp
enter
in
or
or
mov
lret
rcr
neg
stos
pop
movsl
and
nop
push
jne
sub
aad
inc
jns
scas
inc
daa
jecxz
sbb
out
mov
jp
daa
add
pop
or
pop
scas
sub
sub
pop
push
push
cmpsl
cmp
pop
cli
ficomps
mov
stc
lret
pop
adc
aam
shr
lret
mov
popf
sbb
mov
sbb
rolb
mov
popf
aas
mov
mov
xchg
aas
jg
test
cmp
bound
sub
imul
adc
mov
add
sub
aam
push
loopne
and
loop
and
sub
or
cs
mov
pop
stc
movsb
and
and
rol
repz
push
mov
testb
inc
sahf
inc
pop
cmpsb
sbb
lods
lods
add
adc
mov
mov
mov
pusha
and
mov
shll
jle
imul
lods
je
imul
mov
pop
mov
xchg
jl
aad
jmp
cli
fmul
inc
shrl
and
push
xchg
and
xor
jmp
sub
mov
pop
inc
adc
dec
xchg
lcall
jo
hlt
adcb
mov
jle
pop
adc
lahf
fnstcw
std
adc
adc
jo
js
push
jae
dec
xor
mul
es
jl
sbb
sub
jl
ffreep
sar
test
shll
mov
pop
iret
iret
pushf
pop
fidivl
in
or
out
fwait
xor
pop
mov
push
mov
xchg
mov
push
and
xchg
dec
pushf
add
cmp
repz
dec
ljmp
daa
cmp
and
sbb
dec
enter
pop
scas
out
xchg
mov
add
aas
pusha
ja
mov
sbb
lahf
jo
xchg
repz
ljmp
or
repz
jl
and
cmp
cmp
outsb
popf
jo
xor
sbbl
loope
push
out
xchg
mov
mov
add
xlat
jle
mov
mov
gs
jg
or
dec
cmpsl
fdivl
shll
ret
pop
inc
lcall
and
add
dec
push
push
mov
or
stos
mov
mov
mov
and
sbb
jo
andl
xchg
add
xchg
adc
ret
push
xchg
cmp
std
fs
scas
aad
bound
popa
cmp
sbb
cmpsb
lcall
pop
xchg
scas
in
jo
inc
xor
out
test
ret
loopne
xchg
push
ds
add
or
adcl
dec
cmp
sbb
push
or
cwtl
sub
pop
loop
daa
push
pop
mov
xor
mov
mov
jno
mov
or
jb
push
mov
mov
and
xor
or
lods
mov
fisubrl
fld
sbb
shrb
xor
sub
test
cmpsb
loope
in
push
aaa
popa
cmpsl
push
jb
mov
icebp
inc
sbb
mov
inc
daa
lret
pop
mov
arpl
mov
pushf
adc
inc
cltd
sbb
dec
pop
les
fsub
mov
mov
push
cs
mov
cmp
sti
mov
into
in
mov
mov
popf
adc
aaa
fwait
lret
rcll
int3
lcall
xchg
stc
fldt
jg
cmpsb
je
negb
into
mov
jno
outsl
sbb
jle
jb
adc
testl
xchg
pop
jg
sti
fdivs
dec
popf
rclb
arpl
push
or
push
mov
jns
lahf
js
dec
cmp
insl
push
add
adc
pop
sbb
xchg
mov
or
sub
ja
pop
xchg
sbb
and
xchg
push
popa
xor
push
les
mov
enter
lds
add
jg
adc
jle
cltd
loop
mov
cmp
imul
loop
int
out
jecxz
sbb
lcall
popa
mov
xor
mov
jns
pushf
xchg
and
shll
enter
out
xchg
popa
jno
ja
fistpll
lea
pop
jmp
lea
xchg
or
arpl
cmp
imul
repz
test
fadd
popl
aad
test
xchg
lret
mov
mov
mov
and
inc
jl
data16
dec
mov
jb
shlb
dec
pop
jl
mov
or
repz
cmp
lea
pop
loopne
mov
xchg
xor
push
fwait
jns
ja
xlat
cltd
dec
mov
and
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
mov
inc
xor
push
call
roll
in
hlt
ss
xor
sub
test
fs
inc
pop
xchg
sub
aad
pop
add
adc
sub
and
addr16
ss
test
ret
cmpsb
dec
stc
jae
cmc
jae
mov
mov
test
testb
orb
push
mov
enter
push
mov
or
mov
inc
ljmp
aas
std
cld
rcrl
loope
and
cwtl
and
outsl
mov
outsl
push
add
pop
rcll
cltd
insl
sti
test
fwait
push
cs
mov
lcall
sub
fldl
pop
add
jae
shlb
shrl
jge
inc
gs
or
pop
js
mov
aaa
sbb
das
testb
xchg
cmp
movsb
imul
ja
mov
inc
les
inc
mov
cmp
sbb
mov
mov
dec
xchg
jmp
xor
add
dec
xchg
insl
je
gs
insb
dec
fcompp
loop
mov
mov
inc
lahf
push
push
nop
aam
lods
cmp
mov
mov
and
outsb
xchg
pop
rclb
push
enter
popf
test
xor
mov
ds
shrb
inc
pop
aaa
jge
clc
imul
push
push
jmp
or
testb
mov
adc
ljmp
jmp
mov
add
cmpb
ss
push
mov
es
push
xchg
xchg
nop
aas
xor
cs
lods
cltd
sarl
pushf
inc
movsb
or
imulb
lret
xchg
add
inc
data16
adc
sub
sbbl
jns
xchg
vreducepd
ljmp
jb
ret
fst
mov
mov
or
xchg
aaa
mov
les
movsl
add
xor
xchg
repz
cmp
mov
lret
push
mov
jle
mov
or
nop
dec
sbb
mov
mov
add
repz
arpl
out
outsb
jle
mov
in
xor
xor
in
xchg
cmp
cmc
push
xlat
iret
lock
mov
test
fwait
pusha
cmc
sbb
mov
aas
jae
push
push
xchg
adc
mov
sahf
imul
push
out
cmp
jo
fcmovnb
mov
or
ds
xchg
and
and
clc
popa
mov
stos
std
mov
mov
mov
mov
sti
xchg
mov
push
hlt
push
mov
ss
mov
aas
in
jge
xchg
add
fimull
inc
rclb
fs
jns
test
inc
push
push
popa
call
ja
xchg
stos
sub
pushf
mov
mov
jns
les
jne
mov
cmp
sbb
loope
popf
cmp
and
cltd
xchg
pop
add
fists
stos
rcr
add
enter
ss
adc
aaa
pushl
adc
into
mov
add
bound
lods
mov
imul
rolw
fisubl
popf
push
cld
adc
xor
test
je
lret
lods
ret
bound
pop
mov
mov
outsl
loop
jne
mov
jmp
push
dec
dec
inc
mov
dec
mov
dec
pop
sbb
je
sub
call
test
data16
rep
dec
mov
cli
cmc
xorl
inc
mov
sub
adc
loopne
in
aam
add
in
idiv
mov
sbb
bound
rorl
mov
je
lods
xchg
pop
add
xlat
cltd
xchg
inc
cmpsb
test
icebp
cmp
arpl
pop
pop
out
push
loope
loop
cmc
cmpsb
xor
aas
push
push
pop
movhlps
xchg
imul
inc
je
push
fwait
cltd
inc
sub
aas
adc
sbb
imul
stc
stos
adc
pushf
mov
je
popf
inc
push
loope
mov
or
inc
out
lret
lret
cmpsb
xchg
mov
es
mov
mov
add
jb
popf
dec
mov
mov
inc
popa
sbbl
fimuls
fisttps
jbe
into
push
movb
mov
cmp
lahf
mov
movb
jb
fadds
pop
popl
xor
das
test
pop
mov
add
imulb
or
js
mov
fcoms
push
xchg
out
xchg
int
mov
rcll
cmc
inc
mov
jle
call
sbb
and
out
hlt
std
lret
mov
iret
adc
adc
rcll
rcrl
mov
fmuls
add
pop
outsb
leave
mov
testb
lcall
insb
jl
scas
rorl
xchg
inc
cmp
lret
insl
push
add
cmp
addr16
push
arpl
stc
cs
jno
rolb
dec
daa
jg
dec
pop
dec
push
jp
fildll
lahf
mov
loopne
xlat
push
xchg
arpl
xchg
test
scas
cmp
test
jns
jne
je
jo
push
sbb
jge
push
enter
rcrb
inc
adc
jae
xor
mov
test
pushf
dec
or
mov
sub
jg
loop
mov
mov
push
inc
paddusw
and
xchg
int3
lahf
push
nop
xchg
and
jns
mov
xor
pop
test
stc
sub
cmpsb
pop
inc
adc
dec
imul
add
xor
dec
mov
insl
test
sbb
dec
cmp
in
mov
jne
xchg
cwtl
js
daa
adc
or
inc
jge
sbb
cwtl
inc
lds
mov
pushf
jbe
sub
or
mov
sub
pop
cmp
adc
mov
push
dec
sub
pop
outsl
sub
subb
das
push
xor
or
xor
pop
aad
jns
mov
data16
aas
pop
jg
out
push
mov
sti
in
push
rcrl
jl
pop
xchg
lret
scas
mov
repz
jns
imul
inc
out
mov
push
es
or
aas
jns
rcrb
rdmsr
mov
dec
ret
jle
xchg
aaa
pop
lock
lcall
cmp
stc
nop
cmc
dec
cltd
pushl
push
add
fs
int
or
inc
sbb
fbld
cld
sbb
test
hlt
sahf
push
mov
es
ja
insl
lahf
sbb
push
fsubrs
ret
in
sbbb
dec
mov
sub
mov
push
cli
dec
push
or
loop
call
enter
gs
loop
sub
inc
subl
movhps
cltd
and
andl
and
sbb
scas
lret
jnp
pushf
mov
mov
or
push
ds
js
or
out
insl
pop
pop
push
cmpsb
cli
movaps
adc
mov
fld
xlat
cmp
add
aas
mov
cmc
add
or
xor
xor
movsl
fmull
inc
jae
push
test
jne
sbb
mov
rcrl
fcomip
into
dec
and
mov
push
jns
xlat
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
sbb
adc
xchg
aas
scas
cmp
pop
xchg
jmp
dec
sub
loopne
jae
xchg
nop
into
sahf
call
cli
popa
mov
pop
int3
ss
js
mov
scas
sub
pop
sbb
out
popa
sub
pop
ds
dec
out
lds
and
scas
lods
xor
pop
dec
pop
push
daa
mov
movsl
pop
lods
jbe
stos
fstpt
inc
test
leave
int3
mov
and
pop
data16
aas
stos
loopne
fidivs
lods
mov
into
into
dec
test
jl
pop
jmp
adc
repnz
inc
dec
sub
mov
sahf
ror
iret
pop
dec
loope
jl
sbb
and
insl
in
jp
add
jecxz
out
dec
in
popf
in
pop
xor
imul
xchg
pop
rcll
aam
mov
call
and
out
xor
and
out
jno
xchg
stc
lahf
push
jno
cmp
hlt
lods
cs
add
call
sub
test
cmpsb
jne
and
mov
inc
stos
inc
adc
ds
lock
or
push
lret
shlb
jno
fistpl
or
test
ja
cmp
pop
jb
mov
sub
inc
sub
aam
jl
ds
clc
dec
call
pop
cmp
xchg
push
cmp
outsb
ficomps
movq
sub
or
pop
pop
jg
push
push
leave
dec
cmc
pop
repz
cmc
inc
rolb
push
push
mov
mov
imul
test
mov
into
repnz
xchg
jne
mov
lds
orb
lret
and
inc
in
push
cs
inc
sub
aad
or
mov
lods
cwtl
or
push
xchg
jecxz
aam
js
int
dec
dec
lret
outsl
xchg
shrl
mov
push
xlat
ja
outsb
add
fisubs
fmuls
clc
lock
or
shlb
or
and
shl
pop
sti
push
scas
cmp
rolb
popa
or
and
jp,pt
bound
lret
fwait
movb
and
cmpsb
sub
out
cmpl
aad
popa
inc
xorl
sub
push
insb
pop
aaa
jns
or
icebp
fucompp
mov
loop
in
ljmp
pop
dec
daa
outsb
mov
mov
pop
xchg
or
imul
xchg
testb
test
je
pushf
jmp
mov
insl
mov
sub
push
mov
jno
sub
cmpsb
std
mov
xchg
mov
int3
rclb
dec
fwait
mov
xchg
and
sub
sbb
sub
ret
icebp
add
das
clc
scas
or
mov
lock
ja
xor
enter
dec
in
ret
add
lret
jns
jge
insl
fbstp
sub
rcrb
adc
xor
mov
dec
cld
push
xor
mov
jno
adc
or
cmp
pop
mov
cs
inc
lock
repnz
mov
inc
std
adc
in
sbb
scas
add
setns
dec
dec
cs
jae
lcall
mov
xor
int
lods
or
xchg
es
lock
add
jl
jae
aad
out
testl
mov
lds
xchg
stos
out
shrb
sbb
enter
out
scas
fcomi
xchg
sbb
rolb
or
out
mov
test
xchg
clc
xor
nop
adcb
mov
leave
mov
jno
push
cmc
mov
cmp
stos
inc
lahf
jae
aam
test
das
insb
filds
push
dec
push
xchg
rep
add
sub
sbb
mov
dec
scas
cmp
dec
and
mov
fs
xor
xchg
fstps
jne
jle
in
dec
sti
jp
sbb
cmp
lds
enter
inc
sti
mov
ds
enter
sub
stc
add
test
cmpsl
sbb
push
cld
repz
subl
out
or
mov
cmp
pusha
xchg
mov
jle
cmp
mov
adcb
xchg
shrl
inc
mov
jg
mov
test
xchg
sbb
cmp
fwait
push
add
insb
pop
test
mov
daa
dec
sahf
mov
js
mov
xor
push
int3
dec
je
fmulp
and
repnz
and
pop
pop
xor
inc
daa
fisttpl
sub
cmp
insb
dec
into
clc
jbe
adc
pop
cltd
popf
or
cltd
in
movsb
mov
frstor
cmp
in
mov
ja
inc
inc
cmp
or
add
in
xchg
movsl
les
xor
mov
dec
adc
cmp
xchg
push
aad
call
xchg
sbb
and
xor
fdivs
xchg
inc
cmpsl
or
add
pusha
push
sti
and
aas
mov
out
pop
inc
lahf
lods
cli
lds
pop
jle
pop
insl
xor
sbb
andl
adcl
xchg
scas
cwtl
lret
jnp
add
outsb
inc
inc
sti
out
ret
popa
mov
add
test
ss
xor
sbb
xlat
les
or
fdivrs
stos
cld
ficompl
inc
sub
out
sbb
out
pushf
and
cli
lmsw
std
out
cmp
jne
aas
rcrl
or
adc
xchg
sahf
fwait
sbb
subb
add
in
mov
and
inc
jg
push
enter
mov
pop
add
cmc
sbb
dec
in
mov
pop
push
xchg
pop
lahf
scas
mov
pop
and
or
loopne
jg
nop
mov
in
sbb
sahf
rol
or
out
xchg
fadd
or
add
mov
jecxz
inc
sub
jb
adc
mov
and
enter
sbb
out
pop
add
or
in
push
pop
or
adc
xor
movsb
out
imul
imul
xchg
lcall
jno
mov
cld
mov
pop
int
sar
mov
push
inc
xchg
xor
cmp
or
lods
dec
jge
enter
stc
stc
mov
and
mov
push
jmp
pop
popf
xchg
mov
mov
xor
enter
inc
jecxz
mov
test
mov
jnp
cmp
jl
dec
pop
xchg
push
sbb
inc
lret
xchg
loope
pop
movsl
or
leave
shr
cmp
xor
cs
mov
jno
in
rcll
leave
popa
mov
add
imul
std
pop
lahf
jl
sbb
lods
mov
cli
ljmp
sahf
and
xor
xorb
enter
or
pop
xchg
adc
clc
sub
stos
call
fcmovne
scas
addr16
cli
dec
xchg
arpl
insb
adcb
call
sbb
or
stos
push
lea
cmpsl
sub
cltd
test
sahf
jmp
test
shl
inc
iret
aad
mov
mov
in
sub
insl
cmp
xor
xlat
add
push
and
in
inc
sub
loop
dec
sub
fisttps
lock
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
lock
js
cld
adc
pop
testl
scas
xchg
jno
lcall
aaa
ds
add
test
adc
int3
cmpsb
mov
adc
in
adc
pop
lret
mov
jge
movl
jno
jb
mov
sahf
ret
je
pop
int3
sub
cmp
xchg
xchg
fldl
push
test
cs
popf
inc
lock
movsl
inc
negl
pop
adc
pop
add
xor
fs
push
shll
sbb
add
mov
pop
mov
ror
sahf
in
filds
xor
negl
test
mov
aam
cltd
jp
xchg
push
scas
hlt
and
test
jmp
add
mov
insb
mov
push
mov
xchg
xchg
stos
es
add
outsl
cwtl
or
rcll
stos
dec
ja
into
sub
mov
sub
aad
fidivs
mov
inc
stc
movsl
xor
imul
or
pop
in
gs
jmp
mov
aam
lods
sbb
sbb
mov
pop
mov
xchg
xchg
jl
scas
in
sub
test
in
out
inc
jo
sbb
sbb
jp
sub
or
rorl
inc
test
incb
out
mov
mov
sub
jg
push
lock
ror
mov
inc
lock
out
push
jle
mov
and
std
add
bound
das
scas
sbb
mov
mov
mov
sbbb
mov
jle
fwait
inc
into
dec
inc
mov
cmp
mov
dec
imul
xchg
scas
push
int3
mov
insb
and
xor
mov
sbb
pop
lods
enter
fnstenv
push
add
sub
jbe
mov
int3
or
lea
into
mov
xchg
incl
out
push
mov
in
lcall
lret
and
das
push
lea
dec
push
xor
jp
mov
add
adc
in
mov
fldcw
xchg
lods
daa
or
sub
jle
rcll
paddb
jge
loopne
repz
jmp
add
dec
mov
sbb
push
jp
mov
into
ja
fs
test
sbb
bound
pop
and
xchg
xorl
test
add
orl
pop
repnz
fstp
neg
loope
mov
jl
rorl
mov
push
sub
push
jmp
add
dec
xor
jne
add
adc
push
test
lret
sub
pop
js
out
adc
dec
mov
pushf
or
test
rorl
xlat
adc
add
movsl
daa
cli
push
cmc
divl
push
lret
inc
pop
cmpsb
cmp
ja
out
mov
repnz
pop
xchg
outsl
aad
jo
add
int
rcl
xlat
mov
xchg
push
int
push
pushf
call
jmp
inc
ljmp
adcb
loope
xchg
and
outsb
sub
dec
inc
jae
es
pop
fcompl
mov
xorb
mov
adcl
jno
xchg
jne
or
enter
dec
pusha
lcall
dec
mov
add
mov
sub
jae
cmpsb
enter
fwait
inc
das
mov
int3
cmp
inc
jbe
push
lret
aas
push
jl
movsl
dec
data16
ds
clc
inc
shrb
movl
mov
lds
mov
mov
test
test
mov
sarl
call
pop
in
mov
lahf
repnz
dec
push
inc
int
cmpsl
stc
pop
mov
stos
sbb
adc
mov
arpl
sub
mov
jge
jle
sahf
xor
sub
scas
bound
or
loopne
jb
mov
inc
push
fstps
test
loope
outsl
push
mov
jle
je
pop
mov
cli
sbb
xchg
sub
ret
jp
in
jg
and
cmp
xchg
xchg
jno
shll
cwtl
test
or
adcl
jno
cltd
jne
mov
lcall
sub
push
icebp
fisttpl
sbb
stc
push
adc
stc
cltd
push
xchg
pop
jo
ret
loop
ljmp
pop
sub
xchg
sbb
in
jae
icebp
or
xchg
frstor
std
out
dec
and
pop
mov
xor
scas
sbb
test
mov
cmp
sti
loop
cmpsb
pusha
shlb
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
