push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
push
xor
jl
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
std
shl
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
jmp
xor
lret
xor
push
cmp
out
cmp
neg
xchg
mov
loope
out
hlt
iret
jmp
repnz
fmul
xlat
sar
xchg
in
decb
jmp
adc
out
jecxz
sarb
stc
incb
ret
jecxz
out
test
mov
rolb
in
fdivs
cmp
shl
loopne
testb
fmul
xchg
mov
int
int3
ss
clc
cld
call
cli
stc
jmp
and
in
in
iret
out
nop
rorb
ret
fidivl
cmp
cld
ret
test
cmp
shl
cmp
xchg
int3
enter
in
sti
cli
icebp
aaa
jmp
loopne
fucom
repnz
mov
in
lea
fldl2t
in
ror
into
rcr
fdivr
in
cmp
xor
fidivrl
hlt
out
mov
loop
in
int3
repz
xor
loop
lret
jecxz
rcl
jecxz
loopne
lret
test
jmp
aaa
ss
std
out
fsubr
lret
testb
into
loopne
ss
stc
cmp
xor
loope
icebp
repz
repz
fsubr
mul
out
xchg
fimuls
xor
shr
out
rcl
cmp
repnz
mov
loope
xchg
in
leave
lret
cmc
out
jmp
cmp
repnz
out
jmp
addb
sub
shlb
fdiv
fidivrl
cmp
fst
cli
repz
fdiv
lock
orb
out
xchg
repnz
xor
cmp
repz
out
aaa
fnstsw
aas
repz
xor
loopne
jecxz
cli
out
out
mov
fsubp
aam
ljmp
cld
cmp
mul
sti
out
lock
adc
lret
xchg
sub
hlt
in
jmp
repz
enter
iret
cli
std
mov
in
jmp
rorl
ljmp
clc
cmp
iret
rorb
call
mov
cmc
into
jmp
shl
not
cmp
out
test
rolb
cli
jmp
xchg
jmp
cmp
fadds
cmp
call
jmp
into
in
rcll
cmp
xor
in
aad
out
ds
in
ret
stc
ds
fcom
leave
out
out
lea
out
div
out
cmp
icebp
cli
icebp
cld
sar
cmp
enter
jecxz
leave
loope
lret
loopne
xor
lret
cld
aam
cmp
ret
cli
hlt
call
xchg
jecxz
xchg
xchg
xchg
leave
lock
cmp
test
fcmovb
shl
jmp
in
in
mul
xchg
into
xor
leave
test
aam
cmp
out
lock
and
repnz
out
xlat
xchg
into
jmp
loope
cs
repz
aam
lret
loop
cli
ret
xchg
in
into
lret
out
lret
mov
ror
repnz
cmp
in
xor
fadd
rol
ret
addl
call
sub
hlt
shl
enter
repnz
ffree
into
loopne
sti
lret
mov
xor
ret
fsubr
iret
repz
fmul
test
faddl
xchg
mov
jecxz
rol
xor
push
pop
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
mov
add
add
repz
in
aam
iret
ds
fchs
mov
repz
call
aad
jmp
fcmovnbe
shl
rorb
sub
mov
lock
icebp
loop
ret
repnz
mov
fsub
xlat
out
lock
flds
repnz
repz
aad
fcomip
not
iret
hlt
ds
int3
out
fidivrl
ljmp
iret
xchg
nop
xchg
ljmp
repz
cmp
in
sti
shl
in
rcl
mov
lret
rcl
mov
xor
out
in
fcomp
cmp
iret
jmp
in
iret
jecxz
repnz
decb
test
xlat
repnz
xor
fsubp
rcl
ret
mov
repnz
hlt
cmc
sub
cmp
icebp
cmp
std
cmp
fdiv
test
in
out
out
test
sti
jmp
out
xor
cmp
neg
sar
loope
cmp
fcmovb
addl
loop
test
out
out
out
shr
out
int
lock
into
into
fcompp
rol
aam
cmc
mov
fucom
out
fcoml
clc
clc
call
rcr
icebp
test
in
mov
loope
xchg
sti
mov
fucomi
fxtract
jmp
idivb
loopne
add
in
xchg
mov
shl
xchg
aas
xlat
call
in
cmp
faddl
stc
idiv
fisttpll
loope
enter
ljmp
int
sti
sbb
rol
sar
clc
xchg
fsubrp
ror
mov
iret
clc
iret
int
idivl
xor
cmc
xor
call
jmp
out
icebp
xor
idivl
loope
ljmp
test
mov
ljmp
xor
in
in
int
clc
xlat
sbb
incb
out
ficoms
loop
out
ror
cli
ljmp
shr
test
rol
aad
lret
in
fucompp
int
int
sub
loope
sti
hlt
leave
lret
aad
in
cmp
hlt
out
div
repnz
out
fucomip
mov
out
jecxz
shl
icebp
cmc
hlt
cmp
aas
int3
testb
loope
std
fcmovbe
lret
mov
in
iret
shr
cld
cmp
ss
stc
cld
icebp
lds
jmp
fmul
mov
cld
jmp
in
cmp
ror
aam
ds
fdivrs
cld
lds
cld
sti
nop
cld
loop
shlb
stc
fxch
enter
sar
in
rcr
in
loop
out
call
out
out
fucomip
ds
enter
lock
or
loopne
int3
repnz
test
loop
ds
fstp
jmp
ds
clc
cli
ljmp
icebp
repz
fdiv
lret
dec
rorb
aam
shl
fcomip
in
lret
std
into
ret
idiv
xchg
clc
incb
xchg
aad
xor
call
stc
out
jecxz
std
sti
sbb
in
fdiv
aad
out
loop
enter
mov
xor
xor
aam
sti
shr
rcl
int
loopne
cmp
loope
jecxz
fimuls
jmp
xchg
aam
shl
shl
aad
enter
rcr
int3
repz
fmull
jecxz
cli
sbb
aad
into
aad
test
cmp
repz
rolb
mov
leave
in
xchg
loope
fdiv
icebp
fcom
jmp
fsubr
lock
clc
mov
or
int
repz
repnz
aad
std
repz
fst
ret
fiaddl
xchg
icebp
mov
lock
xor
cld
shl
jmp
fidivrl
cmc
rcl
xor
sar
mov
add
enter
loopne
shl
cs
hlt
out
enter
add
rol
cmp
lret
call
lret
ret
jmp
cmp
clc
sar
loope
repnz
mul
mov
loop
mov
int
std
int
loopne
out
shr
in
cmp
int
xor
shl
rol
test
std
shl
fninit
xchg
out
lds
xor
mov
sub
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
push
jno
orl
add
fdivrl
aad
testl
nop
in
xchg
sub
in
loop
std
in
aaa
imul
repz
int
adc
in
loopne
mov
loope
loope
int3
xchg
aaa
xor
into
enter
cli
loope
sti
shll
in
in
in
cmp
mov
jmp
shll
leave
xor
int3
fnsave
shl
out
mul
in
cmp
jmp
out
ror
ror
rol
neg
cmp
fucomip
icebp
in
aam
repz
mov
mov
lret
nop
fdivp
out
ror
sub
push
cld
fdiv
cmp
call
ljmp
lock
xor
lret
cmc
stc
icebp
enter
test
loopne
std
sbb
enter
clc
nop
repz
loopne
rcr
xor
aad
xlat
ds
int3
out
icebp
mov
call
int
hlt
leave
cli
cli
in
cmp
loopne
cmp
lock
rcr
aam
jmp
ror
stc
leave
ret
clc
sti
xor
test
repnz
rcr
jecxz
int
in
ljmp
ss
lret
leave
lock
icebp
div
cld
cli
testl
rcll
fdivrs
sub
into
iret
in
rcr
in
ds
jmp
lret
loope
addb
call
cmp
xor
sarl
ljmp
add
nop
xchg
xchg
jmp
out
in
out
leave
out
enter
and
ret
xchg
cli
iret
fsubrl
leave
repz
aam
out
xor
into
cmp
aas
ret
xlat
cli
mov
leave
jmp
int3
cmc
leave
in
repz
out
aad
in
in
ds
mov
decb
xor
int
call
aam
loop
test
mov
faddl
into
int
mov
in
cmc
out
into
int
lret
call
xchg
in
loop
fiaddl
mov
loop
aad
aam
cmc
fcmovb
leave
ss
repz
cmp
rolb
in
leave
xor
mov
shl
in
stc
xlat
xor
cld
push
out
dec
icebp
hlt
aam
jecxz
fcmovne
leave
jecxz
xchg
into
xchg
icebp
repz
rcr
hlt
fcomp
int3
aas
stc
fdivrs
fcmovb
repz
in
in
mov
ljmp
jmp
out
leave
cmp
lret
cmp
repnz
xchg
cli
ljmp
xor
cli
sarl
cmp
roll
or
cmc
fcmovnu
loope
mov
xor
xor
enter
xlat
clc
fsubp
aaa
xlat
loop
jmp
out
loop
ror
fdivp
int
into
lock
int
neg
out
ffree
fmull
lret
xchg
hlt
fdivp
iret
out
sub
fdivrl
cmc
icebp
cli
xlat
in
cmp
rcr
xchg
fcos
stc
mov
in
xchg
ss
jmp
iret
into
add
stc
addl
jmp
enter
shr
repnz
cmp
xlat
jecxz
loope
xchg
lock
jmp
xor
in
lret
repnz
cmc
cmp
int3
cmp
xlat
in
clc
fisttpl
xchg
in
repz
repnz
in
ljmp
stc
rcl
clc
enter
out
int
icebp
into
test
in
ljmp
leave
ljmp
test
ret
icebp
icebp
nop
fcmovbe
int
xor
out
in
clc
in
sar
loop
aas
loopne
jecxz
mov
xchg
adcl
fcmovnu
enter
cmpl
ffree
sub
std
mov
in
mov
ret
loop
cmp
fst
hlt
cmp
incl
in
test
ret
fnstsw
aam
shl
sub
imul
int
cmpl
fxch
into
lret
jmp
loopne
xor
int3
jmp
enter
int3
loop
jecxz
fucom
repnz
lret
in
out
into
fimull
stc
les
std
jmp
fcmovnu
rol
xlat
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
adc
mov
jl
addb
jl
fdivr
loope
orb
out
lret
aam
ljmp
in
rcl
xchg
icebp
ffreep
fisttpl
fmul
out
fimuls
lret
divb
repnz
rcr
cld
cld
jecxz
cmp
rol
ret
out
out
cli
xchg
mov
iret
into
out
icebp
xlat
std
leave
cld
jmp
fcmovne
cmp
sti
iret
rcr
lret
test
ljmp
sub
out
cmc
xlat
fcmove
rol
sarb
jecxz,pt
in
repnz
sti
jmp
icebp
jmp
loope
lock
iret
rol
sti
ror
cmpb
int3
std
shl
loope
call
fmuls
hlt
int3
shlb
icebp
cmp
out
flds
repz
int3
loope
mov
in
int3
xchg
ret
enter
ror
cmp
call
in
mov
xchg
mov
shrb
xor
xor
shr
lock
fcomi
mul
cld
jmp
xchg
test
shl
sar
in
xor
stc
repz
dec
flds
fadd
neg
int
fstp
xchg
ror
int
iret
shl
fdivr
into
aad
cmc
aad
mov
xlat
call
cld
fildl
aaa
out
jecxz
out
out
not
aam
lret
iret
lret
stc
incb
fucomp
rol
lock
shl
cmc
iret
aaa
out
fcmove
lock
stc
cmp
repz
add
jmp
mov
call
cli
xor
repnz
stc
adc
test
std
mov
aaa
xor
loop
out
int
jmp
sti
repz
fprem1
lock
out
idiv
lret
test
in
in
rol
divb
out
hlt
hlt
repz
loope
cmpl
loope
ret
test
xchg
sub
cmc
lret
out
cmp
xor
test
ret
sar
xchg
decb
lret
mov
out
lret
out
cmp
stc
sarl
aad
xchg
loopne
out
jmp
xchg
int3
in
in
cmc
xlat
cld
xlat
xor
jmp
cmp
mov
mov
leave
out
cli
lock
out
xor
cmp
xor
out
into
std
sarb
test
jmp
leave
in
mov
leave
loop
loop
sub
loop
out
fprem
call
aam
aad
imul
in
mov
fmull
in
in
sub
lret
jmp
lret
call
in
in
ljmp
in
xchg
aam
ret
lret
iret
fcmovnbe
out
xor
cld
shl
cld
in
rcl
test
ljmp
jmp
xor
repz
enter
repnz
cmp
ret
fucomi
mov
mov
ret
fldlg2
xor
aad
out
in
out
aaa
cmp
test
mov
in
in
test
loope
loope
loop
jmp
sarl
test
lret
xlat
fsubrp
loopne
nop
xchg
xor
aad
fcmovnbe
rcr
fmul
ljmp
loopne
mov
hlt
std
out
cli
decb
cmc
cmp
xor
fidivs
std
rcr
sti
lock
mov
xchg
vpmacssdql
jmp
lret
xor
loope
fsincos
and
filds
test
rcl
mov
sub
lret
fcmovbe
idivb
cmp
repnz
cmp
cmc
test
and
std
in
cli
call
lret
enter
aas
in
mul
fdivr
out
test
cmp
and
ror
lret
jmp
cmp
stc
jmp
loope
xchg
mov
cld
std
aas
loop
enter
icebp
call
cmp
iret
loope
in
rcl
faddl
fcos
mov
xlat
jmp
loope
int
or
stc
leave
std
in
lret
orb
xchg
xor
enter
lock
ss
cmp
in
shl
ljmp
xchg
call
aad
in
xor
jmp
cmp
int3
int
xlat
in
sarl
fsub
int
ljmp
int
into
ljmp
fcmovne
icebp
roll
jecxz
les
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
daa
ss
jl
addb
jl
cld
fmul
loop
lret
repnz
repnz
aas
jecxz
xchg
xchg
cmp
int3
adcl
lret
out
aaa
in
iret
iret
cld
cld
ffree
add
cmp
sti
mov
call
enter
aaa
xlat
fdivrp
int
clc
lock
jmp
in
lock
into
not
lret
loopne
aaa
into
cld
cmp
hlt
cli
lret
rolb
decl
fcoml
int
xor
call
loope
shl
xlat
stc
xchg
cli
hlt
leave
out
sti
ret
xchg
call
xor
cmp
icebp
int3
in
xor
clc
aad
hlt
lret
jmp
enter
xor
imul
aam
cmc
stc
stc
idivl
aas
stc
clc
addl
fucom
repz
mov
shr
xor
divl
icebp
xor
shl
jmp
loope
and
cmc
aad
in
iret
xor
fidivl
call
cmp
aad
icebp
orl
mov
int
loopne
test
cli
cmp
jmp
test
fildl
std
out
decl
xor
rcl
clc
icebp
cmp
ret
idiv
loopne
testb
xchg
xchg
in
jmp
aaa
divl
cmp
lret
fcomi
lock
test
sub
out
loopne
divl
lock
in
cmp
frstpm(287
jecxz
aas
test
or
in
test
cmc
out
mul
lret
call
fadd
rcl
aam
cmp
sbb
iret
fists
loope
lret
in
in
fdivr
lock
loop
ds
call
into
jmp
test
leave
jecxz
in
icebp
fcom
int3
int
xlat
std
flds
filds
loopne
xchg
hlt
cs
jmp
out
faddp
xor
fmulp
mov
out
out
std
sti
lret
cli
mov
mov
in
xor
cli
in
in
cmp
std
idiv
neg
cli
shl
repz
xchg
enter
fucomp
xchg
test
shr
fcmovne
repnz
cmpl
fsubr
sar
fincstp
cmc
flds
enter
fdiv
in
xor
icebp
fmul
into
clc
rcr
inc
fdiv
leave
out
in
in
in
leave
jecxz
in
jecxz
call
cmp
out
cld
aad
repnz
into
cmp
lock
in
mov
jmp
ljmp
icebp
cmc
ljmp
aad
clc
fadd
std
cmp
orl
sarb
jmp
cmp
loop
clc
incb
sti
sub
loopne
sub
lock
into
out
iret
into
cmp
in
test
aad
jmp
ret
cmp
xrelease
cli
out
cmp
ds
test
in
mov
int3
std
leave
sub
out
leave
int3
in
ror
fnstcw
ffreep
std
out
fucomip
enter
enter
xchg
jmp
ret
shl
fistpll
loopne
ss
fsubr
cmc
xchg
in
icebp
adc
out
in
fxch
lret
in
rcr
shl
aas
flds
jecxz
sti
ds
icebp
mov
nop
fmull
aam
aam
jmp
sarb
rol
mov
mov
loop
orb
out
and
cmc
leave
lds
aam
out
fmulp
xor
sar
vpmulhuw
int3
mov
in
roll
in
into
stc
iret
and
repz
addl
out
div
leave
in
repnz
jmp
not
cmc
cld
fildl
mov
testl
fsubrp
ljmp
shr
neg
testl
lret
lret
xchg
rcr
enter
call
iret
repz
in
aam
cli
jecxz
orb
in
out
jmp
enter
fcmovu
ss
ffree
cmp
aam
jmp
fneni(8087
xchg
leave
ret
fucomp
cmp
cmp
loopne
cld
xlat
into
les
idiv
mov
mov
int
mov
mov
mov
jmp
aam
into
lret
rcr
fstp
les
sbb
addb
jl
cmc
in
loop
cmp
ss
xlat
cld
aas
jecxz
hlt
rol
aam
addl
lret
ljmp
int
xor
hlt
shl
loop
ret
loope
fstl
imul
in
iret
lock
hlt
aas
loopne
cli
lds
cmp
fisttps
xor
das
fcomi
cmp
icebp
int
xor
cmp
fsub
xlat
in
std
rcr
out
or
cli
mov
jecxz
jecxz
hlt
aam
fstp
cmp
aam
clc
cmc
jecxz
and
fsubrp
orb
lret
ret
repnz
jecxz
hlt
not
loope
sbb
iret
mov
ljmp
ret
iret
xor
out
cmp
in
aas
ret
shr
jmp
test
xchg
lret
cld
xchg
rol
leave
xor
ss
idiv
cmp
into
fldl
cmp
leave
aaa
loopne
repnz
in
addl
mov
int
mov
out
repz
in
call
rcr
in
fadd
add
mov
cld
out
in
int3
mov
out
int
out
xor
stc
out
shl
iret
std
loope
fsincos
fucomi
jecxz
call
add
xor
cmp
imul
cmc
hlt
loopne
stc
repz
loop
addb
lea
jmp
out
sub
call
shl
cmp
mov
fcmove
jmp
jmp
clc
int
in
sub
out
shr
clc
xor
sar
rcl
icebp
idivl
cmp
lds
fcmovnu
into
icebp
int
in
in
lret
fprem
jmp
cs
ret
clc
lock
sti
jmp
in
fcomi
jmp
in
leave
cmp
out
stc
std
shll
cmp
repnz
hlt
enter
sti
incb
repz
cmp
cmp
aad
cli
aas
repnz
fcmovu
loopne
loop
loop
jmp
lret
clc
xor
ror
lock
cmp
rcr
ret
fcmovu
std
addb
test
ror
aad
in
hlt
xor
aad
lret
aad
adc
cld
adc
sti
mul
cmp
or
repnz
stc
xor
fcom
clc
in
loope
xlat
shl
repz
idivl
addl
test
xor
vmovq
in
filds
cmp
rcr
aas
loop
sti
in
in
std
fdiv
std
lret
loope
loop
fdivr
sar
loopne
clc
in
cmp
ret
cmpb
loop
mul
int3
fdivp
repnz
xor
leave
bnd
cmp
sar
in
cmp
rolb
std
lock
loope
loope
ftst
hlt
int3
out
cld
ss
loop
cmp
add
loope
in
cmc
in
int3
ret
hlt
aaa
test
fnsave
add
xabort
out
cld
xchg
xchg
aam
rcl
ljmp
cmp
fcom
filds
jmp
out
fadd
jmp
jmp
xor
loopne
addb
orb
nop
int
ljmp
fidivrs
cmp
std
and
enter
mov
int3
out
xchg
ljmp
ror
leave
icebp
repnz
xlat
fsub
sar
loope
cli
xchg
in
mov
into
leave
shr
loopne
jmp
iret
sti
fdiv
lret
xlat
fdivp
test
jecxz
vphsubdq
int3
out
xor
repnz
iret
imul
ffreep
or
fld
int
mov
icebp
xchg
out
das
into
aaa
shl
xor
shlb
fmul
int3
fcomip
std
rol
std
testb
mov
mov
iret
bnd
cli
dec
jecxz
into
ljmp
rol
cs
int
rcr
lret
cmp
ffreep
lret
testb
fcomip
cs
xor
not
call
int
div
not
loope
cmc
loopne
fcmovu
xchg
int3
lret
ret
test
icebp
mul
into
fmul
std
icebp
ffree
xlat
roll
fmuls
nop
loope
fldcw
xor
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
mov
jl
addb
jl
shl
cmp
test
shl
in
test
int
lds
out
in
divb
aad
cmpb
cmp
loope
test
sbb
mov
cli
ljmp
sar
cmp
aam
sar
loopne
mov
mul
jecxz
mov
leave
jmp
xor
ret
xor
int3
lock
sti
into
std
fnsetpm(287
test
jmp
xchg
ljmp
int3
neg
cmp
in
fistpll
repnz
out
xlat
fucomip
mov
in
jmp
clc
cmp
in
int3
stc
cmp
cld
hlt
call
std
lock
test
in
xchg
popl
xor
repz
jmp
xor
cmp
roll
jecxz
and
xchg
int
stc
repnz
fsubr
fcmove
repnz
cld
repz
clc
rol
ds
in
testb
rorl
xor
shl
repz
into
rcl
cmp
shl
fninit
jecxz
fadds
xchg
xchg
lret
aad
xor
lret
int
stc
repnz
rolb
into
xchg
shl
mov
fdivp
rol
sti
fdivrs
inc
rcl
stc
rcl
fsub
rolb
int
mov
repz
shlb
xlat
call
call
ret
xor
fsubp
or
fcmovu
mov
lret
jmp
repz
fcomip
or
cmp
div
cli
clc
int
shr
into
mov
out
ljmp
sti
fdivr
lret
sbb
shr
ljmp
test
test
xchg
jecxz
xor
ljmp
iret
cmp
cmp
cmp
aas
ljmp
in
lea
shl
div
lock
iret
cmpb
fdivrp
testl
lock
incb
aad
int3
shr
rcl
loope
loopne
sti
cld
loopne
call
rcll
clc
xor
sarl
div
int3
in
mul
fcmovbe
sub
std
test
in
aaa
ftst
in
clc
xor
sar
ss
stc
cmc
in
lea
cmc
mov
xlat
imul
sub
cmp
sub
out
xchg
out
mov
lea
lock
hlt
clc
fcmovnbe
int
clc
fninit
repnz
aad
test
enter
test
shl
fadd
xor
cli
cmp
xlat
aas
in
cmp
loop
rcl
in
in
ffree
neg
faddl
lret
repz
cli
aad
ljmp
shl
fsubrp
xor
lret
out
fprem
xlat
std
cmp
lret
rol
out
loopne
mov
mov
sub
fmul
xchg
mov
leave
ret
aad
in
out
test
out
cmc
faddl
call
xchg
jmp
in
sub
enter
out
lret
clc
cmp
int3
clc
ret
shl
idiv
ret
loopne
mov
loop
xor
sub
icebp
iret
in
dec
imul
out
cmp
clc
xlat
loop
sbb
out
into
cld
mov
icebp
hlt
xor
aam
hlt
iret
imul
adc
cmp
iret
adc
lret
rclb
ss
cmp
cs
cmp
hlt
fprem
std
fdivrp
add
xchg
and
icebp
jmp
aad
cmp
lret
cmp
int
aad
stc
in
sub
incl
call
hlt
aam
rcl
cld
xor
int
in
std
ret
not
stc
loopne
in
sbb
cli
in
in
shll
cmp
cld
cld
adc
addl
cld
out
cld
ds
aad
loop
ror
std
cmp
div
aam
lret
lret
xlat
cld
std
loopne
xchg
test
aas
call
fcmovne
aad
stc
lret
sub
std
stc
ret
stc
out
xchg
mov
das
xor
leave
out
fsubr
adc
mul
shl
ret
enter
leave
in
xchg
lock
divl
shr
out
fcmovbe
cld
cmp
out
repnz
cli
aam
fisttpll
into
shl
sub
xor
std
cmp
dec
cld
jmp
sarb
enter
fidivl
mov
jle
cmpsb
sbb
jl
jmp
std
sti
ret
mov
fcmovbe
xlat
in
clc
test
lds
out
iret
out
fdivr
ror
in
test
xlat
mov
aam
ret
stc
lret
cmp
hlt
repnz
test
fisttpl
icebp
shl
out
hlt
in
out
lock
ljmp
cmp
fptan
xchg
fisubrs
jmp
lock
int3
loope
std
repnz
rcl
fsubrp
int3
mov
into
rol
sarb
xor
out
xor
cmp
cld
mov
out
fmul
shr
shr
xor
xor
aaa
stc
aad
fsubrp
aad
fndisi(8087
sti
ffreep
fcom
mov
mov
mov
ret
ret
out
ror
ss
xor
inc
repz
test
loope
mov
rolb
test
xlat
rcl
dec
int3
aam
idiv
out
addl
sar
iret
sub
cmp
ss
xor
cmp
flds
shr
jecxz
enter
loop
in
lds
call
cmp
sarb
aam
test
xlat
aam
mov
xchg
out
xor
sti
out
hlt
xor
ror
cmp
xchg
out
in
test
imul
shlb
ljmp
iret
test
call
fld
in
fmulp
cld
call
cs
into
cld
cmp
clc
lret
ds
leave
loopne
xchg
cmc
xchg
ljmp
rcr
stc
fucomp
fst
aas
rcr
lock
mul
clc
loop
jecxz
out
jecxz
repz
shrl
loop
cmp
cmc
xor
fdivrp
out
loope
jecxz
ds
aad
idiv
in
lock
out
xor
int
icebp
in
cli
aas
hlt
clc
vpaddw
clc
mov
xchg
jmp
xor
not
lret
repnz
div
in
fadd
aas
jmp
out
lret
mov
loop
mov
jmp
xor
iret
icebp
ss
out
repz
rcr
int
hlt
dec
xor
fdivr
out
cli
icebp
rorb
fcmovbe
cld
into
cld
in
loopne
in
fcomip
test
loope
aad
jmp
mov
shr
jmp
in
xor
repz
cli
cli
aad
mov
or
sti
mov
orl
out
cmc
fdiv
fdivrp
ror
aam
ret
jmp
std
ljmp
test
repnz
aad
loope
fcmovu
sti
ds
out
clc
lock
mov
mov
int3
rcl
out
aam
in
in
fcmovnbe
repnz
enter
aam
std
cmc
roll
jecxz
rol
repnz
aam
xor
cmp
cmpb
aad
addb
fcmovu
jmp
lret
shl
ss
fmul
aaa
div
sti
cmp
cld
fucom
in
std
sti
xlat
fildl
into
call
aaa
cli
xor
enter
loopne
cli
stc
rolb
leave
std
test
test
cs
in
sti
cmp
xlat
cmp
ret
hlt
jmp
stc
vpaddsw
std
xchg
cs
std
enter
sti
int
ds
fcmovbe
rorb
fmul
jmp
out
shlb
rol
leave
enter
fcmove
call
cmc
shl
aad
cmp
test
fdiv
enter
xor
hlt
fcmovnu
std
loopne
iret
cmpl
sti
cmp
xchg
in
sub
icebp
out
ret
out
shrl
lret
in
cli
rcr
xlat
xchg
in
in
fimull
stc
out
aad
cmp
into
neg
clc
aad
test
iret
fsincos
rcll
xor
rol
not
xor
stc
cmc
shl
loope
int
in
clc
jmp
repz
sub
fcmove
cmpl
in
hlt
ljmp
jecxz
lret
xor
cld
call
std
stc
aad
call
in
iret
lret
fst
jmp
shl
idivl
out
aad
cmp
fdivr
loop
movzwl
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
ficoml
jl
add
out
lock
in
in
loop
leave
shrl
jecxz
rcl
xor
jmp
rcr
decl
ret
call
repnz
ljmp
out
cli
aad
out
repnz
out
filds
mov
orl
enter
cmp
xor
ffree
rol
mov
enter
mov
out
in
loop
iret
ss
int3
test
out
hlt
cmp
int3
aas
lock
stc
xor
fsubr
out
std
clc
loopne
xchg
imul
rcl
xor
hlt
int
loope
cmp
into
in
lock
lock
call
jecxz
hlt
in
xlat
neg
jmp
shr
rcl
cmp
mov
ret
out
mov
jmp
int
repnz
test
idivl
cmp
cli
aad
div
stc
stc
shl
addb
mov
ljmp
int3
lock
fadds
test
cli
call
iret
loope
out
lock
fdivr
fidivrl
test
lds
decl
loope
out
jmp
in
fdivrp
clc
rcr
repnz
xchg
fcmovne
out
enter
out
jmp
icebp
out
clc
lret
cmp
cli
sti
shl
std
repnz
test
sub
out
mov
out
ljmp
leave
into
hlt
fucomp
mul
lds
cmc
cli
into
sub
xor
jecxz
cmp
cmp
loope
icebp
mul
not
xlat
call
iret
in
shl
decl
enter
lret
ror
repnz
loopne
repnz
test
loop
mov
lret
loope
ljmp
cli
rol
out
fnstcw
cmp
cld
in
test
xchg
out
call
iret
sti
repnz
int3
cmp
cld
aam
aam
xchg
hlt
test
xchg
sub
stc
ret
xor
cmp
inc
test
fprem1
test
loop,pt
cld
mov
jecxz
lock
xor
loop,pn
in
stc
aad
out
lret
into
xchg
call
cli
out
in
mov
lret
mov
ljmp
cmp
sti
cmp
stc
adc
in
cmc
sbb
ds
testb
sub
repz
clc
lret
xlat
sbb
out
test
jmp
xlat
std
in
incl
jmp
shr
sarb
repnz
cmp
into
out
std
jecxz
rcl
fsubp
flds
mov
cmp
dec
repnz
fdivrp
out
leave
cmc
fucomp
fyl2xp1
sub
shl
xchg
ljmp
lock
aas
adc
sub
fiaddl
cmp
aad
sub
xor
aaa
in
cli
out
fnstcw
aas
ret
hlt
in
sti
cli
shl
jmp
xchg
fiaddl
iret
xor
cmp
cld
cli
fdiv
mov
or
orl
jecxz,pn
in
shr
in
lock
cmp
out
cld
addb
cli
sub
ror
shl
shl
cmp
fcmovnbe
cmp
rcr
ds
loop
mov
jecxz
and
repz
hlt
call
int
lret
cli
fdivp
lock
mov
ljmp
rol
not
leave
int3
aam
iret
loop
sbb
jmp
or
ror
lock
ss
aam
cmp
fucomi
aam
jmp
ds
jmp
loopne
test
fucom
sub
fdivrs
sti
enter
out
out
sti
xlat
roll
fucomip
mov
std
xchg
lock
in
test
xor
int3
fcomi
iret
xor
jecxz
sar
loop
mul
incl
fisttps
das
out
shr
rcl
lret
aas
repz
cld
fucom
rol
rol
shl
fcmovu
ljmp
xchg
ljmp
fxch
cmp
xor
ret
ffree
cmp
std
clc
mov
mov
ljmp
repz
les
xlat
ss
ret
cmp
dec
jmp
sbb
jmp
out
fxch
sti
ss
cmp
fndisi(8087
ret
xlat
ret
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
ljmp
jl
add
testl
xor
stc
in
lret
mul
aas
cmc
aad
fdivr
icebp
mov
sti
clc
or
rorl
fmulp
sub
clc
fcmovu
idiv
and
test
xchg
ret
in
mov
jmp
icebp
iret
xchg
lock
lret
in
repz
cmp
into
stc
ret
test
fildl
icebp
loopne
sti
fnstsw
fcomi
rcr
lret
shl
loop
in
mov
int3
iret
aam
ret
cmp
lret
fucom
sarl
int
test
fiaddl
loope
nop
xchg
in
xchg
iret
out
shll
out
lret
stc
icebp
cmp
xor
ss
jmp
mov
rorl
hlt
loopne
call
xor
fstp
fnstcw
enter
int
roll
xor
xor
int
ss
xlat
and
xlat
hlt
mov
call
repz
ss
lret
cmp
aaa
sar
loope
mov
loope
enter
cld
jmp
enter
roll
fcomp
ffree
out
testb
fcmovne
popl
jecxz
clc
rcl
std
fsubr
ljmp
call
lock
in
xorb
lret
leave
fsub
cmp
cli
out
aam
cmp
fidivrs
fisttpll
mov
icebp
leave
repnz
cli
rcr
int3
out
ror
not
int3
out
test
xlat
aam
mov
call
test
int3
jmp
jmp
fcmovnbe
fcomi
sarb
fcmovnb
jmp
jmp
lret
mov
loop
int
fcmovbe
hlt
ret
loopne
sarb
mov
fucomip
in
mov
rol
ljmp
shl
out
fsubp
repnz
cmp
xchg
sub
jmp
test
sbb
loopne
aas
test
stc
ret
jecxz
in
rcll
xor
cmp
sub
iret
repz
sub
loop
call
aaa
xor
hlt
ljmp
loope
ljmp
xor
loopne
out
mov
lock
cmc
lock
shr
clc
loope
repz
test
out
bnd
ljmp
jmp
fnop
in
out
lock
rcr
neg
hlt
xlat
hlt
loope
cld
ds
fmull
loop
divb
int3
cmp
leave
shr
lret
enter
in
call
imul
ljmp
cmp
repz
xlat
xlat
orb
ljmp
cmp
jmp
ret
repz
xor
out
test
icebp
loop
call
aam
repnz
fdivl
aam
lds
mov
mov
aad
xor
out
leave
fsubr
xor
ret
test
lret
aam
xlat
lock
int3
out
std
test
sti
mov
xor
testl
sub
imul
lret
xlat
out
int3
shl
xor
ret
fptan
aam
mov
mov
nop
popl
icebp
aad
xor
hlt
div
ror
fcomi
fpatan
addb
mov
ljmp
stc
cmp
std
leave
cmc
aas
cmp
loop
rcl
fcmovne
mov
ljmp
nop
subb
shll
sti
cmp
out
ljmp
fcmove
jmp
std
int3
fisttpll
ret
hlt
hlt
fnstenv
fdivrl
rolb
test
test
xchg
shl
loop
xchg
lret
leave
aaa
into
sub
call
ret
repnz
out
clc
call
call
call
cld
aam
cmp
cmp
loope
aam
int
out
incb
hlt
int3
ss
call
repz
ss
jmp
jmp
repz
decb
lret
aaa
repz
lock
fstp
cld
rcr
fsubrp
incl
mov
jmp
into
les
rcr
fxch
enter
cmpsl
xor
jl
addb
jl
mov
repnz
sub
cmp
lock
loopne
cld
loope
xor
out
out
fxch
out
lret
xchg
xchg
xlat
lock
icebp
into
cmp
shl
ror
loope
sbb
loop
in
mov
int
in
jmp
loopne
repnz
shl
enter
jecxz
repnz
push
cld
test
or
sbb
std
nop
jmp
leave
ror
icebp
xor
ds
repnz
into
shl
xchg
jmp
int3
xchg
loope
rcll
xor
aad
in
in
jecxz
test
mov
stc
iret
int
xchg
repz
loopne
lret
fcmovnbe
sarl
ljmp
clc
fmull
mov
int
aaa
lret
cli
imul
std
testb
hlt
fstp
mov
mov
adcl
ljmp
fdiv
rcr
cmp
imul
out
lret
std
fiaddl
sarl
cmc
cmp
not
sti
xor
leave
fldl
jmp
aad
shl
lret
out
fabs
repnz
lret
inc
les
addl
ljmp
fcomi
leave
lock
int3
aaa
hlt
ds
dec
ret
aam
loope
std
lds
shl
into
out
in
sti
ret
rol
aad
mov
out
lock
jecxz
ret
ret
stc
out
push
clc
loopne
rcl
roll
testl
cmc
in
xor
ror
jmp
out
fdivrp
jecxz
stc
cmp
xor
mov
in
enter
fidivrl
xlat
fdivs
fldz
aam
rol
not
ret
xor
jecxz
std
sub
jmp
out
icebp
fmulp
cmc
aam
in
cmp
std
ss
out
rol
mov
test
enter
in
sbb
xor
xor
sar
sarb
aaa
fdivrp
aam
aad
cld
testb
into
nop
out
out
in
cs
aad
int3
ror
aaa
shl
repz
xchg
sar
testl
jmp
xor
xlat
div
jmp
stc
aam
aad
in
std
sar
stc
cli
and
leave
mov
xlat
not
xor
out
cmp
fdivr
rcr
cmp
clc
repz
loop
test
xchg
subb
xor
repnz
rcr
jmp
out
vpmaddwd
call
out
fucomp
lock
xlat
shl
in
aaa
div
in
fcomp
rol
xor
fcmovnb
int3
fldl
repz
ss
leave
into
ss
fcmove
fiaddl
loope
mov
testb
in
xchg
mov
out
into
loop
repz
out
hlt
shl
in
ret
fcmovnu
test
loope
clc
out
lret
fucomp
test
idivb
cmp
hlt
ss
call
iret
roll
test
leave
cld
repnz
cmp
sar
leave
int3
fdivr
cmp
xchg
rolb
int3
in
fucomp
xchg
mov
xor
xor
not
std
cld
fcmovbe
sub
test
repz
jmp
lock
int3
in
sub
loop
fdecstp
fdivrp
cmp
cli
flds
fcomip
orb
out
not
loope
fdiv
jmp
cmp
in
xlat
rcl
les
mov
jecxz
mov
fxch
iret
std
cs
stc
aas
out
loop
cli
stc
mov
ljmp
loopne
out
out
cmc
xor
call
jmp
fcmovne
in
hlt
fdivr
loopne
jmp
loopne
mov
xchg
out
test
xor
cmp
cmp
int3
loopne
loope
loop
incl
out
in
cld
mov
in
xchg
xorb
hlt
xor
xor
lret
sti
stc
loope
std
cmpb
in
ds
fmul
fsubp
in
std
xchg
ljmp
in
xor
rcr
loop
cmp
rolb
fisttpll
sub
xor
int
sti
lock
cmp
out
aam
cld
addl
mov
iret
loope
ret
xor
fcmovne
repnz
repnz
sbb
ret
test
rcr
repnz
sti
mov
cld
out
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
lret
mov
add
aad
cmp
ljmp
div
cmp
aas
not
cmc
cli
enter
ljmp
aad
in
xor
std
ljmp
shl
aam
test
enter
cli
iret
test
in
sub
sub
fstp
int3
fcomp
fsubrp
cmp
loopne
cmp
clc
rol
test
loopne
rol
sti
test
mov
lock
lock
int
cmp
cmp
and
idivl
lret
xchg
int
jmp
iret
loope
xor
int
and
aad
out
mul
sar
test
loop
loopne
loop
loop
in
out
shl
xor
aaa
cld
loopne
cmp
cmp
cmp
shl
lret
test
loopne
out
loopne
mov
in
hlt
repnz
aaa
iret
out
fsub
rcr
std
out
and
neg
fsubp
in
fldl
out
in
ljmp
cmp
in
std
mov
test
lret
repz
jmp
jecxz
repz
mul
sti
fimull
out
xchg
sub
rcr
xor
iret
out
int
lret
xor
filds
call
faddl
not
xor
neg
jmp
adc
rolb
mov
cld
call
out
not
enter
fiaddl
out
ret
in
loop
call
mov
aas
int
into
fnstenv
xor
cld
cmpl
sbb
faddp
testl
fsub
ljmp
rcl
hlt
sar
loop
iret
cmc
hlt
adc
mov
lret
xchg
mov
jmp
repnz
icebp
sub
xor
clc
cmp
lock
flds
xchg
call
ljmp
xbegin
cmp
test
ljmp
out
out
divb
iret
fst
ljmp
addb
mov
in
clc
mov
xchg
aad
in
loop
call
lock
sbb
mul
hlt
cli
test
enter
in
fstp
out
fsubr
cmp
repnz
call
loopne
jmp
in
aaa
fcmove
cmc
ds
in
ret
add
in
leave
out
fistl
ds
ljmp
pushl
xlat
loope
cmp
clc
cmc
leave
cld
sbb
xchg
ror
stc
icebp
jmp
cli
out
out
sar
test
repz
test
incb
decb
lock
xor
hlt
lret
aam
ret
aad
fisttpll
in
incl
aaa
fstp
fstp
aas
stc
aas
ds
filds
in
out
ljmp
xchg
loopne
aaa
lret
cmp
repz
roll
aam
in
std
out
xchg
enter
lret
into
out
jmp
ror
sar
rol
fcmove
fmull
mov
xorl
xor
clc
enter
lock
not
fcomip
xchg
cld
fldlg2
ret
fmull
rol
call
repnz
iret
cmp
out
std
test
loope
iret
cld
int
lea
xor
loop
cld
fstpt
rol
and
mov
loop
and
call
fdiv
xor
cli
icebp
fstp
fidivrs
in
testl
jmp
loope
out
lret
ss
sarl
ds
vpmulhw
mul
in
out
in
out
jecxz
mov
sub
in
call
fmulp
ds
rcr
icebp
test
leave
mov
mov
in
out
mov
fnstenv
in
clc
aam
neg
roll
cmp
fstp
cmp
int3
loop
faddl
jmp
aam
das
xor
out
out
iret
aad
stc
aam
clc
loop
fcmovne
and
in
in
ret
in
ret
ljmp
std
test
fcmove
loopne
icebp
out
sub
jecxz
clc
jmp
idivl
jecxz
sbb
cmp
orb
iret
fsubrp
cld
fisubrs
out
loopne
xlat
not
mov
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
jecxz
push
mov
xor
add
jmp
flds
lds
out
loop
xlat
loopne
cmp
fcmovnbe
lret
xor
sti
iret
addb
int3
mov
or
mov
xchg
int
lock
leave
icebp
cmc
dec
in
cmp
ret
jmp
enter
iret
fmul
in
nop
nop
loope
fsubr
into
fsub
shl
fdivp
xor
ror
cmp
add
vpsubsw
iret
in
call
fcmovu
fst
loopne
fsub
in
sbb
xlat
fsubp
out
loopne
repz
shr
enter
xor
aaa
xor
sar
ret
rcl
fdivr
orb
int3
adc
jmp
fcmove
icebp
imul
aam
loope
cmp
div
decl
and
lret
fidivs
fnstenv
cmp
jmp
fucom
aas
repnz
shl
lock
in
cli
jmp
call
aas
repz
cmp
aam
xor
cmp
sar
fsubr
test
sbb
cld
ljmp
xor
ret
aad
cmp
cmp
sarb
aam
rcl
testl
mov
ret
xor
xor
repnz
aas
fistpll
jmp
xor
movl
dec
cmc
lock
xor
stc
fcomi
in
std
aad
or
aad
ret
xor
fsubrp
jecxz
cli
jmp
loope
ror
lret
cmp
sti
sub
cmp
fstpt
mov
sub
iret
repz
out
test
or
aam
movl
cmc
orl
xor
rol
jmp
or
lret
loop
mov
int
leave
bnd
enter
xor
ds
cmp
repnz
loope
filds
imul
xor
rcl
clc
ljmp
addl
mov
cld
call
rol
loop
fdiv
cld
cld
lock
loop
add
ret
out
lret
in
int3
lret
xor
ret
xor
aad
into
cli
in
ret
mov
fcmovb
iret
out
ljmp
ret
leave
rcr
jmp
clc
cmp
cmp
iret
stc
fiaddl
out
cs
std
cli
sti
aam
sti
cmp
fdivp
in
repnz
roll
in
jecxz
loop
cmp
hlt
rol
out
in
repz
cli
sti
mov
cli
mov
shl
rorb
out
fcomp
in
aad
int
cmp
test
stc
rorb
xchg
loopne
int3
repnz
cmp
hlt
in
out
xor
test
repnz
mov
lock
cli
rorb
out
sti
jmp
fcmovne
fxch
cmp
jmp
shl
in
out
iret
aaa
loopne
iret
lret
enter
rolb
aad
mov
mov
rorb
cmp
leave
ss
icebp
std
lret
int3
cmpl
idiv
lret
enter
lds
lret
call
aas
leave
stc
cmc
std
fdivr
sar
les
loop
in
mov
cmp
cmp
jmp
dec
xchg
stc
xchg
cmp
loop
loope
int3
xor
jmp
icebp
shl
cld
jecxz
jecxz
rol
loop
in
xchg
std
int
ljmp
jmp
out
rcl
enter
out
fcmovu
cli
cmp
jmp
clc
imul
mov
mov
addl
iret
in
imul
call
fsubp
in
xor
xchg
into
out
shl
xor
repnz
jmp
in
aam
out
loope
fadd
mov
in
fisttpll
rcr
sti
xor
out
rcl
xlat
sti
repz
cmc
fucom
fst
and
shr
loopne
lock
hlt
das
jmp
cmp
lret
xlat
ret
jecxz
testl
jecxz
loope
sti
repz
cld
fldl2e
xor
xlat
aam
jmp
mov
mov
repz
jecxz
out
cmp
xor
lret
fcmovnu
incb
mov
jmp
ret
int
xor
aam
fwait
cmp
jl
addb
jl
std
test
loopne
mov
int3
mov
int3
xchg
rol
xor
in
jmp
ss
out
loope
mov
test
cld
cmc
mov
lret
xor
stc
fdivrp
not
ljmp
jmp
mov
in
ljmp
ret
int3
fcmovnu
lock
lret
iret
cmpl
clc
in
loop
fucomip
enter
xchg
loop
jmp
stc
jmp
loope
add
enter
mov
orb
int
in
out
ss
lock
clc
rol
xchg
vpmaxub
div
lret
ljmp
icebp
xor
jmp
adc
iret
rcr
repz
loopne
out
jecxz
cmc
lret
out
call
in
out
fucom
xorb
loopne
aam
jecxz
mov
jmp
aaa
cmp
hlt
fadds
ret
xchg
repnz
ljmp
and
cmp
aad
xor
iret
iret
sarl
and
call
rcll
cs
icebp
divl
sti
sti
jmp
jecxz
ret
mov
jecxz
mov
stc
cmp
aaa
int3
out
xor
xor
rcl
shr
int3
fcmovb
roll
cli
in
test
jmp
xlat
shll
test
ds
lock
repz
orl
fucomip
repz
in
iret
shr
in
adc
addb
rol
cld
into
std
fiaddl
shl
jmp
into
aaa
std
cmp
stc
cmp
into
cmp
out
jmp
out
repz
xor
aad
out
cmp
shl
into
ret
fcomip
repnz
cld
faddp
xlat
xlat
mov
cld
xchg
in
ffree
lock
stc
cs
icebp
xlat
cmp
sar
std
fsub
clc
bnd
fucom
out
leave
mov
mov
int3
test
stc
neg
sar
cmp
ror
loopne
fpatan
clc
hlt
loopne
out
xchg
in
adc
aaa
jmp
out
cli
call
rcr
fnstsw
repz
xchg
in
xchg
mov
shl
enter
aad
cs
loopne
repz
fildl
cli
mul
fcmove
nop
mov
filds
call
cli
lret
cld
icebp
clc
fiaddl
xchg
jmp
lret
std
lock
out
in
jmp
ljmp
cld
lret
not
mov
int3
jecxz
lds
leave
fstp
aas
ds
loope
iret
rcl
shl
call
sbb
aas
cmc
xor
fmul
call
out
in
fdivrp
ret
ds
clc
ret
in
out
frstpm(287
test
addb
cmp
jmp
lret
aas
fadds
mov
xchg
jmp
fcmovnu
xor
out
aas
cmp
rcr
test
clc
mov
in
enter
fmulp
das
icebp
xor
call
cmp
lret
cld
cld
ret
test
cli
rcl
cld
mov
in
mov
lock
icebp
in
jmp
aam
sar
stc
int
fmul
incb
test
test
jmp
cmc
ffreep
xor
cmp
sti
in
sarl
dec
ret
aas
enter
loop
mov
call
jecxz
hlt
std
cli
cli
out
aad
jmp
imul
fabs
mov
xor
loop
rcr
cmc
jmp
sarb
ret
cmp
cld
jecxz
fcmovnb
clc
enter
fcmovbe
shl
lret
rcl
jmp
call
cmp
fadd
rolb
loope
out
repz
ss
cmp
xor
lock
aas
xor
test
ds
jmp
mov
lret
int3
shl
sub
neg
cmp
lret
in
cmp
lret
shl
in
test
call
fistpll
repnz
xor
clc
ljmp
xlat
aas
in
xlat
mov
sti
fadd
mov
rorl
cmc
in
lock
in
in
lock
ds
call
xlat
fincstp
int3
jmp
xchg
cld
aad
stc
loope
fnstenv
lds
repnz
cmp
jecxz
ret
ds
xor
lea
jmp
rcl
int3
iret
rol
shll
or
lods
sarb
jl
leave
jmp
into
loope
xchg
ds
xlat
xor
idivl
shr
sti
out
fdivr
cmc
fidivrl
or
in
call
aas
shrl
leave
call
sub
xlat
repz
mov
test
rol
rcl
repz
shll
repz
lock
fcomip
mov
icebp
leave
std
in
xchg
fadd
out
icebp
shr
aaa
hlt
repnz
aas
ror
aas
not
rol
stc
ret
int3
out
int3
rcr
ljmp
int3
ror
out
int3
fldln2
cmp
in
rcl
call
fcomp
test
hlt
imul
std
test
in
loop
in
mul
call
stc
in
int
cmp
hlt
out
xchg
hlt
jmp
jecxz
fcoml
shrb
int3
enter
out
cmp
dec
loop
mov
sub
mov
out
out
xor
das
aaa
out
aas
out
fnclex
cli
flds
mov
loopne
fsubr
xchg
test
xchg
aam
cmc
ret
neg
rcr
cmp
cmp
cmpb
repnz
mov
out
stc
fsub
int
rcl
loope
hlt
in
xlat
ss
rcl
cmp
cmc
std
rcr
std
aad
mov
loopne
lret
ljmp
in
clc
cs
leave
clc
cmp
sarl
ror
aas
clc
call
mov
mov
out
loop
in
cmc
aad
shr
cli
out
call
clc
ret
mov
ds
sti
fst
out
out
aaa
xlat
ret
out
repz
out
addb
mov
into
fiadds
xor
fcmovbe
out
cmp
cmp
ds
jmp
out
enter
orl
ljmp
aam
call
sarl
loop
repz
clc
fsubrp
out
repz
call
loop
xor
xlat
in
fldl
std
fadd
add
aas
mov
xchg
clc
lret
cmp
sub
jecxz
stc
clc
fmulp
in
lock
fdivrl
clc
test
loopne
xchg
rcll
ret
fidivrl
int
idiv
fcmove
sti
in
fiaddl
std
loopne
call
aaa
out
cs
lret
xor
out
out
cmp
aaa
cmp
cld
cld
fcmove
out
lock
push
test
ror
cmc
fstp
cmp
repz
hlt
test
ret
loope
cli
enter
leave
mov
jmp
out
xor
shll
loopne
cmp
add
mov
call
leave
lret
int
xchg
ljmp
in
das
hlt
fcmovnu
in
xor
push
into
loop
lea
out
in
dec
iret
loopne
fnstcw
in
out
xor
lock
xlat
rol
adc
in
fcmovnu
leave
ficoml
aaa
lret
enter
into
std
cmp
ret
idiv
xlat
rolb
loop
out
xchg
xchg
repnz
rol
rcl
out
cld
aas
test
repnz
test
test
sti
std
out
std
jmp
lret
shr
ret
in
cmp
xor
fnstsw
sti
jmp
xchg
neg
les
into
das
stc
fmul
cli
loop
sarb
ret
int
fdivp
repnz
cli
enter
call
out
jmp
ror
cli
fstp
cmp
loop
out
fsubr
fiaddl
orl
aad
out
out
int
clc
call
test
in
mov
in
fmull
cld
cmp
repz
lret
jecxz
shl
movb
rcr
clc
loop
out
cs
ror
sub
sti
aad
hlt
clc
into
stc
hlt
ret
faddp
aas
cli
rcl
out
orl
fdivrs
fdecstp
iret
loope
sarl
shl
fdivr
ret
loope
faddp
in
sti
repz
in
aam
std
out
cmp
cmp
ret
sbb
hlt
cli
lret
fildl
ljmp
leave
cmp
fcomip
shl
adc
fsub
xlat
in
mov
fucomip
mov
fildll
loop
stc
fcmovnu
iret
stc
cmp
xor
repnz
mov
out
int
int3
cmc
out
loop
xor
test
into
cmp
ret
imul
call
mov
movzwl
cmp
jmp
lret
rcr
int
orb
cmp
sarb
addb
jl
lret
mov
rol
icebp
int
rol
stc
cmc
rolb
out
call
mov
and
aad
leave
repz
addl
fcomp
cmc
xor
iret
loopne
nop
cli
cmp
cmp
ror
cmp
lock
adc
aas
loope
cld
out
nop
out
out
iret
xabort
out
jmp
cmp
aad
fcom
rcl
neg
xlat
xchg
clc
icebp
out
decl
cmp
cli
lret
jmp
stc
cld
ret
aam
mov
loopne
testl
jecxz
hlt
lock
fcomp
cld
repnz
out
out
fsubp
inc
std
movb
out
lret
shr
imul
out
fnstsw
xlat
clc
stc
fyl2xp1
fistpll
clc
fmuls
cld
mov
mov
in
shl
iret
hlt
cmp
icebp
shl
ss
icebp
testl
in
cli
loop
mov
lret
sti
test
idivb
int3
cmp
repz
call
out
fsub
int3
incl
lret
xlat
divb
cmp
sar
out
test
out
mov
shl
jmp
ret
cmp
cmp
aad
call
ds
loopne
test
testb
nop
fidivrs
shlb
out
cmc
enter
fnstsw
repnz
jecxz
fcomp
ret
lret
iret
orb
xor
jmp
cmp
jmp
add
fnstcw
icebp
in
cli
int3
xchg
int
cmp
int3
push
in
fcomp
mov
ljmp
rol
test
std
cmc
rcl
repz
fsub
rol
ret
call
in
dec
lret
in
repz
int
in
int
int3
jmp
into
ss
and
out
mul
out
loope
mov
loopne
xor
in
rcr
out
sarb
cli
lret
ljmp
mov
test
cli
xacquire
out
pushl
lret
shl
cmp
stc
rol
inc
mov
cld
in
rorb
aad
fcmovnbe
cmp
aam
xlat
aam
cld
out
in
out
test
int3
das
das
fldl2t
ror
sarb
call
in
hlt
roll
int3
cld
out
sub
in
ret
repz
xor
fld1
std
jmp
repnz
ret
fiadds
mov
xchg
lret
adc
shll
in
icebp
hlt
sti
in
icebp
hlt
jmp
int3
rol
test
fsub
into
sti
call
in
out
aaa
in
xlat
ss
call
idiv
jmp
out
test
int3
xchg
repz
test
lret
iret
in
fucomp
xlat
leave
lret
rcl
fiaddl
mov
testl
xlat
ret
cs
fstp
int
incl
xlat
ffreep
cld
icebp
mov
repnz
sub
repz
icebp
les
cmp
repz
in
out
icebp
cli
rcr
fucom
xchg
rcll
shlb
in
in
xor
call
loopne
fadds
out
xchg
int
jmp
xor
in
fstpt
out
ds
sar
add
in
ret
out
roll
xor
cld
std
out
int
cld
int
cld
rol
repz
out
addl
fucom
fincstp
sar
repnz
ret
ret
roll
in
leave
ror
ror
repz
out
lret
cld
aas
iret
shl
aas
fcomp
test
out
call
std
lock
cli
fucomp
cmp
cmc
ss
repnz
lock
fcmovne
cli
int3
sbb
cmc
xor
enter
lret
lret
in
stc
cmp
fiadds
out
lds
incb
jecxz
cmp
fdivs
cmp
rcr
out
test
jecxz
repnz
popl
leave
cmc
loope
test
shl
rolb
jecxz
test
loope
mov
sti
in
repnz
clc
out
clc
cmp
repnz
cmc
cld
ffreep
loope
fimull
rorl
mov
cld
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
ret
cs
lret
divb
clc
lret
rcl
hlt
cmp
repz
enter
mov
repz
xchg
mov
out
aam
cmp
int
lret
test
loopne
mov
ljmp
int
xchg
in
int
loopne
cli
xor
testl
leave
ret
out
iret
xchg
into
into
in
lret
ret
sti
int
cmp
shr
loope
sti
neg
xlat
mov
lret
out
fcomi
std
jmp
cmc
out
idiv
or
xchg
cmp
call
test
out
test
out
ret
mov
imul
repnz
cmp
aam
leave
sbb
cld
cmc
icebp
xor
lock
lock
out
into
sar
div
aad
ds
test
cli
cmc
mov
sub
jmp
lret
repnz
fmulp
in
cmp
loop
ret
hlt
movl
in
call
out
xor
xor
into
fidivrs
cmp
xlat
cmp
out
mul
fst
rorl
lret
mov
lock
lret
in
loope
out
cli
out
aad
test
fcoms
in
xor
ret
cmp
call
testb
fmull
cli
into
lock
loope
in
mov
jmp
cmp
ljmp
fstp
mov
mov
into
in
clc
shll
cmp
fnstcw
cmp
aam
rcr
fdivrp
mov
clc
sub
hlt
aad
sub
fldcw
shr
ljmp
sti
jmp
cmc
ret
ljmp
loopne
sub
jmp
aad
out
xlat
aas
ret
incl
jecxz
fstp
lret
std
lock
in
repz
rcr
cmp
or
out
loopne
jmp
iret
out
cld
out
xorl
imul
int
sti
roll
test
loopne
enter
loope
leave
stc
lock
xlat
cmp
cld
aad
fadd
iret
aam
mov
loope
aam
loopne
iret
int
in
fimuls
xor
xor
fmulp
shl
jecxz
out
rcr
ret
std
mov
out
mov
cmc
out
rol
aam
lret
cmp
test
ds
clc
sub
fldl
icebp
idivl
int
shr
jmp
test
int3
loopne
mov
incb
in
ftst
xlat
cmp
icebp
lret
in
fsub
sbb
loope
addb
jmp
hlt
loopne
xor
cmp
lret
shr
std
ds
ret
ret
xlat
sti
mov
int3
int3
lret
fmull
xor
lret
cmp
loope
xor
xlat
sbb
lock
aas
test
or
lock
fmul
testl
sbb
ret
fucom
mov
leave
aad
lret
xlat
xlat
aad
jmp
idivb
fnstcw
hlt
lret
jmp
hlt
test
cmc
shlb
fldcw
divl
jmp
cmp
rcr
loopne
movl
ret
in
call
into
rcl
cmp
clc
fsub
loope
f2xm1
cli
loop
aam
fcmovbe
test
idiv
cli
sti
call
aam
shr
aaa
xor
xor
cmp
aam
mov
cld
in
xor
loopne
hlt
xor
fcmove
rol
xlat
ds
std
mov
repz
in
repnz
cld
jmp
aad
fdivp
cmp
aam
mov
mov
in
das
sar
leave
fcos
sarl
cmp
repnz
hlt
ds
jmp
jmp
xor
int3
aaa
out
sarl
sti
rcr
int
int3
jecxz
loope
cmc
fnclex
in
add
in
jmp
ljmp
loop
cmp
int
cmp
loopne
fcmove
mov
lret
mov
xor
ror
neg
stc
jmp
xlat
cmc
rcr
in
rcr
incl
adc
int
lret
lock
xor
shl
ds
cli
aam
in
and
fst
xchg
int
ret
in
clc
sub
mov
jmp
jmp
rcl
rol
fstp
test
jl
add
int
ror
shr
fdivrl
les
out
call
repnz
cmc
fxch
repnz
repnz
roll
enter
into
mov
int
sti
ret
int3
in
enter
rcl
rcl
hlt
leave
sar
test
in
fcomip
icebp
xlat
aaa
fadd
aaa
aam
cmp
jecxz
ss
fadds
out
into
loope
mov
xchg
ljmp
repz
clc
cmp
ret
fucomp
addl
cld
std
loop
fdivp
loop
shlb
cli
aam
add
into
xchg
fcmovnbe
loop
fsubr
int
repnz
mov
out
icebp
clc
repz
out
repnz
ret
out
hlt
mov
fsub
lret
mov
in
ret
sti
cld
lret
xor
xchg
leave
clc
vcmpps
mov
loopne
in
sub
cli
fneni(8087
ljmp
aam
loopne
test
xchg
loop
ret
hlt
repz
shl
xor
cmp
out
test
and
mov
int3
out
out
int
shlb
sti
in
fsubr
fcomi
int
and
fcmovbe
test
mul
out
out
out
nop
ljmp
aam
int3
shl
aad
cmp
fst
stc
aad
cmpb
loop
loope
mov
xchg
hlt
leave
in
imul
int3
lret
shr
int3
in
fcom
fdivrs
test
addb
repz
vphsubbw
cmp
std
cmp
ss
out
clc
div
aad
loopne
loop
mov
aad
iret
shll
icebp
call
sti
cmp
cli
stc
cmp
aas
ret
in
mov
fisttps
in
repz
leave
clc
fst
test
jecxz
stc
xlat
repz
fsub
jecxz
cld
cld
in
loop
lret
loop
xor
fmul
enter
clc
int3
out
ds
hlt
fdivrp
xlat
cld
hlt
in
sti
leave
nop
jmp
xor
imull
aaa
rcr
ljmp
repz
fcomp
cmp
out
mov
xchg
xchg
into
leave
ss
xor
in
cmp
fadd
test
jecxz
ljmp
rol
stc
in
cs
out
ss
ret
rolb
test
out
out
fdivr
icebp
ljmp
cmp
jmp
shl
repnz
xchg
enter
stc
leave
lock
cld
iret
repnz
fld
ljmp
cmp
icebp
fadd
jmp
xchg
mov
out
lret
cld
idivl
shll
aaa
xor
ss
out
repz
jecxz
jecxz
cmp
fucomip
std
clc
jmp
into
std
repnz
ret
aaa
clc
hlt
xor
ljmp
ds
test
test
std
shl
in
jecxz
neg
shl
lock
jecxz
faddl
sub
dec
jmp
neg
leave
lret
call
shl
shr
cmc
in
jmp
jmp
test
ss
xor
into
repnz
cmp
out
out
xchg
leave
mov
std
mov
out
clc
enter
lret
lret
loop
cmp
mov
jmp
mov
mov
out
mov
repz
into
leave
aaa
rcl
call
adc
idivb
rol
out
fldl
jmp
out
xor
jmp
cmp
jmp
sar
into
xlat
jecxz
sar
stc
decl
call
ss
call
aam
lret
cmp
rcl
stc
jecxz
testb
int3
xchg
icebp
mov
enter
into
into
test
fdivr
vpaddq
loopne
std
xchg
stc
aaa
shll
repnz
cli
testl
jecxz
mov
cld
icebp
rcr
cld
jecxz
clc
shl
shll
lret
cmp
ds
aad
hlt
aam
mov
nop
repz
loopne
out
hlt
cmp
stc
cmp
repnz
and
mov
shr
lret
fadds
out
int
in
repnz
in
aam
rol
cmp
fsqrt
cli
enter
jmp
lock
xor
stc
in
repz
xor
lea
mov
jmp
mov
lret
fnstenv
call
jl
addb
jl
jecxz
fsubp
loop
test
loop
int
rclb
xor
into
int
fnstenv
rol
cli
cmp
xchg
fsub
iret
in
loope
fmull
aad
stc
fdiv
fcomi
sar
aad
rcl
jmp
xchg
test
call
in
xor
int
icebp
in
lret
cld
cmp
rcl
idiv
loopne
cmp
xchg
lret
icebp
rcl
shl
aaa
in
sbb
int
addl
repnz
int3
lret
in
xlat
int
xor
repnz
add
cli
ljmp
lock
imull
cmp
icebp
sti
aad
hlt
ds
loope
mov
dec
in
sar
xchg
ret
in
fmul
ss
fsubrp
test
in
mov
or
xchg
call
in
repz
fucomip
loopne
ds
fstp
fdiv
mov
decl
ret
iret
int3
out
xlat
call
xlat
mul
hlt
rol
and
cli
faddl
sub
loope
cmc
iret
fyl2x
clc
jmp
ret
lock
loop
repz
ret
orb
shr
loop
fnstenv
in
leave
cmp
xor
cmp
int3
testl
out
mov
xchg
in
xor
in
into
lret
clc
call
lock
faddp
fabs
cmc
faddp
out
leave
in
iret
jecxz
into
xchg
hlt
xor
xor
shl
iret
fdivr
ret
fidivrl
stc
mov
cli
ret
cli
fsub
test
shl
aam
out
into
and
aad
and
out
ret
cld
xchg
call
cs
cs
in
lock
sarl
cmp
fidivrs
stc
rolb
movl
xor
xor
cmp
lock
add
add
rcr
fisttps
filds
xor
jmp
lret
hlt
in
xor
jmp
hlt
in
test
lret
shl
rcl
loop
stc
aam
xlat
enter
repz
div
icebp
cld
and
mov
ffreep
incl
xlat
hlt
leave
ss
lret
aam
cld
cmp
cli
out
in
repnz
test
loope
xor
shl
ss
divl
ror
in
cmp
ds
push
fstpt
test
les
jmp
xchg
xor
lret
hlt
fcmovne
ljmp
out
test
xchg
hlt
loopne
lret
enter
test
sar
cli
call
fadd
cmc
xlat
fdecstp
jecxz
repnz
clc
vpsraw
fndisi(8087
nop
roll
aam
aad
icebp
jmp
cli
ds
stc
rcl
call
add
lock
fucomip
xor
cmp
aaa
aad
fcomi
hlt
sti
hlt
cmp
ret
nop
and
out
loopne
sar
xor
jmp
cmp
cmpl
repnz
lea
adcb
cmp
sarl
cmp
hlt
test
int3
incl
cmp
in
cli
ljmp
jmp
ret
idivb
ds
loop
ret
mov
in
leave
sbb
dec
ljmp
out
hlt
rcl
icebp
cmp
icebp
hlt
cmp
aas
rol
out
lea
jmp
call
div
neg
ds
cmpl
xlat
std
fadd
jmp
xchg
loop
in
out
lret
hlt
aam
cmp
icebp
call
cmpb
cli
enter
sti
mov
int3
jmp
into
xor
into
in
in
idivl
fldl
xchg
test
sti
jmp
orl
call
out
cmp
clc
ret
shl
roll
jecxz
push
jecxz
int
cmp
cmp
jecxz
out
lock
test
enter
into
jmp
xor
in
cmp
jmp
fcmovnbe
aad
xor
bnd
jmp
mov
repz
ljmp
leave
shr
fsubr
not
rolb
fmul
xchg
sub
lock
lret
cmp
cli
fsubr
aas
int3
sar
mov
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
fcomp
xlat
add
xchg
jmp
xor
std
int
fcmovne
fndisi(8087
cld
rcl
vpsubusb
loopne
out
std
clc
mov
xchg
mov
fsub
cld
out
lret
aam
cmp
repnz
xchg
aam
hlt
fsubrp
leave
sub
lret
shr
clc
in
int3
fcom
shr
shl
out
cld
cmp
jecxz
jmp
mov
xlat
jecxz
stc
cmc
sar
lock
cmp
fmul
test
ret
out
test
cld
in
addl
cmp
out
cmp
hlt
cmp
out
loopne
call
std
xchg
enter
icebp
aaa
lret
mov
hlt
cmp
push
rolb
ficoms
cld
in
xor
cmp
cmp
test
out
lock
sti
mov
aam
fcmovne
lret
xchg
shlb
ljmp
repz
cmp
xchg
mov
jmp
out
icebp
out
in
fiadds
xor
aad
fnsave
hlt
lret
aam
mov
sbb
xchg
jmp
clc
ljmp
repnz
rol
loopne
xchg
enter
not
stc
icebp
lret
cmp
int3
leave
jmp
cld
aas
in
not
xchg
jecxz
loope
in
fadd
out
ljmp
ret
out
jmp
rol
jecxz
ss
cld
decl
mov
std
enter
rcl
call
lret
xor
cmp
ffree
fsubp
sbb
orl
aad
leave
ret
xlat
cli
out
aas
rcl
ds
ss
test
cld
loope
aad
int
mul
test
lock
clc
lock
loope
enter
fdivr
stc
sar
mov
xchg
ret
xor
ret
cmp
cmp
ljmp
aas
repz
loopne
int
dec
in
jmp
shrb
icebp
stc
xor
in
fstpt
int
cmp
icebp
sar
cld
movb
rol
ret
int
into
jmp
aas
rcr
repnz
ftst
fucom
aam
leave
orl
test
lret
sti
into
f2xm1
aad
lock
repnz
sbb
xchg
mov
int
cmc
call
fdivr
out
idivl
hlt
stc
in
xchg
shl
les
test
in
test
aam
into
out
ss
cmp
std
std
test
loop
filds
loope
call
lret
repnz
into
into
cmp
repnz
not
cld
clc
sti
lret
mov
loop
loope
in
aad
lret
std
std
jmp
cmc
iret
in
repnz
rorl
jecxz
lock
call
ss
ret
cli
in
neg
ror
cmp
icebp
call
test
notb
lret
ret
idivl
ss
cli
stc
clc
aam
push
cmc
and
test
fadd
clc
lret
out
ljmp
in
into
aas
loope
iret
aad
lock
sti
test
xchg
iret
aad
xor
xor
dec
ror
xlat
ret
testl
int3
mov
ror
stc
repnz
ss
out
ss
iret
lock
ret
cmc
aas
test
addl
popl
lock
out
cmp
cmp
cmp
loope
stc
xlat
sar
loop
aas
ds
test
shr
in
rcr
cld
cmp
cmp
std
ret
hlt
sti
fmul
rol
test
std
sti
in
in
aaa
xor
jmp
aaa
lock
cmp
aas
cmp
test
jmp
xchg
adcb
out
lock
xlat
cmp
sbb
loope
call
les
xor
rol
call
fldl2t
or
xchg
fcomp
rol
loope
rcr
mov
cmc
xor
cmp
in
leave
repnz
or
mov
loope
xor
call
aaa
cmp
fdivp
cmp
testb
movl
hlt
xlat
xor
cmp
ljmp
loope
ret
icebp
neg
loope
mov
pusha
jmp
jmp
ret
lret
enter
dec
pop
or
and
jl
addb
jl
orb
int
in
icebp
ljmp
iret
sar
hlt
xor
out
out
ficoms
loopne
xor
sti
cmp
aam
cmp
ret
ret
loop
cmp
clc
in
lea
xchg
fstl
lret
lret
enter
aas
hlt
xlat
sti
rolb
out
loopne
cli
and
das
out
int3
fcomip
fmul
fcomi
fcmovnu
in
repz
std
cld
fstp
in
fldl
rcl
cmp
imul
addb
loope
fucom
xlat
in
stc
in
jmp
aas
rcl
in
into
rol
fcmovnbe
lock
aas
shll
test
in
ret
cmc
xlat
loope
ljmp
ret
aad
hlt
shl
leave
xlat
into
shl
into
aas
sti
in
hlt
call
fisttpl
aaa
xor
xor
sti
shl
int
aad
stc
and
lret
loop
mov
ret
cmc
iret
xor
shlb
rcr
int
loop
stc
cmp
fldl
xlat
xor
out
sti
dec
cmp
ret
flds
stc
jmp
lret
in
ljmp
aad
out
fiaddl
fsubr
lret
jmp
xchg
call
mov
xor
xor
int
out
lret
icebp
repz
cmp
vpandn
fcmovnu
and
sti
xchg
ljmp
xor
jmp
in
rol
clc
fistpll
out
cld
mov
iret
ret
fstp
mov
xchg
out
cs
fcmovne
lock
fyl2x
repnz
aas
in
in
cli
cmp
int
ljmp
repz
repz
repz
inc
sbb
movb
cli
clc
jmp
out
loopne
bnd
hlt
int
ss
iret
cmp
fidivrs
div
xbegin
test
ljmp
shrb
shlb
testb
xlat
cmc
jmp
ror
loopne
loopne
mov
jmp
lock
out
lret
xor
cmc
cmp
repz
shl
cmc
jmp
loop
loopne
ljmp
in
lret
fcomp
loopne
cli
cld
repz
mov
roll
shl
jecxz
xchg
shl
out
hlt
push
ds
into
in
aas
addb
clc
fxch
mov
sar
fcmovne
ror
neg
cmp
cmp
addb
test
xchg
rclb
aam
out
lock
into
lret
out
ds
hlt
aad
fldl
enter
lret
fsubr
fcomip
xor
in
bnd
icebp
out
ds
sbb
stc
mov
adcb
in
repnz
repnz
aam
into
adc
clc
out
mov
fstp
enter
aam
in
sub
fst
loope
cmp
stc
aad
aam
xchg
xchg
mov
mov
leave
shll
out
repnz
int
shl
ds
sbb
int3
decl
xchg
in
repz
in
fucomi
cmp
fdiv
faddp
mov
incb
lock
repnz
cmp
repnz
xchg
aam
xchg
mov
xlat
out
jecxz
ret
xlat
out
neg
clc
cld
lret
rcl
aam
cmp
aam
rcr
mov
faddl
xchg
test
aam
int
repz
cld
loop
xlat
roll
incb
shr
call
ret
lret
enter
sti
xor
loopne
lret
icebp
and
call
icebp
rcl
hlt
xor
shll
ftst
inc
loop
inc
ljmp
out
test
ss
cli
jmp
rcr
in
test
ret
stc
in
enter
ret
fimuls
aaa
ror
cld
cmp
cmp
test
loop
shr
sti
movl
xlat
ss
repz
fucomip
shl
test
xchg
in
mov
mov
cs
out
fidivrs
aas
and
leave
cli
out
fadd
loop
inc
or
sahf
add
add
rcl
aad
lret
enter
pop
mulb
addb
jl
in
aad
fsubr
cmp
rcl
shl
ror
cmc
cmp
in
sti
aad
xlat
cli
cli
loopne
mov
ljmp
aam
cmp
rcl
test
test
aad
xchg
lret
iret
call
sub
cmp
lret
lock
xor
std
rol
in
stc
cli
test
hlt
xchg
xor
xor
mov
hlt
aaa
out
addb
fcmovne
int3
cli
dec
out
out
jmp
repnz
loope
out
cmpl
stc
in
jecxz
sub
aam
lret
shl
fdivrs
out
jmp
cli
cmp
icebp
rol
ds
or
xchg
xchg
jmp
cs
icebp
out
cmp
rol
fcom
aas
out
lock
jmp
int3
call
ffreep
das
xor
int3
into
sarl
xor
ret
jecxz
loopne
in
lret
in
xchg
hlt
xor
lock
leave
cld
shr
sti
aaa
loope
aad
shl
hlt
leave
cli
int3
mov
fmulp
hlt
rcl
ljmp
faddp
jecxz
fst
fmuls
mov
div
loop
rcr
cmp
jmp
aad
cli
loope
in
cli
decl
loopne
sar
lret
call
cmp
jecxz
faddp
repnz
cmp
or
sbb
into
lret
out
fstp
hlt
stc
ret
sar
lret
fdiv
cli
int
xor
test
decb
xchg
nop
sub
enter
xor
cmp
fucompp
jecxz
adc
movl
in
out
sub
xlat
repnz
divl
hlt
hlt
enter
cmc
aas
cmp
icebp
aas
test
sbb
fxch
jecxz
in
jmp
xor
hlt
fdivr
sarb
into
std
cli
fcomp
div
jmp
cmp
in
or
iret
out
lock
in
shr
in
fcomp
cmp
fcmovnb
cmp
shl
addb
jecxz
cld
xchg
xchg
out
sarb
sar
sti
sar
iret
aam
rcl
roll
fimuls
jmp
out
xor
ret
iret
shl
cmp
into
rolb
test
lock
ljmp
out
sub
std
test
in
sub
sarl
cmp
out
ret
int
out
jmp
cmp
cmp
cli
ret
clc
shlb
mov
cmp
ljmp
fcmove
shl
ret
divb
jecxz
div
into
or
cmp
shl
rcl
jecxz
mov
xchg
imul
in
xor
aam
cmp
cmp
aad
sti
in
mov
fadds
hlt
xor
icebp
int3
aaa
cmp
ljmp
sbb
mov
shr
mov
mov
fmul
cmp
ret
out
icebp
out
fdivr
fiaddl
lret
call
int3
in
out
fidivl
ljmp
mul
mov
jmp
rorb
lock
loop
aad
jmp
repz
cmp
clc
add
test
fmull
sbb
out
enter
in
cmp
sub
loop
ficoml
shl
repz
cld
int
into
fadds
out
aad
sub
out
loopne
iret
repnz
fsubp
jmp
hlt
icebp
xlat
fdiv
aas
iret
out
fcmovb
lock
repnz
sub
into
iret
jmp
cmc
jecxz
int
div
loope
sti
fsubr
ret
aad
sub
loop
fcomp
fmull
aad
fcmovnbe
ljmp
sti
into
in
cmc
ret
mul
loope
sbb
fimull
loope
in
repnz
in
int
hlt
ror
out
cli
sbb
cld
cmp
mov
out
xchg
xor
in
fcmovu
xor
out
leave
cmp
ror
fcmovnu
aam
dec
in
out
mov
shrb
ljmp
cli
iret
out
icebp
into
into
cmp
in
stc
cli
jecxz
lret
xchg
aam
xor
in
rcr
shll
in
loopne
shl
adc
cld
jmp
jmp
in
in
in
xor
test
movb
jmp
rol
rcr
jbe
mov
shlb
and
jl
add
xor
cmp
leave
cmp
out
icebp
loop
xlat
aad
cmc
cli
adc
loop
hlt
fidivs
jmp
std
out
hlt
hlt
test
enter
loopne
fmulp
int
loopne
loope
hlt
out
cmp
leave
icebp
int
aas
ret
xor
xlat
shl
jecxz
div
fucomp
fsin
repz
fadd
icebp
shr
ret
fxch
in
cmc
repz
sar
fdivp
test
mov
addb
cmc
mov
rol
int3
int3
repz
fcmovnb
sar
repnz
flds
jecxz
in
enter
lret
shl
in
cmp
call
sar
cmp
jmp
add
mov
or
call
loopne
sub
iret
cmp
cld
aam
loope
jecxz
out
out
add
xchg
hlt
icebp
xor
in
cs
cmp
call
loope
cmc
adc
mov
lret
ljmp
std
cli
ss
aam
in
loopne
fidivrl
leave
aam
iret
mov
lret
addl
int3
lock
into
cmp
cmp
fisttpl
ljmp
bnd
loop
int
aaa
jmp
call
ret
ffree
call
adc
xchg
repz
repnz
out
out
cmp
out
rol
ret
xchg
xchg
loope
mov
addl
stc
rcl
sarl
faddp
xor
xchg
call
int3
lock
enter
stc
cmp
xor
int3
lret
loopne
fst
cli
cmc
out
in
xchg
fucom
xchg
into
leave
xor
in
lret
jmp
icebp
faddp
loope
jmp
fadds
loope
jmp
xlat
aam
xor
aas
aas
ret
xchg
mov
xchg
xchg
shr
fcmovbe
div
repnz
xor
loope
std
frndint
int
loop
xchg
orl
sti
ss
vpand
cld
xchg
lret
xchg
ret
loopne
test
fcomi
rcl
clc
cmc
into
xlat
rcr
jecxz
cli
ds
xchg
jmp
ret
sti
fidivrl
fmul
cmp
std
shl
ret
cmp
ret
test
lret
mov
int
not
div
int
xor
cmp
sti
aas
xlat
div
in
icebp
xchg
loope
aad
loop
iret
enter
neg
cmp
inc
ss
fld
testb
in
jmp
xlat
icebp
icebp
sti
jmp
fsub
fnstcw
in
xchg
ret
les
fcmovbe
or
fldln2
into
ret
iret
int3
iret
repz
std
std
mov
cld
fisttpl
aam
ljmp
clc
ror
iret
ret
mov
leave
test
call
ror
jecxz
neg
jmp
aaa
int3
sti
std
ret
out
ret
aam
std
std
xchg
vucomisd
fpatan
div
aam
idiv
loop
aas
test
cld
idiv
out
stc
loopne
int3
repnz
iret
sti
xor
icebp
std
stc
ret
sbb
ds
cld
fmul
clc
fcom
lret
repz
xlat
shll
int3
fdivrs
hlt
repnz
repz
cmp
lock
rcr
loopne
out
sti
out
sbb
loope
rcr
sti
ss
out
xor
xlat
xlat
xlat
cmc
loope
mov
stc
icebp
stc
lret
test
out
test
ljmp
sar
xchg
in
xor
out
fsub
into
xchg
xor
stc
ret
repz
std
idiv
cmp
iret
into
sti
mov
call
in
ljmp
ljmp
iret
ret
xorb
jecxz
lock
shl
out
iret
iret
shl
call
into
cmp
cmp
and
jecxz
loopne
cmc
aad
sar
cli
test
ss
cmp
sar
ret
test
ljmp
xchg
int
test
sub
in
iret
jmp
rcl
jmp
int
loop
fdivrp
leave
lret
call
cld
xchg
xchg
loope
call
lock
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
inc
lock
addb
jl
shl
clc
cli
ss
in
xlat
xlat
int
leave
iret
fimull
aaa
ret
xor
sarl
in
not
cmp
xlat
out
aas
enter
loope
mov
xchg
xor
cmp
fcmovne
hlt
fcomip
sti
xor
sbb
call
loop
out
shl
lock
cmp
ljmp
test
cld
loop
mov
loopne
int3
xlat
stc
cmp
in
xor
stc
clc
sar
cld
loop
fadd
or
ret
fxch
fsubr
test
lock
push
shl
aam
cld
sarl
shl
lret
fstp
mov
fmulp
les
enter
ror
aad
jecxz
loop
sti
add
out
cld
fmulp
in
xchg
iret
enter
int
xor
cli
hlt
in
out
sbb
mov
fst
int
nop
mov
loope
lret
ror
cmp
in
repnz
ret
imul
cli
fcmovb
neg
clc
in
in
call
lock
out
cmp
idivl
in
mul
test
loopne
enter
mov
lock
repnz
cmc
int3
clc
in
cli
shr
ljmp
aas
orl
in
rorl
lret
aad
loopne
loop
into
jecxz
jecxz
mov
cli
clc
call
and
sub
ror
out
fcmove
ror
xlat
flds
fst
mov
fisttpll
les
fcmovnb
div
leave
leave
out
aad
cmp
mov
test
xchg
sar
mov
cmc
hlt
fsubr
lock
repnz
cmp
test
xlat
jmp
loop
in
orl
fstpt
loopne
loope
cmc
out
lock
neg
aam
in
mov
xor
repz
not
icebp
rolb
shl
hlt
rorl
ret
int3
mov
xor
xor
imul
rcl
out
sar
neg
lock
loop
cmp
fmull
sub
loop
aad
out
cmp
sar
cld
shl
lock
sti
enter
loopne
rcr
fcmovu
xchg
into
divb
jecxz
out
out
repz
shl
sub
add
rolb
out
fsubrp
icebp
repnz
not
lret
xor
cmp
cmc
not
add
out
div
mov
rorl
mov
cmc
ror
xor
sti
fdivs
stc
neg
in
fadds
rolb
loope
incl
aaa
rcr
cmp
fstpt
aam
out
shl
hlt
fadd
loopne
fdivrp
int
fdiv
cmc
loope
loopne
in
cmp
out
std
jmp
cmp
into
mul
xlat
jmp
ljmp
and
lock
leave
int
cmp
lret
shr
rcl
fxch
fisttpl
out
shr
shlb
in
cmc
fcmovne
ror
xor
loopne
in
xor
cli
out
icebp
fcomp
in
ljmp
imul
idivb
repz
add
lock
iret
in
mov
in
imul
shl
int
neg
adc
icebp
int3
repnz
rol
ret
testb
mov
xchg
loopne
fdiv
int
fcomp
int
icebp
cmp
xchg
loop
mov
enter
mov
loop
int
into
cmp
cmp
les
enter
mov
sti
xor
xor
jmp
enter
icebp
cmp
cld
out
sti
jecxz
jecxz
in
cli
lock
ds
in
imul
fnstenv
out
fnstcw
leave
sar
aas
iret
into
mov
nop
fildll
aam
ret
int
cmp
cld
hlt
call
filds
lds
jmp
in
out
in
cs
in
xor
fcmove
cmpl
lock
lds
iret
int
xchg
aad
hlt
clc
aam
ss
jmp
aad
lock
ljmp
xchg
into
fmulp
shr
xor
out
call
clc
icebp
shlb
ds
fsub
lret
lock
in
mov
hlt
jmp
clc
aaa
repz
iret
sti
cmp
mov
jmp
int
xlat
int3
int
cmc
or
mulb
shll
jl
addb
jl
cmp
stc
fsubp
xchg
sti
out
jecxz
nop
xchg
loop
jecxz
in
enter
fdivrp
ss
iret
aas
ret
std
repz
shl
fcmovbe
std
fistl
fistpll
into
rcl
cmp
ror
aam
fsubrp
int3
icebp
clc
and
in
int
test
xchg
int3
ror
out
xor
testl
and
leave
out
leave
jmp
fidivrs
shl
aam
das
int3
aam
aam
sti
clc
fidivrs
stc
jmp
fadd
lock
nop
mov
aam
ljmp
cmp
cld
sti
stc
ds
hlt
fcmovnbe
int3
sti
std
into
in
repnz
shr
int
cmc
cmp
fidivrl
fstpt
cmc
loop
addl
or
sti
roll
call
ss
cmp
sar
in
in
stc
hlt
test
test
repnz
out
fdivrs
hlt
sub
stc
cmp
test
rol
clc
test
aam
cld
int
xchg
fst
out
stc
ljmp
xlat
in
clc
ret
in
test
int
mov
test
lret
mov
xor
rcr
ss
repnz
cmc
sar
ret
mul
mul
sti
fucom
lret
les
out
sub
cli
enter
cld
fadds
lret
mov
fisttps
aaa
in
fmul
enter
rcl
jecxz
jecxz
aam
cld
xchg
cmpl
cmp
fimull
cmp
stc
into
fnstcw
ds
lret
ffreep
sar
cmc
fcmovnu
fisttpl
sbb
sub
cmp
shl
iret
clc
ds
out
fmuls
ds
fxch
repz
test
in
clc
enter
lret
xor
rolb
cmp
kmovb
incl
jmp
in
lret
sar
iret
ds
clc
stc
cmp
call
loopne
addb
xor
ret
fcmovnu
call
cld
shl
cli
ret
leave
imul
ffree
lret
jecxz
lock
in
in
jmp
call
xlat
loope
rcl
out
in
ds
cmpl
test
clc
into
rcr
out
ret
ror
jecxz
fyl2xp1
sarl
cmp
cmp
rcl
xchg
fprem
in
fcomp
sub
out
shl
int
shll
not
int
not
stc
fst
cmc
lock
repnz
leave
sub
neg
sar
fstp
in
jecxz
fsubr
enter
call
xor
hlt
cmp
test
icebp
ljmp
xlat
ret
repnz
cli
enter
fnstsw
jecxz
cmp
cld
std
int
jmp
test
in
jmp
repz
cmp
in
fninit
sti
aas
fstp
loopne
addb
iret
cli
mov
lret
xlat
test
out
jmp
iret
loop,pt
jecxz
aam
loope
cli
clc
int
int3
out
out
xor
not
leave
sti
shr
aaa
ljmp
out
std
ret
jmp
loopne
std
call
ljmp
out
fsubr
int
lret
cmp
fcmovnu
call
xchg
shr
icebp
aam
iret
rcr
cmp
out
int
aam
repz
idiv
xchg
fxtract
fadds
xchg
xor
xor
xor
xor
cld
icebp
ss
lock
ret
mov
mov
in
xchg
clc
int3
test
shl
shl
out
fsubrp
mul
fdivr
out
jmp
clc
call
loope
int3
sar
into
repnz
in
jmp
div
call
loop
rcl
out
in
in
std
test
out
hlt
cs
xor
int
aad
into
neg
ret
rcr
ljmp
or
out
icebp
sub
int3
enter
fidivrs
int3
ret
sarl
fcmovnu
fabs
ds
out
or
mov
ds
int3
ljmp
loopne
out
cmp
ret
jecxz
loop
int3
cli
mov
lock
lea
aam
ret
cmc
iret
lret
lock
aam
sti
ror
ljmp
aad
aaa
xor
lock
cmp
std
shr
aas
cmp
loope
test
fldl2t
xchg
jmp
adc
fmul
xor
cmp
std
neg
repnz
or
or
movb
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
outsb
add
mov
out
jl
addb
jl
sti
leave
test
stc
idiv
out
xor
xor
jecxz,pt
cmp
cmc
xlat
aad
xlat
fldpi
test
mov
cld
jmp
fnstenv
cmp
repnz
into
fucomi
ret
xchg
fsub
ret
sar
test
icebp
repnz
repnz
xor
leave
int3
jmp
shl
cmp
repnz
shr
cmc
loop
idiv
out
in
fcmovu
iret
repz
shll
repz
fsubr
div
hlt
in
in
loope
cld
jmp
loopne
test
mov
shlb
test
stc
cmp
repnz
aad
cmp
filds
fucomip
lret
jecxz
test
lds
mov
ret
cmc
xor
cmp
cli
shr
fcmovbe
stc
mov
into
loop
mov
fsubp
cs
into
fsubrp
xor
cld
lock
cmp
ljmp
aam
rcl
hlt
divl
cmp
fdivrl
test
ret
stc
cld
in
call
jmp
loopne
fsqrt
lret
hlt
aad
ljmp
mov
fadd
enter
test
xor
test
int3
sar
out
fnstenv
fcmovu
rol
ffree
out
les
in
repnz
in
out
out
cld
cmp
sti
into
fyl2x
aam
std
vpmuludq
testb
xor
aam
shl
cli
xor
aam
sti
icebp
cli
rcr
out
testb
mov
loope
fsub
loope
loopne
clc
lock
cmp
iret
cli
fcmovnb
cld
shr
imul
aas
loop
mov
lret
xchg
fnstsw
xor
sar
enter
xor
fmul
aas
aam
shl
ret
mov
mov
out
iret
loop
xchg
lret
in
aad
ljmp
aad
mov
loope
aam
fmul
repz
fxch
out
aam
clc
loop
xchg
fdiv
not
mov
cmp
icebp
iret
rol
in
ljmp
aad
into
sub
call
loopne
in
and
lock
ljmp
cmp
neg
loop
rol
addb
clc
in
jecxz
mov
aaa
ss
lds
ljmp
into
aad
rol
repz
xchg
or
int3
jmp
int
call
test
and
out
aam
mov
std
rorb
in
iret
ret
out
iret
repz
loope
rcl
shl
and
inc
not
call
xor
repz
std
fcomip
shr
cmp
xchg
addb
fadd
fdivrp
mov
lock
in
out
jmp
lret
clc
jecxz
out
in
fcmovnb
add
hlt
in
jmp
out
mov
loop
fsubp
xor
cmp
cmp
xlat
cmp
fadds
fadd
mov
out
mov
int3
xor
das
out
divl
hlt
cmp
loope
add
fucom
rol
aam
stc
orb
out
lret
xor
lret
lock
xor
iret
test
xchg
fdiv
faddl
fiaddl
aam
xor
hlt
fidivl
loopne
cmp
int3
fcmovu
fld
cmp
loopne
loopne
into
into
enter
mov
jecxz
repz
int
repnz
jmp
addb
mov
mov
jmp
lret
out
enter
rcr
out
ror
ss
iret
add
fiaddl
xchg
dec
in
vpavgw
aaa
iret
fst
cmp
stc
int
loop
cli
ret
rcr
ds
faddp
mov
loope
cmp
fucomip
int
cmp
in
in
cmc
and
enter
fimull
repz
lret
jecxz
out
out
call
jmp
testb
jecxz
lret
mov
iret
nop
int3
out
hlt
xor
leave
cmp
cld
aaa
iret
shr
fcom
cli
and
repz
rcr
int3
loope
in
xchg
xchg
loopne
cs
hlt
fidivrl
in
stc
sar
loop
in
rcr
cmc
fdivrp
loopne
mov
fcomip
jmp
out
lock
in
repnz
cmp
faddp
fiadds
div
cld
loop
test
shl
shrb
ljmp
lret
repz
aad
xchg
out
lret
leave
sti
lret
add
jmp
ror
int
fcmove
mov
push
movsl
mov
cwtl
repz
addb
jl
ljmp
cmp
jmp
repnz
or
shl
sti
call
in
xchg
lret
test
int
xchg
loop
ret
shr
in
repnz
in
cmp
cmp
out
ror
in
lds
in
xor
cld
fcom
fdivrp
rcr
fucomp
aad
cmp
clc
rcr
loop
fucomp
lret
or
ljmp
cmp
jmp
cmc
into
ds
out
fcmovb
out
fninit
fadd
mov
int
xor
lock
hlt
cmp
loopne
cli
into
ret
not
loop
in
in
popl
shl
xor
cld
xor
icebp
aam
xor
loopne
in
clc
enter
xchg
xchg
in
sub
in
into
ror
cmp
repz
cmc
mov
aam
ret
movb
mov
aam
out
xor
cli
test
fadd
jmp
enter
icebp
addb
shl
les
enter
lret
fidivrs
addb
stc
int3
call
shr
lret
ds
in
out
xor
sarl
aad
cmc
loope
rolb
mov
xrelease
mul
aas
rcl
out
cmc
in
hlt
loopne
rcl
loop
movl
sub
int
cmp
lock
cli
cmp
int
cmp
test
lret
lock
roll
cmc
aaa
xor
hlt
xor
aad
jmp
ds
fucom
fnstsw
orl
sub
ljmp
shr
xor
in
fdivr
loope
fsub
xlat
ret
test
fmull
iret
repz
jmp
repnz
fdiv
ret
jecxz
in
leave
int3
mov
ljmp
enter
ds
repnz
iret
sar
fsubr
int3
in
xchg
int
mov
ret
hlt
leave
into
lret
fdivr
into
loope
repz
loopne
adc
sti
loop
test
xchg
loop
xor
out
aam
in
int
cmp
ljmp
dec
test
xlat
xor
rcr
clc
xor
enter
cmc
icebp
xchg
faddp
ffreep
enter
xchg
jmp
jecxz
xlat
icebp
idiv
std
lret
fdivr
rcr
lds
cmp
test
in
out
xor
rcl
fxam
in
out
fcmovnbe
adc
rorb
enter
lock
shl
roll
fcomi
xor
cmp
repnz
fcmove
sarl
testb
adcl
lock
repz
sar
les
jmp
ljmp
cmc
shl
repz
jmp
loopne
out
sbb
xchg
jmp
in
out
jmp
into
ds
aaa
enter
cmp
ss
std
ljmp
jmp
enter
lock
out
xor
jmp
iret
iret
cmp
test
mov
cld
enter
int
loop
repnz
lret
in
lock
aam
out
imul
ds
fsub
fsubp
mov
mov
int
xchg
shlb
rol
std
in
push
cmp
jecxz
fsubp
addb
mov
jecxz
div
repnz
call
cmp
repnz
ret
xchg
jecxz
test
jecxz
in
into
loope
xchg
int3
shl
aaa
ljmp
aas
sarl
ret
mov
call
sarb
in
out
hlt
cld
aas
fnop
neg
rcr
jecxz
test
cli
in
sti
int
iret
mov
cmp
aad
clc
xor
fcmove
ret
icebp
repz
aas
jecxz
fmull
out
lock
out
lret
cmp
stc
loope
rcr
sbb
cli
fimuls
out
fidivrs
fcmovnbe
xor
aaa
addb
out
fcmovne
fimuls
cld
decb
aam
in
cld
call
cmp
out
cmc
sbb
int
fstl
cs
into
jmp
aas
aad
test
loopne
fsub
cli
test
rorl
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
lret
push
idivb
add
jmp
in
fcomip
rolb
cmp
stc
cli
int3
loope
ljmp
int3
ss
leave
cmp
xlat
fucomp
ds
loope
rolb
ffreep
icebp
in
xchg
std
icebp
xchg
rol
xor
ljmp
iret
sarb
repz
aam
test
loope
or
ret
rcl
icebp
stc
in
repz
ss
cmp
std
hlt
dec
mov
cli
sub
call
shrl
loop
in
stc
neg
cmp
stc
xor
xchg
out
xchg
in
in
icebp
out
xchg
xor
out
hlt
int3
lock
fdivp
fdiv
aad
std
shl
lds
test
lea
or
out
out
fnstsw
sarl
imul
test
test
into
ret
repnz
int
mov
mov
call
iret
shll
aad
repz
cmp
idivl
test
fcomp
aam
and
jmp
jecxz
jecxz
xlat
repnz
xor
fst
ss
into
aad
push
and
xchg
in
std
fmulp
enter
repnz
test
enter
fucomi
stc
aad
ffreep
hlt
fsubp
jmp
mov
rorl
jecxz
stc
fldl2t
ss
in
dec
ss
rcl
in
xlat
into
cmp
xchg
cli
movl
in
in
sub
out
std
fst
jmp
cld
cmc
test
add
std
fmull
xchg
mov
repnz
rol
cmp
out
iret
hlt
fcom
loopne
loop
fcmovb
incl
aad
int
xchg
out
lret
lock
ss
lret
cmp
stc
sbb
ret
mov
leave
int
lret
in
cs
int
aam
lock
ljmp
loope
loopne
hlt
enter
int
out
out
leave
fcom
in
out
out
lret
loope
clc
int
in
mov
iret
fdivr
cld
xchg
in
in
aam
out
repnz
rcr
sarb
mul
test
fildl
xchg
jecxz
mov
xchg
repz
xlat
aad
call
cmp
xlat
incl
fld
loopne
in
in
out
in
jecxz
iret
aam
idivl
incl
loope
fucom
clc
in
mov
cli
in
enter
loop
shr
div
aaa
aas
sar
sti
xlat
ds
cmp
in
fsub
imul
std
in
adcl
fcmovnu
idiv
in
repz
in
push
bnd
fiaddl
fst
sar
das
ret
out
ror
in
sar
fcmovu
lret
cld
std
ret
jmp
clc
std
cli
rcr
lret
hlt
in
int
xlat
out
cli
clc
ljmp
ds
test
in
out
loopne
xchg
sarl
clc
jecxz
not
hlt
ljmp
div
loopne
aad
in
cli
fmull
int
sub
neg
int3
lret
cmc
loope
lock
rcr
or
mov
xchg
jmp
into
fucompp
out
out
aam
and
fcmovnb
test
cli
icebp
mov
mov
mov
ret
lock
shl
xor
aaa
lock
repnz
aas
and
lock
fdivr
mov
xchg
xchg
into
lret
rcl
enter
iret
sar
cmp
xchg
xlat
test
addl
xchg
ret
shl
xor
fsubr
faddp
clc
call
cmp
enter
test
loopne
fdivr
mov
shll
out
sar
aaa
cmp
fsubp
out
in
movb
shr
enter
aam
fnstenv
fdivr
sarl
incb
stc
aam
out
cld
fdivp
rcr
repz
hlt
cmp
in
leave
leave
lret
ffreep
les
sub
in
int
fucomp
mov
repz
cmp
ds
clc
aam
test
xlat
jecxz
fmul
loop
in
jmp
xor
in
imul
cmp
cmp
sti
cmp
rolb
repnz
std
nop
mov
das
in
aam
in
aaa
xabort
lret
stc
ljmp
xchg
xchg
decl
aas
fisubrs
ret
int3
lock
call
int
clc
sti
out
out
loop
mov
lret
lock
rcl
divb
hlt
lock
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
xchg
lods
cmpsb
sub
jl
enter
sti
stc
div
sarb
loope
idiv
or
sti
fildl
into
out
clc
std
icebp
not
aaa
into
cmp
lock
ret
shl
in
out
out
icebp
call
ds
out
stc
enter
shl
cmp
iret
xor
jmp
imul
fmul
dec
in
nop
int
hlt
cs
sarb
rolb
cmp
sub
fucom
jecxz
xlat
enter
cmp
xor
sar
rcr
clc
fld1
loope
jecxz
lret
loope
fsub
in
jmp
mul
jmp
fcmovne
rcr
addl
lret
out
out
loopne
aad
out
sub
fdivs
fcomp
fldl
cli
icebp
stc
jmp
lds
in
lock
ror
sti
icebp
cmp
imul
rcl
out
cmp
test
sar
fcmovnb
out
testl
int3
hlt
fcomp
out
imul
fucomp
inc
ret
xchg
test
fadds
repnz
mov
sub
xor
aam
into
out
fiaddl
fmul
in
out
into
shl
icebp
ret
aam
xor
sti
loope
rcl
cmc
roll
loopne
incl
ret
into
repnz
in
cli
cmc
lock
fcomp
jmp
mov
std
xchg
into
jmp
xor
repz
fldl2t
stc
repz
cmp
aad
cmp
clc
out
fisttpll
int3
out
loopne
aaa
in
enter
loopne
std
rolb
leave
loop
rclb
xor
ss
xor
aam
fst
fsqrt
cmc
aad
xchg
mov
mov
shl
out
out
cmc
fucom
fsub
fdecstp
int
in
in
stc
rcl
in
fcmovu
mov
in
mov
mov
into
out
cmp
fndisi(8087
lret
sti
xlat
fcmovnb
faddp
mov
loopne
ret
jecxz
xchg
ds
out
cli
iret
shr
aas
aam
rcl
icebp
icebp
int3
test
cli
test
loopne
clc
fdivr
cli
loopne
xrelease
hlt
cmc
cld
fdivrl
int3
clc
rolb
enter
fstp
xchg
lret
into
out
shll
ret
fcom
stc
cmc
sar
call
rol
fucomp
in
addl
jmp
imul
hlt
repz
sti
test
out
leave
clc
aas
loope
out
mov
jmp
ror
in
in
ljmp
sarb
fabs
xlat
fucomip
sti
out
fmulp
mov
out
mov
xor
stc
into
rcl
aad
fcmove
into
cmp
cli
fdivr
xchg
xchg
mov
ret
xor
repz
fucomip
add
aad
call
mov
cld
cli
iret
test
aam
in
aaa
leave
ds
fidivrl
fsubp
aam
ljmp
ljmp
sub
icebp
lret
in
aas
cmp
aam
call
loope
int
lock
std
shlb
repnz
shr
cmp
or
sti
or
jecxz
sar
shl
aaa
rcl
int3
jmp
incb
jmp
call
fdiv
repz
out
jmp
int3
xor
cmc
repz
xlat
cmp
and
xchg
aas
test
lret
jmp
jecxz
cmp
lock
int
ljmp
fsubp
in
loopne
loope
movb
out
fld
cmp
sarb
loope
decb
out
in
lret
xlat
out
xor
jmp
iret
hlt
out
sbb
idiv
loopne
cld
mov
out
loop
out
mov
jmp
int3
in
loop
fcmovnb
cmp
fsubrp
fdivrl
test
lds
test
out
mov
fcomip
xor
lock
lret
aam
aas
cmp
int
rol
call
out
xchg
out
mov
ds
aam
enter
xor
aam
ljmp
mov
iret
clc
lock
out
mov
out
das
out
xlat
leave
cmp
aad
enter
rcr
aad
aam
out
lret
ljmp
out
leave
in
fcmove
cld
int
xlat
addl
add
leave
int
int
int
mov
aam
sub
je
cmpl
fcmovu
in
stc
enter
out
and
shl
xchg
in
in
cmp
jmp
in
cmp
repnz
sar
xchg
call
stc
ljmp
out
xor
xor
stc
int
fucom
in
cmp
jecxz
fimull
fcoms
out
repnz
cmp
cmc
int
cmp
in
cmp
stc
addb
std
fst
cld
loopne
loope
int
xor
sarb
push
loopne
les
lret
hlt
test
loopne
cld
lret
movl
in
sti
in
stc
fidivrl
fcmovnu
sti
fisttpll
rcr
mov
loop
xor
in
clc
std
cmp
cmp
fnstsw
test
ds
imul
std
fdivrp
icebp
xchg
ds
xor
cld
shl
fidivrl
std
in
loopne
out
xlat
ljmp
repz
sub
lret
xor
aad
rcr
call
hlt
loopne
rol
ffreep
mov
fcmovnu
enter
sub
cmp
enter
fiaddl
aad
shl
loop
in
into
fsubrp
rcr
dec
aas
cs
xor
cmp
repnz
aad
fiadds
in
fsub
stc
lock
out
in
aaa
ret
clc
leave
int
cli
into
jecxz
out
mov
in
jmp
hlt
loopne
mov
iret
std
in
xor
aam
in
xlat
icebp
lock
ret
loope
jecxz
sbb
out
jecxz
jmp
test
out
in
rcl
rcr
cmp
out
into
loopne
repz
rorb
leave
rcl
test
cmp
cld
xlat
cmc
aad
in
in
mul
sbb
lret
jmp
orl
std
repz
vpaddsw
std
fcmovnbe
not
idiv
out
out
shl
out
fadds
nop
mov
hlt
shlb
les
stc
rcr
fcomi
cmp
icebp
sti
in
lret
cld
rcll
shr
enter
out
jmp
std
int3
rol
fxch
hlt
div
int3
ljmp
aad
jmp
aad
leave
lret
cmp
int
sbb
std
std
lret
clc
shr
xchg
rol
into
lret
call
cmp
fldz
fdivr
cli
clc
mov
jmp
vpminub
loopne
ljmp
hlt
lret
aaa
out
cs
cld
aas
ror
fildl
fimuls
std
int3
mov
xchg
fstl
repnz
in
fstpt
int
hlt
shl
cmc
xchg
xchg
xlat
out
clc
neg
into
out
loop
xor
xlat
ret
into
cmp
fdiv
cmp
fmul
out
lock
ds
in
cli
fadds
jmp
rcl
aaa
fcomp
fyl2x
icebp
cmc
cmp
div
sbb
loopne
cmc
ljmp
jecxz
mov
ss
lock
cmp
ds
aad
neg
cmp
mov
cli
iret
lret
jecxz
into
xor
ljmp
into
jecxz,pt
faddp
ds
or
xchg
enter
cmp
dec
stc
jecxz
neg
jmp
ljmp
xchg
xchg
in
xor
cmp
xor
idivl
cmp
std
iret
fadds
stc
into
fdivr
ljmp
out
xor
out
ss
aam
fcmovnbe
mov
xchg
loope
out
or
sub
in
lret
ror
repnz
add
out
aas
xchg
call
orl
cmp
lret
cmp
hlt
icebp
ret
mov
fldl
int3
out
sub
cs
jmp
cmp
fsub
hlt
ljmp
nop
out
xor
aam
cmp
cmp
fcmovne
repnz
neg
rolb
in
into
mov
cmc
aad
jmp
enter
push
fidivrl
call
shl
jmp
loope
fld
jmp
in
xor
cmp
out
out
in
leave
fcmovbe
sbb
shl
fsubr
jmp
xchg
xchg
ror
out
icebp
iret
out
std
in
clc
cld
cmp
cmp
loopne
div
std
test
out
mov
lock
rol
xlat
fxch
cli
loope
out
ljmp
jmp
dec
clc
jmp
aad
leave
lret
fstp
aad
mov
ret
test
add
rcr
fsubr
fdiv
out
shl
sub
ss
jmp
std
in
loope
fcmove
cld
test
in
jmp
nop
loop
repnz
repnz
iret
out
in
xor
into
xor
xlat
cld
stc
fld
fadd
rcl
testb
xchg
call
divl
lret
cmp
lock
int
cld
loopne
neg
ljmp
xchg
jmp
das
jmp
cmp
fistpll
cli
hlt
sti
clc
enter
mov
xor
out
cmp
in
cmp
fcmovu
sarb
xor
shl
fcmovnu
out
xchg
fiadds
shlb
shlb
repnz
call
aas
cmp
lock
test
imul
faddl
xchg
into
cmc
icebp
cs
sub
icebp
repnz
fcompp
testb
ret
fmulp
xor
shr
fstp
cmp
cmp
ljmp
jecxz
sti
out
xchg
fucomi
test
into
sub
sub
ljmp
cld
and
std
les
cmc
cld
mov
icebp
out
ror
cmp
cmp
cmp
cmp
sbb
call
jecxz
addb
cmc
clc
cmp
repz
in
loopne,pt
stc
fcmovnb
f2xm1
ret
stc
jmp
out
xchg
into
out
lret
leave
cld
cmc
iret
out
fstp
xlat
lock
vpslld
mov
out
orl
lret
into
out
sti
out
repz
xor
cli
loop
fadd
into
jmp
mov
ror
out
jecxz
jmp
repnz
out
out
lock
fnop
sti
mov
int3
fsub
hlt
shlb
xor
xor
xor
cmp
in
cmp
fst
ret
fdiv
stc
loop
fcmovne
mov
jecxz
lock
rcr
fldln2
cli
enter
lock
cld
aas
cli
loopne
incl
loop
ret
xor
enter
lret
cmp
fdivrp
cmp
fisttpll
shr
shlb
rcr
lret
std
call
rol
cld
stc
mov
in
leave
int3
enter
shr
ss
in
in
std
cld
jmp
in
icebp
repz
jmp
in
mov
repz
out
xlat
loop,pn
into
sar
or
int
test
hlt
shl
sar
mov
in
adc
rol
ret
clc
xlat
cli
cld
cmp
clc
std
xlat
fcmovnu
decl
lret
jecxz
rol
fidivs
shl
aaa
fstpt
cmp
lret
hlt
loopne
xlat
rorb
icebp
std
in
enter
fidivs
shl
cmc
rcl
out
cmp
fsubr
rcr
ret
sti
aas
stc
loop
aam
jecxz
mov
out
decl
fucomi
in
cs
fcmovu
cli
ds
loop
out
clc
vpaddusw
xchg
cld
mov
leave
loope
imul
int3
aam
aas
ljmp
sar
mov
loop
mov
and
mov
xor
cmp
cmc
icebp
in
lock
fiadds
lds
iret
lret
mov
nop
aad
shl
in
fdivs
hlt
cli
xor
cmp
fsub
cmc
testb
into
test
cmc
xor
fucomi
aam
xor
fcmovne
shll
adc
fdivrp
mov
loopne
iret
rcr
jmp
xor
icebp
rcl
add
in
std
fmul
neg
jmp
cli
clc
jmp
in
xchg
ror
imul
out
out
out
lret
fdivrs
sbb
xchg
addb
ror
lret
ds
shl
fdivs
ror
cld
shr
hlt
fcmovb
aad
cmp
lret
stc
in
or
xlat
shll
sub
xor
into
out
sti
rcr
into
cmp
fdivr
incb
in
loop
xchg
mov
faddp
xor
shr
std
call
cmc
mul
hlt
loop
loop
stc
aam
out
icebp
out
jmp
shl
in
div
int
icebp
aam
lret
cld
ss
test
fdivr
ds
iret
loope
fisttps
in
cmp
das
cmp
cli
fst
aam
in
loop
cmp
bnd
xchg
mov
fdivp
out
jecxz
icebp
hlt
jmp
dec
rol
iret
iret
cmc
xchg
leave
ret
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
cmpsl
mov
add
call
xor
aaa
fdivrs
lock
sti
xor
cmp
int
in
repnz
ret
out
fcomp
in
fmull
aad
aad
out
iret
shr
stc
out
cmp
cmp
ret
sti
mov
mov
shl
rol
fcmovnbe
clc
fnsave
stc
cmp
sti
std
les
lret
out
xchg
int3
jmp
aam
in
out
out
ljmp
aad
rcl
mov
loopne
loop
nop
xchg
loopne
jmp
cmp
out
lret
cmp
lret
loopne
fcmovb
mov
call
ret
mov
sub
icebp
cmc
jmp
xor
cli
not
out
cmp
adc
stc
aam
cld
adcb
xor
fcmovb
out
std
std
aaa
fsubp
shl
loope
and
xlat
cld
lock
loope
repnz
ljmp
neg
leave
cmp
iret
fdivs
xor
fdivrp
lds
fcmovu
in
jecxz
ret
ljmp
fnstsw
stc
jecxz
test
xlat
xlat
lea
faddl
xlat
loop
out
fcom
lret
aad
sar
in
aad
in
loope
icebp
xchg
cmc
xlat
in
aam
xor
int3
repz
fld
mov
xlat
xor
iret
nop
sub
leave
loope
ljmp
std
sarl
lock
cld
loop
roll
xor
stc
lret
cld
ret
sti
shll
out
out
sti
fisttpl
std
xchg
xchg
ljmp
aaa
aaa
ljmp
ljmp
shl
xchg
jecxz
repz
lret
call
int
ds
cmp
ds
out
clc
fcmovbe
xlat
cli
out
int
ljmp
fdivs
idivb
jecxz
in
ffreep
out
fdivr
mov
sub
shll
int
icebp
out
jecxz
rcl
in
aam
and
fcomi
xchg
fsubrp
xor
call
aad
adc
jecxz
cld
enter
cmp
shlb
jmp
icebp
sub
ss
std
clc
mul
push
rolb
fldl
shl
sub
ret
call
cmp
rcl
stc
cmc
cmp
orl
jmp
xor
in
aad
push
aam
ljmp
test
or
mov
mov
in
aad
in
aad
out
ljmp
in
loope
out
xchg
cmp
lret
fucomi
out
out
leave
xlat
cmp
repz
addb
aam
xchg
add
out
lock
repz
ljmp
repnz
out
bnd
test
loopne
rcl
call
aam
ljmp
loop
out
ret
mov
or
in
loopne
out
lret
int
ljmp
xchg
loopne
mov
addl
xor
cmp
fmul
rcr
fcmovbe
cld
ret
sbb
out
shl
sbb
xchg
sti
icebp
rol
cmp
std
ret
shl
cld
repz
aad
lret
mov
ror
repz
loop
cmp
clc
int3
aas
jecxz
aam
jmp
stc
fcmovbe
mov
sti
testl
shl
repnz
jmp
std
cli
out
aam
cld
out
rol
mov
jmp
xchg
xchg
repnz
aad
aaa
aam
sbb
faddp
and
jmp
in
orl
out
hlt
clc
not
jmp
lret
fucomip
xchg
rolb
incl
mov
ljmp
std
cmp
in
in
out
clc
fprem
sub
cld
in
jecxz
cmp
cli
fidivrl
lret
cli
rcl
std
addb
xchg
out
fcmovne
loope
aam
xor
aam
lret
call
out
test
aaa
std
cli
stc
out
iret
fdivp
enter
cmp
cli
call
lret
clc
cmp
mov
fdivrs
xchg
fucomip
fsub
rclb
jmp
xlat
aad
rcr
fstp
push
dec
mov
add
stc
aam
jecxz
std
cmp
cli
cmp
stc
out
loop
addb
in
in
mov
loop
xor
into
cmc
ss
cmp
std
lock
out
les
jecxz
mov
std
fmulp
xchg
ret
in
aaa
out
lret
shr
stc
in
not
mov
cmc
ret
jmp
int3
repnz
iret
subb
shl
leave
in
out
jmp
cli
aas
ss
cmp
out
mov
int
icebp
xchg
shl
sti
jmp
aad
std
aad
rcl
cmp
stc
in
clc
mov
jmp
jmp
lock
std
std
shr
hlt
in
fiaddl
fsubp
out
shl
jmp
cld
lea
aaa
sar
out
sti
dec
loop
hlt
into
mul
cmc
fisttpll
mov
ror
xor
cli
out
ss
std
fadds
test
mov
icebp
mov
out
jecxz
cs
fcmovbe
enter
into
lret
sbb
out
stc
lock
neg
aad
fcom
fsubrp
nop
ljmp
shl
out
xor
aaa
in
cmc
ss
fcomp
hlt
fimull
repz
mov
das
hlt
lret
iret
xor
aam
inc
cmc
fcomi
into
xor
add
fmull
cmp
hlt
enter
aas
in
rcl
xchg
fnstsw
fiadds
loope
jmp
rol
xlat
sar
xor
lock
cli
add
test
in
fyl2xp1
mov
adcb
leave
xor
xor
repnz
into
ds
out
fdivr
mov
fucom
mov
ror
sti
jmp
int3
std
shr
clc
sar
ret
ret
sti
loopne
sti
test
loopne
cs
aaa
cmp
out
rcr
stc
icebp
fdivr
fdivp
in
jecxz
mov
lret
test
test
add
fsubr
loopne
aaa
xor
cmp
fdivr
iret
sub
ret
lock
ret
jmp
mov
enter
orb
ror
clc
cmp
loopne
repnz
cmp
rolb
lret
stc
loope
out
into
ljmp
repz
out
adc
roll
xchg
iret
loopne
int3
iret
loop
jecxz,pt
in
xor
lret
shl
cmp
fldl
jecxz
in
in
out
movb
iret
jecxz
jmp
cmpl
test
jecxz
jmp
in
int
lret
into
ljmp
loopne
repnz
stc
fcmovbe
xchg
xchg
jmp
lret
rol
iret
xlat
icebp
cmp
cmp
icebp
stc
fdivrp
jmp
in
jmp
lret
out
out
jmp
fcomp
call
sub
repz
sar
sti
jecxz
repz
lock
lret
out
ljmp
lret
repz
lret
xchg
in
in
rolb
int
aaa
fxch
in
cmp
aam
ds
aam
test
repnz
adcl
rcl
cmp
hlt
cmp
fdivr
fcmovnb
cmp
aad
cld
rol
ret
out
test
out
cmp
in
icebp
aas
lock
cmpl
loope
fcmove
xchg
jmp
in
xchg
out
jmp
hlt
in
fcmovnb
sti
faddl
xor
testl
mov
test
in
int3
aam
ljmp
aam
jecxz
iret
loopne
ret
int3
fmuls
jmp
out
cmp
cli
lock
roll
loop
fnstcw
loopne
in
fsubp
mov
rcl
not
cmp
cld
xor
cmp
in
cmp
out
into
cli
fcmovu
loop
ret
jmp
mov
icebp
int3
stc
clc
cmp
fnstenv
in
aad
out
aam
cmp
xchg
test
adcb
div
out
shl
lret
repnz
in
sarl
xlat
rol
hlt
aas
rol
fcmovbe
mov
fucomp
movl
ss
jmp
ljmp
roll
mov
call
into
in
leave
leave
out
shr
shl
sti
shl
sbb
int3
or
fucomip
cmc
shr
clc
cmp
add
jmp
ds
leave
fstp
ret
lds
ret
jl
add
cmp
xor
fcmove
in
rol
cmc
stc
hlt
cmc
cmp
cmp
loope
ljmp
jmp
icebp
loopne
in
repnz
test
fisttpll
sti
test
xchg
out
cmc
out
cmc
stc
ljmp
in
loopne
in
in
loope
shl
ret
fcmovu
lret
fsubr
int
hlt
mov
int
sub
cmp
out
jmp
shl
in
std
shl
in
in
cli
faddl
iret
lret
cli
out
div
cmp
int3
ds
aad
xchg
test
ljmp
ljmp
out
cmp
loop,pt
fcmovu
mov
and
fdivl
xlat
div
out
fdivl
aam
repnz
push
rcl
fcmovbe
leave
roll
fmull
rcr
sarl
cli
shl
aam
ljmp
out
in
mov
mov
incb
xor
ror
xor
fmulp
cmp
aam
fcmovu
out
ljmp
repnz
enter
fstp
sar
int
out
iret
repnz
aad
fcomp
addl
xlat
ret
aad
lret
hlt
fsubrp
cmpb
rol
mov
in
in
aad
icebp
cs
lret
div
icebp
call
xor
shl
sti
mov
cmp
int
mov
shr
in
out
fst
cmp
repz
cld
fcmovnu
cmc
repnz
cld
enter
cli
out
xor
shl
jmp
xlat
cli
fdivrl
test
stc
fld
xchg
lret
leave
filds
clc
repnz
in
hlt
out
enter
cmp
test
in
cli
leave
faddl
loop
ror
ret
stc
out
aam
rcr
cmp
xor
aas
cli
stc
loopne
fadd
int
jmp
xor
out
aam
into
cmp
cs
fnsave
clc
neg
fsubp
in
shl
repnz
and
iret
fiaddl
out
ret
cld
out
cmp
lret
lds
in
xlat
enter
xchg
xchg
loope
xor
aad
lret
out
cli
f2xm1
int3
in
int3
call
stc
cli
iret
lret
mov
out
cmp
ret
fidivrl
int3
aam
cmp
clc
loopne
ret
lret
out
out
call
hlt
out
xor
repz
aaa
clc
sti
xlat
cld
aam
test
xor
orb
xrelease
ss
in
out
iret
repnz
clc
bnd
test
loop
std
filds
in
mov
in
aam
cmp
lret
ret
clc
clc
jmp
sbb
mov
clc
into
iret
jmp
aad
jmp
rcr
idiv
jmp
fcmove
test
xchg
leave
xchg
mov
mov
lret
fsubr
xor
rcr
xlat
fcmovnu
repz
sarl
ds
and
mov
jecxz
in
nop
int3
ds
xor
out
enter
rcl
loop
aam
ffree
in
neg
test
lock
leave
xor
out
sarl
hlt
cmc
std
loope
shr
hlt
fsubp
cld
lret
xchg
rcr
lret
shr
icebp
xor
aas
shl
xlat
sti
cmp
ret
call
sub
int
in
lret
lock
iret
ljmp
fsubp
lret
clc
fnclex
fcmovu
ficoms
aaa
out
fdiv
ror
rcr
ret
out
ds
rcl
ret
clc
fsub
loope
rcll
lret
fcmovne
out
clc
cmp
stc
lock
aad
cmp
repz
xor
in
out
out
lock
int
ljmp
ljmp
loop
fstp
fucom
addb
repnz
xor
shr
int3
icebp
cli
repz
loope
int
mov
int3
lea
icebp
jmp
lret
cmp
sub
repnz
mul
out
xchg
out
lret
loopne
into
icebp
lret
repnz
fmul
sar
ftst
fldl
les
out
out
call
jmp
shlb
iret
icebp
rolb
and
hlt
mov
cli
fstp
int
nop
mov
in
loope
call
cmp
testl
add
add
sahf
add
add
lret
fcmovne
inc
clc
adc
lcall
jl
add
cmp
jecxz
ljmp
or
shr
out
loope
out
icebp
fdivrl
int3
aad
aas
sar
ror
stc
loopne
popl
hlt
out
loopne
cmp
shl
jmp
std
int
loope
fscale
mov
and
rorl
xor
call
xor
into
shl
fsubp
sbb
cld
mov
xchg
mov
xchg
loopne
stc
lret
cmp
std
xlat
loopne
hlt
aam
xchg
fnstcw
jmp
out
mov
push
jecxz
mov
fnsave
fcomp
jmp
idiv
xlat
cmp
fidivrl
fdivrp
nop
out
jmp
in
lret
les
enter
xor
rcl
sbb
aas
loopne
mov
out
out
fsts
ret
jmp
cs
std
int3
sar
fcomi
lret
fcomip
cmp
test
leave
in
test
xchg
jmp
shll
into
int
int
std
pushl
cmp
rcr
shl
stc
call
std
cli
sub
loope
aad
in
ret
iret
out
cmp
testl
enter
xchg
test
out
repnz
sar
lret
in
in
lret
in
cmp
cld
out
aam
mov
in
mov
jmp
fdiv
cli
xor
int
cmp
clc
shl
lock
fdivp
les
out
out
clc
out
leave
rcr
aaa
aad
cmp
hlt
xlat
rcr
rol
mov
fsincos
xlat
jecxz
in
repz
shl
repnz
loope
icebp
or
mov
fst
enter
xchg
iret
aaa
shlb
cmp
int3
sti
hlt
addb
mov
sti
incl
jmp
vcvttpd2dqy
fucomip
in
sti
xchg
ffreep
cld
movb
loop
jmp
stc
int
xlat
fldpi
cmp
out
xlat
cmc
test
cli
in
sub
in
int3
into
ljmp
int3
addb
fucomp
jmp
nop
mov
xor
enter
cmp
in
fdiv
aam
xlat
fimull
add
aad
int3
iret
lock
lock
sti
fdiv
sarb
loope
aam
fld
xchg
jmp
in
aaa
loopne
lock
iret
not
rcl
std
int
into
incb
ret
mov
or
xchg
sti
cmp
out
cld
xlat
sti
cmp
xlat
xchg
addb
jmp
mov
sub
lret
repz
rcl
xlat
ret
fldl
sti
icebp
ljmp
das
in
fcmovnbe
aad
aaa
lret
stc
xor
cmp
loop
in
out
aad
fadd
mov
out
call
ret
hlt
int
rolb
aad
xchg
test
stc
clc
lret
std
lock
int3
xor
cmp
sub
fcmovnbe
xor
loopne
xor
test
addl
call
clc
ds
ret
fiaddl
leave
addl
out
xchg
ljmp
cmp
repnz
hlt
into
ljmp
shl
fdivrp
enter
in
jmp
xchg
in
mul
shr
out
stc
shlb
in
cmp
xlat
cli
ret
rcl
xchg
sub
cmp
repnz
in
hlt
into
ss
jmp
out
cmp
shl
shl
fsubp
xchg
xlat
jmp
stc
ljmp
in
aad
cmp
lret
cmc
cli
sti
cmp
ret
xlat
lock
mov
shl
mov
xchg
and
aam
leave
ss
iret
lret
aad
cmp
rol
or
out
addb
repz
xor
lds
cmp
leave
out
not
cli
int3
in
add
rolb
out
rolb
stc
shl
into
std
hlt
clc
fcomi
in
rcl
in
fmull
cli
fucomip
xchg
in
mov
shr
fxch
leave
aas
fucomip
idiv
icebp
testl
popl
xor
lret
in
cld
not
out
cmp
fiaddl
idiv
xor
out
jmp
shl
loop
cmp
lock
cmp
xlat
addl
dec
call
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
dec
pusha
cmp
into
lcall
xor
out
mul
test
mov
rcr
cmp
xlat
hlt
ss
fcomp
aas
hlt
loopne
fmuls
ljmp
sti
clc
in
cmp
aad
fcomp
lock
rcr
repnz
fcmovnu
loopne
sti
out
rorb
aam
xor
loope
into
cli
addb
mov
cld
mov
cli
cli
nop
in
shl
icebp
ret
iret
xor
enter
cmp
ret
loop
aam
rorl
ficoms
cld
icebp
loope,pt
repz
lret
xlat
into
fdivrl
test
fcmovnbe
in
repnz
xchg
nop
rol
iret
fld
sti
in
iret
clc
into
cmc
jecxz
hlt
in
xlat
shr
jmp
call
lret
repz
cli
repnz
xor
in
dec
iret
xor
ret
hlt
fcomip
ret
ret
mov
int3
rcll
stc
int3
cmp
cmp
out
int3
loopne
ss
fistpll
xchg
hlt
in
in
cmp
into
iret
cmp
test
shl
aam
mov
faddl
lret
iret
xchg
xor
aaa
xor
sti
clc
aaa
cmp
ret
ds
leave
jmp
mov
shl
loope
xchg
sub
xor
ss
ss
jecxz
push
ds
enter
enter
in
loopne
rcl
aaa
xor
shl
rcl
lret
fucomp
test
dec
lret
fstp
lret
xchg
rcr
in
shl
int3
lret
shl
cmp
std
cli
fsubp
jmp
flds
int3
lret
loop
ret
into
cmc
cmp
in
stc
int
cld
hlt
cmp
sti
ffree
mov
out
loope
fisubrs
div
lret
sti
lret
aaa
ror
loopne,pt
ret
testl
into
in
mov
idiv
in
out
repnz
cmpb
loop
cmp
xchg
mov
xor
jecxz
in
icebp
out
fstpt
clc
loope
xchg
rol
jmp
loope
mov
loop
test
jmp
fcmovnbe
cmp
fldpi
in
into
fadd
addl
loop
out
ljmp
das
fcomi
cld
fdivp
lret
into
shr
out
roll
clc
call
in
test
out
ret
ss
xor
fcomi
call
xor
ds
aas
testl
mov
rol
aaa
iret
xor
xor
jmp
cmp
repz
cmc
test
shr
hlt
div
xchg
shr
jmp
fdivs
in
divb
sti
or
fadd
out
sti
mov
incb
mov
jmp
test
ror
rol
into
fadds
lret
call
int3
in
das
lret
ljmp
fidivrs
cld
cmp
icebp
cli
rcr
out
xlat
jmp
flds
sub
xor
cmc
cmc
out
aam
out
adc
addl
out
cmp
repz
shll
cmp
shll
fildl
xchg
leave
mul
out
int
rol
in
ss
ffree
xor
cmp
cmpl
std
sbb
mov
rolb
hlt
clc
ljmp
out
in
jecxz
lock
test
fildl
shl
sub
hlt
call
sar
sbb
ret
out
xchg
in
call
in
xor
into
in
out
fidivrs
sti
lock
icebp
rolb
neg
fucom
fucom
int3
lock
mov
ret
jmp
sti
cmp
clc
cmp
test
loop
incl
icebp
lret
not
cmp
hlt
xor
imul
repnz
aaa
cmc
roll
lret
fcmovbe
sbb
aam
xor
xor
xor
addb
xchg
sar
testl
shr
in
xor
icebp
lret
xor
shl
fcmovbe
fldl
jmp
xchg
loope
sub
loopne
idiv
lret
enter
hlt
aas
idivl
call
enter
xor
iret
ret
jmp
cld
fistpll
out
in
fmull
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
push
xchg
dec
push
sahf
jl
addb
jl
test
clc
jmp
loopne
loope
jmp
lock
fidivrs
lret
add
test
test
in
sti
in
clc
fdivrp
shr
call
in
shrb
xor
div
shl
aam
hlt
repnz
ds
cmc
ljmp
nop
xchg
loope
xor
xlat
fcmovne
cmp
stc
idiv
test
sar
mov
enter
rorb
sub
aaa
cld
lock
jmp
test
cmp
leave
adc
lret
orb
call
cld
fsubr
in
cld
fdivrs
cmp
mov
sti
enter
clc
jmp
jmp
out
lock
loopne
in
xchg
in
fsub
loopne
mov
xchg
loopne
int
ret
hlt
enter
stc
xlat
sti
icebp
cld
aas
loop
in
mov
jecxz
out
in
push
xor
shl
jmp
repnz
ds
loope
fyl2x
call
mov
std
jmp
in
cs
sub
xlat
icebp
fdiv
idiv
ljmp
leave
fprem
sbb
jecxz
in
out
mov
sub
divb
fistpll
hlt
cmp
repz
leave
out
sbb
shlb
call
iret
clc
shl
cmp
test
sti
ret
loope
jmp
orb
out
repz
fdivr
hlt
call
shl
fucomi
xchg
ret
xchg
movb
loopne
hlt
xor
fldln2
loop
xor
stc
leave
lock
cmp
cmp
lds
fdivr
xchg
nop
shr
into
aam
int3
shr
std
cmp
faddl
fimuls
fadds
xchg
in
ret
jmp
enter
cmp
out
cli
leave
test
decl
mov
in
les
sarl
leave
icebp
into
cmp
in
ffree
loope
xchg
lret
lret
repnz
hlt
hlt
lret
xor
lock
lock
cmpb
ds
aam
jmp
in
mov
leave
xor
out
in
cmp
cmp
shr
into
into
out
fdivrs
ret
lds
in
fmull
sub
in
lret
cmp
cmp
rcl
ds
leave
fsub
test
stc
mov
xchg
loop
loope
out
out
xor
fcmovne
xor
cmp
idiv
jmp
lret
mov
call
ret
cmp
out
fdivr
fst
cmp
jmp
mov
addl
cli
fnstsw
aad
aaa
loope
loop
fsub
not
decl
rolb
lret
fcmovnb
repz
into
aad
sarb
cmpb
fcmovb
stc
lret
int
nop
call
aad
out
out
fcom
stc
out
cmpb
stc
std
fcomi
test
hlt
aam
mov
icebp
xchg
xchg
shl
les
les
jecxz
out
aad
in
ljmp
xchg
test
call
out
in
icebp
hlt
stc
shr
enter
jmp
into
cld
ds
div
jmp
int3
enter
in
iret
jmp
clc
ss
rol
jecxz
icebp
fcmovu
shl
std
decl
int3
jmp
out
int3
cli
cmp
xor
testl
cmp
lret
std
xchg
call
enter
aad
add
cmp
neg
cli
jmp
loopne
adcb
loop
jmp
int3
loop
div
cld
sar
enter
sar
out
leave
rol
in
fsincos
out
out
clc
cmp
int
test
ds
std
aam
cld
neg
cld
jmp
xor
jecxz
aad
sar
hlt
fidivrs
int3
lds
enter
int3
lock
rcl
rol
sub
fcmovnb
in
lret
lret
shl
cmp
xlat
cli
in
xchg
into
out
int
repnz
cmp
cmp
cli
xor
fcom
fadd
lock
cld
mov
iret
out
lret
sub
out
xor
int
cmp
cmp
int3
in
rcl
clc
adc
cmp
push
leave
out
lret
shl
enter
xor
cld
in
cmc
test
loop
out
mov
sbbb
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
cld
int
aam
idiv
stc
leave
idiv
out
shl
lret
jecxz
rol
repnz
out
in
clc
out
out
sub
aad
iret
out
aad
hlt
repnz
sti
loope
cli
cld
jecxz
mul
test
xchg
or
sti
cmp
cmp
aad
std
cmp
loop
sar
aas
ret
in
fcmovnb
test
in
fisttpll
lret
out
repz
ret
ret
cld
std
ret
sti
test
mov
loopne
int3
ljmp
jmp
cmp
shl
vcmpps
fiadds
out
mov
stc
cmp
cmp
sti
rcr
ds
cli
into
repz
stc
fcmovb
ljmp
xor
enter
stc
cmp
lock
cmp
fdivrp
flds
sti
fst
jecxz
call
aam
cmp
fsubr
test
jmp
faddl
or
loope
ss
in
shr
leave
aas
xor
loopne
sarl
enter
mov
rcl
ljmp
int
cmp
repz
cmc
in
shl
ljmp
mov
repz
out
lret
in
stc
jmp
loop
into
cld
fdivr
lret
inc
clc
in
xchg
test
ret
repz
cmp
sti
repnz
loopne
aad
loop
loop
and
into
in
xlat
enter
int
rcl
aaa
rol
rcl
cli
test
test
test
in
lret
nop
mov
aaa
repz
out
neg
icebp
repz
xlat
test
fstp
out
enter
stc
mov
loope
iret
cs
loopne
aaa
into
cmp
enter
loopne
shl
fsubr
stc
mov
fucomip
out
fcmove
fucomi
fsubrp
in
xlat
loop
cmc
fnstsw
out
ljmp
lock
shl
imul
in
mov
fldl
sub
repnz
mul
loope
icebp
int
shr
les
loopne
in
into
xchg
in
xchg
cmc
jecxz
icebp
out
das
jmp
ss
addb
ljmp
ljmp
in
xor
xlat
imul
cli
int
aas
rcl
repnz
mov
leave
and
fsubp
clc
mov
in
clc
in
out
enter
cmp
cld
loope
lock
adc
fsubr
in
orb
jmp
imul
int
lock
aas
fadd
stc
out
test
stc
loope
mov
shr
icebp
jmp
add
ss
out
in
hlt
cmp
aaa
sarl
ret
cld
sti
in
lret
sub
jmp
xor
into
fdiv
out
rcl
fadd
out
and
mov
in
xchg
loopne
test
cmp
lret
rcl
out
std
cli
test
fdiv
add
cli
test
fucomi
repz
xchg
jmp
aad
sti
not
leave
lret
xor
cmp
sbb
rcr
enter
xchg
in
repz
in
lret
std
in
leave
stc
aaa
rcl
cmp
fcom
loop
enter
out
clc
lret
aam
repz
into
cli
aad
cmp
xor
shl
cmp
loop
xlat
xchg
neg
div
fsub
cmc
xlat
loop
ror
loop
cld
lock
addb
mov
in
test
xchg
cmc
in
in
ss
cmp
loope
lock
ret
mov
mul
fyl2xp1
ds
icebp
in
jmp
lret
xor
aaa
xor
xor
rcl
test
clc
cli
mov
fmul
shl
loop
jmp
rcl
aad
lret
stc
cld
addl
fucomi
ljmp
xlat
icebp
mul
icebp
lret
cmp
repz
in
out
ds
stc
aam
xlat
mov
repnz
nop
in
iret
shlb
cmp
cld
ljmp
in
test
ds
aam
int3
jmp
out
into
out
hlt
clc
aaa
repz
fucomi
fcomip
in
and
aas
enter
fimuls
and
imull
icebp
xor
cmp
xlat
fdiv
aam
mul
fxtract
loopne
xchg
jb
add
add
or
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
xlat
jl
test
jl
cld
leave
nop
mov
call
rcl
out
xlat
dec
xor
in
aam
repz
leave
clc
in
xchg
repz
shl
shrl
in
repz
int
std
not
hlt
jecxz
incl
cmp
xchg
fnstenv
aam
int3
int
fcmove
aam
cmc
roll
mov
lds
cld
fadd
int3
rcl
into
in
cli
lock
cmp
shl
jmp
repz
lock
xor
call
ds
cmp
fdiv
in
fucompp
call
shl
test
int
cs
enter
in
repnz
xlat
clc
out
ljmp
into
in
les
rcr
cmc
cld
repnz
not
ret
out
addb
mov
shl
int3
shl
jmp
fdivrl
fdivp
aas
fdiv
std
out
repz
enter
lret
in
repz
loopne
sub
call
cmc
aad
fdiv
jecxz
out
cmp
jmp
cld
addl
iret
out
in
shr
in
repnz
enter
addl
int3
frstpm(287
sti
cli
mov
loop
xor
aad
test
repnz
stc
cld
ret
cmp
sti
filds
ficoml
fstpt
shll
out
out
int3
in
out
in
out
test
ljmp
loop
jmp
aas
fcomp
rcl
test
hlt
lret
test
cld
in
adc
loopne
not
lret
repz
cmp
sti
in
shl
call
jecxz
xchg
mov
cmc
in
leave
out
shr
in
enter
lret
iret
fucomi
mov
mov
nop
enter
shl
enter
jmp
sbb
iret
rol
test
testb
mov
lret
icebp
xchg
cs
sub
stc
fsubr
jmp
sar
cmp
sub
test
mov
out
fucomip
mov
out
int3
aaa
lock
out
iret
aam
or
out
idiv
sbb
in
xchg
enter
ljmp
repz
fxch
lret
int
xlat
roll
test
fadd
cli
clc
fucom
repz
int3
xor
iret
lock
bnd
in
rcl
mul
fimuls
xchg
lock
ss
out
lret
iret
and
cmp
ret
leave
fcomip
mov
xchg
xchg
enter
loop
xor
fmul
repnz
lock
call
loopne
cmc
loop
in
ret
xchg
out
cli
xchg
hlt
lret
aam
xor
in
out
stc
enter
sar
loope
std
xchg
fsubrp
movl
lock
xor
clc
stc
loop
in
rol
mov
xlat
les
into
fildll
not
shl
fdivs
leave
leave
hlt
loopne
out
fadds
cmc
ljmp
lock
test
aam
iret
loop
iret
cmp
cli
out
repz
jecxz
clc
lea
fsub
fcom
out
call
loopne
fdivr
mov
xchg
int3
repnz
xchg
xor
cs
addl
or
hlt
fmul
xchg
sti
mov
out
div
jecxz
sub
shr
cmc
fsubrp
into
cmc
loop
xlat
aam
std
sbb
cli
fucomi
jecxz
loop
jmp
call
imul
loope
sti
test
loope
test
aam
test
call
out
stc
fcom
mov
fcmovbe
xlat
cmc
shl
sti
aad
adc
rcr
sti
into
mov
shlb
xor
lret
cmp
cmp
shl
aam
jmp
hlt
ret
aam
stc
fimuls
fidivs
icebp
jmp
call
cmp
call
adc
out
orl
idiv
lret
xor
cmp
fcmovbe
cmc
push
cmp
inc
loop
stc
jmp
fldl
in
stc
aam
cmc
lret
enter
out
ret
faddl
sub
into
push
add
xor
jmp
ret
lret
ror
lret
sub
sahf
in
bound
sub
adc
jl
incl
fmulp
test
xchg
lock
repnz
aaa
idivl
aas
std
loop
cmc
loopne
rcr
loope
in
jmp
out
mov
enter
repz
xor
xor
xor
cmp
fstp
ret
xchg
test
add
xlat
leave
xor
ss
lret
out
cmp
clc
jmp
xchg
nop
in
jmp
in
sub
in
rcr
rcr
cld
std
cmc
aas
test
cld
enter
testb
call
ljmp
loope
fcom
in
aas
out
ljmp
into
repz
loope
xlat
rol
out
xor
out
fiadds
cmc
in
mov
std
test
hlt
iret
aam
leave
fcom
out
icebp
icebp
iret
cld
sar
lock
aad
loope
jmp
mov
xor
cld
out
aad
div
fdivr
fldl
ret
or
jecxz
out
shr
in
in
ret
cmp
lock
loopne
and
xchg
incb
shl
adc
in
out
ljmp
out
aaa
adc
loop
in
test
enter
int3
div
lock
fucompp
cmc
lock
aad
loopne
out
test
aam
rcr
ret
test
cmp
ss
lret
cld
std
ret
xor
ret
cmp
xchg
mov
lea
ret
xor
lret
imul
jmp
ljmp
test
test
int3
in
ljmp
lock
in
out
repz
int
aas
fcomp
clc
xchg
ljmp
repz
ret
call
sub
stc
fdiv
repnz
lret
lret
pop
fsubp
mul
in
cmp
repz
loopne
decl
cmc
repz
out
cmp
xor
cs
cmp
clc
fsubr
clc
icebp
shl
fdivr
in
hlt
jmp
jmp
sti
jecxz
sub
hlt
xor
cmp
rcr
loop
cmp
call
ljmp
xchg
xor
shr
cmp
fistpll
fcmovu
fadds
mov
mov
jmp
in
hlt
aad
f2xm1
xor
icebp
hlt
aaa
jmp
icebp
std
rcl
fdivrs
fcmovb
aad
clc
int
in
fcomip
int
ds
cs
int3
cmc
cmp
aaa
shr
xlat
shl
decl
mov
fsubrp
shr
cmp
fdivr
jmp
stc
clc
int3
sar
jecxz
mov
ret
jecxz
loope
call
in
ret
idivb
xor
cld
loop
lock
fdivrl
neg
in
in
roll
rol
jmp
xor
repnz
rcl
cli
out
ss
mul
mov
out
in
int
xchg
out
aaa
mul
out
std
in
dec
cld
fidivrs
ljmp
jecxz
test
faddl
shlb
int3
fdivrp
lock
out
xlat
rcl
xor
call
nop
int3
int3
jmp
into
repnz
ljmp
cmp
jmp
aam
loope
sti
leave
in
cli
in
icebp
iret
xor
xor
std
leave
out
fsubr
cmp
lock
fadds
mov
xchg
std
out
xchg
lret
out
sub
xor
cmc
cld
incb
aas
fldl
loope
ljmp
rol
aad
jmp
xlat
shl
addb
test
out
enter
xchg
repnz
lret
not
xor
cld
cmp
sti
xlat
lret
mov
loop
icebp
out
ret
shlb
lret
aad
xor
aas
ss
lret
adc
cli
test
int3
mov
ret
lock
sti
lret
out
cmp
fadd
neg
jmp
in
std
out
xchg
and
into
aam
aam
ljmp
loopne
jecxz
aad
fildl
int3
test
out
fdivr
aad
into
lret
out
fcomip
sub
in
int3
cmp
je
jmp
iret
aad
aad
aad
aad
mov
pop
add
jl
add
fdecstp
xchg
sti
cmp
out
lock
in
lret
aaa
cmc
sub
jmp
test
lock
cmc
in
lock
loop
enter
ss
loop
hlt
jmp
cmp
std
testb
in
lret
out
std
repz
shll
repnz
in
fucomi
aaa
test
fdivrs
test
loop
cld
fadd
in
cld
rorb
icebp
out
test
cmp
hlt
into
std
xlat
repnz
loopne
mov
shr
into
cmp
fidivrl
rcr
aad
fidivrl
ret
loope
loope
in
in
sti
and
ret
imull
xor
ret
in
ss
cmp
rcl
rcl
cld
mov
loop
out
aad
in
lret
out
cmp
repz
rcr
cmp
aad
faddl
xchg
iret
sbb
fisttps
stc
out
out
repnz
sti
loop
test
incl
jecxz
stc
leave
ret
mov
jmp
call
int
fdivrs
fsub
std
cli
std
mov
int3
lock
mov
hlt
xor
lret
cmp
ret
cld
rcl
rcl
cmpl
jmp
fstp
ret
xor
cmp
aas
ds
std
fcmovu
jecxz
cli
std
shl
xlat
fsubr
in
lret
loopne
aad
icebp
loopne
div
fcmovnbe
aas
repz
lock
fildl
clc
xchg
mov
mov
xor
clc
ret
int
stc
ss
fcmovnbe
sarl
cmp
sti
fcomi
mov
xchg
test
cmp
int
aas
lret
cld
ljmp
sub
fldl
sub
call
cs
cmp
stc
cmp
cli
mov
in
enter
out
vpavgb
cmc
fstpt
rcl
out
fld
test
add
xchg
test
xor
xor
iret
ds
in
ret
shl
push
jmp
hlt
div
out
cli
inc
lret
cmc
shr
shlb
aaa
call
sarb
cld
in
notb
xor
xor
lret
in
cmp
fdecstp
loope
mul
xchg
cld
leave
fsub
fdivrp
std
incb
xor
clc
xor
idivb
fcom
sarb
rcr
cmp
loop
out
into
in
aam
shr
repnz
cmp
jmp
ljmp
shl
hlt
div
out
ljmp
fadd
iret
sti
cmp
std
xlat
out
sti
icebp
in
fdivp
lret
repz
rcl
fcomp
std
ljmp
lds
faddp
xchg
out
adcl
stc
sti
cli
cmp
ret
hlt
cmp
fcomp
xchg
loope
repz
xor
ss
fdivs
imul
in
in
lret
loopne
xchg
xchg
xor
cmp
test
fstp
frstpm(287
xlat
aad
test
in
enter
in
repz
aam
ljmp
aad
cmpl
out
std
call
lock
rcl
aaa
lret
enter
repz
and
ret
stc
loopne
in
xchg
in
lret
test
ret
stc
in
ffreep
fucomip
lock
aam
test
into
incl
in
cli
in
call
jmp
cmc
in
ljmp
aam
sarb
jecxz
leave
faddl
test
out
cmp
lret
repnz
fcmovne
loopne
xchg
cmp
loope
out
fiadds
xchg
into
in
loope
jmp
fiaddl
ret
test
xlat
sti
mov
repnz
mov
ror
call
hlt
cmc
call
cmp
in
orb
jmp
nop
ljmp
jmp
cmp
ss
cmp
fucomip
jmp
decl
jecxz,pn
enter
lret
icebp
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
sbb
jl
flds
jl
jmp
fildl
rolb
mov
xchg
in
mov
int
ror
divb
fcmovne
cmp
rol
jecxz
mov
fsubp
mov
out
ror
repz
ret
jmp
xor
enter
cmp
leave
cli
inc
faddl
shr
ljmp
sarl
aad
fstp
xor
lret
mov
mov
cli
xor
xchg
sub
enter
aam
fstpt
cmp
xchg
neg
xlat
jmp
mov
rol
shr
ljmp
sti
in
aam
ffreep
xchg
shl
lret
sti
out
test
xor
in
lret
call
roll
fcmovu
out
in
clc
lret
out
lret
jmp
into
repz
xlat
lds
ss
lret
cmp
cmp
call
into
out
cmp
cld
in
out
out
mov
idiv
cld
in
lret
idiv
inc
clc
vpsubw
fcmovnu
into
repnz
into
jmp
repnz
cli
fnstcw
loope
cmp
in
stc
out
cld
leave
xchg
out
shll
int
iret
cmc
call
out
cmp
repz
fsub
xabort
stc
xchg
into
mov
loopne
xor
loop
out
xor
fsubr
fsub
sti
cmp
ds
jmp
in
decb
loop
ss
repnz
aas
cmp
in
icebp
cmc
xchg
aad
lret
test
jecxz
out
divl
lret
cmp
cld
fcomi
ljmp
test
in
mov
ss
iret
clc
fucom
in
fdivrs
enter
clc
cmp
jecxz
clc
cmc
jmp
mov
iret
loopne
jmp
cmc
fucomi
in
enter
add
adc
fsub
fadds
mov
xchg
out
std
fstp
ds
into
loop
cmp
aas
out
aad
orl
loop
iret
into
aam
rcr
int3
leave
int3
ror
fdivrp
loop
cld
xlat
leave
in
hlt
sti
icebp
out
fcmovbe
aad
ret
repz
stc
shlb
cmp
hlt
stc
neg
shr
stc
loope
mov
clc
xchg
iret
fcmovnbe
shl
ret
lret
aad
hlt
fstp
fprem1
loope
sti
lea
mov
xlat
loop
int
rcl
ss
out
rcr
rcr
adc
fstl
vpinsrw
xor
repz
ljmp
adc
aad
testb
repz
lret
out
fcmovne
aaa
std
shl
dec
in
out
test
and
ljmp
shl
out
in
test
out
cmp
fdivl
cmp
jmp
ljmp
in
mov
loop
hlt
out
xor
vpaddb
ss
loop
rol
test
jmp
mov
jmp
das
repz
fdivl
test
fnstsw
lock
enter
cli
loope
mov
int3
out
in
fldpi
out
aaa
sarl
out
repnz
rcr
ret
vpaddq
fimull
test
icebp
rol
in
in
aaa
out
sar
repnz
jecxz
stc
mov
jmp
and
jmp
in
fsubr
in
jmp
dec
out
and
xchg
mov
fcom
mov
int3
xchg
xor
out
hlt
stc
fdiv
int3
jecxz
fcom
ret
loopne
in
loop
std
fmuls
xor
xor
sti
out
testl
fsub
fdiv
mov
in
lock
xchg
out
sti
repnz
shr
cmp
xlat
sub
hlt
into
jmp
loop
fucomp
cli
xchg
mov
aam
xor
clc
sar
stc
stc
neg
ds
stc
inc
addl
xor
call
clc
cli
int3
cmp
stc
int3
out
in
loop
test
and
orb
repz
clc
xor
cld
aad
lret
sar
jmp
fdivr
roll
addb
ret
fsubr
mov
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
mov
jl
xor
ss
out
cmpb
stc
xchg
int3
into
xchg
xchg
xchg
cs
ret
ljmp
cmpb
out
cli
cmpl
out
mov
int
ret
enter
fxch
in
loopne
ret
aas
xchg
test
hlt
fucomi
into
mov
icebp
fldl
fnstenv
iret
leave
fidivrs
roll
fadd
in
xlat
fadds
jecxz
jmp
in
in
sti
fdecstp
out
clc
clc
rcl
mul
test
stc
test
cld
mov
mov
into
into
in
ss
cmp
fcomi
aam
lock
icebp
stc
loopne
sar
in
jecxz
out
call
cmc
ret
in
leave
fcomi
jmp
jecxz
shl
xchg
sarb
test
enter
sub
lds
cmp
ljmp
fdivl
lock
test
aad
lret
int3
iret
in
cld
xchg
loopne
in
shlb
int3
xor
int3
jmp
cmc
rcr
repnz
faddl
mul
lock
aad
fcmovne
fmul
repnz
cli
cld
addb
jmp
in
in
shl
hlt
lock
int
xor
hlt
icebp
sub
fdivrp
mul
jecxz
iret
nop
loopne
test
rol
clc
fdivs
int
cld
cmp
cmc
shl
test
div
int3
adcl
out
shr
cli
fucom
out
fadd
ror
testl
xchg
sti
and
xor
call
leave
xlat
repnz
lret
out
fnstcw
hlt
mov
ficoms
sar
int
aaa
not
fnstsw
fstpt
lret
sti
rolb
ret
fidivrs
jecxz
lret
fistpll
fbstp
jecxz
xor
lock
sti
mov
fucomp
lret
subl
out
repnz
fdivr
idiv
loop
fcmovnb
mul
fimuls
ret
jmp
cs
lret
push
lret
std
sub
xlat
out
cld
jecxz
jmp
lock
rolb
cli
neg
neg
jmp
lret
rcl
ret
cmp
lret
fisttps
test
ror
shll
fcomp
in
xlat
aam
in
lock
ffreep
cli
xchg
cmc
std
jmp
out
mov
aam
ss
lret
ljmp
aad
fcomp
ds
in
stc
jmp
xor
lret
rcl
cld
idiv
sti
std
aas
cmp
sar
shr
mov
mov
fbstp
shl
lret
xor
test
clc
xor
fcmovnbe
out
sti
neg
test
int3
shl
lea
fdivr
aaa
call
jecxz
shl
aad
jecxz
fxam
out
shr
into
mov
jmp
leave
xlat
out
fcmovnu
fucomi
fmulp
ljmp
loop
hlt
cli
fsqrt
jecxz
xchg
test
into
test
test
jecxz
ljmp
xor
out
xchg
or
in
mov
pause
or
out
xlat
cmp
xor
fsubp
hlt
in
ret
ret
std
jecxz
out
int3
hlt
hlt
cmc
out
leave
sti
cmc
icebp
cli
iret
fdivr
fnstsw
fsub
rol
fimuls
jecxz
cmp
sar
ret
lret
into
iret
rol
lock
iret
cld
fimuls
ffreep
iret
sar
repz
jmp
ss
xor
cmc
xlat
fdiv
iret
int3
fiadds
ret
in
std
shl
test
loop
lret
in
int3
divl
jmp
hlt
and
fcmovbe
jmp
fmulp
enter
fisttps
cmc
shlb
fdivrl
sti
fcmovu
cld
cmp
cmc
cmp
in
adcb
sub
shr
cli
neg
sar
cld
sti
loope
test
fsubrp
mov
sti
mov
inc
int
out
cmp
iret
enter
repnz
cmc
cmp
inc
and
out
mov
shl
bnd
cmc
out
in
xor
loop
loope
xchg
cmp
xchg
out
sub
leave
in
mov
ret
sub
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
and
lcall
jl
lret
repnz
clc
std
int
fxch
cmp
cmp
in
fsub
fstp
in
not
cli
test
lret
rcl
rol
lret
repnz
cmp
idiv
inc
jecxz
xchg
in
shr
nop
fsubp
ret
out
aaa
ror
fdivl
cld
sar
in
test
inc
sti
fmul
cld
stc
fdivrp
in
lret
lret
in
sti
fcomip
test
ds
xchg
add
in
jecxz
loop
in
int3
xor
out
cmp
jmp
in
loope
roll
jmp
mov
xchg
shll
shr
xor
int3
xor
hlt
shl
lds
clc
in
out
mov
fucomp
mov
aaa
loop
shr
out
imul
xlat
aas
faddp
repnz
hlt
cli
out
mov
cld
out
fucom
out
loope
test
divb
into
sarb
aas
xchg
fldl
fcmovne
loopne
ljmp
jmp
loopne
jmp
in
xlat
fiadds
lret
addl
sub
sti
cmp
cmp
mul
repz
out
aam
mov
test
int
xchg
cli
addb
fcmovb
stc
stc
ss
fcmovb
ljmp
stc
addb
in
jecxz
ret
in
cmp
enter
repnz
test
jecxz
aas
aam
mov
mov
xrelease
in
iret
lret
xor
sar
cld
cmp
into
into
cmp
div
cli
in
int3
ljmp
lret
loop
enter
leave
enter
cmpb
leave
cli
jmp
call
xor
iret
rcl
cmp
shr
fcomp
add
int3
stc
cld
fdiv
mov
loop
repnz
cli
ror
clc
int
aad
rcl
stc
faddp
aam
roll
mov
ds
xor
ss
add
aaa
repz
stc
out
in
cld
out
xchg
call
xor
aaa
cmp
fcmovbe
lret
cmp
leave
loope
loopne
jmp
sub
cmc
repz
jmp
lret
enter
shl
and
mov
or
out
into
int
out
shr
xor
fucomi
fscale
fucomp
aad
cmp
stc
out
jecxz
leave
fstl
xchg
aaa
xor
lret
xor
fcom
ljmp
aam
sti
fcos
fcmovne
loop
xchg
sub
leave
out
fbstp
repz
ds
int3
vpmulhw
repz
leave
nop
mov
and
stc
int3
out
lret
cmp
fdivrs
aas
jecxz
call
test
std
jmp
int
mov
leave
int
lret
cmp
fdivp
hlt
test
sti
into
clc
incl
mov
shl
lock
loope
stc
out
div
fdivp
call
in
mov
ffreep
lret
mov
xchg
and
sub
not
sar
xor
orl
int3
int3
in
iret
test
into
sar
shlb
xor
stc
rol
iret
cmp
div
hlt
aas
loop
in
aad
lret
out
loope
shr
vpaddb
lret
test
icebp
rcr
adc
aam
mov
nop
filds
lret
shll
int3
aas
fnstsw
rcl
fincstp
rol
test
fdivp
mov
out
in
xor
not
out
out
out
lret
fildl
stc
clc
loopne
lea
and
xor
aad
aam
lock
lret
test
repz
mov
lret
loopne
fucomp
shl
orl
in
hlt
int
stc
adc
jecxz
xlat
add
out
test
fisttps
ss
aaa
std
lret
aad
out
jecxz
fld
loop,pt
jmp
cli
out
mov
mov
loopne
lret
out
fcmove
lret
cmc
out
idiv
ds
fadd
mov
fucom
xchg
mov
jecxz
xchg
in
int
aas
imul
rcr
cmp
rorb
mov
jecxz
roll
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
ficoml
hlt
out
stc
mov
ror
cmp
sbb
cmp
loope
ret
std
mov
iret
loopne
lret
lret
repnz
in
iret
lret
lock
fnsave
out
mov
loop
test
mov
test
xchg
in
loopne
jecxz
ljmp
clc
rcr
xor
inc
aad
fcmovnu
enter
loope
in
xchg
loope
sub
int
in
cmc
imul
into
rcr
lret
loop
into
out
loop
aad
xchg
fsubrp
cli
mov
lret
jmp
mov
cs
int3
test
in
sar
loope
ret
cmp
aad
cmp
out
lret
loopne
int
adc
iret
icebp
out
jmp
aad
ret
dec
fcomip
iret
cld
jecxz
clc
xchg
jecxz
stc
in
jmp
mov
lret
lock
out
sti
cmp
ss
repz
clc
out
loopne
or
test
xchg
fisttpl
lret
rcl
iret
neg
out
cmp
mov
stc
out
mov
nop
out
mov
aam
xor
fsubr
repz
stc
xlat
in
fcmovnb
repz
lds
xchg
leave
cli
fucomp
aaa
cmc
neg
lock
int3
cmp
push
in
ret
sbb
leave
into
out
lock
ret
into
shl
jecxz
jmp
fmul
aam
cmp
cmp
icebp
hlt
xchg
test
shl
sub
out
idiv
std
cli
fsubp
repz
aam
test
rcr
fsubrp
int
enter
jmp
xor
ss
icebp
cmp
fmul
out
addl
jecxz
fisttps
lock
out
lret
cmc
aas
cmp
mul
call
fdivr
shl
repz
cmp
shl
iret
xlat
lret
lret
roll
cmp
call
xchg
int3
shr
hlt
ss
out
into
sti
hlt
in
cmp
lock
mov
mov
ret
call
xchg
mov
int
lock
divl
ljmp
cmpl
add
test
stc
leave
int
call
mov
icebp
loop
out
leave
stc
jmp
int
adc
loop
xlat
clc
loop
stc
test
mov
int
nop
in
xor
out
in
out
fstp
fdivrs
test
leave
in
fmul
xchg
loope
shl
in
aad
rol
leave
ljmp
out
aam
loope
jecxz
int3
out
into
std
xchg
loope
out
sti
out
clc
test
clc
cmp
fsubp
fnstcw
mov
std
idiv
out
in
fildl
ret
rol
frstpm(287
in
repnz
stc
ss
sti
movl
adcl
xor
iret
cmp
cmp
lret
loop
fiaddl
repnz
out
iret
testb
lret
ss
call
cmp
xchg
cmc
ret
iret
in
iret
repz
out
aaa
stc
sar
ljmp
std
lock
stc
out
fdivr
sti
sar
fdiv
test
stc
ljmp
sti
int
into
jecxz
not
fildl
cli
xchg
lock
loope
lock
aaa
enter
cmp
xor
fsub
shl
repz
shl
mov
imul
enter
xchg
shr
xor
in
xor
sarb
loopne
ror
mov
mov
or
out
sub
xor
stc
enter
fnsetpm(287
mul
xlat
loope
idiv
clc
int
int
in
out
sub
aad
xor
idiv
int3
iret
int3
out
neg
iret
lock
shr
clc
fdivr
lret
jecxz
leave
in
cmc
sti
divb
fmul
std
fdiv
cmpb
clc
shl
idiv
cmp
mov
xchg
fdivr
loop
cmc
bnd
shll
std
rcl
aas
loope
sar
in
mov
jmp
mov
out
repz
shl
iret
in
rcl
aad
lret
cmp
ljmp
in
cmp
loop
call
aas
cld
out
stc
jmp
loope
std
fisttpl
icebp
cmc
aaa
ret
fnstenv
sti
aam
iret
shr
icebp
into
cld
cmp
repz
add
add
add
add
or
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
adc
jl
flds
jl
lret
fdivrp
in
sar
out
leave
cs
shl
lret
sti
mul
loope
fnstsw
icebp
jmp
fsubrp
out
jmp
lret
ffreep
cmc
xor
ret
stc
rol
xlat
cli
call
cli
ffreep
jecxz
aam
xchg
not
in
jecxz
jmp
clc
in
fcom
ret
cmp
fsubr
test
fildl
ljmp
clc
repz
leave
enter
fmul
fcomi
lock
in
loopne
xchg
test
xchg
mov
mov
ds
enter
xor
cmp
cmp
fnclex
fiaddl
lea
ret
in
ljmp
repz
loopne
div
ffreep
sub
orb
call
ret
cs
call
shl
jmp
sarl
addl
shl
ror
int
cmc
in
cmp
out
jmp
in
ret
xlat
lret
leave
in
in
cld
mov
enter
in
int3
fldl
hlt
adc
cld
cld
movb
rcr
int
cmp
std
xlat
in
sarb
adc
flds
xchg
mov
out
cld
mov
rolb
hlt
leave
xor
out
adc
fcmovu
fmuls
loop
call
fcmovu
sti
rcl
sar
int3
idiv
loope
enter
fimull
cmc
iret
xor
out
rcl
hlt
idiv
into
xlat
ret
in
test
in
addl
loop
out
cmp
cmp
aas
fldl
out
aam
ret
xchg
std
xchg
lock
repnz
in
fstpt
fcmovb
cmp
int3
in
test
out
rol
jmp
filds
out
xor
out
repnz
int
cmp
in
loope
idiv
mov
call
aaa
cs
jmp
in
leave
aad
repz
aas
in
fxam
xlat
call
int3
int
cld
jmp
iret
int
lret
fucomip
in
cmp
repnz
cmc
cli
loop
xlat
fiadds
fsubr
mov
div
ror
aad
xor
hlt
idiv
loopne
repnz
loope
out
cli
dec
mov
fninit
xchg
rclb
lret
xlat
cmp
xor
xor
fadds
loop
out
rcl
xchg
jmp
ret
repz
xor
cmp
cmp
neg
out
fadd
mov
fcmove
cld
loopne
leave
in
iret
std
xlat
cmp
xor
out
cmp
fdecstp
fmul
in
test
ss
icebp
ljmp
shr
test
icebp
aad
faddl
cld
lret
out
rolb
jmp
icebp
fdiv
ljmp
jmp
sbb
and
aam
out
rol
fdivr
aam
lock
icebp
test
ret
call
clc
cli
enter
repz
rcr
shl
repz
jecxz
fdivl
stc
loopne
cmp
loopne
cmc
out
lock
lds
cmp
int3
sub
loope
cmp
fdivr
jmp
cmp
mov
xlat
sar
hlt
out
cmp
ljmp
loop
ret
mov
out
mov
xchg
aam
xor
fcmovb
xor
int
aad
lock
loop
fisttps
nop
jmp
mov
aam
out
sti
std
enter
sarl
inc
idiv
into
rorl
cld
out
test
fdivr
ljmp
out
leave
std
out
into
xlat
int
stc
repz
mov
xlat
in
movb
fstl
jecxz
into
sti
enter
cmc
test
stc
loop
jecxz
enter
decl
xor
lock
shl
xlat
repnz
out
loope
leave
leave
jmp
hlt
das
shl
xor
hlt
test
cld
leave
rcr
aam
repnz
fsubr
fildl
lock
mov
bnd
out
iret
int3
cmp
xor
sarb
rol
cmc
mov
jmp
lret
aam
fstp
fisubrl
push
int3
add
mov
jl
add
fnop
sub
fadd
in
fldl
repnz
call
sti
loope
rol
sti
out
ffree
lret
out
xchg
loopne
int
lds
icebp
cld
shr
ret
xor
xchg
jecxz
mov
loop
addl
xor
cmp
jmp
iret
mul
lock
stc
jmp
add
shl
aam
aad
in
rcl
cli
aam
aaa
cmp
aad
shl
cld
lea
xor
aaa
cs
jmp
ljmp
idivl
jmp
fsubr
xchg
xchg
aad
aaa
les
fcmovb
in
imul
cmp
rol
cmp
xlat
fiadds
lret
xor
stc
fnsave
cmp
sti
fcomp
call
int
loop
xchg
jmp
clc
xlat
cmc
call
neg
loop
loope
xchg
rol
cli
addb
loopne
out
in
hlt
in
call
ds
in
fcmovb
xor
icebp
in
mov
jmp
stc
cmp
cmc
fcmovnu
faddp
test
cld
fcmovne
mov
xchg
aad
idiv
in
aam
fdivrs
cmc
loope
sti
shr
rcr
fsub
repz
mov
rorb
jmp
loope
cmpb
xchg
xor
sbb
in
test
hlt
lret
cli
jmp
hlt
adc
loop
call
fsub
xchg
test
xchg
rcl
aam
out
sarl
fsub
jecxz
cld
fdivr
cmc
ret
decb
in
lock
xor
fxch
repnz
cmp
std
cld
test
mov
test
loope
loope
nop
rcl
imul
out
out
xor
jecxz
aad
rol
jmp
jmp
lret
shl
in
xor
out
shr
std
sarb
std
rorl
adcl
xlat
into
out
fldl2e
sti
sti
int3
fcmove
frstpm(287
cmp
aad
test
mov
xor
xchg
shrl
ror
sub
out
iret
sti
fucomp
xlat
loop
test
loop
xchg
in
mov
mov
nop
jmp
cmc
shl
lret
int
cmp
aas
or
test
aam
sti
lret
stc
leave
in
mov
out
les
aam
ss
cmc
testl
loopne
in
xchg
out
cld
repnz
shrl
cmp
stc
call
hlt
rcl
loopne
xchg
aam
rorb
mov
test
lret
xor
xor
ss
shr
test
fpatan
repnz
xchg
rolb
in
leave
jmp
icebp
xlat
cmc
cli
out
xlat
sti
std
std
aad
hlt
repnz
fdivr
xchg
sbb
mov
xor
aaa
out
xor
adc
addl
loopne
mov
out
roll
ret
cmp
jmp
lret
xlat
sub
cmp
sbb
out
in
mov
repnz
hlt
ds
mul
sti
int
fnstsw
icebp
faddl
enter
std
xchg
ficoms
sub
out
int3
lret
call
stc
loopne
sarb
in
fmuls
xchg
mov
sub
out
aam
repz
cmp
sarb
sti
cli
sbb
jmp
xorb
jmp
shr
in
cli
rol
test
testl
test
ss
xor
repz
jmp
cmp
cmp
lret
in
call
aaa
int3
into
ret
cmc
cmp
cli
divl
fcomi
or
test
mov
sar
addl
lret
cmp
leave
fdiv
enter
in
fldz
std
loope
cld
mov
jmp
and
xlat
xor
cld
fcomp
cmp
xlat
cmp
cmp
lret
out
leave
xchg
div
aad
shr
cmp
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
sub
fildll
jl
lret
jl
into
hlt
iret
shl
jecxz
test
ljmp
ss
leave
hlt
icebp
shl
fcmovnbe
enter
aad
cmp
aad
cmp
and
in
mov
fucomp
faddp
loope
repnz
leave
shr
lret
cmp
test
hlt
loope
in
out
ljmp
in
repz
int3
iret
call
loop
idiv
les
cli
enter
jmp
loop
hlt
loopne
das
shl
xlat
aad
imul
in
sar
repz
loopne
int
adcl
out
aaa
aam
xor
jmp
sar
ret
ffreep
loop
in
ljmp
shl
in
xor
ffree
dec
ss
fucomip
loopne
sarl
cli
jecxz
mov
enter
jmp
leave
cmp
cli
fnstsw
in
cmp
in
cmc
hlt
cmp
mov
jmp
ljmp
fidivrs
hlt
sti
hlt
test
sti
fldl
xchg
test
xchg
cmc
sub
lock
leave
shlb
xlat
cli
cmp
test
rcr
test
iret
sti
in
in
out
fucom
xchg
ss
cmp
sti
in
ljmp
cmp
loopne
clc
in
addl
shr
cmp
hlt
div
cmc
lock
icebp
add
in
out
xchg
xchg
in
cmc
lret
repz
aam
out
jmp
add
f2xm1
and
out
mov
test
iret
jmp
das
cmp
hlt
cmp
in
cmp
std
fdivr
cld
imul
movl
ss
icebp
xor
repz
xor
ret
cmc
sbb
stc
fimull
mov
jecxz
cmc
nop
hlt
fdivs
xor
in
dec
jmp
cmp
mov
leave
repnz
in
out
jecxz
loop
out
xor
xor
sti
fstp
xlat
mul
ret
mov
fnsetpm(287
int3
adcl
sti
xlat
sti
in
repz
loopne
aad
rol
out
fisttpl
rol
int3
lock
shll
cld
lock
xorl
and
cmc
out
addl
loop
xlat
cmp
xor
roll
sarb
loop
and
cmc
std
and
in
into
loopne
out
repz
lock
cmp
fucomip
ror
xlat
cli
fiaddl
xchg
lret
in
shr
ss
xor
aaa
int3
jmp
ror
hlt
mov
lret
test
nop
cld
out
shr
in
divb
xor
fdiv
cmp
in
aad
faddp
cmp
xchg
rolb
out
in
icebp
cld
ljmp
xor
rcr
std
loope
std
loope
out
nop
xor
ror
hlt
lret
icebp
shr
aad
fprem1
ljmp
iret
loope
out
jmp
icebp
f2xm1
xor
lret
icebp
hlt
and
mov
lret
aad
sti
call
int3
enter
hlt
out
into
clc
jmp
mov
jmp
decb
sar
lret
sar
hlt
cmp
out
aam
shl
loop
shl
in
decl
xor
cs
icebp
out
out
int
call
loopne
xlat
out
xlat
jecxz
jecxz
fcomi
in
nop
into
xrelease
cmp
cmp
in
aad
cmp
std
shl
xchg
jmp
into
call
xlat
xor
ljmp
in
frndint
fcmovnbe
aad
mov
icebp
in
xchg
fdivp
call
sub
idivb
loopne
hlt
int3
hlt
lock
ret
iret
shr
and
fucomi
jmp
lret
clc
sti
stc
cmpb
hlt
sarb
fsubr
clc
fsub
in
in
enter
loop
xor
out
xlat
ss
cmp
sti
icebp
clc
div
fcomi
fld
loope
jmp
shl
rcl
jmp
ljmp
repz
stc
jecxz
fsubr
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
jmp
push
jl
lret
jl
mov
jecxz
mov
xor
in
xor
ds
clc
aad
loope
jecxz
std
test
mov
ficoms
loop
out
cmp
aad
std
bnd
xlat
test
mov
xchg
or
cmc
ret
jmp
cmp
cmp
enter
aas
fstpt
out
cld
xlat
fucom
test
mov
hlt
out
out
in
out
xor
cmp
shl
test
rcl
ror
xchg
xchg
loope
repnz
not
jmp
fsubrp
cmp
xor
cmc
loopne
neg
out
loop
mov
call
jecxz
cmp
mul
aaa
aaa
in
cmp
fistpll
clc
repnz
cmc
call
nop
xchg
fcmovnu
lea
ret
iret
rcr
fistpll
enter
aaa
cmp
sar
std
fneni(8087
orb
repnz
cs
cmp
cmp
clc
cmp
cmp
sarb
leave
call
loopne
xchg
mov
sub
hlt
in
aas
in
aaa
ds
out
out
aam
loopne
loope
stc
int
jmp
jecxz
aam
enter
fnstcw
xor
cld
std
lock
test
out
test
loope
ret
rcl
jmp
and
aas
in
fcmovnu
mov
repz
aam
repz
in
cmp
out
fmul
int
rcl
cmp
fcomip
xchg
test
xchg
xchg
fdivl
xlat
aad
aaa
xor
rcr
cmp
out
ds
roll
iret
ret
icebp
mov
stc
leave
leave
into
repz
lret
fcomip
cmp
loope
test
loope
sti
rcr
ljmp
shr
cmp
std
call
ds
out
fstp
fsin
faddl
addl
in
in
hlt
ss
lret
out
flds
loop
mov
loop
in
in
mov
shll
ret
lret
int3
int
repz
push
sarl
sti
leave
cli
lret
mov
faddl
loopne
cmc
in
icebp
cmp
xlat
int3
cmc
iret
cmp
aad
rolb
std
loop
loop
in
xchg
sub
loope
sub
out
shl
cmp
cmp
ret
adc
sbb
out
in
fsubrp
call
in
std
xlat
repnz
cli
fmull
sub
mov
xchg
int3
sub
rol
jmp
fucomp
sti
fcmovu
lret
icebp
fcomi
fldl
test
cld
cmc
test
ret
out
into
xor
xor
out
repz
sar
idiv
xlat
shl
fmulp
xchg
jmp
xchg
jecxz
cmc
out
int
cli
xor
int3
out
std
clc
aam
out
in
std
test
out
ljmp
aad
cs
cmp
in
int3
sar
xlat
rolb
clc
aad
in
out
out
sub
mov
lret
out
int3
call
aas
jmp
out
enter
cld
in
mov
loopne
cmp
hlt
mov
lock
cmp
aas
fcomp
fcomi
cli
sbb
lret
lock
sar
shrb
in
aam
lock
cmp
fiadds
mov
in
in
fildll
xor
xor
fcmovu
shlb
lret
enter
iret
cli
loopne
mov
cmp
in
jecxz
loope
hlt
xor
sub
cmc
out
int
aas
into
ljmp
aas
fst
out
loopne
fiadds
xchg
out
enter
clc
out
ljmp
cmpl
cli
mov
std
out
int3
jmp
xchg
repnz
cmp
xor
lock
in
in
shl
std
jmp
leave
jmp
jmp
lret
cli
shl
fmul
fcmovnb
rolb
stc
lret
ret
int
fldl
repz
aam
fucomi
div
stc
fcmovnu
rolb
std
out
mov
out
int3
out
xor
jmp
call
rol
fldlg2
fistpll
shl
cmp
cld
stc
mov
out
out
out
repnz
movl
mov
mov
push
xor
mov
add
jmp
jmp
aad
shlb
adc
push
test
jl
add
idiv
jecxz
into
and
add
jecxz
into
fldl
lock
ror
int3
clc
xor
into
cld
ret
hlt
loopne
leave
call
xchg
out
nop
mov
hlt
leave
out
sar
shl
icebp
ss
adc
filds
mov
leave
xor
or
iret
sti
jmp
lds
int
xor
iret
cmp
cmc
lret
icebp
out
mov
sarl
lret
filds
xlat
cmp
loope
fdiv
in
leave
jmp
loop,pt
lret
cmp
int3
aad
rcl
cmp
adc
mov
les
loop
xchg
not
into
cs
in
xor
lock
aas
cmp
fdivr
fiadds
cli
mov
ret
ljmp
fdivrl
fabs
std
jecxz
aad
fcmovne
jmp
cmp
in
loope
fimuls
repnz
int3
lock
repz
in
fcmovnb
ret
jmp
jecxz
int
lock
iret
int3
in
ror
lret
test
sar
shl
loop
cli
rcr
in
fistl
shr
repz
leave
in
out
loopne
cmc
fiadds
shl
jecxz
shl
lret
fimuls
hlt
shr
icebp
fcomi
cmp
in
cmc
and
std
clc
rcr
call
repz
call
aaa
shl
out
enter
push
aam
loope
leave
xchg
mov
shl
cs
shr
cmp
fcmovne
sarl
icebp
ret
neg
incb
mov
fimuls
sar
cmp
lret
loope
or
cli
ret
leave
lds
call
test
cmc
loope
call
in
sarb
xor
iret
test
call
fcmovne
or
shl
lock
ror
ret
out
cli
out
in
into
hlt
cmp
aam
leave
in
aam
lret
rorl
aaa
xor
lock
cmp
icebp
neg
cld
shr
aam
fiadds
out
shl
aad
sarb
lret
cmp
out
sarl
idiv
cli
les
fadd
sub
aaa
loopne
fcmovnbe
shll
neg
lock
div
test
fcmovbe
call
orl
clc
cli
xor
rcr
cli
adc
xchg
rcl
push
out
xchg
jecxz
cli
in
loope
cs
aaa
xlat
xor
call
ds
fimuls
std
out
fisttps
out
cmp
cmp
fmul
fldl2e
lret
cmc
cmp
clc
cld
test
ljmp
out
loop
lret
repnz
leave
xor
cld
stc
fucomi
clc
in
sar
or
out
shl
cld
in
into
loop
sub
ljmp
xlat
jecxz
cli
in
sar
f2xm1
vcvtdq2pd
out
out
in
jmp
test
cmc
xor
fdivrs
xchg
mov
out
in
test
fcmove
loope
lock
xor
stc
aad
fmulp
repnz
xor
sbb
stc
loopne
test
out
nop
cli
hlt
out
hlt
in
sub
enter
int
cmp
out
not
out
hlt
cld
cld
icebp
mov
jecxz
fmul
in
out
jmp
fnstsw
in
cli
hlt
fstpt
in
nop
shl
xchg
shl
loopne
int3
cmp
hlt
fucomp
shl
rcr
and
jmp
loope
fdivrp
fst
in
ljmp
xlat
jecxz,pt
aam
aad
fcmovnu
clc
jmp
mul
fsub
sbb
aam
out
xor
int3
out
icebp
ror
int3
ror
in
cld
sbb
sti
mov
xlat
xor
lds
ljmp
or
in
loopne
std
inc
leave
in
repnz
repz
shl
loopne
cld
cmp
test
cmc
faddl
out
icebp
xchg
loope
aaa
out
fdiv
hlt
sar
int
iret
cmp
cld
cmp
test
testb
test
data16
add
rcl
aad
fcmovne
scas
push
mov
xor
and
push
pop
jl
lret
jl
mov
mov
decb
jmp
int3
cmc
bnd
jmp
icebp
loop
into
xchg
not
mov
jmp
out
xchg
repnz
xor
cmc
cmp
stc
fcomip
repnz
aad
sti
xor
lret
iret
enter
xchg
out
iret
xor
cld
jmp
cmp
out
dec
loopne
fstp
loope
call
sub
int3
sub
xor
lret
call
rcl
movb
xchg
xchg
into
icebp
in
fndisi(8087
not
into
ret
aad
cld
loope
stc
cld
fcmovnb
test
repz
out
xor
lock
stc
out
cli
iret
cmp
jecxz
xchg
leave
fdiv
leave
filds
out
xchg
jmp
lret
jecxz
lock
jmp
ret
out
stc
ret
clc
cmc
fldl
and
iret
lock
iret
cmp
iret
rcr
repz
fadd
cli
loop
orb
loop
ss
xor
hlt
sarl
div
aad
lret
cmp
mov
cli
enter
in
cli
out
loop
int3
lret
jmp
aaa
cmp
lret
fildl
fucom
fmull
leave
test
iret
lret
call
hlt
jmp
aad
cmp
aas
loope
lock
vpcomd
mul
ret
aam
jmp
fucomp
out
aad
hlt
xlat
std
in
mov
loopne
stc
xchg
sbb
lret
mov
cmc
repz
sti
cmp
out
jecxz
aad
loop
xchg
mov
ror
loop
sarl
cmp
cmc
icebp
fdiv
sti
idiv
clc
mul
aas
not
filds
jmp
in
call
in
call
in
add
mov
addl
ror
fisttpll
icebp
not
iret
lret
ss
repnz
lock
jmp
ffree
mov
loopne
loopne
int3
call
repz
aam
jmp
fld
aam
ret
jmp
in
stc
iret
push
in
xor
xlat
fld
cmp
cmp
out
fmul
aas
aam
hlt
fsin
loopne
shl
enter
mov
xor
xor
icebp
repz
rcl
cmp
in
ret
out
out
fldl
xchg
in
fdivl
in
sti
not
cld
sarb
in
in
std
int
lock
cld
into
int
fadd
xlat
jmp
std
lock
out
test
shl
mov
cld
loop
mov
shl
mov
jecxz
aam
xor
shl
into
into
cmp
iret
aas
div
cmp
std
div
enter
in
aaa
loopne
ret
cmp
iret
jmp
sarl
sbb
loopne
enter
icebp
mov
cmc
lret
xchg
divb
fcomi
sti
cmp
cmp
in
ds
fstp
loope
ret
lret
mov
sub
loopne
out
lds
jmp
cmp
into
lds
out
lret
test
out
in
aas
icebp
out
int
int
cmp
enter
cmpb
incb
lea
mov
shr
aad
shl
ss
icebp
fxch
jmp
fstp
ljmp
int3
ss
fcomi
shl
in
jecxz
leave
std
decl
loope
enter
cmp
cmp
aas
in
std
add
rcl
neg
fmul
jmp
fucomp
shl
fmull
fcmovne
in
sar
lret
loope
sti
cli
add
call
lds
test
iret
xor
fmul
lock
cmp
iret
in
fcmove
cmp
adc
fmul
mov
lret
stc
ret
aad
sti
jmp
sarl
std
aam
out
cli
out
ret
out
test
in
jecxz
bnd
sti
fcomi
jmp
stc
push
rcr
leave
xchg
jmp
jmp
vpextrw
lds
xor
xlat
aad
into
ljmp
xlat
aam
mov
testl
into
into
repz
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
outsl
out
and
jl
add
cmp
xor
fidivrs
adc
fdivrp
icebp
repz
sti
orb
les
shl
sbb
rol
ret
in
shl
mov
icebp
leave
into
out
int3
icebp
jmp
lret
ljmp
rcr
ret
ret
sti
incb
xor
mov
int3
cmp
ss
sti
loop
cmp
test
jmp
in
in
mul
in
cmc
std
lret
leave
fxch
rcl
repz
mov
std
aad
leave
sub
int3
mov
jmp
aam
sarb
repz
cmp
fnstsw
cli
cld
lret
enter
hlt
loopne
out
out
jmp
ss
icebp
std
sar
adc
out
decb
out
int3
call
repz
test
loopne
aam
or
out
jmp
lret
rol
in
repz
in
shll
xlat
xlat
cld
test
test
loopne
lret
call
out
shr
fdiv
fdivrl
cmc
repz
lret
jmp
in
int
icebp
in
jmp
jecxz
xlat
out
loope
jecxz
in
ret
rcl
cli
test
enter
loop
loop
in
jmp
out
in
into
cmp
rolb
and
call
xchg
cs
int
aaa
aaa
hlt
lock
or
flds
call
into
nop
out
xchg
out
xlat
int3
loop
in
shr
shr
aaa
lock
addl
clc
xchg
imul
call
fucom
out
out
cmp
clc
hlt
inc
sbb
repnz
test
int
ljmp
clc
loop
fucomi
enter
shl
fdivr
loopne
shl
call
in
jmp
xchg
iret
xchg
out
fnstcw
jmp
cmp
cs
incl
into
jecxz
hlt
out
jmp
xchg
adcb
enter
rcl
aaa
cld
cmp
hlt
fdivr
loop
jmp
testb
call
aaa
in
in
xor
out
fbstp
ffree
in
out
mov
std
icebp
std
fimuls
aam
cmp
ds
cld
fucomp
idivb
loop
sti
leave
loopne
fcmovu
mov
in
in
divl
ret
fnstenv
rol
ds
call
cmp
cld
sar
test
iret
xchg
xchg
out
repnz
xor
repz
cmc
rcl
fstp
rol
cmc
xlat
mov
std
test
jmp
mov
ror
in
call
ror
idiv
into
lock
leave
loopne
fiadds
not
clc
int3
iret
ds
xor
xchg
xchg
fmul
xchg
loop
xor
int3
into
in
loop
ss
fld
imul
fcmovu
cmc
cmp
faddl
fdivr
jmp
fcomp
div
out
cmc
ds
in
fdivs
fsub
xchg
xchg
xlat
mov
cld
out
stc
repz
xchg
divb
sti
fdivrs
cmp
inc
rcl
cli
ret
enter
xor
in
orl
ret
cmp
aaa
xlat
in
int3
iret
ret
jecxz
fcmovbe
in
vpsadbw
mov
mul
shr
cmp
not
aas
call
aas
test
test
aam
aam
addl
ret
jmp
jecxz
ret
ljmp
sar
cmp
flds
cld
ficoms
into
cs
jmp
into
call
ds
vpslld
in
icebp
sbb
std
jmp
loop
out
imul
cmp
shl
rcr
std
std
stc
rcr
test
repnz
aad
in
xor
in
xor
ljmp
cld
clc
inc
out
ret
lret
fucom
int
dec
repnz
lret
xor
hlt
in
hlt
not
fiadds
fstpt
cmc
repz
cli
out
mov
jmp
xlat
lret
not
in
call
sti
lret
repnz
out
xor
mov
add
jmp
ret
int
lret
sub
mov
jl
add
jmp
cli
into
enter
int
xor
rcl
int
cmp
lock
xchg
xchg
rol
ljmp
xchg
aam
div
repnz
aad
xlat
fsubp
loope
loop
repnz
fildl
mov
sar
cmp
std
iret
jmp
xlat
ds
cld
clc
fcmovbe
aad
jecxz
in
roll
xor
xor
aam
hlt
div
fstp
cmp
cmp
aam
jmp
out
in
fcmovnu
loopne
in
fsubrp
aad
in
divb
xlat
test
test
test
int
les
out
rcl
leave
fcmovbe
cmp
repz
int
fildl
roll
xor
out
int3
stc
int
xor
cmp
aaa
rolb
in
flds
ljmp
xor
aaa
ss
fst
in
cmp
call
lock
cli
les
in
test
aad
shr
loop
rcl
aaa
fnstenv
sub
cmc
fcmovnbe
call
mov
fldlg2
std
repz
hlt
xor
leave
fcmovbe
cmp
loopne
lds
xchg
mov
test
adcl
test
aam
cli
ffree
repnz
loop
jmp
hlt
in
repz
xor
call
cmp
in
loope
xlat
test
lret
jmp
fcmove
in
cmp
fnop
cli
ret
ds
in
mov
nop
repnz
repz
cmp
enter
roll
hlt
call
iret
test
loop
rcr
div
lret
std
cmp
std
addl
loopne
cld
enter
jmp
stc
hlt
iret
out
ss
hlt
fcomi
rcl
not
filds
std
in
in
adcl
sub
xor
sar
ds
cli
cmp
out
cli
loop
out
fdiv
xor
hlt
std
xlat
shr
not
lret
out
aam
faddl
fstp
loope
nop
cmc
and
leave
into
idivb
int3
lock
repnz
in
fdivrp
sbb
mov
ljmp
cmp
cmp
cld
ds
repnz
sbb
int3
loopne
aam
shlb
aam
iret
ss
cmp
idivb
loope
cmpl
in
mov
f2xm1
ret
repz
into
into
out
into
roll
in
in
fcmovbe
ret
jmp
jmp
cmp
shr
xor
cmp
xlat
fdiv
filds
rcr
fxch
sar
aam
iret
iret
mov
out
in
fcomip
icebp
repnz
rcr
aad
in
lret
rol
in
fmul
fists
xor
repz
aad
lret
aad
enter
neg
in
test
aad
mov
or
shll
in
repz
in
rcl
stc
cli
std
addb
fiadds
jmp
loopne
ss
out
in
clc
out
fcomip
testl
fcomp
jmp
mov
in
jmp
aad
cmp
dec
aad
jecxz
in
lret
loope
out
mov
shrb
in
xor
neg
loopne
jecxz
cmc
incb
in
call
lock
cmc
das
stc
fabs
repz
hlt
hlt
fcomip
cmc
lock
jmp
loopne
loopne
loop
loop
xor
call
cli
idiv
rcl
fsubr
out
repz
leave
lret
hlt
shl
cmp
clc
loopne
fcmovnu
rcl
std
or
in
lret
int
cmp
stc
lret
ds
aas
cmp
testl
xor
aam
xor
enter
cmp
repnz
shl
lock
aam
or
in
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
sub
xchg
mov
add
das
fsub
divl
sti
cmp
xlat
icebp
aad
into
fsubrp
les
std
sti
in
stc
cld
cld
in
cmc
hlt
xor
in
jmp
cmp
loope
in
neg
addl
loopne
fsub
aaa
lret
int
repnz
cld
fst
rol
xor
ffreep
out
cld
in
mov
std
sbb
mov
xor
ljmp
hlt
cmc
xor
rcr
leave
les
iret
xchg
loope
ror
jecxz
fcomp
cmp
repnz
in
rcl
roll
loop
call
std
loopne
xor
xor
aam
cmp
lret
hlt
cmp
shl
testb
leave
test
addb
clc
vcvtpd2dq
std
fyl2xp1
not
int3
out
rcl
call
int
lret
loopne
aaa
loope
cli
cmp
xor
fadd
aad
loopne
leave
cmp
push
jecxz
xor
hlt
cmp
fdivr
jecxz
rol
ror
mov
leave
loopne
fucom
xchg
xchg
icebp
jmp
xlat
xlat
out
rcr
repz
roll
jmp
jmp
xchg
mov
iret
in
shl
sti
idiv
shl
out
shl
cld
or
movb
mov
loope
out
idivl
xor
aam
frndint
fst
sti
repz
add
rcr
loop
jmp
ror
loop
xor
xor
shl
aad
stc
shl
aam
aad
std
fisttpll
fildl
ljmp
xlat
call
sti
sti
push
test
flds
test
divl
in
aad
fst
jmp
lock
xor
in
stc
jmp
out
test
call
ljmp
sub
repnz
mov
enter
xchg
out
int
int
stc
cli
leave
out
cli
xor
cmp
shl
xlat
loope
sbb
decl
out
mov
in
sub
lret
ljmp
jmp
sbb
lret
faddl
test
xlat
sar
jmp
idivl
aam
int
clc
roll
idiv
orl
cmp
xor
xor
lock
ror
fcom
xchg
ret
jmp
ljmp
lret
ljmp
leave
repz
int3
out
loope
cmc
jecxz
test
xchg
icebp
vpaddsb
rol
fcmove
out
cmp
shr
in
fmul
sti
hlt
ret
iret
or
in
xor
jmp
clc
cmp
fdivrs
xlat
cmpb
aas
flds
lret
out
shl
shr
mov
xor
xor
in
das
out
xor
xlat
shl
testl
out
sub
shlb
out
cmp
aad
fcmovbe
aam
loopne
bnd
mov
xor
aaa
hlt
out
ljmp
cli
cmp
faddp
jecxz
fsqrt
in
xchg
mov
lret
xor
repnz
xor
repz
icebp
repnz
sbb
ljmp
icebp
aaa
out
enter
ret
xor
icebp
stc
add
out
cli
fsqrt
out
enter
xor
out
int3
hlt
cmp
fnstsw
int
cld
shl
int3
cld
xlat
mov
fxch
test
cli
lret
fcmovnu
mov
loop
jmp
aam
lret
iret
xor
lock
repnz
incb
orl
ljmp
out
cmp
std
aas
out
shl
mov
test
lret
lock
xchg
xlat
cs
aam
in
xlat
lret
ds
jecxz
mul
in
nop
fcmovu
rol
sub
icebp
idivl
in
out
loope
fstpt
push
in
and
fmuls
rcll
xor
xor
jmp
std
hlt
aad
in
in
jmp
int3
in
cmc
xchg
out
repz
loop
cmp
fcmove
cmp
add
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
add
jo
or
jl
add
in
ds
test
test
fsubrp
out
leave
cmc
roll
icebp
loope
loopne
loopne
enter
rol
xlat
out
sub
fucomp
into
xlat
fcmovbe
cmp
cmp
stc
mov
call
in
xor
aam
hlt
cmp
loope
std
test
fcomi
loop
rcr
fadd
test
ret
lret
int3
shl
call
jmp
in
fdivp
out
lds
mov
jmp
aam
call
leave
cmp
shl
cmc
cmc
orb
fisttps
enter
repnz
loop
shlb
repz
lret
repz
repz
icebp
orl
in
in
iret
in
aas
aam
mul
test
cmp
mov
mov
lret
xchg
mov
ret
xor
int
fdivrl
out
sbb
repnz
aam
ret
xchg
std
jecxz
fcmove
out
jecxz
enter
int
shr
fdivrl
clc
iret
xor
fld
mov
sti
cli
sti
cld
xchg
fsubr
repz
in
loope
cs
jmp
xor
repnz
mul
loopne
ret
repnz
in
jmp
cmc
xchg
vpaddq
xor
lret
out
int
ror
idiv
out
leave
aam
not
loope
iret
jmp
cli
lret
jmp
rcl
ljmp
int3
sbb
leave
loop
fadds
ror
int3
ds
int3
cmp
call
rcl
into
fstpt
call
mov
mov
shl
xor
fdivs
icebp
iret
iret
xor
mov
sarl
out
out
ret
idiv
leave
test
ds
icebp
out
jmp
lock
shl
icebp
jmp
fldl
jmp
cmc
ror
xor
hlt
rcl
into
loopne
cmp
leave
cmp
xchg
addl
clc
int3
in
xor
call
cli
clc
shl
ljmp
addl
fsubr
clc
lret
hlt
ljmp
out
icebp
frstpm(287
clc
ret
call
fcmovu
jmp
repnz
div
aad
cmp
ds
cli
lock
fldl
xchg
in
iret
ljmp
ret
out
sub
jmp
cmp
jmp
in
int3
sar
add
clc
clc
out
jmp
in
into
ret
hlt
repz
ss
loopne
cmp
fscale
xchg
loopne
int
sub
ret
shr
aam
jmp
fldl
out
ret
cld
xor
ror
cmp
cmc
sti
out
ss
cmp
cli
mov
ds
ror
jmp
xchg
int
in
out
fcomi
aam
out
cmp
xlat
cmp
loope
ffreep
mov
add
dec
fsub
mov
xchg
out
xor
shlb
sarb
idivl
lock
cli
mov
aam
mov
out
in
clc
xor
jmp
cmp
aas
aam
adc
flds
in
loopne
in
leave
in
aaa
sub
imul
cli
cmp
xor
loop
loopne
mov
mov
idivl
into
aaa
fsub
clc
cmp
jmp
lret
sar
out
testl
loop
out
mov
ss
hlt
aad
hlt
ds
fcomp
xchg
roll
mov
std
repz
aad
int
cmp
aad
cmp
shr
test
jecxz
loopne
ror
sti
popl
mov
out
repnz
repz
shl
sti
lret
call
xor
fucom
xchg
cli
cmc
sub
xor
ret
cmp
icebp
icebp
out
adc
xchg
out
movl
in
stc
cmp
cmp
in
stc
jecxz
out
or
test
xchg
mov
jecxz
cmc
sarb
in
cld
fsubrp
cmp
hlt
std
out
rcl
mov
loopne
cld
and
inc
cmp
jmp
aad
enter
fsts
cmc
lods
xchg
fdivs
jl
add
ljmp
enter
lock
icebp
iret
ds
call
repnz
enter
cld
icebp
std
out
jmp
cs
lock
sti
cmp
out
jmp
sar
sar
out
xor
lret
mov
int
filds
xor
in
ret
in
cmp
fildl
ret
repz
enter
in
lea
loope
xlat
ror
out
out
ss
xorl
fdiv
cld
fdivp
and
mov
fmul
out
shlb
xor
cmp
cli
cmp
cmp
fistpll
add
lret
clc
loop
jecxz
clc
shr
mov
xor
fldln2
aad
cmp
faddp
rcl
loope
shl
clc
cld
fnclex
out
xchg
int3
xor
ret
iret
xlat
xor
aaa
int
cmp
cli
in
out
ror
xchg
faddl
addl
shr
cmc
cmc
cmp
ds
aaa
ds
movb
out
shr
mov
lock
sub
cmp
aam
out
cld
icebp
repz
xchg
sti
jecxz
ljmp
dec
fcmovu
fst
ss
lock
out
test
rol
jmp
mov
icebp
icebp
call
out
cmp
idiv
out
loope
mov
out
and
in
out
jecxz
xor
call
test
ds
lea
fcmovnb
in
std
xchg
ljmp
sar
fistpll
idivb
aad
loopne
shl
cld
enter
in
repz
xchg
out
xor
aas
cmp
loopne
in
xlat
loope
lock
jmp
xlat
shl
in
int3
in
neg
jmp
iret
roll
cld
mov
xchg
xchg
mov
enter
call
fistpll
idiv
loope
cmc
rcr
loop
out
in
in
mov
fcmove
mov
int
std
jmp
sti
ds
loop
loop
in
out
addl
hlt
call
into
in
cmp
loopne
out
shl
ret
hlt
faddl
loope
xor
sub
loop
xor
shl
int3
neg
aas
cmp
sti
repnz
fdivr
ljmp
xor
ljmp
not
cmp
in
loopne
ret
xchg
sti
int
xchg
mov
aas
ss
xlat
ret
cs
lret
stc
std
clc
loop
mov
hlt
aas
int
lea
aam
ljmp
xor
cmp
test
cmc
lock
fadd
repz
fmul
mov
cmp
aam
repz
sti
cld
aad
ret
iret
icebp
icebp
div
clc
addb
out
mov
loopne
cs
loop
xor
out
out
fcmovnbe
adc
jecxz
repnz
in
mul
loope
lret
fucomp
aas
out
enter
fcmove
in
sti
enter
cmc
cmp
xchg
enter
ljmp
iret
int3
fcomip
fsub
xlat
in
cmp
out
rorb
in
cld
in
xor
jmp
sti
cmp
leave
out
fcom
jecxz
in
ret
out
sub
mov
cli
int
xchg
xchg
ficoml
sti
cmc
xlat
fucomip
xlat
clc
int
not
rcr
mov
testb
mov
shl
in
lret
fsub
leave
enter
std
fucom
clc
stc
rol
test
ljmp
std
ljmp
ljmp
fst
test
rol
std
test
mov
cmp
test
lock
out
fadd
test
cmp
aad
out
test
and
incb
hlt
cmc
in
cmp
iret
cmp
lret
lret
std
std
ret
not
call
xlat
leave
jmp
clc
repz
loop
cmp
loope
stc
cmc
ljmp
mov
leave
mov
out
icebp
out
into
jmp
out
loope
fnstenv
clc
clc
icebp
jmp
shl
fnstcw
rol
hlt
in
out
mov
or
out
shr
xor
ret
jmp
in
enter
inc
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
repnz
aam
ret
cmp
in
dec
mov
repnz
sti
clc
ss
repz
lret
aam
ret
stc
div
in
test
cli
mov
xchg
xor
in
call
out
ss
lock
cld
lds
icebp
lock
in
out
cmp
out
icebp
ljmp
mov
lds
test
ret
lret
ss
lret
xor
loop
out
ds
out
flds
xchg
shl
lret
cmp
jecxz
aaa
cmc
xlat
out
fcmovnu
mov
out
shl
mov
shr
aaa
jmp
xor
cmp
cmp
xchg
sub
fistl
in
hlt
ret
hlt
in
cmp
lock
aas
hlt
shl
out
ret
bnd
into
jmp
xchg
call
shlb
in
jmp
cmp
aam
out
sub
in
out
out
mov
shl
sti
cmp
fnstsw
cmp
int
adc
cmc
mul
xchg
addb
shl
out
xor
stc
xlat
ret
xor
ss
loop
rcr
hlt
lret
loopne
rolb
ljmp
cld
cmp
loop
rcl
aad
ret
repnz
int
out
cld
movl
aam
clc
lret
fcmovnu
ror
out
in
shl
clc
adc
lds
inc
in
jmp
xlat
lock
rcr
in
into
fld
lock
lret
addb
out
sub
xor
xor
aad
cmp
into
iret
xor
ss
mov
test
out
fsubrp
in
lret
aaa
lock
cmp
testb
aam
jmp
jmp
mov
aaa
lock
aad
cmp
fnsetpm(287
testl
loopne
loopne
rcl
cld
test
lret
cmp
fsubrp
out
stc
aam
loope
cmp
leave
aam
clc
lea
int
loopne
aam
fdecstp
lret
cmp
fucomip
cld
repnz
in
fisttpl
mov
loopne
rcr
lret
sub
xor
int3
cmp
out
shr
mov
hlt
cmp
std
out
jmp
loopne
in
loopne
into
in
in
int
loope
jmp
sub
loop
shr
mov
xor
test
ror
out
stc
fdiv
int3
clc
lret
fnstsw
in
ret
cli
fistpll
lds
std
int3
cli
mov
int
ss
cmp
div
rcr
cmp
out
int3
fiaddl
ret
in
cli
leave
out
imul
roll
sti
rol
fstp
cli
in
loop
adcl
stc
rcl
hlt
sti
into
lock
stc
aas
jmp
ret
sbb
out
test
aam
cmc
int
repz
loope
rol
cli
loopne
loop
rolb
aaa
fmul
lock
iret
repnz
loop
repz
cld
enter
jecxz
test
orl
in
fcmovne
out
cmc
loope
in
aam
in
jmp
stc
jmp
jmp
shl
out
fdivp
cs
div
leave
call
int3
loopne
movb
ljmp
loope,pt
in
test
adc
sar
std
or
xchg
fsub
lock
cmc
jecxz
leave
jecxz
std
in
icebp
stc
aam
aam
int3
div
aam
lret
std
cld
fldl
in
xor
aad
out
aaa
cmp
ret
and
rolb
leave
lret
sub
loop
idiv
icebp
out
in
repz
cld
cli
sti
cmc
lds
test
in
jmp
in
xchg
addb
in
xlat
xor
cmc
in
sbb
iret
clc
aas
aad
cmc
loop
out
in
out
rolb
lret
out
icebp
fdiv
aas
out
imul
ds
stc
vpsubq
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
rcrl
mov
jnp
jl
add
out
in
xchg
xchg
xchg
in
out
enter
sti
loop
loopne
clc
xchg
decl
decl
sub
ret
repnz
lock
loopne
mov
into
clc
mov
xchg
aas
leave
int3
ror
jmp
int3
ljmp
icebp
fucomp
idiv
fcos
out
std
int
fsubp
loop
xor
fptan
std
fadd
int3
into
cld
icebp
cmp
roll
loope
out
icebp
into
into
in
xchg
in
repz
int3
add
orb
int3
ljmp
cmp
cs
test
rcr
loop
sub
ret
xchg
jmp
icebp
in
out
shl
loop
xor
fdivrp
loop
in
jecxz
loope
lret
stc
xchg
in
std
cld
hlt
icebp
icebp
sarb
neg
int
fxch
ds
jecxz
jecxz
loop
decl
repnz
jmp
aas
rol
int
cmp
xor
fiaddl
movb
iret
mov
jecxz
nop
xchg
loope
clc
not
xor
clc
hlt
fstp
shr
frstpm(287
sarl
loopne
fisttpll
lock
imul
in
cli
fdivrl
in
rcl
sti
fucomi
sub
lret
test
and
ret
aam
idivl
fldl
jecxz
hlt
mov
fcomip
leave
repz
in
jmp
cmc
icebp
in
int
in
jmp
cld
aas
cmp
fdivp
loope
cli
hlt
ffreep
fsin
test
clc
shl
shl
out
sarb
cmp
out
stc
hlt
cli
sbb
std
test
xchg
into
rcr
imul
xor
fstpt
cld
in
fdiv
std
fsubp
fdivr
test
test
cli
fildl
mov
xor
sub
iret
out
sarl
cmp
xor
xlat
mov
test
cld
cmc
rcl
out
out
fnop
xor
enter
fadd
rol
addl
icebp
lock
stc
aam
ror
out
sar
cli
lret
loopne
rcl
div
cmc
hlt
clc
out
test
loop
loope
xchg
in
repz
sar
stc
cmc
int3
repz
out
shl
testb
mov
xchg
loopne
xor
repnz
rcr
xor
rcl
test
vpsrlq
jmp
add
enter
in
out
out
imul
ljmp
aad
xlat
ljmp
xlat
mul
xlat
decl
jmp
int
imul
repnz
fsubr
fidivrs
shl
int3
cmpb
in
in
cld
sub
fsubp
shl
leave
xor
sarl
jmp
out
cmp
loope
not
addl
rcl
enter
out
int
cmc
out
stc
out
fiadds
aad
fsub
clc
leave
in
in
in
ljmp
fcmovbe
repnz
fmul
jmp
add
rol
shr
call
fiaddl
out
loope
ss
shr
cli
int3
xor
jecxz
jecxz
repnz
shr
ljmp
out
decb
aaa
cli
ss
cmp
icebp
in
stc
idivl
cmc
xlat
ljmp
repnz
xor
bnd
test
cld
fcmovu
cmc
rol
clc
enter
test
loopne
out
shl
shl
les
repnz
cmp
sub
sbb
int
loop
enter
call
out
call
hlt
int3
aam
cmp
rolb
cli
mov
lret
lret
loop
loop
ret
fcmove
fsub
ffreep
shl
aas
call
test
fadd
xchg
mov
stc
iret
int
mov
repnz
out
aaa
incb
push
repz
orb
int
out
ret
cmp
lret
ds
icebp
sarb
loopne
icebp
fdivp
loop
fsubrp
clc
and
lock
leave
xor
fcom
iret
out
ds
sarb
aam
cld
jmp
call
lea
das
sti
out
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
cmp
cmpps
lret
jl
xor
into
leave
cld
cli
repz
shl
xabort
cld
xchg
xchg
lret
adc
lret
not
xlat
aad
cmp
cld
shl
cmp
aad
sti
xchg
in
xchg
rcr
in
xor
xor
fidivrs
cld
xor
aas
repnz
lock
in
xchg
int
out
jmp
xor
stc
leave
ljmp
stc
xor
fdivrs
clc
stc
lock
mov
mov
aad
aaa
stc
fdivrs
fcmove
rcl
fcmovb
addb
add
call
aam
out
jecxz
hlt
ljmp
cmp
stc
icebp
clc
sar
cmc
xchg
fstp
inc
xor
ret
into
aam
fcmovne
aas
mul
jecxz
int3
fldl
aad
ljmp
dec
leave
shl
repz
in
in
cmp
xlat
std
sti
lock
out
xor
fldpi
jecxz
ss
not
sar
lock
rol
ret
les
fimull
repnz
vshufps
loopne
jecxz
jecxz
hlt
test
in
xchg
nop
decb
jecxz
call
aad
cmp
adc
repz
mov
fcmove
int
out
xchg
iret
xor
clc
imul
fucomi
sti
xor
clc
fdivrp
loop
mov
jmp
enter
jmp
shl
in
jmp
aam
cmc
cmp
jmp
out
into
in
cli
lea
xor
cmp
cmp
xor
in
lock
xchg
neg
fdivp
fcmovbe
test
int3
shlb
aam
in
int
xlat
cld
cmp
fyl2x
repz
aam
fdivr
out
test
loopne
xlat
repz
rolb
test
rol
lret
mov
mov
leave
out
jecxz
xchg
xchg
aam
out
idiv
imul
out
xlat
sti
ljmp
stc
test
jmp
xor
lret
out
sti
loopne
cmp
xrelease
in
out
test
ljmp
ret
repz
addb
mul
jecxz
mov
loope
xchg
into
loope
xor
in
jmp
fucomip
ror
cld
lds
ds
fiaddl
cmp
fcmovnu
out
xchg
xlat
jmp
xor
cmp
testl
fprem
ftst
xchg
lea
shrb
div
in
das
out
xor
loopne
ds
test
fcmovb
xlat
enter
out
test
loope
loopne
fcmovnbe
aad
repz
int3
in
cmp
enter
addl
out
cmp
cmc
test
in
shl
shl
adc
test
int3
shr
sub
vpmovmskb
cmp
fdivp
loope
aad
aam
ffreep
out
out
popl
lock
in
rcr
cld
rcr
fcmovne
sbb
mov
jmp
out
hlt
xor
cli
iret
repz
ret
into
and
ds
imul
lret
test
cmp
fcomip
xchg
xor
neg
lret
clc
std
stc
lock
fldl
xchg
loopne
nop
aaa
in
rcr
repz
cmp
sti
fcomip
in
adc
jmp
hlt
in
iret
orb
loop
out
in
cmp
leave
stc
in
cmpb
loopne
ds
fiadds
iret
loope
in
in
das
jmp
cli
fst
test
rol
repnz
loopne
loope
icebp
std
rclb
enter
shr
hlt
iret
cmp
or
lds
cmp
jmp
xchg
xlat
imul
jecxz
out
aad
cmp
in
shl
cmp
hlt
cmp
roll
mov
in
lret
fisttps
ret
xlat
lret
repnz
lock
cli
in
loopne
mov
xchg
call
xchg
fdivp
das
lock
fxch
in
fcomp
rcl
xor
hlt
roll
add
add
ror
ds
ret
or
and
jl
add
jmp
mov
enter
into
out
cmp
lock
cmc
loopne
out
mov
mov
clc
loop
bnd
cmp
xor
fcmovbe
aam
std
fcomip
out
repnz
test
aad
mov
std
xchg
xchg
ds
cli
out
ror
cmp
xlat
jmp
loope
out
mov
cmp
loop
rcl
stc
lret
sar
fucomip
icebp
into
int3
cmp
in
in
loop
cld
ljmp
jecxz
rclb
cmp
repnz
aas
idivl
fcmovu
fcmovbe
aam
lock
inc
sti
in
int
loopne
aam
in
xor
xor
out
ljmp
into
cmp
aad
enter
incb
loop
rol
int
cmc
xor
cli
in
leave
lock
icebp
add
fiaddl
mov
sub
cmp
jecxz
cmp
loope
push
call
test
addb
jmp
les
loope
fisttps
hlt
orb
lret
int
lret
aaa
cmp
fnsetpm(287
ror
fnstsw
add
jmp
mov
call
ss
out
call
faddp
fcmovnb
in
mov
int3
iret
stc
cld
jmp
ret
lock
jmp
hlt
into
ffree
xor
fiaddl
ret
fisttps
cli
out
test
cs
das
ror
loopne
fmulp
jecxz
aam
fdivr
clc
out
fimuls
xor
xor
fnstcw
icebp
enter
cmp
into
fcmovbe
test
div
mov
lret
cli
fcmovnbe
cld
fisttps
int3
lret
xor
ds
xor
repz
cmp
clc
mov
fsts
xor
xor
cmp
repz
repz
fsub
mul
rcl
ret
loop
in
in
std
in
mov
lret
fcom
xlat
enter
repz
int
hlt
shr
add
ret
lret
nop
xchg
fadd
out
ss
ljmp
loopne
fiaddl
enter
in
leave
test
shl
nop
xchg
rol
ljmp
ljmp
cmc
jmp
fcmove
out
icebp
out
xchg
mov
cmp
cmp
call
aad
jmp
loopne
xor
in
icebp
ret
cmc
icebp
out
jmp
in
sarl
loop
rcl
loope
stc
lret
clc
fdivr
enter
mov
int
cmp
repnz
inc
rol
int3
fisttps
xlat
loope
jecxz
hlt
sub
sub
lret
aad
into
xlat
in
cmp
jmp
cld
into
shr
shl
das
xor
call
rcr
out
ret
fsubp
std
fsub
idiv
fcoml
out
lret
hlt
sarl
fcomp
shlb
shr
hlt
cmc
adc
cmc
xchg
jmp
fiadds
shl
sub
cmp
xlat
int3
xor
ror
cmp
idivl
addl
out
fiaddl
rcr
enter
sbb
clc
ds
and
fmull
xchg
jmp
cmc
fcmovnb
int
ds
iret
ror
loope
xchg
jmp
ret
fiadds
ret
xor
in
out
aaa
leave
fbstp
stc
shl
loopne
jecxz
xor
movl
out
divl
hlt
jecxz
in
xlat
xlat
in
cld
fcomi
fcmovbe
fmul
xchg
mov
fstl
out
not
cli
int
repnz
rcl
shr
loope
ffree
mov
fiaddl
fxch
lds
cmp
fxch
fnstsw
filds
stc
lea
lret
test
aad
rcl
xor
out
xor
fcmovu
rolb
aam
icebp
int
cmc
repz
test
cmp
and
repnz
cmp
shl
out
repz
mov
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
push
mov
lret
jl
in
in
aam
aad
loope
out
ret
div
loop
jmp
mov
mov
call
repz
out
stc
cli
repz
cmp
xor
in
loop
imul
shl
fsubp
addb
test
repz
testb
clc
mov
movb
enter
lret
ret
xlat
xor
in
in
shl
rcr
loop
lds
cld
out
lret
shl
cmc
clc
fmul
jmp
rcl
cli
loopne,pt
cmp
stc
fists
xchg
out
in
int3
xor
ffree
repz
loope
in
sti
loopne
jmp
fcomp
fstp
out
fisttpl
ret
sub
shl
repnz
sti
loope
repnz
out
div
orb
jmp
ljmp
push
in
aam
sti
out
aas
jmp
fimuls
icebp
cli
rorl
lock
cmc
iret
cmp
xor
aad
rolb
addb
xchg
fldl
in
cmp
fcmovnbe
cmp
and
aad
loop
fadd
lret
leave
lret
int
call
in
int
repz
sti
in
aam
fcmovbe
fstp
movb
lret
in
out
clc
enter
fninit
int3
div
cmp
jecxz
adc
mov
test
shll
ljmp
in
cmpb
rcl
call
rorl
loop
shl
cmp
icebp
fucom
in
fsub
test
fsubr
lret
mov
std
xchg
cld
lret
xor
into
cmp
int
sar
jmp
ds
iret
out
cld
aam
out
int3
fadds
xchg
cld
shr
stc
call
call
clc
clc
ds
fstp
ret
rcl
jecxz
std
std
stc
fmuls
aad
leave
enter
idivl
stc
jecxz
aad
aad
aad
mov
xchg
sti
lret
nop
lock
shr
int3
in
jmp
cli
xor
shr
out
not
cld
fldl
out
out
enter
ret
shr
leave
xor
repz
incb
mov
mov
xchg
out
sub
cmc
xor
xlat
lret
lret
hlt
loopne
icebp
fcmovu
shl
ret
repnz
test
mov
mov
fidivs
icebp
cmp
out
icebp
ret
cld
in
inc
loope
mov
std
std
out
cmp
shl
out
ss
xlat
fmulp
cli
cld
test
in
mov
icebp
jmp
ljmp
cmp
cmp
loope
sarb
mov
aad
mov
jmp
filds
cmc
ret
int
shr
cld
int3
repnz
cmc
loope
rcr
leave
imul
cmp
jmp
sub
lret
call
aad
cmp
fdivrp
shl
xchg
cli
jecxz
out
rorl
iret
ljmp
cmc
out
fcmovu
std
int3
cld
ret
xchg
jmp
fiaddl
hlt
ret
cmc
iret
in
aad
sar
cmp
shl
rcl
xlat
call
repz
out
int
out
xlat
cs
in
int
cmc
out
flds
xor
fiadds
ljmp
xor
enter
aaa
cmp
aam
stc
idivb
ret
and
test
in
rcl
ljmp
xor
cmp
enter
loopne
out
stc
test
rol
lea
nop
mov
div
lret
clc
stc
repz
add
fiaddl
addb
xor
in
fdiv
das
test
out
inc
hlt
loop
adc
dec
cli
xchg
stc
ss
ret
out
cmp
in
fadd
ljmp
lret
in
xchg
lret
lock
fcmovnbe
fdiv
aam
jmp
cmc
add
fsincos
fstp
lret
ret
lea
repz
cmp
cmp
cmc
cmp
jmp
mov
fcmovnb
in
mov
sbb
sub
jg
lret
jl
out
out
testl
call
cli
fcmovnu
jmp
std
cli
aaa
iret
aas
sar
out
cli
mov
out
xor
out
shlb
lock
cld
shl
sar
rol
jmp
std
clc
loope
fimuls
ret
lock
stc
cli
loopne
into
into
rcl
repz
mov
icebp
mov
call
lock
jmp
sbb
cmp
test
mov
in
aaa
icebp
leave
aaa
stc
hlt
xor
cmp
addb
std
mov
cli
lret
jmp
aaa
cmp
cld
out
fcmovnu
cmpl
cmp
rcr
cli
lock
lret
shl
sub
rcl
loopne
cmp
sti
aas
dec
out
out
xchg
xchg
test
aam
clc
into
sarb
lret
in
frndint
loop
icebp
idiv
icebp
aad
aad
mov
jecxz
loopne
loop
lret
loop
hlt
leave
ffree
leave
cmp
fstp
sar
ds
out
out
int3
sbb
mov
ljmp
hlt
cld
ret
cli
cli
hlt
mov
clc
fstp
loop
ror
std
and
out
jecxz
imul
out
aad
cmc
fcmovnu
sarl
fcmovbe
test
call
loope
fldl
out
fsubr
cmp
jmp
aad
repnz
cli
in
std
in
test
inc
xor
idiv
mov
cmp
cmp
aas
cmp
cli
sti
repz
ljmp
cmc
xchg
int3
kshiftlq
fstp
cmp
rol
fdiv
lock
rcr
xlat
imul
out
out
lock
fidivrs
xor
in
cmp
xor
std
idiv
ret
stc
lock
les
in
mov
aas
call
sub
add
aam
cli
loopne
rclb
lret
jecxz
int
leave
imul
into
int
out
ret
int
loope
shl
xor
clc
mov
sub
enter
out
aad
fyl2xp1
out
hlt
movl
fmulp
out
xor
ror
das
out
fdivr
in
cmp
into
aas
aad
rol
xchg
jecxz
clc
lret
icebp
loopne
ret
iret
into
fnsetpm(287
cmp
clc
leave
out
out
add
shl
enter
call
nop
sub
clc
fxch
out
fmul
cmp
rcl
iret
cmp
div
in
out
fsubp
mov
int3
mov
jmp
ret
lret
sti
sub
out
aad
fdivp
fisttps
lock
shrl
ror
sti
jmp
std
into
icebp
rcr
rol
aas
loopne
cli
xor
xchg
rol
xor
xlat
cmp
aad
jecxz
roll
jmp
mov
in
xor
lds
aas
cmp
shl
fcmovbe
out
lds
jecxz
jmp
xor
xor
jmp
jmp
jmp
addb
mov
xchg
xor
ljmp
dec
cmpl
lret
vpor
icebp
icebp
iret
in
sti
enter
xor
shl
cmc
shl
test
test
out
fists
jmp
aad
in
fldl
lock
fadd
orb
in
in
jmp
call
cmc
hlt
out
xor
stc
stc
sti
iret
cmp
lds
cmc
loopne
xlat
inc
lret
jmp
ljmp
lret
cmp
out
out
loope
hlt
in
xchg
aas
roll
jmp
mov
in
into
in
fldcw
cmp
jmp
stc
fcmovnbe
hlt
testl
in
test
call
xor
fdivr
aam
in
aad
call
decl
loopne
xor
cmp
ss
cmp
cmp
sbb
xchg
std
ror
nop
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
push
cli
adc
lret
jl
jmp
in
imul
call
cmp
call
sar
and
loop
faddp
cmp
call
aad
clc
in
shl
in
testl
aaa
call
out
cmp
aas
xor
aam
aad
fdivp
ffree
std
loope
mov
cmc
movl
int3
cmp
stc
cmp
xlat
shl
ds
mov
loop
fcom
shr
call
xor
jmp
cld
jmp
jecxz
cli
test
fsqrt
lret
or
loop
hlt
test
in
in
icebp
cmp
div
fsub
out
aad
cmc
jecxz
or
int
in
repz
xlat
shl
call
aas
cmp
fiadds
orb
iret
fmul
loope
cmc
jmp
repnz
rcr
jmp
into
cli
into
fdivr
loope
leave
mov
aam
in
movb
sub
rcl
imul
call
fiadds
shl
hlt
mov
xchg
mov
loop
out
fcmovbe
aad
cmc
cmc
ret
aam
sar
std
stc
xchg
mov
std
iret
mov
into
cs
lock
shr
aaa
in
repnz
cmp
addb
mov
mov
out
xchg
out
call
out
xor
fscale
loop
fmuls
test
mov
out
nop
sub
clc
lock
cmp
cli
fldpi
loope
rcl
sarb
test
sub
fcoms
loopne
icebp
iret
loopne
cmp
enter
cmp
in
hlt
shl
aas
rcr
fcompp
xlat
iret
cli
fiadds
in
aaa
in
out
fmul
ror
aas
shl
in
out
loopne
mov
enter
sbb
int3
lock
add
shl
out
xor
fdivp
fiaddl
out
mov
addb
rclb
in
jecxz
in
repnz
cmp
ds
icebp
out
lock
repnz
fcomi
in
aam
rcl
cs
imul
into
ljmp
cmp
aad
call
icebp
mov
leave
fsub
iret
stc
cmp
aam
cmp
rolb
into
mov
out
out
mov
imul
int3
icebp
call
add
cli
fimuls
in
xor
stc
rcl
xor
jmp
cmp
in
lock
lds
or
test
lret
call
xchg
out
call
fdiv
sarl
aad
loope
int
cli
nop
into
iret
ljmp
ljmp
hlt
cmc
icebp
aas
call
xchg
xchg
xor
shrb
hlt
loop
xor
out
cld
xor
xlat
clc
cmp
shl
mov
call
shll
into
leave
loop
in
leave
call
aas
shr
fdivrp
aad
mov
mov
cli
shl
mov
divb
int3
divb
hlt
cmp
fcomi
and
in
fcmovbe
aas
aam
ret
in
cmp
in
ljmp
in
lock
fiaddl
fildl
std
addb
call
loop
aad
lret
lret
fsqrt
int
cmp
in
out
ror
loopne
in
xor
icebp
iret
iret
lret
cmp
cli
xlat
aad
std
sti
in
xchg
lret
and
mov
faddp
ret
not
xor
sar
int
cmp
xchg
out
ds
ret
inc
xor
icebp
jecxz
ror
shr
imul
int
rcl
clc
iret
cmp
cmp
in
test
mov
xchg
mov
rol
cmp
lds
fstpt
out
in
hlt
into
hlt
rcl
std
mov
in
lret
lret
shr
xor
cmc
cmp
leave
repnz
dec
leave
ljmp
lds
mov
test
loopne
fsubrp
mov
rclb
into
rol
fdivr
lret
enter
shl
iret
ds
testb
in
in
in
cmp
cmp
xor
fcmovu
add
cmp
je
movl
jmp
rcl
rcl
roll
imul
lret
jl
repz
ds
loopne
sti
testb
fcmove
jmp
lock
sti
lret
cld
sarb
cmp
rorl
stc
orl
sarl
jecxz
in
out
out
adc
hlt
ret
ljmp
in
ljmp
in
std
call
in
in
cli
faddp
fsubrp
test
iret
test
ret
fsubr
rcr
mul
rcr
lock
into
iret
testl
loopne
in
iret
test
xor
xor
enter
lret
adc
aas
sti
in
jmp
fmulp
adcl
cmp
into
fdiv
fadd
testb
fisttpl
fstl
fucomi
lret
cmp
loope
cmp
rol
cmp
xlat
stc
out
xchg
loop
loope
sbb
div
call
in
jmp
cmp
cmc
roll
in
and
xchg
lret
icebp
out
xor
int3
out
hlt
jmp
repz
loopne
div
sti
mov
std
xchg
in
repnz
call
ror
aaa
enter
fcomi
aad
movb
and
fucomp
std
xchg
out
cmc
clc
cmp
enter
into
int
in
xchg
incl
loopne
cld
out
jmp
hlt
leave
rol
ss
clc
out
lret
cmc
xlat
shl
out
leave
test
loope
repz
xchg
jmp
les
sti
lock
sti
in
into
rcr
ret
fldl
fdivr
mov
xor
aaa
hlt
cmp
repz
cmp
jmp
out
sti
xchg
enter
in
in
hlt
aad
hlt
not
cmp
in
fcmovbe
mov
test
int3
in
xchg
vshufps
fcompp
jecxz
repz
repnz
xlat
std
in
xchg
loopne
ret
ss
not
out
xor
into
jecxz,pt
repnz
addb
cld
mov
aam
ljmp
fdivr
pushl
out
xchg
aad
decl
cmp
xchg
xor
fmul
ss
dec
clc
hlt
lock
repz
cli
iret
cmp
out
in
out
cmp
fnstcw
fnstcw
xor
icebp
out
ret
in
in
icebp
out
mov
jmp
cli
ss
jmp
not
in
cld
test
in
xchg
xchg
mov
sar
xlat
xor
jmp
int3
sti
clc
in
cmc
and
std
stc
cmc
incl
dec
or
call
fdivs
idivl
aas
cld
cmc
aad
mov
out
iret
test
in
out
out
pushl
aaa
sar
repnz
clc
xchg
jmp
xchg
jmp
jecxz
lock
int3
clc
cmc
rcl
out
fistpll
fiaddl
out
fsub
test
ret
nop
icebp
in
ret
cmp
out
lret
fsub
icebp
fidivrs
fcmovne
in
jecxz
std
out
mov
repnz
out
sti
jmp
loop
ret
out
lock
out
addl
mov
cmp
ror
xlat
in
faddp
repnz
add
call
lock
cmp
out
in
repnz
into
sbb
xchg
fsubrp
cld
in
test
mov
loop
test
lret
ret
ftst
cmp
enter
cmp
loopne
sub
in
ffreep
fcmove
enter
test
aad
aam
out
into
fcomp
rcr
cmp
sar
xlat
leave
dec
cld
ds
fadd
repnz
in
hlt
fnstenv
repz
int3
in
enter
fdivp
cli
xchg
rcr
ror
out
notb
in
aad
shr
iret
fsubr
ror
int3
out
stc
cmc
cmc
shr
fildl
enter
mov
xchg
shr
icebp
ss
xor
enter
fmulp
cmp
into
loope
test
decl
add
add
lret
ret
int
jle
shrb
adc
push
sbb
lret
jl
fdivp
enter
repnz
in
std
lret
cmp
int3
aas
out
icebp
fcom
loopne
out
loop
testb
call
out
xlat
aam
lock
in
fadd
cmc
icebp
fdiv
std
clc
in
in
icebp
out
lret
mov
sub
int3
stc
divl
ffreep
fsin
fcomi
ror
fcmovu
testl
call
rol
xor
in
repz
into
fmul
cmc
sarl
aad
and
test
loopne
icebp
int
in
aas
out
aad
xor
jmp
iret
int3
in
roll
xlat
mov
jecxz
jmp
jmp
fnstsw
icebp
leave
aam
xor
ret
cld
loop
rorb
fimuls
shl
in
int3
fcmovnbe
lock
sarb
clc
stc
out
test
stc
loop
sti
in
out
mov
lret
call
neg
lret
fcomi
lret
sti
fst
out
aad
jmp
sbb
cld
in
roll
shl
fstpt
xor
sti
aas
cmp
into
aas
std
clc
cld
mov
loop
jmp
int
rclb
ss
stc
int3
xor
lock
into
fsubr
shl
leave
in
loope
test
in
ss
idivb
clc
fstp
lret
stc
out
fprem
ret
jecxz
int
cli
fisttpll
fcmovnb
fsub
out
xor
std
and
filds
mov
xchg
out
ret
ret
into
int
fidivrs
jecxz
mov
mov
out
cli
jecxz
les
jmp
lock
lret
out
loope
loop
movb
int3
test
in
xor
vpsubw
int3
in
cli
out
std
ds
adc
xchg
mov
xor
ret
aad
jmp
icebp
fsubrp
in
ljmp
lock
ds
test
mov
mov
cmp
in
cli
div
idiv
rcl
cmp
in
in
test
clc
jecxz
out
out
out
enter
ljmp
clc
int3
fdivr
ds
out
std
out
jecxz
xchg
iret
ret
out
cmp
cs
in
stc
idiv
fdiv
icebp
jecxz
addl
cli
mov
aaa
rcl
enter
out
aaa
out
fprem1
cmc
iret
cmp
jmp
jmp
loop
fmulp
xor
stc
xor
rcr
cli
sti
jmp
cmp
shl
lock
aad
mov
mov
fsubr
loopne
lret
icebp
fxch
aad
jmp
lret
fcmovne
rcl
aad
roll
faddl
rcl
rorb
imul
xor
leave
fsubr
cmp
iret
repnz
out
ret
lret
ljmp
out
leave
loope
xor
aaa
lret
clc
cmp
ss
stc
loopne
test
test
addl
mov
imul
mov
aad
ror
jecxz
cmp
out
test
cmp
jmp
lret
mov
mov
cmpb
jmp
xor
out
out
call
std
iret
xlat
rol
jmp
jecxz
loope
lret
and
enter
leave
aaa
cmp
iret
cmp
cli
cld
loope
and
stc
out
ljmp
cmc
repnz
ror
loopne
sti
hlt
ret
incl
mov
cld
shrb
leave
repz
aad
fdiv
stc
ret
les
in
xchg
icebp
in
lock
xor
test
ret
mov
in
mov
out
shl
int
fdecstp
stc
imul
out
imul
loope
adc
leave
cld
popl
cld
iret
leave
leave
jmp
hlt
enter
rcl
aas
cli
loope
in
fdivr
in
jecxz
cld
out
xchg
cmc
ror
enter
std
fsubr
fsub
sub
iret
add
shl
fcmovnu
or
jmp
in
ljmp
jmp
xor
ret
mov
std
std
std
cld
out
in
xor
shl
rcl
decl
in
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
and
test
in
jg
lret
jl
sar
out
fcmovu
cld
aam
mov
cld
shl
clc
mov
in
jmp
ror
int
leave
lock
out
lret
cmp
rcr
fucomi
iret
test
add
sbb
repz
call
int3
xor
cmp
idiv
loop
ret
shl
loope
loopne
popl
loopne
cmp
int3
xlat
cmp
rcl
test
fcmovbe
adc
neg
mov
fmul
int
cmp
aad
ret
lock
stc
add
hlt
call
xlat
idiv
jecxz
lock
lock
shlb
xor
shll
rcr
adc
xlat
lock
int3
fmuls
aam
xor
xor
cmc
out
out
test
jmp
div
in
test
cmc
hlt
rcl
shll
enter
cmpb
xchg
enter
jmp
ret
hlt
out
xor
fidivrl
sar
fninit
mov
aad
std
sbb
in
leave
test
xchg
xchg
out
in
cs
jmp
incl
roll
loope
into
mov
jmp
xor
shl
lock
icebp
aad
cld
std
out
test
repnz
in
into
out
cld
repz
lock
clc
lret
aad
pushl
ds
sbb
ds
test
fdivr
fucomip
out
jmp
imulb
xor
hlt
call
filds
in
xchg
loop
icebp
mov
iret
sarl
jmp
cli
fxch
cmp
int
iret
add
in
les
in
into
cld
xlat
aam
aad
icebp
lret
ljmp
lock
cli
sbb
ret
ljmp
icebp
repnz
int
loope
into
icebp
jmp
addb
rcl
out
xor
iret
ss
lret
int
in
int3
adc
rcl
mov
lret
xchg
jmp
xor
int3
cmp
cmp
cmp
xlat
ret
cmp
adc
ret
int
roll
ret
cmp
xlat
cmp
rol
movl
in
loope
out
ret
les
repnz
hlt
neg
lock
iret
aas
and
test
or
loop
fmul
xlat
shr
shl
int3
rcr
lock
cmpb
into
cli
cmp
in
add
ds
nop
loope
imul
loopne
into
enter
cmp
rol
in
iret
aas
rcr
cmp
cmp
mov
xchg
lret
jecxz
idivb
cmp
std
lock
fdiv
xlat
loopne
aam
xchg
mov
into
lock
rcl
cmp
cmc
fstp
ret
hlt
sti
fimull
enter
ret
iret
out
cli
stc
stc
in
iret
hlt
xchg
ds
aad
jmp
mov
lret
shl
int
cmp
int3
rcl
xlat
xor
cld
aad
jmp
lret
adcb
out
rcl
imul
mov
cmp
lret
fcompp
orl
loopne
loope
in
in
mov
repnz
fucomi
aam
out
out
idiv
fnstcw
cmp
out
int3
in
icebp
mov
clc
out
cmp
out
cli
cmp
xlat
stc
cli
lock
call
jmp
aad
shl
int
shrl
fdivr
aas
in
ljmp
sti
cld
std
std
mov
loope
das
out
int
lret
aaa
icebp
faddp
aam
hlt
hlt
dec
jecxz
fucomi
mov
ss
ret
lock
test
cld
in
mov
mov
das
int
shr
xor
sarl
cld
cli
out
loop
rorl
enter
xchg
iret
aad
das
fsubr
cmp
cmp
idiv
cli
aam
sti
in
loope
in
loop
icebp
loop
loope
in
ret
xlat
iret
shr
fsubr
in
int
cli
cli
in
sbb
mov
xor
lea
mov
jmp
into
int3
ret
ds
jge
jae
jo
mov
mov
jg
lret
jl
mov
xor
jmp
in
clc
int3
loopne
in
fcmovnu
hlt
mov
in
test
int
fcoml
repnz
xor
fidivl
cld
fnstcw
jmp
rcr
xlat
not
stc
sar
add
loopne
xor
aad
in
cmp
fcmovu
into
cli
fadd
cmp
fsub
shl
in
enter
mov
hlt
div
aad
ftst
out
fst
iret
out
shl
icebp
hlt
jecxz
test
out
in
loopne
sub
not
fldl2t
ret
xlat
stc
fcmovu
cmc
repz
cmp
ror
enter
out
loopne
jmp
leave
into
stc
lret
lret
leave
fnstsw
cmp
bnd
xlat
jmp
jecxz
jecxz
addb
fsub
out
cmp
cmp
cmp
cli
shl
rcl
cmc
mov
xchg
shr
xchg
imul
out
jecxz
ror
cmp
fdivrs
add
cmp
aam
fcmovnu
aam
mov
les
fsub
hlt
xor
iret
in
repz
ds
lret
into
xlat
fcmovnb
fldl
lret
out
into
int3
mov
out
ljmp
rol
shl
aam
cmc
leave
in
xchg
int3
xlat
lret
out
iret
lret
out
lock
enter
into
rol
out
fcmovnu
in
in
xchg
sub
neg
lock
out
in
lret
cmp
enter
aas
ret
div
ret
xchg
call
jmp
jecxz
shll
out
out
lock
in
rcr
repnz
and
leave
in
enter
lret
loopne
hlt
rcl
shr
int3
hlt
stc
hlt
jecxz
loopne
sar
fimuls
faddl
into
jmp
xlat
cmp
repz
std
fprem1
cmc
loope
loopne
in
fsub
test
enter
out
rol
loop
repnz
repnz
cmp
sar
fld
loope
jmp
fcmovne
xchg
mov
jecxz
in
repz
shl
out
sti
cmp
lret
idiv
rcl
hlt
cmp
repnz
xchg
call
jmp
aaa
shl
cmp
fldl
xlat
ret
call
rolb
ret
icebp
int3
cli
sar
cmp
add
aas
and
in
cmp
fdivr
jecxz
addl
in
enter
sub
std
addb
jmp
in
repz
call
icebp
fsubr
lock
fadd
cmp
loope
int3
loop
fcomi
mov
out
jmp
cli
xlat
lret
ljmp
cmc
aad
std
enter
xchg
into
jecxz
cli
fiaddl
into
sti
ljmp
jecxz
sar
cli
enter
mov
sbb
jmp
aaa
repnz
std
out
lret
cmp
shl
clc
jecxz
test
ror
jmp
clc
in
cld
int3
loope
out
ds
ss
jmp
jmp
faddp
cmp
orl
out
loopne
out
icebp
sti
shll
sar
loopne
repz
icebp
ffree
xlat
mov
fmul
mov
std
lret
fimuls
stc
sti
cmp
in
std
fcomp
cmp
xchg
mov
in
enter
fmul
test
shl
out
loop
lret
int
aam
fstp
rcl
fmul
mov
in
repnz
test
loop
jecxz
cli
out
int3
hlt
ljmp
fninit
test
fprem1
in
int
xchg
loope
sti
iret
repnz
rcl
aaa
sar
addl
xchg
call
cld
shr
vpsrlq
fcmovnu
cli
int
test
shl
xchg
clc
cld
les
enter
mov
jecxz
xor
cmp
ljmp
fucomp
cmp
lock
hlt
test
fadds
out
mov
out
lock
idiv
fcomip
sar
fcmovu
ljmp
fadds
in
loope
nop
hlt
enter
aam
icebp
sti
cmp
cmp
in
xlat
fmul
testb
lds
jmp
jmp
mov
jmp
lret
ds
fcmove
fisubrl
lock
daa
jg
lret
jl
cmp
lret
iret
cmp
xlat
ret
loopne
clc
out
fmull
stc
out
jecxz
jmp
fsubr
sar
repnz
into
loop
rcr
mov
jecxz
mov
fcomip
sub
int
fld
sti
cmp
fcomi
repz
xchg
rcl
ror
shr
les
mov
in
xor
out
jmp
in
std
rol
xchg
lret
int
icebp
in
cli
test
xor
xor
fstp
xor
shl
ret
aad
out
loopne
loop
out
fdivl
imul
call
in
stc
sarb
sarb
sti
shl
cmc
ffreep
fisttpl
call
mov
lret
sub
div
f2xm1
rcl
jecxz
cmc
stc
jecxz
ljmp
into
fcmovne
in
shl
jmp
out
aad
in
imul
fmul
xor
lock
out
out
fiaddl
mov
lock
idiv
aaa
xor
sti
call
roll
addl
loope
clc
stc
aam
aad
int
enter
cmp
test
xor
aad
clc
inc
out
jmp
mov
sub
fsubr
shl
repz
cmpl
int3
in
sarb
and
decb
fdiv
lret
out
mul
xor
jmp
shl
aad
cmc
mov
loopne
std
jmp
lret
out
in
shlb
aad
cmp
clc
cmp
into
test
xabort
mov
ret
cli
call
loop
lret
repnz
xor
xlat
fcomip
lock
test
jmp
not
incl
cld
iret
jmp
xor
cmp
aam
in
sarl
sarb
flds
in
mov
call
aam
out
out
loop
cmp
stc
aas
idiv
jecxz
testb
out
fxch
out
cld
lret
repnz
test
in
fucomp
into
rcl
out
cli
repnz
xlat
in
addb
std
std
xchg
shl
in
out
cmp
fmul
rcr
out
cmp
fnstcw
filds
fisttps
xor
sub
out
imul
cmp
fdivrp
hlt
stc
loopne
shl
repnz
test
int
test
stc
ret
out
sar
loopne
or
mul
xlat
in
faddl
fsubrp
std
rolb
out
cli
stc
jmp
jmp
loop
shl
lock
xor
jecxz
faddl
loope
xor
lret
cmp
hlt
xchg
sbb
rcr
jmp
lret
in
xchg
lret
out
in
rcr
fcmove
cmp
loop
shl
fstp
ret
ror
jmp
mov
fsubp
in
stc
ljmp
jmp
aam
test
aam
ret
clc
std
in
lea
int
xor
xor
xlat
xlat
clc
rolb
bnd
in
test
cld
out
out
mov
into
jecxz
in
cmp
fldl
clc
fstp
inc
fdiv
ljmp
mov
into
int
ss
call
xlat
imul
repnz
addl
std
fmul
lret
jmp
repz
ds
sub
xor
fmulp
in
jecxz
rolb
jecxz
out
xchg
in
shl
fucomip
jmp
cmp
aas
aad
in
fxtract
sub
jecxz
jmp
loop
aad
lret
sti
icebp
sar
icebp
loopne
sar
add
sti
mov
xchg
xor
aad
ljmp
int3
shl
fcomip
test
loope
leave
test
neg
fcmovnu
rcll
int
out
rcr
jmp
idiv
aas
cmp
cmpb
fimuls
int3
jmp
xchg
jmp
shl
enter
testl
aam
clc
mov
into
shl
out
int3
lock
cmp
icebp
stc
rcr
test
xchg
jmp
call
shlb
cmp
lret
out
cmc
testb
cmp
shr
add
add
ds
rcr
fsubr
push
into
cli
pop
mov
sub
lret
jl
fcmovnu
hlt
ffreep
out
mov
mov
and
in
into
into
xor
loopne
cmc
aam
flds
sub
aad
enter
call
rcr
clc
test
std
rcl
shr
add
jmp
lock
repz
repz
fcom
cmpb
hlt
out
hlt
repz
sbb
sti
int3
in
out
sub
cmp
shr
int3
not
iret
aaa
rcl
std
addl
loope
out
mov
imulb
xor
jmp
out
hlt
div
loope
lock
xlat
shl
les
div
in
enter
div
sarl
in
lret
xlat
out
stc
imul
aas
sub
stc
iret
ljmp
xor
int
lret
xlat
not
rol
loope
out
les
clc
in
out
loop
xor
in
ljmp
cld
cmp
stc
xchg
and
movb
enter
in
fdivrl
not
sar
lret
rcl
clc
icebp
in
ret
ret
xchg
loope
out
sub
rcr
cmp
idivb
cmp
aas
jecxz
test
cli
xchg
cli
in
mov
lret
xchg
shl
hlt
shl
aam
cmp
shr
cmp
clc
jecxz
sti
rcl
mov
mov
out
hlt
call
xor
sar
into
lret
in
jmp
call
roll
cmp
aad
shr
ss
and
in
jecxz
cmc
fcmovu
int
test
clc
lock
test
cmp
aaa
out
xbegin
mov
in
lret
ds
in
iret
repz
aas
clc
jecxz
and
ror
shl
fmull
mov
shl
cmp
lret
leave
call
clc
iret
loop
sar
ljmp
leave
out
ret
aam
cmc
xor
out
leave
loopne
rcr
xlat
aam
test
xchg
jmp
mov
std
lret
imull
fisubrl
fnstcw
cmp
ror
out
test
cli
loopne
aas
mov
mov
icebp
rcl
jmp
icebp
out
ss
adc
cmp
xor
jecxz
loope
loope
rcl
call
out
fcmovne
aas
fcmovnbe
out
sti
sar
cli
mov
mov
lock
rorb
in
repnz
sti
repz
iret
rcl
add
fucomp
mov
cs
icebp
repnz
cmp
shr
clc
cmc
ret
cmp
shl
cli
test
fmul
iret
ret
jmp
shr
fistpll
int3
sar
repnz
lock
test
fucom
loope
cli
rorb
repnz
xor
xor
icebp
cmp
ffree
lret
ret
sbb
sti
out
mov
loop
int3
cmp
aad
xor
sti
aam
addl
xchg
nop
sti
cld
iret
std
int
sub
lock
dec
aas
aas
cmp
std
loop
rol
mov
xchg
clc
icebp
xor
iret
lret
xor
rcl
lret
in
aaa
in
fcomp
addb
in
xchg
sar
lock
rcr
xor
shll
cmp
loopne
test
cli
rcr
call
cli
fcos
stc
jmp
addb
xlat
repz
aas
shll
std
in
repz
lock
testb
popl
xor
cmc
call
cmp
jecxz
neg
loopne
loopne
test
ljmp
mov
int
into
out
shl
ss
fdivrs
repz
rcl
jmp
jecxz
std
int3
lock
xor
rcl
in
xlat
sar
lret
fdivr
test
cmc
loope
jmp
fmulp
clc
enter
in
aaa
cmc
shl
repz
cli
xor
test
in
enter
call
ret
fsubp
jmp
int
fistpll
ror
hlt
sarl
sarl
cmp
out
stc
call
int
xchg
ljmp
add
fcmovnbe
int
loope
insl
lahf
lret
pop
push
add
lret
jl
loop
aad
enter
fldl2t
aas
xor
fldl2t
shl
ljmp
iret
jmp
out
aas
not
cs
ss
ds
ret
aad
sub
stc
stc
out
fldl
ret
in
in
fmul
clc
loope
in
clc
jecxz
test
jecxz
nop
adc
sub
das
cmp
shl
out
sar
inc
fldz
xlat
in
cld
orb
sarl
xor
in
jmp
xor
jmp
fmuls
mov
iret
jmp
not
in
xor
test
cmp
cld
std
test
cld
repnz
mov
stc
icebp
fisttpl
lret
cmp
clc
in
cmp
fidivrl
cmp
ret
mov
stc
lea
rcll
out
stc
out
fdivl
filds
jecxz
test
call
enter
loope
sub
cs
leave
fcomi
in
ljmp
jmp
mov
vpaddb
loop
sbb
stc
out
repz
sti
out
in
loopne
hlt
jecxz
hlt
xchg
decl
out
repnz
in
lock
cld
call
lret
ret
in
ret
sarb
jmp
ret
ljmp
lea
ror
clc
stc
std
int
idivb
clc
ds
mov
mov
mov
mov
xchg
ljmp
cmp
ljmp
shl
repnz
les
out
out
jmp
aam
into
call
loopne
ret
sarb
clc
cmp
loopne
shr
inc
mov
mov
int3
ror
jecxz
xor
cmp
push
rol
loope
enter
enter
test
iret
aad
xlat
aad
xor
cmp
jmp
int
test
ss
sar
fmul
out
loope
out
xchg
cmc
loop
leave
repz
ljmp
loope,pt
out
aam
incb
iret
jmp
cmp
idivb
adc
addl
out
leave
shl
int3
loope
jmp
cmp
in
cmp
ffree
cmp
clc
loop
out
fcmove
call
xchg
iret
iret
leave
jecxz
cmp
call
out
aas
jmp
fcmovnu
cmp
cld
fldl
aam
ss
repz
call
in
icebp
test
fst
rol
fmuls
lret
loope
aam
rol
sarl
cmp
icebp
ds
clc
fcmovnbe
idivl
clc
loopne
jmp
hlt
lret
in
xlat
rcl
lret
aas
fstp
repz
jecxz
call
lea
jmp
leave
lds
iret
in
dec
sti
stc
cmp
lret
clc
jecxz
loope
iret
sti
sub
in
in
xor
icebp
enter
sarl
cld
idiv
iret
shl
cld
in
fucom
or
in
out
int
into
int3
xor
call
hlt
int
out
lock
repz
cmc
fsubr
jmp
in
int
fiadds
not
fidivl
test
shl
clc
cmp
sti
mov
or
mov
hlt
out
aaa
int3
xlat
fptan
into
sar
fcom
ror
int3
aam
cmp
loopne
stc
int
neg
fiaddl
loop
out
fnsave
out
xor
clc
inc
mov
mov
in
out
enter
ret
aam
out
cmp
icebp
roll
aam
sub
fcmovnu
cmc
mov
in
xor
sub
fistpll
rolb
in
in
int
in
mov
in
ret
in
enter
out
ds
aam
loope
sbb
fsubp
fsubr
call
loop
xor
in
int3
cmp
fcomip
sar
int3
faddl
xlat
loopne
out
out
loopne
xchg
int
div
out
out
xor
jmp
in
out
aas
loopne
testl
in
in
leave
jecxz
out
hlt
out
imul
loop
jmp
iret
iret
sarb
aad
aad
pop
sbb
inc
pop
bound
jg
lret
jl
stc
idivb
call
or
filds
call
aaa
dec
in
lret
aad
ror
loop
xchg
loop
ret
in
xlat
into
xor
aaa
out
repz
fucomip
in
lock
clc
in
jmp
in
lock
mov
cmc
leave
or
out
cmp
jmp
sti
call
cmc
out
int3
int
icebp
fcmovbe
in
out
xor
jmp
test
cmp
cli
ret
repnz
enter
repz
jmp
into
fdivl
stc
and
loope
vpmulhuw
fucomip
ljmp
xor
shll
sarb
jmp
fsubp
out
cmp
out
vpavgw
icebp
loop
out
mul
icebp
lret
cmp
test
shl
ds
in
call
fimull
in
xor
hlt
sti
rol
into
loope
jmp
testl
int
repnz
idivl
xlat
out
aaa
jecxz
loop
xlat
into
sbb
loope
loopne
addb
shl
out
cmc
in
fucomip
ds
fstp
cmc
fadd
repnz
stc
ljmp
xor
xor
sti
jmp
ds
loop
loop
in
xchg
lret
iret
mov
iret
xor
shl
aam
out
fucomi
cmp
roll
call
shl
jecxz
in
repnz
rol
fucomip
repnz
stc
lock
mov
mov
aad
aaa
shlb
ss
rcl
xor
aad
cmc
neg
icebp
cmp
out
fdiv
enter
into
lret
xchg
aam
xor
push
int
sbb
xlat
test
mov
fiadds
test
loopne
cmc
in
xor
leave
fnstsw
ds
into
xor
aam
add
lret
in
mov
in
rcr
test
cmp
aam
fadd
test
aam
enter
in
xchg
ljmp
xor
hlt
in
repnz
loop
cld
mul
movl
mov
test
cmc
in
int3
stc
neg
shl
sar
stc
shl
stc
iret
loop
jecxz
mov
repnz
test
cmp
xor
ret
cmc
adc
sbb
cli
out
mov
out
iret
out
xlat
sar
ljmp
into
loop
loope
cli
shl
hlt
xchg
fdecstp
xchg
fmull
cmp
cmp
lret
jmp
iret
into
aam
faddp
jmp
mov
lea
leave
out
aaa
clc
ror
cmc
shl
in
rcl
test
in
sub
in
xor
das
clc
fcmovnbe
out
int3
out
aam
aas
fprem1
test
into
xlat
clc
test
test
cli
movl
cmp
shl
lock
or
loope
int3
xchg
jmp
aam
call
cld
fmul
repnz
int3
cmp
push
orl
ljmp
xor
aam
aaa
in
out
cmp
sarb
iret
lock
leave
loop
lret
lret
fcmovu
loope
ror
xor
lret
cmc
cmp
icebp
call
fcomi
rorl
xchg
nop
lret
loop
divb
cmp
lock
fmulp
cmp
cld
stc
or
testl
loop
jmp
lock
cli
sub
fldl2t
clc
out
call
test
cmp
cmp
repnz
fstp
jecxz
jmp
cmp
fildl
out
jmp
int3
in
in
aaa
loopne
fadd
jecxz
repnz
mov
in
repz
jmp
in
lret
in
stc
aad
fadds
incb
test
std
mov
mov
xor
aaa
aaa
ss
xlat
lock
cli
xchg
and
jecxz
leave
stc
jecxz
loopne
add
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
adc
xorb
add
out
icebp
repz
int3
xor
clc
lret
out
int3
aas
cmc
fstpt
cmp
and
fadds
mov
pop
shl
int3
repnz
repz
not
jecxz
xlat
cmp
aad
jecxz
test
cli
xchg
out
ror
aas
xor
xlat
xor
sar
dec
ljmp
fcmovnb
call
cli
loopne
nop
and
in
out
cmp
cmp
lret
repz
in
stc
mov
enter
out
clc
out
ljmp
jecxz
in
aaa
stc
shr
test
icebp
lock
testb
cmc
in
in
lret
clc
jmp
in
fdivr
out
cli
clc
fcmovb
xchg
test
test
mov
xor
cmp
out
shl
aam
cli
cmp
out
cmc
loop
testb
lret
jmp
shl
hlt
in
lock
sarl
frstpm(287
rolb
fcomp
xchg
in
call
vphaddwd
jmp
int3
ljmp
fdiv
sar
stc
lret
mov
aad
divl
repz
cmp
out
cmp
cmp
ljmp
loopne
sti
jmp
jecxz
mov
out
fstp
fabs
int3
ds
jmp
xchg
enter
lock
out
xor
iret
ror
cmc
in
out
flds
fcmovnb
mul
iret
iret
mov
jmp
fdivp
loop,pn
imul
fxch
cmp
jmp
cld
out
out
mov
mov
rolb
rcl
shl
int
idiv
out
lret
rol
out
and
std
sub
int
xchg
test
ror
enter
lret
int
xchg
sti
sbb
rorb
xchg
rcll
lret
leave
icebp
imul
jmp
ret
sar
cli
decl
loop
rcl
icebp
xor
int3
aam
stc
lock
lock
std
aam
hlt
out
sbb
in
out
mov
in
loope
iret
fdiv
shr
fmul
enter
cmp
clc
fcmovb
out
ret
xchg
loope
mov
cs
cmp
sti
lock
jecxz
aad
cmp
in
in
sub
xlat
loop
sti
fucomi
rcl
cmp
cmp
out
rcr
sti
out
fadds
iret
jmp
out
cs
cmc
out
into
call
repnz
ret
fcmovb
shl
jmp
lret
fucomip
xchg
loope
vpsllq
fadd
jmp
cmp
faddl
rol
fiadds
clc
enter
xor
cmp
xor
shr
cmp
in
fnstsw
hlt
hlt
stc
aam
std
fnstsw
mov
jecxz
mov
in
int
xlat
fcomp
enter
stc
rcr
loop
test
aas
decl
rorl
sarb
not
fdiv
std
shl
icebp
shl
hlt
xchg
xor
incb
xor
icebp
sar
into
sarl
test
in
std
call
ljmp
out
loope
in
ret
repnz
or
cmp
test
out
enter
clc
les
fprem
sbb
aad
ds
ljmp
clc
mov
cmc
aam
aaa
lret
call
out
ret
repz
out
cld
xchg
test
xchg
adcl
sar
call
into
test
cmp
jmp
fcmovu
fdiv
loop
cmc
loope
loopne
sti
into
cmp
cmp
xlat
jecxz
in
cld
fnstcw
mov
ror
test
mov
out
or
ffreep
in
int
sub
lret
ss
lock
shl
fadd
mov
out
out
lret
jmp
leave
icebp
xor
xor
aad
stc
cmp
cmp
in
hlt
call
enter
mov
xor
int3
fcmovnbe
ror
xlat
clc
fdiv
sar
sti
repnz
xlat
sub
out
lret
out
out
fdiv
out
repnz
ljmp
addl
cmc
xchg
in
iret
cmp
lret
in
in
fildl
loope
mov
fcmovu
int
mov
iret
mov
in
loop
aam
fnstsw
sar
call
movl
iret
int3
mov
in
test
rol
ljmp
shr
xchg
loope
aam
testl
sub
cli
cli
idivb
aas
loopne
repz
out
in
out
or
std
mov
out
mov
in
loopne
xor
push
movl
jmp
into
rol
aad
rcl
jmp
push
pop
push
and
jl
xor
out
sti
mul
lret
std
add
aam
repnz
int3
flds
xchg
enter
fcmovu
fldt
cmp
loopne
shl
mul
cmp
call
filds
rcr
int3
call
ret
das
out
hlt
enter
lret
std
cmp
cmp
test
mov
test
out
jmp
xor
call
not
test
cli
mov
xchg
fdivr
lea
cmc
jmp
loopne
fstpt
aas
test
loope
call
repz
rcl
lock
cmc
icebp
clc
jmp
cli
fcmovu
ds
push
mov
iret
test
mov
shl
shl
iret
icebp
cmp
aad
iret
cmp
aas
dec
fdivrp
sti
hlt
loopne
rcr
enter
in
fst
into
loopne
xor
ret
cmp
cmp
shl
fdivrp
shl
fimull
int
sub
call
ss
cmp
repz
idiv
into
rcl
enter
in
fisttpl
jecxz
cmp
shr
std
iret
cmp
clc
sub
in
test
in
fmulp
enter
mov
sub
in
aam
stc
stc
repz
std
icebp
icebp
in
xor
icebp
in
ret
lret
lret
neg
cmpb
cmp
jmp
test
shrb
enter
cmp
out
sti
aad
fucomp
ret
fcmovnbe
fucompp
mov
orb
into
ljmp
cmc
fnstcw
cmc
int3
ss
sti
ds
in
stc
enter
iret
shr
nop
in
int
rcl
lock
shll
loope,pt
ret
addb
clc
mov
mov
in
ror
lret
in
adc
into
ret
fisttpl
dec
fsub
lret
ljmp
hlt
aaa
cmp
jmp
iret
aas
clc
sti
ret
cld
in
fmull
jmp
ljmp
sti
lret
out
lock
roll
out
idiv
jmp
iret
jmp
out
shl
into
test
std
out
loope
std
out
adc
hlt
xchg
loopne
out
mov
orl
out
cli
fst
ss
cmp
ds
repz
in
test
or
std
fmul
xor
fsubrs
cmp
int3
shl
dec
sti
cmc
rcr
fdivp
fdivr
in
mov
lock
test
jmp
jmp
cmp
ds
hlt
std
jmp
lret
test
mov
fsubr
hlt
repz
lret
shr
cli
std
shr
lock
mov
out
jecxz
rorl
not
mov
call
ffreep
hlt
fcomi
shl
xchg
out
test
iret
into
iret
shl
out
out
icebp
fdivrl
out
rcl
int3
sti
cli
fcmovb
cmp
cmp
adc
call
call
sti
rcr
fidivrs
loop
cmp
sti
test
in
or
xchg
out
leave
icebp
cmp
clc
in
ss
testl
test
fcomi
mov
popl
cmp
rcl
xor
enter
mul
mul
sub
in
jmp
fsub
loope
xor
in
xor
cmpl
xlat
sar
jmp
lock
loop
cmc
ret
shl
xor
repnz
cmc
loopne
cmp
xchg
stc
loope
sti
xchg
fisttpl
loope
loopne
call
test
cmp
sbb
out
jecxz
std
in
iret
mov
int3
cmc
ret
xor
stc
cmp
loop
aam
cli
sti
sbb
mov
orl
lret
cmp
testb
cmp
lock
lret
out
cmc
cld
in
xor
in
in
repz
neg
fucom
mov
fstp
mov
out
ret
cs
enter
not
int3
lock
and
xchg
in
xchg
loope
loope
xlat
icebp
fnstcw
imul
icebp
sti
iret
loop
mov
loope
std
xchg
lea
call
lock
stc
shl
repz
ds
mov
out
fcos
mov
stc
fsubr
sub
cld
cld
clc
cli
stc
shr
repnz
neg
loopne
stc
test
cli
fimuls
sub
jmp
clc
aas
ret
fsubr
cld
stc
xchg
leave
xchg
rorl
cmp
mul
fdiv
lret
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
cs
jl
add
cmp
in
repnz
in
int
inc
jmp
aad
int
lret
icebp
icebp
sti
idivl
in
cmp
xlat
in
out
fmulp
xchg
in
xlat
lret
leave
out
icebp
fsincos
cmp
cmc
hlt
cli
mul
jecxz
test
sbb
repz
filds
repz
cld
jmp
ss
fcmovne
in
test
xchg
aaa
sti
hlt
out
lret
shr
jecxz
sti
std
repz
sti
mov
xchg
lock
xor
rcl
iret
cmp
clc
clc
cmc
ljmp
add
int3
int3
out
fdivrp
iret
ret
fldz
fstp
fdivrs
fcmovbe
iret
loopne
xor
loopne
repz
repnz
clc
ftst
test
into
fmul
aam
fcmovnu
repnz
out
xor
in
hlt
ret
fcomp
in
shl
xchg
shll
call
test
out
into
test
repnz
fmulp
xchg
loope
jecxz
clc
xchg
in
jecxz
call
xor
call
loop
rcr
in
jmp
jmp
fucomip
cmc
jmp
cmp
jmp
cmp
sarb
ss
in
fcomi
loopne
rorb
in
mov
clc
repnz
xchg
aad
shl
fcmovu
out
ss
rcl
aas
rcl
mov
xchg
fstp
ret
into
jecxz
leave
hlt
cmc
xlat
aad
aad
loope
xor
jecxz
test
clc
add
jecxz
in
xchg
rol
bnd
aas
sti
in
fdivrp
xchg
cmc
jecxz
call
iret
adcb
out
ror
enter
rol
in
sarl
xchg
ljmp
lret
call
lret
cmp
idivl
int
rcl
clc
cmp
jmp
faddl
lret
xor
cmp
out
fdivr
clc
ror
fcmovnu
lock
xlat
shl
test
test
sub
out
faddp
repz
hlt
cmc
fcmovu
enter
into
iret
fst
cli
aam
aam
in
in
mov
ret
test
loope
into
cmp
loop
in
lock
sarb
loop
jmp
in
in
mov
mov
cli
adc
leave
in
hlt
jmp
fincstp
leave
in
imul
and
std
std
fst
ljmp
ljmp
clc
xor
lret
leave
rcl
sarl
test
ret
ljmp
lock
mov
xor
into
out
int3
aad
fdivs
lock
aam
hlt
ret
test
int3
int
fmul
in
mov
out
das
out
repz
ss
xlat
fldl2e
repnz
stc
rolb
xchg
in
aad
shl
das
rcr
iret
cmp
ret
out
ret
incl
ljmp
out
std
loope
jmp
in
out
sti
out
int3
repnz
frstpm(287
test
xchg
loopne
std
fsubr
loope
in
in
mov
cmc
into
ror
fdivr
cmc
cmp
loope
aas
hlt
ds
fcomi
call
leave
loope
call
les
out
cmc
aaa
iret
cmp
loope
testl
lret
mov
sub
loop
in
std
imul
out
leave
cmp
icebp
into
out
aas
aad
test
mul
add
and
sub
out
cmp
cs
cmp
int3
aam
lds
hlt
ffree
out
out
int
in
out
shl
idivb
lret
iret
aas
into
cmp
cmp
jmp
aad
decb
fdivr
lret
into
lret
repz
fstpt
leave
jmp
addl
mov
das
hlt
aam
ss
icebp
out
int3
incb
out
loopne
stc
loope
int
lret
xchg
loop
lret
in
lret
jmp
cmp
int
aad
hlt
sar
repnz
sub
out
lock
lds
xor
xor
fcomi
out
out
sbb
out
icebp
call
fsub
fcmovne
jmp
xor
sub
fidivl
leave
clc
fdivp
ds
idiv
repnz
int
int
lea
ret
in
ljmp
jecxz
xchg
cli
ljmp
leave
mov
iret
shlb
sti
xor
sti
cmp
lret
shl
lock
and
jmp
lret
mov
in
cmp
stc
cmp
iret
cmp
aas
cmp
xchg
out
loope
xchg
test
ret
aaa
xor
sti
out
aas
adc
cmp
repnz
hlt
cmc
aad
loopne
in
jecxz
mov
repnz
ljmp
aad
orb
xchg
fs
add
adc
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
les
add
loop
cmpb
fmuls
xor
out
enter
out
out
lret
in
fsubr
fdivrp
cli
cmc
out
jecxz
fsubr
out
push
rol
lock
sti
cmp
neg
shr
ljmp
ljmp
repz
mov
leave
in
lock
out
xor
fldl
out
stc
cli
test
loopne
fmul
cli
jecxz
test
repz
clc
in
shl
cli
int3
fst
ffree
fmul
into
loop
out
imul
loop
sbb
out
lret
out
lret
aaa
cmp
sarb
into
fcmove
imul
lock
xlat
cmc
call
xchg
cli
ljmp
fidivrs
out
ss
hlt
std
out
fld
clc
lret
les
adc
icebp
fisubrs
repz
into
cmp
cmp
xor
out
call
mov
out
out
mov
repnz
aad
repnz
cli
roll
xchg
mov
call
xor
lret
int
cmp
rolb
hlt
fucomp
jmp
fdiv
ds
clc
into
repnz
rcl
cmp
cld
bnd
cmp
jecxz
cld
div
sub
int3
fdivrp
out
leave
fsubrs
jmp
hlt
pushl
aas
cmp
sti
fdivs
shl
out
fcom
aad
jmp
incl
cs
shll
in
cmp
ds
fadd
out
into
fsub
fcmovnu
imul
fadd
mov
xchg
call
int3
hlt
iret
std
in
in
into
ds
fucomp
repnz
cli
xchg
xor
adc
rcr
ror
leave
iret
aam
out
ds
xlat
cmp
cli
cmc
loop
ret
xor
faddl
das
in
rcl
cmc
not
clc
neg
divb
cld
loop
neg
cld
fcmovne
lds
cli
repz
xor
neg
shl
fucomp
fucomip
in
div
jmp
xchg
xchg
cmc
loope
ds
ret
leave
repnz
shl
repz
iret
rcr
aas
hlt
leave
clc
clc
leave
loop
clc
in
lret
std
mov
icebp
loopne
shl
fptan
in
stc
loope
cmp
lds
fadds
fadd
lret
sub
addb
fnstenv
xor
cmp
lret
fdivp
test
addl
in
int
lret
fcmovnbe
in
iret
cli
stc
rcl
adc
aam
jmp
repz
xor
shr
out
idiv
loopne
icebp
repnz
shl
div
stc
lret
leave
mov
fadd
in
xor
xor
in
rcr
cmp
aad
test
lds
mov
ret
shl
into
xlat
xor
aam
xor
cmp
mov
iret
in
dec
lret
mov
xchg
cmc
sub
loopne
sub
out
fcomp
fucomp
jmp
loopne
xchg
clc
cmc
hlt
or
sti
repz
loopne
idiv
jmp
fcmove
jmp
ljmp
clc
xchg
mov
cld
mov
out
cmc
into
xor
cli
int
aad
ds
cli
fsub
ror
cmp
mov
lret
xchg
in
lock
cmp
cs
into
aad
or
rcl
jecxz
std
xlat
in
mov
repnz
aad
cmc
xlat
fnsave
cmc
cld
repnz
clc
sti
rol
aam
mul
jmp
loope
mov
jmp
leave
sub
cmp
int3
aam
aas
fucom
xlat
cld
mov
test
in
cs
stc
xor
jmp
fdiv
sarl
xchg
movb
test
rol
fcmovu
lret
rcr
loope
sar
test
dec
sti
and
out
cmp
rorb
test
into
fidivs
sarl
icebp
fldl
add
idiv
jmp
out
fldl
jmp
out
jmp
cmp
into
cld
test
faddl
fcmovu
fcomp
loop
loop
cs
cmp
fsub
shlb
icebp
cmp
aad
xchg
jecxz
in
lock
lock
xlat
cmp
ljmp
loopne
hlt
neg
leave
xchg
jecxz
out
repnz
xor
out
in
enter
addb
jmp
mov
call
fcmovne
enter
fcomip
out
repnz
div
loopne
repz
sti
sbb
cld
adc
lock
rol
hlt
fidivrl
ds
fucom
out
cli
aas
in
fsub
fadds
icebp
loopne
leave
sti
lret
ror
repnz
loopne
loope
mov
out
in
and
bnd
xlat
ror
fcmovu
fcmovne
sbb
mov
jl
add
fmuls
mul
cs
cli
icebp
ljmp
fptan
sar
ret
loope
fmul
loop
xchg
xor
jmp
std
sti
cs
idiv
fistpll
cmp
repnz
loopne
flds
mov
xchg
shl
enter
into
repnz
test
in
jecxz
in
xchg
xchg
loop
repnz
aaa
xlat
sti
repz
cmp
clc
fcmovnb
cld
jmp
jmp
enter
test
mov
shll
xor
mov
int
int3
cmp
ds
mul
fcmovu
std
mov
ljmp
xor
xor
xor
aaa
flds
cmp
sar
out
in
loopne
fcmovu
xchg
sub
loop
repnz
lock
xlat
cmc
filds
ljmp
xlat
icebp
ljmp
cmp
cmp
fcomi
mov
fstl
lret
fsubr
in
sti
lock
cmp
repz
cld
ret
loop
sti
ret
cmp
fcmovbe
loope
fimull
xchg
enter
hlt
aaa
out
int
xor
aad
iret
repz
sarl
rorl
jmp
filds
div
sar
out
clc
div
fstpt
enter
loop
icebp
cli
mov
xorl
leave
cmp
cli
cmp
or
fchs
icebp
aas
repnz
in
repz
ret
cmp
fcmovnbe
in
cmc
cmp
rcr
aad
std
ret
leave
mov
test
aas
loopne
xor
shl
out
shl
fdivr
hlt
aas
cld
cli
xchg
fucomip
enter
orl
shlb
fistpll
rcl
jecxz
xlat
push
shl
loopne
fucomip
fsub
xchg
out
cmc
xlat
in
ljmp
cli
aam
sti
and
xchg
ret
clc
fdivr
sti
icebp
in
mov
decl
xlat
sar
out
into
lret
test
sti
lock
testl
out
shl
in
out
icebp
int
fptan
cld
iret
hlt
test
inc
mov
ret
int3
in
popl
mov
shl
xor
cmc
shr
jmp
fcomi
test
jecxz
cmp
jecxz
fsub
out
sub
ret
repz
imul
hlt
call
div
jmp
int
fcmovu
mov
loope
in
sub
out
jmp
not
ret
cmp
fcomip
std
out
enter
test
sub
hlt
mov
lret
xlat
hlt
repnz
leave
lret
call
xchg
loopne
lret
in
cmp
stc
int
cmp
testb
mov
xor
jmp
in
div
int3
clc
cmp
cmc
fdivrp
addb
out
xchg
test
sub
ret
aam
in
out
rcr
idiv
shlb
xor
leave
ds
aad
mov
jmp
loopne
jmp
leave
cmpl
loop
in
test
xor
xlat
xor
cld
fdivrs
jmp
hlt
shl
shl
xlat
leave
orb
sub
ror
into
cld
clc
loope
out
fiaddl
ror
mov
fiadds
xchg
jecxz
out
fmulp
loop
stc
cmc
in
out
into
fdivr
ror
lock
fcomp
icebp
in
loop
and
ljmp
loop
aad
ljmp
clc
clc
xchg
loop
fmul
jmp
jecxz
aam
lock
cmp
icebp
lock
jmp
aas
sti
cmc
cmp
clc
xlat
fisttpl
sub
loopne
ss
ss
stc
cmc
or
in
in
call
jmp
test
in
fucomi
in
lret
ljmp
cli
shl
in
lds
rorb
leave
cmp
cmp
enter
jmp
cli
xchg
fimuls
xchg
xchg
lock
in
cmp
hlt
fdivr
not
cld
vpsadbw
ljmp
imul
rol
fldlg2
cld
lock
repz
cmc
fadd
repnz
mov
jmp
fcomi
xchg
rcl
out
rcl
in
repnz
sarb
ror
sbb
cmp
aas
add
jecxz
cld
xor
out
out
aad
cli
ror
sarl
repnz
mov
xchg
iret
leave
out
mov
repnz
icebp
lock
in
div
lock
loopne
out
sar
lock
fmull
out
mov
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
lock
call
rcr
call
cmp
in
aad
jecxz
jmp
in
orl
leave
int3
sti
incb
in
xchg
loopne
in
mov
out
in
in
out
ljmp
fdivr
sti
out
repz
fiadds
xlat
mov
in
cmp
in
out
mov
shl
xor
aad
div
out
jecxz
clc
fstp
cmp
in
mov
int
lret
lret
mov
int
in
enter
neg
fincstp
into
cld
out
ret
xlat
loope
nop
in
jmp
enter
lret
std
cmp
test
in
std
sti
xchg
mov
icebp
icebp
loop
xor
sub
aam
clc
call
in
rolb
jmp
mov
xchg
out
rcl
loopne
neg
xor
rol
fdivrs
fstp
rol
stc
fisttpl
lret
jmp
int3
fdivrl
into
leave
in
lock
lock
cmp
lock
shl
adc
cli
fsub
or
test
stc
leave
lock
leave
int3
hlt
enter
in
cmpl
in
shl
out
leave
loopne
mov
fsubrp
xchg
icebp
enter
out
aam
int
leave
sarb
cld
decb
xlat
xlat
out
mov
xor
fsubr
out
fstpt
lds
loope
fucomip
in
jmp
push
out
lret
xlat
repz
sti
xor
cld
fsubrp
repz
aam
aad
lock
rcr
rorb
rolb
sub
sarb
xlat
cmp
int3
fcmovnu
cmp
out
test
fldpi
xchg
sub
aam
lock
fcmovnbe
ljmp
clc
add
loop
call
loop
or
int3
in
shll
aam
hlt
cmp
jmp
fcmovnb
cmp
sarb
cmp
lret
jmp
enter
mov
ror
aad
neg
int
xlat
cmp
test
fildl
sti
mov
out
ret
sti
out
rcl
xlat
iret
int3
loope
cmp
roll
iret
ljmp
loop
clc
in
xor
imul
flds
out
enter
xchg
fisttpll
nop
sub
int3
imul
in
iret
aad
shl
cmp
filds
movb
xchg
leave
ret
sarb
into
ret
div
ret
rcr
test
loopne
xchg
addb
jmp
jmp
jmp
rcl
cmp
cmc
loop
shl
sub
add
test
in
mov
int
rcl
clc
lret
lock
fsubp
test
jecxz
test
mov
lret
mov
xchg
int
iret
aam
in
xlat
out
out
neg
cmpl
in
in
fdivr
fmull
test
aaa
cli
cmp
repnz
jmp
clc
out
jmp
loopne
mov
out
rorl
enter
cmp
test
test
stc
in
lds
out
xchg
lock
xor
lret
icebp
std
hlt
ljmp
idiv
in
sti
into
jecxz
in
aad
sar
xor
div
ds
ftst
fdiv
mul
repnz
ret
loop
loop
lock
loop
sub
loopne
int
not
call
std
sti
in
cli
div
xchg
mov
ljmp
cmp
cmp
std
ret
cmp
fnstsw
enter
in
xchg
lret
jecxz
in
leave
ljmp
fcom
cld
aam
in
loopne
out
out
cld
out
mov
xchg
repz
in
jecxz
fld
rcl
div
lret
iret
xlat
loope
clc
ret
aam
fdivrp
jecxz
rcr
lret
in
enter
into
fdivrp
lret
fmul
int3
in
jecxz
testl
test
sar
xor
loop
repnz
roll
mov
in
ror
iret
jmp
enter
lret
lret
sar
rcr
int
loop
xchg
hlt
fst
fdivrp
fmul
out
loope
in
xchg
leave
fidivs
fsubr
shr
fcomi
jmp
in
stc
roll
fdivp
rolb
cs
shll
sti
idiv
std
cli
icebp
ds
test
loope
cmc
xlat
loopne
cmp
call
repz
loop
ret
xor
aad
cmp
test
ffreep
xor
fisttpl
xchg
ficoms
int
clc
lret
out
out
cmp
rcr
shl
hlt
sti
sub
out
in
ror
ret
int
icebp
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
dec
ljmp
add
xlat
icebp
cli
ds
int
cmp
xchg
in
fiaddl
jmp
sar
out
xlat
cs
icebp
ljmp
into
testb
or
xchg
cld
test
ret
cmp
out
int3
sti
sti
loopne
std
cmp
rol
loop
leave
int3
fcmovu
loopne
iret
shl
jmp
sub
clc
fld
cmp
and
loop
in
cld
sar
nop
jmp
call
icebp
int3
cld
frndint
cmp
mov
cld
jmp
nop
and
xor
fnstenv
sub
cmp
cli
ffreep
out
cmp
cld
mov
clc
mul
cs
hlt
neg
cld
cmp
cld
fcmovnbe
addl
xlat
testl
clc
xor
int
lret
repnz
in
repnz
lock
loop
orb
call
into
cmc
hlt
sti
jmp
std
cmp
int3
rol
rol
int
std
rclb
sub
shl
xor
xor
jmp
cld
rcl
aam
ret
xchg
out
xlat
ljmp
loop
sub
cmp
in
ljmp
clc
hlt
xlat
test
fldl
orl
xor
in
ljmp
adc
in
lret
loop
loopne
shl
das
jecxz
sub
cli
xor
hlt
fsubr
ds
xor
aam
fcmovu
lret
jecxz
rol
enter
cli
cmp
ror
stc
fcmovu
mov
decl
out
dec
repnz
xor
cmc
in
ljmp
cmc
shl
xor
enter
in
icebp
lret
xchg
xchg
in
xor
enter
aas
repnz
cmp
fxch
and
loope
xchg
ret
ljmp
lret
ret
ret
stc
int
jmp
xchg
lret
mov
stc
idivb
hlt
hlt
test
aam
fdivrp
cld
call
mov
int
cld
out
neg
not
aam
loope
faddp
lret
int3
fcoml
cld
shr
jmp
cmc
xlat
ljmp
fdivr
sti
fisttpll
idiv
lret
nop
ds
call
ror
sar
sar
rcr
out
xchg
lea
into
cmp
sub
fcomi
fneni(8087
fsubr
shl
cmc
fcom
movl
incb
aam
xlat
hlt
cmp
stc
out
cmp
in
in
loope
out
fsub
out
loope
jecxz
lret
mov
aam
in
xor
call
fptan
sti
in
sarb
sti
aad
icebp
leave
out
bnd
in
jmp
cmp
repz
sarb
jecxz
std
enter
std
cli
ss
sarl
in
neg
std
loopne
repnz
xchg
xchg
cli
jecxz
xchg
ljmp
stc
xor
hlt
xlat
int
lock
int
cmp
in
fdivr
hlt
mov
out
out
in
iret
fstl
cmp
fdiv
into
int
cmp
adc
shl
testl
into
iret
stc
xor
cmp
cli
int3
hlt
idiv
repnz
sti
loop
fstp
jecxz
repz
fsub
out
out
std
push
faddl
cmc
loop
mov
fdiv
and
out
ljmp
xor
int3
repnz
cmc
leave
cmc
cld
lret
fucom
lock
fmulp
ds
cli
aad
std
aad
iret
cmp
std
aad
rol
and
cli
mov
fucom
roll
shl
aam
neg
flds
ds
sbb
jmp
leave
popl
out
xor
iret
shl
repz
hlt
ret
hlt
jecxz
and
fxch
mov
out
out
sub
out
xlat
aaa
xor
iret
rcl
cmp
xor
loopne,pt
shl
sbb
shl
out
incb
icebp
into
int
cmp
xor
or
test
rorl
lret
sti
lret
mov
repz
stc
div
int3
cmp
int
cmp
int
fcmovbe
push
ret
ffree
lret
fst
std
iret
imulb
ss
xlat
cld
cmp
out
cmp
ds
test
aam
ds
lock
into
mov
sti
ss
repnz
repnz
sti
stc
fdivrp
fistpll
fimuls
xchg
mov
out
int3
vpslld
in
in
jmp
or
inc
js
inc
or
inc
cld
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
int3
cmpsl
sub
add
icebp
in
cmp
cmp
enter
fisttps
call
idivl
in
cmp
cli
hlt
hlt
fcmovnu
ror
cld
jecxz
xor
loop
out
mov
and
lock
xor
aam
repz
cmp
fdivr
and
faddl
int3
xor
aam
idiv
enter
cli
fstpt
aas
fisttpll
loop
xchg
int3
xchg
icebp
mov
xor
imul
jecxz
stc
out
repnz
out
iret
aad
in
shl
loope
fcmovu
mul
movb
ret
cmp
enter
iret
leave
cmp
cmp
loop
out
mov
fcmovne
ret
out
out
into
out
aaa
out
fdiv
xor
addl
std
mov
mov
loop
mul
enter
call
out
loope
loopne
stc
fcmovb
ljmp
out
into
mov
repnz
aas
rcr
cmp
adc
hlt
cmc
mov
mov
clc
std
loope
iret
ret
call
aam
lret
jmp
cld
call
testl
shlb
lret
cmp
loop
add
clc
test
out
cli
fstp
test
out
int
int
aaa
cli
iret
cmp
cmp
testb
loope
mov
aad
ret
ljmp
cmc
or
test
cmc
std
ljmp
in
aam
xor
neg
stc
add
loope
sti
fadd
testb
into
ror
call
lret
cld
aaa
cmp
cmc
fcomp
fmuls
jmp
into
jecxz
loop
call
call
jecxz
xchg
sti
faddl
xchg
lock
aam
aam
cmp
xlat
ds
clc
cmpl
enter
icebp
xchg
loop
icebp
loopne
into
int
lret
int3
cli
fdiv
or
sti
std
jmp
ljmp
in
iret
cmc
in
int3
lret
fmulp
stc
cmp
cmp
jmp
faddp
lret
out
test
repz
sub
leave
cmp
aam
jecxz
in
mov
fdivrp
cld
jmp
fdivp
out
out
fidivs
repnz
lock
cli
in
cmp
rcr
int3
mov
loop
xor
cmp
cmc
cmp
iret
lret
rcr
repnz
orl
xchg
xor
fdivrs
xlat
stc
out
lret
fidivl
cmp
rcl
test
in
enter
repnz
ss
incl
out
fucom
fidivrl
loop
ret
out
clc
lret
out
jecxz
jecxz
sub
lock
cli
shl
cli
cli
loope
fdivrl
xchg
jmp
xchg
cld
cmc
loopne
shll
ret
iret
jmp
aad
iret
lock
jecxz
shl
test
jmp
in
loop
int
push
repz
clc
sarl
test
fchs
loope
xchg
mov
ss
cmp
cmp
xor
fsubp
repz
out
orb
aad
sti
fdivrl
in
cmp
in
test
aas
decb
into
out
iret
adcb
div
jmp
fsqrt
in
loopne
ds
hlt
ftst
lret
mov
dec
fsub
int
in
enter
jmp
sti
cmp
loope
test
fnsetpm(287
fdiv
aad
and
sub
lret
in
rcl
loop
ret
shr
cmp
cli
repz
iret
out
shl
repz
mov
nop
xchg
loope
repz
stc
int
repz
ss
ror
in
rcl
aam
xchg
ret
filds
out
into
aaa
xor
jmp
sarl
out
xor
ds
ffree
addl
ljmp
jmp
into
std
aam
cld
push
incl
xchg
ljmp
mov
ror
cmp
std
in
sar
lock
repnz
sbb
out
fdivr
fdivr
mov
xchg
loop
clc
lret
int
xlat
or
xchg
div
lret
in
les
int3
aam
stc
leave
cmp
int3
cmp
cmp
aam
icebp
in
loopne
test
fucom
out
std
in
adc
aad
in
xor
aad
loopne
loop
ret
jmp
test
xchg
ret
std
in
cmp
loopne
ret
cld
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
div
fistpll
add
xchg
xchg
icebp
shl
ds
jmp
sar
fdivl
lock
in
shl
rol
or
hlt
fdivrp
icebp
loopne
int
sub
rcl
cmp
aam
xor
sti
cld
rolb
idivb
jmp
fsubp
xchg
enter
ror
repz
xlat
cmp
loop
jecxz
call
shl
mov
aaa
jmp
sti
sti
aas
sti
std
cmc
ret
icebp
addl
jmp
addl
cmp
ss
cmp
shl
ds
enter
call
test
popl
vpaddusw
clc
aam
sar
shl
aam
xlat
stc
in
addb
xchg
lret
stc
fdivr
sarl
ret
xchg
ret
loopne
sti
cli
xchg
out
int3
int3
loopne
aad
fdivrs
stc
shl
cmp
addb
out
sbb
into
shl
xor
repnz
idivl
aad
lret
out
std
shl
div
in
hlt
orl
shll
call
icebp
iret
rolb
xchg
mov
in
xchg
ljmp
repz
sarl
jmp
in
shl
neg
incl
fsub
mov
call
mov
das
test
out
in
into
lock
loope
shl
cmc
ret
test
test
out
mov
out
xor
jmp
into
into
in
aas
cmp
fmull
std
fsub
xchg
in
aam
icebp
test
lock
fcmove
shr
clc
cmpl
clc
ljmp
xchg
cmp
fdivs
fsubr
repz
icebp
iret
sti
iret
fdivrl
ds
test
in
in
cld
xchg
out
out
mov
lret
aad
aad
out
loopne
xor
aad
loop
ret
ret
loope
nop
clc
mov
cmp
xor
loope
ljmp
test
cli
ljmp
rcll
in
sti
int3
lret
rolb
fsubrp
mov
out
xlat
mov
jecxz
mov
mov
repz
out
icebp
fyl2x
iret
fcmovne
aas
xor
loop,pt
ljmp
loope
mov
int3
rol
sub
std
in
imul
into
sarl
fcos
cli
int3
int
ffreep
xor
rcl
lret
fucomp
repnz
xlat
jecxz
cli
out
and
leave
testl
hlt
lret
int
jmp
test
mov
std
std
enter
fst
enter
icebp
in
jecxz
xlat
fnstcw
call
xlat
lock
out
ljmp
loopne
addb
fcmove
xor
jmp
ret
fmul
out
repnz
div
cld
loopne
xchg
in
xchg
shrb
fld
fdiv
jmp
into
stc
int
out
jecxz
out
clc
lret
int3
out
cmp
out
sarl
lret
cmp
leave
sarl
clc
jecxz
sbb
cmp
out
int
out
fsubr
cld
enter
cmp
rcr
leave
in
iret
int3
cmp
rcl
mov
loope
fidivrs
loopne
int3
orb
shll
out
lds
stc
cmp
neg
aam
add
fadd
rorl
into
clc
incl
ss
iret
cmc
lret
enter
int3
dec
jecxz
fcmovu
xlat
xlat
xlat
leave
fldl2e
rorl
rcr
out
ret
xor
xor
out
repz
hlt
loope
cmp
cmc
fcmovu
lret
out
fdivr
fldl
xlat
sti
out
lret
aam
ljmp
xlat
test
ret
loop
fcmovu
cld
incb
sti
xor
out
xlat
jecxz
cld
lock
mul
test
sbb
xchg
out
out
cs
lret
in
jmp
cli
repz
in
mov
repnz
fcmovnu
fisttpl
mov
lock
in
cmp
call
rcl
icebp
stc
loop
cli
test
fstl
mov
shrl
loope
ljmp
ljmp
ds
mov
roll
jmp
stc
xor
sti
repnz
cmp
loope
cld
fnsetpm(287
sti
xlat
addl
test
cmp
repnz
rcl
repz
call
in
fmul
leave
addl
in
lock
repz
and
loope
testb
in
repz
fcmove
jmp
xabort
lret
imul
sar
jecxz
mov
incl
add
int
ret
fstp
sbb
imul
add
out
and
fucomip
loop
out
xor
call
cli
incb
ljmp
mov
mov
jecxz
shl
into
lret
cmp
xor
sarb
fcom
aam
xchg
loope
out
enter
out
in
xor
jecxz
stc
int3
int3
xor
shl
xchg
sar
fimuls
loopne
incb
rcr
xlat
aam
cmp
ljmp
cmc
mov
leave
in
stc
mov
leave
lea
divl
cmp
xlat
jmp
iret
aam
loopne
jmp
or
loop
repz
ret
cmc
iret
fucomi
repz
sti
sar
xor
incb
orl
aad
shl
rcl
cmp
shl
shl
fstp
out
jmp
iret
int3
ss
out
lock
loop
aam
loopne
mov
fsubp
fdivr
cld
std
fucomip
shr
in
stc
lret
cmp
enter
cmp
repnz
in
jecxz
lret
fcmovnu
adc
jecxz
cs
lret
out
xlat
shll
jecxz
in
test
sbb
cmp
out
mov
into
mov
loope
enter
std
into
cmp
out
out
xlat
jecxz
cmp
loop
aad
jmp
xchg
in
xor
sub
lret
clc
idivl
repnz
roll
in
faddl
lea
aad
shr
xor
lret
xlat
in
cmp
addl
loope
mov
out
xchg
loop
jmp
aad
stc
clc
fdivrp
or
clc
leave
test
aam
enter
fcoml
into
xor
into
iret
cmp
xor
std
xlat
in
loope
lock
in
cmp
adcb
int
shl
xor
lret
fdiv
fnstsw
ret
iret
faddp
repz
in
in
mov
int
mov
out
out
jmp
in
int3
cmp
cli
bnd
out
cmp
out
repz
xor
cmc
in
xlat
out
lock
fcmovu
addl
out
out
aad
in
aaa
imul
cli
shl
lret
lret
neg
ret
repnz
out
add
cli
xchg
ror
in
aad
out
fprem1
into
inc
cli
loope
ds
test
or
int3
in
rol
in
cmp
hlt
hlt
ljmp
fdivrl
cmp
clc
std
lret
in
sub
jmp
xor
in
xor
cmp
jmp
loope
aam
ds
shr
repz
and
mov
iret
stc
cli
fmul
fcomip
xor
icebp
icebp
shl
leave
in
out
in
fucom
shl
sub
loope
in
ror
fcmovu
cld
ss
repnz
cmpl
call
mov
in
xor
sti
div
sarl
out
rcl
loope
testb
out
loope
test
xor
xor
fcmovbe
stc
std
icebp
jmp
aam
rcr
cmp
mov
in
jmp
shl
ljmp
aad
fprem1
sti
cli
repnz
cmc
div
mov
movl
ss
lret
fsubr
call
cmp
incl
sbb
jmp
ljmp
xor
xor
jmp
aas
loop
inc
fld
jecxz
ljmp
xchg
shll
icebp
out
leave
into
int3
cmc
loopne
out
aad
inc
cli
cli
out
call
iret
fmulp
xchg
lret
sar
cli
in
cli
cmc
xlat
incl
fcomip
stc
cmp
out
jecxz
lock
shr
lock
ljmp
aaa
incb
lea
xchg
incb
xor
enter
cmp
div
iret
jecxz
aam
ror
test
in
nop
cli
shl
test
fsubp
lret
out
fdiv
jmp
fnclex
add
cmc
fdecstp
ljmp
ds
out
jmp
aad
in
icebp
xor
in
in
sti
in
repnz
shl
ljmp
aaa
into
lret
icebp
icebp
xchg
xor
in
mov
sub
lret
imul
fstpt
cld
flds
fdivrp
orl
loope
sub
loop
call
cld
cmp
aam
cli
test
cld
aad
ljmp
xchg
in
loope
divb
out
call
fcmovu
jmp
mul
int3
stc
ret
xchg
cmc
enter
jmp
pushl
ret
jmp
rol
sarl
rcl
mov
jg
lods
ds
jl
ror
xor
not
fldl2t
repnz
fcmovnu
hlt
fsubr
fld
test
xchg
leave
jmp
jmp
lock
cmp
stc
in
ljmp
sbb
xchg
leave
rcl
repnz
jmp
stc
repz
in
std
xor
ss
cld
ljmp
ljmp
enter
icebp
repnz
xor
shl
cmp
out
fnstsw
ret
jmp
ret
shr
lret
jmp
sub
shlb
std
jmp
ret
cmc
mov
call
call
xor
call
adc
in
out
out
jmp
and
cld
lret
fidivs
ror
lock
aas
in
fnstcw
rcr
jecxz
sbb
ljmp
cli
cmp
sti
std
cld
rcr
repnz
fcmovnu
int3
fmul
loopne
roll
iret
shr
lret
aam
cmp
call
fcmovnbe
in
fdivp
loope
mov
in
lret
sub
icebp
in
cmp
out
lret
out
sbb
cmp
fsub
sti
cmp
in
orl
xor
int
ss
cmp
enter
imul
into
and
jecxz
out
out
mov
popl
ljmp
into
cmp
aad
repz
leave
fucomp
hlt
xchg
jecxz
xor
stc
lock
cmc
in
repnz
call
sbb
out
lret
mov
fdivp
xchg
mov
rcl
xor
xor
rcr
cli
stc
add
hlt
in
jmp
shr
test
icebp
sti
int3
clc
ror
out
test
out
std
ljmp
out
call
aad
fcomi
std
sar
cmc
aas
lock
in
out
cmp
in
iret
loop
repnz
jmp
aam
cmp
filds
fildl
iret
jmp
out
mov
cs
idivl
leave
loopne
fcmovnu
out
ds
std
cli
lret
test
in
fmul
mov
aam
idivb
lock
in
lock
lret
cmp
not
inc
div
sbb
neg
cld
out
mov
lock
jmp
xor
enter
jecxz
decl
ds
lea
shlb
hlt
aad
vpsubb
icebp
int
fdivr
shl
fucom
loope
test
mov
and
faddp
xor
mul
fptan
fucomip
dec
lret
sti
repnz
clc
fimuls
loopne
xchg
fcmove
repnz
icebp
iret
xor
loope
fsub
xlat
hlt
jmp
mov
clc
out
ficoms
ret
out
bnd
cmp
mov
cld
loopne
jmp
lret
aaa
loope
ljmp
icebp
xlat
fcom
sar
aas
ret
fadd
in
mov
enter
xchg
out
int
hlt
cmp
stc
out
call
fsubp
icebp
stc
mov
in
xchg
xchg
test
xor
shl
call
jmp
cmc
fdiv
ljmp
fcmovne
in
int3
call
xor
cmp
shl
int
sti
aam
cld
fdivr
fcomi
fmull
int
cmc
nop
test
ret
lock
jmp
jmp
xor
fsubp
xchg
flds
in
in
jecxz
jmp
fldl2e
call
fcomip
ds
int3
aad
cmc
add
out
in
or
xorl
loop
clc
fdiv
sar
shl
bnd
fmuls
mov
lea
shl
ljmp
incl
fadds
ret
xchg
out
iret
cmc
rol
iret
clc
ffree
test
icebp
cmp
lock
int3
lret
std
fimull
aad
out
out
shl
enter
test
ds
fnop
xor
cli
sub
in
out
ljmp
lock
cmp
hlt
jecxz
test
rcr
repnz
adc
test
cld
mov
out
xor
repnz
in
out
out
rolb
cmp
xlat
mov
or
out
addb
imul
sti
fcmovu
in
stc
ror
jecxz
cmpb
xchg
cli
jecxz
in
jmp
call
jmp
icebp
aaa
int3
stc
cld
cmp
iret
fstp
hlt
test
mov
out
mov
cld
shl
aam
ret
in
into
ffree
lret
hlt
sar
hlt
aad
sbb
out
lret
rorl
xlat
shl
repnz
or
incl
add
aad
aad
push
mov
jg
add
repnz
rcl
call
clc
sti
fldl
in
cmp
enter
enter
ffree
fdiv
mov
fmul
out
mov
shll
call
call
cmp
xlat
aad
inc
in
orl
stc
int3
cmp
stc
into
lret
test
iret
repz
or
fiaddl
mov
iret
xor
xor
cmp
hlt
aas
loope
xlat
cmp
fcmovnu
fdivrp
test
in
cli
loope
loope
jmp
fildl
iret
into
repz
fcmovu
jecxz
jmp
loope
in
mov
icebp
leave
int
sarl
sarb
ljmp
mul
out
leave
int3
in
call
leave
loop
cmp
repnz
lock
shr
repnz
test
call
mov
cld
jmp
xor
xor
ret
std
xorl
in
fld
adc
sub
cld
jmp
test
into
hlt
fnstenv
cld
lock
cli
cli
stc
out
fimuls
leave
out
mov
jmp
loopne
enter
enter
cmp
fidivrl
cmc
fcmovnb
loope
fmuls
std
loope
mov
ret
ror
xor
cmp
clc
cli
std
ljmp
cli
xchg
cli
fiaddl
out
shr
jmp
in
jmp
lret
enter
cmp
loop
cmp
sarb
jmp
int3
std
std
out
mov
hlt
ljmp
aas
xor
sarl
cmc
clc
std
mov
jmp
xor
xlat
out
aad
out
lret
fstpt
lret
in
ret
and
in
out
nop
mov
mov
sub
enter
in
out
stc
iret
cld
loopne
filds
call
popl
shl
jmp
stc
clc
call
cmp
xchg
jmp
mov
fsubr
out
mov
sub
fldl2e
stc
stc
fdivp
fsubrp
ret
decl
in
out
lret
jecxz
cld
out
int3
fdivs
int
enter
out
lret
loop
iret
aas
aas
out
mov
mov
mov
leave
lock
enter
cmc
rol
ds
shl
mov
mov
in
leave
ror
repz
fsubr
sarb
into
sar
cli
call
adc
cmp
leave
lret
mov
hlt
aaa
ss
out
ds
shl
test
hlt
repz
call
jmp
repz
adc
hlt
in
shr
cmp
cmp
loopne
int3
movb
xchg
imulb
in
xor
imul
clc
in
jmp
repz
and
xlat
clc
test
les
xchg
ret
lret
jmp
cmp
loopne
adc
stc
mov
jmp
out
in
in
in
in
iret
aad
enter
cmp
cmc
int
jecxz
and
iret
lret
out
into
xchg
iret
aad
repz
out
fcmove
aad
iret
aam
cmc
and
lret
sbb
fmuls
out
xor
fsub
fst
repnz
sar
repnz
xchg
mov
lret
int
lret
leave
aaa
lret
sarl
fprem1
cmp
ret
leave
xchg
out
out
cmc
ss
out
cmp
loope
clc
fsub
shl
out
addb
mov
ljmp
jmp
loopne
in
sub
fcmovnu
mov
push
cld
into
cli
mov
cmc
shll
cmp
in
hlt
out
stc
lret
ds
jecxz
loop
loopne
clc
mov
int3
sub
ror
cmp
lret
cmp
ret
fucomi
les
fdivr
hlt
enter
ret
cli
fdiv
cmp
stc
icebp
stc
sti
aas
ss
sarl
leave
leave
mov
lea
loope
cmc
cmp
out
sti
loope
adc
fcmovnu
ret
lret
imul
int3
cli
mov
fcmove
in
in
xlat
fmulp
clc
aam
leave
in
lret
clc
cli
sar
into
jecxz
ret
fsub
xor
jmp
repz
xor
rcl
lock
hlt
fcom
test
out
aas
sti
into
out
lret
ljmp
ss
fidivrl
sti
xchg
sti
fstp
fxch
leave
test
int
iret
jecxz
mul
fcmovbe
xor
leave
int3
enter
cmp
adc
fiaddl
repnz
xor
cmc
leave
jmp
hlt
test
scas
roll
or
or
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
mov
push
mov
repz
std
add
out
aas
cld
enter
mov
out
fiadds
aam
cmc
int3
fcomp
sar
in
flds
hlt
cld
into
in
icebp
ror
imul
das
lret
ljmp
lret
fnstsw
not
addl
fdivr
xchg
xor
xor
xor
repnz
stc
icebp
aad
lret
ffree
flds
loop
jmp
jmp
xor
cmp
cmp
cmp
xlat
repnz
shl
enter
mov
into
fld1
cli
out
cmp
repnz
cmp
cmc
loope
rcr
call
int
mov
int
cmc
call
cmp
xlat
icebp
ljmp
std
fucomi
jmp
mov
mov
xor
cmp
test
out
out
cmpl
shl
rcr
sti
leave
int3
std
enter
in
loopne
sub
loop
int3
out
in
out
ss
out
lock
fucomip
int3
test
in
jmp
out
xor
sti
int
aaa
int3
fidivrl
rolb
loop
ds
stc
enter
xchg
xor
xbegin
fnstcw
in
xlat
cmp
call
ljmp
xchg
loope
int3
xor
aaa
xor
sar
cmp
lret
aas
jmp
cmp
lret
cli
mov
shl
jmp
leave
call
lret
loop
test
ret
loopne
ret
in
ljmp
call
int3
lret
neg
hlt
cmp
test
ffreep
cld
xchg
xorb
enter
cmp
in
mov
fdivr
jmp
fxch
ret
stc
jmp
aas
flds
fadd
stc
leave
int3
lret
sbb
jmp
loop
xor
stc
xor
ljmp
cmpb
fld
repz
call
mov
jecxz
loop
int3
aad
fcmove
jmp
fbstp
aam
shr
rol
hlt
shl
addb
lock
shr
aam
call
cmp
cmp
sar
cmc
repnz
std
in
out
loopne
nop
jecxz
loop
jmp
out
hlt
cli
cmpb
fsubp
call
test
std
lock
loope
aam
jmp
cmp
lret
sub
inc
repnz
shr
call
rcl
cmc
ror
loopne
out
ret
cld
aas
shl
aas
hlt
neg
cld
bnd
xlat
mov
shl
lret
mov
fcmove
rcr
call
cmp
aam
fmuls
shl
adc
ss
repz
repnz
addl
mov
sti
xchg
test
call
ss
in
aam
or
sti
lock
cmc
lock
std
sti
test
int3
enter
loope
iret
sub
ror
lock
lret
in
jecxz
loop
shl
out
testl
in
repz
cli
not
cmp
enter
cmp
cli
rcl
shr
lret
cli
out
repnz
call
shl
cmp
aam
int
call
addl
enter
ljmp
fxch
into
lret
loope
ds
xlat
out
rol
sub
in
orb
stc
lock
cmp
call
in
std
filds
mov
cmc
lock
das
xor
out
fdivp
int3
cmp
sarb
cld
ds
repz
into
xchg
rcr
dec
jmp
leave
rol
xor
cmp
div
repnz
out
fsub
loopne
int
loop
aaa
lock
into
in
icebp
repz
into
repz
in
adc
hlt
mov
lret
iret
fsubrp
cmc
fsub
sti
repnz
test
test
aam
and
xchg
rcll
lock
lock
div
int
cmp
shr
test
call
lret
leave
incb
out
repnz
fdivr
jmp
roll
add
fucomi
call
mov
fdivs
ljmp
ffreep
fmuls
test
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
xchg
add
idivl
std
add
addb
enter
mov
cmc
icebp
ljmp
loope
mul
inc
aam
ljmp
aam
jmp
mul
lret
int
shll
mov
mov
in
out
loop
iret
int
into
lret
xor
sarl
loopne
fadds
mov
mov
rcr
cs
cli
cmc
rol
std
lock
repnz
ret
xchg
fmulp
enter
loop
jmp
out
sarb
xor
out
cmp
out
push
test
addb
aaa
xor
jmp
rcr
stc
cmp
aad
mov
ret
test
les
mov
loop
in
ret
sub
lock
rcl
fld
icebp
xchg
loop
call
jecxz
rcll
in
neg
out
out
cmp
cli
sbb
xchg
ds
sti
ret
in
repz
faddl
clc
repnz
lret
std
ss
fdiv
test
fmul
out
xchg
in
fisttps
ret
sti
sar
fmulp
lret
in
xchg
jmp
test
loope
loop
fucomp
out
shr
loop
ret
out
in
int3
out
cmp
sti
hlt
cmp
lock
test
iret
out
loopne
loope
fincstp
loopne
jmp
int3
xlat
not
clc
fdiv
cmp
idiv
aam
lea
in
xchg
loop
in
fcmovnb
aaa
aad
mov
loope
fidivrl
test
hlt
vpmullw
jmp
icebp
icebp
cs
cmc
call
stc
hlt
lret
roll
imul
fchs
in
ror
lret
roll
stc
test
jmp
roll
test
addb
mov
cli
sti
imul
xor
fnstenv
ret
rcr
out
jecxz
aas
in
dec
fstp
jmp
call
shl
shlb
xor
lock
shl
ds
call
mov
nop
iret
jmp
loop
hlt
fsubr
stc
xlat
repnz
icebp
hlt
xlat
xor
ret
xchg
mov
xchg
enter
clc
sub
cmp
icebp
aad
roll
lock
cmp
mov
loop
lock
in
lret
in
sub
fidivl
sti
or
out
loop
cli
cld
sti
xchg
int3
mov
fiaddl
sub
in
into
xor
fmul
fadd
cmp
hlt
shl
ret
fcmovne
incl
test
lock
aaa
fdiv
iret
std
fdivrl
repz
out
neg
int3
lret
xchg
out
into
icebp
iret
in
xor
fucompp
stc
in
shl
cmp
ds
ret
out
shr
repz
cmc
testl
into
xor
into
cmp
loopne
loopne
test
addl
repz
mov
int
hlt
cmp
ds
aad
fdivr
mov
fldl
sar
xchg
sub
iret
xor
jmp
ljmp
fld
test
cmp
in
int3
lock
xor
aam
ljmp
ds
xor
decl
mov
call
rclb
out
ljmp
ret
repz
inc
fimull
mov
loopne
shr
lret
sti
int
fcmovnu
ss
rcl
int3
cmp
out
decb
adc
out
enter
lret
div
out
cmpl
cld
out
mov
loop
cli
out
cmc
in
mov
lret
out
stc
aaa
aad
xor
out
shl
fneni(8087
jmp
loop
out
imul
ror
mov
lock
les
aam
sar
cmp
xor
testl
in
call
lret
sub
leave
cld
fcmovu
rolb
and
test
mul
out
fcmovu
call
shrb
ss
aam
int3
icebp
rcl
cmp
hlt
call
clc
int3
xchg
decl
cmp
in
cmc
leave
clc
jmp
cmp
test
not
cmp
loop
sti
mov
jmp
rcl
aad
icebp
sar
into
cmp
fcmovnbe
and
mov
mov
jmp
jmp
enter
fstp
fstp
adc
bound
or
jg
std
add
mov
loopne
lret
fsub
xchg
xor
rcl
cmp
ror
cmp
ds
repz
cmc
mov
orl
icebp
jecxz
int3
shr
std
repnz
loope
cmc
rcr
div
mov
out
xchg
xchg
xchg
icebp
shl
xor
out
cmp
xor
ds
xor
test
fadds
out
ljmp
jecxz
cli
sti
cld
out
in
out
xor
int3
xchg
lock
mov
ds
loopne
out
and
loope
les
cmc
jecxz
cmp
icebp
repnz
int3
fst
stc
fadds
imul
fdivrp
iret
ljmp
fcmovbe
in
repnz
fcomp
repnz
repz
int3
mov
repnz
mov
aaa
stc
shl
enter
sti
div
loopne
addb
cli
loop
in
mov
aad
icebp
jecxz
xor
fcmovne
xor
aaa
cld
neg
std
loopne
into
in
enter
jmp
lret
rol
fstpt
cs
out
fsubr
stc
int
cld
out
lock
stc
hlt
xlat
neg
xchg
mov
mov
out
out
in
sti
int
sarb
mul
fdivrl
fincstp
std
hlt
fst
loop
jmp
fucomp
lock
lret
icebp
enter
int3
clc
fcmovne
div
ror
xchg
hlt
std
in
mov
mov
loop
call
xor
out
iret
lock
clc
call
test
aad
mov
faddl
jmp
leave
cmc
aaa
sar
cli
cmp
sti
call
jmp
divb
out
cli
fucom
repnz
fdivp
in
into
xchg
test
testb
mov
cs
sub
cmp
enter
into
std
clc
cmp
test
jmp
out
fmul
out
out
ret
rcr
jecxz
aam
cmp
aad
std
cmp
out
sbb
cmp
test
mov
out
xchg
in
sub
hlt
cmp
enter
repz
cmp
vcmppd
iret
nop
jmp
shl
loop
repnz
fdiv
lock
int3
int3
xor
addb
in
test
mov
adc
mov
xor
rol
std
jmp
cld
cmp
clc
shl
xchg
in
fyl2x
fdivrp
fists
aad
leave
lds
xor
mov
fst
lret
test
out
xchg
lds
iret
xor
fst
repnz
loopne
lock
aad
in
addl
test
test
cmpl
ljmp
lock
test
out
leave
cli
cmc
cmp
cmp
enter
xchg
iret
ljmp
cmp
cli
fnstsw
std
cmp
hlt
loopne
repnz
lret
in
lock
in
jecxz
hlt
cmp
int3
imul
sti
in
rolb
ljmp
mov
shrl
int
lret
repz
aad
rcl
rol
jecxz
loop
mov
enter
test
xlat
out
out
in
xor
neg
loopne
icebp
int3
clc
sarl
ljmp
mov
sub
ss
lret
lock
in
test
fdivrp
out
aam
div
test
incb
int3
repz
aaa
out
ds
fcmovnb
cmp
mov
test
mov
shr
xchg
shrl
ljmp
call
aam
vpextrw
lds
sti
int3
out
repz
mov
lret
int
ret
repz
into
rcl
test
jecxz
jmp
stc
or
lock
ds
aad
out
cmp
fidivs
in
std
jecxz
sarl
rcl
addb
lock
stc
ror
call
shl
xor
fsubr
clc
shr
lret
flds
xchg
das
xor
aad
jmp
aam
cld
call
cld
clc
vpsllq
sbb
jecxz
lret
sbb
jecxz
repz
int3
shl
shr
std
cmp
rcl
jecxz
fsubr
test
int3
loop
repnz
xor
enter
xor
fst
sarb
xorl
jmp
aad
rcr
fstp
sbb
into
mov
jg
std
add
in
cmc
sti
fiaddl
xchg
into
test
in
fiadds
cmp
into
stc
repz
xor
mul
and
testb
fisttpll
mul
out
icebp
iret
out
out
fdiv
rcl
out
clc
rol
jmp
test
mov
aaa
std
sar
std
icebp
fcom
cmp
faddl
ret
out
fdivr
into
mov
mov
faddp
in
call
fdecstp
leave
jecxz
lock
hlt
div
mov
loopne
jmp
call
fadd
cld
bnd
jecxz
out
std
cli
into
addb
fxch
in
out
out
out
jmp
hlt
int3
cmp
enter
shl
cmc
out
in
in
loope
mov
mov
shr
icebp
jmp
cmp
xor
cmp
fcmovne
shl
test
ffreep
neg
aam
int
lret
leave
cli
repz
jmp
in
sub
ss
xor
adc
out
stc
and
loope
jmp
mov
loope
xor
rcl
into
shl
addl
frstpm(287
enter
ror
xor
out
lock
jecxz
xchg
sbb
lret
loope
rcll
shl
lock
add
repz
clc
loop
repz
mov
sar
inc
out
sti
xor
xor
enter
in
fld
rcl
rol
fsubp
int
out
sti
cld
fsubr
out
in
sar
fldpi
repz
out
roll
iret
out
ret
cmc
rcl
neg
jmp
iret
leave
jecxz
not
int3
fcomp
aas
aas
in
lock
cli
imul
xchg
vpandn
fcmove
mov
iret
cld
lret
loopne
jecxz
enter
into
sti
in
std
fdivl
shl
and
aad
fdivrp
jmp
and
sub
icebp
sti
iret
ljmp
icebp
test
repnz
testb
lock
cs
in
fucomp
out
shl
stc
rol
out
rolb
fcomp
ljmp
call
cmp
aam
loope
loopne
fiaddl
testb
aam
lret
aad
test
out
add
add
fisttpl
loop
sub
hlt
lock
ljmp
out
test
cmc
in
ds
sti
in
fsubp
jecxz
loop
jmp
fcmovbe
fcmove
cmp
xabort
mov
std
fsub
lret
orb
iret
cmp
shr
fcmovnbe
in
loop
fcomi
addb
enter
rclb
lock
call
clc
loopne
in
neg
fcmovnbe
sti
mov
int
adc
loop
sti
mov
imul
cmc
iret
rcr
test
cmp
in
mov
jmp
int
aam
xlat
fdiv
ds
fiaddl
roll
iret
clc
out
xchg
lret
ljmp
test
not
ret
jmp
stc
int
ljmp
aad
xor
rol
cmp
ror
test
mov
out
out
mov
jmp
aaa
int
iret
cmp
fucomi
shr
into
repz
cmp
aam
ret
std
out
xchg
xchg
in
out
repnz
jmp
cld
call
cmp
out
xchg
testl
jmp
aaa
in
in
fdiv
xlat
cmp
testb
loope
nop
fimull
iret
iret
aad
xor
std
xor
xchg
ret
lret
mov
movl
xor
out
ljmp
stc
aas
repz
enter
addb
xor
cld
int
out
xor
fnclex
out
and
fisttpl
lret
lret
in
loop
iret
in
fsub
cmp
aam
shl
jecxz
cmp
mov
int3
test
rcr
test
in
in
cmp
ss
out
shl
repz
lock
mov
in
dec
test
out
in
test
leave
in
repz
cmp
repnz
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
pop
in
les
test
cmpsb
add
icebp
sti
sarb
jecxz
mov
lea
rcl
loope
cmc
clc
out
in
int3
fnstcw
fcmovne
stc
shl
loopne
fucomi
cmc
out
xchg
repz
in
loope
lret
cld
cmp
jmp
fyl2x
std
loopne
xchg
push
orl
into
xor
sti
stc
aad
hlt
cmp
ds
aam
adc
test
xchg
cld
out
in
in
aam
loop
shl
xor
in
cmc
cmp
cmp
cmp
xchg
fsubp
std
jecxz
in
icebp
sub
cs
cmc
leave
rcl
icebp
xor
cmp
ret
loopne
ret
std
ljmp
jmp
sub
fdiv
in
stc
icebp
out
cmp
sub
idivl
loop
repnz
aas
int
out
std
xchg
xchg
sub
shl
ret
div
clc
int
cmp
sar
rcl
sti
in
decb
xchg
cs
out
cmp
int3
out
rcr
sti
bnd
mov
cmp
loope
jecxz
into
loop
int
lock
in
int3
aas
clc
ret
repz
fsub
mov
mov
out
xor
cmp
xor
cmp
divl
loop
rcl
xchg
rcr
enter
jecxz
lock
cmc
sub
xor
cmc
aam
cmp
cmp
sbb
loop
fldl
xchg
or
clc
repz
cli
repnz
cmp
fcom
xor
mov
aad
jmp
repz
xor
ljmp
repz
sar
hlt
sar
ret
xlat
idiv
vpcomuw
cld
loop
ret
xor
cmp
cmp
jmp
out
mov
int3
fucomip
hlt
out
repnz
sti
cmp
shr
fcomip
aas
aad
in
xchg
repnz
rcr
leave
fsub
into
lret
in
in
fisubrs
sti
out
sar
stc
neg
clc
jecxz
clc
into
mov
fucomp
call
in
iret
xchg
loope
sub
in
call
sub
sti
fcmovb
add
adc
xchg
test
jecxz
cs
aam
into
out
cld
dec
cmpl
repnz
rolb
loopne
ror
repnz
in
icebp
int3
xor
ret
out
cld
repnz
xlat
in
loopne
loopne
roll
mov
xlat
int
aam
das
stc
clc
cmp
stc
call
fiadds
loop
lret
iret
iret
sbb
xor
divb
cmp
int3
cld
out
int
cmp
shl
cmp
lret
mov
in
cli
fsubr
not
sti
adc
shr
faddp
rol
test
std
out
ljmp
ret
cmp
hlt
rcr
cmp
cmp
fiadds
test
in
out
in
repnz
ljmp
les
out
aam
out
hlt
ret
jecxz
call
and
mov
cld
xchg
in
ret
in
cmp
repz
fadd
fneni(8087
out
loope
orl
lock
out
mul
int3
xor
xbegin
rcr
in
aas
cmc
out
mov
fisttpll
rcr
jmp
in
xor
lret
fidivs
in
cld
xlat
in
flds
and
jmp
leave
nop
mov
ss
cld
shr
out
icebp
fsubrp
out
ror
ffree
in
hlt
in
jmp
loop
lret
in
shr
int
xor
cmp
cmp
and
fdivr
mov
fsubp
jecxz
fdiv
iret
idivl
shl
rol
ret
lret
neg
out
jmp
lret
div
cmp
in
cmp
hlt
int3
shr
sar
out
and
mov
int3
aam
hlt
fbstp
int3
xor
shl
aad
fistpll
int
out
lret
fiaddl
jecxz
ss
out
stc
ds
int
add
leave
fdiv
fcmovne
lock
call
vpmullw
out
cmp
repnz
lock
jmp
lret
hlt
rol
xchg
in
jmp
out
jmp
loop
aaa
fcomp
jmp
lock
rcr
test
lock
iret
cmp
xor
out
aad
jmp
sar
fst
ret
cld
int3
in
fld
lret
shr
leave
loop
clc
test
fsubrp
ljmp
ret
fld
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
or
lret
lods
mov
jg
cmpsb
add
lret
clc
loope
ror
cmp
xor
in
int
loope
loop
aas
fdivp
xchg
xlat
rorb
jmp
lret
xlat
call
cmp
sarb
loop
into
xchg
fdivrp
jecxz
in
cld
cld
jmp
xchg
call
cmp
fsin
fsubp
rcr
xchg
test
fmulp
fimull
ret
enter
jmp
xor
sti
roll
std
fsubrp
testb
mov
repz
icebp
loop
ljmp
rol
fnsetpm(287
aam
fisttpll
int
out
leave
shll
lret
icebp
out
aas
aam
cld
cmpl
fcomp
loopne
jecxz
int3
iret
xchg
into
loop
int
ljmp
cld
stc
cmp
rol
fildl
mov
xor
out
out
xor
stc
cmp
iret
leave
rcl
lock
test
repnz
cmp
clc
xlat
int
lret
xchg
jmp
hlt
ljmp
ffree
cmp
push
rcl
fsubr
jecxz
fcmovnb
lret
test
std
mov
lret
sti
int3
aad
in
stc
lock
clc
add
lock
incb
xchg
sub
ret
iret
cmc
std
repz
test
cli
hlt
mov
lret
sub
test
bnd
repz
out
into
ds
test
incl
int
mov
lret
in
xchg
xchg
repz
cli
mul
out
fcmovu
repnz
repz
mov
lret
into
lock
std
roll
aas
icebp
cmc
adc
in
lret
in
rol
aaa
in
rcr
cmp
iret
cmp
loop
dec
fcmovne
cmc
cmp
testb
xchg
loop
jmp
xlat
call
xlat
sbb
xchg
std
mov
mov
ss
xor
out
aad
aad
clc
aaa
ss
cld
std
test
mov
xchg
xchg
ljmp
xlat
jmp
iret
cmc
cmp
cli
in
fcomp
sbb
sbb
shll
iret
xor
xor
lock
or
sbb
test
cmp
sbb
call
loope
out
xor
aam
fmul
hlt
shr
int3
fcom
cmpl
fld
loope
loope
xchg
xchg
xchg
hlt
stc
aad
idivl
rcr
cmc
xlat
aad
rol
enter
loop
loopne
icebp
in
in
aad
xor
iret
xor
cld
ds
repz
cmp
lock
cmc
repnz
ljmp
out
enter
out
call
sti
rcl
aaa
and
aad
imul
enter
jecxz
xchg
hlt
lret
enter
icebp
cmp
fidivrs
cmp
aas
test
xchg
out
shr
xor
xor
repnz
fmulp
xor
test
out
test
add
mov
jecxz
out
addl
call
ror
cmp
cld
fsubr
leave
cmp
xor
roll
lret
leave
xor
loopne
repnz
stc
test
or
rclb
int
fcomp
cmp
int
fistpll
in
faddl
xabort
xchg
in
inc
xor
lret
sub
clc
clc
aam
cmp
jmp
shl
out
call
lock
ljmp
xchg
and
jmp
out
fists
sub
xor
out
ljmp
cld
shl
test
shl
ds
loopne
nop
out
int
call
call
int
rcr
into
fdiv
test
aam
mul
fsubr
int3
sti
leave
test
in
shl
test
cmp
int3
loope
cmp
fst
rol
cmc
loopne
xchg
ds
loopne
repnz
into
fnstenv
imul
cmp
icebp
inc
loope
mov
int
cli
out
mov
lea
out
sti
jmp
lock
in
icebp
repz
test
lock
fadds
addb
fcmovnb
stc
cmp
repnz
into
rcl
fildl
int3
mov
out
das
out
hlt
out
jmp
repz
sti
std
test
decl
jmp
test
ljmp
inc
or
or
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
mov
jg
cmpsb
add
in
into
int
aad
iret
out
ljmp
lds
mov
fistl
out
xor
sub
jmp
cli
cld
cmp
rol
out
aam
jmp
or
clc
icebp
stc
sti
in
loopne
rol
jmp
xor
int3
sti
iret
rcr
cmp
repnz
fsubrp
in
xchg
lret
hlt
shll
out
fucomp
icebp
std
inc
fildl
leave
mov
iret
fcom
std
mov
xor
xlat
jmp
int
int3
cmp
shr
jecxz
ret
faddl
int
rcll
leave
shr
leave
xor
lock
idivb
cmp
xor
in
fdivr
fcomi
mov
call
leave
decb
rcl
cmp
out
cmp
cmp
xlat
out
sbb
sti
mov
repnz
ljmp
xor
ret
repz
rol
aas
enter
fdivp
in
loop
in
loop
into
lret
repnz
jmp
cmc
cld
cld
cmp
ret
cmp
jmp
lret
loop
std
jmp
out
ss
iret
std
ror
int
sar
aam
cmp
cli
popl
int
out
repz
cmp
sar
fcmovne
out
in
add
loopne
sar
decl
cld
nop
int3
rol
leave
ret
fyl2x
xor
fstp
aam
sti
sbb
call
out
icebp
in
aaa
out
ret
mul
call
sarl
in
faddp
jmp
out
call
mov
ljmp
cmp
dec
ds
hlt
ret
fucompp
sti
ds
std
in
repz
enter
in
xor
jmp
sti
aad
loope
fucom
fsubp
sar
and
fsub
enter
aad
mul
aaa
xor
lret
lret
clc
incl
ljmp
lret
xchg
repz
shl
sti
rcl
jmp
out
clc
cmp
cmp
clc
mov
sti
cli
xchg
into
xor
ss
fst
cmp
stc
sti
std
aam
repnz
mov
mov
xchg
out
ljmp
fsubp
rol
cmp
sti
cli
loop
out
sti
orb
mov
hlt
cmc
ss
icebp
ror
out
xor
int3
push
loopne
stc
lock
in
cli
int
xchg
out
lret
int3
div
clc
fsubr
out
sti
aam
aas
icebp
out
shl
leave
ret
in
stc
clc
out
in
loope
repz
sti
in
cli
leave
cli
cmp
cmp
fsubr
add
fcmovnu
filds
rcl
enter
lock
lock
out
sbb
in
fsubr
in
jecxz
dec
xchg
stc
int3
jmp
aad
in
shl
out
xlat
hlt
ss
lock
in
imul
sti
jmp
fistl
in
shr
aad
aaa
xor
loop
aad
stc
sti
cmp
jmp
in
cli
into
lock
out
hlt
leave
jecxz
fnop
cmp
xor
ljmp
ret
cmp
in
mov
jmp
in
xlat
lret
out
fmul
ljmp
lock
ret
fcos
loopne
mov
out
ljmp
hlt
out
in
cmp
sar
ss
cld
test
ret
shl
test
cli
loop
in
mov
not
out
cmp
sarb
aaa
enter
loopne
fdivr
sar
jmp
out
lock
in
leave
ret
ret
call
sti
iret
stc
icebp
fadds
hlt
cli
loope
mov
jmp
xor
xor
stc
int
loop
aas
fadd
repz
in
sub
call
mov
xlat
icebp
jecxz
lret
out
call
in
aas
cmp
sti
mov
ljmp
ror
xor
lock
lret
lock
fiaddl
ret
incl
jecxz
aam
icebp
xor
aaa
fdiv
in
into
loopne
idiv
cmp
ljmp
xchg
lock
rol
out
xor
xor
cmc
clc
cmp
repnz
aas
cmc
cmp
ds
lret
jmp
loop
shl
rcr
out
out
xlat
lret
stc
hlt
lock
aam
xchg
adc
sbb
xchg
int
enter
ss
cmp
leave
test
mov
or
mov
iret
in
in
fdivl
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
push
dec
out
push
xchg
jg
cmpsb
add
loopne
ret
test
aas
fld
neg
shr
inc
and
shl
repz
cmc
shl
in
iret
aad
cmp
fiadds
in
cli
out
mov
xchg
std
incl
int3
lock
cs
in
jecxz
fsub
rcl
rcl
lret
ret
mov
mov
loopne
enter
sarb
aad
lret
adc
ret
rorb
lock
mov
ret
int
xor
icebp
not
cmp
and
jmp
fstp
jmp
call
std
xor
fdivrp
cmp
testl
std
repnz
xor
ror
cmp
sti
enter
repnz
ret
shl
loope
jecxz
test
cli
std
repz
xor
cmp
aam
stc
add
in
ljmp
in
popl
call
fcmovnbe
xor
cmp
fdivr
into
repnz
ret
mov
xchg
mov
xor
in
in
divl
aaa
lret
aam
stc
ror
rcr
sarb
jecxz
mov
jecxz
hlt
ret
xlat
xlat
fcom
fnstcw
ljmp
icebp
loop
loop
loopne
test
in
std
xchg
xchg
int3
in
out
shr
ret
in
fsub
out
fcomp
vpsubw
leave
fiadds
mov
test
shr
aaa
std
shl
enter
inc
out
loopne
flds
sti
enter
cld
out
lret
xor
neg
repz
std
flds
cmp
mov
fcmovnu
xchg
mov
test
test
addl
fcomip
orb
cld
ror
xor
lret
icebp
hlt
ror
cli
fcmovne
sar
in
icebp
repnz
addl
lret
out
xchg
loopne
int3
cmp
in
call
hlt
shl
lock
call
sub
shl
ljmp
jmp
leave
idivb
xor
jecxz
ret
xchg
loopne
loope
lock
in
jecxz
lret
hlt
int3
repnz
cmp
stc
stc
rcr
cmp
fsub
sub
lret
cmc
lock
iret
shl
int3
sti
in
aas
in
fsubp
div
fisttps
fst
fsubr
out
in
shr
enter
sti
int3
out
loope
loop
clc
shl
loopne
cmc
jmp
out
cld
loopne
or
shr
hlt
int
int3
jmp
fnstenv
shr
test
test
sbb
xchg
mov
lret
in
xchg
test
into
test
cld
rcl
rcl
neg
aad
mov
rcr
int
mov
xchg
xchg
rorb
clc
leave
enter
lock
loope
in
cli
cmp
adc
lret
enter
mov
sub
jmp
into
fdiv
cmp
rcr
add
fnstcw
sbb
loopne
mov
aad
xor
repnz
int
enter
jecxz
fildl
ds
lret
in
incb
stc
jmp
call
shr
imul
shr
ljmp
nop
nop
dec
out
loope
lret
cmp
aas
faddl
cld
sti
xlat
out
lret
cmc
iret
xchg
shl
hlt
in
int
xor
xor
rcr
lret
fmull
loop
fsubr
loopne
repnz
shr
cmp
int
cmp
fcmovnbe
ror
in
ror
lret
jmp
out
jecxz
shl
cmc
shl
in
lock
into
loopne
loop
cmp
repnz
leave
in
out
mov
push
xor
call
cmp
cli
xchg
loop
mov
fchs
call
lret
hlt
in
ss
in
jmp
int3
cmp
ret
idiv
cmc
add
jecxz
fcmovnu
into
lret
out
xor
jmp
std
int
addl
ljmp
loopne
out
rcl
jmp
cmp
fidivl
cld
lret
fdivp
shl
frndint
test
in
fucomi
mov
mov
xor
sti
in
xor
cld
aaa
hlt
loop
xlat
add
mov
in
icebp
fcom
bnd
jmp
in
sarl
shl
test
add
cmp
xchg
cld
aad
hlt
xor
cld
fmul
cmp
cmp
lock
rol
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
push
bound
scas
mov
jg
cmpsb
add
fmull
fsub
jmp
loopne
jecxz
ljmp
aad
sub
test
in
int
clc
ret
shl
xlat
ret
int3
cs
in
out
leave
ds
cmp
int3
int3
fstp
in
orb
rorb
cmp
sub
cld
cli
fxch
rcl
loope
rcr
shl
call
mov
loopne
out
shlb
out
cmc
enter
fcmovnbe
rcr
int
out
loope
ds
call
test
lock
fcmovnbe
shl
cmpl
std
test
fimull
fsubr
into
fstp
into
enter
ret
cmp
rcl
ljmp
cmc
rcr
decb
jmp
call
in
cmc
cmp
out
loopne
and
aam
stc
clc
leave
fisttpl
xchg
xchg
loope
lock
test
aaa
loopne
out
lock
sbb
cld
leave
aam
test
int3
jecxz
jecxz
stc
imul
cmp
sarb
ds
int
lock
lock
jmp
xchg
xchg
addl
fdivr
out
lret
fdivrl
repnz
faddl
in
loop
in
cld
aam
int
aaa
int3
xlat
cld
out
aaa
ror
sbb
mul
lock
loopne
aam
ljmp
xchg
int3
shr
int3
xlat
cmp
int
dec
hlt
cli
in
cmp
in
idiv
call
out
xor
shr
jmp
std
into
cmp
ljmp
mov
and
test
test
int
jmp
shr
int3
out
fdivr
call
rol
sti
ret
cld
xchg
in
iret
fucom
in
jmp
idiv
fsubr
shr
cld
idiv
loop
xlat
push
clc
in
and
lret
xor
imul
repnz
cmp
fdivrs
loopne
iret
xor
lret
in
jmp
mov
fisttps
jecxz
call
int
in
fmul
cmp
cli
loopne
repz
mov
add
lock
das
lock
out
enter
xlat
jmp
ret
std
fdivr
test
in
call
int3
jecxz
shr
xlat
leave
sarl
ds
stc
fcmovu
fiaddl
fsub
imul
enter
aad
ds
out
lret
repz
aam
testb
faddl
mov
jmp
int
fnstsw
cmp
cld
loop
fimuls
xor
in
clc
cmp
icebp
fdivrs
shl
into
addb
jecxz
mov
mov
nop
xchg
enter
repnz
xor
icebp
or
xchg
and
enter
in
lock
out
shl
cmp
repnz
jmp
sar
xchg
mov
hlt
jecxz
leave
mov
mov
sub
ror
xor
out
aaa
enter
jecxz
std
xchg
out
clc
out
fstp
mov
int
mov
aam
div
aad
lock
sarl
int3
stc
clc
out
ret
out
or
xchg
in
ret
leave
lret
jmp
ror
xor
shl
inc
fsub
test
int3
ds
shl
ss
int
call
rol
cmp
out
lret
inc
fmul
loop
shl
iret
out
mul
hlt
repz
out
out
cli
sti
clc
hlt
ret
shl
mov
fdivr
in
ljmp
cmc
aaa
std
out
leave
int
test
fdivp
out
jecxz
enter
test
lock
sub
clc
aam
int
xor
test
roll
std
std
mov
sar
loopne
fnstcw
aas
shl
into
xor
stc
aas
mov
shr
mov
into
into
cmp
in
clc
lret
cmp
cmp
mov
fcmovne
jmp
call
xorl
aad
in
aaa
in
shlb
repnz
aas
cmp
fcmovu
loope
loop
sar
test
std
loopne
xchg
lock
into
loope
out
std
fcomi
out
sti
rcr
sar
testb
mov
xchg
in
sarb
call
int
lret
lret
icebp
into
cmc
out
cli
call
enter
lock
iret
cmc
jmp
ljmp
aam
shl
test
lret
jmp
aad
rcl
fst
leave
pop
push
adc
jl
add
call
xor
icebp
cmp
jmp
fsub
cmp
lock
hlt
mov
xchg
bnd
jmp
mul
cld
and
repz
fimull
mov
lock
int
shl
repz
cli
repz
cmpl
testl
jmp
test
cld
enter
iret
jecxz
cmp
cmpl
xchg
stc
loope
mov
mov
hlt
shl
sarb
ret
test
cmpl
xchg
mov
movb
in
jecxz
cmc
div
jmp
rcl
cmp
sarb
leave
filds
cli
mov
sub
in
jmp
lret
in
loopne
fdivr
rolb
out
out
aad
aas
xor
rcr
lock
shr
aam
into
fmulp
rorl
int
roll
enter
jmp
lret
add
rol
lds
loope
loop
sub
out
call
cmpl
aas
out
loope
lret
ds
lret
shl
out
repz
rol
cs
cmp
call
in
fucom
xchg
leave
loope
sub
mov
leave
lock
xor
fldlg2
out
cmp
in
int3
fistpll
jecxz
and
mov
sar
mov
in
out
fmulp
out
stc
cmc
in
fld1
int3
std
rcl
test
cmc
lret
jecxz
mov
int3
fmull
ret
shr
shl
xor
fcom
fcom
clc
sti
fmull
iret
int
lea
ljmp
rcl
aam
ror
cmp
ljmp
out
shr
xchg
mov
xor
iret
iret
in
in
imul
repz
aam
in
mov
mov
xchg
ror
cmp
cmp
fdivrl
aam
jecxz
out
adc
orb
in
clc
clc
in
mov
in
xlat
lock
out
fdivp
loopne
cmp
jmp
sbb
std
std
repnz
aam
ret
cmp
ss
cmc
repnz
repz
fadd
test
sti
leave
sti
int
mov
in
lret
dec
jecxz
cld
not
std
test
out
add
cld
mov
iret
xor
enter
iret
int3
into
int3
cli
out
ret
in
aad
cli
mov
out
xchg
loop
xor
cmc
xor
lret
int3
out
loope
iret
rol
loope
sti
fdivr
cli
test
ljmp
hlt
icebp
xor
int
int
cmp
cli
xlat
xchg
stc
jmp
mov
and
nop
fucomi
out
sub
xlat
leave
ss
out
repz
shr
inc
fdivrs
test
fscale
xlat
repnz
fmuls
xor
test
clc
ss
cmp
std
iret
out
fcom
xchg
filds
mov
rcr
mov
aam
into
jecxz
aam
lock
out
aas
mov
out
testb
iret
int3
rcl
xor
fidivl
int3
cli
in
xor
repnz
clc
test
sbb
xor
xor
out
repz
or
aam
leave
repnz
ljmp
in
icebp
aaa
in
fdivp
repz
ror
loop
enter
xchg
test
repz
repz
stc
out
cmp
into
fdivrl
sbb
addb
out
xchg
test
in
loopne
jmp
call
sar
cli
ret
fadds
addl
rol
hlt
out
cmp
xlat
sti
cmc
shr
repz
cli
loop
out
cli
sar
loope
xchg
aad
xlat
iret
shlb
into
cmp
int
in
cli
shl
cli
out
mov
int3
out
iret
iret
rorl
xor
hlt
cmc
clc
lock
cmc
neg
cld
ds
fldl
addl
int3
xor
adc
cmp
lds
xchg
xchg
rol
sub
clc
in
aaa
out
ror
fdiv
cld
cmp
repnz
std
iret
or
sub
ljmp
sar
cmpb
les
test
loop
mul
iret
sti
nop
jmp
lock
out
xor
add
add
jmp
leave
sarl
rcl
int
mov
nop
and
mov
jl
xor
sar
rcr
fdivp
int
lea
xchg
aas
enter
std
repnz
std
stc
ljmp
xor
xchg
in
mov
in
shr
icebp
aad
loop
ret
in
leave
clc
sti
out
jmp
aam
jmp
repnz
out
in
into
test
cli
in
aas
loopne
out
div
into
add
repnz
icebp
mov
in
in
fld
leave
xor
aam
xor
repnz
stc
int
out
test
cmp
std
mov
fmulp
rol
ret
out
jmp
hlt
adc
sarb
jmp
flds
xchg
loopne
shll
cmp
int
loopne
cmc
hlt
in
loopne
aad
loop
mov
mov
lret
fchs
enter
cli
jmp
cmp
sti
sbb
leave
fcmovne
ljmp
xor
int3
enter
frstpm(287
sbb
mov
xor
sbb
aam
int
ret
into
stc
sar
aaa
in
fdivrs
clc
testb
in
shlb
mov
enter
xlat
out
cmp
out
fmul
fmuls
test
fmull
loop
iret
std
cmc
jmp
fdivrl
out
mov
in
xchg
mov
xchg
jmp
in
repnz
repz
clc
aam
jecxz
ss
hlt
test
out
into
sbb
in
xor
int
aam
aam
fdivr
clc
clc
sar
roll
loope
icebp
xchg
in
in
orb
cmp
iret
idivb
fcom
fstp
cmp
repz
xchg
fcmovnb
fiaddl
jmp
lock
iret
cmp
fucomip
shr
in
xlat
fadd
fld1
lret
fcoms
int
enter
lret
ds
xlat
fsub
shl
lret
jecxz
in
mov
loope
les
jmp
xor
sarb
fnstsw
flds
fisttpll
mov
add
int3
int
jmp
repnz
loope
fdivrp
cli
fdivrp
test
jmp
into
jmp
add
in
enter
icebp
call
xlat
repz
and
mov
mov
lds
jmp
test
enter
sti
int
jmp
aas
clc
out
lds
call
addb
cli
xchg
lret
into
out
cmc
lret
repnz
iret
cmp
mov
rcr
mov
jmp
ljmp
into
clc
xor
ljmp
aad
cld
in
std
decl
cmc
fdivr
leave
fucomi
fcmovnu
fiadds
incb
loop
in
xchg
ret
ret
sti
call
cmp
cmp
hlt
icebp
cmp
sbb
xlat
lret
std
out
mov
loopne
lret
stc
in
shr
repnz
in
roll
ret
lret
idiv
jecxz
enter
icebp
int3
xor
call
into
aas
fcmovnb
neg
test
cld
mov
in
ljmp
out
cmp
xlat
aam
fidivrl
out
rorl
cmp
int3
test
sub
jmp
div
cmp
cmp
stc
stc
shl
out
out
int3
mov
lret
out
shl
ljmp
jmp
iret
repz
loopne
loopne
std
clc
loopne
lea
orb
xchg
xor
repz
shr
loopne
loope
xchg
mov
int
out
mov
jmp
iret
repz
int3
repz
in
fadd
lds
rol
out
jmp
fdivrp
lea
enter
sti
enter
call
cli
out
jecxz
jmp
fisttps
ljmp
rcr
iret
fmul
stc
inc
lret
cld
loop
out
loopne
out
in
mul
addb
loop
shlb
in
cli
clc
rcr
cmp
fcmovbe
test
fildl
mov
xchg
call
xor
in
xor
aaa
or
test
out
dec
jmp
out
in
sub
hlt
in
repnz
icebp
out
aam
in
leave
jmp
ss
aad
idiv
in
xchg
in
sbb
int3
enter
fdivrs
sti
ds
xlat
div
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
aad
out
orb
imul
xor
xor
ret
repnz
xor
cmp
loope
out
sbb
cmc
dec
enter
jecxz
out
mov
loope
lock
cmp
rcl
repz
in
stc
cmp
cmp
addl
lock
lock
in
repnz
into
hlt
cmp
aad
rolb
in
aam
stc
ljmp
out
aam
fucomi
int
ror
out
cmp
fdivr
fildl
ljmp
cld
xor
enter
ljmp
int3
cmp
decb
sti
mov
rcl
cli
enter
fsubr
in
fst
ret
ret
in
mov
enter
cmp
int
leave
lock
cmp
iret
jecxz
test
mov
cli
in
jmp
lds
out
div
std
not
mul
ds
fdivr
mul
incb
in
leave
addl
cs
lock
cmp
rol
fcom
test
loope
out
sub
cmp
stc
out
ror
cmp
cmp
addl
lret
fsubr
in
das
loopne
xor
cmp
lock
cmp
stc
jecxz
lret
cli
xchg
shl
aam
xor
xor
jmp
cmp
or
cmc
cmc
test
loope
dec
hlt
int
fucomip
orb
lock
sar
lret
and
loop
jecxz
stc
div
leave
addb
shl
enter
out
cld
aaa
cld
fchs
cli
ss
cmc
sarb
xchg
lret
ljmp
in
cmp
lret
cmp
fnstcw
test
sub
lret
cli
in
mov
stc
int3
fdivr
out
leave
loopne
sarl
ffree
xor
std
cmc
aam
sti
fmul
into
lock
in
fadd
leave
ss
aam
ljmp
repz
iret
rcl
sub
xlat
ss
iret
jmp
aaa
rolb
lret
test
test
ljmp
xor
aaa
cmp
repz
hlt
loop
rcl
aam
fdivrl
out
cli
out
icebp
loope
out
clc
shlb
lret
out
cmp
fsubr
fcmovu
ret
ds
stc
test
fadds
mov
ret
not
lret
rcl
in
cmc
loopne
fcmovnu
cld
lret
xchg
into
xor
hlt
repz
cmp
iret
imul
std
in
cli
cmc
loope
jmp
fcmovnu
sti
lea
out
loope
ror
lock
shr
int3
fnstcw
loopne
fcompp
aam
jecxz
call
loope
incb
aad
int3
ds
call
into
cmp
fdivrp
loopne
fsub
cld
jmp
sti
xchg
rolb
aaa
shl
leave
xor
cmp
loopne
cld
cld
ret
lret
loope
cli
in
lea
iret
fnstenv
aaa
in
in
aas
aam
aas
in
loopne
into
fdivp
jmp
mov
loop
repnz
fldpi
std
sti
loopne
cmp
fdivr
rolb
clc
xchg
out
std
call
xor
out
lret
cli
aad
and
cmp
clc
out
xchg
fdiv
out
fsubr
ret
aam
iret
iret
aam
adc
test
in
fdiv
rorb
aad
jmp
jmp
fucomip
int3
repz
cmp
lock
sub
enter
mov
call
in
fcmovnu
fcmovb
shl
jecxz
icebp
loop
lock
lret
ljmp
fmul
fldl
cli
int
xor
cmp
cmp
aad
out
fldl
mov
int3
shl
cs
lret
sti
fdivr
cmp
int3
xchg
fnstcw
stc
loopne
stc
nop
mov
in
fmul
jecxz
iret
divl
sti
cmp
shr
fdiv
iret
fcmovnbe
jmp
out
addl
out
idiv
cmp
xor
cli
xchg
mov
int
and
jmp
leave
jmp
leave
cmp
iret
cmc
ljmp
ljmp
shll
sub
xor
test
out
icebp
aad
loopne
sbb
flds
in
fisttpll
test
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
bound
fwait
pop
fsubrs
jl
nop
out
shlb
sub
sti
jmp
out
ljmp
aas
xchg
lret
call
loope
nop
out
aad
xor
add
repnz
loope
cli
leave
fcmovbe
in
xchg
rcl
int3
enter
aad
in
cmp
cmp
test
loop
sub
fisttpl
loop
mov
hlt
clc
int
in
stc
cmc
ror
rcr
out
test
mov
sbb
xchg
and
int
ss
ljmp
in
rcr
out
leave
out
cld
nop
repnz
cmp
xor
fcom
sarb
ret
lock
cld
repz
loopne
mov
out
in
jmp
call
int
fcomip
sti
fnstcw
flds
xor
addl
into
lret
xor
int
xor
int3
fcmovnbe
fcomip
out
fimull
lret
loopne
shlb
int3
in
xor
lret
fucomp
aaa
ror
clc
cmp
out
mov
ffreep
dec
in
lock
repz
jmp
cmp
cld
sar
icebp
addb
fdivrp
fdivr
call
mov
mul
cmp
aas
xlat
int
fdivr
cli
rol
fdiv
stc
les
cmc
cmc
in
enter
xor
stc
xor
hlt
vpsubd
xchg
lret
out
in
repnz
ss
xor
out
icebp
fdiv
cmpb
iret
faddp
call
loopne
sbb
rcl
adc
lret
fisubrl
hlt
out
out
cld
cmp
in
sbb
loope
in
fldl
icebp
out
lock
shll
std
enter
in
cmc
lock
xchg
xchg
xchg
mov
aad
aam
ljmp
jmp
clc
cld
xchg
sbb
idiv
mov
test
out
xor
cmp
loop
into
cli
std
icebp
cmc
jmp
hlt
aad
ds
out
in
cli
enter
lds
xor
xor
fdiv
lret
hlt
std
cmp
fsubp
xlat
fisttpll
int3
and
fcmovnbe
idivb
call
lock
stc
dec
or
fcmovnu
lock
loopne
ret
iret
xor
fxch
jmp
aam
in
cmp
fdiv
fxch
repz
mov
loopne
xchg
shl
fldcw
test
cmp
loope
sar
loopne
shr
jecxz
vpsubq
call
jmp
jmp
ret
std
lock
call
xchg
jmp
xchg
fucomp
repnz
in
into
fstp
movl
hlt
fiadds
sub
shr
fsubr
imul
sti
fcom
in
int3
and
mov
out
lret
jecxz
incb
repnz
jmp
lret
test
cmp
mov
sti
mov
aam
xor
fdivr
cmc
xor
xor
shl
leave
cli
fisttpl
loop
mov
xor
out
aad
into
in
out
fcmovnb
sar
out
repnz
cld
call
lret
xchg
test
xor
fnstenv
roll
cmc
clc
jmp
test
icebp
out
aad
into
ror
iret
in
jmp
rcr
sub
aam
sub
mov
in
loope
xor
out
cld
std
int3
loop
cmpb
xchg
fmul
xchg
lret
mov
repz
sub
ror
lock
call
in
fcmove
repnz
rcl
mov
fdivrp
std
leave
fisttpll
out
xor
xor
stc
faddl
loop
out
mov
aam
notb
call
stc
fcmovnu
hlt
fmul
int3
std
roll
lock
cli
addl
loope
jmp
les
into
int
std
loopne
stc
ljmp
test
xchg
idiv
xchg
jmp
sub
loopne
stc
cmp
div
lock
std
in
sarl
fincstp
orb
aas
aam
cld
out
enter
icebp
aas
roll
jecxz
iret
into
xchg
shr
not
out
aam
clc
xor
loopne
faddp
cld
mov
sub
sar
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
or
out
add
jl
leave
clc
xlat
push
repz
fldl2t
loope
fcmovnb
xchg
mov
shr
repz
cmc
ljmp
in
loope
ret
xor
shl
fstp
stc
repnz
xchg
xor
xor
cli
cmp
call
addb
incl
fcoms
sub
ss
aad
repz
int
cmp
cmp
in
repnz
out
cld
loop
adc
in
fldl2t
sub
ss
ds
ror
mov
fdivrp
jmp
icebp
int3
mov
leave
in
lret
in
aaa
lret
fdivrl
cmp
jmp
out
in
leave
enter
ds
in
cmp
into
enter
aam
int3
jecxz
shr
stc
sti
int3
lret
jecxz
xor
icebp
rcr
in
ljmp
ret
cld
testl
lret
call
loope
jmp
cmp
cmp
fmul
xchg
out
testl
jmp
fsub
in
cmc
aad
ret
shr
cmp
aas
clc
ret
ret
fdiv
rol
repz
cld
ljmp
xchg
aad
fld
out
xor
lock
fdivr
int3
fdiv
loope
lock
cmp
xchg
cmp
aad
ret
xor
ljmp
loop
aas
fcmovbe
fsub
lret
xor
jmp
test
test
sub
call
cld
in
cmp
cmp
aad
sar
shl
clc
cmc
enter
fists
div
jmp
std
std
sti
in
addb
test
les
cli
in
repz
icebp
shlb
rcl
xor
xlat
aam
ljmp
fcomi
cmc
stc
out
mov
out
fdivp
mov
cmp
cmp
fdiv
aas
cmp
repz
out
icebp
fcomip
fcmovu
out
incb
out
loop
lock
int
shl
xor
in
cmp
aam
addl
into
lds
xor
ret
out
repz
ds
fiadds
xor
rcl
in
in
out
div
shl
das
cld
cmp
sarl
sti
in
std
repz
jmp
loopne
ror
std
xchg
incb
hlt
ffree
rol
out
cmp
sbb
incb
out
in
dec
hlt
into
shr
repz
icebp
aam
iret
or
rcr
jmp
mov
in
in
orl
call
aas
sar
into
orl
enter
shl
in
clc
cmp
frndint
aaa
stc
in
jmp
fucom
loope
loop
ljmp
std
lret
int3
aaa
in
xor
std
icebp
loope
cmp
iret
lret
int
xchg
das
in
ss
xor
out
icebp
ss
xor
fadd
roll
mul
cld
out
fdivp
out
enter
jmp
cmc
xlat
loop
jecxz
std
loopne
incb
hlt
aad
icebp
shr
aaa
cmp
sar
in
testb
sbb
mov
clc
fsubr
cmc
ljmp
lret
div
in
clc
rcl
out
out
test
ljmp
xchg
out
int3
xlat
xor
repz
fcmove
aas
lock
repnz
fxam
orb
into
out
incl
xor
cmp
cmp
lock
clc
test
xchg
mov
xchg
rcll
in
in
call
iret
aad
addb
clc
loope
into
test
ds
mul
aam
in
icebp
fxch
cmp
ss
xlat
adc
leave
lds
lret
shrb
leave
sar
ror
std
ds
fsub
rcl
test
test
int
xor
aaa
int
cmp
fneni(8087
sti
std
stc
int
loopne
repnz
enter
std
enter
and
ss
fcmovnbe
stc
fxch
sarl
lock
cmp
icebp
sti
cmp
fisttps
xor
jecxz
shr
icebp
fsub
shr
stc
in
aad
fcmovu
enter
faddl
enter
aam
aaa
ror
std
aaa
fistpll
cmp
cmp
xchg
test
stc
in
in
cs
xor
cmc
int3
aaa
hlt
lret
xlat
ds
ljmp
repnz
add
add
ret
fcmovnu
aad
inc
pop
inc
fwait
adc
or
cmpsb
add
mov
sti
cmp
std
call
xchg
jmp
in
enter
cmpl
test
loop
or
icebp
int3
test
mul
xor
int
cli
cmp
div
lret
rol
clc
std
fadd
out
xchg
iret
call
int
xor
in
ret
aad
enter
clc
idivl
hlt
test
lock
ret
cmp
ffree
cli
loopne
icebp
fdivp
out
xlat
ret
loop
out
fxch
jmp
roll
cli
loopne
vpsubb
in
mov
sub
leave
int3
loop
xor
in
repnz
out
shl
fadds
ljmp
adc
cs
out
xor
cmc
aas
out
ljmp
mov
ret
neg
jecxz
cld
faddl
into
int
cmp
lret
xlat
clc
fcmovbe
shl
neg
stc
decl
repz
xor
repz
lock
jmp
xlat
fdivrl
std
cmp
lock
decb
out
ret
aad
cmp
ds
cli
into
rol
cmp
mov
out
stc
mov
nop
lea
xor
sti
cmp
loope
clc
xor
jecxz
fcmovnu
div
sti
fsubr
ljmp
cs
ss
std
aad
aas
aas
stc
ljmp
rcr
clc
jmp
testb
xor
in
sub
xor
xor
add
fcoms
rclb
leave
into
xor
jmp
fcmove
fstpt
shr
xchg
ds
in
flds
mov
ss
out
shl
cmp
aas
xchg
out
in
hlt
out
call
rcl
ljmp
in
aas
fcom
sti
fdivp
fcmovb
and
cmc
in
test
out
xchg
cs
in
cmp
hlt
neg
aad
addb
test
cmc
into
out
imul
ret
cld
repz
clc
idivb
int3
fcomip
xor
mov
sti
in
jecxz
test
in
xor
add
stc
aas
test
leave
cmc
in
jmp
cmc
jmp
int
rol
std
fdivr
ret
repz
aad
test
out
mov
mov
aad
hlt
lds
stc
loop
std
xor
aad
shr
stc
cmp
stc
mov
cli
xlat
in
xchg
repz
icebp
repz
rol
xor
fcmovbe
icebp
into
repz
aas
addb
rorl
in
into
ficoms
idiv
sub
sti
shr
loope
shl
in
vpsubq
test
neg
in
xchg
loopne
xchg
mov
loope
loop
in
lock
lret
or
std
shl
call
in
in
fcmovnu
rcr
int
in
rcl
iret
repnz
jmp
cmp
out
ds
fcomip
out
ret
ror
xchg
std
iret
out
xchg
out
shl
jmp
fmul
xor
out
int
rolb
ret
ljmp
ljmp
call
cmp
cmp
std
aad
shl
out
aas
clc
rorl
out
jmp
repnz
repz
cmp
jmp
sar
hlt
sti
loop
fadds
loope
xor
repz
leave
fdivs
fst
fdivrp
int
loop
stc
out
loop
fsub
std
lock
sub
rcl
into
loop
xlat
jmp
in
stc
xlat
div
testl
loop
loope
test
into
lret
aam
sti
stc
rcr
repnz
cmp
loope
loopne
addb
ljmp
xor
cmp
fmul
into
in
loop
xlat
flds
sbb
mov
lret
pushl
icebp
in
incb
rcl
in
out
mov
mov
mov
fidivs
out
cmc
cmp
sar
icebp
jecxz
clc
stc
imul
test
shr
mov
mov
xchg
stc
out
lret
rcr
add
shl
rol
aad
mov
fisttpll
in
aad
lret
rol
repnz
out
hlt
cmpl
xlat
not
fcmovne
ret
loopne
cli
fcmovbe
jmp
rcl
in
lret
enter
ds
icebp
xchg
ror
orl
in
xor
in
test
shl
loope
rcr
sti
test
iret
fisttpl
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
test
rcl
leave
aaa
jmp
ss
jmp
std
loopne
rcr
add
rol
xlat
ljmp
out
iret
xchg
out
call
lock
rcl
int
hlt
in
cli
test
mov
sti
decb
loopne
enter
fyl2x
stc
fdivrs
sbb
cli
mov
jecxz
loope
in
out
in
ret
aaa
in
ljmp
cmp
std
cmpl
hlt
test
loop
int3
cld
out
xor
xor
xlat
repnz
aad
fdivr
incb
std
xchg
iret
mov
in
leave
leave
in
fdivrl
lock
int3
cmp
xlat
out
fninit
out
std
out
in
aaa
in
aad
jmp
jmp
fnstcw
xlat
idivl
int
aad
icebp
repz
std
xlat
mov
fdivr
cld
rcll
sub
clc
fdivr
fnstsw
enter
lds
xchg
xor
xchg
xchg
lret
in
aam
jmp
in
int
fcmovnbe
in
cmp
out
std
mov
aam
out
mul
loop
fiadds
lret
cmp
cld
hlt
hlt
loop
repnz
xchg
jmp
fldlg2
dec
out
cli
cld
loop
xor
enter
int3
stc
into
repnz
cmp
rolb
jmp
aad
repnz
cmp
iret
fucomi
jecxz
fisttpl
xchg
adcl
enter
fcmovbe
cmp
loope
sar
ss
fcomp
sti
cli
out
out
cli
jmp
xchg
iret
loope
lock
repz
in
fucomi
fcmovnbe
repnz
out
in
icebp
fiadds
fstp
mov
in
int
ljmp
out
lock
int
filds
clc
xlat
lret
loop
cli
in
fmull
cmp
hlt
lock
fucomi
cmp
out
lock
repnz
xlat
lret
int3
cld
xchg
test
aaa
fisubrs
sti
icebp
divb
call
iret
shl
repz
xlat
ds
in
sub
ret
cld
xchg
fdivrs
std
out
in
lock
ret
fcmovnb
cli
ret
mov
xchg
hlt
rcl
icebp
out
out
aam
into
cmp
ds
repnz
std
fsub
jmp
fiadds
shrb
xor
int
loope
loopne
repz
xchg
out
sar
xchg
mov
xchg
lock
jmp
int
shr
cmp
out
aad
rorl
lea
icebp
cmc
int
in
xor
aam
aaa
sarl
movb
into
ret
sti
icebp
xchg
shl
in
repz
sub
ffree
sti
xor
lret
xlat
not
test
hlt
fstp
mov
in
shl
lret
xor
neg
cmp
jmp
loope
cmp
loop
cld
popl
popl
fxch
xlat
jmp
out
lock
out
cli
in
rol
ret
stc
leave
jmp
lea
into
clc
xor
sti
clc
iret
aad
fmulp
shl
in
clc
in
jecxz
sti
test
in
repz
xchg
into
lret
cmp
fdiv
aam
neg
stc
lret
cmp
leave
out
out
incl
into
ss
shl
out
clc
ss
les
call
out
jmp
xor
imul
rcr
lret
int3
into
fcomi
ret
int
sbb
out
lret
leave
fmuls
out
das
out
xor
xlat
lret
fnstcw
iret
fcom
in
repz
stc
in
fcomp
cmp
stc
in
loopne
fmul
xchg
rolb
aam
aam
jmp
sar
lock
rcr
repz
rorb
fiadds
in
aad
not
shll
int3
test
mov
sti
decl
ljmp
xor
std
lret
out
aas
fucomip
shl
aas
fdivrp
call
std
loopne
icebp
int3
enter
fsubp
int3
aaa
lret
sub
hlt
cld
repz
and
std
mov
out
loop
in
shl
ror
int3
stc
shr
leave
cmp
stc
out
movb
test
fists
shlb
fdivrl
fcmovu
int
fistpll
fyl2xp1
cli
test
in
addl
adc
aad
div
ljmp
out
aad
cld
shl
in
orb
fiaddl
jecxz
add
jmp
rol
int
fst
fcmovne
xor
out
mov
jl
out
in
fstp
jmp
fucom
into
adc
sbb
lret
fisttpll
das
xor
cli
sti
iret
sub
cmp
cmc
lret
loope
int3
fucomp
jmp
aaa
shl
repnz
into
xlat
loope
fld
aaa
rol
addb
in
lret
mov
test
hlt
out
in
cli
fdivrs
xchg
ret
mov
mov
int
fldl2t
loope
nop
xchg
cmc
das
cs
lret
not
icebp
in
clc
shl
loope
idiv
loopne
call
int
repnz
hlt
enter
cmp
add
faddp
rol
leave
repnz
int3
std
sub
mov
mov
xor
ret
xor
imul
lock
aam
bnd
jmp
jmp
cld
test
clc
test
mov
shlb
in
out
cmp
jmp
sarb
roll
orb
lret
out
decb
ljmp
clc
aam
stc
out
iret
xchg
fdivrp
cld
xlat
sti
in
ljmp
in
out
cs
xor
lret
cmp
std
out
hlt
mov
fxch
in
decl
sub
jecxz
in
xor
stc
cmp
cmp
icebp
fdivr
mov
xlat
icebp
xchg
frstpm(287
mov
loope
lds
shlb
lds
lock
dec
aas
loop
aam
rcr
leave
ret
or
mov
lret
lret
loop
mul
xor
xlat
fldlg2
aad
sti
cmp
out
cld
sar
test
lret
jmp
jmp
iret
lret
xor
jecxz
ss
cmc
hlt
fstp
rcr
icebp
aas
fxch
shl
out
xlat
movb
fstl
lock
fcos
cmp
lock
test
fcomp
and
jecxz
xlat
in
xor
xchg
xchg
sub
ror
cmp
in
cmp
aas
int
icebp
add
ret
in
mov
sbb
loop
stc
out
aaa
in
xor
xlat
cmp
clc
std
mov
roll
test
repnz
faddp
fadd
aad
cmp
cmp
std
or
clc
jecxz
fninit
mov
pop
incl
iret
in
out
lret
fcmovu
loope
fsub
lds
out
fcmovnbe
lock
xor
xor
out
cmp
shll
loopne
lock
mov
enter
mov
xchg
jmp
iret
ror
cmp
std
repz
cmc
cld
out
test
out
sti
cli
in
orl
das
icebp
ret
shl
xor
in
xlat
jmp
and
xchg
jmp
sti
lds
loope
imull
out
cmp
rcl
icebp
loop
in
in
loop
call
cmc
call
repnz
imul
fdivrp
repnz
cmp
mov
fsubr
ljmp
jecxz
cmc
aad
call
cmpl
out
orb
mov
into
out
ret
mov
loop
cli
aas
aam
jmp
cmp
cmpl
mov
test
leave
in
mov
loop
iret
bnd
ror
leave
cmp
shr
xlat
test
shl
repnz
fildl
int
int3
out
int3
clc
rol
lret
repnz
clc
f2xm1
shl
cmp
repnz
test
cld
leave
out
in
icebp
out
jmp
xor
xor
shl
sar
in
lock
jecxz
aad
lret
jecxz
lock
loop
loop
fdivrs
aad
hlt
xor
cmp
jecxz,pt
xlat
fiaddl
loope
shl
mov
jmp
out
cmp
fidivrs
ss
xor
clc
out
cld
sbb
fdiv
enter
sub
lret
into
jmp
iret
in
iret
cld
lds
jecxz
mov
in
xchg
int
into
int
lret
out
xor
ljmp
test
jmp
cli
test
cmc
int3
aas
xor
xor
ss
jmp
neg
lret
sar
xchg
out
test
into
jmp
shr
clc
test
call
std
cmp
loopne
cli
aas
sub
loope
out
jmp
ror
xor
out
stc
cmp
ljmp
xlat
loop
roll
into
mov
out
iret
loopne
repnz
into
in
lock
xor
iret
fst
iret
iret
rcr
fcmovu
ffree
fmuls
shr
xor
ss
int
icebp
cmp
ret
add
lret
ret
fstpl
fidivrl
cmpsb
inc
mov
inc
jg
cmpsb
add
in
testb
fmuls
aad
leave
rol
sti
cmp
clc
aas
fcom
shl
jecxz,pt
addb
rcr
iret
shr
ds
iret
fcmovb
hlt
shr
jmp
enter
in
jecxz
ret
test
sti
mov
loope
sti
das
in
into
out
loop
cmp
cmp
aam
fcomi
sti
orl
out
test
xchg
jmp
vpsubw
out
aaa
enter
ret
in
iret
sti
fcmovnb
aad
loopne
xchg
call
jmp
lret
into
cmp
fsubrp
xor
leave
sti
loope
icebp
addb
sub
in
sti
xlat
repnz
cmp
aad
ret
inc
rol
loope
fisttps
nop
icebp
jmp
leave
imul
iret
cmp
repnz
idiv
jmp
jecxz
ror
fcmovnu
sbb
loop
loop
cmp
jmp
std
call
out
testb
mov
rclb
jecxz
divl
icebp
std
lret
loope
int
cmp
ffree
in
lret
out
repnz
into
out
jmp
repnz
aaa
repz
loope
cmp
hlt
test
call
lock
shl
aad
cs
xlat
sar
fdivrp
repnz
xchg
hlt
mul
leave
fisttps
cli
loopne
in
loopne
out
test
cmp
sub
rolb
leave
in
xchg
adcb
neg
lret
aaa
fcmovnbe
std
shl
in
loope
in
stc
cmp
call
mov
into
xlat
fsub
lock
fcmovu
fdiv
repnz
movl
bnd
sub
cmp
int
shr
hlt
aas
sti
jmp
mov
xchg
out
adcb
lret
fmul
in
neg
cmpb
shr
roll
lret
and
bnd
idiv
aaa
ss
jmp
fdivr
in
testl
mov
icebp
xor
aaa
lock
out
loopne
fcomip
std
test
jmp
loop
cli
testl
ret
leave
jmp
stc
int3
cmp
cmc
hlt
cmp
in
test
hlt
mov
ret
mov
enter
int
mov
imul
aam
clc
aam
fidivrs
int3
fadds
mov
fucomi
mov
divl
xor
hlt
shl
xor
xor
fstpt
cld
loop
cmc
shl
repnz
out
in
xchg
xchg
jmp
cmc
cmc
ss
jmp
addl
sar
test
cld
fcmovu
jmp
xlat
stc
jmp
shr
or
fsub
std
fcomp
loopne
ror
loopne
addl
cmp
cmp
repz
in
aas
cmp
xchg
xchg
repnz
jmp
int
sub
sar
ror
aad
icebp
fcmovnu
into
fcomp
ret
out
orb
shl
cli
int3
aad
ljmp
fcomip
in
out
out
int
ljmp
in
mul
call
lret
iret
and
cmp
in
fsub
in
cld
faddl
jecxz
xor
cmc
aaa
xor
aaa
leave
loope
iret
loop
int3
rol
fdivrs
fadds
sub
cmc
xor
das
cmp
rol
cmp
ror
xlat
neg
ret
into
test
stc
test
and
test
repz
loopne,pt
in
out
cli
loope
sub
ret
out
in
fdiv
adcb
xor
in
into
out
lock
std
mov
jecxz
sbb
in
out
adc
cmc
jmp
jmp
fildl
sti
orl
lock
jmp
mov
jmp
fst
cmp
filds
filds
mov
icebp
loope
lock
icebp
lret
sti
std
cmp
hlt
fcmovbe
ret
rcl
repz
fiaddl
int
int3
xlat
xor
fcmovne
dec
jecxz,pt
loope
rcr
fmul
flds
test
xlat
int3
jmp
xor
rcl
imul
roll
addl
ret
shr
lret
fdivrl
test
pop
pop
leave
ret
mov
jmp
aam
fcmovnu
mulb
mov
aam
jg
cmpsb
add
out
cld
mov
xchg
into
fsubrp
cs
xor
in
std
int3
fcmovnu
mov
fiaddl
ljmp
loopne
enter
enter
int
and
in
repnz
hlt
loop
fcmovu
jecxz
mov
into
out
in
aad
shl
cld
fmul
fsub
rcr
cld
lret
xchg
jmp
ljmp
xlat
jmp
idiv
cmp
mov
fadds
in
int3
int
out
ret
lock
lock
icebp
loope
icebp
jmp
test
lock
out
shll
loop
cmp
lock
stc
cli
imul
ffreep
div
aas
loopne
clc
fmul
adc
mov
icebp
jmp
fnstenv
cmp
fdivr
sarl
in
xor
ljmp
mov
shll
aaa
cli
rolb
sti
repnz
std
clc
xchg
loope
int
ds
iret
jmp
out
ljmp
flds
ljmp
jmp
stc
mul
in
rcr
cmp
std
fcomp
clc
std
ror
loop
in
ret
cmp
xchg
rorl
sarl
sti
lret
cmp
cmp
cld
fdivrl
out
mov
sti
shl
fdivr
fldpi
fisttpl
into
ret
in
xor
cmp
loopne
ret
cli
neg
add
mov
mov
ds
enter
xor
xlat
jmp
loope
icebp
stc
ds
aas
in
filds
nop
fsubrp
mov
loop
ljmp
std
jmp
aas
in
sar
aam
decb
jecxz
jmp
call
repz
cmp
fiaddl
cmc
fnclex
test
out
mov
iret
xchg
iret
jmp
aam
aaa
out
sti
ror
add
jecxz
xlat
in
loop
shl
addl
in
cmp
lock
aam
sti
in
jmp
loopne
in
ljmp
in
vpsubsb
cmp
fsubp
cld
into
aad
test
ret
aam
neg
mov
xchg
jmp
aam
aaa
jmp
aad
out
aas
in
fsubr
fdiv
int
xchg
xchg
out
rcl
rcl
int
call
fdivp
icebp
test
in
mov
ret
mov
jmp
into
call
out
ret
sti
lret
jmp
lock
ret
movb
in
mov
out
jmp
iret
call
out
cmp
ret
in
cld
ret
sar
imul
clc
nop
repz
out
fxch
jmp
int3
aad
hlt
xlat
lret
test
iret
loopne
std
sti
in
in
jmp
int3
xchg
in
in
rcl
cmp
cmp
fdivrl
cli
std
repnz
loope
cld
lea
lret
jmp
in
xor
fmulp
lret
stc
int
out
fxtract
in
fsub
lret
test
into
xchg
aam
cld
dec
aas
cmp
test
cld
lret
test
fcmove
xchg
call
xor
incb
out
aam
test
xchg
ror
out
leave
sub
int
cmp
cmp
aam
neg
leave
ret
addb
test
xor
rcl
into
fstp
cmp
cmp
shl
lock
and
ljmp
xchg
fabs
sub
fsubr
rcl
xor
ljmp
neg
leave
cmc
xchg
fcmovne
sbb
rclb
iret
in
jmp
xor
out
out
cmp
in
hlt
cmc
leave
call
repz
repnz
out
stc
cmp
xor
lock
hlt
repnz
loop
ds
ljmp
sbb
into
call
fdivrs
lret
cmp
ret
lds
mov
xchg
lret
shll
ror
ds
cmpb
in
loopne
out
stc
hlt
xlat
xchg
out
lret
fdivp
jmp
cmc
cmp
iret
loop
test
xchg
leave
ftst
in
orb
icebp
cs
iret
fpatan
cmp
in
jecxz
loop
cli
call
or
ljmp
jmp
aad
in
in
leave
lret
enter
in
stc
movb
addl
inc
call
mov
add
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
add
sbb
jg
cmpsb
add
fdiv
fcom
xor
int3
clc
fidivrl
fcomp
fdivr
cmc
cli
aad
sti
out
in
test
shlb
out
lock
call
ds
mov
out
in
ret
mov
ret
enter
cmpb
test
repz
mov
xchg
jmp
call
fmulp
shl
xlat
xchg
loopne
fdivrp
nop
in
mov
into
aad
cmp
aam
cmc
fcom
cmp
and
incl
in
lea
lock
cld
sti
fcomi
in
inc
mov
loop
loopne
in
jmp
ljmp
fcom
repz
cld
cli
neg
leave
testb
ror
ljmp
xor
fstp
fst
loopne
aas
test
cmp
sti
fsubrp
nop
xchg
lds
sar
xor
out
iret
sar
rcr
fadds
testl
int3
lock
jmp
lret
imul
out
iret
jmp
and
fdivr
in
in
test
out
xchg
mov
lret
test
cli
into
or
ret
mov
ret
lret
xchg
out
enter
aam
cmp
ror
aad
jecxz
mul
into
fsub
sar
fucom
sti
test
and
repnz
out
xor
cmp
sarb
rcl
out
fildl
hlt
mov
lret
fdivr
mov
int
ret
aad
cmp
leave
cmp
lock
loope
loope
test
fcmove
xchg
shr
enter
ljmp
out
cmc
shl
cmp
test
ds
flds
loope
in
test
aaa
out
ror
fldln2
test
int3
aas
clc
out
sti
jmp
jecxz
call
call
test
jmp
out
fiadds
clc
fiaddl
cmp
ror
out
ljmp
cmp
in
fucomp
std
xchg
out
icebp
out
loope
loop
rcl
ss
in
lret
out
fsubr
ljmp
ds
loope
fsubr
orb
xor
out
les
cmp
call
sbb
jmp
mov
out
xchg
into
into
cmp
cmp
lret
fcomi
fcomp
in
cmp
clc
mov
xchg
loope
loope
leave
ret
out
fdiv
rcl
lret
std
fxam
clc
repnz
test
xchg
into
xchg
in
shl
aad
lock
enter
fincstp
ret
test
fucom
xchg
jmp
loope
loope
mov
xchg
sub
clc
cli
iret
lock
loope
out
cmp
test
aam
roll
xchg
in
in
out
call
cmp
lret
ret
dec
fcmovnb
test
rclb
iret
aad
repnz
out
int3
shll
add
cld
cld
mov
lret
mov
cmp
xor
enter
aam
ljmp
aam
fildl
nop
in
xor
xor
clc
fdivr
int3
jecxz
and
lock
cld
add
mov
in
fadds
fsubp
loop
sti
lock
divb
into
iret
dec
xlat
test
ds
out
out
mov
in
int
lret
int3
in
loope
loopne
fucomi
int
enter
out
rcl
cmp
clc
mov
mov
out
repz
ror
shrl
shr
out
std
lret
cmp
repz
ret
jecxz
xor
fld
loope
out
into
aad
loopne
aam
fcmovnu
in
repz
loopne
cmp
cli
cmc
hlt
fdivrp
xchg
loop
rolb
cli
aaa
xor
ret
incb
sti
enter
int3
stc
loope
jecxz
mov
into
jmp
stc
cmp
cmp
ss
addb
jmp
repnz
aad
icebp
fcmovnu
out
shl
cmc
hlt
ret
out
loope
fdivr
fndisi(8087
mov
jmp
cmp
sti
ds
in
cmp
fdivr
xchg
mov
int
mov
cmp
cmp
cmc
aad
incl
aam
rolb
ljmp
subl
ror
leave
sti
cmp
fidivrs
out
andl
jmp
mov
jmp
iret
aad
aad
adc
lea
jbe
loop
test
jg
cmpsb
add
icebp
cmp
aam
out
cli
sti
hlt
and
int3
mov
icebp
loop
xlat
lret
in
icebp
repnz
ss
int3
fneni(8087
jecxz
fsubp
not
clc
rcr
ror
std
out
xor
out
fld1
fadd
enter
fdiv
fsubp
stc
loope
test
xchg
jmp
icebp
loope
in
fcmovbe
lret
ds
lret
loope
sar
xchg
mov
ljmp
test
rcl
out
int3
ss
fstp
inc
cld
cmc
cmc
out
sbb
in
xchg
addl
shl
les
stc
sub
cmp
xorl
test
ret
not
in
loopne
sub
rcl
fucomip
out
cmc
aaa
shr
clc
shl
jmp
aad
jecxz
fmul
ret
jecxz
fimuls
lock
out
call
int3
jmp
loopne
idiv
aas
incb
int
in
orb
shl
enter
aaa
cmp
shl
shl
rol
out
cmp
test
aaa
ljmp
call
icebp
rcl
ret
int
int
mov
incl
jmp
jmp
loopne
cmp
int3
filds
mov
jecxz
jmp
xchg
in
jmp
idiv
aad
out
icebp
cmp
lret
cmp
out
in
ffreep
idiv
loope
out
loope
xor
clc
aaa
cmp
loop
add
loopne
neg
shl
xchg
fisttps
shl
imul
fnop
cli
std
cmp
neg
repnz
fildl
jmp
shl
shl
xor
xor
ret
cmp
cmpl
test
cld
mov
sbb
in
repnz
loopne
lds
xlat
rcr
cli
call
icebp
std
fld
shl
faddl
and
out
lret
aad
sub
fidivrl
xor
fnstsw
iret
int3
aad
sti
repnz
inc
xchg
xchg
loope
test
vshufps
leave
ljmp
fnstcw
lock
mov
iret
fsubrp
icebp
mov
sub
shlb
loop
cmp
shl
stc
icebp
in
filds
test
fcmovnbe
xchg
stc
shll
cmp
stc
into
aas
loope
loope
out
rorl
loop
cld
or
das
aaa
int3
sub
fcomi
fucomip
stc
fmul
hlt
orl
fcomp
out
out
out
xchg
icebp
ds
mul
cli
iret
aam
in
lock
rcl
hlt
out
shr
jmp
or
ljmp
iret
cmp
enter
sti
dec
std
in
shl
test
int
iret
in
lret
enter
ljmp
out
cmp
lock
loop
orl
out
xchg
loope,pt
xor
xor
xlat
std
cld
into
rcr
stc
in
iret
into
sti
mov
iret
test
leave
xor
aaa
stc
out
ror
clc
lock
adc
test
enter
out
fcmovbe
cld
lock
ljmp
clc
repz
in
mul
std
hlt
fcmovnbe
addl
rcl
in
fcmove
mov
ss
sti
jecxz
cmc
loop
ds
mov
in
test
fsubr
xor
cmp
cmp
ljmp
leave
ret
fadds
sti
mov
int
lock
mov
xor
aam
cld
icebp
in
rcl
les
mov
lret
cli
cmc
mov
int3
fcom
xor
cld
in
cmp
xchg
loope
xchg
std
enter
jmp
xor
int3
xor
shl
aad
lock
std
rol
cmp
fsubp
std
mov
repz
int
ss
aaa
not
repnz
int
mul
aad
hlt
rol
jmp
in
leave
mov
loopne
sub
sub
ror
call
hlt
xor
sti
jmp
lret
iret
ljmp
out
aaa
ror
repz
sub
sti
jecxz
out
enter
int3
fsubr
mov
cld
in
lock
lret
lret
int
out
out
push
jecxz
loopne
fadds
sub
in
stc
xor
in
int3
cmp
loope
ss
sarl
out
out
lret
in
loopne
int
xor
shl
stc
cmc
into
xlat
in
fdivrs
ret
test
mov
jmp
mov
int
mov
cmpsb
and
push
jg
cmpsb
add
ljmp
sub
out
cmc
cmc
cmc
call
fadd
cmp
in
cld
idiv
std
sti
loope
out
test
std
std
fisttpll
leave
lret
repnz
in
repz
cmp
cld
rcl
mul
fcmovb
mov
leave
fiaddl
ret
aaa
xlat
out
lret
stc
cmp
xor
xchg
stc
in
xchg
xchg
cmp
f2xm1
repnz
fnsave
int
neg
loop
rcl
ljmp
ffreep
enter
loopne
icebp
repnz
xor
mul
int3
sar
mov
sar
mov
in
in
fildl
lret
in
icebp
clc
xor
fcomp
iret
cmc
fucomp
fstp
add
stc
xchg
roll
xchg
lret
loopne
inc
fmulp
cmc
xor
rolb
cld
and
sar
ret
mov
mov
mov
shr
in
xlat
aad
ljmp
aas
rol
shl
std
fnstsw
ffree
testl
xor
int
hlt
repz
cli
std
rol
div
sbb
in
test
addl
lock
int3
testl
movb
cmc
push
shl
shr
xlat
call
xlat
call
fcomp
fndisi(8087
mov
in
mul
out
fsubr
int3
loop
aaa
xlat
clc
repz
out
jmp
xlat
rcl
repz
shl
loopne
mov
cld
out
fists
repnz
rcl
call
int
ljmp
fimull
int
test
repz
hlt
out
lret
jmp
aas
into
stc
sub
addb
in
xor
sti
leave
in
das
out
rcl
cmp
mul
add
dec
test
fst
out
cmc
repz
xlat
iret
aaa
div
hlt
repz
out
cli
sti
in
loopne
testl
ror
aad
icebp
xor
icebp
cli
enter
std
neg
xlat
fnstsw
fcmovnu
flds
stc
in
jmp
xchg
cmc
lret
xor
lock
out
std
aam
cmp
ret
clc
jmp
aam
mov
stc
in
test
out
out
jmp
aam
ljmp
shr
rol
not
jecxz
std
jmp
test
std
out
divl
ljmp
icebp
cld
in
shl
jecxz
rcr
rcr
loop
loope
ljmp
test
into
out
sti
leave
out
out
fildl
loop
jecxz
fcmove
in
test
repnz
fld1
ss
lret
fdivp
loope
hlt
iret
not
repz
iret
leave
fiadds
shl
aad
cld
xor
out
cmp
in
shl
lock
std
fcmovbe
cmc
aam
mov
nop
mov
in
lret
ljmp
ljmp
fmuls
cli
cld
loope
lock
int3
jecxz
out
in
fucomi
fmul
call
test
call
decl
int
divb
cmp
jmp
std
aam
hlt
fcomi
leave
in
in
clc
lock
out
icebp
in
ljmp
cmp
repz
into
aas
in
jmp
mov
shr
out
in
int3
xlat
out
clc
jmp
int3
hlt
xor
hlt
test
sti
sti
mov
in
div
loopne
cmp
cmp
into
int
lock
hlt
testl
in
xchg
xor
mov
leave
clc
cmp
loopne
in
stc
flds
or
aad
jmp
xor
loope
cmp
out
and
sub
fucom
xchg
repz
xor
int
in
leave
repnz
dec
aaa
into
std
roll
jmp
clc
mov
rorl
jmp
clc
ss
jecxz,pt
out
icebp
lock
ret
cld
movl
iret
vpmulhuw
cli
cmp
int
aam
aam
cmc
loopne
loopne
movb
out
out
in
not
xor
jmp
loope
out
rcl
clc
fcmovnbe
rcr
fsub
icebp
and
out
int
enter
cmp
jmp
stc
ds
cmp
in
lret
mov
fcomp
xchg
cli
shr
call
roll
repnz
ret
out
xchg
ljmp
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
aam
rcr
enter
faddl
div
lock
jmp
leave
xchg
das
out
jmp
in
cmc
xlat
fcomi
aad
out
rcr
leave
aam
test
test
in
shl
icebp
ljmp
cmp
aaa
ror
filds
incl
jmp
addl
xor
in
ret
into
testl
repz
xchg
mov
xor
ss
aam
ds
aas
fcmovnu
cld
add
rolb
int
mov
lret
int
ljmp
lock
rol
cli
mov
sub
test
repz
cmp
in
in
lret
cld
cli
jecxz
fisttpl
ret
out
cli
loop
fisttpll
clc
fst
ss
cli
sarl
jecxz
xchg
aam
lret
xchg
ljmp
xor
hlt
xor
in
xor
sti
cmp
vcmppd
lret
test
roll
cmc
fnstenv
xor
fcom
aas
lock
shl
test
rol
std
lret
fmull
xchg
and
in
in
std
jmp
cmp
cmp
sar
hlt
aad
addb
xchg
call
aaa
xor
cmp
jecxz
in
loopne
cli
leave
and
shr
or
dec
lret
call
aaa
stc
incb
in
div
out
lret
leave
jecxz
mov
out
xor
jmp
fdivp
ror
ror
ret
enter
mul
lock
lret
jmp
lret
cmp
iret
dec
sub
clc
iret
xchg
mov
aam
fsubp
leave
std
and
jmp
icebp
xor
cmp
ss
icebp
idivb
xlat
icebp
dec
out
std
clc
in
loop
mov
jecxz
shll
cli
jmp
lret
ret
loopne
sar
fcmovbe
fldln2
leave
test
test
ror
in
sub
shl
out
int
cmp
cli
mov
test
aam
lret
ret
stc
aaa
call
aas
cmp
ffreep
fucomip
orb
in
cs
aaa
jecxz
ror
repz
repnz
hlt
loopne
loop
mov
jecxz
into
ret
in
out
ds
ljmp
mov
std
jmp
call
xor
ror
ror
int
loopne
iret
test
fucomp
loop
xchg
xlat
in
jmp
in
nop
fmulp
in
in
out
ss
ds
loopne
loopne
sti
cmp
sub
mov
out
addb
lock
sti
into
cmp
repnz
cmp
ffree
shl
enter
jmp
loope
xchg
mov
stc
imul
lret
ror
jmp
ss
aad
cmc
fiaddl
mov
out
orb
ljmp
hlt
ret
icebp
adc
dec
adc
out
mov
std
xchg
shl
into
icebp
shr
enter
fmul
out
std
fdivp
jecxz
cmc
enter
leave
loope
out
fcmovne
fdivp
into
in
xor
xor
in
fdivr
mov
out
cli
jmp
dec
test
div
rol
rol
cmp
aas
aas
ljmp
sbb
incb
loope
shl
in
ss
enter
cmp
cmp
xlat
out
xlat
lret
loope
xchg
repz
rcl
cmp
les
jmp
add
cli
fcmovnu
shl
mov
xchg
out
lock
call
jmp
xlat
div
orb
inc
in
int3
cli
jmp
in
int3
bnd
cmp
cmp
cmp
fdivr
mov
mov
aad
in
sarl
not
and
out
test
hlt
fcomip
testl
xchg
test
std
idivl
call
loope
cmp
cmp
fldl
fmulp
jmp
divl
out
cmc
icebp
out
sar
out
aad
sarl
out
ret
sbb
lret
cmp
lds
fcmovnb
jmp
lock
not
cmpb
cmc
xchg
cmp
addl
xchg
aam
loopne
aaa
fcmovnbe
xlat
ljmp
es
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
mov
cmpsb
pop
jg
cmpsb
add
cmp
fcmovb
fsubp
incb
or
icebp
out
int3
add
not
sti
cmp
shl
xor
ds
std
lock
xchg
jmp
shl
repnz
in
out
cmc
lock
lock
lret
shl
test
jecxz
in
leave
fsubrp
lock
xor
sub
std
out
cmc
shl
aam
lock
idiv
in
mov
xchg
rcl
int
in
ss
aam
rcl
cld
aaa
xor
xlat
loop
ret
jmp
hlt
leave
iret
xchg
fisttps
cmc
xor
ss
cli
stc
frndint
cmp
add
loopne
ffree
or
lea
stc
repnz
out
cmp
fcmove
lret
neg
xor
fstp
mov
jmp
in
out
int
rcr
aam
lock
loop
xlat
push
loopne
xchg
ljmp
lret
clc
aam
sti
ss
fidivrs
into
aam
cli
loop
ljmp
clc
fcmove
loope
xlat
iret
loop
enter
ss
aad
xlat
cmc
and
sarb
fninit
test
jecxz
test
shl
shr
shlb
cmp
aam
into
shl
flds
cld
xchg
xchg
jecxz
lock
xor
int
aam
aas
lret
xlat
fcomip
loope,pt
cmp
xchg
stc
loope
fsub
mov
cs
int
fucomp
ds
repnz
out
into
lock
jmp
aam
flds
ljmp
in
lret
fxch
in
in
mov
in
and
out
mov
out
hlt
cmp
aad
cmp
cmp
out
enter
fmull
rcl
sti
call
ljmp
stc
in
clc
loope
lret
mov
xchg
jmp
in
imul
imul
fdiv
xor
ss
ds
in
cld
xchg
mov
ljmp
ror
out
clc
int3
rol
hlt
lock
aam
dec
xchg
test
sti
enter
out
jmp
repz
aaa
cmp
cmp
out
fcmovnbe
aad
fcmovnb
fstp
in
repz
int3
ljmp
lock
cmc
adc
leave
loope
into
xchg
out
ljmp
iret
enter
aas
repnz
cmp
test
leave
out
test
sbb
into
fisttps
leave
rol
out
std
std
call
cmp
jecxz,pt
mov
cli
hlt
int3
stc
loopne
movl
hlt
hlt
cmp
aas
cmp
loope
loope
ret
test
xchg
aad
icebp
rcl
cmp
leave
in
cmp
cmp
fcomp
cmp
fsubp
out
fimull
into
in
into
cli
div
into
addl
ret
jecxz
out
or
sub
hlt
ror
shl
fdivp
clc
into
cmp
cmp
hlt
fyl2xp1
int
fisttps
loop
stc
leave
cmp
jmp
aad
xor
out
out
repnz
repnz
mov
repnz
leave
out
cmp
call
lret
cmp
in
ret
in
fistpll
lock
loope
xchg
call
lock
sub
jmp
lock
rol
jmp
hlt
sti
std
jmp
jmp
loope
ror
loopne
fsubr
std
lret
sarb
jecxz
aad
repz
in
ds
mov
lock
fsubrp
xor
call
rcl
aam
xchg
sbb
xchg
loopne
out
xchg
in
lret
xor
xor
cmp
neg
shl
lock
cmp
int
mov
cli
xchg
lret
cld
out
cs
rol
ljmp
repz
cmp
in
out
fisttpll
cld
mov
fcmovne
in
jmp
fldz
fmul
loope
out
fcmovnbe
addl
repnz
rol
xor
fcmove
fcomi
int3
sarb
into
shl
aad
lret
enter
xchg
in
repnz
lock
aad
or
aad
ds
int3
call
mov
fidivs
in
xor
cmp
cmp
aad
sbb
jecxz
add
cld
hlt
inc
cld
out
xchg
xchg
in
lret
shr
sti
ss
fdivp
not
iret
add
test
idivb
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
fs
shlb
jl
add
shl
cld
into
fcmove
mov
aad
cmc
iret
in
sti
clc
in
fidivrl
cmp
aam
fcmovb
aam
rcl
enter
xchg
repnz
fmul
out
in
cmp
shr
jmp
jecxz
lret
test
int3
cld
ret
fsubrp
ret
sti
cmp
out
fldl
rolb
jmp
in
cmp
rol
ror
loop
cli
sar
fxch
xor
in
fildl
aad
loopne
mov
test
in
loopne
in
sar
cmp
rcr
test
lock
in
call
repz
int3
shrb
bnd
roll
int
in
cmp
loope
fcomp
into
fucom
loopne
call
xor
leave
rol
in
div
ret
out
cmp
fcmovnu
and
in
out
cld
hlt
xor
cmc
jmp
fmul
cmp
rcl
stc
stc
in
hlt
mov
fucomp
fcmovu
aam
xor
out
iret
in
ss
fnop
cmc
xlat
cmp
in
cmp
fstp
rcr
xlat
mov
xchg
jecxz
int3
lock
mov
test
shl
out
sti
out
leave
mov
lock
int
jecxz
jmp
leave
enter
repz
out
fldl
xchg
mov
xchg
xchg
leave
ret
aam
xor
out
cld
loopne
rcr
ffree
fmuls
cld
mov
jecxz
rcll
repnz
fidivs
lock
fdivr
aad
std
jmp
out
fdivrp
cld
mov
int
jmp
call
repz
out
cli
clc
clc
loop
xchg
loope
call
jmp
aaa
in
shll
aad
fidivrs
sar
ret
div
loope
lds
ror
test
out
lret
lock
in
out
lret
aam
loope
div
ret
div
int
cld
fxch
xchg
int
jmp
into
call
in
cmp
out
add
rcl
lret
stc
cli
nop
loopne
xchg
das
jmp
fcmovnb
in
call
cmp
cld
fstp
sti
fsubp
std
test
call
out
out
std
lret
loope
xchg
addb
lea
and
hlt
repz
ljmp
std
rol
leave
cld
aam
loop
xrelease
icebp
into
fnclex
repnz
loope
fnsave
clc
mov
cld
sbb
ljmp
out
ljmp
cmpl
std
mov
mov
mov
hlt
repz
hlt
fdivr
aam
xchg
cld
loopne
fucomp
fsub
ret
call
in
enter
lock
cli
aad
adc
lret
fmuls
enter
call
in
in
stc
aas
cmp
cmc
fsub
fdivp
std
fsubr
out
or
out
out
hlt
repz
xor
int
aas
call
iret
repz
test
out
loope
loope
xchg
out
ror
repnz
jecxz
xor
repnz
out
cmp
cli
aad
xlat
cmc
ret
mov
in
sub
in
leave
les
leave
fsub
out
clc
clc
in
stc
stc
sarb
loopne
test
aad
sbb
testb
xchg
loop
rcr
cmp
cs
ds
cmp
shl
aad
test
xchg
mov
ljmp
pushl
icebp
in
call
cmp
fcomip
fmul
in
rcl
xchg
jmp
test
leave
fstp
jmp
call
idivl
ror
fadds
aam
rcr
clc
fsubrp
decb
lret
xor
xor
into
std
in
xlat
in
in
repz
repnz
loope
cld
fmul
repnz
xlat
into
icebp
shr
fdivl
rol
xlat
lds
xchg
ds
loop
mov
repnz
repnz
cmp
cmp
into
mov
fstp
in
out
fmulp
int
icebp
jmp
hlt
aaa
ret
in
xor
jmp
lock
jmp
stc
test
fiadds
rcl
iret
iret
enter
cmc
ds
sti
fcmovnb
adc
test
in
leave
out
adcl
loopne
xor
fst
out
cli
out
xlat
cmp
fdivrp
test
mov
vpcmpgtd
mov
add
ret
add
aam
rcr
fcmovb
mov
fstpl
pop
in
stos
sub
jg
cmpsb
add
out
stc
loopne
xlat
int3
int
repz
out
cmpb
cli
loop
fsub
vpmacssdqh
jmp
or
and
call
stc
cli
repz
test
in
les
xlat
sar
fnstcw
fcom
xor
test
roll
int
sub
cmc
out
shr
loope
jmp
cmp
cmp
int3
in
fiadds
sar
rol
out
xchg
imul
clc
divb
adc
ret
rol
fiaddl
out
jmp
ret
out
stc
lock
cld
idivb
cmc
testl
iret
aad
iret
shr
neg
cld
rcr
xchg
in
rorl
std
int
jmp
xor
ret
out
sti
xor
out
shl
ret
mov
sbb
nop
int
loopne
in
ds
ljmp
cmp
incl
fsubp
mul
lock
call
iret
loopne
xlat
int3
cmp
cmp
in
std
ds
clc
cmpb
repnz
fsubp
mov
lock
xor
sar
shl
cmp
call
out
jecxz
addl
aaa
rol
in
cmp
shl
stc
fld
adc
out
sbb
loopne
filds
enter
xlat
hlt
cmp
shl
in
idiv
jmp
test
lret
jecxz
icebp
cld
cmc
out
ljmp
cmp
cmp
in
loopne
aas
rolb
cli
addl
repz
lock
iret
out
clc
aas
loope
iret
stc
in
incl
mov
xchg
loope
add
jmp
int3
into
in
cmp
cmc
in
repnz
cmc
repnz
aad
mov
fld
xlat
icebp
aaa
stc
lock
cmp
fiaddl
loop
aad
lret
out
mov
rorb
hlt
xor
std
iret
xor
into
cmp
iret
loopne
loope
out
shl
out
out
into
sub
in
out
lret
clc
xlat
aam
vshufps
out
loope
in
iret
addb
call
enter
in
iret
aam
shl
out
fimull
out
jmp
leave
aad
lock
sti
ljmp
sbb
ret
ror
in
out
ror
call
out
aam
sarb
fcmovnb
loopne
cmp
lds
jmp
and
in
out
enter
jmp
cld
lock
lret
ret
jmp
xchg
loop
sub
xlat
fdivs
lret
aaa
ss
fucomip
cmc
loope
repnz
test
xchg
jmp
leave
cli
iret
iret
aam
shlb
rcr
cmp
lret
fcmovnbe
fdivrl
imul
lock
test
out
mov
icebp
ljmp
int3
xlat
ror
div
repz
lds
call
cli
repz
in
stc
cs
fucomi
call
cmp
roll
fildl
decl
lret
xor
out
in
jmp
xlat
inc
std
std
fucomp
out
mov
xor
xor
xor
lret
cld
stc
adc
leave
fldl2e
in
movl
out
vpmovmskb
call
xlat
iret
cmp
mul
les
int
loop
rorl
ret
idiv
cmp
lret
aam
cld
fdivrp
lock
clc
repz
test
cld
out
cli
enter
ss
jmp
fnstsw
iret
fdivr
int
rcr
and
clc
addb
out
test
xor
ror
xor
xor
lret
fcmovu
call
in
repz
lret
sti
mov
mov
repz
cmp
xor
cmp
stc
xlat
neg
repz
aad
add
and
in
out
in
int
enter
jmp
loopne
shr
xchg
fcmovu
out
loope
jmp
and
enter
call
ljmp
in
sti
repnz
cli
fstp
lock
ret
shr
in
lret
fcos
std
cmp
icebp
incl
loope
mov
mov
int
ljmp
sti
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
lret
movsb
imul
add
leave
sti
ror
aas
shr
aas
loope
testl
in
xlat
in
cli
ror
push
cli
hlt
fptan
fbstp
aad
rcr
mov
out
int
fcmovu
xchg
shlb
mul
stc
hlt
xor
out
cmp
out
filds
enter
mov
out
repz
in
xor
jmp
fpatan
hlt
hlt
aam
adc
cmp
jecxz
in
fucom
test
int
lock
ret
fcmovne
cli
int3
cmp
cli
ds
inc
jmp
repz
iret
out
out
aam
leave
sti
fucomp
fdivrl
int3
in
sar
faddp
ret
xchg
test
xchg
jecxz
cmc
icebp
jmp
std
clc
fcom
aad
ljmp
int3
rolb
jmp
icebp
lret
cmp
cmp
rcl
cmp
aad
loop
mov
jecxz
mov
sub
icebp
cmp
call
lret
clc
into
in
icebp
rcr
lock
fucom
shl
shr
sub
xor
in
into
neg
icebp
rcr
cmp
clc
jecxz
hlt
in
xchg
jmp
lret
xchg
fucomp
loope
lret
clc
sti
sub
into
sar
cld
idiv
cmp
div
stc
jmp
fcomp
fscale
fsubp
lock
aam
lret
cmp
repnz
xor
std
cmp
rolb
cmc
jmp
out
lea
xlat
enter
lret
cmc
fcomp
out
xor
out
leave
leave
sti
int3
in
incb
in
lret
aam
xor
int
cmp
xlat
fmul
fdivrp
fimuls
jecxz
cld
or
jmp
in
in
test
lret
call
loopne
loop
repnz
cmp
in
fsts
out
icebp
aaa
fcom
ljmp
ret
in
aam
std
mov
mov
mov
mov
fnstenv
fcmovne
icebp
out
neg
into
fadds
flds
icebp
xchg
in
in
shl
into
std
fdivr
enter
std
fneni(8087
out
roll
shl
in
jmp
shl
ljmp
cmp
into
xlat
lret
repnz
decl
icebp
int3
mov
repz
sti
ret
lret
jmp
stc
cmc
aad
cmp
clc
cli
std
enter
cs
xor
sti
repnz
std
fucom
sarb
fldl
cli
fucomi
cld
into
flds
sarb
ljmp
aas
loope
shl
fldl
jmp
stc
in
incl
test
ss
clc
clc
cmp
sbb
cli
mul
push
leave
test
cld
mov
loop
repz
lret
fnstcw
xchg
mov
rcl
testb
out
xchg
rol
cmp
lock
clc
cmp
lret
jecxz
repz
std
testl
int3
ret
aaa
lret
aam
out
fcomp
leave
ds
loop,pt
loope
icebp
roll
orb
lock
in
cmp
rcl
cmp
fst
clc
rol
fadd
jecxz
ror
lret
iret
jecxz
out
lret
in
repnz
fcmovnbe
cmpb
loopne
ds
idiv
jmp
les
lret
shr
repz
icebp
cmp
shlb
ret
add
xchg
cli
inc
fucomip
mov
lret
test
ss
repz
aad
loopne
cmc
fsub
lock
fsub
enter
out
in
incb
lock
out
into
clc
ss
fsincos
ret
addb
cld
aad
rcl
xor
out
out
lock
repnz
ret
fcmovbe
std
cld
jecxz
int3
mov
popl
enter
out
cmp
xlat
hlt
cli
xlat
cmp
aam
rcr
cmp
cmc
sti
fimull
std
loope
in
out
int3
stc
leave
lret
clc
aam
idivl
cmp
stc
rcr
in
aad
enter
and
xorb
int
shl
lock
out
fildl
les
int3
addl
sub
idiv
ffree
in
enter
sarl
loop
aam
aam
ljmp
sub
xor
enter
cmp
repnz
aas
cmp
repz
std
flds
icebp
xchg
fidivs
cmp
cmc
fcmovb
fst
in
add
jmp
int
ret
fcmovu
add
dec
sti
dec
cwtl
into
outsb
jg
cmpsb
add
cmp
fst
test
int
lret
stc
xor
cmp
out
lret
hlt
test
rolb
mov
out
movl
in
leave
lock
ljmp
into
aad
call
enter
out
in
clc
cmp
rol
cmp
out
in
jmp
ret
icebp
repz
shl
xchg
xchg
call
loopne
xor
ror
xor
xlat
ret
in
test
sub
fxch
and
xchg
in
jmp
lret
int
stc
ds
repnz
cmc
les
ret
decb
cmp
in
fdivr
cmp
hlt
rcl
rorl
lret
loopne
lret
mov
in
xchg
fdiv
sub
jmp
out
fstp
out
cmp
cmp
sar
out
rcr
lret
jmp
mov
test
xorb
call
cmp
sar
ret
shr
cmp
sub
in
out
cmp
push
hlt
sarl
out
aad
sarl
xlat
std
rcl
clc
fsub
jecxz
cmp
fildl
hlt
cld
xor
ret
icebp
cmp
ljmp
aam
fcomip
loope
repz
xor
aam
cli
ror
std
idivl
cmc
repnz
test
clc
fcmovne
clc
mov
aad
out
ljmp
icebp
aad
std
out
iret
or
loop
mov
ret
test
mov
mov
in
int3
ret
in
rcr
leave
fdivrp
out
inc
aam
mov
jecxz
in
fstp
addl
xlat
aaa
cmp
icebp
hlt
hlt
cmp
ret
fsincos
mov
fcmovbe
sbb
xchg
mov
xor
cmp
not
rcl
jecxz
sarl
leave
fadds
out
in
in
xor
cs
int3
repnz
ds
loopne
int3
cmp
ret
cmp
ret
testb
out
call
neg
out
dec
dec
faddp
stc
faddp
icebp
sti
call
int
incl
loop
iret
cs
in
cmp
aad
lret
into
aas
sti
cli
out
into
repnz
cmp
out
test
shr
sub
xor
test
xlat
cmp
out
sar
les
neg
call
cld
and
shll
out
aam
cmc
cld
fdivr
incb
std
mov
leave
ljmp
call
xor
cmp
incl
sti
mov
fcoms
cld
lret
stc
aam
in
stc
idiv
ljmp
xor
out
in
hlt
std
stc
mov
out
in
shl
xor
out
cmp
call
int
ret
rcr
sti
loopne
sti
popl
in
out
xor
loop
sti
xor
repz
ret
iret
loopne
xchg
cmc
mov
adc
loope
in
fldl
loop
xor
mov
out
hlt
in
shl
fadd
stc
cld
std
fadds
fdivl
ret
in
jmp
cmp
in
repnz
and
mov
jmp
orl
ljmp
fldln2
fucomi
out
decb
orb
lret
out
xor
clc
stc
std
sti
imul
cmp
out
addl
cmp
aad
fsubp
shl
out
cmp
test
cmp
shl
cmp
int3
iret
int3
lock
enter
xor
cmp
xlat
into
and
fprem1
shl
xor
cmc
loopne
call
fucomp
xor
out
out
cli
into
lret
div
repnz
cld
out
test
fptan
div
out
sub
xchg
shl
in
jmp
das
xor
cmp
icebp
cld
rcl
out
aad
neg
aam
fsin
lea
mov
cli
repnz
out
mov
cli
xor
int3
xor
aam
icebp
shl
lret
in
call
in
xor
enter
leave
out
lret
ret
clc
addl
xlat
orl
cmp
xor
sti
enter
cld
not
cmc
ret
decl
enter
repnz
jmp
sti
call
addl
xchg
xchg
rorl
rcl
aad
call
cld
fnstsw
sarl
mov
loope
test
jecxz
nop
imul
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
cmc
scas
mov
jl
add
lret
hlt
shl
in
xlat
sti
call
cmp
call
out
mov
xchg
repnz
jmp
xlat
sar
iret
shl
rcr
test
test
std
les
clc
icebp
xlat
aaa
iret
rcr
int
clc
into
cmc
xlat
cmp
sar
rcr
orb
filds
leave
aaa
hlt
jmp
int
cmp
out
cmpl
test
out
sbb
xchg
decb
std
icebp
jmp
cmp
loope
in
std
fimuls
jecxz
jecxz
xchg
leave
loopne
xor
into
cld
cmc
jmp
clc
jmp
roll
rol
mov
lret
iret
in
ror
xor
hlt
ffree
fmul
hlt
in
into
clc
jecxz
cli
jecxz
stc
fdivr
jmp
fucomip
loopne
cs
jecxz
xor
fcomp
ret
adc
xchg
loopne
xchg
sti
movl
xor
xor
test
ds
ds
cmp
jecxz
aam
neg
sti
enter
rcl
hlt
out
lret
aad
shr
aaa
lock
fprem1
loop
aam
les
fdivrp
fcmovbe
jmp
ret
das
neg
cmp
in
fucomp
xlat
lret
fdivr
in
adc
incl
repz
int
aam
out
rcr
fcomi
call
rcr
lock
ret
out
out
out
cmp
jmp
std
out
shl
rcl
aas
repz
cld
mov
xchg
fdivrp
fsubp
int3
loop
jmp
out
sbb
jecxz
ret
jmp
stc
clc
loope
xchg
icebp
jmp
test
in
hlt
sub
in
xlat
ds
xlat
iret
fmulp
fdiv
ret
loopne
in
in
out
call
jmp
enter
jmp
hlt
not
not
loope
sar
fsubr
out
iret
ficoms
sub
out
ror
dec
stc
out
cmp
and
in
mov
aam
cs
out
loope
clc
lock
in
cmpb
cmc
lock
mov
in
cld
test
mov
int
xor
sti
lret
ror
call
stc
clc
std
cld
cmp
out
mov
fcoml
fidivs
hlt
aam
sti
cmpb
iret
cmp
cli
faddl
jmp
out
repz
rcl
iret
repnz
repnz
out
clc
loop
out
inc
xlat
mov
xchg
repz
out
lret
out
into
cld
jecxz
ret
sub
stc
aad
fmull
lea
stc
shl
xor
xlat
lret
aam
loopne
ljmp
jecxz
test
into
loope
aaa
cmp
icebp
aam
enter
into
ds
ret
cmp
ret
xchg
xlat
ljmp
int
aaa
xlat
xor
hlt
div
xor
lret
int3
cld
out
out
loopne
in
cli
xchg
out
in
loop
repnz
xor
call
sar
or
fld
loop
orl
faddl
fdivs
ror
cmp
xlat
loop
xlat
jmp
ror
shl
nop
in
cs
jmp
shr
fstp
ss
out
lret
lret
cli
into
test
cmc
jmp
out
lea
clc
cli
hlt
les
in
in
int
out
out
rorb
xor
std
lret
xor
repnz
aaa
ljmp
cmp
cmc
sti
aad
incb
xchg
sbb
out
xor
xlat
icebp
jmp
ss
leave
fdivrp
iret
int
xor
cld
stc
test
ds
in
leave
sbb
xor
fptan
xor
iret
ljmp
iret
xor
loope
mov
lea
mov
ror
jmp
stc
xor
int3
hlt
rcl
sti
cmp
xor
stc
jmp
sti
out
cmp
in
repz
xor
dec
cmp
xor
repnz
stc
lock
lds
in
into
xchg
and
mov
hlt
enter
shl
fadds
mov
cld
in
xlat
loop
fcmovnbe
in
sarl
call
in
test
in
incl
rcl
cmc
lret
hlt
leave
not
aam
cmp
repz
xor
bnd
xchg
fisttps
xor
aaa
lds
test
decl
add
mov
add
add
rcl
rcl
aad
xchg
mov
in
clc
pusha
or
mov
add
int3
cmp
loope
out
cmp
cli
sar
add
cld
out
lock
aas
repz
into
lret
lret
into
cmp
aas
add
jmp
cmp
test
int
iret
shl
xor
cld
cmp
out
or
fcomip
fiaddl
xchg
jmp
mov
xor
fucomip
enter
test
test
loop
sbb
ret
in
out
xor
out
rcl
jmp
fcomp
out
iret
sti
in
sti
std
leave
jmp
out
repnz
xchg
sub
in
into
cmc
xlat
fistpll
sti
int3
loop
loopne
out
idiv
orb
jecxz
repz
rcl
fcmovbe
shl
loopne
jecxz
in
shr
xlat
clc
cmp
in
cmp
xchg
test
hlt
int3
ret
in
std
jmp
loopne
rol
out
test
addl
out
out
loope
fdivp
shl
repnz
cmp
dec
jmp
shr
ret
ret
fldl
ljmp
addb
int
repz
hlt
shl
dec
loope
cmp
lret
shr
in
jecxz
nop
int
jmp
xor
vpaddq
rol
int3
loop
aam
testb
test
loopne
jmp
fmulp
into
xlat
ret
in
cmp
sar
iret
iret
shl
movl
in
mov
stc
repz
xor
ds
rol
test
xchg
and
mov
sub
cli
enter
sbb
icebp
repnz
cmc
icebp
cli
clc
lea
out
aam
in
repnz
clc
aas
imul
rcr
aad
ljmp
cmc
shl
ret
xlat
out
fdivs
xor
aam
sbb
cmp
test
stc
cli
addl
aaa
aam
shl
cmp
int
int3
fdivrl
lock
cmp
test
aad
jmp
std
out
mov
rcr
imul
call
std
call
repnz
sti
les
leave
xchg
rol
jmp
cmp
enter
aas
hlt
xlat
std
aad
shl
fisttpll
jmp
out
shl
xor
lret
rcl
hlt
ret
rcr
out
xchg
fcmovnu
int3
loopne
mov
shl
rcr
std
sti
sti
shl
int3
sub
ds
mov
jmp
xlat
clc
mov
lea
aam
in
aam
aaa
loope
ret
addb
ret
fscale
loope
xchg
out
ror
loop
leave
leave
icebp
iret
lret
out
fcos
in
sti
faddp
out
jmp
incl
call
test
std
fidivrl
clc
cmp
fcmovb
xchg
call
test
mov
shr
test
cli
cli
aam
int
fdivp
std
jmp
loopne
test
mov
out
ss
leave
loop
cmp
cmp
repnz
cld
cmp
xor
idiv
mov
xchg
nop
xor
lret
out
cld
lret
shl
cmp
stc
fcmovu
lret
sbb
in
mov
hlt
aam
mul
cmp
lret
cld
jmp
out
cmp
xlat
sti
fisttps
xchg
lret
xchg
into
std
repz
cs
std
cmp
xor
xor
sti
clc
icebp
shl
out
addl
loopne
lock
in
xor
sarl
in
sbb
jecxz
rorl
in
fcmovne
fsubp
out
stc
int
xor
vshufps
int3
aam
cld
ret
test
in
test
jmp
fisubrs
stc
ss
repnz
repnz
fiaddl
test
rcr
call
fcmove
loope
cld
xchg
or
in
int3
idiv
lock
aas
sarb
out
aam
in
stc
adc
sti
fcmovu
repnz
aad
shll
jmp
cmp
cmp
aad
repnz
cmc
cld
loop
mov
sti
cli
leave
cli
nop
xchg
rcr
fdivp
clc
shr
cmp
xlat
cmp
rcl
cmc
aam
rolb
fcmovne
std
enter
cld
loopne
in
stc
fucomi
vpsubd
lret
ret
jmp
lret
idiv
fimuls
xor
ret
xlat
icebp
fcom
repnz
cmpl
hlt
sti
lds
fmul
test
int
jmp
sarb
into
shl
aad
mov
cmp
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
push
nop
js
jl
jl
add
out
cmc
in
cli
loope
jecxz
mov
loope
aam
shll
cmp
jmp
icebp
ret
cmp
icebp
shl
fdivrs
xchg
fcmovb
loop
xchg
fidivs
shl
cmp
repnz
flds
ret
in
xchg
rolb
lret
int
shl
out
adc
incb
lea
jmp
xor
clc
fcmovne
fidivrl
cmp
stc
fdiv
orl
les
mov
enter
clc
in
icebp
cmp
cmp
sti
rolb
add
mov
jmp
shr
cli
cmp
aam
repnz
std
ret
aad
ret
loop
cmc
inc
int
mov
xor
in
ror
aad
fidivrs
test
sar
xlat
ds
in
xchg
in
shll
aad
repz
cmp
hlt
xor
stc
cmp
aad
mov
aad
testb
ficoms
call
lock
xor
repz
faddl
cmc
sub
iret
into
aad
xor
lret
incl
inc
xchg
fildl
lret
jmp
out
ss
jmp
enter
into
ds
faddp
fildl
lret
int
inc
sub
mul
xor
sti
aas
fcompp
dec
idivb
fdivrl
sti
std
and
int
aam
cs
xor
lret
int3
cmp
fnstenv
xlat
sti
rolb
test
ret
lret
sti
addb
int
xor
idivb
in
fucomi
into
fsub
out
cmc
hlt
call
mov
clc
stc
and
loopne
in
repz
leave
xor
in
cmp
out
into
icebp
iret
repz
sarl
out
fdiv
decl
lock
jmp
cmc
int
in
out
repnz
iret
repz
xlat
aam
ret
and
out
test
cli
fcmovnb
int3
loope
clc
repz
inc
testb
test
enter
xchg
bnd
hlt
shr
xlat
out
cmp
out
aas
sti
testb
out
addl
icebp
xor
test
cmp
fcmovb
loop
clc
in
in
ffreep
testb
icebp
cmc
idivl
in
ret
shr
fld
aam
stc
ret
std
xchg
test
mov
jmp
cmc
out
cs
xor
not
std
into
xlat
cld
loop
test
leave
loopne
fcmovne
clc
and
loop
ret
fdivr
lret
fnstsw
jecxz
rol
fsubp
mov
cmp
leave
mov
aam
enter
icebp
cmp
enter
repnz
cld
ror
cmp
addb
addl
std
stc
lock
out
lret
clc
cli
sti
jecxz
les
pushl
xor
aaa
out
test
stc
shl
cmp
loop
in
mov
into
enter
lret
in
ret
cmp
idivl
lret
cli
cld
stc
test
shl
loope
fimull
iret
xorl
enter
std
jmp
ror
flds
orb
mov
jmp
jecxz
cmp
cmp
jmp
fstpt
cli
icebp
loope
ret
loope
jmp
loope
lea
jmp
imul
aas
lock
ret
test
sbb
jecxz
mov
out
jmp
mov
jmp
cmp
icebp
iret
cmp
shl
shl
mov
div
xchg
in
xor
out
icebp
shl
lret
fsubrp
cmc
iret
icebp
into
fcomip
out
clc
lock
fsub
test
jmp
rol
sub
xor
out
test
cli
sbb
test
int3
in
std
call
cmc
sub
sub
sti
aas
loope
fsin
shl
repz
stc
add
lock
fdivp
add
fdivs
lret
repz
xor
ds
addb
orl
ror
shl
xor
not
cmp
int
hlt
sar
cmp
sti
test
ljmp
xlat
div
in
out
enter
ret
in
mov
fucom
vpavgw
iret
out
ss
jmp
xor
cmp
xor
shl
test
idiv
out
in
mov
xchg
bnd
cmp
lret
sar
divl
mov
mov
stc
jmp
int
sbb
test
adc
xor
clc
xor
cmp
fdivr
loope
std
xlat
not
jecxz
fcomp
mov
test
in
int
call
shl
cmp
call
fsubp
jecxz
xchg
jb
add
add
add
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rclb
add
jge
jl
iret
in
stc
jmp
int3
out
mov
incl
ljmp
aad
rcr
out
cld
hlt
mov
cli
sti
out
out
iret
nop
mov
stc
xor
fldl2t
int3
out
loope
lret
fdiv
ret
std
sar
xlat
in
hlt
fildl
xor
int
aaa
int3
into
xor
cmp
ret
sar
adc
lret
sti
mov
repnz
fsubr
int3
out
cmc
cmp
div
repz
roll
int3
xchg
mul
cs
jmp
repnz
fcom
cmp
xchg
idiv
add
sti
loopne
call
int3
repnz
fcom
fnstsw
xlat
sti
enter
ret
test
fsubr
leave
enter
cli
loope
lret
iret
fucomip
cmp
cmp
fnstsw
enter
out
sti
add
mov
testl
out
ror
aaa
xor
lock
sbb
loope
call
fisttpll
jmp
in
out
repz
into
in
out
rcr
loop
int
jmp
loope
xchg
aad
fsubp
ljmp
rcr
rcl
test
into
and
xor
clc
shl
ror
xlat
jecxz
sti
jmp
in
ret
aad
adc
fmuls
out
mov
icebp
in
clc
lret
lret
fxch
std
ret
ret
ljmp
cmc
xchg
cs
rol
out
cmp
fcmovnu
sti
in
jecxz
rcl
orb
into
test
aaa
aad
iret
sti
cs
iret
cld
icebp
repz
lret
mov
cmc
call
int
int
fnclex
cmp
xor
cld
loope
int
in
out
addl
mov
stc
sarl
xor
out
mov
mov
enter
call
loop
sub
fpatan
clc
sbb
rol
mov
clc
xchg
xchg
call
enter
in
int3
cmp
leave
in
in
fidivrl
shr
inc
out
jecxz
out
clc
xchg
mov
jecxz
loope
das
lds
fadd
jmp
iret
hlt
shl
add
orl
clc
xor
fucomip
into
push
push
leave
rolb
jecxz
xchg
sub
sub
repz
enter
in
cmp
lock
cld
in
in
in
loop
icebp
shl
ss
out
out
iret
int
int
lret
inc
cmp
les
ret
rcl
rcr
shlb
div
enter
in
aam
repz
in
bnd
lock
nop
out
xchg
out
in
cs
in
sar
ss
fcmovbe
sar
test
clc
xchg
mov
nop
xchg
repz
hlt
cmp
out
clc
cmp
test
test
fcom
fisttpll
cli
icebp
mov
in
shl
in
clc
cld
aad
hlt
cmp
icebp
jecxz
out
jmp
xchg
rcr
xchg
hlt
out
jmp
int3
xor
fidivrl
sarl
in
cld
xchg
sti
and
lret
int
fsubr
call
xor
sarb
shr
jmp
cmc
lret
rcl
icebp
mov
repnz
int3
enter
mov
iret
lret
xor
ret
cmp
out
aam
shl
ds
clc
std
adc
mov
test
jmp
test
faddp
repnz
xor
repz
clc
shr
cmc
test
sti
idivb
repz
sub
in
lea
out
hlt
cmc
out
cld
icebp
stc
sarb
aas
fildl
enter
jecxz
out
int3
xchg
cs
cld
in
cmp
fdivp
ret
fcmovbe
addl
out
shl
cmc
cmc
ljmp
sar
std
out
sarl
xchg
hlt
sti
sub
icebp
mov
xor
xlat
xor
jmp
stc
out
aad
rcl
out
clc
xchg
iret
icebp
in
mov
xor
rcl
fidivrl
cmp
jmp
cmp
adc
lds
ret
std
iret
fadd
loope
xchg
jmp
int3
clc
lret
adc
rcl
rcr
xchg
stc
xchg
lock
in
xchg
loope
out
out
int
int3
aam
fidivrl
cmp
std
and
aad
sti
fdivp
jmp
xchg
xor
iret
cmp
std
sti
repnz
aam
jecxz
lret
testl
xchg
loope
in
lret
lret
aaa
ss
lret
sub
jecxz
call
xchg
fistl
repz
cmc
call
call
call
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
mov
jge
jl
push
ret
adc
testb
jmp
xor
loope
fcmovnbe
cmp
repnz
neg
ds
hlt
cmp
ds
xlat
out
sub
out
mov
shl
jmp
cmp
clc
aad
ret
xchg
mov
addb
mov
cld
mov
repz
ljmp
out
neg
clc
test
aas
stc
repz
loop
loope
mov
sub
leave
cli
fcmovne
fsub
cmp
call
fcmovne
fsubr
clc
decb
repz
int3
out
fcmovnu
icebp
xor
loope
jecxz
lds
mov
mov
shr
call
lret
xor
fdiv
sti
rcr
lock
in
loope
test
jecxz
aad
cmc
int3
xor
jmp
cmpl
in
rcr
icebp
leave
loopne
fucomp
add
test
fsubrp
rcl
aam
fcmove
incl
loop
aas
fsub
fld
xor
in
mov
icebp
repnz
rcl
out
cmp
fsubr
aas
aad
shl
mov
ljmp
in
ror
repz
fdivrl
icebp
fildl
int3
loop
jmp
int
xor
xor
lret
ds
jecxz
xlat
xor
cld
leave
rol
cmc
xlat
in
loopne
mov
rcl
out
out
xlat
jecxz
fxam
in
in
cli
testl
jecxz
sub
test
shl
xlat
in
in
clc
cmp
in
loope
test
clc
cmp
stc
xchg
xchg
jmp
jmp
out
int3
shl
hlt
fscale
fld
xlat
int
mov
mov
lea
out
cmp
jmp
repnz
ljmp
rcr
mov
out
clc
icebp
iret
repnz
cmc
aaa
rcr
std
into
lock
loopne
orb
cli
jecxz
out
icebp
aad
repnz
in
xor
cmp
lret
lret
fildl
in
loop
mov
int3
fcomip
test
aad
repnz
lret
fnstsw
out
ds
loope
fcmovnu
repnz
call
out
shl
in
lock
lret
fnsave
int
ljmp
ret
jmp
sarb
icebp
movl
lds
lret
in
aas
clc
fistpll
cld
jecxz
sti
and
ljmp
sub
clc
sti
rcl
fcomp
repz
fiaddl
cmc
loopne
loopne
in
faddl
int
icebp
hlt
xor
cmp
cld
in
cmp
cli
fsubr
into
xlat
test
xlat
stc
out
movb
icebp
xor
int
lret
cmp
rcl
cli
cmp
mov
cmc
movl
in
shl
ljmp
cmp
aad
enter
cld
fstp
loop
out
icebp
jmp
stc
aad
fcomip
cmp
fdiv
cld
adc
cmc
movb
jecxz
out
out
jmp
out
in
cmp
cs
cli
aas
sarb
fsubp
out
clc
ds
sti
cld
int3
mov
xchg
in
out
cs
cmc
out
ss
stc
ljmp
ffree
jmp
lret
in
iret
lock
rcl
cs
ret
fmul
stc
into
into
sarl
cmp
roll
mov
loope
mul
xor
jecxz
leave
sti
ss
cmp
out
lock
stc
jmp
xor
aam
xor
leave
out
test
ret
loopne
aas
enter
fadds
addb
cli
cmp
shl
aas
sub
or
fsubp
out
fdivr
mov
jmp
cmc
int3
ds
loop
sbb
rcl
ljmp
roll
in
jecxz
jmp
repz
repnz
cmpb
leave
and
into
enter
les
jecxz
divl
into
aas
test
fdiv
mov
lret
call
fdiv
in
leave
xor
int3
cmp
cmp
cmp
fucomp
fdivrp
xlat
jmp
roll
mov
cld
aad
not
into
clc
adc
jecxz
lock
rorb
lock
aaa
jmp
fldl2t
fcmovnu
shl
cmp
loopne,pt
xchg
mov
cmp
call
aam
hlt
out
rcl
cld
cli
lret
incl
jmp
sar
jecxz
addl
int3
clc
ret
into
cld
cmp
fnstcw
rol
sub
dec
and
mov
leave
int3
clc
leave
xor
fcom
stc
loopne,pt
xrelease
add
movl
jmp
movl
jmp
xlat
enter
enter
xchg
rol
add
jl
add
xlat
and
frndint
jmp
loope
rclb
loop
sti
lret
cmp
xor
fdiv
roll
loopne
xchg
mov
jecxz
xor
cmp
in
std
aas
adc
rcr
loopne
call
into
fst
in
imul
ret
divl
aam
std
iret
sarb
repnz
sbb
incl
out
xchg
aad
ds
in
int3
cmp
jecxz
int
out
out
in
in
xor
icebp
call
into
cs
vpmulhw
cmp
cmp
sti
xlat
jmp
rorb
imul
ss
aad
cli
enter
cmp
faddp
xbegin
mov
xchg
and
mov
ret
fsubrp
aaa
aam
fcmove
rcl
loope
in
aas
icebp
rcr
mov
fsub
out
fsub
shl
icebp
shll
aad
cs
aaa
cmp
repnz
loope
int
addb
in
push
loop
nop
fimuls
ret
xlat
aad
cli
out
shr
repnz
aam
leave
rol
ret
in
test
int3
xor
cmp
in
jmp
cmp
cmc
loope
ds
clc
stc
in
lret
cmp
mov
mov
enter
xor
aas
xlat
in
ret
test
xor
cld
call
stc
int3
fucompp
out
loopne
repnz
rcl
fcmovbe
cld
ljmp
fucomip
hlt
in
mov
cld
cld
in
fsubr
int3
filds
in
xor
xlat
dec
adc
cmc
aam
ror
and
shr
in
sub
int3
xor
ds
lret
fdivrp
shl
rol
xchg
xlat
call
in
mov
aam
shl
lret
clc
in
cmp
out
aam
fistpll
aad
fucom
movl
test
jmp
in
into
shl
dec
std
jmp
lock
jmp
lea
out
mov
int
lock
icebp
ljmp
in
lock
loopne
flds
mov
ljmp
xlat
aad
repz
sar
loope
aas
lds
xlat
in
jmp
test
loopne
in
cmp
aam
fcom
roll
out
fadds
int
loop
nop
aaa
in
lret
fcom
ss
cmpb
ret
fsin
mov
jmp
ret
cmp
ror
xor
stc
cmp
cmp
cmpb
fsubrp
aam
fcmovne
hlt
xchg
out
lret
out
cld
jmp
ss
enter
stc
iret
div
shr
test
in
cmp
rcl
in
out
out
vpmaddwd
sar
cmp
cmp
jecxz
hlt
or
xchg
test
ficoms
rcr
lret
ss
xlat
lock
int
shl
in
std
faddl
fiadds
in
aad
vpsubusw
out
cmc
loopne
rcr
fsubr
loopne
test
jmp
loope
xor
xor
aam
repnz
rol
cmp
imul
rcr
cld
fucom
and
addl
int3
leave
lret
out
ror
fstpt
cld
enter
stc
out
clc
int3
shr
in
xor
divl
sub
ss
aad
iret
rolb
repz
clc
mov
mov
out
out
aam
xor
xlat
cmp
repz
lock
rol
sbb
mov
fisttpll
sub
lret
cmp
sar
addb
aad
inc
clc
out
out
fimuls
out
aam
fst
aaa
cmp
fabs
call
loope
enter
mov
into
loopne
rorl
fyl2xp1
hlt
lret
aas
rcl
sti
aam
cmp
mov
loope
mov
out
jmp
ljmp
hlt
shr
repz
fcmovu
aad
ret
cli
hlt
in
loope
roll
shl
into
ljmp
iret
lock
fst
ds
call
call
std
jmp
cmc
shl
aaa
loop
cli
sub
clc
fucomip
cld
cmp
fcmovnbe
clc
cmp
xlat
decl
mov
fisttps
xor
jmp
cmp
clc
call
test
cmp
fcomp
call
mov
divb
xlat
in
iret
std
hlt
cmp
sbb
idiv
aam
testb
repnz
das
loopne
hlt
loop
clc
xlat
repz
ror
int
std
fdecstp
sar
aam
sti
xchg
leave
out
out
lea
vcmpsd
cs
in
cmpb
int3
loopne
repnz
hlt
lds
loop
repnz
ret
cmp
cmp
aas
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
inc
ja
push
enter
jge
jl
fdivrl
clc
xlat
fdivr
hlt
inc
fildl
sar
leave
aad
enter
sti
ss
call
in
filds
enter
xchg
icebp
hlt
cld
call
repnz
enter
fldl
cmc
imul
and
into
rcll
call
into
stc
pushl
cmp
out
roll
shl
cmc
out
fcmove
std
int3
out
int
out
out
fucomi
into
not
cmp
ret
shl
addl
out
decb
enter
int3
fucomip
cmc
call
stc
idiv
into
rol
cli
mov
int
xchg
xchg
lret
cli
hlt
cmp
sar
stc
fst
cld
ds
cld
and
lret
mov
jmp
jmp
repnz
ljmp
ss
mov
ret
in
shl
in
out
leave
shll
leave
cmp
out
loope
ds
lock
fldl
lock
lret
xor
xor
aas
jmp
ds
fcmovbe
xor
test
in
lock
out
out
cmp
cmp
iret
hlt
fdiv
cmpb
ret
stc
test
loopne
jmp
loope
cld
mov
call
in
fsub
rcl
stc
int
cli
int3
jecxz
fcomi
cmc
xchg
rorb
aam
enter
lret
loope
icebp
shl
rol
faddp
fisttpl
xchg
call
out
in
cmp
cmp
neg
into
loop
loopne
in
clc
ljmp
shrl
xor
aam
stc
clc
leave
in
out
fpatan
aam
jmp
stc
in
mov
clc
out
in
int
call
in
xlat
stc
int
dec
or
aas
loop
loopne
rorl
in
test
call
fsubr
aas
sar
std
cli
out
rcr
out
test
out
in
in
icebp
loope
clc
cmp
iret
shl
jmp
push
rcr
repz
fadd
cli
sbb
xchg
faddl
cmc
call
aad
cmc
cmp
hlt
mov
jmp
lret
sub
lret
int
xor
imul
rcr
addl
test
lret
enter
xor
call
cmp
ds
imul
repnz
sti
sti
int
fiadds
jecxz
lret
jmp
clc
repz
repz
fcomp
in
out
sub
cmc
loop
aam
cmp
fucomi
fcmovnu
test
in
decl
sti
lret
lock
out
lock
shrl
shr
in
cmpl
mov
cli
lret
std
xchg
aaa
in
xor
fstp
lret
out
iret
clc
aas
aaa
sti
xchg
jmp
test
int3
mov
fistpll
stc
xor
lock
stc
aas
add
std
cmp
cld
out
dec
xchg
rcl
leave
shlb
aaa
xor
ljmp
loope
test
fdivr
lea
repnz
sub
call
cmp
int
out
sbb
aad
in
test
lret
mov
iret
aam
ss
lock
fst
mov
enter
stc
mov
out
lea
cmp
int3
fidivl
ljmp
les
cmc
fildl
or
out
shll
in
cli
cmc
repz
fprem
cmp
fdivrp
fucomi
cmc
test
fcmove
test
repnz
iret
xor
cmp
fistpll
shr
xlat
in
cmp
decl
icebp
rcl
xor
repnz
sub
clc
out
aad
out
sar
shl
cmp
in
cmp
xchg
jecxz
aad
out
cmp
cld
shl
std
testl
int
out
sub
xchg
xchg
stc
into
lock
ljmp
loop
out
mov
stc
ljmp
xchg
in
mov
repz
loope
fcom
in
loope
std
jecxz
fcomp
fiadds
fisttpll
repz
hlt
cmp
hlt
fstpt
repnz
idiv
jmp
in
ffreep
fcmovne
lds
out
in
lret
cmp
cli
jmp
iret
test
rcl
add
ljmp
mov
out
out
into
repz
xor
xor
rol
loop
xchg
fcmovu
shr
shr
lret
xor
into
fld
fstpt
sti
rcl
fidivrl
jmp
lret
lea
in
fmul
jecxz
into
rcr
xlat
fisttpl
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
xlat
imul
jle
jge
jl
testb
mov
aad
mov
loop
in
jmp
iret
enter
lret
jmp
fstpt
loopne
out
aam
call
int3
loop
int
aam
ret
xor
jmp
out
test
cld
xchg
jmp
iret
mov
fst
loopne
in
out
in
ss
icebp
cmp
ret
ret
vmovq
loope
out
or
orl
stc
xor
repnz
aad
into
aas
adc
xchg
les
fcoml
lock
cmp
test
mov
ret
nop
in
test
in
into
aaa
sar
int
fprem
lret
out
frstpm(287
fcmovnb
repnz
std
mov
mov
repnz
call
or
ret
aad
hlt
fcmovb
fsubrp
int3
fcos
and
icebp
mov
jecxz
in
iret
out
in
cmc
std
sar
jecxz
cmp
jmp
addb
sub
rcl
ss
cmp
call
cmp
repz
ffreep
fdivp
sbb
call
lock
xor
lret
in
ss
sar
repz
and
aam
mov
int
incb
loop
lret
xor
cli
repz
rcl
fsubrp
fistpll
fcmovne
call
ret
icebp
iret
test
adc
xlat
jecxz
stc
ss
cmp
cmpb
cmp
fcmovu
aas
lock
cmc
mov
loope
xacquire
ret
out
ljmp
faddp
loop
fsub
repz
lret
xor
aam
loop
dec
xlat
shll
fcmovnbe
fidivrl
xchg
in
jmp
in
subb
int
enter
xlat
fistpll
icebp
std
aaa
and
out
fstp
std
out
cli
cmc
jmp
not
out
test
aad
fsubr
addb
out
mov
aad
stc
in
leave
lds
sar
fptan
cld
cmp
iret
jecxz
out
inc
out
loope
int3
xchg
fimuls
divb
stc
not
aad
sar
lret
clc
xlat
ret
les
out
jmp
jmp
lret
out
icebp
cmp
cld
rcr
cmp
into
icebp
out
fcmovnu
adc
mov
mov
shrb
xor
cmp
fstpt
loope
cmc
in
in
roll
ffreep
fyl2xp1
in
sti
popl
in
into
lock
loopne
jecxz
lock
hlt
sti
out
orl
loopne
rol
iret
int
cli
ss
sar
addl
out
out
cmp
xchg
add
loop
aaa
lret
roll
loopne
rcr
repnz
jmp
loope
shl
adcb
rol
cmp
test
ss
test
test
sbb
test
lret
xchg
int
icebp
fcmovb
in
cmp
rol
int
ds
ds
fdiv
mov
in
loop
int3
out
in
fcomip
loop
xor
fdivrs
repz
aam
flds
out
clc
movb
in
xor
loop
out
into
xor
push
icebp
lock
jecxz
testl
in
loope,pn
aaa
call
in
fmul
lret
lock
jecxz
xchg
cli
faddl
in
int3
ret
enter
cmp
ds
xlat
sarl
xor
loopne
fcmovnbe
out
loope
lea
xor
cli
dec
shl
fcmovbe
into
faddp
test
fldl
fcmovnu
mov
out
in
loope
iret
int3
ret
xlat
ljmp
rcr
lock
ret
mov
test
std
cld
lret
mov
cs
cli
aaa
sti
ss
int
ret
sbb
loop
sti
rol
leave
in
mov
xchg
mov
xor
aaa
int3
cmp
icebp
cmp
neg
rcr
cld
ret
loop
cli
test
in
std
fsubr
mov
cmc
fsincos
stc
cmp
repnz
in
repz
out
repz
fucomi
mov
xacquire
hlt
test
cmpb
int3
ret
stc
mov
lret
loopne
test
loope
test
int3
cmp
cld
repz
out
adc
xchg
pop
in
ret
icebp
xlat
cmp
call
iret
jmp
test
fucom
fucomi
in
aam
in
ret
enter
enter
cmp
shl
ret
repz
ljmp
lret
cli
lret
xchg
shl
cs
out
stc
fcom
cmp
rol
ror
testb
test
test
test
rol
xor
xor
int3
cmp
cmp
inc
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
mov
sbb
jge
jl
jmp
and
aad
cli
fcmovnu
in
ret
les
out
sub
das
out
enter
aaa
cli
ss
cmp
cmp
cmc
faddl
out
lret
test
lock
int3
cmp
mul
cmp
xlat
aad
movl
mov
shr
loopne
shl
xor
out
cmp
in
out
hlt
repz
fdivrl
xlat
repz
aam
call
call
aad
ror
sarb
fnstsw
jmp
fidivrl
lock
addb
mov
nop
fists
sub
aaa
icebp
in
out
cmp
aam
call
out
out
out
xchg
xor
fstpt
aas
cmp
rcl
rol
repnz
fdivr
std
sti
in
cli
loop
loopne
call
cmc
call
and
fdivr
fstpt
roll
clc
fiaddl
ffreep
repnz
into
jmp
in
xlat
std
loope
out
test
std
fucomp
in
ret
mov
out
icebp
and
icebp
mov
out
xor
out
icebp
ror
cmp
ror
test
clc
rol
fcmovu
clc
xlat
cmp
sti
xchg
into
xlat
repnz
clc
aad
cmp
cmp
cli
cmp
jmp
shl
jmp
out
in
repnz
aam
in
xor
hlt
cmp
out
xlat
cmc
cmp
and
orl
lret
mov
std
mov
out
rol
sub
int3
out
clc
neg
idivb
loope
in
in
loope
mov
fdivp
jmp
iret
xor
rolb
cmc
aad
ret
stc
sti
hlt
int
mov
out
jmp
in
icebp
das
aam
hlt
cmp
iret
iret
lret
in
shl
in
loop
in
xchg
ljmp
fst
shl
xor
hlt
aam
lret
cmc
repz
cli
leave
mov
lock
repz
call
aam
cmp
out
cld
aam
fadd
movb
sti
loop
loope
call
aaa
out
cmp
loop
out
fldl
in
in
call
and
div
in
int
in
fcmove
rcr
xlat
ds
sarb
call
fisttpl
shl
in
in
int
in
ljmp
xlat
aas
out
xchg
ret
sti
loope
sti
xchg
decb
hlt
cli
fldz
xor
aam
faddp
cmp
ret
imul
fld
jmp
mov
shlb
loop
shl
adc
rcl
int3
push
shl
hlt
fcmove
int3
iret
sti
ret
std
shl
rol
int3
xor
sti
hlt
xor
out
xlat
sarl
stc
loope
int3
jmp
xlat
cmp
aad
shl
loop
repnz
jmp
ffreep
in
cld
cmc
xchg
out
cs
stc
ljmp
incl
loop
mov
int3
mov
in
cmp
hlt
xor
jecxz
jecxz
test
sti
iret
sti
in
cld
mov
jecxz
lret
lock
std
jmp
jecxz
out
rolb
mov
loopne
and
loopne
xor
int
ss
rcl
lock
sti
cmc
test
in
cld
fmuls
lock
aaa
icebp
cmp
cmp
in
clc
out
not
in
fldl
jmp
xchg
xchg
pause
jmp
xlat
leave
ljmp
loope
xor
std
sti
in
adc
fnstsw
std
out
xchg
xor
aad
cmp
lret
testl
hlt
in
loope
icebp
jmp
add
loop
aad
aam
sbb
in
repz
xlat
fcmovnbe
out
testb
or
leave
lret
fsubr
int
xor
rol
ret
out
mov
ljmp
loopne
out
repz
fnstcw
cmp
int3
mul
aas
cld
repnz
int3
dec
lock
les
sti
iret
in
in
cmc
cmp
cli
xlat
cmc
cmp
ds
call
iret
loope
nop
mov
mul
jecxz
ss
cmp
out
rcr
fistpll
repz
sti
lock
fimuls
icebp
loope
std
ficoml
aam
repz
cmp
rcr
icebp
ret
vpavgb
aad
ret
lret
out
jmp
xor
int3
stc
clc
out
ljmp
fxch
sti
vpaddb
incl
in
loopne
in
xor
in
lret
sbb
hlt
enter
icebp
mov
ret
ret
fnstsw
lret
lret
xor
cmp
out
notl
call
xor
aas
jne
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
mov
jge
jl
into
rcl
out
fiadds
clc
in
out
fists
stc
leave
ret
cmp
shr
loopne
orl
std
in
xchg
xchg
in
jecxz
into
lock
jmp
rcr
xlat
rcl
repz
rcl
test
fcmovnbe
ror
ljmp
lock
in
fnstsw
xlat
ljmp
rcl
lret
xchg
sti
mov
xor
jmp
shl
out
cld
cld
addl
sti
int
cmp
in
lret
fmul
in
fmulp
lret
clc
fcomp
sarl
lret
jmp
test
cmc
mov
xchg
mov
int3
mov
iret
fmul
jmp
fadds
icebp
out
imul
sti
enter
out
std
out
ljmp
cmp
rcl
fmul
xor
iret
repnz
cli
jmp
mov
leave
test
in
xchg
int
int3
sti
xor
jmp
in
iret
sti
std
test
shl
mov
mov
sub
div
xor
jmp
std
cmc
fcompp
fcomi
cli
in
cmc
lret
mov
test
in
sub
hlt
jmp
add
repnz
loopne
cmp
ror
addl
in
in
shll
rcr
repnz
cmc
loop
mul
or
ret
xchg
in
rcl
lock
cmc
shl
lret
into
adc
not
loopne
cli
out
mov
and
repnz
out
cld
ds
inc
out
mov
cmp
faddp
in
enter
xchg
xchg
mov
in
sar
in
cld
lret
aad
cmp
hlt
rol
ljmp
enter
aad
lret
sub
out
ss
sti
out
stc
in
in
lock
fdivr
shl
aam
in
fiaddl
xchg
xchg
int3
out
cs
xor
cmp
cmpl
out
cli
fucom
fldl
int
test
lret
xor
jecxz
aam
int3
ljmp
cmp
rolb
mov
into
xchg
popl
ror
enter
repnz
out
repz
cld
loop
ljmp
xchg
cs
call
sar
ret
ds
roll
enter
test
lock
sub
in
cmc
lock
sbb
leave
mov
fdivr
icebp
lea
xor
fnstcw
leave
loopne
loopne
fsubp
rcl
std
in
in
call
incb
test
ljmp
jecxz
sar
out
out
fadd
sti
xchg
cmc
aad
jmp
loop
cmp
aaa
int
ds
cmp
cmc
repz
movb
hlt
repz
out
into
lret
out
sarb
ror
loopne
mov
decl
clc
test
test
out
enter
aas
sbb
out
stc
sti
rorb
std
xchg
out
loope
xor
fucompp
cmc
repnz
shr
repnz
loop
cmp
test
cld
xchg
mov
ljmp
ljmp
aam
stc
mov
nop
ror
xchg
in
loopne
call
clc
cmp
incb
leave
aam
out
int3
test
shr
in
rol
fyl2x
cld
in
ljmp
loopne
ds
xlat
int
out
rcr
mov
nop
int
out
fcmove
iret
test
ds
cmp
mul
fcomip
stc
int3
fisttpl
rol
ljmp
sarb
sbb
and
mov
std
lock
repz
out
into
ret
les
fnstenv
cmp
cld
rcl
shr
shl
mov
testl
aaa
leave
jmp
iret
std
sti
cmp
addl
test
xlat
in
jmp
xchg
adc
aaa
xor
stc
hlt
sti
fnstsw
fldl
cmp
into
in
lock
lret
xor
loope
adc
xor
loop
xchg
xchg
fcmove
fucomi
nop
jecxz
aad
call
shr
cmp
aad
ljmp
cmc
test
call
in
shl
in
rcl
cmp
int3
icebp
shr
cmp
cld
cmc
out
enter
cld
cmp
icebp
mov
lret
fxch
rcl
lret
adc
cmp
fninit
out
addl
cmc
das
out
std
fdivr
leave
ror
rolb
rolb
lret
sti
xchg
int
add
in
xor
repz
mov
incl
jmp
int
iret
rcl
fsts
fs
sbb
jl
add
in
ljmp
test
jmp
fsub
in
leave
roll
shr
xlat
cmp
cmp
cmpl
dec
clc
cld
sti
lea
loope
in
xor
imul
cld
fcmovnu
out
rcr
repz
xchg
mov
in
rcl
out
sub
jmp
cmc
cmp
cmp
aas
sti
int
sti
loopne
adc
not
ret
fsub
sub
mov
int3
fmul
lret
xlat
stc
ror
cmp
idiv
cmc
mov
jecxz
fcomip
xchg
fildl
xor
into
int
in
imul
fst
loopne
xor
rcl
rol
ljmp
mov
shl
xor
divl
cmp
out
lock
not
aad
xchg
jecxz
call
out
leave
ret
xchg
fcmovnbe
sti
iret
aas
ds
aam
test
aas
xlat
in
loop
loopne
repnz
hlt
fcmove
shl
stc
ljmp
xlat
hlt
addl
icebp
xchg
shll
div
clc
jmp
jecxz,pt
cmp
in
cli
sti
test
stc
in
out
decb
in
iret
repz
lock
stc
fmul
adc
idiv
loop
faddl
call
out
imul
loop
jmp
cmp
cld
xlat
test
test
repz
or
out
xchg
xchg
cmp
int3
loop
cmp
icebp
iret
fcmovu
fdivrs
addl
xor
in
ror
fmulp
lret
shl
in
shll
hlt
cmc
shl
hlt
fcom
in
fninit
cld
rcl
div
call
mov
shlb
cmc
sti
call
cld
fdivr
ds
fldl
fmulp
leave
int3
jmp
sub
loope
xor
neg
fxch
cmpl
loope
shl
xlat
mov
jmp
fisttpl
fyl2xp1
enter
in
sar
fdiv
aas
idiv
cmp
aam
mov
ret
std
fdivr
mov
jmp
ljmp
aam
rol
aam
test
call
out
mov
or
aaa
out
ljmp
cmp
lock
test
jmp
hlt
xchg
xor
out
in
ss
fdivr
fstpt
in
cld
out
stc
in
sub
mov
leave
ret
ljmp
fprem1
ret
jmp
fcmovu
loopne
mov
fdivs
in
shr
fistpll
rcl
out
cld
call
int
jmp
out
xor
int
out
std
cmp
lock
lret
icebp
aas
sti
ljmp
lret
shl
hlt
imulb
out
sar
cld
clc
repz
cmp
f2xm1
std
std
mov
std
cli
iret
cli
sbb
aas
repz
push
ljmp
leave
jmp
fmul
lret
mov
cli
adcl
fcmovu
into
fcmovbe
cmc
out
fsubrp
lock
lret
out
movl
shrb
ss
sar
xlat
fcom
fstpt
rcl
into
sti
fstp
rcr
xchg
icebp
fdivr
test
jecxz
in
fldcw
sarb
cmc
lret
aad
rcr
fldl
fsub
mov
adcb
out
cmp
neg
aas
lret
test
sti
loopne
loope
loope
and
or
test
ljmp
fdiv
xlat
in
in
rol
loopne
jmp
fmul
std
fsub
lock
icebp
aam
in
ret
fincstp
out
stc
lock
loop
aas
fisttpl
loop
loopne
loop
xchg
xchg
iret
shrl
hlt
in
repnz
int
lock
jmp
loopne
in
out
fninit
mov
ret
into
out
in
lret
jmp
sarl
in
out
iret
in
fdivr
call
fimull
loop
sarb
shr
out
aas
std
loop
hlt
jmp
in
out
sub
sub
fildll
imul
mov
cmp
rcl
iret
aaa
xchg
cmp
pop
in
test
int3
mov
in
cmp
cs
out
repz
sti
loop
fstpt
test
ret
in
ljmp
xor
ljmp
repz
not
in
lock
call
out
jecxz
cmp
cmc
shlb
clc
ljmp
cmp
test
clc
aas
ljmp
loope
int
ljmp
fcmovbe
dec
sbb
call
xlat
in
jecxz
in
icebp
in
divl
jecxz
xor
cmp
loop
in
ret
mov
fucomi
lock
icebp
loope
shl
cs
inc
test
inc
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
fstpt
into
ljmp
fcmovnu
xchg
idiv
sti
mov
repnz
shr
fucomip
sub
cli
hlt
not
jmp
cmp
sarb
ror
enter
sub
mov
mov
ljmp
cld
stc
out
cmp
sub
shl
fxtract
call
cld
mov
loop
shl
into
out
int3
xor
int3
cmp
loopne
vpsubb
into
adc
xor
aaa
repz
das
test
cli
in
hlt
fnsave
idivb
loop
enter
lret
enter
xchg
xchg
xor
call
icebp
ljmp
xchg
test
nop
iret
sub
xor
out
std
repz
imul
aas
hlt
into
fucomp
xchg
mov
add
popl
int3
shll
repnz
enter
out
fdivrs
sti
ret
std
mov
xchg
fsubrp
in
iret
repnz
xor
in
repz
sti
cmpl
jmp
iret
or
loopne
adc
call
xlat
int
in
out
lock
shl
cmp
mov
nop
mov
call
ljmp
rcl
cld
test
ret
test
cmc
mov
cld
mov
stc
shll
icebp
fldln2
aaa
int
sti
lock
test
loop
incl
sub
out
sub
cld
repnz
sti
out
call
rcr
test
and
in
loopne
out
enter
int
jmp
jecxz
lock
ds
cmc
iret
stc
ds
cli
fucompp
mov
lret
sub
int
out
loopne
cmc
out
fucomp
aam
aad
out
std
in
std
cmc
stc
clc
fucomip
jmp
in
sar
test
ds
ret
repz
repnz
xlat
int3
xlat
cmp
rcl
fstl
in
stc
out
in
fucomp
cmp
fistpll
jmp
fld
cli
lret
lock
not
repz
aas
cmp
xlat
ror
into
loope
out
jmp
loop
jecxz
iret
in
aad
out
jmp
into
in
in
vpmulhw
lds
ljmp
cld
ret
lds
xor
xor
aam
out
aam
addb
call
int
out
xor
xor
loope
std
or
cmp
xchg
lret
fisttpl
mov
int3
icebp
icebp
ret
int
ss
ds
cmp
int3
rcr
inc
vcmpps
leave
xchg
ror
loopne
addb
enter
call
rol
loope
leave
jmp
enter
fmul
int3
cmc
test
hlt
in
xor
cmp
enter
cmp
out
out
fstpt
icebp
addb
jmp
out
xchg
ret
fnop
in
idivb
repz
pushl
std
std
cli
aam
clc
std
fmull
loopne
in
rcr
call
test
stc
cmp
std
hlt
enter
flds
out
or
div
cmp
lock
leave
loope
aad
ret
roll
std
sbb
cld
mov
out
in
cmp
cmp
not
int3
aas
in
cmp
decl
test
lret
bnd
cmp
fxch
xor
fcmovu
ret
test
hlt
fndisi(8087
repnz
incl
sti
jecxz
fdivr
aas
xlat
fcompp
icebp
ror
aam
ret
loopne
cld
int3
addl
sti
repz
in
icebp
iret
loopne
stc
fabs
xor
lret
mov
xchg
fdivr
repz
out
cmp
das
in
jmp
into
jecxz
aam
mov
or
int
xchg
in
out
cmc
xor
sar
jmp
ds
cmp
stc
shl
lret
fdivrp
jecxz
mov
jmp
in
into
fcomi
xlat
lret
into
int
fxch
cmpb
in
in
in
clc
loopne
out
fmulp
xchg
mov
xor
ret
cmp
aad
cmp
loope
repnz
orl
loop
cmp
sti
cmp
mul
test
neg
xchg
testb
xchg
decl
xor
loope
lret
in
clc
aam
xchg
ffreep
xlat
fcmovu
inc
orb
shlb
shr
das
sti
div
hlt
lret
icebp
cmp
ret
xchg
loop
adcb
jecxz
out
out
out
repnz
adc
fscale
out
cli
out
or
loop
out
in
cmp
fsub
jecxz
icebp
loopne
icebp
test
jmp
clc
out
jecxz
repz
shl
shl
xor
jmp
rcl
aad
aad
rolb
push
mov
mov
jge
jl
out
icebp
ljmp
xchg
leave
xchg
clc
leave
xchg
sti
jmp
mov
out
ret
xor
clc
int3
les
std
call
testb
testl
out
stc
aam
xlat
fnstcw
shr
in
aas
jmp
lds
test
loope
rcr
test
cmp
clc
leave
ss
ds
fidivrl
jmp
xchg
call
std
jmp
mul
xor
jmp
mul
ljmp
shl
loop
fucomp
in
inc
adcl
not
cmp
fadds
aam
xchg
mov
cli
xchg
out
call
not
cmp
out
in
icebp
rcr
mov
test
orb
int
divb
ret
cmp
imul
in
enter
loope
icebp
hlt
fdiv
repz
add
out
orl
enter
xor
idiv
in
fidivrs
repnz
repnz
clc
testl
xchg
int3
xor
stc
hlt
fidivrl
jmp
xor
out
sti
shr
test
enter
xchg
jecxz
xor
xor
repnz
cmp
cmp
xchg
mov
out
test
fmull
in
icebp
aam
ljmp
in
idiv
incb
loop
test
loope
into
clc
repnz
fld
fdivr
fsubrp
clc
lret
shr
ret
test
mov
sti
in
loope
jecxz
xchg
loopne
aam
in
aad
std
neg
jmp
rolb
test
int
filds
aaa
aaa
loope
xlat
cmp
enter
sti
hlt
imul
in
loopne
fcmovnb
fsub
sub
test
jecxz
jmp
xor
ss
out
sti
test
incl
test
out
std
ljmp
out
ret
cli
stc
cmp
jmp
loope
rcl
repnz
jecxz
xor
out
xor
xor
fincstp
jmp
repnz
filds
jecxz
jmp
ljmp
leave
repz
xlat
call
out
aam
cmc
into
xchg
lds
out
ljmp
repz
repz
shl
in
cmp
ds
fildl
mov
in
loop
xchg
in
loopne
call
lret
flds
aad
int3
test
nop
fdivrp
call
rcr
in
cmp
sti
cmc
ss
clc
int
in
cmc
lock
enter
clc
hlt
in
xor
xor
ss
std
in
fidivrl
cmc
icebp
out
shr
ret
mov
fildl
repnz
out
cmc
cmp
icebp
fcom
jecxz
cli
cmp
aad
sbb
sti
repnz
out
rcr
in
imul
not
sti
int3
icebp
cmp
cld
out
int
lds
cmc
lea
nop
fldl
divb
in
cmp
cmp
hlt
inc
mov
mov
clc
out
xchg
jmp
out
enter
xor
into
icebp
xlat
fsub
in
in
ljmp
cmc
aam
loop
das
ss
fdivrp
cmp
ret
repnz
idiv
faddp
repz
call
in
ss
lret
lret
cld
std
clc
iret
mul
std
fcmovb
leave
lret
fsubrp
enter
fldl
out
jmp
hlt
cmp
test
test
fmul
lret
mov
ss
rol
out
xlat
aas
stc
aas
stc
rcr
cmp
loop
sti
repnz
mov
jecxz
out
xor
loop
iret
xor
int3
in
sarl
in
lock
faddp
mov
loopne
out
xor
cmp
lret
fsubr
xor
aad
cmp
cli
lock
add
shr
jmp
xor
shl
xor
cmc
std
repz
out
fmuls
std
addb
div
jmp
repnz
lret
fcomip
jecxz
call
mov
rorl
xor
loopne
loop
std
shr
enter
loope
not
sti
sbb
loop
les
adcb
xor
cld
int3
cmp
iret
test
testb
jmp
in
test
not
lret
idivl
fcmovnu
ds
cmp
test
repnz
hlt
push
mov
jmp
cmp
lock
leave
into
rcl
out
addl
mov
clc
into
repz
lret
cmp
int3
in
ret
aam
mov
lret
roll
iret
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
stc
in
hlt
cmp
lock
and
call
cli
mov
xor
sti
iret
cmp
aam
addl
aam
out
or
lock
into
xor
lret
out
xor
aad
sti
loope
or
stc
loopne
repz
sbb
lret
rcl
xlat
ss
cmp
out
aad
idiv
aad
out
cmc
ljmp
leave
jmp
int
shlb
xor
ss
repz
ds
cmp
fdivrp
xlat
in
out
mov
mov
xlat
enter
out
rcl
int
fistpll
fdivr
test
or
in
xlat
clc
xchg
fldl
jecxz
cmp
cli
rcr
jmp
push
jecxz
icebp
sti
test
movb
hlt
into
rol
loop
xor
lret
ds
shl
les
mov
mov
adc
ljmp
cmp
lds
call
out
loop
xchg
hlt
xchg
imul
int
int
ror
repnz
in
push
rolb
xchg
fmull
divl
lret
lret
call
lret
jecxz
stc
sti
sarb
rorb
sti
out
rcll
xor
repz
aad
jmp
repz
xchg
cmc
aad
aas
cli
xchg
repnz
test
enter
call
xchg
cmp
leave
stc
loopne
fiaddl
fdivp
in
xlat
xor
fucomi
fcmovnb
ss
cli
in
cld
roll
rol
out
fsubr
int3
icebp
or
xchg
divl
out
loope
jmp
in
sar
leave
std
filds
leave
add
loopne
lea
xchg
jecxz
lret
sar
fstpt
ss
loope
test
shl
cld
jecxz
out
xchg
loopne
out
sub
ss
cmp
lret
testl
cli
roll
or
in
rol
xor
cmp
cli
sar
cmp
rcl
out
repnz
mov
lret
add
enter
out
aaa
cmp
cli
into
clc
fst
neg
ror
lret
test
enter
out
xchg
fldpi
fsubr
out
repnz
aas
icebp
jecxz
int
cmp
fsubr
fiadds
into
sarb
iret
xor
int3
clc
ss
fxch
std
fiaddl
leave
addb
stc
xor
jmp
neg
aad
cli
in
ret
jmp
sub
mov
cld
call
sub
xor
xor
icebp
fdiv
into
int3
xlat
fnstcw
fsubr
xchg
rol
leave
in
out
test
hlt
loop
in
cs
in
shl
jecxz
call
cmc
faddp
enter
test
out
fdivr
xchg
xchg
imul
int
sarl
ror
cmp
fcmovne
xlat
cmp
cmp
adc
test
mov
fmul
in
loope
aam
loopne
xor
loop
int
out
add
neg
xchg
in
xchg
int3
in
mov
loopne
xor
aad
sti
aad
fmul
cmp
xlat
jmp
loope
in
xchg
int3
ljmp
fucomp
idiv
rcl
stc
leave
div
in
mul
mov
ljmp
rcr
iret
lds
shr
jmp
lret
int3
clc
int
jmp
fcomp
sub
cmp
icebp
rolb
std
idiv
fcomp
cld
test
cld
mul
icebp
shl
not
out
hlt
lret
sarl
loope
jecxz
loopne
out
in
sti
loop
fxch
int
mov
imul
lds
leave
cli
out
stc
call
ret
ret
sti
out
jmp
xlat
out
incl
xor
aad
shl
in
cmp
cli
incb
enter
lret
out
movb
xor
jecxz
xor
cli
leave
shlb
ljmp
leave
jmp
mov
out
icebp
repz
in
icebp
icebp
out
cmp
fsubr
into
cmp
xor
not
lret
leave
fcmovnu
fdivrp
fstp
shlb
xor
cli
cmc
ss
xlat
std
aad
out
cmc
mov
stc
cld
loope
enter
test
aaa
fdivs
cli
fcmovnu
lock
rcl
mov
fmulp
sti
in
loope
stc
sti
iret
call
lock
cli
mul
cli
cli
rcr
add
vshufpd
rolb
mov
xchg
mov
aad
ss
cli
icebp
fdivp
cld
rol
test
jecxz
cld
aas
out
leave
nop
repz
aaa
aad
hlt
aaa
enter
iret
loopne
cmp
mov
xchg
aam
testb
call
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
jg
sarb
jl
add
idiv
shr
fdivl
enter
aad
loop
repnz
ljmp
enter
aam
xor
addb
fdiv
fcomp
test
out
test
loopne
aad
ror
ss
cli
rcl
clc
cmp
neg
fdivr
xlat
fdivr
cmc
movl
fisttps
cmp
xor
cs
aaa
aas
out
fcmovnu
out
hlt
jmp
fucom
test
loopne
repnz
loopne
cmp
into
cli
cmp
shl
or
mov
decb
jmp
icebp
fidivl
shl
lock
in
aaa
fadd
out
testl
in
into
jmp
aam
in
fdiv
out
cmp
loop
sarl
test
test
shlb
das
clc
cli
fistpll
sti
jecxz
int3
clc
cmc
fdiv
lock
sar
mov
sti
out
jecxz
lret
xchg
out
xor
sti
out
into
xor
cmp
fdivp
stc
ret
les
repz
into
hlt
out
ret
leave
fistpll
cld
clc
fiadds
stc
jmp
sti
mov
decb
divb
int
cmp
repz
fcomp
sub
rol
cmc
cli
fcmove
sti
addb
repnz
clc
lock
std
aam
fcmovbe
fiaddl
std
ret
fsubp
adcb
loop
into
out
cmc
hlt
ffree
lock
iret
mov
ljmp
in
cli
rcl
repz
cmp
cld
fcmovnb
enter
jmp
xchg
xor
in
hlt
xor
iret
cmp
repnz
out
jecxz
repnz
fcmovnb
test
lock
sub
sti
xor
repnz
enter
cmp
sbb
or
faddl
nop
xchg
xor
call
into
jmp
cmp
repz
ret
out
mov
xor
into
hlt
std
loope
cmp
stc
aam
mul
loop
mov
mov
lret
jmp
repz
fnsave
jmp
cmp
cmp
in
aam
test
stc
xor
leave
in
aam
loope
out
cmp
repnz
ljmp
rcr
fcomp
stc
out
fimuls
cs
imul
xlat
xor
cld
int
aad
ret
fadd
aas
incb
mov
in
rcr
fstp
shr
fsin
in
call
cmc
ret
cli
enter
loop
mov
out
cld
xchg
mov
loopne
int
xor
cmc
leave
enter
cli
fst
div
enter
test
dec
mov
iret
xchg
lret
cs
aad
lock
cli
idiv
fidivrl
aam
inc
shr
test
mov
rcr
in
rcl
sti
out
out
int3
sti
loope
stc
into
fldl
lret
fdivrp
icebp
out
lret
sub
out
in
out
int
cmp
in
enter
clc
fdiv
rcl
mov
orl
fimull
iret
cmp
sar
std
into
in
aam
xor
sti
xchg
sti
out
rclb
xor
in
ljmp
xor
and
jecxz
out
in
aad
sar
sti
loop
leave
rcr
cmp
cld
mov
sub
nop
in
rclb
cmc
ret
call
aas
std
xor
test
fcmovnu
addl
leave
out
aam
fidivl
aam
fcomp
xlat
cmp
div
into
into
lret
xchg
fdivrp
aaa
xor
in
call
cmp
fcmovbe
cmpl
ret
dec
orl
ljmp
in
xor
sti
xlat
cmc
in
cmp
flds
in
in
out
into
shl
in
lret
xor
fcmovnbe
ret
cmpl
clc
loope
jecxz
fcomp
orb
shr
out
out
xor
sar
adc
aas
in
cmp
jecxz
test
into
and
test
call
cli
cmp
std
ljmp
mov
lret
aad
iret
ljmp
xor
aam
cmp
fnstcw
fyl2x
ds
rorl
call
jecxz
int
out
ss
ret
icebp
push
in
aas
lock
fmul
ljmp
repnz
icebp
sbb
fcom
xor
fpatan
aam
not
fdivr
xchg
out
xlat
out
in
sti
fcmovb
sti
lret
ror
jecxz
iret
fcom
leave
aas
into
aam
aad
xchg
xchg
ret
sub
cli
dec
in
xchg
fiaddl
add
push
jmp
lret
ds
lret
rol
loop
in
and
jge
jl
in
int3
repz
imul
cmpl
addl
xchg
icebp
ljmp
iret
sar
lock
in
icebp
aad
jmp
sti
out
jmp
addb
enter
cli
shl
out
icebp
lock
out
int
mov
out
in
stc
lret
lock
aad
cmp
call
stc
ret
loop
leave
xlat
and
nop
out
fcoml
shr
enter
inc
ljmp
inc
add
mov
xchg
xchg
jmp
enter
fst
hlt
div
aas
ret
test
lds
nop
fcmove
cld
loopne
das
int
ss
out
jmp
lret
xor
cld
xchg
ljmp
mov
cmc
shr
out
xlat
stc
icebp
into
std
aas
test
stc
shl
cld
test
sub
fdivr
cmp
repnz
hlt
in
mul
add
jmp
fiaddl
jmp
ret
aaa
fcmovne
jmp
sarb
fsqrt
test
rol
cld
clc
cli
in
mov
icebp
aaa
int3
sub
ljmp
idivb
sti
rol
loopne
lret
lret
int3
into
clc
jecxz
mov
fsubrp
lret
in
fsincos
mov
cmp
int
clc
not
cmc
enter
loopne
jmp
lret
icebp
clc
xor
icebp
iret
into
rcr
fiaddl
hlt
fucomp
leave
out
cli
flds
xchg
jmp
int
leave
into
cli
rcl
xor
cmp
repnz
iret
in
out
jmp
into
jmp
xchg
out
test
ljmp
fnstcw
repnz
stc
jmp
xchg
out
cmc
stc
cmp
cmp
out
sar
ss
xlat
lret
bnd
sti
std
ljmp
out
jmp
xor
xor
cmc
rcr
repnz
in
sar
and
mov
out
cmp
loop
xor
xor
out
ret
xor
loope
aas
shr
mov
lret
jmp
leave
call
sti
sti
cmp
cmc
roll
out
mov
in
xor
xor
out
aam
rcl
lret
not
cmp
call
fxch
cli
jmp
mov
int
xor
aaa
int
neg
sbb
loope
stc
fld
xchg
nop
nop
xchg
repz
icebp
aam
shl
cld
test
int
loop
xchg
repnz
std
leave
loope
in
out
out
das
sarb
cmc
loop
enter
jecxz
cmp
leave
call
and
out
ror
shl
cmp
div
xlat
fstp
fiaddl
xlat
stc
fcompp
in
icebp
cld
repz
aaa
jecxz
xor
iret
cld
loope
in
std
add
repz
in
cld
cld
out
icebp
in
int
in
icebp
aaa
jmp
rcr
push
ror
int
int
mov
orb
cmp
out
clc
xor
rcr
clc
repnz
out
rcl
aad
hlt
loop
fadd
loop
bnd
cmc
out
in
icebp
push
cli
rcl
addb
jecxz
faddl
xchg
rorb
cmp
ror
aam
cmp
cmpl
rolb
sti
aas
call
sti
fstl
int
out
enter
in
sbb
mul
cld
cmp
mov
clc
cli
fimull
xlat
int
xor
shl
cmp
loope
jecxz
cld
xchg
enter
testl
aam
into
fnsave
rcr
hlt
cmp
fsubr
in
cmc
out
mov
or
in
xor
repnz
lret
in
aad
add
xchg
ret
leave
jecxz
out
ljmp
test
repnz
clc
out
repnz
repz
aad
cli
orl
sub
loope
leave
lock
cmp
hlt
aas
enter
loope
incb
jecxz
int3
into
jmp
mov
xor
fcomi
cmp
in
incb
aam
jmp
xchg
iret
mov
decl
vpminub
sarl
cmp
cmp
rolb
lret
int3
fsubr
fsubrl
sub
div
into
xor
in
aam
and
jecxz
xlat
test
xchg
jmp
test
imulb
shr
lret
in
in
sbb
sar
mul
shl
push
sti
enter
cmc
cld
divl
out
lds
ljmp
rcr
int3
loop
leave
xchg
in
cmp
test
into
mov
push
jmp
rcl
mov
neg
repnz
inc
xchg
lcall
ds
jge
jl
shll
out
stc
fyl2x
cmp
rol
ror
cli
ret
addb
in
in
enter
lret
call
cmp
not
shl
xchg
fsub
int
jmp
shl
lret
in
in
int
jmp
out
cmp
cmp
stc
fcmovnbe
cld
cli
mov
jmp
hlt
ds
fcom
out
iret
icebp
sti
hlt
xor
rcl
sar
loope
out
icebp
loop
xchg
xchg
mov
ljmp
out
xor
roll
clc
fsincos
xlat
sti
sub
int3
aam
lock
xor
aam
fcomi
stc
leave
call
aad
jecxz
aam
shl
incb
mov
std
jmp
fsubp
clc
xor
fdiv
out
enter
hlt
aad
call
int3
in
jmp
orl
ljmp
in
cmp
fcmovb
cmp
ret
out
iret
cld
int3
in
lret
leave
fdiv
fcmove
cmp
or
loope
in
hlt
ds
int
xchg
rcl
cld
aas
test
fidivrs
fdiv
loope
stc
cmp
rcr
jmp
out
test
ret
divl
jmp
fst
cmp
fcmovu
mov
lock
in
cmp
rcl
idiv
sti
test
into
out
loope
enter
clc
xchg
lret
ljmp
repz
mov
std
stc
lret
fsubr
int3
iret
movl
std
aam
cmp
jmp
in
out
repnz
jmp
into
mov
icebp
mov
iret
in
jmp
out
into
aas
into
fidivrs
in
fsub
lock
fnstcw
in
cld
hlt
div
xor
out
xor
lds
hlt
fimull
enter
test
in
aaa
xor
jmp
xlat
hlt
cli
loop
rol
fsub
clc
ret
mov
jmp
cmp
jmp
aas
aad
cmp
sti
leave
test
test
out
repz
shl
lret
out
fdivr
xor
xlat
sarb
sti
xor
cld
in
int
lea
aad
loopne
ret
cs
leave
aad
in
in
neg
xlat
out
push
sti
push
cli
jmp
cmp
fucompp
idivl
fidivrs
in
mov
ljmp
call
aas
int3
loope
cmp
imul
shl
fdiv
sar
fcomp
xchg
bnd
incb
loop
in
iret
out
loopne
int3
cmp
enter
sti
cmp
sar
fcmovu
aad
addb
xchg
aad
out
fdivrs
fxch
leave
fcmovu
jmp
out
flds
ffree
lea
loop
into
clc
jmp
loope
aas
rcr
fsubp
jmp
out
out
mov
jmp
aaa
jmp
out
lock
lret
lds
in
loopne
std
jmp
lds
fnstenv
fsubr
or
aad
xor
lret
test
out
loope
fists
jmp
lret
aad
icebp
cmp
sar
xor
out
ret
rcr
jmp
mov
jmp
rcr
fsubp
test
das
lret
ljmp
rcr
fiadds
mov
fcmove
mov
stc
lock
ljmp
imul
aam
ret
hlt
and
xchg
std
xchg
mov
loopne
out
stc
les
sti
xor
fld
loopne
ss
std
cli
orb
lret
cs
icebp
aad
fmul
ss
ss
repz
in
cli
clc
mov
out
loope
icebp
fcmovnu
rorb
rol
std
test
ds
cld
std
sarb
cld
lret
fsub
cmp
test
aad
in
cs
not
in
cli
sti
in
loop
clc
sti
rcl
in
stc
cld
int3
call
icebp
sar
repnz
clc
cmp
std
loope
xorl
xchg
aam
jmp
jmp
jmp
aaa
jmp
rol
out
lock
std
cmc
call
fldl
fsubrp
in
jmp
shl
xor
loop
call
dec
cmp
in
aad
aam
orl
ds
int
in
int
hlt
repnz
clc
rcr
in
mov
mov
leave
out
int
out
out
aaa
out
xor
rol
xchg
xor
call
mov
call
div
jmp
icebp
iret
jmp
neg
fcmovbe
into
addl
fadd
out
loope
orl
call
jmp
jmp
int
mov
cmp
xchg
fidivrs
test
jge
jl
int3
enter
cmc
jmp
loopne
ret
xchg
xlat
in
filds
xchg
lret
loop
ds
loop
fcmovb
repz
cmc
faddp
cmp
ret
fmulp
mov
call
cmc
shl
in
sar
fmul
idiv
loop
roll
lret
std
out
sub
xchg
repz
les
hlt
aam
ljmp
aad
test
shl
out
ljmp
out
ret
cmp
rcl
leave
leave
loopne
out
test
mov
cli
cli
cli
popl
out
test
hlt
cld
cmc
ret
stc
in
test
icebp
in
repnz
in
out
mov
rorl
in
rol
lret
fucomi
cmp
ret
lock
fstpt
and
cmc
ljmp
call
cli
xor
ror
ret
fnstcw
loope
inc
sar
lret
jmp
std
leave
xchg
in
sti
call
jmp
rol
jmp
jmp
std
fdivr
lret
loop
iret
lock
xor
cmp
cld
icebp
into
loop
shl
sar
ljmp
enter
das
cmp
enter
xlat
ss
cld
loopne
loope
test
out
lret
jmp
test
rcll
xlat
int3
in
jmp
in
cmp
jecxz
loopne
aad
enter
call
in
xor
aad
cmp
shl
rol
bnd
leave
lret
out
into
aad
das
out
cmp
xor
enter
repnz
out
fiadds
in
std
jmp
mov
stc
ret
icebp
cmp
icebp
ret
cli
clc
mov
aam
and
sbb
into
lock
repz
icebp
test
xlat
loop
clc
xlat
aas
ret
loopne
xlat
leave
aad
out
fiadds
rcl
loope
aad
int
cld
jmp
repz
test
movl
xchg
xor
xor
cmp
call
fidivrs
loope
fnstsw
out
in
mov
in
xor
xor
rcr
xor
cmp
jecxz
rcl
hlt
xchg
cmp
call
fstp
out
mov
jmp
clc
fcomp
out
cld
stc
rolb
in
mov
test
decb
add
lret
sti
xor
into
iret
sti
aam
xlat
fabs
leave
mov
in
ljmp
call
leave
repnz
stc
ror
sarl
cmp
test
out
lea
sub
jecxz
xor
sti
repnz
cmp
sar
fucom
test
mov
loope
jmp
int
loopne
xor
fidivl
shr
enter
not
xlat
xlat
aad
aad
in
xchg
ret
leave
repnz
aad
xor
cmp
lret
idivl
sti
cmc
into
and
xchg
jmp
lds
and
iret
out
iret
out
cld
stc
jmp
xlat
shl
idiv
in
frndint
nop
lock
jecxz
xchg
ds
xor
ljmp
out
aam
shl
clc
shl
flds
jecxz
xor
enter
fdivl
aad
vpsrad
mul
out
in
xchg
xchg
xchg
cld
loopne
sub
xor
sti
fcmovnb
lret
fistpll
ds
out
cmp
addl
xchg
shl
xchg
loope
jmp
in
out
and
or
fimull
out
mov
shl
shl
cli
jmp
enter
shl
sbb
mov
lret
or
test
lock
lock
out
fdivp
ss
fucomip
div
loopne
mov
out
nop
cli
xchg
xchg
shll
out
rcl
aaa
fistpll
ds
cmp
aad
xlat
in
cli
in
cld
les
out
into
int3
jmp
rcr
lock
cmp
shl
aad
cmc
clc
loope
xchg
test
repnz
xor
out
fsubr
fcmovne
shlb
fidivrs
ret
fsubp
mov
ljmp
bnd
cs
rcl
repnz
fnclex
ret
jmp
orb
incl
xor
imul
leave
aaa
lock
aas
sar
sti
lock
fucomp
call
out
and
xor
cmc
into
shr
out
xor
fcmovnbe
sar
fisttpll
lret
out
cli
cli
addb
jmp
mul
cmp
fcmovbe
out
out
mov
loop
lret
cli
inc
lea
ret
xor
in
div
int3
sbb
and
in
cmc
int
leave
jecxz
fsubp
jmp
out
cmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
leave
cmp
jle
jge
jl
in
out
jmp
clc
cmc
cs
aaa
loope
icebp
ljmp
clc
xchg
sub
stc
neg
xor
call
leave
div
ret
cmp
roll
test
call
in
rcl
fsubr
ljmp
ds
fdivr
xchg
cli
jmp
in
in
in
cmc
cmp
xor
xlat
cmp
loop
fisttps
sbb
mov
in
loopne
hlt
das
fucomi
int3
hlt
std
ljmp
xchg
leave
testb
xchg
int3
into
out
cmp
cmp
std
aas
std
stc
not
jmp
fcomip
mov
mov
cld
int3
hlt
iret
repz
idivb
xlat
sar
ret
or
stc
clc
mov
lret
sub
call
in
into
int
fcmovb
out
int3
aam
into
out
in
xchg
rorb
fucomip
test
xor
ror
fst
or
ds
out
jmp
fsqrt
out
mov
jmp
cs
fdiv
iret
fucomi
repz
cmp
call
orb
xchg
xchg
xor
into
lret
cmp
rol
aam
cmp
repnz
in
rcr
loopne
in
mov
mov
adc
stc
sti
ljmp
out
cmp
ret
std
std
fcmovnb
ljmp
incb
lds
xlat
cmp
aam
xor
ljmp
loop
lret
sbb
fiaddl
loope
out
aam
cmp
idiv
cmp
cmp
mov
ret
xchg
iret
leave
fcmove
mov
lret
xor
hlt
lret
lret
std
fiaddl
into
cli
in
enter
out
loope
ds
ss
cmc
int3
cmp
repnz
sar
mov
jmp
cld
mov
loopne
repnz
jmp
push
and
ljmp
mov
xchg
in
xor
cli
xor
cmp
lret
mov
fucomi
ljmp
shl
xor
cmp
int
aam
aam
lock
in
fadd
mov
in
int3
std
xchg
test
loope
ret
sub
xlat
aam
in
cmp
icebp
test
rcr
out
les
xchg
ss
ror
cmp
lock
test
xchg
incb
mov
xchg
into
xlat
repnz
int3
in
cmp
sti
aad
fcmovb
adc
cld
cld
xchg
ret
fimull
int3
push
lea
fld1
xor
ret
sar
sub
and
cmp
test
neg
stc
enter
repnz
jmp
xor
int
cmp
xor
jecxz
ffree
incb
xchg
fabs
xchg
out
jmp
mov
xor
aad
jmp
int3
cmp
int
aas
add
sub
out
repz
rorb
xlat
aaa
in
cmc
out
cmp
repz
call
loopne
idiv
rol
enter
cmc
into
ljmp
loope
xor
xor
std
testl
cld
call
jmp
into
cmc
call
fucomi
xlat
into
int3
sarl
lret
out
stc
lret
cld
fnstsw
ficoml
loop
sub
std
clc
cmc
cmc
lret
sub
ret
orb
xchg
mov
repz
fst
cld
loope
rcl
or
ret
std
int3
mov
cld
in
aam
iret
out
clc
out
xor
and
shl
in
hlt
aam
iret
test
fst
mov
lret
jmp
cmp
and
faddp
ret
jmp
mov
in
in
ljmp
loopne
out
aaa
cli
cmp
cli
neg
dec
int
idiv
addl
incl
ljmp
icebp
in
repnz
hlt
aad
sti
repz
repnz
jmp
jmp
xchg
lret
lock
int3
out
enter
aam
ret
cmp
test
push
and
mov
leave
test
lret
xchg
jmp
clc
leave
ret
jmp
into
enter
std
aaa
lds
call
std
sti
lock
or
in
ss
rcl
cmp
out
aad
loop
in
ds
test
jmp
dec
cmc
out
xlat
out
rcl
idivb
out
cld
xlat
repnz
cli
xchg
in
mov
sub
and
aas
fnstenv
in
enter
cmp
ror
jecxz
xchg
out
in
lock
shr
loop
cmp
sar
cmp
stc
fsub
jmp
test
cld
int3
loope
in
inc
in
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
cmp
loop
sarl
jge
jl
faddp
xlat
loopne
in
aam
into
iret
roll
xchg
out
xbegin
cld
out
call
out
ljmp
ret
xchg
shl
clc
std
fadd
fsubr
int3
loopne
shl
aad
in
call
rcr
loope
cld
loopne
hlt
loopne
mul
push
jmp
filds
clc
mov
ds
rolb
mov
adc
fcmovne
loope
fdivr
cld
sub
loop
in
lret
out
faddp
iret
out
lret
icebp
fsubp
enter
in
loopne
mov
lret
in
jmp
cmp
ss
lret
lock
in
leave
imul
out
fcmovnu
fsub
xlat
loope
jmp
out
jmp
lock
cmp
in
repnz
cmc
shll
test
sti
xor
ljmp
and
ljmp
std
or
shl
xor
repz
cmp
in
std
in
repz
fcomp
fcmovnu
fiaddl
jecxz
repnz
in
idiv
jmp
lret
cld
in
std
call
loope
loope
in
in
fmul
in
xor
sub
hlt
hlt
cmp
cld
cmp
ret
stc
aam
aam
ret
faddp
test
mov
int
fld
ror
out
xlat
in
sti
sar
fcmovb
fdivrs
shl
rol
leave
leave
clc
lret
nop
decb
xor
leave
sar
hlt
fcmovu
fdivr
shl
mov
cmp
int
icebp
xchg
xchg
jmp
cmp
iret
cld
cmp
cmp
and
incl
in
std
repnz
loopne
divb
shl
ss
enter
stc
les
test
test
fisttps
jmp
shl
int
lret
fst
repz
cmp
out
mul
loop
mov
lea
int
shll
cmc
in
aad
fdivr
lret
iret
int
into
into
cmp
rcl
idiv
lret
int3
mov
out
into
in
sar
cmc
fcmovb
in
cmp
clc
ljmp
lret
adc
jmp
fmulp
out
xchg
xchg
ret
into
xor
cmc
out
iret
out
call
loope
aad
lock
in
mov
nop
jecxz
repnz
mov
into
lock
cmp
cmp
ror
shl
in
enter
enter
int
mov
jmp
rol
fucomi
aas
lret
leave
out
repnz
decb
jecxz
jmp
cs
mul
stc
cli
cmp
test
adc
ds
repnz
mov
out
in
fucomi
rcl
hlt
lock
out
divb
lock
repz
shl
xlat
clc
lock
out
int3
loopne
out
cmc
loop
sub
stc
int3
std
xor
cmc
cmp
into
roll
hlt
faddp
clc
out
jmp
shl
aad
fst
int
int3
fucomip
fcmovbe
shl
std
aas
loopne
test
mov
lock
shr
xlat
hlt
rcl
icebp
lock
shr
repnz
lret
int
out
fdivr
xchg
in
rol
sti
aam
fdivp
clc
sarb
cld
loopne
sbb
lret
and
mov
call
shl
enter
rcl
ds
hlt
test
jmp
orb
lret
ljmp
out
xor
in
mul
add
out
int
int
sub
loop
test
fdivrp
hlt
int
xor
cmp
leave
leave
sar
mov
lret
lret
addl
iret
fucomp
out
std
fcomip
cmp
cmc
xchg
lock
ret
lret
xlat
sub
fimull
icebp
iret
jecxz
lock
call
int
aas
roll
leave
aas
in
in
out
in
adcl
cmp
cmp
loop
cmp
mov
clc
div
mov
icebp
addb
xor
not
leave
in
repnz
stc
loope,pt
xchg
call
iret
loopne
out
fsub
in
out
jmp
in
enter
cmp
cmp
clc
in
cli
notrack
clc
jecxz
cli
xchg
out
lock
nop
mov
das
ret
loop
iret
stc
aam
ljmp
xlat
addb
fld
rorl
rol
in
leave
aam
cmp
repz
repnz
mov
sti
cli
enter
lret
rcl
neg
aad
aad
in
call
into
aad
loope
int3
into
xchg
jecxz
mul
cld
iret
ljmp
out
stc
rcl
repnz
cmp
cmp
aas
cmc
shr
cld
jmp
loop
lock
repnz
call
aaa
aas
cmpb
xor
loopne
leave
cmc
test
mov
mov
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
add
jle
jge
jl
out
loope
ljmp
sar
fdivrl
lret
loope
hlt
aad
incl
mov
xchg
mov
not
xor
cli
sti
call
xlat
sti
cmc
jmp
out
movl
rcl
stc
fcmove
iret
cli
rcr
addl
mul
test
ret
mov
fidivs
in
out
sub
enter
xlat
aad
cmp
jmp
in
ret
icebp
xchg
jmp
shrb
xor
ror
cmc
fdivr
shl
cmc
xlat
lock
jecxz
out
xchg
dec
jmp
cmp
cmp
fstpt
cmp
aad
fsub
fmuls
iret
xor
repz
out
lock
int
std
idiv
cli
sti
mov
ljmp
mov
into
out
out
in
lret
in
repnz
iret
into
rcr
cmp
cmpl
aas
mov
mov
out
in
jmp
clc
icebp
cmp
cmp
jmp
repnz
loope
jmp
in
cli
jmp
xchg
xchg
jmp
int
fdivs
xor
lock
sar
call
int3
vfrczss
repz
fcmovnu
out
cmp
aad
in
out
in
mov
out
in
lock
test
sub
sub
fcmovnu
in
int3
cmpb
iret
cmp
fisttpll
fucomi
out
xchg
int3
mov
fld
aad
repz
hlt
clc
stc
cmc
ret
fmul
loop
leave
mov
inc
mov
jmp
iret
shl
fdivs
icebp
out
shlb
leave
icebp
stc
shll
fdivrs
loope
push
fmulp
jmp
lds
xor
jmp
fdiv
out
icebp
jecxz
decb
lret
nop
test
fidivs
in
leave
rcr
xor
ljmp
aas
shl
loop
addl
rcr
mov
in
lret
sti
lds
call
dec
fabs
fcomp
cmc
neg
mov
rcr
aaa
cmc
xor
fcmovnu
aam
loope
iret
cmp
cmp
xlat
cld
rolb
iret
out
std
mov
rcl
shl
xor
std
repnz
idivl
fmulp
cmp
cli
jmp
xchg
xlat
mov
enter
aaa
call
aam
xor
fdivr
fsub
aad
out
hlt
in
cmc
clc
jmp
fdivr
enter
in
xor
in
repnz
out
sarl
iret
hlt
imul
and
test
jmp
xor
xor
enter
addb
call
fxch
mov
repz
cmp
les
xor
neg
test
out
test
test
loope
xchg
lock
lock
cmp
shr
icebp
xor
rolb
fimull
iret
rclb
int
aam
clc
xlat
ror
fadds
cli
adc
lea
xchg
out
shll
das
xlat
aam
fucomi
shlb
enter
loop
test
rol
mov
loope
in
loope
fcomi
test
xor
div
cmp
into
idivl
std
out
fucomi
sbb
mov
aam
std
in
lret
nop
repnz
into
repz
xor
cmc
cld
cmp
ret
hlt
jmp
xor
jecxz
cmc
mov
cmc
in
in
fsub
cmp
sbb
std
clc
lock
std
sarb
mov
xchg
fcmove
fnsetpm(287
sub
enter
aaa
xor
cmp
and
fadds
leave
cld
xchg
fucomip
neg
iret
leave
icebp
ss
fsubr
icebp
call
out
out
test
in
popl
jmp
cmp
roll
fdivr
xchg
int
ljmp
aad
vpsubq
int
lock
cli
test
into
ret
sub
ret
mov
fucom
ljmp
xor
xor
call
test
ds
in
rol
in
cli
fdivr
lret
mov
jmp
in
aaa
cmp
repz
loop
in
in
shl
fdivr
in
fsubr
stc
fiadds
in
lock
pushl
aas
stc
loope
mov
fsubp
leave
fsubp
xchg
fcom
vcvttpd2dq
fidivl
shl
cmp
faddl
loop
mov
icebp
xor
xor
fmul
cmp
ss
roll
test
ret
iret
ror
cmc
ror
ret
lock
imul
aad
rol
shlb
jecxz
std
lock
in
rolb
loop
in
out
xlat
fnstcw
cmp
lock
idiv
mov
ret
mov
mov
pop
xor
jmp
int
enter
int
lds
sarb
fnstsw
jge
jl
shr
test
int
in
in
int
fdivr
std
fcmovnu
and
xlat
in
popl
lret
loopne
loopne
out
xlat
int3
leave
into
leave
roll
fdiv
fsubp
aam
xchg
loope
loope
xor
shl
stc
repnz
enter
ret
testl
stc
frndint
ljmp
leave
icebp
lds
fcomi
cmc
int3
rcl
out
and
fiadds
clc
leave
mov
shr
jmp
xor
jmp
out
out
int
neg
in
xlat
cmc
rcr
rorb
into
icebp
int3
int
sub
into
cli
fcmove
cmp
fxtract
int
rolb
out
fmul
lret
out
mov
lock
jmp
ljmp
int
out
leave
mov
ror
mov
enter
shr
hlt
clc
out
ss
iret
int
stc
hlt
test
in
aam
clc
lds
xor
jmp
aaa
shll
rol
out
int
jmp
loopne
cmp
faddl
jmp
repnz
in
rol
xor
cmp
cmp
in
fsubr
not
fucom
cmp
rol
sbb
out
mov
lds
shl
cmp
into
ss
aaa
mul
fcmovbe
aam
fcmove
in
sbb
shr
xchg
in
sub
ljmp
rcr
fildl
cld
jmp
iret
stc
xchg
leave
fsubp
xchg
out
shl
in
rol
jmp
test
xor
fdiv
in
lret
jmp
and
in
fdivl
int3
in
out
out
cmp
repnz
cmp
fcomi
stc
in
out
mov
and
hlt
fmul
call
lds
enter
in
cld
cld
fdivr
add
test
cld
mov
repz
repnz
cmp
fcom
repz
iret
fcmovu
shl
out
fstp
aas
incl
jmp
rorl
loop
fsubr
ffree
in
sti
cld
ret
icebp
xlat
out
push
mov
orb
lret
cs
out
cmc
ffreep
xor
sar
mul
lock
call
test
clc
fmulp
les
lret
repz
lret
aam
icebp
cmp
sti
loope
sti
fldl
test
xor
loope
ss
xor
jmp
not
std
in
cmc
cli
mov
jecxz
cli
orl
fsub
xlat
ljmp
into
hlt
icebp
aam
test
in
enter
jmp
das
das
out
aad
cmc
ljmp
cmc
clc
in
fstp
leave
shl
loopne
cld
fcmovnu
in
lret
out
fsubrs
cmc
ss
fstpt
or
in
adc
int
test
cmp
lret
call
rolb
fimuls
leave
mul
iret
call
lret
repnz
out
cmp
clc
out
loopne
stc
shl
repz
mov
std
xchg
in
not
cmc
xor
fxch
sar
idivl
fincstp
aas
hlt
icebp
fstpt
test
les
out
mov
in
das
ljmp
neg
loope
jecxz
cmp
fstp
shl
int
out
xchg
icebp
sub
lock
clc
cmp
shl
mul
aad
fldl
jmp
out
cmc
out
xor
cmp
lret
test
xor
cmpb
lret
xchg
sbb
jecxz
repz
mov
ljmp
lret
out
into
cmp
lock
faddl
incb
enter
leave
iret
idiv
roll
incl
iret
xchg
sub
imul
rcr
lock
cmp
cmp
iret
ds
rcl
and
aam
in
loope
into
mov
call
rol
stc
aaa
int
out
xlat
call
loopne
test
fdivp
clc
fcmovu
test
jecxz
ljmp
ret
aad
ret
dec
aam
or
rcl
out
in
orb
xor
cs
aam
rcr
fxch
clc
out
shl
ret
movl
aaa
ss
sar
xlat
aad
in
aam
fsub
aas
inc
clc
hlt
loopne
mov
fcmovu
icebp
std
loope
sub
vpmaddwd
aaa
int
ffree
roll
cli
xchg
test
int3
loope
ror
ss
ret
hlt
lock
rcl
lock
xlat
xchg
enter
loopne
fsubrp
fsubp
and
out
xor
incb
rcl
imul
xlat
in
fadds
nop
icebp
xor
out
cli
sar
rcl
lret
int3
aam
std
fcom
adc
fdivrp
test
cld
ret
pop
add
ror
aad
fistl
loop
ss
inc
cmp
jle
jge
jl
call
cld
div
in
in
jecxz
addb
sbb
mov
xchg
shl
cmp
hlt
in
cmp
aad
cmp
clc
fsubp
loopne
cmp
mov
mov
ss
jmp
sti
icebp
loopne
mov
and
fmull
orl
repz
cld
ret
rol
ret
icebp
shl
loopne
int
icebp
fucomip
xor
int
fucomp
cmp
out
fucomp
ljmp
sti
test
sbb
loop
repnz
out
xor
in
in
idivl
fidivrs
xor
rcl
adc
stc
out
faddl
xor
shl
xlat
lret
in
xlat
cmp
mul
out
fcmovnb
fcmovu
loop
mov
int
in
in
stc
cmp
jmp
aaa
sti
test
mov
cld
int
int
iret
test
stc
xor
sti
cmp
roll
clc
xchg
mov
test
incb
aad
in
int
repnz
rcl
stc
cld
sti
cld
xlat
xchg
jmp
out
jecxz
shl
shlb
in
xor
cmp
xlat
in
jmp
shl
std
sti
clc
cmc
enter
cli
fsubr
cld
int
jecxz
in
ljmp
enter
aam
cmc
out
loope
jmp
call
rorl
out
idiv
std
enter
repnz
clc
cmp
mov
hlt
neg
sub
fmul
xorb
divb
shr
aaa
int
sti
loope
inc
testl
fistpll
not
jmp
cmp
div
hlt
cmp
sar
enter
mov
iret
in
enter
clc
enter
sti
ret
hlt
std
fdiv
aad
clc
fmul
loop
out
mov
loopne
les
ljmp
fsub
loope
test
call
decb
into
out
xor
loopne
std
out
shr
jmp
loope
out
cli
testb
lret
std
into
out
xchg
test
shr
shlb
xor
cld
ret
test
stc
in
mov
xor
cmp
sar
xor
int
cli
ret
cld
std
fmuls
fucomp
cmp
lret
hlt
sti
fcom
clc
sti
fidivl
cmpl
sti
cmc
roll
mov
xchg
clc
fdiv
adcl
cmp
out
shl
call
out
enter
rcr
icebp
jecxz
in
cmc
sub
cli
out
in
fistpll
out
test
shl
enter
xchg
xchg
addl
neg
lock
loope
ss
cli
ffree
les
fucomp
xchg
xchg
loop
iret
xlat
iret
cmp
out
int
call
loope
cmp
enter
ljmp
shll
sub
enter
aad
faddl
fcmovb
mov
in
ljmp
xchg
ljmp
into
call
sarl
xlat
shl
clc
fdivr
ret
out
stc
int3
jecxz
out
shrb
divl
into
shlb
fnstsw
aaa
xor
aas
cmp
rcr
sbb
in
mov
fdivr
loop
mov
in
hlt
xor
leave
lret
shr
cmp
ljmp
shl
out
cld
int
in
xchg
loopne
test
out
clc
hlt
cmc
fdiv
rcl
xor
les
leave
clc
jecxz
call
shl
fcmovu
rcr
stc
repz
ds
repz
call
xlat
orl
loop
aam
xor
xor
jecxz
testb
ret
mov
stc
rorl
into
out
hlt
in
xor
int
fcmovnb
clc
out
test
jmp
fldl
mov
sti
not
cmp
roll
stc
sar
in
lret
leave
leave
lret
div
icebp
sub
fsubrp
fsubr
aas
std
ret
mov
xlat
xchg
out
call
out
jecxz
iret
fucomip
cmc
xor
hlt
ror
push
div
fsub
mul
int
fxch
mov
test
sti
call
ror
loopne
iret
fadd
fisttpll
xchg
call
nop
sub
ret
icebp
iret
test
imul
sbb
xchg
incb
cld
lea
aam
aaa
xor
aad
jmp
inc
push
mov
std
out
cld
enter
int3
jmp
lret
call
cmp
ss
std
div
fcmovne
repnz
std
fcmovnu
mov
incl
ret
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
stos
lcall
pop
add
in
int3
fldl
aad
clc
aas
int3
leave
out
in
std
in
out
test
fisttpll
shl
les
loop
ret
idiv
jmp
push
movl
icebp
ljmp
cli
int3
les
out
xor
fbstp
ret
jmp
sti
cld
and
xchg
in
fucomip
call
aad
ljmp
or
stc
std
in
ror
loopne
xor
repnz
clc
cmc
not
ljmp
cmp
rorl
xchg
mov
in
mov
rol
ss
xor
repnz
fldl
faddl
stc
lret
in
mov
rcl
out
lret
fcomi
ror
ljmp
into
xlat
movb
clc
cld
sbb
xchg
lret
loopne
int3
out
ret
sar
test
cmp
loopne
or
mov
repz
out
divl
sub
lock
loope
loop
clc
aas
in
lds
cmp
out
addl
cmc
fcmovu
in
xlat
cmc
fucomi
icebp
repz
loope
test
int
loopne
ljmp
std
sti
rolb
ret
sar
in
test
loop
iret
fildl
ss
cmp
sti
call
ret
ret
loopne
mov
test
test
std
call
out
icebp
ret
clc
jmp
rcr
cmc
lret
shl
shr
clc
in
sti
lret
sti
nop
ror
mov
xor
aam
in
fcom
xlat
fstp
aas
fcom
not
repnz
lret
fdiv
mov
mov
shl
in
hlt
lret
hlt
iret
ljmp
std
leave
stc
out
out
in
lret
out
jmp
loop
in
ss
fcmovnu
into
testb
mov
loop
shr
out
xchg
jmp
int
in
xor
cmp
std
stc
int
stc
std
loope
jecxz
orb
and
out
int
jmp
shr
out
divb
iret
div
cmp
icebp
hlt
std
addb
xchg
mov
loopne
sar
xlat
cmp
cmp
ds
in
stc
sar
into
fucom
sti
lret
mov
or
mov
xor
into
fst
jmp
cmp
cmp
ret
or
cli
int3
cli
test
in
out
std
into
out
ljmp
lds
aad
fimull
loopne
hlt
lock
cmp
ret
out
aaa
fildl
xchg
loop
in
test
int3
cmc
repz
out
sarb
xor
call
clc
ret
ret
div
cld
or
fucomp
out
loope
aas
loop
ret
leave
stc
fiadds
test
cld
sti
ror
int
orb
test
stc
xor
imul
ret
aam
rol
loop
fdivr
test
mov
xor
enter
cmp
loope
lret
cmp
fdiv
mov
fsub
lock
nop
mov
das
xor
cmp
xor
cmp
lret
sar
iret
in
orb
mov
jmp
shr
jmp
jmp
cmp
addb
sub
mov
enter
sbb
cmc
lock
xor
lock
out
out
clc
icebp
in
ds
lock
cmp
jmp
incb
test
mov
sub
out
hlt
ljmp
aad
cmc
test
jmp
std
in
fisttpl
int3
int
jecxz
into
fcmovnbe
out
cmpl
cli
shl
out
ffreep
mov
in
std
std
jmp
xchg
loopne
in
hlt
jmp
hlt
lret
sarb
lret
xchg
repz
decb
mov
jmp
xchg
int
ret
iret
lret
jmp
cmp
aad
incl
mov
loope
in
repnz
in
xor
fdivr
jmp
iret
fcmove
sti
cli
out
test
mov
cld
sbb
lret
into
in
into
call
fucom
repnz
dec
sar
lock
into
out
call
ret
in
fadd
in
hlt
icebp
int
shl
ffreep
cld
cmp
or
addl
xor
sti
repz
test
incl
out
clc
clc
int3
repnz
aaa
fmulp
int
aad
stc
ljmp
dec
jecxz
loopne
cmp
cli
sti
jmp
lds
xor
xor
fcom
lret
ror
ror
clc
loopne
sti
out
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
dec
bound
jle
pop
add
mov
xchg
lret
xor
leave
clc
xor
lret
int
into
rolb
fiaddl
loope
mov
into
lea
lret
sti
hlt
ss
rolb
call
out
incl
into
shr
fmul
repz
cmp
out
cmp
test
in
test
rorb
lret
das
xor
xor
out
cmc
repz
cmp
aad
call
loopne
int3
aad
xor
in
ss
out
xor
adc
clc
and
xchg
call
cld
jmp
loope
in
in
call
hlt
imul
xor
leave
xchg
stc
in
int3
out
cld
std
loope
mov
sub
cs
iret
xor
cmc
xlat
int3
ret
lock
out
faddl
sti
out
mov
int3
iret
sub
enter
clc
dec
sti
cmp
sti
stc
int3
stc
cmp
rcl
sti
test
adcb
shl
cmp
fucomp
cmc
iret
std
aam
test
rorl
cs
fsubr
cli
loop
rol
fxtract
cmc
mov
mov
int
shl
xchg
cmc
jecxz
enter
out
fsubrp
aaa
hlt
rcr
faddl
stc
lret
out
loop
mov
loope
out
ljmp
sar
cmp
lret
jmp
xor
fdivrp
repnz
ret
xor
xor
testl
fstp
test
into
aam
ret
repz
lds
stc
rcr
shl
filds
jmp
ror
std
shlb
rol
int3
int3
out
clc
out
cmc
cld
icebp
test
mov
jmp
fucomi
fsub
in
icebp
aad
out
ret
lock
shl
int3
sti
cmp
rol
hlt
out
fnstsw
orl
call
ret
aaa
clc
icebp
icebp
repnz
in
test
loop
cli
jmp
rorl
sub
cli
out
in
cmp
mov
loop
jmp
leave
addb
dec
in
ret
out
cmp
out
aas
cld
in
shl
xor
leave
fcomp
ds
fcmovnbe
int
in
aam
shll
in
sti
int3
push
rol
cli
sti
hlt
dec
fdivr
jecxz
jmp
call
jecxz
divb
cs
enter
fdivp
lock
rcl
repnz
enter
rcl
fldl
jmp
in
cld
sti
into
jecxz
loope
shl
xchg
rol
out
addl
call
idivl
std
cld
std
out
sar
ret
fsubp
in
repz
fdivr
dec
out
jmp
call
fst
jmp
fstp
aam
cmpl
cld
cmp
jmp
std
iret
xchg
stc
xor
cmp
in
fcmovnbe
cmp
aam
repnz
shl
imul
clc
ret
in
in
ror
lret
hlt
sar
jmp
repz
ds
cmp
mov
ljmp
xchg
in
lock
xor
out
out
repnz
jmp
ret
in
aas
cmp
mov
out
xchg
xchg
in
xor
fst
lret
fucompp
in
out
rcl
cmpl
sti
out
mov
fmul
out
fadd
aad
xor
shr
int
ljmp
shl
xchg
out
fcompp
fdivp
in
out
loop
xor
enter
ljmp
aad
rorb
out
repnz
push
xor
not
lret
rcl
stc
aam
sti
fcomi
stc
rcl
aam
mov
leave
lret
cmc
lret
out
into
iret
aad
call
iret
rcl
loopne
icebp
cmp
cmp
fcmovbe
mov
fmulp
cmp
mov
test
xor
aad
xor
test
xchg
addl
int
shl
cmp
cmp
addl
clc
test
repz
lock
lock
cmc
xor
rolb
ret
filds
fst
jmp
adc
in
ljmp
xor
loop
repz
aad
stc
sub
mov
mov
xor
in
lret
enter
ljmp
cmp
out
out
test
incl
loop
aam
fcomp
xlat
cmp
aad
lock
in
adc
cli
cld
in
out
mov
xchg
sarb
ret
jmp
f2xm1
shl
cli
cmp
in
leave
fld
movl
subl
jmp
lret
ffree
fst
in
notl
mov
out
jle
pop
add
hlt
in
adc
out
repz
xor
call
aad
testb
fdiv
aam
lds
ret
jmp
shr
xor
neg
hlt
iret
cmp
enter
sar
repz
inc
loopne
out
iret
loopne
xchg
sub
aam
neg
shr
shr
ljmp
vpslld
lret
xchg
sar
fmul
in
mov
aam
xlat
iret
cmc
cmp
cmpl
add
sti
or
mov
ror
rcr
call
rcl
in
aas
cmc
and
loope
fildl
jmp
ffreep
enter
rcl
fsub
cmp
cli
sarb
clc
fimuls
repz
ds
into
xlat
int3
sti
aas
call
out
std
fdivr
aam
jecxz
out
shr
jmp
jmp
xor
ljmp
in
cmp
iret
ret
xor
mov
in
lret
fdivp
ds
jmp
call
cmp
adc
sbb
mov
cli
out
repnz
shrl
ret
xor
xor
repz
in
cmp
rcr
loope
loop
bnd
into
mov
in
xor
ljmp
imul
xlat
ss
fmuls
mov
loop
mov
into
mov
cmc
cs
hlt
shl
out
fmul
adc
cmp
test
mov
addb
cmp
out
int
aam
into
fld
mov
loop
call
loop
into
xor
xlat
in
loop
jmp
cmp
out
into
cmp
fsubr
out
in
std
xchg
sarl
xor
repnz
xor
ss
fdiv
out
adc
repz
mov
mov
test
sub
lret
ftst
shl
lock
std
in
loopne
roll
test
test
addl
lret
fdivr
shl
faddl
ret
sti
cmc
call
xchg
fsubr
loope
icebp
jmp
xor
cmp
icebp
jmp
fld
out
fdivp
repnz
out
fadd
out
fcmove
out
xchg
subl
in
pushl
cmp
into
cli
xlat
icebp
xchg
mov
clc
fscale
cli
out
clc
int
jecxz
mov
lock
shrl
cmc
iret
shl
rcl
cli
out
ret
decb
lock
leave
into
test
out
jmp
sarb
fdivr
mov
out
xchg
mov
int3
xlat
int
call
xlat
cld
xlat
iret
test
and
fdiv
mov
xor
sub
cmc
out
iret
rcr
loopne
mov
call
jmp
mov
in
repz
vpmovmskb
ljmp
addl
lea
xor
sub
ss
cld
into
aas
aas
test
repnz
fprem1
jecxz
fucom
enter
int
fcom
hlt
std
enter
in
out
ret
enter
lea
test
and
ljmp
hlt
cmp
loopne
cmp
fdiv
out
repnz
out
icebp
int
mov
movl
aaa
jmp
cmc
cmpb
jecxz
clc
out
in
in
out
das
rcl
cmp
xlat
icebp
cmp
cmc
icebp
ret
clc
adc
std
clc
out
mov
call
sub
fcom
in
xlat
fdivr
cmp
vpsubd
mov
in
out
in
xchg
aam
lret
jecxz
cmc
ljmp
in
incl
rol
leave
stc
aam
fucomip
out
mov
ljmp
icebp
xor
fmul
loope
jecxz
cmp
in
xchg
out
stc
into
mov
incb
out
das
aam
in
lock
mul
icebp
cli
loope
decb
fmulp
icebp
fisttpll
out
xor
xor
fcmovbe
sbb
icebp
fcmovnb
sti
cli
in
test
jmp
in
aaa
lock
cmp
cld
fdivl
iret
aad
inc
incb
fsub
loope
loope
jmp
ss
call
aam
cmp
jmp
in
stc
in
nop
out
ljmp
ret
cmp
repz
icebp
aad
lock
fdivp
fildl
in
out
lret
xchg
ds
in
neg
in
fcomip
sti
fcmovu
rcl
cmp
fisttps
and
cmc
loop
out
std
stc
jmp
lock
movl
mov
subl
jmp
rol
ror
aad
lahf
mov
xchg
lods
dec
cmc
jle
pop
add
ds
jecxz
loope
cli
lret
test
cs
icebp
in
cli
xor
std
std
out
iret
cmp
jmp
xchg
roll
stc
fcmovnb
call
rcr
shl
xlat
rcl
roll
ljmp
rol
xlat
fld
xor
div
in
addl
cmc
std
in
in
lea
mov
shr
enter
int
cli
out
incb
xchg
std
ds
rcr
shr
ljmp
aad
cmp
sti
sar
fldl
flds
in
xor
xor
int3
xor
fdivr
test
ror
repz
not
xchg
enter
in
in
xor
fldlg2
shr
out
cli
iret
ljmp
xor
out
fdivr
fcmovu
fcomip
fcmove
xchg
divb
leave
leave
out
lret
fcomi
xlat
stc
shl
call
mov
in
xlat
shlb
std
rcr
cmp
fdivrl
icebp
fcomi
xchg
faddp
in
out
fsubrl
stc
call
shr
cmp
shl
flds
and
loop
decb
cmc
jecxz
xlat
loop
std
ljmp
repnz
sti
loopne
xchg
loopne
inc
out
shll
loop
out
in
aaa
aas
std
xlat
xlat
out
aad
aam
loopne
lds
into
into
out
shl
sub
jmp
lock
cmc
cmp
jmp
and
in
fidivs
into
repz
sti
cmp
leave
ss
sti
fnstsw
shl
clc
stc
ret
sti
mov
rcr
jmp
cmp
xor
inc
imul
int3
clc
cli
cmc
clc
xlat
fsubrp
jmp
xchg
test
in
xor
ret
cmc
jmp
out
fcmovu
rcr
lock
cli
mov
mov
loope
in
aaa
stc
icebp
lock
lret
cli
int3
lret
xchg
test
fiaddl
repz
jmp
lock
cli
jecxz
cli
cli
int3
in
ret
fildl
repz
imul
lret
into
out
lock
div
loopne
ds
aam
stc
ljmp
faddl
in
xor
enter
ljmp
rcl
repz
xchg
fld1
loopne
ret
loopne
imul
xor
ss
stc
loope
ret
addb
lea
sub
xor
cmc
out
jmp
not
cmc
aaa
test
sar
cli
loopne
in
mov
out
loope
shl
div
cmp
cmp
sti
add
mov
fimull
int
out
lds
sti
ror
cmp
int3
fcomi
out
addl
jecxz
in
ficoml
sub
xor
xlat
ss
cmp
int3
fdiv
int3
into
cli
cmc
repnz
loopne
mov
ret
mov
das
jecxz
out
vpaddq
call
cli
cld
cmp
stc
enter
out
or
repz
icebp
ss
lret
enter
icebp
icebp
sti
ret
jecxz
filds
mov
call
fadd
cs
fcomi
sti
out
xor
clc
jmp
sar
shl
dec
mov
addl
lret
cs
imul
int
jmp
lret
ds
adc
ljmp
adcb
fdivr
into
lret
hlt
ror
jecxz
ret
in
test
mov
std
clc
fiaddl
and
ror
sub
iret
out
inc
cmp
sti
fsub
aas
ret
aad
cmp
sti
mov
xor
out
lock
clc
loopne
cmp
loop
fadd
cmp
out
xchg
in
loope
in
xlat
aam
xlat
jmp
repz
in
xchg
ljmp
xchg
loopne
jecxz
clc
ss
lret
neg
in
roll
mov
mov
rclb
aam
xor
repz
call
repz
mov
test
icebp
jmp
out
leave
into
fsqrt
lock
hlt
les
jmp
fucomip
iret
int
xchg
in
cmc
loopne
lds
stc
aad
sti
fcomp
rol
clc
rolb
jmp
sti
int
out
in
xor
fnstenv
lret
testb
loop
loop,pt
cli
mov
fildl
out
xorl
aaa
in
xor
idiv
fdivrs
xlat
cmp
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
xchg
popf
lods
clc
jle
pop
add
loopne
cli
sti
lret
hlt
call
iret
mov
mov
int3
hlt
call
repz
cmc
fldl
xchg
xlat
fucomp
lret
iret
cld
call
loopne
aam
fnstcw
aaa
loopne
lock
cli
cld
loop
sbb
clc
push
icebp
in
call
lret
lret
fdiv
fidivrs
cmp
into
aas
leave
fdivp
cmp
cli
into
mov
and
cs
cmc
ffree
fnsave
pushl
in
cmp
ret
fidivrs
call
repnz
divl
enter
cmp
iret
sarb
ds
sti
lock
sti
fmull
lret
cmc
clc
aaa
cmp
xor
loopne
cmp
iret
std
out
sbb
std
cmc
lret
lea
lret
shr
leave
out
xlat
in
in
int
aad
cmp
cmp
enter
xchg
in
mov
xchg
nop
int3
xor
std
cmp
repnz
cli
in
adc
jmp
loopne
int3
in
test
out
out
int3
aad
aaa
aad
std
loop
aad
cld
std
frstpm(287
in
int
test
in
std
lret
out
xor
int
fnstsw
lret
out
fdivp
fsub
test
xor
loope
in
int3
std
sar
les
shll
int3
out
into
iret
iret
hlt
shr
fmuls
shl
icebp
add
xor
cmp
aad
sti
cmp
sbb
fmull
ror
fsubr
repz
fsubp
lock
repz
cmp
fsubr
in
fabs
inc
cld
in
mov
xor
xor
ljmp
rol
repz
mov
into
jecxz
mov
out
lock
cmp
clc
repnz
jmp
out
fiaddl
fdiv
xchg
int
xchg
ljmp
jmp
filds
repz
cld
fldl
aam
shl
ror
shr
int
std
repnz
ret
repnz
xchg
loope
enter
nop
repz
shl
out
shr
int3
shr
int
fstp
xor
aad
mul
jecxz
into
out
fdivr
fcoml
int3
ret
icebp
aad
xor
testb
ret
vpsubusw
loop
xchg
into
ss
aaa
call
cmc
call
ss
test
ret
int
in
loope
icebp
in
out
in
xlat
out
in
out
loope
fsubr
out
loopne
fiaddl
in
xor
lret
jecxz
test
clc
cmp
sar
repz
clc
fldl
into
xchg
rolb
ljmp
neg
aad
addl
call
rol
rcr
loop
cs
shl
clc
aam
shl
lock
aas
loopne
repnz
in
std
icebp
out
jmp
aad
enter
ljmp
stc
fdivrp
jecxz
lret
addb
xchg
in
cmp
xor
fidivs
icebp
fsin
fcmovbe
ret
jecxz
clc
xchg
ljmp
int
fsubr
aad
int3
enter
repz
ret
fxch
sti
loop
jmp
in
sti
loopne
sub
jmp
in
fsubr
in
in
repz
push
cmp
aad
mov
ljmp
hlt
cmp
xor
sti
out
lds
and
lock
xchg
iret
lock
mov
fdiv
ljmp
fsub
fdivrp
sar
filds
test
repz
in
jecxz
ret
hlt
add
in
in
lea
icebp
fsubp
rol
lret
out
enter
ljmp
div
fldl
icebp
cld
call
mov
cmc
cmp
fistpll
into
xlat
stc
out
enter
xchg
ror
jmp
xor
lock
repnz
test
in
sti
iret
bnd
jmp
ret
call
cmp
clc
repnz
cmp
mov
mov
faddl
int3
cmp
shl
repnz
loopne
icebp
ret
in
fisttpll
ljmp
in
xor
aas
lret
rcr
sbb
test
lock
ljmp
rcll
ss
ror
aaa
cmp
orb
sbb
mov
in
out
in
int3
in
cld
not
loopne
xor
jmp
aas
ror
aas
aad
iret
rol
adcb
push
stos
dec
mov
jle
pop
add
fidivrl
repz
mov
ljmp
aam
lret
not
out
ss
xor
xlat
hlt
hlt
xchg
adc
clc
std
mov
in
xchg
cmc
xorb
cmp
in
fstpt
fsubr
xor
aam
fmul
std
hlt
or
loopne
lea
xor
in
cmp
aad
lock
test
aad
roll
fcmove
roll
xor
cmp
lock
loope
ror
mul
fdivp
in
test
sub
repz
sub
xor
in
sar
cmp
loopne
fiaddl
aam
ret
loope
repnz
loope
hlt
loope
xor
leave
lock
fst
fmul
cmc
std
neg
leave
int
mov
shl
iret
in
cmp
xor
enter
cmc
cmp
shl
aad
enter
jmp
out
fldl
rcr
sti
rcl
imul
lock
cmc
repz
incb
call
out
in
xchg
in
ret
ljmp
in
cmp
fcos
and
into
loop
int3
addl
ss
xlat
std
stc
cld
xchg
repz
cld
out
flds
cld
aad
test
out
idiv
cmp
cmp
sar
in
testl
lret
inc
vshufps
cmp
int
lock
fsub
rcl
xlat
std
std
loop
fcompp
jmp
mov
inc
fidivs
xor
icebp
jmp
cmp
into
rcr
icebp
cmc
jecxz
ljmp
iret
sti
iret
fcmovnu
out
cmp
cld
fcmove
cmc
ds
mov
in
out
out
xchg
loope
vpextrw
lds
in
hlt
aas
loope
xor
fdivrs
repnz
repz
clc
lret
icebp
jmp
rcr
in
xlat
fcomip
cmp
xlat
test
lret
repnz
loop
into
in
aaa
repnz
cmp
cmp
lock
loopne
rcl
int
in
std
std
test
cmc
and
mov
int3
xor
fcomi
iret
cmp
rcr
xlat
xlat
iret
out
out
fisttpll
sub
out
pushl
cmp
rolb
loop
loop
fsub
stc
fildl
aad
ror
out
cmp
sti
icebp
lock
repz
jecxz
cmpb
hlt
ljmp
cmc
fmul
in
shlb
enter
sar
out
cmp
lret
icebp
lret
xorl
repnz
repnz
shr
ss
fucom
out
add
into
jmp
shr
in
sti
jmp
cmp
repz
lret
aaa
clc
filds
loopne
lret
mov
in
rcl
call
in
cli
icebp
int
rcr
cmp
mov
xchg
cld
test
int
shr
fcmovnbe
cli
div
iret
imul
fpatan
ljmp
repz
xor
int
cmc
int
xor
cmp
repnz
loope
cli
jecxz
in
fmul
xchg
ljmp
mov
cmp
loopne
aam
sbb
loop
ljmp
mov
test
rol
in
lret
iret
sarl
div
rcl
hlt
xlat
ds
fcomi
mov
std
in
out
int3
dec
in
in
in
iret
sti
sar
sbb
test
in
test
fldl
lds
lret
sti
stc
cmp
sarl
testb
std
out
call
jmp
iret
loop
icebp
out
in
cmp
cld
icebp
repz
xlat
cmc
hlt
out
mov
stc
lret
ljmp
xor
rcr
jmp
loope
cmp
call
cli
std
in
int
orl
cmp
fcomip
in
in
repnz
rorl
in
out
divb
leave
xor
fnstenv
cmp
sti
inc
loopne
testb
out
lret
call
cmc
stc
sub
loope
ljmp
loope
ret
and
fdivr
mov
lret
in
shll
repz
aam
hlt
ds
jmp
std
ljmp
les
jmp
shl
aad
clc
idiv
cmp
addb
out
cld
out
leave
loopne
mov
sar
xlat
cld
cmp
sti
stc
shr
fstp
cmp
cli
hlt
repz
int
iret
nop
int3
fisttpll
xor
aam
fpatan
mov
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
inc
pop
cmpsl
aaa
out
jle
pop
add
in
lret
cld
test
cli
ffree
xchg
sti
testl
jecxz
out
lret
div
cmp
cmp
sarl
rcr
ds
mov
sbb
mov
int3
cmp
shll
jmp
loope
ret
test
aad
in
test
xchg
into
lock
xor
lret
cmp
std
stc
lock
ss
not
bnd
xchg
xchg
xchg
shl
xchg
ljmp
std
xor
ljmp
ret
fistpll
clc
out
mov
hlt
test
xor
cmp
repnz
cli
out
hlt
add
lea
lret
xchg
orl
int
cld
fcomp
repz
testb
aas
loopne
fimull
in
aam
lret
aaa
clc
int3
int
int
ds
fcmovb
cmc
ret
stc
in
lret
in
roll
repz
cmp
jecxz
cmp
fnstsw
cmc
ret
hlt
sub
mov
sub
fidivl
leave
loope
aas
int
rcr
fdivrp
aam
fxch
fldl
out
shll
in
out
aaa
std
cmp
repnz
repz
bnd
leave
sbb
jmp
xchg
in
in
ljmp
cmpl
cli
stc
fistpll
in
rclb
loopne
ret
xor
leave
mul
icebp
roll
fmull
iret
repz
out
divl
stc
ss
xor
cli
test
ret
sti
cmc
and
sti
dec
nop
xchg
xchg
mov
fsubp
jmp
clc
cli
xor
out
not
sbb
ljmp
test
aad
iret
ljmp
leave
jmp
sti
int3
loope
repz
fsin
mov
mov
repz
loopne
repz
ret
sar
iret
lock
in
test
xlat
loop
ljmp
xchg
shr
repnz
xor
das
xor
cmp
in
stc
repz
repz
in
fsubrp
cli
fiaddl
clc
in
cmp
icebp
loopne
std
fdivrl
in
shl
xchg
jecxz
sbb
ljmp
xor
hlt
cmp
fbstp
ds
rcr
aam
fdiv
shl
fcmovbe
loop
fcmovnu
in
leave
loop
cmp
int
xlat
sar
in
aas
stc
in
fdiv
std
enter
int3
int
loope
xor
repz
in
fcomip
f2xm1
lret
aam
cld
fcmovbe
jmp
lea
fmulp
in
out
repnz
fcom
lret
cmp
hlt
in
lret
xlat
fistpll
vpandn
loop
in
enter
shr
jecxz
fildll
in
ret
fcmovne
call
sarl
aaa
into
icebp
cli
xlat
repz
call
into
xor
out
fadd
out
fcomip
ljmp
repnz
vpmaxub
mov
repz
repnz
xor
cmp
aad
cmp
aam
ljmp
addb
in
sarl
lret
cld
lock
fisttpll
cld
int3
out
fucom
test
ljmp
xor
aas
shl
loope
cmp
repz
mov
leave
xchg
stc
out
xchg
test
out
aam
sti
cmp
divb
repnz
jecxz
in
rorb
std
fmuls
xchg
shl
fadd
out
out
icebp
int3
hlt
dec
fdiv
fcomp
not
call
fcmovne
jmp
repnz
lret
out
xor
loope
loop
jecxz
cli
jmp
test
decl
and
aam
jmp
cmpb
ret
rcl
sub
std
lret
mov
lret
out
repz
fcmovnbe
lret
hlt
sarb
and
loopne
cld
call
in
int3
rcl
cs
shll
call
stc
cmp
fidivrs
addb
in
shl
xor
jecxz
int
repnz
jmp
ss
rcr
or
sti
clc
in
sub
mov
rcl
fstpt
sti
lock
cmp
aas
std
into
std
shr
in
ret
lret
mov
in
enter
in
leave
aad
lock
cmp
xchg
loop
jmp
jecxz
aad
lret
rol
shr
ret
cmp
sar
in
cld
repnz
test
sbb
leave
faddl
repz
ror
bnd
cmp
in
iret
stc
aas
hlt
rcr
xlat
fisttpl
xchg
repz
icebp
shl
xor
cld
movl
test
test
test
add
add
rcl
lret
aad
fstp
sub
cld
lods
push
and
jle
pop
add
cs
int
sarb
out
fdivr
rcl
leave
out
iret
ljmp
aaa
ljmp
cld
fnstcw
jmp
ret
cld
std
fcmovbe
cli
mov
sub
out
les
jmp
sar
or
clc
cli
rorb
in
lret
iret
int
ret
aaa
cmp
xor
aam
aas
jmp
div
repz
aam
test
xchg
ljmp
cs
repz
aam
in
jecxz
mov
lock
int3
cmp
ret
cli
enter
xlat
out
cmp
rcl
rcr
loopne
test
xchg
test
loope
out
cmc
fdivr
les
icebp
cmc
xor
lret
sub
fldl
ret
out
out
adcb
call
xlat
fcmovu
loop
fldz
movl
out
call
iret
out
imul
aam
leave
cld
rcr
loopne
fisttpl
loopne
in
jmp
rcl
sub
rcl
repnz
cmc
cld
aad
cld
lock
aas
call
ljmp
into
aam
cmp
lds
ljmp
ror
call
fucom
out
aad
in
jmp
in
stc
cmp
into
cmp
ret
rcl
hlt
jmp
in
test
sub
out
repnz
cmp
shl
or
lea
out
jecxz
cmc
lret
jmp
sar
cmp
out
in
call
ret
fcomip
fildl
in
aam
fdivs
div
xor
aam
fcmovnb
shl
dec
add
loop
xchg
test
lret
xor
out
hlt
xor
into
iret
enter
aas
fsubp
ds
out
ret
repz
out
not
jmp
lret
fidivrl
stc
in
xchg
iret
clc
fcoms
aam
call
cmp
fucomip
loopne
test
shl
jecxz
cmp
fst
mov
enter
xchg
jmp
out
ror
shr
cld
lret
cmc
lds
cld
cmpb
testb
sti
fimull
ror
icebp
lret
cmp
int3
xor
repz
int3
cli
fld
clc
shl
fucomp
orl
lds
aad
fdiv
std
in
lret
repz
cmp
shl
addl
fldl2t
test
in
xchg
ds
shl
lock
shl
int3
into
ror
in
sti
cmp
addl
lock
ss
cmp
ret
xlat
loope
cli
and
clc
jmp
lock
iret
xor
cmp
cmp
stc
call
in
in
flds
mov
ror
shlb
cmc
leave
lock
ds
xor
ljmp
jmp
fneni(8087
clc
jmp
mov
xor
repz
out
icebp
fcmovne
cmp
sti
cmc
loopne
std
jecxz
stc
leave
in
les
cmp
aad
aaa
ljmp
into
out
std
ds
cmp
cld
jmp
fucomip
into
icebp
shl
out
in
ljmp
div
iret
into
mov
std
loopne
stc
adc
repnz
xor
iret
ror
fdivr
add
out
xchg
in
fists
cmp
aaa
stc
clc
neg
roll
mul
cli
in
into
lret
jmp
lock
jmp
sti
out
jmp
in
cli
aad
sar
addb
cld
mov
ret
cmp
xor
std
cld
ror
aaa
cli
in
mov
ljmp
bnd
aad
xor
out
into
into
rcl
fucomi
icebp
lret
out
icebp
sbb
cld
leave
lret
out
xlat
in
into
std
aaa
out
cmc
ss
cmp
rcl
ds
loopne
cld
in
lret
mov
enter
mov
out
les
out
aam
aad
cli
ss
fcmovnbe
std
cmp
jmp
call
loopne
in
adc
xor
in
jmp
xor
cmp
repz
fst
stc
loop
hlt
decl
out
repz
xor
aam
iret
stc
faddp
lret
fdiv
idiv
adc
addl
sub
int3
loope
lret
xor
aam
cmp
ret
stc
and
fmuls
int3
lret
xor
in
cmp
hlt
repz
in
out
in
test
addb
out
call
int
inc
int3
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
insl
std
and
jl
sub
in
hlt
lock
rcl
mov
lea
enter
shlb
icebp
call
stc
repz
out
call
lret
lret
cli
into
fiaddl
enter
out
divl
ffree
cmp
sti
in
std
cld
sti
int
clc
int3
mov
jmp
xor
fdiv
ss
fprem1
hlt
cmp
roll
lret
mov
out
sti
sarl
lock
cmp
fiaddl
mov
jmp
ljmp
repz
cmp
cmp
repnz
add
cmc
ret
jmp
ljmp
cmc
loop
out
out
rcl
aam
mul
xor
aam
aas
out
jmp
enter
into
std
mov
xchg
mov
in
loope
cmp
std
stc
out
cmp
fscale
cmp
jmp
mov
fcmovbe
dec
lock
xor
xor
enter
rcl
ds
jecxz
cmc
cmp
aam
jmp
in
icebp
ljmp
xor
hlt
ss
cmp
dec
fcomip
cld
div
lret
leave
mov
loope
ret
aaa
fstpt
jmp
out
hlt
aam
stc
cmpl
clc
jecxz
out
repz
clc
hlt
xor
les
aaa
sti
fadds
clc
xlat
enter
out
cld
xchg
rcr
xchg
test
fucom
int3
fucomip
loopne
aad
rcr
aas
sbb
cmc
std
addb
mov
aad
cmp
rol
into
rcl
loopne
clc
rolb
lret
fsubp
cli
mov
loope
call
rcl
xor
ljmp
lret
lret
aam
repz
enter
test
out
in
int
loope
repz
out
lret
sar
in
ror
int3
in
xchg
mov
lds
loopne
mov
icebp
lock
out
fsubr
fcom
cmp
xchg
out
loopne
mov
mov
xchg
out
ret
cmp
aaa
aas
repz
rcr
rcl
ret
fstp
int3
orl
cmp
mov
repz
out
ss
rcl
jmp
aas
adc
sub
xlat
jmp
aad
call
test
shl
fst
cmp
loopne
mov
int
enter
sub
call
ss
lret
jmp
aas
testl
clc
loop
std
call
shl
ret
out
cmp
sti
repz
neg
hlt
stc
jmp
out
test
icebp
in
xor
shl
ret
cmp
loope
loope
aas
xlat
shl
rcr
mov
mov
call
ror
repnz
xor
lock
into
loop
cli
ret
repz
fmuls
mov
aad
xor
jmp
cmp
int
sarl
out
in
out
sbb
ret
ret
nop
int
jmp
das
cmp
iret
aam
ds
fdivp
cmp
hlt
cli
aas
neg
fcomip
mov
loope
cmc
icebp
aam
aaa
fxch
stc
cli
cmp
aaa
fdivr
fucomp
testl
mov
xlat
xor
stc
fcmovb
in
imul
int3
cmp
in
out
cmc
fnclex
cld
jecxz
int
int3
mov
lock
xor
hlt
ror
xlat
loopne
cmpb
in
loope
nop
in
jecxz
or
repz
fucom
hlt
cmp
cmp
xlat
fsubr
mov
cmp
leave
stc
icebp
mov
loopne
add
int3
ss
stc
clc
stc
ss
test
xchg
icebp
in
ljmp
fisttps
icebp
cmp
cmp
out
in
xlat
lret
aad
out
ret
fucomip
shr
leave
sbb
xchg
int3
nop
loopne
rol
ss
fidivrl
aas
out
fstpt
cli
loopne
fld
sarb
in
xchg
mul
leave
lret
sub
out
jecxz
xor
lret
in
fcmovnu
loope
fsubr
in
cmc
rol
shl
in
jmp
loopne
std
lea
shr
iret
divb
aam
lret
std
fdivr
iret
int3
out
xchg
mov
loop
xchg
loope
loop
rcr
call
shll
call
jmp
repz
sbb
ret
aad
lret
add
fmul
rorb
in
iret
shl
fcmovnbe
jmp
cmp
aaa
cmp
test
sar
fcmovnb
loopne
mov
fcmove
lock
shlb
iret
int
in
ror
lret
aaa
sar
shl
fadd
jmp
out
adcl
in
leave
clc
aaa
aaa
out
cmp
cmp
out
aaa
fcompp
loop
xlat
fmulp
fxch
std
fistl
push
or
cmp
jmp
aad
fstl
jmp
sbb
jl
add
out
aad
xor
in
fxch
clc
cmp
test
test
fcmovu
enter
in
xchg
int3
int
stc
cmp
aaa
xor
fdivp
stc
idivb
loop
mov
aad
out
in
rol
out
xchg
ret
faddp
in
call
fsubr
cmp
cmc
addb
inc
in
mov
rcr
lret
not
out
xor
int
into
ret
out
jecxz
fiadds
out
xchg
out
lea
repnz
lret
shr
ror
in
jmp
xchg
repz
fsubr
fsubrp
out
int
das
shl
shl
aam
fucomip
lret
movl
xchg
test
rcll
lret
shl
rcl
cmp
ret
lock
clc
icebp
test
aam
loopne
cld
loopne
mov
das
jecxz
cmp
in
out
repnz
clc
test
mov
repz
fcoml
sar
cmp
cmp
xlat
cmp
jmp
loope
jecxz
decl
mov
mov
repnz
sub
xor
aaa
stc
repz
cmp
cli
xlat
mov
lea
xchg
jecxz
clc
lret
aad
fcmovne
repz
lret
aam
rol
ffree
stc
jmp
in
int
lock
hlt
enter
loop
ljmp
shl
test
addl
fimuls
ss
shll
out
loope
ljmp
call
shrb
ds
shr
in
fstp
rol
std
hlt
cmc
fiadds
in
loop
xchg
in
mov
neg
out
aad
sti
or
adc
ret
leave
mov
or
sarl
aam
lret
fdivrs
iret
repnz
cmp
iret
neg
mov
loope
jecxz
rorl
ss
xor
out
fidivl
out
cmc
cmp
mul
jmp
and
mov
lock
into
out
repz
loop
push
clc
ret
fdivr
in
mov
shlb
aaa
into
repz
sarl
xor
cmp
in
shl
fcom
cmp
lret
and
rclb
hlt
in
xor
aad
aam
rcr
rolb
fiaddl
test
cld
lret
out
shll
out
fcomp
shl
lock
cld
aad
shr
in
cmp
loop
xchg
call
jmp
cmp
cld
lret
cmp
out
leave
xlat
loop
frndint
test
xor
loop
jmp
ljmp
repz
iret
in
xor
shrl
aad
aad
cli
std
out
repnz
shl
fimull
in
cld
out
icebp
ficoml
ror
fucomi
std
stc
fmul
fprem
aam
hlt
in
hlt
out
loop
in
out
neg
fcoml
sub
hlt
fdivr
fdiv
xor
loop
test
mov
mov
loope
loope
int3
into
cs
sti
clc
in
ror
aam
out
repnz
iret
cmp
adc
aad
xchg
loop
xchg
xor
loop
out
into
fdivrl
int3
fadd
sar
cmp
mov
in
in
jmp
vpsrlw
out
ss
cli
int
iret
shl
sar
loop
test
sar
mov
cli
or
fists
stc
in
xor
cmp
aam
loopne
aas
cmp
dec
test
call
xchg
sti
into
cmp
stc
out
cmp
shr
test
test
leave
mov
int
in
xchg
mov
aaa
lret
icebp
out
ror
fdivp
not
jmp
fcmovnu
sub
xchg
int
in
in
out
leave
xor
into
in
cli
ret
sar
stc
std
repnz
mov
fmul
out
iret
mov
fdiv
xor
jmp
fcmovnu
shr
loope
repnz
mov
sub
xor
leave
std
ss
add
mov
add
clc
mov
aad
xor
sar
cmc
lret
xor
sti
fstpt
in
aam
not
mov
loop
fdivr
and
orb
ss
das
cs
lret
ds
fdivrp
sbb
ret
int
jecxz
mov
lret
int
not
sti
in
cs
shr
sti
rolb
call
cmc
ljmp
jecxz
iret
das
aad
iret
cmp
rcr
hlt
addb
aad
fcomi
mov
jecxz
jmp
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
enter
xchg
jle
pop
add
out
lret
not
loop
xlat
out
jmp
cmp
fcmovb
xchg
int
out
loopne
leave
sar
xchg
jecxz
call
hlt
leave
std
lret
fnstcw
cmp
out
lret
rolb
aaa
ds
rcl
fdivrl
dec
in
int3
xchg
out
neg
or
test
xlat
in
out
sub
icebp
aad
ljmp
addl
loopne
in
leave
shl
xor
cld
out
sti
add
aas
xchg
mov
fdivr
enter
test
aad
sarb
xor
xor
cmc
aad
rcl
shl
shl
loop
fcomip
ljmp
out
int3
xor
sbb
xor
jmp
mov
mov
jmp
loop
loopne
fcmovne
out
neg
cmp
icebp
test
aam
mov
jmp
mov
loop
roll
out
fnstcw
cmp
adc
ds
fcompp
mov
int3
mov
cli
roll
iret
ret
fisubrl
cmp
push
ror
icebp
into
fcmovb
cli
ret
xchg
std
pop
call
call
fscale
idivb
in
xlat
std
loope
ret
faddl
mov
lea
div
out
ss
xor
cmp
lret
fincstp
lret
ret
sar
fisttpl
xchg
out
sarl
sti
aaa
cli
in
cld
shl
loope
int3
testb
fdivrp
in
jecxz
out
rol
xor
shl
idivb
loope
icebp
cmp
ret
test
aas
xchg
ljmp
loopne
fsubp
out
out
int
int
fmul
fcomi
fdivrl
out
xabort
incb
mov
std
enter
into
repnz
leave
loope
sbb
call
loope
jmp
repnz
mul
cmp
shl
fcomp
lock
test
aam
repnz
fmul
aam
addl
add
ret
fxch
cld
shr
adcl
fcmovnu
in
loope
out
lret
addl
in
iret
clc
in
ljmp
out
in
shll
fmul
or
ffree
add
leave
test
cmp
jmp
hlt
in
shll
aam
int3
cmp
loopne
aas
adc
movl
clc
mov
shr
xor
div
jmp
int3
int
into
ret
aam
aad
out
mov
cmp
shr
out
in
call
sarl
rcl
div
icebp
loop
test
test
rorl
cs
hlt
cli
icebp
xor
cmp
aas
loop
out
in
fucom
stc
jmp
out
out
fucomip
out
aad
out
out
stc
shl
cmc
cmp
out
test
ljmp
cld
addl
out
cmp
fdiv
cmp
int3
iret
in
repnz
fld
in
jmp
dec
xchg
cld
xchg
mov
jmp
std
lret
loope
idiv
fsubp
repz
decl
leave
int
into
loop
out
sub
cmp
fst
loope
test
out
lock
imul
nop
in
mov
or
ret
aam
hlt
out
iret
jmp
stc
int3
iret
in
inc
bnd
hlt
in
int
mov
or
int
hlt
stc
lock
xor
cmp
fcomip
in
test
sti
cmp
lds
fimull
xor
repnz
jmp
out
int
rol
jmp
les
xchg
iret
xor
jecxz
iret
repnz
shl
std
loopne
icebp
sarl
fisttpl
nop
call
sti
jmp
cld
icebp
cli
loopne
cld
out
mov
hlt
ljmp
out
shl
aam
xor
lret
aas
fiaddl
ret
aam
fstp
jmp
shl
mov
xchg
loopne
jecxz
fcom
std
lret
xlat
addl
test
incb
fldz
cmp
cli
clc
aas
cmp
ror
cmp
ret
addb
jmp
fcmove
aad
imul
rol
sti
les
sar
ds
shr
loope
leave
jecxz
mul
mov
cmc
xchg
in
das
lock
out
repz
aad
fidivrs
cmp
xchg
rorl
fmulp
int3
test
in
lret
fcmovnbe
leave
int
lret
fstpt
fcmovnbe
shl
out
in
fsubp
movb
lock
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
icebp
jno
mov
pop
add
loop
in
iret
xchg
xlat
xor
shl
in
lret
div
cmp
cmp
stc
stc
fcmovu
out
sar
xchg
cmc
xchg
int3
in
cmp
out
iret
cmp
cmp
repz
jecxz
cmc
repz
lock
fiaddl
iret
les
xor
leave
icebp
in
idivb
xor
cmp
roll
div
mov
xchg
test
loopne
shl
aaa
ljmp
cmp
cmc
rolb
enter
shr
out
loope
iret
cmc
aad
xor
cld
cld
cmp
loope
in
jmp
in
int
sub
aaa
lret
cmc
lock
cld
lock
ret
fdivr
loop
xlat
int3
sbb
lret
ror
das
out
sti
rcl
jmp
lret
idivb
fprem1
stc
aam
fadds
clc
out
jmp
adc
aaa
cmp
aaa
aam
aam
ret
out
cli
aam
test
in
fisttpll
out
xor
icebp
aaa
xor
aas
not
xchg
fadd
cmp
push
clc
jecxz
shl
call
cli
iret
lret
enter
rcl
aas
jecxz
ds
jecxz
in
xchg
fadd
ror
xchg
mov
sub
imul
neg
cmc
repnz
fcomi
faddl
and
in
mov
xchg
shlb
int3
cmp
imul
rcl
and
incl
mov
xchg
loope
lret
out
rcl
test
fdiv
xor
idiv
lock
aam
adc
rcr
or
jecxz
clc
cmp
aaa
cmp
int3
aam
cmp
hlt
cmc
rorb
out
leave
call
jmp
in
fcomi
cmp
shl
test
xchg
xchg
xlat
lret
in
mov
cmc
hlt
out
iret
ss
cmp
aad
stc
inc
incb
mov
fmulp
aad
das
shll
sub
lock
repnz
adc
clc
ljmp
leave
loopne
out
cs
hlt
aam
fmul
lret
lret
out
loop
in
in
loope
fucomip
fmul
nop
out
test
xchg
int3
aad
iret
in
shr
ror
xor
cmp
mul
ds
cli
sarb
mov
jecxz
rol
cmp
out
lock
icebp
cmp
clc
shl
fcomip
call
fldl
xlat
jmp
div
ljmp
les
stc
jmp
in
fst
into
loope
jecxz
shr
icebp
cmc
clc
in
leave
addl
loopne
clc
mov
int3
xor
stc
in
int
lret
aam
sbb
jecxz
jmp
lret
int
mov
ror
ret
clc
shr
lock
loope
loopne
std
icebp
hlt
cli
mov
aam
fadd
mov
enter
in
iret
out
in
call
iret
jmp
in
idivl
aam
shl
lock
jmp
addb
in
fsubp
cmc
stc
ljmp
std
repz
rcl
fadds
in
call
loope
loope
sub
aaa
int
repnz
cli
stc
jecxz
faddl
jmp
cli
loope
ljmp
leave
repz
icebp
aad
out
hlt
ret
iret
fcmovnb
iret
call
xor
aam
clc
out
fdivrl
shl
ds
incl
out
in
in
les
enter
rcr
aam
in
loopne
shl
cld
cmp
aam
fucom
ret
or
in
aad
enter
shl
int
ljmp
aas
in
ljmp
int
xchg
xchg
loope
lock
aad
ror
lock
repnz
out
in
loope
in
iret
into
int
ret
int3
aaa
int
loope
cli
in
cli
clc
lret
jmp
jmp
out
xor
icebp
rcr
ss
repnz
aas
into
icebp
int3
shl
repz
leave
in
lret
lret
jecxz
in
ret
repz
idiv
shl
fcom
repz
aad
ds
fimuls
lock
xor
in
out
xor
in
sti
iret
loope
fld
test
call
hlt
aad
in
ficoml
out
repnz
hlt
xor
xor
repz
icebp
out
rolb
out
icebp
leave
fstp
in
cmc
cmc
into
shlb
xor
into
cmp
lret
fcmovu
hlt
rcr
ret
cld
jecxz
mov
rol
xor
iret
aaa
sar
ror
cld
int
std
div
fcmovnb
testl
cmp
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
mov
pop
add
fsubr
test
in
xlat
ret
fstp
repz
rol
ss
fcmovnb
filds
neg
loope
cld
xchg
in
jmp
repz
rcr
sar
fnstsw
addb
out
cld
out
inc
out
xor
call
sti
rcr
stc
ret
icebp
stc
testl
lret
repz
test
stc
icebp
lret
lock
fmulp
fcomi
idiv
cli
in
aam
xchg
xchg
into
stc
int3
ror
std
out
aam
fdivp
adc
ret
hlt
ret
test
std
lret
iret
xor
in
sarl
stc
ror
ret
fcom
std
aam
leave
cli
lds
ljmp
xlat
out
out
rcr
cmp
fcomp
out
cmc
call
pop
enter
xor
enter
into
stc
repz
clc
out
add
aas
sar
sti
lret
in
in
out
ljmp
test
ljmp
not
sbb
sti
stc
jecxz
aam
idiv
neg
fimuls
loopne
clc
cmc
div
sub
add
clc
fisttpl
mov
out
xlat
in
lock
icebp
sar
in
jecxz
test
ret
in
mov
out
clc
out
repz
out
jecxz
leave
shr
cmp
xor
into
std
shl
repnz
ret
jmp
fimull
nop
out
xchg
xor
call
aam
cmp
aad
and
testl
fimull
enter
fbstp
cmp
lret
std
out
repnz
out
jmp
xchg
cmc
out
loopne
ss
out
div
addb
out
mov
idiv
xlat
in
addb
xor
cli
lret
cld
rcl
ljmp
add
loope
mov
int3
mov
out
rcl
cmc
jmp
sti
fsqrt
sarb
in
stc
cmp
icebp
loopne
fcomip
loopne
testl
fmulp
int
repz
into
dec
iret
loop
stc
ret
test
ljmp
xor
jecxz
in
out
lds
aam
ss
testb
xchg
in
incl
fcomip
hlt
xor
repnz
hlt
stc
cmp
fcomp
cmp
cli
out
aad
call
stc
in
leave
in
loopne
xor
hlt
lret
cmp
ror
rcl
cld
cli
clc
adc
in
stc
out
inc
jmp
repz
iret
icebp
iret
cmp
xor
ss
icebp
fidivrl
lock
clc
adc
std
out
adcl
loop
lret
out
out
sbb
sbb
mov
mov
in
in
int3
ljmp
lock
fcmovnbe
clc
xor
neg
lret
mov
xor
int3
xor
in
rcl
loope
shl
cmc
roll
loop
fprem
jecxz
jecxz
cmc
jmp
cmc
std
xor
cmp
cmp
rol
test
fucompp
mov
sbb
shl
shrl
xor
call
cmp
lock
jecxz
loopne
out
movb
test
fucomp
jecxz
clc
enter
sar
cmp
cld
fcomi
fcmovbe
std
in
out
test
mov
divl
out
aam
jmp
iret
icebp
in
jecxz
and
mov
lret
aad
clc
ret
aam
call
fstp
mov
cmp
ficoml
loop
lock
aam
out
ljmp
loop
aam
jmp
fimuls
xchg
jmp
call
out
rcl
cmp
cmp
shl
xlat
shl
enter
fstl
jmp
shlb
iret
repz
into
cmp
out
fdivr
mov
cmp
mov
leave
rorl
ss
ss
xor
ret
loope
jecxz
out
mov
xchg
ret
shl
xor
fcmove
fcmovnbe
repz
cmp
cmp
clc
sub
cmc
xchg
xor
cld
cli
out
std
cmp
xchg
hlt
aad
cmp
xor
ror
fdivp
mov
repz
aas
stc
lret
ret
icebp
loopne
clc
in
mov
testb
lock
int3
ret
cld
jmp
test
in
shl
inc
aad
xchg
mov
xchg
aam
out
xor
call
lock
cmp
fcmovnu
fcmovnb
sub
adc
mov
jmp
leave
aam
rcl
aam
insb
in
add
movsb
jle
pop
add
out
mov
lock
and
rcl
clc
sti
rcr
jmp
shl
fcmove
stc
iret
mov
out
loope
test
in
in
xor
lret
call
jecxz
shl
loopne
xchg
mov
call
sub
rcl
xor
jmp
cmp
cli
clc
aam
fdivr
xor
mov
ret
int3
mov
sti
mov
faddl
lret
out
cmp
rcr
hlt
in
aam
call
shl
repnz
rcl
lock
sub
loopne
aas
repz
mov
in
mov
mov
test
enter
icebp
std
fadds
enter
in
iret
mov
fcoms
sub
jmp
fdivrs
or
adc
clc
xchg
lret
fucom
xchg
in
bnd
rcl
clc
shl
sar
loopne
icebp
clc
sti
cmc
cli
clc
xchg
test
into
mov
test
fidivl
fdiv
clc
cmpb
jmp
enter
mov
repz
in
shr
ljmp
div
shlb
fsub
rol
out
sti
mov
iret
xchg
enter
shl
ret
jmp
out
cmc
adc
sti
shl
cli
fucom
aad
fsubrp
lock
in
out
ret
in
ss
adc
xchg
decb
xchg
stc
rorb
jecxz
int
cmp
lret
aad
fcompp
loop
aam
stc
jmp
in
xchg
xor
call
cmc
jmp
int3
rcr
fcmovnb
cmc
fcmovu
aas
leave
in
in
loopne
iret
in
xchg
in
shr
xor
shlb
cmp
xlat
in
sti
aam
idiv
stc
out
mov
in
ljmp
repz
test
rcl
stc
sti
out
lock
ffree
out
leave
xchg
jmp
cmp
aad
icebp
xor
loopne
loopne
into
incb
call
cld
in
int3
jecxz
stc
clc
in
out
neg
idivb
addl
cmc
xchg
lret
and
out
loopne
lret
loopne
cmp
cmp
xor
rcl
int3
into
loope
jecxz
lret
add
cli
loope
iret
repnz
jecxz
rol
enter
std
clc
xlat
imul
stc
sarl
ss
rcr
ret
fsub
sbb
fsub
shrb
ss
cmc
lock
ljmp
fcmovnb
call
fdivrp
ffree
std
sub
out
rcl
cmc
in
iret
clc
call
cmc
hlt
fcmovnbe
shl
fdivrp
xchg
nop
leave
rcr
aam
xor
loopne
leave
lret
xlat
cmpb
fstp
fcmovnu
cld
fldl
lret
fldl
cs
out
call
fstpt
sub
stc
into
loop
rcr
loop
int3
repnz
imul
int3
aaa
fsqrt
cmp
fcomi
into
flds
xchg
mov
fimuls
mov
int
xor
in
fcomip
cmp
cmc
int
repz
loopne
xchg
hlt
xchg
in
lock
stc
lock
imul
lret
clc
ds
iret
and
out
shl
in
xchg
out
incl
fld
out
int
sti
xor
loopne
rcr
std
aad
fucomip
cmc
testl
nop
shr
iret
ret
xor
cmp
fdivrs
loop
leave
xchg
jecxz
nop
nop
mov
ror
shl
cmp
jmp
hlt
fcmovne
loopne
fmulp
jmp
loop
iret
mov
fstp
xor
iret
icebp
stc
neg
aas
xor
xor
test
xlat
fsubp
fsubr
fstp
and
in
repz
enter
fmul
int
leave
int3
rolb
xchg
mov
in
mov
std
leave
cld
iret
aam
xor
xor
xor
xor
fnstcw
xchg
sti
mov
in
test
shl
call
in
leave
xlat
aas
rcr
fucom
lock
clc
sbb
cmc
aad
ljmp
clc
fdivrp
idiv
lock
in
xlat
hlt
out
jmp
fdiv
fucomip
lock
aaa
aad
divb
ffree
in
into
shlb
xlat
cmp
sar
cld
cmp
aad
mov
in
jecxz
repnz
int3
out
xor
std
int3
idiv
ljmp
orb
fsub
aad
aas
xlat
fcomp
repz
stc
xor
jmp
hlt
loope
icebp
incl
in
fstp
int3
loop
ljmp
into
cli
aaa
call
into
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
cld
sti
test
cli
movb
ror
lret
ss
divl
out
out
jmp
rcl
call
mov
lret
xchg
xchg
out
lds
out
in
repz
cmp
test
sti
mov
leave
lret
loope
repnz
das
ss
out
out
int3
int3
aam
cmc
fadd
rcl
sti
fdivrp
add
fcmovu
xchg
fucom
lock
shll
enter
clc
les
cmp
sarb
shl
fadds
enter
out
lret
in
in
sar
loope
ror
loope
stc
xchg
aad
fucomp
loope
leave
xchg
sub
cli
call
ss
xor
xlat
aam
mov
repz
lret
loop
loop
fdivrs
xor
ror
ss
sar
shr
in
sti
in
jecxz
fcmovnb
xchg
loope
ffreep
mov
in
rcl
ret
test
sbb
cmp
sarl
out
loop
cld
mov
rcl
vshufpd
aam
cmp
fmul
cli
addb
lret
in
cli
in
in
fidivs
fcom
in
lret
icebp
in
int
cmp
call
decl
repz
ljmp
out
cmp
std
test
sub
loope
cmp
clc
out
fiadds
incb
stc
imul
xor
iret
adc
cmp
neg
loopne
cld
stc
leave
mov
icebp
call
cs
repnz
cmp
ret
out
fisttpll
lea
iret
icebp
cmp
shl
out
add
sti
call
fsubr
fcom
icebp
in
xor
lock
in
out
cmc
std
repz
lock
out
rcl
ret
leave
test
clc
ret
lret
lock
cmp
jmp
hlt
cld
lret
cmp
clc
in
xlat
xchg
leave
in
mov
fiaddl
aam
ljmp
fildl
roll
sbb
fsubr
repnz
aas
enter
cmp
call
fdivrs
call
fsub
jecxz
sti
jecxz
call
ret
int
aaa
idiv
lret
clc
test
neg
rcl
clc
aam
enter
call
repnz
fdivrs
xor
fdivr
shl
sar
inc
rolb
lret
loop
popl
ss
fcmove
enter
lock
sar
sti
hlt
in
rorl
fmul
xchg
xor
jmp
aas
ror
cmp
hlt
iret
xchg
cmp
std
xchg
lds
xchg
int
xlat
in
rol
iret
xlat
aam
loope,pt
std
incl
leave
call
ret
jmp
aas
aad
xor
cli
cmp
stc
cmc
repnz
aam
ret
in
xchg
jmp
mov
repz
xchg
ret
hlt
jmp
rcr
jmp
repnz
repnz
mov
clc
xchg
ljmp
mov
lock
jmp
xor
hlt
fsub
cmc
std
stc
test
mov
test
mov
test
out
int
stc
cmp
fidivrl
into
cli
fcmovb
iret
fldl
in
int3
lock
into
mov
int
fidivrl
testl
clc
loope
call
movl
stc
shr
shl
mul
xlat
incb
out
fld
enter
test
jmp
hlt
divb
lret
cs
icebp
neg
fcomp
cmc
mov
int
inc
and
cmc
ds
rcr
iret
aas
int3
cmp
les
sti
fisttpl
mov
cmc
jmp
shr
jmp
cmp
sar
aas
mov
xor
stc
ljmp
out
iret
iret
mov
xor
fcmovnu
sti
jecxz
fsub
shr
orl
cli
fprem1
jecxz
cmp
cli
test
ljmp
ret
xor
jmp
repz
idivb
cmp
and
call
xchg
jmp
or
shrl
xor
shl
stc
int
ror
test
rol
imul
idiv
out
push
in
xchg
in
xor
aam
cmc
int3
out
xor
out
adc
ss
cmc
vpinsrw
ljmp
in
xor
out
cli
aas
cli
ret
fucomi
ret
leave
loope
mov
lock
icebp
jecxz
fucomi
ljmp
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
or
scas
jle
or
jl
idivb
fnstsw
rcr
lret
xchg
out
fcmovu
shr
xchg
hlt
call
xlat
xor
iret
aam
iret
rcl
in
aam
test
iret
fstp
xchg
jmp
call
xor
sti
in
cmp
neg
fisttps
std
int3
lret
loope
out
in
xlat
sti
out
stc
leave
call
neg
addl
jecxz
mov
rol
int
int
cmp
cld
shr
rolb
addl
fiaddl
xlat
lock
frndint
rcl
in
cmp
loopne
cmp
in
aam
fucomip
jmp
cli
xchg
in
repnz
cmp
sar
lret
repz
and
fimuls
in
clc
roll
jmp
xor
das
idiv
aam
enter
cmc
lds
decl
fstl
cs
cmp
int
cmp
fucomp
rolb
std
xchg
lea
hlt
hlt
repnz
xor
idivb
fdivp
incl
leave
loop
mov
fsub
shl
shl
fdivrs
cli
ss
repz
shr
std
jmp
mov
in
call
in
aaa
f2xm1
sti
cld
cmp
ret
cmp
xchg
jecxz
mov
enter
fsubrp
aaa
test
lock
ror
int
out
aad
fdivrp
in
jmp
cmp
int
jecxz
jecxz
call
clc
lret
out
in
aam
iret
cli
loopne
test
or
cld
xor
xor
mov
aam
sti
sub
cmpl
out
in
out
fstp
sti
adc
in
divl
stc
mov
ss
lock
int3
lock
aas
in
jecxz
in
filds
out
call
out
fdivrl
shr
xor
cld
fld
fcmovu
mov
lds
lock
into
ljmp
iret
loopne
leave
flds
xchg
mov
mov
xor
ljmp
cmp
test
out
xchg
in
loop
fdivr
out
test
ljmp
cmp
sar
cmp
cld
std
aad
stc
hlt
mov
fxch
enter
iret
shll
xor
cmp
out
aas
ss
jecxz
sti
xchg
cli
int
fsubr
in
cmc
xor
ljmp
aam
fdivrp
aas
out
fcmovb
call
mov
fiadds
icebp
ret
ljmp
repz
ljmp
loop
test
jmp
jecxz,pn
in
stc
int3
into
cmc
ror
testb
test
fcomp
fiadds
int3
test
lret
aas
icebp
clc
cmp
fdiv
cmp
test
ret
jmp
lock
repz
int
xor
out
iret
fidivl
call
sar
ret
in
cld
lret
mov
xchg
hlt
fsubrp
xor
in
call
and
xchg
mov
loopne
xchg
repnz
cmp
cmp
enter
icebp
stc
in
sarb
repnz
mov
lock
icebp
aaa
lret
sti
out
out
stc
ds
cmp
out
ror
in
int3
cld
mov
shl
repz
fidivrl
into
int
not
cld
rcl
fsubp
lret
stc
mov
xchg
out
fdiv
das
jmp
cli
cmc
int
ljmp
aam
cmc
out
mov
xchg
out
enter
int
out
icebp
rcr
hlt
out
shr
repz
mul
jmp
out
in
test
cld
mov
xor
jmp
sti
std
aas
jecxz
clc
test
test
xchg
jmp
fmuls
sahf
fs
add
shlb
clc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
