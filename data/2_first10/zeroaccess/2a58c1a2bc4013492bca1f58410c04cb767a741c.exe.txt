push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
popf
mov
jo
jo
in
jo
rcl
aad
ror
rol
pop
push
add
fildl
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
mov
movsb
add
mov
lcall
in
cmpsb
das
hlt
jp
inc
bound
sub
stc
xor
jmp
fidivl
out
mov
jnp
sbb
dec
loopne
mov
pop
cld
mov
movsl
pop
xchg
mov
and
push
cmp
and
scas
xor
into
fwait
aas
ss
stos
outsb
movsb
mov
shll
dec
or
ret
addb
mov
sub
dec
jne
xchg
in
sub
cmp
cwtl
push
or
add
push
pushf
or
stos
shl
mov
mov
dec
dec
xchg
ss
mov
mov
imul
mov
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
lret
in
jo
in
jo
fisubl
add
or
cwtl
or
stc
pop
xchg
cmpsl
int3
pop
push
or
adc
test
push
fdivp
movsb
sbb
and
adc
cwtl
insb
push
fdivrl
push
sti
inc
and
repnz
add
pushf
insl
jae
push
inc
stos
cwtl
dec
sub
cmc
mov
push
mov
clc
cmp
iret
sahf
sbb
jp
pop
add
push
pushf
push
pop
movsb
lret
cmp
sbb
cmpsl
or
xor
mov
mov
inc
push
mov
ficoml
inc
inc
fisubrs
aas
xchg
mov
mov
outsl
jmp
add
jb
and
xor
mov
xor
ja
dec
fsts
inc
inc
pop
pusha
and
clc
repnz
shrb
sahf
rclb
cmp
sbb
scas
jbe
ss
mov
mov
inc
int3
pusha
mov
clc
cli
std
fstpl
cmp
enter
mov
sbb
sbb
inc
dec
decl
jo
jle
pop
xchg
sbb
lds
js
dec
fistpl
xor
push
ret
ljmp
adc
mov
in
call
nop
inc
dec
push
jno
xchg
push
pop
dec
repz
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
insl
and
jo
jg
jo
mov
gs
xchg
out
in
push
cs
or
stos
sbb
jp
fdivl
cmp
cld
sbb
push
imul
sub
out
test
jl
cwtl
or
pop
cmp
lock
out
inc
xchg
and
insl
cltd
push
pop
mov
es
rcrb
rcl
jne
mov
pusha
or
sti
or
push
popa
aam
popa
nop
mov
fstpl
mov
xor
pop
inc
in
adc
movsb
sbbl
jp
outsl
jae
movsl
les
mov
andl
jnp
stos
out
cmp
in
mov
jg
fidivl
mov
fcompl
jp
inc
rcl
mov
push
mov
push
arpl
xchg
sbb
jo
sbb
les
sub
dec
sarb
mov
testl
notl
mov
filds
mov
mov
sbb
sbb
rcrb
orl
add
add
or
out
shrl
sub
xor
loop
push
lods
ret
sub
rclb
push
sbb
jmp
pop
daa
or
xlat
sbb
outsl
mov
and
pop
scas
shrl
xor
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
jl
dec
ja
jl
jo
jg
jo
adc
cltd
adc
push
xchg
jbe
lea
sti
xchg
or
subb
mov
cltd
dec
cwtl
adc
push
lret
push
push
jbe
xchg
cmp
rorl
inc
dec
push
sti
cltd
sbb
stos
inc
jle
mov
gs
inc
mov
daa
or
adc
sub
jo
jnp
lret
mov
jnp
in
sbb
jecxz
shlb
insb
int3
sub
mov
push
ja
nop
repnz
in
pop
sbb
cmpsl
int
jmp
leave
pop
cltd
push
stos
xorb
rcr
addr16
fisubrl
ljmp
dec
std
xchg
push
jp
sbb
mov
ss
mov
fwait
outsb
cli
inc
sub
nop
stos
jg
repz
lea
xchg
cmpsl
lods
loope
bound
in
lods
jo
pop
arpl
fdivr
push
jo
or
movsb
rcr
dec
push
out
mov
lea
dec
cmp
dec
pop
xchg
mov
or
jno
out
std
xchg
fcmovbe
xor
fwait
mov
subl
daa
stos
test
push
push
fisttpll
rclb
push
jp
fidivl
sub
mov
enter
fwait
in
aad
sahf
sbb
mov
inc
les
addr16
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
mov
jnp
jo
jge
jo
xor
test
nop
lret
sub
and
sahf
or
aaa
push
inc
adc
pop
stos
inc
jb
out
movsb
std
push
jne
jl
cmp
pop
fxch
sub
ljmp
xor
dec
outsb
imul
lahf
loopne
mov
xor
jns
pop
sub
mov
push
insl
aam
loopne
or
mov
fimuls
iret
add
ds
mov
sahf
ljmp
cmp
pop
push
pop
pop
insb
inc
and
ja
mov
adc
fstps
sub
pop
and
mov
bound
imul
jmp
insl
les
dec
sbb
repnz
adc
jo
negl
adc
jne
adc
adc
adc
mov
jmp
mov
xchg
out
test
cs
cmp
es
data16
les
int
mov
andb
dec
mov
cmp
xchg
adc
mov
sbb
popf
cmp
pop
out
cmpsl
push
out
out
movsb
and
outsb
push
in
push
jns
sbb
mov
testb
lcall
daa
or
adc
push
xchg
lret
adc
iret
pop
cmp
push
mov
jbe
stos
and
add
dec
sbb
sbb
push
add
xchg
lahf
movsb
shr
gs
repz
xor
insb
sub
jo
mulb
pop
ds
inc
ds
pop
aaa
lret
clc
mov
xor
push
push
sbb
rcrb
fstpt
fistps
inc
aas
xchg
jp
add
imul
mov
ljmp
mov
sbb
adc
pop
adc
xchg
out
iret
ret
cmc
xor
cld
clc
aaa
or
fistpll
aas
shlb
stos
aad
sub
lcall
out
adc
sbb
sbb
insl
bound
cli
fs
nop
popf
es
cld
int
ror
mov
dec
mov
stos
xor
sbb
lret
pop
aas
imul
dec
add
push
outsl
and
adcl
pop
mov
mov
cmpl
cmpsl
loopne
or
stos
cld
in
aaa
stos
pop
adc
lret
jge
mov
jge
call
and
cmpsl
repz
xor
call
cwtl
and
into
out
jb
xchg
loope
and
sar
sarl
outsb
pop
hlt
cmpsl
enter
testb
jne
daa
mov
js
inc
jecxz
repz
hlt
fwait
sbb
push
xchg
xlat
jp
dec
inc
popa
inc
lret
std
lret
jg
inc
pop
jp
js
into
pop
push
cs
jae
push
dec
or
xchg
add
xor
lcall
divl
aas
iret
arpl
test
ret
xor
sbb
shlb
cmc
sub
add
and
lret
insl
xchg
loop
repz
imul
xor
lret
push
pusha
js
cli
push
cmpb
push
xchg
sbb
mov
push
mov
out
flds
cmpsb
or
mov
stos
dec
mov
jne
jns
mov
sbb
lods
inc
push
rcrb
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
cmpsl
sbb
cmp
jo
xchg
jge
jo
imul
lret
xor
and
cmp
in
adc
insb
mov
push
add
test
fadds
mov
xlat
xor
cmpsb
xor
ljmp
dec
inc
adc
sbbb
cltd
push
or
push
repnz
daa
xchg
cmp
gs
add
mov
fisttpl
xchg
sarl
push
and
mov
and
mov
xchg
sbb
dec
mov
mov
out
push
jbe
adc
inc
mov
lods
push
xor
add
and
movsb
add
jp
inc
mov
pop
inc
inc
jae
push
jno
rcll
sub
cmpb
or
inc
adc
xchg
xchg
test
ds
outsl
les
nop
stos
stc
lret
rcl
jecxz
push
mov
and
ror
std
pop
jae
ss
fidivs
mov
dec
and
out
push
std
out
jno
lds
lahf
and
inc
jno
inc
sub
mov
cwtl
xor
jno
dec
mov
ja
into
loop
sub
pop
and
int
cmp
push
adc
aam
loop
in
add
or
mov
mov
fs
stos
mov
xchg
sbb
addr16
xchg
sub
pop
scas
xor
mov
or
or
into
lods
js
xor
jno
rcr
mov
push
cld
cmpb
pop
icebp
mov
xchg
lret
adc
fcoml
push
ficoms
rcrb
adc
jne
pop
and
xchg
call
shrl
push
xor
jae
jne
jbe
jmp
mov
adcb
test
repz
dec
mov
fsubrs
mov
adc
pusha
jl
sbb
fbstp
inc
sbb
mov
fmul
jge
pop
sbb
aaa
add
fwait
and
inc
fidivl
push
das
out
jmp
aam
cltd
adc
lea
push
loop,pt
shlb
loope
jmp
cs
push
aad
push
stos
pop
push
xchg
arpl
into
daa
dec
dec
lret
imul
jmp
insb
pop
adc
or
inc
sbb
cli
mov
push
sbb
rorb
sbb
adc
stos
add
clc
test
dec
ret
out
pop
xchg
lock
xor
pop
stos
lods
fisubrs
sbb
test
jo
dec
sub
addl
rolb
imul
jns
adc
fiadds
enter
mov
scas
cmp
or
icebp
nop
inc
jno
sahf
rcrb
das
aaa
out
shlb
test
fwait
das
jne
insl
sbb
lock
dec
or
sub
pop
in
inc
mov
inc
jb
push
int3
stc
pop
in
lcall
sahf
adc
adc
loop
inc
int
cltd
and
xchg
inc
xchg
leave
sti
ds
fs
icebp
mov
jne
jge
xorl
ret
repz
sbb
inc
or
adc
repnz
test
mov
xlat
xchg
push
xchg
or
icebp
iret
addr16
int3
out
pop
sub
cmp
nop
fcoml
cwtl
jg
inc
cld
xor
dec
inc
inc
add
and
add
add
or
jno
push
scas
int3
cmpsl
jp
into
out
add
jo
jge
jo
mov
pusha
fst
shll
int
push
fsubp
lret
das
add
mov
mov
xor
push
jae
or
pop
out
test
xor
movsb
add
and
push
mov
loope
stc
bound
dec
lret
add
cmpsb
roll
ss
fstpl
pushf
jns
adc
lcall
lods
fdiv
xor
sarl
aas
lret
sti
sbb
test
xchg
xor
dec
fsts
pop
sbb
xchg
or
jmp
mov
mov
pop
or
mov
inc
lock
iret
pop
jae
jecxz
jge
inc
xor
imul
call
jge
inc
mov
insb
lock
mov
mov
in
xchg
mov
subb
add
mov
lods
jmp
push
jg
mov
mov
mov
adc
xchg
pusha
cmp
push
inc
inc
mov
jo
adc
jmp
adc
sbb
out
xchg
jg
xor
ss
add
adc
fmul
stos
jb
fcoml
xchg
push
adc
pop
pop
imul
arpl
rorl
jle
bound
pop
push
xor
popa
or
in
push
movl
push
data16
negb
ds
mov
call
inc
sahf
sub
push
mov
pop
and
das
mov
dec
pusha
stc
sbb
gs
lea
in
idiv
xor
jo
add
addr16
mov
call
sub
xor
dec
ja
test
inc
sbbb
out
ljmp
adc
push
and
shll
and
dec
and
xchg
mov
fs
inc
rcrb
dec
inc
mov
or
adc
fidivrl
jbe
je
aam
mov
mov
push
push
xor
mov
inc
fildll
lods
pop
push
imul
mov
sbb
or
pop
mov
std
push
cmc
cli
dec
mov
ret
cmc
iret
dec
cmp
jge
inc
loope
push
std
cmpsb
imul
popf
jnp
sub
lret
add
lahf
fmull
mov
or
arpl
loopne
fimull
lods
es
jle
cltd
loope
xor
daa
lret
push
mov
dec
jl
inc
test
pushl
loop
les
adc
xchg
clc
fwait
mov
mov
push
leave
jmp
test
sbb
test
int
aam
clc
les
jle
stos
test
fcomps
sbb
inc
popf
sti
negl
cmc
aas
pop
stos
call
popf
rcrl
cmpsl
add
rcl
roll
pop
jp
stos
std
mov
test
shl
mov
sub
cmpsb
in
jns
push
test
rorl
xchg
sbb
mov
nop
pop
mov
xchg
mov
xor
popw
shlb
sbb
sub
test
xchg
mov
add
push
pop
ficompl
dec
push
js
push
fadds
sahf
or
imul
inc
mov
ret
popa
inc
jnp
or
inc
jecxz
lahf
xlat
aam
subl
data16
inc
mov
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
popa
add
add
xchg
jge
jo
jecxz
or
imulb
inc
outsb
or
jp
dec
xor
sbb
outsb
mov
cmp
insl
iret
add
addr16
pusha
xchg
cmpl
pop
mov
or
push
test
xchg
dec
testb
jg
lods
sahf
addr16
cmp
mov
mov
fdivp
push
jb,pn
adc
iret
adc
bound
push
and
jbe
mov
dec
stos
cmpsl
xchg
push
cltd
into
or
sbbl
in
rclb
sub
icebp
andl
cmpsb
lds
sub
sbb
xchg
mov
mov
push
jnp
int
incl
jns
mov
xor
addb
jp
cmp
push
ljmp
dec
add
stc
sub
jb
lret
mov
mov
xor
mov
mov
mov
push
call
cmp
xchg
loop
and
ficoms
les
mov
mov
or
popa
mov
clc
dec
mov
cwtl
pop
jge
pop
dec
ljmp
or
sbb
mov
fcompl
pop
cmp
insb
mov
adc
xor
stos
popf
add
mov
lea
je
pop
push
call
mov
and
dec
imul
aas
xor
lret
sbb
adc
push
lret
pop
aam
mov
idiv
push
ret
pop
and
pop
aas
dec
sub
pop
push
jae
sahf
mov
clc
mov
and
out
icebp
int3
jno
pop
mov
daa
add
call
std
push
pop
fisttpll
sub
lret
pop
lock
and
add
stc
inc
xlat
pop
mov
lahf
adcl
dec
dec
ret
dec
dec
or
jo
rcll
gs
mov
pop
dec
push
sbbl
push
mov
pop
jb
jg
cmpl
cld
sbb
xorl
movsb
dec
push
movsl
stos
imul
rorl
sub
ret
repnz
xchg
pop
shll
inc
push
push
ss
fstp
pop
xlat
repz
dec
sahf
xchg
jp
stos
xor
fistpl
xor
push
lret
fadd
cmpsl
ret
inc
xchg
mov
fwait
mov
mov
inc
pop
fstpl
add
sbb
mov
pop
fisttps
call
jns
pop
fbld
loop
loopne
sub
or
dec
idivl
cmpsl
mov
dec
pop
jmp
bound
push
imul
fsub
xor
jne
cmp
dec
cmp
std
mov
lds
and
xor
adc
test
cmpsl
jno
fdivrl
shll
ja
addr16
or
push
fildll
dec
xor
mov
test
out
xadd
inc
gs
cwtl
mov
int3
stos
rep
lods
aas
cs
addr16
leave
jae
pop
jecxz
andb
add
stos
inc
jb
test
adc
rolb
imul
cmp
sub
lods
shld
jb
fsin
aad
sub
cmpsl
hlt
in
and
jecxz
iret
sahf
iret
jae
adc
mov
adc
fldenv
jmp
rcl
inc
mov
jo
inc
fmull
xlat
cli
sbb
pop
fisubs
push
sbb
cmp
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
mov
add
jo
jge
jo
adc
lret
lcall
pop
cmp
sbb
or
out
dec
inc
std
push
mov
xor
loope
inc
xchg
test
push
push
mov
xchg
clc
mov
push
jecxz
mov
push
pusha
xchg
ret
addb
repnz
notb
daa
stc
sbb
iret
mov
lods
sbb
mov
loope
mov
sbbl
xchg
xor
pusha
xchg
popa
stc
sbb
mov
negl
insb
mov
cmp
clc
cmp
hlt
bound
in
sbb
xor
dec
xor
inc
loop
les
sarl
mov
cwtl
or
bound
mov
mov
xchg
mov
rcrb
rcrl
mov
and
pop
mov
mov
mov
outsb
jbe
ret
scas
cmp
call
and
test
sbb
pop
popa
out
popf
dec
cmp
aam
or
call
pop
adc
adc
jl
fisubrl
and
movsb
xchg
xchg
xor
adc
movsb
sbb
or
fmull
pop
fiaddl
adc
insb
stc
fnstcw
and
sbb
jmp
mov
out
scas
dec
pop
into
fsubrs
cmp
clc
das
sbb
adc
mov
rcrb
fiadds
lret
dec
jnp
adc
add
mov
ret
ds
mov
add
leave
jp
int
inc
lods
pop
mov
fcoml
add
push
mov
sbbl
call
clc
inc
adc
xchg
std
clc
aam
out
sub
jns
and
aad
add
inc
mov
lahf
inc
inc
sub
ljmp
cld
sub
js
xchg
xchg
rorb
push
pop
scas
sub
pop
xchg
inc
clc
pop
in
mov
push
push
xchg
in
jmp
notb
int3
fadd
out
mov
jne
pop
faddl
es
jl
rol
arpl
stc
sub
in
outsl
xchg
hlt
cmp
ret
jno
in
movsl
aam
into
sub
or
push
sbb
sar
ficompl
or
xor
lcall
sub
pop
xchg
in
lock
mov
add
jo
std
pop
orb
adc
sbb
adc
sub
cmp
int3
negl
daa
iret
push
mov
jg
movb
mov
pop
xor
xchg
pop
cmp
stos
pop
lret
adc
or
jns
ficoml
xor
push
adc
mov
xchg
ds
dec
pop
rclb
or
pop
push
leave
mov
xchg
xlat
lcall
mov
imul
gs
std
xor
sbb
and
sbb
inc
jns
push
xchg
jns
xchg
dec
adcl
sub
ss
push
test
cltd
in
out
push
cmp
inc
dec
adc
cli
add
push
stos
inc
and
mov
stc
push
loopne
shl
aaa
sub
ja
mov
fisttpl
add
add
out
loopne
in
jnp
jmp
loopne
jmp
xchg
jge
jo
imul
les
outsl
stos
rcrl
test
fmull
lret
arpl
out
lea
mov
lods
add
inc
cmc
cmp
fiadds
add
adc
pop
bound
or
push
jno
std
int
sti
sbb
push
test
and
cltd
shrl
lret
push
or
mov
aad
push
outsb
out
test
push
int
decl
imul
xchg
fwait
test
ljmp
fistl
clc
adc
fisttpl
popl
ss
ljmp
jle
pop
xchg
popa
mov
ret
stos
scas
sahf
call
xlat
in
pop
add
mov
mov
fnstcw
add
dec
xchg
outsl
pop
leave
or
jge
inc
lcall
test
inc
jnp
xor
push
ss
sbb
or
popa
push
fwait
loop
jne
mov
in
jl
fcmovbe
fists
push
push
insb
mov
loopnew
lds
addr16
mov
xor
jns
cltd
cli
lock
mov
push
mov
xor
sbb
add
mov
imul
iret
int3
lcall
mov
inc
jle
lcall
jnp
mov
shrb
mov
xchg
sub
lcall
pop
aad
aas
dec
or
pop
pusha
or
insb
mov
sarb
mov
adc
hlt
mov
cltd
rcr
test
gs
dec
pop
adc
xchg
shrl
mov
jle
scas
in
lock
sub
clc
aaa
dec
xor
cmpsb
add
jnp
movsl
fcoml
notl
xchg
cli
scas
mov
inc
mov
mov
xchg
and
xchg
xchg
out
cmpsb
cltd
stos
add
fs
xor
rcrb
pop
lcall
jae
push
fildll
aam
sar
pop
mov
scas
mov
dec
lds
mov
or
gs
enter
adc
pop
xor
push
movsb
outsb
or
insb
mov
test
aad
cmp
mov
imul
stos
push
ret
jl
int3
aaa
mov
ret
adc
lds
mov
sbb
sbb
push
sahf
je
add
inc
sbb
xor
data16
sahf
shll
insl
fs
cld
push
sbbb
sub
cmp
out
aas
cltd
xchg
or
adc
pop
out
sbb
and
js
add
sahf
into
mov
in
pusha
sahf
decl
inc
xlat
jae
mov
jp
dec
xchg
xor
xor
push
cmp
adc
ret
adc
insb
divb
jecxz
push
aas
stos
or
out
inc
or
xchg
scas
jg,pn
mov
jge
jle
push
adc
icebp
xchg
fdivp
mov
cmp
roll
sbb
mov
in
sti
fstps
aaa
push
test
sbb
add
movups
inc
loop
fwait
jle
cmp
cmp
mov
lret
jl
int3
xchg
push
inc
sbb
inc
imul
outsl
ret
pushf
loopne
test
mov
sbb
fdivs
out
fisttpl
cli
das
test
push
dec
std
lods
popf
cltd
mov
mov
mov
jg
xor
loopne
sbb
jns
and
arpl
stos
xchg
in
xchg
mov
push
out
stc
jmp
data16
in
int3
jne
popa
jno
imul
dec
ds
jo
fwait
in
lcall
cmp
mov
lds
fdivs
cwtl
stos
or
es
pop
ficompl
and
and
es
mov
aad
loop
adc
movsl
or
push
adc
cmp
mov
xor
fsub
mov
fisttpll
scas
mov
lds
xlat
clc
out
add
push
or
sbb
mov
push
and
jae
xchg
aas
mov
aam
xor
jg
mov
shl
lret
sub
mov
mov
cmp
adc
sbb
xor
into
push
inc
int3
jae
mov
les
not
cli
sbb
ja
out
xchg
dec
xchg
push
push
cmp
dec
pop
pop
std
dec
call
rclb
mov
fidivl
adc
lret
popa
ret
xor
imul
cmpsl
jg
shl
and
xlat
scas
stos
femms
pushf
and
adc
push
out
push
jae
pop
in
sar
pop
in
jae
xor
bound
imul
cmpsb
jno
dec
and
cmp
xor
lea
lods
sub
adc
add
cmp
dec
push
jecxz
scas
push
or
xor
xor
xchg
add
adc
movsb
roll
inc
jp
inc
mov
or
pusha
fadds
jnp
bound
loopne
hlt
out
cmp
mov
xchg
mov
lods
pop
inc
mov
daa
jl
mov
jp
daa
out
or
loop
sbb
into
imul
sub
xor
mov
pop
mov
inc
or
pop
shll
insl
lds
lock
rcll
and
and
lret
xor
neg
into
das
mov
or
outsb
xchg
mov
jnp
and
mov
cmc
push
mov
fdivrl
mov
xchg
lods
adc
jo
dec
inc
pop
fisubl
dec
sbb
dec
dec
out
filds
jmp
sub
ja
jb
cli
bound
stc
je
adc
push
popf
ret
jae
and
int
mov
je
rcll
fists
push
push
inc
cmp
and
inc
push
xchg
cmp
jg
xchg
daa
rcl
jnp
jecxz
dec
pushl
dec
mov
cmpsl
and
inc
or
pop
or
sbbb
mov
mov
mov
push
and
xor
xor
movsl
adc
cmp
pop
stc
sub
pop
dec
sti
repz
daa
rolb
inc
lret
test
and
insl
mov
adc
push
mov
and
mov
sub
push
pop
repz
scas
hlt
fdivrs
jl
out
lds
mov
rcrl
and
cmp
fs
jle
add
inc
add
xchg
add
xchg
call
lock
popa
js
mov
xchg
jbe
aad
mov
push
mov
mov
or
mov
cli
cmp
or
iret
movsl
insb
icebp
js
sbb
loop
cwtl
fs
pop
adc
roll
or
sub
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
sahf
cmp
push
adc
xchg
jge
jo
push
mov
dec
iret
test
mov
movsb
sub
ss
inc
add
or
shrl
pop
mov
xchg
cwtl
lcall
and
test
loopne
jns
jg
mov
testb
jge
xchg
test
adc
mov
inc
sbb
pop
das
js
hlt
or
outsb
movntq
stos
out
hlt
mov
jle
ljmp
rolb
jb
lods
popa
mov
das
sub
fld
adc
xchg
clc
bound
ret
in
cwtl
and
xchg
pusha
inc
mov
repz
insl
dec
ficompl
dec
pop
pop
fnstcw
icebp
push
lods
int
jge
rorb
jle
ds
scas
or
mov
ljmp
pop
daa
popf
fisubrs
sub
mov
or
mov
shll
add
push
mov
jnp
jmp
adc
dec
pop
dec
pop
insb
imul
iret
cmpsl
aad
jge
push
jmp
xchg
sbb
and
xor
add
aam
outsb
and
shrb
xor
cmp
out
in
sub
bound
test
in
sub
test
test
call
loopne
add
jecxz
inc
dec
retw
jae
fs
sub
movsb
faddp
dec
and
inc
cli
xor
xchg
lods
mov
add
cmp
scas
iret
mov
mov
mov
sti
nop
sbb
rclb
xchg
and
cmp
cmp
out
cmpsl
cmp
and
out
arpl
xchg
pop
mov
adc
mov
jecxz
pushf
addr16
mov
dec
into
jne
inc
data16
je
lock
jnp
lret
in
addb
dec
int
popa
es
adc
loope
or
mov
and
fidivrs
jecxz
fiaddl
jns
push
out
inc
jo
add
std
mov
mov
mov
lock
out
rcrb
mov
arpl
push
push
inc
stc
jnp
shl
lock
pop
popa
sbbb
stos
mov
adc
fdivrp
cld
scas
push
jo
and
jne
xlat
push
dec
arpl
jne
decl
sbb
ret
out
hlt
nop
fildl
imull
in
pop
jb
pop
imul
inc
js
dec
pushf
mov
imul
js
mov
mov
xor
stos
adc
mov
sbb
in
mov
sbb
mov
xor
cmc
stos
test
mov
jg
sbb
scas
cmc
sub
out
add
paddb
xchg
add
xchg
jbe
sub
dec
mov
sti
xchg
scas
push
inc
shlb
daa
add
xor
jge
ds
ds
jge
clc
lds
lahf
cs
pop
xchg
xorb
bound
mulb
push
cmp
adc
cmpl
scas
sbb
pop
dec
movsl
mov
push
cmp
pop
pusha
jecxz
in
cltd
sub
add
popa
mov
pop
out
xlat
sub
sub
mov
pop
pop
aad
ds
xchg
adc
mov
repz
jle
gs
jnp
pop
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
pop
jmp
in
push
jo
sbb
jo
add
ja
pop
ljmp
ss
inc
hlt
xchg
inc
std
jmp
aas
insl
dec
nop
sbb
inc
lcall
xchg
ja
imul
sbb
push
mov
push
inc
xchg
shrl
xchg
push
mov
mulb
test
roll
or
dec
sub
dec
xchg
dec
xor
cwtl
movsl
std
leave
jne
xchg
or
xchg
bound
dec
cmp
mov
movb
jb
xchg
stc
jae
adc
xor
testb
scas
mov
pop
in
sbb
and
mov
mov
insl
cmpb
or
xlat
push
or
mov
gs
or
xchg
pop
mov
sti
xor
fldl
test
lcall
lods
mov
out
push
add
pop
das
xor
sub
inc
pop
cmpsb
inc
sbb
inc
dec
cmc
out
popf
movsl
call
fdivs
stc
jno
out
in
popf
add
std
or
mov
mov
add
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
out
add
jo
sbb
jo
gs
mov
arpl
xchg
movsl
mov
hlt
out
aas
fnstsw
dec
xorb
pop
xchg
sbbb
adcb
mov
test
and
scas
pop
insl
jns
xor
or
push
pop
or
arpl
shrb
cmp
inc
leave
sahf
mov
sbb
push
adc
bsf
dec
adc
xorb
lcall
ret
lods
ss
movswl
mov
test
in
inc
mov
fidivrs
mov
mov
insl
xchg
sbb
mov
dec
mov
jp
lds
shrb
lods
xchg
lods
call
mov
dec
ss
loopne
pop
int
push
mov
and
xchg
out
imul
mov
push
popa
lret
add
sbb
sub
lret
out
sub
cmp
clc
je
sti
pop
push
cmp
sub
ja
add
inc
pop
adc
push
mov
bound
lcall
stos
pusha
shlb
fcomps
andb
clc
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
test
sbb
jo
jg
jo
mov
adc
ret
rcr
xchg
jns
xchg
cmc
adc
jb
cld
push
jno
inc
jnp
push
subb
loope
mov
push
scas
cmp
cmp
pop
js
imul
dec
enter
pushf
rcrb
sub
mov
lea
adc
lods
lea
inc
popa
pop
ss
add
ret
js
loopne
cmp
xchg
ss
int
dec
jp
cld
nop
js
call
sub
add
out
es
xor
mov
push
add
mov
cltd
adc
sbb
popf
mov
sub
fisubl
scas
xchg
sbb
out
jo
add
repnz
mov
dec
addr16
push
cmpsb
imul
pop
mov
in
scas
mov
pop
cmpsb
sub
xor
pop
jo
movsb
pop
test
stc
mov
hlt
sarl
mov
mov
arpl
xchg
lods
adc
std
testb
add
ficoms
test
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
mov
sbb
sbb
jo
adc
sbb
add
sbb
je
sub
push
mov
nop
dec
inc
or
dec
cmpsl
sub
cmp
repz
es
iret
sarl
lcall
jmp
rclb
push
mov
push
xor
adc
mov
movsl
xchg
aaa
fmul
insb
sbb
shr
syscall
push
outsl
adc
jg
jno
or
lods
sarb
push
and
adc
add
ret
push
insl
je
sbb
push
rcrl
fs
mov
lret
call
gs
xchg
js
inc
fistl
sub
aad
jmp
pop
dec
fldt
pusha
xchg
jle
adc
lahf
pusha
push
push
pop
cmp
adc
xchg
call
hlt
jge
imul
outsl
push
jne
mov
mov
stos
aam
mov
lods
adc
sbb
leave
lods
cmp
and
ds
sti
inc
imull
sti
xchg
xchg
imul
icebp
and
out
lahf
mov
ds
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
sub
add
push
int
sahf
sti
ficomps
dec
idivb
test
mov
int
in
pop
loopne
mov
mov
addr16
lcall
mov
ja
mov
mov
sbb
add
arpl
cmp
aam
push
xchg
jge
cmp
fsts
icebp
dec
in
ljmp
push
cmp
ret
addr16
or
jge
sbbb
cli
xchg
and
scas
arpl
lahf
inc
aam
test
ret
in
pop
gs
xchg
mov
dec
mov
fidivl
mov
mov
ljmp
or
and
jns
loopne
add
aas
add
or
and
je
ret
fucom
out
xor
shlb
mov
inc
aaa
pop
ljmp
jno
add
nop
push
xlat
sub
js
test
inc
fdivr
dec
rcrl
mov
and
in
test
fwait
popa
pop
scas
ret
lahf
sub
add
fisttps
xor
add
mov
mov
xor
add
jmp
ffree
adcb
mov
inc
xor
jo
sbb
jo
pop
pop
and
fldl
and
int3
jp
das
pop
lods
imul
mov
icebp
mov
cli
rcrb
idivl
push
cmc
stc
adc
data16
loop
mov
hlt
lock
jne
cmp
outsl
pusha
mov
mov
ljmp
leave
inc
incb
pop
aam
out
cmc
mov
lea
fs
mov
lret
inc
mov
mov
xchg
aad
jno
pop
or
shrb
xrelease
in
and
scas
jnp
xchg
mov
cmp
fcompl
xor
stos
sbb
xor
aad
mov
out
les
push
fstl
arpl
push
inc
mov
repz
ljmp
fld
xorb
insl
mov
pop
iret
jnp
jae
sbb
mov
addr16
mov
xchg
cmp
cltd
std
xchg
mov
lds
fwait
cmpsb
cmc
pushf
ret
imul
push
pop
mov
jecxz
mov
jo
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
shl
mov
jo
sbb
jo
adc
lea
sub
cmpsl
dec
xchg
iret
in
pop
fninit
pop
xor
push
adc
outsl
sub
adc
dec
jmp
push
test
movl
inc
add
push
xlat
adc
inc
aad
pop
insl
test
imul
adc
std
pop
mov
xor
push
push
ja
pop
data16
test
pop
jo
out
or
pop
lret
insl
sahf
fcoml
aad
push
scas
movsb
shl
push
das
pop
fadds
mov
inc
inc
cwtl
insb
pop
pop
and
pop
pop
subb
jae
push
or
lcall
jg
xchg
or
mov
jl
dec
pushf
mov
adc
cmpsb
pop
xor
mov
ret
dec
push
nop
or
xchg
bswap
mov
adc
ret
sub
adc
pushf
inc
adc
repnz
adc
mov
mov
fmull
aaa
int
sub
jo
lret
sub
xchg
push
mov
cmp
lret
cmpsl
push
enter
jo
shrb
aas
cmpsb
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
scas
roll
jg
jo
movsb
cmp
repz
shrl
mov
sarl
lea
jl
test
fsubrs
sbb
sbb
dec
pop
sub
mov
and
imul
xchg
loopne
js
pop
add
gs
movsl
call
dec
repz
adc
and
test
xor
xor
fstl
int3
xchg
stc
sub
fstpl
lods
sbb
pop
mov
movntps
cmp
pop
dec
lock
bound
add
inc
fstpl
pop
dec
not
adc
hlt
aaa
dec
dec
add
or
jb
xorb
and
aam
ficomps
decb
and
fldt
xchg
mov
ds
fisttpl
mov
in
nop
leave
std
loop
pop
sbb
jg
test
jne
dec
cmp
rorl
inc
ds
jns
cmp
xor
sbb
dec
mov
add
leave
jne
adc
adc
ja
pop
xchg
lret
dec
aad
pop
aaa
and
repnz
inc
fbstp
or
mov
cmp
jmp
mov
gs
nop
sbb
outsb
adc
jo
xchg
test
inc
lock
scas
addr16
fidivl
test
dec
sti
xlat
leave
movsl
inc
lahf
arpl
jbe
mov
dec
add
pop
mov
fcompl
mov
enter
cmp
mov
add
addr16
call
test
xor
fs
jae
sub
enter
add
cld
inc
mov
rclb
mov
sbb
mov
jg
jle
int
push
test
test
add
cli
mov
aam
push
subb
adc
and
dec
jge
leave
push
sarl
imul
mov
push
cmp
loopne
mov
lds
lods
pop
pop
xlat
mov
divl
inc
push
and
mov
pop
push
inc
sbb
dec
cld
mov
inc
cmc
pop
and
and
inc
mov
push
or
inc
imul
push
push
rol
and
shl
lcall
orb
sub
or
push
ret
ret
test
add
add
inc
call
jmp
aaa
dec
rcrl
jno
repz
enter
mov
and
jo
jg
jo
daa
bnd
xchg
mov
push
add
mov
js
inc
rolb
jae
sub
xor
fidivrs
loopne
pop
mov
push
cltd
pop
mov
adc
aaa
mov
xchg
and
sarl
sahf
xchg
in
push
bound
repnz
jnp
add
cmp
aaa
cmp
outsl
push
dec
push
sub
cmc
cmpsb
flds
in
rcrl
test
cltd
jne
or
mov
sbb
cltd
jbe
dec
add
pop
jecxz
push
decb
adc
test
pop
lock
inc
pop
scas
or
jne
lock
mov
ret
scas
dec
cmp
ret
push
jnp
adc
lea
ret
mov
scas
int3
mov
mov
sahf
adc
sub
mov
cmp
fcmovbe
cld
sbb
jmp
arpl
in
cwtl
jmp
add
jg
push
jne
sbb
and
adc
ret
adc
stos
jl
mov
negb
or
cmpsb
es
in
and
push
out
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
cmp
movsl
sbb
call
test
ja
xchg
jbe
fmulp
movsl
mov
push
shl
repnz
xchg
incb
add
dec
mov
jp
mov
movsl
sti
orl
fistps
loope
std
test
lock
int3
inc
jg
hlt
enter
aam
and
jns
jae
mov
jb
push
adc
jmp
test
lret
jns
enter
add
adc
jnp
cmp
or
jb
loopne
fwait
pop
xchg
mov
out
push
push
mov
cmc
popf
pop
dec
jmp
stc
inc
cmp
lods
push
fimuls
int3
push
cmp
fdivs
sbb
mov
push
fsubr
aaa
xorl
aad
sub
shrl
in
mov
jnp
adc
push
adc
pushf
icebp
fistpl
repz
fidivrs
lret
sbb
mov
enter
enter
jb
sub
push
mov
fidivl
aam
push
lret
iret
push
incl
jmp
jmp
cmp
xor
sarl
cld
jg
jge
and
jo
sbb
jo
pushf
jmp
mov
enter
icebp
sbb
cwtl
cs
push
xchg
test
cmp
dec
push
scas
lahf
mov
mov
shll
jns
sub
or
ror
loop
lods
inc
or
aam
movsl
aam
or
hlt
ljmp
push
std
or
ret
icebp
dec
fldcw
and
jle
jg
cli
icebp
rclb
out
cmpsb
stc
jmp
push
xchg
jecxz
test
xorl
xchg
cmp
lock
push
sbb
cmc
lret
loop
je
cwtl
jb
cmp
pop
mov
outsl
add
dec
mov
lea
cmp
xchg
enter
das
hlt
mov
cmc
cmp
xor
xchg
lahf
pop
stc
adc
das
xlat
fs
jno
fnstcw
inc
xchg
xchg
lret
jp
daa
dec
mov
sub
xor
scas
sub
out
lcall
mov
push
sbbb
fbld
xchg
mov
stos
jmp
mov
jne
mov
jle
pop
mov
cmp
sub
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
pop
pop
xor
sub
dec
push
jmp
xchg
hlt
js
pop
aam
or
out
add
pop
dec
inc
xchg
xor
mov
cmp
shl
imul
xlat
pop
pop
rcll
daa
scas
lock
mov
scas
add
push
cwtl
dec
jne
repnz
dec
xor
scas
movsb
sbb
scas
icebp
dec
cmpsl
sbb
ss
cwtl
adcb
popl
lods
stos
imul
add
test
sbb
and
push
jge
ret
sbb
jbe
push
movsl
arpl
jno
test
ja
rcl
jl
leave
mov
jmp
jg
push
jno
sti
fbld
pop
mov
sbb
pusha
inc
in
daa
int3
xchg
and
adc
jmp
push
or
or
pop
or
xor
push
ret
mov
cmp
popf
shrb
stos
sbb
jae
adc
inc
dec
fsubrs
fcoms
and
or
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
lds
jo
jle
jo
lret
les
mov
push
sarl
mul
cs
movsb
lea
sti
mov
xor
sbb
cmpsl
cmp
mov
sub
addr16
cs
or
inc
repnz
test
adc
mov
addr16
pop
mov
jne
push
in
iret
sarl
sahf
adc
xchg
xchg
mov
sbb
cs
inc
ljmp
push
cmp
call
jmp
imull
lret
data16
add
xchg
into
cwtl
sti
ret
daa
aam
mov
in
in
jno
movb
jmp
lahf
add
inc
insl
stos
cmp
pusha
aad
pop
mov
shlb
mov
xchg
rol
push
dec
mov
mov
mov
dec
jns
add
int
add
jae
sahf
out
enter
cmp
jae
inc
adc
mov
gs
jo
ds
inc
lods
mov
cmc
clc
jecxz
mov
mov
pop
adc
fisubs
popf
leave
cmpsb
dec
loope
sti
lods
sub
popa
add
bound
adc
adc
xchg
aam
testb
out
iret
push
test
js
idiv
es
loop
xor
stc
movsb
fdivrs
mov
adc
jb
inc
mov
sub
loope
mull
xchg
jne
in
in
mov
ljmp
and
fcoms
inc
sub
inc
pop
mov
notb
aaa
enter
shr
cmpl
jne
adc
xchg
sub
stc
in
loope
ret
jmp
cltd
mov
cmp
pop
int3
lods
jmp
sbb
add
sub
cmp
inc
adc
addr16
mov
int3
cmp
rolb
fbstp
repnz
mov
or
mov
adc
sbb
es
cmp
addb
andb
fcomi
cli
into
enter
xor
jo
lret
pop
cmp
mov
fmull
out
pushf
and
add
xor
push
inc
cmp
shlb
stc
repnz
filds
icebp
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
lock
jo
jnp
insl
add
xor
cmp
dec
push
fs
dec
notl
inc
mov
cmpxchg
das
cli
inc
cmp
sub
pop
repz
pop
pop
push
bound
es
add
loopne
xchg
pop
mov
jmp
cs
loope
shrb
add
push
xor
dec
xchg
sub
push
sti
push
xchg
test
sbb
mov
imul
and
push
and
movsl
in
nop
je
inc
mov
cmovg
dec
xor
xchg
stos
sbb
jge
mov
adc
insl
test
jbe
mov
pop
cmp
add
push
jp
movb
aaa
mov
lods
push
dec
sbb
adc
rorl
mov
sbb
pop
mov
in
dec
fwait
adc
cmpxchg
mov
movsb
push
mov
xchg
pop
adc
dec
mov
fimull
mov
adc
das
mov
stc
fnsetpm(287
in
xor
jg
sarl
and
mov
sub
and
cmpl
mov
daa
pop
cltd
mov
pop
mov
movsl
out
in
dec
sub
mov
cli
sbb
in
xchg
subl
addl
int
repnz
inc
hlt
add
inc
xor
adc
lods
xchg
pop
pop
rcll
js
adc
pop
cmp
hlt
sbbb
pop
repz
mov
mov
sub
or
pop
neg
test
das
sbb
int
test
out
lea
jbe
test
sbbb
aad
insb
imul
cli
lods
outsb
fcompl
jbe
jne
jnp
cmpb
mov
mov
sub
sub
sbb
xchg
jns
icebp
or
cwtl
out
test
jle
mov
rcrl
cmp
addl
cmp
fistpl
push
jno
xor
pusha
and
cmp
jns
rorl
scas
out
ret
xchg
sbb
fs
cmp
sub
imul
fstps
mul
pop
fimuls
add
xor
xor
sub
popf
pop
jne
cmpb
inc
sbb
add
repnz
jmp
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
inc
cmpsl
sub
fnstcw
jo
sub
test
adc
sahf
pushl
mov
push
testb
fimull
inc
decb
or
fcoms
xchg
add
sub
xchg
push
add
lds
test
loopne
or
sahf
dec
adc
mov
pop
and
or
dec
mov
into
ljmp
clc
push
sub
mov
jmp
lods
sbb
mov
xchg
fs
xor
enter
fbstp
lods
mov
xorb
ret
lret
xchg
repnz
xlat
adc
sbb
xchg
xchg
fisubrl
cmp
test
test
mov
addr16
incb
loop
push
cli
jb
jle,pn
xchg
adc
shlb
sub
xlat
inc
mov
imul
rorb
mov
push
xchg
in
out
push
and
sbb
cwtl
loop
pop
jne
push
xchg
arpl
ret
mov
es
pusha
push
dec
add
mov
sub
in
mov
outsb
sbb
xchg
and
xchg
xchg
dec
cmpxchg
sub
push
aad
dec
mov
iret
xor
ja
ljmp
fwait
sarl
jno
jne
js
jmp
ja
mov
dec
stos
xor
xor
and
cmpsl
movsl
sub
lods
punpcklwd
cmpb
andl
mov
cmp
lret
push
mov
mov
sbb
mov
jge
sub
testl
mov
or
xchg
es
aad
test
jb
cmp
fldl
add
fld
jb
cmpsl
push
mov
adc
adc
jb
and
inc
fsubr
in
xor
push
xor
je
data16
push
dec
xor
sub
mov
mov
jbe
pop
mov
mov
test
or
and
idivb
insb
adc
cmp
xchg
pop
rsm
fcomp
inc
or
fxch
lds
pop
mov
mov
bswap
imul
push
adc
cmp
sbbl
jle
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
mov
les
jo
or
out
ffree
mov
inc
mov
and
push
and
jae
sbb
push
add
fdivs
dec
xchg
or
imul
pop
cmpsl
mov
out
push
or
mov
sbb
pop
ja
les
mov
faddl
lea
push
pop
jg
fmuls
xor
xchg
jp
jge
xchg
mov
mov
push
sbb
xchg
sbb
out
arpl
in
sub
sub
ja
jnp
add
addr16
in
faddl
or
test
arpl
push
mov
mov
daa
sub
fwait
pop
jecxz
out
lods
add
pop
jecxz
mov
jne
mov
shlb
inc
adc
xor
add
das
xor
mov
push
or
xchg
hlt
xor
movsl
sbb
and
mov
and
xchg
cmp
nop
mov
negb
push
push
pop
bound
gs
jle
imul
jmp
mov
cmp
cmp
push
cmp
mov
frstor
pop
pop
mov
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
fs
jae
jo
les
jo
mov
out
pop
push
xchg
sbbl
xor
inc
out
out
push
cltd
call
cmp
popa
popa
cmp
xor
dec
mov
popa
stos
cmpl
mov
pop
add
pop
sub
aam
push
xor
xchg
aad
push
inc
sbb
mov
outsb
xor
or
repz
pop
adc
jne
mov
and
push
dec
mov
xchg
and
lods
jae
add
push
push
pop
dec
pop
jns
xor
mov
mov
cltd
cli
mov
xchg
bsr
sbb
aam
out
inc
dec
insb
scas
repnz
mov
inc
dec
nop
bound
push
mov
sub
sbb
lods
ficomps
dec
cmp
mov
call
insb
jns
fnstsw
add
mov
leave
cltd
daa
dec
push
sub
sbb
cmp
das
inc
or
lret
cli
dec
pop
dec
dec
insb
ret
xor
xlat
push
stos
hlt
imul
pusha
cmp
push
push
jbe
mov
xchg
fdiv
popa
aad
adcl
and
sub
std
stc
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
jb
xor
jo
sub
call
dec
lcall
test
jnp
jmp
inc
stos
add
test
hlt
aaa
add
fwait
in
fs
fnstcw
lret
lret
sbb
sti
dec
and
lods
outsl
mov
out
fistps
inc
incb
rcrb
loope
sbb
push
sub
pop
push
or
je
cmp
dec
scas
test
push
cmp
push
cmp
push
jbe
out
daa
mov
not
mov
mov
sbb
pop
cmp
aaa
adcl
das
jnp
or
inc
mov
push
lods
shl
dec
stos
push
xor
mov
subb
repnz
scas
jmp
mov
pop
cld
and
sub
mov
push
out
syscall
jmp
push
mov
xor
fildll
test
pop
mov
add
xor
je
imul
nop
fdiv
pop
xchg
rclb
shlb
movsl
push
sbb
stc
test
cmp
pop
gs
mov
bound
aaa
gs
jne
adc
xchg
outsl
inc
push
js
mov
pop
jg
jnp
aaa
pop
mov
insl
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
jg
mov
jo
and
jo
pop
ss
pusha
shl
sbb
dec
iret
xchg
push
jp
sarl
jne
rolb
pusha
pop
nop
insl
daa
fnstsw
dec
cwtl
xchg
fcoms
ja
test
xlat
repz
nop
andb
cmp
inc
mov
xchg
sti
push
mov
jb
stc
or
lock
jnp
xchg
push
pop
ds
pop
push
hlt
inc
pop
add
pop
or
icebp
fisubrl
cmp
lret
xchg
daa
jge
sbb
pop
mov
pushf
inc
add
add
imul
jnp
cmpsl
lahf
loope
mov
test
or
nop
push
pop
in
addr16
inc
out
out
adc
inc
inc
xlat
movsb
mov
fs
dec
cmc
pop
scas
stc
out
sarl
call
in
jmp
pushf
mov
sti
cs
jbe
inc
sub
jle
cmp
in
daa
pop
aad
add
or
fwait
mov
pop
nop
gs
ret
pop
inc
sub
movb
sbb
shl
sti
pop
dec
daa
cmp
addr16
xor
pop
leave
mov
dec
cmpsb
sarb
inc
fnsave
ret
pop
push
scas
jns
in
push
xor
xor
pop
jne
sbb
jns
or
cmp
ljmp
sub
sbb
in
mov
xor
xor
add
jp
adc
mov
xor
outsb
mov
sub
jne
xchg
into
test
push
loopne
movsl
xor
mov
mov
icebp
mov
mov
pshufw
stos
or
inc
rcrl
dec
adc
mov
jmp
lods
into
in
repnz
mov
dec
int
pop
mov
enter
push
int
xchg
mov
adc
pop
adc
jmp
push
decb
sub
and
xchg
xchg
adc
imul
cmc
or
fdivr
inc
or
and
jge
xor
pop
xchg
xor
xchg
sub
add
inc
ljmp
adc
mov
adc
dec
frstor
scas
mov
jo
stos
xchg
add
jo
jge
in
or
dec
dec
mov
stos
mov
or
jp
test
sub
gs
jb
adc
mov
icebp
std
aaa
pop
cmpb
shrd
xchg
xor
not
jns
mov
movsl
push
add
lret
sub
lods
and
imul
cld
outsb
jg
icebp
jg
popa
stos
sbb
mov
pop
lcall
stos
dec
inc
mov
int3
inc
add
out
hlt
stos
test
add
jno
cmp
pushf
mull
lods
adc
mov
fmulp
xchg
leave
jecxz
out
leave
repnz
or
testb
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
scas
filds
mov
jge
jo
mov
insl
push
clc
push
and
xor
lret
mov
pushl
mov
add
cmpsl
mov
lea
insl
leave
fmuls
cmp
or
out
clc
outsl
push
lahf
mov
shl
pop
in
xor
lock
or
mov
cmpsl
repnz
mov
jmp
xorl
pop
xor
sub
stos
sarb
mov
cmp
test
outsb
sti
mov
daa
push
insb
and
cwtl
std
and
out
push
popf
adc
sbb
mov
test
mov
mov
push
outsl
loope
mulb
call
mov
jmp
js
mov
fcmove
cmp
or
adc
dec
outsl
and
xchg
xor
outsb
push
in
fwait
push
aad
pop
rorl
arpl
stos
adc
aas
mov
mov
divl
xchg
mov
js
xchg
mov
xor
popf
mov
or
adc
ljmp
xchg
inc
lods
pop
ss
cmp
push
cwtl
nop
lcall
test
mov
mov
cwtl
add
dec
sub
stc
mov
cmpsl
push
xchg
sti
add
xchg
mov
pop
sub
lods
in
imul
push
enter
sbb
push
inc
cmp
mov
scas
negb
loop
mov
cwtl
imul
mov
lock
movsl
jge
shrl
fnstsw
repz
clc
or
aaa
push
xorl
popa
jge
scas
bound
push
xor
rcl
dec
push
fmuls
stc
add
loop
xor
adc
test
insl
popa
and
mov
or
mov
dec
sub
inc
insb
int3
fiaddl
jb
ja
faddp
arpl
cmp
roll
subl
push
bound
test
adc
je
pop
pop
pop
and
mov
mov
inc
jmp
or
add
jecxz
mov
pop
jp
lret
dec
push
or
cmp
mov
stos
lods
add
dec
mov
cmc
hlt
mov
cltd
pop
notb
call
jbe
xor
cltd
inc
xchg
lcall
pop
dec
jno
push
cltd
push
loope
out
lods
jnp
pop
stc
adc
popa
hlt
jnp
dec
mov
lods
leave
cmp
pop
ffree
jne
sub
js
inc
test
cld
sub
daa
scas
mov
and
fiadds
mov
cmpsl
push
mov
push
push
xorb
mov
pop
xchg
inc
push
cld
stc
gs
in
xor
and
fwait
sub
sub
mov
mov
scas
stos
bound
adc
xchg
fstl
xor
push
dec
iret
outsb
push
push
adc
adc
cmpsl
loopne
mov
cmp
in
jmp
rcrl
scas
shlb
dec
fisubs
leave
mov
loopne
xor
hlt
and
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fisttps
or
jo
and
jo
stos
add
sub
xor
add
cmp
and
or
clc
out
pop
daa
cmp
into
lret
bound
fildl
xchg
mov
neg
xor
push
mull
xlat
ret
shlb
add
lods
test
rcrl
pop
mov
sub
add
es
aas
xchg
sub
in
outsl
dec
mov
jg
aam
sub
dec
scas
aad
pop
jge
mov
insb
jmp
dec
test
mov
sahf
das
les
dec
xchg
scas
mov
inc
mov
mov
add
adc
or
adc
iret
ljmp
ja
sub
inc
das
push
cli
sbb
xchg
xchg
pusha
daa
sbb
hlt
mov
mov
xor
cs
cmp
ss
ret
mov
sub
out
sbb
stos
pop
int3
mov
push
rclb
test
imul
cld
inc
jo
andb
jno
sar
loope
cli
xchg
xlat
push
add
pusha
xchg
fidivl
add
mov
div
imul
testl
jbe
sub
xor
ret
enter
jae
xor
je
xor
xlat
and
and
scas
cltd
adc
test
pop
and
sub
lds
xor
cwtl
dec
push
or
or
push
addr16
fst
xchg
stc
jle
mov
pop
mov
fcoms
sti
movsl
sub
fildll
pop
pop
pop
lods
mov
fisubrs
cld
scas
xchg
or
movsl
popa
and
push
sub
mov
push
imul
lock
pop
mov
sti
dec
pop
or
clc
push
or
xchg
dec
or
inc
aaa
ret
popa
fwait
lods
cltd
mov
mov
jbe
icebp
or
addb
adc
jmp
adc
icebp
iret
nop
out
inc
les
push
lea
mov
pushf
addr16
dec
jg
or
test
in
outsl
in
movsl
int3
sub
push
mov
add
insb
movsl
mul
mov
or
cwtl
dec
stos
cmpsl
bsf
adc
into
jle
mov
and
fldenv
mov
mov
pop
scas
or
adc
lahf
add
ss
xchg
or
enter
mov
cwtl
scas
pop
icebp
imul
ds
mov
sti
or
cs
or
insb
daa
int
inc
pop
adc
cld
xchg
out
mov
xor
jns
cld
pop
out
aaa
add
imul
ja
std
fs
cmp
jge
push
cltd
xor
repnz
jmp
test
hlt
sub
out
mov
adc
and
lods
mov
pusha
hlt
pusha
xchg
rcl
call
mov
insb
flds
inc
inc
add
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
aam
jae
sbb
jo
and
jo
mov
jno
aas
or
inc
jge
mov
mov
xorb
mov
mov
clc
mov
pop
ljmp
das
lods
mull
push
push
cmp
mulb
idiv
inc
adc
cli
inc
add
negl
stos
fmuls
test
dec
arpl
mov
imulb
jbe
shll
ret
cmp
mov
fs
lds
aam
rcrb
pop
cmp
mov
mov
jne
rcll
sbb
cmp
sti
popa
sbb
pushf
mov
push
cwtl
int
movsl
outsb
out
out
sub
lods
xchg
rorb
cmpsl
insw
and
call
dec
jecxz
and
and
enter
aaa
sbb
cmp
dec
jne
push
je
shlb
adc
imul
pop
xlat
mov
xor
sbb
loop
add
mov
cltd
push
daa
insb
inc
pop
pop
clc
in
pusha
inc
andb
shlb
jae
adc
mov
jecxz
push
xchg
or
push
test
jne
cmpsb
aad
mov
aad
xchg
int3
stos
test
enter
jle
cmc
cmc
sbb
int3
push
or
into
adc
xchg
xchg
repz
sub
xchg
movsb
push
aad
out
decb
pop
sbb
mov
jl
inc
add
imul
sbb
js
stos
ss
test
cmp
movsb
push
es
mull
outsl
xlat
cmc
ja
cmp
mov
xor
shll
mov
inc
daa
imul
push
aas
lahf
push
fcoms
cld
cmp
adc
dec
inc
fldl
ljmp
dec
rclb
cmp
jae
jbe
or
inc
test
jo
push
in
add
pop
jae
fadds
inc
int
xor
lea
adc
stos
lret
stos
cmpsl
aaa
cld
cmp
sbb
cmp
pop
and
jl
xchg
dec
mov
sub
ss
inc
sbb
xor
in
xorb
inc
adc
enter
mov
pop
dec
sbb
add
sbb
out
aaa
arpl
pushf
jb
movsl
dec
dec
loope
mov
cltd
push
mov
push
xor
test
sbb
cwtl
roll
movsl
inc
stos
cmp
adc
pusha
out
call
dec
xchg
shll
rcll
in
insb
cmpsl
icebp
or
mov
fimuls
rcrl
shlb
addl
mov
push
xchg
jp
cmpsl
inc
pop
push
iret
loopne
fsubrs
mov
fisubl
ret
cmp
ja
in
push
cvtps2pd
jge
xor
add
lcall
jg
sub
shll
incl
sti
inc
ror
outsl
jge
imul
lret
jne
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
cld
jl
jo
and
jo
flds
mov
das
jmp
dec
popa
bound
sbb
fs
iret
int
and
mov
cmpl
icebp
sbb
lcall
pop
add
jle
and
dec
lds
mov
xor
lret
insb
shlb
outsb
mov
sarb
je
inc
mov
movsb
pop
mov
roll
inc
sahf
stos
dec
ds
test
pop
sbb
jns
insl
ret
cli
dec
jae
mov
lret
or
aas
cmp
fs
xchg
rclb
adcb
ds
jnp
test
add
data16
icebp
test
sbb
in
subl
enter
fstl
enter
divl
mov
or
data16
js
and
jns
les
scas
mov
std
xchg
out
or
push
into
gs
pusha
mov
bound
in
dec
bound
es
out
out
push
roll
pop
dec
cmp
or
pop
mov
mov
mov
in
mov
clc
jns
out
jb
push
sahf
sbb
mov
cld
std
mov
call
gs
test
aaa
insl
fisttpl
pop
sahf
xor
jge
data16
repz
nop
aam
cmp
adc
adc
shl
mov
ja
mov
jo
cmp
hlt
les
fwait
les
pusha
mov
in
scas
cs
scas
inc
push
mov
movsl
stc
decb
lock
xor
daa
mov
xchg
dec
push
cmp
lahf
aaa
xchg
push
aad
jle
orl
add
xchg
gs
out
mov
and
les
push
dec
cmp
mov
ja
mov
push
mov
mov
rcl
leave
enter
fs
rcrl
cmp
addr16
arpl
mov
mov
mov
cmpsb
fidivl
pusha
psrlw
ds
clc
scas
xor
jne
inc
jge
mov
xchg
dec
int3
test
pushf
and
inc
xchg
xlat
xorl
sti
cmc
loope
mov
lret
loopne
dec
in
jge
call
test
mov
sbb
ficomps
arpl
ror
js
jecxz
sbb
adc
inc
cmpl
popa
inc
sub
push
inc
pop
inc
mov
es
test
cs
push
stos
push
push
cmp
scas
cltd
les
xchg
arpl
pop
std
lock
mov
mov
aas
xor
sbb
repnz
aam
mov
inc
xor
mov
out
xor
in
add
mov
or
ret
pop
shrb
loope
aas
xor
sbb
cmp
jmp
push
jns
imul
mov
mov
ja
pushl
sar
movdqa
xchg
test
imul
pop
sahf
sahf
mov
pop
pop
jne
sbb
mov
imull
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
loop
dec
test
aad
in
repz
xchg
pop
nop
push
xchg
push
in
jae
add
xor
loop
cmc
fcom
cltd
hlt
xor
cmp
out
mov
pop
sub
sbb
lret
scas
sub
test
das
test
fstps
push
push
xor
fsubl
xchg
adc
adc
add
stos
iret
movsl
cmpsb
push
lock
push
out
cmp
sbb
pusha
or
lea
pop
gs
sub
dec
sti
sbb
mov
add
push
data16
xor
xorb
dec
addr16
pop
enter
inc
pop
loop
arpl
add
sbbl
sub
fwait
inc
jmp
jmp
add
testb
xor
mov
sub
sub
je
fnsetpm(287
repz
fwait
mov
mov
cld
adc
enter
imul
addr16
pop
es
mov
int3
lods
dec
je
test
outsb
xchg
jle
push
push
ds
mov
pop
inc
pop
scas
cmpsb
sbb
cltd
push
out
mov
sbb
xor
or
out
pop
rorb
daa
scas
dec
push
sbb
and
es
fnstsw
xchg
pop
popf
ljmp
aam
enter
mov
sub
mov
adc
addr16
stos
xor
out
test
roll
add
dec
or
movd
bound
sbbl
das
iret
loopne
inc
call
pop
leave
jg
sbb
jbe
subl
or
outsl
aas
inc
add
les
sub
and
adc
mov
mov
daa
test
dec
sti
mov
jne
mov
xor
sbbb
sub
cmc
aas
mov
ds
sub
addr16
xlat
leave
jnp
lret
popa
negb
jne
mov
inc
icebp
hlt
cmpsl
mov
imul
xchg
xchg
repz
arpl
mov
lahf
push
out
jp
data16
je
imul
sub
test
fsub
mov
outsb
icebp
adc
addb
pop
mov
andb
movb
jmp
gs
mov
adc
loope
jb
sbb
pushf
xlat
xchg
fstp
arpl
scas
popa
pop
test
mov
add
dec
shll
dec
pop
lods
repnz
dec
iret
stos
push
es
cmpsb
sub
dec
es
push
enter
inc
adc
push
and
inc
cld
clc
push
cmp
scas
push
repz
cmp
adc
and
inc
dec
adc
cli
in
push
aam
jns
sbb
pushf
adc
mov
inc
xlat
flds
in
dec
data16
sbb
inc
sbb
loope
imul
pop
cmpb
inc
lds
sbb
lock
pop
inc
insb
xchg
sub
xor
or
andl
ljmp
pusha
hlt
jo
pop
movsl
out
pop
add
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
in
fdivrs
shll
jge
jo
negl
xor
mov
push
push
mov
or
jge
sbb
push
mov
loopne
fwait
jp
sub
lds
loop
inc
push
cld
or
sub
xlat
xchg
cmp
dec
jnp
lret
inc
adc
jne
bound
sbb
fsubs
popf
xor
jb
clc
or
aaa
out
cmp
jno
jmp
mov
daa
push
mov
in
xchg
adc
sub
inc
scas
bound
jp
adc
xor
pusha
mov
jo
test
jb
jle
bswap
add
inc
gs
adc
outsb
or
aad
add
outsb
scas
xor
pop
mov
cmp
lds
mov
dec
jle,pt
add
mov
out
hlt
cmp
pop
sbb
icebp
sbb
jp
mov
mov
sbb
shll
lahf
push
mov
jae
test
sbb
xchg
jge
out
adc
imul
cld
repz
cwtl
fwait
xor
adc
add
das
inc
mov
mov
lret
out
adc
sbb
std
and
dec
jnp
cwtl
test
adc
mov
aam
insb
sbb
add
push
pop
xor
push
mov
dec
mov
sub
adc
pusha
mov
lods
and
pop
mov
mov
popf
pushf
mov
xchg
jp
mov
fcomp
dec
pop
cmp
xchg
jge
shrb
add
xchg
and
push
je
and
mov
mov
pop
inc
pop
js
int3
insb
aam
or
hlt
cld
scas
dec
scas
mov
xchg
insb
pop
adc
out
and
icebp
mov
sbb
fldcw
in
cmp
cmpsl
mov
cmp
sahf
mov
psubusb
mov
je
loope
lods
push
outsb
dec
xor
inc
lds
data16
cmc
cmpsb
adc
sub
sbb
push
mov
addr16
std
test
out
mov
arpl
cmp
test
repnz
push
sti
dec
xchg
icebp
jmp
daa
cmpsb
hlt
mov
or
ret
sbb
dec
enter
cwtl
dec
int3
jp
sub
aas
inc
ffree
lret
les
aam
mov
das
stos
das
or
sbb
and
out
sub
lods
sub
pop
jo
xchg
into
sbb
ds
adc
fwait
stos
lret
sub
cltd
jmp
sub
clc
jnp
mov
xchg
daa
popf
mov
sbb
cmpsb
ja
jbe
shlb
xor
jge
jbe
inc
adc
inc
imul
aas
or
pop
mov
push
shrl
or
pushf
cli
test
push
mov
rcrb
scas
loopne
stc
shlb
insl
mov
in
mov
push
push
shrb
fadd
popf
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
push
in
and
into
jo
imul
jo
or
cld
or
or
je
add
dec
xor
test
lods
push
mov
int3
ljmp
lods
mov
in
jp
inc
xor
test
jno
and
sub
sar
add
call
sahf
fdivrs
sahf
lds
seto
fisttps
mov
cmp
not
sub
cmp
xchg
cmp
push
add
ret
ss
mov
cmp
xchg
repz
sbb
ror
mov
icebp
inc
arpl
movsb
and
xor
decl
cmpsb
sahf
in
out
ret
cmp
mov
xchg
adc
je
push
ds
mov
and
test
jmp
jp
push
mov
pop
inc
or
mov
cld
sbb
cmp
lcall
jecxz
outsb
daa
dec
jae
test
in
nop
out
xchg
imul
loop
je
push
pop
inc
xlat
outsl
aad
out
loope
lahf
push
outsl
clc
or
dec
inc
sbb
scas
add
pop
sub
fcoms
fwait
push
jle
mov
mov
jo
test
je
ret
fcoml
cmp
ds
mov
jnp
mov
aam
pop
pop
lahf
nop
lods
push
scas
cmp
mov
lcall
fnstenv
fisubl
push
repz
leave
or
pop
inc
sub
loope
out
cmp
paddw
lods
or
mov
out
jne
push
xchg
adc
xor
xchg
orb
jnp
call
xchg
inc
mov
outsb
js
cld
mov
cmp
xor
into
sub
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
cmp
push
int3
jo
imul
sbb
ljmp
scas
in
sbbl
adc
sahf
xchg
aam
mov
mov
xorb
push
dec
jo
lcall
enter
lcall
les
fwait
inc
jp
fsts
sbb
dec
lds
into
dec
packsswb
jmp
cmpsb
sbb
mov
cmp
adc
shr
add
mov
cmc
cmpsb
std
enter
out
pop
scas
movsl
push
rolb
push
jg
push
mov
cmpsl
mov
xchg
pop
sarb
pop
mov
push
mov
in
push
out
imul
pusha
xchg
sbb
mov
mov
cmp
sub
cmp
lcall
jle
push
jl
cmp
aad
ja
adc
lods
lahf
sub
push
daa
scas
call
cmp
std
icebp
mov
subb
dec
xor
xor
loope
enter
pop
hlt
jbe
test
sub
pop
sbb
lret
lcall
dec
cmpsl
dec
incb
outsl
add
je
in
into
rcrl
push
hlt
imul
mov
xchg
jmp
mov
push
daa
dec
cmp
dec
mov
xlat
shll
data16
dec
cmovns
xchg
incb
movsl
popf
push
call
outsb
push
cmpsl
cmc
sbb
insl
cwtl
xor
mov
push
icebp
addr16
dec
xchg
sbb
add
mov
inc
inc
clc
add
gs
xor
mov
das
les
dec
xor
sbb
gs
pop
inc
xchg
cmp
and
mov
sahf
and
mov
cld
push
lds
cmc
nop
or
pop
loopne
pop
dec
lcall
or
pop
in
and
xlat
aas
int3
xor
or
test
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
fs
mov
imul
das
js
fwait
xor
mov
mov
mov
sbb
mov
mov
pusha
sti
iret
mov
js
lret
jnp
mov
cmp
hlt
sti
stc
outsl
lret
in
push
xchg
rcrl
rcll
mov
jle
mov
cmpsl
push
jns
or
mov
dec
dec
pushf
jmp
clc
mov
sub
aaa
xchg
adc
pop
cli
cmp
inc
mov
mov
in
jae
push
mov
add
sbb
dec
sbb
stc
adc
jo
sub
ficomps
outsb
mov
mov
loop
and
pop
test
push
jge
xchg
mov
mov
cltd
mov
xchg
push
add
nop
cmp
mov
mov
ret
dec
fimuls
mov
clc
jmp
adc
add
call
loope
xchg
sbb
adc
rolb
les
adc
pop
mov
pop
stos
aam
popa
dec
lret
out
in
push
add
xor
xchg
xchg
stos
push
clc
jne
push
push
or
sub
popa
filds
int3
mov
int3
ja
dec
add
cmpsb
pushf
adc
xor
jae
sbb
inc
cli
cmc
mov
mov
ljmp
lret
inc
test
sub
in
add
jno
imul
stos
or
and
push
pop
mov
cmpsb
lods
insl
aad
xor
mov
cmp
movsb
ljmp
xchg
push
fidivrl
cs
xchg
mov
or
lret
lcall
int3
fidivl
inc
add
mov
and
or
add
push
bound
cmp
arpl
add
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
movsb
xchg
pop
testl
jo
sub
push
jmp
fisubl
jp
loopne
scas
sti
xor
sub
push
mov
xor
outsb
mov
lret
lret
dec
xchg
sub
cmp
lods
xchg
test
addr16
xor
dec
xor
adc
and
sbb
out
push
fists
testb
aaa
loope
movsl
jp
lods
ds
movsb
out
or
xlat
mov
sbb
pop
test
out
push
loopne
xlat
sbb
test
mov
cmpl
sbb
mov
and
dec
pushf
jae
int3
fistps
xchg
insl
xchg
ja
popf
adc
cmpsl
sub
jae
jns
das
xor
pop
fsubrp
jns
scas
jge
dec
jae
and
insl
ljmp
jle
mov
jb
push
dec
data16
cmp
jmp
int3
xchg
arpl
addr16
sti
mov
fdivs
sbb
adc
xchg
out
jnp
xchg
in
out
adc
scas
test
fwait
mov
outsl
dec
mov
xor
jl
out
cmp
xchg
mov
xchg
xchg
loope
test
enter
sub
pop
fbstp
push
pop
push
fs
fldenv
fucomp
popf
mov
in
push
pusha
out
pop
out
mov
dec
loop
lahf
std
sbb
andb
in
aam
dec
shl
jne
add
loope
rcrb
dec
scas
jmp
mov
inc
adc
rcrl
frstor
loope
sub
or
adc
push
inc
sub
add
inc
in
jns
xchg
push
push
aaa
pop
aad
xor
pop
mov
fsubrs
push
dec
popa
dec
cwtl
icebp
xor
cmp
lea
or
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
fcompl
push
mov
jg
jo
sti
cwtl
adc
xor
pop
lods
adc
daa
es
xor
jne
scas
xchg
rcl
push
pop
mov
out
jb
test
in
jge
mov
dec
out
jb
sbb
jg
push
xchg
cli
das
mov
mov
sub
into
lds
mov
inc
push
jns
movsb
and
fistl
jmp
dec
repnz
mov
and
imul
aad
aas
xchg
pop
sub
sub
push
les
fidivrl
lahf
xchg
loop
sub
sub
stc
lcall
sub
cli
icebp
rcll
mov
jle
xor
jne
cmp
dec
lret
mov
dec
ss
inc
adc
sub
rcrb
sbb
sbb
push
leave
lock
mov
lcall
sub
inc
pop
add
and
aas
push
push
dec
cmpsl
pop
fstpl
rorl
aaa
jb
stos
arpl
cmp
pop
std
daa
adc
fwait
and
sbb
dec
pop
jg
popf
xor
inc
adc
mov
js
movsb
stc
mov
mov
loopne
scas
inc
mov
inc
pushf
pop
xor
js
lock
or
es
xchg
cmp
sbb
lret
stos
push
ljmp
jp
andl
add
in
call
jg
xor
mov
fistps
fnstsw
push
adc
pop
lods
lods
pop
insb
fistpll
push
aas
ret
std
sahf
jb
je
cmp
and
and
lret
out
imul
inc
mov
sub
dec
mov
aam
lods
and
popa
movsl
cmp
imul
mov
xlat
xor
inc
mov
or
xlat
add
jmp
add
mov
sbb
mov
xor
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
xor
aam
jo
jg
jo
or
jp
mov
incb
push
jmp
repz
jecxz
push
inc
sahf
outsl
gs
in
and
ret
loope
xchg
sbb
push
xor
push
nop
sub
push
mov
or
ss
mov
mov
push
rorl
mov
inc
js
pusha
test
cmpb
xchg
add
jno
mov
mov
repz
xorl
mov
xchg
imul
lods
ja
ljmp
jmp
add
shlb
int
les
stos
movsl
outsb
test
adc
sbb
xchg
out
enter
out
push
aaa
bound
add
out
mov
lods
outsb
and
enter
bound
sub
push
add
cmp
scas
in
data16
and
popa
test
insl
movsb
imul
cmp
add
ja
mov
push
movsb
mov
jmp
xchg
push
jecxz
je
pushf
mov
pop
data16
pop
fucomi
dec
in
aas
mov
jb
ljmp
dec
add
stc
xchg
orb
pop
mov
cmp
pop
hlt
jno
dec
aaa
mov
adc
adc
pop
cwtl
xor
inc
or
lds
std
cmp
icebp
or
shl
push
dec
das
jo
outsb
mov
or
xor
push
je
movsl
scas
repnz
stc
pop
or
int3
fsubrs
xchg
lret
adcl
bound
das
sbb
mov
xchg
inc
push
in
sbb
in
ss
cmc
fdivl
jae
fstpl
scas
or
int3
fnstsw
enter
int3
hlt
sbb
inc
mov
inc
ja
sarb
sahf
addr16
lods
pop
sub
sti
jl
filds
push
cld
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
in
mov
jg
jo
push
jl
pop
ret
lea
sbb
inc
in
sub
mov
xchg
pop
xchg
popa
ss
mov
mov
sub
int
push
xchg
mov
mov
sbb
add
ret
shlb
or
add
not
es
dec
inc
daa
mov
mov
mov
mov
lea
push
pop
xor
out
lods
mov
ret
inc
hlt
cmp
inc
ret
rcrb
ds
cmp
sbb
xor
or
loopne
test
xor
and
js
movsl
sti
sub
jnp
lret
sub
ret
cmp
jae
pop
sbb
push
inc
ds
sub
gs
scas
pop
jg
aas
inc
sbb
xchg
jecxz
nop
xchg
and
xchg
pop
dec
pop
cmp
testb
push
dec
lock
push
imul
aam
aam
mov
mov
test
pop
mov
pop
dec
sbb
aam
es
ss
xchg
leave
pop
push
cld
and
andl
jl
call
pop
notl
xchg
pop
daa
inc
inc
jns
enter
xchg
pushf
xchg
inc
pop
or
arpl
repz
xchg
hlt
xor
jb
test
sub
jge
sbb
addr16
fs
inc
pop
sbb
repz
into
lods
sub
push
dec
sub
scas
rcrl
int3
aaa
or
xor
fcompl
sub
or
push
imul
and
sbb
xchg
and
cli
cmp
bnd
adc
push
cmpsl
mov
ss
lret
cmp
jnp
loope
cmp
xchg
mov
add
les
jne
out
xchg
mov
mov
movsw
roll
fidivl
loop
sti
mov
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
shrb
fistpl
jg
jo
dec
adc
out
sahf
ret
and
add
subl
imul
or
popa
dec
dec
ret
imul
loope
push
or
in
imull
movsl
xchg
mov
sbbl
push
cmp
fbstp
sti
jmp
int
je
dec
and
shl
ret
and
loope
xor
jge
fsts
jp
push
in
push
adcl
cmp
mov
jne
cwtl
or
mov
adc
jnp
and
mov
mov
je
fstpl
push
loop
fimuls
or
in
cld
xchg
out
fs
aad
sbb
push
jb
cmp
mov
je
loop
mov
xor
jmp
push
inc
jbe
jl
fdivl
repnz
jne
fnstenv
add
jae
fcoms
fsubs
arpl
mov
or
jno
mov
jne
ljmp
or
cmp
xchg
aas
jmp
dec
scas
and
ja
inc
dec
dec
or
aas
cwtl
cmp
stc
pop
and
mov
lahf
bound
js
jbe
push
xchg
fwait
lret
adc
fsubp
negb
mov
inc
pop
add
mov
icebp
jnp
imul
stos
sub
jg
popf
or
aaa
mov
mov
and
push
inc
cld
add
pop
mov
mov
sti
daa
inc
stos
cli
add
dec
xlat
in
mov
cmc
push
push
out
test
repz
outsb
sub
xor
mov
mov
jp
in
jg
dec
pop
fs
inc
aaa
out
vmread
fsubl
pop
push
sbb
cmc
je,pn
les
pop
adc
shlb
xor
xchg
inc
and
stos
and
fidivl
hlt
fsubs
push
fmuls
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
jp
sbbl
jo
mov
data16
or
mov
imul
cmp
add
fistps
sub
aam
loopne
lock
dec
adc
jne
call
mov
imul
addl
push
mul
mov
inc
mov
cli
mov
ljmp
adc
pop
add
xchg
and
xchg
loop
out
xor
js
add
mov
clc
jp
dec
ret
mov
sahf
fsts
sbb
les
jo
dec
mov
or
dec
ret
clc
xlat
insl
mov
imul
sti
std
lcall
daa
je
fdiv
imul
sar
inc
movsb
dec
and
daa
sub
and
xor
xchg
clc
faddl
push
sbb
lret
sub
ds
sbbl
sbb
sub
and
addl
les
shrl
cmp
mov
mov
jne
sar
enter
cmp
xchg
popf
inc
sbb
sti
addr16
mov
mov
mov
pop
pop
sbb
add
nop
arpl
lods
mov
sub
dec
shl
fs
popa
scas
push
mov
dec
lidtl
lock
inc
pop
mov
dec
jbe
adc
outsl
xor
dec
insb
cli
stos
sub
xlat
stos
xchg
and
mov
scas
lock
cmp
sub
and
jno
ja
push
pop
arpl
jge
pushf
ret
mov
mov
mov
sbb
inc
xchg
es
jge
inc
inc
inc
cwtl
test
movsb
lret
aas
lods
add
daa
inc
rolb
jge
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
add
jo
imul
jae
daa
fisubl
fldt
mov
push
sub
mov
out
insl
nop
aaa
sub
sub
icebp
and
test
repz
xchg
das
pop
pop
sbb
idivb
test
subb
sbb
mov
mov
das
cmp
xchg
jg
jecxz
push
add
lea
dec
or
lahf
cltd
call
out
mov
cvtps2pd
shll
push
es
and
jno
sub
movsb
jae
push
neg
mov
das
push
xor
xchg
cmp
subl
les
xchg
icebp
popf
xchg
jne
fdivs
dec
cmpsb
mov
sbbb
jb
idivb
inc
jb
cmp
mov
dec
mov
lahf
ljmp
imul
or
out
js
std
outsb
mov
test
or
movsb
fmulp
mov
mov
sub
mov
sub
test
lret
bswap
cld
ljmp
idivb
loope
sub
popf
lahf
mov
shl
aaa
jp
ss
sbb
and
mov
and
jl
aad
push
paddsb
std
jne
frstor
inc
shlb
mov
repnz
push
outsb
subl
cmp
jle
movsb
jmp
in
jg
xchg
cli
cmpsb
add
scas
stc
dec
aam
out
and
push
mov
leave
ljmp
out
sahf
loop
jb
cmp
jne
hlt
dec
jae
nop
les
lock
std
mov
pop
push
xchg
mov
ret
stc
repnz
popa
push
fcmovnb
stos
adc
in
lahf
cmp
movsb
aam
hlt
mov
in
in
fs
sahf
rclb
xchg
or
stc
mov
lods
je
cmp
stos
or
sub
or
stc
jmp
sbbb
cltd
js
mov
cmp
jo
imul
xor
xor
xchg
pop
mov
xchg
sub
fwait
cmp
movsl
pop
int3
aad
hlt
int3
aam
adc
lret
add
pusha
bound
lahf
inc
xchg
mov
dec
stos
sahf
insb
mov
jnp
mov
jmp
add
dec
cli
cli
sub
dec
ds
jg
xlat
test
fnstsw
pop
pushf
mov
sbb
das
aam
lods
mov
mov
fmull
mov
fcmovnu
xchg
daa
cmp
sbb
add
dec
cmp
addr16
aad
jbe
test
jl
xor
dec
jnp
dec
pop
lret
xor
sub
int3
inc
int
pop
pop
lods
rcrb
stos
mov
aaa
rorb
mov
fstpl
adc
stc
shlb
or
push
popf
cwtl
add
xor
sub
mov
push
mov
and
push
ficoms
into
mov
push
push
repnz
loope
sub
cmp
inc
sarb
mov
jp
aas
fsubl
ret
adc
pushf
mov
aas
mov
test
xchg
sub
jle
cmpb
sub
dec
sub
xor
shll
mov
adc
dec
adc
cmpsb
jmp
adc
xchg
and
adc
xorl
cld
stos
cli
enter
test
and
shl
dec
push
int
cmp
jl
sets
sarl
mov
ja
arpl
and
popf
dec
mov
sahf
and
inc
sbb
loop
dec
cwtl
cmp
or
inc
xor
aam
mov
imul
into
mov
shll
popf
pop
jne
fistps
cmpsl
lods
xor
out
stos
or
mov
jne
adc
inc
mov
jmp
clc
icebp
mov
icebp
ficompl
xchg
mov
fdivs
imul
fsts
dec
pop
pop
imul
push
pop
cmc
out
add
lock
jg
out
aas
addr16
xchg
push
test
fimuls
jle
rcll
test
jns
stos
cmp
stos
push
std
inc
adc
stos
loope
ficompl
jb
out
pusha
mov
mov
stos
pusha
push
mov
add
xchg
inc
ja
popf
and
jmp
stos
inc
pop
lods
lods
stos
sbb
jnp
lcall
push
add
xor
pop
dec
iret
imul
jle
xchg
idivb
out
cli
gs
pop
dec
xchg
cmc
out
sub
jle
in
xchg
in
out
jge
test
call
adc
mov
cmc
jmp
add
sbb
in
sub
push
sbb
aam
push
inc
stc
outsl
inc
mov
push
sti
fists
hlt
popf
mov
sbb
test
mov
mov
xorl
sub
cld
sbb
ds
adc
insb
pop
add
outsb
lcall
cmp
xchg
lcall
shrb
out
frstor
aaa
adcl
call
jle
and
aaa
cmp
hlt
jg
or
mov
arpl
pushf
lods
sub
pop
dec
lds
rcl
mov
imul
stc
add
sahf
idiv
mulb
mov
xorl
fiadds
les
push
mov
mov
and
clc
add
mov
adc
fptan
cmpsl
adc
test
jecxz
cmp
dec
fiadds
sbb
es
inc
test
repz
outsb
fldt
or
push
in
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
sbb
out
jo
jg
jo
daa
sbb
aas
repnz
mov
in
ja
xchg
inc
outsl
lea
add
and
fdivrs
addr16
je
ds
ss
push
shll
pop
ficomps
xchg
mov
out
xor
shrb
lods
rorl
mov
pop
xor
ret
or
insl
xchg
sbb
std
sub
cmp
lsl
mov
std
xor
xchg
xchg
in
cltd
enter
mov
test
out
sub
fadds
std
shr
movsl
in
xor
sbb
lret
inc
fdivrp
lods
sbb
insb
dec
mov
mov
mov
adc
mov
arpl
jae
push
ljmp
xchg
fcomps
dec
mov
call
inc
inc
mov
leave
fisttpl
leave
mov
mov
ret
in
fs
andb
fmull
mov
jnp
mov
inc
rorl
sub
imul
sbb
mov
mov
inc
mov
inc
pushf
push
iret
je
loopne
sbb
xchg
les
mov
test
mov
sarb
or
sar
or
cmp
notb
dec
mov
call
das
clc
nop
pop
in
mov
jne
mov
xchg
mov
je
clc
lods
mov
sahf
sbb
nop
insl
je
lahf
loop
sub
sbb
out
xchg
lahf
xor
loope
insb
dec
imulb
outsl
hlt
or
rcrb
sub
xchg
push
xor
sbb
bound
andb
int
cmp
mov
dec
cmp
mov
aam
insb
popf
test
mov
inc
jge
add
push
in
dec
pusha
sbb
mov
lret
xchg
adc
sbb
push
and
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
lcall
mov
imul
mov
adc
push
and
in
dec
cmp
sub
add
sti
and
push
test
imul
movsl
and
adc
lret
call
dec
pusha
xchg
dec
push
ljmp
fwait
push
sub
sub
das
cmp
jge
dec
push
ljmp
pop
and
in
aam
jle
jnp
inc
xchg
sub
jo
js
das
in
lahf
pop
in
cmpsb
mov
insb
xchg
pop
inc
xor
push
insb
lods
xchg
cwtl
cltd
and
sub
into
rcrl
xorb
fsubl
xchg
adcl
xchg
cbtw
xorb
lods
mov
mov
lret
mov
negl
or
call
loope
rclb
pop
cmpl
cmp
notl
xchg
cmpsb
push
scas
andl
das
or
ret
mov
cmp
mov
lock
repnz
xchg
jne
lock
adc
cltd
jnp
mov
sbb
pop
mov
fldl
sti
mov
test
out
shr
xor
push
shl
add
jg
adc
cmp
jmp
or
mov
repz
movsl
imul
sub
sbb
mov
cmp
mov
sbb
push
sbb
js
pop
inc
mov
dec
ja
mulb
mov
aaa
push
aas
jne
dec
adc
cs
cmpb
insb
sbb
push
and
inc
sbb
xor
insb
or
mov
test
cmp
adc
jle
jo
cmc
push
xchg
xor
das
or
inc
mov
andb
or
ss
adc
test
lahf
js
sub
pop
push
aaa
push
enter
imul
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
leave
jo
imul
mov
sub
mov
stc
call
cli
notb
in
mov
popa
test
jbe
mov
andl
rcrl
push
mov
aam
pop
das
loopne
pop
sub
add
mov
movsb
test
sbb
xor
lods
inc
mov
xor
rcrl
fimuls
or
es
dec
mov
mov
ror
jle
mov
cs
std
mov
mov
cmp
clc
mov
or
pop
pop
jmp
push
or
popa
cmp
loop
sahf
push
lret
jmp
adc
shlb
inc
in
mov
fsubp
lret
test
lret
test
cmp
mov
mov
cvttps2pi
cmp
fstpt
and
cmp
repnz
inc
pusha
subl
stos
in
inc
out
xchg
push
mov
cmp
ret
push
mov
inc
mov
lret
push
xor
mov
mov
into
adc
stos
test
push
mov
clc
lods
dec
ds
pop
enter
je
mov
js
test
aad
das
mov
sbb
aaa
lret
cmp
popl
push
mov
ds
test
fcompl
xor
jne
lds
lds
popa
shll
mov
xor
outsl
sbb
loopne
stc
or
clc
lret
stos
lds
out
addb
out
insb
enter
pop
inc
fsubrs
push
cmp
push
cmpsl
cmpsl
push
jl
jnp
pop
add
pop
jmp
pop
adc
addb
pop
fwait
cmpsl
jb
ja
rorl
jle
insl
pop
loopne
int3
loopne
jo
test
cmp
xchg
jbe
jae
sbb
or
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
push
xor
shl
jo
xchg
jg
jo
test
lods
inc
push
mov
jae
sbb
xor
jbe
jecxz
push
fiadds
mull
fldcw
mov
ds
fstl
jbe
push
fs
shrl
ret
jge
cmp
pop
inc
pop
pop
lods
sub
orb
in
nop
out
adc
out
cli
sub
stos
lods
lods
mov
or
out
out
shl
and
cmp
faddl
and
adc
sub
insb
fcoms
and
dec
lods
lds
push
cmpb
push
mov
xchg
shr
orl
mov
push
dec
mov
popa
lret
xchg
sbb
or
loope
out
add
jne
mov
aaa
in
fdivr
jno
fstpl
mov
scas
push
add
xorb
lret
push
cld
xchg
push
enter
aam
inc
mov
cmp
addl
inc
cmc
jmp
iret
das
inc
insl
adc
sbb
jbe
mov
cwtl
inc
adc
cltd
out
mov
cmp
inc
xor
inc
sub
adc
and
gs
jecxz
into
xchg
adc
dec
pop
std
repnz
ret
push
sub
sahf
push
pop
fs
inc
loop
rcll
fs
xchg
divl
xor
pop
daa
sub
and
pop
dec
xor
add
pop
jge
lods
cmp
mov
add
mov
jae
jno
mov
hlt
or
inc
sbb
xchg
jg
jo
imul
dec
fldenv
mov
call
in
cmpsb
cld
push
dec
mov
mov
cmp
popa
fsubs
shr
call
jmp
mov
cmp
or
mov
sub
mov
ds
dec
lret
ret
js
je
mov
popf
and
xlat
lret
arpl
mov
lds
cmp
push
mov
cmp
adc
outsb
pop
dec
repnz
pop
xchg
mov
sub
adc
jmp
push
push
aam
loope
lcall
mov
in
push
out
xchg
cmpsl
jb
sarb
repz
hlt
enter
arpl
jge
mov
xor
imul
es
pop
fwait
sbb
inc
mov
cmp
jmp
ret
and
mov
movsb
les
cmp
aaa
data16
cmpl
push
pushf
addl
mov
sub
sbb
repnz
jge
loop
cmpsl
or
jecxz
and
lds
xor
or
jle
lret
dec
pop
fidivrl
test
pop
adc
pushf
jecxz
sbb
clc
xchg
xchg
pushf
add
sub
dec
hlt
fsubrp
push
stc
xor
vpshad
jge
gs
test
add
fcmovnbe
sarl
shrb
fisubrl
jb
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
icebp
push
pop
mov
jo
xchg
jg
jo
adc
jg
js
inc
mov
pop
idivb
std
jp
in
xchg
dec
dec
mov
ret
pop
jno
pop
mov
fcom
js
dec
mov
lods
fimuls
cli
es
add
push
or
xlat
mov
bound
dec
jbe
mov
xchg
out
mov
pop
out
xchg
pop
jmp
leave
nop
lds
add
test
push
add
xchg
cmp
hlt
sbbb
and
imull
call
daa
sbb
pop
orb
inc
mov
pop
push
in
daa
jb
add
popa
rcl
stos
cwtl
lret
sub
bound
loop
inc
js
mov
test
push
and
mov
push
in
repnz
mov
nop
out
xor
in
cmc
pop
pusha
js
aaa
in
push
bound
cltd
and
cmp
mov
xorl
inc
mov
add
iret
xor
insl
add
ret
add
xor
cld
icebp
rolb
test
fmull
fistpl
mov
adc
xor
fisttps
int3
nop
arpl
repnz
jae
fwait
xchg
mov
and
xor
das
push
fs
and
call
jge
cmp
sub
daa
inc
lret
jmp
sub
mov
cmp
push
dec
cmc
pop
jecxz
dec
loop
ret
xchg
or
pop
xchg
hlt
test
pop
mov
imul
mov
xchg
push
dec
clc
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
stos
incl
and
jo
xchg
jg
jo
jl
mov
daa
stos
xchg
sub
movsl
pusha
xchg
lock
xor
cli
inc
push
and
andl
sbb
inc
cli
adc
mov
sti
lock
adc
js
mov
and
adc
pcmpgtd
or
cmp
jo
int
test
sti
das
push
ss
inc
sub
push
andl
cmpsb
test
add
cmp
addl
xor
jno
mov
sahf
xchg
xchg
scas
xlat
mov
push
loop
inc
enter
push
mov
imul
lret
mov
movsb
icebp
ss
push
lret
inc
and
je
cmp
jecxz
sbb
push
fnstenv
or
xor
rcl
push
push
and
xchg
loop
es
sahf
mov
dec
rcll
lods
jb
fnstsw
inc
pop
push
stos
test
xchg
adc
test
fstpl
lock
enter
roll
fnstenv
pop
lods
jns
inc
cmp
and
push
repz
test
outsl
in
adc
dec
ret
cmc
and
push
mov
push
mov
push
pop
or
and
ret
and
jns
mov
inc
sbb
jg
add
xchg
mov
icebp
mov
jecxz
add
fmuls
cmpsl
mov
push
jp
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
mov
ljmp
push
enter
sub
cmp
ds
in
pop
inc
pop
xchg
adc
adc
int3
out
sub
imul
adc
xorb
fwait
jecxz
mov
loop
and
inc
sbb
jp
inc
orl
add
sbb
repz
sbb
fstps
popa
movsl
inc
movb
mov
neg
xchg
push
sub
dec
imul
mov
out
xchg
imul
ret
fnsave
mov
pushf
ret
pop
ljmp
and
out
sub
push
add
outsb
sbb
ret
xchg
add
push
fstp
mov
push
icebp
andl
out
adc
gs
mov
mov
std
scas
and
xor
add
pop
test
cwtl
clc
adc
mov
cltd
mov
xchg
and
sbb
and
es
idiv
add
fimull
pop
imul
mov
sbb
jl
jge
repnz
movsl
movsb
orl
and
push
std
jne
inc
sub
notb
push
test
jae
jg
outsl
inc
mov
in
xchg
sub
out
in
mov
stos
mov
push
push
jge
pop
mov
outsb
jge
jb
out
or
nop
mov
jae
scas
stos
mov
xor
adc
test
test
cmp
call
add
int
add
add
rorl
add
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
sbbb
jo
jg
jo
sbb
pop
loop
mov
pop
test
insl
in
outsb
ficoms
addr16
js
leave
in
pop
push
ljmp
push
push
into
frstor
adcb
call
andl
lea
pop
jb
fisubrl
xor
fistpll
inc
dec
popa
test
pop
sub
mov
add
mov
push
sub
xchg
nop
sti
divl
cmp
push
fildll
cmp
aas
jmp
scas
xchg
into
nop
test
cmc
imul
mov
andb
jae
dec
scas
sbb
jns
xor
jno
shll
mov
scas
scas
out
or
sbb
pop
pop
jno
mov
pop
mov
cmp
out
std
cmp
insb
out
pop
pop
and
out
push
dec
jmp
xor
or
cmpsb
aas
sbb
pusha
out
cmpsl
sub
xchg
dec
add
xchg
cmp
test
mov
push
cmpsl
adc
dec
je
jp
enter
mov
mov
repz
shrb
aad
adc
push
xchg
in
call
and
jp
arpl
test
lcall
in
imul
mov
cmp
xchg
push
jmp
lret
ljmp
jl
jnp
pushf
daa
loop
sahf
ud2
or
xlat
cmp
fwait
and
mov
push
adcb
inc
fsubr
mov
add
mov
icebp
in
icebp
mov
push
xor
jo
jg
jo
jg
and
cmpsb
push
add
jo
mov
adc
or
cld
lods
pop
push
sub
jns
push
pop
pop
mov
xor
cwtl
imul
scas
aam
cs
mov
xchg
push
mov
loopne
dec
lret
aas
mov
sbb
loopne
jb
cli
ret
cs
scas
mov
ret
ret
or
outsb
sub
scas
stos
cs
lods
pop
aad
rorb
stos
lock
cmp
ret
cmpb
or
inc
movsb
mov
leave
out
fisttps
sub
cvttps2pi
jle
xlat
cld
subl
xor
jns
sti
pop
lds
adc
lea
test
decb
cmp
push
push
rcll
arpl
sbb
xchg
or
mov
jns
sub
xor
push
jbe
stos
xchg
mov
shlb
imul
mov
adc
dec
sahf
hlt
test
cmp
pop
adc
loope
dec
lret
daa
sbb
rorb
sahf
enter
sub
or
dec
sbb
cld
hlt
testl
test
mov
addr16
mov
sub
sbb
xor
mov
loop
add
adc
jae
rorl
sbb
sub
jecxz
inc
fldl
or
jne
leave
ds
test
pop
lret
std
dec
cs
jbe
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
stos
jg
xchg
cmc
jo
xchg
jg
jo
push
cmp
xchg
dec
popf
dec
mov
adc
loop
xchg
add
mov
lret
in
jle
call
mov
cmp
je
xor
sub
andb
add
adcb
ficoms
mov
sbb
adc
pop
stos
add
sub
lea
ljmp
xor
mov
dec
je
dec
out
xlat
jnp
aas
int3
xlat
or
jb
fists
pop
jne
lret
and
pop
icebp
js
sub
xor
loop
push
in
cltd
and
pop
mov
xchg
push
fsubrs
lret
shlb
mov
lahf
mov
les
jge
sahf
sub
test
xchg
cmp
cmp
aaa
mov
lds
ss
sbb
lods
mov
lcall
jo
rcr
adc
out
mov
add
into
jmp
lahf
lock
repnz
sub
adcb
sbb
scas
fidivrl
stos
mov
ljmp
mov
jecxz
jbe
pop
xchg
push
je
sbb
call
inc
xchg
mov
mov
popa
imul
cs
fwait
icebp
aas
pop
or
mov
arpl
mov
outsb
testb
mov
pop
dec
lahf
sbb
dec
adc
fisttps
sub
push
popf
and
mov
inc
subl
inc
lds
jp
fs
cli
sbb
dec
cs
stos
andl
sti
clc
call
or
mov
add
frndint
std
imul
mov
xor
mov
jo
xchg
jg
jo
daa
adc
je
stc
add
lock
es
icebp
cmp
lea
in
push
clc
insb
sbb
ss
outsl
test
or
sete
push
lock
add
cmc
stc
jo
sub
xchg
jns
subb
aad
lret
movsl
and
inc
xchg
push
in
xor
loope
mov
xor
gs
mov
int
jge
dec
pop
in
add
call
loope
ficoms
mov
jbe
rcrl
inc
jae
add
int3
cmp
or
push
fs
fcoms
ror
sti
jb
movsl
loop
ret
sub
roll
jbe
mov
ret
push
aas
add
cli
mov
daa
sbb
adc
mov
lcall
stos
mov
inc
fs
xchg
into
push
sbb
and
fnstsw
inc
mov
enter
adc
addb
imul
sbb
mov
mov
sbb
sub
dec
push
dec
fdivs
or
pop
and
xor
sbb
mov
mov
ret
pop
push
mov
ss
push
in
xchg
enter
mov
push
popa
adc
mov
cs
loop
or
and
stc
cmc
adcl
ret
xchg
in
inc
adc
mov
fstl
jbe
inc
xchg
inc
hlt
ljmp
lods
mov
incl
aaa
jmp
hlt
sbb
rep
cmp
aaa
lcall
jo
jg
jo
sbb
mov
fidivrs
ret
inc
and
pop
fsubrl
pusha
lret
bound
mov
inc
out
into
mov
je
push
cmpl
mov
dec
imul
sub
lods
xchg
push
push
iret
decb
jae
int3
lcall
imul
mov
lds
cmp
sub
push
adc
mov
adc
sub
cltd
mov
push
xchg
mov
cmc
repnz
xchg
cmp
sbb
movsb
mov
and
dec
push
sbb
lock
cmp
dec
ret
xchg
mov
and
push
pop
adc
cld
cld
jle
sbb
lods
push
sub
pop
jo
dec
mov
lret
dec
pop
fldcw
test
sbbl
or
imul
stc
mov
mov
pop
popf
inc
enter
insb
scas
popa
out
jecxz
lock
jno
dec
push
js
std
xlat
sub
jns
jmp
in
adc
gs
fcmovbe
insl
mov
ja
jnp
addr16
test
inc
sub
pop
add
ret
ret
mov
push
cld
insl
scas
or
es
fs
fwait
out
jne
pushf
fcoml
push
cmp
pop
cmp
sbb
arpl
mov
and
push
sub
repnz
xor
add
in
xor
test
sbb
scas
dec
xor
pop
jb
in
push
jmp
sub
mov
stc
mov
sbb
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
pop
in
jo
xchg
jg
jo
adc
daa
mov
inc
adc
xchg
mov
leave
xor
daa
cld
gs
jecxz
lret
sub
add
push
mov
into
out
sub
xor
xchg
mov
sub
and
ljmp
xchg
fisubs
in
dec
lods
pusha
addl
ret
stos
rol
out
jno
adc
mov
aas
mov
pop
mov
stos
mov
push
jp
inc
aad
in
cwtl
nop
imul
dec
scas
xchg
xchg
jae
icebp
orl
lcall
dec
mov
out
mov
mov
lods
xor
push
push
pop
adc
and
lahf
mov
stos
or
push
add
shl
dec
push
jo
push
push
xor
out
add
xchg
sbb
es
pop
mov
shl
xchg
fstpl
xchg
dec
negl
push
mov
in
addr16
cli
dec
dec
ljmp
mov
mov
movsl
cmp
pop
js
cmpsb
das
mov
sub
fadds
lahf
movsb
xor
pop
rcl
dec
insl
xchg
scas
pop
das
cmc
std
and
arpl
insb
inc
push
insl
or
leave
bound
add
into
std
jmp
pop
pop
jno
push
fadd
adc
aas
fsts
fmuls
test
dec
push
leave
fisubl
lock
mov
out
mov
jp
icebp
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
pop
data16
dec
scas
popa
sub
testl
aas
mov
dec
mov
xor
fdivl
addl
adc
inc
ret
dec
int
push
xchg
sti
sahf
lds
pop
xchg
and
lahf
push
dec
mov
xchg
push
jecxz
int3
jo
jbe
nop
shrl
jo
push
dec
movsl
insb
cmp
iret
push
jg
aam
and
enter
in
cmp
stos
xor
arpl
imul
in
les
gs
or
xor
mov
add
or
test
or
push
jns
rorl
mov
dec
push
sub
lods
sbb
iret
ret
shlb
out
mov
pop
xor
stc
fdivs
outsb
loope
add
lods
xorb
lahf
add
jge
test
mov
cs
imulb
popl
cmc
gs
xor
and
mov
mov
and
lea
ljmp
jg
push
shlb
xlat
sub
scas
pop
outsl
gs
fcoml
das
repnz
mov
cmpsb
push
lods
sub
or
jp
mov
scas
lds
pop
and
push
es
jecxz
fidivrl
insb
imul
je
aad
test
jno
push
pop
and
jne
add
mov
mov
mov
lds
add
xlat
xchg
mov
pop
pusha
and
cmpsl
jb
mov
or
push
jb
or
pushf
jno
dec
dec
xchg
imul
adc
cmpsl
nop
test
aad
test
mov
push
arpl
clc
pop
sbb
daa
fdivr
sbb
push
sti
mov
ja
mov
insb
movsb
jo
cmpsl
popa
mov
dec
xchg
lret
dec
mov
mov
pushf
pop
ja
or
dec
test
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
cld
jo
jb
jo
and
fucomp
mov
pop
sub
call
sbb
mov
pop
adc
imul
mov
lock
ds
push
jb
out
sbb
lret
xlat
das
movb
test
push
shr
jne
clc
dec
shll
cwtl
and
mov
fisttpl
js
mov
inc
test
inc
push
push
dec
xlat
mov
jo
push
sbb
xor
mov
sbb
inc
push
adc
in
fimull
jl
mov
bound
inc
ss
adc
adc
push
cmp
adc
dec
fists
pop
popf
nop
mov
fldenv
pushf
shl
mov
imul
int3
faddl
cmp
cli
rol
push
dec
add
mov
and
jo
lock
stos
jl
mov
xor
adc
es
sub
out
mov
clc
cmp
mov
pushf
mov
outsb
jno
jp
lock
adc
xchg
inc
sbb
into
outsl
leave
imul
sub
sarl
andb
jmp
xlat
mov
popa
and
fsubrl
cltd
arpl
inc
inc
push
sbb
xchg
adc
push
inc
sarb
jecxz
add
in
out
dec
repnz
xor
cmp
jns
push
or
das
test
mov
repz
push
add
movsl
das
push
hlt
roll
sarl
lea
jns
rorl
cli
pop
aaa
dec
jo
pop
jbe
add
movsl
inc
call
test
sbb
jbe
push
dec
leave
add
iret
xchg
xchg
xor
outsb
popf
dec
clc
jbe
cmp
mov
push
mov
fdivs
xor
insb
cmp
push
repz
push
sti
pop
mov
jl
cmp
out
add
jg
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
mov
jge
jo
jb
jo
push
add
andb
loope
mov
aaa
or
dec
push
push
cmpsl
adc
lahf
sub
aam
hlt
fildl
popf
add
xor
pop
sbb
loopne
popa
fcoml
cmp
cmc
rclb
xchg
or
jnp
daa
or
mov
jg
cs
jg
lods
add
sub
add
test
dec
addr16
mov
sti
pop
pop
mov
mov
mov
fildl
dec
add
pop
sbb
inc
push
or
xchg
mov
xor
dec
mov
xchg
jns
out
mov
pusha
jmp
bswap
daa
jl
in
cs
xor
or
add
jne
scas
pop
ljmp
fcompl
cmpl
les
pop
popf
jp
out
or
xor
mov
roll
scas
test
int3
insl
out
outsb
testl
pop
sti
mov
loope
cmp
lcall
inc
add
mov
inc
or
cli
cmc
dec
aad
andb
mov
sub
xchg
orl
fstpl
in
arpl
jne
sub
in
jg
xor
dec
cltd
dec
pusha
mov
pop
scas
sbbb
cmp
in
cltd
sbb
pusha
insl
repnz
stos
cmpsb
in
daa
add
sub
in
pop
xchg
push
lahf
inc
loope
shlb
mov
popa
sub
or
push
sub
movsl
push
mov
ljmp
mov
cmpsb
fmuls
xor
mov
loopne
test
bound
arpl
imul
inc
ljmp
or
stos
jns
xchg
mov
jns
cmp
lds
lret
xchg
cltd
in
push
out
mov
shlb
mov
inc
push
std
insb
lcall
dec
push
mov
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
jae
add
jb
jo
sbb
inc
out
mov
fwait
add
xchg
xor
push
popa
pop
ds
bound
jmp
mov
push
int3
dec
mov
mov
imulb
or
add
and
imul
popf
pop
sub
loope
insb
cli
daa
lret
jne
cmp
aam
div
mov
lods
enter
and
pop
ss
out
cmp
lcall
shll
pop
subb
inc
data16
faddl
xor
push
stc
ja
fldcw
mov
mov
bound
fstpt
and
test
dec
mov
push
scas
aas
gs
mov
fdivl
add
pop
lock
int
and
xor
push
jne
or
or
pop
adc
mov
scas
movsb
cmc
outsl
ss
test
repnz
ss
jbe
out
cmp
xchg
sub
mov
insl
insl
jno
mov
fistps
xlat
inc
std
dec
jge
loop
insl
mov
out
inc
and
or
push
lods
popf
dec
sub
push
lcall
test
sahf
jns
inc
ret
inc
outsl
arpl
std
adc
add
push
test
mov
push
push
push
scas
and
dec
lea
cmc
mov
insb
jb
mov
lcall
add
icebp
mov
cli
ljmp
sbb
add
pusha
jns
xchg
out
repnz
and
xor
add
rcll
jg
test
lods
lret
xor
jb
fidivrl
mov
dec
aaa
or
push
xchg
jg
add
mov
test
xorl
inc
push
mov
inc
fucomp
pop
fnstcw
pop
loop
mov
ret
jae
push
xor
jmp
jnp
xchg
les
sub
and
jo
jb
jo
rcrb
cs
and
repz
and
and
inc
test
dec
movsl
or
stos
add
sbb
bound
cmpsl
or
xchg
das
sbb
bound
aam
movsl
jge
mov
lea
and
adc
dec
sti
pop
aam
insl
in
aad
aas
dec
loope
xchg
fcoms
pushf
ret
fnsave
pop
xchg
les
subb
jno
pop
ficoml
mov
dec
pushf
jle
outsl
mov
pusha
dec
je
lret
push
ds
pushf
rcr
sbb
dec
ret
push
decl
xor
mov
push
imul
mov
and
jno
ds
loope
decb
mov
xchg
gs
inc
adc
pop
aad
stos
out
or
ja
push
dec
push
fisttpll
test
lods
pop
cltd
cmp
mov
xorl
mov
push
jne
fiaddl
xor
mov
std
mov
dec
mov
adc
data16
jp
cld
test
pop
lret
push
fidivrs
jae
sti
or
jmp
aaa
addl
jbe
jl
ret
aad
pop
inc
cmp
jg
call
ret
pop
sbb
je
and
mov
jns
adc
inc
cwtl
sbb
icebp
out
adcb
add
cld
mov
and
fwait
imul
addr16
negl
popf
stos
lret
and
xor
xor
adc
mov
in
push
aad
xchg
stos
neg
inc
adc
aam
lret
ljmp
dec
mov
lret
lcall
icebp
cmp
xchg
cmpsb
pop
xor
fidivrl
out
add
jg
push
cmp
out
sub
adc
insb
mov
dec
adc
adc
mov
pop
xchg
mov
ret
fsts
dec
das
in
test
pop
inc
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
shll
imul
jle
jo
out
or
cmp
xor
and
ror
outsl
mov
mov
and
daa
cs
xor
add
sahf
js
insb
adc
inc
ret
call
pop
sub
sbbb
arpl
push
rcrb
loop
mov
push
repnz
adc
dec
and
pop
cld
std
les
aaa
push
dec
pop
add
fs
and
cmpsl
jmp
stos
cld
sub
mov
cmpl
idivl
test
sbb
adc
xor
xor
popl
inc
jle
lret
loop
mov
in
ret
dec
je
push
and
add
jg
iret
push
mov
xor
nop
xchg
cmp
or
pop
inc
jnp
xchg
int3
outsl
das
mov
xor
cld
add
ficoms
add
or
pusha
idivl
testb
xor
adc
xchg
and
fs
jle
push
shl
sub
popf
mov
sbbb
or
rorb
negb
jno
dec
arpl
cmp
into
pop
push
js
inc
adc
cmp
lods
or
ja
leave
call
mov
repz
xlat
fs
je
lcall
cs
jno
fwait
xchg
hlt
mov
add
pop
cmp
hlt
xchg
mov
xchg
xor
and
pop
ret
push
dec
sub
cwtl
stos
cmp
hlt
cmp
xor
sub
adc
cwtl
sbbb
dec
out
or
cmp
inc
imul
in
pop
inc
rolb
inc
sub
jne
jne
xor
xor
add
and
cld
sbb
ss
ljmp
push
mov
cmp
mov
dec
test
push
sti
mov
sub
outsb
sbbl
add
dec
xor
xor
sarl
fisubrs
mov
fiaddl
out
rorb
push
out
or
pop
lock
adc
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
iret
dec
imul
xorb
jle
jo
outsb
cmpsl
inc
mov
adcb
push
psubd
lds
cmp
cltd
es
add
mov
lods
jp
inc
in
jg
push
and
mov
pop
mov
xchg
les
xchg
sarb
aas
mov
xchg
popf
shl
sbb
push
ret
sub
fsubrl
dec
cmpl
sbb
js
mov
sbb
mov
fldenv
push
cld
hlt
mov
pop
arpl
insb
jnp
addr16
lods
xchg
mov
adc
push
shll
inc
and
in
and
jp
ljmp
mov
mov
dec
jnp
xorl
and
sbb
popa
filds
gs
xlat
push
fdivp
mov
jo
jg
lret
sbb
ficoms
push
or
test
out
in
add
cs
lock
pop
loope
and
call
addr16
in
cld
sub
sub
fbld
jmp
rorb
lcall
jo
inc
daa
into
sarb
add
add
jp
arpl
xchg
in
jmp
xchg
xor
pushf
fldl
jp
push
inc
mov
push
adc
inc
icebp
lea
fsubs
data16
fidivrl
popf
jmp
lea
mov
sub
mov
mov
jle
xlat
std
lods
lret
aad
sub
shl
out
enter
ret
mov
ljmp
and
xor
loopne
cli
mov
int
fisubrs
stos
in
loopne
cltd
add
addr16
add
inc
aam
loop
mov
mov
shl
xor
and
xchg
mov
loop
add
stos
aaa
jbe
cmovge
add
loopne
into
int3
jae
push
push
scas
xchg
dec
mov
aaa
inc
push
dec
fldenv
js
icebp
fistps
fs
xlat
out
test
js
je
and
xchg
sub
xchg
ja
ss
push
in
pop
movsb
bound
insl
shrl
and
fsubs
cmpsb
dec
in
or
pop
ret
jmp
cmpsl
ja
mov
inc
rol
fisubrs
dec
roll
push
pop
dec
pop
mov
jle
insb
popf
movups
movsb
popf
push
addb
jmp
ja
and
dec
xchg
xor
jo
jle
jo
movsb
std
xchg
or
adc
mov
fadds
outsb
mov
cli
cmp
jno
mov
sarl
sbb
icebp
and
icebp
add
jle
dec
mov
or
jno
sub
push
popa
clc
jl
mov
xlat
stos
bound
sti
enter
sub
cmc
jne
sub
xor
xor
aad
adc
daa
cmp
icebp
out
jl
mov
sub
js
cli
cmpsl
xchg
insl
test
scas
repnz
insb
imul
mov
mov
insl
inc
hlt
or
cmp
xchg
dec
mov
pop
mov
jne
es
nop
daa
xlat
xor
adc
add
dec
cli
mov
mov
sbb
imull
fcomp
fstps
loopne
rcrb
lahf
movsb
sar
or
dec
dec
js
test
sub
aas
jb
fmuls
clc
or
push
push
dec
or
xchg
and
jg
imul
fscale
shlb
out
jo
rorl
and
adc
mov
sub
stc
dec
push
decl
test
out
out
mov
jge
inc
cmp
pop
pop
mov
test
fmuls
es
xor
push
mov
stos
mov
add
insb
stos
mov
cmp
insb
dec
xor
push
add
sub
mov
lahf
jns
sahf
add
mov
fidivrs
mov
popl
inc
mov
mov
push
int3
mov
adc
call
pop
out
push
cmpsl
pop
fimuls
aaa
pop
push
xor
cmc
loope
pop
std
pop
mov
mov
xchg
stc
fs
jno
into
hlt
pop
jbe
dec
les
in
std
add
and
push
stos
fs
mov
cmp
push
push
sub
sub
lods
or
jle
data16
mov
fadds
sub
xor
imul
pushf
cmpsb
adc
into
repz
cmp
aas
inc
mov
xor
pop
insb
out
dec
mov
inc
adc
fadds
in
ja
lret
fs
pop
inc
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
xor
jo
jge
jo
aam
icebp
dec
mov
sti
add
mov
mov
add
xor
into
sbb
int3
cs
les
adc
xor
jl
sahf
mov
and
jae
inc
mov
ret
mov
gs
jne
into
mov
lods
jo
adc
xor
out
sbb
inc
jg
mov
jo
pusha
sub
push
scas
mov
icebp
push
pop
inc
popa
adc
xchg
fnstsw
lea
es
mov
repnz
pop
scas
les
sahf
mov
vdivps
and
sbb
or
pop
push
imul
mov
pop
pop
icebp
cltd
lret
out
mov
pop
cmp
lods
pusha
add
adc
xor
jmp
sahf
mov
jle
mov
dec
push
repnz
mov
jecxz
cmp
push
not
imull
fiaddl
repnz
mov
xchg
adc
je
sbb
adc
rcrl
hlt
inc
mov
test
xor
add
xchg
push
in
xchg
push
idivl
push
mov
stos
fmuls
les
pop
cmp
icebp
addr16
mov
mov
add
lcall
mov
subl
in
mov
xchg
push
jle
ja
push
scas
lock
cmp
leave
adc
mov
jno
push
es
xchg
xchg
push
push
push
mov
xor
lea
push
mov
out
cmc
std
add
jae
push
jmp
lock
cmp
out
or
adc
and
outsb
in
js
xchg
insl
bound
hlt
inc
mov
inc
or
sbb
mov
mov
xor
jno
ret
scas
popa
mov
cmp
and
mov
pop
dec
pop
sub
adc
int3
mov
cwtl
fbstp
pusha
xchg
bound
pop
or
inc
push
sbb
nop
inc
and
or
loop
in
jbe
aas
cmp
adc
loopne
xor
mov
pop
mov
xchg
add
push
in
cmc
push
pop
shr
divl
shll
aas
mov
xor
stc
jecxz
jmp
jl
repnz
repnz
imul
sti
adc
push
cmp
mov
arpl
inc
insl
sahf
adc
push
push
xchg
xorb
stos
mov
stc
mov
jo
shlb
je,pn
repz
jne
out
in
pop
lds
popf
adc
cmp
or
xor
rorb
and
inc
test
push
cltd
pop
imul
mov
adc
into
dec
dec
test
sub
push
fldcw
insb
stc
xchg
out
and
mov
mov
iret
xchg
out
jge
push
inc
js
cmp
dec
dec
jl
sub
fwait
ds
sub
outsb
mov
xor
fdivrl
ja
cmp
mov
and
cmp
cmp
adc
cld
dec
add
lret
les
outsl
sub
and
fildll
jnp
push
or
stos
push
test
dec
cmc
fmuls
dec
fcoml
adc
int3
std
push
adc
push
mov
and
fs
xor
or
scas
jbe
mov
fildll
lds
jae
add
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
daa
mov
jo
jge
jo
push
push
jnp
dec
push
je
fwait
dec
sbb
xchg
and
adc
stos
pop
pop
addb
pop
xchg
pop
jp
aas
cmp
clc
inc
clc
sub
inc
adc
push
ljmp
fs
or
aaa
hlt
fcmovnu
sahf
test
rcl
daa
xchg
adcl
sub
mov
fdivrp
rclb
mov
cmp
pop
adc
fildll
inc
jmp
sbb
xor
sub
sbbl
cmpsb
and
testb
cs
pop
lcall
jle
in
mov
jecxz
cld
pop
cwtl
mov
in
iret
push
xchg
push
mov
aam
inc
jle
orl
jnp
sbb
or
rolb
cs
xor
or
and
sbb
pop
stos
mov
mov
ljmp
inc
jle
sub
out
data16
out
lcall
test
xchg
int3
xor
xchg
inc
cltd
cmp
dec
stos
mov
jb
xor
mov
dec
cltd
shll
aas
dec
out
pop
jb
clc
lret
scas
push
aam
pop
sbb
adc
mov
outsb
frstor
xor
pop
add
xchg
xchg
test
ds
ror
dec
or
mov
pushf
xchg
and
or
cmp
pop
mov
repz
jne
adc
mov
repz
jnp
sbb
jle
pop
push
or
xor
aas
lds
push
lods
and
int
inc
cltd
sbb
popa
into
aaa
icebp
push
iret
je
orl
xchg
mov
or
push
mov
mov
bound
and
stos
xor
call
aaa
and
in
out
fdivrl
xchg
xor
inc
cld
shll
xchg
mov
and
mov
cmp
jns
fsubl
shl
inc
pop
jne
lcall
jp
mov
push
pusha
mov
and
clc
cmp
insb
push
xor
xor
mov
sbb
adc
cli
push
fs
and
xlat
fsubs
ss
nop
cmpl
xorl
jge
addl
cmpsl
clc
mov
push
pop
stos
adc
add
sub
imul
dec
inc
jg
xorl
mov
adc
fists
mov
jo
mov
add
aam
mov
loop
pop
test
repz
movsl
lret
dec
mov
adc
sbb
xor
lods
imul
jnp
xchg
inc
iret
mov
mov
movsb
jnp
out
push
scas
in
ret
ljmp
jne
movsb
clc
pop
mov
jns
xchg
cmc
jo
and
test
mov
pextrw
pop
dec
and
dec
ret
xor
es
mov
cmpl
push
cmp
jo
push
xchg
add
dec
fnsave
lods
ret
test
psllw
push
popf
push
mov
js
mov
inc
push
ds
lds
testl
and
sub
cld
nop
mov
icebp
mov
or
mov
push
mov
fs
pop
int
das
cld
jb
test
xchg
icebp
lahf
cli
mov
xor
sbbb
push
inc
lods
loop
or
dec
fwait
imul
sub
out
mov
popf
pop
add
aam
mov
shrb
sub
in
out
into
dec
mov
clc
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
clc
push
or
dec
jge
jo
xchg
cmpsb
push
iret
pushf
ss
cmpl
cld
xor
mov
inc
shl
insl
adc
jbe
ret
sbb
mov
test
push
or
push
jne
pop
imull
inc
scas
pop
cld
jbe
mov
inc
inc
xchg
mov
or
adc
mov
pop
push
mov
repnz
push
test
outsl
dec
mov
cld
sbb
pop
push
in
aaa
or
push
adcb
mov
ret
or
jg
loop
sbb
std
aaa
xor
cmp
bound
add
sub
fldl
jle
inc
sahf
and
adc
xor
cmc
jmp
pop
mov
iret
ror
jne
mov
dec
sbb
and
sahf
insl
xchg
or
fdivr
adc
mov
mov
fxch
cld
jns
clc
outsl
mov
ss
lods
xor
out
jns
jb
pop
push
dec
and
jmp
out
inc
inc
push
call
gs
scas
xor
dec
scas
ret
inc
pop
ret
popf
push
mov
xor
out
lock
enter
clc
pop
fimuls
xchg
int3
mov
xchg
adc
out
lods
jo
ljmp
mov
cmp
in
pushf
adc
push
cmp
and
jp
adc
push
gs
andl
addr16
push
inc
popa
aad
adc
fidivrl
das
es
inc
sbb
jl
enter
es
into
or
icebp
lahf
rolb
xchg
jno
daa
loope
js
scas
enterw
out
xor
leave
xchg
into
and
sub
push
rcll
cmp
sbb
clc
jecxz
loopne
lds
adc
filds
movsb
pop
cmp
insb
inc
cltd
pop
push
lock
fisubrs
inc
test
add
lret
mov
xor
mov
or
jmp
xor
sub
mov
pop
or
xchg
popa
pop
mov
ror
cmp
scas
xchg
aam
stos
fisubs
jp
cld
dec
or
dec
mov
push
out
fldz
lret
ss
cmp
sub
mov
xor
es
mov
in
or
xchg
fwait
mov
insl
aas
test
in
pop
fisubl
fwait
int
pop
mov
push
adc
arpl
push
or
push
fdivs
sbb
jae
outsb
push
cli
inc
and
cmp
add
inc
jle
inc
ljmp
inc
cmp
sub
pop
cltd
out
mov
dec
mov
fidivs
cmpsl
cmpsl
add
adc
mov
dec
sub
and
xor
ret
repz
push
push
mov
test
add
jge
fadds
jns
in
mov
mov
insb
dec
les
sub
inc
sti
imul
in
lret
test
arpl
bound
mov
int3
pop
dec
dec
dec
mov
cli
mov
mov
sbb
into
ret
xchg
lds
push
rcrl
push
mov
adc
inc
imul
in
aad
sbb
mov
popa
jp
mov
aas
adc
xorl
mov
int
lea
insb
fisttpll
sub
dec
mov
xor
out
test
jecxz
addr16
notb
mov
cmp
sbb
xlat
xor
and
fdivp
pop
jl
addr16
in
divb
aaa
push
push
xchg
sub
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
dec
out
xchg
jo
dec
jge
jo
mov
mov
jns
out
cmc
pop
div
ror
adc
hlt
pusha
sub
test
add
es
adc
mov
push
push
std
loopne
pop
push
jl
clc
xor
jnp
fidivs
daa
sarl
aad
hlt
pop
sub
push
das
jp
cmp
aam
mov
adc
cld
cmp
shll
or
adc
jb
push
out
xchg
push
loopne
mov
add
push
adc
rol
inc
daa
ret
pop
lahf
in
mov
sub
mov
jae
out
movsl
mov
das
mov
data16
jge
inc
adc
jns
add
xchg
push
jno
xor
xor
in
inc
es
jne
and
in
adc
fadd
clc
jmp
daa
lods
cmp
pusha
call
outsl
sti
in
mov
aam
inc
and
xor
pop
cmpsb
sbb
dec
sub
dec
sbb
push
xchg
sub
data16
xchg
insb
test
sti
andb
inc
mov
add
or
in
ljmp
add
pop
mov
pmulhuw
pop
ss
jne
pop
xchg
push
pop
jne
push
lcall
lds
gs
scas
inc
sub
or
mov
divl
sub
in
lods
aam
int3
int
rcrl
enter
es
ficompl
stos
out
cmp
lret
dec
pop
and
andl
inc
mov
sti
iret
xor
xchg
adc
xor
into
sbb
jno
push
sbb
hlt
lods
mov
pop
mov
and
in
push
jecxz
popa
int
rorb
adc
xor
pop
shl
mov
loop
stc
cmp
xchg
in
mov
fdivrl
and
or
cli
dec
sub
mov
cmp
fisubrl
sbb
and
mov
mov
pop
inc
pop
sbb
dec
addb
mov
push
dec
xchg
fldcw
daa
popa
pop
clc
inc
fsubl
adc
sub
cmp
imul
aaa
pop
pop
xchg
cmp
push
sahf
sub
jae
jp
movsb
test
or
inc
or
mov
mov
sbb
pop
dec
jge
sub
iret
ret
sub
add
adc
movsb
mov
pop
push
movsl
xchg
cmc
and
dec
fs
push
xor
cmpsl
mov
jne
mov
jecxz
dec
jg
xchg
pop
test
test
testb
jg
jg
inc
pop
jmp
mov
popa
addr16
xchg
mov
lds
pop
sti
xor
jae
lock
mov
shrl
mov
dec
jae
dec
push
mov
and
scas
push
aam
movsl
xchg
test
add
imul
lock
add
inc
aad
test
jg
push
test
xchg
push
out
sub
cmpsb
aam
push
andb
pop
push
pop
adc
ljmp
push
testl
pop
mov
cltd
mov
adc
sub
shlb
ja
sub
mov
out
loope
inc
or
dec
cwtl
enter
dec
out
mov
mov
jae
pop
mov
pop
out
scas
fmull
dec
sub
mov
loopne
sbb
cmpsb
icebp
pop
pop
xrelease
mov
cwtl
jbe
jo
and
cmp
in
add
mov
dec
pusha
cmpsl
adc
into
data16
adc
add
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
mov
jo
dec
jge
jo
push
cli
push
das
pop
lock
push
addr16
ds
arpl
cs
push
xor
out
and
dec
insb
movsb
sub
dec
sub
inc
ja
sbb
add
mov
out
fldl
fmuls
lahf
pop
pop
jo
pop
fisttpll
les
iret
loopne
movsl
fdivrs
mov
add
mov
icebp
iret
aam
pop
sub
xorl
xchg
mov
inc
lret
mov
test
xlat
push
xor
fs
and
loope
mov
push
cmp
cmp
fimull
pop
pop
pop
psadbw
cltd
inc
leave
cltd
repnz
mov
aas
fiadds
cmp
fs
das
cltd
clc
gs
pop
xor
mov
and
xchg
out
adc
bound
xor
cwtl
rclb
dec
adc
push
sbb
push
sub
aas
cmp
das
jb
pop
pop
stos
iret
sbbl
jo
sub
xchg
inc
div
or
mov
cmp
xor
xchg
and
mov
repz
mov
or
daa
push
and
pusha
xchg
mov
shlb
test
clc
clc
mov
lahf
jo
mov
jbe
adc
add
lcall
cmp
add
push
decl
dec
out
jno
jo
mov
jmp
in
loopne
nop
jecxz
ret
ds
ja
add
out
pusha
ret
pop
or
fwait
cmp
push
xchg
adc
fisttpl
lret
or
cmpsb
ds
loope
mov
cmc
lock
dec
movhps
mov
pop
mov
int
scas
aam
xchg
ljmp
stc
mov
or
dec
cld
push
arpl
subl
mov
fs
mov
lods
jmp
jecxz
aaa
xor
jbe
idivb
push
in
mov
jmp
aaa
push
ja
or
loopne
mov
in
fidivs
loope
int3
int
cs
pop
xchg
repnz
add
popf
xchg
lods
sub
pop
test
cmpb
es
addps
pop
std
sub
addr16
roll
push
mov
popf
jnp
imul
popf
daa
pop
dec
mov
ret
mov
and
mov
rcr
adc
arpl
lods
arpl
mov
addr16
lods
aam
dec
pop
adcb
jns
mov
rcrb
rclb
mov
cmc
jns
mov
mov
cwtl
leave
jmp
mov
xchg
inc
leave
mov
xor
call
out
add
ja
clc
ret
sub
es
aad
imul
les
and
push
xor
je
loope
dec
fmull
jno
test
xor
fcmovbe
inc
fdivs
enter
shl
aaa
adc
test
repz
lods
cmp
pop
ja
test
sti
cmc
cmp
or
dec
push
xor
xchg
lahf
dec
ror
push
incb
fnsave
mov
call
das
test
jmp
pop
insb
mov
out
mov
lods
jl
aas
jno
inc
rclb
push
mov
movsb
dec
push
mov
or
rolb
ficomps
fwait
xchg
and
push
fs
xchg
ljmp
lcall
xor
inc
lcall
pop
das
sbb
dec
push
xor
test
or
aas
mov
int3
lahf
xor
mov
push
cmpsl
cmpsb
loopne
xor
cmp
fstl
sub
sbb
fdivs
cltd
movsl
lods
pop
dec
shr
lahf
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
ficoml
lcall
dec
cwtl
mov
popf
loopne
pop
sub
arpl
mov
mul
jne
xchg
or
xchg
mov
pop
es
dec
cmp
stc
nop
adc
mov
xor
inc
shlb
mov
out
movsb
lds
xor
pop
jnp
popf
or
mov
cmpsb
out
adc
dec
jae
xchg
pop
pop
sysret
mov
or
sti
dec
sub
adc
sub
xchg
pop
faddl
ficompl
pop
mov
movsb
inc
adc
xor
pop
repnz
pop
flds
movl
inc
movsl
or
sub
adc
push
gs
cmp
flds
lret
cmp
xor
jb
lock
mov
cmp
xchg
pushf
je
stc
jp
xor
adc
dec
add
and
xchg
cld
jbe
cmp
jnp
scas
loopne
out
cmp
add
mov
fadds
lds
rclb
push
imul
mov
outsl
mov
push
dec
mov
mov
jbe,pn
xlat
fcompl
ljmp
sub
and
dec
aas
das
adc
mov
lods
std
fcmovnu
sbb
sub
xchg
and
inc
sub
es
sub
or
lahf
icebp
fs
pop
mov
fisttpll
lea
sbb
call
fstps
clc
call
push
sub
lock
lret
xchg
mov
inc
jmp
enter
hlt
push
iret
stc
outsb
push
xor
xchg
packsswb
xchg
lret
fcmovb
pop
xorl
mov
pop
pop
adc
add
cmp
sub
arpl
mov
in
xor
mulb
push
jae
dec
mov
sub
sbb
mov
adc
lret
inc
sub
adc
push
rcrl
fwait
sti
inc
fxch
sub
adc
push
lds
xorb
icebp
and
add
cmpsb
lret
dec
adc
sub
mov
loope
lods
xchg
push
fldt
nop
stc
and
and
sbb
jle
clc
or
mov
in
sub
add
pop
mov
imul
in
inc
pop
jmp
add
mov
lret
mov
push
testl
sbb
sub
adc
mov
pusha
jae
mov
mov
mov
mov
stc
pop
and
push
pop
adc
ss
mov
addl
dec
xchg
out
mov
sbb
push
cmp
mov
sub
ret
imul
pop
js
pusha
dec
stos
adc
fadds
stos
cmp
les
mov
cmp
xor
push
or
testb
sub
push
ljmp
add
mov
in
push
popf
pop
leave
sti
jmp
xchg
movsb
adc
mov
frstor
or
add
xor
sarb
ss
xchg
stc
sbb
js
jmp
mov
arpl
adc
and
mov
inc
int3
fnsave
mov
mov
jne
cltd
add
lret
pop
sub
sbb
xchg
and
lock
add
ret
jmp
outsb
stc
push
sbb
mov
sbb
inc
xrelease
jle
inc
rcrl
push
mov
sub
je
int3
mov
out
notl
or
clc
pop
les
inc
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
xchg
jo
dec
jge
jo
pop
xchg
ss
lods
dec
imul
ret
stos
inc
jne
inc
movsl
cmp
mov
dec
mov
enter
test
adc
sahf
xchg
imul
mov
jl
jge
or
icebp
dec
or
or
lods
and
int
stos
imul
cltd
les
cld
jo
jns
lea
mov
movsl
clc
mov
cmp
mov
jp
mov
lcall
mov
out
adc
mov
sub
push
jmp
and
add
insb
addr16
ret
mov
fcomps
call
inc
imul
or
push
jge
xchg
mov
jo
dec
mov
dec
int
das
mul
test
inc
loop
push
div
and
pop
adc
dec
cmp
fadds
fsubs
cmp
dec
xor
jge
pop
push
mov
aad
and
adc
sub
mov
and
insl
aas
pop
adc
mov
bsf
in
arpl
sbb
adc
test
mov
fmuls
lret
lods
xchg
or
jle
cwtl
xchg
shlb
in
jg
xchg
cmpl
dec
enter
mov
xchg
lret
adc
xor
or
fcmovnb
jb
fdivrl
loop
rcrb
inc
sbb
mov
aad
cmp
in
jno
aam
repnz
and
xchg
jo
cmp
push
nop
mov
inc
lea
jp
add
out
push
lahf
xor
cmp
imul
dec
test
out
pushf
ja
repnz
or
cltd
mov
sbb
outsl
xchg
arpl
mov
adc
pop
arpl
bound
in
xchg
and
lods
pop
ljmp
pop
dec
adc
rcll
dec
or
out
outsb
mov
sbb
fisubl
push
shlb
add
adcl
add
push
adc
mov
idivl
shll
or
mov
add
clc
mov
in
inc
scas
testl
cmp
ljmp
aam
and
dec
imul
pop
push
lods
xor
xchg
fs
adc
in
add
loop
cmp
int
nop
jae
mov
jecxz
push
add
and
push
pop
xchg
jmp
decl
rolb
adc
sub
mov
gs
mov
mov
sub
mov
inc
mov
ja
add
mov
pop
stos
fsubs
jmp
testl
jecxz
in
aad
jae
jne
jo
mov
cmpsl
xchg
cmpl
mov
sbb
imul
jmp
lret
dec
imull
fdivr
push
mov
cmp
pop
mov
or
mov
push
outsl
xchg
lea
jge
ret
push
inc
push
addb
push
iret
mov
rcrb
enter
sub
adc
jge
add
cmp
adc
pop
xchg
mov
sbb
test
fcomp
dec
into
aaa
scas
sar
sub
pop
aad
jle
out
and
inc
pop
mov
dec
pop
pop
jle
jmp
rcrl
lret
out
push
dec
or
pushf
ljmp
xchg
dec
and
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
dec
lea
mov
jo
sarl
rcll
xchg
push
push
pop
push
mov
fiadds
lds
daa
shrl
mov
lds
mov
sbb
mov
addl
lidtl
cwtl
out
mov
dec
out
xchg
add
call
mov
subb
aaa
mov
cmp
int
jg
cmp
mov
sti
pop
or
ret
lock
pop
adc
int3
adc
jmp
dec
cld
mov
sub
stos
scas
call
das
pop
into
add
and
aas
mov
popa
xor
test
sub
dec
aas
pop
jmp
imul
dec
jbe
lcall
stc
sbbl
sub
pop
stc
idivl
pop
inc
mov
fiaddl
dec
sbb
mov
fwait
dec
cmpsb
jl
push
cmpsb
insl
ret
jmp
fisubrl
and
jne
xchg
lock
lcall
mov
aad
pusha
loopne
std
jg
js
push
test
lahf
inc
jmp
and
out
push
int
adc
push
call
mov
jne
jne
cmovbe
jno
sub
clc
imull
cltd
mov
outsl
popf
and
out
insl
xor
rclb
adc
sub
jp
stos
add
in
faddp
dec
loope
rclb
ret
das
ret
enter
mov
mov
cmp
pop
out
xorb
adc
mov
mov
test
push
sub
mov
movsb
mov
sub
mov
les
xor
rcrb
pop
fisttpl
fadds
sub
mov
or
cli
adc
call
push
sbb
mov
push
out
jbe
loope
push
jmp
outsb
xchg
leavew
xor
mov
insb
scas
push
int
dec
jae
fs
lock
inc
fbstp
arpl
jmp
sub
lods
aad
jnp
pop
mov
cmp
ret
pop
pop
int
pop
repnz
xor
loope
push
aaa
jne
decl
push
push
movsb
mov
aaa
sbb
xchg
cmp
dec
or
dec
lcall
cmp
or
fmull
movsb
pop
div
into
dec
xchg
cmc
dec
fdivs
outsl
imul
aad
scas
in
mov
inc
int
adc
mov
insb
arpl
scas
cmp
mov
xchg
adc
shll
dec
and
out
mov
xlat
sbb
cmp
sub
std
loope
das
aam
out
out
sbb
adc
xchg
xchg
push
mov
lahf
gs
in
or
or
sahf
sbb
pop
out
mov
es
ja
inc
xchg
and
mov
leave
mov
lret
cmp
movsb
cmp
mov
sbb
mov
sub
outsb
sbb
dec
dec
gs
sbb
popa
jb
stc
outsb
fdiv
rcr
sbbl
mov
cmp
or
pop
or
add
jecxz
cs
fnsave
fcompl
in
mov
repz
cmp
cmpsb
cmp
jmp
cwtl
sub
inc
mov
sbb
or
stc
jl
movsl
push
pop
push
lods
loope
mov
xorb
xchg
aad
bnd
sbb
sar
push
sub
sbb
pop
fildl
jp
xor
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
ja
cmp
jge
jo
inc
roll
or
loop
push
movsb
cs
out
push
pop
fdiv
or
fidivrs
mov
xchg
inc
pop
dec
cmp
in
or
fcomp
insb
sub
sbb
add
xor
push
and
jmp
mov
add
xor
in
or
inc
fsubs
aad
int
jo
sub
pop
dec
in
pop
adc
jb
cmc
mov
dec
das
lret
in
inc
dec
sub
cmp
mov
in
mov
icebp
icebp
popf
test
inc
sub
adc
inc
xchg
iret
cld
mov
dec
xchg
testl
add
push
rorb
lea
push
rclb
mov
and
push
pop
mov
scas
imul
cmpb
lods
or
lcall
inc
mov
xor
push
repnz
jnp
movsb
sbb
jmp
cmp
roll
pop
aas
push
dec
repz
je
lods
mov
adc
sarl
fs
cmp
pop
psubq
inc
into
loop
pop
outsl
subl
jmp
or
loop
icebp
mov
pop
in
push
push
idiv
out
jno
xor
mov
xor
jo
into
dec
sbb
in
js
push
pushw
cli
sbbb
daa
add
sbb
mov
jb
mov
pop
mov
ss
aad
popf
pop
and
mov
mov
ljmp
cmp
push
lret
jg
sub
mov
dec
icebp
xchg
mov
push
xor
cli
dec
xor
pushf
inc
aad
into
fistpl
in
dec
cmp
push
mov
jmp
cs
fwait
xchg
pop
in
cltd
jge
outsb
jnp
repz
notb
popl
loopne
or
outsb
jge
push
cld
js
sbb
pop
adc
stc
sbb
fsub
arpl
lea
sub
mov
inc
add
fimuls
or
mov
ja
lods
add
inc
push
sahf
nop
mov
cld
or
daa
aas
push
roll
fnstsw
loope
cld
xor
jg
xchg
repnz
icebp
rorl
scas
jp
push
bound
and
call
cmp
xor
aas
and
std
lds
cltd
push
lret
xchg
and
dec
cmp
test
mov
pop
cwtl
arpl
movsb
pop
dec
je
iret
jne
add
out
or
jno
sub
mov
mov
out
inc
cli
jg
cwtl
test
imul
out
lds
cmp
shl
mov
test
test
pop
jbe
xor
pop
push
repnz
xchg
push
cmp
aad
mov
test
addr16
cmp
lret
add
ja
arpl
bound
adc
data16
arpl
adc
mov
lcall
ror
adc
add
push
test
in
adc
cmp
mov
cwtl
fisubrl
dec
scas
adc
xor
out
imul
sbb
mov
adcl
mov
cmp
dec
mov
cli
js
repnz
and
lds
sub
sarb
js
rorb
jno
cmp
jge
jns
test
mov
sub
sub
or
pop
cli
enter
mov
and
jnp
dec
call
push
cld
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
fildl
jo
jge
jo
arpl
mov
cmp
mov
inc
sub
mov
rcl
out
mov
mov
push
xor
std
loope
and
cwtl
fs
dec
pushf
xchg
adc
mov
push
sar
mov
mov
out
and
es
push
je
push
out
movsl
imul
addr16
sub
mov
and
das
mov
cmp
or
jb
xchg
dec
and
add
aam
and
push
and
inc
add
xchg
out
mov
or
ficoml
leave
sub
test
out
or
cli
jb
test
mov
mov
xchg
filds
hlt
push
loop
or
enter
mov
inc
loopne
sub
adcb
fldt
lcall
call
lahf
fs
in
xchg
aam
mov
mov
sub
inc
fstps
jno
jns
mov
xchg
push
fiadds
negb
xchg
sbb
xorb
or
fcomp
mov
mov
inc
rorb
fisttpl
pop
adc
fsubs
pop
xor
mov
or
gs
shll
les
push
inc
cmp
jge
xor
shll
lock
sub
jge
add
repnz
popf
jb
daa
cmp
mov
sub
outsl
stos
leave
push
inc
sbb
xor
mov
jge
add
cmp
in
push
ljmp
and
stos
jo
jg
push
xor
jo
js
or
mov
das
or
std
pop
sub
push
jmp
cmc
scas
mov
push
sbb
jnp
out
pop
push
jmp
faddl
fimuls
xor
and
aaa
jle
and
jmp
xorl
add
push
rcr
jp
jne
cmp
pop
inc
cld
ss
cmp
add
out
mov
imul
jp
and
mov
mov
shl
adc
cmpsl
xchg
ret
lret
cmp
mov
jns
inc
push
inc
xchg
push
sbb
enter
push
lcall
push
adc
jp
jg
mov
hlt
adc
mov
sbb
std
and
push
jg
aas
stos
aam
sbb
mov
lock
test
out
or
add
daa
daa
and
cmpsb
bound
nop
cli
je
adc
sub
es
arpl
push
or
cmp
mov
loope
and
mov
das
pop
jecxz
push
xchg
dec
stos
mov
adc
push
wrmsr
mov
cmpsb
icebp
insl
sub
jb
add
aam
insb
icebp
fdivrs
pop
mov
pop
sub
lcall
call
sub
adc
dec
leave
sub
push
cmp
inc
aad
and
popf
negl
fisubl
fidivl
and
lods
leave
insb
out
sbb
add
adc
fists
fndisi(8087
and
dec
out
ds
inc
inc
int3
mov
ljmp
jl
lret
cmpsb
push
cs
push
sbb
or
shll
aas
test
and
sbb
jb
jno
bound
xchg
das
cs
sbb
pop
cld
lock
mov
sub
mov
std
push
dec
sti
fs
add
je
xchg
xchg
sbb
hlt
push
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
fdivl
addl
jge
jo
inc
cmp
push
out
scas
push
jae
lret
iret
mov
imul
mov
les
shl
jecxz
cs
or
add
stos
adc
std
mulb
mov
mov
add
sbb
xor
addl
push
inc
lods
mov
loop
mov
hlt
test
jle
dec
pop
movsb
mov
sbb
cmp
lods
insb
jo
or
sahf
scas
lds
mov
push
scas
dec
add
jl
push
mov
mov
adc
sub
leave
mov
inc
ret
mov
ret
inc
inc
jnp
and
scas
test
ss
aas
cli
xchg
sbb
cmp
push
dec
pop
imul
jge
sahf
dec
out
shrl
push
sbb
dec
add
push
loop
rorl
dec
cwtl
mov
popa
jecxz
adc
or
nop
rolb
ss
pop
ss
pop
push
cmp
cmpl
push
mov
push
test
inc
xor
xchg
dec
inc
and
mov
mov
repnz
pop
xchg
mov
jne
sbb
rol
pop
sbb
jp
pop
jecxz
xchg
cltd
aaa
xchg
pusha
into
mov
rcrb
fnstcw
imul
adc
ret
nop
mov
in
cmpsb
fcoml
pop
mov
jns
aam
js
sub
mov
stos
inc
mov
jnp
sub
sbbb
ljmp
xor
sbb
push
ret
jp
mov
sub
je
fmull
mov
loop
push
shl
xor
in
cli
mov
pop
loope
jl
aam
xchg
xor
push
pop
mov
fists
cwtl
and
push
pusha
pop
jne
cmp
xchg
test
rclb
xchg
dec
jae
cmpl
inc
push
and
rcll
and
inc
sub
sbb
jle
inc
jnp
xor
or
push
fs
cmp
repnz
jg
je
dec
sub
mov
sub
outsl
aas
and
mov
fld
adc
cmp
inc
xchg
fmuls
mov
lcall
push
inc
fildll
and
loopne
pushf
inc
add
jnp
cmc
enter
pop
rcr
mov
mov
mov
out
mov
pop
sbb
inc
dec
insb
sub
add
addl
dec
or
sbb
testl
and
push
mov
repz
inc
loop
inc
cld
adc
mov
xor
push
xlat
xchg
pushf
mov
daa
sub
pop
push
aad
imul
cmp
cwtl
sbb
repz
out
jl
arpl
mov
or
mov
mov
inc
out
jb
or
mov
dec
in
xchg
mov
push
inc
movsb
popf
push
xchg
add
and
outsl
sbb
cmp
cmp
cmc
mov
stos
sahf
fsubs
mov
enter
dec
and
sub
pop
pop
pop
in
out
adc
or
jae
or
fldl
pop
fisubl
dec
xchg
pop
xor
shr
daa
lods
lods
push
cwtl
ret
stc
test
pop
or
adc
xor
andl
shrb
push
rorl
cmp
push
inc
lahf
push
rol
nop
aam
xor
lea
cmp
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
mov
mov
jo
jge
jo
icebp
and
sbb
xlat
imulb
dec
dec
roll
pop
push
jae
cltd
cmp
mov
daa
push
cmp
cmp
adc
inc
dec
xor
push
int3
popf
imulb
in
data16
in
push
pop
cmp
and
dec
jne
or
push
xchg
or
sarb
dec
sub
fld
sti
testb
imulb
sub
push
lret
inc
jg
ja
aas
sub
cmc
stos
jne
je
mov
insl
out
call
repnz
cmc
push
xchg
sub
lock
dec
xlat
jp
nop
fnsave
and
pop
add
push
jns
test
jge
lods
sub
and
xor
pop
cmp
mov
jge
dec
scas
dec
jb
sub
push
adc
fildll
je
and
cs
out
in
add
data16
aam
repz
cmp
and
xchg
cs
imul
jno
jp
fs
xchg
or
add
jns
js
ltr
sub
pop
subl
call
out
js
aam
stc
push
call
and
xor
out
sahf
xchg
mov
xchg
inc
movsl
in
sub
xor
sbb
sub
loop
je
xchg
push
dec
mov
int
mov
jnp
mov
xchg
pop
sti
lahf
jl
mov
outsl
xor
inc
xlat
fstp
push
sub
rcrb
push
mov
adc
pushf
adc
push
xchg
out
cmp
sbb
ret
jb
repz
xor
jecxz
xchg
popf
mov
sbb
sbb
pop
imul
dec
pop
lret
imul
sbb
cltd
jmp
int3
pop
xor
fsubrp
nop
jne
jle
mov
jmp
dec
in
push
mov
adc
inc
inc
lock
addr16
ret
add
cld
adc
inc
sbb
test
mov
es
push
sub
cltd
pcmpgtd
rcr
ret
pop
cmp
aam
push
jecxz
rorl
incl
adc
test
dec
jns
cmpsl
adc
fistpl
jne
xchg
sti
mov
or
sahf
xchg
mov
pop
adc
xchg
inc
sbb
pop
jns
and
dec
mov
or
gs
jb
inc
pop
add
mov
cmpsl
test
ss
dec
jecxz
jecxz
aaa
sub
xchg
icebp
mov
fstpt
lcall
movsl
inc
iret
push
es
xchg
loop
fisubrs
lds
imul
fwait
cwtl
sbb
push
and
jnp
pop
imul
and
call
out
sarb
cmp
test
mov
jns
or
fwait
xor
and
or
add
stos
adc
and
sbb
or
jbe
call
loop
lods
or
nop
pusha
in
nop
je
fdivrl
xchg
xchg
pushf
inc
jnp
jl
aas
jns
into
leave
lds
mov
inc
arpl
mov
inc
ja
and
sahf
pushf
imul
mov
mov
cmp
es
dec
les
sub
mov
sub
mov
test
lea
vshufpd
movsl
pop
insl
je
jbe
xchg
paddq
xor
lock
fnstenv
jecxz
xor
loopne
dec
popa
cli
sbb
adc
xchg
jge
ficoml
mov
push
fdivl
pop
out
sar
std
push
outsl
mov
sti
subl
imul
mov
add
pop
je
push
jb
sbb
jbe
xorb
icebp
sbb
jmp
rorb
mov
add
add
add
out
pop
outsl
jne
data16
test
pushf
push
dec
shrl
jge
jo
sub
stos
std
es
in
rcrl
cmp
cmp
loop
adc
ficoml
dec
call
mov
push
jl
arpl
push
xor
jno
pop
cld
nop
push
cltd
adc
bound
lock
pop
mov
adc
sub
add
and
cmp
mov
cli
andl
mov
add
cmp
inc
dec
dec
mov
ret
cmp
mov
aaa
das
xchg
popf
out
lods
and
aaa
fisubl
adc
cwtl
dec
mov
and
rcrb
sbb
loopne
sbb
jns
aaa
pop
pop
pop
push
lahf
or
stc
adc
daa
repnz
mov
daa
inc
clc
cltd
dec
in
fsubrp
jns
pop
ljmp
sub
inc
call
outsb
fdivl
lds
cmp
shlb
sub
das
out
xor
and
cli
mov
pop
mov
adc
jge
hlt
jp
inc
or
je
dec
push
test
pop
xor
mov
jno
inc
in
pop
inc
mov
lock
cmp
scas
pop
jne
push
or
out
daa
inc
mov
aad
aam
or
test
inc
xchg
dec
sbb
ds
in
add
mov
push
inc
mov
add
enter
je
fs
jbe
pop
scas
rorb
ret
jl
jbe
cmp
and
jno
roll
xor
mov
xor
shll
in
shrl
lret
xchg
std
push
push
mov
aam
cltd
fadd
aas
aaa
mov
aam
or
and
rolb
add
js
xchg
mov
push
je
addr16
xchg
je
popf
mov
adc
es
dec
ds
dec
mov
cmp
lea
js
dec
stos
adc
jne
mov
adc
xchg
mov
cmp
add
psubusb
mov
mov
inc
sbb
aam
xchg
inc
sub
sbb
inc
into
push
cmpsb
and
loop
cld
hlt
inc
sbb
mov
mov
mov
in
or
mov
mov
sbb
sub
push
or
and
add
out
bnd
sub
into
xor
inc
repnz
add
sbb
cwtl
jae
jo
insl
or
inc
jge
sub
jmp
adc
inc
xor
dec
mov
mov
mov
dec
int3
sbb
cmp
in
dec
push
push
andb
cmp
into
int
es
cld
xor
xlat
fiadds
inc
cmp
nop
mov
mov
inc
and
mov
outsl
push
loopne
adc
std
push
adc
loop
or
jo
mov
add
sbb
push
xchg
cmp
inc
jg
sbb
test
movsb
clc
mov
sbb
and
test
scas
cmp
mov
push
std
shrb
pop
adc
jae
insl
adc
add
cmp
mov
push
cltd
sub
or
sbb
aas
pushf
cltd
leave
adc
jbe
int
das
scas
mov
push
and
and
in
enter
inc
cmp
mov
cmp
mov
mov
in
cmp
std
int
test
enter
daa
dec
or
dec
das
add
mov
fbstp
pop
mov
mov
push
and
es
push
lahf
sbb
xchg
js
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
data16
arpl
jo
ss
mov
imul
roll
jbe
jbe
fcomps
data16
xor
fwait
gs
adc
int3
pop
add
add
inc
adc
pop
hlt
push
push
aam
cld
loope
lahf
cmp
into
cmp
xor
lock
adcb
pop
push
fmuls
stc
int3
loope
ja
mov
mov
cmpl
sub
pop
add
cmpsb
xor
lods
sub
popa
adc
sbb
or
sub
add
call
lret
jbe
jno
scas
mov
out
aas
cld
xchg
bound
lcall
mov
mov
sub
mov
lock
jecxz
sub
fsubrs
outsb
fucomp
or
dec
mov
xchg
mov
cmc
inc
cld
popl
mov
pop
push
test
cmc
setae
and
in
mov
ss
movsb
xor
std
in
push
data16
mov
sbb
dec
nop
jle
cltd
sub
jmp
mov
xchg
adc
xor
hlt
outsb
iret
sbb
rclb
fs
aaa
cs
aam
sbb
jg
stc
sub
dec
aam
xorl
into
push
mov
clc
jge
push
repz
jmp
int3
mov
mov
xor
sub
cmpsb
gs
insl
xor
daa
mov
cld
and
mov
cmpsl
insb
test
int3
mov
xlat
xor
mov
mov
add
mov
or
adc
imul
mov
mov
jbe
mov
or
inc
inc
insl
sub
test
jo
movb
into
inc
xor
sub
add
lea
repz
mov
mov
xchg
pushf
les
aaa
pushf
lock
enter
adc
ficomps
insb
jns
enter
mov
pop
jp
mov
adc
adc
aaa
add
lea
dec
or
add
fs
cmc
push
fisttpll
stc
add
je
jae
fstl
inc
push
movsb
cmpsl
mov
insb
stos
inc
xor
je
adc
aaa
fucomip
sti
and
rcl
inc
sarl
jle
pop
mov
push
dec
fdivl
jp
pop
movsb
stos
pop
sub
inc
dec
push
and
sub
into
adc
mov
hlt
push
mov
test
inc
fadds
xchg
mov
scas
mov
lds
insl
testl
idivl
mov
movsl
daa
sbb
sbb
ja
fdivrl
fnstenv
sarb
xor
ja
lods
int3
push
jg
inc
ljmp
sbbl
sbb
adc
mov
andl
xchg
movsl
dec
push
or
incb
scas
sub
sub
sbb
ss
jo
dec
cmp
jb
mov
jbe
into
neg
out
jecxz
inc
cmpsl
pop
in
dec
push
hlt
das
iret
out
fldt
pop
jb
cmpsl
mov
cmpsb
in
lods
xchg
pusha
jmp
push
or
test
inc
jl
bound
xchg
rcl
xor
cwtl
incb
orl
je
or
ss
aam
mov
daa
movsb
push
push
jle
push
inc
repz
sbb
les
pop
pop
ds
mov
aam
cli
lock
std
leavew
ret
arpl
sub
loop
shlb
push
adc
pushf
jg
add
repz
mov
or
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
repz
sbb
jmp
aam
pushf
mov
repnz
jb
mov
push
arpl
xchg
es
jns
mov
mov
pushl
test
stos
hlt
stos
inc
fwait
jnp
add
test
cwtl
out
daa
cmpsl
lahf
repz
dec
jnp
jmp
or
push
aam
dec
pop
std
jo
mov
mov
testb
and
out
call
sub
in
je
adc
imul
sbb
pop
and
jo
daa
adc
lret
cmc
nop
adc
popf
mov
jb
xor
mov
adc
rol
mov
mov
fiaddl
in
push
mov
stos
ret
xor
push
and
xchg
rcrb
add
mov
sub
je
leave
xchg
inc
rorb
std
mov
inc
ja
lahf
xchg
idivl
ljmp
cli
sbb
negl
sub
push
dec
mov
loope
sahf
add
ja
or
mov
or
sub
mov
jle
lds
lret
xchg
or
jecxz
sbb
shlb
repz
scas
out
inc
stos
push
sbb
cmp
inc
push
sub
mov
mov
fnsave
xor
cs
sarl
aas
inc
daa
mov
lret
pop
dec
mov
push
enter
mov
sahf
pop
cmp
mov
push
push
xchg
rcrl
push
mov
int
cltd
pop
mov
mov
dec
xorb
ljmp
or
push
add
mov
divb
adc
lret
inc
movzbl
scas
fwait
cmp
callw
lcall
adc
loop
inc
cwtl
lahf
shrl
jb
adc
inc
lret
jmp
js
bound
inc
xor
insl
lods
sub
sub
cld
dec
dec
dec
mov
xchg
sbb
pop
inc
xchg
mov
and
mov
int
cmp
aad
mov
add
push
jge
insl
out
sub
lods
scas
sbb
icebp
mov
jg
insb
sti
jle
lcall
xchg
hlt
ljmp
and
call
repnz
loop
sbb
aas
xchg
pop
and
xchg
std
or
push
sti
in
cld
insb
leave
mov
call
clc
out
or
cmp
dec
lahf
xchg
fsubs
push
leave
int
adc
add
testl
test
xchg
pop
pop
pop
sbbl
lcall
dec
rcrb
mov
xor
xorl
push
insl
imul
out
pcmpeqd
lea
sbb
sbb
adc
pop
out
imul
add
scas
mov
aam
clc
inc
lock
adc
arpl
sti
mov
out
test
and
adc
pop
daa
mov
cmp
test
arpl
clc
mov
mov
pop
cmp
lea
mov
push
adcb
jns
xor
mov
scas
xchg
push
cld
jmp
ljmp
dec
pop
pop
and
mov
pusha
mov
cli
pop
xchg
push
jle
jmp
sbb
lret
and
movsb
inc
scas
dec
xchg
pop
insb
fs
pop
cmpl
fimuls
jno
mov
lcall
pop
mov
stos
mov
lock
sbb
jle
add
pop
pop
inc
push
rclb
arpl
push
cmpsb
dec
xor
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
sbb
dec
jge
jo
xchg
push
in
and
inc
xchg
jl
out
movsb
xchg
mov
inc
pop
mov
inc
test
les
adc
mov
bound
je
lea
cmp
push
fidivs
in
xchg
scas
cmp
into
push
ret
cmp
xor
sbb
gs
pop
mov
shrb
movsb
fnstcw
repz
sbb
ja
cwtl
cmp
ja
dec
in
nop
pop
in
outsb
add
ja
jle
push
clc
sub
push
sar
in
cmp
push
sbb
jbe
mov
jge
xor
inc
or
imul
pop
push
sub
lret
mov
mov
sub
pop
outsl
icebp
cmc
sbb
cli
pop
loop
dec
push
pop
inc
sub
gs
aam
or
call
testb
mov
test
rorb
mov
fidivl
cmp
sbb
adc
xchg
js
lcall
add
push
lods
mov
mov
jae
xor
cmp
enter
dec
dec
jnp
xchg
xchg
cltd
dec
xchg
sub
cmp
out
xchg
cmp
mov
movsb
add
dec
xchg
repz
adc
ror
jns
shlb
xor
lret
mov
rorl
loop
inc
jae
mov
test
mov
jns
je
add
inc
mov
xor
jno
jae
jmp
lahf
loope
xorl
cmc
cld
fxch
add
xchg
int
or
mov
add
int3
jne
mov
je
xchg
ds
pop
xchg
xor
clc
lods
shl
andb
das
call
or
daa
adc
push
loope
push
out
lods
dec
mov
jno
push
jae
cmp
decb
es
lcall
mov
lcall
dec
mov
jge
aad
lcall
sub
cmpsl
jle
and
adc
rclb
push
cli
repz
movsl
fidivs
jnp
add
cmpsl
mov
inc
int3
adcb
scas
sub
loopne
mov
dec
shlb
movsb
jno
dec
rclb
stc
mov
push
and
or
push
mov
mov
sbb
xor
cld
inc
jmp
inc
jo
stos
andl
mov
xor
dec
mov
call
sub
dec
sbb
inc
jae
pusha
xor
pop
mov
add
add
sarb
dec
xor
mov
les
or
or
ljmp
fmuls
leave
sbb
mov
adcl
adc
cltd
and
mov
in
dec
xchg
or
xchg
in
scas
mov
mov
lods
fadds
xor
add
iret
dec
mov
inc
jl
out
dec
pop
cmp
dec
dec
sbb
cwtl
dec
imul
xchg
movsb
jae
jecxz
mov
sbb
data16
fstpt
ljmp
and
fcoms
fndisi(8087
adc
pushf
and
fstpl
out
adc
push
insb
popf
sahf
mov
mov
add
mov
mov
aaa
addb
fcmovnbe
shrb
cmp
clc
mov
sbb
xor
sti
std
insb
push
ret
adc
outsb
lcall
aam
cwtl
daa
lds
jns
dec
rcrl
push
shll
mov
arpl
cli
stos
addl
neg
dec
or
dec
cmp
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
fmull
inc
jo
dec
jge
jo
lret
in
fbld
lgs
pop
sub
imul
jo
dec
inc
mov
in
and
push
insb
cltd
loope
mov
adc
pop
mov
or
shlb
add
cwtl
sbb
jns
mov
cmp
stc
test
xor
movsl
pop
int
pop
jp
ljmp
shlb
xlat
xchg
sahf
adc
pop
mov
jb
sbb
cwtl
or
push
gs
mov
pop
or
lds
repnz
mov
xchg
imul
inc
push
cs
clc
hlt
mov
arpl
out
leave
push
push
into
jo
sbb
popa
jnp
aaa
inc
je
pushf
adc
pop
or
lock
pop
jne
sbb
idivb
add
jbe
fistps
sti
bound
dec
lret
icebp
sub
pop
sub
ljmp
push
push
iret
pop
or
mov
adc
xchg
jl
add
arpl
xchg
sbb
mov
dec
lret
insb
aas
adc
adc
adc
lods
les
cmpsl
pop
lods
not
pop
sub
push
xchg
mov
mov
dec
test
mov
sub
testl
jbe
cwtl
cld
mov
cltd
mov
repz
xchg
mov
dec
leave
es
movl
stc
test
nop
xor
mov
cmp
loope
out
popa
or
mov
jbe
cmpl
in
xor
sahf
test
inc
addr16
call
ret
in
cmpsl
or
repz
mov
idivl
sbb
lret
xor
dec
xorb
xor
aas
movsb
in
mov
aas
cltd
ds
fsub
fwait
cmc
jge
jae
xchg
mov
mov
mov
icebp
dec
and
adc
cmc
sub
jecxz
adc
fadds
add
pop
push
cmpsl
sti
dec
add
cltd
dec
test
push
testl
lods
xor
xor
jle
mov
hlt
faddl
ss
lea
ja
enter
pop
and
pop
push
scas
test
or
mov
sahf
push
mov
adc
jb
push
aas
rcrl
rcl
mov
es
aad
xchg
lock
jbe
and
adc
add
sub
xchg
fistps
push
ret
psrlw
push
das
xchg
push
jle
cmp
stos
mov
pop
testl
imul
cwtl
jae
xor
push
mov
outsb
pop
lret
sub
mov
hlt
xchg
sbb
lret
dec
jle
lret
ds
and
inc
pop
inc
mov
add
sub
icebp
cmp
xchg
or
cmp
xchg
push
sbb
cld
and
test
imul
pop
stc
mov
sahf
stos
roll
adc
xchg
sub
das
inc
add
aam
ficomps
lahf
dec
shlb
cwtl
mov
out
mov
sub
repnz
mov
pop
lods
jge
imul
xor
mov
subb
clc
lods
and
es
sub
and
sbb
cmp
imul
mov
sub
les
or
jp
and
and
and
in
cmp
xchg
mov
push
fstpl
ds
stc
shll
adc
stos
push
test
out
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
mov
dec
jo
dec
jge
jo
repnz
jo
adc
adc
arpl
push
enter
or
jae
mov
push
pusha
bound
fistps
mov
movsb
movsb
push
sahf
shr
push
jmp
ja
xorl
jno
mov
mov
iret
pusha
mov
lret
push
fists
mov
jmp
dec
jae
adc
jbe
notl
adc
enter
xor
mov
mov
aaa
cmp
lret
mov
nop
movsl
stos
dec
lea
cmp
adc
inc
push
les
adc
fimull
mov
out
pop
stos
clc
xchg
mov
faddl
mov
mov
pop
jno
sbb
dec
mov
add
and
ret
push
lods
orb
dec
and
xchg
out
in
getsec
test
adc
aad
inc
xchg
mov
mov
jp
dec
popf
xchg
adc
pop
fstpl
cld
cmp
and
dec
mov
mov
data16
sub
ret
cmp
inc
rcr
out
jne
addl
sbb
cmpsb
out
mov
push
outsl
jp
jp
pusha
andl
js
xchg
push
adc
data16
mov
xchg
lret
bound
push
rcrb
fcom
ds
fildll
aaa
movsl
add
stos
cmp
mov
sbb
sti
das
dec
scas
stos
movsl
or
fcmovu
loopne
cld
jae
mov
repz
pop
cmpsl
add
mov
xchg
mov
movsb
pushf
sti
sbb
cmp
rcll
dec
cli
gs
mov
push
es
imull
int3
stos
dec
push
ret
xchg
out
cli
pop
sbb
inc
ret
add
repnz
and
pop
xor
ja
push
mov
push
movsb
aaa
add
dec
fidivrs
jo
addr16
or
nop
adc
fbld
insl
xchg
fcoms
and
pop
xor
jbe
clc
cltd
mov
ja
push
hlt
and
jge
dec
and
es
push
gs
sar
in
aam
dec
outsl
and
ret
jp
jb
enter
cmp
movsl
add
add
lea
mov
popf
lods
aam
lock
fsub
lea
or
inc
pop
add
add
or
dec
pop
cmc
ds
push
inc
dec
jbe
js
loope
jle
and
insl
mov
aas
stos
push
mov
mov
cmp
and
paddusb
sbb
pop
scas
mov
sbbl
daa
je
pop
push
sbb
adc
cs
push
rolb
push
inc
sub
pushf
lods
lret
pop
mov
add
mov
push
xchg
daa
arpl
mov
sub
test
push
xchg
mov
or
mov
add
shlb
or
and
and
push
ret
stos
xchg
int
nop
cmp
cmpsl
movsb
aas
call
std
or
imul
and
pop
in
inc
xor
mov
mov
mov
mov
jno
sti
dec
or
outsl
xchg
call
mov
js
mov
xor
or
out
movsb
push
repnz
fidivl
sbb
jle
stos
fcmovnu
push
or
out
test
scas
or
arpl
loop
mov
fidivrl
fsubs
rcl
and
popa
rclb
dec
jmp
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
cli
in
fidivl
dec
jo
dec
jge
jo
mov
and
or
ss
fmulp
ret
cmp
adc
xor
xchg
into
pop
pop
fstps
sarl
sahf
lods
cltd
jge
push
scas
xor
fimull
sarb
insb
mov
clc
rorb
and
mov
mov
imul
stc
addr16
test
movsl
xchg
ret
test
mov
andb
movsb
sub
cmp
dec
and
int3
adc
shll
or
xchg
fidivl
jnp
jno
imul
adc
sarb
mov
repz
sbb
cmp
jb
mov
pop
jae
jmp
fnstsw
or
xchg
add
push
xlat
xor
movsb
adc
or
or
enter
in
jnp
mov
mov
popf
cmp
cmpsl
push
sbb
push
rcrb
loopne
cmc
xchg
ljmp
mov
je
sbb
out
inc
sahf
ret
test
lahf
and
dec
pop
sub
sbb
lea
mov
fcmovbe
pop
repnz
cltd
adc
icebp
sbb
push
leave
inc
out
enter
sbb
xchg
pusha
jae
mov
push
fnstenv
push
add
stos
scas
inc
scas
adc
xor
jo
sub
cli
mov
rcrb
lcall
push
sub
mov
out
fsubs
je
fildl
ds
adc
cli
sub
pop
cmp
shrl
xlat
in
rcrb
mov
shr
mov
jb
movsb
repz
cmpl
aam
push
and
push
dec
stc
dec
flds
test
ror
sbb
pop
loop
pop
scas
jg
nop
icebp
mov
pop
mov
jb
mov
lods
insb
stos
mov
mov
mov
repnz
or
fwait
sub
cmp
push
xchg
cmp
repnz
repz
and
push
into
push
stos
orl
aas
jg
xorl
adc
xlat
add
xchg
dec
lret
pop
inc
lods
pop
stc
xor
mov
mov
or
jno
mov
lods
pop
idivb
lock
inc
setno
bound
int3
aaa
jmp
aam
aam
adc
clc
fnsave
or
jbe
stos
push
cmp
aaa
cmp
xchg
movsb
adc
test
call
outsb
loopne
movsb
in
xchg
bnd
dec
adc
fcoml
jne
stos
lret
out
ja
xor
lods
adc
fbstp
fbstp
fcomip
jmp
into
jecxz
fs
pop
ret
es
out
xor
mov
jnp
js
inc
xchg
orb
fidivl
pop
int
inc
mov
movsl
xor
scas
popf
jmp
inc
insb
repnz
add
cs
into
outsl
add
ds
rclb
hlt
inc
mov
xor
daa
out
das
jmp
out
cmpb
sbb
dec
dec
les
inc
xchg
stos
mov
sub
or
insb
mov
jb
add
rcrl
mov
xchg
ret
or
push
daa
jl
int
dec
adc
dec
mov
sbb
jnp
push
orb
arpl
loopne
mov
ds
enter
loop
push
cmp
std
and
outsb
and
in
xchg
cmp
mov
push
sub
lea
jo
movsb
out
push
sti
push
lcall
lret
in
lds
push
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
