push
mov
sub
addl
push
orl
xor
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
movzbl
push
orl
call
cmp
movl
jle
xor
jmp
movl
jmp
push
lea
orl
push
subl
push
call
movl
cmp
movl
je
andl
xor
movl
inc
movl
jmp
jmp
push
decl
push
push
call
movl
cmp
jne
movl
xor
movl
jmp
movl
jmp
xorl
call
test
movl
jne
andl
xor
movl
jmp
sub
movl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
mov
lea
mov
and
mov
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
add
movl
mov
mov
movl
lea
mov
cmpl
movl
jne
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
xor
add
mov
mov
sbbl
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jb
add
mov
mov
or
xor
add
mov
xor
mov
mov
mov
negl
mov
sbbl
mov
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
push
push
call
xor
add
dec
mov
jmp
movl
movzwl
sub
movl
mov
adc
mov
mov
mov
movl
sbbl
movl
sub
movl
mov
xor
add
movl
mov
jmp
sub
mov
negl
xor
or
mov
lea
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
mov
negl
xor
orl
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
lea
cmp
ja
mov
xor
mov
lea
push
mov
xor
lea
push
mov
pushl
call
jmp
mov
mov
mov
mov
mov
sub
xor
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
cmpl
jne
cmpl
je
mov
xor
add
mov
xor
sub
sbb
xor
xor
mov
cltd
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
mov
mov
cmp
jne
mov
xor
add
push
push
pushl
pushl
call
push
push
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
movl
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
push
mov
add
push
lea
push
call
jmp
lea
mov
lea
mov
mov
mov
mov
push
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
push
mov
add
push
lea
push
call
mov
mov
pop
leave
ret
push
mov
xor
andl
pop
ret
push
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
push
orl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
add
xor
add
addl
xor
and
mov
xor
sub
movl
sbb
subl
xor
xor
xor
xor
adcl
add
adc
mov
movl
mov
mov
movzbl
mov
mov
cmp
movl
jne
mov
movl
cmp
je
mov
movl
cmp
movl
je
mov
xor
add
jmp
int3
xor
push
fs
je
orl
stos
ret
jnp
jnp
cwtl
jnp
rol
mov
fcmovnb
cmc
fucomi
ror
add
int3
int
sar
incb
lret
or
enter
mov
not
lods
out
ror
aam
ret
ret
mov
idiv
or
leave
aam
or
add
in
icebp
sarl
jmp
out
aam
ret
neg
fcomip
xlat
add
enter
mov
call
mov
idivb
push
add
pop
ljmp
les
lock
mov
xlat
jecxz
in
in
jecxz
icebp
stc
call
or
repz
loop
lods
shrl
mov
out
loope
shl
rcr
cli
or
in
fldz
add
mov
mov
mov
aad
lock
add
lret
fsubr
loop
aad
or
loopne
test
call
cli
loop
mov
sar
jmp
pop
mov
shrb
shr
mov
out
shl
add
rcr
in
mov
sti
push
pmulhuw
lods
test
int3
mov
repnz
loope
filds
out
std
fcomp
or
call
int3
mov
loope
in
sti
test
fdiv
aam
aam
fcmovnb
fld
or
in
stc
psrlq
fisubrs
mov
fcmovnbe
call
fsubr
ret
rolb
mov
loopne
into
or
roll
stos
stos
mov
out
mov
mov
lock
xlat
lret
out
call
hlt
mov
jmp
mov
icebp
mov
push
jmp
or
ljmp
call
aam
out
neg
rcr
add
or
out
or
out
repz
jmp
fst
fincstp
lock
add
out
aad
jecxz
out
in
or
out
shlb
out
sarl
into
mov
cmc
fcmove
add
call
mov
cli
loop
in
lret
int3
les
mov
iret
iret
rcl
ret
aam
testl
ror
shl
lret
lret
in
shl
leave
mov
add
shl
loop
lret
in
jmp
out
lret
xlat
test
icebp
mov
cld
add
int3
out
shl
call
call
lods
jecxz
sti
call
mov
enter
add
cmc
in
fdivr
loope
out
stc
pop
int3
ljmp
ljmp
aam
stc
loopne
cli
aad
icebp
shl
rolb
out
hlt
fprem
ffreep
loope
call
leave
leave
fistpll
mov
incb
add
add
clc
push
fcomi
in
jecxz
aad
mov
aam
mov
fcmove
repnz
fadds
std
loopne
out
in
fsub
fucomp
int
mov
sarb
in
ret
cli
test
leave
loopne
iret
or
shl
movsl
call
shr
leave
hlt
enter
aad
flds
hlt
cmc
push
idiv
out
add
repnz
leave
idiv
test
repz
loope
jecxz
fucomip
push
into
jmp
test
scas
mov
mov
std
cmc
jecxz
cld
in
aam
aam
lock
pandn
push
ljmp
in
in
loopne
int3
aad
fidivrl
int3
push
mov
add
or
or
jecxz
xlat
out
mov
rcl
in
aam
shr
repnz
div
shr
fsqrt
rcr
clc
rcr
loopne
out
sarl
shlb
mov
std
std
stc
jmp
rolb
cli
ljmp
mov
enter
repnz
out
fldl
pmaxsw
in
mov
div
rcl
mov
int3
aad
iret
add
push
push
mov
jmp
in
in
shl
mov
cmc
not
aam
shl
les
in
rcr
add
into
add
in
ret
test
mov
sar
fcomip
xlat
idiv
add
ret
aad
in
jecxz
fldl
clc
ficoms
lret
ror
leave
xlat
int3
enter
lret
mov
testl
clc
lds
repz
icebp
out
test
loopne
les
shl
std
rcr
ljmp
sti
out
in
rol
jmp
stos
into
fidivl
iret
in
mov
loopne
fst
std
cli
out
out
ror
fsubrl
int
fucom
clc
icebp
ljmp
sar
out
std
ljmp
loop
mov
int3
loope
int
aam
fistpll
out
rcr
sar
xlat
or
or
call
scas
mov
int
scas
div
cli
mov
cli
fdivr
in
fld
lret
sti
lret
rcl
rol
in
lock
repnz
ret
neg
not
add
pop
fstp
cli
loop
add
stos
out
repz
ljmp
in
les
shl
add
rol
clc
fisttpll
into
or
xlat
enter
fcmovbe
mov
iret
sarl
std
sar
jecxz
iret
stc
out
lods
fdiv
loope
into
lods
mov
aad
shl
out
lret
stc
cld
mov
jecxz
cli
jmp
out
into
test
mov
mov
mov
loop
loope
mov
jecxz
add
fadd
shrl
repnz
enter
mov
out
add
xlat
fiadds
scas
mov
test
mov
lret
mov
int3
cli
int3
lret
repnz
call
in
inc
or
cmc
inc
sti
ljmp
in
repnz
lret
mov
leave
out
cmc
cld
in
add
pop
sti
add
or
rol
cmc
mov
ror
into
leave
mov
stc
cli
repz
int3
fucom
sti
or
rorl
jmp
imull
aam
repnz
f2xm1
lock
rol
std
iret
out
ret
shr
mov
mov
out
fxch
shlb
stc
mov
bnd
add
add
add
lret
loopne
in
mov
mov
shr
stc
mov
fcom
ffreep
ret
mov
or
or
sarb
repz
in
mov
std
jmp
mov
rcl
ffreep
or
leave
jmp
lret
clc
clc
ljmp
idivl
or
enter
in
test
loop
mov
sarl
lock
rcl
jecxz
sti
or
into
out
add
out
mov
in
loope
mov
fsubr
out
add
mov
sar
add
ret
lods
aam
jmp
mov
lods
stc
mov
push
loope
clc
ror
pop
fsubrp
loop
test
ror
iret
lret
cli
in
in
xlat
cli
jecxz
xlat
mov
or
add
lret
out
loope
iret
sarl
out
jmp
jecxz
shl
stc
repz
fsubr
rorl
loope
mov
in
out
std
aad
mov
repz
fimuls
out
fdivr
out
out
repz
enter
mov
loop
cli
iret
or
jmp
add
shl
out
aad
in
leave
call
add
repnz
repnz
out
call
into
lret
mov
ljmp
leave
ret
hlt
cld
ret
ret
ret
out
add
fstp
iret
int
shl
shr
lds
into
aad
shr
icebp
lock
repnz
mov
clc
in
lods
shl
fisubrl
cli
rcl
mov
pop
fstp
cli
pmaxub
fiaddl
lret
adc
call
mov
cli
out
fistpll
rcr
mov
sar
or
lret
add
loop
in
lret
fsub
rcr
in
out
in
lret
shl
out
fiadds
test
out
loopne
leave
ljmp
lret
mov
loope
std
add
mov
fucomp
repz
not
call
loope
rol
ror
add
lds
mov
lods
fndisi(8087
xlat
fxtract
lods
fucomp
repnz
into
mov
faddl
stc
fiadds
bswap
cli
fimuls
mov
jecxz
mov
div
mov
mov
fiaddl
loopne
in
add
fst
decl
shrb
mov
out
aam
leave
mov
fadd
leave
add
add
out
std
ret
test
lret
out
mov
xlat
fldl2t
out
sti
lret
ret
std
fdiv
loopne
shr
aam
in
or
shr
repnz
loopne
fidivl
call
jecxz
sar
in
lret
add
jmp
lods
mov
mov
lock
mov
out
mov
int3
jmp
pop
fcmovbe
jmp
iret
aam
jecxz
loopne
enter
mov
sarb
in
jecxz
sarb
add
pop
pop
loopne
jmp
in
jecxz
into
int3
mov
enter
ljmp
in
add
jmp
iret
fsubrp
lock
in
int
jecxz
lods
in
in
fcmovne
fucomi
mov
vcmpps
out
hlt
add
clc
iret
jmp
test
mov
int
mov
aad
loop
mov
lret
or
ljmp
loop
ror
ljmp
repnz
cld
test
repnz
leave
lret
push
lret
les
in
sarb
fldl
std
in
add
std
stc
ljmp
int3
iret
ror
repnz
hlt
into
jmp
jecxz
rcl
jecxz
faddp
decb
lret
pop
stos
out
int3
fucomp
fld
shr
enter
fdivr
fcmovb
clc
rol
leave
jecxz
fpatan
jecxz
repz
mov
rol
shl
mov
add
xlat
roll
pop
fdivr
or
out
enter
sar
fabs
mov
stc
in
filds
fcmovne
stc
in
repnz
in
jmp
out
psubsw
test
in
mov
stc
lods
icebp
iret
ljmp
fmuls
rorb
out
or
or
into
repnz
hlt
mov
call
mov
mov
movl
jmp
mov
shll
fsincos
leave
rcl
mov
clc
cld
xlat
rorb
mov
shl
jmp
shr
cli
into
fucomip
icebp
fdivs
in
decl
add
add
add
int3
out
in
ret
int3
shl
shr
sarb
out
test
sar
fcmovne
std
int
loop
loopne
ret
shr
loopne
ror
vpaddusw
xlat
add
clc
int
clc
add
fcmove
aam
cli
ljmp
shr
ljmp
rcr
aad
push
mov
fmulp
leave
add
lock
ljmp
fucomi
aam
repnz
fmuls
jecxz
jmp
vpsubd
loope
rol
sti
ljmp
lret
mov
in
add
add
hlt
cld
lret
fcmovnb
in
ret
iret
out
jmp
lods
call
mov
out
fld
in
out
loopne
leave
or
jmp
ljmp
lret
stc
ljmp
repz
cmc
cld
out
out
iret
fcmovnu
loop
fmulp
mov
jmp
jmp
stc
fprem1
fidivl
rcr
or
ret
dec
repz
mov
mov
fisubrl
aam
rol
cld
jecxz
jecxz
icebp
out
fmulp
aam
in
cld
mov
bnd
in
mov
rcr
clc
mov
ret
ljmp
sar
enter
or
icebp
lret
mov
xlat
lock
repz
ret
add
rcr
int3
lret
out
mov
out
not
out
in
in
add
mov
fdivp
aam
ljmp
out
out
ret
call
lock
hlt
push
out
std
lds
add
ljmp
mov
mov
lock
rol
int
rcl
cli
xlat
clc
sar
out
cmc
lds
fchs
lock
mov
div
in
div
rcr
cld
into
cmc
clc
test
test
lret
out
mov
repz
leave
not
mov
mov
jmp
cmc
mov
jmp
loopne
stc
test
ret
lret
mov
mov
add
fdiv
jmp
lds
hlt
pmaxub
sti
add
mov
jecxz
mov
sti
ljmp
fadd
mov
or
aam
add
dec
fsub
scas
loopne
mov
aad
repz
mov
hlt
jecxz
in
lds
out
cli
lret
jmp
sarl
loope
in
in
hlt
div
lock
or
stc
hlt
add
out
shl
test
not
loopne
lds
repnz
mov
mov
lret
hlt
jmp
leave
mov
in
out
hlt
icebp
mov
pop
fyl2xp1
not
loop
out
iret
sti
out
adc
shlb
call
div
les
mov
rolb
fabs
pinsrw
into
scas
mov
mov
out
mov
sar
icebp
fcmovnb
repnz
fiadds
add
hlt
aad
stc
fiaddl
lods
loop
repnz
int
in
fbstp
in
fisttps
pop
out
ljmp
out
xlat
sarl
rcl
sti
out
mov
push
in
in
fmuls
loop
jmp
in
in
iret
loop
xlat
int3
clc
leave
cmc
cli
jmp
fucomi
in
ret
ffree
fucom
lock
out
in
loopne
rcl
mov
aad
int
call
repz
leave
iret
fld
cld
clc
icebp
in
imul
out
out
push
push
add
ljmp
aam
repz
jmp
clc
add
push
or
testl
ljmp
lods
lods
cli
stc
mov
out
mov
int3
sarl
or
jecxz
int
leave
int
jecxz
mov
fidivl
cld
cli
in
out
mov
loop
neg
fiadds
cld
out
call
ret
loopne
mov
ljmp
loop
pop
loop
in
clc
adc
repz
out
test
int
in
cmc
lds
mov
out
lret
fmul
jecxz
jecxz
out
shl
loopne
int
repz
mov
repz
repnz
lock
fadd
loop
jmp
lret
mov
iret
lods
into
mov
test
imull
into
loope
bnd
repnz
loop
in
add
int
ror
shl
into
int
into
int
icebp
icebp
jecxz
repnz
lock
out
push
iret
aam
loop
out
lock
repnz
sti
iret
fsubr
shl
ffreep
mov
in
out
cld
cmc
pop
stc
add
loope
enter
repnz
stc
mov
in
loope
mov
faddl
lret
push
scas
mov
icebp
loope
fdivrs
fcompp
add
rcl
aam
rolb
jecxz
loopne
aam
fcomip
in
shl
leave
aad
cmc
fucomip
icebp
hlt
iret
aam
icebp
add
aam
cmc
out
add
les
leave
shl
leave
mov
add
rcl
lock
stc
rorb
push
loop
add
into
into
mov
jmp
jmp
faddl
mov
clc
cmc
hlt
jmp
cli
loop
lods
iret
out
mov
jmp
mov
in
ffree
lds
fmull
in
lods
mov
shl
in
mov
int3
std
ljmp
loopne
or
fdiv
out
or
ffreep
fbstp
lods
not
fcmovnbe
lock
mov
fldl
fcmovu
clc
fcmovu
fadds
or
loope
leave
lret
out
mov
shr
mov
into
into
aam
fiaddl
aam
in
loop
or
push
enter
icebp
in
shr
xlat
int
out
int3
mov
clc
out
mov
hlt
div
imul
or
fstp
fucom
mov
iret
in
mov
mov
mov
cli
fstp
add
loopne
lods
in
mov
into
iret
mov
rcl
faddp
add
loop
int
ljmp
or
out
in
iret
fmulp
lock
in
mov
ror
call
mov
loop
add
enter
mov
mov
mov
mov
cli
std
fdivrp
add
call
rcr
loop
in
add
lret
or
icebp
stos
int
int
mov
mov
mov
lret
or
cld
out
mov
enter
repz
mov
clc
fdivp
aam
cli
stc
cld
not
or
out
shr
int3
mov
fld
out
test
mov
add
in
fstp
fucom
lods
rcl
repnz
lret
lret
fyl2x
inc
hlt
enter
fiadds
rorl
add
pop
or
push
lret
scas
int
in
mov
test
jmp
out
out
mov
rolb
testl
in
scas
out
mov
leave
fidivl
into
lret
mov
bnd
hlt
movl
add
lret
lret
fisubs
shll
leave
clc
std
out
sti
add
fadd
rcr
or
or
std
stc
out
shrl
int3
mov
pushl
loopne
cmc
fdiv
lret
jmp
imull
call
repnz
shl
hlt
or
add
leave
in
or
mov
divl
mov
test
aam
fdivr
cmc
add
stc
stc
out
jecxz
not
mov
mov
mov
fld
mov
jmp
out
out
mov
lods
out
shr
hlt
icebp
in
mov
aam
push
or
fadd
jmp
push
ljmp
loopne
in
clc
mov
fdiv
cmc
clc
out
rol
loopne
push
jmp
stos
mov
mov
rcr
rcr
int3
rcr
push
aam
mov
or
or
sti
call
ljmp
int3
repnz
xlat
out
clc
iret
cld
mov
or
or
fcom
int3
in
out
mov
bnd
imul
rcr
ret
out
cld
ffree
stc
idiv
leave
fucompp
ljmp
mov
fld
repz
sti
lret
mov
sarb
rcl
jmp
bswap
mov
mov
mov
repnz
mov
ret
loop
ffree
fdiv
or
clc
lret
out
lret
shl
mul
out
mov
in
fsubr
clc
aam
ret
add
in
call
in
add
jmp
div
jmp
mov
iret
call
mov
fidivrl
icebp
jecxz
ret
in
shll
fdivp
out
icebp
icebp
out
out
in
into
add
ret
mov
into
jmp
mov
clc
mov
loope
rcl
or
pop
call
adc
fdiv
sar
mov
loop
add
cli
out
fsubr
rcl
fdivrp
cld
in
add
shlb
mov
lret
int
lret
ret
repnz
cld
fsub
loopne
adc
loope
lret
sti
shlb
aad
rol
std
jecxz
stc
hlt
add
cld
push
out
out
rol
shlb
leave
mov
in
repz
call
add
mov
rol
call
fucomp
mov
iret
mov
mov
in
jecxz
icebp
fdivl
leave
out
repnz
fdivrp
icebp
icebp
push
add
or
jmp
lret
push
lret
scas
lock
mov
shlb
ljmp
ret
add
add
lret
add
lret
out
fmul
lods
mov
icebp
out
shr
mov
mov
or
out
loope
add
mov
out
hlt
jmp
fsqrt
out
add
iret
testl
mov
out
or
push
rol
mov
ret
int
lods
icebp
fcomi
out
enter
leave
sti
clc
clc
stc
fcmovb
aam
loopne
sarb
not
out
stc
repz
mov
cli
mov
cld
add
loopne
jecxz
out
les
mov
lret
leave
sti
mov
iret
vpmaxub
sti
jmp
lret
out
lret
fnstenv
neg
int
mov
loopne
add
fisttps
push
or
shl
cmc
enter
stc
fdiv
repz
mov
mov
add
fcmovne
stos
out
fsubr
lret
in
mov
out
fcom
cli
cli
out
cmc
in
repz
rol
fldl
lret
fdivr
in
out
mov
mov
xlat
mov
fcom
lock
cmc
rcl
loopne
jmp
jmp
testb
mov
lods
in
lods
lret
rcl
shlb
sti
sti
std
les
rolb
loop
int
out
ret
fidivrl
sti
mov
rol
fucom
cmc
sti
cli
int3
fucompp
repnz
lock
lods
loope
test
mov
jecxz
mov
lret
loope
or
fprem
mov
int3
fdivp
sti
loope
test
xlat
lret
add
not
out
inc
ret
rcr
rolb
loop
clc
loope
cmpsb
loopne
iret
lods
mov
out
call
hlt
out
in
mov
std
rol
rcr
out
enter
mov
lret
imul
fcomp
idivl
repz
mul
or
lods
loop
int3
jmp
int3
aad
mov
in
shl
xlat
out
stc
in
int3
add
in
in
rol
into
leave
mov
in
jecxz
loop
fnop
pop
rcl
idiv
cli
leave
aam
stc
call
iret
xlat
mov
ljmp
mov
out
or
or
out
loopne
loop
jmp
mov
mov
jmp
in
fadds
enter
mov
mul
shl
out
les
mov
mov
ret
in
xlat
testb
add
in
les
mov
aam
loope
icebp
pop
aad
testb
fsubr
fst
xlat
rcl
lret
jmp
loopne
cmc
in
mov
aad
ret
aad
jmp
into
loopne
mov
ljmp
in
fdivrp
aam
xlat
movl
psadbw
jmp
scas
out
lret
stos
jmp
out
scas
lret
hlt
jmp
leave
mov
fnclex
movl
ljmp
cli
loop
fcmovb
out
out
in
leave
enter
loop
rcl
std
hlt
or
loop
out
shrb
ret
jmp
in
roll
call
cli
mov
add
iret
sar
jmp
lods
divl
mov
out
mov
sti
out
hlt
fdivr
not
in
or
fbstp
repz
icebp
test
repz
pop
add
rcl
fimull
or
add
out
out
out
out
rol
call
out
std
mov
hlt
aad
test
ret
fdivrl
mov
rcr
mov
shl
in
cmc
std
fmuls
fsub
call
shlb
mov
jmp
divb
rcr
hlt
aad
fcmovne
loopne
int3
mov
rcl
mov
sti
fcmovnu
aam
ret
icebp
mov
shl
cld
or
mov
ljmp
lock
out
out
fildl
rcr
in
jmp
out
jmp
enter
ror
clc
fst
pop
loopne
add
in
call
mov
cmc
int
cmc
std
shl
int
mov
add
shr
ret
loopne
out
stos
ret
ret
into
out
fnstenv
jecxz
rcr
cmc
mov
int
fnstsw
fistpll
lret
shrl
hlt
mov
int
loop
lock
iret
or
add
ljmp
enter
in
mov
neg
cmc
hlt
sar
in
or
or
out
test
fcomip
clc
ljmp
mov
lret
or
icebp
fsubrp
loopne
loopne
mov
out
ljmp
mov
lret
cli
add
adc
lods
mov
mov
mov
loop
loopne
push
aam
mov
in
aad
std
or
mov
mov
repz
iret
int3
aam
repz
or
aad
ljmp
lods
cmc
mov
mov
call
fstp
loop
out
std
repz
sar
add
test
fstp
or
icebp
fcmovnbe
in
out
icebp
in
stc
lret
in
shl
roll
fdiv
lret
aam
out
add
fadd
in
hlt
jmp
mov
fxch
mov
roll
fdiv
or
stc
fsubr
add
enter
fsubrl
aam
fistpll
aad
icebp
loopne
pop
shl
fucomi
add
ror
mov
ret
mov
mov
icebp
mov
lock
fidivrl
aam
aad
std
add
fcomp
lds
idiv
out
shr
fidivrs
jecxz
lock
into
add
int3
out
ljmp
mov
repz
lret
mov
rcr
pop
or
jmp
shl
shr
jecxz
iret
rcl
enter
faddp
loop
add
ljmp
add
ljmp
rcl
mov
mul
ffreep
add
ljmp
shlb
aam
in
in
out
cli
hlt
mov
mov
call
int3
shl
out
iret
lret
cli
out
mov
ret
call
or
lret
out
jecxz
clc
out
out
lret
stos
lock
imul
ret
rcr
cld
ret
vcvttpd2dqy
clc
cmc
cli
loope
cld
les
lods
iret
iret
mov
mov
icebp
fcomi
mov
add
std
push
call
jecxz
ror
mov
out
hlt
in
std
std
fld1
ret
jecxz
pop
add
add
fdivr
add
pmulhw
ljmp
mov
mov
fpatan
sti
lock
fcmovu
out
enter
mov
ret
loopne
in
mov
repnz
rol
or
xbegin
mov
lret
ret
fdivl
cmc
neg
loope
fst
in
test
lds
repz
shr
movsl
repz
scas
out
mov
mov
lret
out
cli
cli
cmc
mov
ljmp
test
imull
mov
fsubr
jmp
fcmovu
jmp
or
fucomip
enter
enter
aam
mov
repz
rcr
mov
int3
out
or
testl
jmp
rcl
jmp
mov
repnz
cmc
cmc
movl
aad
loope
les
enter
in
out
mov
mov
shl
shl
cmc
int3
push
in
ret
in
paddsw
test
lret
hlt
mov
jecxz
int
loope
lret
iret
leave
add
in
repz
repnz
iret
lods
xlat
mov
lret
out
mov
mov
jmp
or
ljmp
ffree
lret
loopne
stc
mov
mov
out
jecxz
mov
add
or
jmp
in
in
mov
jmp
mov
out
hlt
sti
iret
clc
repz
hlt
cli
ret
or
add
out
shl
out
shl
mov
into
fdivp
add
loopne
in
in
in
lock
lret
fucomp
int3
std
fidivs
mov
mov
int
aam
aam
mov
lock
cmc
cld
push
aam
adc
icebp
shr
icebp
lock
enter
aam
cmc
cli
rolb
cli
ret
hlt
add
fdivl
xlat
out
in
mov
shll
aad
repnz
ljmp
add
add
mov
mov
mov
lret
shl
shr
in
fisttpl
sar
iret
jecxz
aam
add
lock
out
jmp
mov
lret
fndisi(8087
out
flds
loop
in
cli
mul
or
test
out
jmp
ljmp
mov
add
cld
lret
in
call
lret
aad
mov
mov
out
aad
jecxz
cli
loopne
fucomi
shr
scas
leave
mov
call
mov
enter
roll
icebp
add
fcomp
or
sarl
mov
icebp
aad
mov
fsub
or
aad
ret
test
mov
enter
out
int3
ljmp
push
loope
or
ljmp
cmpsl
out
mov
lret
in
cld
cmc
aam
int
mul
mov
xlat
out
cli
or
lock
loopne
mov
jmp
fst
stc
iret
iret
xlat
cld
fstpt
add
loopne
fucomip
lods
divl
xlat
xlat
mov
int3
enter
ret
clc
loopne
in
fcomi
les
in
std
fimuls
out
mov
lret
shr
in
aad
aam
enter
repz
or
xlat
hlt
add
or
in
icebp
ret
out
mov
div
ret
aam
incl
lock
jecxz
loop
enter
jecxz
out
loop
lret
in
test
lock
out
repz
leave
lret
int3
ljmp
xlat
ljmp
cli
mov
add
jecxz
aam
add
in
add
int
fiadds
cmc
mov
call
mov
pop
ret
cli
cld
xlat
std
out
ljmp
repz
rcl
loop
in
mov
stc
call
fdiv
clc
jmp
or
std
or
lret
leave
rcr
in
std
hlt
std
add
hlt
add
jmp
pop
enter
mov
stos
lret
vpsubsw
add
ret
add
fdivrp
movb
push
out
loope
cmc
loope
int
iret
fdivrs
in
call
movb
std
test
add
shr
int
shr
aad
mov
leave
ret
test
add
or
loop
loop
out
in
jmp
lock
int
fcmove
jecxz
in
sti
fmul
loopne
xlat
add
lret
fsubr
out
out
fst
test
in
mov
in
mov
int3
repz
out
jmp
lret
rorl
pop
or
loop
scas
repz
fcmovnbe
neg
mov
cmc
fsubr
fdiv
mov
ret
ffreep
fstp
or
fmuls
in
test
lret
imul
stc
leave
enter
stc
mov
rcl
fcmovb
loop
fcmovu
or
lret
out
jecxz
lods
jmp
rcr
xlat
div
mov
ret
roll
add
ljmp
out
mov
shll
out
cld
in
mov
mov
rorb
clc
in
out
push
ljmp
mov
rcr
in
sti
loop
loope
loop
ret
out
cli
out
or
lock
fcmovnu
int3
aam
mov
cli
fcomp
out
fsin
fld
add
push
std
or
test
out
mov
ret
mov
cli
fcmovne
neg
stc
ljmp
add
inc
out
or
mov
stc
fistpll
cli
out
mov
in
or
jmp
mov
jmp
iret
out
jmp
fdivrl
out
jecxz
loope
or
out
movsl
mov
ljmp
ljmp
shl
pop
cld
in
clc
cli
clc
in
mov
out
cli
rcl
mov
call
int3
fcmovne
add
psraw
fucomip
out
lret
shl
test
ror
int3
repz
stc
ret
in
fisttps
loope
jmp
out
lock
mov
int3
hlt
out
clc
mov
fidivrs
lret
loop
fcmovnu
lods
jmp
test
enter
out
in
add
loope
hlt
shl
loope
leave
cld
lret
out
fcomip
mov
loop
frstpm(287
mov
int
hlt
aad
add
out
call
fsub
mov
mov
jmp
mov
out
idiv
fsub
in
out
call
pop
cli
in
loope
lock
mov
mov
neg
shll
rcr
or
cld
add
loope
mov
xlat
neg
lock
mov
aam
inc
hlt
jmp
mov
xor
mov
lea
mov
mov
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
xor
mov
lea
mov
xor
add
imul
mov
mov
mov
mov
jmp
mov
jmp
jmp
mov
pop
leave
ret
push
mov
jmp
in
sbb
in
sub
jnp
pop
xchg
mov
stos
cwtl
jnp
stos
cwtl
jnp
enter
ret
pop
cli
hlt
loope
jmp
int
repz
jecxz
out
mov
hlt
ret
mov
sar
cli
or
call
rcl
ret
ljmp
lret
loop
in
add
fstpt
jecxz
push
icebp
scas
shlb
mov
add
rcl
loopne
sti
loope
cld
or
lds
or
jecxz
in
in
ljmp
sti
icebp
mov
cld
add
add
ljmp
mov
leave
mov
mov
repz
sar
shl
loopne
lret
pandn
int
in
rol
mov
in
int
mov
mov
loop
stc
roll
or
fists
jecxz
mov
rcl
cmc
sti
hlt
mov
sti
fsubrp
sarb
loope
in
lret
iret
mov
mov
lret
out
mov
cmc
mov
out
dec
mov
lret
decl
lds
shrb
div
mov
fstp
rcr
add
jecxz
out
or
in
add
loop
repz
repz
mov
lock
mov
call
lds
add
call
int3
stc
lds
repnz
xlat
stc
enter
ljmp
call
loopne
std
out
repnz
fsub
add
mul
test
hlt
lret
fmulp
shl
in
mov
mov
leave
fcmovnu
repz
cmc
sar
aad
or
cld
add
ffreep
xlat
out
in
jmp
fcmovne
cmc
mov
jmp
mov
ret
fcmove
fdiv
or
ret
lret
scas
rcl
test
mov
shl
mov
into
mov
ret
fcmovnu
ret
push
cli
lods
ljmp
mov
jmp
shl
std
cld
or
fcmovnb
in
ret
divl
xlat
f2xm1
rcr
aam
shl
ret
clc
clc
cli
add
rorb
or
loopne
sti
aam
fcom
xlat
lock
push
rcr
loopne
or
pop
fsub
add
out
out
mov
test
fyl2x
mov
sti
idiv
add
lds
fcmovu
jecxz
pop
pop
in
fildll
ret
fdivrs
add
lock
shr
add
in
jmp
or
mov
in
icebp
fucom
shl
aad
mov
in
fcmovu
pop
cli
hlt
into
push
lret
repz
cli
mov
mov
fcom
or
push
inc
mov
mov
fnop
icebp
fmul
fstp
mov
push
jmp
ret
jmp
iret
or
jmp
jecxz
in
mov
call
idiv
mov
loop
fcomi
ret
jmp
int3
jecxz
repnz
bnd
out
leave
aam
cld
int3
mov
add
sti
push
lret
pop
add
fmulp
loope
mov
lock
jmp
icebp
neg
cli
ret
mov
add
cld
stos
call
in
rcl
sti
fst
add
mov
in
add
stc
hlt
loop
ret
into
scas
in
rcl
in
fnstenv
hlt
mov
mov
add
rorb
std
call
scas
scas
lret
mov
fdivr
int
lret
enter
sti
aad
cli
loopne
lock
cld
leave
hlt
iret
cli
scas
lret
out
out
sar
into
lret
mov
std
aam
pushl
xlat
ror
test
cli
jmp
enter
out
lret
into
test
repz
in
fsqrt
cld
std
in
out
in
enter
loope
clc
mov
mov
lock
rolb
loopne
hlt
fucom
out
in
fsub
in
movsb
iret
jecxz
mov
int3
leave
cld
fmul
repnz
fnstsw
rol
lret
aam
add
fsubrl
aad
cli
enter
int3
idiv
cli
in
ret
ffree
testl
fldl
shll
enter
cli
mov
sti
xlat
mov
decl
or
loopne
ret
int3
jmp
ljmp
push
cld
repnz
pop
loop
jmp
add
decl
mov
ret
ret
aam
fcmovbe
lret
fcmovbe
int
jmp
add
fdivr
jmp
fisttpll
les
mov
aad
aam
mov
pop
sar
int3
fiaddl
mul
add
add
ljmp
ljmp
sti
fdivr
out
enter
int
sti
ljmp
adc
out
fidivrs
call
mov
shll
ret
into
cli
lret
add
fst
scas
ret
mov
loope
in
lock
out
add
mov
fcmovb
in
out
sti
adc
fucomip
iret
ret
jmp
cmc
int
fcom
fxch
add
push
cmc
sti
loop
cli
sti
or
fnsave
divb
in
cmc
clc
div
repz
rcr
mov
fcmove
std
stc
or
xlat
shr
ljmp
add
out
call
rol
mov
rcl
iret
mov
fdivr
stc
add
lock
add
loop
cld
jecxz
aam
add
loopne
ror
mov
test
div
cli
jecxz
mov
movl
fldcw
icebp
in
mov
into
mov
in
add
or
aam
aad
cli
or
add
lods
mul
ljmp
iret
clc
mov
fcmovb
sti
add
fmulp
decl
loopne
lret
enter
stc
scas
lret
out
mov
xlat
in
out
in
aam
push
add
fcmovnb
lret
cli
in
loop
ret
hlt
shr
enter
leave
mov
fidivrs
shl
mov
loopne
fucomp
lret
in
shl
int
mov
mov
add
in
lret
or
repnz
in
int
repz
into
mov
mov
jmp
add
loopne
jmp
repnz
ret
into
loop
enter
in
mov
filds
add
jecxz
fdivr
aad
jmp
int3
divb
fucomip
icebp
mov
in
std
sti
aam
leave
loopne
iret
add
fst
rcr
shll
lods
in
lock
out
fdivrl
xlat
div
dec
int
fsubp
stos
ljmp
loopne
rcr
clc
imul
cld
idivl
hlt
fnsetpm(287
cld
adc
in
leave
int
ret
mov
idivb
fmul
out
fdivrl
ret
lret
aam
pandn
int
in
xlat
idivl
in
roll
hlt
add
rcr
or
add
icebp
rcl
in
xlat
ret
int
shl
mov
cmc
fidivrl
or
sti
jecxz
push
ljmp
loopne
mov
lret
mov
roll
neg
push
lock
jmp
shr
call
rol
sar
fdivl
mov
fildl
or
jecxz
or
or
mov
sti
sti
sar
fdiv
ret
fmul
rolb
fdivr
out
in
out
les
lret
fmul
mov
mov
out
add
loopne
add
out
push
ret
stc
iret
jmp
loope
aad
aad
mov
add
add
in
loop
cli
loop
les
out
leave
scas
lock
lret
mov
clc
mov
int3
ret
rcr
mov
sar
in
ljmp
into
in
out
fcmovu
mov
aad
icebp
loope
cli
enter
into
pop
fstp
ret
fmul
iret
icebp
in
mov
lret
aam
cli
std
not
add
in
in
clc
pop
leave
rcl
shll
hlt
clc
shr
jecxz
cmc
int3
fxch
mov
pop
neg
leave
stc
push
lret
icebp
fnsave
enter
call
pop
cli
cmc
mov
push
aad
or
ret
shlb
fistpll
fadd
mov
add
in
enter
shl
mov
mov
repz
std
sti
mov
fadd
out
or
jmp
lret
lret
lods
lret
rcl
rcr
out
clc
fcom
out
repz
test
cli
lret
int3
cli
loope
ret
repnz
in
in
out
rcl
mov
cli
out
mov
ljmp
repnz
test
cli
shlb
not
loopne
jecxz
pop
aad
shl
add
add
cli
jmp
rep
mov
mov
jmp
fcomi
fcmovnu
call
lret
ret
mov
in
out
imul
repnz
fistpll
out
repnz
test
iret
icebp
mov
fidivl
div
lret
fdivrp
repnz
testb
decb
fsub
out
add
mov
enter
divb
ret
clc
shl
add
jmp
or
shr
call
sarl
jecxz
add
repz
fisttpl
add
jmp
ret
out
leave
mov
leave
cmc
lret
sti
lock
out
repnz
fdivp
rol
add
stc
in
test
aam
repnz
rcr
cmc
mov
lret
call
ljmp
int
fsubrs
mov
mov
sar
ror
add
fstp
cli
out
pop
loope
mov
mov
into
ljmp
cli
cmc
std
add
ljmp
add
mov
cmc
in
repz
into
mov
mov
mov
out
rol
mov
in
repz
cli
fcmovu
mov
in
into
fcmovb
aad
mov
jmp
push
ret
in
out
out
mul
hlt
idivl
sti
lock
add
stc
pop
rcl
loope
pop
imul
lret
in
out
ror
test
mov
aad
sti
clc
shl
hlt
jecxz
mov
repz
fucomp
in
int3
stc
mov
cmc
int3
imul
jmp
fcompp
into
fstp
mov
test
jecxz
std
ljmp
aad
sar
out
mov
rcl
in
fmull
add
add
adc
mov
shr
iret
icebp
shl
xlat
sti
aad
add
neg
cli
repz
pop
sti
loop
icebp
ret
iret
in
into
test
into
idivl
clc
stc
lock
aad
jmp
add
cli
into
jmp
sar
icebp
jmp
mov
mov
sar
fadd
hlt
std
loopne
or
jecxz
or
loopne
aam
test
cld
fdivrp
stc
fiaddl
add
in
mov
adc
ret
fdivl
lret
lret
lret
loop
fabs
incl
aam
fucomi
jmp
out
or
mov
mov
out
lock
icebp
ror
fadd
fdivrl
xlat
fucomp
or
push
ret
jmp
call
call
idivl
cli
fsub
mov
out
add
std
sti
out
ffree
lods
mov
aam
mov
mov
add
push
fsubr
out
jmp
fcompp
scas
hlt
jmp
idivl
jmp
fcomp
add
or
enter
in
cld
test
cmc
mov
cli
ljmp
sar
aam
add
mul
or
out
out
in
out
or
repz
lret
ljmp
neg
into
aad
cld
fscale
push
fiadds
out
mov
shr
lods
mov
jmp
shr
fdivrp
mov
std
rolb
repnz
add
cmc
ljmp
rcl
xlat
mov
mov
icebp
int
repnz
shl
add
add
fmuls
sti
cld
mov
shr
lret
clc
fmulp
sar
clc
fmulp
out
loop
mov
add
iret
or
shr
ljmp
aad
int3
mov
mov
sti
int
out
div
shl
or
fcmovnu
or
cli
fidivs
out
repnz
int3
repz
mov
repz
std
in
lret
add
out
loop
int3
stos
mov
mov
mov
clc
stc
cld
mov
shl
fucomi
or
fsin
fdiv
ljmp
out
out
mov
call
aad
sarb
push
push
loop
cli
in
loope
leave
in
loop
fstpt
lock
mov
icebp
int3
lock
add
stc
lret
stos
shll
neg
shl
lret
idiv
ret
fstpt
cld
or
por
lret
shr
shr
mov
ret
cmc
cli
jmp
ror
add
in
or
cli
stc
loop
fsubl
into
cli
out
mov
mov
loope
cmc
lock
or
call
shr
ret
mov
enter
mov
div
repz
clc
add
add
or
out
fucom
lods
bnd
int3
mov
xlat
iret
cli
not
add
jmp
mov
fmul
out
lods
out
cmc
mov
lock
std
stc
sti
iret
sar
add
aad
push
in
out
loop
mov
fnstenv
hlt
fmul
repz
lock
fnsetpm(287
lret
lret
fscale
fsub
loop
in
in
imul
mov
mov
lock
leave
loop
fcmovnb
idiv
or
cli
clc
iret
add
adc
loope
aad
lods
cli
lock
ljmp
repz
fadd
iret
pop
loope
in
ljmp
cli
sti
add
hlt
add
mov
sar
aam
mov
mov
int
call
enter
add
or
aam
incl
stc
out
pop
mov
shr
cmc
aam
aam
icebp
cli
cmc
rcl
cld
jecxz
lret
call
ljmp
in
int3
stc
clc
mov
in
add
lret
rolb
repnz
ret
lret
div
mov
aad
loopne
loop
push
cli
mov
cmpsl
out
mov
into
int
in
out
lock
add
or
aam
bswap
fildl
loope
neg
scas
into
fscale
iret
jmp
mov
fistpll
fiadds
aad
cmc
add
loop
in
ret
icebp
loope
shll
jecxz
loopne
int3
neg
incb
fucom
repz
shr
int
out
mov
sti
sar
mov
lock
fldl
mov
aam
clc
push
fucomp
repnz
iret
cli
test
rcl
cld
ljmp
aad
loopne
rol
or
loopne
add
ror
hlt
iret
in
repnz
aad
repz
xlat
hlt
cld
fmuls
or
jmp
shl
out
cli
into
mov
fbstp
add
rolb
cli
decl
aad
add
fdiv
lds
out
in
mov
xlat
int
cmc
out
cli
bnd
out
push
iret
out
enter
loop
lret
divb
cli
in
loopne
loop
rol
loope
add
fimull
loopne
mov
out
xlat
neg
mov
roll
aad
testl
faddp
imul
aam
lret
mov
filds
int3
shl
cld
jecxz
sar
loopne
cld
loopne
adc
loope
ror
shll
fdiv
fsincos
ret
cmc
out
rol
lret
stc
xlat
lret
cld
dec
scas
test
mov
in
rol
lock
in
ret
ffreep
fdivr
jmp
add
fdivrp
rcr
in
mov
shll
aam
fchs
mov
or
add
fcmovnb
stc
or
repz
test
lods
repz
lret
clc
repnz
aam
fldz
xlat
add
loopne
std
add
stc
cli
shl
mov
mov
mov
dec
out
mov
mov
add
mov
in
in
leave
ljmp
lret
fcmovbe
int3
fcmovnu
mov
icebp
mul
in
add
clc
enter
mov
leave
rol
ror
mov
int
fstp
lock
hlt
lret
cmc
aad
clc
add
leave
shrb
rcl
out
mov
repz
mov
mov
push
out
test
aad
jmp
call
lock
mov
or
jecxz
stc
or
test
lret
in
lret
hlt
ret
fdivr
mov
mov
lock
aad
shl
aam
fsub
mul
mov
enter
repnz
out
cli
fsub
push
aam
neg
paddw
loopne
ljmp
shl
in
int3
jmp
in
push
push
pop
mul
out
jmp
repz
lds
leave
mov
fcmovb
jecxz
sti
ret
into
loop
out
out
mov
jmp
cld
mov
mov
cmc
out
ljmp
jmp
ror
mov
call
jmp
ret
fdivrp
jecxz
add
mov
lods
les
leave
enter
aam
neg
out
sarb
add
enter
fimull
inc
mov
enter
jmp
jmp
std
loopne
aam
sti
div
add
fmulp
int3
repz
lods
mov
mov
sar
out
int3
mov
add
out
loope
filds
or
in
repz
fcmovu
idivb
ror
mul
pop
fucomip
loope
loope
fstp
or
fdivrl
ror
push
leave
mov
ffreep
sti
loope
add
mov
out
fildll
mov
in
clc
idiv
shr
sarl
mov
roll
or
fmulp
stos
int
jmp
les
iret
fadd
add
int
cli
out
mov
out
fcmove
imul
aam
fcmovbe
mov
add
mov
shl
filds
add
ljmp
mov
rcr
in
ljmp
aam
rolb
fsub
neg
ljmp
shlb
mov
lret
sarl
out
cld
loop
bswap
out
in
iret
shll
aam
repz
jecxz
add
lock
int
shl
lret
fucomi
or
push
in
mov
in
scas
shrb
repz
into
repz
cli
fdivr
not
or
in
or
loopne
loop
shrl
hlt
into
mov
loope
xlat
in
add
in
jecxz
iret
push
dec
test
repz
imul
lods
test
fucomip
fistpll
rcr
out
push
fcmovne
mov
shl
leave
lods
lock
int3
aad
clc
stc
push
lds
out
out
jmp
lock
fdivr
aad
ror
lret
mov
icebp
pop
mov
fildl
sar
ljmp
scas
jmp
call
mov
jmp
add
mul
in
pminub
add
leave
loopne
repnz
aam
aad
out
lock
fcomi
int3
mov
loopne
add
add
scas
mov
int
mov
neg
push
leave
mov
hlt
fsub
ljmp
enter
mov
out
mov
hlt
stc
rol
int3
hlt
div
lock
cld
lret
cmc
out
in
fcmove
in
test
in
lret
not
ror
aad
fcmovnb
sar
fdivr
jmp
fsubrp
ret
ljmp
mov
xlat
ljmp
cmc
flds
or
push
out
fmuls
adc
in
in
int
repnz
mov
out
add
iret
pop
fiadds
fcmovbe
mov
ljmp
rcr
call
xlat
out
jecxz
out
in
add
inc
mov
movsb
call
out
into
mov
rcl
aad
rcr
ret
add
into
fld1
shr
lock
jmp
icebp
out
lock
jmp
ret
fsubr
push
loop
fcomip
fnstsw
shl
out
fcomip
out
add
in
or
or
les
enter
mov
sar
fdivrs
xlat
sti
cld
shl
jmp
call
in
or
ljmp
clc
call
cli
fnstsw
fisttpl
lret
fmull
jecxz
out
lret
lock
push
mov
add
out
or
shr
fdivr
jmp
shr
in
enter
leave
ljmp
div
fadd
fyl2xp1
jmp
mov
aad
jecxz
loop
jmp
ret
add
repnz
push
loopne
fcom
in
mov
int
hlt
lret
lock
ror
fdivrs
mov
in
pop
shl
out
rcl
in
fcmove
mov
fnsave
sar
add
push
add
or
lret
int3
out
icebp
in
icebp
not
aad
leave
int3
cli
leave
in
cld
ror
clc
fdiv
add
xlat
idiv
std
add
jecxz
int3
lret
iret
lods
mov
loope
xlat
in
fcmovbe
mov
sti
not
jmp
fmulp
in
add
lret
rcr
mov
loopne
int
std
xlat
repnz
ret
std
in
out
sti
fbstp
repnz
jmp
in
mov
aad
repz
ret
jecxz
or
or
int
mov
in
lods
mov
repnz
sti
sar
shl
iret
cld
sti
add
rcr
in
aam
add
loop
loope
shrb
call
loop
in
push
repz
or
hlt
loop
pmulhuw
in
in
shr
ret
rcl
aam
icebp
sti
mov
hlt
aam
fcomip
std
mov
lock
ljmp
shl
jmp
mov
int
repz
mov
cmc
hlt
dec
fst
push
movb
in
add
mov
xlat
out
int3
fxam
add
cli
not
shl
call
pmaxub
shl
ret
stos
mov
sti
icebp
shlb
mov
mov
xlat
add
loopne
add
stos
in
jecxz
int
iret
shl
rcl
cld
icebp
int3
mov
hlt
hlt
loop
jecxz
or
fxch
jmp
in
aam
not
loope
mov
loope
fst
pop
repz
icebp
lret
out
stc
mov
rcr
dec
ljmp
or
in
jmp
out
jmp
mov
fcmovnb
fst
std
in
aam
incb
out
xlat
mov
mov
dec
mov
std
rcr
add
mov
std
testl
fld
jmp
div
mov
cmc
in
ljmp
out
push
loope
or
int
repz
int
out
div
ret
fidivrs
add
in
rcr
ljmp
jmp
out
fst
in
aam
in
imul
sar
iret
clc
in
int
cli
in
cmc
loop
cmc
fsubr
fsubp
loope
icebp
shl
hlt
mov
cli
ljmp
movl
cld
lds
loopne
or
mov
lret
mov
lods
jmp
fdivrl
shl
icebp
pop
loope
invd
push
vpslld
lret
repz
mov
faddl
sti
div
clc
hlt
cli
jmp
fld1
lods
mov
xlat
in
shl
int
cmc
mov
in
lock
cli
loope
bswap
add
loopne
int3
aam
repnz
out
mov
mov
add
rcr
int
mov
frstpm(287
in
jmp
iret
jmp
lods
icebp
enter
mov
aam
roll
rol
idiv
aam
in
out
in
lret
mov
not
loop
cmc
stc
mov
into
enter
into
faddp
fnop
fmuls
incl
or
icebp
in
imul
mov
iret
repz
out
int3
mov
lock
test
out
loop
shl
cmc
mov
jmp
aam
cld
enter
add
fnstcw
stc
clc
repz
cmc
hlt
stc
aam
repnz
shr
mov
fucomp
into
dec
loop
add
loop
in
mov
aad
shr
in
mov
in
in
cld
or
out
fmull
ret
shrb
into
hlt
std
leave
jecxz
testl
jecxz
cli
loope
in
loopne
shll
shlb
clc
repnz
jmp
cmc
add
fld1
out
fdivrs
in
jmp
mov
ljmp
hlt
cli
leave
loop
aad
lds
push
lret
loope
shl
hlt
mov
icebp
add
aad
shr
loop
div
in
filds
enter
int
shr
ret
lock
hlt
fcomi
lock
add
out
or
loopne
fmuls
out
jmp
ret
out
rcl
clc
jecxz
clc
icebp
fcmovnbe
aad
mov
or
sti
out
fsubrp
mul
scas
lods
out
cli
shr
cli
lret
ret
mov
rcl
repz
push
cli
icebp
add
lret
int3
out
mov
call
int
cli
fdivr
ret
lock
rcr
add
in
jmp
adc
or
repz
out
in
repz
fadd
lret
fnstcw
mov
shl
jecxz
or
xadd
jmp
mov
out
cli
mov
loopne
pop
ret
inc
std
add
loopne
add
enter
div
icebp
lods
mov
repnz
in
lret
mov
add
fst
std
clc
ljmp
out
mov
not
loopne
mov
loopne
clc
int3
xlat
mov
out
add
in
les
mov
loope
in
leave
in
shr
iret
hlt
fucomip
in
lret
shlb
cld
ljmp
shl
out
mov
in
aad
ljmp
cld
int3
cld
mov
add
leave
stc
lret
mov
lods
lret
div
mov
mov
testb
aad
sti
std
out
incb
out
aad
or
pop
cld
mov
imul
lret
loop
lock
mov
add
mov
jmp
in
mov
loopne
repnz
repz
stc
fcomi
cmc
imul
fcomp
sar
mov
int3
loopne
in
mov
ffree
fcmovnbe
aam
fscale
ljmp
shl
xlat
push
fmul
testb
add
or
lret
fsubrs
cmc
fdivr
call
lock
add
jmp
lret
cmc
int
ret
test
ret
out
shl
jmp
add
repnz
mov
int
lret
aad
out
jmp
lock
clc
fiaddl
stc
out
fmuls
mov
repnz
jmp
ljmp
add
mov
les
add
in
mov
hlt
jmp
mov
mov
leave
loop
repz
mov
xlat
or
in
lret
icebp
rcl
xlat
call
jmp
shl
mov
std
incl
enter
out
ljmp
out
mov
xabort
aad
mov
testl
ljmp
repnz
mov
not
jmp
call
stc
ret
fcmovnb
xlat
ret
lret
lret
icebp
lods
shl
aam
mov
mov
repz
ror
fcomp
add
int
add
rcl
sti
in
inc
leave
lret
shl
lock
out
cmc
enter
rolb
repnz
add
or
jmp
in
loop
int3
xlat
lock
mov
mov
out
std
jmp
lret
rcl
jmp
shl
shr
out
aad
mov
mov
frstpm(287
jmp
int
aam
in
rcr
mov
aad
add
cld
cli
icebp
fdivp
add
loop
lret
fistpll
ror
leave
fldt
ror
into
add
fcompp
shr
ret
ret
pmaxsw
ffree
mov
rcr
rcr
ror
fucomi
aam
in
add
pop
aam
lock
jmp
fiadds
enter
test
lods
mov
in
iret
fcom
int
leave
jmp
sti
lret
lret
call
leave
mov
loopne
mov
mov
fdivr
aam
ret
ret
in
loope
or
out
fsubr
loop
into
test
aam
repz
mov
mov
mul
cli
repnz
cli
push
in
add
repz
lret
repnz
out
mov
cld
ljmp
add
jmp
ljmp
rcr
lods
jmp
rcl
test
cli
not
aam
fdivp
in
lock
fcmovu
ljmp
repz
mov
enter
rcl
aam
fidivrl
add
test
shl
out
add
loopne
mov
mov
cli
hlt
fadds
ret
xlat
push
pop
in
movl
pop
enter
scas
call
mov
sti
shlb
mov
aad
call
repz
shl
fidivs
rcl
jmp
jmp
out
neg
not
idiv
in
in
loopne
sarl
leave
rcl
jmp
mov
sti
cli
div
rcr
loopne
hlt
jmp
mov
in
ror
mov
fdivrl
rol
std
clc
out
jmp
loope
iret
sarb
iret
into
clc
out
out
les
shl
clc
or
ljmp
jmp
leave
lods
out
enter
xlat
dec
mov
test
ret
enter
fsubr
shr
lret
xlat
les
shl
icebp
out
mov
mov
out
hlt
ljmp
shlb
hlt
std
aam
std
dec
mov
lret
fdivp
mov
in
out
mov
mov
in
cmc
aad
fsub
div
icebp
repnz
add
loopne
sti
jmp
hlt
loopne
push
leave
xlat
in
out
in
mov
in
int
aad
int
ror
mov
jecxz
ljmp
mov
int
repnz
hlt
in
mov
fcomp
lret
or
leave
out
int
enter
aad
mov
flds
mov
out
loopne
or
rol
mov
hlt
inc
mov
call
movl
flds
lods
lock
xlat
mov
mov
xlat
mov
div
clc
ret
fildl
push
bnd
int
mov
fcmovne
lock
in
hlt
leave
int
sti
neg
fsubr
shl
push
add
lret
ret
lret
fdiv
in
iret
out
int
mov
jecxz
aad
repnz
les
mov
mov
mov
out
icebp
call
ror
out
pop
idiv
mov
mov
loopne
xlat
shl
lds
cld
call
fcmovnbe
ret
add
add
fildl
fisttpl
clc
int
loopne
fadd
mov
lock
pushl
sti
xlat
loope
out
loope
leave
loop
fmuls
out
in
loopne
in
mov
fdiv
repz
enter
in
imul
movb
shrb
fcom
lods
iret
ror
jecxz
loop
movl
cld
ljmp
stos
loop
out
jmp
out
into
mov
fstp
ret
jecxz
xlat
out
mov
hlt
ret
fxch
mov
lock
mov
fucomp
fcomp
ret
mov
ret
lret
ret
jecxz
or
test
scas
lods
icebp
jecxz
rcl
mov
jecxz
hlt
shl
ret
stc
jecxz
add
aad
int3
add
shrl
out
leave
in
int
in
add
clc
repnz
fucomp
ret
out
fxch
loopne
mov
test
repz
rcr
rcl
loope
faddl
jecxz
hlt
out
jmp
lret
jmp
aad
mov
fdivr
aam
enter
rcr
cmc
lret
fcmovu
ret
jmp
int3
mov
lods
mul
repnz
int3
rcr
ret
add
mov
ret
std
or
iret
out
call
scas
in
mov
mov
movl
aad
or
mov
lret
ret
loopne
icebp
mov
shl
ljmp
incb
ffreep
hlt
jmp
loopne
cld
loope
movl
decl
movl
orl
lea
incl
mov
decl
mov
movl
movl
sub
mov
incl
mov
orl
mov
subl
xor
sbbl
sub
movl
sbb
xor
xor
movl
mov
mov
movl
cmpl
jne
movl
cmpl
jne
sbb
mov
andl
mov
xor
sub
jmp
mov
push
outsl
jbe
loope
sbb
mov
mov
jnp
shl
out
out
mov
cli
idiv
sarb
ljmp
jmp
out
div
iret
fcom
fdivp
mov
lret
mov
int3
loop
test
test
std
out
mov
ret
ljmp
std
mov
cli
fcmovne
lock
mov
or
push
rcr
jmp
out
fldt
mov
aad
mov
fucomi
call
out
fsubr
loop
cli
jmp
out
out
mov
out
mov
clc
out
ljmp
rol
out
in
in
icebp
jmp
fabs
add
cld
or
or
std
fnstcw
rcr
mul
leave
lock
call
rol
out
les
loop
fcos
repz
fildll
loopne
mov
icebp
in
into
ret
sar
cld
mul
loope
int
loopne
icebp
loope
idiv
leave
int3
fcmovnu
mov
ffree
rorl
jecxz
or
stc
rol
int
jmp
in
lock
in
mov
in
fstp
shr
idiv
or
iret
into
jmp
loope
scas
in
repnz
mov
fxch
xlat
mov
mov
std
ret
pop
iret
psubsb
loopne
mov
out
mov
fscale
mov
shl
fcomp
out
lret
add
out
ror
loope
mov
cmc
sti
into
mov
fnstcw
imul
sar
push
testl
lret
fadd
lock
in
icebp
repz
lock
mov
fdiv
lret
add
cld
loop
loop
out
mov
call
repz
clc
ror
cmc
ret
add
shl
shl
fcomp
out
add
shl
imulb
ljmp
rcl
clc
fadd
xlat
rol
jecxz
adc
ret
out
aad
sti
jmp
xlat
fdivr
hlt
std
mov
ret
pop
cmc
shl
sti
or
jecxz
mov
mov
ret
mov
std
out
hlt
in
stc
sar
or
fucomip
int
mov
ret
ljmp
loop
add
fadd
testl
or
cli
or
out
jecxz
cmc
iret
aad
fidivl
int3
mov
cmc
cmc
std
cli
jmp
out
lods
lods
in
repnz
in
jmp
mov
movb
aad
mov
out
sarl
shl
mov
incb
rolb
fcmovnb
loopne
rcl
rorl
iret
jecxz
out
test
jmp
loop
cmc
mov
add
or
aad
call
in
leave
loope
repnz
mov
shl
mov
shl
add
cld
lret
add
lock
in
in
jmp
cmc
mov
sarl
repnz
sti
hlt
add
sti
pop
or
add
int3
mov
mov
mov
dec
fucomi
add
jecxz
push
out
std
std
std
aad
iret
pop
ffreep
leave
mov
loopne
shl
mov
mov
aad
leave
pop
leave
in
test
loop
sar
cmc
mov
mov
loop
out
hlt
bswap
in
loopne
mov
mov
rcr
jmp
hlt
repnz
sarl
les
lsl
or
mov
mov
aam
into
clc
std
mov
fldl
jecxz
ljmp
stc
std
f2xm1
into
in
lods
lret
mov
mov
rcr
mov
int3
lock
or
or
adc
test
mov
iret
loopne
call
loope
fcomp
jecxz
ljmp
out
or
scas
in
mov
sar
lock
mov
fcmovbe
mov
loope
jmp
or
mov
scas
mov
repz
fcmovne
mov
repz
add
jmp
fstp
fcom
imul
ret
ror
clc
out
out
divl
rcl
out
add
fiadds
fmuls
fldl
repz
shr
shr
xlat
shr
call
imul
add
out
std
aam
std
out
fadds
lods
shlb
icebp
out
dec
leave
mov
std
fstp
xlat
add
int
stos
ret
hlt
sar
cli
stc
icebp
idivb
ret
ret
loope
fcomip
aad
pop
out
in
push
loop
ljmp
out
lret
out
mov
faddl
ror
jmp
rol
movsl
out
shlb
aam
add
add
int3
mov
fdivp
cmc
mul
int3
add
ror
mov
lret
out
xlat
lret
call
aam
loop
rorb
lmsw
shr
hlt
jmp
call
out
ret
loope
clc
fnstcw
repz
mov
shl
in
icebp
in
rcl
mov
mov
mov
loope
aad
add
hlt
fcmovnb
or
add
out
jmp
sti
not
icebp
leave
call
rcr
add
cld
ljmp
loope
imul
leave
in
ljmp
lock
filds
push
cli
add
loopne
fsubr
or
test
in
hlt
ljmp
mov
cli
out
loop
sti
push
cld
sarl
fsub
hlt
stc
fsubr
repnz
out
mov
or
fadd
loop
or
icebp
sarl
rol
mov
std
fsubr
sar
xlat
incb
shl
jmp
loopne
lret
scas
shr
fcmovu
enter
xlat
stc
shl
cld
out
in
add
push
shr
dec
jecxz
enter
shr
aad
shll
mov
fcmovnbe
lds
enter
add
repz
shr
mov
aad
out
int3
dec
mov
in
roll
aam
mov
enter
aad
loopne
lret
cmc
mov
mov
hlt
sti
jmp
jecxz
lds
add
stos
enter
jmp
out
jecxz
sti
aad
fucomi
neg
fmul
enter
clc
icebp
mov
rcl
shr
jmp
enter
shr
mov
lret
out
in
mov
out
aad
div
idivb
shl
loopne
stc
out
loop
vpsraw
test
in
lods
rcl
out
jmp
aam
sarl
sar
ljmp
scas
mov
shr
lret
mov
int3
in
aam
aam
mov
ret
incl
into
jmp
enter
scas
mov
fcmovbe
scas
mov
int
jmp
icebp
out
mov
shr
or
call
enter
mov
hlt
loope
lods
mov
fnstcw
out
add
xlat
hlt
sti
cli
jecxz
mov
ror
loopne
shlb
aad
shl
add
cld
stc
or
loop
jmp
icebp
mov
repz
out
les
jecxz
add
repnz
in
hlt
add
or
leave
ret
scas
jmp
scas
out
fldpi
in
ret
cli
int3
loope
int
std
ljmp
fimuls
cli
out
ror
repnz
out
add
icebp
into
xlat
roll
hlt
stc
stc
or
adc
or
iret
repz
ljmp
hlt
in
mov
mov
out
jmp
out
fmuls
add
rol
jmp
hlt
shr
cli
mov
pop
mov
or
ror
bswap
scas
out
out
stos
lock
out
scas
out
fldlg2
cmc
aam
mov
loopne
aad
fcmovb
add
ret
jecxz
divl
aad
into
aad
add
shl
pop
out
enter
enter
in
shl
test
leave
incl
cld
aad
icebp
cmc
in
jmp
sti
fxch
paddb
clc
lds
call
sti
in
mov
mov
in
fsubp
call
in
shl
sti
jecxz
aam
std
ljmp
out
int3
xlat
mul
bnd
rcr
mov
lret
loope
cmc
testl
in
enter
mov
in
fidivrl
shl
fidivrs
sarb
fcom
ljmp
sti
idiv
clc
aad
push
cli
loopne
fcomip
mov
in
out
aam
jmp
lret
call
aad
add
fst
or
add
fstp
scas
lods
mov
mul
fadd
mov
add
clc
lock
loope
aad
add
in
or
out
jmp
out
loopne
stc
ljmp
iret
repnz
add
roll
loope
add
loope
ret
mov
repnz
shr
out
lret
mul
hlt
lds
loopne
cmc
add
add
or
jmp
cli
mov
sti
call
add
add
vpmullw
cli
jmp
out
stos
out
mov
jmp
in
repnz
repz
rorb
push
cmc
pop
clc
loope
loop
mov
loopne
loop
loopne
mov
hlt
repnz
or
ret
stc
jmp
int
jmp
int
icebp
vshufpd
jmp
mov
out
clc
fcmovnb
in
repz
cmc
mov
jmp
in
aam
into
lret
mov
mov
lock
cli
hlt
add
in
int3
fidivs
stc
fucomi
fcmovbe
cli
stc
in
repz
fcmovb
int
std
add
or
loopne
ror
in
int
repnz
mov
repnz
neg
in
or
mov
vpmaddwd
icebp
rol
int
mov
mov
std
in
out
push
cmc
fiadds
in
or
in
leave
mov
shl
out
out
in
mov
add
decb
fcmovnb
pop
sti
or
add
push
adc
mov
mov
int
shll
jecxz
add
shl
fucom
loope
call
ljmp
into
icebp
iret
into
std
ror
mov
icebp
out
cmc
ret
pop
mov
out
or
lods
divl
out
aad
dec
mov
cld
stc
cmc
pop
testl
into
add
shlb
lods
into
lock
cmc
mov
aam
cmc
int3
fcomi
ljmp
into
enter
stos
ret
shll
add
rcl
jecxz
add
loopne
iret
leave
lret
icebp
mov
mov
out
enter
add
aad
lock
loopne
cld
add
sti
out
or
scas
shll
mov
loopne
mov
add
test
jmp
rep
jecxz
ret
fdivl
lods
mov
ret
stc
lock
mul
pop
fdivrp
add
faddl
lods
lret
test
ret
iret
neg
aam
call
lock
add
out
clc
iret
loopne
lock
hlt
in
imul
hlt
shr
into
repnz
add
fsub
jecxz
rcr
sti
icebp
hlt
leave
loop
ror
lock
shl
mov
mov
sti
sar
call
mov
incl
in
hlt
hlt
ret
mov
out
lds
call
mov
in
out
fisttps
repz
mov
shl
stc
jmp
fsubr
add
mov
sti
fcmovu
shr
push
fmulp
lock
scas
mov
out
lret
int
leave
call
fdivrl
out
fcom
mov
mov
mov
jmp
mov
iret
in
rcl
ret
loopne
cli
aam
add
jecxz
in
ffree
mull
lock
cli
lret
neg
mov
lret
in
decb
add
call
enter
lret
enter
mov
in
enter
loopne
lret
lds
leave
push
dec
int3
imul
shl
call
repnz
ror
add
mov
add
call
in
into
test
mov
out
fcmovnu
lret
clc
ret
rol
in
in
add
in
repz
mov
out
out
in
clc
into
mov
mov
fabs
out
loop
or
in
enter
shl
div
aam
mov
incl
sti
ror
add
lret
add
shll
sar
lods
std
shl
hlt
jmp
test
add
stos
lret
lods
lock
jmp
in
cld
int3
add
sar
cli
fsubrp
icebp
clc
sti
push
in
or
loope
or
out
jecxz
repz
repz
hlt
cmc
shr
repz
shl
rcr
in
icebp
clc
enter
std
iret
faddp
div
scas
ljmp
call
sti
cld
hlt
out
mov
or
cld
iret
in
sti
fiaddl
in
jmp
in
jmp
in
xlat
lret
out
hlt
jmp
rol
rcr
iret
jecxz
fsubrp
scas
mov
ret
int3
out
lret
fnstsw
repz
les
decb
aad
add
or
int
test
lock
idiv
mov
into
add
rol
add
fadds
out
clc
shl
mov
icebp
mov
mov
int
mov
int3
fdivp
stc
loop
mov
repz
lret
repz
mov
sarl
cmc
hlt
pop
icebp
stos
xlat
shll
mov
mov
enter
fsubp
loopne
rol
push
loope
add
int3
in
aad
loopne
mov
mov
std
mov
loope
leave
in
scas
in
mov
repnz
mov
aam
aam
sar
call
in
sarb
hlt
cld
cld
repz
jecxz
sti
jmp
jecxz
call
out
mov
cli
or
iret
out
in
fadd
in
enter
cli
mov
icebp
ret
rcl
stc
jmp
stc
cli
add
flds
iret
aad
lret
ror
sar
std
cli
fiadds
sti
shl
faddl
int
jmp
enter
jecxz
icebp
mov
mov
lret
fadd
aam
fmuls
add
sti
or
ret
out
lods
mov
sar
repz
repnz
fdiv
add
ret
cli
loop
lret
jecxz
mov
mov
mov
out
mov
loop
in
lds
add
lret
int
iret
in
in
int
cmc
hlt
loop
cli
hlt
jmp
roll
jecxz
stc
mul
std
or
ljmp
ffreep
lret
out
ljmp
cld
loope
mov
out
fdiv
push
jmp
loopne
push
in
ror
xlat
lock
mov
in
jmp
fptan
fdivp
testb
cmc
or
in
xlat
ror
jmp
ror
mov
hlt
idiv
into
neg
icebp
incl
add
loope
in
int3
iret
mov
out
fxch
shl
jmp
fdivrp
int
filds
loop
iret
ret
out
or
repnz
scas
call
iret
mul
icebp
fdivr
clc
shl
hlt
rcl
rcl
enter
in
out
ret
out
loope
mov
rcr
leave
not
leave
fdivrs
cli
fcomi
rcr
push
jmp
or
lods
icebp
lret
enter
cmc
out
mov
sti
fsubrp
add
add
or
add
call
out
cmc
ror
aam
hlt
ljmp
not
cli
sar
mov
fisttps
call
into
fucom
fidivrl
fcmovu
cmc
ljmp
rolb
jmp
add
fisttpl
iret
mov
rcl
shl
mov
incb
push
add
fcmovu
aam
dec
repz
lret
mov
loope
in
scas
fdivr
mov
in
repnz
fiadds
sti
sti
fdivr
or
loopne
enter
lret
imul
cmc
mov
rcr
fdiv
rol
loopne
rcr
loope
push
loope
jecxz
out
imul
stc
repz
clc
cmc
jecxz
xlat
sar
loop
ljmp
out
repnz
in
jecxz
ret
out
fucomp
jmp
lock
add
fnsetpm(287
fadd
lds
loopne
int
ror
lods
rcl
into
leave
mov
int3
int3
hlt
fcmovu
loop
into
mov
lock
fcmovb
fmuls
psrad
test
stos
in
out
out
call
fdiv
lret
in
or
in
loopne
ljmp
rcl
sar
mov
mov
shr
cld
cmc
or
loope
or
out
ret
repz
mov
mov
fninit
in
idivb
or
movl
mov
sti
mov
lret
in
mov
rol
jecxz
fdivp
jecxz
repnz
hlt
jmp
shl
shr
into
fcmovbe
mov
mov
aam
icebp
add
rol
fucom
add
ljmp
mov
stc
mov
fmulp
mov
lock
push
add
fmul
shlb
lret
mov
fcmovnu
rolb
add
or
iret
aam
std
ljmp
mov
mov
mov
fdivp
out
cld
loop
jmp
fiadds
rol
mov
fidivrs
mov
int3
add
loope
add
jmp
ret
mov
lret
aad
mov
int
hlt
mov
jmp
add
or
faddp
neg
loopne
out
int3
sti
int
xlat
mov
hlt
out
mov
leave
loopne
fadd
lret
in
fadd
mov
mov
aam
stc
mov
not
mov
in
shl
add
fsub
xlat
out
add
into
int3
add
loopne
enter
cli
ljmp
int
rcr
out
fisttpl
aam
iret
lret
out
mov
loopne
mov
rol
idiv
mul
mov
leave
out
out
int
loop
lret
out
les
int
div
int3
lds
or
add
aam
repnz
enter
jmp
lret
std
mov
in
fcmovnbe
ret
ret
add
pop
sti
fisttpll
jmp
mov
in
imul
test
jmp
add
add
out
or
in
fxch
mov
mov
loopne
hlt
sti
jmp
jecxz
mov
hlt
or
fildl
fcmovbe
cmpsl
in
in
leave
sti
jmp
fcmovb
mov
ljmp
jmp
mov
mov
loop
hlt
enter
sarb
cli
sti
sti
pop
repz
jmp
push
les
ret
mov
xlat
shr
mov
add
fptan
std
pop
aam
std
call
cld
call
int3
mov
shr
hlt
lret
fldl
mov
cmc
ret
fisttpll
fdivr
pop
fnsave
repz
fidivl
int
icebp
ljmp
or
into
scas
out
loopne
in
ret
repnz
mov
fdiv
fsubrp
fsubr
repnz
or
std
pop
pop
loopne
ret
ror
rcl
mov
aam
call
fsub
loope
add
jmp
faddl
call
icebp
xlat
mov
loopne
out
test
cli
enter
cld
lret
add
or
enter
ret
leave
neg
fsubrp
aad
mov
rcr
add
push
loopne
push
in
add
mov
xlat
mov
in
add
cli
xlat
in
test
clc
jecxz
aad
fsubr
in
movsl
jmp
shl
mov
fdivrp
int3
ret
repnz
ljmp
in
out
loop
shl
mov
fcomi
fcomip
in
fsub
icebp
fnstcw
aad
in
jmp
scas
in
out
out
shl
fyl2x
lods
cmc
mov
sti
ror
out
shl
add
mov
fdivrp
or
icebp
cmpsl
shl
cmc
into
aam
call
mov
clc
repz
loopne
loope
clc
out
or
decl
lock
jecxz
divb
fmulp
call
lock
cmc
add
stc
fsubrp
lret
jmp
hlt
out
mov
aam
enter
fldz
mov
add
fcmove
or
pop
aam
add
shll
inc
mul
in
ret
mov
aam
cli
add
in
fmul
mov
iret
icebp
sti
ror
mov
fldz
rcr
lret
jecxz
not
aad
rcr
out
movsb
out
hlt
aam
bnd
mov
neg
idiv
clc
fucom
ljmp
mov
call
mov
shl
enter
aad
out
add
ret
out
filds
fscale
test
mov
mov
enter
mov
sarb
mov
or
aad
add
or
add
int
mov
out
mov
ror
fdiv
mov
out
mov
or
fcoms
in
mov
mov
out
jmp
fdivr
loop
cld
add
loope
stc
add
out
rorl
test
in
mov
repz
rcr
into
clc
jecxz
cli
loop
lock
flds
repnz
fistpll
ret
hlt
add
fstpt
add
aam
into
test
shr
mov
icebp
sarl
ror
int3
ljmp
clc
xcrypt-cbc
cmpsl
shl
xlat
ret
xlat
xlat
aad
test
stc
in
out
clc
rorb
cld
clc
add
or
stc
ret
ror
shl
int
lret
les
pop
loop
hlt
add
lret
in
leave
add
or
fisubrs
mov
ljmp
out
out
mov
add
cld
add
mov
mov
aam
jmp
int3
call
out
push
xlat
icebp
push
out
or
push
add
fdivl
cmc
out
lock
lock
add
fdivr
sti
add
call
sti
sti
cld
stos
loop
lret
aad
rol
into
in
lock
loope
fcmovbe
add
cld
call
rol
into
out
out
stc
out
ljmp
loop
fildl
fdivr
pextrw
invd
out
icebp
shl
mov
sti
rcl
mov
mov
fcom
sar
fmul
cli
fcmovb
add
ror
mov
mov
out
rcr
cld
mov
sti
loope
or
call
lret
int
into
lret
clc
mov
out
mov
shl
hlt
loopne
push
call
in
in
loopne
mov
lret
out
iret
mov
aad
icebp
add
ret
loopne
mov
repz
out
lods
idivl
mov
add
icebp
add
add
out
add
int3
add
repz
mov
roll
into
fsub
loopne
add
pop
fcmovnu
pop
out
test
stc
sarl
in
aad
repnz
repz
mov
ffree
add
shrb
rol
loopne
leave
into
fidivrl
sti
cld
std
push
in
out
aad
add
in
shrb
not
iret
fptan
fidivrl
in
clc
mov
enter
add
div
div
out
rol
rcr
mov
loopne
add
add
or
in
inc
push
iret
call
aam
into
int
icebp
hlt
int
fildl
loop
ret
idiv
lret
sar
push
in
shl
fstp
ret
lods
fcmovb
ror
rcr
cmc
mov
loop
loopne
jecxz
hlt
push
decb
rcr
mov
shr
test
stc
out
fcmovne
cld
stc
int3
in
out
in
mov
testl
pop
test
int3
shr
lods
in
clc
loope
pop
mov
fcmovbe
aad
lret
add
push
out
repz
mov
out
jmp
cmc
mov
iret
mov
ror
sidtl
scas
les
repz
cli
push
in
pop
sarl
fcmovnu
out
ror
repz
loop
rcl
in
mov
stc
add
frndint
cli
lret
add
ljmp
call
mov
mov
lret
out
aad
leave
int
add
lock
test
loopne
out
call
shlb
icebp
jecxz
loopne
ljmp
or
cmc
ror
lret
lret
loopne
mov
sar
cld
idiv
hlt
xlat
or
push
stc
lock
lret
out
mov
int3
ljmp
repnz
clc
xlat
out
lret
ljmp
jmp
leave
shr
repnz
mov
hlt
in
fistpll
sar
std
rcl
fucom
in
repz
mov
mov
mov
rolb
ret
mul
or
cld
enter
jmp
loope
call
mov
rcr
pop
cli
lock
ljmp
into
stos
rol
in
rcl
imul
fcomip
mov
ret
fsubp
jmp
out
cli
fiadds
out
into
shl
in
mov
icebp
sti
jmp
mov
jecxz
jmp
jmp
fisubrl
rol
call
jmp
mov
in
add
push
movb
or
leave
mov
rol
int
into
mov
repz
clc
fdivr
mov
mov
int
loope
icebp
loopne
mov
aam
out
jmp
cld
repnz
or
push
jmp
or
shrb
shl
clc
mov
int3
mov
call
mov
iret
push
jmp
cmc
mov
lret
mov
iret
lock
not
lret
push
fisttpll
shll
out
xlat
out
jmp
icebp
mov
shl
out
loope
aam
add
add
ljmp
lret
divb
mov
fidivs
std
mov
fildl
lret
std
in
shl
mov
mov
in
in
mov
cld
icebp
mov
add
fmuls
loopne
shl
loop
loop
mov
mov
aam
int
call
jecxz
jecxz
lret
sti
decb
or
lods
div
mov
ror
int
icebp
lret
cli
fcom
fptan
stc
incb
ret
in
out
ljmp
fmul
in
mov
mov
out
call
aad
add
call
or
lods
mov
shr
lret
mov
lret
inc
in
mov
loope
add
shrl
cmc
cli
fstpt
lret
rorb
stc
fld
cmc
dec
into
or
fnsave
in
xlat
out
add
ret
mov
loopne
ljmp
test
out
xlat
lret
test
neg
mov
test
fimuls
in
fucomp
cmc
or
add
loop
lret
cli
mov
mov
fdivrs
not
mov
or
shr
int
in
jmp
int3
not
repz
rcl
cld
filds
add
call
out
ror
aam
jecxz
sti
icebp
clc
mov
lock
icebp
loop
jecxz
or
movb
fucomp
out
in
in
lret
in
int
out
rol
fdivr
fucom
hlt
cld
add
fcomp
push
adc
faddp
cmc
ret
shl
out
out
fstp
mov
jecxz
ffree
jmp
aam
stc
out
jecxz
rol
sti
mov
into
enter
fdivrp
call
ret
fcmovu
int3
out
lret
leave
dec
leave
or
repnz
in
ljmp
fucomi
pop
fcmovb
add
or
leave
in
dec
jmp
in
lods
mov
in
ljmp
hlt
mov
jmp
add
in
ret
lods
in
aad
ror
out
lock
mov
not
push
add
sti
or
add
jmp
loopne
loope
scas
leave
out
enter
fidivrl
ret
fsubp
std
add
or
out
ret
call
aam
aam
mov
std
hlt
stc
icebp
add
mov
cmc
pop
loope
cld
out
or
jmp
not
cmc
hlt
fdivrs
call
jecxz
call
into
scas
lods
ror
out
shr
in
lret
in
ret
mov
in
fadd
incl
enter
stos
mov
rol
out
hlt
rcl
mov
aam
mov
movl
add
fnclex
fdivr
jecxz
ror
loop
icebp
lods
mov
mov
lret
sarl
int3
rcl
loop
psubsb
loopne
shl
ror
in
int3
test
iret
ret
sti
lock
add
xlat
add
call
fldcw
loop
ret
call
rcr
xlat
in
rol
add
jmp
cli
stc
repz
into
loop
not
in
clc
div
repz
mov
loop
pop
fsubp
stc
hlt
mov
add
std
or
in
rol
call
ljmp
fsubr
filds
add
or
fsubp
fsub
int3
add
ret
rol
mov
lret
in
fsubrs
in
inc
jecxz
repz
in
in
int
int3
lock
mov
out
mov
xlat
int
fcmovne
loop
add
not
hlt
or
or
ficoms
mov
icebp
bnd
shl
ljmp
mov
add
shr
fxch
push
iret
adc
fidivs
jmp
cmc
out
cmc
rcl
call
loopne
add
fdivrl
or
enter
ret
jmp
xlat
mov
jmp
std
add
cmc
jecxz
jmp
or
shl
shll
clc
into
leave
lock
idiv
repnz
clc
out
ljmp
int3
out
mov
loope
ftst
jmp
mov
push
icebp
pop
shl
add
fcmovne
add
fsub
rol
movsl
fsubr
jmp
mov
cmc
idiv
fnstcw
add
decl
adc
iret
out
lret
call
iret
aad
mov
mov
hlt
rolb
call
jmp
in
icebp
out
leave
sar
aad
into
stc
add
out
cld
movb
shl
loope
enter
in
out
lods
mov
mov
neg
cmc
std
in
int3
jmp
std
loop
idiv
push
out
mov
loop
rol
aad
mov
in
lret
mov
in
fcmovu
cli
std
faddl
into
leave
add
loope
mov
scas
out
loope
jmp
loop
int
mov
decb
aam
lret
adc
in
fdivp
rol
mov
jmp
cmc
aam
lock
push
ret
push
std
xlat
iret
mov
loopne
scas
fsubp
mov
mov
cmc
mov
aam
aam
mov
loop
fcmovnb
aam
fisttpl
out
in
lret
icebp
mov
iret
into
add
testb
lret
enter
add
mov
xlat
iret
iret
fcomip
fstpt
fld
loopne
push
add
iret
leave
jmp
in
mov
call
mov
mov
mov
jecxz
cli
or
cld
out
add
int3
lret
out
mov
mov
into
in
loop
repnz
in
mov
fmulp
iret
or
fadd
shr
cmc
ljmp
ret
sarl
rorb
rcr
std
add
loopne
shll
jmp
ror
mov
sti
mov
shl
mov
jmp
loop
loop
enter
test
shrb
loope
hlt
out
in
hlt
add
aad
out
div
lret
out
mov
cli
enter
lock
into
mov
loop
add
cld
into
mov
repz
aad
in
lds
iret
cmc
fcmovnu
vcmptruess
cld
jecxz
call
mov
mov
mov
in
mov
mul
lret
movl
rcl
call
out
out
mov
flds
icebp
out
mov
cld
loop
por
out
in
out
ror
int3
ror
sarb
xlat
div
ffree
vpmulhw
loope
add
mov
jecxz
mov
out
jecxz
in
xlat
int3
std
sti
out
fimull
or
int
in
mov
loope
shlb
fdivr
add
add
mov
neg
or
iret
shr
loope
ror
aam
int3
lret
mov
iret
jmp
sarl
cmc
or
enter
mov
enter
aad
cli
sbb
orl
xor
xor
adcl
xor
orl
xor
adcl
add
adc
sbb
mov
andl
mov
subl
xor
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
call
cmpl
jb
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sbb
mov
mov
orl
xor
sub
movl
sbb
xor
xorl
xor
addl
xor
andl
xor
add
movl
adc
mov
addl
xor
sbbl
add
adc
mov
mov
mov
movl
mov
mov
movl
movl
jmp
mov
xor
mov
jmp
jl
push
hlt
pop
nop
leave
mov
xor
stos
cwtl
jnp
add
dec
loop
in
jmp
aad
repnz
mov
loop
mov
sar
shl
ret
int3
out
cli
loopne
mov
icebp
neg
mov
lock
leave
repz
stc
repz
fiaddl
xlat
ffree
fmul
or
rol
ret
lret
jecxz
out
fcomi
out
jecxz
mov
lock
fcomip
in
loopne
call
out
cmc
icebp
stc
imul
div
mov
fidivrs
add
lret
leave
ljmp
jmp
rol
repz
int
fdivr
jmp
mov
push
cli
in
ret
ljmp
mov
fdivr
pop
icebp
lock
or
lock
cmc
fisttps
add
std
rol
out
lret
int
repz
cld
std
fiadds
cld
jecxz
fldl
out
fucomip
or
call
lods
xlat
ret
rcl
mov
mov
aam
mov
mov
fldpi
cld
jmp
iret
fucomi
out
enter
jecxz
aam
mov
xabort
hlt
idiv
loope
into
out
clc
std
or
cmc
cld
in
clc
in
test
icebp
lret
iret
call
rcl
stc
cli
lret
fcmovnu
psubusw
shufps
in
mov
mov
aam
lock
repz
int3
les
push
fcmovbe
sti
lds
int3
call
loope
mov
aam
fmulp
add
mov
rol
or
or
add
loope
mov
loop
mov
out
shll
repz
add
loopne
hlt
pop
add
cli
int3
out
icebp
out
imul
mov
mov
mov
enter
add
push
jmp
fsub
icebp
icebp
xlat
leave
iret
loope
xlat
neg
rcl
lock
add
lret
fmull
repz
aam
enter
fnstcw
mov
mov
cmc
out
in
sti
std
out
ret
leave
in
ljmp
test
ret
ret
int3
xlat
cld
in
ret
rcl
or
loopne
add
fbstp
rol
iret
enter
fcomi
add
rcr
inc
or
loope
filds
stos
int3
ror
jmp
out
fnstenv
xlat
int
mov
cld
xlat
in
add
or
loop
loopne
lds
fcmovu
mov
out
stc
jecxz
push
jmp
fimull
into
imull
shl
lds
aam
clc
hlt
mov
fcomp
lret
fadd
mov
in
ret
mov
mov
mov
fsubp
fcomi
out
mov
in
lods
ret
fcmovnu
lock
div
out
shl
add
add
add
hlt
hlt
jmp
scas
scas
scas
mov
out
lret
out
int3
shl
in
add
hlt
or
add
aam
fdivrl
mov
mov
iret
dec
stc
movl
lret
xlat
cli
fcmovne
adc
fadd
out
jmp
stc
call
add
shl
aam
ret
rorb
out
int3
repz
jmp
rcl
out
in
ljmp
ret
jmp
std
push
add
in
mov
repnz
out
divb
cld
repz
add
clc
out
mov
or
mov
shl
push
fdivrs
fcos
in
fdivp
in
rorl
lock
hlt
mov
mov
into
out
icebp
clc
sarl
add
out
fadds
lret
mov
aam
fincstp
ret
aad
in
or
clc
jecxz
add
pop
out
mov
ljmp
enter
clc
aam
div
aam
add
into
add
fadd
out
test
rol
lret
add
in
add
add
fdivrp
add
or
cli
fisubrs
lret
into
shl
hlt
ror
cmc
mov
inc
test
enter
lods
test
mov
sti
mov
jmp
aad
mov
add
or
adc
mov
out
mov
cmc
fucomp
fcmovne
int
repz
imul
hlt
sti
fst
inc
add
test
bnd
rcr
int
mov
loopne
std
icebp
repnz
in
in
ljmp
lock
out
shl
stc
mov
aam
shr
out
ret
icebp
aad
loope
jmp
enter
enter
in
jmp
loopne
mov
repnz
fstpt
aad
aam
out
enter
icebp
iret
lret
jmp
test
xlat
fadd
in
jmp
in
fucomip
cmc
or
in
or
mov
mov
stc
hlt
idiv
fcmovne
ljmp
std
add
std
pop
filds
add
jecxz
lods
repnz
rcl
in
cmc
hlt
fcmovbe
fcmovu
call
xlat
loopne
add
ljmp
cld
loopne
mov
mov
mov
out
jmp
repnz
mov
pop
add
loopne
ljmp
mov
out
mov
repnz
rcl
ret
cli
std
or
lret
ljmp
lods
lods
loopne
mov
icebp
in
add
rolb
or
hlt
hlt
jmp
fidivrs
call
in
neg
fdiv
fcmovbe
rcr
add
les
add
paddd
lret
out
fsub
imulb
neg
in
iret
mov
vpaddd
inc
loope
loope
lret
lret
call
mov
mov
add
in
shl
or
hlt
out
or
push
mov
mov
lret
out
fidivrs
add
cmc
movl
icebp
les
imul
iret
aad
mov
sti
mov
sti
ret
fadd
sti
movl
lret
out
jecxz
mov
mov
sar
aad
fnstsw
clc
aam
mov
xlat
jmp
std
or
loop
fildll
aam
cli
hlt
fcmovnbe
aad
add
add
cmc
ret
out
decl
rorl
loopne
lret
lret
mov
lret
ror
lock
in
out
iret
mov
repnz
in
int3
xlat
int
lock
fstpt
not
shl
sar
inc
rol
aam
hlt
push
rorl
mov
lret
mov
in
aam
fnop
leave
int
mov
mov
lret
add
out
shl
ret
ret
mov
mov
lret
jmp
shl
aam
fdivp
fldz
jecxz
repnz
mul
out
sarl
aam
fcmovnbe
loop
fmulp
filds
cmc
aam
jmp
out
loop
lret
fsub
lock
mov
enter
ret
aad
movb
lret
add
out
loope
in
iret
lods
mov
mul
iret
repnz
jecxz
fst
jecxz
add
in
fucomip
pandn
int3
out
iret
loopne
aam
jmp
jmp
add
sti
cld
pop
int
jmp
ffree
clc
pop
adc
loope
mov
repz
or
in
clc
add
loop
out
mov
in
ret
divb
ret
sti
fsub
push
icebp
add
add
call
lods
rcr
out
mov
out
mov
mov
icebp
icebp
cli
fcomi
push
ret
call
cli
std
mov
lock
aad
fcmove
std
lret
mov
std
fimull
lret
out
out
add
adc
adc
out
call
out
repz
not
clc
ror
mov
bnd
or
mov
add
jecxz
lods
jecxz
jmp
xlat
cli
out
fcomp
stc
mov
into
neg
or
jecxz
in
filds
lock
aad
test
mov
add
cli
stc
std
fstp
call
cmc
aad
aam
les
out
loop
hlt
jecxz
add
add
loopne
call
int
ljmp
clc
lock
ret
add
loope
jmp
fiadds
stc
fsub
test
fcmovnb
shr
into
into
icebp
leave
mov
rcr
sar
fsubr
shr
enter
lret
lret
stc
repnz
int3
mov
ret
fiadds
shl
lret
repnz
out
or
into
loopne
out
mov
mov
mov
mov
mov
aam
jecxz
aam
clc
into
in
mov
shr
lods
in
lret
lods
lret
dec
fnstsw
push
sar
jecxz
icebp
loope
test
fsub
mov
into
mov
mov
fcomp
int3
mov
std
int3
out
or
cli
or
jecxz
inc
pop
in
fucomp
movsl
lret
rcr
cli
into
out
mov
loopne
cld
in
add
not
aam
cli
in
iret
mov
aad
loop
enter
mov
rcr
mov
std
in
out
in
or
ljmp
in
bnd
fdivrp
rcr
add
fildl
icebp
pmaddwd
cmc
lret
fmulp
mov
hlt
mov
stc
clc
in
shr
clc
add
int3
xlat
xlat
shr
add
fadd
ret
hlt
shl
shl
mul
hlt
in
in
roll
push
mov
fcomp
add
rol
loop
out
stc
mov
int3
fdivr
sti
sar
loop
ffree
in
loope
jmp
aad
jecxz
fcmovb
int
leave
out
iret
cld
mov
loopne
or
lock
in
fiaddl
cli
call
cmc
out
shl
mov
lods
call
sar
in
out
hlt
std
out
push
iret
fcmovu
loop
fmul
ror
int3
mov
lret
mov
mov
mov
push
loop
pop
or
ret
into
mov
rcl
lock
lock
in
sarl
add
out
clc
ljmp
out
jmp
mov
iret
xlat
leave
mov
rcr
clc
out
jecxz
add
idivb
or
mov
add
mov
in
out
hlt
mov
incl
ret
add
fiadds
out
loopne
or
mov
shl
mov
rcl
mul
leave
sti
enter
fdiv
std
pop
std
ljmp
mov
lret
cmc
div
fxch
fucomi
lret
into
out
shl
hlt
xlat
repz
or
ljmp
lods
jecxz
lret
mov
clc
std
out
test
out
rol
leave
add
stc
std
or
fmul
leave
ret
sti
mov
jmp
sar
out
dec
out
sarl
call
loopne
mov
shlb
fdiv
cmc
icebp
out
iret
call
fxch
sar
test
pavgb
int3
les
mov
icebp
clc
ret
fcom
lock
lret
add
enter
mov
out
cmc
lret
mov
repz
sti
int3
lock
rol
cmc
loop
jmp
loop
jmp
mov
ljmp
mov
pop
fmull
fadds
rol
int3
jmp
sti
test
fsubrp
inc
into
out
aam
jmp
pmulhw
pop
fyl2x
sarb
out
in
sti
aad
clc
int3
cmc
ffreep
rcr
out
cli
loope
in
fdivrp
fdivrp
adc
lods
leave
loope
sti
fcmovnb
mov
mov
out
sti
int3
add
lock
out
cli
or
enter
mov
ret
repnz
add
mov
enter
cmc
fdivr
add
cmc
push
cld
int
lret
aad
loopne
aad
scas
enter
loopne
aad
rolb
jecxz
fcmovnu
add
push
push
or
stos
fidivs
out
into
cli
aam
mov
neg
pop
fadd
aad
loopne
hlt
int3
out
rcr
int3
mov
mul
div
mov
mov
add
idivl
faddp
rolb
out
or
out
lret
iret
xlat
in
iret
jmp
int3
sarb
loop
ret
testl
sti
loopne
ljmp
lock
ror
mov
rol
call
iret
clc
in
lock
in
mov
lret
mov
sarl
leave
add
repnz
pop
enter
add
jecxz
out
lret
out
in
lods
stc
in
imul
mov
stc
std
rcr
enter
add
scas
loope
in
ret
shr
lret
shl
xlat
mov
fadd
decl
call
in
ret
repz
fcmove
sarb
clc
incb
aad
sar
ljmp
jmp
movsb
mov
cmc
div
ror
int
mov
repnz
inc
int3
rorb
cli
in
leave
fsubr
sti
std
rol
loope
test
out
cld
mov
neg
sarl
lret
cld
int3
in
in
idivl
loopne
sti
fnsave
add
cmc
repz
pop
cmc
or
loop
enter
lods
enter
iret
clc
iret
enter
repnz
ret
icebp
fnop
fucomi
into
out
or
repz
loopne
mov
fiadds
std
cmc
not
cld
call
add
ret
mov
mov
sti
jmp
clc
lret
add
sti
fxch
sti
loope
faddl
jmp
add
movb
ret
shrl
mov
mov
shl
aam
aam
iret
cli
sti
fsts
cli
stos
mov
repz
hlt
clc
testb
cmc
add
clc
loopne
fsubp
int3
hlt
mov
icebp
enter
shr
out
aad
add
icebp
rcr
aad
cli
ljmp
aam
lret
out
cli
mov
shl
shl
aad
std
or
add
psubq
out
fsubp
out
ljmp
aad
into
add
mov
shl
icebp
mul
out
add
iret
in
lock
call
add
or
rcr
out
jmp
loop
in
rol
call
rcr
iret
jmp
fdivrl
in
in
out
lret
mov
repz
lock
clc
aam
ret
cld
mov
or
clc
fadds
out
cmpsl
cmpsb
repz
cmc
int3
mov
into
icebp
cli
lret
cld
fndisi(8087
loop
movl
add
loop
in
out
lods
lret
out
icebp
imul
mul
mov
aad
int3
cld
fcmovnbe
out
hlt
aam
repnz
enter
into
shr
shr
jecxz
aam
mov
mov
aad
fcmovbe
loopne
ljmp
adc
ret
mov
repz
fidivrs
cmc
pop
roll
mov
clc
loope
in
iret
repz
scas
scas
lods
lret
shl
mov
enter
mov
ret
paddd
out
loopne
ror
mov
aad
xlat
call
idivl
ljmp
jmp
into
shll
int
out
out
stc
sti
mov
icebp
lock
enter
add
ljmp
int3
into
in
sti
jmp
int
mov
fcmovnu
mov
neg
add
cli
iret
iret
int3
shlb
lock
fcmovnb
fdivp
stc
rcr
loop
in
stc
roll
loopne
in
add
out
in
mov
loopne
lret
fidivrl
fistpll
fxch
call
adc
ffreep
jmp
shl
iret
fucomi
mov
std
loope
int
mul
fcmovne
cld
fcomi
clc
jecxz
jmp
mov
icebp
in
sarb
fmuls
clc
jmp
pop
add
mov
jecxz
mov
mov
out
clc
mov
loop
aad
ret
lret
or
mov
divb
call
rcl
loop
cli
stc
shl
add
xlat
fsubr
fmul
out
in
leave
jmp
rol
out
fidivl
aad
push
add
ljmp
adc
scas
imul
iret
ljmp
icebp
int
int3
add
fdivrl
ret
out
aad
or
push
lret
fisubrs
leave
scas
icebp
ljmp
ret
cld
clc
push
or
fisttpl
int
mov
mov
sar
ljmp
std
cli
rolb
std
or
fprem
mov
cli
int3
out
lret
test
iret
stc
test
mov
add
mov
sysret
add
push
out
mov
cli
mov
in
mov
stc
fucomip
lret
sti
or
hlt
loope
loopne
out
mov
out
fsubrp
mov
out
out
or
cmc
bswap
ljmp
mov
fcmovnb
clc
fmul
fbstp
mov
out
add
in
loope
clc
std
or
icebp
les
in
int3
in
stc
mov
repnz
mov
iret
fimull
out
rol
mov
ret
repz
cmc
mov
add
int
in
icebp
mov
ljmp
xlat
cmc
div
add
loopne
mov
ljmp
mov
mov
cli
lock
rcr
pop
in
aam
adc
rol
not
repz
imul
sarb
mov
fadds
stc
pmaxsw
jecxz
iret
iret
leave
mov
aam
fdiv
mov
aam
out
clc
sti
loope
pop
in
sti
fmul
test
ret
rcl
icebp
out
out
out
lock
loop
testl
add
test
jecxz
mov
lock
fxch
fcmovnu
fiadds
sarl
out
or
hlt
or
out
fsubrp
ret
cli
icebp
fcomp
mov
idivl
clc
pop
lret
jmp
clc
pop
ljmp
shll
jmp
mov
cmc
or
decl
iret
fsubp
jecxz
test
mov
repz
fdivrs
ret
sarl
in
cld
fisttpll
out
rol
mov
shll
icebp
shr
stc
div
mov
or
in
clc
out
stos
out
fadd
out
mov
enter
ljmp
int
clc
stc
pop
std
add
sarl
hlt
int
mov
aam
stc
mov
sti
add
fcmovnu
add
call
mov
in
cmc
sti
rcl
fidivrs
in
in
into
add
ret
cmc
testl
cmc
scas
mov
jmp
ror
mov
cmc
cli
ljmp
add
rcl
shrl
mov
out
repnz
idiv
mov
add
out
stc
add
add
jmp
shl
cli
enter
call
add
sti
lret
cld
enter
mov
in
in
out
shlb
iret
stc
mov
stc
fcmovnu
push
loopne
out
out
fmuls
out
out
test
mov
cli
mov
out
in
incl
ror
jmp
loop
f2xm1
enter
sti
lods
mov
int
xlat
clc
fcmovnb
ret
lret
aam
ljmp
stos
lret
in
mov
icebp
leave
mov
mov
clc
aam
loop
aam
adc
out
call
loope
mov
lret
lret
into
hlt
in
add
in
cli
rorl
aam
out
cld
add
adc
ret
sarl
mov
jecxz
in
sti
loopne
aad
fadd
fdivrp
clc
add
test
hlt
lret
hlt
mov
mov
sti
add
out
fcmovne
lret
mov
mov
loop
ljmp
mov
incb
icebp
lret
lds
in
mov
ljmp
mov
int
fcomp
repnz
fcomi
adc
ror
in
fsub
mov
aad
stc
ror
clc
repz
fucom
or
fprem
mov
into
cli
mov
mov
rcl
ljmp
shl
jmp
ret
or
enter
mov
loopne
call
lock
jmp
add
out
fimull
cmpsl
shrb
mov
in
idiv
leave
clc
jecxz
mov
ffreep
out
add
in
ljmp
rcr
out
repz
mov
sarl
mov
jecxz
fcmove
in
in
jmp
in
mov
repnz
mov
push
add
push
adc
ret
jmp
in
rcl
mov
clc
stc
int
mov
cmc
add
fcomp
cld
in
out
out
test
iret
ljmp
in
fdivrs
rcl
fmull
push
fucomp
movl
repnz
int3
loop
call
call
fstp
mov
mov
fcmovnu
fimuls
loop
loop
loopne
lret
aad
cli
into
in
hlt
not
cld
loope
aam
sarb
dec
clc
repz
mov
mov
int
in
mov
add
shr
add
repz
repnz
call
enter
mov
mov
fisttps
int
in
stos
iret
lods
out
ljmp
shl
iret
int
cmc
mov
in
rol
fucomp
aam
dec
mov
in
scas
lret
fcmovu
call
push
repz
mov
cmc
add
test
aam
les
iret
ret
loopne
in
add
sti
loope
lret
repnz
out
cmc
mov
icebp
call
fst
loopne
into
fdiv
or
stc
in
add
repz
or
ret
int3
mov
cmc
mov
lock
pop
add
in
fndisi(8087
mov
rcl
out
repz
int3
add
rcl
mov
not
ret
lret
neg
pop
enter
lret
lods
lock
rcr
mul
into
out
out
aam
int3
mov
fucom
repz
repnz
icebp
ffree
push
lret
add
rol
lods
out
iret
not
fsqrt
fdivrp
ljmp
add
shl
or
fsubr
repnz
aad
iret
jecxz
mov
stc
lock
mov
add
repz
out
fidivrl
enter
jmp
clc
enter
ret
add
mov
rcl
out
out
jmp
into
fdiv
mov
stc
idivb
icebp
cmc
div
add
in
loope
jmp
jecxz
test
divl
aam
repz
mov
mov
add
fldl2t
out
aam
std
loope
rol
in
int3
call
cli
mov
hlt
add
ffreep
push
mov
fldl
in
enter
shll
iret
fcmovu
lret
jmp
add
jmp
add
fdivp
or
mov
fcmovbe
xlat
int
in
mov
repnz
ret
in
mul
jmp
icebp
mov
mov
mov
mov
enter
inc
add
lret
add
loope
loop
lock
lock
in
divl
mov
aad
rcr
ret
clc
in
or
or
mov
mov
repnz
mov
test
bnd
fsincos
out
jecxz
add
fst
shl
test
divl
leave
add
push
out
jmp
ret
sti
aad
push
adc
loop
test
jmp
fiadds
fsub
rol
rcr
fiadds
loopne
add
or
add
lods
ret
xlat
int3
ret
icebp
shl
stc
clc
int
int
mov
mov
rcr
add
add
rcr
or
loope
iret
mov
cli
rol
std
mov
stc
stc
jmp
push
sti
les
add
div
jmp
icebp
filds
icebp
shl
out
hlt
add
hlt
roll
enter
sarl
fcmovb
mov
cld
repnz
loopne
push
add
ret
clc
in
incb
in
loop
loope
hlt
repz
mov
cld
clc
add
loopne
out
or
icebp
lods
mov
leave
aad
fdivr
mov
ret
out
loopne
roll
loop
sarb
shr
scas
leave
leave
mov
clc
std
in
fmulp
in
fstpt
in
cli
add
shl
enter
ljmp
int3
faddl
mov
div
lret
xlat
faddl
repnz
lods
movsl
fdivp
int
loope
in
cld
mov
out
ret
in
fcmovnb
fcomi
push
repnz
into
out
mul
mov
icebp
fabs
or
push
or
test
hlt
ljmp
fdivrl
mov
or
sti
or
icebp
aam
mov
rcl
mov
in
rcr
out
in
or
fucom
lock
aam
aad
jmp
clc
mov
ret
cld
lock
aad
mov
out
ret
out
cmc
cmc
int3
out
rcr
mov
rolb
ret
jmp
hlt
iret
or
in
out
in
jmp
lock
in
mov
ret
int3
mov
repz
imul
sti
fimuls
lret
in
leave
fst
iret
mov
in
in
les
add
cmc
mov
call
add
stos
ret
neg
enter
cmc
shl
in
mov
xlat
rcr
cld
stc
add
or
into
filds
jmp
iret
out
mov
jmp
in
lret
fnstcw
stc
flds
call
loope
into
lods
fsub
div
fistpll
mov
fcomp
mov
std
add
or
fnstenv
lods
into
loopne
in
div
repnz
fadds
jecxz
cli
out
ljmp
jecxz
mov
enter
fmul
add
mov
rcr
or
add
loope
out
out
jecxz
hlt
in
jmp
sti
not
testl
fcomp
cmc
jmp
loope
mov
in
scas
ljmp
loop
loope
in
fidivrs
out
fcmovu
mov
lods
out
lret
in
in
filds
mov
loop
lock
fmuls
fsub
int3
fmulp
icebp
ljmp
icebp
mov
imul
xlat
movl
loop
stc
add
or
fucomp
leave
repz
mov
enter
aad
mov
ffree
ret
lock
mov
fcos
loop
bswap
adc
mov
lods
out
into
lret
cli
icebp
std
leave
lock
sarl
fisttpl
ljmp
or
in
out
repnz
cmc
fidivl
mov
int3
out
in
mov
jmp
loope
syscall
shl
into
ret
jmp
in
ljmp
repnz
lret
ljmp
not
lret
fmul
mov
mov
in
add
add
ljmp
mov
jmp
shlb
enter
incb
mov
cld
loop
iret
out
or
int
mov
lret
repnz
into
mov
enter
imul
icebp
add
add
add
call
out
shr
ror
fdiv
in
mov
add
mov
fst
std
lret
or
leave
fcmovne
or
stos
in
movsl
div
out
mov
mov
mov
ret
mov
test
hlt
fcomip
cmc
fstp
into
ret
ror
lods
iret
lret
loope
repnz
imul
lock
loope
or
fimuls
cli
or
mov
enter
stc
in
in
stc
lret
mov
mov
fldl
add
in
std
adc
icebp
loope
rcl
in
in
mov
in
fucomip
ret
iret
pop
repz
ret
jmp
ljmp
in
enter
ljmp
shr
int3
sti
fxch
fld
add
jmp
leave
out
loopne
mov
lods
leave
jmp
lods
clc
cli
in
fcmovnu
out
iret
ret
call
or
xlat
sar
add
out
into
loope
out
call
mov
pop
repnz
push
add
fst
push
add
repz
call
lret
int3
in
leave
fcmovne
cld
sarl
leave
in
call
rcr
rol
out
in
int3
lret
rcr
repnz
out
in
rcr
ret
pop
hlt
push
cli
fadds
mov
hlt
lret
aad
mov
mov
in
cld
add
add
fiadds
lods
jmp
in
out
shr
into
jecxz
rolb
rcr
les
fmul
stc
in
out
shlb
sti
iret
sar
cld
mov
rolb
mov
jmp
in
repnz
mov
ror
mov
jmp
shl
cld
fmul
add
stc
in
cli
les
call
mov
ror
mov
std
mov
repz
fdivs
aad
xlat
imul
add
lret
jmp
int
lock
imul
mov
div
out
push
leave
lret
loopne
out
loopne
in
ljmp
cli
iret
mov
in
loopne
aam
rol
sti
out
std
fsubrp
icebp
loop
int3
into
mov
in
ljmp
clc
lret
rol
push
clc
rol
add
aam
call
mov
in
mov
call
mov
ret
repz
mul
out
or
loop
in
ljmp
iret
jmp
mov
add
out
std
repz
out
lret
in
lret
out
shrl
jmp
repnz
mov
sti
jmp
loop
or
leave
fld
in
mov
fcmovbe
lret
imulb
leave
mov
add
fyl2xp1
vpminsw
out
incb
fxch
leave
in
loop
ret
shrb
lock
mov
cmc
fcom
rol
cli
aam
std
call
mov
call
lret
out
call
sarb
std
sti
jecxz
iret
lret
out
iret
shl
repnz
repz
out
out
fildl
iret
loopne
bnd
ret
fsub
cld
jmp
shl
in
mov
mov
imul
xlat
idivb
out
repnz
div
sti
loopne
add
repnz
mov
loope
fcomi
icebp
int
cli
aam
int
in
ffreep
sti
idiv
aam
leave
in
pminsw
ret
faddp
fucomi
mov
mov
aad
add
filds
shl
add
out
faddl
out
int3
lret
mov
mov
mov
leave
mov
mov
mov
mov
fmuls
fcomp
icebp
cmpsl
shlb
mov
clc
std
icebp
xlat
fcmovnu
clc
dec
mov
hlt
pop
adc
fcmovbe
in
mov
shl
into
in
xlat
in
shr
rcl
mov
add
push
clc
out
or
scas
scas
in
int3
mov
jmp
shl
mov
or
loop
in
repnz
enter
in
fprem
enter
xlat
clc
aad
mov
cld
loope
cli
add
repnz
mov
mov
mov
rol
fnstcw
fdiv
jmp
icebp
lock
mov
mov
leave
rcl
repnz
not
add
div
fsub
stc
ficoms
repnz
in
repnz
scas
in
in
into
aam
mov
in
shl
repnz
lret
ljmp
int3
jmp
stos
mul
sti
mov
in
in
mov
into
pop
add
aad
or
jmp
xlat
repnz
scas
jmp
jmp
mov
hlt
mov
roll
test
or
or
call
mov
cli
repnz
clc
add
std
into
cli
shl
call
xlat
out
mov
int3
int3
stc
mov
jecxz
decb
add
sti
in
vcvtpd2dq
loop
lock
call
mov
fscale
int3
clc
fdivrp
add
jecxz
loope
or
lret
out
decb
call
repnz
lret
not
loop
cld
out
cmc
iret
ret
out
rcl
in
mov
xlat
mov
int3
int3
jecxz
jmp
fprem
stc
ljmp
jecxz
mov
aad
fdivrl
std
add
sti
in
loopne
loopne
mov
loopne
divl
fdiv
lret
lock
in
vpsllw
jecxz
int
iret
int
call
icebp
jmp
lret
cmc
leave
mov
cmc
push
in
testb
ret
shlb
jmp
iret
fcomip
icebp
clc
mov
fisttps
add
sti
lret
out
lods
ror
jmp
mulb
add
sub
inc
sbb
xor
xor
adc
xor
movl
mov
mov
addl
mov
subl
cltd
orl
sub
sbb
xor
subl
xor
mov
movl
mov
movl
mov
movl
mov
movl
mov
cmp
movl
jne
mov
mov
cmp
je
andl
mov
add
movl
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
xor
sub
sbb
xor
xor
xor
xor
jmp
adcl
ss
icebp
xchg
pop
jnp
stos
cwtl
jnp
rcl
jmp
in
shlb
into
in
shl
xlat
or
jecxz
leave
mov
scas
int3
cmc
int
repnz
fcmovnu
hlt
icebp
rol
stc
stc
shl
aad
leave
loopne
fsubr
mov
in
mov
ror
shl
repnz
mov
fmull
iret
incb
cld
out
xlat
test
loope
mov
fucomip
in
fdiv
out
lock
std
fsub
add
rcr
lret
add
sarl
sti
lret
repz
fmul
sti
fld
cli
jmp
cld
clc
loope
loop
aad
loopne
in
in
scas
rcl
test
enter
out
mov
fdiv
lock
sar
clc
ljmp
add
fadd
in
enter
stc
leave
out
mov
out
flds
rorl
lret
out
out
in
in
scas
lods
fdivl
mov
sti
iret
mov
cli
or
jmp
into
out
repnz
jmp
fnstsw
out
repnz
or
fcmovnu
jmp
loopne
not
loopne
into
int
out
mov
flds
into
add
out
ffree
mov
shl
call
lret
lods
shlb
test
fidivl
pop
fcmovnb
out
jecxz
or
ljmp
test
int3
mov
imul
cli
ret
jmp
add
pop
add
loop
shlb
sti
mov
aad
sti
stc
shr
repz
out
rol
cld
add
xabort
ljmp
loop
jmp
rcl
hlt
out
mov
loop
add
neg
lds
adc
std
repnz
iret
scas
mov
test
iret
lret
mov
out
mov
fcomp
add
icebp
add
or
adc
scas
ljmp
imul
out
shl
push
xlat
pop
aad
filds
clc
jecxz
jecxz
add
mov
iret
ljmp
call
fmul
sarb
std
std
out
lods
loop
mov
ret
ret
icebp
enter
call
mov
rolb
aam
dec
mov
mov
out
ljmp
stc
hlt
mov
les
pop
out
aad
clc
fucomp
fld1
loopne
out
mov
leave
aam
fucomi
cmc
icebp
add
aam
fadd
hlt
lret
xlat
aam
or
loopne
leave
in
lret
shr
call
into
iret
fnstsw
mov
jecxz
int
out
test
movsb
mov
lret
cli
jmp
mov
rcl
icebp
aad
ljmp
fucomip
scas
iret
div
mov
repz
int
clc
ror
loope
aam
decb
sar
call
out
jecxz
aam
rcl
call
fyl2xp1
imul
out
int
lock
loopne
into
hlt
enter
movsl
loope
scas
bnd
vpmullw
fsubp
out
aad
clc
or
call
in
mov
enter
hlt
jmp
lret
jecxz
clc
mov
sar
lret
ljmp
div
cli
lock
jecxz
push
loop
out
jmp
testb
repz
fcmove
hlt
jmp
add
mov
push
xlat
ljmp
les
or
mov
test
fnop
aam
cli
into
rolb
faddl
ljmp
lret
ljmp
loopne
mov
lret
mov
pop
cmc
loopne
cld
call
cli
out
loope
cmc
int
in
stc
lock
mov
mov
in
clc
fmulp
roll
add
ret
fmulp
jmp
add
add
icebp
in
shrl
fldt
call
aad
aam
jmp
repz
enter
imull
out
mov
enter
xlat
out
fdiv
fucomp
iret
int
clc
in
mov
mov
leave
lret
cmc
mov
int
add
or
fcmovne
push
loop
test
cmc
mov
mov
ljmp
in
loop
aam
leave
or
out
stos
ret
stc
sti
cmc
mov
aad
icebp
in
idiv
cmc
fcmovb
in
out
rcr
cmc
rcl
mov
fdivs
mov
aad
testb
ljmp
jmp
lods
aad
cli
in
sarb
loop
cmc
out
jecxz
ret
xlat
in
mov
ror
std
mov
clc
pop
pop
movb
in
cld
add
out
jmp
lods
lock
in
xlat
in
mov
test
add
ret
fdivr
aad
push
fnsetpm(287
cmc
or
cld
or
lods
loopne
scas
mov
lods
leave
mov
stc
sti
call
in
in
rolb
or
out
icebp
rol
icebp
ljmp
in
std
int3
jmp
stc
std
xlat
add
fdiv
pop
or
ffreep
ljmp
mov
fdiv
mov
add
add
aam
out
out
clc
call
hlt
cmc
repz
call
mov
rcr
neg
repz
mov
ljmp
jecxz
ror
int
in
ljmp
repnz
std
clc
mov
pavgw
out
in
iret
scas
lret
lock
les
call
clc
roll
cld
in
loope
adc
icebp
repz
in
loop
repz
fdiv
dec
mov
aad
rcr
mul
fcoms
in
out
in
shr
in
mov
aam
fsubr
out
shl
ret
shl
out
add
add
in
ffree
mov
iret
fstpt
cli
loop
out
xlat
mov
add
fld1
frndint
add
shr
out
jmp
mov
in
ror
aad
out
fsub
fsub
out
loop
lods
rol
mov
mov
aad
call
loop
fiadds
add
loop
aam
jmp
iret
mulb
stc
fnstcw
call
lock
jmp
in
enter
enter
icebp
cli
lret
stc
rcr
lret
lret
add
out
shl
jmp
loope
cli
adc
out
mov
lret
shl
out
lret
mov
mov
icebp
jecxz
call
fmull
fdivp
cli
fcmove
or
fmul
ror
repnz
aam
mov
cli
in
in
cmc
test
ljmp
jmp
mov
ljmp
mov
mov
enter
iret
jmp
xlat
stos
sti
mov
in
shl
mov
out
add
dec
out
out
int
loope
shrl
out
dec
call
add
testb
out
fcomi
paddw
in
xlat
cli
jmp
in
int3
fnstcw
icebp
ret
or
in
pop
out
loope
repz
int
in
lret
repnz
sar
fxch
mov
pop
cli
out
in
or
add
loope
mov
mov
repz
cmc
iret
sti
xlat
clc
in
mov
add
lds
loope
jmp
adc
int
hlt
loope
not
clc
jmp
cli
mov
lock
rcr
enter
enter
mov
in
mov
hlt
jmp
in
mov
fidivrl
roll
add
cmpsl
shl
scas
fcmovnbe
shll
mov
lock
neg
enter
or
in
aam
mov
cli
mov
cmc
cli
aad
vpsraw
in
pop
repz
out
jmp
shr
aam
in
loop
add
call
sti
pop
loopne
fsub
out
scas
out
div
enter
fdivp
call
add
or
enter
lods
jmp
div
sti
lret
stc
mov
add
or
aam
mov
in
leave
int3
hlt
sti
ljmp
mov
sti
push
repnz
repnz
stos
ror
shl
into
call
cld
aad
filds
clc
aam
or
out
enter
in
ret
shrl
enter
jmp
sarl
or
add
repz
out
lock
lods
sarl
pop
in
loop
pop
fdivrp
add
aad
out
clc
lret
mov
loope
loop
aam
stc
rcl
jecxz
add
test
out
std
add
test
shr
out
hlt
into
hlt
ljmp
int
filds
mul
or
add
out
int
leave
shl
shl
mov
idivb
mov
icebp
add
iret
mov
rol
into
iret
ljmp
idiv
faddp
shl
jmp
mov
lret
repz
mov
mov
rcl
leave
mov
add
lock
or
fsqrt
jmp
scas
lret
rol
loope
les
out
into
cli
add
pop
add
or
cld
out
iret
cmpsb
shll
mov
lods
into
mov
mov
or
sti
pop
int3
lret
cmpsb
test
mov
aad
lods
mov
mov
fucom
add
test
add
test
loope
mov
jmp
mov
mov
mov
ret
jmp
fst
cld
call
enter
mov
cmc
aam
fnstcw
out
in
loop
cld
sarl
call
cld
mov
ljmp
cli
fsubr
call
out
or
dec
add
lods
ror
lods
xlat
in
enter
mov
mov
sti
jmp
cld
cmc
jecxz
clc
add
int3
mov
int3
jmp
jecxz
int3
xlat
push
shl
shl
add
add
ffreep
std
jmp
iret
out
iret
in
ljmp
hlt
fsub
mov
aam
add
fcmovu
ror
in
shl
lods
fucomi
int3
sar
sar
enter
repz
sar
fprem1
pop
aad
push
jmp
loop
lret
call
mov
int
add
out
clc
or
pop
lret
loop
out
test
test
out
out
jmp
repnz
fildl
fisttpl
roll
into
fldl
leave
into
stos
in
lret
mov
mov
in
cli
mov
stc
add
out
shl
cld
loopne
lret
pop
cmc
fcomp
or
mov
mov
lret
shr
jmp
mov
les
rcr
call
add
lret
stos
test
fadd
leave
aad
shl
cmc
in
lret
out
mov
fdivrl
cld
loope
in
divl
loopne
mov
cli
clc
sar
std
mov
lock
or
loope
fsubr
lret
shll
out
ror
shl
ljmp
sar
push
add
or
loop
ret
xlat
scas
aad
idiv
repnz
icebp
in
icebp
cld
cmc
clc
loope
hlt
clc
shl
in
lret
ljmp
shl
into
jmp
int3
fmulp
rcr
add
mov
call
into
lret
call
into
into
out
aam
mov
out
add
fcmovnu
call
mov
lock
les
call
idivl
jmp
out
lods
mov
jecxz
mov
mov
in
mov
mov
pop
mov
shl
loop
in
jmp
or
shr
enter
mov
hlt
iret
sti
cli
jecxz
mov
or
psubusb
aam
fcmovb
lods
shlb
repnz
stc
lret
sarb
push
mov
leave
cld
jmp
in
test
ret
cli
mov
mov
cmc
sti
add
neg
leave
clc
faddl
loope
fldcw
vmaskmovdqu
int3
repz
fsubr
sti
fucom
aad
fcomi
add
out
dec
cli
int
int
out
aam
scas
call
jmp
add
shr
repz
rol
push
iret
fiaddl
in
enter
mov
mov
icebp
loop
add
aad
fsubr
add
into
jmp
jmp
test
out
mov
out
loope
lock
ljmp
adc
lret
out
mov
mov
mov
cli
cld
loop
ret
ror
push
rcl
cmc
lret
repz
fucomp
ret
fidivs
ror
mov
into
add
out
repz
lock
add
stc
clc
shl
ret
fucom
leave
aam
call
imul
shl
loop
call
ret
jmp
jmp
stc
stc
test
xlat
in
out
jmp
fptan
in
hlt
repnz
fldl
cmc
sti
add
or
jmp
mov
out
scas
hlt
stc
mov
out
repz
loop
cli
lock
add
in
paddq
cli
fisubrs
fsubrs
lret
iret
fidivrs
add
jmp
jmp
loop
icebp
rcl
clc
aam
fcom
aam
iret
repnz
loop
std
fcmovnu
loope
add
or
in
shr
in
in
repnz
lret
dec
fucomp
aad
ret
in
out
neg
cld
lret
fsub
cli
in
or
scas
mov
loop
stc
lret
imul
in
in
cmc
xlat
mov
add
jecxz
rcl
test
fcmovnbe
int3
int
int
add
int3
in
fnstsw
lds
clc
pop
enter
fyl2xp1
out
scas
lret
shll
rcl
neg
std
loopne
ret
sti
fcmove
add
push
add
mov
fsubp
lock
int3
mov
enter
sti
int3
roll
loopne
icebp
in
loopne
call
scas
repnz
xlat
sarb
shr
enter
std
call
jecxz
in
stc
lret
shl
ret
out
shl
divl
jecxz
mov
add
mov
rcl
lret
mov
hlt
call
mov
lret
cmc
in
loope
or
jmp
loope
add
out
mov
in
mov
mov
in
rcr
clc
add
push
int3
jmp
enter
ret
int
mov
in
jmp
out
mov
aam
std
add
push
pop
mov
in
ret
mov
icebp
lret
shr
fcos
lret
mov
fst
stc
add
mov
loop
in
ret
lods
in
in
out
lds
fsubr
cli
enter
lock
cld
jmp
pop
shr
add
rcl
lret
lock
int
mov
rcr
add
out
clc
or
push
cmc
lldt
test
jecxz
aad
out
into
jmp
fcmove
fistpll
mul
loopne
in
add
stc
add
lds
repnz
shl
int
jmp
jmp
fnstcw
jmp
frndint
pop
mov
mov
rcl
enter
out
in
icebp
jecxz
out
shl
pop
ret
pop
fimull
add
in
icebp
loopne
mov
ret
clc
lret
repnz
mov
or
loope
into
in
repz
call
in
in
loope
into
fnclex
mov
out
out
out
fnsave
lret
call
add
out
add
clc
xlat
add
or
scas
out
int3
out
mov
ljmp
lock
fdivr
jecxz
add
leave
shl
cld
loop
push
mov
xlat
aam
out
iret
out
enter
jecxz
add
in
add
loop
fucom
pop
fcoms
in
test
ret
aam
in
fcom
lret
mov
add
movl
enter
in
ffree
call
mov
fcomp
xlat
ret
ljmp
or
add
int
fsubp
iret
jmp
aad
divl
mov
rolb
mul
jmp
lds
lods
int
jecxz
out
mov
mov
add
iret
sti
faddl
fsubr
cli
in
into
clc
leave
ljmp
div
iret
enter
lret
add
xlat
fadd
mov
fld
shr
ror
loope
jmp
sti
cmc
sarb
lret
or
fadd
rcr
mov
mov
jmp
mov
out
repz
leave
mov
cli
neg
loop
jmp
enter
rol
int
in
loopne
cmc
call
fucomip
fcomip
stc
loope
ret
or
fimuls
inc
push
push
ret
leave
scas
out
rol
ljmp
ljmp
div
aam
push
or
add
call
enter
out
lret
aam
mov
rcl
loopne
add
add
out
in
ror
iret
mov
cli
in
iret
mov
stc
hlt
mov
out
pop
push
loope
add
int3
out
fst
int
sarl
ror
clc
mov
cld
ret
out
cmc
cld
jmp
in
int
iret
in
aam
out
leave
into
not
fcom
fsub
mov
fldl
stc
into
loopne
rcl
xlat
rcr
jecxz
mov
hlt
stc
sar
iret
icebp
fdivrp
mov
fninit
add
jmp
jmp
fld
loope
call
fidivrs
neg
fisttpll
clc
imul
loopne
out
ret
mov
mov
aam
mov
loop
lock
ret
fmulp
sti
add
leave
fcomp
ror
jecxz
into
aad
rcl
test
fldlg2
int3
enter
add
add
or
fdivr
fiaddl
faddp
mov
mov
mov
mov
loope
out
int3
fcmovbe
ljmp
in
into
out
rol
mul
sti
shl
hlt
xlat
mov
mov
in
rcr
cli
jmp
loope
loop
fadd
ret
in
aad
aad
into
mul
clc
out
not
mul
fsub
fsubp
jmp
loope
faddp
mov
aam
hlt
mov
repz
out
fcomip
fdivrp
ret
jecxz
out
cld
call
iret
lods
aam
lret
shl
lock
lret
push
lret
stc
in
or
out
loop
aad
mov
mov
sarb
add
ljmp
lret
icebp
rol
lret
mov
lock
jmp
add
rolb
in
adc
stos
mov
out
sti
shll
cli
iret
std
clc
loop
repnz
sgdtl
inc
out
call
into
in
aam
cmc
lret
mov
std
or
inc
dec
push
movntq
out
shl
jecxz
test
cmc
dec
call
div
loop
lret
in
fcmovbe
add
out
or
icebp
in
ret
ror
hlt
stc
mov
mov
add
idiv
in
cli
out
fistl
fcom
les
ljmp
out
in
in
lock
ret
loope
ret
hlt
dec
or
jmp
call
lret
int3
mov
shl
add
clc
clc
add
ljmp
fsubr
leave
loop
icebp
rol
out
call
add
icebp
rcr
out
push
call
hlt
fimuls
stc
add
stos
mov
call
rol
fucom
fcom
fcmovb
mov
sti
call
fsubrs
rcr
shrb
mov
int3
lret
mov
les
stc
ljmp
xlat
leave
mov
stc
into
jecxz
cld
fxtract
aam
jecxz
jmp
pop
repnz
shr
out
cli
sar
std
lret
rcr
lock
repnz
lret
or
or
fsubp
in
sar
lock
mov
loope
lock
cli
rcl
sar
call
mov
out
mov
mov
out
leave
add
int3
sar
sarl
call
ret
mov
mov
repz
icebp
mov
aad
fcomip
lock
aam
or
stc
fsub
or
ljmp
stc
rcl
in
hlt
iret
stc
jecxz
out
int
rorb
sti
fdivr
add
in
iret
vpmulhuw
in
aam
sti
mov
ret
shl
lret
add
in
lret
mov
in
rol
repz
in
ret
decl
ffreep
stc
clc
in
loop
fdivrl
mov
jmp
repz
rcl
icebp
cmc
test
fldpi
in
clc
or
out
iret
int
in
enter
mov
shr
lods
int3
rcl
fcmovne
add
loope
add
pop
sti
fcmovnbe
iret
jecxz
into
loop
stos
repz
lock
lock
imul
clc
add
sar
aam
or
or
out
in
lock
mov
leave
mov
sti
repnz
rol
ljmp
out
cmc
aam
jmp
cli
lock
mov
sar
lret
fadds
cld
in
call
lret
cmc
rcl
mov
mov
idiv
in
or
fcmovb
lret
or
adc
mov
rol
ret
call
ljmp
mov
sar
sti
add
in
out
movsl
lret
ret
in
mov
enter
mov
repnz
out
fcmovnb
or
cli
fdivrp
shrl
div
mov
cli
repnz
cli
in
in
int
xlat
jmp
shr
fimuls
cli
repz
loope
scas
xlat
aam
idiv
int
enter
in
shl
icebp
incl
call
flds
adc
in
lods
shl
jmp
call
div
aad
lock
add
iret
add
mov
mov
not
fmulp
add
jecxz
out
fdivrp
fld
jmp
aam
fnstcw
mov
lods
xlat
call
mul
lock
rol
icebp
add
add
out
loop
fsub
out
ret
hlt
fdiv
shlb
add
sti
ret
fadds
roll
ljmp
or
in
leave
aad
in
call
in
aad
shl
clc
call
fld
add
leave
icebp
repz
mov
ljmp
mov
aad
testl
or
in
ror
ror
mov
stc
repz
test
icebp
ror
inc
mov
enter
lret
mov
lret
mov
mov
clc
mov
add
add
cli
frndint
jmp
scas
scas
scas
int
mov
int
shlb
jmp
ret
mov
out
ror
jecxz
in
lock
mov
mov
mov
int3
std
mov
out
jecxz
int
test
int3
out
lret
in
in
in
repnz
out
std
mov
in
jecxz
fsubrp
shr
repnz
mov
mov
rcl
in
add
fyl2xp1
out
int3
pop
shr
in
cmc
fmuls
xsave
in
shll
fstp
xlat
icebp
mov
mov
add
or
scas
repnz
cmc
aam
ret
mov
rcr
jecxz
mov
mov
fxtract
out
in
fsub
out
mov
iret
int3
ret
icebp
mov
loop
out
icebp
hlt
out
testb
loope
fsqrt
or
scas
ret
scas
iret
ret
lods
mov
aam
aam
cld
mul
add
fcmovnbe
add
call
cld
cmpsl
int
mov
aam
cli
leave
mov
out
fcmovnu
lret
fdivrp
std
out
cmc
cli
or
mov
jmp
rcl
lret
add
fucomip
aad
or
fcomp
iret
add
adc
out
out
sti
loopne
aad
sar
lret
fnstsw
mov
hlt
cli
or
in
shl
ret
fcmovbe
divb
clc
mov
not
repnz
lret
clc
loop
pop
bnd
mov
out
repnz
mul
fucomip
cli
cmc
in
loop
loope
cmc
add
fcompp
adc
fmul
mov
mov
mov
icebp
repz
mov
add
rcl
add
or
aam
adc
lock
loop
test
mov
mov
in
fstpt
sti
roll
add
add
int
or
into
out
iret
repz
out
std
lret
imul
fmul
loop
loope
add
jmp
aam
fstp
enter
cmc
repz
ljmp
aad
clc
not
stc
stc
repz
loopne
in
out
fiaddl
shl
in
mov
out
fdiv
ljmp
mov
cld
fstp
int
or
fnstcw
repnz
enter
in
aad
aam
add
mov
sar
out
ret
hlt
pop
leave
lret
fmul
in
out
mov
repz
jmp
sti
loope
sar
cmc
or
push
out
in
or
lock
out
aad
fcmovnbe
out
into
fxch
fcos
int
loop
cli
mov
lock
stc
stc
hlt
in
ljmp
rol
jmp
test
mov
sti
int
div
in
roll
add
fldl
std
add
lret
out
jmp
fld1
int3
enter
repz
xlat
fdiv
fdivp
out
leave
or
fcmovnu
fisubrs
shl
stc
in
aam
sti
div
mov
or
sti
fmull
cmc
out
adc
loop
movsl
scas
iret
leave
stc
mov
lds
add
jmp
fxch
or
in
mov
iret
rol
into
out
in
mov
add
faddl
cli
jmp
loop
pop
int
out
xlat
out
rol
call
mov
rcr
cmc
loopne
shl
add
ljmp
mov
sar
mov
idiv
rol
aad
ljmp
leave
xlat
int
aam
repnz
fcmove
in
hlt
mov
xlat
mov
decb
repnz
in
mov
mov
aad
fdivs
stc
repz
rol
out
out
fucompp
mov
lock
repz
fld
icebp
fdivp
mov
std
rcl
out
fimuls
std
repz
clc
iret
mov
fidivrl
add
loope
roll
jecxz
jecxz
add
fcmove
cld
por
test
mov
loop
mov
ljmp
fmulp
repnz
loope
add
call
fnstsw
bnd
enter
rcl
iret
mov
xlat
lret
sti
cli
ljmp
into
ljmp
out
fnstsw
pop
mov
add
int3
int3
lods
leave
out
fidivl
repz
mov
aam
leave
call
loopne
shl
divb
fstpt
jecxz
out
mov
stc
ljmp
rol
call
out
fcmovu
call
add
sar
cli
in
xlat
add
clc
ffreep
clc
rol
xlat
out
xlat
int3
mov
fnstsw
ret
aam
jmp
add
fsubrl
xlat
shr
lret
sti
repz
stc
loop
out
clc
or
or
loope
out
mov
in
clc
rol
fcompp
aam
incl
loopne
loopne
add
jmp
fucomip
into
icebp
jecxz
fsubr
call
repz
mov
icebp
loope
cld
incb
call
loop
scas
scas
icebp
in
leave
enter
out
aad
shl
mov
ret
loopne
decl
in
call
mov
imul
fidivrs
mov
jecxz
in
call
into
lret
out
jmp
loop
out
cld
add
inc
lret
sti
clc
jecxz
add
sarb
rcr
out
shl
enter
fcmovu
mov
jmp
testb
out
ljmp
lods
mov
clc
in
aad
mov
fimuls
sarl
fmul
lock
ror
icebp
shl
std
mov
iret
out
lock
fdivr
std
movl
or
push
jmp
int3
out
aad
fcmovnbe
in
mov
fdivr
mov
fcomp
ret
cmc
ret
shl
imul
fisttpl
fcmovb
loope
cmc
ljmp
xlat
stc
clc
fidivs
aam
movb
push
cli
lods
scas
xlat
stos
mov
lret
fcmovb
std
mov
icebp
fistpll
loop
in
ffree
shrl
cmc
icebp
mov
mov
fistpll
fcmovnu
in
jmp
out
lret
jmp
in
out
out
out
lret
int3
lock
lret
mov
fisttpl
in
cli
std
out
icebp
out
jmp
mov
xlat
aam
in
aad
ffreep
mov
sti
mov
add
mov
xlat
shl
loopne
in
stc
iret
sarb
in
loop
out
lret
iret
int
shl
in
repz
ljmp
fsubp
rcl
add
add
leave
in
out
cli
in
lods
mul
lret
mov
mov
lret
pop
icebp
fcmovnb
sar
rcr
sysret
or
add
fucom
mov
jecxz
into
stc
test
cli
xlat
aad
icebp
std
loope
stc
jecxz
call
into
out
lock
rol
shrb
fdivrp
in
mov
lret
in
push
or
test
int3
in
lods
mov
mov
sti
roll
incb
or
ffreep
fimull
adc
sarl
shr
int
repz
lret
in
cmc
in
mov
in
or
out
into
fmuls
into
cmc
rcr
jmp
xlat
cli
lock
cmc
loop
add
mov
movl
fst
jmp
movsl
fmul
lock
out
cmc
lods
fdivrp
mov
hlt
cld
shl
jmp
jecxz
repnz
out
enter
clc
iret
into
xlat
sar
add
push
add
add
shr
out
cld
vpsrlw
in
lret
cmc
clc
out
fcom
stc
filds
push
call
repnz
int
iret
imul
leave
mov
shl
rol
mov
mov
add
fcomip
icebp
int3
call
ret
repnz
repz
mov
mov
sti
add
or
rorl
lret
fsincos
out
fxch
out
lret
mov
fistpll
cli
shr
shll
stc
ljmp
stc
sti
ror
in
aad
test
fucom
push
loop
in
in
jmp
lods
mov
into
jmp
cmc
idivb
xlat
aad
loop
add
lret
mov
vpaddsw
out
ror
aam
mov
add
in
aad
add
sar
jmp
loope
repz
mov
scas
in
mov
mov
in
xlat
into
repz
shl
lret
fucomp
enter
scas
test
mul
repz
filds
sti
in
clc
mov
ret
add
aam
iret
add
mov
shr
mov
in
lret
fidivrs
movb
hlt
in
int3
jmp
ljmp
in
fcomip
mov
jecxz
sar
or
std
jmp
mov
out
loopne
lock
sar
enter
cld
sar
sti
repnz
call
shrb
div
into
jmp
cli
call
rcl
jmp
fdivr
add
in
loopne
adc
fsubrs
loope
fdivs
mov
icebp
testb
incl
in
lret
mov
mov
rol
rcl
mov
not
out
rcl
ret
xlat
fmul
jecxz
into
loope
lods
out
xlat
shl
cli
ljmp
xlat
repnz
sar
add
mov
out
shll
loopne
iret
in
mov
into
sti
enter
vpsubq
call
jmp
mov
test
lock
int
cli
rcr
loopne
lock
add
add
jecxz
fiadds
shrl
mov
in
fidivl
rcr
push
jmp
call
jmp
in
mov
fdivs
icebp
hlt
icebp
add
mov
aad
test
test
rcl
into
jmp
rcl
idivb
cld
int3
ret
fmuls
or
fcoms
push
loop
ret
ljmp
lock
cld
mov
mov
fidivrl
cld
jmp
sti
or
les
mov
lret
rcr
mov
mov
pop
aam
leave
ffree
or
add
ret
mov
shl
int3
leave
aam
stc
fnstsw
mov
movl
fistl
lret
out
mov
repz
out
mov
in
mov
add
add
adc
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
xor
add
adc
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
cmpl
jne
cmpl
jne
mov
mov
xor
sub
sbb
xor
xor
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
mov
pop
leave
ret
push
mov
sub
subl
push
or
push
movl
or
movl
mov
xor
movl
add
mov
cmpl
movl
je
adc
mov
adcl
mov
movl
mov
decl
mov
sbbl
xor
adcl
add
mov
sub
mov
orl
xor
addl
add
adcl
mov
subl
mov
sbbl
xor
add
mov
movzbl
xor
mov
xor
add
movl
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
lea
mov
sub
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
sbb
xor
sbb
mov
sub
sbbl
xor
movl
cmp
movl
je
mov
xor
add
cmp
movl
jne
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
movl
mov
orl
movsbl
cltd
xorl
sub
movl
sbb
xor
andl
xor
movl
mov
mov
movl
cmpl
movl
jne
movl
cmpl
movl
jne
adc
mov
and
mov
add
andl
xor
add
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xorl
add
mov
mov
cmp
je
mov
movl
mov
jmp
sbb
mov
adcl
xor
add
movl
mov
jmp
mov
sbb
mov
mov
andl
xor
add
mov
and
mov
mov
sbbl
mov
addl
xor
add
movl
cmp
movl
jne
adcl
mov
sbbl
xor
subl
add
movl
jmp
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
mov
mov
add
movl
add
movl
mov
mov
adcl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xorl
imul
cmp
movl
jne
sbb
mov
sub
xor
movzbl
add
add
add
mov
xor
andl
add
andl
imul
movl
mov
movl
jmp
jmp
lea
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
add
dec
mov
jmp
mov
movl
mov
movl
mov
sub
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
mov
subl
xor
add
adcl
imul
movl
cmp
movl
je
mov
sbbl
xor
addl
add
mov
imul
addl
add
mov
mov
movl
mov
movl
jmp
jmp
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
dec
xor
adc
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
push
pushl
push
push
push
call
cmpl
jb
mov
xor
xorl
add
imul
movl
mov
movl
jmp
sub
mov
xorl
xor
xorl
add
movl
mov
jmp
sub
mov
xor
add
sbbl
mov
and
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
jmp
in
xchg
sub
fs
jbe
jmp
jb
mov
jnp
cwtl
jnp
loope
add
sti
flds
fucomip
in
out
div
mov
lret
add
loop
fdivrl
add
ror
mov
iret
mov
cmc
test
fdiv
shlb
mul
xlat
add
sti
rol
push
fmul
add
iret
into
out
shl
mov
lret
mov
cld
in
mov
loop
ret
hlt
icebp
lock
add
fucomip
out
lret
into
lods
lock
mov
mov
mov
testb
call
cmpsb
lock
mov
in
clc
sti
lock
aad
icebp
stc
icebp
push
in
xlat
clc
in
pop
fmul
repz
mov
clc
mov
call
sar
hlt
idivb
aam
aam
iret
add
scas
mov
jmp
fsubrp
xlat
sti
mov
clc
aam
not
out
call
lods
into
fcomip
lret
iret
iret
stc
in
hlt
in
add
lret
faddl
iret
lret
in
divl
out
int3
repnz
hlt
fcomip
sar
add
rcl
lret
or
push
jmp
mov
lods
mov
mov
mov
lret
leave
int
into
add
xlat
div
cmc
ret
enter
stc
out
icebp
shll
idiv
ljmp
shl
cmc
out
loopne
cld
loop
out
enter
in
int3
fdivrl
icebp
out
rorb
fsubr
or
lods
mov
into
mov
inc
int
in
rcr
stc
add
shl
ret
or
decb
or
in
jmp
stos
test
fcmovne
call
not
ret
mov
ret
shr
call
out
loopne
mov
enter
in
repnz
enter
out
fcmovnu
leave
in
loope
add
repnz
repnz
xlat
repz
icebp
repz
movb
xlat
in
ficoml
mov
lret
shlb
mov
in
aam
fucomip
test
lret
fimuls
add
repnz
mov
loope
rcl
aad
fnsetpm(287
sti
repnz
icebp
loope
or
faddl
lret
leave
out
loop
lret
mov
in
in
cli
push
mov
lret
add
ljmp
jmp
div
in
test
in
add
div
pop
stc
sar
fucomip
enter
vpmaxsw
shl
jmp
aad
repz
rcr
fcmovne
clc
filds
lret
clc
hlt
add
out
add
mov
xlat
fsub
rcl
mov
int3
stc
mov
shufps
std
jmp
test
leave
mov
aam
mov
in
rcr
fcmovbe
repz
xlat
std
in
ret
aam
jmp
bswap
lret
loope
shl
mov
mov
int3
mov
in
int3
add
shl
rorb
or
jmp
mov
hlt
mov
ret
push
add
add
stc
leave
out
or
mov
mov
in
mov
stc
fcomp
mov
rcl
cld
jecxz
fucomi
pop
std
out
jecxz
shlb
stc
repz
fcmovnbe
fstpt
stc
aam
clc
ret
pop
or
pop
jecxz
add
loop
int3
call
iret
add
dec
int
stc
push
call
fsts
out
lret
lods
mov
in
div
cld
roll
cmc
pop
lret
idiv
or
push
out
icebp
mov
mov
in
mov
stc
mov
add
ljmp
loope
in
loope
sti
out
int3
mov
jmp
cmc
in
loope
push
ret
jecxz
ret
add
leave
fldlg2
shrb
iret
shll
incb
add
or
pop
enter
add
test
cmc
lock
hlt
mov
mov
lock
in
xlat
in
sti
into
aam
repnz
mov
aad
in
mov
in
lret
in
in
sti
int
push
cli
mov
or
adc
leave
jmp
loop
rcl
out
cli
cli
jmp
fldlg2
add
in
ret
int
sti
std
cli
or
loopne
add
push
cmpsl
jecxz
cmc
mov
sarb
fucomip
out
mov
in
icebp
stc
std
mov
add
lret
test
mov
mov
add
mov
loope
ljmp
fucomp
call
mov
stc
mov
rolb
add
std
loop
loopne
loop
out
repnz
loopne
int
mov
mov
int
icebp
rcl
or
hlt
decl
mov
cmc
iret
stc
mov
iret
xlat
in
add
ljmp
scas
lret
lds
fidivrl
std
fcomi
fidivrl
neg
jecxz
repz
lret
jmp
aad
mov
mov
idiv
fnstsw
cld
cli
out
add
hlt
call
in
ret
leave
in
fcmovnbe
out
fcmovbe
idivl
int
pop
add
in
into
lret
in
ret
lret
iret
stc
clc
repnz
in
sarb
xlat
loope
ljmp
mov
rol
mov
mov
lret
icebp
mov
repnz
jecxz
cmc
loop
fsubr
lret
shll
in
in
in
mov
mov
rol
fsub
out
call
out
icebp
repnz
repnz
stc
into
call
incb
shl
vpavgw
loop
leave
std
fldl
push
or
fdiv
ret
ret
shr
idivl
int
mov
ret
push
in
loop
pmaxsw
ljmp
leave
shr
ljmp
idiv
in
inc
clc
add
jmp
out
add
enter
hlt
out
iret
cli
iret
fcomip
jecxz
hlt
mov
div
cld
or
add
add
ljmp
cli
lock
fsub
loopne
mov
lock
ljmp
out
aad
ljmp
in
mov
ret
ret
fdivrl
loopne
in
icebp
leave
out
aam
out
mov
shr
jmp
mov
repz
ret
ret
jmp
out
std
out
fcomp
enter
repz
mov
shl
aam
mov
lret
repnz
out
in
fsubr
pushl
rolb
mov
mov
fadd
out
leave
std
icebp
jmp
iret
mov
lret
mov
div
out
fistpll
clc
add
testl
fadd
lods
loope
fcomi
out
mov
aad
div
int
repnz
lret
ret
xlat
add
leave
loop
out
ret
shll
call
clc
sti
fcompp
loopne
neg
add
neg
out
add
into
add
int3
repnz
into
aad
out
mov
mov
rcl
cli
iret
add
int
add
or
stc
loope
or
fisubrl
shr
shrl
jmp
add
fidivl
neg
add
jmp
shl
jecxz
mov
mov
jmp
enter
mov
add
flds
fisttpll
int
fsubrs
repnz
iret
cli
repnz
mov
mov
cli
fadds
fimull
in
fadd
xlat
test
lret
repz
fidivs
add
std
pop
or
pop
std
add
shr
shl
lods
lods
stc
mov
in
mov
or
loope
out
out
loope
lret
hlt
lret
test
fyl2x
aam
cld
loope
fadds
lret
or
cmc
aam
push
out
ret
imul
stos
mov
mov
aad
in
xlat
mov
aam
or
add
rol
stc
ror
divl
jecxz
loopne
cld
faddl
lock
bswap
fidivl
loop
lods
cmc
out
fucomip
mov
ror
push
cld
jecxz
cli
fcmovu
out
enter
loop
test
out
fnstenv
add
out
int
out
add
iret
loopne
mov
repnz
call
lock
int3
out
aad
add
add
add
int
ret
fsubr
lret
in
out
fucomip
dec
out
sar
jmp
add
out
mov
iret
movsl
loopne
ror
call
mov
out
int3
fldl
sar
cld
rol
or
les
sarb
mov
fcomp
pop
fld
out
out
add
mov
test
jmp
mov
mov
repz
lock
rcr
fildl
hlt
int
stos
mov
mov
sar
repnz
shr
leave
fucomi
mov
ljmp
in
into
int3
in
enter
out
ljmp
in
mov
or
shl
loope
aad
vpsrlq
clc
mov
loopne
shl
fsub
pop
stc
out
in
mov
mov
cli
out
cli
idiv
add
mov
iret
add
lock
fsubrp
add
lret
sarl
mov
out
fdivrs
rol
mov
sti
cli
in
sti
loopne
int
mov
out
mov
call
ret
frndint
mov
push
in
out
out
in
int
out
repnz
clc
clc
rcl
out
fyl2xp1
jmp
ffreep
test
pop
test
out
cmpsb
scas
lock
mov
in
out
out
mov
out
int
shl
add
add
loope
loope
leave
ret
into
fnsave
not
lods
mov
mov
roll
test
fcmovnu
cmc
stc
adc
xlat
loope
imul
mov
enter
aam
add
loopne
mov
out
cli
clc
out
fdivl
shr
out
mov
imul
sti
jmp
aad
int3
sarb
or
out
stos
shl
enter
clc
pushl
cld
in
cli
dec
cld
sti
or
push
in
cmpsl
icebp
in
mov
rol
out
f2xm1
aad
int3
cli
out
xlat
int3
xlat
cld
sti
out
or
out
or
lods
shrl
cmc
call
int
aam
fcos
loopne
ret
push
add
in
in
fmul
out
mov
ftst
mov
leave
hlt
iret
pop
in
jmp
incl
loopne
ret
in
clc
shl
enter
cmc
enter
out
lret
mov
fldz
mov
call
fadds
repz
jecxz
sti
sar
mov
mov
rcr
jmp
sti
cmc
fcmovb
in
jecxz
loope
loope
mov
lret
ljmp
int
repz
loopne
loope
add
add
repnz
repz
aad
out
std
add
shl
out
hlt
iret
cli
add
out
ret
rol
loop
mov
enter
mov
repnz
cmc
fildl
add
enter
into
int
shl
repz
repnz
add
hlt
loope
fdiv
ret
fucomip
shr
mov
out
not
mov
in
cli
repnz
fcmovnu
iret
jmp
std
fsubr
mov
mov
mul
fdiv
iret
fsubr
add
sarl
lret
jmp
call
into
mov
sti
shl
xlat
rcl
in
fcmovu
add
clc
fcomip
fsubr
fucom
ljmp
mov
mov
into
lock
in
xlat
dec
call
add
shl
leave
cli
adc
or
iret
aam
mov
cmc
fstp
mov
idiv
rcl
ret
fprem1
fcom
jecxz
std
repz
ror
aad
lret
in
cld
mov
add
std
sti
cmc
cmc
leave
fprem1
clc
fsub
leave
or
fstp
iret
in
mov
lret
lret
mov
fucom
cmc
push
pop
repz
bswap
push
out
adc
int
loop
fcmove
mov
loop
stc
ret
mov
sti
or
jmp
call
leave
mov
out
shll
sar
fsub
in
rol
repnz
loope
out
in
icebp
hlt
ljmp
mov
add
sar
out
or
std
ror
ljmp
in
clc
cli
inc
call
clc
in
stc
cld
hlt
enter
jmp
les
call
mov
in
ret
fcomp
lock
iret
mov
in
lods
mov
out
int3
inc
ljmp
rcl
aam
std
ljmp
ret
lock
rcr
sti
jecxz
cmc
mov
stc
rol
out
mov
xlat
out
repnz
cld
ret
cli
rol
pop
incb
lret
loop
mov
lret
ret
jmp
out
out
loope
rcl
neg
push
loopne
cld
iret
jmp
shl
repz
stc
sti
lret
ljmp
fdivr
mov
in
lret
mov
in
jecxz
lock
aad
add
fcmovnb
shl
mov
jmp
out
fsub
enter
out
mov
repnz
enter
iret
shl
cli
call
into
out
jecxz
cmc
int
mov
shl
leave
cli
stc
mov
fcomp
add
out
fdiv
add
test
fnstenv
aad
std
fcmovbe
in
jmp
clc
jmp
mov
into
sar
int
mov
loopne
rcl
lret
stc
hlt
in
fld
add
fld
in
repz
idivl
fdiv
fcmovne
fmul
aad
add
ret
lock
cld
out
jmp
loop
scas
ret
fsincos
cmc
mov
aam
clc
clc
in
add
add
out
test
repnz
mov
in
mov
fsub
mov
stc
add
pop
shl
lret
icebp
mov
scas
enter
ljmp
fdivrp
test
or
loopne
int
out
leave
lods
rcl
fucomi
int3
clc
lret
rcr
cli
out
sarb
loop
loop
test
ret
out
mov
sar
fcomi
hlt
neg
in
mov
jmp
jmp
in
clc
int
repnz
mov
jmp
cld
int
repnz
push
test
add
mov
loope
scas
jmp
ljmp
sti
aad
out
std
out
or
jecxz
repnz
out
int3
cld
jecxz
rcr
cmc
mov
leave
jmp
repz
shll
lock
in
mov
sarl
std
ljmp
add
cld
loopne
xlat
mov
enter
jmp
push
in
movb
shl
ljmp
out
lock
enter
mov
fcmovbe
repnz
int
jmp
lock
add
scas
mov
mov
icebp
aad
clc
rol
int3
xlat
lock
sar
cli
sti
std
mov
or
hlt
jecxz
loope
idivl
mov
in
mov
icebp
ret
push
or
into
loopne
adc
jmp
rol
sti
mov
rcl
fsubr
mov
fsub
fcomp
jmp
fcmove
or
push
out
in
fnsave
clc
std
std
filds
int3
loope
std
repnz
loop
pop
leave
in
enter
lret
scas
mov
test
lret
cli
add
mov
int
cmc
lret
cmc
call
out
jecxz
loop
sti
scas
shl
icebp
in
jmp
mov
ret
std
fucomp
or
mov
lock
xlat
clc
hlt
out
std
fdivrl
add
in
clc
stc
iret
fucomi
mov
ljmp
jmp
in
neg
rolb
hlt
or
add
ret
lods
repnz
repz
xlat
mov
into
mov
fcomip
icebp
out
rcl
loope
add
pop
stc
leave
les
mov
call
out
fsubr
lret
mov
fmul
out
icebp
fadds
lar
add
rcll
fdivp
iret
icebp
jmp
shl
ljmp
add
or
leave
enter
sti
or
lock
shl
lods
icebp
ret
mov
mov
jmp
fiaddl
or
add
add
leave
movb
add
scas
out
mov
mov
lret
mov
hlt
fiaddl
cli
std
or
stc
fiadds
or
in
xlat
jmp
scas
lret
mov
mov
stc
aad
clc
fcomip
ljmp
out
mov
mov
fdivs
aam
add
pop
sar
repnz
fmul
add
int
imull
cmc
out
into
idivl
in
aam
sti
shl
std
faddl
push
clc
iret
mov
mov
mov
lock
dec
add
testb
cmc
fucomi
std
stc
cli
vpsllw
iret
call
in
lret
out
in
fcomip
call
cli
jmp
add
cld
out
in
or
out
lret
test
mov
call
jecxz
mov
clc
out
out
stos
ret
fidivrs
iret
fcmove
ljmp
push
or
aad
cmc
jmp
out
mov
aad
repz
out
lock
pop
jecxz
mov
fmul
hlt
filds
rol
lods
vcvttpd2dq
aam
mov
mov
div
loop
add
in
mov
loop
test
int3
shl
icebp
jmp
rol
mov
int
mov
lret
lock
repnz
scas
scas
out
in
fcmovbe
neg
sti
roll
cli
fistpll
std
stc
idiv
or
decb
adc
loope
ffree
lret
icebp
into
iret
fmulp
idiv
shr
xlat
clc
add
add
fld
clc
pop
incl
icebp
loope
hlt
not
repnz
loop
call
mov
sti
in
loopne
lret
int3
in
out
mov
fcmove
mov
add
hlt
or
add
add
loope
in
aam
lret
int
mov
stc
fcmovnb
mov
aam
leave
lret
stc
into
jmp
fadd
rep
int3
into
mov
hlt
fdivrp
in
shl
or
cmc
in
add
in
imul
out
in
mov
cmc
in
shl
sarl
lret
loopne
or
add
ret
loope
lock
stc
add
inc
testl
lock
hlt
loope
loop
scas
fnsave
call
in
mov
mov
sti
rol
out
or
pop
jmp
test
fcmovnb
mov
mov
in
fcmovu
lock
cld
call
fcmovnb
lds
psraw
add
shl
mov
scas
call
out
into
icebp
add
in
loop
out
fadds
int
mov
ret
mov
lret
out
mov
add
call
incl
push
add
adc
xlat
imul
lock
mov
mov
repz
hlt
fsubp
hlt
shl
fadds
add
repz
call
or
in
stos
sar
out
fxch
mul
in
ljmp
mov
or
in
in
fsub
test
repnz
mov
int3
mov
mov
leave
int3
in
loope
repnz
repnz
cld
or
fucomi
or
iret
repnz
mov
cli
sti
mov
fcmovne
stc
mov
fadd
fsincos
hlt
fcmovnu
sti
int
ljmp
ret
lret
std
aam
clc
std
mov
lret
jecxz
or
or
adc
fsubp
in
cmc
xlat
fcmovbe
lock
clc
rcr
fcmovnbe
aam
cmc
icebp
rcr
ret
enter
jecxz
loop
repnz
les
mov
loop
icebp
mul
out
cli
hlt
out
or
out
loop
mov
mul
jmp
mov
sar
idivb
add
rcl
rcl
ffreep
leave
add
in
fistpll
shrl
clc
idiv
ret
rcr
cld
sar
clc
mov
or
lret
in
scas
div
in
out
ror
int
aam
inc
call
neg
cli
fcomp
in
stc
adc
hlt
lods
shlb
jecxz
out
sti
lds
fcom
pop
add
repnz
movsl
out
lds
clc
int
jecxz
shr
shl
repnz
fmuls
add
add
fmuls
lods
ret
mov
int3
imul
divb
rcr
fcmovu
lret
xlat
add
aam
iret
stc
fldl2e
repz
rcl
lret
in
shl
shl
int3
int3
push
int3
add
rol
loope
or
jmp
mov
mov
rcl
mov
mov
add
cld
or
int
in
lods
icebp
mov
leave
not
leave
mov
mov
add
cmc
call
repz
cld
fcomp
pop
sti
adc
shl
in
lock
lret
int
fldl2t
fadds
mov
xlat
rol
test
out
shl
out
jecxz
test
call
cmc
icebp
mov
mul
call
mov
enter
in
int3
cld
out
mov
stc
lret
sti
in
jmp
fnsave
mov
cli
mov
sarb
in
rcr
enter
fdiv
fmulp
jecxz
cld
clc
fdivp
in
in
mul
inc
add
or
repnz
scas
icebp
ret
iret
lret
add
test
fpatan
ljmp
add
fldcw
lock
not
repz
hlt
icebp
lock
aam
add
std
loopne
imul
shl
in
dec
out
mov
cmc
sti
mov
or
out
loope
imulb
hlt
jmp
mov
fcmovnu
loope
xlat
std
sti
fisttpl
std
push
into
jmp
mov
mov
fidivl
hlt
add
add
rcl
ret
decb
enter
in
in
fucomp
lods
test
out
add
mov
lock
out
cli
cld
jmp
leave
repz
jmp
xlat
int
enter
xabort
or
mov
or
lret
ret
mov
mov
mov
rolb
loop
jecxz
imul
aad
add
mov
mov
lret
in
lret
in
out
jecxz
add
mov
sti
fisttpl
in
int
scas
repz
movsb
lret
in
mov
mov
add
mov
iret
add
loop
rcl
lock
lods
mov
aam
ret
mov
filds
or
add
shll
shr
cmc
out
int
fidivrl
repnz
fmul
neg
psubd
push
or
loop
jecxz
out
mov
hlt
mov
mov
mov
loop
lret
or
or
in
decb
int
out
in
mov
in
mov
mov
sar
or
cmc
lret
aam
lret
mov
lock
mov
aad
fidivs
in
rorl
lret
loopne
in
add
enter
mov
in
ljmp
out
rol
ljmp
add
int
int
aam
test
sti
mov
cli
not
loopne
loopne
xlat
ret
icebp
jmp
in
or
ret
lods
ror
call
out
lock
jecxz
mov
xlat
loopne
fsubrp
repnz
sarb
call
cli
cli
ret
mov
xlat
aad
aad
add
mov
mov
mov
sarb
lock
mov
sti
cmc
ret
ljmp
int3
fmul
mov
loop
sti
fucomip
add
add
rol
ror
aad
loop
int
std
into
loope
lods
in
lock
fdivrs
loop
sti
fdiv
loopne
add
bswap
mov
call
out
int3
jecxz
int
add
loope
add
lret
jmp
out
jmp
in
out
mov
fst
icebp
repnz
rcl
push
fcom
or
add
ffree
jmp
lret
icebp
mov
leave
mov
in
in
out
loopne
mov
mul
filds
fsubrp
icebp
mov
mov
int3
mov
fadd
mov
or
out
faddl
mov
shl
mov
mov
fdivp
inc
loope
add
neg
or
fld
decl
mov
int3
mov
mov
int
lret
jecxz
icebp
mov
add
hlt
imul
or
adc
rol
ret
int
mov
iret
hlt
mov
loopne
lock
add
add
stc
enter
ret
int
mov
out
mov
sar
xlat
add
mul
cmc
fstpt
iret
lods
loop
jmp
stc
mov
std
roll
add
fsubp
or
cli
jmp
ror
sar
mov
in
icebp
enter
std
cld
mul
leave
add
in
out
out
ret
mov
enter
mov
int3
dec
repz
aam
fcmovnb
std
or
fisttpll
loopne
push
scas
test
iret
shll
mov
lock
pop
loope
or
xlat
cld
cld
fsubr
adc
mov
sar
hlt
fidivrl
enter
fst
or
call
fucom
ljmp
int3
fadd
fidivs
icebp
mov
loop
jmp
loope
fcmove
in
hlt
out
std
fsubr
rol
scas
into
lods
lret
int3
cli
cli
rcl
clc
into
fcmovbe
roll
les
in
add
enter
shl
mov
lret
div
mov
fidivrs
add
loope
fdivrp
les
add
or
loopne
out
out
fxch
shl
out
mov
stc
fadds
cld
lret
or
add
in
add
stos
in
lret
shr
test
lock
out
cld
sar
int3
pop
xlat
mov
std
jecxz
in
aam
shlb
lret
stc
mov
mov
in
loopne
in
ljmp
add
out
leave
test
ret
mul
lret
in
lret
fcomip
sar
out
pop
fldl
mov
in
or
call
in
shl
into
fbstp
icebp
fdiv
ret
int
cmc
cld
lock
rolb
push
or
lret
jmp
shr
loopne
shl
fdivp
mov
cld
in
sti
sarl
in
into
shrb
iret
jmp
sarb
fiadds
ret
fcmovbe
out
lds
add
fildll
enter
jmp
jmp
sti
sarl
fcmovnu
fchs
enter
scas
out
mov
cli
out
iret
mov
fld1
xlat
ret
in
out
cmc
stc
add
fdivrp
fadd
inc
scas
mov
sti
enter
enter
fucomip
ret
mov
inc
fmul
loop
cli
ror
call
ljmp
std
hlt
ret
int3
jecxz
roll
fsub
add
clc
in
fildll
mov
int3
cmc
in
fstp
mul
add
sar
add
add
shl
loope
loopne
shl
sti
ror
mov
hlt
cmc
mov
call
hlt
jmp
push
fisttps
mov
test
rcl
imul
lret
mov
add
pop
loope
clc
std
out
add
shlb
repnz
enter
sti
fdivrp
push
mov
out
int
push
loopne
cmpsb
repnz
mov
lock
clc
call
jmp
cld
aad
in
leave
ffreep
int3
mov
fcmovnu
cmc
in
fcmovnu
call
fnclex
in
loop
add
or
in
test
ror
in
enter
mov
clc
ror
in
add
incb
add
or
ror
enter
xlat
ret
lret
out
ret
cmc
hlt
cld
add
fimull
shr
lret
pand
rol
ror
mov
shlb
lret
stc
add
int
repz
repnz
add
in
cmpsl
out
xlat
mov
les
lock
sarb
int
or
scas
test
ljmp
repz
in
rolb
add
cld
in
lret
mov
mov
int
leave
not
call
hlt
ret
in
ret
jmp
add
stc
in
mov
call
fidivrs
in
hlt
sti
int
mov
push
inc
por
ljmp
mov
enter
mov
ljmp
ror
ffreep
into
lret
repz
iret
mov
fdivrp
cld
in
out
aad
in
icebp
fcmovbe
rcl
lret
hlt
or
jecxz
enter
into
imulb
leave
dec
in
mov
aad
std
pop
cld
loope
ret
add
in
or
ret
lock
in
shl
int3
mov
add
add
lret
add
hlt
or
fdiv
rep
lock
jecxz
sti
scas
mov
aad
aad
loope
shr
loope
iret
fdiv
fmul
iret
lock
jmp
sti
repz
int3
mov
rcr
jmp
ret
add
clc
out
push
out
out
in
ret
lret
fcmove
lods
repz
cmc
into
mov
lock
or
loope
add
out
ret
mov
jmp
mov
in
mov
fidivrs
xlat
lods
in
xlat
jmp
mov
repz
stc
fsubrp
repz
pop
loop
in
out
or
test
jmp
aad
ljmp
fst
pop
fstpt
out
cmc
sti
std
add
jmp
scas
fdivrl
sti
aam
lock
rcl
sti
cli
icebp
out
stc
fildl
icebp
lock
mov
fldl2t
in
ror
mov
rol
jecxz
out
fucomi
inc
out
in
lret
rol
out
lds
rcl
std
rol
fdiv
add
iret
int
bswap
repnz
lods
ljmp
leave
lods
lret
clc
std
rcr
loope
add
add
add
iret
add
lock
into
enter
mov
imul
fcom
cmc
aad
clc
loope
add
sar
jecxz
rcl
fisttpll
or
lret
test
mov
lret
mov
mov
les
xbegin
in
pop
ret
in
lret
mov
fnstcw
neg
fld
cli
div
fisttpl
std
sar
ljmp
mov
leave
loopne
int
in
mov
repz
rolb
flds
out
repz
in
ljmp
in
mov
out
fucomi
fdiv
mov
sti
loopne
add
enter
repz
mov
mov
out
rcr
mov
sar
aad
mov
std
cld
add
loopne
repnz
int
fldl2e
mov
aad
icebp
add
mov
or
cld
call
rcl
int3
fcomi
aam
rcl
xlat
shl
out
mov
add
out
jecxz
shr
lock
enter
mov
in
shll
in
in
rcr
clc
shr
or
fsubr
hlt
int
cmpsl
ljmp
int3
cli
jmp
mov
lret
rcr
cmc
add
mov
out
add
fmul
stos
in
out
out
jmp
clc
out
aam
clc
fdiv
mov
jmp
testb
push
cli
out
or
shll
neg
iret
aam
fst
fadds
out
std
out
stc
add
cld
lds
std
loopne
fdivrp
shrl
ror
jmp
xlat
aam
clc
fstp
xlat
incl
testb
jmp
leave
rol
fdivr
imul
imul
std
jmp
mov
out
movl
movsb
mov
lds
ljmp
lock
aad
add
loope
fmulp
out
test
mov
in
xlat
mov
out
jecxz
ljmp
add
in
int3
ret
leave
mov
mov
enter
rol
add
pop
lret
add
lret
fsub
fucomip
sarl
in
leave
int
vpsrlw
aad
incl
sti
shl
pop
fxch
add
in
add
int3
mov
icebp
repnz
int
cld
int
neg
add
add
or
cmc
fisttpl
shll
mov
lret
les
repnz
mul
fidivrl
icebp
in
incb
vpsubd
jmp
mov
lret
fcomi
mov
roll
mov
in
cli
lret
scas
iret
ret
in
shll
ret
aam
mov
hlt
jecxz
rcr
add
stc
fcmovnbe
add
test
push
lock
xor
add
cmp
je
jmp
jmp
mov
mov
xor
add
cmp
je
mov
mov
movzwl
mov
jmp
push
scas
jp
bound
xor
fimull
jnp
cwtl
jnp
test
mov
mov
in
int3
shl
call
call
out
out
add
fcmovb
call
lock
int3
idiv
jmp
lret
hlt
roll
rcr
not
aad
lret
test
sti
in
adc
out
iret
mov
out
ret
lret
mov
fisttps
or
aam
cmc
loop
cli
jecxz
loope
mov
mov
xlat
icebp
mov
add
std
jecxz
fxch
std
or
fsub
iret
ffreep
icebp
ret
mov
loopne
mov
hlt
int3
fadd
int3
sti
shl
stc
cld
jecxz
clc
fadds
std
stc
jmp
in
leave
out
mov
mov
enter
fst
add
loopne
loopne
neg
loope
add
xlat
movsb
icebp
shlb
jmp
mov
out
add
test
out
repnz
sti
fcmove
mov
mov
mov
add
fdivr
loopne
aam
pop
adc
out
repz
mov
std
hlt
rcl
mov
loopne
fdiv
hlt
iret
in
shl
in
jecxz
out
rcl
xlat
hlt
pushl
in
aam
cld
loope
add
iret
call
mov
lods
mov
aam
in
fcomi
add
lock
rcl
inc
ror
sar
jmp
fstp
repnz
mov
std
out
icebp
sar
ret
mov
loop
in
mov
in
int3
mov
xlat
stc
aam
std
leave
mov
ret
incb
aad
ljmp
fnsave
iret
mov
neg
loopne
ffree
add
fisttpll
bswap
enter
lret
aad
fdiv
in
vaddsubps
sti
fimull
add
or
call
ror
call
ljmp
shl
std
cld
rol
or
stc
enter
in
cmc
stos
jmp
pushl
stc
hlt
int3
fidivrs
fninit
cld
int
rol
mov
out
sar
aam
mov
mov
aad
fisttpll
int
icebp
enter
aam
int
test
call
ret
psubb
stc
cli
or
mov
int3
fcomi
fcom
rcl
iret
out
out
mov
clc
aam
cli
leave
push
sti
ror
call
mov
icebp
fucomi
not
mov
repz
rcl
pop
mov
std
loopne
add
ret
mov
mov
lret
fdiv
mov
sti
or
fdivrp
jmp
repz
repnz
loope
mov
lock
loopne
call
xlat
hlt
cli
out
cmc
mov
jmp
add
or
lods
int3
ljmp
xlat
fucomp
lret
in
mov
add
hlt
leave
add
pop
fisttpll
clc
or
in
lret
mov
repz
iret
fnstsw
fidivrl
loope
or
add
bnd
mov
loop
cli
mov
mov
mov
call
lds
fmul
int3
or
mov
call
lods
rcr
in
call
ret
out
in
mov
fcmovnu
stc
pop
push
rol
repz
mov
out
sti
enter
add
fcmovu
std
out
push
add
scas
jecxz
jmp
mov
call
ljmp
add
sar
out
out
cli
leave
repz
lret
iret
hlt
in
in
mov
div
mov
mov
ret
jecxz
fimull
ret
shr
jmp
add
add
neg
mul
or
fmul
shlb
xlat
loop
scas
mov
rcr
rcl
out
or
cmc
rorb
out
jecxz
clc
fidivrl
mov
test
rcl
mov
mov
or
clc
in
std
decb
in
leave
xlat
aam
mov
ljmp
mov
decl
iret
jecxz
add
test
mov
loope
call
repnz
mov
sti
sarl
add
out
iret
mul
icebp
mov
leave
fsincos
loopne
in
fcmovnb
add
vpaddd
jmp
int
in
mov
mov
lock
into
jecxz
ret
jecxz
roll
out
mov
or
enter
loopne
mov
test
icebp
lret
mov
iret
loope
aam
fucom
paddq
out
into
lret
fmul
mov
mov
mov
lock
aam
or
int3
jmp
mov
lock
ror
cmc
ror
out
icebp
jmp
out
add
fincstp
sti
cli
fdivrp
or
shrb
sti
mov
mov
hlt
lock
cmc
movl
rcl
in
or
push
out
lret
scas
mov
lock
mov
rol
filds
fld
in
testl
in
cli
into
or
lret
in
loopne
fld
int3
in
mov
fsub
cli
lock
femms
add
fisttpl
shl
lock
jmp
lock
in
into
int3
add
loope
rcr
add
push
clc
hlt
push
add
in
mov
out
mov
clc
icebp
into
fmulp
std
cmc
repz
iret
aam
rol
or
cli
cld
shr
out
ror
repnz
aam
in
enter
cmc
fsubp
ret
movntq
out
enter
in
shl
aad
hlt
icebp
shr
cli
xlat
mov
lock
lock
aad
add
shr
not
into
mov
aam
icebp
leave
aad
jecxz
in
enter
cli
fnclex
add
or
hlt
in
mov
xlat
mov
lret
repnz
ret
aam
paddd
aam
or
in
aad
in
out
repnz
inc
aad
cli
sarb
add
enter
in
add
out
lods
mov
mov
int3
mov
xlat
shr
shl
jecxz
mov
ffreep
pop
in
or
mul
stos
mov
in
mov
sti
cmc
in
add
clc
out
std
or
mov
int
out
lret
int3
shr
shl
fnstcw
clc
fidivrl
in
or
stos
cmpsb
mov
shll
sti
aad
shl
int3
lock
cmc
fsincos
add
out
lret
repnz
fcmovnbe
cmc
out
fsubr
mov
stc
out
jecxz
lock
add
add
shl
out
aam
mov
enter
mov
neg
in
repnz
test
enter
std
cld
aad
in
lock
or
pop
std
or
incl
adc
leave
mov
test
cli
std
in
repz
call
hlt
les
testl
out
cmpsl
ret
out
ret
iret
lret
rol
repz
call
mov
out
out
aam
out
mov
in
mov
out
mov
std
mov
add
movb
add
in
mov
fidivrs
add
add
cmc
jmp
or
add
call
in
in
sar
idivl
idivl
ret
enter
in
rcr
test
jmp
mov
sti
call
aam
out
int
std
mov
loopne
fmul
or
lods
mov
stc
aam
enter
out
hlt
jmp
stc
bnd
push
filds
leave
fmulp
lods
mov
enter
int3
leave
mov
ret
lds
jmp
leave
stc
lret
shr
mov
sti
ror
out
sti
fnstcw
shl
push
stc
add
add
push
out
or
fbstp
in
ljmp
shr
movl
hlt
xlat
out
out
lret
jmp
lret
mov
out
fidivrl
cli
xlat
fcmove
ret
clc
neg
aam
in
loop
in
fcomp
int3
out
lret
fadd
mov
divb
xlat
idivb
loopne
push
fsub
fcomip
scas
jmp
mov
shrl
aam
loop
clc
mov
jmp
loop
adc
cmpsl
call
loop
leave
call
aad
sti
roll
mov
add
out
add
int
into
into
mov
lret
icebp
call
in
std
stc
mov
cld
add
or
fdivrp
icebp
shll
lock
hlt
cmc
mov
shl
loop
add
fdivrp
fimuls
out
decb
lret
lret
int
aad
ror
lret
loope
ret
rcl
jmp
clc
loop
leave
aam
leave
fcompp
repz
out
divl
fcom
lds
mov
jmp
aad
idiv
in
jecxz
leave
mov
jmp
imul
lock
int
neg
fcmovb
mov
incb
test
or
int
out
out
scas
leave
out
in
shr
lock
push
add
repz
add
fucom
add
out
fidivl
rol
iret
iret
fucomip
icebp
into
ffree
cmc
mov
xlat
out
or
loope
fsubr
mov
hlt
fyl2xp1
fsubr
mov
into
sti
fcmovnu
ret
jecxz
or
leave
lods
repz
neg
iret
cli
mov
fucomip
mov
std
add
pmulhw
lret
out
rol
divl
sti
mov
sar
loop
or
pmulhuw
or
jmp
leave
shll
in
in
icebp
int
jecxz
sar
mov
call
or
std
in
jmp
push
enter
divl
in
fcmovnu
mov
fnstsw
jecxz
ljmp
not
lock
cmc
mov
in
int
shll
in
sarb
leave
fsubp
mov
shl
test
mov
rcr
mov
shl
int
jecxz
out
fcmove
cmpsl
loop
scas
lds
mov
iret
mov
flds
std
add
or
or
jmp
iret
int
mov
mov
fiadds
roll
leave
cli
add
fdiv
ljmp
repnz
lret
jecxz
rcl
idiv
ret
mov
or
adc
mov
iret
loopne
mov
lock
leave
out
mov
fstp
clc
rcl
stc
verr
or
or
fdivp
loopne
mov
int3
out
mov
imul
aam
rol
rcr
std
add
out
jecxz
iret
jecxz
lret
shl
scas
lock
divl
mov
hlt
xlat
cmc
lock
testb
leave
stc
in
call
int
ljmp
loope
mov
lret
or
add
flds
out
mov
out
loope
loopne
dec
enter
ret
test
ret
out
push
lret
int3
fsubr
into
ljmp
stc
out
fcmove
mov
fucom
loopne
lock
add
cld
repnz
in
jmp
mov
mov
aad
add
aam
fdivr
stc
fcmovu
enter
int
scas
lret
mov
ljmp
icebp
shl
add
cmc
loop
std
in
std
leave
lret
in
ljmp
lds
call
int3
loope
lds
testl
in
shl
repnz
stos
enter
les
pop
fiaddl
mov
add
fndisi(8087
out
in
ret
ret
fucomp
lods
rol
fdivr
lock
mov
mov
add
out
stc
add
jmp
mov
mov
repz
std
lock
sti
aam
in
aam
adc
mov
jecxz
enter
enter
add
fnop
out
fadds
aam
aam
dec
or
mul
ret
xlat
neg
int
out
icebp
neg
jmp
fcmovu
lret
pop
add
lds
add
mov
leave
cmc
icebp
aad
call
ret
int3
loop
in
push
std
or
lret
out
mov
in
icebp
out
int
out
ljmp
sar
ret
cld
aad
lret
add
loopne
jmp
mov
mov
mov
enter
stc
jecxz
out
cli
clts
add
leave
loop
icebp
out
in
mov
clc
out
fcmovu
jmp
aad
flds
in
mov
shl
out
out
lret
jmp
mov
in
mov
mov
ret
add
out
dec
ljmp
in
into
imul
lret
repnz
icebp
shl
std
in
add
test
ret
cli
sti
jmp
hlt
fnsave
out
in
hlt
vcvttpd2dq
stc
mov
repz
mov
shl
idiv
mov
enter
aam
mov
mov
push
lret
mov
loope
mov
mov
fdivrs
fcmovb
hlt
hlt
jmp
int
fcmove
int
out
out
aam
mov
iret
cli
dec
jmp
cld
loope
hlt
ret
out
push
add
jmp
jmp
ret
out
into
repnz
cmc
call
jmp
mov
jmp
fucomip
mov
enter
in
int
shl
out
mov
neg
aam
iret
out
lret
lds
enter
neg
aam
icebp
mov
rcr
fldl
or
sti
ljmp
lock
rcr
mov
repnz
ror
cld
push
fucom
cli
xlat
add
jmp
repz
mov
mov
lds
icebp
out
icebp
jmp
jmp
or
stc
add
mov
in
mov
mov
shl
mov
int3
cmc
fprem1
add
aam
clc
jmp
push
lret
loop
scas
repnz
divl
repz
jecxz
into
mov
out
xlat
fmul
out
out
lret
aad
xlat
enter
aam
ret
into
mov
add
rol
ror
in
hlt
in
mov
add
out
clc
into
jecxz
clc
leave
lret
in
mov
out
lret
mov
sarb
stc
loope
ret
pop
push
les
ret
iret
lods
scas
enter
fcmovnb
int
in
mov
fsub
inc
ret
fsub
lds
or
lods
repnz
out
mov
mov
std
shl
repz
repz
leave
ffree
cmc
in
call
jmp
mov
xlat
repnz
out
add
out
add
mov
lret
enter
fsubr
rol
ror
xlat
mov
imul
out
jmp
fcmovbe
fcmovb
std
out
or
enter
ror
in
call
in
shr
leave
jecxz
ret
neg
add
loopne
fcmovu
out
in
in
out
out
shll
sar
in
loope
cmc
fadd
shl
loopne
mov
out
shrl
mov
mov
hlt
ljmp
in
std
jmp
fiadds
cld
int
fbld
ret
cmc
ret
fcmove
in
clc
fxch
call
test
sti
std
jmp
mov
mov
fdivr
ror
loope
add
ret
incl
call
out
les
fcmovnb
stc
sti
mov
out
mov
add
in
iret
mov
enter
mov
enter
mov
in
sar
psubsb
fadds
mov
rcl
mov
incl
mov
lock
or
shl
enter
add
ljmp
fcom
repnz
jmp
jecxz
rcl
int
aad
fchs
ret
add
enter
int3
leave
lret
mov
jmp
enter
loope
sar
roll
idiv
pop
faddp
add
fldcw
jmp
mov
repz
fucom
movb
or
shl
in
aam
lock
hlt
mov
cli
fdivr
in
add
pop
or
fld1
scas
lods
jmp
shll
add
into
mov
or
fyl2xp1
lret
stc
out
mov
mov
stc
shl
out
repz
call
fiaddl
cmc
jmp
fadds
add
sti
iret
add
fdivl
repnz
icebp
call
add
int
aam
lret
cld
into
repz
out
xlat
shl
test
iret
lret
aad
mov
neg
mul
loope
push
in
int
repz
shr
leave
aad
shr
mov
out
out
icebp
fdiv
idiv
lret
out
fsubr
in
movsb
loope
hlt
repnz
mov
rolb
jecxz
mov
jmp
ffree
push
scas
mov
mov
mov
rcr
sti
in
ret
add
ret
or
fdivr
or
int
int
stos
in
cmc
mov
in
shl
jecxz
jecxz
in
add
lret
add
fidivs
rcl
aad
lock
mov
cmc
add
les
or
in
mov
shr
fstpt
add
shl
sarl
iret
loope
fdiv
jmp
aad
out
jmp
enter
repnz
out
int3
jmp
mov
fld
mov
int3
fdivr
mov
add
rcr
aad
fabs
cli
fmulp
clc
ffreep
lret
shll
in
lock
aad
add
std
xlat
ljmp
fucomip
stos
iret
jecxz
divb
aad
jecxz
into
int
ffree
decl
out
add
scas
out
scas
div
cmc
test
mov
in
lret
repnz
ffreep
shr
ljmp
mov
enter
sti
out
mov
clc
in
add
fadds
jmp
leave
repz
out
shl
ror
mov
out
add
fcomp
mov
push
or
mov
test
test
out
repnz
leave
jmp
add
mov
pop
cli
or
out
add
shl
shrb
fidivrl
in
fcmovbe
cli
not
mov
fcomp
psubusw
out
cmpsb
jmp
out
lret
mov
repz
aad
stc
aam
or
push
stc
or
add
aam
loope
shll
cld
lock
into
out
rol
lods
into
lods
int3
icebp
icebp
in
enter
add
loope
in
aam
filds
cli
into
mov
shll
aad
fstp
ret
ret
shl
sti
or
mov
lods
ror
rol
ljmp
mov
sti
push
cli
lret
ret
loopne
iret
or
or
scas
fsubp
hlt
mov
icebp
lods
mov
mov
std
std
loope
add
fdiv
out
stc
int
fadd
icebp
ror
int3
call
mov
leave
mov
out
or
clc
or
testb
jmp
jecxz
jmp
out
mov
mov
mov
hlt
sarb
add
repnz
mov
mov
ret
idivb
add
rcr
or
fdivr
fdivs
out
lret
jmp
add
not
clc
fnstsw
testl
fucomip
loop
shl
mov
iret
mov
mov
mov
mov
mov
jmp
enter
fsubr
ror
fmul
in
enter
fsubr
fdivr
repz
faddp
in
cmc
out
aam
or
stc
fucomip
mov
repz
cli
mov
out
shl
mov
push
aad
or
decl
sti
out
faddp
lret
ret
in
mov
sti
int3
jmp
iret
fiadds
out
hlt
add
ljmp
lods
call
div
dec
ror
mov
mov
aam
in
call
loop
xlat
mov
rol
fcmove
fsubr
add
iret
enter
jmp
div
jmp
loope
ftst
lods
int
jmp
aam
repnz
fidivrl
add
fsub
ljmp
int
rcl
mov
ror
jmp
fdivrs
pop
add
not
rcr
iret
in
cld
repnz
iret
in
aam
into
fstp
into
ret
aam
sarl
div
rorl
or
jecxz
lods
mov
mov
repz
fdivrs
repz
leave
fsub
icebp
sti
mov
jecxz
mov
ret
clc
iret
jecxz
rcr
lods
lock
stos
sti
lock
cli
test
mov
neg
in
mov
pop
jecxz
push
hlt
or
into
out
mov
rol
stc
repnz
into
add
out
in
hlt
loop
out
cmpsb
lods
repz
mov
sarb
cmc
push
add
pop
clc
add
sar
lods
lret
out
stos
in
mov
lret
sar
icebp
mov
jmp
sti
hlt
push
in
out
repz
lock
lret
mov
int3
lods
mov
in
div
shl
out
jecxz
or
sti
fimuls
cli
std
or
lods
scas
rol
lods
lock
jmp
roll
cli
hlt
ror
push
lret
leave
push
or
out
loop
in
repz
fprem1
int3
mov
mov
shl
shl
in
jmp
int3
repz
mov
fsub
push
sti
mov
add
repnz
add
hlt
femms
add
loope
repnz
loope
loop
jmp
mov
cli
aam
mul
mov
out
out
fdivp
out
fcmovu
loope
lods
ror
mov
jmp
mov
loopne
repnz
shr
add
mov
in
int3
leave
aam
cmc
fcompp
icebp
cli
ljmp
out
jecxz
ljmp
mov
ret
mov
ror
mov
leave
fcomp
mov
stc
mov
lret
or
cli
leave
fdivs
jmp
enter
std
out
loope
repnz
cmc
fimuls
out
repz
mov
repz
imul
dec
iret
clc
xlat
out
ret
mov
vpand
or
or
fsub
out
loopne
div
loope
leave
out
jmp
cli
call
shl
in
incb
add
cli
loope
add
test
loope
lret
mov
fdiv
xlat
idiv
out
aad
xlat
test
shl
out
in
or
fucom
lock
in
mov
int
mov
int3
rolb
repz
fidivrl
add
jecxz
shlb
shl
sar
int3
mov
add
lock
clc
mov
or
loope
ljmp
mov
ljmp
clc
or
in
out
lods
int3
ljmp
fptan
int3
out
call
inc
aam
add
xadd
sti
fsubr
lock
out
mov
lods
mov
in
int3
mov
out
cmc
hlt
or
out
or
sti
enter
scas
out
aad
fcomi
clc
int3
mov
int3
cld
cld
cmc
stc
sti
add
fsub
repz
lret
into
jecxz
cli
mov
icebp
lret
in
mov
mov
fadd
mov
shr
mov
enter
rol
rcl
loope
jmp
lock
into
movb
or
out
loop
in
mov
xlat
clc
sti
rcl
loop
aam
or
leave
jecxz
add
vpsrlq
iret
iret
in
rol
rcr
ljmp
div
out
aam
push
call
mov
icebp
fucom
int
jmp
iret
repz
ror
jecxz
repz
jmp
or
cmc
lds
fiadds
fucom
call
enter
shl
jmp
jecxz
repnz
lret
clc
add
in
lret
scas
lods
int
jmp
stc
mov
out
dec
fbstp
cli
icebp
or
icebp
imul
add
or
shlb
fcmovnbe
cli
mov
lock
pop
mov
add
mov
shr
aad
int3
shr
icebp
shr
cld
cli
lret
out
in
clc
add
jmp
aad
cld
lret
mov
sar
hlt
mov
cmc
lock
aam
add
jecxz
aam
fyl2x
fsin
loop
add
iret
in
test
iret
jmp
lock
mov
shr
fmul
loope
cld
fdivrs
les
push
in
ljmp
sti
int3
hlt
aam
cmc
jecxz
sti
loopne
into
repz
loop
out
fdivr
add
out
adc
iret
ffree
scas
loop
hlt
imul
in
fneni(8087
dec
fcom
clc
sti
loopne
lock
add
out
out
in
shl
aad
iret
cli
jecxz
mov
jmp
mov
into
enter
loop
lret
mov
into
mov
mov
fcmovne
shl
or
in
fsubrl
in
mov
call
ret
repnz
jmp
add
out
jecxz
icebp
lods
repnz
mov
aam
mov
clc
rcl
out
xlat
xlat
add
fcmovu
in
rol
jmp
out
mov
int
repnz
out
ret
ljmp
loopne
loope
add
mov
jmp
loopne
int3
fmul
jmp
in
mov
pop
flds
jecxz
out
fucomip
int3
out
fdivl
test
stc
icebp
rcr
mov
enter
lock
aam
loopne
fsub
decl
add
out
lock
mov
cli
fcmovnu
jecxz
add
fdivrl
lret
lret
in
jecxz
lret
mov
rcl
xlat
mov
mov
hlt
movb
add
lret
rcr
mov
stc
jmp
add
shl
rolb
cld
or
fcmovne
add
ror
rcl
rol
loop
mov
in
aad
aad
ret
mov
ret
cli
clc
fisttpll
add
leave
out
scas
cmc
repz
fucomi
call
in
push
ret
add
or
aam
syscall
hlt
in
adc
lock
movsl
loope
test
mov
mov
incb
add
icebp
roll
sti
fdivrl
repz
in
mov
fpatan
jmp
rol
in
fadd
jmp
call
icebp
repz
divl
mov
or
hlt
leave
add
in
jmp
leave
out
aam
enter
out
std
int3
hlt
loopne
sti
shr
out
out
or
lret
loopne
into
jmp
aad
fst
mov
out
loop
push
in
jmp
std
ffree
std
std
add
out
jecxz
ljmp
mov
add
stc
cli
fadds
jecxz
smsw
mov
ror
ret
aam
in
fcmovu
out
mov
ret
add
faddl
std
fnstcw
lods
xlat
in
shl
ljmp
add
loopne
jmp
lret
pop
out
add
rcr
ljmp
in
mov
fiaddl
add
enter
int3
sti
icebp
aam
in
int
cli
add
into
fdivp
xlat
loop
in
aam
mov
ret
pop
std
jmp
ret
adc
out
fnsetpm(287
scas
int
ljmp
repnz
or
fcmovb
or
in
loope
into
in
call
mov
cli
shl
ret
icebp
inc
ret
loope
iret
or
test
out
lret
rcl
cmc
lret
aam
int
ffreep
loopne
lret
fiaddl
out
iret
repz
rol
repnz
iret
shl
mov
neg
in
in
aad
out
faddl
fcmovb
in
clc
add
lock
icebp
in
fucomi
mov
fsub
loop
push
cli
mov
jmp
cli
loopne
scas
repnz
movsb
mov
jecxz
mov
lock
aam
lock
fcmovnbe
fadd
cmc
cli
into
out
out
int3
xlat
mov
sti
mul
int3
hlt
ljmp
int
std
out
ret
lret
lret
mov
loopne
mov
in
enter
aad
mov
add
fmul
lds
call
out
lret
icebp
lret
mov
mov
into
mov
add
pop
fadd
pop
mov
loopne
shr
fld
out
ret
add
fdivr
clc
add
aad
iret
loope
fmulp
mov
mov
aam
cli
les
repz
out
out
iret
ljmp
lret
hlt
les
roll
hlt
fnstcw
in
fucom
repnz
mov
lock
fpatan
ret
testb
frstpm(287
add
call
in
icebp
in
fidivl
repz
out
repz
shl
call
in
repz
lret
stc
mov
fcmovu
iret
jmp
in
mov
mov
fdivp
hlt
add
psubw
fcmovb
test
mov
into
div
mov
shl
std
add
aam
loope
lret
cld
ret
out
out
scas
ror
icebp
mov
iret
fmulp
rolb
shr
fxam
shl
cmc
or
in
fcmovne
add
lret
scas
in
mov
neg
iret
in
in
neg
sti
int
sti
int
call
repz
or
in
iret
ljmp
ljmp
leave
loop
shl
in
stc
cli
add
lds
leave
repz
jmp
mov
mov
sti
in
imul
int
mov
mul
shl
stc
cli
add
fstp
into
in
sarb
test
mov
add
add
add
into
rol
ret
jecxz
mov
mov
mov
fdivp
repnz
leave
movb
sarb
lods
repz
sti
fsqrt
ret
in
ret
add
faddl
repnz
jmp
movsb
rol
mov
shl
frstpm(287
clc
mov
rcl
add
ror
or
shr
repz
test
in
iret
int3
hlt
loope
out
mov
clc
roll
fcomip
loope
adc
add
fcom
aad
aad
repnz
cmc
fidivrs
enter
hlt
push
ljmp
jmp
mov
ret
aad
mov
in
loop
in
sar
hlt
fdivrs
add
push
leave
test
loope
aam
scas
icebp
in
in
iret
std
call
std
out
cli
lret
out
mov
ljmp
jmp
mov
div
sti
or
clc
iret
enter
adc
ret
aad
cli
stc
sti
stc
mov
cli
lock
fldl
or
fisttpl
sti
ljmp
mov
xlat
fmul
aad
incl
add
div
jmp
cld
call
in
ret
jmp
mov
fcomp
icebp
jmp
mov
loope
in
aad
mov
iret
lret
int
mov
jecxz
int
hlt
int
aam
aad
ret
add
pop
inc
sti
cli
filds
jmp
mov
jecxz
call
les
aad
fxch
add
clc
or
repnz
test
iret
shl
enter
sti
fistpll
mov
lret
neg
sti
clc
fxch
cli
shrl
out
in
lock
lock
aam
fcmovu
out
cli
or
jecxz
iret
fsubp
mov
leave
scas
jmp
mov
fcom
cld
repnz
rcl
cli
add
add
iret
filds
in
int
repz
in
mov
int3
mov
sar
push
mov
ljmp
in
fadd
ret
ljmp
ret
testl
mov
cli
out
mov
leave
in
out
mov
fcmovnbe
leave
int
ret
int3
loop
rcr
rorl
shr
leave
leave
in
repnz
jecxz
cli
mov
mov
mov
in
push
mov
or
stc
loop
mov
xlat
mov
jecxz
sti
aam
sar
shr
rcl
int3
roll
rcr
rol
leave
int
leave
int
stos
fsubp
mov
sar
mul
cmc
call
aad
fcomp
repz
sti
incb
or
lds
int
iret
aad
repnz
lret
repnz
clc
hlt
cmc
neg
repz
loopne
add
or
or
mov
in
leave
mov
out
mov
cmc
fsub
add
lock
iret
aad
std
shl
mov
loop
in
mov
in
in
iret
aam
add
aam
cli
add
sti
or
or
int
out
call
out
in
repz
rolb
loope
loope
cld
loope
or
pop
rol
mov
mov
loopne
out
into
fcomi
add
lock
repnz
out
lret
add
or
pop
lods
mov
repnz
inc
mov
mov
jmp
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
xor
add
cmp
je
lea
mov
mov
mov
mov
mov
mov
movzwl
xor
add
movzwl
mov
movb
lea
mov
movzbl
xor
add
mov
mov
movl
movl
mov
xor
add
mov
jmp
mov
inc
mov
cmpl
jae
mov
mov
mov
jmp
mov
xor
add
mov
jmp
mov
inc
mov
mov
cmp
je
mov
mov
movzwl
xor
add
movzwl
mov
mov
mov
movzwl
xor
add
mov
mov
jmp
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
xor
add
je
lea
mov
mov
sub
xor
mov
mov
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
movsbl
movsbl
cmp
je
mov
movsbl
mov
xor
mov
movsbl
cmp
je
jmp
jmp
mov
xor
mov
movsbl
mov
xor
add
cmp
jne
jmp
mov
xor
mov
lea
mov
jmp
jmp
mov
xor
add
mov
mov
jmp
mov
add
mov
cmpl
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
mov
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
je
mov
xor
mov
xor
add
mov
mov
mov
xor
div
lea
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
jmp
ret
ret
jno
ret
rclb
clc
mov
insl
jnp
out
jnp
int
iret
fcmove
mov
aam
out
xlat
testb
adc
iret
jmp
ret
iret
leave
aam
jmp
mov
out
in
repz
jmp
ljmp
shrb
aam
out
mov
xlat
rcr
in
fst
fdiv
aad
leave
shll
loop
hlt
mov
out
int3
in
mov
pop
sti
mov
sti
lret
or
loop
out
mov
jmp
fdivrs
rol
lret
mov
shlb
into
in
int
iret
ljmp
add
add
jmp
stc
cli
fsubrs
out
aam
lret
mov
repnz
mov
push
add
testb
out
scas
fdivl
in
idiv
testl
idiv
mov
or
ret
jmp
into
iret
shl
mov
int
ljmp
vpsraw
mov
out
add
mov
mov
into
out
sarl
rolb
in
in
jecxz
vpsubsw
add
int
in
leave
mov
lret
clc
cmc
mov
enter
fstp
in
cld
in
cli
fucomip
jmp
mov
out
in
repnz
fst
enter
cli
aam
fcompp
in
iret
or
jmp
in
mov
mov
xlat
fidivrs
int
rcl
add
cli
or
xlat
repz
shlb
dec
aad
int
mov
out
sti
jmp
or
test
int3
loope
mov
std
mov
fadds
idiv
leave
out
frndint
jecxz
icebp
in
shr
shlb
aad
jecxz
int3
mov
ret
fsub
in
or
fisttpll
fisubrs
shl
out
rcl
hlt
std
dec
loop
xlat
int3
clc
add
fsub
jmp
lock
iret
xlat
hlt
repz
in
div
cld
int
iret
clc
aam
bnd
ret
xlat
pop
jecxz
ljmp
in
aam
mov
aam
aam
mov
add
push
xlat
aad
icebp
test
jecxz
repnz
cmc
in
mov
in
enter
ljmp
mov
push
call
rcl
out
xlat
leave
lods
iret
rcl
mov
stc
filds
fsub
sti
aad
push
out
add
fucomp
in
in
ror
mov
aam
fcmovbe
out
add
loop
icebp
jmp
leave
ret
scas
mov
in
lret
fildl
jmp
cli
mul
mov
or
add
test
sti
mov
mov
iret
jmp
jmp
in
stc
lret
fscale
or
or
int3
out
div
shl
lods
mov
enter
mov
lock
not
sar
in
loope
paddusw
in
repnz
mov
stc
repz
aad
add
rorb
neg
jmp
fcomip
loope
fmul
int3
lods
cmc
out
call
aam
in
sar
lock
jecxz
jecxz
stc
cld
aad
or
out
mov
mov
call
stc
into
in
rolb
loope
add
aam
cld
or
in
or
adc
jmp
loop
leave
call
ret
cmc
cld
add
xlat
fldl
fmuls
stc
ljmp
mov
fidivs
mov
fdiv
ret
call
fdecstp
or
add
aad
out
rol
aam
out
jmp
int3
mov
mov
jmp
loop
jecxz
in
out
test
icebp
out
div
iret
out
call
leave
add
add
inc
fildl
out
ljmp
ret
loopne
shlb
in
mov
fcmovb
out
filds
cld
loope
adc
repnz
repz
into
sarl
lock
rolb
sti
out
cli
fists
fisubrs
hlt
repz
call
leave
mov
fiadds
loopne
cld
lds
lret
scas
rol
repnz
shll
sar
ret
jecxz
lret
or
add
int3
mov
cli
mov
mov
test
int3
leave
fcmovnu
add
out
rol
cli
add
aad
loope
leave
mov
mov
fadd
xlat
iret
clc
lock
push
mov
int
into
roll
pop
or
ljmp
cmc
mov
ljmp
fucomi
fnstsw
cli
ret
add
add
pop
cli
shrb
hlt
rcl
aam
incb
fcom
out
fidivrl
or
in
dec
loopne
mov
mov
int3
ljmp
fst
jecxz
testl
fucom
vpmaxub
enter
shr
mov
mov
call
hlt
ret
shl
add
cld
fucompp
add
lock
fdivr
icebp
shr
cli
fcmovnb
ret
cmc
loopne
lock
ljmp
int
loope
vpsubsw
mov
mov
mov
fisttpl
loopne
repz
stos
out
lret
lods
cli
in
hlt
mov
sar
mov
out
push
pop
add
leave
repnz
scas
lods
lret
in
out
fcmovbe
lods
fistpll
icebp
fiadds
jecxz
testl
fsts
in
shr
fdiv
cmc
div
out
in
fdivrs
out
cli
or
in
or
faddp
out
int3
lods
neg
icebp
cmc
fcmove
mov
hlt
lock
out
jmp
lock
out
int3
call
mov
out
mov
lret
stc
mov
fdiv
repz
cmc
in
jecxz
pop
fisttpll
in
jmp
mov
lock
jmp
mov
mov
in
add
add
vshufpd
add
icebp
ret
scas
hlt
mov
in
hlt
clc
mov
idivb
sarl
loop
or
or
xlat
lret
rcr
in
fcmovu
fcmovu
clc
clc
in
mov
sti
rcl
fiadds
in
lret
lock
out
mov
fmul
mov
mov
sti
in
decl
in
into
shl
repz
cmc
lock
sti
lock
or
add
shl
ret
mov
mov
mov
idivb
repnz
or
clts
stc
out
scas
jmp
mov
in
sti
fsubr
lock
fiaddl
mov
add
repz
jecxz
push
fcompp
out
in
jmp
divl
fdivp
les
int
in
add
jecxz
enter
add
loop
fmulp
scas
ljmp
aad
out
add
jmp
in
fdiv
clc
or
hlt
add
fadd
mov
lods
int
out
int3
std
aad
mov
mov
jmp
loope
shr
test
cmc
jmp
call
xlat
leave
add
cli
loope
cli
aam
add
stc
loopne
enter
loop
jecxz
imul
mov
out
mov
leave
mov
shl
rcl
sar
push
lret
out
ljmp
in
shll
fst
ret
rcr
cmc
shl
fldln2
into
stc
sar
mov
leave
scas
enter
scas
lret
mov
rcr
into
fucom
mov
lock
or
add
enter
rol
xlat
lods
sti
out
out
add
aam
ret
cmc
cmc
push
mov
sti
clc
scas
lock
lods
leave
out
lock
mov
mov
xlat
rorb
cmc
add
call
shl
rcr
in
lret
mov
fpatan
mov
mov
mov
cmc
ror
pmuludq
or
int3
test
cmc
loope
int
fdivr
shr
sarb
or
jmp
or
add
cli
add
mov
out
mov
hlt
in
int
fiaddl
in
add
fdivrp
lret
ljmp
enter
in
iret
cmc
icebp
shlb
enter
int
fsub
fnsetpm(287
out
add
in
loop
iret
shlb
out
into
mov
shl
fdivrl
stc
stc
cli
mov
out
test
rol
enter
ljmp
ret
cmc
add
loopne
fneni(8087
jecxz
dec
call
out
rcl
out
shl
mov
int3
aad
mov
mov
add
int
out
icebp
loop
scas
fprem
repz
fcmovbe
mov
cli
stc
in
loopne
out
iret
add
ret
leave
test
lret
std
xlat
mov
loop
clc
shl
pop
ret
or
push
add
dec
ljmp
out
in
test
stc
into
stc
mov
in
or
add
xlat
vpavgb
loop
mov
int3
lods
not
mov
mov
icebp
ror
lret
add
aad
in
pop
cli
pop
leave
push
in
std
ret
out
scas
scas
fucomp
repnz
jecxz
mov
fcmovb
stc
lret
or
mov
imul
loop
lods
mov
fcmovne
dec
mov
out
ret
sti
clc
fsubp
add
out
in
fsubr
into
repz
ret
rcl
out
sarl
in
rcr
aam
add
faddl
ljmp
int
out
int3
lock
lret
ljmp
aad
mov
add
add
or
imul
hlt
loopne
jmp
leave
jmp
fidivrs
std
mov
ljmp
in
cmc
out
icebp
into
aad
stc
std
fsub
add
cld
xlat
aam
or
jmp
scas
call
enter
stc
mov
rolb
out
fcmovnb
fcomp
sti
fxch
out
lret
lret
int3
in
out
mov
rol
in
in
aam
int3
out
jmp
out
testb
repnz
in
repz
xlat
ljmp
ret
jmp
clc
iret
add
out
add
scas
jecxz
lods
call
mov
repz
icebp
xlat
incl
xlat
in
call
mov
ljmp
jmp
faddp
loopne
icebp
loopne
add
push
les
add
clc
fld
fistpll
out
shlb
aam
add
xlat
mov
paddw
or
std
jmp
int3
mov
in
aam
jmp
in
stc
loopne
add
mov
or
lret
lret
fdivr
in
jmp
ret
mov
repnz
out
repnz
ljmp
add
loope
loope
fiadds
or
loope
int
in
mov
idiv
mov
mov
fucomip
call
stc
not
repz
jmp
pop
cli
add
add
repnz
ror
mov
mov
mov
mov
repnz
mov
in
idivb
into
add
out
add
call
faddp
repnz
loopne
lods
int
aam
int
mov
in
test
movl
fsub
lret
shrb
mov
mov
cmc
sarl
pop
cld
mov
cli
into
flds
in
shrb
mov
jmp
icebp
icebp
jmp
fsubp
in
add
or
stc
in
mov
repz
call
aam
cli
fadd
mov
mov
lret
in
push
in
out
in
out
cmc
sti
cmc
in
in
flds
pop
mov
rorl
jecxz
fcmove
sti
push
stc
shrl
shl
cmc
lret
int
mov
aad
add
cmc
loope
rol
fdivr
int3
mov
int
int3
out
enter
push
std
aad
mov
shl
cmc
neg
jmp
rorl
out
ljmp
mov
in
int3
neg
icebp
add
fucomi
div
aad
std
repz
repz
ret
leave
call
mov
not
sar
std
lock
mov
or
fldcw
cmc
cli
cmc
aam
jmp
into
sarb
neg
jmp
add
or
scas
xlat
test
shl
enter
repz
enter
sti
cli
in
jmp
into
fcomip
enter
ret
out
rcr
sti
cmc
cld
mov
mov
mov
fcmovnu
loopne
or
or
loopne
ret
int
mov
hlt
stc
out
enter
mov
fcomp
inc
jecxz
fdivl
stos
mov
fxch
mov
call
jmp
out
ljmp
ficoml
rol
call
mov
out
iret
enter
repz
cld
imul
rcl
repnz
cli
icebp
out
cmc
into
out
jmp
call
out
out
ror
jmp
aad
sti
shl
inc
fcomp
sti
jecxz
or
std
jecxz
in
lret
shl
mov
mov
clc
mov
mov
or
fmul
cld
or
shrl
mov
mov
cmc
mov
clc
pop
loop
call
in
add
mov
jmp
fcomip
mov
jmp
mov
mov
aam
repz
or
sti
testl
mov
lret
lods
loop
fcom
mov
fcom
cli
mov
ret
cli
cld
in
ror
ljmp
in
ror
jmp
enter
rolb
sti
pop
loop
or
ret
rol
shrb
int
aad
sar
aam
idiv
mov
icebp
repnz
push
jecxz
adc
lret
mov
test
ljmp
fucomp
cmc
push
fcmovnu
push
div
shr
or
add
in
icebp
repnz
fndisi(8087
shl
out
ljmp
add
add
enter
or
rol
jecxz
hlt
mov
mov
mov
mov
fadds
repz
fsub
rolb
loop
clc
mov
in
loope
xlat
into
out
jmp
fiadds
ror
add
fndisi(8087
fst
in
enter
icebp
mov
out
enter
aad
mov
out
repz
or
sti
or
out
rcr
repnz
out
leave
enter
leave
leave
fdivp
out
push
push
shl
aam
out
in
fdiv
imull
mov
int
lock
shr
shl
pop
cmc
fxch
in
add
cld
in
stos
jecxz
shl
shlb
stc
mov
mov
hlt
in
sti
lret
adc
in
leave
ror
fcmovnu
clc
mov
into
loope
jecxz
ljmp
add
cmc
test
mov
into
jecxz
push
clc
xlat
sti
stc
lret
push
or
into
stos
call
lret
in
enter
mov
add
ret
lock
aad
in
add
mov
cmc
lret
in
in
stc
mov
mov
incl
sti
fsubr
add
add
leave
leave
jmp
mov
mov
out
mov
ror
mov
clc
mov
loopne
out
std
in
mov
loop
mov
out
lock
rolb
push
or
cld
out
into
push
icebp
mov
loopne
mov
mov
mov
jecxz
stc
lret
icebp
leave
lods
in
divl
mov
mov
sar
lret
out
or
icebp
out
scas
in
loop
iret
repnz
sarl
aad
repz
xlat
pop
rol
lret
out
incl
shr
out
mov
lods
mov
enter
out
fdivp
in
ret
std
push
lret
or
leave
sti
aam
mov
aad
mov
fcmovnu
aam
enter
in
ror
ror
repz
mov
mov
stc
mov
sar
xlat
in
add
enter
std
into
jmp
mov
mov
repz
call
add
jecxz
call
iret
leave
lods
test
aad
iret
mov
call
iret
aad
xlat
fsin
aad
pop
stc
loope
in
loope
mov
out
fcomi
aad
mov
mov
shr
ret
fisttps
iret
add
jmp
iret
mov
push
fyl2xp1
lret
cli
fdivp
std
icebp
jmp
fldl
mov
fucomip
in
out
mov
jmp
leave
mov
repz
shl
cli
lret
dec
sti
add
jmp
fsub
ret
in
enter
mov
not
or
cli
loopne
sti
or
sarb
shl
rcr
in
cli
idiv
aam
int
out
loopne
loop
neg
movb
clc
fsubr
call
hlt
clc
out
rcr
rcl
repz
in
lds
in
pminsw
mov
mov
std
fdivl
repz
rol
jmp
add
fcmovnb
mov
int
sarb
jmp
ljmp
add
rcr
fsubp
loopne
in
enter
fcmovnbe
repnz
fidivl
mov
sti
add
fucom
std
or
add
out
xlat
in
ror
loope
loope
mov
not
loop
mov
lret
clc
fcomi
out
pop
lods
test
fsubrp
shl
icebp
call
mov
shl
sti
lock
fldl
ret
push
call
jmp
into
loopne
mov
sarb
fldl
xlat
push
fchs
loop
fisttpl
shl
vcmppd
out
ror
mov
mov
hlt
add
testb
rcr
add
fsubrp
ljmp
ret
in
shl
mov
add
mov
fcos
clc
or
scas
mov
into
out
sarl
imul
mov
fxam
out
in
fcoms
mov
aad
icebp
in
jmp
mov
mov
mov
filds
or
cmpsb
mov
loope
mov
divb
xlat
int3
add
pop
in
fildl
lret
in
fucomp
add
loopne
movsl
in
iret
shll
sti
into
idiv
mov
rcl
incb
out
out
add
shl
in
stos
fidivl
iret
mov
repnz
ret
cli
sti
repnz
call
jmp
shl
lods
shr
cmc
loop
add
sti
loope
aam
jmp
mov
lret
out
out
mov
mov
add
lret
fld
add
mov
xlat
enter
leave
lds
stc
mov
sar
or
or
into
into
repz
ljmp
fnstcw
in
add
add
out
out
shrd
int
in
rol
out
repnz
div
iret
repz
sar
shr
fcmovnb
or
out
hlt
add
cmc
shl
sar
call
loopne
shl
out
fst
icebp
std
in
cld
fcomp
add
repz
shl
shr
int
into
lods
in
call
repnz
add
mov
or
mov
ret
in
in
mov
iret
stc
cld
mov
shl
aad
cmc
in
iret
cld
mov
jmp
out
jmp
fcmovnbe
pop
mov
aad
hlt
add
hlt
sti
fcmovb
into
repz
xlat
xlat
sti
sti
shl
in
lret
cld
icebp
jecxz
fildl
jecxz
add
push
out
fdivrp
fst
mul
aad
out
test
icebp
add
repz
out
cmc
cli
mov
out
cmc
push
cli
fnstsw
mov
in
rcl
push
ljmp
add
add
icebp
cli
add
test
ljmp
lret
lret
fcmove
iret
mov
jecxz
std
rcl
lock
les
shrl
fincstp
not
cli
add
ret
test
lret
add
fyl2x
mov
shl
call
stc
add
sarb
or
int3
loope
lret
mov
out
cmc
mov
in
fdivrs
rcr
cmc
cli
les
in
out
jmp
mov
call
shl
loop
in
loop
sar
mul
fucomp
fmul
stc
loop
loope
call
int3
aam
mov
ljmp
fdiv
lock
fcomi
hlt
in
jmp
repnz
call
shl
ljmp
mov
loopne
stc
add
push
rolb
scas
stos
shll
mov
fstp
into
shr
int3
rorb
ret
enter
in
ret
lret
hlt
in
shl
clc
into
xlat
ret
rol
in
repz
fadd
aad
hlt
lds
mov
lret
mov
cli
sti
add
testb
cmc
ljmp
fistl
jmp
aad
lret
ljmp
out
lock
out
sti
loop
mov
shlb
sti
idiv
add
lret
fcmovnbe
jmp
cmpsl
out
les
jmp
in
in
mov
inc
mov
shr
or
ljmp
fadd
loopne
lock
sti
iret
mov
fsub
aad
call
add
mov
fcmovnb
loop
icebp
mov
fucomi
enter
roll
ret
fdiv
or
aad
stc
out
repnz
test
shl
int
sti
fdivrs
fidivrl
mov
neg
in
ljmp
loope
mov
jmp
int
aad
repz
in
shl
neg
test
call
mov
int
int
imul
jmp
std
out
sti
out
idivb
lret
cli
or
into
fsubrl
shlb
add
jmp
fcompp
add
ljmp
jmp
test
call
mov
sti
push
cli
loope
add
repz
test
lods
ljmp
mov
mov
lock
out
pop
hlt
ljmp
jmp
mov
mov
repz
ret
mov
idiv
iret
fucomp
int
int
mov
mov
lods
stc
fistpll
aam
sar
add
out
fidivs
int3
lret
fdivs
mov
mov
roll
fucom
add
jmp
mov
mov
lock
aam
ljmp
push
int
sti
or
aam
lret
rol
aad
mov
shr
mov
in
into
hlt
in
mov
movl
std
out
jmp
int
cmc
fcomi
in
mov
xlat
hlt
in
hlt
repnz
sti
add
aam
jmp
loop
out
mov
mov
mov
rol
xlat
out
aad
or
add
leave
out
repnz
iret
shl
mov
cli
ljmp
int
in
xlat
jmp
add
lret
or
ljmp
les
rol
cli
lock
loopne
or
add
fdivr
loope
cli
repz
stc
mov
fucomi
icebp
fmulp
repz
lret
loop
fsqrt
pop
loope
enter
mov
ror
repz
out
loopne
std
fucomp
out
neg
cld
mov
mov
mov
jecxz
mov
lret
sti
in
jmp
int3
in
add
std
out
int
loope
int3
hlt
mov
mov
ror
into
lret
std
mov
cld
fcmovnb
icebp
fst
leave
add
fmulp
shl
jmp
std
les
jecxz
imul
fsubr
ffree
loope
lret
mov
ret
mov
int3
mov
stc
cmc
rcl
mov
shl
push
hlt
fsubp
rorb
enter
or
add
rol
shll
clc
repnz
fcomp
mov
add
fdiv
xabort
hlt
fdivr
or
rcr
in
ljmp
aam
lret
into
test
ret
loope
fisttps
mov
call
out
divl
ret
call
ret
add
icebp
ret
invd
or
into
mov
not
icebp
lret
ljmp
sarl
add
shr
sti
faddl
add
jmp
loop
into
mov
int3
mov
jmp
aad
jmp
pminub
icebp
shlb
test
mov
mov
out
mov
in
iret
loope
out
imull
sti
into
fmul
rcr
std
ret
std
pop
add
add
hlt
lret
fstl
int
ret
div
les
mov
idivb
lock
int
lock
ljmp
shll
ljmp
enter
add
mov
in
jmp
leave
out
mov
mul
rcr
mov
leave
iret
fdivrp
fidivrs
fsubrp
or
in
fsub
jmp
in
fcmovnbe
in
mov
mov
push
fdivrp
in
fcmovbe
push
sti
or
inc
ror
not
mov
lret
lods
int3
mov
ret
ret
cmc
fucomp
cli
cli
fcmove
or
repnz
lret
jmp
mov
not
not
lock
rcr
push
fucomip
add
mov
mul
stc
fdivr
mov
icebp
add
ret
mul
add
or
ret
repnz
xlat
enter
fistpll
fcomi
loopne
leave
mul
or
sti
std
fxch
mov
icebp
repnz
cmc
lret
fnop
sti
mov
fstp
add
out
or
or
add
int3
ret
imul
mov
jmp
fistpll
mov
dec
int3
in
out
rcl
loope
jmp
rol
mov
mov
sti
lret
or
mov
iret
shl
iret
out
fcomi
icebp
add
in
in
stc
cli
stc
jmp
sti
jmp
ret
aam
mov
enter
mov
add
iret
cmc
cld
into
add
or
lret
fiadds
lret
jmp
shlb
mov
shll
pop
jmp
std
add
hlt
fiaddl
shr
jmp
enter
xlat
in
leave
sti
ret
hlt
cli
not
add
mov
mov
rcl
lret
lret
ret
xlat
mov
mov
jmp
shl
aam
movb
lret
std
or
enter
test
ror
mov
hlt
out
sar
add
mov
cmc
out
iret
fmul
lret
shl
ret
hlt
ret
lret
test
fdivrs
add
cld
movb
add
jmp
lock
idivb
fsubrp
mul
int3
call
bnd
add
in
shl
in
loopne
mul
fcmovne
scas
rcr
mov
aad
aam
repz
add
out
mov
loopne
test
leave
cli
ljmp
loop
std
sti
roll
jecxz
roll
out
lret
test
in
loope
fcmovnb
mov
hlt
imul
int3
cld
icebp
std
std
hlt
or
mov
push
jmp
loope
mov
lock
jecxz
rol
repz
out
std
push
fdivr
imul
add
in
mov
leave
icebp
mov
mov
lock
fidivs
ret
fcmovnbe
fcomip
add
loop
int
sarl
mov
mov
out
push
mov
ljmp
ret
ret
scas
ret
mov
mov
out
lods
idivb
in
testl
aad
or
mov
into
aad
enter
in
out
mov
cld
add
add
in
repnz
add
add
in
or
mov
int3
imul
lods
icebp
shl
mov
cmc
fcom
mov
xlat
out
cli
add
leave
ror
call
shr
mov
cld
clc
sar
cld
neg
int3
enter
lock
int3
lock
clc
mov
icebp
mov
ret
movl
or
hlt
or
rcl
jmp
shl
mov
mov
add
rol
sar
pop
out
cld
shl
iret
sti
dec
xlat
lret
lods
lods
mov
lret
iret
mov
mov
lock
frndint
int3
cmpsb
shl
scas
mov
lock
clc
rcr
not
aam
hlt
repnz
out
or
neg
call
mov
aad
ljmp
fcmovnbe
cld
mov
in
cli
sar
loop
fucomip
ret
scas
into
in
int3
mov
cli
sti
sti
in
vpsubusw
sar
in
or
xlat
fcmovu
jmp
or
call
sti
call
fyl2x
sti
mov
mov
mov
repz
fbstp
repz
loopne
in
mov
cmc
add
aad
std
jecxz
lds
adc
leave
mov
jmp
leave
xlat
in
into
jecxz
rcl
iret
shl
fistpll
loop
lret
fsubr
icebp
call
scas
cmc
cmc
stc
roll
aam
vshufps
ror
loop
mov
icebp
cli
mov
clc
mov
mov
shl
add
fisttpll
int
loopne
jecxz
repnz
test
loope
add
clc
pop
neg
fstpt
fadd
lods
call
xlat
out
mov
into
out
xlat
mov
in
ret
call
lock
enter
push
hlt
fucomi
cmc
test
ffreep
jecxz
push
fdivrp
in
rcl
icebp
repz
repz
aad
mov
fldl
clc
push
cld
or
sar
xlat
lret
not
cmc
fcmovnbe
loopne
fcomp
lock
lret
loopne
hlt
clc
std
adc
rep
in
in
out
in
not
mov
lock
cmc
stc
test
lret
repnz
test
out
lock
rcr
out
fdivr
loop
fiaddl
cli
stc
jmp
fnsave
mov
clc
call
aam
repnz
or
clc
decl
rcl
call
ror
sti
ljmp
shr
xlat
xlat
loopne
stc
pop
stc
aad
in
lret
ret
ret
movsl
iret
repz
lock
jmp
std
int3
clc
clc
shlb
lock
cmc
cli
leave
fdiv
loopne
rol
mov
out
shr
mov
sar
fidivrl
pop
lret
bswap
fsubr
out
out
les
cli
out
clc
shl
mov
mov
cmc
shr
jecxz
add
repz
into
call
lods
mov
mov
mov
jecxz
stc
std
fdivrp
add
mov
fcmovne
int
icebp
test
rolb
mov
pmaxub
or
add
mov
shr
cli
fcmovb
cmc
clc
repnz
mov
jmp
add
jmp
lret
mov
ror
out
mov
cli
mov
mov
mov
xlat
fld
push
std
enter
mov
mov
fcmovb
icebp
jecxz
mov
loope
icebp
in
or
fucom
out
fmull
test
int
out
lret
div
int3
repz
lock
out
in
mov
fcmovnb
pop
add
loopne
clc
out
enter
mul
ret
lret
mov
mov
add
sti
out
stc
std
loop
dec
jecxz
out
rcr
lock
into
jmp
out
mov
into
icebp
icebp
mov
shl
mov
lock
in
into
shr
scas
aad
out
mov
lret
sar
mov
fdivr
or
loope
in
call
int3
ljmp
fmulp
jmp
jmp
std
xlat
stc
in
add
in
lock
scas
shr
icebp
mov
int
in
mov
ret
hlt
xlat
stc
ret
test
ret
jmp
stc
in
repnz
cmc
add
loopne
out
fmul
or
pop
lret
icebp
lods
out
shl
repnz
shll
fldl
repnz
stc
add
loop
lret
cli
leave
out
lret
call
rcl
int
repnz
clc
mov
ret
in
jmp
ljmp
jecxz
mov
mov
lock
lret
mov
in
mov
out
int
adc
shl
shlb
repz
enter
int
fcomip
mov
xlat
push
fadds
adc
test
int
vpminsw
out
xlat
cli
fidivrl
add
mov
fmull
std
fdivrs
shr
in
imul
stc
repnz
leave
cld
fstp
repnz
mov
fsub
fisttps
add
loope
ljmp
xlat
mov
lock
fdivr
in
cld
out
mov
or
add
loopne
cld
out
cmpsb
leave
out
mov
enter
mov
mov
mov
lock
mov
cld
out
add
mov
lods
rol
sti
shr
call
rcl
repnz
shr
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
leave
ret
push
mov
sub
sub
movl
lea
xor
mov
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
lea
mov
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
neg
mov
negl
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
xor
dec
mov
jmp
xor
add
mov
mov
sbb
mov
add
mov
mov
mov
xorl
mov
addl
xor
xorl
add
movl
cmp
je
movl
jmp
jmp
movl
mov
movl
cmp
movl
je
or
lea
mov
orl
mov
mov
and
xor
add
mov
mov
mov
sbb
xor
or
add
mov
xorl
xor
notl
add
mov
imul
movl
cmp
movl
je
sub
mov
inc
mov
mov
mov
subl
add
andl
xor
xor
inc
mov
cmpl
jl
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
mov
adcl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
sbb
mov
movl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
xor
add
mov
xor
mov
xor
lea
mov
xor
add
imul
sub
mov
cmp
jg
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
add
not
and
mov
lea
mov
mov
movl
movl
lea
mov
mov
movl
movl
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
je
mov
xor
add
mov
sub
mov
jmp
jmp
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
mov
add
mov
mov
mov
mov
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
jne
mov
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
call
leave
ret
push
mov
push
orl
push
sub
lea
adc
mov
mov
xor
mov
and
mov
mov
sub
mov
orl
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
mov
notl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
leave
ret
push
mov
sub
add
push
addl
mov
xor
add
xorl
mov
movzbl
adc
mov
mov
mov
xorl
mov
movzbl
and
mov
mov
mov
mov
inc
mov
andl
xor
sub
movl
sbb
xor
subl
xor
mov
movl
mov
movl
cmpl
jne
movl
cmpl
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
pushl
call
jmp
mov
subl
xor
xorl
sub
movl
sbb
xor
xor
mov
movl
mov
cmpl
movl
jne
movl
cmpl
je
dec
mov
xor
or
sbb
mov
xor
xor
or
mov
and
add
xor
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movzbl
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
jmp
mov
mov
add
mov
subl
sub
mov
xor
movl
xor
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
xor
mov
xorl
xor
xorl
add
addl
mov
subl
lea
notl
mov
negl
mov
xorl
xor
subl
add
mov
adcl
lea
subl
push
mov
adc
mov
orl
xor
orl
add
xorl
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
adcl
pushl
sbbl
call
mov
orl
mov
mov
addl
mov
sub
mov
sub
xor
cmp
jne
decl
xor
jmp
xor
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
movl
movl
movl
or
mov
mov
mov
sbb
xor
addl
add
mov
sub
mov
sub
movl
mov
movl
movl
cmpl
movl
je
mov
neg
xor
mov
xor
adcl
lea
mov
xor
div
mov
add
xor
andl
add
mov
xor
add
andl
sub
cmp
jne
sbb
mov
xorl
add
sbbl
mov
mov
sub
mov
orl
xor
add
movl
mov
movl
jmp
sbbl
mov
andl
inc
mov
sub
mov
addl
xor
xorl
add
movl
cmp
jae
inc
mov
sub
addl
xor
or
add
mov
mov
mov
mov
mov
cmpl
movl
jbe
movl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
add
mov
mov
mov
jmp
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
movl
jmp
xor
movl
jne
and
movzbl
xor
sbbl
add
movl
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
add
mov
add
movzbl
sub
mov
adcl
mov
xorl
xor
adcl
add
mov
andl
ror
subl
mov
subl
xor
mov
add
orl
mov
mov
mov
subl
sub
subl
xor
movl
cmp
movl
jne
mov
xor
add
mov
adc
mov
andl
xor
add
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
push
push
push
call
cmpl
jb
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
sbb
mov
sub
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
call
xor
add
dec
mov
jmp
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
sub
movl
mov
jmp
mov
movl
mov
orl
movl
movl
movl
mov
and
movl
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
xor
sbb
mov
add
mov
andl
sub
mov
movl
movl
movl
cmpl
movl
je
mov
xor
xor
mov
subl
xor
lea
mov
adcl
xor
subl
div
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
mov
xor
add
jmp
test
jb
adc
orb
xchg
jp
add
add
mov
call
out
push
mov
sti
ret
fadds
jecxz
pop
out
fmul
call
enter
fsubr
iret
lock
lock
push
loop
rorl
add
aad
fmul
jmp
loope
mov
ret
rcl
enter
hlt
test
mov
push
or
fcomp
adc
mov
hlt
sti
lds
enter
add
mov
incb
add
or
loopne
int3
scas
repz
leave
cli
clc
jmp
into
add
sti
iret
int3
rol
out
loopne
or
shll
idiv
mov
repz
add
push
push
fadds
lret
loope
out
xlat
loop
mov
lret
f2xm1
cld
fnstenv
fnstcw
or
in
repz
in
in
fcmovne
ror
add
repnz
clc
rolb
lret
iret
or
mov
in
mov
lods
enter
mov
dec
cld
cmc
in
push
out
out
xlat
rol
shll
mov
faddl
incb
int3
cld
jecxz
xlat
fucomi
in
or
fadd
fsubs
int
not
mov
imul
clc
sar
stc
repnz
stc
mul
or
fmul
ljmp
icebp
scas
out
fdiv
add
cmc
int
ret
shr
loope
add
into
in
pop
stc
int
shr
shl
shl
cmc
icebp
in
out
not
out
fdivr
add
fisttpll
aad
out
in
loopne
mov
mov
aam
mov
push
mov
out
fildl
icebp
out
rol
iret
loopne
rcl
in
imul
mov
fmulp
mov
add
mov
cmc
or
int
lock
shr
xlat
mov
fadd
int
int3
mov
hlt
out
cld
fucomp
loope
lret
in
jmp
ljmp
div
mov
aam
fdivr
add
add
loope
or
or
lock
in
iret
test
ljmp
hlt
cmc
out
hlt
ret
flds
loop
or
stos
ljmp
fxch
clc
jmp
stc
fmul
cld
fcmovnu
faddl
fdivrp
ffree
in
lret
ret
mov
aam
fcmove
mov
rcl
mov
ret
jmp
jmp
mov
iret
ret
rol
inc
sti
cli
fadd
aam
in
out
or
lods
iret
repnz
in
out
out
int
shl
std
clc
ret
aam
aad
cld
std
sti
in
fidivrs
aam
in
shr
call
mov
mov
add
out
jmp
fcomip
shl
loopne
aad
out
iret
aam
rcl
mov
call
fnstenv
mov
mov
call
clc
add
add
add
in
call
stc
out
cli
mov
call
mov
loop
fdivr
out
add
into
leave
loope
loop
jmp
aad
out
sar
ljmp
loopne
add
fadds
add
add
clc
lret
call
shl
iret
out
out
xlat
cmc
cld
mov
fdiv
lock
out
in
or
out
mov
cmc
int3
fdivs
fchs
ret
frstpm(287
add
loop
std
or
les
icebp
les
sar
in
cmc
rcr
loopne
hlt
fsubp
int3
add
iret
out
out
shr
enter
icebp
mov
aam
mov
jecxz
rol
add
xlat
cld
fimull
or
enter
call
lods
aam
hlt
iret
fucomip
mov
mov
lds
push
test
into
adc
out
out
lock
iret
stc
enter
mov
out
lock
pop
mov
add
jmp
mov
ret
out
shl
sarb
loope
shl
lock
fsubp
aam
into
enter
in
lret
mov
aam
mov
mov
sti
fidivrs
cmc
lret
add
or
lret
jmp
imull
in
stc
jecxz
add
add
add
add
clc
clc
rcr
call
jecxz
mov
enter
test
mov
mul
push
in
cld
lret
mov
in
rcr
jmp
test
sti
fstpt
sti
fmul
loop
loope
shlb
ret
mov
repz
add
inc
leave
push
jecxz
repz
mov
enter
lock
testb
sar
fcmovu
cli
in
incb
or
ljmp
mov
mov
xlat
idivb
in
cmc
add
loopne
loope
or
adc
out
loope
fisubrs
lret
mov
fnsave
mov
mov
in
in
mov
mov
ret
fcomp
mov
mov
shl
enter
cld
les
repnz
rcr
mov
into
mov
add
ror
fmul
rol
loop
jecxz
lods
cmc
fxch
fdivrp
into
lret
rcr
add
fcomip
int3
mov
testl
mov
jmp
iret
out
lock
fucompp
mov
mov
xlat
jmp
les
or
out
scas
test
rol
lret
mov
fdivr
stc
incl
push
sti
cli
fdivs
int
mov
ror
ror
aad
cld
std
add
shl
loopne
in
add
fimuls
loope
rcr
ljmp
mov
clc
jmp
clc
lock
or
ljmp
in
mov
in
in
in
sar
into
add
add
fucomip
cmc
fdivr
jmp
shl
not
mov
fxam
jmp
iret
hlt
repz
loop
mov
jmp
add
add
add
ret
jecxz
ror
stc
scas
clc
lret
in
test
mov
or
loopne
or
rol
fcmove
stc
mov
repz
rol
ret
pop
fsubp
lock
fyl2xp1
push
repnz
in
mov
mov
jmp
rol
in
in
div
mov
rolb
movl
jmp
leave
jmp
int3
sti
out
mov
mov
enter
add
fcompp
or
or
rcr
fmul
shll
enter
mov
push
add
fcmovnu
jecxz
cli
in
fmulp
mov
fcomi
mov
stc
add
fmul
in
fdivp
add
push
ljmp
lret
jecxz
mov
hlt
mov
push
ret
test
into
add
in
call
loop
sti
out
jmp
lock
repz
aad
repnz
rorb
clc
lret
mov
mov
lds
fsubrp
mov
mov
not
jmp
repz
lods
int3
rcl
lret
sar
repnz
fcmovne
into
ret
aam
fisttpl
loope
hlt
clc
decl
in
loopne
test
shl
out
aad
clc
in
fchs
aam
shl
repnz
in
into
add
int3
add
out
imul
les
rcl
lret
ror
into
lret
jmp
enter
hlt
out
mov
out
in
mov
rcl
sti
in
lret
hlt
fldl2e
fisubrl
in
test
in
sarb
add
aad
sti
aad
fadds
or
loop
jmp
jmp
shlb
loop
cld
cld
sar
in
cmc
add
in
out
jecxz
fadd
rcr
movsb
mov
lods
mov
hlt
enter
mov
fnstcw
loope
cmc
enter
in
or
lock
ljmp
in
cmc
aam
loopne
ret
add
aad
in
or
idivl
rcl
in
mov
fcomp
clc
out
jmp
sti
rolb
push
ljmp
xlat
loopne
scas
aad
in
mov
in
in
mov
add
cli
out
loopne
faddp
fdivrs
loopne
ret
in
mov
ret
pop
add
sti
hlt
stc
jecxz
int
out
add
ffreep
lret
int3
cmc
mov
call
ret
fstp
fcomi
add
in
lret
add
in
mov
leave
shlb
xlat
iret
mov
aad
loop
rcr
repz
add
in
fst
out
int3
in
mov
mov
push
add
fdivrs
out
out
not
jecxz
fldcw
jecxz
lods
mov
rcr
ror
clc
loope
shl
sar
or
shl
out
out
out
or
shl
shl
sar
fxtract
out
out
pushl
lock
aam
ret
or
mov
shl
jmp
mov
repnz
jmp
aad
loop
out
ljmp
mov
repnz
hlt
out
push
add
lock
lret
fcoms
stc
rcl
in
loop
lret
cmc
not
fdivp
mov
idivb
cli
loopne
fstl
clc
shr
loopne
enter
lds
xlat
mov
cld
icebp
add
add
fcmovne
loopne
fbstp
xlat
repnz
jmp
aam
aad
push
shr
fmulp
sti
fmulp
or
lock
lret
aam
leave
mov
loop
imul
ret
in
std
pop
incl
in
loope
out
in
call
out
in
enter
fadd
roll
sar
mov
std
jecxz
enter
aam
mov
in
ljmp
out
loopne
hlt
loope
jmp
hlt
clc
cld
cld
les
in
mov
clc
lock
clc
std
ret
add
rcr
loopne
clc
or
out
jecxz
cld
in
icebp
lret
loopne
lret
mov
lret
repz
cli
loope
pop
ret
add
loop
add
int3
loope
loope
divb
cld
icebp
fsub
fcmovbe
fucom
ret
fucomi
into
sti
call
iret
ljmp
int
sarl
ret
aad
sar
jecxz
ret
stos
stos
in
test
jmp
leave
xlat
into
in
in
ljmp
repz
in
out
loop
repnz
ljmp
sti
stc
std
hlt
fsub
cld
add
mul
lret
or
jmp
cli
or
lret
repz
fldt
aad
fiaddl
fcmovnbe
enter
out
fabs
ljmp
clc
mov
xlat
mov
lock
aam
add
loopne
add
ljmp
mov
imul
enter
in
les
add
stc
call
or
shl
lret
mov
mov
icebp
mov
leave
or
int
mov
mov
shl
ffree
loopne
vshufpd
pop
add
mov
jecxz
rcr
lods
mov
mov
sar
jmp
lret
fcomi
into
mov
out
lock
fcmovnu
sti
fstp
add
add
in
std
aam
add
out
jmp
out
fcmovnu
xlat
call
out
mov
push
push
add
in
fisttps
int
mov
shr
mov
sti
into
cmc
mov
cmc
icebp
ljmp
sti
cld
ljmp
mov
mov
fcmovbe
sarb
stc
or
push
fiaddl
into
xlat
loope
fcmovbe
hlt
fcmove
jecxz
int
mov
fld
icebp
xlat
rcr
or
jmp
mov
jecxz
mov
call
incl
mov
fisttpl
iret
in
fsubr
repnz
mov
repz
ret
imul
cld
jecxz
cli
add
out
or
flds
fxch
int3
enter
leave
in
lock
ret
add
aam
cmc
decl
iret
in
ret
test
rcr
lock
clc
stc
ror
fcmovnu
add
fcmovb
mul
sti
or
hlt
add
out
out
ror
ffree
idiv
lods
shl
in
call
ret
fprem1
rorb
mov
fucom
add
stos
mov
scas
out
mov
mov
mov
cld
into
ret
loop
loop
shl
icebp
jmp
out
iret
fxch
out
lret
icebp
imul
xlat
enter
rcl
in
imul
cmc
ret
sar
in
cld
or
incl
repz
loopne
mov
shl
leave
cli
out
mov
mov
out
mov
or
mov
aad
neg
mov
call
mov
xlat
repz
out
fsub
scas
icebp
int
mov
int3
stc
in
sti
in
call
lock
in
fcmovnbe
call
in
loopne
cmc
shlb
out
mov
mov
sar
clc
hlt
inc
in
stc
in
lock
in
loop
jmp
iret
fidivrl
int
add
ret
faddl
lret
add
push
iret
out
enter
rol
les
enter
add
int3
jmp
loopne
in
hlt
fsubrp
stc
mov
enter
in
out
fidivl
add
cld
faddl
leave
enter
fucomi
call
lret
aad
lret
cli
cli
idivb
hlt
cli
ret
in
in
add
ret
out
fmulp
int3
mov
int
in
enter
mov
in
loop
pop
rcl
or
out
or
fcmovb
add
fld
rcl
scas
repnz
call
rcl
add
std
xlat
fcmovbe
in
push
add
jecxz
clc
in
jecxz
out
loop
mov
xlat
mov
add
mov
pop
sar
faddl
fcmovbe
in
out
xlat
mov
iret
in
fidivrs
aam
icebp
push
add
fadd
leave
loopne
out
mov
stos
leave
into
in
mov
cli
mov
out
stc
movl
icebp
hlt
loope
or
add
shr
int
scas
shrb
icebp
lock
shl
add
add
mov
pextrw
jmp
out
mov
xlat
out
out
fcmovnu
loope
cmc
fdivr
cli
inc
dec
shr
repnz
ret
mov
out
mov
mov
jmp
add
out
pop
loope
jmp
mov
enter
hlt
in
sarl
jecxz
ljmp
shl
jecxz
shr
in
fcmovnbe
in
clc
mov
in
fdiv
enter
clc
jmp
add
in
fistpll
int3
shrb
cld
ror
mov
jmp
fmuls
lds
rcl
out
clc
mov
in
ret
cld
stc
lock
loopne
hlt
movb
lret
ffree
out
in
jmp
lds
mov
cmc
ret
faddp
out
leave
adc
lock
jecxz
aad
in
test
aad
in
sti
hlt
rcr
lds
sar
in
loop
shll
sti
mov
mov
incb
in
add
stc
leave
jmp
shl
in
ret
mov
test
not
sti
in
div
sar
stc
mov
ret
fmulp
fsub
test
lret
in
lods
loope
mov
repnz
faddp
loope
shl
add
lret
fmul
cli
ffree
enter
jecxz
loope
aam
cli
lret
icebp
sarl
add
loope
add
loopne
lret
out
ror
mov
aad
int
mov
call
add
clc
fidivrl
aad
fcmovbe
in
paddsw
test
out
mov
mov
jecxz
into
icebp
cmc
repz
fadd
cld
or
in
shrb
lret
hlt
loopne
mov
aam
std
std
int3
ret
neg
aam
lret
int3
fld
mov
scas
lods
ret
rcl
lock
rcr
mov
jmp
jmp
adc
clc
out
test
repz
lods
lock
hlt
call
hlt
ret
loop
rolb
idiv
in
leave
fiadds
stos
enter
in
int
repz
int3
rcl
out
mov
stc
shl
out
ffreep
call
test
icebp
mov
iret
mov
lock
cmc
in
cmc
in
shl
lret
rolb
into
bnd
ret
imull
mov
mov
leave
int3
out
xlat
clc
mov
jmp
out
stc
loope
shrb
leave
rcl
fsubrp
mov
shl
push
pop
add
add
int3
loope
mov
cmc
in
mov
in
mov
aam
sti
iret
hlt
pop
roll
filds
icebp
in
test
mov
mov
rcr
int
mov
xlat
out
incb
in
jmp
or
rol
rcr
iret
out
cmc
int
rcr
out
shl
loopne
mov
ret
or
add
mov
ret
fnstenv
aad
mov
mov
call
adc
into
out
aad
sti
in
repnz
int3
idivl
idivl
hlt
xlat
out
add
fcmovb
repnz
cli
in
mov
fabs
mov
out
fsub
add
int
mov
into
loope
int
call
clc
lock
int3
add
cld
add
aam
lds
mov
int
shr
sarb
loopne
mov
fcmovu
out
iret
sti
fninit
ljmp
ror
mov
lret
mov
mov
add
mov
add
add
add
repnz
mov
xlat
into
mov
cmc
out
int3
mov
sar
not
testb
sti
add
out
into
lret
out
mov
cld
out
roll
testl
xlat
jmp
in
mov
repz
lock
iret
shl
loopne
sar
mov
fsubrp
adc
fsubr
repnz
leave
out
mov
shl
ror
ret
or
div
push
fsubp
add
int
cmc
ret
mov
into
mov
fstpt
call
add
iret
ror
out
aam
mov
mov
out
xlat
add
mov
fidivrl
fiadds
shr
jecxz
repz
lret
sarb
idiv
int3
loopne
call
lds
out
rcl
mov
mov
out
icebp
in
cmc
out
int
stc
add
ffree
or
leave
ljmp
shlb
fildl
iret
add
in
shl
repz
or
fisubrs
shlb
rcr
stc
filds
sar
mov
or
add
lds
ret
ret
lds
lret
lret
int
clc
lock
aad
add
loopne
shl
push
stc
stos
out
icebp
out
lods
stos
out
ftst
fsubrp
mov
sarl
repnz
faddp
enter
mov
shlb
lret
out
lock
roll
fcom
std
fxam
add
or
rcl
rcl
mul
lock
aam
mov
enter
repz
in
mov
leave
call
hlt
mov
xlat
ret
fcmovbe
lds
or
fmulp
into
ljmp
scas
fcomip
leave
mov
iret
aad
aad
add
sti
mov
add
in
fldcw
mov
mov
into
repnz
cmc
add
loopne
or
lret
shl
int3
out
mul
enter
mov
ret
rol
rol
fcmovnu
ljmp
int3
int3
mov
divb
jecxz
mov
icebp
out
std
inc
les
clc
stc
mov
iret
mov
mov
xlat
jmp
lock
fnstcw
mov
jmp
lods
int3
lret
fucom
icebp
call
hlt
out
sar
out
sti
add
fucomp
shl
out
cmc
out
fcomi
aam
fistpll
rcl
in
fistpll
add
or
repz
call
lock
into
fsubp
mov
call
out
or
mov
test
repnz
loop
int3
fcmovu
cld
fdivl
shl
stc
jmp
or
mov
xlat
iret
not
leave
bnd
mov
add
add
ret
out
flds
or
in
hlt
mov
mov
shl
mov
cld
sti
int3
fst
loop
hlt
xlat
aam
leave
push
int
fmul
in
test
hlt
mov
std
out
shl
aad
sar
loopne
cli
add
fdivp
jecxz
in
repnz
shl
push
call
out
jmp
fnstsw
loopne
clc
cli
fldl
jmp
into
xlat
fxam
repz
jmp
ret
mov
out
sti
or
loope
iret
ret
out
fdivp
imul
mov
aad
loopne
jecxz
or
out
add
enter
bnd
fucomi
neg
mov
stc
mov
sar
ffree
mul
or
pop
out
or
sti
out
in
mov
into
jmp
icebp
shr
mov
mov
cli
fdivrp
fcoms
sarb
sar
mov
in
add
fmulp
add
add
or
cli
cld
mov
test
aad
out
mov
call
ret
fdiv
fimuls
out
add
pop
or
int3
mov
shr
not
sti
in
clc
rol
not
in
pop
std
mov
or
fisttpl
cli
lret
repz
fisubrl
fcomip
fstpt
aam
aad
cli
lret
out
filds
add
out
shrb
fxch
mov
int
in
loop
in
mov
call
repnz
out
mov
bnd
aam
out
aad
imul
into
mov
add
fnstcw
sti
add
in
add
lret
mov
jmp
aad
clc
fidivrl
add
enter
enter
mov
mov
lret
mov
div
int3
sti
sti
mov
std
jmp
jmp
filds
faddl
pop
rol
mov
fcmovb
sarl
repz
int
loop
fld
repnz
loope
push
fsubr
jmp
loope
out
leave
lock
mov
shr
mov
mov
rcl
leave
rcr
into
loop
in
mov
out
repnz
call
cli
mov
repz
idiv
jmp
add
in
cmc
mov
fcmovnbe
aad
mov
mov
mov
jecxz
jmp
add
loopne
lods
call
out
in
clc
hlt
int3
sarb
cli
out
not
ljmp
repnz
stos
lret
fcmove
out
in
clc
mov
div
icebp
mov
add
mov
into
loop
stc
enter
mov
mov
fcmovbe
fdivr
in
int3
add
shl
int
lock
mov
mov
mov
cli
mov
mov
add
jmp
ljmp
out
in
in
fistpll
repz
cli
or
or
lret
aad
repnz
lret
mov
mov
rcl
fcomp
out
rcr
sti
aam
add
testl
adc
lods
in
mov
out
mov
cli
mov
mov
fldl
ljmp
stc
int3
movsl
mul
out
test
mov
fcom
idivb
repz
rolb
std
fstp
loopne
in
lods
test
iret
hlt
repnz
clc
mov
int
jecxz
add
xlat
push
les
or
enter
fcmovnb
hlt
xlat
mov
shr
out
not
cmc
testl
vcvtdq2pd
leave
in
not
shl
mov
lock
sar
in
aam
mov
out
fmul
fadd
loope
in
call
mov
mov
ror
test
mov
or
loop
loope
ret
out
xlat
clc
leave
iret
ror
mov
fnstsw
out
add
lret
fdiv
lds
enter
jmp
out
icebp
in
sti
in
push
clc
xlat
fmull
clc
or
in
repz
iret
repnz
mov
cmc
lret
lret
out
std
mov
ret
shl
loope
mov
cld
or
shll
repz
call
icebp
ror
mov
jmp
or
in
fsubr
push
out
mov
mov
mov
fidivrl
std
mov
or
mul
in
int3
fldl
mov
ret
in
enter
cli
iret
mov
loopne
lock
add
out
leave
repnz
loope
into
icebp
stos
lods
ljmp
leave
mov
repnz
rolb
add
hlt
push
lret
out
lret
iret
in
mov
shl
mov
lock
loop
repz
fldl
loopne
add
cld
or
fnsave
in
leave
lock
fcmovbe
int
mov
jmp
shr
ljmp
out
out
faddp
jecxz
shr
lret
int
int
fcmovbe
repz
fidivrs
add
shr
mov
fidivl
mov
shl
aad
jmp
icebp
sar
aam
fsubrp
stos
lock
repz
mov
cli
out
xlat
mov
mov
fadd
out
jmp
in
cmpsb
mov
aam
out
fdivrp
aam
xlat
jecxz
aam
mul
in
loopne
jecxz
add
ljmp
in
mov
out
out
int3
into
mov
fnstsw
lock
out
fimuls
jmp
leave
in
mov
icebp
out
call
loope
pop
sti
repnz
shl
fcmovbe
in
in
out
push
lods
loop
shll
int3
div
in
mov
add
lds
or
fcmovu
faddl
idivl
mov
call
mov
fstp
ret
hlt
add
aam
jmp
shl
out
mov
mov
int3
out
std
fidivrl
mul
pop
idiv
mov
mov
loope
in
int3
out
mov
lock
push
incl
roll
test
in
in
out
in
call
cmc
mov
mov
aam
mov
or
lret
vpminub
hlt
push
loop
leave
jmp
mov
int3
cli
shr
out
mov
fsub
int3
rcl
rorl
cli
decb
adc
in
mov
ljmp
iret
mov
mov
aad
call
lods
scas
movsl
shr
in
mov
mov
in
call
rol
out
out
pop
sti
add
fsubrl
stc
fstpt
aad
div
fcomip
cld
shl
in
in
fstp
repnz
out
fadd
in
mov
call
out
in
idiv
rcl
jmp
add
enter
repz
int3
enter
sarb
out
in
loopne
sti
repnz
in
or
or
into
cmc
in
loopne
out
mul
aam
repz
ffreep
shl
hlt
ret
mov
cmc
rol
lock
aam
jecxz
sar
pop
inc
add
cli
or
push
or
movsb
loope
ret
in
ror
in
add
mov
cld
push
out
in
push
mov
int
lret
mov
fxch
mov
rolb
rol
add
or
in
or
out
mov
scas
aad
mov
xlat
sar
add
ret
shl
add
add
call
shll
fucomi
stc
iret
testl
mov
loopne
hlt
or
jmp
mov
loopne
out
in
stc
enter
cmc
test
std
add
sti
add
leave
in
mov
lods
ljmp
in
in
shr
test
push
add
out
jmp
leave
out
int
jmp
jecxz
sti
hlt
fnstenv
int
iret
shl
add
cld
fisttpll
fcmovu
jmp
repz
repz
mov
lret
mov
std
loopne
vshufps
loopne
push
iret
ffree
loopne
not
shl
repz
aad
aam
test
add
loopne
out
loopne
cli
into
cld
in
shl
icebp
jmp
mov
mov
rcr
lock
clc
fimuls
or
std
loop
shlb
clc
mov
out
xlat
rcl
pop
rol
mov
ljmp
enter
mov
cmc
in
mov
mov
sti
test
shl
sti
jmp
add
not
mov
jmp
leave
lret
into
add
enter
pop
fdivp
loope
aad
fxch
or
stos
ror
mov
icebp
lret
mov
mov
sar
icebp
clc
int
lret
mov
ret
push
adc
rcl
out
out
hlt
ror
mov
fldln2
shl
ljmp
rol
or
add
clc
out
into
in
iret
int
scas
xlat
call
in
ljmp
mov
std
rorl
out
fadd
stos
into
shrb
fcmovnb
sarl
ffreep
hlt
loop
fadd
fmul
mov
shr
stc
idiv
hlt
cld
cmc
call
mov
add
add
repz
in
enter
dec
call
push
rcr
rcl
aad
jecxz
ljmp
shr
mov
sar
ljmp
ret
filds
neg
loop
fiaddl
fldpi
mov
in
fst
aad
aam
lock
repnz
aad
shl
cld
lret
ror
int
test
lret
mov
into
mov
cmc
clc
lock
repz
ror
out
in
rcr
in
out
imul
stc
mov
mov
or
loop
in
int3
test
jecxz
repnz
in
out
jmp
frstpm(287
add
cli
loopne
std
call
fsubr
jmp
hlt
loopne
mov
ljmp
rcr
in
in
aad
push
in
or
fsubr
mul
sti
lods
mov
jmp
iret
fdivrs
in
or
leave
fsubr
shrb
shll
fcomp
repnz
in
ret
std
push
mov
jecxz
in
call
stc
int
ftst
not
aad
cmc
sti
mov
std
add
or
out
fsubr
stos
ror
mov
in
mov
call
out
mov
add
or
or
fnstsw
jmp
rcl
jecxz
int3
jmp
fdivr
loop
leave
jmp
stos
shr
lret
sti
into
jmp
mov
clc
ret
fcmovu
hlt
not
clc
ljmp
leave
in
jmp
fadd
lret
aad
rcl
fldl
out
out
or
testb
enter
test
out
in
lret
hlt
f2xm1
rcr
movl
or
in
les
fmul
out
in
icebp
lods
loop
in
aam
stc
cli
mov
icebp
jecxz
ror
lds
fmul
jmp
ret
shl
rcr
mov
repnz
mov
leave
ljmp
fdiv
sarb
in
mul
sarl
cld
fimuls
call
cli
in
repnz
mov
enter
out
fucomip
jmp
cld
repz
add
cmc
testb
mov
in
mov
scas
mov
stc
mov
out
clc
jecxz
lock
add
hlt
out
add
mov
icebp
call
lret
int
mov
rcl
fsincos
aad
or
add
lret
out
movsl
mov
mov
in
lret
cli
fucomp
fnstsw
mov
fcmovnb
out
or
cld
lret
cli
fcomi
cmpsl
ror
mov
ljmp
std
shr
mov
mov
les
jecxz
dec
int
dec
icebp
in
ljmp
in
mov
stc
mov
repnz
rcr
std
push
or
fcomp
sti
push
enter
mov
out
cli
lock
shl
shl
add
in
pop
in
shll
in
int3
repz
mov
sar
hlt
add
add
faddl
or
loopne
call
idiv
out
call
mov
stc
push
jecxz
rcr
in
aad
sti
or
mov
ret
mov
fcomi
loope
rolb
fdiv
hlt
in
cld
jmp
jmp
lret
stc
out
out
std
mov
shl
loop
fucom
lret
cld
int
in
ror
hlt
repz
fld
fcomi
rcr
faddp
aam
lds
sar
add
cmc
std
add
mov
rorb
test
add
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jae
mov
sub
xor
add
mov
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
xor
inc
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
movl
jmp
mov
dec
mov
cmpl
jbe
mov
dec
xor
push
pop
div
mov
mov
mov
movl
movl
movl
movl
movl
mov
xor
jmp
adcb
push
xor
pusha
push
dec
repz
jne
xchg
aam
mov
jnp
cwtl
jnp
fsubr
mov
enter
fidivl
clc
into
clc
int3
rcl
add
cld
or
psubusw
lds
out
mov
mov
idivl
ret
add
add
into
out
movsl
lds
enter
out
jecxz
mov
std
fcomp
shl
adc
in
mov
out
shlb
int3
loop
loopne
mov
jecxz
fmull
into
cli
stos
iret
movsl
lods
cmc
call
mov
add
int3
in
loopne
add
push
stc
into
iret
lret
pmaxsw
rcr
jmp
mov
lret
call
loopne
mov
decb
neg
push
out
loopne
in
mov
in
hlt
fiadds
call
flds
add
cli
loopne
add
call
fisubrl
out
int
mov
or
out
ljmp
shl
jmp
into
in
mov
mov
aam
int3
aad
push
rcr
rol
out
int3
shl
loop
ret
test
int3
idiv
mov
ret
fadds
fcomi
add
aam
loope
or
loope
lock
cmc
into
ljmp
add
in
incl
xlat
std
test
icebp
ljmp
in
mov
sti
mov
ljmp
ret
bnd
shrl
out
fcomi
jmp
int
or
test
fsubp
or
fcomip
lds
int
fcom
jmp
out
aam
loop
or
fmuls
aad
leave
out
or
int
in
shl
int
test
cld
push
iret
cmc
lock
in
fldl
add
mov
hlt
icebp
icebp
in
shr
call
aad
ret
jecxz
add
scas
divb
mov
int
enter
jecxz
in
lret
aad
fadd
mov
in
sarb
idiv
add
lock
in
loop
flds
ljmp
out
in
lret
ljmp
sti
fdivp
cmc
out
add
stc
fdiv
add
hlt
out
loopne
clc
add
shrb
shr
lods
incl
lock
sti
flds
stc
add
sti
shr
test
cli
mov
shrb
into
stc
rcl
pop
ret
fimuls
cmc
flds
loop
mov
mov
lret
icebp
int3
shl
fcomp
jmp
in
in
leave
lods
mov
loope
aam
aam
mov
icebp
fptan
lock
mov
add
mov
mov
mov
rcl
iret
test
in
mov
or
les
jecxz
icebp
enter
lock
fstpt
div
faddl
in
int3
enter
repnz
les
cmc
mov
ret
shl
shl
out
loop
fcmovb
mov
shl
loopne
repnz
lret
mov
hlt
hlt
out
pmaxsw
out
imul
in
in
sti
fdiv
fucomi
mov
ret
sarb
out
fmul
in
mov
lret
mov
mov
sarl
xlat
rcl
loop
in
std
call
adc
call
out
mov
sti
mov
leave
fnstcw
pop
out
mov
fucom
jmp
call
fcmovb
into
lock
leave
sti
ror
add
fdivp
add
cld
or
add
ljmp
out
iret
fptan
lock
loopne
in
out
loopne
stc
neg
iret
loopne
loop
int3
lods
into
out
mov
mov
lock
mov
add
psubusw
or
mov
out
neg
int
repnz
fucom
out
div
repnz
ffree
not
fldpi
add
repnz
shr
mov
aad
cld
mov
or
out
in
jmp
lret
in
int
imul
fcomi
iret
fidivs
repz
loop
loop
bswap
in
int3
loope
stos
mov
in
jmp
mov
ret
dec
loopne
std
idiv
sti
pop
jmp
jmp
in
fdivrs
out
in
iret
in
mov
ret
out
fucom
inc
xlat
add
add
les
add
fsubrl
mov
lret
mov
in
enter
cmc
std
movl
fiaddl
stc
std
in
mov
out
mov
mov
out
mov
out
into
shr
mov
enter
push
rcr
faddp
lock
mov
sti
aad
call
in
ret
sarl
les
jmp
mov
sti
out
in
stc
in
shr
jmp
inc
sti
mov
cli
or
loopne
mov
mov
mov
fcmovne
int3
fiadds
ljmp
cld
adc
into
int
ljmp
loop
loope
fildl
testl
in
ror
enter
enter
fdivrs
sar
loopne
repnz
loopne
in
adc
jecxz
leave
in
in
icebp
mov
stc
mov
mov
rcl
int3
in
jecxz
or
add
stos
jmp
lret
repnz
out
not
loope
out
hlt
cli
iret
in
push
leave
repz
repz
loope
mov
iret
call
lret
shr
mov
cld
jecxz
enter
or
out
aad
out
fnstcw
into
mov
sar
add
out
loopne
add
mov
shl
mov
cli
mov
loope
repz
hlt
movb
hlt
stc
ret
mov
in
in
stc
mov
jmp
cli
stc
call
ljmp
pop
jecxz
fsubr
loopne
call
mov
ror
mov
roll
or
in
les
loopne
add
int3
cmpsb
mov
jmp
out
mov
enter
add
in
or
fcmovnu
fstp
out
fcmove
jmp
out
rcl
enter
mov
out
add
jecxz
decl
fiaddl
stc
out
mov
lock
call
in
fcmovnu
iret
mov
or
loope
pminub
in
int3
icebp
loope
call
call
add
cli
cmc
hlt
repz
out
std
add
out
icebp
ret
les
fyl2xp1
rcl
sar
add
roll
lock
in
loopne
les
ret
in
repz
in
repz
fdiv
std
mov
lock
push
jmp
add
int
mov
out
ret
into
mov
int3
leave
fdecstp
xlat
mov
cmc
int
aam
or
leave
std
jmp
ljmp
icebp
icebp
mov
aam
jmp
ret
shl
fadd
pop
jmp
stc
mov
in
fucomi
loop
loopne
lret
lret
sti
fsubr
mov
fdivr
fcomi
out
fucomip
jmp
ret
rol
enter
mov
mov
idivb
or
lret
sti
enter
loopne
jmp
mov
mov
add
ror
aad
add
sti
std
or
mov
into
fcom
fidivrl
leave
fstp
ffreep
rol
movb
fsubp
out
mov
lret
repz
ror
iret
cmc
in
add
ret
ret
add
add
iret
fiaddl
int
icebp
out
shr
mov
std
call
clc
cmc
sti
aam
or
in
cld
fmul
in
iret
in
iret
out
loopne
mov
bnd
mov
rcl
or
not
movl
rcl
shrl
mov
fsub
fildl
jecxz
push
clc
jmp
add
pavgw
fcomi
xlat
ljmp
add
rcl
lock
add
sti
lret
loopne
in
call
iret
lret
jecxz
mov
fadds
add
fadd
or
cli
out
out
mov
in
std
out
aad
jmp
in
lock
idiv
loopne
decl
int3
jmp
lret
mov
mov
in
int
sti
pop
not
stc
add
enter
scas
repz
in
ret
test
fidivrl
add
xlat
repnz
lret
rol
test
jecxz
call
mov
iret
std
sti
add
jmp
or
mov
mov
in
fistpll
out
mov
xlat
fcomp
jecxz
out
iret
jmp
stc
hlt
cmc
repnz
dec
rcl
add
faddl
ret
or
fisttpl
fucomp
lret
int3
aam
enter
call
pop
cmc
fiaddl
loopne
ret
rorl
add
pextrw
cmpsb
aad
rcl
lods
sarl
ljmp
fadds
add
enter
add
shll
rcl
icebp
call
in
jmp
repnz
cli
or
ret
or
clc
in
sarb
int
call
loop
lock
clc
f2xm1
add
out
loopne
fadds
repnz
shr
ret
mov
enter
call
loope
out
fdivp
sar
loope
clc
add
ret
divb
repnz
out
mov
add
jmp
mov
mov
icebp
out
mov
out
cmc
cmc
add
hlt
pop
iret
hlt
into
loopne
out
out
scas
int
mov
mov
mov
cli
sar
cmc
aad
cmc
shl
sti
idivb
repz
jecxz
lods
stc
out
shr
sti
jmp
mov
add
std
shl
jmp
out
or
in
mov
sarl
into
jecxz
add
loopne
add
or
icebp
add
push
loope
in
loope
mov
ret
call
clc
mov
jecxz
cld
roll
fsubr
or
in
cli
repnz
leave
ror
out
lret
shr
mov
int
fdivp
lret
aam
femms
or
repz
shlb
hlt
lret
cmc
mov
loope
shl
clc
fisttps
stc
jmp
mov
hlt
mul
loope
in
std
lret
in
in
div
fnstsw
in
int
iret
test
faddp
div
mov
hlt
fnstcw
mov
int3
fcmovne
loop
push
push
add
int
lock
shl
mov
loop
mov
aam
lret
lock
rorb
lock
into
fcmovu
or
out
sti
jmp
fdivp
mov
fcom
cld
mul
add
add
push
shrb
out
shlb
int3
cmc
add
icebp
rorb
std
icebp
jmp
or
cli
cld
loop
scas
test
out
loopne
sti
mov
mov
ret
fmul
xlat
fcmovne
out
ljmp
mov
icebp
stc
int3
lret
lret
mov
hlt
movl
or
shl
jmp
jecxz
mov
mov
ror
loopne
repnz
fcmovnb
clc
div
jmp
loope
ret
mov
repz
les
sarl
decb
inc
clc
dec
repz
into
ror
fchs
in
in
mov
loop
cli
neg
incl
ret
add
lret
add
in
ret
out
mov
in
aad
mov
push
aad
add
or
repz
out
lret
cmc
out
out
mov
mov
flds
loope
add
out
les
jmp
lock
mov
out
in
jecxz
mov
loope
in
ret
push
out
pop
int3
jmp
int3
out
out
into
fcmovne
out
vpsubusw
ljmp
loop
xlat
add
add
jecxz
icebp
mov
in
stc
iret
out
repz
aad
loopne
dec
add
loopne
movb
hlt
dec
bnd
call
fcmovnu
ljmp
mov
int3
add
mov
in
fldl
loope
rol
in
rcr
mov
add
mov
clc
fcmovb
out
loope
out
lret
fidivrs
mov
add
fcomp
jmp
fidivs
in
shlb
mov
fstp
loopne
fucomip
add
loop
or
mov
lock
jecxz
shl
mov
mov
jecxz
pop
fadds
fiadds
lret
add
int
in
lret
out
cmc
in
cmc
rolb
sti
clc
add
aam
fimuls
mov
out
out
out
in
mov
jecxz
in
mov
out
mov
div
mov
push
sti
pop
or
lret
loopne
lods
loop
enter
stc
in
lret
ret
stc
fadds
not
jmp
fsubrp
pmullw
lret
jmp
ljmp
clc
sti
mov
dec
jecxz
add
mov
rorb
aam
cld
leave
iret
int3
adc
mov
out
aad
int3
lret
shl
mov
out
loopne
filds
in
shll
loope
neg
aad
mov
lret
hlt
in
in
ret
in
roll
int3
ffree
fisubrs
shl
in
mov
ret
fsub
cli
rcr
mov
jmp
out
in
icebp
out
sti
aam
neg
clc
fcom
clc
ret
mov
lock
dec
fcmovnb
scas
scas
imul
shrb
aad
filds
rcl
roll
clc
hlt
jmp
or
add
ret
jecxz
rol
shr
call
lret
in
mov
fsubrp
fstpt
stc
std
or
stc
stc
adc
in
icebp
leave
in
mov
mov
out
repz
add
push
fcmovnb
in
or
or
out
add
into
ftst
shll
int3
out
mov
loope
rol
aam
ljmp
in
leave
loopne
ror
mov
loopne
fstpt
not
repz
movb
int3
scas
ljmp
imul
cli
shr
mov
call
push
out
shl
or
ret
rcl
in
cmc
mov
ljmp
cmc
in
rcl
repz
loopne
in
add
std
fildll
jecxz
into
sar
std
in
clc
in
ret
cld
out
loopne
out
or
or
mov
mov
lock
mov
rcl
mov
mov
fucomi
loope
shl
fmul
ror
aad
sar
mov
mov
cld
in
ret
pop
int
std
in
test
ljmp
out
in
shl
fldl
cld
out
icebp
add
jecxz
out
out
std
repnz
loopne
out
lret
mov
out
add
loop
cmc
neg
or
add
jmp
ret
out
lret
enter
jmp
cmc
mov
into
inc
neg
or
out
in
or
out
shr
repz
lret
mov
in
repnz
div
xlat
ret
add
loopne
repz
aad
call
int3
jmp
in
xlat
mov
or
out
in
in
out
mov
loop
lret
in
fcomp
mov
out
aam
leave
lret
out
sti
stc
enter
fnsave
mov
in
mov
fst
in
aad
loop
or
or
lock
ror
lock
ljmp
add
neg
fcomp
pop
out
loope
lods
lods
ljmp
out
int
lock
mov
cli
jecxz
ret
loope
loopne
loop
fdivl
fcom
neg
fcmovne
mov
vpaddusb
dec
jmp
ret
ljmp
icebp
call
int
shr
repnz
add
loope
clc
or
leave
int
call
rcl
repz
icebp
mov
fxch
mov
or
rcl
jmp
jecxz
aam
lret
loope
int
cmc
call
fstpt
inc
shl
rcr
add
call
ror
out
aad
in
shl
int3
ret
repz
int3
test
push
jmp
into
std
cmc
in
jmp
repnz
mov
out
cli
mov
std
repz
loopne
shl
ret
jmp
shr
add
add
fcmovb
rcr
ret
sti
testl
fcomp
lret
loop
mov
ror
into
out
call
iret
shl
clc
out
clc
loop
or
iret
fdivr
lds
rcr
in
mov
out
aam
cmc
xlat
mov
mov
cld
or
fimull
in
fmul
in
out
stc
mov
rcr
shr
mov
mov
stc
add
icebp
repz
mov
mov
jmp
jmp
ror
mul
aad
test
add
fsubr
mul
loop
rol
mov
enter
mov
sar
mov
cld
mov
scas
scas
aad
mov
mov
cld
aad
mov
add
cli
fld
or
jmp
call
icebp
mov
ror
fsubr
rcr
jecxz
fcmove
loopne
lret
out
stc
out
loopne
repz
loope
iret
mov
jmp
stc
xlat
mov
add
lret
jmp
sti
clc
out
in
repnz
lock
repnz
std
hlt
fdivrp
ret
stc
lret
add
int
lret
xlat
hlt
icebp
mov
xlat
rcl
testl
rcr
jmp
leave
shl
out
into
mov
mov
mov
loope
jecxz
fucomip
or
cli
or
loopne
in
mov
iret
les
repnz
jmp
int3
hlt
rcr
cld
fcomp
mov
out
cld
enter
lret
idiv
mov
out
iret
cld
in
repnz
jmp
ljmp
int
mov
mov
in
fcomip
mov
not
out
add
sarl
jmp
add
mov
scas
mov
repz
in
ret
jecxz
loope
mov
loopne
shl
out
add
ret
sti
mov
hlt
out
lock
fcmovnbe
loope
in
fcomip
loope
cmc
pop
fisttps
fmuls
mov
mov
mov
jmp
fstp
mov
rol
fdiv
add
loopne
lret
enter
mov
test
icebp
fnstsw
stc
add
inc
cmc
fucom
cmc
fcmovb
fst
mov
jecxz
loope
mov
mov
pop
not
vshufps
in
or
fxch
mov
loopne
call
mov
imul
out
fcmovu
cmc
decb
stc
cli
into
add
or
in
shr
out
cmc
ret
in
jmp
cmc
std
in
rcl
icebp
add
jecxz
neg
fcmovbe
add
adc
test
jmp
mov
fcomi
rcr
mov
add
mov
cli
loope
in
into
rcr
ljmp
cli
shl
cld
rcl
int
loop
shl
or
or
aam
ret
lods
in
jmp
out
enter
into
jmp
ffreep
stc
push
in
pop
leave
cli
push
cli
lods
fidivs
leave
ror
mov
iret
repnz
add
out
add
fdivl
mov
mov
enter
in
add
div
out
add
call
in
out
fnsave
mov
jmp
aad
add
shl
repnz
fdiv
repz
ljmp
iret
idiv
les
add
std
mov
or
sti
push
int3
mov
out
lret
int
in
std
cld
fiadds
out
jecxz
rcl
jecxz
add
adc
jmp
shlb
shl
aam
dec
leave
mov
cmc
fcompp
jecxz
clc
leave
or
add
lret
loopne
mov
in
stc
aad
mov
fucomp
out
icebp
clc
aad
ret
cmc
pop
pop
push
jmp
std
into
iret
mov
mov
jmp
in
std
aad
fsub
mov
out
leave
leave
fsub
call
shlb
aam
iret
stc
repz
jmp
mov
cld
aam
cmc
aam
jmp
aad
repnz
cmpsl
mov
cmc
into
out
lock
out
mov
not
mov
add
add
leave
in
or
out
jmp
dec
std
cli
rol
out
add
int3
fcomp
ret
out
fsubr
out
jmp
into
into
clc
shr
mov
fcomip
mov
ret
add
aad
repnz
leave
mov
out
mul
int
mov
in
mov
mov
pop
cli
add
fcomp
in
adc
ror
iret
mov
shrb
sti
mov
in
rol
ljmp
loope
shl
rcl
out
in
int
fldl2e
leave
mov
out
mov
inc
in
pop
loopne
in
loop
adc
mov
std
mov
loopne
jmp
shr
xlat
vpmaxub
or
lock
fcmove
stc
in
int3
int
mov
loop
or
push
in
in
loop
out
out
mov
mov
sarl
add
icebp
add
ret
std
cmc
lret
aam
add
add
repnz
scas
repz
mov
iret
into
jmp
mov
lock
mov
out
call
call
into
loopne
rcr
int3
call
mov
mul
jmp
cli
add
or
test
mov
icebp
stc
mov
icebp
mov
add
les
imul
in
jmp
call
enter
mov
jmp
loop
fldl2t
shl
lret
scas
out
mov
iret
into
cmc
fcmovne
ret
lock
hlt
hlt
jmp
sti
hlt
clc
fadds
fdivrs
jmp
aad
in
repnz
mov
in
loope
out
in
fisttps
add
in
mov
mov
out
mov
hlt
clc
rcr
aam
fcos
faddl
fsubr
clc
ljmp
sti
lods
ror
enter
icebp
jecxz
mov
add
push
call
fdivrl
sar
out
mov
leave
lret
icebp
pop
inc
loopne
loope
push
int
ljmp
in
loopne
ljmp
in
clc
clc
rcl
cmc
test
hlt
fisttps
hlt
iret
loopne
ljmp
shll
add
fst
in
sti
ret
push
or
stc
lret
mov
jmp
mov
leave
mov
pop
out
xlat
psubsb
leave
out
shl
fstp
mov
mov
leave
mov
into
xlat
cld
shr
fcmovb
ljmp
in
jecxz
repz
rcl
mov
repnz
sti
loope
push
jmp
fcmove
ffree
loopne
in
mov
ljmp
aam
ret
fcmovnbe
pop
enter
lret
or
ret
int
in
enter
mov
int
loop
stc
cld
out
out
lret
into
leave
mov
xlat
in
mov
lods
sti
leave
mov
rcl
mov
in
enter
lods
out
mov
in
mov
out
repz
cli
std
icebp
loop
movl
out
in
mov
out
into
in
rcr
loop
shl
aam
mov
xbegin
repnz
mul
ret
in
mov
out
shr
cli
fistpll
repnz
or
mov
icebp
in
mul
in
in
neg
int3
add
icebp
in
std
mov
aad
hlt
fdivr
add
in
leave
loopne
mov
call
jmp
aad
sti
add
sar
add
rol
out
mov
aad
xlat
out
clc
jmp
test
mov
fadd
fmull
out
loop
jecxz
ret
lret
repnz
stc
pushl
mov
clc
aad
mov
ret
out
repnz
loop
shll
add
loope
ret
or
aam
fnstsw
fucom
jecxz
jecxz
mov
out
into
lock
clc
repnz
fcmovu
aam
loope
ljmp
out
jmp
ljmp
jecxz
out
fadds
icebp
push
cld
ljmp
jecxz
enter
mov
in
jmp
repz
idiv
fsubp
call
in
out
into
jecxz
call
cli
jmp
jecxz
ret
add
test
into
ljmp
jmp
lods
cli
mov
mov
ret
fcmovnb
call
shr
sarb
or
repz
mov
clc
mov
repnz
clc
int
mov
add
adc
fld
faddp
lods
mov
aad
mov
int
mov
loopne
rcr
repnz
out
leave
out
aam
bswap
ror
int
lret
mov
cli
std
mov
fdivr
out
xlat
add
in
lret
push
add
loope
jecxz
lods
idivb
in
rcr
fsubp
add
fdivp
cld
fmul
shl
out
fucom
or
jecxz
fdivl
aam
enter
jmp
mov
jmp
fucomip
into
or
iret
test
cmc
out
int3
mov
hlt
fidivrl
out
stc
out
loope
cli
aad
fsubr
cld
mov
jecxz
mov
mov
sar
int3
xlat
faddl
push
loope
in
add
les
loope
repz
stos
ret
shl
hlt
mov
mov
or
decb
add
fucomp
or
in
enter
leave
repz
rcl
mov
lock
div
add
fdivrp
idiv
jmp
in
rorl
scas
ljmp
out
fsubr
fdivrp
lock
div
add
cmc
or
leave
or
repz
mov
icebp
out
in
repz
out
mov
sarb
fsubp
mov
or
lock
out
mov
cld
ret
mov
or
fisttpl
lods
shrl
loop
sti
mov
repz
cld
loope
in
or
leave
ljmp
mov
mov
rcr
mov
testl
std
add
add
cli
stc
jecxz
fsubp
les
out
mov
iret
int3
push
shl
add
push
icebp
scas
lods
shrb
icebp
xlat
repnz
stc
loopne
push
shufps
or
test
movsb
repz
in
rcl
out
cli
in
aam
repnz
cld
ret
lock
fsubl
lock
in
in
out
into
sti
repnz
fcmovnb
add
add
in
in
fadd
out
in
lret
sti
fmul
xlat
fmul
mov
jecxz
out
lret
incl
or
out
call
mov
in
lock
fdiv
icebp
in
add
aad
in
fdivrs
mov
loop
shl
add
or
into
jecxz
aam
in
lret
sarb
fdivrl
mov
loop
add
icebp
out
lods
jmp
ror
jmp
shlb
add
ror
out
stc
fdivl
sar
leave
lret
fmul
jmp
out
mov
mov
rolb
clc
out
mov
in
ret
out
in
aad
mov
mov
ret
mov
or
iret
cli
into
out
enter
shl
test
ror
sarb
aam
pop
lds
add
loope
test
scas
mul
lds
mov
mov
rcl
or
leave
loop
out
fcmovnbe
loope
sti
mov
int3
imul
jmp
mov
aam
jecxz
fmul
jmp
aad
out
mov
xlat
mov
loope
fprem1
inc
loope
rcr
out
add
or
adc
iret
not
sti
in
in
repz
fdivrs
mul
stc
add
fxch
enter
stos
mov
stc
icebp
icebp
into
fdiv
shl
repz
div
cli
std
push
repnz
leave
call
lods
out
fadd
int
lods
push
out
mul
in
add
rcl
repnz
push
jecxz
push
out
add
jmp
divb
std
mov
lret
mov
out
fsub
loopne
push
or
in
les
mov
mov
aam
shl
cld
int
int3
in
or
flds
add
or
in
rcl
in
ret
cli
shr
fsubrp
roll
jecxz
aam
shl
sti
movl
mov
lods
ret
iret
mov
inc
dec
mov
cmc
bswap
mov
int3
loope
cmc
lret
in
repnz
repnz
mul
fnclex
or
add
int
rcr
mov
aad
lret
enter
mov
add
fcmove
or
ret
mov
lret
out
lret
repnz
out
repz
aad
int3
xlat
stc
fiaddl
add
fdiv
leave
or
rol
repnz
idivl
stc
ret
lds
cli
loopne
sti
clc
ret
fxch
lret
test
test
rcr
mov
rcr
enter
push
std
shll
ret
shr
sti
repnz
sarl
fdivr
hlt
loopne
adc
mov
jmp
in
leave
leave
repnz
mov
sar
cli
stc
or
jmp
leave
jecxz
add
shr
rol
not
in
in
not
mov
hlt
mov
lret
lock
adc
scas
les
aam
mov
idiv
fdivp
jmp
aam
add
out
add
mov
into
icebp
in
enter
xlat
out
push
rcr
aad
aam
std
cmc
fildl
in
call
jmp
iret
aad
call
aam
std
idiv
int3
fcom
stc
ret
vshufpd
xadd
dec
lds
cmpsl
ret
jmp
iret
int3
test
les
fdivrs
std
or
filds
out
repnz
lret
into
ljmp
icebp
fcmovbe
in
add
jmp
ret
rol
lret
in
jmp
aam
icebp
loope
std
mov
imul
leave
fsubrp
lret
enter
mov
hlt
mov
mov
mov
repz
fcmovb
repz
vcmpss
in
stc
repz
lods
enter
call
stc
mov
in
loopne
fstpt
cld
add
out
idivl
lock
mov
clc
fneni(8087
neg
shl
jmp
movb
loope
mov
out
cmc
fnstenv
push
sti
icebp
add
cld
hlt
in
mov
mov
ror
ror
mov
in
cmc
cli
push
std
test
lret
hlt
add
fmul
lret
jmp
xlat
icebp
repnz
out
cli
out
loop
add
ret
jmp
adc
icebp
repz
mov
out
lock
int3
out
ret
roll
std
aad
lret
jmp
stos
out
out
mov
hlt
ljmp
fninit
add
out
in
loope
icebp
fcomip
sti
or
loope
cld
ror
out
call
icebp
hlt
icebp
cmc
div
leave
rcr
int
int3
rcl
aam
add
fsubr
or
into
scas
loope
in
ljmp
clc
into
sti
enter
loop
fcmovnb
hlt
fsubr
add
in
mov
in
aam
mov
neg
mov
rol
idiv
out
loope
jmp
add
ror
fmulp
call
jmp
cld
shl
add
in
out
loopne
fld
add
fldln2
in
scas
jmp
aam
cli
fxch
fcmovu
mov
fcmovnb
mov
fmul
stc
push
clc
loopne
fmulp
jmp
loope
loopne
loope
stc
mov
fsub
cmc
loope
add
fcomi
in
jmp
add
repz
call
repz
lret
loopne
call
sti
repz
add
ljmp
jmp
mov
in
mov
loop
cmc
cli
rcl
repnz
out
mov
rol
add
push
or
iret
mov
ret
out
cli
icebp
int3
fdivrl
ret
add
enter
adc
shr
loope
mov
repnz
in
vpminsw
int
out
mov
hlt
ret
in
add
bnd
icebp
mov
mov
out
rolb
ret
ret
loopne
fildl
adc
int
iret
loope
repz
add
mov
sub
mov
movl
cmpl
je
mov
xor
mov
xor
lea
mov
xor
div
mov
xor
add
mov
xor
jmp
cli
adc
adc
pmulhuw
popf
jnp
cwtl
jnp
call
add
out
out
ror
cmc
aam
jecxz
loopne
add
mov
rcl
out
stc
in
lret
inc
iret
add
loope
lock
or
stc
loope
icebp
scas
into
shrb
test
lods
clc
fsub
loope
clc
clc
fadd
ffreep
in
hlt
out
add
jecxz
imull
ror
call
ljmp
lock
clc
ffree
add
stc
shlb
icebp
iret
iret
div
jecxz
aad
add
xlat
repz
lret
add
fisttpl
push
or
lods
loopne
jmp
in
cmc
sti
mov
add
mov
or
fadds
in
scas
leave
cmc
call
jmp
fdiv
loope
mov
cld
hlt
out
fimuls
pop
lret
repz
shll
mov
leave
lock
repnz
aam
iret
decl
fsubr
lods
test
ret
ljmp
lock
jmp
cmc
hlt
rcl
push
aam
fsub
fcmovb
lret
mov
out
out
mov
mov
int
add
out
rolb
jmp
in
in
lods
jmp
int3
mov
cmc
add
std
cli
repnz
aad
clc
clc
out
push
jmp
ljmp
aam
iret
cld
xlat
pop
cli
add
decb
mov
or
fadd
ret
ret
mov
jmp
cli
rcr
mov
add
fbstp
iret
loop
out
clc
leave
shl
mov
jmp
lret
out
repz
aam
add
mov
rorl
aam
or
fcmovu
test
shrb
lret
int
int
int
shl
add
add
pop
faddl
loopne
in
mov
loope
divb
loopne
hlt
int
add
loopne
leave
or
cli
ror
out
out
out
in
lock
mov
call
fldl
mov
mov
cld
lret
add
fsubrs
icebp
loope
in
fmulp
icebp
test
shl
rorl
lock
fadd
clc
loope
mov
mov
div
repz
repnz
jmp
test
push
ror
loopne
shr
fsub
in
loope
hlt
enter
add
loope
fdivrp
out
leave
cmc
jmp
lret
out
out
in
rol
mov
mov
iret
call
xlat
ret
out
add
fucomi
shr
fsubp
mov
fsub
mov
out
add
int
mov
hlt
enter
stc
or
out
loopne
scas
mov
int3
out
call
icebp
ret
clc
repnz
add
lock
testl
ljmp
into
out
icebp
lret
mov
cld
push
shl
aad
loop
or
mov
into
mov
iret
mov
ret
fdivrs
lock
in
out
cli
enter
cmc
lock
icebp
jmp
out
add
add
roll
bswap
or
int
loop
out
mov
ret
xabort
into
aam
fistpll
idivb
enter
repz
fcomi
int3
leave
mov
ret
fnop
fidivrs
fcomp
add
lret
shr
repnz
lret
hlt
sarb
clc
push
fsubp
or
mov
ret
les
ljmp
jmp
or
add
out
in
mov
out
lock
in
leave
mov
loope
rol
loop
leave
repz
mov
stos
int3
repz
jmp
xlat
mov
add
or
pop
in
paddw
in
lods
out
shl
fcmovne
jmp
rcr
repz
add
hlt
sarb
add
out
loope
ror
ret
in
lret
out
mov
inc
cmc
sar
add
int
jmp
ffreep
mov
lds
mov
mov
enter
loope
repz
fcmovbe
iret
mov
cmc
mov
std
rcl
shr
or
ljmp
ffreep
ret
shrb
in
lds
mov
cld
out
fsubr
loope
repnz
int3
leave
in
loopne
lock
mov
testb
incl
fxch
iret
or
add
shll
stc
int3
int
leave
std
jmp
jecxz
loope
fstp
mov
call
out
out
jmp
clc
jmp
rcr
out
idivl
lock
loopne
fildll
rol
ljmp
jecxz
fnstsw
or
loop
faddl
stos
scas
fsub
cmc
hlt
rol
int3
fmul
icebp
shl
cld
loope
add
fcmovb
filds
fdivr
push
fcmovne
repnz
loope
test
vpminsw
not
fcom
int3
in
mov
cld
loop
or
icebp
mul
jmp
in
loopne
out
mov
mov
add
add
out
fucom
jmp
hlt
shl
mov
fsub
shr
mov
rol
or
add
in
loop
in
shl
stc
in
in
shr
mov
lock
test
add
les
test
rol
enter
mov
cld
mov
ret
sti
loopne
add
leave
ret
vpsllw
mov
cli
out
call
repnz
fdiv
lock
aad
sti
repz
lret
loop
jmp
les
loop
loopne
mov
ljmp
in
call
mov
mov
mov
jmp
jmp
cld
loop
std
out
leave
aad
repz
out
lods
mul
mov
lret
mov
loop
out
aad
idiv
loopne
add
fsub
jecxz
out
scas
shlb
iret
in
clc
sarb
mov
sar
add
add
fmulp
in
jmp
leave
out
test
fidivrs
cli
xlat
fcomip
in
enter
int3
loopne
scas
enter
loope
in
ljmp
out
sarb
in
cld
add
lds
scas
rol
cmc
ljmp
sar
cmc
cmc
incl
loope
fcmovbe
sti
bnd
lret
shl
xlat
jecxz
jecxz
sar
mov
loope
add
loop
ret
add
aad
clc
stc
loope
into
ffreep
test
rcr
loope
sti
fxch
mov
mov
add
add
fsub
enter
loop
hlt
mov
jmp
jecxz
mov
shl
cli
mov
in
clc
enter
lds
out
mov
hlt
loop
cli
in
sti
mov
ljmp
lods
ret
repnz
lods
out
out
cmc
jmp
loop
cli
mov
fcmove
sti
lret
add
shrb
loop
lock
int3
lret
sarl
fdivr
in
add
in
call
loope
test
repz
cli
mov
cmc
mov
std
aam
pop
push
lret
push
fadds
call
fxch
scas
hlt
jecxz
ror
out
sar
int
mov
in
icebp
push
lret
or
in
fsubp
rcr
rcr
cmc
lods
mov
aam
mov
mov
cmc
sti
fstpt
hlt
out
or
push
shr
loop
test
mov
mov
shr
loopne
neg
flds
leave
jmp
out
fcmovu
shr
out
loopne
xlat
leave
in
lock
add
fucomip
inc
fdiv
out
std
fcmove
into
adc
ret
iret
jmp
sti
loopne
shl
hlt
leave
rol
idivb
repz
rorl
mov
loop
stc
shr
fsubrp
enter
rcr
loop
aad
or
sti
jecxz
or
mov
rol
hlt
in
fdiv
repnz
fucomp
fcmovnu
enter
add
xlat
cmc
or
out
iret
in
stos
fucomip
mov
ret
mov
rcl
out
shr
out
rol
add
stc
xbegin
cmc
leave
into
adc
int3
lret
fldlg2
repnz
cli
call
aam
imul
loopne
sti
in
fmul
or
in
mov
in
fdivp
mov
aad
fiaddl
jmp
add
mov
scas
repz
in
mov
in
ret
mov
cli
ret
or
mov
mov
repz
shl
ljmp
fildl
in
roll
out
fdivr
iret
pop
iret
loope
fsubr
movsb
scas
call
out
repz
mov
cmc
xlat
aad
or
hlt
call
mov
mov
fldcw
int3
mov
ror
repnz
roll
aad
push
enter
lds
in
enter
rcr
call
rol
cli
add
in
fxch
test
mov
neg
clc
mov
mov
shl
idiv
rcr
shr
or
out
scas
lock
cmc
in
out
mov
mov
cli
clc
mov
jecxz
cli
push
or
fcomp
mov
int3
out
rcr
in
jmp
mov
mov
add
fcmovb
out
loop
mov
out
icebp
int3
lods
cli
lret
aad
cld
ror
mov
cli
sti
fmull
add
out
repnz
repz
rcl
ror
into
cli
fnstsw
call
or
mov
out
not
into
mov
sarl
out
cld
mov
mul
or
leave
add
lret
cmc
shr
iret
repnz
jmp
lret
loop
out
stc
pop
shl
fdivr
sti
loop
repnz
ret
out
fmul
shl
out
out
cmc
mov
int3
fsub
push
loope
add
test
rorl
jmp
imul
in
lock
sti
mov
in
int3
icebp
fdivrs
fsubp
out
hlt
jecxz
call
loopne
rol
out
jmp
mov
iret
in
icebp
lock
fucompp
fucomp
int
lret
stos
mov
ror
call
mov
aam
std
ret
loopne
aad
stc
enter
loopne
fmul
lret
fbstp
fcmovnb
loopne
ret
out
filds
out
in
shrb
mov
mov
repz
cmc
xlat
into
sar
in
in
rol
aam
add
leave
jecxz
enter
shlb
cmc
aad
in
aam
pop
sar
mov
ftst
in
clc
mov
mov
iret
repnz
call
cld
into
aam
rcr
add
loope
add
fucomi
out
loopne
movsb
stos
ret
mov
dec
ret
clc
fdivrs
add
ror
fdivrs
mov
mov
fcmovnb
add
test
hlt
out
out
std
push
or
test
shl
out
in
in
iret
ror
into
sarb
loopne
add
testb
out
fcmove
in
pop
loop
loope
repz
cmc
rol
mov
mov
in
push
sar
ljmp
lret
into
stos
icebp
ret
rcl
mov
lret
lret
lock
repz
aad
fyl2x
or
in
push
or
fucomp
ret
out
divb
in
in
jmp
fsubr
lock
hlt
hlt
aam
fstp
sarl
in
in
out
in
out
test
aad
cli
std
ljmp
in
in
cmc
or
fxtract
or
fidivrs
ljmp
cli
push
repz
sarb
out
jecxz
loopne
mov
leave
clc
mov
add
push
pop
rolb
add
jmp
adc
mov
in
shl
repz
mov
repnz
jmp
jmp
icebp
mov
aam
lock
les
repz
aad
add
loopne
add
mov
fld
test
enter
mov
rcr
pop
add
lret
hlt
ljmp
into
repz
div
mov
int
mov
sarl
repz
clc
jmp
push
in
add
or
scas
jecxz
repz
hlt
hlt
aad
cli
ljmp
rol
loope
fiadds
lret
out
ret
ret
shr
rcl
out
lret
mov
out
mov
add
fisttps
loopne
lods
in
loopne
shl
mov
into
add
cld
jmp
ret
lret
ffreep
in
iret
lock
jecxz
hlt
in
mov
repz
mov
add
or
mov
out
lret
lds
sti
mov
std
mov
mov
testb
bswap
or
loop
mov
mov
mov
add
out
aad
loop
out
add
mov
lods
in
iret
int3
in
mov
fcmovnu
add
hlt
int
not
add
clc
fsubp
or
jmp
in
sti
in
mov
leave
mov
mov
clc
ljmp
fdivp
lods
rol
ret
icebp
sti
aam
in
in
test
hlt
ret
into
int3
lock
sti
lret
loopne
add
jmp
int3
mov
lret
mov
in
mov
sarl
stc
mov
lret
sti
or
mov
leave
shll
mov
in
add
fiaddl
or
hlt
add
lds
or
cmpsl
mov
mov
mov
into
iret
aad
mov
sar
stc
add
or
shr
lret
bnd
out
xlat
leave
int
fdiv
lret
leave
loope
cmc
cli
add
or
ljmp
loope
lret
leave
loopne
repz
in
clc
jmp
mov
ffreep
hlt
aad
pmuludq
push
add
fmulp
rcr
hlt
in
fnsetpm(287
xlat
mov
add
rcr
incb
movl
cmc
jecxz
repz
ljmp
rcl
in
fcomi
loope
clc
add
loopne
cli
icebp
fsub
repnz
lret
out
mov
fdivrl
cld
or
or
into
mov
out
lret
in
int3
pushl
into
std
loope
mov
in
add
enter
scas
in
in
in
cli
ror
lods
lock
loope
int3
ret
add
fyl2xp1
int
mov
mov
aad
mov
mov
in
rcr
test
add
call
rcl
sti
rcl
mov
call
repz
mov
lret
or
ljmp
loop
call
lock
testl
cld
repnz
inc
jmp
lret
test
fprem1
lods
lret
mov
call
push
loopne
fcomp
lret
loop
out
test
fnsave
in
lret
iret
in
mov
out
jecxz
stc
out
in
iret
into
push
std
mov
iret
in
in
mov
sti
loope
inc
cld
add
hlt
add
fdivrl
loopne
int
call
shr
mov
imul
add
jecxz
icebp
ljmp
mov
int3
idivl
cld
add
ret
rcr
add
flds
call
out
clc
loopne
in
in
stc
into
add
fstp
sti
stc
in
rol
pop
add
call
loopne
out
fcmove
in
mov
hlt
add
aad
fadd
out
jecxz
int3
in
mov
ret
iret
mov
into
cli
aad
imul
repnz
loopne
repnz
fcom
mov
mov
aad
stc
repnz
int
mov
sar
iret
mov
call
stc
adc
xlat
mov
shr
in
iret
loop
stc
repz
lock
ret
rol
std
repz
in
lret
int
into
lock
leave
fnsave
in
cld
rorb
add
fimull
in
fimull
out
jmp
aad
aad
out
repz
add
testb
add
out
jecxz
inc
ret
ror
shl
rol
in
mov
repnz
in
shl
pandn
lret
out
sarb
div
call
fcmovnu
out
aam
add
or
out
leave
into
out
lret
call
cli
aam
lods
mov
fucomip
repnz
mov
hlt
loop
add
in
out
cmpsl
mov
jmp
mov
repz
iret
add
xlat
filds
fcmovne
out
lret
loop
in
lret
stc
les
fistpll
sti
ret
jmp
cli
into
add
fcomip
in
test
xlat
lret
shl
mov
shl
stc
icebp
fisttpll
or
xlat
loope
out
clc
or
int
divl
out
mov
sti
in
fdiv
add
cld
add
mov
push
out
cli
or
out
shrl
leave
lret
fucomip
mov
loopne
fdiv
aad
loopne
add
add
iret
out
mov
sar
mov
aam
enter
leave
hlt
mov
rolb
fsubrp
jecxz
bswap
shl
ljmp
aad
fcom
into
aam
mov
fincstp
or
fxtract
lret
iret
mov
call
out
clc
loope
fcomp
add
ffreep
or
in
or
fst
mov
fcmovne
mov
jmp
fld
rorb
fdivr
aam
out
std
in
lret
fsubrl
call
fcmovb
cmc
add
hlt
ror
jmp
lret
shrb
rcr
xlat
fdiv
stc
not
shl
cli
fldl2t
leave
in
add
std
psubsb
xlat
mov
out
in
fsubrp
jmp
vpsubb
ret
hlt
fyl2xp1
aad
push
out
out
mov
in
rcl
lret
idivl
icebp
icebp
fsubr
rcr
loopne
jmp
imul
mov
mov
les
div
into
mov
or
jecxz
psubsb
fsubp
jmp
loop
stc
into
fcomp
push
add
add
icebp
rol
add
jmp
pop
push
jmp
jmp
lock
out
mov
mov
jecxz
repz
shl
out
hlt
or
mov
jecxz
lock
test
in
fdivp
fcmovbe
jecxz
int3
rcl
hlt
in
add
pop
jmp
shlb
scas
mov
hlt
out
jmp
fdivrs
cli
lret
psubb
iret
out
adc
idiv
sti
mov
not
ljmp
in
xlat
add
cli
or
aad
or
sarl
into
int
lret
int3
mov
iret
call
add
stc
or
out
in
icebp
repnz
loop
mov
cmc
int3
fcmovne
fmul
jecxz
cld
rcl
cmc
hlt
lock
add
fiaddl
shrb
in
repz
divl
shr
add
aam
fldl2t
loope
scas
repnz
lods
sar
fcmovne
mov
in
lock
cld
rolb
ret
fcomi
out
add
add
cli
into
cli
enter
aad
mov
loopne
mov
int3
std
repz
mov
add
sti
enter
cli
or
stos
in
xlat
hlt
in
mov
in
mov
rcl
cli
stc
aam
mov
or
leave
enter
int3
mov
mov
clc
add
stc
mov
iret
jmp
int
lods
enter
shrb
rcr
mov
loop
mov
pop
fincstp
jmp
jmp
or
inc
stos
sarb
int3
cli
fmul
rol
out
shr
mov
or
or
call
lret
mov
leave
out
out
test
mov
ret
jecxz
shr
add
cli
add
shr
shr
fdiv
aad
mov
pop
rol
testl
sti
int3
in
in
ljmp
in
int3
iret
in
fmulp
add
repz
jmp
ljmp
fucomip
xlat
mov
lods
int
cli
aad
int3
fcos
roll
mov
add
jmp
scas
in
mul
into
iret
loopne
out
out
mov
loop
pop
add
ljmp
out
mov
repz
mov
fdiv
stc
call
push
div
lds
push
out
rorl
in
repz
ror
icebp
aad
mov
add
out
icebp
cld
in
add
ljmp
or
jecxz
mov
xlat
mov
mov
add
fadds
add
in
movb
mov
lret
rcl
repnz
out
idiv
mov
add
loop
push
out
out
adc
shlb
hlt
aad
in
test
int3
sti
fildl
loopne
repnz
repz
mov
rcl
mov
mov
add
jmp
add
movb
test
cld
fldcw
rcr
in
xlat
mov
mov
sti
jecxz
loope
loopne
aam
enter
jmp
out
scas
mov
ljmp
int
fadd
add
add
cld
or
fsubrp
fmul
imul
ret
stos
in
clc
into
icebp
mov
mov
or
aam
or
add
icebp
lret
lds
repz
sar
in
ret
fcom
hlt
imul
loop
fcomi
fsub
or
into
ret
lods
aam
in
clc
repz
rcl
in
leave
ret
fstp
or
leave
mov
out
cli
jmp
out
mov
or
shr
mov
lret
int3
fptan
out
repz
mov
fcmovu
cmc
aad
int
fsubrs
mov
rep
into
iret
ljmp
rcl
add
cli
shl
add
enter
ror
leave
lock
shl
mov
fucomp
shl
sti
out
mov
hlt
iret
lret
std
in
pop
int3
out
into
jmp
shr
sti
fsubr
clc
enter
cli
add
ffree
cmc
ud2
push
adc
scas
iret
loopne
ret
mov
lret
fnstenv
mov
add
aad
enter
shr
mov
in
shr
fdivr
repnz
fcos
cmc
testb
push
not
leave
clc
fsubrp
mov
cmc
fucomi
shl
mov
shlb
aam
xlat
roll
pop
add
or
ljmp
enter
fnstcw
mov
roll
lret
sti
add
jecxz
mov
lret
enter
in
sar
loope
hlt
ret
fcom
idiv
add
fisttps
fcmovne
scas
shl
out
aam
shr
jmp
mov
iret
out
repz
out
add
in
test
out
imulb
in
cld
enter
shl
add
cld
not
leave
hlt
into
out
or
iret
mov
leave
lock
out
int
mov
cli
loopne
or
or
adc
shl
jmp
mov
clc
in
lret
lret
into
incb
lock
mov
loop
adc
icebp
leave
mov
int3
lret
fcmove
repz
add
rolb
aad
vaddsubpd
jmp
into
into
lods
mov
into
sti
out
loope
mov
mov
add
testl
loope
add
in
fisubrs
iret
repnz
fcmovnbe
jmp
loopne
lret
mul
fcmovu
push
in
out
int
ret
mov
in
mov
inc
loope
mov
sti
sti
or
loop
shr
shlb
repnz
cmc
out
mov
lret
imul
loope
out
shrl
fcmovbe
mov
in
enter
mov
icebp
cld
ret
cli
add
in
lret
xlat
out
rcr
mov
aam
cld
pop
out
mov
vpavgw
or
cmpsl
shrl
in
mov
in
aam
fadd
out
loopne
out
lret
cli
iret
lret
sarl
in
in
stc
shl
mov
mul
fdiv
mov
std
push
jmp
lds
repz
loopne
shl
repnz
int3
in
dec
aad
incb
out
ret
fimuls
add
leave
sti
fsubr
iret
int3
mov
repz
in
shl
hlt
cld
mov
fiaddl
icebp
enter
ret
mov
lret
rol
shlb
rcl
mov
shl
mov
add
fsubrp
xlat
rcl
mov
mov
lock
bnd
repnz
repz
jecxz
out
call
into
in
mov
mov
hlt
jmp
xlat
icebp
xlat
not
mov
ret
out
push
out
int
call
lret
mov
cmc
call
lret
out
dec
repnz
aam
xlat
fnstsw
in
int
imul
lods
rol
loopne
enter
enter
add
xlat
mov
add
int
shrl
mov
rcl
call
sti
mov
mov
add
in
iret
or
shrl
mov
repz
sti
idivl
cmc
add
add
add
out
leave
mov
test
repnz
mov
jmp
leave
pmovmskb
flds
fsub
leave
fdiv
jmp
cmc
lock
sar
fcomp
std
repnz
sar
loope
add
ljmp
cmc
jmp
clc
mov
clc
mov
int
fsubp
aam
std
mov
add
leave
ret
mov
shl
mov
cli
cli
jecxz
std
hlt
or
faddp
ljmp
lock
fnstenv
jecxz
add
fnclex
std
fcomp
lret
cli
add
fmul
fdivl
in
idivb
add
xlat
out
icebp
idiv
add
shl
jmp
or
cmpsb
idivl
out
out
iret
fdivs
in
std
mov
lret
out
or
shl
rcl
call
sti
repnz
out
cmc
decb
out
jmp
into
rcr
repnz
loopne
stos
bnd
vpsubw
iret
mov
fisttpll
push
neg
hlt
cli
jecxz
sarl
ret
les
fneni(8087
rcl
fcmovnb
in
rcr
out
add
leave
loopne
in
loop
sti
out
in
in
std
enter
add
mov
hlt
icebp
testl
enter
xlat
shll
leave
std
rcr
ret
fsubr
sarl
aad
cli
jecxz
loopne
fmul
into
hlt
aam
idivl
mov
mov
mov
or
in
clc
shr
shr
mov
into
icebp
out
enter
mov
sarb
cld
cli
loop
std
add
xlat
loopne
hlt
iret
hlt
lret
loope
push
out
fcmovnb
add
add
out
lock
ljmp
ljmp
shr
jecxz
iret
out
jecxz
out
loopne
jecxz
mov
call
fscale
std
mov
lret
sarl
out
mov
repz
loope
lods
shr
rcr
fucom
jecxz
fistpll
lret
aad
jmp
out
loopne
jmp
mov
add
push
cmc
rcr
add
fildl
repz
mov
lock
mov
lods
fsubp
in
into
stc
mov
fcmovb
mov
mul
paddb
or
test
ror
ret
mov
ror
repz
sarl
or
loope
or
test
into
loopne
test
sti
repz
mov
add
bswap
out
out
fdiv
repz
in
int3
in
iret
hlt
shl
stc
ret
clc
icebp
stc
xlat
in
rol
out
add
ror
repnz
repz
cmc
in
cmc
int
aad
add
shl
ljmp
shrl
fdivrs
movl
or
sar
mov
shl
out
call
std
fidivs
std
xlat
out
or
in
scas
lret
xlat
test
mov
out
mov
pop
add
out
jecxz
push
cli
or
loopne
lods
test
leave
into
lock
fcomip
add
stc
lock
neg
in
in
out
jmp
out
leave
int
clc
jecxz
testl
movl
cld
or
add
mov
mov
fnstenv
int
call
push
fldl
push
fxch
fiadds
test
lods
fdivr
in
mov
loope
out
in
in
fsubr
clc
or
add
into
ljmp
aad
out
rcl
mov
sarb
in
faddp
hlt
add
fmull
or
cld
loopne
jmp
hlt
stc
repnz
mov
ret
rcl
out
or
add
fdivrp
push
or
loop
mov
in
std
clc
mov
mov
out
add
or
iret
fdivl
icebp
lret
in
jmp
sti
mov
cli
fadd
neg
call
rol
mov
mov
int
mov
lret
ret
ret
int3
fucomi
add
aam
clc
call
rcl
mov
call
cmc
in
in
sti
add
repnz
add
add
fucom
iret
or
fiaddl
stos
int
lods
in
leave
test
in
xlat
aad
jmp
fcmovbe
fdivrp
fadd
std
fldl2e
hlt
sti
loop
test
les
push
leave
mov
fsubp
xlat
repz
clc
add
fmull
into
mov
enter
rcr
iret
mov
in
sar
loope
cld
testl
ffree
sarl
call
in
int
ret
repnz
out
clc
in
fmulp
fadds
add
stos
fsubrp
int
mov
mov
shr
into
rcl
enter
fdivr
flds
add
sti
aad
jmp
add
in
iret
ret
mov
xlat
mov
in
lret
int
in
aad
ret
repnz
sti
ljmp
int3
shlb
shr
jmp
into
cli
not
in
mov
or
fnstsw
fsub
fdivp
shr
mov
mov
mov
out
add
mov
or
leave
fsubrp
mov
fcmovne
repz
fsubp
mov
stc
lock
or
cli
adc
mov
mov
in
lret
loopne
fsubr
cld
icebp
int
aam
mov
loopne
iret
aad
fmul
psllw
repnz
stc
aad
fxch
hlt
mov
cli
out
sti
loopne
or
paddd
stos
rol
in
lock
in
ljmp
xlat
add
push
fucomp
add
test
lock
mov
int
mov
sar
into
cmc
int
add
vpsubsb
fucomi
sti
push
or
repnz
sarb
std
out
aam
fsub
jecxz
jmp
iret
sti
loope
scas
aad
leave
in
mov
call
in
mov
fcomi
fmull
out
in
into
clc
add
iret
loop
jmp
lods
stc
in
in
call
in
in
xlat
lock
enter
call
rcl
sti
mov
in
shl
int
hlt
rol
repz
cmc
fsubr
or
cmpsl
int3
int
shlb
lods
mov
fucom
out
sarl
out
out
faddp
movsl
iret
jmp
test
cld
int
std
aad
rolb
or
aam
add
lods
enter
aad
jmp
not
mov
or
or
xlat
fsubr
in
out
ret
rol
mov
jmp
xlat
fmul
rcr
out
in
aam
xlat
out
push
cld
fldl
ror
mov
mov
in
in
mov
fincstp
mov
neg
aam
or
mov
mov
ror
mov
fbstp
mov
add
fcom
out
fsubr
fcmovnu
add
repz
lods
out
mov
mov
mov
mov
add
push
neg
or
or
rol
aam
in
loope
aad
stc
call
add
hlt
push
jecxz
jecxz
lock
loopne
stc
add
loop
into
shl
enter
out
hlt
jmp
mov
add
sti
iret
fmuls
sti
or
in
in
mov
scas
enter
shl
repz
mov
lret
in
jmp
iret
repnz
mov
loopne
mov
loopne
not
into
sti
out
mov
stc
les
std
cld
fdivrp
cli
hlt
call
mov
repz
mov
mov
rcr
loop
add
out
or
or
out
loop
shll
int3
shr
fldlg2
lret
mov
add
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jmp
xorb
lock
cs
jne
jp
add
repnz
fldlg2
decb
out
loop
scas
enter
hlt
out
cld
mov
lret
mov
faddl
loope
or
jmp
scas
call
fucomi
out
frstpm(287
fcmove
mov
hlt
mov
fld
enter
iret
iret
ljmp
mov
sti
icebp
les
fdivrl
clc
fcmovnu
enter
or
loopne
lods
call
vpmaxsw
stc
mov
mov
loop
cmc
jecxz
call
mov
mov
mov
jmp
mov
sti
fdecstp
aad
ret
xlat
out
loop
pop
sti
or
add
in
ror
lock
repnz
add
in
out
std
jmp
iret
lods
fdivrl
cmc
lock
leave
int
add
movl
div
or
or
int3
mov
mov
shl
aad
mov
fnstsw
icebp
cli
ljmp
int3
ljmp
jmp
leave
mov
loopne
mul
add
add
jecxz
ret
imul
loopne
leave
mov
in
aam
in
mov
not
add
call
ret
mov
mov
cli
push
idiv
sti
incl
lock
or
repz
int
loopne
sar
in
int3
in
std
shl
fiaddl
add
jmp
fiadds
into
int
repz
in
mov
xlat
mov
enter
mov
aam
add
aad
in
pop
iret
jecxz
jmp
idivl
aam
shl
xlat
add
add
or
cld
in
add
rol
ret
shr
vcvttpd2dq
repz
lock
repnz
rcr
stc
loop
hlt
add
leave
jmp
stos
mov
mov
stc
incl
mov
add
cli
test
loope
or
ljmp
enter
cli
into
loop
shr
icebp
hlt
add
out
loope
in
or
push
ljmp
test
shl
loop
shl
inc
stc
rcr
rolb
cmc
decl
or
mov
in
scas
int
vshufps
repz
enter
loop
lret
jmp
out
fmul
or
paddsw
not
lock
iret
out
mov
std
inc
stc
add
jmp
or
stc
shlb
iret
shlb
mov
repz
mov
out
flds
out
cli
repz
jmp
shl
shr
out
int
icebp
ret
xlat
hlt
out
fcompp
aad
lret
add
xabort
mov
ret
jmp
icebp
out
in
out
cli
int
lock
pop
cli
shl
fsubr
fucomp
pslld
lds
in
add
hlt
out
sti
rcr
fcomp
cmc
cld
in
sarb
ret
mov
mov
cli
loope
add
loopne
in
add
iret
int3
out
lods
lock
mov
ror
icebp
mov
out
xlat
call
loopne
add
loopne
out
ljmp
stos
mov
out
hlt
lock
repnz
cld
pop
xlat
mov
pop
ljmp
mov
mov
clc
int3
divl
loope
mov
leave
shl
sti
in
jmp
out
lret
cmc
jmp
mov
fidivrs
ljmp
mov
out
xlat
in
leave
iret
ljmp
mov
shl
aad
lock
enter
test
scas
stos
ret
mov
ror
rolb
loop
rolb
clc
fsub
call
loop
shl
vpxor
mov
aam
xlat
rcr
stc
cli
in
in
ftst
hlt
std
icebp
mov
jmp
lret
sti
int3
enter
mov
shl
repz
incl
enter
jmp
lods
cmc
mov
rcl
loopne
leave
out
lret
mov
mov
fcmovnb
stc
clc
lret
stos
lret
icebp
out
iret
in
fucompp
divb
aad
xlat
xlat
hlt
cmc
fneni(8087
xlat
add
loop
lods
out
out
lods
into
mov
mov
aad
ror
ret
lock
jecxz
push
loopne
in
add
ret
lret
call
out
neg
fchs
loope
mov
loopne
jmp
fcmovnu
ror
test
jecxz
jmp
xlat
sarb
aam
int
add
cmc
aam
out
sti
int3
in
loope
rol
out
mov
in
jmp
ret
mov
stc
out
cmc
add
loope
scas
loope
out
out
mov
cli
out
in
mov
out
ljmp
fdivrp
fbld
cmc
mov
divb
in
std
lock
jecxz
or
fisttpll
mov
cmc
loopne
cmc
rol
frndint
mov
add
div
or
loop
fucomip
fcmovu
int
stos
lods
lods
leave
lock
fmul
stc
int3
fdivl
add
in
mov
out
mov
test
hlt
sti
loopne
shl
lret
out
fadd
iret
clc
fldl
add
jmp
out
loopne
mov
mov
xlat
in
in
cli
mov
into
cmc
loope
add
fdivr
in
pop
ror
lds
in
fsubrp
mov
clc
into
cmc
ret
roll
cld
out
fldl2e
mov
shl
shrl
mov
enter
add
xlat
sti
or
std
add
jmp
bnd
sarl
aam
sarb
aam
mov
sti
out
iret
add
shl
iret
in
test
in
fcmovbe
jmp
aam
into
mov
mov
in
fadd
adc
mov
loop
repnz
int
jmp
shl
repz
fcmovu
ffree
pop
in
add
sarb
jmp
mov
rcl
in
sarl
loope
cli
les
jmp
int3
rcr
idivl
into
shll
fcomp
neg
mov
enter
int3
repz
shl
shl
shlb
mov
dec
lock
clc
in
jmp
icebp
ret
mov
mov
enter
std
out
aam
shl
flds
fadd
cli
rcr
iret
add
loope
call
in
out
aad
in
cld
rcr
mov
fsubp
clc
clc
jmp
add
loopne
test
mov
out
scas
in
mov
loope
in
rcl
sar
loopne
leave
add
jmp
pop
test
mov
shr
lret
mov
fidivrl
aad
mov
add
or
in
loopne
loop
int3
stc
iret
leave
repnz
in
out
mov
mov
ret
cmc
leave
loope
pop
add
fucom
int3
rol
enter
sti
in
cld
fcmovbe
add
clc
add
add
mul
shr
sti
xlat
mov
rol
shl
incb
ror
in
scas
mov
mov
mov
ljmp
into
pop
add
add
ret
call
call
jmp
lret
jmp
not
inc
lock
fcmove
lock
out
jmp
shr
jmp
iret
div
mov
mov
aam
repnz
mov
leave
pxor
or
int3
adc
icebp
rol
int3
hlt
sti
clc
clc
mov
in
repnz
add
sar
jecxz
enter
lret
lds
sti
idivb
ror
out
cmc
jecxz
push
stc
add
iret
add
lods
test
shl
into
shr
int3
int
std
loop
loopne
sti
push
fadd
add
fsubr
rcl
lret
in
rol
cli
hlt
mov
lock
stc
not
loopne
or
out
push
in
les
mov
jmp
into
repnz
mov
aad
add
stc
cli
cli
or
fdivrp
sgdtl
out
mov
shrl
mov
inc
mov
aad
shl
or
push
pop
mov
xlat
shl
out
hlt
lret
lock
mov
in
lock
idivb
out
pop
loop
ljmp
shll
mov
xlat
int
add
cmc
sar
out
fcmovne
or
in
out
jmp
cli
fsubr
int
add
filds
clc
sti
hlt
add
rolb
out
push
fsub
in
rep
mov
mov
hlt
lret
stc
mov
into
in
hlt
aam
rol
mov
shl
fmul
vpsraw
cmpsb
enter
repz
loopne
stc
fcomip
fcmove
aam
sti
mov
shl
neg
add
in
rorl
leave
loope
shl
mov
repz
lret
int
roll
test
jecxz
std
add
loop
out
repz
in
int
shr
cmc
cmc
into
lret
aad
mov
add
clc
jecxz
fimull
std
stos
repnz
out
hlt
enter
cmc
cli
loop
mov
jmp
in
loopne
add
fcomi
fsubp
mov
rcl
stc
shl
mov
hlt
mov
mov
pop
loop
fscale
fmul
in
xlat
mov
lret
stc
out
cmc
mov
hlt
add
out
lret
dec
mov
call
in
fprem
aam
jmp
push
shl
or
ljmp
xlat
jecxz
rol
in
mov
mov
div
fiaddl
shr
or
clc
loope
loopne
in
mov
aam
int3
stc
fcomip
mov
std
mov
aam
fxch
loopne
push
roll
loop
iret
ljmp
in
enter
int
mov
lock
or
cld
add
repnz
fdivl
mov
out
mov
enter
mov
pop
fdivr
add
icebp
ret
xlat
ljmp
mov
mov
cld
lret
mov
fadds
iret
loopne
std
in
int
in
in
in
loopne
enter
std
mov
add
out
in
mul
fdivr
in
lret
jmp
lods
aad
cmc
mov
jmp
fsubrp
incb
sar
mov
ror
int
aad
int
int3
scas
stc
mov
clc
fnstsw
mov
in
adc
out
scas
out
into
enter
in
icebp
mov
mov
loope
sarb
cmc
or
add
int3
jecxz
shl
sti
icebp
jecxz
cli
fsubp
mov
in
lds
aam
out
std
rcl
mov
repz
xlat
mov
cli
mov
mov
add
vmptrst
mov
mov
mov
mov
paddusb
add
not
call
hlt
aad
divl
int
rol
testb
lret
int
rol
mov
mov
into
mov
mov
mov
add
or
cmc
out
mov
repz
cmpsb
mov
leave
mov
lret
in
mul
enter
loopne
loop
shl
loope
add
loopne
test
aam
mov
lock
idiv
mov
ljmp
in
out
scas
repz
scas
cmc
out
repz
clc
rcr
in
pop
fndisi(8087
paddw
push
lret
lret
ret
shrl
int
add
pop
add
loopne
in
jecxz
out
in
out
jmp
repz
lret
roll
jecxz
add
aad
dec
adc
fsubp
into
aad
rep
rcl
lock
cmc
jmp
add
pop
repz
faddp
iret
out
out
iret
fidivrs
int3
out
sar
mov
mov
repz
stc
fsubp
lret
or
ljmp
leave
shl
out
out
aad
fcmove
xlat
int
hlt
incl
fucomi
fprem
cmc
cli
hlt
lret
stc
hlt
out
loopne
out
shr
clc
cmc
out
mov
imul
mov
mov
fsubp
cli
loope
ljmp
lods
in
jmp
rcl
lret
int
fst
mov
add
in
les
div
mov
repz
fyl2x
mov
jmp
filds
loopne
shl
leave
repnz
mov
leave
mov
int3
shl
cli
lret
in
out
add
jecxz
out
mov
iret
shl
jecxz
mov
loop
rorb
call
repnz
mov
in
icebp
mov
iret
fstp
shr
out
fsubp
cld
mov
mov
int3
lods
int3
ret
ffree
cli
mov
add
loop
mov
fcmove
repz
fst
loopne
call
mov
out
rcl
sar
add
add
add
cmc
push
leave
out
lret
mov
in
out
in
out
mov
mov
mov
add
lret
jmp
jmp
fisttps
lods
divl
stc
cmc
into
mov
sar
jecxz
iret
call
mov
aad
in
enter
call
loop
mov
or
add
out
jmp
repz
rol
mov
lret
fldlg2
ret
hlt
jmp
out
push
jmp
or
test
movsl
push
div
call
lock
add
loopne
or
iret
rcr
repz
jmp
lock
enter
mov
enter
fcmovnb
out
fld
fadd
out
jmp
or
jecxz
mov
in
in
stc
lret
mov
fmul
repz
loopne
aad
rolb
repnz
aad
in
icebp
jmp
std
std
mov
mov
shl
shr
cld
lret
int
mov
leave
mov
aad
mov
mov
aam
stc
add
or
out
in
mov
stos
jmp
mov
leave
jmp
sti
in
sar
neg
or
icebp
mov
icebp
iret
mov
stc
out
enter
in
jecxz
sti
add
or
in
or
call
enter
lock
mov
jmp
sar
not
sar
push
testb
stc
std
lret
iret
mov
shl
lock
ret
sti
mov
fsubr
rol
cmc
fcmovu
ffree
lods
out
repnz
int
hlt
shl
mov
jmp
mov
cli
rcl
aam
shl
add
in
or
adc
ret
lret
cmc
aad
scas
enter
neg
loopne
clc
in
hlt
mov
enter
in
loop
test
out
shr
out
in
out
lret
std
fidivrs
fsub
aad
fiadds
loope
ljmp
test
mov
in
hlt
movl
lret
adc
std
stos
loope
scas
ljmp
repnz
jmp
aam
add
leave
or
fisttps
jmp
lods
test
mov
aad
flds
aad
fildl
add
add
adc
stos
test
ret
sti
mov
ror
in
jmp
idiv
mov
jmp
lds
fsubr
int
test
lock
enter
jmp
int3
add
in
add
ret
loope
aam
fsubr
or
or
jecxz
in
mov
ljmp
jmp
out
mov
clc
std
jecxz
add
hlt
enter
out
out
hlt
in
lock
repnz
out
mov
rol
mov
fidivs
mov
mov
mov
mov
add
lret
stc
in
fnstsw
out
lret
jmp
lods
out
jmp
fcomp
out
jecxz
mov
repz
fdivrp
jecxz
add
int3
out
shr
mov
sar
mov
std
cli
ret
fcmovbe
shl
fildl
out
dec
out
icebp
mov
lret
test
fnstsw
hlt
push
mov
ftst
or
enter
in
sti
in
out
mov
sti
lret
aam
hlt
rcr
add
std
out
lds
int
add
mov
loope
shlb
rcl
aad
testl
call
in
mov
iret
shlb
sarb
add
loope
leave
aam
loop
in
out
jmp
loopne
ljmp
ljmp
xlat
aam
jmp
in
add
stc
repnz
lret
ret
cmc
out
shl
into
mov
mov
add
roll
or
paddw
repz
aad
mov
sar
cli
mov
loop
cli
add
sar
cld
fsubp
lds
ror
leave
lret
lock
in
mov
fnstenv
enter
test
loope
in
fsub
std
or
mov
lret
lock
faddl
out
fcom
xlat
sarl
shl
jecxz
in
loopne
ljmp
in
jmp
idiv
icebp
out
mov
fildl
std
inc
ret
in
jmp
lret
sti
fdivrp
mov
fiaddl
in
in
fadd
out
call
mov
fdivrs
icebp
sti
stc
loop
std
add
fcomp
xlat
cmc
lret
adc
loopne
mov
scas
leave
cli
aad
mov
loop
aad
out
call
ljmp
divb
repz
mov
in
cli
neg
fnclex
out
leave
ljmp
out
aad
aam
repz
aam
faddl
cli
aam
pop
pop
fadds
mov
scas
in
fadd
out
sti
icebp
dec
repnz
in
fcom
incl
fcmove
vpminub
fninit
add
out
enter
mov
jmp
mov
mov
pop
add
add
or
xlat
stc
or
int3
icebp
leave
mov
shl
mov
out
clc
repnz
enter
out
add
rol
int3
mov
aad
mov
scas
shlb
add
loope
hlt
add
or
ljmp
ror
rcl
stc
in
mov
mov
shl
out
ljmp
into
in
mov
mov
imul
sar
into
mov
ror
stc
loop
in
loope
fiadds
clc
mov
push
repnz
xlat
lret
not
ror
loopne
ret
sar
out
add
lret
shl
xlat
in
aad
fdivr
out
cmc
cli
mov
or
std
fscale
ret
jmp
fstp
mov
repz
mov
mov
rcl
out
testb
add
div
ret
hlt
enter
lret
mov
fcmovnu
sti
hlt
add
push
add
fldz
add
iret
loope
aad
ror
hlt
scas
out
sar
in
lock
xlat
fildl
mov
in
aam
repnz
jmp
scas
jecxz
lret
hlt
jecxz
mov
fidivrl
lret
ret
out
fsubr
into
mov
fdivs
shr
mov
add
int3
loope
in
push
fnstcw
in
cmc
repz
jmp
mov
mov
fcmovu
ret
jmp
out
loop
mov
ret
iret
cmc
out
fdivrp
fcmovu
mov
add
mov
adc
out
out
ljmp
mov
sar
fstp
les
fucomip
mov
iret
rol
in
aad
aad
iret
fscale
jecxz
repz
movl
fsubrs
mov
jmp
mov
ret
call
shl
xlat
ljmp
ret
scas
mov
mov
jmp
shll
add
ret
in
jmp
loop
fisubrs
in
mov
mov
add
in
rcl
neg
in
fstp
adc
rcl
out
leave
in
int3
mov
cli
out
not
fdiv
mov
ret
add
xlat
idiv
in
jmp
fstp
jmp
lock
mov
mov
mov
mov
mov
fucom
mov
or
int
int3
ret
test
aad
fcom
mov
out
mov
cli
add
cmc
or
push
adc
mov
aad
enter
sar
add
loope
int
add
fdivr
enter
xlat
shl
vfmadd231pd
mov
cmc
hlt
stc
lock
in
stc
fcmovb
aam
loopne
out
mov
loopne
int
aad
mov
mov
repnz
stc
cli
or
add
push
repnz
mov
mov
les
repnz
mov
add
rcr
mov
iret
lret
leave
lods
mov
fcmovnbe
sar
fnstsw
std
loop
cmc
fcmovu
add
loope
add
or
fnstcw
out
mov
out
enter
add
faddp
add
out
out
cld
cld
adc
jecxz
jmp
mov
in
jecxz
fsubr
or
mov
jecxz
fsub
lret
out
into
idiv
jmp
out
mov
shl
sar
jmp
in
xlat
push
jecxz
in
int3
int
call
repz
icebp
aam
int3
fmul
stc
incb
ret
repnz
add
jmp
call
mov
into
not
loopne
ffreep
repnz
mov
fiaddl
fldl
ljmp
mov
mov
in
stc
sar
fcmovnu
add
repz
or
add
std
lret
in
test
out
test
stc
call
int
xlat
lock
fcomip
stc
loop
add
int
shl
loope
in
fdivs
loop
cld
icebp
shl
int3
lret
fiadds
add
fistpll
icebp
hlt
mov
cli
shlb
fcmove
fstpt
cld
add
push
loop
out
divl
aad
cmc
imul
in
hlt
mov
fcomi
in
out
fmull
in
push
out
loope
ljmp
lret
xlat
cli
mov
loop
loop
rcr
iret
jecxz
loopne
or
hlt
cmc
lret
in
mov
std
loope
lock
add
fsubrp
add
mov
out
fcomp
mov
hlt
mov
cld
mul
loop
push
jmp
out
repnz
call
repz
stc
mov
fstp
ret
out
shr
out
in
in
mov
ret
hlt
jmp
sti
clc
cli
into
fcmovne
lock
aam
add
loope
loope
int
bswap
mov
rcl
fcmovu
out
mov
mov
mov
add
jmp
adc
shl
mov
repz
aam
in
aam
loopne
rorb
enter
in
std
or
in
shl
lods
shl
loopne
out
int
lock
aad
hlt
xlat
cmc
loopne
fmull
mov
enter
lods
mov
sar
int
aad
cli
repnz
add
cli
out
or
enter
rol
cmc
scas
leave
test
mov
rcr
filds
out
dec
in
int3
fsub
in
mov
sti
out
in
fst
mov
loope
loopne
shr
out
loop
mov
in
lret
into
fcom
ljmp
mov
cmc
stc
aam
add
ljmp
test
sti
shl
mov
mov
aad
in
sar
not
loop
inc
add
mov
mov
rcr
clc
in
mov
xlat
fistpll
loopne
fdivrp
loop
stc
out
loope
icebp
leave
jecxz
rep
shr
stc
mov
fcmovu
mov
sar
jmp
sti
fiaddl
scas
into
in
lock
xlat
aad
stc
in
div
mov
shl
jmp
or
fidivs
lret
jmp
mov
lock
cmc
ljmp
add
out
repz
fucomip
mov
fcmovnbe
sti
repnz
mov
fcmovnbe
ret
int3
loop
rol
ret
push
loop
jmp
mov
shl
call
leave
cli
enter
aam
push
shl
repnz
std
test
in
icebp
mov
mov
lock
hlt
ljmp
add
sti
cmc
xlat
fsubp
jmp
jecxz
out
lret
call
fadd
int
int
fst
ljmp
add
jmp
cmc
ror
mov
in
ljmp
fsub
std
out
or
add
shl
out
rol
out
not
fadd
fcom
push
sti
sti
sti
or
lsl
jmp
test
leave
ret
icebp
ljmp
shl
mov
clc
mov
add
iret
fcmovu
test
mov
loope
aam
in
repz
pmulhuw
fmul
or
loop
fucomip
loop
into
sti
mov
mov
repz
jecxz
cli
push
fst
add
enter
or
jmp
lods
ror
aad
mov
int
aad
xlat
xlat
roll
jecxz
fucom
add
leave
or
in
mov
rcl
leave
mov
mov
std
fdivr
sti
fmuls
or
iret
jmp
jmp
lods
rol
mov
fldlg2
aad
jmp
mov
add
hlt
aad
int
iret
push
mov
fnstsw
fcmove
leave
cli
cmc
mov
fcomi
rcl
push
add
pop
out
jecxz
lds
in
xlat
out
repnz
faddl
ffree
loopne
icebp
aam
fcmovbe
or
mov
ror
xlat
cli
mov
into
shr
into
into
cmc
fsubr
icebp
mov
filds
or
mov
not
rcl
mov
icebp
cli
int
ret
int3
out
les
stc
leave
sti
clc
cli
fcmovbe
fnstsw
fisubrl
rcl
out
fcomi
icebp
cmc
add
add
fyl2xp1
call
leave
lods
aam
cli
in
jmp
mov
mov
or
in
add
mov
fsubrp
in
test
in
cld
neg
sti
xlat
ret
sarl
jmp
or
repnz
mov
sti
fcomp
int
aad
mov
repz
fisttpl
xlat
add
ret
std
leave
int3
test
mov
mov
iret
mov
loope
mov
or
out
lret
rol
sarb
xlat
into
aad
add
add
cli
or
fnsetpm(287
add
std
loopne
into
mov
repnz
push
mov
enter
loop
vpaddb
add
or
in
mov
in
loop
into
aad
hlt
cli
repz
stc
loope
out
div
add
idivb
sarb
loopne
call
div
xlat
rcl
loope
in
repz
loopne
lret
sti
mov
call
lret
hlt
fld
icebp
xlat
clc
mov
xlat
jmp
ljmp
out
out
repnz
mov
fdiv
int3
cld
std
out
add
fiaddl
psubsw
in
in
lret
xlat
repz
hlt
rcl
bnd
stc
or
ffree
call
fcmovnbe
lock
fucomi
loope
clc
in
jmp
iret
cli
iret
jecxz
in
ror
loope
lret
fdivr
mov
fucomp
std
add
call
out
test
shl
vpor
jecxz
mov
int3
fcom
add
lret
int
add
mov
ret
in
fcmovnbe
icebp
lret
repz
sar
mov
into
lods
shl
jmp
in
hlt
lret
add
fldl
sarl
or
in
or
ljmp
rcr
vpsubusw
mov
stc
hlt
add
repnz
xlat
in
mov
fnstsw
movl
lret
clc
add
mov
out
mov
add
repz
add
mov
iret
xlat
shlb
enter
mov
cld
add
jmp
or
push
cmc
push
sti
or
jmp
enter
int
in
fsub
clc
mov
int
mov
loope
fsub
jmp
lret
lret
shr
repz
fdivrp
sti
lret
idiv
jecxz
push
ret
mov
add
or
int3
loopne
in
lods
mov
repnz
into
xlat
aad
in
mov
into
sar
fiaddl
call
mov
fsubrp
shrb
out
neg
shl
add
loop
sti
add
les
stc
push
stc
aad
stc
sarb
aam
cmc
mov
mov
int3
add
ret
cli
std
push
jecxz
mov
push
leave
fst
out
mov
xlat
hlt
lret
cmc
fcmovne
xlat
loope
mov
add
call
out
rol
in
loop
jmp
clc
enter
jecxz
cld
out
std
xlat
sti
jecxz
fcmove
loop
loopne
repz
jmp
out
int
aad
sar
lret
lret
cli
enter
std
loope
rol
lret
clc
leave
int3
mov
call
mov
lock
fadd
pop
cli
add
ffree
add
pop
add
add
repnz
mov
lock
in
jmp
dec
incb
mov
sti
stc
add
jecxz
test
in
rcl
in
into
into
mov
loop
loope
jmp
or
lret
mov
aam
iret
imul
not
ret
lock
icebp
fnstsw
sti
mov
pop
std
stc
scas
shrl
cmc
fxch
out
mov
ror
repz
rol
in
fldl
into
mov
ror
shl
lock
mov
sar
add
out
out
in
iret
lret
repz
cmc
shl
aam
mov
aam
sti
mov
or
call
add
leave
mov
lret
fsqrt
vpsubusw
mov
iret
out
stc
aad
lock
ffreep
add
lret
adc
mov
jmp
lods
mov
clc
mov
ret
add
prefetchw
or
loop
out
into
call
mov
ret
icebp
sti
lock
out
pop
in
out
in
in
out
mov
int
mov
add
clc
loope
push
add
lock
ret
fxch
cli
lods
out
div
xlat
ret
out
mov
fucomi
in
sti
icebp
cli
aam
fcomp
or
pop
cmc
fucomp
in
mov
not
iret
lods
out
in
mov
ljmp
rcr
not
aam
jecxz
or
out
ret
loopne
out
in
shll
add
add
in
push
jecxz
adc
loope
lock
call
icebp
clc
neg
add
repz
jmp
loopne
repnz
test
mov
jmp
lret
in
cli
test
aad
stc
fsubrp
ljmp
out
loopne
out
out
fldl2t
in
mov
aam
jmp
or
in
pop
ftst
cld
loop
lret
mov
jmp
mov
lret
aam
add
aad
add
in
fmulp
lret
cli
loope
into
iret
loope
mov
mov
mov
mov
clc
add
ret
mov
out
out
fnsave
ret
shl
mov
mov
enter
stc
cli
aam
add
call
add
call
in
out
mov
int3
pop
repnz
aam
mov
fmul
call
jmp
test
mov
add
mov
jmp
ret
lret
int3
ror
jmp
lock
ljmp
mov
repz
cli
ret
clc
aad
leave
into
add
ljmp
xlat
mov
idivb
out
add
mov
push
jmp
out
in
sti
mov
stc
out
mov
lret
mov
add
cld
fdivrp
call
loopne
call
mov
int3
sar
mov
out
add
loope
ljmp
jmp
jecxz
repnz
rol
in
call
mov
out
jmp
enter
into
paddb
ret
in
lods
hlt
jecxz
mov
rol
leave
mov
cld
icebp
mov
cli
lret
jmp
aad
or
in
out
ror
cmc
enter
leave
mov
in
aam
add
lock
add
cmc
fadds
or
push
or
scas
icebp
lods
loope
loop
shll
out
int
rcr
fnstcw
add
fldz
out
fmul
sti
mov
in
enter
mov
pop
decl
pop
test
into
mov
lods
shl
loop
ror
sti
mov
fneni(8087
loop
sar
cld
or
ficoml
fsubp
out
repz
test
lret
cld
clc
fdiv
repz
ret
mov
loopne
mov
and
add
ljmp
xor
add
mov
mov
mov
cmpl
jbe
jmp
lret
sub
shlb
inc
jnp
fidivrl
add
jmp
test
ret
mov
mov
ror
add
mov
lret
ret
push
or
in
add
out
in
div
mov
sti
int
mov
fstpt
sti
in
in
fucom
stc
std
lret
loopne
lods
scas
call
mov
in
aad
cld
clc
out
icebp
fucomp
rol
add
inc
jmp
mov
jecxz
int
shr
enter
cmc
flds
fistpll
aam
pop
aam
aam
or
cmpsb
iret
mov
mov
hlt
std
fucom
shll
aam
call
dec
movl
out
repnz
fdivl
fmul
out
ror
hlt
aam
jecxz
add
cli
ljmp
out
in
rolb
fidivrs
neg
fdivr
in
neg
fimuls
or
int3
enter
call
mov
xlat
out
flds
mov
out
clc
out
cli
std
call
repnz
lods
mov
jmp
mov
in
in
or
fucomi
push
enter
shr
mov
repz
xlat
imul
imul
stc
out
mov
icebp
repz
int
sti
std
icebp
loopne
loopne
aam
rcl
imul
idiv
std
lret
add
movl
fsub
or
std
push
int3
cmpsb
loop
jecxz
ret
test
in
mov
call
icebp
hlt
mov
loope
jmp
iret
leave
mov
mov
sarb
loop
std
pop
add
std
out
add
call
jecxz
lret
lods
imul
fidivrl
std
int
push
rcl
add
fcmovnu
leave
out
lock
out
stc
div
mov
mov
fdivrl
add
lret
out
loopne
lret
shl
int3
repnz
icebp
clc
cli
repz
add
mov
add
or
fst
cmc
xlat
stc
fisttpl
or
icebp
stos
lret
enter
mov
jmp
into
lock
movb
push
lock
leave
syscall
enter
lods
int
mov
ret
in
leave
mov
fiadds
int
pop
jmp
shl
inc
stc
fyl2x
out
int
mov
fdivrp
mov
incb
xlat
or
std
in
add
mov
fadd
mov
call
ret
cld
add
rol
aad
out
or
leave
lret
fsubr
movsb
lods
sti
cli
into
mov
jmp
test
out
loope
movb
hlt
rcr
les
fmuls
add
icebp
cmpsl
into
out
mul
scas
mov
icebp
rcl
aam
call
xlat
jecxz
rolb
idiv
loop
mov
hlt
div
divb
mov
mov
or
jmp
stc
mov
icebp
sti
mov
int
shr
in
std
push
out
aad
cld
lock
cld
or
loop
mov
hlt
into
stc
mov
mov
in
mov
stc
fadd
lock
add
stc
add
shl
into
or
out
in
mov
jmp
jmp
cli
repnz
fmul
lock
div
jecxz
cmc
or
faddl
or
in
out
ret
lods
aad
lods
repnz
into
hlt
sti
out
idiv
lret
in
incb
or
loop
loopne
loop
aam
aad
fcmove
fucomp
shll
add
add
add
add
mov
into
lock
ljmp
aam
clc
add
rcr
add
out
add
jecxz
rol
jmp
mov
ror
in
aad
fdiv
mov
loop
repz
lret
in
fiaddl
or
add
cmc
fdiv
leave
in
xlat
call
fdivrs
clc
or
in
cli
clc
jmp
loope
lock
mov
fdivrs
repz
mov
stc
out
iret
fsubrp
ljmp
lret
fdivp
enter
div
sti
fnstcw
fsubp
lret
sti
add
in
loop
ret
in
div
cld
cli
mov
rcr
lock
or
in
or
in
lock
iret
cmc
in
enter
xlat
fcmovnu
out
jecxz
fcomp
lock
sti
iret
or
loope
int
jmp
mov
mov
lock
clc
aad
std
cmc
jmp
fsub
call
adc
in
mov
in
jmp
lret
idiv
out
cld
mov
fdivrs
lret
fsubrl
iret
int
fcmovnu
ljmp
jmp
test
push
aad
loop
stc
enter
repnz
mov
stc
hlt
xlat
mov
fsub
lret
add
call
out
mov
mov
sti
repz
std
cmc
rol
mov
lret
fdivrs
loop
cli
xlat
int
into
jmp
out
mov
lock
fstp
add
fisttpl
lret
into
aam
cli
lock
fucomi
fadd
pop
cmc
fcmovu
icebp
lret
out
lock
cmc
mov
sarl
in
loopne
fld
int3
add
or
sti
decb
or
shl
lock
repz
jmp
mov
fcomp
or
add
in
int
cld
jecxz
scas
icebp
scas
out
in
aad
out
jmp
add
add
shl
fdivr
or
adc
int3
icebp
test
xlat
mov
leave
shl
mov
rcr
not
shl
push
fdivr
loop
add
out
out
in
shrb
enter
clc
mov
out
cld
jmp
add
iret
in
fmul
idivl
shl
mov
fnstsw
fsubp
or
fisttps
fdivrp
adc
shl
iret
in
iret
int3
loope
in
mov
mov
shr
fcomip
out
call
sar
ret
idivb
jecxz
ljmp
psllw
rcl
mov
sti
test
fcmovb
call
ret
add
in
fst
ffreep
movl
scas
lret
icebp
sarb
out
mov
int3
loop
lret
fadds
std
fistpll
lock
out
call
sarl
fimull
movl
fdivrl
mov
jmp
jecxz
mul
ret
test
or
loope
jmp
cli
out
int
into
out
loope
loopne
mov
mov
loop
fiadds
mov
clc
into
out
std
ror
repz
lret
mov
mov
int
lds
rcl
cmc
hlt
fst
test
or
or
test
enter
fstp
enter
ret
aad
not
fstp
rorb
pop
add
push
jmp
int
xlat
mov
out
fidivrs
xlat
fidivrs
aad
loop
stc
push
loopne
into
shl
mov
hlt
rcl
loopne
cmc
stc
mov
shll
lret
sar
out
in
call
fucom
neg
repnz
mov
mov
fucomip
out
ret
in
rol
aad
add
or
fmul
repnz
ljmp
dec
rcl
roll
fdivrp
fdivrp
out
fninit
mov
jmp
lods
mov
fsub
jecxz
ret
vcmpeqpd
stc
imul
or
fdivr
call
aad
call
sti
iret
stc
sti
inc
out
int
add
cmc
add
fmul
fldln2
loopne
mov
lods
fcmovu
mov
mov
fcomip
jmp
neg
loopne
add
add
repz
call
ror
mov
mov
sarb
loope
call
fdiv
aam
call
int
lret
out
out
imul
fdivr
jecxz
repz
int3
xlat
call
psubd
test
mov
sar
out
mov
fcmovnb
xlat
clc
hlt
add
clc
enter
fcomp
out
repz
lods
out
aam
fdiv
aam
ret
add
loop
add
ret
jmp
std
leave
int
lret
lock
loop
lret
mov
std
stc
mov
aam
cmc
faddl
fmul
out
pop
or
or
out
xlat
int3
call
in
in
fcomip
neg
into
repnz
pop
faddp
call
fdivr
shl
into
mov
out
fucomp
push
add
fiadds
fstpt
out
out
lret
enter
iret
mov
repz
clc
icebp
int3
mov
icebp
fiaddl
stc
clc
add
out
in
repnz
sarb
sti
out
std
add
into
repz
rolb
loop
out
call
out
movsl
ljmp
mov
mov
mov
fcmovnbe
add
fldl2t
aam
cli
add
out
rol
xlat
sti
jmp
repz
mov
aad
hlt
fldl
push
add
push
or
sti
in
out
test
in
mov
in
neg
shl
int
fstp
shl
in
sti
aam
fnstsw
out
jmp
cmc
ret
into
mov
ljmp
ret
add
add
clc
into
leave
loopne
scas
mov
repnz
in
in
stc
int
mov
mov
or
add
add
lock
rcl
lret
hlt
mov
lock
dec
aad
in
pop
loop
fsubr
or
push
int3
mov
stos
ret
repnz
mov
cmc
mov
stc
shl
cli
or
loope
in
mov
aad
jmp
rcr
cli
idiv
ret
ret
aad
jmp
leave
lret
add
fsub
shl
lock
mov
clc
shr
mov
idivb
cld
in
rcr
xlat
mov
jmp
fdivrp
iret
ret
in
shl
in
aam
add
add
or
cld
mov
lods
mov
out
shll
not
clc
mov
loope
lret
jmp
lret
fidivrs
iret
mov
call
mov
or
add
add
loop
mov
leave
jmp
mov
mov
jmp
fcmovu
roll
aam
mov
push
sti
or
or
call
ljmp
into
mov
rcr
mov
loope
or
stc
loopne
out
shr
ljmp
aam
mov
fcmovnu
aad
cli
decb
mov
into
in
test
lret
mul
clc
cld
idiv
in
sar
out
fsubrp
or
clc
jecxz
ror
fucomip
lret
loopne
scas
mov
neg
cmc
ret
shl
hlt
pop
add
fidivrs
decb
ret
into
mov
fcos
enter
fdiv
clc
jmp
add
ljmp
in
mov
iret
in
shl
mov
out
rolb
fcmovb
std
neg
enter
lods
in
mov
mov
jmp
mov
xlat
hlt
repnz
not
jecxz
out
clc
lret
push
std
fsubrp
jmp
ljmp
mov
into
incb
stc
lret
jecxz
hlt
push
sti
in
or
enter
xlat
call
jmp
aam
pop
mov
jecxz
lret
int3
ftst
iret
out
shl
ror
shr
stc
call
int
loope
fiaddl
shl
flds
aad
or
sti
or
cmpsb
rcl
shr
fidivrl
fidivrl
hlt
cli
stc
jmp
in
rol
mov
into
lret
out
mov
cli
jmp
add
fucomp
ret
add
lret
test
in
lods
rcl
mov
mov
int
fsubp
hlt
mov
clc
inc
push
jmp
fincstp
cli
jecxz
jecxz
mov
mov
enter
jmp
not
mov
add
lock
add
scas
repz
in
mov
rcr
test
rol
add
in
add
in
loope
sar
out
in
aad
shl
enter
fcmovb
mov
add
stc
ror
loop
out
jecxz
scas
mov
mov
mov
add
cld
xlat
rolb
lret
or
pop
ret
lret
cld
lret
out
in
out
lock
enter
mov
lret
mov
aam
sti
xlat
add
ffreep
fsubr
in
out
ror
int
hlt
rcr
int
out
lret
xlat
lock
loope
clc
into
adc
fsub
fmul
in
mov
iret
in
in
ror
jmp
add
int3
jmp
lret
test
ret
loope
lds
mov
lock
loop
or
add
leave
jmp
scas
into
shrl
fsubr
rcr
aad
loopne
ret
lock
loop
cli
aam
lret
icebp
in
mov
mov
mov
mov
mov
lock
loope
lock
repnz
in
jmp
ljmp
sar
fadd
cli
jmp
in
xlat
imull
mov
cli
hlt
hlt
mov
fcomi
fstpt
out
pop
cli
add
repz
loope
ror
lock
call
mov
add
lock
mov
clc
adc
loop
jmp
mov
fucomi
loope
filds
loope
out
std
add
filds
ret
jmp
imul
out
fdiv
aad
aad
mov
stc
in
lret
lods
loopne
stos
loope
in
mov
jmp
lock
shl
leave
out
ret
or
ljmp
call
leave
ljmp
mov
call
incb
ljmp
mov
aam
sar
add
jecxz
add
mov
lret
add
push
adc
loop
mov
repnz
icebp
mov
xlat
rcr
test
ret
loope
aam
cli
fcmovu
lret
out
lret
ret
xlat
mov
clc
add
test
rol
mov
loope
in
loop
mov
ljmp
jmp
cld
clc
xlat
sarl
stc
aam
adc
mov
mov
lods
loopne
in
repz
mov
add
shl
incl
ret
rcr
jmp
divb
sti
stc
in
lret
repnz
mov
int3
ffree
rcr
cli
les
leave
add
test
fmul
ljmp
rol
add
neg
mov
stc
sti
lret
or
aad
out
add
lock
leave
int3
in
into
cmc
shl
in
loop
or
fmul
jmp
mov
test
in
mov
jmp
add
ret
loop
stc
add
xlat
imul
jmp
in
mov
ljmp
cli
add
filds
ret
add
cld
cmc
cmc
cli
add
pop
in
loope
into
ret
in
xlat
fsubr
aad
ljmp
fadd
fcmovb
out
in
decl
test
icebp
ret
icebp
cli
in
leave
not
mov
sti
fmul
add
rorb
mul
add
fucomip
stc
fnstsw
ror
repz
xlat
mov
std
fsubrp
mov
add
cmc
loope
out
add
cld
or
mov
jmp
mov
mov
mov
repnz
mov
rol
add
test
out
lds
mov
mov
lret
fdivp
cli
mov
lock
add
loope
fcmovnu
loopne
mov
loop
lret
lds
fxch
mov
in
add
or
out
sti
in
or
shl
imul
rol
out
lret
in
add
out
icebp
sar
loopne
or
into
sti
or
ljmp
rcl
mov
enter
inc
std
fdivr
xlat
in
shl
cli
in
enter
jecxz
cli
int
mov
std
neg
mov
xlat
icebp
sti
repz
aam
in
fprem1
call
in
in
int
fcmovnb
in
out
sarb
xlat
cld
or
cmc
add
or
repnz
enter
stc
mov
in
in
clc
aam
in
cld
enter
call
aad
scas
cmc
loop
mov
lret
mov
in
out
flds
leave
loop
enter
call
shl
sti
loopne
shr
mov
mov
add
hlt
ret
neg
out
or
in
or
in
icebp
loope
ror
repz
out
ret
mov
div
add
fucompp
decl
or
fstp
repnz
leave
call
les
xlat
add
ret
rorl
in
push
sti
ljmp
mov
scas
in
rcr
fdiv
int
mov
add
in
lret
iret
or
mov
mov
in
sarb
test
add
or
cli
or
mov
int3
rol
mov
ljmp
add
leave
fadd
stc
fucomip
mov
loop
out
out
mov
std
stc
std
fdivrl
fstpt
out
or
or
call
hlt
out
in
std
in
aam
mov
lret
loopne
add
in
in
in
ret
mov
ret
shll
cmc
cli
enter
add
icebp
jecxz
call
rcr
lret
out
jmp
push
test
in
push
stc
add
out
stc
sti
testb
decb
into
out
fcom
in
mov
out
rcl
mov
repz
into
stc
lds
icebp
enter
push
jmp
mov
in
int
rcr
int
std
rcr
mov
sar
incl
add
ficoms
repnz
fdivrl
out
int
mov
cld
jmp
not
lock
rcr
lret
push
fmul
std
or
fdivrl
scas
mov
lret
into
jmp
add
mov
out
push
iret
pandn
lods
lds
fbstp
test
inc
stc
in
loopne
enter
in
rcr
shll
icebp
cmc
fdivrs
fnclex
repnz
aad
inc
or
jmp
rcl
shlb
sarl
xlat
in
out
shl
fsub
fsubp
in
or
repz
enter
mov
lret
rcl
clc
mov
mov
sarb
cld
int
push
add
int
in
shr
mov
int
ret
shl
sarl
std
add
in
enter
shll
in
mov
loopne
mul
shl
jmp
add
ret
out
mov
mov
mov
add
clc
flds
mov
jecxz
repnz
mov
mov
xlat
std
jmp
sarl
cmc
std
add
leave
loopne
rol
call
dec
mov
loopne
cld
add
fdivr
lret
incl
ror
iret
lret
mov
jmp
int3
mov
hlt
repnz
out
clc
cld
into
std
icebp
mov
shl
fadd
lret
loopne
cld
ret
add
call
in
add
jmp
fildll
in
int
shr
rol
jecxz
mov
fsub
or
out
in
jecxz
lods
in
ror
icebp
mov
vpaddusw
into
mov
loope
loop
loope
or
sti
cld
test
mov
mov
cli
call
mov
test
add
jecxz
shl
in
mov
mov
fdivrl
fstp
lock
add
out
or
enter
mov
int3
aam
cli
leave
aam
int3
sarl
mov
hlt
stc
clc
or
loope
push
ffree
out
out
out
clc
out
mov
sti
call
in
jmp
pop
enter
mov
mov
fcmovbe
icebp
imul
mov
push
ffree
call
fsubrl
lock
out
lret
mov
in
mov
push
sar
in
out
aad
cli
ljmp
mov
into
fcmovnbe
hlt
mov
in
loopne
test
in
int
push
test
lods
mov
mov
xlat
mov
xlat
aad
not
shl
sti
testl
div
stos
out
out
aad
in
sar
in
fcmovnb
or
xlat
enter
mov
sti
shll
filds
int
fxch
out
jecxz
or
inc
in
or
fcmovne
jmp
in
mov
in
mov
int
fcmovbe
aam
rolb
mov
aam
enter
rcr
lret
rcl
mov
std
cmc
out
in
fcomip
add
fmulp
cli
ffree
mov
mov
mov
enter
loopne
sti
jmp
loop
or
add
int
add
int
call
icebp
icebp
fcomi
cld
rcr
jecxz
repz
hlt
filds
add
lock
loope
scas
mov
cmc
in
fsubr
in
loopne
fsub
fcmovnu
cld
ret
loop
in
int3
loope
in
repnz
hlt
icebp
sti
mov
out
loop
repnz
flds
jmp
jmp
mov
enter
fdivl
repnz
lock
icebp
add
mov
mov
xlat
jmp
shr
shrl
cli
stc
movl
testb
push
or
repz
out
mov
repnz
lock
out
shl
mov
int
mov
call
std
or
scas
in
mov
aam
enter
sar
mov
in
cli
in
lret
into
stc
fldcw
in
clc
lock
sarl
std
or
or
loop
repz
enter
loop
out
clc
into
lret
stc
mov
loopne
mov
push
adc
fsubrl
in
mov
mov
push
jecxz
leave
out
mov
test
rcr
lret
mov
fdiv
out
add
cmc
iret
rol
ljmp
mov
aam
ret
add
shl
fdivrp
in
or
pop
push
push
roll
loope
into
loope
out
ror
stc
in
jmp
in
xlat
std
fcmovbe
out
div
lock
fcmovu
cld
int
shr
aam
mov
rcl
hlt
out
in
out
test
or
ret
rol
int3
in
fcmovnu
stc
jmp
clc
ljmp
cli
aad
aam
aam
call
shl
lock
ret
in
out
sti
ret
ljmp
call
int3
out
in
in
scas
mov
cli
mov
ret
mov
pop
shl
out
loop
sti
in
out
lret
hlt
jmp
int
shl
cli
hlt
in
xlat
cli
loope
push
add
ljmp
loopne
shr
scas
shll
std
aam
out
iret
iret
in
shl
jecxz
push
cmc
aam
in
jmp
lock
lds
cmc
int
mov
mov
cli
sti
pop
std
xlat
iret
aad
or
repnz
aad
in
fcmovu
pushl
ret
cld
jmp
lret
les
cli
fmuls
repnz
scas
jmp
cli
leave
mov
xlat
std
aad
or
cli
fimuls
in
in
in
in
in
out
aam
mov
push
clc
ret
add
fld
shl
out
cli
or
out
fadd
out
loope
xlat
repnz
cld
rolb
out
rcl
into
loopne
mov
sti
in
enter
rcl
rcl
stc
mov
repz
lret
int3
xlat
into
mov
clc
or
add
call
fsub
icebp
iret
loope
mov
mov
aam
fld
lock
loop
cli
xlat
lds
movb
out
mov
ret
mov
mov
fcmovnbe
aad
aad
fdiv
ret
push
add
xadd
pop
fucomip
add
ret
mov
loopne
int3
in
in
cli
ror
aam
stc
in
iret
loop
mov
fdivrs
jmp
hlt
clc
iret
cli
mov
stc
lock
mov
add
hlt
hlt
fcmovnu
sti
or
ror
vpaddq
mov
rcr
sar
fmul
loope
out
xlat
mov
loope
add
rorl
jecxz
out
mul
loop
mov
hlt
int
fprem
ret
rcr
sti
mov
call
hlt
out
loopne
lret
out
mov
cmc
out
imul
add
xlat
int
mov
in
in
les
add
ud1
loop
out
cmc
enter
fnstsw
clc
rol
clc
add
hlt
cld
aam
fsubp
in
mov
jmp
lret
repz
in
mov
xlat
ret
pop
loopne
add
enter
in
repnz
xlat
hlt
rcl
fmul
xlat
mov
jmp
mov
jecxz
enter
enter
jecxz
lret
shl
mov
mov
into
into
shl
dec
push
sar
shl
out
jecxz
lods
mul
clc
xlat
shl
mov
rcr
rol
testl
jecxz
repnz
mov
ljmp
in
rcr
int3
inc
lret
fld1
push
loopne
out
lods
aad
jmp
int3
out
mov
into
faddl
repz
lock
std
ljmp
loop
call
neg
lock
repnz
shll
lret
fcmove
pop
leave
out
mov
shrl
in
int3
lret
call
hlt
faddl
lret
loop
in
cmc
sti
lret
or
jecxz
ret
mov
mov
repnz
aad
jmp
lds
call
adc
in
mov
shr
rcr
xlat
in
lret
fstp
idiv
add
jecxz
jmp
ret
or
pop
repnz
jmp
call
in
jmp
mov
fstpt
ret
pop
ret
push
aam
pop
lds
in
int3
mul
in
loope
ljmp
cmc
add
cld
add
cld
fsub
cld
leave
std
icebp
mov
sar
fmul
ljmp
int
mov
sti
lret
in
or
rol
mov
out
mov
enter
shl
aam
mov
or
into
clc
iret
int
mov
in
loop
ljmp
int3
loope
ret
cli
or
fsubrp
enter
lock
fcmovnbe
ljmp
mov
loope
jecxz
jecxz
jmp
fisttpl
pop
ffree
lret
call
out
mov
out
mov
inc
ljmp
in
lds
lret
icebp
rcl
lret
jecxz
mov
add
lret
out
int
bswap
mov
in
aam
enter
div
dec
cld
mov
ljmp
fidivs
in
mov
jmp
cmc
add
add
add
in
bswap
pop
in
shr
mul
lret
shll
cmc
cli
repnz
repnz
xlat
out
faddl
jmp
call
lods
int
stc
mov
repnz
loop
jmp
out
out
or
out
lods
jmp
mov
lret
push
in
add
cmc
sti
in
push
int
fsubp
ret
fdiv
lods
aam
lret
xlat
clc
ror
fucomip
shr
add
movl
mov
int
cli
aam
mov
mov
cli
add
sti
sti
add
in
call
vpand
jmp
ret
cli
clc
std
out
in
or
hlt
aad
mov
mov
neg
loope
aad
fucom
ljmp
vpaddsw
out
mov
fidivrl
add
lock
add
pop
jecxz
int
out
test
repz
test
clc
mov
ffreep
pop
in
or
or
out
aad
dec
into
int
aad
out
mov
leave
in
into
flds
iret
ret
stc
add
mov
out
jmp
leave
decl
or
ret
in
mov
cli
mov
scas
int
lock
mov
fdiv
idiv
loope
pop
repnz
mov
lock
cli
imul
leave
repnz
fnstcw
shl
cli
movb
xlat
sarb
out
mul
out
fdivrs
int
shl
ljmp
dec
test
xlat
fnsave
out
int3
mov
mov
fneni(8087
jecxz
add
or
leave
lock
mov
icebp
jmp
hlt
out
loope
out
add
rolb
out
leave
add
lods
ret
mov
mov
scas
lods
shl
lret
lock
std
shl
fcomi
loopne
xlat
or
int3
in
shll
mov
aam
mov
cmc
sarb
mov
imul
les
cld
add
in
mov
mov
repnz
in
fdiv
fcmovne
ret
lock
fldl
or
add
flds
cld
iret
lret
loopne
enter
mov
jecxz
jecxz
loope
rcl
in
in
std
fiaddl
repnz
test
ret
scas
mov
int
aam
in
xlat
cmc
jmp
or
scas
mov
jmp
enter
cmc
into
iret
fcmovnu
shl
in
decl
idiv
hlt
cli
sti
out
mov
in
out
repnz
aam
fdivp
lock
int
fadd
cld
add
rcr
loop
add
or
aad
fnstenv
mov
mov
add
add
out
scas
mov
mov
fidivrl
add
cmc
fld
stc
lock
loop
add
ljmp
rcl
out
jmp
into
idivb
rcl
xlat
cmc
lret
loop
out
stc
or
lret
shr
shr
out
fscale
fsubr
jmp
aam
pop
fstp
lock
int3
ret
mov
loopne
enter
mov
fst
clc
stc
in
jmp
frstpm(287
in
lret
les
lock
mov
out
lock
out
add
push
fldl2t
flds
iret
out
fadd
push
out
loop
fsubrp
mov
icebp
enter
mov
xlat
mov
add
lret
or
add
out
loope
shll
out
iret
mov
into
icebp
add
icebp
lock
mov
mov
aad
iret
int3
fcmove
mov
in
fldl
mov
mov
push
or
int3
out
mov
sti
test
int
mov
hlt
ret
sti
mov
out
incl
int3
fsubp
lock
int3
xlat
out
ror
out
int3
add
in
enter
mov
ret
lret
add
add
int3
shlb
mov
lret
hlt
fmul
mov
push
mul
add
hlt
aam
cld
rcl
mov
jmp
ret
rol
leave
int3
icebp
jmp
call
in
repnz
repz
fadds
sti
lret
fmul
out
fmulp
repz
iret
aad
in
in
int3
iret
idivl
neg
fucomi
jecxz
or
in
out
loopne
iret
not
les
not
add
pop
fdivrp
in
fyl2x
loopne
cld
hlt
adc
jecxz
mov
out
cli
in
lret
jmp
sarl
push
std
aam
cmc
or
cli
or
ret
loop
shr
enter
std
mov
cmc
mov
testb
out
loope
repz
out
in
cmc
int
fxch
clc
repz
mov
rorb
push
cld
fstp
jecxz
fmulp
in
in
int
loopne
loopne
mov
mov
shr
out
add
or
rol
repnz
ror
mov
mov
int3
imul
rcr
loopne
rol
lret
fucomp
fsubp
out
add
iret
into
call
rcl
cli
neg
add
add
out
in
ljmp
ret
int
stc
ljmp
lock
cli
sti
add
iret
ret
fdiv
fnstsw
shr
aad
out
leave
stc
clc
in
fdecstp
jmp
ret
out
lret
add
adc
enter
lods
mov
int3
out
iret
rcr
cmc
hlt
fmul
aam
loopne
flds
lock
push
ret
call
loop
leave
in
std
out
icebp
fucomp
cld
stc
out
int3
shl
clc
add
jmp
out
add
mov
int3
loopne
shl
out
aad
loop
pop
fcmovbe
add
add
out
ror
push
stc
mov
mov
cld
faddl
mov
icebp
loop
sti
fimuls
fists
flds
mov
test
int
aad
rol
int3
fcos
testb
aam
adc
in
iret
test
out
out
fucomip
into
ljmp
mov
add
call
lret
out
fcmovu
jmp
in
mov
dec
fchs
add
loop
std
in
int
loope
iret
mov
enter
mov
iret
in
loopne
repnz
push
in
icebp
lock
lds
decl
incl
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
cmpl
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
mov
jmp
mov
insb
icebp
je
pop
rolb
enter
inc
jp
add
shr
enter
mov
sar
rorl
lret
loope
cli
in
or
out
repz
fst
loopne
call
aad
lret
into
fmul
mov
in
into
loop
jmp
out
fcmove
not
lret
fcmovbe
shl
cmc
int
cli
aam
faddp
hlt
in
out
loopne
mov
hlt
jecxz
mov
jmp
out
into
fcmovnb
icebp
loopne
shl
push
or
fists
loop
in
lock
in
hlt
call
fcmovb
repnz
roll
loopne
leave
adc
fcmove
into
out
int3
mov
out
mov
in
out
loope
cmc
pop
stc
stc
out
lods
repnz
call
cmc
clc
leave
fdivr
fidivrs
out
in
icebp
out
out
stc
clc
std
adc
jecxz
loop
lret
lret
iret
sti
loope
iret
rol
in
cld
xlat
mov
loop
fldl2e
ret
lret
mov
sar
lock
cmc
cmc
push
std
sti
fcmovnb
iret
loopne
into
sarl
into
shl
shl
call
mov
std
add
hlt
ljmp
out
out
out
repz
fldt
mov
mov
out
shr
cld
fmulp
add
into
lock
shlb
enter
jecxz
in
shl
repz
mov
jmp
ljmp
aad
neg
iret
mov
in
aam
mov
cmc
icebp
add
out
jmp
out
lods
enter
iret
out
mov
flds
fdivr
shr
int
sar
hlt
jmp
pop
add
jmp
fdiv
into
out
ret
mov
fsub
ror
mov
add
ret
jecxz
out
jmp
or
lret
call
lock
sti
out
out
xlat
in
divl
mov
call
lret
icebp
loopne
icebp
loopne
jmp
repnz
loopne
loop
lds
add
call
not
call
fstp
in
aad
in
aad
mul
fdivrp
div
ljmp
call
cli
repnz
jmp
out
jecxz
xlat
fiadds
aam
push
or
jmp
mov
div
leave
loop
ljmp
call
fcmovu
push
mov
or
in
pop
iret
lods
mov
lret
in
shr
hlt
cli
in
into
roll
add
fcomip
aam
cmc
hlt
jmp
out
enter
jmp
in
int3
iret
mov
in
leave
jmp
std
fnstcw
stc
repz
cld
mul
fcmove
loop
xlat
scas
out
jmp
cld
xlat
mov
not
add
jecxz
push
add
fdivr
loop
add
call
shrl
lret
mov
stc
add
push
jmp
int
shrl
test
icebp
ror
add
add
mov
or
leave
mov
aad
shr
lods
lock
mov
out
loop
jmp
out
or
mov
cmc
ror
xlat
in
mov
add
aam
fidivrl
hlt
fcmovnu
ror
in
cmc
mov
xbegin
in
leave
cli
in
sti
repnz
add
add
in
lret
iret
out
ror
fsubrp
jmp
lret
iret
jecxz
mov
in
clc
les
add
ljmp
leave
shll
clc
mov
mov
aam
std
ljmp
rcr
mov
jmp
mov
lret
icebp
loope
rol
cmc
jecxz
in
jmp
xlat
mov
stc
in
out
mov
xlat
add
mov
aam
or
lret
push
fucomip
in
stos
mov
mov
out
mul
xlat
shlb
fisttpll
sar
add
or
mov
repnz
aam
cld
mov
shr
fsubp
paddsw
mov
lret
repnz
stc
into
xlat
in
fstpt
fadds
incb
aad
fiadds
loopne
add
mov
lret
in
call
mov
shl
repnz
std
cmpsl
mov
int3
not
in
in
mov
mov
in
fcom
sar
or
fdivr
out
lret
mov
leave
clc
jmp
lock
int
cld
fadd
idiv
or
inc
stc
into
fucomip
fildll
mov
cmc
xlat
stc
mov
iret
cmc
cld
rcl
rcr
add
loopne
ljmp
ror
shl
in
shr
scas
mov
out
std
lock
mov
icebp
faddp
fcmovne
cli
lret
repz
int3
ljmp
xlat
mov
sarb
rcl
push
or
scas
fadd
fst
repnz
int3
icebp
in
mov
sarb
rcl
xlat
rcl
clc
iret
or
std
call
in
mov
stc
add
hlt
aam
mov
mov
out
ljmp
xlat
stos
mov
std
push
out
in
mov
cli
add
cli
neg
add
out
icebp
int3
loop
aad
aam
shr
mov
fildl
int3
sti
ret
mov
shl
or
loope
out
in
loop
ror
lock
mov
sti
mov
dec
cmc
mov
add
sar
lock
fstp
ret
ret
xlat
repz
fdivrl
in
xlat
std
mov
fildl
ljmp
mov
mov
fdivrs
add
or
out
aam
out
fisubrs
shl
lret
iret
aam
rcr
test
push
fsubr
cmc
push
in
into
call
lret
repz
repnz
mul
repz
sar
xlat
out
enter
into
icebp
mov
ret
jmp
lods
in
mov
int3
std
hlt
loop
rcl
rorl
clc
lock
std
sti
in
add
lds
mov
repnz
iret
mov
fnstsw
not
iret
jmp
jmp
in
cmpsb
lret
mov
mov
repz
imul
clc
sti
jmp
roll
push
or
int3
or
fdivs
imul
les
ret
xlat
loopne
mov
rcr
fildl
in
shrl
in
xlat
cmc
mov
add
icebp
jmp
clc
or
inc
add
loop
scas
lret
loop
mov
icebp
mov
ret
sti
into
rol
lds
in
shl
out
leave
int
mov
mov
idivl
repnz
aam
in
add
add
loop
add
cmpsl
not
mov
aad
mov
fadd
iret
mov
add
cld
idiv
add
int
lods
cmc
aad
ljmp
fldlg2
int
out
rol
loopne
or
cli
out
in
ffreep
jecxz
mov
shrb
lret
mov
fyl2xp1
lret
in
fldl
ret
push
loope
enter
icebp
in
out
push
lock
repnz
neg
div
out
fsub
out
leave
leave
jmp
jecxz
sarb
sti
call
in
pop
sar
aad
pop
in
add
push
add
cmpsl
mov
sti
rcr
mov
sar
fdivr
repnz
pop
cli
int3
mov
testl
jmp
lret
lret
ror
stc
in
mov
sar
push
loopne
ret
out
mov
lods
jecxz
fidivs
shr
rcr
sarb
in
fcmovnu
jmp
ljmp
out
into
out
out
aad
repz
sti
loope
add
aad
testl
scas
test
mov
mov
into
ljmp
mov
in
clc
hlt
faddl
loope
ret
ffree
out
shl
shlb
fcom
mov
shl
shl
or
push
jecxz
repnz
in
int
lock
cld
hlt
mov
out
out
or
in
out
loop
cli
loope
aad
mov
into
loope
fucomip
imul
fnsave
in
out
fsubp
in
or
lret
in
int
in
int3
cmc
loope
shr
lret
repnz
fmul
out
icebp
rcl
in
cld
movb
repz
mov
mov
mov
xlat
shl
clc
push
aad
sti
lret
jmp
out
repnz
rcl
ljmp
clc
shl
push
add
or
xlat
cli
fisttpl
mov
mov
in
clc
mov
into
out
fiaddl
ffree
pop
mov
in
scas
not
in
leave
iret
icebp
stc
iret
in
mov
in
vpsubd
add
fnsave
mov
lods
lret
sti
mov
sti
cld
loope
in
add
cld
ror
ljmp
div
mov
in
mov
loopne
aam
mov
push
leave
iret
aam
add
shl
lods
int
mov
test
iret
icebp
ret
or
shr
enter
jecxz
loopne
mov
into
rol
mov
lock
xlat
in
in
fiadds
in
int
cld
fsubp
add
repnz
call
stc
lret
add
add
or
mul
fucom
in
in
int
cmpsb
int3
xlat
cli
iret
icebp
cmc
cli
in
out
icebp
out
icebp
leave
rcr
stc
call
loopne
fimuls
adc
rol
call
loope
jmp
out
mov
clc
in
add
sti
clc
add
aad
push
fdivrp
jecxz
test
in
mov
in
mov
fstp
fldl
lret
repz
shr
loop
in
hlt
call
aad
ret
in
shl
add
repnz
ret
lret
std
iret
jmp
rep
cmc
loope
fcomp
lock
ror
cli
loop
fcmovbe
out
fdivr
or
repnz
test
lret
lret
aam
out
cmc
not
aam
sti
clc
hlt
fucom
add
fdivrp
in
shl
ret
lret
jmp
shl
fstp
xlat
fnstcw
div
mov
incb
out
adc
into
test
imulb
fnstcw
int3
int
std
ret
add
pop
std
loopne
in
or
repnz
out
loope
test
int
out
lret
mov
clc
add
loope
loope
paddw
int
scas
ret
aam
neg
out
out
mov
add
out
cli
jecxz
or
or
fst
fdiv
mov
mov
repz
loopne
rcr
add
out
add
lret
int3
repz
mov
call
mov
jmp
ret
cmc
fcmovnu
out
out
in
int3
call
loopne
cli
fidivrs
out
out
add
shl
aam
lret
call
shl
loopne
icebp
jmp
stc
in
cli
int3
mov
clc
in
mov
loop
fdivr
leave
scas
jmp
in
jmp
mov
mov
into
flds
mov
lret
std
out
loop
loope
mov
repz
icebp
loopne
mov
fnstcw
sar
lock
lret
add
iret
lods
enter
jmp
cmc
mov
in
cmc
lret
fstp
fadd
fst
rolb
lret
add
iret
loopne
fucomi
rcl
fcmovnb
in
enter
mov
xlat
ret
lret
lret
clc
lret
int3
repz
repz
call
into
lock
cli
aam
cld
fdivp
ret
enter
into
int
ljmp
lret
shl
lock
mov
imul
cli
cli
idiv
jecxz
add
loop
out
push
rcl
icebp
mov
mov
into
cld
cmc
mov
int3
test
rol
iret
repz
out
xlat
rcl
loopne
lock
leave
lret
lock
ffree
fsub
aad
cld
aad
rcr
aam
rol
idivl
in
mov
sti
mov
hlt
fildl
int3
out
in
mov
hlt
rcl
out
in
in
rcl
lock
cli
mul
in
mov
cld
or
iret
fstp
lods
lret
mov
sar
call
call
movl
out
leave
into
loop
lods
div
mov
enter
jmp
mov
imul
imul
loop
loope
add
add
lret
ljmp
jecxz
aam
into
mov
iret
fcomip
mov
add
jecxz
mov
out
mov
into
ret
jmp
mov
call
clc
sti
repnz
into
add
neg
in
add
pop
out
repz
call
call
lret
fdivr
aam
int
icebp
hlt
out
loop
push
call
int
mov
ljmp
loop
aam
loopne
fcomp
lock
mov
out
cli
ret
test
out
out
aad
mov
clc
fcomip
std
fidivrs
loop
lret
in
les
shr
int
mov
dec
fcmovnbe
ror
ret
hlt
add
ftst
fmul
fsub
add
lret
les
mov
mov
mov
mov
std
fsub
or
out
fadd
lret
in
loop
iret
mov
stc
iret
sti
mov
repz
jecxz
in
sar
lock
fsin
add
enter
jmp
int
out
lock
out
loop
aad
ret
inc
out
out
out
adc
mov
mul
shl
mov
into
enter
shl
sti
loope
pop
shr
repz
cmc
into
lret
mov
iret
into
fstpt
ret
shl
add
out
add
in
int
iret
mov
mov
mov
in
jecxz
fnop
fdivr
cli
fcomip
jmp
into
add
adc
repnz
in
call
shl
fcmovnb
mov
push
mov
in
ljmp
rol
call
hlt
fucom
fcmovne
mov
clc
fscale
xlat
xlat
or
loop
add
out
lods
mov
sti
in
jmp
idiv
idiv
in
jecxz
stc
add
icebp
cmc
leave
dec
call
repz
in
mov
out
cli
ret
add
rcl
jecxz
fnstsw
shl
add
iret
stc
fsubr
scas
jmp
ror
mov
std
repnz
loope
sar
int3
fsub
jmp
out
fdivl
ljmp
fnstcw
int3
mov
rorb
decb
jecxz
lods
int
ret
out
repz
jmp
fdivr
mov
pop
imul
lret
sti
std
into
in
out
lods
out
not
hlt
mov
int
fldln2
cli
fcmovnb
repnz
lret
or
shl
loope
lods
out
ror
test
std
ror
into
xlat
repz
lds
cmc
cld
int3
out
movsl
mov
int3
loope
leave
clc
aam
repnz
jecxz
mov
add
out
cld
lret
add
clc
adc
mul
rcl
scas
int
clc
sar
mov
fcmovbe
jmp
ret
enter
out
cli
fyl2x
fucomp
int
loope
mov
sti
shl
ret
cmc
in
shl
ljmp
jmp
shrb
fcmovnbe
sar
enter
icebp
out
rolb
sti
xlat
leave
hlt
fsub
cli
push
or
lret
ffree
out
mov
in
int3
cmc
mov
aam
repnz
clc
aad
loope
incb
or
in
in
mov
mov
mov
fcomp
mov
testb
int3
out
pop
hlt
ljmp
shrb
lock
lret
ljmp
neg
div
mov
fisttpll
lods
shl
test
mov
loope
cmc
into
shl
add
or
clc
lret
ffree
mov
loopne
shl
jmp
mov
add
rol
mov
add
testb
fcmovnu
mov
ret
into
in
out
icebp
lock
shl
fprem
mov
loope
pop
fldln2
lds
cmc
in
icebp
in
into
mov
cmc
mov
ffree
mov
out
iret
int3
or
enter
ljmp
lock
out
cmc
jecxz
add
loop
stc
dec
std
out
mov
loop
lret
in
fyl2x
repnz
ret
mov
loope
fsub
flds
std
clc
or
in
mov
aam
leave
shl
ror
int3
aad
int
clc
or
cmc
std
cli
fadd
ljmp
cmc
jmp
fcmovnu
lret
fcmovnu
in
out
shl
rcr
cmc
aad
lret
in
cli
iret
shrb
mov
shl
shl
shl
in
cld
fcmovnbe
in
fstp
jmp
in
imulb
shr
test
clc
mov
icebp
mov
or
loop
ret
neg
hlt
ror
cmc
hlt
mov
ljmp
rcr
out
mov
int
enter
lret
fsubrl
lret
fucom
jmp
neg
faddp
clc
loope
cli
ljmp
into
lret
enter
rcl
repz
out
repnz
in
aad
lds
add
repnz
mov
sarl
call
stc
in
fcomi
or
push
add
out
fld
out
jecxz
mov
out
lret
in
mov
sti
jmp
mov
out
std
add
fdiv
out
mov
aam
mov
hlt
out
ret
loop
mov
out
enter
in
rol
lock
hlt
stc
leave
mov
ret
cmc
cli
ret
sar
incb
aam
mul
loop
add
xlat
mov
mov
idiv
in
cli
cld
mov
pop
add
cld
add
or
scas
ret
in
mov
ror
mov
fcmovnu
add
add
add
or
out
aam
in
clc
or
loop
jmp
ljmp
mul
add
out
fcmovb
call
push
pop
add
lock
aad
shl
jmp
rol
fcomp
out
div
into
shl
clc
vcmpss
cli
push
lret
mov
lock
int3
in
into
lret
jmp
into
mov
add
faddl
cli
decl
loopne
lret
out
shrb
mov
iret
in
out
fmulp
call
fadd
aad
fisttpll
mov
mov
mov
jmp
repnz
icebp
add
int
fcmovbe
aad
fneni(8087
iret
add
shl
scas
leave
int
fcmovne
aam
mov
mov
test
enter
adc
lods
mov
into
lret
jmp
clc
int3
sarl
add
jmp
mul
add
fcmovb
ljmp
call
loope
rcl
out
pop
cmc
add
jmp
jmp
movsl
loop
mul
mov
shl
div
leave
loope
std
clc
add
int3
cli
add
lock
out
cld
cli
cli
in
lock
scas
shr
out
jmp
sar
mov
cli
add
rol
testl
pushl
imul
int
fcmove
cli
leave
aad
repz
fstp
lock
cld
pop
add
cli
clc
mov
lock
int
mov
fcomip
cli
aam
add
push
pop
hlt
fucomi
fnstsw
out
mov
leave
std
in
out
xlat
sar
mov
fidivrs
add
int3
lret
into
into
mov
repnz
loop
int
aam
neg
ret
hlt
adc
out
les
mov
in
mov
flds
add
add
sti
in
lock
hlt
iret
stc
fcmove
mov
out
xlat
std
mov
jmp
paddsb
shl
shr
ret
jmp
into
fcmovbe
repnz
sar
leave
in
iret
fmuls
loopne
mov
sti
test
shl
sar
loopne
pop
neg
repz
stos
lock
mov
mov
mov
enter
repz
loopne
roll
loopne
lret
test
shlb
lock
mov
in
fstp
leave
add
add
int
iret
int3
ljmp
jmp
ljmp
repnz
loop
cld
pop
add
lret
loopne
lods
jecxz
jmp
fcmove
leave
mov
jecxz
enter
cli
shl
or
out
add
bnd
out
xlat
lret
in
fcomi
int
mov
out
testb
pavgw
loopne
mov
mov
aam
shr
mov
stc
shr
icebp
cld
fidivrl
add
fninit
fsubrl
repnz
jmp
mov
mov
call
add
vshufps
mov
in
in
sti
lock
shl
clc
cmc
enter
fcmovne
or
cld
testl
add
call
ror
loope
mov
jecxz
ffreep
std
mov
incl
fdiv
jecxz
into
add
shr
repnz
fdivl
divl
repz
out
xlat
frndint
aam
into
pop
inc
icebp
mov
ret
mov
cmc
int
stc
stc
ret
loop
cld
fsubrp
call
add
icebp
shr
iret
mov
mov
shr
mov
xlat
pop
add
add
fdivl
call
mov
sti
call
mul
cmc
cld
loopne
add
jmp
mov
hlt
shr
out
mov
in
push
in
rcr
aam
or
sti
in
repnz
test
enter
mov
fildl
idiv
mov
mov
decl
mov
mov
mov
in
fistpll
int
add
std
push
or
mov
loope
repz
xlat
mov
neg
mov
add
ljmp
lods
lret
lock
xlat
iret
mov
lds
add
cld
sarb
decb
adc
repz
ret
aad
lock
cmc
int
fcomi
rcl
loopne
fnstsw
lret
rol
repz
jmp
add
mov
push
jmp
icebp
ret
or
loopne
fdivr
or
mov
in
shr
jmp
fcmovnbe
ret
div
fmul
add
out
add
lret
stos
jmp
mov
shr
mov
rcr
idiv
vpslld
aam
lret
jmp
or
mov
icebp
lret
mov
fdivs
or
push
fldz
pop
fcmovb
mov
mov
mov
fcmove
cmc
sti
repz
rcl
fcomip
cld
add
loope
jmp
stos
stos
call
fcmove
xlat
cli
mov
mov
sar
fcmovnbe
cli
in
fmul
fsub
scas
mov
mov
mov
mov
mov
in
shl
or
in
in
repnz
shl
fadd
enter
lret
ljmp
testl
ret
add
shr
repz
out
repnz
sarl
std
ffree
rol
stc
hlt
fmull
fildl
int3
rcl
fbstp
mov
cmc
mov
aad
mov
loop
call
sarl
ljmp
jmp
fmulp
clc
loopne
shl
adc
jmp
aad
mov
in
enter
add
jmp
mov
fsubr
shr
into
icebp
mov
shrl
rcr
clc
fnstsw
add
in
hlt
push
lret
loopne
shl
leave
ljmp
jmp
in
lock
lock
out
ljmp
loop
iret
mov
fcmovne
xlat
stc
mov
mov
stc
add
lret
pop
add
add
clc
out
repz
rcl
mov
mov
cli
jmp
repz
jecxz
out
push
repz
int
int3
shl
out
into
idiv
test
repnz
in
loope
ret
lock
roll
or
push
add
call
mov
shll
in
rcl
div
rcl
ljmp
icebp
mov
mov
repnz
mov
lock
std
add
shl
add
jecxz
ret
sarb
jmp
out
fxch
in
lret
fiadds
mov
lret
add
or
enter
ret
aad
mov
out
div
aad
fdivrl
into
or
add
rol
loop
into
out
lret
rcl
clc
ror
in
sti
or
loop
in
out
or
ror
scas
loop
mov
jmp
std
add
mov
bnd
hlt
repnz
add
or
loopne
lret
shl
out
into
leave
pushl
mov
int3
clc
add
add
mov
int
sarl
lock
aam
icebp
ret
in
mov
add
repz
mov
mov
mov
mov
test
rcr
leave
jmp
aam
mov
div
ljmp
jecxz
hlt
lock
or
cmc
add
prefetchwt1
loopne
test
ljmp
ljmp
shl
clc
add
sar
add
or
clc
add
shl
out
icebp
fcmovnb
lods
std
repnz
fidivrs
imul
lret
movntq
out
lods
jecxz
rcl
leave
ror
mov
shl
out
ret
loope
fsubr
fucomp
ror
in
repz
rcl
in
shr
mov
mov
fimull
in
in
fsubrl
jecxz
jmp
mov
stc
icebp
cmc
repnz
int
stc
fnsetpm(287
hlt
or
push
add
enter
mov
leave
repz
iret
mov
mov
pop
lret
pop
ljmp
fsubr
sti
iret
test
int
repz
in
sti
xlat
fsubp
call
lret
in
jecxz
mov
loope
out
int3
in
mov
loope
lret
aad
in
in
out
or
into
shl
call
mov
ret
cli
stc
fdiv
aad
or
ljmp
push
rep
mov
lret
rol
out
xlat
out
ror
enter
testl
loop
into
shl
loop
aad
out
out
out
hlt
mov
icebp
fnstcw
stc
loop
sar
cld
jmp
loopne
repz
call
rcr
ret
aam
out
add
fsubr
leave
rep
in
mov
rcr
fsincos
clc
fnstsw
cmc
xlat
lret
or
add
mov
fcomi
sar
call
stc
in
fdivr
rcr
lret
ljmp
or
mov
rol
mov
lret
mov
call
jecxz
add
add
in
int
into
in
fcmovnb
ljmp
roll
enter
add
out
lock
in
or
int
shl
neg
repnz
shl
in
lods
mov
rcr
icebp
int
fdivp
sti
add
out
fmulp
fldcw
mov
out
fadd
ljmp
fiadds
or
lret
out
out
fisttpll
add
loopne
rol
mov
repz
leave
lock
icebp
into
xlat
shl
shl
clc
enter
in
rcr
fadd
test
mov
xlat
repz
ret
fsub
std
lock
in
or
or
mov
shr
mov
in
in
mov
rol
mov
add
clc
rcr
mov
loopne
into
leave
leave
mov
ret
stc
cld
fcmovnb
mov
fdiv
out
out
jmp
jecxz
mov
clc
mov
sarb
cmc
lret
loopne
fdivp
aad
jmp
cmc
out
cli
std
fdivs
mov
add
fldl
fsubp
or
mov
mov
hlt
lret
in
lret
repz
ret
sarl
aam
or
or
stos
lods
in
call
mov
jmp
cmc
clc
loop
mov
xlat
std
jecxz
iret
add
enter
out
mov
ljmp
rcr
sti
aad
add
or
jecxz
mov
loop
call
ror
add
add
fmul
les
lret
in
out
shll
out
mov
mov
stc
ljmp
lds
in
into
enter
mov
in
fucomip
in
dec
add
add
shl
cld
aad
add
add
leave
loop
clc
add
mov
loop
repnz
sar
int3
hlt
iret
sarl
loope
ljmp
push
push
in
mov
lret
ret
ljmp
clc
ljmp
rol
fadd
aad
out
fmull
add
shr
lods
repnz
out
mov
mov
flds
or
jmp
add
imul
mov
mov
stc
shr
jmp
sarl
stc
call
leave
loopne
mov
in
clc
mov
dec
call
stc
mov
testl
push
fnsave
mov
mov
ror
mov
in
icebp
add
cld
out
loopne
jmp
or
aam
aam
leave
mov
aad
sti
mov
out
cld
hlt
enter
out
test
shlb
ljmp
mov
clc
idiv
fdiv
lret
iret
add
adc
imul
lods
out
in
test
fstp
idivb
add
clc
out
fdivp
incl
fsts
out
mov
loope
sti
enter
enter
mov
lock
call
repz
loope
fxch
icebp
in
fnstcw
cli
roll
xlat
fcomp
add
fcmove
mov
mov
lods
mov
xlat
mov
into
loopne
cli
ret
in
lret
out
iret
or
mov
lods
fdiv
mov
mov
call
incl
sar
add
push
lret
mov
test
shl
lock
ljmp
pop
jecxz
fisttpl
sti
inc
in
pop
or
scas
divl
hlt
out
fcmovu
icebp
repz
rcl
loopne
std
idiv
loopne
leave
test
les
int
hlt
call
enter
repz
in
loope
fmul
repz
in
lret
cmc
fdivl
mov
fcmovnu
mov
in
out
or
add
add
cld
bnd
lods
int3
out
push
shlb
shl
in
std
icebp
add
iret
jmp
loopne
fucom
int
fnsave
into
aam
repnz
loop
rcr
ret
lock
cli
aam
int
ffree
shl
lret
fdivl
fld1
leave
mov
std
loope
in
loop
or
mov
mov
sti
fldz
enter
fcomip
test
cmc
not
call
or
in
in
hlt
mov
stc
mov
loop
push
cli
out
loop
pop
jmp
lods
shl
mov
idivb
in
neg
clc
or
push
mov
mov
repnz
lret
lock
rcr
add
aad
add
shr
mov
ljmp
jmp
clc
shl
lock
clc
add
fcomip
mov
mov
call
jmp
push
mov
jmp
or
lret
lods
hlt
enter
rcl
jmp
icebp
cld
jecxz
loopne
add
loop
out
in
sti
out
stc
loope
ljmp
hlt
sarl
out
mov
fadd
fdivp
in
push
add
in
shr
aad
cmc
aam
int3
lock
shlb
ret
add
std
movb
incl
loopne
ljmp
mov
in
mov
fsub
mov
out
mul
jecxz
loop
int3
iret
stos
call
into
mov
lret
mov
stc
sti
faddl
aam
add
fmul
ficoms
jmp
ljmp
not
xlat
hlt
fdivr
sti
fadds
in
push
push
add
lods
ret
not
in
in
repnz
icebp
fcmovu
mov
rol
push
loopne
lock
loopne
mov
mov
fcmovnb
int
mov
call
cld
fisttps
mov
or
mov
icebp
shl
mov
fdivr
ror
jecxz
add
fst
sar
xlat
fmuls
cli
into
lret
jecxz
loopne
mov
sti
mov
fnstsw
in
xlat
aad
lret
pmullw
or
jmp
repz
mov
lock
mov
add
or
fucomp
faddp
iret
ret
jmp
fucomi
cmc
out
aam
repnz
mov
push
pop
add
mov
jmp
mov
xor
mov
lea
mov
mov
jmp
sub
notb
push
je
hlt
sub
in
jp
add
fdiv
ret
rcr
shl
call
add
iret
repnz
enter
int3
aam
in
mov
add
mov
fstp
or
lret
jecxz
shl
ret
jmp
cli
add
cmc
out
int
loope
in
fiaddl
out
fprem
in
repz
mov
shll
call
add
sti
repz
lret
lret
cli
std
cli
in
out
repnz
test
ret
mov
into
jmp
test
lds
or
mov
lret
mov
jecxz
cmc
mov
jmp
shl
ret
in
loope
or
fcmovnu
cli
jmp
call
hlt
lret
out
rcr
cmc
sarl
repnz
in
leave
iret
in
in
scas
repnz
out
mov
cld
out
loop
fsubp
add
add
stc
decb
iret
rol
mov
aad
lret
int
div
add
in
cli
add
mov
rol
loope
mov
in
mov
shl
mov
aam
add
push
add
leave
add
stos
mov
in
repnz
leave
into
mov
repnz
div
cmc
loopne
add
leave
fadd
call
jmp
in
fidivrs
jecxz
add
loop
loopne
out
out
mov
jmp
jmp
ljmp
into
add
call
fstp
lret
add
add
sarl
mov
fcmovnu
jecxz
leave
mov
cmc
loopne
sti
jmp
fucomi
out
enter
mov
mov
clc
in
mov
pop
int3
neg
mov
enter
mov
mov
mov
ljmp
ret
fndisi(8087
add
add
call
iret
in
mov
repz
aad
std
in
add
neg
std
neg
lret
cmc
add
add
icebp
mov
lret
mov
div
fdivrp
icebp
fdiv
mov
pop
incb
in
aam
in
pop
mov
in
stc
in
enter
mov
std
aad
loopne
clc
add
enter
enter
into
loopne
mov
ljmp
idivl
loopne
add
or
in
mov
leave
mov
mov
sarl
or
jmp
mov
std
loope
int3
into
lods
xlat
jmp
in
into
int
mov
in
rorl
loopne
add
push
or
out
jecxz
div
mov
fcmovnu
mov
out
sti
cmc
jecxz
loope
add
cmc
cli
fcomp
add
in
push
shl
iret
int
aam
mov
hlt
add
testb
jecxz
cld
or
repnz
shll
into
into
sti
fidivrs
add
into
fdivr
repnz
enter
call
stc
cli
mov
mov
add
shl
jmp
clc
dec
push
mov
repnz
out
call
mov
aad
add
aad
hlt
fadds
fiaddl
or
mov
mov
mov
icebp
out
rcl
fsubr
out
fstpt
loop
fcmovnu
add
int
repz
leave
loopne
mov
iret
mov
shl
loopne
xlat
pop
shl
pop
loop
cli
add
add
loope
jmp
scas
lock
divl
ror
pop
pop
iret
std
in
fidivrs
out
jmp
in
add
pop
clc
or
aad
out
std
fcmovnbe
fsubrs
repz
jecxz
clc
fcmovnu
lds
jmp
add
jecxz
in
mov
mov
in
ror
leave
fidivs
cld
in
repz
aad
fmul
cmc
fildl
in
jecxz
mov
ret
in
call
cli
aad
mov
lret
cld
std
fsub
ljmp
mov
mov
mov
mov
aad
fsts
rcl
mov
ror
int3
ljmp
add
push
fiadds
lret
aam
iret
into
mov
iret
mov
aam
mov
int3
push
ret
or
jmp
or
or
test
lret
mov
lret
cmc
div
mov
fcom
icebp
or
leave
push
incb
out
lock
les
mov
mov
fcmovnbe
movb
push
or
vcmppd
ljmp
xlat
ljmp
repnz
sti
cld
enter
fnop
enter
lret
lock
cli
mov
loop
int3
shl
fxch
loopne
pop
loope
ret
fsub
jmp
into
xlat
scas
enter
int3
call
ret
fdiv
shr
ret
hlt
fmuls
in
loopne
loopne
mov
ret
scas
jmp
mov
add
mov
jmp
icebp
or
loopne
enter
in
shr
call
jmp
mov
out
out
mov
cld
in
cli
fiadds
out
ret
jmp
into
int
hlt
aam
sti
lods
call
rol
ljmp
lret
in
mov
fucomi
mov
call
jmp
call
add
test
movb
stos
les
mov
les
ffree
fildl
add
or
or
out
shr
in
ljmp
fdivrl
add
incl
fcmovnb
cmc
cld
clc
in
out
or
cmc
lods
repnz
out
mov
mov
lret
mov
stc
clc
cmc
or
loop
cli
clc
shl
test
out
shlb
enter
rcr
mov
fmulp
cld
or
test
xlat
lret
leave
ret
clc
out
add
lret
into
rol
scas
lret
int3
ret
iret
cmc
icebp
into
int
jecxz
out
int3
jmp
fucomi
loopne
aam
lret
or
leave
shl
shl
mov
rcl
fsub
jmp
rol
repz
std
fcmovnb
add
ror
int3
int
jecxz
in
clc
lock
leave
lret
int3
repnz
lret
test
out
jecxz
int
pextrw
scas
rcl
lret
sti
rol
ljmp
lock
add
fadds
stc
ljmp
les
out
int3
pushl
in
mov
hlt
push
out
lret
in
push
test
mov
out
mov
shl
jmp
ret
jecxz
aam
inc
in
ljmp
mov
repnz
fidivl
into
int3
neg
into
mov
call
lret
mov
sarb
lret
out
add
jecxz
pop
hlt
xlat
out
fildl
pop
stos
faddp
lods
jmp
in
mov
in
hlt
shl
roll
call
or
fnsave
aam
mov
fcmovbe
fdivl
mov
in
loopne
lds
leave
icebp
shl
loope
lret
repnz
mov
mov
loope
lret
jmp
fcmove
jmp
xlat
mov
call
out
in
lret
ror
mov
repz
loope
fadd
lods
xlat
aad
icebp
cli
sti
int3
lods
mov
not
loop
aam
or
stc
fisttpl
loope
out
jmp
jmp
loope
in
sar
std
out
or
in
add
fsub
out
out
out
mov
not
shll
shl
xlat
fcomp
faddl
jmp
les
mov
aam
enter
fst
mov
ret
loop
faddp
add
lock
stc
or
into
iret
mov
rcl
loop
int
out
sar
mov
fnstsw
loope
pmullw
fxch
mov
jecxz
fnstsw
mov
fidivrl
sar
pop
or
add
lret
add
test
mov
repz
mov
std
stc
repnz
lret
in
loopne
fldcw
icebp
fcmove
into
rcr
roll
in
leave
out
shl
xlat
rolb
stc
lret
stc
ljmp
lret
icebp
repz
add
call
stc
aam
out
icebp
mov
hlt
lret
repnz
cli
int
idivl
rcl
ret
in
add
loop
lds
aam
scas
div
xlat
idiv
cmc
mov
in
in
jmp
out
les
cli
or
mov
jecxz
into
aam
mov
repz
ret
add
loopne
clc
cli
loope
call
lret
mov
cmc
lods
sar
jmp
add
div
sti
in
cli
testb
iret
or
in
icebp
test
call
leave
lods
aad
cmc
fdivrl
neg
fstp
iret
or
in
test
rol
scas
rcl
int3
enter
into
mov
movl
or
add
int3
stos
jmp
mov
in
repnz
add
out
shl
jecxz
push
into
jmp
lods
int
mov
fnstsw
testb
fisttpl
loope
in
fidivrs
loopne
iret
lret
fmulp
in
ljmp
repz
add
call
lret
loop
out
loopne
rcl
mov
clc
ret
push
aad
imul
into
push
int3
cli
call
aam
loopne
in
repz
sti
mov
pop
cmc
ljmp
sar
shrl
shl
ljmp
std
fiaddl
mov
aam
fmul
out
call
stos
mov
repz
jmp
int
loopne
mov
std
add
or
clc
or
stos
mov
out
fcmove
iret
ljmp
push
add
add
cli
jmp
vpor
loopne
mov
iret
mov
mov
mov
icebp
aad
fcomip
xlat
leave
push
enter
ror
not
mov
mov
shl
mov
inc
stc
fcmovnb
jmp
lock
loopne
add
out
stos
lret
in
lods
into
in
shlb
imul
cli
icebp
fucomp
in
fucomp
in
fnclex
clc
out
fnsave
mov
ffreep
out
aam
in
repz
stc
mov
or
in
int
out
ljmp
hlt
hlt
mov
stc
out
std
add
aad
icebp
add
test
sti
adc
out
lret
jmp
hlt
mov
iret
mov
fucomi
lock
shl
clc
sti
cld
fsubp
add
scas
int3
shl
cli
int3
repz
cld
jmp
ret
hlt
stc
in
les
faddp
scas
mov
fxch
ljmp
rcr
lds
push
call
cli
loop
shrl
test
lock
loop
into
icebp
ret
cli
or
in
out
add
or
lods
in
lock
fcmovbe
in
int
repnz
imul
jecxz
or
fsubr
pop
in
add
or
ror
ljmp
jmp
mov
in
idiv
jmp
ret
out
in
repnz
sar
into
fucomp
jecxz
cli
loop
repz
pop
shl
hlt
fisttpll
shr
cmpsb
in
mov
out
iret
cmc
mov
fadd
cld
std
add
ljmp
repnz
test
mov
fst
rol
icebp
mov
mov
in
or
out
repz
sti
rcl
enter
leave
fdiv
mov
rol
or
movl
out
icebp
icebp
jmp
in
in
lret
cmc
repz
shl
in
sti
icebp
in
or
loope
or
cld
fadd
in
scas
icebp
test
lret
int3
sti
clc
mov
cmc
rcl
add
fsub
add
ljmp
jmp
cmc
mov
shl
lock
sar
fcomp
aam
or
add
fdiv
scas
iret
in
mov
lret
sarb
jecxz
or
rol
leave
enter
enter
lret
mov
repnz
ror
lods
lret
loop
shr
fcmovnu
lock
mov
ljmp
mov
ljmp
mov
add
loope
mov
loop
aam
add
lods
ffreep
aam
cmc
out
int3
test
ljmp
fisttps
enter
cld
jecxz
fst
test
iret
int3
lock
mov
iret
cmc
fsubp
out
lock
jmp
out
rcr
mov
shl
xlat
mov
mov
mov
fndisi(8087
stc
fnstsw
out
in
in
lret
ret
out
in
aam
hlt
fdiv
out
fcmovnbe
repnz
idiv
lret
fdivr
test
cmc
enter
mov
ljmp
ret
fsub
add
fucomi
add
test
out
lods
shl
repz
leave
fdivp
cli
mov
repnz
fsubrp
rcl
or
cld
mov
loop
aad
jmp
icebp
mov
call
add
fsub
add
leave
ret
mov
in
mov
out
sti
sar
fsubr
add
add
mov
cli
fadds
pop
cli
push
pandn
call
lods
loopne
into
iret
sti
into
jmp
in
shl
fadd
out
push
aad
jmp
out
loope
sti
in
sti
dec
test
add
add
mov
or
add
shl
int
mov
shlb
xlat
mov
mov
add
fxch
add
cli
stos
repz
shl
mov
call
loope
repz
leave
in
push
push
shl
mov
out
mov
fdivs
cmc
div
in
push
hlt
out
add
filds
out
loope
test
loop
neg
test
in
rcl
add
mov
cld
jmp
cld
fcmove
add
mov
in
ror
repnz
mov
mov
stc
ret
mov
add
add
int
lret
neg
repnz
mov
mul
shl
in
lret
jmp
in
out
repz
mov
stc
ljmp
xlat
ror
in
aad
cld
add
into
enter
mov
ror
out
mov
mov
mov
sar
jmp
loop
mov
cli
test
rcl
cli
mov
out
xlat
out
fsubp
loop
test
fcmove
fcmovnbe
sarl
cli
std
in
imul
lds
pop
fldl
fcomip
lods
aam
shl
mov
mov
not
fsubr
loopne
in
in
fadds
add
iret
or
cmpsl
jmp
loopne
jmp
mov
ror
loope
loope
xlat
int3
add
in
cmc
mov
fcomip
mov
loopne
mov
lret
in
ror
xlat
mov
mov
loopne
add
mov
into
icebp
iret
iret
int
mov
call
lock
ret
movb
loope
int
iret
mov
ror
mov
mov
div
mov
mov
shl
mov
out
leave
test
loop
out
call
in
loope
fcomi
xlat
fmull
rorl
add
loopne
fisttps
fdivrp
in
in
iret
rol
in
fdiv
cli
inc
in
sarb
fcmovnb
pop
out
or
out
in
mov
mov
out
in
jmp
sti
ret
ret
jecxz
fucomi
aam
or
call
into
lock
test
out
lret
add
clc
in
div
lret
ror
jecxz
loop
add
lret
ljmp
out
into
mov
aad
in
rol
rcr
loop
loop
std
repnz
mov
lods
int3
lock
lods
sarl
mov
fxch
out
hlt
scas
out
lret
out
lock
fdivrs
ljmp
sar
add
cld
add
iret
int
mov
int
fcmovne
sarb
lock
loopne
mov
int
mov
lock
into
fidivrl
mov
cmc
in
icebp
loop
push
in
fisttpll
icebp
cmpsb
leave
jmp
scas
clc
cmc
repz
out
icebp
loopne
shr
loopne
lret
roll
jmp
repz
cli
shl
mov
repnz
cmc
add
xbegin
lret
iret
out
out
cmc
jecxz
int3
stc
aad
fdiv
in
fidivrs
loopne
add
enter
sti
ror
mov
mov
mov
shl
mov
fst
div
cli
mov
ret
or
fdiv
shl
movsl
repnz
fcmovb
jmp
aam
lock
repnz
jecxz
loop
out
cld
add
jmp
call
out
ljmp
out
imul
mov
mov
xlat
aad
add
mov
in
mov
mov
mov
fadd
aad
sar
add
fcmove
in
ret
loop
fadd
in
mov
repnz
add
sar
ret
in
aad
lock
call
loope
shl
enter
lret
ljmp
sti
mul
incb
icebp
cld
ret
cld
out
push
rcr
mov
lret
ljmp
ret
mov
add
cli
stc
add
aam
add
in
out
mov
fdivrl
stc
movb
add
or
stos
out
out
ljmp
std
enter
loop
aam
mov
fucom
or
adc
stos
test
neg
into
leave
aam
clc
filds
div
loopne
pop
out
in
hlt
jmp
ror
ret
aam
mov
mov
lock
add
cld
in
in
in
int3
loop
ljmp
mov
xlat
rcr
cli
cld
shl
out
loop
push
adc
out
scas
sarb
into
repz
idiv
dec
mov
filds
fdivrp
int
jmp
out
enter
into
sti
iret
cld
into
mul
loope
stc
fcmovu
push
loopne
idiv
jecxz
fucomip
loopne
mov
fyl2xp1
mov
faddl
fsub
in
clc
mov
lret
incb
shl
loopne
mov
out
in
fstpt
in
fsub
rcl
faddl
les
add
add
shr
iret
mov
shl
jmp
aad
in
pop
out
fdivp
sti
mov
flds
add
in
repz
in
imul
ret
neg
mov
jmp
mov
repnz
out
ret
fucomp
in
out
fsubr
repnz
leave
loop
fsubr
mov
rcl
rcr
clc
mov
add
push
les
icebp
repnz
lods
imul
xlat
aam
in
mov
clc
enter
add
sarl
cli
cli
call
lret
lret
loopne
in
mov
mov
hlt
loop
std
add
enter
or
in
loop
lret
test
fistpll
ret
in
jecxz
ljmp
ret
cmc
enter
loopne
in
mov
cmc
cli
fcmovnb
int
repnz
lret
or
out
fprem
enter
ljmp
in
std
repnz
fcmovnb
out
push
or
rcr
jecxz
pop
push
shlb
in
les
int
sarb
or
or
jmp
mul
out
aad
mov
cld
mov
stc
in
fmull
add
out
clc
or
fucomp
shl
in
sti
repnz
jmp
sti
shl
fcmovnb
lret
add
out
scas
mov
shl
cli
mov
in
sti
pop
add
add
jmp
rol
loopne
mov
mov
call
aad
call
in
out
loopne
add
icebp
fcmovne
in
lret
iret
call
std
add
out
idiv
fucomp
or
stos
mov
mov
mov
iret
in
loop
add
inc
rcl
mov
rorl
repz
mov
iret
stc
aam
test
int
ret
cld
aad
mov
clc
out
enter
push
into
adc
test
mov
hlt
mov
cli
loopne
or
push
cmc
sar
loopne
stc
test
cmc
mov
leave
lock
test
mov
fcmovnb
ret
add
xlat
pmulhw
les
shll
std
aam
into
mov
lock
sti
fadd
fcmovu
out
or
fsub
test
fst
icebp
int
mov
aam
cld
or
out
adc
in
into
sti
in
leave
xlat
aad
mov
lds
add
fsub
or
mov
imul
in
fcomi
add
mov
ror
ljmp
int3
lret
icebp
jmp
mov
out
rol
in
lret
ror
into
mov
sar
fldl
hlt
jmp
in
icebp
stos
shl
fnsave
into
mov
rcr
aad
loope
in
ljmp
scas
out
cmc
loope
repz
fcomi
shr
mov
movl
out
out
or
repnz
lret
clc
clc
int
hlt
mov
mov
enter
out
fnop
test
out
enter
rcr
dec
fdivr
fildl
fcomi
mov
filds
or
shrb
rol
jmp
int3
in
ljmp
rol
div
pop
jmp
rcl
ljmp
int
enter
sarb
out
fcoms
out
or
mov
stc
in
mov
mov
test
xlat
mov
add
shll
mov
in
mov
cli
mov
out
shl
aam
jmp
add
lret
int
or
int
loope
out
lret
out
cli
rcr
mov
sarb
lret
cmc
out
push
jmp
aad
jmp
into
hlt
mov
mov
pop
loop
movb
loopne
enter
mov
fcmovnbe
sti
rcl
icebp
shl
loop
in
jecxz
add
ret
sti
enter
in
scas
lods
out
iret
call
aad
iret
hlt
fadd
out
neg
add
loop
add
or
loopne
int3
div
cmc
rcl
cld
shr
icebp
fsqrt
std
lds
iret
stc
shl
mov
lock
into
test
hlt
cli
int
shl
rcl
out
push
int
leave
lret
iret
mov
jmp
sarl
repnz
loop
add
ljmp
rcr
int3
ror
fcmovnb
div
push
hlt
mov
sarb
fucomip
iret
iret
shrb
xlat
fidivl
stc
rcr
jecxz
mov
call
shl
jecxz
call
icebp
fsubr
aam
fmulp
fdivrs
mov
add
repnz
les
aam
ljmp
fcmovnu
int3
add
ret
out
out
in
fisttpll
int3
out
jecxz
mov
test
idiv
fcmovne
std
loopne
out
push
loopne
testb
out
lret
int3
int
iret
lds
in
out
mov
call
fdiv
mul
out
call
ret
out
mov
lret
mov
lret
int
xlat
rol
add
pop
test
jmp
fucom
shl
jmp
fdiv
cmc
add
fcomp
mov
dec
in
flds
stos
lret
rol
out
shr
sti
mov
jecxz
add
or
iret
leave
ljmp
lret
jmp
out
in
idiv
stc
call
in
fstp
mov
add
lret
rol
iret
mov
ror
lret
out
repz
add
add
leave
enter
jmp
test
lret
sti
loope
aad
lret
mov
mov
rolb
fcomp
or
rcl
shl
iret
int
ror
mov
stc
iret
in
call
lock
rorb
out
psubusb
fdivrl
call
iret
mov
idiv
ret
in
not
fucom
in
in
jecxz
rcl
jmp
loopne
repz
sarb
call
mov
rolb
add
in
fsub
in
ret
leave
mov
repnz
shlb
dec
in
out
rcr
hlt
in
mov
out
push
pop
test
enter
out
fbstp
clc
test
or
call
ret
faddp
out
int
lods
repz
mov
mov
hlt
stc
or
ret
out
lret
jecxz
loopne
ror
mov
repz
cmc
ret
clc
sti
shr
test
fucomp
mov
lret
shr
icebp
repnz
out
cmc
out
loopne
add
mov
push
jmp
mov
mov
jmp
mov
int3
repz
in
hlt
stc
rcr
loop
in
leave
into
mov
lods
int
hlt
ftst
in
mov
mov
ljmp
mul
mov
loopne
mov
aam
iret
loopne
mov
sti
or
stos
mov
out
not
mov
mov
mov
fadd
mov
fcmovne
jmp
repz
scas
lock
out
fmul
fsubr
fistpll
jmp
ret
lret
jecxz
lods
loopne
shl
jmp
mov
fxch
hlt
icebp
faddl
ror
out
repnz
sar
out
or
loopne
lret
icebp
in
ret
out
enter
in
mov
aad
int3
fsub
loope
icebp
or
ljmp
shl
mov
lods
out
mov
cmc
std
cli
repnz
add
in
in
clc
ret
cmc
out
stc
leave
iret
into
mov
out
loop
ror
mov
divl
shl
sarl
cld
cld
fmul
ret
mov
aad
mov
iret
icebp
fucom
fbstp
push
fsub
mov
push
leave
scas
scas
lret
mov
mov
into
jmp
icebp
rcl
hlt
sarl
or
ret
out
in
adc
jmp
int3
jmp
div
out
into
shr
out
fcmovne
ret
xlat
xlat
push
in
mov
ror
rcr
fucom
cmc
test
out
in
lret
repz
add
int3
out
in
aam
jmp
fsubrs
fucomi
mov
std
repz
lock
call
enter
mul
cli
lret
sar
std
mov
filds
icebp
std
add
fstp
vcvttpd2dq
repnz
fsubrp
cmc
mov
mov
into
in
fcom
add
aad
in
xlat
out
add
fucom
icebp
test
mov
leave
in
fiaddl
out
jecxz
jecxz
cmc
sarl
add
repnz
into
in
call
shl
lods
clc
fdiv
fucomip
fiaddl
loop
rol
ret
decl
lret
fsubp
scas
xlat
out
mov
in
iret
fsubr
in
int
ret
xlat
jecxz
add
jmp
add
mov
ror
int
in
fstpt
mov
idiv
xlat
sti
push
or
or
in
stos
out
jecxz
divl
dec
fdivr
mov
mov
inc
or
add
add
loopne
not
fdivl
into
mov
loop
int
fnclex
lret
filds
add
ffreep
stos
mov
shr
sar
in
in
add
call
jmp
call
jmp
faddp
int3
mov
ljmp
mov
jmp
xlat
in
repnz
icebp
in
jmp
fincstp
div
out
jecxz
out
out
in
mov
clc
fsubr
int3
fcomi
out
jecxz
or
std
ffree
fdivr
ret
test
ret
lret
ljmp
aad
loop
lret
cmc
movb
fisttps
in
in
jmp
int
fucomip
fsub
clc
add
cli
ret
std
ret
rorl
aam
or
add
aad
mov
sti
in
out
lret
add
add
fchs
push
add
pop
out
fdivrp
loop
imull
repz
in
cli
mov
shr
loop
add
testb
or
dec
cmpsl
iret
shl
loope
mov
mov
out
push
loopne
fucom
out
add
int
int3
in
into
ret
jmp
incb
ret
loopne
shl
ror
or
out
int3
mov
loope
in
lock
fmulp
repz
loop
ret
add
fistpll
or
in
jecxz
ret
repnz
in
aad
xlat
fmul
mov
sar
loope
out
or
or
add
loopne
imulb
imul
ljmp
add
fcmovu
jmp
lret
cli
iret
repz
out
in
out
lods
iret
repnz
fnsave
mov
out
fdivr
add
repz
fucomp
lret
lods
movsb
mov
ret
mov
repz
not
loop
add
out
loope
sti
mov
push
ljmp
mov
repz
not
fadd
test
aam
into
push
or
enter
jmp
cmc
mov
int3
xlat
pop
idivb
jecxz
push
pxor
lret
out
out
iret
mov
sar
clc
rcl
ffree
add
in
std
std
into
or
lock
lret
fst
int
fcmovb
add
aam
fstp
loopne
aam
adc
add
out
mul
stc
int3
cmc
mov
cli
rcr
mov
rcl
or
jmp
or
pop
in
mov
mov
repnz
out
xlat
mov
fdivr
cmc
clc
add
loopne
hlt
lds
or
fsub
aam
lret
ror
shr
mov
shl
icebp
jecxz
ret
mov
out
add
ljmp
out
in
aad
out
fcmovnbe
mov
loop
not
out
hlt
aam
fimuls
add
out
mov
out
enter
out
mov
repnz
sar
sti
hlt
hlt
std
fdivp
aam
or
loop
mov
mov
mov
mov
rorb
or
int
int3
in
divl
aad
enter
int
shl
push
aam
xlat
out
leave
sar
hlt
add
add
shrb
int
aad
ljmp
aad
push
jecxz
ret
jecxz
cld
jmp
leave
lret
leave
out
out
lds
call
loopne
ljmp
adc
les
enter
stc
jmp
clc
mov
repz
loop
out
fadd
or
into
cli
shl
jmp
into
repnz
ffreep
pop
loop
aam
aad
aad
iret
into
jmp
loope
mov
cli
lret
out
leave
idiv
int3
fiadds
cli
shl
or
pop
clc
or
in
fsub
in
ret
rol
test
aad
neg
icebp
mov
mov
loope
xlat
loopne
loopne
lods
mov
int
in
mov
out
in
lock
rcr
add
add
aam
or
icebp
repz
rcl
shr
cli
into
ljmp
pop
fcomip
or
loop
pop
in
clc
cli
jmp
shl
xlat
lock
incb
std
loope
movl
loopne
in
lret
out
out
idivl
rcr
ret
idiv
add
fiaddl
jmp
in
in
out
icebp
ljmp
sarl
int3
loope
loope
rcr
movl
repnz
aad
mov
mov
jmp
sarb
hlt
loopne
incl
rol
fmull
shl
rcr
fcmovnbe
mov
fcom
aad
rcr
ret
hlt
les
clc
loopne
rcl
out
into
enter
in
call
stc
lret
not
lret
stc
add
incl
out
mov
ljmp
mov
mov
rolb
fstpt
push
or
scas
shll
mov
ljmp
repz
pand
fimuls
push
lret
rcr
mov
test
call
into
out
fldlg2
out
shr
xlat
add
add
int
mov
icebp
lret
not
sarl
push
cld
xlat
fisttpl
push
or
psubusb
lret
jmp
in
repz
mov
in
idiv
mov
ret
shr
into
iret
fucom
loopne
enter
cli
mov
lret
sarl
add
cmc
les
xor
cmp
je
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
add
mov
imul
mov
xor
add
mov
sub
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
movl
movl
movl
movl
movl
mov
xor
add
jmp
ffreep
sub
xor
jg
jae
jns
add
jmp
add
push
jmp
ret
lods
mov
ljmp
ret
leave
push
cmc
fildl
lret
in
lods
stos
int
mov
rol
aad
jmp
mov
ljmp
std
adc
call
leave
lret
fucomi
iret
mov
mov
mov
mov
hlt
ret
int
into
jmp
rcl
aad
mov
fsub
rcl
pop
pop
or
lret
ljmp
mov
leave
lods
mov
mov
mov
clc
bswap
std
or
in
mov
mov
sar
mov
mov
cld
add
pop
add
rol
ljmp
icebp
hlt
aad
mov
mov
jmp
faddl
rcr
loopne
clc
enter
test
in
fucomp
leave
mov
stc
int
std
fdiv
cld
rcr
rol
hlt
add
loopne
rcr
loop
fcmovb
rcl
lods
ljmp
test
fbstp
lock
aam
in
or
test
mov
mov
fdiv
lock
repz
cli
fdivr
aam
add
jecxz
out
mov
hlt
fucomp
fdiv
leave
cld
push
loop
in
loopne
out
repnz
lret
hlt
imul
repz
fucomi
mov
sar
cli
fldpi
add
fstl
or
icebp
ljmp
shl
stc
in
int
add
loop
loopne
clc
or
stc
or
fmul
in
into
stc
lret
out
call
aad
fcomip
sar
add
enter
leave
repz
mov
jmp
out
rcl
fdiv
add
aam
icebp
in
incl
faddp
or
loope
in
lret
loopne
ljmp
call
mov
in
std
add
int
adc
out
repnz
xlat
leave
mov
fcmovbe
in
in
fcomip
ljmp
add
or
aam
pop
ret
mov
int
ror
mov
xlat
mov
not
loope
repnz
out
pop
cld
out
in
in
in
out
in
out
inc
cli
fdiv
into
int3
iret
xlat
cld
mov
stc
clc
or
std
scas
fadd
repnz
mov
int3
into
repz
out
in
repz
sar
hlt
or
lret
adc
mov
in
jmp
mov
into
mov
out
repnz
lret
aad
push
add
add
ror
loop
shl
cmc
mov
enter
testb
std
loopne
add
mov
mov
ret
rcl
out
in
ret
in
icebp
rol
neg
add
cmpsl
out
out
repnz
into
leave
int3
mov
cmc
int
aam
neg
rorb
pop
add
add
leave
in
lret
mov
imul
xlat
mov
in
repz
hlt
clc
stc
in
shl
ror
mov
mov
rol
mov
divb
mov
or
sar
aam
out
jecxz
mov
mov
jmp
mov
out
mov
hlt
int
test
hlt
cli
testb
loope
out
or
in
jmp
in
in
lret
mov
mov
fdivr
mov
jmp
ret
jecxz
jecxz
in
fcmovne
mov
int3
int3
faddl
rcl
cli
int
rcr
mov
add
repz
out
clc
mov
enter
add
loop
loop
sti
cli
cld
jmp
rcr
out
ljmp
lret
std
clc
mov
add
fadds
cmc
int3
ret
mov
sti
shr
mov
mov
cmc
shl
mov
ljmp
les
fadd
ljmp
lret
aad
in
mov
rorb
neg
cmc
add
add
icebp
mov
jmp
ljmp
fsub
rcr
jecxz
aad
loopne
hlt
call
loope
in
cmc
lret
out
jmp
cmc
add
mov
fiaddl
lret
fdiv
in
out
shlb
iret
mov
fsub
fcmovnb
xlat
jecxz
loopne
or
jmp
fsub
out
in
lods
shlb
mov
shr
out
neg
mov
cli
pop
pop
aad
or
in
les
leave
shrl
sti
mov
mov
add
fdiv
int
cli
test
iret
scas
mov
loopne
call
repnz
clc
mov
loope
fnstcw
into
in
scas
mov
rol
scas
sar
mov
sar
aad
icebp
shl
shl
loope
in
cmpsl
into
fcmovnb
mov
out
in
mov
jecxz
sar
shl
mov
stc
into
mov
test
out
in
out
iret
sti
jmp
add
lock
aam
jmp
add
aam
loopne
lret
rcr
rol
in
fcmovnbe
loop
sar
fyl2xp1
cld
shl
sarb
ljmp
lock
mov
fcmovne
shr
mov
aad
ret
add
push
rorb
enter
add
xlat
lods
icebp
out
fstpt
repz
jecxz
shr
lock
clc
out
rcl
ljmp
mov
shlb
add
rcl
add
imul
not
leave
jmp
jecxz
out
jecxz
into
jmp
test
mov
cmc
idivl
fdivr
repnz
into
loop
into
icebp
lret
fucomip
call
cli
in
hlt
lds
mov
out
adc
mov
ror
jmp
jmp
mov
rcr
rcl
jmp
out
enter
int
ret
icebp
fidivl
jmp
hlt
add
mov
push
or
fdivp
lods
enter
in
mov
mov
int
add
fcmovb
loopne
or
hlt
iret
psubusw
add
int3
leave
in
mov
in
fmul
rcr
cmc
add
rorl
sti
ljmp
xlat
ret
lods
shl
fprem1
into
int3
repz
add
add
fdiv
or
jmp
int3
mov
into
icebp
loopne
out
fprem
clc
aam
sti
rcr
fdivrp
into
fscale
cld
ljmp
in
or
in
int3
in
in
loop
out
std
aam
call
fcmovnbe
mov
out
sti
adc
shrb
int3
icebp
mov
mov
fdiv
int3
ror
add
rolb
fimuls
rol
or
rol
xlat
int3
lods
loopne
mov
in
int
sarl
cld
add
aad
or
test
idivl
mov
fistpll
ror
in
wbinvd
fucomp
fsubs
ljmp
not
repnz
into
ret
pop
add
std
fst
push
or
repz
loop
lret
sarl
into
clc
out
loop
add
or
fucomip
add
fadd
ljmp
clc
fmul
repnz
fmulp
aam
fcmovnb
roll
add
incl
or
out
stos
imul
mov
loopne
mov
mov
mov
add
rcr
std
icebp
loop
in
out
iret
in
shl
loop
ret
mov
out
xlat
mov
shl
push
loopne
loope
in
sti
or
sti
repnz
mov
pushl
out
faddp
out
std
loop
in
cli
loopne
ror
lock
mov
fdiv
mov
mov
roll
add
cmc
or
in
loop
call
cmc
mov
fidivrl
neg
cmc
clc
aam
enter
test
in
shll
cli
frndint
rcr
rcr
mov
hlt
or
jmp
les
call
repnz
out
lods
repnz
sti
icebp
jmp
aam
lock
hlt
lret
push
cmpsl
shl
mov
sti
sarb
jecxz
into
mov
or
fadds
out
add
rcl
repz
icebp
mov
in
mov
aad
lret
out
clc
fldl2e
mov
out
xabort
mov
fnstcw
clc
mov
in
out
in
shrl
mov
in
fnstenv
out
fdivp
stc
add
icebp
add
fld
aam
fmulp
mov
mov
loope
in
in
leave
iret
std
loope
out
ret
imul
push
fldl
push
add
aam
test
rcl
clc
sti
stc
enter
ret
ror
or
stc
clc
stc
stc
jmp
lret
repnz
ror
call
std
leave
int3
aam
sar
sti
fcomi
cmc
fcom
or
out
in
enter
jmp
fsub
out
cli
aam
lret
out
out
cli
cli
cmc
not
cld
fsubp
push
jecxz
push
fcomp
fildl
scas
in
jmp
fincstp
mov
out
lock
or
out
ljmp
lret
hlt
mov
lret
push
mov
push
or
les
out
loop
les
fcom
icebp
lret
enter
repnz
rcr
xlat
std
loopne
in
in
or
lret
ret
lret
stc
fcomp
neg
hlt
pop
sti
fdiv
fcmovb
loope
in
int
or
shrl
test
mov
add
sarb
loop
fmull
mov
call
mov
sti
stc
mov
icebp
clc
jmp
fldl2t
clc
ret
mov
icebp
lock
out
enter
out
lock
mov
lret
lds
jmp
int
in
test
mov
leave
hlt
mov
out
inc
stc
add
fcom
hlt
or
loope
idivl
aam
xlat
jmp
in
jecxz
aam
cld
pop
mov
or
push
flds
push
fucomip
int3
lods
mov
stc
cli
mov
cli
into
sarb
jecxz
ljmp
mov
rol
lock
lods
out
into
lret
int3
std
clc
ret
lret
lock
fcmovnbe
cmc
add
clc
push
mov
out
mov
repnz
jmp
clc
mov
loopne
loop
sti
jmp
ffree
jmp
in
fcmovne
vaddsubps
jecxz
in
mov
sti
stc
out
decl
mov
mov
shl
lret
aam
fsub
cmc
clc
sti
aam
jecxz
enter
fdivp
imul
in
mov
xlat
ror
ljmp
sarb
iret
jmp
mov
loop
stc
in
mov
div
not
cld
aam
add
or
repnz
mov
iret
fcmovnbe
mov
out
idiv
roll
int3
fildl
neg
rol
in
add
push
or
fsubrs
mov
fsubr
clc
lret
mov
rcr
or
jmp
out
mov
mov
in
mov
not
int3
out
fucomip
mov
cli
incb
std
add
sti
fsub
stos
scas
ret
scas
rcl
loop
call
fstpt
add
or
shl
push
cld
loope
in
enter
sti
into
out
mov
mov
mov
loopne
mul
add
add
jmp
add
fneni(8087
call
fcmovnb
mov
aad
les
mov
icebp
repnz
call
loop
shr
loopne
out
loop
aam
in
out
sti
mov
out
add
mov
lret
icebp
mov
jmp
stc
repz
rcl
icebp
mov
add
or
lret
jmp
out
ret
jecxz
mov
ljmp
mov
fsub
mov
push
add
pop
shl
in
out
test
stc
mov
std
xlat
out
call
loop
testb
sti
cld
push
shl
ljmp
shl
mov
rol
int
mov
or
hlt
out
jecxz
jmp
out
jmp
shr
fucomp
jecxz
loop
aam
std
inc
out
cli
int3
loopne
fidivrs
jmp
out
into
sti
std
repnz
rcr
add
ret
loopne
por
lret
out
int
movsb
enter
mov
rol
repz
rol
push
icebp
lret
std
enter
lods
test
hlt
out
shll
mov
lock
mul
fimull
clc
loop
repz
repnz
in
not
in
shl
repnz
fdiv
idivl
fcmovu
or
enter
leave
leave
repz
int
iret
out
in
aam
shr
jecxz
sti
loope
std
mov
mov
in
mov
in
test
sarl
fsub
mov
lock
add
out
or
fld
mov
int
repz
icebp
cli
lods
mov
cli
stc
rol
loopne
aam
add
out
add
push
add
icebp
in
out
in
in
roll
leave
loop
out
repz
shl
out
cli
in
in
out
mul
lods
lods
out
aad
aad
in
jmp
leave
xlat
fdivr
out
mov
in
vpmulhuw
mov
test
mov
stc
aad
mov
shl
int
add
or
ljmp
mov
mov
lret
in
out
aam
idiv
add
fcos
ret
rol
pminub
repz
lret
mov
loopne
vpsubusw
ffreep
out
in
mov
ret
sti
mul
in
call
mov
loopne
ljmp
stc
neg
out
out
loopne
ljmp
mov
cli
rcr
xlat
std
xlat
mov
mov
xlat
aad
or
cld
in
out
call
rol
out
mov
add
aad
sti
in
out
sti
cmc
loop
or
loop
test
ret
into
enter
in
divl
repz
idiv
out
fadd
cli
ljmp
mov
lret
lret
mov
fucom
fadd
loop
hlt
add
jmp
mov
ret
icebp
loopne
xlat
shl
int3
mov
div
or
add
out
cld
add
test
jecxz
jecxz
cmc
stc
test
call
or
lret
in
add
fcmovu
lret
out
rol
lret
mov
mov
add
ljmp
in
in
lods
mov
icebp
aam
in
mov
jecxz
mov
hlt
leave
cld
fcmove
test
mov
int3
aad
fcmove
in
repz
fnstcw
repz
loope
out
or
out
lock
mov
frstpm(287
rol
mov
sti
mov
into
aam
fcmovnu
jmp
icebp
push
aam
add
in
ljmp
in
mov
mov
in
repnz
lock
sti
add
add
or
adc
out
jmp
cli
neg
sar
xlat
cli
sar
rcl
loop
call
int
mov
shl
mov
into
mov
aad
int3
idiv
neg
mov
push
add
out
fisttpl
lods
cmpsb
iret
lret
ror
lock
sti
shll
fsub
add
add
add
aam
or
add
cmpsl
rol
cmc
iret
jmp
inc
mov
int
stc
ret
in
fcmovu
fmul
pop
repz
lods
loop
mov
lret
mov
ljmp
enter
sar
leave
out
xlat
fiaddl
call
movsl
int
jecxz
ljmp
mov
ret
pop
fadd
faddl
out
paddw
jmp
mov
loope
in
into
lock
std
pop
ror
lret
xlat
out
leave
lds
leave
test
repz
mov
hlt
mov
fiadds
int3
lock
repnz
stc
out
add
into
out
mov
lods
ret
lods
cmc
hlt
mov
lret
into
cli
jecxz
cmc
clc
pop
repz
or
call
stos
int3
ret
in
mov
ror
loop
add
incb
loopne
out
cli
shl
int
out
jmp
out
in
divb
loopne
fidivrl
push
iret
ljmp
into
rcl
shr
mov
xlat
push
pop
loop
faddl
hlt
out
lret
fcmovb
out
lret
ljmp
lret
mov
in
clc
fcmovnb
add
ret
fmul
or
bnd
scas
out
mul
loop
shl
fbstp
hlt
xlat
loopne
add
ret
lds
add
pop
out
bnd
sar
int
lret
mov
int3
fst
or
add
jmp
lods
int3
mov
cli
mov
fxch
enter
loopne
cld
sti
sti
add
fcmovb
or
stc
out
out
shlb
mov
out
mov
out
rorb
rcr
int
ffree
int
loope
aad
mov
stc
out
fdivr
mov
out
jecxz
add
fdivr
fdivr
fdivrp
iret
bswap
in
loop
lods
mov
lods
loop
cli
fcom
in
fdivrs
aam
shl
shl
enter
jecxz
repz
mov
hlt
int
out
jmp
out
mul
add
aam
les
loop
fsubrl
cmc
frstpm(287
sti
repz
in
xlat
add
icebp
rcl
fsubr
fmul
fsub
xlat
lret
rcr
out
ret
not
int
fcomip
add
aad
loopne
rol
or
lret
or
call
std
loop
div
in
in
out
fcmovnbe
lret
fucomi
stc
lock
mov
add
dec
fdiv
scas
fdiv
mov
not
mov
iret
not
enter
push
sti
std
or
leave
stc
in
or
ret
mov
ljmp
cli
fildl
sarl
loopne
or
std
in
leave
int
in
mov
mov
std
pushl
repz
aad
out
or
jecxz
std
loope
test
shr
mov
repz
mov
repnz
pop
in
lret
mov
out
loope
imul
fstpt
aam
mov
out
aam
fiaddl
into
loop
shr
lock
imul
iret
int
incb
loop
ret
aam
pop
call
add
call
out
call
fmul
lock
loop
rolb
ret
rorl
ljmp
ret
leave
iret
loope
repz
mov
lret
fistpll
mov
lds
int
leave
out
test
ret
out
iret
in
icebp
fistpll
icebp
inc
add
jecxz
loopne
out
mov
rcr
mov
fdivrs
not
icebp
add
add
lret
fdiv
out
loopne
push
fmul
into
shr
mov
rol
fcom
iret
fadd
add
frstpm(287
in
stc
fst
fmulp
stos
int3
mov
mov
iret
out
fcom
idivl
mul
loopne
div
mov
sarb
mov
idivb
mov
jecxz
loope
shl
add
jmp
test
mov
mov
aad
jmp
mov
sti
inc
aam
clc
jecxz
repz
in
in
loopne
aam
lret
fistpll
rcr
jmp
add
out
into
lods
scas
test
out
repnz
add
stc
rol
or
enter
or
lock
jmp
fdiv
iret
mov
mov
loopne
jmp
add
loope
int3
enter
loope
jmp
mov
out
mov
mov
mov
fdivrp
lds
add
fsubrl
vpaddq
icebp
loop
mov
icebp
lret
out
loopne
out
out
out
call
lret
fdiv
ret
fcmovu
shl
or
stc
out
call
adc
lock
int3
lds
test
loop
idivl
or
int
ljmp
rcl
mov
repz
hlt
shl
out
shl
fyl2xp1
shl
add
add
jecxz
lret
rcl
cmc
out
stc
into
mov
in
aam
in
ret
add
aad
sti
loopne
clc
stc
std
add
pandn
leave
loop
int3
shr
test
icebp
mov
fisttps
or
or
adc
out
shr
call
mov
in
fcmovnbe
test
sarb
call
les
push
loop
loopne
iret
loopne
out
lret
repz
idivl
cld
shl
jmp
flds
pop
jmp
out
clc
out
lret
leave
out
lods
mov
iret
mov
imul
ret
fidivrl
jmp
ror
int3
shr
leave
lret
sti
in
scas
in
out
mov
lret
ret
idiv
fidivrl
out
enter
pandn
icebp
mov
in
rcl
int3
mov
fcmovnbe
ror
jecxz
in
loop
out
iret
ret
ljmp
sti
divl
iret
fstpt
fcomi
loope
or
add
mov
shll
stc
icebp
mov
add
fcomi
add
icebp
in
out
into
lret
cld
cli
jecxz
out
jmp
enter
leave
repnz
out
mov
add
lret
loop
fsubr
stos
icebp
out
leave
cmc
xlat
out
ror
mov
cmc
int
cld
in
repz
enter
int
adc
vpand
fstp
cmc
imul
mov
lret
sti
push
add
pop
test
aam
neg
rcr
mov
add
hlt
icebp
in
sti
sar
aad
jmp
lds
loope
shrl
int3
fcmovnbe
iret
cld
fcmovu
fpatan
mov
in
call
loop
jmp
mov
rcr
mov
out
in
mov
in
shl
stc
loope
enter
ret
out
int3
out
lret
out
ror
mov
ror
shl
std
std
fmulp
jmp
loop
in
out
ljmp
aam
aam
lock
ror
std
fsubrp
in
fdivr
in
fnclex
mov
loop
stc
mov
lret
jecxz
std
cld
jmp
movl
clc
pop
add
jecxz
or
jmp
in
sti
mov
mov
enter
stc
incl
shl
aam
fdiv
roll
shr
stos
repnz
bnd
fsubp
add
neg
in
add
in
or
or
or
lods
into
jmp
mov
xlat
lret
iret
mov
fcmove
cli
aam
neg
ret
sti
test
in
call
scas
lods
lret
jmp
jmp
icebp
add
stc
pop
ffree
ljmp
lret
jmp
mov
lret
fcmovbe
int3
sti
enter
rcl
add
fcmovu
in
add
lock
icebp
out
call
ret
iret
lock
flds
or
or
enter
ljmp
aam
mov
loop
loop
fcmovu
mov
pop
add
ror
out
rol
lret
into
fdivrs
out
ret
add
loop
loopne
fnstenv
leave
lods
in
repnz
xlat
add
pop
sti
repz
out
add
add
out
in
loope
ret
fucomip
jmp
not
add
out
clc
push
ret
cli
in
out
repz
lods
aad
mov
fsub
xlat
lret
rcl
ret
repnz
decb
lret
fsubr
ljmp
loope
aam
fcmovnb
mov
in
mov
out
faddp
stc
into
clc
ror
mov
divl
jmp
mov
repz
fdivrl
out
std
jmp
out
aam
shr
mov
shr
lret
ljmp
not
push
or
aad
fdivrp
icebp
leave
scas
in
icebp
mov
shlb
fmulp
mov
aam
sti
fsub
cmc
jecxz
ficoml
call
jmp
mov
repz
repz
call
out
lret
incl
out
hlt
fucom
add
rcr
shrl
cli
imul
shll
in
ret
pop
in
lret
or
hlt
loope
out
in
call
out
out
aam
out
mov
ret
into
leave
mov
mul
lock
cmc
idivl
add
add
fucom
add
push
lods
rol
cmc
rep
xlat
out
shl
repz
mov
std
cmc
les
sti
aad
clc
str
loop
xlat
call
mov
sti
mov
hlt
icebp
fcmovu
mov
rcr
in
femms
out
pop
or
or
test
mov
ret
jmp
mov
iret
ret
mov
add
shlb
repz
xlat
cld
hlt
sti
ret
std
loop
lret
or
cli
or
jmp
cli
shrb
loopne
in
rcr
std
add
cmc
rcl
add
vpsrad
shl
out
lret
mov
call
shlb
mov
imul
or
lret
int
stos
ffree
out
imul
mov
in
mov
mov
clc
loopne
enter
add
cli
fisubrs
out
fbstp
lock
hlt
cld
mov
leave
push
add
int
lret
loope
lock
mov
leave
lods
mov
mov
iret
rcr
inc
push
inc
jmp
add
out
add
leave
mov
aam
int3
fcmovb
jmp
loope
xlat
loopne
hlt
sti
sti
add
jmp
call
test
clc
clc
clc
rcr
lock
in
fldl
ret
or
dec
in
mov
aam
out
scas
fidivs
iret
int3
repnz
add
loop
adc
mov
int3
jmp
hlt
hlt
int3
mov
icebp
fadd
lock
iret
loope
enter
mov
aad
imul
ffreep
rcl
call
idiv
add
jmp
clc
add
or
loop
stos
stos
in
lret
stc
push
mov
sti
int
in
test
loope
f2xm1
shl
cli
add
enter
scas
scas
out
cmc
mov
out
fidivrs
in
out
mov
pop
out
sti
les
ljmp
test
fxch
hlt
int
ret
icebp
mov
psraw
repz
out
out
jecxz
fucomi
hlt
not
jmp
xlat
rolb
hlt
out
fldl2e
cmc
out
loopne
in
mov
out
repz
cli
mov
mov
mov
sar
xlat
out
leave
ret
or
int3
push
out
enter
ret
in
fxch
in
ljmp
test
in
fcmovnu
or
sti
ror
mov
fst
jmp
icebp
fdivr
hlt
or
out
pop
psubb
repz
ret
jmp
sti
iret
hlt
mov
ret
clc
jmp
aam
jmp
shrl
lret
mov
add
fcmovnbe
shl
icebp
out
out
call
xlat
stos
lods
ret
loope
mov
lret
cmc
stc
flds
fsubp
repz
add
mov
or
lret
lock
mov
test
icebp
mov
divb
add
add
cmc
into
fcmovu
or
shll
loop
mul
sti
call
ret
aad
add
fmulp
loope
or
sti
std
into
push
imul
call
mov
lret
fdivp
add
aad
sti
mov
cmc
fsubr
add
jecxz
ret
loope
mov
out
iret
fadd
int
fsin
repz
push
fcom
in
std
enter
rcl
hlt
in
rcl
lret
repnz
vpaddb
or
add
repnz
bnd
clc
lret
call
mul
out
out
out
xlat
add
mov
iret
mov
test
hlt
in
aam
cmc
add
mov
add
hlt
out
call
shl
jmp
aad
mov
incl
in
iret
or
sti
stc
mov
enter
int3
mov
roll
cli
cli
cli
mov
movl
jmp
shl
iret
mov
stc
stc
cli
fcmovne
rol
hlt
int
icebp
stc
fucomip
ffree
cld
lds
repz
shl
mov
loopne
repnz
cmc
sti
fnstcw
mov
add
ffree
std
shl
cmpsb
test
stc
int
int3
lock
fucomp
jecxz
add
out
or
add
icebp
lock
aam
out
hlt
jmp
repz
stc
mov
loope
jecxz
or
aad
fucom
in
scas
fisubrs
lock
hlt
mov
call
out
icebp
add
stc
fcomip
fmuls
std
in
lret
lods
icebp
mov
int3
not
sarb
cli
roll
ret
mov
in
pop
push
out
loop
lods
fmulp
rcr
out
iret
in
in
lret
mov
lret
loope
rol
repnz
aad
in
fdiv
into
lods
lods
mov
mov
mov
enter
std
mov
fcmovnb
or
mov
lock
shl
dec
into
clc
fstp
iret
cld
mov
loopne
fsubr
enter
out
mov
loope
out
in
jmp
aad
lock
mov
cli
icebp
repz
fadd
jmp
loopne
out
loope
fucomp
out
loope
leave
mov
mov
call
rcr
lock
rol
out
in
fdivrl
sar
test
mov
mov
in
lret
or
loopne
into
clc
iret
into
mov
mov
mov
shlb
idiv
aad
add
roll
add
paddd
adc
vcvtdq2pd
out
out
loopne
in
ljmp
rcr
mov
int3
loopne
repz
mov
rcl
aam
iret
fyl2xp1
in
fiaddl
mov
jmp
iret
fucomp
jecxz
fdivl
mov
fcmovb
mov
stc
hlt
int3
in
fidivrl
fcmovnu
loope
add
call
jmp
aad
rcr
hlt
jecxz
in
jmp
cld
icebp
in
jmp
xlat
fsubrp
out
leave
loop
int
loope
loop
mov
repz
leave
ffreep
rol
sar
neg
mov
iret
bswap
out
iret
test
out
hlt
jmp
iret
mov
ret
cmc
sarl
mul
fsubp
add
shl
fnsave
mov
aam
rcl
cli
loopne
jmp
add
out
loopne
iret
leave
mov
mov
fcmovnbe
repz
cld
in
loopne
add
movl
div
mov
int3
out
lock
add
mov
loop
or
push
hlt
or
or
add
call
iret
fldz
jmp
icebp
mov
rol
sar
fld
lret
mov
in
stos
test
test
fdivr
mov
icebp
not
std
jmp
add
leave
or
int3
loop
ret
fsubr
mov
in
fcmovbe
mov
add
loope
out
ljmp
xlat
in
not
repnz
mov
in
aad
lret
add
in
scas
fsubrp
lods
mov
out
iret
cli
in
jmp
icebp
in
repz
les
pmulhuw
repz
iret
mov
sar
stc
out
pop
push
xlat
add
fucomip
lods
leave
int3
loope
mul
icebp
in
mov
test
icebp
out
cmc
fcmovnu
loop
ret
fimuls
cli
in
in
shlb
lods
call
mov
std
push
in
mov
or
fdivs
mov
shl
ror
int3
fadd
stc
cli
mov
add
add
mov
divb
mov
add
loopne
jecxz
ret
lret
fmul
mov
xlat
in
fcomp
out
fnclex
testb
add
push
pop
add
add
loopne
cld
fcomp
loop
enter
stc
fld
in
test
rcl
ret
int
flds
add
cmc
loop
repz
int
mov
repz
icebp
in
hlt
mov
mul
faddl
out
leave
std
loop
scas
in
enter
loope
idivb
aad
sti
fidivrs
or
lret
cld
repz
ret
out
call
int3
iret
cld
aam
repnz
mov
rolb
fyl2xp1
clc
or
mov
enter
mov
shl
cmc
fdiv
in
out
fdivr
loop
vpmullw
fyl2xp1
out
add
rol
mov
out
mov
std
testl
jecxz
out
lret
in
rcr
mov
int3
lret
repnz
shl
mov
mov
xlat
lock
aad
cld
shl
fldl2t
jecxz
or
ror
shr
loopne
rol
int
ljmp
ret
std
jmp
jmp
or
decl
decl
decl
decl
decl
cmp
jae
mov
movl
mov
movl
lea
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
xor
add
imul
add
mov
jmp
mov
xor
mov
xor
add
mov
mov
xor
add
imul
or
lea
mov
xor
add
lea
mov
jmp
mov
xor
mov
lea
jmp
scas
in
dec
je
mull
imul
lods
jns
add
loop
out
shll
in
call
shr
fld
fucomip
jmp
aad
in
fildl
stos
leave
int3
in
out
out
shlb
out
fcomi
test
stc
fisttpll
iret
scas
div
into
mov
ljmp
jmp
sti
shr
in
loop
add
add
add
in
int
leave
leave
jecxz
in
aad
rcl
clc
mov
mov
fadds
clc
xlat
ret
loop
in
jmp
lods
jmp
rcl
stc
leave
mov
mov
add
jmp
add
sti
add
or
repz
xlat
int3
mov
mov
sar
loop
ffree
lret
shr
shl
jmp
xlat
in
out
ljmp
fstp
ret
lret
add
hlt
cmc
push
out
scas
in
jecxz
mov
shl
into
clc
lret
frndint
mov
lds
add
or
into
clc
mov
mov
fdivr
sar
fsub
out
cli
or
hlt
ljmp
hlt
int
mov
out
enter
repnz
fstp
jmp
out
call
fmul
repz
repz
into
rcl
cmc
iret
fdivrp
mov
sti
enter
fcmovu
rol
iret
ror
sti
cmc
shr
int
mov
cld
add
cli
fdiv
aam
in
ret
iret
loop
shl
hlt
into
in
aam
out
mov
push
repnz
mul
in
iret
out
mov
mov
mov
mov
aam
lods
sarl
iret
mov
cmc
out
push
or
ror
jecxz
icebp
ljmp
out
fcomip
jecxz
fcmove
fcmovu
shl
cld
in
iret
or
repnz
in
scas
lret
enter
mov
call
shr
incl
rorb
jecxz
in
cld
add
icebp
test
ret
aad
ror
int3
mov
loop
mov
jmp
ljmp
int
aad
enter
repz
std
add
hlt
push
sti
pop
leave
stc
add
jecxz
xlat
mov
rcr
sti
lret
in
shr
mov
ljmp
mov
enter
shlb
repz
xlat
leave
out
add
shrl
mov
sti
call
mov
fildl
fadd
in
out
out
repz
lret
lret
jecxz
out
mul
iret
enter
aam
fistpll
les
pop
clc
enter
mov
icebp
mov
mov
mov
repnz
cld
jmp
in
int
add
incl
or
fcmove
jmp
ret
scas
mov
test
mov
mov
out
icebp
out
mov
cmc
sti
stc
loop
leave
loope
test
lods
loop
iret
sar
shr
ret
add
loop
out
cld
jecxz
fcmovbe
loopne
out
lods
ret
mov
out
fistpll
shlb
xlat
cmc
xlat
add
push
in
ret
ror
mov
rol
mov
out
ror
ljmp
aad
fst
add
loopne
iret
jecxz
loop
rcl
mul
int
fucomip
iret
sti
into
mov
into
int3
shl
fucom
fimull
std
fninit
jmp
iret
mov
mov
int3
ror
idivb
int
mov
incl
add
ljmp
in
fneni(8087
out
leave
sar
mov
add
out
fimuls
lret
cli
in
in
mov
mov
iret
not
flds
loopne
in
repz
stc
out
cld
fcompp
adc
add
iret
ret
loope
scas
lret
out
stc
shl
cmc
aad
cld
xlat
rol
fdivr
ljmp
mov
lods
cmc
shr
cld
idivb
loope
clc
repnz
fsincos
fimuls
add
jmp
rcr
sar
mov
out
push
faddl
leave
iret
out
fstp
int3
in
jecxz
aad
out
cli
inc
mov
shl
out
add
in
mul
fldl2t
std
fidivrs
mov
repnz
ror
fstp
mov
mov
rol
add
pop
stc
in
in
mov
fcmovnbe
loope
mov
int
mov
mov
pop
loopne
or
fcmovnu
std
lret
out
sarl
fmul
repz
add
add
add
iret
fsubr
push
test
in
div
aad
jmp
aam
cli
loopne
mov
fadd
or
or
shl
movsb
mov
rcr
ror
lret
mov
mov
ljmp
or
jmp
ror
iret
in
leave
mov
rcr
std
pop
incl
add
fdivr
or
xlat
mov
into
enter
shll
mov
lret
in
add
ror
jmp
clc
int3
cld
hlt
hlt
fsqrt
lock
lock
fimuls
or
lds
lret
cli
loope
clc
push
not
lret
incl
add
lret
out
into
out
jmp
mov
shlb
add
add
cli
fmull
sti
jecxz
out
lret
lret
rcl
stc
clc
call
fdivrs
les
sti
or
fxch
lock
in
lods
shl
mov
jmp
in
fildl
out
add
lds
out
loope
mov
leave
mov
cli
shl
hlt
fdivr
lret
out
shl
shl
or
ljmp
out
in
iret
fucomp
rol
cli
call
mov
hlt
out
add
out
cli
shl
mov
lock
mov
pushl
int3
fcmovnb
add
int
loop
lods
iret
lret
shl
aad
mov
mov
fmul
add
repnz
call
push
inc
enter
pop
in
repz
jmp
mov
add
xlat
jmp
loop
add
lret
shl
lock
cli
int3
mov
shl
loop
ret
add
out
pop
out
fdivrl
jecxz
mov
repz
mov
fdiv
mov
fsubr
out
in
clc
jmp
mov
mov
jmp
cld
in
call
aad
xlat
rcl
jmp
ljmp
mov
jecxz
mov
fcomi
std
mov
int3
fdivr
clc
cld
fsubrp
aad
pinsrw
fisubrs
ret
not
mov
xlat
mov
mov
ret
bnd
add
iret
jmp
ror
out
int3
lock
mov
mov
fnstcw
fsub
or
enter
fsubrs
call
lret
int
fnstsw
into
add
inc
in
sti
faddl
stc
leave
fidivrl
mov
in
icebp
mov
shl
idivb
mov
add
or
lret
test
xlat
enter
xlat
mov
call
mov
out
fstpt
loopne
fadds
jecxz
stos
ljmp
clc
leave
mov
leave
std
clc
mov
add
jmp
add
ljmp
mov
jmp
into
jmp
mov
vpaddd
add
loop
ljmp
repz
int3
lock
out
fstp
mov
mov
aam
enter
lret
jmp
loopne
jmp
repnz
iret
rcl
rcl
lock
in
or
loop
lret
sarl
mov
out
mov
div
mov
loop
out
add
in
cli
sti
mov
mov
not
out
aad
leave
cmc
mov
repnz
push
lock
fcmovnu
add
clc
or
idivl
mov
les
loope
stc
aad
jecxz
mov
pinsrw
shlb
shl
rcl
mov
ljmp
ror
mov
divb
into
sar
incb
std
sti
shl
xlat
mul
clc
out
add
add
mov
mov
ljmp
fadd
ret
add
ret
test
call
shrl
xlat
mov
in
leave
aam
in
loop
rcl
add
add
out
call
test
call
clc
mov
int
loopne
pop
fdivrp
loope
or
out
cmpsl
enter
jmp
shrb
mov
rolb
cld
xlat
add
leave
fbstp
cmc
shr
shl
jmp
call
loop
rcr
inc
add
imul
pop
ffreep
jecxz
stos
ror
mov
jmp
jmp
mov
mov
sar
out
loope
jecxz
loop
lret
fbld
out
int3
std
lock
bnd
jecxz
hlt
hlt
out
add
in
repnz
in
mov
fsubr
aam
mov
fsubr
mov
pop
cmc
out
out
shl
lret
scas
icebp
ret
out
xlat
stc
les
ret
lock
pop
iret
into
fmul
lds
xlat
scas
leave
jmp
stc
mov
mov
rolb
fildl
cmc
in
loope
cli
int
fdivrl
into
ljmp
mov
stc
cli
add
call
lret
into
add
fdiv
mov
lret
clc
aam
mov
out
clc
fdivr
cmc
mov
ret
les
add
rcl
sarb
jmp
filds
fabs
iret
cmc
mov
mov
xlat
ljmp
leave
out
call
out
int3
ljmp
out
or
cli
add
out
repz
sti
sar
iret
lret
icebp
cld
shr
push
div
int3
in
ret
jecxz
loope
fldlg2
lret
xlat
rcl
test
mov
clc
ret
push
neg
ret
neg
in
in
ret
int
repz
fidivrs
int3
lock
in
stc
fcmovnb
add
in
hlt
aam
fld
mov
lds
ror
std
int
rolb
or
cld
fucom
faddl
jecxz
in
jecxz
lods
cmc
in
into
sti
fmul
fldl
in
loop
shl
rcr
out
fcmovu
pextrw
ljmp
int3
int
repnz
jmp
fcom
fiaddl
enter
adc
aad
int3
int3
test
cli
into
mov
in
shl
fcomi
iret
decl
add
ljmp
hlt
lret
mov
rcr
in
sarl
fimull
enter
lret
std
mov
jmp
into
divb
in
std
int3
shr
decl
stc
jecxz
ljmp
sarb
sar
repz
fcmovnu
shr
mov
cld
or
loopne
fcmovne
lret
repnz
xlat
add
cli
faddl
fdivr
lret
or
lret
loopne
mov
shll
enter
or
cli
sti
in
in
out
icebp
mov
jecxz
jmp
ret
mov
mov
aad
fnsetpm(287
or
std
or
out
or
lret
or
mov
sar
mov
sti
int3
shl
jecxz
fildl
call
ljmp
int3
enter
fcmovnu
neg
add
jecxz
mov
ret
or
leave
fsqrt
add
shlb
mov
mov
fdivrl
fcomp
push
fucom
into
in
loopne
lock
int3
int
loop
cmc
repz
in
hlt
add
xlat
std
mov
aam
clc
leave
or
shrl
out
mov
fyl2x
xlat
hlt
into
repnz
in
add
in
rcl
call
lret
fcmovu
ffree
mov
lret
mov
jmp
cld
int3
sarl
ljmp
aam
mov
scas
fdivs
cmc
loop
repz
in
out
fst
jmp
clc
loope
rol
in
jmp
mov
cmc
fsubr
ljmp
xlat
rol
add
fiaddl
out
xlat
call
mov
hlt
mov
mov
mov
cld
lret
or
jmp
fpatan
int3
fst
iret
shl
repnz
fsub
into
shl
repnz
aad
ret
jmp
out
mov
jmp
neg
rcr
fidivs
mov
mov
cmc
aam
vpsubsb
mov
loope
leave
imul
mov
loope
mov
std
fiaddl
fsubr
sti
in
out
icebp
rcl
loop
rcl
mov
cmc
lock
hlt
int3
faddp
hlt
fiadds
in
or
shr
mov
mov
shl
out
testb
add
lret
shll
mov
in
leave
mov
jecxz
loop
add
cli
cmc
rcr
enter
out
jecxz
shl
rcl
out
test
in
in
xlat
in
add
int
cmc
cli
repnz
fcmovnbe
fstpt
add
lret
enter
cli
clc
in
lock
jecxz
in
incl
in
rcl
or
out
test
stc
in
mov
icebp
lods
hlt
shl
call
clc
enter
add
div
in
leave
imul
int
test
mov
rol
mov
ljmp
add
mov
or
or
stc
out
fnstenv
int
scas
call
int3
testl
fsin
or
out
fmul
psrld
lods
test
in
out
sti
shl
mov
lock
inc
cld
stc
pop
or
out
mov
shll
jmp
out
jmp
std
mov
shl
leave
loope
mov
ret
leave
mov
mov
clc
loopne
les
lock
aam
lret
por
jmp
leave
stos
fcomi
hlt
icebp
mov
icebp
fcomp
mov
shl
fcmovnb
pmulhw
add
repnz
out
mov
repz
mov
add
jmp
out
mov
lods
jecxz
rcr
out
fstp
fcomip
repz
in
cmc
jecxz
out
repnz
jmp
mov
out
out
aad
div
fucomp
jecxz
stc
fdivr
out
xlat
movl
or
jecxz
lods
in
int
int3
lret
aad
icebp
mov
fsubrp
std
repz
aad
ljmp
fucom
lret
ret
lret
lret
rcl
mov
add
loop
rcr
stc
lret
fimull
add
in
in
enter
icebp
cli
call
aam
add
add
add
add
add
fsub
fsub
lods
shrb
in
mov
xlat
mov
shufps
incb
in
in
icebp
cmc
mul
sar
mov
jmp
ljmp
mov
ret
cmc
mov
xlat
mov
mov
rcl
iret
aad
roll
pop
or
ret
fcomp
jecxz
int
hlt
mov
icebp
cli
out
aad
mov
shl
xlat
loopne
decb
in
in
lods
mov
aam
enter
mov
ljmp
sti
fadd
lock
leave
cli
lret
rcr
leave
mul
mov
out
shl
mov
aam
xlat
loop
loope
in
jmp
out
fcos
add
ret
int
fdiv
rcr
div
leave
clc
in
int3
mov
add
clc
incl
lret
repz
jmp
leave
mov
jmp
mov
add
out
in
jmp
iret
ret
ljmp
stc
in
stc
std
aad
fistpll
mov
jmp
cld
out
leave
in
xlat
shrb
ror
cli
aad
flds
cmc
out
lds
fcoms
add
enter
mov
rcl
mov
enter
int
shr
add
out
in
push
lret
stos
stos
test
shl
jmp
in
call
stc
clc
loop
add
add
movsl
vcmppd
ljmp
std
fldln2
add
cmc
add
std
in
fpatan
lret
mov
shll
into
ret
out
std
mov
sti
loop
out
add
or
out
mov
out
mov
out
iret
jmp
loop
add
rol
cli
out
jmp
filds
enter
in
ret
fsubrp
iret
clc
idiv
ret
into
aam
loop
leave
out
aad
into
fld
shl
fsub
loope
mov
jmp
add
hlt
rol
fdiv
add
sti
or
loop
lods
mov
into
xlat
mov
int3
fdivs
sti
in
or
jmp
jmp
lret
ret
test
out
mov
clc
mov
rcr
loope
or
out
shl
loopne
out
loope
hlt
mov
mov
iret
aam
in
stc
lock
jmp
rcr
add
test
enter
in
loopne
ljmp
loop
mov
pop
invd
jmp
enter
lret
scas
hlt
lods
lret
loope
into
leave
aam
mov
out
add
repz
fildl
leave
hlt
fdivr
into
adc
ljmp
mov
lret
hlt
sar
fdivrl
fdivrp
neg
add
into
loope
movntq
int
mov
les
mov
add
push
stc
xlat
std
fcmovnbe
fcmovne
int3
stc
scas
shr
vpaddsw
out
fcmovu
in
sarl
clc
loop
fxch
in
out
jecxz
or
or
in
jmp
mov
repz
iret
mov
loop
sti
add
jecxz
jmp
sti
add
out
out
mov
out
sarl
shl
shl
stc
cmc
out
icebp
call
call
cmc
out
in
aad
cli
int3
loopne
sti
mov
iret
cmc
cld
repz
jmp
lret
ret
in
mov
cmc
mov
lret
clc
in
aam
in
sti
push
out
push
std
ljmp
in
mov
mov
mov
cli
aam
push
repz
cmc
fxch
iret
fmul
les
rep
ret
into
lock
int
mov
cmc
cmc
hlt
mov
add
push
out
iret
lret
out
div
scas
sar
shl
sti
lods
repz
add
lock
push
hlt
jmp
jecxz
fbld
mov
test
mov
std
jmp
cmc
fcmovnb
add
cld
fmuls
int3
icebp
movsl
repz
out
rol
out
lret
mov
clc
aam
sar
add
in
push
add
add
iret
leave
aad
int
xlat
jmp
fstp
cmc
out
iret
mov
faddp
div
in
pop
add
mov
shl
mov
mov
icebp
icebp
aad
add
lock
fsub
rol
pop
push
call
or
shl
shr
bnd
stc
in
stc
shr
enter
repz
fucomi
ret
stc
lret
loopne
jecxz
loope
int3
in
rcl
loop
out
in
jmp
in
mov
fninit
jmp
in
lret
ljmp
cmc
in
fcom
std
add
cmc
fdivp
idivl
jmp
rol
lods
enter
stc
in
mov
fcom
std
fadds
pop
aam
lret
xlat
push
lret
push
icebp
mov
shr
lret
int3
out
mov
loope
movb
fst
loopne
add
jecxz
shrb
icebp
stc
cld
fnstsw
std
mov
cmc
fprem
or
ror
enter
lret
out
iret
add
hlt
cli
loopne
cld
les
leave
lret
or
stc
stos
fst
cmc
loopne
mov
repnz
mov
mov
mov
loop
fdiv
in
add
scas
lret
mov
push
dec
stc
out
icebp
jmp
out
lds
jmp
out
lret
ljmp
jecxz
add
in
std
push
mov
aad
loope
loope
shr
mov
loopne
in
aam
into
xlat
fadds
out
cld
add
add
imul
fldl2e
fmulp
jmp
lock
out
fst
pushl
repnz
ret
jecxz
in
clc
lret
out
iret
xlat
loope
loope
cli
lret
push
repnz
fiadds
fcom
out
enter
loope
out
in
shrl
shr
fidivrl
add
fcmovne
pminsw
in
shll
mov
shlb
clc
loope
add
div
add
add
aam
or
fsubp
in
test
fxch
lods
mov
aam
loop
shl
sti
fchs
in
fisttpll
into
iret
add
mov
xlat
lret
rcl
into
add
into
shl
rorb
cli
add
fdivrp
clc
ljmp
not
hlt
loopne
jmp
std
fcomip
call
in
fnclex
sar
add
pop
dec
fadd
ljmp
scas
hlt
std
bnd
out
fsubr
icebp
loop
jecxz
stc
or
lock
in
mov
mov
mov
jmp
aad
clc
lock
rcr
rcr
push
jmp
lds
or
jmp
jecxz
lret
imul
in
add
sarb
fadd
pop
lret
adc
fucomp
fucomip
out
int
loop
cli
lret
cmc
iret
mov
in
mov
fdivp
in
call
into
fst
scas
repz
iret
mov
fsubrp
mov
loop
fcmovbe
lret
add
call
ret
mov
mov
fcom
sar
mov
mov
std
stc
in
les
fisubrs
icebp
shl
fxch
jmp
int3
loop
mul
sti
mul
or
in
lds
adc
scas
shr
int
mov
clc
jmp
aam
fcomp
repz
movb
jmp
lret
fnstsw
jecxz
rcl
jecxz
icebp
lock
stc
aad
sti
in
in
into
aam
mov
in
rcl
add
add
bnd
mov
sti
mov
repnz
repz
not
enter
in
out
fmulp
rcr
mov
mov
int
lret
cld
loope
cmc
out
out
lret
lret
loopne
aad
clc
call
shl
lock
mov
rolb
iret
fmul
rcr
int
loope
add
loop
add
jmp
into
xlat
lret
in
mov
ljmp
repz
repnz
ret
or
shrb
in
into
xlat
lret
repz
fistpll
f2xm1
add
in
test
ret
mov
call
test
in
add
lret
loope
add
shrb
fcmovnbe
loope
into
mov
fucom
in
lock
ror
add
ret
shl
shl
ftst
add
or
icebp
mov
scas
mov
in
mov
mov
int3
fiaddl
add
push
inc
in
sti
lret
lret
out
out
clc
iret
mov
int3
mov
or
testl
add
mov
int3
cli
jmp
lock
int3
xlat
pop
hlt
int3
or
cli
in
or
jmp
shr
clc
in
cld
fidivs
or
add
fcmove
cli
call
loope
loopne
mov
mov
leave
ror
mov
fneni(8087
rol
in
lret
or
sti
in
out
shr
repnz
scas
aam
cmc
xlat
fistpll
loopne
mov
in
hlt
fisttpl
or
ljmp
repnz
vpavgw
aam
std
aad
loop
incb
shl
ror
add
test
in
ror
repnz
mov
jmp
fchs
aam
lret
repz
jmp
repz
mov
jecxz
in
out
loopne
jecxz
out
ret
int
loop
lods
lods
mov
mov
int
rcl
hlt
div
jmp
mov
shl
push
loope
or
adc
jmp
repnz
call
aam
out
repnz
ffreep
repnz
out
add
lds
repz
into
repnz
repz
iret
into
repnz
mov
mov
hlt
testb
jmp
inc
ror
int
enter
into
mov
mov
fidivs
stc
add
loope
add
in
repz
lods
repz
clc
mov
mov
hlt
int3
in
fildl
aad
out
add
ffreep
int
jmp
scas
fdivrs
cld
push
sti
ret
loop
sti
xlat
out
add
add
fmul
int3
shl
icebp
lret
mov
std
fst
cld
hlt
mov
mov
std
add
mov
test
lret
mov
mov
sarl
shl
stc
sti
inc
cld
out
into
repz
repz
mov
cmc
loope
in
mov
enter
aad
aam
into
fstp
pop
ret
fadd
pop
add
add
out
lock
test
out
mov
divb
shl
cld
clc
out
repz
cmpsl
shlb
loopne
call
sarl
or
in
mov
adc
fsubrl
mov
mov
mov
fadd
jecxz
aam
or
mov
ljmp
repz
fcom
out
add
clc
out
fiaddl
jmp
int3
in
not
lock
lock
clc
sti
call
shl
clc
loop
std
enter
in
ljmp
in
fcmovnu
lds
frstpm(287
repnz
lret
fcmove
lret
lock
mov
fsubr
mov
sarl
fadds
sar
cli
jecxz
sti
out
fsubr
cld
mov
jmp
cld
call
jmp
aad
testl
iret
mov
into
aam
repz
mov
std
imul
mov
add
rolb
push
ror
mov
imulb
in
jmp
idivb
push
stc
call
sti
loopne
lock
loop
mov
iret
sti
in
leave
mov
mul
stc
or
jmp
adc
jmp
xlat
rol
mov
repnz
lret
in
loop
add
add
loop
in
ror
into
adc
jmp
int
sti
lods
int
repz
icebp
jecxz
sti
sar
in
idiv
fndisi(8087
xlat
fucomp
add
mov
fmulp
loopne
shl
mov
mov
rcr
cli
mul
rcr
repz
lock
add
loopne
loope
loopne
ret
lret
cli
fcmovbe
out
lods
neg
int
test
out
mov
clc
lret
into
loopne
mov
out
in
rcl
in
cmc
mov
mov
stc
jmp
out
leave
fildll
mov
rcl
mov
dec
enter
mov
lock
aam
cmc
add
aad
loop
ljmp
enter
iret
fsubr
fistpll
fdivr
lock
shr
ffree
into
ljmp
scas
rcl
mov
ljmp
inc
cmc
add
out
out
jmp
aad
loope
loope
scas
lret
cmc
aad
clc
loop
shl
frstpm(287
stc
std
lock
icebp
shr
ljmp
enter
sti
cli
out
faddp
fst
jecxz
stc
or
fdivr
lret
mov
jecxz
aad
in
out
in
not
stc
stc
xlat
mov
jecxz
std
incl
jecxz
or
out
test
jmp
ljmp
loopne
std
clc
in
mov
fcmove
iret
lret
mov
neg
xlat
loopne
int
leave
add
loopne
pop
loope
std
cli
cmc
dec
in
loope
aam
iret
cmc
call
out
add
std
out
jecxz
shl
fnclex
jmp
fadd
in
rcr
scas
out
hlt
mov
out
jmp
jmp
in
loopne
aam
in
out
or
in
test
ljmp
ljmp
int3
flds
mov
rcr
add
in
stos
into
iret
lds
lods
les
repnz
fsubrp
add
out
sti
not
repnz
lock
add
fldl
mov
ret
testb
lret
ret
ret
jmp
mov
hlt
sti
iret
shl
sarl
fisttps
imulb
sti
mov
shll
std
out
repnz
out
cmc
loope
loop
in
out
jmp
lret
in
shr
std
ljmp
fdivr
repz
aam
leave
add
fcomip
leave
into
scas
cli
ror
in
mov
dec
pop
hlt
add
hlt
idiv
stc
out
push
int
shl
lods
loop
clc
out
stc
fsqrt
leave
cld
fucom
iret
mov
jecxz
hlt
or
clc
call
lock
lret
repnz
std
lret
add
add
repnz
xlat
fcomp
rol
leave
fucom
dec
lock
cmc
out
aad
mov
loopne
sti
jmp
loop
pmulhw
iret
into
mov
cmc
repz
iret
in
jmp
iret
jecxz
ret
aam
aam
lock
pop
in
scas
enter
aad
in
fyl2x
out
mov
lock
sarb
hlt
fsubr
fcmovnbe
or
out
int
rcl
xlat
stc
call
int
repz
in
or
or
adc
repz
mov
repnz
in
cld
sarl
f2xm1
repz
fsubr
add
clc
in
mov
loopne
rol
mov
cli
lods
fnstcw
icebp
fistpll
fucomp
fcmovu
dec
lds
mov
ret
in
jmp
aad
idiv
div
into
in
lock
cmc
iret
ret
test
in
int
lret
jmp
mov
out
cld
out
out
lret
rolb
sti
or
add
fmul
shr
leave
ret
loope
rcr
mov
leave
mov
cmc
cld
filds
mov
scas
leave
mov
ret
icebp
add
jmp
les
or
add
loope
shl
jmp
out
lods
mov
in
loop
stc
mov
leave
lret
iret
leave
int
iret
aam
lret
fxch
idiv
mov
neg
ret
fdiv
fisttpll
loopne
add
int
repnz
mov
push
rolb
pop
clc
xlat
rcr
cli
add
add
fbld
lret
ror
shr
iret
jecxz
mov
icebp
lret
leave
fsubr
add
repz
loope
lret
shr
lret
mov
in
ret
add
flds
ljmp
loop
mov
icebp
out
fmul
loop
fcmovnbe
ret
pop
loop
out
fcmovb
int
into
loop
in
icebp
mov
stos
in
jmp
xlat
ror
std
fnstcw
stc
icebp
faddp
aam
add
lods
loop
scas
out
leave
in
ljmp
sti
sar
mov
leave
cmc
add
adc
mov
loope
f2xm1
mov
hlt
mov
mov
out
out
ret
enter
in
test
mov
shl
jecxz
filds
sar
fld
fstp
fisttps
repnz
mov
xlat
mov
cli
iret
icebp
enter
loopne
add
loop
stc
push
iret
enter
les
icebp
repnz
mov
jecxz
aam
add
cli
aad
add
fucomip
xlat
loop
fcmovbe
in
in
mov
repnz
loop
in
aam
push
shl
mov
shlb
mov
out
into
ret
add
ljmp
rcl
aad
divl
rcr
ror
out
add
add
pop
jecxz
pop
out
rcl
lods
loop
mov
into
in
fadds
cmc
in
int
hlt
cld
or
fcmovu
aam
into
out
int3
test
jecxz
hlt
in
in
jmp
mov
cli
add
sti
add
icebp
repnz
mov
jmp
mov
call
sarl
push
push
leave
out
fucom
test
mov
repz
enter
fstpt
into
aad
shl
faddl
xlat
cld
aam
incb
or
les
divl
call
out
rcr
lret
fcomp
std
out
lret
fsub
fnstsw
jmp
ret
shl
fsub
loope
call
or
leave
ret
jmp
enter
aam
mov
fsqrt
rcr
jmp
out
aam
in
icebp
int3
int3
mov
add
rcl
std
out
loopne
neg
fimull
pop
out
test
call
stc
aad
imul
into
test
ret
hlt
ffree
enter
fxch
out
div
fcmove
mov
jmp
jmp
jmp
mov
xor
jmp
cmp
inc
inc
push
push
cmp
xchg
movsb
into
sbb
loop
sarl
add
jmp
ret
test
cmc
fdivrp
add
enter
ffree
test
out
les
fdivs
lds
std
jmp
add
jmp
ret
out
shl
lock
add
icebp
sti
loop
enter
iret
mov
xlat
ret
scas
jecxz
aad
mov
sarl
in
repnz
out
jmp
leave
mov
lods
mov
call
out
mov
lret
aam
loope
stc
mov
or
or
mov
sarb
repnz
lret
lock
xlat
icebp
in
faddl
fcmovbe
jmp
add
or
icebp
repnz
fcmovbe
in
test
xlat
div
xlat
or
cld
stc
iret
pop
sti
call
lock
in
clc
les
div
fisttpl
fld
add
stc
out
or
int
test
repz
mov
fdivr
out
fdivrs
cli
aad
add
add
repz
int
loop
jmp
mov
enter
into
int3
mov
aam
fdiv
decb
sti
or
shl
mov
mov
test
lock
cli
int
vpsrlw
hlt
lret
add
lret
int
shl
lret
rcr
mov
lock
sar
rol
or
aam
fmull
leave
pop
ror
jecxz
lods
loop
mov
cld
add
repz
fcmovu
ffreep
jmp
std
add
or
scas
shr
repz
mov
repz
xlat
cld
mov
add
lret
clc
ljmp
lods
shr
mov
in
add
mov
in
int
in
ret
jmp
vpor
mov
cmc
movl
jmp
or
add
test
divl
mov
mov
repnz
repz
cld
call
lods
scas
jmp
in
clc
fldl2t
mov
idiv
mov
ror
add
loopne
xlat
jmp
fxch
lods
jecxz
loope
enter
mov
mov
rcl
stc
mov
ljmp
lret
out
mov
int
out
iret
mov
mov
or
stc
stc
cld
push
ror
mov
out
call
mov
mov
ficoms
adc
mov
call
lret
cli
rcl
mov
add
fucomip
fcmove
std
jmp
loopne
mov
ljmp
mov
ror
shl
out
fimuls
lret
repnz
mov
icebp
in
out
shl
hlt
iret
clc
mov
sti
or
std
hlt
hlt
call
out
out
mov
enter
repnz
lret
call
aad
icebp
repnz
mov
repz
scas
scas
mov
int
mov
std
lock
jecxz
icebp
int
loop
out
or
stc
enter
in
out
scas
xlat
mov
fdiv
test
lock
loope
sar
std
add
fadd
add
add
rol
mov
mov
fcmovu
cld
cmc
fdiv
aad
ret
or
aam
dec
iret
add
enter
shlb
mov
int3
cli
sti
add
mov
add
enter
out
ret
sti
mov
aad
pushl
out
shl
push
ljmp
fcom
lods
jecxz
cmc
mov
enter
in
out
aam
rol
add
out
decl
clc
in
lret
ret
test
ret
out
jmp
int
fcmovb
mov
lret
fst
in
loopne
adc
leave
leave
shl
enter
mov
mov
cli
divl
hlt
cmc
out
ljmp
fstp
lret
lret
scas
ret
int
loop
rol
idiv
ror
aad
xlat
clc
push
loope
jmp
out
add
lret
mov
in
out
scas
mov
out
std
lret
mov
fld
call
lret
out
fisttps
scas
out
mov
ror
ljmp
mov
aam
or
fcomip
add
enter
mov
in
in
mov
ret
cld
pop
fstp
loope
cmc
faddp
add
or
pop
mov
loop
fmul
mov
shll
fst
sar
in
pop
ret
mov
or
out
loop
in
call
out
out
int3
idiv
fidivrs
into
ret
ret
push
vshufps
or
icebp
in
ret
ret
iret
test
in
leave
out
faddl
cld
add
hlt
out
lret
fsub
add
fmull
sti
out
icebp
mov
shrb
mov
int3
fiadds
loop
cmc
shl
loope
jecxz
aam
adc
fcomip
lds
jmp
mov
clc
icebp
ret
movl
push
out
adc
in
int
scas
shl
ljmp
mov
mov
out
mov
flds
ret
xbegin
out
call
imul
hlt
enter
cld
add
ret
neg
in
int3
bnd
aam
aad
shufps
shl
sti
jmp
sarl
into
add
cld
in
add
pop
shl
in
jmp
hlt
in
mov
fdivr
mov
pop
fdivp
stc
or
cld
add
add
lods
mov
jecxz
stc
sar
call
mov
add
roll
or
in
fucomp
in
jmp
scas
ret
icebp
mov
aam
int
idiv
jecxz
jmp
std
mov
cmc
enter
lret
loop
ret
mul
call
rcr
out
mov
aam
out
fsubrp
out
flds
or
loopne
lret
ror
out
mov
xlat
inc
rolb
cld
fdivrp
loopne
add
call
mov
loop
icebp
iret
mov
out
mov
rcr
lock
call
loop
fsub
lret
lock
lret
mov
repnz
cli
lock
stc
leave
ret
sar
pop
rcr
shl
fiaddl
adc
sarb
jecxz
repnz
sarl
add
add
roll
in
add
clc
enter
lods
cmc
enter
mov
ror
rcl
in
ret
shr
add
out
add
aad
lret
mov
into
lods
shl
in
icebp
sti
in
jmp
into
repnz
mov
in
repz
jmp
not
mov
clc
fucomi
in
aad
fcmove
add
or
or
repz
fsub
sti
int3
leave
repnz
ret
push
int3
add
loop
stc
lds
add
lret
in
scas
mov
out
mov
sarb
in
jmp
fadd
or
or
jecxz
mov
xlat
lock
aam
loop
push
lock
sar
stc
repnz
enter
enter
iret
lret
fdivr
int
mov
inc
rorl
leave
fcmove
call
iret
loope
aad
int
ljmp
loop
out
fadds
faddp
fnstsw
loope
mov
mov
into
aad
fst
sti
lock
in
sar
hlt
out
add
fcmovne
leave
fmul
call
xlat
mov
icebp
scas
mov
out
loop
int
add
faddl
cli
fdivr
hlt
stc
add
jmp
lods
into
icebp
rcr
out
add
enter
aad
fldl
jmp
fninit
leave
lret
mov
scas
mov
stc
mov
rcr
test
out
out
loope
rorb
lock
fucomp
jmp
ret
imul
mov
mov
aad
mov
int
push
out
xlat
push
out
fucomip
stc
shl
rcl
imull
cli
dec
shl
enter
mov
fcmovne
out
scas
ror
jecxz
repz
repnz
lret
fsincos
int
mov
fldl
rcl
adc
out
cmpsl
mov
call
idiv
add
add
ret
lret
loope
fdivrp
push
test
rol
lock
fmul
enter
call
sar
jmp
fisttpll
shrb
ljmp
stc
int3
sti
loope
bnd
out
out
in
fmul
add
or
stos
lods
in
test
lret
imul
out
mov
add
out
iret
call
loop
mov
mov
aam
mov
cld
call
add
add
paddusb
push
jecxz
ret
icebp
fsub
jmp
in
jmp
mov
pop
idiv
push
aam
ret
or
stc
loop
scas
repnz
lret
rol
leave
call
int3
in
shl
aam
jmp
movb
out
lods
out
lods
enter
shlb
mov
int3
ret
pextrw
push
in
movsb
mov
test
loop
clc
push
fsubr
shl
aam
pop
in
adc
adc
scas
jmp
mov
mov
mov
fcmovnbe
aam
filds
sti
or
ret
les
cmc
xlat
mov
jmp
mov
xbegin
out
fld
int3
enter
shl
repnz
leave
hlt
ffree
loop
aam
loope
loope
leave
fdivr
add
loope
ljmp
in
mov
fcmovu
jecxz
stc
add
or
in
add
in
mov
in
repz
mov
jecxz
mov
out
repnz
in
or
lret
out
fmul
out
out
repz
mov
mov
sti
fiadds
add
idiv
iret
pop
or
shl
lret
shl
rcl
test
fst
fst
int
loopne
clc
in
ljmp
cmc
sarb
mov
ret
movl
or
enter
ret
out
cmc
divl
std
out
cmc
loopne
push
add
add
test
loopne
loop
mov
add
repz
fadd
add
hlt
lret
shl
cmc
loope
ret
out
fcmove
mov
push
out
pop
or
add
incb
int3
into
int3
ret
xlat
xlat
jmp
mov
mov
sti
or
in
fimull
out
mov
mov
ljmp
in
xlat
mov
xbegin
iret
incb
fld1
out
out
jmp
shl
mov
icebp
mov
lret
cli
xlat
fistpll
fneni(8087
lret
leave
in
repz
repnz
stc
shll
cld
mov
fiadds
clc
cli
pop
add
add
shll
mov
icebp
div
cli
rol
fnstsw
into
fnclex
scas
fbstp
lock
leave
mov
repz
mov
icebp
mov
add
out
out
fsub
add
stos
lret
jmp
clc
push
xlat
shl
stc
div
xlat
in
std
call
stc
or
loopne
int
out
mov
aam
fdiv
rol
fucomip
aad
or
pop
std
leave
or
call
int3
fcmove
rcr
call
add
loop
in
jecxz
jecxz
add
lret
call
lods
jmp
out
out
cli
cli
mov
sti
int3
rol
lret
rcr
fucomi
mov
icebp
repnz
in
call
fstpt
cmc
or
in
jmp
fmulp
jmp
ror
mov
ljmp
roll
mul
mov
add
hlt
loopne
out
out
out
mov
ror
mov
lock
in
std
mul
out
cld
aam
fsubp
or
add
add
ret
lock
in
lods
out
divb
hlt
loope
mov
xlat
ret
shr
loopne
iret
iret
fdivl
in
ret
hlt
jmp
idiv
icebp
aad
rcr
idiv
cli
jecxz
out
call
mov
divl
bnd
fdecstp
fsqrt
or
pop
or
ret
call
mov
fdivrs
add
in
std
or
repz
hlt
shl
out
xlat
mov
hlt
fidivrs
loop
decb
wbinvd
fcmovb
out
or
shr
mov
mov
call
xlat
fcmovnu
sarb
cld
loopne
aad
lock
lock
in
fmulp
fmulp
add
ret
int3
rcr
inc
aad
ffree
add
int
shl
shr
lock
out
jmp
add
loope
cli
shl
or
pop
lds
out
enter
not
out
int3
divb
in
in
mov
sti
add
sti
or
sti
jecxz
rol
loop
loope
out
in
clc
mov
fdecstp
add
rol
pop
loopne
cli
add
shr
shr
icebp
int
in
shlb
call
out
repnz
fsincos
clc
out
aad
icebp
rcl
xlat
shr
shl
in
add
aam
fcomp
out
iret
fimuls
or
in
repnz
mov
test
loop
cmc
in
mov
add
out
test
mov
loope
lret
fdivrp
std
mov
mov
xlat
add
push
in
out
sarb
shrl
mov
shr
in
push
vpmaxsw
repnz
shl
into
not
out
int
shl
fucomi
in
shl
repnz
add
int3
shl
mul
in
in
jmp
in
jmp
vpsadbw
lret
out
int3
lock
out
lret
loop
loope
out
mov
loopne
mov
mov
mov
sar
in
clc
ljmp
repz
iret
mov
jmp
mov
mov
loopne
rorb
out
filds
push
pop
in
stos
stos
mov
shr
mul
out
ror
jecxz
in
add
jecxz
ljmp
inc
xlat
ffree
mov
mov
cmc
mov
ror
mov
out
icebp
movl
lret
clc
adc
mov
loop
mov
out
in
cli
jecxz
cmc
roll
pop
aad
in
out
loope
push
aad
cli
enter
ljmp
in
ror
lock
cli
aam
repnz
jmp
enter
cmpsl
lods
leave
call
shll
icebp
mov
loope
loopne
loope
ljmp
shl
rcl
rol
lret
aad
mov
shl
inc
aad
std
add
jecxz
fdivl
sar
mov
mov
fidivrl
pop
add
call
loop
mov
lods
in
loopne
leave
jecxz
stc
cmc
jecxz
not
aam
out
lds
out
mov
mov
test
in
in
add
fsubp
fprem1
in
lret
add
or
mov
jmp
in
loope
enter
leave
mov
mov
mov
sar
or
iret
enter
xlat
mov
fcmovbe
call
hlt
add
fscale
fld
in
out
loop
loopne
sarl
sarl
int
xlat
aad
div
in
fadds
shl
add
shlb
enter
mov
lret
fcmovnbe
mul
repz
xlat
jecxz
jmp
or
mov
mov
out
fidivrl
std
aam
clc
testb
cld
lret
jmp
loop
int
call
iret
jmp
out
mov
call
repnz
not
loop
jecxz
or
call
scas
lock
lods
shr
out
mov
cmc
fiadds
lret
add
fprem
jecxz
out
jmp
neg
iret
icebp
repz
in
add
in
out
add
out
int
lods
idivl
fdivrp
test
test
ljmp
loop
in
fnstcw
test
call
int
mov
in
ljmp
lods
cmc
shl
int3
mov
shr
call
call
sti
pavgb
add
adc
jmp
lods
fnsave
roll
shl
repnz
cli
out
add
in
repnz
loope
mov
into
in
out
mov
rcr
rcl
mov
or
aad
pop
enter
imulb
out
mov
cmc
mov
lret
add
aad
or
int
mov
repz
cmc
enter
mov
push
mov
jecxz
jecxz
enter
iret
xlat
xlat
jmp
mov
fnstcw
sti
out
fisttps
fadd
loopne
cmpsb
icebp
rol
mov
aam
shr
in
sarl
out
add
call
or
jecxz
loopne
jecxz
int
fnstcw
mov
inc
in
rcr
fldl
icebp
ret
lret
shl
into
mov
clc
mov
sti
lock
mov
shl
int
or
jmp
ljmp
sar
mov
mov
jecxz
idiv
loope
in
or
fsub
mov
mov
sarl
repz
int
ret
fucom
add
or
testb
iret
std
out
inc
loope
mov
shr
xlat
fmul
mov
int
add
test
fsub
jecxz
call
call
enter
sti
aad
fsin
stc
ret
rol
out
xlat
sti
push
fprem
add
jmp
lods
mov
aam
fidivrl
cli
aam
loope
fsubr
stos
imulb
mov
clc
mov
hlt
in
fstp
div
fiaddl
shl
jmp
out
or
lret
mov
mov
shl
repz
lret
rcr
mov
rcl
add
fcmovnb
jmp
out
std
in
ljmp
icebp
clc
rcl
jmp
into
shl
ret
fcom
mov
fdivr
fcmovne
faddp
jmp
mov
in
mov
cli
vpsrld
sti
out
out
ret
sar
add
div
or
fucomip
mov
lods
cli
loope
leave
les
ret
mov
aam
loope
les
or
lret
shr
into
clc
repnz
leave
aam
sti
sti
iret
rcr
aad
cmc
lret
enter
int3
test
iret
mov
out
lock
out
fmul
out
aad
add
int
int3
fsubr
out
int3
enter
shll
mov
mov
in
loop
icebp
shl
cli
jmp
icebp
in
out
into
rcr
ljmp
sti
aad
add
lock
in
leave
fnstsw
jmp
ret
repz
lock
ljmp
icebp
jmp
clc
les
or
aad
cli
push
in
out
shr
shrl
fcom
in
mov
divb
hlt
clc
add
or
test
out
loopne
out
mov
hlt
fcmovu
fsubp
iret
icebp
mov
xbegin
fisubs
cmc
ror
leave
sar
fcmovbe
sarl
out
pop
or
enter
cld
jmp
iret
imul
in
out
mov
mov
add
jmp
out
in
ffree
scas
int3
lret
scas
lock
cmc
fcomi
faddl
rcl
or
fcmove
or
repz
mov
int3
xlat
lret
iret
sti
int3
aad
std
add
pop
rcr
in
ret
scas
rcl
jmp
leave
icebp
fcomi
stc
mov
mov
paddd
ljmp
test
repnz
fdiv
mov
cld
add
fucom
cli
enter
leave
jmp
test
repnz
cmc
lret
shl
mov
testb
loop
add
jmp
enter
loope
ret
ret
mov
loop
mov
ljmp
rcr
jmp
loopne
fmul
or
mov
lock
clc
repnz
fcomip
enter
shl
fmul
loope
in
jmp
or
sti
bnd
mov
jmp
push
enter
into
shr
add
add
in
xlat
loope
int
ljmp
out
repz
loop
fcomp
add
add
or
loope
shl
mov
out
mov
clc
cli
mov
add
mul
out
or
into
lock
jmp
mov
in
idiv
iret
cli
mov
clc
or
fdivp
add
loop
lret
div
lods
jmp
repnz
ljmp
in
cld
add
out
iret
add
shr
lret
in
lret
jecxz
iret
xlat
stc
fcomi
ret
fldz
test
fabs
fcmovnbe
aam
out
loope
adc
leave
scas
lods
out
lret
xlat
int
dec
cmc
mov
sar
ret
shr
fdivrp
int
add
bnd
xlat
rol
out
pushl
mov
icebp
add
pop
push
ret
jmp
imul
in
repz
mov
idiv
add
rol
icebp
clc
sar
clc
loope
ljmp
scas
divb
lret
mov
loopne
loopne
or
out
paddq
push
ljmp
mov
fsubrp
mov
add
pop
mov
push
pminub
stos
scas
in
int3
cmc
mov
in
stc
clc
mov
mov
add
mov
mov
loope
mov
mov
fcmovnbe
leave
int3
cmc
sti
fcomi
iret
fcmovnbe
push
mov
fsub
or
add
in
icebp
shr
aam
out
int3
repnz
in
cmc
mov
lock
fnsave
dec
std
ljmp
sti
rcl
fcom
xlat
cli
leave
ljmp
hlt
lret
in
lret
out
out
repnz
out
out
out
iret
mov
icebp
incb
clc
fucomip
fcompp
testl
rcl
shl
loope
jmp
jmp
stc
repnz
clc
faddp
rol
pop
les
incl
aam
lret
test
shl
fcom
call
aam
hlt
mov
or
out
pop
fpatan
rol
lret
rcl
f2xm1
fnstcw
into
mov
mov
cld
jmp
jmp
mov
ret
lods
lret
in
cli
mov
rol
repz
fcomi
hlt
std
push
in
fsubrp
add
in
movsl
icebp
mov
hlt
int3
fcomip
mov
aam
mul
aam
shl
ljmp
fsub
rcl
ljmp
enter
mov
loope
rol
or
or
in
leave
mov
div
hlt
shl
in
mov
faddp
add
add
cli
cmc
stc
mov
int3
les
sti
aad
mov
hlt
aam
movl
add
adc
enter
mov
enter
testb
repnz
loop
test
lock
loop
in
stc
lret
repz
aam
out
clc
mov
test
mov
jecxz
dec
iret
shrl
repz
in
stc
call
hlt
div
stc
testb
cli
repnz
add
lds
out
jmp
mov
div
scas
mov
out
lock
push
fiaddl
lret
cld
ljmp
leave
into
fisubrl
out
mov
cld
fsqrt
fndisi(8087
in
decb
stos
in
fsubp
loop
mov
iret
divl
cld
into
mov
hlt
mul
add
imul
out
cmc
repnz
repz
fdivrs
call
int3
lret
lret
or
or
lock
leave
loopne
in
in
loop
mov
loop
repnz
add
in
or
iret
enter
aam
shl
in
fsub
not
jecxz
out
not
in
out
leave
fsubrp
in
test
xlat
scas
out
rcr
int
jmp
iret
lret
rolb
loop
clc
std
xlat
hlt
out
adc
jmp
icebp
ljmp
in
sarl
rol
ljmp
fsts
fcmove
iret
repz
hlt
lret
mov
mov
in
add
les
cld
iret
repz
fsubrp
icebp
enter
ror
test
std
mov
add
xlat
or
push
lret
lret
loope
jmp
in
shlb
shlb
out
mov
sti
loop
push
cld
lock
loopne
hlt
fcmove
cld
leave
mov
rcr
add
in
hlt
loope
fsub
xlat
ret
out
repnz
clc
shr
into
mov
jecxz
ret
add
dec
ret
add
add
jecxz
add
into
mov
out
mov
roll
call
in
mov
cli
stc
int3
stc
or
lods
out
int3
in
scas
leave
mov
loopne
add
xlat
cmc
mov
add
loopne
repnz
mov
into
mov
call
int
rol
pop
std
std
ret
sti
out
or
mov
xlat
int3
cli
fcmovnu
sarl
fdecstp
testb
mov
loope
loope
mov
out
mov
repnz
neg
iret
fdivrl
fdiv
add
or
iret
repnz
shl
shlb
mov
leave
mov
add
or
call
out
fadd
out
test
out
fldt
neg
int3
ret
repnz
idiv
fcmove
add
call
mov
loop
vshufps
fidivs
jecxz
add
lock
push
or
jecxz
ret
enter
fcomi
fcom
sti
add
fsub
stc
in
aad
call
stc
std
loope
shl
out
jmp
hlt
les
shr
sti
push
jmp
ljmp
lret
iret
into
mov
jmp
out
hlt
call
icebp
cli
loop
stc
movl
cld
rcl
int3
in
not
rcr
in
loopne
sarb
fcmovnu
fcomi
fcmovnu
out
stc
push
into
cli
or
mov
int3
out
test
out
jmp
add
icebp
loop
hlt
add
cld
add
repnz
xlat
ljmp
lret
mov
mov
mov
enter
into
loop
loopne
loope
out
stc
int3
dec
not
cmc
std
cld
mov
lret
add
or
fmull
fld
mov
into
out
cmc
lods
fcmovnbe
mov
mov
out
sti
call
or
mov
repnz
sar
lret
add
in
in
call
lds
incl
int
shl
shll
shlb
add
cli
mov
shl
add
or
cld
in
into
mov
mov
repnz
frstpm(287
hlt
cld
cli
cli
aam
int
filds
add
dec
ret
in
fsubr
ret
repnz
in
fmul
mov
clc
or
ljmp
sti
shl
shr
ror
cmc
lods
lock
ror
rcl
loop
fmul
push
fldl
fdivr
mov
sti
add
add
les
mov
leave
hlt
mov
shr
add
add
hlt
loopne
jmp
or
add
leave
repz
ror
out
out
roll
int3
loop
rcl
fsubp
stc
fld
add
in
pextrw
in
test
mov
push
shr
fidivrl
pop
or
hlt
fmuls
ret
lods
idiv
mov
not
rcr
cli
shl
icebp
fmul
fisttps
fisttpl
pop
hlt
sldt
shr
scas
lods
in
icebp
aad
mov
hlt
jecxz
cmc
in
faddp
add
mov
jecxz
ljmp
shr
mov
fidivrl
cmc
aam
sarb
fsub
jecxz
fmuls
fdivrp
test
jmp
int3
hlt
sti
stc
in
iret
mov
jecxz
repnz
add
add
int
jmp
shll
std
cli
fcmovbe
mov
hlt
or
enter
or
out
mov
shr
int
aam
in
test
int3
clc
repz
out
clc
or
out
cli
in
lret
ret
int
sti
cmc
cli
mov
fdivr
add
fcmovbe
xlat
inc
ljmp
les
test
in
aad
mov
call
mov
out
loopne
rcr
int3
filds
add
or
lret
lock
mov
mov
hlt
shl
call
add
repz
ffreep
mov
out
fcompp
mov
out
mov
mov
std
shl
fcomi
rcl
mov
or
rcr
leave
repz
mov
aam
mov
ror
icebp
int
add
testb
xlat
mov
in
std
ret
mov
mov
hlt
rcl
in
int
jmp
repnz
rol
aad
rol
loope
lret
jecxz
lods
imul
enter
hlt
mov
div
mov
jecxz
ljmp
stos
shl
mov
xlat
out
mov
add
enter
in
ffreep
test
enter
cld
jecxz
out
jmp
hlt
into
jmp
mov
clc
icebp
out
cmc
out
imul
in
ret
or
adc
faddp
imull
scas
into
mov
stc
mov
add
add
add
or
into
or
shlb
mov
out
repz
cmc
cmc
rcl
push
aad
loope
mov
int
ror
test
jmp
mov
loopne
cmc
clc
test
add
fcom
or
stc
fldpi
in
ret
rcl
sar
int3
jmp
sti
fcmovne
aad
ret
loope
aam
faddl
div
out
in
loop
in
mov
lret
in
ror
std
aam
in
mov
add
test
cld
pmaxub
add
out
mov
stc
sti
repnz
out
roll
in
jecxz
lds
add
aam
in
jecxz
fxch
loope
fst
stos
mov
in
mov
mov
test
loopne
fildl
in
int
add
mov
mov
aad
sarl
shl
rolb
incl
out
out
or
mov
loop
icebp
iret
sti
mov
lret
clc
clc
hlt
cli
mov
repnz
out
call
cli
out
stc
into
out
mov
out
not
jecxz
mov
hlt
fadd
add
ljmp
cli
or
scas
shlb
mov
fdiv
fmul
fdivr
in
aad
in
or
fstp
out
fldcw
shl
cmc
lock
fidivrs
or
add
in
stc
stc
fsubrs
loop
out
mov
std
leave
lret
lret
xlat
not
xlat
ret
les
shr
sti
fldl
les
cmc
ret
int3
mov
lret
mov
iret
add
int3
stc
in
ror
in
push
iret
add
in
jmp
fdivrp
cld
lock
cli
in
mov
fcomip
pmaxsw
out
leave
lods
mov
aad
sarb
mov
add
out
or
lret
fcmovnu
call
enter
out
test
fcmovb
clc
leave
stc
out
cld
into
fnstsw
decb
int3
in
int
rcl
out
mov
icebp
sar
mov
clc
out
add
jecxz
jmp
testb
xlat
lock
into
mov
iret
out
stc
int3
mov
mov
xlat
push
leave
stc
into
add
icebp
int
ret
aam
call
int
mov
add
add
testb
fisttpll
iret
sti
in
jmp
sti
mov
int
mov
lret
push
iret
repz
into
shl
jecxz
stc
hlt
int
mov
add
add
in
pop
lret
fmulp
shr
jecxz
jmp
mov
int3
fnsetpm(287
mov
mov
mov
ljmp
fdivl
lods
repnz
cmc
push
add
idiv
fsincos
xlat
in
out
iret
fidivrs
into
ret
mov
in
in
mov
loopne
out
in
neg
add
or
fcomp
icebp
jecxz
mul
mov
shr
mov
jecxz
fcmovnbe
or
ljmp
into
lret
enter
sti
out
out
jmp
mov
shr
or
or
out
loop
jmp
mov
mov
lods
out
sti
into
lret
fucomp
fucomp
repnz
mov
out
les
int
into
mov
mov
add
cmc
add
add
push
push
icebp
not
out
fcmovne
div
mov
sti
ljmp
repz
lret
fmul
or
jecxz
scas
shl
mov
imul
int
lds
cli
mov
shl
test
int
in
leave
mov
mov
in
repnz
shl
int3
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
adc
mov
lea
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
pushl
push
pushl
call
cmpl
jb
mov
adcl
mov
adc
movl
adc
movl
xor
lea
adcl
mov
mov
or
mov
xor
xor
mov
add
mov
sub
mov
movl
mov
xor
mov
decl
mov
inc
xor
mov
adcl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
lea
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
xor
dec
mov
jmp
mov
not
mov
xor
mov
xor
mov
negl
sub
and
mov
mov
adc
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
or
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
mov
adcl
mov
sub
lea
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jb
mov
sub
mov
neg
mov
subl
sub
mov
mov
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
jmp
out
sub
add
shl
or
jns
out
cwtl
jnp
std
jmp
fcmovnbe
dec
or
loope
add
shl
rcr
lock
fst
mov
lock
clc
out
int3
in
jmp
out
fcmovbe
into
jmp
iret
out
iret
icebp
ret
cld
not
ret
dec
out
add
lret
push
add
lret
shr
ror
xlat
sar
mov
ret
testb
pop
or
push
fdivrp
icebp
mov
loop
rol
hlt
int
mov
cmc
mov
fidivrl
iret
into
fcoml
into
int3
mov
fcomi
shl
cli
iret
shl
ljmp
xlat
lds
jmp
or
cli
add
fucomp
lret
xlat
loopne
lock
fcmovnbe
repnz
fnstsw
ret
pop
sti
aam
clc
in
fmull
out
out
lock
mov
fprem
xlat
icebp
in
ljmp
shr
fcmovu
ffreep
cli
push
lret
cmpsb
mov
mul
lock
fdivrs
iret
fsubp
ret
stc
sti
ret
or
fmull
jmp
test
rol
mov
out
int3
cmc
repnz
mov
add
hlt
push
lock
sti
shr
jmp
jmp
test
fcmove
icebp
mov
mov
faddl
mov
in
cld
in
not
int
in
in
repz
jmp
shl
shl
add
or
enter
leave
ret
ror
hlt
ror
leave
sti
in
idivl
xlat
xlat
std
out
incb
filds
in
shl
lret
mov
mov
shr
leave
mov
icebp
add
jmp
ljmp
xlat
rcl
mov
jmp
in
mov
add
leave
mov
out
lods
mov
mov
clc
mov
repz
aam
loop
jecxz
faddl
aam
fisttpl
iret
fadd
int
fsub
int
fld
not
into
mov
mov
add
fucom
ret
jecxz
ret
fnstcw
rol
leave
in
jmp
mov
stc
cli
add
shl
jmp
jecxz
int
or
shl
fucomp
loope
rcl
lret
fstpt
xlat
in
mov
add
scas
jecxz
iret
mov
fldl2e
cli
jmp
in
repnz
fdivr
faddp
movb
in
call
out
lods
mul
loopne
into
fcmovu
out
mov
int3
add
pop
faddp
or
rol
aam
or
or
call
lock
mov
sarl
aad
loopne
or
lret
lods
fildll
loope
lock
std
enter
mov
fdivrp
loop
out
sti
imul
shlb
divb
loope
loope
mov
fsubr
jecxz
lret
shll
lret
mov
out
in
add
std
loop
leave
or
loop
ror
fmul
jmp
repz
int
shr
add
int3
bnd
fadd
cli
aad
add
loope
into
loope
movsb
int3
into
enter
jmp
int
add
rcl
icebp
or
loopne
add
enter
enter
lock
mov
lock
cli
push
pop
fcmovnbe
faddp
jmp
iret
test
out
in
mov
repz
mov
std
loop
filds
call
repnz
in
shr
mov
div
shll
clc
in
fdivr
lret
add
or
loop
test
ret
mov
sar
mov
repz
push
ret
out
in
in
fsubrl
lods
rcl
lret
rcr
iret
repnz
icebp
lds
rcr
in
leave
mov
loop
lret
in
mul
out
mov
iret
out
shr
aam
ret
mov
jmp
cli
stc
leave
not
out
sar
iret
mov
xlat
rol
cli
mov
shl
shl
or
ljmp
ror
mov
div
hlt
imul
mov
add
hlt
or
add
in
pop
add
movsl
mov
out
fcomi
jmp
lock
int
fcomi
faddl
lret
out
mov
rcl
test
shl
lret
call
add
repnz
clc
leave
jecxz
or
iret
scas
shl
jmp
rcl
out
mov
mov
iret
mov
cli
shl
cld
psubq
or
or
ror
loopne
leave
int
mov
iret
mov
in
in
cld
xlat
testl
add
ljmp
lds
shl
cli
in
out
stc
fidivrl
aad
pop
push
ud2
in
mov
loope
loop
mov
xlat
jecxz
sarb
loopne
add
in
ret
jmp
repz
mov
div
repnz
ljmp
add
rcr
fisubrs
int
out
fnstcw
iret
xlat
rcr
rcr
pop
sar
loope
lret
enter
jmp
mov
leave
ljmp
into
fildl
loopne
fld1
loop
call
mov
loope
out
repz
jmp
repnz
enter
loopne
or
clc
out
out
out
fadd
jmp
sarl
test
faddl
mov
repz
ror
sti
jmp
int3
mov
mov
aam
in
lret
ret
cld
in
fstp
loopne
mov
int
mov
in
fucomip
int
icebp
mov
std
add
neg
push
jecxz
or
into
in
loope
repz
repz
call
fcmovbe
into
jecxz
aad
mov
jmp
dec
leave
in
add
aam
repnz
lret
out
pushl
mov
aam
sti
or
in
add
jmp
enter
ljmp
div
ffree
loope
jmp
loope
loope
mov
ror
stc
iret
iret
xlat
mov
add
enter
aam
fdiv
jmp
out
scas
out
shrb
cli
repnz
mov
aad
sti
fcmovnu
mov
fucomip
enter
out
in
in
mov
in
ret
or
stc
in
mov
shr
repz
ror
inc
out
hlt
cmc
add
out
loopne
clc
call
or
or
ljmp
shl
repz
fsub
pop
mov
push
hlt
fisubrs
loop
ror
fdiv
in
clc
sti
hlt
mov
ret
out
add
enter
in
fidivrs
jmp
xlat
lret
iret
sarl
cli
ret
lret
out
iret
fimull
out
add
stos
neg
int
cli
jmp
shl
call
into
aad
cli
mov
fiadds
in
int3
mov
mov
enter
jmp
fadd
div
cli
hlt
test
sti
or
rcl
scas
aad
loope
in
enter
stc
fstp
ret
std
in
lock
std
out
or
or
repnz
fucomip
lret
hlt
int3
mov
cli
stc
lret
cli
mov
into
hlt
push
mov
add
add
jmp
out
in
mov
fucom
loop
mov
mov
call
lock
add
fildll
mov
in
clc
icebp
rcl
repz
mov
ljmp
lret
out
call
icebp
hlt
iret
cli
shl
cld
ret
sar
loopne
add
fcmovu
out
add
repz
stos
repnz
in
loopne
aam
stc
shl
fsubr
cli
mov
mov
push
out
fmul
mov
in
mov
int
fcom
cli
out
sar
mov
cmc
mov
ffree
ret
shr
fdivr
lret
mov
mov
stc
ror
decb
out
or
cld
fsub
mov
out
shrb
faddp
cmc
int
in
std
std
stc
cld
ret
cmc
cmc
sar
add
push
loopne
ffree
int
into
lods
cmc
xlat
mov
stc
enter
not
hlt
fdiv
pop
out
add
hlt
or
lds
ret
scas
mov
loop
scas
cli
out
mov
testl
in
fsub
cld
div
cli
ret
out
in
shll
aam
mov
fdivp
rolb
add
icebp
cmc
out
aam
add
mov
cmc
xlat
aam
lods
mov
iret
call
add
rorl
into
out
fildl
mov
leave
mov
int3
shlb
loope
mov
out
add
adc
leave
sti
cmc
cli
ljmp
sti
icebp
icebp
mov
add
add
in
add
mov
movsb
rcl
leave
enter
into
fcomip
in
mov
mov
push
mov
into
out
fcmove
shr
in
fadd
mov
fnstsw
sarl
lret
add
jmp
int3
enter
stc
idivb
clc
fldln2
fdiv
add
leave
pop
fprem1
decb
out
loope
fucomip
lods
in
out
out
shl
mov
mov
ret
aad
into
in
add
mov
shll
call
loope
out
idivb
lds
mov
movsl
mov
mov
mov
repz
cli
rolb
shl
ror
shl
roll
jmp
in
out
ljmp
mov
mov
std
or
enter
fsubr
add
out
sarl
iret
fidivrl
aam
fninit
rol
add
out
enter
cmpsl
shl
jmp
mov
sti
out
int
mov
not
clc
add
rolb
in
loop
inc
lock
loop
not
enter
fcmove
std
in
add
std
int3
rolb
jecxz
loopne
stc
flds
push
fildl
fidivs
jmp
in
lret
aam
rolb
cli
add
aad
ret
fsub
stos
in
jecxz
loope
in
mov
repnz
stc
mov
ljmp
or
mov
jmp
int3
jmp
aam
mov
cld
fcmovnu
stc
cli
in
or
out
cmc
in
les
mov
int3
repz
int
cmc
ror
idiv
fcmovb
in
fld
neg
ljmp
add
mov
mov
shlb
in
fxch
stc
add
add
fucomip
stc
add
shl
in
out
mov
lret
hlt
mov
icebp
cli
add
ret
call
test
lret
mov
icebp
mov
fld
cli
add
lock
stc
aam
ljmp
ljmp
leave
stc
shr
fiaddl
sti
mov
add
sti
add
lret
jmp
in
mov
divl
mov
int3
mov
in
lret
add
lret
push
std
cld
fucomp
bnd
shll
mov
int3
ror
leave
hlt
ret
mov
stc
vpmaddwd
jecxz
add
loope
jmp
mov
mov
clc
mov
cmc
add
iret
mov
fninit
in
into
fadds
int
shl
lret
mov
xlat
sti
cli
lock
shl
loopne
or
rcr
add
jmp
ljmp
loopne
mov
clc
neg
movl
adc
call
jmp
ljmp
out
add
int3
ror
std
out
fld
clc
add
lret
int3
test
imul
mov
int
rol
out
mov
in
fdivr
or
add
fucomip
out
add
in
ljmp
in
xlat
out
inc
add
std
add
add
fiadds
fsub
cli
in
shrb
mov
call
mov
div
jmp
add
cmc
out
mov
lods
enter
rol
icebp
cli
add
sar
mov
in
mov
fildl
fdivr
cld
add
repnz
icebp
rcl
repnz
repnz
cld
stc
in
ror
fld
fmul
test
mov
in
xlat
aad
mov
mov
ret
jmp
push
fcom
out
flds
ljmp
repnz
mov
int
mov
add
out
fcmovnu
add
hlt
jmp
faddp
mov
mov
test
icebp
mov
int3
rolb
out
out
fstp
stc
cli
out
stos
test
rol
mov
stc
cli
mov
mov
in
fdivp
in
or
aam
jmp
in
stos
leave
ror
jmp
fnstsw
aam
aam
fdivrp
add
loop
add
fadd
mov
mov
loopne
imul
lock
mov
rcl
clc
cld
clc
ljmp
mov
scas
aad
into
stc
xlat
stc
std
fstpt
sar
cli
aad
stc
mov
cli
mov
shl
out
mov
ljmp
icebp
rcr
xlat
in
sti
enter
lret
jmp
int
fcmovne
mov
ret
out
add
hlt
ret
loopne
or
mov
hlt
rcl
mov
mov
or
cld
ljmp
in
mov
into
ret
shl
shl
int3
aam
fxch
repz
dec
ljmp
mov
ljmp
jmp
fucomip
in
movb
int3
enter
lret
iret
in
mov
mov
mov
jecxz
repnz
or
in
fmulp
in
mov
ret
mov
fst
int3
in
dec
pop
xlat
loope
out
jecxz
stc
in
mov
scas
stos
cmc
into
loope
lods
repnz
leave
aam
pop
mov
fcomp
in
or
int3
call
shl
ljmp
in
iret
cli
in
cmc
sti
movl
hlt
mov
pop
repnz
into
fadd
int3
mov
rcr
into
ljmp
out
not
add
loope
stc
int
mov
leave
rol
shr
leave
idivb
mov
icebp
ret
jmp
or
leave
shr
test
mov
mov
cld
fadd
out
sti
into
ret
add
cli
mov
add
std
jecxz
repnz
into
out
hlt
icebp
mov
ror
repz
lock
test
aam
out
jecxz
add
lret
jecxz
jecxz
mov
mov
mov
mov
jecxz
icebp
ret
ret
sti
hlt
pop
in
out
mov
ret
shlb
repnz
call
in
repnz
or
aam
in
iret
in
fucom
fsubrp
out
out
aam
jmp
icebp
std
rcl
mov
cli
or
fsubr
add
mov
mov
clc
clc
jmp
shl
fnstenv
ljmp
add
ljmp
lock
int3
int
repz
cld
imul
in
in
cmc
stc
fmull
jmp
mov
shl
loopne
mov
sti
mov
xlat
cli
cmc
add
mov
in
iret
ret
call
out
sti
mov
test
or
clc
clc
loope
jecxz
stos
shl
lods
in
mov
mov
mov
ljmp
vpaddq
inc
out
int
out
loopne
scas
test
mov
out
mov
into
cmc
mov
fninit
fcomp
cmc
jmp
or
iret
mov
iret
jmp
enter
mov
idivb
rcl
lret
add
add
rol
into
out
loopne
iret
sarb
int
add
loopne
repnz
fadds
enter
into
loopne
shr
loopne
into
aam
call
xlat
rol
add
add
fucomip
jmp
or
loope
mov
rcl
aam
shl
rcr
fucomip
in
xlat
mov
clc
out
in
add
lret
push
add
icebp
enter
loope
scas
neg
mov
mov
fmul
lret
in
in
enter
shlb
fldz
mov
leave
enter
fdiv
repz
shl
cmc
out
cld
movl
fdivp
ffree
shll
fnsave
cli
int3
cli
loope
sar
fisttps
or
out
cmc
repnz
out
std
jmp
int
fucomip
in
fstpt
les
fldl
iret
ret
out
aad
out
mul
xlat
cmc
lret
aam
clc
add
in
int
in
push
in
rol
int
aad
in
mov
add
std
add
repnz
test
enter
icebp
mov
iret
ret
repz
call
mov
aad
repnz
in
ror
jecxz
out
icebp
lods
out
call
cld
mov
fneni(8087
loope
flds
fildl
test
shl
clc
aad
hlt
in
fnstcw
ret
repnz
or
lret
lods
in
jecxz
call
mov
loopne
idiv
enter
out
mov
lret
out
stc
jmp
shlb
mov
cli
push
clc
out
fucomip
lret
cmc
cli
mov
icebp
mov
xlat
imul
rcr
or
or
call
int
mov
cmc
divb
into
mov
in
in
loopne
add
push
or
into
ljmp
leave
sti
icebp
lret
mov
std
cli
mov
loope
or
lret
out
ret
loopne
call
sarl
in
fmulp
fdivrp
std
lret
fldpi
or
jecxz
aad
xlat
iret
leave
test
add
jecxz
out
shl
pop
add
add
mov
mov
cmc
call
mov
stc
sti
cmc
fucomi
std
add
ljmp
loope
mov
jecxz
in
iret
out
mov
fidivs
fdivrl
out
or
icebp
jmp
int
lock
mov
mov
fiaddl
push
into
or
jecxz
int
xlat
movsb
in
div
in
clc
lret
aam
fidivrs
repnz
fucomip
loopne
add
in
out
mov
test
out
fcomi
imul
jmp
xlat
cli
aad
fdivr
loop
iret
jecxz
jecxz
out
hlt
hlt
mov
int3
mov
hlt
ret
into
sti
mov
fucom
lret
leave
bts
scas
divb
mov
lock
mov
fsqrt
rcr
push
aam
mov
repz
into
idiv
sti
mov
mov
or
push
or
pop
lret
call
shrb
cli
ljmp
mov
cmc
testb
add
jmp
lret
ret
in
sarl
call
fcmovnb
rolb
mov
vcvttpd2dq
fldz
shrl
shl
stc
mov
in
out
in
int
mov
hlt
out
or
adc
repz
divb
mov
fnstcw
add
fcmovb
lret
add
ljmp
aad
out
int
call
add
mov
ljmp
add
mov
lret
repnz
cmc
fiadds
clc
ret
int3
std
xlat
add
out
add
ror
shll
enter
fdivr
in
call
out
int3
repz
add
ror
repz
in
mov
mov
cli
mov
call
clc
fimull
loopne
out
in
shr
in
in
ror
std
mov
lret
mov
rcr
movl
or
rol
lret
mov
loope
iret
repz
mov
cld
jmp
fadd
testl
fsubr
cli
int3
loop
lret
leave
jmp
fmulp
mov
add
out
aad
aam
dec
out
add
sarl
mov
div
out
enter
fidivrl
fdivr
lret
fadd
mov
loop
lret
iret
mov
cld
mov
cli
mul
or
ror
scas
out
int
mov
fistpll
mov
fadd
fmull
std
idiv
cli
enter
test
icebp
mov
int
loope
jecxz
in
ret
cld
add
int3
fildl
repz
rol
mov
mov
xlat
lock
in
xlat
call
pop
not
sar
stc
out
loop
loop
ror
in
out
scas
aam
mul
shl
in
fdiv
fcmovu
loopne
mov
add
lds
std
aam
psrad
jmp
enter
loopne
int3
mov
mov
add
mov
out
or
fsubr
fucomip
cmc
mov
in
out
clc
aad
int
mov
cli
icebp
not
movb
iret
add
out
mov
mull
in
fidivl
in
fptan
mov
add
in
xlat
test
leave
in
in
clc
mov
in
fcom
enter
add
leave
aam
hlt
add
int3
shr
mov
mov
jmp
stc
in
lret
add
lock
filds
xlat
or
push
mov
ljmp
leave
icebp
shlb
jmp
cmc
add
clc
cld
out
jmp
ret
stos
mov
shl
ljmp
xlat
aam
fnstcw
hlt
or
dec
fxam
in
mov
leave
lret
in
leave
cli
shlb
mov
xbegin
in
loope
sarb
icebp
mov
iret
shlb
hlt
mov
mov
stc
iret
or
out
call
in
leave
stc
icebp
div
lret
fnsave
rol
fdivr
or
loopne
sar
lret
rol
jmp
repnz
aam
mov
fsubr
sarl
loope
faddp
ret
ret
int3
ret
rcr
test
into
fdivp
clc
int
mov
loopne
ljmp
out
int3
repz
mov
ret
hlt
add
rcr
or
out
loope
repnz
lret
sti
stc
call
cld
ljmp
mov
out
aam
loop
ret
int3
ror
mov
loop
sti
mov
jecxz
fsub
pop
mov
enter
or
inc
loope
test
jmp
std
sarl
mov
cld
in
fsubr
push
ljmp
sar
into
sti
lods
in
jecxz
repz
div
clc
fsubr
out
in
out
fstp
shr
mov
out
divl
test
into
fadd
shl
shl
loop
fnsave
mov
ror
call
not
loop
mov
out
hlt
dec
div
out
add
faddp
fmulp
ror
leave
lret
rcl
jmp
std
hlt
mov
add
fnop
lret
repnz
out
clc
in
fcmovnu
shl
mov
aam
mov
fstp
roll
add
cld
hlt
or
or
in
jmp
in
loopne
xlat
aam
jmp
scas
enter
ret
sar
in
xlat
aad
lock
clc
add
fadd
rcl
in
aam
in
in
mov
fdiv
fst
add
fcmovb
fnsetpm(287
test
fiadds
lock
in
ljmp
mov
mov
std
icebp
loopne
out
loope
or
push
loope
call
rcl
clc
fucomip
cmc
in
jmp
xlat
loopne
hlt
sti
jmp
psubsb
fsubrl
iret
out
mov
rcl
out
out
fcomi
aad
cmc
mov
sti
repz
add
or
loopne
or
enter
in
sar
call
fidivrl
push
shl
ret
pxor
in
add
repz
loope
aad
in
mov
cli
mov
into
incl
sti
in
rcr
leave
cli
out
lret
rol
jmp
aam
stc
aam
fsubrp
clc
cld
icebp
mov
loope
add
push
fsub
lret
test
mov
in
out
in
mov
call
mov
loopne
add
in
add
add
jmp
mov
into
out
out
out
mov
loopne
shl
jmp
or
or
stos
xlat
aad
divb
cld
mov
repnz
enter
add
or
les
loope
loope
mov
mov
aam
repnz
lock
sarb
aam
adc
fninit
loopne
call
fcmovbe
repz
stc
cmc
xlat
lds
into
hlt
std
repnz
mov
leave
scas
aad
jmp
hlt
in
neg
add
or
loop
sarl
loopne
lock
hlt
mov
aad
mov
in
aad
add
add
jmp
ror
loope
icebp
out
out
sti
in
lret
call
inc
or
leave
ret
aad
pop
fsubs
int
out
fsubr
out
in
stc
idivl
in
faddp
fcmovnb
or
in
hlt
out
rol
cmpsb
into
out
stos
jecxz
call
mov
in
fcmovnb
fldl
fadd
in
wbinvd
call
mov
shl
rol
in
in
fnstcw
add
movl
jecxz
fsubr
repz
stos
mov
cmc
mov
jmp
cli
int
clc
in
aad
fimuls
ret
loopne
or
out
in
shl
jecxz
cmc
sti
in
lret
repz
fidivl
loop
rorb
fimuls
fimuls
icebp
lock
int
mov
rcl
out
cli
fcom
call
sti
add
mov
lods
jmp
into
iret
stc
ror
clc
aam
idiv
out
sti
xlat
push
mov
ret
ljmp
xlat
rcl
icebp
leave
call
out
fadd
shl
cld
ljmp
add
sarl
shl
fldpi
out
mov
aam
repnz
hlt
aam
test
ljmp
mov
call
jmp
ljmp
rol
fcmovbe
jmp
std
pop
mov
lret
movsb
rol
ljmp
fnstsw
cli
mov
add
or
out
repnz
in
shrb
repnz
int3
out
out
idivl
fmull
std
lds
mov
fst
ret
int3
rcr
repz
in
aam
in
testb
add
loop
loopne
push
pop
enter
fsubrl
in
out
mov
mov
sarl
fimuls
fcmovnbe
or
call
jmp
repz
mov
ljmp
roll
sti
in
lret
stos
jecxz
mov
into
mov
mov
test
div
fscale
mov
std
cld
in
fdivr
sti
ljmp
loop
xlat
repnz
aad
iret
shl
roll
cli
in
or
loop
in
test
into
into
lock
mov
mov
movb
incb
enter
int
jmp
mov
in
in
add
jecxz
or
in
push
sarl
repz
into
hlt
mov
int3
loope
sar
test
fldl
adc
loope
fsubrp
shl
rcl
loopne
mov
cli
sarb
add
mov
push
femms
in
lods
int
lret
fucom
test
mov
int
fadds
hlt
neg
fsub
in
psubsw
int3
out
loopne
mov
iret
mov
fnsave
stc
pop
cld
in
ret
cmc
stc
loop
sti
add
mov
vpmaddwd
out
enter
rcr
mov
shl
jecxz
enter
add
out
stos
xlat
out
rcl
in
lret
lret
shr
in
hlt
fld1
pop
loop
clc
lret
add
or
in
repnz
aad
into
jmp
lret
div
rcl
add
mov
fucom
pop
fdivr
out
lods
test
repz
mov
xlat
lock
mov
push
out
call
stc
mov
les
mov
not
sarl
iret
out
add
into
enter
shl
repnz
in
icebp
shrl
rcr
repnz
lock
fsub
out
in
pop
lods
rol
out
lods
lret
mov
rcr
out
std
in
fcomp
cli
hlt
cld
lock
pop
movl
or
mov
in
in
int
fsubrp
out
fcomip
mov
ret
loop
add
add
faddp
lds
cld
out
shl
aam
test
jmp
jecxz
mov
cli
ret
vpsllw
std
add
mov
ljmp
xlat
clc
icebp
in
fdivp
repnz
loopne
enter
fmul
repnz
hlt
lret
int
call
mov
fldpi
jmp
jecxz
out
test
rcl
cmc
idiv
out
mov
inc
add
or
cmc
or
int
lret
aad
sti
fistpll
std
cmc
cld
rol
test
in
fxch
iret
fsubr
call
divl
std
mov
shl
stc
fadds
or
jmp
mov
icebp
in
leave
mov
int3
mov
fcomip
leave
out
push
ret
fstp
shr
cmc
out
or
loop
mov
out
clc
sarl
cli
fdivr
roll
rorb
in
call
loope
in
out
lret
int3
call
stc
rol
lock
fucom
aad
mov
fcmove
shr
rcl
out
xlat
ror
xlat
add
int3
rcr
leave
fldlg2
fsubrp
ljmp
call
repnz
mov
add
cli
sti
testl
ljmp
out
in
hlt
into
fcomp
jecxz
in
int
cli
cld
les
lret
out
jecxz
ljmp
leave
sar
repnz
fincstp
pop
mov
jecxz
or
add
enter
shlb
mov
idiv
jecxz
hlt
fmulp
fisttpl
or
int3
ljmp
hlt
clc
mov
mov
fmulp
std
or
loopne
lods
out
mov
jmp
clc
repz
mov
aam
int
add
lock
cmc
rolb
into
enter
mov
mov
mov
scas
mov
fucomi
mov
fdiv
cmc
repz
fcmovnb
sti
add
or
fsubr
int
mov
lret
std
mov
mov
jmp
adc
into
shlb
sarl
in
fadd
ljmp
lret
mov
out
into
stc
in
into
in
fsincos
repnz
int
out
add
shl
add
lds
out
shl
loop
mov
test
mov
out
loope
ljmp
mov
loop
loop
clc
jmp
lock
add
mov
call
into
adc
mov
in
lods
int
mov
in
sar
roll
repnz
fyl2x
incb
call
test
shrb
fxch
stc
lret
stc
int
shl
vpaddusb
fucomp
loopne
aad
out
add
shl
icebp
xlat
lods
jmp
lret
out
rcr
mov
mov
cld
out
push
jecxz
lret
ljmp
lret
mov
repnz
lock
out
int
fcmovu
push
add
adc
in
enter
ljmp
shr
stc
into
rcr
fcomp
aad
flds
fcmovb
push
or
mov
mov
repnz
aad
enter
aam
loope
mov
jecxz
or
filds
lods
int
fucom
jmp
mov
loope
sti
mov
roll
loop
fmulp
adc
mov
loop
cmc
stos
out
jmp
mov
rcr
in
loop
or
add
fdivrp
or
loopne
cmc
jmp
jecxz
int
iret
shll
std
push
testb
loope
out
sti
iret
or
scas
loope
lret
ror
mov
int3
fmul
xlat
mov
cmc
repz
mov
ljmp
hlt
lods
shr
aad
into
into
leave
mov
not
out
clc
lock
psrad
mov
ret
ror
jmp
sarl
repz
cld
aam
cmc
syscall
icebp
imul
into
in
cmc
call
leave
repz
mov
pop
jecxz
flds
jmp
sti
in
fdivl
fcmovnbe
rol
enter
test
cmc
mov
aad
add
stc
into
add
shr
shl
in
shl
cmc
div
mov
mov
aad
iret
in
loope
push
std
neg
add
loope
lret
lock
int
jecxz
call
ljmp
xlat
add
inc
jecxz
or
loopne
push
in
mov
lret
rorl
lea
mov
mov
mov
mov
sub
mov
mov
mov
xor
add
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
inc
mov
mov
sub
xor
cmp
jne
jmp
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
add
mov
sub
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
leave
ret
add
pop
or
dec
add
add
add
add
cmp
std
add
mov
add
add
add
push
push
inc
push
das
ja
aad
js
dec
test
stc
jnp
add
add
pop
dec
outsl
jae
and
insb
fs
dec
outsb
outsw
pop
push
jb
push
imul
popa
je
pop
or
dec
add
add
and
add
add
add
add
add
add
add
sbb
add
sbb
add
and
add
mov
incb
add
add
arpl
outsb
inc
popa
je
pop
inc
js
add
jae
outsl
ja
xor
gs
popa
addr16
jae
outsl
ja
xor
gs
popa
addr16
xor
or
adc
pop
jne
or
icebp
xchg
or
icebp
xchg
or
jne
jmp
xchg
mov
xchg
jmp
xchg
jmp
xchg
or
pop
popa
popa
ljmp
xchg
ljmp
xor
mov
popa
popa
or
out
bound
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
jno
popa
xchg
pop
loop
bound
adc
andb
pop
loop
bound
adc
cmp
xchg
pop
loop
bound
adc
fbld
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
inc
popa
popa
xchg
pop
loop
bound
adc
es
popa
xchg
pop
loop
bound
adc
dec
popa
popa
xchg
pop
loop
bound
adc
xor
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
shll
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
mull
xchg
pop
jne
adc
movsb
popa
popa
xchg
pop
jne
adc
mov
jne
adc
outsl
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
mull
xchg
pop
loop
bound
adc
movsb
popa
popa
xchg
pop
loop
bound
adc
mov
loop
bound
adc
outsl
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
das
popa
popa
xchg
pop
jne
adc
jae
popa
xchg
pop
jne
adc
jmp
popa
xchg
pop
jne
adc
push
popa
popa
xchg
pop
jne
adc
fbld
xchg
pop
jne
adc
jno
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
bound
popa
or
loop
bound
pushl
cmp
jne
dec
pushl
pushl
and
jne
mov
jne
loopne
jne
in
pushl
repz
inc
pushl
lock
and
jne
mov
jne
loopne
loop
arpl
repz
lods
arpl
xor
bound
jmp
mov
jmp
lods
arpl
notrack
das
arpl
out
jmp
mov
bound
jmp
and
or
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
and
bound
jae
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
push
arpl
cmp
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
std
arpl
lcall
bound
push
outsb
xor
arpl
test
popa
popa
popa
fcomps
or
bound
lea
repnz
pop
loop
bound
or
bound
popa
in
push
insl
ljmp
loop
push
jmp
bound
and
out
bound
inc
xor
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
mull
xchg
pop
loop
arpl
adc
movsb
popa
popa
xchg
pop
loop
arpl
adc
mov
loop
arpl
adc
outsl
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
arpl
or
lcall
dec
push
popa
bound
popa
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
rorb
bound
popa
bound
jne
bound
loop
arpl
fsubs
jecxz
bound
out
clc
cmp
testl
mov
bound
popa
or
or
pop
call
xchg
loop
xor
popa
or
lcall
popa
or
bound
popa
pop
push
or
call
out
bound
pop
fldt
popa
pop
push
bound
jmp
movsl
arpl
xor
bound
jmp
lret
arpl
fs
lret
bound
jmp
shll
out
jmp
shlb
ss
arpl
loopne
jp
popa
popa
xchg
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
jecxz
popa
popa
xchg
pop
loop
pop
bound
stos
int3
popa
popa
xchg
pop
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
loope
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
xchg
int3
popa
popa
xchg
pop
loop
pop
bound
imul
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
jo
popa
popa
xchg
pop
loop
pop
bound
push
push
popa
popa
xchg
pop
loop
pop
bound
sbb
popa
popa
xchg
pop
loop
pop
bound
sbb
loop
pop
bound
pushf
int3
popa
popa
xchg
pop
loop
pop
bound
jp
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
adc
xchg
pop
loop
arpl
adc
es
popa
xchg
pop
loop
arpl
adc
push
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
fwait
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
pop
bound
xchg
lcall
bound
outsb
push
pop
loop
pop
bound
jne
test
lcall
popa
mov
bound
or
lcall
popa
or
bound
lea
fsubs
popa
fcomps
or
or
pop
call
pusha
pop
bound
dec
add
imul
or
lcall
popa
pop
loop
arpl
or
lcall
bound
adc
and
push
popa
fcomps
pop
bound
adc
int3
popa
popa
xchg
pop
loop
pop
bound
popa
xchg
pop
loop
pop
bound
pop
shll
xchg
pop
loop
pop
bound
out
shll
xchg
pop
loop
pop
bound
jmp
pop
loop
pop
bound
or
pop
loop
pop
bound
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
sbb
popa
pop
loop
pop
bound
jne
test
lcall
popa
or
bound
or
bound
test
lcall
xor
and
or
lcall
popa
or
bound
or
bound
test
lcall
popa
or
or
outsb
int
sbb
popa
or
lcall
popa
or
or
outsb
int
xor
xchg
or
or
lcall
adc
bound
jne
test
lcall
bound
adc
and
push
popa
jo
bound
arpl
shl
jp
popa
popa
or
or
adc
push
popa
or
lcall
popa
mov
out
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
shlb
xor
or
or
lcall
bound
adc
and
push
popa
jo
bound
pop
bound
repz
leave
popa
popa
or
or
adc
push
popa
adc
fbld
bound
loop
arpl
bound
out
bound
mov
bound
bound
bound
repz
xor
or
bound
push
or
call
fbld
bound
popa
adc
pop
loop
pop
bound
loop
bound
push
loop
bound
pop
loop
bound
bound
out
bound
aaa
cmp
or
lcall
popa
or
bound
popa
or
lcall
test
cmpsl
pop
mov
or
bound
popa
bound
loop
bound
or
popa
cmp
jl
loop
bound
or
popa
or
bound
loop
pop
bound
lcall
xor
push
adc
bound
loop
pop
bound
popa
or
or
or
bound
pop
bound
lcall
or
popa
or
bound
testl
bound
bound
bound
or
popa
or
adc
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
or
or
pop
call
mov
or
lcall
popa
lock
popa
popa
lock
pop
popa
popa
or
push
outsl
or
pop
call
xchg
outsb
icebp
push
xchg
pop
jne
or
adc
jne
pop
jne
and
add
add
jne
and
add
jne
lods
loop
imul
add
jne
mov
add
jne
test
lcall
popa
or
pop
int
and
sub
add
ljmp
outsb
sbb
popa
or
lcall
outsl
or
lcall
fs
inc
dec
outsl
or
lcall
popa
or
or
pop
call
cmpsl
pop
xchg
loop
popa
popa
popa
or
sbb
jne
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
popa
mov
or
call
lcall
fmull
adc
jne
pusha
cld
dec
int3
mov
imul
pusha
xor
push
xor
or
adc
or
loop
xor
rcrb
int
pop
sub
pusha
out
adc
ljmp
jne
test
popa
popa
popa
fcomps
add
and
xor
lcall
popa
xchg
push
int
sub
or
or
pop
call
and
add
and
push
jne
sbb
and
or
call
lcall
cwtl
or
lcall
popa
or
or
pop
call
xor
test
test
lcall
jne
test
lcall
popa
or
pop
int
out
imul
leave
cmp
call
fs
lock
bound
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
movsl
or
push
or
jbe
or
enter
fsubs
inc
dec
dec
pop
rcrb
push
fsubs
inc
dec
dec
pop
rcrb
or
sub
rcl
ror
sub
bound
push
popa
popa
inc
dec
adc
cmp
adc
mull
dec
lock
jo
shl
pop
popa
popa
xor
test
mov
jne
sub
pop
jne
lods
popa
repz
loop
popa
popa
popa
sbb
pop
jg
fs
ret
lcall
arpl
lcall
out
popa
popa
leave
movsb
push
popa
push
push
push
sub
mov
ret
jg
push
push
adc
int
rep
pop
popa
popa
or
fdivrs
push
push
cmpsl
call
jno
maxss
mov
fsubr
push
rcrb
dec
call
xchg
shrb
mull
call
push
sub
lods
pop
arpl
rcrl
popa
mov
lret
rol
bound
into
cmp
das
popa
out
jae
push
arpl
jb
popa
popa
mov
lods
outsl
arpl
imul
mov
lret
lods
xchg
call
or
cmp
mov
xchg
popa
popa
mov
ljmp
popa
lods
push
repz
popa
or
lods
sbb
in
push
sub
xchg
or
sub
int
or
sub
push
pop
mov
lret
sub
popa
popa
das
lcall
sbb
call
or
push
or
dec
pop
dec
push
sub
adc
fwait
imul
test
pop
repz
push
or
dec
pop
dec
push
jo
shll
adc
fwait
imull
popa
out
xchg
sub
pop
popa
popa
push
ljmp
push
sbb
repz
popa
popa
or
gs
stc
notl
popa
fdivs
cmp
imul
push
jo
rorl
sub
mov
push
popa
popa
or
popa
popa
or
gs
int
pop
int
fdivs
imul
jae
outsl
fcoms
fmul
cmp
int3
fdivs
mov
adc
pop
popa
popa
sub
xchg
cmp
jne
dec
dec
push
jne
pop
jne
out
xor
in
div
pop
popa
popa
popa
dec
out
dec
xchg
cmp
mov
jne
aaa
mov
adc
cmp
push
jne
pop
jne
pop
xchg
cmp
jo
mov
and
popa
popa
popa
and
out
xchg
ljmp
out
popa
bound
or
pop
or
sub
cmp
rorb
or
cmpsl
addr16
shll
xchg
push
xor
pop
bound
cs
popa
popa
sub
xchg
or
imul
ljmp
push
mov
mov
out
push
pop
popa
popa
popa
push
xor
imul
dec
lcall
imul
notl
repz
pop
out
cmp
stc
or
jne
sub
popa
pop
popa
popa
popa
push
mov
lcall
sbb
pop
xor
sti
or
popa
pop
lock
xchg
mov
sti
jae
or
popa
popa
sub
xchg
push
adc
mov
aaa
mov
sub
popa
push
sbb
sbb
adc
mov
mov
lret
and
jp
bound
loop
imul
bound
jne
pop
jne
or
bound
xor
call
into
bound
or
bound
xor
call
pop
or
bound
xor
call
adc
loop
bound
test
lcall
popa
pop
jne
and
lods
xor
imul
bound
jne
and
add
jne
aam
popa
popa
and
jmp
bound
popa
popa
popa
and
xchg
popa
popa
popa
and
out
bound
popa
popa
popa
and
int3
popa
popa
popa
and
fbld
bound
popa
popa
or
bound
xor
call
dec
or
bound
xor
call
jecxz
bound
pop
mov
bound
out
lea
bound
bound
and
pop
popa
popa
jae
fcomps
bound
popa
out
lea
bound
bound
and
bound
test
fcomps
bound
popa
out
lea
bound
bound
and
jae
adc
rclb
jne
sarb
loopw
repz
js
popa
out
es
or
mov
std
mov
jp
bound
or
call
pusha
or
bound
xor
call
push
fcoms
mov
popa
pop
jne
or
jb
jne
or
xchg
jne
or
mov
add
push
and
int
pop
add
push
and
int
pop
add
push
jp
bound
dec
or
pop
call
and
mov
popa
popa
cmpsl
xor
popa
or
jmp
int
or
popa
or
cltd
xchg
pop
loop
bound
adc
lcall
or
bound
adc
popa
or
adc
popa
or
bound
push
add
popa
popa
rorb
dec
push
jbe
loop
bound
ret
lea
bound
cli
jmp
xchg
bound
lock
xchg
bound
push
jmp
mov
bound
jmp
mov
out
jmp
bound
ss
jle
bound
jmp
imul
loopne
loop
bound
and
loop
bound
repz
xor
bound
loop
bound
xor
bound
jmp
test
jmp
test
bound
jmp
scas
bound
ret
sahf
bound
out
jmp
test
bound
bound
jmp
stos
bound
hlt
jmp
stos
bound
in
jmp
mov
jmp
mov
jmp
cmpsl
bound
lock
xchg
bound
ss
popf
bound
push
jmp
pushf
bound
sub
loop
bound
loopne
loop
bound
and
loop
bound
repz
andb
adc
loop
bound
xor
bound
jmp
jge
bound
jmp
jl
bound
jmp
andl
ret
sti
bound
out
jmp
jns
bound
jmp
js
bound
jmp
jg
bound
jmp
mov
in
jmp
aad
bound
jmp
aam
bound
jmp
add
lock
cmp
bound
jmp
aaa
bound
push
jmp
bound
dec
jmp
sub
jmp
arpl
and
loop
arpl
repz
in
arpl
adc
loop
arpl
xor
bound
jmp
outsl
arpl
lock
data16
and
loop
arpl
sbb
loop
arpl
fs
inc
arpl
inc
jmp
dec
arpl
lock
dec
arpl
sub
loop
arpl
loopne
sbb
and
arpl
scas
xchg
scas
mov
bound
jmp
cltd
bound
repz
cwtl
bound
adc
loop
bound
xor
bound
jmp
jne
bound
jmp
je
bound
jmp
fwait
bound
sbb
loop
bound
fs
shll
bound
loop
bound
lock
xlat
bound
dec
jmp
bound
loopne
sbb
and
bound
scas
xchg
scas
mov
bound
fcomps
bound
popa
bound
mov
or
adc
popa
popa
rep
jne
popa
rorb
and
popa
popa
bound
aas
mov
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
and
fisttpl
popa
popa
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
jne
popa
rorb
dec
push
xchg
pop
loop
bound
or
bound
xor
call
std
xchg
outsb
mov
popa
or
inc
bound
outsl
or
pop
call
std
sub
mov
pop
popa
popa
and
sub
bound
popa
popa
bound
mov
or
or
popa
repz
sub
popa
rorb
and
popa
popa
bound
mov
and
pop
add
popa
pop
push
and
loop
bound
shl
aam
popa
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
bound
shl
dec
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
arpl
shl
pusha
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
fcomps
arpl
popa
fcomps
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
dec
outsl
fsubs
test
arpl
loop
out
or
bound
dec
outsl
fsubs
cltd
enter
arpl
loop
out
fcomps
arpl
popa
out
cmp
bound
bound
shl
sahf
sub
popa
rorb
cmc
push
or
dec
push
lcall
lock
bound
dec
or
pop
call
inc
bound
test
lcall
popa
shlb
and
jne
shl
ss
popa
popa
rorb
bound
xor
call
mov
adc
shl
stc
lahf
popa
popa
shlb
cmp
bound
xor
arpl
push
loop
bound
test
lcall
outsb
push
pop
jne
fsubs
sub
bound
mov
bound
or
push
pop
jne
lock
bound
jne
cmpsl
jne
mov
jp
loop
imul
shl
cltd
jbe
popa
pop
loop
bound
out
cmpsb
or
bound
loop
pop
bound
loop
bound
test
lcall
popa
or
bound
pop
bound
push
bound
or
call
into
bound
xchg
outsb
loope
popa
popa
or
bound
xor
call
pop
xchg
outsb
mov
loop
bound
test
lcall
popa
pop
loop
arpl
out
jl
loop
bound
test
lcall
bound
outsb
push
pop
loop
arpl
or
or
bound
or
bound
or
bound
loop
pop
bound
loop
arpl
scas
inc
jo
rorl
or
bound
or
bound
out
add
mov
bound
bound
loop
arpl
and
jmp
bound
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jecxz
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
out
bound
or
call
mov
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
into
arpl
xchg
mov
arpl
or
bound
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
arpl
or
bound
fbld
bound
loop
arpl
and
sub
bound
loop
imul
bound
loop
arpl
mov
add
loop
arpl
and
add
loop
arpl
and
loop
arpl
test
lcall
popa
pop
loop
arpl
adc
fisubl
bound
loop
arpl
adc
inc
arpl
pop
loop
arpl
or
bound
bound
popa
or
bound
popa
pop
loop
imul
loop
imul
bound
loop
arpl
or
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
fisubl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
inc
arpl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
cmpsb
arpl
or
dec
or
pop
call
xchg
outsl
adc
pop
call
out
bound
outsl
or
fbld
bound
outsb
push
pop
loop
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
loop
bound
test
lcall
popa
pop
loop
arpl
bound
bound
repz
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
bound
bound
xor
call
jne
or
popa
adc
bound
loop
bound
test
lcall
popa
cmpsl
loop
arpl
out
bound
dec
arpl
bound
adc
bound
mov
bound
into
bound
repz
popa
popa
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
or
bound
loop
arpl
or
bound
xor
call
sbb
bound
loop
arpl
inc
jmp
hlt
arpl
dec
jmp
jmp
bound
loop
arpl
sub
loop
arpl
inc
jmp
push
arpl
adc
loop
arpl
inc
jmp
dec
arpl
sbb
loop
bound
pop
loop
arpl
out
aaa
or
bound
or
outsl
or
lcall
lcall
bound
and
loop
imul
arpl
test
lcall
bound
push
outsb
push
or
outsl
or
adc
outsl
fsubs
popa
fcomps
lcall
mov
bound
xor
call
sbb
bound
xor
insl
bound
or
bound
xor
call
sbb
bound
outsb
fcompl
popa
or
bound
push
arpl
and
outsb
arpl
lods
loop
imul
bound
adc
adc
bound
loop
arpl
and
add
loop
arpl
test
lcall
popa
rorb
bound
xor
call
loop
arpl
test
lcall
popa
rorb
bound
xor
call
jne
or
popa
add
bound
bound
xor
call
loop
arpl
test
lcall
popa
shlb
push
arpl
or
bound
xor
call
jne
or
popa
and
bound
loop
arpl
test
lcall
popa
cmpsl
loop
arpl
out
or
bound
xor
call
and
bound
xor
mov
popa
popa
and
cmc
arpl
and
add
loop
arpl
mov
add
loop
arpl
test
lcall
popa
or
bound
or
bound
xor
call
add
bound
push
bound
or
call
add
bound
pop
fcomps
arpl
popa
fcomps
arpl
popa
fcomps
arpl
popa
adc
bound
push
arpl
bound
and
bound
loop
arpl
rorb
bound
xchg
fcomps
shlb
add
bound
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
arpl
or
dec
push
mov
bound
pop
call
lcall
imul
cmp
call
loop
arpl
test
lcall
popa
shlb
into
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
out
test
or
call
loop
arpl
test
lcall
popa
shlb
and
bound
jne
or
popa
mov
pusha
pop
bound
loop
bound
pop
loop
pop
bound
loop
arpl
lods
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jbe
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
xchg
arpl
test
lcall
popa
or
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
lcall
pop
adc
bound
loop
arpl
or
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
pop
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
imul
bound
loop
pop
bound
loop
imul
bound
loop
imul
bound
loop
pop
bound
or
call
popa
arpl
adc
fs
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
arpl
xchg
fdivrs
loop
pop
bound
popa
pop
loop
imul
loop
imul
bound
loop
pop
bound
loop
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
fs
bound
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
bound
push
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
mull
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
pop
pop
bound
or
bound
dec
or
pop
call
xchg
outsl
adc
pop
call
xchg
arpl
outsl
or
sti
arpl
adc
pop
call
sti
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
mov
or
dec
push
and
or
stc
push
or
sbb
popa
popa
bound
mov
bound
into
bound
repz
jbe
popa
pop
jne
or
bound
xor
call
into
bound
out
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
mov
movsl
or
jne
pop
jne
or
pushf
xchg
mov
ljmp
mov
lcall
push
jmp
xchg
or
popa
popa
popa
movsb
and
lods
loop
imul
add
jne
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
rcr
xrelease
jne
or
stos
fimull
mov
stc
or
pop
or
mov
cltd
stos
pop
loop
bound
out
xchg
mov
bound
loop
bound
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
or
and
and
jne
mov
add
jne
and
add
jne
and
add
jne
test
lcall
popa
or
pusha
or
lcall
outsb
xchg
pop
call
xchg
fdiv
mull
or
lcall
popa
pop
jne
or
mov
jne
bound
bound
popa
popa
pop
jne
and
fbld
bound
add
loop
bound
test
lcall
popa
rclb
jne
shl
cli
cmpsb
popa
popa
fsubr
add
out
loop
bound
test
lcall
popa
shlb
add
jne
shl
jae
popa
popa
or
out
bound
jne
or
bound
bound
or
bound
xchg
xchg
cmpsl
pop
call
or
add
lcall
sub
pop
jne
lock
bound
jo
bound
shl
push
popa
popa
and
jmp
bound
loop
imul
bound
jne
mov
add
jne
and
add
loop
bound
pop
jne
adc
out
bound
loop
bound
adc
pop
jne
adc
pop
jne
or
lcall
popa
pop
jne
and
jp
bound
loop
imul
bound
test
lcall
outsl
or
lcall
lcall
bound
jne
or
or
pop
call
xchg
loop
pop
popa
popa
and
bound
loop
imul
test
lcall
popa
pop
jne
or
bound
or
push
pop
jne
or
and
outsl
or
pop
call
mov
or
lcall
popa
shlb
adc
shl
lcall
or
leave
cmp
call
or
outsl
or
pop
call
out
or
bound
leave
cmp
call
or
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
mov
or
lcall
popa
pop
jne
lock
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
bound
lcall
xor
es
dec
cmpsl
pop
xchg
loop
push
jecxz
bound
popa
test
lcall
ret
popa
or
outsl
or
adc
or
bound
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
xchg
loop
popa
popa
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
dec
or
or
scas
es
dec
cmpsl
pop
mov
or
test
lcall
ret
popa
or
bound
lcall
xor
movsl
cmc
or
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
out
or
lcall
popa
pop
jne
out
sti
jo
adc
shl
jno
popa
popa
cmpsl
jne
out
or
lcall
popa
pop
jne
lock
bound
jne
or
or
pop
call
mov
or
lcall
outsb
push
pop
jne
lock
bound
bound
shl
sbb
popa
popa
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
shlb
adc
shl
mov
bound
jne
fcomps
pop
jne
bound
or
dec
shl
roll
popa
popa
or
lcall
popa
cmpsl
jne
out
jo
bound
push
jne
shl
jl
bound
jne
pop
loop
bound
or
bound
or
bound
lcall
pop
jne
lock
bound
jne
mov
movsl
or
jne
pop
jne
or
mov
ljmp
imul
sbb
push
dec
or
negl
or
adc
and
add
popa
or
lcall
popa
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
lcall
popa
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
popa
or
or
mov
or
mov
into
popa
or
or
mov
test
pop
sub
outsb
adc
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
pop
push
int
or
jne
or
pop
lcall
leave
cmp
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
lcall
popa
pop
loop
bound
out
xchg
lcall
bound
outsb
push
pop
loop
bound
or
or
bound
or
or
jecxz
bound
in
bound
sbb
sub
or
push
cltd
xchg
or
or
or
push
std
popa
popa
popa
pop
loop
bound
or
or
or
or
or
push
cltd
cmp
jne
or
lcall
popa
pop
jne
or
bound
out
bound
xchg
or
bound
out
bound
jne
test
lcall
popa
mov
bound
popa
or
lcall
popa
pop
loop
bound
out
lea
bound
bound
loop
bound
fdiv
lcall
bound
fsubs
popa
popa
popa
or
bound
bound
or
or
pop
call
xchg
or
pop
call
jg
pop
loop
bound
or
bound
bound
pop
imul
out
bound
pop
call
lcall
imul
bound
rorl
or
bound
bound
fcoms
or
or
bound
bound
push
pop
pop
loop
bound
or
or
bound
or
bound
push
bound
out
bound
jne
or
sti
or
popa
popa
popa
call
loop
bound
push
loop
bound
pop
loop
bound
lock
bound
jne
test
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
jle
outsl
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
popa
pop
jne
or
push
jne
pop
jne
or
jbe
xchg
pop
lcall
popa
movsl
or
jne
pop
jne
or
push
sub
imul
imul
or
lcall
nop
loopne
jne
jmp
xchg
or
jbe
fisttpl
popa
popa
or
or
lcall
popa
cmpsl
jne
mov
clc
pushf
xchg
mov
mov
lock
popa
popa
popa
or
or
or
pop
call
out
bound
bound
bound
test
int
pop
push
lcall
pop
call
xchg
outsl
or
pop
call
mov
clc
inc
xor
fsub
sbb
push
imul
inc
xor
fsubr
test
jne
test
lcall
popa
mov
clc
mov
and
jmp
mov
xchg
clc
inc
addr16
scas
aad
fs
enter
lahf
scas
push
and
fsubs
jne
test
lcall
popa
or
or
jmp
int
or
popa
or
cltd
xchg
pop
jne
or
dec
push
jle
jne
jo
jp
jb
popa
or
shlb
bound
pop
push
or
call
push
bound
shlb
jle
mov
bound
repz
bound
jne
or
outsl
or
pop
call
out
or
lcall
popa
xchg
mov
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
or
imul
mov
bound
shlb
imul
repz
popa
pop
jne
or
xchg
or
bound
mov
repz
bound
jne
jmp
bound
jp
pop
loop
repz
dec
bound
jne
jmp
xchg
bound
loop
repz
push
xchg
mov
xchg
bound
mov
repz
and
or
pop
sbb
xchg
bound
sarb
repz
mov
or
lods
loop
imul
jbe
mov
bound
bound
repz
bound
or
lock
ljmp
aam
mov
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
andl
bound
bound
bound
fldenv
popa
ljmp
jg
sub
add
mov
bound
bound
bound
bound
int
pop
push
sti
sub
add
jg
push
loop
imul
bound
bound
repz
arpl
or
out
cs
ljmp
jns
daa
loop
imul
bound
bound
repz
bound
or
mov
or
jne
pop
jne
or
push
ds
cmp
ljmp
cmp
cmp
or
push
jmp
xchg
or
jne
lods
pop
add
jne
or
popa
or
pop
lcall
push
xchg
popa
or
jne
or
popa
or
jmp
xchg
or
pop
jne
or
mov
outsl
or
pop
call
out
or
pusha
push
and
and
fsubs
jne
lods
or
imul
add
jne
and
add
jne
mov
add
jne
lods
xor
imul
cmp
jne
or
popa
pop
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
or
pop
call
mov
bound
repz
bound
or
or
push
cltd
xchg
pop
jne
or
lcall
popa
or
xchg
loop
popa
popa
popa
or
pop
jne
adc
shlb
pop
bound
bound
bound
bound
adc
rclb
jne
shlb
lcall
bound
repz
pop
bound
jne
bound
bound
bound
jne
pop
jne
or
dec
pop
jne
or
jmp
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
call
or
or
or
push
sub
rorb
jae
or
stc
or
or
sub
push
push
push
lea
lcall
popa
push
and
popa
movsl
or
or
dec
or
or
popa
popa
fsubrs
ljmp
xchg
cmp
popa
popa
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
add
popa
popa
popa
out
or
adc
popa
xchg
out
or
sahf
cmpsl
jne
mov
scas
sbb
lock
popa
fcoms
dec
popa
fcoms
push
popa
fcoms
pop
popa
fcoms
pop
popa
fcoms
dec
or
popa
or
pop
int
or
popa
popa
popa
pop
jne
or
lcall
jne
pop
jne
or
xchg
pop
jne
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
pusha
xchg
fsubs
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
stc
xchg
fcoms
popa
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
sbb
mov
mull
orl
pop
int
or
push
jne
or
out
repnz
bound
lock
bound
xchg
or
or
cmp
jne
or
popa
fsubrs
ljmp
lock
push
cmp
fisttpl
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
jecxz
mov
scas
sbb
lock
popa
or
jecxz
jne
or
lcall
jne
or
sbb
lcall
or
lcall
or
lcall
fcoms
dec
popa
or
stc
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
pop
fcoms
or
jne
or
pop
xchg
fcoms
popa
popa
popa
or
sbb
fidivrl
jl
jne
or
lcall
or
repz
repnz
cmp
sub
pop
fcoms
out
lods
or
pop
or
pop
movsl
imul
or
stc
lds
jne
or
mull
or
pop
or
imul
sub
sub
sbb
ljmp
out
lcall
sbb
push
and
fsubs
jne
lods
loop
imul
add
jne
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
repz
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
sbb
popa
cmpsl
push
cmp
or
call
xchg
rorl
push
sbb
popa
or
cltd
xchg
pop
jne
or
lcall
popa
or
popa
out
or
lcall
pop
int
out
mov
lcall
popa
lock
popa
out
mov
lcall
popa
lock
popa
and
lods
loop
imul
xor
test
test
lcall
jne
test
lcall
popa
pop
jne
or
dec
out
or
jle
int
outsl
or
pop
call
pop
mov
or
jle
int
outsl
or
pop
call
pop
mov
outsb
inc
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
jle
jne
pop
jne
or
lcall
or
lcall
popa
pop
jne
or
lcall
popa
or
out
or
lcall
jne
test
lcall
roll
call
lcall
pop
jne
or
sub
add
mov
or
dec
push
pop
jne
or
lcall
popa
cmpsl
jne
mov
bound
or
popa
imul
xchg
fcoml
jne
pop
jne
or
cmc
add
jne
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
or
lcall
popa
xchg
mov
jne
or
popa
cmp
or
call
imul
cmp
call
push
xchg
mov
bound
or
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
lock
popa
and
pusha
xchg
push
xor
mov
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
xor
cmp
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
cmpsl
jne
out
or
repz
or
xor
lods
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
or
popa
popa
popa
fisttpl
xchg
inc
cmpsl
pop
out
or
bound
xchg
repnz
bound
or
popa
lcall
jne
push
jne
pop
jne
or
shlb
imul
lcall
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
out
jbe
jne
test
lcall
popa
or
pop
or
xor
negl
lock
arpl
lock
bound
lcall
popa
mov
or
lcall
popa
pop
jne
out
xchg
or
lcall
popa
pop
jne
or
xchg
or
and
lods
loop
imul
add
jne
pop
jne
or
test
lcall
popa
mov
mov
popa
popa
or
lcall
and
sub
add
jne
test
lcall
outsl
or
pop
call
xor
add
push
xor
std
popa
popa
popa
pop
int
or
xor
repz
lcall
popa
mov
sahf
push
imul
popa
pop
jne
and
and
add
jne
or
push
out
xchg
or
notl
jne
or
lcall
popa
mov
gs
popa
popa
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
fdiv
popa
popa
popa
or
sbb
aad
xchg
popa
popa
pop
jne
or
or
lcall
lcall
jne
or
sub
lcall
or
lcall
outsb
push
pop
jne
or
cmp
outsl
or
pop
call
out
out
fucomi
aaa
or
cmp
outsl
or
pop
call
mov
or
sbb
jne
or
or
lock
bound
push
pop
jne
or
fs
outsl
or
xor
add
mov
push
pop
jne
lock
arpl
or
lcall
popa
out
lea
lcall
popa
push
and
fs
push
mov
loop
imul
add
jne
test
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
and
jne
pop
jne
or
or
or
or
xor
sarb
pop
push
jne
or
or
or
or
xor
int
pop
push
jne
or
or
or
or
xor
mov
pop
push
jne
or
or
or
or
xor
addr16
cmp
and
ret
imul
cmp
ljmp
mov
jbe
jne
xchg
repnz
or
or
pop
call
push
cmpsl
pop
out
scas
sbb
insb
xchg
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
or
rclb
jne
fsubr
dec
popa
mov
scas
sbb
cmpsb
xchg
popa
popa
and
lods
loop
imul
and
jne
test
lcall
popa
or
or
lcall
popa
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
mov
adc
mov
jne
or
lcall
popa
pop
jne
or
adc
popa
or
or
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
shlb
sbb
dec
push
jbe
jne
or
shrb
jne
or
mov
popa
popa
or
jmp
int
pop
lcall
bound
repz
or
xchg
pop
int
or
mov
adc
mov
jne
or
mov
outsl
or
pop
call
xchg
outsb
cmp
popa
popa
or
lcall
popa
pop
jne
out
jl
jne
test
lcall
outsb
push
pop
jne
or
cmp
jne
or
mov
outsl
or
pop
call
mov
or
jne
or
int
jg
lcall
mov
or
lcall
pop
loop
arpl
out
xchg
lcall
bound
xchg
bound
sbb
xchg
repz
test
lcall
popa
or
xchg
mov
lock
or
xchg
or
lcall
xor
xchg
repz
popa
popa
lock
bound
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
mov
jne
or
popa
mov
lock
popa
popa
lock
cmp
or
pusha
push
test
lcall
popa
xchg
outsb
gs
popa
popa
adc
imul
arpl
or
lcall
popa
or
bound
push
bound
loop
imul
bound
imul
bound
add
loop
bound
stc
loop
imul
stc
loop
imul
bound
pop
dec
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
dec
arpl
xchg
pop
outsb
int
arpl
out
adc
bound
loop
imul
bound
add
loop
bound
and
add
loop
bound
arpl
add
loop
bound
cmp
loop
bound
jmp
add
loop
bound
cmp
add
loop
bound
add
loop
bound
jmp
add
loop
bound
dec
loop
imul
bound
loop
imul
bound
add
loop
bound
arpl
add
loop
bound
pop
loop
imul
bound
loop
imul
bound
add
loop
bound
cmp
add
loop
bound
cmp
add
loop
bound
and
add
loop
bound
dec
loop
imul
bound
add
loop
bound
push
loop
imul
bound
pop
cmp
bound
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
cmp
bound
sub
fucomi
and
loop
arpl
rorb
dec
push
notl
loop
bound
adc
pop
loop
bound
adc
shlb
popa
bound
or
dec
push
lcall
pop
push
bound
or
adc
popa
bound
jne
bound
loop
arpl
pop
loop
arpl
or
lcall
popa
or
bound
push
or
call
imul
popa
popa
popa
adc
push
arpl
pop
loop
arpl
or
bound
bound
lcall
push
imul
cmpsl
lcall
bound
adc
bound
xchg
pop
lcall
mov
bound
pusha
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
jne
test
lcall
popa
or
bound
push
or
popa
popa
fcomps
arpl
popa
and
mov
loop
imul
bound
imul
bound
add
loop
arpl
stc
loop
imul
stc
loop
imul
bound
pop
mov
bound
lea
bound
bound
and
jae
or
bound
bound
or
call
mov
bound
bound
adc
bound
loop
imul
bound
add
loop
arpl
and
add
loop
arpl
arpl
add
loop
arpl
cmp
loop
arpl
jmp
add
loop
arpl
cmp
add
loop
arpl
add
loop
arpl
jmp
add
loop
arpl
dec
loop
imul
bound
loop
imul
bound
add
loop
arpl
arpl
add
loop
arpl
pop
loop
imul
bound
loop
imul
bound
add
loop
arpl
cmp
add
loop
arpl
cmp
add
loop
arpl
and
add
loop
arpl
dec
loop
imul
bound
add
loop
arpl
push
loop
imul
bound
pop
sti
arpl
popa
out
lea
bound
bound
and
arpl
mov
or
bound
bound
or
call
sti
arpl
add
lea
bound
stc
adc
cmpsb
arpl
rorb
dec
push
notl
loop
arpl
adc
adc
bound
bound
xchg
arpl
or
dec
push
lcall
adc
stos
arpl
rorb
adc
popa
bound
in
arpl
fcomps
arpl
popa
fsubs
stos
arpl
popa
out
or
bound
loop
arpl
or
adc
popa
or
bound
out
or
bound
arpl
or
bound
bound
dec
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
loop
arpl
push
mov
bound
repz
xor
loop
mov
lock
lock
bound
bound
bound
sbb
nop
lock
popa
lock
popa
bound
bound
bound
sbb
nop
lock
popa
popa
lock
popa
popa
popa
bound
repz
lock
popa
popa
popa
lock
popa
popa
popa
or
adc
popa
or
mov
adc
shlb
sub
mov
jne
or
popa
and
popa
or
leave
cmp
call
or
sbb
cmp
adc
loop
arpl
lods
pop
add
loop
arpl
test
lcall
popa
or
shrl
pusha
or
fisubrl
mov
bound
in
arpl
pop
jne
or
pop
push
add
mov
sbb
cmp
adc
in
arpl
pop
jne
or
jbe
push
popa
popa
popa
fsubr
cmp
mov
fcoms
sbb
jbe
movsl
or
jne
xchg
repnz
adc
mov
jne
fcoms
or
jne
or
mov
jae
or
xchg
xchg
or
xchg
xchg
lcall
jne
out
lea
cmp
jne
out
sbb
xchg
or
and
lods
loop
imul
add
jne
mov
add
jne
inc
loop
imul
add
jne
dec
loop
imul
add
jne
pop
jne
or
lcall
jne
or
xchg
lcall
leave
cmp
call
dec
xchg
outsb
ss
popa
popa
or
lcall
popa
mov
dec
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
adc
pop
jne
or
lcall
popa
xchg
repnz
int
outsl
or
pop
call
push
sub
dec
or
dec
xchg
or
jne
or
pop
xchg
or
jne
xchg
bnd
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
popa
or
pusha
pop
int
lock
push
jne
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
outsb
push
pop
jne
lock
popa
popa
or
or
or
pop
call
xchg
outsb
or
popa
xchg
bnd
xchg
repnz
cmpsl
pop
xchg
outsb
add
popa
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
push
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
popa
or
lcall
outsb
push
pop
jne
or
lcall
outsb
push
pop
jne
lock
jne
pop
jne
or
call
lcall
push
jne
or
call
lcall
push
or
call
sbb
outsl
or
pop
call
pop
or
imull
pop
call
lcall
outsl
or
pop
call
sbb
or
pop
call
dec
or
xchg
test
outsl
or
mov
or
lcall
popa
or
or
pop
call
pop
or
imull
pop
call
lcall
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
leave
leave
and
das
loop
imul
add
jne
test
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
mov
cmp
push
or
lcall
leave
cmp
jne
out
add
loop
imul
push
test
lcall
outsb
cltd
imul
mull
or
jne
das
loop
imul
add
mov
repz
bound
pop
jne
or
lcall
push
outsb
cltd
dec
sbb
popa
fdiv
lcall
popa
popa
xchg
push
sbb
imul
imul
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
adc
ljmp
rorl
lcall
popa
or
adc
or
lcall
repnz
cltd
dec
sbb
popa
test
sbb
xor
cmpsl
popa
popa
or
or
lcall
into
popa
or
mull
or
jne
das
loop
imul
add
mov
repz
jne
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
add
loop
imul
out
pop
scas
sbb
and
popa
movsl
or
lcall
xchg
repnz
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
xchg
or
pop
jne
or
pop
jne
out
hlt
scas
sbb
int
xchg
pop
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
and
adc
add
jne
and
add
jne
mov
add
jne
test
lcall
outsb
push
or
or
pop
call
xchg
xchg
mov
fsubr
popa
popa
popa
or
imul
leave
cmp
pop
pop
call
lds
jne
push
jne
or
imul
testl
int
adc
pop
call
imul
or
imul
leave
cmp
pop
pop
call
lds
or
imul
lcall
leave
cmp
push
pop
jne
out
or
imul
leave
cmp
pop
pop
call
lds
or
imul
xchg
pop
lcall
leave
cmp
push
pop
jne
out
mov
imul
lcall
imul
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
mov
or
lcall
popa
or
pop
int
adc
pop
jne
or
call
lcall
push
or
call
xor
outsl
or
lcall
popa
out
or
lcall
sahf
pop
popa
popa
and
sub
lods
loop
imul
bound
jne
pop
loop
pop
bound
loop
pop
bound
or
call
lcall
bound
or
call
push
sub
test
lcall
popa
cmpsl
jne
mov
or
bound
xor
call
push
push
pop
loop
pop
bound
loop
pop
bound
adc
pop
bound
lcall
pop
jne
or
xchg
lcall
test
lcall
popa
pop
loop
pop
bound
mov
repz
bound
loop
pop
bound
jne
or
repz
bound
jne
fcomps
mov
bound
popa
or
fdiv
lcall
or
bound
cmp
push
bound
loop
pop
bound
or
bound
mov
repz
push
bound
loop
pop
bound
or
call
dec
pop
bound
lcall
bound
loop
pop
bound
or
call
or
bound
mov
repz
bound
outsl
or
pop
call
mov
or
bound
or
bound
pop
bound
shlb
bound
bound
xor
call
xchg
or
or
imul
cmp
ljmp
lock
sbb
pop
jne
fcoms
mov
popa
popa
and
fisubs
popa
scas
sbb
pop
jne
out
xchg
sbb
xchg
pop
jne
xchg
bnd
or
sar
outsl
or
popa
popa
pop
mov
repnz
cmpsl
pop
xchg
adc
popa
popa
popa
xchg
bnd
or
sub
pop
xchg
repnz
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
out
out
mov
or
not
popf
xor
popa
popa
mov
xchg
bnd
or
imull
sbb
jb
bnd
or
not
xchg
repnz
or
push
xchg
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
mov
and
loope
popa
popa
or
jne
out
mov
cmp
jne
loopne
popa
popa
lock
bound
xchg
bnd
or
imull
sbb
pop
out
xchg
sbb
xchg
pop
jne
fsubr
push
loopne
imull
dec
arpl
xchg
bnd
xor
repnz
or
popa
popa
xchg
repnz
int
xchg
repnz
cmpsl
pop
out
scas
sbb
push
scas
sbb
push
and
fsubs
jne
pop
jne
or
and
popa
popa
fsubrs
jne
test
lcall
popa
lock
popa
popa
jo
bound
bound
jne
pop
jne
or
js
jne
or
sub
jne
or
xchg
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
push
fs
push
xor
push
pop
or
lcall
popa
pop
jne
bound
mov
or
mov
popa
popa
repz
push
jne
or
popa
bound
xor
bound
jne
or
lcall
popa
mov
fldcw
popa
or
push
push
ficoml
jne
or
jecxz
int
or
push
push
fidivl
int
or
push
push
pop
int
or
mov
push
pop
jne
or
std
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
and
jne
test
lcall
popa
pop
jne
and
xchg
popa
popa
popa
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
fsubrs
popa
popa
popa
or
and
xor
and
popa
or
adc
repnz
jne
or
mov
or
pusha
cmpsl
fidivrl
xor
or
popa
or
push
or
pop
movsl
or
stc
or
pop
movsl
lods
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
or
lcall
popa
or
xchg
mov
out
push
bound
out
dec
bound
bound
int
outsl
or
pop
call
out
or
xchg
or
out
out
lock
bound
or
xchg
popa
movsl
or
lcall
or
dec
push
loop
imul
mov
int
or
popa
pop
push
fcomi
push
popa
out
scas
sbb
out
pop
scas
sbb
and
popa
movsl
or
jne
pop
jne
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
popf
xor
popa
popa
out
or
popa
test
sbb
xor
cmpsl
popa
popa
or
push
mov
jne
mov
out
dec
scas
sbb
int
xchg
pop
push
dec
xor
int
or
popa
adc
cltd
push
and
leave
leave
or
push
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
fsubrs
out
or
popa
test
popa
popa
popa
fcomps
or
or
jne
or
jne
out
inc
or
popa
or
xor
int
or
popa
adc
cltd
push
and
fsubs
jne
lods
loop
imul
add
jne
or
and
adc
add
jne
or
push
icebp
or
lcall
popa
or
or
pop
call
pop
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
or
pop
call
mov
popa
or
lcall
popa
or
or
pop
call
out
or
lcall
popa
or
or
pop
call
or
or
pop
call
pop
jne
out
jns
jne
test
lcall
popa
or
or
pop
call
pop
jne
or
imul
or
imul
push
and
popa
movsl
or
mull
iret
and
repz
bound
loop
imul
bound
jne
lods
mov
imul
bound
loop
imul
leave
cmp
call
imul
add
loop
pop
bound
mov
or
pop
bound
or
call
repz
bound
outsl
or
pop
call
pop
pop
jne
out
mov
bound
or
push
pop
jne
or
pop
outsl
or
pop
call
cmp
bound
or
pop
call
cmpsl
pop
les
pop
call
lcall
jne
shl
lea
bound
jne
or
imul
bound
add
bound
or
call
imul
bound
mov
imul
bound
outsl
or
pop
call
xchg
outsb
out
popa
popa
popa
or
or
pop
call
imul
bound
jne
sbb
loop
pop
bound
push
loop
pop
bound
int
scas
pusha
pop
adc
bound
loop
pop
bound
or
call
pop
pop
bound
pusha
or
bound
adc
bound
pop
pop
jne
or
bound
or
push
pop
jne
or
bound
xor
call
xchg
lock
bound
loop
pop
bound
or
call
imul
fs
fs
popa
popa
popa
pushl
sub
jne
daa
pushl
adc
jne
sub
jne
push
pushl
and
jne
and
jne
adc
pushl
pop
pushl
sbb
jne
and
jne
pushl
hlt
pushl
stc
pushl
dec
pushl
dec
pushl
push
pushl
pusha
pushl
pop
pushl
push
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
dec
pushl
pushl
inc
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
cmp
jne
xor
pushl
aas
pushl
dec
pushl
ret
push
push
pushl
sbb
jne
sbb
jne
out
pushl
icebp
pushl
lock
repz
cli
pushl
in
pushl
in
pushl
pushl
pushl
pushw
outsl
pushl
scas
pushl
mov
pushl
and
jne
mov
pushl
lods
pushl
mov
jne
and
pushl
std
pushl
push
fcomps
bound
popa
out
lea
bound
bound
and
jae
or
bound
test
popa
popa
popa
fcomps
add
cmpsl
bound
xchg
push
loop
bound
sbb
xchg
bound
add
xor
bound
out
sbb
bound
fcomps
bound
popa
or
bound
ficompl
popa
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
bound
dec
mov
bound
aas
xchg
or
bound
aas
cmp
cmpsb
bound
push
pusha
pop
adc
bound
or
bound
or
bound
repz
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
loop
bound
cmpsl
jne
jae
or
bound
repz
int
push
adc
push
bound
pop
loop
bound
or
bound
or
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
mov
bound
and
leave
fcoms
lcall
fsubrs
mov
or
jne
or
xchg
imul
push
or
pop
jnp
push
sub
.byte
popa
