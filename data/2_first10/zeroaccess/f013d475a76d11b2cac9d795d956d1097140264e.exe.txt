pop
lods
fcom
mov
fnstenv
out
faddp
pushf
and
dec
shl
push
dec
mov
pop
sub
lds
mov
fisubs
bound
ret
mov
loope
jb
sbb
inc
pop
les
fisttpll
imul
jp
pop
ret
dec
stc
jp
pop
jo
test
repnz
daa
hlt
rorl
out
inc
outsb
mov
mov
cmpsl
lods
push
loope
arpl
pop
into
daa
cmpsl
arpl
imul
das
mov
data16
add
clc
pop
call
sbb
cmp
cmp
movsl
fs
mov
sbb
xchg
push
sbb
sub
aas
mov
lret
lock
mov
rcll
fs
mov
push
sbb
inc
bound
jns
test
lcall
shl
rclb
sub
stc
adc
cs
inc
xchg
and
mov
shll
xor
sub
xchg
in
faddp
popf
cmp
jo
cmpsl
sbb
out
jnp
bound
xorb
mov
sub
xchg
int3
adc
mov
add
out
loope
jo
rclb
sti
out
dec
inc
mov
push
aam
loopne
arpl
sub
mov
and
push
test
aam
xor
ja
stos
adc
dec
rcrl
cmp
cwtl
mov
jae
cmp
pop
push
in
add
xlat
jo
popf
sbbl
mov
sbb
fwait
add
stc
pop
fisttps
and
lds
imul
sbb
xlat
xor
adc
das
adc
cmp
push
pop
xacquire
in
jp
cld
jg
mov
or
push
xchg
and
test
jns
mov
xor
mov
pop
arpl
mov
mov
out
inc
call
sbb
cli
aaa
lahf
out
imul
inc
pop
int
and
lret
sub
sub
add
mulb
fsubs
mov
js
mov
sbb
push
rorb
sti
inc
mov
test
ffreep
jne
fs
adc
mov
push
into
aas
mov
ja
mov
lods
lock
mov
rorl
mov
inc
dec
loope
xchg
insb
popf
cs
arpl
xor
dec
ljmp
insl
push
jae
insl
mov
maxps
inc
mov
test
jne
in
repz
dec
icebp
inc
mov
mov
inc
jae
std
int3
inc
loope
dec
rol
pop
mov
xchg
sbb
mov
aas
imul
lods
adc
fs
mov
test
scas
push
pop
mov
icebp
or
mov
mov
dec
int
jnp
cmpsb
in
js
xchg
push
call
rol
adc
testb
cmc
xor
rorb
imul
adc
or
mov
and
pop
leave
mov
sub
rorl
shlb
adc
dec
cmp
cli
cmp
and
loope
mov
inc
jecxz
inc
pop
insb
clc
mov
stos
movsb
add
cmp
cmp
push
popa
jnp
js
fcomp
mov
inc
addr16
mov
pop
xor
inc
cmpsl
and
xchg
je
popa
push
and
xorl
sbb
rdmsr
xor
xchg
pop
dec
mov
dec
xchg
in
adc
loopne
cmp
mov
pop
adc
std
cmc
repnz
movsb
lock
repnz
sahf
fstl
mov
ss
fs
stc
stc
jae
dec
xchg
and
push
sub
popf
push
jge
mov
inc
es
sti
xchg
pop
aad
adc
orl
mov
cmp
dec
push
orl
xor
sbb
fidivrs
push
sub
cmp
aam
ret
addb
es
sti
push
popl
movsl
stc
sbb
mov
push
mov
or
ret
call
inc
jmp
stc
jno
xor
jl
fiadds
fsubr
outsb
fistps
xor
sbb
dec
xchg
clc
data16
and
cli
dec
icebp
xchg
inc
mov
jecxz
js
outsl
xchg
mov
push
cmp
pop
xor
fcoms
aad
in
fcmovb
inc
xor
test
adc
popa
cmp
xlat
movsb
push
xor
mov
outsl
mov
inc
push
popf
mov
xor
push
sbb
xor
inc
lret
push
iret
repnz
scas
mov
inc
pop
pusha
mov
push
sbb
mov
in
pop
and
xchg
test
mov
jg
xchg
loope
or
loope
repz
pop
pop
hlt
sub
add
mov
das
xchg
push
dec
sub
cmp
xor
mov
add
cvtss2sd
jns
jecxz
andb
sbb
pop
insb
and
fwait
in
lahf
cltd
sahf
inc
sbb
clc
mov
fwait
pop
std
shll
out
rorl
mov
sub
add
scas
lret
or
in
lret
insb
movsb
stos
mov
ja
or
xchg
stos
inc
fsub
rcr
sub
pop
jo
in
cltd
imul
std
sub
loop
les
fiaddl
push
addr16
fsub
mov
lret
xor
push
sbb
sti
push
jp
mov
in
clc
scas
sbb
cmp
cmc
fiaddl
adc
add
fs
out
dec
push
lock
loop
inc
iret
imul
mov
rcr
lret
lcall
adc
mov
mov
fwait
imul
fwait
shlb
and
std
adc
cmp
out
data16
add
or
and
aaa
stos
pushf
xor
pushf
or
push
daa
gs
loopne
adc
push
sub
mov
jbe
cltd
in
pop
rcl
jne
mov
ja
jp
inc
jecxz
out
xor
sbb
es
push
or
push
mov
and
rorl
mov
movsl
or
sub
xor
shrl
mov
push
loope
sub
mov
in
inc
aad
jo
insb
mov
dec
mov
in
pop
jecxz
loopne
leave
pop
popf
or
inc
bnd
push
add
cmp
test
mov
mov
mov
mov
mov
inc
add
and
mov
fidivrs
sti
add
mov
nop
pop
mov
mov
lret
mov
rcl
out
push
mull
add
jl
jno
dec
cmp
inc
filds
rol
cmp
add
in
je
inc
cwtl
js
pusha
xchg
xchg
inc
adc
loopw
fsubl
add
cmc
in
mov
and
mov
inc
data16
repz
ja
mov
loop
pop
ds
inc
xor
dec
adc
cmc
lret
pushf
add
jbe
xchg
dec
push
adc
jmp
mov
add
sbbl
ficoms
repnz
cmp
jge
cli
je
sbb
cmp
pop
adc
lods
int
inc
mov
mov
fsubp
jo
mov
popa
ds
xchg
aaa
outsl
outsl
addl
mov
fsubrs
roll
pop
mov
mov
push
inc
stc
dec
adcl
insb
mov
cmpsl
popa
shl
stos
xor
out
pop
jge
sub
mov
jmp
xchg
cmc
push
push
mov
dec
mov
adc
dec
in
into
or
incb
xchg
mov
stc
out
clc
movl
imul
xor
pop
bnd
dec
adc
dec
or
inc
jecxz
loopne
add
jg
jb
call
push
data16
add
sbb
jne
in
dec
add
ret
rorl
mov
nop
inc
inc
fcmovne
or
imul
outsl
in
push
lods
mov
mov
cwtl
shll
test
dec
mov
insl
pop
dec
clc
xchg
das
and
mov
dec
mov
or
add
jle
arpl
inc
xor
jae
cwtl
jb
sub
popaw
xchg
insb
fucomi
jmp
mov
mov
mov
sbbb
int
adc
jmp
mov
mov
mov
subb
cmc
and
or
push
dec
lods
dec
dec
daa
imul
xor
xchg
das
mov
mov
mov
dec
mov
mov
popa
jmp
or
outsl
pop
dec
movsl
cmc
cmp
scas
test
int3
push
cmc
push
cmp
mov
pop
imul
sar
xchg
or
jmp
int
push
in
and
pop
sub
cmp
push
cmpsl
cmp
cld
xchg
cmp
lods
out
pop
jae
xor
or
cltd
push
add
bound
jle
into
xlat
and
loop
fimull
jmp
push
sub
hlt
out
scas
sub
xchg
cld
movsb
loopne
cmp
les
pop
mov
or
leave
jp
xchg
jl
loopne
jmp
sub
pop
xchg
lret
pop
jmp
out
jmp
rcrb
popa
lds
inc
cmpsl
inc
aad
push
cs
or
xor
cmp
testb
or
push
adc
fmuls
sub
adc
aam
add
aam
fisubl
mov
lret
dec
mov
sub
lods
xor
test
xchg
faddl
sbb
insl
add
xlat
jae
rcrb
push
fs
mov
jp
insb
sbb
ret
scas
add
test
mov
cmp
lcall
nop
ficoml
and
cmp
shlb
push
scas
xchg
dec
jnp
aas
sub
cwtl
incb
divl
rcr
test
vmwrite
es
jg
es
and
daa
in
mov
testb
cltd
mov
outsb
jge
fisttpl
in
pop
sbb
ja
xlat
jle
cmp
shl
lahf
and
jne
scas
rep
shrb
push
dec
stc
sub
pop
movsl
inc
ficoml
out
fcoms
pop
xor
incl
rol
insb
rorl
loope
cmpsl
mov
mov
mov
sub
jge
jo
flds
iret
inc
fldt
sub
stos
push
stos
in
and
push
push
and
and
push
cmpsl
mov
sar
cmc
xor
in
mov
pop
sti
jg
jmp
cmp
add
ret
dec
les
xchg
scas
in
cmc
stc
popf
hlt
scas
in
and
sbb
add
rcr
mov
push
xchg
inc
xchg
or
movlps
mov
adc
add
xchg
test
leave
push
out
ret
push
rcrl
test
mov
jns
movsl
inc
inc
fs
decb
adc
insb
mov
fidivrs
add
add
imul
test
imul
lea
test
pop
mov
rcrb
xor
bndldx
icebp
mov
out
jle
pop
movsl
dec
es
and
cmp
scas
jns
mov
je
inc
xchg
test
jbe
andb
cltd
pop
cmpsl
mov
lret
sub
cmp
sub
sub
icebp
mov
loope
notl
mov
lods
sbb
fcomps
cs
fcoms
insb
int
cmp
cwtl
aaa
das
fwait
imul
shrl
ret
ret
dec
mov
mov
jnp
adc
leave
aaa
mov
inc
jnp
lahf
mov
call
jbe
inc
shll
mov
mov
mov
jb
inc
dec
inc
fiadds
inc
cmp
inc
or
mov
xchg
push
mov
gs
sti
mov
flds
mov
dec
push
jno
inc
xchg
xchg
adc
jnp
repz
cmp
or
pushf
push
mov
dec
jl
xor
push
pop
inc
dec
pusha
jg
dec
les
pop
jo
jbe
mov
mov
mov
ret
mov
mov
je
mov
jnp
dec
daa
pop
je
jo
inc
sbb
aaa
or
pop
pop
mov
fcos
sbb
pop
ret
pop
dec
stos
cmp
stc
push
sahf
xor
lret
xchg
call
shrb
pop
mov
nop
sub
or
dec
out
mov
dec
pop
xchg
notb
movsb
ljmp
aas
push
leave
out
mov
out
sahf
pop
loopne
dec
or
or
sub
fists
outsb
jo
loop
xchg
inc
cmpsl
mov
jle
out
stc
pop
mov
outsl
pop
idivl
or
mov
inc
xchg
mov
scas
test
sub
dec
inc
cld
loope
pop
hlt
fsub
cmp
popf
or
les
add
jo
jbe
jp
xor
cmp
adc
mov
clc
sbb
mov
mov
inc
pop
jg
sti
in
cmp
mov
pop
pop
push
stc
push
mov
sub
in
xorl
loopne
or
inc
sub
sub
orl
add
sbb
outsb
out
js
cmp
and
pop
mov
dec
jle
loopne
mov
ds
xor
repnz
add
sbb
pop
negl
xor
inc
repnz
repz
mov
rcrb
subl
ret
sti
add
cltd
sti
aam
test
mov
xchg
mov
ficoms
out
and
nop
notb
leave
mov
jno
adc
add
movsb
dec
add
push
add
or
add
add
add
lcall
dec
fistpll
add
add
out
add
mov
add
add
add
sbb
add
add
push
add
and
and
add
push
adc
mov
sub
jnp
add
or
add
xor
addl
or
add
push
cmp
sub
add
push
or
add
dec
jo
inc
je
add
pusha
add
or
mov
jge
cltd
add
int
in
xor
in
push
add
cmp
js
dec
sldt
loope,pn
outsb
outsl
xor
outsb
subl
movsb
inc
push
and
sub
or
dec
add
and
add
mov
add
outsl
les
add
xchg
fidivl
add
push
xchg
xor
popf
roll
add
xchg
dec
mov
add
pop
xchg
mov
or
xor
mov
xor
repnz
xchg
aas
mov
fidivl
mov
xchg
fisttps
nop
xchg
filds
push
and
add
ficompl
fisubrl
in
dec
pop
sbb
dec
cld
pop
sbb
dec
mov
push
dec
sbb
mov
dec
jno
in
dec
es
dec
adc
add
jmp
dec
inc
inc
add
add
add
in
dec
popf
out
xor
dec
in
dec
in
jno
inc
pusha
add
orl
sub
pop
dec
push
push
in
dec
mov
add
pop
in
dec
out
push
and
dec
jl
daa
dec
mov
pop
es
add
dec
dec
insb
add
in
dec
lahf
lock
rclb
int
lock
rolb
add
in
dec
mov
inc
inc
add
in
dec
dec
std
jmp
cs
in
dec
daa
inc
rolb
add
dec
jmp
int
dec
xchg
out
dec
add
cld
dec
sbb
dec
xchg
fcoml
das
push
in
dec
fs
in
dec
mov
dec
pop
add
in
dec
dec
in
jl
pusha
dec
in
dec
dec
dec
scas
pop
in
dec
ja
sti
dec
lods
pop
in
dec
add
pop
in
dec
xchg
hlt
orl
in
dec
and
in
dec
mov
hlt
add
fnsave
dec
xor
push
dec
fstpt
in
dec
imul
dec
ds
dec
dec
sub
movsb
dec
or
add
sbb
cmp
jnp
cmp
dec
dec
xchg
dec
dec
dec
in
dec
movsb
in
sub
sarl
test
add
add
inc
in
dec
stc
dec
xor
push
or
inc
in
dec
int3
mov
add
mov
dec
or
cld
or
sub
in
dec
outsb
clc
mov
pop
xor
aas
in
dec
adc
xor
call
jge
sti
mov
pop
lea
ja
dec
idivl
mov
mov
movsb
dec
pop
cs
dec
inc
lcall
sbb
dec
rcrl
in
movq
lods
dec
movsb
xchg
sbb
std
push
in
dec
mov
cli
repz
mov
std
jmp
out
fisttpll
dec
cltd
add
in
dec
in
fisttpll
dec
in
dec
ljmp
rorl
dec
call
add
pop
add
dec
lcall
dec
xor
push
dec
lea
dec
xor
dec
sbb
dec
xor
dec
test
sbb
jg
add
sbb
dec
jp
add
dec
js
add
dec
dec
in
dec
out
dec
les
sbb
dec
in
dec
stos
xchg
xchg
dec
shr
add
dec
cmp
cs
xlat
and
add
sbb
jecxz
add
repz
sbb
in
dec
push
push
in
dec
pop
fs
push
push
in
dec
lods
xchg
dec
pop
add
dec
push
push
in
dec
cmp
in
dec
leave
mov
dec
sahf
pop
lods
dec
addr16
in
dec
pushf
pop
lods
dec
cmc
jle
dec
lcall
dec
cwtl
pop
lods
dec
adc
dec
out
in
dec
scas
pop
popf
dec
in
in
dec
cmp
in
dec
loop
in
dec
lret
addr16
loopne
in
dec
pop
jns
dec
fistps
sub
pushf
dec
test
push
dec
sub
pushf
dec
adc
repz
sub
pushf
dec
mov
pop
in
dec
aas
pop
push
dec
je
in
dec
int
repz
jb
in
dec
pop
std
jmp
jo
in
dec
jmp
pop
in
dec
xchg
dec
mov
std
jmp
mov
repz
dec
mov
data16
out
xor
pcmpgtd
push
pop
dec
out
scas
aas
push
push
insb
por
dec
pop
jecxz
or
add
jge
int3
iret
add
pop
adc
and
add
dec
movsl
in
mov
dec
cltd
xor
sbb
add
adc
push
mov
test
sub
repnz
pop
push
int
push
inc
dec
pop
jl
cmp
add
dec
xor
or
add
add
add
movsb
or
add
mov
and
filds
add
cmp
es
mov
adc
cwtl
test
add
inc
sbb
add
bswap
pop
or
dec
scas
add
mov
or
add
inc
push
mov
jp
into
mov
addr16
dec
sbbb
add
add
jle
dec
popa
or
aas
sub
cmp
mov
jne
stc
add
je
push
add
push
aaa
xchg
aas
jle
js
add
adcb
test
rcrl
xor
clc
dec
fwait
push
in
adc
lock
cltd
data16
loop
arpl
das
pop
in
dec
mov
xor
sahf
mov
leave
or
dec
or
add
fiaddl
add
add
inc
ret
cmp
add
call
iret
pop
pop
cmp
mov
add
mov
cwtl
pop
in
lea
cwtl
aaa
dec
fcmovnbe
cmp
adc
add
mov
add
sbb
movsl
xchg
xchg
int3
mov
add
rolb
add
add
xor
popa
add
add
rclb
dec
jmp
pop
in
jle
push
xor
rorb
mov
pop
cld
mov
bound
push
or
dec
push
mov
mov
mov
test
insl
mov
mov
lea
insl
test
add
and
or
sub
clc
add
mov
add
add
add
dec
dec
in
rorb
mov
shl
xor
inc
leave
add
shrb
inc
mov
into
das
mov
setae
bound
outsl
in
mov
in
dec
notb
or
int
jnp
mov
rcll
ljmp
jle
xlat
int
imul
fmuls
add
out
addr16
jg
or
add
out
rcr
into
outsb
inc
popa
sbb
jbe
mov
add
addr16
daa
pop
pop
pop
jns
jl
pop
mov
clc
push
add
or
mov
xchg
pop
outsl
mov
xor
into
aad
inc
sbb
xor
in
add
jbe
jne
adc
push
mov
pop
mov
add
push
mov
mov
jmp
add
lea
cwtl
fildl
pop
in
les
add
mov
add
adc
rcrb
sbb
pop
rorb
cmp
in
lcall
mov
xor
cmpsb
lret
jp
add
in
dec
fs
xchg
dec
jbe
int3
push
add
pop
scas
mov
dec
push
ja
mov
sbb
jge
xor
add
add
hlt
fdiv
inc
lea
jmp
add
pop
hlt
jns
dec
pushf
loop
xchg
cmp
cmp
add
or
add
xlat
adcb
add
add
dec
flds
add
add
mov
fnstsw
in
inc
sub
test
pop
push
rep
dec
push
xchg
out
mov
orl
fidivrl
pop
push
jb
addr16
cmp
icebp
leave
repz
addb
xchg
mov
addr16
push
adc
add
mov
cwtl
daa
push
xor
push
jbe
fistpl
inc
xchg
cltd
data16
mov
mov
loopne
dec
pop
fdivs
fistl
or
add
rorl
sub
es
pop
add
dec
pop
push
data16
inc
add
sbb
lods
xchg
gs
sub
cmp
mov
mov
sub
shlb
insl
add
mov
xor
cmc
cmpsb
xor
push
cmp
inc
es
cmp
movsl
aas
daa
scas
mov
iret
sub
es
adc
lret
rolb
dec
loope
dec
cs
je
sub
in
repz
dec
les
add
into
jbe
arpl
adc
xor
jecxz
hlt
lahf
push
xchg
sub
sub
je
add
pop
dec
sarl
pop
mov
jmp
sub
or
dec
out
push
xor
mov
ja
sub
sbb
movsl
xor
jge
mov
add
iret
mov
clc
xchg
int3
push
add
sbb
add
add
pop
cmp
movsl
push
mov
je
or
add
add
add
xor
les
pop
cmpsb
ss
outsb
add
jge
hlt
mov
sbb
into
fidivrs
xor
add
add
xor
push
in
sbb
or
add
push
mov
sub
or
add
cmp
mov
mov
push
in
daa
in
test
add
jmp
int
add
cs
in
movsl
mov
add
mov
sbb
cmpsb
jmp
inc
in
add
mov
daa
mov
inc
aaa
add
es
mov
add
lahf
dec
in
cmpsb
jbe
sahf
inc
or
inc
add
dec
or
add
cli
mov
inc
dec
mov
dec
sti
add
dec
lds
or
daa
cmp
insb
aam
dec
push
in
into
adc
add
xor
add
cwtl
push
dec
or
fsubs
adc
insl
dec
mov
sub
sbb
lds
sbb
mov
lea
cmp
add
xchg
cmp
into
mov
cld
push
or
movsl
sub
enter
pop
pop
add
add
shrb
add
dec
add
sbb
xorb
insb
add
daa
sbbb
add
aam
enter
dec
sbb
sbb
add
mov
ds
cmpsb
insb
mov
sbb
sbb
pop
xchg
mov
adc
iret
fprem
mov
jo
add
int3
or
add
repnz
dec
outsl
or
xor
rorb
pop
jle
dec
add
iret
mov
push
xor
nop
int
mov
mov
lds
inc
mov
inc
pop
sub
pop
f2xm1
data16
sarb
add
cwtl
aaa
mov
or
add
push
or
pusha
lea
bound
inc
add
add
mov
test
and
add
insb
dec
xlat
mov
mov
add
sub
push
insl
push
mov
jne,pn
fmull
add
int
dec
or
add
jae
fs
inc
inc
cmpsb
and
add
loope
mov
imul
pop
dec
sti
nop
pop
pop
jge
hlt
sub
mov
jl
mov
int3
testl
add
and
pop
jnp
inc
test
add
mov
sub
cmpb
imul
into
in
mov
pop
dec
and
nop
lds
pop
sbb
xor
push
pop
sar
add
cmp
mov
adc
push
imul
add
mov
or
cli
mov
mov
imul
mov
testl
jno
cmpsb
pushw
ss
repz
and
out
dec
fwait
push
lods
sub
cwtl
pop
inc
xchg
add
mov
imul
jp
jae
icebp
inc
iret
pop
clc
stc
jns
stos
push
push
inc
outsb
mov
lcall
int
ljmp
inc
cmp
lock
insb
adc
test
adc
mov
dec
sbb
jno
in
add
mov
add
lods
mov
icebp
add
xchg
push
cmp
dec
adc
mov
push
or
jo
enter
gs
ret
add
sarb
data16
mov
xchg
mov
add
mov
shr
add
stc
add
arpl
inc
aam
mov
xchg
jbe
out
push
in
dec
xchg
sub
mov
sbb
xchg
dec
inc
fsubrs
lret
sbb
adc
sbb
push
mov
lret
mov
mov
movsl
mov
imul
xor
loope
mov
std
add
stos
ja
shrl
jbe
and
pop
dec
insl
or
dec
mov
push
add
jbe
mov
lahf
ds
adc
and
sub
jl
add
or
jns
adc
call
add
cmc
adc
pop
jo
pop
pop
xlat
mov
mov
add
cmc
jbe
in
dec
mov
mov
adc
add
fwait
lds
mov
jb
add
into
movsl
xchg
hlt
cmp
mov
dec
jmp
loope
daa
xchg
pop
pop
scas
add
sbb
jmp
add
pop
mov
add
out
nop
int
into
aad
cmp
jnp
dec
add
mov
ret
lea
sub
int
add
add
mov
cmp
mov
xchg
adcl
push
movsl
sub
dec
fiadds
add
rcl
adc
inc
in
sbb
stos
mov
cmc
cmp
out
pop
dec
pop
add
lds
add
pop
dec
cli
push
sbb
ss
outsb
mov
dec
mov
inc
js
inc
add
test
or
add
mov
in
shlb
mov
repnz
or
jecxz
push
inc
ret
sub
pop
add
pop
push
in
sbb
lret
je
mov
fstl
in
rolb
shr
add
mov
loope
or
aaa
push
jb
sbb
push
mov
cmp
mov
adc
aam
repnz
enter
mov
nop
loopne
pop
daa
je
and
pop
iret
dec
adc
into
inc
mov
mov
xchg
mov
pop
sub
dec
fnstenv
mov
or
mov
popf
push
repz
inc
sub
cmpsb
out
iret
dec
mov
sarb
gs
and
sbb
jo
movsl
add
cmpl
or
add
add
cmp
dec
mov
outsl
push
or
mov
gs
mov
add
add
mov
int
sbb
outsl
push
or
pop
pop
inc
cmp
jb
add
les
int3
movsl
add
pop
nop
aaa
sub
xchg
add
or
add
mov
pop
pop
or
jae
jne
cmp
add
push
in
sbb
fwait
push
pop
dec
mov
cmp
jbe
addb
add
sbb
push
inc
and
and
jg
daa
gs
add
jge
daa
mov
dec
jbe
fs
push
or
scas
cltd
aas
dec
inc
or
movsl
pop
fxch
outsl
add
mov
xchg
inc
dec
fistl
stc
adc
cmp
cmc
or
pop
aad
loopne
add
add
aam
pop
fcmovne
add
mov
xlat
mov
dec
aaa
add
stos
xor
sub
adc
je
scas
xor
imul
jb
insl
fstpt
and
int
xchg
aad
cmp
mov
dec
lock
or
add
mov
pop
xchg
in
cmp
add
jecxz
stos
lds
sbb
lds
adc
push
in
sbb
mov
lea
dec
sbb
mov
add
mov
and
push
pop
mov
inc
cmp
push
flds
add
jl
into
pop
and
sub
and
add
cmp
dec
mov
xor
sti
dec
xchg
dec
sbb
dec
out
movsb
jns
xchg
jbe
mov
push
in
dec
cmp
cld
jno
daa
cmp
jo
push
mov
inc
int
enter
or
add
gs
pop
pop
dec
jle
add
and
or
and
popf
or
jae
mov
inc
leave
inc
push
ljmp
cmp
add
fldl
add
add
jo
pop
adc
mov
sub
sahf
pop
hlt
sub
test
jbe
add
loopne
xor
adc
popa
cli
leave
lahf
mov
dec
adc
cmp
pop
adc
sub
jp
jecxz
mov
and
aam
mov
aaa
cmc
sahf
mov
dec
sti
into
jbe
adc
push
cmpsb
sarb
and
add
mov
adc
lea
add
mov
cmp
xchg
jbe
icebp
shrb
fstpl
sub
inc
les
add
xchg
jbe
dec
das
and
fstl
repnz
add
or
dec
add
and
or
add
mov
adcb
aam
dec
and
adc
or
add
iret
lds
scas
mov
movsb
and
out
pop
mov
enter
mov
add
adc
inc
stc
les
fucomi
iret
push
int
mov
in
mov
lret
inc
fsts
add
insl
lods
sub
push
popa
mov
iret
jbe
arpl
in
enter
popa
inc
cwtl
dec
ja
in
inc
imulb
outsl
add
aaa
sbb
lods
add
dec
pop
sbb
or
or
add
movsw
inc
aad
add
into
mov
jmp
inc
test
ss
adc
inc
sbb
scas
add
mov
loop
inc
aas
push
in
sbb
int
pop
sbb
pop
sub
sbb
xchg
add
jmp
in
inc
xchg
sbb
add
dec
adc
loope
dec
mov
loope
mov
sbbb
pusha
add
lds
mov
dec
push
aad
jp
in
insb
clc
sbb
or
add
pop
arpl
sbb
jge
or
add
jle
cmp
jb
jmp
sbb
loope
dec
ret
pop
mov
shl
add
add
arpl
mov
addr16
add
gs
stos
pop
or
add
sbb
fwait
add
lods
in
arpl
outsb
pop
xor
add
addl
add
test
pop
and
int
inc
and
add
and
sti
pop
sub
bound
pop
mov
popa
add
pushf
jns
or
fwait
adc
push
cmpl
or
add
imul
dec
jg
add
dec
or
or
into
hlt
inc
dec
jecxz
test
testl
jnp
jp
dec
inc
rol
mov
add
mov
jb
negl
aas
into
testl
pop
adc
pop
fistpl
jbe
pop
test
xchg
sbb
je
mov
xchg
add
and
lods
mov
add
xchg
inc
idivl
and
jge
xchg
les
rclb
add
test
mov
add
mov
and
adc
sbb
test
add
mov
push
pop
andb
add
sbb
sti
add
lea
inc
in
sbb
or
sbb
push
mov
fsubrs
add
cmpl
add
add
repnz
jecxz
inc
setbe
daa
jge
inc
mov
rolb
mov
add
add
mov
xlat
mov
add
dec
ret
xor
pop
inc
jmp
jae
shl
add
aam
sbb
inc
jge
dec
sbb
cmp
xlat
sbb
ljmp
adc
ljmp
aad
iret
cmp
adc
andb
jle
mov
mov
mov
push
dec
cmp
iret
add
popa
sbb
leave
cltd
pusha
shll
add
popf
imul
stos
add
mov
sbb
mov
jp
adcl
rolb
lret
push
test
dec
add
pushl
mov
dec
popf
or
mov
add
add
and
imul
sbb
add
xorb
fcmovnbe
fdivrs
jle
mov
push
clc
mov
sub
mov
lea
movl
push
call
cmp
jne
push
call
test
jne
push
call
test
je
lea
mov
addl
mov
push
call
mov
leave
ret
lcall
push
in
shrb
add
sbb
sub
adc
xchg
push
imul
jp
jo
mov
sarb
loopne
in
add
stos
iret
cmp
xor
jle
orl
sbb
sub
add
aad
inc
adc
mov
js
mov
push
push
or
jno
out
sldt
testb
pop
add
test
add
sub
ja
testb
push
insl
adc
mov
jne
pop
lods
mov
adc
add
data16
jmp
hlt
add
pop
mov
mov
mov
jg
add
adc
add
add
adc
xchg
inc
xchg
daa
iret
jbe
fldl
add
or
mov
sbb
add
push
in
scas
push
jge
push
jbe
out
xor
push
xchg
jbe
rorb
in
cmp
add
and
movsl
push
arpl
mov
les
push
ss
mov
add
jecxz
pop
add
inc
pop
loopne
lahf
mov
add
pop
movb
push
inc
into
stc
les
add
icebp
xchg
lahf
int
icebp
add
mov
icebp
sahf
pop
scas
into
and
ds
jp
mov
aam
or
add
cmc
jno
jp
push
cltd
daa
cmp
adc
push
out
push
lods
mov
repz
mov
push
notb
sbb
add
popa
mov
in
push
or
hlt
paddsb
or
subl
sbb
jb
sub
mov
in
lods
dec
pop
shrb
rcr
jae
repz
pusha
dec
xchg
fists
fistpll
pop
xorl
add
xor
mov
pop
cli
fwait
cmp
lcall
sbb
mov
fildll
pop
into
ret
xor
dec
filds
add
cmp
iret
movsb
inc
popa
test
add
mov
dec
mov
shl
hlt
mov
mov
mov
nop
adc
or
mov
inc
into
add
in
rcr
add
leave
insb
adc
pushf
add
cmp
mov
jg
sbb
xor
add
mov
dec
in
cmp
cmp
add
push
push
mov
sub
add
dec
push
mov
cmp
jns
dec
mov
insb
add
push
pop
dec
sub
fimull
add
fdivs
pusha
mov
pop
cmp
in
mov
test
ds
add
adc
push
dec
repz
popf
popa
call
dec
dec
sbb
ss
sbb
dec
push
mov
jbe
add
loop
add
fisubl
nop
add
int
daa
mov
outsb
adc
fwait
aad
leave
adc
add
and
add
in
dec
repnz
cld
dec
cld
jb
rorb
mov
add
cmp
int3
outsb
add
cli
cmp
xor
jle
and
mov
add
xor
mov
dec
sub
jne
aam
hlt
cltd
dec
adc
add
into
adc
hlt
mov
mov
dec
daa
rcr
sbb
xchg
add
or
ds
iret
add
add
iret
jle
push
push
imul
mov
mov
mov
sub
add
add
mov
cmp
pop
xchg
movsl
xchg
pop
push
add
mov
add
xchg
or
dec
xchg
int3
roll
add
movsl
cmovl
add
in
dec
test
pop
aas
cmpsl
inc
push
add
pop
sub
push
mov
xchg
pop
mov
dec
stos
add
test
add
movsb
sbb
insb
pop
in
dec
add
repz
dec
cli
aaa
loope
dec
add
cmpsl
in
push
inc
dec
push
add
mov
add
stos
add
xchg
or
cmp
mov
mov
mov
stos
push
jb
inc
mov
add
jbe
dec
pop
add
nop
cmc
push
push
jb
lret
dec
repz
ds
or
pop
cmpsb
jg
sbb
adc
imull
arpl
or
scas
popa
pop
cmp
xchg
cmp
adc
aaa
dec
push
int3
xor
add
movsl
xlat
inc
addl
in
dec
mov
daa
sbb
inc
insb
sub
sbb
fists
push
cmp
dec
int3
inc
add
add
sbb
pop
inc
mov
xor
into
xchg
int3
jae
add
pop
or
mov
push
adc
push
in
mov
fmuls
add
sti
into
jbe
inc
push
mov
lea
cmp
lds
mov
add
xor
lods
jl
mov
int
lods
int3
insb
add
sahf
dec
inc
push
pop
pop
inc
rclb
movsl
icebp
pop
jle
stos
dec
movsb
dec
mov
inc
rcrl
dec
mov
jl
aas
dec
cmpsl
mov
jle
add
sbb
jge,pt
inc
pop
add
push
icebp
popf
cmovne
mov
add
ds
add
int
dec
les
add
jo
jle
mov
inc
add
pop
dec
sbb
add
xor
int3
add
jl
adc
jo
lds
mov
add
xor
jnp
je
pushf
pop
xorb
add
xchg
mov
movb
mov
fsts
cmp
mov
test
or
or
dec
test
adc
and
sub
daa
dec
cmp
aaa
add
hlt
and
sbb
repz
adc
cmp
nop
push
adc
loopne
jge
lock
dec
sbbl
inc
imul
in
dec
mov
mov
in
sbb
arpl
iret
repz
add
add
jle
or
add
cmc
sti
xchg
push
enter
push
int
cmc
or
adc
testl
xchg
outsl
outsb
cmpl
dec
lret
fimull
add
push
dec
in
jno
inc
xchg
je
jno
add
and
push
sbb
mov
lock
inc
clc
cmp
add
pop
push
xchg
loope
popa
cmp
lret
decl
int
cltd
and
sarb
int
xchg
add
cltd
xchg
add
insl
xor
sub
arpl
xchg
stc
pop
pop
adc
push
data16
nop
sbb
ret
fsts
cmpsl
jle
mov
jb
sbb
fdivr
pop
or
pop
pop
xor
inc
push
mov
add
and
inc
add
mov
and
pop
xor
ja
push
movsl
outsl
dec
filds
add
dec
sub
popa
sbb
lcall
pop
fadd
xchg
jbe
jg
into
es
fsubs
testl
or
adc
adc
push
outsl
daa
shll
into
daa
cmpsb
mov
cmp
cmc
les
mov
add
dec
cmp
sbb
pop
or
dec
lods
jb
dec
sbb
ljmp
movsb
movsb
pop
or
mov
dec
outsb
sti
pop
cli
and
pusha
add
jae
push
iret
adc
dec
mov
cmp
je
rclb
inc
loope
cmp
xor
clc
pop
or
add
pusha
mull
mov
addr16
or
lcall
add
loopne
xor
add
es
ja
clc
add
je
add
lcall
add
mov
and
arpl
add
add
jno
sub
dec
lahf
add
inc
inc
ja
inc
dec
inc
data16
lret
daa
xor
incl
sbb
nop
adc
ja
add
fcoms
xchg
add
sbb
iret
lcall
and
popf
push
or
in
xchg
popa
sbb
add
add
test
int3
xor
pop
arpl
and
add
or
add
rcrb
leave
or
push
imul
dec
jbe
add
inc
add
mov
dec
mov
push
std
cmp
add
jb
pop
add
add
mov
cwtl
push
push
lea
lods
mov
mov
sbb
mov
sub
pusha
test
add
xchg
xchg
iret
xorl
xor
push
mov
je
inc
pop
adc
adc
adc
data16
or
sbb
int3
popl
add
cmp
mov
repnz
aas
mov
lret
into
mov
scas
add
mov
pop
inc
inc
rorl
lea
aad
mov
gs
mov
inc
add
xlat
or
add
jl
and
test
dec
dec
sbb
into
cmp
es
cmp
int
push
jmp
dec
push
ljmp
addr16
fbld
mov
fdivs
inc
add
sub
add
and
jnp
incb
add
aad
aas
inc
adc
jbe
dec
pop
xor
or
add
in
enter
dec
iret
xor
es
push
mov
insl
push
or
popf
dec
shrb
add
or
add
daa
shrl
in
mov
sub
add
or
add
outsl
shll
and
ds
mov
in
dec
icebp
xor
int3
mov
or
or
add
aaa
push
dec
pop
mov
enter
lods
imul
and
sub
cmp
ret
ret
movsl
or
into
mov
mov
dec
jae
add
cmp
enter
and
popa
and
inc
push
or
add
cmp
enter
ret
movsl
pusha
pop
add
mov
stc
dec
filds
add
enter
xchg
jg
out
pop
pop
pop
and
add
iret
repz
lret
sti
fldl2t
mov
sub
cmp
repz
and
lods
fwait
mov
mov
cmp
add
in
movsl
popf
mov
lock
push
stc
add
dec
dec
fmul
outsb
sahf
pop
jo
icebp
mov
cmpsb
push
inc
leave
scas
jmp
ds
pop
pop
nop
imul
mov
daa
or
add
sub
mov
adc
add
in
push
and
pushf
fmuls
das
flds
mov
insb
add
sub
adc
add
into
enter
je
cltd
inc
sti
add
sbb
sub
insb
mov
jbe
sbb
xor
sub
mov
test
add
hlt
lretw
mulb
xchg
int3
add
lea
insl
mov
dec
or
dec
lea
in
xor
mov
inc
or
inc
sub
dec
jbe
push
or
ljmp
add
and
add
testb
repz
adc
cli
mov
xchg
loope
pop
add
jecxz
jecxz
push
dec
mov
enter
mov
cmpl
or
sbb
sub
pop
add
dec
add
lods
ja
in
in
lods
pop
rclb
add
push
mov
cmpsl
push
inc
int
xor
fiadds
push
mov
xchg
or
mov
sbb
or
dec
icebp
add
pop
dec
test
add
in
mov
shlb
loop
xor
or
add
sub
dec
in
add
ljmp
in
push
inc
cmp
push
cwtl
cli
int3
dec
add
inc
mulb
add
pop
inc
flds
push
nop
int3
popf
add
mov
xchg
inc
inc
imul
notl
out
data16
int
mov
xchg
cmp
test
add
mov
daa
sub
push
push
mov
inc
adc
add
jle
adc
sbb
test
adc
movl
dec
xchg
ret
sbbb
movsl
sbb
ret
and
xor
dec
leave
andb
add
inc
mov
add
inc
dec
mov
cmc
or
cld
xorps
fldln2
adc
int
cmpb
dec
js
push
add
push
sub
jbe
add
add
add
dec
pop
or
adc
lods
sbb
dec
sub
inc
shl
xchg
mov
int
icebp
cltd
dec
jnp
add
std
pop
aad
enter
cmpsl
sub
daa
and
mov
pop
xor
test
add
jg
mov
jmp
daa
add
jbe
mov
shlb
in
pop
dec
dec
pop
mov
inc
fbstp
pop
shlb
and
int3
dec
add
cmp
or
dec
testb
nop
subb
gs
jge
fwait
add
mov
pushf
push
dec
jnp
push
add
test
add
into
add
or
mov
add
pop
dec
int3
roll
add
inc
shrl
pusha
and
test
jae
imul
inc
test
inc
fsubrs
movsb
leave
mov
cmp
dec
or
add
jbe
mov
add
jbe
add
mov
inc
pop
das
push
mov
add
add
dec
sub
mov
pop
dec
addb
add
mov
lret
pop
sbb
dec
or
lock
jbe
add
pop
sbb
int
mov
push
xor
cmp
cmp
loopne
add
xchg
sub
mov
mov
sbb
xor
add
jnp
in
xor
push
int3
push
add
dec
pop
sub
cld
dec
pop
push
in
mov
sbb
in
push
lret
test
xor
xchg
xor
jecxz
outsl
push
xor
aaa
dec
icebp
les
add
into
loope
popa
sbb
inc
mov
add
push
jb
xchg
add
inc
movsb
or
sub
cmp
sbb
add
cld
pushf
mov
into
add
mov
inc
in
cs
dec
dec
cmp
les
add
mov
sbb
adc
lcall
add
adc
mov
mov
jmp
add
testl
mov
sbb
add
loop
pop
dec
and
jbe
lret
inc
hlt
push
in
les
dec
inc
popa
xor
bound
dec
add
dec
add
dec
sbb
add
adc
sbb
or
add
fnstenv
xchg
add
cmp
jbe
and
push
pop
decl
pop
sub
dec
mov
les
add
pop
ja
ret
cmp
and
mov
xchg
push
or
xchg
cmp
sub
cmc
add
mov
push
sahf
xchg
aas
dec
jmp
dec
xchg
insb
sbb
xor
les
add
test
add
jb
fcmovb
jnp
aaa
pop
fs
xor
movb
inc
fisttps
scas
push
or
add
adc
add
add
mov
inc
add
sub
dec
popa
pop
dec
dec
add
mov
add
add
cmp
xor
outsb
mov
lret
sub
sbb
push
jnp
jns
push
in
leave
inc
jbe
loope
mov
mov
push
inc
sti
lea
shll
dec
jmp
xorb
sbb
in
les
fcmovu
cld
mov
add
out
add
les
enter
or
add
in
int
pop
gs
add
add
sub
icebp
inc
pop
add
dec
call
add
push
or
xchg
int3
int
add
movsl
xlat
iret
pop
into
cmp
daa
dec
dec
add
adc
sbb
or
sbb
push
or
add
jge
jle
jp
inc
cltd
sbb
inc
push
xor
xlat
fbld
scas
mov
in
sub
sbb
sub
add
mov
stc
movl
aas
inc
rolb
add
push
rcl
add
int3
and
xor
jbe
out
sbb
iret
cmp
pop
lcall
add
push
or
add
insb
inc
outsl
adc
mov
inc
imul
dec
imul
inc
dec
sbb
les
add
or
add
sbb
and
mov
int
in
dec
xor
dec
dec
into
add
sbb
ds
add
inc
jne
sbb
sbb
mov
ret
mov
pop
push
fs
popf
pop
movsl
or
add
test
add
adc
jbe
dec
outsl
push
cmp
clc
cmp
mov
fimull
jle
add
xchg
pop
add
adc
nop
gs
xor
add
js
sub
leave
push
test
adc
ret
sub
adc
add
adc
xor
mov
cmp
sub
mov
cmp
add
cmp
nop
and
inc
dec
aad
jle
adc
pop
jns
or
ret
jecxz
cmp
add
cmp
or
pusha
xor
popl
add
mov
enter
fcomps
or
or
loope
push
add
lock
inc
pop
add
adc
jp
push
push
iret
mov
xor
ret
and
movsb
out
stos
pop
mov
in
jns
adc
sbb
xchg
inc
mov
call
add
push
aam
and
daa
and
or
pop
fstpt
pop
add
jnp
cmp
xlat
and
dec
add
mov
or
fstpt
or
add
inc
add
add
add
sbbl
mov
popf
or
cwtl
loope
mov
add
insb
cmp
add
lds
aas
mov
mov
jns
mov
mov
mov
hlt
add
cmpsb
inc
inc
add
cmp
lret
sub
mov
add
mov
mov
add
push
lahf
add
lds
jne
lahf
push
les
movsl
adc
inc
flds
add
push
mov
add
je
jmp
push
mov
xchg
and
aad
adc
loope
lds
add
push
inc
jno
add
dec
push
or
mov
mov
dec
outsb
jb
xchg
sbb
lea
add
mov
lds
jge
add
mov
cmc
int
scas
xlat
mov
dec
cmp
into
cmp
pop
mov
insb
add
mov
cli
rcl
movsl
cs
movl
xor
mov
ds
or
dec
xor
pop
inc
xlat
nop
shll
es
sub
add
cmc
sar
mov
mov
add
xor
add
jmp
jl
jne
add
add
dec
xor
fwait
mov
dec
shlb
add
sbb
dec
imul
push
hlt
pop
mov
aaa
pop
mov
rolb
add
xor
jle
inc
pop
pop
jnp
fimull
or
pop
add
loop
jmp
or
add
sbb
aas
sub
dec
push
cmp
mov
adc
pushf
jne
sbb
lds
add
add
test
inc
repz
ljmp
sub
add
pop
inc
outsl
push
xchg
repz
pushf
js
mov
add
sbb
popf
cmpsb
movq
pop
fcmovnb
ficomps
fnstcw
sbb
sbb
lahf
or
sbb
movsb
and
inc
add
rorb
jp
add
pop
orb
jg
insl
cmp
in
push
arpl
xchg
jbe
inc
cmp
inc
sub
rolb
add
mov
jne
mov
sbb
fcoml
dec
jns
nop
dec
mov
jo
lea
dec
stc
ljmp
add
or
addl
imul
dec
cmp
push
jno
inc
xlat
cmpsb
cmp
push
movsl
xor
int
pop
ljmp
dec
add
decl
mov
jnp
into
and
adc
popa
inc
sbb
mov
add
inc
add
add
mov
push
aaa
add
or
cmp
pop
lret
dec
sbb
dec
dec
dec
add
loop,pt
aad
sbb
cmp
mov
jle
dec
sbb
aad
sbb
push
seto
in
enter
sahf
shlb
dec
arpl
cmp
lods
js
ret
lea
mov
dec
pop
mov
pop
dec
dec
das
adc
mov
mov
add
lret
pop
fmul
daa
add
cwtl
in
pop
movsb
and
sub
add
fadd
push
add
fldenv
dec
push
scas
fdivl
cmpsl
add
pop
sub
test
sub
push
pop
outsl
mov
mov
add
mov
lcall
ret
repnz
ficoml
mov
push
int
sbb
mov
mov
in
xchg
or
filds
jle
jno
inc
mov
or
sldt
push
dec
xchg
add
popf
xchg
jno
pop
adc
sbb
or
add
mov
pop
cmc
xor
rolb
or
inc
dec
es
jbe
push
iret
daa
aad
mov
jb
fistpl
add
add
add
or
xor
adc
sbb
iret
dec
mov
or
dec
rclb
clc
aas
push
dec
dec
in
les
mov
cmpl
add
push
js
inc
cwtl
add
xchg
imul
mov
pop
add
inc
inc
cs
xor
enter
jge
movsl
add
cwtl
sarb
dec
inc
add
in
daa
dec
ret
hlt
add
in
mov
pop
mov
push
fistpl
test
xchg
add
xchg
mov
pop
jp
or
add
inc
cmc
enter
dec
adc
add
fdivs
jmp
push
mov
inc
enter
test
add
push
mov
sub
push
mov
pushf
push
jle
mov
or
add
sarb
add
data16
jge
sub
and
mov
shrb
mov
test
les
mov
sbb
jbe
pusha
adc
sbb
push
add
lcall
push
add
add
mov
cmpsb
jbe
sbb
loop
push
fsts
jb
aad
xchg
sbb
es
sub
in
jle
adc
add
mov
jb
fiaddl
add
rorl
sbb
dec
in
les
add
lods
std
or
add
insl
int
sub
xor
dec
add
sbb
xor
movsb
add
ds
mov
or
add
cmp
xor
cmp
add
int
sbb
cmpsb
cmp
je
add
hlt
dec
shlb
push
in
das
adc
push
nop
cmp
lret
or
sub
movzwl
cmpsl
mov
movsl
or
fs
and
mov
lods
sbb
or
leave
testl
adc
cmp
sbb
add
aam
lret
sbb
shr
lea
push
inc
mov
mov
aaa
inc
cmp
dec
sbb
lods
push
or
inc
inc
mov
add
fnstenv
fwait
xchg
mov
outsb
aam
sbb
cmp
inc
mov
and
les
add
std
push
sbb
lret
lock
int3
sbb
add
rorl
outsl
movsl
jae
xchg
push
les
add
mov
aam
dec
nop
dec
data16
movb
add
push
mov
jb
xchg
mov
fimull
inc
mov
inc
lcall
cmp
add
leave
int3
push
add
cmp
cltd
ficoml
insl
inc
in
enter
daa
movsl
sub
cmp
xor
aad
daa
lret
mul
leave
and
cmp
and
or
add
in
ret
jne
jb
iret
mov
xchg
lret
lds
jl
add
add
movsl
dec
add
mov
ret
int
add
add
inc
mov
aas
mov
and
xchg
sar
pop
xlat
jmp
add
xor
fimuls
es
test
add
mov
mov
add
xchg
std
cmpb
inc
movsb
insb
xchg
mov
pop
inc
sbbb
ljmp
lret
and
dec
ljmp
icebp
fabs
or
add
jle
nop
xchg
push
pop
pushf
push
xor
imul
xor
xor
cmp
test
mov
mov
add
cmp
cmp
add
dec
pop
mov
xor
xchg
lret
push
pop
mov
jg
add
jb
daa
cmp
pop
and
or
jge
cwtl
add
pop
imul
fmuls
imul
or
mov
nop
dec
add
mov
add
or
insl
sub
add
push
data16
xor
dec
mov
inc
dec
sub
addr16
add
rcrb
fstps
enter
test
add
lock
jbe
mov
cltd
add
mov
cli
add
fldt
mov
adc
or
enter
gs
stos
push
or
add
cmp
xchg
and
daa
fwait
dec
sbb
xchg
xchg
decb
int
mov
dec
mov
cmp
xor
sbb
mov
aam
or
lret
mov
cmp
cmp
rcr
sti
lcall
xor
loop
inc
add
cmpsb
inc
insl
adc
int3
mov
cmp
mov
sub
mov
lahf
addb
pop
push
nop
inc
dec
mov
add
adc
add
inc
notb
jp
pop
adc
xchg
jmp
push
icebp
add
lcall
ret
sbb
dec
dec
je
sbb
test
into
dec
add
movsb
dec
xlat
push
iret
pop
cmp
lock
jnp,pn
sub
mov
dec
daa
pusha
sub
add
stc
out
sub
add
add
pop
out
adc
aaa
pusha
or
add
lret
lods
sahf
lds
mov
inc
add
push
push
add
add
lret
add
outsl
cmp
cmp
push
mov
sub
add
add
mulb
insl
cmpsb
dec
loope
lret
mov
mov
rolb
dec
into
and
xabort
cmp
or
add
xchg
insl
dec
xchg
int
and
incb
add
dec
jae
mov
mov
cmove
add
jae
add
jp
mov
or
add
aad
subb
mov
add
fiaddl
add
lcall
addl
fcomps
daa
fdivrs
test
or
mov
lea
add
push
cmp
mov
rorl
add
movsb
add
add
mov
cmp
add
insl
adc
push
ss
test
mov
dec
and
testb
add
xor
pop
adc
or
add
lea
dec
cmpsb
mov
add
push
shlb
mov
xor
adc
xor
sbb
inc
push
dec
mov
and
push
cmc
inc
adc
out
jo
dec
loop
add
dec
jo,pn
movsl
adc
cmp
dec
cmp
jne
addl
pop
inc
addb
dec
bnd
lcall
out
adc
shlb
inc
mov
add
sub
push
add
push
mov
sti
sub
jl
ss
aad
int3
ret
add
cmp
dec
and
cmp
addr16
cmp
lret
aas
dec
add
add
addr16
dec
xchg
pusha
test
jnp
sub
mov
jne
lds
icebp
addb
movsb
add
movsb
stos
dec
addl
add
xchg
add
lods
mov
dec
outsb
gs
mov
movsl
add
add
and
pop
mov
hlt
mov
add
push
add
pop
fcmovne
pop
add
inc
pop
pop
cmc
cmp
in
add
scas
aas
or
add
mov
mulb
cmp
cmpsb
xchg
sbb
add
movsl
dec
movsl
test
test
lods
rorb
sarb
imul
mov
add
cwtl
and
push
or
jle
xor
lahf
jne
cmpsb
jb
cs
sar
add
mov
add
jg
lds
add
inc
sbb
stc
adc
mov
jo
mov
in
scas
movsb
bound
lcall
movsl
or
add
pop
cmp
mov
iret
cmp
jl
jmp
pop
inc
pop
sahf
jbe
rorb
add
out
add
push
popa
cmpsb
xor
add
and
lock
add
dec
in
add
push
cltd
aaa
mov
mov
add
dec
call
sub
add
mov
pop
pop
or
cmc
pop
cmp
cmpsb
jns
cmc
mov
add
movsl
xor
mov
jb
test
push
and
xlat
aaa
dec
xor
repz
xor
or
xchg
movsb
adcl
pop
add
nop
and
add
adc
rol
jbe
mov
sub
orl
add
inc
in
jo
sub
test
xchg
push
sbb
cltd
adcl
pop
pop
sub
push
push
dec
jle
xor
add
mov
les
aam
imul
and
cmc
or
ds
je
dec
pop
sub
iret
decl
adc
mov
test
mov
iret
int
inc
aas
imul
outsl
ret
ja
mov
xor
outsb
add
mov
mov
mov
loope
paddusw
into
mov
shll
jp
inc
loope
dec
sub
add
hlt
xchg
dec
into
call
add
xchg
xor
or
dec
add
in
dec
in
jbe
jno
cmc
or
sbb
add
push
pop
pop
xchg
dec
mov
enter
pop
aam
into
dec
inc
in
cmp
pop
loopne
int3
or
add
push
pop
pop
inc
movsl
dec
pop
add
int
sti
jle
and
add
and
movsl
or
fnstenv
push
rclb
dec
popa
add
data16
mov
fistl
add
mov
pushf
xchg
pop
flds
sbb
arpl
add
or
add
and
jno
add
xor
xchg
jge
fcmovnbe
mov
pop
in
fs
loop
push
fistl
dec
cmp
pop
and
xor
and
dec
pop
pop
mov
pop
dec
xor
push
mov
into
outsb
push
pop
inc
xor
sub
mov
add
sbb
cld
jns
and
sub
or
shlb
and
in
jo
and
aad
int3
inc
add
pop
jno
sub
or
add
inc
add
mov
pop
cmp
mov
add
push
cmp
enter
mov
xor
int3
pop
add
movsl
xor
iret
repz
jge
cmp
or
int
movsl
sub
add
inc
dec
or
inc
lds
add
dec
sub
outsl
pop
push
sti
repnz
lods
jge
data16
fisubrs
add
push
lods
call
mov
int
add
add
add
shld
aad
add
add
test
push
loope
pop
les
add
inc
lods
mov
negb
add
or
add
arpl
mov
daa
sbb
mov
idiv
gs
cmp
sub
sub
jbe
cmp
xor
mov
add
outsl
mov
dec
int
adc
add
mov
inc
inc
jnp
sub
mov
mov
dec
sbb
addr16
add
ds
mov
cmp
mov
cmpb
aas
sub
fcmovnu
cmpsl
mov
fistpl
jae
fcmovb
push
lret
lds
lds
lds
into
mov
dec
dec
ds
ja
jbe
xchg
sbb
dec
mov
rorl
insb
push
inc
cld
dec
out
in
dec
xchg
adc
add
mov
inc
pop
int
sti
xchg
test
dec
pop
add
enter
inc
pop
xor
pop
fidivs
jle
add
movsl
in
iret
mov
repnz
add
jbe
mov
enter
mov
and
sahf
mov
push
sub
popa
inc
pusha
add
mov
mov
cmp
adcb
add
ss
adc
add
add
inc
popa
add
push
xor
add
add
mov
fadd
hlt
lods
pusha
test
or
call
add
ljmp
inc
and
outsl
sbb
test
les
xor
imul
loope
mov
jecxz
movb
mov
xor
sub
repz
in
add
mov
sbb
dec
add
lods
inc
sub
inc
cmpsl
sub
mov
sbb
cld
das
cmp
inc
pop
lea
icebp
add
cmp
xlat
bound
inc
xor
data16
push
push
jae
dec
dec
fildl
add
inc
inc
fsubl
pop
mov
cmp
adc
fldl
add
or
add
sbb
mov
mov
cmc
mov
sub
or
add
fstl
imul
movsb
xchg
mov
add
test
push
xchg
in
add
leave
cmpsb
js
push
mov
xor
mov
add
adc
push
pop
in
or
scas
xor
inc
test
add
mov
movsb
cmp
lea
mov
aaa
dec
push
pop
or
pop
hlt
imul
add
test
add
cmp
test
pop
cmp
jo
pop
sub
xor
cmp
add
adc
jl
push
insb
pop
mov
sub
add
loope
aas
sub
pop
sub
inc
xchg
add
aad
mov
pop
dec
mov
cmp
sub
insb
fisubrl
jae
push
sub
xor
movsl
in
in
dec
dec
sbb
add
and
adc
add
push
and
lret
pop
and
pop
stos
fistpll
sub
ficompl
inc
in
sub
aas
inc
ret
push
xor
mov
pop
inc
dec
push
subb
ljmp
mov
and
mov
dec
xlat
mov
adc
mov
xchg
mov
push
inc
cld
add
clc
mov
pop
inc
sbb
sahf
addl
out
les
add
pop
sahf
movsb
or
add
xor
popf
sbb
movsl
mov
add
scas
or
add
pushf
push
sbb
xor
lea
jge
ljmp
pop
mov
xchg
push
push
pop
cmc
mov
sahf
lcall
fsubrl
jmp
add
icebp
xchg
xchg
jle
mov
add
inc
xor
lds
ret
mulb
jae
dec
sbb
test
pop
xor
aas
sub
push
or
add
cmp
movb
add
push
dec
test
add
dec
scas
add
cmp
outsl
mov
jo
int3
add
or
fucomi
and
sbb
add
in
daa
xchg
add
insb
mov
add
int
fsubl
js
add
add
insl
or
rorb
rclb
inc
add
add
sub
cmp
jae
dec
and
pop
mov
push
outsb
test
add
xlat
xor
push
lcall
scas
xchg
push
imul
cmp
jae
dec
adc
jge
mov
add
sub
add
mov
add
or
inc
and
add
loope
aad
add
add
add
arpl
int
xchg
into
lods
out
jg
mov
add
test
cmpb
mov
cwtl
into
lods
outsl
xchg
pop
data16
jle
loope
arpl
sbb
imul
dec
and
add
and
pop
pop
or
add
cmp
pop
mov
add
inc
push
ja
inc
fsubrp
gs
ds
lea
arpl
xor
add
adc
pop
sub
lret
addb
jl
inc
add
add
cmp
cld
push
or
sub
rcr
add
ss
mov
add
inc
in
mov
imul
pop
cs
add
js
push
cmp
jmp
rolb
and
sub
and
jne
mov
dec
or
add
adc
es
aas
or
gs
mov
add
lahf
inc
dec
cmpl
inc
addr16
pop
pushf
mov
dec
inc
add
insl
lcall
add
add
push
dec
sahf
push
sbb
cmp
sub
sbb
add
cmp
sahf
add
insl
xor
push
imul
xchg
rcr
add
add
dec
fists
test
add
push
jg
enter
jge
movb
rorl
imul
xchg
add
or
in
lret
and
lahf
sbb
cmp
pop
push
mov
pop
add
cwtl
cwtl
mov
addl
dec
or
mov
pusha
dec
pop
add
mov
dec
add
or
add
cld
cmp
add
adc
or
add
mov
xor
mov
add
fldl
add
add
add
xorb
addb
adc
nop
dec
or
add
dec
pop
add
mov
add
add
add
jle
push
dec
jl
sub
dec
imul
movsl
loope
add
adc
fnstenv
add
cmp
movsb
xchg
adc
int3
xor
add
mov
lock
jnp
out
movsl
aam
into
mov
ret
jg
fiadds
test
sbb
add
lahf
ret
xchg
and
movsl
push
int
ret
ret
mov
mov
mov
shlb
test
ret
sbb
mov
movsb
sbb
fidivl
sbb
mov
shl
test
add
mov
push
jb
loopne
push
mov
adc
outsb
fs
jb
add
dec
pop
loope
mov
out
add
jbe
push
jnp
mov
sbb
add
stos
dec
mov
lods
dec
daa
dec
push
inc
in
dec
push
lods
dec
dec
mov
call
dec
mov
mov
jno
pop
cs
insl
sbb
jecxz
add
pop
cmp
mov
inc
xor
movsl
aam
dec
addl
js
dec
push
cmp
sub
jl
mov
push
sub
add
test
xchg
cmp
inc
xchg
add
shll
add
nop
test
add
add
pushf
out
inc
sub
int
add
sub
imul
divps
and
dec
add
sub
sub
mov
into
lods
pop
jle
dec
mov
add
and
inc
cmp
movsb
inc
repz
cs
xor
inc
and
add
hlt
rorl
mov
cmpsb
and
dec
pop
sub
push
pusha
cmp
cmp
inc
nop
add
fwait
xchg
and
pop
adc
in
mov
movsb
cmp
push
jns
aam
inc
add
mov
inc
daa
add
in
dec
jno,pn
outsl
fs
out
add
in
pop
sub
jae
push
and
sub
sbb
inc
sub
sub
and
ficomps
rcl
pop
push
sbb
pop
es
dec
in
dec
in
sub
push
or
adc
inc
mov
cmp
js
adc
adc
lock
popa
and
subb
popa
fdivs
out
and
in
lea
dec
and
cs
dec
and
and
and
and
cmp
aas
fisttpll
adc
imul
xorb
fisttpll
stc
sahf
jo
into
es
xor
dec
mov
mov
in
and
sub
aas
mov
adc
enter
and
jle
sbb
push
xor
movsl
jecxz
in
dec
push
or
dec
imul
lods
push
mov
add
data16
int3
jo
add
pop
in
pop
rolb
add
sbb
nop
mov
and
mov
add
jge
push
inc
jp
add
mov
in
outsb
daa
fisubs
hlt
enter
popa
into
fld
xchg
rol
inc
jns
cmp
mov
push
cmpsl
mov
js
add
std
sbb
mov
popa
adc
mov
add
inc
inc
shlb
je
mov
dec
jl
add
in
movsl
jp
iret
mov
cs
add
mov
gs
xchg
mov
pushf
push
xor
pop
out
jne
push
cli
mov
and
pop
popf
pop
inc
pop
push
jne
inc
outsb
enter
stos
sahf
sarb
add
cs
xchg
lock
xlat
mov
dec
aad
loopne
fldenv
add
cmc
or
in
dec
rolb
jnp
mov
add
dec
xchg
aaa
xor
rol
jbe
xchg
push
push
lret
rol
xor
add
add
add
cmp
into
mov
xor
add
aad
add
cwtl
xchg
push
jnp
enter
inc
jmp
add
fimuls
cmp
jp
cmp
popa
inc
mov
aas
int
sbb
cmp
leave
dec
inc
js
mov
call
and
aaa
pop
jle
dec
imul
push
scas
fcmovnb
shrb
and
add
insl
jo
lret
or
add
xor
pop
push
cs
sub
fmulp
fcmovne
or
jbe
std
lret
sub
add
pop
jbe
movb
adc
mov
add
std
dec
ss
les
cmpsl
or
add
mov
ret
mov
ret
js
out
add
mov
rol
add
fistpll
insl
xchg
jno
push
inc
mov
jecxz
out
clc
add
sti
fnsave
or
add
add
push
rorl
mov
xor
add
mov
inc
mov
mov
add
push
lods
inc
les
add
xchg
mov
mov
push
js
in
int3
stos
add
pop
push
push
inc
dec
roll
inc
ljmp
mov
ljmp
inc
out
in
ja
jnp
add
cmp
push
lds
nop
dec
adc
add
mov
inc
dec
das
xchg
xor
pop
andb
mov
push
add
and
out
cld
add
push
pop
ret
jg
mov
push
push
mov
or
mov
rorb
popa
dec
jp
sbb
gs
rolb
add
sbb
add
movsb
mov
add
mov
icebp
cmp
test
and
add
add
fld
testl
rcrb
notl
daa
push
sub
movsl
add
mov
lods
fnstenv
iret
sbb
mov
mov
sub
add
push
push
mov
out
add
insb
fldt
add
jae
andb
push
lds
scas
cwtl
les
add
mov
cmp
dec
push
or
add
mov
into
xlat
in
sub
add
jp
add
add
int
and
adc
add
add
dec
mov
int
lret
into
lods
orl
shl
add
jg
mov
add
dec
popa
add
push
push
jp
dec
cmp
add
pop
and
je
mov
jge
aaa
das
insb
sub
inc
cmp
movl
or
dec
adc
insl
sbb
cmp
pop
mov
test
cmovge
dec
push
add
data16
jb
pop
lods
cmp
popaw
jg,pn
addr16
aam
imul
aam
dec
or
add
jl
outsb
pop
mov
mov
xchg
mov
xor
pusha
cmp
or
add
push
inc
push
mov
and
and
lcall
add
push
movsl
push
and
mov
sbb
dec
test
add
sbb
pop
arpl
mov
jg
jno
pop
movsl
fs
add
pop
jb
jg
cmp
add
out
fsubrl
pop
fsubrl
out
jns
xchg
or
or
add
add
add
dec
pop
mov
add
pop
jae
add
sbb
shlb
flds
jne
cmp
repz
inc
test
or
add
jb
mov
sbb
stos
inc
test
add
cmp
add
mov
inc
pop
add
mull
jg
dec
push
or
add
pop
mov
nop
ja
das
add
insb
or
dec
pop
pop
cmp
push
and
inc
sarb
add
inc
dec
mov
and
sub
add
dec
xchg
add
bound
mov
add
mov
or
lods
sub
jle
stos
pop
and
les
add
pop
add
mov
movd
dec
and
and
dec
push
cs
inc
addb
dec
call
add
sbb
mov
imul
add
add
dec
pop
jl
incb
add
add
dec
pop
rcrb
and
imul
mov
or
add
cmp
dec
xor
cld
sub
jmp
cmp
popf
jle
sbb
xor
and
fmuls
inc
jg
dec
or
add
add
jp,pt
in
and
dec
sub
dec
dec
icebp
stc
stos
dec
add
in
dec
dec
fcompl
add
and
int3
push
add
inc
jg
mov
add
dec
cmp
add
pop
movsb
jns
and
jle
pop
adc
push
sarl
mov
ret
xchg
xchg
dec
dec
pop
xor
cwtl
imul
and
xorl
fsubrs
orb
sahf
push
mov
data16
fiaddl
js
data16
lods
xorl
imul
fistl
push
add
cmp
push
mov
repnz
scas
inc
sub
inc
test
cmp
aad
loop
fiaddl
add
and
add
ja
dec
pop
pop
lds
add
add
cmc
and
loop
xchg
dec
adc
ja
test
add
ret
outsl
js
pop
add
mov
aas
add
add
mov
incl
or
jp
add
mov
subb
dec
ret
add
sub
test
ds
into
jp
std
add
cli
pop
and
fiadds
add
iret
mov
dec
mov
mov
pop
push
pop
jae
push
gs
jge
pop
add
mov
cmp
loop
add
lret
add
xor
xor
rolb
add
flds
add
andl
xchg
pushl
xchg
jmp
rcll
add
aaa
add
sbb
add
sbb
xchg
roll
push
add
or
shll
decl
add
sahf
into
pop
movsl
push
jl
dec
lret
add
jge
je
cmp
mov
add
lds
add
pusha
or
add
add
add
je
push
push
add
push
xchg
mov
mov
outsb
add
arpl
js
sbb
imul
jmp
sub
add
pop
lock
or
mov
loope
add
add
sub
add
ret
leave
dec
insl
cld
test
jno
mov
fadd
daa
inc
push
dec
xchg
add
mov
xchg
push
add
add
push
mov
add
aas
ret
add
add
lret
cmp
lds
inc
dec
int
out
mov
jl
add
or
in
dec
jge
loop
add
insl
enter
mov
or
cmp
lret
add
dec
shll
popa
jns
cmp
mov
fimull
add
push
mov
iret
dec
leave
add
std
cmp
add
rorb
adc
insb
dec
pop
add
adc
add
into
sbb
push
pop
xor
inc
out
dec
imul
insl
outsl
xchg
push
add
mov
sub
cmpsl
dec
mov
push
adc
xchg
loop
insl
add
inc
xor
mov
cmp
inc
xchg
in
add
mov
pop
test
mov
jp
dec
pop
add
imul
mov
jnp
rolb
add
add
jge
inc
in
add
scas
mov
add
popf
pop
je
dec
out
pop
mov
sarl
mov
push
test
add
cmp
adc
in
add
mov
lock
and
add
cmpsl
pop
fbstp
pop
add
test
ret
ss
roll
dec
xor
mov
mov
or
add
flds
ffree
jecxz
dec
xchg
add
push
add
js
mov
rorb
ret
fildl
add
sbb
movsl
imul
add
dec
inc
add
lret
imul
cmp
cmpsl
call
rolb
flds
add
sbb
add
jne,pt
call
test
mov
push
rolb
push
fildl
mov
jecxz
jae
into
mov
idivl
sbbb
rcrl
dec
mov
jbe
add
sbb
mov
pop
mov
jge
lds
sbb
mov
push
cmp
int
dec
movsb
inc
in
dec
std
xor
jg
dec
in
mov
or
cs
sbb
cmp
sbb
incb
add
add
sub
add
sbb
lods
jae
mov
add
xchg
bound
dec
xorl
inc
js
add
add
xor
add
add
adcl
add
mov
add
dec
mov
mov
js
mov
imul
add
mov
mov
daa
insb
mov
mov
lea
jle
cmp
inc
inc
inc
push
dec
bound
fldenv
movsl
icebp
mov
add
push
push
dec
mov
sarb
adc
sbb
add
add
pop
mov
int
cld
dec
and
add
dec
jo
insb
push
push
pop
cmp
mov
dec
movsb
mov
xor
jmp
lods
sub
add
mov
xchg
push
cmp
pusha
jmp
les
add
pusha
popa
movsl
add
add
in
ret
clc
sub
inc
in
jle
xchg
mov
dec
dec
or
add
aad
lds
mov
popf
outsl
dec
sub
hlt
sbb
lea
scas
dec
cmp
add
cmpsl
jmp
ror
ljmp
or
add
push
inc
mov
das
inc
fisttpl
add
sub
mov
inc
dec
es
sub
cmp
icebp
ss
pop
add
sub
add
add
shrd
jbe
lods
test
inc
aad
dec
stc
inc
xlat
dec
int
movsl
or
arpl
cmp
add
mov
add
gs
dec
mov
movsb
mov
add
inc
mov
cmp
mov
je
add
add
arpl
cmovg
mov
jnp
add
add
leave
repz
loope
xor
ret
jbe
push
scas
ja
lea
sbb
jmp
rclb
mov
add
mov
daa
int
xorb
ret
push
dec
shll
add
xor
cmp
push
dec
repnz
movsb
adc
insl
add
ss
lret
add
jp
sar
add
bound
add
mov
adc
xor
iret
jbe
imul
faddp
mov
mov
mov
push
pop
sbb
add
aam
dec
movsl
inc
add
add
imul
add
imul
dec
outsl
into
das
sbb
add
inc
mov
add
int
movsl
or
mov
sub
aas
dec
cltd
mov
cmpsb
jnp
and
aaa
scas
stos
or
add
push
add
aad
cmp
scas
mov
add
fnstcw
lods
mov
add
ja
cmp
add
jg
mov
pop
add
lods
mov
add
add
std
aas
mov
add
fld
in
pop
adc
lock
sub
xor
fs
dec
cld
pushl
fmuls
sbb
cmp
sub
enter
popa
sbb
iret
xor
mov
xor
mov
adc
add
pop
jge
dec
sub
add
aad
fmull
or
add
cmp
mov
add
xchg
inc
out
icebp
jno
fwait
adc
pop
sarl
insl
lea
push
pop
add
or
pop
xlat
jl
iret
add
cmpsb
inc
mov
lret
cmova
xchg
dec
push
les
add
dec
movsb
add
insb
sub
cmc
add
cmp
addr16
les
add
dec
mov
lahf
mov
add
ja
ljmp
xchg
jp
hlt
add
jne
ds
add
xorl
incb
lods
js
dec
scas
mov
mov
mov
mov
cmp
clc
add
add
mov
add
fdivs
mov
and
mov
mov
scas
dec
test
sub
push
scas
enter
aas
movsl
push
iret
mov
divl
pop
pop
cmp
pop
testl
stos
and
and
dec
sub
jns
les
adc
push
sub
nop
xor
loope
and
in
cmp
pop
dec
mov
add
add
dec
xchg
lret
in
das
dec
jnp
stos
cmp
shlb
add
add
and
outsl
mov
and
and
lods
mov
push
fldcw
adc
sbb
add
add
xor
es
sub
add
add
pop
mov
add
or
sub
dec
sub
add
mov
push
add
movsl
mov
sbb
cmp
pop
insl
or
add
insl
mov
and
mov
mov
rcr
lods
add
das
dec
out
mov
or
jl
sub
sub
dec
fldt
shll
in
and
mov
jge
dec
dec
dec
and
sub
movsl
sahf
add
ficompl
dec
pop
pop
in
fdivs
push
sarl
out
subl
xor
aas
in
bound
pop
lds
arpl
roll
add
sbb
and
jecxz
pop
lods
mov
into
mov
enter
jo
xchg
aas
xchg
pop
add
adc
dec
xlat
dec
mov
xor
dec
adc
add
add
gs
mov
add
pop
xor
fs
xor
into
push
push
and
xchg
dec
cmp
sub
inc
add
push
orb
aam
sbb
sahf
js
cwtl
jbe
pop
leave
movsb
js
sbb
pop
cmp
or
fs
flds
bound
xchg
pop
cmp
jg
adc
test
in
mov
mov
insl
add
lret
pop
dec
adc
and
add
sbb
dec
rclb
xchg
add
test
ljmp
int3
fldl
add
mov
pusha
and
bound
pop
pop
pop
cmp
rclb
mov
xchg
cmp
add
add
jb
mov
add
jo
mov
mov
mov
add
jnp
adc
insb
push
cmp
arpl
mov
jbe
pop
jb
and
sub
add
push
inc
pop
pop
sbb
mov
adc
ljmp
test
mov
sub
testb
roll
mov
sbb
adc
inc
fwait
add
or
add
fwait
inc
cli
add
enter
pop
andb
lods
test
or
add
and
gs
adc
mov
arpl
add
inc
mov
mov
sbb
xlat
insl
sub
inc
jae
pop
std
outsb
sbb
xlat
dec
pop
fmull
sbb
or
add
aaa
fs
jl
jns
dec
cwtl
add
fldcw
dec
add
xchg
mov
and
and
arpl
add
pop
cs
add
cltd
sbbb
add
into
push
and
xor
test
adc
add
lock
ret
push
ljmp
add
daa
lods
or
add
ds
pop
pop
or
add
mov
add
inc
in
dec
cld
inc
mov
mov
mov
ret
arpl
add
or
mov
cmp
pop
sub
cmp
pop
fsubrl
mov
jae
or
add
xor
jo
dec
add
mov
add
dec
mov
cmp
inc
daa
add
aaa
movsb
mov
das
arpl
add
lcall
and
add
adc
push
cs
sub
ret
fcoms
aaa
dec
jae
and
sbb
add
pop
jae
in
add
jb
sub
movl
out
jge
adc
loop
aas
jg
data16
or
add
test
add
mov
rorl
mov
inc
fs
pop
pop
mov
dec
insl
inc
xchg
add
xor
test
test
push
add
das
mov
mov
add
cld
sti
add
sbb
add
test
jg
cwtl
add
add
add
aaa
or
pop
add
jle
or
ficoms
test
enter
dec
cltd
add
mov
dec
push
add
ds
push
sbb
ja
loope
mov
adc
add
mov
add
ja
out
in
dec
hlt
add
or
in
pop
fisttpl
add
hlt
jae
dec
fcmovne
dec
add
sub
push
or
pop
lock
test
add
inc
lret
add
stos
add
mov
add
cmp
movsl
mov
sub
mov
adc
cltd
jp
enter
data16
inc
imul
pop
add
xlat
gs
or
add
fisubrs
insl
loope
cmp
add
or
sbb
insl
dec
mov
dec
mov
add
add
add
testl
and
add
mov
push
dec
dec
push
xchg
add
add
lock
insb
aas
mov
jle
lds
shrl
jle
fidivrs
add
jge
inc
push
jne
leave
rorb
add
incb
add
outsl
or
add
or
outsb
jnp
adc
add
mov
les
add
icebp
add
add
inc
add
add
sub
add
aas
mov
add
in
dec
ljmp
shl
add
cmpl
push
mov
dec
mov
mov
add
in
into
mov
add
xor
imul
pusha
fs
int3
add
test
dec
popa
add
in
dec
cmp
add
lahf
inc
dec
lea
add
add
jle
cmp
insl
add
sbb
add
ja
stc
cmp
add
std
and
add
or
jge
mov
dec
mov
add
and
mov
dec
icebp
std
pop
dec
push
xchg
dec
add
add
adc
movsl
mov
dec
mov
or
add
xor
cmp
ja
adc
add
dec
sub
xor
or
int3
fwait
add
inc
push
sub
dec
or
add
add
dec
xchg
or
outsb
add
jae
fwait
add
or
add
or
int
aad
fstpt
add
movsb
adc
xchg
scas
cmp
ret
ret
mov
pop
add
sahf
mov
cmpsb
dec
add
dec
dec
scas
dec
sbb
add
add
cmpsb
dec
xor
add
bound
add
mov
mov
add
cmp
enter
cmpsb
jne
movsb
scas
dec
dec
and
aad
fldl
add
jg
in
jns
xchg
lret
nop
xor
loope
in
dec
lods
repnz
inc
add
dec
add
adcl
das
add
dec
mov
mov
inc
mov
dec
dec
mov
adc
mov
mov
add
add
test
mov
add
lea
enter
pusha
dec
iret
pop
pop
imul
imul
pop
int
xor
mov
add
push
dec
adc
sbb
add
add
mov
sub
mov
pop
mov
dec
sub
add
icebp
out
pop
mov
push
mov
add
dec
pop
add
mov
add
jmp
add
dec
cmp
clc
mov
popf
int
stos
pop
push
mov
enter
pop
jb
or
pop
les
rorl
ret
or
add
sub
pop
or
add
into
cmc
repnz
ficomps
mov
cs
and
movsl
push
daa
fidivl
add
xor
sbb
stos
mov
mov
loope
fildl
test
xor
add
jns
outsb
push
xlat
adc
adc
gs
dec
add
insb
add
mov
jnp
in
add
pop
add
data16
orl
jne
pop
mov
nop
push
sub
dec
insl
adc
pop
add
dec
cwtl
cmpsl
ss
mov
add
cmp
add
xchg
or
add
add
pop
add
cmovp
xor
cld
inc
sbb
push
mov
ds
imul
jae
add
add
jl
jno
sbb
inc
add
jp
cmp
push
mov
mov
add
adc
jne
aaa
cld
imul
adc
ja
ja
inc
inc
inc
lahf
shl
leave
pop
fcomp
jle
pop
dec
roll
add
cld
or
add
add
push
mov
cmp
xchg
add
rorb
add
adc
cmpl
pop
fsubrl
pop
add
inc
imul
les
cmp
jecxz
addr16
fcmovnu
cli
dec
jne
or
add
movsl
sub
dec
xchg
arpl
mov
pop
dec
xchg
mov
adc
repnz
andl
fisubrl
scas
xchg
enter
in
sub
add
imul
xchg
in
syscall
gs
stos
pop
outsl
pop
jecxz
pop
mov
add
push
and
pop
pop
dec
jne
cli
add
mov
inc
sub
jns
dec
dec
xor
enter
push
and
inc
add
ljmp
sub
nop
push
jo
xor
inc
faddl
add
dec
dec
or
aaa
dec
add
add
jp
movsl
inc
jl
add
sub
pop
mov
lods
or
dec
add
inc
bound
jle
clc
addr16
inc
inc
add
mov
ja
add
sbb
add
shlb
inc
inc
cmp
dec
xor
dec
int3
movl
stos
mov
out
jbe
les
add
movsl
mov
in
pop
cmp
nop
add
mov
add
jne
inc
das
test
sbb
mov
and
and
add
sbb
je
jb
add
add
mov
xchg
add
jno
push
fwait
test
mov
add
cmp
cmp
or
add
bound
add
jno
pushf
daa
push
add
add
dec
scas
inc
mov
add
je
xor
das
add
fcmovne
insb
dec
jmp
push
popf
sub
push
adc
jbe
mov
add
dec
aad
add
mov
rclb
adc
add
add
add
or
add
enter
jno
insb
add
sub
inc
rolb
add
punpcklwd
icebp
cmp
cmc
ja
dec
popl
add
mov
test
lret
mov
mov
jp
pop
mov
pusha
dec
pop
push
int
and
iret
pop
fisubrl
dec
int3
mov
leave
add
in
cmp
add
jae
pop
lea
sbb
inc
int
dec
test
mov
lahf
mov
jp
push
sbb
test
dec
and
adc
dec
lods
sarl
add
shlb
or
add
push
add
add
cmp
xlat
and
sti
pop
mov
maxps
outsl
inc
enter
dec
mov
add
xchg
dec
cmpsl
inc
dec
pushf
add
pop
dec
rsqrtps
sbb
lret
nop
dec
lahf
mov
add
add
mov
add
addr16
hlt
adc
xchg
add
mov
push
add
sbb
lea
add
out
bound
shll
mov
add
inc
movsl
push
inc
jge
add
sahf
les
add
sub
cmp
popf
leave
push
in
push
movb
cmp
push
push
cmp
add
add
xor
add
adc
faddl
add
fidivs
rolb
mov
push
cli
dec
or
xor
js
test
add
ret
xor
daa
mov
lcall
adc
pushf
les
add
mov
add
inc
adc
sub
dec
push
add
mov
cmpl
dec
filds
add
add
mov
xchg
pop
incl
in
add
xchg
adc
cwtl
cmp
hlt
jp
mov
add
inc
mov
add
cli
jg
dec
dec
shrl
pop
add
xchg
data16
loopne
int3
filds
add
sub
imul
xor
stos
add
cmp
or
and
outsb
pop
mul
push
add
mov
inc
add
add
arpl
movsb
dec
push
inc
sub
add
dec
ljmp
ret
pop
rorl
lea
push
or
add
add
sub
dec
and
movl
push
cmp
add
add
sub
add
in
dec
and
add
sub
dec
outsb
dec
dec
dec
aaa
into
popf
dec
insb
dec
dec
dec
lds
dec
dec
push
mov
dec
dec
loope
xor
dec
daa
dec
jg
and
mov
daa
dec
or
dec
daa
dec
fwait
or
add
and
dec
daa
dec
sub
add
in
dec
incb
dec
movl
dec
push
int
dec
cli
inc
in
dec
jecxz
xchg
dec
clc
inc
in
dec
jno
lcall
aad
dec
inc
push
add
jge
dec
popf
mov
add
das
dec
inc
jge
dec
sub
dec
inc
add
jge
dec
mov
cmp
or
push
dec
das
dec
mov
add
sub
dec
mov
pop
add
sub
dec
mov
add
or
add
dec
inc
in
dec
lahf
push
dec
aam
in
dec
sub
inc
in
dec
mov
inc
in
dec
dec
inc
test
add
dec
push
dec
js
out
in
dec
sbb
js
jne
in
dec
sbb
dec
add
add
dec
sbb
dec
xchg
inc
in
dec
inc
in
dec
das
mov
fs
in
dec
mov
inc
in
dec
dec
lret
popf
dec
pusha
inc
in
dec
flds
dec
scas
mov
ja
add
in
dec
lods
mov
add
add
mov
xchg
inc
in
dec
test
lods
add
pop
dec
and
add
testb
mov
inc
in
dec
dec
inc
in
dec
repnz
in
dec
fildl
dec
lock
in
dec
imul
in
dec
pop
dec
in
dec
cmp
in
dec
xchg
inc
in
dec
cmp
dec
and
dec
cmp
dec
add
push
dec
dec
stc
push
dec
dec
inc
push
dec
dec
mov
dec
dec
mov
dec
dec
imul
add
dec
dec
addr16
dec
dec
outsb
dec
dec
dec
lret
dec
dec
dec
call
dec
dec
and
or
add
inc
int
mov
and
mov
add
inc
inc
outsb
add
in
dec
add
dec
fisttpll
dec
cmp
imul
dec
dec
dec
mov
dec
mov
add
push
dec
dec
pop
push
dec
dec
lcall
dec
jp
dec
dec
sub
push
dec
dec
xchg
push
dec
dec
sub
dec
or
dec
push
pop
dec
dec
xchg
dec
cmp
dec
icebp
push
dec
dec
push
dec
dec
insl
push
dec
dec
mov
push
dec
std
inc
in
int
dec
dec
dec
xchg
push
dec
dec
dec
push
dec
dec
mov
sbb
add
in
int
add
add
ds
movsb
dec
cmp
fcoml
int
inc
in
int
inc
cmp
dec
add
ret
dec
ret
pop
dec
dec
xor
dec
dec
test
dec
pushf
dec
dec
dec
cmp
dec
mov
add
dec
add
mov
dec
jnp
dec
dec
lret
add
ds
jmp
dec
cmp
add
mov
dec
insl
push
dec
dec
xchg
mov
dec
fsts
dec
lods
push
dec
dec
xor
push
dec
dec
popf
push
dec
dec
outsb
push
dec
dec
pop
push
dec
dec
and
dec
dec
insl
push
dec
dec
repnz
dec
dec
lds
dec
or
dec
sub
dec
fmull
dec
push
dec
dec
stos
pop
dec
dec
jmp
push
dec
dec
pop
dec
dec
dec
pusha
pop
dec
dec
xlat
push
dec
dec
js
dec
dec
sub
dec
xchg
pop
dec
dec
xchg
addr16
dec
pop
push
dec
dec
dec
pop
dec
dec
imul
sbb
dec
xlat
push
dec
dec
ds
dec
dec
xor
dec
rcrb
dec
mov
sarb
dec
pop
jp
dec
ret
dec
jnp
pop
dec
cwtl
dec
adc
add
add
dec
in
dec
dec
js
dec
jns
add
cld
sub
pop
dec
dec
aad
inc
mov
add
push
dec
dec
jnp
ds
out
pop
ds
mov
aas
dec
out
aas
dec
pop
mov
add
sub
aas
repz
dec
inc
add
push
xlat
mov
xchg
mov
sti
andb
pusha
fcmove
ret
mov
push
ret
jle
dec
xor
add
xor
add
dec
jb
add
dec
iret
push
inc
and
add
add
mov
dec
add
inc
jmp
push
dec
add
add
dec
loop
add
dec
shll
outsb
push
dec
jle
leave
xor
das
add
push
pop
inc
movsl
je
dec
mov
lea
push
adc
xlat
add
rorl
shrl
xchg
inc
sbb
test
lods
add
dec
jnp
push
lahf
xchg
inc
sbb
jnp
mov
xor
arpl
mov
jle
addl
add
adc
pop
dec
insb
aam
leave
cli
inc
test
add
sub
push
pusha
dec
cmpsb
in
int
mov
lds
inc
adc
pop
push
inc
push
adc
xchg
add
in
push
xchg
xor
stos
into
or
add
mov
and
cmp
dec
mov
add
cmp
jmp
addl
push
inc
push
repz
mov
in
int
ret
inc
pop
scas
repnz
cmp
movsb
dec
gs
out
add
pop
int3
rolb
dec
int
add
add
mov
rolb
aas
adc
xor
push
adc
arpl
add
adcl
addr16
pop
test
add
sbbl
dec
xchg
es
sbb
addr16
gs
pop
mov
add
lea
add
fidivrs
jge
aaa
sbb
dec
cmp
lea
imul
xor
daa
add
mov
leave
add
dec
lods
add
mov
ja
and
xchg
inc
roll
mov
or
add
adc
rcr
add
dec
inc
mov
clc
add
dec
rcll
add
xchg
popf
cmp
push
insb
insb
adc
sbb
pusha
js
add
cmp
jmp
rcrl
add
lcall
dec
ret
and
jnp
jmp
pop
add
add
out
sbb
imul
mull
lret
push
jge
je
test
lea
sub
or
cli
loopne
or
ret
mov
pusha
rcll
add
add
add
test
mov
add
scas
out
js
pop
loop
sbb
jb
add
sbb
jno
add
xchg
ds
push
xchg
cmp
int
inc
dec
cmpsl
sbb
rcl
inc
jp
jl
fisubl
xchg
pop
js
lea
add
pop
sbb
add
push
dec
sub
add
push
mov
add
mov
loop
mov
add
ljmp
mov
pushf
sub
inc
data16
xor
xchg
mov
das
fcoms
push
inc
lock
insb
dec
cmp
or
mov
scas
test
movsl
push
mov
mov
jp
jle
xor
das
pop
mov
stos
loope
and
add
lds
add
popa
inc
pop
or
add
cmpsb
mov
daa
int
jnp
loop
imul
jecxz
xor
or
push
or
mov
add
pop
lods
xor
and
or
jp
mov
lret
sbb
add
jne
mov
push
adc
movsb
dec
adc
xchg
push
add
add
add
scas
loop
fiaddl
sbb
mov
into
adc
mov
out
mov
das
mov
cmc
push
divb
shlb
test
jns
jp
inc
lds
add
leave
cmpsl
movsl
xchg
aas
jno
popf
out
mov
fdivrp
shll
cmc
adc
into
in
popa
sti
push
add
or
je
cmp
add
jnp
sbbl
add
jle
adc
std
icebp
push
sti
and
icebp
dec
mov
add
mov
cmpl
adc
mov
pushf
jge
xchg
mov
loop
or
add
add
add
cmpl
rolb
testl
cld
add
ret
arpl
mov
mov
cmp
mov
xor
enter
int3
faddl
add
popa
dec
repnz
out
add
push
das
mov
add
js
mov
pop
push
jg
test
imul
arpl
lea
add
inc
pop
es
lock
data16
xor
mov
rcll
lock
shrb
jle
test
xor
push
movl
add
addr16
add
adc
insl
rclb
and
test
adc
and
add
add
pop
stos
test
inc
dec
xor
mov
or
add
add
dec
mov
int3
jno
add
push
imulb
ret
fmul
subb
mov
out
dec
out
sub
jnp
nop
jns
je
add
pop
lock
xor
dec
imul
sahf
dec
mov
add
pushf
test
mov
loopne
cmpsl
xor
push
pmulhw
pop
inc
bound
add
add
mov
mov
das
outsb
mov
std
lock
dec
shlb
add
sub
adc
scas
xchg
and
in
and
out
push
mov
loopne
movsb
mov
out
pop
adcb
add
je
cli
xchg
shl
push
xorl
loope
cmp
add
add
push
int3
lock
mov
cmpl
ss
cmp
adc
aas
push
pop
jno
fdivrs
fsts
jmp
mov
pop
jbe
ret
cmp
mov
jno
fcompl
jo
sbb
movsb
add
sahf
mov
test
sti
shll
fsts
pop
call
mov
je
dec
fstpl
test
or
inc
adc
add
insb
ja
fdivrl
cwtl
mov
jle
mov
dec
jnp
add
and
sub
add
fists
push
pop
fs
mov
scas
lock
sbb
xchg
jmp
push
fsubs
je
repz
dec
mov
lahf
xchg
in
xor
out
testb
add
loopne
cmp
repz
int3
iret
add
inc
in
add
stc
push
push
mov
adc
add
dec
add
add
dec
ret
add
push
scas
jle
mov
addr16
repnz
data16
in
xchg
add
es
pop
add
lods
cli
cmp
cmp
add
dec
out
add
xor
ja
pop
push
repz
push
xor
jae
cli
jb
repz
inc
test
mov
jl
out
cli
lock
lock
das
adc
fmull
sub
subl
mov
sub
xlat
inc
sbb
add
inc
add
sbb
and
pop
push
xacquire
jecxz
dec
mov
add
ja
loop
popf
add
decl
mov
test
add
add
jmp
inc
addb
push
movsb
xor
xchg
out
mov
cmp
inc
add
mov
int3
add
add
and
sbb
xchg
and
mov
push
fistps
inc
add
ss
test
fdivrs
cmp
mov
bnd
cmp
pop
mov
repnz
mov
add
pop
or
inc
lods
rcrb
lods
sbb
push
add
lea
add
mov
lcall
cltd
mov
add
mov
add
gs
or
xchg
mov
fmuls
add
xchg
imul
fldcw
add
cmp
sbb
xor
add
sub
mov
pop
mov
sub
mov
out
xlat
jmp
xor
add
insl
addl
imulb
mov
rol
movsl
in
testl
jp
add
and
adc
sbb
push
add
pop
adc
jbe
pusha
mov
test
int3
jo
add
mov
pop
xor
mov
pop
cmp
pop
xor
testb
adcb
or
jb
mov
rorl
xor
and
add
push
push
sub
pop
test
cmpsb
xchg
mov
orb
mov
add
or
add
adc
xor
sar
add
in
ret
jns
repnz
sbb
push
lcall
clc
mov
add
xlat
xchg
mov
mov
sbb
fdiv
mov
jp
fistps
jecxz
jge
push
into
sar
add
xor
sub
rcll
xor
xchg
sbbb
pop
mov
lods
pop
scas
mov
adc
push
clc
daa
pop
loope
pop
sub
cmp
mov
dec
cmpsl
dec
repnz
add
jae
hlt
jle
xor
jb
push
adc
stos
sti
adc
popa
sbb
adc
fwait
nop
mov
or
add
mov
add
dec
xchg
add
mov
cmp
je
outsb
jb
lods
pop
push
lcall
dec
add
jb
ror
aaa
add
lods
mov
jb
and
push
mov
test
loope
adc
test
sti
sbb
in
pop
xchg
shrb
push
imul
ret
push
daa
xlat
sti
out
ds
hlt
rep
ljmp
add
aam
inc
add
or
add
imul
jnp
cmp
sbb
push
and
xor
stos
in
xchg
dec
popa
and
add
jno
mov
sahf
ljmp
sahf
enter
mov
xchg
lahf
jne
xchg
or
inc
sub
mov
add
out
imul
add
add
mov
cmpsl
test
add
jl
pop
add
adc
and
pop
add
jnp
and
les
mov
cmpsb
or
pop
jae
add
mov
loop
dec
pop
xchg
mov
int3
push
add
inc
jae
and
and
xchg
data16
push
add
jbe
dec
aad
ja
lods
mov
jnp
xchg
sbb
fiadds
sbb
call
insl
jmp
xor
test
dec
jp
add
xor
pop
jle
pop
mov
add
xchg
cmc
jb
jno
and
roll
add
pushf
mov
jnp
push
sti
fistl
push
nop
xchg
outsl
inc
add
xchg
jl
mov
add
scas
je
pop
mov
and
loopne
dec
outsl
aam
nop
sub
ja
in
mov
add
stc
or
lahf
in
dec
pop
mov
lcall
ror
pop
add
and
jb
mov
int3
imul
idivl
dec
addl
jo
pop
xor
jmp
ret
pop
ss
inc
js
shll
das
add
fidivl
jae
xchg
fcomp
insl
cmp
mov
hlt
je
popa
mov
test
mov
aam
add
mov
scas
xchg
and
nop
add
add
xorl
dec
push
add
dec
dec
add
out
ja
stos
and
sbb
pop
jecxz
push
outsl
inc
enter
xchg
and
or
lds
clc
pop
mov
jno
in
ljmp
ret
mov
add
push
dec
pop
stc
push
dec
sub
push
jbe
shlb
cmp
xor
push
add
add
rcrl
int
int3
out
add
and
add
rorb
nop
rcll
xchg
add
adc
lcall
xor
or
loope
stos
mov
push
xchg
popf
mov
cli
sbb
daa
add
je
pop
std
cld
ret
pop
mov
add
push
lock
outsb
mov
add
mov
out
or
cmp
add
mov
mov
add
mov
mov
in
repnz
pop
daa
jge
push
xor
sahf
das
adc
xchg
lods
jo
aaa
pop
inc
jne
cmpsb
push
int3
lods
add
dec
push
pusha
adc
sub
mov
add
shlb
sub
xchg
push
xchg
push
sub
sbb
pop
sbb
or
ret
and
in
cmp
push
push
xor
adc
add
adc
add
push
insb
adc
sbb
int
shl
inc
inc
add
xchg
push
lds
cmp
mov
shll
test
or
add
mov
incl
add
xchg
lea
mov
jae
push
push
mov
jns
loope
jle
pop
sub
inc
pusha
cmp
gs
es
roll
cmp
outsb
rcll
lcall
dec
xchg
inc
popa
mov
sub
and
fistl
testb
add
aad
adc
xlat
pop
repnz
add
pop
loop
inc
in
inc
in
lcall
ds
push
stc
testb
add
shrb
xchg
mov
dec
js
mov
sbb
xor
and
jmp
std
or
fiadds
add
adc
ficompl
pop
roll
cwtl
dec
stc
imul
add
xlat
stos
subl
add
mov
mov
xchg
fadd
jnp
xor
insb
lock
jl
sbb
add
dec
add
leave
or
add
lods
xlat
rolb
cld
mov
ja
lock
mov
cmc
cs
or
adc
mov
sbb
inc
std
gs
or
mov
scas
adc
pop
sbb
adc
or
testb
pop
push
dec
xchg
add
mov
in
outsl
push
imul
add
stos
test
test
cwtl
xchg
cmp
xor
xchg
rcll
mov
add
cli
inc
movsl
outsl
push
dec
scas
daa
cltd
and
pop
fistpl
adc
add
mov
es
inc
icebp
scas
nop
aas
inc
xchg
adc
out
sahf
imul
inc
push
add
inc
xor
jmp
push
cs
mov
into
addl
add
fimull
jg
std
cli
ja
shlb
pop
cmpsw
subb
adc
mov
mov
xchg
add
dec
subl
xchg
add
sub
sti
cmp
and
iret
mov
mov
pop
or
cmp
aaa
add
lcall
fwait
cmp
mov
add
mov
or
addr16
inc
push
mov
pop
add
xchg
je
cmc
inc
xlat
sbb
sub
ljmp
and
mov
in
sarb
mov
pop
sahf
inc
add
jb
fildll
mov
add
add
cmp
shll
push
hlt
dec
mov
jl
pop
scas
call
aad
clc
aas
jle
gs
cmp
in
repnz
imul
pushf
add
lret
jnp
mov
ss
ret
sub
idivl
xchg
cmc
cmpsl
out
xchg
popf
mov
or
add
je
fidivrl
movsl
fxch
out
pop
ljmp
pop
test
jo
lahf
cmp
sbbb
int3
roll
add
test
ds
out
scas
jno
shrl
adc
and
fldl
add
je
mov
pop
fsubrs
popf
or
mov
add
lock
addr16
adc
add
movzwl
xchg
xor
loope
push
in
test
ljmp
loop
add
daa
push
stos
insb
sub
mov
in
es
vmovdqa
cwtl
stos
mov
leave
in
xchg
sbb
lahf
jecxz
mov
add
ljmp
addr16
lods
pop
pop
adc
dec
roll
aad
adc
jae
fiaddl
xchg
pop
aad
push
hlt
outsl
add
add
xchg
adc
dec
jge
aaa
fwait
mov
or
ret
mov
pusha
add
add
addr16
cwtl
add
or
add
movsl
fsubl
add
in
and
ss
or
add
or
incl
add
and
into
fwait
mov
movsl
sbb
int
lock
mov
nop
lods
les
cltd
movsb
shlb
add
lods
push
sbb
scas
imul
sbb
and
or
add
cmc
roll
das
es
cs
stc
into
roll
pop
test
mov
out
ret
mov
lock
or
lret
add
push
fidivl
sbb
rorl
sub
insb
lock
xchg
leave
fistl
push
lods
sti
ret
add
stos
les
add
or
mov
pop
sbb
add
add
pushf
out
push
loope
fwait
mov
scas
push
repz
xchg
jnp
adc
mov
fwait
xor
jno
dec
or
clc
popf
mov
mov
xor
push
add
lea
es
add
cmpsl
xchg
add
data16
push
data16
jns
lret
push
sti
mov
roll
add
adc
mov
and
ror
add
fsubp
xchg
outsl
inc
ljmp
xor
add
sbb
out
add
insl
mov
cwtl
add
sub
or
rcrb
cmp
rcrb
rolb
dec
nop
add
jp
sbb
lea
sub
ret
sub
xchg
loop
mov
add
mov
ss
jns
enter
pop
pop
add
fimull
jo
xor
addl
popa
js
stc
push
xor
add
inc
dec
cwtl
add
popa
sti
add
push
repz
pop
mov
in
cmp
scas
sbb
and
sub
loop
dec
adc
test
repnz
adc
jl
xchg
or
in
jmp
add
into
stos
insl
sbb
xchg
int
test
add
inc
add
sbb
xchg
outsl
mov
leave
outsl
push
mov
sbb
clc
adc
sub
dec
add
ficomps
mov
sbb
add
ja
lock
and
leave
xchg
pop
ret
loop
cmpsl
push
or
add
mov
pop
push
mov
fcompl
dec
fimull
loopne
add
fwait
arpl
mov
insl
out
out
and
shrb
dec
xor
pop
sbb
out
push
popa
sahf
outsl
cmp
add
xchg
jle
cmp
lcall
pusha
mov
cmp
into
cwtl
xor
enter
mov
dec
sbb
inc
mov
add
pop
inc
pop
in
lock
cli
adc
seto
lods
sbb
test
shrb
sarl
xor
jmp
repnz
test
xchg
mov
je
adc
mov
test
repz
es
je
aad
aas
sbb
add
mov
mov
bnd
daa
dec
data16
push
cmpsb
ds
jbe
fcompl
adc
sub
sub
scas
or
mov
or
push
loop
pop
push
ss
fisubl
lret
mov
add
aam
push
cmp
jge
jbe
test
add
adc
adc
iret
xor
cmpsl
sti
dec
and
sbb
sub
cmp
pushf
mov
sub
rcrb
scas
mov
push
lods
add
cmp
pushf
dec
pmuludq
loopne
popf
push
inc
icebp
sbb
push
push
mov
lret
pop
cs
push
add
add
andb
jno
adc
mov
mov
shr
cltd
push
mov
cs
andl
xor
and
push
or
jg
mov
xchg
add
insb
add
mov
loope
add
dec
or
cmpl
sub
inc
and
add
cmp
test
xchg
add
into
pop
cmpsl
pop
mov
add
insb
dec
rorl
add
fbld
fdivs
sbb
rorl
adc
in
pop
add
lahf
and
mov
add
add
aaa
xor
jp
inc
std
mov
sbb
pop
add
lcall
lahf
xchg
or
add
add
adc
in
cmp
pushf
aas
and
cmp
popa
pop
outsl
sub
pop
cmpsb
jg
call
stos
dec
insl
lods
jbe
daa
xor
push
and
jnp
xchg
mov
add
push
xor
pop
insb
adc
outsl
scas
sbb
add
xchg
fs
stos
faddl
leave
sti
inc
pop
dec
repnz
dec
pop
xor
xchg
cmc
fisttpll
lds
xor
frstor
xor
jnp
cltd
jb
push
jge
or
add
adc
sarl
pop
leave
push
call
in
dec
sub
jbe
rolb
add
mov
jle,pt
jno
adc
mov
xor
push
cmc
mov
inc
lret
dec
add
out
lret
stos
sbb
sub
fdiv
rcl
data16
psubusb
add
inc
pop
add
push
inc
sbb
push
mov
dec
cltd
in
fsts
jg
push
mov
add
loopne
insb
cmpsb
dec
inc
add
bound
xchg
out
movsb
cltd
icebp
loope
xchg
push
daa
adc
mov
in
add
incl
add
push
adc
push
sti
pop
rcr
push
cmovle
out
hlt
mov
ret
adc
mov
loop
addl
inc
gs
mov
add
xchg
inc
xor
pop
out
add
jp
add
cmp
or
inc
inc
out
jmp
sti
stos
dec
dec
sub
add
or
xchg
mov
inc
rolb
add
rolb
fnstcw
cld
mov
shll
mov
rorl
andb
push
js
test
or
add
add
jnp
std
add
xchg
add
add
lret
and
add
mov
sahf
movsw
nop
jp
push
pop
cwtl
fistl
pop
mov
mov
xor
popa
add
dec
scas
add
popa
dec
push
jo
inc
jl
test
add
inc
cld
push
subl
fisubl
adc
mov
jl
rolb
add
jno
fidivrl
pop
lahf
or
xor
jb
xchg
sbb
stos
xchg
cmpsb
push
lds
add
es
sbb
gs
sti
inc
cmpsl
adc
sub
aad
sbb
sbb
add
testl
xor
stc
in
nop
movl
jg
xor
add
jno
hlt
das
push
xchg
pop
push
push
mov
inc
movb
fucomi
push
jnp
adc
dec
outsb
mov
ret
pusha
pop
mov
dec
inc
imul
repz
push
stc
movsb
mov
or
cmc
push
adc
xchg
mov
rcrb
push
fbld
adc
dec
jo
pop
in
stos
ja
push
aas
test
popa
rcrb
mov
sbb
out
call
add
adc
negl
inc
mov
jge
call
faddl
cmp
xor
loope
dec
loope
add
adc
aaa
enter
scas
aaa
xor
add
dec
add
call
lock
in
subb
or
add
pop
scas
dec
cmpsb
add
xlat
and
sti
and
jl
jnp
imul
out
out
xor
flds
mov
cs
call
cmp
mov
incl
adc
rorl
mov
test
ret
mov
jno
jb
js
pop
sti
bound
jns
scas
cmp
ds
add
ss
mulb
imul
adc
js
cmc
aad
outsl
add
pop
or
pop
add
addr16
jmp
lret
lret
dec
in
fstpt
pop
imulb
in
stc
lods
xchg
cmpsb
sbb
mov
add
add
iret
xor
cwtl
pop
cltd
subb
jae
pop
mov
gs
inc
mov
jle
pop
adc
add
lock
mov
fdiv
add
add
jg
shrl
or
bound
inc
add
sahf
and
stc
xchg
pop
xlat
int
dec
sbb
dec
mov
mov
fbld
jmp
add
mov
stos
js
xor
iret
pop
repnz
jg
lret
mov
fcomps
stos
add
add
negl
or
clc
loop
idivb
cmp
add
fisubrl
shll
ja
inc
js
fdiv
lock
push
add
add
movl
xor
roll
xchg
mov
addl
pop
jno
sub
subl
xchg
test
push
psllw
xchg
add
adc
jp
pop
jl
int
add
loope
popf
cmpsb
aaa
popf
jp
pop
pop
enter
rorl
add
sbb
mov
negl
ret
adc
push
pop
stos
das
scas
jle
insl
outsb
in
or
psubsw
nop
and
push
add
jns
shrb
fs
adc
scas
sbb
in
lcall
dec
popa
fcompl
jge
popf
aad
pop
ljmp
add
cmp
sbb
push
xchg
std
sub
add
push
mov
inc
mov
push
jle
add
add
add
lahf
dec
adc
add
mov
mov
xchg
lock
incb
jne
adc
clc
jp
aam
push
add
outsb
mov
stos
insl
into
push
sar
sbb
push
add
mov
push
pop
lcall
sbb
addr16
xchg
fcoml
test
imul
mov
dec
xchg
dec
and
add
mov
mov
jo
push
popf
jg
jl
stos
or
add
mov
push
lcallw
jp
lret
xlat
and
jne
inc
push
push
pop
fcomps
into
mov
daa
adc
aad
pop
pusha
cwtl
out
lds
add
sbb
mov
pop
jle
xor
mov
sar
inc
rcll
lock
sub
cli
int
aam
aaa
adc
xor
fistl
jno
add
cmp
jnp
jge
das
loop
lea
nop
pop
cmp
cli
divl
mov
int
pop
add
add
push
ffree
cmp
cmp
xor
xchg
sbb
mov
or
add
nop
arpl
out
sbb
je
lds
in
repnz
in
clc
lret
imul
sub
imul
cli
sub
mov
push
cmp
xor
mov
sbb
push
mov
mov
pop
jbe
push
adc
xchg
mov
push
mov
fimuls
addr16
daa
and
cmp
or
scas
pop
or
mov
hlt
fldl
add
xor
adc
add
sti
mov
fstpt
loop
xchg
push
repz
inc
enter
push
ja
scas
xor
add
test
hlt
jecxz
mov
sar
add
sbb
add
xchg
in
pop
cmpsl
cmp
sub
test
pop
mov
mov
and
rorb
dec
mov
push
insl
mov
lret
cli
sub
mov
add
add
add
mov
les
add
lret
sbb
xor
cld
fstpt
cs
sbb
lds
adc
cmp
in
sub
out
sbb
adc
sub
mov
leave
rorl
mov
or
mov
iret
jle
addr16
arpl
mov
shll
adc
xor
fwait
test
sub
stos
mov
add
inc
xchg
mov
loope
stos
add
pop
inc
into
or
push
push
add
fsts
push
sbb
lret
mov
fadds
lea
add
pushf
cmp
inc
je
pop
pop
push
mov
cmp
aad
add
or
cs
jl
push
push
push
mov
in
inc
stc
movsb
add
test
stos
pop
xor
xchg
pop
add
cmp
leave
mov
das
sub
cmp
dec
sub
shrl
xorb
shrb
stc
cmp
add
inc
mov
xchg
gs
inc
xor
add
or
fdivrl
xchg
mov
xlat
scas
mov
push
outsl
int3
popa
add
cld
ljmp
jbe
add
aas
mov
fiaddl
lahf
dec
xchg
add
cmp
add
add
push
push
cli
cmp
aaa
lahf
cli
pop
mov
dec
decb
and
in
mov
sub
or
add
add
sbb
jns
or
roll
test
lods
aas
inc
push
jns
fadds
add
pop
add
scas
cld
gs
inc
mov
addr16
jp
and
sbbl
imul
popf
xchg
mov
insb
imul
xlat
jb
roll
mulb
mov
addr16
addr16
rcl
mov
leave
xchg
cmp
add
sarl
push
int
int
xor
pop
sub
test
mov
add
cmc
fcoml
bswap
shlb
add
cltd
jmp
sub
xchg
add
dec
xchg
add
adc
and
ss
or
add
pop
ds
or
mov
xchg
jb
aam
inc
out
adc
aad
sub
add
dec
stos
dec
ret
cmp
rcrb
and
jae
cmp
fdivp
repz
dec
or
cmpsl
stos
dec
stos
call
xor
and
jmp
insl
push
int3
out
add
xchg
pop
push
aam
fstpl
das
xor
pop
stc
lods
push
mov
loope
mov
add
lock
jg
test
jo
cmp
push
and
sti
inc
setbe
and
scas
mov
dec
add
cs
pop
aad
mov
and
mov
sbb
or
add
add
lock
js
push
xchg
cmp
push
jmp
cli
xlat
cltd
int3
pop
add
sarl
mov
add
add
and
mov
lret
and
sti
clc
stos
icebp
adc
mov
sbb
pop
add
insl
rorl
mov
push
fs
xchg
add
push
add
in
dec
fsubl
popl
stos
jge
ret
pop
jnp
stos
push
or
jb
xchg
add
add
icebp
cmpsb
int3
icebp
add
or
aaa
inc
fsub
fs
std
jp
adc
enter
jge
sub
fisttpll
in
add
inc
xlat
out
lret
mov
stc
add
mov
xchg
clc
mov
push
and
add
xchg
sub
sbb
test
movsb
arpl
lods
popa
inc
xor
jb
and
addps
ret
cmp
mov
add
and
add
sbb
pushf
pusha
sbb
xor
cmpsl
lods
pop
loopne
shrl
add
cmp
jl
out
aam
mov
push
movl
sbb
add
jno
cli
lods
mov
mov
xchg
loop
dec
pop
nop
jg
dec
lods
adc
or
add
int
add
repnz
das
push
mov
data16
add
cli
and
adc
add
lcall
push
dec
shrb
lret
outsl
loope
jns
stc
shrb
add
cmp
ret
aaa
jle
inc
cmp
orl
pushf
andw
popf
ss
xchg
out
loope
sub
int3
int3
int3
add
add
mov
jge
cs
push
and
inc
mov
in
push
js
mov
mov
sub
shll
es
cld
jmp
out
pusha
mov
push
mov
and
mov
push
in
vcvttsd2si
adc
ss
lea
xchg
cs
test
stos
mov
sub
mov
shl
add
es
nop
cs
jae
pop
mov
mov
les
stos
je
js
mov
mov
add
cld
ss
mov
sbb
out
sbb
mov
mov
pop
int3
int3
int3
add
add
or
push
repnz
cs
xchg
nop
ret
sub
mov
test
mov
mov
mov
mov
pushf
andw
popf
es
mov
mov
xchg
js
pop
jmp
add
add
inc
add
inc
in
inc
sbb
out
xchg
xchg
les
add
mov
pushf
andw
popf
bnd
shl
xchg
xchg
in
inc
fwait
int3
int3
int3
add
add
and
imul
jmp
mov
push
mov
inc
dec
mov
cmp
dec
sbb
clc
cmp
fs
add
repnz
jmp
clc
xchg
in
push
push
push
out
mov
js
mov
clc
push
clc
loopne
mov
repnz
jmp
sbb
xchg
rorl
mov
stos
mov
push
mov
stos
sub
jnp
sbb
jmp
les
in
sbb
mov
shll
pusha
js
loope
rcrl
mov
andl
jae
mov
out
mov
push
push
mov
mov
and
iret
cmpl
repnz
mov
mov
stos
push
xchg
jae
mov
mov
sbb
or
add
nop
nop
repz
xchg
xchg
clc
xchg
in
mov
js
pop
mov
out
xchg
mov
andl
jae
cmp
mov
mov
push
pop
mov
mov
in
je
pushl
pushf
andw
popf
bnd
sub
loope
mov
js
mov
js
mov
add
pushf
andw
popf
cld
jae
pop
push
xchg
out
aam
add
jmp
int3
int3
add
add
sbb
andl
jae
stos
xchg
js
in
mov
mov
mov
push
push
nop
es
xchg
ds
push
jae
push
push
pop
pusha
je
jne
pushf
andw
popf
jae,pt
pop
xchg
js
dec
adc
andw
popf
repz
push
in
sbb
in
js
je
stos
clc
inc
fimull
test
inc
add
repz
jmp
in
stos
test
mov
push
push
mov
in
push
pusha
xchg
jmp
pushf
andw
popf
jae,pt
loope
les
sub
push
je
pop
inc
call
add
es
js
clc
in
mov
js
mov
pop
sbb
and
mov
mov
jmp
add
pushf
andw
popf
es
test
push
pop
inc
mov
in
push
push
push
pushf
andw
popf
bnd
shll
rcrl
out
pusha
xchg
jne
push
nop
repnz
mov
xchg
cs
mov
inc
push
mov
mov
add
nop
cs
les
push
je
pop
mov
stos
loope
les
inc
in
pushf
andw
popf
cld
jae
mov
clc
in
js
pop
cmp
and
push
mov
add
pushf
andw
popf
repz
test
je
js
push
je
int3
int3
int3
add
add
cmp
push
ss
pop
cmp
mov
js
mov
sbb
pusha
test
and
mov
sbb
push
dec
mov
pushf
andw
popf
repz
pusha
push
je
pop
stos
clc
pusha
js
sub
in
testb
and
incb
popf
jae,pt
mov
stos
sbb
push
mov
mov
ret
add
cld
jmp
sbb
in
xchg
pop
cmp
in
roll
jae
xchg
add
cs
stos
loope
sbb
push
cmp
pusha
clc
pop
push
pop
test
push
pop
pushf
andw
popf
ss
mov
push
push
les
mov
in
mov
push
or
ss
pop
stos
out
sbb
out
test
loope
dec
push
out
js
push
lret
andw
popf
nop
jae
les
pop
push
pop
pop
mov
push
sarl
int3
jmp
add
add
add
int3
int3
add
add
jmp
js
mov
cmp
je
push
pop
mov
les
mov
clc
pushf
andw
popf
cld
jae
pop
xchg
clc
mov
mov
jae
jae
inc
dec
add
les
add
pop
fdivl
ret
cld
nop
jmp
push
mov
cmp
mov
jae
mov
mov
mov
push
push
mov
pushf
andw
popf
repz
test
and
push
push
loope
pusha
sbb
push
add
andw
popf
es
mov
jae
in
stos
sub
rcrl
and
jne
mov
add
leave
dec
testl
ss
roll
mov
push
mov
shll
ss
push
mov
xchg
push
pop
mov
push
push
push
mov
in
stos
cmp
loope
mov
pushf
andw
popf
es
js
mov
out
clc
inc
mov
in
mov
shl
jmp
push
in
stos
mov
mov
mov
dec
rcll
mov
push
cmp
push
rorl
and
incb
popf
nop
jae
push
push
sbb
sbb
les
push
insb
xchg
xchg
nop
es
jmp
dec
pusha
pop
mov
js
je
in
pop
test
mov
sub
js
fsubl
inc
pushf
andw
popf
jae,pt
loope
pop
js
mov
out
pop
pop
push
pop
repz
dec
mov
push
pop
js
push
mov
xchg
roll
jmp
mov
js
push
test
jae
mov
inc
je
sbb
js
andw
popf
jae,pt
rorl
pusha
and
je
js
and
mov
pop
pop
cs
sbb
out
in
rcrl
push
mov
push
and
rcl
xchg
js
sub
mov
fchs
ljmp
push
cld
ds
xchg
nop
ret
push
inc
mov
pop
mov
les
add
add
int3
int3
int3
add
add
lock
jmp
mov
dec
xchg
mov
pusha
mov
push
je
mov
clc
push
push
je
jne
pushf
andw
popf
cld
jae
sbb
and
stos
ljmp
andl
jae
clc
inc
inc
out
mov
sub
mov
xchg
or
add
out
push
pushf
andw
popf
repz
mov
push
dec
je
mov
xchg
push
push
push
repnz
nop
lea
xchg
ds
push
sbb
xchg
mov
mov
andw
popf
jae,pt
sbb
in
pop
push
sbb
cmp
js
mov
cld
cld
ds
jae
dec
test
shll
dec
dec
mov
shll
ljmp
andw
popf
ss
js
js
jae
sub
pop
xchg
push
cld
nop
jmp
mov
push
xchg
les
push
sub
dec
out
sbb
pop
clc
cmp
xchg
repz
and
pop
js
mov
push
shll
push
clc
jae
js
fucomp
inc
pop
add
loope
jae
rcrb
add
and
add
sub
push
mov
sub
je
mov
ss
jmp
js
out
push
push
dec
les
mov
js
mov
int
cmp
shr
pushf
andw
popf
ss
mov
stos
js
mov
pusha
inc
jp
shrl
andw
popf
es
test
xchg
inc
jae
test
shll
clc
add
add
add
sbb
add
test
clc
mov
popa
pushf
andw
popf
nop
jae
pop
cmp
sbb
stos
mov
mov
pusha
xchg
pop
mov
es
push
mov
je
and
push
sbb
dec
xchg
xchg
mov
pushf
andw
popf
jae,pn
mov
mov
stos
xchg
push
loop
inc
adc
cld
ss
push
push
mov
test
mov
cmp
stos
pop
sbb
mov
iret
mov
nop
es
js
sbb
mov
jae
pusha
stos
mov
mov
push
stos
je
inc
mov
pushf
andw
popf
repz
mov
mov
mov
mov
roll
int3
int3
add
add
mov
pushf
andw
popf
repz
inc
clc
mov
in
rcrl
mov
pop
daa
mov
repz
nop
jmp
push
mov
mov
dec
sbb
stos
mov
in
loope
mov
imul
and
add
push
add
pop
je
clc
mov
mov
push
je
inc
pushf
andw
popf
cld
jae
mov
pop
push
pop
push
mov
xchg
add
andw
popf
ss
mov
pop
and
les
xchg
jne
push
ds
lea
xchg
ds
mov
stos
loope
mov
cmp
es
test
jae
cmp
stos
mov
cmp
mov
sbb
cmp
ds
jae
push
rcrl
pop
js
loope
mov
mov
sbb
and
inc
mov
sub
ds
xchg
bnd
stos
xchg
push
mov
push
js
mov
repz
xchg
cmp
and
mov
js
in
mov
roll
mov
pop
mov
es
cmp
shll
mov
push
clc
xchg
stos
cmpsb
add
cs
mov
push
sub
pop
push
je
shll
in
xchg
or
insb
pop
nop
cld
nop
es
in
push
mov
push
mov
jae
mov
mov
push
js
loope
je
test
add
jmp
pushf
andw
popf
repz
test
mov
js
jae
push
sbb
add
pushf
andw
popf
ss
mov
push
push
test
pop
and
push
insb
ds
ss
es
mov
push
mov
xchg
sbb
and
roll
push
push
clc
pop
sbb
int3
int3
add
add
imul
andw
popf
jae,pn
xchg
cmp
push
mov
mov
js
fsubs
mov
nop
ds
xchg
ds
cmp
dec
mov
js
pop
or
add
xchg
sub
sub
pushf
andw
popf
jae,pn
and
push
cmp
xchg
sbb
int3
int3
add
add
filds
add
add
add
pushf
andw
popf
jae,pt
mov
pop
inc
pusha
stos
pusha
je
cmp
sbb
loop
leave
repnz
jmp
pop
in
sbb
test
mov
test
dec
pop
stos
mov
dec
mov
mov
inc
ja
cs
jmp
push
pop
mov
push
les
js
stos
pop
mov
push
cld
repnz
xchg
nop
ret
mov
push
jae
pusha
pop
push
push
xchg
nop
mov
xchg
bnd
stos
shll
mov
roll
int3
int3
add
add
jbe
pushf
andw
popf
bnd
dec
js
les
push
je
push
add
nop
repz
push
xchg
pop
rorl
dec
pop
mov
shl
test
dec
push
push
pusha
dec
push
addr16
push
cld
cld
repnz
xchg
repz
mov
push
push
sarl
pusha
sbb
mov
int3
int3
int3
add
add
test
xor
add
movsl
pushf
andw
popf
ss
shll
mov
test
icebp
nop
cmpsl
push
push
ds
lea
xchg
bnd
clc
in
sarl
sbb
loope
je
pushf
andw
popf
ss
push
mov
sbb
shll
es
pop
mov
pop
js
pop
dec
mov
xchg
in
pop
pop
loope
rorl
inc
xchg
pushf
andw
popf
es
js
clc
push
pusha
rcrl
mov
pop
and
int3
add
add
or
add
mov
stos
pop
pusha
sbb
sbb
mov
clc
sbb
mov
push
and
mov
std
add
test
andw
popf
nop
jae
pop
rorl
dec
mov
cmp
stc
inc
stos
add
pushf
andw
popf
ss
mov
mov
js
shr
xchg
js
sbb
andw
popf
es
mov
jae
inc
js
pop
roll
mov
jmp
pushf
andw
popf
bnd
pop
xchg
stos
mov
stos
push
push
push
pop
mov
cs
ss
pop
inc
xchg
jae
push
xchg
pop
dec
pop
js
clc
mov
pop
sbb
add
add
or
add
push
inc
sbb
cmp
inc
push
cs
sbb
jae
push
mov
mov
push
mov
cmp
in
stos
push
inc
insb
fisttpl
test
andw
popf
es
clc
mov
mov
sub
inc
mov
shlb
pop
ss
pusha
push
loope
cmp
mov
cmp
in
mov
xchg
pusha
out
je
dec
dec
sbb
bnd
in
stos
mov
cmp
pop
mov
loope
pusha
test
mov
xchg
cld
ds
in
in
and
clc
js
mov
pop
push
mov
sub
mov
push
mov
mov
sub
int3
int3
int3
add
add
repz
sub
js
shll
xchg
mov
mov
rcll
test
mov
add
cld
bnd
push
loope
sbb
js
push
sbb
js
jae
les
mov
pushf
andw
popf
cld
jae
dec
test
and
out
shrl
int3
int3
int3
add
add
bnd
test
je
inc
js
mov
js
sub
js
push
test
mov
mov
clc
ds
loope
pop
clc
mov
mov
xchg
push
shl
sbb
mov
sbb
mov
pushf
andw
popf
cld
jae
mov
xchg
mov
mov
pushf
andw
popf
jae,pt
and
mov
xchg
xor
cs
push
mov
stos
push
push
loope
js
pop
push
push
out
js
les
push
add
pushf
andw
popf
ss
pop
push
push
clc
sub
cmp
cmp
xor
inc
sub
repnz
cs
mov
push
les
sbb
sbb
mov
test
jae
insb
sarb
mov
add
add
je
push
push
ss
xchg
cld
ret
sbb
push
out
shll
add
leave
cld
bnd
shll
cmp
push
mov
je
pop
push
stos
inc
sbb
ret
cld
jmp
rcll
push
inc
and
mov
out
pusha
out
les
cmp
pushf
andw
popf
es
mov
push
mov
mov
mov
xchg
mov
mov
es
mov
rcrl
xchg
je
rcl
pop
les
lret
pushl
ss
inc
xchg
sbb
pop
test
stos
test
push
movzwl
pushf
andw
popf
es
pusha
js
mov
clc
xchg
sub
dec
cli
push
pushf
andw
popf
jae,pn
test
stos
xchg
push
in
sbb
push
cmp
loop
nop
bnd
clc
mov
mov
dec
je
je
sbb
dec
sub
cmp
push
push
push
push
add
pushf
andw
popf
jae,pt
mov
push
xchg
mov
sbb
ss
stos
sbb
js
shl
stos
pop
sub
push
mov
mov
and
mov
push
push
es
nop
lea
xchg
ss
push
xchg
push
je
stos
in
loop
int3
int3
add
add
mov
ss
jmp
mov
clc
mov
sub
xchg
push
stos
js
clc
push
mov
je
or
pusha
mov
mov
jae
sbb
xchg
inc
inc
js
mov
xchg
pop
pop
inc
in
mov
imul
add
repz
mov
xchg
mov
out
mov
les
push
mov
add
nop
bnd
mov
clc
inc
sbb
je
mov
xchg
int3
int3
int3
add
add
push
pushf
andw
popf
jae,pn
push
push
out
mov
out
mov
lock
add
bnd
xchg
sbb
in
mov
jae
mov
jmp
pushf
andw
popf
jae,pt
pop
js
xchg
xchg
pop
pusha
push
pushf
ss
mov
mov
pusha
mov
xchg
sub
mov
pop
mov
mov
sbb
mov
call
push
cld
repnz
xchg
ds
mov
cmp
pop
pop
mov
xchg
ds
mov
in
pusha
push
push
stos
xchg
mov
mov
js
clc
jo
add
pushf
andw
popf
jae,pn
clc
push
rorl
js
mov
push
jae
in
call
ds
js
xchg
mov
sarl
push
push
push
push
les
call
es
jmp
pusha
mov
clc
sbb
push
pop
push
les
js
js
rorl
and
incb
popf
jae,pt
les
cmp
sub
test
in
rorl
dec
int3
int3
add
add
dec
and
add
mov
mov
js
js
cmp
push
mov
push
clc
jae
sub
jns
negl
nop
repz
xchg
ss
sbb
je
test
shrl
xor
add
add
add
add
pusha
cmp
mov
mov
mov
pushf
andw
popf
es
mov
out
mov
dec
js
pop
mov
jbe
test
or
jmp
push
in
sbb
jae
in
les
mov
push
xchg
push
push
repnz
mov
xchg
cs
shll
sub
stos
sbb
xor
add
sbb
add
loope
jae
mov
je
mov
pop
mov
mov
pushf
andw
popf
jae,pt
les
sbb
loope
pop
mov
nop
nop
jmp
jae
push
js
stos
push
sub
js
sbb
pop
sub
pushf
andw
popf
repz
js
and
stos
and
out
sub
xlat
inc
pushf
andw
popf
es
mov
loope
xchg
shrl
add
cmp
ja
fbld
fs
push
repnz
lea
xchg
repz
mov
cmp
push
mov
in
loop
mov
bnd
loope
shrl
js
pusha
pop
mov
sar
shll
xor
add
repnz
xchg
es
push
mov
mov
mov
loope
dec
stos
pusha
decl
ds
jmp
les
mov
in
sub
mov
js
js
mov
adc
popa
pushf
andw
popf
es
push
jae
jae
sbb
push
and
sbb
mov
push
es
sub
mov
loope
and
test
pop
push
mov
js
clc
popf
imul
es
xchg
cs
push
and
mov
mov
stos
mov
and
add
andw
popf
es
stos
inc
mov
mov
mov
inc
je
in
sub
call
pushf
andw
popf
cld
jae
mov
mov
sbb
mov
clc
es
int3
int3
add
add
mov
cld
cld
repnz
xchg
cld
ret
stos
out
les
mov
and
pop
je
insb
push
nop
repz
xchg
es
sbb
dec
cmp
ficoms
ds
stos
xchg
cmp
mov
pusha
mov
push
mov
clc
and
lret
pushf
andw
popf
ss
mov
mov
pusha
mov
mov
mov
push
dec
ret
ds
mov
jae
roll
clc
mov
out
stos
push
push
mov
mov
push
xchg
add
pushf
andw
popf
ss
sub
push
mov
je
sbb
push
pushf
andw
popf
jae,pn
in
mov
and
mov
xchg
stos
mov
push
ss
es
ds
stos
xchg
rcl
test
loope
mov
stos
adc
push
cld
repnz
lea
xchg
repz
mov
rcll
mov
stos
je
popf
xor
mov
add
mov
out
js
and
and
sbb
xchg
mov
push
roll
sbb
cmpeqps
ss
push
js
clc
js
rcrl
js
cmp
cmp
sub
stos
clc
sub
and
add
mov
pause
repz
je
dec
in
cmp
pop
stos
mov
mov
mov
pusha
push
out
mov
test
int3
add
add
pop
pop
ss
mov
mov
sbb
mov
stos
mov
mov
je
cmpl
ss
lea
xchg
ss
shll
stos
mov
jmp
mov
les
stos
out
mov
loope
sub
js
push
je
out
mov
jmp
push
repz
xchg
repz
mov
mov
dec
and
pushf
andw
popf
bnd
push
test
sbb
xchg
push
dec
mov
pop
xor
dec
push
ds
push
push
shll
sbb
xchg
js
add
pushf
andw
popf
repz
clc
les
js
pop
test
xor
mov
cld
repnz
mov
pusha
loope
jae
sub
push
mov
mov
out
cmp
stos
dec
stc
lods
pushf
andw
popf
ss
push
js
mov
stos
and
mov
sbb
add
bnd
pop
mov
sub
cmp
sbb
loope
push
loope
stos
sbb
mov
xchg
push
sub
push
repz
xchg
ss
push
sbb
rcll
and
and
and
int3
int3
add
add
push
inc
cld
cld
es
push
mov
and
and
and
mov
loope
pusha
xchg
add
inc
pop
add
cmpsb
cmp
pushf
andw
popf
cld
jae
mov
shll
dec
mov
sbb
pushf
andw
popf
nop
jae
mov
and
mov
test
jae
sbb
test
repz
push
sbb
stos
mov
je
mov
stos
sub
in
and
icebp
cwtl
in
push
pop
push
cld
nop
lea
xchg
repz
je
mov
inc
mov
and
rclb
ja
ds
and
js
sbb
mov
je
sub
xchg
test
dec
sub
push
pushf
andw
popf
nop
jae
push
mov
loope
push
push
je
sbb
mov
pop
jne
cs
mov
dec
loope
stos
test
mov
pusha
push
mov
jae
test
add
inc
aad
add
pushf
andw
popf
jae,pn
jae
mov
push
mov
mov
js
mov
les
int3
int3
int3
add
add
jmp
dec
mov
inc
clc
out
jae
xchg
cmp
mov
je
mov
mov
lret
pop
pop
repz
js
out
sbb
pop
out
loope
xchg
roll
int3
add
add
pause
repz
xchg
rcrl
mov
mov
sbb
pop
test
mov
push
cs
mov
xchg
cld
ret
out
jae
pusha
in
cmp
push
sahf
push
cld
ss
and
loope
out
push
cmp
clc
in
mov
push
stos
mov
sbb
mov
pushf
andw
popf
repz
push
pop
stos
clc
dec
pop
je
mov
or
add
mov
cs
xchg
pusha
inc
js
js
test
push
dec
stos
js
mov
jmp
repz
andw
popf
bnd
mov
js
mov
mov
les
xor
adc
call
jne
push
ss
xchg
repz
loope
mov
and
add
cs
mov
mov
pop
dec
sbb
loope
js
je
push
mov
mov
cmp
cs
xchg
cs
sbb
sbb
fldcw
pop
pushf
andw
popf
ss
clc
mov
loope
push
sbb
je
les
test
bnd
xchg
mov
pusha
shll
sbb
fsubrs
cs
stos
and
mov
mov
sub
mov
pop
pusha
js
js
push
js
xchg
sbb
in
xor
push
ss
cld
lea
xchg
cs
cmp
mov
jae
pop
stos
sbb
add
repz
mov
pop
test
pop
stos
shrl
mov
mov
push
stos
add
add
adc
push
add
sub
jae
les
push
mov
out
push
dec
pop
push
push
js
js
push
push
add
ss
sarl
mov
js
xchg
pusha
mov
je
mov
and
nop
es
push
stos
mov
pop
cmp
push
mov
and
js
push
rcll
adc
mov
pushf
andw
popf
nop
jae
stos
clc
mov
mov
rorl
push
xchg
call
cs
jmp
je
mov
mov
shll
pusha
sbb
push
mov
clc
sub
sarl
ss
mov
push
out
clc
pop
sbb
mov
js
sbb
ss
jae
stos
and
mov
push
js
push
stos
js
mov
mov
stos
mov
push
push
ds
lea
xchg
ss
test
mov
loope
js
push
mov
stos
xchg
andl
jae
stos
push
clc
and
stos
cmp
push
clc
je
add
pushf
andw
popf
ss
push
mov
sbb
mov
push
test
mov
push
mov
pushf
andw
popf
jae,pt
pusha
xchg
jae
je
test
out
loope
int3
int3
int3
add
add
pushf
andw
popf
bnd
loope
jae
mov
and
cmp
mov
rep
push
ss
mov
xchg
cs
loope
mov
xchg
xchg
loopne
cld
bnd
push
push
mov
inc
push
js
xchg
sbb
les
dec
fisubrl
incb
popf
ss
sbb
mov
xchg
mov
mov
mov
pushf
andw
popf
es
mov
rcll
mov
pop
xchg
stos
insb
pop
test
ds
sbb
and
push
mov
mov
je
mov
and
mov
sub
nop
es
sbb
shll
push
mov
clc
rorl
push
mov
push
ror
jle
push
ds
mov
xchg
ss
push
shll
les
push
push
mov
je
js
popa
pushf
andw
popf
jae,pn
xchg
loope
mov
mov
xchg
popa
cld
es
je
mov
dec
jae
mov
push
push
xchg
mov
out
pop
mov
push
repz
lea
xchg
es
jae
js
pop
sbb
dec
je
mov
int3
int3
int3
add
add
lret
add
mov
les
andw
popf
nop
jae
mov
rcrl
test
roll
rolb
dec
cmp
bnd
les
push
xchg
pop
mov
xchg
js
stos
sbb
call
cs
xchg
nop
ret
sbb
cmp
mov
push
mov
mov
pushf
andw
popf
nop
jae
mov
mov
out
mov
xchg
sub
stos
xchg
movsb
popf
xchg
push
pushf
andw
popf
ss
push
loope
mov
stos
push
mov
pop
mov
fsubs
bnd
mov
mov
push
mov
jae
dec
roll
push
mov
mov
xor
int3
int3
add
add
rol
int3
int3
int3
add
add
pushf
andw
popf
es
dec
pop
mov
xchg
js
sbb
or
push
pushf
andw
popf
repz
pusha
loope
test
js
push
push
mov
mov
dec
js
add
cltd
adc
add
add
cld
pushl
test
sub
mov
repz
jae
js
sbb
js
mov
jae
dec
js
push
js
int3
int3
int3
add
add
mov
sahf
fwait
bnd
in
sbb
test
xchg
xchg
push
xchg
push
fnstcw
lcall
add
and
add
push
loope
xchg
test
mov
pushf
andw
popf
ss
mov
mov
push
out
push
push
js
sarl
add
add
shr
pushf
andw
popf
es
push
mov
stos
js
mov
mov
stos
pushf
andw
popf
cld
jae
push
mov
mov
xchg
stos
push
pop
stos
stos
js
leave
repnz
pushf
andw
popf
jae,pt
mov
in
shll
push
xchg
mov
pushf
andw
popf
cld
jae
push
and
push
js
clc
in
rcll
mov
xchg
mov
es
jmp
sbb
jae
stos
push
clc
in
push
push
mov
xchg
les
jmp
lea
xchg
nop
ret
pusha
mov
sbb
sbb
mov
push
es
xchg
repz
mov
rorl
pusha
and
mov
cs
jmp
xchg
push
pusha
pop
js
push
mov
cmp
mov
push
push
cmp
nop
es
jmp
out
sbb
cmp
and
xchg
push
rcrl
mov
mov
andw
popf
jae,pt
sbb
push
stos
mov
pop
loope
sbb
repnz
jmp
inc
sub
dec
pop
stos
mov
mov
xchg
stos
and
mov
push
loope
and
pop
xor
nop
bnd
les
mov
out
stos
mov
cmp
push
jae
out
sbb
mov
insb
sti
pushl
mov
mov
push
mov
shl
pusha
mov
shll
into
mov
pushf
andw
popf
nop
jae
mov
in
push
pop
and
push
push
inc
add
add
or
test
andw
popf
jae,pt
test
and
push
shrl
stos
mov
pushf
andw
popf
cld
jae
mov
mov
push
cmp
rcl
dec
sbb
xchg
call
push
cs
es
xchg
cld
ret
je
push
js
js
push
sbb
push
pop
cmp
ljmp
lock
decl
clc
mov
push
stos
sbb
out
sarl
mov
add
call
and
add
push
add
push
cmp
mov
push
and
les
roll
sbb
mov
repz
push
mov
les
dec
and
loope
mov
inc
stos
pop
jae
iret
int3
int3
int3
add
add
test
add
add
es
xchg
cs
mov
loope
test
dec
pop
push
sbb
stos
push
nop
cs
xchg
ds
in
mov
push
pop
stos
pop
mov
sbb
int3
int3
int3
add
add
push
push
ss
repz
xchg
repz
jae
mov
sbb
stos
mov
mov
dec
inc
push
repnz
lea
xchg
cld
ret
mov
mov
stos
jae
mov
test
mov
dec
push
ds
lea
xchg
cs
push
loope
pusha
stos
mov
pop
push
push
pop
xchg
into
jmp
ds
mov
mov
mov
pusha
stos
mov
sbb
pusha
push
push
xor
data16
sbb
jge
shll
add
es
push
pop
mov
jae
push
cmp
pop
pop
pop
jae
xchg
add
pushf
andw
popf
bnd
pop
in
out
les
pop
push
push
pushf
andw
popf
es
shl
inc
sub
je
les
mov
push
in
arpl
and
add
jmp
mov
cmp
mov
mov
push
mov
andl
jae
sbb
push
inc
push
mov
in
push
add
pushf
andw
popf
jae,pt
and
push
rcl
stos
push
mov
js
adc
andl
jae
loope
mov
in
inc
xchg
mov
push
js
rep
ss
loope
dec
shll
push
push
mov
mov
push
ret
rep
pushf
andw
popf
nop
jae
pop
sbb
mov
mov
xchg
and
clc
je
arpl
int3
int3
add
add
push
ss
xchg
es
inc
push
sbb
mov
out
dec
out
push
pushf
andw
popf
es
push
xchg
xchg
cmp
jae
push
rcll
shr
pushf
andw
popf
ss
mov
mov
pop
les
mov
push
pop
pushf
andw
popf
es
js
pop
clc
pop
in
clc
je
mov
mov
test
int3
add
add
stos
ss
mov
loope
dec
clc
mov
pop
out
js
xchg
sbb
test
fdivr
add
push
repnz
nop
lea
xchg
cs
xchg
pop
mov
mov
in
out
dec
dec
test
push
repz
xchg
cld
ret
and
pusha
pusha
stos
push
push
pop
mov
cmp
das
cmp
ss
test
xchg
stos
stos
test
push
clc
loope
jb
and
add
cs
cmp
sbb
mov
js
mov
loope
roll
andl
jae
js
push
test
sarl
inc
inc
js
push
push
cmp
mov
bnd
push
ss
nop
lea
xchg
ss
js
push
cmp
js
mov
cs
jmp
push
shll
mov
out
sbb
stos
out
mov
stos
cs
pushf
andw
popf
nop
jae
mov
sarl
in
inc
stos
mov
in
dec
je
xor
jmp
push
push
pop
pop
les
xchg
mov
mov
and
mov
mov
mov
pushf
andw
popf
nop
jae
inc
mov
shll
pop
add
icebp
pushf
andw
popf
ss
js
push
stos
push
pop
sbb
shr
call
push
ds
xchg
bnd
push
out
sub
xchg
cmp
jg
add
xor
ds
jmp
push
mov
roll
clc
js
push
mov
push
pop
xchg
movsl
js
xor
push
ss
xchg
ds
pusha
js
inc
js
mov
push
mov
ss
int3
int3
add
add
iret
decl
pushf
andw
popf
repz
dec
mov
mov
loope
js
enter
inc
xor
push
cld
es
lea
xchg
cld
ret
and
mov
pusha
sbb
div
nop
bnd
pop
cmp
sbb
mov
les
xchg
pushf
andw
popf
jae,pn
push
sbb
test
les
lock
leave
repz
ss
push
push
stos
mov
loope
pusha
je
stos
dec
js
out
pop
les
add
cld
es
js
out
mov
mov
dec
push
test
js
test
xchg
ss
es
js
stos
clc
push
sarl
shl
out
loope
shll
add
pushf
andw
popf
bnd
sbb
inc
mov
push
pusha
and
shrl
es
sarl
mov
pusha
jae
mov
js
pop
inc
inc
push
ds
pushf
andw
popf
ss
in
rcrl
sub
push
cmp
and
inc
xchg
insl
mov
jmp
mov
mov
xchg
xchg
in
stos
dec
sbb
mov
dec
jae
dec
jle
inc
xor
pushf
andw
popf
es
push
inc
sub
test
sbb
or
add
xor
andw
popf
cld
jae
mov
in
push
jae
pop
mov
push
test
insl
mov
pop
cld
nop
jmp
loope
stos
inc
rcrl
push
rcll
push
xchg
sbb
mov
push
repnz
ds
xchg
repz
sbb
and
push
js
and
push
push
cs
xchg
ds
pop
mov
jae
sbb
pushf
andw
popf
bnd
stos
push
pop
mov
mov
clc
cmp
stos
push
js
int3
int3
int3
add
add
add
nop
cld
mov
xchg
repz
and
mov
push
test
stos
sbb
ss
mov
out
mov
jae
rcl
js
shrl
stos
in
push
pusha
test
out
xor
push
repnz
xchg
cs
mov
mov
mov
in
mov
mov
pushf
andw
popf
jae,pt
sbb
mov
pusha
stos
pusha
js
push
sarl
push
nop
ds
stos
sub
loope
clc
dec
out
dec
push
mov
mov
mov
mov
shrl
lahf
int3
int3
int3
add
add
dec
clc
add
pop
jmp
pushf
andw
popf
bnd
xchg
mov
push
js
lcall
incb
popf
nop
jae
xchg
cmp
pusha
push
xchg
mov
mov
int3
int3
int3
add
add
mov
cs
jmp
out
mov
mov
push
in
pusha
test
cmp
xchg
js
pop
push
pushf
andw
popf
cld
jae
mov
mov
push
sbb
sbb
roll
cmp
andw
popf
es
and
push
sbb
xchg
sub
cld
jmp
dec
jae
push
js
mov
xchg
push
out
call
jge
int3
int3
int3
add
add
andw
popf
nop
jae
push
mov
in
push
mov
mov
pop
push
stos
add
cld
repz
mov
pusha
stos
js
push
inc
mov
mov
mov
stos
js
sub
mov
sbb
call
ss
test
in
mov
pop
loope
mov
shll
cmp
add
ds
xchg
cs
cmp
loope
mov
cmp
dec
pushf
dec
add
push
es
cs
xchg
bnd
inc
je
and
mov
stos
roll
add
or
add
in
dec
mov
test
andw
popf
es
sub
mov
mov
out
xchg
add
cld
es
pop
clc
dec
shrl
mov
mov
mov
pop
pusha
mov
xchg
mov
cld
es
jmp
cmp
push
js
js
js
je
xchg
js
pop
loope
dec
mov
pushf
andw
popf
bnd
in
dec
xchg
out
and
roll
mov
push
nop
repnz
lea
xchg
es
inc
mov
loope
mov
loope
xchg
or
pushf
andw
popf
repz
stos
mov
mov
mov
pusha
je
pop
push
repnz
xchg
repz
mov
stos
mov
sub
mov
andw
popf
bnd
js
sub
mov
loope
xchg
cmp
pusha
out
leave
ds
mov
mov
mov
loope
mov
clc
cmp
stos
mov
pop
test
stos
mov
dec
push
es
jae
roll
mov
mov
and
cmp
stos
enter
jmp
ss
xchg
repz
test
rcll
test
inc
and
mov
clc
cltd
stc
mov
andw
popf
ss
in
mov
mov
jae
inc
stos
clc
dec
xchg
add
pushf
andw
popf
jae,pt
pusha
mov
push
mov
rcl
mov
js
cmp
ds
push
mov
je
push
push
mov
loope
sbb
push
jne
push
ds
xchg
bnd
clc
dec
xchg
pushf
andw
popf
cld
jae
push
xchg
loope
push
shll
cld
bnd
mov
mov
sarl
je
mov
stos
mov
mov
js
push
dec
push
pushf
andw
popf
ss
push
les
pusha
push
les
xchg
pushf
andw
popf
ss
and
les
rcl
mov
push
xchg
push
pause
bnd
xchg
sub
and
in
jae
xchg
push
push
js
pop
mov
mov
leave
mov
dec
cmp
nop
jmp
mov
clc
mov
cmp
mov
in
mov
sub
mov
stos
mov
pop
jmp
ds
in
xchg
sbb
js
mov
push
cmp
mov
shll
cmpsl
idiv
lcall
add
loopne
pushl
xchg
mov
out
mov
scas
push
pushf
andw
popf
cld
jae
sbb
shrl
dec
mov
push
and
mov
fdivrp
push
ss
cld
lea
xchg
ss
dec
stos
push
push
mov
cmp
push
mov
add
decb
cs
mov
xchg
ds
push
mov
mov
inc
rcrl
js
inc
jns
add
pushf
andw
popf
nop
jae
pop
push
mov
mov
sub
sub
pop
push
mov
add
mov
mov
cs
push
push
mov
mov
push
pop
roll
push
test
shrl
pushf
andw
popf
jae,pt
test
sbb
sbb
cmp
je
stos
push
repz
js
mov
stos
js
les
mov
pop
dec
js
push
push
es
repz
xchg
repz
test
mov
push
sub
sub
push
rcrl
notb
nop
repz
mov
push
and
js
cmp
dec
pop
mov
clc
mov
sbb
push
popf
and
dec
es
dec
rcll
js
cmp
mov
mov
and
test
dec
mov
sbb
test
repz
stos
pop
push
cmp
sbb
mov
mov
mov
inc
push
cmp
pop
push
cld
repnz
xchg
ds
mov
clc
clc
push
inc
jae
clc
jae
mov
pop
pushf
andw
popf
nop
jae
stos
push
mov
pusha
je
js
js
mov
cmp
push
push
repz
lea
xchg
cs
mov
roll
out
mov
mov
shrl
mov
mov
add
dec
sub
mov
sub
sbb
xchg
shll
int3
int3
int3
add
add
mov
push
pushf
andw
popf
es
test
push
roll
sub
js
push
push
mov
aas
mov
pushf
andw
popf
nop
jae
and
pusha
sub
push
sbb
mov
mov
repz
jae
mov
xchg
clc
in
js
stos
xchg
cmp
stos
xor
pushf
andw
popf
bnd
push
les
js
js
and
xchg
shr
push
ss
nop
lea
xchg
cld
ret
pop
mov
push
cmp
xchg
inc
mov
pusha
pushf
andw
popf
es
mov
push
push
mov
inc
mov
pop
dec
jae
sbb
mov
pushf
andw
popf
jae,pt
inc
les
pusha
sarl
movl
int3
int3
add
add
inc
nop
es
mov
loope
push
push
in
js
shrl
jae
js
push
test
les
int3
int3
add
add
test
push
ss
xchg
bnd
mov
inc
mov
push
shll
push
push
ss
lea
xchg
cld
ret
mov
rcl
mov
je
mov
push
nop
cld
nop
mov
xchg
es
js
mov
test
jae
push
mov
mov
push
ss
xchg
cs
mov
and
mov
mov
in
loope
fwait
call
ds
les
dec
pop
shll
mov
mov
mov
add
add
ds
js
push
mov
xchg
je
pop
mov
push
mov
adc
push
repnz
lea
xchg
nop
ret
pop
mov
test
pop
xchg
les
push
adc
or
add
js
in
push
cmp
sar
mov
mov
rcl
mov
cmp
cld
bnd
push
stos
loope
and
jae
dec
mov
inc
and
pop
mov
xor
andw
popf
ss
je
mov
push
push
js
stos
mov
test
test
pop
repnz
nop
jmp
mov
cmp
shll
mov
push
push
mov
push
push
pop
cmp
mov
mov
xchg
into
mov
pushf
andw
popf
es
sub
dec
mov
in
stos
push
out
les
xor
test
add
cs
jmp
mov
mov
mov
pusha
sbb
js
clc
shll
cs
jmp
shll
js
loope
push
mov
mov
mov
loope
nop
adc
and
incb
popf
jae,pn
mov
and
in
sbb
push
cmp
cmp
add
int3
int3
int3
add
add
bnd
push
mov
mov
mov
mov
sbb
sbb
shll
ljmp
incb
popf
cld
jae
mov
clc
mov
loope
stos
mov
pop
stos
sub
inc
xor
repz
cs
in
mov
sub
mov
js
pop
sbb
mov
mov
movsb
or
and
ss
pop
les
push
clc
mov
inc
clc
in
pusha
les
test
sbb
mov
cld
nop
bnd
in
mov
cmp
les
mov
mov
mov
shrl
cmp
nop
jmp
dec
stos
mov
mov
test
shl
push
dec
mov
stos
xchg
repz
pop
shl
shll
sbb
mov
xchg
in
pop
push
push
dec
popl
pop
and
cs
jmp
mov
les
mov
sbb
sbb
sbb
ret
repz
pushl
stos
mov
pop
push
sub
clc
jae
push
mov
stos
mov
stos
cmp
push
push
ds
clc
sub
mov
sub
inc
je
mov
xchg
pusha
push
sti
pop
pushf
andw
popf
ss
test
mov
mov
dec
out
pusha
mov
push
rep
nop
cld
jmp
out
rcl
sub
mov
pop
mov
out
mov
test
pop
mov
rcll
ds
xchg
cs
and
cmp
mov
push
dec
push
push
je
pop
sbb
add
add
push
pushf
andw
popf
repz
mov
rorl
xchg
push
rcll
jle
add
bnd
out
mov
js
les
mov
cmp
js
sbb
sbb
inc
add
mov
les
mov
and
mov
mov
dec
loope
inc
test
mov
mov
add
mov
int3
int3
add
add
andl
jae
push
les
shrl
js
pop
xlat
jne
pushf
andw
popf
bnd
mov
loope
inc
js
int3
int3
int3
add
add
mov
ds
loope
push
stos
push
mov
push
inc
pusha
push
js
rcrl
pusha
sbb
mov
xchg
cld
jl
repnz
pushf
andw
popf
jae,pn
shll
loope
les
fildl
clc
pushf
andw
popf
jae,pt
pusha
out
mov
pop
js
and
je
cmp
push
pushf
andw
popf
es
loope
sbb
mov
and
mov
shll
test
push
cld
es
xchg
es
les
xchg
mov
pushf
andw
popf
repz
pop
js
dec
mov
les
mov
pop
ror
cld
ds
stos
xchg
je
je
mov
mov
push
mov
push
xchg
mov
cs
push
cs
xchg
nop
ret
push
mov
dec
mov
mov
push
pop
pop
repz
mov
pop
je
mov
push
mov
pusha
mov
dec
in
shll
push
in
sub
test
bound
add
call
push
repnz
ds
xchg
cld
ret
mov
loope
sbb
mov
jmp
or
add
push
mov
repz
jmp
sbb
push
mov
pop
sbb
jae
push
mov
mov
sub
pushf
andw
popf
jae,pn
jae
push
inc
push
loope
test
shr
clc
lahf
pusha
pushf
andw
popf
jae,pt
and
inc
mov
dec
push
les
les
xorb
orps
repz
shll
mov
push
sbb
pop
sar
pop
xchg
js
sub
stos
and
mov
andl
jae
mov
push
pop
clc
js
and
mov
push
mov
cld
cld
jmp
cmp
push
pop
pop
shl
in
mov
push
pop
in
cmp
sbb
add
add
cmpl
repz
jmp
js
mov
mov
loope
dec
jae
clc
loope
stos
jo
mov
pushf
andw
popf
es
mov
mov
mov
pop
xchg
add
icebp
adc
jmp
roll
loope
sbb
mov
mov
mov
shll
int3
add
add
push
repz
mov
mov
mov
cmp
loope
jae
out
pop
clc
stos
clc
mov
lea
cs
repz
mov
jae
loope
stos
les
stos
je
js
ljmp
shl
jmp
mov
mov
mov
sub
in
loope
js
shl
mov
in
mov
shll
int3
int3
add
add
test
cs
xchg
inc
mov
and
mov
cmp
dec
pop
decl
bnd
stos
js
rcrl
push
stos
pop
js
push
sub
je
clc
mov
sbb
mov
pushf
andw
popf
bnd
pop
mov
and
xchg
sbb
cmp
add
add
add
pushf
andw
popf
ss
jae
and
push
xchg
js
mov
push
repnz
xchg
repz
loope
push
and
les
sahf
lea
and
incb
popf
cld
jae
mov
stos
mov
clc
clc
jae
mov
jne
nop
bnd
sbb
les
sub
mov
shrl
js
sub
decl
nop
repnz
xchg
ds
mov
mov
push
push
push
stos
cmp
mov
int3
add
add
mov
mov
js
pusha
push
and
xchg
clc
les
mov
xchg
sbb
add
pushf
andw
popf
bnd
push
out
stos
push
js
sbb
pop
pushf
andw
popf
nop
jae
push
in
push
and
mov
dec
loope
loope
pusha
cmp
xchg
push
cmp
cld
bnd
les
pop
xchg
rcll
shrl
pop
xchg
add
lahf
sub
pushf
andw
popf
ss
stos
out
push
push
xchg
sbb
add
es
mov
dec
sbb
in
les
mov
pusha
stos
sarl
adc
add
int3
int3
int3
add
add
push
nop
repnz
xchg
nop
ret
stos
and
mov
push
les
push
mov
addr16
int3
int3
add
add
add
cld
repz
mov
cmp
mov
sbb
in
roll
push
and
jmp
pusha
out
mov
xchg
mov
mov
mov
pop
je
ds
push
ss
repz
xchg
ds
mov
loope
les
mov
xchg
jne
outsb
lods
pushf
andw
popf
jae,pn
js
pusha
push
mov
mov
loope
rclb
aam
dec
inc
int3
int3
int3
add
add
sbb
pushf
andw
popf
jae,pn
sub
js
push
mov
stos
clc
dec
shll
je
cld
ds
jmp
mov
js
mov
inc
jae
loope
and
pop
out
fldcw
test
repz
mov
rcrl
and
dec
shll
push
mov
sub
mov
shll
xor
cld
cs
xchg
es
inc
jae
sar
clc
je
roll
mov
push
nop
es
jmp
rcrl
pop
sub
push
pop
sub
cmp
mov
mov
xchg
pop
pushf
andw
popf
es
mov
xchg
sbb
clc
push
push
int3
repz
rorl
push
nop
nop
repnz
xchg
repz
push
rcrl
and
inc
inc
roll
les
add
ljmp
clc
and
loope
push
loope
push
xchg
sbb
andw
popf
cld
jae
mov
cmp
out
xchg
stos
sar
test
es
jmp
mov
mov
test
in
stos
push
mov
je
push
pusha
js
inc
roll
add
cs
mov
xchg
nop
ret
push
test
push
out
shll
out
inc
inc
push
nop
ss
xchg
nop
ret
dec
js
les
mov
jbe
pushf
andw
popf
ss
xchg
mov
mov
push
pop
stos
cmp
arpl
andw
popf
repz
mov
push
je
xchg
push
in
out
ja
int3
int3
add
add
inc
push
cld
cld
ss
xchg
es
les
clc
mov
xchg
das
notl
push
cs
xchg
cs
mov
dec
mov
shll
int3
int3
int3
add
add
arpl
add
add
pushf
andw
popf
jae,pt
push
les
and
pop
int3
int3
int3
add
add
negl
add
sar
pushl
mov
pusha
out
mov
pusha
js
push
es
mov
pusha
and
clc
loope
mov
je
clc
out
mov
mov
pusha
mov
imul
andl
jae
shll
xchg
js
dec
es
pop
js
out
mov
stos
je
push
stos
les
xchg
out
or
pushf
andw
popf
bnd
jae
mov
sub
rcll
shll
ret
andw
popf
nop
jae
js
sbb
mov
push
pop
out
js
out
or
pusha
and
repnz
xchg
cs
pop
push
dec
mov
loope
jae
mov
lcall
add
push
add
sbb
sub
les
sub
add
pushf
andw
popf
jae,pt
mov
shrl
je
clc
jae
popa
add
loopne
mov
bnd
loope
rol
push
inc
mov
je
jae
mov
loope
rorl
inc
xchg
add
add
repz
mov
pop
inc
clc
shl
js
mov
mov
and
stos
push
shll
andw
popf
nop
jae
mov
shll
xchg
push
mov
in
sbb
add
push
cs
xchg
bnd
sub
pusha
xchg
mov
les
sub
jne
cld
cs
stos
js
push
push
mov
test
and
loope
mov
stos
out
les
and
push
repnz
xchg
nop
ret
cmp
inc
xchg
int3
int3
int3
add
add
add
add
pushf
andw
popf
jae,pn
mov
je
mov
les
mov
js
sbb
push
cs
xchg
cld
ret
test
sarl
sbb
clc
loope
cwtl
jns
mov
add
ds
nop
jmp
push
clc
pusha
and
mov
mov
inc
mov
js
mov
test
add
mov
mov
bnd
push
xchg
clc
sub
stos
sbb
cmp
loope
push
inc
pop
leave
adc
int3
int3
add
add
ss
jmp
stos
cmp
mov
loope
push
pop
pusha
mov
jae
pusha
mov
jae
push
push
aad
imul
repz
out
mov
test
sbb
rorl
stos
shll
shll
pushf
andw
popf
jae,pt
xchg
and
out
jae
sbb
xchg
push
push
cs
lea
xchg
nop
ret
shll
stos
in
clc
stos
sub
movsl
inc
push
ds
pop
les
xchg
stos
mov
xchg
shrl
xchg
push
pushf
andw
popf
cld
jae
push
mov
inc
push
mov
shl
je
js
notb
andw
popf
es
shll
in
mov
mov
pusha
js
iret
add
nop
repz
inc
jae
shll
shll
pusha
mov
mov
and
push
sub
andw
popf
ss
mov
clc
push
mov
js
jae
push
pusha
pop
ds
pushf
andw
popf
es
les
stos
pusha
inc
test
jne
outsb
test
push
nop
cld
repnz
xchg
es
push
sbb
loope
stos
sub
mov
push
call
cs
cmp
les
jae
out
sbb
dec
mov
add
add
cs
xchg
cld
ret
mov
mov
pusha
js
inc
stc
add
ja
add
pushf
andw
popf
nop
jae
jae
inc
pusha
mov
je
push
mov
mov
push
cld
repnz
xchg
bnd
push
xchg
xchg
fimuls
cld
jmp
les
sbb
les
roll
mov
mov
daa
cmp
pushf
andw
popf
es
stos
mov
shll
xchg
testl
bnd
mov
cmp
je
inc
xchg
je
je
in
pop
pop
iret
test
cld
bnd
sbb
push
les
les
pusha
pop
xchg
pop
jne
pushf
andw
popf
jae,pn
test
cmp
js
and
and
mov
push
cs
ds
xchg
es
pop
sbb
jae
pop
mov
xchg
je
ja
pushf
andw
popf
jae,pt
roll
dec
pusha
xchg
push
in
sarl
push
repz
xchg
les
xchg
les
in
dec
pop
mov
push
mov
add
jno
mov
bnd
les
sbb
les
cmp
mov
loope
shll
cs
and
push
sub
les
clc
mov
mov
mov
pusha
jmp
stc
or
bnd
mov
les
jae
xchg
xchg
stos
sarl
mov
adc
popa
pushf
andw
popf
repz
push
mov
pop
stos
push
mov
pop
push
push
mov
pop
lods
cld
bnd
js
pusha
mov
roll
mov
jae
sbb
pop
lahf
int3
int3
int3
add
add
stos
cs
js
sbb
in
sub
mov
js
loope
shrl
sub
mov
pop
pushf
andw
popf
nop
jae
mov
shll
je
and
pop
shll
push
pop
mov
pushf
andw
popf
jae,pn
mov
pusha
pop
shll
clc
mov
and
push
ds
mov
xchg
cs
loope
js
out
mov
mov
sbb
mov
pushf
andw
popf
jae,pn
rol
push
push
je
push
sbb
xchg
rcrb
add
fdivr
call
push
push
shll
mov
js
imul
add
add
cmp
iret
pop
es
roll
js
mov
mov
push
rcll
in
test
lret
ss
js
shll
mov
xchg
js
push
cmp
les
cld
cld
cld
lea
xchg
bnd
roll
mov
mov
stos
js
add
pushf
andw
popf
repz
js
and
test
stos
sbb
mov
mov
shr
push
cld
repnz
xchg
nop
ret
pusha
stos
mov
stos
sbb
iret
mov
pushf
andw
popf
bnd
mov
and
stos
mov
mov
mov
mov
mov
cs
push
xchg
shll
les
mov
fiaddl
repz
sub
inc
cmp
les
in
test
mov
mov
mov
mov
andw
popf
cld
jae
shrl
pop
pop
roll
and
das
int3
int3
int3
add
add
add
idiv
decl
clc
shll
js
je
pop
mov
dec
cmpl
mov
pushf
andw
popf
nop
jae
dec
mov
sbb
fnstsw
add
add
hlt
jmp
test
mov
push
test
xchg
je
pushf
andw
popf
bnd
push
in
js
mov
jae
or
es
mov
xchg
mov
stos
mov
jae
pop
mov
aam
lret
add
pushf
andw
popf
cld
jae
push
pop
xchg
push
push
mov
push
out
stos
in
xor
xor
push
repnz
lea
xchg
cs
les
jae
mov
inc
adc
xor
ss
clc
push
jae
pusha
cmp
push
pusha
inc
mov
stos
jae
mov
js
mov
call
ds
xchg
push
and
mov
in
push
mov
js
sbb
andw
popf
repz
mov
pop
push
mov
push
mov
js
mov
and
repnz
mov
push
les
je
out
sbb
xchg
int3
int3
int3
add
add
add
jg
adc
push
repnz
ss
xchg
nop
ret
stos
sbb
out
out
mov
mov
roll
fdivs
pushl
bnd
pop
out
and
mov
cmp
mov
je
pusha
js
pop
clc
mov
fwait
push
nop
cs
mov
pop
pusha
push
mov
push
xchg
pop
stos
jmp
ss
xchg
cs
mov
pop
cmp
stos
pop
push
mov
mov
mov
and
incb
popf
bnd
mov
pop
mov
and
js
shll
mov
pushf
andw
popf
bnd
mov
mov
push
sbb
mov
loope
push
imul
pushf
andw
popf
cld
jae
rorl
pop
mov
pop
mov
test
pop
je
dec
cwtl
lcall
cs
jae
stos
in
pusha
push
out
rcrl
test
out
stos
test
or
add
pushf
andw
popf
jae,pt
push
xchg
xchg
sub
je
fstpt
push
sub
ss
mov
test
in
push
mov
push
in
sbb
sub
dec
push
dec
clc
es
ds
test
pop
mov
rcll
mov
mov
out
pop
in
mov
jae
shl
mov
scas
enter
lret
pushl
mov
push
mov
mov
mov
mov
mov
in
mov
jmp
pushf
andw
popf
repz
out
stos
mov
xchg
sub
push
je
xchg
andl
jae
mov
mov
pusha
stos
push
roll
incl
add
ds
xchg
bnd
push
stos
mov
les
push
loope
mov
loop
ss
les
xchg
mov
pop
mov
jae
push
cld
nop
jmp
stos
loope
and
mov
js
inc
dec
les
sub
je
pop
mov
cld
nop
jmp
push
push
loope
dec
out
shrl
loope
cmp
push
loope
inc
xor
add
jns
add
add
repnz
xchg
cld
ret
mov
pusha
stos
mov
push
cmp
mov
lock
cld
lea
xchg
repz
loope
sub
in
and
mov
push
stos
sub
shrl
cs
js
push
xchg
push
mov
mov
and
sbb
inc
adc
ds
mov
js
cmp
shll
inc
clc
push
sbb
clc
imul
lcall
add
aad
pushl
test
test
pop
decl
push
ds
nop
mov
xchg
es
loope
mov
shll
pusha
mov
add
nop
jmp
clc
dec
sbb
jae
sbb
inc
xchg
jge
pushf
andw
popf
ss
push
jae
shll
dec
cmp
data16
int3
int3
add
add
popf
loopne
jl
andw
popf
repz
pop
mov
xchg
loope
mov
pop
mov
pushf
andw
popf
ss
in
mov
mov
stos
mov
loope
cmp
push
das
pusha
pushf
andw
popf
bnd
sbb
xchg
stos
jae
sbb
push
test
cld
jmp
js
push
stos
test
stos
loope
push
loope
mov
sbb
stos
int3
int3
int3
add
add
ss
jmp
mov
mov
pop
xchg
and
in
xchg
push
jae
mov
jae
push
nop
repz
xchg
ss
and
stos
push
mov
mov
js
mov
jae
int3
int3
int3
add
add
push
pushf
andw
popf
jae,pn
mov
sbb
mov
in
pop
mov
es
repz
and
loope
jae
push
les
mov
mov
mov
sub
into
call
pushf
andw
popf
es
push
sar
js
shll
mov
add
pushf
andw
popf
jae,pn
test
mov
mov
pop
rcl
push
mov
nop
cs
mov
mov
js
js
xchg
pusha
push
xchg
mov
sbb
repz
andw
popf
cld
jae
stos
test
inc
dec
jae
inc
sbb
arpl
int3
int3
add
add
jp
jmp
xchg
mov
xchg
sub
sbb
push
repnz
xchg
ds
mov
stos
mov
stos
and
mov
mov
or
int3
add
add
cs
les
mov
js
cmp
mov
mov
jae
cmpsl
pop
push
ds
xchg
nop
ret
in
xchg
mov
cmp
and
sbb
push
mov
nop
repz
xchg
mov
sub
test
sub
pop
out
inc
test
sub
mov
jmp
pop
push
mov
push
push
roll
pop
dec
mov
out
dec
cmp
pause
jmp
mov
jae
js
mov
cmp
sub
mov
push
pop
dec
push
push
repz
lea
xchg
es
mov
stos
xchg
mov
xchg
clc
push
dec
mov
pushf
andw
popf
es
push
mov
dec
and
sub
loope
and
sub
push
add
add
push
es
lea
xchg
cs
sbb
stos
sub
js
or
andw
popf
ss
and
js
xchg
loope
les
inc
and
repz
es
mov
sbb
sbb
mov
les
xor
and
incb
popf
nop
jae
mov
out
mov
js
clc
xchg
inc
push
cs
xchg
cs
inc
mov
mov
push
sbb
les
cld
repnz
xchg
repz
push
jae
clc
out
js
mov
xchg
pushf
andw
popf
bnd
mov
dec
les
push
in
mov
add
add
orb
cld
bnd
mov
push
loope
mov
xchg
cmp
mov
push
mov
mov
add
add
in
rclb
les
add
xorl
ja
out
add
add
ljmp
iret
sbb
xchg
pop
adc
push
movsb
and
data16
xchg
in
scas
out
out
pop
push
and
mov
add
or
inc
mov
and
mov
sbb
inc
xchg
cmp
cmp
std
bound
sbb
push
xor
lock
pop
cmp
shr
add
xor
ljmp
mov
jae
xorb
adc
mov
pushf
cmpsl
pop
pop
fistpl
fcmove
cld
xchg
adc
out
sti
mov
addr16
mov
out
ret
mov
add
int3
out
add
test
add
add
dec
sarb
dec
ja
rorl
push
insl
out
adc
sub
icebp
dec
jecxz
lods
mov
add
jl
std
dec
daa
add
sub
sub
xor
xchg
xchg
push
adc
pusha
mov
loope
mov
or
add
mov
pop
into
int3
mov
add
mov
pop
aam
sti
outsb
adc
xor
mov
dec
shrb
mov
add
xor
out
fstl
add
push
stc
xor
cmp
enter
or
imul
negl
push
sub
std
jge
jbe
lret
xor
push
je
pop
mov
lock
rol
mov
dec
mov
add
push
stos
into
test
cmpsb
add
mov
stos
or
jecxz
clc
inc
xchg
add
inc
sub
cwtl
mov
repnz
je
scas
out
fwait
mov
dec
and
cwtl
adc
es
push
dec
sti
xchg
leave
lods
int
addl
add
lcall
and
aam
cli
inc
xchg
imul
arpl
cmp
test
cwtl
mov
mov
push
ret
sub
test
add
xchg
fmuls
fstpl
add
add
inc
mov
inc
jge
xchg
xchg
xor
add
incl
add
pop
or
adc
add
clc
or
add
push
rcrl
inc
jne
mov
dec
shll
in
test
adc
adc
popf
in
sub
imul
cmp
ror
inc
dec
fsubrl
lods
out
inc
insb
aam
adc
stc
ljmp
add
in
or
fisttpll
jne
cmp
jle
aam
iret
dec
sldt
or
add
dec
fdivs
jnp
mov
test
mov
sbb
popf
pop
xchg
jno
mov
movsb
imul
add
push
push
nop
inc
push
mov
mov
or
inc
in
add
pop
insb
pop
pop
mov
mov
add
out
jge
xor
push
push
movb
scas
ret
pop
enter
and
jo
xor
xchg
movsb
and
xor
inc
ret
dec
cmp
testl
icebp
mov
add
and
add
add
call
int3
in
add
cli
sub
dec
xorb
imul
dec
or
add
jns
out
pop
cmpsb
xor
scas
movsl
daa
jp
fs
gs
lock
loop,pt
arpl
in
or
in
imul
adc
repz
mov
xor
and
xchg
lea
xchg
add
push
or
add
in
dec
sbb
fwait
sbb
sarb
aad
test
xchg
mov
dec
mov
jae
rcll
sbb
adc
cmc
mov
add
mov
sti
sub
mov
sub
sbb
mov
cmp
add
add
mov
mov
push
sbb
jmp
clc
jle
je
xchg
cli
or
add
add
add
adc
mov
aam
dec
hlt
xlat
rol
add
mov
movsb
dec
fidivs
sub
test
iret
jmp
lods
xchg
arpl
push
mov
hlt
scas
mov
test
adc
add
cmpsb
aas
add
xor
negl
addr16
sub
repnz
cmpsl
je
shrb
jns
imul
stos
rcrl
mov
sbb
cltd
and
pop
push
repnz
loopne
stc
inc
mov
std
fisttps
add
xor
pop
add
jns
ja
add
add
add
xchg
adc
ljmp
fistpll
fidivrl
sbb
aaa
mov
jb
movsl
lret
add
xchg
add
push
push
jns
sbb
xor
xor
in
cs
mov
in
loopne
mov
cmp
jnp
add
subl
add
sar
in
pop
mov
add
jmp
es
and
and
push
lcall
jo
rcr
mov
testb
lcall
dec
push
cmpsb
add
add
sti
add
add
jmp
xchg
sbb
icebp
imul
or
fidivrs
jne
mov
repz
xor
mov
add
cmp
loop
aad
ljmp
and
pop
ss
xor
lret
lods
sbb
mov
lods
cld
call
cmp
cli
lcall
xchg
test
push
sarl
sbb
fnstenv
fiaddl
add
push
sbb
in
add
xchg
add
add
popa
data16
ja
push
aad
aas
ss
push
ljmp
pop
mov
jnp
xchg
lahf
sub
incb
add
pushf
ret
jle
adc
push
push
push
daa
nop
xchg
lods
clc
cmp
stos
in
cmp
in
ljmp
xor
jle
jns
scas
fs
hlt
sahf
jle
jae
sarl
addr16
xor
add
push
sbb
add
cmp
shl
dec
pop
dec
lea
add
xchg
mov
pop
repz
nop
fcoms
mov
sub
mov
out
es
ret
or
xchg
push
add
add
add
mov
das
inc
lahf
icebp
push
jge
pop
insl
add
sbb
out
mov
xchg
xlat
dec
dec
negb
aad
out
jb
cmp
sbb
or
xchg
inc
pop
mov
jle
in
subb
call
add
add
cmp
lret
push
in
jl
lods
mov
add
sbb
rcll
xchg
mulb
rorl
outsb
inc
xchg
lret
add
popa
rcl
popf
inc
aad
add
pushf
or
dec
xor
sarl
enter
mov
popl
ffreep
fs
jg
popa
js
sub
xor
push
add
popf
cli
or
mov
add
mov
bound
inc
roll
mov
in
pop
divb
pop
mov
mov
add
and
ja
pushl
mov
mov
dec
and
dec
out
jae
cmpsl
push
or
jp
add
insb
cmc
in
mov
add
dec
mov
mov
div
dec
cwtl
add
add
add
fstl
ljmp
add
in
in
mov
mov
add
cmp
ficomps
popa
mov
das
stc
lea
mov
push
sub
subb
adc
xchg
add
xchg
cmp
ffreep
sbb
and
out
mov
jnp
mov
push
add
xorl
sti
lods
jmp
inc
xchg
pop
jns
and
inc
adc
mov
or
add
xorb
out
outsb
inc
push
dec
and
dec
das
add
out
aam
enter
jns
shll
mov
mov
scas
jns
inc
pop
add
stos
mov
jb
sub
fs
pop
adc
add
insb
int
cmp
inc
cmpsl
add
movlps
enter
divb
or
add
in
outsb
jb
pop
insb
cmp
inc
movsb
add
mov
scas
and
mov
loop
add
in
jle
jecxz
xor
add
lcall
adc
cli
jns
les
add
ret
jle
cmp
stos
cmp
jne
ljmp
test
add
pop
repnz
fs
jecxz
xchg
push
cmpsl
pop
fisubl
add
outsl
test
xor
adc
shlb
rcr
push
adc
cmp
aad
and
mov
repnz
add
add
out
cli
sahf
lds
adc
push
xor
add
cmpsb
lret
cmpsb
int
stos
aaa
das
loop
inc
or
add
dec
les
add
adc
idivl
pop
iret
fdivrs
push
popf
cmp
mov
popf
out
pop
adc
call
aas
sarb
testb
push
mov
jb
add
add
cmpsl
pop
xchg
sarb
ljmp
je
sub
fisubl
mov
add
pop
sti
jmp
push
test
data16
xchg
and
call
jecxz
pop
call
push
add
pop
scas
das
ss
inc
fmul
iret
fdivl
mov
in
cmp
add
sti
nop
jne
sti
mov
sbb
push
sbb
add
lea
add
add
repnz
xchg
dec
gs
push
pushf
test
pop
in
aad
adc
adc
add
popa
sbb
add
or
icebp
js
push
add
inc
sbb
xor
add
xor
popa
mov
add
divl
jns
stos
xor
add
add
xchg
sub
mov
fdivr
push
pop
mov
jl
pop
or
mov
add
cmpsb
jle
movsl
xor
xor
in
add
push
es
outsl
inc
fsub
test
add
pop
js
jg
push
jle
in
jnp
mov
add
xchg
add
insb
fs
add
pop
cmp
imul
inc
stc
cli
push
arpl
stos
lods
nop
ficompl
dec
sbb
jbe
subb
js
xchg
adc
add
xchg
pop
mov
ficoml
fisttpll
jno
dec
mov
add
dec
xor
add
imul
sub
fisttps
sub
jmp
push
ds
lahf
inc
pushf
push
daa
xchg
movsb
mov
cmp
mov
data16
xor
test
push
icebp
dec
dec
in
add
sbb
lcall
add
je
movsb
mov
shlb
add
aam
xchg
xor
inc
push
hlt
stos
sbb
mov
jecxz
pop
or
mov
scas
add
xor
jne
mov
push
jg
lret
outsl
mov
fsubs
and
push
pop
arpl
jg
push
mov
xor
mov
lds
add
pop
gs
push
test
lock
fstpl
mov
cmp
adc
mov
mov
lahf
hlt
or
mov
push
pop
out
int3
dec
add
inc
push
sti
in
or
add
xchg
shll
jnp
push
add
cs
or
ja
push
pop
jmp
pop
lods
stos
icebp
aas
popa
mov
inc
outsb
aas
or
add
pop
sti
mov
jle
push
xorb
add
jne
jne
lods
push
cli
call
sbb
mov
mov
inc
jnp
add
dec
cli
dec
mov
repnz
mov
notl
clc
jge
mov
push
call
mov
sub
pop
push
mov
sti
sti
cmpsl
shrl
popa
test
add
data16
push
mov
add
add
cmp
aas
xchg
cltd
pop
cs
or
cmp
dec
out
popf
loop
ret
cmpsb
mov
int3
ret
add
or
loop
add
cld
sbb
jbe
popf
push
push
nop
add
ficompl
jne
xchg
jno
mov
mov
or
add
push
andl
or
add
mov
sbb
aas
das
mov
add
adc
pushf
cmpsl
movsl
popf
sbb
xor
movsb
rcl
sub
outsb
repz
and
aaa
inc
mov
add
lods
xchg
cld
jno
add
rcl
add
cli
data16
outsl
orb
inc
xor
jbe
jp
cmp
incl
mov
add
fwait
movsb
cmp
add
ljmp
in
adc
bound
sbb
shl
add
pop
jmp
outsl
jp
mov
add
xor
fimuls
add
fisubs
cli
aam
cmp
add
cmp
push
aam
and
popf
adc
dec
sub
add
cs
jo
sbb
pop
jmp
test
add
in
lea
jne
mov
mov
cld
pavgw
pop
pop
add
and
and
cld
aas
daa
js
mov
mov
lock
xchg
mov
lock
and
add
js
inc
jno
xlat
cmp
mov
cmpl
inc
dec
in
adc
lock
mov
add
add
xor
iret
adc
aad
ds
xor
xor
push
daa
push
lods
popf
repz
push
lock
sbb
fistps
push
pushf
loop
dec
xchg
push
rclb
sbb
jno
jne
movsb
hlt
or
add
cmpsb
push
pop
sub
loop
add
add
mov
push
push
mov
dec
nop
pop
dec
mov
cld
dec
pop
add
les
adc
std
push
mov
mov
out
test
add
shlb
in
adc
fcoms
and
es
bound
add
cltd
into
arpl
push
add
add
cmpsl
push
sub
mov
daa
scas
in
ss
inc
adc
jns
stos
das
and
repz
mov
mov
ret
cmpsb
push
lcall
add
xchg
adc
xchg
cmc
out
jle
xchg
loopne
xacquire
cmpsb
ss
lahf
dec
dec
add
inc
addb
mov
mov
hlt
mov
add
iret
or
xor
add
lahf
xor
add
mov
push
jns
jbe
cli
pop
cmp
or
push
and
and
xchg
add
xchg
add
call
add
nop
mov
mov
mov
bound
xchg
pop
testl
pop
daa
and
mov
mov
gs
jecxz
in
outsb
cmpsb
loope
and
pop
sbb
clc
fildl
mov
inc
push
cltd
jp
xor
jo
mov
into
cmp
mov
pop
xchg
push
pushf
dec
stc
inc
pop
add
mov
sub
or
add
push
hlt
popa
sahf
mov
fimull
fsubl
add
sbb
push
cs
jbe
and
adc
mov
xor
imul
adc
add
add
sbb
sbb
and
test
call
jmp
nop
pop
je
mov
jbe
lret
or
or
add
cmp
test
cmp
add
rorb
out
test
sbb
and
test
add
fs
mov
adc
cmp
jp
cmp
mov
push
sahf
mov
push
out
lods
stc
in
ljmp
ret
and
in
outsb
jecxz
push
pushf
jge
and
and
nop
add
dec
aaa
repz
imul
icebp
inc
push
rcr
out
hlt
xor
xchg
std
leave
jne
leave
dec
leave
out
or
rcll
or
add
fcoms
push
xchg
sbb
xchg
jl
lcall
outsb
icebp
leave
xlat
mov
cmc
add
cwtl
hlt
push
push
or
scas
pop
mov
or
add
sub
stos
stos
ds
in
add
pop
mov
add
fdivl
add
shl
mov
add
rdpmc
inc
roll
add
push
in
jp
test
movsb
adc
cmp
mov
ljmp
adc
and
mov
fwait
push
or
add
insl
subb
imul
dec
cmpb
dec
adc
jmp
adc
dec
jmp
ret
xchg
ret
sub
enter
xor
push
adc
mov
adc
pop
les
add
dec
je
and
mov
add
xor
popa
push
or
add
lds
addl
cmc
xor
test
fsubrl
adc
push
sub
popa
rclb
test
popl
add
inc
mov
ja
lods
xchg
test
aad
into
scas
aas
xor
int
xchg
adc
jl
scas
jae
cld
jbe
scas
add
inc
push
add
push
iret
add
lods
xchg
das
sbb
cmp
leave
dec
dec
jecxz
fs
lds
cli
or
xor
icebp
repz
add
sbb
add
xchg
ret
das
loop
leave
xchg
ljmp
jb
pop
xchg
pusha
jbe
push
insb
xor
test
add
push
lds
adc
lods
add
xor
rcll
add
inc
inc
cltd
or
scas
bound
mov
jb
fwait
in
mov
jb
pop
and
sub
cmp
inc
pop
gs
xchg
or
pusha
pop
xlat
mov
lret
test
add
xchg
insb
movsb
cmp
mov
mov
enter
or
frstor
xor
inc
xor
rcr
lock
xor
arpl
xchg
orb
add
or
nop
flds
mov
lock
jge
sbb
add
add
cmp
mov
sbb
xlat
fistps
push
cmp
stc
jle
sbb
es
and
test
repz
in
stc
xchg
xchg
pop
mov
fldt
test
add
add
aas
adc
add
frstor
outsb
pop
into
fs
mov
pushl
in
daa
ret
or
inc
add
lret
mov
dec
stos
jo
sub
out
push
call
jge
cltd
mov
sub
mov
jne
cmp
imul
adc
add
sub
add
roll
int3
sbb
add
in
push
push
jbe
add
pop
inc
fwait
add
into
stos
lock
push
add
jb
dec
fisttpl
imul
add
xchg
jb
outsl
jae
mov
sbb
shlb
inc
jns
add
mov
imul
xor
add
in
insb
in
dec
pushf
adc
stos
fcmovnb
bound
cmpsl
push
lret
add
aaa
sbb
rclb
orl
fcomps
or
orb
mov
add
mov
stos
cli
nop
cmp
loope
xor
aad
dec
mov
xchg
cmpsb
out
pmaxub
lods
cmp
lea
pop
xchg
test
ss
or
add
lcall
push
sbb
out
add
xchg
dec
js
or
add
jp
aam
bound
pusha
adc
mov
jne
jg
or
add
fistpl
popf
mov
sub
cwtl
jne
in
imul
hlt
in
sahf
lock
lret
pop
or
add
test
xor
gs
sub
add
push
out
mov
dec
jbe
icebp
pop
data16
inc
and
inc
or
icebp
dec
cmpsl
push
jno
sub
add
mov
add
xchg
popa
cmpsb
in
xor
or
inc
cmp
add
pushw
rorl
aam
add
mov
xchg
add
dec
ret
pop
out
xchg
push
and
nop
lods
and
fdivrs
into
jb
xor
sub
mov
and
jp
or
scas
je
ret
fmuls
adc
mov
call
cmp
int3
mov
dec
mov
cmp
jno
cs
fists
dec
arpl
add
fucomp
stos
push
dec
out
mov
push
push
pop
arpl
fnstsw
mov
das
xor
fiadds
fs
fidivs
jecxz
pop
stc
mov
aaa
add
or
add
out
add
sub
and
cltd
sub
mov
les
add
adc
addr16
mov
pop
and
sub
mov
cld
and
cli
movsb
fidivrs
daa
adc
add
adc
cltd
mov
vpsubsw
mov
fbstp
sub
xchg
loope
pop
mov
dec
sbb
aaa
or
rcll
hlt
in
and
loope
xor
or
aam
mov
add
gs
mov
add
mov
sahf
add
scas
xor
sub
jl
lret
add
mov
clc
xor
fldl
add
jmp
xchg
dec
je
add
sub
lods
mov
jge
xchg
lea
lods
cmc
xchg
dec
mov
pop
pushf
rcl
loope
call
pop
push
push
aam
sub
and
stc
fsubrs
add
xor
adc
adc
cmc
sub
xchg
daa
push
repz
aaa
pop
addr16
add
push
imul
in
sbb
add
data16
add
lcall
inc
lea
add
es
or
add
pushf
pop
sub
pusha
mov
out
lods
pushf
mov
sub
pop
movsb
and
add
loopne
push
test
or
add
pop
add
pop
cmp
or
sti
xor
mov
fldcw
out
sbb
pusha
jno
mov
or
add
pop
push
adc
add
into
jmp
shll
mov
pop
aas
shll
test
stos
loopne
or
int3
add
cwtl
ss
adc
insl
icebp
dec
loopne
add
dec
mov
scas
lds
inc
aad
add
and
cltd
mov
add
jge
divl
add
test
in
or
add
les
add
int
loopne
arpl
outsl
cwtl
lahf
dec
jns
add
popf
xor
fbld
bound
dec
test
pop
test
cwtl
jae
sbb
pop
add
xor
inc
push
xchg
test
mov
stos
sbb
adc
data16
ficoms
adc
dec
lahf
out
andb
sti
scas
sub
cld
into
aam
loop
out
jmp
xchg
in
and
xchg
nop
inc
xor
dec
mov
add
xchg
add
andl
and
cmp
add
add
add
adcl
pusha
inc
xlat
cli
add
push
mov
or
add
sbb
mov
inc
mov
add
dec
insl
mov
add
xchg
aaa
mov
cmp
hlt
cmpsb
std
sub
stos
testl
stc
xchg
sub
shlb
sahf
xlat
ret
mov
sub
cmp
add
add
pop
add
inc
loop
sbb
mov
push
pop
add
hlt
mov
or
add
jle
fisttpl
mov
ds
aam
adc
or
or
add
out
jnp
adc
add
add
pop
or
xlat
adc
jle
enter
add
add
stos
iret
and
and
push
ljmp
pushf
add
jns
lret
cmp
xchg
push
xchg
sub
into
add
or
add
leave
pop
push
loopne
jne
cmp
add
sbb
or
out
mov
add
mov
xor
add
rolb
inc
jge
xchg
test
add
ljmp
addr16
int
mov
cwtl
dec
ss
in
mov
shlb
es
repz
iret
cmp
xchg
les
xchg
xor
xchg
inc
cmp
add
lock
adcl
add
adc
mov
xlat
xchg
mov
jne
cs
lret
fsubr
in
pop
dec
ljmp
jne
sub
enter
iret
mov
lods
dec
sub
out
loope
fstpt
in
outsb
dec
fwait
add
dec
fidivl
mov
add
xor
aad
jp
or
add
mov
orb
add
sub
adc
push
jae
addb
pop
push
loope
cmc
imul
mul
cmp
xor
push
add
inc
inc
add
and
add
loop
leave
sub
mov
ror
jle
out
pop
es
pushf
jae,pn
and
sbb
es
aas
dec
sub
add
data16
push
add
add
push
cmp
cli
xor
mov
insb
icebp
sti
or
jl
sub
icebp
mov
mov
stos
sbb
add
add
stos
sbb
negb
cmp
push
gs
dec
add
push
stos
outsb
cmpsb
rcrb
add
ficoms
pusha
mov
xlat
cmpsl
mov
repz
mov
add
or
or
add
movsl
jno
mov
in
mov
iret
add
xchg
nop
dec
xor
ficompl
adc
addb
pop
mov
mov
add
cmp
inc
movsb
sub
sub
pop
sbb
aaa
aas
pop
or
add
push
clc
mov
add
fnstsw
xchg
scas
jmp
push
adc
test
add
ss
xchg
rcrb
outsl
cmp
add
aaa
sub
jnp
and
add
jp
mov
jp
repnz
movsb
dec
mov
add
jge
lock
loop
addl
mov
add
pop
leave
pop
std
lock
loope
movsl
add
and
loop
gs
add
lods
dec
ljmp
mov
xchg
inc
cmp
inc
test
add
mov
scas
adc
inc
add
arpl
add
sbb
or
cli
test
mov
pop
mov
mov
jae
loopne
fwait
test
sbb
add
ret
mov
in
test
lock
xchg
dec
xchg
dec
lods
add
mov
sub
fwait
or
inc
sbb
push
aas
test
cmp
mov
inc
jbe
push
pop
ret
lahf
add
add
scas
lea
les
dec
or
adc
imul
pop
sub
out
sti
jbe
les
sbb
cld
mov
mov
cmpsb
sahf
dec
in
loop
in
ret
jns
jecxz
shl
mulb
in
dec
ljmp
cli
adc
xchg
pop
mov
jp
stos
and
insl
imul
mov
mov
out
mov
add
push
popa
movsl
xorb
pop
pop
lea
jb
pop
mov
xchg
fwait
or
pushf
push
dec
xchg
loop
cmpsb
jo
jp
iret
outsb
in
jno
push
xchg
out
lret
aad
jb
or
add
jg
in
pop
sub
es
int3
mov
add
mov
sahf
inc
add
fsubrl
dec
mov
loope
jl
movsb
add
adc
push
inc
mov
lahf
jo
arpl
ljmp
sbbb
inc
add
add
push
mov
into
adc
je
mov
add
push
fadds
mov
mov
repnz
inc
jnp
add
sbbl
mov
mov
mov
adc
mov
add
adc
mov
mov
jecxz
xlat
sub
mov
movsb
gs
mov
arpl
pushf
test
jp
test
mov
pop
mov
pop
stos
xor
scas
loope
mov
fwait
jg
int3
movsl
add
cs
das
pop
pusha
mov
leave
fcmovb
jns
popf
inc
sub
add
xlat
or
push
movsl
xor
sbb
pop
gs
and
shlb
outsb
cmp
mov
add
out
add
push
jae
xchg
popf
fwait
cmp
mov
out
mov
inc
cmpl
mov
int
push
jbe
repz
pop
sahf
mov
add
lds
add
movsl
push
test
adc
dec
push
or
push
xor
out
add
xchg
enter
lods
inc
and
add
xor
add
int3
add
add
mov
imul
adc
pop
fistpll
testl
ja
loop
in
mov
fwait
pop
sbb
push
pop
jp
jg
xor
add
jo
jno
lods
testl
add
jns
out
lea
roll
add
add
add
call
int3
push
add
addr16
cmpsl
cmp
add
mov
popa
cmp
xor
add
test
dec
xchg
iret
mov
cmc
fisubrs
cli
mov
sbb
mov
leave
add
dec
roll
add
xor
out
imul
dec
test
mov
pop
pop
pop
inc
je
add
add
scas
dec
dec
sbb
add
cld
sub
clc
or
push
cmpsl
xchg
add
mov
push
in
shll
xorb
fadds
add
dec
add
js
fsubp
inc
out
mov
fldenv
cwtl
movsl
mov
das
jne
imul
inc
add
incl
push
or
add
neg
sbb
loope
movsbl
adcb
jno
jb
inc
dec
mov
test
mov
push
inc
incb
add
add
bound
mov
ds
ss
jecxz
rcrl
daa
sub
aam
inc
flds
ret
mov
repnz
or
add
mov
jmp
inc
mov
sub
add
lret
push
ret
mov
mov
lahf
scas
ss
pop
fcoml
inc
sbb
add
rclb
mov
lods
rolb
add
jle
add
mov
pop
test
inc
into
add
das
pop
pushf
out
cmc
imul
ja
or
sub
fldenv
add
jge
xchg
xlat
in
addl
add
cmpl
pushf
mov
pop
fcoms
cli
ljmp
es
cs
add
push
loope
cmp
and
vcvtsd2ss
pushf
sti
ja
xchg
sbb
in
inc
sbb
add
fwait
add
sbb
inc
sbb
jg
movb
mov
dec
sbb
xchg
dec
jnp
dec
adc
jae
or
sub
adc
pusha
or
add
lds
sub
imul
fs
shlb
push
movsl
lock
add
xchg
nop
mov
inc
rcrb
dec
xor
add
and
ljmp
inc
imul
push
idivl
rolb
push
sub
jmp
jns
inc
cld
push
es
and
push
adc
mov
add
hlt
movsl
and
pop
mov
in
scas
jnp
rcr
adc
dec
lods
mov
xchg
inc
mov
or
or
add
add
lcall
je
test
cwtl
popf
fldt
pop
adc
push
loope
cmp
add
cmpsl
cmp
or
nop/reserved
pop
sarl
fisttpll
cmpsl
sahf
mov
gs
lods
adc
movsb
push
addr16
sbb
flds
inc
add
in
pop
idivl
in
fistl
or
add
mov
xor
cwtl
ret
mov
movntps
aam
mov
push
sbb
add
cs
stos
xchg
add
outsl
pop
dec
and
rorb
mov
add
ss
and
mov
stos
and
inc
into
loopw
daa
out
repnz
add
add
out
xlat
xor
mov
test
loope
pop
xchg
xchg
pop
pause
das
mov
add
cli
cs
daa
mov
push
test
enter
mov
add
scas
adc
push
add
frstor
dec
add
js
test
sahf
jmp
dec
icebp
shl
addl
stos
add
adcl
ljmp
mov
nop
jl
bound
pop
test
ficoml
dec
aad
stc
mov
and
icebp
jno
mov
mov
rcr
pop
js
mov
add
mov
movntps
sahf
js
fisttps
stos
mov
out
add
int
add
pop
adc
adc
jno
or
fimuls
pop
adc
fadd
fildl
add
or
ret
lahf
push
mov
and
xchg
outsb
scas
hlt
mov
cmp
pop
adc
stc
inc
jnp
add
jg
aaa
and
xchg
sbb
repnz
jg
data16
cli
fs
push
xchg
mov
jp
jge
xchg
xor
add
adc
mov
mov
dec
inc
in
inc
sbb
imul
jb
lcall
jmp
ds
movl
adc
add
xchg
fcompl
aaa
daa
cmp
mov
push
sub
xchg
push
cmp
jge
inc
icebp
mov
out
mov
rcrb
ja
inc
add
lcall
and
cmp
lahf
sbb
das
xchg
dec
add
pusha
mov
enter
and
cmpsb
pop
pop
gs
sub
xlat
jl
cmp
cmpsl
test
mov
inc
incb
add
repnz
jns
stos
mov
and
jb
xlat
or
cmpsl
inc
stos
nop
dec
ljmp
mov
add
mov
add
sub
mov
mov
repnz
nop
add
or
shll
push
push
xchg
cmp
sahf
xchg
mov
mov
xchg
pop
jmp
mov
fidivs
push
fwait
add
add
adc
test
sbb
repnz
sbb
das
inc
sub
add
movsl
rorb
add
push
adc
loope
inc
pop
add
fs
xchg
and
adc
add
data16
das
movsb
mov
mov
push
jmp
pop
push
insb
andl
jp
add
add
xchg
xor
add
jnp
in
sbb
add
int3
or
add
fldcw
add
sbb
add
scas
xchg
test
jnp
dec
add
call
add
test
sbb
xor
jg
sub
inc
pusha
add
neg
push
imul
xor
out
pop
pop
jecxz
xchg
stos
add
add
jne
add
lret
jne
pop
loopne
inc
testl
mov
inc
mov
data16
mov
add
fidivrs
ljmp
mov
mull
in
dec
ret
lds
adc
dec
fidivl
or
mov
mov
add
sti
mov
bound
ja
sub
lds
cltd
xor
sub
ret
outsl
push
rcrl
push
xchg
dec
fistpl
stc
mov
in
jecxz
adc
lods
nop
lret
and
divb
adc
int
push
jns
dec
add
add
ja
cmpsl
pop
hlt
and
lds
clc
push
adc
ret
xor
adc
push
jnp
sbb
fcomi
int3
mov
add
fdivs
sti
fistpl
test
add
lds
pop
jns
push
cmp
and
std
lahf
pop
mov
add
xchg
arpl
push
dec
int3
jp
add
cwtl
pusha
jnp
std
jne
jle
inc
mov
lods
mov
add
iret
lcall
adc
test
cli
dec
or
inc
rolb
add
fnstcw
xchg
mov
add
or
shl
andl
aam
popa
imul
jecxz
fists
push
stos
stos
jecxz
call
pop
lcall
adc
adc
add
ficoms
and
and
jno
fsubs
jmp
daa
add
popf
and
dec
dec
mov
add
pop
inc
out
sub
cmp
or
in
ds
in
or
data16
enter
adcb
jg
mov
jns
mov
dec
jns
xor
add
shll
dec
add
test
popl
stos
psllq
js
inc
test
add
cmp
bound
out
add
out
jle
jmp
add
xor
popf
jo
jle
lock
lea
in
add
cmpsb
clc
pusha
pop
mov
inc
add
rcll
jecxz
inc
adcl
repz
add
xchg
fs
mov
add
sbb
cmp
add
pushf
inc
mov
mov
jb
push
mov
jl
xchg
aam
pop
mov
add
lock
push
pop
enter
pop
shrl
out
rcrl
loop
push
jmp
mov
cld
dec
xchg
jmp
dec
ljmp
jl
dec
add
daa
es
out
leave
lods
mov
mov
jo
and
add
jbe
daa
mov
out
sub
stos
aad
out
add
stos
inc
push
mov
add
mov
add
out
and
pop
jp
movsb
je
ja
loopne
test
insb
rcrl
xchg
add
jecxz
js
jno
sub
add
pusha
xor
xchg
or
add
jecxz
std
or
add
pop
add
cli
in
sahf
xchg
or
add
inc
pop
imul
xchg
pushf
xlat
jns
mov
test
pop
repz
xor
adc
mov
xchg
mov
push
inc
mov
xchg
mov
out
fisubrl
mov
mov
cmc
add
adc
test
add
sbb
cmp
add
add
mov
rolb
fisubrl
sbb
aaa
xchg
insl
jnp
aam
or
dec
xchg
movl
je
inc
sahf
adc
mov
push
xchg
repnz
ja
fwait
push
add
cwtl
mov
cmp
add
mov
sbb
add
sahf
test
daa
xchg
mov
ds
jg
ret
cs
inc
add
enter
push
mov
out
and
or
add
adc
jp
aas
clc
mov
jo
jno
cmp
push
cld
ficoms
scas
and
pusha
inc
fldenv
out
fidivrs
les
add
movsb
test
dec
fs
rolb
addl
add
mov
cmp
mov
add
ret
or
add
add
xor
add
xor
push
lock
add
jge
mov
add
push
push
xchg
int3
rolb
add
cltd
xchg
push
jge
add
sub
adc
js
jno
sbb
add
insl
mul
push
adc
add
ret
movsb
sbb
insl
cmp
in
mov
pop
popa
mov
sahf
or
cmp
lods
xor
das
adc
jbe
mov
add
js
stos
lods
in
inc
lods
add
mov
pushf
sarl
mov
mov
cmpsl
lahf
xchg
shlb
sub
shll
and
xor
test
inc
out
rcrl
lahf
mov
dec
mov
add
cmp
loope
fimull
sbb
dec
incb
add
test
sub
or
add
rol
mov
add
add
mov
add
jp
push
xor
push
hlt
mov
add
sub
pushl
mov
and
dec
jnp
ljmp
jg
mov
jle
loope
mov
gs
mov
or
add
adc
add
adc
jge
popf
cli
xchg
dec
mov
xorl
mov
add
jecxz
test
add
test
es
aad
xchg
add
add
cwtl
cltd
push
push
mov
dec
leave
mov
arpl
or
add
xchg
pop
sub
int
push
jne
mov
cmp
inc
repnz
cld
adc
pushw
pop
fimuls
sbb
push
mov
jge
ret
or
add
jne
jle
lods
pop
fnstcw
loopne
xor
pop
scas
jmp
je
aas
test
out
add
loopne
mov
rcrb
fiadds
add
scas
arpl
outsl
cmp
pop
mov
push
add
jbe
shll
add
xlat
sub
js
daa
notl
inc
rolb
or
popa
push
arpl
dec
popa
test
lock
or
in
inc
shll
rcll
push
lahf
xor
xor
addr16
xor
add
fs
and
mov
xor
fidivs
fisttpll
xchg
lahf
jp
xor
pop
and
sub
fsubl
bts
cmp
dec
imul
lret
inc
fsts
notl
xor
movsb
mov
dec
add
or
push
leave
jae
pop
pop
cwtl
hlt
dec
out
add
mov
add
push
xlat
clc
ds
es
inc
lcall
xor
test
aas
add
sbb
adc
adc
inc
repnz
rorl
iret
adc
push
push
test
in
js
jecxz
xlat
int
push
insl
lret
push
sbb
fbstp
sbb
add
sub
inc
adc
add
push
loop
inc
or
add
inc
or
sbbl
add
lcall
cld
xchg
ja
je
popa
cmpsb
int
pusha
popf
mov
lret
push
lret
dec
lcall
lret
push
cld
inc
dec
push
outsb
cmp
mov
cltd
push
cwtl
mov
call
test
aaa
xchg
aaa
sbb
jb
lock
push
jne
sbb
or
add
push
jle
pop
call
inc
sbb
add
cmpsl
mov
add
add
add
cmp
add
xor
sbb
add
in
aaa
ror
jnp
dec
inc
sbbb
add
jae
hlt
mov
in
fdivrs
inc
int3
aaa
add
mov
sbb
xchg
out
jb
mov
fcmovu
jle
lret
xorps
into
cld
rcrb
add
adc
mov
test
addb
cmp
cmp
inc
add
and
jnp
leave
stos
imul
loop
scas
inc
ror
push
pop
fs
sub
or
add
mov
add
push
sbb
sti
nop
xor
mov
out
aas
xchg
dec
les
add
or
notl
sbb
stc
ja
push
popf
xor
testb
and
aaa
outsb
aas
fistps
xchg
nop
loopne
data16
xchg
aas
cmp
dec
add
add
mov
aas
mov
dec
add
xchg
or
add
pop
call
xor
add
into
cmp
cmpsl
icebp
jge
aas
sahf
cmc
xlat
mov
pop
inc
pop
add
pop
sub
sbb
lods
add
add
cs
and
out
mov
jns
pusha
leave
pushf
pushf
and
loope
mov
sub
sbb
popa
repnz
xchg
ds
loop
xchg
add
addr16
dec
imul
bound
sbb
cs
test
pop
imul
test
and
jmp
sub
add
add
imul
rcrl
add
sbb
xchg
loope
cmpsb
push
out
sbb
mov
call
add
ret
jae
sbb
cmp
jno
and
pop
outsb
jo
fstl
clc
sbbl
in
push
cltd
testl
add
cmp
push
roll
movsb
movsb
jp
add
fsubrs
dec
jg
jg
scas
lea
fs
push
jnp
jnp
rolb
ljmp
add
repz
adc
fiaddl
add
out
mov
add
jo
jne
jae
int
into
dec
pop
add
addr16
out
mov
test
dec
mov
in
sbb
dec
jecxz
mov
shlb
jno
addl
mov
xchg
mov
push
cmp
and
pop
lret
jb
ret
xlat
out
xchg
and
push
add
add
add
rcrb
add
addr16
xchg
je
pusha
stc
ja
mov
imul
dec
cs
cwtl
sbb
jns
or
sbb
cmp
lock
sbb
push
inc
lea
sub
stc
add
add
call
inc
andb
adc
push
xchg
xor
lahf
mov
lods
sti
out
ret
sbb
sbb
add
push
add
je
add
mov
push
inc
imul
in
ss
and
pop
jmp
popa
jp
in
test
das
lods
push
or
sub
adc
pop
sub
sti
mov
test
jecxz
jo
leave
add
pop
into
loop
dec
cld
clc
push
inc
xor
add
and
int
out
cmp
add
push
movsb
mov
xor
cs
enter
mov
mov
int3
mov
add
xor
outsb
aas
movsb
movsl
aam
mov
push
dec
lock
mov
mov
shr
add
xchg
adc
pop
adc
mov
sbb
or
pop
add
outsb
mov
shlb
repnz
icebp
push
pop
ret
push
clc
das
lods
out
mov
inc
jns
jno
inc
add
in
ds
xchg
dec
in
xlat
mov
clc
xchg
shlb
lea
fidivrl
inc
rol
add
lock
sub
in
hlt
jns
ret
hlt
dec
push
add
pop
das
cmpsl
setl
pop
pusha
sub
inc
aas
add
iret
notl
out
mov
aam
and
mov
bound
xchg
lahf
popf
stos
out
jnp
jge
pop
mov
aas
mov
pop
cli
xor
cmc
call
sub
ljmp
fs
or
addl
mov
stos
les
add
inc
shl
push
mov
add
xchg
dec
popf
mov
js
and
sub
jae
ret
icebp
mov
imul
mov
cmpsl
scas
jl
sar
adc
lahf
leave
sbb
mov
adcl
xor
and
xchg
cmpsl
mov
pop
movsl
sub
iret
cs
xor
add
add
push
sub
jp
imul
xor
cmp
mov
add
or
add
mov
mov
js
mov
mov
add
dec
test
mov
movb
add
xor
adc
stos
iret
add
add
dec
mov
add
fstl
cmc
mov
mov
outsl
mov
inc
or
add
movsb
ljmp
lds
pop
push
and
ljmp
push
add
xchg
movsb
inc
lret
add
fimuls
xchg
sub
repnz
les
add
icebp
shr
mov
add
add
clc
pop
out
cmp
xor
xchg
movsl
and
adc
dec
add
aaa
sub
insb
fisttps
cmp
hlt
enter
mov
das
jle
xor
mov
mov
jmp
sub
xlat
fisubrs
rorl
flds
out
loopne
out
push
mov
repz
jae
add
pusha
push
mov
mov
cld
inc
push
rsm
adc
push
rorl
xchg
add
jbe
test
dec
cmp
test
add
or
fucomip
sbb
je
movsb
adc
push
mov
out
test
jge
push
pop
pop
mov
jns
mov
aaa
push
adc
stos
mov
pop
outsl
fwait
add
add
and
xor
jo
push
mov
jle
stos
fsubp
mov
and
xchg
inc
int3
mov
add
mov
jne
dec
outsb
add
mov
pop
fincstp
lods
adc
cld
and
add
out
dec
fstpl
xchg
aam
mov
iret
add
add
add
or
sahf
testb
jle
mov
jno
cmp
popl
add
jbe
mov
clc
in
ret
sbb
cld
push
push
push
xchg
inc
aaa
shrb
repz
mov
add
ret
pop
arpl
xchg
nop
shl
xchg
out
mov
dec
or
lea
in
mov
cmc
shlb
add
add
sub
push
jmp
and
enter
jl
mov
je
add
rorb
inc
add
or
loop
aam
ret
imul
and
loopne
pop
js
int3
movb
ret
add
and
gs
sbb
jo
in
xor
jmp
adc
and
in
gs
call
add
shrl
popa
mov
add
repz
lea
mov
mov
sbb
and
adc
pop
sbb
notb
jo
dec
cmpsl
cli
cmp
jp
cld
ds
sbb
add
xchg
mov
add
dec
js
mov
pushf
popa
clc
jge
sti
lret
and
add
add
dec
mov
fstpt
xor
jp
inc
add
stos
xchg
dec
jns,pn
inc
push
lcall
sahf
sbb
cmc
mov
add
pop
xor
out
adc
mov
sub
negb
loop
inc
adc
and
mov
mov
mov
cmc
insb
mov
add
xlat
test
into
cmp
sti
xor
data16
xchg
pop
dec
adc
cmp
cmp
push
mov
test
sahf
push
xchg
push
mov
add
enter
pop
scas
lret
cmpsb
mov
cli
ds
dec
cmp
add
add
popf
insb
int3
filds
add
and
cmp
inc
inc
add
sub
jae
in
shlb
adc
ret
jl
inc
aam
inc
cmp
stc
dec
jmp
add
inc
mov
sbb
jp
pop
inc
imull
xchg
fcomps
lock
push
add
mov
cmp
outsb
add
jmp
rcl
adcl
push
pusha
insb
ja
lahf
xor
jns
mov
mov
cmpsb
xlat
sbb
xchg
dec
iret
add
popa
insl
and
cmp
add
je
push
dec
cltd
add
cmpsb
inc
inc
pop
add
sub
or
add
adc
ds
add
add
test
out
jae
cmp
loope
repz
fadd
movsl
aas
pop
xchg
sbb
and
add
addl
mov
fcompl
sub
adc
jne
add
add
add
and
enter
xchg
rolb
and
xor
add
add
mov
cmp
or
add
and
ds
aaa
mov
mov
cmp
sub
clc
mov
movsl
dec
cltd
test
pop
fmuls
dec
mov
cmp
add
orl
push
push
cmpsb
jg
in
nop
pop
jge
mov
inc
sub
add
outsl
mov
add
lock
cmpsl
aas
popa
jns
fmull
mov
call
test
push
outsl
fs
jae
and
add
lcall
movsl
out
sbb
scas
inc
or
add
pushf
jns
and
mov
repz
addl
adc
adc
xchg
lods
fdivrs
push
test
add
or
xlat
cwtl
repnz
add
mov
dec
mov
rcll
pop
jns
adc
daa
xchg
mov
mov
cwtl
notb
sarb
jmp
test
inc
cltd
popa
arpl
sahf
stc
xchg
and
stos
sub
xchg
adc
int3
cwtl
add
or
add
mov
pop
mov
call
dec
out
add
adc
icebp
cmp
pusha
mov
scas
lret
fcoml
push
repz
repnz
mov
mov
lds
cs
aaa
imul
pop
xor
or
add
lea
in
cmc
xor
daa
xor
add
push
rorb
mov
xor
cmp
adc
ret
in
popf
data16
sbb
sub
pop
cltd
inc
push
jbe
repz
push
test
sbb
aas
hlt
mov
add
hlt
sahf
lret
stos
mov
movsb
add
rorb
popfw
add
add
sub
cmp
aaa
xor
repnz
mov
xchg
imul
add
cmpsl
hlt
insb
stos
adc
lds
stos
inc
inc
call
pushf
test
add
lock
xchg
outsb
movsl
vmovss
jmp
cli
mov
dec
add
or
jmp
add
mov
jae
push
pop
rclb
jecxz
leave
mov
fldenv
bound
cmp
sbb
pushf
add
inc
dec
add
fsubs
fadd
push
mov
or
cmc
push
xchg
stc
mov
jp
mov
add
cmpsl
in
mov
mov
adc
mov
sbb
mov
add
int
push
arpl
loop
addl
aam
rcrb
cmp
sbb
pop
push
ret
xchg
arpl
mov
cld
pop
dec
dec
add
out
jnp
test
nop
adc
push
add
push
lret
mov
pop
mov
nop
shll
pop
out
jno
out
or
roll
add
sub
rolb
push
aaa
add
scas
fists
pop
loop
sbb
xor
cmp
sub
ja
pop
lret
cli
adc
lods
add
lds
mov
fildl
mov
inc
out
push
xchg
negl
mov
jle
inc
sbb
mov
stc
xchg
nop
jecxz
out
and
sub
push
pop
push
sub
faddl
fs
sub
add
xchg
aas
outsl
add
test
pop
or
add
leave
fidivs
jb
aas
inc
cltd
add
jb
js
inc
and
add
cmpsl
mov
xchg
std
and
rolb
add
or
add
add
pop
or
add
mov
lods
xchg
push
sbb
jmp
popf
add
xchg
and
jns
cltd
call
stos
sbb
enter
clc
pusha
adcb
add
popa
out
out
leave
dec
int
loop
movsb
or
jp
cwtl
cmp
movsb
add
push
in
push
mov
lret
arpl
cmc
and
clc
sahf
mov
mov
add
mov
mov
lahf
adc
pop
les
add
lahf
out
test
add
mov
add
pop
inc
movsl
mov
aas
inc
scas
icebp
fsubs
add
mov
add
ret
jg
ljmp
fsubl
test
add
push
ljmp
add
es
std
sbb
enter
mov
add
hlt
adc
jmp
pop
dec
mov
lcall
mov
sbb
adc
cmc
adc
xchg
mov
sti
pop
fimull
add
test
fcoml
arpl
pop
cwtl
cmpsl
lret
jns
dec
lret
in
out
ret
xchg
xor
sub
add
sub
test
test
add
pop
inc
and
stc
cmpl
lods
pop
mov
push
adc
getsec
dec
rclb
adc
lret
rorl
popa
cli
imul
or
add
scas
out
adc
dec
fists
pop
mov
cmpsl
out
dec
xchg
fcom
imul
jecxz
loope
imul
movsl
mov
shrb
add
push
popf
idiv
push
ds
and
movsl
fcompl
add
aam
or
inc
sub
lahf
push
les
lea
add
in
push
stc
mov
mov
lods
sub
nop
xor
and
imul
inc
or
xchg
inc
jb
cmp
add
cltd
data16
cwtl
and
ljmp
mov
mov
adc
pushf
nop
mov
scas
fisttpll
push
subl
add
jp
xchg
decl
lods
push
repnz
sbb
cli
sub
xlat
xchg
rorl
mov
dec
mov
add
jnp
jns
dec
add
jg
pushf
int
push
and
cmc
sti
fs
sub
xor
mov
push
mov
rcl
add
scas
fldl
mov
cwtl
xchg
jo
mov
add
mov
mov
mov
fadd
xchg
jge
dec
rol
add
lods
mov
movsl
int3
push
add
push
stos
push
mov
mov
mov
add
jb
mov
scas
int3
mov
pop
ret
mov
fcoml
sub
pop
sbb
test
add
dec
gs
xchg
add
mov
cmp
jmp
pushf
es
pop
jnp
hlt
add
roll
daa
cmp
das
adc
fimuls
sarl
dec
mov
fnstcw
push
mov
add
add
ja
dec
fstpl
jae
pop
sub
adc
xchg
sub
gs
cs
dec
mov
jns
ss
fwait
xor
mov
call
add
mov
int3
sahf
add
cmc
aas
sub
adc
das
add
add
dec
jne
jbe
in
andb
jl
add
cmp
addr16
mov
add
add
add
les
aas
pop
std
pop
enter
jmp
lahf
loopne
in
cmp
jle
add
xchg
lret
ret
pop
arpl
inc
inc
fadds
add
add
cld
data16
pop
add
loop
jge
jg
lds
add
test
shrb
mov
pop
mov
adc
add
xchg
std
js
fs
ret
xchg
adc
mov
jno
adcb
je
pop
cmp
lret
imul
sbb
xor
leave
xor
dec
sub
pop
xchg
es
cwtl
sub
inc
inc
add
int3
test
add
test
add
sub
cltd
push
lahf
sbb
xchg
push
ss
push
add
popa
or
add
and
add
jg
xor
add
ret
inc
sarl
test
adc
repz
dec
mov
cmpb
insb
and
stos
test
mov
and
jmp
add
adc
sbb
adc
push
mov
or
cmp
jmp
cmp
das
push
stos
pop
push
inc
ds
jge
popf
push
incb
sarb
add
xlat
mov
inc
sub
test
adc
mov
add
push
xchg
stos
jno
adc
int3
imul
add
rcrb
fcmovbe
fisttpll
inc
or
add
sub
js
jns
cmp
cmp
xabort
std
pop
cmpb
vpor
add
sbb
add
xlat
xchg
sbb
js
mov
xchg
mov
sbb
jne
fwait
stos
inc
filds
add
jg
lock
jp
add
pop
inc
push
fiaddl
je
adc
les
add
add
pop
pop
mov
cld
sbb
rorl
xchg
daa
out
jle
shlb
jge
dec
xchg
fwait
in
adc
push
scas
mov
push
stc
xor
movsb
add
adc
add
enter
xchg
lods
movsb
pop
mov
iret
pop
icebp
add
add
aad
jmp
jecxz
fwait
shlb
add
mov
add
and
test
add
fadds
mov
shlb
add
addb
xchg
cmp
int3
xchg
add
js
add
xor
fildl
add
out
pop
jns
and
pop
add
sahf
movsb
and
stc
lea
xor
sbb
aam
sbb
add
lock
push
cmp
aad
pushf
adc
popf
movsl
daa
test
add
ljmp
roll
dec
addl
push
lods
mov
repz
test
add
cli
adc
out
add
int3
int
add
shl
xchg
adc
add
inc
inc
add
mov
add
xchg
or
hlt
add
ljmp
xchg
mov
scas
lock
mov
fldt
mov
shrl
add
push
rcrl
add
cltd
mov
add
hlt
add
in
pushf
std
mov
out
xchg
and
pop
pop
xchg
int3
stos
add
push
sbbb
sbb
fildl
sbb
push
add
push
loopne
xchg
dec
fildl
add
fwait
das
jns
scas
aaa
ret
mov
je
call
outsl
add
shll
out
lea
xor
leave
lea
les
add
mov
out
sahf
cmpsl
jno
push
outsl
gs
scas
movb
adc
aad
push
inc
jp
sub
xor
int
fiaddl
add
dec
mov
call
add
adc
mov
sbb
inc
int
and
inc
call
in
mov
dec
push
add
inc
push
mov
push
addl
push
addr16
cli
stos
adc
outsb
mov
loope
stc
pop
dec
fists
xor
cmp
lods
adc
fisubl
jge
mov
sbbl
dec
add
iret
jno
mov
cld
in
ret
inc
pop
mov
popf
out
xor
int3
inc
add
xor
xchg
add
outsb
adc
shlb
pop
add
pop
int3
pop
add
data16
and
pop
fcompl
mov
mov
lahf
add
pusha
cmp
stos
jmp
sbb
jmp
xlat
shll
mov
add
scas
in
clc
jl
cmp
pop
push
enter
int
pop
cmpsl
or
rep
inc
test
add
insl
push
aas
aad
movsl
stos
mov
loope
mov
adc
out
inc
movsl
add
jo
out
mov
push
xchg
xchg
fildl
ret
icebp
mov
push
sbb
int
aaa
adcl
call
or
push
ja
add
inc
sahf
xchg
orb
adc
cmp
in
adc
add
test
loopne
pop
add
arpl
test
xor
jp
cmpl
insl
ds
imul
mov
add
and
icebp
xchg
xchg
xchg
int3
addb
test
inc
enter
push
xchg
cmp
mov
mov
and
pushf
adc
pusha
push
mov
push
scas
fcompl
dec
enter
imul
cmp
inc
adcl
movsb
test
push
push
lret
add
arpl
add
stc
sbb
dec
into
pop
jne
idiv
mov
sti
pushf
push
jbe
jo
fidivl
movsb
jb
sub
add
stc
cld
xchg
enter
rolb
pop
adcb
mov
inc
mov
add
jge
adc
mov
std
add
sbb
inc
mov
add
mov
in
cmpsl
ror
hlt
inc
mov
push
mov
nop
popf
lods
movsb
aaa
pop
and
cltd
fmuls
push
js
push
mov
jg
ret
enter
add
add
lret
in
iret
jnp
sub
loope
loope
pop
int3
or
add
push
mov
and
jg
pop
add
add
add
repnz
and
sub
and
push
cld
neg
mov
aad
sub
jmp
ret
mov
pop
aad
int3
stos
add
pop
loope
xchg
push
imul
push
mov
je
push
lret
sbb
rolb
movl
mov
out
cmpsl
dec
sub
clc
in
repz
lods
out
lcall
cmp
and
sti
pop
leave
sub
xchg
and
mov
mov
mov
jmp
andb
loopne
cmpsl
add
filds
fildl
cmp
sbb
or
add
mov
xchg
mov
mov
mov
add
sub
in
mov
push
ficoml
imul
xchg
adc
cld
mov
pop
mov
xor
mov
lock
adc
insl
movsb
outsl
mov
std
add
pusha
outsl
jno
popa
aaa
loopne
jne
push
scas
cmp
bound
pop
xchg
bound
push
mov
std
or
inc
add
decb
jnp
xchg
pop
or
nop
pop
push
aaa
add
mov
dec
dec
scas
aaa
xchg
and
ret
mov
out
dec
std
fnstenv
divb
lods
repnz
mov
hlt
or
lods
clc
aad
in
add
sbb
test
flds
add
stos
dec
sahf
add
and
push
out
aaa
or
jle
sub
loope
add
dec
mov
push
xor
jnp
loope
movsl
xchg
adc
sub
icebp
cmp
sub
in
jo
bound
dec
mov
add
cmp
in
jb
add
adc
add
sbb
pop
ret
or
flds
daa
fs
ds
int
add
push
push
mov
dec
cmp
add
inc
add
imul
shll
mov
push
sbb
in
adc
add
outsb
cs
jmp
scas
testb
test
sahf
stos
stos
sbb
mov
pop
jbe
mov
add
bound
cltd
dec
stc
ja
cmp
sub
cs
jle
add
add
outsb
xchg
sbb
sahf
add
dec
inc
sub
int
roll
repz
add
jl
sub
or
call
xchg
in
pop
sahf
add
add
enter
mov
and
add
mov
inc
sbb
in
adc
and
add
das
add
push
sub
ss
xor
fs
pop
cli
icebp
repz
fs
push
xchg
stos
imul
add
xor
and
addb
dec
sub
ficoms
aad
cmp
bound
fcomi
in
push
xchg
in
xor
add
mov
or
add
fstpl
pop
ljmp
cmpsb
or
inc
add
lods
or
fcoms
pop
fwait
adc
fcmovne
mov
sub
cmp
mov
xor
mov
divb
xor
jmp
jge
xor
mov
and
sub
data16
jmp
test
cltd
dec
or
cmp
sub
stos
adc
mov
sub
pop
into
test
rol
imul
pop
out
and
jne
sub
add
into
test
out
popa
push
sbbb
dec
jl
lods
push
jmp
dec
and
fidivl
push
loopne
aam
add
jg
pop
lret
pop
inc
ret
sbb
imul
inc
cmp
movsl
sub
in
lods
in
mov
in
and
popf
pop
push
dec
xlat
in
push
fneni(8087
sbb
cmp
mov
sbb
popa
cltd
loope
xlat
sbb
iret
ds
mov
add
pushf
lock
test
xor
cs
repz
ljmp
add
xchg
cmpsb
sub
push
add
dec
cmp
add
add
xor
jg
dec
add
mov
jno
sbb
mov
outsb
cmpsl
pop
cwtl
xchg
mov
sub
ljmp
inc
adc
test
and
add
add
cmp
push
mov
mov
xlat
into
dec
xor
std
xchg
int
inc
arpl
add
loope
add
xchg
jg
pop
add
push
sbb
nop
popa
mov
adcb
std
cmp
sub
in
sub
mov
jbe
iret
add
and
adc
mov
loopne
shrb
push
stc
xor
cwtl
sbb
aad
dec
int3
leave
add
in
inc
inc
inc
popa
inc
inc
ret
in
xchg
dec
filds
mov
mov
adc
add
xchg
sarb
sbb
add
add
and
in
sub
pop
inc
jmp
adc
sub
add
xchg
xchg
add
in
and
in
fnstenv
jg
push
fdivs
add
add
sti
mov
popa
mull
pushf
test
mov
bound
add
push
divl
das
cmp
lods
push
mov
scas
sarl
in
cmp
mov
and
dec
repnz
push
loope
das
adc
ds
xchg
xorl
test
lds
add
mov
push
add
add
fisubrl
ja
xor
jle
push
cwtl
lfs
jg
sub
ljmp
pop
pusha
or
dec
lock
lods
int
sub
mov
es
mov
out
sbb
sub
dec
repnz
adc
ret
add
mov
lcall
add
lods
ja
rcrl
aas
pop
inc
sub
sbb
add
dec
pop
add
test
fnstcw
stos
jbe
push
or
enter
lods
adc
daa
pop
cmc
out
dec
aad
fldt
repnz
inc
sbb
xor
and
inc
mov
jo
or
or
add
mov
pop
push
lds
mov
add
pop
js
popf
add
add
xchg
cmp
out
push
aas
dec
jo
pusha
js
sub
push
or
and
ljmp
ret
lds
fdivrl
pop
or
jns
mov
pop
dec
call
movsb
test
xchg
negb
sub
add
out
xchg
fdivs
or
add
aaa
inc
dec
movsl
sbb
jo
mov
ds
in
add
add
sub
and
or
call
je
xchg
in
xchg
sbb
cmc
inc
daa
lods
out
mov
push
or
pop
mov
arpl
loopne
push
add
adc
adc
or
stc
add
in
icebp
enter
and
push
push
hlt
repnz
lods
cmp
pop
xor
add
pop
mov
bound
rcll
lock
add
mov
shlb
mov
fs
jnp
jecxz
mov
add
sbb
repz
mov
mov
mov
jle
in
xchg
dec
xor
aad
add
xor
out
jae
cmc
add
lret
ljmp
or
add
aam
add
gs
adc
sub
cmp
test
ret
push
push
test
add
xchg
mov
push
add
mov
push
add
add
outsl
in
adc
xor
push
imul
dec
or
add
sub
sub
add
pop
testl
mov
push
add
add
jae
das
test
lahf
inc
insl
es
addr16
dec
add
push
adc
xor
add
les
or
inc
inc
arpl
add
sub
add
adc
mov
xlat
lcall
in
or
in
add
cltd
mov
test
add
add
dec
sldt
ret
push
mov
sub
cmp
call
jle
add
pop
stos
jmp
faddl
bound
add
mov
add
sbb
mov
fwait
incl
mov
add
aam
enter
mov
mov
add
pop
fsubr
jge
lahf
or
mov
cs
je
dec
orb
pusha
aas
push
lahf
xor
out
pop
or
int3
jle
add
push
stc
movsb
addr16
or
and
add
xor
ljmp
mov
jmp
and
stos
inc
stos
add
push
jmp
in
aaa
push
mov
push
jl
mov
xlat
loopne
in
xchg
sbb
xor
xorl
js
and
in
lods
sbb
out
dec
dec
add
push
or
add
arpl
aas
pop
pop
pop
aas
stos
dec
jge
in
xor
adc
test
add
sbb
and
lea
add
daa
xor
stos
pop
inc
cmp
js
out
add
sub
push
push
test
push
imul
faddl
xor
lea
cmp
std
cwtl
mov
fimuls
outsb
pop
movb
inc
or
and
mov
add
test
push
lret
jg
mov
adc
pop
sbb
pop
jg
aaa
fistps
ja
ficoml
test
add
and
daa
sbb
cmp
jnp
cmp
outsl
push
xor
iret
fbld
lret
movsl
cmp
cmp
and
stos
rcrl
rep
pop
and
pop
and
or
cmp
sbb
dec
test
test
add
jp
push
or
add
xchg
shll
shrb
sarl
cmp
aam
cli
out
and
cmpsb
jecxz
pushf
stc
mov
xor
push
xchg
jae
popa
inc
movsb
add
jmp
mov
or
add
cmpl
or
inc
aas
add
push
mov
notb
cltd
xlat
lret
int3
and
add
dec
sub
inc
pusha
add
cmp
push
pop
mov
adc
jb
int
sub
cmpsl
cmp
dec
repz
mov
popf
push
fnstcw
cmc
repz
nop
movsb
lods
or
lds
fisttps
insl
icebp
fisttps
mov
inc
and
cmpsl
push
push
iret
or
add
lock
xchg
xchg
or
fnsave
sub
sbb
mov
dec
dec
mov
add
popf
jge
cmp
enter
dec
insb
scas
adc
imull
adc
add
cmp
pushf
setge
push
jg
and
add
insb
xchg
jae
ds
andl
xor
add
enter
push
xchg
or
inc
mov
or
add
pop
stc
cwtl
mov
cwtl
lock
and
jmp
add
stos
inc
stos
add
inc
pop
rclb
lea
push
jge
xchg
in
mov
mov
sub
xchg
fdivs
insb
mov
xchg
jmp
sub
xchg
cld
pop
mov
push
push
inc
adc
mov
jl
cmp
pop
push
xlat
addr16
ss
inc
dec
add
mov
sbb
rorb
mov
xlat
add
inc
in
shrb
es
jnp
pop
popa
cmpl
loop
call
dec
cmp
mov
dec
fiaddl
add
xchg
cmpsl
pop
roll
and
mov
inc
loope
or
add
sbb
mov
data16
dec
or
add
jae
addr16
les
add
cld
std
cmp
sahf
push
outsl
adc
mov
jge
or
add
jne
xlat
add
jae
xor
loopne
pushf
adc
sub
push
cli
cltd
or
lret
mov
mov
and
mov
into
add
add
out
imul
push
lret
pop
rcrb
mov
add
pusha
aaa
jne
cmp
add
pop
movsb
cmpsl
test
add
add
and
push
mov
fldcw
andps
xchg
xor
jle
or
add
arpl
stc
test
add
lahf
fldcw
aad
loop
mov
in
push
dec
or
add
pop
mov
jge
push
outsb
int3
int
add
jne
push
cmp
add
dec
pop
ja
in
icebp
and
push
adcl
add
int3
inc
add
jns
xor
fistpl
dec
pop
sub
std
clc
add
call
ret
das
mov
adc
dec
or
mov
sub
out
sub
ret
push
dec
ficoms
test
nop
jae
pop
xorl
and
adc
arpl
ror
add
dec
push
pop
xchg
scas
dec
jecxz
jmp
jmp
movsb
and
fldt
xor
xchg
pop
add
daa
aaa
loop
jg
mov
add
mov
xor
add
sub
inc
mov
add
pop
sbb
arpl
inc
lods
fnstenv
nop
js
pop
mov
add
pop
push
leave
lods
xor
mov
call
movsl
ds
add
lcall
or
test
scas
pop
addb
add
jno
sar
mov
clc
cmc
mov
aas
dec
jecxz
and
testl
mov
push
lret
frstor
xchg
cmp
mov
aam
cli
inc
out
loopne
add
jp
mov
imul
dec
pop
add
xorl
add
mov
aam
jns
out
mov
xor
mov
lahf
add
mov
pushf
mov
ficompl
or
and
or
outsl
add
mov
inc
xor
jecxz
icebp
pop
mov
add
mov
add
js
test
sbb
and
ret
pusha
pop
xchg
cmp
adc
cmc
cmp
xchg
out
insb
mov
jl
je
popa
fidivrl
lret
mov
jo
xchg
ds
in
fldcw
adc
jo
jl
dec
arpl
xor
lea
insb
xchg
add
xor
add
xor
add
out
divl
nop
add
setle
inc
das
std
clc
push
js
outsl
cli
xchg
dec
mov
lret
bsf
scas
xor
shlb
ljmp
or
adc
jns
push
cli
xor
lcall
shll
std
dec
incb
add
jo
mov
cmp
mov
xchg
sbbl
push
cmpsl
stc
mov
inc
push
add
inc
or
dec
ds
add
std
dec
xchg
add
bound
outsl
lods
mov
js
scas
jg
jno
push
push
leave
adc
mov
and
in
cli
jg
mov
add
xor
mov
sbb
stc
lret
or
mov
add
sbb
and
inc
mov
mov
pop
mov
or
mov
add
add
shlb
aaa
xor
xchg
stos
ja
or
mov
xchg
and
into
sub
loop
sub
arpl
mov
and
add
add
add
sub
xchg
or
mov
jge
aaa
fdivrl
loope
mov
push
js
ret
jmp
mov
insl
cltd
inc
out
adc
push
sub
add
jg
push
add
inc
js
inc
push
inc
add
or
pop
xchg
ror
ret
and
int3
fildl
add
mov
out
test
add
pop
mov
sub
push
push
mov
aas
or
and
xor
xchg
jge
pop
sbb
push
rolb
mov
push
cmp
stos
in
jmp
add
push
mov
int3
roll
add
loop
sub
xor
inc
xor
outsb
aaa
fs
sub
add
cld
jecxz
aas
add
push
mov
aad
fdivs
inc
sub
add
shll
xchg
ret
pop
cld
xchg
sub
pop
les
add
enter
dec
jge
into
mov
xchg
add
push
fstps
sub
add
sub
dec
inc
add
inc
jp
outsb
cs
sbb
insb
insb
out
inc
mov
fs
call
add
add
xor
movsl
xlat
icebp
fnstsw
stc
rorl
ds
fwait
mov
pusha
in
mov
ret
mov
mov
xchg
ja
jp
out
xchg
xor
dec
popf
add
iret
fs
mov
push
jnp
mov
mov
mov
or
dec
roll
add
jl
movsb
mov
nop
leave
adc
mov
fcmove
xchg
dec
push
add
xchg
add
shlb
je
sub
xchg
fnsetpm(287
ret
mov
cmp
add
cmp
je
not
insb
mov
inc
lds
mov
or
add
cmp
loope
lcall
push
sub
add
mov
add
roll
pop
stos
pop
mov
pop
cmp
adc
jecxz
jb
mov
filds
roll
add
fwait
xchg
rclb
out
jae
rolb
repnz
daa
mov
clc
shll
xchg
test
add
jo
sbb
push
stc
clc
loope
imul
pop
popa
fwait
xor
adc
mov
cmpsb
shrb
ljmp
adc
rorl
imul
sub
xor
pushf
jmp
add
inc
les
and
jecxz
adc
dec
out
nop
dec
or
dec
sub
mov
lods
xor
pop
fsub
jns
push
mov
sub
add
inc
or
sbb
call
pop
in
bound
sbb
pop
out
call
je
and
dec
push
sbb
add
jno
repz
faddl
jo
adc
inc
movsb
in
das
mov
ja
and
add
pusha
mov
mov
add
incb
scas
pop
call
inc
and
ds
addr16
xorps
xchg
fdiv
xlat
mov
lahf
add
addl
std
pop
popa
repnz
orb
add
or
icebp
ss
inc
xor
add
jg
inc
cmp
test
mov
and
enter
inc
add
add
sub
insl
inc
scas
add
stos
mov
dec
sbbb
add
mov
repz
ja
xchg
inc
lods
in
sbb
pop
and
in
xor
mov
mov
arpl
loopne
cmp
shrb
add
push
adc
add
dec
mov
add
add
cwtl
cld
lea
fmull
dec
jecxz
add
es
test
or
xor
xchg
add
int
push
add
adc
je
ss
xchg
jmp
sub
xor
sub
gs
xor
add
out
push
pop
lds
imul
xor
xor
mov
mov
fdecstp
adc
mov
ret
hlt
fwait
movsb
mov
clc
cmp
pop
lret
or
xchg
xlat
mov
inc
popa
adc
lcall
add
pop
jmp
mov
mov
xor
repz
add
push
sbbb
adc
add
iret
shll
mov
pop
lcall
mov
jne
push
mov
add
test
add
jae
leave
adcl
pop
xorl
xchg
push
mov
and
push
lods
mov
cmp
add
nop
xor
hlt
je
rolb
loopne
decb
std
sbb
xchg
cmc
aaa
mov
sbb
clc
sbb
jae
jp
out
add
movsl
sar
mov
ret
lret
add
es
push
add
nop
loop
xor
lret
mov
mov
adc
jo
mov
adc
add
jp
insb
dec
inc
inc
push
mov
adc
mov
fadds
cmpsl
ret
adc
insl
sbb
sbb
sub
add
sbb
sbb
scas
fwait
pusha
xor
fsubrs
ljmp
dec
and
add
ljmp
inc
add
sub
mov
mov
insb
jmp
jo
test
in
shll
scas
and
loope
cld
ror
pop
sbb
popa
mov
mov
aas
push
ja
add
scas
adc
pop
cmp
jge
adc
and
inc
jno
add
imul
ret
in
fisubrs
jnp
repz
add
add
lock
push
cmp
jbe
das
inc
hlt
test
xlat
add
pop
fistps
movsb
push
xchg
fistps
fs
xlat
lcall
push
cld
push
mov
jne
add
sub
mov
add
add
xchg
push
jbe
das
push
and
iret
pop
jecxz
sahf
popf
lahf
jns
sarl
mov
and
inc
iret
es
int3
stc
add
inc
mov
mov
sub
add
add
ret
jg
incl
add
add
sbb
or
mov
cmp
fistpl
cmp
lret
out
out
sar
lret
xor
pop
aam
xor
jne
xchg
adc
xor
xchg
jb
addb
add
pop
icebp
das
jp
xchg
mov
fwait
mov
pop
fidivrl
lds
mov
or
aas
push
and
ljmp
cmp
push
xor
into
cmc
pop
in
mov
adc
dec
add
sub
sbb
aaa
call
ja
mov
int
pop
pop
ret
jb
mov
add
add
icebp
js
pop
jl
mov
pop
jmp
and
mov
outsl
xchg
add
sbb
icebp
faddl
cmpsb
addb
or
jno
mulb
adc
add
pop
push
inc
dec
outsl
push
lret
dec
jmp
jmp
cmp
sbb
mov
add
je
in
or
push
xchg
rorl
pop
and
jne
les
add
inc
pushf
xchg
lods
scas
push
add
add
scas
xchg
dec
adc
dec
fiaddl
add
lods
push
mov
sbb
jge
sbb
add
adc
jmp
mov
cmp
add
mov
mov
push
sub
dec
cmp
and
cs
pop
pushf
mov
bound
xor
sub
pop
into
nop
ds
add
rolb
add
popf
push
adc
iret
pop
lods
jne
in
adc
add
imul
dec
dec
add
hlt
lcall
push
mov
add
nop
jge
pop
test
call
inc
addb
cmp
push
jge
popf
add
jge
xor
push
add
in
and
mov
add
push
jp
cmp
dec
cltd
sub
adc
mov
ss
mov
sbbb
mov
jge
pushf
scas
xchg
dec
or
add
dec
lret
or
add
xchg
outsl
xor
sbb
es
flds
es
cmp
cwtl
mov
jecxz
in
pusha
cmp
lods
mov
add
loop
jecxz
movsl
out
mov
fdivrl
push
rcrl
xlat
mov
add
add
inc
aad
push
mov
jl
lods
dec
mov
cmpsl
lea
adc
flds
push
cmp
addb
and
mov
push
add
jnp
gs
stos
mov
pop
divb
inc
add
mov
les
add
adc
push
add
in
cmc
and
out
fimull
mov
leave
jnp
pop
cmpsl
or
ja
addr16
xor
pop
loopne
out
sbb
mov
js
sbb
push
add
out
cld
out
dec
dec
sahf
imul
mov
in
push
push
jnp
dec
inc
js
aad
or
addr16
scas
outsl
shlb
sub
pop
add
dec
es
jns
add
add
loop
ficoml
int3
jnp
add
sbb
not
cmp
cli
ret
add
xlat
data16
insl
xor
add
in
add
ret
into
call
and
or
daa
xchg
stos
mov
mov
das
cmp
push
xor
or
add
sub
ja
xchg
cwtl
shl
add
jnp
pop
gs
dec
or
add
nop
pop
loope
mov
ds
xor
xor
add
add
repnz
mov
sub
aas
movsb
jg
add
and
movsb
and
in
icebp
les
add
sbb
add
dec
not
cmp
ror
jae
push
insb
mov
add
popf
in
sbb
sbb
add
pop
inc
push
add
clts
pop
mov
cli
clc
je
fucomp
pop
fs
sbbl
mov
add
push
pop
out
mov
mov
pusha
mov
add
cmp
adc
aas
jmp
ret
ss
lods
sbb
xor
add
mov
add
je
add
push
pop
pop
vpmaddwd
mov
leave
or
or
xchg
addb
outsl
xor
out
lods
mov
pushf
arpl
idivb
dec
add
pop
add
frstor
cmc
stos
incl
fsts
and
push
sub
int3
pop
add
cmp
push
adc
mov
jp
popf
add
and
es
imul
mov
xlat
add
sub
mov
dec
add
in
push
xor
test
jmp
add
sub
jno
dec
inc
add
adc
jne
or
out
sub
subb
loope
inc
add
xchg
aad
pusha
loope
xchg
mov
in
into
in
sbb
lret
add
push
nop
xchg
fildl
cld
fnsave
add
and
add
aaa
mov
jo
jnp
dec
add
dec
sahf
jnp
jne
js
loop
sbb
pop
mov
ljmp
outsb
sbb
dec
or
lcall
fisubrs
shll
mov
sbb
roll
add
add
inc
push
enter
cltd
push
popa
add
sub
add
cltd
sub
add
add
push
int3
bound
add
add
out
into
inc
and
push
mov
arpl
push
push
daa
mov
jb
insb
cmc
mov
insb
in
mov
fcomi
sub
inc
and
scas
daa
xor
add
es
xor
mov
sub
jne
pushf
sbb
mov
or
hlt
push
mov
xchg
popa
ret
ficomps
pop
pusha
adc
adc
test
ss
nop
adc
pop
lods
pop
mov
repz
dec
push
add
out
dec
mov
jle
jmp
adc
dec
add
cmpsl
xchg
or
add
ja
pop
outsl
lds
xor
mov
add
adc
sahf
cmpsb
xchg
lods
int
cwtl
dec
lods
bound
sbb
pop
and
or
add
jge
fld
out
movsl
push
cmp
sub
sbb
inc
sub
or
add
cmp
add
jl
jp
mov
pop
add
cmpsl
insb
jo
dec
push
or
dec
push
fiaddl
sbb
inc
test
pop
insl
leave
enter
jb
aaa
sub
lahf
clc
scas
pop
inc
dec
push
ret
lcall
xor
mov
sahf
inc
xchg
es
dec
mov
add
mov
or
test
enter
fstl
mov
inc
sub
test
xchg
std
movsl
xor
addr16
dec
add
arpl
rcrl
lock
lcall
popl
xor
js
cltd
idivb
pop
aam
sub
bnd
mov
inc
neg
ds
push
popf
cmp
add
inc
add
sbb
enter
mov
or
in
jmp
dec
xor
fldt
dec
lea
ljmp
and
pop
dec
das
add
test
cmpb
popf
sub
jns
add
pop
sub
xor
push
sub
js
sub
push
aas
lock
arpl
mov
add
or
inc
push
mov
add
test
mov
in
mov
add
movb
popf
cwtl
and
sub
or
add
pop
dec
lock
mov
adc
add
xchg
addr16
jno
add
int3
add
imul
seto
jl
or
cmp
sub
xor
into
cmp
dec
add
sbb
xchg
mov
xchg
inc
xchg
xchg
add
or
jmp
mov
add
shll
fdivl
and
mov
add
mov
repz
mov
stos
and
mov
adc
xchg
add
cli
add
add
cmpsb
sub
mov
xor
jg
adc
pcmpeqw
into
pop
jg
rcrl
add
lods
xor
xor
sbb
pop
dec
das
lret
cmp
jecxz
aaa
data16
adc
xor
add
mov
bound
mov
fwait
jl
sti
adc
fists
mov
or
add
mov
or
les
xchg
repz
out
arpl
es
rolb
mov
cmp
mov
sbb
xchg
jb
aam
xor
add
sub
jae
push
out
hlt
imul
sbb
ss
xor
pop
cmp
xor
adc
push
cld
jle
mov
fmull
jns
pminsw
xchg
fmul
cmpsl
ror
fdivs
add
aam
das
jne
lods
jmp
mov
loopne
mov
push
rcrl
mov
imul
add
jecxz
sbb
popa
orl
jnp
insl
add
outsb
push
mov
or
jno
lds
icebp
lret
add
gs
pop
or
add
sub
mov
pushf
sbb
fdivrs
xchg
xor
dec
dec
enter
adc
movsb
mov
add
movl
push
in
dec
js
mov
repnz
and
cli
jno
fwait
vpsubusw
add
ljmp
pop
adc
insl
xchg
mov
mov
mov
adc
push
push
pushf
daa
adc
pmullw
jmp
push
lds
fimuls
aam
jp
sldt
push
daa
cmc
mov
ljmp
inc
sbb
sub
push
das
pop
or
in
adcb
std
xor
ret
add
xchg
pop
mov
xor
push
add
add
jle
movsb
insb
jns
xchg
mov
jns
push
jle
mov
mov
mov
add
adc
out
or
inc
add
xor
addb
imul
addb
jo
sbb
fisubrl
arpl
jnp
ds
sbb
add
int3
fiaddl
add
dec
cld
push
sbb
add
add
sub
in
push
add
imul
pop
sarl
and
add
sbb
pop
fs
add
add
je
cmp
push
dec
push
add
and
dec
push
xchg
mov
add
fisubrs
inc
bound
aas
out
inc
scas
add
cmp
test
add
das
or
lea
inc
lret
jb
mov
add
add
xor
cmc
add
or
xlat
jo
xor
inc
repz
push
ficomps
dec
mov
repnz
jns
bound
shll
mov
push
cmp
jl
or
inc
mov
fwait
add
in
sbb
pop
push
sbb
cmp
adc
add
icebp
sahf
imul
push
dec
jg
adcb
lock
sahf
add
push
repnz
xor
cmpsb
cli
out
mov
lods
aad
lods
out
jbe
push
fnstcw
icebp
cld
add
mov
dec
das
push
dec
jbe
add
rorb
jge
dec
inc
jg
add
mov
cltd
idivl
sub
mov
mov
insl
sub
cwtl
jle
and
add
pop
fcom
sub
or
inc
roll
add
loopne
push
sub
or
lret
or
add
mov
xchg
mov
enter
test
add
in
xor
mov
inc
pop
fadds
adc
imul
out
add
scas
sub
pop
add
add
dec
xchg
mov
add
jmp
test
add
dec
lea
scas
xor
out
stos
in
dec
mov
add
xchg
lock
jmp
cwtl
pop
ret
xchg
add
push
and
ja
adc
add
mov
and
test
add
or
sbb
push
sub
stos
and
mov
adc
add
cmpsl
and
add
lret
sbb
fsts
mov
mov
faddl
add
in
ljmp
add
lock
fmuls
fcoms
cmp
add
jno
sub
xor
cltd
aam
nop
mov
ss
clc
mov
and
scas
add
pop
or
mov
repz
push
lock
mov
outsb
xchg
out
cmpsb
stos
ret
je
pop
inc
aam
mov
add
mov
dec
cmpsl
pusha
mov
adc
push
rcll
loop
pop
pop
and
test
push
lods
cltd
cmp
push
push
cwtl
jg
in
or
mov
test
sub
mov
es
scas
icebp
jmp
lahf
xor
push
mov
mov
cmovae
mov
pop
shlb
loopne
jl
mov
add
mov
ss
mov
outsb
or
insl
dec
sbbb
add
aam
push
repz
inc
mov
cs
out
js
in
pop
mov
aad
imul
add
xchg
pop
sbb
arpl
cli
mov
test
outsb
into
mov
sub
ja
adc
add
movsl
jp
cmc
sbb
outsb
sub
inc
sub
sub
add
inc
fdivl
push
mov
pop
adc
dec
jl
int3
xor
add
jl
add
test
test
into
fsts
xor
fstps
sbb
add
dec
repnz
loopne
add
pop
fdecstp
cmp
outsb
scas
test
pop
mov
ljmp
in
add
add
test
cmpb
cmp
pop
sahf
mov
jmp
bound
xchg
lds
mov
outsb
add
call
xchg
dec
rcll
cwtl
clc
and
arpl
sub
repz
dec
push
orb
sub
add
sti
stos
shlb
add
imul
sub
add
stc
arpl
or
aam
ljmp
ja
add
cmp
mov
clc
inc
and
pop
sbb
jge
add
or
add
incb
add
out
popf
mov
je
lcall
sub
xor
push
push
addr16
aam
lds
cmp
add
outsb
sbb
lahf
xlat
sub
xchg
jo
pop
push
popa
xchg
jg
out
mov
outsb
mov
jnp
adc
aaa
xor
scas
jge
lret
sbb
xchg
test
jp
sbb
or
xor
add
jns
lcall
decl
loop
inc
add
jl
pusha
leave
xchg
cmp
adc
add
lcall
sahf
lea
cwtl
or
sub
movsl
push
iret
das
mov
sahf
sbb
insl
or
add
mov
lods
popf
je
add
add
push
pop
clc
je
je
sub
cmc
or
add
roll
insl
and
pop
ja
push
add
or
aas
add
mov
add
add
adc
mov
ret
fistpll
stos
jae
leave
pushl
lods
cmp
cmp
out
adc
shr
xchg
movhps
or
add
xchg
dec
xor
imul
mov
add
lret
fcmove
add
sbb
dec
push
roll
add
add
or
mov
or
int
out
sbb
in
cmp
dec
out
dec
push
mov
add
mov
jbe
cs
mov
jns
out
mov
in
andl
jne
sub
dec
xor
mov
cld
xchg
int
xor
jno
ss
sbb
aam
sbb
loop
pop
leave
clc
arpl
xor
inc
add
push
jp
mov
psubusb
dec
jl
les
add
mov
and
in
lahf
sbb
in
into
or
pmulhw
out
lea
jge
push
sbb
mov
ficompl
rcl
inc
sbb
cmp
icebp
outsl
testl
test
inc
sub
add
and
inc
fdivrs
sub
inc
add
mov
add
imul
imul
push
cmp
mov
and
jb
ja
sub
or
pop
cwtl
inc
sbb
adc
xor
icebp
inc
push
add
pusha
out
mov
daa
fldt
add
sbb
add
add
leave
mov
stos
adc
push
mov
mov
repz
insl
dec
xchg
cld
ret
out
add
movsl
gs
nop
lds
cmpsb
mov
xor
inc
jns
mov
insl
pop
pop
fxch
sub
leave
sub
fwait
sbb
mov
inc
int3
add
outsb
iret
lret
jg
inc
mov
add
or
add
in
fiaddl
add
subb
or
add
dec
leave
je
push
stc
aaa
xchg
jge
and
sub
mov
je
mov
adc
popf
pop
pusha
xchg
pop
and
sub
pop
lahf
jg
or
aam
sbb
aaa
mov
das
nop
lret
cmp
cltd
add
je
add
add
cs
and
sahf
xchg
popf
cmp
das
adc
mov
pop
ds
xor
jp
ja
insl
dec
adc
aaa
adc
aas
mov
sub
mov
dec
movsl
fisubrl
inc
orl
sahf
dec
scas
orb
mov
add
pusha
in
lahf
and
ficoms
add
jo
pop
sbb
jne
sahf
test
adc
pop
pop
js
push
add
lods
ret
pop
out
mov
jo
or
lret
xor
add
mov
pop
xor
pop
inc
scas
insl
les
add
mov
imul
imul
or
stos
cmp
pop
mov
add
jmp
cltd
jl
out
bound
cmc
ljmp
aas
mov
pop
test
and
add
add
push
mov
cmp
add
add
push
dec
pop
sub
xchg
dec
adc
pop
add
xchg
xor
mov
pusha
cmp
mov
add
and
nop
rcrl
jg,pt
cmp
lock
add
stos
add
sub
pop
sub
je
aam
cmp
rorl
lahf
test
fildll
fstpl
insb
fucom
and
int3
pop
add
xor
ds
iret
pop
sub
shll
testb
mov
xor
mov
int
add
jae
push
inc
test
ja
add
add
mov
pop
ss
adc
push
add
add
pop
outsl
movsl
das
fmul
inc
sbb
add
lock
sbb
sbb
jp
rcll
pop
ds
shlb
push
push
or
jnp
add
adc
mov
inc
aam
add
lret
mov
ret
and
adc
mov
and
dec
jne
lods
adc
lods
add
mov
add
insb
sub
add
add
jno
sbb
aaa
inc
and
add
pop
loop
testl
dec
movsb
add
lahf
mov
add
jbe
jp
dec
jb
add
or
adc
mov
add
or
or
add
iret
add
add
mov
dec
popf
ror
add
adc
jb
xor
push
pop
ljmp
lea
add
nop
mov
adc
xlat
loop
add
add
push
ficoms
mov
popa
inc
aad
add
lahf
cmp
lock
inc
mov
add
mov
sub
add
cltd
mov
leave
xchg
sbb
cmp
repnz
adc
mov
mov
or
add
dec
fstl
dec
jo
add
inc
test
adc
lods
imulb
sbb
jb
or
or
pop
xor
test
pop
and
and
icebp
sahf
les
rcll
mov
add
add
mov
iret
imulb
fisttpll
xchg
mov
js
and
add
push
mov
adc
sbb
aad
add
mov
xchg
lods
push
fwait
and
add
xchg
add
sbb
sbb
cmp
xor
jmp
lret
popa
lret
shlb
jnp,pt
sbb
cmpsl
pushf
mov
xchg
hlt
mov
test
sti
mov
add
outsl
mov
mov
push
add
pop
mov
add
xorl
into
ficomps
lret
enter
push
xchg
mov
add
add
movsb
out
xor
fmull
ret
bound
xor
jp
mov
add
inc
out
lock
pop
and
dec
dec
add
es
pop
jns
adc
adc
je
mov
imul
fisubs
icebp
jge
ret
nop
jg
sub
add
mov
add
jns
andl
add
or
add
pop
lea
daa
jne
add
imul
scas
mov
add
into
in
aad
or
add
dec
imull
cli
int3
xor
add
out
das
rcrb
dec
addb
pop
call
push
add
mov
add
int3
into
add
in
aad
sahf
and
cmp
nop
mov
cmc
or
fwait
or
mov
loop
rclb
add
iret
fnstsw
nop
add
clc
jl
sbb
call
add
jb
scas
adc
add
sbb
pop
fdivr
inc
dec
lahf
add
add
add
fs
xchg
push
and
fadds
pop
aas
mov
call
pop
lods
ds
pop
inc
lcall
out
sti
xchg
test
je
ret
adc
ljmp
push
xchg
mov
add
add
pop
sub
jmp
ljmp
push
sbb
aas
lcall
popa
cmc
dec
clc
add
jne
xorb
add
dec
push
stos
cmp
fmull
sbbl
lds
popf
ret
ret
jno
cmpsl
jge
and
add
add
jle
inc
xor
dec
mov
inc
mov
add
pop
or
add
rcrb
xchg
mov
and
inc
rcll
lea
dec
jb
xchg
xor
cmp
inc
mov
add
cmc
cmp
jnp
push
loope
xchg
out
les
dec
add
add
jmp
mov
add
pop
jne
repz
out
js
mov
mov
daa
xchg
in
stos
daa
jmp
test
add
inc
fcmovnu
and
pop
pop
sub
repnz
cmpsl
lahf
sbb
push
cmpsb
fs
pop
push
cmp
xor
mov
add
das
out
mov
clc
ret
cmp
cld
inc
es
mov
add
cmp
mov
push
cltd
fsubr
not
loopne
and
push
dec
jmp
in
mov
out
sub
ja
and
movsl
mov
mov
sbb
pop
sbb
jmp
inc
aad
mov
xchg
sti
daa
cmpsb
imul
xchg
add
mov
ds
push
pusha
pop
mov
and
add
inc
mull
mov
mov
fildll
mov
mov
inc
ds
xor
int3
outsl
add
mov
jmp
cld
stos
push
sub
sbb
pop
push
push
push
add
push
sbb
jl
mov
xchg
cwtl
aaa
mov
mov
add
rcrb
and
outsb
popf
and
dec
jle
mov
xor
ss
dec
test
aam
sbb
test
add
pop
or
int
fdivs
add
ljmp
into
rcrb
pushl
cli
movsl
movsb
push
pop
stos
stc
mov
add
sbb
mov
imul
push
cmpsl
repz
repz
arpl
pop
orl
sbb
cltd
or
std
inc
jle
xor
mov
mov
enter
cmpsl
pop
icebp
cltd
xchg
ja
fs
xchg
add
add
pop
jno
mov
or
jns
and
push
xorl
or
adc
xchg
sbb
push
out
iret
pop
pop
xchg
jmp
sbb
cwtl
stos
push
rcrl
sbb
icebp
aam
pop
push
outsl
jl
mov
add
push
xchg
ds
mov
add
leave
fcmovnb
fadds
add
nop
pop
mov
add
jo
mov
jmp
pusha
lret
adc
mov
add
enter
inc
stos
push
mov
xchg
add
cltd
int
pushf
mov
call
aad
add
test
jns
or
push
pop
or
mov
add
lods
mov
add
xor
insl
sub
mov
je
mov
cwtl
fisubrs
mov
add
adc
cld
xchg
stos
adc
mov
lcall
mov
sub
adc
outsl
test
and
je
sbb
outsb
add
push
sub
or
add
sahf
jmp
mov
rcl
test
arpl
je
enter
hlt
scas
js
jae
stos
fs
xor
jb
xchg
jne
data16
xor
aas
xlat
dec
mov
add
xor
xor
and
push
dec
daa
add
inc
cmp
dec
movsb
imul
or
gs
dec
push
and
jl
add
das
scas
aaa
add
enter
test
repz
loop
pop
mov
xor
sti
stc
sbb
stc
and
fistl
dec
mov
jecxz
cmp
dec
popa
add
lds
or
aas
sub
pop
das
cld
std
push
xor
mov
add
dec
add
add
ss
pushf
add
dec
jne
test
ds
or
add
add
mov
mov
pop
nop
lea
add
push
popf
sub
cmp
ja
xor
sub
out
cmpsb
popw
xchg
or
add
mov
subl
test
add
shlb
push
lods
pop
call
int
es
mov
mov
stos
sahf
mov
add
sar
add
pop
pop
pop
popa
fiadds
push
popf
std
cltd
or
add
adc
add
push
mov
fwait
push
push
lcall
xlat
add
jns
and
add
dec
rolb
add
add
lret
das
adc
mov
lret
lret
ret
jb
jp
into
popa
inc
mov
jno
addr16
rorl
int3
js
add
add
push
mov
inc
jmp
add
add
and
ret
xchg
jecxz
insl
jle
mov
add
loop
call
mov
pushf
stos
fbld
mov
mov
and
lds
push
add
push
imul
add
cmc
or
add
lds
inc
sub
cmpsb
cvtps2pd
cmp
js
hlt
push
aad
or
add
xor
mov
add
in
shl
add
jecxz
and
pop
push
in
cmp
mov
stos
nop
pop
jge
push
inc
leave
add
cmp
loope
sub
xchg
xchg
sbb
lea
add
fildl
add
xchg
push
stos
fistpll
fcmovnb
xlat
sbb
pop
dec
gs
push
pop
addr16
jle
jae
lds
jne
arpl
movsb
pop
xchg
jb
pop
insl
xor
test
sub
push
subl
add
sub
ljmp
lods
inc
les
add
insb
jne
mov
ja
addl
scas
inc
icebp
loopne
mov
sub
push
movsb
cmp
inc
push
es
add
add
add
stc
testl
fldenv
into
adc
push
prefetch
and
pop
sbb
and
into
xor
inc
mov
add
push
call
xchg
mov
add
add
push
xor
sub
add
lret
insl
cli
adc
subb
xchg
mov
jo
adc
add
lcall
les
add
xor
int3
inc
add
shrb
rcrb
add
and
add
insl
sbbb
add
add
adc
insb
adc
addr16
sbb
jl
add
pop
imul
lods
pop
ficomps
lcall
add
and
lods
ljmp
jns
repz
test
add
push
ss
dec
fiadds
add
add
inc
imul
rorl
mov
ret
inc
or
inc
add
int
add
or
add
add
gs
xchg
in
xorl
xor
pushfw
in
aas
inc
mov
shll
add
jecxz
add
cmp
add
ljmp
loop
add
movzwl
xor
rcrb
add
inc
mov
les
add
hlt
paddsb
inc
scas
aas
dec
lea
loopne
xchg
jmp
sub
in
add
rclb
scas
cmp
add
divb
nop
mov
xchg
pop
lock
ss
add
jo
add
ret
sbb
out
xchg
sbb
aas
sbb
pushf
popf
push
push
sbb
mov
adc
xor
sub
fwait
es
cld
sahf
enter
adc
dec
xor
insb
adc
or
xlat
mov
nop
lret
js
mov
push
or
inc
jne
popf
adc
pop
je
adc
mov
xchg
add
jbe
fsubrl
ss
popf
pop
adc
sbb
rorb
sbb
call
in
or
cmp
jne
xor
adc
xor
repz
pop
mov
add
dec
int
mov
ja
push
es
scas
data16
adc
mov
mov
add
add
insb
out
mov
aaa
outsl
cs
lds
popa
lods
int
cmc
add
fwait
push
inc
and
jo
and
cmc
or
add
cli
and
jbe
bound
addl
lock
mov
and
inc
lret
les
stc
clc
scas
push
and
xchg
cmpsl
cmp
cmpsl
add
sub
and
lods
inc
push
add
jnp
adc
adc
mov
add
sub
jno
jo
mov
push
or
add
mov
cs
mov
imul
add
or
add
popf
dec
in
lret
cmp
add
xchg
jnp
pop
out
jge
add
add
mov
jg
xchg
cs
sarl
push
fistps
movsl
into
mov
push
jne
inc
add
push
push
lahf
pop
push
rol
pop
bound
cmp
dec
jb
mov
ljmpw
orl
jne
aad
stos
arpl
and
orps
add
pop
outsl
jg
mov
iret
lcall
cltd
add
push
popa
push
sub
cmp
loope
add
mov
daa
jmp
jne
mov
insb
shrl
imul
popa
sti
scas
movsl
mov
jle
fsub
inc
mov
or
add
mov
pop
aam
fsubl
xor
rclb
fcomp
sarb
subb
ficoms
push
dec
in
xchg
lds
pop
cmp
test
daa
xchg
mov
add
xor
sub
call
and
sahf
test
add
xchg
xor
adc
or
xchg
jmp
lcall
pusha
and
add
sbb
push
enter
xor
mov
mov
fldl
add
push
mov
loopne
sbb
pop
loop
leave
mov
in
std
insb
cmp
push
lock
mov
test
add
fistpl
jecxz
mov
or
imul
rcrb
cmp
out
imul
or
add
add
andb
mov
add
lods
in
lea
or
add
repnz
test
movsb
xlat
pop
add
aad
mov
dec
push
xchg
jp
dec
ljmp
push
add
or
lret
or
add
add
movsb
push
inc
dec
add
xor
push
jne
sbb
stc
add
add
mov
add
xchg
add
add
lret
and
stos
cwtl
pop
jl
mov
jl
or
inc
pop
cmp
push
out
pop
cmp
testl
test
ss
sbb
mov
xor
add
add
outsl
jbe
and
add
stos
mov
rcr
add
xchg
ret
insl
lock
add
pushf
jae
sbb
add
cmpl
push
pop
lahf
nop
cli
inc
gs
dec
orl
xchg
mov
fildl
lret
stos
or
dec
clc
loop
and
js
sub
repnz
sbbb
sbb
mov
add
and
cmp
es
std
adc
insl
xchg
into
fisubrl
jo
mov
push
lret
and
pop
insb
xlat
lahf
in
outsb
push
mov
push
and
cltd
xor
add
popf
icebp
out
jae
out
pop
mov
lret
movsl
push
xchg
js
or
add
pop
xchg
add
subl
add
mov
mov
add
push
aaa
pop
pop
enter
pop
xchg
in
into
pop
and
mov
add
aam
test
push
pop
jae
cmp
jmp
sbb
lock
das
jle
push
xor
ljmp
xchg
cmc
out
lock
out
je
push
ret
insl
pop
lods
mov
pop
movsb
jae
or
cmp
hlt
dec
fstpl
loopne
fsubs
into
mov
mov
inc
fmuls
mov
jno
add
and
push
xor
movb
std
test
add
sbb
call
jge
adc
push
xchg
dec
add
pop
and
jne
add
repz
add
into
and
mov
pop
sbb
testl
or
sub
cmp
aas
pop
xchg
jbe
loop
mov
mov
shl
mov
lret
ret
xchg
xor
xchg
add
or
add
clc
xchg
popa
sub
mov
shlb
inc
lret
jbe
sub
pop
loopne
or
cld
aas
popa
xchg
xchg
dec
jle
add
int
jp
jl
xor
adc
ds
add
sbb
add
push
aad
mov
repnz
movb
sub
bound
and
int
sub
std
mov
stos
xchg
lods
arpl
aaa
andps
add
fdiv
gs
shlb
into
std
loop
cmp
notl
push
push
xchg
ret
movsb
shlb
add
stos
mov
loopne
sbb
push
jge
in
imul
stos
test
add
cmp
jae
inc
sbb
cmp
fisubs
imul
icebp
stos
cmpsb
enter
xor
and
add
jnp
outsl
inc
mov
stos
hlt
test
sahf
jns
sbbl
hlt
mov
aad
and
ret
sbb
or
incb
test
add
test
mov
dec
leave
xchg
mov
add
pop
jnp
fwait
jno
test
add
sub
es
or
add
jp
mov
sbb
mull
into
test
jmp
negl
push
add
aam
loop
dec
hlt
mov
nop
popa
dec
sub
outsb
xlat
sub
shr
mov
dec
cmp
add
push
adc
daa
or
add
cmc
cmp
int3
mov
cltd
and
repz
jecxz
mulb
dec
push
aam
xor
inc
add
lock
test
daa
ret
jecxz
sub
addb
dec
xor
add
pushf
add
call
pop
decl
xchg
add
popa
mov
lods
dec
jno
add
ret
scas
mov
flds
add
lahf
push
sahf
xor
jg
xor
add
adc
add
lods
pop
fldl
lods
lret
ret
pop
cs
jecxz
dec
or
add
rorb
add
inc
pop
add
xor
repnz
arpl
cmc
add
inc
les
dec
pop
xchg
xlat
leave
sbb
cmpsl
add
sub
sbb
sar
adc
stc
shl
add
jae
add
xor
lcall
outsl
inc
or
add
dec
movb
sbb
jne
cltd
lds
mov
push
or
add
fmulp
movsl
clc
jmp
mov
aaa
test
add
arpl
pop
pushf
movsl
pop
mov
xlat
mov
xchg
push
std
jae
xchg
iret
mov
add
outsl
pushf
inc
and
inc
sarl
iret
fistl
adc
rorl
adc
and
and
rolw
or
sub
xchg
push
addb
and
rolb
aad
aaa
xor
daa
adc
lret
add
mov
jbe
xor
cmp
sbb
and
jp
inc
inc
leave
stos
clc
icebp
jns
mov
es
or
add
push
sbb
inc
and
fdivs
pop
dec
add
das
ret
mov
add
add
jae
mov
movsb
mov
jl
add
add
or
add
cmpsl
push
mov
add
daa
and
sub
xchg
neg
sub
jge
cltd
jge
jecxz
or
test
add
hlt
jae
cltd
cltd
sbb
add
lret
pop
out
imul
lock
pop
mov
xchg
add
cmpsb
outsl
loop
push
xor
adc
pop
ljmp
hlt
outsb
or
sub
test
gs
imul
add
add
ljmp
mov
push
jg
les
add
loop
les
add
fidivrl
cltd
xchg
mov
cmc
leave
dec
test
add
mov
sbb
cmp
stc
add
xor
lret
inc
jbe
imul
lret
ret
mov
add
sbb
ss
bound
add
sub
adc
cmp
inc
ret
sbb
add
ljmp
inc
mov
les
add
add
in
pop
dec
pop
addl
add
push
sbb
mov
out
push
ja
rcl
aaa
push
stos
ljmp
les
add
bound
adc
sub
int3
sub
add
in
mov
pop
roll
add
call
push
das
jo
fldcw
mov
push
add
and
aas
aad
ret
sub
inc
sti
leave
sub
adc
faddl
add
jmp
mov
sti
xor
xor
repnz
push
add
bound
out
pop
movsl
shr
add
dec
sbb
insb
add
test
test
sbb
cmpsb
arpl
mov
fdivl
add
pop
test
add
push
xchg
lock
shlb
fisttpll
shlb
pop
cmp
aad
jg
cmp
xor
add
mov
add
xchg
test
aaa
sub
add
jns
test
outsb
pop
neg
adc
inc
push
add
popf
jb
in
fwait
and
fsubr
pop
in
int
xor
scas
mov
jp
pop
fsubs
das
push
mov
sub
bound
jmp
xchg
cmp
add
data16
fistpll
push
pop
sub
incb
add
mov
add
add
push
clc
xor
enter
inc
call
pop
insb
fdivr
das
mov
shll
dec
jbe
pop
cwtl
xchg
inc
lret
sbb
fmull
mov
mov
add
dec
pop
jns
repnz
add
sub
insl
movsb
movq
adc
add
cmp
push
add
and
mov
mov
xor
in
notb
call
dec
mov
add
stc
mov
push
stos
push
lret
std
gs
jae
xchg
cmpl
inc
and
add
fstpt
in
pop
xor
add
pop
inc
add
lahf
add
push
call
pop
ja
popf
lods
inc
add
xlat
dec
mov
popl
xor
enter
jno
shlb
inc
ret
addr16
cwtl
push
xchg
loope
out
int
ja
inc
xchg
add
sbb
jl
cmc
mov
sbb
movb
add
dec
xor
sahf
jle
push
sub
insl
xchg
lret
sub
jns
in
int3
mov
add
aad
fistpl
das
fnsetpm(287
sub
jb
push
sub
jl
dec
fidivrl
pop
sub
inc
daa
pushf
mov
popf
mov
mov
push
pop
sbb
push
push
add
es
sti
shlb
add
jl
mov
add
insb
sbb
or
cmp
push
add
jle
rol
out
jp
push
fildl
add
jns
add
mov
pushf
jns
cwtl
jne
push
rcrb
add
add
mov
in
xor
les
add
add
inc
out
lds
iret
add
add
cmpsb
mov
xchg
mov
mov
push
jmp
xor
cmp
mov
inc
popf
add
dec
adc
push
sti
sti
in
sbb
inc
outsl
inc
xchg
add
into
sub
std
les
add
pop
cld
imul
mov
or
xor
sbb
push
mov
fsub
imul
popa
in
pop
cmp
int
dec
push
xor
add
mov
inc
adc
add
adc
sub
call
pop
add
sti
test
sub
ss
idivl
adc
add
pop
pop
jbe
mov
add
add
movsl
or
pop
cld
jp
scas
mov
jno
stc
push
jae
jmp
sub
dec
sub
pop
add
sti
add
int
add
dec
pop
jno
imul
fwait
clc
inc
stos
xchg
inc
adc
add
sti
mov
stos
dec
pop
add
lods
inc
jns
aas
lcall
or
add
pop
aad
mov
jo
pop
mov
dec
adcb
mov
sub
flds
add
fldt
aaa
mov
insl
das
fidivs
lods
adc
cmp
sbb
add
fmuls
aam
inc
xchg
adc
nop
cmpsb
add
or
pop
jmp
lock
aaa
mov
xor
mov
pop
add
lods
faddl
mov
mov
mov
dec
push
sbbb
nop
mov
ret
xor
xchg
mov
inc
add
jnp
fucomip
and
fcmovb
test
cmp
cld
lcall
xor
jmp
es
jge
mov
sub
lret
out
cmpsb
lcall
mov
xchg
mov
add
test
int
add
add
adc
movsl
adc
xor
sub
sub
call
sub
hlt
pop
cmp
add
cltd
in
fldl
xchg
push
push
mov
imul
movsl
stos
mov
add
dec
jb
add
stc
xor
loop
inc
mov
cmc
dec
adc
out
dec
sbb
lret
arpl
sbb
dec
xor
add
mov
jmp
pop
push
xchg
mov
out
and
insl
cmpsl
lods
scas
jo
add
fildl
addl
fisubrs
je
ds
mov
sub
cs
push
mov
xchg
leave
lods
mov
das
ret
add
add
js
leave
and
scas
xor
insb
sar
add
adc
lea
out
sbb
jg
push
stos
jno
mov
insb
inc
mov
add
add
aam
das
das
fidivrl
jg
sub
xchg
pop
sbb
cmc
in
jp
jo
aas
out
out
fdivrl
rol
mov
leave
shll
test
mov
jmp
add
mov
aam
pop
pop
xorb
jb
push
lahf
cmp
sub
sub
sbbb
hlt
in
mov
xor
cmpsb
fs
mov
inc
pop
add
fistpll
lahf
sub
push
and
inc
stos
icebp
xor
mov
dec
add
cmp
lock
add
add
add
mov
adc
out
inc
sbb
fdivl
push
push
sbb
mov
mov
lret
ljmp
mov
scas
jp
lret
ret
mov
push
test
xchg
mov
or
add
loopne
insb
mov
dec
fadds
add
fstpt
loopne
lds
adc
add
pop
mov
add
fs
call
int
push
mov
sbb
add
add
fs
push
in
jns
test
push
mov
add
push
or
lods
js
stc
popf
lret
sbbb
add
add
and
pushf
mov
test
add
xlat
repnz
test
push
repz
ljmp
sbb
add
pop
push
mov
mov
add
inc
bound
mov
xchg
add
jae
and
xchg
lods
push
ss
insb
mov
add
pop
jle
inc
in
pop
mov
cmpsb
jb
decb
rorb
sub
cmp
inc
daa
mov
xor
add
dec
call
mov
add
jae
xchg
xor
fs
adc
loopne
in
call
add
pop
dec
negb
and
add
or
mov
inc
nop
in
dec
adc
adc
scas
aas
mov
mov
mov
pop
and
xchg
cld
or
add
cmp
or
add
lock
mov
xchg
movsb
pop
sbb
xchg
pusha
loop
or
xor
sub
add
jae
add
fwait
mov
leave
mov
pop
xchg
ds
fldl
mov
icebp
and
inc
call
lcall
and
and
stc
mov
ficompl
leave
mov
pop
mov
add
out
popf
xchg
cli
jne
sub
bound
fistps
add
inc
pop
and
out
es
mov
add
insl
cmp
pop
mov
add
push
cmp
xor
mov
mov
dec
add
add
pop
push
hlt
sbb
insb
jno
push
inc
incb
rcrb
adc
sarb
fs
mulb
add
int
insl
in
je
or
add
or
add
sbb
ljmp
mov
sub
mov
add
int3
jle
add
stos
test
adc
mov
divb
mov
sahf
add
sbb
xor
pop
cmp
or
mov
int3
icebp
add
es
add
rcll
iret
sbb
mov
in
and
sbb
loop
add
incb
add
cmovnp
cli
das
xchg
xchg
insb
stos
cmp
add
mov
addb
add
push
mov
js
stos
popa
mov
scas
fisttpll
into
or
add
je
movb
sbb
pop
cld
mov
add
sahf
fwait
addr16
add
pop
sbb
cmc
scas
xchg
adc
jg
fsts
fiaddl
mov
add
push
cmp
cs
mov
lock
add
aaa
pop
jo
push
nop
xchg
rcll
test
lock
push
xchg
data16
add
aad
insb
jae
test
push
cmc
nop
mull
loop
mov
xchg
movsb
mov
add
icebp
push
pop
or
add
fs
jg
sahf
dec
cmc
lock
jne
jp
call
jp
dec
test
aas
fimull
xlat
sbb
inc
mov
mov
sub
or
add
xchg
sub
repnz
push
mov
sbb
stos
ret
repz
movsb
mov
add
mov
lock
adc
hlt
fwait
decl
loopne
lock
mov
mov
push
cmp
dec
scas
inc
jp
adc
pop
mov
xor
dec
cmp
jae
jb
push
add
sub
cmp
or
loopne
jle
movsl
inc
fs
mov
push
pop
cvtdq2ps
je
or
add
negb
jmp
ror
call
gs
mov
imulb
jns
mov
jae
stos
dec
jmp
and
shlb
fwait
mov
jl
out
dec
lock
pusha
push
mull
add
add
add
mov
inc
std
out
loope
in
cli
xchg
outsb
xor
pop
into
movsl
pop
xchg
pusha
dec
mov
ret
add
add
dec
push
lret
jns
mov
shll
add
shr
jno
fadds
loope
ret
imul
pop
mov
lods
mov
loope
pop
ljmp
imul
out
jnp
pop
add
xchg
out
insb
and
loopne
and
out
jmp
mov
pop
sti
and
sbb
out
dec
mov
sbb
and
adc
cmp
push
mov
mov
fldt
adc
in
add
mov
jmp
add
movsb
dec
jae
lahf
mov
sub
add
add
add
ret
push
das
dec
imul
jae
or
add
mov
test
nop
push
ret
add
xor
jns
fldl
add
test
add
jl
adc
xor
rcll
cmpl
aad
dec
mov
dec
mov
pop
sbb
adc
jmp
sub
add
cmp
cld
cmpsl
aad
andl
sahf
push
faddl
add
push
sbb
movsl
sahf
in
lods
std
jecxz
jno
mov
test
popf
cmp
stc
fimull
pop
scas
cmp
scas
mov
or
cmp
movsl
lock
imul
roll
add
leave
push
mov
lock
mov
jg
cmpsl
das
movsl
and
test
add
push
xchg
std
iret
sub
mov
jae
xchg
lods
push
cs
popf
ss
test
sub
int3
incb
add
xchg
imull
jl
xor
pop
cmc
xchg
add
add
mov
add
lret
mov
add
mov
pop
mov
int
lods
jg
push
mov
mov
cmc
push
outsl
add
add
mov
add
mov
cmpsl
jmp
sbb
rcll
mov
cs
jns
cmpsl
jb
cmc
add
clc
bound
adc
push
and
fs
fnsave
or
rorb
add
or
add
fs
pusha
cmp
sub
pop
fcomps
lret
jle
out
mov
insl
cli
movsb
push
bound
xchg
xchg
insb
sub
imul
pusha
mov
sub
pop
inc
xor
jmp
push
pop
mov
inc
adc
pop
adc
insb
call
xor
pop
in
push
add
sbb
jge
incl
pop
ret
adc
adc
add
rcrb
inc
shlb
clc
push
sti
xor
xchg
testl
mov
cs
and
cltd
mov
lds
dec
stos
add
call
mov
add
scas
push
out
daa
push
rcrl
bound
add
out
inc
les
add
lock
ret
jecxz
filds
sarl
les
add
add
xchg
push
mov
ja
jmp
xchg
or
jnp
xor
roll
loope
addb
pop
sbb
nop
fisubrl
int3
jo
add
cmpsb
cmp
mov
add
enter
lcall
xorb
cmpsb
mov
sub
scas
sti
or
loope
stos
aaa
lea
vcvtss2sd
lods
stos
mov
fcompl
movsb
ror
inc
sti
add
cmp
mov
and
stos
lcall
mov
jo
movsl
add
jo
shll
xor
and
sub
test
lods
into
das
repnz
int3
incb
add
jle
lea
xor
scas
add
push
push
or
add
scas
bound
adc
adc
lret
cmp
orl
xor
push
ja
mov
scas
push
inc
or
adc
mov
or
and
lods
pushf
loope
outsl
repz
xor
jg
add
mov
popf
sarl
mov
mov
cmp
das
xchg
jmp
jae
test
mov
mov
mov
out
adc
xorl
ret
arpl
cmp
mov
add
outsb
mov
fmull
std
adc
shl
call
adc
add
lahf
jno
sbb
shlb
add
push
jo
mov
xor
adc
inc
lds
cwtl
in
call
cmpsl
sbb
or
add
mov
int3
in
add
jnp
adc
lret
adc
push
in
bound
pop
adc
cld
cmp
inc
call
rcr
xchg
in
outsb
mov
fwait
jl
je
inc
lea
add
aaa
add
loope
pusha
mov
cli
fstl
cld
subb
movsb
adc
push
mov
and
xchg
mov
add
sub
leave
mov
test
sub
xor
out
pop
mov
xor
add
scas
cmpsl
and
cmc
mov
pop
test
add
add
sbb
push
lret
ljmp
fnsaves
push
cld
les
add
dec
mov
adc
add
popf
dec
mov
inc
aam
cmpsb
sub
in
add
xor
add
xor
cmpsl
repz
adc
loop
xchg
outsb
aam
je
add
add
pop
push
and
sub
add
add
or
push
mov
fisttpll
inc
loop
repnz
or
fsts
dec
or
je
add
push
xorb
xchg
jmp
cmc
jg
mov
fucom
push
pcmpeqb
xchg
add
in
jl
sbb
enter
and
push
add
pop
dec
movsb
push
pop
mov
sbb
mov
ret
pusha
shl
jae
test
inc
and
add
xchg
lcall
mov
add
bound
lea
xchg
mov
test
add
cmp
jbe
lret
mov
mov
mov
imul
movsl
pop
imul
outsb
in
pushf
pop
scas
adc
push
xchg
mov
testb
hlt
add
xor
jg
fstpl
mov
sub
mov
sbb
push
fisttpl
push
out
push
int
and
mov
mov
add
sbb
push
es
cmp
das
ret
pop
mov
add
imul
mov
ja
ss
outsb
imul
add
or
xor
sub
sbb
das
mov
add
outsl
inc
sub
add
pop
rorb
scas
arpl
dec
cmp
add
mov
addr16
lret
fimull
and
dec
popa
add
inc
cmpb
pusha
add
mov
test
dec
call
mov
cmpsl
jecxz
test
add
in
out
add
cltd
inc
mov
push
sbb
mov
mov
icebp
jno
push
push
popa
fwait
cmc
in
fmull
insb
lcall
dec
fnstenv
imul
cwtl
stos
insb
mov
xlat
ret
loopne
cwtl
cwtl
xchg
fiadds
fidivs
adc
outsb
in
mov
in
xor
shl
lret
pusha
sub
cmp
pop
adc
pop
jecxz
sbb
bound
mov
mov
mov
out
or
aam
ret
and
mov
sub
add
xor
aad
xorl
shrl
xor
lods
cmpsb
ret
jbe
jecxz
imul
fcomip
xchg
js
sti
sbbb
jmp
add
jge
cmp
and
add
xor
scas
enter
aad
jae
mov
jb
sub
mov
sbbb
add
or
mov
in
add
fadds
in
fcompl
add
out
mov
popa
ffreep
lcall
mov
and
movsb
in
sbb
inc
push
data16
js
loopne
push
sarb
add
or
add
xchg
cmp
add
sbb
push
loope
data16
stos
mov
roll
add
arpl
fildl
add
mov
adc
push
add
mov
les
or
pusha
add
pop
add
mov
iret
or
cwtl
and
sub
mov
cltd
cwtl
inc
pop
negl
xorb
aam
and
dec
add
dec
into
inc
cmp
ret
arpl
cs
jge
xchg
sub
dec
add
and
adc
pusha
jl
mov
ds
sahf
daa
into
pop
pop
mov
testb
cmpb
add
and
mov
mov
xor
iret
jne
into
test
add
cmp
and
cmp
mov
adc
andb
mov
add
dec
cmp
and
add
and
repz
push
pushf
ljmp
loope
fnstcw
sar
jns
adc
add
add
cmpsl
cmpsl
mov
data16
movsb
inc
icebp
hlt
inc
and
add
aam
outsl
push
cli
mov
sahf
fwait
xor
or
add
aad
and
or
test
cmpsb
add
fdivs
xchg
leave
mov
jl
xor
xchg
mov
lods
popf
addl
inc
pop
cmp
dec
inc
cmp
pop
ljmp
add
inc
flds
lea
add
cmpsb
lock
mov
add
jne
jle
gs
cli
push
mov
negl
pushf
dec
fstps
add
xor
inc
adc
add
shll
rcll
mov
push
lock
lods
dec
and
test
add
fisttpl
add
xor
adc
test
adc
lods
ds
mov
add
jnp
and
xchg
push
mov
add
add
mov
stos
icebp
das
mov
xchg
rolb
enter
fidivs
dec
movsb
add
add
add
icebp
cmpsl
test
fs
inc
mov
add
outsl
jle
xchg
rcrl
add
add
xchg
cwtl
cmp
jnp
int
scas
dec
inc
add
roll
mov
mov
or
or
add
std
addb
add
sbb
sti
cmp
ret
jmp
xor
or
in
cmpl
mov
add
xor
mov
hlt
orb
or
add
fnsave
sbb
fdivr
inc
lods
add
mov
int
ds
fxch
movsl
cmpsl
shll
negl
cmp
cmpb
outsl
sahf
ds
cmc
mull
adc
mov
dec
aaa
xor
insb
pop
mov
xor
xor
add
pop
jl
add
add
jmp
mov
cmp
es
dec
fldz
dec
shll
sar
xchg
push
lock
popf
jecxz
jae
rclb
add
outsl
xor
xchg
daa
pop
xor
or
cmp
mov
rcll
inc
sbb
add
faddl
add
rol
add
data16
out
cld
jnp
push
pop
sti
or
fwait
and
jecxz
cmc
xchg
sub
ret
test
jb
jge
mov
add
into
inc
jl
add
dec
in
ss
jne
ja
or
add
push
mov
test
add
imul
shrl
and
xor
ljmp
negl
add
xor
adc
add
testl
add
lahf
daa
mov
add
jge
leave
add
mov
push
insl
jnp
sub
dec
in
movsb
arpl
cwtl
roll
adc
sub
adc
das
jge
jecxz
idivb
loopne
xchg
xchg
jne
jg
add
add
ljmp
add
mov
test
std
cmp
cmp
inc
addr16
dec
add
call
jb
outsl
adcl
test
adc
insl
stc
mov
aad
outsb
cmp
loope
lock
das
xchg
adcb
out
xor
aaa
hlt
stc
cmp
loopne
out
push
ds
out
pop
popa
leave
pop
push
bound
inc
jnp
mov
add
data16
std
aam
cmp
mov
push
int
and
sbb
mov
mov
test
mov
mov
add
sbb
std
fstpl
fsts
pop
and
add
sub
xchg
pop
outsb
mov
add
sub
ja
pop
dec
mov
push
sub
dec
mov
ret
adc
add
lods
mov
adc
ret
in
push
popf
xor
or
jns
add
add
les
add
inc
es
adc
imul
inc
xor
add
outsb
xlat
mov
fsubrp
insl
fcoms
dec
and
add
daa
inc
das
in
ja
sahf
pushf
pop
andb
sub
cmc
cmp
cmp
addr16
mov
cmpsl
and
add
or
push
push
mov
pop
mov
mov
pop
fistpll
mov
or
add
sti
push
bound
insb
jns
shrb
ss
bound
hlt
add
add
xor
sahf
sbb
stc
movsb
pop
std
pop
lahf
xor
rcr
mov
inc
add
dec
data16
push
cs
sete
adc
fildll
das
imul
aaa
decb
add
xchg
or
loop
push
dec
ljmp
or
add
fwait
outsl
orb
xchg
dec
mov
nop
add
cli
popf
jne
xchg
mov
pop
bound
add
adc
fwait
add
mov
cli
jp
xchg
je
out
push
push
lret
push
xor
es
jae
mov
jp
or
jmp
pop
mov
sub
fcoms
test
fimuls
sub
sub
cmp
repnz
mov
data16
and
dec
add
test
pop
mov
push
imul
roll
push
jmp
lea
add
popa
jo
jle
inc
dec
push
pop
and
jg
and
out
add
jae
cld
mov
cmp
fmull
push
dec
daa
dec
add
idivl
rclb
add
mov
cmpsl
add
jns
clc
ret
aam
jmp
test
mov
add
xchg
dec
test
sbb
dec
adc
adc
push
xchg
shll
mov
cli
push
mov
loope
xchg
notb
pop
js
int
push
jg
jmp
idivl
cmp
divl
mov
insb
add
inc
mov
push
out
mov
sub
add
dec
addr16
nop
cmp
xor
adc
add
stc
jecxz
loopne
ret
js
and
out
add
insl
and
mov
add
sbb
xor
xchg
in
pop
jecxz
add
add
cmp
or
add
ljmp
repz
test
lods
sbb
sub
fwait
and
sub
adc
cld
xchg
mov
add
sti
push
outsb
adc
mov
mov
cmp
imul
lods
stos
mov
paddq
rolb
mov
xor
adc
shrb
xor
or
add
fimull
adc
cs
ret
push
pop
dec
xchg
or
add
sbbl
nop
cld
lock
add
xchg
jmp
cmp
jno
dec
pop
loope
lods
xorb
xchg
mov
mov
lret
fs
or
jne
pop
mov
shlb
sub
roll
add
jo
pushf
mov
fldz
aaa
jae
pushf
xor
mov
xchg
jge
std
mov
ljmp
cmp
sub
pop
and
pop
add
dec
shl
mov
in
out
pop
into
hlt
or
data16
out
addr16
cli
das
mov
adc
add
xor
adc
mov
inc
add
and
pop
popf
lods
mov
add
leave
insl
add
inc
and
add
dec
cli
add
inc
dec
nop
add
pushf
sbb
fistl
add
add
inc
std
imul
xlat
lea
push
add
movsb
jg
lahf
sub
sahf
scas
sub
lock
aad
sub
mov
rcrl
rorb
into
jb
xchg
aad
das
cld
orl
or
mov
and
lea
add
add
add
cwtl
enter
push
xor
inc
aaa
xor
jo
jmp
mov
jo
addr16
jno
xchg
int
dec
pop
cmp
lcall
mov
add
cmp
add
push
fwait
mov
cmpsb
mov
int
scas
sub
pop
and
add
dec
cmc
ss
add
repnz
jns
jg
and
add
xor
inc
ljmp
mov
add
add
inc
loopne
dec
rcrb
or
pop
stc
popf
or
cmp
shrb
movsb
iret
jg
mov
or
add
xchg
dec
nop
aas
fsubr
nop
int3
or
add
lret
cmpsb
rcr
enter
mov
in
les
mov
pop
imul
add
push
hlt
mov
xchg
and
jmp
imulb
or
xchg
rclb
mov
pop
adc
ret
out
clc
sub
rolb
add
dec
lahf
add
loopne
gs
movsl
ret
mov
loopne
pop
push
xor
sbb
mov
adc
add
stos
loope
ret
mov
add
test
mov
in
inc
dec
add
mov
jo
or
dec
lea
add
jmp
lods
mov
imul
mov
jg
jp
jge
int
add
fwait
movsb
orl
xor
movsb
cmc
jb
shr
add
cmp
push
das
mov
sub
jmp
pop
add
mov
jge
push
dec
xchg
clc
inc
lods
jl
pop
mov
dec
add
xchg
or
add
mov
cmc
ficoml
lret
push
jnp
pushf
testl
jmp
push
in
sbb
xor
jo
mov
pop
mov
mov
or
stos
xchg
pop
push
jecxz
inc
pop
add
ljmp
or
loopne
xchg
inc
cwtl
sbb
imul
cli
test
add
imul
xchg
add
pop
and
jle
mov
adcl
jnp
stos
pop
rcll
cmp
xchg
or
add
mov
mov
jbe
cmp
jmp
mov
or
add
shll
pop
sub
std
push
or
sbb
test
test
mov
mov
sbb
adc
or
bswap
adc
pop
mov
jg
inc
push
ljmp
pop
push
adc
sbb
and
xchg
mov
cli
jp
outsb
aas
ret
xchg
cmpsl
mov
jbe
lret
mov
and
scas
lcall
inc
cwtl
cld
or
out
test
add
movsl
xor
inc
inc
add
inc
ret
mov
add
xor
lock
mov
add
loope
aas
mov
nop
lods
push
out
sbbb
fmulp
jmp
icebp
jbe
xchg
popa
je
arpl
inc
pop
les
add
push
push
jp
mov
add
mov
push
pop
in
inc
movl
xlat
jmp
dec
out
mov
insb
test
and
add
jne
out
xchg
xor
xchg
adc
stos
mov
fmuls
mov
dec
jecxz
xchg
sub
push
jbe
ret
push
iret
push
popa
jge
and
add
imul
mov
out
add
xor
jo
xchg
jge
mov
push
cld
mov
sbb
add
fsubs
fwait
decl
mov
fst
xchg
pop
aas
sbb
cli
cmpsb
out
pop
mov
repnz
call
add
jne
mov
mov
insb
bnd
xlat
adc
cmp
add
xor
cli
popa
mov
out
pop
frstor
lahf
or
mov
mov
add
add
add
add
push
and
loopne
aam
lahf
push
or
sub
sbb
pop
dec
add
into
loop
cmpsb
cmp
stos
out
iret
ret
lahf
cs
add
sbb
adc
push
push
add
sbb
inc
jge
imul
add
add
or
add
mov
ror
sbb
add
xor
mov
add
das
sub
inc
push
add
pop
xor
jecxz
loop
cld
add
push
inc
jl
divl
pop
add
inc
lret
lea
sbb
push
fwait
mov
pop
mov
cmpsl
aam
shrb
into
and
add
pop
int3
xchg
add
xor
mov
pop
js
js
test
mov
pop
push
push
add
popa
and
lcall
repz
cmc
mov
pop
and
cmp
mov
popf
pop
jg
bound
add
jmp
adc
mov
xchg
inc
faddl
add
add
imul
add
jae
add
mov
mov
sbb
add
loope
std
jge
cmpsl
push
add
add
xor
add
mulb
stos
xor
scas
test
add
pop
test
and
add
roll
out
add
add
mov
mov
jle
xchg
popf
jbe
pop
cmp
cmp
inc
adc
jmp
cmp
loopne
loopne
xor
and
fcmovnu
sub
xchg
cwtl
jae
jmp
in
mov
add
push
cmc
outsb
dec
inc
add
pop
into
mov
mov
sub
insb
jp
outsb
add
out
mov
add
jae
sbb
mov
je
inc
sub
outsb
mov
lea
and
mov
ds
das
jmp
mov
add
add
add
adc
mov
ja
pop
xor
lods
pop
push
inc
mov
mov
cld
inc
adc
pop
sub
and
cltd
xchg
xchg
jnp
xchg
in
xor
jmp
lret
jp
cmp
iret
jl
mov
add
jmp
push
cmp
mov
aas
push
into
sbb
add
inc
or
push
dec
add
add
out
sub
mov
cmc
mov
lds
std
xchg
jl
loopne
pushf
cmp
xor
or
add
in
incb
ljmp
add
jb
lods
outsl
dec
jns,pn
out
sbb
hlt
es
adc
cmp
int3
inc
add
jl
cmp
sbb
mov
mov
in
sub
inc
or
jmp
sarl
xchg
add
sub
add
sub
and
pop
and
and
jb
arpl
inc
pop
mov
add
push
idivl
cmp
int
jecxz
lods
push
adc
xchg
incl
add
jae
push
cmp
test
pop
arpl
inc
loope
push
jmp
add
xchg
lret
cli
clc
int3
mov
add
subl
mov
sahf
cmpb
pop
popf
mov
inc
add
sbb
decl
xchg
jl
dec
mov
rolb
add
addl
lods
add
scas
or
dec
add
out
mov
push
pushf
js
mov
add
or
dec
xchg
mov
add
cmp
js
cli
dec
bound
das
mov
adcl
lret
loop
mov
push
inc
inc
adc
cwtl
dec
lret
loop
adc
sub
loope
and
and
int3
add
push
sbb
add
sub
ljmp
es
adc
push
scas
in
push
xor
rol
push
shll
xor
pop
xchg
cs
ficoml
leave
mov
inc
leave
sarb
xchg
pusha
or
lds
ficompl
addr16
test
push
add
add
ss
stos
inc
xor
test
xchg
mov
add
loopne
cmpsb
add
pop
daa
xlat
lret
roll
lahf
xor
imul
add
push
scas
or
add
or
add
cmp
flds
jmp
push
jmp
jmp
testb
sub
push
or
add
loopne
ficomps
loope
outsl
mov
add
insl
sahf
ret
insl
push
pop
or
add
insb
add
jns
mov
fists
sub
sub
lret
hlt
sbb
and
xlat
int
jmp
push
popa
lahf
repz
lret
orl
ficoml
jmp
stc
cwtl
or
inc
mov
inc
jl
add
scas
ret
testb
lret
xchg
jp
xor
shrb
call
rclb
lock
lds
js
cmc
jne
std
mov
icebp
std
mov
daa
enter
inc
insb
add
inc
cmp
ret
mov
dec
xchg
aad
sbb
shrl
mov
test
add
add
sub
popa
sarb
push
mov
pop
push
mov
add
sbb
test
mov
mulb
jge
ret
fwait
jp
and
jp
cwtl
iret
cmp
ss
dec
adc
add
daa
mov
stos
or
add
push
test
adc
mov
sbb
test
mov
mov
xor
out
test
pop
mov
jo
jae
dec
inc
add
aam
push
outsb
int3
inc
add
and
xor
scas
std
jle
out
jns
push
jecxz
mov
mov
call
add
jp
dec
cmp
mov
test
add
and
add
stos
shl
cmp
leave
add
or
add
fisubrs
cltd
movsb
lea
add
hlt
add
mov
add
ret
add
test
xchg
add
arpl
lahf
mov
scas
int3
int
add
push
imul
pop
loopne
sahf
xchg
xlat
mov
xchg
and
jp
mov
add
fs
sub
cmp
ret
jae
add
add
add
out
and
add
push
adc
add
jno
test
adc
jle
mov
push
loopne
icebp
add
pop
jg
or
add
andb
adc
xchg
movsl
or
jg
out
dec
cmp
or
push
sbb
mov
push
add
add
jl
and
pop
jno
dec
add
pop
mov
fidivrl
and
and
jl
jecxz
aas
stos
sahf
iret
in
repnz
addr16
mov
lods
add
aas
insb
in
dec
scas
mulb
pop
add
mov
add
test
push
cmpsl
out
mov
andb
sub
add
cltd
out
jecxz
scas
sub
es
movzbl
mov
dec
mov
xor
mov
cwtl
cmp
or
bound
add
xor
pop
jbe
test
add
adc
add
cmpb
add
and
imul
add
add
mov
aaa
pop
lods
mov
cltd
aas
faddl
gs
add
adc
loopne
pop
sub
add
mov
rcrb
test
add
add
jne
sbb
dec
and
jnp
ja
je
mov
lds
fwait
cwtl
xlat
inc
insl
aas
jne
cmp
sbb
and
and
call
in
jle
lock
mov
add
jp
add
add
add
push
xchg
pop
jl
das
and
push
add
xor
sbb
enter
sub
mov
sbb
enter
aas
clc
gs
sti
and
js
xor
add
add
insl
mov
add
pop
sbb
mov
gs
lret
cmp
cmp
shl
add
mov
jg
xchg
ds
lahf
dec
adc
add
cli
ja
in
sti
imul
mov
sub
clc
mov
nop
stc
adc
dec
dec
out
add
xchg
xlat
fwait
insl
push
mov
mov
les
add
sbb
out
push
cmp
bnd
jl
imul
add
movsl
fistps
add
mov
jo
xchg
sbb
add
ficoml
pushf
add
add
push
lods
xchg
cld
mov
dec
cmp
imul
jo
leave
ret
mov
push
out
nop
xlat
jge
out
push
cwtl
sbbb
xlat
jno
jge
pop
jo
std
add
adc
push
xchg
test
mov
add
jecxz
shl
pusha
arpl
xchg
push
push
imul
psrld
mov
xchg
xor
int
icebp
jo
ljmp
xor
push
mov
std
jp
lds
adc
mov
push
loope
movsb
sub
mov
xchg
add
lret
adc
inc
mov
or
add
dec
pop
sti
push
and
xchg
in
jg
stc
adc
and
std
xor
mov
jecxz
testl
push
pop
mov
add
push
rorb
out
push
dec
mov
mov
mov
test
push
mov
add
push
pop
mov
int
popa
and
dec
aaa
inc
dec
movsl
insb
inc
mov
add
movsl
outsl
pop
icebp
in
orl
arpl
add
jo
or
dec
inc
add
outsb
add
lahf
push
pop
dec
lds
imul
fbld
lds
add
add
adc
mov
xchg
ljmp
add
add
ret
adc
loopne
xor
cs
or
xchg
popa
mov
fistpll
mov
dec
add
lods
pushf
jg
jb
xor
add
out
ljmp
cmpl
jno
popf
outsl
sbb
sldt
jecxz
sbb
movsb
push
shrl
add
std
pop
int
arpl
mov
jae
push
js
xchg
bound
jb
loope
and
mov
dec
or
inc
xchg
rcrb
push
repz
jge
and
mov
dec
xor
mov
fistl
fisubrl
ljmp
lret
lcall
hlt
add
popa
ss
and
into
push
pushf
outsl
imulb
lahf
mov
lret
add
rorl
add
loope
dec
negl
data16
aas
push
dec
mov
je
add
add
jg
gs
jns
movsb
nop
out
fdivp
mov
shrb
es
sbbl
and
aas
out
xor
dec
xchg
inc
mov
jnp
sbb
jb
mov
mov
loopne
in
add
pop
inc
es
xor
fwait
je
sub
dec
push
int
push
xchg
mov
dec
shlb
push
or
icebp
pusha
cmpsb
add
add
jmp
jbe
lahf
inc
addb
jo
adc
aam
jg
sbb
sub
cs
xor
ljmp
repnz
les
add
pop
sbb
pushf
sub
cld
inc
movb
andb
sti
xchg
outsl
movsb
add
inc
pop
mov
xchg
add
add
or
add
data16
xchg
mov
jp
xor
add
mov
loop
add
jmp
and
add
jp
xchg
mulb
add
or
test
add
sub
int3
popf
add
icebp
pop
push
mov
fldenv
xchg
jbe
jno
pushf
mov
pop
mov
push
fiaddl
xchg
sub
add
push
cltd
push
stc
jle
cmp
push
loop
test
iret
xchg
pushf
ss
mov
rclb
stos
pop
inc
cltd
add
scas
cmp
addl
cs
movsl
mov
test
add
add
dec
mov
cmp
sbbb
ret
ss
aam
fnstenv
call
dec
aas
pop
stos
xchg
cwtl
xor
int
sbb
jbe
cltd
pushf
aas
xor
cmc
jg
xchg
pop
leave
mov
mov
inc
std
into
xor
sub
or
add
mov
mov
add
add
mov
add
or
fldl
add
std
push
inc
sbb
insb
mov
pop
mov
dec
push
add
notl
test
sub
int
adc
and
xchg
jmp
and
pop
adc
sbb
shr
add
or
add
into
mov
push
sub
and
cmc
dec
adc
incl
add
add
add
ljmp
inc
inc
jnp
in
mov
mov
inc
xchg
scas
jae
aas
adc
mov
jge
dec
ret
hlt
jecxz
jl
pop
xchg
pushf
dec
xchg
add
mov
xchg
push
xchg
fildl
cmpsb
jl
add
pop
or
add
pop
sbb
sahf
ss
int
add
add
arpl
xlat
add
loopne
call
pop
popf
add
add
ss
aad
pop
add
aad
js
test
add
loope
mov
ret
cltd
data16
xchg
adc
push
negl
leave
push
sub
mov
iret
and
dec
inc
or
add
std
mov
xor
fimull
clc
sub
imul
and
pop
pop
arpl
sarb
cwtl
cmp
imul
outsl
mov
das
push
xchg
or
xchg
mov
dec
add
aad
cmc
inc
adc
arpl
xor
add
mov
test
push
jae
repz
xchg
stos
dec
jo
out
sbb
js
adc
cmpsl
mov
add
pop
in
loop
bound
fs
popf
incb
xchg
xchg
adc
outsl
dec
leave
add
ljmp
dec
lret
outsb
out
or
and
adc
fcompl
pop
into
lret
loopne
mov
pop
add
xor
fcmovnb
popf
stc
mov
add
mov
cmp
insl
movsb
push
or
sbb
mov
enter
ret
xchg
shll
fisttpll
testb
add
shr
pop
pop
shrl
dec
xchg
add
es
jnp
out
jb
aam
aad
sbb
add
mov
hlt
arpl
mov
orb
sub
ljmp
icebp
arpl
xchg
xchg
pop
stc
ljmp
mov
movsl
add
mov
mov
mov
stos
das
xchg
push
lods
rcrb
dec
les
scas
add
add
sub
nop
mov
pop
addr16
inc
mov
add
mov
add
add
add
sbb
cwtl
add
jns
mov
push
lret
sub
jae
sub
icebp
in
sub
in
hlt
cmc
cmp
test
dec
addl
pop
jp
iret
mov
sbb
push
pushf
test
pop
sub
mov
jmp
sub
dec
mov
mov
add
inc
push
ja
lods
out
stos
and
dec
cmp
inc
int
int
ja
mov
add
repnz
jb
push
add
adc
add
shrl
addr16
sbb
push
nop
fsubrs
fldcw
negb
scas
xchg
sub
jmp
xor
ss
and
jle
ds
push
pop
fistpl
enter
cmc
fiaddl
stos
xchg
loope
add
or
add
shrl
cmp
ficoml
dec
scas
lcall
sbb
fisubrs
test
push
jns
leave
xchg
scas
push
jle
cltd
jle
mov
add
dec
inc
fxch
add
int
je
or
outsl
cli
out
outsl
inc
sbb
add
and
push
out
cmp
adc
xor
int3
testl
mov
pop
call
pop
hlt
pop
push
lock
addr16
cmp
in
add
mov
adc
loope
push
sbb
add
dec
pusha
inc
cmp
pop
sub
testl
add
cwtl
sub
call
jp
lock
sbb
ficomps
in
ljmp
aad
mov
xchg
mov
mov
xchg
dec
jle
repz
popa
sbb
sbbb
imull
jg
mov
stos
push
push
addr16
repnz
pusha
mov
sub
imul
and
add
fs
add
sbb
add
loopne
or
add
lods
xchg
and
mov
clc
dec
xchg
test
mov
inc
aad
pop
add
push
pop
clc
push
aam
pop
cmp
or
imul
and
push
cmp
fadd
iret
inc
jnp
add
adc
sbb
bound
mov
dec
popa
push
sbb
andb
jle
inc
add
inc
rorb
add
add
inc
add
add
in
push
xchg
in
push
xor
xchg
or
mov
iret
add
pusha
xchg
test
add
sbb
inc
out
lea
adc
popa
jp
sub
mov
leave
sbb
addl
aaa
adc
sub
jl
inc
movsl
pusha
sbb
mov
add
mov
jp
xchg
dec
out
fists
stos
fnstcw
mov
add
xchg
sarb
add
or
jbe
cmp
push
add
add
scas
or
add
xorl
std
scas
add
imul
adc
pop
data16
sub
add
lods
sbb
push
add
imul
andb
push
add
sbb
mov
or
add
scas
cmp
in
or
add
sub
fldcw
xor
jno
stos
psrad
int
sub
js
xor
movsb
cmp
push
ja
jno
mov
and
mov
mov
cmp
xchg
in
lret
push
sbb
adc
push
inc
leave
mov
addr16
and
outsb
push
cli
mov
sti
pop
adc
and
pop
scas
jl
callw
call
mov
mov
add
cmp
or
add
mov
nop
mov
add
loope
mov
adc
repnz
lods
dec
sbb
std
pop
xchg
movl
dec
xchg
dec
xor
add
mov
popa
adc
cmp
mov
pop
insl
fst
push
and
or
add
arpl
popf
in
lock
lcall
push
and
pop
fwait
jno
mov
cmp
insb
call
xor
insb
jge
pushf
out
leave
fdivr
loop
in
push
push
leave
adc
ja
inc
pop
jmp
jno
or
pop
imul
mov
xchg
mov
lret
xchg
jbe
dec
clc
jo
or
rcrb
xor
jp
pop
je
std
xor
cmp
adc
add
xchg
push
adc
mov
push
lret
or
js
out
sub
add
xchg
add
ret
add
inc
pusha
cmc
xor
fcomps
pop
stc
or
cwtl
jecxz
jg,pt
xchg
pop
push
popf
in
pop
addb
cwtl
add
push
imul
cmpsb
pop
cmp
cmp
scas
jns
jp
pop
sub
in
mov
dec
add
add
xchg
mov
movb
jp
daa
jle
xorl
sbb
ds
aas
pop
test
cmp
add
adc
mov
mov
xor
movsl
in
out
mov
rcll
adc
pop
adc
les
add
and
dec
mov
stos
iret
mov
dec
inc
add
jbe
arpl
xchg
scas
push
sahf
xor
jae
jmp
mov
imul
inc
push
push
lds
mov
lods
push
xor
xor
cltd
adc
adc
pushf
push
enter
pushf
call
sub
stc
dec
aam
add
or
xorb
add
add
into
xchg
sbb
sbb
outsl
mov
xor
test
add
add
pushf
or
out
outsl
cs
xchg
jo
aas
cwtl
sbb
icebp
fists
add
xchg
jnp
push
stc
ret
xor
cmp
cmp
mov
iret
xchg
adc
inc
imul
ret
ds
cmp
add
sub
fldl
add
mov
stc
leave
inc
scas
dec
pop
and
sti
add
pop
aad
dec
dec
jno
jg
std
std
ret
xchg
std
leave
stos
fs
sub
add
lret
mov
lods
pop
lods
loopne
sub
add
loopne
xor
insb
jecxz
int3
fiadds
add
aam
test
mov
test
add
or
cmpl
shll
xchg
flds
add
mov
mov
cwtl
or
pushf
aad
sbb
add
sbb
lcall
inc
aam
shll
mov
sahf
insb
enter
pop
div
mov
sti
sub
loopne
add
add
mov
xchg
jno
sub
mov
add
xorl
add
inc
xor
or
repnz
adc
mov
push
sti
fdiv
cli
adc
dec
inc
jp
sub
add
pop
idivb
mov
sbb
add
add
fdivrl
dec
fsubl
sarl
lea
add
lods
daa
orb
add
xor
jp
add
cli
xchg
mov
dec
xor
mov
in
jbe
add
add
jle
add
mov
push
pop
loope
adc
add
into
jns
adc
jnp
pop
add
fcmovbe
adc
das
adcl
jb
cmp
jmp
shrl
decl
jge
and
sub
cmp
push
sbb
sub
jo
in
dec
insl
add
jae
lock
inc
jbe
add
mov
cs
ret
add
push
sub
xor
xchg
fs
mov
repnz
or
btc
add
enter
inc
testb
fiaddl
sub
sarl
inc
add
movsb
or
add
pop
add
add
add
insl
push
sbbb
add
mov
cld
sub
mov
mov
jns
adc
mov
lret
jnp
adc
pop
cs
or
aad
jns
jge
dec
add
add
fs
sub
dec
gs
cltd
and
jnp
addl
sbb
jl
mov
orb
cmpsl
cmp
inc
xchg
jne
pop
jns
cwtl
sbb
pop
push
cmc
lods
mov
das
lods
cmpsb
popa
vpshld
mov
ljmp
add
mov
xchg
dec
add
add
xchg
mov
jo
cmp
sarb
sahf
inc
push
add
push
ret
push
and
loop
push
lea
sbb
dec
add
pusha
out
dec
and
add
icebp
fdivr
push
add
add
or
add
and
in
jo
into
enter
xor
sbb
call
add
sub
out
push
nop
xor
push
insl
sbb
fs
mov
mov
mov
cmp
dec
jo
add
dec
push
add
pop
xor
add
sbb
add
imul
mov
add
push
ss
inc
movsl
sub
aam
rcrb
inc
popf
mov
int
sub
sub
or
pop
push
inc
or
add
popa
in
lods
cmp
jb
repz
pop
or
add
aaa
pop
fwait
dec
or
or
add
shrl
dec
sbb
cmpl
enter
add
push
sub
mov
add
int
pop
xchg
dec
adc
add
in
ja
xor
add
jb
or
mov
mov
add
cmpsb
dec
addl
add
mov
dec
filds
add
rorb
add
pop
mov
dec
faddl
add
ljmp
sub
adc
fwait
mov
xchg
and
shld
es
jmp
fistpl
mov
fwait
ljmp
inc
ror
addl
xorl
mov
xchg
cmpsb
push
lods
pusha
xchg
xor
fs
xchg
add
jns
pusha
inc
leave
cli
dec
lds
add
jno
push
cmpsb
pop
pop
lret
outsl
dec
fwait
inc
enter
sub
add
add
insb
std
ljmp
sbb
xchg
insb
aas
push
cmp
mov
bound
int3
or
pop
dec
mov
add
lret
or
insl
inc
int
pop
or
cmp
push
inc
or
add
adc
add
push
jp
dec
movsl
loopne
movsl
insb
hlt
xor
fs
add
add
xchg
inc
aas
out
xchg
cmp
and
iret
fdivs
xor
or
cmp
push
add
add
inc
rolb
xchg
xchg
pop
iret
jo
sahf
je
xchg
sub
cltd
add
xchg
ficoml
hlt
jnp
subb
sub
jbe
mov
pop
jne
or
mov
pop
lods
sub
push
mov
outsb
jno
clc
ret
jnp
sti
cmc
dec
lods
add
int
test
mov
or
mov
pop
repnz
repnz
fisttpll
add
fmul
add
pop
mov
aam
lcall
imul
push
push
rolb
adc
fists
jo
dec
add
cmp
xchg
hlt
and
push
and
add
or
in
sbb
mov
or
add
js
das
push
pushf
xor
fwait
aad
xor
jecxz
sbb
negl
rcrl
sbb
sbb
ss
push
pop
negb
inc
push
loope
dec
push
mov
inc
pusha
add
push
ss
push
dec
xchg
xchg
aad
jle
ret
xchg
mov
add
cmp
decb
jle
fucomi
ds
iret
leave
clc
sbb
nop
cli
jne
pmaddwd
shl
rcr
xchg
icebp
cmp
adc
and
pop
pop
inc
loope
jmp
and
sub
add
ret
mov
imul
cmp
movsb
jmp
xchg
ds
add
sub
sub
add
imul
outsb
jo
shl
std
adc
mov
cmp
sbb
rorb
add
sub
add
test
jmp
push
add
lret
xchg
jnp
orl
add
sti
rep
inc
xchg
in
movzwl
jp
inc
jns
add
fisttpl
sub
dec
test
add
cltd
adc
mov
iret
fwait
push
push
mov
dec
or
stc
mov
mov
fwait
mov
add
mov
int3
mov
int
add
dec
dec
pop
ljmp
mov
sub
jge
mov
adc
cmp
shrl
jle
cwtl
cltd
sub
cmpsb
push
dec
lret
inc
jne
test
push
dec
out
shll
mov
add
iret
mov
jb
inc
sahf
nop
xorb
popa
mov
pop
and
or
add
inc
sub
sub
clc
mov
mov
lock
in
lret
loop
mov
fcoms
jmp
stc
lcall
add
in
leavew
pop
repnz
cli
jo
xor
jns
and
add
add
loop
aad
jnp
neg
xchg
push
xor
loop
add
xor
xchg
lock
addr16
mov
enter
inc
cwtl
adc
int3
add
xchg
test
ds
shrl
jne
push
cmp
lahf
outsb
int3
sti
add
jle
xchg
movsl
mov
mov
jp
add
addr16
push
lods
pop
jo
jb
in
stc
test
pop
fcoml
jle
ret
repz
add
mov
pop
mov
mov
sbb
loopne
out
mov
pop
cld
cltd
fldt
and
add
inc
mov
lea
into
shlb
data16
sbb
xchg
add
dec
aam
add
popf
xchg
loope
xchg
cmp
jnp
sub
dec
mov
add
movsb
mov
xor
add
sub
psubw
jns
enter
out
mov
je
push
shll
add
add
mov
insb
orb
ss
xchg
inc
int3
lahf
add
jo
les
dec
movsb
sbb
and
pushf
xchg
dec
mov
add
loopne
fdiv
data16
lods
clc
js
xchg
mov
add
sub
cli
pop
js
cmpsl
shlb
and
enter
iret
dec
inc
mov
repz
int3
insl
add
decb
fldt
dec
mov
pusha
xchg
xor
xchg
add
cmpsl
arpl
lock
sub
add
std
je
cmp
lahf
bound
add
push
sbb
mov
add
in
add
mov
add
cmpsb
jecxz
jecxz
and
mov
add
shll
rcll
sub
mov
sbb
mov
cmc
push
jmp
mov
pop
fldenv
add
nop
mov
add
ja
fcomps
std
imul
fisttpll
pop
out
jae
add
xor
xor
cmp
mov
xchg
in
inc
jbe
jge
in
outsb
mov
add
ds
add
add
xor
aaa
push
pop
mov
orb
add
mov
push
sub
inc
scas
add
addr16
push
int
rorb
lds
mov
les
add
popa
icebp
cli
daa
mov
adc
dec
add
ficompl
jo
scas
mov
add
add
xchg
iret
inc
or
add
adc
pop
jle
loop
pop
mov
cmp
sahf
add
pushf
cltd
sbb
add
stos
xor
mov
cmp
xor
push
mov
outsl
or
insl
lock
fcompp
bound
add
out
inc
push
sbb
xchg
sbb
ljmp
lret
int3
xchg
add
mov
add
shll
and
cmpsl
inc
pop
aaa
xor
call
add
add
jle
push
lods
jecxz
out
xchg
dec
enter
mov
add
inc
mov
add
add
in
inc
mov
add
ja
mov
repnz
lret
test
loop
icebp
or
add
mov
sbb
popa
push
adc
into
sbb
addb
add
repz
push
inc
add
dec
shlb
mov
gs
pop
repnz
loop
dec
arpl
shlb
mov
xchg
push
add
mov
mov
mov
mov
pusha
mov
add
mov
loopne
mov
jp
outsb
lret
rol
pop
add
cmp
lock
cmp
add
loop
and
add
sbb
inc
mov
pop
in
in
jae
push
daa
push
fstps
test
dec
add
jne
lods
xchg
dec
aaa
inc
mov
adc
mov
fbstp
sti
scas
add
adc
mov
dec
sub
xor
pop
mov
loopne
cmpsb
adcb
lcall
xor
outsl
ss
inc
test
dec
adc
add
push
ja
out
xchg
lret
aad
cmc
sbb
movsb
add
dec
imul
sbb
lret
js
stos
cli
lds
mov
adc
in
into
add
jl
inc
outsb
sti
pop
push
xchg
pop
or
or
std
repz
add
push
leave
add
add
add
xor
add
add
add
mov
push
lock
pop
pop
pop
mov
add
add
mov
mov
pop
jb
cmp
xlat
mov
lds
mov
xor
xchg
mov
pop
adc
sbb
aam
and
bound
test
xor
adc
iret
iret
and
cmpsb
dec
xor
inc
sbb
pop
or
dec
add
insl
dec
push
arpl
testb
insb
push
cmp
add
xchg
sahf
jg
sbb
movsb
cmpsb
mov
lahf
xchg
or
fbld
stos
inc
jno
and
push
inc
pop
mov
mov
sbb
lcall
lret
inc
adc
mov
pop
repnz
inc
lret
dec
mov
mov
je
and
ja
jno
lods
and
mov
aad
adc
inc
pusha
add
mov
add
nop
mov
add
adc
add
sub
add
xor
xchg
and
or
pop
xor
xchg
mov
add
cmp
sbb
inc
xor
inc
vphaddudq
xchg
arpl
or
dec
push
daa
lds
jge
out
imul
jl
popf
cmp
sub
das
inc
iret
jmp
and
imul
push
push
pop
test
das
scas
xchg
mov
pushf
or
add
rcrb
add
mov
add
mov
mov
shr
mov
mov
jne
or
popa
and
dec
mov
mov
lds
add
adc
inc
pusha
mov
xor
xor
adc
mov
shl
add
cltd
ret
mov
xchg
push
inc
sbb
scas
ja
lahf
add
or
jl
and
push
leave
stc
mov
push
mov
je
cmpb
push
and
adc
sub
addl
add
or
add
lods
and
add
pop
or
add
dec
mov
test
inc
sub
add
cmc
pop
leave
fistpll
mul
sub
arpl
in
stos
and
add
push
push
cmpsl
push
xchg
push
mov
push
inc
lock
mov
pushf
std
cmpl
xchg
add
push
adc
push
faddl
add
enter
stc
test
jb
mov
jns
mov
or
add
mov
add
mov
aas
and
jno
mov
jbe
shrb
add
jle
xor
pop
mov
fwait
push
mov
clc
in
mov
and
or
cmc
pop
xlat
scas
popf
push
xchg
loop
mov
add
sarl
mov
add
add
stos
dec
jno
add
pop
rclb
add
add
daa
jl
ss
and
jbe
mov
jo
mov
out
sbb
jnp
push
pop
or
lea
loopne
mov
push
inc
push
pushf
xor
push
mov
mov
icebp
push
xor
add
add
push
lret
loope
inc
add
ds
data16
jbe
popa
add
inc
adc
jecxz
repz
cmp
fnstenv
std
jecxz
jl
dec
imul
mov
aad
int3
add
add
sub
xchg
ds
insl
mov
imul
dec
jb
lods
pusha
dec
lret
in
sub
sbb
push
inc
rorl
dec
inc
aam
add
mov
cmp
add
mov
enter
push
mov
xchg
mov
pop
lods
icebp
push
test
in
sbb
jecxz
mov
add
mov
add
or
mov
test
dec
pop
nop
stos
imul
dec
call
stc
sub
add
mov
add
lock
pop
mov
ret
fbld
xlat
fwait
or
movsb
sbb
cwtl
test
pop
fwait
hlt
pop
ja
fcompl
inc
cmpb
add
mov
hlt
adc
outsb
mov
mov
scas
gs
xchg
sbb
mov
addr16
mov
sub
mov
insb
add
add
mov
ljmp
lock
adc
adc
add
jmp
es
lock
sti
mov
pop
shrb
mov
rorb
add
sub
mov
mov
mov
call
stos
adc
adc
mov
sbb
addr16
mov
and
movsb
pop
mov
adc
sahf
imul
add
loope
aam
mov
add
jmp
imul
cmc
jo
cmp
hlt
je
mov
stos
hlt
mov
or
test
add
in
adcl
sub
testb
add
pusha
pop
inc
push
jb
test
sub
jno
sti
inc
sti
add
mov
fiaddl
add
fidivs
or
xor
pop
push
idivb
enter
xlat
cmp
mov
pop
pop
in
pop
push
jb
mov
test
sub
pushf
mov
xchg
add
insb
loopne
scas
jge
outsb
cmpsb
push
addl
insb
idiv
pop
mov
add
add
clc
sub
pmuludq
jp
push
jne
add
insl
aam
push
pop
es
je
pop
scas
dec
inc
add
push
fimuls
adc
aas
add
and
insb
lret
or
add
add
in
mov
lcall
scas
jmp
imul
ret
mov
add
cmp
jns
inc
in
sbb
push
cld
orb
add
xchg
xor
ficoms
in
jo
dec
fildl
add
movsb
fxch
mov
xchg
dec
jb
xor
lods
xchg
mov
and
movsl
js
popa
test
pop
stc
pop
repz
dec
push
jmp
in
dec
in
out
cltd
ret
mov
lock
stc
mov
mov
in
insl
aas
outsl
pop
mov
cwtl
sbb
mov
mov
aaa
mov
xlat
and
fcmovnb
aas
mov
les
add
icebp
hlt
cltd
daa
cmp
in
sub
pushf
sahf
fistpll
seto
call
pop
mov
xchg
das
pushf
jmp
add
add
mov
mov
addr16
inc
inc
mov
inc
std
aam
jo
flds
fcompl
les
adc
repz
add
add
dec
lea
or
jns
stc
sub
mov
inc
js
addr16
fiaddl
out
inc
pop
jmp
jb
add
popl
add
add
dec
push
add
pop
outsb
add
xchg
and
cmp
loope
arpl
aas
clc
pushf
std
rdmsr
jns
xor
dec
add
mov
xchg
mov
add
imul
testb
movb
jb
adc
xor
aas
movsl
sub
xor
fcmovb
jnp
add
add
add
mov
insl
add
add
or
cwtl
inc
cmp
add
cmovo
add
dec
popa
fcoms
insb
imul
dec
pop
pop
mov
stos
sahf
fwait
sbb
push
outsl
xor
sub
and
push
sbb
adc
cmc
aaa
push
push
stc
ret
xor
or
add
add
bound
fsubl
dec
mov
lods
xchg
inc
jg
sbb
push
lret
pop
sub
sub
xor
xchg
ret
rcrl
push
and
cmpsb
cmc
inc
popf
movsl
push
test
adc
fildl
mov
cwtl
xor
mov
pop
cmp
add
add
xor
cmpsb
xchg
out
inc
ss
xor
lahf
xchg
mov
add
in
and
nop
sbb
push
xchg
push
clc
insb
jle
push
sahf
pop
sub
aas
shll
ret
jns
dec
aad
xor
cmp
cmc
imul
xchg
mov
push
cmp
scas
int3
inc
add
insl
movsl
sbb
xor
divl
and
jl
add
cwtl
aas
or
sbbl
mov
fcmove
push
add
testb
lcall
stos
daa
daa
sbb
push
pop
into
push
ljmp
testl
pop
add
dec
cltd
add
inc
or
add
jns
jecxz
mov
dec
leave
fcoms
rcrl
cs
push
and
fistpll
sub
inc
je
fs
pop
jg
cs
add
mov
pop
add
roll
add
shlb
add
jns
xchg
xor
call
jg,pt
inc
and
add
push
lcall
ror
mov
add
mulb
cmpsl
movsl
mov
xorb
add
aas
scas
push
add
add
mov
sbb
cmpsb
xchg
std
out
in
add
sub
ds
aas
and
fstpl
add
add
push
mov
ljmp
pop
lods
movsl
or
add
adc
outsl
sbb
and
mov
sub
or
add
sub
inc
jp
sub
add
or
jo
js
or
add
push
fidivrs
and
cmp
jne
push
out
aam
adc
pusha
or
add
xchg
mov
add
dec
add
push
xchg
std
rcrl
cmp
lods
dec
ds
add
pop
dec
mov
cmc
ja
out
fsubp
popa
push
xor
pop
rcll
repnz
dec
arpl
add
repnz
cltd
mov
add
add
rcl
inc
add
push
jns
mov
mov
mov
rcrl
cld
jae
xchg
mov
out
sub
jnp
push
pop
lret
cmp
jns
jge
adc
mov
pop
cmp
int3
pop
add
mov
add
jmp
dec
mov
loopne
rolb
add
add
fildl
add
push
std
repnz
add
sbb
add
divl
mov
mov
add
mov
fistl
pop
xchg
jmp
test
add
jp
push
jae
stos
sbb
pop
pop
sti
rcr
add
push
jae,pt
push
in
mov
es
aam
sti
lcall
add
mov
lods
sub
inc
sbb
add
jo
cmp
jp
add
aas
imul
subb
and
int
and
popf
xchg
mov
loope
add
add
xchg
mov
js
dec
int
mov
mov
cs
int3
or
add
pop
sbb
fldenv
or
cmp
pop
xorl
add
pop
sbb
ret
in
sub
push
lret
daa
and
xchg
jbe
xchg
inc
cmp
and
cmp
add
xchg
out
sub
dec
inc
outsb
iret
loopne
imul
or
inc
outsl
add
out
idivb
ss
fwait
jg
xlat
lret
xor
loopne
test
pop
add
add
call
out
imul
pop
cltd
pop
push
stos
cwtl
jl
mov
jno
mov
int3
roll
add
or
popf
or
add
inc
xchg
or
and
add
add
mov
add
ss
sahf
imul
cmpsb
call
ret
lods
xchg
cmp
sub
inc
rolb
test
add
icebp
adc
add
push
out
dec
mov
add
mov
daa
jle
push
mov
add
sub
sarl
push
adc
sub
xchg
ss
int3
nop
add
jno
rcrb
cwtl
add
fcoms
test
add
jno
roll
add
jno
add
lods
shll
idivb
ja
jmp
gs
add
stos
mov
fcompl
pop
and
pop
xor
jg
loopne
add
int
mov
add
pop
add
adc
das
fstpl
xor
ljmp
outsl
inc
xor
std
add
adc
jno
fcoms
jne
lods
in
outsb
dec
mov
push
pop
lea
add
mov
jne
out
mov
les
add
jmp
push
movb
xor
mov
fstl
adc
sbb
adc
lods
jecxz
cmp
aas
add
add
cmp
mov
mov
loop
dec
sbb
lahf
dec
scas
xor
inc
lret
pminsw
add
inc
pop
xlat
sub
dec
fisubrs
push
insl
mov
lcall
aam
rcrb
into
mov
jns
call
cmpsl
dec
pop
adc
in
xor
lock
fidivl
test
add
in
jne
and
fbstp
jb
iret
and
fsubrs
pusha
pop
ror
push
idivl
push
jb
rolb
and
ret
sbb
movsb
jg
xor
int3
sub
add
test
sbbb
jb
cmp
add
popa
clc
mov
xchg
pop
push
dec
pusha
push
cmp
popf
add
hlt
push
cld
or
xchg
lret
sub
add
insl
sarl
pop
and
jle
push
call
cmp
push
cmpsb
or
adc
sub
xor
pop
mov
add
dec
cmp
add
ror
sub
pusha
stc
add
xchg
das
mov
test
cli
jo
xchg
leave
icebp
cmc
mov
add
lahf
leave
lret
cmc
xchg
std
dec
fcomi
or
pop
push
popa
mov
lea
popf
aaa
jmp
imul
fcoml
imul
add
sub
mov
and
inc
sub
jae
loope
add
add
push
mov
and
add
ret
and
roll
add
add
rcrl
pop
lods
arpl
add
mov
das
dec
insb
add
mov
ss
fbld
fmul
loope
push
jle
add
bound
or
and
add
popa
xlat
xchg
cwtl
mov
pop
jb
aas
sbbl
testl
rcll
add
std
adc
loop,pn
mov
cltd
imul
adcb
cld
pop
movsl
ja
sub
or
add
add
dec
je
leave
pop
mov
lock
dec
stc
mov
addr16
push
mov
and
out
add
add
lea
push
sbb
mov
jmp
jb
int
inc
push
xchg
fdivrl
pop
add
pop
aam
push
les
add
lret
cltd
stc
sub
fisubrl
bound
mov
inc
leave
imul
ret
pop
cmp
icebp
pop
jg
cld
in
stos
inc
add
add
or
repnz
dec
dec
adc
xor
ret
cmp
addr16
pop
fistpl
pop
arpl
not
jno
or
add
sar
repnz
adc
cmp
int3
and
add
lods
add
addb
add
pop
repnz
clc
mov
add
cmp
and
iret
sub
mov
push
xchg
sbb
add
xor
ds
push
push
dec
fisubl
mov
add
jecxz
test
add
mov
add
pop
pop
mov
add
mov
dec
xor
add
lcall
jecxz
mov
xor
mov
add
mov
dec
je
or
sub
push
outsl
add
add
add
and
stos
pop
stos
mov
inc
icebp
sub
sbb
testl
repz
or
adc
dec
push
push
adc
mov
pop
int
xor
or
popf
cmp
mov
add
cli
inc
jmp
stos
sbb
pushf
loop
test
or
add
mov
les
add
lds
xor
sti
add
add
cmpsb
fstp
stos
pop
out
cltd
push
adc
enter
loopne
cmpsl
lahf
cmpsb
mov
add
sub
jns
push
add
inc
addr16
in
pop
and
xor
add
into
mov
add
paddw
in
add
pop
bound
loope
and
cmpsb
and
push
jmp
jle
mov
push
sub
or
sub
lea
mov
rcrb
add
adc
ja
cmp
add
insb
rorl
sub
add
and
icebp
cmp
stos
insl
push
mov
std
fwait
and
add
xchg
test
push
pop
iret
inc
pop
jle
cmpsb
push
scas
mov
ret
adc
les
add
and
add
sti
jb
jl
jne
pop
push
or
fs
add
cmpb
inc
xor
rcrl
mov
inc
out
mov
call
pop
add
add
mov
push
hlt
dec
notl
inc
loope
add
jmp
mov
out
adc
add
pop
or
xor
push
nop
aaa
das
push
add
add
sti
lods
adc
loopne
add
push
arpl
pusha
sti
pop
adc
mov
mov
cwtl
jo
cmpsl
cmp
leave
dec
jg
pusha
xor
pop
push
insb
fwait
and
loope
lock
dec
loop
add
mov
sti
sbb
add
mov
jb
add
jnp
push
push
lret
cmpsb
jne
cmp
cmp
fildl
jo
data16
negb
mov
fstl
hlt
test
fiadds
xchg
sti
cmp
cli
loop
jne
fildl
add
les
add
add
mov
js
repnz
jl
ljmp
add
push
popf
jg
mov
je
adc
push
pop
xor
dec
je
add
ds
in
sahf
cli
jae
push
imul
stos
sbb
mov
pop
ljmp
stc
ja
xchg
mov
push
out
rcrb
inc
push
add
lods
loope
testb
push
push
or
add
inc
outsb
add
dec
fldt
cltd
and
add
arpl
lret
push
addr16
mov
cmp
xor
add
pop
hlt
loop
sub
shl
das
fstpl
imulb
add
add
or
mov
ss
aas
repz
lods
les
add
stos
add
cmc
mov
call
dec
scas
popf
scas
rorl
add
push
fwait
cmp
data16
addr16
ficompl
add
add
pop
mov
mov
and
sbb
mov
pop
xchg
dec
fcoml
add
dec
and
jecxz
in
or
pop
sub
lods
inc
adc
mov
mov
cmp
loopne
sub
cmc
es
sarl
add
xor
add
rorb
xchg
stc
adc
jmp
add
add
int
xlat
sbb
loopne
push
ja
sbb
shl
into
mov
mov
aaa
cmp
cmp
jmp
add
sub
or
add
jecxz
fiadds
add
inc
test
push
outsb
jbe
sub
fcomp
push
cmp
aas
adc
add
add
popa
sub
pushf
loope
mov
lock
pushf
push
inc
xchg
movsl
negb
sbbb
xchg
cmp
test
cmp
add
shl
add
js
arpl
add
out
push
adc
stos
outsb
out
xchg
icebp
aad
movsl
mov
add
loope
mov
add
add
jb
mov
add
or
add
pop
sbb
imul
add
dec
lcall
xchg
popf
fwait
sub
mov
mov
add
mov
lds
add
pop
lock
add
pop
loopne
jmp
push
cmp
adc
add
xor
popf
mov
sub
mov
sbb
lds
xchg
xor
rolb
add
movsb
andl
sbb
inc
add
sbb
add
arpl
test
jno
shr
inc
or
add
outsb
dec
or
add
outsl
and
pop
ss
xchg
xor
cmpsb
mov
jmp
repz
pop
cltd
std
push
dec
xor
adc
int3
lret
add
jbe
movsb
data16
out
addr16
scas
lea
push
outsl
movsl
or
bound
mov
sbb
mov
in
sbb
scas
fidivs
cwtl
push
sbb
sub
cltd
cli
inc
test
add
faddl
add
add
in
rolb
add
lods
clc
pusha
push
je
xor
lcall
add
add
mov
pop
jno
add
sub
outsb
add
fcomps
mov
xchg
push
popl
or
and
push
pushf
test
sarl
mov
add
imul
push
jmp
mov
cmp
jecxz
addb
inc
call
sub
add
push
jmp
fnstcw
cmp
add
sub
pushf
cwtl
jg
repnz
cmp
int3
out
add
dec
pop
adc
lcall
dec
repz
mov
pop
xchg
push
jmp
fiadds
dec
iret
data16
shrl
js
add
adc
and
or
add
jmp
rcl
mov
mov
xorl
sub
ss
and
lods
clc
hlt
daa
pop
cld
sbb
cmp
add
das
mov
imul
and
clc
add
sub
leave
xchg
fildl
add
mov
push
jnp
cmp
mov
add
pop
add
add
mov
or
scas
mov
push
xor
aad
push
gs
xorl
jns
pushl
jl
int
shlb
pop
rolb
dec
rol
bnd
adc
clc
hlt
pop
pop
jmp
push
dec
cmp
add
jne
pop
rcll
push
daa
sbb
dec
jns
les
add
mov
data16
filds
add
push
aas
mov
adc
addr16
mov
add
or
add
push
fcomip
adc
xlat
mov
scas
imul
jb
add
add
mov
gs
imul
xchg
ficoml
cmp
pop
ds
roll
rclb
add
adcl
clc
mov
xorb
call
pop
sbb
int
xchg
dec
pop
mov
clc
lods
mov
dec
std
add
adc
jbe
add
setae
jmp
icebp
adc
mov
andl
flds
add
push
ljmp
pop
sbb
pop
dec
ljmp
pop
cld
std
pop
in
dec
int
push
pusha
cwtl
sti
sbb
sbb
es
mov
sbb
push
clc
cmp
rcl
mov
stos
lret
push
adc
out
jg
rcl
outsb
int
xchg
push
push
dec
xchg
add
pop
inc
dec
or
add
loope
mov
aas
xlat
and
repz
cli
testb
cmp
inc
es
pop
add
ljmp
xor
sub
pop
sub
je
sldt
xchg
sarl
mov
mov
add
fwait
sbb
scas
inc
aaa
mov
add
in
add
stc
les
add
jns
test
les
add
xchg
jbe
mov
imul
and
inc
inc
sbb
ret
adc
in
icebp
sarl
fistpl
into
pop
cmp
dec
jg
add
out
mov
jb
xor
sahf
in
sub
lahf
adc
jl
lods
sbb
mov
call
mov
ret
rolb
add
ret
add
push
push
je
std
fstl
rclb
loop
stos
pop
insb
arpl
add
mov
scas
vunpckhpd
subb
add
add
and
repnz
add
adc
jo
add
add
dec
insb
lds
aam
add
les
cmp
pop
mov
cmp
xchg
fcomps
mov
jmp
add
in
add
mov
push
xchg
xor
add
push
dec
pop
sbbl
out
jo
mov
cli
jno
or
add
mov
stos
imul
add
cmpsb
push
addr16
xchg
fldl
push
dec
jae
add
mov
jmp
mov
and
pop
sub
ror
or
add
bound
mov
mov
int
mov
dec
jle
cmp
das
push
pop
xor
sbb
popf
cmc
cs
or
popa
sbb
xor
adc
fldcw
add
lea
jg
and
imul
xor
ret
sbb
repnz
shrb
adc
test
add
add
xchg
mov
add
lods
sarl
xchg
movsw
mov
loop
inc
lds
add
adcl
add
cmc
js
into
jecxz
or
add
mov
popf
movsl
sbb
mov
das
sbb
mov
push
aas
mov
push
mov
test
sbb
in
adc
inc
orl
add
adc
pop
outsb
test
rcrb
add
cmp
or
add
cwtl
cwtl
popa
xor
je
add
sahf
add
imul
cmp
das
std
jecxz
je
out
movsl
jo
data16
mov
add
nop
sarb
cwtl
sbb
arpl
pop
pop
push
insl
icebp
dec
mov
or
add
insl
push
mov
pop
pop
push
cmpsl
test
jmp
pop
insl
in
sub
ret
mov
or
mov
mov
out
imul
enter
and
xchg
dec
jge
add
cmp
push
mov
jmp
imul
xchg
push
aas
pop
xchg
andl
stos
adc
sub
add
add
jge
rclb
add
add
movsb
push
jne
jecxz
add
lcall
sub
sub
mov
and
jbe
mov
add
sub
xor
sbb
cmp
add
jae
jge
gs
out
ficoms
outsb
or
push
fwait
rcrb
xorb
mov
movsl
lods
add
sub
xchg
out
sub
add
mov
push
xlat
loope
gs
cs
outsl
outsb
iret
ds
push
add
mov
dec
jno
mov
ret
pushf
repz
push
sbb
test
and
cli
cmc
mov
loop
push
dec
lds
jbe
loope
sub
lret
into
jge
ss
xchg
jnp
pop
push
xchg
dec
ljmp
add
jne
jge
mov
call
sub
xor
xchg
mov
and
inc
dec
cwtl
add
or
pop
imul
add
pop
push
dec
xchg
mov
repnz
mov
sub
hlt
sbb
push
dec
cmp
roll
add
sub
add
xor
dec
push
add
ja
dec
fcoms
xchg
push
add
into
or
jb
and
out
lea
outsb
jns
push
push
sbb
lcall
add
sbb
jmp
and
jo
cmp
xchg
es
xchg
adc
adc
jno
xchg
js
int
sbb
add
sbb
sub
sub
sahf
insl
or
insb
add
movsl
mov
mov
imul
adc
mov
call
dec
andb
out
sahf
mov
xor
add
stos
mov
adc
outsb
add
lds
add
cmp
mov
aam
mov
push
add
add
pop
stos
ret
xor
repnz
jno
fsubrs
mov
fs
mov
xor
fcoms
and
les
add
lcall
cmp
adcb
add
add
mov
add
push
hlt
int3
push
add
bound
call
das
fildll
cmp
xchg
or
bswap
push
mov
cmp
and
filds
add
movsb
push
scas
sbb
dec
pop
add
mov
or
gs
pop
test
add
xor
and
adc
push
push
push
aaa
ffreep
mov
sahf
notl
rcrb
sub
add
xchg
push
add
mov
push
pusha
inc
lods
jg
in
inc
pop
subb
inc
das
add
jecxz
adc
sar
add
out
mov
cmpsl
mov
add
cmp
in
pop
xor
movsb
or
add
sahf
dec
insb
iret
adc
and
mov
mov
and
adc
jne
push
add
add
sub
xchg
leave
mov
push
ljmp
cmp
add
add
add
js
inc
pop
inc
xor
jns
xchg
or
mov
add
mov
jnp
mov
add
sub
xchg
pop
test
mov
call
aaa
add
jl
pusha
adcb
mov
xor
add
rorl
xchg
add
out
out
add
cmp
int3
loopne
add
test
xchg
mov
add
pop
xchg
add
xor
std
test
push
std
repz
dec
mov
int
jb
rclb
push
clc
aaa
pop
sbb
cli
sbb
iret
adc
fsubrl
imul
cmpsl
add
fbstp
ljmp
add
mov
add
ret
or
add
stos
cmc
out
es
cmp
xlat
lret
lods
fiadds
inc
or
xchg
mov
sbb
push
lock
fisubs
jp
pop
jns
popa
pop
and
add
inc
cmp
push
test
add
jg
fs
inc
sub
mov
inc
pop
sbb
push
pop
imul
dec
rcl
add
gs
imul
or
mov
cmc
sub
xchg
push
inc
test
add
aaa
in
push
fildll
xor
cwtl
xor
in
sub
mov
jg
add
adcl
add
out
mov
rcrb
fstps
into
popf
aaa
dec
xchg
sub
int3
pop
add
in
mov
sub
jnp
cmp
add
out
add
ja
jle
fldenv
fdivl
in
add
shrb
fiaddl
add
mov
xchg
cmpsb
pop
out
vpackuswb
inc
or
aad
mov
addr16
pop
inc
xchg
leave
mov
add
xchg
pusha
rolb
push
enter
fisttps
int
ds
xor
sbb
daa
sub
mov
insb
dec
xchg
add
mov
adc
mov
test
add
add
aad
dec
push
inc
cwtl
mov
les
xlat
rorl
mov
cltd
iret
mov
aad
insl
add
and
cmp
fnstsw
shll
xchg
mov
into
xor
pop
mov
sbb
outsl
mov
add
add
jnp
jno
add
sbb
iret
jbe
jbe
cmp
das
push
inc
in
mov
add
add
add
xchg
enter
mov
mov
insb
xor
dec
fwait
cld
pop
inc
negb
mov
add
jno
scas
pop
lret
cmp
add
xchg
arpl
adc
push
cmp
mov
add
sbb
aam
pusha
mov
add
arpl
add
xchg
add
add
inc
ret
mov
outsl
call
mov
add
sub
sar
mov
adc
push
inc
pop
lcall
movsl
lods
push
imul
jl
add
add
ljmp
sub
xchg
fists
iret
jg
xchg
add
add
add
add
mov
fs
add
imul
cmp
clc
lods
dec
stos
adc
jae
xchg
adc
xor
cmp
stc
push
and
push
lods
pop
daa
mov
fsubrs
lea
push
mov
lds
pop
inc
lret
pop
ficompl
or
loope
or
clc
mov
lret
cmpsl
sti
push
and
xor
imul
xchg
je
shlb
scas
lret
inc
pop
mov
popf
push
jno
lcall
sub
lahf
push
icebp
xor
add
add
cmp
mov
cmp
cmp
repnz
rcl
lret
adc
xlat
lea
xchg
add
scas
mov
add
cwtl
hlt
mov
xchg
gs
fdivrl
inc
jmp
pop
xor
mov
xlat
ds
arpl
add
addr16
xchg
add
lcall
cmpsb
pop
out
jbe
decl
xchg
fs
aas
icebp
and
mov
xchg
push
daa
enter
lds
repz
fwait
aam
js
and
mov
adc
add
add
lret
jl
aam
lds
ds
add
inc
cmpsb
add
ret
test
add
test
jae
add
jp
nop
add
or
sahf
lock
mov
add
enter
xor
movsl
add
add
in
pop
stc
cmp
inc
outsb
pop
push
sub
mov
cmp
pop
jo
sub
sahf
jo
in
mov
das
hlt
mov
popa
sti
outsb
xorl
stos
cmp
sub
add
xor
mov
jbe
into
sti
pop
adc
add
lea
inc
pop
jo
mov
pop
lea
js
lahf
add
xor
push
ud1
and
repnz
add
push
imul
sub
lock
jecxz
fwait
add
push
add
call
sub
jne
sub
add
lahf
test
data16
add
ret
or
jl
add
jg
xchg
dec
sbb
mov
mov
dec
adc
xlat
fisubrl
lea
fsub
mov
adc
jo
bound
mov
add
imulb
xchg
pop
add
add
mov
xchg
scas
scas
sti
pushf
rclb
jbe
push
cmp
xchg
xor
push
inc
insl
push
pop
cmp
out
fs
gs
rcll
and
scas
arpl
fwait
inc
ja
add
or
add
and
in
add
lahf
andl
inc
stos
add
inc
sub
shl
add
out
add
sub
mov
sarl
pop
gs
stos
cmp
push
jle
notl
xor
pushf
add
mov
cmp
enter
push
and
fisttpl
pop
mov
add
add
add
movsl
sbb
cmc
jg
fsts
and
pushf
add
mov
inc
add
push
xlat
js
cwtl
es
sub
cltd
out
out
out
inc
sbb
fcomi
mov
lock
in
dec
out
insl
dec
push
inc
lea
add
mov
popl
mov
imul
icebp
push
or
pusha
pop
mov
mov
in
mov
or
add
imul
cli
ret
cmpsb
adc
dec
mov
inc
stos
mov
pop
imul
mov
int3
imul
pushf
inc
add
jl
loope
xchg
int
xchg
inc
mov
call
mov
sti
outsb
cmc
dec
aam
outsl
mov
add
call
add
lods
dec
pop
cmpsl
and
mov
mov
js
bound
repz
insb
ss
pop
xor
dec
pop
lods
and
cmp
out
jno
testb
xchg
outsl
xchg
andb
dec
int3
fwait
add
pavgw
push
aam
int3
xor
add
xor
pop
lret
add
sub
cs
testl
mov
jnp
inc
mov
mov
add
xor
sahf
aam
dec
mov
add
cmp
xor
add
ss
xor
idivl
mov
pop
fiaddl
out
adc
add
mov
or
add
mov
add
mov
inc
and
sub
aaa
add
add
aam
cmp
faddp
pushf
add
jle
sbb
cmp
jmp
adc
pop
add
xor
add
add
adc
mov
push
es
inc
adc
xchg
ret
jle
add
add
dec
js
add
and
mov
push
cmp
xor
cmp
jmp
jno
sbb
push
add
add
repnz
lock
mov
xor
pusha
add
mov
das
mov
and
pop
pop
and
or
add
lea
insl
jnp
addl
lret
shl
mov
push
mov
movsl
or
add
push
pop
push
xor
xchg
in
mov
fmull
pushf
xor
nop
aam
test
or
add
jp
push
adc
or
xchg
pop
push
add
inc
pusha
addr16
xchg
xchg
addr16
aad
not
inc
je
add
add
fcompl
fistpll
dec
dec
or
loop
push
sti
rcrl
sbb
dec
aam
add
jo
pop
cs
paddw
inc
lock
repz
out
mov
hlt
mov
jbe
xor
cmp
jno
popf
or
jp
push
dec
sarl
sub
pop
leave
dec
mov
imul
dec
add
pushf
push
bswap
sub
inc
mov
add
stc
jmp
sub
mov
es
test
mov
js
out
test
xor
xchg
enter
pop
xchg
jge
pop
inc
pop
aas
ret
push
push
pop
inc
and
xchg
stos
repz
pop
incb
jmp
fmull
movsb
daa
sarl
inc
lea
xchg
xlat
lock
or
add
lods
xor
jg
push
lods
jb,pn
add
add
mov
popf
sub
pop
adc
cli
std
mov
add
and
adc
orb
icebp
dec
sub
add
sbb
out
and
fsubl
loope
lock
fisttpl
push
adc
clc
out
inc
jge
sbb
jg
or
sub
mov
jecxz
and
pop
push
xchg
lods
pop
rclb
cmp
shl
dec
push
mov
sub
incl
sub
mov
notb
mov
ficomps
adc
fimuls
aad
stc
enter
mov
jnp
imulb
je
mov
add
adc
pop
xchg
pop
test
add
test
or
data16
mov
test
add
push
adc
cmp
sarl
and
fldl
or
scas
push
hlt
push
cmpb
xor
ja
clc
ds
leave
add
mov
insb
int3
or
add
cmp
or
movsb
inc
cmp
test
call
lods
fisubl
and
rclb
pop
mov
daa
add
movsl
and
xchg
pop
cld
xchg
mov
or
cmp
sub
sbb
sbb
popw
jmp
jo
ja
out
add
push
jmp
imul
add
xchg
nop
icebp
movsb
cli
xor
int3
add
add
pop
cmp
mov
mov
xchg
lcall
or
rcrl
negl
cmp
aad
push
out
lds
lret
jae
rol
or
add
push
mov
jno
sub
jp
iret
pop
cs
cmp
mov
fldl
sub
add
xchg
lock
clc
aaa
in
or
mov
flds
fbld
push
cmc
ret
negb
inc
lret
insb
dec
or
add
or
ret
into
inc
aad
jbe
sub
add
out
push
inc
mov
add
leave
int
lret
out
dec
and
cmp
daa
lret
cmc
sub
int3
lods
add
pusha
mov
out
add
inc
rolb
add
movsl
mov
add
lods
into
inc
dec
mov
insl
hlt
jp
cmp
mov
scas
test
add
test
jbe
push
or
push
mov
ja
aas
aad
leave
mov
in
xchg
lahf
stos
pop
dec
fdivrs
add
pop
out
ret
mov
xor
pop
add
out
cmpsb
mov
xchg
jle
int
inc
mov
xor
test
inc
nop
add
lods
mov
xor
test
pop
das
push
cmp
and
sub
test
adc
insb
test
pop
sub
cmp
rcrl
add
add
xchg
outsb
sbb
movsb
adc
pop
aas
or
int3
jge
add
add
dec
add
add
movsl
sti
test
sarb
mov
xor
pop
sbb
adc
rolb
add
icebp
cmpsb
ret
lret
test
add
fimull
outsl
sbb
daa
andb
and
int
dec
inc
pop
add
add
add
ja
repnz
xor
adc
mov
into
clc
imul
inc
addb
pop
lret
bound
je
dec
test
add
loope
fcomps
pop
incl
rolb
add
aaa
mov
mov
in
imul
add
das
add
add
pushf
adc
jp
fdivl
enter
or
inc
enter
add
add
fisttps
and
xor
inc
movb
scas
repnz
sub
jno
pop
cmpb
roll
sub
add
mov
xor
sbbl
pop
adc
xchg
outsb
add
mov
or
add
cmpsl
addr16
test
lret
fistpll
in
mov
add
cmp
adc
fldt
leave
xor
sti
inc
lods
ret
adc
add
fisubrs
push
pop
testb
lds
rcr
or
add
mov
inc
addr16
add
js
sbb
xchg
xor
inc
mov
jl
pop
es
fimuls
add
in
outsl
jae
inc
pop
add
enter
lea
dec
testl
movsl
jae
test
add
imul
inc
cmpsb
mov
jne
cli
mov
sbb
inc
inc
cmp
mov
mov
add
sub
fwait
arpl
sahf
cwtl
add
scas
add
pop
les
add
ret
inc
les
add
sarb
out
sub
dec
inc
lods
add
jmp
lret
push
lahf
imul
sbb
repz
cmp
or
lods
aad
fs
add
iret
push
add
cmpsb
mov
push
xchg
fmul
pop
add
jo
pop
sub
lods
dec
cs
iret
and
imul
mov
mov
adcl
cmp
in
inc
shlb
add
imull
adc
fcompl
es
jo
push
xchg
loop
es
pop
cmp
push
sbb
add
je
xchg
aam
test
sarl
xor
add
jp
fdivrl
push
je
pop
mov
jmp
nop
addl
sbb
subb
xor
in
cmp
cmp
sbb
mov
mov
repnz
mov
add
inc
mov
and
jb
xchg
add
cmpsl
sub
outsb
pop
cmp
lods
sub
xchg
cs
jnp
pushf
bound
push
lret
sbb
sbb
addr16
fcoms
push
push
mov
xchg
add
mov
add
test
add
pop
rolb
xor
fwait
inc
adcb
cmp
jg
test
std
push
sahf
dec
lods
add
out
xor
bound
shr
dec
shr
movsb
adc
jmp
cmp
xchg
jnp
je
pop
ret
adc
mov
js
out
out
xorl
repz
mull
pop
outsb
sub
mov
adc
xchg
or
add
arpl
enter
into
lods
mov
adc
lea
and
scas
push
mov
addr16
call
add
loop
call
xchg
add
decl
and
iret
xchg
sub
adc
inc
or
add
adc
es
idivb
pop
cld
test
mov
add
mov
inc
add
mov
sbb
push
add
mov
stos
js
lods
adc
adc
imul
arpl
test
movsb
push
fs
jae
jne
add
mov
sub
insl
jle
addr16
and
add
add
add
add
add
add
outsb
lahf
mov
movsl
test
call
clc
and
push
out
dec
inc
sbb
ljmp
add
add
add
add
test
add
dec
mov
add
enter
xchg
mov
mov
add
add
add
dec
jb
ret
fs
test
insb
stos
lods
xor
dec
lods
sbb
ss
jne
mulb
imul
scas
and
add
repz
add
outsb
adc
sbbb
dec
xchg
movsl
add
add
insb
sahf
outsl
cli
rcl
cmp
fisubrs
mov
daa
cmp
orb
test
lods
or
add
sbb
sub
shrl
jbe
push
add
xchg
xor
in
jnp
fisttps
add
pop
mov
notb
jecxz
test
add
fidivs
das
mov
aaa
mov
stos
inc
out
fstps
dec
push
outsl
push
and
mov
mov
fsubs
mov
mov
mov
and
xor
xor
cmp
add
repnz
movsb
cwtl
ret
stos
ja
mov
inc
pop
mov
xor
pop
jmp
mov
xorl
jp
arpl
movsl
in
push
sub
jp
lret
fbstp
sub
xlat
sub
les
dec
add
push
or
fdivl
ljmp
scas
pop
ja
sub
mov
add
push
fisttpll
jae
add
xor
mov
sarl
idivb
sub
push
jg
stos
rclb
insb
lahf
addr16
inc
add
in
add
lret
gs
popa
sti
insb
aad
enter
cmpsl
xor
xchg
lcall
dec
rolb
mov
fistpll
enter
insl
push
mulb
ja
fstpt
push
sar
sub
imul
push
inc
sbb
pop
mov
js
fnstenv
pop
mov
dec
in
sbb
pop
xchg
sti
push
push
adc
jg
pop
jp
sbb
and
out
inc
ja
jl
mov
arpl
xchg
add
inc
lods
scas
in
inc
jmp
lods
imul
add
cmpl
lret
jg
fmull
inc
mov
loopne
cld
lods
sahf
xchg
mov
notl
add
cmpsb
fdivr
add
add
cmpsb
add
xor
daa
test
dec
add
sub
int3
push
add
fnstenv
cmc
aad
mov
test
neg
add
mov
add
push
fiaddl
fcom
andl
das
push
std
pop
mov
sahf
neg
out
mull
push
xchg
push
loope
mov
sbb
pusha
mov
repz
sbb
stos
push
or
add
cld
dec
cmpl
xchg
and
add
das
out
mov
add
pop
or
lcall
scas
push
ds
and
or
iret
and
popf
ds
adc
lahf
sti
jmp
add
xor
icebp
adc
sbb
xor
ret
xchg
xchg
jae
mov
mov
sub
add
xor
addr16
js
add
je
push
push
push
cltd
pop
mov
or
push
mov
add
or
fildll
sub
add
pop
or
and
push
mov
repnz
mov
push
rol
jp
add
arpl
mov
fcoms
adcl
push
rdtsc
sub
dec
testb
iret
add
add
cmp
mov
push
cmc
jae
xor
add
dec
cmc
and
adc
xchg
movsb
sub
insl
xchg
std
js
jg
pop
cmp
dec
fs
loopne
dec
xchg
pusha
decl
jo
cmc
fs
adcb
add
mov
adc
pushl
shl
imul
in
adc
push
push
push
add
loopne
int
test
add
movsl
xchg
push
leave
add
lods
rcrl
pop
dec
sbb
add
adcb
add
test
test
add
test
jl
push
cmpsb
push
out
in
sbb
ret
mov
cmpl
adc
mov
js
pop
mov
or
add
add
lods
pop
cmp
xor
subl
lea
into
cmp
add
call
push
adc
add
mov
push
outsb
jo
std
je
and
mov
imul
mov
inc
add
data16
push
adc
push
sbb
ja
mov
add
repnz
out
int3
jecxz
add
xchg
cltd
and
sbb
mov
lret
jg
fisubrs
add
pop
cmp
add
cmp
xor
pop
mov
cmpsl
lods
add
lret
fwait
dec
or
add
xchg
dec
jge
sbb
jmp
je
test
and
xchg
mov
rolb
in
jno
add
bound
or
stos
push
test
ja
xor
aaa
mov
add
mov
or
xor
mov
push
cwtl
adc
xor
orl
leave
adc
loope
hlt
adc
imul
lds
mov
mov
out
lret
cmp
testb
mov
dec
dec
mov
add
or
jae
add
jb
cli
mov
ss
add
and
movl
xchg
lods
sbb
test
add
dec
sub
pop
fucom
rcrl
jno
mov
mov
inc
ja
add
sbb
sbb
stc
call
jle
adc
sub
xor
outsb
push
int3
jo
add
xor
lock
add
pop
pop
lahf
sub
add
push
shrl
popa
sbb
push
add
pop
xchg
add
cmp
ret
jb
jbe
sub
add
scas
inc
sbb
jmp
xor
mov
add
ljmp
xor
add
push
mov
sbb
add
call
gs
and
sub
jne
addb
jle
adc
xchg
pop
inc
in
add
jl
mov
pop
lea
mov
inc
cltd
pop
bound
repnz
imul
mov
mov
shr
add
addr16
pop
fdivl
and
adc
inc
xor
ret
in
out
dec
mov
xor
push
sbb
push
jbe
shr
outsl
push
push
push
jne
lods
mov
xor
bound
es
push
imul
or
ljmp
add
dec
sbb
rolb
xor
add
mov
test
sub
add
and
dec
imul
les
imul
mov
cmp
push
add
js
mov
dec
flds
add
xor
jle
and
in
push
cltd
sti
out
clc
pop
jle
std
ds
test
add
vprotb
psrad
nop
jmp
inc
leave
dec
test
mov
add
dec
loopne
xor
into
jb
jl
mov
cmpb
fsts
adcl
imul
adc
and
dec
dec
adc
lods
jl
iret
fldl
add
adc
popf
sbb
mov
mov
mov
cs
cwtl
in
and
xchg
pusha
xor
inc
jnp
cmpb
add
les
add
ficoml
jnp
add
push
daa
jge
repz
shll
gs
inc
leave
test
add
xchg
mov
scas
nop
pop
fimull
xor
add
mov
push
pop
data16
add
pop
mov
fbld
pop
cld
lods
jg
add
fwait
lcall
dec
xor
add
mov
push
jne
popa
test
push
sub
inc
popf
call
mov
ss
cmpsl
sbb
mov
ljmp
dec
jno
inc
add
cmp
fstps
shr
pop
sub
fistpll
shrl
dec
loope
xor
adc
lcall
lahf
cld
pop
mov
sub
outsb
mov
jae
add
loopne
insl
mov
mov
fsqrt
addr16
adc
sbb
insb
add
adc
imulb
in
ret
std
xchg
jo
xchg
lret
lret
pop
add
sub
pop
cs
mov
add
mov
rorb
push
cmc
jae
fmull
xlat
scas
notb
in
roll
add
leave
mov
ucomiss
xor
add
aad
add
stos
add
xor
or
fildl
cmovae
pop
ret
cmp
inc
dec
ja
stos
orl
jae
insb
insb
mov
mov
rolb
add
xchg
fdivr
lea
test
pop
fwait
mov
jae
add
or
add
cld
cmp
jnp
push
daa
push
mov
add
lea
add
outsb
inc
push
add
mov
inc
into
and
dec
arpl
popf
inc
movsl
add
rclb
cmp
add
addl
fldl
add
inc
adc
jno
fisubrs
in
pop
test
loope
bound
mov
mov
jp
add
cmpsb
xor
or
rcll
and
into
pop
repz
and
lahf
add
enter
mov
insl
sub
mov
inc
mov
push
fs
mov
add
leave
or
cbtw
adc
mov
and
push
and
add
cmp
in
cmc
pusha
leave
pop
sbb
daa
add
pop
push
fcomps
xchg
pop
jl
sub
sldt
mov
pop
imul
mov
bound
push
stos
stos
inc
jbe
xor
loopne
push
scas
int
adc
shl
mov
jmp
add
or
add
sarl
pop
cmpsb
cld
lods
pop
bnd
mov
iret
jp
jns
rolb
add
and
cmp
dec
and
add
mov
xor
fwait
inc
cmp
add
int
cwtl
sub
aas
pop
ss
add
aad
pop
cmp
xchg
das
clc
mov
scas
mov
int3
add
adc
jnp
pop
mov
pop
mov
fistpl
jnp
cli
push
cmp
mov
xchg
iret
xor
mov
mov
xor
sbb
jne
adc
pop
movsb
aaa
test
roll
leave
push
sbb
add
inc
rolb
ljmp
pop
pop
das
outsb
and
add
outsl
push
mov
add
clc
cmc
pop
pop
jae
cmp
aas
repz
fwait
push
in
iret
xor
int
pop
out
push
enter
loope
add
add
in
pop
repz
push
push
stos
ja
push
cmp
je
addr16
push
push
or
fidivrl
mov
enter
aaa
jae
test
or
outsb
pop
jmp
jo
jecxz
push
jbe
repz
imull
adc
enter
and
shlb
inc
or
xor
dec
insl
mov
inc
pop
in
and
add
pop
jp
insl
iret
scas
into
fsubl
push
and
in
lods
mov
add
mov
divb
or
imul
pop
mov
add
dec
mov
and
insl
pop
rcll
pusha
add
cltd
lds
xchg
inc
and
int3
stc
add
inc
outsb
add
pop
aas
jnp
and
adc
add
jne
cmp
add
ds
mov
jp
jns
pop
ret
push
cld
cmp
sub
add
mov
pop
mov
ret
stos
int
das
sbb
out
sbb
push
jmp
mov
add
movsb
cmp
addb
mov
pop
addl
jmp
adc
mov
cs
dec
xchg
out
mov
inc
add
mov
mov
add
dec
jge
mov
sub
scas
in
pop
sbb
call
xor
sub
sub
test
icebp
stc
fmuls
or
fists
js
add
add
or
add
xchg
xor
add
inc
fsubrl
inc
cli
add
icebp
jp
push
scas
sbb
xlat
test
dec
out
cmpsb
je
jns
mov
mov
xlat
out
and
and
dec
or
add
xor
push
nop
sbb
add
inc
lods
ret
jno
pop
sub
incb
add
lahf
mov
mov
jg
cmpsl
repnz
inc
outsb
fidivrl
test
xor
fisttpl
pop
add
cmp
out
add
add
fldl
add
xchg
and
mov
add
inc
pop
lret
pop
stos
pop
pop
mov
in
out
add
mov
loopne
addb
add
jae
add
scas
add
add
nop
repz
std
add
sbb
or
insl
mov
xchg
push
mov
cmpsl
clc
push
andl
mov
jg
es
add
frstor
lret
cmp
test
cmp
xchg
push
repz
nop
pop
arpl
push
jmp
add
xchg
cmp
sub
dec
jle
add
and
pop
mov
push
subw
cli
test
add
je
dec
xchg
add
jo
fdivl
jne
mov
add
and
add
push
mov
fucomp
xchg
cli
lea
jl
out
push
push
outsb
xor
out
pop
push
sahf
pop
or
pop
js
sar
das
pop
inc
dec
cmpsl
push
test
imull
pop
lahf
sub
adc
adc
push
cmpsl
clc
cmp
ret
xchg
outsb
js
cmp
sar
mov
pop
mov
mov
cmpsl
pop
inc
es
pop
inc
addr16
push
pop
insb
jl
stos
cmpb
lcall
mov
pop
jb
ja
adc
stos
stos
js
adcb
insl
xchg
xor
jmp
data16
sub
movsb
aas
dec
mov
add
xchg
out
lock
sub
lcall
and
movsb
push
lret
mov
popf
pop
xor
fwait
stc
lret
insb
xchg
mov
cmp
shlb
mov
jle
divb
push
add
mov
or
add
adc
sbb
mov
ret
add
or
cmp
cld
and
inc
subps
pop
in
pop
inc
or
jge
mov
cmpsl
push
xchg
push
aam
fbld
or
test
mov
loope
xlat
mov
test
iret
clc
subl
lods
mov
push
dec
sbb
sbb
dec
pop
add
aaa
inc
jl
add
je
mov
push
inc
jo
add
xchg
shll
out
ds
inc
cmpsb
add
cmp
or
add
hlt
bnd
cmp
push
lds
cmp
das
lods
and
loop
mov
pop
rolb
out
cmpsl
scas
mov
push
icebp
and
xor
jg
and
cmpsl
pop
dec
cmp
add
shll
dec
aam
arpl
mov
pop
adc
rcrb
jns
shr
lret
movsb
cmp
cmpb
into
push
ds
and
adc
cmp
nop
cmc
fildl
out
mov
add
push
pop
mov
inc
lea
add
nop
lock
or
add
addr16
jp
pop
jle
es
or
leave
sbb
sahf
add
sbb
and
ret
xor
xchg
lea
dec
cli
add
sbb
add
pusha
add
cmp
enter
xchg
push
addb
mov
cmp
cs
mov
mov
repnz
dec
leave
add
push
lret
ds
lcall
scas
clc
icebp
push
es
sbb
xchg
out
and
cmp
fwait
jb
lahf
or
xchg
fwait
jmp
push
lock
push
int3
sbb
add
add
loope
daa
int3
movb
stc
sarb
inc
jne
imul
add
push
or
add
sbb
add
iret
repnz
mov
outsl
add
cli
sbb
mul
pop
das
mov
stos
das
push
jae
ret
jo
ds
mov
mov
add
pop
dec
mov
outsb
rcrl
sahf
sbb
fisttpl
dec
addb
pop
inc
push
fisubrl
xchg
mov
insl
adc
fcoms
add
add
add
adc
stos
insl
les
add
bound
cmp
pop
dec
and
inc
add
add
imul
imul
mov
mov
test
icebp
bound
imul
mov
orb
add
loopne
add
dec
add
fs
mov
data16
dec
int
jecxz
pop
add
pop
test
add
int3
push
add
jl
jbe
iret
arpl
inc
scas
xchg
rol
cli
jmp
cwtl
adc
imul
push
mov
add
ljmp
rclb
cmp
iret
add
scas
cwtl
add
add
pop
or
or
std
lret
lea
add
add
shr
inc
xor
sarl
into
mov
das
mov
sub
add
addr16
test
mov
add
mov
repnz
xor
sub
ljmp
out
push
xchg
cltd
sub
mov
inc
loop
nop
or
mov
push
xchg
dec
fildl
add
mul
aam
rolb
push
xchg
aad
dec
in
add
inc
or
add
add
int
cmp
outsl
mov
rolb
cmpsb
dec
lret
jnp
inc
xchg
sbb
inc
jns
out
orb
xchg
and
mov
cmp
xchg
lock
imul
imul
mov
scas
mov
out
sbb
inc
or
fwait
and
mov
push
ret
push
arpl
repnz
lret
or
add
loopne
ljmp
and
fcompl
mov
repnz
mov
add
adc
cmpl
lret
xchg
sub
scas
mov
add
loop
lock
scas
xor
scas
pop
pushf
and
jbe
jp
adc
repz
int
fwait
dec
xchg
adc
dec
out
aaa
inc
lret
cwtl
leave
xor
call
lock
xlat
scas
xchg
loopne
xchg
fildl
push
jmp
jno
inc
inc
jns
mov
rorl
mov
call
pop
mov
sbb
aam
inc
push
add
faddp
ret
idivb
sub
adc
pop
pusha
loopne
or
dec
mov
add
add
lret
lock
add
cmp
push
icebp
or
add
sub
mov
xor
jbe
int
pushl
adcl
adc
mov
ret
or
add
call
clc
pop
repnz
mov
movsl
stos
sub
clc
jg
leave
cmp
out
jo
adcb
fcoms
mov
add
ficompl
push
jnp
jns
cmp
popf
xchg
negl
clc
push
les
add
fcom
test
add
cltd
cli
into
add
test
add
dec
iret
hlt
xchg
mov
jge
aas
das
adc
pop
movl
dec
cmp
pop
loop
xor
out
jmp
push
xchg
ds
sbb
push
mov
mov
dec
les
add
int
ss
mov
add
mov
sti
mov
loopne
pop
fsubp
xor
in
dec
jne
mov
hlt
rorl
add
pop
movsl
push
stc
data16
jp
jecxz
ficoml
leave
mov
and
jl
insb
stc
jp
push
adc
sbb
in
lcall
push
cmp
insl
rcll
scas
add
pop
or
inc
out
add
jmp
sbbb
cmp
add
stos
jbe
xchg
cltd
scas
mov
xor
mov
add
fsts
sahf
stc
inc
lret
outsb
lret
int
dec
repz
outsb
ret
jge
test
push
aaa
jecxz
sbb
jo
test
add
js
and
pop
ret
mov
mov
lea
xlat
xor
fucomi
inc
fildl
add
jnp
pop
das
dec
xchg
add
mov
dec
lods
jl
int
mov
push
lock
and
xor
fdivr
fdivrl
pop
add
fisttpl
dec
stos
stos
jecxz
sldt
mov
add
fnsave
pop
push
add
add
int
add
pop
add
jl
pop
cmpl
mov
popf
clc
adc
add
stos
cmp
or
add
cld
add
inc
into
adc
or
pop
add
xchg
data16
pop
mov
mov
out
dec
jo
push
add
add
mov
int3
fiadds
add
or
fs
pop
or
add
addl
shll
pusha
and
push
adc
aad
pop
aas
mov
fs
xchg
js
sbb
sub
mov
mov
add
repz
or
add
jno
pusha
loopne
mov
cmp
add
jnp
sbb
insl
mov
mov
sbb
daa
cmp
dec
dec
mov
sub
add
cld
add
add
sub
test
inc
jo
aam
shrb
fdivp
lods
dec
push
add
filds
rcll
or
add
xorb
dec
arpl
mov
mov
in
add
shrl
push
inc
pop
add
test
rorl
add
fimuls
es
push
lods
jp
stos
lret
lret
push
subl
shlb
jbe
inc
push
das
pop
inc
cmp
jns
xor
pop
add
or
or
add
xor
xchg
ja
es
cmp
cmp
idivl
sub
jbe
pop
jae
inc
add
push
lock
sub
dec
xor
add
add
mov
mov
negb
pop
sbb
nop
clc
cmp
pop
push
xor
pop
fucomi
sbb
add
je
and
testb
sub
shll
jne
adc
add
movsl
xor
cmp
test
add
xchg
xchg
iret
shll
sub
push
push
push
xchg
mov
jg
jnp
jecxz
ret
icebp
les
imul
add
mov
dec
scas
add
das
pushl
push
xchg
lcall
in
fbstp
cwtl
gs
mov
mov
fldenv
xchg
fdivs
hlt
hlt
aaa
xchg
xchg
add
sbb
leave
adc
lahf
sbb
adc
jl
popf
mov
mov
lods
ds
mov
mov
add
shlb
mov
mov
pop
fldl
lahf
aam
or
push
sub
xor
aas
or
add
sarl
pop
jle
sub
add
jl
in
fldenv
add
es
push
enter
mov
cltd
cli
insl
out
sub
fistps
aas
neg
add
add
mov
push
ja
stos
lods
mov
daa
sbbl
pop
inc
sub
inc
fisubs
mov
pop
rcrl
idivl
jb
inc
adc
mov
lahf
dec
fstl
cwtl
int3
scas
add
push
xlat
mov
sbb
loope
cmp
cmp
leavew
les
dec
ss
dec
add
inc
in
inc
dec
in
xor
cmp
cli
fdivrl
bound
fs
sbb
decl
xor
rcrl
stc
push
mov
xchg
adc
out
sub
add
jno
xchg
sbb
nop
lods
outsl
sub
pop
add
das
fisttps
filds
movsl
inc
pop
mov
xchg
orb
add
dec
into
add
fisubl
xor
in
lods
sahf
xor
mov
add
insb
sbb
xchg
movsl
jl
scas
xor
lret
mov
fcompl
push
push
lcall
lea
mov
pop
stos
add
mov
add
inc
scas
cmc
mov
jmp
cld
add
push
mov
add
icebp
mov
jle
mov
add
insb
xor
or
cmpl
add
in
mov
jle
inc
mov
fldcw
and
adc
xor
hlt
bound
sub
add
inc
addl
pop
cmp
das
mov
test
jp
shr
mov
outsl
cmp
add
jg
inc
add
movsl
push
mov
fcomps
pop
xchg
int3
movl
add
jnp
mov
pusha
in
ja
mov
ftst
sub
mov
xorl
mov
outsl
imul
and
inc
mov
or
addl
and
pop
out
icebp
xchg
sub
xchg
out
fiaddl
cwtl
jle
div
sbb
add
xlat
enter
xor
cmp
push
cwtl
es
dec
mov
add
fistpl
fs
dec
dec
add
sub
mov
mov
add
mov
loope
push
lds
mov
mov
je
lock
icebp
adc
xor
add
add
loopne
scas
pop
sub
add
push
xor
xchg
stc
daa
lds
jnp
std
aas
and
mov
filds
add
add
cmp
andl
add
dec
jp
stos
cmc
in
sbb
mov
sbb
xor
mov
fwait
mov
ljmp
add
xchg
sub
mov
xchg
dec
add
mov
mov
daa
out
cmpsb
add
cmpsb
std
lods
cmp
repnz
fucomi
ja
iret
movsl
adc
data16
pushf
scas
imul
mov
mov
add
mov
or
inc
push
add
mov
jne
andb
cmc
lret
ret
pop
js
aad
cmp
sbb
mov
cmpsl
push
push
rsqrtps
dec
dec
add
inc
aaa
shll
popa
ljmp
sbb
shll
sbb
mov
xchg
aaa
loop
adcl
imul
ficoms
add
pop
jae
adc
in
movlhps
test
push
insb
xor
enter
pop
clc
lods
loopne
push
ficoml
andl
sub
imul
add
cmpsb
movsl
dec
push
push
imul
add
add
js
pusha
xchg
mov
fldl
sub
pop
xchg
aaa
int
xor
cmp
mov
jge
test
into
fnstenv
cmp
ljmp
add
add
mov
sbb
ret
xor
jp
mov
pop
push
jmp
push
sbb
mov
sbb
adc
mov
pop
sub
in
sbb
or
fmull
lcall
add
lret
jne
push
xchg
cmp
cmpsb
icebp
pop
push
push
ret
stos
test
xor
push
in
out
and
test
xchg
sbb
out
fs
loope
lahf
push
daa
jns
adc
sbb
mov
xchg
push
jmp
in
sbb
outsl
loop
enter
lods
mov
in
push
add
add
dec
into
divl
dec
xchg
add
add
cmpsb
cltd
add
add
ljmp
rclb
ds
roll
jle
test
add
test
pop
int3
adc
add
lret
mov
ret
jp
sub
mov
call
lds
xchg
in
int
mov
xor
fmul
stc
add
cmp
sub
jl
loopne
jae
jl
loopne
out
mov
lods
xorl
add
jecxz
mov
adc
sbbb
add
add
bound
mov
jae
fsubl
loop
and
dec
jbe
add
loopne
sub
sub
pushf
push
mov
dec
jne
mov
add
sub
out
imul
ror
jl
iret
inc
cld
add
jbe
test
inc
hlt
sub
add
out
call
or
sub
mov
sub
fcoml
pop
dec
addr16
inc
lods
hlt
aaa
mov
bound
pop
jbe
mov
test
jbe
add
aam
cmp
jns
inc
adc
fwait
add
cmp
ds
dec
pop
lods
test
add
jecxz
cltd
fs
push
inc
mov
idivb
jp
loope
add
lret
xchg
inc
push
push
mov
and
ss
iret
adc
cmp
pop
lcall
cltd
add
cs
in
xchg
push
cmp
inc
pop
pop
sbb
std
pushf
pop
mov
scas
hlt
mov
mov
bound
mov
out
xchg
out
and
out
sbb
dec
pop
negl
mov
daa
ss
xor
xchg
mov
push
push
mov
lahf
lahf
imul
das
sbbl
popa
mov
addr16
inc
adc
shl
inc
or
add
cmp
fwait
in
xchg
outsb
push
cs
and
fidivrl
xorb
cld
cmp
aad
push
stos
scas
xchg
mov
add
jmp
add
fstl
xor
fildl
mov
or
push
xor
dec
call
jmp
fmulp
dec
int3
and
add
mov
frstor
hlt
pop
movsb
sub
cmp
dec
cmp
add
std
rcrl
mov
nop
xor
fimull
scas
test
sub
pop
pop
clc
push
sahf
in
insl
add
cmp
inc
pop
sbb
pop
mov
repnz
and
lret
pop
jb
sub
push
cltd
cmp
jle
push
daa
sbbb
jno
xchg
fsubs
gs
cmp
out
or
and
mov
inc
sbb
push
hlt
xchg
cmp
cmp
adc
not
pop
in
outsl
jb
jo
pop
sub
lcall
mov
rcrl
std
mov
push
or
push
and
add
inc
add
aad
in
sti
fdivs
jb
aaa
lret
add
sahf
mov
add
add
jmp
or
add
fcomps
xchg
jg
daa
mov
cmp
xor
test
adc
and
in
push
xchg
in
jmp
add
add
nop
mov
sub
jbe
fmulp
jo
add
add
adc
add
fisubs
push
push
lds
pop
testl
xchg
push
cmc
and
leave
cmovae
sub
cmpsl
cs
jge
pop
inc
jb
add
pop
pop
pop
insl
repz
pusha
imul
jl
addb
jecxz
outsl
movsl
dec
subl
xor
inc
imul
jmp
fdivl
add
xchg
inc
testb
jb
into
add
or
add
jp
xor
fnsave
mov
inc
push
add
mov
add
add
idivl
mov
sarl
xor
rorb
add
cmc
jne
testb
pop
sbb
mov
xchg
add
push
mov
add
xchg
inc
out
add
and
mov
add
pop
scas
push
jle
jle
or
add
in
ret
ljmp
jno
ret
push
sldt
ficomps
iret
xchg
mov
filds
mov
adc
add
insl
cmp
out
jbe
jmp
add
cld
pop
loope
lods
movsl
repnz
outsl
jo
mov
nop
add
int
loopne
cmp
cli
mov
dec
lods
add
sub
cmp
xchg
mov
or
add
adc
sarb
mov
or
add
mov
mov
pusha
movsb
mov
lret
push
inc
ds
jbe
push
push
jae
int3
int
add
xor
fidivrs
aaa
jle
xchg
test
add
add
mov
mov
dec
jle
mov
mov
add
je
in
jae
aad
scas
aam
and
inc
pop
add
cmp
jno
out
daa
inc
insb
jmp
add
movsb
outsb
xchg
loope
lahf
add
push
or
icebp
arpl
outsl
xor
jmp
std
add
mov
pop
cwtl
outsb
add
push
jne
in
iret
push
mov
movsb
jecxz
mov
out
and
pop
leave
fldt
aaa
push
xchg
popf
cmpsl
mov
nop
lret
subl
fdivs
movsl
mov
inc
lret
push
and
clc
sub
bound
dec
cmpsl
popf
insl
sbb
call
push
xchg
imul
mov
std
adc
lret
cwtl
mov
mov
adc
arpl
dec
or
or
push
jbe
in
test
nop
mulb
inc
pop
je
cmp
push
fildll
jns
mov
and
dec
adc
into
add
gs
sbb
out
jnp
or
add
pushf
movsl
std
adc
or
movsb
sub
push
mov
mov
lcall
scas
mov
in
test
dec
xor
add
fwait
push
ret
scas
lahf
jae
cmp
icebp
adc
dec
xchg
fstl
add
sub
mov
xor
out
jl
ja
jo
mov
mov
into
fisttpll
mov
xchg
pop
inc
ret
add
orb
xchg
add
add
inc
nop
xchg
loope
jbe
lock
js
cmp
rolb
add
fiaddl
push
ds
repz
adc
orb
add
pop
adc
pop
pop
push
rorl
movb
jae
std
mov
push
and
shl
sbb
lahf
fnstsw
add
imul
test
fstps
sbb
cmpsb
push
cmp
out
xorl
xor
sbbb
call
cs
mov
add
fadds
cli
cmpl
pop
add
scas
mov
mov
add
mov
jns
popf
hlt
mov
jmp
push
fisubs
and
dec
xchg
add
push
sti
add
ja
test
adc
or
add
loopne
sti
test
add
and
sbb
xchg
cmp
popa
fisttpll
jbe
push
mov
pop
movsl
jp
das
xchg
push
pop
rol
and
cmp
mov
lds
jb
les
pop
mov
addl
add
xor
lret
imul
mov
mov
adc
dec
jecxz
add
add
or
test
add
and
mov
fptan
aas
mov
insl
fucomip
pop
out
mov
cltd
sub
push
test
sbb
mov
and
ss
out
add
add
inc
das
add
inc
jo
cmpsb
hlt
stc
sbb
test
push
stos
stos
push
in
loopne
int3
rolb
push
lret
mov
lahf
xchg
sub
addr16
dec
test
cmpsb
out
mov
loopne
sahf
cmc
xchg
movsl
outsb
pop
aas
dec
lea
insb
sbb
scas
xlat
sarb
out
xlat
mov
fisubrs
add
xor
mov
ret
push
popf
or
add
hlt
sbb
insl
inc
inc
out
add
cmp
inc
push
inc
shrl
hlt
jge
cmp
out
xchg
xor
inc
dec
pushf
popf
mov
xchg
call
xchg
rcll
in
out
mov
pop
push
dec
repnz
pushf
shrl
jmp
inc
add
add
dec
imul
add
js
arpl
nop
lea
mov
add
pop
add
or
test
aad
xchg
push
lcall
sbb
xchg
mov
aas
mov
jnp
xor
pop
add
sarb
imul
insl
or
push
mov
jl
add
or
ja
inc
nop
test
add
rclb
cmpxchg
and
push
out
cwtl
divl
sub
sti
testl
pop
add
add
and
popa
adc
xchg
inc
testl
insl
dec
mov
pop
jl
jns
mov
imul
push
nop
das
jmp
sbb
cmp
cmp
imul
pop
adc
jo
bound
cmp
sub
lahf
pop
pop
cli
inc
leave
adc
inc
jp
jb
mov
dec
push
aas
xchg
cmpsb
or
mov
cli
and
loop
xor
mov
roll
add
xchg
fwait
aad
lea
call
and
imul
xchg
ljmp
mov
test
mov
cmp
dec
mov
add
lods
pop
lcall
fcompl
aas
cmpsb
jae
fildl
add
add
push
test
add
mov
and
mov
dec
add
aas
dec
loope
pop
jmp
mov
fiaddl
xchg
push
pop
jg
dec
xchg
add
lret
sbb
add
pop
rolb
loope
jne
mov
add
aas
add
pop
and
push
xor
mov
jb
add
ret
stos
int3
mov
add
xlat
inc
push
mov
add
mov
cli
loop
lret
mov
sub
adc
push
push
cli
sti
mov
push
xlat
xchg
mov
es
push
add
adc
mov
cli
xchg
filds
scas
loope
sbb
inc
cmp
rorl
cli
loop
cs
cmp
aad
sub
xor
add
pop
sbb
lret
repnz
add
repz
loopne
add
inc
inc
sbb
enter
sub
jl
jge
iret
data16
fisubl
outsb
mov
push
cltd
out
xchg
loope
add
clc
aam
cmpsb
add
enter
sub
sbb
mov
mov
add
mov
mov
pusha
xlat
scas
sbb
or
scas
popf
les
dec
mov
mov
add
addl
test
movsb
aaa
inc
lcall
in
fprem1
sub
pop
ret
cmp
js
mov
dec
fcoms
daa
pop
jmp
cli
or
loopne
jns
sub
xor
cli
out
pop
push
movhps
add
cmpb
add
pop
jbe
adc
xchg
add
push
fs
jg
add
add
sti
sbb
add
shr
xchg
pop
dec
cmp
gs
jo
aam
shrl
aas
enter
lea
lock
lcall
mov
add
inc
mov
adc
inc
outsb
mov
sub
push
repnz
pop
add
cmp
mov
mov
dec
mov
mov
mov
mov
insl
push
add
pop
data16
jg
inc
cmp
sahf
lds
adc
fwait
add
jle
sti
pop
add
add
jns
sbb
add
push
and
sarb
add
inc
andw
dec
adc
xchg
inc
mov
mov
add
add
mov
mov
outsb
cmp
gs
rcll
ss
add
jb
stos
lods
cmpsl
mov
lret
pop
imul
add
xor
jle
lcall
xor
in
aam
rcrl
push
gs
and
fdivr
out
xchg
jns
mov
inc
xor
leave
push
sbb
dec
cmp
aad
jnp
or
dec
jns
cmpsb
xor
add
insl
fdivrl
mov
insb
xor
test
pop
fsubp
mov
add
mov
or
add
lock
add
adcl
mov
add
push
jns
push
cmc
inc
push
mov
out
pop
pop
aas
in
dec
add
add
ljmp
add
sub
dec
adc
jmp
add
outsl
push
out
lods
pop
out
sub
roll
add
xor
jl
xchg
clc
add
enter
jmp
in
pop
and
shll
push
jo
add
add
add
mov
jo
mov
in
sbb
adc
jo
xchg
mov
cmpsb
jmp
lods
and
push
push
dec
add
cmp
dec
cmpsb
add
stc
outsb
add
leave
jo
jge
insl
imul
shlb
fs
shl
ljmp
cmp
ja
roll
pusha
push
xchg
xor
pushf
ret
push
xor
cmp
mov
mov
add
mov
xchg
add
scas
adc
test
push
jle
shll
and
mov
inc
cld
incl
inc
add
addr16
fs
adc
jmp
fsubl
in
imul
repnz
bound
xor
es
and
push
lods
dec
pop
push
jae
mov
ficompl
nop
jnp
push
jge
xchg
add
or
add
xor
outsl
shlb
push
add
add
mov
call
add
sbb
out
in
ja
es
adc
add
and
test
add
pop
lods
popf
lods
pop
mov
outsb
add
add
cmp
mov
imul
rclb
xchg
cmp
push
mov
sub
or
add
aad
in
sbb
add
jl
faddl
add
and
repnz
push
sti
gs
out
cwtl
inc
fiaddl
add
push
add
add
adc
add
adc
js
into
xor
scas
and
mov
jae
inc
roll
add
add
fistpll
ds
in
ficompl
incb
mov
add
xlat
cmpsb
inc
jmp
jge
pop
fs
aad
mov
adc
push
pop
adc
int
sbb
pop
stos
ret
hlt
jae
inc
fcmovb
in
pushf
arpl
sub
out
sbb
sub
pop
in
pop
and
mov
add
jge
dec
lcall
xor
stos
gs
arpl
inc
push
jne
jne
xchg
add
adc
adc
xchg
fildll
mov
mov
lcall
push
xor
xor
mov
fbld
popa
loopne
cs
lret
sub
lcall
pusha
pop
xchg
add
leave
out
xor
and
out
sbb
shlb
mov
mov
xchg
add
aad
sub
call
mov
mov
jnp
jecxz
mov
inc
push
or
add
push
aam
mov
fisubl
das
add
xchg
jmp
mov
fxch
cld
addr16
inc
iret
sahf
and
out
iret
jnp
xchg
inc
inc
nop
add
cmp
test
sti
dec
out
dec
rclb
daa
push
pop
xlat
pushf
test
add
push
aad
call
cli
enter
leave
xbegin
ljmp
data16
test
add
rcrb
stc
imul
cmp
xor
push
out
das
push
mov
movsb
or
add
test
scas
daa
popa
push
aaa
subl
push
mov
cmp
mov
add
std
sbb
std
dec
mov
dec
cltd
add
cwtl
stc
lret
add
insb
mov
lret
add
je
inc
mov
adc
dec
jp
sub
int3
xchg
add
and
leave
out
call
sub
loopne
lods
imul
aaa
andb
add
call
jle
sbb
imul
jmp
lock
icebp
sahf
stos
fimuls
pop
xor
in
xor
xchg
or
mov
xor
lds
js
or
add
pop
inc
push
addl
repz
pop
and
xchg
xor
leave
sbb
lock
roll
add
push
mov
push
repz
pop
in
mov
push
loop
jmp
mov
push
out
mov
jnp
xor
int3
mov
cmpsb
and
aam
cwtl
das
cmp
mov
incb
jo
fnsave
and
jae
insb
mov
lock
xchg
adc
shlb
sub
hlt
insb
ljmp
mov
fsub
js
xchg
mov
mov
insb
sbb
test
jp
test
add
xchg
movsl
pop
mov
bound
add
out
add
add
sub
sub
cmc
leave
adc
loopne
loop
iret
iret
sbb
lret
lds
sub
add
mov
mov
add
add
jb
sbb
insb
andl
insb
push
push
mov
jp
adc
add
or
add
es
fsubp
adc
jecxz
popf
mov
es
stos
add
lds
popa
hlt
pop
lcall
mov
and
add
push
add
loopne
add
add
sub
fcoml
lcall
add
sub
push
add
dec
xchg
mov
and
shl
add
add
out
pushf
add
lcall
call
call
aad
cmpsl
xchg
sbbb
sub
pop
cmp
mov
mov
stc
cmp
push
pop
scas
insb
out
negl
les
add
lahf
xlat
jp
fsub
jb
insl
dec
pusha
mul
xchg
mov
cli
mov
out
nop
sahf
fistpll
decb
mov
add
add
jl
pop
adc
mov
mov
cmc
fcompl
add
mov
pusha
out
insb
and
incb
popl
hlt
inc
in
scas
ret
adc
add
rol
mov
mov
or
cmc
stos
clc
movl
add
outsl
dec
stos
and
aas
mov
add
andl
je
mov
addl
daa
inc
add
adc
jb
pop
cmp
fistps
adc
int
or
or
add
jo
popl
add
inc
xor
fs
lcall
jns
or
add
inc
mov
inc
sub
dec
sti
shrb
add
add
test
add
and
pop
enter
mov
lds
adc
pop
in
mov
frstor
jnp
out
or
add
push
and
mov
add
add
or
insl
sbb
sbb
add
and
mov
out
fs
xor
mov
push
push
lret
fldenv
iret
add
mov
test
cmpsl
mov
movl
iret
int3
dec
add
scas
stos
jns
or
lock
xor
xor
pop
jb
xlat
and
gs
data16
jbe
mov
or
add
add
movsl
or
or
psrlw
push
out
out
loope
mov
jmp
bound
pop
pusha
and
xor
fcompl
jg
add
pop
pop
shlb
movsb
mov
mov
push
lret
loope
pop
or
xchg
xchg
xor
add
add
das
or
add
inc
cmp
add
out
push
jne
in
jb
cmp
adcl
lock
sbb
push
add
call
sbb
adc
lret
divl
stc
mov
repz
jle
sbb
push
mov
inc
sldt
enter
loop
xlat
sbb
dec
in
dec
dec
test
mov
add
mov
js
movsl
insl
add
ds
imul
jle
cld
ret
divb
jnp
stos
out
sub
pop
scas
aad
in
ret
add
jmp
les
sub
xchg
enter
bound
jle
in
push
sti
xchg
lods
xlat
in
xorl
int3
pop
add
or
push
insl
shl
dec
outsb
add
addr16
jnp
pop
xchg
jl
repz
fwait
in
arpl
push
pop
push
inc
movsl
mov
add
iret
dec
push
add
pop
sbb
daa
pop
adc
xor
sbb
movsl
or
mov
add
add
add
pop
mov
lods
out
pop
pop
or
add
out
adcb
pusha
mov
mov
push
jbe
out
shrb
das
jle
mov
xchg
fistl
iret
ja
jmp
fsubs
jbe
xorb
dec
or
add
pop
out
jbe
out
outsb
mov
push
adc
hlt
lods
mov
inc
icebp
add
int3
xchg
add
push
loope
cmpsl
lods
adc
fsubrl
out
adc
lret
and
pop
or
add
jg,pt
stos
rol
add
stos
repnz
repnz
jb
cli
cmp
lret
inc
dec
test
mov
cmp
push
mov
add
mov
pusha
add
add
rorb
add
fbstp
xchg
push
cmp
das
add
iret
xchg
shll
add
xchg
sbbl
xor
cmp
jg
arpl
xchg
xchg
daa
int
out
lret
shll
les
add
sti
in
nopl
xchg
aaa
push
outsl
lds
mov
jg
sub
push
add
mov
mov
add
pop
insb
inc
jl
lods
xor
adc
dec
addr16
or
lds
lret
js
add
pop
add
scas
mov
lods
jnp
repnz
lcall
fistpl
fs
les
xor
movsb
loope
scas
call
xor
add
add
ret
outsb
inc
xchg
pop
add
mov
jae
lcall
sbbl
imul
xor
jno
and
jno
gs
push
xlat
arpl
testb
movsb
mov
test
mov
add
addr16
mov
fiadds
add
push
stos
mull
mov
testl
enter
iret
movsl
mov
and
mov
inc
iret
jle
cld
fsubs
pop
xor
dec
or
add
cmpsb
aas
test
dec
add
mov
jne
cmp
cli
sub
and
into
ret
roll
dec
pop
cmc
fmuls
add
idivb
or
lea
add
adc
add
xchg
sub
pop
je
add
add
push
gs
add
popa
pop
add
xor
out
das
icebp
leave
ja
inc
je
dec
add
popa
jns
push
les
add
push
sbb
insb
add
sbb
add
sbb
cld
mov
or
arpl
out
insb
je
jp
sbb
xchg
lret
fstl
inc
or
in
sahf
jb
or
fcomps
mov
mov
sar
pop
ljmp
push
jae
inc
cld
inc
pop
cld
pop
mov
in
jle
arpl
xchg
dec
and
dec
daa
loop
cltd
mov
outsl
and
mov
mov
pusha
add
jp
cmc
lahf
cmp
jns
into
hlt
icebp
enter
jnp
xor
aad
int3
add
sub
mov
dec
xor
pop
outsb
xchg
pop
pusha
jno
shrl
repz
cld
leave
pop
cmpsb
imul
mov
jge
add
cmp
cmp
push
insl
dec
pop
lods
xchg
pop
mov
add
lock
pop
mov
in
mov
sahf
imul
pop
hlt
push
jo
add
mov
add
xchg
fcmove
popfw
or
cltd
aam
xor
jp
xchg
add
gs
add
in
gs
mov
pop
addb
mov
mov
add
inc
sub
add
add
pushf
push
out
fs
arpl
pushf
add
cmp
add
repnz
inc
mov
imul
jbe
pop
test
sub
andb
lret
adc
bnd
adc
mov
rol
and
inc
mov
add
pop
mov
movsl
fdivrl
push
and
mov
add
lret
repnz
scas
push
push
xchg
inc
mov
mov
add
add
gs
addr16
mov
lods
dec
or
add
xor
xchg
mov
rolb
add
push
ret
dec
loope
add
fdivp
dec
dec
out
shrl
adc
cvttps2pi
test
movsl
push
notl
stos
lahf
pop
fs
sbb
je
imul
call
rcll
jb
mov
jnp
add
repz
add
sub
add
lcall
outsb
dec
jo
int
add
insl
in
into
add
mov
jno
or
outsl
shlb
aad
stos
stc
sbb
xchg
push
mov
lret
and
push
push
pushf
pop
test
outsl
inc
bound
add
shlb
repz
inc
leave
in
ljmp
sub
mov
das
sub
scas
and
add
push
in
call
pop
into
xchg
sbb
add
add
mov
mov
aad
sbb
fisttpll
stos
sbb
sbb
add
xor
xor
fbstp
dec
sub
bound
push
outsb
push
jne
popa
push
mov
pop
pop
pop
lods
inc
mov
push
rcl
lods
cmp
pop
add
mov
and
add
ficomps
jo
bound
jne
mov
inc
test
mov
inc
fists
hlt
stc
das
out
dec
roll
andl
popa
outsb
pusha
sbb
xchg
ss
addl
aam
jmp
jns
push
cmp
mov
aam
pop
lods
rcll
test
pop
ljmp
jmp
inc
inc
add
stos
sti
inc
jg
sbb
or
add
add
fistpl
daa
add
add
pop
mov
icebp
mov
inc
cmpsl
inc
incb
add
adc
fs
fdivl
and
bound
push
sbb
pop
pop
inc
jp
es
insl
roll
mov
lods
mov
into
std
dec
mov
or
mov
sbb
add
test
add
insl
mov
add
or
cmp
cmp
shlb
test
out
in
lret
add
cmp
shlb
or
add
in
jb
xchg
jmp
sbbb
icebp
adcl
or
cmpsl
mov
add
push
outsl
pop
call
fcmovnb
or
add
mov
inc
cmp
aaa
cmp
cmc
dec
loop
rcll
inc
lods
ret
jnp
inc
dec
mov
add
idivl
dec
add
loope
push
insb
movsb
xor
add
aad
mov
add
and
rcr
add
leave
or
loopne
sti
cmp
or
sbb
add
sarb
cmpsl
push
mov
insb
loopne
pop
push
jbe
js
lock
add
push
jl
int
jno
mov
loop
or
cld
jecxz
shlb
out
add
insb
inc
rorb
xchg
mov
mov
cmp
add
pop
arpl
testl
addb
xchg
and
jecxz
xchg
inc
loope
inc
jmp
test
pop
cs
sub
hlt
out
gs
and
popa
lods
jge
dec
out
test
add
repnz
xlat
mov
push
pop
shl
lret
leave
inc
mov
lret
scas
sub
pop
lds
xlat
ficomps
movsl
cmc
push
inc
scas
xchg
aaa
dec
xchg
add
mov
hlt
js
ds
lret
sbb
mov
pushf
push
dec
nop
or
add
lds
inc
mov
pop
repz
pop
divb
push
add
add
pusha
lahf
xchg
push
outsb
xchg
push
mov
imull
into
jecxz
mov
addb
fnsave
mov
lcall
or
add
lds
xchg
xchg
cwtl
push
test
lods
mov
adc
dec
mov
mov
add
pop
lock
pop
shll
das
or
pop
add
xchg
pop
in
jne
testl
jb
add
jge
mov
add
sbb
add
je
dec
add
lods
add
add
stc
jmp
push
outsb
xor
cmpsb
mov
lret
mov
add
and
pop
mov
roll
clc
push
fwait
xchg
adc
mov
pusha
lcall
and
pusha
movb
or
repz
imulb
fdiv
push
add
inc
ds
cmp
add
xchg
dec
dec
push
add
pop
lcall
xor
jno
jp
mov
xor
jle
add
hlt
mov
inc
negb
mov
popf
dec
sub
mov
adc
mov
add
mov
adc
repz
subb
shlb
iret
movb
call
pop
and
add
push
mov
fistpll
mov
mov
push
or
add
and
jmp
push
in
mov
stos
dec
dec
pop
dec
inc
filds
jp
lods
sbb
inc
shrl
std
sub
popf
xor
inc
test
add
dec
lods
mov
in
nop
cli
dec
testl
js
lock
sahf
mov
scas
add
rol
push
add
negb
xor
stos
cmp
xor
xlat
jmp
adc
mov
das
mov
mov
push
popf
and
or
add
pop
xchg
test
add
inc
subl
imul
add
sbb
sub
dec
jp
add
adc
arpl
add
aad
enter
cs
fnstenv
mov
mov
and
outsl
cmc
mov
xorl
cli
in
repnz
in
addr16
shll
dec
or
add
data16
dec
aad
jmp
lret
call
pop
push
pop
stos
xchg
fadd
das
sub
add
out
or
sarl
push
jg
dec
jmp
scas
push
mov
add
add
daa
das
jno
inc
cmp
jnp
les
add
push
xchg
roll
xor
hlt
add
or
jge
add
cmpsb
sbb
cmp
pop
add
mov
pop
aam
addr16
stos
pop
nop
lods
je
in
shrl
sub
add
je
adc
xor
add
out
enter
popf
pop
adc
add
stos
fdivrl
pop
and
js
ficoms
cmpsl
aaa
and
div
mov
jg
cmpsb
adc
inc
pop
add
push
ret
xor
mov
jmp
cmp
test
imul
int
xchg
mov
test
or
add
hlt
pop
xor
push
enter
cmp
outsb
add
mov
xorl
mov
xchg
xchg
add
popf
andb
dec
dec
fiadds
add
dec
pop
mov
scas
stos
pop
adc
repz
daa
adc
push
push
add
dec
jbe
je
dec
mov
test
insl
mov
jbe
or
scas
in
fldl
add
jnp
sub
xor
roll
add
addr16
or
and
imul
rcr
pop
mov
add
mov
fs
int
je
addps
cli
mov
cmp
sub
mov
or
hlt
cmp
sbb
mov
sub
add
sub
insl
jle
outsl
sub
and
sbb
add
add
sub
and
inc
movb
dec
lods
pop
repnz
rcl
adc
sbb
push
dec
jg
jle
add
add
call
pop
xchg
mov
int3
pop
add
test
add
mov
xchg
in
ret
lods
enter
in
add
outsl
mov
rol
and
add
aaa
dec
cmpsb
stos
xor
and
add
outsl
loop
dec
cwtl
mov
cmp
pop
push
add
add
lcall
fldl
add
inc
and
push
stos
loopne
enter
test
jno
add
cmp
jo
cmpl
ret
adc
mov
cmp
mov
dec
insb
add
test
mov
add
mov
sbb
lods
push
fwait
mov
add
pushf
fcmovb
xor
xchg
insl
mov
add
andb
js
cltd
sti
pop
arpl
sahf
jb
xor
push
add
or
and
add
add
xorb
lock
cmpsb
mov
insb
push
or
add
xor
adc
xchg
sahf
pop
dec
lcall
pusha
int
adc
pop
xor
lock
mov
xor
add
testb
push
insb
push
pop
xchg
movsb
dec
jp
add
mov
add
sub
dec
pop
bound
out
cwtl
addr16
enter
ret
fdivrp
je
dec
int
or
ljmp
add
xchg
repnz
sbb
adc
add
add
push
add
std
or
add
pop
mov
jge
sbb
mov
and
setno
or
loopne
mov
jnp
xchg
xor
add
popa
cmp
roll
add
test
add
or
pop
aas
mov
sbb
dec
in
fstl
test
inc
int3
cli
add
xor
add
add
stos
std
inc
lret
iret
sbb
bound
sti
jecxz
sub
push
add
cltd
sub
jnp
popf
mov
fistpll
inc
push
repnz
dec
inc
xchg
loope
shl
cmc
nop
sbb
xchg
mov
icebp
jno
push
fs
mov
pop
rcl
add
add
cmc
inc
pushl
test
jg
ljmp
std
mov
xchg
adc
test
cmp
cmc
fsub
jg
jo
cmp
add
loop
ret
cltd
out
mov
ds
dec
mov
mov
inc
mov
xchg
or
xor
outsb
jmp
mov
jge
mov
pop
pop
lcall
dec
shll
push
cmp
sbb
adc
sub
int
push
xchg
jno
add
add
mov
sbb
inc
mov
fxch
add
cmc
cmpsb
dec
nop
imul
adc
xor
jne
lahf
jl
outsb
repz
aaa
add
and
stos
and
mov
popf
dec
ljmp
xchg
inc
or
add
and
andl
inc
bound
lea
xchg
fsts
dec
sub
in
repnz
dec
add
popa
cmp
aam
dec
into
add
mov
inc
pop
add
faddl
add
dec
clc
adc
xchg
push
imul
js
adc
mov
mov
cmpsl
pop
rolb
adc
add
add
sub
rcrb
cld
nop
jb
dec
stos
add
jg
sub
aas
sub
popf
mov
outsl
mov
adc
jg
shll
iret
mov
lcall
cmpsb
scas
mov
sahf
sub
ret
mov
add
jp
scas
pop
inc
push
mov
sbb
fucomip
push
xor
stc
movsl
movsb
jg
popf
jmp
lcall
mov
add
aam
mov
out
pop
jnp
in
je
loopne
repnz
jmp
shll
jb
loopne
stos
je
dec
shll
mov
in
std
sbb
stos
sub
adc
mov
mov
push
mov
add
cltd
daa
mov
add
decl
add
or
dec
xor
add
add
xchg
lds
leave
je
push
sbb
icebp
mov
add
cld
in
jns
rcr
add
mov
mov
add
repnz
push
ljmp
sahf
pop
les
add
mov
lds
xchg
js
pop
aad
mov
xlat
and
pop
jno
xor
dec
ret
add
push
cmc
pop
sub
jmp
push
add
mov
hlt
imul
jp
sub
mov
and
cmp
mov
cmp
dec
push
add
mov
xchg
ret
test
add
xchg
int
pop
js
push
sub
stos
pushf
test
sub
rcr
inc
scas
add
sub
stc
add
test
push
mov
nop
xchg
int
inc
xor
xchg
pop
push
mov
push
fisubrs
fildl
add
shlb
leave
aam
fldenv
stos
push
js
mov
push
subb
push
pop
out
scas
cmpsl
lret
gs
xchg
cmp
test
sbb
sbb
add
nop
lcall
pop
pop
repz
push
sub
sbb
add
loop
ljmp
push
ret
je
jmp
xchg
loop
dec
jmp
mov
add
add
ja
cwtl
out
jbe
out
jnp
scas
pop
sub
add
push
packuswb
in
lret
dec
loope
inc
loop
ja
pop
sbb
or
add
mov
inc
or
sub
in
rolb
add
loope
js
pop
fwait
pop
lods
pop
ja
xor
cmpsb
adc
dec
cmp
fldenv
add
mov
xchg
add
pop
in
outsb
jb
insl
dec
and
add
cmpsl
test
aaa
inc
lret
inc
in
add
jb
imul
inc
jne
add
cltd
repz
xor
mov
cmpsb
js
ret
jne
dec
adc
mov
push
es
addb
sbb
das
cs
xchg
push
jle
sbb
lods
add
in
into
xchg
popf
xchg
inc
faddl
add
cld
rolb
out
fadds
add
sub
mov
pop
add
out
test
and
push
push
inc
in
mov
shl
std
add
or
and
lret
lahf
scas
mov
rclb
push
int3
mov
adc
jge
shll
sub
in
fnstsw
push
bound
add
loope
jl
pop
loopne
mov
pop
or
add
loop
jo
jmp
js
rcrl
add
add
push
imul
repnz
mov
dec
jbe
add
or
ret
add
mov
mov
jbe
xchg
push
lds
sti
mov
xchg
add
and
xchg
ret
aam
push
into
cmpsl
mov
add
ja
pop
inc
lea
pop
sub
in
test
add
clc
mov
sbbb
add
xchg
repz
scas
std
inc
push
add
ret
inc
xchg
add
scas
stos
cmp
cmpb
dec
adc
or
push
sbb
and
bound
jb
and
add
in
leave
add
sbb
add
sbb
or
add
gs
inc
aam
add
fidivl
hlt
popf
clc
push
add
pop
call
push
sahf
rclb
aad
addl
nop
in
aam
add
add
cmp
adc
mov
pop
push
fucomp
cmp
push
inc
and
push
jns
cmpsl
jnp
sti
fmuls
lds
ss
push
push
clc
lahf
data16
dec
xor
cmpl
add
add
test
cltd
sbb
dec
bound
push
sti
mov
xchg
sbb
pop
in
imul
sub
sbb
filds
add
test
mov
enter
rorl
mov
or
add
jbe
jbe
add
movsl
lds
inc
test
es
test
mov
add
push
jge
ret
cmp
mov
pushf
icebp
xchg
pop
adc
test
dec
lret
xor
push
icebp
jp
outsl
shl
mov
add
test
mov
add
cmp
adc
fsubrp
mov
fsubl
icebp
xlat
lret
loope
je
loop
enter
testb
add
cmp
add
xor
add
push
push
adc
insl
loope
push
inc
jbe
sub
repz
and
mov
push
fadds
add
mov
arpl
fistps
sbb
jno
scas
lea
in
stc
jbe
sti
sub
or
add
fwait
pop
pop
lahf
hlt
jle
fadd
int
andb
outsb
add
xchg
fwait
cmc
push
cmp
mov
sub
add
dec
out
add
add
add
and
mov
lret
cmp
repz
mov
sti
or
sub
mov
cmpsb
nop
mov
and
mov
mov
inc
outsb
outsl
adc
dec
sti
dec
popf
add
sub
mov
add
daa
movsl
int3
sub
add
xchg
gs
jo
adc
xchg
or
cwtl
xor
jge
clc
ret
mov
jg
fmul
inc
add
sbb
add
jbe
add
add
fwait
mov
xchg
add
jns
rcl
add
aam
mov
pop
add
sahf
sbb
sub
fwait
xor
add
cmp
adc
mov
add
xlat
dec
jb
add
push
out
jmp
pop
leave
inc
sub
or
mov
notb
add
das
jmp
add
sbb
outsl
push
dec
imull
pop
rcrb
mov
or
xor
add
add
push
mov
fcom
and
pop
adc
fldcw
inc
aad
negl
ret
add
inc
shlb
add
xchg
jno
adc
push
lods
vpshufhw
pusha
test
add
or
and
lcall
or
in
in
sbb
jno
inc
adc
es
repz
ss
sti
cmp
push
cmp
dec
mov
sbb
cmpsl
jbe
adc
sqrtps
jbe
push
or
add
pop
loopne
and
pusha
test
pop
and
leave
arpl
fwait
int3
push
add
inc
mov
or
add
sub
int3
push
add
leave
sbbb
gs
icebp
add
pop
inc
cmpsb
test
add
inc
in
sbb
mov
lods
rcrb
sub
cld
dec
jae
and
mov
into
dec
or
add
outsb
pop
out
call
iret
jb
jg
add
dec
lods
cmp
ror
aas
and
cwtl
add
add
mov
add
lds
or
clc
loop
push
add
jg
mov
jge
scas
mov
aam
mov
adc
mov
cwtl
add
inc
ss
sub
xchg
lret
dec
je
loope
cmc
clc
sbb
pop
push
pop
inc
cli
xchg
sahf
in
mov
loop
mov
shll
xlat
cmp
in
sbb
sbb
lea
les
inc
pop
add
andb
add
lods
xor
add
jo
xchg
add
mov
mov
leave
rcrb
jae
xchg
add
dec
jns
jo
cmp
mov
aaa
mov
sbb
dec
lods
inc
ror
gs
inc
sbb
xchg
add
jp
dec
out
adc
aaa
sti
mov
outsl
jbe
mov
stc
cmp
lret
add
jnp
pop
mov
mov
cwtl
dec
jno
add
mov
add
pop
mov
add
gs
mov
repz
push
mov
ror
push
add
repnz
add
inc
sub
sub
lds
add
sti
fistps
add
shlb
add
mov
add
lret
add
por
out
test
repz
dec
movsl
add
add
stos
dec
lahf
sbb
jecxz
add
sub
sbb
add
cmp
mov
xchg
into
pop
xlat
movsb
jb
loope
jno
mov
cmp
fldl
jge
mov
repz
sbb
dec
cmpsb
add
mov
orb
add
add
xor
shlb
mov
in
fcmovb
test
add
mov
minps
loop
add
add
or
add
and
sar
add
and
add
mov
push
sbb
mov
mov
sti
push
rclb
add
pop
mov
and
mov
cvtpi2ps
add
aaa
cs
xchg
dec
mov
into
xchg
push
xchg
mov
xchg
mov
cmp
scas
gs
sub
jae
inc
cmpsb
test
cmc
or
sbb
add
leave
shrb
sldt
mov
mov
add
sbb
xor
mul
cmp
mov
add
decb
orl
pusha
add
xchg
add
jl
cld
ret
xor
sahf
mov
icebp
mov
lret
or
add
dec
jl,pt
flds
mov
pop
dec
imul
inc
push
in
xor
mov
std
xor
add
jbe
mov
mov
add
jb
mov
dec
js,pn
pop
fndisi(8087
sub
mull
sbb
jnp
xlat
mov
add
pop
jmp
push
sti
scas
lods
ja
pop
push
mov
sbb
mov
add
xchg
popa
call
dec
push
add
cld
xor
pop
test
outsl
adc
jns
into
or
jmp
pop
fs
jp
lcall
shld
mov
dec
nop
sub
loopne
leave
and
xchg
pop
movsl
cmp
inc
iret
add
mov
inc
add
jp
jge
addl
cmp
adc
or
xchg
sub
pop
aad
pop
pusha
cmpsl
sub
mov
sub
xchg
mov
cmp
mov
lahf
adc
add
fisttpl
nop
ss
sub
inc
push
pop
adc
fidivrs
les
add
clc
adc
pop
mov
out
pop
cmp
push
pop
push
xor
mov
les
add
add
in
xchg
mov
add
add
cltd
jge
aas
mov
mov
cli
cmovge
lahf
xor
xlat
mov
divps
cli
push
loopne
pop
add
mov
xchg
jno
pop
in
adcb
jb
add
popl
cmpl
mov
fidivrs
xor
dec
shll
xor
sbb
cmp
repnz
repz
mov
hlt
add
les
add
inc
outsl
sub
inc
mov
mov
inc
lret
or
add
decl
lret
hlt
xchg
pop
push
les
outsb
xor
mov
fldl2t
outsb
mov
pop
sub
jmp
jmp
sbb
in
xorl
and
imul
pop
pop
jle
jb
shr
sbb
iret
push
pop
ja
cld
mov
mov
or
add
cmpsb
and
inc
add
xchg
mov
imul
and
outsl
mov
add
and
push
add
add
aad
out
jo
push
mov
addr16
sub
pop
pop
popa
jmp
and
inc
nop
pusha
ljmp
push
and
push
adc
sub
in
sub
add
pop
add
add
push
aam
mov
xor
test
and
test
add
mov
add
xchg
adc
add
stos
xor
add
pop
in
jle
adc
and
or
add
and
negb
xor
cmp
jnp
push
in
push
adc
jecxz
add
add
mov
out
inc
in
fstl
outsb
jo
dec
stos
add
cmpsl
jne
dec
sbb
gs
mov
xlat
pop
push
lea
dec
mov
fwait
and
sub
mov
mov
sti
cmp
rorl
pop
test
cmpb
inc
rclb
and
push
sarb
mov
and
and
xchg
scas
out
mov
lcall
idivb
jmp
in
cmp
addl
clc
loope
dec
imul
std
jp
or
add
stos
lods
in
roll
push
xchg
stos
add
push
pop
or
add
scas
movsl
xor
add
adc
sub
add
lret
iret
add
scas
mov
add
repz
std
inc
add
add
jg
or
add
cmc
sbb
aaa
rolb
add
xchg
pop
andb
ficoml
sub
fldcw
or
outsb
les
std
test
add
add
out
data16
das
cld
sahf
xor
cld
mov
cltd
shll
add
xchg
push
fisttpll
sub
add
sar
mov
negb
testl
fiaddl
add
cmp
pop
push
xorl
out
lea
sub
cmp
inc
fldln2
pop
mov
sbb
test
add
repz
push
adc
push
add
xchg
mov
push
xchg
mov
add
or
add
sub
negl
and
std
ds
xor
pop
sub
sbb
inc
into
cmp
and
pop
iret
mov
inc
ss
cmp
sbb
call
push
sub
jle
orb
push
pop
aas
xchg
jle
add
loopne
ret
sbb
fcoml
add
add
test
jno
adc
subl
cmp
jl
out
mov
add
ja
movl
sti
cmp
call
cmpsb
pop
sbb
mov
push
mov
add
add
sbb
add
xlat
xor
pop
fldt
icebp
loop
mov
push
jle
xchg
inc
ja
mov
add
mov
pop
stos
inc
test
sub
cmp
add
in
sbb
adc
xchg
lahf
cli
outsl
or
add
push
in
xor
cmp
and
icebp
in
mov
popa
xchg
in
sbb
data16
or
lcall
insb
cmp
jns
lea
insl
jecxz
push
fdiv
call
jbe
pusha
pop
call
mov
add
adc
addl
sbb
push
nop
push
gs
lahf
cltd
jp
nop
dec
mov
pop
sbb
push
mov
mov
cltd
repnz
pusha
add
push
imul
jl
popa
arpl
xchg
and
or
push
or
xchg
lods
lea
movsb
nop
jbe
pushf
gs
ret
mov
add
cld
sbb
xchg
add
gs
loope
sbb
ja
and
and
pop
sbb
push
add
or
insl
cs
int3
cmp
add
enterw
in
jae
test
cltd
clc
lea
ljmp
repnz
add
pop
subl
loopne
das
add
cltd
jmp
mov
add
inc
add
dec
test
loopne
mov
addb
mov
pop
xor
jp
iret
aas
and
dec
cli
sbb
adc
sbb
mov
testl
faddl
push
mov
xlat
add
dec
scas
add
push
xorl
stc
add
sub
mov
lret
xor
sbb
imul
scas
adc
out
inc
gs
pop
nop
push
and
ljmp
jo
add
xor
add
sbb
stos
ja
mov
push
inc
jae
outsb
dec
call
adc
add
cmp
push
sub
cmp
fwait
loop
pushf
inc
lahf
mov
scas
add
pusha
jno
outsl
inc
sbb
add
cltd
pop
mov
adc
push
add
popf
xchg
cmpsb
nop
ret
lcall
add
lret
test
add
sahf
sub
add
add
xchg
jb
mov
add
testb
add
xor
sub
jbe
jae
mov
fisubl
xchg
and
mov
sbb
xchg
jmp
mov
add
add
jl
xchg
add
add
jge
scas
test
daa
icebp
out
lret
jge
enter
and
cmp
pop
or
insl
pusha
jb
dec
std
inc
add
add
pop
xor
lcall
pop
inc
sub
add
ss
pop
or
add
ss
xchg
cs
add
sti
xor
or
cmc
push
push
sub
and
push
push
in
adc
add
ja
out
jmp
gs
and
inc
add
add
cmc
stos
movsl
push
or
add
dec
lock
enter
test
repnz
add
into
insl
imul
mov
outsb
dec
nop
stos
mov
xchg
pop
cltd
stos
aam
or
add
movsl
aad
outsl
pop
les
push
push
insb
pop
addl
dec
call
inc
add
dec
lea
add
test
out
mull
cmpsb
repnz
mov
movsl
out
es
lea
jbe
outsb
into
icebp
addr16
ss
add
pop
push
inc
mov
mov
inc
in
ja
inc
xor
dec
inc
in
cwtl
roll
add
or
add
iret
mov
mov
jg
adc
add
add
xchg
pop
jbe
call
add
dec
in
add
out
mov
add
testb
xchg
adc
jne
pop
mov
add
add
jmp
xchg
push
and
mov
and
jns
jno
mov
lods
adc
xchg
add
add
jbe
rolb
xchg
shl
add
dec
xchg
arpl
jae
add
inc
sub
and
add
add
lea
xchg
cmp
fs
mov
add
push
cs
nop
loopne
xorb
inc
les
add
push
add
add
add
filds
fwait
lds
lods
shl
push
add
mov
sub
repnz
push
jge
cmp
jns
bound
loopne
mov
add
sub
sti
dec
jae
inc
bound
add
xchg
dec
incb
add
inc
cmp
add
leave
jl
insl
jnp
repz
sub
fdivrs
pop
in
movsl
or
inc
jns
push
aad
add
add
test
sub
mov
mov
mov
pop
push
mov
int
inc
mov
add
push
jns
scas
movsb
adc
jmp
adc
jmp
and
jae
lret
add
add
pusha
jnp
daa
and
cmp
xlat
inc
adc
add
dec
add
mov
out
pop
xchg
dec
jnp
xchg
lods
lcall
sbb
add
sub
out
and
aad
lds
xchg
add
add
xchg
popa
outsb
dec
out
jne
add
lcall
aad
dec
cmp
jmp
fstps
jne
pop
dec
stos
mov
mov
dec
lea
add
or
add
ret
add
dec
in
popf
je
pop
add
imul
add
push
std
push
sbb
add
fldl
lahf
scas
bound
xchg
cmp
xchg
and
adc
mov
push
mov
pusha
and
mov
into
popa
jo
and
add
