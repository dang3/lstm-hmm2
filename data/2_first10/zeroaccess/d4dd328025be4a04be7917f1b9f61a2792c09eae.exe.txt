push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
dec
pop
xchg
jecxz
mov
mov
xchg
push
ds
xchg
mov
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
movsb
mov
jnp
cmp
push
cmp
ret
cmp
sbb
inc
push
lret
mov
jp
adc
fwait
mov
dec
test
stc
fisubl
daa
adc
or
cwtl
xchg
mov
lcall
ret
fiadds
arpl
xlat
fadd
xchg
or
jnp
xlat
lock
in
inc
fcompl
out
imul
xchg
cltd
hlt
jle
jnp
mov
out
into
in
loopne
loop
lret
xchg
jl
xchg
cli
sbb
and
aas
fidivrs
xor
scas
nop
leave
xchg
pop
repnz
adc
mov
fwait
pop
mov
xchg
sub
cli
lret
dec
fmull
push
and
aaa
loop
lcall
je
pusha
or
movsb
pop
les
fisttpl
int
mov
mov
sbb
je
adc
outsl
mov
mov
fwait
sbb
xchg
sbb
mov
cli
adc
mov
cmpsb
pop
push
xchg
push
lret
sbb
jl
fiadds
xor
shll
adc
xor
je
cs
add
xchg
loop
hlt
sbb
insl
rolb
mov
inc
hlt
mov
xchg
test
mov
inc
add
ret
test
js
mov
sbb
and
xchg
or
mov
ljmp
cmp
clc
xor
dec
pop
aaa
jp
ja
mov
ficomps
negl
inc
test
push
in
cmp
gs
stc
xor
icebp
xchg
fcomip
pop
or
jl
jne
ret
punpcklbw
add
add
pop
jle
cld
jmp
clc
mov
push
fbstp
mov
dec
stc
push
das
js
enter
outsb
out
xchg
xchg
cmp
inc
or
gs
pusha
outsl
xor
incl
cmp
inc
inc
push
data16
xor
xor
insl
aad
jns
mov
arpl
hlt
aas
ret
pop
maskmovq
testl
gs
mov
push
dec
and
dec
mov
aam
lret
push
mov
cmpb
inc
jg
push
push
movsb
push
mov
push
imul
das
xor
jmp
das
cmpl
movsb
vshufps
cwtl
mov
sbbb
rcr
add
add
popl
fs
ror
ja
sbb
inc
jge
rcl
mov
or
xchg
cmp
add
cmp
pop
push
sub
insl
fdivrs
movsb
ficomps
add
ds
in
jge
jbe
aam
les
xchg
fnstenv
dec
fucomip
jnp
fsub
jno
cs
jmp
and
sub
repnz
dec
ss
jbe
and
fsubrl
test
xchg
ret
and
in
push
aam
in
sub
xchg
pop
xor
rcrl
popa
mov
jp
repz
mov
pop
je
rorb
roll
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
xchg
jg
or
xchg
loope
jp
das
inc
push
bswap
das
insl
add
add
int3
jmp
mov
xor
cmp
lods
mov
push
les
scas
push
fimuls
fwait
mov
ret
add
sub
movsb
add
mov
loopne
pop
sub
pop
and
loopne
fcomps
mov
or
jmp
jle
jge
out
inc
sbb
lea
fisubrs
inc
sahf
jb
or
jl
cmp
pop
mov
mov
in
dec
orl
insb
xor
or
jne
shlb
pop
add
mov
dec
test
hlt
pop
cmp
adc
daa
popa
xchg
lea
loop
insb
mov
stc
push
testl
pop
imul
jns
cli
movsb
sub
jg
inc
mov
jp
sar
sub
inc
or
aam
dec
lock
inc
mov
imul
or
fidivs
in
adc
insl
cli
lret
jg
and
sub
mov
ret
push
push
xlat
lea
scas
or
mov
push
fsubs
inc
pop
insl
sub
les
std
fld
fstl
and
adc
or
xlat
ja
xchg
les
ja
cmp
aam
out
shl
sub
dec
test
pop
or
test
imul
clc
fstpl
lret
cmp
adc
sub
mov
popf
cmpsb
pusha
xchg
mov
loopne
cmp
mov
cmpsb
adc
xor
jecxz
mov
dec
mov
xchg
insb
jg
pop
sbb
sub
flds
mov
sti
jns
push
mov
and
loope
ljmp
jno
out
jb
test
jae
cmp
jns
call
mov
and
mov
add
ja
inc
lret
inc
repnz
jb
jo
in
daa
mov
imul
or
cld
dec
or
lcall
cmpsl
into
dec
sti
push
mov
daa
loope
mov
sub
cmpl
jg
sub
xor
xlat
cmp
out
je
dec
mov
cmp
bound
ret
pop
mov
push
dec
idivb
mov
ret
jbe
add
dec
test
gs
fs
sbb
mov
sub
push
pop
xchg
adc
adcl
cs
shll
pop
mov
shlb
lods
xor
fisubrs
jp
jne
popa
mov
push
mov
cmpsb
mov
clc
xor
fnsave
in
adc
and
or
punpckhdq
push
push
fiadds
mov
xchg
jns
pop
jnp
icebp
addr16
mov
mov
dec
mov
adc
and
enter
cld
cli
adc
pop
mov
out
fwait
out
push
flds
ror
pop
mov
adc
lock
mov
sbb
clc
addb
pop
and
cmpsl
xchg
aaa
or
inc
xchg
cmp
or
nop
dec
sbb
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
sahf
mov
les
mov
cmpsb
jne
cmp
hlt
shl
xchg
or
pop
inc
cwtl
inc
addb
pop
inc
mov
and
cltd
inc
outsl
rcl
pop
xor
repz
or
in
insb
adcb
sub
insb
aad
xchg
and
inc
scas
cmc
inc
pop
sbb
jnp
addr16
inc
js
jne
ds
in
jp
dec
jmp
out
push
xor
arpl
pop
and
lods
xchg
mull
mov
iret
xchg
and
mov
cmp
inc
loope
pusha
test
sbb
mov
push
repnz
push
lcall
pop
cmc
stos
mov
jge
icebp
and
outsb
pop
mov
int
dec
scas
sub
xchg
push
and
dec
stc
jl
mov
jmp
mov
movzwl
in
sub
lret
mov
out
mov
mov
mov
mov
and
sub
aad
xchg
xchg
xor
push
mov
mov
popa
out
lret
dec
in
mov
jle
in
fldt
inc
jo
mov
add
jl
add
outsl
inc
iret
or
xor
fisttpll
pop
pop
xchg
jle
xchg
scas
out
sub
and
mov
add
sub
lret
or
mov
shl
mov
dec
mov
push
mov
shrl
dec
push
jmp
je
sbb
xor
mov
rol
insl
test
gs
gs
mov
pop
psllq
add
add
mov
int3
inc
test
inc
pop
out
mov
mov
stc
negb
mov
das
cwtl
jno
push
scas
mov
rorb
dec
test
mov
fnstsw
je
sub
jl
scas
inc
insb
cmc
sbb
xor
or
inc
fcomps
lret
mov
xor
fldenv
fcmove
js
pop
pop
aad
cmpl
or
xor
xchg
mov
lret
xchg
std
ljmp
rcr
ret
test
stos
push
ja
scas
or
mov
xchg
mov
iret
jnp
sbb
pop
in
inc
int
inc
pop
insb
shl
add
shrb
loope
jno
movsb
or
es
movsb
push
popa
roll
dec
es
jmp
out
sbb
add
int3
call
push
and
movups
lea
mov
aas
es
out
cs
cmp
icebp
push
sub
cmc
movsl
xchg
outsl
stc
add
push
imul
dec
ss
pop
je
jmp
adc
xor
imul
mov
and
xor
xchg
xchg
loope
pop
lcall
xchg
mov
cltd
out
lret
adc
adc
imul
xor
jae
addr16
jo
std
lds
das
or
jae
push
rcrb
aad
push
adc
xchg
push
sub
test
add
sub
lret
orb
lahf
mov
insb
mov
hlt
and
xor
and
xor
cltd
mov
or
xor
dec
mov
hlt
add
faddl
sti
nop
movl
movl
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
jbe
out
mov
les
xchg
out
adc
jo
faddp
mov
mov
fs
movsb
pop
push
inc
mov
jecxz
mov
ds
scas
xor
lcall
xchg
insb
adc
inc
sbb
sub
dec
mov
mov
fsubs
add
or
mov
jle
fidivl
clc
cmc
test
sbb
dec
xchg
push
leave
cmpsl
negb
test
sub
and
and
mov
hlt
sbb
andb
push
cmp
sbb
add
hlt
ucomiss
jo
mov
inc
fisttpll
in
inc
popf
repz
fucom
nop
lret
flds
mov
sbbl
daa
push
movsb
ds
stos
pop
pop
popf
hlt
fnstcw
mov
or
mov
push
pop
lods
sub
adc
adc
rcl
add
pushf
dec
enter
inc
loope
lahf
cmp
xchg
popa
sbb
cltd
out
test
insl
adc
or
sahf
cmc
adc
jmp
ret
jne
mov
pop
out
xchg
ret
or
shl
adc
lds
lods
popa
lods
jecxz
fmul
jo
adcl
shrl
sti
cmpsl
sub
fsub
push
stos
and
mov
mov
push
aam
aad
jg
rolb
shrl
pusha
push
outsl
out
jmp
fstl
clc
cmp
lods
dec
mov
imul
aas
rolb
insb
pop
cwtl
adc
cmpsl
gs
pop
cmpsb
sbb
adc
pop
jae
sub
inc
sub
adc
sbb
mov
cmp
fstpt
movsb
arpl
pop
mov
pop
pop
or
jne
sbb
fidivrl
bound
xchg
push
push
in
jl
aad
sti
hlt
enter
push
fcoms
fcomps
xor
xor
mov
pop
mov
into
jecxz
negl
mov
outsb
sar
ja
lods
aaa
js
mov
lods
and
into
push
test
add
das
push
imul
push
push
dec
enter
xor
push
mov
and
getsec
fisttpll
push
ds
and
xor
imul
jb
mov
lock
mov
fsubr
inc
add
retw
loope
fcomps
les
xchg
push
xor
in
adc
int3
lock
mov
movsl
or
push
inc
arpl
popa
adc
cltd
inc
adc
xlat
sbbl
jno
push
daa
xor
dec
out
cmp
int3
hlt
ss
mov
mov
aaa
icebp
xor
shlb
iret
adc
inc
rcrb
repz
push
or
and
iret
ret
mov
lahf
jp
es
inc
pop
enter
ds
push
iret
cld
xor
dec
and
push
mov
mov
cmp
ret
xor
lods
inc
pusha
adc
lea
in
push
lods
inc
pushf
pop
mov
sti
jge
mov
push
das
push
mov
sbb
xor
leave
jo
ret
mov
and
imul
sub
and
dec
iret
mov
xor
aad
mov
cmp
daa
je
outsb
xor
push
fsubrp
or
dec
push
sbbl
call
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
addr16
adc
mov
mov
dec
test
jne
xor
inc
jecxz
xchg
jl
popa
push
add
hlt
pushf
cmp
jbe
scas
ljmp
pusha
mov
adc
pop
xchg
mov
subb
andb
ret
jecxz
mov
loopne
adc
shll
scas
jecxz
mov
jnp
inc
lea
inc
dec
push
in
pusha
sahf
ja
fwait
shl
mov
or
inc
test
aam
inc
push
test
cltd
or
cld
or
cmpb
rcr
popf
mov
testb
andb
mov
shl
inc
inc
jne
sub
sbb
dec
ret
hlt
popa
icebp
xor
dec
movsb
mov
sti
clc
xchg
add
aas
pop
cmp
xchg
pop
imul
sahf
mov
ds
sbb
and
xor
sbb
push
fldcw
lods
lahf
xchg
inc
ja
and
pop
incb
adc
lret
jl
push
bound
cwtl
aam
dec
aam
lds
ret
insl
jbe
movsl
jb
pop
dec
jbe
lret
push
mov
mov
mov
popf
les
mov
sbb
mov
push
and
jae
sti
pop
test
sbb
adc
fsubs
jno
cltd
lcall
loopne
jne
mov
vmovntps
cmp
pop
mov
xchg
jo
push
pop
pop
jo
and
fiaddl
stos
inc
stos
ucomiss
inc
xorl
xor
lods
int3
ss
inc
jne
mov
imul
cmp
gs
movl
mov
mov
push
inc
or
lods
rcr
das
pushl
fisubs
ljmp
in
and
xor
negb
int
into
out
je
ret
rcrl
sarl
ljmp
pop
psubb
mov
scas
clts
inc
mov
cmpsl
cmpsl
pop
jmp
in
sub
lods
into
or
aaa
jno
pushf
mov
cmp
out
in
pop
out
ret
cmp
enter
adc
cmp
in
ret
mov
add
fs
jo
lahf
xchg
adc
pop
jne
sti
inc
aaa
lret
sbb
push
loope
cmc
arpl
leave
stos
push
and
sbb
sub
je
mov
xlat
data16
adc
mov
jp
push
cmpl
adc
cmp
cwtl
test
pop
pushf
jbe
mov
jns
shr
or
add
and
aaa
and
ret
das
dec
cwtl
ja
ljmp
dec
cmp
mov
xor
gs
xchg
mov
sbb
ficoml
mov
sbb
add
insl
int
mov
test
inc
inc
cmpsb
call
lock
ret
mov
sbb
fwait
add
loopne
mov
std
sbb
insb
daa
jo
jnp
xchg
xor
sbb
push
xchg
adc
roll
mov
mov
int
push
or
or
mov
vmovdqa
jmp
and
stc
outsb
in
imul
mov
mov
fsubr
sbb
pusha
sbb
loopne
push
push
sarb
xchg
dec
xchg
push
pusha
rcll
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
jbe
stos
jecxz
loopne
mov
jbe
js
sarb
and
adc
inc
add
das
mov
es
pop
dec
das
les
je
loop
popf
arpl
scas
repnz
xorb
pop
mov
adc
jo
icebp
jo
cwtl
aam
imul
test
adc
mov
mov
push
and
pop
mov
cwtl
cmp
repz
ds
movsb
fistpl
sbb
push
lret
jo
sbb
dec
addr16
jle
cltd
repz
fwait
clc
mov
jo
lods
cltd
mov
cmp
in
jecxz
sbb
out
lret
nop
adc
jb
div
stos
mov
xchg
xor
or
cs
loop
imul
bound
mov
enter
loopne
stos
aad
pop
sbb
adc
leave
xchg
das
sub
inc
lods
test
push
neg
jecxz
fld
in
ss
cwtl
loope
test
out
push
hlt
mov
in
mov
jne
stc
popf
jp
xchg
jb
xchg
adc
loopne
adc
pop
sti
mov
mov
jl
sub
push
lock
cmp
jnp
push
loopne
fs
sbb
icebp
int
cld
cs
addr16
dec
out
dec
add
and
xchg
mov
pop
mov
mov
mov
out
cmpb
mov
int3
or
rorl
jge
shr
mov
rorl
jne
jno
sbb
xor
pop
xchg
sub
inc
pusha
gs
jnp
dec
in
ljmp
shll
add
leave
in
hlt
adc
addb
mov
jbe
loope
out
jmp
pop
sbb
xorl
loope
mov
pusha
mov
inc
or
mov
lcall
xchg
xchg
add
cmp
lret
negl
mov
xor
out
xchg
jno
cmp
inc
jge
popa
push
jge
jle
mov
jecxz
aaa
jl
adcb
scas
cmp
rcrb
jg
mov
les
push
xchg
or
enter
and
pop
dec
add
lds
sub
xchg
sub
das
jb
fiadds
xlat
mov
mov
jp
es
andl
lea
es
out
jns
mov
push
loopne
cmp
pushf
js
pop
jecxz
std
loopne
jge
xchg
or
call
and
sbb
cmp
push
sahf
mov
cli
fisttps
cmp
pop
mov
adc
pop
jle
movsl
xor
xor
mov
mov
icebp
push
pop
fbld
inc
lock
push
fdivrs
imul
insb
pusha
adc
xchg
pushl
cmp
push
push
inc
aam
sti
xor
das
inc
neg
cmp
jp
inc
inc
xchg
fdivp
in
test
mov
push
mov
and
sahf
add
inc
lcall
and
aas
dec
stc
enter
mov
pop
cli
in
jmp
je
aam
outsb
call
imul
in
fcomps
fisubl
lret
test
out
mov
mov
pop
js
in
jl
lret
cmp
xchg
sbb
cmp
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fisttpll
lahf
cli
movsb
mov
les
xchg
xchg
push
sbb
out
push
dec
std
xchg
scas
adc
jno
xchg
push
mov
add
add
mov
or
cmpsb
fs
push
lcall
data16
das
ss
or
jns
and
cmp
shrl
lods
stos
iret
gs
ret
sbb
imulb
and
push
cmp
mov
pusha
push
sbb
subl
jae
repnz
pusha
scas
push
xor
xchg
in
or
push
test
iret
fmull
mov
adcl
adc
jo
inc
fdiv
mov
int3
push
mov
xor
ljmp
dec
jne
cmp
data16
sub
les
mov
push
movb
in
fadd
jne
adc
pop
or
pop
xchg
sbb
ret
int3
daa
outsl
cltd
jle
leave
ds
pop
loopne
sti
ja
jl
and
fadds
inc
jne
repnz
mov
pop
aam
flds
stc
push
mov
cmpsb
ret
mov
sub
fbstp
stc
inc
outsl
pop
xor
add
dec
jmp
mov
test
test
mov
les
mov
aaa
outsb
sub
das
les
ja
scas
xor
ret
orl
hlt
jne
cmp
and
mov
loop
test
mov
push
sbb
fdivrs
imul
add
sti
aas
imul
jne
and
into
pop
push
rol
pop
sbb
adcb
call
int
add
das
das
data16
outsl
mov
jmp
into
mov
xorl
jg
out
in
outsb
pop
ljmp
aam
adc
xchg
jmp
ret
add
push
out
ss
xorl
ljmp
std
lahf
outsb
dec
mov
test
xchg
stos
jg
jno
testb
mov
cmp
mov
add
ror
repz
push
mov
sub
pop
jbe
mull
dec
adc
cli
pushf
pop
push
or
adc
sbb
and
insb
pusha
mov
stc
cmp
inc
xchg
mov
outsl
inc
loope
out
dec
jl
xor
scas
push
mov
bound
jmp
inc
or
sbb
ret
adc
dec
and
adc
jmp
push
jnp
jnp
sub
pop
icebp
scas
cmp
shlb
jns
in
xchg
pop
dec
fmull
clc
gs
cmp
out
loopne
int3
clc
rcrl
in
xchg
cmp
dec
popf
icebp
jmp
and
add
xchg
sbb
mov
xor
leave
mov
fdivl
push
cs
xchg
cli
dec
adc
ss
xchg
pop
push
pop
imul
pushl
dec
andl
mov
push
xor
cmp
adc
xchg
ss
pushl
mov
aam
xor
push
xchg
jns
out
cltd
std
out
sbb
jne
adc
or
inc
lock
jne
jae
cs
and
cmc
sub
ja
pop
push
mov
sbb
sti
testb
popa
dec
es
das
xchg
pop
pop
popf
pushf
jmp
mov
imul
dec
adc
roll
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
std
pop
push
lret
out
iret
imul
repnz
hlt
pop
jne
cmp
popf
or
orb
pusha
aad
stos
mov
inc
xor
xchg
sbb
adc
xchg
dec
insb
adc
ja
add
hlt
pop
push
jecxz
loopne
jecxz
push
push
add
lret
loop
pop
out
add
pop
lods
sub
sub
dec
jae
out
dec
xchg
cltd
loopne
cmp
stos
scas
push
push
cmpsl
inc
orb
lahf
xlat
gs
test
lds
jl
push
jle
mov
sbb
cmp
pop
pop
sbb
aam
and
popf
movsl
leave
sub
dec
sar
es
push
shlb
sbb
mov
fldl
int
jns
xor
inc
aas
mov
sbb
sub
shrb
std
inc
mov
stc
push
ljmp
adc
aad
push
sub
je
dec
je
enter
push
stc
lret
cmp
dec
fcmovnu
scas
push
sahf
push
in
mov
lret
adc
nop
stos
pop
fsubrp
outsb
cs
out
stos
pop
mov
mov
adc
ja
cmp
mov
sub
mov
mov
lret
insb
jns
sub
inc
or
pop
rcr
mov
fnstsw
xor
push
roll
imul
int3
shll
or
push
mov
incl
loopne
jne
scas
jnp
cltd
mov
xchg
add
mov
pop
fistpll
daa
call
dec
xor
das
xchg
mov
ret
mov
sbb
dec
daa
mov
add
or
insb
xchg
sarl
and
cmp
mov
std
sub
aam
clc
repz
sbb
xchg
loope
lea
adcb
testb
out
sub
xchg
mov
rorb
notl
xor
xchg
mov
in
add
inc
into
add
popa
sahf
cld
add
or
subb
test
jbe
inc
cmp
fcoms
out
adc
push
cwtl
dec
add
jge
clc
add
pop
movsb
js
lcall
hlt
xlat
sbb
insb
push
out
mov
inc
jecxz
fs
mov
ret
xor
sbbl
pshufw
xor
call
adc
gs
ret
mov
mov
mov
jg
sbb
mov
insb
adc
dec
sti
mov
mov
adc
mov
push
scas
adc
scas
push
aas
xlat
idivb
fwait
js
cli
fcoms
mov
out
lea
outsl
mov
sti
cmpsl
cmc
pushf
and
mov
push
fidivl
call
dec
xor
mov
xchg
pop
cltd
xchg
xorl
mov
sbb
pop
xchg
hlt
mov
aam
mov
and
add
mov
and
dec
adc
dec
xchg
xor
shll
out
xchg
mov
shl
mov
mov
orl
inc
enter
in
mov
xchg
incb
xor
aaa
mov
mov
leave
ficoml
insl
dec
inc
into
test
push
ret
gs
jl
les
call
shr
movzwl
and
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
shll
cmc
mov
mov
out
xorb
sbb
mov
xchg
popa
cvttps2pi
pop
inc
mov
dec
fists
insb
mov
mov
push
push
mov
jns
incb
mov
mov
sub
adc
dec
pop
jne
add
sahf
push
cmp
jmp
out
popf
jae
and
jnp
sub
mov
sbb
test
add
imul
outsl
nop
fsubr
repz
jmp
aaa
pop
push
mov
in
test
jo
imull
pop
xchg
jmp
mov
xor
inc
out
fmulp
test
pop
cmp
xor
xor
cmpsl
lea
xlat
push
mov
lret
inc
sbb
inc
push
fmuls
cmp
sbb
dec
mov
lret
shll
inc
cmp
push
sub
mov
xor
movsb
xorl
shll
pop
inc
xlat
jmp
outsb
sbb
repnz
fcompl
mov
sub
and
fisubrl
imul
repz
add
cmp
test
lods
cmp
mov
adc
sahf
inc
xchg
mov
xor
enter
in
test
aas
sar
mov
inc
jmp
les
mov
fdivrl
mov
or
pop
pop
std
bound
mov
xor
sbb
icebp
into
xchg
psllq
test
mov
or
xlat
das
outsl
jne
mov
rcrl
push
jae
mov
cs
fmul
ficoml
jb
test
push
flds
adc
inc
pop
popa
xchg
nop
sub
mov
sub
fstps
xchg
xchg
adc
popf
fildl
in
jecxz
mov
fdivs
adc
testw
mov
sub
bound
dec
mov
xor
clc
fcompl
in
cmpsl
xchg
xor
ss
xor
xor
in
leave
out
aad
in
mov
dec
loop
jecxz
jp
sti
jns
xchg
sub
or
mov
mov
pop
adc
adc
pop
pop
aam
mov
dec
ja
mov
jnp
jae
les
pop
push
adc
fistpll
mov
inc
jne
mov
addr16
ds
into
and
test
jmp
mov
ret
pop
inc
dec
mov
ljmp
mov
in
xlat
inc
or
and
pop
inc
and
sbb
int
push
sbb
pop
loop
adc
into
add
fistl
daa
movsl
ljmp
mov
cwtl
push
dec
pushf
cs
cltd
in
pusha
int3
jle
ret
pop
dec
inc
pop
les
les
mov
cld
pop
sahf
inc
pop
xchg
push
mov
ss
xchg
inc
sti
push
cwtl
inc
shlb
xchg
fdivs
icebp
mov
mov
xor
shl
and
enter
xchg
sub
pop
dec
in
pop
popa
pop
push
fldenv
push
dec
sar
fcmovnu
sub
sarb
jno
fs
inc
cmc
inc
rcrl
pop
stc
mov
cmp
add
rol
add
jmp
add
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
push
add
sbb
jg
pop
enter
daa
mov
jl
mov
jmp
sbb
inc
pop
or
aaa
cmp
dec
test
add
scas
fstps
sbb
out
push
subl
icebp
pop
out
pop
and
cmp
call
adc
test
jecxz
fcomp
cmp
fidivs
and
cwtl
push
dec
dec
pop
es
dec
clc
xchg
mov
mov
fwait
sbb
mov
xlat
inc
or
lock
lret
cmpsb
jmp
lcall
cs
cmp
sbb
scas
jmp
mov
mov
rcrb
jmp
push
push
sub
stos
mov
mov
mov
cwtl
xor
cmp
pushf
pop
sbb
orl
and
dec
je
das
shll
dec
mov
sub
pop
movsl
and
sbbb
add
jbe
test
call
mov
add
loope
fsts
lds
out
jg
hlt
aas
inc
push
add
push
lahf
jecxz
cmp
and
xchg
dec
mov
cwtl
jp,pt
fcomps
loop
cwtl
pop
pop
popf
jns
mov
sahf
and
add
add
fstps
push
pop
and
cs
in
ret
ljmp
and
mov
std
nop
and
es
lea
int
lds
mov
inc
jne
fstpt
aaa
mov
std
xor
lret
cmpsl
push
mov
or
out
jnp
pop
movsb
inc
push
lret
out
sbb
int3
and
cmpsl
sbb
daa
xchg
push
pop
pop
idivl
fiadds
mov
lds
xor
jmp
les
into
adc
rcll
mov
mov
movsb
mov
jle
fs
dec
cs
add
imull
adc
pop
imul
lds
pop
xchg
jb
pop
in
lock
jl
cmp
xor
sbb
jcxz
cmpsb
push
adc
push
lret
add
dec
out
jl
test
jns
and
data16
push
icebp
in
mov
cmp
aad
mul
inc
ret
ljmp
pop
xor
outsb
jb
and
fwait
call
inc
dec
mov
test
xchg
lahf
mov
sbb
sti
jecxz
andl
xlat
ds
and
xchg
jo
or
and
cmp
pop
mov
sub
ja
daa
pushf
fwait
nopl
dec
inc
insl
adc
pushf
rol
dec
inc
inc
push
xor
adc
inc
and
sub
mov
and
xchg
or
xor
pop
fiadds
mov
xor
xchg
ja
xchg
enter
inc
sbb
mov
dec
push
mov
sub
sti
cmpsl
mov
mov
mov
lret
cmc
in
adc
mov
xchg
in
pop
jmp
insb
pop
lcall
gs
inc
mov
mov
mov
call
ljmp
add
and
bswap
xchg
sarl
and
lret
loop
movsl
sub
push
dec
fcoms
mov
fldenv
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
iret
push
mov
mov
inc
int3
mov
push
push
cltd
imul
push
inc
inc
or
xchg
loope
je
push
sub
shll
jnp
xchg
popf
aaa
lahf
jle
int
mov
xchg
or
adc
cmp
aad
repz
adc
lods
jp
or
lcall
lcall
aam
in
jns
ja
push
scas
repnz
aaa
lods
imul
int
es
cmpsb
sbb
xchg
sahf
jne
mov
xchg
add
jno
pop
fst
adc
fnsave
fidivl
xor
dec
xor
add
mov
cwtl
mov
stos
xchg
mov
push
shl
loop
popa
fwait
daa
mov
pushf
adc
lcall
add
xor
pop
les
lds
aad
add
ds
push
mov
cli
mov
iret
fsubr
xchg
cli
push
sub
rcll
sbb
sub
push
mov
xor
push
ret
outsb
movb
inc
test
sarl
and
push
pop
xorb
lds
daa
mov
jg
outsb
inc
mov
mov
cmp
shll
stc
xchg
jle
xchg
loope
fldl
or
pop
mov
cmc
mov
popa
or
popf
sar
inc
dec
popa
adc
in
out
push
mov
lods
lahf
test
xchg
dec
mov
xor
into
mov
xor
imul
pop
mov
add
push
outsl
jbe
lock
rclb
mov
pop
xlat
or
xchg
lret
pop
jecxz
mov
sbb
inc
fcomps
sti
mov
cmp
jmp
jmp
add
nop
cli
psadbw
push
enter
mov
pop
movsl
push
add
cltd
insb
jnp
sub
pusha
rcll
jge
jo
pushf
jbe
rclb
call
rclb
xor
inc
jecxz
bound
ljmp
mov
pop
push
inc
inc
arpl
mov
clc
sub
cwtl
push
dec
mov
scas
jmp
stos
inc
lret
out
jb
mov
in
imull
in
rcrb
jmp
into
into
xor
cmpsl
clc
into
jnp
aam
mov
std
out
sub
into
pusha
fwait
push
mov
rcrl
fimuls
xlat
and
pop
test
add
shlb
or
dec
mov
leave
ffree
std
dec
movsb
mov
push
push
mov
test
outsb
mov
icebp
xchg
mov
imul
cld
mov
sub
mov
roll
jbe
mov
pop
loop
xchg
inc
leave
insb
pusha
out
xchg
test
adc
add
mov
dec
dec
in
mov
insb
mov
or
sbb
lock
sahf
cmpsl
and
int3
aad
scas
jg
mov
cmp
sub
inc
sbb
sahf
loopne
mov
push
test
dec
sub
pop
fdivl
or
test
fistpl
push
out
or
mov
popa
mulb
popa
jge
subl
into
push
outsl
xor
pop
mov
arpl
js
ja
rol
jl
jbe
jg
sbb
cmc
mov
icebp
fdiv
ljmp
ret
add
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
jp
push
mov
les
fnstenv
inc
xlat
mov
cld
dec
mov
mov
mov
mov
or
mov
push
pop
inc
jb
aaa
dec
dec
outsb
or
ret
dec
cmp
sbb
std
jae
mov
push
pop
mov
dec
pop
xchg
fimull
jecxz
mov
or
mov
push
ret
fwait
scas
xor
inc
ljmp
sub
es
jne
testl
pop
fs
pop
in
lods
ja
sbb
and
mov
inc
daa
mov
mov
pop
inc
rcrb
in
out
icebp
faddl
mov
rorb
popf
call
hlt
loope
sub
cmp
cmp
cli
push
mov
xchg
ret
jecxz
xor
jne
fst
push
std
pushf
xchg
add
xor
mov
sub
inc
popa
movsb
mov
sub
inc
jae
pusha
adc
inc
dec
jb
jmp
outsl
pop
mov
jg
lods
push
lahf
idiv
cmp
pop
js
dec
sahf
sbb
jge
mov
mov
cmpsl
lcall
jne
in
and
jecxz
xorl
sbb
cltd
inc
pop
jns
sahf
xchg
dec
daa
repnz
mov
fisttpl
in
cmp
sbb
fnsave
int3
movsl
stos
add
fs
cmp
loopne
rcll
mov
sbb
dec
xor
imul
pop
push
lods
outsb
iret
push
inc
mov
divb
xchg
mov
fimuls
out
hlt
jno
je
imul
cmp
outsb
cmpsb
inc
outsb
or
cli
fwait
jmp
subl
lods
mov
inc
push
mov
icebp
xor
lret
mov
je
aaa
jecxz
in
call
cmp
out
cmp
stos
repz
lret
scas
cmp
repz
add
xchg
scas
jnp
and
shlb
rolb
or
lret
decb
orb
mov
outsb
adc
xor
shlb
adc
sub
imul
mov
rolb
and
jmp
cmp
push
mov
and
clc
dec
fwait
lock
lcall
inc
jbe
push
xorb
adc
push
sbb
and
push
dec
pushl
mov
push
mov
pushf
clc
pop
icebp
test
in
leave
int
sti
push
xchg
or
fcoms
sub
movl
jno
out
mov
push
xor
movsl
mov
cwtl
mov
imul
mov
outsl
xor
cmpsl
mov
add
aaa
adc
dec
inc
mov
add
fildl
xchg
jge
nop
repz
cmp
xchg
iret
mov
outsl
andb
add
test
pop
jbe
dec
addr16
add
fistpll
enter
mov
rcll
int
mov
mov
mov
mov
scas
pop
dec
shrl
je
sbb
jmp
cld
mov
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
mov
sarl
les
fldcw
shll
pop
stc
pop
adc
xchg
inc
adc
and
stos
cmc
out
lods
and
cmp
sahf
das
rclb
into
cld
xor
fists
imul
pushf
loope
push
pushf
xlat
fdiv
cmp
push
jns
test
std
sub
lea
in
icebp
stc
cmp
orl
fwait
mov
je
inc
ja
cmc
push
pop
jae
cmp
mov
imul
andb
sbbb
idivb
incl
mov
xchg
inc
in
popf
inc
loop
fs
outsb
mov
es
sub
jb
insl
or
sub
adc
cltd
cmc
shll
or
push
jecxz
dec
and
and
xor
sub
adc
lds
mov
fcomps
popf
xor
mov
lahf
push
ss
test
xchg
inc
scas
aas
jg
mov
into
xor
aad
mov
es
cmpsb
lods
rclb
xor
jecxz
pop
inc
outsl
popf
inc
pop
clc
cmpsl
pop
shld
das
cwtl
lret
xor
fs
int
xlat
inc
pop
mov
jne
mov
sbb
addl
stc
mov
push
je
xor
sti
ss
sar
fadds
jnp
lret
xor
adc
notl
ljmp
arpl
test
iret
add
sub
sbb
xchg
mov
xchg
pop
ss
xor
mov
adc
xchg
or
xorb
xor
push
inc
adc
or
loope
aam
into
into
mov
stos
mov
sub
test
push
jb
cld
cmp
pop
mov
stc
mov
sar
adc
cli
mov
pop
pop
pop
cli
lock
mov
jmp
sub
xor
pop
add
das
xor
cmpsb
rclb
mov
mov
xchg
dec
pushf
or
outsb
sub
loope
add
cmp
aam
xchg
in
pop
addr16
mov
mov
fucomi
adc
sbb
outsl
mov
dec
in
push
pop
jo
ljmp
dec
sbb
movsb
rolb
in
shl
and
dec
test
jnp
adc
cmp
push
test
xchg
ja
or
mov
nop
dec
sbb
inc
pop
xchg
insb
inc
insl
sub
mov
mov
mov
adc
push
fs
cltd
pushf
cmpsb
int3
mov
inc
adc
inc
sub
sbb
lret
mov
mov
jp
shll
xor
lcall
repnz
inc
cmp
inc
inc
fbstp
push
xchg
and
sbb
xchg
std
roll
fldl
in
cmc
xor
addr16
mov
mov
sbb
add
lock
or
stos
mov
test
das
sti
and
lds
in
push
or
ret
js
pop
cli
lods
je
popf
rclb
out
pop
mov
ja
loop
in
mov
pop
push
cmp
pop
sbb
cmp
xor
push
and
sbb
mov
sub
xlat
sub
push
hlt
mov
cmpsl
aas
xchg
cmpsb
xchg
mov
push
jp
ffreep
es
mov
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
aas
or
mov
adc
push
ret
mov
arpl
push
test
jl
jl
cld
data16
push
iret
jecxz
mov
mov
bound
mov
xor
jmp
adc
push
sbb
push
sar
jl
xchg
jno
mov
js,pt
scas
mov
jmp
clc
dec
fs
add
int3
pop
shrl
scas
inc
mov
fs
cwtl
add
pop
int3
cmp
and
fldenv
add
ja
test
pop
mov
inc
dec
sub
adc
push
int3
fnstenv
lcall
cmp
and
scas
insl
mov
clc
ljmp
clc
setae
mov
test
loope
xor
cmp
adc
testb
adc
add
dec
add
xor
pop
cmp
sub
push
and
pop
test
inc
in
les
aas
hlt
pop
push
sub
mov
xor
cli
ds
push
xor
sbb
xlat
sbb
dec
mov
jno
push
out
xor
xorl
out
cmp
dec
in
pop
and
and
push
int
cltd
inc
lret
sub
dec
xor
lret
cltd
or
ficomps
fsts
roll
loopne
adcb
xchg
mov
jbe
mov
notb
pop
es
mov
sbb
popa
fisubs
and
inc
lea
divb
dec
iret
dec
jp
stc
je
or
mov
dec
xchg
xor
xchg
sbb
outsb
xor
inc
jns
inc
je
arpl
or
push
cmp
daa
int3
or
inc
xchg
addr16
jne
adc
lock
iret
ja
movl
cmp
xchg
cmp
add
addr16
mov
add
int3
add
movsl
or
jp
mov
fwait
xchg
mov
mov
std
inc
dec
sbb
jmp
pusha
sahf
aam
mov
cmpsb
dec
int3
aaa
xor
add
inc
sbb
cltd
ret
ljmp
mov
ret
imul
pop
in
push
test
lods
mov
mov
mov
xchg
daa
fsubrl
and
xchg
xchg
test
ss
repz
or
add
push
enter
jp
lret
inc
xchg
inc
add
lret
pop
mov
dec
std
std
add
iret
dec
ljmp
cmp
ds
inc
lock
ljmp
mov
ljmp
cmp
imul
cmp
lods
or
rcrb
xor
sbbb
pop
push
imul
pop
jae
sub
cmpl
nop
push
dec
out
adc
add
mov
stc
cli
pop
xchg
arpl
cmc
sbb
add
js
das
icebp
jno
mov
cmp
sub
call
test
mov
mov
loop
cmp
jo
loopne
mov
sbb
xor
ss
xchg
mov
xchg
stc
add
inc
add
rolb
mov
add
mov
xor
push
xor
ret
cld
dec
not
jmp
int
mov
sbb
mov
rcll
mov
les
xchg
in
dec
iret
imul
sub
pop
lods
mov
loopne,pt
xorb
xchg
mov
aas
leave
lods
push
cmp
imul
mov
fcomp
ds
dec
stos
cmp
or
and
dec
je
packssdw
dec
int
sub
out
fsubs
rol
jns
icebp
sbb
mov
inc
rcll
push
dec
gs
cmpsl
mov
pop
pop
dec
push
push
sbb
sub
loope
adc
sub
fistl
mov
lea
movsl
enterw
cli
push
push
and
out
push
inc
fstpl
jno
inc
popa
push
push
cmpsb
daa
or
mov
pop
mov
or
std
stos
out
repz
xchg
std
mov
jns
cmp
pushf
push
ljmp
dec
xchg
filds
arpl
sub
push
test
mulb
call
xchg
and
inc
sub
xor
mov
imul
fistl
jnp
sub
jne
xchg
call
js
xor
cmp
jle
add
push
loop
lods
inc
scas
pop
xor
or
adc
push
enter
insl
incb
fmuls
lcall
lea
jle
jmp
leave
dec
mov
in
ficoms
inc
daa
add
push
insb
jl
aam
pop
movsl
sbb
test
and
pop
push
jae
testb
or
repnz
sbb
aam
outsl
das
pop
adcb
inc
jmp
loop
dec
mov
rep
and
es
popa
mov
push
frstor
add
sub
adc
push
mov
sub
pop
mov
sub
cltd
xor
xorb
std
jmp
pop
sub
pop
jnp
pop
popf
in
pusha
mov
lcall
xchg
mov
lods
inc
or
add
xor
aam
push
es
lods
outsb
xchg
add
pop
popf
or
imul
divl
sbb
push
jbe
insl
sbbb
mov
pop
cmp
jge
in
sub
fisttps
sbb
push
cmp
cmp
push
pop
mov
push
push
pop
es
pop
daa
adc
pushf
or
cmp
imul
movsb
inc
in
mov
in
sbb
mov
or
movsb
nop
xchg
fwait
pop
into
jge
jno
lods
scas
xor
mov
cli
bound
in
push
sbb
add
stc
jne
mov
insb
out
add
lods
icebp
addr16
adc
movsl
sbb
jnp
cmpl
xchg
inc
xchg
andb
test
mov
jae
lahf
cmp
push
sub
push
inc
adc
jg
mov
adc
mov
cmpsb
aad
lahf
jbe
fstpt
scas
insb
push
jle
adc
mov
add
pop
pusha
adc
call
cltd
mov
fldcw
jmp
xor
aas
sbb
popa
push
jne
addb
or
scas
into
dec
nop
cmp
jle
cmpsl
pushl
or
sahf
cmp
jnp
jmp
and
pop
xchg
and
mov
fstp
clc
mov
dec
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
dec
into
mov
mov
es
ret
or
testl
pop
cmc
lret
jle
push
mov
push
repnz
pop
cwtl
xchg
dec
je
mov
scas
adcb
call
mov
cmpsb
xchg
test
adc
adc
push
repz
mov
aas
mov
cmp
mov
mov
pop
icebp
mov
pop
mov
dec
insb
inc
in
out
sbbl
xchg
sub
shll
jne
pushf
adc
add
sbb
jle
push
dec
dec
loop
mov
shlb
push
xor
sbb
outsb
lret
stc
jns
scas
sub
mov
adcb
int
leave
push
enter
hlt
bound
int3
push
push
loope
popf
out
sbb
adc
out
push
pop
popa
outsb
call
mov
stos
sbb
scas
leave
xor
mov
int3
xor
shll
shll
iret
cmpsb
cmp
andl
cmp
mov
add
jge
imul
int
int3
jno
jno
dec
sub
ds
xchg
sbb
ljmp
loopne
push
adc
ret
cmp
lods
fcmovbe
add
mov
hlt
dec
je
and
pop
stos
pop
outsb
push
add
jecxz
push
xorb
ficompl
xlat
lcall
outsl
push
ret
sbb
rol
repnz
mov
repnz
imul
inc
xor
jns
sbbb
dec
pop
add
aad
into
fcmovu
cld
jg
imul
cld
iret
sahf
daa
mov
xor
jecxz
enter
mov
fstpl
jge
pop
fs
dec
jnp
sbb
inc
dec
sub
aam
incb
into
shlb
adc
push
test
je
imul
pop
inc
cmp
mov
push
jmp
push
inc
push
lods
pop
fsubl
cltd
mov
in
ds
rcll
xlat
loope
xchg
jns
and
lock
or
jb
or
je
or
out
test
ficomps
popf
sbb
movsb
cs
fdivl
loop
lret
mov
mov
imul
xchg
in
adcb
add
jb
xchg
adc
inc
jno
hlt
out
xlat
in
inc
sbb
lcall
adc
push
and
sbb
add
int3
jns
outsb
adc
test
test
loope
mov
in
gs
jecxz
in
cmp
jb
aad
cmp
xor
aaa
lret
out
rcll
fstl
daa
in
orl
ret
sbbb
out
addr16
dec
inc
xchg
stc
mov
sub
pop
aas
shl
dec
jecxz
in
ret
lods
mov
in
xor
sbb
sbb
push
mov
mov
lds
jle
or
or
sti
cld
aas
in
pop
loopne
push
inc
sub
enter
testb
test
xchg
cltd
mov
jle
mov
adc
in
outsb
adc
cli
lcall
sti
inc
addr16
movsl
aaa
imul
add
add
enter
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
fnstsw
jmp
mov
les
xchg
clc
push
and
ret
push
outsb
out
sub
std
insb
add
imul
inc
dec
xor
stos
fdivl
loop
jae
scas
mov
outsl
push
mov
jmp
ret
and
cmpsl
mov
or
lahf
xchg
xchg
repz
dec
sub
shl
mov
and
dec
push
dec
dec
pop
and
rcrl
mov
or
ret
mov
adc
mov
in
inc
cmpl
xlat
and
xchg
sbb
inc
xor
inc
mov
and
mov
or
adc
fst
dec
lock
jmp
loop
pop
je
rorb
mov
fwait
scas
insb
dec
mov
pop
lea
imul
mov
xor
fistps
sbb
ja
mov
pop
push
repnz
add
xchg
ljmp
fisubs
sbb
cmc
xchg
mov
pop
mov
ret
mov
mov
or
adc
xchg
cmp
jl
cmp
test
stc
or
xchg
pop
aam
jecxz
int3
mov
lcall
sub
aam
daa
inc
pop
pop
xchg
push
sbb
pop
dec
js
sub
ja
add
arpl
insl
dec
jp
mov
jnp
sbbb
neg
cmpsb
subl
sbb
and
mov
and
or
mov
rol
add
leave
movsl
fnsetpm(287
scas
shlb
or
inc
ds
pop
add
add
mov
leave
pop
icebp
mov
mov
dec
les
cmp
insl
dec
mov
sbb
out
popa
test
jne
test
out
and
cmp
jp
push
xchg
xchg
lea
rol
dec
mov
lds
arpl
imul
jmp
mov
lds
pop
arpl
mov
in
loopnew
xchg
sub
push
add
pop
and
jo
in
sbb
ljmp
xor
mov
or
sbb
cs
push
adc
out
aad
jbe
lret
fldpi
mov
andb
or
daa
cmp
gs
flds
cs
popf
sahf
clc
push
inc
fistps
add
loopne
outsl
ret
lcall
int
mov
out
stos
and
dec
scas
stos
xor
mov
clc
add
jecxz
inc
pop
test
cwtl
xchg
fistpll
hlt
lret
jecxz
or
jle
filds
sub
loopne
repz
push
mov
jge
lahf
inc
jmp
jmp
idiv
leave
push
push
jmp
bound
sub
jo
stc
jns
enter
fdivs
gs
xorb
ss
jecxz
pop
scas
andb
cli
loop
int
out
jmp
ret
push
dec
mov
in
sbb
mov
sbb
in
insb
iret
xor
fnstenv
popl
call
add
fdivr
jno
sub
std
pop
inc
lock
jbe
push
int
sahf
sar
mov
pushf
hlt
mov
bnd
icebp
ja
jns
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
cld
add
mov
mov
cmpsl
mov
jge
and
ds
dec
push
cmp
mov
aaa
jl
mov
ss
in
aas
cmp
inc
jo
fistps
pop
imulb
repnz
nop
jecxz
movsb
lock
inc
sbb
mov
mulb
mov
cmp
out
sbb
mov
lds
cmc
and
sar
roll
sub
sub
push
popa
jns
ja
or
push
ret
adc
out
inc
add
popa
stc
insb
lods
jp
fists
xchg
mul
fisttpll
cmp
fs
test
xor
xor
push
xchg
pop
adc
fstp
ja
and
iret
mov
pop
ret
push
test
add
push
or
xchg
pop
mov
fiadds
clc
rorb
or
sbb
add
iret
test
or
fldenv
or
xchg
xlat
add
xor
xchg
mov
jb,pt
mov
outsb
push
push
cmpsl
xchg
pop
lcall
shrb
ret
loopne
inc
fisubrs
xchg
sub
sub
xor
xchg
sti
mov
lahf
jbe
cmp
mov
jns
xchg
cmpb
shll
daa
cltd
sbb
lods
shll
mov
jl
pushf
mov
stos
dec
mov
and
lds
test
xchg
xor
fstpl
pop
lahf
push
mov
outsl
jns
in
xor
mov
adc
sbb
ljmp
mov
lock
imul
jmp
es
add
mov
loopne
lret
mov
xchg
call
cmp
jo
ss
sub
or
hlt
stos
jecxz
mov
dec
int
cmpsb
cwtl
jmp
gs
fsts
push
cli
shrl
pminub
pop
add
leave
add
and
mov
cmpsl
push
lret
or
out
int
xchg
jnp
xor
mov
xor
and
dec
aas
dec
and
mov
ficomps
dec
and
les
xchg
test
pusha
jmp
xchg
movb
testl
fwait
lret
leave
xchg
xorb
adc
mov
xchg
inc
xor
ret
out
mov
pop
repnz
scas
lcall
mov
scas
cmp
adc
out
mov
orl
out
push
and
mov
pop
arpl
xchg
mov
pop
push
or
clc
jo
mov
leave
rcrb
xchg
movsb
aad
cltd
lea
cwtl
nop
outsb
test
xor
dec
mov
ljmp
xor
push
and
xchg
sbb
in
push
xorb
or
js
scas
lret
pop
jo
subl
jp
pop
sarl
push
inc
sub
xchg
mov
shll
dec
xchg
or
mov
pop
xlat
repnz
sbb
pop
mov
jge
aaa
pop
mov
scas
mov
andl
rcll
and
add
inc
xor
inc
pop
xor
jns
mov
fildl
mov
jmp
push
xchg
push
sbb
push
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
mov
les
xchg
stos
jns
mov
mov
inc
mov
xlat
pushf
in
push
call
test
inc
bound
xchg
push
aad
cmp
test
mov
jns
mov
push
fwait
dec
shll
stos
into
out
cmpsl
inc
popa
push
les
lcall
lock
cltd
in
dec
mov
sbb
leave
mov
mov
add
daa
xchg
call
ret
frndint
cmp
sub
loope
jnp
and
add
arpl
inc
call
outsl
loop
push
clc
fs
and
nop
and
nop
and
xlat
sbb
insl
dec
sub
fldl
jmp
in
lds
cmp
call
jecxz
mov
imul
lock
jle
xlat
ja
mov
iret
sbb
icebp
gs
dec
gs
add
xor
xchg
add
jnp
ja
loopne
sarl
pop
pop
stc
into
pop
pop
jge
push
sbb
int
mov
ret
insb
inc
push
push
and
sub
mov
sbb
repz
sbb
loope
stos
dec
cmp
test
sub
cli
gs
aas
inc
popf
jmp
fidivrl
push
adc
fcomps
and
iret
push
fsubr
mov
fimuls
enter
xor
imulb
push
inc
ljmp
and
and
fstpl
shrb
jbe
es
mov
lods
jno
inc
jmp
cwtl
fcoml
ds
loop
ss
add
es
adc
jl
xor
int
xor
xorb
cwtl
xor
or
pop
mov
inc
add
lods
mov
fsubrs
and
mov
jle
sub
or
lods
mov
es
push
inc
add
fldl
sbb
ret
inc
loope
adc
dec
mov
js
out
stc
sbb
xchg
adc
dec
in
movsl
pop
ja
in
xchg
rcrl
lea
aaa
jns
push
jp
fcoms
and
fisttpl
dec
push
jo
jg
into
test
ja
push
stc
lods
dec
jg
inc
arpl
stos
dec
push
mov
lds
int3
mov
push
test
mov
lock
adc
js
xor
repz
sub
cmp
in
rcll
das
cmpsb
and
or
jo
ljmp
mov
daa
pop
or
cmc
imul
jge
mov
stos
cli
inc
enter
sub
insl
jmp
sbb
pop
aam
outsb
addr16
push
or
sub
mov
insl
mov
cmc
cmpsl
adc
push
call
mov
sahf
push
jge
arpl
mov
jl
movsb
add
or
xchg
stc
inc
xchg
mov
lret
hlt
sbb
jne
sarl
lods
lock
sbb
das
mov
mulb
sbbb
int
and
lds
jle
pop
fsubrs
dec
insl
and
mov
push
stos
xlat
lock
cmp
into
dec
adc
dec
jb
pop
mov
or
inc
xchg
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
decl
sahf
mov
les
mov
cmpsb
pop
ret
mov
dec
pop
shrb
adc
mov
mov
out
push
cmp
call
and
dec
outsb
bound
jmp
frstor
cwtl
cmp
faddl
inc
jno
lcall
andb
pop
movsb
leave
xchg
push
fst
fisttpl
fsubrl
mov
sub
stos
jmp
ljmp
jb
cmp
movsb
ret
or
movsl
and
fs
mov
jg
jae
stos
call
js
inc
pop
dec
test
xchg
call
mov
sub
pop
fs
cmp
or
test
cmp
shlb
aaa
jne,pt
mov
jmp
inc
rol
inc
and
cmpsb
and
nop
jbe
push
sub
fst
fldt
pop
cltd
sbb
xorl
mov
cmp
cmp
jnp
lcall
addr16
in
sub
hlt
adc
stos
dec
push
je
jb
movsb
jg
aam
loop
xrelease
inc
push
xorb
xor
cmp
testb
jnp
cld
aas
je
cltd
test
test
cltd
push
and
adc
jge
notl
mov
mov
test
push
and
add
mov
and
pop
jno
push
or
sbb
fisubrl
and
test
inc
inc
cmpsb
fcmovb
pop
imul
pop
or
jno
out
jno
mov
les
movsb
fists
inc
cs
mov
cld
dec
test
popa
subl
jno
push
icebp
loopne
dec
int
pop
mov
add
pop
call
pusha
sub
mov
and
mov
aad
adc
ja
xor
stc
jnp
fwait
aam
xorl
jle
dec
repnz
sbb
leave
add
inc
xor
orb
pop
out
adc
or
adc
loop
cmp
mov
push
adc
subl
mov
and
cli
imul
mov
dec
sahf
enter
call
xchg
mov
cltd
scas
negl
xlat
fs
and
cs
inc
in
les
xchg
ds
adc
jae
dec
popa
outsb
adc
dec
xchg
lcall
cli
add
bound
cmp
sbb
xor
adc
pop
out
pop
mov
fnstsw
out
negl
je
cwtl
xchg
sub
loopne
ror
shlb
pop
push
fwait
gs
mov
adc
xchg
arpl
mov
adc
out
fstl
inc
test
addr16
ljmp
das
outsl
or
mov
fsubrp
aam
or
push
rcr
stos
add
std
mov
inc
xor
sbb
mov
pop
repz
fimull
dec
mov
ds
fildll
dec
push
popf
jb
sbb
ret
into
fiadds
test
popf
lods
mov
cmp
adc
cli
pop
sbb
mov
sub
dec
inc
mov
fsubs
pusha
jo
gs
mov
iret
movsb
lds
call
neg
dec
int
adc
iret
out
lods
jmp
out
adc
add
jbe
jns
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
in
repz
loopne
push
in
mov
and
add
aaa
push
outsb
test
mov
push
imul
mov
mov
movsb
or
adc
dec
pop
push
push
mov
mov
push
daa
sti
out
jns
outsb
jmp
xor
es
mov
scas
andb
roll
cmp
test
popl
jns
jmp
nop
lret
add
int3
xor
sti
mov
dec
aas
sarl
jnp
dec
arpl
into
cmpsb
sti
fisubl
or
xor
data16
iret
inc
and
aaa
stc
dec
sub
lods
pusha
les
pop
sahf
push
sbb
shll
test
outsb
or
stc
gs
cwtl
int
int3
add
test
dec
inc
jae
pop
inc
add
mov
test
push
sub
push
std
cmp
les
ficomps
rolb
jnp
cmpsb
lock
shrb
xor
xor
dec
out
stos
xor
cmp
cmp
push
out
ret
test
jno
imul
in
shrl
dec
fsubrs
inc
cs
movsb
xlat
pop
xor
push
pop
jecxz,pn
adc
shl
mov
imul
imul
jl
gs
sbb
insb
lret
or
jle
les
inc
popa
mov
and
ret
and
shlb
fwait
ljmp
cmp
aam
out
jge
mov
mov
movsl
insl
dec
lcall
or
aad
xor
je
push
ja
mov
jae
sbb
orb
loop
nop
out
inc
push
cmp
test
cmpsl
pop
lahf
dec
jae
push
push
lds
cmc
out
out
mov
lods
and
test
xor
popa
mov
pushf
ret
repz
xor
insl
sub
out
and
sti
idivb
push
fldt
aaa
rcrl
roll
sbb
ret
add
xor
iret
repz
add
or
mov
cmp
in
pop
dec
jg
insb
test
cmp
fsub
cli
in
cmp
mov
into
lea
push
xor
fcompl
ret
ffreep
or
insb
pop
adcl
jl
inc
aam
cmp
jmp
and
cli
push
or
add
andb
dec
les
add
adc
push
xchg
adc
cmp
stc
push
adc
or
jmp
or
imul
sbb
xor
mov
xor
aas
mov
or
pushf
push
dec
xchg
jmp
cli
push
int3
stos
mov
lcall
inc
mov
xchg
add
xor
mov
fwait
scas
aad
test
mov
mov
insb
cmp
int
sarb
xchg
push
dec
mov
sub
adc
ds
call
inc
sub
sbb
fisttpl
popf
ds
lret
and
int3
add
xchg
xor
mov
jnp
xor
mov
stc
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fnstsw
xchg
jo
mov
les
mov
cld
bound
rolb
outsb
data16
inc
ja
inc
aas
aas
cmpsl
ds
out
inc
xor
lods
cmpsb
gs
in
or
fs
add
test
and
inc
ffree
bound
pushf
bound
pushf
rcll
add
xchg
jle
xor
out
and
inc
pop
jecxz
nop
mov
adc
sub
and
cmp
sub
or
out
inc
testl
imul
sbb
dec
mov
imul
inc
lahf
jnp
call
mov
push
xchg
xchg
cwtl
pop
test
fmuls
cli
das
loope
cmpsl
jo
lods
mov
hlt
jbe
repnz
fwait
mov
pop
iret
testl
or
fisttps
pop
dec
jge
movsl
mov
xchg
pop
out
add
insl
inc
xor
jbe
fbld
std
in
and
push
or
iret
fstl
lods
pop
decl
rcrb
hlt
push
jle
dec
sbb
test
push
adc
scas
mov
pusha
mov
push
push
jg
aam
cltd
iret
mov
lea
push
cli
rorb
jbe
push
ffreep
push
xchg
push
cmp
stos
shll
aad
xchg
dec
lods
jae
es
dec
or
ljmp
push
xor
cmp
ss
and
addr16
adc
pop
mov
lret
cmc
lods
sub
push
xor
fs
push
nop
dec
xchg
inc
pop
popf
jns
jb
pop
cwtl
inc
lds
sbb
push
jno
test
xchg
inc
scas
push
cmp
add
loopne
sub
jp
cmpsl
xor
mov
call
sub
sbb
icebp
xor
xchg
out
js
push
xchg
sti
mov
add
sub
test
cwtl
popa
loopne
sarb
fucomip
sbb
idivl
push
mov
gs
lahf
insl
jl
ror
out
ja
xor
sbb
inc
sub
mov
mov
push
jmp
jbe
lock
orb
xchg
js
jmp
dec
insb
je
jae
cmpsb
ret
data16
xor
lods
mov
pop
data16
test
jmp
push
mov
inc
jmp
icebp
and
imul
movsl
pop
mov
sti
cmp
add
rclb
sti
jl
out
jmp
or
or
dec
and
and
aam
adc
inc
dec
push
les
sbb
jbe
data16
cs
or
fsqrt
mov
xchg
and
mov
out
int3
mov
inc
xor
lret
test
pop
xchg
inc
push
sbb
dec
movsl
mov
mov
add
mov
jae
sub
xchg
movsl
fdivp
xchg
hlt
aaa
test
sahf
sbb
adc
sbb
dec
loopne
push
xor
icebp
sbb
shr
pop
or
or
aam
jl
pop
out
out
and
pushf
std
div
test
les
push
loopne
pop
loope
loope
and
lret
cs
inc
jp
pop
mov
je
fildll
sti
inc
push
xchg
pushf
out
rolb
rcrb
lods
es
shl
jns
das
lds
push
cli
loop
mov
ret
add
mov
and
mov
sub
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fucom
adc
mov
mov
dec
gs
and
nop
adc
std
jne
sub
out
pop
mov
sar
push
pop
mov
add
icebp
test
or
xchg
jmp
xlat
xchg
add
sbb
cs
jbe
jg
mov
jge
lds
jp
adc
dec
sahf
sbb
arpl
and
sahf
nop
push
jae
stc
iret
loop
adc
stc
stc
add
pop
or
xchg
xor
jb
push
dec
popl
les
xchg
insl
add
jbe
push
pushf
sti
fcomip
stos
dec
or
add
xlat
pop
mov
push
push
sbb
pop
xchg
into
mov
stos
mov
mov
cs
mov
mov
cmp
out
lock
rcrb
hlt
inc
leave
pop
stc
fsubrs
ss
in
lock
sub
push
cmpsb
test
ljmp
and
lods
nop
pmullw
cmpl
aad
xchg
gs
jae
push
in
xchg
pop
or
push
std
sbb
push
sti
cs
inc
and
in
nop
xchg
sub
mov
mov
mov
insl
inc
lret
ljmp
int3
gs
ss
mov
stos
dec
dec
push
jecxz
cs
sub
fistpl
adc
push
iret
out
add
xchg
in
push
in
insb
div
sbb
cmp
cmc
pop
dec
xchg
jl
aad
jle
fsts
mov
mov
outsb
shrl
lcall
mov
pop
cmp
mov
test
jo
clc
movsl
loop
push
mov
and
pop
mov
subb
dec
das
fdiv
ffreep
cli
in
push
ja
and
addr16
adc
jmp
mov
fdivp
adc
scas
mov
lea
int3
ret
push
and
xorl
sub
jge
dec
push
mov
add
sbb
or
js
adc
push
adc
rcrl
mov
inc
hlt
call
aad
jb
pop
and
iret
xchg
mov
rcll
lcall
stos
hlt
insb
pop
pop
out
jl
negb
cmpsb
mov
and
hlt
ret
lods
cs
jge
fdivrs
addb
enter
pop
fcmovbe
mov
ja
leave
enter
push
xchg
cmpsb
dec
aaa
mov
sub
outsb
fidivs
jnp
js
cwtl
int3
rcrb
hlt
push
mov
or
dec
das
push
fmuls
lods
aad
jb
cmp
in
std
jecxz
sub
or
cmp
cmp
movsl
enter
and
and
xor
mov
fcmovne
add
mov
dec
pop
xchg
jg
jae
jle
fwait
scas
cmp
enter
out
rorb
mov
sbb
xchg
decb
mov
xorl
inc
shl
negl
stos
std
ja
xchg
movsl
aas
pop
hlt
pop
mov
xor
int3
jns
repz
inc
out
aas
aam
repnz
jo
add
aaa
aad
fldenv
sbb
cmp
jns
inc
adc
cmp
aas
mov
jo
add
mov
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
aaa
xchg
fnstsw
les
mov
sub
pop
ds
pop
sbb
pop
incl
dec
addr16
pop
dec
pop
aad
push
mov
int3
push
int3
popa
cmp
push
mov
imul
cwtl
sub
sub
dec
xchg
jmp
fistl
insl
mul
add
mov
inc
mov
out
pop
or
and
sub
popa
movsb
cwtl
mov
cmc
in
push
adc
dec
sub
js
test
xorl
nop
add
ljmp
inc
lcall
pushf
out
scas
push
lret
jb
popa
pop
pop
das
insl
insb
push
stos
mov
data16
movsb
sbbl
and
int
lret
js
jg
dec
push
push
outsb
rorb
jbe
push
in
leave
jl
push
loope,pt
cmpsb
mov
fstpt
loopne
dec
fidivrl
aam
mov
aaa
cmp
lds
jno
sub
loopne
test
addr16
sub
scas
outsb
pop
cmpsb
sarb
mov
sub
mov
mov
or
lahf
pop
inc
jb
push
mov
in
sub
jae
jae
xor
divb
dec
movsl
and
orl
sbb
leave
hlt
and
aam
cmp
cmp
jg
inc
pushf
dec
pop
fs
mov
mov
fcoml
enter
mov
shr
pop
pop
insb
out
push
lods
push
test
rolb
dec
cmp
push
mov
mov
shll
xchg
scas
and
out
sbb
and
add
xchg
and
mov
sub
fs
xchg
mov
std
sbb
js
loope
test
mov
stos
push
ja
in
gs
or
adc
add
dec
jb
push
jg
loope
outsb
mov
jmp
lcall
xchg
cltd
mov
cmp
xchg
stc
cmc
jle
in
mov
stos
lock
add
jge
mov
mov
mov
cwtl
jmp
cmpsb
sbb
push
inc
add
push
pop
jp
cmpsb
ljmp
mov
push
dec
loope
dec
cmpb
scas
loopne
jbe
mov
mov
call
push
sahf
add
and
dec
lods
sahf
adc
ds
push
loop
mov
adc
add
pop
add
adc
sub
dec
lds
ss
dec
and
leave
pop
push
adc
mov
aaa
adc
mov
push
ss
lahf
dec
xor
sbb
sub
ds
lds
in
add
lahf
addr16
sub
test
add
pop
add
xor
jo
inc
nop
xor
cld
pusha
lock
gs
push
lods
or
mov
dec
sub
inc
dec
ds
fstpl
std
in
cmp
mov
orl
in
sub
repnz
pop
push
push
fdivl
cmp
fwait
sbbb
addr16
dec
popa
add
xor
lcall
aam
mov
inc
mov
or
sub
add
add
bound
dec
cwtl
push
jmp
xor
adc
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
int
mov
les
les
adc
pop
arpl
sub
add
fadds
push
sub
lds
lock
pop
mov
fcmove
lahf
aas
shlb
and
mov
xorl
stos
mov
push
jp
rcr
and
sbb
jg
shl
sbb
sbb
inc
sbb
jo
out
fwait
mov
push
jae
sbbb
aas
dec
pop
sub
sti
cltd
out
add
iret
cmp
daa
push
add
sbb
movsl
or
inc
or
orl
xchg
fsubr
hlt
sbb
push
xor
cltd
xlat
and
mov
enter
push
test
testl
add
arpl
in
cmp
or
or
sub
gs
in
push
inc
cmp
insb
adc
or
lea
into
pushf
ljmp
and
xchg
sbb
inc
call
or
pop
and
es
xchg
test
mov
hlt
inc
aad
stos
mov
inc
cmpsb
mov
outsb
fstps
out
dec
cltd
fstpl
sub
stc
iret
xchg
sub
rorl
mov
and
dec
inc
out
mov
adc
inc
int3
mov
mov
rorl
inc
mov
push
xlat
mov
push
aad
cmpl
testl
out
dec
mov
xor
pop
or
adc
dec
pop
scas
mov
pop
xor
scas
jns
adc
pop
stos
push
adc
addb
shll
aaa
lret
mov
sbb
lret
in
aas
adc
xchg
push
aam
out
and
sub
sbb
inc
adc
jmp
cmp
inc
lea
dec
mov
aam
jp
push
push
testb
movsl
pop
adc
sub
mov
pop
repz
dec
outsb
mov
mov
xchg
rcr
call
inc
or
dec
call
jne
hlt
mov
mov
shr
jnp
imull
ret
movsb
aaa
dec
mov
sub
cmc
shrb
push
mov
dec
sub
ret
pop
ljmp
and
adc
test
sbb
arpl
clc
outsb
rclb
dec
and
xorb
lahf
mov
mov
cmp
int3
push
xor
push
les
ds
inc
inc
scas
and
es
iret
rcll
mov
lea
pop
lods
sub
jne
sub
shrb
test
ss
ret
add
loopne
jmp
or
pushw
sub
xor
push
insl
aas
push
mov
push
subl
xor
ffreep
xor
cltd
js
cwtl
rolb
cmpsl
xchg
push
inc
out
pop
dec
lods
xchg
les
dec
push
cltd
test
mov
add
js
cvtps2pd
jp
je
nop
mov
mov
push
or
lret
mov
push
cmp
or
jmp
in
mov
push
xchg
loope
xor
je
sbb
imull
jg
in
fsub
jle
test
scas
mov
xchg
lahf
js
stos
int
out
inc
jb
jmp
adcl
and
test
push
bound
dec
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
es
push
sahf
mov
les
mov
mov
fst
adc
std
and
aaa
mov
jl
mov
inc
pop
mov
xchg
cmpsb
xchg
jle
shl
sub
adc
mov
adc
add
cmp
dec
stc
sub
rcll
frstor
sbb
gs
shlb
push
shlw
push
push
add
iret
imul
add
lahf
fisubrl
loope
sub
sti
add
into
inc
andb
pop
addr16
lret
jno
fadds
sbbb
loopne
push
mov
stc
adc
mov
aas
dec
add
ds
or
pusha
sbb
mov
les
cwtl
or
jnp
jg
insb
les
sub
xchg
mov
cmpsl
scas
repz
xchg
lods
lods
test
or
adc
stos
jns
jge
cli
jecxz
data16
rorb
cmpsl
ljmp
adc
adc
enter
daa
fimuls
nop
xor
cmp
sbb
inc
out
sbb
xor
xorl
mov
sbb
jmp
enter
jb
pop
and
mov
push
sahf
shll
jns
push
je
rcl
sbb
imul
push
push
add
jg
notb
push
data16
dec
roll
cmp
loopne
push
fwait
lret
cmp
or
ret
add
dec
xchg
dec
adc
xchg
decb
xchg
cmp
ljmp
rcl
inc
sbb
xchg
addr16
insb
push
cs
pop
addl
mov
fs
cltd
xchg
pop
dec
leave
fcmovnu
leave
sub
mul
mov
outsb
ja
adc
sub
dec
addb
mov
nop
jae
jle
leave
pop
or
in
pop
add
mov
js
in
testl
mov
add
in
mov
mov
fs
jns
mov
jecxz
popf
dec
mov
jmp
rclb
and
mov
movsl
push
and
cltd
sbb
jnp
mov
cmp
repz
rclb
jne
lods
pop
xor
sbb
in
xor
xor
or
mov
call
ret
test
or
dec
fsubl
push
dec
xor
and
add
mov
adc
popf
loopne
push
inc
mov
cmp
sbb
popf
cmp
push
les
int3
pop
scas
mov
pop
fstl
test
sti
jmp
pop
mov
out
sub
fiaddl
inc
sahf
stos
dec
cmp
push
jle
cmp
dec
loope
sub
sub
inc
adc
movsb
test
push
xchg
sub
sbb
adc
xor
xchg
wbinvd
sub
cmp
mov
sahf
and
push
inc
arpl
aam
mov
mov
inc
ret
imul
push
inc
sahf
jge
or
mov
pop
mov
dec
pop
push
mov
imul
les
into
fildll
lahf
and
cld
mov
daa
insl
cs
and
inc
pop
fistpl
call
iret
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
pop
jg
sahf
mov
les
mov
repnz
dec
jne
cmpsl
stos
fnsave
int
std
shlb
mov
push
loop
insl
test
xchg
ret
sbb
mov
stos
lock
push
lea
adc
shll
xchg
out
stos
and
cmp
ds
and
or
icebp
mov
stos
sbb
add
fdivrs
mov
notl
add
mov
jae,pn
mov
push
je
or
push
pop
push
xchg
fdivp
cmpsl
mov
sbb
jns
mov
dec
xchg
mov
jbe
adc
adc
mov
addr16
out
or
inc
xchg
push
stos
or
mov
dec
addr16
push
into
outsl
adc
sarl
xchg
hlt
adc
jge
mov
jnp
cwtl
adc
in
aaa
in
dec
or
cwtl
xor
adc
push
std
mov
rorb
cld
and
test
daa
cmp
cmpsb
std
jp
mov
mov
rcrl
test
pop
xlat
sub
aad
lahf
movsb
cmpb
cld
xchg
pop
pop
lahf
or
cltd
and
mov
dec
jg
xor
mov
loope
push
inc
cltd
sbb
lahf
pop
psrlq
push
iret
mov
jecxz
mov
mov
loop
mov
jb
fs
enter
cli
add
bound
or
std
inc
iret
xchg
out
sub
scas
ret
test
mov
inc
mov
movsb
push
mov
lods
xchg
mov
sar
adc
lret
bound
cvttps2pi
fcmovnbe
adc
mov
pop
cwtl
stos
jns
in
ret
jno
ljmp
adc
push
ds
lret
cmp
jae
push
test
jo
popf
xor
test
dec
push
stc
add
push
into
movsl
mov
push
enter
xor
pop
add
dec
add
jmp
xor
rcrl
insb
jge
shlb
je
sub
dec
pop
cltd
aam
and
sarb
aam
add
cmp
add
jbe
mov
lock
inc
enter
sbb
arpl
dec
lods
add
push
mov
int
lret
std
clc
je
mov
outsl
dec
jl
or
xor
sub
test
dec
cmp
cmp
xchg
push
icebp
movsl
cmpsb
cmpb
fistpll
test
out
inc
in
fstpl
mov
cmp
cwtl
or
subb
adc
pop
dec
in
fucom
out
mov
mov
xchg
jne
imul
cwtl
shlb
push
lea
fs
scas
sarl
pop
out
iret
pop
sti
mov
mov
pop
and
mov
inc
loopne
and
cli
sarb
addr16
lock
cmp
sub
pop
push
int
decb
das
data16
sahf
test
ret
pop
mov
xchg
ljmp
xor
fisubs
aas
fisubrl
in
jge
test
hlt
cmp
jo
mov
mov
mov
push
mov
add
int3
inc
push
sbb
and
mov
fdivrl
cmc
lret
stos
clc
mov
or
add
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
sahf
lret
mov
ret
xchg
lds
ret
mov
add
adc
or
ds
mov
or
jp
fdivs
enter
mov
push
es
cmp
add
popa
inc
and
dec
xchg
xchg
xchg
jae
lds
ds
xchg
fcmovnb
push
stos
movsl
jbe
nop
or
test
push
cs
pop
add
jbe
mov
lods
ljmp
loop
inc
test
push
int
popf
hlt
daa
jp
pop
jo
fwait
add
outsl
push
movl
test
xchg
and
and
out
add
scas
icebp
jge
popf
or
mov
fnstcw
jmp
stos
ljmp
mov
jnp
mov
jno
jp
arpl
pop
subb
leave
sbb
xor
arpl
test
mov
adc
pop
lret
in
pop
push
hlt
mov
addr16
xor
call
cmp
xor
jmp
rcll
mov
lret
int
les
pop
cmp
gs
xorl
rcll
cmc
scas
dec
icebp
xlat
pop
iret
gs
out
pop
mov
test
and
aad
loope
das
ds
in
cwtl
pop
js
add
in
repz
ljmp
fcomps
and
lcall
sub
adc
pushf
mov
sarl
fwait
jne
jae
mov
pop
gs
mull
insl
insb
ja
int
fwait
stos
inc
mov
dec
mov
hlt
cmpl
xchg
inc
jb
sub
push
aam
xchg
fs
loopne
sub
cmc
sbb
out
ja
lahf
mov
pop
call
out
mov
add
sub
arpl
loope
sub
mov
cmp
lock
movsb
sbb
jb
fcomps
dec
in
test
jle
cmpsb
out
and
adc
mov
out
xor
sarl
addr16
mov
and
lret
mov
in
imul
push
sub
rorb
adc
push
cmp
add
outsb
cmpsl
clc
sub
movl
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
addl
mov
mov
lret
loope
test
add
push
test
pop
mov
mov
lods
cltd
inc
mov
push
pop
movsb
popf
add
jl
pop
sbb
cld
push
movsb
repnz
cmp
pop
xchg
or
outsb
mov
movsl
or
pop
jae
popf
mov
shlb
je
pop
in
cltd
push
or
jae
inc
add
push
fisttpl
mov
cld
mov
into
mov
inc
inc
jg
insl
shll
das
fldcw
inc
jmp
mov
xor
push
out
inc
inc
fmuls
test
adc
push
aas
js
test
cmpsb
es
rclb
or
and
push
adc
push
dec
or
adc
push
cmp
negb
dec
pop
icebp
ret
pushf
ljmp
cmp
push
mov
and
nop
push
mov
add
les
sub
dec
and
or
mov
lea
push
outsl
cmpsb
fadds
inc
stos
jecxz
and
sub
and
mov
mov
add
ja
test
je
dec
int
dec
imul
sbbl
scas
int3
jae
sarl
mov
pop
lock
data16
push
jae
rcll
aam
add
inc
push
cmp
mov
insb
mov
stos
xlat
push
daa
daa
pop
fidivrl
aad
leave
dec
mov
mov
pop
addb
enter
push
testl
mov
loope
cmp
mov
sub
out
dec
stc
push
sub
pop
inc
pop
cmpsl
cmp
mov
adc
jmp
mov
lahf
shlb
out
mov
loope
sub
out
imul
cmp
xchg
sub
mov
xchg
mov
xchg
jl
adc
scas
cmp
pop
fdivrl
arpl
mov
sub
add
in
lahf
sbb
and
pop
mov
pop
add
fsubrp
testb
push
pop
sub
test
sub
push
jb
daa
and
pop
xor
mov
lret
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
adc
cmpl
cmc
push
lcall
cwtl
popf
xor
mov
push
pusha
sahf
push
pop
dec
movsl
xor
adc
sbb
rcll
dec
pop
aam
shrb
int3
xor
and
mov
iret
inc
loopne
clc
xchg
imul
pop
bound
add
or
mov
cmp
xchg
pop
pop
sbb
push
addr16
hlt
pop
ss
addr16
sahf
pop
push
mov
sub
sbbb
dec
test
xchg
pop
mov
push
adcl
jno
sbb
lcall
jp
cmp
insb
push
hlt
push
out
and
data16
jbe
inc
cltd
cli
or
mov
cmpl
adc
xchg
mov
dec
add
shr
das
ficoms
sbb
sub
sbb
inc
fucomi
shlb
xchg
adc
imul
dec
fucom
lods
jo
ficoms
popa
mov
mov
mov
testb
mov
hlt
xchg
and
scas
mov
xchg
or
push
jae
xor
lds
jae
test
repnz
fsubl
cmp
push
mov
or
jo
test
push
push
sub
xor
aaa
inc
inc
call
pop
scas
add
scas
shr
fimuls
mov
jmp
in
pop
std
sbb
jae
sahf
ds
add
rolb
dec
or
inc
inc
stos
mov
jl
pop
adc
sti
mov
out
jecxz
inc
repz
mov
das
xor
pop
xor
mov
jmp
in
sub
pop
daa
push
call
lock
cli
mov
jb
in
add
mov
imul
push
movsl
inc
mov
stos
int3
dec
pushf
mov
sarl
mov
mov
and
adc
jp
jnp
mov
das
or
mov
adc
scas
sub
adc
shrl
ret
fwait
cmp
fdivrl
lock
add
mov
push
call
dec
add
and
xchg
mov
mov
inc
icebp
iret
insl
mov
sbb
or
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
xchg
mov
mov
mov
mov
add
dec
xchg
aaa
ds
cli
stos
outsl
sbb
nop
in
jo
xor
adc
mov
jmp
dec
xor
sbb
dec
mov
cmp
xchg
lock
push
adc
adc
andl
push
sbb
jne
arpl
out
shr
fdiv
sub
das
xchg
ja
sbb
add
fmulp
inc
pop
popf
pop
out
xor
dec
inc
pop
or
xor
jecxz
mov
daa
mov
inc
push
daa
cmp
add
inc
mov
popa
mov
sbb
daa
dec
repnz
ficoml
stos
lahf
fdivrl
jo
mov
test
std
xor
mov
jecxz
movsb
sbb
inc
xchg
repz
out
sbb
lcall
pop
popa
arpl
fisubs
push
test
das
dec
xchg
dec
mov
mov
jl
pop
shll
jl
sbb
xor
testl
fbld
jo
insl
enter
pop
pop
sub
shrl
insb
mov
pop
lret
add
popa
dec
ja
mov
or
or
xchg
mov
loope
sub
adc
pop
fwait
insb
lret
xor
add
mov
or
movsb
add
ja
jne
out
lock
repz
jo
pop
rcll
pop
dec
mov
mov
ret
adc
fldcw
shll
rcll
adc
xchg
inc
mov
imul
test
jb
push
mov
enter
xchg
out
mov
xor
push
pop
mov
fsubrl
orb
loopne
fwait
mov
jmp
lcall
imul
sbb
pop
aaa
dec
adc
or
jae
hlt
sub
jo
es
xor
jae
sbb
mov
sbb
mov
sahf
addb
dec
xlat
scas
cmp
into
adc
std
and
pop
xor
jl
jns
and
cmp
cmc
pop
jae
and
test
hlt
test
in
dec
sbb
test
aam
jl
add
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
popa
jle
scas
mov
mov
cmp
adc
push
lods
les
ficomps
fsubs
xor
arpl
aad
and
notl
cmc
fistpll
dec
jb
mov
mov
push
jb
es
add
or
xchg
rcrb
jge
cmp
jbe
dec
xor
sub
xchg
xchg
add
aam
fsubr
ret
add
mov
jp
xor
ja
movsl
xchg
sbb
xor
pop
aad
xor
or
cmpsb
ja
lret
pop
mov
pop
pop
inc
popf
sub
add
clc
sbb
cmp
mov
sbb
hlt
xchg
xchg
add
jmp
adc
sti
fisttps
xchg
rolb
adc
out
xchg
movsb
push
sahf
dec
cmp
clc
mov
xchg
pop
stos
xor
fidivs
test
hlt
pop
mov
mov
movsl
cmp
pop
icebp
inc
dec
mov
into
or
add
xchg
mov
and
fmuls
adc
mov
ss
clc
in
in
push
mov
lcall
dec
pushf
int3
mov
mov
inc
clc
fwait
cmpsb
leave
mov
dec
cmpsl
xor
sbb
out
inc
int3
outsb
cltd
inc
fisttps
or
mov
sahf
jg
push
mov
jl
xchg
sub
clc
faddl
stos
fwait
stos
cmpsl
mov
mov
addl
out
cli
cmp
or
mov
sbb
les
jl
push
jnp
in
ljmp
mov
or
jge
sbb
sbb
mov
pop
adc
push
xor
insb
cltd
mov
mov
jne
ficoml
and
mov
sbb
dec
cmp
outsb
push
and
cmpl
ds
out
cli
js
mov
loope
sbb
and
out
or
mov
inc
subb
or
inc
jge
push
cmp
bound
adc
or
nop
in
call
data16
pop
mov
xchg
cmpsb
imul
sub
xor
fmulp
mov
add
andl
mov
jbe
insb
mov
or
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
outsb
mov
mov
dec
adc
shll
movsb
popa
jl
bts
sub
jl
mov
mov
jle
loop
xchg
fcoms
jo
hlt
shrl
jae
shll
inc
jle
popf
push
add
mov
out
dec
mov
cmp
sbb
sbb
add
stos
inc
or
das
pop
in
mov
leave
mov
lret
mov
fbstp
push
insl
movsl
pusha
mov
ds
add
int
movsb
dec
adc
add
out
fbld
bound
cmp
ss
inc
push
mov
roll
stc
jmp
ljmp
arpl
fistps
in
gs
scas
icebp
and
push
xchg
pop
loopne
sbb
adc
loopne
scas
std
inc
cmp
mov
xchg
add
mov
xor
lea
xlat
test
rclb
stos
sub
aaa
mov
pop
jmp
fdivl
fnstcw
out
in
add
adc
xchg
test
xor
imul
mov
push
mov
pop
pop
mov
mov
dec
jmp
cmpsb
jmp
clc
into
sub
ret
cmpsl
int
out
testl
push
inc
cmp
or
mov
push
shrl
xchg
mov
xchg
add
cmp
sbb
dec
mov
fs
lcall
jmp
rolb
push
out
lods
insl
hlt
cmc
mov
cmp
pusha
mulb
mov
lea
test
rorb
pop
xchg
bt
ja
inc
imul
jbe
int
popf
mov
add
mov
sub
rolb
and
xor
push
lods
sbb
mov
push
pop
xor
xchg
loop
ror
xor
mov
push
or
repnz
pop
dec
js
mov
cmp
std
mov
in
cmp
mov
lret
jo
mov
or
xor
push
sub
or
add
mov
mov
mov
fwait
mov
ds
and
mov
mov
sar
or
and
dec
daa
les
push
lods
xchg
inc
scas
jne
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
sbb
xchg
es
mov
mov
and
push
enter
in
mov
mov
aad
aas
cli
lods
adc
dec
jae
movsl
sbb
aaa
sub
push
pushl
pusha
add
loop
lods
repnz
and
pop
push
call
xchg
outsl
les
xlat
repz
jp
aaa
fsubl
mull
bnd
sbb
shrl
dec
mov
pop
icebp
cltd
ljmp
mov
inc
jl
lea
sub
mov
int3
add
call
out
push
add
fstpt
ss
mov
scas
mov
dec
scas
and
insl
dec
add
test
lds
mov
stc
sarb
push
mov
dec
js
adc
and
cmp
sub
pop
or
mov
jmp
push
push
aad
push
sbb
aad
in
scas
push
mov
jl
or
pop
push
and
imull
es
cmp
pop
adc
stos
sbb
inc
ja
cmp
pop
push
aad
rorb
test
xchg
pop
lock
jns
sub
loopne
hlt
in
mov
sub
push
notl
xchg
stos
rorl
imul
sub
fcompl
cmpsb
lods
cmp
arpl
push
aam
or
add
pop
inc
iret
sub
shlb
cmp
inc
sbb
mov
daa
aam
in
cmp
pusha
rcll
pop
dec
xchg
xchg
addr16
enter
cmp
nop
je
add
xchg
das
jmp
adc
arpl
movsl
dec
lea
mov
mov
inc
inc
shrb
mov
sahf
sbb
jl
dec
cltd
mov
sbb
pop
aas
lods
mov
aam
lea
in
rcrb
leave
jl
mov
cmp
aam
or
enter
les
shll
shl
pop
iret
cli
cmp
mov
and
loope
xchg
or
les
mov
jg
fidivs
dec
mov
pushf
mov
sub
add
xchg
rcrb
call
and
shll
fdivs
pop
sub
in
pushf
sub
push
rcrb
sbb
mov
xchg
mov
and
adc
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
cmp
fwait
mov
mov
and
adc
jle
dec
and
out
clc
inc
mov
or
inc
cmp
outsb
mov
mov
pop
lods
jecxz
lahf
mov
jg
movsl
mov
dec
cmp
sar
dec
pop
mov
sti
cwtl
popf
add
stos
lret
ret
daa
push
pop
fistpll
mov
fidivl
ret
push
xchg
sbb
stos
sub
cmp
push
mov
into
jle
jle
pmulhuw
sbb
cmp
into
fld1
lea
adc
mov
test
sub
sub
cli
loop
sub
mov
push
inc
lret
mov
sbb
imul
or
stos
out
scas
push
movsl
jg
mov
inc
clc
add
insb
frstor
or
xchg
ret
gs
pop
sub
inc
adc
mov
dec
in
push
in
je
push
mov
push
fmull
cmp
das
push
stos
adc
jne
fs
in
ret
rcl
sbb
mov
arpl
fwait
sub
out
xchg
cmp
lahf
mov
sub
inc
xchg
mov
mov
pop
pop
int
xchg
out
cmp
aad
movsl
jle
pop
mov
mov
adc
addr16
dec
adc
bound
inc
out
gs
cmp
pop
sbbl
push
jns
into
sarl
cmpsb
push
sub
adc
les
or
pusha
lea
into
inc
push
fwait
outsl
ja
cmp
pop
scas
inc
or
subl
jp
jmp
sub
fisubrl
fdivr
inc
pop
fbld
stc
adc
aas
xchg
fbstp
mov
jb
sti
les
sub
cmp
add
adc
scas
jmp
mov
das
sarl
sbb
and
dec
shrl
jbe
pop
jecxz
in
mov
adc
xchg
push
fmuls
std
lods
jne
push
push
xchg
sub
push
out
add
push
repz
adc
popf
adc
cmp
push
push
test
push
hlt
stc
dec
mov
xorb
aam
xor
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
mov
lahf
mov
mov
and
add
cltd
imul
es
leave
jns
in
cld
stos
lret
aam
lahf
cmp
int
pop
lahf
insl
arpl
jp
jmp
je
and
inc
xlat
xchg
and
divb
pop
dec
loopne
ja
push
xor
jb
add
xor
inc
cmp
jbe
in
jnp
adc
or
rcll
jl
xchg
jo
add
xchg
pop
push
test
repz
jg
xchg
ja
outsl
test
stc
push
xor
jnp
jmp
xchg
jbe
rorl
shlb
shll
orl
jb
ret
mov
jne
push
xor
insb
pushf
xor
cmpsl
rorl
int
add
scas
cmpsl
sub
mov
jge
sbb
js,pt
pop
hlt
enter
jmp
gs
sub
adcl
mov
lahf
or
jb
mov
jnp
pop
scas
and
xchg
or
pop
adc
inc
and
fwait
shll
sti
shrb
mov
xlat
pop
jp
push
pmuludq
cmp
jle
jmp
cmp
or
push
adc
sar
push
mov
sub
mov
mov
sbb
out
cmp
jecxz
fidivl
push
mov
push
mov
adc
shll
dec
and
inc
xor
stc
ja
inc
mov
xchg
sub
lcall
adc
mull
adc
dec
roll
sti
sbb
push
push
stos
leave
fisubrl
xchg
xchg
dec
jle
mov
arpl
insb
addr16
pop
mov
or
xlat
out
imul
push
sub
mov
scas
stos
and
push
push
es
inc
ret
or
xor
jne
cmpsb
test
push
testl
cmp
loope
dec
out
fcomps
in
mov
movsb
xor
sbb
int3
jno
neg
mov
jno
pusha
pop
sti
dec
jbe
in
mov
xchg
loope
imul
dec
push
jae
dec
aaa
mov
push
mov
mov
dec
mov
pop
and
sahf
dec
pop
cmpsl
into
out
jle
sbb
adc
jbe
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
lahf
les
mov
loope
xchg
icebp
mov
rcrl
stos
add
in
pop
mov
enter
sbb
pop
xchg
std
push
fdivrs
adc
rcl
pop
dec
inc
mov
outsb
aad
int3
stos
in
lds
mov
cmp
push
mov
sti
mov
mov
outsb
lods
jno
iret
aas
inc
mov
add
pop
sub
mov
test
jns
xchg
xchg
xchg
push
out
jge
xchg
jmp
test
mov
mov
aaa
mov
xor
fwait
adc
int
ficomps
and
adc
ljmp
xor
test
cmpsl
xor
loop
or
pop
clc
int
jmp
fdivrp
and
dec
pop
pop
das
or
xor
je
xchg
sbbb
inc
loopne
imul
test
movsl
sub
mov
pusha
fwait
xchg
icebp
iret
lods
das
cld
or
shll
movsl
leave
aaa
in
or
push
add
cmpl
pop
push
cmp
jp
jne
and
cli
jne
data16
adc
lock
mov
inc
dec
das
cmpsl
popa
push
and
pop
fwait
out
dec
in
lods
es
mov
cmp
pop
jb
mov
aaa
test
xlat
fldcw
sub
bnd
out
mov
inc
nop
xchg
ficoms
loope
cmp
dec
pop
xor
hlt
dec
push
std
shrl
xchg
jle
orb
out
jo
daa
mov
fcoml
mov
jne
cmp
xorb
lock
jle
cwtl
aad
push
mov
aam
out
xchg
add
inc
pop
cmp
in
sahf
out
fldcw
add
subb
mov
jne
cmpsb
dec
mov
test
mov
dec
cli
lret
add
and
xchg
icebp
jmp
addl
sahf
and
mov
inc
adc
scas
push
stos
sbb
mov
adc
adc
jle
shll
or
pop
mov
sbb
jno
iret
mov
xchg
fistps
insl
lock
xchg
push
and
mov
in
mov
call
mov
call
rclb
dec
jle
dec
push
adcb
adc
imull
mov
or
call
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
xchg
aad
mov
mov
pop
inc
rorb
xchg
xlat
pop
xchg
sub
jne
popa
mulb
and
sub
shl
int
rcrb
adc
test
rcl
mov
icebp
pop
jg
fnstenv
xchg
jl
iret
ljmp
dec
inc
gs
adc
test
cmp
mov
sbb
pop
lods
xor
jge
divb
jno
adc
ds
bound
and
fcompl
jno
sbb
cmp
jge
adc
mov
notb
push
mov
dec
dec
or
mov
jbe
add
dec
pop
or
mov
div
dec
dec
ret
or
jl
inc
mov
jg
std
dec
cmpsl
add
jb
imul
shrl
andb
icebp
cltd
xchg
pushw
inc
cmp
mov
test
fisttpl
mov
mov
loope
clc
or
jle
dec
in
imulb
int3
in
and
mov
lcall
pop
mov
mov
mov
adc
pop
xchg
testl
pusha
arpl
scas
mov
addl
cmpsl
fmuls
jbe
outsl
pusha
push
movsb
arpl
test
mov
and
cmp
test
push
outsl
sbb
bound
xchg
testl
mov
mov
adcl
das
add
dec
sbb
sbb
lods
cmp
and
mov
jnp
cmpsb
out
or
lret
ficoml
pop
and
fimull
mov
std
or
insl
inc
test
aad
ffreep
dec
shll
jl
jnp
jb
mov
scas
sbb
add
jns
das
and
popa
insb
or
xchg
sub
push
sti
fcomps
jecxz
pop
movsb
sbb
add
lock
stos
cmc
inc
sahf
std
dec
inc
mov
sbb
pop
xor
arpl
ja
testl
popf
dec
pop
test
cltd
cmpl
lock
adcb
or
les
push
lahf
mov
push
sti
shlb
jmp
sbb
into
xchg
inc
das
in
call
cmpsb
ficomps
sub
dec
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fldl
lock
test
mov
les
outsb
mov
mov
dec
ljmp
add
xchg
push
mov
pop
or
scas
pop
bound
jb
jnp
xchg
mov
mov
lahf
fwait
adc
inc
or
popa
cmc
xchg
sti
shll
stos
jl
and
and
subl
test
pusha
sub
add
or
adc
mov
loopne
fwait
pop
in
cmpsl
jmp
sub
mov
je
lods
inc
incl
out
jg
fwait
imul
out
scas
orb
mov
inc
cli
jl
fmull
data16
int3
dec
mov
mov
inc
les
push
mov
imul
popa
shlb
ffreep
aaa
dec
call
dec
mov
jmp
xchg
inc
inc
movsb
shrl
ljmp
push
lods
xor
push
mov
mov
xor
inc
arpl
call
rcr
fld
test
dec
sub
push
std
jg
loope
fdiv
mov
push
dec
cmpsb
jb
out
loopne
ss
mov
ret
sahf
nop
inc
in
cmp
fisubl
push
adc
test
add
pop
mov
xchg
mov
inc
push
pop
add
pop
or
sbb
and
shll
dec
xchg
in
hlt
test
int3
sub
mov
call
xchg
push
ljmp
mov
inc
out
and
aad
pop
add
out
out
in
hlt
jg
sbb
loop
ljmp
xchg
lea
and
xor
push
ds
push
ret
int
pop
or
add
shll
test
mov
mov
xor
int
cmc
cmp
mov
add
xor
cmp
aas
int
aad
iret
push
clc
shlb
cmp
cmp
push
mov
hlt
sub
add
fldt
sub
adc
jae
stos
lds
sbb
adc
fisttps
xor
stos
ljmp
popf
iret
adc
sub
jae
aaa
fisttps
mov
sahf
sbb
inc
stc
adc
dec
leave
lahf
sub
arpl
daa
aam
in
xor
in
or
pop
mov
mov
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
and
movsb
nop
lods
mov
mov
jg
push
ret
cmp
loop
sahf
outsb
imul
scas
test
mov
lahf
mov
adc
lock
mov
sarb
hlt
inc
cmp
rclb
aam
int
psrlw
psllq
ja
out
push
rolb
and
lods
or
cltd
jle
push
sub
in
xchg
enter
inc
ficoms
arpl
ljmp
lea
in
insb
xchg
cwtl
out
fimull
nop
push
ret
les
xchg
and
sbb
int
mov
jecxz
jecxz
push
and
jle
push
inc
decl
jno
mov
xchg
mov
mov
adc
adc
jbe
jmp
fxch
or
push
clc
imul
lahf
inc
jne
js
dec
and
rclb
pop
test
test
ficomps
xlat
loope
sbb
adc
and
dec
ljmp
mov
mov
mov
icebp
mov
xchg
push
mov
scas
je
jbe
cltd
adcl
cltd
adc
fidivl
scas
lds
adc
in
test
jb
rol
lret
mov
adc
std
dec
test
fdiv
test
stc
mov
shll
sbb
test
insb
pop
int3
repz
jl
xor
cmp
adcb
and
loope
xor
pop
jne
sbbl
das
sbb
subl
fs
adc
test
pushl
insb
or
and
pop
out
cmc
movsl
sti
jno
cmp
xchg
sub
imul
fildll
arpl
adc
mov
mov
aad
push
fistpll
cmp
mov
das
out
in
pushf
cmp
addr16
mov
sbb
xor
lcall
sbb
fdivrs
mov
push
xchg
testb
es
xor
hlt
add
sbb
loope
sarb
and
push
xchg
cmp
icebp
test
sub
loopne
dec
ja
pop
pushl
or
pop
mov
rorl
sbb
jne
jbe
scas
inc
repz
test
pop
ret
fs
cltd
cmp
jp
sbb
jno
ja
xor
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
in
lcall
mov
inc
cwtl
push
xchg
enter
dec
icebp
and
test
xor
or
cmp
adc
les
pop
repnz
negl
mov
mov
imull
movsb
fwait
xchg
fs
xchg
jmp
push
jle
insl
lock
push
mov
addl
dec
lret
cltd
subb
loop
xor
push
fstps
pusha
push
push
ret
cmpsb
jmp
sub
pop
icebp
lock
out
imul
outsl
jne
push
sahf
add
mov
sbb
push
or
xor
ffreep
scas
out
mov
ficoml
xlat
dec
shll
loopne
or
inc
insb
pop
xor
lahf
cmp
pop
loopne
jle
jmp
mov
adc
jno
sub
jl
xchg
in
lock
jne
outsl
fistl
pushf
jns
jecxz
jb
xor
xchg
or
in
pop
dec
data16
imul
jo,pt
mov
xor
inc
in
adc
push
mov
add
mov
sub
repz
arpl
mov
dec
icebp
addr16
xor
mov
mov
int3
sti
xchg
dec
lods
mov
cmp
ds
icebp
test
testb
pop
cmpsb
sub
mov
icebp
ds
imul
pushf
mov
jns
and
inc
jae
or
jne
fwait
jns
ret
inc
inc
pop
xchg
iret
adc
roll
and
movsb
push
daa
jmp
mov
mov
clc
loope
jno
mov
dec
rolb
push
xor
je
cltd
iret
cmp
fildl
aam
lahf
jnp
icebp
mov
mov
or
imul
sub
xchg
push
push
stos
lahf
movb
adc
data16
pop
imul
repz
sub
int3
aam
mov
lds
int3
ret
shl
xchg
scas
mov
mov
lock
inc
ss
ja
mov
push
aam
imul
outsb
or
lea
sbbb
mov
push
cmp
ja
inc
mov
add
jecxz
sahf
dec
sbb
in
cwtl
push
mov
dec
ss
sti
call
or
xchg
pop
dec
jbe
std
dec
shl
mov
xchg
and
jns
outsb
bound
out
inc
xlat
push
xchg
jo
jae
mov
jmp
and
ja
bound
ficomps
inc
adc
in
vpunpckhdq
das
fcmovnu
ss
mov
xorl
insl
inc
jge
pop
adc
movsb
push
push
inc
mov
pushf
jge
pop
mov
mov
or
das
mov
repnz
jmp
cmp
cmp
pop
aaa
jbe
in
test
ficomps
pop
fstl
and
lcall
repz
cmpsb
sbb
adc
inc
and
fwait
imul
popa
lahf
loope
mov
jmp
xor
xchg
add
push
and
or
adcb
int3
xchg
lock
lock
fsubl
sbb
loope
pushf
add
sbb
or
bound
xor
xorb
out
inc
or
add
mov
xor
pop
dec
cld
sbb
lods
arpl
rcrl
dec
sbb
xor
ret
push
test
repnz
cld
ret
add
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
sub
or
xchg
les
fcompl
aas
xor
dec
fs
outsl
fs
clc
loope
add
rcrl
xchg
ja
fdivrs
std
mov
leave
imul
push
insb
fadd
leave
pop
mov
ljmp
in
popl
leave
sbb
add
jno
loop
popf
and
loopne
mov
or
push
sti
push
sbb
gs
mov
push
sti
or
negb
push
and
pop
and
cmp
mov
lods
cltd
pop
pop
fbstp
dec
mov
and
lcall
rcrl
stos
int3
ds
xor
sub
xor
movl
stos
es
nop
mov
rcrl
sub
outsl
cmp
and
and
imul
sub
lea
jb
lahf
test
shl
cmp
roll
jnp
stos
mov
mov
fcomps
push
and
adc
mov
stos
shll
inc
stos
je
fnstsw
sbb
lret
shrb
adc
inc
nop
into
xor
dec
push
mov
pusha
inc
popf
xor
fwait
pop
jp
popa
jno
jno
pop
xchg
popa
ja
or
mov
pop
push
inc
test
add
cmc
es
scas
add
aaa
dec
pop
adc
sub
popa
aad
sub
mov
mov
les
sarl
nop
loopne
push
js
push
es
cmp
scas
pop
mulb
out
jbe
outsb
push
rcr
push
fistl
sbb
subb
fbstp
out
sbb
sahf
pop
add
test
mov
add
out
dec
fistps
loopne
rcll
mov
fs
xchg
leave
pop
imull
push
or
cmc
sub
bound
xor
pusha
sub
inc
and
cli
popf
pop
mov
push
outsl
jl
rcrl
xor
dec
inc
push
into
add
adc
fldt
ret
test
flds
jg
dec
sbb
sbb
cli
mov
cmp
addr16
add
xchg
vzeroall
mov
ds
or
jae
sbb
lods
cmc
xor
or
cltd
jb
adc
mov
inc
inc
test
pusha
xchg
out
jns
sbb
pop
lds
repz
enter
mov
cmp
pop
clc
sbb
cmc
dec
incb
sub
sub
test
sti
jl
outsb
dec
mov
sbb
mov
xchg
clc
cmp
push
lea
mov
mov
push
out
mov
push
push
sub
lods
cmp
shr
lds
push
sarb
cmc
sbb
popf
ja
mov
cmpsb
and
mov
repz
xor
mov
mov
inc
push
push
sbb
js
imull
arpl
sti
sbb
pop
sbb
adc
icebp
sub
mov
fcoms
aam
out
testb
push
mov
lea
inc
std
popa
repz
mov
out
dec
addr16
pop
icebp
into
insl
push
prefetch
or
mov
orl
addl
pop
stc
gs
mov
mov
inc
pop
int3
in
scas
push
sub
jge
gs
loopne
adc
mov
in
movsb
aad
mov
clc
add
loope
ss
xor
lds
sub
mov
call
add
jp
xor
dec
push
inc
outsb
sub
pop
pusha
mov
xchg
jnp
xor
movsb
jns
rorb
sbb
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
movsb
inc
mov
mov
das
adc
out
xchg
sbbb
cmp
mov
xchg
inc
jne
adc
pop
push
mov
xor
add
mov
addb
sbb
cld
test
bound
leave
cmp
jns
movsb
aad
add
cmp
lods
cmp
and
incl
sub
repz
push
mov
sub
into
imul
jae
out
xchg
mov
lods
push
cmpsb
cmpsl
dec
fbld
xor
stc
test
xlat
icebp
pop
mov
stos
push
pop
jnp
mov
sti
fcomps
rcl
mov
hlt
arpl
lods
and
data16
mov
jns
in
mov
sbb
dec
mov
scas
xor
cmp
dec
jecxz
pop
in
adc
cs
pextrw
test
and
faddl
outsl
xor
pop
mov
aaa
dec
fstpt
shl
add
mov
addr16
fwait
cs
or
jae
adc
aad
xchg
scas
aad
xchg
add
imulb
push
jmp
bswap
mov
imul
sub
mov
iret
lods
aaa
cmpb
and
mov
adc
jp
inc
mov
mov
adc
mov
aam
outsl
xchg
jecxz
jbe
sbb
loop
pop
mov
lret
test
push
and
adc
mov
std
leave
inc
movsl
outsl
arpl
sub
mov
xchg
jns
popa
stos
and
sahf
or
inc
pop
pop
ret
out
mov
xchg
jle
pop
adc
shlb
cmp
ffreep
dec
scas
or
xor
insb
pushf
inc
pop
mull
pop
ljmp
out
pop
inc
pop
mov
pushf
xchg
sti
nop
nop
push
sarl
mov
fdiv
shr
out
adc
fs
push
dec
mov
ljmp
mov
mov
dec
rorl
add
mov
push
jns
daa
shl
sarb
dec
icebp
jmp
lods
dec
jmp
push
or
dec
inc
cmp
setns
fisttps
icebp
xchg
andb
xor
xchg
lock
cmpsl
mov
gs
push
and
daa
mov
dec
xor
popf
in
in
jne
jecxz
mov
ds
cmp
les
les
pop
mov
and
test
data16
fldenv
in
in
lods
stos
outsb
mov
sub
imul
push
daa
push
fwait
add
sub
fmul
inc
test
mov
mov
mov
dec
loope
jo
or
adc
stos
mov
cltd
inc
ret
sbb
pop
dec
inc
scas
add
mov
or
enter
adcb
popf
lods
flds
adc
fcmove
xchg
nop
popa
fcoms
inc
mov
lods
dec
mov
mov
jbe
cmc
xor
outsl
jno
movsl
pushf
push
rolb
dec
divl
jne
and
testl
or
pop
rolb
dec
and
je
out
inc
lods
sbb
aaa
or
ror
aaa
sub
jge
mov
sub
sti
fldt
push
add
mov
jnp
mov
imul
push
cmpsb
and
ret
inc
out
mov
loopne
js
jl
test
lock
int
imul
push
pop
cmp
xor
aad
mov
mov
mov
cs
add
jp
add
data16
addl
scas
stos
lods
loope
mov
xor
jo
sti
xchg
movsb
daa
rclb
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
rcll
iret
mov
mov
in
aas
call
xor
ret
and
imul
pop
scas
adc
js
cmp
and
jnp
dec
ret
add
cmpsb
xlat
andl
jecxz
xchg
push
cli
mov
cmp
jg
out
mov
add
pop
push
sub
shlb
sub
pop
sub
clc
loop
mov
push
in
cmp
daa
jg
dec
push
mov
or
in
fidivs
in
add
sub
cmp
icebp
mov
sbb
cmp
lods
jae
ret
movsl
cltd
insl
out
rorl
dec
push
pop
minps
pop
out
xor
add
js
jns
and
stc
and
jl
pop
push
lahf
mov
jb
adc
sbbb
mov
lock
xorl
jns
cmp
out
lds
pop
cmp
stc
in
xor
cld
push
aam
loop
push
xchg
cmp
cmc
ljmp
adcl
es
inc
lcall
sbb
xchg
mov
repz
mov
lcall
add
adc
push
jl
repnz
jne
aam
sbb
aam
inc
clc
dec
push
mov
sub
dec
pushf
mulb
mov
out
loopne
push
jns
or
mov
xor
cmp
rcrl
and
testb
jp
ret
inc
inc
lock
insb
lret
out
sub
mov
ret
lcall
test
imulb
sbb
lcall
outsb
jmp
cs
pusha
add
in
and
ljmp
shl
int3
out
dec
pop
leave
ja
push
cmpsl
and
push
add
or
push
pop
outsb
xchg
jnp
push
testb
push
xchg
push
adc
lods
insl
and
pop
push
imul
cmp
stos
test
push
push
cld
fs
sahf
lock
sub
push
dec
vcvttss2si
push
mov
ret
xor
decb
arpl
cmp
nop
and
ret
addr16
mov
cmc
fstps
mull
imul
pop
push
xlat
push
mov
into
fucom
jge
cmp
fisubrs
xor
push
sbb
dec
js
xchg
push
xchg
cmc
add
cli
repz
push
rcrl
fcomi
pop
inc
xor
int3
decb
xchg
mov
ljmp
sbb
pop
cmp
mov
adc
mov
push
mov
xchg
outsl
adc
lea
addr16
add
aad
jo
jo
inc
dec
inc
inc
inc
dec
dec
inc
push
mov
aam
cltd
shll
sahf
dec
push
pusha
mov
into
addl
mov
or
push
dec
jecxz
cmc
sbb
rcrb
imul
in
mov
pop
fnstenv
jl
ja
pop
xchg
lods
sub
aam
mov
inc
xchg
stos
add
xor
aam
fimull
sub
stc
aaa
lret
sti
jno
jp
jae
inc
mov
jae
orl
gs
jmp
lods
in
xor
push
mov
mov
fisubrl
xchg
jbe
dec
jge
xchg
cmp
sahf
int
das
xor
mov
jmp
popf
sub
inc
dec
push
fdivrl
jne
xor
push
mov
xor
cmp
test
adc
dec
lds
das
or
adc
std
cld
movl
lea
dec
repz
outsb
movl
movl
mov
jmp
fisubrl
mov
or
sub
jmp
les
fistpl
dec
std
inc
lods
jl
xchg
outsl
cmp
std
adc
mov
and
sub
insl
paddd
rorl
arpl
imul
sbb
adc
dec
mov
les
xchg
mov
push
mov
push
adc
or
outsb
pop
mov
mov
jg
cmp
push
int3
daa
xchg
mov
push
mov
scas
movsl
outsl
adcl
mov
in
ja
adc
and
icebp
andb
mov
in
movsl
cld
in
rcrb
mov
sbb
test
leave
cmpb
test
mov
adc
add
lret
adc
cmp
lods
xchg
dec
loop
pop
cmp
jle
lcall
push
iret
or
add
mov
outsb
arpl
inc
mov
fbld
pop
xchg
inc
bound
jnp
mov
inc
mov
sub
cli
pop
adc
hlt
inc
or
call
inc
cmp
pop
sub
mov
pop
cmp
andl
cmpsl
xchg
sbb
imul
sbb
lock
stos
lret
cli
leave
in
sti
icebp
sbbl
and
fmull
xor
mov
cltd
fwait
push
movsl
cmp
inc
adc
add
adc
jecxz
jno
or
int
mov
sahf
jae
mov
inc
dec
repnz
sub
mov
jno
push
adc
cmp
insl
and
sti
pop
xor
in
lret
out
jns
sub
rol
imul
sub
fs
mov
jle
imul
cmp
push
xchg
mov
pop
adc
jg
xchg
arpl
xor
jecxz
push
lods
dec
fdivp
push
in
jns
sti
mov
pop
or
pop
or
test
loop
jg
aas
dec
push
mov
jp
add
mov
out
dec
dec
add
shl
lods
xor
jns
xchg
into
mov
in
insb
pop
mov
sub
pop
loopne
mov
xlat
push
into
cmc
adc
pop
pop
and
dec
or
mov
out
sbb
cmpl
pop
hlt
cmp
push
ret
push
mov
xor
ror
mov
fnstsw
jge
ja
gs
fnstsw
cwtl
dec
xchg
jae
mov
ffreep
add
inc
das
mov
push
pop
inc
push
sub
pop
pop
shlb
arpl
pusha
cmp
cs
mov
add
lret
inc
inc
jae
or
lcall
call
cwtl
loop
fsub
inc
xor
rorl
mov
push
cmp
xchg
jo
lods
in
ret
mov
cmp
sahf
xchg
je
add
das
dec
sbb
pop
ds
inc
push
inc
push
mov
pop
test
jnp
in
pop
lea
add
cmp
bound
sub
xor
or
or
sub
cmp
aad
jecxz
jle
cs
lret
shl
pop
aad
xchg
lret
mov
cli
xor
xlat
lahf
test
mov
aas
into
out
push
out
sub
ljmp
sub
rcr
cmp
daa
and
rclb
add
mov
dec
adc
mov
movsb
rclb
pushf
out
and
mov
add
inc
xor
sahf
test
xor
in
mov
mov
pop
lods
mov
cld
cmpsb
jb
dec
sub
add
and
or
xchg
jg
pop
jl
jbe
pop
pop
fnstenv
dec
adc
jne
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
adc
xchg
les
xchg
ficoml
mov
imul
cmp
sti
or
xchg
ss
push
pop
scas
dec
das
adc
movsb
insb
pop
cs
push
mov
outsb
push
cmp
jns,pt
and
jns
mov
lds
jge
sbb
out
push
int3
pop
cmpsl
pop
pop
stos
nop
jecxz
movsl
dec
mov
sti
cmp
or
cli
cmp
mov
add
add
cmp
jecxz
sahf
pushf
add
lods
arpl
xor
or
jge
and
jecxz
pop
insb
mov
mov
addr16
sahf
push
pop
xor
cli
loopne
mov
lcall
ret
pcmpgtw
mov
icebp
cltd
cmovb
ret
xchg
imul
mov
hlt
xchg
mov
cmovns
shll
xor
inc
or
mov
lds
fwait
and
and
loope
sti
mov
and
popf
mov
call
jl
inc
add
or
and
fnstenv
push
push
sbb
divb
mov
xchg
cmp
test
daa
aad
mov
push
add
cmpps
shll
push
mov
add
xchg
in
and
fstpt
xchg
push
pop
bound
cmp
push
outsl
push
xchg
xor
adc
inc
jmp
fucomp
das
or
xorl
mov
call
pop
sub
loope
addr16
xor
lds
mov
call
call
bound
dec
xor
or
fnstenv
les
mov
aas
and
add
xor
or
jae
jbe
cmp
add
dec
popf
or
lcall
ret
fisubrl
jmp
cmpsl
mov
jno
jbe
cld
mov
pop
dec
push
scas
lods
insl
loope
fadds
dec
dec
inc
pop
inc
mov
sub
sbb
sub
pop
pop
jne
xchg
inc
cwtl
pop
in
lret
jne
xor
mov
sub
js
mov
mov
dec
test
jmp
xchg
dec
pop
or
aas
loop
xchg
sub
xchg
xor
sbb
jp
push
lret
test
and
inc
insl
xchg
mov
mov
xchg
lcall
repz
jge
icebp
scas
mov
cwtl
dec
fidivl
xor
scas
dec
mov
bnd
popa
and
popa
lock
or
imul
sbb
rcrl
mov
add
xor
cmp
in
and
je
movsb
bound
rol
mov
int
in
mov
stos
mov
fcomip
push
or
cmpsl
mov
push
mov
pusha
pop
push
popa
pop
xor
lods
std
loope
adc
push
pop
aam
mov
push
xor
mov
push
loop
mov
in
sbb
sbb
sub
inc
es
xchg
sarl
daa
mov
int3
inc
repz
rcr
xor
dec
push
push
cmp
nop
add
mov
lea
and
loop
rcll
and
adc
mov
add
lcall
cmpsb
push
jo
fstps
and
jo
cmp
test
shll
mov
daa
sub
cmp
dec
scas
push
xchg
fs
cmp
and
pop
inc
fcoms
aad
jl
lahf
rorl
in
out
lock
pop
lods
in
dec
pop
add
add
rcrl
and
fiaddl
shlb
and
xchg
cmpsb
jnp
call
xor
icebp
dec
ds
ret
lock
inc
loopne
rcrb
push
in
inc
andb
mov
add
inc
xchg
adc
add
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
cmp
loope
xchg
out
mov
pop
cld
push
les
push
int
popf
dec
jbe
mov
mov
add
inc
sbb
mov
test
cmp
lds
sbb
cld
cltd
loopne
imul
push
add
insl
psadbw
loopne
mov
push
imul
mov
jns
mov
push
lods
jecxz
or
fs
lret
mov
dec
push
xor
mov
int
lret
je
or
or
ljmp
cmp
mov
push
and
test
xchg
aas
in
loope
jge
mov
sub
xchg
inc
cmpsl
bsr
push
jo
leave
mov
call
je
movsl
stc
dec
or
es
xchg
xlat
into
jno
dec
and
jmp
pop
push
outsb
xchg
pusha
lods
dec
imul
push
adc
roll
repnz
mov
sub
adc
xchg
xor
and
xor
frstor
jecxz
add
xchg
push
testb
test
dec
mov
cmp
adc
test
jmp
mov
clc
jge
jge
lret
arpl
inc
mov
mov
roll
imul
sbb
out
sub
adc
xchg
jecxz
pop
mov
movsb
jbe
rorb
cmp
lcall
lret
jne
lcall
gs
clc
stc
push
rorb
or
dec
and
nop
pop
notb
popa
notl
mov
and
insl
loope
and
adc
push
leave
fcmovb
xchg
xchg
pop
sub
xchg
xchg
xchg
add
mov
pop
mov
cwtl
lret
rcrb
mov
xchg
aam
mov
jle
sub
cld
inc
movsb
pop
inc
arpl
negl
outsb
dec
lret
xor
bound
push
xor
push
dec
mov
pop
xor
outsl
mov
cmpsb
les
add
xor
sti
xorl
adc
in
pop
or
xor
jns
pop
jl
xor
js
je
mov
cmp
insl
or
out
std
shr
push
pop
inc
lods
leave
enter
or
cmp
addr16
adc
int
fldenv
std
and
and
mov
and
idivb
sbb
dec
cmpl
nop
daa
or
cmp
das
cltd
sbb
push
add
testb
test
test
stc
cwtl
cmp
lret
jae
out
mov
iret
test
je
js
in
cmp
lahf
iret
push
mov
lahf
ja
out
fidivl
lahf
cmp
sub
rcrl
ret
mov
mov
int
stos
jl
cmp
jmp
in
sbb
mul
xor
mov
cmp
test
pop
jle
jae
inc
sub
or
inc
bswap
fs
or
add
xchg
or
das
test
pop
das
xchg
sti
pop
fwait
mov
test
sbb
mov
jne
pop
in
loop
push
repz
cs
adc
daa
jno
loope
jne
fdivs
sub
jnp
inc
mov
sub
icebp
je
mov
repz
fidivrl
hlt
push
rolb
outsb
ss
jb
pusha
pop
push
cmp
adc
xchg
sbb
ja
mov
add
jnp
dec
add
fdivr
adc
and
shrb
gs
add
push
jg
test
pop
in
sub
xor
or
dec
les
mov
jmp
pop
mov
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
sahf
hlt
iret
gs
mov
arpl
mov
inc
out
xchg
in
push
mov
pop
pop
push
or
hlt
negl
aam
mov
in
xchg
lret
and
or
push
test
test
imul
cmp
dec
lock
aam
push
ljmp
movsb
push
ret
pop
mov
mov
mov
data16
or
jno
jne
mov
lcall
mov
adc
imul
xlat
hlt
mov
add
mov
sub
xchg
aad
out
push
mov
cmpsl
jg
adc
mov
mov
lahf
sub
fidivrs
mov
pop
inc
push
pop
mov
jmp
sub
test
pop
f2xm1
lcall
push
lea
mov
dec
hlt
lea
adc
xchg
iret
inc
cmp
jecxz
push
mov
out
xchg
stos
in
jp
cmc
or
mov
mov
adc
fwait
popf
sahf
les
adc
mov
call
xlat
int3
outsb
dec
sub
dec
cmc
out
adc
imul
sbb
adc
add
xchg
push
shl
int3
and
test
jae
pop
repnz
cmpsb
ret
stc
sti
or
inc
push
push
pop
cld
and
jnp
lret
sub
xchg
mov
fs
mov
cltd
push
incb
mov
pop
mov
cltd
enter
mov
fwait
inc
mov
mov
imul
fwait
in
rcl
ret
shll
add
adc
pop
push
dec
sub
cmp
in
in
ds
leave
mull
dec
pop
repnz
fmuls
les
inc
out
mov
pop
lock
cmc
add
sti
sahf
cmp
add
insl
fisttpl
push
lret
hlt
xor
orb
fwait
mov
mov
out
rcrl
cli
outsb
das
jecxz
hlt
ja
push
jg
adc
sub
cli
mov
stc
loop
push
sahf
pop
and
test
lds
out
insl
sbb
mov
pop
push
jmp
data16
out
mov
aas
hlt
aaa
add
mov
pop
pushf
sub
aaa
pop
out
cmc
add
inc
jl
mov
je,pt
divb
cmp
xor
xchg
dec
imul
xor
fimuls
add
testl
cwtl
xor
mov
push
mov
mov
add
loope
icebp
inc
lods
or
cmpsl
mov
fistpll
lock
jp
ficoml
xchg
mov
shl
inc
dec
lcall
xchg
cmp
lods
lahf
rorl
cmc
ss
nop
xor
out
sti
mov
and
xchg
fsubl
sbb
mov
dec
push
cmc
sub
adc
inc
mov
roll
push
sti
mov
ss
fadd
int
scas
stos
jg
cmpsb
and
jnp
mov
push
xor
stc
adc
cmpb
insl
ljmp
pop
inc
icebp
cmpl
pop
mov
xor
cmc
hlt
xor
adc
sub
and
mov
cmp
pushf
rcll
filds
sar
pop
iret
icebp
lcall
jae
int
inc
sub
xlat
dec
fcoml
jne
mov
fwait
and
mov
out
shlb
and
mov
xchg
sub
stos
push
mov
cli
test
sbb
jl
pop
rclb
std
faddl
ja
and
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
rcrl
clc
mov
mov
dec
dec
cmp
sbb
std
inc
mov
pop
fdivs
loopne
cs
js
aad
cmp
push
lret
js
push
clc
scas
xchg
inc
inc
enter
sbb
jo
jp
add
push
mov
xor
sub
push
push
mov
nop
sbb
ljmp
sbb
lock
addb
dec
shll
xor
mov
push
dec
xor
test
ds
xchg
fdivrl
cmpsl
push
lcall
bound
fsubl
test
into
inc
and
aas
mov
fistps
ret
insb
add
xor
push
fs
sub
cmp
iret
sbb
xor
cmp
push
push
aaa
push
int3
cli
jb
cmpsb
and
xor
loopne
and
add
jmp
and
daa
push
dec
add
xor
fists
ds
les
ss
je
xor
nop
mov
in
cmpsb
sti
adc
cltd
stos
loop
hlt
mov
xchg
mov
push
out
or
pop
clc
add
outsb
mov
gs
dec
dec
cmp
inc
fists
call
push
or
xor
cmpb
xchg
movsb
sbb
xorb
dec
aam
popf
imulb
enter
xchg
cmp
mov
mov
iret
push
negl
cwtl
mov
mov
push
into
mov
mov
hlt
sahf
insb
push
cmp
pushf
xor
jle
mov
or
xchg
pop
nop
inc
mov
ljmp
inc
inc
stos
les
and
clc
les
fistl
call
ret
loopne
sub
xor
outsl
in
dec
sub
repz
sbb
testb
sub
fcmovnbe
jns
rorl
fisubrs
roll
enter
mov
icebp
inc
add
pushf
ds
fmul
pop
cld
xor
pusha
jb
aam
shll
loop
and
xlat
adc
and
add
mov
stos
repnz
cltd
cmp
sbb
mov
hlt
dec
jno
repz
mov
mov
adc
mov
neg
push
mov
cwtl
xchg
mov
bswap
dec
add
outsl
outsl
cld
jns
popa
fisubl
dec
push
add
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
aas
mov
mov
mov
cmp
dec
fst
movsb
shr
jle
mov
inc
xchg
push
mov
push
mov
int
imul
data16
insb
push
sbb
push
jbe
fdivs
jae
push
mov
sub
cmp
cltd
fdiv
iret
adc
add
imul
sub
jge
xor
mov
jno
sbb
ret
pop
mov
or
pop
mov
sbb
add
cmp
incb
mov
sti
push
mov
mov
repz
and
jno
and
mov
push
cwtl
in
xor
mov
orb
arpl
and
shl
fnsave
std
jo
sarl
dec
cmp
push
leave
mov
dec
add
data16
aam
jecxz
pop
out
xlat
jo
outsb
or
leave
iret
inc
stos
shrb
clc
cmp
sub
cmpsb
jo
or
sub
fiaddl
jae
outsb
push
out
xchg
loope
add
push
jo
movsl
inc
push
adc
adc
and
adc
adcb
insb
call
inc
imul
movsl
inc
stos
cltd
fidivs
dec
lret
xor
and
xchg
add
shr
add
bound
jg
push
dec
mov
dec
subl
lret
jg
into
add
and
mov
iret
pop
jl
adcb
adc
in
arpl
jne
addb
jle
jmp
ret
cmp
jge
cmp
pop
into
mov
shlb
xchg
roll
nop
adc
mull
fs
imul
out
repz
call
push
mov
mov
sbb
stos
sub
inc
inc
xor
in
adc
and
insl
out
cmc
lret
dec
subl
push
xor
mov
leave
pop
mov
xchg
inc
in
mov
sbb
addb
rcr
cli
test
xchg
or
pop
inc
or
movsb
pusha
mov
pop
xchg
pop
ja
lcall
loop
lods
call
add
sarb
push
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
aaa
mov
mov
mov
push
sbb
pop
mov
dec
jg
mov
push
mov
fstpl
test
push
imul
pop
shll
int
in
xor
xor
mov
fcmovnbe
test
les
cld
loopne
or
loope
es
jae
sarl
mov
push
pushf
xor
sbb
testl
ja
adc
scas
jno
push
icebp
sbb
jge
sti
jg
popa
mov
ds
sub
das
jnp
fs
pop
mov
pop
daa
jno
fimull
mov
rol
xchg
in
leave
js
out
mov
fildll
repz
repnz
xor
cmpb
loope
mov
loope
movsb
and
mov
adc
das
je
ret
or
std
pusha
mov
ljmp
pop
test
rcrb
mov
jle
sbb
xchg
and
dec
sbb
ss
mov
jle
mov
out
or
outsb
xchg
sub
cmp
lods
push
das
inc
movsb
shrb
test
rep
in
leave
lds
fimull
jno
push
aad
dec
out
mov
jae
or
mov
nop
pop
ret
adc
notl
mov
gs
mov
dec
je
imul
inc
es
and
push
cld
mov
movsl
movsl
mov
cmp
push
fisttpl
outsl
and
jg
push
sub
sbb
push
iret
imul
add
loope
sbb
shr
jbe
or
pop
sub
xor
jmp
popa
hlt
xchg
fistl
adc
add
mov
adcl
fcom
in
imul
int3
push
int3
aas
xchg
out
icebp
aam
scas
das
ja
leave
or
lods
xor
lahf
sarb
shr
imul
loope
sub
xor
or
leave
sti
mov
pop
adc
gs
lret
pop
mov
shll
mov
outsb
scas
sbb
addr16
or
push
and
sbb
jno
add
dec
cli
jp
in
push
xor
cmc
jl
jne
adc
or
in
call
stos
loope
dec
and
aad
mov
mov
cmc
sbb
inc
enter
adc
hlt
shlb
push
pop
cld
lahf
adc
cmc
and
shlb
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
frstor
js
int
mov
mov
leave
cmpsl
outsl
xor
mov
or
fldcw
addb
sti
add
dec
ret
ljmp
loop
inc
bound
sahf
aaa
xchg
fistl
sarb
inc
pushf
pop
push
add
cmp
xchg
xchg
or
sbbl
cmp
int3
mov
or
dec
imul
sub
lods
xchg
stc
push
fdivrl
mov
pop
jp
scas
inc
mov
push
cmp
lahf
inc
pop
aad
aas
push
mov
sbb
jmp
sbb
or
fnstsw
dec
mov
leave
mov
scas
sar
dec
pop
out
pop
push
inc
lods
inc
scas
aaa
negl
lods
aam
sarl
js
ss
jecxz
adc
adc
mov
inc
inc
cwtl
cwtl
or
lcall
adc
inc
adc
lcall
sbb
xor
leave
cmp
notb
inc
sub
mov
xchg
xchg
cmp
pushf
aaa
xchg
outsl
xor
and
jle
in
icebp
test
mov
out
icebp
stos
mov
sbb
pop
sbb
jge
sbb
daa
push
fnstenv
out
mov
repnz
in
je
cli
xchg
int
les
gs
mov
dec
dec
xchg
cmp
enter
xlat
xor
xor
icebp
xchg
xor
hlt
nop
dec
repz
inc
xor
andb
roll
jecxz
stos
xchg
xchg
pop
mov
pop
sub
clc
ficompl
inc
imul
pop
or
push
mov
fistps
xchg
outsl
aaa
bnd
scas
mov
rorb
ja
notb
cmpsl
test
mov
push
sub
in
dec
pop
sub
adc
add
cli
inc
push
mov
sub
fcmovnu
sub
cmp
adc
or
divb
mov
popf
mov
sbb
xor
inc
cmc
or
repz
mov
fdivs
mov
clc
in
sub
jmp
das
in
jne
mov
pop
inc
push
or
andl
push
jl
dec
pop
shr
cli
add
lahf
and
stos
add
xchg
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
nop
stos
or
mov
nop
inc
adcb
outsl
inc
dec
inc
pop
call
cmp
mov
test
dec
fistps
cmp
loop
mov
add
andl
jbe
je
mov
outsb
mov
fiadds
pop
push
arpl
loop
aam
fldcw
cmp
mov
sbbl
jle
jae
daa
xchg
push
in
call
jnp
andl
jl
call
lea
out
les
adc
cmc
inc
push
pop
adc
mov
cmp
sub
addb
jno
addl
hlt
and
aad
inc
scas
jge
es
add
add
mov
shr
xchg
push
push
test
test
aaa
push
lret
and
insl
jo
sub
clc
imul
inc
fmul
adc
inc
aad
pop
lods
cs
lods
gs
test
sub
lcall
outsl
cmp
outsb
pop
xchg
xchg
adc
pop
shl
or
sbb
fs
imul
and
cli
orb
pop
out
ret
mov
push
push
jae
mov
in
sub
xchg
xor
or
pusha
ss
fisubrl
pop
push
test
mov
outsb
nop
stos
adc
xchg
add
mov
and
xor
movsb
xor
push
repz
or
xchg
sub
clc
mov
shlb
add
mov
pop
shrb
dec
adc
mov
jbe
jmp
sbb
fstpt
or
pop
pop
add
xor
js
inc
fcom
mov
hlt
jle
inc
pop
daa
adc
cmp
push
movsl
cmp
or
int
call
icebp
popa
jbe
gs
sti
lahf
cmp
scas
sbb
leave
xor
dec
jl
jb
addb
mov
add
fstps
xor
inc
jle
add
aaa
add
push
movhps
insl
pop
xchg
mov
jae
ror
cmp
int3
inc
and
mov
dec
rclb
lret
stos
pop
jecxz
repnz
pop
out
pusha
lret
lods
sbb
movsl
movsl
loopne
inc
pop
bound
xor
aad
add
lret
cltd
or
pop
dec
dec
mov
test
xchg
movlps
fistpll
stos
mov
les
lock
filds
jno
push
dec
daa
aad
pop
xchg
pop
adc
push
xor
sub
xchg
add
sahf
inc
in
jle
and
stos
call
dec
and
push
lods
push
outsl
xchg
jl
inc
stc
add
lock
inc
lret
scas
aaa
and
roll
mov
mov
pop
adc
inc
fdivrl
scas
push
and
sub
insl
fwait
lret
jne
rorb
xchg
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
js
leave
movsb
in
adc
mov
fstl
jp
dec
lods
lahf
sub
adc
pop
movsb
rol
mov
pop
insb
xchg
sarl
jmp
jl
xchg
aaa
pop
jle
aam
aad
jo
rcrb
dec
xchg
mov
nop
sbb
int3
aam
imul
stos
aam
mov
hlt
iret
push
mov
sahf
sbb
test
add
gs
and
dec
sbb
or
jne
mov
pop
sub
sahf
jnp
mov
adc
fld
sbbb
rcrb
sub
je
loope
mov
outsl
push
mov
dec
sahf
and
lds
rol
imul
cltd
inc
jae
inc
xchg
or
adc
sbb
out
xor
jns
je
daa
mov
in
mov
or
jne
int
inc
mov
inc
mov
push
test
sbb
ret
xor
clc
jo
mov
lds
imul
xchg
mov
dec
xlat
pop
fs
mov
int3
dec
xor
je
or
push
ret
rorl
lds
mov
data16
add
dec
rorl
add
popf
or
ss
ret
mov
jg
out
out
jp
js
outsb
imul
stc
mov
jns
popf
imul
jecxz
scas
pop
idiv
imul
push
jmp
push
add
fwait
sbb
xchg
rcrb
fsubrl
popf
mov
add
out
cmp
movsb
loopne
mov
stos
xchg
orl
push
xchg
idiv
fbstp
xor
fdivrs
ljmp
push
out
test
xchg
lods
scas
aas
xchg
imul
or
stc
mov
mov
adc
in
mov
push
and
jecxz
dec
adc
sahf
lret
xchg
xor
fsubrl
ss
dec
call
scas
mov
outsl
and
testl
xchg
cmpsl
lods
sarb
jbe
repnz
stc
and
jns
ret
push
xchg
jnp
cmp
into
mov
rclb
dec
and
cmovb
lock
mov
ds
sbb
jo
inc
gs
les
cmp
clc
mov
pop
fnsave
aaa
mov
jbe
cmp
xorb
or
out
and
push
insb
subb
test
fwait
roll
adc
aam
jae
faddl
cmp
icebp
ljmp
adc
mov
xchg
in
pop
or
push
imul
inc
ret
cltd
sbb
dec
lds
sbbb
out
cmp
lret
dec
imul
lret
jb
dec
sub
lds
push
pop
ds
clc
loope
sbb
sub
push
cld
mov
insb
incb
fildll
fs
jge
imul
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
ss
shll
sbb
mov
and
sahf
jmp
mov
xlat
xor
stos
sub
cmp
push
dec
cld
shl
xlat
in
jp
xchg
jg
call
inc
mov
adc
xor
jns
xchg
aam
ljmp
and
imul
cmp
pop
jo
mov
jb
pop
aad
in
fwait
loopne
out
es
adc
pop
js
fs
push
loop
jmp
pop
imul
jae
pop
sub
mov
out
lods
add
jb
aaa
and
push
mov
ret
js
sub
out
mov
and
adc
in
pop
sub
mov
xchg
gs
mov
cmp
pop
push
mov
or
and
leave
xchg
and
js
ret
call
adc
jnp
inc
imul
mov
les
mov
jl
mov
pop
jns
outsl
pop
push
call
mov
popa
mov
ret
iret
and
jmp
jo
jb
dec
mov
test
orb
mov
and
fsubl
mov
nop
callw
sub
add
lcall
fwait
arpl
xchg
or
cmp
out
out
mov
or
insb
sbb
or
shll
pop
push
das
adc
clc
jbe
inc
cmpsb
sbbl
cmc
push
outsb
add
aam
jns
dec
mov
pop
js
mov
leave
adc
or
sbb
fcmovnu
nop
pop
adc
pop
xor
mov
cmc
inc
adc
pop
in
inc
testl
mov
subb
fs
ficoms
adc
xchg
pusha
or
cld
xchg
inc
xchg
or
scas
jnp
jne
mov
lock
xor
mov
pop
cmp
and
ss
push
mov
push
cmpsb
inc
mov
push
cmp
mov
clc
lret
dec
or
inc
cmc
push
mov
sbb
cmp
adc
inc
mov
outsb
xor
stos
xchg
cmp
mov
xchg
sbb
pop
mov
sti
jne
adcl
int3
lods
sbb
shlb
inc
loopne
cmpsb
test
mov
test
mov
and
xor
jnp
je
mov
sti
and
fwait
sbb
js
das
lret
dec
imul
and
into
add
push
dec
xor
mov
and
jge
inc
xor
cmpsb
lods
jmp
adc
fisubrs
jecxz
iret
push
inc
movsb
fcom
cmpl
out
xchg
inc
bound
shl
rcrl
sbb
fldenv
fidivl
pop
mov
out
fisubrs
iret
scas
insl
cs
loop
imul
int3
test
inc
ret
sub
or
and
pop
mov
bound
pop
and
aad
hlt
test
std
imul
add
xor
adc
hlt
inc
pop
xchg
int
scas
leave
cmp
ljmp
lea
mov
cmpb
pop
mov
adc
jg
push
push
pop
fcompl
in
mov
idivl
sub
pop
mov
leave
xor
mov
pop
jmp
test
jecxz
sbb
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
aas
or
jecxz
mov
fadd
mov
push
xchg
pop
jl
xor
aad
scas
divl
outsb
scas
push
xchg
outsb
mov
cltd
stos
and
inc
mov
je
fisubl
mov
jge
mov
jmp
xchg
xchg
shll
mov
mov
out
sbb
mov
cmpsl
out
lcall
cmp
pop
push
lahf
push
add
sbb
pop
cli
push
fwait
sbb
mov
lock
push
mov
clc
sub
aam
jmp
and
cli
cmpsb
inc
mov
cmp
mov
out
int
mov
xchg
jo
clc
repnz
or
fsubl
pop
sbb
xchg
cmp
sub
int
mov
int
and
icebp
mov
mov
pop
jg
inc
mov
pushf
les
insl
xchg
or
fisttpll
mov
aam
pusha
jmp
pop
out
aad
stos
mov
or
shlb
mov
sbb
das
aad
mov
loope
adc
das
adc
inc
loope
inc
addps
pop
cmp
jmp
push
insb
mov
dec
stc
arpl
out
jmp
cmpsl
outsb
rorl
outsb
sbb
pop
inc
aaa
repnz
clc
pop
cmp
aas
dec
push
jnp
jne
cltd
pop
or
out
push
popf
dec
outsb
movsl
aam
lcall
repnz
mov
jnp
shlb
roll
lock
add
lock
push
mov
fisttps
out
aaa
xchg
out
mov
je
sub
add
shll
jne
orb
push
out
xchg
cli
push
fsub
aam
add
dec
testl
and
mov
in
test
mov
jno
push
icebp
cld
mov
add
movsb
roll
mov
sub
inc
imul
cmpsb
xlat
int3
inc
test
sub
fildll
pop
aaa
sbb
adc
lea
aas
test
lret
aad
inc
dec
xor
js
in
jb
and
and
test
push
cltd
rolb
dec
data16
ss
cwtl
arpl
popa
push
and
mov
outsb
in
sbb
popf
jmp
push
pop
or
iret
rorl
cltd
repz
orb
jecxz
loopne
addb
nop
insb
cwtl
cmp
out
xchg
popa
sub
and
pop
idivl
shlb
adc
pop
clc
push
mov
cmp
aad
fisubs
js
adc
dec
pushf
push
gs
cmp
xor
cld
mov
imul
cmp
lahf
sti
ja
adc
lods
push
cld
sbb
mov
fwait
shll
out
xchg
stos
xchg
movsb
out
ret
mov
adc
into
in
xor
mov
push
sar
clc
imulb
dec
jb
shlb
adc
rcrl
je
mov
loope
movsb
add
enter
loop
push
cli
scas
dec
jl
dec
int3
nop
jmp
ds
sbb
mov
and
and
xor
dec
pushf
stc
rcl
pop
imul
test
scas
rcll
xlat
xchg
xlat
out
int
idivl
mov
mov
in
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
fwait
rcr
nop
jge
mov
mov
stc
out
sbb
test
pop
jne
repz
dec
or
sub
mov
mov
cmp
icebp
mov
sbb
push
pop
es
inc
fiadds
fwait
addr16
js
cli
pop
adc
inc
test
andl
adc
cltd
arpl
ficoml
leave
ret
push
adc
sbb
pop
push
pop
fst
pop
cmp
mov
bound
lods
leave
jge
and
stc
cmpl
sar
dec
stc
mov
mov
push
jbe
mov
test
and
fsubrs
outsb
pop
xor
or
push
sti
or
insl
dec
and
push
fcompl
enter
ret
and
xlat
push
sub
btc
repnz
int
lahf
in
movsl
insl
stos
call
lcall
cmc
inc
fwait
sub
xor
outsl
popa
adc
daa
cmp
and
rclb
lock
mov
insl
out
or
xchg
sti
or
cwtl
push
rcll
popa
xor
mov
adc
in
sub
xor
movsl
xchg
lahf
pop
pusha
cmovns
jne
add
push
adc
test
dec
xlat
sbb
mov
popa
leave
pop
xchg
fwait
mov
fldt
out
push
inc
inc
repz
and
cwtl
pop
sbb
dec
mov
pushf
es
push
lods
xchg
xlat
les
push
aaa
sbb
xrelease
push
push
sub
popa
in
sub
xor
std
jg
dec
popa
mov
scas
iret
or
in
es
jg
push
mov
jne
push
cmpsl
adc
cld
mov
jmp
mov
fcomps
mov
add
push
lret
lea
data16
les
insb
mov
jg
popa
jp
adc
push
and
mov
pop
push
fldt
inc
cs
aas
fstps
jb
cwtl
xorb
xchg
push
loope
adc
fisttps
rcrb
mov
inc
mov
push
test
or
pop
repz
adc
adc
in
fisttps
add
mov
push
pop
or
push
adc
jecxz
nop
pop
mov
repnz
pop
mov
add
test
in
out
cmpsl
mov
dec
shll
stos
jmp
fdivp
setp
ss
jle
mov
orl
xchg
fildll
lea
pop
xlat
cmp
push
scas
shlb
dec
push
into
addr16
cltd
cmpsb
mov
jecxz
cmpsb
jno
xchg
call
fistps
push
adc
lods
subb
aas
lods
into
mov
out
orl
test
lret
daa
jle,pt
jp
or
rcrl
repz
aas
in
test
imul
mov
repnz
movsl
movsb
xchg
aas
mov
mov
push
fstpt
xchg
xorl
push
xchg
addr16
push
int
idiv
mov
cs
sub
js
add
push
fs
add
insb
mov
out
adc
fsubs
mov
cmpb
out
push
incl
push
out
or
xchg
lahf
lret
xchg
imul
clc
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
add
iret
movsb
sub
mov
adc
iret
cli
stc
lret
dec
fldl
cbtw
shl
int
lock
xor
xchg
add
mov
dec
lock
mov
dec
and
push
jmp
xchg
or
inc
adcl
push
les
sbb
jecxz
mov
pop
mov
fucomip
pop
pop
mov
out
xorl
mov
push
push
sub
inc
sub
jne
fsubr
cmpl
add
pop
cwtl
roll
push
push
mov
dec
jo
mov
mov
hlt
arpl
mov
pop
in
mov
insb
in
push
fmull
push
incb
sbb
mov
fcmovnbe
push
mov
nop
dec
pop
ds
dec
jle
cmp
imul
lods
mov
push
pop
movsl
outsl
loopne
lret
inc
push
shlb
dec
mov
in
cltd
dec
pushf
addb
insw
dec
adc
xchg
in
push
jo
mov
lock
jno
mov
scas
aas
test
pusha
into
mov
jae
insl
xor
lods
cmp
movsb
scas
cli
pusha
mov
adc
adc
and
pop
das
pop
lret
dec
dec
mov
roll
xchg
out
mov
insb
repz
mov
mov
scas
sub
dec
push
mov
js
mov
mov
aam
pop
mov
mov
mov
jmp
clc
lods
arpl
xor
xchg
repz
jns
jnp
dec
mov
dec
test
stos
sub
out
cmpsl
jg
add
jmp
push
sbb
push
push
outsl
cmp
mov
inc
or
into
lret
fdiv
pop
pop
xlat
cltd
fstpt
bnd
jo
or
call
mov
das
xor
adc
lds
and
xor
or
lahf
ja
jnp
enter
sub
in
and
jne
ds
xchg
imul
push
test
std
add
pop
stos
push
mov
cli
xchg
dec
xor
jno
repnz
or
inc
push
xchg
jb
and
data16
fidivs
xor
fbld
sub
je
aas
nop
insl
adc
push
ret
dec
gs
rclb
xor
subb
jge
jle
inc
push
sub
stos
xor
mov
mov
xchg
fistpl
jle
es
repnz
add
fsubs
pop
cmp
loop
push
andb
push
fadds
ds
pop
scas
cmp
push
leave
push
cltd
push
xlat
xchg
inc
and
xor
xor
int
iret
pop
jecxz
jge
inc
sahf
jg
jmp
jmp
sti
addr16
pop
cmp
cltd
fidivs
jns
loope
sbb
nop
stos
std
mov
xor
aad
xchg
mov
fisubrs
les
negl
or
nop
or
or
xor
add
pop
popf
push
or
leave
cmp
add
fcoms
push
xchg
mov
addr16
aad
lods
adc
fcmovnu
popa
pop
add
lcall
pop
lcall
and
lret
aam
sub
push
test
and
mov
lea
inc
stos
xchg
pop
and
push
mov
push
jno
inc
sahf
int
inc
mov
jns
lret
adc
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
jp
cmp
jecxz
mov
fmul
rolb
leave
mov
xchg
or
push
cld
test
inc
adc
shrb
mov
clc
sub
pop
cmp
nop
jno
sbb
inc
int
mov
push
or
daa
loopne
dec
mov
gs
sar
cmc
inc
push
mov
enter
inc
mov
xor
out
rcrl
jne
in
mov
cmp
sub
int3
adcl
dec
push
mov
dec
jge
ljmp
lea
das
xor
mov
sbb
stc
xchg
jmp
add
sub
xor
push
mov
movsl
cmpsb
push
jo
xor
mov
ja
test
mov
xor
nop
and
xchg
dec
icebp
rorb
sbb
push
xlat
mov
jnp
sbb
mov
pop
ja
scas
adc
scas
cltd
jno
fistl
aam
dec
mov
fsts
push
dec
add
mov
or
aad
in
jb
and
stc
dec
jno
add
mov
enter
pop
ror
dec
and
pop
pop
outsl
sbb
sub
add
ret
mov
jecxz
and
jne
cmpb
in
int3
cmp
sbb
add
jge
cli
mov
dec
or
adc
pop
mov
sbb
neg
lcall
xor
add
mov
xchg
outsl
mov
stc
push
pop
clc
nop
xor
dec
mov
sub
imul
mov
outsl
popa
jecxz
pop
xor
inc
ret
mov
inc
cmpsl
inc
push
xor
xor
mov
push
rep
xchg
adc
cmc
adc
mov
or
pop
xchg
inc
icebp
sub
lds
rcr
push
add
mov
sbb
es
adc
jo
bound
jl
sub
shlb
ljmp
test
mov
pop
enter
iret
pop
pop
jg
in
add
cmp
test
jecxz
test
ret
std
and
add
push
popa
pop
push
cmp
orl
dec
add
iret
insl
scas
xchg
adc
rcrl
in
mov
stos
sahf
xchg
jl
popf
outsl
adc
mov
out
aas
out
mov
push
pop
fildl
insl
push
scas
xor
fsubs
cmp
and
mov
cmp
push
mov
dec
xor
stc
sarb
addb
in
push
bound
in
or
and
push
leave
not
jp
jmp
cmp
lea
lock
sbb
jl
enter
fiaddl
lods
sbb
rcll
in
jmp
jns
push
push
inc
sub
pop
mov
sbb
ja
push
mov
adc
pop
dec
xor
xor
push
sbbl
pop
sti
adc
stos
mov
xlat
fldlg2
pop
dec
and
lahf
mov
int
cltd
mov
out
clc
pop
fidivrl
dec
jne
pop
mov
ret
adc
mov
pop
lods
stos
sub
call
push
ret
inc
nop
and
dec
jno
jnp
insb
and
push
pop
push
sub
repz
int
push
call
dec
or
xor
lret
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
cmp
mov
push
inc
mov
jb
sbb
lods
pop
jg
mov
sbb
sub
jle
in
pop
inc
sbb
fwait
jl
or
scas
inc
test
push
clc
popa
sub
pcmpeqd
xchg
jecxz
faddl
lret
and
mov
subl
mov
sub
jns
xchg
inc
out
add
xchg
cltd
shll
fstpl
or
insb
adc
push
pop
popf
mov
mov
mov
mov
ret
imul
rcll
xchg
insb
mov
nop
or
cli
loop
mov
and
or
mov
imul
mov
sbbl
or
xchg
lret
jnp
fwait
imul
cmp
adc
pop
sub
pop
insl
dec
jge
es
sub
pop
shrb
cltd
sbb
sahf
clc
and
push
in
xchg
out
xor
mov
mov
mov
fiadds
xor
xchg
je
cmp
pusha
test
inc
fistpl
sahf
pop
enter
mov
jp
and
in
mov
das
push
sub
mov
ljmp
mov
dec
mov
jbe
dec
push
aam
in
mov
cmp
xchg
popa
sti
add
into
rcrb
call
adc
or
mov
stc
loopne
in
vmread
js
jmp
mov
jns
mov
mov
xor
and
xchg
or
icebp
fwait
mov
cmp
shl
aas
dec
adc
insb
mov
lds
push
addb
bound
pushf
jmp
rclb
fnstcw
mov
imul
mov
lret
aaa
into
xchg
cltd
pop
sbb
sbb
jo
fisubs
xchg
dec
push
mov
call
mov
daa
ljmp
ds
cmpl
mov
pop
cltd
mov
std
clc
fwait
aam
mov
test
ljmp
lods
sahf
bound
add
movb
out
cs
popl
add
dec
incl
jp
test
push
pop
adc
scas
movsl
push
xor
jle
in
mov
adc
int3
daa
dec
fcom
and
dec
cli
push
bound
mov
cmp
stos
jns
or
cmp
dec
push
adc
fstp
in
or
arpl
lcall
aam
mov
loop
rcl
xchg
aam
pop
pop
xchg
cmp
rolb
js
and
jno
subl
clc
movsl
rcrl
mov
xchg
and
sub
in
sub
or
or
jno
mov
dec
fdivp
adc
test
mov
test
fisubrl
mov
loop
gs
xlat
mov
mov
fimuls
jg
sub
jo
jl
shrd
pop
rorl
mov
enter
push
out
cmp
mov
popa
mov
push
movsb
es
pop
bound
sbbb
xor
xchg
leave
fs
push
pop
in
sub
arpl
addr16
xor
sbb
push
shrl
or
push
add
leave
repnz
lret
pop
imul
les
enter
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
sahf
push
inc
mov
mov
pop
repnz
xchg
gs
movsl
sbb
imul
ja
push
jbe
lahf
xchg
jnp
mov
lcall
jge
mov
sub
inc
fsub
jno
andb
jmp
pop
dec
cmp
and
inc
push
mov
aas
ja
push
aad
out
dec
mov
bound
inc
push
stos
add
adc
cs
aam
test
cmc
test
pop
or
in
fimuls
jo
sbb
icebp
inc
dec
test
pusha
cmp
aaa
and
imulb
jmp
adc
out
mov
shlb
sub
repz
leave
stos
movsl
jae
dec
das
pop
int3
shl
sbb
mov
xor
mov
icebp
adc
adc
xchg
xchg
xlat
scas
or
xlat
cmpsb
mov
mov
imul
insb
popa
or
gs
out
jno
dec
mov
or
pop
cmp
sti
pushf
lea
fdiv
movsl
xchg
lret
movsb
iret
mov
add
add
jae
xor
cltd
cmp
jne
dec
mov
cs
lds
fmuls
divb
lock
aas
cli
mov
xchg
adc
sbb
sub
and
outsl
cwtl
repnz
es
add
xor
imul
repnz
and
cmp
cli
fwait
lret
cmp
je
mov
xchg
test
cmp
and
cmpsl
ljmp
pop
pop
push
out
outsl
outsb
lea
mov
mov
test
mov
pop
adc
pop
dec
xchg
or
or
mov
fs
mov
addr16
push
outsl
int
jns
or
aad
jmp
repnz
push
mov
shll
insb
mov
xor
push
or
in
icebp
xor
or
sbb
push
push
sbb
cmp
inc
sub
jo
push
xchg
xchg
test
mov
fs
mov
out
xrelease
fiadds
aaa
daa
cwtl
ss
shlb
xchg
ja
adc
jae
cmpsl
arpl
test
out
lods
cwtl
rcrl
jns
inc
mov
popf
xchg
push
mov
ret
fwait
add
test
pop
adc
into
mov
dec
or
xchg
xor
jp
cwtl
test
pop
add
shrb
jl
and
jnp
sub
pop
push
out
das
push
bndstx
loop
inc
xor
mov
push
jg
je
inc
movsl
aas
je
lret
lret
loop
dec
shrb
rorb
lsl
sbb
or
add
push
insb
and
push
add
mov
jns
rolb
data16
cmpsl
test
gs
adc
std
xor
pop
lea
mov
lret
xchg
mov
pop
mov
jns
sub
bound
push
sbb
testb
mov
into
sbb
push
jbe
push
lret
rclb
jbe
inc
mov
pop
jno
push
xor
iret
js
jmp
nop
mov
mov
sub
repnz
mov
je
push
aaa
or
adc
enter
icebp
popf
rcrl
stos
mov
fldt
sub
cld
sub
sub
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
xchg
or
bound
test
test
dec
scas
in
hlt
add
mov
mov
xchg
sahf
outsl
jle
push
cmp
lret
int3
adc
fistl
cmc
xor
jp
add
jecxz
xor
push
xchg
pop
ljmp
xor
mov
jle
shlb
hlt
fiadds
push
xlat
and
push
or
mov
lea
and
push
jge
lods
sbb
mov
cmp
sti
dec
test
pop
and
mov
mov
push
dec
mov
sti
jmp
pop
xor
jae
loope
mov
arpl
push
pop
mulb
push
or
scas
or
add
or
cs
mov
mov
scas
addr16
fists
push
sub
inc
pop
pop
push
pop
movsl
mov
mov
sbb
sbb
frndint
push
xlat
jnp
cmpsb
cmc
icebp
stos
shl
aad
int3
int3
jns
or
fdivr
int3
mov
loope
push
repz
inc
scas
rolb
and
pop
push
xor
inc
aam
mov
inc
mov
jnp
divb
xor
adc
cld
cmp
push
lods
mov
pop
out
jl
mov
incl
mov
push
nop
mov
jg
mov
add
lcall
or
push
push
mov
cltd
fstp
inc
mov
mov
lods
test
inc
push
nop
cli
insb
out
jns
inc
es
mov
lds
push
mov
lods
cltd
sbb
mov
in
add
push
mov
cmc
out
fwait
pop
push
push
or
xor
push
xor
inc
cmp
sub
sbb
jnp
push
jns
sti
aas
sub
inc
xor
fcoms
or
and
sub
adc
int3
clc
sbb
test
dec
mov
jne
lret
or
or
rcrl
aad
ret
aad
out
push
enter
aad
pop
orl
jno
sbb
jmp
jmp
gs
lret
mov
mov
aad
adc
mulb
ljmp
out
insb
aam
loopne
arpl
pop
sub
mov
test
orl
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
mov
or
mov
pop
bound
or
dec
xor
out
inc
std
aas
inc
adc
inc
stos
jmp
cmp
jae
cltd
repnz
add
xor
fwait
jle
dec
inc
pop
adc
js
mov
fidivrl
daa
sbb
loop
pop
rolb
cmp
inc
cmp
mov
cld
mov
fmull
pop
inc
pop
enter
jb
daa
rcrl
xor
pop
es
das
cmp
xchg
les
int3
mov
mov
sbb
sbb
shll
lods
cmp
in
xchg
imul
roll
iret
pop
push
hlt
mov
imul
add
and
fnstenv
cwtl
fcoms
xchg
out
inc
inc
push
scas
mov
scas
adc
aam
xor
xchg
out
pop
ficompl
nop
and
cmc
movsl
sbb
fistpll
sbb
rcrl
pop
pop
shrl
das
dec
and
icebp
test
rcl
movsb
sti
into
mov
dec
push
cmp
sub
es
inc
inc
pop
je
cmc
pop
pop
aad
cmp
fwait
xchg
cmp
ss
popl
movsl
inc
adc
addb
scas
cmpl
ficoml
xor
mov
sbb
nop
leave
add
pop
mov
out
jmp
data16
cmpl
int3
xor
cmpsl
inc
jmp
popl
sbbl
cltd
and
and
push
pop
neg
xchg
in
popf
lock
lea
inc
adc
sub
aaa
sub
insb
pop
pop
cmp
aad
movsl
out
add
cmp
jno
or
xchg
mov
outsl
push
push
sbb
sbb
mov
rcrl
sbb
pusha
ret
imul
mov
mov
sub
pop
xor
cld
inc
jge
pop
mov
cli
mov
enter
ljmp
pop
notb
jle
sbb
outsl
mov
fcompl
bound
mov
sub
dec
cmp
or
pop
int
pop
mov
loope
sub
mov
outsb
add
mov
movsl
aaa
test
pop
movsl
mov
xchg
lcall
dec
testl
pusha
imul
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
add
push
mov
mov
push
or
jmp
stc
mov
int3
or
call
and
addl
out
testb
xor
push
mov
rolb
xchg
push
lds
jge,pt
fwait
lahf
pusha
in
fcomps
mov
aad
ret
mov
lcall
xor
adc
mov
pop
xor
sbb
pop
pop
cld
out
cmp
cld
enter
ljmp
cmp
inc
dec
imul
and
adcl
inc
mov
inc
inc
je
adc
enter
sub
js
dec
adc
fstl
lock
jp
push
pop
or
int
jmp
add
shrb
mov
mov
add
notb
mov
lods
mov
cmpsb
add
jg
add
xor
xchg
jmp
sub
xlat
loop
push
movsl
test
xorl
sbb
add
cmpsl
jno
xchg
ret
test
mov
xchg
ja
xchg
mov
jmp
jecxz
push
xlat
cmp
push
movsb
es
inc
xchg
cmpsb
dec
outsl
xchg
loop
lods
decb
or
sub
out
lods
push
sub
in
lods
xchg
xlat
mov
pop
mov
xchg
push
imul
in
or
pop
cmp
push
pop
add
bound
sti
mov
mov
mov
cmp
nop
add
cmpsl
push
jp
aad
stc
push
sub
push
inc
sub
mov
cmp
mov
jne
in
push
jge
push
out
add
sahf
out
sub
cltd
or
mov
fcmovbe
mov
xlat
push
mov
xor
and
pop
pop
cmc
cli
out
mov
cmp
jmp
pop
or
loope
mov
jmp
inc
sub
aam
loopne
roll
jle
out
and
fists
sarb
lea
jp
enter
inc
pusha
add
or
sbb
int3
icebp
dec
xchg
mov
cmp
lods
push
movsl
dec
sbb
inc
pop
pop
jg
or
dec
in
ljmp
scas
outsb
hlt
cmp
pop
les
inc
push
inc
ror
lods
xor
pushf
mov
jecxz
add
andb
out
arpl
sahf
sbb
rcr
adc
stos
imul
lods
hlt
mov
pminsw
jp
or
aad
fiaddl
and
inc
add
es
popf
mov
insb
cltd
mov
fsubl
pop
data16
add
lcall
shrl
and
or
push
xchg
test
dec
push
adc
lds
mov
fstl
repnz
pop
mov
pop
fs
or
lods
enter
dec
rcrb
sbb
cmpsb
daa
pusha
movsb
add
jae
mov
lods
push
mov
or
jg
pop
dec
and
mov
xchg
outsb
insb
mov
shll
pop
ja
dec
and
mov
incl
sbb
and
dec
mov
cld
lahf
sbb
dec
out
xor
rcll
push
push
jmp
xlat
xchg
push
lcall
fists
xchg
scas
pop
mov
mov
idivl
cwtl
ds
in
movsl
jge
jno
sub
loop
bound
loop
lret
mov
and
mov
test
push
pop
int3
lcall
xor
faddl
add
and
scas
xor
push
mov
and
jnp
enter
mov
mov
and
dec
pop
adc
dec
pop
adc
pop
stos
pop
test
sub
into
jne
leave
in
push
out
test
aam
jnp
jne
cld
inc
es
mov
mov
shl
int3
xor
jns
addr16
mov
int3
int3
movsb
xchg
push
fisubrl
outsb
cmc
dec
lahf
outsl
lcall
or
jp
les
dec
xchg
pop
cli
sbb
sbb
mov
mov
ss
clc
pop
out
repz
inc
mov
loop
mov
cmc
mov
push
cmp
inc
insl
scas
cli
gs
pop
loop
mov
dec
xor
jmp
push
cmp
stc
jl
shl
dec
pop
jge
mov
inc
icebp
aad
sub
out
les
divb
push
sarb
xchg
xlat
mov
scas
shrb
jno
add
pop
xchg
sub
sbb
cmpsl
scas
push
setnp
popf
jns
mov
in
shll
bound
lea
fwait
jle
ljmp
test
mov
sbb
dec
pusha
and
and
xchg
lds
inc
mov
cmp
sbb
nop
pop
inc
rolb
mov
ret
addr16
dec
repnz
dec
mov
and
out
sub
int3
stos
sub
scas
pushf
ret
std
xor
and
negl
or
jg
fidivs
jg
sbb
movsl
xchg
fsubrs
int3
lds
into
xchg
out
jns
push
adc
jp
mov
or
xchg
sub
xchg
xor
lds
gs
arpl
and
pop
inc
mov
sbb
rolb
imul
into
push
lcall
out
iret
insl
and
sbb
xchg
repz
into
imul
and
ret
pop
mov
jl
or
xchg
xchg
sub
xor
test
cmc
scas
sbb
hlt
lods
or
jne
xchg
sbb
mov
mul
stos
cmp
cmc
dec
lods
push
aam
xor
das
mov
inc
mov
ss
notl
das
test
push
out
std
jnp
jbe
mov
add
sbb
xor
enter
jge
hlt
pop
call
lods
and
dec
scas
lods
daa
xchg
jnp
stos
fisubrl
sbb
addl
icebp
int
flds
inc
xor
pop
and
mov
xlat
outsb
adc
scas
or
inc
mov
and
dec
add
out
push
adc
xchg
xor
fstl
cwtl
addr16
sbb
jg
insl
inc
pushf
dec
test
shrl
jb
adc
fsubs
vpsubusb
cmpsb
mov
push
fidivl
mov
xor
cmp
sub
sbb
mov
jmp
adc
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
push
in
iret
mov
mov
mov
push
or
cmp
mov
fwait
shr
cli
push
fs
out
lea
sbb
les
dec
dec
adc
addr16
jno
or
adc
and
sbb
pop
test
jecxz
pop
inc
and
xor
out
xlat
mov
fcompl
dec
pop
adc
mov
lds
cmp
add
mov
fcompl
stc
and
xchg
ret
es
outsb
imulb
mov
fdivs
mov
mov
pop
dec
mov
mov
pop
mov
icebp
inc
adc
cmc
add
popa
shll
xchg
xor
mov
inc
pop
adc
pop
jns
mov
adc
and
or
push
add
andb
mov
jno
lahf
add
and
lock
jns
pop
mov
fsubl
pop
and
negb
jg
dec
aas
jb
lock
push
inc
inc
cmpsl
mov
push
push
push
stc
push
das
xchg
push
inc
ficoms
push
fcmovne
repnz
loope
clc
outsl
jb
stos
mov
fs
adc
inc
pop
xor
repnz
mov
cmp
lret
jmp
call
dec
rclb
cmpsb
push
jmp
push
mov
mov
push
out
pop
mov
mov
mov
xor
leave
xchg
mov
repz
jbe
mov
adc
dec
lds
les
fdiv
stos
xor
data16
cmp
push
es
and
mov
mov
jb
xor
cmp
ljmp
push
aad
jne
lods
outsb
inc
fs
sbb
pop
push
fstpl
and
insb
and
rclb
int3
or
insl
inc
jnp
mov
outsl
mov
pusha
test
mov
xchg
or
test
mov
ja
cli
jno
xchg
mov
mov
sub
dec
imull
lds
enter
sub
and
mov
aas
clc
jb
add
lahf
sub
mov
in
sub
in
or
inc
push
xchg
mov
mov
sahf
fmuls
pop
cmp
sti
and
and
addr16
pop
xchg
fistps
push
stos
fisubs
imul
inc
aaa
imul
jg
das
out
xlat
jns
pop
inc
xor
adc
mov
mov
cs
stc
cmp
aas
int
das
mov
xchg
xchg
push
add
jbe
sbb
addb
dec
mov
add
pop
add
out
xchg
sbb
ror
scas
mov
mov
sarb
add
ret
sbb
add
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
xor
rcrl
mov
cmp
pushf
lds
scas
inc
fcoms
pop
data16
flds
lcall
insl
inc
or
cwtl
int
pop
jge
push
lods
dec
ja
sbbl
cmpsl
adc
scas
lret
ret
cmpsb
xchg
push
or
data16
inc
jmp
push
jge
ja
or
cs
mov
fcmovnu
filds
jmp
xchg
imul
in
mov
pop
pop
mov
sub
mov
mov
add
mov
xchg
mov
mov
xlat
xchg
xor
rcrb
fistpll
cmpsb
jns
pop
ds
jne
fidivl
mov
jmp
sahf
add
mov
jae
mov
orl
dec
loopne
push
jno
and
sbb
xchg
in
sbb
subl
dec
pop
stc
pop
lcall
push
mov
lods
push
es
mov
cmpsl
mov
push
loope
cmp
in
repnz
sub
lea
cmpl
mov
sahf
push
push
sub
mull
fwait
std
daa
adc
cmp
ret
dec
inc
xor
mov
rcll
daa
mov
or
test
sbb
pop
or
dec
inc
gs
loopnew
arpl
gs
dec
add
xor
popa
call
jl
pop
inc
cmp
icebp
cwtl
push
inc
jno
sahf
xlat
inc
fisttpl
pop
arpl
xchg
inc
push
cmc
mov
push
xchg
cmp
call
add
shrl
mov
es
cmp
aad
fcoms
mov
mov
cli
xor
lods
fs
ljmp
mov
inc
ret
cmp
movsb
lret
sub
jne
imul
loope
loopne
enter
std
jne
mov
mov
divl
sub
mov
mov
xchg
insl
adc
xchg
clc
rol
std
lods
out
xchg
mov
in
mov
mov
cli
aam
lcall
lret
xchg
lea
fidivl
out
push
or
mov
dec
mov
sbb
js
push
ds
jmp
xor
in
out
sub
mov
cmpl
aam
cld
xchg
or
clc
arpl
fwait
lret
arpl
mov
and
sbb
iret
int
xchg
mov
lea
adc
push
dec
les
aad
cs
movb
push
mov
pushf
rolb
pop
dec
jge
or
js
mov
jmp
popl
cmp
or
pop
ds
pop
lret
push
xor
jno
pop
xchg
dec
lahf
inc
jecxz
push
imul
inc
cmpb
add
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
pop
data16
in
les
ret
shlb
js
push
ret
out
cmp
test
cmp
inc
add
push
ror
int
and
pop
pushf
mov
push
mov
add
out
inc
mov
lahf
inc
cmp
in
cld
cmpsl
sub
mov
scas
jecxz
pop
or
mov
out
or
dec
movsb
jne
push
cmp
rorl
jae
mov
sub
adc
fidivrl
pop
sbb
test
xchg
negl
mov
mov
std
outsb
xor
sub
nop
cs
inc
std
push
lcall
push
sbb
jmp
or
lret
pop
fnstenv
sub
pop
outsb
repnz
aas
lahf
xchg
push
jbe
js
repnz
mov
sub
sbbl
icebp
enter
cmp
push
sbb
mov
std
gs
clc
push
pop
push
and
sbb
push
pop
in
jo
outsl
je
push
cltd
jecxz
mov
mov
mov
insb
cli
and
or
out
mov
sbb
push
cltd
xor
leave
rdpmc
iret
mov
add
sbb
test
out
test
mov
cmp
sti
cmp
dec
sub
outsl
pushf
ret
add
sub
lcall
or
in
lea
jne
in
aad
add
int3
jne
rclb
insb
out
outsb
cltd
mov
std
sub
jmp
inc
jne
mov
xlat
jbe
das
repz
jno
mov
test
repz
dec
jne
and
ja
adc
push
sarb
inc
ds
fwait
pop
push
push
dec
insl
add
xchg
mov
xor
int3
imul
cmp
cmp
cwtl
lock
xchg
and
inc
add
data16
loopne
or
inc
mov
in
popl
in
lahf
shrb
inc
xchg
fdivs
push
sarb
dec
bound
adc
cmp
add
fs
xchg
aas
mov
pop
pop
or
jmp
subl
insb
out
xchg
arpl
jno
pop
ljmp
xor
pop
pushf
fwait
ds
sub
mov
mov
inc
inc
and
pop
popa
dec
push
out
inc
jmp
push
test
jns
in
xorl
xor
inc
inc
inc
mov
std
mov
mov
sbb
outsb
mov
cmpsl
clc
out
and
shll
lds
sahf
cmp
aad
adc
pusha
xlat
ss
inc
cmp
push
xchg
mov
cmp
mov
test
popa
push
rcrl
fimuls
adc
test
rcrl
inc
cmp
push
pop
pop
lods
inc
jmp
xor
inc
jmp
test
adc
in
cld
sbb
jle
adc
pushf
inc
insb
sbb
jns
mov
in
cld
ret
notb
cmpsl
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
repnz
pop
jb
mov
xchg
stos
data16
pop
dec
push
nopl
dec
adc
das
mov
xor
pop
inc
stos
and
jl
add
pop
ret
icebp
sarb
clc
ret
sub
and
xor
adc
frstor
mov
cmp
adc
daa
repz
add
or
mov
shll
xor
mov
bnd
xor
mov
pop
subl
mov
pop
ljmp
daa
rol
add
push
popf
pop
cmp
imul
out
rcl
xor
lock
push
inc
mov
lret
nop
pop
inc
es
into
clc
jle
push
sub
ds
decb
push
ret
inc
mov
or
mov
enter
cmp
out
in
mov
mov
dec
xchg
in
mov
lret
sbb
pop
or
loope
or
lock
in
out
cmp
into
sub
fsubrs
leave
bound
jmp
popl
jne
scas
cmpsb
shlb
mov
jg
xchg
call
test
push
loope
push
stos
mov
in
movsl
mov
out
jnp
mov
push
cli
dec
cs
dec
push
movsb
cmp
stc
in
jecxz
lods
lds
add
sbb
ret
or
shlb
bound
inc
repz
pop
mov
xchg
scas
lea
out
lcall
jecxz
dec
push
adc
nop
cmp
in
stc
jecxz
xor
arpl
fs
pop
in
nop
out
jnp
mov
subl
gs
xchg
sbb
imul
push
lock
ljmp
push
nop
xchg
cmpsb
cmp
add
fnstenv
push
push
fsubs
sysexit
sub
out
and
daa
iret
ss
fcmovnbe
pop
mov
es
sahf
add
ja
outsl
jl
dec
mov
in
pop
je
out
loopne
pushf
jp
sbb
cmp
adc
lods
fistpll
fucomi
xlat
xchg
push
movsb
sbb
xor
ljmp
push
mov
lahf
call
fidivs
pop
xor
inc
xchg
mov
inc
adc
pop
std
dec
mov
jne
fcmovnb
mov
cmp
pop
jns
xorl
xor
push
je
pusha
jns
cmc
add
pop
pop
jne
mov
sahf
js
mov
mov
dec
jb
mov
jle
rol
pop
fldl
imul
adc
pop
xchg
push
imul
push
cmp
jne
je
notb
jo
mov
andb
add
into
xor
icebp
fs
loopne
jne
mov
inc
rep
ret
rclb
cmpsb
inc
xor
mov
pop
daa
xchg
cmpb
push
xor
scas
pop
jl
adc
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
mov
and
xchg
mov
negl
or
mov
cmp
mov
cmpsb
mov
out
pop
insb
cmp
inc
fstl
mov
scas
inc
out
xlat
inc
cmc
dec
inc
sub
lretw
sarb
scas
cmp
pop
sub
inc
add
cwtl
sbb
add
xor
adc
inc
fidivrs
aas
sub
jnp
sub
push
add
mov
push
inc
dec
inc
pop
jmp
pop
popf
xor
in
xchg
lods
and
loopne
jge
adc
adc
popa
adc
iret
rcr
xchg
push
outsl
fistl
aaa
pop
inc
and
movsb
lea
lds
mov
jno
mov
lds
push
cmpsl
sahf
outsl
push
mov
jns
pusha
push
push
insl
ficoms
cltd
fwait
mov
fsubrl
xor
adcl
or
mov
cs
xchg
clc
outsb
scas
adc
dec
data16
or
xchg
mov
pop
idivl
xchg
rcrb
out
mov
in
push
pop
push
xor
mov
and
fxch
mov
nop
xchg
lcall
pop
outsb
pop
or
push
fstl
lods
lcall
jle
push
cmp
ljmp
fldcw
cmc
cltd
push
test
push
inc
xor
es
hlt
mov
push
outsl
push
sbb
xor
or
rcrl
lods
mov
lret
jne
gs
sbb
inc
add
xchg
insl
mov
jno
or
sti
cmpsb
jbe
adc
cltd
and
mov
into
repnz
xor
sub
mov
mov
adc
in
imul
in
sbbb
and
mov
jle
fldt
xchg
rcr
mov
ficomps
stos
inc
sub
dec
loope
adc
adc
mov
out
jl
dec
iret
lds
push
imul
fs
push
mov
add
neg
and
cmpsl
mov
dec
jns
lcall
scas
mov
imul
add
or
call
fs
ja
pusha
in
cwtl
jno
clc
negl
daa
mov
sbbl
fcoms
jo
mov
mov
xchg
cmp
xchg
xlat
out
jg
sarb
xor
adc
jno
fucomip
mov
fs
and
mov
mov
mov
or
dec
pop
xchg
cmp
test
adc
lods
mul
or
sub
sub
mov
std
cmc
rorb
dec
inc
and
mov
les
ret
aad
ret
inc
iret
cmp
jmp
inc
cmc
out
mov
add
cwtl
mov
xorl
addr16
cs
lret
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
dec
aad
movsb
mov
les
xchg
fsubs
inc
jecxz
mov
pop
xor
mov
loopne
call
jnp
push
push
mov
cmp
test
lods
int
sub
mov
rcrl
shrl
outsb
je
aad
push
popa
cmpsb
mov
mov
inc
dec
jo
shl
push
and
mov
out
sub
adc
or
out
cwtl
add
aaa
shrl
jge
je
jge
dec
lret
push
xor
xorb
xchg
shl
push
sub
xchg
dec
insb
mov
sbb
and
into
pop
or
inc
cli
fs
sub
pushf
jbe
in
cmpsl
push
addr16
inc
outsb
out
jl
aad
jns
cmp
dec
aad
inc
sbb
aad
mov
jmp
cli
fadd
jae
imul
out
rcrl
mov
and
cmp
mov
lret
lods
inc
ret
push
scas
add
rcll
jg
mov
sbb
push
outsl
push
jo
or
jno
inc
sbb
jne
add
cmc
out
jle
push
cs
test
arpl
cmp
fstp
and
or
dec
iret
pop
push
bound
jae
je
add
aas
arpl
arpl
adc
imul
xor
and
mov
rcll
adc
pop
sahf
pop
cmp
sbb
pop
mov
add
mov
cmp
daa
adc
js
lock
sbb
hlt
in
adc
jne
cli
jno
out
jae
xor
leave
jbe
xor
lock
jnp
mov
dec
int
push
push
call
loop
jno
in
ss
add
iret
mov
pop
dec
push
push
dec
dec
loopne
adc
mov
sbb
popa
xchg
jo
ret
mov
ljmp
aaa
mov
mov
mov
or
push
in
sub
arpl
out
mov
push
or
aad
dec
sub
loope
stc
mov
pop
leave
adc
sahf
add
aaa
shll
std
xchg
cld
lods
in
push
xchg
mov
xor
mov
pusha
mov
dec
dec
cmp
sbb
sahf
mov
mov
mov
cmp
mov
lahf
insl
cld
in
fiadds
and
jecxz
popf
rolb
xchg
and
xchg
cmc
or
into
mov
mov
push
test
lods
daa
subl
mov
dec
pop
or
add
push
aaa
sbb
pop
mov
popa
mov
movb
iret
cmp
lds
add
notl
and
mov
cmp
stos
es
in
pop
incl
lcall
aam
push
mov
jns
pusha
inc
ud1
and
mov
mov
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
jnp
xchg
in
xchg
mov
aas
mul
cmp
push
jecxz
faddl
mov
call
add
mov
push
in
in
out
push
mov
test
and
adc
add
sti
mov
lds
pushf
sbb
push
jecxz
ret
push
les
mull
sub
lahf
out
lcall
ret
add
mov
jg
mov
xor
fstpt
dec
dec
add
cmp
mov
in
sub
ss
jp
xchg
lods
jp
mov
data16
hlt
cmp
adc
xchg
dec
sbb
es
jnp
repnz
fstpt
int
cmc
test
pop
ret
int3
sbb
in
lcall
adc
or
adc
mov
aad
inc
or
cmp
and
and
jle
and
fwait
push
out
movsl
loopne
push
jp
mov
lock
push
mov
mulb
scas
and
sbb
pop
jp
rcl
mov
cld
jo
xchg
pop
out
jno
sbb
clc
push
mov
sbb
pop
push
mov
inc
mov
jl
xchg
int3
xor
push
push
sbb
int
call
mov
roll
mov
jp
jp
inc
addps
ljmp
and
ret
xchg
mov
std
dec
fistps
icebp
insl
inc
daa
minps
repz
movsb
xchg
aam
mov
dec
arpl
aaa
cmp
push
and
aaa
stc
xlat
mov
sti
or
mov
popf
inc
xor
push
xor
mov
out
xchg
mov
repz
pop
cli
xorb
iret
pop
movsb
lock
cmpsb
iret
push
fdivrs
mov
mov
mov
jb
pop
into
mov
daa
js
mov
push
cmp
mov
in
cmp
xor
inc
out
mov
jns
repz
sbb
sbb
jl
mov
movb
fcomi
pop
imul
ret
enter
pop
mov
lds
inc
mov
mov
pusha
stos
outsb
push
xor
push
dec
cmp
in
shrb
orb
test
std
jecxz
mov
cli
jg
push
xor
scas
bound
idivb
push
adc
movsl
lds
xlat
loopne
mov
add
pop
cmp
jl
fwait
dec
cld
dec
fwait
jb
inc
inc
fdivrs
sahf
push
push
push
lea
inc
xchg
jne
sti
pop
mov
push
cli
push
les
sahf
rcll
mov
adc
or
stc
lahf
mov
inc
adc
fmulp
or
vpsubusw
fnstenv
shlb
outsb
inc
inc
inc
mov
int
xchg
dec
test
pop
sub
fadds
dec
inc
enter
dec
out
jg
addr16
jne
gs
scas
loope
cltd
sub
push
mov
popf
imul
iret
in
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
dec
sahf
sbb
mov
pusha
mov
mov
inc
push
and
add
setl
shlb
mov
aaa
shll
aaa
sub
mov
dec
enter
mov
loopne,pt
inc
pusha
ret
vhaddpd
xchg
mov
jmp
jmp
push
add
push
cmp
mov
imul
lahf
inc
xchg
and
add
xchg
cli
lret
add
adc
out
inc
mov
vmovq
xchg
or
jae
movsl
and
xor
mov
fsubrl
loop
cmp
ret
push
mov
inc
push
push
stc
fwait
mov
mov
pop
movsl
xchg
shl
aad
test
pop
inc
lcall
dec
mov
int
and
pop
pop
test
es
rcl
fisubs
push
jl
mov
adc
cmpsb
xchg
xchg
dec
aaa
rorb
dec
ds
or
sub
mov
mov
jbe
push
out
dec
sahf
dec
ss
shll
in
lret
addr16
lods
inc
dec
mov
loop
aaa
sbb
jl
xor
dec
mov
cmp
cmp
jge
pop
sbb
sbb
push
push
outsl
adc
or
mov
pop
shlb
call
jno
mov
jp
in
inc
repz
cmp
mov
mov
fisttps
rclb
pusha
aaa
sti
or
or
nopl
ja
sarl
mov
lods
fsubl
add
pop
ret
pushf
jg
jne
out
jns
adc
sbbb
rorb
jl
xor
call
out
inc
adc
fstpl
or
shr
sbb
dec
sahf
mov
xchg
or
mov
xchg
sub
and
and
cmp
cwtl
shr
inc
adc
or
bound
adc
std
in
dec
mov
xor
sbb
push
jl
cld
lcall
pop
push
add
cwtl
and
jns
filds
pop
icebp
dec
loop
popa
fldcw
sub
icebp
bound
in
xchg
sub
scas
push
jae
movsb
pop
arpl
icebp
pop
imul
in
fidivrl
fiadds
jnp
jnp
or
jo
lcall
addb
das
data16
add
xor
movsl
xor
mov
insb
inc
adc
jae
or
and
cmpb
movsl
push
ljmp
xchg
fcmovb
lea
icebp
jp
fidivrs
inc
data16
jnp
push
leave
insl
and
out
in
pop
rclb
out
xchg
rorb
mov
cmp
in
adc
sbb
mov
inc
iret
stos
inc
or
ss
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
push
rorl
mov
mov
dec
lods
push
popf
sbb
cltd
icebp
xchg
xor
aas
lds
outsb
pop
ret
lods
mov
mov
in
push
cmp
ja
add
frstor
adc
pop
inc
imul
leave
jmp
popa
mov
ja
aas
int3
popf
pop
mov
xchg
jl
and
repz
out
adc
out
jae
stos
in
mov
cmp
sub
xor
sti
fisubl
dec
inc
mov
cmp
push
xor
mov
mov
dec
cmp
out
sbb
dec
call
popa
xchg
adc
mov
xchg
test
aad
fimuls
lods
xorb
mov
cmp
mov
fiadds
adc
rcll
dec
in
arpl
aas
aad
xchg
pop
fdivl
aas
or
push
rcrl
incb
fs
sbb
aas
cmpsb
jbe
mov
out
enter
or
and
stc
lea
adc
insb
sar
push
movsb
mov
fildl
xchg
sub
mov
mov
in
lock
pop
xchg
mov
bound
daa
leave
popf
adc
sub
jno
outsl
fnstcw
jmp
out
outsl
xlat
imul
adc
mov
cmpsl
jb
and
aam
adc
call
xchg
mov
jg
push
xchg
popa
or
dec
insl
mov
and
push
pop
in
or
scas
xchg
add
jb
pop
sub
nop
popf
adc
xor
mov
outsb
xchg
repz
inc
sub
dec
push
lret
mov
pop
inc
in
adc
mov
popa
add
in
cmp
mov
mov
je
fdiv
jae
testl
pusha
pop
aam
popf
and
push
jnp
and
mov
or
add
lret
xor
jb
lahf
mov
aas
push
and
dec
ret
xchg
cltd
sbb
stos
aad
sub
dec
push
js
mov
push
inc
aam
and
cmpsl
mov
push
lds
es
loop
ret
shll
mov
popf
lock
jp
or
mov
out
ja
call
add
push
lcall
jb
push
repnz
cwtl
call
dec
inc
das
mov
std
push
jl
and
rcrb
xchg
mov
repz
push
xchg
adc
xchg
popa
popf
mov
jge
mov
fcom
fwait
enter
js
dec
jae
test
cmp
xchg
inc
mov
xchg
pop
pop
push
push
xor
pushf
cmp
jle
pop
sti
xchg
adc
cmc
ficoms
ficoms
push
sbb
pushf
mov
push
push
jae
add
popf
adc
orb
add
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
jbe
fnstsw
mov
mov
xor
sbb
shrb
lds
ss
adc
imul
mov
inc
push
pushf
mov
lahf
sbb
ljmp
mov
push
xchg
dec
adcl
icebp
ljmp
std
icebp
pop
pop
cmp
cltd
push
shrl
lods
cmc
je
and
pop
inc
lds
popa
xchg
mov
pop
xchg
popf
dec
mov
leave
push
mov
sub
inc
and
lock
fcmovnb
shll
das
mov
sbb
jae
orb
mov
and
lahf
adc
or
mov
mov
enter
movsb
push
push
aaa
pop
mov
sub
sub
jge
jg
mov
lret
call
adc
ret
push
fimull
push
or
sbb
shll
jge
sub
dec
out
lret
test
icebp
jnp
rcrb
out
in
cmp
mov
in
push
clc
mov
nop
cmp
mov
mov
pop
dec
loope
pop
mov
sti
xchg
cmp
cmp
mov
cmpsb
popa
mov
inc
inc
data16
fwait
cwtl
dec
lcall
pop
xchg
push
and
cmp
pop
xorb
das
mull
jmp
lds
mov
stc
pop
fimuls
add
fwait
test
mov
stc
shlb
out
stos
cmp
xchg
jp
sahf
sub
and
push
inc
mov
cli
lcall
cmc
push
fidivrl
movsl
loop
pop
xchg
xor
cltd
xchg
mov
inc
cltd
adc
mov
imul
jge
icebp
sbb
out
cs
imul
shlb
cmpl
pop
jecxz
cmpsl
arpl
ljmp
xchg
sub
rorl
insb
sub
imul
test
fs
in
add
or
ja
xor
cli
pop
jb
mov
push
mov
dec
add
out
jb
cmp
or
data16
push
adc
pop
dec
test
imul
adc
hlt
adc
jle
pop
mov
pop
xchg
cmp
xchg
add
js
addr16
lcall
jno
iret
popa
cmp
xchg
cmpl
loop
push
andl
push
lret
movzbl
das
add
or
sub
sbb
or
fcompl
enter
dec
mov
pusha
pop
inc
inc
ja
rorl
ljmp
push
jne
shr
jnp
mov
leave
iret
lcall
inc
sub
adc
cmpsl
or
and
add
mov
ret
mov
shlb
pushf
aad
add
mov
jno
pop
ret
cmp
lods
das
insl
mov
xchg
mov
add
gs
test
adc
jno
test
push
adc
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
mov
in
les
ret
scas
and
call
jno
ret
fidivl
cwtl
lods
jb
push
mov
lret
pop
cmp
das
cmp
mov
lock
bnd
or
pop
out
js
xchg
lds
push
leave
inc
arpl
or
dec
aad
rep
mov
jae
stos
out
and
test
imul
icebp
lret
push
imul
fadds
test
cmp
jns
pop
repz
lahf
xor
mov
push
cld
xchg
loope
and
push
fbstp
flds
movsl
adc
call
mov
mov
add
mov
or
inc
push
mov
test
int
push
jo
pop
sbb
xsha1
cmpsb
mov
mov
movsb
aad
jecxz
sar
jecxz
repnz
enter
cmp
jp
add
or
int
fsubs
adc
cmpb
xlat
sub
push
add
arpl
pop
pop
lret
lods
fdivrs
dec
ret
dec
adc
xlat
cltd
inc
insl
pop
movd
xchg
iret
and
fldenv
push
pop
mov
fldt
adc
arpl
pop
add
xor
movsb
call
xchg
push
in
test
popa
test
cmpsl
sarl
rol
jb
xchg
shrb
or
clc
js
jnp
lods
je
xor
outsl
or
divb
xchg
outsb
mov
ret
sbb
fistpl
sahf
cmp
std
or
cld
outsl
push
test
pop
mov
pop
rcrb
and
or
adc
adcb
insl
mov
js
icebp
pushl
adc
cs
fisubs
and
stc
xchg
and
xor
leave
test
je
outsl
lahf
mov
sbb
mov
cs
dec
nop
test
xchg
scas
or
insl
xor
sahf
mov
xchg
test
or
push
dec
xchg
daa
fstpl
fwait
add
icebp
sbb
addr16
lock
js
icebp
push
aaa
mov
cltd
sarb
dec
push
xchg
xlat
xchg
cmp
into
jbe
xor
fcompl
lds
jbe
fs
and
inc
pop
sbb
outsb
aas
ja
pop
test
test
xor
ret
cmp
popf
repz
mov
cmp
jne
fcomps
mov
inc
push
inc
add
mov
les
orb
pop
mov
add
xchg
dec
int
pop
and
pop
jmp
es
mov
jmp
xor
or
js
stc
je
sub
xchg
adc
scas
jbe
jo
sbb
dec
add
cltd
std
jp
imul
mov
or
xor
or
xor
fisttpll
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
in
jo
mov
enter
fadds
jmp
xchg
dec
dec
mov
cmp
movsb
jg
loop
cmp
jnp
cmc
call
adc
dec
inc
dec
addr16
inc
stos
lea
aas
call
movsb
aad
mov
fs
and
fsubrp
adc
sub
xchg
dec
sbb
inc
cmp
or
insb
mov
jb
mov
lret
test
adc
fstl
orb
xor
add
jae
and
adc
ret
ficompl
sbb
adc
mov
or
test
push
cwtl
jmp
mov
scas
out
fs
dec
lahf
add
loopne
push
loop
ss
gs
sub
sti
outsl
jg
loop
and
loop
lock
sub
sub
pusha
mov
out
pop
fwait
pop
and
sbb
inc
ljmp
push
insb
mov
jp
enter
jnp
push
pop
mov
push
sbb
nop
mov
mov
xchg
mov
xchg
jne
lahf
imul
sbb
sbbl
aam
mov
push
mov
lret
add
jae
lods
mov
insl
pop
lods
add
cld
jle
sti
pop
lahf
daa
cmpsb
xchg
fcmovbe
mov
fmul
xchg
ret
lret
icebp
jle
mov
ds
es
rclb
add
gs
inc
push
cs
inc
pop
jge
jne
test
bswap
fimuls
pushf
xchg
ljmp
int
repz
mov
mov
push
jle
pop
push
mov
aad
lcall
fldt
xchg
xor
insb
adc
in
inc
aaa
cltd
push
xchg
dec
or
push
adc
out
in
jne
fdivl
out
icebp
sti
pop
ljmp
sti
or
cmc
pop
mov
add
divb
aam
lds
insl
repz
add
jnp
push
mov
cltd
mov
or
ja
mov
stc
push
lahf
and
dec
pop
cmp
in
push
pop
cmpsl
jg
push
mov
aad
les
mov
pop
mov
xchg
adc
das
icebp
push
mov
movsb
lahf
jp
jne
or
outsl
cli
fistps
adc
mov
push
insb
cmc
out
jecxz
mov
out
push
popa
insb
mov
inc
mov
scas
repnz
testb
xor
mov
negl
mov
cmp
cli
popl
stc
call
xor
enter
mov
dec
fs
loope
sub
cmpl
cli
int3
or
xchg
push
sbb
xchg
imul
jae
jae
and
cltd
cwtl
xchg
stos
lock
push
push
xchg
jbe
push
adc
sbbb
xchg
mov
enter
add
call
mov
mov
xchg
fisttpll
mov
mov
adc
mov
inc
inc
jge
or
mov
push
cmc
add
cmp
jb
xchg
insb
rol
ds
dec
mov
pop
mov
ljmp
pushf
dec
mov
int
inc
outsl
cmp
or
mov
push
fisttpl
out
and
bound
cmc
mov
mov
jge
jle
mov
cli
xor
test
adc
sub
sub
sti
jmp
loopne
sbb
aaa
ret
icebp
lret
sbb
mov
mov
pop
xchg
out
loopne
dec
subb
inc
sbb
nop
adcl
cmp
cmp
add
xor
fidivrs
mov
fucomp
xchg
push
adc
sahf
popf
mov
lds
push
xor
lock
lret
and
push
in
scas
inc
jg
loope
ficompl
pop
jp
xchg
or
xchg
sub
mov
clc
inc
andb
jae
fnstsw
or
into
push
mov
int3
sub
dec
pop
mov
mov
mov
negb
mov
jmp
or
jmp
pop
fimull
icebp
push
sbb
xchg
insl
dec
mov
and
pop
sbb
iret
jno
test
lcall
adc
cli
jle
lcall
lret
mov
stos
push
scas
cmpsb
insl
pop
mov
pusha
add
andl
aam
loope
cmp
popa
or
pop
pop
jo
popf
in
xlat
fs
mov
iret
xchg
push
jge
pushf
in
fsubrs
mov
xor
addr16
xor
pushf
and
xchg
in
lods
jg
pop
mov
mov
mov
xor
ja
bound
sbb
xchg
fs
fnsave
dec
pop
popa
sub
jbe
push
in
movsl
xor
inc
xor
or
jne
inc
popa
pop
daa
dec
aas
das
inc
mov
mov
jbe
adc
cli
mov
mov
jno
jne
sub
cmc
test
sbb
sub
or
add
ljmpw
mov
xchg
mov
sbb
sub
sub
shlb
enter
cmp
and
mov
leave
pop
lahf
enter
jne
jle
lods
pop
lods
jp
pop
pop
sahf
data16
cmp
jbe
or
aaa
roll
dec
lock
mov
test
sub
in
sbb
lea
sub
and
mov
xlat
jo
or
iret
idivb
cmp
cmp
insl
xchg
ds
and
inc
fs
inc
pop
iret
mov
and
test
lcall
rorb
cmpsl
fadd
ljmp
or
jns
outsb
bound
mov
mov
repnz
int3
sti
in
mov
push
je
icebp
dec
pusha
dec
in
xor
add
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
ds
mov
mov
pop
outsb
in
imul
int3
push
bswap
push
fidivs
xor
repnz
pusha
mov
push
inc
xchg
xchg
xchg
xchg
sub
jb
jb
mov
jne
gs
push
scas
jb
ud1
add
cmpsl
fstpl
cmp
inc
lret
outsl
out
cmp
sbb
cmp
sbb
sub
lea
inc
sub
arpl
sarb
enter
mov
xor
add
xor
inc
cld
jge
leave
sbb
sub
iret
inc
add
sbb
xchg
sbb
sub
fnstsw
mov
hlt
imul
mov
std
inc
fimuls
or
or
movsl
push
add
ret
fldl
mov
jp
xchg
lock
sbb
sub
xchg
sub
in
or
lret
fsubrl
cli
addr16
mov
popf
pop
aaa
movb
sbb
add
and
call
int
pop
inc
push
minps
fimull
lahf
add
in
cld
fldcw
mov
dec
pop
push
sub
push
fisubs
sub
shll
scas
repz
sbb
js
shll
dec
dec
pop
addr16
inc
cld
sarb
pop
outsl
lcall
xchg
outsl
gs
adc
inc
inc
shlb
or
dec
mov
mov
leave
jmp
into
push
dec
mov
cmp
sbb
aas
cwtl
aas
lods
or
shrb
not
popa
sbb
inc
rcrl
pop
xchg
push
pushf
in
jle
scas
fs
out
inc
test
aam
fmull
lret
and
xchg
adc
inc
fadd
scas
or
push
jecxz,pt
sub
xor
mov
ja
idivb
stos
out
pusha
lcall
push
es
mov
xor
lea
sub
and
out
enter
xlat
aam
es
movsl
push
daa
push
in
dec
adc
ds
outsb
or
enter
nop
stc
cmpsl
or
adc
push
cmpl
push
cmp
data16
inc
push
pop
jo
adc
xor
add
fcmovu
mov
loopne
jne
movsb
push
arpl
mov
dec
jmp
mov
shll
mov
xchg
in
fildll
mov
pop
jge
roll
int3
sbb
xor
push
out
sub
jne
jns
jp
cmp
mov
xorb
inc
fwait
add
and
insl
and
rcrl
or
xchg
ja
xchg
test
adc
fdivs
jae
idivl
ljmp
sti
xchg
rcll
fdivrl
shl
sub
and
mov
add
into
jb
daa
nop
in
sub
mov
subl
scas
std
jecxz
sbb
ljmp
test
add
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fldl
sub
nop
insb
mov
mov
pop
inc
dec
les
loop
fwait
add
ret
gs
add
mov
rclb
cmpsl
sbb
push
leave
ret
cmp
add
mov
push
jmp
mov
dec
sub
cmpsb
push
insl
mov
testb
or
cmp
int
ja
testb
imul
and
mov
jle
jb
cmp
and
lret
loopne
fdivrs
mov
xor
inc
sub
sbb
push
add
aas
stos
mov
mov
lret
xchg
cmp
sub
das
or
inc
adc
mov
jg
dec
push
cmp
nop
int3
or
jg
mov
sbbl
xchg
mov
jg
jle
ljmp
in
xchg
leave
or
push
dec
push
mov
pop
mov
or
lret
or
sub
in
shll
dec
jmp
icebp
mov
repnz
mov
fs
outsl
jl
int3
aaa
jns
jg
out
jo
scas
mov
les
cmp
pop
lahf
imul
pushf
cmp
fmull
cmp
xchg
mov
test
jmp
ret
inc
mov
and
xor
aad
pop
mov
jbe
jb
adc
mov
xor
pop
mov
mov
dec
and
movsl
push
rcrb
imul
subb
xchg
test
sahf
mov
icebp
lahf
jle
in
adc
mov
ss
fidivl
lea
mov
sub
mov
sbb
pop
dec
pushf
cmc
fstpl
xchg
pop
mov
mov
mov
cmpsl
push
pushf
push
ret
neg
data16
add
inc
movsb
mov
mov
sub
rcrb
xor
sub
and
out
ja
or
push
inc
or
lock
call
pushf
add
nop
mov
xor
sub
inc
jle
xchg
out
aad
fistps
pop
add
cmp
xchg
mov
sub
ficoms
cmc
stos
das
sbb
jge
add
icebp
adc
rorb
sub
jge
push
dec
test
data16
cmp
sahf
jp
mov
aas
xlat
inc
jns
and
das
fisubrl
cld
gs
jecxz
jb
call
jle
dec
insb
subl
mov
inc
sbb
es
lock
cmp
adc
stos
push
mov
jno
xchg
outsb
fadds
cmp
add
add
lea
pop
bound
ror
jae
dec
lret
add
es
jbe
mov
popa
call
test
cli
sarl
push
push
out
rorl
test
mov
dec
push
fwait
push
shufps
ja
add
test
ret
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
nop
pushf
mov
mov
les
inc
loope
int3
insl
js
push
lahf
leave
add
push
push
lods
je
lods
push
add
out
pop
repz
ficoms
ret
enter
pop
repnz
jp
push
sahf
adc
pop
xor
lahf
aam
imul
inc
insl
push
mov
icebp
js
shlb
scas
pop
jecxz
daa
pushf
inc
in
sbb
cwtl
popa
mov
mov
cmp
pop
btc
cmp
out
adc
push
add
pop
push
scas
cs
jge
rcl
leave
jo
adc
popl
add
cmp
enter
shr
jb
dec
outsb
xchg
push
iret
cmpsb
add
lahf
arpl
mov
aam
jbe
into
jge
popf
jecxz
popf
inc
xor
gs
adc
and
mov
adc
movsl
data16
movsl
outsb
add
xor
ljmp
dec
xchg
xchg
das
push
aas
dec
mov
js
cwtl
ror
stos
jecxz
aam
dec
mov
test
jmp
aad
lahf
or
mov
pushaw
or
jbe
sub
sbb
mov
dec
pop
lods
jecxz
mov
aad
or
hlt
lret
jbe
int3
ds
jge
out
lahf
stc
cmp
fs
cmp
cld
int
or
cmc
sbb
test
lcall
das
jb
ja
push
lcall
hlt
push
loopne
pop
mov
out
pop
leave
push
push
popf
pop
mov
jle
rorl
or
fs
jbe
inc
push
mov
sbb
fstpt
lcall
addl
xor
out
jbe
popl
pop
mov
xor
mov
jmp
adc
in
mov
into
inc
xor
test
scas
imul
popf
sub
push
inc
lret
cwtl
shr
cmp
js
movsb
adc
sub
jecxz
sti
push
or
xchg
xchg
fsubrl
jl
cmp
mov
scas
jmp
or
fucomip
fisttpll
mov
sub
xchg
pop
inc
ficoms
pop
fiadds
gs
push
outsb
sbb
sub
fwait
jp
mov
push
and
icebp
xchg
subl
aas
gs
out
push
dec
call
fcmovu
into
jne
cmpb
inc
bound
scas
test
mov
jne
mov
data16
scas
ret
sbb
lods
js
daa
mov
aas
loop
loopne
insb
popf
mov
and
shl
mov
imul
adc
movsl
shlb
mov
sbb
out
fcompl
push
int
cli
in
mov
pop
mov
je
push
pop
insl
push
rolb
test
jmp
in
test
mov
xor
ror
cmp
movntq
add
push
leave
cmp
outsb
test
incb
mov
and
dec
dec
pop
lock
repnz
shrb
add
inc
mov
pop
push
jns
testl
rorb
cmp
cmp
xchg
cmp
pusha
loopne
sbb
lret
out
call
out
and
fildll
and
xchg
stos
loopne
jbe
sbb
imul
lcall
arpl
shr
fwait
inc
push
ret
cmp
push
cmp
mov
pop
loopne
fdiv
sub
decb
dec
out
insb
mov
mov
adc
cmp
arpl
xor
mov
out
out
mov
rorl
and
enter
into
pop
call
dec
sub
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
xchg
insb
sarb
lods
lods
fiaddl
mov
add
adc
outsb
mov
outsb
icebp
mov
out
cwtl
xchg
push
in
push
stos
ftst
inc
jb
fstpt
addl
fnstenv
cmp
xor
or
mov
ret
mov
pop
inc
lods
jnp
int
sahf
sbb
or
fbld
out
mov
xchg
lret
sti
or
scas
loope
repz
enter
enter
add
jbe
sub
jp
fildl
js,pt
inc
or
lds
jecxz
inc
icebp
out
push
sbb
stos
xchg
jno
testl
cmp
mov
aam
mov
in
aam
ja
fisttps
scas
add
push
sub
xor
stos
pop
and
cmp
xchg
adc
xchg
shl
les
pop
sub
mov
insl
lcall
cwtl
sbb
push
lret
xor
out
test
push
or
ja
in
cs
mov
inc
inc
rol
xchg
mov
scas
xor
cmpsb
fimuls
xchg
and
imul
inc
fisubs
pop
jle,pt
jmp
adc
shl
imul
add
movsl
mov
push
test
rclb
and
xor
add
add
jbe
imul
or
sbb
fmuls
test
mov
inc
dec
jl
fldenv
iret
mov
bound
mov
stos
popf
adc
in
aad
jnp
incl
mov
call
cmp
push
pop
and
sub
mov
shlb
jo
and
repnz
dec
cmpsb
adc
jne
inc
xor
je
dec
push
pop
add
incb
push
sti
jmp
loopne
mov
add
icebp
jmp
jp
sub
jg
int3
out
jmp
mov
insl
push
pop
sub
mov
lcall
ret
mov
inc
mov
fs
lret
rorb
push
movsl
ds
lahf
out
std
adc
cwtl
shlb
frstor
mov
ja
cwtl
jns
pop
and
add
inc
push
add
lods
jo
lods
dec
add
in
or
insl
xchg
lcall
cmc
lea
push
daa
nop
mov
cmpb
xchg
test
push
aas
divl
filds
mov
pop
push
sub
imul
cld
xchg
gs
inc
das
push
mov
cmc
and
cmp
call
xor
cmpsl
fstpl
in
xor
add
jg
dec
cmp
xor
cli
in
imulb
aam
xchg
cld
adc
xor
cmpsl
das
add
mov
aam
adc
sbb
arpl
inc
scas
and
scas
mov
scas
int
sbb
test
arpl
popf
inc
jae
scas
mov
leave
add
or
sub
cltd
sub
inc
ljmp
mov
push
ljmp
mov
mov
mov
daa
bound
fwait
dec
push
js
sub
cld
imul
hlt
pop
idivl
iret
jmp
push
push
jb
dec
mov
stc
push
add
daa
in
mov
sub
es
jne
cs
mov
pop
pop
or
aaa
dec
jge
aam
cs
pushf
xchg
sbb
mov
rclb
and
insb
mov
xor
fsub
iret
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
sahf
xchg
push
mov
xchg
adc
mov
stc
mov
inc
jmp
aaa
dec
and
addr16
in
gs
jne
fs
sub
jnp
test
jmp
pop
push
dec
insb
fnstenv
test
cli
das
push
adc
inc
outsl
or
xchg
inc
mov
mov
mov
jp
sarl
mov
xor
push
jno
shlb
ds
lret
mov
adc
pop
in
out
mov
xchg
fiaddl
cmp
lret
icebp
in
mov
imul
int3
notl
sbb
ja
or
cmp
dec
mov
imul
xor
arpl
and
in
sub
jns
mov
jg
iret
in
lds
aaa
cmp
or
jnp
sbb
orl
aad
jecxz
scas
in
dec
je
enter
pop
lods
aad
jbe
lea
pop
pusha
mov
jnp
xor
push
shrl
addr16
cmp
pusha
xor
cmp
test
insl
fldl
stos
loope
aad
cs
aam
jb
ss
pop
leave
daa
inc
and
and
call
jp
scas
dec
cltd
ret
sub
jle
arpl
je
dec
adc
and
cwtl
mov
pushl
icebp
out
test
cld
shrb
arpl
daa
inc
out
adc
xor
ret
iret
sarl
mov
add
xor
popa
push
cmpsl
in
or
push
cmp
fwait
and
pop
popa
jge
and
mov
inc
call
pop
xlat
add
int
xchg
dec
adc
dec
gs
or
shrb
cmpsl
addr16
cs
nop
jo
jne
dec
int3
adc
jp
xor
lds
jo
jb
stos
mov
icebp
mov
mov
xchg
aad
mov
fcoml
cmp
xor
ja
stos
aas
add
mov
loope
and
push
mov
inc
fstl
mov
dec
stos
mov
ljmp
and
jmp
loopne
les
lahf
cwtl
cmp
ljmp
das
arpl
or
imul
xor
or
push
addl
cmpsl
sahf
aaa
aam
xor
and
mov
out
adc
es
mov
pop
xor
repnz
and
mov
sbb
jg
add
push
push
jno
scas
clc
sti
cmpsl
mov
add
arpl
mov
adcb
jle
dec
push
xor
nop
fdivs
push
data16
xchg
dec
pop
xchg
std
jb
sbb
adc
mov
insb
arpl
adc
xor
fnstcw
fchs
lods
inc
rclb
pop
xchg
into
adc
inc
lcall
fmuls
inc
push
xor
ja
pop
call
jo
pop
outsb
pop
mov
lret
ss
dec
in
test
fisubl
xor
fs
sub
dec
or
pusha
inc
jb
fisttps
jg
mov
mov
add
sub
or
mov
mov
stc
xchg
mov
leave
xor
js
stc
lock
sahf
jmp
rorb
push
sti
cmpsl
cltd
imul
inc
mov
fistpll
inc
into
loop
mov
jle
movsb
pop
sub
fidivs
sbb
jbe
ficoms
cli
lret
xor
iret
aaa
aas
lods
cmp
xorb
adc
rcrl
mov
scas
dec
sbb
lcall
cli
push
mov
dec
cmp
fisttps
cld
xor
pop
jecxz
pop
idivl
bound
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
mov
aam
mov
xchg
inc
mov
iret
dec
out
out
sub
in
test
push
aaa
sbb
out
jb
xchg
stc
mov
jp
pop
shrl
imul
cmp
mov
out
mov
movsb
push
mov
int
sarb
fs
sbb
pop
stc
mov
sub
xchg
aas
lods
je
gs
mov
cmp
repnz
mov
jbe
into
inc
out
sbb
adc
mov
imul
and
lahf
cmp
adc
jge
fldt
stos
jbe
inc
adc
jmp
in
ds
xor
clc
and
cwtl
es
mov
loope
mov
jle
fldt
mov
fmul
lods
inc
pop
je
push
xor
jmp
enter
fchs
test
gs
imul
mov
cmp
pop
fs
and
js
mov
dec
pop
push
adc
jns
inc
add
lea
stos
mov
loop
mov
loope
xor
push
int3
mov
iret
dec
push
insl
mov
adc
fidivl
sahf
jns
cmp
adc
push
mov
insl
cltd
adc
cli
sub
push
jbe
cmp
jns
ja
dec
iret
push
sub
repnz
lea
inc
pop
sub
jns
pop
sbb
inc
pop
add
add
fstl
pop
mov
adc
or
mov
jmp
and
dec
stc
jbe
jp
dec
mov
jmp
notb
je
ficomps
inc
add
xchg
pop
lock
rorb
xor
xor
nop
test
lock
cmpsb
inc
inc
cwtl
rol
push
mov
xchg
inc
or
jne
insb
fwait
cmpb
push
bound
jnp
fists
jle,pn
mov
push
fdivp
icebp
aam
adcb
inc
addb
loopne
xchg
and
inc
mov
test
iret
xchg
imul
dec
in
xchg
push
pop
in
movl
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
and
sarb
push
test
xor
negl
add
cmp
xchg
jae
test
stc
xchg
aas
mov
cld
mov
test
inc
xchg
scas
and
stos
imul
push
popf
loop
push
jmp
sbb
xor
mov
lcall
imul
dec
sbb
es
xor
pop
out
xor
in
popa
mov
lock
cs
out
movsl
sbb
pop
loop
jl
jmp
ljmp
in
data16
dec
lods
movsb
aam
es
xchg
das
cmp
xlat
ljmp
mov
and
or
rcrb
mov
add
mov
push
push
not
mov
test
scas
addr16
leave
andl
aad
vpcmpgtw
jecxz
popa
stc
sub
mov
jmp
js
cmpsl
addl
cmc
hlt
and
icebp
push
movw
call
inc
enter
sub
lds
addr16
shll
mov
clc
jecxz
sbb
cs
cmc
mov
cmpsl
add
std
and
aam
xor
and
pop
mov
out
mov
orl
mov
push
pop
pop
jmp
add
and
sbb
jne
insl
add
xlat
cmp
adc
mov
ja
xchg
cmpsl
xlat
ss
mov
adc
mov
push
mov
cmp
outsl
lods
push
inc
out
lret
mov
mov
pop
inc
or
bnd
cmpb
in
js
daa
pop
loope
push
pop
shrb
cmp
sti
cs
mov
out
xor
and
jp
cli
pop
push
cltd
sarl
lods
adc
hlt
enter
loop
mov
lahf
icebp
xchg
mov
inc
sbb
jle
xor
iret
stc
cmp
ret
push
mov
cmp
fldt
push
lcall
and
orb
or
clc
mov
push
jg
rcrb
dec
lock
test
push
xchg
ret
movsb
lea
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
mov
faddp
mov
xchg
push
mov
imul
add
loope
outsb
add
cmp
cmovbe
jo
push
ss
sub
in
push
xor
sti
insb
mov
fisubl
stos
xchg
int
cwtl
aaa
int
mov
ja
ljmp
sbb
outsb
test
adc
movsl
inc
mov
fstpt
int3
cmc
mov
inc
hlt
mov
stc
inc
mov
fdivrs
fiadds
jmp
xlat
fdivr
xchg
scas
in
bound
mov
sahf
sub
notb
jecxz
jns
ss
mov
xchg
pop
test
mov
push
add
push
in
imul
ljmp
jmp
xor
fcmovnb
fnclex
scas
aad
enter
mov
mov
sbb
lods
dec
add
xchg
out
cmpl
cmp
aam
xor
in
lret
push
cmp
xlat
mov
addb
jl
arpl
mov
shll
stos
pop
xor
dec
mov
dec
test
sbb
movsl
fwait
mov
pop
les
or
lea
mov
nop
cmp
cs
das
xor
xchg
mov
mov
mov
outsb
jnp
sbb
movsl
jle
jbe
mov
push
pop
push
xchg
outsb
xchg
loop
sub
int3
loopne
and
add
push
repz
cmpsb
fldl
imul
cld
add
sub
mov
out
jno
xchg
mov
ja
xor
push
mov
cld
push
ret
int3
repz
adc
out
daa
fstl
ds
repnz
adc
outsl
sub
cmp
fwait
xor
xchg
stos
mov
addr16
jle
out
gs
lock
iret
mov
clc
inc
dec
push
mov
xorps
outsl
ds
test
and
mov
iret
aad
fs
jns
cmp
fdivs
bound
pop
jo
sbb
rorb
adc
insl
addl
pop
add
add
add
xchg
jecxz
mov
jb
sahf
nop
mov
loop
mov
adc
sbb
or
shlb
sti
rol
adc
xchg
inc
repz
xchg
adcl
je
sahf
mov
dec
mov
cs
test
xchg
loopne
mov
cmpl
pop
adc
test
push
mov
xorb
enter
movsl
cmp
or
inc
pop
cli
dec
and
decl
movsb
push
add
mov
fs
out
aam
mov
mov
jnp
cmpsl
or
xor
mov
mov
mov
out
inc
pop
mov
testb
rolb
fwait
dec
sarb
lock
push
sub
lcall
outsl
int
add
xor
imul
dec
mov
sub
repz
or
xlat
or
dec
cs
add
daa
stos
es
outsl
das
imul
jne
xor
and
insb
push
mov
shl
cmp
mov
mov
negl
movsl
sbb
xchg
stos
mov
inc
mov
lock
movsl
mov
pop
xor
shrb
jmp
adc
inc
mov
gs
outsb
aam
testb
add
lcall
repnz
add
xlat
and
stc
xor
bound
bound
cmp
dec
mov
sub
sub
xchg
in
jl
insl
stc
xor
add
fadds
cltd
pmuludq
sub
fistl
test
sbb
jecxz
cli
xchg
pop
repnz
inc
sbb
pop
inc
and
or
push
repz
add
sbb
or
xor
imul
fistpll
inc
dec
addr16
stc
or
xchg
ret
cld
sub
fdivr
fs
fiadds
daa
sbb
addr16
leave
subl
sahf
jge
sub
in
ret
xchg
xor
and
daa
xor
mov
popf
inc
rcrl
mov
sbb
jle
mov
inc
ror
scas
inc
int3
lret
push
mov
testl
scas
test
punpckhdq
inc
out
test
xchg
int
pop
xor
jne
jge
jge
ffree
mov
addl
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
sbb
out
mov
mov
mov
mov
add
adc
jmp
xor
call
inc
xor
xchg
daa
mov
xor
cmp
enter
lahf
xor
push
mov
and
in
sahf
roll
xor
mov
cmp
sub
or
mov
je
fsubrs
dec
inc
mov
inc
sbb
cmp
gs
adc
inc
scas
cmp
jne
roll
push
mov
sbb
mov
sub
xchg
sahf
or
mov
sub
push
subb
push
inc
xor
push
ret
pop
mov
adc
add
add
mov
sub
and
adc
pusha
cmp
ret
jae
cmp
insb
leave
cs
into
test
push
in
lahf
scas
mov
or
add
ja
xor
xchg
dec
cmp
testb
push
cmp
ret
stc
pop
cwtl
fcoms
sahf
es
dec
pop
test
in
mov
in
rorl
sub
lcall
imul
out
jo
pop
inc
int
les
inc
in
sarl
pop
xchg
stc
movsl
mov
cwtl
iret
movsb
aaa
repz
dec
into
pop
cmp
adc
jno
sbb
and
lock
out
push
mov
dec
xchg
push
fidivs
xlat
sbbl
pop
inc
push
lahf
or
test
jmp
inc
outsl
xchg
cld
jnp
scas
scas
mov
add
adc
into
fdivs
fldcw
push
movsl
outsb
inc
cmp
and
sarl
and
cld
lahf
xchg
or
inc
sti
adc
jmp
mov
mov
lock
outsl
in
mov
add
inc
icebp
xchg
js
es
inc
cmp
sbb
adc
mov
sbb
xchg
out
iret
pop
popf
test
cmp
aas
sbb
inc
lcall
dec
shlb
and
popa
pop
cmpsb
lret
jb
mov
cltd
int3
lods
xchg
int
push
fdivrl
add
mov
cmp
into
scas
rorb
rcll
dec
inc
jb
or
popa
imul
cmp
add
add
push
adc
inc
test
push
js
add
add
adc
add
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
xor
ljmp
jne
bound
add
cmp
daa
sti
aas
jl
lahf
adc
outsb
dec
jnp
push
lods
add
repnz
cmp
adc
sti
jns
jne
pusha
cmpl
pusha
loop
push
pop
push
into
push
loopne
cmp
pop
mov
mov
in
jb
pop
cld
adc
in
dec
lcall
add
fildl
sti
pop
or
adc
cli
in
imul
mov
push
test
mov
je
cmp
or
dec
sub
cli
mov
faddl
aaa
pop
or
aad
aam
addr16
fwait
cwtl
rolb
das
xor
xchg
pop
fidivrs
jbe
mov
ja
sbb
js
les
push
sbb
lds
aam
stc
fidivrs
in
mov
mov
rolb
pop
loopne
inc
mov
mov
push
std
adc
adc
test
push
mov
ss
fistpll
jl
iret
inc
push
clc
scas
lds
stos
cmp
jl
stos
or
jb
lea
loopne
aas
aaa
js
jbe
cmp
ds
ljmp
fs
inc
adc
adc
shll
jno
cld
sbb
sbb
add
jno
jae
daa
xchg
movsb
sahf
mov
dec
pusha
inc
pop
sbb
xchg
das
into
and
rsm
pop
adcl
xchg
or
std
mov
lods
dec
jno
sub
add
xlat
arpl
push
and
and
sub
sbb
test
sub
or
xor
loop
cltd
mov
xchg
out
dec
sub
sub
push
push
iret
dec
xor
cli
in
pusha
movsb
rcrl
jmp
fwait
adc
add
mov
loop
jnp
xor
enter
push
sbb
test
jecxz
ja
pop
lods
mov
pop
jae
into
or
and
xor
es
fldcw
aad
inc
je
iret
cmp
lret
into
lret
lock
adc
push
loop
sub
movl
in
ljmp
lahf
add
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
xchg
fsubr
sarb
outsb
sahf
fdivrl
repnz
sub
inc
test
or
pop
push
inc
xchg
jmp
and
inc
lahf
dec
mov
es
out
and
les
les
xchg
bound
dec
fsubrs
mov
jl
dec
loopne
pusha
hlt
dec
aad
mov
adc
cmp
in
orb
mov
mov
add
pop
scas
xchg
sahf
ret
fbld
lea
ljmp
adc
andl
sbb
out
jno
mov
push
pop
add
cmp
pop
loope
enter
mov
cmp
xchg
in
sbb
fadd
or
insb
fisttpll
mov
cmpsl
mull
testl
repnz
xchg
insb
push
push
mov
mov
shll
pop
rorl
mulb
test
jge
pusha
hlt
inc
fucom
hlt
pusha
and
lret
sub
rol
sub
xchg
test
mov
mov
inc
lret
mov
push
mov
pop
stc
lds
mov
out
aas
xor
iret
enter
fsubrl
xor
imul
pop
mov
pop
test
pushl
mov
inc
ret
cwtl
stc
fstps
shll
mov
or
push
movsl
xchg
ljmp
inc
fbstp
sub
mov
dec
movsb
dec
repz
push
jp
pop
fsts
outsb
in
pushf
ret
cld
insl
daa
adc
adc
mov
stc
repnz
test
mov
jecxz
add
inc
dec
and
mov
ds
movsl
pop
outsl
icebp
lock
jne
stos
cmp
clc
call
xchg
or
xchg
movsl
out
jmp
popa
cmp
mov
sbb
push
ja
bound
cmp
cmpsb
repz
mov
ja
ss
rorb
cmp
mov
push
aaa
add
mov
loopne
scas
mov
sub
ret
sbb
xor
sbb
rclb
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
rcll
sarb
ret
cmp
std
test
jne
adc
push
xchg
repz
mov
xchg
call
xchg
adc
add
mov
mov
push
pop
je
dec
jge
mov
xchg
inc
mov
pushf
lret
mov
push
mov
mov
roll
ret
or
shrl
xor
rclb
push
call
roll
lds
xchg
lret
xchg
pusha
pop
jae
scas
call
adc
mov
sbb
pop
xor
aas
dec
mov
add
stc
nop
pop
insb
dec
dec
out
pop
cmp
imul
mov
cmpsl
mov
and
ljmp
fs
frstor
mov
sbb
lods
mov
cmpl
sbb
dec
pusha
je
stos
outsb
scas
das
in
mov
mov
inc
js
mov
imulb
mov
adc
les
and
xchg
jbe
test
dec
cld
push
movl
addr16
les
daa
dec
push
inc
sbb
sbb
addb
xchg
lock
or
mov
stc
mov
sbb
dec
adc
stos
cmc
sub
stc
cli
stc
sub
inc
inc
mov
and
pop
gs
iret
mov
cwtl
add
fstpl
sub
jmp
mov
add
aad
call
iret
rorb
mov
ds
addl
or
lret
adc
les
fs
gs
das
lods
jg
inc
push
out
arpl
lds
inc
mov
lret
cmp
lcall
cmpsb
add
mov
cmpsb
repnz
lods
repz
jnp
pop
test
lock
cmc
mov
sbb
lods
xlat
jnp
xchg
cmp
aad
rorb
sbb
jb
dec
push
and
cli
pop
out
push
mov
notb
cmp
sub
fwait
test
ret
mov
cld
lea
xchg
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
dec
add
nop
lret
test
mov
or
pop
mov
aaa
fsts
out
push
jb
jp
lds
xchg
sarl
sbb
aas
mov
call
mov
push
xchg
fwait
jmp
xchg
je
push
mov
jne
dec
aaa
je
jg
pushf
or
daa
les
lods
or
adc
lods
out
lock
and
test
jns
mov
cld
je
outsb
outsl
popf
pushf
push
mov
andb
cmp
into
sbb
cmp
aam
neg
lret
adc
mov
fimuls
push
enter
sbb
dec
icebp
sbb
mov
out
mov
stos
out
gs
out
lods
dec
mov
sbb
xchg
jns
inc
cmp
stos
les
cmp
mov
sbb
and
sarb
mov
mov
add
jge
xchg
cmp
sub
popa
imul
imul
scas
fnstsw
xchg
mov
cmp
data16
jns
sub
aas
fs
and
xchg
cmpsl
in
inc
sbb
add
xchg
subl
insb
mov
and
movsb
adc
jb
sbb
or
lret
push
andb
mov
add
pop
push
dec
lahf
cmp
mov
pop
push
xchg
pop
fwait
scas
pop
sub
int
lret
sub
sub
mov
inc
lahf
sub
jae
shl
or
or
mov
lds
mov
mov
ret
mov
push
sub
jae
jae
inc
add
jmp
movsb
cld
push
mov
xchg
stos
repz
les
xchg
mov
dec
jge
fisttpll
dec
add
xchg
push
xchg
cmp
fsubs
pusha
cltd
f2xm1
cmp
push
pushf
adc
test
cld
cltd
or
mov
int
inc
int
or
xchg
shll
stc
ds
push
lcall
daa
lock
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
xchg
inc
sti
sarb
jg
fimull
js
sbb
icebp
adc
xchg
push
es
call
fwait
sub
dec
or
and
int3
cli
mov
shll
pushf
jl
leave
pop
out
addr16
mov
push
pop
data16
bound
jno
repnz
add
add
outsl
pop
jmp
aad
jns
sub
fisubrs
mov
fs
or
mov
and
inc
jle
pusha
enter
push
sub
sub
mov
repnz
push
dec
jae
sub
jo
push
lcall
and
outsb
inc
jns
jl
jmp
repz
fdivrl
cld
push
loopne
leave
fistpll
mov
test
out
pop
lahf
and
stos
lods
cmp
adc
inc
mov
ds
cmp
adc
shll
dec
gs
ds
mov
sbb
pop
mov
lcall
mov
or
icebp
and
and
xor
stos
lret
int
mov
xor
inc
push
pusha
cwtl
lods
pop
inc
lods
enter
jmp
jnp
imul
test
lret
and
push
insb
dec
push
imul
inc
or
xchg
std
and
dec
pushf
test
jnp
rolb
stos
adc
xor
jmp
sbb
enter
fdivrs
sbb
sahf
mov
rolb
sbb
stc
test
cmpsb
mov
cltd
dec
sub
add
icebp
sbb
rcrl
pop
fists
imul
cld
ret
div
lods
sub
cltd
outsl
ljmp
mov
dec
mov
cltd
lock
das
cli
lret
xor
sub
hlt
jno
fs
mov
or
mov
adcl
in
xor
add
loopne
daa
mov
jnp
imul
and
lcall
shrl
sahf
jp
pop
sbb
loopne
sbb
data16
pop
cs
insl
dec
jecxz
leave
lret
or
std
rolb
mov
adc
sbb
shlb
lods
inc
cwtl
push
sbbl
pushf
and
add
add
enter
add
add
fimull
test
sbb
add
push
and
xor
shld
jmp
lret
repnz
xchg
xor
mov
inc
mov
test
mov
sbb
and
and
sub
adc
test
hlt
jmp
shrl
mov
adc
and
push
sbb
fsubs
mov
cmp
mov
push
sub
mov
daa
insl
stc
or
repnz
iret
std
push
imulb
mov
xchg
imul
ljmp
cmp
dec
sbb
imul
mov
aam
inc
loop
out
or
add
cmp
adc
ficompl
loope
mov
pop
xor
andl
mov
mov
sub
sub
mov
popf
adc
dec
sbb
push
sbb
jg
inc
cs
jnp
shll
xlat
insb
jecxz
test
cmp
jne
dec
pop
sti
in
push
mov
ret
inc
sbb
jle
pop
jb
pop
xchg
cmp
out
pop
inc
push
xor
repnz
int
imul
fisubs
or
das
mov
into
pop
nop
mov
or
adc
jbe
and
ret
mov
pop
lods
sub
push
paddusb
out
cmpsl
inc
fstpt
jb
out
insl
gs
cmpsl
jb
lret
mov
test
push
int3
in
push
push
or
push
and
cmp
fnstcw
add
inc
xor
aad
mov
jecxz
dec
andl
lahf
mov
in
repz
mov
lret
lds
bound
cli
xlat
ds
mov
cmpb
stos
add
push
mov
std
push
shr
xchg
sbb
xchg
cwtl
pop
jbe
movsl
jle
adc
mov
cmp
lods
in
cmp
lret
ljmp
cmp
inc
pop
inc
mov
stos
xchg
xor
scas
fdivl
orb
and
gs
mov
inc
cmp
pop
jg
dec
dec
push
jge
push
pslld
mov
or
sbb
jmp
pop
pop
addr16
aas
cld
cli
and
dec
sbb
and
dec
xchg
sub
xchg
xchg
icebp
mov
jbe
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
popa
ret
xor
mov
xchg
cmpb
pop
cmpsl
into
pop
push
jo
xchg
out
cmp
push
xchg
jge
cmp
mov
mov
lods
mov
test
sub
bound
dec
subb
je
in
sbb
aaa
xor
xor
outsl
fdivl
sbb
in
mov
jns
mov
popf
dec
movaps
pusha
imul
pusha
enter
cmpb
rcrl
adc
xor
dec
das
cmc
in
push
addl
ret
out
test
cmp
mov
pop
ss
stos
subb
popa
cs
mov
cs
mov
inc
rcll
outsl
inc
incb
stos
cs
sbb
data16
icebp
push
inc
cld
jle
scas
fdivl
jbe
dec
jmp
loop
sysret
pop
fwait
or
xchg
mov
push
fcompl
cwtl
cmp
addr16
mov
add
lret
clc
in
mov
imul
movsl
aam
sbb
mov
dec
leave
xchg
mov
bound
pushf
lock
mov
cmpsl
je
adc
dec
enter
pop
ss
dec
pop
jbe
test
jb
test
xchg
pushf
dec
jg
test
mov
cmp
pop
jae
fwait
sub
jl
lcall
jnp
jecxz
shrl
std
sub
ja
ret
movsw
sub
sbb
rorl
cli
pop
test
sbb
mov
dec
inc
pop
dec
rcrb
fcompl
aaa
das
xor
jl
adcb
jae
inc
psubq
xchg
sbb
test
cld
xchg
in
push
std
rorl
mov
lret
out
add
mov
mov
fistpl
push
fcompl
pop
das
or
inc
xchg
dec
and
movsl
int
mov
and
jecxz
push
repnz
rcl
aaa
add
mull
enter
movsl
xchg
enter
lds
test
push
xchg
xor
jg
hlt
xor
iret
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
pop
mov
or
mov
xchg
mov
dec
adc
lahf
sbb
mov
xchg
xchg
iret
addr16
sbb
cmc
cmpsb
repnz
pop
mov
adc
scas
mov
cwtl
pop
mov
jp
pop
lret
sub
and
std
rol
sbb
fwait
mov
sbb
das
jne
adc
addr16
xchg
loop
push
ljmp
in
jne
add
cs
pop
fstl
mov
and
inc
sbb
mov
fsubrs
mov
adc
jp
xchg
sbb
ljmp
jne
repnz
and
fisubl
pushl
outsb
cltd
jo
ss
out
call
shl
push
jb
scas
rol
lods
adc
pop
pop
imul
mov
add
mov
fistps
pusha
mov
xchg
stc
xor
sub
pop
hlt
arpl
clc
int
dec
jmp
mov
sbbb
xchg
adc
adc
stc
sub
iret
ja
mov
pop
or
ja
cs
xor
jle
jmp
mov
fidivs
sub
cmpsl
cmp
cwtl
jb
fildl
add
mov
sbb
arpl
sub
adc
cs
sub
sbb
jg
gs
int
jno
jmp
js
cmpsb
cltd
in
mov
lcall
mov
shll
mov
xchg
cmpsl
shrl
in
movsb
ds
lds
adc
sbb
xcrypt-cfb
cmpsl
mov
clc
sub
and
cld
scas
xchg
bound
int
mov
xchg
mov
xor
inc
pop
pop
sbb
fmulp
gs
enter
xlat
xchg
shl
fmull
ds
pusha
repz
ljmp
cs
fidivl
xor
ljmp
scas
jmp
clc
subl
jge
push
sarb
mov
adc
and
mov
repz
pop
adc
xchg
or
ret
pusha
std
test
sub
mov
mov
mov
push
outsb
je
jo
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
or
iret
and
sarb
loopne
rcl
cmpsl
scas
into
and
int
ja
mov
mov
adc
lods
dec
dec
aam
push
aaa
test
add
jl
mov
xchg
xchg
imul
scas
cmpsb
jle
mov
mov
ja
aam
mov
les
xlat
daa
xchg
pop
enter
les
xchg
pop
sti
mov
jbe
ret
pop
test
in
mov
adc
imul
sti
rcrb
xchg
xor
negl
pop
xchg
cmp
cli
sub
in
push
push
jbe
loop
lahf
push
lods
stc
cmc
push
and
les
fstpl
inc
pop
cltd
int
and
sub
outsb
out
mov
leave
xchg
data16
leave
sub
lea
mov
sbb
inc
ja
push
movb
fimull
data16
out
jmp
leave
mov
scas
adc
pop
hlt
cmp
mov
jmp
mov
pop
push
sub
es
pop
sub
or
mov
add
xor
jae
xchg
mov
pushf
insb
add
jp
scas
lret
fstpl
xchg
and
push
add
es
test
fldl
inc
sti
inc
and
js
mov
shlb
and
lock
ss
add
les
loop
mov
mov
jl
cmc
push
jmp
jbe
nop
pop
sub
mov
jno
int
out
inc
push
daa
sbb
mov
outsl
js
inc
cmc
mov
iret
and
push
lret
inc
aas
xor
xchg
jmp
insb
js
test
ds
xchg
mov
mov
sub
insl
xchg
fldcw
mov
cmp
mov
ret
pop
xor
mov
sub
push
push
lahf
jmp
mov
in
imul
ds
test
or
loopne
dec
call
inc
inc
sbb
mov
xchg
in
lret
ficoms
add
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
movsl
lds
fstpl
mov
mov
pop
cs
scas
jmp
dec
sbb
cld
push
adc
jns
aad
mov
or
pop
ljmp
ljmp
shrl
testl
jge
and
xchg
aaa
mov
js
popa
stos
insb
addr16
sbbl
dec
pop
cmpsb
fisttpll
adc
push
imul
mov
push
ljmp
aaa
shr
mov
loope
xchg
xchg
shl
aaa
push
cli
mov
outsl
jnp
clc
push
cld
xlat
inc
and
adc
inc
mov
sahf
stos
shrb
aaa
sahf
jns
xchg
adc
dec
shr
inc
sbb
sbb
test
xchg
jecxz
mov
xorb
add
stc
push
pop
dec
shr
push
jne
mov
nop
ffree
enter
test
lods
mov
cmp
pusha
push
sub
adc
xor
pop
pop
mov
sub
xor
pop
dec
xor
sub
int3
test
pop
pop
jge
cmp
inc
lret
cmp
mov
sbb
js
adc
mov
push
hlt
mov
mov
cmp
lret
outsb
jno
and
scas
sub
loope
lret
mov
xor
cmc
jbe
sub
lods
aas
xor
ss
das
repz
mov
mov
mov
ret
cmpsb
fs
dec
mov
ja
lods
icebp
jl
popf
sbb
stos
test
daa
movhps
loop
mov
out
mov
add
nop
adc
or
and
pusha
adc
xchg
push
dec
movsl
inc
test
mov
dec
test
sbb
enter
push
incl
sub
sub
xchg
mov
lods
jnp
loopne
push
sub
out
movsb
movb
dec
sbb
cmpsb
out
loope
adc
out
in
testl
fwait
sbb
lahf
mov
jbe
loope
pushf
pop
orl
or
ds
out
fimull
icebp
and
pusha
pop
add
and
out
js
cli
mov
and
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fldl
push
jecxz
pop
sarb
das
bound
test
aaa
addr16
mov
lret
into
jne
ljmp
sub
js
pusha
stc
xchg
and
adc
leave
mov
inc
pop
test
ljmp
stos
xchg
pop
xor
imul
xor
out
imul
test
sbb
add
cld
mov
frstor
es
test
lahf
push
inc
gs
js
addb
push
lret
and
pop
insl
out
xor
repnz
pop
pop
dec
inc
aaa
add
jne
adc
fnstsw
repnz
adc
mov
scas
stos
hlt
jecxz
jbe
fcomps
sub
push
ss
repnz
test
adc
lds
dec
aam
gs
mov
insb
mov
cs
xorb
aad
inc
pop
mov
xchg
enter
jecxz
es
and
dec
cli
movsb
xor
push
push
fcomip
cld
xchg
sub
cmp
jne
sbb
mov
pop
mov
popa
cwtl
inc
mov
inc
mov
into
adc
push
daa
dec
lea
movsl
dec
lds
adc
and
inc
pop
je
mov
cmp
or
aas
stos
fxch
inc
lahf
jle
shl
orl
aam
sub
fwait
add
cltd
dec
pop
push
iret
jmp
jle
ss
aas
mov
fpatan
sahf
lods
lahf
cmp
jmp
cmpsb
sub
xchg
out
xchg
xor
dec
sub
xchg
pushl
lds
repnz
pushf
clc
sbb
mov
fsts
sub
mov
loopne
mov
fcoms
pusha
test
int3
inc
loope
and
jg
sbb
sub
cmp
cmpsl
cmp
in
push
lcall
xchg
xchg
add
mov
jl
push
mov
or
adc
inc
dec
xlat
or
jo
sbb
cmpsb
sub
out
adc
mov
shlb
or
mov
icebp
jae
add
test
pop
lds
shrd
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
rorl
sbb
mov
and
pop
flds
sti
in
jb
pop
dec
jecxz
sub
jecxz
cmp
into
nop
rclb
mov
lds
xchg
sub
test
enter
inc
ljmp
fnstsw
mov
shrl
mov
adc
shll
pop
inc
popf
mov
cld
inc
stc
cmp
and
sbb
sbb
and
leave
push
jnp
xchg
aas
cltd
orb
mov
and
mov
jle
stos
xlat
and
pop
dec
adc
inc
mov
sbb
imul
movsb
jl
fimull
cwtl
insb
pop
push
lea
sbb
and
fsubrp
push
mov
xchg
sub
idivl
adc
ret
adc
mov
mov
lds
sub
popf
daa
jg
cmp
mov
sub
fildl
in
notb
pop
mov
pushf
pushf
inc
iret
inc
iret
mov
jp
daa
mov
repz
jmp
adcl
imul
outsb
shll
or
lds
sbb
mov
mov
xor
roll
imul
sub
lods
popf
mov
and
jmp
pop
push
loopne
pushl
insl
icebp
insl
lods
inc
push
mov
add
and
jmp
out
mov
frstor
into
pop
fmull
cwtl
mov
push
enter
imul
loop
popf
dec
test
inc
push
sbb
subb
lret
icebp
loopne
popf
inc
jecxz
ds
sub
addr16
leave
adc
push
clc
dec
scas
mov
add
andnps
popa
lcall
scas
add
divl
into
and
aaa
add
fisubrl
fwait
pop
mov
mov
sbb
push
add
xor
out
in
or
movsb
jle
xor
or
push
loope
cmp
mov
sbb
shll
repnz
repnz
fdivl
outsl
sbb
jnp
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
js
cmpsb
jecxz
pop
sarb
int
xchg
addb
mov
or
repz
mov
lea
mov
int3
cmp
xor
addr16
inc
push
stc
int
jnp
mov
mov
sub
in
mov
insb
fld
cwtl
gs
es
push
mov
cmp
mov
or
add
push
jbe
sbb
xchg
jo
rorl
aas
add
cmp
rcrl
add
sbb
push
popa
cmpsl
cmp
dec
adc
sub
add
je
lret
or
inc
cwtl
sub
push
xchg
cmp
xchg
fbstp
lcall
inc
fwait
add
xchg
mov
jp
mov
rorb
lea
fs
out
out
push
je
cmp
mov
and
sbb
inc
inc
sub
sarb
lret
loopne
inc
test
lcall
sbb
push
fisttpll
add
and
cmpsb
shlb
jo
lahf
push
push
xor
popa
cmp
adc
mov
out
cmp
adc
add
pop
addb
pop
inc
sub
sub
es
jno
lock
mov
je
loope
and
jns
shrl
xor
pusha
and
rcl
aaa
dec
sub
jbe
in
sbb
mov
movsl
std
out
outsb
xor
call
push
mov
arpl
in
in
ja
fdivr
push
mov
leave
jno
push
cs
imul
adc
lret
movsb
pop
mov
pop
adc
popl
xchg
pop
push
in
cs
pop
out
scas
fcomps
lock
gs
or
dec
icebp
pop
subb
shl
dec
adc
push
jle
aam
arpl
jg
mov
es
loopne
mov
sub
imul
inc
xchg
xchg
mov
call
insb
or
inc
xchg
pop
cli
cmp
les
xlat
popf
aam
shrl
and
or
dec
outsb
push
xor
leave
sub
in
fisttpll
inc
sbbl
stc
add
mov
push
jns
or
dec
mov
lcall
adc
lods
roll
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
aaa
mov
jl
sarb
int3
cmpsl
fiaddl
jle
dec
scas
add
or
mov
mov
out
fistpll
xor
arpl
nop
jbe
xchg
subl
and
cmp
push
hlt
pop
push
mov
xchg
roll
xchg
loope
test
scas
mov
pop
pop
out
ljmp
scas
inc
mov
test
je
mov
pushf
mov
sub
jne
mov
leave
mov
mov
pop
and
xor
aam
push
daa
mov
test
jns
pop
jae
pop
imul
cli
in
or
pusha
push
vsqrtsd
fmuls
shrb
cwtl
lock
push
lds
sbb
aam
mov
add
pusha
mov
adc
repnz
xchg
mov
and
mov
and
sbb
lahf
adc
shll
addr16
jb
add
mov
jecxz
dec
pop
mov
xor
mov
dec
inc
popf
push
dec
jne
or
mov
sti
popa
pusha
jnp
jnp
jae
or
jl
loop
xlat
jmp
leave
daa
loop,pt
test
pop
dec
push
cmpsl
xchg
and
popf
fs
and
jge
ja
mov
or
sub
inc
dec
xchg
jnp
jo
sbb
inc
sub
es
mov
std
pop
inc
dec
mov
rcll
insb
stos
cmp
std
in
mov
loopne
dec
hlt
pop
test
cwtl
movsb
inc
and
mulb
arpl
js
push
add
adc
jmp
dec
pusha
mov
jle
inc
out
add
out
insl
push
in
lds
xchg
sarb
movsl
push
fdivl
push
aaa
mov
test
mov
ds
in
inc
clc
mov
or
sub
je
push
jp
adc
stos
or
aaa
mov
xchg
sub
shlb
lret
fs
orb
cmpsl
outsb
dec
mov
cmp
cs
in
out
or
mov
mov
add
and
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
daa
movsb
nop
repz
mov
clc
dec
push
ret
jg
nop
sub
ficomps
jmp
bound
daa
mov
sahf
add
xorl
enter
sti
cli
aam
jae
ret
xchg
xlat
stos
in
push
lods
sbb
lahf
mov
mov
pop
aad
int
cmpsb
insb
imul
in
or
jle
pushf
mov
cltd
daa
inc
out
out
fadd
inc
mov
bound
in
mov
pop
jecxz
movsl
aas
mov
std
push
sub
jnp
jo
out
mov
lock
xchg
mov
es
pop
pushf
cli
cmc
xchg
ret
or
jecxz
xor
push
cmpsl
jnp
sub
xor
mov
jmp
movsl
push
mov
adc
pop
jns
lret
add
je
jno
movsb
insl
dec
in
cmpsb
negl
les
scas
sbb
sbb
sub
call
repnz
ja
mov
aam
xor
mov
sub
jl
stc
cmp
das
xchg
mov
cmp
test
xlat
mov
aaa
insb
or
mov
out
leave
add
dec
daa
add
addr16
pop
testl
daa
aas
and
cli
test
sahf
add
xchg
cld
mov
cld
jp
or
adc
pusha
mov
and
stos
add
pop
xor
andb
mov
rcrl
lret
scas
sub
pusha
out
outsb
or
add
or
test
adc
mov
inc
out
push
and
mov
jecxz
fiaddl
pushaw
add
sbb
arpl
jbe
pop
cmp
mov
sti
dec
or
into
imul
or
xchg
inc
es
pop
sbb
imul
mov
nop
fcoml
shll
or
xor
out
xor
cmpsl
dec
cmc
fistpl
gs
adc
lea
mov
xchg
aad
push
ss
mov
shl
in
adcb
cmp
imul
imul
ret
add
and
jmp
xor
frstor
test
das
mov
sarb
imul
test
sub
js
push
push
adc
push
pop
sbb
daa
pop
push
stos
mov
and
andl
subl
adc
or
dec
movsl
mov
lcall
orb
jp
jnp
dec
cmc
mov
js
adc
push
cmp
sahf
push
out
fs
mov
mov
cmpsl
aaa
outsb
inc
pop
aaa
lcall
sbb
ljmp
rcl
in
popf
jmp
xor
addr16
imul
sbb
mov
lods
push
jp
jb
dec
inc
int
movsb
push
sbb
test
stos
repz
fisubrs
mov
xor
scas
fsubl
lahf
aaa
dec
stos
mov
lcall
push
pop
out
popf
test
loopne
sarl
push
shl
jne
cmp
xchg
and
or
popa
setne
mov
jae
sbb
loop
xor
fcmovnu
int3
pop
mov
mov
sarl
call
mov
push
es
icebp
js
jg
sub
ror
and
lahf
outsl
add
adc
push
push
sub
je
mov
jne
lahf
push
gs
sahf
push
js
orl
mov
out
jo
std
and
out
arpl
sti
push
xchg
mov
frstor
jbe
dec
mov
mov
sti
mov
lcall
inc
aad
std
addl
mov
pop
and
sbb
orb
jbe
loopne
sub
mov
addr16
insb
int3
pop
fbld
test
sbb
fwait
mov
sti
push
xchg
push
std
scas
fbstp
push
fcomi
or
adc
pop
push
mov
push
int
aad
shlb
pop
push
mov
sub
and
sarl
inc
sbb
mov
sti
loop
insb
push
cld
into
cwtl
and
lods
addb
inc
mov
or
sub
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
xchg
mov
xor
mov
mov
jns
int3
ss
pop
add
xor
movsb
sub
add
add
mov
xor
incl
cli
sbb
scas
add
jmp
aad
add
add
roll
test
dec
push
inc
into
and
fcompl
loopne
pop
cld
in
int
pop
sbb
push
inc
nop
push
xchg
imul
sti
movsb
dec
add
cmc
iret
mov
scas
jne
std
mov
xor
scas
jp
and
sbb
lret
lcall
mov
movsl
pop
aad
push
mov
lret
dec
mov
test
dec
scas
cli
add
mov
sbb
test
aas
and
or
dec
adc
sbb
repz
cmpsl
lahf
test
mov
xor
js
xchg
int3
mov
lods
pop
dec
mov
fidivs
cmc
aam
mov
lahf
sti
inc
cmp
imul
xchg
add
sub
mov
xor
jne
xor
or
je
rcrl
mov
mov
jb
pop
jmp
fisubrl
mov
push
enter
dec
fwait
jae
ret
mov
mov
outsl
in
in
data16
fiadds
test
adc
inc
mov
outsl
into
mov
mov
jnp
sbb
mov
pop
int3
mov
jl
add
in
jmp
sub
int3
imul
pop
pop
hlt
sub
pop
mov
push
inc
push
in
sbb
mov
aad
xor
or
out
or
mov
ret
add
and
stos
mov
xor
adc
push
fs
adc
mov
std
ljmp
sub
xor
push
sbb
jecxz
rorb
xor
fsubrl
std
add
adc
in
cmpl
pop
mov
imul
repnz
cmp
and
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
xchg
adc
sarb
adc
pop
cltd
jge
icebp
jae
dec
push
dec
xor
sub
xchg
cwtl
fwait
cmp
in
xor
test
scas
fisubrl
mov
lods
mov
dec
jg
push
pop
jno
andb
les
jo
cmp
inc
in
hlt
shll
xor
loop
inc
sub
xor
adc
xchg
mov
jmp
dec
mov
icebp
testb
dec
jl
stos
bound
dec
jne
jo
add
pop
popf
dec
loop
push
or
jmp
repnz
sbb
xchg
xor
and
inc
rdtsc
popf
test
stos
popa
aaa
scas
xchg
out
mov
es
icebp
mov
push
fcmovnb
mov
inc
js
in
test
mov
adc
sbb
imul
aad
jb,pn
xchg
and
test
jns
shr
ud0
pushf
bound
sbb
xor
or
dec
cwtl
outsb
jmp
add
lods
dec
movsl
jae
dec
cmp
push
inc
dec
movsb
mov
clc
aaa
in
dec
inc
shll
add
shr
push
cli
push
dec
pop
lret
jnp
pop
dec
or
jne
jno
adc
addb
mov
mov
lret
fnstcw
pop
je
xchg
out
jae
scas
sti
add
gs
push
jecxz
call
cmp
cmp
push
dec
fwait
pop
jns
inc
rcrb
cmc
das
testb
cwtl
jnp
mov
adc
inc
fdivrs
fwait
ror
xor
jne
rolb
push
test
ret
fdivl
mov
or
movsb
jmp
fisubs
dec
pop
fldenv
jecxz
stos
mov
pop
aaa
mov
or
enter
inc
clc
aas
pop
imul
nop
aam
scas
clc
mov
cltd
add
cmp
cmp
popa
ret
lahf
repnz
iret
xchg
je
out
fildll
lcall
pusha
push
sbb
xlat
or
jl
push
cmpsl
aaa
pop
sbb
cmpsl
movsb
push
int
nop
dec
mov
sahf
cmp
out
aad
orb
sub
scas
fwait
push
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
movsb
aam
sarb
jmp
xchg
sbb
push
and
and
cld
ret
sbbl
mov
xchg
roll
pop
sbb
push
std
mov
andb
mov
divl
cmc
mov
sub
mov
xorl
xchg
daa
xor
incw
pop
imul
cs
in
sub
mov
xchg
jns
dec
jg
inc
int
shrl
pusha
pop
mov
jbe
aad
ret
xchg
iret
add
push
jg,pn
jge
je
mov
ljmp
mov
xor
xor
sub
mov
mov
push
inc
leave
mov
or
sbb
loop
inc
test
shlb
inc
jp
out
addr16
add
cld
testl
sub
mov
sbb
filds
test
lea
cwtl
jno
and
add
shlb
push
dec
data16
mov
lret
mov
jle
push
imul
mov
test
or
xchg
jb
icebp
pop
xchg
int
inc
or
mov
imul
mov
pop
loopne
dec
cs
mov
push
out
aas
mov
nop
pop
cmp
mov
imul
cmp
add
hlt
adc
inc
xchg
lds
inc
pop
and
in
jbe
dec
inc
sub
fs
fnstcw
imul
pushf
loop
xor
stc
sbb
cld
mov
dec
inc
mov
ret
in
and
dec
push
sub
in
cmp
push
xadd
ljmp
jo
or
cmpl
pop
mov
inc
or
cmc
sub
test
popa
mov
loop
and
jns
hlt
push
ja
and
fisttps
cld
cmpsb
les
mov
cmp
das
scas
daa
or
pop
movsb
or
jle
adcb
sbb
in
push
popf
jmp
sahf
test
mov
rorl
imul
fmuls
dec
jle
mov
pop
mov
xor
mov
fsubr
aas
push
xchg
in
movsb
cwtl
jmp
push
lods
xor
shlb
icebp
aam
dec
push
dec
mov
fsubrl
mull
cli
pusha
push
dec
stos
mov
icebp
repnz
movsb
mov
in
mov
sbbb
cmc
pushf
icebp
arpl
adc
test
icebp
cmp
pop
adc
jg
clc
mov
lcall
or
cmp
hlt
in
mov
mov
inc
push
push
ret
lcall
mov
pushf
rclb
mov
aas
stc
icebp
sub
fisttpll
push
and
aam
js
pop
fldcw
cmp
inc
jecxz
cli
ss
in
sahf
sbb
xor
jne
insb
out
dec
mov
insl
push
loope
push
ret
sbb
hlt
xchg
aad
das
mov
imul
or
leave
add
icebp
inc
pop
in
arpl
out
dec
in
jmp
push
lock
add
jmp
mov
stc
sbb
push
std
pop
adc
cmc
scas
icebp
idiv
or
pop
leave
cmp
fcompl
dec
or
popa
or
sub
pop
lret
mov
insb
jo
push
xchg
aaa
jnp
pop
mov
lahf
stos
push
lock
pop
add
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
imul
pusha
inc
sarb
add
sti
adc
sub
outsl
dec
jp
cli
sbb
adc
or
mov
push
sti
jg
sub
faddp
mov
sbb
sub
mul
int3
lahf
loopne
add
insb
adc
out
cmp
pop
mov
subl
xchg
outsb
push
push
xchg
jno
icebp
xor
mov
aas
lods
ljmp
sub
fmuls
outsb
lret
jo
push
mov
jge
dec
popa
jbe
lds
stos
jae
push
sub
add
add
lret
dec
sub
sbbl
mov
jb
xchg
cmp
pop
and
push
pop
xchg
loope
mov
jg
jno
outsl
add
xor
mov
sbb
loopne
push
fsts
xor
cmpsl
jo
add
sub
jbe
push
lods
and
dec
out
add
pushf
xor
pop
stos
mov
sub
adc
stos
int3
ja
mov
xchg
dec
jno
lret
ljmp
mov
lret
and
mov
push
aam
inc
mov
sub
ret
ds
sub
loope
pop
lret
lahf
bound
jo,pn
xchg
insl
mov
call
das
mov
xor
aas
lret
cmpsl
and
cmovl
sarl
dec
loopne
in
es
xor
pushl
jmp
jl
xchg
and
and
mov
dec
adc
add
cmp
loop
and
cmp
pop
cmp
sbb
je
das
popa
mov
pop
cmp
adc
pusha
jae
mov
cmp
mov
mov
mov
stos
ret
add
lods
adc
jecxz,pn
in
mov
scas
fwait
adc
out
icebp
jge
and
stos
insb
das
mov
and
and
iret
pop
xor
cmp
sub
leave
add
xchg
js
mov
and
ljmp
aas
sahf
imul
add
fildl
clc
ret
outsl
mov
inc
add
adcl
les
rcrl
mov
pop
pop
mov
std
dec
sbb
mov
daa
sbbl
ljmp
jno
ds
rolb
push
and
push
stc
test
xor
add
testb
pop
add
out
push
daa
sub
xchg
mov
jns
aaa
popa
dec
mov
mov
aaa
push
xchg
mov
pop
je
sbb
movsb
pop
aam
pop
inc
gs
test
les
js
cltd
rol
rcl
or
xchg
js
mov
ss
xor
inc
push
xchg
dec
jnp
and
dec
daa
mov
std
mov
outsb
adc
jecxz
ja
xchg
add
aam
int
lods
sahf
ljmp
mov
mov
aam
fadds
testb
mov
int3
test
pop
hlt
or
fcomps
add
and
fwait
mulb
inc
add
sub
cmpsl
mov
stc
push
inc
add
sbb
add
mov
push
or
loop
and
shlb
push
inc
jnp
imul
jecxz
int
shlb
add
gs
xor
repz
pusha
mov
jno
push
cmp
dec
inc
inc
push
cwtl
inc
adc
cs
rclb
sbb
add
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
jae
jecxz
dec
sarb
mov
lret
xor
lea
repz
dec
jp
mov
xchg
cmp
mov
sbb
addl
out
sub
add
cmp
cmpsb
xor
mov
mov
add
add
ss
subb
mov
xlat
add
jmp
push
xchg
arpl
into
shll
mov
pop
mov
jl
loop
jl
aas
push
jo
fdivrl
out
inc
iret
push
jmp
rclb
cmp
in
xor
or
inc
in
popa
das
jp
dec
std
ds
aam
jb
sbb
add
mov
mov
or
js
jns
and
in
pop
pop
mov
xchg
insb
or
jmp
and
sub
lea
enter
mov
fs
call
lds
out
xor
loope
or
pop
push
mov
sub
cmpsl
cmp
mov
imul
add
repz
ljmp
push
inc
orb
stos
xor
mov
imul
scas
cmp
cmp
aas
jecxz
sub
out
jo
iret
out
sbb
rdpmc
aam
inc
add
in
rcrb
sub
sbb
arpl
mov
rcll
pop
mov
fisubl
jnp
add
stos
scas
push
test
nop
or
or
sarb
aad
cmp
pusha
div
cmp
cmc
bound
cmp
jns
test
push
mov
mov
imul
lods
jge
leave
jbe
push
mov
clc
in
ja
lods
fldcw
push
movsb
and
roll
lods
xchg
xchg
sub
push
jbe
dec
push
sub
dec
inc
dec
pop
in
jle
mov
push
pop
ret
ljmp
mov
mov
mov
mov
jl
inc
lea
mov
mov
push
push
adc
adc
adc
jle
pop
decl
cli
sbb
sahf
movsl
push
stos
inc
xchg
dec
cmp
cmp
dec
popa
xchg
mov
clc
mov
ljmp
pop
shll
setnp
sub
push
fwait
jmp
jb
int3
lret
pop
popa
insb
imul
jg
imul
mov
inc
mov
push
and
pop
inc
aaa
adc
cli
outsb
not
cmp
mov
cmp
pop
bound
xor
fwait
sar
movb
imul
xchg
jb
cmpsb
shll
and
mov
pop
dec
in
jns
xor
ret
sbb
adc
nop
ds
mov
fistl
ds
adc
fistpll
dec
push
cld
inc
xchg
mulb
push
jmp
mov
jecxz
push
lahf
adcl
xchg
inc
jne
dec
cmp
popf
mov
push
and
jb
fidivrl
call
sbb
inc
lds
subb
cmp
shrl
or
xchg
pop
shrb
pop
ret
fsubs
xor
testw
loop
sahf
xchg
xchg
and
pop
pop
and
sub
mov
cmpsl
std
ret
jnp
stos
shll
idivb
icebp
pop
adc
and
addr16
les
mov
xchg
cmp
cmc
cmpsl
xlat
sub
ss
js
pop
outsb
jge
fsubrl
es
fists
into
inc
cmp
xor
pop
out
add
mov
dec
inc
das
movl
xor
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
mov
xchg
mov
mov
clc
pusha
in
outsb
lods
or
sbb
push
sub
lock
push
cmpsl
mov
into
jecxz
insb
cmc
imul
aad
fidivl
test
ja
mov
fwait
mov
sbb
enter
roll
aas
sub
xor
rorl
cmp
pop
das
xchg
push
sub
scas
sbb
mov
xchg
mov
mov
pop
push
into
insb
test
xor
and
movsb
iret
mov
out
cwtl
sub
lds
inc
fiaddl
xchg
mov
inc
push
sbb
xchg
xchg
push
xchg
adc
dec
push
daa
mov
stc
repnz
xor
add
std
lahf
lahf
lret
ret
int
sub
insb
jno
jbe
loopne
mov
cltd
pop
outsl
in
mov
mov
test
ss
iret
cmp
shlb
xor
std
mov
pop
shll
cmpsl
xor
int
test
sbb
mov
mov
jae
jmp
rcll
bound
ja
pop
ja
es
and
ret
lods
out
adc
es
jg
xor
cmp
hlt
loopne
xchg
in
cmova
imul
mov
or
xchg
aad
repz
push
xlat
aam
add
jns
cwtl
xchg
pop
in
cmc
xor
xlat
inc
stos
jae
push
in
subb
outsl
mov
and
jne
push
add
ja,pt
or
gs
xor
jb
mov
inc
push
push
cltd
addr16
je
mov
xorl
jb
insl
arpl
std
mov
hlt
mov
stc
sti
dec
sub
jo
inc
aam
sub
movsl
repz
push
and
movsl
pop
jno
lret
lcall
mov
xchg
icebp
lods
push
mov
cld
mov
jp
out
xchg
test
stc
ja
inc
mov
jbe
out
ret
jl
sbb
inc
cmp
lret
or
sub
pop
xchg
movsl
out
or
mov
shrb
pop
out
inc
lcall
or
std
popa
fs
cmp
sbb
fcompl
push
imul
adc
and
fsts
mov
push
out
mov
dec
jo
adc
rcrb
cmc
xchg
cs
xor
dec
rclb
push
loopne
negb
push
popa
xchg
lods
inc
xchg
loop
inc
aam
add
fwait
cmp
jg
or
xor
inc
jmp
loope
lock
dec
pop
mov
pop
jb
notl
xchg
lcall
and
testl
call
and
outsl
out
jmp
xor
xor
je
jecxz
xor
sub
imul
gs
in
adc
out
pop
and
sahf
inc
in
cmpl
dec
loop
xchg
nop
cmp
sub
add
out
mov
int
inc
jl
stc
and
pushf
dec
lret
jns
daa
and
add
lea
dec
cmp
and
inc
xor
mov
ja
int
mov
loope
mov
sub
std
xor
shrl
mov
mov
orl
pop
cli
adc
leave
pop
lahf
jne
loopne
cld
les
loop
mulb
lahf
insl
aam
aam
mov
insb
rcl
jmp
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
sbb
cmp
dec
les
fdivrl
movsl
push
into
loope,pn
cld
decb
aas
or
push
mov
fstpl
sub
sbb
aas
cld
xchg
mov
sbb
adc
movsb
lods
push
adc
mov
xorb
popf
das
cltd
mov
lcall
fstl
hlt
fsubr
lods
mov
arpl
sub
int
scas
fistpl
jno
dec
sbb
ret
mov
rol
jecxz
lret
cmp
or
xchg
loop
mov
sbb
mov
ja
ljmp
lock
sbb
std
jae
sbb
hlt
jp
push
ror
sub
out
inc
decl
lret
jg
xor
subl
pop
ds
dec
sbb
add
jns
stos
mov
stos
call
test
jb
pop
mov
fidivl
out
sbb
xchg
sub
xor
es
xor
mov
xlat
add
dec
pop
add
in
add
ss
jle
insb
adc
fcomip
sub
mov
sbb
mov
adc
sbb
mov
pop
inc
and
repnz
aaa
xchg
adc
cmp
cmp
add
test
push
dec
inc
call
cmp
jmp
xor
pop
in
or
outsb
outsl
imul
flds
xor
push
adc
loopne
std
push
xor
cmpxchg
pushf
jl
inc
shr
fwait
mov
sbb
mov
sbb
pop
std
out
inc
stos
xchg
enter
arpl
hlt
add
ja
in
mov
in
inc
cmp
std
add
fbld
push
xchg
punpcklbw
loop
and
and
movsb
imul
test
rorb
dec
xchg
in
pop
cmpsl
push
mov
sarb
mov
fsub
adc
add
es
pop
cs
pop
jb
fidivl
iret
fld
mov
into
daa
and
std
mov
lret
jl
mov
mov
jmp
ljmp
xor
jbe
pushf
pop
mov
popa
sbb
rorl
or
xor
out
insb
fstl
int3
das
xor
lods
repnz
add
and
xchg
in
push
pop
aas
inc
pop
mov
xchg
push
addr16
cs
idivb
in
inc
in
mov
ficomps
inc
and
lock
xor
pop
pusha
push
idiv
gs
mov
cmp
sbb
sub
mov
dec
xor
inc
hlt
ljmp
inc
mov
fsts
test
and
lret
mov
mov
in
or
in
xchg
cmpsl
inc
sub
mov
mov
sbb
and
hlt
cwtl
out
mov
xchg
dec
sub
push
mov
rolb
scas
jns
mov
int3
lods
or
add
dec
shrb
repnz
ret
les
pop
rcrb
push
sti
scas
add
push
out
adc
fadds
xchg
aaa
dec
push
fcmovbe
ss
sbb
add
dec
lea
dec
add
das
sahf
sbb
mov
sbb
jns
setp
fnstenv
ficoms
repnz
fldl
mov
inc
in
lret
and
std
es
mov
out
rorb
pushf
pop
shlb
imul
push
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
les
mov
add
out
add
loope
lods
or
pop
cmc
int3
mov
out
push
jb
mov
int
cmp
movsl
pop
movsb
lret
xchg
cmc
pop
fisttps
pop
inc
jb
jo
iret
outsl
and
sbb
inc
daa
inc
iret
mov
jmp
cmp
inc
mov
cmc
ja
je
jmp
dec
test
or
mov
or
lock
lods
fs
sarb
mov
rorl
pop
repnz
subl
mov
adc
xchg
data16
fwait
imul
add
adc
mov
cld
aad
jae
lret
loop
dec
mov
mov
mov
fwait
testl
xchg
cli
popf
daa
push
test
xchg
inc
xor
xchg
mov
mov
push
jns
pop
sub
popf
jle
leave
pop
xchg
out
mov
inc
jg
push
mov
sub
pop
xor
add
xor
or
xor
icebp
dec
movsl
lcall
mov
cmp
testl
jp
lea
mov
cwtl
and
mov
sub
adc
int3
xchg
jg
test
and
dec
dec
and
jae
mov
or
pop
pusha
mov
aas
sub
dec
daa
js
das
xor
adc
pop
inc
mov
roll
jle
sbb
or
mov
scas
add
adc
rcrl
mov
bound
sbb
sub
mov
push
movsl
shl
jle
cs
lea
jne
pop
mov
outsl
pop
lret
xor
std
lret
add
fwait
cmp
add
xchg
test
test
les
mov
jp
and
xchg
ja
aad
bswap
repz
adc
mov
out
lret
repz
iret
loop
adc
cmpsl
push
xor
in
pop
dec
stc
cwtl
fstps
inc
jb
jnp
lret
dec
push
jle
mov
mov
cmp
and
cmp
sub
aad
cmp
movsb
inc
add
test
in
inc
mov
fmulp
jo
inc
out
in
jle
mov
ficoml
dec
jb
ret
inc
mulb
pop
fs
push
dec
xlat
pop
sub
pushw
ficompl
jb
inc
jns
and
and
adc
cmp
and
in
mov
pop
call
jg
sub
sbb
dec
jp
jg
imul
clc
jae
cmp
and
and
and
jae
mov
sti
loop
xor
add
rcrl
sbb
xchg
outsl
aam
stos
enter
dec
cmp
leave
pop
fwait
out
ljmp
ret
inc
dec
test
sahf
cmp
or
rcrl
add
std
add
in
xchg
mov
test
pop
leave
cmc
pop
mov
aaa
lock
pusha
mov
lds
and
hlt
call
lea
xlat
jae
and
fldenv
xchg
or
or
jb
inc
int
test
and
or
js
scas
sub
jecxz
mov
aaa
mov
lcall
fucomi
and
sub
sti
cmp
enter
popa
push
mov
adc
mov
push
stc
and
pop
arpl
mov
dec
and
sub
dec
mov
xchg
and
mov
mov
les
mov
mov
ljmp
stc
andl
mov
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
sub
add
sbb
sarb
pop
jl
movsb
dec
mov
and
jmp
lret
jns
inc
stos
cmp
mov
adc
aam
pop
mov
dec
jg
push
pop
cmpsl
dec
mov
lret
arpl
pushf
mov
sub
imul
aaa
std
inc
xor
and
dec
fidivrl
insl
test
and
dec
xor
imul
scas
add
xor
lret
push
leave
je
push
das
pop
jle
hlt
notb
js
pop
imul
cmpsb
jo
mov
fistps
mov
dec
jne
adc
fadds
sub
mov
cmp
xchg
dec
aas
ror
inc
pushf
add
adc
imul
jns
jbe
xor
call
xor
stc
cltd
dec
xor
xchg
fwait
xchg
stos
lock
addb
xlat
jp
push
sub
dec
and
pusha
mov
adc
sbb
cmpsl
lahf
shrl
pop
mov
jno
nop
add
das
insb
clc
pop
in
lock
or
add
jb
push
int3
out
pop
jg
and
inc
cmpsl
jns
mov
outsb
mov
cmp
loop
xchg
lods
jno
ja
stos
inc
add
jae
adc
xlat
out
ds
jmp
inc
std
pop
sub
or
hlt
or
imul
popf
inc
rorl
push
es
into
cmp
cwtl
mov
xor
mov
pop
ljmp
lock
sbb
sbb
add
insb
out
ljmp
adc
xor
rcr
cmp
fcom
test
cmpsb
push
insl
stos
or
test
cmc
mov
test
cmp
ljmp
mov
add
pop
adc
sub
cs
lods
ljmp
xchg
cmpsb
into
jae
js
inc
inc
sub
mov
fbstp
pop
cs
sub
cmp
mov
and
pop
jecxz
mov
fldenv
mov
sub
sbb
clc
imulb
inc
repz
lock
sub
jbe
lahf
pop
ja
insl
in
and
jp
rolb
mov
out
cmp
shrb
mov
xor
lods
mov
sbb
sub
push
mov
fldenv
in
mov
jmp
add
jo
out
add
mov
sub
pop
cmp
mov
enter
pop
add
sbb
mov
outsl
ret
sbb
pusha
xchg
insb
add
lods
je
add
mov
jbe
xchg
add
call
movsb
test
test
and
xor
outsl
adc
hlt
or
cli
push
xor
lods
out
orl
cmp
addr16
xor
shlb
or
lret
ret
sub
daa
decl
cli
imul
stos
mov
stos
and
aad
je
push
aaa
xchg
clc
xchg
pop
divb
sahf
mov
push
jb
cmp
adc
aad
sub
mov
cmc
ret
pop
es
into
or
mov
hlt
js
push
inc
add
dec
mov
out
scas
leave
mov
xor
call
push
sbbb
sbb
rcrb
fbstp
mov
fisubrl
not
shrb
mov
and
jno
decl
cmp
jmp
mov
xor
mov
mov
nop
sbb
sarb
jnp
xchg
stos
sbb
scas
outsl
xor
dec
leave
addr16
sub
inc
dec
aas
scas
pop
sbb
jne
push
xchg
xchg
cli
sub
outsb
js
in
popa
repnz
adc
push
mov
frstor
insl
out
mov
scas
dec
stc
or
push
mov
pop
jecxz
xor
fmul
sbb
sub
dec
aaa
rcll
lret
adc
es
cli
fwait
mov
lret
scas
mov
fsubs
ss
jg
jp
cmp
stc
or
mov
adc
mov
mov
jmp
cs
mov
filds
xor
les
push
dec
add
sbb
or
jmp
push
lds
and
fstpt
sti
fimuls
sbb
ret
les
fmuls
movsb
jecxz
mov
inc
jnp
push
rclb
push
sub
mov
fildl
and
sbb
lock
add
fcoms
out
jp
outsl
cmpxchg
imul
lahf
xor
fs
jns
jge
cmp
fcomps
mov
xchg
mov
xor
fdivrs
dec
sub
pop
push
pop
scas
inc
jo
sbb
push
inc
nop
subl
xor
insl
and
mov
and
sahf
xchg
jnp
add
sub
int
inc
inc
sbb
dec
mov
mov
or
fdivrs
jns
xlat
ds
mov
je
shl
adc
jo
repnz
mov
cltd
bswap
ror
call
repz
mov
push
or
dec
mov
mov
imulb
or
fs
mov
subl
xchg
and
les
out
flds
adc
mov
xchg
mov
inc
push
movsl
icebp
inc
mov
xchg
and
filds
push
xchg
xchg
push
lock
push
fcompl
jg
mov
out
std
xchg
popa
cwtl
shll
leave
inc
divl
out
push
imul
aas
daa
ja
sub
add
and
cmp
jg
ds
and
clc
hlt
jge
fcoml
push
test
dec
mov
fdivl
incl
cmp
lcall
loop
lods
idiv
xor
adc
or
lods
shl
cmp
or
jnp
test
mov
outsb
inc
cmp
mov
js
add
mov
fnstenv
ret
lock
push
and
mov
cmp
adc
push
cltd
dec
fwait
mov
aaa
dec
push
inc
jne
sub
push
adc
shrb
les
mov
sahf
lret
xor
push
xor
sbb
mov
push
sbb
out
mov
jle
mov
xchg
test
jmp
out
inc
cmc
xlat
push
sqrtps
jb
sbb
imul
or
and
movl
jge
dec
mov
mov
jge
cmp
cmp
mov
mov
jle
pushf
xor
ljmp
sbbl
fsubl
inc
jns
dec
loop
dec
dec
int
mov
das
cmpsb
loope
push
dec
push
in
movsb
xor
sub
mov
jg
and
es
xchg
mov
dec
out
lea
test
add
mov
jmp
cld
sbb
mov
sahf
push
test
sarb
dec
inc
ret
movsb
or
imul
jg
push
sub
mov
bound
es
jge
xchg
cmp
jl
cwtl
hlt
cwtl
jge
xor
jl
dec
cmp
and
xor
cmp
mov
dec
push
pop
in
pop
mov
mov
xrelease
dec
add
xor
shrl
mov
inc
insb
aaa
sub
sbb
ds
cltd
add
cmpsl
adc
mov
mov
mov
mov
sbb
xor
jle
loope
dec
gs
in
notb
addr16
cld
add
pop
pop
lock
cmovbe
sub
push
sti
cmp
pop
jmp
and
movsl
lret
sbb
sub
sub
xchg
jp
test
mov
xchg
aad
out
mov
push
jle
movsl
mov
hlt
or
das
icebp
ljmp
fiadds
shrl
jle
mov
jno
cs
mov
aaa
sub
push
scas
out
decl
inc
xor
out
ljmp
jbe
mov
jg
push
jne
push
rcr
pusha
jg
cmp
aas
outsb
push
cmp
imul
mov
loop
hlt
jo
inc
mov
pop
mov
lock
movl
xchg
lods
fdivs
push
nop
outsl
and
dec
push
fdivl
cmp
push
cli
cmpsl
sub
int
fld
stc
mov
jl
inc
xchg
mov
mov
push
mov
cmp
cmovne
adc
pshufw
adc
xchg
xchg
mov
or
xchg
int
adc
inc
je
sbb
jne
sahf
repz
jge
gs
xor
sbb
xchg
xchg
ljmp
push
test
or
test
sub
or
cmp
cmpsb
mov
xchg
push
sbb
jge
insl
and
idivl
dec
sahf
mov
rcrb
inc
add
in
and
pop
jp
jae
sbb
xor
push
jmp
jb
cs
xor
inc
and
inc
in
int
push
adc
mov
bnd
inc
push
pop
addr16
xor
mov
andb
mov
stos
sub
xchg
popa
mull
mov
xchg
or
cmpsb
and
outsb
mov
dec
adc
fistps
rcll
xor
adc
pop
push
push
jb
push
pop
pminsw
loop
sahf
fldenv
sub
das
cs
daa
stc
movsl
lods
add
pop
daa
das
mov
insb
rorb
pop
lods
mov
xorb
lods
lret
sub
cli
xchg
into
mov
into
mov
shlb
dec
mov
lods
jns
jb
pop
pusha
test
imul
inc
insb
sar
sub
je
mov
subb
mov
outsb
mov
sbb
inc
js
repz
addl
xchg
push
or
inc
mov
mov
ret
mov
shll
movsl
mov
dec
es
sar
pushf
mov
jns
ljmp
push
andl
pusha
mov
jb
mov
mov
jns
hlt
pusha
in
cmp
jbe
ret
adc
cltd
and
push
push
sti
mov
sarl
loope
jmp
or
xchg
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
shrl
cmpsb
jecxz
jg
mov
lds
xchg
fstpt
test
ljmp
dec
aaa
pop
add
les
orb
adc
test
dec
ljmp
sahf
lods
fisttps
lock
scas
xchg
shlb
or
enter
xchg
in
into
mov
pop
pop
and
and
into
push
outsb
pop
pop
aad
dec
scas
outsb
inc
push
pop
lea
not
and
sbb
repz
lods
sbb
ds
push
push
incb
test
push
outsb
addr16
xor
mov
into
pop
cmp
push
cli
jl
jns
aas
mov
mov
ret
das
fnstsw
enter
stos
ficompl
jl
sbb
cmp
repnz
shll
enter
lods
outsl
test
sub
jmp
lea
es
insb
fisubrl
push
jmp
jp
add
adcb
sub
fisubl
dec
lret
add
or
dec
insb
xchg
fimull
popa
mov
pop
das
lods
testl
test
test
pop
aaa
cmp
clc
push
inc
mov
mov
pop
loopne
test
push
pusha
cmp
int
clc
cmpsb
popa
enter
int
jmp
rcrb
test
xchg
push
push
cmpsb
fnsave
pop
xchg
pop
mov
jmp
lret
movsb
js
inc
sti
orb
pop
sbb
hlt
pop
mov
test
mov
fsubrl
mov
and
dec
sub
loopne
out
sub
mov
les
iret
notb
addl
sbb
jle
ret
flds
jae
sub
and
icebp
jne
xchg
das
pop
iret
stos
sub
jmp
mov
mov
inc
cld
fmul
jno
leave
movsl
jbe
insb
mov
fmuls
sbb
mov
jnp
ljmp
jle
clc
loope
and
into
lcall
mov
xlat
dec
sbb
adc
aam
hlt
mov
cld
movsb
bound
push
sub
push
cmpsb
fimull
aas
mov
das
push
jl
in
adc
les
mov
mov
orb
pop
jecxz
mov
push
jp
iret
out
xchg
jb
inc
sub
loope
inc
std
push
fisttpll
in
and
pop
pop
and
fdivp
sbb
popf
xor
lods
ret
rcll
insb
hlt
int
inc
stos
jno
cmpl
ds
int
xlat
cmc
pop
scas
gs
loopne
xchg
test
rolb
loopne
mov
pop
pop
pop
adc
xor
jno
stos
aam
adc
mov
push
mov
push
xor
push
ret
or
xchg
xchg
dec
mov
mov
popa
int3
lods
push
cs
dec
xlat
mov
test
sub
dec
inc
sub
stos
xor
mov
adc
aas
movsl
push
mov
xchg
cmp
mov
xor
or
outsl
adc
jbe
lret
les
dec
cmp
pusha
cmp
std
lahf
es
stos
or
dec
jne
jmp
cmpsb
xchg
pop
and
divb
das
sub
sub
pop
xchg
adc
sbb
aaa
add
loopne
in
outsl
or
jle
and
pop
or
xchg
adc
adc
pop
out
mov
push
cltd
mov
mov
cmp
mov
enter
mov
enter
test
push
or
add
pushf
cmc
test
adc
cwtl
add
cmp
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
sub
pop
rorl
mov
movsl
daa
sbb
popa
lcall
pusha
push
incb
sbb
nop
cmp
fcom
pusha
stc
fisubl
arpl
xor
loop
mov
pop
fmul
cmp
mov
pop
cmp
mov
jo
into
das
push
out
bnd
clc
cmp
or
jb
aaa
mov
repz
pop
xchg
push
sbbl
hlt
pop
leave
enter
xchg
popf
xchg
movsb
fcmovnb
decb
jl
ja
cwtl
ret
inc
mov
dec
push
push
mov
pop
push
ror
mov
xchg
rorl
fistpl
aad
mov
push
insl
cmp
cmp
xor
mov
mov
repz
aad
xchg
or
filds
mov
push
repnz
add
fadds
popa
adc
xchg
add
cmpl
mov
stos
cltd
test
bsf
test
cmp
jge
cmp
ja
xor
jbe
imul
pop
sub
sub
and
add
jns
inc
data16
mov
das
xchg
popf
sbb
addr16
adc
mov
lcall
enter
mov
das
fstp
aad
lahf
add
in
mov
fwait
add
loopne
sub
push
sbb
cmpsb
aaa
ljmp
mov
pushf
loop
stc
jge
mov
add
mov
lea
or
push
jns
pop
adc
xor
lods
mov
outsl
pop
and
cmpsl
mov
bound
inc
pop
pop
scas
mov
fxch
jb
mov
in
pop
lock
xchg
inc
lret
cli
jg
arpl
in
je
push
call
xchg
xor
icebp
pop
loop
xor
xor
pushl
rol
fucomi
aas
jle
xor
cmpsl
push
pop
xchg
xchg
jns
xor
stos
jle
xlat
lret
mov
sub
mov
push
mov
int
adc
sti
dec
lock
test
aad
movsl
mov
ljmp
bound
fsubr
sub
sub
xchg
test
jne
dec
dec
jmp
cmpsb
outsb
dec
xchg
popa
mov
lcall
mov
sarb
push
fcoms
sub
insl
add
popf
xchg
loopne
sub
inc
add
or
jnp
or
mov
pop
pusha
mov
xchg
ret
xor
jae
das
jp
popf
subl
fs
jecxz
pop
jae
fninit
movsb
out
and
push
cmp
jmp
lcall
pop
cmp
lods
adc
sub
xor
push
push
lret
jp
andl
fimull
lret
lret
stos
inc
addb
inc
leave
push
xchg
xor
es
mov
add
xchg
inc
bound
fcmovu
mov
sti
scas
jnp
lods
stos
push
xchg
xlat
xchg
jb
dec
test
lods
lods
mov
push
sbb
sbb
cmp
cld
negl
dec
pushf
aad
jecxz
cmp
mov
scas
aad
icebp
sahf
push
lock
enter
fistps
adcl
popf
repz
orb
movsl
nop
sbb
pushf
and
repz
xchg
adc
and
cmp
pop
mov
mov
or
sub
adc
jmp
cmp
fcomps
xor
ljmp
sbb
loopne
lret
hlt
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
repz
xlat
sarb
jl
rcll
int3
push
cmp
jmp
push
int3
repnz
out
mov
fcom
inc
data16
or
and
shlb
popf
mov
rep
test
dec
sbb
mov
std
add
cmc
mov
lods
pushf
add
adc
push
pop
or
test
iret
vandnps
push
aam
pushf
push
and
out
enter
pop
in
lret
pop
add
test
outsb
lret
xchg
jo
mov
cltd
popl
hlt
test
xchg
inc
inc
mov
xchg
rcrl
sbb
out
or
jle
js
orb
out
cmp
lret
and
insl
xchg
sahf
cmp
nop
fidivl
xchg
mov
sub
xchg
in
adc
hlt
pop
push
mov
icebp
dec
in
add
mov
cwtl
stc
push
push
dec
aaa
push
lods
ljmp
scas
popf
stc
movsl
es
cltd
dec
pushf
jecxz
divb
pop
movsl
addr16
add
call
and
and
push
xor
fdivrs
dec
or
push
stos
inc
lock
stos
idivw
or
inc
jnp
mov
and
push
mov
orb
out
es
ja
rep
mov
jno
adc
cmp
lods
loope
scas
jno
int
fiaddl
push
add
jp
outsb
scas
cmp
lret
nop
mov
mov
sbbb
movb
sbb
lea
mov
shlb
adc
fldt
mov
push
imul
xchg
push
dec
push
and
jne
roll
fxam
or
jle
push
pop
lods
std
out
mov
pusha
fildl
gs
mov
push
les
jle
sub
out
inc
clc
jmp
or
or
push
in
sti
aas
xor
inc
iret
outsl
nop
mov
push
insb
std
sbb
pushf
fbstp
gs
jmp
outsl
cli
add
mov
loope
push
stc
push
sbb
lcall
and
xor
scas
pop
rcl
xchg
outsb
mov
inc
aam
rol
sub
push
mov
aad
inc
mov
ficoms
mov
xchg
mov
dec
clc
pop
mov
jle
jecxz
push
iret
out
rol
ret
xor
ret
std
hlt
fwait
mov
mov
jnp
cmpsb
daa
pusha
into
cmpsb
fisubl
xor
mov
sarb
dec
mov
fidivs
push
imul
arpl
or
cs
cmpsl
repz
outsb
es
dec
dec
pop
push
push
scas
inc
cmpb
and
adc
cwtl
cli
xlat
ds
mov
insl
or
sub
dec
in
shll
jg
adc
inc
test
nop
adc
arpl
mov
dec
cltd
je
pop
lahf
inc
inc
shll
dec
sbb
or
pop
sbb
daa
data16
adc
or
test
dec
add
xchg
out
cmc
mov
dec
jbe
inc
cld
jnp
xchg
xchg
imul
mov
push
fsub
dec
or
mov
xor
add
lea
inc
lds
sbb
sbb
mov
aas
flds
jbe
rcr
out
in
lea
xchg
out
int
dec
ljmp
xor
sub
jo
xlat
sahf
jo
push
test
mov
insb
mov
xchg
addr16
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
into
enter
xchg
sarb
shll
xor
xchg
jmp
sbb
dec
inc
divl
gs
mov
mov
lret
les
clc
xor
pop
pop
out
in
sub
lods
add
jl
xchg
jecxz
imulb
sahf
fistpl
pop
call
fs
sub
nop
jg
sub
inc
mov
je
or
test
pop
push
xchg
pushf
adc
fnstcw
lds
aaa
mov
dec
jmp
mov
test
popa
sbb
mov
imul
xchg
dec
cmpb
mov
rolb
inc
jge
sub
mov
mov
mov
xor
mov
repnz
xor
push
imul
cmp
push
dec
loopne
xor
shrb
test
xchg
push
daa
fildl
adc
imul
cli
jnp
mov
movsl
sti
xor
loop
dec
aas
xchg
pop
orl
jmp
add
lcall
fs
call
xlat
and
inc
data16
or
cltd
jge
jbe
stos
and
jle
test
cwtl
mov
push
mov
jno
mov
mov
push
sahf
adc
xchg
mov
fwait
negb
adc
and
lcall
push
nop
cmp
sti
dec
inc
imul
outsb
push
mov
jp
sbb
add
mov
mov
out
test
mov
ljmp
clc
mov
in
jnp
rcr
push
pop
mov
push
cmp
mov
stc
jne
mov
inc
mov
push
js
cld
sub
out
mov
mov
cs
rcr
inc
inc
aaa
pop
sub
cli
sub
aaa
cmp
lea
out
fcoml
sub
rolb
addr16
mov
jp
sahf
lret
incl
shrb
imul
scas
and
aam
ret
cmp
cmp
jno
dec
push
mov
aad
push
repnz
das
and
lret
dec
or
or
inc
cwtl
mov
cmp
xor
cmp
xchg
mov
incl
inc
pusha
out
adc
je
xchg
xlat
cld
dec
xchg
mov
movsl
jp
xchg
adc
or
push
lret
dec
sub
out
inc
sbb
cmpsl
and
pop
jne
inc
inc
fisubs
shlb
sbb
pop
mov
push
lds
xlat
inc
cmpb
pop
jnp
iret
ljmp
test
mov
mov
adc
outsl
pop
mov
sbb
jp
mov
mov
lcall
jle
arpl
inc
fprem
out
sti
ret
out
mov
push
dec
adc
cmp
das
cmp
sub
and
pop
loope
cli
lahf
aad
and
sbb
push
jo
push
out
loope
mov
xor
cmp
pop
cltd
inc
lods
mov
pop
int3
adc
hlt
inc
sti
cld
test
mov
sbb
out
mov
sti
test
jmp
test
xor
cmp
stos
push
stos
jl
mov
xchg
repz
sbb
arpl
inc
cmpsl
xor
stos
mov
mov
repnz
jbe
ds
lods
mulb
fiaddl
lds
subb
or
xlat
or
jmp
out
dec
mov
jmp
aad
and
sbbb
repz
cmpsb
sahf
fistpl
je
sbb
and
in
test
fnstenv
fmull
lods
andb
mov
lea
mov
and
and
sub
xor
mov
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
mov
sahf
out
popf
sarb
stos
inc
mov
js
test
sub
leave
addr16
jo
push
lret
cmc
test
cmp
adc
stos
push
mov
out
mov
je
xor
mov
inc
repz
das
clc
loopne
hlt
test
lahf
pushf
xchg
sub
ficoml
mov
and
pop
rolb
rcrl
ret
outsl
cmp
insl
cld
and
pop
test
and
jno
dec
es
adc
clc
mov
shll
mov
stos
mov
jnp
mov
push
xchg
jg
inc
repnz
fwait
jns
dec
fdivr
rep
insl
insl
and
setp
pushf
adc
and
int3
dec
or
stc
addr16
in
in
out
jecxz
jnp
test
mov
mov
sub
jne
in
push
or
cmp
mov
lods
sub
inc
pop
xchg
sub
aad
sbb
dec
rolb
add
xchg
add
mov
aam
and
sub
leave
into
aaa
inc
fisubl
or
pop
add
test
mov
mov
test
out
stos
lcall
inc
imul
dec
in
mov
xchg
inc
out
ljmp
imul
test
stos
mov
pop
jns
es
stos
cs
out
dec
sub
dec
idivb
sub
lds
or
add
idivb
jae
push
sti
lahf
je
or
std
int3
and
sub
ljmp
lcall
xor
sub
sub
push
insb
pop
dec
push
xchg
std
dec
or
push
dec
out
add
rorb
mov
xchg
fisttps
jo
pop
xor
and
push
ret
mov
pop
rcrb
fcoml
mov
pop
pop
mov
inc
cmp
pop
mov
out
or
cmp
iret
jl
inc
mov
arpl
shll
mov
fmull
sbb
add
xchg
xchg
adc
push
js
ret
movsl
xchg
mov
adcb
pop
mov
pop
push
adc
xchg
inc
popa
daa
bound
movsb
and
ja
call
sub
xchg
jno
out
iret
subb
leave
js
cmp
aam
aad
jns
dec
inc
push
mov
mov
into
mov
xor
scas
jno
pop
mov
jae
lret
mov
fldl
dec
leave
fwait
or
stos
inc
ljmp
jno
nop
loopne
scas
shlb
insl
dec
test
subl
pop
mov
inc
ljmp
push
sub
aam
cmpsb
xchg
cld
pop
popa
dec
jns
cmp
fldl
adc
sub
repz
mov
and
push
and
test
and
xchg
movsb
xor
mov
loope
add
mov
cmp
mov
popf
and
leave
int3
jns
cmc
icebp
and
repz
jmp
add
dec
mov
xor
jae
inc
pop
dec
cmpsb
push
outsl
sub
scas
mov
jo
pop
push
xchg
mov
xchg
pop
sub
mov
out
das
adc
xchg
or
lods
dec
and
jns
ja
mov
arpl
inc
cld
movsb
shlb
insb
nop
movsb
ljmp
sbb
mov
adc
push
popa
cmp
cmp
scas
fsts
xchg
xchg
ss
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
mov
xchg
les
xchg
popa
mov
test
push
andl
bnd
in
repz
mov
sbb
lods
push
add
inc
adc
cmp
ja
inc
inc
adc
pop
lea
xchg
insl
repz
mov
cmpsl
outsl
mov
cmp
and
push
push
int
dec
sub
cmp
add
cs
inc
icebp
test
sub
lods
add
scas
in
xchg
sti
es
rcrl
jecxz
ja
xor
pop
imulb
fbstp
mov
outsb
mov
cs
xor
out
mov
hlt
cwtl
fld
imul
pop
out
lods
loope
std
ljmp
and
mov
test
mov
and
push
push
mov
jnp
cli
cmpsb
int3
mov
jg
mov
push
es
or
xchg
sub
mov
loop
stc
shr
clc
xchg
dec
jecxz
push
das
push
stc
gs
pop
fdivrl
int
mov
stos
fimull
cwtl
es
jmp
sub
sbb
daa
repz
gs
sbb
mov
xor
nop
push
push
aaa
push
or
sub
inc
call
insl
mov
jbe
or
push
mov
push
or
ret
loope
test
and
push
addr16
popf
push
mov
inc
frstor
sub
sub
and
stos
sbb
cmpsb
psubsb
cmp
dec
inc
inc
xchg
lahf
clc
loop
mov
mov
outsl
add
mov
gs
jmp
pop
jno
push
in
dec
cmpsb
push
jno
lea
cld
xor
cmc
das
pop
pop
xchg
jbe
adc
cld
cs
dec
sbb
sti
push
lods
call
xor
adc
loop
xchg
cli
adcl
ss
aam
adc
mov
shrb
xchg
mov
mov
mov
lock
imul
xchg
cmp
cmp
jl
lods
inc
sbb
adc
add
pushf
bound
cmp
punpcklbw
pop
push
popf
xchg
jmp
std
outsl
jnp
leave
jns
add
xor
push
mov
std
gs
cld
pop
mov
cmp
mov
push
fwait
shlb
mov
mov
insb
xor
jne
dec
hlt
mov
xchg
int
jge
cmp
nop
jnp
stos
mov
insl
sbbb
loope
mov
pop
andb
mov
rcl
outsb
lcall
addr16
rcll
aas
pop
mov
enter
or
pop
out
dec
xchg
ja
popa
xor
test
dec
adc
shlb
pop
sbb
stos
mov
stos
inc
inc
bound
popa
test
ror
jnp
and
ljmp
stos
jno
insl
mov
or
push
or
xor
adc
shll
cmp
xchg
in
sub
lcall
aad
adc
push
stos
sbb
adcl
mov
jbe
push
dec
addb
nop
adc
xchg
sub
outsb
addb
imul
mov
cmpsl
jae
jnp
mov
sbb
jno
dec
sub
or
jecxz
sub
shrb
jecxz
adc
pop
xor
aas
pop
mov
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
gs
mov
fwait
xor
jle
shll
insl
or
movsb
push
add
jb
loopne
adc
add
mov
call
push
xchg
push
mov
sub
je
arpl
out
push
dec
push
in
sarb
insl
test
fcmovb
sbb
lahf
jae
iret
sbb
in
cmp
ret
outsl
sar
jno
push
incb
xchg
stc
mov
xchg
gs
sti
push
ror
inc
mov
popl
cmpl
mov
jge
dec
push
je
xor
out
js
or
fldt
fnstsw
sbb
bound
jecxz
enter
imul
adc
mov
cwtl
push
mov
and
icebp
inc
das
lahf
ja
mov
dec
fcompl
ss
xchg
or
push
leave
mov
or
test
loope
mov
out
cmp
clc
cltd
push
fildll
xor
mov
dec
dec
std
jns
insb
mov
xchg
xchg
loopne
cs
push
pop
cmp
dec
sbb
loop
xor
cmp
subl
mov
sbb
mov
fcoml
or
out
jne
cmp
mov
or
dec
imull
push
mov
xlat
jl
cli
test
test
xchg
mov
mov
mov
sub
dec
inc
aas
inc
adc
xor
mov
scas
pop
cmpsl
adc
dec
loope
aam
inc
inc
fwait
dec
iret
push
xchg
or
fadds
std
add
scas
and
fdiv
arpl
sub
test
inc
out
out
out
push
sbb
jp
fdivrs
mov
fs
mov
mov
lret
mov
ret
xorb
sub
cld
loope
insl
xor
mov
cmp
xchg
cmp
add
andb
cmpb
insl
cmpb
and
call
lahf
adc
clc
or
push
xor
mov
fnstenv
mov
sbb
jbe
cmpsb
mov
jmp
leave
ret
loope
sbb
stos
aam
sbb
pop
pop
xchg
leave
les
pop
das
popa
push
shrb
call
mov
ret
jmp
daa
lahf
call
scas
gs
fsubrs
mov
cli
jae
fistpll
mov
mov
iret
xchg
lcall
pusha
movsb
push
stc
nop
testb
es
imul
cmp
leave
lods
jp
jne
and
fsubs
push
fdivrl
xor
push
ljmp
aaa
adc
dec
loopne
cmc
sarl
in
adc
iret
jle
dec
out
xchg
pop
jle
jo
das
outsb
push
pop
cmpb
sbb
sar
push
ss
test
mov
test
mov
daa
push
std
out
adc
faddl
lret
movsb
cmp
xchg
hlt
imul
fbstp
mov
int
ret
cmp
repnz
pop
jne
insb
inc
sbb
inc
jg
mov
jle
and
pop
push
fisubl
repz
repnz
xor
jne
push
sbb
mov
mov
xchg
inc
int
pusha
mov
push
cs
jns
dec
mov
clc
or
pop
pop
mov
mov
sub
in
fsub
push
shl
les
pop
mov
call
cmc
leave
fildll
gs
sbb
test
adc
add
decl
or
adc
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
int
mov
mov
xlat
mov
mov
jle
inc
jecxz
jmp
add
xchg
mov
mov
mov
aaa
cmpb
jg
lds
jmp
xlat
ret
test
lds
js
push
xchg
mov
inc
sti
outsl
jecxz
push
lea
xor
fwait
lcall
dec
filds
stos
idivb
lock
or
iret
cltd
mov
out
push
pop
jbe
daa
mov
add
cmp
repnz
mov
push
sub
mov
mov
jp
and
adc
cltd
mov
mov
xlat
lods
mov
sub
and
pmaddwd
push
sarl
divl
out
cld
sbb
ja
in
push
push
adc
clc
and
mov
leave
adc
loop
and
cmc
inc
rcrb
mov
add
cli
push
aaa
adc
and
xor
sbb
or
mov
cmp
mov
mov
jae
dec
popf
in
push
cs
lods
cmpsb
adc
inc
inc
xchg
push
jl
jecxz
leave
jns
lock
cmpsb
sti
or
sahf
div
dec
sbb
cli
lods
and
data16
xlat
sbb
push
add
fldt
lar
in
and
push
jmp
rcrb
imul
testl
xor
jae
mov
int3
jge
push
mov
mov
mov
cmp
cltd
cltd
fdivrs
push
cltd
fwait
mov
cmc
mov
sti
cmc
and
mov
rol
fldenv
cmp
sbb
popf
mov
sub
cmp
add
js
xchg
mov
xorb
adc
cltd
sbb
add
jo
mov
int3
xchg
inc
fprem1
out
mov
dec
adcb
pop
or
out
insb
sbb
fstpl
fistpll
lock
xchg
out
fimuls
jno
js
add
add
xchg
jnp
fbstp
dec
inc
jle
test
arpl
das
inc
add
es
mov
xor
mov
mov
mov
in
dec
in
rcrb
loopne
aam
inc
mov
adc
stc
std
cmc
sub
jb
fisttpll
test
and
inc
lret
sub
sub
cmp
sbb
arpl
imul
mov
testl
bound
fmull
push
insl
lea
adc
sti
pop
gs
jb
inc
clc
cmpl
xchg
lea
lock
outsl
in
sbb
popa
push
xchg
filds
xor
pop
rorb
mov
sbb
addl
fstps
popf
push
push
xchg
sub
cmpsb
scas
cmpb
jbe
mov
or
cmpsl
and
mov
sbb
pop
lcall
or
adc
lea
jns
repz
aad
mov
cltd
xorb
sbb
pop
mov
push
repz
pushf
jno
cltd
lahf
inc
cmp
popa
cmpsl
cmp
mov
jl
sub
adc
andb
fs
mov
rep
aad
in
cltd
lods
gs
lret
stos
cmp
jnp
in
jp
add
insb
xchg
das
mov
addr16
cmpsb
push
add
outsb
imul
add
xchg
xor
push
mov
or
mov
push
add
popl
mov
fidivrs
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
adc
sarb
rcr
mov
out
fbstp
mov
jno
push
adc
psllq
jecxz
dec
xchg
xlat
ret
sbb
insl
pop
add
mov
outsb
mov
std
jb
cld
add
mov
xchg
insl
fiaddl
mov
inc
pusha
iret
push
repnz
stos
cmc
out
lahf
test
lcall
pop
outsb
xor
into
bound
adc
imul
adc
jne
scas
inc
std
jge
mov
cs
mov
insb
sbb
popf
sub
jnp
mov
and
daa
push
fisubl
xchg
pushf
out
movsl
int
fcoms
mov
movsl
add
enter
lock
pop
icebp
pop
insb
outsb
dec
fiadds
mov
add
aam
add
scas
scas
xchg
push
ds
adc
pop
push
sahf
imul
jae
mov
add
jmp
mov
fiaddl
faddl
cmp
xor
enter
js
add
aam
jg
jge
jmp
inc
in
scas
push
cmovno
repnz
fldcw
test
insl
adc
jo
outsl
popa
xorb
scas
mov
inc
test
push
push
ss
and
insl
cmpsl
pop
mov
data16
push
loop
cmp
pop
lods
push
in
sub
adc
ljmp
sbb
leave
es
adc
sbb
cmpsb
std
pop
pop
cld
sbb
incb
adc
xchg
loopne
cmp
mov
or
pop
push
jle
popa
mov
and
popa
popf
sbb
mov
jmp
push
into
and
jg
mov
jo
mov
xchg
xchg
jo
cs
bound
dec
sub
ficoms
push
jae
loopne
add
sar
cld
fdivrl
pop
clc
in
push
adc
shlb
out
or
data16
mov
aas
insb
aaa
mov
ss
sbb
loope
out
ds
hlt
mov
push
inc
add
mov
mov
fcoml
out
mov
rol
xchg
jne
mov
jecxz
jb
push
xchg
pop
push
mov
lods
cwtl
stos
cmpsb
mov
js
fnstcw
push
jg
or
mov
int
nop
test
add
icebp
xchg
movsb
dec
fsubrs
pop
aam
addr16
push
repnz
out
movups
gs
or
rol
mov
jg
sbb
divb
inc
mov
dec
pop
incl
clc
test
in
lods
lahf
xchg
fcompl
sbb
push
jle
pop
jmp
call
ja
cld
jno
aas
or
aas
pusha
scas
jge
dec
sub
hlt
inc
imul
mov
and
cmpsl
out
outsb
mov
push
loope
loope
ds
xchg
jle
mov
or
ret
inc
stos
mov
or
add
adc
mov
ja
jb
pop
outsb
rcrb
mov
ljmp
sub
mov
push
ror
mov
jbe
dec
jae
dec
xlat
push
sti
or
in
lods
test
rorl
std
aas
sahf
lds
cmp
xchg
push
xchg
scas
repz
leave
xchg
sbb
stc
loope
mov
xlat
push
mov
cltd
lret
adc
subl
push
test
and
lock
pop
aad
push
stos
icebp
adc
inc
ss
sti
push
lods
push
pusha
sub
push
inc
fsub
xor
out
dec
push
pop
jne
xchg
lret
xchg
dec
popf
pop
popl
clc
sahf
fnsave
jmp
push
or
sahf
das
xor
lcall
loope
btc
sbbb
cwtl
dec
pop
add
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
pop
ficoms
lods
rol
dec
les
mov
add
pop
mov
jecxz
out
jb
mov
mov
addr16
mov
cwtl
gs
ret
push
push
stos
and
insl
pop
push
sub
les
dec
and
sub
mov
xor
aaa
gs
sbb
sub
xchg
test
or
sub
jecxz
cmpsb
arpl
sbb
xchg
push
push
mov
inc
shrl
imul
je,pn
pusha
clc
out
dec
or
jnp
or
das
dec
mov
push
aad
or
das
add
jno
stos
push
mov
dec
adc
test
mov
push
push
push
jne
cmpsl
mov
xlat
ja
das
sbb
jns
push
pop
push
xchg
addr16
mov
push
pop
mov
aam
cltd
push
sub
mov
cwtl
dec
jmp
sahf
popa
cmp
xor
iret
mov
cltd
pop
add
xchg
sarl
cmp
sahf
pop
in
xlat
adc
inc
stos
mov
sbb
cmpsb
into
mov
jo
xchg
fnsetpm(287
add
lea
loop
inc
inc
fwait
ret
add
daa
bound
repz
out
nop
popa
add
es
out
cmpsl
adc
call
cld
cmp
dec
dec
jne
push
sarb
mov
and
dec
sbb
sub
outsb
add
outsl
into
ret
mov
outsl
cmpsb
dec
ja
out
scas
imul
xor
test
pop
and
aad
int
and
or
dec
mov
add
cmpsb
mov
movsl
test
and
cmp
sub
cmp
into
and
ja
arpl
inc
fwait
pop
sub
fs
pop
sub
cmp
aas
mov
jp
push
push
cmp
and
inc
sbb
cmp
xor
mov
pop
lds
mov
arpl
dec
mov
daa
bound
insl
cmp
pop
add
or
outsl
sbb
in
mov
mov
ret
push
das
xchg
ficoml
cmp
jno
lods
inc
lods
flds
sahf
ret
subl
inc
loop
mov
sub
inc
dec
sub
insl
cwtl
shrl
adc
lret
adc
and
cltd
mov
cmp
gs
jnp
jp
subl
repnz
jge
adc
neg
xor
xor
imul
fnsave
lahf
dec
add
lods
jl
fcmovu
lock
mov
jbe
cmp
test
popf
push
inc
test
in
push
adc
xchg
into
pop
sbb
and
xor
mov
filds
mov
arpl
in
jg
stc
xor
inc
hlt
in
xchg
fs
pop
inc
ds
push
int
mov
rcll
sbb
lahf
bound
jbe
sub
jmp
fs
mov
push
shll
pop
in
ficomps
stos
gs
pop
iret
insl
dec
fucom
insb
int
iret
pop
inc
mov
inc
push
cli
adc
ror
cmp
mov
in
in
fimull
out
and
sahf
pop
test
mov
fwait
das
or
scas
cmc
inc
adc
mov
mov
lock
sahf
adc
addb
scas
loopne
pop
lds
jp
sti
or
sbb
push
jno
push
jmp
xor
ror
mov
iret
adc
mov
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
mov
mov
aas
int
ret
je
out
aaa
xchg
sub
jge
je
addr16
xor
and
mov
repz
sbb
ret
je
pop
imul
xchg
gs
rolw
fbld
stos
sub
sub
jae
inc
mov
inc
cmp
pop
push
sub
mov
adc
xchg
inc
mov
enter
push
or
loopne
mov
dec
add
cli
fcomps
popa
inc
xchg
in
inc
ljmp
push
mov
jne
add
repz
movd
mov
xor
rorl
sub
xor
jp
stos
jg
adc
push
mov
or
decl
decl
mov
xorl
clc
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
fsubl
add
gs
arpl
push
outsl
inc
jne
jae
jb
fs
add
add
add
and
inc
add
sub
loopne
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
nop
and
inc
add
inc
add
daa
inc
add
jle
add
inc
add
sub
test
inc
add
sub
in
daa
inc
add
push
movsl
scas
or
inc
add
inc
add
add
inc
add
daa
inc
add
inc
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
adc
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
test
inc
add
push
movsl
cmp
xlat
movsl
dec
add
andb
addl
add
hlt
stc
sarb
inc
pop
jg
add
add
jle
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
mov
inc
add
daa
inc
add
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
or
add
test
adc
test
sbb
test
and
test
sub
test
xor
test
cmp
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
add
inc
add
inc
add
inc
add
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
lds
add
test
roll
add
test
fldl
add
test
jmp
test
icebp
test
cmc
test
stc
test
std
test
add
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
inc
add
inc
add
inc
add
inc
add
add
sub
mov
add
add
inc
xchg
add
add
add
add
add
add
add
adc
add
and
add
add
add
adc
add
mov
add
add
pop
mov
add
add
jbe
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
mov
add
add
pop
mov
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
pushf
mov
add
add
loop
add
lock
add
add
adc
add
mov
add
mov
add
add
pusha
mov
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
inc
lea
add
add
lea
add
add
mov
add
movsb
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
xor
add
inc
mov
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
and
add
push
popl
add
add
je
add
mov
add
mov
add
lret
add
popl
add
popl
add
popl
add
nop
add
sbb
add
cmp
add
dec
nop
add
pop
nop
add
jb
add
mov
add
mov
add
enter
ficoml
add
cld
nop
add
or
add
sbb
add
ds
add
dec
xchg
add
pop
xchg
add
jo
add
jle
add
mov
add
scas
xchg
add
rclb
add
xchg
add
lock
add
cld
xchg
add
or
add
sub
add
dec
xchg
add
pop
xchg
add
push
xchg
add
add
add
xchg
xchg
add
movsb
xchg
add
mov
add
into
xchg
add
loopne
add
repnz
add
or
add
sbb
add
es
add
cmp
add
pusha
xchg
add
jo
add
adcb
add
add
mov
xchg
add
out
add
cld
xchg
add
adc
add
xchg
add
inc
xchg
add
push
xchg
add
jb
add
mov
add
xchg
add
ficoml
add
xchg
add
adc
add
xor
add
push
xchg
add
xchg
add
jl
add
mov
add
lods
xchg
add
mov
xchg
add
fcoml
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
jbe
add
dec
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
