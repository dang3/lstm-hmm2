add
add
adc
cmp
add
add
adc
add
add
add
add
add
add
add
adc
add
add
xor
add
xor
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
add
add
mov
add
inc
and
or
mov
xorl
add
adc
movzwl
mov
mov
sub
mov
and
movb
sbb
lea
xor
xor
adc
mov
mov
mov
sub
mov
mov
xorl
xor
sub
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
push
sub
movl
and
mov
push
mov
xor
or
mov
andl
push
subl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbbl
mov
addl
xor
subl
add
jmp
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
orl
mov
sbbl
xor
xor
mov
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
neg
mov
movl
movzwl
xor
addl
add
movzbl
mov
mov
movl
inc
mov
mov
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
addl
xor
add
mov
xorl
mov
sbbl
xor
add
mov
movl
movl
movl
mov
movl
mov
movl
mov
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
negl
xor
xorl
xor
orl
sub
movzbl
adc
sub
xorl
xor
not
mov
addl
mov
mov
orl
lea
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
pushl
push
push
call
jmp
mov
mov
subl
lea
neg
mov
adc
mov
addl
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
mov
sbb
mov
xorl
mov
lea
xor
mov
mov
mov
adcl
lea
not
mov
mov
mov
lea
mov
dec
mov
xor
orl
add
movl
jne
movl
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
xor
sub
mov
xor
xor
addl
sub
movl
sub
xor
movl
mov
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
add
xchg
dec
xchg
in
sbbl
adc
aam
mov
bound
bound
bound
xor
cmp
jns
jne
fidivrs
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
add
imul
mov
jmp
inc
lret
mov
rorb
mov
adc
mov
test
push
out
je
outsl
divb
jbe
pusha
cmp
insb
ds
add
fnstenv
repnz
pop
lret
test
sbb
push
fisttps
iret
xchg
and
scas
jbe
hlt
pusha
mov
data16
repz
roll
scas
jle
fcoms
js
xchg
shrl
and
cmp
dec
stc
inc
dec
mov
cld
rcr
out
int
fbstp
aam
mov
or
or
leave
scas
rorl
pop
and
mov
jle
xchg
js
cmc
push
lcall
call
adcl
jae
push
cltd
mov
sbb
pop
jg
orb
xchg
xchg
mov
mov
out
pop
aas
xor
imul
outsl
sub
mov
and
jnp
les
mov
sub
or
rorl
xor
or
pop
jno
dec
fistl
sbbb
into
daa
in
aas
call
xchg
dec
and
sbb
sub
mov
dec
xchg
fidivrl
stc
in
xchg
cmc
cltd
insl
out
push
jge
jae
cmp
push
and
inc
or
cmp
in
lods
jmp
iret
imul
xchg
push
lock
mov
aas
or
into
outsl
lods
adc
push
mov
push
loopne
push
or
lcall
outsb
lahf
sub
mov
jno
pop
clc
pop
inc
stos
xor
repz
sbb
push
lret
loop
xchg
push
or
scas
mov
ljmp
and
sub
hlt
xchg
push
les
and
jo
cld
addb
sbb
pop
cwtl
mov
and
das
sbb
shr
ds
movsb
hlt
xchg
stos
xchg
add
cs
fistl
aam
mov
scas
test
sarl
cmp
ret
lea
xchg
dec
ret
mov
subl
fdivrs
imul
push
sbb
adc
fidivl
xchg
mov
mov
push
add
sub
xchg
shld
push
imul
push
inc
dec
add
jne
cs
out
push
out
sub
mov
push
decb
ret
sub
aad
xchg
in
test
hlt
mov
and
dec
imul
repnz
and
mov
movsl
push
imul
adc
daa
insb
nop
xor
iret
loope
cmp
jb
jl
and
dec
push
rcrl
add
ljmp
enter
inc
sarb
sub
and
mov
xchg
and
push
imul
jmp
mov
xor
mov
push
xchg
inc
frstor
jo
xchg
outsl
mov
add
xchg
cmp
out
fldt
lods
in
sub
push
xchg
cwtl
mov
enter
ljmp
lahf
inc
mov
jecxz
pusha
mov
or
shrl
dec
out
in
lds
cmp
xchg
inc
mov
pop
jp
pushf
push
push
jmp
popf
xor
mov
andl
add
hlt
push
test
fsubrs
stos
outsb
mov
mov
push
fcomip
cs
pop
jl
scas
fwait
aas
adc
adc
rolb
out
pushf
in
adc
sub
jle
out
mov
lcall
sub
sahf
in
mov
lea
pop
fisttpl
leave
sub
push
iret
ds
pop
mov
mov
pusha
sti
test
push
andl
inc
lods
fcom
cwtl
data16
mov
movsb
add
loope
aaa
pop
sbb
fdivrl
mov
push
sti
lds
cld
dec
data16
jnp
add
rorb
adc
push
flds
cmpsl
imul
or
pop
xor
adc
pop
lods
testb
lods
sbb
lcall
cltd
cwtl
pop
mov
and
dec
aas
pop
addl
mov
lds
out
xor
mov
aad
test
push
inc
fsts
js
lret
movsl
leave
cmpsb
out
push
push
add
mov
inc
mov
out
cs
ja
push
pop
jecxz
ror
adcl
subl
xchg
jle
push
mov
loope
mov
pop
push
jp
jmp
sbb
mov
fcoml
xchg
xlat
or
pop
iret
cli
fmull
xchg
xor
add
jge
inc
push
xor
outsl
ljmp
jp
sbb
addr16
jmp
pop
adc
xorl
dec
daa
mov
inc
xchg
arpl
dec
mov
jne
cwtl
fldcw
push
and
cmp
ss
add
cmp
out
or
out
xor
sbb
mov
add
adc
mov
sub
aam
hlt
jge
out
and
call
inc
mov
mov
cmpsb
imul
aad
subl
sub
and
adc
pop
push
test
rolb
daa
out
sti
ret
pop
out
cwtl
rcrl
jl
mov
xor
pop
mov
jno
lods
push
xchg
test
cld
and
sub
pushf
js
fs
lea
mov
jecxz
out
hlt
ret
or
cmp
jb
push
push
or
jp
xchg
aas
adc
inc
push
pop
sbb
push
loop
in
xchg
pop
push
sub
loope
cmp
xor
pop
and
shlb
jae
mov
js
fwait
test
mov
in
mov
and
push
fisubrs
mov
sub
mov
rclb
dec
dec
rcrb
cmp
add
mov
jb
add
aad
sub
bound
add
cmpsl
shll
xorl
sub
popf
out
mov
nop
and
sbb
jl
shrb
push
sbb
jmp
cmp
and
cwtl
in
jecxz
dec
int3
push
ret
dec
rorb
xor
in
cmp
test
xchg
xor
scas
or
jae
inc
xor
lods
lcall
out
rcrl
jle
jmp
xchg
lock
iret
cmp
or
out
jne
mov
out
dec
jae,pn
enter
jnp
jl
or
inc
pop
pop
lds
aaa
add
jb
fnstcw
dec
faddp
pop
sub
gs
add
mov
jg
dec
in
pop
dec
js
clc
mov
mov
test
jmp
popf
in
lds
or
inc
imul
bound
sub
nop
push
xchg
ficoml
xchg
pop
adc
popf
icebp
loop
outsb
loop
clc
sarl
adc
loop
or
repnz
pushf
mov
ljmp
xchg
addr16
daa
sti
movsb
jno
fnstenv
mov
in
cmp
pusha
push
push
cmovae
sti
dec
std
cs
adc
clc
in
xchg
add
mov
pop
jo
pop
inc
cmp
fwait
cmp
sbb
pop
xor
and
mov
ret
jnp
cmp
dec
ss
shrl
ret
push
aaa
add
inc
push
out
shrb
adc
sti
inc
xchg
sbb
leave
lock
fnstenv
lret
pop
je
cmp
adc
insb
sub
adc
pushf
mov
imul
stc
in
in
test
cmp
or
sbb
add
sub
dec
daa
daa
add
jns
loop
add
xor
jo
je
push
push
and
jae
or
jmp
sub
rolb
out
in
cmpsl
cmp
sub
adcb
inc
sbb
js
jo
xchg
dec
lret
ss
in
out
pop
jl
test
mov
jb
jge
out
cmp
mov
jne
add
cmpsl
adc
mov
pushf
repz
adc
sub
incb
movsb
iret
or
sub
mov
jl
orb
aam
ljmp
jno
pop
out
popf
push
adc
push
cs
and
adc
andl
mov
cmc
push
fs
lahf
loopne
push
roll
adc
lods
roll
xchg
cmp
mov
lock
mov
aam
sub
mov
push
ret
jge
mov
lock
insb
js
push
xchg
roll
mov
hlt
mov
les
data16
das
xchg
inc
and
pop
pop
cmc
lahf
movsb
mov
mov
fnstsw
js
lret
jns
mov
ret
cmp
aaa
call
xor
sub
mov
jecxz
cwtl
cmpsb
lret
cli
ret
in
push
dec
mov
scas
and
inc
in
fisttps
rcll
jo
mov
xchg
adc
jp
pusha
ret
add
or
mov
rcll
lret
xor
xor
mov
or
xchg
ds
dec
push
mov
and
add
sbb
test
pop
jmp
repnz
push
push
jnp
xlat
push
mov
mov
loope
sbb
repnz
inc
out
mov
add
fdivs
dec
ror
js
sub
outsb
cmp
dec
leave
cwtl
subl
adc
je
pop
out
jno
jle
cld
shrl
shlb
imul
sbb
les
jo
pop
and
popa
inc
push
call
int
fwait
mov
xor
push
dec
sub
out
bound
mov
int3
adc
out
lock
jmp
jbe
inc
std
test
add
mov
jnp
pop
je
dec
out
rcrb
inc
and
es
repz
repnz
push
pop
je
mov
pop
das
cmc
inc
cmpsb
shrb
les
adcl
cwtl
arpl
jge
out
enter
sub
rorb
mov
mov
mov
enter
lcall
inc
mov
cmp
jne
jge
inc
and
inc
hlt
pop
sbb
pop
jb
xchg
movsb
mov
pop
xchg
push
or
fisttpll
jo
push
or
subb
icebp
test
dec
push
pop
pop
cld
lods
jge
xor
lods
xchg
sbb
jno
push
inc
ss
mov
xor
icebp
jle
sub
insb
stos
call
js
scas
sub
dec
push
lret
mov
ret
in
dec
mov
sub
mov
xchg
and
loopne,pn
xor
mov
mov
inc
push
sub
mov
cld
out
or
in
bound
arpl
mov
inc
pop
test
inc
sti
int3
jno
push
push
ror
fmull
imul
pop
mov
cmp
leave
cs
addb
cmp
mov
rol
test
fcompl
das
fwait
sub
test
inc
int
lret
orb
push
in
xor
insl
cltd
push
dec
std
cmpsb
nop
mov
test
lcall
mov
or
lcall
movsl
push
xorl
pop
mov
xchg
lods
adc
cwtl
push
pushf
mov
ljmp
je
xor
pop
ret
cld
addb
push
les
cwtl
add
and
cld
cmp
and
int
fcmovb
push
or
mov
test
mov
inc
pop
pop
les
loop
repnz
and
sahf
and
xor
gs
inc
xor
and
loop
mov
or
cmp
loope
cmpsb
dec
fiadds
xchg
fstps
and
pop
dec
cmc
stos
jge
loope
out
xchg
sbb
fidivrs
pop
fmulp
jg
stos
stc
cmpsl
ss
ljmp
ss
cmp
imul
jo
iret
pusha
mov
mov
dec
in
or
xor
cld
sar
dec
scas
push
imul
aad
and
imul
loopne
mov
aaa
call
addr16
push
gs
push
aam
roll
fistpl
test
xchg
mov
das
dec
in
nop
mov
push
xor
dec
sbb
into
std
cmp
lods
das
adc
clc
mov
das
xor
gs
adc
fidivrl
cmpsl
or
shl
jno
jle
add
int
jp
std
pop
sub
jae
in
cmpsb
roll
mov
inc
xor
xor
cmp
pop
test
stos
loope
test
mov
jbe
std
movsb
std
in
lock
pop
repnz
outsl
jg
jo
push
ds
std
cmp
mov
xchg
cmp
push
ds
jl
cltd
lcall
mov
xchg
movsl
xchg
push
mov
fsts
lret
push
push
xor
dec
jnp
loop
sub
mov
xor
xchg
mov
xor
sub
iret
cmp
int3
pop
xor
and
lcall
mov
xchg
jg
sbb
loopne
fwait
pop
imul
xor
mov
pop
xor
imul
xchg
or
call
clc
pop
dec
pop
sbb
cld
ret
lods
xchg
pop
push
dec
xor
test
mov
cltd
pop
shl
daa
cld
push
sbb
mov
andl
xchg
adc
mov
sahf
sub
sub
in
mov
pop
mov
push
mov
std
inc
mov
popf
test
out
jge
fdivl
ss
xchg
cltd
add
arpl
sub
in
cmc
cmova
imul
jle
jecxz
iret
and
push
push
adcl
rorb
movsl
and
xor
cld
aam
jne
push
inc
sbb
inc
test
sbb
and
cmpsl
arpl
sub
leave
cmpsb
adc
stc
stos
das
xor
mov
sahf
xor
je
xchg
adc
add
fnsave
xor
mov
mov
adc
and
call
mov
rcl
ja
fwait
scas
sbb
push
faddl
addr16
cmp
inc
aaa
xchg
mov
and
dec
adc
inc
sbb
ret
adc
lcall
mov
adc
sarl
push
outsb
mov
mov
xchg
mov
out
jb
fidivrl
push
and
arpl
and
pop
in
test
sbbb
add
or
iret
adc
mov
aad
repz
out
mov
mov
push
ret
sbbb
mov
repnz
mov
js
mov
push
dec
mov
lods
jmp
cmp
inc
pop
repz
into
ds
sbb
pusha
push
test
stos
idivl
pop
push
mov
xlat
in
rcl
xchg
and
xor
shll
sbb
xchg
imul
and
es
ljmp
or
insb
les
ja
mov
ret
cwtl
popa
adc
aaa
mov
aas
gs
mov
jecxz
incb
jecxz
pusha
inc
cli
shll
enter
or
xchg
xlat
xorps
call
mov
stos
sub
jmp
mov
push
inc
pop
and
mov
addb
sbb
inc
xchg
or
imul
dec
jne
or
jmp
lret
and
mov
cmp
pop
sbb
cmova
adc
xchg
mov
mov
fsubs
mov
outsb
aas
jb
cmp
test
or
add
mov
inc
push
pop
addr16
fisubrs
add
pop
cmc
fsubp
insb
es
cmp
sbb
pop
sbb
mov
out
inc
test
sbb
das
out
add
jmp
fwait
inc
idivb
ss
xor
push
and
or
mov
mov
jle
imul
ljmp
mov
mov
xor
pop
cmpsb
jnp
cmp
push
jns
loope
add
test
cmp
push
xor
xchg
nop
push
dec
inc
aas
push
jp
cltd
addr16
pop
cmc
sbb
sub
insl
lock
adc
ret
jno
mov
insl
sub
cmp
xor
sarb
adc
mov
inc
adc
cmp
movsb
xchg
mov
ds
cmp
enter
mov
fildl
outsl
and
sbb
push
xor
cmpsb
mov
fs
push
dec
adc
jo
jnp
dec
stos
pop
mov
push
lea
or
cmp
inc
mov
sbb
ljmp
test
pop
xchg
bound
fistpll
cltd
scas
xchg
ss
repz
inc
sub
loope
mov
jp
incl
mov
mov
loopne
sbb
cmp
sbb
mov
rcl
pop
out
or
xor
fs
sahf
cmp
mov
test
out
jnp
clc
cld
push
jecxz
popf
scas
aaa
jb
mov
jo
repnz
mov
cmp
push
cmp
cmp
repz
addr16
or
ud1
enter
imul
lret
icebp
and
out
jne
mov
xor
js
int
push
dec
xchg
pop
clc
rcrb
pushf
xchg
push
xor
aad
inc
aaa
ficompl
jp
mov
clc
xor
push
and
das
mov
or
int
insl
inc
int3
sbb
repz
pop
dec
cmpb
in
cmp
push
mov
sbb
or
jnp
cmp
jl
push
mov
and
dec
inc
addr16
mov
sbb
push
sti
add
loop
mov
daa
cmpsl
jb
leave
xchg
mov
jns,pt
scas
cmp
lret
outsb
jp
ljmp
sub
pushf
andb
sbb
movsl
imul
subl
dec
inc
pop
mov
mov
inc
flds
xchg
shlb
mov
incb
push
mov
or
cmp
add
sbbl
sub
pusha
mov
xchg
test
rol
jge
adc
outsl
lods
mov
das
or
xchg
mov
xor
xor
add
cmp
cmp
fmul
mov
cmpsb
inc
ljmp
nop
pop
outsl
test
call
sti
clc
aas
pop
out
mulb
icebp
pop
xchg
push
xchg
and
ret
pop
inc
dec
stos
cmp
cmp
mov
dec
sti
sub
sbb
xchg
xor
and
ret
push
cmp
ficoml
lods
lea
movsb
dec
imul
mov
cs
sbb
repz
aaa
fcmovnu
iret
push
cmp
xchg
js
stos
add
negl
shll
cmp
push
push
sub
sbb
add
mov
and
dec
pop
repnz
mov
pextrw
mov
cmpl
lods
ret
out
scas
xchg
jle
mov
rcrb
dec
cld
push
inc
lods
jmp
adc
push
lret
mov
push
jne
bound
lahf
notb
out
pusha
jnp
stos
into
add
sub
cwtl
xchg
add
stc
push
es
pop
mov
mov
fadds
arpl
add
adc
sub
mov
sub
dec
inc
stc
mov
push
aaa
punpckldq
cmp
cmc
push
outsb
aad
aad
es
or
mov
xor
mov
test
jp
not
jbe
adc
ficompl
addr16
adc
mov
dec
jge
dec
sbb
mov
popa
mulb
push
rcrl
xor
pushl
xorl
jne
test
and
and
push
fucom
sarl
in
negl
xor
call
push
cmp
enter
or
cmp
clc
popa
inc
dec
xor
dec
sti
push
ss
mov
fldenv
pop
inc
stos
ffreep
scas
sub
int
add
mov
xchg
in
test
add
xchg
jb
cwtl
nop
mov
jns
mov
jnp
jecxz
dec
cmp
cs
sti
inc
sbb
xorl
push
xchg
test
or
push
xchg
adc
mov
mov
hlt
test
pop
jb
push
lods
xchg
js
mov
ljmp
xchg
pop
adc
stc
mov
movsb
stos
movsb
leave
lods
jmp
fwait
test
add
into
add
sbb
adc
fld
xchg
daa
xchg
jbe
adc
fimull
lea
hlt
aas
and
ljmp
loopne
sahf
out
xor
lea
inc
imul
icebp
je
lods
lret
inc
jg
mov
xorl
test
xor
push
lea
push
cmpsl
fisttps
out
cmp
pop
icebp
imul
rcrb
mov
and
and
jbe
push
jns
pop
pusha
pop
sbbb
sub
mov
xor
sub
popa
in
jbe
or
adc
sbb
ja
mov
dec
push
adc
cmp
jmp
mov
push
inc
lcall
pushf
inc
inc
incl
in
out
push
adc
xchg
sbb
stos
xor
imul
fisttpll
mov
sub
call
lock
add
dec
fisttps
test
fs
adc
loope,pn
enter
mov
mov
jmp
cmp
lds
jbe
mov
jns
adc
and
andl
inc
daa
out
in
xlat
in
xlat
out
adc
in
xchg
test
lods
push
out
jne
cld
jne
and
divb
stos
push
lods
sahf
popf
rcll
arpl
fwait
or
mov
sub
iret
loop
pop
push
jmp
lahf
gs
and
movsl
adc
sub
andb
xor
stc
dec
and
cmp
or
out
in
sbb
mov
stc
in
mov
repnz
sbb
adc
daa
mov
nop
dec
pop
or
push
repnz
mov
loop
aad
mov
pop
fcmovnb
ret
andl
adc
adc
sbb
roll
daa
enter
insl
jae
or
xchg
dec
iret
add
dec
push
cmpsl
fidivrs
js
aas
mov
das
stos
sbb
add
out
or
xlat
mov
push
push
pop
xor
or
xor
mov
je
aas
imulb
scas
or
imul
cmpsb
ja
lret
insl
les
or
and
repz
gs
fsubl
pop
xchg
cmp
popa
bound
clc
cmp
sar
incb
mov
mov
ret
push
rcrb
out
test
and
inc
push
mov
dec
int3
arpl
cmp
push
addr16
call
decl
xchg
repz
in
mov
inc
push
negb
or
popa
jmp
add
jo
fldl2t
dec
flds
pop
insl
andl
mov
add
pop
inc
jle
inc
repz
or
sbb
xchg
nop
and
mov
dec
les
cwtl
xchg
inc
lods
adc
daa
sahf
pusha
aas
and
cmpsb
mov
sbb
xor
sub
leave
popa
mov
andb
jmp
fistps
jns
fnstsw
movsb
out
insb
bound
xchg
int3
test
cli
adc
xchg
insb
divl
mov
fnstsw
in
roll
jbe
insl
inc
les
jl
inc
pop
lock
repz
cld
sub
jo
push
push
pop
xchg
and
pop
xchg
insb
das
rcrl
ja
add
out
mov
std
xchg
cltd
push
mov
mov
insl
cmpsl
movsl
push
ret
push
sbb
jbe
sbb
adc
pushf
dec
movntq
out
lock
pop
iret
sub
xchg
dec
xchg
rorb
pop
stos
insb
sbb
mov
inc
sbb
jns
clc
inc
push
rcr
pop
pop
sbb
adc
sub
imul
addl
and
insb
jle
dec
cmpsl
int3
sub
add
xor
push
add
and
add
inc
lret
pop
mov
xor
sbb
jmp
add
xor
and
loopne
jae
jle
sub
xor
push
rol
mov
mov
lock
xor
test
jl
add
les
dec
je
cld
inc
arpl
filds
imul
add
fucomi
fdivrp
xor
testl
in
jmp
testl
mov
ljmp
xchg
add
arpl
lea
je
lret
std
inc
testb
lds
dec
cmp
push
cmp
leave
dec
test
ret
ret
inc
fnstenv
xchg
shlb
and
movhlps
push
sbb
sahf
mov
jo
or
sarl
les
bound
or
mov
add
jge
mov
lds
mov
test
cmp
ss
add
ss
mov
loop
inc
xchg
lret
add
shlb
jl
je
pop
jne
aad
andb
inc
scas
xchg
fistpll
subb
adc
jl
clc
aaa
shrl
xor
les
repnz
negl
es
dec
pop
repz
stos
sarb
into
int3
shlb
add
xchg
dec
ds
pop
and
push
mov
push
jg
es
nop
ror
leave
fiaddl
cmpb
push
cmp
push
mov
mov
idivl
xlat
lock
mov
adc
mov
leave
add
push
pop
mov
mov
and
pop
out
sbb
add
xor
call
lea
int3
mov
outsb
sbb
add
lea
es
daa
xchg
sbb
mov
test
jmp
inc
call
jg
cwtl
mov
adc
dec
add
mov
enter
push
js
pushf
sbb
jne
pop
lods
call
lahf
add
add
aas
and
movzwl
fsubp
pusha
dec
in
call
inc
cmp
push
xor
xchg
mov
out
xor
mov
nop
mov
xchg
sbb
test
jg
adcl
aaa
cmc
mov
push
cmp
repz
sbb
xchg
aas
ror
fnstcw
or
or
shl
pop
mov
push
pop
cmp
mov
adc
loopne
aaa
lret
jb
dec
sbb
mov
shlb
add
call
cmc
and
nop
imul
lcall
jp
sub
push
xchg
dec
push
push
push
popf
xor
divl
shrl
fidivrs
mov
cltd
nop
mov
mov
lret
pop
loopne
stos
sub
leave
cmpsl
push
inc
inc
inc
pop
idiv
xor
sub
or
scas
xor
lds
adc
loop
add
add
fucom
out
rcrl
mov
ljmp
xchg
xchg
push
jecxz
push
sbb
inc
andl
lret
cmp
sbb
cli
jle
inc
add
ffree
add
sahf
fmull
push
clc
push
test
ret
mov
ljmp
repz
push
cmc
jne
xor
xorb
imul
jnp
fisubrs
popf
inc
xor
mov
sti
outsb
loope
das
dec
les
mov
pushf
nop
cmp
sub
pop
or
movsl
mov
in
mov
movsb
mov
rcll
je
push
adc
mov
adc
icebp
in
or
add
sub
cmp
in
ret
jl
fisttpl
subl
cmovge
outsl
mov
jnp
fsubl
mov
loop
push
sub
lods
jmp
sbb
xchg
adc
leave
mov
push
shrb
mov
std
sbb
mov
mov
repnz
rclb
xchg
or
orb
push
xor
push
ret
jmp
das
and
idiv
rorl
pop
arpl
imul
shl
fstpl
negb
cmp
mov
insl
jno
pop
mov
jmp
stos
mov
pop
add
in
cmp
mov
cmp
dec
mov
cld
rorb
push
lret
filds
xchg
ds
imul
mov
mov
xor
fcomi
aaa
cli
inc
enter
negl
pusha
jg
dec
lods
or
mov
xor
clc
hlt
inc
cmp
divb
fnsave
icebp
int3
fstl
fs
popl
jbe
push
sbb
imul
or
cmp
out
gs
out
cwtl
imul
mov
fiadds
lahf
repz
mov
cwtl
lahf
mov
insb
faddl
inc
cli
psrld
mov
sbb
rcll
jo
pusha
push
iret
out
dec
ja
jecxz
inc
sub
imul
pmovmskb
repz
repnz
out
psubsb
push
popf
rorb
inc
jno
ljmp
pop
inc
xchg
clc
lock
cwtl
mulb
mov
pop
sub
push
icebp
inc
ror
push
xchg
ja
mov
xchg
adc
call
pop
mov
fcoml
sahf
scas
aaa
mov
jns
imul
inc
rol
push
sahf
and
jbe
dec
aad
out
jae
adc
jne
xchg
mov
mov
dec
hlt
fidivl
push
jmp
fsts
or
jecxz
cmpl
inc
jg
lods
xor
xchg
sbb
xchg
stc
stos
add
adc
stos
imul
push
push
xchg
cmp
sahf
push
mov
popf
jle
jae
mov
jb
or
mov
ja
mov
clc
fadds
and
push
shlb
lock
aam
fstl
mov
fldt
rol
mov
sub
aad
inc
loopne
mov
mov
int
enter
and
dec
jl
out
aad
add
repnz
pop
mov
jnp
lahf
stc
and
pop
repz
popl
cmp
setp
test
jle
add
inc
mov
xor
adcb
jg
mov
xor
jle
mov
aas
fs
fucomi
mov
js
rorb
imulb
push
ljmp
jl
je
inc
sbb
fld
cmp
out
fs
jge
push
jno
shll
mov
insb
jecxz
lea
cwtl
adc
je
adc
lret
mov
cli
sub
dec
scas
push
jnp
xchg
out
push
push
lea
stos
pop
xchg
mov
jo
adc
ja,pt
push
cld
pop
lods
mov
subb
sbb
icebp
add
add
push
iret
jecxz
pop
lcall
lods
xor
lahf
sbb
dec
fcomps
cmp
data16
fiaddl
mov
jecxz
jnp
out
push
inc
mov
adc
cmp
shrd
xchg
dec
aaa
add
sti
std
arpl
fidivl
movsb
cmpsl
int
mov
sub
loop
push
call
push
jo
rorl
or
dec
and
add
add
clc
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
jmp
pop
stos
sbb
gs
push
lds
adc
bound
bound
stos
insl
and
dec
adc
fs
je
cltd
dec
cmpsb
inc
cmp
ja
mov
mov
mov
adc
ss
sub
rorl
push
in
pop
rclb
pushf
and
pop
cmpsl
out
out
sbb
lret
mov
mov
mov
sub
popf
sarb
mov
loop
pushf
and
push
push
popl
mov
sarb
in
push
inc
jne
sbb
jmp
xchg
lods
and
mov
int3
cmp
std
push
fmuls
sub
in
pavgb
out
out
rorb
push
fisubrs
jle
imul
ret
test
jae
push
into
push
add
cmp
or
inc
fildll
mov
push
mov
scas
stc
rcrb
test
add
jbe
cs
into
xchg
les
arpl
or
xor
mov
xchg
mov
and
enter
insl
aas
repnz
test
mov
movsb
int
lcall
lea
mov
adc
in
ljmp
adc
pop
rcll
mov
and
adc
xor
repnz
cmpsb
pop
xor
imul
add
in
jnp
out
mov
into
jg
sub
push
or
sbb
xor
int3
data16
cld
fcompl
outsb
cmp
lcall
sti
testb
rol
btr
rolb
scas
sub
mov
rcrb
pop
jp
jne
nop
or
jnp
dec
shll
pop
rcll
mov
rclb
xor
mov
push
mov
ffreep
push
jmp
bswap
aad
je
xchg
imul
inc
jnp
dec
js
dec
cmc
sbb
push
ffree
push
mov
xchg
sti
sbb
fs
repz
imul
ficoml
les
adc
rcrb
dec
pusha
inc
jb
ret
or
fldl
out
aad
pop
popa
cli
adc
movl
pop
pop
add
cltd
test
in
cli
mov
sahf
and
test
cltd
add
push
adc
mov
dec
mov
mov
mov
mov
cs
mov
add
sahf
pop
loope
inc
ret
lahf
mov
in
xor
mov
fidivrs
lahf
insl
fs
xchg
cli
cmp
sbb
sub
and
bound
mov
mov
jbe
lahf
push
sbb
xchg
in
xchg
cmp
xchg
add
arpl
fwait
mov
push
jne
out
mov
adc
sti
push
sub
mov
xchg
aas
push
push
sub
ficoml
fdivr
or
jb
js
sbb
push
jno
shlb
cmp
aaa
je
fildll
xchg
cmp
lcall
stc
out
je
push
movb
xor
sbb
jnp
mov
das
ljmp
bound
movb
cwtl
lret
cld
mov
add
or
mov
mov
cmp
xchg
inc
and
dec
sbb
int
xlat
add
sub
inc
int
pop
inc
int3
lret
out
repnz
push
jmp
xchg
sbb
pop
mov
cmp
cmp
cli
pusha
inc
jns
cli
cmpb
xchg
imul
cmp
clc
push
shlb
lds
mov
leave
cmpsl
imul
jg
out
popf
fistpll
pop
mov
mov
lods
xchg
add
cmpsl
cmp
sbb
sub
sbb
sbb
mov
and
mov
push
add
mov
sbb
mov
cmp
call
pop
popf
bound
add
movb
pop
fisubrl
mov
testb
sub
jp
into
les
lods
imul
inc
mov
xchg
rcrl
outsb
rcrl
iret
pop
dec
lahf
jmp
mull
frstor
cmp
cmpb
xor
pushf
ljmp
xlat
in
jge
adc
sbb
aas
stc
repnz
shrb
jbe
pop
cmp
mov
mov
in
inc
sarb
mov
jle
xchg
inc
addr16
lea
ret
test
fildll
mov
jge
ficoml
sbb
leave
xchg
dec
stos
notrack
mov
in
mov
xchg
fildll
jae
push
xor
shll
rcrl
and
jno
pop
cmp
addr16
inc
xor
pop
xlat
aad
mov
pop
out
dec
inc
loop
push
fs
fisubs
sub
mov
xchg
add
xchg
lcall
jp
cmp
in
jmp
sti
repz
loope
rcrl
popa
push
fcompl
add
adc
jnp
filds
inc
mov
call
dec
mov
loopne
mov
mov
es
mov
ja
mov
call
mov
xchg
cmp
lahf
cmp
cmpb
loopne
daa
add
push
mov
mov
in
xchg
xchg
iret
movsb
popf
add
cwtl
sbb
mov
fwait
mov
mov
dec
jns
push
fmul
incl
cmpb
inc
mov
xchg
add
in
xor
adc
jo
pop
test
sbb
jnp
cmp
in
cltd
add
data16
cmp
push
jmp
scas
sub
inc
int3
xchg
cltd
push
outsl
fwait
ret
jb
in
iret
out
jp,pt
out
xchg
push
pusha
inc
cmp
out
jge
push
popa
pop
nop
ja
stos
in
lods
test
jns
cmp
sub
shll
pop
stc
xchg
shll
outsl
mov
test
call
mov
int3
push
std
mov
xor
dec
sahf
lods
mov
faddl
mov
ret
push
insb
scas
mov
add
test
movl
shlb
sub
push
pushl
sbb
cltd
mov
jo
jecxz
add
sti
int
and
mov
stos
inc
and
pop
and
xchg
fwait
test
lods
pop
pop
and
push
mov
and
je
fdivl
fsts
mov
xlat
dec
jle
cwtl
and
in
fldt
rclb
xor
push
test
clc
shlb
adc
mov
sbb
fstpl
out
jecxz
dec
xlat
test
dec
cmp
cltd
daa
jae
in
in
push
test
cwtl
jge
mov
subb
jecxz
mul
xor
movb
mov
mov
pop
mov
sbb
ja
iret
insl
cmp
stos
sub
push
setnp
aaa
sbb
or
pusha
jne
daa
cli
loop
xchg
and
loope
adcl
cmpw
fildll
sub
jbe
imul
scas
shrb
xchg
xchg
mov
cli
aas
popf
mov
fiadds
mov
bound
or
push
pop
mov
xchg
xchg
movsl
lods
testb
jmp
fistps
mov
inc
test
repz
lock
sub
arpl
fisttps
pop
pop
xchg
pop
or
js
pop
adcb
sarl
xor
lahf
sub
out
test
push
sbb
mov
mov
and
dec
fnstenv
or
icebp
sahf
add
sub
andl
jle
test
dec
jb
das
test
sti
jle
out
adc
push
mov
inc
aas
popa
add
lret
cmp
add
nop
orb
ret
pop
push
push
sahf
jb
cltd
inc
or
adc
mov
sbb
xor
xchg
push
addl
addr16
cmpsb
cmp
adc
xor
push
or
pop
xchg
insb
lds
out
int3
dec
cmp
daa
bound
mov
daa
cld
sbb
out
in
fs
mov
sub
pusha
addb
lret
das
inc
cmpsb
lock
dec
movsl
cmc
leave
das
mov
popa
loopne
xor
addr16
jg
fsubrs
mov
je
cmp
lods
in
and
adc
mov
das
cmp
popf
pop
std
sbbl
leave
xchg
xchg
out
mov
fisttpll
bound
mov
mov
ljmp
jnp
repnz
ljmp
in
jmp
fisubrl
call
sub
push
sub
ret
xor
nop
adc
xchg
sti
sub
sbb
xchg
push
pop
dec
loop
mov
mov
std
lock
orl
addr16
imul
push
dec
inc
fcoml
outsl
loopne
adc
imul
mov
test
pop
push
sub
mov
fldl
clc
lea
into
pushf
pop
or
xor
adc
ret
data16
adc
cmc
sbb
fcomps
mov
adc
inc
cmpsl
mov
inc
or
jbe
aam
enter
push
xchg
or
cli
sub
inc
mov
imul
cltd
enter
ja
repnz
mov
xor
mov
lods
nop
pop
mov
dec
rcrl
clc
adc
aam
jmp
xor
mov
ljmp
sahf
test
lret
sub
out
mov
or
jmp
lret
outsb
mov
ja
mov
aaa
iret
sbbl
decl
mov
xlat
jb
cs
push
mov
add
sub
mov
cwtl
add
inc
enter
sub
divl
ss
or
sub
repz
shl
lock
stc
lock
cmpsl
repnz
test
inc
or
test
cmp
xor
add
mov
xor
dec
std
xor
cmp
jg
out
lods
fcoms
push
fisubrs
xchg
mov
xor
fnstsw
dec
xchg
arpl
lahf
mov
push
lods
pop
out
mov
push
ja
repnz
icebp
xchg
lea
inc
xchg
xor
dec
pushf
mov
shrl
aad
dec
jnp
loopne
gs
aam
cli
rcrl
dec
and
lock
stos
adc
dec
xor
sbb
jecxz
sbb
insl
mov
cmp
sbb
fwait
cwtl
aas
add
cwtl
test
add
les
enter
add
rcrl
aad
mov
xchg
dec
pop
ljmp
dec
pop
stos
pop
push
movsb
ds
xchg
sub
das
add
and
daa
mov
xchg
jno
sbb
je
cmp
mov
pop
jmp
xor
daa
out
loop
aam
scas
out
xor
dec
xor
or
mov
push
orl
out
ret
adc
jno
mov
movsb
inc
dec
sbb
mov
or
mov
pusha
and
cmp
cmp
xorl
enter
in
mov
loopne
mov
int
push
jl
pop
hlt
notl
icebp
xor
mov
mov
test
jo
aam
int3
ds
xorb
outsb
jne
cmp
js
or
jne
std
xor
jmp
mov
fidivl
cmpsl
negb
inc
arpl
jbe
testb
into
sbb
jmp
and
sub
dec
dec
inc
jbe
jnp
lods
in
pop
and
fcmovnbe
inc
mov
mov
jecxz
and
test
pop
ret
mov
mov
mov
sbb
jo
cmp
cmp
or
lock
inc
mov
mov
data16
xor
mov
in
jns
mov
xchg
icebp
add
dec
out
xor
or
add
fnstsw
sbb
jge
fstpt
call
add
xchg
mov
cmp
adc
inc
cmp
mov
mov
lock
add
pusha
dec
pushf
add
cmp
or
lock
pop
int3
jp
addl
mov
sahf
gs
or
gs
add
lods
pop
jg
or
xor
mov
inc
lods
insb
in
pushf
xchg
movsl
add
out
leave
loop
cmp
add
mov
dec
push
pop
movsl
inc
adc
das
loopne
cmpb
addr16
fldcw
xor
fisttpll
xchg
sub
in
xchg
out
dec
scas
jae
les
xor
jbe
lcall
mov
lea
sbb
mov
orb
or
sahf
mov
xchg
jb
movsl
jo
data16
sarb
adc
xor
pop
jle
sarl
dec
push
icebp
pop
stos
add
pop
cmp
test
ja
mov
es
push
cli
cmpsl
mov
xor
lods
jb
pop
or
loope
xor
fisubrs
jg
jp
pop
fcoml
out
aaa
stos
push
or
stos
mov
pop
mov
push
lds
dec
lock
or
sbb
sbb
ret
in
adc
movl
dec
pop
sar
pop
push
call
jge
inc
mov
je
push
mov
push
paddd
inc
push
andb
cltd
xchg
xchg
push
push
mov
mov
push
out
dec
mov
lcall
mov
push
push
xor
outsl
inc
stos
mov
adc
nop
xchg
in
iret
jns
cmc
mov
gs
push
fsubrl
insb
loope
xchg
data16
movsb
inc
adc
lods
mov
and
lret
inc
test
lret
cwtd
call
or
push
push
inc
mov
jae
lock
push
xchg
in
mov
dec
stc
fnsave
and
sbb
repnz
jmp
jle
mov
mov
fs
cmpsl
cld
cli
mov
rcrb
dec
stos
aaa
shll
aad
adc
push
pop
mov
sbbb
lret
sub
out
jb
adc
pop
xor
adc
stc
test
dec
insl
fldenv
popa
sub
push
dec
out
jl
loope
xchg
fimuls
xchg
cld
insl
inc
test
into
dec
mov
mov
inc
fidivs
cmpsb
and
mov
cmc
inc
loop
icebp
addl
xchg
inc
xchg
mov
jnp
cmp
cmpsl
call
xlat
sbbb
mov
call
shrl
xor
jg
in
mov
outsl
xor
mov
mov
xchg
lods
popa
rclb
mov
sbb
loopne
inc
and
pop
shll
mov
clc
push
mov
mov
movsb
inc
push
ret
subb
xor
mov
push
push
pop
cmp
popl
pop
mov
and
add
out
clc
sub
sbb
adc
xor
dec
ficoms
mov
sti
xor
outsb
mov
push
or
dec
std
aas
movsb
movsb
push
sub
cmp
fldenv
adc
aad
shlb
sar
and
arpl
lret
lahf
ja
jbe
rorb
in
mov
dec
pop
pop
mov
xor
inc
loope
mov
adc
sub
pop
mov
cwtl
or
out
aam
mov
loope
pop
mov
imul
mov
pop
or
call
jae
sbb
mov
fistps
in
add
adc
ljmp
and
push
addl
mulb
arpl
lock
or
cmp
add
xlat
call
mov
sbb
adc
sbb
and
cvtpi2ps
loope
mov
sbb
cmp
fidivs
std
mul
jge
dec
lods
sti
mov
mov
push
cmp
or
adc
cmp
mov
sbb
shrl
shl
push
mov
hlt
gs
mov
push
sub
jbe
mull
pop
mov
xor
sbbl
inc
bound
int
adc
pop
pop
push
pop
pop
jecxz
inc
mov
dec
cmp
jno
push
xor
add
jnp
push
test
repnz
repnz
es
xor
cmp
es
xchg
out
out
stc
or
test
push
mov
negb
adc
and
stc
in
mov
mov
sbb
mov
mov
inc
movsl
fs
mov
arpl
mov
lea
iret
lods
push
js
movl
mov
jno
and
scas
leave
cmp
xor
popa
scas
push
push
and
outsb
xor
xchg
push
dec
icebp
arpl
mov
loopne
and
pop
cld
inc
xchg
sbbb
xor
sub
ja
jns
dec
dec
cmp
roll
test
test
push
out
out
shl
repz
fadds
daa
and
xchg
mov
inc
les
pusha
cmp
sub
lock
adc
in
rorb
mov
xchg
cmp
push
testb
xchg
js
add
sub
mov
ret
cld
or
pop
jne
int
sbb
and
push
pop
add
xchg
movsb
out
nop
xor
js
fucomip
mov
inc
das
xchg
test
std
dec
test
roll
test
aad
xchg
cmpb
aad
je
int3
mov
jp
mov
pushf
and
xlat
pop
add
mov
pop
mov
xor
in
push
sub
ss
arpl
call
xor
outsb
sub
mov
rorb
pop
lcall
gs
lea
and
test
fcoms
inc
mov
nop
es
cmc
out
call
loopne
push
shrl
into
sub
xor
pop
lret
inc
dec
adc
xlat
mov
mov
iret
push
fistl
sbb
stc
lods
sub
xchg
mov
aaa
cmp
cld
sti
movsl
push
jo
lds
cltd
mov
mov
std
shl
mov
outsl
dec
jg
cwtl
mov
push
xchg
push
fcompl
cmp
aam
push
data16
insl
out
mov
push
mov
and
fisubl
xchg
xchg
pop
push
dec
mull
xchg
pop
fisubrs
fwait
jo
fcmovnbe
push
stos
pushl
inc
xchg
pop
mov
leave
jns
cld
scas
shll
sar
in
or
in
adc
ret
lods
jne
and
or
mov
xchg
xchg
push
imul
mov
pusha
leave
xchg
mov
push
cld
test
inc
imul
sbb
nop
enter
cld
inc
sti
int
addr16
jbe
fdivl
call
and
add
scas
sti
jae
or
jg
mov
out
mov
sbb
fists
andl
jae
pop
iret
ja
xor
push
je
or
mov
movsl
jb
test
push
jno
mov
jb
jb
fwait
push
pusha
adc
ja
dec
lcall
mov
fidivrl
outsl
and
add
mov
pop
cmp
cmp
xchg
fists
bound
xchg
jecxz
shll
out
shl
arpl
cld
jg
inc
pop
mov
in
push
mov
imul
nop
scas
add
outsl
cld
in
dec
cmp
cmovl
sbb
pusha
in
and
ret
ja
in
jmp
loope
inc
ret
pop
dec
stos
nop
aam
cmp
dec
dec
xorb
add
dec
lret
popf
lds
cmp
sub
mov
loope
xchg
sti
cmp
je
sbb
call
push
fstpt
test
add
lret
int3
mov
mov
fsubrs
test
arpl
sub
ljmp
popa
les
mov
inc
xchg
mov
clc
pop
dec
pop
mov
bound
pop
insw
and
insl
push
outsb
adc
dec
data16
and
andl
scas
int3
stos
popf
dec
icebp
or
scas
or
ss
data16
push
adc
push
jno
cmp
lods
pushf
mov
in
sbbb
jne
xchg
sub
cli
pop
loop
add
out
cli
cmp
mov
fwait
aam
rolb
push
xchg
outsb
lret
ss
outsl
test
movnti
and
xchg
pop
cmc
cltd
pop
sub
add
cwtl
in
cmp
jb
sbb
out
pop
sub
inc
clc
aas
xorb
xchg
add
cli
mov
jecxz
add
sub
jo
mov
xlat
aad
lods
les
pop
push
out
pop
cmp
je
mov
adc
cmp
add
in
sub
scas
ficompl
sahf
add
mov
mov
sahf
mov
icebp
lcall
clc
mov
push
orl
add
stos
das
xchg
mov
int3
loopne
sub
push
hlt
inc
mov
pushf
enter
push
jno
fdivl
push
dec
aaa
cmpsl
xlat
inc
and
dec
inc
subl
push
ljmp
sbb
cmp
cli
adc
dec
out
dec
lea
jp
daa
sbb
in
loope
mov
xchg
loope
in
repz
dec
sbb
lods
mov
scas
scas
popf
cmc
adc
cmp
pop
xor
lret
mov
test
jne
or
in
rorb
xchg
pushf
dec
jl
dec
mov
mov
shll
mov
sbb
mov
scas
hlt
js
or
or
jp
jns
test
xor
mov
jmp
inc
rorl
sbb
ds
and
fstpt
divl
mov
lret
xchg
mov
leave
mov
sub
fistpll
add
xor
jnp
pop
test
xchg
aaa
repnz
pop
mov
jge
js
loopne
xchg
in
jmp
popf
add
sbb
dec
mov
adc
mov
inc
shll
jmp
sbb
sbb
stc
add
inc
stos
sub
push
bound
out
sub
mov
or
stos
scas
ret
cmp
sbb
mov
lds
push
out
test
mov
das
pop
add
xor
cmp
inc
inc
popa
stos
dec
sbb
cmpsb
jge
xor
insb
out
hlt
popf
int
cmp
iret
daa
sbb
mov
pop
inc
scas
fwait
cmp
stos
dec
sbb
pop
mov
xchg
stos
lods
cmp
leave
cmp
pop
pop
jp
popf
inc
iret
pop
sbb
jae
add
lock
mov
sub
test
repnz
adc
xchg
inc
data16
xchg
shlb
cmp
test
sub
sar
ja
into
ss
xchg
mov
jns
xor
ret
jns
push
icebp
fs
jle
push
add
sub
sub
orl
jnp
pop
xchg
pop
sbb
xor
mov
scas
test
cmpsb
lods
push
add
ret
ret
mov
xlat
or
mov
subl
int3
fsubrl
jl
sbb
stc
mov
sbb
and
addr16
dec
xor
xor
fwait
gs
inc
gs
clc
jns
xor
jle
lcall
das
stc
sub
in
clc
adc
xor
pop
dec
call
adc
jmp
mov
stc
test
lcall
dec
cmp
sbb
sbb
or
push
xchg
pop
div
fisubrl
jmp
leave
clc
jo
addr16
aas
mov
inc
xor
pop
adc
jne
mov
scas
push
inc
sarl
test
enter
mov
pop
lret
mov
jle
shrl
ret
aaa
jbe
scas
dec
and
sub
or
es
cs
aam
aas
popa
adc
cmpsl
mov
add
nop
jmp
stos
data16
testb
mov
aas
jg
dec
xlat
pop
xor
mov
test
aam
movsb
xor
adc
lcall
mov
jge
inc
dec
sub
fcom
and
sub
add
fldt
mov
jg
inc
jecxz
fmuls
pop
adcb
xchg
imull
repz
hlt
jecxz
out
les
cmp
jmp
sbb
fwait
cmp
mov
cmpsl
push
sub
adc
push
daa
pop
ss
push
mov
push
stos
sbb
inc
adc
sti
xchg
or
gs
les
out
mov
iret
fistpll
xchg
cmp
cwtl
loope
mov
stos
mov
adc
cwtl
push
sar
jno
cld
add
into
adc
mov
fstpt
cmp
fmuls
mov
jne
cld
lcall
mov
ss
inc
ret
ss
pop
orl
dec
incl
mov
cwtl
push
in
repz
aas
mov
push
leave
lods
aam
ss
je
orb
xchg
stos
mov
sub
and
add
repnz
xorb
mov
adc
lods
fstpt
mov
in
cmp
dec
sub
fsubrl
cmc
jmp
sbb
movb
outsl
fbstp
incb
mov
mov
incl
out
sub
loope
out
test
pop
pushf
popf
sbb
jne
lds
ljmp
xor
dec
test
pop
sahf
call
fwait
pop
dec
jl
pop
push
dec
jge
push
lret
mov
or
cmpl
inc
popf
push
repnz
data16
aad
adc
push
mov
ret
loop
adc
xchg
aad
pop
mov
mov
and
in
xor
mov
dec
es
jecxz
pusha
inc
mov
mov
pop
cwtl
mov
popa
and
mov
ljmp
cld
or
das
adc
pop
shlb
leave
js
and
dec
add
in
xchg
leave
dec
jmp
mov
add
inc
push
xor
cmc
ffreep
jle
lock
iret
fs
negl
or
cwtl
decb
jno
xlat
jnp
pop
std
xor
enter
add
stc
pop
xchg
mov
mov
imul
sbb
roll
xchg
jno
dec
dec
inc
dec
js
and
orb
jp
xchg
jbe
dec
in
push
push
dec
inc
cmp
jecxz
xlat
adc
das
sub
rcl
xlat
ljmp
inc
sbb
mov
data16
shl
ret
fldl
rcrb
add
stos
jmp
mov
add
push
jb
movsb
dec
and
fmuls
mov
in
dec
inc
fiaddl
pop
cmp
jp
push
jns
inc
or
ret
insl
cmp
dec
lcall
rorb
sub
mov
sub
in
cmc
cltd
addr16
fwait
ss
or
pusha
repz
lcall
repnz
lcall
adc
push
push
xchg
inc
cltd
sbb
incl
jg
or
adc
xor
push
add
pusha
js
pop
and
test
mov
mov
stc
test
ficomps
push
movsb
xor
xchg
push
pop
js
adc
mov
fs
or
lcall
in
aas
lds
sbb
jae
pop
xor
mov
cmp
mov
adcl
fidivl
pop
dec
cmc
add
out
stos
adc
cli
cmc
mov
ret
mov
xchg
jns
fstpt
push
mov
dec
pop
mov
pop
push
mov
pop
mov
outsl
cmp
ljmp
int3
imul
les
mov
cmp
fst
mov
std
push
push
sub
test
and
mov
cmp
dec
insl
clc
test
xor
xchg
push
iret
sub
pop
js
insb
dec
enter
icebp
push
sub
and
add
loopne
or
mov
jno
and
inc
nop
jmp
cmpsb
inc
popf
ds
insb
mov
pop
dec
mov
cli
lret
and
nop
scas
push
pop
mov
or
loop
push
movsb
bound
nop
sub
xor
out
jmp
push
pop
jl
imul
out
ljmp
add
adc
fsubrs
mov
je
dec
jmp
maskmovq
push
mov
aaa
add
adc
test
fldcw
enter
mov
fdivrl
add
cmpsl
dec
pop
mov
inc
fwait
insb
xor
cmpsb
fiadds
dec
and
pop
xchg
cs
lea
int
adc
add
mov
xchg
xlat
or
xor
in
mov
or
flds
shll
fs
sub
cmp
xchg
push
pusha
lods
rclb
add
and
sbb
sub
xchg
mov
mov
lcall
mov
xchg
pop
xchg
scas
hlt
aaa
subb
dec
sti
add
xlat
icebp
aaa
xor
call
sbb
add
insb
rcll
loopne
inc
push
mov
pop
sbb
fcmovnb
cmc
sbb
insl
gs
rclb
xor
rol
call
mov
pop
dec
xlat
je
sub
fs
les
mov
xor
xchg
rcrb
jge
fsts
cs
mov
popa
add
shrl
enter
jle
mov
in
cmc
adc
movsl
aad
cmp
push
movl
jge
js
xor
xor
push
adcb
adc
es
or
test
jp
lcall
push
inc
pop
mov
pop
repz
sbb
jle
mov
mov
sti
mov
arpl
rcrl
dec
add
flds
repz
push
jp
xor
aad
sbb
int3
mov
or
push
jnp
sub
cmpsl
stc
sub
in
xchg
jno
or
call
pop
xchg
and
ss
pusha
cmp
jmp
cmpsb
out
imull
xchg
inc
cmp
sbb
out
pop
fucomp
scas
dec
add
sbb
pop
nop
jns
push
jl
loope
gs
cmp
movsl
jne
rol
int
arpl
divl
mulb
cltd
dec
push
mov
add
pop
xchg
cmp
pusha
cmp
cli
es
loopne
nop
adc
stc
or
xlat
loope
aas
or
inc
loope
xchg
and
mov
cli
add
adc
scas
fdivrs
xchg
repnz
arpl
mov
aam
sub
add
mov
shll
in
clc
sbb
scas
jb
into
lret
pop
iret
jge
int3
inc
pop
fstp
aas
cmp
dec
jb
push
jbe
sub
lret
inc
hlt
jns
push
push
ds
xchg
je
add
js
push
cmp
xchg
lcall
cmp
cmc
les
sbb
cs
inc
clc
fbld
adc
fisubrs
gs
outsb
cmp
cmp
int
fwait
je
movsb
icebp
jne
adc
push
mov
pop
out
into
fsubl
push
and
push
push
data16
lods
je
bound
add
repnz
mov
jge
aad
js
xor
neg
in
cmp
push
inc
jae
fists
cld
imul
pop
test
add
push
pop
xchg
sbb
sub
mov
cld
sar
hlt
mov
lods
mov
fwait
mov
movl
push
jmp
daa
scas
rclb
outsb
cli
mov
mov
jmp
fxam
inc
test
insl
lock
mov
sub
jp
mov
cmpsl
or
fistpl
push
arpl
cmp
or
out
xchg
mov
pushl
pop
adc
mov
pop
leave
cmp
fmull
push
out
dec
jne
lret
lcall
ljmp
js
push
and
jbe
dec
adc
ret
pop
ja
jle
rclb
sar
sbb
or
ficompl
inc
push
test
rolb
inc
call
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
inc
push
add
imul
cmp
mov
bound
pop
bound
shl
movsl
push
adc
sbb
dec
fistps
cwtl
sti
xchg
inc
push
or
push
pop
xchg
push
push
sub
pushf
xor
add
aaa
div
mov
pushl
dec
shr
popa
out
add
sarb
repz
pop
jb
sub
mov
and
mov
pop
out
in
pop
aad
inc
sub
sarb
pop
jp
insl
and
div
cmp
or
out
lods
int3
xchg
adc
push
stc
mov
inc
inc
jg
flds
cmp
and
dec
fcoms
cltd
jge
inc
sti
jnp
inc
sub
mov
mov
cmp
cmp
fisubrl
push
sbb
push
jmp
dec
lahf
cltd
fnstenv
into
sub
xchg
call
xchg
out
mov
cmp
jno
add
clc
repz
loopne
pop
insl
dec
addr16
lret
pop
fs
hlt
cli
rclb
sbb
adc
and
push
dec
ds
test
push
xchg
shll
push
pop
mov
out
sub
decl
cld
xor
sub
js
or
dec
in
pop
mov
or
aad
cli
mov
inc
inc
jo
outsb
add
or
xor
push
les
xchg
stc
loopne
xor
daa
aam
cmpb
lods
cltd
or
out
ss
aaa
inc
clc
cmp
sbb
adc
and
cld
push
pop
orl
and
cwtl
cmp
push
ss
jecxz
cmp
stos
xchg
push
pop
jae
sbb
loop
and
shll
outsl
nop
pop
loopne
jns
push
mov
popf
and
iret
cmc
subl
jnp
mov
inc
lret
das
int3
clc
clc
stos
pop
and
outsl
sti
sbb
sub
enter
jb
js
adc
rclb
inc
push
cltd
dec
and
icebp
jle
stos
sbb
xlat
push
adc
push
ret
loopne
cmc
mov
lock
or
ss
xchg
or
or
dec
sbb
pop
clc
ucomiss
mov
dec
out
movsl
aas
int
mov
roll
cmc
inc
icebp
jne
sub
inc
add
not
aaa
cmp
aad
xchg
sub
and
mov
or
inc
test
mov
mov
js
movb
xchg
or
inc
mov
out
fs
xchg
stc
mov
lahf
pop
or
stos
data16
sub
test
daa
lock
mov
xchg
fsts
and
adc
stos
push
fstps
xlat
cmp
lret
sbb
xor
fwait
pop
stos
loop
mov
fiadds
in
adcb
push
pop
rclb
dec
jae
xchg
mov
lahf
mov
pop
pop
mov
push
out
push
fnstsw
insb
xlat
push
push
call
mov
icebp
adc
cmpsl
push
mov
dec
push
or
cwtl
mov
push
sub
stc
test
test
repz
and
dec
sbb
and
or
mov
mov
inc
ljmp
xor
add
decb
clc
xor
dec
xchg
or
jg
popf
add
data16
jae
xchg
movsl
dec
mov
lds
push
out
or
icebp
popa
push
outsl
fsubrl
xchg
pusha
stos
adc
fnsave
mov
aam
add
cmc
inc
leave
dec
add
xchg
dec
lcall
mov
test
cltd
insl
pop
mov
pop
lds
cltd
add
or
pushf
and
sub
push
adc
sbb
adc
das
int3
mov
cmp
jmp
dec
mov
inc
mov
cmpsb
hlt
lret
call
inc
cmp
lods
pop
pop
aad
xchg
jp
xor
pushf
iret
jl
je
incb
cs
fsubs
rorl
xchg
xor
movups
push
push
dec
pop
or
cmp
ss
rorb
insl
lods
and
movsb
faddp
cmc
popa
icebp
in
ss
es
call
sub
jnp
iret
clc
mov
ret
aas
fcmovnu
jmp
pop
add
pop
dec
push
test
je
jle
xlat
bound
std
mov
outsb
shrl
xor
je
mov
push
imul
mov
les
iret
ret
fiaddl
add
and
sbb
push
jle
jae
leave
jne
mov
mov
fdivrs
mov
mov
sbb
test
mov
mov
sbb
mov
lods
clc
shl
jmp
push
std
daa
jg
cwtl
repnz
pop
inc
pop
sbb
loop
repz
sahf
xchg
pop
into
add
push
and
pop
btc
mov
lret
pop
sti
pop
js
push
js
addr16
sbb
nop
push
ret
idivl
sbb
aaa
shl
pushf
mov
push
push
daa
push
jle
mov
xchg
call
dec
lcall
adc
jecxz
inc
xor
mov
cwtl
ret
sbb
insb
testl
sar
dec
sub
fwait
inc
les
push
in
test
xchg
mov
xor
outsb
sub
sbbl
jb
leave
pop
in
pop
fldenv
nop
scas
lahf
mov
sbb
adc
jmp
fcomps
jecxz
fldl
decb
std
mov
jl
inc
xor
adcb
and
fldcw
or
mov
jo
push
and
cs
cmp
xor
out
loope
or
fs
pop
add
inc
adc
lock
adc
out
sbb
mov
in
pop
int
aad
daa
sbb
ret
sbb
sub
cwtl
jae
ljmp
repnz
sar
dec
leave
mov
mov
mov
pushf
loopne
lods
push
jnp
push
mov
push
inc
enter
pop
and
adc
lahf
popf
imul
add
add
mov
repz
outsl
rep
aam
jo
jo
mov
out
lret
popf
or
pop
sbb
push
sbb
and
cmp
sbb
dec
mov
add
mov
daa
push
clc
dec
lahf
mov
clc
jg
fstpl
out
loop
sbb
lock
cld
mov
pop
and
cmc
adc
stc
xchg
mov
ss
rcrl
into
repnz
fmull
dec
jae
dec
enter
inc
lret
mov
jp
movsl
mov
jae
bound
rolb
icebp
mov
push
and
push
inc
inc
push
jge
xchg
adc
cmp
pop
lret
pusha
pop
or
in
or
outsl
outsl
mov
dec
inc
ds
mov
inc
arpl
dec
insb
add
or
aaa
inc
mov
mov
push
mov
fstl
inc
call
fs
jns
mov
jecxz
adc
daa
mov
adc
xchg
lahf
jnp
repz
repz
cli
mov
insb
adc
inc
push
sbb
adc
aam
out
cmp
sub
jnp
pop
cs
dec
loopne
in
dec
lods
pop
inc
pop
sti
xor
mov
stos
mov
pop
ffreep
push
jno
or
lret
int3
jbe
xchg
mov
bound
pop
je
sub
xor
loopne
movsl
cmpsb
ror
xor
xor
sub
je
mov
cs
ret
test
push
sub
stos
adc
push
movsb
sbb
cmp
call
in
std
xchg
xor
test
sub
xchg
or
imul
cltd
jl
int
xlat
imul
out
mov
arpl
jmp
push
cmp
mov
out
pusha
test
mov
fldl
scas
icebp
xchg
iret
gs
mov
jg
test
cli
and
xor
test
pop
cmp
push
sub
adc
mov
imul
inc
mov
and
or
dec
xor
mov
dec
ret
mov
pusha
or
xor
pop
jbe
int3
and
fsts
jne
femms
jo
xchg
mov
jnp
iret
pop
dec
mov
lds
dec
pop
jmp
aas
loop
pop
cwtl
push
aam
jae
cwtl
les
jl
jp
sahf
xchg
add
sbb
sub
nop
or
sbbl
xor
add
xchg
mov
insl
adc
adcb
xor
out
inc
ja
mov
insl
out
out
test
mov
xor
out
and
stc
and
adc
xor
xor
sbbl
sbb
sub
dec
lds
or
push
mov
fiadds
lcall
push
sub
push
insl
outsb
cmc
dec
jge
jns
push
mov
addr16
xor
jmp
mov
je
inc
lcall
push
mov
mov
xchg
pop
pop
xchg
fidivs
xor
ret
stc
shrl
and
cmp
cmc
jg
xor
jg
mov
lock
insl
lret
push
shr
clc
and
insb
push
in
loopne
sub
inc
and
push
inc
add
mov
mov
push
inc
cli
mov
pop
mov
jns
xor
push
mov
aad
out
dec
call
scas
fstpt
icebp
fcoml
lods
pop
lret
and
push
push
cli
data16
pushf
nop
inc
mov
rorl
mov
stc
clc
ja
jnp
imul
pop
scas
inc
out
pop
mov
xor
je
ret
jp
fisttpl
xchg
mov
jl
jnp
inc
sbb
loope
cmpsb
shrb
inc
pop
call
push
xor
jns
push
push
sub
add
or
lret
test
xchg
mov
adc
mov
repnz
inc
inc
and
add
inc
cmp
mov
insb
pusha
out
lret
jmp
pop
dec
xchg
mov
and
int
pushf
mov
mov
sbb
cmc
sub
in
iret
push
xor
push
in
pop
adc
fdiv
ss
xrelease
or
push
pop
adc
dec
inc
mov
iret
adc
fistpll
test
inc
lahf
sub
jl
mov
pop
mov
sub
scas
jmp
shrb
rcll
shrl
jmp
out
js
js
nop
das
push
xchg
js
cmp
cmpsl
sbb
out
jbe
mov
test
dec
lock
push
pushf
inc
xlat
stc
fisubrl
shll
cmp
sahf
jns
mov
jmp
es
inc
icebp
push
pushf
jne
or
cmc
jge
inc
cmp
lock
fcmovne
nop
shl
into
lahf
out
inc
inc
in
mov
paddsb
jns
mov
out
sarl
pop
jne
jge
iret
jecxz
in
add
repnz
cmp
sub
push
inc
pop
sub
add
jnp
adc
or
cwtl
mov
enter
lock
out
xor
es
aam
lock
cmpsl
lods
push
cmp
sbb
in
jle
jl
pop
shrb
repnz
pop
inc
xchg
lds
fst
insb
clc
icebp
in
call
cs
xor
xlat
lods
cld
jge
mov
mov
inc
cmp
jae
popf
and
adc
and
sub
mov
sahf
ror
push
cmc
inc
movsb
es
in
mov
pusha
mov
ret
xchg
jnp
loop
fs
xchg
pop
jns
push
dec
or
inc
pop
gs
xchg
loop
enter
aad
xor
jecxz
mov
inc
popa
mov
aaa
sar
mov
in
sbb
jb
and
jnp
les
jg
outsl
in
pop
dec
add
mov
push
dec
enter
ljmp
in
push
jmp
cmp
push
ja
xchg
pop
xchg
jg
loop
loop
cmp
dec
aas
in
aam
insb
mov
adc
rcrl
out
jg
pop
lock
and
jmp
mov
test
imul
jae
push
mov
cltd
push
mov
addr16
jnp
push
stos
cmp
mov
and
xor
sti
xor
stc
inc
imul
push
test
and
icebp
sub
notl
out
icebp
test
or
std
in
in
cmp
cmp
stc
imul
iret
push
movsb
jmp
das
mov
xorl
pop
loop
loope
dec
sbb
dec
push
jo
mov
cmp
repz
xchg
rcll
rorb
ret
loop
imulb
popa
mov
iret
dec
cltd
js
cmc
aam
or
in
shl
and
incl
hlt
loopne
mov
mov
fstpl
pop
sub
push
sub
pop
call
pop
add
dec
repz
jg
lret
fstpt
xchg
jmp
push
xor
js
in
lcall
sub
xchg
cmp
lahf
sbbl
xchg
or
daa
sbb
lods
cmp
adc
xor
scas
sub
daa
es
xor
lcall
mov
or
dec
push
xlat
data16
rorb
test
xchg
pop
push
repnz
out
clc
or
imulb
out
nop
gs
popa
pop
cltd
xor
jb
pop
lcall
inc
aad
hlt
fwait
inc
and
aaa
addb
repnz
push
mov
adc
test
bound
xchg
hlt
mov
mov
test
jne
jge
jno
outsl
jmp
dec
pop
push
pop
fbld
loopne
movsl
add
ss
mov
jne
jmp
xchg
and
scas
out
lods
mov
sub
mov
negl
imul
fsubrs
ret
les
test
xor
xorl
mov
mov
dec
jle
sbb
or
lahf
fwait
push
add
cwtl
test
jo
insb
into
sbb
and
repz
and
mov
iret
shrb
fcoml
mul
mov
movsl
lock
push
imul
xchg
out
test
ret
gs
push
aas
mov
adc
cmp
push
subb
jne
ret
je
fildl
xchg
xor
cmp
sub
fdivrl
test
subb
loopne
mov
xor
js
and
faddl
shrb
push
xchg
xchg
mov
lods
inc
cwtl
mov
pop
xor
pushf
dec
mov
mov
push
adc
ds
scas
orl
jns
push
scas
cli
lret
xor
mov
fcmovnbe
add
xchg
xlat
mov
imul
pop
sbb
addr16
xchg
cmp
adc
fiadds
lret
pop
es
mov
andl
xchg
cmp
adcb
inc
imulb
lret
cmc
int3
lods
cwtl
fistpl
in
movsb
aam
test
fstp
add
jne
jle
icebp
dec
jg
and
sbb
fs
data16
jae
out
pop
roll
cmp
pop
addb
dec
repnz
xor
bound
xchg
ficompl
sub
test
lahf
fwait
jns
cli
cmc
out
or
push
jnp
lea
mov
mov
ja
cli
push
imul
xchg
int
lea
sub
cli
adc
xchg
dec
inc
scas
push
push
push
iret
push
je
mov
arpl
push
shll
iret
dec
jae
stc
movsb
minps
lods
mov
icebp
scas
lret
add
rolb
leave
or
mov
or
mov
imul
push
div
mov
mov
xor
mov
aas
push
mov
into
xchg
aas
xchg
xor
mov
outsl
pop
cmp
mov
shl
xor
ret
jmp
jge
jo
mov
xchg
sub
rcrl
mov
std
add
shlb
in
sub
loopne
inc
lds
push
pop
pop
dec
arpl
cmp
ss
insb
fnstenv
ja
fmul
mov
jno
repz
mov
push
xor
mov
xchg
movsb
dec
stos
or
mov
ret
push
mov
pop
popf
push
and
mov
or
inc
cmc
push
popa
sahf
testl
cltd
sysenter
scas
inc
lock
xor
xor
mov
sub
loope
add
dec
and
push
pop
divl
addl
leave
sub
das
ror
xor
mov
and
inc
cwtl
stos
jnp
xchg
imul
xor
mov
dec
and
adc
aaa
mov
lcall
fldcw
mov
ret
es
inc
jg
aas
sub
iret
sbb
lock
repnz
inc
cwtl
adc
popf
dec
aas
adc
cmp
xlat
sub
jo
cmovno
xchg
add
push
test
xor
add
mov
hlt
es
scas
jle
xchg
mov
aam
bound
fucomi
cwtl
out
daa
int
rorl
pop
fxch
shlb
sub
ja
out
gs
cld
decb
push
push
push
inc
sub
test
add
insl
addr16
fcmovnb
inc
ret
mov
sbb
out
push
lret
cmpsb
shl
dec
cld
shrb
mov
lods
fwait
pop
popf
clc
out
out
jne
jp
dec
aas
repnz
and
fisubrl
pop
add
loope
inc
mov
pop
push
movq
ret
aaa
xchg
xor
mov
mov
push
push
pop
lock
and
push
and
lahf
nop
push
adc
imul
das
clc
xor
xorl
pop
sub
sahf
mov
mov
push
jb
sub
xchg
pop
lds
adc
jns
paddusb
add
movsb
sti
mov
and
xor
mov
or
movsb
or
mov
enter
movsl
xor
lcall
fwait
decb
dec
fwait
xchg
xchg
mov
xor
mov
pop
inc
nop
and
lock
sbb
montmul
cmpsb
inc
insl
addr16
xchg
out
mov
pop
adcb
jge
ja
lret
cs
in
scas
jge
lock
sahf
xor
lods
lea
xor
sbb
push
pcmpeqw
sbb
pop
addr16
pop
sbb
lret
cmp
fwait
es
mov
iret
lret
stc
cltd
sbb
and
mov
aas
andb
jae
mov
push
test
loop
cltd
xchg
test
adc
rcrl
test
call
inc
sub
rorl
push
test
dec
sbb
arpl
fadd
aad
pop
pop
insb
loopne
out
es
inc
jo
inc
in
mov
sub
push
and
hlt
and
int3
sub
mov
test
imul
sbb
cltd
dec
vminsd
insl
dec
adc
pop
ja
fsubl
fwait
pop
aad
jno
pop
aam
dec
es
inc
sbb
and
lea
mov
dec
and
push
push
scas
and
mov
push
sbb
inc
inc
fldt
rcrl
pop
sub
inc
cmp
xchg
mov
or
pop
push
in
mov
inc
add
mov
sbb
es
dec
jb
es
or
rol
mov
mov
test
and
pushf
pop
xchg
mov
rcll
xchg
xor
inc
cmpsb
xchg
push
out
jb
insb
push
mov
into
sub
aad
add
test
bound
inc
js
xor
leave
in
sub
mov
gs
rol
inc
mov
sbb
dec
test
jno
lret
pop
dec
outsl
push
sbb
pusha
mov
mov
lahf
xchg
mov
andb
into
es
and
add
dec
scas
dec
movsl
add
movsl
stos
sbb
add
cmc
xchg
es
popf
and
push
das
pop
decl
xchg
sub
shlb
add
jmp
cmpsb
xchg
mov
ret
add
mov
or
fndisi(8087
fs
mov
jns
adc
jle
xchg
sub
mov
mov
test
xor
pop
test
pop
data16
lds
xor
jne
inc
jg
xchg
jae
mov
mov
xor
add
cmp
ja
repz
lock
or
inc
sbb
sahf
loop
xor
xchg
sub
add
ss
popa
movsb
sbb
or
jno
xchg
adc
pop
jns
sbb
cld
or
lahf
testb
mov
dec
test
xchg
dec
daa
cmp
stc
pop
add
xchg
mov
pop
clc
leave
mov
sub
jge
add
rolb
xchg
jecxz
int
pop
jmp
sub
mulb
xchg
call
shrb
xchg
pushf
dec
sti
das
cmpsl
or
iret
and
leave
pop
test
stc
dec
sbb
cmp
jmp
loope
sbb
pop
aad
pop
inc
push
push
add
mov
pop
es
push
subl
cmp
lcall
push
das
stos
xchg
mov
mov
hlt
xor
outsl
add
jecxz
sbb
shll
and
mov
inc
sbb
stos
mov
xor
and
lcall
cmp
add
ret
cs
push
lret
push
xor
cmc
mov
xchg
out
dec
sbb
xchg
dec
xor
aad
addr16
add
sub
imul
je
pop
xor
inc
cltd
movsl
mov
mov
lods
cltd
mov
je
pop
add
xor
arpl
jns
imul
add
inc
aaa
mov
pop
add
push
sar
inc
inc
divl
add
push
daa
xchg
pop
push
add
dec
sbb
push
xchg
iret
dec
sbb
imul
sub
addr16
out
push
push
stos
jae
rolb
imul
fwait
lock
fidivl
sbb
fistpl
inc
jl
icebp
push
lods
push
cmp
icebp
cwtl
out
cmp
mov
loop
movsl
adc
fnstsw
xchg
popa
sbb
sbb
jns
test
pop
mov
adc
sahf
push
pop
jns
lret
jns
add
lods
pop
or
ds
dec
loop
xor
inc
hlt
lret
into
push
cld
cmp
jmp
test
add
push
scas
fsubr
aam
pusha
mov
adc
outsb
stos
cmp
dec
jmp
into
movsb
pop
cmp
sbb
cmp
jns
cmp
lea
pop
cmc
sub
mov
cmp
loopne
cs
adc
adc
scas
aaa
mov
shlb
and
sub
mov
and
and
and
data16
js
ret
dec
adc
push
xor
mulb
pop
das
loopne
xor
scas
jg
inc
sarb
jl
mov
xchg
add
ss
mov
je
sti
dec
inc
or
mov
popa
ljmp
rcrb
jl
pop
arpl
iret
xor
xor
sti
sub
and
out
loopne
loope
jp
jb
or
adc
sbb
adc
in
mov
xor
pop
bound
cmp
cmpsl
mov
adc
pop
inc
mov
int3
lea
shl
jae
adc
lahf
xor
mov
pop
pop
in
sub
jg
push
lea
loopne
lea
adc
adc
clc
filds
ucomiss
xor
mov
pop
mov
rcrb
jns
in
insb
mov
dec
aam
les
push
repz
pop
xlat
in
cltd
fdivrs
add
xchg
cmp
dec
push
loope
roll
rcl
rorb
in
in
and
shll
xchg
stc
inc
xor
inc
xlat
jae
add
fcomps
into
or
cmp
fidivrs
and
jge
lods
imul
pop
sub
lea
push
mov
inc
in
div
stos
jo
mov
jmp
lcall
jo
dec
sbb
jg
mov
xchg
mov
ret
xchg
outsb
or
iret
jne
popf
xchg
mov
jge
jo
inc
arpl
in
lea
movsl
scas
dec
cs
pop
jno
mov
roll
push
dec
push
fmull
test
or
bound
cmc
push
xchg
mov
out
adc
int3
cmc
or
lret
stos
or
in
ret
cmp
hlt
pop
aaa
in
sbb
lret
sahf
popf
mov
cmp
mov
mov
adc
pop
mov
daa
pop
pusha
int
out
std
test
mov
frstor
add
xchg
xchg
mov
mov
movsl
cld
push
fildl
pop
inc
outsl
xor
insl
ret
xor
xor
lret
pop
pushf
adc
das
or
sbb
dec
xor
test
clc
fadd
sub
filds
mov
ss
sahf
rcr
fildl
pop
shr
scas
pop
insl
insl
push
xchg
pop
mov
dec
pop
dec
add
test
stos
icebp
inc
xchg
jmp
lods
sub
push
fsubs
orb
imul
or
sbb
or
xchg
xcrypt-cbc
cmpsl
push
push
popa
inc
pop
add
xchg
int
std
pop
bswap
orl
repz
lahf
outsl
inc
test
xchg
js
out
pop
ja
out
sti
xchg
hlt
cwtl
inc
inc
sbb
xchg
inc
dec
arpl
dec
outsl
jmp
dec
imul
sahf
outsl
insb
aam
xor
or
mov
dec
insb
scas
les
adc
add
cwtl
pop
clc
pop
pop
adc
out
int3
and
mov
sub
fmuls
pop
cmpsl
mov
in
add
push
mov
mulb
sub
lock
shrb
add
mov
xorb
sbb
shrl
jecxz
sti
adc
fs
mov
add
mov
int3
gs
sbb
adc
cmp
inc
cmp
pop
iret
fwait
into
std
cwtl
jl
and
sub
shr
shrb
aas
mov
mov
mov
cmp
cmp
bound
cs
or
and
xor
pop
dec
sub
fcomps
hlt
pop
xchg
lea
iret
xor
imul
jmp
adc
cmp
test
sub
mov
mov
xchg
inc
mov
imul
jmp
push
lea
imul
pop
xchg
mov
mov
xchg
sbb
in
mov
adcb
add
lret
sub
sbb
mov
pusha
lods
cwtl
or
aad
or
inc
popa
bound
ret
cmpsb
pop
call
jecxz
mov
mov
les
imul
addr16
lret
jae
add
stos
or
cmpsl
xchg
lods
incb
push
stos
jle,pt
sbb
ljmp
insl
pop
mov
cmp
jmp
and
sbb
xchg
cltd
test
lock
outsl
push
ret
scas
pop
cli
pop
and
adcl
lods
or
adc
cmp
jo
ret
pusha
hlt
add
rorb
leave
and
or
into
jl
adc
sbb
gs
mov
fadd
mov
sub
ss
mov
jne
rclb
or
cmp
push
int
cmp
push
lcall
rol
jmp
aaa
sbb
sarb
es
adc
aaa
subl
aam
xor
les
out
push
dec
test
push
dec
add
add
adc
and
sub
mov
dec
cmp
ljmp
aad
cmc
mov
subl
lods
fwait
pop
mov
popl
add
pop
into
push
outsb
fists
jle
insl
test
int
adcl
les
clc
mov
mov
mov
and
and
lcall
jbe
inc
sub
fistpll
add
mov
jae
mov
mov
pop
fsubrl
in
pop
andl
adcl
mov
hlt
stc
push
and
jns
mov
aas
xchg
mov
data16
and
cs
int
dec
test
test
cmp
pop
xchg
cli
inc
jne
mov
rclb
xchg
pop
push
in
dec
test
ljmp
mov
movl
pop
or
outsb
mov
lds
sbb
insb
and
lahf
push
scas
sub
aas
mov
int3
or
push
sbb
cmc
sbb
lds
mov
pusha
cs
sub
imulb
sti
rcll
adcb
push
test
scas
or
jecxz
aad
leave
inc
push
mov
bound
adc
sbb
xchg
push
pop
pop
or
test
push
xchg
jl
in
xchg
mov
pop
sbb
jmp
loop
pop
test
cmc
dec
jle
mov
mov
xchg
mov
jecxz
jno
lret
jae
leave
sbb
loopne
inc
mov
cmp
sahf
lods
jp
mov
mov
pop
jo
and
ret
push
inc
lds
es
andl
sbb
mov
subb
or
shrb
mov
out
std
pop
stos
lret
dec
daa
les
xlat
sarl
insl
aam
dec
ss
adc
pop
xchg
test
decl
push
call
aam
mov
das
mov
xchg
lcall
inc
fdivr
movsb
mov
fdivrs
cmp
push
mov
lds
sbb
mov
add
add
mov
data16
ss
and
mov
mov
jp
cmp
sahf
mov
std
fs
std
aad
in
sbb
xor
pusha
ds
aam
adc
rclb
xchg
cmp
cmpl
mov
cwtl
inc
imul
and
and
sub
cmp
int
faddp
in
push
sahf
popf
imul
sahf
cmpsl
sti
aad
lcall
sbb
iret
xchg
lods
mov
loope
mov
cmp
and
mov
mov
mov
xchg
cmp
aam
out
jmp
inc
rolb
adc
or
xchg
mov
test
sbb
pushf
sub
mov
aad
cmc
icebp
nop
cmpsl
pusha
push
lea
rcr
sbb
ss
cmp
lock
inc
and
jle
cmp
pop
push
ss
flds
or
mov
jmp
loop
les
popf
aas
inc
in
rolb
cwtl
adc
mov
leave
mov
dec
pusha
sbb
in
mov
aad
cmp
push
jbe
stos
fistpll
movsl
pusha
xor
shl
sub
dec
popa
sbb
adc
mov
cmp
inc
xor
pop
sub
inc
in
inc
dec
and
arpl
mov
pop
fwait
push
out
fsubrs
loopne
aam
hlt
movsb
xchg
stc
jne
pop
rorb
inc
lods
jecxz
jns
fstl
popa
xchg
xor
cmpl
jo
mov
mov
mov
pusha
xchg
add
xor
fistpl
sbb
repnz
dec
and
ljmp
inc
push
jb
scas
pop
mov
ljmp
aas
js
dec
loopne
movsl
in
cmp
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
orl
inc
ret
push
mov
sub
sbb
mov
mov
add
mov
dec
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
mov
movl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
dec
mov
xorl
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
orl
push
sbbl
push
push
andl
lea
push
notl
push
xorl
jmp
movsb
xchg
sub
out
arpl
xchg
sbb
bound
pop
bound
in
push
jp
popf
push
or
test
dec
loope
jnp
pop
rorb
pop
xchg
addr16
xchg
mov
cmp
xor
mov
lods
cmc
in
rol
ljmp
adc
cmp
inc
shl
jge
pop
lcall
add
sub
cmpb
push
andb
adc
dec
sub
inc
sub
jecxz
dec
add
lret
mov
add
fldpi
mov
pop
dec
adc
in
mov
xchg
add
dec
push
mov
and
or
push
cmp
lret
or
mov
sbb
sbb
cmp
js
testb
and
xor
xchg
lahf
out
mov
jp
movl
das
cmp
je
stos
shrl
cmp
and
sub
andb
popl
mov
jmp
mov
mov
jno
imul
loopne
lcall
inc
int
aam
flds
adc
sarl
out
xchg
fldenv
imull
push
push
icebp
sbb
fcmovbe
in
into
cwtl
jg
xchg
idiv
insl
or
mov
push
jo
mov
cmpsl
repnz
int
out
cmpsb
sub
cmpsb
mov
add
push
and
mov
sub
or
adc
in
mov
mov
inc
and
cld
lods
adc
stc
cmc
sbb
lods
adc
out
pop
mov
test
lock
aas
sarb
mov
fidivl
cmp
jae
adc
pop
sarl
leave
sarl
les
jno
lret
add
mov
inc
xor
fwait
cmc
jecxz
mov
mov
gs
negl
push
ret
or
push
and
leave
aaa
cld
sbb
xchg
jecxz
adc
in
cmp
in
pop
inc
inc
imul
out
mov
jmp
or
aad
call
jne
rolb
push
dec
pop
cmp
in
xor
insb
xchg
insl
xor
inc
jbe
dec
loop
push
add
enter
stc
jl
pop
ror
aam
lods
clc
imull
sahf
int3
ret
ss
push
jp
movsb
fsqrt
scas
mov
cmp
into
and
int3
jp
sub
pop
imul
add
cs
dec
pushf
in
sbb
sub
mov
out
push
clc
rorb
sub
sbb
add
aad
imul
dec
repz
mov
xor
xchg
jo
out
scas
ficoms
arpl
fs
cmp
das
pushf
out
and
xor
test
shll
jmp
daa
dec
mov
movsl
jge
cmp
sbb
pop
mov
dec
mov
add
jecxz
sbb
data16
pop
lahf
call
dec
pop
lock
ds
pop
in
nopl
adc
jno
xor
movsb
addb
inc
aas
adc
push
mov
int
in
pop
into
in
call
inc
push
je
loope
shl
pop
push
and
mov
lahf
xlat
xchg
jmp
xlat
mov
sbb
cld
or
sbb
jp
in
fwait
jecxz
lret
xchg
push
xchg
fld
js
lcall
add
sbb
mov
mov
dec
fldt
fistpl
or
out
jbe
mov
pop
popf
jno
xor
dec
nop
jne
das
xor
lret
push
xor
sub
in
clc
mov
inc
and
dec
movmskps
cmp
movsb
pop
push
fimuls
nop
pop
lret
and
xchg
mov
xor
cmc
in
cmp
mov
jecxz,pt
and
inc
mov
or
sti
or
mov
data16
push
js
and
mov
xor
sub
into
int3
inc
cmpsb
mov
jge
xlat
fdivs
jbe
jl
sbb
and
or
fcomps
cli
jp
pop
push
test
clc
mov
nop
mov
pop
test
movsl
pop
lahf
pop
das
pop
les
cli
in
movsb
mov
insl
imul
cli
cs
xor
pop
mov
mov
mov
jmp
cld
and
decb
mov
arpl
ljmp
lahf
mov
push
pop
inc
sub
popa
sub
inc
pop
mov
sbb
call
mov
push
jg
sub
adc
fcmovnbe
pop
cmc
or
dec
sub
push
push
mov
inc
push
pop
and
push
jg
int
mov
add
mov
xchg
sbb
clc
scas
out
mov
xchg
scas
mov
ss
fiadds
int
mov
push
xchg
insl
test
and
push
les
aad
hlt
jns
inc
and
mov
pop
push
sahf
testb
sahf
sbb
lret
fistl
pop
scas
pusha
pop
ficoml
js
lret
leave
mov
mov
sub
fiaddl
rorb
in
outsl
nop
fwait
pop
xor
mov
and
or
dec
push
jl
push
scas
push
add
arpl
cmp
mov
or
ss
insb
pop
sbb
ret
sub
push
pop
mov
mov
pop
adc
stos
push
lret
inc
xlat
jmp
into
sub
lret
mov
cmp
or
movsl
bswap
loope
dec
cmp
and
pop
les
xchg
je
inc
dec
sub
out
and
pop
xchg
lods
in
mov
ja
jp
shll
sbb
daa
xchg
clc
fdivrs
sbb
fs
test
cmp
pop
test
insl
ss
xor
mov
les
data16
faddl
dec
xlat
inc
cmpsl
push
lcall
and
cld
mov
mov
aam
sbb
inc
in
fmuls
ss
std
inc
sbb
and
aad
inc
jnp
jnp
xchg
fisubrs
add
sub
es
stos
or
psraw
xchg
push
inc
gs
cmp
or
inc
sub
add
movsb
clc
stc
sub
xchg
cmp
int
cltd
sbb
sbb
nop
insb
lret
xor
sahf
out
sub
aam
push
leave
jne
push
push
fwait
lcall
repnz
push
popa
scas
jl
bound
mov
test
inc
push
cltd
int3
gs
sub
and
stos
lods
or
sub
pop
es
popa
lcall
inc
psadbw
push
loopne
lock
and
and
mov
jnp
in
insb
push
les
daa
jge
div
sarb
in
pop
mov
subb
int3
andl
sub
jl
ljmp
cld
pop
xchg
lds
mov
mov
imul
jl
xor
pop
inc
movsl
sbb
pop
jbe
mov
fwait
dec
sbb
sbb
data16
imul
and
stc
aam
xor
cli
imul
insl
cmp
ficompl
lahf
and
in
sub
fidivs
mov
mov
pop
jmp
lds
sub
roll
or
cmp
fisubrl
out
loopne
fsubrl
push
std
or
pop
inc
cmp
lea
adc
bnd
and
xchg
push
in
xor
lcall
pop
in
jae
in
mov
mov
bound
shlb
clc
add
movsw
lcall
rcl
mov
scas
mov
cmp
xlat
sub
aam
leave
into
stc
mov
std
cld
sub
mov
pop
mov
jl
sbb
jae
in
std
popf
fs
aas
or
sub
outsb
in
lods
push
imul
adc
push
les
inc
jp
add
sbb
in
fnstsw
jl
pop
es
es
cmp
cmp
pop
repnz
jmp
cld
lods
mov
jnp
mov
add
lea
jl
into
mov
cmp
cmp
add
cmp
incb
mov
cli
testl
aad
and
add
pop
sub
icebp
lahf
sar
in
aad
adc
mov
test
scas
lock
imul
popf
roll
sahf
pop
push
mov
mov
je
xor
xchg
push
push
mov
cmp
cwtl
scas
imull
jae
cwtl
pop
xchg
mov
and
loope
push
ss
imul
int3
jbe
jae
inc
sub
mov
das
into
popa
and
lock
jge
dec
adc
xlat
jnp
sbb
ret
cmp
and
add
idivl
test
repnz
pop
and
ret
mov
adc
test
das
push
adc
dec
sub
and
or
push
repnz
stos
jns
or
stc
xlat
pop
fdivrl
mov
testb
cmp
ret
xor
in
adcb
repnz
mov
cmp
faddl
cmp
mov
std
repnz
sbb
sub
cmpsb
pusha
adc
jp
ja
mov
out
jne
dec
aas
pushl
or
arpl
mov
xchg
xchg
fcomip
fimull
aaa
cli
jg
adcl
popa
aad
addr16
lods
roll
pusha
in
scas
and
mov
repnz
dec
loop
add
sub
imul
les
sub
jmp
jno
mov
dec
or
inc
pop
scas
mov
int3
cmp
in
sahf
xchg
push
xchg
push
pop
xchg
in
test
std
pop
lock
minps
cld
dec
gs
sbb
je
call
mov
sbb
push
repz
dec
and
or
in
sub
cld
add
outsl
push
jae
push
fwait
das
push
lret
les
push
out
jns
mov
movsb
sti
dec
or
mov
jbe
push
test
std
pushf
or
icebp
stos
out
mov
hlt
loopne
pop
adc
jmp
xchg
xor
gs
and
push
fwait
xchg
ds
push
cld
mov
mov
mov
push
mov
stos
test
inc
pop
push
out
lea
xchg
adc
test
fldt
mov
mov
loope
xor
cmpsb
cmp
or
or
mov
pusha
and
jns
fucomi
push
psubusb
inc
push
int
call
lea
loop
cmp
sarb
push
mov
out
pop
adc
pop
mov
sub
push
subl
pop
nop
sub
fcoms
pop
mov
pusha
orb
inc
out
icebp
out
and
fiaddl
xchg
cmp
inc
xchg
les
add
not
ret
push
mov
ljmp
fimuls
ret
and
outsb
push
sahf
jl
lock
or
test
pop
pushf
fisubrs
in
jl
or
jmp
mov
ljmp
in
in
stc
pusha
pop
mov
mov
int3
pop
adc
in
mov
sahf
loop
dec
aaa
adc
add
mov
hlt
xchg
inc
inc
sub
jb
push
xor
or
test
and
add
loopne
xchg
push
lods
xor
mov
adc
mov
inc
aas
cld
ret
out
js
push
sti
arpl
cmp
mov
jmp
jo
cmc
aas
cs
out
fistpl
int
out
inc
and
dec
sbb
dec
sub
dec
or
pop
les
cmp
xchg
push
rcrl
sub
repnz
inc
and
cmp
movsl
mov
or
mov
fmull
lret
pop
cli
mov
mulb
ds
ja
push
or
cmpsl
xchg
mov
and
icebp
bound
push
lods
sub
out
ret
xchg
aad
pop
ljmp
sub
cli
inc
and
inc
leave
xchg
cmp
ds
sbb
cltd
test
inc
push
std
ds
clc
add
mov
xchg
gs
in
xor
ja
popf
sbb
xchg
sub
das
mov
fidivrl
ds
mov
movb
mov
mov
lods
mov
cmpsb
in
sti
maxps
fs
cmp
xor
fwait
adc
pushf
pusha
rorl
jnp
push
jle
adc
gs
jle
cld
inc
out
pop
and
mov
outsb
inc
and
int3
hlt
js
mov
xor
out
add
and
dec
push
mov
repnz
xlat
inc
adc
push
inc
inc
out
sub
pop
push
scas
sahf
flds
jge
dec
jg
test
daa
push
push
and
sub
movb
add
or
leave
xchg
xor
xor
xchg
adc
jecxz
or
insb
test
jbe
cmpsb
pop
int
mov
add
push
push
mov
cld
cmc
push
push
ja
xor
cmp
push
dec
and
jg
int3
sub
or
jnp
test
fidivl
mov
jns
jmp
dec
cmpsb
aaa
loop
dec
and
je
ret
push
mov
cld
adc
daa
push
and
je
in
test
outsb
ret
push
enter
fimull
xchg
dec
push
adc
dec
in
cmpsl
xchg
iret
add
mov
jo
arpl
push
adc
icebp
dec
movsb
dec
mov
hlt
jmp
std
mov
loop
xor
test
cmp
test
sbb
push
pop
outsl
das
iret
andb
push
ljmp
mov
xchg
hlt
mov
or
inc
call
out
pop
ja
xor
jnp
pop
mov
dec
cmp
pushf
add
lods
sbb
xchg
les
shlb
or
cld
fiadds
cmp
ljmp
jo
jne
fildl
jp
imul
lods
sar
rcr
std
popa
imul
xor
add
fxch
aas
iret
xor
mov
ljmp
lock
lods
mov
pop
jne
fbld
popf
imul
xor
dec
popa
and
ds
das
pop
inc
mov
call
jge
call
push
xchg
dec
cld
add
imul
inc
nop
in
dec
test
in
xchg
rolb
std
insb
xchg
cmpsl
lock
ljmp
mov
or
aam
xor
add
push
cmp
dec
shll
push
xor
scas
and
mov
xor
xchg
cmp
test
int3
jne
add
lret
in
xor
jbe
mov
rcll
add
cld
cld
scas
xchg
fsubrs
mov
addr16
or
xchg
negl
mov
shrl
out
ja
add
push
xchg
test
iret
out
int3
push
inc
jecxz
inc
inc
ja
cmp
pop
mov
es
sahf
sub
push
and
insl
rcl
dec
vaddss
mov
or
ret
fldl
push
adc
and
lods
sub
adc
xchg
dec
loopew
pop
leave
or
das
add
adc
cs
lea
lods
ja
leave
xor
cmovbe
gs
sbb
ja
jl
and
xchg
int
out
icebp
mov
jbe
push
int3
leave
sub
mov
cmp
add
and
lahf
call
pop
inc
jg
inc
cmc
sub
adc
and
in
jo
dec
ljmp
inc
adc
adc
or
sbb
jg
jle
les
lahf
mov
lret
xchg
adc
aam
cs
into
rorl
xchg
fistps
push
cmpsb
bound
cmc
aaa
rcl
aad
je
in
add
inc
mov
xor
push
ret
mov
dec
mov
and
pusha
addr16
shlb
add
js
inc
jne
ds
imul
pop
int
repnz
scas
popf
mov
dec
xchg
push
cmp
aas
xor
popl
xor
inc
mov
add
clc
idivb
adc
pop
xchg
ljmp
clc
inc
out
test
int3
xor
mov
cld
add
aas
into
xchg
xchg
add
cmp
push
mov
dec
pop
jne
orl
adc
mov
add
fstl
ja
ja
sbb
xchg
shll
jno
into
arpl
sub
inc
jg
ret
cmp
xor
data16
sbb
minps
dec
in
sahf
xchg
popa
and
fildl
fcoms
xor
out
mov
sub
push
cmp
mov
fwait
movsl
fwait
cmp
loopne
sbb
cmp
loopne
ds
adc
rorl
add
in
or
push
pop
testb
nop
mov
pop
dec
mov
mov
mov
or
pop
in
jne
pop
cli
mov
xor
insl
sub
cli
pushf
jns
aas
adc
xchg
pop
sub
mov
mov
pop
sbb
mov
hlt
rorl
cltd
xlat
xor
dec
pushf
stos
fwait
jmp
sbb
lret
scas
mov
movsl
jo
test
and
mulb
pushf
or
lret
sub
arpl
je
add
imul
pop
arpl
sub
dec
test
xchg
pop
add
add
ljmp
cli
test
int
repnz
inc
stc
ret
or
hlt
loopne
mov
fistps
sarb
in
ljmp
jno
test
stc
push
add
inc
aas
and
xor
loopne
mov
mov
jmp
insb
mov
push
lock
jns
pop
scas
mov
adc
xor
push
loope
stos
or
mov
cmp
or
aam
sarl
jg
mov
outsb
inc
in
dec
push
or
enter
inc
dec
pop
aaa
sub
mov
or
add
pop
pop
std
push
in
lahf
mov
xor
xor
inc
jns
sar
fwait
cmp
mov
xchg
popf
into
push
insl
in
mov
push
jle
sbb
fisttps
mov
outsl
je
mov
clc
sub
mov
and
xor
pop
inc
nop
sbb
enter
pushf
and
xchg
mov
sub
ja
mov
out
sar
cmp
call
lds
mov
cmp
xchg
pop
lahf
cmpsb
ret
bound
push
adcl
jp
jl
cmp
add
or
inc
ljmp
imul
pop
int3
out
test
sti
mov
mov
adc
xchg
add
pushf
jg
push
or
push
mov
in
xlat
aad
das
xchg
add
adc
adc
aam
or
mov
or
adc
fs
stos
mov
mov
jg
add
jne
loop
push
out
and
mov
jo
jne
data16
or
add
cli
lds
lret
in
popa
lcall
in
jmp
push
cmp
push
jg
add
pusha
rcrl
mov
std
outsb
lahf
pop
pop
adc
leave
in
lret
and
sbb
xchg
divl
mov
pop
icebp
push
lcall
pushf
sbb
aaa
out
lods
ljmp
aas
mov
call
imul
ds
cmp
scas
sbb
lods
mov
in
ficoml
jecxz
mov
add
data16
and
mov
mov
xlat
adc
insb
or
xchg
andb
cmp
stos
mov
mov
je
stc
mov
xor
aas
ja
or
jle
fwait
or
mov
add
dec
mov
mov
ljmp
push
lcall
mov
ja
add
out
mov
pop
push
int
bnd
imul
addr16
and
or
das
lods
inc
rorb
es
clc
enter
and
pop
cmpsb
mov
enter
fs
divl
scas
je
adc
pop
and
or
or
mov
sub
mov
pushf
std
fwait
ss
mov
nop
scas
adc
and
jl
test
repnz
push
add
ret
mov
inc
xchg
dec
repz
cli
mov
daa
daa
fistpll
mov
fsubr
out
lods
movsl
sbbb
jbe
test
mov
decl
jecxz
mov
jmp
or
leave
ss
jge
jp
in
cmp
sbb
jge
out
lcall
xchg
pop
jne
inc
xorl
gs
pop
dec
push
ljmp
loope
xchg
inc
xor
cmpsb
xor
adc
xchg
cmp
rcrl
out
jp
xor
fisubs
pop
in
mov
and
mov
mov
mov
pop
mov
shlb
dec
add
adcl
adc
dec
cmp
mov
fildll
out
xchg
push
ja
notb
mov
fnstcw
pop
stc
xchg
add
jb
scas
and
scas
xor
out
sub
cli
pop
shlb
rcl
mov
popa
or
dec
iret
lods
mov
xchg
pop
pop
xchg
mov
movsl
rclb
and
jno
sbb
dec
inc
push
xchg
mov
sahf
mov
lret
push
inc
outsl
sahf
inc
mov
adc
push
and
pusha
sub
je
jecxz
adc
mov
cmp
lds
and
loope
or
mov
mov
dec
ljmp
lds
add
pop
push
mov
popf
fdivs
testb
sbb
xchg
insb
push
xorl
pop
orl
mov
lea
xchg
mov
scas
or
adc
push
addr16
ret
sbb
cmc
xor
dec
fwait
std
jle
dec
push
pop
dec
bound
adc
outsb
mov
inc
movsb
iret
cmpsl
sub
cs
aam
sbb
jmp
inc
xchg
divb
call
mov
pcmpgtb
xor
repnz
js
jae
orl
jmp
cmpsb
mov
into
push
jbe
das
adc
rorb
mov
xchg
push
sti
lods
dec
jl
xchg
rcrb
sbb
aas
xor
and
mov
push
and
call
call
roll
push
addb
pop
pop
int3
shll
mov
fdivr
js
test
jmp
dec
lahf
dec
jmp
insl
stc
pop
aad
and
lea
sbb
arpl
rorl
sti
cmpsl
das
cmp
jae
out
and
insb
in
scas
pop
mov
pop
imul
das
stc
jg
cltd
icebp
adc
mov
mov
adc
insb
mov
jge
shrl
xchg
aam
les
dec
imul
hlt
rcrl
push
orb
push
test
push
mov
xchg
test
xchg
adc
xchg
pop
int
into
mov
push
xlat
cltd
jg
and
aaa
jb
push
push
shll
jle
jbe
inc
fldl
sub
jecxz
xchg
filds
push
sti
cmp
mov
push
mov
cmp
es
aas
mov
lret
xchg
sub
popf
mov
mov
pop
pop
or
fdivrl
roll
mov
stos
adc
aad
jmp
mov
lcall
repnz
dec
adc
mov
movsl
jmp
pop
adc
std
loope
and
pushf
xchg
xchg
pop
mov
out
fwait
inc
inc
mov
push
cmp
push
dec
dec
lahf
mov
mov
xorb
dec
cmp
sarl
scas
jp
mov
lock
scas
xor
add
scas
and
aas
cmpsb
sbb
pusha
repz
sbbb
and
and
shlb
sbb
sub
iret
enter
dec
lock
ja
ret
inc
lods
fisubl
jle
or
inc
inc
lea
cmp
cmp
popa
ja
inc
fs
lea
mulb
pop
jae
cli
scas
or
push
mov
call
insl
bndstx
xorl
imul
ret
cmc
jo
pop
mov
aad
add
pop
insl
and
fldl
fwait
movsb
cmp
jns
xor
dec
jg
mov
mov
pop
sbbl
pop
dec
es
scas
notl
xlat
xor
xchg
addr16
adc
scas
mov
sub
lret
je
cltd
cmp
cmp
jbe
push
pcmpeqw
imull
jo
mov
arpl
data16
leave
lret
pop
mov
sbb
sbb
jmp
mov
cmp
fsubr
je
adc
dec
pop
imul
mov
xchg
hlt
aaa
cmp
sbb
sbb
filds
dec
imul
pop
push
jmp
and
xor
add
and
enter
xor
fs
ret
jmp
or
push
outsb
insb
sub
sbb
addl
dec
insl
insl
cmp
cmp
scas
imul
inc
out
push
sub
push
fdivrl
lods
cld
pusha
cmpsb
ret
pop
mov
scas
sub
dec
pop
add
out
movsb
test
jge
cltd
inc
push
cli
in
jge
jne
fidivrs
xor
or
rcrl
sbb
fldt
lret
or
inc
add
and
mov
adc
xchg
cmp
and
mov
adc
push
std
aaa
inc
lock
aas
xchg
mov
inc
jp
dec
fs
and
adc
insl
popa
push
push
mov
jns
jp
cmp
add
pop
ljmp
push
outsl
stos
pop
add
mov
cmp
mov
inc
xchg
or
dec
negl
xlat
into
shrl
sub
jmp
lahf
imulb
push
jg
nop
jl
pop
sub
leave
stc
pop
and
std
sbb
xor
cmp
push
and
or
push
inc
adc
mov
and
push
ret
loopne
dec
and
outsb
cmp
mov
sub
push
pop
inc
scas
fdivl
imul
fnsave
xor
test
fbstp
imul
cs
mov
insl
sbb
enter
mov
push
addr16
xchg
add
rcrb
or
or
pop
pop
fcmove
mov
mov
outsb
fldpi
cmp
clc
mov
jbe
insl
or
fmuls
adc
imull
mov
cmp
cmp
mov
xchg
dec
mov
lcall
shll
lea
xchg
fcomps
pop
enter
cwtl
movsb
add
lock
out
pusha
imul
mov
xor
popf
aas
inc
mov
lods
incl
and
pop
mov
jb
imul
mov
mov
out
loopne
stc
pop
adc
sub
repnz
aad
sbb
add
dec
mov
jno
sub
outsl
push
ret
xor
adc
mov
imul
pop
dec
gs
cld
cld
or
or
lret
and
in
movsl
push
lcall
popa
jb
scas
xor
rolb
popf
and
adc
stos
out
fmuls
jg
enter
js
xor
xchg
lahf
cld
mov
lret
xor
addr16
push
cli
decb
outsl
mov
mov
mov
insb
jl
or
in
and
pop
inc
push
push
scas
add
jno
xchg
sub
adc
jmp
xchg
jecxz
sub
arpl
shlb
das
fmuls
dec
fbstp
dec
fsubs
out
mov
popa
fisttpll
cmp
cmp
pop
es
out
getsec
xor
and
jo
test
rcrb
inc
inc
jne
pop
sti
add
mov
mov
mov
pushf
mov
fsubl
xorb
adc
mov
fiaddl
fnstcw
aas
mov
pop
add
pop
lods
scas
xchg
sarl
xor
std
adc
mov
mov
inc
add
xor
stos
mov
mov
test
das
outsl
in
aas
jne
icebp
or
mov
xchg
movsb
fs
insb
xlat
and
pop
mov
adc
dec
cmpsb
jo
insl
mov
cmp
pop
mov
fdivr
inc
pusha
mov
cli
sar
mov
or
jl
push
ljmp
loop
jmp
stos
cmp
insb
or
and
adc
insb
lret
ret
xor
arpl
pop
mov
inc
mov
inc
pop
in
shl
bound
sbb
jg
mov
in
hlt
push
jo
inc
inc
inc
sbb
out
sub
jmp
xchg
mov
mov
loopne
lahf
lahf
fs
mov
mov
push
cwtl
loopnew
repz
aad
push
pop
mov
jno
mov
cmc
int3
outsl
lcall
rcrl
fst
jp
in
fs
sub
std
mov
nop
add
pop
shll
aas
adc
xchg
lea
pushf
pop
inc
mov
lods
nop
out
jle
add
pop
xor
js
insl
jbe
les
adc
lods
sarb
sti
cs
sbb
cmp
fiadds
aaa
inc
inc
or
stos
xchg
and
push
jb
xor
sub
sar
jo
inc
pop
sbb
fldt
cmp
lret
adc
shrl
jmp
and
and
rorb
cmp
cmp
and
sub
das
mov
xchg
arpl
dec
xor
cltd
icebp
and
mov
inc
jno
xor
lods
push
gs
aam
jmp
das
xchg
lretw
pop
xor
xchg
jae
fildl
aam
adc
xchg
fisubl
mov
movsb
xchg
xchg
sahf
stc
shrb
sbb
icebp
mov
sbb
insl
dec
repnz
mov
mov
fincstp
das
add
lret
push
add
xchg
pop
push
lea
mov
jecxz
repz
movsl
push
pop
mov
inc
out
add
lock
jmp
push
sub
fists
mov
sub
mov
pop
stc
sbb
jecxz
loop
mov
mov
mov
mov
ret
jns
inc
cmp
mov
sti
das
jge
pop
add
dec
lea
out
push
je
lret
addr16
push
mov
add
fstpt
mov
push
sub
and
add
and
xchg
mov
pop
mulb
adc
out
aas
xor
aam
addl
std
xchg
out
fimuls
xchg
cmp
push
push
pop
adc
int3
cli
sbb
push
dec
xchg
mov
popa
mov
cmpsl
pop
aaa
stc
fsubr
dec
nop
xchg
movsb
imul
jnp
scas
mov
sub
pop
stos
cmpsl
mov
icebp
lret
gs
pop
insl
nop
xchg
sbb
pop
movsb
jno
jl
jne
jle
fdiv
dec
scas
orb
fadds
lret
repnz
imul
xchg
xchg
rcll
xchg
pop
lret
je
movsb
out
enter
ret
aad
lods
sbb
stos
and
mov
push
inc
or
fcoml
dec
int
xor
mov
adc
cmc
mov
cld
dec
jnp
cmp
pop
out
insb
cmp
es
mov
mov
mov
push
lds
adc
cmp
and
insb
jae
addl
push
adc
pop
in
or
add
xchg
pop
and
int3
push
nop
movsl
sub
mov
mov
call
push
orl
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
xor
movl
or
movl
mov
or
mov
xor
or
mov
or
xor
not
mov
orl
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
xor
xor
mov
sbb
mov
test
je
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
adc
mov
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
xchg
or
mov
movzbl
sbb
sub
mov
sbbl
xor
and
add
mov
movl
mov
add
xor
addl
add
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
adc
mov
xor
add
add
mov
or
mov
inc
xor
mov
mov
adc
add
mov
subl
sub
lea
xorl
xor
xor
movl
cmp
movl
je
sub
mov
andl
xor
addl
add
movl
cmp
movl
jne
pushl
call
mov
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
push
call
jmp
or
mov
add
movl
cmp
movl
je
subl
pushl
andl
pushl
decl
call
orl
mov
mov
sbbl
mov
xor
addl
add
movl
cmp
je
mov
mov
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
sub
mov
mov
inc
mov
add
mov
xor
mov
or
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
fidivl
jb
xor
ss
add
jg
cmc
bound
pop
bound
mov
jl
rolb
xchg
inc
mov
ret
cmpsl
dec
ja
push
mov
sub
xchg
pop
push
jge
aas
cwtl
pop
std
mov
inc
pop
stc
xor
cs
in
mov
and
sub
jmp
clc
dec
testb
ds
stos
les
ret
push
jnp
nop
rolb
jmp
clc
inc
cmp
pop
push
push
cmp
mov
call
sub
insb
mov
in
sbb
cs
mov
outsl
sbb
xlat
xor
dec
nop
call
rol
rcrl
jecxz
mov
push
sahf
dec
add
mov
ljmp
push
icebp
push
dec
iret
lret
test
inc
push
inc
push
xor
jmp
lcall
dec
sarl
ret
aaa
mov
int3
scas
scas
mov
or
and
inc
dec
dec
sbb
fsts
cli
sti
push
mov
jns
adc
pushf
add
sbb
inc
test
rep
gs
cmp
pushf
pop
movsl
jg
lds
in
push
and
jmp
popl
in
mov
inc
cs
mov
inc
mov
add
fcoms
in
mov
addr16
imul
lds
pop
push
mov
icebp
in
mov
and
stos
mov
cmpsb
iret
pop
and
jge
sub
add
push
insl
aas
sub
mov
popa
cld
xchg
test
aad
inc
push
adc
add
jae
mov
pop
js
iret
cmp
dec
push
outsb
loope
int
fwait
cmp
aad
int3
sbb
push
loope
fisubrs
pop
fs
cmp
out
out
push
mov
adc
int
lods
test
sbbl
sbb
es
and
adc
mov
sbb
and
pop
inc
xchg
jg
or
out
pop
and
imul
fnstcw
popa
push
pop
lret
fcmovnu
and
pop
gs
popf
pop
xor
or
xchg
sub
sbb
and
daa
aad
fnstenv
aas
into
hlt
jo
stos
mov
pushw
fs
add
adc
mov
pop
cltd
iret
movsl
mov
leave
out
xorl
pop
aas
nop
or
stc
cmp
sbb
xlat
mov
rcl
xor
mov
icebp
sbb
xchg
in
or
push
sbb
inc
outsl
popa
ja
push
test
cli
cli
pop
jne
pop
xchg
adc
xchg
andl
sti
mov
xchg
fidivl
push
xchg
mov
xchg
in
cwtl
data16
scas
cmpsb
js
cwtl
fs
mov
mov
pop
popf
sbb
lods
pusha
out
mov
mov
dec
dec
pop
sub
aaa
mov
sbb
gs
adc
jp
xor
loop
inc
sub
dec
xchg
jno
fdivr
sub
mov
loop
sbb
mov
adc
xor
push
outsb
insl
pop
inc
lock
mov
rcll
and
mov
xor
cmp
sarl
cmpsb
stos
dec
or
and
repz
mov
das
cltd
inc
popa
aad
or
sbb
mov
rcrl
in
sub
enter
cwtl
insl
insl
imul
cltd
out
and
fistpll
movsl
gs
ret
xlat
or
js
jne
out
shrb
sub
nop
mov
sbb
adc
ja
sbbl
aad
mov
js
shll
push
xor
or
mov
mov
pop
inc
jmp
add
pop
add
pop
push
mov
loopne
stos
out
cmp
push
xchg
mov
jg
test
or
icebp
addr16
push
pop
inc
scas
ja
mov
add
popa
lret
and
not
pusha
ret
mov
popa
call
subb
adc
inc
imulb
in
ror
xchg
pop
push
in
in
inc
mov
mov
or
push
outsl
and
adc
xlat
int
cli
ljmp
mov
dec
ret
mov
add
outsl
mov
and
xor
aad
in
sbb
test
es
subb
push
xor
mov
lods
lods
ret
xchg
rol
push
ss
imul
mov
test
mov
or
stc
std
mov
shl
outsb
fsubs
pop
leave
icebp
dec
jne
xchg
push
xchg
cld
xor
stos
mov
sub
aam
mov
pusha
data16
jl
lahf
jb
xchg
xchg
shll
sbb
stos
pop
outsb
jecxz
xchg
push
xchg
pusha
pop
cmpsb
insb
mov
mov
lahf
loop
xchg
pushf
loop
mov
jge
in
test
in
icebp
adc
adc
sahf
cld
out
roll
and
outsl
push
push
fucomip
sbb
rolb
lea
loope
mov
sub
std
orl
and
out
aaa
inc
sbb
dec
adc
stos
cmp
inc
test
stc
xchg
push
fs
xchg
inc
push
dec
jo
ljmp
mov
out
jmp
mov
or
pop
std
js
je
xchg
in
pop
sub
jae
out
and
and
mov
push
adc
rorl
xchg
jl
lcall
cmp
rolb
dec
inc
sbb
or
sti
mov
sub
cltd
loopne
mov
jne
outsl
xor
push
sub
xchg
dec
cmpb
std
xchg
xchg
jno
sbb
mov
popf
pop
clc
push
pop
jmp
lea
lahf
ja
clc
test
add
lds
movsb
dec
in
into
mov
sbb
out
push
mov
iret
daa
shl
rcrl
jne
iret
xchg
stos
aas
push
repnz
xchg
mov
dec
test
push
orl
testl
pop
mov
hlt
repz
jle
cmp
incb
lahf
xor
out
pop
mov
addb
mov
scas
repnz
adc
es
sbb
in
push
lret
pop
test
cmp
cmc
xchg
sub
into
fwait
out
mov
and
sub
cwtl
lock
std
push
xchg
cmp
roll
sub
icebp
and
sbb
roll
das
jge
sub
out
inc
jle
push
mov
jg
pop
mov
subl
in
and
and
or
push
or
pop
dec
xor
jno
test
scas
xchg
mov
adc
stos
ja
inc
fwait
mov
sti
int3
mov
loopne
in
fisubs
add
push
xchg
fisubl
es
stc
sub
and
push
ja
cmp
icebp
test
clc
and
dec
bound
cmpsb
leave
lahf
out
ljmp
aaa
xchg
das
inc
loopne
insl
jecxz
inc
sbb
ljmp
dec
mov
dec
pop
repz
adc
cli
test
inc
fisttpll
lcall
es
ss
pop
fsqrt
iret
jae
lret
cmp
adc
sahf
mov
xor
mov
out
sbb
daa
popa
aas
inc
pop
push
mov
xor
mov
pop
addr16
xchg
xor
into
dec
push
or
mov
rep
sti
nop
xor
sub
add
mov
ss
mov
cmp
fcmovnb
arpl
sbb
pop
mov
jbe
add
or
cmp
call
inc
nop
cmp
fcomps
and
sub
out
push
xor
movsb
mov
packssdw
xor
cmpsl
addr16
and
push
fwait
jnp
and
jge
sahf
insb
insb
and
or
cmp
add
imul
sbb
sub
mov
adc
inc
lcall
fmull
call
mov
outsb
inc
xchg
mov
fwait
cmp
adc
push
outsl
lods
jns
mov
inc
in
jg
mov
pop
out
or
gs
xchg
mov
in
dec
mull
loopne
lock
bound
xor
cmp
into
adc
repz
pop
sbb
mov
lahf
cwtl
mov
cmp
adc
xchg
scas
dec
mov
cmp
cmp
enter
and
stos
rcrb
ja
adc
mov
sahf
nop
xor
or
jae
lds
outsb
ss
test
xchg
pushf
jmp
dec
mov
sbb
mov
lahf
dec
jge
pop
scas
lea
adc
jle
push
pop
sti
push
lea
decb
add
adc
add
fnstenv
jae
xchg
and
pushf
pop
out
inc
pusha
into
mov
arpl
arpl
outsb
adcl
cmp
and
mov
mov
push
mov
or
fwait
inc
popa
scas
xchg
lock
sbb
ffreep
ljmp
pop
jle
push
adc
insb
lods
fst
iret
int3
ss
add
das
popa
test
jp
lds
cmp
cmp
xchg
pop
lock
sahf
mov
mov
xor
xor
out
xchg
lds
jno
pop
cmp
pop
sbb
hlt
movsb
cmc
rcrb
jl
jb
sub
xor
cmp
sub
mov
imull
fists
lret
sbb
pop
pop
sbb
jg
lods
not
hlt
aam
in
xchg
insl
push
hlt
pop
inc
jnp
and
sbb
fimull
int3
mov
jecxz
out
fsincos
sahf
pop
pop
jb
jecxz
mov
and
add
jae
out
inc
jnp
mov
mov
ret
popa
repnz
sub
sbb
pop
inc
jne
adc
sub
aam
inc
nop
dec
inc
xchg
sub
or
inc
mov
sub
mov
jne
rorl
inc
push
xlat
in
mov
cwtl
mov
test
outsb
sbb
mov
fists
mov
outsb
sub
pop
mov
aas
aam
lret
inc
mov
sbb
fs
xchg
mov
int3
and
mov
bound
sbb
stos
push
xchg
push
aaa
mov
lret
adc
mov
push
out
xor
imul
out
and
push
shll
cmp
or
pop
dec
call
ja
sub
call
bound
jne
xchg
cs
outsl
cmp
aaa
ret
and
cmpsl
cmp
sub
or
daa
inc
aad
mov
insl
in
pop
loope
ja
outsb
fsts
in
movsb
cwtl
out
cwtl
cmpsl
dec
dec
popa
mov
mov
fists
and
xorb
push
fcmovnb
mov
mov
add
sarl
push
dec
fisubl
insb
push
or
outsl
xlat
sbb
and
dec
jl
lret
int
leave
testb
orb
test
pop
leave
inc
test
fidivrs
lea
cltd
cltd
sbb
outsl
pop
push
sbb
mov
cmp
sub
sti
pop
and
jne
ret
mov
fs
jecxz
lea
popa
aad
popf
cmp
in
mov
mov
pop
dec
mov
es
dec
aad
xor
mov
cmp
cli
sub
jbe
stos
dec
adc
aad
add
mov
mov
icebp
push
lds
cmp
test
dec
int
js
pop
push
gs
and
and
push
sbb
xlat
cli
repnz
jp
mov
mov
ret
push
push
mov
or
mov
xchg
mov
cmpb
dec
in
cmp
iret
mov
or
xor
and
push
sub
pop
stc
pop
in
inc
and
popf
lcall
int
fstl
lahf
fistpl
mov
jp
aad
out
xor
cmc
push
push
lcall
adc
xor
test
pop
mov
cld
jg
decl
test
fwait
test
mov
loopne
jecxz
pop
fxch
stos
xchg
dec
arpl
lds
out
push
pushf
push
push
mov
loopne
andb
ljmp
in
jge
gs
scas
sahf
dec
cwtl
rorb
mov
jmp
push
outsb
mov
and
lret
fstps
test
rcrb
outsb
or
mov
cmpsb
das
xchg
jmp
inc
cmpsb
in
das
xchg
mov
clc
out
xor
dec
xor
dec
mov
mov
pop
sbbl
adc
jge
sti
and
mov
sahf
push
iret
repnz
mov
pop
inc
pop
into
pop
ss
jae
dec
mov
sahf
cmpsl
xchg
sbb
xchg
cmpsb
jge
or
test
rcll
daa
outsl
push
inc
xchg
dec
mov
or
iret
cs
xor
cmc
pop
cmpsl
add
lahf
xchg
push
xchg
add
repz
and
push
mov
div
fldl
mov
pop
gs
mov
mull
push
jne
push
call
cli
cmp
dec
leave
aas
cmpsb
mov
mov
adc
lahf
dec
sbb
jae
cmp
sub
or
cmp
adc
or
mov
add
mov
inc
leave
adc
repz
xor
pop
sar
pop
jp
adc
push
cmp
push
xchg
sbb
shlb
jge
push
pop
push
jp
cmc
cltd
aas
ljmp
lds
push
fdivr
lret
pop
rcrl
punpckhbw
inc
aaa
fcomps
jne
pushf
pop
fisttps
xor
push
pop
push
aaa
inc
std
stos
inc
mov
cltd
and
sub
pop
aaa
leave
or
mov
icebp
fildl
sbb
jecxz
push
bound
sarl
add
adc
cmp
push
test
aaa
pop
inc
gs
das
out
and
je
adc
cmp
mov
adc
les
adc
lods
out
or
in
in
test
mov
cmp
inc
adc
cltd
cwtl
xchg
push
out
sub
adc
ss
shufps
nop
xchg
sub
mov
ja
out
and
and
addb
mov
in
inc
cmc
cli
dec
ret
or
xchg
push
jbe
pusha
icebp
xchg
je
les
or
jns
stc
scas
dec
or
jne
cld
add
fidivrl
cmpsl
fnsave
push
sbb
mov
push
lods
stos
pop
fwait
movsb
jne
and
sti
subl
pushl
sbb
cli
fidivl
push
lret
std
ss
inc
jne
das
testb
lock
pop
movsb
add
push
out
rolb
out
lret
imul
fsubs
pop
out
jns
testl
stos
sahf
sarb
adc
and
aaa
pcmpgtd
xor
pop
shl
pusha
xor
sbb
jp
mov
xor
jle
fs
repz
dec
pop
add
inc
movl
mov
mov
xchg
popa
sub
mov
push
imul
mulb
sub
push
mov
out
dec
mov
fisubs
bound
pop
mov
inc
dec
cmp
outsb
aam
mov
push
mov
sbb
jo
and
out
fwait
jns
daa
iret
lds
movsl
jmp
mov
dec
mov
pushf
stc
repz
mov
inc
xchg
outsb
mov
xchg
sbb
repnz
loop
push
xchg
in
repnz
and
out
sbb
int3
mov
mov
lods
dec
dec
mov
add
mov
cmp
ret
loopne
jb
mov
push
and
nop
add
xchg
sbb
in
jp
fwait
or
stos
js
mov
neg
cli
outsb
mov
sbb
out
jbe
mov
mov
push
sbbl
leave
pop
cmc
xorb
jle
stos
enter
mov
sbb
movsb
ret
out
inc
out
nop
push
xor
push
xlat
addr16
sbb
je
ret
mov
jae
addr16
sub
lahf
clc
xchg
add
ss
cmpb
add
pop
inc
loopne
les
rcl
xchg
pushf
mov
sbb
add
fs
inc
xchg
and
mov
add
aam
es
xor
popa
popa
fsts
js
out
add
jle
jnp
push
std
into
test
scas
into
cmp
cmp
mov
scas
outsl
cmp
sbb
xorb
ret
push
std
lret
pop
incl
lds
sti
dec
loop
pop
dec
jo
out
rclb
scas
push
clc
lods
div
jno
adc
sbbl
aam
mov
adc
mov
dec
push
sti
movsb
out
test
rorb
adc
add
rorb
push
sub
add
push
les
pop
js
sub
add
int3
pop
aad
loope
push
andl
sbb
stos
fidivl
cltd
adc
sub
xchg
lar
push
cmpsb
adc
fdivp
rorb
movsb
fucom
clc
enter
rolb
mov
and
aam
cmp
jbe
sahf
leave
jbe
and
inc
dec
push
add
jl
adc
imul
push
insl
jb
or
sbb
cmpsl
clc
aam
xor
aas
push
or
lret
out
aam
xor
fsubs
arpl
add
mov
jno
shlb
jnp
loopne,pt
ret
insl
add
push
dec
fnstsw
jecxz
enter
jns
add
pusha
ret
test
jmp
jmp
int
sub
mov
jmp
xchg
cmp
out
outsl
aad
inc
sbb
jnp
or
fwait
xor
cmp
orl
sete
jp
ja
jbe
xchg
xchg
cmp
cmpsl
cwtl
cmp
stos
jle
in
jmp
in
or
jno
xstore-rng
cmpsl
inc
mov
sahf
fcmovu
test
cmp
add
xchg
jb
in
or
int
repz
adc
pop
mov
sub
jecxz
pop
adc
nop
testl
sbb
addr16
push
test
or
and
jp
xchg
mov
push
xchg
movsl
xor
test
add
cmp
lcall
mov
loopne
or
shll
int3
negb
and
or
mov
lret
fwait
sub
xchg
push
data16
aam
jb
mov
lods
fldl
add
enter
lcall
add
xlat
imul
loopne
inc
mov
inc
in
sub
push
ljmp
ffree
and
mov
sub
ret
in
mov
xchg
aad
sbb
jnp
sub
mov
repnz
and
aas
arpl
jno
test
popl
lods
xchg
pop
xchg
push
xor
sub
out
sbb
dec
lods
ror
test
push
push
or
call
inc
cmp
sbb
mov
mov
push
jge
inc
push
sub
sub
mov
out
movsb
cli
xchg
jp
mov
aad
dec
adc
inc
jno
test
das
mov
adc
sar
xchg
xor
movsb
ret
outsb
mov
cli
adc
std
xchg
mov
mov
int
adc
gs
iret
mov
cmp
inc
jb
mov
popf
push
mov
outsl
aaa
mov
pusha
mov
imul
in
mov
push
pop
std
rcl
mov
mov
int3
test
loope
ss
mov
lods
fimull
cmpsl
das
sbb
pop
repz
pop
push
cmc
jecxz
push
or
mov
adc
movsl
js
xchg
addr16
testl
xor
inc
cmpb
in
inc
mov
xchg
out
mov
inc
xchg
adc
pop
into
sub
repnz
loope
pop
rcrl
movsb
xchg
je
jle
popf
jns
sbb
lcall
scas
lds
outsb
push
adc
mov
leave
mov
push
aaa
fs
dec
mov
push
sub
mov
ss
incl
stos
fldt
orb
push
xchg
cmp
bound
and
xor
sbb
cwtl
std
popa
test
push
xchg
aam
sub
fidivrl
clc
inc
mov
mov
mov
data16
pop
sti
fwait
push
xor
mov
adcl
push
and
push
adc
shrl
jmp
jne
and
imul
das
mov
roll
jp
out
dec
mov
insb
ja
out
testl
or
and
mov
fs
mov
inc
lahf
xchg
push
shrb
xchg
lret
fisubrs
inc
mov
jp
adc
pop
ret
push
scas
outsl
push
data16
lea
outsb
pop
and
mov
push
dec
xor
out
mov
jbe
mov
xor
pop
lods
ret
add
sub
push
outsl
pop
ret
or
test
call
cs
cmp
stos
popa
decb
cli
cmp
lahf
addl
lods
xchg
adc
push
push
lret
andl
repz
bound
je
lea
fbstp
xor
ds
out
loop
sbb
aas
jmp
add
jg
rol
js
scas
ljmp
push
or
dec
adc
and
xor
out
aaa
popf
loope
jns
pop
pop
xchg
nop
popf
push
cmpsb
call
xchg
jg
pop
mov
movsb
xchg
mov
push
jge
sub
mov
fstpl
out
inc
repz
push
inc
nop
mov
xor
push
inc
imul
aaa
jb
mov
and
sbb
gs
cmp
and
sub
or
or
movsb
mull
jg
push
mov
ret
inc
cmp
clc
jns
dec
loop
dec
scas
jne
ficoml
test
push
xor
xor
and
mov
into
mov
inc
mov
sti
out
xor
and
adc
add
lods
cli
out
or
insb
jecxz
xchg
aaa
xchg
push
mov
add
lods
std
int3
int
jae
cmpsl
lret
xchg
iret
cmp
sub
cs
pop
xor
mov
inc
mov
cli
jmp
loop
fsts
out
push
hlt
push
cmc
cmpsb
ds
xchg
mov
popf
mov
push
mov
jns
mov
aam
push
or
loopne
loope
daa
jb
jne
or
sbb
cmc
mov
xor
movsb
in
iret
add
adc
adcb
mov
dec
loopne
pusha
cmp
xor
imul
idivl
xchg
pop
call
in
and
or
sub
push
pusha
fwait
mov
stos
push
xor
pusha
fs
filds
xor
cmp
mov
mov
loopne
and
aas
xor
jmp
pop
cli
mov
xor
mov
rcrb
and
push
std
iret
mov
sbbl
and
iret
xchg
xor
subb
mov
xlat
mov
push
inc
std
xchg
mov
jno
inc
test
pop
mov
fmull
movsl
adc
inc
sub
xlat
or
lock
jge
aas
outsb
jnp
dec
jno
dec
mov
adc
pop
xchg
adc
mov
dec
xchg
and
mov
and
cmovp
in
in
xchg
popa
mov
andl
out
ret
push
icebp
lret
dec
sub
mov
and
nop
dec
sbb
dec
jno
aaa
loope
inc
cmp
mov
pop
mov
push
ds
sti
cwtl
adc
jle
dec
hlt
mov
mov
xchg
mov
mov
mov
insb
and
jecxz
arpl
sub
into
or
cmp
gs
mov
sbb
lahf
rcll
cmp
mov
cmpsl
sbb
call
test
cli
add
xchg
aaa
and
std
push
nop
fwait
or
inc
add
pop
imul
dec
daa
cmp
xor
mov
les
pop
addr16
fnsave
mov
dec
inc
push
push
imul
arpl
mov
loope
pop
jmp
jmp
out
cmp
xchg
adc
push
mov
dec
pop
fstpt
test
lock
mov
cli
pushf
ss
xor
shr
in
inc
dec
stos
adc
mov
inc
xor
jo
mov
push
scas
dec
jns
xchg
lock
inc
scas
mov
pusha
jg
out
repnz
lods
xchg
sbb
imul
gs
adc
hlt
jnp
xor
outsb
mov
int3
mov
into
push
pop
inc
pushf
in
dec
fidivs
sti
addr16
out
push
lahf
idiv
lret
cld
rclb
add
inc
insl
lock
daa
js
test
xchg
xchg
cli
adc
mov
sbb
scas
daa
push
mov
jae
into
adc
in
fs
push
push
cmp
pop
aad
pop
icebp
es
out
or
ljmp
mov
aad
mov
call
inc
lea
sbb
aaa
test
jns
push
push
aas
lcall
test
xor
push
xchg
mov
popa
jo
mov
les
ret
in
push
push
fsubrl
shl
int
jno
out
mov
jg
pop
fdivrp
mov
inc
test
jmp
icebp
movsl
mov
idivl
pop
loop
dec
dec
xchg
les
sarb
jge
nop
dec
push
bound
sbb
popa
out
pushf
jmp
movsb
and
loope
add
push
xchg
jno
loope
sbb
aad
test
mov
popa
pushf
xor
jbe
mov
div
mov
addr16
xchg
dec
loope
pop
mov
test
jns
addr16
lock
cmpsb
outsb
scas
divl
out
jno
and
add
xchg
or
enter
adc
lahf
sahf
into
add
inc
cmp
cmpsb
mov
scas
jnp
das
arpl
fisubs
mov
aad
push
sahf
cmp
dec
cmp
xchg
sbb
adc
in
jge
in
ret
jecxz
sbb
out
cwtl
push
xchg
fimull
adc
and
mov
xchg
frstor
lret
dec
xorl
push
mov
notb
pop
push
lcall
fcom
daa
mov
inc
adc
test
movsl
jp
jmp
inc
or
push
out
gs
cmp
jle
dec
mov
or
push
loopne
sbb
gs
js
dec
lret
xor
dec
dec
js
xchg
adc
sub
mov
pop
insb
ret
cmp
sti
dec
test
sahf
insl
scas
cmp
mov
dec
push
cmp
rclb
push
sub
out
jle
or
xor
push
and
sub
out
dec
mov
int3
jmp
sbb
int
inc
mov
leave
insb
push
repnz
mov
mov
xchg
jb
jecxz
les
int
xlat
sub
adc
push
or
daa
in
test
popf
push
adc
sar
pop
ljmp
out
stos
inc
or
test
xor
lcall
test
xor
stos
fistpl
rorl
push
and
xlat
push
fisubrl
mov
negb
inc
pop
pop
inc
and
pop
aaa
cmp
mov
pop
fcoms
add
aaa
gs
mov
mov
sti
jp
push
in
divb
cmp
stc
dec
mov
ds
clc
test
jbe
mov
std
icebp
or
movsb
mov
add
or
out
fdivrs
jecxz
aaa
inc
push
rcl
sub
jmp
ret
push
aaa
popa
insb
mov
xchg
add
mov
stos
cld
xor
clc
push
imul
lret
aad
jmp
jmp
aaa
pop
mov
xor
dec
inc
fildl
dec
sti
fcomi
pop
out
cmc
fs
stc
xchg
pop
xor
arpl
cmpsl
lea
mov
inc
cli
loopne
data16
arpl
xor
dec
ret
ret
repnz
mov
and
adc
and
dec
lock
or
xor
aam
ficompl
push
lret
jp
pop
cmc
xor
into
mov
jno
push
int
stos
test
bound
insl
lds
inc
inc
inc
push
int3
cmpsb
dec
xchg
les
fs
pop
mov
sbb
inc
std
inc
add
adc
push
mov
frstor
mov
mov
leave
mov
jl
mov
jae
leave
lret
xchg
insl
leave
push
out
xor
add
inc
rcll
movsl
add
mov
jecxz
nop
add
dec
push
xchg
sub
cmp
out
mov
gs
mov
cmp
push
push
xor
call
in
pop
lret
fstpl
adc
mov
movsb
mov
divb
xorb
call
int
gs
push
das
dec
pushf
mov
lds
popa
xchg
pop
sahf
ja
jo
cltd
jp
dec
mov
lcall
push
gs
inc
out
or
add
es
imul
into
add
pop
aad
sahf
shrb
mov
xchg
call
loop
nop
xchg
cli
inc
dec
aas
add
bound
inc
call
shlb
shlb
inc
sarl
cmp
lret
notb
pusha
cli
xorl
dec
movsb
outsb
cmp
inc
mov
jns
dec
or
sbb
jno
xchg
lahf
jg
jg
or
mov
add
cmc
lds
iret
loope
divps
pop
push
clc
inc
enter
in
mov
enter
divl
test
inc
imul
xchg
cmp
addb
pusha
shrl
test
pop
or
outsb
fucomip
out
xchg
sbb
xor
mov
mov
xchg
imul
dec
ja
add
pop
nop
pop
daa
call
jl
ret
inc
movb
adc
xorl
sbb
mov
stos
and
and
mov
cmp
test
ss
sbb
push
pop
lock
rcll
pop
mov
cmpsb
rcrl
jp
out
dec
int
in
jnp
cld
pop
jnp
push
pop
ficompl
in
rorb
enter
sub
pop
add
insl
nop
inc
add
sbb
pop
lods
shlb
or
jp
xchg
stos
pop
and
jecxz
movsl
pop
jno
fstps
dec
xchg
xor
jns
inc
mov
imul
fs
inc
rcll
lock
daa
fwait
inc
loop
ss
ja
sbb
ss
clc
pop
cmp
jbe
nop
xor
push
pop
xor
xor
mov
ror
lds
sahf
movsl
fwait
sbb
je,pt
repnz
cmpsb
sub
testb
sti
sti
sbbb
mov
insl
ret
fildl
sar
pop
or
sbb
sahf
les
arpl
pop
loop
aaa
push
pop
inc
mov
sti
cli
pushl
mov
mov
cmpsb
sbb
inc
jns
jl
adc
mov
push
rcl
pop
shlb
jmp
out
lods
sbb
push
lcall
pop
popf
ret
add
daa
and
outsb
xchg
jmp
sbb
push
cmc
dec
sbb
ss
push
fdivp
pop
mov
jg
lods
aad
adc
add
jmp
and
cmpsl
add
xlat
mov
mov
xor
inc
push
add
sti
movsl
mov
fildll
daa
scas
push
sbb
dec
loop
loope
jns
mov
cmc
fwait
or
jne
movsb
push
push
inc
sub
das
cmp
jge
icebp
pop
mov
lea
stc
test
mov
daa
aas
fwait
jnp
or
jge
xor
test
cmp
loope
sub
add
jns
adc
cmp
add
push
int3
xchg
sub
into
pop
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
jmp
jl
pop
call
andb
or
pop
bound
int3
xor
rol
cs
jnp
shl
scas
dec
cld
jne
push
lahf
xchg
sti
mov
jbe
push
push
fwait
js
and
sub
xor
iret
mov
adc
push
or
fwait
sub
pop
xor
mov
test
rcr
fidivrs
pop
mov
sti
xchg
rcll
xchg
adcl
sti
mov
cmpl
push
gs
xor
xor
push
ljmp
push
outsb
test
add
sub
bound
ret
pop
cmp
push
sbb
cmpsb
mov
xchg
dec
cmp
scas
xorb
jne
out
ficompl
das
lcall
push
ja
inc
xchg
cmp
stos
into
xor
jle
sbb
inc
mov
outsl
pop
loope
mov
mov
mov
pop
bound
xchg
push
adc
cmpb
iret
lds
pop
mov
adc
mov
dec
mov
hlt
or
mov
mov
add
and
pop
stc
mov
mov
add
mov
cli
adc
xlat
jnp
push
and
push
dec
xchg
jo
arpl
inc
mov
or
adcl
jnp
and
test
lods
out
jno
les
sbb
xchg
idiv
dec
enter
lcall
cld
xchg
and
aam
push
lods
xor
sbbb
xor
mov
test
mov
jo
call
in
clc
jbe
imull
je,pn
and
mov
inc
mov
inc
out
push
jl
push
mov
dec
movsb
jns
xor
push
aaa
adcl
add
push
ljmp
mov
xchg
cmp
out
lcall
dec
imul
test
sarb
push
cmp
int3
pop
sub
mov
xor
subl
dec
xlat
adc
pop
outsl
fwait
jns
or
xor
xor
pusha
insb
jne
rol
jge
jle
test
or
pusha
jnp
inc
lret
mov
push
jns
sbb
add
cli
leave
and
sbb
push
leave
std
ljmp
pop
mov
cld
push
adc
add
sub
push
aad
scas
or
out
rcrb
xchg
adc
mov
lcall
fsubs
inc
idivl
incb
or
icebp
fwait
sub
cmc
cli
dec
adc
inc
xorl
stc
adc
xchg
pop
ss
lock
mov
rcrb
jp
push
lahf
repnz
xor
pop
mov
lea
shl
mov
inc
leave
sub
testb
fwait
inc
ret
mov
mov
popa
pop
and
shrb
push
inc
shrb
jecxz
aam
stc
lea
sub
pop
popa
push
mov
sub
bound
out
mov
xor
mov
into
ds
movl
std
xchg
imul
mov
mov
jns
clc
testb
je
sub
dec
adc
popf
jb
lods
cmpsb
lods
xchg
add
insl
scas
mov
sub
pop
jmp
into
iret
mov
xor
add
cmpsl
lahf
mov
cmp
insb
cmp
push
pop
repnz
out
dec
add
sub
imul
push
or
add
add
pop
cmp
xchg
add
xchg
mov
punpckldq
iret
stos
aas
fiadds
or
sbb
push
les
xor
in
adc
cmp
adc
loope
pop
lock
lea
mov
inc
mov
xchg
mov
cld
arpl
data16
test
mov
cld
pop
inc
pop
lea
ljmp
lods
push
xchg
sahf
ss
xlat
cmp
movsl
jle
mov
adc
sarb
xchg
leave
sub
ret
es
fistpl
cwtl
int
aaa
out
cmpsb
dec
lds
rcrb
sub
pusha
mov
and
sahf
int3
arpl
sbb
dec
pop
in
xor
mov
inc
arpl
push
push
fildl
pushf
rorb
dec
int3
in
nop
push
pushf
xor
jge
pop
jbe
outsl
fidivs
mov
pop
stos
movsl
mov
movsl
loop
mov
push
pop
ss
push
adc
mov
mov
mov
adc
imul
mov
jnp
dec
imul
cli
dec
jl
das
mov
jbe
inc
fucomp
cmpsb
jbe
fsubs
jnp
repz
imul
xchg
js
movsb
or
lahf
or
mov
gs
sbb
mov
xchg
mov
xor
sbb
dec
jmp
xchg
adc
and
push
lret
imul
out
orb
pop
push
sub
xchg
outsb
fbstp
popa
fistps
mov
int
push
jge
insb
jo
int
mov
outsb
loopne
inc
sub
push
xorl
fnstenv
jge
test
cmp
jmp
mov
repz
jo
mov
fmulp
cmp
dec
mov
inc
sub
out
mov
movsb
ss
sbb
roll
popf
xor
sti
pushf
cmp
xchg
pusha
add
insb
arpl
int
lds
ljmp
nop
addr16
in
add
fsubrl
jp
jne
jge
cmp
lods
jmp
sub
mov
daa
sbb
mov
mov
xchg
out
dec
mov
into
mov
loopne
mov
stos
jmp
sarb
ds
mov
nop
push
sub
mov
enter
cmp
add
xchg
push
inc
adc
push
rcrl
cmpsb
fsubs
int
sbb
orb
lret
pop
push
in
jl
scas
adc
adc
jno
push
cmpsb
movsb
dec
pop
les
testl
mov
mov
daa
imulb
stos
shlb
dec
inc
lock
sarb
cmpsl
dec
inc
cmp
xchg
out
inc
add
adc
mov
pop
push
test
jae
mov
jmp
xor
lods
mov
push
pusha
repnz
cltd
or
add
pop
mov
out
fadd
dec
fwait
fs
or
inc
test
out
and
rcl
scas
scas
dec
out
mov
pop
in
mov
or
jne
pop
mov
incb
nop
adc
dec
loop
test
push
jl
adc
stos
pop
lret
mov
mov
and
inc
cmp
aaa
cltd
ss
lcall
clc
jae
dec
xorl
xor
jb
sub
pop
mov
arpl
or
jno
add
jno
addr16
sbb
gs
add
cmpsb
stos
jg
jae
out
jp
push
pop
inc
jecxz
lret
std
push
imul
jle
aaa
daa
add
sti
xchg
mov
sbb
sub
into
daa
fcomps
push
shlb
inc
xchg
push
adc
sarb
sbb
popf
int3
fadd
daa
scas
fisttpll
sbb
inc
test
in
outsb
jmp
sub
or
lret
xchg
test
inc
push
adc
ss
ja
and
and
dec
pop
dec
movsl
cmp
lods
cmp
inc
sti
test
in
outsb
push
xor
int3
lods
bound
mov
stos
mov
mov
xchg
shl
popf
das
icebp
push
movl
sbb
or
insb
push
insl
clc
mov
sub
mov
cs
rcrl
ret
mov
adc
pushf
add
ss
daa
push
mov
daa
mov
std
pop
mov
mov
iret
lods
add
jl
iret
test
rcl
jo
push
cltd
imul
je
pop
test
les
inc
xchg
mov
push
mov
insl
and
lea
sub
jge
and
cltd
mov
mov
out
out
jns
mulps
es
cmc
pop
sub
clc
scas
inc
into
cwtl
mov
push
jne
add
test
adc
fcompl
push
mov
mov
lcall
nopl
pop
jge
inc
add
lock
sbb
sub
mov
bound
pop
test
outsl
jb
jno
pushf
pop
lahf
xchg
out
dec
shlb
mov
mov
icebp
and
xlat
orl
fucomp
mov
push
insl
shl
sbb
xchg
dec
jno
xchg
sub
sub
shll
addb
cmp
mov
mov
adc
cmp
mov
nop
sub
loope
jb
pop
cmpsl
std
jmp
add
lret
adc
pop
mov
jmp
dec
andb
and
jne
cltd
mov
data16
cmp
push
inc
out
aam
js
dec
repnz
cmovge
add
out
sbbb
mov
lret
aam
adc
add
lds
repnz
xchg
fwait
out
inc
outsb
test
cmp
sub
adc
mov
or
fisttps
outsb
cmp
sub
mov
pminub
scas
xchg
sbb
shrl
fisubrs
pushl
dec
lret
cs
les
test
mov
cmp
jg
mov
ror
imul
ret
inc
dec
hlt
add
test
in
jge
push
aad
jle
and
adc
jbe
and
jbe
cs
nop
out
xchg
ret
adc
test
mov
adcl
cmpsl
imul
popf
cmp
vmovntps
fsubrl
mov
push
add
test
pop
pop
lret
js
and
mov
and
out
in
shl
push
sub
or
mov
aad
fistpl
cmp
mov
and
sub
inc
outsb
add
add
out
sbb
pop
jnp
mov
xor
fldenv
jg
xchg
std
fldcw
cmpsb
inc
mov
xor
jecxz
adc
or
mov
fcmovnbe
adc
push
fldl
gs
jae
xchg
dec
shlb
cltd
insl
clc
lock
or
cmp
fsubrp
js
mov
repz
ja
push
notl
int
jae
jg
bound
loopne
xor
push
mov
mov
jne
lea
cli
stos
push
and
arpl
or
dec
scas
xchg
aam
dec
jmp
xchg
aam
xchg
push
call
adc
pop
lcall
pop
setbe
in
test
mov
cmpsb
xchg
fcomps
cs
fsubs
jae
lahf
ds
sub
in
addr16
aas
push
test
dec
test
daa
adc
inc
inc
push
std
call
adc
hlt
fdivrl
sbb
mov
jle
inc
sub
loope
push
xor
sbb
outsl
roll
jg
mov
push
iret
aaa
les
divl
sbb
lret
adc
jb
stos
je
int3
popa
sbb
sbb
mov
cwtl
adc
daa
test
jmp
lcall
in
addr16
mov
fwait
ds
sub
pop
adc
pop
cmpsl
mov
stos
mov
dec
mov
cmpsb
pop
mov
movl
popf
cmpsl
xor
out
xor
sub
jmp
push
in
add
push
mov
mov
mov
sahf
inc
int3
out
neg
outsb
mov
push
adc
aas
mov
nop
clc
cld
stos
sub
inc
loopne
mov
push
xchg
xchg
test
mov
adc
pop
lods
adc
add
cmp
add
ret
sbb
add
cmp
inc
jmp
xchg
mov
aas
sub
mov
testb
mov
jl
jmp
mull
iret
push
push
scas
aas
or
inc
stos
inc
add
mov
mov
fisubrs
jl
incl
lods
aam
adc
jmp
adc
push
push
or
and
jle
imulb
and
xlat
out
fsubl
push
pop
and
jp
imul
xchg
das
push
jle
push
loopne
push
jo
fsubrs
in
ljmp
push
adc
jnp
mov
call
aaa
xchg
int3
pop
popf
or
push
out
add
les
test
pop
cmpsb
pop
data16
xchg
lods
pop
test
jmp
mov
dec
mov
cld
fimuls
clc
or
aam
sub
popa
cmp
cmpsl
add
cli
and
fbstp
pop
mov
jg
ret
fsubr
adc
repnz
lock
push
rcll
pop
out
dec
movsb
and
fmull
movl
ds
pop
mov
mov
sahf
cmp
xor
lea
data16
pop
daa
mull
push
das
xchg
aad
xchg
xchg
enter
inc
mov
cmp
jle
mov
rcr
sub
mov
push
adc
push
mov
ja
mov
xor
fcmovb
fldl
xchg
call
xlat
dec
icebp
jne
mov
mov
shr
aad
scas
cld
lods
stos
stos
jg
fbstp
jl
leave
jae
sbbb
out
fimull
mov
arpl
pop
push
rclb
bound
xchg
mov
incl
add
enter
cmp
repz
pop
pop
xorl
xchg
in
adc
test
cmp
bound
fwait
cmpsb
mov
sbb
fwait
jo
jno
addr16
es
jp
mulb
iret
sahf
fsubrp
push
mov
ja
enter
cwtl
sti
dec
pop
cmpsb
sbb
inc
cltd
sbb
pop
cmp
sbb
dec
in
movsl
aad
xchg
cmp
jmp
cwtl
scas
jo
xchg
pop
adc
popa
repnz
ret
mov
cmp
cli
cmp
ljmp
jbe
sbb
clc
mov
add
jle
mov
popa
pushf
or
xchg
push
xchg
sbb
mul
loopne
adc
mov
sbbb
dec
movsl
shrl
add
cwtl
or
push
xchg
push
clc
xchg
notl
inc
fstpl
loop
dec
mov
sub
or
and
fiaddl
push
js
mov
jo
aaa
mov
test
rcrl
push
mov
lcall
imul
pushf
inc
mov
lcall
insb
adc
in
mov
sbb
in
repnz
scas
dec
and
cs
enter
add
adcb
adc
jo
cld
out
clc
inc
ljmp
adc
inc
clc
and
cmpsb
push
mov
sbb
pop
push
mov
jge
sub
movsb
mov
dec
mov
push
out
pop
xlat
stos
xlat
pusha
mov
hlt
loope
adc
in
mov
push
jmp
sub
cmpsb
and
xlat
mov
pop
sub
or
into
test
leave
mov
push
fldl
test
scas
mov
mulb
cmc
mov
mov
jno
sbb
push
push
sti
jns
ljmp
outsb
cmp
pop
shrb
test
add
mov
stos
sbb
jge
fdivl
mov
cli
pop
bound
pop
xlat
leave
aas
insl
mov
and
sbbl
mov
pop
jmp
cld
pop
add
add
jge
out
test
leave
or
lods
pushf
mov
add
out
adc
jo
sub
test
xchg
sub
push
and
push
ret
dec
inc
xchg
mov
roll
jns
inc
arpl
or
pop
icebp
pop
in
cmp
mov
jle
xchg
xorb
or
push
aaa
cmp
xor
shlb
pop
cwtl
lret
std
arpl
jmp
fwait
push
fisubrs
dec
cs
mov
outsl
cmpsl
out
lret
in
lods
mov
fisttpll
lret
outsl
sub
push
mov
idiv
and
add
cmp
inc
cmp
imul
pushf
movsl
xchg
mov
mov
mov
sub
fldl
and
outsb
push
inc
sub
mov
cmp
or
out
xchg
lret
imul
dec
je
mov
xor
or
cwtl
mov
pop
ss
out
cmp
ds
mov
push
scas
jle
jo
adcb
dec
rcr
push
iret
iret
xchg
aas
mov
repnz
out
shl
inc
cmpsb
pop
js
out
out
inc
inc
adc
inc
scas
xchg
inc
aam
out
xchg
xlat
adc
push
mov
pop
and
sbb
out
mov
mov
cmp
inc
cmp
jo
nop
cmp
pop
movsb
mov
repz
push
mov
shlb
icebp
repnz
stos
fisubs
fwait
adc
jo
repz
lret
xorl
psrlw
xchg
mov
jg
cltd
mov
data16
outsl
aam
jnp
push
loope
or
cwtl
out
mov
cmp
push
fbstp
and
movsb
xor
pusha
rorl
stos
rcll
sbb
inc
ljmp
test
add
xchg
out
rcr
das
pusha
pusha
pop
and
adc
stc
movsl
into
push
jg
jae
mov
ljmp
arpl
inc
dec
mov
xor
adc
lret
adc
jnp
sbb
out
mov
repnz
xchg
jb
xchg
ret
outsl
sbb
mov
pop
enter
ffree
iret
fadds
push
sub
mov
sub
jbe
es
loope
or
filds
dec
fistl
push
push
out
test
aaa
mov
fcomps
add
cmp
dec
mov
arpl
addl
add
jge
inc
out
mov
mov
pop
popa
mov
popa
arpl
push
cmc
dec
test
int3
insl
es
xor
sti
movsb
test
shll
clc
push
push
pop
in
and
push
adc
imul
jae
mov
test
and
shrl
shll
mov
push
leave
jns
xor
cli
ret
cmp
js
test
jnp
jnp
icebp
xor
mov
insl
push
fists
or
push
jl
xor
inc
jo
push
jno
mov
jmp
jb
sti
inc
mov
mov
or
test
andl
add
inc
jl
sub
ret
mov
cmp
jae
sub
in
pop
fsubrs
jns
icebp
icebp
sar
jne
aaa
aad
xchg
add
dec
mov
xor
or
out
adc
punpcklwd
jecxz
loop
shr
mov
pop
and
sub
cmp
inc
outsb
mov
cmp
mov
leave
stos
cmpsl
xorl
lds
push
pop
pop
pop
jne
cmp
call
orb
mov
push
cltd
xor
push
flds
fstpt
push
sbb
lret
xor
adc
add
cvtdq2ps
mov
mov
fsubrp
mov
jnp
jo
push
sub
iret
test
add
lds
ficoms
mov
pop
dec
rcll
into
pusha
jbe
and
les
cs
je
jns
inc
mov
adc
add
aaa
add
dec
lcall
push
jle
in
xorl
mov
stc
test
popf
fistpll
sbb
dec
inc
lret
fists
iret
pop
mov
push
decb
mov
aad
dec
cltd
push
in
adc
andl
cwtl
rcll
cmc
xchg
push
push
scas
dec
mov
out
shll
lea
pusha
dec
orl
cli
lods
iret
dec
mov
xor
dec
push
or
push
add
inc
aam
pop
inc
aaa
sub
insb
sbb
dec
loope
pusha
mov
iret
rclb
ret
pop
ja
ds
push
or
mov
sbb
addr16
or
push
cs
mov
and
sbb
ss
pop
mov
int
or
push
xchg
fbstp
push
enter
xor
lcall
in
aaa
dec
ret
scas
pop
and
ja
mov
mov
xor
les
in
mov
ret
cmp
mov
fdivrl
lret
orl
mov
push
and
or
push
inc
test
xlat
scas
mov
outsb
stc
arpl
jo
fwait
jle
push
cmp
jecxz
xchg
mov
add
add
adcb
push
mov
jbe
or
push
mov
pop
add
xchg
mov
rcrl
ja
fdivp
push
mov
adc
leave
cmpsl
xchg
sub
fstpt
fidivl
loope
xchg
ss
lahf
arpl
loope
fs
fcmovnb
mov
sbb
das
out
pop
or
hlt
mov
mov
adc
jns
call
cmpsb
add
inc
push
cmp
movl
outsb
sub
pop
push
call
xchg
or
mov
push
outsl
pop
imul
mov
sbb
push
ja
out
loopne
lock
lea
negb
cmp
push
or
sbb
add
pop
movsl
push
sar
ja
cmp
add
cmpsl
mov
jle
cmp
and
dec
adc
leave
cmp
cwtl
test
add
dec
es
and
pusha
divb
shll
mov
out
movsb
hlt
rorl
int
stos
cmpsb
jmp
mov
dec
inc
xorb
sbb
pushf
test
jbe
insb
loop
mov
ret
scas
sub
lock
pop
jge
leave
pop
mov
iret
push
arpl
add
std
push
xchg
cmp
sub
stos
and
xchg
push
mov
mov
and
jmp
xor
jns
clc
fs
adc
cltd
push
psrlw
add
mov
into
add
lock
mov
out
idivl
xor
or
jg
dec
push
pop
xchg
nop
pushf
mov
or
jmp
mov
test
ss
rcrl
in
ljmp
loopne
cmpsl
sub
push
icebp
fidivs
lock
imul
lret
jge
negb
popf
cmp
cmpsb
pop
in
shlb
cmp
adc
icebp
jno
aas
fidivs
mov
jge
inc
jl
mov
sub
mov
testl
fdivrs
or
push
test
pop
sti
shrb
jecxz
enter
lods
int
addl
in
sbb
sar
popf
cmp
mov
pop
or
xlat
aad
jle
lret
mov
rorb
jmp
pushf
sahf
ss
cmc
and
xor
pop
shl
test
in
mov
insb
popl
sub
xchg
add
sub
dec
mov
into
rorl
dec
cmpsb
lret
imulb
jno
mov
ret
adc
in
xchg
xor
cmpsl
xor
int
icebp
das
jne
push
lret
cwtl
adc
jl
xlat
mov
xchg
inc
insb
adc
adc
cltd
cmp
stos
fnstcw
xlat
mov
xor
jle
jle
xor
mov
push
add
icebp
pop
adc
and
repz
push
push
cwtl
stc
jecxz
adc
call
mov
test
les
outsl
fimull
outsl
ljmp
xchg
push
hlt
test
cmp
fcompl
mov
mov
pusha
or
jp
xchg
addr16
out
xchg
mov
push
cmpsl
lock
or
das
insb
ja
cli
jp
mov
popa
push
das
xchg
and
mov
dec
dec
fcomps
xlat
and
into
cmp
cld
hlt
xchg
dec
xor
test
daa
xchg
testl
int3
sbb
imul
out
dec
mov
mov
or
cmpsb
movsb
xor
stc
mov
push
rclb
mov
stos
xchg
leave
jl
jae
cmpsb
roll
ret
and
cs
pop
inc
stos
and
xchg
or
dec
lret
push
mov
lods
or
ds
sti
lea
mov
test
or
lea
mov
adc
and
imul
add
add
and
jl
andb
out
or
inc
inc
inc
xchg
cld
lock
inc
cld
and
clc
add
pop
xchg
dec
push
sbb
mov
jl
popa
in
and
fimuls
inc
les
pop
aad
popf
mov
dec
mov
cmc
jecxz
mov
pop
data16
call
aas
push
mov
cld
fadds
xchg
shll
sbb
imul
jo
sbb
jmp
push
sub
in
push
ljmp
dec
jmp
mov
push
or
js
aas
cmpsl
xor
call
movsl
adc
xchg
mov
int3
and
sbb
mov
jmp
out
mov
pusha
aad
arpl
mov
incb
inc
jp
mov
add
xor
sub
push
sub
into
movsl
ja
adc
mov
mov
push
pop
imul
inc
test
xor
lea
push
sbb
mov
and
adc
mov
fcomps
aam
test
int3
pop
jae
enter
mov
rcl
push
cmpsb
shrb
push
flds
fwait
out
loope
or
popf
mov
inc
ds
aas
iret
inc
mov
push
mov
sub
repnz
fucomip
pop
jge
xor
loopne
sbb
cs
lds
incl
inc
jae
popf
repnz
jge,pt
sbb
popa
sub
inc
xlat
or
xchg
inc
mov
pop
fwait
push
push
imul
push
ret
test
dec
test
cmpl
sbb
mov
inc
or
xchg
scas
out
mov
ja
mov
cs
jmp
xor
insb
mov
popa
mov
xlat
adc
sarl
mov
stos
pop
jb
dec
pop
jecxz
dec
sub
test
in
inc
push
or
xchg
push
daa
dec
sbb
lahf
mov
insb
and
imul
mov
xchg
sbb
ret
je
xor
push
adc
push
test
xor
loop
jae
jno
dec
rcrb
std
push
in
sbb
lahf
jb
imul
dec
lret
pop
mov
cmp
mov
popf
aas
ja
add
je
rorl
cmp
sub
cld
inc
pop
add
getsec
fs
dec
stos
add
notl
out
jecxz
dec
add
in
dec
lods
int3
sub
sbb
add
inc
sbb
cmc
mov
xor
ja
test
add
nop
jo
iret
sub
xchg
inc
mov
xor
aaa
leave
pop
pop
mov
lahf
shll
sbb
stc
sbb
dec
rorb
out
fldl
sbb
mov
xchg
popf
mov
mov
jb
test
sarl
xlat
xor
sbb
dec
jmp
push
shrb
nop
cmpsb
xchg
xchg
divb
test
cmpsb
pop
xchg
sbb
pop
imul
or
cmp
jae
inc
add
fdivl
push
add
test
pop
jb
rolb
or
scas
inc
into
mov
rclb
fidivs
in
lods
in
mov
pop
mulb
cmpsb
hlt
shlb
lcall
and
mov
sbb
xchg
ja
test
cmpsb
enter
in
xlat
iret
and
mov
stc
mov
nop
adc
pushf
mov
lods
fldl
mov
mov
or
mov
fists
inc
add
xor
arpl
cmp
add
mov
adc
xchg
add
pop
mov
cmpsl
adc
int
loopne
lock
pop
lock
sarb
test
aaa
sub
pop
inc
mov
pusha
roll
jge
pop
xchg
rcl
pop
adc
jg
js
enter
sub
mov
repz
gs
enter
fs
sub
ds
adc
addb
outsb
cmp
xor
rclb
or
in
xlat
jbe
jo
mov
enter
iret
fisubl
movsl
rorl
bound
ds
mov
xchg
push
push
mov
vpaddq
daa
cwtl
mov
loop
rorb
push
mov
dec
or
scas
pop
jecxz
adcb
xor
enter
pop
sbb
push
xchg
js
inc
pushf
inc
jnp
jno
xor
mov
call
sbb
cwtl
push
inc
cmpsl
filds
mov
mov
bound
dec
fsubrs
pop
movsb
addl
fnstenv
xlat
aad
int3
aad
scas
pop
mov
mov
and
movups
movsl
fisttpll
rclb
cmp
push
adc
jbe
or
jl
adc
lret
insl
add
rorl
and
cmp
sbb
push
loope
mov
push
loopne
insb
bnd
outsb
mov
add
xor
loope
jae
notb
dec
push
mov
and
sbb
xchg
movsl
insl
movsl
xor
iret
pushl
push
outsl
mov
cmp
jnp
loope
lret
cs
mov
jbe
add
push
jo
add
add
jle
mov
ret
jp
mov
test
mov
sti
insl
pop
roll
push
sbb
and
xchg
jbe
sbb
xor
data16
pop
jge
push
or
jnp
pop
insl
pop
jne
cmpsb
addr16
pop
mov
lock
mov
mov
jle
lods
lods
mov
lods
xchg
aad
iret
push
add
leave
push
jge
xor
adc
jle
cld
sub
push
dec
cmp
fnsave
stos
sbb
sbb
rorb
shlb
push
fisttps
dec
xor
bound
ss
aam
inc
negl
pop
cwtl
fwait
xor
adc
sub
das
xchg
mov
je
ja
adc
dec
neg
sub
xchg
push
lods
lock
test
lahf
js
sarb
add
jl
stos
iret
std
scas
mov
lods
cmpsb
fildl
add
sub
or
push
lret
js
dec
mov
ror
jl
loopne
lahf
xor
sahf
fs
or
xlat
out
lahf
inc
push
adc
lock
cmp
imul
jns
hlt
fldt
or
xchg
mov
in
xor
lret
dec
add
or
ljmp
inc
addl
xlat
and
dec
cmp
fbld
jno
dec
xor
fwait
rclb
add
xor
mov
movl
imulb
dec
sub
dec
sub
and
sbb
addb
addr16
jnp
jnp
lods
aaa
lods
lock
cwtl
nop
and
cli
test
xchg
aad
orb
xchg
cwtl
cmp
outsl
push
orl
mov
push
sahf
or
xchg
in
rorl
imulb
push
xchg
stc
sbb
dec
push
adc
push
imul
lret
inc
inc
outsl
mov
push
lcall
in
daa
add
cli
ljmp
enter
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
addl
mov
or
mov
mov
xor
andl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
mov
mov
movzbl
and
cltd
push
addl
mov
add
movl
adc
or
push
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
mov
movl
mov
andl
mov
xor
orl
xor
orl
xor
andl
add
adc
xor
orl
jmp
mov
arpl
jno
shlb
sub
js
bound
pop
bound
lcall
sub
xor
adc
push
xchg
in
inc
test
cmp
mov
xchg
or
mov
mov
mov
inc
pop
add
cs
call
hlt
inc
iret
sub
sub
sahf
mov
cmpl
lea
dec
lret
xor
adc
divb
lds
cld
sbb
movsl
pop
and
arpl
push
cmp
repz
mov
std
addr16
xchg
jmp
lods
test
xor
add
rcll
sub
nop
or
jns
adcb
push
pop
jle
imull
mov
jg
mov
loope
mov
mov
inc
fbstp
fstl
out
and
pop
gs
call
or
push
call
sbb
mov
sub
sahf
push
mov
mov
cmp
add
mov
or
dec
mov
sub
mov
fcoml
fidivrs
xlat
jns
sbb
add
mov
xor
mov
ss
fildll
std
push
stos
or
aam
arpl
add
aam
sbb
in
mov
mov
adc
dec
cmp
sti
add
imul
fwait
jo
hlt
movsl
lahf
test
rclb
test
xor
xor
ret
dec
adc
cltd
cmp
rcrb
sahf
and
inc
push
xchg
cs
dec
sbb
jmp
loope
add
xor
scas
jo
test
adc
xor
adc
mov
shl
cmpsl
cs
aas
addr16
lcall
jns
pushf
lcall
mov
je
idivl
mov
push
adc
stc
mov
enter
mov
scas
sub
and
mov
cmp
xchg
inc
jle
xchg
shll
fidivl
pmullw
imul
mov
repnz
iret
js
mov
mov
sub
ss
and
jne
lods
xor
ret
fiadds
in
test
adc
cmp
daa
out
scas
leave
pushf
dec
outsb
xor
dec
cmpsb
or
xchg
xchg
scas
xor
cs
sbb
and
icebp
repz
out
cmp
outsb
js
test
add
test
mov
add
add
out
out
lds
cwtl
loope
test
mov
aaa
scas
mov
leave
dec
in
mov
dec
sub
mov
orl
loope
out
test
mov
enter
push
cmp
pop
jns
hlt
sbb
xlat
pop
int
cli
stos
jne
sbb
mov
push
add
pop
jmp
xor
cwtl
xchg
and
xchg
push
mov
push
sbb
inc
cmp
rclb
fwait
insb
dec
rol
rorl
lcall
push
or
jp
fmuls
push
inc
cmp
cmc
pop
dec
je
and
loop
dec
and
mov
or
popa
or
mov
fdivl
lea
and
fisttps
pop
jp
scas
mov
pop
adc
std
lods
add
pop
and
or
cmp
scas
add
xor
jnp
xchg
adc
pop
jns
ret
cld
dec
or
pop
out
inc
enter
push
xchg
xorb
faddl
adc
xor
sub
fsubrs
cmp
rorb
imul
sub
nop
popa
pop
mov
push
inc
or
fistl
xorl
cmp
mov
lock
jno
fnstsw
lcall
jbe
sub
cmp
kmovb
ret
xchg
in
and
adc
test
outsb
xor
aad
mov
xor
in
dec
push
test
add
stos
inc
xor
imul
loop
pop
sub
sbb
jl
mov
dec
inc
sub
loopne
les
enter
repz
stos
push
fstpt
mov
cmp
or
inc
outsl
adc
call
hlt
pop
and
fnstenv
pop
insb
pop
int3
add
jmp
inc
mov
jno
mov
or
mov
frndint
dec
cwtl
cmp
push
loopne
lret
aaa
insb
sub
mov
sbb
call
push
imul
lods
cmp
inc
mov
loop
bound
loope
mov
sbb
cmp
sbb
sbb
xchg
fwait
and
lds
rorb
fcoms
inc
cwtl
sub
mov
pop
dec
fnsave
or
cmc
daa
lcall
mov
mov
movsl
fimuls
test
pop
jnp
mov
and
pop
xor
test
testb
mov
xor
adc
jge
shll
sub
sub
fstl
ret
jge
mov
and
cmpsl
sub
jo
clc
xchg
sub
mov
dec
daa
pop
push
inc
orb
ret
outsl
sub
jg
jmp
ret
insb
lea
faddl
push
outsb
inc
nop
ret
fisttpl
out
mov
in
and
lret
loopne
inc
into
cmp
lock
jmp
movsb
es
jecxz
stc
fcmovne
sahf
jle
push
mov
loopne
xchg
push
insb
punpckldq
mov
xchg
mov
insl
or
cmp
gs
sti
cmpsl
ret
and
and
js
ljmp
push
outsb
aam
mov
rcll
jle
loopne
cmpsb
fcoml
xor
sub
ret
gs
push
push
adc
pop
push
out
popa
popa
ds
cmp
xor
jmp
adc
xor
add
lods
out
or
ds
fcomps
cli
or
cmp
sbb
loopne
pushf
je
cmpsl
inc
lds
jle
mov
sti
xchg
in
mov
repnz
ljmp
aas
xchg
push
insb
int3
daa
pop
negb
cmpsl
in
mov
sub
fimuls
cs
inc
scas
in
xor
jb
xor
repnz
outsb
je
jns
xchg
test
xchg
push
xor
cmp
mov
ficoms
and
sub
loope,pn
arpl
shlb
scas
push
or
dec
sbb
xor
aam
dec
adc
jnp
adc
ds
cmpsb
push
sahf
push
out
loopne
mov
addr16
and
icebp
std
pop
sar
push
andl
jmp
mov
ret
mov
dec
add
js
add
loop
adc
cmp
popa
jae
or
leave
jbe
dec
loope
inc
inc
imul
fs
adc
fistpl
aaa
pop
jbe
jb
sub
call
movsl
cld
mov
pop
insl
imul
psubw
icebp
arpl
xchg
fmuls
add
pop
or
lods
mov
into
sbb
xor
cmp
and
shll
dec
jne
arpl
sti
sbb
or
popa
in
cmc
js
cmp
push
jbe
sbbb
mov
pop
movsl
add
mov
adc
or
or
xchg
rcll
dec
orb
loop
xchg
pop
repnz
pop
shlb
mov
jo
in
scas
mov
test
add
ret
hlt
adc
xor
add
push
std
push
sbb
mov
sbb
in
and
sub
int3
mov
cmp
sbb
add
in
fst
bound
sbb
sub
mov
addr16
inc
jecxz
xchg
arpl
mov
cwtl
mov
sbb
inc
mov
stc
jp
lods
mov
push
stos
ret
inc
pop
jo
gs
les
cmp
in
cmp
push
cs
stc
push
pushf
div
and
adc
cmc
sub
sub
pop
mov
push
jmp
jecxz
inc
shlb
mov
repnz
adc
insl
mov
popa
popf
and
into
mov
and
test
loope
sub
or
leave
pushf
outsl
int3
sub
sub
inc
cmp
loopne
lret
xchg
inc
jb
sbb
mov
mov
in
jl
imul
xchg
notl
pop
or
in
js
add
inc
push
jmp
sub
jo
stos
sbb
push
aad
imul
cwtl
test
arpl
pop
int3
lret
jbe
or
test
jl
mov
scas
adc
outsl
xor
into
pusha
insb
add
aaa
cld
in
out
lcall
into
out
cs
xchg
insl
scas
cmpsb
sub
xor
loopne
sbb
cmp
jl
or
and
sub
bound
jecxz
fldenv
push
mov
adc
pop
or
ficomps
pushf
jne
xchg
int
in
inc
jno
fsubp
sub
pop
addr16
jmp
ret
test
mov
push
add
ficomps
ror
loope
jae
xchg
mov
cmp
dec
int
add
cli
sbb
pop
addr16
jbe
and
outsb
scas
sub
sub
bound
jp
sbb
jmp
std
inc
adc
test
push
loop
insb
xor
or
cmp
jbe
cmc
xor
fwait
sub
pop
push
fistl
sbb
and
jge
in
jae
push
mov
stc
mov
iret
adc
fnsave
sub
jge
or
outsb
mov
cmp
jle
jl
in
push
fadds
aaa
daa
dec
loopne
mov
jmp
ja
dec
and
ret
mov
xor
sar
lahf
and
jno
inc
scas
roll
mov
xlat
sbb
cmp
mov
loopne
push
fsubrl
ja
sar
mov
add
mov
out
xchg
push
out
sub
test
test
mov
lret
pop
js
or
cld
out
imul
dec
call
and
mov
fstpl
mov
test
adc
pop
push
scas
mov
stc
push
out
call
push
idivb
in
pop
sub
insb
mov
add
ficoml
iret
out
xor
fimull
pop
jne
sahf
mov
adc
jo
xchg
xchg
inc
scas
lock
xchg
into
jle
sbb
insl
sbb
mov
sbb
cltd
fsubs
sarl
inc
vpcmpgtw
xchg
fcoms
dec
sahf
jbe
dec
xchg
mov
in
xchg
into
out
rol
cmc
cltd
stos
mov
inc
mov
cmp
insl
cmpsl
push
arpl
data16
lea
jle
xor
stos
mov
mov
cmp
mov
pop
and
cltd
mov
lret
imul
rorb
shrl
sub
fidivrl
icebp
or
sub
fcoms
add
cltd
push
dec
lods
and
sbb
pop
mov
xchg
push
in
mov
fsubs
negb
cmp
or
test
xor
sbb
pop
push
dec
ja
cwtl
sub
xchg
cwtl
adc
cmpsb
out
xor
movl
cltd
fcoms
out
push
insb
arpl
ja
shlb
mov
sub
cmp
leave
int3
jecxz
inc
mov
les
sbb
mov
int3
pop
xor
fstps
pushf
in
or
bnd
push
int
imul
imul
std
sbb
sbb
add
xor
cwtl
out
pop
xchg
mov
movsl
jne
pop
std
jne
jg
aas
push
fisttps
fstpl
jmp
push
jo
xlat
inc
insb
scas
repz
xor
push
xchg
mov
or
pop
arpl
push
sti
or
test
mov
add
std
fmull
add
out
cwtl
lods
xor
cmp
enter
jge
sbb
je
mov
pop
test
xor
and
add
imul
xchg
insl
idivb
aam
or
incb
fadd
xor
je
stc
nop
pop
jl
pop
enter
iret
int
jle
sbb
ja
in
and
scas
add
mov
xchg
mov
push
scas
xchg
jb
mov
nop
jb
adc
fists
out
ss
push
clc
frstor
or
ds
mov
std
test
push
mov
cld
cld
or
popf
cwtl
push
in
aad
fcompl
js
pop
mov
cmp
xor
sub
ret
rorb
fstp
and
in
pop
push
jge
mov
lds
cmp
inc
mov
pop
mov
xchg
and
xlat
inc
pop
xor
pop
xchg
les
mov
fidivrs
testl
cli
mov
cmpsl
mov
jne
sub
push
mov
sub
divl
test
dec
popa
lret
clc
jl
pop
mov
repnz
or
popf
and
xor
iret
jl
lea
adc
std
in
adcl
stc
add
insb
pop
pushf
jl
into
popf
ds
mov
sbb
jb
in
dec
jl
js
and
movsl
rol
int3
cld
inc
addr16
jle
sti
push
pop
fxch
adc
mov
lret
inc
mov
loop
aam
sbb
adc
loopne
icebp
push
push
mov
push
cmp
inc
out
movsb
cmp
movsb
mov
addl
rorl
jg
pop
rcl
jp
mov
sbb
popl
lock
inc
and
test
push
adc
jl
xor
and
inc
fcmovnbe
clc
bound
dec
pop
rol
pop
dec
mov
lods
add
jne
fdivrl
push
pop
mov
and
ss
test
adc
mov
and
mov
sbb
ret
enter
push
icebp
imul
xchg
stc
pop
shlb
push
adc
stc
push
sub
clc
jg
push
mov
jnp
sbb
aas
jnp
in
cmpsb
adc
nop
mov
mov
cwtl
pop
in
mov
mov
stc
mov
cmp
imul
test
pop
jge
aas
lcall
cmpsl
and
xchg
xchg
adc
nop
xor
shlb
xchg
loopne
adc
mov
xchg
fildll
insb
pop
add
cmp
lret
adc
bnd
or
pop
cltd
adc
imul
dec
andps
push
dec
imul
test
jmpw
push
repnz
addr16
pop
in
fstpl
xor
xor
lods
fidivrl
add
test
push
xchg
sahf
push
fcompl
push
out
lock
iret
push
rclb
fldt
dec
xor
jge
cmc
jb
stos
add
xlat
add
movsl
pop
dec
dec
popf
shrb
sbb
addl
pop
xchg
or
push
vpsubd
and
inc
mov
stos
and
cmp
stc
fldenv
ljmp
pop
out
pop
aam
adc
pop
test
adc
in
sub
ret
xchg
stos
push
push
mov
lock
data16
ds
add
loope
incl
jnp
xor
mov
and
cltd
cmp
push
and
mov
or
mov
daa
shl
les
jnp
jecxz
outsb
shr
inc
jns
xchg
sti
or
mov
lret
sahf
leave
aaa
lea
aam
and
js
mov
fwait
xchg
xchg
lcall
in
add
cmpsb
scas
mov
push
xchg
jne
and
rcrb
sarl
mov
cmp
jl
jg
cld
int3
mov
ljmp
mov
jecxz
mov
inc
sbb
repnz
jecxz
pop
addr16
movsl
mov
in
push
pop
rcr
jle
in
and
out
shl
and
bound
cltd
jae
ss
jp
xchg
add
and
sbb
pop
sub
in
pop
mov
sahf
pop
jb
mov
mov
bound
jnp
pop
jnp
cld
scas
ljmp
out
fcomip
xlat
pop
nop
into
test
enter
push
das
adc
sub
adc
push
movsb
xor
ret
adc
xchg
jge
sbb
pop
lea
pop
xor
lret
sbb
in
dec
jae
adc
pushf
adc
lods
into
jbe
insb
scas
push
or
aam
cmp
sbb
shrb
pop
shl
cmp
adc
call
sbb
xor
cli
push
lock
insb
stos
ret
clc
jmp
add
jp
lods
ss
xorl
fldl
rorb
cmc
mov
xchg
dec
lea
loop
cmpl
dec
in
mov
loopne
jmp
mov
fdivl
dec
push
inc
idivb
push
jno
sub
mov
xchg
pop
ljmp
and
cld
bound
std
push
push
mov
rorl
rorl
lahf
int
scas
mov
add
enter
mov
mov
paddq
push
cld
cli
dec
xor
pop
popf
cmpsl
dec
rep
ja
inc
movsb
sbb
adc
fwait
jecxz
test
mov
les
fiadds
loope
stc
or
cltd
cmpsb
push
into
push
push
mov
xchg
ljmp
js
lret
mov
roll
cmc
or
mov
xor
and
jo
push
rol
sbb
inc
insl
sub
js
dec
int3
andl
imul
jecxz
add
and
cmc
mov
das
ss
mov
lds
xchg
sub
out
mov
cmc
out
jno
sbb
adc
incb
ljmp
xchg
hlt
dec
stc
mov
cmpsl
insb
les
push
mov
xor
push
popf
pop
inc
shll
mov
rcrl
arpl
mov
mov
mov
aaa
mov
adc
dec
pusha
push
xchg
in
xchg
push
lcall
xor
pop
xchg
divb
ret
adc
pop
sbb
push
and
cwtl
pop
jmp
xor
and
stc
xchg
stos
gs
int
sub
cli
insl
mov
and
int3
outsl
adc
mov
xor
push
movb
and
jae
inc
and
test
pop
cmp
jo
xor
xor
push
ja
fwait
scas
or
jl
or
shlb
sub
leave
dec
pop
cwtl
js
aaa
fidivl
mov
es
punpcklbw
stos
in
inc
mov
outsl
xor
mov
jg
mov
mov
in
adc
loope
lods
add
mov
and
int3
dec
pop
or
divb
adc
into
xchg
cmp
rcll
fbstp
adc
test
adc
xchg
inc
aaa
arpl
loop
cmp
inc
inc
das
sti
scas
lcall
sbb
xor
mov
cmp
fimull
pop
out
add
arpl
push
les
pop
ds
mov
dec
out
sbb
sub
sub
shl
repnz
cltd
in
jg
jle
arpl
ret
mov
cmp
test
xchg
enter
iret
sub
negl
xchg
iret
out
ja
or
fwait
nop
shrl
sbb
and
out
xchg
adc
sbb
out
inc
out
adc
sub
dec
sub
sahf
xor
pop
sub
insb
inc
ds
shll
sub
xchg
mov
jae
dec
popf
mov
leave
call
cld
xor
push
sahf
and
jb
nop
cmp
xchg
mov
jb
scas
call
push
mov
push
inc
adc
jmp
das
cmc
xor
and
or
jb
aam
add
pushf
dec
subl
or
jno
vmovntps
mov
jb
xchg
sub
add
jmp
cmp
into
mov
cwtl
mov
push
enter
sahf
ds
or
icebp
push
mov
dec
ss
pop
in
add
or
loopne
inc
sbb
imul
xchg
and
aam
clc
pop
or
movsb
adc
mov
sub
jo
inc
push
shl
add
mov
mov
jg
loope
mov
mov
dec
insb
cmc
js
mov
mov
push
pop
addl
push
and
pop
cli
and
inc
mov
push
mov
sbbb
lret
jge
push
mov
roll
dec
xchg
in
push
mov
push
rorl
mov
inc
std
in
cmovb
sbb
adc
leave
call
movb
push
sub
jge
ljmp
dec
jns
int3
fs
movsb
adc
mov
cmpsb
cmp
add
or
es
xacquire
push
stc
xchg
icebp
or
adc
or
mov
cwtl
std
push
mov
cmp
cmc
add
loope
aad
lods
call
movsl
mov
shl
je
cwtl
insl
imul
inc
cmpsl
xor
xor
mov
mov
test
faddp
sahf
cmp
cmp
sub
lret
xchg
icebp
cmpsl
jle
mov
mov
mov
gs
push
leave
sbb
and
add
or
mov
sub
aad
mov
hlt
sti
lcall
pop
daa
imul
sub
sub
mov
js
inc
xchg
pop
mov
jo
repz
pop
mov
loope
jl
mov
pop
inc
adc
loop
scas
fidivl
push
nop
psllq
dec
test
inc
adc
add
pusha
xor
test
fimull
aas
imul
jecxz
adc
mov
aas
ss
mov
movsl
ljmp
mov
fs
cmpsl
jg
gs
repnz
or
out
flds
pop
xchg
mov
aam
ret
and
pop
pop
and
ljmp
shl
shrb
jns
cld
enter
fsubs
call
iret
jb
sbb
enter
popa
daa
mov
ja
stos
sahf
popf
mov
nop
adc
inc
pushf
faddl
sbb
jl,pn
inc
insl
xor
imul
push
into
mov
add
ds
jae
push
mov
fcom
sub
add
insb
mov
mov
les
test
jnp
orb
push
mov
stos
add
idiv
sar
sbb
stos
int
into
repnz
adc
adc
shrb
fnstenv
imul
mov
mov
cld
mov
xor
xchg
stos
jecxz
inc
sub
out
xchg
ljmp
sbb
scas
mov
loopne
movsl
daa
leave
mov
rorb
dec
jno
jmp
pop
ror
fwait
inc
les
test
out
lcall
mov
loope
mov
cmp
in
sub
push
pop
repnz
fsubs
sarb
adc
pop
pop
out
cmp
out
test
push
clc
xchg
pop
mov
push
leave
dec
fwait
mov
cmp
dec
jle
push
mov
xchg
cmovl
daa
dec
repz
sahf
xor
jae
insl
xchg
adcb
sub
cmpsb
shll
push
scas
add
dec
in
or
in
xor
inc
cwtl
pop
inc
ret
pop
adc
fldcw
jmp
fstl
in
dec
std
std
mov
sbb
je
test
scas
xchg
dec
xchg
jae
ss
repz
xchg
push
or
xor
dec
test
add
sti
gs
adc
pop
inc
cltd
pop
mov
inc
jge
scas
int3
mov
adc
in
mov
pushf
xchg
leave
lods
cmc
dec
xchg
repz
ja
sbbl
ret
xor
enter
imul
mov
sub
or
negb
pushf
push
sub
mov
xchg
xor
pushf
fdivr
loopne
mov
test
int3
or
js
pop
cltd
sahf
daa
fwait
mov
daa
mov
jbe
mov
push
fmul
add
sub
not
sub
int
pop
loop
inc
sahf
test
cmpsb
push
push
xchg
testl
cmp
cs
fdivr
mov
repz
push
call
in
and
adc
xlat
mov
sbb
les
or
push
xor
jne
outsb
inc
xlat
stc
or
cmp
push
mov
ss
flds
lret
outsl
scas
jg
fcmove
add
fldt
movsl
add
sub
sbb
movsl
mov
or
pushf
mov
cld
loopne
fistpll
popf
jmp
dec
add
jo
or
dec
insb
xchg
ss
mov
nop
movsl
cwtl
fsub
cltd
pop
scas
jmp
cmp
push
dec
and
popa
cmp
ficoms
pop
roll
pop
lret
or
call
or
sarb
add
mov
or
fstpt
cmp
cs
sub
fs
insb
cwtl
pop
xorl
inc
and
jle
mov
movsl
add
adc
add
push
fnsave
xchg
mov
fcmovnb
je
dec
sbb
arpl
dec
dec
xchg
push
or
push
cltd
and
fsubr
cltd
bound
and
or
push
ret
jg
into
xor
inc
std
add
cmp
inc
clc
mov
push
mov
push
fnstcw
pop
cmp
aam
scas
sbb
mov
ja
xor
fidivrl
aaa
test
lahf
xchg
or
adc
adc
and
sbb
or
pop
cmp
adc
mov
jge
cltd
jmp
sub
out
mov
inc
jb
movsb
mov
sbb
xchg
ds
dec
icebp
jne
and
stos
push
sbb
xchg
gs
pop
sbb
or
xor
outsb
xchg
cmp
movsl
xchg
ret
fxch
jns
ficompl
inc
je
mov
push
jbe
xor
add
pushf
mov
ret
inc
and
xchg
ljmp
sqrtps
push
or
lfs
mov
inc
nop
movsl
test
in
out
sbb
inc
mov
popf
sarb
sub
jmp
xor
int
mov
iret
jl
sbb
mov
xchg
pop
dec
loop
pop
jno
rcr
sbb
push
push
push
xchg
leave
rorb
pushf
push
fcmovb
scas
jl
mov
pushf
jo
jbe
xlat
pop
frstor
jnp
cmp
cmp
dec
sbb
sbb
pop
xor
mov
rol
and
pop
int3
or
jg
cmp
iret
dec
lcall
int3
pop
jnp
add
sbb
ret
mov
sub
jl
aad
clc
mov
add
sarb
push
and
mov
aas
or
sahf
xchg
or
movsl
cmp
xlat
or
loopne
or
jecxz
dec
cmp
lcall
loopne
into
push
popa
hlt
loope
cld
push
popa
xor
rol
jle
adc
mov
sbb
and
imull
js
xor
hlt
mov
out
mov
xchg
nop
je
mov
mov
bound
mov
imul
int
into
and
and
sub
in
pusha
add
jmp
stc
and
pusha
jno
pop
sahf
dec
cmp
adc
inc
cs
int
jmp
or
jne
mov
outsb
adc
cmc
pop
clc
jg
popf
inc
cmp
inc
xor
bnd
xor
mov
jcxz
xor
addr16
int3
shrl
sbbb
add
jecxz
sbb
fistpll
cmc
sub
repz
mov
xor
sahf
mov
dec
sbb
adc
xchg
sbb
jp
mov
insl
fidivrl
ret
dec
jo
sub
inc
ds
xlat
ja
push
leave
jnp
sub
jae
shrl
mov
cltd
sbb
jg
xchg
out
es
movsb
into
and
sub
sbb
dec
jecxz,pt
fidivrl
lret
fwait
xchg
fnsave
mov
mov
jne
lods
or
dec
stos
lods
or
rcrl
sbb
mov
fwait
xor
testl
pop
jb
enter
jo
loope
mov
rcrb
cli
or
mov
imul
sub
mov
mov
aad
iret
xchg
insl
or
sub
inc
hlt
repnz
sbb
in
cltd
lock
mov
sbb
pop
cmp
sbb
inc
mov
and
mov
or
and
cmpsb
lock
lcall
mov
sahf
test
cmp
jle
fs
iret
cmpsb
fisttpl
lock
out
call
inc
xchg
andb
cmp
mov
mov
aam
pop
je
sti
fxch
fdivp
cwtl
ds
or
pop
pop
dec
sbbb
cmpsl
mov
lret
mov
in
fstps
mov
mov
int
lret
add
fwait
psubusw
ret
or
xchg
xchg
scas
gs
pop
mov
sbb
sbb
test
lods
mov
test
arpl
dec
mov
cmc
mov
pop
movsl
push
pop
push
bound
ret
jl
or
push
jb
leave
pop
lds
lea
sbb
xchg
bound
fxam
sbb
js
jns
xchg
or
es
out
mov
pop
adc
mov
push
repnz
js
scas
lahf
mov
jno
out
adc
pop
cmp
sub
pushf
loope
shlb
xchg
sbbb
test
sub
mov
bound
lret
pop
sbb
enter
mov
in
and
or
mov
clc
jne
jp
mov
dec
lods
sub
mov
outsl
mov
jg
stos
xor
sbbl
imul
pop
push
stc
sbb
mov
mov
adc
jp
ret
sbb
cs
in
mov
cs
ret
in
mov
test
cmp
out
and
fwait
jae
pop
xorl
lea
jg
cmpsl
mov
xor
aam
gs
pop
cltd
and
insl
cli
or
dec
mov
or
popf
add
lods
out
mov
out
inc
das
jne
mov
inc
mov
and
cmp
aam
or
fbstp
pop
pop
cmpsl
adc
addb
inc
in
test
loop
add
int3
mov
mov
xor
jb
sub
faddl
stc
repz
mov
ljmp
gs
mov
inc
ret
pop
xor
lock
and
add
pop
pop
sub
push
fnstcw
and
lahf
les
rclb
jle
sahf
test
sahf
cmp
sub
lock
incl
and
fbld
js
ss
jnp
cmp
cs
pop
xor
fisttps
xor
fisubl
cmp
jne
movl
cmp
movl
je
sub
mov
mov
mov
subl
xor
add
adc
xor
andl
xor
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
addl
push
xor
push
xor
mov
add
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
and
andl
xor
movl
movl
and
mov
mov
xor
xor
add
mov
orl
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sub
mov
sub
xor
mov
addl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
xor
xor
xor
sbb
mov
mov
mov
sub
imul
addl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
or
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
xor
mov
addl
sbb
mov
sub
mov
andl
xor
mov
mov
mov
dec
mov
andl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
jmp
test
icebp
arpl
scas
push
or
push
pop
bound
jb
clc
sub
pop
pop
mov
daa
in
xchg
jns
fs
imul
icebp
fisubrs
push
nop
or
into
mov
test
dec
mov
inc
fisubl
repnz
outsl
sbb
lcall
ret
dec
rcr
scas
aaa
cmc
sahf
jle
dec
xor
jne
idivb
jmp
xchg
add
pop
sbb
xor
loopne
cltd
push
mov
outsb
jb
shl
mov
inc
push
sahf
adc
push
add
arpl
arpl
outsb
xchg
and
ret
cmc
inc
xor
inc
mov
das
inc
mov
test
mov
insl
adc
clc
hlt
sbb
outsl
xor
scas
mov
sub
aaa
scas
pop
pop
mov
pop
jnp
ret
xor
ds
xchg
jns
xor
movsb
mov
popf
movb
add
sub
stc
xorb
insl
sub
mov
xchg
or
dec
sbb
add
iret
fsubl
test
xchg
imul
mov
pushf
ds
rdtsc
push
call
or
stos
lock
xchg
lret
push
or
xchg
jb
insl
test
mov
ja
cmc
js
cs
add
sub
cmp
xor
or
or
add
jl
fisubl
es
add
hlt
pop
sbb
mov
mov
jne
test
pop
int3
popa
add
mov
insb
and
cmc
jmp
sbb
cmc
out
dec
push
pop
adc
stos
mov
lret
jle
add
jl
cld
push
ficoml
dec
ret
lock
push
fstpl
and
inc
push
lahf
fistpll
icebp
aam
sahf
jae
sbb
jb
and
push
dec
adc
mov
int
push
mov
dec
clc
dec
int
cld
mov
icebp
cmp
imulb
adcb
sub
sub
jo
cmpsb
sub
mov
dec
mov
cld
cmp
nop
repz
and
int3
mov
loope
sub
jns
filds
mov
je
cmp
mov
ds
xlat
fidivs
shl
adc
mov
lods
pop
out
fldpi
inc
sbb
fsubs
mov
xchg
mov
je
pusha
jno
or
xor
les
pop
imul
push
int
push
mov
mov
adc
stc
jnp
rol
out
test
clc
jmp
add
data16
xor
xchg
adc
aas
testl
inc
inc
inc
sub
xchg
inc
mov
dec
xor
imul
xchg
pop
or
mov
or
cmpb
cli
decb
loopne
xlat
xor
ret
mov
mov
jne
dec
jo
cltd
lahf
das
in
jle
and
pop
lahf
push
cmpsl
movsb
xor
aad
mov
xchg
fdivrl
lods
mov
cmp
gs
dec
mov
lea
sbb
pop
sti
aam
pop
ds
xchg
js
fs
mov
sub
push
xor
sub
cmpsl
or
or
out
stos
and
imul
jmp
movsb
jnp
xchg
in
xor
test
push
push
in
mov
sbb
pop
dec
in
adc
testb
fidivrl
xchg
push
mov
inc
or
pop
in
mov
mov
loope
sbb
push
sbb
sbb
into
shrl
push
daa
xlat
lods
mov
loope
sarb
movq
push
mov
sub
sbb
movsl
or
push
out
pop
sub
loope
xchg
push
out
test
and
mov
iret
into
push
jmp
arpl
mov
or
aaa
fcomps
pop
mov
jo
nop
test
inc
cltd
addl
aas
fcoml
mov
gs
das
out
inc
rcr
out
lcall
test
mov
enter
sahf
rcll
jp
sbb
out
sbb
in
lret
bound
addr16
add
fadd
test
jecxz
lahf
addr16
lods
rorb
push
cli
fwait
mov
fdivs
sub
iret
into
jg
mov
pop
lcall
pop
decb
aas
call
cld
add
inc
imul
imul
in
stos
fadd
mov
dec
call
repz
cs
rorb
or
pushf
out
negb
and
jmp
mov
pop
mov
into
add
sbb
push
jp
xor
es
pop
lahf
fsubrl
mov
sub
cmc
cmp
cmp
mov
insl
pusha
xchg
sub
cmp
push
jno
jle
ficompl
xchg
jecxz
in
lods
jmp
mov
xchg
add
and
pop
dec
push
in
fcmovne
xor
out
pop
sbb
call
jns
shr
add
mov
incb
mov
inc
mov
mov
sbb
clc
cltd
dec
dec
daa
dec
movl
sbb
add
add
fcmovbe
pop
cmpsb
stos
lds
jmp
subl
jb
lock
inc
sti
adc
cld
test
jmp
movsb
dec
jle
addr16
push
rolb
pop
shl
int
adc
int
mov
inc
paddsw
jno
cmp
sbb
lret
mov
inc
dec
xchg
adc
mov
cli
popf
dec
outsl
lahf
pop
mov
mov
mov
jp
enter
leave
sbb
les
jmp
pop
iret
xor
ljmp
inc
pop
aaa
cmp
fstl
mov
fisubs
jg
push
stc
dec
cltd
lahf
mov
mov
out
addb
adc
or
fnstsw
xor
cmpsb
xor
push
movsb
movsb
jnp
jnp
orl
inc
jb
call
or
adc
lret
ret
mov
into
mov
pop
movsl
fsubr
shlb
ret
sahf
pop
or
test
popa
and
lret
xchg
mov
in
jns
mov
mov
pop
test
mov
aas
es
icebp
adc
add
in
leave
mov
imul
stc
fstps
mov
jl
mov
add
orb
das
sbb
lret
push
push
aad
pop
xlat
push
jb
inc
scas
out
ljmp
push
cmp
cmp
inc
in
testl
mov
cmp
inc
call
sub
mov
pusha
push
outsb
cmp
repz
add
fmull
cmp
das
and
orb
sub
inc
push
cmp
ss
inc
dec
pop
push
stos
dec
mov
cmc
pop
fs
add
and
push
jmp
lret
subl
xor
adc
xor
fisubrl
out
adc
cld
inc
mov
je
ret
cmp
and
js
jo
dec
and
jne
js
sbb
mov
int
sub
jg
out
inc
jo
sbb
sbb
sbb
dec
mov
pop
jne
mov
cmpsl
or
es
lods
sti
je
cmp
pushf
test
mov
xchg
addb
inc
cmp
gs
mov
lret
stc
cli
fldl
icebp
adc
jge
mov
cmp
adc
insb
pcmpgtb
aam
clc
cmp
push
fdivl
adc
or
movsl
cmp
lret
clc
inc
shrb
jmp
fbld
cmpsl
rolb
mov
cmpb
gs
mov
and
imul
ja
in
jmp
push
pop
push
je
cmp
jg
rolb
mov
into
pushf
sub
push
mov
in
xor
nop
push
repnz
fnstenv
cmp
out
aas
and
cmp
inc
les
gs
out
mov
jb
or
adc
fcompl
adc
test
xor
jns
dec
xlat
div
nop
push
lret
dec
rcrl
sub
mov
pop
clc
testl
inc
pusha
mov
or
faddl
fimuls
push
shr
push
repz
mov
test
test
xchg
mov
imul
mov
mov
pop
subl
out
push
rcrb
adc
in
adc
push
fldenv
ss
test
sub
es
out
sbb
inc
pop
jge
test
das
lcall
cmp
jns
adc
push
int3
sbb
fs
loop
mov
cmp
push
cltd
lods
cmpsl
or
and
insl
xchg
cmp
cmp
mov
popf
lds
mov
adc
popf
mov
ret
ret
xor
sbb
test
xchg
xchg
dec
or
dec
mov
mov
dec
pushf
pop
faddl
shl
aad
cld
lcall
xchg
cmpsl
mov
cmp
dec
jp
out
fstpt
mov
sti
jae
xchg
repnz
out
repnz
ja
mov
mul
fnstsw
cmp
addl
or
das
xlat
xchg
add
mov
sahf
pusha
shll
stc
mov
pop
das
fdivrs
xor
adc
mov
push
fstpl
mov
mov
fcmovu
mov
mov
daa
xor
push
xchg
fdivs
adc
repz
aad
jnp
xor
mov
mov
mov
cwtl
inc
movl
push
mov
shl
sub
lcall
pop
movsl
dec
clc
add
int
call
sarl
test
mov
fidivrs
inc
aaa
inc
push
adc
sub
pop
xor
adc
aam
inc
pop
mov
incb
cwtl
adc
or
outsl
pop
iret
jp
adc
sub
lret
mov
mov
adc
popa
aam
mov
lcall
sarb
push
mov
add
mov
imul
hlt
push
push
stc
cld
inc
shr
xor
add
xor
loop
mov
mov
js
cmc
or
pop
xor
out
test
jle
adc
ljmp
mov
mov
iret
test
mov
int
int3
mov
mov
rcll
dec
and
adc
mov
pop
nop
adc
add
pop
and
sti
mov
xor
cmp
mov
add
jp
aas
aaa
inc
cli
cld
cmpsb
mov
xlat
jnp
sub
fisttpl
or
push
dec
incb
add
mov
cmp
ss
adc
sub
inc
aas
add
push
pop
mov
add
adc
adc
jge
lret
cmc
or
pop
popa
xchg
insb
mov
xlat
pushf
leave
xchg
push
popw
out
std
shll
xor
dec
add
lret
cmpsb
push
js
cmc
sti
mov
push
imul
mov
adc
das
sub
int
cli
xor
or
aaa
pushf
cwtl
xor
in
cmp
pop
inc
mov
or
inc
or
jle
cmp
xchg
es
xor
scas
popa
movsb
jnp
xchg
xor
mov
jge
add
mov
sub
adc
loopne
cmp
out
mov
fwait
aam
movsl
xchg
xor
and
icebp
push
cltd
pop
lds
mov
notb
xor
ror
dec
test
inc
pop
sub
jmp
je
jnp
xchg
push
cmc
add
sarb
in
or
jg
in
repnz
mov
cmp
xchg
cs
sub
dec
shlb
aam
popl
bound
cmpsb
add
std
in
inc
xchg
fistpll
fistpl
shr
in
push
ljmp
data16
fs
inc
mov
roll
mov
push
stos
loop
mov
ss
xor
rclb
xchg
pop
dec
sub
clc
push
pop
pop
mov
dec
push
mov
in
pushf
out
mov
jecxz
rcrl
lret
mov
inc
cmp
adc
inc
aas
aad
xchg
mov
insb
hlt
shr
les
adc
and
into
stc
dec
xchg
inc
mov
js
ret
dec
sub
dec
icebp
shll
adc
test
jns
and
cmpsl
adc
imul
fstl
xorl
adc
sub
pushf
aaa
mov
ret
jnp
push
mov
fistpl
inc
in
fimull
std
jae
roll
or
test
mov
enter
xchg
enter
cmpsb
dec
jne
and
or
ret
out
imul
sahf
jmp
jecxz
mov
add
ds
pop
dec
int3
push
and
lahf
imul
lds
pusha
cs
xor
adc
xchg
nop
fwait
scas
outsl
cmp
lcall
int3
pop
test
int3
ret
jmp
add
leave
mov
fmuls
push
inc
int
mov
cmp
pop
xchg
mov
jbe
mov
lret
xor
or
push
sbb
dec
imul
jg
push
js
mov
xor
repnz
sarl
stos
mov
adc
inc
sub
and
inc
daa
data16
les
dec
das
mov
push
stos
mov
mov
fimull
lock
loop
std
out
push
arpl
push
mov
lcall
jmp
inc
cmp
loope
xchg
out
pusha
orl
and
inc
es
push
das
outsb
pop
cwtl
jecxz
cmp
mov
jb
xchg
repz
mov
stc
pop
arpl
and
loopne
add
ret
pop
or
jmp
mov
mov
sbb
rol
sbb
sahf
dec
jno
push
addr16
add
mov
sub
imulb
mov
iret
call
adc
in
cmp
cli
iret
das
mov
fwait
adc
pop
mov
mov
fisttpl
xchg
sub
jg
cmc
or
pop
push
push
push
das
jnp
int
scas
push
in
dec
out
fxam
cltd
pop
outsl
jge
cmpsb
sbb
aad
mov
leave
or
mov
xchg
mov
mov
repnz
rcrl
andb
push
jbe
test
push
mov
sbb
shlb
ret
imul
cli
mov
sti
pop
ja
xchg
mov
adc
jo
icebp
xchg
mov
adc
js
cltd
mov
ljmp
mov
imul
mov
lret
fcoml
sub
pop
pop
mov
sbb
cltd
ds
data16
xor
dec
addl
xchg
adc
enter
or
push
inc
dec
ret
pop
sbb
imul
sub
aaa
popf
xchg
testl
fs
test
popf
xchg
xor
mov
prefetch
mov
das
loope
insb
pop
stos
cmp
pop
sahf
sbb
lret
mov
cwtl
pop
lea
bnd
mov
rcrl
mov
fwait
push
lods
jmp
lods
jmp
jle
push
popf
rcll
das
fsubl
xchg
push
loope
filds
push
xchg
test
sti
pop
insb
insb
loope
lea
out
mov
es
ss
sbb
je
xchg
cmp
and
pcmpgtb
sub
mov
xor
aaa
mov
or
jecxz
xor
push
sbb
cmp
out
push
cwtl
or
repnz
cli
add
insb
lods
in
loope
push
mov
pop
cmp
test
test
imul
add
mov
or
pop
lods
dec
push
jnp
mov
insl
jo
ret
adc
push
push
es
lods
fldcw
in
add
daa
add
jge
loop
scas
lods
std
cmpsl
adc
sbb
stos
lock
xor
jge
loop
xchg
aas
dec
inc
push
lcall
push
cmp
int
outsb
stos
xor
movsb
xor
outsb
out
mov
mov
in
inc
jnp
inc
out
mov
rcl
fists
and
jae
cs
aad
inc
dec
jae
mov
mov
es
int
push
jae
inc
jo
xor
mov
push
jae
int3
mov
xchg
dec
push
pop
test
inc
push
and
andl
mov
mov
cltd
cmp
sbb
stc
ficoms
add
mov
movswl
fsubrl
in
push
mov
mov
jne
dec
jl
incl
pop
sbb
xlat
mov
int3
push
cli
pusha
inc
push
jne
aad
push
dec
lods
outsb
push
in
mov
sub
jmp
loop
mov
mov
lcall
sbbb
call
in
add
pop
das
push
dec
xchg
inc
lods
das
aas
lret
add
xor
sti
jnp
push
add
mov
push
jne
push
ljmp
mov
xchg
inc
push
xchg
xchg
xchg
clc
loopne
movsl
push
clc
daa
inc
inc
push
addb
sbb
mov
jnp
adc
leave
rcrb
xor
int3
pop
jmp
xchg
pop
cltd
xchg
fcoms
sub
adc
clc
mov
fdivl
out
fisubrs
dec
adc
jne
sbb
sbb
xchg
ret
cwtl
mov
sub
xchg
in
push
leave
mov
aad
inc
test
loopne
adc
mov
lds
aad
cmpsl
outsl
jb
enter
mov
test
roll
insl
push
mov
push
sbb
imul
mov
imul
jmp
scas
jmp
aas
xor
movsb
not
shl
movsb
int3
insb
xlat
push
out
sub
xor
iret
je
es
int3
in
dec
out
shrb
rcll
sub
push
dec
mov
xchg
sbb
fwait
jge
xchg
rolb
push
movsl
into
in
sbb
pop
mov
outsl
test
outsb
mov
int
popf
clc
adc
sahf
or
imul
pop
mov
adc
adc
jp
sti
test
or
sub
cwtl
mov
in
dec
test
sbb
rcrl
push
and
mov
lcall
aas
jns
ljmp
das
in
jae
outsl
push
jg
test
ret
cltd
xlat
pop
pop
ja
jp
add
pop
ror
jae
inc
adc
or
movsb
mov
cli
add
add
mov
daa
data16
jnp
sub
lds
adc
scas
clc
aam
mov
jbe
les
movsbl
xchg
ret
inc
mov
mov
mov
xor
sub
test
outsl
sarl
aad
shrb
add
mov
and
cld
out
lcall
jo
xchg
xor
icebp
and
xlat
int
iret
xchg
pop
insl
jne
pop
mulb
mov
fstl
std
pop
pushf
lahf
mov
frstor
daa
push
mov
jmp
add
aas
push
cltd
mov
mov
or
lcall
repz
adc
out
mov
lret
lds
cmp
add
xchg
lret
inc
jbe
lret
cltd
fs
mov
nop
dec
cltd
into
push
arpl
jmp
and
pop
and
jle
stos
test
iret
lock
mov
xor
arpl
sbb
out
fwait
dec
fisubs
jae
rclb
in
pop
cmp
iret
push
out
shll
outsl
mov
pop
push
xor
shrl
pop
sub
das
pop
shlb
xchg
push
jbe
mov
mov
dec
mov
xor
push
cvttps2pi
loop
out
repnz
inc
dec
jmp
insb
xchg
push
into
cltd
ret
sbb
sub
jnp
and
pop
xor
sti
pop
iret
cmpsb
mov
mov
jne
sub
ja
dec
and
mov
bound
inc
les
fs
sbb
push
mov
mov
jge
jae
icebp
cmp
rorb
sub
jp
cltd
shl
add
out
aam
js
scas
and
outsb
mov
xchg
mov
sar
insb
sbb
xchg
and
cmp
add
or
mov
and
dec
xchg
cmp
add
mov
imull
lret
shll
mov
mov
pop
sub
lods
jle
jecxz
push
cmp
and
pop
push
pop
in
dec
std
inc
aam
in
jnp
rclb
repz
or
xchg
adc
adc
mov
mov
or
ja
mov
cmp
jb
in
loope
fisubrl
dec
aad
cmp
fwait
adc
xchg
mov
xor
in
cli
push
pop
xchg
adc
xchg
adc
fs
xlat
cmp
adc
ljmp
je
insl
mov
mov
hlt
mov
and
xor
cmp
in
scas
mov
and
stc
adc
add
pop
jns
sub
cwtl
daa
sbb
pop
cmpsb
xchg
movsb
js
mov
inc
mov
hlt
notb
inc
ret
cmp
mov
adc
scas
int
jnp
inc
cmp
loope
xor
test
scas
cld
jne
pop
dec
fsubrl
xor
ljmp
mov
mov
cmc
cmc
movsl
pop
xchg
sub
jecxz
mov
enter
add
or
scas
jecxz
aad
mov
inc
jp
mov
pop
dec
mov
xor
jnp
mov
sub
add
cltd
pop
or
sbb
push
push
popa
sub
xchg
xor
outsl
pop
xchg
iret
push
pop
sqrtps
sub
cmpsb
mov
sbb
xor
mov
lret
or
jg
call
pop
sub
push
sahf
shlb
mov
jae
mov
outsl
mov
leave
cmpsb
popa
fstpt
bound
mov
cmp
mov
jnp
mov
int3
mov
ret
pop
data16
loopne
neg
jmp
clc
xor
push
movhps
mov
cmp
insb
xchg
dec
int
push
pop
aas
popa
dec
scas
dec
pop
mov
inc
outsb
es
ja
rclb
leave
out
ljmp
jo
or
mov
dec
pop
cmp
aaa
cmpl
inc
cmp
mov
push
mov
ja
or
ja
popf
es
xchg
or
das
cmc
dec
sbb
negb
ret
adc
xchg
lock
mov
or
mov
repz
mov
lods
nop
out
add
enter
jns
int
fistpl
mov
mov
negl
fidivl
xor
inc
push
xor
inc
adc
orl
test
stos
rorl
fcomps
inc
xor
icebp
jle
cmp
cmc
int3
into
ljmp
mov
test
and
xchg
push
jge
std
pop
rcl
dec
das
dec
cwtl
and
fnstenv
xor
inc
cwtl
test
mov
int3
jp
or
dec
cmc
lret
mov
out
out
adc
sub
lods
pop
or
outsb
cld
jmp
mov
data16
adc
jecxz
mov
int
fwait
and
addr16
loopne
clc
int3
xor
jo
mov
or
divb
xlat
inc
pop
and
pop
xor
sarl
xor
xor
mov
out
sbb
imul
daa
inc
sub
pop
or
fwait
xchg
jo
bswap
and
cmp
xchg
iret
pop
ss
stos
mov
add
add
lods
xor
insl
lret
jmp
sub
sarl
push
int
idivl
add
pushf
jp
push
stos
push
sbb
pop
ret
loopne
cmp
test
fwait
insb
bound
or
adc
in
stos
jmp
in
push
push
je
push
std
inc
shll
cmpsb
nop
int
add
pop
fisubs
jns
or
jge
fsts
cmp
loopne
outsl
orb
loopne
jnp
in
sti
sbb
ds
and
outsl
mov
popf
ret
test
sub
icebp
mov
push
or
xor
mov
xor
sbb
xor
int
lds
lock
aam
xor
lds
mov
cmp
aad
popa
mov
fs
inc
adc
test
pop
fmuls
sub
les
cmp
daa
push
roll
add
jb
xchg
push
test
scas
or
stos
push
push
lea
mov
jnp
pop
clc
insl
ficoml
jne
inc
mov
dec
inc
xchg
mov
leave
mov
in
fs
cmc
push
imul
jle,pt
out
sar
or
aam
mov
in
pop
or
loopne
data16
dec
in
or
jo
push
xchg
mov
add
out
and
repnz
mov
jmp
lods
fcmovu
mov
shl
sbb
sbbb
inc
lods
cmp
fdivs
shlb
push
loopne
inc
testb
pop
addr16
push
call
sbb
adc
xchg
movsb
popa
and
cwtl
loope
ret
lret
stc
mov
scas
inc
mov
leavew
lcall
lcall
sbb
testb
std
mov
and
icebp
addl
and
jecxz
stc
incl
hlt
xchg
xchg
cmp
movsb
aaa
or
js
stc
adc
int3
mov
es
fwait
pop
jb
stc
push
dec
mov
in
repz
dec
popa
testl
and
inc
loop
or
jns
nop
sti
cld
loopne
dec
and
xor
jnp
sbb
pop
shll
jne
inc
adc
mov
dec
xchg
mov
jbe
mov
stos
int3
dec
adc
imul
sti
dec
lods
sub
jl
add
jge,pt
xchg
inc
add
ret
sbb
test
jmp
ds
sub
sub
push
out
pusha
cmp
mov
jne
scas
clc
sub
fbld
sub
in
sbb
pop
popl
rorl
jbe
sub
stos
andl
popf
jp
sbb
or
pop
pop
jae
pop
push
test
or
divl
adc
sbb
and
cmpsl
dec
out
add
mov
jp
enter
aam
stos
sbb
stc
xor
ret
push
xor
jo
and
xor
addr16
xor
xchg
bound
pop
dec
mov
sti
ljmp
inc
push
push
sbb
and
dec
mov
cmp
sbb
ljmp
xor
jl
lcall
pop
mov
mul
sbb
pop
mov
jp
fwait
adc
inc
adc
ret
negb
data16
cli
outsb
lahf
sbb
inc
lods
xor
xor
loop
mul
pushw
leave
dec
add
xor
dec
sub
lea
into
or
scas
xor
pop
test
push
punpckhdq
add
dec
pop
aad
or
aas
lods
sub
repnz
in
xchg
pop
sub
jns,pt
mov
sbb
es
je
loopne,pt
adc
sbb
lahf
sub
lahf
xor
sub
mov
repnz
adc
add
sub
pop
mov
bsf
push
or
mov
xor
es
add
jns
mov
lcall
and
inc
push
mulb
outsl
scas
sub
aam
loopne
mov
stc
sahf
push
stos
dec
inc
addl
pop
dec
and
mov
add
pusha
sub
sub
cmp
lcall
mov
add
fs
lret
scas
adc
inc
jecxz
sbbl
repz
loop
and
adc
div
dec
jno
cmp
fs
mov
mov
hlt
test
xchg
addr16
sub
pop
lods
sub
mov
xor
push
outsb
lock
shl
sub
mov
mov
sub
mov
test
adc
jp
icebp
jb
inc
imul
sbb
bound
dec
cmpsl
jns
stos
cmc
int
cs
jge
test
mov
push
cs
adc
pop
cld
pop
insl
aas
imul
xchg
inc
insl
mov
in
cmp
test
cwtl
or
add
fdivrs
dec
adc
inc
adc
mov
jecxz
add
inc
fdivrs
pushf
and
lds
dec
dec
inc
push
neg
mov
mov
push
jmp
enter
or
sbbb
sub
nop
lock
and
lea
cs
sbb
cli
pop
push
sbbl
mov
xchg
mov
or
pusha
ret
fmuls
ficomps
push
add
push
push
int3
add
xlat
jno
in
add
push
dec
loopne
imul
adc
pop
dec
jbe
push
cld
shll
fs
inc
clc
data16
in
out
pop
jmp
add
loopne
in
rolb
jne
ja
out
cmp
into
jmp
mov
dec
sbb
les
inc
call
push
hlt
rcll
push
mov
mov
and
cmp
xchg
or
dec
ficompl
hlt
xchg
cmpsl
fnsave
xchg
cmc
out
push
adc
cs
movsl
add
scas
insb
and
cmp
pop
ss
mov
lds
nop
imul
je
inc
out
add
sub
jno
mov
test
fwait
adc
and
ja
jo
jle
fidivl
add
subl
xchg
sub
jb
repnz
xor
sub
test
testb
aaa
sti
mov
add
mov
popf
sar
xor
cmp
arpl
mov
inc
sub
push
testb
cmpsl
pop
and
jae
dec
dec
jmp
mov
movl
mov
push
mov
scas
pusha
out
std
stc
jp
pop
mov
dec
pushf
icebp
sub
cld
cmc
iret
add
lcall
mov
dec
lahf
and
ret
fs
sti
and
add
fstl
adc
xor
cli
dec
sbb
mov
loopne
mov
jg
dec
push
rcrl
out
sub
sbb
mov
scas
push
imul
adc
push
idivl
hlt
movsl
xor
addl
push
push
subb
lcall
mov
stos
imul
dec
outsl
xchg
and
lea
pusha
cmpsb
fdivrl
pop
addl
adc
or
stos
or
test
cwtl
or
jno
mov
shlb
scas
rcrb
into
and
jge
mov
popa
pop
push
or
mov
jne
lods
fildl
sbb
xchg
rorl
adc
xchg
scas
dec
xchg
mov
jl
pop
mov
sub
xchg
jle
cmp
in
xlat
push
push
inc
insb
jp
mov
mov
ss
imul
mov
adc
sbb
cmp
add
inc
adc
push
movsb
shrb
cs
iret
sbb
sub
stos
xor
into
pop
adc
fistps
out
in
adcb
mov
popa
rcll
ret
aas
fsubl
jae
jb
add
or
xor
mov
bound
das
xor
jae
movsb
aaa
sbb
mov
sti
loope
ss
shll
add
shl
xchg
xchg
std
ljmp
push
stc
out
sahf
xchg
add
xchg
add
jns
repnz
dec
das
cmp
xor
out
and
stos
orl
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
jmp
jp
int
ret
add
pop
cltd
and
bound
bound
bound
inc
add
aas
das
push
jle
mov
pushf
jmp
jmp
popa
pop
xor
bound
push
in
stc
or
xchg
outsb
mov
pusha
jne
rolw
inc
jb
out
movsb
pop
and
scas
inc
jp
mov
push
mov
sub
sub
xchg
lret
dec
inc
xchg
or
adc
pop
inc
sub
in
lock
repz
addr16
ret
or
pusha
mov
mov
jg
adc
lea
cld
inc
popa
xor
jl
push
cwtl
loope
mov
cmp
mov
fwait
out
dec
jae
sarl
pop
mov
outsl
xchg
sbb
nop
add
jo
xlat
ret
fildll
pop
mov
jmp
gs
inc
and
jbe
mov
test
and
sub
pushf
jl
adc
add
mov
inc
mov
lods
faddl
add
scas
xor
sub
stos
xchg
scas
mov
xchg
movsl
inc
mov
stos
push
scas
mov
icebp
int3
imul
mov
mov
cltd
adc
in
frndint
insb
mov
xorl
mov
push
xchg
aaa
add
lods
inc
arpl
ljmp
pop
adc
mov
das
clc
icebp
cmp
sub
in
loope
pop
or
pushf
into
outsl
lahf
movsl
pop
and
sub
aam
cli
into
cwtl
mov
imul
inc
jg
cmpsl
push
andl
ss
ror
out
test
mov
lock
pop
lea
push
pusha
mov
ret
lds
loopne
mov
in
int3
xor
mov
call
inc
mov
dec
jge
movsb
rorb
push
pop
int
sub
stos
cmp
jne
stos
xchg
mov
out
aad
test
lods
sbb
rep
mov
and
mov
hlt
dec
insl
sbb
or
cmp
hlt
mov
push
sub
loope
push
rolb
rolb
push
decl
pop
outsl
mov
push
pop
xchg
lea
test
pop
add
insb
adc
es
lahf
push
push
xor
idivb
and
jb
and
andb
aad
mov
movsl
mov
mov
loop
or
dec
mov
cmc
jge
dec
aad
dec
repz
mov
cltd
mov
inc
dec
adc
cmpsb
inc
dec
cmp
pop
icebp
push
popa
outsb
clc
data16
hlt
push
jns
inc
test
xor
jo
arpl
sub
sbb
inc
sub
dec
xor
inc
sahf
and
and
xchg
adcb
std
or
sub
fcoml
inc
add
iret
mov
das
jl
call
movsb
pop
pop
aas
push
scas
nop
pop
push
dec
dec
jno
mov
movl
test
out
jns
scas
inc
or
sbb
inc
push
ucomiss
out
loope
fstpt
jb
sub
fidivl
sub
lock
addr16
pop
push
or
mov
lock
mov
push
outsb
cltd
cmpsb
icebp
aad
lea
push
add
lea
mov
mov
jae
aas
bound
pushf
inc
sub
mov
jle
iret
xchg
sub
popa
sub
sti
loope
test
les
adc
push
mov
jl
and
pop
arpl
dec
mov
popf
es
insb
pop
cmp
mov
cmp
xchg
push
lods
outsb
dec
fwait
pusha
call
mov
add
pop
lahf
ljmp
rorb
nop
scas
addr16
cmpsb
loop
aas
insb
hlt
lret
jo
mov
icebp
jnp
push
inc
and
sbb
stos
outsl
int
jnp
scas
inc
jmp
xor
int3
push
loop
push
dec
cmp
mov
and
out
push
lcall
sub
shlb
fldenv
push
mov
mov
stos
push
ds
scas
sbb
sub
inc
and
int
cmpsl
jecxz
dec
cltd
jp
xchg
xchg
ds
jo
jne
mov
and
push
mov
add
dec
fadds
push
add
je
and
bound
xorl
add
arpl
dec
adc
mov
outsl
push
add
bound
les
inc
adc
pop
into
iret
test
fmull
adc
cmovae
jmp
inc
lret
inc
adc
sbb
aas
cmp
mov
push
les
mov
ds
adc
xchg
inc
jb
sub
mov
cld
jp
mov
add
call
xchg
test
sub
push
in
sar
sub
and
lods
sahf
adc
xchg
cmpsb
out
inc
inc
repz
orb
xchg
lret
insb
rcrl
xchg
in
ret
stos
lcall
insl
jle
in
test
or
leave
or
adc
or
push
aam
decl
pushl
fists
push
lock
fistpll
push
addr16
adc
je
hlt
jae
fistpll
mov
imul
testb
movsl
pushl
sti
aam
dec
add
int3
xchg
mov
in
test
jecxz
addb
test
sahf
scas
sahf
ds
nop
daa
loope
push
lods
mov
movsl
pop
lcall
adc
cmp
cs
push
xor
mov
lea
lods
pop
adc
fisubl
les
cmp
out
icebp
mov
lods
movsl
loop
in
leave
push
and
call
xchg
sarb
pusha
jmp
cmp
mov
jp
cmp
mov
or
sbb
sar
sbb
pop
in
leave
sub
jmp
fadd
pop
and
and
out
das
incb
push
lret
inc
sub
mov
inc
bnd
mov
lret
sbb
inc
push
arpl
orb
jo
xchg
shll
mov
clc
mov
jbe
ss
xchg
repz
pop
jnp
pop
jno
pop
pusha
push
cs
stc
xor
push
loope
icebp
setg
jge
gs
inc
stos
push
lahf
int3
hlt
scas
fs
fwait
or
out
gs
cmc
out
mov
mov
xor
int
mov
sarl
insl
mov
and
xor
inc
mov
mov
hlt
jmp
das
jecxz
imul
insl
ss
sub
add
cmp
ss
pop
xor
cmp
xor
xchg
movsb
jg
push
xlat
add
or
and
jnp
adc
push
cld
imul
rolb
out
out
mov
xchg
sbb
daa
lahf
loope
mov
rcll
push
inc
jp
repnz
mov
lret
out
stc
movsb
testl
fwait
out
mov
mov
sbb
dec
lods
mov
stc
outsl
xchg
inc
mov
pop
mov
sub
sbb
mov
aad
mov
scas
adc
fwait
mov
inc
lock
notb
out
and
or
or
add
in
das
push
negb
data16
jae
sub
cmp
roll
dec
dec
mov
cmp
rol
jb
xchg
mov
dec
cmp
aam
xor
cld
stos
call
mov
pop
mov
rcrl
ljmp
sbb
lahf
stos
and
jno
sti
dec
push
in
stos
clc
pop
jmp
ljmp
inc
cld
in
icebp
in
lock
rclb
jno
stos
xor
clc
daa
leave
adc
sahf
mov
push
insl
arpl
inc
pusha
gs
or
hlt
dec
outsl
dec
pushf
sbb
out
cmp
sbb
rcrb
pop
mov
jge
and
mov
and
sbb
sar
xor
ss
inc
stc
gs
jp
add
subl
mov
mov
push
sbb
push
mov
pop
xchg
push
imul
inc
repnz
adc
pop
adc
popa
imul
mov
mov
mul
roll
subl
pusha
xchg
cmp
fcoms
sub
ret
sbb
imul
mov
or
push
leave
adc
cmp
fimull
in
test
cmp
insl
mov
add
mov
pop
jp
dec
fisubrs
push
mov
outsb
scas
mov
out
xlat
add
cmpsl
adc
mov
push
mov
and
fcompl
mov
mov
xor
and
es
pushf
ret
and
test
es
sub
fwait
lret
or
clc
adc
xor
imulb
adc
ror
or
mov
movsb
std
mov
cld
movsl
xor
out
stos
jo
scas
push
sbb
xchg
cmpsl
dec
sub
add
test
adc
mov
xor
sub
dec
jbe
xchg
sub
cwtl
call
mov
scas
inc
in
sarb
bound
dec
push
push
dec
push
in
lds
jle
xchg
es
jns
sub
pop
add
mov
push
adc
adc
xchg
cwtl
inc
sub
jge
mov
ja
xchg
loopne
cmp
shll
loopne
dec
ja
adc
adc
push
fsubrl
fs
ja
xchg
test
out
jne
dec
addr16
mov
subb
aam
fisttps
jbe
fistpl
mov
fwait
push
sbb
mov
jae
ljmp
adc
jo
rclb
dec
test
cmp
xor
loopne
scas
icebp
fldl2e
jecxz
lret
and
into
je
ficoml
sbbl
les
dec
xchg
add
xlat
push
jns
xor
scas
mov
pop
dec
gs
cmc
add
popa
cltd
xchg
in
mov
mov
or
push
cmp
add
jmp
xor
stos
popf
imul
inc
push
adc
decb
jne
dec
and
xchg
idivl
jae
je
pop
ret
lahf
int
ds
mov
pop
pop
jne
lcall
inc
jne
addl
popf
sub
jne
je
sub
push
adcb
xor
test
ja
std
cs
movsl
push
out
pop
mov
jmp
xchg
dec
and
nopl
adc
xor
lret
xor
jnp
imul
jmp
lret
lock
mov
imull
push
cmc
fnstenv
mull
repz
and
outsb
lea
xor
xchg
adc
popw
sbb
and
dec
adc
pop
gs
xor
shrl
mov
mov
fdivs
push
or
xorl
and
inc
repnz
push
arpl
xor
xchg
sub
leave
mov
out
adc
xchg
or
js
mov
cmc
push
adc
ss
adc
push
jo
sub
fsubl
xor
cmc
dec
cwtl
insb
jae
icebp
repz
jge
push
fcompl
xchg
pop
stos
clc
mov
mov
adc
aaa
xor
jge
mov
xchg
clc
loope
cmp
pop
addr16
add
test
ljmp
icebp
and
addr16
mov
add
fstpl
out
andl
shl
popf
xor
dec
push
stos
cmp
dec
cmp
jae
cmpsl
sub
mov
std
sub
jb
xor
setne
std
adc
add
lahf
push
and
dec
lods
out
adc
cmp
shlb
sti
popf
das
loopne
loop
xchg
push
les
mov
sub
decl
outsl
add
aam
pop
ljmp
stos
cmp
pop
lock
cli
mov
add
call
sahf
rcl
push
pop
adc
hlt
test
jge
push
mov
repnz
imul
jno
lret
lock
fs
repnz
call
leave
bound
lcall
pop
gs
pop
stos
add
mov
mov
lret
push
dec
inc
stos
insb
pop
jnp
jecxz
std
inc
ret
pop
add
xor
mov
sbb
pushf
cmc
cmp
fidivrs
icebp
repnz
dec
jmp
imul
jo
mov
push
xchg
xchg
jae
insb
mov
jmp
push
outsb
and
ljmp
jmp
cmp
cmp
insb
fs
test
insl
xchg
push
inc
add
xchg
jp
test
xchg
push
add
outsl
int
mov
lahf
mov
push
cmpsb
lea
pop
iret
sub
lret
sbb
mov
pop
push
cwtl
jae
dec
sahf
inc
xor
inc
fst
mov
bnd
and
sbb
imul
and
mov
in
adc
scas
test
mov
imul
push
cmp
nop
ret
push
cli
in
add
and
inc
ds
jecxz
push
cmp
dec
adc
cmp
test
mov
jp
es
flds
mov
or
scas
sti
add
and
mov
addr16
pop
or
cmpsb
jo
rcll
sub
les
mov
ds
dec
cmpsl
rcll
mov
imul
add
mov
lds
pop
sub
aas
mov
mov
xor
and
push
mov
inc
sbb
sub
sti
xchg
mov
mov
xor
dec
sub
sbb
pop
sarb
pop
cmp
lret
add
clc
loopne
jns
ret
movsl
movsl
push
sub
jae
testl
test
test
or
xor
enter
lret
push
lods
pusha
jbe
jne
loop
push
out
push
je
mov
aas
lret
mov
or
test
sbb
pop
jge
sub
out
ljmp
mov
scas
frstor
mov
or
loope
repnz
mov
mov
xchg
sbb
lahf
std
and
push
sbb
repz
rcrl
add
dec
loope
xor
loope
xlat
push
rorb
jno,pt
xchg
lahf
outsb
in
movsl
enter
mov
mov
mov
fdivl
mov
fcoms
popa
mov
xor
inc
or
adc
into
dec
push
icebp
mov
sub
cwtl
repnz
cmpb
aad
mov
call
sub
dec
repz
sbb
repz
jg
pop
adc
push
add
test
cmp
outsb
dec
push
mov
sti
pop
cmp
pop
and
lds
or
adc
pop
loop
push
xchg
test
add
adc
add
add
sbb
xor
test
mov
out
xor
sbb
insl
cmp
xor
fs
jge
jns
pop
out
mov
jmp
xchg
daa
adc
lods
rorl
rclb
xchg
push
lds
loopne
xor
aad
sbb
mov
inc
dec
adcb
int3
sub
mov
leave
stos
lods
aam
pop
data16
es
nop
dec
fiaddl
cmp
dec
scas
adc
jne,pt
and
pop
out
pusha
nop
cs
mov
xor
and
mov
xchg
insl
scas
jnp
adc
fs
es
ja
in
dec
adc
add
inc
inc
xor
jne
test
imul
loope
jb
sbb
xchg
es
test
push
sbb
int
gs
dec
add
inc
jns
das
xor
std
fsub
divb
and
imul
addr16
rep
ss
adc
movsb
and
pop
in
ret
arpl
rolb
sbb
mov
pop
inc
and
ljmp
fucomi
lock
pop
test
dec
mov
mov
movsl
mov
loopne
add
mov
or
sub
pop
sti
jns
jne
test
inc
cmpsl
std
jnp
or
clc
nop
popa
mov
pop
mov
cmpsl
mov
inc
fistl
sub
cwtd
push
adc
fisttpll
jbe
lods
push
push
mov
cmp
sub
or
pop
insl
lcall
push
and
leave
pop
dec
mov
out
out
mov
sysexit
add
outsb
ret
test
adc
aad
mov
dec
dec
sti
test
popa
scas
outsl
outsb
pop
stos
mov
fiadds
sahf
cld
sub
into
cmp
jmp
gs
mov
cmpsb
fistpll
imul
adc
addr16
test
decb
inc
jmp
cmpl
xchg
pop
adc
aaa
adc
lret
dec
xor
scas
dec
in
enter
out
sti
sbb
adc
pop
jo
in
push
out
push
call
push
xor
xchg
xchg
pop
mov
mov
dec
mov
adc
fwait
icebp
pop
cmp
nop
ds
push
mov
loop
out
jae
imul
shlb
mov
inc
xlat
mov
lret
inc
mov
iret
or
mov
aas
fs
jp
es
in
popa
sar
jbe
push
add
inc
jp
insb
in
or
adc
jg
mov
and
cmc
sbb
lods
lret
xlat
test
in
std
sbb
mov
or
dec
shrb
std
jecxz
in
popa
push
pop
push
es
aam
sub
fldenv
pop
sbb
imull
movsb
jae
xchg
cli
xchg
enter
scas
movsl
insb
icebp
push
inc
xor
stos
fsubs
jle
xor
jecxz
hlt
call
fsubl
or
arpl
sbb
gs
adc
enter
cmp
push
in
xor
jp
testb
sar
jp
std
fldt
mov
fs
arpl
hlt
repnz
xchg
js
in
mov
pop
test
dec
jge
and
test
movsb
push
and
in
cs
dec
cmp
xchg
xchg
cmp
cwtl
dec
xchg
dec
adc
mov
ja
mov
push
and
push
aaa
dec
dec
hlt
or
xchg
dec
add
fisttpll
mov
outsl
sarl
pop
and
sbb
add
lds
add
mov
scas
fcmovbe
sub
cs
cmp
loope
mov
mov
jl
jl
addr16
dec
dec
push
in
mov
adc
adc
adc
stc
push
scas
loop
dec
add
sbb
mov
add
in
push
adc
inc
dec
cs
inc
test
or
inc
jg
insl
lock
adc
xchg
shl
push
inc
push
inc
cmp
pop
aad
andb
push
fcomip
jg
aad
push
rcrl
in
std
jno
test
push
push
jo
mov
insl
or
push
dec
repz
addr16
jge
cmc
loop
mov
ds
icebp
stos
ret
or
fdivp
pop
leave
push
dec
jnp
data16
cmc
mov
stos
inc
fsubrs
movsl
stos
and
sahf
mov
nop
imul
xchg
adc
in
sar
dec
pusha
fadd
xchg
iret
add
gs
or
sub
push
and
dec
arpl
pop
enter
flds
adc
add
shr
dec
cmp
push
dec
and
mov
add
arpl
shll
out
loope
cmp
sub
mov
out
add
scas
enter
dec
mov
xchg
pop
dec
dec
dec
xchg
pushf
pusha
jnp
push
sbb
and
pop
xchg
int
into
loope
mov
cmc
aas
repz
push
xchg
repz
cmpsb
repz
fwait
adc
and
sub
adc
in
leave
testb
cmp
mov
ljmp
mulb
dec
cli
mov
pop
jp
mov
scas
dec
inc
pop
inc
push
idivb
add
scas
lcall
iret
sub
dec
push
sub
fiaddl
push
pop
ficomps
push
push
stos
lds
mov
ds
scas
pop
sbb
xchg
adc
sbb
and
jb
insl
sbb
inc
xor
inc
data16
idiv
lahf
or
pop
pop
dec
xchg
add
mov
sti
dec
sbb
cmp
andb
cmpsl
push
ljmp
and
inc
or
push
dec
inc
pop
loopne
pop
sahf
sahf
and
leave
outsl
mov
repnz
push
loope
inc
or
adc
xor
iret
cli
lock
add
clc
pushf
rcrl
cmpsb
orl
xlat
jo
sarb
sbb
mov
jae
jecxz
push
fisttpl
into
loopne
or
xchg
lods
daa
or
aam
mov
inc
cmp
xchg
out
add
cs
push
mov
nop
aam
ds
xor
mov
addl
jmp
clc
fdivrp
xor
pop
enter
aaa
pusha
xchg
adc
pop
rcl
out
in
cmpsb
in
dec
pop
test
outsl
imul
mov
sub
or
mov
mov
sbb
mov
roll
testb
sbb
jg
test
gs
xchg
pop
sub
daa
pop
mov
xchg
jecxz
rol
stos
xchg
push
insl
and
stos
cld
sub
mov
mov
mov
into
shll
sbb
sbb
pop
gs
cmpsl
ret
mov
loop
fcompl
xchg
stc
fwait
daa
dec
add
mov
xchg
jle
clc
ds
es
xor
aam
pop
dec
cld
push
fsub
cmp
cmp
stos
movsb
lods
es
pop
ret
push
push
das
adc
sahf
sahf
cmp
cmc
adc
jae
popf
push
test
pushf
mov
xchg
push
xor
movsl
mov
aam
mov
outsl
nop
addr16
in
push
inc
out
lret
inc
dec
sbb
in
cmc
pusha
sti
push
jo
or
xor
int3
ljmp
dec
sbb
xor
les
es
and
inc
movsl
stos
xchg
lret
adc
sbb
pop
cmp
call
push
mov
test
mov
mov
fwait
negb
mov
es
mov
std
jecxz
dec
xor
jp
jae
inc
scas
dec
jge
in
jb
xchg
xor
jecxz
out
test
clc
jp
inc
cmp
aam
cld
cltd
in
xlat
push
daa
sub
in
les
pop
ds
outsb
les
stc
cwtl
mov
mov
sbb
dec
pop
in
gs
dec
imul
add
int3
jne
into
sub
push
js
dec
les
add
scas
adc
test
scas
sbb
imul
pop
lret
enter
or
lret
fstl
jp
movsl
dec
adc
sub
adc
popa
inc
mov
xchg
sub
divl
and
jbe
cmpsl
aas
lods
mov
pop
inc
out
push
aam
sbb
out
mov
es
jbe
or
and
mov
addb
repnz
lret
mov
mov
repnz
mov
dec
bound
xor
push
addr16
ja
mov
pusha
repz
insl
mov
push
fidivrl
dec
mov
add
xchg
loope
test
cwtl
lcall
inc
push
inc
and
xor
popa
or
xor
das
jle
inc
inc
sub
or
inc
sbb
xor
std
imul
xchg
ficomps
cmp
gs
mov
rcrb
xor
sub
xchg
sub
mov
pop
push
lcall
push
loope
cli
loopne
jmp
pop
outsl
push
rcrb
push
cmp
and
cmp
and
adc
test
xchg
adc
outsl
mov
jp
outsb
fnstcw
sub
inc
xchg
mov
stos
mov
cltd
mov
aas
cmp
dec
orl
ss
int3
out
loop
add
xchg
into
stc
dec
aam
cmpsl
movsl
push
push
sbb
outsb
call
popf
inc
sbb
into
push
stos
or
xorl
push
subl
jne
jnp
add
int
pop
or
fsubrs
shll
xlat
ret
jge
jmp
cwtl
mov
xchg
xchg
pop
mov
aas
push
je
shlb
inc
test
mov
jge
mov
out
pop
pop
imul
jmp
std
xlat
jge,pt
ret
push
repnz
shlb
sub
pop
inc
clc
test
sbb
add
jmp
push
mov
push
insb
sbb
fists
int3
popa
sbb
nop
jecxz
sbb
adc
add
add
inc
mov
push
add
mov
sub
xor
rolb
xor
fwait
jle
xor
sbb
cmp
das
jmp
pop
cmp
pushf
popl
jbe
xchg
mov
jecxz
or
jbe
push
std
cmp
hlt
mull
mov
dec
cmp
mov
inc
imul
testb
cmovbe
push
lea
adcl
insl
stos
shrb
icebp
and
ja
into
inc
cmpsb
mov
jbe
pop
sbb
mov
test
mov
jno
mov
inc
push
or
hlt
sbb
jle
dec
sbb
fs
adc
mov
in
test
nop
pop
fadd
xchg
dec
sbb
mov
lock
xchg
cmp
xor
inc
pushf
frstor
insb
push
or
iret
test
popf
xchg
inc
out
add
inc
xchg
xchg
jmp
sti
add
cli
mov
and
fisubrs
pop
rcll
adc
inc
cmp
sbb
sbb
out
cld
sub
mov
dec
sub
imul
popf
dec
imul
dec
xor
and
das
sbb
pop
inc
sub
dec
xor
sahf
stc
loop
sub
outsl
pop
cmp
jg
lock
nop
xchg
icebp
sar
mov
dec
rcrb
cmc
xor
or
cmp
into
xor
cmpsb
dec
cmpsb
cmp
aaa
and
mov
cmc
mov
cmp
ret
push
lods
add
fwait
jns
sarl
mov
mov
nop
loope
pop
sbb
loopne
jge
jmp
adc
dec
ror
mov
movsb
cmc
out
jge
push
gs
aas
add
or
les
hlt
arpl
lret
in
int
jp
xorb
push
push
jo
call
lret
cmpsb
rcl
adc
sbb
iret
mov
sub
mov
mov
cmpsl
mov
cmc
xchg
jbe
cmp
add
dec
sub
das
xor
add
cld
sub
adc
lock
add
insb
data16
add
dec
sub
add
add
fs
pusha
leave
mov
cmp
push
sahf
xor
add
addr16
xor
ret
jno
mov
push
jno
pop
aad
popa
aad
cs
sarb
sub
inc
cltd
pop
add
and
xchg
aaa
testb
xchg
jmp
mov
and
cmp
xor
sbb
jle
arpl
shll
pop
jecxz
out
adc
add
pop
push
rorb
dec
xchg
cmpsl
inc
mov
push
int
js
fsts
xor
icebp
test
and
jl
ds
faddl
add
pop
popa
cmp
rolb
sub
imul
mov
out
test
and
pushf
test
xor
rorl
in
xor
pop
mov
adc
push
adc
sarb
push
mov
mov
shrb
pop
sbb
sub
mov
mov
cwtl
aaa
or
out
adc
scas
xchg
fidivs
adc
outsl
rcrb
xor
movsb
cmp
jge
fwait
ds
out
lods
add
testl
rcl
rcrl
mov
fs
out
lcall
insb
mov
mov
push
test
shrl
adc
mov
and
clc
das
push
cmp
xor
insl
iret
jnp
jmp
inc
cmpsb
push
mov
or
mov
and
in
out
mov
test
fwait
and
mov
daa
mov
push
iret
jne
mov
int3
test
je
insb
sbbl
push
gs
or
mov
loop
addr16
inc
mov
add
jecxz
imul
jmp
pop
cwtl
pop
push
xchg
testl
xchg
sub
leave
sbb
or
mov
out
or
fwait
test
loopne
test
fidivs
jno
fsubs
mov
dec
pop
add
mov
outsb
jmp
jbe
scas
nop
mov
cmpl
stos
movsl
push
in
out
lock
je
xor
nop
clc
adc
adc
data16
das
pop
and
mov
mov
mov
fdivrl
js
cmp
mov
fldl
pusha
pop
fs
dec
add
lahf
repnz
rclb
dec
xchg
lods
and
jmp
fimull
mov
imulb
fisttps
push
cmc
ljmp
sub
and
ljmp
or
add
sar
xchg
in
pusha
sti
fidivs
inc
adc
aas
je
mov
hlt
mov
inc
mov
inc
insl
push
lods
or
inc
shlb
decl
notb
repz
push
fisubs
int3
daa
fadd
dec
bnd
and
fisubl
lods
adc
or
xor
icebp
fsubrl
xchg
dec
and
in
scas
cmpsl
dec
or
stc
fildll
std
inc
mov
out
adc
mov
sbb
and
add
ret
mov
sbb
jecxz
movsb
cmp
les
push
ret
out
cmpsl
test
iret
jecxz
mov
movsl
shll
icebp
testl
dec
inc
or
or
inc
mov
push
ficoms
add
jmp
cli
mov
mov
pop
cmp
out
negb
sti
sub
mov
jne
jle
cmc
rorl
push
cld
add
leave
addr16
call
loope
inc
jge
mov
fs
push
enter
push
enter
or
add
std
iret
in
pop
and
rol
mov
aam
call
stc
lods
jb
pop
sub
sbb
insl
and
jnp
xchg
cltd
sub
dec
jb
pop
pop
dec
add
add
mov
xor
dec
gs
mov
jns
jp
dec
hlt
aaa
movsb
movsl
std
fsubp
xchg
in
bound
imul
loop
lods
sub
mov
pop
sti
fwait
xchg
lods
out
orb
mov
pop
or
test
xor
leave
cmp
adc
mov
cmc
adc
loope
mov
lods
push
mov
fldln2
jg
jne
aas
rorl
mov
scas
dec
mov
xchg
sbb
and
gs
mov
int3
lock
sbb
rcrl
daa
mov
adc
arpl
outsb
xchg
cmp
sub
add
jnp
xchg
lds
out
pop
add
lock
pop
mov
shl
scas
inc
sbb
int
mov
push
cld
jg
adc
std
xchg
gs
test
xchg
jg
mov
sbb
ret
adc
adc
arpl
inc
jmp
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
sub
mov
and
push
sub
mov
sub
mov
orl
lea
subl
mov
add
mov
mov
adcl
mov
xor
subl
add
mov
mov
add
mov
mov
add
mov
subl
mov
add
add
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
mov
adc
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
adcl
mov
mov
mov
add
xor
or
jmp
paddsw
mov
or
and
popa
pop
bound
mov
imull
repz
fbld
xor
push
adc
and
lahf
xchg
lods
leave
pop
dec
xchg
cld
mov
popa
add
add
xor
mov
xchg
adc
gs
mov
lock
cld
out
push
out
out
sub
cmp
ret
xor
xor
icebp
pop
outsl
imul
or
sbb
aad
out
clc
push
inc
enter
addr16
loop
mov
dec
jg
pop
movsl
push
pop
dec
rol
adc
iret
inc
xor
inc
cmpsl
pop
mov
mov
lea
lea
lods
in
cmp
jecxz
adc
pusha
mov
mov
mov
inc
repnz
sbb
xor
ret
or
addr16
leave
fyl2x
xchg
mov
andl
push
mov
push
popf
and
aas
insl
push
stos
mov
aam
jg
dec
mov
sbb
inc
lcall
mov
pusha
imul
mov
lcall
orb
sub
pop
in
sub
pop
int3
imul
pop
inc
cmp
mov
filds
cmp
pushf
sbb
mov
dec
xchg
sbb
sub
cmc
pop
jmp
movsb
rcr
pop
adc
inc
sti
popf
xchg
sti
dec
xchg
ret
cs
dec
cs
inc
std
scas
jp,pn
or
out
or
stos
inc
push
push
outsb
mov
xor
rorl
je
mov
in
data16
shlb
cmp
pop
andb
adcl
add
pop
mov
sub
and
movsl
pop
test
mov
sbb
rcl
in
js
ja
rclb
sbb
lock
lret
mov
loopne
pop
icebp
jns
mov
cmp
test
shrd
and
mov
outsl
add
out
xchg
dec
push
add
mov
jno
adc
sbb
enter
idivb
mov
jg
testl
xlat
xchg
fdivrs
push
dec
outsb
jg
loopne
fldt
fiadds
pop
mov
out
or
mov
and
push
mov
mov
loop
sti
xorb
orl
mov
jl
cmp
mov
add
inc
pushf
add
test
inc
es
adc
in
push
roll
js
cs
js
add
sub
dec
enter
dec
fiaddl
insb
push
cmp
jne
or
xor
stos
outsl
add
sub
mov
cmpl
sub
lahf
and
fadd
adcb
out
add
in
jecxz
loope
dec
shlb
or
ja
jmp
pop
mov
push
dec
push
pusha
inc
sarb
daa
lea
outsw
push
xchg
jae
loopne
jno
sbb
dec
mov
ftst
mov
inc
hlt
sahf
or
in
test
sbb
xchg
push
sub
lcallw
testb
stc
push
mov
lahf
nop
jge
cmp
pop
inc
insb
xlat
das
rol
jecxz
mov
jg
inc
sti
psllq
ds
shll
int3
sbb
les
cli
scas
xchg
push
xor
sbb
ja
das
push
inc
scas
jns
scas
mov
sub
mov
nop
xchg
pushf
pusha
dec
mov
inc
xor
cli
push
sti
call
inc
sbb
aam
loopne
dec
mov
mov
outsb
push
cwtl
push
push
call
mov
lahf
clc
mov
icebp
ficompl
adc
scas
popf
pop
sub
jb
mov
xchg
mov
and
rcrb
mov
loope
add
lret
xchg
mov
push
push
fstl
sbb
pop
push
xchg
xchg
ss
or
pop
jae
mov
arpl
mov
add
mull
in
xchg
pop
lock
cmp
mov
push
fsts
jb
hlt
mov
call
xor
pop
pop
cld
in
mov
das
insl
pop
repz
add
pop
dec
cli
fwait
sub
popa
pop
pop
adc
mov
imul
mov
sti
add
pop
sahf
cmp
fidivrl
mov
movsb
mov
addr16
cld
push
mov
inc
jne
mov
inc
add
adc
clc
dec
jge
pop
adc
xlat
and
add
lods
or
mov
xorl
mull
ljmp
and
mov
lret
cmp
xor
jb
fisubrl
aam
insb
in
sbb
lcall
jb
pop
ja
adc
pop
adc
es
popa
and
mov
stc
sbb
les
movsb
test
lock
mov
and
ret
sbb
arpl
mov
mov
or
mov
inc
mov
sbb
xchg
push
adc
mov
loope
xor
mov
push
cmpsl
je
aam
scas
daa
mov
mov
cltd
pop
pop
in
push
mov
lahf
aas
jecxz
sbb
rol
push
push
ja
cmp
lcall
dec
dec
js
in
sub
ljmp
aam
or
pusha
pop
lods
cs
push
fisttpl
aam
inc
ss
test
lret
mov
jmp
sbb
stos
shlb
mov
and
mov
leave
jb
loope
and
leave
addr16
sbb
nop
cs
jle
mov
pop
ss
jns
repz
adc
or
loopne
test
pop
js
sbb
lcall
outsb
stos
fstpl
inc
stos
sti
lret
je
cmp
cmpsb
pop
out
adc
enter
mov
mov
les
jle
iret
idivl
test
or
out
jne
dec
rclb
mov
loopne
or
add
add
cs
dec
pusha
xor
lds
in
jmp
das
mul
rorl
mul
outsl
popa
stos
jae
insb
pop
xor
add
cli
mov
mov
mov
mov
push
push
aad
mov
adc
or
rcll
aam
outsl
mov
lds
jae
shlb
and
into
shlb
jno
fisubl
xchg
xchg
push
adc
out
and
mov
jp
cmp
and
fnstenv
scas
lock
shlb
inc
jno
or
cltd
orl
dec
into
cmc
sbb
jle
fisttpl
xor
or
sarl
leave
or
rep
cmp
mov
sbb
sti
cwtl
xchg
jnp
add
scas
out
cltd
adc
push
roll
in
mov
pop
cmpb
jo
arpl
mov
ror
push
xor
adc
int
loope
mov
xchg
lods
lods
or
adc
jle
and
leave
add
in
movb
xchg
insb
sbb
data16
push
pop
movsb
push
mov
imul
adc
dec
jae
inc
xchg
push
sti
fidivrl
imul
pop
mov
repz
xchg
icebp
movsl
adc
or
sti
outsb
xchg
stc
jnp
push
sub
inc
outsl
push
sub
dec
dec
leave
sub
adc
mov
sub
pushf
sbb
push
or
addl
scas
adc
pop
inc
mov
cmpsl
mov
mov
mov
jno
shll
mov
pop
call
insl
cwtl
xchg
cmp
mov
jl
mov
sub
sbb
popa
push
jbe
and
out
pop
inc
or
mov
ljmp
out
sti
jmp
inc
mov
cmp
sbb
enter
iret
sub
cmp
push
mov
jl
pop
loope
rorb
cmc
jo
inc
xor
in
sbb
xor
jns
shrl
jl
out
push
dec
stc
fwait
pop
scas
mov
fistl
push
mov
lcall
adc
sti
and
jno
sub
cmp
leave
leave
jg
mov
ja
scas
repz
fnop
enter
jae
dec
test
push
sub
ret
mov
movntps
pop
ret
fistpll
push
int
adc
sbb
xor
sti
ds
sub
jle
or
scas
pop
add
adc
ds
push
lods
pop
daa
or
aaa
mov
test
jl
mov
rcl
push
add
mov
add
sub
sahf
jg
popl
lock
cltd
cltd
jo
mov
mov
xchg
cmp
test
xor
or
rorb
loop
sub
or
loope
jle
and
xor
imulb
rcr
mov
mov
sub
out
cmp
sarl
test
lret
insb
out
jnp
sti
xchg
cmp
cmp
scas
adc
xchg
popf
adc
pop
in
call
sub
test
sub
shl
cmp
dec
stc
dec
inc
pop
xchg
fisttpl
jnp
sbb
in
mov
push
inc
cmp
orb
xor
rcll
stc
add
mov
jae
and
jecxz
add
nop
lods
mov
add
xor
aas
mov
ss
xor
stc
mov
pop
hlt
into
cmp
je
push
mov
dec
mov
inc
cltd
sub
add
test
inc
jle
add
imul
mov
enter
ja
sbb
mov
clc
cli
mov
inc
lret
or
sub
xchg
add
cwtl
mov
push
rorl
addl
addr16
popa
out
xor
stos
dec
push
xchg
jmp
imul
imul
idivl
push
lds
ror
mov
fisubs
jbe
sub
inc
sti
imul
gs
stc
lock
lea
mov
push
mov
sbb
lds
lods
push
shrd
sub
or
scas
out
incl
loope
loope
pushf
or
dec
mov
test
pop
and
add
in
mov
fistpll
ja
hlt
add
or
xchg
hlt
inc
cmp
aad
jns
inc
and
jbe
jae
mov
test
xor
stos
sbb
sub
je
repnz
insb
push
flds
test
jmp
leave
ja
aas
mov
inc
repz
data16
mov
xlat
push
inc
sbb
jbe
adc
aas
inc
aaa
ljmp
cmpsb
and
sahf
hlt
push
cmp
andl
push
out
jge
pop
ljmp
sub
mov
ficoms
push
push
loope
cmp
mov
pop
add
fcmovu
xchg
cmpsl
cmpsl
xchg
push
mov
pushf
in
stos
pushw
jp
shrb
adc
pop
mov
inc
out
icebp
shlb
adc
dec
mov
in
rorl
subl
addr16
push
lods
xor
ljmp
adc
xor
and
cmp
push
push
xor
fs
jne
fsubl
arpl
mov
outsb
mov
jp
gs
je
aaa
int
shrb
in
sbb
push
mov
jnp
ret
inc
ret
sbb
sub
cli
xor
pop
lcall
adc
sbb
push
push
add
sub
ret
adc
and
in
xor
int
int3
sbbb
mov
add
jb
mov
dec
jp,pt
in
out
pop
xchg
pop
clc
fiadds
mov
test
dec
xor
mov
dec
imul
mov
and
enter
pop
jle
sbb
sbb
ja
test
cmp
cmp
out
sub
inc
lock
and
int
add
and
add
push
push
cld
lcall
cmpsb
and
mov
and
sub
mov
fnstenv
vcvtss2si
dec
adc
out
into
les
xchg
cwtl
leave
repnz
insb
inc
push
and
cmp
mul
out
mov
mov
fs
inc
sub
xor
mov
cld
xchg
popa
addr16
imull
imul
loop
or
fwait
lock
mov
pushf
sar
xchg
jmp
sbb
shlb
adc
mov
xorl
shll
faddl
jo
jne
sahf
fildll
test
sub
arpl
xor
sbb
adc
and
push
mov
adc
sahf
mov
xorl
add
jmp
xor
adc
cmp
jge
push
inc
popf
insl
dec
inc
fstl
adc
fsubs
test
fimull
test
movsl
loope,pn
cmp
cmp
icebp
imul
mov
push
out
mov
clc
cmp
push
fnstenv
jb
push
idiv
call
push
test
jae
xchg
jne
cwtl
pop
test
cmpsb
out
jae
or
mov
ret
ret
enter
in
in
jg
pusha
sti
cmpsl
sub
outsl
and
mov
and
sub
push
inc
filds
mov
inc
mov
ret
pop
movsl
imul
jmp
std
ret
pushf
mov
cmc
push
into
sub
das
or
and
jnp
sbb
addr16
or
mov
repnz
cmp
dec
add
int3
ja
fildll
inc
in
dec
xchg
sbb
test
notb
push
mov
inc
mov
sub
clc
xchg
push
iret
test
out
xchg
call
inc
or
xorl
repnz
inc
div
gs
cli
mov
cmpsl
or
in
sub
pop
repz
xor
iret
xchg
lret
test
mov
cmp
fnsave
mov
mov
roll
testb
insb
dec
mov
mov
push
xor
arpl
cmp
cmp
mov
aas
test
mov
lds
fistps
lock
insl
rorl
movsb
cmp
jo
sbb
adc
mov
lret
outsb
mov
push
aam
and
xor
or
and
mov
push
lods
dec
lahf
or
lret
sub
test
inc
fnstcw
inc
in
push
outsl
ja
data16
movsl
add
scas
inc
ret
adc
mov
xchg
pop
ss
scas
mov
hlt
xor
or
scas
lods
mov
xchg
dec
push
xchg
aaa
cmp
mov
mov
clc
sbb
sub
add
inc
ja
push
stos
adc
xchg
ds
outsb
loop
xchg
mov
pop
lds
stc
xor
cld
cmc
cld
cmp
push
jge
cwtl
and
mov
stc
mov
sub
loope
int3
sub
xor
repnz
sbb
xchg
cmpsl
jbe
sub
and
int
test
or
sub
or
pusha
mov
loope
cld
mov
ja
xor
mov
mov
xor
ja
mov
lods
in
faddp
add
dec
push
dec
dec
adc
imul
inc
pop
jge
mov
out
jg
gs
mov
sbb
movsb
mov
cmp
push
out
mov
sahf
stos
xchg
pop
mov
mov
leave
aam
inc
push
sub
mov
in
in
jecxz
lods
mov
cwtl
jmp
mov
insl
mov
rol
sahf
add
add
das
out
jne
cmp
repnz
fisubs
add
mov
mov
fmuls
stos
sub
rorb
pop
and
in
mov
sbb
xlat
das
scas
ja
pop
out
lahf
imul
push
cmp
out
jnp
push
clc
mov
sbb
xlat
xchg
call
add
xor
mov
fs
jbe
arpl
in
lods
into
mov
pusha
xorl
xchg
add
pop
loopne
int
xchg
fidivrl
push
pushl
xchg
or
push
iret
mov
add
addr16
and
cmp
cmpsl
cmpsb
inc
movsl
stos
inc
aaa
xchg
add
test
aad
mov
fcoml
mov
int
xchg
dec
push
or
xor
dec
sbb
daa
aas
inc
inc
es
inc
lcall
stos
adc
sub
jge
inc
adc
jns
add
int3
jmp
mov
mov
fsubrl
paddsb
ficompl
jae
popf
jge
sbb
test
jp
repz
or
mov
sbb
imul
cmp
push
outsb
in
inc
repnz
push
inc
fwait
pop
jp
jo
cli
test
test
push
push
push
push
push
mov
call
ljmp
popf
std
xchg
call
push
lea
pop
mov
adc
jnp
dec
dec
mov
mov
mov
sbb
call
sbb
jmp
cli
ret
add
or
jae
in
testl
lcall
test
mov
loopne
inc
or
cmc
test
mov
sbb
fldt
mov
mov
jp
outsl
out
adcl
notl
scas
xchg
fstps
loop
lds
in
sub
int
push
xchg
dec
and
pop
inc
push
imul
mov
ud0
movsl
loopne
rorb
mov
insl
push
push
mov
les
mov
inc
mov
out
lds
add
jp
pop
mov
dec
popf
in
mov
push
xor
and
hlt
fwait
add
inc
jbe
fistpll
mov
cmpsl
xchg
out
lcall
out
rolb
jnp
cs
sti
hlt
add
mov
adc
repz
lds
lret
mov
subb
cmp
push
out
std
mov
pushf
inc
sub
pop
es
aas
and
or
daa
lea
mov
jbe
inc
out
addl
lcall
push
and
dec
sbb
xlat
mov
mov
aam
sub
sarl
insb
enter
sbb
in
and
das
aam
movsb
pop
fwait
shlb
jne
adc
insb
rclb
imul
lds
leave
jg
push
adcl
jl
jno
movsl
mov
test
stc
xchg
sub
mov
loop
push
cld
jae
dec
aam
push
mov
in
adc
pop
pop
mov
pop
fimull
xchg
leave
outsb
push
fs
xchg
jge
cs
fcoml
dec
rcl
mov
shlb
push
jno
pop
xor
xchg
jne
mov
aad
jl
loope
xchg
lahf
imul
ja
mov
sub
shrb
pop
jae
or
xchg
je
push
or
pop
adc
sbb
mov
adc
fistpl
jecxz
dec
lock
cmp
pop
inc
aad
out
fldl
mov
push
out
jnp
inc
iret
xchg
or
clc
ret
mov
shrl
scas
cmpsb
cltd
fsubrp
in
rcl
fmuls
push
pop
sbb
movsl
popf
lods
lahf
jno
fs
and
and
divb
or
and
sub
sbb
dec
inc
inc
xchg
mov
inc
lock
mov
call
das
add
sbb
mov
jge
mov
inc
ljmp
imul
and
adc
mov
iret
cmpsb
cmp
ljmp
iret
fistpl
cmc
xlat
and
add
xor
bound
xchg
mov
test
movsl
jnp
mov
pushf
xchg
test
mov
rcll
fistpll
mov
and
add
push
xlat
mov
xlat
jle
xchg
cli
xor
in
jg
xchg
outsb
add
dec
in
adcb
cmp
inc
xor
or
jmp
loop
sbb
lcall
mov
sahf
sbb
xor
test
mov
xchg
mov
andl
dec
outsl
lds
ljmp
mov
ret
lahf
push
mov
mov
sahf
or
mov
insl
jecxz
jge
pushf
push
lahf
or
int3
std
and
call
push
xor
ror
push
pop
and
push
mov
cmp
jl
cmpsb
add
test
push
cmp
shlb
inc
loop
das
sbb
mov
cli
aaa
stc
lret
xchg
xchg
lahf
fisubrs
sub
mov
push
pop
movsl
daa
loope
add
xchg
push
outsb
scas
scas
sub
inc
adc
and
loopne
fcomi
pop
or
adc
dec
loop
lods
sub
pop
push
and
push
aad
leave
mov
mov
jnp
cli
mov
dec
cmp
leave
pop
shlb
cmp
inc
imul
jae,pt
push
ffreep
aas
adc
rcll
fs
mov
push
in
pusha
jg
sbb
jge
imul
mov
in
repnz
xor
fsubp
mov
mov
push
xchg
repz
enter
sub
sbb
and
xchg
idivl
mov
mov
xlat
pop
in
pusha
add
jge
pop
mov
insl
and
scas
aam
xlat
push
and
jb
dec
stc
dec
pop
inc
adcb
iret
popa
adc
adc
cwtl
add
test
ds
fldenv
pop
add
loop
es
mov
sti
out
inc
cwtl
add
sbb
xchg
pop
mov
sub
mov
scas
jnp
stos
mov
jnp
add
mov
hlt
lcall
test
pusha
xchg
and
jae
pushf
loop
dec
pop
xchg
jmp
mov
inc
sbb
rcrl
push
incl
ss
aam
popa
pop
sub
daa
mov
xchg
in
inc
jmp
arpl
dec
mov
repnz
sbb
mov
mov
ret
stos
add
nop
cld
jmp
pop
rcll
mov
popa
je
in
mov
sub
push
xchg
sub
mov
dec
js
sbb
cmpsb
dec
fwait
jecxz
mov
push
xchg
out
jmp
mov
cmp
add
les
mov
sahf
cmp
rcll
mov
and
sub
jecxz
cmpsl
mov
and
add
pop
or
push
push
sahf
nop
mov
roll
and
mov
test
in
dec
cmp
adc
add
sbb
inc
mov
lahf
push
out
dec
outsl
push
xor
inc
je
xchg
sti
negl
jbe
mov
loopne
adc
mov
popl
cmp
shlb
sbb
or
push
subb
insl
cmp
fnsave
or
adcl
push
jo
repz
fnsetpm(287
add
es
movsb
rcl
sahf
enter
int3
gs
aaa
dec
movl
icebp
mov
bound
pusha
sub
insl
sahf
cs
jo
ficompl
fldenv
in
push
push
out
mov
in
loopne
fninit
sti
and
sar
sub
inc
pop
daa
das
fcomps
mov
test
sbb
and
addr16
jne
push
das
loop
cmp
cld
xlat
cmc
fwait
jns
mov
bound
jecxz
pushf
push
add
dec
xor
sub
sbb
dec
sti
pop
inc
imul
jno
push
and
pusha
mov
pop
cmp
dec
inc
jge
mov
push
sub
int
lret
mov
cmp
fldenv
imul
dec
sahf
push
clc
adc
outsb
popf
call
mov
xchg
cmp
stos
out
rol
movsb
dec
adc
jb
adc
stos
jg
jmp
shll
push
stos
cmp
lods
mul
xchg
inc
xor
push
cltd
enter
lods
pusha
and
dec
push
and
jle
rcr
sarb
out
inc
loopne
enter
mov
mov
aam
je
pop
stos
stc
mov
mov
mov
cmp
icebp
out
mov
sub
mov
cmp
dec
inc
inc
mov
cltd
sbb
in
or
popa
out
movsl
pop
or
aaa
in
repnz
arpl
add
or
push
and
cmpsl
mov
mov
xchg
inc
ret
push
fwait
cmp
push
les
sub
loop
xor
ret
ficoms
jg
adc
js
mov
xor
pop
cli
mov
pop
xor
jg
inc
sub
scas
mov
push
cmc
mov
movsl
xor
mov
rolb
mov
outsl
inc
dec
ljmp
out
lds
ficoml
mov
or
pop
mov
jle
loop
mov
xchg
test
es
fs
ja
rclb
addr16
inc
cli
xchg
out
mov
lahf
lahf
jle
mov
test
lret
test
pop
fisubrl
cltd
jge
push
add
sbb
daa
jg
adc
je
dec
mov
sub
ja
imul
jno
xor
jp
int3
or
jae
jg
xchg
xchg
mov
cmp
cwtl
and
push
mull
out
lods
mov
std
int3
xchg
fwait
nop
and
scas
xor
push
pop
adc
aaa
xchg
push
repnz
test
sub
jnp
push
mov
sar
xlat
and
push
xchg
or
mov
inc
aas
jg
in
xchg
cmp
pop
js
pop
cmpsl
push
lret
or
mov
jno
fisubs
int
mov
js
sub
int
test
mov
push
push
mov
repz
adc
dec
imul
stc
js
mov
pop
lock
push
cmp
iret
leave
lret
rclb
cwtl
out
mov
push
imul
push
sub
push
pusha
ljmp
cmc
cmp
mov
xchg
orl
dec
inc
or
dec
xor
enter
sarl
div
arpl
aad
aaa
stos
push
lret
jns
adc
lods
push
jnp
into
inc
jl
adc
mov
mov
repz
pop
out
dec
xor
sahf
mov
fdiv
out
mov
xchg
lcall
movsb
xor
xchg
pop
or
push
shl
push
dec
cmp
test
pop
loop
movsb
lock
sbb
xchg
imul
lock
bswap
aad
int3
enter
out
cmp
mov
xchg
mul
loopne
leave
and
scas
sbb
insb
mov
test
fisttps
outsb
out
adcb
add
shrl
and
mov
jmp
jp
sbb
or
pop
xlat
cmp
scas
bound
scas
pop
push
orb
mov
cs
lods
fadd
pop
mov
mov
testl
test
adc
ss
mov
lds
inc
jle
sbb
lea
adc
inc
icebp
testl
into
lock
js
psadbw
sub
adc
jno
dec
push
xor
cmp
sbb
loop
shll
in
dec
out
loop
or
jbe
jecxz
push
dec
xchg
in
cld
pusha
xor
daa
jg
sbb
dec
fmull
cli
mov
pop
xor
or
dec
outsl
dec
in
aas
fistpl
push
push
inc
xchg
int
scas
inc
pop
jo
adc
or
popf
sbb
jg
insb
aaa
jb
xchg
lds
mov
mov
mov
loope
xor
adc
ret
mov
xor
mov
push
ss
aaa
add
pop
inc
push
mov
rorb
xchg
test
or
nop
push
subb
ficoml
outsl
addr16
push
mov
lahf
fistpl
add
idivb
or
or
or
aad
inc
cmp
jnp
dec
jle
ljmp
js
js
js
int3
adc
add
sub
dec
adc
std
dec
shrl
adc
adc
stc
dec
pop
sbb
add
inc
loopne
cmpsb
ret
mov
test
aas
dec
fwait
lods
in
pop
out
repz
lock
push
push
push
stos
or
hlt
popa
jle
sti
inc
fistpll
lods
and
fiaddl
jl
gs
movsb
daa
or
or
xchg
icebp
les
clc
adc
xor
mov
mov
aad
pop
inc
shlb
stc
jb
pop
xlat
xchg
in
dec
and
mov
dec
cld
gs
sbbb
cmp
xlat
addr16
rclb
sbb
fimuls
mov
stos
xchg
shlb
je
adc
xor
sahf
adc
imul
add
push
mov
sbb
jbe
xor
pop
sbb
sub
fwait
loope
sub
cmp
cld
inc
dec
scas
mov
mov
cmp
or
pusha
push
movsl
mov
stos
inc
and
fdivrs
lock
xchg
mov
loopne
jo
sbb
dec
mov
xchg
rolb
push
fs
ds
mov
mov
sbb
cld
inc
jae
sbb
mov
sub
xor
scas
mov
jns
aam
inc
pop
push
or
imul
jecxz
or
je
insb
shr
test
hlt
or
mov
sahf
enter
push
or
push
mov
inc
mov
inc
cli
adc
and
leave
dec
mov
ss
arpl
jnp
xchg
jne
adc
cmpsl
rcll
cmp
lods
dec
xchg
test
inc
and
cli
cmpsb
cmp
adc
sbb
hlt
sub
and
xor
xchg
hlt
cmpsb
mov
inc
nop
popf
mov
or
xchg
repnz
cld
push
call
arpl
test
pop
or
cmpsl
rcr
cli
cmp
ret
jmp
sbb
mov
pop
cwtl
adc
xchg
mov
es
adc
sub
add
ret
mov
sub
cmc
fistps
xor
pop
insl
mov
cmp
movsb
xor
lcall
arpl
dec
dec
arpl
xor
adc
int3
addb
movnti
hlt
jecxz
pushl
stc
test
mov
rorb
pop
mov
les
xchg
lcall
cmc
cld
push
ljmp
lea
clc
and
fwait
inc
cld
dec
fdivs
outsb
pop
std
scas
jp
popa
subb
xor
dec
mov
enter
xchg
cli
sahf
adc
ret
test
xlat
shlb
mov
xor
push
push
or
lods
aaa
orl
stos
push
vmovhpd
sarb
cmp
sahf
test
out
imul
push
xchg
stc
leave
xchg
xchg
push
imul
cli
ret
sub
mov
sbb
push
push
lcall
cmc
pusha
sub
fstl
idiv
mov
es
mov
push
sarb
lea
sti
pop
stc
sub
loopne
hlt
loope
fs
mov
push
and
lret
je
and
xor
imul
push
mov
jb
jge
sbb
mov
add
xchg
js
outsb
cld
jge
negb
jno
popa
sbb
mov
inc
pop
sbb
sub
push
mov
arpl
aad
pop
sarl
jne
lods
or
dec
or
push
jae
push
mov
mov
or
sbb
int
pop
dec
fs
mov
sbb
sbb
aaa
cmp
cld
sub
movsb
shll
fcompl
xor
jle
mov
addl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xor
add
mov
and
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
negl
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
xor
incl
add
andl
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
jmp
dec
cmp
orl
push
mov
in
outsb
filds
popa
pop
bound
pushf
pop
xor
push
xor
mov
int3
not
mov
and
pop
jl
jo
push
mov
mov
xor
enter
lcall
push
pop
xchg
adc
pop
outsl
jne
lret
das
insl
xor
or
mov
adc
or
sahf
and
addl
jecxz
push
lods
repnz
sahf
ds
dec
mov
mov
jmp
mull
sub
add
insb
outsl
mov
mov
js
inc
ja
faddl
adc
adcl
jge
lahf
lret
loop
mov
out
xchg
subb
cmp
pop
mov
sub
jg
mov
in
adc
pop
imul
jbe
jmp
and
mov
bound
push
xor
xchg
sbb
mov
add
xor
xchg
dec
or
ret
mov
dec
push
lret
jg
sar
jno
je
adc
jl
sub
inc
mov
scas
fldt
shlb
icebp
ja
daa
lret
movhps
or
aad
js
mov
lds
imul
inc
or
test
add
mov
popf
xchg
jnp
jge
mov
std
mov
imul
cmp
enter
in
sub
sub
mov
fisubl
cmpl
cmp
xor
add
les
jns
mov
xchg
mov
add
fs
repz
mov
jmp
into
ja
in
jle
mov
jl,pt
jae
inc
addb
mov
fnstenv
lcall
inc
and
sarb
into
ficoml
push
out
insb
sub
mov
xor
in
push
jbe
push
push
push
pop
jb
jo
pop
ret
push
cwtl
cmp
xchg
jnp
das
test
dec
push
ficomps
push
inc
mov
jnp
xchg
dec
stc
arpl
and
bound
pop
mov
arpl
mov
jno
faddl
inc
mov
inc
inc
cltd
cmc
sub
jmp
ja
push
jmp
sub
sub
jno
mov
sahf
or
loopne
cmpsl
jle
add
fbstp
cmp
push
insl
xchg
xor
push
dec
jo
mov
div
pop
xor
pop
add
out
aaa
neg
rcll
mov
push
sbb
mov
aam
int
aad
ljmp
xor
push
je
sti
fdivs
jecxz
mov
adc
out
cli
aaa
scas
outsl
push
scas
cmp
push
dec
andl
xchg
push
mov
jp
dec
lcall
les
lods
rolb
cmpsb
in
out
ja
jge
lods
idivb
je,pn
lods
cli
pop
and
cmc
es
inc
faddp
pop
je
or
int
dec
inc
and
cmp
jnp
lds
test
jg
lods
in
sbb
aad
pop
std
data16
call
enter
pop
sbb
push
test
and
stos
mov
pop
add
cmpsl
sbb
ficomps
push
lret
mov
push
mov
nop
les
fwait
call
adc
outsb
fwait
jmp
cmpsb
dec
mov
fwait
push
inc
sbb
inc
or
sub
cli
mov
lock
lret
xor
out
push
mov
inc
fildl
stos
mov
mov
out
xchg
ljmp
roll
hlt
data16
jo
sub
aas
xchg
inc
fs
cs
ret
mov
test
mov
xor
cwtl
popf
lods
shl
mov
cli
pop
fcmovb
out
sbb
dec
hlt
jnp
mov
jns
mov
inc
cltd
bound
gs
xchg
sub
stos
mov
call
rcll
mov
mov
xchg
outsl
aam
dec
test
mov
jae
xchg
imul
fbld
cmp
stos
push
out
js
ds
cltd
mov
stc
inc
shll
mov
test
and
xchg
lcall
int
cmp
mov
push
shll
sbb
jmp
xlat
pop
inc
inc
add
repz
ljmp
outsl
insl
jge
call
dec
mov
lock
iret
adc
out
pop
push
mov
dec
stos
sti
mov
cmp
aad
mov
dec
push
mov
sbb
stc
xor
add
dec
cmp
mov
xchg
ret
outsl
fdivr
or
add
icebp
jl
outsl
lods
and
push
out
ret
mov
popa
push
iret
mov
imull
test
pop
idivb
jg
fiaddl
cmpsb
rcr
imul
popa
lods
pop
sbb
int3
test
shl
inc
sahf
lea
add
popf
in
xor
enter
and
pop
std
mov
mov
dec
xchg
shlb
jmp
stos
jnp
fwait
ret
jno
cmpsl
adcb
mov
jne
pop
adc
cmp
lahf
cmp
clc
in
push
ljmp
insl
les
out
and
mul
fwait
mov
sbb
cli
outsb
out
pop
cmp
cltd
xchg
shll
lods
sar
into
stos
add
loope
pop
add
cmpsb
inc
cli
aad
in
pop
or
jge
mov
je
jbe
movsb
fmulp
sarb
push
je
cmpsb
int
popf
shl
enter
mov
rorl
lock
or
int
movsl
sub
pusha
mov
adc
clc
cmp
pop
mov
pop
aas
loopne
pop
inc
xchg
mov
dec
xor
insb
sub
movsl
adc
mov
inc
and
stc
into
lods
addr16
movsb
dec
or
or
iret
sahf
and
fld1
mov
fdivrs
xchg
pop
js
mov
adc
jmp
xorl
mov
and
pop
roll
cli
dec
jae
sahf
add
aaa
test
xchg
xchg
ret
repnz
out
jg
xchg
or
mov
fcmovne
dec
cmp
lret
cld
mov
cltd
jp
and
std
sbb
mov
fld
out
mov
adc
push
fdiv
clc
sbb
imul
pop
push
cli
xor
and
dec
cmp
add
scas
and
out
fsubl
sbbb
adcb
fcomip
dec
lahf
push
mov
out
and
mov
sbb
cs
popf
and
push
ljmp
aas
push
jne
hlt
rol
xchg
imul
nop
xchg
push
aas
sahf
fdivs
add
inc
icebp
inc
out
shrl
sub
test
nop
xchg
jmp
xor
sub
jnp
fldcw
mov
pop
clc
pop
out
push
lods
xchg
in
mov
mov
cmpsl
notl
fdivl
cld
jp
test
inc
cmpsl
aaa
and
push
xchg
sbbb
add
mov
lds
mov
addr16
add
ja
repz
or
ss
insl
and
arpl
cs
pop
addr16
xor
xchg
cmc
cmpsb
icebp
orl
flds
pop
aad
js
push
fcoml
pop
ror
roll
cmpsl
push
push
jnp
pop
gs
xlat
ds
pushf
ljmp
cmp
push
in
and
adcb
add
mov
in
lods
mov
daa
xchg
movsl
inc
call
mov
sub
xor
arpl
test
jo
es
aam
in
pop
sub
mov
cmpb
mov
adc
frstor
mov
xchg
push
leave
or
sbb
leave
adc
mov
mov
movsl
pop
cmc
les
jne
dec
popa
dec
out
inc
inc
ljmp
out
and
jg
jle
ret
xchg
dec
aaa
add
aas
and
jle
mov
pop
jmp
fdivs
int3
rcl
in
mov
out
outsb
std
int3
addl
jb
pop
jbe
sub
fwait
xor
fdivp
jge
lea
lods
mov
out
push
xchg
push
cltd
adc
and
leave
arpl
inc
test
fidivs
xchg
mov
push
ja
mov
pusha
mov
outsl
jmp
pop
inc
aam
sbb
dec
mov
add
stos
or
push
add
jnp
loope
cwtl
mov
cmp
ljmp
jle
jp
sbb
test
dec
rol
shlb
and
arpl
arpl
dec
xchg
out
daa
call
in
das
fistl
inc
mov
mov
jle
leave
jg
in
int
jns
xor
sub
popa
pusha
movsb
fstps
std
inc
fs
mov
std
and
and
mov
pop
pop
push
inc
in
iret
insl
push
enter
lock
bound
push
pop
fildll
rorl
or
and
mov
ja
inc
sti
push
or
push
bound
jge
cli
hlt
push
push
enter
add
mov
sub
pop
fs
loope
decb
push
sub
xchg
std
inc
xor
inc
add
xor
into
js
inc
sub
arpl
rorb
mov
pop
add
add
cmpb
nop
lods
fidivrl
or
adc
scas
xchg
pop
sbb
push
out
movsl
mov
lahf
jg
shlb
xlat
int3
clc
testb
push
add
insl
loopne
xchg
sub
call
or
sub
mov
cltd
jmp
dec
mov
dec
and
sahf
pop
shrb
jne
fs
rcl
pop
pop
sti
adc
mov
sbb
ja
or
ljmp
inc
adc
dec
adc
into
scas
incl
sbb
ja
gs
push
gs
adc
imul
loopne
imul
and
xor
and
shl
add
pop
and
int3
insl
lods
imul
jne
int3
insb
test
sar
pushf
cli
dec
sti
mov
rorl
lcall
mov
xchg
adc
insl
push
cmp
push
dec
mov
jae
test
scas
xor
mov
sbb
sub
or
shl
jno
aad
subl
push
loopne
mov
inc
cli
test
xchg
pop
xchg
repnz
arpl
add
ret
cmp
loop
xor
cmp
xchg
xchg
bound
fiaddl
jae
and
add
adcl
sbb
dec
push
ljmp
inc
push
fimuls
aam
int
jno
add
or
stos
addr16
and
divb
adc
out
add
push
fsubl
jle
outsb
mov
insb
adc
or
push
jnp
sub
mov
lahf
pop
jmp
xchg
outsb
add
cmp
mov
cmpsb
cmc
enter
push
pushf
js
movsl
mov
stos
or
adc
sub
mov
cwtl
fisttpl
xchg
jb
and
rcll
pushf
nop
aad
out
std
xchg
das
mov
fdiv
and
jge
pop
test
fdiv
dec
mov
cmp
mov
repnz
adc
xor
xor
test
pop
xchg
xchg
dec
cmp
movsb
push
xchg
fsts
add
fs
inc
es
pop
sbb
orb
inc
mov
or
add
mov
mov
mov
mov
mov
cmc
stc
lock
in
fmul
sub
icebp
push
gs
push
or
push
lods
addr16
jg
xorl
stc
bound
lods
adc
pop
mov
push
xchg
xchg
cli
push
inc
adc
jle
sbb
shll
out
in
mov
dec
xorb
jbe
fs
std
int
adc
jno
loope
scas
outsb
daa
dec
outsl
lods
add
dec
in
addl
orl
push
inc
stos
ljmp
dec
sub
fstl
mov
hlt
sbb
sub
pop
gs
pop
push
outsl
mov
lds
or
sub
sarl
jmp
loopne
push
and
sub
pop
push
push
loope
cmp
adc
sti
adc
lcall
cmp
push
dec
fsubs
inc
push
loop
sarl
les
popf
hlt
mov
xor
dec
popa
adc
sub
test
push
sbb
add
and
inc
push
inc
push
sbb
out
pop
loopne
mov
movsl
out
sbb
jp
out
stc
pop
mov
mov
out
outsl
aam
dec
xchg
gs
pop
mov
cld
cmp
push
lock
std
in
or
xchg
or
addb
jge
adc
push
dec
sbb
sbb
lret
push
lds
repz
push
fcmovbe
cmc
cmp
dec
xchg
push
adc
mov
insb
sub
fidivrl
lods
pop
add
mov
pusha
xor
xchg
adc
sub
adc
xlat
ss
out
sahf
xchg
mov
sbb
ds
flds
inc
lds
push
mov
cmp
sub
cmp
das
push
loope
ja
cld
test
xchg
bound
repz
loopne
aaa
jb
jecxz
loop
or
pop
sbb
dec
dec
subl
add
or
push
dec
mov
xchg
ret
add
into
sub
ret
mov
outsl
cld
push
xchg
neg
inc
dec
add
out
mov
ja
lcall
mov
mov
xchg
mov
gs
adc
in
rcr
xor
sti
repz
jecxz
mov
dec
mov
push
or
dec
xchg
popa
and
cld
shrl
mov
cltd
mov
daa
daa
add
jmp
mov
and
pusha
jecxz
jbe
pusha
and
cltd
xchg
inc
mov
pop
jb
test
mov
das
adc
jo
sub
movsb
cld
ljmp
push
shlb
imul
mov
pop
cmp
jns
movsl
cltd
mov
push
lretw
rclb
cld
pop
mov
in
mov
add
ret
lret
jae
and
scas
test
mulb
dec
pushf
test
aaa
mov
inc
mov
stos
sbbb
lock
add
stos
mov
jl
pushf
push
mov
add
jl
pop
out
in
lea
sbb
insl
or
mov
inc
pop
shlb
out
rorb
popa
pop
jns
shr
mov
mov
subl
pop
xchg
fs
out
mov
xor
fisubl
mov
push
mov
sahf
mov
dec
add
push
test
add
xor
idivl
jno
sar
mov
bnd
sarb
outsl
xor
xchg
loopne
movl
xlat
inc
add
mov
jecxz
xor
push
pop
xchg
gs
xchg
aaa
inc
rcr
mov
repnz
les
aam
jmp
xchg
mov
mov
mov
lret
fstpt
cmp
mov
js
push
mov
loopne
push
add
or
dec
jb
icebp
mov
fwait
out
orb
xchg
cmp
aas
xor
fidivl
cmp
mov
pop
dec
aam
fcoml
gs
push
subb
lret
fisttpll
sub
out
outsl
cmc
xor
push
leave
shlb
jecxz
add
sbb
decl
mov
xor
ja
pop
mov
push
clc
xor
xlat
fdivrl
mov
xchg
or
out
test
and
xlat
adc
add
shlb
ljmp
xor
insl
loope
fdivs
pop
xor
fiadds
fcomi
mov
mov
mov
push
fidivrl
in
adc
cmp
dec
nop
pop
inc
add
cmp
adc
sub
popf
lock
outsl
sub
cmpsb
mov
into
lret
rorl
xchg
or
push
adc
in
divb
xchg
sbb
mov
push
jno
mov
stos
movb
out
xorb
mov
push
shlb
mov
cmp
es
cmpsl
jmp
orl
push
mov
push
sbb
fmul
add
jge
mov
and
sbbl
shrl
lret
mov
mov
cmpl
jne
das
mov
pop
pop
mov
dec
push
addr16
dec
and
aam
cmp
push
imul
repnz
sub
inc
pop
mov
hlt
pop
addb
mov
jecxz
sub
outsl
jmp
rcrb
xor
stos
jb
data16
xor
sub
insl
adc
into
daa
insl
dec
cmp
mov
popf
loope
adc
xor
sbb
adc
popl
dec
dec
cmpb
aad
mov
sub
jne
jmp
mov
das
stos
mov
enter
aas
lcall
bound
mov
out
out
nop
mov
pop
imul
or
ja
rol
and
push
jmp
and
push
fwait
mov
sbb
scas
pop
clc
mov
nop
cmp
lcall
jl
and
adc
xchg
ss
pop
enter
inc
imul
fmull
add
lret
mov
clc
inc
scas
mov
leave
aaa
test
pop
mov
and
mov
or
and
add
or
hlt
and
inc
push
cmp
fs
fmuls
or
push
inc
jo
push
push
iret
jmp
mov
and
iret
xor
sub
push
stc
arpl
inc
enter
xor
icebp
cmc
ja
fdivl
aam
add
jbe
pop
xchg
jb
cmpb
jmp
jbe
mov
hlt
lcall
pop
or
jp
insb
mov
mov
xchg
xor
dec
xchg
lock
pop
inc
xchg
cmp
lret
add
push
dec
movsb
lcall
xor
loopne
add
insl
push
gs
call
adc
es
cli
scas
incb
adc
mov
fwait
shlb
sarl
jle
addb
xchg
loopne
out
cmp
push
mov
dec
jnp
dec
fcmovnu
je
cmp
filds
jae
inc
pop
xlat
inc
pop
shrb
lahf
inc
push
fcoms
mov
xchg
dec
lods
int
cli
or
popf
xor
and
mov
es
cmp
ret
andl
cmp
test
in
sub
xchg
inc
jne
inc
ret
push
mov
and
fld
dec
fwait
pop
jnp
jne
adc
outsl
jo
jge
outsl
sbb
jmp
out
sbb
xchg
push
imulb
lcall
es
addl
adc
pop
and
xor
cmp
pushf
xlat
shll
jl
repnz
ret
add
les
pop
and
or
insl
call
ljmp
sub
cmp
xchg
push
fsubrl
aas
jbe
std
ja
push
adc
and
adc
int3
shlb
out
inc
scas
scas
jle
mov
add
fstpt
add
inc
inc
in
xchg
and
repz
xor
out
mov
cmp
mov
inc
test
add
add
xchg
and
loop
popa
outsb
inc
orl
scas
push
adc
add
xor
add
lock
pop
lret
sub
cmp
subb
popa
mov
or
inc
lcall
test
in
push
push
sub
ja
xchg
mul
int
loope
sub
daa
push
ret
fcoml
xchg
sub
inc
sub
push
xor
mov
jmp
xchg
leave
stc
fs
jmp
dec
fildll
lahf
inc
push
ffreep
xor
pop
jp
fcompl
add
pushf
jno
loope
leave
cmp
or
xor
lcall
lods
repnz
pop
lock
add
cmp
repnz
in
out
repz
lods
pop
pop
insl
fidivl
out
mov
sahf
cmpsl
mov
arpl
add
cmpsb
jge
shll
xor
cmp
cmp
pushf
repnz
and
xor
cmc
xchg
xor
clc
lds
inc
adcb
jb
push
insl
js
cmpsl
insl
push
adc
adc
push
mov
lahf
jnp
xlat
xchg
jbe
cmp
fcompl
or
test
sarl
xchg
movsl
push
pop
and
inc
inc
out
pop
jle
mov
xchg
das
adc
cmpsb
lock
xchg
xor
fmull
and
lds
popf
ret
adc
pop
arpl
and
inc
mov
idivb
push
repnz
shll
lret
test
xchg
cmp
mov
inc
mov
push
jns
insb
hlt
fstps
stos
invd
fiadds
cld
nop
in
add
jb
adc
rclb
sub
pop
or
push
add
inc
push
pop
xchg
rcrb
push
pusha
scas
push
mov
loope
cmpsl
fdivs
add
gs
jns
and
outsl
push
dec
repnz
mov
and
movsl
fdivl
inc
stos
nop
mov
pusha
mov
mov
or
or
aam
push
shlb
mov
xor
xchg
mov
sbb
xchg
insb
fnstcw
add
mov
mov
ret
out
xchg
xor
adc
adc
pushl
jg
or
call
pusha
add
push
je
push
fisttps
pop
mov
lods
push
pusha
push
cld
adc
sub
inc
sub
mov
pop
mov
pusha
xchg
ljmp
stos
cmpsl
int3
pop
cli
pop
pop
jp
pusha
lcall
push
lock
ficompl
les
mov
xchg
shll
mov
add
fsubrs
inc
scas
mov
xchg
movsl
xchg
pop
jp
sub
dec
jge
mov
or
dec
jl
inc
pop
sbb
and
dec
inc
orl
rclb
jl
sub
push
mov
mov
das
xor
cmp
dec
add
test
out
aaa
cmp
jnp
xchg
loop
icebp
cs
not
lret
sbb
shl
sbb
imul
int3
les
and
xchg
dec
xor
push
hlt
xor
xchg
mov
mov
jbe
mov
sbb
and
sbb
and
insb
sahf
outsb
out
in
lds
lahf
jecxz
cltd
and
lods
scas
add
mov
stc
xchg
cmp
and
sbb
xchg
pushf
xor
pop
ficoml
cwtl
mov
push
lock
fdivrs
or
push
repz
pop
xor
mov
inc
mov
andl
fbstp
scas
lret
testl
pop
fcomps
es
pop
push
fists
push
xchg
inc
lds
jmp
sub
insl
and
sbb
and
jns
xchg
ficomps
mov
dec
fisubrs
daa
arpl
ja
add
push
pop
inc
push
sarl
xchg
insb
jne
sbb
mov
mov
xor
push
and
das
lahf
push
add
sub
and
leave
fsubrl
mov
call
loope
mulb
sbb
cmp
adc
inc
insl
and
jne
add
xchg
ss
out
jae
cmp
test
xorl
xchg
sbbl
mov
mov
inc
jno
cmpsb
fs
iret
repz
push
cmp
xchg
fisttpl
xor
stos
inc
sbb
das
or
mov
xchg
inc
repnz
and
jmp
inc
pop
mov
pop
or
outsl
lahf
fwait
sbb
mov
xor
jo
pop
xlat
pusha
and
rcrl
movsl
insb
repz
jo
pop
ds
inc
loopne
pop
xchg
xlat
sub
cs
jecxz
dec
ja
scas
call
inc
mov
jno
push
xor
jge
test
push
lods
iret
jae
mov
insl
rolb
add
xlat
add
jmp
rorb
sub
test
add
mov
insb
mov
divl
mov
mul
xchg
icebp
lock
cs
imul
fcmovu
pusha
or
sahf
xor
mov
mov
arpl
imul
outsb
adc
ja
pushf
ljmp
int
test
clc
mov
ljmp
shlb
in
jp
or
fildl
add
sbb
iret
ret
cltd
xor
cmp
dec
sbb
in
push
cs
lret
pop
cld
jg
test
dec
mov
adc
lcall
pop
mov
jne
out
sub
xorb
push
inc
es
add
xchg
gs
cmpsl
add
aam
jg
mov
add
clc
xor
mov
add
mov
das
mov
sub
dec
cmp
mov
push
ja
cmp
fbstp
pop
dec
adc
cmp
pop
pop
mov
jecxz
in
mov
out
fucomip
test
scas
stc
mov
enter
je
mov
cs
ret
pop
add
mov
ficoms
call
cmp
imul
movsb
sub
add
or
repnz
jns
enter
sbbl
lds
roll
repz
clc
repnz
inc
inc
push
pop
push
push
sbb
popl
xor
push
call
add
mov
sbb
or
daa
mov
mov
and
outsl
jecxz
pusha
pop
in
fisubs
mov
ljmp
cwtl
aaa
add
fstpt
push
fwait
cmp
xchg
mov
shrl
loope
mov
ljmp
sti
lahf
push
into
cs
adc
push
dec
pop
add
cmp
pop
mov
ret
xor
fists
aaa
rorl
ret
mov
adc
jbe
outsl
cld
push
mov
xchg
or
inc
xchg
mov
nop
fistpll
fsubr
sbb
cmp
cli
sahf
xor
cli
int
mov
adc
rclb
outsb
pcmpeqd
ljmp
lcall
daa
dec
popf
rolb
mov
push
addb
jae
jne
add
xor
jb
ret
cmpsb
movsl
rclb
or
cmp
mov
push
fcomps
cmp
in
cmp
imul
cltd
xchg
or
sub
ljmp
mov
xor
jmp
popa
mov
push
sbb
insb
push
out
imul
mov
xor
idivl
test
sti
push
lods
mov
xchg
inc
pop
cmp
dec
enter
fsubrs
fstl
aam
or
out
jo
mov
mov
xchg
add
dec
sbb
or
mov
call
adc
pop
cltd
push
sti
sub
imul
scas
cmpsl
or
mov
jnp
mov
dec
mov
cmp
adc
into
fisttpl
lret
addr16
push
inc
in
adc
dec
aam
sbb
sbb
jmp
out
shll
cmp
pop
es
jmp
xlat
mov
dec
repz
push
adc
out
rcrl
mov
pushf
and
mov
sbb
in
push
jl
pop
loop
loope
int3
test
or
push
clc
sti
xchg
push
cmp
push
into
repnz
mov
repz
lcall
xor
jne
xor
shrl
jp
int3
adc
mov
or
xchg
xchg
xchg
and
push
fsubr
fnstcw
mov
and
or
mov
jmp
sub
jne
ret
or
jnp
dec
and
aaa
int3
icebp
xchg
lods
or
cmpsl
dec
dec
cmp
adc
mov
test
add
xlat
popf
aam
nop
mov
xorl
lahf
xchg
js
insl
sbb
jg
sbb
cltd
pop
jl
aaa
fmuls
ret
sub
pop
sbb
dec
jecxz
enter
aad
xor
inc
pop
sarb
mov
gs
mov
iret
arpl
jl
jecxz
xlat
xor
in
fisubl
dec
xor
mov
fadds
cmp
xor
popf
jecxz
sbb
fstpt
lods
sti
cmp
xchg
loope
cmp
inc
xchg
shrb
xor
mov
je
fcmovnu
xor
mov
orl
and
fisttps
ja
test
cmp
scas
mov
or
sbb
add
adc
les
mov
mov
and
push
fildl
js
push
xor
inc
sti
int
pop
repnz
xor
lret
and
test
enter
rcr
sbb
std
neg
xor
jne
imul
imul
stc
add
adcl
sbb
mov
jmp
mov
xchg
sub
add
div
mov
les
adcb
cmpsl
out
mov
js
movsb
loopne
sub
fstps
dec
jae
adc
inc
pop
hlt
mov
mov
int3
push
sub
movsl
push
sarl
or
jmp
jo
icebp
and
pop
test
jbe
push
mov
xor
and
cmpsl
enter
scas
xor
sub
add
lret
sbb
int3
cmc
pushf
mov
mov
pop
push
jo
push
add
lcall
dec
orb
adc
inc
xor
jae
mov
xchg
mov
std
xchg
imul
int3
loopne
xor
push
out
ja
int3
xor
sbb
nop
pusha
jns
loop
rcrb
jge
mov
cmp
lds
inc
mov
dec
out
rcrb
mov
push
loop
shl
mov
push
add
popa
xchg
mov
in
cld
clc
rcrb
leave
sahf
shlb
sub
adc
mov
or
jle
or
xchg
arpl
mov
inc
insb
rcrl
fbstp
ja
mov
jmp
sbb
bnd
xchg
fisubrs
fmulp
mov
scas
sub
cli
test
push
rcll
test
adc
pop
xor
inc
inc
lcall
ret
arpl
test
mov
add
mov
push
cwtl
mov
out
dec
cmc
mov
dec
ss
into
jp
jno
inc
push
xor
mov
cmp
stos
ljmp
das
das
jo
dec
loop
sub
xchg
and
adc
sbb
jo
lods
mul
imul
mov
stos
sarb
out
and
adc
or
cmp
inc
fsts
mov
sbb
xchg
push
sub
pop
inc
jb
xchg
sbb
mov
jl
adc
or
adcb
push
dec
fdivs
push
icebp
dec
cmpsb
jbe
lods
iret
jo
stos
mov
cli
xor
pop
jb
adc
aaa
ret
mov
jge
hlt
xor
and
insl
xlat
aaa
mov
lds
popa
push
ljmp
divl
idivl
adc
sbb
cwtl
xchg
fisttpll
pop
lock
and
sti
test
je
push
and
mov
inc
pop
je
mov
icebp
pop
cmpsl
adc
and
mov
repz
fsubrs
cld
or
mov
mov
into
jno
jge
add
icebp
sub
push
jo
mov
lods
cmc
jp
js
xor
and
nop
loop
shrl
mov
lock
cli
and
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
movzbl
sub
push
adcl
push
xor
xor
mov
sub
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
pop
push
subl
call
adcl
push
xorl
push
addl
push
push
andl
push
andl
push
sbbl
push
subl
call
push
push
push
push
push
push
subl
call
xorl
dec
movl
jne
push
push
push
call
orl
test
je
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
imul
mov
not
mov
mov
mov
cmp
movl
jne
addl
movl
orl
pushl
pushl
pushl
call
adc
mov
mov
sbb
mov
mov
add
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movzbl
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
push
sbb
push
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
mov
xor
mov
mov
sub
sub
mov
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
jmp
icebp
push
inc
movsl
cmpsl
mov
aaa
and
aaa
imul
pop
bound
sti
mov
and
add
and
pop
gs
popa
data16
cmpsb
daa
fwait
repnz
movsl
push
adc
dec
inc
mov
mov
daa
out
cmp
pop
mov
pop
xchg
in
int3
pop
adc
jle
mov
mov
jg
mov
inc
dec
lcall
cld
andb
pop
nop
push
cli
lret
add
and
cwtl
enter
mov
jno
test
mov
xchg
rol
mov
data16
scas
lods
add
outsb
rolb
push
loopne
popf
pop
cltd
pop
pop
add
cld
mov
mov
push
clc
adc
mov
jmp
out
pop
stc
and
arpl
dec
test
lds
push
jne
jle
aad
test
scas
mov
popa
outsb
call
lret
gs
xchg
nop
ds
outsl
pop
ret
es
aad
fcomps
dec
ret
fmull
mov
mov
sarl
and
push
insl
jmp
ficoms
jecxz
out
aad
fxch
repnz
pop
lret
or
pop
inc
test
adc
adcl
icebp
daa
bnd
movsl
inc
mov
ja
mov
mov
stc
jmp
repz
sub
jb
jmp
test
sbb
mov
lret
jl
lods
in
add
xor
mov
sbb
push
and
xchg
pop
push
rcrb
repz
cld
jbe
push
adc
in
fnstenv
jnp
cmpsb
mov
mov
adc
cld
mov
jp
daa
add
inc
imul
xor
dec
es
push
jp
mov
imull
and
test
pop
pop
ss
pop
aaa
out
leave
insb
outsb
test
bound
leave
add
cmp
loopne
es
push
lock
mov
add
mov
loope,pt
outsl
jl
sbb
push
cmpsb
clc
scas
and
xor
pushf
fstps
orps
xor
xchg
in
test
mov
enter
movsb
lcall
pop
or
xor
in
stc
inc
jmp
inc
andb
shlb
xorb
inc
mov
sub
cmpsb
in
dec
adc
inc
daa
jno
outsl
aad
add
and
movsl
adc
out
sub
cmp
movsb
aas
and
std
les
push
push
xor
in
faddl
imul
pusha
imul
outsl
lds
push
out
pusha
aam
cmc
in
addr16
in
mov
sbb
imul
cmc
outsl
clc
iret
push
imul
incl
imul
mov
stos
xor
adc
jbe
cmp
hlt
cmp
fnstsw
cmpsb
push
addr16
mov
jb
lds
lock
ja
ret
inc
inc
mov
rcll
add
lcall
enter
dec
ret
inc
fisttpl
sbb
dec
and
je
add
ds
pusha
sub
lret
mov
test
bound
pop
xchg
inc
xchg
adc
fbstp
mov
out
add
test
mov
jo
adc
jbe
jecxz
mov
xor
adc
fnstenv
pop
jno
sbb
fsts
shlb
adc
pop
icebp
jnp
rclb
jns
push
lock
mov
xor
mov
push
mov
xor
sbbb
xchg
ljmp
mov
js
jmp
adc
and
and
jp
push
js
mov
js
lock
pop
and
loopne
jae
pusha
fisubl
pusha
div
jge
add
dec
int
jg
imul
dec
jnp
adc
adc
or
stos
sbb
cmp
mov
ljmp
pop
mov
jns
xor
sbb
inc
cmp
xor
cmp
mov
int3
fisttpl
aam
out
movhps
ljmp
push
rclb
stos
std
lock
or
std
ds
mov
sbb
xchg
push
rcrl
fildll
les
in
push
sbb
mov
lods
jno
sub
aam
cmpsb
sub
dec
dec
sub
clc
xchg
shl
out
pop
jp
jle
add
sbbl
mov
in
ss
pop
cmpsl
mov
sub
popa
ret
inc
mov
pop
sahf
mov
inc
cli
xor
mov
insb
add
inc
and
mov
lods
push
add
push
call
pushf
out
fisubs
mov
dec
insl
jbe
adc
inc
rclb
fldl
mov
insb
in
test
or
leave
xor
negb
test
jge
xlat
or
adc
enter
inc
jae
mov
in
xchg
jle
std
movsb
mov
hlt
ljmp
jae
add
mov
and
inc
call
pop
xchg
test
mov
inc
addr16
imul
and
test
cmpsl
movsl
loope
mov
sbb
shlb
adc
lret
sub
lret
arpl
adc
test
lret
int3
push
adc
pushf
int3
in
sub
popa
repz
repnz
fisttpl
xor
and
push
aaa
mov
das
xchg
mov
dec
sti
fidivrl
push
mov
push
cmp
add
popa
mov
test
add
mov
loopne
lea
sahf
inc
insb
divb
stos
xorl
mov
xor
mov
js
and
sbb
out
xchg
in
inc
sti
aam
cmp
ret
fwait
ljmp
fs
std
rorl
out
lret
jg
jbe
push
call
jae
xchg
iret
fucomp
lods
xchg
jecxz
movsl
mov
frstor
xchg
jnp
out
and
nop
push
or
mov
sub
sub
mov
pop
jmp
mov
repz
jnp
xor
int
or
cmp
aas
popl
packssdw
cmpsl
adc
push
xchg
mov
sub
mov
adc
insb
iret
inc
in
movsb
mov
add
int
hlt
push
addr16
out
cmp
enter
in
xchg
iret
sub
push
enter
and
push
pop
jg
out
loopne
sbb
jne
imul
and
popf
pusha
inc
xorl
push
add
cmp
jno
in
sbb
xchg
lret
push
lock
call
popa
aad
cwtl
inc
lret
adc
mov
push
aam
js
push
shl
jns
icebp
jg
add
rcll
sbb
and
in
adc
jp
test
sub
jecxz
subl
push
sbb
pop
xchg
ljmp
or
mov
mov
pop
out
hlt
or
cmc
scas
adc
mov
paddsw
stos
shrl
mov
push
mov
int3
iret
fistpl
lds
adc
iret
into
jae
adc
xor
cmp
or
pop
mov
xor
dec
mov
xchg
into
mov
pop
mov
sub
mov
lods
jge
cltd
lcall
in
push
xchg
sahf
cli
lahf
outsb
xor
loop
shrl
or
in
test
add
sub
outsl
lods
fidivs
aam
mov
fcoms
push
popa
loope
js
ret
fcoml
test
into
sahf
inc
xchg
cmp
pusha
mov
out
sbb
adc
jmp
fstpl
jno
mov
inc
lods
out
inc
lds
pop
sub
sbb
dec
xchg
dec
rcll
jle
mov
mov
in
mov
imul
push
loope
sub
nop
mov
pop
sbb
push
inc
es
lods
outsb
mov
cmp
je
or
or
icebp
es
out
cld
std
inc
or
or
sub
dec
mov
fmull
inc
mov
or
jmp
add
push
push
xchg
and
inc
pop
mov
sub
mov
xor
scas
or
clc
je
jbe
xchg
data16
lret
xchg
pmulhuw
mov
xor
jl
out
push
sbb
loop
dec
enter
pop
andb
aaa
pushf
or
outsb
arpl
xchg
andl
dec
test
add
pop
jno
jne
adc
xlat
cmp
xlat
push
or
fsubl
mov
out
adc
pop
aam
mov
sbb
mov
in
pop
or
xchg
in
cmpb
dec
aad
or
mov
div
cmp
sub
mov
shlb
and
mov
gs
jbe
cmp
orb
nop
lret
sbb
fisttps
cmpsl
jl
out
addr16
das
push
call
and
jne
sahf
xchg
mov
sbb
jecxz
mov
out
push
fcmovu
daa
cli
push
test
jecxz
enter
popf
imul
jl
inc
repnz
addr16
fwait
xchg
sbbb
sub
hlt
aam
sub
nop
sti
sub
lret
mov
cli
test
mov
js
sti
data16
cmpsl
data16
and
repnz
pop
aaa
inc
setne
pop
shl
xlat
lret
cltd
outsb
jno
cmp
adc
out
mov
out
ret
je
scas
jne
jae
xor
div
movsl
test
mov
ljmp
xor
idivb
adc
cwtl
xor
stc
mov
les
dec
addr16
leave
mov
jae
sti
jmp
ret
pushf
and
cs
ds
out
cmpl
movsl
pop
mov
sbb
popa
xchg
sbb
fsubrp
jb
mov
mov
mov
lock
dec
adc
mov
ljmp
shl
mov
mov
jmp
and
outsl
sub
pop
sbb
jl
sub
sbb
int3
adc
outsb
cmpb
mov
lcall
jp
bound
add
pop
inc
mov
cli
xchg
popf
cmp
clc
call
inc
imul
mov
jle
pop
push
jbe
ja
cmp
pop
cmp
and
pop
mov
xor
insb
sarl
pop
jbe
lahf
cmc
fwait
and
subl
inc
sub
stc
iret
imul
test
addl
orl
sbb
mov
push
insb
pop
push
and
icebp
dec
into
sbb
out
push
ja
fcomi
shr
out
sbb
bound
pop
out
enter
pop
push
fs
dec
mov
inc
jnp
cmp
xchg
lret
lods
mov
bound
cs
or
push
das
lods
hlt
lcall
incb
xchg
test
fildll
xchg
in
out
push
and
sub
or
jge
dec
or
dec
dec
leave
dec
mov
shll
dec
mov
mov
pushf
mov
fcom
jae
xlat
mov
jecxz
data16
mov
repnz
pop
mov
loope
notb
mov
fs
lock
dec
or
dec
and
shll
xor
pop
pushf
aaa
sub
cltd
mov
aad
dec
negl
cli
xor
inc
jnp
cld
lods
mov
xchg
push
das
dec
mov
lds
js
pop
stc
and
mov
int3
rcrb
std
push
ret
stos
ret
mov
sti
shrl
insl
jns
lea
sbb
shrl
lcall
cmc
push
inc
sahf
insb
imul
push
inc
add
mov
mov
jge
push
in
inc
or
inc
inc
ss
lret
push
movsb
cmpb
pop
scas
dec
daa
cmp
scas
nop
xchg
add
or
fidivrs
adcl
cmp
movsl
rorl
into
jns
and
fimull
pop
mov
xor
aas
fldl
popf
dec
rorb
inc
jmp
movsl
pop
sub
into
xor
jbe
lods
iret
mov
stos
sbb
mov
data16
mov
and
mov
fcomp
mov
ret
mov
xchg
aas
fnstenv
mov
pop
push
dec
inc
xchg
xor
xchg
hlt
pop
push
shll
in
dec
out
imull
mov
xor
cmpsb
jl
sbb
jb
xorb
cwtl
push
inc
jl
pusha
add
jge
sbb
mov
cmp
cld
push
das
int3
aaa
mov
sbb
push
out
jae
pusha
xchg
fcmove
pushf
push
into
push
inc
jne
popa
inc
movsl
sub
pop
insb
pop
lea
inc
rorl
or
push
mov
inc
sbb
fimuls
mov
leave
test
lods
mov
or
dec
js
insw
dec
cmp
addr16
std
adc
sub
jmp
imul
sub
add
out
jle
clc
xor
or
movsl
stos
add
sbb
mov
cmp
dec
scas
movsb
sbb
in
enter
pop
mov
cmpsb
imul
aas
inc
inc
jne
iret
sti
fstps
in
inc
enter
inc
jns
and
inc
pop
in
cmp
mov
jle
fdivrl
inc
push
fstp
cli
outsl
jle
insb
test
ficoml
and
inc
clc
jl
in
test
jb
push
pop
je
inc
xor
xor
or
fdivs
ds
add
fcompl
dec
lds
add
gs
inc
arpl
dec
dec
lea
pusha
stos
insb
scas
fs
push
inc
ret
push
addr16
mov
inc
lret
arpl
data16
cwtl
push
jl
xchg
lock
nop
iret
ljmp
addr16
add
movsb
jno
pop
ret
hlt
nop
int3
fimuls
into
add
push
out
dec
imul
arpl
mov
pop
out
sbb
sbb
std
out
mov
cmp
je
js
or
sbb
xchg
ret
int3
cld
sub
shll
hlt
lods
dec
jg
imul
popa
mov
mov
arpl
adc
inc
in
or
ret
push
push
es
mov
and
push
aam
mov
fwait
imul
jecxz
mov
lar
mov
push
and
dec
aaa
inc
popf
mov
push
jp
push
jecxz
daa
adcl
mov
out
scas
fwait
add
pop
sbbl
mov
cli
mov
mov
or
sbb
movsb
adc
hlt
dec
xchg
inc
jle
xor
in
shlb
inc
bound
mov
out
push
xchg
xchg
insl
repnz
lret
add
test
or
pop
outsl
xor
lahf
jg
insb
lock
aas
adc
test
mov
add
inc
les
aas
xchg
push
mov
or
pop
fcmovnu
mov
bound
icebp
push
sbb
sbb
mov
xchg
cmc
mov
test
cltd
inc
jnp
movsb
sahf
js
cmp
mov
or
push
aad
inc
clc
in
addr16
lret
cmp
mov
fistl
jge
pop
xchg
mov
xchg
fmuls
mov
js
dec
imul
dec
sbb
sub
cltd
xlat
pop
push
and
xchg
jmp
sbb
mov
jo
jecxz
sub
pop
push
mov
push
cmp
insl
and
sahf
xchg
cmpb
into
inc
iret
test
pop
daa
es
push
fwait
adc
adc
mov
ja
pushf
in
add
pop
xchg
cmpsb
imul
pop
or
pop
jg
adc
jecxz
loop
imul
and
das
stos
push
xor
mov
ljmp
xor
push
mov
xchg
adcl
inc
jae
mov
aam
test
cmp
test
cwtl
add
ss
cmp
dec
add
arpl
push
xor
int3
pop
clc
pop
pop
add
mov
push
cmp
loop
rclb
jno
testl
inc
in
fdivl
xchg
das
sub
push
push
inc
mov
out
scas
sub
ja
stos
gs
pop
adc
pop
push
out
add
mov
mov
test
add
shlb
dec
loopne
xchg
and
wbinvd
dec
or
xchg
stc
mov
inc
cmpsl
push
push
js
test
loopne
mov
cmpsb
in
insl
sub
pop
fsubrl
jne
inc
enter
xchg
sub
mov
jbe
icebp
lods
or
push
pop
pop
mov
faddl
movd
in
sub
sbb
pusha
aaa
lea
into
and
rcrb
paddq
jecxz
sbb
mov
es
xchg
mov
shlb
aad
add
jnp
mov
pop
inc
or
testb
lods
and
sub
mov
fmuls
push
jecxz
flds
mov
pop
inc
jns
pop
and
mov
popf
movsl
stos
insl
fcomp
inc
or
fndisi(8087
stos
cmpsb
sti
jg
push
mov
inc
adc
push
nop
adc
out
xchg
fs
jecxz
push
es
into
push
ja
sbb
sub
notb
push
cmp
in
fldcw
or
nop
es
test
cwtl
sarb
inc
push
xorl
cmp
in
cmp
cwtl
fwait
and
cmc
cwtl
add
xorl
es
mov
mov
imul
icebp
cmp
les
mov
andb
mov
inc
mov
addr16
sub
loop
scas
dec
dec
xchg
popf
fimuls
fidivrs
ljmp
std
ljmp
enter
sti
pop
out
or
add
addr16
and
add
and
lods
push
push
insb
adc
push
repnz
lcall
mov
ljmp
mov
cmp
hlt
leave
sti
jle
out
ljmp
popa
sbb
ret
jl
xchg
inc
arpl
mov
push
jecxz
mov
mov
into
fucomip
cwtl
in
aad
mov
and
hlt
aad
pushf
aas
fildll
in
pop
pop
sar
xchg
mov
xor
cmc
xchg
xchg
or
sbb
dec
fnsave
push
push
ret
outsl
lods
aad
xchg
out
push
imul
mov
mov
ret
sub
in
ror
cmp
inc
cmpsl
xor
nop
mov
add
xor
inc
sub
shll
mov
fisttpll
pushf
mov
jmp
lea
and
popf
cmp
push
pop
jne
in
jge
faddp
lahf
out
push
jo
rolb
pop
push
jle
push
ret
inc
mov
cmp
imul
jmp
jnp
sbb
in
ja
add
pop
pop
aam
or
clc
arpl
and
addl
ja
mov
aas
pop
icebp
cmp
jns
int3
xor
daa
push
sub
mov
sub
pop
sbb
push
fwait
fs
cmp
adc
dec
add
loope
ja
push
cld
push
dec
test
mull
jae
push
xor
jmp
and
sti
in
jnp
xchg
add
cmp
fldcw
mov
inc
mov
notb
xlat
adc
andb
mov
mov
xchg
popa
dec
cmpsl
sbb
or
addl
aas
repnz
xchg
clc
push
sbb
adc
lods
mov
clc
pop
roll
push
bound
ret
daa
bound
push
pop
movsl
mov
cltd
inc
jns
loopne
leave
js
or
adc
pop
out
cmp
cld
fwait
and
aaa
sti
mov
loope
mov
sub
pop
sub
add
or
dec
mov
insb
mov
dec
rclb
in
shlb
nop
aam
test
shrb
insl
sub
inc
outsl
pop
xor
pop
and
dec
inc
out
clc
outsl
jecxz
sub
pop
adc
cld
xchg
fdivrs
jno
pop
mov
or
xor
in
jno
adc
into
xor
adc
or
dec
push
lret
leave
dec
mov
int
int3
das
xor
sbb
jnp
xor
jnp
arpl
nop
aaa
xorl
je
out
xor
mov
jp
push
mov
loope
push
mov
repnz
in
pop
mov
lret
hlt
ficoms
mov
fsubrl
movsl
jno
xchg
push
fidivl
mov
dec
shrb
adc
and
push
sbb
sub
out
and
pop
sahf
cli
movsb
push
jle
stos
jmp
jecxz
add
sub
inc
mov
shlb
sbb
stos
aad
ja
and
xor
pop
sbb
leave
js
call
mov
dec
jns
es
xor
jmp
ljmp
mov
jmp
icebp
mov
lods
mov
pushf
add
sarl
icebp
lds
inc
ds
ret
dec
cmpsl
dec
lods
sub
cmp
ja
jmp
pop
mov
push
cmc
inc
dec
xlat
xor
in
loopne
cmp
mov
mov
es
insb
sarl
jl
jg
pusha
sbb
or
inc
push
add
out
push
jb
mov
stos
push
scas
inc
mov
cli
adc
rcrb
sarl
adcb
push
cld
dec
dec
pop
test
hlt
adc
mov
fdivrl
cmp
rclb
dec
loop
stc
ret
enter
cwtl
popf
push
dec
inc
push
lock
push
xor
xchg
pop
lcall
push
mov
pop
push
sbb
sub
pop
jl
sbb
out
insb
dec
mov
jg
dec
sti
test
push
mov
sbb
inc
add
enter
das
adc
or
arpl
mov
add
mov
sbb
out
aas
cmp
outsb
cmc
test
movsb
jno
xor
mov
movsl
ficoml
sub
hlt
cld
xor
mov
pop
adc
adcb
jmp
ficoms
and
in
xchg
imul
mov
sbb
fsubrs
sub
mov
push
enter
mov
xor
xor
lods
cmpl
lahf
ja
pop
and
push
push
mov
test
out
call
mov
push
lret
sti
out
mov
sub
fmull
jns
sbb
loop
repnz
jnp
or
in
ss
lea
fwait
mov
shlb
mov
adc
popf
mov
push
nop
jae
sub
movups
push
out
ds
adcb
std
testb
fxch
pop
dec
icebp
push
imul
push
pop
jno
pop
adc
jbe
mov
ret
adc
pop
fdivrs
sbb
xchg
rclb
mov
lods
dec
or
sub
scas
sti
push
sbb
push
dec
push
pop
xchg
push
daa
jp
test
into
adc
ja
sbb
pushf
jge
sub
dec
gs
leave
fs
cmp
fsubrs
test
test
push
inc
shl
pop
inc
flds
into
sub
xor
sub
imul
push
ret
adc
ljmp
inc
mov
lds
sahf
jno
cltd
jl
and
xchg
add
mov
push
xchg
sub
or
shlb
and
and
lea
lods
adc
jp
fdiv
jmp
sub
add
or
push
movsl
out
push
loope
lret
sub
sub
pusha
inc
dec
jge
dec
cwtl
stc
cmpb
ret
pop
rol
ds
or
xor
jmp
inc
pop
rorl
lods
mov
pushl
stos
stc
fnsave
ja
scas
ds
loop
cmpsb
inc
fimuls
cmp
add
fwait
jns
push
fwait
sti
sub
pop
cmp
in
mov
in
gs
mov
aam
sahf
stos
mov
pop
or
xlat
pop
adc
sarb
adcl
pop
jne
xorps
xchg
idiv
xor
adc
dec
push
or
negl
je
daa
repnz
pop
pop
mov
lock
and
jge
xchg
ret
bnd
dec
mov
loopne
nop
cmc
pop
addr16
or
adcl
aaa
stos
dec
mov
push
sti
push
das
jle
adc
ret
dec
inc
push
xchg
mov
fs
loopne
rcll
cmp
or
fs
mov
iret
nop
jmp
cmpsl
imull
jns
cmp
xchg
imul
xchg
fadd
xchg
jg
cmpsl
add
ljmp
cmpsl
js
aad
rclb
xor
sub
mov
popf
lds
repz
ja
and
push
popf
fcmovnu
push
sbb
push
mov
pop
xor
loopne
jno
and
shll
cmp
inc
xor
jge
inc
pop
call
mov
ljmp
sub
subl
stc
mov
xchg
bnd
pop
ja
sbb
sbb
test
inc
out
addr16
mov
push
sub
cld
jmp
cmp
lock
push
sub
inc
sub
out
mov
lret
mov
int3
lcall
push
jmp
int
pop
jb
mov
and
and
inc
out
pushl
or
push
shr
fiadds
rcll
pop
or
jb
outsl
xor
js
xchg
cmpsb
or
jle
rorl
jmp
pop
pushf
adc
push
push
and
lret
jmp
dec
pop
mov
pop
xor
rolb
cmp
mov
iret
mov
adc
mov
pop
pop
aas
add
mov
movl
imul
and
insb
adc
inc
into
gs
mov
js
test
inc
loop
mov
movsb
insb
push
inc
jno
je
push
fldcw
int
adc
jmp
mov
pop
mov
mov
les
into
icebp
sbb
inc
jns
jo
cld
prefetchnta
xor
movsb
jns
push
add
out
mov
xor
es
sub
daa
shl
fldt
leave
sbb
mov
mov
not
mov
adc
ret
les
fwait
aaa
fs
xor
and
dec
push
nop
sub
xlat
les
and
adc
inc
es
aam
mov
adc
dec
mov
stos
jge
sti
jne
int
std
mov
adc
cmpsb
lock
shrb
jbe
xorl
mov
mov
cmc
ljmp
sarb
bound
inc
into
inc
jnp
dec
xchg
push
leave
idiv
in
mov
jl
mov
vminpd
int
add
jo
cmp
add
cmpsb
rcr
mov
mov
scas
cmp
sbb
mov
xor
neg
inc
push
adc
int
push
sahf
sar
aas
xor
roll
inc
adc
adc
or
xchg
ret
dec
pop
xor
or
adc
pop
mov
push
stos
nop
xor
sub
subb
pusha
xor
inc
lods
push
outsb
xchg
pop
xlat
adc
movsl
push
cmp
push
shll
in
xchg
push
mov
imul
mov
popf
mov
xchg
pusha
push
aad
xor
or
dec
and
xor
fiaddl
cmpsb
mov
cmpsl
push
aaa
or
int
sahf
pop
and
imul
xlat
outsl
cmpsl
xchg
mov
insb
xor
insl
icebp
dec
mov
adc
or
jns
scas
add
add
popa
addl
pop
adc
push
imul
adcl
cs
sbb
clc
nop
call
divl
push
xor
mov
lods
shlb
mov
mov
and
sbb
sbb
sbb
inc
and
stc
aad
mov
in
shlb
gs
scas
rorb
in
cwtl
test
jp
push
mov
mov
leave
sbb
push
lahf
repz
sub
lcall
cltd
cmp
jecxz
xchg
inc
dec
xor
ret
shlb
pop
mov
adc
das
adc
mov
inc
xchg
or
sbb
arpl
inc
mov
adc
add
iret
clc
xchg
xchg
mov
adc
ficompl
insl
dec
gs
roll
push
fists
dec
sahf
xlat
push
leave
xor
into
xor
ret
shll
adc
add
add
clc
sub
cmp
pop
xor
call
leave
lds
rcll
or
cli
mov
ss
mov
div
rorb
inc
lods
xor
adc
or
fwait
pop
sbb
js
scas
jb
pop
sbb
adcl
sub
xchg
push
push
shrl
pop
int
fcompl
push
jmp
ds
and
ljmp
mov
jae
es
xchg
inc
mov
pop
xchg
adc
leave
inc
cmc
dec
sub
pop
int3
repz
or
or
shl
pop
insl
jbe
pop
sub
jecxz
into
cmp
enter
push
jns
dec
fstpt
xor
dec
dec
bnd
or
mov
pop
lock
mov
sbb
dec
dec
hlt
pop
dec
mov
jbe
cld
idivb
lret
add
pop
int3
movsb
sti
movhps
aad
or
sbb
stc
pop
dec
sbb
out
mov
pop
jp
mov
xchg
cwtl
loop
rcll
ror
into
loopne
gs
xor
ja
insl
negb
add
push
cmp
push
popa
jmp
addr16
es
loop
adc
mov
cmpsl
jle
cmp
es
jp
add
imul
and
and
rclb
mov
fs
pop
dec
stos
dec
mov
dec
shrb
scas
arpl
jecxz
cmpsl
out
loope
mov
aad
fwait
rcll
mov
aam
inc
hlt
sub
jo
test
mov
push
stc
dec
stos
std
pop
lods
xor
inc
dec
pop
es
movsb
fldl
cld
cmp
cltd
sub
push
jp
lea
out
push
inc
mov
js
or
lea
inc
in
mov
rolb
lds
dec
repz
inc
sub
js
dec
push
and
cmp
ss
negb
fsubr
scas
xchg
sbbb
and
dec
imul
push
adc
push
mov
lods
ds
and
push
mov
adc
cwtl
or
in
sahf
stos
mov
sbb
xchg
das
lahf
push
push
sub
adc
sub
call
rcr
mov
cli
sbb
xchg
cmpsl
loope
or
push
stos
cmovo
lods
jo
xor
push
daa
popf
push
lods
sub
adc
shrl
fldl
mov
push
roll
scas
pushl
pop
mov
enter
jnp
mov
movb
bound
push
test
popa
xchg
mov
mov
add
cld
movsl
movsb
mov
and
dec
imul
enter
jge
int3
int3
mov
cs
fsubl
mov
xchg
mov
xchg
nop
ljmp
jp
mov
and
dec
clc
xor
pop
sub
stos
and
jp
pop
les
imul
ss
pop
fwait
jnp
popa
add
cli
dec
int
adc
jo
xor
shrb
out
jl
dec
data16
clc
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
or
mov
mov
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
add
xorl
mov
mov
xor
mov
sbb
mov
sub
mov
mov
mov
push
not
pop
adcl
sub
add
mov
or
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
mov
andl
movl
mov
subl
mov
movl
mov
mov
sub
mov
addl
xor
add
orl
mov
xorl
lea
subl
mov
subl
mov
xor
subl
add
mov
andl
lea
sbbl
push
and
mov
subl
xor
add
sbbl
push
and
mov
adcl
push
andl
pushl
xorl
call
inc
mov
add
mov
mov
mov
xorl
xor
mov
xorl
add
jmp
adc
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
call
xor
add
dec
mov
jmp
and
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
sbbl
sub
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
jmp
iret
and
daa
mov
jle
cwtl
dec
adc
fisubl
push
pop
bound
hlt
mov
xor
dec
in
insb
mov
adc
leave
mov
mov
loop
cltd
jg
inc
in
pop
sub
int3
push
fcomps
fstp
fimuls
dec
in
dec
pop
test
insl
pop
daa
test
inc
push
das
andl
lea
push
andb
int
leave
inc
fidivs
pop
add
mov
xchg
fcmove
mov
cmp
in
add
pop
pop
cmpsb
imul
popa
adc
sahf
sub
gs
repz
jne
dec
std
popa
je
or
add
or
enter
and
out
lret
push
aad
sbb
pop
mov
in
adc
push
mov
aas
ret
jnp
or
jns
roll
call
fisubl
jns
mov
and
les
or
pop
jno
adcb
jge
insb
lds
scas
adc
and
pop
xchg
mov
adc
inc
test
sbb
adc
dec
dec
jb
xorl
out
scas
in
mov
mov
pusha
inc
pop
test
clc
loop
repz
mov
fsubrl
lock
xchg
test
inc
or
lret
syscall
popa
movl
loopne
sub
das
or
and
jne
rorl
sbb
mov
mov
fcmove
mov
addr16
movsb
aad
mov
mov
clc
adc
inc
pop
addl
flds
nop
dec
shrb
insl
mov
adc
mov
imul
or
fcoml
orb
xchg
and
data16
mov
inc
lahf
stc
sbb
icebp
mov
sub
and
inc
in
sub
mov
rcl
inc
out
in
in
je
jne
mov
jmp
daa
mov
cli
cmp
or
les
popa
in
mov
out
stos
lcall
push
lcall
or
fisttpl
lods
mov
js
jg,pn
test
mov
adcb
mov
lock
lcall
jge
xchg
mov
xchg
mov
sbb
jo
mov
sub
aad
mov
fs
pop
lret
xchg
shufps
inc
sub
out
lret
push
add
jle
cmp
mov
ret
or
rep
cmpw
push
fxch
pop
fcompl
ret
call
fisttpl
inc
ljmp
stos
call
push
push
sub
and
lret
ja
in
and
xor
mov
or
mov
add
dec
arpl
jle
jle
enter
jg
jnp
jo
fsubs
fsubl
test
fs
or
pop
pop
mov
xchg
cld
mov
push
mov
xchg
jb
mov
push
lcall
lahf
jp
arpl
push
shl
mov
int3
les
repnz
pop
pop
add
testl
pop
loope
mov
dec
dec
xchg
cmc
stos
scas
aam
dec
std
pop
out
mov
inc
inc
rclb
dec
adc
cwtl
leave
mov
js
mov
jb
jno
mov
movsb
mov
sbb
add
add
or
ljmp
das
mov
dec
sbb
dec
jge
loop
stos
lcall
xchg
sahf
js
clc
movsl
les
inc
fisubrl
xchg
xlat
aaa
mov
dec
sti
mull
loop
orl
cmpsl
mov
gs
lods
and
sbb
js
or
cmpl
add
lret
cmp
jmp
fs
fists
insl
push
pop
xchg
sbb
lcall
fidivs
inc
call
clc
mull
adc
insb
pushf
in
testb
ja
or
int3
int
adc
fnsave
push
push
push
sbb
int
lods
fdivrl
rorb
pop
cltd
outsb
cmpsl
cmc
outsb
push
push
adc
sbb
push
mov
mov
inc
cli
jbe
out
loop
xor
and
push
sub
cmpsb
scas
and
push
cmp
push
arpl
fstps
push
out
outsl
adc
add
scas
sub
add
push
push
fdivrl
xchg
mov
pop
pushl
stos
rcr
fisttps
cwtl
mov
xchg
dec
inc
sar
jecxz
sbb
cld
dec
fstps
inc
fisubl
pop
gs
push
jg
fdivrl
sub
dec
movsl
and
cwtl
xchg
add
in
daa
sti
pop
not
mov
inc
ja
push
test
dec
aam
out
push
mov
iret
aaa
ficoml
mov
cmpsb
jne
out
in
addr16
in
insb
aaa
sub
imul
jmp
sbb
cmpsl
jg
fwait
insl
jle
xchg
xchg
cmp
jg
inc
stos
mov
push
inc
mov
adcl
xchg
mov
inc
jbe
mov
mov
shlb
dec
adc
or
sub
ret
pop
fimuls
add
loopne
scas
mov
in
xchg
dec
int
fistpl
dec
mov
pusha
decl
std
bswap
or
outsb
adc
fwait
lcall
lret
pop
insb
ret
push
push
xorps
add
mov
outsb
call
adc
jl
sub
stc
mov
and
xorb
hlt
jnp
ficompl
and
push
jne
xor
adcb
dec
das
xchg
or
jecxz
push
lret
movsl
cli
xchg
xchg
dec
gs
add
mov
adc
imul
add
icebp
sub
pop
mov
lahf
test
mov
jp
addb
lods
mov
adc
jne
popf
lds
test
mov
sbb
pop
lret
pushf
enter
cmpsl
inc
bound
push
popa
xchg
mov
fnsave
xchg
cmc
dec
mov
clc
mov
rcll
cmp
pop
lcall
sbb
cmp
leave
fscale
adcb
aam
cmp
out
jp
sbb
inc
fcmovnb
inc
mov
sub
imulb
fwait
insb
js
jne
hlt
cmp
xchg
ja
pop
mov
mov
pushf
rorl
pop
xor
mov
jb
stos
neg
fldt
mov
enter
and
sub
out
movsl
sub
loope
outsb
lods
pop
cmp
loop
push
call
push
scas
sbb
dec
cmp
loope
cli
and
mov
jne
add
add
rcrb
ljmp
inc
rcl
icebp
mov
jl
outsl
pop
xchg
not
or
out
aad
pop
dec
clc
ja
subl
daa
repz
cmpb
add
cwtl
test
xlat
xchg
scas
cmp
mov
insl
xchg
lcall
lret
adc
xlat
daa
adc
ja
lock
scas
push
push
sub
int3
test
xchg
popa
jbe
flds
outsl
fsubs
or
jne
push
xchg
jmp
negb
add
fwait
push
and
enter
nop
pop
addb
mov
mov
ret
xchg
decb
rolb
les
pop
into
jae
dec
mov
jmp
mov
mov
xor
mov
jb
inc
xchg
fists
xor
es
pop
mov
sbb
cmpsb
adc
sbb
mov
mov
ret
add
call
sub
jge
outsl
pop
dec
xchg
pop
mov
jns
hlt
aam
pop
lcall
mov
sub
mov
push
jmp
mov
add
adc
adc
fs
data16
fcmovu
out
push
mov
pop
fnstcw
jp
push
lods
mov
mov
sbb
xchg
xchg
ss
xchg
icebp
mov
or
jg
dec
aas
sbb
loopne
pop
xchg
neg
lock
mov
jle
or
mov
iret
inc
xchg
lcall
imul
mov
dec
fidivrl
lods
imul
fbld
ds
gs
outsb
xor
imul
adc
repz
sti
pop
push
loop
imul
int
mov
pop
jg
cmp
aaa
cmp
lret
push
sbb
repnz
adc
pop
push
mov
imul
icebp
pop
aas
xchg
fistl
inc
sbb
out
loop
adc
add
xor
dec
mov
cmp
inc
stos
nop
dec
jne
adc
and
or
push
sub
mov
push
pop
aad
pusha
sbb
js
mov
dec
sub
push
vmwrite
cli
loope
stc
arpl
pop
ror
dec
mov
out
fs
sbb
rcr
arpl
cmp
jno
inc
sub
or
aam
movsb
cmp
imul
rcl
dec
insb
adc
cltd
mov
cmp
mov
ret
cvtpi2ps
lock
stos
cmp
enter
es
mov
mov
and
jo
test
mov
mov
fisubs
inc
enter
pop
xor
jbe
mov
loop
repz
ficoml
jae
adcl
push
adc
movsl
inc
insl
repnz
mov
cltd
call
xor
mov
mov
aam
es
mov
cmp
addr16
ss
in
outsb
adcb
mov
scas
inc
adc
stos
fisubrs
sub
mov
cs
xchg
and
in
inc
ffreep
xchg
jecxz
rcrl
push
cmp
and
dec
repnz
add
push
inc
add
jmp
adc
mov
adcb
inc
dec
ja
pop
fcmovb
dec
dec
pop
popa
push
and
cmp
mov
mov
xor
out
loope
push
xchg
pop
adc
push
xlat
lahf
int
jnp
jg
cmpsb
and
mov
ss
lods
xlat
fisttpl
fld1
inc
dec
imul
clc
into
lds
xor
inc
scas
lods
mov
mov
add
popa
fxch
daa
clc
das
or
fidivs
xchg
mov
mov
xor
lret
push
push
mov
push
scas
movsb
mov
data16
imul
push
sbbb
mov
and
cmpsl
push
mov
scas
and
pop
or
or
push
in
dec
xor
cmpsl
jb
fcoml
jae
adc
packsswb
dec
add
stc
add
xor
mov
outsb
addl
sti
mov
mov
test
daa
push
xchg
cs
mov
outsl
mov
das
cmp
insb
jb
xor
cmp
movl
imul
pop
test
decl
jmp
sti
adc
inc
jp
lret
jmp
cs
cwtl
push
testb
jmp
ja
mov
addl
push
dec
rolb
push
xchg
cmp
pop
sbb
mov
ja
push
test
mov
fwait
lret
mov
push
dec
arpl
sbb
outsb
mov
data16
insb
xlat
jae
mov
or
jg
pop
xchg
lea
and
out
jns
xchg
repz
dec
cltd
mov
out
insl
xchg
lods
out
clc
loop
mov
jg
push
int
xchg
lahf
pop
mov
das
cli
int3
sbb
cmp
mov
inc
xor
xchg
mov
jecxz
popa
out
xadd
cmpsb
les
movsl
jle
nop
loop
dec
jae
insb
sahf
push
push
sbb
test
inc
shlb
dec
pop
popa
pop
packsswb
into
js
cmp
mov
ja
push
mov
adc
cld
ljmp
add
push
dec
enter
lcall
into
pop
jg
mov
in
sub
ss
mov
cs
pop
jle
in
sbb
nop
addr16
aad
push
imul
addb
outsl
xor
lock
lods
mov
mov
inc
loop
lds
pop
outsb
pop
push
out
cs
sbb
xor
lods
dec
mov
aaa
lahf
inc
xor
repz
or
shrl
stos
clc
dec
jo
mov
mov
into
shld
and
mov
outsb
mov
adc
imul
fldcw
es
or
push
adc
bound
lret
andl
sub
aad
dec
push
xor
sub
sub
push
shrl
les
adc
inc
shrb
adc
pop
loop
push
dec
fimuls
lea
pop
stc
mov
and
lods
dec
push
leave
imul
mov
ret
mov
sarl
sub
sbb
jg
and
mov
insb
test
pop
adc
insb
adc
frstor
mov
gs
sahf
js
or
std
stc
sbb
inc
push
loop
push
cmp
and
mul
jmp
loopne
rorb
data16
inc
mov
popa
scas
lret
inc
cmp
push
testl
jb
and
cmc
inc
stos
sarb
mov
lcall
push
arpl
and
out
loope
sbb
nop
push
add
ret
inc
pop
loope
mov
call
sbb
test
mov
xor
jae
cmp
cmp
push
and
loop
hlt
test
lcall
jle
lret
dec
push
xlat
cmc
or
dec
pop
mov
jge
adcl
aam
jg
inc
sub
ret
sbb
pop
jle
mov
push
dec
jo
or
and
adc
rcrb
roll
loope
out
mov
jmp
adc
movsb
mov
mov
pop
jno
iret
or
push
jmp
jle
lahf
sbb
fcomps
stos
pop
jl
out
enter
stc
test
jmp
cmp
repnz
lahf
int3
xor
pop
add
sti
loope
push
mulb
sbb
out
fwait
pop
pop
pop
cli
jmp
gs
dec
mov
das
bound
or
jecxz
dec
dec
mov
mov
notl
fildll
pop
push
cmp
xor
mov
sub
mov
popa
adc
cld
xchg
lds
cmc
das
jge
or
outsl
push
mov
mov
add
das
ja
pop
nop
xchg
ja
pop
enter
cld
mov
pop
pop
fldenv
es
cmp
xor
sbb
xchg
push
movsb
out
jl
xor
mov
sti
jmp
sbb
push
jg
adc
out
ljmp
out
enter
add
mov
in
fdivs
xchg
testb
sub
xor
sub
push
insb
inc
test
inc
mov
or
arpl
fnstcw
insb
mov
jo
cmp
pop
out
push
fists
sub
jbe
xchg
push
test
dec
mov
sub
cmp
in
add
push
push
lds
ljmp
rcll
add
dec
mov
xchg
push
sbb
loop
imul
sbb
adc
rorb
pop
pop
int
inc
data16
sbb
push
xchg
das
iret
data16
push
pop
jmp
pop
fisubrl
repnz
xchg
xchg
test
stos
dec
rcrl
popf
sub
xchg
lret
ret
call
hlt
pop
xchg
push
mov
loop
xlat
sub
es
pop
es
mov
fs
or
mov
dec
and
push
mov
sbb
cld
lcall
xor
test
xchg
sahf
mov
icebp
dec
mov
xchg
lret
pop
jno
jge
icebp
insb
lcall
aas
fcoml
test
jne
cmp
test
jecxz
cmp
fldenv
and
lods
add
movsb
or
adc
movsl
jo
pop
mov
pop
daa
mov
fwait
loopne
test
mov
rcll
icebp
add
in
adc
mov
cmp
mov
fsubl
out
ret
aad
push
adc
cmpsb
adc
pop
mov
mov
pusha
std
pop
jp
sub
jmp
xchg
and
jle
xchg
sbb
loopne
push
mov
dec
push
stos
pop
stos
pop
adc
aas
test
or
rcl
loop
adc
jnp
jb
and
mov
test
loopne
dec
mov
fsts
popa
in
inc
lret
xchg
gs
aaa
add
sbb
test
mov
xor
rorb
repnz
adc
cmp
lea
mov
cmp
ds
je
sti
popa
xor
adc
pop
inc
push
or
mov
xchg
cli
jl
movsl
jb
cmpsb
sub
scas
jne
mov
xlat
adc
sbb
sahf
pop
xchg
mov
cli
mov
jge
daa
cltd
mov
xor
sbb
inc
jns
call
xchg
jno
lods
or
test
xchg
and
pop
hlt
ret
xor
jae
repnz
mov
jmp
pop
mov
scas
push
jno
mov
daa
mov
xor
mov
cwtl
fidivs
leave
xchg
xchg
mov
jns
mov
push
adc
in
push
shll
xchg
incl
mov
add
stc
push
xchg
cwtd
mov
outsl
rcl
push
gs
mov
dec
push
or
jne
ret
xor
jno
fwait
je
test
sbb
push
repnz
jno
das
mov
loopne
push
cmp
cmp
xor
pop
xchg
mov
es
data16
mov
call
mov
repz
sub
add
clc
btc
xchg
test
loopne,pt
mov
xor
sub
in
mov
and
test
sub
rcl
data16
into
mov
loopne
divb
push
in
xchg
rolb
cmp
aaa
lret
and
das
insb
sub
daa
sbb
mov
fcmove
push
pop
xor
pusha
cmp
cld
pop
xchg
xchg
stc
mov
insl
add
xor
lret
jae
mov
bswap
push
lock
or
cli
testl
addb
ss
mov
nop
pop
adc
je
mov
imul
pop
sub
jno
mov
xlat
jnp
xchg
sbb
cmp
fcomps
jae
popf
or
inc
add
sbb
outsb
call
pusha
cmp
or
rorb
mov
out
int
sahf
cmp
shl
push
out
lds
jbe
mov
lcall
or
aaa
call
mov
push
icebp
mov
aad
jno
inc
jb
ljmp
movsl
stos
mov
clc
fwait
dec
fildl
push
addb
inc
lret
mov
pop
clc
andb
cs
pop
negl
pushf
mov
sub
inc
push
dec
adc
jns
jns
or
adc
jae
lods
aas
sub
sahf
jae
jp
jnp
adc
cmp
ret
mov
loope
cwtl
and
lahf
out
movzwl
cmp
dec
pop
inc
mov
mov
stc
rcrb
sub
ja
xchg
shlb
cmc
stos
jg
xorb
in
jg
jae
imul
hlt
or
or
lret
test
loop
fstpt
xchg
enter
mov
adc
or
inc
push
in
adc
cmp
pop
idivl
jge
loopne
stos
es
fistps
mov
jecxz
or
adc
ret
jns
mov
and
in
mov
or
in
cmp
test
fsubl
rorb
jle
outsb
stc
out
xor
xor
fsubs
int
or
push
mov
loop
outsl
aam
xchg
pop
shll
addl
add
lret
dec
push
cmp
inc
scas
inc
mov
jecxz
negb
sub
dec
dec
xor
lcall
cmp
jge
hlt
inc
mov
and
mov
pop
lods
stos
out
scas
xorb
aas
pop
push
scas
lret
fnstenv
lds
lods
sbb
aas
in
lea
push
cmp
rorl
ds
mov
sub
add
cmp
es
cmc
ja
gs
sub
xor
andl
scas
add
repnz
sub
add
push
and
xchg
or
mov
push
or
mov
dec
pop
clc
inc
cli
nop
pop
jl
jne
fs
xchg
sbb
bound
in
xor
and
test
or
or
xchg
adc
jle
in
test
and
call
popf
mov
xor
loopne
push
roll
loopne
pop
sbb
inc
xor
nop
es
mov
adc
and
out
rcrl
dec
lahf
push
inc
add
mov
inc
xchg
xor
test
adc
insl
inc
mov
popa
scas
cltd
xor
jb
adc
add
xor
shrl
mov
pop
and
lds
mov
loope
stos
das
dec
pop
adc
sbb
jne
stos
pop
fs
movl
popf
sbb
aad
hlt
xor
pop
mov
mov
xchg
sub
hlt
pop
fdivl
adc
xchg
or
or
cmp
prefetch
sbb
rcrb
fs
and
xor
jno
ljmp
xchg
test
sub
push
filds
ss
add
das
mov
adc
mov
mov
icebp
jp
mov
lods
int
cmpsl
loop
mov
cmp
or
rcll
hlt
test
push
clc
ret
jae
mov
hlt
jmp
dec
call
flds
adc
es
jmp
xchg
sub
hlt
dec
xchg
stos
and
js
out
xchg
imul
int
es
mov
xchg
divl
add
sub
jg
sub
repz
mov
mov
pop
pop
frstor
lcall
into
jmp
or
imul
mov
out
dec
sub
mov
shlb
ja
leave
in
push
cs
dec
aas
leave
xchg
ds
movsb
call
ficoml
imul
sbb
jp
gs
xchg
cmp
ja
xchg
jb
in
js
pop
xlat
sbb
addr16
data16
mov
gs
inc
pop
pop
leave
insl
or
into
shl
and
outsb
and
mov
mov
scas
jp
in
mov
sbb
sub
shrb
in
xchg
je
lods
push
mul
push
mov
or
stc
cmp
jb
loopne
ja
jmp
cmp
sahf
lods
popa
hlt
jne
test
fistpl
sti
sahf
push
mov
cs
out
mov
xchg
xor
sub
dec
aas
aas
inc
xchg
add
pcmpeqd
lahf
loopne
fs
and
xor
bound
inc
loop
sbb
bound
mov
inc
and
sbb
mov
lahf
jg
ds
popa
sub
repnz
mov
lret
mov
ret
aas
and
add
fcomip
scas
psubw
sbb
jnp
jg
cmc
int
mov
sub
or
outsb
cwtl
cmp
insb
mov
or
loop
lock
xchg
insb
add
rorb
xchg
mov
mov
mov
and
sbb
mov
loope
mov
imul
or
adc
sbb
pushf
ficomps
mov
cmpsb
sbb
cmpsb
pop
out
std
insl
jmp
xor
mov
dec
out
aad
js
inc
out
sub
inc
stos
xor
or
jg
dec
dec
push
or
cmp
in
lret
inc
jecxz
repz
adc
filds
pop
daa
dec
popf
faddp
fwait
mov
and
mov
out
arpl
xor
jne
mov
int
sub
cmc
inc
cmp
int3
xor
repz
jb
cltd
mov
pushf
sub
mov
inc
jge
mov
daa
mov
mov
addr16
sub
pop
sub
lea
cld
sub
ss
aad
movsb
xchg
roll
and
icebp
xor
test
push
mov
cmp
mov
and
aad
xchg
xchg
adc
fstl
mov
add
imul
jne
add
add
cmpl
sbb
in
icebp
pop
pop
int3
mov
xchg
stos
out
or
jge
inc
xor
leave
bound
div
add
out
pop
scas
sbb
hlt
aaa
int3
aas
lock
sub
stos
movsb
inc
dec
fnstsw
sbb
scas
ljmp
fistps
aaa
mov
into
jo
cmp
ficomps
movsl
test
pop
jl
push
or
jp
imul
dec
enter
mov
int3
outsl
xchg
loope
popf
jmp
stos
clc
test
sbb
push
ss
and
or
pop
stc
or
pop
leave
iret
push
in
jmp
jne
cmp
adc
std
out
iret
adc
inc
pop
out
or
sbb
cmp
cltd
mov
add
pop
andb
xchg
xchg
popf
xor
loope
mov
add
push
loopne
pop
add
sbb
pop
and
aad
push
mov
bound
sbb
jnp
xchg
dec
outsb
xchg
or
cwtl
pop
add
push
mov
popa
fstps
jno
jne
pop
mov
push
dec
jg
dec
out
xor
xchg
sub
out
in
push
cli
mov
pop
ret
int
inc
push
ds
xchg
jmp
push
fbld
cmp
inc
adc
in
icebp
sahf
mov
cmp
cmp
sbb
mov
adcl
or
mov
rorl
pop
pop
gs
in
loopne
mov
cli
or
icebp
fs
xchg
mov
lcall
fisubl
adcl
and
rcl
das
fs
dec
andl
pushf
int3
testb
ja
jmp
xor
data16
jge
and
out
jbe
std
in
fmuls
lea
jmp
xor
xor
insl
or
xchg
out
jecxz
loop
ljmp
inc
incl
push
movups
loop,pn
push
sbb
test
jg
mov
xor
push
sbb
xchg
into
mov
fldcw
fldt
les
out
jno
test
fimuls
fwait
inc
mov
orb
pop
jp
xchg
outsb
clc
xlat
ret
inc
mov
rclb
adcl
sti
shl
sahf
pop
aad
and
xor
mov
push
int
fisubrs
cmp
frstor
fadd
lcall
ja
push
pop
mov
adc
sub
mov
idivb
add
jge
stos
addr16
iret
gs
ds
mov
vmwrite
shll
cmpsl
xlat
orb
dec
mov
dec
xor
arpl
push
std
and
xchg
and
dec
leave
xor
xor
mov
fnsave
bound
xchg
sub
aam
out
mov
lods
xor
dec
or
xchg
aas
and
pop
aas
mov
jmp
xlat
inc
add
and
mov
or
insb
cmp
pop
cld
fisttpl
cmp
xor
xchg
dec
and
mov
adc
push
cmp
xor
ret
lret
jo
in
andl
cmp
mov
daa
push
fwait
loop
xor
lret
push
push
imul
mov
jae
sub
or
outsl
adc
jecxz
jl
mov
jmp
in
push
aaa
and
sti
add
cwtl
jns
jno
dec
xchg
jg
dec
jb
xor
sub
loopne
test
adc
sub
scas
ret
ljmp
inc
jnp
mov
nop
sahf
jo
sbb
lods
loop
int3
cmpl
jae
shrb
cld
pushf
mov
into
jp
xor
daa
test
xchg
xchg
ljmp
pop
push
scas
dec
add
cmp
mov
jnp
sbb
cli
ja
jg
lods
cmpsl
xchg
movsb
sbb
mov
sti
xchg
insb
stos
frstor
mov
lods
pop
xlat
jmp
lods
notl
ret
test
call
pop
les
mov
out
jmp
scas
dec
pop
icebp
aad
in
adc
arpl
jmp
push
sbb
push
jae
movsl
mov
push
ret
fwait
cmp
add
inc
jp
out
int3
dec
and
movsb
hlt
push
and
lcall
xchg
out
push
into
jae
push
aam
scas
stos
xor
jmp
push
mov
cmp
pop
shl
stos
push
shl
inc
sub
pop
jecxz
mov
pop
scas
hlt
mov
arpl
xchg
pop
movsl
or
mov
icebp
dec
dec
xchg
fistpl
mov
hlt
inc
dec
dec
fwait
ljmp
insb
scas
add
jnp
outsl
jmp
out
sub
adc
mov
inc
push
adc
or
xchg
xchg
das
jge
or
push
jno
add
in
cwtl
pop
and
xchg
fistpl
mov
scas
xchg
sbb
aam
mov
notb
loope
in
stos
xor
jle
scas
rorb
and
add
lret
xor
xchg
cmp
repnz
or
sbb
add
les
dec
cmp
inc
jge
mov
ret
enter
or
xor
xorl
cli
lods
mov
insb
test
add
adc
movsb
test
push
fsubs
hlt
mov
sub
pop
loop
add
push
mov
add
ljmp
jae
pop
gs
negb
push
cmpsl
jecxz
test
hlt
mov
or
mov
or
daa
sbb
add
call
or
cmp
nop
push
lret
push
push
lahf
insb
out
push
pop
stc
sub
aad
cmc
outsb
mov
sahf
xchg
scas
aam
cld
jns
push
scas
xor
int3
and
push
pop
mov
push
arpl
mov
add
mov
stc
pop
and
mov
and
movsb
pop
and
mov
js
push
divl
lea
dec
mov
pushf
xchg
pop
pop
mov
popa
pop
lods
mov
loop
aad
or
mov
ljmp
js
outsl
push
cmpsb
xor
mov
cmpsl
mov
insb
ret
dec
add
out
or
add
xor
xor
test
iret
hlt
xchg
inc
pop
imul
inc
push
mov
mull
mov
jl
cmp
loop
push
xchg
loop
push
fs
jo
xor
stos
out
lahf
out
dec
nop
mov
jae
jno
lds
push
pop
or
pop
std
sarb
lret
and
or
pop
mov
sbb
insb
cmp
movsb
icebp
jg
xchg
arpl
push
into
mov
sbb
lcall
sbb
sahf
cmpsb
into
pushf
rcrl
jnp
sbb
and
push
pop
pop
sahf
sub
push
aam
mov
adc
jnp
dec
inc
nop
pop
sub
mov
in
mov
jmp
sub
fsubl
jle
dec
or
ret
bound
bound
cli
call
sti
dec
je
and
ficoml
pop
xchg
xor
hlt
lret
mov
jg
in
leave
cmpsb
mov
sbb
pusha
xor
pop
sbb
pushf
aas
adc
rclb
sbb
jmp
nop
dec
and
jmp
add
dec
leave
ds
mov
xchg
mov
dec
sbb
mov
popf
xor
pop
shll
fstl
mov
ds
ret
push
jns
xor
aaa
into
jae
pop
adc
in
sub
shrb
repnz
mov
mov
loope
mov
mov
addl
hlt
xor
cld
lcall
std
in
mov
stc
fidivs
subb
mov
mov
and
fxch
jb
pop
rclb
int
jecxz
mov
xor
aad
xor
push
mov
in
lock
aam
iret
aas
push
dec
lock
mov
int3
faddl
into
mov
aad
popa
mov
pop
ror
jno
mov
jmp
stc
jno
sub
xchg
cmp
dec
mov
push
sbb
je
cmp
add
inc
int3
popf
fs
sub
dec
test
push
pop
mov
out
jno
mov
jae
xchg
movsl
mov
cmp
push
mov
push
movsl
mov
ss
movsl
or
dec
cmc
and
cli
cmp
cmp
push
add
mov
clc
adc
cmp
hlt
xchg
bound
mov
aam
jecxz
jb
jecxz
mov
and
clc
cmp
add
mov
dec
sbb
mov
ds
lea
cmpsb
cmp
movsl
dec
adc
mov
lret
stos
pop
pop
push
dec
and
mov
in
sub
adc
out
lret
lods
scas
leave
dec
and
cltd
decl
pop
inc
shll
xchg
inc
xchg
pop
test
pop
push
pop
ljmp
jno
ficomps
cmpsb
add
leave
addr16
cltd
mov
sub
shrl
data16
push
decl
and
xchg
push
push
imul
add
push
out
mov
bound
jge
add
ret
xor
in
dec
sbb
test
mov
jbe
or
xlat
cmp
pop
push
sub
insl
sub
jb
into
cmp
rcl
sub
or
xor
and
pop
pusha
fimull
test
add
popa
out
lcall
cld
imul
and
inc
fsts
cwtl
mov
push
fdivs
rorl
or
ror
push
add
push
xchg
ret
jp
jbe
in
jae
test
jb
mov
mov
mov
int3
data16
daa
mov
xchg
jo
jae
into
ljmp
jge
je
jmp
xchg
lcall
imul
es
jne
sub
leave
jmp
loope
xchg
pop
mov
adc
xor
testl
jno
jle
jge
in
adc
adc
jns
cmpsb
loop
repnz
pop
push
dec
push
cltd
push
popa
fwait
popf
scas
dec
jb
inc
mov
mov
inc
lods
sub
fstl
cmpsl
std
jp
shrb
loopne
sub
cmpsb
jmp
cmp
out
and
push
and
or
mov
inc
movsb
mov
dec
xchg
insb
xchg
addr16
std
sbb
int
push
stc
push
jl
mov
push
lods
pop
push
cmp
imul
mov
das
add
dec
movsb
data16
mov
dec
in
jbe
add
add
and
mov
loop
dec
enter
pusha
sbb
fwait
xorb
add
leave
inc
mov
mov
hlt
pusha
cltd
xor
movsb
fsubrl
adc
jno
aam
std
adc
pop
gs
icebp
adc
cmp
xchg
mov
out
mov
push
movsb
adc
cmp
test
aad
jecxz
jmp
xor
mov
popa
sub
sbb
lds
lret
or
adc
mov
div
cmp
stc
lods
dec
loop
out
movsb
cmpsl
dec
push
pop
cwtl
jnp
call
push
cmp
mov
sub
adc
mov
notl
dec
jbe
mov
stos
gs
push
fs
pop
or
jnp,pn
jnp
push
or
mov
fdivl
cvtps2pd
lret
popf
stos
addr16
cmpb
push
xor
mov
mov
xchg
push
cld
daa
or
ss
fstpt
test
mov
push
xchg
or
or
cmp
jl
jle
clc
aas
pop
pop
cli
cld
cld
cmp
jmp
movsb
lods
inc
leave
popa
ret
sbb
inc
or
xchg
test
xor
xor
fldt
loope
data16
imul
jne
jno
add
lods
hlt
inc
push
adc
mov
xlat
mov
push
lcall
pop
movsl
jns
xor
movsl
add
icebp
pop
xor
ljmp
ja
loopne
mov
sbb
out
dec
mov
cmpsl
sub
dec
sub
mov
daa
in
rcll
push
push
mov
pushf
sbb
cltd
aam
lods
push
lock
xchg
out
xchg
orb
loop
lods
stos
mov
or
insb
jecxz
sub
jmp
mov
les
dec
adc
imul
jnp
arpl
jae
repnz
test
popa
movsl
stc
orb
jae
cltd
fistpl
sti
test
xor
inc
adc
and
les
xchg
mov
mov
lret
clc
ds
pop
inc
or
mov
jle
xchg
xchg
mov
stc
mov
mov
in
lds
mov
add
push
inc
ss
or
jno
pop
add
and
clc
push
jp
ficoms
imul
xor
fwait
sarl
or
inc
movsb
mov
in
mov
mov
ficompl
rol
mov
mov
mov
add
push
mov
std
add
pop
jl
jg
in
lret
cmpsl
mov
ja
and
mov
insl
and
push
aas
jp
out
pop
faddl
imul
std
pmaxub
adc
xchg
xchg
gs
xor
mov
inc
mov
and
jp
inc
or
popa
gs
sbb
mov
cmp
xor
leave
xor
enter
in
inc
xchg
jmp
loope
cwtl
mov
xchg
mov
repz
jmp
je
popa
int
mov
lahf
push
add
lcall
daa
testb
loopne
pop
jb
dec
mov
inc
jo
mov
into
mov
shll
mov
or
and
mov
insb
cli
pop
sub
es
je
outsl
inc
inc
test
or
orl
int
movsl
jle
mov
mov
movsl
rcll
mov
ds
sub
call
inc
out
push
adc
adc
ds
adc
or
popa
scas
inc
jle
sahf
arpl
test
sub
int
enter
mov
movsb
adc
add
test
cmp
popa
cltd
out
daa
ss
push
in
push
lods
out
lcall
test
pop
insl
and
or
sbb
push
das
daa
mov
cmp
cli
fbstp
push
cmp
lret
jg,pn
push
pop
ss
or
jl
adc
mov
in
mov
adc
rcrl
xchg
mov
mov
push
popf
mov
es
lahf
sub
test
or
mov
or
shrb
rcrl
xor
push
js
xchg
xchg
out
inc
shll
adc
movb
jp
inc
dec
jecxz
lock
popa
loop
xlat
bound
inc
xlat
imul
xorl
sub
push
sub
les
cmovl
jns
xor
mov
loop
pusha
arpl
call
push
mov
adc
add
mov
add
inc
leave
stos
cmp
outsb
arpl
mov
sbb
add
add
inc
fiaddl
adc
mov
lods
xchg
inc
stos
scas
fimull
jmp
lods
loop
sbb
out
rcl
rcr
adc
lret
push
stos
stos
pop
xor
arpl
push
repz
test
aad
cmp
lahf
adc
stc
arpl
mov
mov
fstpl
shll
fxch
sub
dec
add
add
or
pop
xorb
test
jecxz
push
outsl
pushf
iret
jmp
mov
rol
shrl
cmpsl
fldlg2
jb
mov
leave
int3
xchg
int3
es
xor
inc
ss
iret
call
xor
sbb
out
movl
imul
imul
push
sbb
pop
and
daa
aam
cmp
cwtl
mov
mov
enter
lret
sti
js
insb
or
movsb
jl
mov
mov
dec
dec
mov
add
sub
push
dec
jle
cmp
dec
inc
subb
adc
andb
inc
jo
int
imul
mov
test
adcl
pop
fisubrs
nop
imul
stos
mov
aam
push
loop
gs
lock
cmpsb
sub
pop
lods
lods
bound
push
add
xor
inc
popa
daa
mov
push
push
js
es
xchg
movsl
xor
gs
and
testb
jl
vpmaddwd
int
and
push
jae
jae
ljmp
shlb
sbb
pop
cmp
inc
add
sub
ret
inc
mov
mov
lods
daa
jg
add
push
sub
inc
pop
cltd
push
mov
adc
and
pop
sbb
xor
call
adc
cmp
mov
rcl
test
adc
inc
js
pop
sbb
pushf
mov
stos
cmpsl
adc
add
inc
imul
rol
leave
hlt
hlt
add
popf
imul
in
add
loopne
mov
clc
and
subl
sub
ljmp
mov
adc
popf
jmp
sub
pop
adc
dec
jle
stos
insb
sub
cmp
mov
sub
cld
insb
cmp
mov
inc
mov
cld
xor
and
inc
out
mov
jae
sub
xor
jne
or
xchg
shl
fstpl
xorl
daa
outsl
lds
jnp
xor
daa
insl
xchg
pop
cmp
dec
xchg
push
sbb
dec
mov
in
xor
sbb
loop
out
pop
jae
ret
bound
xchg
shl
lods
popa
xor
inc
mov
adc
push
addb
leave
pop
add
pop
int
mov
sbb
mov
popa
lret
ret
cmpsl
or
test
inc
push
ja
or
pop
adc
test
inc
jne
lea
inc
fsubrs
dec
sub
rolb
adc
aaa
daa
add
test
notl
iretw
cmp
loopne
add
insb
js
fcomps
leave
xor
xchg
adc
pushf
jl
mov
gs
sbb
jnp
mov
jecxz
adc
jnp
xchg
xchg
aaa
aad
fwait
jnp
and
sbb
ret
shll
ds
ret
movsl
adc
inc
lock
sti
fsubrl
es
jl
cltd
pop
std
cltd
test
jle
shr
dec
sbb
inc
and
cmc
stos
fstps
aaa
ja
jmp
and
jns
rcll
cmp
sbb
call
jge
or
sub
pop
daa
std
in
jl
pop
lret
aam
add
aaa
imul
xchg
movb
or
xchg
ljmp
mov
jnp
add
out
fisubrs
stc
outsl
xchg
push
mov
mov
or
insb
jbe
or
adc
into
daa
cwtl
inc
and
stos
jge
fldt
or
out
sar
xchg
push
xchg
and
xchg
pop
dec
rclb
test
mov
ficompl
adc
fsubr
sbbl
push
mov
jg
lret
fstpl
mov
lods
stos
cwtl
mov
push
sub
mov
xor
out
inc
xlat
or
mov
int3
add
iret
add
xor
mov
mov
test
xchg
cltd
leave
push
notb
push
push
shl
addb
inc
leave
mov
and
sbb
test
adc
in
shll
lock
sbb
cmp
jle
popf
repz
test
insb
inc
dec
ss
inc
inc
scas
mov
sti
push
fidivrs
mov
insb
push
lods
fwait
inc
pushfw
psrld
jp
ljmp
or
in
xchg
loop
lahf
je
push
cmpsb
xchg
out
dec
xor
lea
lods
xchg
lahf
mov
push
pop
sub
lret
xorl
dec
jno
jle
loope
sbb
dec
mov
mov
xchg
repz
xchg
mov
and
mov
aam
shll
adc
xor
mov
stc
mov
jp
cmpsl
cmp
pushl
sbbb
cmpb
aam
movsb
lcall
cltd
add
pop
inc
dec
adc
pop
das
or
shr
test
xor
fwait
xor
stos
orb
lds
sub
jl
adc
lret
dec
pop
sub
repz
adc
loop
xchg
add
push
in
outsl
lret
in
or
xor
outsb
lock
gs
fmul
push
shrb
xorb
out
jmp
movsl
clc
and
or
mov
pop
cmp
or
push
push
mull
sti
lret
icebp
dec
rclb
lret
je
push
add
lea
sbb
xlat
lods
mov
and
aad
or
stos
xchg
rcl
adc
outsb
jle
jns
and
add
js
cmp
inc
jne
pop
in
movsb
mov
and
cmpl
shlb
test
cmc
cmp
dec
mov
pop
stc
xchg
fsubrl
dec
aam
mov
fisubl
loopne
push
jmp
add
sbb
push
ljmp
dec
xchg
jns
pop
push
icebp
inc
popa
xchg
shrb
xchg
xor
jle
in
jo
adc
or
mov
push
cmc
mov
filds
inc
cmp
add
fsub
out
ds
mov
cmpsl
movsb
pop
mov
repz
pop
jnp
jb
rorl
push
clc
in
or
xor
jae
or
fwait
fwait
jno
xchg
iret
push
jp
jmp
pop
scas
in
idivl
add
mov
pop
dec
jg
jg
mov
out
mov
xor
sub
dec
xor
lcall
push
xchg
mov
ljmp
xchg
ja
sub
lret
pop
inc
fucomip
adc
and
push
push
mov
xor
mov
cmp
mov
pop
push
jle
fnstcw
xor
das
mov
pop
add
cmp
dec
cmp
sarl
jle
mov
arpl
dec
stos
mov
inc
add
push
imul
ljmp
pop
xor
pop
mov
pop
jp
mov
or
and
pushf
negl
mov
rorb
jecxz
xor
push
ja
mov
aaa
mov
jg
int3
cmp
cld
in
inc
adc
sbb
mov
cli
scas
repnz
dec
repz
jmp
xchg
push
testl
std
cmp
xor
out
call
je
cmp
or
enter
pop
add
mov
das
sbb
sbb
int
cmpsb
loop
js,pt
addl
sbb
and
sub
out
mov
test
mov
movsb
mov
stos
rcll
outsb
mov
loop
ljmp
jnp
mov
ret
test
jno
mov
dec
stc
ja
lods
adc
loop
mov
inc
imull
test
cmp
mov
aam
add
int
loop
jecxz
push
jle
test
ret
or
push
imul
mov
mov
in
xlat
fcoml
sbb
inc
fmull
movsl
or
cmpsb
jbe
adcl
jae
sahf
aas
out
jne
sbb
sbb
and
and
cmp
aas
std
imul
pop
xchg
xor
dec
xor
xlat
push
ret
add
push
insl
cltd
ficoml
sub
outsl
add
push
and
setb
mov
mov
shll
aad
aaa
xchg
repnz
jmp
inc
xor
in
and
jb
cmp
fwait
cltd
in
sub
jo
fcmovnu
inc
arpl
subb
dec
rorl
faddl
ja
rclb
xor
jbe
mov
into
mov
jge
aad
es
pop
scas
das
and
mov
xchg
fwait
add
xor
add
push
pop
add
pop
mov
int3
push
mov
loop
dec
add
ficoms
lock
icebp
or
pop
jg,pn
lahf
sub
test
xchg
pusha
ss
out
das
arpl
test
xchg
movsb
lfs
jnp
mov
sub
pop
jb
or
pop
in
dec
xor
cwtl
jo
cs
aas
bnd
mov
pop
into
leave
xchg
xchg
mov
data16
sbb
jmp
idivb
lods
sub
incl
jno
cmc
fdivs
test
add
sub
fnstenv
fwait
pop
add
dec
mov
imul
stos
inc
mov
arpl
jae
lret
xchg
jge
lods
mov
sub
mov
jl
je
push
popf
inc
xor
add
stos
xchg
sub
mov
and
inc
int
jne
stos
mov
stc
add
and
xchg
insb
pop
stos
fistl
pusha
popf
adc
flds
ret
sbb
insb
movsb
pop
je
divl
test
sub
jo
fildl
icebp
and
rolb
mov
sub
sub
cmp
pop
jno
in
es
and
out
movsl
xor
ret
fs
iret
out
mov
mov
pop
fisubs
test
clc
xor
fnstenv
push
pop
dec
inc
daa
push
pop
jno
mov
aaa
sub
rorl
dec
jnp
roll
fsubp
xchg
popf
xor
add
xlat
lret
sbb
mov
push
ror
jge
xchg
mov
add
call
xchg
enter
aas
jecxz
xchg
in
jle
inc
jg
mov
cmp
lret
jmp
mov
xchg
je
das
fnstenv
jbe
sbb
pop
leave
inc
lcall
pop
mov
and
sarb
outsl
fisttps
mov
mov
mov
scas
stos
loopne
push
enter
data16
cmp
dec
jnp
fwait
mov
out
ret
inc
ljmp
outsl
lods
jp
cltd
lret
pop
mov
push
out
std
addl
pop
add
jno
sub
sarl
inc
sub
jg
jne
xor
mov
int3
jle
aas
insb
gs
jne
mov
push
popf
pop
or
or
pop
das
cmp
inc
aad
div
ss
mov
and
dec
repnz
lcall
adc
inc
icebp
movsl
cmpsl
lds
in
push
in
sbb
jnp
int
jge
lods
mov
cwtl
jb
xor
out
add
jmp
sbb
icebp
or
push
and
sbb
repz
pop
cltd
pop
dec
std
dec
dec
fwait
loop
or
pop
int3
xchg
add
int3
jne
push
fnstcw
movsb
inc
push
inc
xchg
add
call
sub
gs
mov
fbld
divb
rolb
inc
and
sbb
mov
sbb
shll
mov
pop
loop
insl
xchg
movsbl
loopne
xor
push
rolb
sbb
sbb
movl
mov
or
gs
or
aas
pushf
jl
lea
sbb
mov
dec
test
pop
testl
addb
es
mov
mov
rcr
loopne
popl
sub
daa
push
pop
insb
rorb
push
mov
mov
arpl
stos
lods
and
jl
insl
test
inc
pop
stc
jnp
push
ljmp
jns
xor
repnz
shlb
xchg
test
inc
sbb
test
lret
mov
mov
push
gs
scas
outsb
mov
add
xlat
pop
in
cmpsb
cmc
pop
outsl
cmp
jg
mov
and
dec
push
cmc
ljmp
das
sub
push
push
mov
mov
out
sti
hlt
add
sbb
adc
dec
in
push
sub
in
cs
mov
arpl
pusha
xor
out
jns
cli
sbb
scas
lods
ds
out
mov
sbb
insl
sub
pop
data16
es
orb
mov
push
repz
jbe
inc
jmp
jne
fsubp
in
cmp
clc
stc
mov
mov
arpl
mov
je
out
pop
faddl
sub
frstpm(287
and
push
pop
pop
xor
les
lds
or
into
repz
ret
add
mov
imul
ret
fsubrp
and
outsl
cltd
dec
fadd
rol
mov
cmpsb
fisubrs
dec
or
ja
inc
les
push
mov
xchg
int3
iret
mov
lods
hlt
xchg
sahf
rcrl
xor
inc
cwtl
inc
paddusb
xor
cmpsb
xor
mov
sarl
fwait
jnp
xlat
push
mov
xchg
fs
jge
lahf
in
lds
sbb
add
inc
ds
fs
xor
shl
add
mov
mov
adc
pop
shlb
stc
enter
sbb
imul
fs
push
dec
pop
mov
daa
mov
xchg
jae
out
push
add
inc
adc
inc
pminsw
and
xchg
adc
ficoms
out
mov
outsl
pop
lock
fnstsw
lea
loopne
dec
ljmp
mov
lcall
sbb
in
push
inc
pushf
test
movsl
fidivrl
fdivrl
scas
fsubrp
inc
cmpb
sub
dec
mov
jmp
xchg
out
pop
xchg
imul
outsl
data16
and
xchg
push
xor
ret
rcrb
push
fldenv
mov
std
push
jg
jno
pushf
icebp
lds
pusha
and
cmpsb
add
push
imul
iret
test
jg
add
sub
imul
aas
and
xor
cmp
inc
pop
pop
adcb
pop
lds
addr16
or
rcrl
fsubr
jns
das
cmp
xchg
shl
jae
jb
aaa
mov
or
andb
fdivrs
dec
or
sbb
cmpsl
add
pop
cltd
push
and
jo
jle
fiaddl
pop
mov
mov
scas
and
xor
adc
popf
into
test
sahf
clc
adc
stos
cmp
jo
mov
imul
or
inc
pop
inc
stos
cmp
aam
and
cmp
lcall
pop
push
rcll
cli
pop
pop
cmpsl
leave
adc
cmc
in
and
popf
out
and
xchg
jle
xor
ss
fistps
lahf
mov
sbbl
and
jp
dec
mov
xlat
xchg
mov
dec
and
jnp
bound
cwtl
cmpsl
mov
lods
push
mov
in
lahf
ss
out
dec
mov
aas
inc
lret
rorl
arpl
mov
lods
xchg
and
mov
imul
jno
or
int3
xchg
negb
aad
xchg
lock
shl
xchg
sbb
xchg
js
sub
loope
mov
xchg
into
mov
aas
mov
add
pop
adc
mov
mov
xchg
push
adc
jecxz
lahf
jl
rcrb
rcrb
mov
pushf
sbb
imul
arpl
mov
xchg
in
xchg
or
sub
mov
popf
andb
lcall
jo
lahf
jo
push
insb
add
sti
cmp
dec
pop
test
sbb
push
mov
leave
int
dec
lock
roll
fists
sub
xchg
hlt
fsubr
jmp
stc
cld
insb
xor
push
mov
cwtl
pop
or
addb
cmp
fadd
push
inc
dec
out
cmc
pop
call
cmp
xchg
push
xor
mov
sbb
mov
jmp
stc
push
push
xchg
test
in
mov
mov
out
dec
or
hlt
out
add
pop
sbb
in
sub
push
adc
cmpsb
lods
rorb
mov
cmp
fistpll
cmpb
mov
shll
adc
pop
cmp
in
aam
xor
mov
loope
pop
mov
fmuls
cmp
jg
int
dec
lds
xchg
push
insb
movsl
xchg
ret
xor
sbb
or
loope
pop
add
jp
movsl
leave
fisttps
test
add
sbb
push
enter
cwtl
add
mov
pop
insl
shrb
adc
jno
xchg
cmpb
xor
mov
mov
js
push
pop
cmp
push
jp
cltd
dec
adc
pop
jecxz
ja
jo
mov
push
pushf
and
test
mov
sub
addr16
inc
dec
inc
pop
dec
das
lahf
divl
mov
icebp
lods
cmpsl
enter
fcomp
addl
mov
dec
add
jl
mov
mov
ja
xchg
cmp
xchg
cmp
scas
dec
insb
pop
fists
shrl
repnz
cld
fimull
adcb
outsb
rolb
fstpt
xlat
jno
cmp
arpl
fmull
lahf
xor
movsl
sbb
jge
jbe
mov
and
jb
cmp
push
ljmp
cmp
je
mov
cmc
loope
cmp
loope
xor
pop
cmp
cmp
stos
testb
pop
cltd
dec
ja
ss
or
dec
es
out
fmull
fdivl
adc
sub
mov
or
mov
out
aam
inc
rorb
xchg
addr16
outsl
int
mov
hlt
lock
in
gs
lret
ljmp
gs
test
fs
ret
inc
xor
pop
int
mov
jmp
and
adcl
loope
and
pusha
fsubl
sbb
lcall
stos
imul
popf
outsl
rcrl
lret
xchg
adc
sub
sbb
ret
cmp
cmpsl
pop
or
sti
push
sahf
xchg
icebp
mov
mov
ret
cmc
mov
push
add
xchg
push
addr16
push
pushf
mov
cld
or
cli
mov
je
pusha
sbb
mov
jle
outsb
cltd
mov
pop
xor
xor
scas
and
xchg
imul
out
sbb
lahf
cmp
xorb
mov
add
jg
sbb
inc
xchg
enter
rcrb
insl
cltd
mov
icebp
or
or
cmc
loopne
in
and
sbb
lds
scas
cli
xchg
lock
clc
jno
or
jo
pop
push
ja
fstpt
test
inc
xchg
mov
outsb
push
loope
inc
cmpsb
ds
sub
xor
iret
sbb
fildl
fwait
and
mov
orl
pop
rclb
insl
xchg
movsb
push
push
adc
das
std
or
scas
push
jmp
mov
or
dec
ja
shrl
xchg
inc
movsb
dec
mov
js
in
lret
jmp
ljmp
in
mov
xor
mov
fiaddl
out
push
arpl
or
shl
push
movsl
sbb
add
jg
mov
lods
mov
scas
xor
and
sbb
add
adc
sub
data16
les
lret
sub
mov
hlt
cmp
or
int
dec
movsb
pusha
mov
mov
dec
adc
and
pop
mov
gs
in
jmp
es
mov
jbe
dec
lret
lea
lds
loopne
cs
push
das
mov
sub
mov
mov
insb
test
mov
adc
jo
and
cmpsl
mov
mov
cmp
jmp
push
ret
cmp
dec
sti
aam
stc
push
add
je
push
push
into
xor
lahf
dec
mov
jb
add
push
push
dec
loop
ret
lods
adc
flds
inc
sbb
and
andl
shll
std
fmul
sub
cs
imul
movsb
cmpsl
mov
add
xchg
inc
sub
mov
xchg
es
cltd
jmp
mov
fisttpll
testb
jle
and
and
icebp
push
mov
push
inc
xchg
pop
outsl
xor
jae
xchg
rorb
int3
pop
inc
in
in
xchg
and
ror
adc
repz
mov
imul
jecxz
test
mov
sub
and
pop
add
stos
out
pavgw
shlb
out
fs
jno
ja
movsb
test
out
int3
xchg
loope
sbb
pop
fldl
push
stc
lods
sbb
mov
out
out
repnz
cmp
fmull
sub
or
loopne
sbb
lahf
mov
push
cmp
push
adc
in
cmpsl
add
and
sti
sti
xchg
aaa
fldl
fcom
les
stos
jne
xchg
ret
jg
outsb
xor
mov
test
ja
out
enter
fdivr
xor
mov
daa
aaa
add
mov
in
fsts
inc
negb
push
movsb
fcomi
or
repnz
fucomi
pop
xchg
in
cs
xchg
lock
les
jo
loop
inc
push
mov
cmp
jl
jbe
call
inc
add
xor
movsb
sarb
in
jne
int
mov
addr16
gs
sahf
fnstsw
lahf
mov
loopne
xor
jae
xchg
sub
dec
pop
lds
das
push
pop
aam
xchg
add
adcl
shlb
xor
push
add
es
loope
pop
mov
mov
dec
xchg
xor
jge
dec
cmpl
mov
or
repz
dec
scas
lock
sarb
push
in
jp
movsl
das
scas
inc
iret
scas
adc
pop
mov
pushf
push
push
mov
inc
into
cs
rol
data16
fisttpll
add
mov
ja
rclb
inc
dec
test
fimuls
aam
xor
ret
mov
shl
in
cmp
add
sbbl
addl
mov
push
das
ret
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
jmp
mov
stos
arpl
jg
xchg
rclb
xchg
popa
bound
pusha
or
imul
jo
stos
mov
mov
lret
dec
int
jb
nop
sbb
sbb
adc
bound
addb
mov
icebp
push
adc
lea
test
sbb
jae
xor
fwait
sub
push
sub
mov
cmpsl
ficoml
imul
or
adc
xor
adc
inc
int
aaa
dec
incl
addr16
sarb
pop
inc
xlat
or
data16
je
xor
pop
xchg
sbb
dec
push
mov
xchg
dec
push
out
xor
inc
push
dec
pop
cmp
sub
jno
in
mov
or
jecxz
gs
cmp
sbb
fstpl
adc
xchg
enter
mov
loop
and
lret
repz
xor
imul
loopne
incl
rolb
mov
test
lods
push
xor
jge
arpl
jb
pop
cmp
into
xchg
dec
gs
dec
fisubl
repnz
outsl
cmp
adc
pop
adc
aas
xor
adc
dec
shlw
imul
pop
push
mov
jae
cmp
inc
jmp
addl
hlt
mov
neg
testb
shlb
sbb
sbb
xor
mov
orb
sub
mov
or
lahf
sub
pop
jbe
sar
outsb
xlat
aam
movb
push
add
inc
imul
mov
xchg
in
pushl
xchg
inc
mov
xchg
ljmp
adc
sbb
or
sbb
pushf
jae
gs
dec
mov
jo
lret
fucomi
push
orb
mov
test
test
xlat
xchg
pop
jbe
rcll
and
mov
jo
mov
add
iret
addb
fimuls
out
into
pop
sti
and
insb
jo
inc
aaa
ja
in
roll
sar
mov
out
lea
push
mov
jmp
es
stos
jmp
pop
dec
arpl
data16
addr16
push
and
stos
xchg
hlt
xor
mov
adc
mov
mov
mov
fimull
ret
mov
or
sar
jge
cmc
orl
out
jns
orb
inc
push
bound
dec
jp
adc
xchg
je
dec
hlt
cmpsb
cmc
cmp
stc
add
push
lds
ja
cld
sbb
jl
sbb
fadd
movsb
lock
mov
cli
repz
stos
mov
xor
dec
xor
ds
xchg
xchg
add
cs
jb
mov
aas
sbb
out
adc
lds
lret
xchg
dec
xor
stc
jle
cltd
jnp
aaa
cmp
inc
xchg
jmp
outsl
nop
clc
or
jmp
movsl
or
jg
xor
test
cmc
mov
push
pop
push
push
add
aaa
cltd
inc
inc
xchg
cld
es
daa
jg
push
xchg
fcomi
out
xor
dec
dec
cmp
in
outsl
ss
mov
test
jns
push
sub
out
pop
lea
jg
popf
mov
lods
fdivr
and
xchg
mov
sbb
into
jecxz
fdivrs
push
sub
cmpsl
mov
push
push
or
fs
js
scas
mov
jle
fdivl
pop
push
mov
xchg
add
add
jno
jnp
leave
fcomp
popf
sarl
and
imul
sbb
xor
jb
dec
xchg
sbb
pusha
sbb
bswap
lret
aad
lods
mov
cmc
cs
and
dec
or
mov
jns
push
aad
aad
xchg
inc
fwait
pop
and
mov
dec
adc
clc
jle
pop
cmp
push
dec
sub
adc
jns
mov
jecxz
imulb
in
mov
cmp
sub
je
xchg
inc
stc
push
mov
in
push
dec
cld
fistpll
shl
aaa
fisttpl
adc
or
fisubrl
push
pushf
xchg
and
into
out
cmp
push
shrl
repz
ficomps
fiaddl
call
lock
jp
jne
js
or
out
mov
dec
sub
jle
das
repnz
jmp
mov
cmpsl
and
lods
jns
sbb
aaa
mov
mov
ret
dec
cmp
cmp
ret
mov
js
pop
into
cmp
jnp
cmc
daa
enter
call
mov
adc
sub
mov
dec
ficomps
push
mov
xor
inc
push
cwtl
enter
ja
xchg
mov
sbb
sbb
dec
insb
aas
movsl
fisubl
adc
sub
enter
inc
push
lahf
mov
lgs
cmp
clc
iret
jmp
scas
repz
loop
cmp
test
loop
dec
aas
xchg
aam
push
cmc
add
mul
mov
dec
push
loope
shl
movsl
jge
rolb
xchg
xor
lahf
mov
mov
jmp
pop
mov
test
iret
adc
xchg
xorb
gs
dec
aaa
pushf
out
dec
pop
test
test
push
sbb
ja
mov
aad
mov
sbb
mov
jecxz
add
push
cmp
call
repnz
in
sahf
cmp
mov
dec
lea
sahf
sbb
int3
add
lret
cmpl
add
push
jne
cmpsl
dec
push
pop
xchg
xor
mov
xchg
dec
fbstp
cwtl
sahf
dec
dec
or
stos
mov
call
lods
dec
xchg
lods
mov
mov
pop
push
loopne
scas
push
es
out
adc
rorb
sub
movsl
mov
pushf
xor
cmp
dec
int3
inc
loopne
sub
xchg
mov
xor
ret
pop
cli
mov
adc
jl
inc
cmp
cmp
xchg
outsl
scas
cmp
xchg
cmpsl
push
pop
bndldx
inc
imul
and
cmp
jge
rol
jno
pop
fdivs
iret
adc
and
enter
inc
pop
mov
idivl
jns
iret
jmp
sbb
cmp
mov
enter
clc
and
push
inc
cmp
mov
fsubrl
arpl
push
sub
aam
pop
add
in
cld
andl
push
test
pop
inc
fs
sti
lea
and
imul
rclb
xchg
mov
cltd
cs
sar
outsb
pop
mov
lods
cmp
movsl
cmp
inc
xchg
in
mov
psrad
jns
stc
sub
negl
sub
inc
mov
insb
jnp
dec
xor
push
mov
jae
stc
test
in
sbbb
xor
jnp
pop
xlat
dec
and
pshufw
fs
xor
mov
xchg
es
adcl
dec
cli
cltd
mov
movsl
cld
adc
sbb
movsb
cmpsl
jne
adc
adc
mov
xchg
sbb
mov
dec
in
rcr
fists
pop
sbb
xor
mov
push
push
mov
cld
pop
cld
incb
xchg
mov
jo
ds
xor
les
call
popf
aad
mov
pop
mov
and
stc
ret
jle
pop
jb
lods
cmp
xor
mov
std
ljmp
shlb
cmp
cmp
sti
jg
xchg
jle
jb
xor
loopne
int3
fmuls
xlat
mov
add
hlt
push
sub
js
xchg
in
xchg
lods
dec
mov
addr16
xchg
ss
ss
enter
stos
dec
out
movsl
cld
mov
mov
aam
mov
rorl
sti
jne
mov
pushl
les
sub
push
xor
jle
mov
push
jl
sub
cmpsb
add
dec
loop
sti
incl
out
movsb
mov
sub
movsb
data16
cld
xor
rolb
pop
cli
ret
mov
mov
and
jmp
dec
sarl
ljmp
and
outsb
xor
ss
imul
xchg
pop
pop
icebp
sub
jg
jns
dec
mov
mov
push
cld
es
test
jge
xor
xor
xchg
fcmovbe
dec
ja
dec
cltd
ror
dec
rorl
dec
imul
aam
test
lret
nop
adc
loopnew
jb
aaa
mov
jbe
ret
push
jecxz
sub
lea
adc
arpl
push
jo
push
inc
sarb
cmp
call
ja
cld
push
hlt
popf
lea
rclb
icebp
adc
lock
lcall
pop
sbb
lock
adc
cmp
out
mov
lret
repz
mov
pop
sbb
lcall
test
add
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
xor
movl
mov
sbbl
mov
addl
add
xorl
xor
movl
cmp
movl
jne
mov
mov
or
mov
add
mov
adc
mov
mov
xor
adc
push
addl
mov
xor
xor
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
subl
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
pushl
pushl
call
jmp
movl
movl
dec
mov
add
push
mov
adc
mov
sbbl
xor
sbbl
xor
subl
mov
sbbl
add
movl
add
incl
imul
mov
movl
cmp
jne
and
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
insl
push
push
jo
addr16
pop
inc
push
jb
inc
je
gs
dec
js
inc
js
arpl
inc
push
jno
or
inc
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
cmpl
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
mov
inc
add
inc
inc
add
inc
add
inc
add
ds
add
inc
inc
add
inc
inc
add
test
test
add
push
orl
add
cmp
ds
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
in
add
jno
inc
add
or
jl
inc
add
jne
je
jns
jb
addr16
imul
add
addr16
addr16
pushw
push
jle
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
add
add
cmc
enter
push
inc
add
jp
gs
inc
add
inc
inc
add
in
adc
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
dec
bound
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
add
add
push
imul
push
je
push
jbe
jo
dec
dec
pop
jp
jbe
pop
jo
push
jbe
ja
js
jno
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
add
jae
dec
gs
insb
jp
add
fs
push
inc
inc
outsb
imul
push
push
push
pop
outsl
push
dec
je
jo
add
inc
dec
outsl
pop
inc
jb
jns
inc
pop
add
dec
dec
dec
inc
jno
jae
push
arpl
add
bound
dec
ja
dec
inc
inc
push
push
add
outsb
dec
jno
jbe
insb
inc
push
add
add
add
add
jbe
imul
insl
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
cmp
inc
aaa
dec
ss
xor
dec
add
xor
dec
inc
dec
xor
dec
xor
dec
inc
xor
dec
pop
xor
dec
pop
xor
pop
inc
push
aaa
xor
pop
cmp
xor
aaa
push
xor
pop
add
push
xor
dec
inc
add
xor
xor
inc
dec
cmp
xor
pop
pop
push
add
cmp
xor
add
dec
pop
push
inc
xor
inc
push
xor
dec
inc
xor
xor
push
cmp
pop
xor
aaa
pop
xor
push
add
push
pop
xor
inc
inc
ss
inc
dec
add
dec
pop
push
cmp
inc
add
pop
xor
pop
cmp
inc
dec
add
xor
pop
dec
inc
push
pop
push
add
dec
pop
xor
pop
push
inc
inc
dec
add
push
pop
inc
pop
xor
inc
dec
xor
push
xor
ss
xor
inc
pop
push
push
inc
pop
xor
add
dec
pop
inc
inc
push
dec
push
add
dec
pop
ss
xor
add
xor
add
dec
add
inc
add
add
push
add
add
pop
add
xor
dec
add
add
pop
add
add
add
dec
add
push
add
inc
add
xor
pop
add
push
add
pop
add
xor
inc
add
add
cmp
push
add
add
push
add
inc
add
add
pop
add
push
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
dec
add
xor
xor
add
pop
add
add
add
pop
add
dec
add
add
add
dec
add
add
xor
add
inc
add
inc
add
add
push
add
add
pop
add
add
add
add
aaa
add
add
push
add
add
pop
add
push
add
pop
add
add
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
