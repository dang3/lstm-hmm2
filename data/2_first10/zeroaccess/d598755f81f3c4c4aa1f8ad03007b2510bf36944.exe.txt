push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
mov
jl
jl
pop
jl
adc
and
popa
pusha
xor
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
xlat
sbb
lods
test
mov
dec
jne
ss
rcrb
add
outsl
and
pop
cmpb
lahf
lea
dec
push
push
adc
scas
xchg
and
and
mov
mov
mov
popf
clc
push
or
outsb
jbe
stos
xchg
leave
das
adc
es
pop
jle
lods
dec
or
xor
mov
sub
jno
jno
mov
jbe
mov
cltd
test
enter
int
insb
adc
icebp
push
cwtl
cmpsb
movups
mov
cmp
push
sbb
jp
or
bound
pusha
add
sbb
popa
fisttps
mov
pop
jbe
jns
mov
inc
inc
loope
or
out
loopne
sbb
jl
xlat
sti
sub
cltd
mov
fisttpll
push
in
mov
jecxz
push
cmpsl
jl
push
xor
xor
push
popa
adc
mov
xlat
mov
mov
dec
or
mov
add
sbbb
inc
lret
inc
nop
jbe
sbb
pushf
push
xlat
cmp
cwtl
mov
mov
ret
ficomps
cmp
cmp
xchg
faddp
mov
outsb
cld
cltd
fcmove
leave
pop
xor
lods
adc
outsl
pop
dec
stos
add
adcl
cmpsb
adc
pop
inc
iret
push
fnstenv
fcom
and
repnz
pop
popa
or
stc
inc
push
in
jb
daa
pop
jle
or
mov
pop
sub
mov
movl
pushf
push
imul
add
out
hlt
jge
scas
jnp
mov
sbb
imull
or
xor
js
fbld
das
add
or
add
mov
adc
test
pushf
lods
in
add
xchg
in
lds
js
or
js
and
scas
bound
inc
push
mov
pop
inc
xchg
jnp
ds
mov
ret
test
jmp
jnp
sahf
in
inc
mov
mov
rcll
stos
in
lret
cmpsb
push
adc
mov
adc
shlb
sti
jo
les
call
mov
sub
cld
push
aam
push
or
adc
xchg
mov
js
xchg
stos
aam
mov
hlt
or
cmpsl
inc
leave
inc
mov
sarb
fptan
pop
mov
mov
cmp
push
lds
cmp
gs
adc
cmp
sahf
ljmp
gs
jg
aam
and
sub
fimuls
stos
xchg
mov
imul
jns
mov
jecxz
dec
cltd
mov
ret
cmp
pop
xchg
pusha
int3
sbb
aam
lea
xchg
inc
mov
jne
sub
incl
mov
loope
stos
mov
pop
test
pop
enter
xorb
sbb
repz
ss
mov
movsb
shrl
test
andl
mov
jmp
cltd
mov
push
xchg
loopne
sahf
imul
jb
push
inc
pop
aaa
insl
xchg
push
imul
fnstsw
in
dec
push
add
dec
mov
mov
cmp
mov
adc
dec
icebp
mov
repz
jno
and
mov
adc
adc
sub
std
mov
push
xor
adc
cmpsw
mov
insb
fisttpl
sbb
inc
rep
adc
iret
int
cld
loope
loop
lret
dec
shr
cmpsl
cmp
mov
xor
add
scas
cmp
lds
inc
fcompl
mov
mov
mov
iret
mov
xor
mov
outsl
aaa
imul
lret
fwait
imul
sarl
cmp
jo
rcrl
xor
cmp
mov
imul
test
clc
mov
es
shlb
es
mov
sahf
sti
dec
jl
xor
bound
and
mov
lcall
mov
adc
fildl
das
inc
dec
std
mov
fwait
push
aaa
mov
cmp
push
sbb
js
jle
push
mov
cmp
lret
repz
mov
xor
mov
jae
imul
insl
xor
add
aaa
and
jg
sub
jmp
repz
arpl
xchg
and
cs
mov
mov
cltd
call
xchg
aam
xchg
mov
inc
xlat
mov
out
mov
push
les
pop
push
into
pop
add
leave
out
nop
dec
sar
les
adc
fs
pushf
out
insb
mov
xchg
int3
sub
test
stc
insb
insl
jo
cli
movsb
push
loopne
and
cmp
dec
dec
and
mov
xor
jne
jg
jns
xlat
jb
hlt
imul
subb
jecxz
popf
pop
jns
push
scas
popa
xchg
or
insb
and
lret
and
adc
sub
adc
ss
dec
xor
loope
jb
fmul
mov
es
je
mov
leave
loope
mov
fsubrs
lahf
je
test
mov
movsb
out
mov
movsl
jg
iret
fistps
divb
lds
imul
int3
outsl
inc
pop
pop
ficoml
xor
inc
ficomps
xchg
cmp
stos
inc
cmp
or
xor
icebp
xor
jl
jle
shlb
shr
bound
mov
xor
pop
aam
xor
xchg
adc
xlat
add
mov
fildl
lock
insb
mov
mov
xor
mov
in
xor
imulb
sbb
lret
ret
mov
cltd
mov
ret
movsb
inc
idivb
call
inc
mov
aaa
push
lods
leave
lods
inc
push
cld
out
sub
xorl
adc
roll
dec
jae
mov
jae
lcall
pop
sub
stos
dec
xor
ror
pop
or
pusha
mov
mov
add
adc
test
loope
loop
loopne
xchg
daa
add
inc
sti
aam
lds
mov
push
outsl
mov
cmp
mov
push
aaa
sub
xor
jo
cmp
and
cs
and
loop
push
shrb
mov
xchg
daa
out
mov
das
repnz
cmp
jecxz
lret
pop
push
test
hlt
loope
inc
jecxz
mov
mov
enter
sbb
data16
mov
repnz
stc
mov
jno
mov
xor
adc
movsl
lcall
inc
imul
and
push
sub
inc
push
in
insl
fucomip
mov
push
cmpsl
orb
testb
lahf
ljmp
mov
add
fwait
mov
out
out
ret
sbb
mov
mov
lret
nop
sub
imul
pop
jns
dec
mov
nop
je
lea
sbb
mov
cltd
popa
pop
jl
jmp
addb
or
lods
jmp
pushf
orb
mov
jg
fs
add
pop
push
int3
ja
mov
mov
out
es
lret
aam
mov
test
dec
bnd
stos
xchg
add
bound
dec
fsubrs
pop
sbb
sub
aas
jecxz
sub
mov
cmp
cs
cli
shrl
mov
lcall
bnd
rcr
mov
dec
push
xchg
into
shll
push
push
fistl
mov
fbld
mov
jmp
xchg
mov
add
add
adc
popf
add
adc
hlt
fsubl
push
inc
fbstp
push
int
xor
or
sbb
inc
jecxz
jmp
lds
lret
dec
ret
daa
ficompl
cmp
dec
or
pop
icebp
dec
xchg
roll
sbb
and
pop
fdivrs
pop
bsr
loop
xchg
inc
sbb
sbb
in
xor
adc
jnp
adc
xchg
sub
in
sbb
stc
and
pusha
out
dec
add
inc
sub
cmp
and
cmp
out
sub
mov
cli
lods
pop
inc
iret
popf
adc
jge
mov
mov
out
dec
test
into
inc
test
jl
in
les
in
mov
mov
inc
mov
mov
fbstp
mov
mov
jno
das
cmpsb
out
add
fdivrs
lds
pop
mov
jp
xor
sub
imull
and
ja
pop
in
int3
sub
cld
aam
test
mov
ror
es
xor
scas
pop
ja
and
jb
aaa
adc
cmp
ja
mov
and
sbb
adc
and
and
push
insb
xor
adc
arpl
outsl
stos
lret
mov
aad
popa
xor
jle
xor
clc
fwait
cld
mov
cwtl
pop
inc
mov
stos
test
jl
xchg
and
imul
cmpl
in
sbb
mov
mov
or
xchg
mov
fisttpll
aaa
or
pop
lcall
icebp
or
pop
lods
push
and
and
stos
push
pop
iret
xor
inc
in
mov
mov
ret
leave
push
inc
movsb
sub
psrlw
adc
fdivp
ficompl
sbb
ljmp
inc
aaa
ret
pop
data16
jne
fldl
xchg
fldcw
ljmp
jns
lahf
and
clc
test
push
enter
xchg
dec
pop
ret
cmp
dec
sbb
push
mov
stc
je
or
dec
nop
mov
cmp
enter
sub
or
sub
cmp
in
mov
sbb
leave
int
push
push
fistl
inc
pop
push
scas
xchg
push
lcall
scas
xchg
and
inc
repz
mov
bound
out
out
sub
cmp
ljmp
inc
jnp
imul
mov
nop
push
cmp
push
push
ljmp
dec
mov
lock
jle
sbb
test
push
cld
xor
sbb
aad
fstl
out
rcrb
adcb
or
ljmp
pop
xor
std
cltd
cs
and
bound
leave
int
jg
dec
push
push
ss
xchg
add
cmp
push
or
cmp
lcall
inc
inc
stc
sub
push
add
jno
movsl
scas
pop
sbb
dec
mov
pop
movsl
mov
dec
fbld
lret
sbb
and
mov
fwait
cmp
mov
scas
inc
stos
andl
pop
cmpsb
push
das
dec
inc
xchg
mov
sub
dec
movsb
adc
push
xchg
lods
dec
cmpl
or
rorb
aad
push
cmp
cld
nop
push
mov
movb
adc
mov
sbb
push
notl
ljmp
repz
xor
and
or
cmc
or
in
in
xchg
jne
jmp
inc
call
and
and
jmp
add
orl
push
pop
mov
push
out
mov
cmpsb
jns
push
cmc
js
pop
fwait
dec
leave
test
dec
cmpsb
data16
xchg
cld
adc
cmpsl
out
repnz
pushf
mov
outsl
in
in
dec
ss
push
add
popf
test
xor
aad
nop
jg
jp
xor
scas
inc
repz
mov
ss
imul
rolb
repz
mov
subb
repz
fbstp
bound
aad
loop
stos
out
pop
lods
jle
add
imul
pushf
or
and
in
mov
dec
or
jg
cmp
adc
popfw
cmc
xchg
test
ss
add
rolb
mov
pop
xchg
jcxz
rcr
jae
cmp
and
stos
aas
movsl
mov
mov
sub
test
xor
xchg
nop
push
fildll
mov
add
fdiv
dec
into
dec
xor
mov
add
test
add
xchg
outsb
mov
out
daa
in
stos
into
and
push
dec
xlat
and
mov
imul
shrb
mov
mov
lock
sub
lahf
lds
push
inc
sub
inc
mov
cltd
cli
sbb
or
cld
cs
and
getsec
stos
push
jno
or
push
mov
shlb
sub
lret
xor
insl
mov
cltd
xchg
movsb
pop
in
xchg
adcl
fstps
sti
mov
jmp
lea
dec
xor
or
xchg
dec
aas
sbb
loopne
push
adc
data16
cmp
ljmp
push
loope
mov
xchg
lret
lret
pop
pop
mov
loopne
add
adc
stos
lods
test
jmp
ss
mov
inc
out
mov
in
jnp
test
jmp
pop
outsb
inc
arpl
int
inc
and
scas
adc
add
or
mov
adc
fidivs
mov
out
popf
xchg
mov
or
sub
fs
scas
decb
leave
dec
jno
out
loope
addr16
xlat
cmp
mov
mov
ret
lock
xor
push
roll
adc
jae
sbb
push
shl
inc
into
out
jnp
cmp
inc
and
fstpt
mov
lea
mov
jge
adc
cmpsb
sahf
dec
pop
adc
daa
pop
aas
outsb
outsb
movsl
outsl
bound
xchg
pop
dec
mov
jne
sub
in
dec
or
and
ja
cltd
xor
lock
outsb
cmp
push
repnz
lods
scas
imul
ret
push
pop
outsb
and
ja
adc
jne
cli
adc
sbb
xchg
out
je
jl
aad
mov
cmp
cbtw
jp
aad
xor
mov
cld
or
repz
mov
mov
loop
mov
in
rolb
mov
fs
enter
and
lods
xor
aam
mov
sbb
inc
imulb
pop
icebp
cmp
xorl
push
add
dec
movsb
push
popa
add
adc
mov
imul
stc
mov
add
add
lea
clc
out
cmp
and
mov
jb
in
adc
fsub
aas
sbb
pusha
and
das
lret
and
jmp
and
testl
adc
sbb
out
push
das
adc
repnz
sti
mov
mov
js
xchg
add
push
push
cmp
and
out
pop
adc
dec
bnd
fimull
call
outsl
test
pop
pop
cmp
cmp
inc
mov
idivl
arpl
cld
lods
push
add
push
stos
and
push
mov
xor
andb
mov
fbstp
xor
and
mov
mov
xchg
jbe
xor
fbstp
xor
mov
sbb
stc
lcall
pop
fwait
and
stos
cmp
xchg
cs
arpl
in
in
sbb
shll
loope
orb
mov
fnstsw
xchg
jl
jne
shr
or
lret
data16
or
xchg
pop
sbb
sub
fstl
and
mov
sarl
cmp
shll
fwait
mov
mov
sub
jg
pop
test
adc
pop
bound
adcl
hlt
inc
es
divl
popf
xchg
jno
clc
or
out
outsb
test
ljmp
add
push
add
popf
xchg
ss
push
popf
mov
jle
mov
xor
xchg
cs
add
es
jae
pop
cmp
and
pop
xorl
jge
dec
cmp
sbb
pop
dec
je
lea
xor
fwait
and
test
popf
cmp
pop
adc
lea
ficoml
mov
popa
sbb
pop
push
jmp
push
adc
fidivl
xor
or
pop
scas
mov
sbb
add
or
jbe
iret
enter
into
out
jnp
subl
push
jmp
repnz
pop
sbbb
daa
lds
or
jl
scas
mov
xchg
insl
or
cs
fbstp
sbb
fisttpl
ss
and
jmp
pop
jns
dec
outsl
fsubl
dec
inc
jg
fisubrs
fiadds
in
rcrb
rcll
mov
dec
data16
or
cmp
push
lret
lea
jmp
mov
imul
cmp
adc
xchg
jmp
and
mov
pop
jnp
dec
fidivrs
push
loopne
mov
jbe
and
ja
fiadds
cmp
mov
add
int
out
mov
adcb
cs
call
lea
in
sbb
dec
mov
xchg
adc
xchg
arpl
or
jmp
adc
test
sti
cltd
out
mov
and
aaa
sarb
int3
ss
push
push
sub
inc
aas
inc
mov
adc
push
loop
aam
mov
xchg
mov
andb
mov
mov
loopne
mov
adc
mov
call
dec
adc
adc
enter
push
inc
cli
dec
test
int3
loope
rol
or
lret
insb
js
cmpsl
inc
mov
lods
lcall
pop
fxch
cwtl
dec
stos
ljmp
fs
xlat
test
dec
adc
call
lret
adc
sub
in
cli
ljmp
push
test
cwtl
xchg
cmpsb
dec
pop
je
sbb
cmp
enter
mov
loopne
pop
push
jns
lods
push
cld
xchg
pop
push
adc
xor
in
xlat
bound
fisubl
or
adc
dec
call
fstl
stc
out
aaa
sbb
adc
jl
stos
fsubrl
push
in
lock
mov
adc
mov
roll
push
mov
mov
push
bound
cmpsb
push
pushl
pop
popf
lret
out
and
lds
iret
fmulp
xor
cmp
pop
inc
adc
outsl
scas
ljmp
adc
aam
in
out
cmp
scas
xchg
popf
leave
sbb
sub
rorl
xchg
cmpsl
pusha
push
sbb
lret
out
mov
neg
test
aad
xlat
pop
movsl
fsubl
ds
jns
xchg
cmp
shr
inc
jl
xor
popf
cmp
jle
cmp
xor
les
cmc
je
mov
divb
arpl
mov
add
or
push
sub
shll
repnz
fs
xchg
fidivrs
mov
test
arpl
shrl
inc
lahf
rcll
enter
xor
test
hlt
int
in
jge
adc
stos
jle
out
xor
xor
adc
xchg
into
aaa
cmp
cmc
adc
jae
emms
jo
out
mov
add
mov
push
mov
shlb
negb
jp
xor
rcrb
enter
xorl
repnz
int
outsl
ret
stos
mov
jo
call
and
xchg
sahf
push
daa
jg
mov
dec
xlat
loopne
xlat
enter
pop
js
stos
dec
xchg
xchg
hlt
pop
addr16
adc
mov
push
fdivr
pop
cmc
sahf
popf
js
movsl
lahf
scas
mov
push
sub
pop
movsb
mov
sbb
scas
arpl
lds
cmp
adc
sub
in
adc
int
pop
and
pop
cmc
std
cwtl
stc
gs
fnstenv
inc
or
mov
lds
adc
pop
pusha
adc
sub
jge
cld
ret
mov
inc
xor
adc
scas
xchg
adc
dec
dec
clc
or
lock
xor
loop
xchg
adc
cltd
out
outsb
add
cltd
cli
out
ss
mov
lcall
pop
mov
inc
jnp
push
jbe
imul
jmp
aam
enter
inc
rolb
popf
stos
push
mov
jl
es
dec
ret
fidivs
cmp
out
lea
inc
push
lock
or
and
xor
lcall
rcrl
jns
lret
add
jle
scas
inc
ret
add
fmul
xor
mov
ret
push
pop
pop
out
movsb
pop
sahf
loop
cmp
or
mov
mov
sub
nop
xor
jmp
roll
cmp
sub
rol
mov
mov
dec
jl
add
mov
leave
mov
enter
test
push
sub
xchg
lods
push
loop
pop
call
loop
xchg
or
arpl
jbe
into
inc
jle
or
inc
jno
fstps
rcll
xor
cmp
push
lock
fnstcw
push
fldl
xchg
xchg
sbb
xchg
and
dec
stc
bound
dec
movsl
xor
imull
and
xor
into
mov
mov
repz
cmp
jg
scas
dec
push
sub
ret
shll
mov
mov
data16
or
cmc
sub
inc
shl
fs
andl
insl
scas
dec
bound
jge
hlt
pop
sbb
lahf
das
or
or
and
pop
add
icebp
xchg
adc
int3
mov
enter
sbb
stos
outsl
daa
push
mov
pop
add
pop
add
xchg
dec
sub
sahf
outsb
fs
pop
adc
jb
dec
inc
push
ret
addr16
push
rcrb
xchg
mov
das
popa
pop
mov
shr
and
icebp
jb
mov
or
shrl
insl
pop
xchg
cs
lock
lahf
lret
mov
pop
lcall
dec
xor
push
out
std
xor
adc
xchg
or
dec
xchg
mov
mov
add
inc
test
stos
imul
ret
cmp
dec
jle
jge
fsubrp
mov
lods
xchg
in
jmp
cltd
stos
cmp
sub
pop
shlb
mov
fldt
pop
pop
xchg
xor
and
jb
outsb
cld
cmp
fmul
jb
imul
loopne
call
jnp
sbb
mov
adc
dec
add
test
adc
jne
nop
popf
add
int3
add
pop
pushfw
pop
xor
mov
jecxz
dec
mov
jb
jbe
cld
les
int3
xchg
pop
inc
lret
aad
add
jae
xchg
inc
add
mov
fidivl
xchg
jmp
test
inc
mov
aas
mov
in
mulb
es
int
pop
das
jnp
fsubp
scas
out
add
loop
cwtl
data16
and
lods
adc
iret
pop
test
pop
push
cmp
ffree
mov
mov
push
jno
inc
lcall
imul
fsubp
int
pop
in
mov
inc
xor
mov
sub
mov
mov
lds
test
xchg
int
xor
cltd
lcall
jecxz
mov
loop
les
dec
ror
hlt
pop
pop
add
repnz
dec
xor
sbb
jl
mov
scas
xor
cmp
sub
jno
sbbb
not
mov
fsubr
push
outsb
outsb
repnz
into
sub
out
add
lods
lock
dec
fidivs
rorb
xchg
icebp
js
shl
pop
icebp
xor
lea
repnz
mov
mov
subb
je
dec
dec
rorl
add
dec
push
divl
push
pop
out
stos
enter
sbb
movsb
add
bound
xor
sub
lock
push
sbb
jmp
mov
mov
adc
push
sbb
pop
push
repnz
movsl
in
cmp
pop
imul
inc
fsubrl
mov
jno
and
jl
dec
pop
mov
xchg
lock
sbb
bound
dec
add
test
xor
je
cwtl
mov
dec
inc
js
cmp
in
imul
shrb
out
lahf
gs
sub
push
mov
lds
sub
sub
cmp
jl
mov
inc
out
or
adc
fldl
frstor
push
loope
out
out
and
mov
pop
out
std
jae
pminsw
mov
xchg
adc
pop
ja
dec
lock
divb
mov
and
jg
out
rcll
lds
filds
out
adc
cmp
jle
mov
push
xor
cmp
jb
or
push
inc
ljmp
cmpsb
stos
push
lea
inc
test
stc
test
xlat
test
mov
push
xlat
insb
push
or
stos
cmp
and
jns
in
pushf
cmp
je
adc
mov
xchg
ljmp
lret
hlt
iret
mov
fnstcw
inc
pop
jecxz
adc
int
sahf
ret
adc
pop
frstor
stos
movsb
lods
js
adc
jg
dec
iret
sti
or
sahf
or
jne
jmp
loope
ljmp
stos
xorb
xchg
and
data16
xlat
imul
sbb
push
cltd
ljmp
jns
gs
clc
gs
xlat
cmc
lock
clc
xchg
fisttps
mov
fmull
sbb
mov
add
pop
sub
out
xchg
dec
sti
and
call
call
mov
or
jle
aaa
adc
inc
aaa
out
popa
out
mov
int
popl
aaa
insl
or
pop
fstl
and
scas
or
mov
mov
dec
test
test
outsl
loopne
shl
add
jns
aas
mov
xchg
aad
mov
ljmp
adc
outsl
and
jbe
inc
in
mov
dec
or
mov
and
jmp
xchg
mov
and
adc
jecxz
push
mov
lods
and
pop
scas
inc
push
inc
mov
inc
sarb
incl
cmp
or
clc
or
aad
stos
sub
cmpsl
inc
outsl
cmp
inc
out
mov
mov
or
insb
xor
aam
std
sarl
sub
dec
pop
dec
sbb
lock
push
push
sub
mov
or
inc
test
dec
adc
xor
dec
nop
adc
stos
or
push
push
pop
iret
lret
inc
mov
mov
mov
jns
clc
mov
test
into
decl
dec
aad
sbb
push
xchg
dec
sbbb
int
fwait
jae
or
in
pmaxsw
mov
movsb
cmp
sbb
xor
arpl
adc
repnz
mov
pop
pop
push
aad
shrb
or
pop
insl
xchg
fdivr
repnz
adc
insb
cmpsl
rcr
outsb
adc
push
and
imull
sub
xchg
divl
inc
addr16
fisttpll
xchg
mov
imul
mov
push
fmul
loope
jns
fists
cld
cmp
pop
faddl
imul
es
adc
mov
dec
stos
sub
cmp
push
sbb
cmp
and
pusha
in
mov
daa
lret
mov
fnstsw
sub
sti
lea
and
push
out
bound
adc
ss
outsl
adc
stos
mov
lret
ret
pushf
lods
mov
mov
outsl
cld
roll
mov
xchg
jae
or
fstpt
popl
fincstp
inc
dec
sti
pop
cmpsl
mov
inc
lds
aam
fcmovnb
sbb
adc
nop
pop
cmpsb
lcall
bound
inc
sub
ret
inc
jbe
in
mov
pop
popa
or
pop
cli
jl
addb
xor
xor
sahf
movsb
xor
inc
cmpsl
xchg
inc
inc
xchg
mov
mov
in
ss
das
loope
dec
mov
mov
xor
punpckhbw
mov
push
xor
inc
outsl
xlat
les
stc
or
or
loop
outsb
cmp
data16
std
ret
push
mov
cmp
loope
push
mov
push
jle
dec
sub
adc
inc
movsl
loope
enter
mov
cmp
ss
iret
mov
mov
adc
cltd
pop
dec
pop
xchg
mov
push
icebp
pop
ds
aaa
pusha
shrl
mov
mov
test
fsubrs
es
push
outsb
es
jb
jp
stc
xchg
dec
int
jbe
add
jno
and
push
cmpsb
mov
jmp
mov
add
ljmp
aas
daa
or
out
repz
fcoms
mov
or
mov
cs
adc
out
sub
xor
je
lret
or
cmc
sbb
mov
push
outsb
scas
movb
je
mov
jnp
xchg
movsl
and
adc
jp
pop
sbb
fs
pop
outsl
test
filds
not
pop
push
cmp
subb
and
dec
inc
jb
fmuls
lcall
xor
push
hlt
int3
jp
cmp
ds
lret
lods
xchg
ja
inc
mov
int3
mov
push
mov
adc
mov
jne
ret
push
and
mov
jmp
cmp
or
jnp
cltd
je
aaa
push
movsb
adc
dec
xor
mov
lcall
xchg
sbb
js
add
jle
xor
adc
dec
cs
inc
lock
inc
call
lret
aad
pop
data16
or
jns,pn
fbld
out
dec
fstpt
pop
mov
mov
adc
test
scas
repnz
mov
das
cmpsl
inc
cwtl
dec
mov
sbb
push
sub
sarl
arpl
mov
xchg
lret
xlat
lcall
dec
divb
stos
mov
aad
dec
ret
push
dec
ret
aas
mov
int
mov
push
scas
inc
jmp
lahf
addb
loope
push
sbb
mov
ficompl
outsb
dec
xchg
inc
fistpl
cwtl
add
clc
xchg
pop
push
jmp
add
dec
aad
sbb
mov
adc
imul
mov
push
mov
jle
add
negb
jle
add
xlat
ret
xchg
mov
cltd
add
jo
jae
ja
inc
mov
lcall
lea
loopne
xchg
int
pop
jne
je
popf
sti
xor
hlt
test
insl
repz
cld
addr16
pushf
jns
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
mov
jl
dec
pop
jl
push
in
in
or
xor
adc
push
xchg
sub
enter
push
dec
fs
shlb
outsb
mov
mov
cwtl
and
cmp
jg
jae
mov
and
jl
push
inc
cld
xor
xor
push
dec
jb
lds
mov
jl
insb
inc
and
je
pop
loop
pushf
call
or
sbb
aaa
in
xor
xchg
mov
ljmp
imulb
jecxz
lcall
mov
testb
cmpsb
sar
jnp
jmp
bound
mov
fwait
push
sbb
sub
inc
xor
loope
loope
inc
in
pushf
mov
jg
fadd
inc
sub
xchg
jp
adcb
out
mov
mov
push
stos
insl
jle
adc
jge
hlt
xor
in
sbb
ret
lcall
sub
dec
dec
xor
pop
sti
ret
push
add
jns
scas
xchg
adc
cmc
cmpsb
lods
fsubs
nop
scas
jns
adcl
aaa
cli
fistl
repz
lock
fnstcw
movsb
and
push
enter
test
inc
mov
in
repz
sbb
pop
rcr
jle
repnz
test
mov
mov
sti
sub
fs
insl
xchg
push
xor
repz
or
aas
mov
mov
imul
adcl
mov
loope
cmc
test
ds
pop
or
icebp
sub
into
test
dec
xor
std
xor
mov
inc
mov
int3
cmp
pop
push
jo
inc
lods
mov
lea
pop
push
ja
pop
hlt
pop
cmpsb
cmpsb
and
ja
repz
mov
sbb
dec
adc
gs
enter
push
jl
xor
enter
pop
and
mov
inc
imul
lret
lds
push
mov
decl
mov
insl
loopne
fimuls
inc
fidivrs
mov
out
mov
add
jns
xor
or
in
repnz
xchg
jp
jb
sbb
sbb
aad
jb
negb
hlt
or
aas
fs
mov
push
dec
fdivl
sbb
or
scas
mov
lahf
cmp
xchg
lock
clc
sub
mov
inc
mov
rcrb
out
outsb
adc
das
fwait
stos
fcomp
ret
mov
mov
dec
push
stos
jno
movsl
push
jmp
data16
dec
push
insl
mov
cmovne
enter
jge
imul
mov
scas
jge
mov
addb
mov
or
or
mov
aaa
pop
xor
cs
jmp
inc
pop
aaa
das
ds
xor
cmp
xchg
es
mov
pop
and
pop
out
imul
pop
inc
aas
push
std
push
lods
push
sub
add
inc
xchg
mov
out
xor
mov
xorb
mov
mov
imul
ret
cmp
rorl
jno
mov
popa
loope
cmp
test
movsl
repnz
stos
push
xchg
pop
jecxz
push
dec
ljmp
mov
insl
gs
mov
dec
scas
rcll
xor
add
es
jge
in
jg
pop
popf
std
add
and
add
ljmp
pop
cmp
cmp
xchg
stos
mov
sbb
push
mov
sbb
adcb
ds
call
in
or
adc
pop
mov
mov
cmp
pop
add
xor
scas
mov
movsl
xchg
jae
xchg
xchg
les
push
stc
cmc
das
mov
pop
stos
fisttpl
or
lock
sub
push
mov
jge
pcmpgtd
pop
inc
out
out
jo
inc
enter
repnz
mov
out
popa
push
jmp
mov
lret
inc
call
lds
jmp
mov
ud2
push
jg
mov
aaa
ss
mov
ficomps
xchg
jmp
sarb
lock
incb
push
push
pop
leave
jnp
scas
mov
mov
ljmp
pop
dec
hlt
inc
sub
inc
cmpb
dec
out
test
xor
jnp
inc
and
les
pop
ds
pop
loope
pop
out
pop
loope
incb
ret
stos
sub
mov
lods
jo
jb
mov
or
mov
gs
shlb
add
enter
loop
xchg
loop
mov
sbb
cmp
xchg
scas
sahf
and
dec
push
mov
les
nop
mov
sbb
add
mov
and
inc
xor
test
lret
sahf
xor
shlb
cmc
leave
icebp
adc
pusha
mov
out
test
adc
in
xchg
repz
xor
lock
pop
xchg
cmp
push
mov
das
ja
outsl
pop
pop
sbbb
and
jl
cwtl
test
shlb
or
xlat
incl
add
mov
mov
inc
rclb
push
stos
mov
pushf
loope
lods
mov
stos
pop
hlt
or
mov
dec
xor
lcall
cmp
mov
icebp
int3
pop
adc
pop
arpl
enter
movsb
add
mov
movsl
add
mov
and
dec
dec
push
or
je
iret
pop
ret
outsl
push
iret
fld
in
icebp
push
inc
inc
int3
or
loope
xor
enter
into
mov
adc
xchg
add
xchg
sti
int3
jbe
adc
mov
jecxz
jbe
pop
cmp
jnp
jmp
fimull
cli
xbegin
inc
cmp
mov
sbb
lock
mov
test
xchg
push
add
xor
cmpsb
push
push
mov
clc
in
cmpsl
rolb
adc
xor
sbb
inc
push
xchg
jl
jne
mov
inc
das
or
cmc
add
adc
push
sbb
loope
pop
or
fbstp
mov
out
jbe
dec
pop
sbbb
adc
push
mov
cmp
sub
hlt
bound
jp
push
xchg
enter
add
enter
cmp
ret
and
mov
test
gs
xchg
clc
xlat
inc
sbb
js
fisttpl
cli
std
clc
pop
pop
fsts
push
ds
mov
push
and
sub
lret
addr16
loopne
movsb
out
mov
inc
mov
and
pushl
rorb
push
add
inc
jge
ljmp
push
xor
sbb
lahf
pop
sub
je
jns
fs
mov
scas
mov
inc
lods
addb
ja
popa
cmp
jge
push
test
mov
cmp
addr16
shll
or
xchg
xor
popa
inc
push
int3
nop
or
push
push
cmc
cmp
mov
mov
sbb
imul
ds
xchg
rorl
add
adc
arpl
mov
into
jo
les
fistl
lock
bound
int
xor
loop
mov
ja
mov
xor
sub
mov
adc
enter
notb
imul
clc
sbb
into
in
mov
mov
xchg
jmp
rcrl
dec
jnp
sahf
std
inc
mov
mulb
pop
outsb
pop
dec
fisttpll
push
pop
or
and
call
clc
jno
sbb
add
xor
hlt
sbb
popa
cs
filds
and
push
sub
mov
fidivl
repz
xchg
push
in
mov
cld
mov
sub
movsl
xor
addb
rolb
add
push
pop
jbe
cmp
repz
pop
std
repz
fwait
pop
and
pusha
inc
repnz
pop
mov
repnz
nop
dec
inc
and
je
ret
mov
xor
jp
cwtl
rclb
dec
pop
mov
mov
sbb
inc
sbb
jo
in
adc
out
in
xor
and
cltd
sub
inc
call
out
incl
xor
testb
sub
andb
jbe
sbb
push
sbb
mov
and
cli
lret
repnz
pop
icebp
mov
cmpl
push
push
out
loopne
mov
popf
imul
mov
pop
ja
jne
cwtl
xchg
adc
pop
and
sbb
pop
mov
test
fmuls
iret
dec
fst
mov
insb
test
js
in
push
into
clc
lock
xor
mov
inc
pop
adc
inc
daa
adc
imull
inc
fs
and
cmpsb
sub
push
std
add
ret
push
lods
jl
fnsave
movsl
andl
cmp
inc
dec
inc
jbe
push
test
push
add
rcl
add
inc
aam
mov
pusha
pop
cmp
stc
ret
mov
cmpsl
jg
fdivrs
stc
pop
xchg
or
scas
jo
jb
pop
ljmp
push
out
aaa
arpl
hlt
jo
test
jbe
sbb
daa
stos
dec
pop
mov
or
insl
adc
sub
mov
mov
mov
and
mov
xor
ljmp
push
out
sub
dec
div
scas
cmp
add
daa
and
pop
mov
xlat
add
jle
sbb
push
xchg
push
leave
icebp
xor
fadds
lods
aad
je
test
ret
out
repnz
xchg
cmpsb
cwtl
cmp
aaa
into
shll
push
insl
int3
xchg
pop
mov
fs
lahf
xchg
cld
fisubs
push
rorb
add
push
fisubl
or
jle
mov
xchg
scas
xchg
rclb
test
cmpsl
add
inc
mov
push
pushf
dec
pusha
daa
pop
cmp
mov
pop
inc
xor
mov
mov
data16
xchg
data16
xor
es
sbb
stos
mov
jne
pop
push
push
ljmp
add
mov
sbb
lret
mov
fidivrs
mov
pusha
cmp
mov
ficoml
int3
cmp
xor
arpl
std
inc
scas
sub
shl
rcll
lahf
add
xchg
out
in
mov
inc
jmp
xchg
mov
imul
in
mov
ja
idiv
push
mov
ja
int3
dec
cmp
pop
push
imul
ja
pop
test
div
fimuls
loopne
lods
push
mov
dec
mov
ret
imul
inc
hlt
clc
or
xlat
test
fadds
out
lods
mov
addr16
and
shll
ss
mov
dec
lret
jns
push
push
push
xchg
imul
iret
dec
test
or
inc
dec
cmp
jg
arpl
push
frstor
sbb
fcoml
mov
ljmp
call
fsubrp
and
pop
hlt
and
shll
xchg
pop
cltd
sbb
push
movsl
iret
addr16
daa
cmp
ds
fcmovnbe
mov
xchg
cmpsb
cmova
mov
stos
insl
imul
pop
mov
adc
cltd
js
adc
repz
addb
xchg
in
sbb
leave
pop
outsl
popa
test
out
insl
push
pop
daa
mov
out
in
sbb
jge
mov
adc
insb
lret
jle
sub
add
subl
add
sbb
icebp
jge
mov
mov
shll
sbb
loopne
and
fcmove
dec
xchg
pop
fsubrl
xchg
orb
pop
dec
mov
shrb
cltd
jl
mov
mov
or
stc
andl
sub
or
mov
mov
lock
jae
imul
mov
fwait
mov
mov
xor
jle
dec
adcl
ret
call
xorb
jle
push
call
jb
div
xchg
jno
test
test
and
das
outsl
repz
lea
rorl
push
push
and
js
leave
sbb
loop
jnp
push
daa
shlb
push
bound
mov
lcall
fimuls
inc
sub
rcll
pop
pop
xlat
xor
dec
fnstcw
loope
inc
push
ret
pop
test
ja
xor
jp
loope
test
mov
lret
aas
push
lahf
fwait
scas
fbstp
mov
into
and
add
mov
rcll
out
cwtl
mov
and
add
xchg
jl
addl
nop
mov
jmp
jmp
push
jl
inc
std
incl
mov
test
adc
out
ficomps
xchg
and
pop
arpl
sub
xor
les
aad
fmull
pop
xor
mov
cmp
test
dec
pusha
add
shrl
add
loopne
adcb
ficoml
aaa
leave
jnp
out
clc
xchg
bound
xor
idivl
jnp
sahf
and
outsl
push
roll
outsb
jno
test
xor
or
sub
fcoml
orl
mov
mov
loope
inc
das
pop
repnz
mov
testl
or
sub
pop
or
cmp
out
push
ds
mov
incl
iret
xlat
test
jecxz
loope
xchg
ret
add
sub
pop
push
in
cli
sub
test
adc
adc
mov
sbb
cltd
bound
out
pop
sbb
inc
shrb
subl
lret
mov
mov
lods
enter
pop
insl
pusha
ret
xorl
les
mov
cmpsb
fadd
sti
mov
dec
lret
ret
adc
adc
or
mov
flds
xchg
pop
rclb
jnp
pop
push
cld
addb
mov
mov
ss
lock
dec
lret
sub
jl
push
cld
inc
or
hlt
fisubl
shlb
mov
inc
fucom
outsb
outsl
add
and
fs
bnd
lods
subb
or
insl
xchg
xchg
js
push
notb
dec
push
lcall
out
or
dec
xlat
fstpt
leave
ficoml
push
jb
or
ret
add
cmp
push
imul
cld
mov
pop
test
mov
xor
jl
xor
leave
push
popf
push
insb
mov
push
xor
scas
pop
test
scas
scas
lret
push
and
fsts
bound
lahf
mov
jo
mov
dec
mov
leave
adc
pop
shll
jecxz
aaa
xor
leave
add
mov
pop
jbe
jb
cmp
arpl
push
sbb
ja
or
daa
add
pop
jne
pop
jnp
lret
inc
idivb
jae
xlat
sar
mov
dec
and
push
outsb
fs
push
xor
mov
fstpt
rcl
push
fsts
xor
loope
rcrl
adc
mov
aam
into
jecxz
push
adc
mov
repz
xor
add
sbb
dec
sub
dec
andl
jo
loop
pop
mov
add
stc
xor
xor
icebp
mov
and
dec
xor
dec
pause
mov
mov
pusha
push
lds
lods
addr16
or
scas
pushf
mov
cmp
pop
inc
aad
xchg
jge
pop
pop
hlt
dec
mov
dec
popl
mov
mov
sbb
fcoml
or
insl
roll
jnp
sbb
iret
xor
jmp
aaa
sub
mov
lock
push
sub
ds
test
popa
cli
jmp
lods
lds
jne
push
xchg
sahf
outsb
out
aaa
ljmp
aam
ret
jmp
pop
lcall
dec
pop
cmp
outsl
add
dec
adc
daa
ss
aas
shlb
xor
jecxz
dec
fs
pop
subl
sbb
pop
push
mull
jecxz
xchg
in
stc
insb
lock
jae
and
mov
popa
pop
lock
mov
stos
int
jnp
fs
cmc
mov
inc
sub
push
lret
mov
xlat
mov
inc
test
insb
or
shll
in
enter
pop
cwtl
xor
cmp
dec
pop
cli
push
pop
hlt
pop
fistl
out
pop
jnp
cld
sbb
adc
icebp
js
sbb
nop
mov
call
outsl
adc
mov
pop
out
mov
sub
shl
mov
sub
and
iret
fdivs
mov
mov
cmp
lods
xchg
ss
push
mov
inc
inc
or
push
imul
daa
insb
mov
dec
sub
clc
mov
fistl
or
xor
bound
inc
sub
jbe
fsubl
aas
mov
sbb
jns
adc
int3
dec
sahf
int
lcall
pushf
mov
or
addr16
jnp
pop
mov
fstpt
out
cmc
pop
cmp
cmpsb
sbb
adcl
rclb
pop
push
jle
stos
sbb
xlat
push
jb
jle
and
in
xor
push
pop
xor
or
push
jl
ret
cld
push
mov
aaa
push
iret
mov
adc
mov
in
mov
mulb
fcoms
xchg
fnstsw
mov
add
imul
inc
stc
rorb
jae
pop
xor
out
pop
int3
jbe
rorl
lea
sub
lds
xor
push
nop
cmp
and
jg
movsl
sub
pop
xchg
ja
popa
inc
mov
mov
mov
dec
mov
pop
leave
movsb
repz
or
sbb
int
ret
cmpb
cmp
fs
aaa
shrb
xlat
out
cmp
mov
outsb
aad
lahf
outsb
jmp
inc
mov
test
fdivs
jg
pop
mov
bound
sti
lcall
mov
cmc
repnz
xchg
movsb
inc
cmc
leave
cli
jnp
lods
sub
ret
repz
inc
adc
movzbl
scas
daa
cltd
jae
pusha
out
gs
push
jge
daa
loop
cmp
movsb
push
movsl
sbb
insl
inc
and
or
sbb
xor
xor
jg
pop
push
push
mov
ljmp
dec
sub
testl
lods
sub
cmpsb
push
out
push
inc
repnz
pop
pushf
aaa
xchg
movsb
scas
push
dec
inc
xchg
pop
dec
mov
inc
in
mov
ja
inc
mov
add
jecxz
pop
sub
mov
shrb
icebp
fimull
or
push
mov
mov
or
in
cmp
and
push
pop
jle
fadds
ljmp
inc
test
mov
xor
sti
nop
pop
pop
jge
push
inc
int3
mov
negl
rcl
mov
int3
mov
stos
nop
jge
push
sbb
or
divb
arpl
push
andl
gs
sarb
aaa
sti
subb
aas
enter
and
out
pop
mov
shrb
or
rorb
sar
mov
insl
cmpsb
jg
lock
movsl
pop
nop
lds
xor
das
stos
xor
xor
icebp
cmp
in
and
dec
or
fadds
ret
pcmpeqd
cli
in
cld
jns
inc
push
subb
cmp
xchg
ss
divl
pop
sahf
ja
cs
repz
outsb
jnp
insb
repz
xchg
inc
js
adc
cmp
test
pop
push
mov
fcoms
dec
sub
icebp
and
sbb
xchg
hlt
mov
jl
mov
lds
scas
ljmp
jno
push
add
mov
mov
cmp
hlt
jmp
shlb
in
mov
fidivs
aas
mov
adc
imull
roll
xchg
pop
inc
sar
xchg
pusha
rolb
popa
popf
and
pop
push
test
roll
inc
xor
cmc
shrb
test
fcmovnu
add
push
mov
imul
loop
jnp
mov
cli
xchg
jge
fnstcw
mov
add
and
ds
add
xchg
cmp
mov
mov
dec
dec
test
cs
pop
mov
orb
daa
clc
js
mov
and
dec
sub
data16
daa
lahf
mov
lea
fs
push
enter
cmc
rorb
pushf
mov
push
cmp
cltd
mov
dec
adc
xor
bnd
push
cmp
pop
vcvtsd2ss
xor
ret
or
sahf
ret
inc
rcrb
push
cmp
outsl
mov
hlt
xchg
inc
fistps
xchg
leave
clc
popa
xor
pop
out
lret
aad
jg
or
int3
mov
enter
decl
add
jle
repnz
adc
les
mov
fnsave
push
movsl
pop
jae
mov
pop
nop
or
sub
sahf
jns
scas
cli
jmp
pop
mov
jl
cmp
adc
push
and
cltd
dec
dec
push
push
add
inc
icebp
push
and
dec
mov
pop
cmp
xchg
shl
inc
popa
dec
jp
or
std
pop
std
xor
movsl
sahf
push
jo
or
xor
jge
movsl
inc
bound
mov
or
pop
push
in
pop
jmp
mov
pop
lock
leave
inc
push
push
xor
xchg
sub
inc
jg
push
adc
push
push
adc
stos
sub
int3
gs
mov
xor
outsb
ret
jns
fstpt
mov
call
xor
xchg
push
cmpsl
flds
pop
jl
dec
rolb
fcmovne
xchg
mov
push
shr
js
xchg
sbb
sbb
jbe
les
scas
loop
mov
sahf
addr16
dec
mov
mov
and
jns
pushf
mov
cmp
sbb
push
push
jg
sbb
popa
mov
xchg
pop
adc
push
arpl
push
xor
aam
push
sbb
jno
cmpsl
aas
mov
mov
sub
mov
sbb
in
idivl
subl
push
cwtl
je
inc
adc
sub
ret
mov
loop
cs
es
and
pop
pop
pop
jne
inc
pop
lods
das
sub
ljmp
pop
pop
mov
xchg
mov
pop
call
js
lahf
idivl
sti
lret
jmp
insl
je
sub
popa
pop
sub
dec
adc
out
pushl
cmp
shrl
mov
icebp
aaa
xchg
xchg
mov
iret
rorb
inc
lods
gs
cmp
pop
je
out
push
lods
andb
cmpsl
div
popf
cmpsl
nop
out
out
dec
mov
xchg
test
movsl
jbe
push
pop
ss
inc
sub
sbb
aad
fists
xchg
pop
pusha
inc
in
test
je
sbb
push
inc
movsl
imull
mov
pushf
cmp
aad
adc
in
adc
mov
push
lea
fmulp
push
icebp
lcall
xor
push
sbb
test
push
sahf
pop
add
cmp
inc
imul
fstpl
xor
pop
xchg
sub
pop
in
cmpsl
and
pushf
iret
cmp
mov
cmovle
hlt
inc
ret
dec
mov
sub
push
add
pop
lea
imul
push
mov
cli
aad
push
adc
lods
shrl
mov
idivb
aam
loop
dec
cmp
test
rcrl
clc
adc
mov
and
pop
push
mov
cmpsb
icebp
or
xorl
mov
lret
push
sar
pop
push
decl
push
insl
sbb
inc
lods
sahf
shll
mov
subb
ja
shll
adc
push
fxch
xchg
jns
jg
dec
cmp
out
pop
xchg
je
subl
push
pop
ss
sbb
pusha
push
enter
in
push
dec
push
and
inc
pop
sbb
mov
mov
xchg
adc
fiaddl
jns
mov
out
xor
into
andl
push
and
dec
cwtl
ljmp
jg
inc
pop
xchg
stc
stc
or
add
xor
testb
xchg
fsubr
stos
mov
int
lock
dec
mov
dec
mov
push
adc
pusha
lcall
and
sub
pop
jnp
pop
push
stc
mov
ret
jp
jo
testb
loopne
and
or
lret
push
push
add
mov
or
nop
rorb
mov
push
inc
push
sub
pop
pop
adc
push
mov
rorb
adc
jb
mov
pop
leave
js
mov
mov
fisubrs
mov
mov
sub
dec
movsl
je
push
je
sbb
fbstp
imul
adc
sub
mov
xor
jmp
and
mov
and
add
mov
sub
inc
adc
lea
cmp
xchg
push
mov
pop
loopne
push
inc
movsb
pushf
decl
jle
cli
movsl
push
mov
adc
jae
jne
in
outsb
add
cmp
jl
adc
jae
pop
push
fistpl
sbb
fstps
dec
pop
inc
lods
filds
jb
and
jge
ret
mov
cmp
mov
and
xchg
in
push
xor
cmp
sub
lea
movsl
mov
imul
sbb
mov
imul
mov
std
push
mov
pop
ljmp
jle
sub
mov
nop
aam
clc
jmp
mov
dec
push
and
in
xlat
xor
cmp
lcall
xchg
js
jnp
enter
dec
std
push
push
aaa
stc
sub
scas
jp
pusha
push
addr16
inc
shrb
sbb
inc
cmp
sbb
lea
mov
aaa
in
jge
loope
push
or
cmpsb
inc
mov
jo
pop
movups
jecxz
pop
dec
sub
mov
hlt
xchg
and
mov
aas
out
sti
lods
sti
fmul
pop
cmc
mov
inc
clc
roll
outsb
dec
filds
xlat
repnz
outsb
test
pop
pusha
fdivl
sbb
sub
xor
push
dec
das
mov
dec
mov
imul
sahf
cli
mov
mov
call
mov
repz
repnz
popa
jp
cs
inc
test
mov
outsb
mov
or
int3
xor
lock
in
xchg
cmp
xor
and
mov
and
into
push
es
data16
loop
inc
add
push
lret
dec
popa
add
cmc
stos
ljmp
add
xor
push
into
push
cli
je
xor
lods
stos
popf
jae
out
sub
cmpb
fnclex
xchg
or
hlt
sbb
mov
xor
inc
adc
jb
sub
popa
jp
mov
xchg
push
dec
in
mov
lock
adcb
in
sbb
testl
pop
mov
mov
ret
mov
cmp
inc
mov
mov
outsl
add
ret
or
jge
xor
aaa
mov
and
cmp
shrl
popf
enter
push
sbb
out
aad
popf
or
int3
jl
fidivl
imul
ljmp
aam
push
mov
ja
xor
xor
adc
rclb
push
push
push
aam
jno
popf
xlat
dec
pop
xchg
shll
jge
mov
xor
xor
js
stos
pop
adc
add
lret
popf
aad
in
das
cli
adc
test
sahf
sbb
loope
xchg
addr16
fwait
mov
aam
xor
cwtl
sbb
jne
push
adc
inc
push
ficomps
loop
fildl
cmp
cwtl
mov
std
mov
cmp
push
mov
mov
and
and
xor
sub
sahf
lods
aad
insl
cli
xchg
iret
cmc
orl
mov
out
idivb
sarb
jg
sbb
stos
js
adc
pop
imul
fs
imul
aas
xor
sti
sub
xlat
cmpl
imul
loopne
sbb
in
pop
pusha
inc
xchg
push
push
mov
jge
fldcw
sub
mov
cmc
inc
jns
adc
lea
out
data16
cltd
gs
pop
enter
mov
dec
ret
and
inc
fnstcw
xchg
daa
sub
mov
ret
and
push
cmc
sub
adc
mov
cmpsb
adcl
jmp
adc
inc
adc
cwtl
mov
mov
xchg
jp
into
std
iret
push
fdivrs
jno
gs
add
pop
lock
in
pusha
lods
test
fldl
add
inc
ds
sahf
mov
xchg
popa
jg
sahf
cmp
inc
sti
mov
cmp
ja
mov
jno
jb
pop
mov
arpl
mov
mov
fsub
and
add
cmpsl
mov
push
or
add
xchg
movsb
mov
push
and
push
xor
mov
jae
jp
movsl
mov
sbb
mov
movsl
inc
jle
xchg
push
repz
inc
adcb
push
idiv
cmp
sbb
cmpsb
or
and
cmc
dec
xor
in
pop
in
and
jns
cltd
imul
cld
aam
sbb
xchg
mov
inc
push
pop
imul
lret
cwtl
sbb
inc
cli
mov
mov
add
mov
and
pop
adc
mov
arpl
and
or
push
jecxz
mov
sub
xor
outsb
jns
into
es
imul
movsl
pop
imul
mov
xor
mov
jb
adc
movaps
xchg
xchg
fwait
cmp
lret
pop
jmp
loope
push
jg
in
cvttps2pi
inc
sarl
push
in
les
add
sub
sub
push
scas
dec
pop
mov
lods
loop
js
ret
and
cmpsl
pop
pop
clc
cmp
xor
lahf
xor
xor
jg
insl
push
dec
add
xor
push
or
mov
mov
bound
mov
bound
push
jnp
lret
dec
mov
lds
ficoms
roll
rcrb
test
inc
sub
inc
imul
and
adc
jo
xor
fidivl
imul
add
sub
test
sbb
jge
cmp
mov
add
subl
cmp
sbb
xchg
mov
mov
in
jo
add
mov
lock
movsb
mov
lcall
ret
xlat
das
cltd
iret
fwait
jns
in
out
sarl
inc
push
dec
adc
gs
jne
iret
lds
js
jae
cmp
mov
pusha
sub
ret
mov
out
jbe
push
insl
inc
or
or
pop
sub
adc
in
xchg
bound
lret
jp
push
add
jnp
sbb
mov
inc
add
dec
and
add
mov
sbb
pusha
push
cmp
pop
jl
dec
rcrb
push
and
gs
nop
icebp
imul
ret
aaa
imul
hlt
push
test
sub
mov
cmp
fadds
aad
outsb
into
mov
fistpll
outsl
lds
gs
rcll
sub
adc
sarl
fisttps
repz
mov
dec
sbb
xchg
jg
inc
push
adc
incb
incb
pop
int
or
pop
lret
mov
cmp
js
and
sbb
in
shrl
dec
pop
stos
lret
mov
fistpll
push
je
mov
push
mov
rorb
shll
ret
mov
add
xchg
notl
inc
fdiv
xchg
add
incb
out
jmp
repz
repz
pop
dec
push
push
or
sbb
xor
sbb
sarb
loop
push
or
in
and
push
cmp
mov
mov
push
jle
pop
mov
inc
xchg
dec
dec
or
cmp
push
push
ljmp
mov
les
jns
sbb
fldt
es
push
in
arpl
xor
ss
mov
mov
jnp
mov
test
rcrb
or
or
test
scas
inc
or
xor
jle
in
adc
adc
jecxz
mov
cmp
inc
call
movsl
stc
mov
mov
adc
fnstenv
in
clc
mov
jnp
mov
jg
fbld
xor
cmpsl
leave
sub
lret
cmp
xor
fcmove
cmp
push
ss
push
xor
rclb
add
daa
xor
fs
data16
jmp
ret
int
popf
pushf
hlt
jg
fwait
push
cmpsl
push
out
push
fildl
mov
jecxz
out
cmp
cli
sahf
jle
stos
popf
into
adc
inc
inc
je
mov
inc
mov
cmp
sub
push
jb
mov
roll
pop
adcb
cmc
insl
out
aam
pop
pop
and
or
pop
movsl
push
pop
imul
aaa
inc
inc
pusha
push
lods
or
cmp
out
int3
rcrl
sbbb
adc
mov
adcl
es
cwtl
ret
mov
mov
mov
sub
xchg
and
in
outsb
mov
imul
jae
int
mov
scas
adc
testb
cmpsl
mov
lret
inc
mov
lock
mov
jnp
xor
cmp
shll
in
fistps
add
mov
dec
dec
and
stc
add
sub
pand
mov
ficomps
flds
dec
adc
idivl
out
mov
mov
mov
cmp
xlat
mov
shrb
or
out
aam
fimull
and
pop
ffreep
aad
jp
push
popa
insb
pushl
dec
lea
adc
mov
lods
fldl2e
add
lods
aas
cwtl
push
pop
xchg
inc
jno
mov
and
cmp
pusha
cmpsb
popa
push
call
aaa
sub
lock
inc
repz
scas
or
mov
nop
jbe
sub
jnp
and
pop
je
test
bound
add
cmp
adc
jnp
orb
out
inc
idivb
xchg
incl
push
mov
push
or
or
shll
inc
ret
out
mov
add
out
fisubrl
xchg
scas
pop
mov
mov
push
sbb
sub
pop
pop
pushf
and
fimuls
dec
stos
stc
jg
call
xchg
jl
jne
jecxz
sahf
cmpsl
int3
loop
jnp
pop
data16
xor
pop
sahf
enter
jo
shll
subl
xchg
nop
fisubrl
mov
mov
push
int3
dec
xor
sahf
fstpt
std
lock
mov
ja
leave
lahf
jecxz
popa
or
mov
jge
xor
rolb
loop
pop
pop
shll
lea
pop
in
mov
fcoms
bswap
pushf
push
xor
push
sub
jp
movsb
fiadds
leave
faddl
gs
cld
fwait
in
stc
inc
mov
enter
pusha
idiv
push
pop
cs
int3
sub
scas
push
push
cwtl
repz
fcoml
xor
adc
je
pop
mov
pop
inc
mov
add
popa
mov
aas
cmc
xor
stos
std
daa
mov
test
je
loop
outsb
or
pop
outsl
mov
or
ja
pop
js
jmp
mov
push
in
xor
xchg
popf
xchg
sub
inc
inc
call
sub
das
fldenv
inc
rep
loopne,pt
jg
fcomps
dec
push
aam
fidivs
aaa
mov
loopne
and
aam
nop
sbb
mov
cmpsl
cmpsb
mov
inc
sbb
push
jecxz
cltd
call
fcmove
out
pop
mov
cmp
and
and
mov
or
mov
xadd
cmp
rcrl
pop
adc
in
mov
mov
loopne
sub
adc
sub
outsb
push
cltd
mov
sbb
das
aas
lea
push
lcall
cmc
xchg
leave
jge
mov
sbb
push
push
cmp
pop
int
jne
cmpsb
ja
je
adc
dec
pop
hlt
jns
adc
iret
repz
pushf
std
cmpsl
test
xor
adc
jge
icebp
xor
push
clc
ljmp
push
inc
out
jno
movsb
nop
addr16
mov
pushf
jmp
and
sbb
repnz
js
mulb
and
or
push
notb
adc
in
xchg
aad
sub
ljmp
scas
pop
ds
mov
nop
pop
icebp
mov
stos
pop
in
dec
loopne
push
mov
adc
popa
xchg
negl
testl
inc
mov
inc
aam
inc
jle
sbb
gs
out
loope,pn
jl
dec
dec
push
xor
pushf
xchg
imul
in
mov
push
rorl
rclb
cltd
sub
xchg
ja
jg
pop
inc
jns
mov
int3
xchg
lods
xlat
add
xor
daa
adc
out
and
jne
xchg
adcb
das
aaa
enter
push
mov
mov
addl
ret
test
sbb
ud0
adc
inc
sbbb
mov
sub
xchg
mov
sub
fnstsw
push
daa
les
xchg
pop
xor
xchg
mov
ret
inc
or
add
mov
iret
sar
out
mov
jns
fcompl
xor
push
fs
jle
xchg
test
inc
mov
rcrl
es
rclb
and
fistpll
xchg
ds
jno
fistpl
or
lea
sub
shrb
ds
mul
xchg
mov
sahf
stos
fcmovnb
mov
dec
inc
mov
outsb
adc
ljmp
loop
fisubrl
lcall
cmpsl
rol
inc
dec
jbe
adc
pusha
les
divl
lds
or
xor
popa
aad
sbb
into
test
jns
divl
xchg
and
out
lods
loop
add
inc
leave
inc
es
mov
scas
dec
and
popf
or
xchg
iret
push
popa
outsl
adc
dec
mov
roll
xchg
push
xor
pop
xchg
int3
mov
and
mov
out
in
gs
movsb
loop
sbb
call
add
or
push
mov
lcall
test
addr16
jne
push
cld
sbb
int3
inc
daa
movsl
cmp
fst
jmp
push
mov
mov
jo
fwait
xor
pop
push
sub
mov
adc
pop
mull
xor
xor
loopne
sub
clc
cmp
adc
inc
jge
inc
out
mov
xor
pushf
outsl
in
iret
adc
lods
mov
pop
xchg
cmp
push
int
int3
out
cmp
sbb
enter
xchg
add
iret
out
in
mov
jno
sbb
push
sti
pop
push
loopne
test
insb
pushf
inc
mov
sbb
sbb
outsl
inc
mov
popa
mov
loopne
xchg
push
mov
jge
fcompl
jnp
enter
fistpl
add
push
js
in
scas
jecxz
popf
mov
mov
pop
or
fs
fldenv
jno
rorb
outsl
mov
push
fcoms
xor
mov
mov
frstor
nop
rorl
xor
pop
cmp
rcrb
push
repnz
mov
fists
jb
mov
adc
fbstp
fdivrl
insl
addr16
push
or
addr16
push
aas
fadds
or
js
fs
daa
insl
fsubs
mov
mov
popf
test
in
test
or
test
sbb
enter
and
mov
pop
mov
arpl
push
inc
daa
je
dec
mov
addl
adc
mov
jle
test
jge
lret
test
aaa
repz
sti
lret
js
pushf
aas
xorb
jmp
sbb
dec
xchg
outsb
sub
jae
mov
sbb
xchg
je
jecxz
inc
inc
repnz
lods
and
mov
in
repz
popf
cmp
inc
adc
daa
inc
ljmp
fdivrs
test
inc
outsb
inc
popa
dec
cwtl
jle
stos
je
stos
insb
mov
cli
roll
test
mov
cmovb
in
sub
repz
sub
insb
cmp
inc
pop
in
add
fwait
inc
pop
inc
fsubs
in
aas
in
outsb
cmp
cmp
pop
mov
mov
imul
dec
push
dec
pop
pop
cmc
mov
inc
sar
dec
cmp
cli
mov
add
sub
icebp
cmp
loop
ficompl
fsubs
and
mov
cmp
mov
into
insl
sbb
pop
ja
scas
push
int3
push
jmp
loope
add
and
dec
push
inc
adc
stc
shlb
mov
mov
or
inc
sbb
aad
mov
xorb
jg
sbbb
lret
cltd
lret
clc
jmp
dec
pop
mov
mov
jns
loop
in
mov
repnz
pop
test
jo
jne
pcmpeqw
jnp
inc
mov
out
orb
aam
inc
and
pushf
call
xchg
je
repnz
mov
push
push
push
mov
loope
cltd
icebp
call
cs
repnz
xor
loop
mov
test
and
dec
push
mov
pop
dec
loopne
xor
stos
push
pop
jae
leave
int
mov
xchg
sub
dec
xchg
clc
push
mov
adc
roll
and
hlt
sbb
loope
adc
dec
fldenv
sti
int
enter
lods
push
inc
rclb
jp
xchg
and
ds
repz
fwait
jle,pn
xchg
dec
test
daa
mov
mov
arpl
and
test
mov
inc
imul
test
fistpll
call
jl
int
xchg
imul
nop
sti
mov
pop
pop
cmp
pop
add
xchg
mov
push
mov
mov
adc
or
pop
iret
and
das
add
fucom
xlat
cs
shll
andb
data16
jo
inc
xlat
les
nop
push
movsl
mov
in
jmp
cmp
xlat
mov
dec
xchg
lock
mov
inc
mov
aaa
cmp
mov
movl
std
out
inc
dec
add
test
adc
mov
cmp
pop
aam
shlb
cmp
ljmp
lea
cmp
mov
aaa
popf
hlt
fcmovbe
jg
ret
or
push
jb
pop
cwtl
mov
dec
fnstsw
cli
es
and
test
sbb
shrl
push
xor
stos
out
xor
inc
cld
imul
adc
loope
xor
iret
cli
sarb
mov
or
iret
push
sbb
fnstenv
imul
pusha
adc
popa
cli
pop
gs
loopw
dec
pop
sub
jge
xor
repz
and
stc
or
mov
push
pushf
pop
pop
scas
mov
cmp
mov
add
mov
mov
sti
mov
test
or
test
dec
je
fimuls
inc
xor
sub
ljmp
adc
cmc
mov
adc
mov
sub
jp
xchg
test
nop
xor
add
add
cmc
das
sti
cmp
fwait
daa
shrl
xlat
xchg
adc
jle
lret
dec
clc
lcall
test
add
xor
fisttps
jg
daa
pushf
test
xchg
bound
mov
ficomps
mov
popf
outsb
mov
lock
lock
jl
shr
popa
push
push
aad
sub
fldenv
cmp
push
adc
int3
lods
movsl
in
xchg
repz
outsb
dec
mov
mov
out
orb
popf
mov
xor
xchg
sub
inc
incb
inc
mov
xorb
popa
andl
js
sbb
lods
adc
mov
xchg
mov
or
cs
dec
mov
push
dec
xchg
add
hlt
aas
popf
fcomi
fdivr
xchg
adc
mov
mov
call
movsl
mov
cmpsl
ja
add
xchg
cmc
jle
bound
xor
dec
push
nop
xchg
or
out
mov
inc
lret
mov
in
roll
jmp
xchg
stos
lock
stos
jae
cwtl
add
jmp
js
push
and
mov
push
sub
cmp
sahf
iret
jle
outsb
mov
test
jo
std
out
test
clc
ret
in
mov
sub
dec
inc
xchg
xchg
cmp
xchg
push
outsb
or
add
add
sbb
add
lods
imul
test
sub
xorb
cmp
loopne
imul
jae
or
adc
iret
jo
int3
xor
and
std
sti
ljmp
insb
ljmp
lret
mov
and
mov
nop
jge
xor
addr16
mov
mulb
xor
scas
lcall
fisubs
lahf
mov
cmc
pusha
es
les
lock
inc
and
aas
addr16
mov
daa
xrelease
pop
adc
insl
test
into
sub
rorl
subl
pop
xchg
std
mov
inc
cmpsl
pop
cmp
fs
xorb
cld
or
xchg
movsl
scas
daa
xor
add
rep
cltd
rcrb
bound
leave
xchg
jecxz
mov
fldcw
outsb
mov
ret
jbe
push
lds
leave
pop
je
lea
sub
dec
sahf
or
sub
sbb
mov
adc
xchg
inc
rcr
fisttpll
inc
ljmp
testb
mov
shr
sub
cli
aaa
aaa
xor
shrb
es
inc
shll
push
sub
jns
movsb
cmpsb
dec
lods
cltd
into
in
insb
dec
das
pop
popf
out
dec
jmp
jmp
aaa
sub
leave
xor
xchg
outsl
cwtl
in
in
fildl
outsb
pop
lcall
jle
sbb
lahf
adc
sbb
xchg
mov
adc
arpl
aam
add
push
arpl
adc
inc
outsb
lret
out
int3
mov
popa
les
dec
cli
in
pop
loopne
push
add
xchg
ja
adcb
out
adc
mov
and
shl
fisubrs
mov
out
lock
cmp
sub
adc
in
ja
int
sub
inc
cltd
jmp
pop
and
mov
cmp
insb
in
pop
mov
and
lods
sub
and
or
or
ljmp
cld
xchg
sub
not
lahf
gs
dec
push
in
or
sahf
icebp
ret
push
inc
stos
out
jle
orl
mov
cmp
arpl
and
cwtl
stc
outsb
jp
pop
popf
sti
lock
test
add
inc
mov
fsub
jns
inc
ret
sub
pop
mov
out
xor
lods
into
aam
inc
inc
clc
cmpb
into
xlat
pop
xchg
xchg
jmp
rorl
push
daa
into
cli
imul
movl
mov
lods
mov
jle
adc
aaa
xchg
inc
addl
or
fsubs
repnz
pop
clc
iret
hlt
ret
enter
pop
mov
paddq
clc
pop
inc
adc
cmp
je
push
jl
out
mov
adc
inc
test
add
push
mov
push
lea
sub
push
mov
sahf
rorb
sti
imul
in
outsl
jno
cmp
test
inc
sub
lods
fcompl
mov
out
in
xor
mov
mov
sub
cmp
dec
push
inc
stos
push
imul
jns
jmp
fisubrl
xor
cmp
jge
add
sti
lret
inc
xor
arpl
mov
jbe
out
mov
mov
push
sti
cmp
mov
sbb
add
es
fisubs
mov
mov
idivl
iret
inc
jmp
pop
sbb
icebp
dec
and
stc
cmp
sbb
test
fidivrs
mov
push
or
or
fstp
xor
les
inc
push
pusha
xor
ljmp
lods
or
lret
jg,pt
jl
mov
mov
in
xchg
cmp
add
test
test
daa
push
adc
lock
or
dec
rol
jmp
movsb
lahf
jnp
addr16
int
mov
mov
push
add
ret
mov
jle
jmp
js
sub
cmp
iret
xor
in
pop
repz
out
mov
sti
cmp
mov
adc
dec
dec
jg
jecxz
push
lcall
pop
inc
test
or
icebp
jecxz
mov
ret
pop
fsubp
sbb
sti
out
push
push
mov
popa
jne
jmp
stos
outsb
rol
test
mov
fisttpll
xchg
outsb
add
inc
xor
push
in
popa
sarl
sbb
les
sub
mul
imull
into
push
mov
push
xor
mulb
dec
je
jns
mov
inc
push
addr16
mov
insb
cmc
pop
and
mov
xor
xchg
iret
nop
fistpl
pop
jp
scas
xchg
xchg
cmpsl
movsl
push
lcall
mov
out
mov
inc
xlat
xchg
cltd
jnp
mov
mov
push
dec
shll
sub
lret
dec
insb
dec
mov
neg
pop
shrb
or
stos
test
out
das
lcall
out
pop
cld
imul
movsl
xchg
sbb
mov
ss
cmp
loop
ds
ret
pop
adc
adc
sbb
ror
push
faddl
mov
jb
cmp
int3
out
mov
int3
and
cmp
xchg
pop
and
sub
xor
es
mov
mov
xor
sti
ja
hlt
inc
jb
in
inc
cmp
pop
dec
lcall
jl
mov
push
pop
inc
bound
or
cltd
in
stos
outsl
push
pop
and
gs
out
xchg
popa
cltd
jp
sub
shrb
test
sub
shr
movsl
fstpl
mov
enter
in
int
mov
in
mov
push
lds
cmpsb
push
jge
imul
xor
push
pop
stos
adc
cmp
outsb
lock
sti
lahf
mov
addr16
mov
inc
jb
sub
sbb
std
cwtl
push
call
xor
cmpb
xlat
add
popa
imul
push
js
push
add
mov
mov
fs
mov
shrb
mov
out
pop
das
repnz
mov
add
xchg
fsubr
cmpsl
fsubs
or
inc
aaa
and
pop
dec
testl
dec
lods
inc
push
mov
jae
dec
daa
lret
lds
jne
sub
jp
fsubl
sub
jl
jl
jns
push
pushl
lock
insb
jg
and
cmp
add
or
pop
in
pop
cmp
daa
outsb
sub
inc
mov
sbb
and
fs
test
jbe
ficompl
fbld
pop
jno
dec
cmp
pop
and
mov
lret
fwait
and
out
test
mov
xor
js
loope
in
mov
push
and
scas
xlat
lcall
add
mov
ss
jmp
aad
fisttps
cmp
jecxz
call
xchg
or
cmp
and
js
fisttpll
mov
jae
repnz
push
pop
into
cmp
lods
bound
sbb
dec
xchg
stc
ja
popa
addb
enter
in
addl
ljmp
dec
lcall
lea
jp
mov
ja
loopne
sbb
in
fldt
cli
rorb
fldt
out
xor
dec
sub
int
inc
fs
lods
aad
or
mov
sbbb
dec
push
push
repnz
push
sbb
mov
xor
sbb
mov
sbb
mov
xor
cmpsb
stc
dec
gs
dec
lds
lret
std
and
pop
mov
inc
cmp
mov
lock
xchg
ret
loopne
imul
mov
adc
push
stos
test
jo
subb
faddl
dec
pushf
jp
jecxz
in
push
sub
pop
lret
adc
pop
jle
push
adcb
push
inc
gs
or
rcrl
ljmp
in
push
rcrl
loope
cld
loope
enter
shl
cmp
nop
inc
jne
into
loop
aas
dec
jnp
insb
pop
mov
fisttpl
mov
inc
test
rcrl
mov
negb
out
mov
stos
cs
in
xchg
push
iret
xchg
mov
cmp
pusha
xor
sub
pop
or
gs
push
out
push
cmpsb
fbstp
adc
outsl
out
mov
insl
add
add
stc
push
mov
xchg
frstor
xchg
testl
sti
iret
sbb
inc
stc
pop
xor
popf
call
aaa
jnp
xor
popa
add
loope
jbe
cmp
mov
and
popf
add
idivl
sub
gs
loope
xorl
unpcklps
inc
pop
mov
int
add
in
xor
and
fcomp
jg
add
or
outsl
pop
out
inc
leave
inc
and
adc
mov
jb
fbstp
mov
lret
pop
icebp
pop
and
cmpsb
push
into
dec
pop
jge
mov
cs
jnp
sti
inc
imul
arpl
frstor
das
xor
cmp
mov
sub
int
jmp
jb
aas
in
pop
or
mov
jmp
add
push
xchg
xor
rcrb
and
test
sbbl
sub
add
inc
add
clc
stos
sub
mov
or
mov
inc
cmc
mov
imul
frstor
lock
daa
into
add
xchg
push
int3
inc
in
aam
push
dec
xchg
jns
imul
pop
call
push
push
push
add
jle
aam
cmpsl
and
cmpsl
add
push
add
or
js
add
xchg
xchg
or
aaa
test
je
and
aaa
movsb
cmp
lock
lds
cmp
sub
xor
inc
rclb
rclb
xchg
pushf
dec
mov
out
or
push
popf
in
sub
inc
push
icebp
jbe
or
jo
out
stos
shl
or
inc
shll
aaa
xchg
dec
add
pop
call
lods
mov
lret
mulb
aaa
cli
add
mov
sbb
es
pop
stc
bound
jo
movsl
mov
xchg
sbb
mov
cmp
rol
ja
xor
xor
inc
scas
dec
das
xor
cmp
jno
push
and
mov
jbe
mov
pop
pop
dec
jge
add
cwtl
adc
cmc
cmp
je
sbb
sub
call
adc
rclb
enter
mov
flds
sub
addr16
fildll
push
mov
idivl
fs
scas
movb
sbbl
out
stc
stc
ljmp
mov
pusha
adc
jge
jecxz
lock
int3
addr16
and
repz
fidivl
fwait
jae
daa
inc
data16
stos
lahf
jns
add
lahf
push
or
inc
xchg
in
leave
bound
jge
ss
sub
jnp
loope
jp
fmull
test
xor
add
cmc
cmp
jmp
inc
repnz
sub
stos
lea
and
lds
adc
in
cmpl
and
push
test
addr16
and
out
jl
jb
pop
loope
arpl
in
pop
in
out
test
push
in
sahf
jle
adc
cmp
bound
iret
xchg
aaa
movsl
lahf
mov
test
dec
outsb
das
sarb
imul
jg
xchg
xor
insl
outsl
leave
cmpsl
and
xchg
jns
cmpsl
jae
ficompl
fdivs
or
outsb
or
arpl
repnz
push
inc
lret
stos
push
mov
inc
rolb
inc
jo
iret
jmp
push
xchg
pop
pusha
les
or
arpl
adc
cmp
cmpsl
mov
inc
mov
inc
xor
mov
adcl
fsubrs
and
pop
cli
daa
dec
add
sti
sub
jne
pop
dec
pusha
sbb
xchg
push
popa
pop
fldcw
in
jl
js
cmp
mov
ret
std
xchg
pop
or
adc
dec
mov
ja
push
andb
and
imul
hlt
xlat
pop
cltd
mov
mov
aas
addb
lock
jns
imul
fbstp
mov
inc
movsb
inc
mov
xchg
mov
push
xchg
into
or
xchg
cmpsb
mov
std
jb
insb
in
hlt
sbb
iret
rcr
mov
shlb
fnstcw
cmc
hlt
push
xchg
mov
in
mov
hlt
sbb
jmp
dec
popa
je
inc
cmp
xor
sub
jb
and
popf
adc
addr16
loope
neg
std
push
sbbb
mov
insl
xchg
push
push
in
inc
popa
lcall
addr16
mov
xor
das
lods
addb
js
jo
cmpsl
fsubrl
xchg
nop
jno
push
ss
lods
pop
lea
andb
pop
das
lcall
int3
inc
out
clc
into
dec
pop
aaa
data16
dec
mov
or
push
aaa
lods
xor
inc
lret
pop
ljmp
pop
stos
inc
lds
lods
ja
cmp
movsb
pushf
mov
and
das
adc
mov
push
sub
add
xchg
mov
jge
in
xchg
jnp
movsl
add
adc
in
dec
xor
sbb
pop
or
pop
lcall
stos
mov
icebp
cmp
into
add
ret
or
out
jp
repnz
dec
out
notl
xchg
xor
fisttps
xor
mov
inc
push
sub
dec
sahf
mov
jp
aad
mov
mov
out
add
pop
dec
fcoml
fisubl
push
xor
adc
xchg
fcmovnb
arpl
test
out
pop
lea
jg
fcompl
jns
jo
cmpsl
mov
push
into
aad
loope
aaa
sub
sahf
fiadds
inc
adc
gs
pusha
je
filds
cmc
dec
jle
push
push
fcoml
mov
mov
fdivrl
loop
dec
mov
dec
lahf
mov
jnp
mov
inc
adcb
or
pushf
pushf
pop
orb
jge
nop
xchg
sub
enter
aas
icebp
sar
outsl
loope
aas
pop
adc
jbe
cwtl
sub
test
ds
pushf
gs
dec
imul
movsb
leave
jno
xor
mov
inc
cmp
pop
mov
mov
shlb
xlat
ss
push
subl
xchg
cltd
fcmovnb
adc
fisttpll
sbb
notl
outsl
sub
cmpsl
cli
dec
sbbb
dec
into
shl
bound
push
dec
mov
add
adc
or
or
jne
lods
xchg
push
repz
adc
lds
mov
popa
push
aaa
fwait
or
lea
cwtl
aam
add
fimull
popa
addb
scas
cmp
xor
dec
testl
inc
mov
insb
sbb
addb
push
jecxz
xlat
jp
mov
inc
scas
ja
mov
xorl
sahf
push
mov
pop
inc
cli
xchg
in
loopne
inc
jp
mov
mov
cmp
insb
xchg
movl
adc
stos
inc
stos
pop
adc
fwait
mov
xchg
ss
cmp
adc
retw
loop
push
inc
pop
sbb
xor
fisttpl
and
mov
and
cmp
sbbl
mov
aaa
stc
adc
mov
data16
mov
inc
mov
push
ret
scas
gs
add
stos
cmp
cmp
imul
js
jno
push
stc
ds
dec
xchg
add
clc
add
enter
sub
mov
pop
cmp
add
and
mov
lea
jl
lods
lea
out
loopne
loop
pushf
cmp
xchg
mov
fs
sbb
test
or
lcall
dec
aam
xor
sti
or
mov
seta
roll
mov
cmp
pop
pop
mov
insl
nop
mov
inc
lods
testl
imul
push
int3
roll
push
lret
loop
jecxz
fnstenv
neg
fs
and
cli
das
mov
mov
or
xlat
xchg
cmpsl
aaa
jae
daa
jbe
mov
out
mov
loope
in
int3
dec
mov
or
movsl
das
lds
stos
mov
push
cmp
or
inc
sub
mov
mov
jo
sbb
mov
xchg
fstpl
cld
loopne
dec
mov
add
mov
cmp
xchg
xchg
clc
cmp
jl
inc
xor
add
fcoml
shll
xor
mov
bound
outsl
sub
push
xchg
xor
sub
lahf
das
cmp
lds
fisubl
into
dec
and
jae
movsb
sbb
adc
sub
pop
adc
add
add
cli
insl
fistl
cld
xchg
pop
sub
cmovb
orb
loope
cmp
dec
fcompl
les
mov
sbb
ljmp
addr16
mov
dec
mov
call
jne
aaa
sub
repnz
dec
push
orb
add
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
pop
cld
dec
rolb
jl
scas
int3
jae
jmp
dec
push
lea
pop
gs
and
xchg
pop
negl
inc
xor
cli
loop
push
aas
dec
xchg
setp
popa
xor
adc
and
jmp
into
ficoms
rep
leave
add
xor
addr16
adc
insl
insl
push
adc
sub
sarb
inc
mov
mov
or
hlt
outsb
push
adc
mov
adc
imulb
shll
add
push
cmp
fxch
mov
scas
mov
aaa
icebp
imul
daa
xchg
pop
out
xchg
nop
addl
lock
push
or
pop
icebp
out
jb
fwait
insb
mov
push
push
out
or
add
lret
push
inc
cmpsl
pop
adc
andl
andl
sub
stc
or
lods
mov
or
or
in
or
mov
fcmovnbe
xor
imul
dec
push
mov
loopne
call
jb
xorb
cmpsb
dec
rol
rorl
gs
scas
xor
arpl
stos
rolb
or
dec
ljmp
enter
std
cld
jmp
xorb
xor
filds
into
test
loop
test
fadd
out
lods
mov
mov
xchg
ss
pop
test
cmp
cmpl
in
pop
push
push
sub
mov
sub
into
jo
daa
ja
ficompl
adc
imull
faddl
lds
mov
test
xor
stos
adc
lcall
sarb
lds
enter
mov
or
cmp
lds
and
push
sbb
daa
cmpsb
int
inc
xchg
dec
pop
jmp
pop
mov
imul
xor
mov
cmp
idivl
pop
rcr
enter
shrl
mov
inc
cltd
and
stos
fwait
lcall
inc
shll
cmc
imul
jg
lods
rcll
mov
pop
in
mov
fnstenv
mov
in
jo
inc
fwait
mov
mov
insl
imul
insb
ficomps
lahf
data16
dec
jo
mov
cs
call
jmp
stos
hlt
je
int3
cmc
dec
lock
jmp
pop
addr16
fildl
pop
and
pop
add
jge
outsl
mov
mov
fs
and
cli
push
xchg
movsb
ss
xchg
je
cltd
mov
jns
ret
adc
jns
fs
adc
arpl
jg
js
fistpll
pop
addr16
fildl
jle
sbb
inc
add
add
mov
jo
mov
mov
pop
aas
cmp
add
popl
inc
push
push
outsb
mov
inc
clc
xchg
push
pop
adc
insl
and
call
popa
cmpsb
push
stos
push
pushf
inc
pop
jmp
fsubl
push
shrl
xchg
test
push
xor
adc
or
test
clc
xchg
mov
bound
roll
sar
fwait
sbb
xor
inc
jae
mov
int
pop
pop
cltd
and
incb
mov
add
dec
dec
adc
data16
jecxz
movsl
jne
jbe
mov
sbb
in
lock
mov
dec
fs
push
cmpsl
inc
cmp
and
lret
in
mov
xchg
in
dec
push
mov
cmc
pop
or
pushf
dec
daa
enter
mov
mov
inc
dec
and
mov
jl
jg
shr
dec
ds
loopne
mov
pop
xchg
fsubrs
aam
xor
jnp
out
jmp
in
cltd
sahf
sahf
sub
lea
mov
popa
push
mov
jno
std
push
jns
jnp
or
nop
and
neg
mov
xlat
sahf
lahf
rcll
scas
out
loopne
enter
inc
mov
gs
cmp
mov
adc
pusha
mov
mov
pushl
iret
push
sub
adc
push
movsb
mov
repz
pusha
jg
mov
ret
push
pop
lahf
shr
jle
inc
push
mov
scas
dec
pop
aaa
jecxz
lds
sbb
cmp
call
xor
pop
pushf
mov
sbb
jns
inc
mov
daa
and
sbb
push
mov
nop
inc
stc
enter
sbb
in
adc
mov
cmp
add
stos
sarb
and
add
inc
call
test
add
sbb
sbb
mov
ja
mov
notb
jbe
inc
repz
lret
xlat
movsb
sub
movsb
add
loope
mov
sahf
jle
mov
jno
ficompl
stc
xor
mov
cs
sub
test
out
iret
cmp
mov
jmp
push
jl
scas
jns
push
ds
adc
mov
mov
push
dec
or
sbb
sbb
ljmp
inc
mov
popa
xchg
int3
mov
mov
out
sbb
and
mov
pop
push
sbb
push
subb
mov
ret
out
sub
cmp
fnsave
mov
jno
adc
in
mov
out
mov
add
dec
icebp
xchg
in
pusha
out
in
jge
clc
mov
lahf
mov
into
sub
mov
cld
ljmp
jge
push
xor
adc
clc
sbb
and
js
out
mov
in
push
sub
fists
and
aas
ja
dec
ret
inc
push
jo
xchg
orl
push
stc
call
dec
mov
inc
sub
mov
loop
cmp
imul
sti
mov
nop
fcoms
mov
ret
pop
adc
and
loopne
xchg
mov
sbb
pushf
or
xor
push
push
mov
int3
fldlg2
sub
fstpt
aam
insl
sbb
fisubrl
mov
loope
mov
out
je
mov
dec
and
insb
ret
jb
mov
pop
push
sahf
outsl
ret
push
mov
or
mov
js
cmp
adc
xchg
ljmp
repz
mov
mov
dec
insb
and
mov
dec
xchg
cmp
iret
sti
jae
icebp
inc
aas
xchg
jmp
xor
movsl
outsb
mov
sub
jl
cmp
inc
std
or
mov
mov
iret
in
cltd
push
stos
lahf
popf
cwtl
bound
aam
add
fucomp
sahf
bound
mov
testl
xchg
in
out
and
das
push
iret
popa
mov
mov
mov
jp
or
lret
cmp
out
dec
lcall
fldl
xchg
fdivrs
sbb
pavgw
rcrl
sub
push
xor
hlt
sub
mov
push
sub
lods
sbb
jle
mov
cmp
imul
push
pcmpeqw
rclb
movsl
sub
test
mov
dec
push
fwait
jmp
sbb
xor
and
out
sar
xchg
lahf
roll
lods
xor
out
add
cmp
int3
mov
aas
push
cs
in
fimuls
mov
xor
imulb
push
push
dec
aad
ret
sub
ja
loope
jae
and
xor
ds
or
jae
roll
das
cmpsl
jge
xchg
loop
movsb
jo
inc
arpl
in
icebp
mov
ja
mov
rep
notb
lock
outsl
loop
add
lock
dec
and
inc
lods
inc
jbe
push
cld
push
push
push
add
adc
or
mov
sub
jle
dec
sub
mov
jl
mov
inc
jg
outsb
in
gs
pop
rcrl
mov
cli
push
mov
sti
dec
inc
jecxz
test
cmp
pop
cmp
mov
gs
xchg
jp
xchg
xchg
cwtl
fs
lcall
fadd
mov
mov
pop
push
xlat
loop
test
gs
insl
outsb
inc
mov
push
cli
dec
push
lds
and
xor
pop
aaa
loop
jp
rorl
xor
xchg
nop
shlb
inc
int
push
fwait
repz
call
out
mov
xchg
andl
add
inc
mov
mov
pop
out
add
das
pop
fsubl
adc
and
mov
insl
stc
arpl
pop
loope
aam
sbb
adc
xchg
das
mov
out
out
mov
fadd
jnp
jmp
or
fwait
xchg
lods
shl
lahf
lds
into
fstpl
hlt
stos
sbb
xchg
dec
rolb
incb
in
clc
inc
fs
push
lds
ds
aad
in
xchg
je
sub
out
add
call
jecxz
aam
inc
or
out
invd
add
jns
sbb
ret
in
push
xchg
ljmp
pop
pop
lods
push
cmp
cmp
insl
cmpsl
ret
sub
pop
cmc
jmp
lea
test
popf
sbb
push
mov
bound
pop
mov
jge
rorb
outsb
sbb
add
outsb
and
dec
lods
mov
fnop
xchg
jns
mov
sti
int3
aas
pusha
and
lret
xchg
scas
and
sub
lret
dec
loopne
cmpsb
sub
bound
cld
cmp
mov
cmc
out
xor
cmp
xchg
mov
cld
push
sarb
adc
mov
ret
jge
clc
xorb
mov
xchg
adc
out
gs
movsb
test
idiv
mov
aas
sbb
mov
mov
or
icebp
xor
aam
mov
cmp
mov
jp
pop
call
les
sub
cmp
sub
pop
cmp
add
cmp
push
test
addr16
dec
in
mov
stos
outsb
kunpckbw
pop
add
lret
xor
mov
addl
test
cmpsb
dec
add
adc
in
icebp
sub
jge
sbb
sbb
scas
cld
ja
or
jb
aaa
jmp
jmp
xchg
data16
sti
xchg
pusha
sub
out
sub
aam
ret
xor
mov
sbb
inc
iret
jp
shlb
iret
pop
cs
mov
xchg
lds
push
stos
pop
ss
shrb
cmpsb
xor
out
lods
fdivrl
lret
jnp
aad
frstor
inc
loope
inc
ds
cmc
add
inc
mov
inc
jo
and
in
pushf
mov
push
cld
mov
std
repz
int3
js
out
fidivrs
inc
jne
subl
jmp
cwtl
pusha
mov
and
test
cmp
jl
jp
shlb
add
mov
xchg
cmp
xor
push
clc
jb
test
dec
jl
inc
lcall
mov
sub
pushf
shrl
xor
adc
and
cmp
out
stos
fst
shl
addr16
pop
inc
pushf
and
js
je
flds
dec
out
ljmp
push
and
mov
add
push
mov
mov
aam
movsl
test
repz
loope
inc
pushf
xchg
lods
mov
clc
in
xor
negl
adc
adcl
xor
and
mov
inc
mov
in
in
pusha
cmp
jmp
movl
dec
daa
pop
mov
and
jp
and
dec
push
dec
loope
imul
fisubl
and
outsl
sbb
xchg
out
aad
xor
mov
call
rorb
push
mov
fnstsw
mov
cmpsb
adc
test
dec
arpl
ror
or
ficoml
clc
sub
std
js
pushf
and
push
jno
int
cli
call
sbb
pop
repz
jl
fsubrl
dec
hlt
and
mov
lret
test
mov
addr16
push
out
adc
out
mov
sub
test
mov
leave
push
cmpsb
std
insl
xchg
imul
add
andl
mov
pop
leave
lods
out
sbb
ret
aas
push
clc
stos
mov
dec
sti
xchg
pusha
ss
push
push
out
mov
std
adc
push
ret
rolb
movb
xchg
mov
mov
pop
jp
mov
mov
dec
popf
pop
scas
inc
adc
add
dec
pop
std
ja
and
lret
xor
push
je
sub
mov
xchg
jge
hlt
out
xchg
and
shlb
in
xor
insl
and
cs
es
lret
cmp
cmp
popa
xchg
lods
push
mov
fwait
xchg
test
mov
ss
dec
nop
cmp
mov
mov
mov
movsb
gs
jecxz
fimuls
add
pop
fimuls
xchg
xchg
cli
popf
loopne
pop
pushf
add
sub
xlat
rcrb
sub
in
arpl
add
fs
sbb
mov
in
add
jecxz
rcll
mov
and
push
mov
les
push
insl
sub
hlt
add
into
xchg
imul
shl
out
cmc
mov
mov
cmp
mov
add
leave
mov
lods
sub
pop
jg
stc
adc
cmp
call
dec
icebp
jmp
inc
cs
xchg
mov
lds
cmp
fcmove
pop
fs
mov
in
mov
dec
pop
adc
jbe
ret
in
hlt
cmovl
mov
in
sahf
or
aad
fwait
ret
fs
shl
mov
mov
add
sub
test
imul
sarb
subb
imul
stos
mov
jg
roll
inc
pop
lcall
pushf
inc
xchg
add
jl
xchg
cmp
pop
jmp
fucomi
daa
in
xchg
roll
add
jmp
in
lret
mov
or
sti
xor
cmpsl
sbb
pop
adc
popa
into
xor
push
mov
je
js
xor
xchg
sub
add
in
push
cmpsl
subb
pop
jge
cmpsl
sub
pop
rcrl
ljmp
fisttpll
sbb
cmp
aad
sahf
xor
hlt
sub
outsl
add
fstl
rcll
clc
leave
sbb
mov
cmp
popf
pcmpgtw
mov
out
xlat
mov
add
daa
cltd
pop
xor
sub
cmp
pop
test
dec
xorl
sbb
mov
or
sbb
xor
push
sub
cmp
mov
inc
mov
xchg
add
mov
movsl
push
jno
pusha
stc
lea
mov
lahf
int
xor
rcr
adc
cmp
jp
outsb
in
lods
cmp
dec
mov
sub
pop
xchg
sub
popa
test
divl
ss
xchg
stos
jbe
in
std
add
push
push
popf
mov
les
das
idivl
jmp
cmp
fs
cwtl
cmp
xor
fisttpll
stc
add
jo
add
mov
pop
cmp
imulb
jmp
inc
sahf
pusha
mov
push
sub
dec
js
push
push
push
cld
add
mov
sbb
movsb
cmp
fs
movsb
mov
arpl
add
adc
sbb
adc
std
push
push
int
sub
dec
andl
push
mov
and
xchg
adc
in
push
leave
xchg
in
ds
sahf
testb
int
enter
out
xchg
rorl
cmpsl
jns
jle
inc
add
in
dec
jae
shlb
fs
xor
imul
sbb
adcb
dec
stos
imul
and
insb
sarb
ss
addr16
lods
aas
push
pop
push
mov
xchg
jne
jo
lcall
add
hlt
push
inc
into
negl
mov
jns
and
stos
sbb
mov
or
cwtl
or
pushf
ret
cltd
test
push
aas
outsb
out
shll
mov
fxch
cmpsl
out
inc
push
mov
inc
or
mov
xchg
xor
loop
jnp
jo
sbb
add
in
out
pushf
arpl
in
dec
pusha
push
cmpsb
sbbb
mov
adc
jmp
jecxz
ret
in
mov
xchg
mov
mov
pop
and
negl
fsubl
adc
fadds
adc
push
fcmovu
add
std
cmp
adc
dec
pop
insb
inc
jnp
mov
jns
push
xchg
jnp
imul
rcrl
jo
inc
inc
push
ljmp
imul
shlb
test
cmp
dec
shll
push
in
jmp
in
mov
add
add
mov
or
ja
sub
mov
sub
jmp
ror
insb
jl
and
cli
decb
mov
ja
das
xor
iret
shr
stos
subl
popf
scas
ret
cmp
mov
scas
push
inc
adc
lcall
out
or
xchg
xchg
and
movsl
xor
pop
arpl
stos
stos
subl
jle
pop
mov
mov
adc
cmp
mov
popf
aam
test
lock
rorb
inc
test
pop
xor
mov
dec
mov
es
insl
cltd
fwait
inc
in
sbb
loopne
ss
jg
mov
icebp
js
xlat
dec
pxor
scas
jne
scas
pop
mov
cltd
pop
ret
or
shll
stos
inc
and
mul
xchg
cmp
xor
xor
lret
push
insb
mov
rorb
or
cmp
iret
pusha
sub
movsl
popa
je
sahf
inc
ja,pt
mov
push
addl
mov
aas
bound
loopne
inc
jne
add
fistpll
pusha
fwait
call
arpl
cmpsb
cmp
mov
outsl
test
in
pop
stos
or
leave
ret
pop
scas
dec
test
repnz
dec
int3
mov
roll
int
sti
push
add
jnp
es
or
cmpb
mov
or
into
jo
cli
ficompl
push
fnstcw
xor
js
dec
ret
or
ljmp
pop
cmpl
gs
clc
pop
lcall
mov
mov
outsb
push
mov
fcmovnbe
push
push
jns
and
jl
cli
push
jl
adcl
arpl
jo
push
repnz
mov
stos
dec
push
enter
js
je,pn
fbstp
mov
push
loop
jg
pop
pop
add
pop
mov
xchg
push
in
ds
push
lcall
int3
or
pop
call
lret
cmp
pop
sub
sahf
imul
sub
lret
iret
mov
dec
fistl
insl
push
loope
mov
adc
pop
shl
xor
ljmp
sbb
out
xchg
pop
data16
lea
sbb
test
push
push
mov
mov
cmp
add
and
mov
mov
dec
xchg
aas
adc
dec
add
jb
sub
mov
cmp
gs
or
xlat
dec
lock
sbb
test
shll
xchg
test
push
cmpsl
pop
fbld
cmpsl
dec
sub
xchg
xchg
sbb
mov
dec
loopne
js
subb
jecxz
into
fists
ljmp
push
mov
mov
cld
jecxz
dec
lds
pusha
dec
rorb
sub
xlat
mov
jl
sbb
inc
lods
mov
data16
add
and
adc
shrb
push
stos
clc
and
pop
mov
cmp
jbe
jmp
jg
pop
ss
mov
hlt
cmp
scas
lret
hlt
adcl
xchg
push
xchg
lds
orb
or
or
jns
mov
push
mov
pop
sub
pop
jae
imul
inc
adc
mov
cld
cmp
ljmp
add
lret
idivb
jno
xchg
test
pop
xchg
imul
data16
push
sti
cmpsb
iret
test
ficoms
data16
sti
pushl
adc
out
push
out
lods
or
mov
aaa
mov
cmp
push
lods
scas
adc
loope
inc
push
mov
mov
xchg
pop
daa
xchg
outsl
rcrb
stos
push
jmp
pusha
lods
out
imul
xor
push
cmp
cmp
out
int
test
out
aaa
adc
decb
clc
add
cmp
std
add
jb
push
sarl
iret
pop
xchg
mov
in
insl
mov
clc
rolb
pop
xor
ss
jbe
xor
stos
inc
pop
xchg
out
or
push
push
mov
ljmp
dec
shlb
int3
loope
dec
push
sub
popa
mov
xchg
jecxz
xchg
and
mov
pop
outsl
sub
fwait
jo
and
mov
pop
mov
pop
std
cli
mov
sub
xchg
test
xchg
jp
inc
data16
sub
mov
mov
jmp
mov
cmp
dec
mov
mov
cmp
pop
mulb
or
cmp
push
lock
lods
je
dec
aas
adc
push
push
cmp
mov
into
pop
out
leave
frstor
pop
jecxz
xor
inc
dec
push
jnp
xor
adc
and
movsl
nop
fwait
xchg
sub
inc
outsb
push
pop
lds
jg
gs
jo
and
das
xlat
push
loope
ja
dec
jle
and
add
neg
daa
adc
push
ljmp
dec
out
out
je
loopne
stc
mov
add
nop
cwtl
jns
sub
push
iret
xchg
adc
jle
jg
push
loopne
mov
mov
movsl
cmpsl
pop
mov
push
xorb
fneni(8087
jle
push
inc
mov
mov
mov
lea
sub
push
sahf
or
mov
lea
je
repnz
push
inc
and
fcoml
fsubl
add
addl
push
sti
aam
loope
cli
clc
lret
int3
test
ret
add
add
or
repz
cmp
int3
cmp
std
rcll
int3
mov
xorl
insb
xor
shrl
add
orl
mov
jecxz
mov
je
fdivrs
push
mov
gs
sub
cmp
pop
pop
in
scas
ret
xor
inc
out
inc
xchg
hlt
cs
lret
scas
repnz
mov
jo
stos
std
movsl
leave
sbb
mov
fildl
mov
xor
inc
into
cwtl
popf
adc
aaa
cmc
js
push
cmp
jne
sbb
fcoms
cmp
jns
pop
mov
pop
in
sar
dec
push
dec
cs
lea
xchg
or
int3
mov
test
rcl
hlt
data16
fisubrs
inc
mov
pusha
subl
outsb
mov
push
ds
lock
imul
sbb
or
cwtl
clc
mov
adc
sbb
xchg
repz
ss
mov
jnp
mov
mov
cmp
in
mov
insb
mov
push
out
xchg
xchg
xor
sbb
cmpl
addr16
inc
sbb
dec
mov
fwait
jl
dec
out
pop
cmp
cmp
add
pop
mov
adc
xor
iret
data16
divl
pop
call
fdivl
push
mov
lock
pop
push
adc
add
shl
int3
jnp
sbb
lock
push
sub
pushf
rolb
cmp
std
or
adc
fiaddl
mov
sarb
mov
lret
pusha
adc
jns
cmp
pop
out
and
mov
fst
and
xor
lahf
mov
nop
jnp
add
scas
mov
in
movsl
xor
push
cwtl
rcll
ss
pop
negb
or
sub
sahf
mov
pcmpeqb
inc
hlt
repz
es
xchg
add
dec
dec
inc
mov
adc
mov
mov
xor
dec
adc
cmpsl
mov
push
adc
adc
faddl
mov
les
or
xchg
xor
lret
iret
push
les
fmull
lock
fadds
bound
xor
and
ret
jb
inc
or
xchg
cmp
popf
inc
xor
insl
jb
push
xchg
or
je
and
pop
or
pushl
mov
loopne
shrb
pop
push
sarl
sbb
movb
jnp
sbb
adc
out
cmpsl
repnz
rclb
adc
int3
je
aad
nop
lret
xchg
loop
stos
stc
je
pop
sub
arpl
dec
inc
push
into
fs
mov
cli
cmp
imul
jno
mov
cmpl
xchg
lock
fcoms
repz
adc
out
cltd
or
inc
inc
leave
jae
into
out
push
daa
filds
iret
enter
cmpsl
imul
and
ss
scas
mov
stos
mov
shrd
lcall
mov
or
in
adc
arpl
out
enter
xor
jne
or
mov
jmp
test
mov
out
pop
call
fists
sbb
cmp
adc
add
push
cmp
cs
scas
pop
and
jb
xchg
lret
adc
imulb
jns
aas
ds
xchg
enter
subl
je
pusha
adc
pop
lds
test
xlat
lock
inc
pop
pop
or
pop
and
xchg
mov
rorl
mov
sub
mov
push
outsb
cmp
mov
or
in
jb
dec
add
push
out
and
sbbb
pop
pop
push
imul
divl
inc
pop
cwtl
pop
daa
stos
cmc
stos
jl
je
jnp
imul
dec
das
ret
lock
repnz
jmp
loop
dec
mov
and
insl
or
push
lea
fildll
xchg
adc
outsl
mov
sbb
cwtl
loopne
arpl
addr16
adc
dec
enter
xchg
in
in
adc
inc
inc
test
or
test
push
jbe
mov
add
mov
cmp
adc
jbe
add
push
dec
popa
gs
xor
sbb
and
fs
fs
pop
aaa
and
or
in
mov
cmp
mov
jl
or
add
add
ja
jbe
lods
cltd
xchg
popa
jl
test
dec
pop
xor
mov
sub
pop
push
mov
cmp
mov
or
ds
push
imul
aas
mov
jl
pop
cwtl
loopne
mov
in
push
icebp
outsl
lods
shrb
mov
rol
cwtl
inc
sar
lcall
xchg
rcrb
lret
rorb
jbe
fsubr
mov
lcall
jb
push
dec
sti
test
mov
mov
scas
cmc
test
in
outsb
icebp
lds
movsl
mov
mov
sti
add
lret
ja
and
test
std
insl
lcall
jb
shlb
inc
loope
lret
sbbb
imul
push
xor
adc
inc
addb
and
cld
jl
imul
inc
sahf
ss
add
pop
and
mov
lea
hlt
jge
pop
push
sti
cmp
negl
pop
xor
scas
cmp
dec
cli
xor
mov
mov
addr16
xchg
lahf
cmp
mov
dec
xor
arpl
sub
insb
aas
push
das
loope
lcall
fldt
fidivl
ds
mov
iret
push
mov
es
ror
pusha
insb
adc
xchg
in
dec
enter
inc
xlat
xchg
add
fildl
test
cmp
xchg
pushl
mov
sub
push
lods
int
stc
mov
out
icebp
lods
fcomp
push
ss
pop
in
push
int3
pop
lock
popa
jbe
nop
shll
mov
and
ja
aaa
sub
lds
or
push
movsl
loope
adc
mov
mov
lret
enter
xchg
stos
test
int3
jno
mov
das
push
and
shll
stos
push
push
dec
jnp
subb
lcall
cltd
fwait
icebp
fsubrp
ret
in
xchg
mov
mov
xor
and
dec
leave
mov
mov
mov
lret
mov
outsb
mov
jbe
sbb
inc
sub
lcall
hlt
or
pop
pextrw
sbb
arpl
cld
fnstcw
je
cmp
fsubl
push
fistps
test
pop
lds
out
sbb
out
in
xchg
xchg
dec
inc
scas
lahf
iret
sti
out
pop
stos
insb
inc
clc
daa
aas
cs
cmpsb
dec
cmpsl
and
lds
mov
or
jo
lahf
jae
cmp
cli
pop
fidivrs
clc
jge
repz
out
jecxz
insb
mov
jg
in
sbbb
mov
mov
les
xchg
mov
and
push
inc
xor
mov
aam
fadds
or
xchg
or
push
stc
scas
lret
aaa
dec
add
xor
push
call
mov
push
in
scas
pop
sbbb
sbb
or
mov
xchg
cltd
aas
jg
in
movsb
and
and
fldl
into
and
dec
push
test
adc
push
loop
inc
inc
outsl
lret
roll
xchg
fiadds
xor
mov
flds
jp
clc
lods
insl
mov
ljmp
inc
mov
adc
mov
js
jle
rol
ret
mov
sub
mov
adc
mov
adc
xchg
popa
lods
add
aad
data16
jmp
gs
jmp
jo
adc
lret
xor
pop
xchg
ss
or
dec
jno
mov
in
mov
call
aad
mov
outsl
xor
mov
seto
or
daa
aam
mov
pop
les
fldt
pop
fildll
outsb
add
mov
aad
insb
inc
aad
xor
push
ret
ret
pop
sbb
adcb
ret
cwtl
outsl
cld
in
and
inc
std
xor
imul
sbb
in
jp
and
mov
cmp
cld
xchg
loop
or
stos
addr16
jp
fmul
pop
lret
jae
jecxz
sub
decl
push
cmpsl
rorl
sbb
mov
jge
decb
jae
lea
or
aam
mov
outsl
loopne
inc
loopne
mov
push
adc
jb
add
sub
xor
xor
push
mov
fisubl
mov
mov
sub
jae
sbb
fmuls
mov
push
mov
mov
sbb
xchg
jge
push
movb
cmp
fwait
or
pop
sub
push
shll
dec
jle
jp
jg
mov
and
push
fistl
cmp
xor
leave
sbbb
mul
dec
pushf
ds
out
add
or
arpl
jns
sbb
test
stos
xor
add
lcall
lods
cld
jns
jbe
adc
cmp
js
out
and
cmc
jecxz
cmp
jno
push
xchg
mov
push
sti
lahf
fwait
test
adc
xchg
sbb
pop
movsl
cld
loop
ds
rclb
adc
clc
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
adc
loopne
jl
pop
jl
mov
xchg
jno
adc
mov
bound
xchg
cmc
dec
lods
ljmp
lret
insl
out
cmc
nop
mov
shlb
sub
sub
xchg
push
cld
scas
adc
out
sub
jle
dec
iret
mov
adc
lods
packssdw
daa
or
dec
imul
xorl
imulb
push
pop
pop
cli
cmp
test
ja
add
cltd
xorb
aas
add
dec
sub
pop
movsl
xor
jg
fcoml
addr16
ljmp
inc
clc
pusha
shll
jle
mov
lock
xor
cs
dec
movsb
divb
inc
leave
adc
cld
sub
into
inc
adc
pop
xlat
lea
jne
push
loopne
cltd
push
or
repnz
std
jmp
jne
mov
mov
xlat
or
add
cmpsl
in
or
shlb
lcall
movl
push
incl
push
xchg
ljmp
push
mov
push
imul
adc
cltd
xor
xor
or
scas
js
xchg
gs
sbb
aad
fidivl
inc
lahf
mov
push
push
inc
cmp
sub
sbb
xor
inc
push
xchg
adc
cwtl
push
fcoms
lods
mov
or
pop
and
insb
or
adc
imul
xor
hlt
imull
xorb
mov
sbb
jg
lcall
out
mov
jecxz
mov
out
jmp
jbe
gs
ljmp
lock
pop
cld
mov
bound
mov
adc
stos
lods
shrb
dec
rorb
xchg
aad
insb
stos
add
in
and
adc
adc
or
adc
dec
inc
jne
rclb
jns
stos
or
or
sbb
in
int
jecxz
cmp
inc
or
or
jmp
mov
movsb
fdivl
dec
cs
pusha
bound
jae
push
les
fidivs
pop
xor
dec
dec
insl
jle
jno
divb
push
aaa
pop
es
adc
int3
sub
dec
fstps
enter
pop
push
and
mov
dec
cli
sbb
mov
xlat
mov
in
imul
cwtl
and
lods
ljmp
sbb
in
mov
mov
push
cmpsl
andl
les
push
decl
int3
or
clc
cmp
leave
fistpl
lret
and
das
pop
jb
cmp
call
xchg
mov
inc
popa
mov
insl
jecxz
xchg
push
mov
xchg
jle
mov
inc
cs
cmc
gs
lods
das
ret
dec
cmp
and
or
ds
and
es
in
add
mov
call
dec
fisttps
mov
xor
jb
fistl
pop
ss
jmp
jnp
inc
out
shll
and
sahf
mov
lcall
mov
cmp
mulb
les
jb
test
push
adc
shl
or
jnp
aam
mov
ficomps
stc
fsubr
test
fiaddl
jg
ret
enter
mov
adcl
gs
xchg
loopne
mov
jmp
js
xchg
sub
push
testl
adc
dec
hlt
xchg
adc
mov
notb
int
xor
pop
cmc
clc
pop
xor
pop
add
mov
mov
or
jmp
fs
std
and
mov
shr
dec
es
stc
movsl
test
cltd
jnp
jge
les
mov
lahf
sbb
pushf
mov
les
stos
in
sti
sbb
push
dec
pop
sbb
leave
stc
xor
iret
aas
enter
jbe
out
or
mov
inc
cs
cmc
jb
and
mov
stc
js
nop
sub
fiaddl
or
lret
icebp
mov
pushf
test
pop
push
mov
push
stos
jb
shld
or
fisubrs
inc
repz
push
mov
xor
mov
test
ret
pop
cltd
xor
ss
cs
insl
mov
shr
push
pop
jo
arpl
cmp
and
push
fucomp
subl
aam
sarb
add
mov
mov
ret
cltd
decl
aas
lds
leave
imul
cli
pop
inc
dec
mov
mov
dec
push
jmp
mov
inc
sbb
enter
xor
fistpll
das
xor
mov
cmpsl
xor
xor
sbb
mov
mov
push
rol
adc
sti
push
int3
xor
sbb
repz
rolb
xorl
xchg
adc
inc
ret
xchg
movl
adcl
pop
mov
cmp
outsl
in
outsl
imul
push
cmp
loop
add
pop
outsb
cmp
pop
pushf
jp
sahf
fucomi
test
lods
lds
in
das
out
insb
push
nop
aas
fchs
and
or
adc
gs
cld
push
mov
ret
incb
push
mov
inc
xchg
jbe
es
fbld
les
jecxz
hlt
bound
xor
dec
test
rcrb
inc
adc
jp
xchg
int
stc
mov
lods
sub
shrb
xor
xchg
push
dec
and
loop
in
dec
js
fldcw
aam
outsb
cld
lcall
push
mov
out
repz
data16
pop
xor
lahf
nop
ds
addr16
sbb
cli
push
push
pop
jle
inc
sbb
out
pop
jecxz
icebp
mov
dec
std
loopne
data16
movsb
popf
jne
push
pop
jo
jmp
in
inc
shl
data16
cli
jp
pop
xlat
add
xor
push
dec
and
roll
mov
out
add
push
pop
aaa
pop
push
sub
inc
and
fldt
add
xchg
stos
imul
in
lret
rcll
or
dec
call
shl
xchg
lods
jb
mov
pcmpgtb
xor
xor
imul
cmp
loopne
or
jb,pt
mov
fdivr
aas
notl
mov
jb
mov
cwtl
sub
adc
jle
stos
push
div
add
mov
mov
inc
adc
jb
push
js
into
xchg
push
jle
sub
or
pop
jl
xor
imul
mov
lret
std
mov
push
pusha
mov
sub
jno
outsb
jle
sbb
jmp
leave
adc
mov
js
mov
inc
add
pop
cmp
jle
ret
pop
inc
cmp
cmp
sub
pop
push
mov
pop
imul
sbb
xor
test
lret
ficomps
sbb
cmp
mov
inc
mov
push
and
jns
repnz
sub
stos
mov
lea
sbb
sbb
pop
cmp
cs
adc
pusha
out
or
push
or
ljmp
sbb
mov
dec
mov
or
mov
in
int3
pop
adc
out
aam
je
push
add
jno
jae
testl
and
pop
mov
shll
pop
dec
lods
out
pop
jmp
push
in
and
xchg
dec
push
outsl
lcall
fsts
inc
xchg
xor
cld
cmpsb
sub
sub
xchg
mov
orb
js
xchg
mov
out
push
jae
jnp
and
pop
sub
add
mov
jg
adc
mov
shlb
sahf
popa
mov
loope
add
movsl
sbb
add
fdivl
pop
loopne
pop
mov
decb
ss
add
movb
inc
pop
imul
add
pop
mov
mov
enter
pop
xchg
popf
movsb
jo
cmp
cmc
dec
dec
shl
add
movsb
adc
sub
iret
outsl
sub
int3
inc
arpl
sbbl
in
fisttps
sahf
mov
pop
data16
jge
pop
xchg
out
inc
popf
ljmp
pop
cmp
and
mov
fucom
mov
cmp
jge
push
cmc
call
inc
add
xchg
repnz
sub
xor
jae
mov
and
shlb
mov
decb
sti
insl
int3
and
outsl
movsl
incl
dec
adc
outsb
mov
int
mov
out
fdivrs
add
sahf
cmp
adc
dec
push
scas
mov
repnz
jl
xor
xchg
das
jae
inc
stos
in
out
shlb
pavgw
out
loopne
xchg
mov
pop
test
mov
fmulp
pop
enter
fimuls
call
cmc
es
jge
int
scas
stos
fistpll
cs
repz
inc
out
inc
dec
xor
push
sbb
pop
data16
aam
sbb
xchg
mov
or
mulps
mov
jnp
loopne
mov
push
inc
divl
fwait
jp
dec
and
lahf
leave
jns
xor
inc
add
cmc
icebp
or
inc
iret
nop
xchg
jns
cmp
jp
jle
fistpl
aad
bound
leave
inc
jne
ss
mov
xor
jp
push
daa
pop
mov
adc
or
cmp
xor
dec
xchg
cmp
lret
jmp
dec
mov
je
lret
mov
mov
mov
mov
add
or
xor
sbb
xchg
icebp
mov
aas
arpl
dec
fiadds
adc
cmp
mov
setl
jns
addr16
pop
jno
push
hlt
or
inc
fadd
scas
inc
and
hlt
out
iret
gs
int3
psubb
pusha
test
les
mov
mov
mov
popl
mov
ljmp
scas
cmpsb
in
xchg
pop
popl
cmpsl
ficomps
gs
in
js
loopne
mov
imul
clc
in
and
aam
mov
cld
or
ret
push
add
repz
push
add
mov
cs
pop
fs
jg
dec
fcmovnb
mov
or
out
sbb
fildl
mov
enter
sti
jg
sbb
arpl
lahf
test
jg
psadbw
andb
add
xor
xchg
addl
ret
mov
pop
js
push
rol
adcl
jge
cmp
cmp
rcr
nop
ss
lret
mov
aas
test
pushf
xor
jb
dec
dec
mov
jecxz
mov
js
int3
test
in
fstpt
mov
jmp
dec
pop
pmaxsw
add
sarl
or
es
insl
rcll
xor
mov
movsb
enter
mov
pop
pop
outsb
dec
adc
je
stc
cwtl
jbe
repz
mov
rcrl
rolb
sahf
cmp
sbb
outsl
cmp
push
nop
or
shr
cwtl
ljmp
sub
sarl
ret
scas
fisubs
loop,pn
pop
xor
mov
cwtl
shl
movsl
xor
mov
dec
test
es
insl
lods
cmpsb
fiaddl
pop
sahf
or
jecxz
gs
mov
cmp
aam
mov
cld
pusha
insb
sub
push
add
aaa
dec
pop
jns
sbb
jno
cli
pop
pop
test
ja
in
pop
out
dec
int
inc
movsb
les
stc
pop
pop
mov
clc
ret
cmc
cld
movb
push
mov
or
stc
push
movsl
or
sub
enter
out
addl
mov
out
cli
cmpsb
jl
and
push
in
sahf
push
jp
push
imul
pop
andb
lock
aas
cmp
cmp
inc
dec
imul
in
lea
insb
or
test
pop
sub
faddl
sbb
cmp
cmp
xor
loope
xor
movsl
inc
pop
cld
in
sarb
or
jmp
xchg
mov
jp
or
push
clc
mov
mov
orl
movsl
lods
shll
sti
pop
inc
stc
jg
xchg
push
faddl
outsb
out
adc
imull
insb
sub
clc
into
pcmpgtd
xor
jnp
push
or
js
cld
xchg
cmp
jmp
imul
sub
adc
fcoms
push
roll
pop
pop
aam
inc
pop
jmp
push
push
aaa
mov
fwait
jecxz
dec
fwait
pop
dec
xor
jno
lret
inc
cli
dec
mov
xchg
mov
add
push
shll
imul
int
jno
jne
out
jg
cs
sbb
sub
ret
cmp
sub
lcall
lea
lods
mov
pop
movsl
call
pop
mov
lock
cmpsl
addr16
xchg
std
pop
sub
sbb
push
cwtl
jo
push
in
mov
adc
jbe
fldl
mov
cmc
mov
adc
xchg
jae
mov
pushl
xor
std
and
mov
repz
jmp
jg
inc
cmpsb
es
insb
je
push
lcall
xchg
arpl
or
roll
lea
mov
fimull
rcll
mov
shlb
cmc
add
xor
push
rol
int
out
mov
pop
or
xchg
adc
aad
cmp
xchg
sub
mov
sub
movsb
mov
mov
iret
push
sti
jae
cltd
push
sti
shrl
adc
mov
mov
test
mov
out
imul
mov
iret
dec
pop
lret
call
js
loope
dec
mov
cld
xor
xor
xor
jnp
mov
lret
xchg
xchg
ficomps
xchg
mov
dec
aas
xorb
std
aam
jo
lret
iret
bound
pop
add
es
adc
or
iret
not
push
insl
mov
and
mov
xchg
movsl
xor
into
and
mov
sahf
call
jne
int3
lahf
pop
inc
ficompl
mov
mov
imul
inc
dec
adc
js
stos
and
test
mov
test
iret
filds
sub
or
sar
push
jne
mov
jns
pop
negl
aaa
dec
pop
jo
add
jmp
cmpsb
adc
pop
stos
out
or
lock
sub
out
mov
pop
jns
fisubrs
push
push
mov
ja
loop
xor
jge
push
in
and
stc
mov
sahf
sbb
popf
jecxz
mov
add
sub
fists
jns
hlt
cmp
aaa
lds
movsl
adc
pop
push
pop
jle
popa
ss
pop
or
push
jp
test
fnstenv
pop
jno
js
fdivrl
xchg
push
xor
jne
jb
pop
xchg
dec
push
subl
or
sahf
shr
jb
mov
push
lods
xor
ret
test
sub
test
sbb
cmp
cwtl
add
into
jo
mov
push
push
or
cmpsb
inc
xchg
in
sub
in
or
je
cwtl
dec
cltd
xorl
inc
cmp
pop
fs
test
pop
iret
cld
dec
push
push
das
xor
mov
xor
nop
cli
decb
mov
fisttpl
imul
add
shl
hlt
setp
ret
xchg
and
iret
rorl
push
sub
addr16
lcall
cli
jl
fistpll
sbb
dec
ds
mov
sbb
loopne
mov
xor
lods
lea
ret
dec
sbb
jne
push
jp
pop
stos
mov
imul
cmc
daa
sub
das
shll
push
and
pop
mov
scas
aam
hlt
mov
adc
sub
rol
iret
xchg
popf
test
addl
sub
ja
or
popa
repz
sub
lods
in
fwait
xor
pop
in
addb
add
ret
inc
dec
pop
adc
xor
es
push
icebp
fsts
sbb
sbb
imul
jl
test
sbb
cmp
into
out
cmpsb
in
mov
scas
pop
pusha
mov
pushf
adc
dec
mov
movsb
sti
push
iret
std
insl
xor
loope
and
addb
mov
adc
sarl
and
xchg
jge
xor
cmp
xor
mov
mov
mov
and
lods
mov
inc
fdivs
out
outsb
push
lock
loopne
jmp
popa
sub
pop
pop
xchg
andl
js
mov
adc
inc
adc
aaa
test
sbb
xchg
push
push
out
inc
loop
xchg
nop
push
adcb
mov
cmp
out
mov
gs
lcall
mov
cmp
xchg
gs
popf
aas
mov
jne
xchg
mov
lahf
dec
sti
xchg
mov
xlat
nop
xor
jno
cmp
stos
pop
ds
popf
aas
data16
les
or
inc
les
shlb
push
add
ja
cmp
or
jge
stos
push
push
test
cmp
daa
add
mov
sub
lods
js
xor
jo
cmp
push
out
xchg
rorl
pop
sbb
adc
mov
dec
sahf
int
sub
push
sbb
sbb
subb
jb
lret
fcoml
nop
aad
popf
out
pop
lea
div
cld
out
xor
xchg
dec
aaa
lods
inc
icebp
xchg
lahf
clc
inc
lods
xchg
call
test
sbb
pop
aaa
ja
add
xchg
dec
arpl
add
and
cwtl
sarb
aad
faddl
pop
jnp
cmp
call
mov
mov
pop
sub
add
setne
jae
push
xor
fsubrl
sbb
les
ret
int3
bnd
push
xor
ja
adc
xchg
shrl
lock
mov
ljmp
cmc
push
aad
sbb
push
cs
fldl
ljmp
sub
cltd
daa
jns
fs
dec
or
mov
push
dec
iret
dec
xor
cld
mov
add
movsl
adc
jl
mov
inc
mov
xor
divps
js
mov
mov
andl
mov
inc
mov
arpl
ret
cmp
mov
rcr
add
leave
negb
fists
inc
xchg
jbe
stos
stos
addr16
jbe
adc
jns
jp
xlat
sbb
push
add
ret
adc
adc
mov
stc
push
call
fdivl
bound
jnp
ja,pt
jne
test
push
push
test
inc
pop
sub
cmpsl
mov
cmp
xchg
aam
into
add
mov
add
sbb
in
insl
stos
or
outsl
add
test
in
icebp
push
adc
lods
xor
imul
mov
je
fucomp
subl
cmc
mov
call
jne
aas
add
jecxz
jnp
les
or
jns
imul
rcr
inc
das
or
pop
or
sub
and
scas
ret
ss
out
lret
popf
inc
popa
push
pop
xor
mov
mov
lds
or
or
dec
ffreep
push
and
lahf
xchg
ret
and
mov
out
mov
cmpb
or
verr
pop
add
shrb
cmp
clc
xchg
out
dec
mov
sbb
pop
sbbl
mov
pop
cmp
andl
movsl
sbb
mov
pop
enter
cmp
test
push
out
or
in
pop
insb
sub
je
inc
lds
cmp
mov
dec
fsts
stc
fstl
xchg
jnp
into
lcall
mov
out
aas
subb
rcl
add
mov
lret
sbb
lret
in
std
ljmp
mov
int
xorl
inc
ficomps
xor
int
mov
sub
fiadds
mov
jbe
call
fldcw
add
adc
call
call
test
push
jne
pop
js
jg
sbb
jmp
mov
mov
and
add
inc
lahf
fbld
ljmp
xor
sbb
lret
adc
lods
inc
sarl
fcomps
nop
popa
mov
mov
xchg
and
cmp
addr16
mov
shll
in
in
inc
aaa
jmp
add
push
push
cli
xor
pop
sub
adc
mov
xchg
cmp
das
sub
mov
mov
mov
call
mov
in
loopne
addl
xchg
subl
jb
sbb
out
repz
in
add
dec
sbb
insb
push
adc
push
mov
imul
sahf
and
push
cmp
cld
repnz
xchg
pop
icebp
out
xchg
in
xchg
adcb
lret
sbb
mov
push
shrb
shr
mov
shlb
inc
ror
popa
lret
xor
inc
test
scas
jge
sbb
loop
repz
dec
stc
xlat
test
xor
iret
in
in
iret
jno
add
adc
mov
movsb
or
pop
hlt
shrl
add
scas
dec
jp
mov
jno
mov
lds
xchg
push
data16
cs
sbbl
insb
pop
mov
in
cmp
int
hlt
imul
jmp
es
int3
lods
rcrl
xchg
loop
inc
dec
jo
xor
je
les
push
popa
push
add
jno
adc
inc
push
inc
stos
add
cmp
rorb
dec
sarb
adc
adc
mov
fists
fdivl
dec
mov
into
xor
sub
and
loope
loopne
and
add
xchg
ret
and
mov
xchg
bound
jns
fwait
xor
jmp
pop
push
cmp
adc
jb
pop
adc
bound
push
loop
adc
scas
and
push
xchg
pushf
mov
push
jb
push
jmp
rcrb
leave
inc
repnz
xor
mov
fxam
aam
movsl
sbb
and
inc
pushf
mov
fwait
push
loop
fwait
imul
pusha
test
push
mov
enter
cli
xchg
call
sar
cmpsb
divl
inc
std
or
jno
enter
push
idivb
fbstp
in
pop
pop
jle
xor
cmp
inc
stos
icebp
shr
dec
stos
pop
test
inc
xor
dec
and
nop
jbe
inc
rclb
pop
dec
js
or
sbb
mov
stos
adc
fnstsw
add
pop
or
mov
xor
add
add
jae
and
pop
mov
aas
inc
and
mov
aaa
add
sub
pop
int3
cmp
in
bswap
inc
mov
scas
sub
ret
add
jb
inc
sub
cmp
mov
adc
sbb
and
popa
popa
push
inc
mov
push
jl
mov
aam
pop
mov
rorb
jge
inc
stos
mov
xchg
pop
and
loop
and
sub
cmp
icebp
or
jmp
xchg
into
addr16
loop
pusha
add
xchg
xchg
dec
inc
mov
pop
fwait
loope
push
xlat
aaa
mov
push
dec
rcrl
add
loop
mov
testl
cld
loope
pop
push
in
push
sbb
cld
mov
push
jmp
mov
and
inc
lock
xor
sub
dec
cmc
push
dec
push
and
sbb
enter
add
and
sub
mov
sbb
bound
int3
pop
add
lret
cmp
cmp
sub
fadd
push
dec
les
push
add
inc
dec
pusha
repnz
shrl
incl
push
sbbb
jge
test
das
aad
xor
cli
cmp
push
stos
jnp
mov
add
das
sub
pop
cmp
leave
movsl
lock
gs
fbld
pop
and
add
sbb
data16
inc
adc
pusha
lcall
jge
mov
icebp
fwait
dec
dec
push
mov
mov
sub
mov
or
add
sar
mov
lcall
dec
insb
stos
leave
dec
xor
ss
mov
xchg
cmp
mov
pop
stos
jbe
xchg
ja
test
mov
pop
outsl
mov
pop
xchg
ret
arpl
mov
jecxz
popa
negl
xchg
ret
mov
sub
push
xor
mov
xchg
sahf
neg
mov
xor
and
mov
insl
cwtl
push
bound
call
sub
cmc
loopne
nop
sti
mov
subl
into
ficomps
inc
fstpl
in
jle
mov
sbb
leave
sbb
pop
jp
push
aaa
repnz
sbb
cwtl
xchg
lods
aaa
sbb
jg
ret
cmp
mov
stos
fdivrp
ja
mov
add
shll
repnz
sub
lret
mov
addr16
test
mov
loopne
sbb
xor
sbb
mov
imul
gs
data16
out
lahf
pushf
mov
or
test
and
mov
mov
inc
cmp
cld
cwtl
fnstenv
mov
orl
subl
xchg
mov
cmp
lcall
int
test
xchg
dec
or
jae
ja
push
imul
insb
outsb
pop
pop
and
lock
add
or
pop
add
sbb
xchg
jmp
xor
push
cmp
ficompl
xor
call
call
hlt
out
arpl
sub
movsb
imul
inc
xchg
jbe
icebp
out
sti
rorl
shll
out
mov
push
pushl
push
pop
xchg
pop
fwait
lret
jo
inc
xchg
push
in
or
xor
out
out
mov
lds
negl
push
pop
adc
mov
fwait
out
pop
push
in
mov
sbb
das
sbb
adc
mov
int
push
lcall
movsb
pop
inc
loopne
adc
cs
idivb
jb
xchg
mov
movsb
daa
je
and
pop
test
in
fimull
or
mov
adc
jg
pop
scas
xor
in
lret
icebp
loope
and
stos
mov
inc
call
out
lock
xor
imul
fists
jmp
scas
std
enter
dec
stos
jecxz
jp
out
inc
out
movsl
lret
pop
push
inc
inc
dec
in
mov
aam
jmp
mov
jecxz
nop
inc
pop
pushf
out
pop
and
in
add
popa
mov
out
xor
lret
sbb
dec
test
mov
arpl
mov
xchg
jmp
inc
stc
adc
fiadds
push
mov
test
stos
roll
and
sub
cwtl
popf
out
cli
outsb
mov
cmp
flds
lret
push
stc
dec
std
sbb
enter
insl
mov
sub
add
dec
insl
ds
ss
xor
aad
mov
lret
daa
mov
mov
aad
ret
or
push
out
push
xchg
cmp
adc
mov
sbb
ss
cmp
dec
sbb
and
dec
push
pop
test
xchg
movsb
sbb
sub
idivl
fs
daa
movsl
arpl
jno
outsb
or
fdivrl
jmp
mov
les
or
subb
cmc
and
adc
and
xchg
xchg
lods
stos
dec
in
std
sbb
sti
gs
adc
adc
out
movsl
and
cmp
int
popa
mov
or
lret
or
mov
and
lds
outsl
push
dec
and
jmp
and
adc
lods
cwtl
pop
popa
inc
xchg
add
mov
pop
xor
add
inc
enter
cmc
cwtl
adc
decl
xchg
pop
xor
add
add
mov
test
mov
aad
or
jl
mov
ss
ja
out
into
scas
xchg
imul
insb
call
inc
stc
ror
fwait
mov
and
rorl
mov
jge
loope
jp
inc
aaa
jg
jp
xlat
stos
cmpsb
outsb
aad
cmp
or
pop
cmp
test
xor
lea
sbb
lret
lds
push
sub
in
decb
cmp
adc
cmp
lock
jno
jb
jecxz
lahf
dec
inc
sbb
sub
out
jmp
pop
lds
push
fcmovnb
sbbl
cmpb
mov
pop
jp
xor
pushf
push
in
xchg
pop
ljmp
out
inc
xchg
push
rcrb
scas
in
ret
jge
orb
xchg
daa
insl
jbe
sbb
push
loope
fisubl
fbstp
cmp
jg
or
ror
bound
and
xor
das
mov
test
adc
call
push
adc
outsl
rolb
inc
cltd
data16
fdivl
mov
mov
mov
dec
out
cmpb
or
das
xchg
ljmp
push
push
ror
mov
cltd
cltd
pop
fdivs
lock
aaa
inc
push
popf
out
fidivrl
fistps
jmp
stos
imul
js
xchg
rolb
and
fnstcw
cmp
xor
ljmp
xchg
in
inc
daa
xchg
int3
lods
fsubl
jmp
sub
pop
add
cmpsb
lea
in
dec
roll
xor
adcb
and
xchg
cs
sub
imul
lods
sub
fldt
test
xchg
sbb
push
popf
addb
or
xchg
jb
push
add
xchg
call
arpl
aaa
xchg
xlat
aad
faddl
je
or
rep
jae
pop
push
mov
dec
and
xorb
cli
xchg
cld
js
lahf
sub
xchg
popf
jp
jne
add
sub
repz
lret
adc
insl
adc
inc
sub
cs
pop
mov
test
mov
addr16
pop
or
arpl
xchg
cmp
sub
fldt
adc
sub
dec
jle
dec
scas
mov
fisubs
cli
pushl
ljmp
gs
mov
push
pop
nop
mov
fwait
pop
lods
mov
aam
shll
and
add
pushf
or
add
inc
subb
dec
mov
sbb
cmp
je
js
xor
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
in
sub
jl
jl
inc
pop
jl
les
xchg
xchg
loope
insl
and
mov
iret
xchg
mov
mov
ljmp
jl
pop
fwait
add
mov
jge
shrb
iret
mov
movsl
jle
push
scas
popa
subl
sbb
xchg
jle
jl
int3
jne
bound
sub
iret
daa
push
cmp
fldt
daa
sub
outsb
loope
imul
sbb
inc
adc
mov
ja
cwtl
lods
xor
orl
sbb
add
pop
test
cmp
dec
inc
and
mov
rcl
xor
push
movsb
sbb
add
mov
es
sbbl
pop
cwtl
in
inc
fisttps
or
rcrb
xchg
add
orl
or
enter
pop
icebp
sub
mov
roll
cmp
ja
sub
outsb
xchg
out
sub
or
aaa
sti
div
fisttpll
sub
lea
loop
jne
and
cmpsb
stc
adc
pop
cli
imul
in
jg
dec
mov
testb
adc
sbb
xchg
and
jecxz
fstpt
test
notb
jle
lea
fdivl
aam
push
repz
mov
fsubl
pop
xchg
test
sbb
ja
xor
sbb
xchg
jecxz
inc
pop
mov
jo
xchg
mov
mov
push
jmp
popf
push
iret
aaa
ss
in
cmp
cs
pop
mov
mov
dec
adc
mov
and
or
jmp
xchg
ss
sbb
stos
leave
xchg
mov
adc
subb
bound
adc
idiv
xor
ss
mov
sahf
jle
xchg
mov
sub
cmp
xor
shlb
xor
dec
cmp
push
lds
and
or
in
pop
insl
es
adc
add
loopne
pop
cmc
adc
lock
loop
and
mov
sub
dec
out
rcr
lock
xchg
pop
sbb
and
enter
scas
xchg
frstor
sub
scas
ja
test
sahf
pop
sbbb
sub
and
push
jae
pop
xchg
out
dec
push
jge
dec
andb
jns
ret
fldcw
ret
clc
pop
loope
pop
xchg
adc
mov
xor
les
mov
and
xlat
std
into
js
xchg
mov
add
jb
mov
mov
lods
movsl
je
dec
add
idiv
sti
insb
push
add
mov
dec
popf
or
mov
out
arpl
mov
aaa
arpl
sub
sbb
cmp
xor
xchg
jno
ret
xchg
scas
jne
mov
or
addr16
or
mov
scas
sub
js
xchg
iret
mov
ljmp
fwait
rolb
fsubrl
cmp
dec
and
mov
gs
int
stos
aas
add
mov
hlt
nop
insl
lods
cld
stc
mov
addr16
dec
out
mov
jmp
aas
or
lods
sahf
mov
loop
loope
pop
xchg
xlat
js
mov
add
loop
fdivr
sub
lods
add
inc
push
xchg
jle
cmpsl
orb
js
pop
xchg
adc
imul
lcall
cmpsb
mov
pop
sbb
jl
rcpps
aad
fs
and
fwait
ret
loopne
int3
mov
push
dec
xor
inc
filds
jb
out
push
ficoms
dec
and
loopne
pop
lods
dec
push
mov
adc
adcb
in
stc
cmp
repnz
mov
cld
xor
pop
cmpsb
pop
addr16
addr16
push
jb
mov
jp
add
add
imul
jbe
sbb
bound
loopne
xlat
aas
arpl
xchg
mov
lds
mov
mov
mov
mov
js
jmp
xor
dec
lret
movsb
sahf
xchg
test
loopne
negb
shll
mov
and
sub
sub
cmp
scas
subl
sbb
adc
or
inc
xchg
sbb
sub
xchg
iret
or
push
mov
scas
gs
cmp
call
fistpll
js
and
mov
dec
adcl
cmp
mov
cmpb
leave
subl
into
sbb
outsl
daa
in
inc
inc
and
repz
imul
adc
cli
cmp
rcll
or
addl
outsb
mov
lods
int
inc
pop
or
mov
leave
push
es
jg
aaa
lods
clc
psubusw
int3
mov
pop
in
cmp
leave
push
daa
push
pop
enter
cmp
dec
push
outsb
ret
addr16
int3
aam
jns
hlt
clc
inc
inc
xor
xchg
int
or
jle
mov
sub
out
mov
fs
std
fwait
mov
lahf
out
cmp
test
add
cld
mov
or
jae
mov
pop
dec
jne
mov
rorl
ja
std
shll
std
je
leave
push
or
lods
and
xchg
aas
push
lea
jecxz
jl
cmpsl
shlb
imul
add
mov
orb
incl
dec
sbbl
pop
xchg
add
mov
cld
lock
jp
sub
ds
cmp
push
inc
push
aas
insb
addr16
sbb
inc
adc
add
dec
cmc
cld
mov
cmp
fidivrs
movsl
mov
mov
mov
xor
jne
mov
jge
cmp
pop
out
sarb
inc
js
idivl
sbb
arpl
mov
mov
dec
in
push
xor
sbb
inc
cmp
dec
mov
xor
xor
clc
or
mov
xorl
lds
dec
pop
or
jmp
push
ljmp
dec
data16
aam
lcall
jbe
pop
push
ja
mov
push
xor
sbb
cmp
inc
mov
test
lcall
mov
adc
mov
in
rcll
test
mov
imul
nop
sbb
sub
sahf
jae
push
add
into
ret
push
and
xchg
lret
out
add
daa
outsl
add
lods
aam
cmp
jl
pop
mov
outsl
pusha
cmp
loopne
test
sti
xor
pop
aad
rcll
loop
aas
arpl
loop
dec
jecxz
push
mov
jmp
lret
jmp
cld
in
sub
aad
adc
xchg
aaa
lock
rsm
mov
dec
mov
cli
pop
push
out
je
cld
je
inc
sbb
fstps
xorl
fildll
add
dec
and
xchg
data16
pop
cmp
pop
pop
fists
mov
sbb
sub
lods
popf
mov
pop
pop
mov
insb
adc
je
push
ret
adc
cmp
mov
lcall
xchg
in
in
arpl
popf
jae
xlat
imul
mov
xlat
repnz
leave
lret
int
lcall
insl
mov
addr16
dec
and
sub
lea
les
xabort
jg
mov
mov
pop
xchg
inc
pop
cmp
movsl
add
cmc
sbb
push
je
je
sar
xor
push
sbb
push
pushf
test
pop
test
addb
ret
cmc
adc
sti
push
mov
enter
inc
jl
cmp
imul
xor
imul
outsb
xchg
cwtl
xchg
mov
lods
push
mov
mov
bound
mov
and
addr16
jo
lods
dec
sub
lret
mov
cltd
mov
shll
or
adc
push
out
and
std
push
inc
dec
nop
imul
cli
jo
fmulp
insl
jo
push
pushf
ret
xchg
loope
icebp
insl
rorl
js
push
mov
aaa
lcall
pop
or
push
xchg
push
icebp
scas
or
movsb
sbb
int3
mov
loope
fwait
cmc
or
imul
pop
pusha
cmc
test
cli
adc
pop
dec
and
push
sbb
jl
int
fistpl
xor
and
cmp
xchg
cli
ljmp
push
pop
add
test
in
pop
jo
out
pusha
fcomps
push
out
add
sbb
mov
and
mov
jecxz
add
outsl
or
stc
jnp
push
jns
cwtl
pusha
or
or
sbb
jbe
movsl
push
cmpl
arpl
mov
jno
addr16
push
xchg
fcmovnb
sub
lcall
ss
or
add
jae
gs
dec
in
fildll
outsb
popl
cli
and
je
dec
dec
test
xchg
cmp
movb
push
ficompl
mov
lds
jns
jne
xchg
insb
and
fwait
or
loope
loop
repnz
and
faddl
xlat
rcrl
cmp
into
and
jge
rorl
ljmp
sbb
dec
dec
std
jae
and
sbb
pop
aaa
inc
aam
pop
xor
or
jns
fldt
subb
dec
pop
xlat
outsl
popa
and
xor
mov
xor
mov
ret
add
sbb
jbe
pop
sbb
aam
into
loopne
mov
push
xor
pop
mov
jmp
loop
jnp
data16
add
fcmovu
mov
or
popa
jmp
fstpl
adc
and
into
ret
cmp
inc
lcall
fcompl
dec
das
dec
cld
dec
adc
sub
xchg
arpl
jg
sbb
sahf
ljmp
pop
int
pop
mov
mov
xor
fistpll
insb
lods
jl
mov
dec
in
fldl
aas
or
jnp
icebp
mov
fisubl
adc
inc
adc
mov
loopne
pop
sahf
pop
in
cmp
out
and
arpl
sbb
dec
lods
sub
or
sbb
int
xchg
repz
ret
ja
aas
aad
fdivrs
xor
popa
cmc
lcall
in
inc
lds
rclb
andl
mov
xchg
jno
push
subb
scas
movsb
rcll
xchg
xlat
mov
lcall
bndstx
xchg
in
mov
aad
dec
push
cmpsb
pop
push
jg
jg
cmpsb
adc
movsb
mov
bound
pop
cmp
mov
das
xchg
clc
xchg
mov
mov
inc
and
xor
dec
pop
inc
inc
mov
xlat
or
test
les
and
jmp
scas
mov
xchg
adc
cs
dec
movsb
xchg
notl
cwtl
mov
rsqrtps
popf
cmpsl
shlb
sub
data16
adc
into
lds
push
xchg
test
inc
cmc
rorl
jle
repz
scas
mov
jbe
push
mov
mov
repnz
cmp
inc
insb
repnz
aad
je
push
sahf
mov
hlt
out
test
sub
fimuls
cmp
inc
fmuls
loope
bnd
ja
dec
sbb
and
add
add
inc
mov
push
and
mov
cld
pop
pop
fstpl
and
mov
mov
xchg
jns
js
popf
jge
add
mov
sub
arpl
push
push
sar
push
jne
lock
aas
in
in
hlt
outsl
jo
movsl
sbb
xchg
mov
cmc
repnz
xchg
inc
or
xor
jmp
jae
dec
jne
xor
mov
cmc
xor
int3
sub
and
jo
cmpsl
xchg
xchg
push
js
jp
call
add
lcall
test
dec
or
cwtl
dec
fsubrl
dec
sub
jmp
fldenv
cmp
sub
es
or
fwait
das
int
dec
add
sub
sbb
scas
popa
mov
mov
lret
xor
mov
push
sbb
call
xor
cmp
xchg
pop
sub
in
push
dec
adc
xchg
ja
dec
out
xor
inc
inc
dec
ret
pop
jg
adc
cmc
mov
pop
inc
sub
pusha
sbb
xchg
add
clts
lahf
add
sub
mov
ss
push
sub
stos
icebp
pop
out
jecxz
lret
xchg
jle
cli
dec
mov
insb
adc
cmp
inc
and
adc
or
fwait
adc
pop
shl
jmp
adc
arpl
aaa
je
dec
rcrl
subb
lahf
adc
mov
xor
jle
sub
sbbl
mov
inc
xchg
mov
test
mov
xchg
lret
adc
push
cs
pushf
fistpl
repnz
repz
adc
xchg
je
out
adc
scas
cltd
iret
lret
xor
mov
dec
das
sbb
jecxz
sahf
mov
dec
push
xchg
dec
pop
gs
jnp
cld
test
push
or
push
test
mov
mov
gs
cwtl
test
lods
enter
nop
stos
sub
sbb
sti
lret
pusha
lcall
mov
adc
cmp
lret
or
xor
push
cmpsl
cmp
decb
jb
je
lea
xor
cli
popf
or
or
sbb
cmp
or
jge
sub
jle
rol
push
push
mov
mov
call
mov
push
scas
or
lea
ret
daa
test
mov
icebp
ds
aad
adc
jbe
jl
ret
popl
lds
sub
clc
cmpl
nop
addr16
inc
icebp
lock
lret
add
orb
jl
add
cwtl
js
pop
pop
mov
in
aaa
and
into
inc
lock
dec
lea
inc
hlt
xor
pusha
cwtl
mov
jecxz
in
add
pop
mov
sub
jno
inc
or
and
mov
jnp
outsl
loope
enter
push
sbb
stos
push
push
mov
push
pusha
xlat
shll
fistps
repz
jg
vpaddusb
es
sub
inc
xchg
lcall
mov
daa
cmc
idivl
push
push
dec
push
xchg
cmp
or
les
repz
aad
or
cmp
mov
je
pop
mov
movq
sub
stos
pop
push
shrb
in
xor
cltd
pusha
and
lods
int
movsl
cli
hlt
out
addr16
and
inc
and
inc
fs
imul
add
stos
loop
jecxz
jge
clc
out
icebp
loopne
std
fwait
mov
dec
cltd
lea
pusha
mov
daa
or
cmpsb
or
test
and
mov
pop
inc
in
iret
jl
mov
xchg
rclb
sbb
or
imul
test
push
outsw
fbstp
pop
cmp
adc
cmp
cwtl
xchg
nop
mov
push
sti
and
arpl
and
add
sub
in
dec
mov
xor
sub
and
ret
mov
sub
cmp
add
or
push
push
add
enter
shrl
int3
call
and
rorl
mov
enter
fldenv
or
imul
pop
xchg
insl
xor
cld
cmp
ljmp
or
mov
movsb
sbb
sti
iret
aad
mov
pop
cmp
sbb
aas
inc
dec
mov
out
or
fucomip
adc
xchg
cmc
movsl
add
dec
mov
add
fisubl
inc
push
sbb
xchg
push
mov
adc
jbe
mov
inc
sub
pop
xchg
adc
sbb
inc
icebp
or
lcall
sbb
outsl
jmp
sub
dec
xor
js
xor
push
push
pop
pusha
mov
add
or
mov
mov
pop
cmp
cmp
dec
mov
or
push
add
out
xor
xor
mov
aam
mov
gs
movsl
mov
jge
mov
imul
sbb
lea
iret
lock
adc
in
dec
ret
test
mov
or
dec
jne
xchg
add
mov
jmp
jno
repz
movsl
xchg
idivl
sub
sub
out
aas
dec
mov
imulb
repnz
jmp
rclb
clc
rorl
sub
inc
int3
lods
das
cs
rorl
add
mov
lods
dec
leave
out
jecxz
sbb
mov
cmc
adc
add
neg
push
fidivrs
lcall
lea
lods
xchg
pop
jnp
lret
stos
int3
test
shlb
xchg
fsubrl
sbb
in
add
mov
mov
inc
mov
or
shll
mov
stos
xor
out
push
mov
sbbl
or
int
je
stos
pop
push
sub
loop
bound
testb
call
aaa
jecxz
ss
aas
ds
sahf
ret
sub
xchg
js
cmp
or
xchg
enter
imul
cltd
xchg
lock
je
xor
ret
adc
or
xchg
pop
mov
or
push
loope
adc
sub
ret
ds
out
mov
test
or
int
or
mov
test
bound
add
loop
lahf
movsl
push
vmovhpd
xchg
jno
add
xorb
mov
xor
cmp
add
and
sub
sub
and
sbb
push
daa
or
jbe
xor
mov
xchg
jae
lods
sub
pop
addr16
lods
inc
push
daa
mov
adc
sbb
cmp
mov
outsl
pusha
xchg
loop
das
das
mov
sbb
mov
mov
icebp
sub
pop
xor
ljmp
ret
imul
pop
adc
jno
cmc
stos
inc
dec
jno
loope
xor
xorl
sti
cmp
jae
js
mov
or
ss
xor
pop
pop
or
jle
jbe
lods
push
xchg
inc
pusha
int
jbe
inc
jmp
adc
adc
jl
std
int3
es
fldcw
loopne
fistpl
movsl
cmc
sbb
mov
movsl
shll
push
adc
xchg
or
jne
xor
push
dec
sahf
mov
push
jmp
sbb
push
pop
imul
mov
add
and
adc
hlt
mov
fstpt
mov
shll
dec
xchg
sbb
sti
aas
and
xchg
jle
std
loope
clc
insb
dec
cmp
push
xor
add
loop
jg
mov
xorl
repz
add
call
aam
shll
loop
jge
out
fimuls
mov
ret
mov
enter
scas
insb
aaa
xchg
sub
mov
and
les
cmp
adc
xor
fwait
popa
repnz
add
push
imul
roll
iret
pop
leave
outsl
gs
out
cmc
inc
xchg
adc
repnz
xorb
sub
int
data16
push
and
or
push
daa
outsb
out
push
push
mov
xor
lcall
scas
adc
shl
push
scas
jne
cmpsl
fisubl
or
inc
or
gs
inc
mov
imul
scas
scas
inc
xor
sbb
ja
mov
sub
cmp
push
stos
flds
popa
xor
mov
enter
adc
push
decl
ds
cmp
pushf
das
cld
sub
push
sub
loope
rcrl
in
mov
negb
sti
xor
xor
call
aaa
gs
cltd
mov
xor
inc
sub
push
pop
fcompl
dec
mov
fsubr
dec
pusha
adc
imul
pop
out
xorb
mov
pop
rcrl
lcall
fwait
aaa
call
sub
arpl
gs
les
aaa
stc
sbbb
mov
insl
mov
loopne
sbbl
clc
dec
insb
jne
test
xor
or
pop
rcrb
frstpm(287
pop
mov
ret
mov
mov
scas
push
stos
inc
lcall
fwait
and
shll
mov
sbb
das
lret
adc
pop
hlt
lret
jae
aas
je
and
fs
stos
mov
aaa
mov
xchg
push
or
and
bound
fstpl
rorl
xchg
ds
inc
xor
jns
call
std
insl
mov
insb
mov
push
sbb
arpl
mov
mov
mov
aad
data16
jne
dec
xchg
cmp
aam
nop
mov
mov
jae
inc
das
movsl
test
fs
mov
es
mov
lods
mov
jno
adc
pop
inc
out
push
adc
cmp
mov
mov
sbb
adc
mov
out
ds
lds
jmp
sub
xor
lods
xchg
add
fildll
add
mov
jecxz
jae
lock
mov
clc
lds
lock
jp
fsubl
xor
mov
push
xchg
jnp
xor
xor
adc
and
inc
push
cld
pop
je
or
js
adc
js
jmp
jo
inc
lods
and
xor
xchg
inc
inc
mov
xchg
into
add
sbb
inc
lods
lcall
xchg
dec
insb
add
insl
sub
repnz
shl
xor
mov
inc
inc
js
xchg
dec
loope
cmp
cmp
mov
gs
push
test
dec
mov
fisubrl
mov
sub
and
mov
test
and
fs
mov
insl
lret
mov
cmp
rcll
mov
xchg
inc
sub
daa
cmp
imul
icebp
notl
push
test
or
xor
leave
bound
loop
xchg
push
push
push
mov
xchg
mov
pop
je
loopne
adc
stos
cmp
add
xchg
repz
adc
push
sub
fstpl
xchg
xchg
xchg
lock
fmul
stos
inc
sahf
sub
aas
jle
push
ds
jp
mov
mov
stos
aad
outsb
xchg
inc
popa
pop
pop
cli
pusha
decl
mov
add
std
adc
add
inc
pop
cmp
jae
out
mov
inc
hlt
inc
pop
or
aas
cmovs
pop
pop
cld
mov
cmp
addr16
mov
xchg
js
cwtl
jno
lahf
es
inc
xor
in
rcl
test
repnz
stos
mov
loop
sub
fmul
repz
out
xchg
xchg
mov
movsl
aaa
cld
adc
jne
mov
call
sahf
loop
jmp
in
cmpsb
mov
insb
sub
adc
mov
xchg
mov
jle
mov
jle
fbstp
shll
pop
test
sti
in
out
mov
inc
adc
xchg
enter
imul
fcoms
jns
mov
xorl
popf
call
outsb
and
fnstenv
or
stc
adc
inc
orl
pop
jno
mov
mov
mov
lcall
sub
dec
outsb
inc
mov
inc
ss
out
jl
add
mov
pop
xchg
outsl
mov
or
aas
insl
mov
inc
cli
mov
jno
and
adc
jecxz
xor
leave
sahf
fwait
pop
in
int
lret
dec
int
fldt
mov
pop
ret
jle
xor
ja
xchg
jp
jge
mov
or
sbbl
shr
mov
inc
xchg
fs
or
imul
push
xlat
pop
mov
out
pop
movsl
mov
pop
mov
mov
mov
inc
fisttps
inc
scas
add
iret
and
adc
xchg
sub
sbb
es
xor
xchg
iret
add
lret
and
pop
fistl
mov
or
or
cmp
and
mov
clc
stos
jae
cmp
cmpsl
clc
add
or
sub
icebp
gs
jmp
ljmp
lahf
ds
mov
call
mov
cmp
lret
sbb
add
xor
cmp
mov
je
scas
aas
push
out
add
loopne
fwait
xor
mov
in
aam
push
xchg
xlat
cmp
or
sbb
xor
push
ret
imul
idivl
aas
int
and
test
cmpsl
jmp
lods
outsb
pop
movsb
mov
enter
addr16
insb
jns
hlt
mov
ss
jne
mov
mov
and
jbe
test
mov
sub
pop
cmp
ret
and
mov
cwtl
adcb
xchg
mov
addr16
sub
out
inc
cli
or
sub
fsubl
cmp
xchg
in
hlt
inc
incb
add
pop
inc
inc
mov
pop
dec
add
xchg
repnz
add
loopne
ror
rorl
test
mov
mov
lret
pop
mov
pop
xchg
jne
mov
hlt
pop
nop
xchg
jbe
dec
xorl
cltd
out
inc
mov
mov
jecxz
das
repnz
jle
lahf
dec
pop
movsl
out
pop
shl
popa
imul
out
loop
lahf
testb
mov
pop
in
fists
fstp
fimuls
ffree
cmp
dec
sub
mov
inc
inc
pusha
ret
sub
adc
jae
pop
jl
or
sbb
add
enter
jno
mov
daa
push
lahf
mov
repz
mov
mov
test
xchg
scas
repz
or
inc
stos
add
int
sub
inc
mov
clc
mov
pushf
xor
orl
push
pop
jns
mov
aaa
clc
int
cmp
clc
mov
insl
ja
xchg
sbb
leave
mov
adc
sti
into
cmc
lods
mov
pop
dec
mov
pushf
ds
movsb
sti
rorb
sub
xor
mov
mov
push
test
cmp
push
stos
adc
shlb
repnz
mov
std
xchg
xor
adc
mov
cmc
dec
inc
adc
jae
stc
push
or
ss
add
std
mov
dec
shl
or
daa
std
pop
test
jns
pop
sub
hlt
dec
cmc
pop
les
and
inc
push
pop
stos
enter
es
dec
dec
cmp
cmp
in
add
mov
or
pop
std
test
jg
mov
into
ret
xchg
sarb
mov
mov
push
in
adc
mov
mov
rclb
icebp
int
pop
dec
lea
clc
outsb
es
insl
in
aam
push
cmp
sub
push
mov
aam
repnz
xlat
aam
push
aam
push
cmp
push
rcrl
ja
popf
jnp
push
cmp
or
jnp
sub
mov
inc
jmp
xchg
mov
mov
sbb
repnz
add
test
mov
or
lcall
stc
add
stos
ss
ljmp
push
pop
lahf
pop
sub
in
push
xchg
mov
ss
bound
or
cwtl
cmp
xor
xchg
subb
mov
mov
sub
movsl
cmp
push
scas
dec
movsl
addl
dec
sbb
lea
mov
fisttpll
out
mov
or
dec
cs
jb
push
or
and
cmp
out
pop
ds
xor
sbb
out
pop
mov
lods
xor
scas
call
adc
imul
push
jl
dec
inc
xchg
sub
lcall
cmp
push
mov
test
cmp
fisttps
and
mov
push
push
push
pop
pop
mov
stos
mov
cmp
jae
in
xor
add
push
std
cmp
repz
jnp
inc
ret
fs
cld
sub
xchg
push
decl
sub
loop
stc
popl
aam
push
jge
mov
jne
dec
inc
out
or
lods
cmc
sbb
lea
gs
imul
mov
xchg
cltd
push
lret
in
cli
or
div
fbstp
sbb
inc
clc
cld
aas
dec
daa
dec
bound
xchg
bound
call
or
mov
jmp
pop
mov
pop
lea
mov
inc
scas
add
loopne
mov
test
test
addl
mov
mov
xchg
fldcw
hlt
jge
mov
jnp
sbb
shlb
sarl
out
jge
outsl
inc
insl
sub
fdivrl
sub
cwtl
jns
pop
push
js
js
pop
mov
dec
adc
add
and
inc
xchg
xchg
mov
jns
shrb
cli
push
sub
xchg
sub
dec
mov
ss
lea
pop
push
rorb
mov
push
jnp
pop
adc
fdivrp
stc
and
pop
push
pop
imul
inc
pop
push
hlt
lds
stos
pusha
clc
je
jp
push
mov
rcrb
sti
pusha
cs
mov
test
push
xchg
testb
std
shrb
add
mov
sub
hlt
pop
dec
adc
fistpll
push
jmp
daa
pop
mov
pushf
mov
repnz
out
pop
mov
sub
xor
loope
lds
or
mov
jbe
inc
mov
adc
add
cltd
gs
jg
and
das
push
and
mov
push
xchg
inc
dec
rclb
enter
in
dec
fbstp
stc
jno
nop
or
je
xor
lret
vandnps
insl
add
lret
xchg
mov
cmpsb
and
adc
adc
pop
pop
imulb
and
adc
or
ffree
std
pop
insb
nop
pop
daa
push
int
test
xchg
mov
lret
popf
mov
jbe
ror
pop
movsb
mov
jns
push
ljmp
cmp
outsb
jmp
insb
outsb
invd
push
and
popl
xchg
ds
inc
or
push
push
mov
stc
mov
adc
mov
rcrb
stc
cmp
aam
add
lods
xchg
dec
push
mov
cmp
and
shll
xchg
loope
mov
bound
bound
inc
pop
pop
les
sbb
cmp
xchg
lea
push
test
push
mov
dec
mov
xchg
stos
adc
push
aas
repnz
push
sti
fildll
jge
lods
cltd
test
xor
cwtl
shrb
sub
insl
or
stos
pop
push
dec
xor
out
xchg
pop
sbb
mov
xor
mov
xor
sbb
out
ret
jb
mov
cmpsl
push
mov
jp
dec
cli
jae
xchg
cmp
sub
jg
cmp
stc
inc
push
test
rcr
mov
pushl
xor
loop
jae
fucomip
pop
lods
cmp
mov
enter
cmpsl
aam
lds
mov
pop
jne
mov
push
lods
pop
lcall
outsb
mov
cmp
and
xchg
and
jns
repnz
insb
imul
mov
leave
subb
ljmp
cmp
dec
or
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
shl
lds
inc
pop
jl
and
lock
dec
lds
mov
sbb
jbe
xor
xor
sub
mov
cmpsb
in
loopne
out
pop
mov
add
cmp
out
pop
das
in
adc
in
adc
jmp
icebp
ljmp
mov
mov
sub
jne
mov
push
cs
aas
in
pushl
ret
jmp
aam
test
and
mov
mov
out
mov
push
insb
push
pop
ss
pop
enter
insl
ljmp
jecxz
push
and
mov
je
jo
movsl
leave
popa
jl
add
jno
aad
mov
cmc
xor
adc
int
lcall
cli
xor
xchg
cld
lods
int3
lods
xorl
dec
pop
sbb
xlat
mov
insl
mov
or
xchg
cmp
aas
inc
dec
jg
xor
mov
mov
mov
add
scas
xchg
sub
popf
lahf
dec
mov
dec
adc
xchg
sub
leave
adc
iret
sub
lahf
imul
cmp
sub
cli
xchg
mov
or
inc
xchg
lcall
adc
loopne
test
fsubr
sbb
sub
mov
sbb
lret
int
jge
pop
cs
loope
mov
cmp
imul
sar
loopne
or
cltd
adc
sub
and
popa
sub
fwait
push
popa
test
aad
mov
or
ret
push
fucomi
test
out
in
idiv
mov
repz
int
jbe
cmp
or
add
insl
hlt
sarb
mov
or
int
cwtl
pushf
push
cld
inc
sbb
loope
or
scas
dec
into
cwtl
push
scas
mov
mov
xchg
dec
out
jle
mov
sub
repnz
fsubs
xor
or
fsubrp
and
test
sub
sahf
push
clc
mov
mov
clc
sarb
cwtl
scas
pop
mov
mov
dec
es
mov
inc
imul
int
int3
repz
sbb
mov
in
rcl
jle
test
pusha
hlt
push
pop
aam
xor
mov
bswap
gs
popfw
pop
or
clc
lock
test
xor
out
or
mov
inc
shl
and
jmp
cs
jmp
in
dec
xchg
push
cwtl
sub
cmpb
sbb
inc
ss
stos
cmp
mov
jnp
mov
roll
and
lock
data16
mov
pusha
icebp
jle
add
lcall
inc
jbe,pt
fwait
cli
inc
adc
jl
in
xorb
push
lret
or
mulb
ss
or
add
rcrl
stc
int3
ret
push
jg
aad
cmp
loop
cltd
and
xchg
rorl
mov
or
roll
movsb
outsl
and
dec
inc
mov
into
cmp
test
xchg
iret
inc
repz
mov
mov
and
sbbb
or
cli
adc
inc
lahf
push
mov
pop
pop
push
bound
inc
pop
lret
les
out
cld
lods
mov
aam
dec
push
xor
lea
daa
inc
icebp
xchg
ja
pop
adc
xchg
jno
jmp
outsb
or
and
sbb
adcb
pushf
cmp
ficoml
jl
int
loopne
and
xor
inc
add
mov
mov
stos
in
aad
push
sbb
call
iret
sbb
pop
add
mov
pop
xor
sub
rclb
fnstsw
cmpsl
shrb
sub
sub
cmp
or
adc
or
hlt
dec
cs
out
mov
out
push
mov
std
dec
loope
sbb
addr16
add
cld
inc
xor
pop
insl
cmpsb
test
dec
fbld
mov
jp
cmpsb
fiadds
stc
lcall
test
push
pop
jb
add
xlat
and
je
fstl
cmpsb
lahf
pop
xchg
pushf
mov
pushf
icebp
lahf
pushf
pop
xchg
mov
pushf
or
jmp
dec
hlt
mov
repz
pusha
sbb
xor
icebp
stos
bound
lret
lcall
jb
std
xor
aaa
lock
scas
and
dec
lret
shlb
nop
adc
loopne
icebp
insb
add
cld
scas
and
stc
es
adc
nop
mov
xchg
jmp
jmp
jge
in
aas
pop
pop
ljmp
mov
mov
shrl
and
or
jle
add
and
adc
push
sub
mov
mov
faddl
movsb
mov
mov
cmp
cwtl
pushf
mov
and
push
imul
fldcw
gs
into
sbb
sbb
inc
cli
or
sbb
xchg
clc
lcall
es
fildll
mov
js
cmpsb
xchg
mov
sbbb
filds
adc
mov
jnp
sbb
pop
and
sahf
in
adc
sbb
push
out
inc
or
mov
xchg
into
data16
mov
bound
pop
ret
loopne
ret
and
xchg
sbb
in
add
jp
jg
in
rsm
sub
xchg
add
sub
sub
movsl
cmp
xchg
fwait
xchg
dec
xchg
sbb
inc
movsb
test
or
decb
sub
rcr
adcb
lock
repz
ja
fwait
jp
add
jecxz
sub
ljmp
cmp
sbb
rcr
aas
movsl
pop
loope
fwait
cltd
or
out
add
outsb
aas
je
xor
or
or
add
rorl
cmp
ficoml
mov
add
sub
xlat
push
nop
lret
insl
lcall
mov
icebp
and
xlat
mov
xchg
and
or
inc
dec
call
fnstsw
fadds
std
push
add
insb
fdivrl
out
sub
addl
dec
mov
mov
push
add
adc
sub
inc
fists
int3
adc
lahf
mov
loop
mov
dec
adc
addl
inc
lret
jo
pop
and
movsl
add
mov
cmp
vrangesd
mov
ljmp
popa
pop
testb
lods
sbb
xchg
stos
cmc
xchg
sub
pusha
mov
je
loopne
mov
cmc
xchg
and
ss
je
mov
or
stos
ds
mov
pushf
aaa
adc
xchg
xchg
hlt
dec
jg
dec
and
sti
ds
lahf
mov
pop
pushf
loope
jno
pop
mov
daa
xor
mov
aam
xlat
scas
add
imul
add
rcrb
cmp
sub
dec
inc
jne
jb
data16
mov
jmp
bound
aas
sub
add
lret
inc
test
sahf
xchg
cld
cmp
insl
xchg
mov
jnp
sbb
lods
gs
movsb
cmp
ss
jo
mov
fldt
add
mov
sahf
and
imul
int
xor
or
mov
outsb
dec
js
orl
enter
testl
sarb
push
push
cli
push
je
adc
xchg
mov
fs
je
add
dec
inc
daa
fwait
js
xor
dec
pop
sub
in
sub
inc
and
int
lods
push
sub
dec
add
mov
mov
ljmp
push
arpl
fiaddl
jl
inc
cmpsl
or
icebp
fdivl
push
dec
jge
clc
imul
icebp
jge
jb
out
or
push
mov
or
nop
mov
lahf
dec
cltd
adc
shl
pop
and
pop
iret
hlt
dec
je
pusha
cmp
push
fbstp
es
xchg
lds
add
pop
push
xchg
mov
add
mov
cmp
mov
clc
stos
cltd
fiadds
jmp
jno
pop
fidivrl
mov
xor
popf
xchg
stos
xchg
push
aas
or
loop
int3
data16
cmp
cli
dec
repz
cwtl
js
xor
orl
and
dec
adc
je
ja
lods
jbe
xchg
addr16
aad
int
xchg
xor
in
aam
xchg
mov
nop
cmpsb
int3
test
or
repz
inc
adc
jmp
cltd
adc
add
add
andl
bnd
shrb
pop
into
mulb
lea
and
xchg
jno
outsb
xor
scas
inc
sbb
loope
xchg
aaa
sbb
cmpl
or
ret
shlb
and
jcxz
stc
pusha
sbb
xchg
fimuls
or
xchg
lods
or
enter
pop
and
inc
mov
test
sub
arpl
pop
xchg
lret
lcall
jg
sub
scas
push
push
pop
xchg
jae
divb
xchg
imul
xchg
pop
ja
pop
jno
aad
inc
jno
repnz
inc
orl
sbb
jb
mov
xchg
lea
pop
in
lcall
push
loop
push
xor
stos
add
push
addr16
sbb
xor
xchg
or
and
pop
push
push
dec
mov
clc
test
mov
out
data16
sbbb
xor
pop
xchg
into
mov
xchg
push
jne
ficoms
dec
push
cltd
sub
div
push
push
out
clc
xor
test
fnstenv
loope
pop
out
mov
pushf
mov
shlb
jp
jns
je
cli
sbb
xchg
add
lret
outsl
push
outsb
xor
ds
add
jge
xor
subl
pop
subps
sbb
mov
loope
pop
adc
mov
pop
lds
divl
jbe
or
lret
pop
pusha
cmp
ljmp
fiaddl
cmp
mov
lods
push
mov
jne
cwtl
add
mov
fidivs
cmp
inc
mov
inc
fnsave
stos
in
xor
int3
pop
imul
inc
xchg
movsl
mov
inc
in
jnp
test
dec
loope
popa
lcall
cmp
sbb
imul
mov
andl
mov
push
ds
mov
stos
stc
sub
mov
pop
ss
mov
cmp
push
dec
mov
nop
cmp
pop
pop
lret
pop
sbb
insb
jle
cmpsb
adc
aam
and
mov
sub
push
adc
cli
and
mov
pop
cmpsb
pop
mov
outsl
loopne
mov
movsb
scas
mov
adc
sbb
pop
loopne
mov
insb
xchg
pop
mov
pop
push
les
rolb
nop
dec
and
test
test
ljmp
add
mov
aad
or
rorb
bound
xchg
in
inc
sub
jno
inc
cmp
add
insb
in
repnz
jo
cli
adc
and
movsb
cmp
fidivs
mov
sub
cmpsb
sub
mov
sbb
xchg
ss
stc
movzwl
rorb
add
mov
and
cld
int3
xor
jb
jl
stos
xlat
jg
mov
mov
lret
mov
aaa
pop
adc
xchg
lcall
movsb
dec
mov
pop
mov
mov
push
fcomps
call
xor
push
int
cmpsl
ds
sbb
pushf
inc
sub
lahf
pusha
popf
mov
cmc
sbbl
push
sub
orl
int
xchg
mov
shlb
xor
push
pusha
jecxz
lcall
adc
jne
frstor
movl
dec
popa
and
mov
pop
repnz
cmpsb
js
daa
adc
je
hlt
mov
sti
sub
fldcw
rorl
or
cwtl
push
cmpsl
sub
xchg
push
xchg
std
adc
aas
sbb
lods
adc
xchg
les
inc
add
cltd
cmp
sahf
and
in
int
out
jns
pop
cmpb
xchg
jne
push
xchg
mov
in
call
fstps
dec
or
fsub
pop
scas
xor
cmp
cld
jo
in
lcall
and
cmpsl
lcall
xchg
inc
push
ret
add
rorl
pop
and
jno
pop
arpl
push
int3
jp
pop
or
sub
ja
mov
mov
test
jne
out
jp
xchg
push
outsb
loop
bound
sub
inc
xchg
mov
mov
dec
pop
cmp
aad
test
test
cmpsl
xchg
ljmp
outsl
mov
das
push
pushl
icebp
repz
orl
fimull
rcll
sub
dec
scas
pop
mov
adc
fidivs
dec
mov
in
test
cld
and
sbb
pusha
fs
xor
fsub
xor
cmp
sub
lret
cmp
jne
fmull
test
jecxz
push
push
xor
mov
cmp
aas
ja
push
stc
sub
xor
in
std
mov
popa
xor
mov
stos
test
sub
cli
dec
pop
adc
xor
sar
adc
call
cltd
push
add
or
cwtl
pop
xchg
xor
lods
mov
xor
add
stc
mov
inc
jle
repz
push
push
cmpsb
xchg
xchg
mov
or
dec
jg
add
sub
mov
lea
das
xchg
popf
ficomps
cmpsb
or
pop
sub
sub
push
aas
mov
xor
movaps
inc
fucomp
and
pop
popf
cmp
lock
mov
iret
outsb
imul
xchg
push
pushf
pop
in
fmul
ficomps
xor
ja
stos
lea
scas
cmp
aas
add
or
icebp
xor
push
rolb
dec
in
xchg
xor
clc
mov
mov
lcall
sub
sub
fdivs
int3
loopne
clc
aad
dec
pop
mov
mov
jo
iret
fwait
inc
or
jnp
dec
xlat
mov
inc
push
jne
push
sub
xchg
lahf
cld
bound
stos
sti
jg
jbe
xlat
sub
dec
movsl
loope
pushl
repz
pop
xlat
cmp
or
xlat
out
inc
add
out
rcrl
cmp
and
loope
dec
lods
jmp
je
push
jns
jne
nop
dec
or
icebp
mov
into
sbb
dec
mov
sbb
dec
or
es
loope
mov
sbb
dec
sub
sub
cmpsl
fisttpl
ret
xchg
sbb
or
aaa
and
jae
push
fcoms
mov
out
or
repz
lcall
or
mov
rcr
mov
jmp
ret
adc
jp
pop
xchg
adc
pop
cmp
jns
push
sahf
loop
push
movl
lahf
insl
lret
mov
lds
data16
or
cmpsl
ja
lcall
cmp
fs
sub
mov
into
cmpsl
leave
imul
repz
adc
pusha
je
pop
rcrb
push
jmp
cmp
cmp
cmp
fldenv
dec
pop
popf
stc
daa
sub
xchg
sti
dec
out
lods
fbld
ss
fsubrs
dec
addr16
adc
out
add
mov
add
mov
inc
iret
xor
into
xchg
jne
lods
push
ljmp
mov
notl
jmp
push
aaa
jg
jno
lods
dec
mov
jmp
fildl
pop
or
mov
cmp
jge
jp
sub
out
add
fstpt
out
jp
add
fs
add
int3
pop
loop
xor
mov
js
pop
std
pop
loop
subb
shr
hlt
push
add
cltd
jno
adc
iret
ficompl
sbbl
jecxz
push
or
dec
push
push
clc
out
sbb
cltd
mov
jns
jge
lods
sbb
xchg
ja
mov
jg
outsb
test
sti
popa
cmp
test
push
xor
popf
mov
test
stc
pop
mov
lods
jne
fcmovne
push
ret
dec
xchg
enter
push
sub
push
mov
push
xchg
loop
lcall
mov
add
and
test
pop
imul
sbb
push
dec
or
and
push
idivb
mov
in
or
test
sub
inc
xchg
add
rorb
scas
ss
enter
sub
ljmp
out
shlb
cltd
inc
daa
pop
in
sbb
std
outsb
mov
sbb
sub
mov
insl
dec
ds
aam
lods
xor
js
lods
int3
sub
add
mov
mov
je
xchg
inc
or
ljmp
mov
leave
lret
jmp
sti
out
es
sbb
rorb
cs
loope
inc
ret
pop
xor
cmp
xor
inc
mov
mov
mov
adc
roll
hlt
lea
int3
gs
sbb
mov
cmp
mov
hlt
mov
pop
ja
jp
or
fwait
inc
leave
cmc
repz
and
xor
iret
jecxz
pop
push
fists
jmp
ja
jo
es
and
sub
jne
ds
xor
and
cmp
mov
cld
aad
outsl
aam
daa
outsl
adc
pop
or
fmull
arpl
sti
xchg
lret
xchg
mov
sbb
mov
ljmp
cmpsb
mov
xchg
push
movsb
aaa
cmp
inc
push
mov
inc
push
xor
outsb
push
sbb
int
sbb
or
scas
mov
imul
repz
popa
loopne
or
loopne,pn
fidivl
pop
movb
or
xchg
std
inc
add
fnstcw
fisttpll
pusha
sub
sbb
hlt
mov
scas
and
fs
sub
stos
or
xchg
cmova
jb
fs
andb
sub
test
adc
pushf
addr16
jne
jmp
fidivs
loopne
inc
das
cli
jmp
dec
pop
sbb
or
inc
out
test
es
add
cwtl
int3
fidivrl
and
cld
mov
cmpb
cwtl
xchg
dec
add
fisubrl
xor
mov
rolb
fnsave
adc
xchg
xorps
movsl
roll
or
sarl
arpl
jp
imul
jmp
pop
pop
lcall
pop
scas
xchg
sub
inc
mov
mov
pop
nop
add
xor
lahf
repz
loop
push
out
and
or
cli
enter
push
inc
sub
mov
cmp
sbb
movsb
mov
adc
enter
lret
hlt
mov
shl
jmp
stos
pop
mov
in
lds
cs
rcll
mov
inc
mov
adc
aaa
aam
push
pop
push
lock
aas
xchg
push
shlb
mov
xchg
mov
xlat
shll
mov
pop
rcll
mov
mov
loop
mov
out
loopne
dec
enter
xchg
or
or
addb
int3
imul
rorl
dec
push
cmpsl
cwtl
inc
clc
rcrl
clc
pop
sbb
mov
cmp
sbb
mov
pushf
rcr
fcmovnbe
sahf
pop
jb
test
sub
jne
mov
mov
xchg
jge
or
mov
test
dec
addr16
mov
out
push
mov
shrl
pop
cmp
mov
mov
subb
mov
mov
leave
in
or
xchg
aaa
push
jbe
xchg
sub
lds
lret
or
loop
and
test
sbb
pop
mov
movsb
popf
mov
add
int
mov
cmpsb
bound
jp
add
jge
test
push
xor
push
xor
jmp
sub
ljmp
hlt
enter
dec
test
pushf
sbb
aam
xor
sbb
inc
insb
add
aad
aaa
push
icebp
dec
add
or
mov
push
jnp
inc
mov
fildl
loop
add
pop
iret
push
jbe
stos
mov
outsb
dec
xor
mov
nop
sbb
jle
xor
sbb
xor
and
or
mov
cltd
xchg
inc
scas
sbb
push
cmp
lret
mov
data16
loopne
push
decb
scas
ret
and
call
jmp
aas
hlt
push
js
add
nop
cmp
movsb
pop
xor
fistl
mov
cltd
stc
je
jge
mov
pop
icebp
sub
int
mulb
mov
ja
mov
fwait
leave
add
push
add
decl
jb
leave
movsl
xor
or
xchg
movsb
sub
cwtl
xchg
aam
fmuls
inc
lock
xor
pushf
push
mov
call
mov
jb
stos
mov
sub
and
inc
xorl
stos
sarl
jo
insl
mov
pop
leave
xchg
nop
ljmp
iret
inc
and
cmpsl
dec
mov
arpl
iret
push
mov
inc
loope
mov
sub
ret
push
fldl
push
xchg
inc
push
xor
pop
out
pusha
push
mov
lock
pusha
adc
lock
xor
lahf
inc
out
mov
sarl
mov
test
cmp
xlat
popa
push
mov
loop
out
iret
pop
sub
das
dec
repnz
hlt
xchg
push
movsb
cmpsb
rorl
inc
mov
mov
shrl
pop
pop
push
fucomip
in
and
jle
fistpl
add
jge
pushf
jb
in
cmp
shll
pop
sbbl
std
pop
push
push
jge
cwtl
inc
mov
xor
stc
push
or
fimull
ficoms
xchg
pop
push
cli
test
jge
add
push
fldt
dec
adc
pop
and
test
push
rcrb
rorl
pop
repz
dec
loope
mov
dec
push
mov
daa
stc
jecxz
ljmp
lret
mov
push
xchg
outsb
sbb
mov
ficompl
mov
mov
aas
fidivrs
push
push
lods
test
xor
jl
push
cmp
fsubrp
out
out
adc
add
jmp
ss
mov
ds
xchg
jp
or
adc
fmul
imull
inc
pop
arpl
fwait
jecxz
pushf
ljmp
ja
pop
inc
movsl
faddl
inc
mull
mov
aam
jle
or
int
test
xchg
push
aam
aam
and
or
inc
mov
stc
ret
mov
aad
jmp
adc
mov
enter
test
setp
repz
adc
jle
iret
roll
inc
outsb
hlt
js
cli
sbb
pop
add
mov
jo
cmp
cld
adc
jne
pop
cli
add
sbb
ret
cs
sub
mov
xchg
mov
and
test
movsb
out
mov
jge
push
push
pop
sbb
mov
jl
push
sbb
lahf
sub
or
ja
icebp
cmp
fstps
sbb
arpl
push
adc
into
push
mov
inc
fwait
add
xchg
cmp
sub
pop
inc
or
cs
fisttpl
mov
repnz
xchg
lret
add
xchg
xchg
sbb
xlat
pop
add
or
inc
in
jne
or
cmpsb
mov
push
add
or
fildll
outsl
push
mov
lods
push
clc
loopne
xor
or
sahf
xor
aaa
push
sbb
scas
aam
icebp
cmpsl
aaa
ss
cmp
push
scas
jecxz
mov
fcompl
movl
and
xor
fs
test
es
inc
pop
hlt
lret
cmp
and
ljmp
out
ficoml
mov
movsl
jle
mov
push
ljmp
mov
rorl
rolb
arpl
and
push
cmp
inc
and
sbb
shll
pop
or
add
sub
stc
in
xor
rcr
adc
mov
mov
mov
lds
add
inc
and
pop
add
sbb
and
sahf
cld
pushf
xorl
xor
jp
mov
inc
xchg
out
nop
pop
lahf
xchg
addr16
mov
mov
mov
stos
outsb
aaa
pop
jns
push
je
pop
out
cmp
imul
fnstcw
mov
test
mov
sbb
add
push
sbb
jge
cmp
iret
jecxz
stos
stos
dec
scas
insl
arpl
pop
sbb
outsb
sbb
popa
inc
and
fwait
adc
fmull
pusha
push
pop
mov
mov
lea
jmp
cmc
mov
out
mov
jo
test
or
ficoml
in
rol
in
sub
adc
push
mov
int
mov
add
xchg
or
mov
dec
daa
xchg
lret
add
xchg
aad
loop
or
inc
insl
sar
push
outsb
lret
cmpsl
cmpsb
fwait
adc
test
mov
fimull
dec
aad
sbb
inc
xchg
jg
sar
rol
push
jb
cmp
inc
jp
sarb
rol
outsl
bound
dec
mov
xchg
fldenv
mov
scas
mov
add
mov
xor
roll
popf
sbb
mov
pop
mov
btr
cmpsb
mov
dec
push
stos
inc
cmp
dec
xor
repz
adcb
mov
jns
fbstp
sub
xchg
dec
pop
fstpl
pop
pusha
mov
dec
sub
lret
pusha
push
xchg
xchg
inc
sub
xchg
xchg
mov
ljmp
lock
adc
pop
int3
pop
mov
cmpsb
dec
test
lock
fs
fwait
out
pushl
push
ror
pusha
or
lods
push
jle
loopne
push
js
and
mov
filds
bound
jmp
add
sub
scas
cltd
pop
fidivl
cmp
out
outsl
jp
nop
jecxz
mov
lea
pop
and
fnstsw
mov
in
mov
sbb
test
loopne
inc
loope
gs
inc
jl
mov
stc
sub
jmp
pushf
repnz
lret
pop
leave
out
mov
enter
in
mov
lahf
and
adc
jmp
ja
outsb
ljmp
out
jne
hlt
inc
xor
test
fs
lods
and
sub
add
dec
adc
mov
jnp
stos
shll
jecxz
push
pop
push
cmp
aam
mov
mov
test
pop
dec
mov
fwait
push
or
call
adc
hlt
push
xlat
dec
pop
faddl
inc
xchg
ss
mov
push
iret
mov
dec
test
sbb
xchg
sbb
fldl
xchg
push
xchg
aam
sbb
imul
insl
lret
test
or
pusha
push
scas
push
mov
xor
dec
jp
lret
or
test
or
pop
inc
cmp
dec
push
pop
idiv
iret
adc
inc
mov
inc
fadds
xlat
cs
or
mov
aaa
sbb
cli
sahf
push
test
push
mov
jle
inc
loope
xchg
clc
add
lods
sar
mov
mov
icebp
in
cmp
lea
inc
sub
insb
push
iret
dec
cmp
mov
inc
fnsave
and
push
addr16
push
jp
inc
imull
cltd
test
cmp
sbb
inc
ret
popa
push
push
jb
out
test
arpl
dec
fwait
xchg
mov
inc
leave
push
or
sti
jmp
jmp
cmp
sarb
push
xchg
sbb
jmp
out
push
mov
and
dec
adc
cmpsb
adc
mov
cltd
pop
out
add
and
jo
dec
stos
cmc
test
sbb
cmp
out
cmpsb
int3
inc
repnz
sub
and
lahf
mov
imul
mov
fldl
push
mov
fwait
testb
or
outsl
mov
push
mov
mov
lea
cli
xor
xchg
sar
pop
push
pushf
jnp
setle
fmull
leave
lahf
ret
inc
xlat
jns
xchg
adc
sbb
fwait
test
xchg
cltd
aam
mov
jl
add
iret
jecxz
in
movsl
sbb
test
mov
jo
pop
dec
dec
iret
repnz
mov
cmp
or
test
xchg
cmp
out
mov
sbb
or
pop
and
inc
ret
jnp
icebp
cld
mov
cmp
insb
test
sbb
dec
inc
int3
dec
jecxz
arpl
push
lret
out
push
pop
jae
xchg
mov
out
das
lock
or
adc
jmp
imul
inc
cmp
push
call
dec
adc
mov
into
xor
adc
sub
or
jg
add
fimull
lea
cmp
repnz
add
dec
pop
xchg
sub
add
shl
mov
es
imul
inc
xchg
fisttpl
push
mov
adc
setge
push
add
pop
imul
hlt
xchg
mov
dec
sar
adc
mov
or
lock
sarb
lods
lcall
mov
out
and
fdivr
jle
or
shl
movsl
mov
dec
cltd
xor
stc
fisttpll
notb
in
push
add
lcall
stos
scas
cwtl
mov
imul
mov
xor
cmp
xchg
lock
fimuls
insl
lods
cs
out
mov
out
pop
lods
push
cmp
dec
popf
adc
lret
jle
push
ret
movsb
hlt
clc
xor
and
jno
jne
cmc
inc
stos
sahf
outsl
adc
bound
or
clc
xor
add
add
sub
adc
dec
je
xchg
or
xchg
cli
ljmp
pop
filds
xchg
adc
xlat
mov
push
push
inc
lods
or
sbb
arpl
lret
push
imul
lods
stos
aas
daa
fdivs
lahf
and
adc
push
push
add
fildll
add
jmp
sbb
jge
inc
jne
mov
aad
in
push
testb
in
jg
lock
xor
xchg
jae
sbb
clc
stos
fstpt
aaa
das
sub
test
test
inc
push
icebp
adc
mov
loope
int3
lea
push
int3
pop
dec
stos
pop
or
and
mov
jb
push
cli
jg
imul
dec
out
push
sahf
or
cmpsl
repnz
aaa
ss
sbb
js
sbb
mov
push
or
popf
mov
aas
jmp
sub
adc
mov
mov
rcrl
rclb
xchg
push
imulb
sub
xor
cmp
outsb
dec
or
xchg
pop
lahf
push
cwtl
pushf
adc
sbb
xchg
xchg
imul
inc
xchg
inc
inc
repz
fcoms
mov
jb
pop
xor
sub
mov
aad
sarl
mov
mov
negl
leave
popa
xor
mov
xchg
mov
outsl
mov
sub
xchg
arpl
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
inc
nop
mov
inc
pop
jl
and
ss
mov
scas
jns
fmul
testl
stc
pop
pop
pushf
pop
ja
push
roll
sbb
nop
xlat
xchg
mov
fistpl
repnz
dec
mov
xor
and
ret
mov
push
loop
fadd
je
jp
fsubs
je
mov
add
adc
add
jmp
pop
adc
inc
push
cmp
stos
testb
jnp
dec
dec
mov
mov
mov
loop
sub
call
adc
pop
mov
sbb
enter
push
mov
das
shll
mov
adc
inc
imul
testl
insl
xor
and
pusha
dec
xor
aaa
stos
sbb
adc
push
int3
mov
call
or
movsb
shll
rorb
mov
inc
xchg
or
notl
mov
popa
cmp
mov
and
and
scas
pop
mov
xorb
mov
add
mov
inc
std
testb
lcall
jmp
inc
or
jge
scas
mov
mov
out
xlat
mov
out
je
push
out
and
fnsave
inc
lods
shr
popa
sbbl
xor
mov
sub
jl
inc
pop
cmp
es
or
stos
jmp
inc
and
mov
fnstcw
add
aas
inc
mov
arpl
mov
movsb
xchg
push
gs
xchg
pop
mov
pop
roll
rol
outsb
mov
jg
sarl
bound
jmp
push
mov
xor
out
sub
inc
scas
popf
adc
or
test
lret
roll
and
mov
cmp
lock
sar
negb
xchg
push
stc
dec
pop
int3
repz
mov
aad
push
popf
sbb
cmpl
in
push
jle
xor
pop
and
dec
pop
mov
mov
mov
bound
xchg
xchg
push
repz
and
cmc
xor
dec
nop
fnstcw
les
xchg
ret
pop
lahf
je
jle
fcoms
inc
cmpsb
jns
add
push
dec
rorb
dec
push
cmp
mov
sub
push
sub
dec
sahf
cli
subb
add
mov
test
push
cli
mov
hlt
daa
scas
push
sub
xorw
mov
pop
lahf
xchg
stos
out
pop
mov
mov
mov
or
das
xor
lock
fsubs
jl
fcomi
lds
sub
negb
and
push
push
push
pop
cmpsb
add
sbb
icebp
sub
sub
and
jno
push
sbb
fsubrl
or
leave
inc
cmp
cli
call
push
int
pop
decb
ficompl
mov
jp
mov
and
bound
xor
scas
pop
mov
stc
jecxz
push
lret
push
pusha
rcl
push
mov
mov
pop
add
inc
jnp
lcall
fimuls
or
pop
popf
or
jne
dec
mulb
adc
loope
out
loop
cmc
lock
fwait
xchg
jmp
push
xor
repz
in
mov
je
jb
popa
xlat
fwait
stos
or
in
mov
popa
push
dec
push
sbb
loop
addr16
mov
aas
sub
mov
inc
dec
adc
icebp
pop
gs
jno
stos
cld
xorb
sahf
inc
test
push
mov
out
rcr
mov
jnp
mov
or
pop
in
or
add
cld
pop
fimull
cmp
jns
sub
fs
test
int3
rclb
mov
push
scas
xor
push
sbb
pop
ja
or
pushf
outsl
jecxz
aas
call
and
int
lret
lret
adc
inc
test
pop
fs
dec
into
out
sbb
pop
iret
xchg
mov
stos
ds
cmp
xchg
stos
jbe
dec
mov
and
dec
push
and
lods
sbb
sub
icebp
add
jns
and
insb
test
repnz
scas
in
popf
cmc
inc
rcr
lods
jmp
push
jns
sbb
sbb
sub
rol
xor
mov
cwtl
lret
or
mov
and
jnp
cmp
mov
std
xor
mov
mov
scas
fs
dec
daa
aad
adc
xor
inc
xor
test
shll
cmpsb
dec
mov
sbb
and
mov
fildll
out
std
dec
aad
push
stos
jle
arpl
cli
mov
ljmp
xchg
les
rol
aas
pop
cmp
sub
fstpt
xchg
insb
ljmp
or
iret
sbbl
lret
and
lcall
and
js
aaa
test
mov
dec
sbb
pop
int
sub
mov
jecxz
movsl
mov
ss
cmp
pop
pusha
hlt
or
faddp
mov
or
adc
xor
sbb
mov
sbb
or
jns
loope
mov
ja
sahf
dec
jmp
fnstenv
mov
and
cs
fisttpll
call
or
movsb
test
push
pop
sub
dec
inc
mov
int3
adc
mov
push
or
and
sbb
xor
sbb
dec
push
outsl
sbb
mov
les
xchg
jno
outsb
jbe
push
push
pop
cmp
aad
push
xor
mov
ret
lock
jl
fsubl
add
mov
cltd
not
les
call
cmpsl
mov
bound
pop
fsubrl
mov
into
insb
cmp
out
movsl
push
pop
dec
ret
sbb
daa
shr
push
nop
test
mov
xchg
gs
mov
or
pop
loopne
sbb
int
cmp
push
sub
adc
pop
cmp
je
movsb
xchg
or
movsb
call
in
jmp
mov
pop
mov
or
outsl
xor
fsubl
enter
lds
sub
push
dec
negb
in
scas
pop
scas
shr
xchg
jge
cmp
call
jne
fstps
cmp
pop
arpl
adc
xor
lret
outsb
mov
adc
sub
fcomi
cmp
lcall
adc
inc
lcall
mov
xchg
aam
bound
jmp
cli
int
adc
push
push
push
pop
hlt
and
sbb
jb
int3
fdivs
push
mov
fwait
hlt
fldl
cmpsb
movsl
jnp
sbb
jg
inc
mov
and
sbb
dec
ljmp
dec
inc
or
push
pop
scas
cs
xchg
out
add
inc
push
mov
xchg
insl
dec
notb
pop
and
rol
lcall
mov
ficoms
jle
popa
pop
cltd
cld
aas
shrl
or
add
jle
adc
mov
pop
xchg
enter
int3
mov
push
scas
push
movsl
scas
xchg
repz
cmp
mov
mov
scas
arpl
clc
loopne
rcrl
adc
sahf
movsb
xorb
loopne
lret
fidivrl
in
mov
jo
pop
dec
or
pmulhuw
data16
leave
das
gs
lahf
sbb
xor
insb
mov
sarb
sbb
lods
call
and
dec
lock
cmc
xchg
pushf
movsb
jp
fwait
inc
popf
cmc
int3
xchg
xchg
adc
inc
fsubp
fsubl
aam
sbb
outsb
xchg
push
add
repz
test
int3
data16
dec
adc
cltd
and
or
lcall
push
pop
and
xchg
mov
push
faddl
jae
jmp
jae
and
push
xchg
lock
cs
out
xor
hlt
mov
ficoml
icebp
add
ret
xchg
jp
jne
js
add
jecxz
test
adc
subl
and
mov
mov
mov
mov
push
and
pop
jb
jno
test
fadd
sbb
pop
mov
fcmove
insl
movsl
iret
xor
ret
into
xorl
test
sub
lret
jge
fdivl
xor
outsb
adc
fs
repnz
rcrb
std
or
lea
gs
sbb
push
call
inc
sub
jns
xchg
or
pop
cmc
jmp
bswap
popf
iret
push
insb
adc
xchg
leave
arpl
mov
mov
xchg
seto
or
dec
stc
mov
adc
mov
inc
out
and
cmp
jae
sahf
dec
jne
jo
sbb
mov
jno
mov
xchg
or
sbbb
shrb
inc
js
repz
stos
addb
sub
aaa
incl
ret
dec
daa
js
pushf
int3
add
daa
ror
das
ret
jb
dec
loopnew
stos
xor
lock
adc
push
pop
adc
cmp
int3
pop
push
pusha
loopne
aad
inc
icebp
push
test
xchg
mov
push
mov
mov
xor
adc
or
push
dec
push
in
push
adc
in
and
imulb
out
push
shr
jecxz
push
pop
pop
in
sti
inc
stos
sbb
nop
insb
pop
pop
out
pop
out
push
clts
cli
add
jmp
pop
push
cld
mov
cmpsl
fsts
push
imul
sub
and
sub
sbb
mov
scas
std
popa
outsb
mov
scas
cmp
sbb
lods
aas
mov
sub
ja
cld
xchg
movsl
xor
ljmp
fs
or
add
sub
xor
ds
cmp
jecxz,pt
push
insl
or
mov
add
mov
inc
lea
xor
or
enter
roll
add
mov
out
jmp
rcrb
sub
out
sahf
outsb
ret
mov
cltd
imul
dec
fdivp
pop
xchg
dec
mov
imul
cs
xchg
mov
sub
and
mov
cvtdq2ps
movsl
pop
xor
sub
ror
mov
lods
or
ja
dec
adc
push
dec
call
dec
call
cmp
dec
lock
scas
xchg
mov
sahf
cwtl
sbbl
fxam
xorb
rolb
fisubs
push
or
push
or
lea
adc
fidivl
xorb
shlb
clc
addr16
or
test
cmp
pop
push
mov
aad
scas
test
or
sahf
ljmp
mov
inc
or
test
pop
sub
jo
imul
das
cmpsl
outsb
aam
stc
xor
jns
dec
cli
idivb
dec
add
enter
shr
lfs
push
shll
dec
in
imulb
xchg
sbb
jo
xchg
out
ret
inc
scas
mov
addr16
hlt
xchg
mov
mov
and
mov
sti
je
jmp
cmp
mov
mov
push
mov
push
pop
in
pop
loop
xor
xor
test
ja
js
jnp
fsub
mov
mov
push
imul
sbb
lods
push
scas
dec
push
pop
sbb
jne
out
jbe
ror
dec
dec
lock
xlat
or
ds
out
fmuls
add
adc
sti
pop
fs
xor
cs
sub
lret
insl
cmp
sbb
jecxz
movsb
pusha
or
mov
bound
pop
xchg
sbb
fmuls
jb
add
mov
shlb
repz
fwait
jne
xchg
bound
add
inc
xchg
lahf
sub
xchg
adc
mov
mov
push
nop
xlat
xlat
pcmpeqb
mov
faddp
xor
fwait
lds
push
mov
add
es
jge
pause
enter
pop
andb
mov
movsb
inc
aaa
mov
repnz
repz
dec
data16
sbb
sub
inc
fwait
cli
push
add
rolb
pop
dec
shlb
cltd
push
cmp
shrl
in
adc
icebp
mov
push
mov
adc
mov
mov
call
shlb
gs
pop
nop
into
pop
dec
outsl
sub
popf
adc
jecxz
lods
inc
filds
insl
fidivs
lret
mov
cld
daa
rcrl
mov
dec
xor
jae
cmpsb
rcrl
lock
push
or
cmp
cld
ss
aaa
sub
jmp
mov
jl
dec
pusha
shr
addb
mov
leave
pop
adc
jg
bound
add
sub
roll
add
dec
inc
mov
test
push
mov
jge
push
adc
sbb
movsl
inc
sbb
cs
xchg
jo
sbb
imul
or
sub
stos
mov
fwait
mov
pop
push
or
lods
mov
daa
and
xchg
ret
mov
iret
fdivs
adc
xchg
ret
fisubs
clc
repnz
adc
data16
jae
insb
mov
out
inc
pop
pop
mov
dec
enter
ret
lcall
jecxz
xchg
shr
or
push
jp
iret
shrl
jo
test
icebp
adc
sub
ss
shll
roll
popf
ljmp
add
adc
outsb
stos
insb
cld
cmp
inc
add
push
rolb
sub
jne
push
fnstcw
sub
dec
ret
jl
loope
repz
xor
ss
pop
pop
jg
jle
sub
xchg
jle
dec
int
ret
loopne
mov
sub
movsb
bound
pop
mov
jb
cmc
dec
and
std
xchg
aas
sub
or
js
loopne
scas
mov
push
lret
std
lods
gs
std
arpl
cmpsb
mov
xchg
scas
sbb
fwait
cmp
pop
sub
in
mov
faddl
fstps
das
jmp
mov
cmp
xchg
aas
dec
ret
call
push
fbstp
mov
push
cli
fnstcw
in
pop
jno
pop
sub
fdivr
fidivrs
push
lcall
mov
das
outsb
mov
pop
les
je
and
fistpll
xlat
cmc
push
xor
mov
cli
or
jno
inc
add
stc
mov
aas
call
iret
sub
mov
pop
sbb
cmpsb
mov
pop
push
mov
and
add
jle
mov
leave
cmp
bound
fdivrs
call
xchg
sub
cld
in
jo
fwait
pop
fcomps
or
arpl
sbb
sub
sub
adc
in
xor
push
push
xchg
adc
loope
and
push
add
adc
test
xchg
rdpmc
icebp
mov
out
jmp
mov
pop
dec
lods
add
mov
mov
loopne
mov
mov
mov
mov
nop
es
xchg
or
jae
push
xchg
lods
lock
cmp
enter
jl
rcr
adc
jnp
add
iret
or
mov
lods
movsb
xor
std
xchg
jge
out
mov
xor
sub
pop
xor
pop
daa
stos
adc
pop
xchg
jp
sbb
pop
fisubs
mov
aad
mov
cli
push
jmp
mov
outsl
cmp
mov
inc
jnp
add
hlt
xchg
rorb
setg
out
stos
aas
xor
add
cmpsb
clc
sbb
imul
pushf
in
fcoml
hlt
push
jg
or
iret
sbb
mov
scas
sub
push
inc
jl
add
repz
testl
add
fcoms
or
outsb
push
outsb
fcoml
pop
mov
pusha
insb
jae
ljmp
jns
or
mov
xchg
mov
data16
sar
gs
inc
mov
repz
jae
sub
lcall
sbb
xor
lods
lahf
pop
js
jle
sub
ret
mov
aad
mov
push
cmp
out
jnp
mov
stos
dec
ffree
aas
lock
dec
push
mov
pop
sbb
jge
or
call
xchg
push
xlat
aam
ja
cmp
shll
mov
mov
sbbb
test
js
xchg
mov
jecxz
ror
mov
inc
das
test
sbb
and
add
pushf
and
xor
out
sbb
adc
repnz
add
sbb
mov
sbb
cld
jp
jge
lret
negb
cmpsb
outsl
lret
incb
roll
xchg
sub
push
mov
in
hlt
daa
lret
ss
xor
cmp
out
cmp
cmp
rcrb
icebp
cmc
add
mov
xchg
hlt
mov
lock
popa
imul
loop
cli
jne
and
push
xorb
mov
sbb
xchg
cmp
mov
mov
pop
insl
lea
add
sbb
jp
decb
std
add
pop
loopne
es
stos
dec
jb
pop
jg
jno
cmp
sti
lock
add
stc
xor
lcall
negb
cmp
adc
lahf
ret
insb
pop
mov
repnz
sub
pushf
xor
int3
popa
imul
imul
mov
push
ja
into
ror
fcomps
pop
push
adc
add
in
bound
add
mov
jno
je
cmpsb
loope
mov
dec
addr16
mov
xor
mov
lea
mov
sbb
test
cmp
push
test
mov
adc
jbe
out
xor
cmpsb
cltd
lods
pop
sar
rcl
stos
adc
mov
inc
cld
xchg
sub
or
in
stc
test
adc
mov
in
pop
test
dec
sbb
add
push
pop
sti
add
jno
add
and
into
inc
cmpsb
mov
test
dec
les
sbbb
jmp
xchg
adc
sahf
lret
sub
inc
pop
pop
sub
cltd
addb
ss
mov
or
into
scas
and
pop
mov
jno
shrl
xor
cmp
sub
rol
mov
lcall
rorb
shl
inc
inc
fabs
ljmp
xor
push
sub
or
out
seta
jp
inc
add
sbb
pop
pop
sahf
int3
push
movsl
dec
pop
jp
ss
sbb
cmp
push
xor
pop
mov
bound
aas
cmpsl
mov
mull
fwait
sbb
pop
ficomps
scas
aas
rcrb
incl
popa
movsb
fmuls
push
or
xor
and
into
and
mov
repz
repnz
and
push
dec
sbb
cmpsl
cltd
insl
int
lret
arpl
lds
mov
dec
pop
stc
add
in
pop
add
out
sub
mov
mov
shl
dec
adc
or
pusha
aam
fisubl
std
and
rorb
inc
sbb
push
and
lcall
inc
popf
fsubr
in
das
nop
inc
dec
shll
dec
adc
push
loope
dec
and
out
pop
jno
push
mov
jo
stos
and
jbe
add
push
mov
xchg
xor
mov
orl
sar
or
lret
push
push
test
daa
icebp
jnp
pop
aaa
es
mov
repnz
mov
lret
cmp
push
lock
jge
std
ljmp
pop
cmpsl
stc
xchg
pop
push
out
adc
jmp
mov
dec
xchg
inc
cmp
and
or
sub
shrb
in
in
push
push
ret
inc
push
jne
sbb
sbb
jnp
dec
sahf
daa
mov
push
xor
lcall
in
out
cltd
pop
shrb
data16
xchg
adc
inc
inc
lea
or
push
adc
mov
push
insl
or
pmulhuw
sub
mov
insb
or
movl
clc
sbb
lcall
movsb
pop
rolb
lods
push
mov
push
shl
addr16
sahf
or
out
adc
shlb
rclb
bound
out
sarb
push
movsl
push
xor
ja
mov
lret
jl
inc
in
cmp
mov
int3
icebp
jnp
cmpb
inc
and
cmp
aad
inc
out
pop
inc
inc
leave
hlt
jb
mov
mov
sbb
mov
sub
xor
mov
inc
pusha
pushf
inc
and
jp
jge
xchg
xchg
adc
cld
pop
stos
mov
in
inc
fwait
cs
xor
ret
mov
cltd
and
test
imul
cwtl
push
mov
sub
sbb
sub
stos
fs
ret
lea
lret
mov
pop
pop
mov
adc
addr16
nop
add
mov
mov
aas
leave
mov
jbe
lods
jb
push
cmp
lss
push
mov
push
push
xchg
in
cmp
loop
push
je
sub
out
xchg
pop
xor
mov
loopne
dec
pop
insb
cmc
add
outsl
jmp
stos
mov
in
sbb
dec
inc
in
cmc
mov
stc
lea
xchg
or
dec
xor
nop
mov
cltd
nop
out
xchg
lret
loopne
lret
xor
jnp
xor
push
jg
dec
jno
mov
roll
int
add
inc
mov
negl
dec
std
adc
xchg
lcall
aaa
xor
fbstp
pop
sbb
jmp
mov
ss
das
jbe
aas
roll
cmp
adc
addr16
outsb
mov
imulb
push
xchg
and
add
mov
fs
jecxz
push
ret
jns
int
jnp
pop
sar
xchg
inc
std
mov
aam
insl
outsl
or
sub
rolb
push
into
hlt
stc
shl
and
or
pop
dec
push
cmp
xchg
aad
je,pn
mov
inc
test
movsl
shll
xor
cmp
mov
aam
std
xor
xchg
push
jle
test
stos
jbe
cmp
jg
ss
arpl
mov
lock
inc
pop
push
jbe
sub
xchg
push
pusha
or
outsb
std
inc
notb
cmp
mov
xchg
and
fildl
or
mov
mov
xor
push
dec
pop
rcrl
out
rcrb
xor
cmp
adc
subl
mov
mov
popa
jns
mov
xchg
mov
in
pop
fildl
adc
inc
jg
into
fmull
add
push
into
lods
push
in
icebp
xor
sti
mov
push
scas
sbb
mov
mov
inc
sub
and
loope
xlat
inc
and
xlat
xor
dec
lret
or
fistl
push
cli
popf
sub
out
sub
sti
xor
xor
push
xor
lahf
mov
testb
xchg
adc
push
aad
push
xlat
inc
mov
adc
enter
adc
les
push
aas
les
jno
dec
push
fptan
aas
icebp
jo
mov
inc
dec
xor
nop
sbb
nopl
fcoml
aam
dec
add
lret
popf
enter
adc
std
add
mov
sub
pop
ret
divl
sbb
pop
xchg
cs
out
fmul
int
aaa
jns
xchg
imul
insl
stos
lahf
rcl
test
fwait
cmp
ret
inc
adc
pop
fidivrl
sbb
sarb
mov
aaa
ror
addr16
nop
or
out
cmp
mov
sub
ffreep
sub
loopne
cmp
leave
mov
and
adc
jne
mov
cli
adc
inc
add
test
xor
sbb
mov
jns
std
mov
in
lahf
repz
test
push
es
lods
jge
shlb
add
outsl
test
cmp
pop
ljmp
shlb
push
jne
push
xchg
stos
out
push
movsl
add
pop
in
mov
jp
mov
mov
mov
jmp
arpl
mov
push
jle
outsb
pop
out
inc
mov
lea
std
mov
sub
dec
enter
pop
in
fucomi
dec
js
adc
inc
iret
sub
pop
rcrb
inc
addr16
fucom
icebp
push
add
xchg
jmp
lock
pop
xchg
jo
mov
jo
mov
xchg
bnd
mov
mov
fisttpll
mov
fisubl
std
stos
mov
scas
xchg
std
lahf
lcall
inc
mov
mov
xchg
sub
jmp
xlat
cmp
sub
cmc
sub
ja
cmp
inc
stos
fwait
movq
test
out
mov
jne
les
dec
sahf
and
xor
jo
leave
fdivs
ret
sar
inc
shlb
iret
xor
cmp
pop
popf
dec
popf
sar
inc
data16
es
and
cltd
ja
jno
fmulp
aaa
xchg
and
lret
pop
mov
add
pop
mov
mov
ret
sub
icebp
or
or
clc
dec
fiaddl
out
cmp
inc
enter
sub
int
mov
and
stc
or
xchg
popf
xor
add
jg
ljmp
aad
mov
int3
test
or
push
add
push
pop
rcrb
repnz
in
push
aad
jmp
scas
xchg
inc
sub
or
cmp
jmp
mov
fisttpll
mov
mov
pusha
adc
aaa
pop
or
mov
dec
popf
pop
and
int
in
imul
fldenv
sub
push
lret
add
and
outsb
and
loop
cwtl
inc
loope
push
fsubl
lea
xchg
push
adc
jbe
shrl
scas
push
lock
add
pushl
mov
das
or
lock
push
pop
repz
push
in
aam
pop
repz
movsb
xchg
mov
in
loop
dec
xchg
lret
and
ret
inc
inc
es
cmp
mov
push
pop
jge
lret
jnp
into
and
mov
aam
cld
ficompl
popf
and
fidivrs
jne
ret
cmp
mov
dec
inc
jno
ja
cwtl
repz
insl
jl
lret
xor
test
add
rol
push
sbb
xor
pushf
adc
mov
and
lods
fadd
dec
mov
jne
xor
stc
aas
hlt
cmp
nop
mov
or
iret
fisttpl
push
pop
das
add
xor
jmp
adc
mov
adc
and
push
imul
stc
fstpl
aad
mov
fs
xchg
loop
push
mov
cmpsb
jmp
fsubs
aad
lret
mov
inc
xor
xor
jne
mov
cltd
push
jno
out
out
push
fimull
jno
icebp
mov
cmpps
pop
xlat
jg
cmpsl
jb
clc
dec
and
icebp
cltd
imul
and
leave
xchg
cmp
mov
in
jae
inc
mov
xor
lcall
sti
xlat
cwtl
pushf
xchg
inc
xchg
adc
mov
fisttps
jae
orb
test
xchg
adc
cmpb
sti
or
or
nop
rcrl
incl
out
aas
mov
sets
add
lahf
cs
mov
push
mov
sbb
fadds
into
andl
sbb
mov
push
jge
mov
add
dec
scas
das
and
shrl
pusha
mov
jne
xlat
out
ja
jnp
add
lods
aaa
xchg
xchg
mov
mov
sbb
gs
jbe
ljmp
cmpsb
lock
xor
and
mov
rorl
shr
pop
stos
jg
mov
mov
lods
mov
inc
sub
idivl
test
je
pop
sbb
jno
sbb
inc
adcb
ja
xchg
enter
pop
adc
out
mov
orl
incb
jle
push
sbb
pop
lods
fisttpll
cmp
push
rcll
xor
push
shll
and
pop
or
jle
inc
jg
jno
mov
jge
fsts
movsl
paddusb
dec
add
addr16
fdivs
push
push
xchg
fimull
div
subl
daa
pop
jp
or
and
orl
jb
jecxz
insl
push
adcl
sbb
push
mov
dec
dec
test
push
jne
jp
popa
adc
or
stos
push
inc
dec
mov
push
add
pop
cmpsb
and
jne
gs
inc
lods
adc
xor
scas
push
mov
jle
movsb
add
std
scas
test
fidivs
xor
xor
push
pushf
push
subl
jne
fldl
jne
sti
xlat
xor
cmp
sarb
push
pop
sub
pop
cmp
aad
inc
mov
mov
xchg
cmp
sahf
inc
jb
adc
or
jns
lods
dec
in
pop
xor
or
xlat
and
cmpsl
pop
add
test
adcl
lds
stos
cmc
xor
jmp
add
imul
cmp
sub
cmp
cltd
cmp
push
aas
sub
sbb
outsl
insl
push
push
loope
push
sbb
mov
mov
ja
cmpsb
xchg
jnp
test
loope
in
fidivrl
sbb
lcall
and
ss
xor
call
lods
ja
sarl
mov
push
jmp
ss
jno
xchg
xchg
fdivl
mov
imul
in
dec
dec
stos
xor
push
lcall
cmp
scas
cmpl
nop
cmp
push
in
or
pop
and
pop
daa
lds
push
or
dec
das
ret
mov
arpl
mov
mov
push
push
push
sbb
jp
ljmp
add
out
loop
pop
xchg
and
mov
or
int3
jb
ficompl
cmp
mov
ror
shrl
add
jb
ret
les
lds
mov
cltd
jbe
mov
ret
mov
xlat
mov
cmpsl
adc
mov
jle
rcr
sti
jmp
inc
cltd
aad
cmc
dec
daa
push
mov
xchg
clc
movsl
sub
cmp
js
mov
imul
xor
daa
lret
push
xor
rcrl
fwait
in
fbstp
pushf
mov
movsl
sbb
adc
cmp
push
mov
insb
imul
cld
cmp
popf
fs
out
cmp
fwait
mov
mov
pop
and
or
test
or
mov
mov
outsb
scas
das
repnz
aam
lds
insb
jmp
xor
cli
adc
fisubs
lods
xlat
jp
dec
push
aam
cmp
data16
xor
xchg
pop
mov
sub
sub
pop
iret
jecxz
aas
cmp
jl
jl
jecxz
mov
or
cmpsl
mov
sbb
or
mov
imul
add
ficoms
push
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
icebp
mov
cmpl
and
adc
sti
enter
sub
xchg
jle
test
pop
ficoml
and
add
mov
mov
loop
sti
inc
sar
rcr
push
fildll
ret
lods
test
insl
arpl
fcoms
mov
loop
outsb
lcall
out
fimull
adc
insb
nop
je
movsb
push
fcomp
mov
xchg
jge
icebp
js
mov
pushf
sub
shlb
mov
aas
cmp
in
jle
rorl
inc
out
mov
lret
inc
adc
cli
cmp
mov
jb
xor
cs
mov
subb
lcall
or
dec
jno
fwait
sar
das
xchg
xchg
lds
pop
aas
mov
loopne
xchg
loopne
xor
dec
outsb
mov
in
bound
xchg
jge
cmp
js
aas
inc
sub
fst
pop
fstps
jae
rclb
mov
push
pop
je
in
ss
sbb
icebp
iret
lcall
push
xchg
popa
pop
sub
lcall
aam
out
lcall
cmp
out
ret
push
aas
mov
es
dec
test
dec
iret
mov
dec
inc
in
pop
out
xchg
mov
lret
or
in
or
cli
mov
ja
popl
sub
mov
mov
lods
mov
jo
std
filds
pop
mov
pop
jnp
xor
lds
xchg
mov
pop
cltd
sbb
in
jae,pt
pop
push
or
mov
or
lods
cld
out
pop
int3
rcl
loop
xor
in
incl
dec
push
loopne
int
test
and
add
cmp
cld
mov
imull
pop
imul
icebp
std
aas
insl
in
leave
repz
dec
int
or
movsb
gs
popf
mov
lcall
inc
fdivs
ficoms
pop
push
pop
test
shr
xchg
lods
cmp
nop
xchg
insb
jne
lods
dec
xchg
mov
inc
arpl
repnz
insl
subl
xchg
in
js
lret
jo
divb
fdivrs
lds
mov
movl
test
lods
out
xchg
xor
jno
push
ror
test
sbbb
cmp
sti
loope
jo
iret
xor
push
icebp
push
jle
idivl
ret
aad
xchg
fsub
jo
sub
lret
test
imul
xchg
ss
sarl
xor
add
inc
push
mov
jecxz
stos
in
mov
pusha
mov
mov
xor
cwtl
call
jno
ret
dec
mov
adc
xor
push
mov
mov
sbb
fiadds
movsb
pop
mov
lods
cmp
jns
cs
sub
cmpsl
arpl
cmp
stos
xchg
push
lret
es
fidivrs
xchg
js
inc
jmp
xor
iret
test
lods
cltd
sub
data16
mov
flds
inc
jle
cmpsb
sub
push
imul
into
sbb
call
hlt
add
sbb
xor
sbb
out
jmp
dec
popf
adc
pop
in
jmp
sub
stc
push
insb
call
adc
fcomp
and
cmpsb
in
int3
jg
xchg
arpl
mov
lods
loop
fstpt
mov
data16
mov
lcall
testb
or
pop
jno
gs
push
jae
sbb
mov
cmp
movl
sbb
mov
loopne
dec
es
jmp
mov
aas
push
mov
mov
out
inc
or
sbb
mov
jnp
xor
jno
arpl
mov
pop
rcr
cs
pop
movsb
mov
adc
dec
mov
aam
fcoms
sub
push
pop
xchg
bound
jge
pop
push
mov
and
cmpsb
fs
bound
movsb
adc
test
fdivl
inc
dec
dec
ret
and
add
sahf
push
cmp
xchg
xchg
sub
arpl
stc
sbb
mov
mov
sbb
pop
xchg
nop
xor
gs
jmp
inc
test
sbb
jne
and
jmp
or
fs
cwtl
xor
push
push
sub
xchg
mov
addr16
out
jmp
mov
rcrl
cmc
sbb
push
sub
cmp
and
dec
shrl
jo
testb
dec
inc
xor
ret
rcrb
sbb
es
mov
aam
in
imul
cmpl
rcrb
test
adc
loope
push
fldcw
stc
sbb
push
or
jp
xor
mov
stos
aad
mov
inc
inc
mov
loope
and
jp
and
push
push
je
fidivl
ljmp
and
scas
xchg
xor
decb
data16
mov
xchg
cmp
dec
sbb
mov
lahf
sub
mov
scas
outsl
mov
clc
stos
mov
ret
shr
mov
mov
lret
jg
and
out
test
cmpl
inc
lahf
rol
out
push
in
mov
cs
repz
pushf
jmp
sub
lret
pushf
push
pusha
xchg
fst
popf
sbb
xchg
xchg
pop
pop
pop
cmp
std
sti
cmp
push
arpl
mov
dec
dec
inc
test
outsl
les
xor
jge
xorl
xchg
je
pop
divb
push
aam
xchg
sub
adc
adc
adc
sub
pop
imul
jecxz
dec
cltd
jae
sahf
pop
fwait
test
sbb
lds
insb
and
int3
enter
jbe
lcall
stos
jnp
fsubrs
push
cmp
xlat
inc
push
test
fidivrs
hlt
push
mov
div
inc
imul
pop
std
sbb
in
cli
xor
and
push
sub
mov
cmpsb
push
dec
rorl
pop
std
xor
fidivs
push
mov
mov
inc
in
cmpsb
mov
popa
xor
adc
rorb
cwtl
inc
das
push
jb
shll
sub
push
repnz
adcl
xchg
in
mov
and
xor
out
fdivrp
mov
dec
jge
lods
icebp
inc
loope
lock
daa
test
push
int
mov
push
icebp
stos
stos
cmp
test
insl
xor
lea
xlat
fldcw
lock
outsb
scas
arpl
out
mov
cltd
push
and
sbb
mov
out
dec
push
scas
ljmp
std
or
push
add
inc
test
push
lock
add
and
addr16
dec
pop
add
inc
or
insb
subb
stc
mov
sbb
mov
or
inc
or
aad
xlat
test
xor
call
lds
push
or
jmp
scas
sbb
mov
rcrl
sbb
dec
int
sti
add
mov
loopne
movsb
rorb
mov
mov
into
pop
or
jl
out
add
leave
subb
shr
into
mov
out
cmp
aas
xor
adc
jle
test
hlt
repnz
adc
push
addr16
pop
jl
fistl
inc
inc
inc
xchg
cmp
cmp
fwait
imul
cmpsb
mov
dec
cwtl
addr16
lods
mov
cld
orb
addr16
xchg
ret
inc
mov
mov
pop
pop
add
rolb
je
mov
mov
das
adc
or
insb
enter
and
xchg
or
mov
incl
scas
aad
movsb
dec
and
add
mov
dec
repz
pop
add
and
pop
push
dec
sbb
aad
sbb
mov
repnz
xor
adc
sbb
xchg
jb
xor
cmp
sub
xor
pop
mov
ja
pand
jg
pop
jae
aaa
stc
adc
push
sbb
and
jge
stos
ljmp
stos
jbe
dec
mov
sahf
adc
dec
andl
or
ffree
cwtl
push
and
clc
mov
jb
aad
adc
pop
fcmovb
test
test
in
mov
cmp
mov
mov
sub
arpl
push
in
mov
js
or
les
testl
inc
cmp
jbe
je
jo
arpl
out
fdivrs
ja
sbb
pop
jo
jmp
nop
sbb
pop
add
hlt
sub
les
and
xlat
lret
fstpl
repnz
dec
mov
mov
inc
repnz
loope
xchg
insl
sbb
outsl
les
jle
daa
test
addr16
js
adc
cmpsl
mov
stos
cmp
push
push
nop
cmp
mov
cmpsb
int
scas
nop
scas
sub
dec
ja
shrb
xchg
and
cmp
outsl
icebp
mov
fisttpll
pop
adc
sub
mov
xchg
xor
mov
out
repz
jl
jns
out
fs
repz
push
int
inc
lret
adc
or
insb
add
dec
daa
xacquire
popl
adc
sarl
push
test
mov
inc
push
sbbl
out
int3
fnstsw
pop
jecxz
sub
dec
std
cmc
dec
dec
shrl
pop
sub
int3
addr16
sbb
add
jmp
out
jmp
jle
xchg
js
in
pop
mov
cld
push
and
scas
pop
mov
in
les
frstor
fwait
mov
mov
mov
adc
out
push
negb
test
jge
mov
add
popa
iret
jmp
daa
ds
subb
ds
mov
lods
in
mov
and
cmpsl
jp
test
scas
and
and
cmp
jne
mov
mov
sbb
addl
shl
imul
das
rclb
pop
les
jp
addb
mov
mov
inc
jg
into
outsl
in
jl
jno
add
cmp
aam
mov
mov
mov
icebp
repz
cmc
jae
lods
incb
movsb
mov
xchg
pop
inc
lahf
sub
sbb
test
mov
sub
sub
sbb
xchg
das
lcall
sbb
lret
lods
mov
cmp
sub
sbb
and
clc
adc
clc
imul
push
pop
xchg
or
negl
xchg
popa
sub
pushf
mov
test
movsb
add
fbld
imul
adc
into
lods
stos
aam
fnstcw
movsb
cmpsl
add
inc
stos
jl
repnz
pop
cwtl
push
add
scas
in
fisttpll
cld
rclb
dec
mov
out
in
int
es
lods
push
fadds
xchg
les
rorb
dec
xor
pop
and
push
pusha
mov
orb
out
sahf
xor
and
xchg
stos
shrb
xchg
test
jl
xchg
and
inc
sub
mov
xchg
pop
jle
xchg
sti
fucomp
repz
and
dec
mov
aad
and
mov
xchg
cld
push
dec
and
mov
dec
es
dec
stos
mov
test
cld
cmp
xchg
insl
roll
fnstenv
js
iret
rolb
or
ja
sbb
arpl
cltd
vmwrite
mov
sbbl
loop
hlt
test
xor
aam
jecxz
inc
stos
insb
dec
rorl
loop
sub
add
cmp
xor
cmp
jmp
add
xchg
sub
and
std
add
and
ret
jo
xor
xchg
push
dec
mov
adc
lods
stos
sbb
xchg
jnp
push
fwait
cmc
adc
and
loopne
add
fisubs
iret
loop
imull
jge
inc
loopne
and
btr
jno
add
je
inc
mov
dec
idiv
rorb
int3
lcall
sahf
and
filds
out
aaa
rcrb
rorb
mov
into
addr16
sbb
sahf
mov
mov
rolb
mov
lret
mov
jl
mov
pop
jne
mov
iret
or
repnz
pop
push
mov
sub
sub
push
add
ror
fldenv
mov
enterw
pop
lcall
out
pop
jne
out
dec
in
xorb
outsb
fwait
imul
jno
push
movsl
pop
sub
in
in
add
sub
mov
int3
les
loope
out
cmp
or
pop
nop
sbb
mov
adc
sti
test
pusha
adc
fcomi
les
mov
dec
or
lea
dec
mov
add
movsb
sub
in
nop
xor
xor
xor
pop
lods
stos
mov
addr16
leave
stos
xchg
scas
out
add
lcall
xchg
inc
js
test
lods
sbb
fnstsw
dec
gs
pop
and
push
cltd
jle
lods
pop
aas
inc
and
lea
sub
ret
inc
icebp
stc
mov
jg
jge
movsb
mov
mul
and
mov
test
lcall
ds
adc
mov
lods
call
jb
push
jmp
xchg
je
inc
cmp
aad
pop
lahf
cli
sahf
aas
jbe
and
sub
js
aaa
xchg
test
xchg
or
and
xlat
jp
jns
in
fnstenv
fwait
jbe
filds
mov
sbb
and
cmp
das
jge
pop
and
cmp
xlat
push
sub
or
ret
loop
in
mov
test
jnp
inc
je
cs
mov
jp
add
dec
cmp
jge
sub
jb
xlat
cmp
xchg
aas
mov
push
idiv
xor
ret
lds
push
scas
mov
js
les
dec
push
cmp
xchg
shr
jae
push
xor
out
les
adc
repnz
pop
ljmp
or
inc
and
js
fcompl
loop
pop
rcrb
or
aam
leave
push
repz
and
adc
loope
jl
jbe
out
jge
pop
adc
addr16
enter
lret
jnp
adc
inc
mov
insl
push
mov
sbb
test
std
addb
and
mov
movsl
stos
ficoml
cld
cmp
repz
or
in
or
cltd
mov
fsubp
subl
xor
mov
inc
add
xchg
iret
daa
pop
jne
arpl
xchg
loop
pop
and
test
push
add
out
jo
fwait
mov
sub
in
push
and
addr16
loope
sub
xchg
push
inc
pop
hlt
mov
cmc
push
out
ret
push
cmp
xor
scas
in
addl
dec
faddp
mov
data16
popa
pop
pop
xchg
lods
cli
dec
mov
aad
adc
mov
mov
testl
dec
jecxz
mov
scas
aad
imul
jnp
add
loopne
and
xchg
fisubl
jecxz
pop
and
adc
jl
add
out
data16
rol
pop
mov
mov
iret
inc
movsb
aas
mov
pop
mov
sub
bound
jne
shl
mov
subb
orl
xchg
sub
sub
mov
sbb
rcll
pop
mov
jecxz
push
lods
jmp
mov
dec
jne
mov
and
inc
xorl
xchg
push
cld
mov
inc
or
lods
pop
popf
out
push
fists
add
je
push
dec
and
sub
mov
repnz
dec
push
js
es
cmpsb
sbb
popf
xor
pop
mov
ljmp
out
push
or
push
or
enter
or
sub
ret
lds
shr
sbb
add
dec
mov
adc
test
adc
aam
fimuls
add
add
je
mov
cmpsb
pop
out
xchg
xchg
cmp
frstor
shll
jmp
ss
cmpsl
or
sahf
pop
dec
nop
inc
gs
pop
pop
xor
jno
jle
or
popa
nop
add
pop
in
cmp
leave
test
or
push
push
lds
cmp
sub
insb
pop
clc
in
push
mov
xchg
cmp
push
jge
in
cmp
nop
sarl
mov
stc
push
pop
gs
pop
push
mov
push
rorb
mov
or
in
or
lods
loope
je
pop
jno
ffree
sbb
addr16
pop
pusha
cs
mov
cwtl
cmp
jl
cmp
mov
pop
adc
jmp
dec
jecxz
std
sub
std
fwait
sub
orl
dec
or
mov
mov
aam
inc
in
xor
shll
cmp
or
iret
test
xor
jae
movsl
lret
aaa
lock
push
cmp
ljmp
cmc
stos
call
add
jmp
inc
sbb
add
fistps
or
pusha
scas
xchg
jg
or
inc
jae
adc
mov
popa
sub
cmc
push
lods
repnz
push
loopne
inc
pushf
ret
push
adc
cmp
jb
aam
shll
xchg
push
or
mov
out
inc
enter
jne
inc
xchg
inc
and
adc
add
lods
ja
mov
add
rol
mov
out
es
add
outsb
xor
int3
xchg
ljmp
cltd
ds
add
hlt
test
mov
sbb
std
inc
lock
in
jmp
cmpsl
test
sbb
cltd
mov
pop
call
xchg
inc
add
and
lahf
inc
adc
or
roll
or
stc
mov
inc
repz
xor
mov
cmp
iret
push
hlt
dec
adc
jle
pop
cmpsb
adc
adc
aad
push
xor
sbbl
jb
iret
mov
filds
std
push
cmp
sub
mov
jo
jg
sub
adc
into
xchg
cmc
aam
pushf
addr16
mov
cmp
lret
jns
shl
xor
imul
incl
dec
rolb
mov
aas
jno
mov
mov
cmp
std
xchg
jae
inc
dec
cmpsl
movsb
stos
dec
aas
mov
push
aaa
lret
dec
adc
or
cmp
jae
cmpsl
lods
cltd
adc
jno
pushl
aam
js
cmp
sbbb
push
rorb
mov
daa
insl
adc
pop
adc
fsts
sahf
cmpsb
push
dec
fdivrs
push
repnz
or
inc
stc
fstpt
and
outsb
cltd
outsb
popf
or
test
or
xchg
outsb
insb
std
imul
movsb
ds
push
ja
loop
add
clc
cmp
sub
je
jp
dec
movsl
jns
es
ja
pushf
fimull
sub
cmpsb
notl
mov
add
adc
arpl
aaa
leave
mov
rclb
cmp
pop
inc
and
jne
adc
in
shr
addl
mov
sete
mov
das
xor
or
jp
cltd
sbbl
ret
jb
or
add
jno
dec
dec
das
ret
pop
repnz
movsl
push
dec
and
cmp
jg
pop
sarb
call
lods
or
jbe
jmp
loop
gs
xor
test
fcmovb
jb
xchg
shlb
pushf
repz
fdivr
sbb
ss
and
mov
mov
jecxz
fwait
pop
add
sub
rorl
scas
movsw
movsl
dec
xor
jo
sub
sub
enter
sub
xchg
pop
testb
mov
jne
pop
inc
cmpsl
cmp
jp
jns
shl
mov
aad
push
and
je
push
mov
adc
mov
mov
clc
push
mov
jns
mov
push
sub
mov
add
mov
mov
pop
jo
jl
add
in
leave
sbb
sub
pop
outsb
ja
jecxz
mov
mov
daa
in
lcall
icebp
shl
iret
rcll
cltd
push
push
xor
and
jg
das
xchg
int
es
dec
lds
addr16
mov
daa
cmc
test
sbb
cmpsb
test
xor
icebp
mov
cmpsb
ja
sub
insb
pop
inc
pop
push
push
aas
js
and
lahf
in
popa
mov
xchg
push
xor
aaa
fs
loope
mov
adcl
xchg
lock
adc
int3
dec
aas
push
popa
pop
xchg
loop
jl
pop
mov
orl
cmp
inc
test
mov
adc
add
add
inc
negl
fcmovb
bound
test
pushf
cmp
arpl
outsl
lea
adc
xor
je
xchg
mov
and
bound
add
pop
mov
dec
dec
idivb
dec
and
fcmovbe
out
sub
and
cmp
sti
fisubl
cmc
insl
push
shrb
xor
push
pop
repnz
in
cs
pushf
mov
and
inc
iret
push
push
adc
and
aaa
aam
adc
jbe
mov
inc
pop
jecxz
add
movsl
sub
push
jmp
xor
xchg
mov
std
mov
mov
sub
fdivrp
adc
jne
or
cmc
jg
inc
out
icebp
jmp
or
insb
dec
push
mull
jg
fldenv
jb
add
fs
out
sbb
sti
in
or
mov
test
or
push
sub
jle
mov
push
fidivl
xor
enter
mov
xlat
stc
jns
sub
pop
ja
pop
fsubl
xor
xchg
inc
mov
shrb
push
xchg
cmpsb
call
dec
nop
mov
int3
dec
mov
dec
dec
popf
cmp
les
clc
adc
sbb
jle,pt
xchg
mov
or
mov
mov
addr16
pop
aad
sbb
push
or
mov
in
xchg
fiaddl
ss
arpl
pop
and
sbb
mov
jnp
lock
ja
jle
in
pushf
sbb
cwtl
pusha
bound
inc
sti
sti
in
dec
mov
mov
fdivl
mov
das
add
pop
lods
je
dec
sbb
pushf
mov
push
js
insb
scas
imulb
loop
lret
in
les
mov
dec
and
pop
in
fistps
lret
aad
adc
sarb
mov
xchg
addr16
sbb
inc
and
mov
sar
mov
dec
dec
stos
jo
sbb
in
lcall
push
dec
fidivrs
enter
seta
sarb
or
nop
fdivrl
das
ja
cmp
addr16
mov
ljmp
sub
ja
es
mov
and
pop
repnz
rcrb
repz
fbld
fwait
pop
xor
cwtl
mov
lods
sub
setae
nop
or
insl
mov
xchg
inc
ret
inc
in
pop
das
cmp
mov
in
rorl
popf
lods
fs
out
dec
cmpsb
stos
inc
jo
sbbl
in
push
xchg
lret
movlhps
out
iret
cwtl
scas
dec
mov
jne
ja
sbb
ret
sub
movl
jae
test
jmp
jb
mov
ds
loope
adc
dec
jmp
bound
shlb
mov
addb
mov
mov
pop
lahf
jns
mov
test
sub
or
aaa
cmc
imul
popa
iret
push
mov
mov
test
insl
cmp
xchg
mov
mov
lock
out
cmc
pushf
fstpl
xor
mov
push
pop
inc
push
cmp
adc
sub
xlat
js
mov
inc
push
jo
mov
js
roll
sar
inc
jo
xchg
jns
dec
outsl
mov
lcall
imul
gs
ret
pop
cmp
jg
cmpsl
push
lret
int3
xchg
and
or
jle
sub
mov
mov
cltd
or
adc
or
and
sub
daa
or
icebp
sbb
sbb
add
lret
data16
jp
mov
popf
or
adc
jmp
sti
adc
mov
loope
push
mov
mov
scas
ficompl
and
jno
jmp
cmp
mov
pop
in
arpl
das
mov
addr16
mov
cli
xchg
xor
cmp
movsl
ja
xor
dec
les
bt
inc
push
aad
push
int3
cltd
rcl
ds
pusha
jmp
add
xchg
jno
test
fwait
sub
pop
mov
mov
movsl
and
fdivrl
dec
mov
mov
mov
sub
xchg
sub
icebp
cmpb
mov
arpl
call
mov
pop
icebp
test
sub
mov
adc
addb
std
leave
cli
int
jae
sub
sbb
jns
lcall
jno
outsb
mov
inc
sub
sub
aam
push
jo
dec
or
cmp
sarb
dec
fdivs
call
nop
daa
push
lret
lods
lods
push
push
inc
cmpsb
divl
sahf
inc
orb
dec
nop
inc
or
xchg
cmp
js
cli
loop
xor
imulb
sub
inc
aas
xchg
mov
mov
cltd
pop
clc
add
xlat
dec
mov
fnstcw
sub
jge
push
loop
pop
sub
xchg
adc
xor
xchg
xor
xor
lds
mov
cmp
inc
movsb
xchg
mov
jecxz
pop
sbb
sarl
jge,pn
mov
mov
pop
repz
loopne
push
jno
test
cwtl
push
sbb
push
in
stos
add
insb
adc
shrb
or
div
out
cltd
loopne
sub
iret
bound
loop
mov
jne
es
or
insb
xor
lods
dec
fldt
shlb
or
mov
aaa
push
stos
aam
call
adc
adc
popa
cmp
or
cmpsl
jo
xlat
mov
xchg
xor
cmp
popa
repz
xchg
or
cli
xchg
in
into
mov
dec
jae
push
imul
push
pop
add
mov
fisttpll
jo
push
cmp
pop
xor
xchg
sarl
sub
fildll
adcl
pop
test
fimuls
aad
jmp
mov
mov
cmp
add
sub
mov
insl
adc
xor
stos
jo
gs
lock
sti
das
enter
cli
movsl
iret
and
push
cli
inc
pop
add
cltd
ss
and
sarb
push
and
push
add
shll
movsb
push
out
jmp
int3
pop
pop
push
fcmovbe
js
test
sub
lcall
pop
and
enter
adc
in
and
stos
sbb
cmpsl
popa
das
imul
pop
rol
stos
pop
aaa
or
shr
fcmovnb
pop
mov
add
fmuls
loop
aas
mov
lock
leave
mov
inc
jp
mov
fildll
je
jb
int
ds
adc
icebp
mov
roll
add
ret
aad
imul
sub
out
pop
mov
pop
push
mulb
xchg
xor
adc
add
enter
pop
pop
jmp
loope
arpl
es
mulb
cmp
jp
imul
sub
xlat
cmpsl
push
out
test
hlt
in
or
sub
mov
push
test
leave
enter
inc
andl
sti
lahf
xchg
push
ficoms
or
in
sbb
mov
les
pop
dec
mov
ljmp
mov
loope
es
add
imul
inc
dec
subb
loop
fidivrs
negl
pop
ret
cwtl
popa
rcrl
inc
faddl
push
dec
leave
fsubrs
xlat
sub
loope
scas
inc
mov
xchg
adc
xchg
adc
inc
loope
pop
adc
lahf
sbb
mov
insb
pop
jnp
pop
notb
idiv
out
mulb
sbb
jae
xor
adc
data16
in
jne
in
push
or
lock
xor
and
sbb
je
in
mov
gs
fwait
push
mov
mov
subl
xchg
or
outsl
addl
inc
cwtl
dec
out
add
shll
ret
lcall
push
out
lret
pop
lea
imul
adc
aas
jo
mov
lcall
aaa
mov
jle
jnp
pop
cld
sub
leave
stc
bound
pop
xchg
inc
in
add
sbb
push
in
sub
pop
pop
xchg
pop
mov
leave
fdivrs
arpl
das
rcll
les
adc
insl
out
out
in
jnp
fdivrs
xchg
pop
cli
xor
push
sub
lcall
mov
mov
scas
mov
jne
stos
pop
hlt
mov
aad
cmp
imul
and
cmp
int
xchg
mov
lods
adc
test
das
enter
add
push
dec
int
sbb
adc
push
js
mov
mov
jmp
movsb
xor
and
mov
int
subl
inc
loopne
cli
mov
xchg
jle
lret
xchg
sub
jle
dec
fwait
sbb
xchg
cmp
or
cmp
jecxz
xor
int
xor
fstp
add
pushf
jo
and
jmp
jnp
cld
cmc
ret
add
movsb
cmp
fists
stc
pop
mov
sub
mov
push
pop
add
cmp
fsubl
push
clc
and
mov
cs
mov
cld
xor
daa
sub
std
mov
push
addb
out
gs
scas
outsl
sbb
subb
add
mov
fisubs
mov
notl
sub
mov
push
or
add
adc
psubq
pop
xor
movsl
inc
dec
in
ret
loope
and
adc
xor
add
pop
mov
cmpsb
sbb
fmuls
enter
std
and
push
scas
orl
jle
loop
mov
xor
mov
sti
gs
push
push
push
scas
je
sarl
wrmsr
pop
adc
mov
lahf
and
or
dec
nop
test
pop
xorb
sbb
dec
test
daa
gs
mov
push
es
xor
push
sarb
shrl
shl
xchg
push
aam
loopne
push
iret
xor
in
shrb
mov
mov
ljmp
mov
inc
jmp
hlt
aam
out
push
xchg
sbb
pop
aam
lret
mov
or
sub
mov
pop
lcall
lahf
int
and
pop
cli
pop
ja
xchg
and
xchg
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
xchg
insl
mov
jl
pop
jl
push
call
push
sarl
jb
lods
cmpsb
adc
std
lods
push
xorb
out
and
pop
pop
cmp
aam
push
jl
outsw
sbb
mov
ja
adc
pusha
mov
mov
mov
xchg
mov
aam
sbb
push
mov
js
adc
pop
push
fnstsw
jno
push
cs
pop
movsb
add
xchg
sbb
inc
jp
push
push
mov
and
in
xchg
imul
in
ljmp
xchg
sarl
lret
mov
pop
fdivs
out
cmp
mov
mov
push
jle
or
ss
out
dec
je
jmp
cmp
test
xchg
test
jp
out
xor
push
push
pop
sub
mov
pop
mov
mov
adc
or
lret
es
stos
push
adc
push
push
sub
shrl
dec
cmp
dec
movsb
loopne
movsb
xlat
mov
lea
xchg
xchg
sarb
fstps
or
outsl
push
push
xchg
fcom
decb
inc
hlt
out
loope
iret
out
das
jno
loop
adc
mov
pop
jl
dec
adc
cmc
loopne
or
inc
inc
insl
push
inc
adc
aad
lret
aas
js
or
mov
fisubl
xor
sub
outsb
pop
or
adc
dec
add
and
and
test
mov
fwait
pop
add
test
pop
imul
xchg
into
roll
xchg
xor
lea
jbe
push
hlt
fidivrl
push
leave
rclb
popa
cmp
xor
mov
iret
add
mov
xchg
out
pop
das
out
and
dec
push
mov
pop
iret
popa
lret
out
push
lret
mov
mov
lcall
testl
div
lret
cli
xchg
push
mov
bound
je
mov
mov
les
repnz
std
in
sarl
xchg
inc
cmp
out
sbbb
mov
inc
jne
test
call
subl
call
mov
lds
or
inc
cmp
out
pop
rorl
or
mov
daa
sub
insl
hlt
inc
stos
mov
lods
roll
scas
shll
jp
fwait
xchg
pushf
mov
push
xor
fwait
dec
rcrl
je
pop
mov
dec
push
pop
fldl
pop
inc
add
shlb
sbb
test
lea
loop
cmp
cmc
aam
dec
add
imul
xchg
and
mov
rorb
cmpl
xor
push
movsb
dec
jnp
sahf
adc
mov
add
ret
arpl
adc
xchg
mov
movsb
pop
js
repz
mov
xchg
jnp
call
mov
negb
repnz
dec
mov
inc
aad
pop
jnp
pop
or
mov
jl
inc
jae
sbb
gs
sahf
push
cmp
es
insl
inc
sub
leave
mov
xlat
sub
jmp
mov
das
xchg
jmp
fs
pop
jle
popf
mov
dec
and
outsl
add
pop
push
pop
icebp
push
add
push
pop
xlat
mov
lret
fs
add
loop
jns
mov
or
imul
mov
mov
xor
insl
mov
iret
mulb
inc
jge
add
pop
insl
std
in
add
faddl
inc
bound
xchg
jp
add
lcall
mov
push
cltd
push
fistpll
mov
shrl
cltd
std
mov
shll
jg
or
into
mov
clc
movsb
jb
and
xor
mov
mov
pop
cli
push
push
rorb
cmp
inc
push
dec
sub
xchg
ror
cmp
hlt
jmp
inc
and
jne
test
pop
push
add
aad
lds
es
es
push
sub
pop
fwait
sbb
mov
dec
fdivl
xor
pusha
mov
vmovupd
pop
push
inc
jnp
jnp
push
or
fsubrp
sub
or
push
cmp
std
inc
cmpsb
pop
adc
jbe
cmp
lret
loop
roll
xchg
adc
leave
and
xor
int3
cmp
das
inc
dec
jae
mov
cmp
sub
xor
les
lret
mov
xchg
xchg
xchg
xorl
add
insb
sub
lcall
jo
sub
cmpsb
fisttps
xchg
pushl
xor
aas
out
adc
loopne
fldenv
mov
and
fwait
xor
mov
stc
fdivp
faddl
scas
lret
stos
imul
jecxz
mov
xor
ss
xlat
adc
inc
cmp
mov
mov
xchg
xlat
cmpsl
in
stc
data16
loope
add
push
and
xchg
movsl
sub
in
mov
or
jg
sti
aas
les
inc
and
pop
push
inc
add
mov
popa
push
sub
mov
push
mov
and
cmovae
jp
out
and
mov
and
cmpsb
inc
dec
cli
adc
xchg
mov
fwait
mov
js
hlt
jp
fwait
insb
popf
dec
or
mov
pop
js
jo
sub
add
xchg
or
incl
lcall
stc
and
push
mov
nop
xchg
sub
pop
out
adc
mov
cwtl
jbe
or
dec
push
cmpsl
loope
dec
icebp
pop
and
stos
xor
outsb
pop
and
jb
add
push
inc
in
push
xchg
divb
lods
cmpb
mov
sahf
loop
inc
lock
in
dec
sub
xor
add
negl
aas
jno
cmp
pop
mov
cld
sbb
mov
lret
push
pop
fdivrl
and
fnstcw
jg
jno
lret
lds
mov
clc
fsubs
xor
mov
xchg
mov
daa
and
mov
cltd
fs
dec
inc
dec
pop
cmpsl
xor
adc
cmp
arpl
adc
div
jge
shll
inc
adc
pop
mov
add
xor
push
push
mov
dec
xor
inc
out
cld
loopne
mov
mov
test
add
repz
sub
imul
mov
mov
adc
lock
add
and
iret
and
ljmp
xor
xlat
cwtl
sbb
outsb
imul
dec
mov
pop
sbb
dec
lret
push
pop
mov
push
xor
sbb
or
orl
pop
cmp
jecxz
pop
std
test
mov
loope
dec
enter
ja
pop
xorb
pop
int3
xchg
ret
adc
mov
ja
out
jl
cmpl
jnp
test
mov
mov
jae
enter
xchg
ds
mov
xor
push
dec
cmpsl
mov
inc
add
div
stos
jecxz
test
xorl
cld
adc
dec
imul
in
leave
cmc
iret
xorl
cltd
mov
out
fistpl
cmp
inc
cmc
das
popa
add
daa
mov
mov
into
mov
add
es
fdivrl
cld
or
or
xchg
xchg
xor
push
aas
movsl
push
and
mov
fistl
gs
pop
xchg
mov
add
mov
in
pop
sbb
or
mov
or
stos
lret
push
loope
or
mov
sbb
jmp
nop
lahf
pop
jle
in
aaa
xor
ja
add
leave
aam
or
sub
fwait
jmp
sbb
or
les
sub
add
dec
dec
sbb
pop
cmp
xor
mov
loopne
in
sub
mov
shrl
stos
test
cmpsb
xchg
xchg
add
aad
mov
imul
mov
iret
xchg
negl
in
push
popa
add
cmp
push
dec
orl
in
popa
ret
scas
inc
out
push
lret
xchg
xchg
in
dec
negb
outsl
aas
sbb
dec
ljmp
dec
jae
cmc
jno
insl
daa
aam
cwtl
cmpsl
rclb
dec
and
mov
imul
xor
jmp
push
jo
out
jl
sti
mov
lahf
sub
into
push
aas
jbe
int
xlat
fstpt
lock
pop
js
test
fnsave
iret
push
or
pop
mov
lret
iret
mov
pop
xlat
or
mov
mov
or
dec
aaa
aaa
negb
insl
or
and
repz
mov
jg
mov
sbb
out
insl
cld
out
sub
mov
dec
outsb
int
pop
stos
jecxz
dec
cmp
dec
outsl
mov
xchg
outsl
fwait
and
adc
inc
roll
aas
jle
xchg
test
clc
mov
cltd
sti
push
sbb
and
int3
rcl
lret
and
popa
mov
adc
cld
push
daa
mov
mov
shlb
mov
sub
out
push
mov
xor
sti
and
aas
cmp
enter
cmp
push
lods
xor
mov
ljmp
cld
bound
aam
bsr
leave
js
jae
xchg
and
lock
add
cmp
adc
aaa
mov
mov
loop
push
push
stos
and
xor
imul
cmpsl
roll
daa
sbb
xor
fmul
push
movsl
add
aad
aas
add
pop
hlt
push
and
xchg
add
addr16
out
sbb
xchg
into
jnp
adc
dec
xchg
dec
insb
inc
jb
movsl
cmpsb
fadds
sub
mov
add
clc
in
cmp
lret
sbb
cmc
dec
mov
rcrl
mov
mov
test
mov
ljmp
movsb
push
decl
adc
dec
push
jns
push
xor
adc
leave
test
add
push
jmp
mov
filds
add
stc
mov
lods
sarb
idiv
jno
xor
adc
pop
aas
inc
rcll
mov
nop
fnstenv
jge
push
clc
fcomip
add
mov
mov
cmp
out
loopne
mov
fidivrs
mov
addb
xchg
mov
cmpsl
je
jecxz
pop
dec
les
pushf
mov
gs
xchg
mov
notl
loopne
mov
mov
adc
cmp
jb
addr16
movsb
or
enter
jl
mov
cmp
pop
pop
mov
clc
sub
rorl
jae
inc
add
clc
sahf
cmp
push
cmc
pusha
push
pop
jae
mov
lock
repz
jecxz
push
mov
lahf
cs
add
inc
and
or
inc
inc
push
sbb
add
jecxz
inc
notb
int
and
call
pushf
hlt
pusha
mov
push
mov
cmpsb
adc
jno
xchg
or
movsb
pop
push
cmp
stc
ret
cmp
sbb
cmp
push
pusha
adc
push
jmp
cmp
es
ret
mov
lea
iret
dec
mov
lock
adcb
bound
fwait
ja
fistpll
inc
fwait
jae
mov
pop
cs
pop
mov
jl
out
jne
mov
pop
push
pcmpeqd
add
js
inc
cmp
mov
mov
cmc
loopne
pop
sbb
mov
add
xchg
mov
repnz
add
ret
mov
or
sbb
mov
imul
adc
dec
sbb
mov
lret
mov
test
rcl
cmp
cmp
or
add
mov
test
out
mov
push
xor
rclb
ss
aaa
es
lds
scas
or
xor
inc
icebp
xor
lods
ljmp
out
das
mov
fildll
aam
lods
push
imull
addl
lds
lcall
jns
mov
lret
lcall
jns
xchg
data16
jmp
jle
dec
push
mov
jp
inc
jmp
xchg
mov
inc
xchg
sub
std
daa
jne
cmp
xchg
adc
subb
imul
fdivp
mov
dec
scas
test
add
imul
cmc
pusha
mov
repz
jno
sbb
push
std
sbb
mov
pop
adcb
mov
js
and
adc
stos
inc
stos
lea
pop
mov
adc
fildl
push
xor
inc
out
and
fstl
sub
std
pop
mov
push
movsb
inc
mov
mov
loope
pop
clc
jp
or
test
or
cmp
adc
cmp
mov
icebp
adc
jne
push
js
cmp
aaa
jns
mov
xchg
and
loope
nop
dec
sub
mov
scas
lcall
jbe
ja
jg
xchg
inc
or
pop
xor
data16
mov
dec
push
jnp
or
inc
es
out
loop
add
jb
add
lret
add
negl
mov
repnz
dec
or
fisttpl
add
fnsave
cmp
fisttps
bound
loop
and
fcompl
sbb
push
out
inc
mov
mov
aaa
sbb
xorl
or
ja
out
dec
repz
dec
imul
ljmp
fwait
dec
ljmp
and
sbb
iret
es
js
loopne
lds
shll
pop
adc
fcoml
cmpsb
xchg
int3
aad
mov
jp
pop
mov
mov
gs
fs
outsl
icebp
xchg
gs
fs
fdivr
mov
pop
jno
dec
xor
pop
mov
lods
jg
mov
in
sbb
add
lock
dec
es
js
in
push
jae
stos
mov
add
xor
cmpsb
mov
outsb
sub
test
push
loopne
mov
adcl
repnz
and
jle
cmpsl
push
adc
decb
in
xor
dec
inc
push
cmp
dec
mov
inc
jns
inc
movl
add
push
pusha
js
pop
fcmovnbe
push
popa
xchg
sbb
add
xor
xchg
or
pop
mov
xchg
movsb
popf
dec
pop
loope
xor
jg
push
push
test
enter
jecxz
jns
repz
imul
push
cwtl
inc
insb
std
add
in
lcall
cmp
fucomp
push
jmp
mov
fnstsw
movsb
fldenv
cmpsl
dec
fnsave
scas
std
mov
pusha
es
jecxz
movq
mov
mov
mov
stos
dec
and
jp
repz
jnp
stos
outsb
out
sbb
mov
gs
cmp
cmp
jmp
adc
popa
dec
lods
add
sahf
jge
inc
fldenv
lret
inc
shr
std
movsl
fsts
cmovl
movsb
fistl
mov
aad
cmp
enter
push
test
pop
adcl
stc
lcall
mov
sub
andl
inc
cmp
mov
je
iret
push
cmp
mov
shl
add
xchg
sub
mov
inc
fmuls
sub
bswap
push
mov
shll
ret
mov
inc
sbb
ljmp
mov
mov
sahf
jb
dec
out
or
bound
xor
jb
out
xchg
pop
out
xchg
jo
mov
sbb
enter
jecxz
jl
sbb
in
outsl
fisttpl
push
mov
xchg
movb
mov
in
jae
and
fsubrp
bound
repz
mov
xor
andb
je
jmp
xchg
adc
dec
lret
jge
lock
sub
mov
loopne
sbb
xor
in
jo
xchg
xor
and
pop
xor
cmpsb
frstor
mov
movsl
fisubs
dec
out
and
mov
xchg
jnp
mov
andb
dec
mov
sub
mov
and
fmuls
inc
out
aam
mov
sub
sbb
test
xlat
stos
lds
js
scas
mov
aaa
in
push
jmp
cmp
sti
push
pop
orl
xor
jns
fsts
xchg
imul
lock
shlb
mov
jno
movsb
pop
sbb
push
sarb
lret
int
aad
jle
push
add
ss
or
jg
ds
es
dec
xor
dec
and
inc
call
cmp
pop
push
into
iret
std
jo
and
adc
push
or
int3
xor
inc
adc
dec
out
push
mov
mov
mov
popf
outsl
cmp
outsb
or
je
loope
inc
loopne
push
out
std
pushf
lahf
outsl
adc
sbb
leave
data16
addr16
ja
jmp
xor
shlb
mov
lock
add
inc
out
add
pusha
or
xchg
mov
and
test
add
xchg
into
sub
or
mov
pop
or
push
mov
and
sbb
xchg
pop
xchg
mov
loope
or
fsubl
inc
int
gs
hlt
mov
sub
sbb
xchg
ficompl
xchg
pop
mov
xor
and
jmp
xor
popa
fildll
das
movsl
jae
icebp
scas
dec
mov
sbb
mov
hlt
pop
in
cmp
push
test
xchg
lret
ljmp
bound
mov
lock
movsb
ret
or
sbb
add
shrl
mov
mov
mov
popf
mov
ret
lods
mov
rcrb
cmpsl
ja
jecxz
mov
rcll
add
sub
and
adc
xchg
pop
hlt
jo
cld
stos
sarb
ss
cmp
rcll
mov
sbb
inc
loopne
xchg
scas
nop
verw
cmp
insb
inc
ror
and
adc
mov
xchg
loopne
xchg
pop
mov
fs
shlb
jg
test
push
push
iret
push
enter
xchg
fucomp
mov
shr
loopne
movsl
outsb
jbe
mov
push
pop
sbb
popl
adc
outsl
and
cwtl
and
dec
xor
pop
popa
mov
ja
jne
cmp
fwait
adc
jns
add
in
dec
aaa
add
hlt
sbb
push
mov
xchg
adc
ja
iret
ds
rcl
inc
ja
frstor
xchg
shlb
ret
xor
ljmp
incl
mov
push
popf
mov
pop
inc
cmp
dec
xlat
out
fdivr
add
add
adc
mov
add
in
jne
adc
xchg
sub
sub
jle
jle
lahf
test
mov
call
popa
xchg
rcl
movl
xchg
add
xchg
in
add
xor
out
loope
dec
stc
cmp
bnd
in
adc
inc
cmp
and
bound
insb
shrl
push
lcall
inc
cld
or
dec
lcall
lcall
push
in
subl
jle
icebp
and
sub
in
pop
mov
lahf
push
jbe
test
mov
or
out
xor
dec
loopne
cltd
gs
cmp
dec
cs
fs
cmp
fisttpll
jno
shrl
sbb
or
rcrl
cmp
dec
repnz
jns
loope
pop
rorb
in
and
mov
and
arpl
and
xchg
bnd
fnstsw
mov
pop
inc
lock
leave
or
push
cmp
mov
jo
mov
bound
mov
test
dec
sub
add
jg
xor
ret
ret
xchg
hlt
sti
xchg
pop
adc
scas
adc
xor
addr16
test
jl
bts
movl
js
jne
loope
shll
dec
mov
add
mov
cmp
add
xor
aas
aad
lock
int3
jge
lret
js
adc
pop
testb
add
in
xlat
loopne
inc
xchg
aaa
jo
out
sbb
adc
repz
mov
cli
xchg
insl
add
sub
mov
mov
fistl
add
and
fdivl
loop
addb
cmpl
ja
js
xor
sarb
addb
sbb
leave
add
fwait
mov
or
inc
pop
cs
sub
clc
in
xchg
dec
aaa
xchg
pop
pop
adc
cmp
or
das
jnp
les
cltd
and
mov
aam
iret
add
testl
popa
mov
fxch
ja
mov
jp
out
inc
jmp
aas
cmc
and
and
jg
mov
fisttpll
mov
cmpsl
repz
jbe
jb
cmp
rorl
add
outsl
outsl
xchg
test
mov
sbb
ds
cmpsl
jecxz
ror
jmp
push
push
mov
pusha
ror
sub
loopne
pop
call
shll
cld
add
dec
mulb
ss
ss
adc
mov
rorl
xchg
outsb
xor
call
add
mov
lahf
ret
movsl
scas
in
arpl
xchg
jo
je
push
movsb
jo
call
xchg
dec
mov
fbld
mov
lret
leave
int3
stc
das
adc
cmpsl
or
scas
cmp
sub
add
cmp
ds
inc
imul
out
cli
or
jnp
push
and
inc
in
mov
enter
rclb
ss
cmp
loop
daa
repz
dec
rorb
cmp
sbb
lea
xchg
mov
and
test
andb
test
push
xchg
pop
push
xor
call
adc
fidivrl
dec
jp
xchg
or
and
mov
jmp
ljmp
in
and
add
add
ficoms
and
stos
mov
stos
out
xor
xchg
cli
je
or
imul
and
pop
adc
lods
lea
out
sbbb
or
push
cld
call
pop
sbb
sub
pop
fldl
test
inc
pushf
fwait
or
sbb
movsb
outsb
mov
insb
in
fcomps
push
xchg
aam
jne
sub
aas
stos
movsl
fcomps
lret
js
xchg
idivl
jge
xchg
mov
xchg
fs
clc
mov
add
cwtl
inc
lea
jmp
and
fidivrl
xchg
or
std
add
mov
dec
xchg
push
sub
pop
mov
lds
sbb
and
dec
in
ds
mov
sub
and
jle
pop
aas
push
add
mov
pop
cmp
xchg
mov
or
hlt
stos
loope
inc
xor
push
mov
and
adc
xor
mov
inc
jecxz
and
fisubl
imul
pushf
sub
mov
test
jb
arpl
outsl
fldcw
pop
cwtl
roll
fistpll
leave
add
sub
mov
pcmpeqw
xlat
pop
jbe
call
in
ficomps
or
mov
mulb
jl
sbb
jle
lret
icebp
pop
xchg
push
ljmp
adc
pusha
pop
out
mov
cli
leave
stos
hlt
pop
scas
mov
xlat
cmpsb
mov
icebp
lock
aaa
roll
pop
popa
lcall
xchg
xchg
incl
sub
mov
shrb
and
call
stos
or
insl
or
fcoml
popf
outsb
cs
lahf
sahf
stos
lahf
pop
inc
enter
lret
test
fstpl
das
aam
lods
out
xor
imul
add
mov
repz
lcall
cli
out
adc
ja
push
sub
js
push
inc
fisttps
cli
mov
xchg
js
mov
stc
outsl
pop
out
roll
mov
fwait
ret
insb
lahf
sbb
fsubrp
sub
push
or
xchg
xor
les
pop
cmp
cld
fwait
dec
jmp
cltd
mov
ret
inc
fistpl
imul
mov
sbb
or
sbb
dec
cli
add
jns
pop
aas
lods
paddq
insl
faddl
or
scas
or
shl
mov
adc
cld
in
mov
inc
push
jp
jl
xchg
add
loop
lret
cld
mov
pop
mov
mov
lret
lock
sbb
push
int
cmp
and
mov
lret
pop
mov
jmp
pop
jbe
inc
imul
push
sbb
mov
jmp
push
push
xchg
jmp
mov
cmpsl
cmp
jne
mov
or
clc
dec
sarb
fs
sub
xor
cmp
adc
insl
push
pop
std
mov
test
stc
cmc
das
cmpsb
jbe
cld
call
inc
xor
push
mov
dec
xchg
shrb
lret
xor
add
stc
and
out
dec
lods
loope
test
ja
in
test
cmp
dec
sbb
mov
nop
lret
inc
subl
insb
outsl
jp
filds
mov
inc
fstp
mov
and
aas
push
into
dec
fstpt
jnp
inc
movsl
pop
in
adc
aad
ss
das
outsl
rcr
and
inc
bound
clc
call
jg
into
sbb
aam
or
push
jmp
rclb
dec
dec
cmpsl
clc
add
cs
push
xchg
jo
xor
mov
pop
stos
or
pop
sbb
sti
in
pop
ss
dec
dec
pop
or
sahf
and
dec
xor
mov
out
out
enter
pop
adc
lret
out
mov
adc
sbb
jae
lcall
add
mov
imul
and
or
cmp
test
daa
loop
pop
leave
stos
mov
in
xor
pop
aam
ror
xchg
sbbl
inc
ds
outsl
ret
sbbl
pushl
push
ss
into
imul
inc
arpl
sbb
cmp
mov
push
bound
mov
movsl
dec
das
cmp
mov
and
jnp
fists
mov
lds
push
lods
inc
inc
pop
push
jmp
xchg
cmp
lods
outsl
les
js
ss
fs
outsb
scas
les
mov
sub
lods
outsb
movsl
sbb
jl
jne
loop
fildl
xor
aam
xor
sub
jecxz
add
iret
mov
enter
mov
cltd
frstor
mov
loope
sarl
jns
out
lds
sub
insb
add
ja
frstor
popf
and
xchg
lock
push
add
nop
imul
adc
loop
lods
je
and
cli
in
addr16
js
adc
lods
cmp
mov
push
cmp
mov
clc
cmp
ret
hlt
jmp
sti
dec
sub
xor
or
stos
pop
add
jns
vmwrite
loopne
pusha
repz
enter
mov
dec
mov
and
into
scas
fwait
add
mov
in
ss
sbb
jp
clc
jnp
dec
pop
xor
fisubs
repnz
cmc
mov
fcmovnb
sarl
test
mov
mov
fsub
imul
pop
ja
subb
fldl
fiadds
cs
js
mov
popa
rcr
sub
pop
pop
lock
cmp
adc
xor
stc
ss
mov
ret
pop
popa
add
push
fnsave
les
jecxz
vmovaps
imul
cmp
sub
scas
icebp
adc
or
sub
or
pop
and
push
adc
mov
dec
jb
xchg
push
fucomi
cmpsl
sbb
mov
or
or
dec
push
lcall
enter
cmp
mov
popa
jae
clc
jmp
nop
add
adc
lret
xor
mov
sub
aad
inc
push
sub
pop
ljmp
jno,pn
mov
inc
es
gs
insl
lods
out
sar
outsl
xchg
jns
add
mov
mov
sub
mov
stos
outsl
xchg
aas
push
outsb
pop
push
dec
out
pop
aas
loopne
jmp
rclb
cmpl
out
sub
cmp
loop
leave
sub
dec
inc
or
sub
or
int3
mov
out
pop
jl
scas
jbe
dec
jne
sub
fisubrl
outsl
out
fcmovnb
shlb
push
gs
jmp
in
mov
adc
xlat
pop
ficomps
or
dec
into
data16
outsb
push
or
orl
notl
hlt
pushl
or
mov
lock
adc
cmc
mov
sub
shlb
cmp
fs
pushf
sbb
clc
cmpsb
add
cvttps2pi
nop
mov
adc
sbb
jle
cmp
pop
cld
mov
cmpsl
dec
fiadds
adc
mov
sbb
sbb
or
jb
mov
dec
pusha
fwait
movsl
fisubrl
cmp
cmpsb
out
or
movb
mov
decb
loope
adc
cmp
cltd
bnd
mov
sbb
xlat
cmp
mov
jae
or
inc
jnp
lcall
inc
leave
cmp
xchg
mov
test
xchg
mov
sub
es
bound
repnz
fiaddl
push
test
cmpsl
xchg
in
cmp
jecxz
arpl
movb
sub
and
xlat
and
jbe
adcb
sarb
push
inc
pop
jle
pusha
inc
aaa
mov
pop
movsl
push
outsl
jno
pop
pop
jle
dec
pop
out
mov
shr
mov
and
idivl
and
mov
cmp
and
in
test
lds
push
sbb
add
insb
cmpsl
hlt
imul
inc
jecxz
les
stos
call
cmp
scas
out
lret
cmp
out
mov
jnp
stc
aas
dec
fwait
pop
loop
lret
inc
ret
pop
iret
or
xchg
mov
hlt
xchg
xlat
mov
idivl
insl
roll
or
fsubrs
scas
push
or
cmp
push
jne
outsb
dec
push
mov
pop
pop
lods
push
in
dec
xlat
outsl
ret
lcall
push
or
stc
lock
push
sub
lock
clc
in
rorl
push
ret
and
push
sahf
xchg
dec
inc
aaa
and
outsl
pop
sub
pop
cli
xchg
outsl
aad
adc
adc
or
rcll
bound
sub
jo
sbb
inc
faddl
pop
jg
sub
xchg
cli
clc
push
jnp
mov
cmp
and
add
hlt
cli
dec
xchg
inc
ficompl
sbb
push
hlt
fnstsw
sub
out
jg
std
pop
lret
fidivs
adc
data16
add
rcll
aaa
add
mov
mov
rcll
pop
xor
cmpsb
mov
adc
mov
pop
pop
cmp
adc
cltd
in
cmp
sbb
and
dec
jae
dec
in
lcall
or
dec
pextrw
sbb
fcomps
iret
pop
mov
nop
mov
notb
icebp
pop
pop
movsb
or
movsb
in
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
mov
inc
pop
jl
xor
push
xor
sbb
cmpsb
mov
pushl
jne
push
int
cmpsb
imul
call
lock
fistps
outsb
cli
mov
ja
mov
and
cmc
sub
arpl
pop
push
mov
pop
cwtl
jl
pop
js
ljmp
push
xchg
lahf
pop
inc
inc
fsts
push
testl
mov
outsl
add
jle
dec
or
push
lock
notl
je
jmp
repnz
clc
xor
dec
mov
popf
out
cmc
cmpsb
bound
addr16
sahf
add
shll
sub
jb
test
pop
mov
cmp
les
sarb
hlt
ret
in
mov
insb
mov
divl
dec
inc
xorb
mov
adc
rorl
jp
push
push
and
mov
or
lret
adc
mov
pop
push
mov
adc
sub
add
lea
pop
aad
negb
or
shll
sbb
pop
movsb
add
out
jg
or
in
mov
loope
loope
inc
out
mov
mov
pop
or
xchg
lret
rcrb
mov
lods
pop
in
rolb
imul
fisttps
cltd
xchg
pop
push
dec
enter
and
aaa
lret
cmc
add
rorb
cwtl
push
mov
push
test
mov
movb
enter
pop
mov
cltd
aas
add
in
jp
pop
movsb
fidivs
sbb
fcmovb
push
bswap
rcrl
fsubrs
mov
cmp
push
lret
jae
mov
sbb
mov
test
fsubp
loop
jae
adc
int
lcall
scas
pop
xor
xor
arpl
gs
icebp
test
lcall
js
andl
push
scas
dec
popf
push
sar
push
ja
enter
or
xor
adc
mov
pop
cmp
mov
dec
mov
mov
dec
sub
xchg
sbb
shl
adc
test
out
mov
inc
ret
imul
xchg
xchg
cltd
in
dec
cmp
inc
je
push
xchg
dec
icebp
jmp
dec
or
orl
hlt
jp
lock
or
stc
inc
sub
das
sub
dec
mov
sub
mov
pop
xor
or
outsb
aad
push
pop
mov
in
push
es
cmp
jbe
cli
gs
packssdw
pop
adc
shlb
xor
mov
mov
andl
push
cli
fildl
mov
ret
xor
sbb
jge
and
movsb
movsl
jb
movsl
out
fstpt
push
aas
movsb
shl
pop
outsl
xor
mov
push
or
test
sub
pop
cmpsl
mov
pop
xchg
leave
les
aad
add
outsb
ss
mov
add
insl
nop
out
stc
outsl
rolb
push
mov
push
sub
lret
out
sbb
sbb
dec
daa
xchg
les
xchg
pop
pop
push
test
or
mov
xchg
outsb
jbe
std
data16
jle
iret
cmpsb
inc
loop
dec
cmpsl
inc
rolb
aam
xchg
mov
inc
xchg
cmpsl
mov
mov
xorl
pop
jl
cmpsb
sub
stos
lock
call
and
into
clc
adc
insl
repz
sub
sbb
push
addr16
add
aam
fsubrl
xchg
test
mov
mov
or
jb
xchg
cmp
pushf
lods
in
iret
pop
iret
sbbb
add
xchg
loopne
dec
pop
test
xor
fcompl
fmulp
jo
bound
xor
lds
shlb
mov
fs
ja
add
mov
es
dec
mov
sbb
lcall
mov
push
mov
mov
call
push
push
or
jno
loopne
pop
xchg
fimuls
inc
inc
shrb
dec
lods
daa
out
imul
sbb
or
xchg
jle
insl
xchg
pushf
mov
call
xchg
pop
sub
xor
imul
inc
ja
out
add
cltd
out
or
inc
lret
jns
fsubl
pop
sbb
loopne
js
stc
push
jl
iret
push
lds
inc
cs
xchg
test
push
xchg
in
aas
and
pop
xchg
movsb
mov
hlt
loop
fidivl
mov
ret
ret
pop
mov
adc
and
xchg
dec
jge
aad
inc
jge
loopne
cmp
push
xchg
fsubl
in
mov
jmp
scas
pop
push
rol
das
inc
insl
mov
sbb
or
xor
test
clc
dec
adc
dec
jbe,pn
push
xor
mov
add
adc
in
or
les
dec
mov
push
mov
pusha
jnp
pusha
adc
push
lret
sub
push
shrl
inc
leave
add
xor
inc
jo
and
idivb
lods
jno
jns
and
sbb
add
movsb
data16
xchg
lods
mov
xor
mov
sub
lret
jbe
push
push
stos
sub
mov
testl
icebp
jle
mov
scas
js
push
jb
sub
sbb
pop
icebp
loop
nop
sub
cmp
dec
jle
nop
pushf
push
add
pusha
in
sbb
je
adc
push
insb
pcmpgtb
stc
xlat
mov
andl
and
cmpsb
mov
xchg
push
adc
out
imul
adc
in
xor
jg
add
xlat
shlb
aas
inc
push
xchg
xlat
sbb
xchg
mov
or
imul
and
dec
add
pop
mov
pop
mov
sub
rcrl
icebp
out
xchg
xchg
cmp
into
mov
mov
mov
jp
pop
jne
lcall
mov
imul
inc
imul
aaa
nop
sbb
mov
cs
movsb
imul
mov
sbb
and
jge
aaa
mov
sti
mov
and
jp
dec
xchg
xor
sbb
mov
sub
or
mov
cmp
scas
pop
cwtl
xor
or
adc
cwtl
mov
xchg
xor
adc
stc
fidivs
pop
gs
mov
adc
ja
fiadds
lea
mov
mov
add
test
int3
xor
xchg
es
xchg
shll
inc
jp
enter
adc
lret
jmp
lds
sti
push
cs
in
fisubl
lcall
mov
cmp
mov
int3
sub
test
mov
add
add
jb
dec
push
jle
push
stos
mov
xchg
test
xchg
xchg
pop
and
in
je
dec
jg
or
jmp
rclb
and
scas
or
and
movsb
lcall
push
fisubrl
js
int3
sbb
movsl
xor
and
test
mov
add
dec
mov
ja
sub
aas
lock
cwtl
push
push
mov
add
aaa
mov
pop
pop
in
enter
fldt
add
arpl
and
push
shlb
mov
in
shl
iret
shrl
das
lret
sub
adc
and
xchg
jbe
xchg
addr16
xor
call
mov
das
jle
repz
add
aad
cmovae
cmc
int
inc
repnz
pop
cmp
mov
fldl
jbe
sbb
ja
out
mov
adc
sbb
sbbl
adc
test
xor
imul
jno
cmp
call
jnp
out
sub
divb
scas
xchg
cmp
xor
push
sbb
mov
mov
xor
pop
shlb
cwtl
inc
push
ret
lea
dec
xchg
jnp
frstor
jo
roll
mov
dec
pop
movsb
and
xor
xor
inc
ds
inc
sbb
outsl
xchg
mov
call
push
add
cmp
xor
jnp
mulb
push
in
sub
sbb
push
inc
ljmp
fisubs
and
loopne
cmpsl
sbb
adc
lret
gs
push
movsb
cmp
jae
jle
adc
mov
ret
mov
cmp
je
cmpsl
mov
mov
sub
sbb
mov
xor
sbbb
es
or
notl
adc
xor
cmpsb
jno
and
jb
xchg
push
xchg
inc
jecxz
outsb
mov
push
ss
and
mov
loope
lret
js
xchg
or
fistpl
jp
mov
pop
jmp
pop
ret
incl
or
ds
mov
adc
and
sub
mov
add
pusha
roll
dec
push
cmpsl
mov
fiadds
loopne
mov
clc
les
idiv
pusha
jmp
stos
js
insl
cmpsb
in
sbb
ja
addr16
jl
dec
sahf
jmp
repnz
dec
negl
jns
inc
das
pop
jge
and
rcll
arpl
xchg
adc
pop
sahf
iret
jp
xchg
sub
shl
jno
orb
sbb
sub
pop
aam
or
pop
cmp
and
outsl
mov
into
scas
push
test
bound
nop
dec
add
mov
push
gs
sub
in
pop
jne
test
jmp
out
mov
jno
inc
lret
xchg
sbb
cmc
stc
inc
sti
out
xor
mov
sbb
int
fidivrs
mov
jp
stos
cmp
dec
icebp
pop
out
cwtl
xchg
aam
shlb
shll
mov
scas
xchg
leave
mov
stos
les
fisubs
add
jo
hlt
sbb
add
popf
dec
addr16
mov
or
movsb
iret
inc
decl
push
mov
adc
push
cmpsl
adc
add
cld
imul
cmp
dec
xchg
sub
lret
add
mov
sbb
xor
and
cli
pop
mov
repz
xchg
xchg
mov
inc
mov
mov
call
movsb
pop
pushf
pop
and
in
sarl
stc
leave
adc
fstps
push
shrl
adc
xor
sar
jmp
mov
roll
js
add
out
push
data16
pop
mov
mov
icebp
sub
push
mov
lret
xchg
sub
jcxz
ret
inc
iret
arpl
push
jne
mov
loope
sub
dec
cwtl
cmpsl
inc
sarb
xchg
or
push
push
daa
add
dec
cltd
aaa
or
jl
enter
fwait
sbb
xchg
dec
mov
scas
mov
popf
inc
push
sbb
repnz
int3
xor
xchg
cmp
ret
out
push
xchg
and
push
ljmp
aam
movsb
loope
mov
mov
add
xor
daa
mov
imul
cwtl
jmp
test
add
ret
mov
aad
add
out
jne
adc
ds
in
sahf
sub
adc
insb
test
cmp
push
data16
dec
addb
adcl
mov
xor
dec
sarb
sbb
cs
xchg
scas
xor
sahf
inc
roll
fcmovne
adc
test
mov
int
rorl
add
push
std
pop
xchg
outsl
inc
dec
test
mov
cmp
xlat
call
push
stos
js
mov
jge
mov
add
cmpsl
xchg
cmp
xchg
test
pop
cwtl
and
xor
and
push
call
xchg
mov
leave
fstps
movsb
xchg
pop
dec
or
or
add
adc
sbb
or
add
std
fsub
in
mov
push
ret
pop
test
mov
jecxz
lret
ret
push
jp
shlb
push
cmp
lret
cmp
into
jecxz
je
call
dec
mov
sti
pushf
cld
daa
add
cmpb
xchg
inc
fsubl
sub
pop
pop
jg
mov
in
mov
or
setl
push
pop
sarb
inc
and
inc
movsb
repnz
lcall
lds
sbb
les
sti
test
ss
mov
and
std
lret
xchg
cmp
xor
lods
test
fnsave
pop
aas
jnp
outsl
nop
stos
dec
clc
inc
aad
js
mov
or
ljmp
subb
fwait
inc
testl
cmpsl
jmp
lds
pop
mov
insl
mov
arpl
adc
sub
std
adc
add
arpl
into
cmp
xchg
das
mov
sub
cmpsb
xor
and
or
test
mov
std
leave
scas
mov
lret
ret
jg
in
xlat
push
cli
int3
cmp
loopne
mov
ret
fists
sbb
loope
sub
rcrl
pop
and
mov
mov
cmp
inc
loopne
dec
ss
loop
lods
cmp
pop
pop
insl
lret
aam
mov
jo
xchg
lea
pop
ljmp
fadd
cmp
sub
call
push
ja
xchg
enter
inc
nop
jge
mov
aaa
hlt
or
or
ljmp
xchg
and
push
push
sub
mov
jae
fcoml
pusha
fstl
insb
dec
ljmp
imul
movsl
add
popa
loopne
subb
sahf
test
or
sbb
mov
xchg
out
add
sahf
repnz
adc
fnstenv
lea
cmpb
push
out
test
jl
in
jne
cltd
or
adc
fs
out
add
or
cwtl
lds
xlat
lods
mov
sub
std
mov
outsl
imul
addr16
cmpsb
or
cmpsl
cmc
sti
mov
ret
sub
jns
or
cmpsb
jecxz
pop
fs
add
or
xchg
or
ds
es
pop
mov
cwtl
jae
or
loope
push
mov
push
jmp
jo
mov
and
mov
js
enter
add
rcll
jge
ror
popa
outsb
pop
push
loopne
ret
fsubrl
out
inc
out
cwtl
fcoms
inc
xor
bound
inc
popa
rep
mov
pushf
jl
xor
jl
mov
gs
xchg
inc
mov
cltd
arpl
push
adc
or
mov
pusha
dec
sub
pop
cmp
add
rcl
push
cmp
adc
or
int
scas
sub
dec
into
stc
test
and
pop
in
sbbb
loope
ljmp
push
outsl
xchg
pop
adc
xor
lods
pusha
sbb
nop
outsl
add
lock
aam
cmpl
jge
cmp
cltd
pusha
push
push
aas
cmp
pop
xchg
or
lods
xchg
add
test
xchg
adc
nop
sbbb
mov
mov
subb
adcb
stos
mov
or
push
xor
jecxz
shll
js
fstpl
lret
mov
xor
push
pop
mov
mov
xchg
fiaddl
pop
pusha
fstpl
fs
shlb
ret
jmp
and
lods
sub
mov
in
jp
pusha
cmp
mov
and
test
dec
xor
mov
mov
sbb
jne
mov
cmp
jmp
cmp
adcl
outsl
mov
outsl
dec
inc
jno
inc
repnz
push
or
das
jl
shrl
rcll
and
call
int
jae
aam
sbb
add
add
jg
sahf
cld
pop
and
push
xchg
rclb
inc
test
in
loope
dec
inc
insb
sahf
pop
rol
pop
cmp
out
das
xchg
push
mov
test
stc
jcxz
jg
ss
dec
add
dec
push
addr16
imul
popa
in
je
inc
add
movsl
push
adc
and
repnz
clc
aad
nop
outsb
sbb
push
jg
cmp
add
mov
addr16
or
push
xchg
xchg
popf
inc
xchg
ja
in
cmpsl
icebp
orl
pusha
xchg
mov
aam
rorb
lods
lcall
jmp
pop
lret
addl
jns
scas
or
pop
stos
lea
pop
mov
scas
fcoml
push
or
testb
shlb
faddl
sbb
dec
insl
xor
xchg
aam
ret
jae
xchg
ja
mov
sub
fcompl
dec
cmpsb
out
sub
mov
testl
cmp
iret
push
mov
gs
jno
inc
add
jno
mov
sbb
adc
jbe
sub
repnz
cltd
xor
jne
aas
sbb
dec
data16
scas
mov
scas
dec
sbb
xchg
pop
sbb
lods
sbb
jnp
hlt
addr16
cmp
cs
mov
dec
jno
pop
mov
xchg
xchg
call
test
in
pop
lret
mov
lods
sub
mov
xchg
pop
fwait
js
adc
push
decl
lock
push
cli
xchg
inc
adcl
pop
test
cmp
sbbl
adc
pop
cltd
jg
idivb
push
jecxz
and
rcrl
lock
push
clc
pop
sbb
dec
sbb
push
xlat
fidivrs
jns
push
les
pusha
leave
add
dec
jo
in
add
dec
rorb
fs
mov
mov
shrb
cmpsl
or
jns
or
fistpll
test
daa
pusha
mov
jmp
mov
inc
xchg
movsl
filds
cwtl
adc
ret
mov
aad
cld
in
mov
and
or
bound
and
dec
repz
jbe
cmp
fisttpl
jne
arpl
xchg
push
sub
jp
push
jb
orl
movsb
int3
ss
imul
aam
insb
jae
data16
cwtl
rorl
and
and
or
pop
shr
xor
inc
mov
dec
stos
out
cmc
cli
and
xchg
out
ds
mov
xor
cmpsb
daa
jmp
in
or
xor
dec
outsb
jno
sub
add
insl
jp
xor
jbe
scas
test
cmpsb
inc
pop
adc
cmp
loopne
cld
test
lahf
xchg
cs
mov
loopne
int3
mov
jnp
push
dec
fisubrs
adc
stos
cmc
lock
adc
jge
jmp
cmp
cmpl
xchg
ret
xchg
pushf
xchg
pop
cmc
xor
cmpsl
sub
sub
mov
dec
pop
push
aam
data16
add
push
sti
fcoml
rol
mov
cmc
outsl
int3
std
mov
popa
mov
mov
push
outsl
add
cmpsb
nop
sbb
fwait
sbb
ficompl
shrl
out
mov
and
imul
lahf
scas
sub
sbb
lret
push
inc
mov
and
subl
int3
rcll
loope
fmuls
mov
inc
sbb
mov
push
jl
xchg
lods
test
test
dec
jge
push
clc
cmp
cmc
enter
popa
add
es
sbb
loopne
js
pop
xor
pop
xchg
mov
sbb
inc
imul
out
sub
arpl
inc
loope
lock
lahf
addl
mov
stos
add
icebp
ss
sbbl
arpl
dec
push
in
jne
movlhps
gs
mov
push
movsb
sbb
jmp
xchg
in
cwtl
std
adc
jae
fimull
lcall
push
jmp
je
xchg
outsb
sub
pusha
lret
pop
adc
or
xchg
cmp
push
add
xor
and
adc
dec
rcl
fcoms
cwtl
adc
cmp
mov
mov
repz
mov
add
and
or
stos
insb
jecxz
and
sbb
push
mov
mov
pop
mov
ds
mov
pop
xlat
and
fimuls
push
daa
clc
sahf
and
outsl
jl
cmp
stc
sbb
push
mov
pop
or
pop
ds
sub
jae
movsl
cmp
movsb
loopne
xchg
out
icebp
outsb
icebp
bound
xchg
cmp
sub
dec
xor
and
add
test
andl
pmuludq
or
stc
xchg
mov
notb
or
bound
lret
push
jle
test
dec
xchg
fdiv
mov
icebp
mov
mov
or
sub
arpl
mov
cmp
push
hlt
sbb
fcompl
mov
push
dec
adc
int3
xor
out
adc
loope
add
xor
or
std
nop
sbb
imul
jmp
stc
repz
add
dec
loop
mov
hlt
ja
dec
in
push
shlb
dec
das
sbb
jp
sbb
mov
mov
add
andb
mov
cmp
loopne
cmp
in
push
mov
adc
add
adc
pop
push
xor
lcall
decl
cltd
sar
mov
mov
ret
lret
inc
and
sti
mov
pop
das
inc
pusha
cmp
ds
fwait
movsb
lret
cltd
xchg
fldl
repz
xchg
rorl
and
mov
mov
inc
js
jl
sub
test
cmp
lods
and
mov
incl
fucomp
aas
cwtl
xor
adc
xor
ds
jmp
in
out
dec
jbe
idiv
lcall
cmpsb
jb
xchg
lods
cld
rorb
jp
adc
imul
into
adc
adc
popf
cmpsl
into
fsubs
and
call
xor
movsb
shll
out
scas
dec
xchg
dec
xchg
xchg
xchg
pop
pop
ja
cwtl
in
fs
daa
xchg
into
mov
stos
adc
mov
add
xchg
sbb
mov
fcomi
fsubrs
pusha
lcall
adc
lods
sarb
pop
dec
xlat
fildll
xchg
icebp
movsb
fsubl
mov
mov
inc
jbe
mov
fdivs
ffree
xlat
mov
mov
fcoml
and
and
cltd
sarb
xor
or
or
sbb
icebp
arpl
into
ja
pop
leave
dec
gs
push
repz
sbb
xor
xchg
and
lds
stc
mov
xchg
stos
xchg
ret
jp
add
sbb
xchg
pop
fdivrl
arpl
adc
adc
int3
js
sahf
dec
sbb
add
ret
sbb
cmpsl
mov
jae
dec
sbb
jp
movsb
cmc
lea
xchg
xchg
out
mov
adc
sub
ret
or
sbb
jae
lcall
push
mov
in
outsb
xchg
sbb
stc
mov
fisubrs
push
fwait
and
popa
cwtl
and
sub
arpl
dec
sub
mov
pop
mov
dec
dec
xchg
movsl
mov
push
in
int
sahf
iret
xchg
pop
inc
mov
sbb
mov
push
xor
je
jnp
std
xchg
nop
out
or
inc
xor
frstor
add
test
adc
lcall
lods
pop
sahf
adc
fimull
out
fwait
outsl
imul
cld
sbb
dec
pop
call
lahf
sub
lods
cmpsb
das
inc
int
scas
inc
repnz
xchg
mov
dec
ja
jne
adc
cltd
cld
xlat
cmp
xor
jmp
cvtps2pd
pop
ret
out
push
push
cmp
ficoml
xor
enter
adc
jmp
xchg
add
clc
and
idivl
mov
cli
sub
and
xchg
fsubl
icebp
add
lahf
jg
je
dec
stc
jno
sub
push
push
in
adc
jne
movd
shr
sbb
jmp
cmp
stc
repz
jno,pn
push
add
scas
nop
data16
fisubs
xchg
fcomp
xchg
jmp
pop
xchg
jp
in
aaa
or
mov
jns
aam
mov
cmp
xchg
xchg
xchg
jnp
gs
popa
mov
ja
dec
push
pop
icebp
out
ret
int
in
stos
jns
cmp
mov
addr16
inc
dec
jne
sbbl
es
jle
or
inc
imul
insl
mov
xchg
idivb
push
dec
mov
adc
roll
fimull
mov
mov
xor
pop
dec
pop
scas
mov
add
js
sbb
dec
mov
xchg
aas
sub
inc
add
nop
movsl
stos
inc
push
mov
repnz
dec
sbb
xorb
daa
add
lret
insl
outsb
adc
mov
clc
aad
push
jb
lcall
std
fs
pop
sahf
jecxz
xchg
mov
popf
mov
cs
repnz
inc
mov
test
aad
in
jo
xchg
das
mov
jno
fiaddl
addr16
je
cmp
pop
cmp
lock
sti
aaa
out
push
jae
inc
in
mov
jmp
fstp
inc
fcomi
rcrb
dec
xchg
xlat
sbb
push
fcompl
and
int
mov
rcr
mov
sbb
fisubrs
jbe
jle
ret
addr16
leave
jo
xchg
movlps
fdivp
sbb
jb
adc
nop
add
xchg
inc
xor
clc
aad
push
idivb
mov
cmc
xchg
bound
popf
stos
aad
cld
mov
push
dec
cmpsl
out
stc
inc
mov
fs
jo
in
pop
sub
sbb
xchg
dec
mov
sub
mov
in
cltd
mov
xchg
jge
mov
scas
dec
xchg
dec
fdivrs
stc
mov
jg
push
cmc
or
mov
gs
in
mulb
cmp
xchg
out
scas
imul
xor
add
out
in
lods
or
movsl
stos
push
jl
push
rolb
int
xchg
int3
cmp
imul
aas
fstpl
shrb
es
movsl
das
sub
outsb
fisubl
bound
jmp
movsl
push
in
inc
lahf
dec
adc
xor
fwait
inc
sbb
sbb
dec
jge
push
mov
scas
lock
jne
sub
idiv
or
movsb
jecxz
bound
jp
sbb
fistps
inc
fs
test
inc
pop
inc
mov
xchg
mov
jno
and
push
enter
cmp
sub
lds
mov
mov
mov
sub
fs
stc
inc
rcll
movl
jg
pop
pop
stos
into
sub
dec
sub
loope
pop
loopne
jnp
out
push
loopne
jne
cmp
ss
adc
sub
in
jae
xchg
sub
dec
cmp
jns
inc
mov
daa
in
sub
jns
mov
ds
stc
add
sbb
test
sahf
int3
das
in
je
lods
lahf
fisubl
or
int3
fisttpl
stc
jg
mov
iret
outsl
call
sub
bnd
aad
dec
int
jae
leave
xchg
int3
mov
out
xacquire
stos
lock
iret
pop
push
sbb
aad
scas
enter
mov
into
cmp
test
lea
push
iret
dec
xorl
and
add
sub
lret
mov
mov
loop
movsl
fs
aaa
xchg
xchg
loop
and
jne
dec
scas
push
or
leave
sub
add
push
das
jb
cmc
push
scas
adc
dec
out
ret
xor
movsb
lods
mov
shll
int3
mov
or
aad
or
inc
pusha
out
insb
sbb
inc
cmc
rorb
mov
popa
aad
test
dec
loop
cli
push
dec
xchg
xor
and
sbb
mov
sbb
out
dec
fimuls
rep
jmp
push
testb
cmp
out
leave
push
sub
enter
popf
add
movsb
mov
or
push
stc
shll
mov
pushf
ret
icebp
lret
das
mov
adc
jle
fst
xlat
into
pop
hlt
sub
pusha
jnp
push
arpl
ljmp
push
dec
mov
and
and
in
fisubs
mov
dec
push
sbb
stos
sbb
sbbl
hlt
xchg
dec
and
dec
cmp
lret
adc
adc
repz
jnp
rorl
cli
jbe
sti
fcompl
rcrb
stc
mov
xchg
out
jecxz
mov
imul
mov
enter
sti
arpl
fldenv
inc
push
loop
push
lcall
sub
inc
out
mov
loope
mov
pop
fs
iret
outsl
fisubrs
cwtl
jno
push
xchg
jle
push
je
mov
lea
fxch
fucomp
outsl
lret
in
out
mov
aad
mov
fs
jecxz
imul
rcl
out
mov
lahf
ret
adc
mov
sub
add
xchg
pop
mov
mov
xor
jmp
shll
jae
add
sub
inc
arpl
dec
in
test
inc
cmpsb
xor
shr
inc
es
insb
jg
mov
xor
cmp
push
pop
pop
dec
lock
mov
cmc
jg
cmp
repz
test
add
nop
out
dec
std
xchg
arpl
std
jbe
sub
les
jg
mov
xchg
sarb
pop
inc
daa
cmp
imul
cltd
jns
pop
adc
mov
dec
pusha
xchg
cmpsb
pop
fsubl
dec
sahf
sub
mov
cmp
sbb
and
bound
call
jmp
cld
sbb
notb
ret
push
sub
dec
jp
add
push
pop
fnsave
ja
ljmp
or
and
movsl
mov
push
xchg
push
loopne
cltd
jne
xchg
mov
or
lea
push
arpl
cmp
fchs
adc
cmpsl
sub
stc
or
push
lret
mov
pushf
and
mov
jmp
mov
pushf
or
xor
ds
das
sbb
mov
out
rcll
mov
push
icebp
push
mov
test
loope
mov
mov
mov
and
rorl
out
push
rcr
out
in
pop
cltd
sub
jg
lds
int
nop
push
inc
rcr
sbb
ljmp
fisubl
cli
push
test
sub
mov
idivb
lds
pop
loope
xchg
mov
jbe
jae
rolb
inc
test
lods
lret
mov
jo
imul
cmp
pop
pop
insb
jg
mov
data16
faddp
repnz
mov
scas
es
icebp
add
insb
shlb
jbe
out
fsts
sbb
and
and
rcrl
mov
jge
adc
push
mov
or
mov
mov
out
and
sub
sahf
stos
into
dec
daa
dec
mov
cmp
stc
insb
pushf
outsb
repnz
or
mov
call
xor
test
sub
add
pusha
add
push
push
rep
imul
mov
xorb
ret
mov
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
repz
pop
cmp
push
ds
subb
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
stos
ja
ret
add
std
add
add
sub
pop
ficomps
lea
lods
adc
or
out
adc
adc
push
outsl
jne
mov
fwait
shll
mov
repnz
mov
mov
subb
insl
cmpb
leave
bound
dec
jne
push
push
aam
sbb
fldl
test
xchg
cmpl
bound
adc
dec
insl
cmpsb
cmpsb
push
ret
rclb
pusha
push
pop
push
mov
add
xor
inc
mov
mov
and
jl
pop
addl
lods
addb
mov
fs
dec
and
xor
stos
lock
mov
loopne
rcrb
es
aas
cltd
popa
or
mov
into
frstor
popa
xchg
jge
cmp
add
or
in
mov
lock
lods
clc
xchg
add
inc
mov
cmpsb
xchg
xlat
push
xor
add
loope
pop
enter
or
pop
and
fidivrs
push
mov
bound
pop
add
mov
xchg
push
jne
out
dec
fcompl
or
jg
scas
mov
inc
xchg
mov
std
pop
loop
sbb
and
pop
pushf
mov
sub
lcall
in
lret
inc
or
dec
bound
mov
push
sahf
adc
loopne
bound
fisttpl
cmp
xchg
fbld
imul
or
or
out
enter
sbbb
vmread
mov
fisubl
cmp
pop
rorl
in
pop
inc
mov
mov
dec
fildll
dec
sahf
jnp
mov
push
bound
mov
sub
add
hlt
lods
in
xchg
pop
adc
lods
idivl
and
loopne
gs
in
push
les
adc
adc
scas
dec
jns
add
ja
idiv
jg
mulb
lea
add
add
ret
movsl
jecxz
jge
sbb
rcl
mov
insl
das
daa
movsl
ror
das
cs
xchg
js
imul
rorl
cwtl
and
test
movsl
rcrb
outsb
cmpsl
mov
push
jmp
sahf
xor
out
xor
lods
ret
loope
mov
jle
or
xor
jns
push
adc
out
pop
xlat
jbe
data16
xor
nop
jo
adc
and
add
int3
in
icebp
push
jmp
lods
add
repz
iret
push
sahf
xchg
sbb
les
js
addr16
xchg
and
cs
lea
aad
addr16
pop
iret
ss
push
xor
fucomp
fstpt
movsb
dec
iret
stos
addl
mov
sub
ja
push
jne
or
jbe
pushw
js
pop
nop
les
xor
mov
imull
stc
pusha
imul
nop
adc
mov
mov
inc
mov
xchg
sub
or
btc
xor
push
hlt
stos
sub
sahf
jae
cmc
adc
pop
shlb
push
std
ret
faddl
mov
xchg
cmc
mov
mov
push
pusha
push
mov
in
pop
cltd
fisttpl
push
pop
sbb
fldcw
pop
jle
repnz
pop
adc
subb
jnp
mov
sbb
push
pop
rcr
xchg
test
cs
sub
and
insb
xchg
sbbb
or
and
daa
jns
mov
pop
jecxz
mov
and
push
outsb
pop
xor
icebp
loopne
pop
ljmp
scas
push
jbe
aaa
cwtl
inc
icebp
mov
pushf
divl
nop
or
aas
add
and
mov
icebp
pop
add
filds
add
add
sbb
pop
std
jg
les
add
add
mov
xor
xor
push
xchg
xchg
aas
inc
cli
cs
fdivrl
mov
pop
push
pusha
test
lahf
and
int3
push
cmp
xchg
test
adc
in
cmp
inc
in
adc
lea
pop
and
push
mov
pop
dec
stos
setno
mov
jns
adc
mov
in
adc
jmp
rorl
das
lret
sti
pop
sub
sbb
adc
ret
xchg
xor
mov
adc
fsubs
sbb
aas
maxps
setle
lods
pop
xchg
icebp
push
push
jecxz
sub
lods
mov
xorb
push
scas
jl
ds
arpl
or
out
cmp
ljmp
lcall
hlt
push
sub
arpl
jmp
out
jne
cmpsl
mov
sub
mov
or
in
leave
pop
je
shrl
in
mov
mov
je
push
push
cmp
dec
mov
sub
jmp
fwait
push
mov
jg
jne
push
mov
add
sub
test
pop
sbb
xchg
push
outsl
lds
sbb
lea
mov
imul
test
das
daa
push
sti
jbe
loope
ret
push
aad
insl
popa
jno
movsb
mov
das
or
filds
xchg
add
pop
cltd
xchg
fists
roll
add
mov
xchg
lock
mov
inc
out
subb
pop
insl
lcall
pop
into
int3
xchg
dec
lods
mov
sub
dec
push
movsb
and
sub
movsl
jno
sub
pop
test
mov
pop
pop
push
mov
dec
jno
imul
sbb
xchg
pop
add
add
add
mov
int
mov
mov
add
add
add
xchg
cld
or
lret
add
std
mov
mov
xor
mov
loope
mov
adc
adc
cmp
cmp
sub
pop
inc
fsubs
pop
test
pop
jae
mov
jp
addl
lahf
mov
lods
push
test
test
or
out
sub
jmp
loope
sbb
test
scas
test
divb
pop
popa
adc
xor
pop
or
jle
xor
lret
rorl
mov
adc
addb
in
sub
sub
stos
daa
cmpsl
lods
mov
cli
mov
dec
xchg
mov
mov
sbb
loope
cs
pop
fadd
mov
push
nop
outsl
addr16
xchg
cld
jae
push
fisubs
cmpsb
jl
add
xlat
aam
add
lock
and
mov
fildll
ljmp
aad
imul
dec
pop
mov
cmp
sub
mov
pop
and
push
dec
aad
pop
adc
pushf
inc
mov
xor
repz
sahf
sti
push
lds
xor
cmp
adc
push
enter
mov
sti
push
ds
or
aaa
jl
and
lods
jge
and
gs
ss
push
pop
loope
xchg
adc
cmc
andb
mov
aas
or
push
mov
xchg
xchg
jne
push
je
jbe
cwtl
mov
mov
jp
mov
popl
fwait
addr16
hlt
aaa
sbb
jl
ljmp
inc
iret
adc
mov
xor
aad
fmull
push
cs
aad
loopnew
lahf
mov
stc
scas
pop
ja
enter
imul
pop
incl
fisubrl
add
add
hlt
mov
std
jl
xor
jg
in
in
sbb
mov
add
add
add
jne
stos
lret
std
loopne
adc
mov
push
pop
adc
cmp
loop
fidivs
sti
aaa
or
jp
ret
inc
aas
out
push
xchg
enter
aaa
xor
jbe
pop
clc
lret
add
outsb
mov
push
jge
mov
jecxz
jp
pop
xor
orb
dec
mov
jae
cmp
lcall
push
cmp
push
daa
insl
mov
andl
cmp
cs
or
pop
push
sub
in
sbb
adc
into
jns
cmp
push
mov
add
mov
pop
popf
cmpsb
lods
mov
xchg
xor
add
dec
bound
add
movsl
sub
jb
inc
insb
cmpsl
jb
sbb
push
fcoml
mov
xchg
dec
fdivl
test
gs
je
mov
mov
mov
in
mov
jnp
aam
popf
inc
and
idivl
or
paddusw
les
jg
pop
sbb
fxch
add
in
and
int
dec
or
add
sbb
pop
sbb
ds
iret
es
push
out
loopne
mov
out
arpl
imul
cmp
pusha
sbb
sbb
mov
repnz
orl
pop
jl
cmp
add
outsl
bound
aaa
mov
stos
jnp
mov
lods
int
xor
outsl
sbb
popa
les
or
rcrb
jnp
or
dec
jl
popa
mov
out
sub
adc
sub
mov
and
imul
sarb
stos
mov
into
dec
inc
shrd
repz
mov
cmp
cmp
stc
pop
les
mov
xchg
jno
and
lcall
push
iret
sbb
xor
in
mov
add
add
add
add
imul
fdivrl
jg
mov
add
add
mov
dec
ds
xchg
push
inc
int3
sarl
push
loop
arpl
push
or
dec
clc
adc
inc
and
cltd
out
and
dec
mov
xchg
or
jl
sbb
mov
rol
lret
ds
xchg
sub
xor
mov
xchg
arpl
pusha
mov
es
ret
out
test
outsl
cltd
sub
cmp
adc
ficoml
ljmp
sub
cltd
aad
mov
mov
js
mov
jg
insl
fcomps
xor
icebp
xor
mov
cmp
enter
mov
add
or
xchg
icebp
lock
mov
adc
dec
and
test
adc
jg
fisttpll
xchg
ds
loope
push
loop
xor
insl
and
lea
pop
sarb
lahf
dec
int3
in
dec
fsubr
mov
movsl
pop
xchg
in
lcall
test
push
jns
sbb
cltd
idivl
inc
orb
popf
inc
movsb
add
inc
mov
mov
repz
in
out
adc
ja
dec
in
inc
xlat
mov
sbbl
lds
xchg
mov
lods
ja
orb
add
add
push
cmp
imul
fsubrl
je
inc
pusha
push
push
std
jb
xchg
sub
inc
pop
and
outsl
xchg
mov
add
insb
sub
or
mov
or
lret
xchg
push
cltd
popf
pop
shr
push
int3
or
fs
sub
push
nop
test
cli
mov
jmp
or
mov
cmp
in
mov
mov
loopne
in
sbb
mov
jno
out
rcll
xchg
xor
rcl
imul
pop
mov
lods
mull
push
xchg
add
add
jg
pop
fstps
testb
add
sbb
xor
movsl
mov
clc
dec
hlt
imul
popa
fisttpll
jae
iret
inc
cs
insb
push
insl
incl
xchg
or
cmp
mov
loop
mull
pop
sbb
addr16
sbb
or
loop
sub
pop
add
andl
out
inc
dec
filds
pop
test
mov
and
fmul
outsl
xor
push
jo
or
shrb
cmp
xchg
sbb
imul
out
dec
int
jmp
push
popf
add
or
bound
jg
dec
stos
pusha
jmp
mov
push
xor
mov
insb
mov
fwait
rolb
mov
jno
cmp
cmp
outsl
pop
jmp
hlt
fs
insl
loop
int3
fwait
inc
test
sbb
mov
and
aad
xor
jb
sti
inc
stos
shl
cmc
adc
shll
sbb
pop
addb
lock
xchg
in
pop
jo
mov
mov
mov
das
xor
popf
sbb
cli
into
stos
mov
mov
push
mov
sub
popf
cmp
mov
xchg
clc
loope
cmp
mov
or
mov
sub
mov
mov
data16
cmp
cmp
fldt
stos
fidivrl
pop
mov
and
cmpsl
mov
inc
and
into
mov
rcll
jnp
ljmp
adc
jno
aaa
and
xor
xor
cmp
fdivp
push
fwait
pop
ljmp
test
cmp
cld
mov
adc
add
cs
cmp
fwait
cmp
xor
fidivrs
lods
jb
and
jne
ja
out
add
add
cmc
fistpll
movsb
fidivl
cmp
mov
std
add
add
adc
pop
xchg
stos
cwtl
push
outsl
xchg
xchg
out
cwtl
sub
xor
lods
enter
jg
call
cmpsl
cltd
push
xchg
sti
stc
xor
inc
aas
mov
das
sahf
mov
addr16
xor
pop
shll
pop
pop
imul
push
scas
mov
les
outsl
vmread
push
iret
inc
popf
incl
or
pop
sbb
aam
push
xchg
jnp
hlt
in
hlt
pop
mov
rol
out
popf
lds
mov
mov
or
push
pop
lret
shr
jnp
jl
pop
push
movsl
sub
fwait
std
test
jae
callw
push
adc
call
cmp
rclb
push
inc
out
ss
pushf
mov
lods
jns
jo
add
jb
jge
push
iret
in
stos
arpl
push
dec
inc
idivl
mov
movsb
outsl
cmpsl
movsb
dec
sbb
ret
or
jb
pop
jg
cli
out
cmp
lods
add
inc
xchg
jecxz
pop
repz
mov
mov
lcall
addr16
bound
int3
rcrl
push
mov
stos
jns
mov
add
ja
push
xchg
mov
rcrl
mov
cs
scas
loope
xchg
fisubl
std
or
jl
jp
cmpsb
jb
sti
mov
mov
inc
outsl
dec
jmp
jge
sub
insb
das
clc
and
jno
pop
mov
xor
cmp
dec
inc
nop
aam
aad
or
negb
or
mov
dec
in
sahf
cmc
lds
scas
stc
jge
pop
and
insl
enter
mov
xor
xor
rorb
xor
cmp
mov
loope
mov
mov
pop
sub
aaa
pop
sti
xor
or
mov
mov
add
and
movsb
lea
sub
testb
add
std
add
add
clc
pop
int3
mov
push
and
ds
jbe
dec
mov
loopne
call
ljmp
insl
xor
pop
aaa
fcmovnb
sub
jmp
jge
lods
pop
pop
loop
outsl
popf
popf
push
insb
testb
es
mov
add
addr16
mov
jae
in
pop
divl
inc
or
push
adc
add
cld
inc
ficoms
jne
pop
rorb
mov
cmp
ret
mov
inc
inc
shl
sbb
mov
mov
enter
fs
fisubrl
cmp
sbb
ret
pushf
xchg
scas
mov
in
dec
add
frstor
xchg
out
inc
xchg
shll
jle
inc
pop
ja
push
cmp
psubq
das
bound
stos
add
xchg
push
rol
test
mov
mov
sub
inc
or
xchg
mov
xor
stos
inc
or
or
jb
mov
ds
aam
dec
pushf
cmp
adc
mov
repz
mov
push
cmp
outsl
xor
and
sahf
mov
lahf
push
ficoms
push
repnz
in
xchg
loope
js
xor
mov
pop
push
mov
push
insb
adcl
fwait
in
jle
jno
rol
or
call
outsl
lds
fwait
bound
icebp
add
sub
je
and
mov
in
es
or
jmp
lods
xor
and
adc
mov
cmc
aas
xor
aas
aaa
jae
lds
sub
mov
mov
gs
sub
sbb
mov
sub
sbb
cmc
xchg
adc
adc
or
push
sub
sub
in
in
inc
lret
pop
xchg
sbb
pop
sahf
inc
xor
lock
or
pop
add
add
test
mov
inc
in
xchg
add
std
add
add
push
rcr
jbe
adc
dec
mov
inc
test
fisttps
mov
lods
mov
lret
jo
sbb
dec
or
shll
pop
rorb
sbb
and
dec
adc
mov
push
or
push
cmpsb
shll
push
sti
sbb
mov
push
cli
push
fcmovb
ret
xor
dec
insl
xchg
das
dec
adc
xchg
push
push
add
aas
loope
xchg
or
repnz
mov
scas
lods
je
sub
sbb
int
jns
sbb
cmp
mov
mov
jecxz
mov
fcompl
xchg
inc
mov
mov
out
test
div
and
mov
int3
cli
add
mov
pushf
xchg
or
xor
pop
cmp
ror
hlt
sub
and
aad
push
sbb
pop
jl
xchg
push
test
jp
loope
nop
and
sub
and
mov
mov
mov
dec
pop
sub
cmp
mov
in
js
out
xlat
lret
and
jne
and
mov
xchg
imul
lods
pop
je
imul
mov
jge
ss
add
in
int
ret
imul
addl
mov
cmp
sub
sbb
xchg
cmp
cs
js
shl
cmp
stos
jno
test
xor
cltd
jb
xor
jbe
adc
cs
xchg
fsubrl
inc
std
mov
mov
insb
out
jg
pop
cltd
xchg
add
xor
or
pop
into
add
push
xor
loope
jecxz
mov
jecxz
or
mov
push
sbb
cmpsl
pusha
dec
int
aas
mov
dec
gs
movsb
cmp
push
inc
dec
sub
sarb
jne
je
xchg
pop
les
mov
ljmp
sub
adc
add
test
xchg
std
jg
mov
inc
pop
ljmp
add
jmp
xchg
fcmovne
or
imull
stos
clc
adc
mov
mov
jge
loop
test
bound
cmpsl
sub
cmp
les
mov
adc
push
arpl
insl
daa
inc
adc
xor
test
sbb
loopne
and
andl
mov
push
cld
dec
mov
xchg
jne
test
xchg
pop
test
and
inc
stos
mov
cld
add
and
lods
sub
insl
jo
data16
shl
dec
xor
fistpl
cld
aas
xor
loop
jecxz
addr16
shl
or
fisttpl
pop
in
jne
xor
testb
jno
ja
lods
jo
lods
sbb
mov
xlat
movsb
fs
test
jbe
xchg
mov
xor
sbb
out
mov
pop
sub
sbb
mov
popf
clc
cmpsl
xchg
add
inc
cmc
fninit
gs
cs
testb
repnz
push
xor
cs
push
loop
clc
add
daa
pusha
fsubl
mov
jne
dec
bound
xchg
lret
scas
enter
pop
or
adcl
mov
jmp
mov
or
sub
jp
xchg
stc
add
scas
mov
fiadds
lahf
ljmp
std
fdivl
cmc
aad
sbb
adc
lcall
inc
xor
loop
mov
mov
lret
iret
in
mov
outsl
pop
xchg
xor
xlat
icebp
xchg
pop
insb
mov
push
add
push
and
leave
fs
pop
jae
xchg
fucom
and
mov
lahf
scas
xor
fidivrl
sbb
leave
icebp
ja
mov
cmp
mov
mov
or
out
push
ds
lods
shll
xor
stos
test
pop
sarb
fldl
add
mov
idiv
iret
rorl
icebp
fidivrl
out
add
std
add
add
mov
testb
mov
cmpsb
fimuls
lret
aaa
imul
jb
or
and
inc
mov
jbe
mov
mov
mov
xchg
lret
cld
add
inc
add
cs
sarl
sub
inc
xor
hlt
or
lret
mov
xchg
sti
mov
int3
cmp
into
add
fiaddl
sub
hlt
jecxz
xchg
paddd
and
stc
sub
pop
pop
in
out
cmp
sti
mov
loop
daa
lock
sbb
inc
cmp
jecxz
fimull
test
xor
pop
or
pop
test
inc
and
push
das
dec
inc
imul
cmpsl
mov
dec
enter
sbbl
aaa
jae
out
fsts
popa
xor
ds
fildll
pop
push
adc
push
adc
iret
inc
inc
mov
icebp
jns
cmpsb
or
std
lret
mov
push
loop
es
test
push
xor
mov
add
jne
xor
push
test
sbb
orl
add
and
fsubs
xor
pop
cmp
cmp
or
cmc
pusha
loopne
dec
jge
cmpsb
and
imul
cmpl
cmp
add
repz
pop
cmp
adc
std
sub
lock
std
jge
jmp
hlt
shlb
xlat
ja
push
pop
enter
lods
or
lahf
mov
shrb
inc
in
sub
loopne
jmp
repnz
out
lea
and
cmp
sub
insb
mov
in
cmp
push
jecxz
jnp
ror
push
xor
adc
jo
cmp
xchg
xchg
repnz
movsl
jnp
pop
dec
and
xchg
push
rclb
or
icebp
jns
lret
push
lret
pushf
lret
mov
sbb
jle
movsl
sar
dec
pop
add
add
out
ret
mov
ja
or
movsb
fsts
in
add
std
add
add
ds
mov
out
or
out
cmp
sub
test
movsb
orl
fdivs
aaa
or
cwtl
xchg
loope
and
xchg
mov
cli
dec
inc
jl
mov
mov
xor
stos
and
xchg
mov
mov
test
cmp
fildll
fsubl
pusha
or
outsb
adc
jecxz
out
mov
test
or
xor
popl
jne
push
cs
out
add
jae
je
fwait
iret
js
sgdtl
loope
bound
cmc
add
add
push
pop
sbbb
in
pop
andl
pop
lock
inc
insl
dec
jae
gs
out
fldenv
dec
test
outsb
hlt
divl
inc
xor
pop
mul
xchg
sub
sub
nop
stos
mov
dec
sarb
call
xchg
mov
insb
push
push
leave
inc
mov
and
push
ljmp
dec
subl
movaps
inc
cmc
aad
popa
or
dec
xchg
fs
es
cmp
stc
dec
xchg
xchg
testb
test
jmp
lahf
inc
pop
cmp
loop
inc
add
subl
push
xor
test
fwait
pop
sub
stos
push
aam
repz
ja
push
dec
sahf
jle
data16
test
hlt
cmp
ljmp
clc
pop
jecxz
cmp
sbb
pop
in
pop
insb
ljmp
jno
xchg
nop
mov
jp
cwtl
es
fildl
rolb
inc
xchg
cmp
arpl
xor
mov
push
cmc
sub
push
popf
mov
out
out
sub
cmp
popa
or
fiadds
out
ror
ja
lods
inc
mov
push
xchg
js
or
ja
mov
mov
dec
pop
sub
sub
imul
mov
add
add
push
jle
xlat
lret
push
testl
pushf
add
std
add
add
add
lods
aaa
enter
lret
fnsave
mov
insb
jmp
xchg
jl
inc
insb
add
bound
scas
push
test
nop
add
cli
push
shrb
pusha
out
iret
jge
dec
or
aam
sbb
mov
sub
ret
and
int
loope
movsl
lds
cmp
mov
aad
lock
jge
data16
pop
pop
mov
lcall
jp
lock
add
inc
loop
lock
mov
jge
int3
jnp
inc
loope
roll
divb
shlb
pushf
popa
adc
fwait
mov
push
xchg
scas
lods
sbb
lods
dec
mov
xchg
xchg
outsl
adc
or
loopne
and
orl
lcall
add
pop
out
insl
inc
xchg
adc
movb
add
jbe
lods
mov
jo
sub
in
into
mov
lea
mov
lods
sbb
inc
push
push
mov
shll
mov
push
cs
setbe
fstl
mov
cwtl
cltd
pushf
add
rolb
jl
sub
jbe
cmp
sahf
into
mov
sbb
add
outsl
push
sub
lea
sbb
jp
xor
cmpxchg
pop
ror
out
mov
stc
and
addr16
mov
arpl
cmp
adc
lds
add
shl
bnd
mov
arpl
addr16
add
inc
xchg
xchg
adcb
out
jmp
xchg
and
shl
add
cmp
xchg
shlb
mov
stc
out
or
add
add
add
add
push
or
pop
out
repz
fucomp
xor
or
ficomps
add
in
sbb
cmp
pop
sbb
aad
jno
out
das
cld
sbb
in
sahf
cld
push
mov
cmp
fnstcw
imul
repz
mov
sbb
sbb
nop
punpckhbw
lcall
jp
bound
stc
repz
jmp
adc
das
inc
ljmp
add
loop
int
aam
sub
push
fs
cmpsb
shll
mov
pop
xor
jne
jno
pop
xor
cmpsb
jno
lods
xchg
xchg
add
ror
jno
mov
in
lahf
inc
movsb
mov
sbb
xor
push
sbb
imul
sbb
push
and
or
insb
dec
addr16
dec
jb
loopne
sub
in
xlat
jne
or
push
and
fildl
xchg
jle
icebp
in
sbb
jno
lods
repz
mov
sbb
clc
test
mov
lahf
push
ljmp
mov
adc
pop
adc
hlt
fmul
insl
in
add
sbb
dec
cmp
cld
cmp
jge
and
ss
nop
dec
add
jg
inc
leave
out
mov
sbb
inc
idivb
jns
push
arpl
dec
or
xchg
pop
xor
fwait
inc
lods
or
mov
push
fs
mul
imul
mov
dec
xchg
sub
mov
shrl
imul
dec
ja
in
cmpsb
scas
mov
lret
loope
shlb
loope
subb
lods
pop
pop
mov
mov
sbb
scas
repnz
pop
sysret
cmp
shlb
mov
jo
insl
push
aas
mov
rclb
cwtl
mov
call
cmpsl
sub
leave
xchg
insl
mov
out
nop
sbb
mov
add
pop
add
jl
or
sbb
fwait
push
clc
movsl
into
ljmp
xchg
jg
shrl
sti
out
loope
xchg
ret
add
dec
cmpsb
cmp
xchg
sub
scas
inc
js
push
mov
pop
mov
add
add
cmp
repz
ret
cs
rcrl
pop
imul
jp
sbb
aad
out
lods
push
mov
mov
fstl
insb
inc
popf
fisubs
repnz
loope
pop
sub
push
outsb
inc
pushf
pusha
cmp
movsl
cltd
or
shlb
or
add
sub
or
and
add
rorl
jae
div
insb
pop
lds
hlt
mov
pop
jnp
call
ret
and
andl
popf
or
aas
mov
adc
adc
sbb
inc
sbb
add
ja
add
mov
scas
xor
push
call
jb
mov
movsl
xchg
xor
and
jle
xlat
movsb
or
and
push
out
push
pop
push
xlat
dec
aam
pusha
int3
inc
es
js
mov
adc
mul
test
es
data16
cmp
int3
push
repnz
inc
movsb
or
mov
add
movsl
fidivs
sti
rclb
in
cwtl
sti
out
mov
pop
jo
xor
inc
mov
dec
out
and
data16
mov
aaa
xchg
sub
insb
inc
sbb
jl
add
push
cmpsb
push
jbe
es
xor
movsb
add
aad
pop
repnz
sub
and
je
xchg
jae
ds
mov
popf
nop
pusha
jmp
imul
sub
cmp
inc
xorb
test
mov
add
dec
out
ja
idiv
pop
out
cmp
insl
sub
mov
add
mov
or
ds
sbb
push
mov
iret
mov
aad
call
roll
shlb
out
adc
add
fisttps
ljmp
xchg
cwtl
pop
push
addl
js
mov
push
xchg
dec
and
mov
mov
rorl
ret
push
cmp
mov
leave
mov
in
or
in
or
int
xor
loopne
mov
pop
shrl
sahf
dec
sbb
mulb
cmp
loop
popf
stc
sbb
or
mov
rcl
jbe
repz
xchg
sbb
adc
ret
fimuls
lock
or
dec
add
icebp
mov
mov
fwait
push
add
sub
addr16
xchg
int
out
fisttpl
cmp
in
mov
je
sbb
ljmp
outsb
pop
mov
fwait
test
in
xchg
add
js
cli
mov
jg
mov
daa
out
ret
test
or
mov
out
mov
or
outsb
adc
xor
icebp
mov
mov
push
and
dec
fstpl
or
xor
insb
fldcw
jb
and
test
call
popa
xchg
stos
addr16
pop
subb
inc
add
add
das
lods
int
cmp
sub
or
mov
sbb
sub
sbb
mov
fnstcw
sbb
icebp
aaa
mov
sub
ljmp
mov
je
ljmp
and
js
mov
sbb
jmp
push
fisttpl
adc
je
inc
fisttpll
cli
cmp
cli
jge
jle
mov
pop
add
add
sti
mov
inc
bound
add
add
add
sti
lahf
and
mov
sub
loope
movsb
iret
sbb
scas
lret
outsl
loope
adc
js
dec
insb
sti
and
jmp
sbb
lahf
pop
push
mov
push
jmp
scas
pop
movsl
mov
test
roll
push
sbb
push
jmp
idivl
mov
xor
mov
data16
xchg
repnz
cld
out
ss
mov
sub
enter
sarb
pop
adc
push
dec
jbe
sahf
enter
popa
add
push
inc
xor
mov
sets
add
mov
jmp
je
and
fcmovb
cmpsb
or
sti
push
cmpsb
insb
jmp
add
lock
xchg
xchg
push
addl
mov
in
out
rclb
loopne
cmp
cmpsl
push
hlt
fcomps
test
repnz
mov
mov
push
or
jno
pop
cmpsb
inc
cltd
jmp
enter
sub
mov
stos
adc
andb
leave
aaa
sbb
scas
push
push
loop
jp
test
cwtl
std
mov
je
std
and
imull
mov
lret
sbb
popa
mov
stc
mov
repnz
cmpsb
aad
lock
push
adc
sub
mov
mov
imul
add
mov
adc
sar
jmp
sub
mov
push
out
mov
fimull
xchg
adc
mov
lret
sub
push
pop
and
jne
pop
insl
jne
and
testl
add
hlt
or
mov
int3
mov
in
and
dec
addl
push
cli
lock
outsl
dec
jl
add
cs
daa
sub
pop
xchg
and
jnp
fists
ret
jecxz
imul
xchg
loopne
xchg
mov
inc
insl
pushf
lea
xor
sahf
xor
sub
int
mov
cmpsb
add
std
add
add
aad
add
and
iret
shll
adc
int3
fisubrs
scas
aas
les
mov
dec
pop
mov
add
adc
mov
sub
std
inc
inc
jae
gs
xchg
sahf
test
jecxz
jae
mov
dec
mov
leave
cmp
pop
adc
jl
fsubs
mov
mov
xchg
sarb
xchg
movsl
adcb
mov
mov
pusha
movsl
pop
sub
mov
sahf
or
cld
push
es
sub
les
add
testb
nop
pop
incb
int
xor
iret
cwtl
mov
addr16
aas
dec
loop
out
xor
enter
xchg
mov
hlt
xor
movsl
dec
movsl
dec
add
movsl
jo
mov
arpl
fnsave
xor
mov
rorb
cli
lcall
dec
sub
lea
std
mov
pop
pop
lods
in
sub
popa
icebp
cmp
rclb
fsubs
test
rorl
roll
mov
cs
arpl
add
cwtl
dec
and
cmp
push
xor
int3
mov
jmp
push
mov
in
out
or
push
mov
push
mov
mov
test
aam
mov
movsl
push
fildl
inc
cmpb
enter
and
es
stos
cmp
cmpsl
stc
les
cli
dec
int3
dec
push
push
inc
jns
leave
sub
jecxz
fisttpl
jp
jl
call
lret
mov
fcomip
roll
mov
cmp
loopne
mov
outsb
mov
inc
xchg
xchg
jae
jne
cmp
cmpsb
mov
xlat
mov
or
insl
daa
sub
sub
add
add
add
add
std
in
mov
mov
std
cmp
out
iret
test
add
add
add
repnz
dec
xchg
or
inc
das
scas
dec
mov
ficompl
mov
push
int3
leave
test
orl
xor
mov
cli
ds
ret
sub
into
imul
sbb
mov
outsb
sahf
pop
mov
pop
adc
scas
and
and
lcall
or
mov
cmpsb
fcoms
inc
pop
sahf
push
ret
cmc
mov
push
lods
push
sbb
mov
lds
aas
inc
jne
lcall
or
sahf
mov
mov
pop
jnp
lock
pop
push
jbe
pop
fistpll
mov
or
punpckhbw
add
cmp
push
mov
and
jne
fimull
in
jns
adc
mov
xchg
pop
lret
pop
add
sbb
xor
sub
adc
fisubrs
imul
xor
mov
sbb
es
xor
adc
outsl
shl
out
jo
adc
pop
lahf
inc
in
mov
fwait
xchg
xor
in
imul
icebp
mov
incl
inc
nop
mov
push
cmp
push
shll
inc
push
lret
call
repz
loope
pop
outsb
xchg
mov
lahf
scas
pop
inc
add
mov
test
xor
loop
pop
or
dec
push
nop
cli
outsb
das
in
repz
cmp
xor
dec
test
fcoml
pop
leave
or
xor
dec
out
mov
adc
xchg
lret
xchg
mov
stos
enter
in
fnclex
lock
pop
and
mov
add
push
push
std
mov
aad
inc
lret
pop
pusha
cmp
stc
sbbb
or
pop
xchg
cmp
in
ja
iret
dec
insb
jg
data16
adc
jo
xchg
push
cmp
sti
push
and
dec
add
add
rolb
testb
inc
jo
mov
int3
stos
add
std
add
add
fcmovnu
arpl
cwtl
xor
pop
in
icebp
add
fadd
inc
orb
popa
add
cmpsl
or
cmpsl
sbb
inc
cwtl
sbb
call
mov
lods
pop
fwait
inc
pop
mov
lea
nop
in
mov
mov
outsb
test
imul
push
test
jl
and
sub
dec
inc
sub
dec
insl
mov
push
lahf
jge
mov
and
fs
fists
in
into
dec
and
xorb
cmovp
cmp
pop
jo
fdivs
outsl
in
or
out
call
das
arpl
lahf
cmp
and
dec
fistl
js
rcrl
mov
icebp
leave
xlat
and
jg
in
repz
jnp
bnd
pop
aas
jge
push
aad
jbe
sbb
pop
jns
sub
sub
jp
xchg
repz
icebp
out
jae
mov
call
sub
lea
les
out
cwtl
out
std
jg
xchg
das
cmp
pcmpeqd
xlat
dec
xchg
fwait
shll
test
cmc
imul
and
adc
lret
hlt
test
mov
outsb
jo
pusha
cltd
shll
cltd
repz
imul
sbb
bound
xchg
push
jl
sti
add
cmp
cwtl
mov
pop
dec
push
jno
xor
call
inc
mov
mov
bound
add
outsl
sahf
xor
lods
popf
xor
es
mov
mov
add
cmp
mov
adcb
fsubrs
mov
add
aam
jmp
cltd
jle
jbe
dec
adc
in
shrl
lds
or
adc
mov
ret
add
add
inc
inc
popa
data16
gs
mov
outsb
imul
lods
add
std
add
add
cwtl
mov
fwait
test
xchg
pop
mov
out
pop
lcall
imul
out
addb
sub
and
adc
cmc
sbb
xor
mov
adc
jge
into
loope
cmpsb
or
mov
out
je
daa
sub
adc
adc
mov
sbb
cs
sbb
shlb
pop
mov
jno
sti
jp
orb
sub
inc
or
or
mov
sub
stos
ror
xchg
lds
mov
sarl
jmp
das
jmp
or
mov
aad
pop
xchg
pop
mov
lahf
cmp
lods
xor
pop
cmp
fwait
push
or
repnz
mov
mov
mov
push
xchg
mov
movsb
lea
pop
es
cltd
inc
call
gs
fnstcw
addr16
jne
xchg
mov
dec
test
idivb
inc
inc
scas
test
jg
xchg
mov
leave
pop
cmpsl
shr
ror
xor
cs
mov
mov
cmc
test
ja
idivb
add
cwtl
lds
push
iret
mov
jge
inc
cwtl
bound
sub
sbb
mov
test
inc
xor
je
icebp
mov
dec
adc
repnz
xor
jg
xchg
mov
fbld
dec
cmpsl
dec
imul
fisubrs
adc
cmp
adc
add
sbb
mov
test
xchg
aaa
cli
repnz
dec
int3
mov
dec
mov
dec
and
adc
and
ja
icebp
cmp
fidivs
jl
pop
imul
pop
imul
add
cmp
cli
cmp
adc
xor
bound
add
std
add
add
mov
out
push
fadd
dec
sub
sahf
in
inc
cwtl
aaa
jecxz
and
xor
pop
fimuls
push
and
sti
jnp
xchg
cmp
dec
push
push
test
pop
xchg
xor
sbb
fcompl
hlt
xchg
lods
rol
aaa
xlat
dec
stos
repz
dec
pop
jmp
mov
mov
les
jg
stc
mov
rclb
sbb
cmp
push
mov
push
jp
scas
mov
mov
push
cmc
mov
xchg
or
mov
imul
xor
shrl
xor
pop
imulb
and
addr16
stos
pop
mov
inc
addl
and
imul
inc
lock
push
in
xor
and
xor
xor
cmpsb
jo
loop
lea
dec
inc
cmpsl
push
std
aad
mov
cmp
sbb
dec
mov
push
cli
dec
adc
jne
jb
mov
jb
mov
popa
stos
insl
mov
mov
or
fmuls
push
inc
xor
jns
and
jae
sahf
cli
sub
pop
dec
or
fstpt
pusha
dec
int
jmp
adc
or
gs
or
or
mov
clc
push
pushw
mov
push
push
loop
xchg
mov
mov
movsl
pop
cli
or
in
cmp
aaa
sbb
insl
push
shll
lea
mov
mov
mov
loop
xchg
fldl
jae
clc
lods
rol
pusha
aad
push
adc
inc
in
mov
or
xor
mov
jns
imul
jmp
xchg
lahf
sbb
dec
mov
dec
push
xor
hlt
iret
in
add
pop
subb
mov
sbb
add
shlb
xchg
lcall
cmp
lea
add
std
add
add
cmp
adc
cltd
mov
inc
adc
xor
add
test
data16
mov
sarb
sub
or
push
loope
dec
std
mull
mov
add
mov
stos
scas
popa
ret
icebp
pop
xor
dec
ss
subl
mov
push
inc
jno
push
cmc
aam
scas
movsl
fmull
pop
and
js
orb
shll
aam
mov
scas
sahf
jne
cmp
idivl
rcrb
or
imul
and
push
jbe
and
push
into
idiv
pop
pop
mov
or
xchg
jge
out
repz
jge
enter
outsl
int
add
cmpsl
repz
filds
enter
add
lds
mov
or
inc
sahf
push
lods
shlb
dec
repz
sub
ljmp
hlt
addl
test
insl
inc
mov
lahf
js
or
stos
aas
fcomi
jmp
insb
jmp
sub
xor
lock
push
imul
sahf
scas
inc
shlb
imul
outsl
out
inc
xlat
mov
popf
dec
rcrb
sbbl
outsb
mov
cmp
xorl
pop
mov
data16
xchg
es
js
dec
push
pop
jg
test
xor
jo
mov
hlt
pop
push
xchg
lret
xchg
pop
insl
movsb
fisttpll
jmp
or
jne
pop
jecxz
int
aam
push
mov
js
add
addb
repz
cmp
popa
mov
and
out
and
xchg
cs
cmpsl
and
cmp
cmp
and
add
fnstsw
mov
in
outsb
fs
jo
and
mov
add
add
add
and
xchg
shr
and
mov
sbb
fsubs
or
out
dec
fs
pusha
call
xor
test
sbb
mov
jecxz
fimull
out
cs
xlat
inc
out
in
scas
xor
sub
mov
mov
mov
sbb
jne
pop
dec
test
sub
cmp
cmpsb
pop
xchg
sbbl
imul
sub
xchg
inc
add
cmpb
sub
in
mov
mov
push
addb
push
sbb
call
push
dec
inc
mov
mov
mov
fmuls
les
pop
and
imul
test
inc
loopne
mov
aad
in
mov
test
push
sub
int3
mov
jp
and
int3
rorl
fstl
dec
pop
ss
push
sub
ret
jne
add
outsb
movl
jnp
cmp
cli
or
hlt
lods
xchg
dec
popa
xchg
imul
icebp
xor
popf
shlb
and
loopne
mov
inc
jecxz
mov
jbe
push
xchg
notl
mov
jmp
and
mov
test
sbb
loopne
pop
lods
imul
in
je
xlat
fisttps
push
mov
clc
xchg
mov
ret
and
dec
aad
sbb
cmc
in
setno
pop
fildll
ja
and
sub
iret
imul
cmpsl
and
xchg
rolb
pop
cltd
dec
mov
jbe
xchg
xor
addr16
mov
and
cmp
add
mov
xchg
movsl
es
mov
dec
cltd
mov
and
fs
outsb
in
repnz
int3
lret
add
inc
mov
jb
aam
sbb
add
add
stos
jp
pop
in
pop
sub
filds
xor
mov
out
push
add
mov
insb
sub
in
or
xor
mov
cmp
jecxz
push
hlt
mov
xor
xchg
pop
cmpsl
add
fstps
ljmp
lods
inc
lock
rorb
xlat
lods
ds
lods
adc
scas
movsl
sub
cmp
pop
cmpsb
pusha
cld
push
add
and
jmp
pop
push
into
arpl
icebp
lods
pushf
jnp
push
and
mov
out
faddl
dec
cmp
mov
test
jns
xor
sbb
insb
addr16
xchg
flds
jp
arpl
xor
addr16
mov
push
out
jb
repz
mov
mov
push
int
sub
xchg
cmp
shlb
jns
jne
cmp
and
sbb
inc
pop
outsl
inc
cs
lahf
mov
fmull
jbe
sahf
fs
in
mov
mov
scas
aas
es
xor
aad
mov
inc
cmpsb
push
pusha
dec
mov
or
cmp
les
dec
add
inc
pop
mov
loopne
mov
fisttps
jge
mov
mov
mov
add
adc
arpl
popa
data16
rolb
mov
sbbb
cs
int3
lret
aad
cmp
xchg
push
cld
mov
nop
leave
sbbl
insb
into
push
pop
das
sbb
and
fisubl
push
mov
mov
push
add
jb
push
xor
xchg
pop
jns
push
jns
rorl
sarb
pop
jecxz
mov
cld
mull
inc
int
inc
push
loopne
dec
dec
int
div
mov
outsb
pop
test
cld
scas
fcmovb
jbe
push
iret
lock
loopne
pop
in
in
gs
or
add
clc
mov
cmp
mov
ja
nop
mov
add
add
push
gs
les
inc
aas
and
pushf
mov
xchg
mov
lret
jge
add
sbb
bound
or
inc
and
out
enter
cltd
shrl
xor
push
pushf
pop
push
pop
subl
fwait
mov
dec
xor
outsl
dec
aas
pushf
mov
sahf
sti
mov
fld
inc
movsb
out
test
push
xchg
arpl
testb
lods
xor
pop
jbe
add
pop
and
fcomi
jge
pop
sbb
iret
out
shl
mov
xor
aad
xor
mov
mulb
cmp
sbb
mov
scas
adc
or
jnp
push
lret
dec
hlt
sbb
arpl
xor
imul
aad
imul
fsts
imul
inc
fidivrl
repnz
jae
xchg
cmc
jae
in
mov
mov
add
jb
mov
shll
dec
or
lock
iret
bound
ret
enter
data16
adc
nop
popa
test
xchg
test
lret
xor
out
aam
sub
xchg
adcl
js
sub
and
iret
cmc
mov
les
inc
mov
push
daa
xchg
push
dec
push
sti
test
int
xchg
out
sub
test
loopne
jmp
hlt
imul
in
pop
xor
fs
inc
push
xchg
cwtl
sbb
loope
and
sbb
fimull
cld
jl
imul
inc
jnp
add
dec
insl
mov
adc
aaa
or
pop
inc
rorl
cmp
enter
es
stc
sub
add
jns
mov
jg
int
ficompl
inc
in
push
or
mov
sti
pop
ljmp
sbb
sub
jl
sub
add
add
sbb
out
idivl
test
xorl
add
add
add
mov
fadd
inc
int3
jl
fldl
cmp
adc
lahf
in
stc
adc
jns
sahf
shrl
cwtl
push
inc
xchg
subl
ja
sbb
dec
rol
jnp
pop
sbb
cltd
addr16
int3
push
cmpb
aaa
in
mov
push
outsb
push
mov
push
mov
push
ficomps
jmp
jp
dec
mov
pop
or
mov
inc
faddl
sub
jne
mov
in
out
icebp
fisttpll
xor
rcrl
inc
jbe
pop
es
mov
push
sub
xchg
mov
jno
fldl
adc
ja
fs
pop
ret
add
jp
xchg
push
popa
rorb
pop
mov
and
push
in
pushf
inc
gs
or
xchg
sbb
stos
xchg
lods
and
adc
pop
in
pop
adc
and
add
jbe
dec
xchg
testl
aaa
cmp
cmp
xchg
repz
gs
call
push
bound
xor
jmp
repz
cmp
arpl
subb
test
outsl
stos
and
add
or
jo
call
inc
insb
mov
jae
cltd
inc
dec
test
adc
lods
not
subb
inc
sub
xor
into
add
jl
mov
pop
shl
fstp
xchg
mov
ret
daa
or
popa
and
and
xchg
add
xor
inc
pusha
xchg
repz
push
sub
pop
xor
inc
push
and
sahf
sbb
cmp
lret
mov
mov
in
adc
imul
outsl
mov
lahf
xor
pushf
push
into
mov
push
mov
pusha
or
lock
add
sbb
fsin
out
fs
popf
outsb
fbld
xchg
mov
add
std
add
add
sti
add
scas
mov
in
xchg
cmp
add
adc
push
add
mov
jge
mov
dec
cli
inc
ror
in
adc
arpl
test
inc
and
mov
push
leave
ljmp
cwtl
lcall
cld
sbb
push
sub
lret
or
addl
fidivs
cmp
sti
scas
and
mov
popl
aam
lret
das
xor
or
rorb
ljmp
loopne
adc
jo
movsb
inc
out
inc
roll
repnz
jmp
sbb
xchg
or
fs
lret
adc
dec
cmp
nop
pop
mov
adc
lock
gs
fisttpll
cmp
mov
shl
xor
sub
sbb
std
xor
push
stos
test
xor
scas
jne
add
sub
nop
sbb
sub
dec
test
mov
push
mov
pusha
insb
loope
scas
xor
add
popf
sbb
sarl
mov
out
adc
cmpsl
and
sbb
add
sub
fsubl
pushf
mov
pusha
test
enter
daa
jmp
scas
jno
fs
pop
and
addb
mov
or
inc
sub
subb
or
lret
or
mov
movsl
adc
sub
insb
enter
jns
icebp
cmp
daa
pop
and
add
fmuls
mov
lods
or
in
jmp
pop
insl
cli
test
movsl
and
repz
xor
jle
add
test
gs
mov
jg
outsl
enter
xlat
negl
cmp
inc
sti
jmp
lds
stc
xlat
fdivp
pop
jo
cs
arpl
add
adc
arpl
sti
adc
jl
dec
dec
inc
test
xor
add
add
jno
cmpb
pop
pop
add
ljmp
push
ss
mov
push
fisttps
ljmp
jle
jp
jno
cmp
int
sbb
sbb
adcb
sti
adc
add
std
cmpsb
in
sbb
out
out
das
xlat
rcrb
xchg
faddp
sbb
lahf
fdivrl
add
fnsave
addr16
sbb
cmp
cmp
imul
adc
or
lea
imul
xchg
and
lret
icebp
and
pop
sub
and
dec
add
ficomps
mov
mov
test
push
sbb
je
mov
je
push
xchg
pushf
loope
xor
mov
sbb
shll
xor
addl
fadds
sbb
jbe
dec
mov
movb
fcomp
cmp
sbb
xor
mov
inc
push
fisttpl
aad
arpl
loopne
addr16
inc
hlt
inc
mov
push
subl
xchg
aam
inc
or
jg
mov
jge
jmp
orb
js
or
scas
inc
dec
inc
sub
idivl
dec
punpckhwd
adc
and
sbb
mov
adcl
adc
mov
call
fdivs
int3
dec
push
jecxz
imul
mov
or
test
mov
xlat
xchg
scas
push
mov
test
inc
leave
dec
inc
cs
outsb
sub
shl
jb
hlt
mov
sbb
cmp
cmp
shlb
mov
in
stos
aaa
mov
rcrl
test
arpl
cmpsl
mov
jb
fwait
sub
or
imul
add
push
and
xor
sub
subl
add
addr16
sub
movsl
and
pop
test
pop
xor
push
mov
arpl
ret
jne
cltd
fistpll
mov
cmpsb
jl
pusha
leave
test
inc
inc
push
jmp
mov
pusha
or
cmp
xor
clc
jle
mov
adcb
in
pop
imul
xchg
movl
push
ja
mov
into
repnz
insl
adc
or
fists
test
mov
fiadds
pop
out
sub
mov
jnp
scas
movsl
mov
mov
sbb
xchg
push
xchg
jl
ljmp
fisubrs
and
xchg
pop
cmpsb
pop
xchg
jb
cmp
pop
jge
mov
out
jbe
in
int3
xchg
mov
adcb
cmp
sub
icebp
rolb
cmpsl
jns
syscall
mov
jecxz
cld
les
mov
push
and
outsl
pop
push
mov
rorl
sbb
jno
call
push
pop
push
mov
data16
mov
movl
inc
pushf
adc
std
push
andl
loopne
xorl
test
lret
cmpb
shll
test
sbb
ja
mov
ja
lret
mov
ret
push
insb
loopne
jmp
lock
mov
or
or
pop
jbe
cwtl
rol
add
pop
aas
out
mov
mov
or
in
mov
hlt
pop
push
jo
lods
out
std
inc
testb
mov
xor
cmp
fbld
cmp
push
sub
mov
into
rclb
jl
push
and
out
cmc
in
into
mov
sbb
sub
lret
bnd
add
sub
das
push
pop
sub
inc
mov
add
add
push
jecxz
jg
data16
sbb
mov
add
std
add
add
cmp
inc
sbb
jo
mov
test
int
hlt
loope
and
stos
sbb
or
mov
or
inc
pmulhuw
inc
xor
inc
cmp
loope
scas
pop
in
roll
xchg
xchg
dec
outsb
ljmp
push
test
add
shlb
popa
ss
pop
cmp
fdivs
push
clc
imul
fsubs
dec
lcall
cld
lea
add
retw
data16
data16
ds
jne
inc
ret
test
mov
jo
dec
xor
inc
int3
mov
into
or
mov
sbb
out
loope
sbb
cmp
dec
push
jp
push
inc
mov
daa
imull
and
fldcw
jno
adc
stos
inc
es
mov
push
fldenv
fwait
cmpl
mov
iret
and
hlt
iret
cld
jne
cmp
xchg
fimuls
push
or
mov
lods
pop
push
adc
outsl
aam
lcall
add
jle
xlat
mov
sbb
cmp
add
push
xchg
adc
adc
xchg
cmc
pop
call
test
sub
xor
mov
pop
loope
xor
dec
lret
cli
sbb
xchg
rcrb
loop
lds
lret
xchg
jbe
shl
lea
shl
push
adc
mov
jl
adc
sbb
decl
shlb
rclb
out
xor
in
adc
jg
sub
outsl
mov
cwtl
push
gs
add
fidivl
jb
pop
icebp
aam
lcall
adc
imul
cwtl
sti
in
inc
dec
scas
stc
rcll
dec
shl
mov
cwtl
xchg
sahf
add
add
pusha
jbe
out
test
stos
mov
test
add
add
add
mov
hlt
adc
mov
ds
mov
xlat
loopne
imul
push
cmc
or
lret
jmp
popa
push
jnp
cli
mov
test
sub
es
jle
iret
and
test
push
sbb
inc
adc
fsubl
add
jge
sub
and
pop
jnp
xchg
bound
jne
test
mov
xor
push
pop
xchg
and
cmc
jp
outsb
std
divb
rorb
and
jmp
sarl
sbb
mov
fwait
enter
sarb
sahf
lods
jl
mov
dec
cmp
jns
xor
icebp
jecxz
std
or
lock
dec
data16
sbb
mov
data16
leave
jmp
movsb
xor
pop
push
inc
addr16
ds
push
adc
sub
xlat
xchg
rolb
pop
cli
push
ss
adc
add
pop
jno
xor
cmp
enter
scas
sub
out
jo
addr16
mov
inc
inc
jg
test
and
popa
fisttpll
mov
ret
into
ss
jge
push
cs
cs
sub
xor
xchg
mov
clc
and
mov
cmpsl
mov
in
stos
fistpll
imul
xchg
fidivrl
push
sub
push
jns
scas
xchg
test
or
push
push
add
mov
sbb
sti
xchg
sub
test
dec
pop
push
or
add
adc
sub
adc
sbbb
movsb
dec
bnd
aad
push
dec
out
mov
mov
arpl
rol
sbb
pop
insb
fists
push
fsts
out
daa
push
pop
add
lds
fistpl
hlt
into
and
lea
add
movsl
inc
mov
mov
jae
jecxz
add
push
sub
fucomip
addr16
push
movsl
movsl
les
add
add
add
dec
in
fstpt
popf
jne
inc
push
jbe
lods
outsb
sbb
mov
aad
dec
ljmp
out
call
leave
sub
negl
aas
inc
mov
sbb
jge
or
cltd
inc
inc
adc
push
dec
es
mov
sahf
scas
cmp
cwtl
insl
js
hlt
ja
add
aaa
out
mov
inc
pop
ja
inc
add
push
js
or
in
push
xor
dec
aad
push
mov
mov
aad
pusha
xor
sub
bound
out
add
lcall
fistps
movsb
push
dec
out
jl
push
frstor
inc
stos
xchg
push
push
movsb
shlb
push
mov
scas
adc
outsb
cli
sarb
dec
iret
xor
fistps
mov
into
mov
clc
jge
inc
mov
adc
xor
mov
lods
loop
sbb
data16
out
mov
and
or
fiadds
inc
insl
dec
and
daa
mov
xor
movl
jge
or
mov
cmp
add
scas
and
cltd
mov
sub
int
sbb
dec
xchg
xor
loope
lea
add
push
mov
sbb
mov
dec
rorl
push
lret
pop
mov
loope
xchg
in
inc
add
cmp
rcrb
inc
clc
fsub
lret
mov
mov
outsl
add
out
inc
cwtl
pop
pushf
cmp
rcrb
lahf
mov
jecxz
into
xchg
xor
fcom
inc
add
gs
push
arpl
fidivrs
or
add
or
sarb
add
iret
aad
in
pop
popa
xor
or
cli
pusha
add
add
insb
sub
outsl
daa
insl
push
addb
loop
movb
std
add
add
stc
shll
adc
xchg
repnz
xor
mov
or
test
decl
cltd
mov
in
push
leave
or
and
mov
sbb
jo
push
loop
jecxz
xchg
lcall
cld
pop
shr
add
bound
rcl
adc
je
or
mov
xchg
test
inc
subl
pop
pop
ss
stos
mov
xor
pop
jns
movsb
pop
les
dec
pushf
lahf
push
cltd
ljmp
sbb
sbb
push
fnstsw
or
push
and
and
test
and
xchg
daa
out
in
call
outsl
out
sbb
lea
push
inc
dec
call
out
mov
ret
and
cmp
xchg
imul
mov
dec
xchg
push
lret
rcll
mov
nop
push
and
push
sub
dec
or
pop
sub
push
mov
fcompl
adc
data16
jmp
mov
mov
cmpsl
shll
sub
loope
or
mov
mov
movsb
es
outsl
push
and
jle
dec
test
dec
sub
push
clc
jmp
sub
cli
dec
mov
bound
or
pop
jge
clc
push
xchg
orb
mov
mov
jnp
mov
cs
jmp
mov
lock
out
mov
std
cs
lret
dec
dec
add
inc
adc
sarb
ja
loope
je
sbbb
lahf
pop
aaa
lahf
int3
or
fs
cmp
pop
stos
shll
cld
sub
xlat
xchg
mov
scas
mov
stos
lret
cwtl
in
mov
popf
hlt
cli
andl
hlt
mov
add
xchg
sar
push
jbe
cmp
adc
int3
mov
pop
sub
add
add
add
add
pop
and
mov
out
leave
enter
push
and
add
add
add
data16
icebp
sar
imul
shlb
icebp
leave
mov
fsubp
add
pop
addr16
mov
inc
mov
mov
push
or
xor
fisubl
mov
sbb
aam
dec
movsl
and
cmp
setb
jbe
push
xor
add
in
ljmp
mov
int3
stos
mov
xor
ss
cwtl
mov
movntps
in
xchg
mov
fidivl
jo
das
aam
es
cmp
push
nop
clc
std
xchg
and
pushf
lods
pop
lret
dec
jp
pop
jno
insl
add
es
xchg
scas
inc
xchg
push
andl
sbb
icebp
or
loop
pushf
adc
add
xlat
outsl
negl
adc
int
sbb
jp
lret
inc
jae
out
pop
popa
ret
lds
aaa
inc
push
mov
mov
xor
fldln2
mov
xor
sahf
cmp
push
pop
mov
ds
ss
sub
nop
outsl
jp
inc
add
data16
imul
div
cmc
jb
int
sub
mov
adc
nop
xor
mov
cmp
xchg
jg
pusha
test
jmp
pop
and
test
jecxz
pusha
and
nop
outsl
jno
int3
sub
lock
icebp
jge
xchg
xor
icebp
cmp
cmp
mov
popf
pop
inc
lods
movsb
jo
movsl
stc
jbe
popa
add
dec
ljmp
mov
outsl
cmp
fsts
fdivrs
jle
jo
xor
xchg
cmpsl
ret
sub
cmp
add
mov
and
lock
push
int3
das
mov
jl
mov
and
aam
and
add
hlt
cmp
mov
cmp
clc
pushf
lret
std
add
add
dec
pop
dec
pushf
fs
ljmp
sbb
inc
int3
mov
mov
xchg
and
xchg
shlb
xchg
repnz
xor
pop
in
insb
outsl
push
cltd
xor
cmpsl
push
cs
fnstsw
dec
ja
jo
les
ja
mov
xor
cmp
push
leave
nop
ljmp
xchg
out
xlat
lret
das
pop
jg
add
out
in
jge
and
xor
fs
fstps
jmp
pop
sarl
cli
ljmp
jnp
clc
mov
push
adcb
inc
dec
mov
in
test
cltd
dec
cmp
leave
mov
cmpsl
fistl
sbb
fs
dec
in
jmp
push
sbb
cmpsl
mov
mov
loope
ljmp
test
fidivl
addr16
sarb
rorl
inc
xchg
es
and
push
repnz
fisubrs
arpl
mov
ja
pop
push
mov
iret
lds
movsl
mov
pop
out
pop
adc
dec
les
or
cli
stos
dec
sub
jnp
loop
mov
test
movsl
enter
call
into
sbb
mov
shl
jg
xor
shlb
adc
aad
cli
cmp
inc
les
xlat
or
addb
push
pushf
xchg
repz
cmpsb
and
shrb
mov
cmp
jns
add
xor
and
xchg
cmp
inc
fcmove
int3
ss
cld
adc
shll
mov
mov
cmpsl
fcoml
push
xchg
repnz
dec
jmp
or
sub
cmp
mov
xchg
fistpl
dec
add
cmc
shlb
push
and
cmp
cwtl
fcomps
andb
cmpb
add
xchg
add
push
ds
outsb
sbb
aam
dec
js
sbb
cltd
int3
add
std
add
add
inc
outsl
and
rol
and
mov
jb
and
jbe
int3
js
es
fldl
aad
jg
dec
es
jge
pop
push
jno
daa
fnstsw
ljmp
fisttpl
cli
inc
and
sbb
jg
ficoml
pop
pop
lahf
xlat
sbb
repz
test
sar
out
cmp
ss
ret
lea
loope
cmp
popa
or
mov
xor
mov
les
xchg
xchg
xor
popa
jl
or
add
popa
mov
sub
negb
scas
cmp
je
jge
or
sbb
push
lahf
inc
xorb
dec
mov
movsb
inc
ficomps
test
into
insl
inc
lods
xlat
ror
testl
mov
xchg
arpl
add
aam
dec
decb
mov
ljmp
cmp
dec
test
sub
leave
scas
es
mov
pop
sahf
mov
adcl
imulb
or
imul
fucomp
push
aam
mov
shlb
jns
mov
xor
insb
bound
fldl
dec
leave
add
jnp
imul
lahf
mov
xor
xor
js
inc
out
mov
pop
fdivl
add
fbld
jno
or
repnz
shrb
inc
and
out
mov
cld
stc
jl
xlat
pop
mov
daa
inc
cmc
jge
sbb
and
les
add
xchg
add
loop
insb
pop
cmp
test
out
push
rcl
jecxz
cmp
xor
enter
mov
sahf
inc
mov
cmc
ficompl
popf
jmp
or
xor
mov
or
add
mov
mov
nop
jecxz
repnz
add
add
je
mov
ret
sbb
xlat
sub
in
cmpsl
sti
jmp
adc
fsubr
sbb
in
pop
mov
xchg
mov
inc
outsb
sub
push
arpl
fucom
adc
les
adc
arpl
push
in
xchg
out
fwait
and
sub
jns
jle
ja
adc
pop
add
loop
jne
movb
cwtl
ja
fldt
adc
js
fbld
add
jle
inc
cmp
mov
pop
inc
mov
and
cltd
lods
out
popf
out
stos
lahf
lret
adc
cmp
jp
jb,pn
and
add
pop
mov
fcomps
idivb
push
outsl
rolb
mov
pop
ret
xlat
repz
ret
adc
nop
in
mov
fs
push
std
adc
das
pop
stos
les
lods
loopne
and
outsl
or
mov
dec
lahf
pop
push
sbb
xlat
lds
or
aaa
jp
fs
iret
in
lea
mov
inc
sub
jno
subb
or
push
outsl
rorb
into
lret
rclb
icebp
ret
or
insb
test
mov
or
adc
outsl
mov
xor
xor
xchg
dec
fwait
push
out
xor
fistpll
push
mov
pop
mov
cmp
dec
add
push
sub
fs
push
and
je
lods
or
je
movsb
sahf
fadd
pusha
jmp
pop
adc
sti
pop
add
cld
sub
fcoml
and
imulb
jge
lcall
add
lahf
sub
push
call
push
sbb
out
sub
pop
xchg
bound
jl
and
loop
and
pushf
ljmp
jg
imul
add
dec
inc
mov
in
dec
cmp
sub
sbb
xchg
rolb
add
add
add
adc
jnp
inc
xchg
mov
dec
xchg
fsubrs
sbb
push
inc
movsl
and
arpl
repnz
loopne
int3
clc
pop
xchg
in
inc
arpl
and
pop
xorb
jle
lea
repnz
out
std
dec
stc
lds
push
push
and
lahf
sub
inc
lea
aas
lret
fbstp
pop
inc
push
inc
gs
add
icebp
sub
xor
mov
adc
or
jecxz
jb
add
sub
arpl
sub
test
fimuls
jecxz
and
or
cld
pop
lods
mov
movsl
pop
mov
popa
push
sub
dec
stc
in
fwait
ret
xor
pushf
lea
pop
pop
inc
adc
into
xchg
add
fs
pandn
xchg
jmp
pop
ret
jp
xor
and
ljmp
xor
mov
add
fwait
std
je
push
fstp
xchg
sbb
cmp
sbb
das
mov
imul
fstpl
test
cmp
add
mov
incl
push
xchg
jae
jl
test
out
pushf
xchg
ficomps
dec
push
cmpsb
test
lcall
adc
out
fldt
adc
cmc
movsb
out
test
outsl
and
outsl
lret
cmp
andl
ss
imul
mov
aaa
and
or
push
pop
sub
dec
and
int
pop
popf
and
sbb
add
fstl
mov
mov
arpl
lret
push
lock
imul
sahf
xchg
test
fstps
pop
imul
cmp
jmp
dec
cmp
popf
jns
lret
divb
add
fldcw
xchg
out
adcl
add
xor
arpl
adc
cwtl
loope
xchg
adc
outsl
xchg
lcall
mov
arpl
pop
and
roll
les
lods
pop
sub
xor
outsb
push
punpcklwd
xchg
mov
out
shrl
xchg
sub
leave
roll
inc
mov
sub
fbstp
fwait
push
or
mov
roll
xchg
ljmp
xchg
push
rorb
push
movsb
jns
mov
and
mov
pop
rorb
mov
cwtl
mov
mov
push
adc
cmp
and
sar
decl
mov
sbbl
dec
mov
adc
pop
scas
clc
inc
push
jne
cmp
cwtl
das
cli
addr16
loop
and
pusha
xchg
sbb
repnz
cltd
or
jecxz
in
pop
add
filds
xchg
mov
test
and
sub
mov
bound
mov
imul
repnz
stos
pop
dec
fwait
cld
xchg
lods
sti
lcall
jecxz
pop
push
cmp
xchg
jae
pop
xorb
sub
leave
out
aam
imul
nop
ja
jno
adc
testb
push
scas
and
sbb
inc
mov
inc
push
bt
loopne
sbb
ss
int3
cmp
jns
and
push
mulb
leave
jg
jl
adc
js
out
mov
scas
mov
or
pop
or
test
and
adc
test
add
push
into
jl
les
mov
add
fwait
lods
mov
gs
or
push
xor
movsl
stos
lret
mov
ss
cmpsb
ret
das
imul
push
enter
or
mov
mov
pop
out
xchg
mov
inc
ja
pop
sbb
add
dec
xchg
pop
xchg
add
add
add
add
mov
sub
jle
sub
in
int3
cld
cli
frstor
lods
adc
xor
test
cmp
lahf
popf
mov
inc
out
insl
sbb
pop
in
cld
leave
inc
mov
mov
pop
in
cmpsb
aas
mov
stos
sbb
rclb
push
mov
sbb
cmp
dec
push
inc
cmp
or
not
xchg
sahf
test
pop
mov
mov
sub
fwait
cmp
std
mov
mov
mov
mov
rcll
popf
je
pop
pushf
scas
dec
or
xor
inc
ss
fistl
scas
lea
outsb
mov
shrl
cmp
xor
push
es
insw
sbb
repz
out
out
or
cmpb
dec
inc
aad
push
sbb
lock
mov
aam
loope
sub
scas
pop
cmp
xor
inc
outsl
jp
packuswb
jnp
aad
inc
sub
inc
xor
dec
adc
arpl
push
jl
imulb
popa
lret
and
lods
inc
push
or
pop
xor
sub
or
or
lods
movsb
pop
adc
aad
mov
stos
imul
hlt
add
push
gs
test
stc
addr16
add
adc
fcomip
pop
clc
cwtl
mov
add
cmp
inc
pop
mov
js
ret
jge
mov
cld
mov
push
or
ja
sub
add
or
fstpt
aaa
xor
mov
aam
fisubrs
or
adc
and
mov
shll
jb
mov
add
pop
jg
inc
or
add
dec
inc
fcoms
cmp
outsb
jecxz
gs
dec
in
gs
xor
and
sub
mov
add
add
xchg
jl
cld
decl
or
sub
sbb
mov
add
std
add
add
jmp
shrl
mov
dec
adc
insb
inc
adc
cmp
in
jno
test
or
addr16
push
insb
mov
popf
jnp
orl
sbb
es
popf
cmovo
cmp
push
mov
ja
dec
push
sub
les
les
push
push
dec
lds
inc
shl
push
out
pop
stos
dec
xchg
loope
loop
outsl
push
mov
lahf
xlat
lds
loop
xor
or
loope
push
lret
push
adc
mov
sub
sub
ss
mov
fdivs
sub
sbb
jb
push
repz
mov
cmp
jge
and
ret
fcoml
pop
ret
push
pop
dec
mov
xchg
add
pop
je
mov
insb
es
push
stc
call
mov
int3
xor
mov
jnp
xchg
je
es
lahf
jge
dec
mov
cmpsb
push
hlt
and
push
lret
cwtl
push
pop
push
jecxz
xchg
aaa
mov
lods
adcl
xchg
push
or
sbb
je
vpsllq
xchg
movsl
sub
xor
add
sub
pop
ljmp
mov
and
or
mov
mov
sbb
pop
sbb
je
divb
test
jae
loop
pop
inc
inc
lgdtl
add
mov
inc
cltd
repnz
jne
cmpsb
jg
in
mov
mov
pop
insl
fcmovnb
mov
les
in
out
jmp
pop
inc
add
and
fistl
xor
mov
mov
jl
mov
shlb
fnsave
cltd
push
mov
mov
xchg
push
push
lock
cltd
loop
out
or
mov
gs
mov
arpl
iret
add
add
and
dec
repz
fldt
out
outsl
add
fadds
add
add
add
fcomps
pop
dec
loope
cmc
sub
scas
jmp
mov
lret
pop
popa
and
aaa
repnz
fcmovbe
pusha
mov
pop
mov
dec
iret
adc
addr16
and
mov
out
iret
out
adc
ja
callw
adc
pop
std
nop
push
shrl
inc
das
movsb
mov
sub
mov
inc
jno
push
hlt
adc
rorb
xchg
mov
mov
or
adc
jnp
std
cld
out
xchg
cmp
test
dec
cli
outsb
adc
or
mov
jecxz
int
jo
sbb
mov
sbb
and
mov
mov
or
lea
clc
mov
pop
lret
jbe
sbb
sti
mov
or
addr16
and
xchg
inc
and
or
xchg
sub
or
mov
push
loope
dec
adc
sahf
sub
cltd
rcll
nop
and
stos
sbb
out
and
out
cmp
scas
fwait
and
adc
sub
and
icebp
mov
nop
mov
xchg
cmp
and
xchg
ljmp
adc
xchg
mov
cli
and
sbb
mov
sbb
push
xchg
jp
inc
int3
mov
outsl
aaa
sub
test
out
mov
dec
subl
cmp
sbb
loope
cmc
rcll
push
fldl
fiadds
into
mov
pop
pop
adc
xchg
pop
jae
lret
push
sbb
jg
insb
sarb
xchg
addr16
pop
sub
ret
ffree
pop
in
fs
bound
loopne
or
daa
add
cmpl
adc
into
fwait
imul
push
divb
xchg
movb
or
ret
jecxz
or
sbb
adcb
jl
push
rorl
push
xorl
add
add
add
add
lcall
rcrl
fiaddl
add
add
add
std
fnstenv
repz
xchg
pop
movsb
mov
mov
fwait
mov
mov
andb
clc
adc
out
or
lock
and
jo
fucomi
add
push
adc
es
cmp
pop
fistpll
into
xchg
mov
xor
cmp
lahf
jno
popf
cli
and
or
add
push
cmpsb
cs
repnz
jle
pop
arpl
lds
xor
aaa
out
inc
fadd
fs
inc
xchg
aad
stc
dec
in
bound
fwait
inc
pop
add
fistps
mov
jbe
cmp
xor
gs
lock
cli
mov
iret
ss
nop
push
sbb
pop
cwtl
mov
cmp
sub
and
popa
nop
bound
inc
in
sub
sbb
in
and
mov
pushf
mov
add
sahf
adc
in
fwait
scas
test
jmp
mov
sti
es
or
jle
icebp
lret
int
mov
lods
and
inc
repz
stos
cltd
push
sar
push
test
inc
mov
pop
sub
adc
pop
es
xchg
ret
inc
sub
into
sbb
mov
sbb
cltd
or
out
and
mov
scas
inc
jmp
add
jbe
cmp
pop
sbb
loopne
mov
and
cmpsb
or
dec
push
mov
repnz
or
and
rorb
jle
mov
movsl
add
jl
mov
xor
stos
add
and
mov
adc
dec
scas
iret
dec
jo
aad
push
sbbl
adc
pop
aam
test
and
cmp
shll
lcall
cwtl
mov
pop
loopne
dec
sub
mov
xor
dec
adc
or
and
add
and
adc
arpl
les
rorl
add
add
add
rolb
dec
idivl
jg
sub
adc
faddl
add
add
add
xlat
adc
subl
es
test
inc
pop
lods
leave
in
dec
push
aam
xchg
arpl
jb
hlt
or
fs
sahf
pop
push
testb
inc
js
clc
sub
mov
mov
fildl
push
andb
loope
adc
xlat
nop
hlt
movsb
jmp
insb
inc
dec
mov
test
and
pop
pop
dec
mov
fsts
daa
mov
imul
and
xchg
or
loopne
into
call
add
push
into
jne
and
fs
pusha
loope
jg
sub
or
insl
lods
std
jl
fimull
popl
fbld
inc
ss
dec
and
pop
repz
jmp
sub
push
hlt
cltd
nop
sub
xchg
aad
mov
ja
dec
cmc
incl
mov
out
cld
push
jmp
xlat
lret
daa
rorb
pop
into
jb
jbe
addr16
icebp
mov
je
and
popa
aaa
and
jno
cmp
jmp
loopne
add
shl
dec
xlat
jmp
out
xor
in
jo
pop
xchg
lcall
mov
mov
sti
js
test
arpl
cmp
insl
sub
pop
lods
sbb
jnp
mov
add
xor
std
inc
in
cmp
pop
xchg
mov
aaa
stc
pop
inc
les
scas
frstor
mov
xor
mov
sub
cwtl
rcrl
cmp
out
lods
nop
mov
test
cwtl
mov
sub
gs
fstps
xor
add
xchg
mov
inc
jecxz
jbe
mov
aaa
out
fdivr
in
mov
ffree
push
or
je
add
pop
pop
mov
and
inc
sbb
xchg
jb
insl
in
ljmp
sub
inc
aam
mov
lea
popf
xchg
jno
lods
inc
adc
jge
data16
outsl
sub
xchg
xor
cmp
add
mov
call
mov
aaa
push
add
std
add
add
push
cwtl
aaa
in
dec
out
cld
pop
fs
fiadds
dec
pop
fidivs
dec
add
fstpl
mov
rclb
inc
sub
sbb
jae
push
inc
push
mov
enter
lds
cld
repz
dec
mov
cmp
loope
cmp
jg
fnsaves
push
pop
ss
push
mov
inc
pop
mov
dec
xchg
testl
and
mov
fcompl
sbb
nop
mov
xchg
adc
loope
rcll
pop
sarb
cld
or
pop
push
rclb
cld
add
pop
imul
inc
push
adc
push
test
jmp
ljmp
pushf
lock
push
push
clc
insl
inc
jp
lds
loopne
mov
inc
mov
icebp
bound
xchg
arpl
mov
xchg
aas
cs
dec
cmp
jmp
test
pushf
imul
mov
sahf
stc
pop
push
pop
and
cmp
popf
add
cli
lahf
xchg
ds
push
into
add
imul
mov
xchg
fidivl
xchg
and
push
adc
imul
fisttpll
mov
repz
std
cmp
lock
ret
imul
mov
aaa
push
cmp
inc
cmp
rol
cld
lret
popa
int3
jle
sub
nop
hlt
add
and
mov
or
fs
icebp
movsb
pushf
nop
push
data16
mov
dec
push
dec
or
sahf
das
adc
mov
iret
loop
mov
ret
jns
jno
loop
ror
push
fsubp
adc
bound
clc
loope
jbe
lcall
xchg
mov
jae
xor
cwtl
iret
stos
ljmp
mov
fcompl
or
pop
jmp
ret
add
std
add
add
or
pusha
cs
dec
bound
scas
rorb
sbb
jmp
add
cmpsb
xchg
je
sbb
mov
aad
push
ja
jecxz
mov
mov
mov
lods
ljmp
inc
mov
add
call
dec
daa
ror
jl
inc
fwait
lea
jge
mov
pop
pop
and
xchg
and
cli
sbb
xchg
or
mov
mov
push
data16
mov
pop
scas
mov
es
sahf
xchg
negl
or
xor
pop
lahf
push
imulw
cmp
gs
psubusw
inc
cmpsb
paddsw
enter
lret
jge
pop
xchg
les
inc
adc
sbb
bound
out
out
data16
jo
cwtl
xor
rolb
aas
jmp
xor
cmpsl
ret
xchg
loopne
nop
mov
popa
lret
lcallw
xor
mov
shrb
mov
push
jmp
mov
enter
pusha
idivl
push
push
loope
xor
je
call
lret
fwait
roll
stos
movsb
sub
jo
adc
mov
mov
rcrl
adc
pop
dec
iret
sub
pushf
pop
sub
in
cld
sub
mov
pop
push
popf
insl
enter
or
mov
lods
movsl
xchg
outsl
lods
jg
lods
push
push
fcoml
lret
jecxz
mov
pop
aas
test
pop
idivb
test
push
or
sbb
mov
lahf
mov
fdivp
cmp
pop
ret
ja
call
fistpll
cs
into
leave
cmc
inc
outsb
xchg
mov
aas
icebp
adc
or
jb
mov
popf
fs
jae
subl
inc
pop
or
jo
cld
sub
shll
add
add
pop
sbb
cli
inc
cli
mov
cmp
cmpb
add
add
add
inc
dec
cmp
mov
jnp
das
push
pop
cmp
mov
lret
andl
xchg
jno
notl
sbb
mov
ret
inc
push
aas
or
xchg
cmp
dec
fs
push
mov
add
add
mov
sub
inc
sub
sti
js
out
push
mov
aam
bound
clc
and
sbb
jns
mov
adc
cld
or
and
add
sbb
dec
adc
xor
cmp
mov
cmp
cmp
adc
jne
xchg
xor
and
loopne
sarb
cmp
addr16
add
or
mov
fwait
mov
sub
dec
sub
cmp
test
sbb
add
or
jo
mov
xor
popa
imul
xchg
push
dec
or
sti
roll
xchg
cld
stos
in
addr16
ss
out
outsb
sbb
push
dec
adc
xchg
or
int
push
popa
xchg
push
popf
outsw
jp
pop
pop
xlat
mov
mov
ret
clc
popa
adc
lods
add
into
dec
push
mov
sub
insb
enter
fs
ret
dec
mov
push
popf
adc
push
pop
pop
test
push
stc
sub
adc
or
das
sbb
das
add
mov
add
aad
icebp
mov
aas
vpand
cmc
scas
mov
and
and
lods
cmpsl
cwtl
stos
mov
out
ss
sarb
das
cs
mov
mov
out
and
mov
mov
lea
pop
cltd
mov
push
aam
jp
xchg
mov
push
push
aad
or
dec
mov
repz
add
mov
xlat
push
xlat
ja
out
push
lahf
adc
or
jne
add
std
add
add
mov
outsb
inc
gs
adc
mov
lods
iret
dec
stos
aad
and
cs
or
lret
in
cmp
std
addl
inc
push
push
and
les
imul
test
stos
and
cmp
dec
push
mov
in
inc
and
inc
sbb
lret
push
icebp
add
movsl
mov
push
out
lds
sbb
push
sbb
mov
jb
test
popf
adcl
sbb
pop
movsl
insl
test
popf
roll
jae
in
fcmovnbe
pop
scas
fs
mov
les
and
imul
stos
push
xchg
sbb
push
push
icebp
dec
outsb
mov
mov
or
xor
sub
sub
and
cwtl
and
es
fstpt
add
imul
add
repz
push
jp
add
into
test
inc
call
cli
push
addl
fisttps
outsb
mov
inc
and
push
xchg
xchg
or
dec
in
mov
sub
mov
imul
add
cmpsl
fisttps
dec
scas
mov
jmp
or
pop
rcll
loope
push
pop
cs
xor
mov
lret
orl
dec
push
stos
repz
xorl
insl
pop
lods
inc
lcall
pop
mov
fwait
cmc
pop
enter
pop
jo
cli
and
jnp
cmp
insb
and
pop
ljmp
sbb
sbb
das
push
sub
ret
cld
repz
pop
or
xchg
jns
adc
add
test
pop
test
push
lock
ja
je
sti
les
scas
dec
ja
mov
pop
xchg
xchg
cmpsl
pop
inc
mov
cli
rcll
jmp
jns
dec
jb
add
std
add
add
outsb
jl
xchg
outsl
xor
dec
icebp
jns
iret
add
loopne
ds
xchg
jge
sub
fcoml
repnz
push
and
stos
clc
sahf
pop
cmc
xchg
arpl
int3
adc
lock
js
inc
shr
cmp
mov
sbb
and
push
mov
mov
cmp
test
outsb
pop
leave
fnstcw
adc
clc
out
and
jne
lock
aam
sub
fdiv
sub
imul
mov
fdivr
subl
insl
mov
xchg
lods
sbb
cmpsl
negl
sti
cmp
loopne
push
inc
mov
inc
adcb
fstpl
sti
mov
scas
mov
loopne
pop
add
adc
lock
push
inc
dec
or
imul
in
mov
stos
jmp
fs
mov
mov
cwtl
inc
add
test
aas
push
xor
or
jl
psubsb
jnp
rcrb
push
or
cmp
push
stos
syscall
mov
sbb
dec
movsb
push
test
jne
push
and
add
jge
lahf
mov
idivb
ja
stos
aad
sbb
sub
std
dec
mov
or
dec
pop
jnp
xchg
mov
push
push
call
out
pop
and
mov
pusha
pop
sub
pop
mov
jecxz
sub
push
andb
movsb
sbb
mov
push
push
push
mov
mov
insl
sub
dec
cld
in
cmp
in
xchg
or
dec
or
cld
shrb
sub
repnz
or
scas
jl
and
lahf
xor
pop
dec
push
xchg
sub
lret
pop
and
out
icebp
mov
push
push
nop
inc
mov
les
stos
xor
lea
inc
or
add
iret
negb
mov
stos
std
jge
call
add
mov
in
fldl
add
dec
adc
ss
fsts
adc
fstl
mov
ljmp
lahf
dec
jmp
sub
test
add
stos
arpl
sub
mov
fucom
add
loope
lock
aas
aad
shll
pop
add
dec
ss
jmp
lods
jle
test
or
in
mov
loope
cltd
pop
mov
add
cltd
sub
mov
push
mov
testb
or
fistpll
xlat
mov
push
mov
xchg
jbe
loope
pushf
fstl
or
dec
pop
adc
ljmp
nop
cmpsb
bound
push
aam
lds
std
jg
push
fld
mov
movsb
stc
nop
clc
lret
pop
and
mov
sahf
add
mov
loope
dec
xchg
pop
sbb
add
sar
pop
and
jmp
outsl
pop
imul
inc
push
pop
fcos
in
jb
fmull
xchg
jne
inc
mov
call
push
push
adc
adc
sub
jecxz
std
loop
mov
push
ret
lock
mov
shrl
testb
pop
fstp
imul
les
add
rclb
xor
out
movsl
sbb
mov
sbb
xor
adc
mov
mov
aad
repnz
stos
mov
cmp
push
jo
push
sbb
scas
icebp
mov
mov
and
out
pop
mov
or
cmp
xorl
adc
xchg
inc
jp
sub
pop
lods
orl
pop
fwait
std
aas
jmp
cltd
ror
jno
outsb
mov
cltd
or
cmp
fwait
sbb
pushw
xchg
add
add
sub
ja
jno
dec
push
cwtl
lea
add
add
add
ds
sbb
scas
leave
xchg
push
dec
sub
fwait
adc
push
shlb
stos
pop
cmpsl
pushf
sahf
jmp
jae
mov
in
shlb
int3
cld
mov
sbb
xor
inc
xor
sbb
dec
out
iret
ret
jbe
in
out
ret
fldenv
outsl
rol
push
or
ljmp
das
out
jo
sbb
adc
rcll
dec
mov
jno
ret
mov
push
xchg
in
push
mov
scas
shlb
sub
or
insl
and
dec
punpcklwd
sub
cmpsb
dec
sbb
adc
stos
fldl
iret
aas
jns
pop
repz
xchg
rolb
aaa
cmp
dec
pop
mov
in
insb
sub
mov
adc
sub
pop
leave
out
sub
loopne
insb
push
out
ja
pusha
jl
adc
xor
loope
into
or
mov
es
in
rclb
add
fstpt
scas
mov
or
mov
jg
nop
andl
clc
jecxz
adc
and
cmpsb
addr16
prefetchw
pop
bnd
dec
inc
ss
je
add
movsl
inc
sbb
add
fcoml
stos
mov
adc
xor
cmpsb
push
lret
mov
mov
or
inc
lret
push
clc
mov
outsb
ss
sbb
movsl
inc
aad
jge
cld
pop
sbb
xchg
xor
sub
out
movl
aam
call
lods
lods
pop
pushf
cmp
and
rclb
outsb
std
mov
mov
xorb
xchg
inc
adc
xor
les
sub
or
mov
mov
push
popf
jle
jl
jbe
push
bnd
in
call
lock
jl
dec
add
add
mov
stc
popf
outsl
xchg
fs
in
add
std
add
add
ljmp
xchg
inc
fwait
test
ret
xchg
mov
lds
ror
fildll
lcall
dec
sbb
mov
mov
ss
iret
pop
push
dec
mov
ds
fs
sbbb
xchg
sbb
arpl
cmp
cmp
fiadds
outsb
mov
pop
arpl
in
push
mov
and
dec
pop
add
and
mov
rol
and
loopne
cmp
sbb
mov
inc
in
shl
mov
mov
pushf
push
push
add
test
sub
mov
adc
pop
leave
xor
frstor
pop
into
xchg
popf
and
lds
sbb
xlat
outsb
and
push
nop
dec
mov
cmp
mov
scas
inc
bound
scas
jg
push
push
xchg
imul
test
enter
aaa
sub
jmp
push
mov
ret
dec
fadds
xchg
lcall
push
dec
add
cmp
hlt
jo
cs
adc
pop
ja
sahf
xchg
push
xchg
lods
mov
ficompl
cmp
push
jge
ret
rcrl
push
jmp
int3
pop
push
sub
add
data16
inc
notl
xchg
jno
es
mov
sbb
test
call
or
cs
scas
out
fwait
std
xchg
test
repz
cli
rorl
push
jne
sar
popl
and
ljmp
addr16
jmp
in
popf
fcoml
aas
enter
inc
or
nop
add
xchg
dec
js
adc
ret
mov
int3
loopne
in
and
stos
dec
out
mov
jo
mov
pop
sar
push
inc
xlat
das
adc
jp
jmp
jno
adc
mov
dec
dec
cmc
sub
iret
cmp
shrb
add
jns
sbb
jge
and
dec
jo,pt
or
add
std
add
add
lret
pop
push
stos
dec
popa
imul
dec
adc
cmp
jnp
add
icebp
inc
push
xchg
adc
pop
cmpsb
iret
lret
cmp
xchg
mov
mov
dec
push
pop
loope
mov
jp
mov
push
in
dec
mov
add
lods
adc
js
mov
dec
and
inc
dec
dec
cltd
or
int3
arpl
and
insb
dec
out
js
mov
mov
jle
and
jns
xor
loope
into
or
inc
fcmovu
aaa
push
dec
lods
adc
lods
cli
frstor
inc
jle
stc
cld
mov
pop
cmc
imul
test
add
nop
insb
push
xlat
mov
loope
jmp
adc
cli
clc
add
out
ja
sub
and
cmpb
aas
jg
cmp
mov
pushf
andl
inc
pop
les
nop
ficomps
and
shll
in
xlat
stos
jns
dec
int3
mov
adc
jns
les
and
es
pop
data16
or
aad
adcl
test
enter
filds
mov
push
movsb
sub
jmp
jb
push
insl
mov
pop
arpl
pop
mov
jo
push
ja
mov
in
mov
sbb
adc
jge
arpl
arpl
sbb
in
out
cmp
pop
xchg
insl
iret
sub
cmc
push
sbb
adc
sub
sbb
les
push
out
cmp
in
cmp
sbb
movsb
bound
repnz
jle
andb
mov
daa
jnp
xor
push
push
mov
adc
add
xor
add
add
roll
pop
arpl
jo
arpl
add
std
add
add
jmp
push
mov
icebp
xchg
lock
bound
out
sti
mov
push
sub
loopne
mov
js
rcr
hlt
fcoml
jge
inc
lea
aad
imul
push
orl
pushf
gs
std
lds
lret
out
insl
mov
mov
sbb
inc
in
cmp
mov
inc
or
mov
mov
inc
fistpll
inc
fldl
pop
andl
xchg
fnsave
fsubrp
orb
lock
lret
mov
and
or
cmpsb
sbb
es
sbb
sub
sbb
out
in
jae,pn
fcomps
inc
outsb
jno
inc
push
jbe,pt
btc
andb
or
hlt
dec
push
scas
subb
adc
pushf
and
aad
pop
popf
lods
mov
pushf
dec
mov
or
and
lock
out
std
pop
ret
push
dec
leave
cwtl
repz
push
call
arpl
into
xchg
or
push
xor
into
sarl
jp
int3
fwait
or
mov
jo
scas
imul
adc
add
imul
int
xchg
pop
test
inc
xor
scas
mov
mov
sahf
subl
loope
enter
test
nop
jg
push
fistpll
cs
jae
ds
mov
pop
hlt
push
call
in
mov
mov
add
cmp
sbbl
or
insl
mov
pop
xchg
jns
mov
xchg
cmp
fstl
mov
push
push
adc
scas
and
das
jb
lods
jnp
daa
repnz
test
popf
pop
xchg
sub
sub
and
inc
add
add
daa
pushf
cli
mov
xchg
out
cltd
int3
fistps
pusha
repnz
std
add
add
scas
mov
jns
cmp
mov
xlat
pushf
sub
jecxz
inc
ret
mov
cmpsl
adc
cmp
sub
sub
cmp
ret
cmp
mov
inc
into
and
dec
push
jbe
add
inc
xchg
and
jl
push
out
xchg
mov
lret
out
xchg
test
mov
add
mov
and
push
int
cld
dec
pop
mov
stc
mov
imul
stos
pop
dec
outsb
mov
xlat
dec
pop
push
mov
dec
in
mov
ss
sbb
mov
incb
dec
cmp
mov
and
pop
fldpi
pop
idivl
push
jbe
pop
mov
fsubs
ja
jnp
imul
bnd
sahf
mov
push
pop
xchg
xlat
dec
cmp
out
test
dec
adc
test
mov
pop
and
les
inc
sarb
outsl
and
jno
arpl
sub
push
movsb
xor
mov
ja
xchg
push
jno
lea
out
scas
cli
sub
ljmp
cmc
test
pop
sbb
inc
and
fwait
mov
mov
les
push
pop
nop
sahf
rcrb
daa
jno
push
fistps
mov
pop
fisttpll
ja
and
shlb
jecxz
adc
test
mov
xchg
cmp
pop
inc
push
jg
or
loop
mov
jo
std
adc
mov
and
negb
aaa
lds
xor
out
xchg
sub
push
pop
adcb
cltd
cmp
jo
xchg
mov
inc
adc
inc
add
mov
jmp
sarb
lret
imulb
or
adc
cmp
add
leave
adc
add
lcall
leavew
and
fcoml
push
pop
hlt
add
std
add
add
andb
jp
movsb
test
mov
dec
mov
ret
push
cmc
sbb
stos
movsb
out
popa
push
xorl
insl
or
cmp
cmp
jae
sub
mov
loopne
push
mov
adc
shll
pop
aas
jmp
and
pop
outsb
cmp
jbe
adc
sti
movsb
aas
rclb
sbb
enter
clc
sbbl
mul
jno
shlb
jb
sub
jge
or
test
mov
pusha
pop
jl
dec
int
sub
mov
negl
mov
add
xchg
arpl
shr
jmp
xchg
xchg
pop
ljmp
rep
jae
xor
jge
stos
push
push
subl
aas
test
inc
loope
cs
xor
xchg
or
loopne
xor
cmp
fstpt
imul
dec
add
in
imul
cmp
mov
mov
pushf
add
and
aas
into
or
dec
cmp
xor
xchg
je
sub
sbb
sbb
enter
pop
cltd
ret
xor
ret
lds
mov
and
adc
movsl
andb
or
add
lods
and
rep
xchg
xchg
adc
pop
jl
gs
sbb
hlt
inc
add
cmpsl
popf
xorb
push
xchg
lret
adc
jno
gs
xor
cmc
jp
xchg
push
int3
push
pop
push
xor
sbb
dec
clc
adc
pop
mov
jle
ret
sbb
mov
in
mov
mov
outsb
ret
leave
sbb
mov
sbb
sub
or
mov
xchg
call
lcall
jb
incl
out
cltd
dec
mov
mov
lret
sti
je
mov
pop
push
add
add
iret
cmc
sti
pushf
and
push
mov
testb
std
add
add
sub
and
inc
out
ljmp
inc
int
jnp
mov
lods
dec
xchg
cmp
mov
icebp
cmp
sarl
mov
mov
xor
into
mov
mov
xor
insb
lret
scas
in
movsb
iret
jae
in
jne
mov
mov
jle
mov
pop
inc
call
sti
stos
call
das
ss
fs
cmp
repz
inc
or
add
mov
fisubrl
cmp
and
mov
aaa
out
jge
pop
inc
mov
arpl
sbb
mov
dec
aam
insl
pushl
fwait
xchg
int3
leave
sub
test
in
or
cltd
in
cmp
call
ds
sub
push
popf
sub
les
jbe
jno,pt
aaa
cmp
popa
pushf
xchg
adc
add
dec
pop
in
cmp
pop
adc
pop
in
fldt
xchg
xchg
mov
subb
in
mov
lret
xchg
xchg
scas
daa
jg
cmp
jg
fwait
and
test
push
push
repnz
mov
push
fidivrl
and
inc
inc
stos
pushf
jae
push
sbb
xor
sub
clc
testb
mov
outsb
pushf
inc
hlt
dec
dec
or
mov
out
xchg
outsl
mov
sbb
cmp
mov
mov
dec
xor
imul
jb
push
lea
cmpsb
pop
ss
mov
js
gs
sub
or
sbb
lahf
mov
jp
jo,pt
and
in
push
pop
cmp
into
inc
or
ljmp
xlat
andb
adc
xor
icebp
mov
lea
mov
xor
scas
cwtl
lock
das
push
jne
test
repnz
add
xchg
pop
scas
enter
pop
jb
fidivl
rcrl
push
mov
add
cmp
stc
jl
stc
jne
push
into
test
add
ljmp
insl
jmp
mov
fisubl
adc
rcrb
xchg
xchg
sbb
pop
mov
cs
inc
and
and
fwait
mov
dec
pop
xor
pop
pop
and
cwtl
loop
xor
out
jbe
subl
les
loope
roll
mov
add
mov
sub
push
rol
loopne
pop
fists
mov
test
inc
in
dec
mov
imull
cmp
sahf
arpl
adc
or
js
xchg
cli
xchg
xor
out
sbb
hlt
cmpsb
inc
enter
pushf
orb
xor
xchg
pop
dec
lret
cmp
inc
fnstsw
adc
cmp
jle
mov
pop
inc
scas
xchg
in
mov
divb
aas
sbb
jb
lret
xor
addr16
f2xm1
andb
jge
je
lds
inc
or
outsl
scas
pushf
dec
out
outsb
jl
push
xor
lea
imul
mov
xchg
or
jae
andb
addr16
in
xchg
pop
xchg
add
push
mov
and
pusha
and
xchg
sarb
dec
outsb
subb
push
into
cmp
data16
and
je
mov
jl
aad
in
mov
mull
lds
ja
aad
cmp
xchg
mov
mov
insl
leave
aad
jmp
jbe
xor
jb
adc
int3
fimuls
int3
adc
nop
mov
imul
and
rcr
xchg
gs
or
rcrl
inc
rclb
mov
aam
fwait
push
rorl
out
lahf
and
inc
dec
jb
and
pop
mov
ja
add
