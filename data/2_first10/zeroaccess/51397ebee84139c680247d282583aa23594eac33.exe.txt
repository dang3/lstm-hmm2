add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
mov
jle
jle
fidivrl
jle
cmp
fld
ja
or
fimuls
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
adc
or
jb
push
lds
cs
sbb
sub
push
repz
addr16
and
test
inc
xchg
push
cs
aas
sub
das
imul
inc
mov
aam
sbb
fidivl
xor
outsb
xchg
pop
shll
outsl
nop
and
pop
fsubp
fimull
fdivrp
jo
pop
adc
aas
out
xor
dec
sbb
mov
pop
out
and
push
sub
jle
jne
je
ror
lods
hlt
inc
jae
add
mov
out
stos
mov
xchg
aas
nop
mov
inc
cwtl
rcrb
dec
call
inc
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
imul
fidivrl
jle
out
xor
std
bound
loop
cmpsb
inc
adc
fxch
xor
push
push
pop
inc
lret
and
sti
incl
jl
jo
call
stos
hlt
outsb
scas
loope
sub
and
fnsave
inc
aad
add
adc
fdivrl
mov
enter
inc
insb
lods
sti
push
pop
lret
xchg
enter
jecxz
rcl
lods
vfmaddsubpd
std
ljmp
xor
pop
sbb
es
scas
ret
xchg
cmpsl
rcrb
mov
push
dec
mov
mov
push
jns
test
addr16
lcall
push
cltd
mov
int3
adc
repnz
and
cmp
rcll
cwtl
lahf
jg
sbb
jno
mov
mov
sbb
push
loop
inc
dec
aaa
arpl
cltd
push
loope
and
cmp
dec
pop
mov
xchg
jne
cmp
mov
iret
out
cmpsb
fisubrs
in
adc
push
repnz
clc
clc
movsl
mov
dec
push
inc
insl
mov
pushf
cmpsb
sub
test
pop
ss
imul
mov
push
movsl
push
sbb
mov
jecxz
mov
ljmp
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
sbb
jle
fidivrl
jle
lds
loopne
fs
leave
movsl
ret
pusha
stos
repnz
es
or
lcall
lret
xchg
scas
fsubrs
lods
mov
mov
movsb
mov
mov
lods
fidivrs
clc
cmp
pop
add
pop
sbb
dec
mov
popa
push
cltd
and
cmp
push
pop
and
jg
lock
xchg
push
lret
testb
sub
pusha
stos
adc
inc
dec
popf
lcall
fwait
xor
jmp
sub
or
movsb
jmp
push
stos
jg
js
fstpl
test
cli
pop
data16
push
ds
call
cmovb
testb
xor
jb
sti
ret
test
into
loopne
xchg
fadds
pop
insb
subb
insb
loop
mov
push
push
sti
pop
sbb
jg
stos
jnp
jmp
adc
xchg
loopne
push
pop
adc
shlb
sarl
inc
inc
lea
lret
fstps
push
int3
jne
popa
push
mov
out
outsb
in
test
pusha
data16
cmpsl
sarb
or
enter
inc
aad
loope
stos
jbe
int3
mov
mov
scas
sub
pusha
push
js
scas
push
idiv
addl
add
movl
add
inc
mov
add
push
add
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
hlt
xchg
fidivrl
jle
mov
das
cmc
jg
lock
add
rorl
and
push
rclb
mov
mov
nop
jp
add
lcall
js
nop
dec
adc
imul
jge
dec
push
sahf
pop
test
std
sub
inc
pop
test
add
pop
push
dec
imul
mov
outsl
out
adc
ja
xor
add
in
add
js
mov
cmp
dec
pop
jnp
lcall
popf
add
fwait
aas
rorb
test
xchg
data16
inc
dec
iret
scas
cmp
or
sub
xor
mov
mov
mov
or
mov
push
jmp
into
in
fs
gs
mov
or
mov
test
insl
cmpsl
adc
iret
int
mov
sbb
leave
xor
inc
sbb
jecxz
adc
arpl
lahf
cld
loopne
jmp
push
repnz
xor
jnp
js
mov
das
arpl
pop
pop
arpl
sbb
sbb
fprem
pop
pop
mov
xor
sub
sbb
mov
mov
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
add
sub
dec
pop
inc
ds
and
sahf
dec
jmp
xchg
adcb
or
je
negw
sub
xchg
jmp
faddp
lock
es
add
loopne
pop
mov
add
pop
or
test
mov
and
in
adc
fdivl
out
shll
insb
jbe
or
call
xchg
mov
sbb
push
mov
cmpsb
push
dec
enter
inc
mov
sbb
xor
aaa
push
syscall
dec
sbb
pushf
loopne
dec
adc
setns
subl
sub
arpl
test
sti
aas
iret
call
in
ljmp
cmpsl
les
sub
in
push
imul
scas
lods
cmp
dec
dec
das
pop
out
mov
insb
xor
rorl
inc
shlb
jmp
cmp
fwait
pop
ds
into
hlt
mov
jb
inc
stos
cmpsb
add
data16
repnz
xor
jle
test
dec
sbb
jmp
scas
sti
loop
inc
jp
stos
dec
sub
jecxz
mov
out
orl
jp
xchg
js
aam
ss
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
lods
sti
dec
jo
jle
jg
jle
mov
mov
cmp
mov
ret
cmp
notl
scas
lahf
dec
fldl
ret
inc
mov
test
mov
xor
aaa
adcb
cmc
adc
pop
lods
popa
xor
pop
jp
imul
int3
jo
mov
pop
mov
sub
addl
mov
lahf
adc
pop
nop
loop
out
jbe
das
call
rclb
push
inc
mov
sbb
pop
push
sbb
push
mov
test
mov
ljmp
inc
and
mov
jp
dec
les
cmp
dec
fscale
sbb
mov
push
dec
mov
or
xchg
add
mull
pop
inc
jb
mov
add
bound
jmp
lea
hlt
in
mov
loop
sub
sbb
punpckhdq
mov
dec
add
inc
cmc
inc
jmp
insl
inc
xchg
pop
inc
add
inc
out
rcrb
insb
mov
push
int
cmpsl
cmpsb
mov
mov
mov
push
dec
mov
and
push
ret
xchg
int3
bnd
dec
lahf
mov
and
sbb
loopne
pop
lret
mov
jne
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
std
imul
push
jbe
jle
jg
jle
ds
jl
inc
pop
pop
loopne
loop,pn
repz
lods
ss
loope
pop
sub
mov
scas
lods
mov
mov
and
xchg
push
adc
xlat
lods
mov
mov
inc
and
pop
ljmp
push
je
jecxz
mov
data16
mov
scas
mov
pop
mov
hlt
cld
sub
push
js,pn
cmp
int
mov
mov
movsl
dec
push
insb
mov
jl
inc
test
sub
ljmp
cltd
xchg
sahf
in
addb
add
orb
fistl
inc
sub
adc
pop
insl
inc
inc
mov
stos
out
or
adc
xchg
pop
fnstenv
or
mov
pop
push
sub
fwait
lock
jg
data16
sbb
cmpsl
mov
mov
xor
divb
mov
in
lret
jle
jl
adc
xchg
daa
nop
lret
or
pop
xchg
sub
andl
jmp
inc
and
adc
pop
lods
mov
and
dec
inc
test
out
rorb
xorb
adc
jo
mov
pop
es
add
add
add
inc
in
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
mov
jle
jg
jle
int
push
mov
pop
js
push
ja
cmp
xchg
out
push
jmp
loop
pushf
bound
jbe
pop
popf
dec
pop
test
test
bound
sbb
insl
lods
test
mov
mov
lea
aam
andnps
cmc
jg
rorb
mov
subl
sbb
sbb
out
xchg
sbb
lret
ja
pop
push
sahf
loope
push
inc
mov
negl
rorl
cmp
xchg
jp
aas
cmpsl
call
nop
push
into
sarl
sub
lahf
jecxz
xor
ss
adc
mov
inc
scas
xor
jb
pop
mov
cmpsl
mov
sub
aas
rcrb
out
jo
popf
decl
mov
cmpsb
shl
sahf
lods
pushf
mov
jne
cmpsb
or
addr16
or
cmp
scas
mov
sub
xlat
xor
and
iret
mov
addr16
pavgw
xor
lahf
iret
lcall
xchg
add
pushf
cmp
sub
inc
mov
popa
push
mov
pop
je
push
les
push
test
cwtl
fists
jle
mull
sbb
jmp
pop
pop
or
iret
repnz
cmp
xor
and
dec
add
clc
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
sub
je
jle
jg
jle
sub
mov
push
popa
cmpsb
fcomi
ja
or
jne
cmp
sbb
lods
mov
push
dec
repz
clc
aam
repnz
leave
mov
sub
imul
and
movsl
pop
mov
mov
xchg
mov
loop
lret
iret
ds
test
inc
iret
decl
mov
hlt
push
stc
cmpsl
int
jp
aaa
dec
addl
filds
nop
icebp
mov
call
mov
cmp
je
xchg
xchg
sub
mov
cmp
xchg
xor
dec
jbe
sub
mov
pop
adcb
jbe
and
mov
pop
mov
bound
or
push
test
ljmp
adc
ds
sub
sbb
stc
pop
ffreep
stos
adc
jl
imul
xor
mov
fmuls
sti
push
add
lret
fsts
scas
mov
mov
inc
pop
lock
mov
cmc
enter
bound
out
ret
decb
lret
rorl
inc
or
and
mov
daa
mov
sbb
imulb
fcompp
jecxz
imul
mov
rcll
dec
fiaddl
std
rclb
sbb
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
xor
jle
fidivrl
jle
xchg
xor
lods
icebp
int3
xchg
push
cwtl
int3
inc
loop
add
repnz
imul
jp
sbb
pop
push
lods
inc
outsb
out
daa
pop
sub
mov
xchg
xor
mov
lret
jle
cwtl
addr16
cltd
push
add
arpl
leave
jno
repz
jg
je
jecxz
pop
cld
add
dec
cmp
aaa
jmp
push
pop
sbb
lock
outsl
mov
jl
adcb
jp
cmp
clc
in
imul
pop
pop
daa
inc
mov
push
jmp
or
cld
xor
roll
aam
mov
or
out
mov
sub
mov
mov
cmpb
cld
daa
fdivl
push
inc
and
push
xchg
inc
lcall
jmp
inc
dec
mov
cld
out
add
cmp
outsb
add
ret
or
iret
movsb
jns
pop
jo
lcall
adc
dec
stos
pushf
inc
clc
jecxz
addr16
push
mov
and
movsb
xor
jl
mov
mov
sub
and
cld
cs
pushf
pusha
pop
cmp
nop
andl
movsb
pop
incl
imul
mov
pop
cwtl
mov
mov
subl
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
pop
jecxz
jno
or
and
jle
or
cwtl
outsl
mov
sbb
mov
and
fcoms
add
sahf
lods
fst
push
das
ja
push
jb
mov
sbb
lret
push
or
mov
outsb
scas
push
adc
add
fucomip
insl
loope
sbb
aad
daa
sarb
pop
adc
dec
sbb
aad
add
ljmp
loop
ljmp
pop
das
stos
push
xor
das
push
adc
in
inc
mov
or
dec
lock
imul
jmp
test
inc
sahf
mov
ja
data16
dec
sbbl
push
cmp
mov
pop
gs
xlat
out
pop
sbb
lods
bound
lret
adc
pop
arpl
movsb
mov
daa
or
cltd
xor
mov
pop
jecxz
dec
out
pop
mov
adc
mov
push
xchg
pop
mov
push
xor
xchg
pop
les
enter
stos
xor
jae
scas
sbb
or
js
inc
lea
loopne
sti
sub
adc
push
xlat
or
repnz
fwait
xor
or
add
add
add
sldt
add
decl
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
mov
xor
jle
and
jle
mov
mov
jge
or
lret
cmpl
jns
lret
push
add
push
sub
stos
inc
pop
enter
sbb
movntps
mov
jmp
enter
pop
sar
fadd
ja
sti
mov
gs
movl
mov
cmp
insl
mov
mov
add
add
mov
int3
sub
scas
pop
jns
xor
jle
pusha
addr16
jge
sub
push
sbb
addr16
and
out
pop
push
outsl
jecxz
cmpsl
jae
mov
aam
stc
mov
notb
xchg
xchg
jo
push
jmp
xchg
jge
xchg
cmc
dec
cmp
ja
inc
adc
imul
rorl
jb
mov
rcrw
ljmp
lret
sub
dec
xchg
inc
xor
lods
notb
ficoms
pop
dec
mov
lcall
pop
and
pop
jecxz
mov
mov
xlat
mov
adc
cld
sbb
sub
lret
mov
mov
inc
jmp
or
mov
or
xchg
pop
scas
test
and
jle
push
sbb
adc
adc
imull
rcrb
mov
repnz
pop
dec
mov
push
outsl
pop
sbb
inc
mov
push
or
cmp
sub
test
mov
mov
cmp
push
inc
add
jge
cmp
sbb
mov
push
cmp
in
lret
xor
xchg
push
sub
ror
or
aas
sahf
mov
mov
jns
lods
push
movsl
pop
xchg
mov
in
mov
lahf
nop
mov
lds
int
fcomps
pop
sahf
mov
add
mov
insb
inc
in
xchg
add
jp
jmp
in
or
sarb
in
add
das
nop
mov
addr16
adc
mov
pop
out
sbb
push
cmc
shlb
cmpsb
sub
test
sbb
adc
jo
cmp
aam
roll
mov
cmpsl
push
push
rorb
daa
adc
or
dec
sub
push
push
jg
aaa
xor
add
mov
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
mov
pop
and
jle
and
jle
aas
bound
mov
ret
scas
xchg
xor
xlat
lea
or
mov
out
dec
dec
hlt
cmc
call
loopne
push
cs
pop
scas
cmp
out
sbb
adc
decl
scas
adc
inc
arpl
xor
xor
sub
mov
jno
pushw
clc
jae
in
shl
sbb
cmpsl
pushf
and
out
mov
push
flds
test
stc
inc
ss
fists
cmpsl
xor
repnz
jg
jnp
aas
hlt
out
xor
xor
loopne
loopne
adc
mov
sub
aam
sub
dec
mov
gs
fdivs
sahf
sahf
insl
xlat
mov
pop
mov
cmp
shl
lock
dec
mov
jno
mov
ds
das
add
fistps
jnp
leave
aam
xor
ss
push
push
jecxz
or
mov
mov
cltd
dec
dec
sbb
or
jns
ret
lock
in
add
cmpsl
inc
jge
sub
jge
inc
sub
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
push
jmp
mov
push
leave
sahf
inc
push
arpl
fldenv
jmp
cmp
pusha
test
call
xlat
daa
mov
fcomp
andl
pop
out
shlb
int
aad
pop
test
and
dec
sub
push
xchg
outsb
je
lea
adc
cld
mov
xor
dec
adc
mov
sub
mov
aam
ds
or
test
inc
scas
icebp
jmp
dec
pop
lods
jb
outsb
sub
arpl
mov
outsl
rol
push
jmp
pop
fidivrs
mov
scas
arpl
insl
and
adc
add
inc
out
mov
push
adc
or
enter
inc
ja
xor
push
or
lods
push
imul
jb
test
cli
sti
push
pop
and
rolb
sbb
xchg
test
ds
sbb
add
js
xchg
pop
mov
idiv
inc
dec
sbb
lods
or
sub
fwait
push
mov
lcall
test
mov
adcl
testb
rorl
scas
xlat
mov
jmp
jbe
xchg
call
adc
loope
lahf
or
jle
fldl
pop
pusha
loopne
enter
mov
pushf
mov
dec
call
data16
push
bound
fnstenv
pop
mov
imul
fiaddl
xor
setne
mov
jp
sub
or
loope
fdivrp
adc
mov
lods
xchg
aaa
sub
push
pop
cs
fs
leave
ljmp
mov
mov
scas
aam
mov
repz
xchg
xchg
xor
insb
clc
adc
stc
mov
ret
dec
adc
shrl
and
jae
cltd
add
stos
inc
dec
adc
adc
imulb
xor
sub
mov
xor
and
test
mov
sub
pop
mov
xor
lea
pushf
lret
call
jecxz
test
inc
shrl
sti
add
dec
pop
push
ja
ret
dec
les
cmpsl
scas
jb
xchg
and
xchg
sti
syscall
xlat
mov
cmpsb
cli
xor
sbb
in
xor
incb
fildl
lods
scas
dec
cmp
adc
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
rclb
inc
add
and
jle
adc
mov
or
jle
dec
pop
cmp
pop
lock
inc
inc
sahf
ret
pop
jl
sub
out
and
mov
jp
inc
sti
inc
inc
aaa
lock
scas
orb
fcoml
lret
insl
negl
aas
out
jl
add
mov
and
popa
push
sub
ljmp
fnstcw
sub
pop
es
scas
inc
pop
add
fists
pushf
movsl
popa
cld
int
dec
cmp
pop
sub
sbb
loopne
lods
sahf
addr16
repz
int
ja
out
je
jne
rclb
es
es
in
mov
aam
ret
ss
mov
insb
push
popl
neg
pop
xor
mov
adc
cmp
inc
call
jbe
sbb
pop
ljmp
lret
cs
cmpsl
xchg
lcall
aaa
arpl
xor
out
xor
cmp
lahf
std
fisttps
fnstcw
and
adc
ds
sub
imul
add
jbe
test
fisubs
add
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
push
xor
add
and
jle
lods
pop
jo
cld
sub
dec
xchg
mov
pop
cmpsl
mov
xor
inc
gs
push
cld
add
stos
or
sar
xchg
pop
nop
pushf
push
imul
pop
arpl
rcl
sub
lods
test
inc
cltd
adc
scas
add
sbb
mov
push
add
sbb
xchg
shrl
jne
test
gs
and
addr16
mov
mov
jb
out
aas
inc
mov
xor
scas
pop
popf
icebp
sub
or
add
sbb
aaa
pushf
arpl
lods
push
aas
les
rcll
and
lret
push
xor
xchg
loop
adc
pusha
mov
push
lea
inc
cli
xchg
movsl
repz
mov
sub
bound
mov
inc
push
xor
in
rclb
into
daa
cltd
sub
rcrb
and
mov
test
test
fbstp
push
or
dec
push
push
xchg
stos
mov
pop
xchg
in
pop
xor
jmp
int
mov
stc
repnz
js
add
and
jle
inc
pop
xchg
into
jecxz
pop
sti
fidivrs
cltd
xchg
dec
insb
push
dec
pushl
pop
lret
inc
loope
shll
sub
enter
mov
inc
arpl
scas
dec
jno
call
and
xor
das
sbb
mov
iret
repnz
cmpsb
inc
add
in
out
cmp
std
out
pop
xchg
sub
movsb
push
xor
or
clc
mov
push
cmp
hlt
cs
dec
sbb
stc
popa
push
mov
in
arpl
repnz
in
pop
mov
jns
in
pushf
into
mov
rorl
nop
cld
dec
mov
sbb
rol
jge
repz
mov
mov
stc
imul
outsl
pushf
push
lds
pop
xchg
xor
xor
push
dec
mov
push
push
out
js
arpl
mov
xchg
inc
xor
lock
arpl
push
rcll
push
cmpsl
dec
fsubrl
sbb
pop
lods
call
mov
cltd
and
or
cli
mov
or
sbb
pop
addr16
mov
loope
pop
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
push
or
je
mov
mov
sub
or
in
and
jg
sarb
dec
xchg
sub
ss
fisttpll
sbb
or
sub
mov
xor
mov
adc
push
adc
pop
xor
fistpl
arpl
push
cmp
mov
mov
adcl
inc
out
add
ja,pn
or
in
push
or
jecxz
int3
push
cld
out
fs
out
mov
push
loopne
or
enter
rclb
lahf
mov
cmp
xchg
xchg
sub
inc
aas
sub
push
movb
stc
imul
sti
ja
ljmp
pop
xor
dec
push
andb
jmp
push
shll
inc
in
pop
shll
sub
push
repz
mov
mov
je
sbb
andl
inc
bound
es
push
mov
inc
aaa
and
xor
and
test
adc
insb
fcomp
subl
xchg
and
ret
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
fisubrl
pop
jle
and
jle
sub
lods
lods
push
dec
adc
push
ljmp
mov
inc
mov
addr16
aam
lahf
cltd
pop
add
rcr
roll
mov
cmp
mov
cmp
test
or
jle
fadds
bound
scas
sbb
out
sub
xchg
push
cmpsb
mov
lea
jecxz
cltd
xor
rorb
call
sahf
cld
aas
cs
dec
jp
push
add
lds
mov
cs
std
data16
push
out
pop
mov
dec
mov
and
lcall
push
sbb
sub
sub
jne
push
daa
xchg
and
in
aas
ds
es
test
dec
cmc
aad
mov
dec
jmp
in
push
inc
pop
and
mov
ret
adc
and
push
and
lds
jg
add
test
and
test
loope
aas
jecxz
push
cmp
pcmpgtd
daa
sub
sbb
and
cmpsl
faddl
xchg
xchg
imul
repnz
mov
push
mov
pop
and
mov
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
mov
add
add
jle
jg
jle
or
mov
loopne
fld
js
add
pop
or
mov
daa
sub
jecxz
loop
add
aaa
dec
xchg
lea
ds
sub
jb
testb
incb
cli
popa
mov
cli
addr16
or
data16
adcl
hlt
gs
pusha
lahf
mov
fldt
nop
sbbb
jb
jne
popa
inc
sub
cltd
je
sbb
cmp
jnp
cmp
and
sub
inc
aad
pop
mov
fs
sub
sub
lods
imul
fld
sti
sub
mov
cmc
mov
aam
push
sbb
push
lea
cmp
addr16
or
sub
and
mov
inc
adc
xchg
and
insl
sahf
movsl
or
and
ret
or
movsl
or
or
add
mov
jmp
addl
out
xchg
push
fdivrs
in
outsl
rclb
dec
pop
nop
loope
roll
xchg
push
cmp
push
and
dec
lahf
into
out
and
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
pop
push
test
add
jle
and
jle
dec
mov
mov
cld
adc
and
mov
cmpsb
jl
xlat
sub
mov
or
inc
sahf
sub
pop
push
popf
mov
jbe
cld
jmp
orl
add
test
test
icebp
xchg
loopne
lret
push
xor
ret
ljmp
fmulp
push
xchg
out
xor
push
pop
xor
mov
xchg
pop
pushf
push
in
aas
mov
inc
imul
ret
jmp
adc
sbb
pushf
movsl
lods
pop
ljmp
aam
adc
xor
test
lret
or
jnp
notb
movsl
sub
pop
pop
mov
push
int3
test
push
call
rolb
es
cmpsb
mov
loopne
int
int3
movsb
push
outsl
lods
in
addr16
flds
push
mov
js
popa
out
test
adc
ror
lods
xor
outsl
push
movsb
sub
lock
mov
add
lahf
cltd
test
cmpsl
in
fisttpl
les
jbe
sbb
fimull
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
les
and
jle
push
jb
mov
inc
pop
mov
lds
fidivrl
mov
xchg
jne
mov
push
sub
cmp
lock
inc
cmp
cmp
loop
mov
sub
hlt
or
and
out
lds
dec
inc
pusha
mov
jns
adc
cmovne
adc
cmp
mov
inc
mov
stc
rolb
and
jo
and
or
push
fcomps
movsl
and
mov
ljmp
sbb
xchg
jp
xlat
add
dec
fistl
or
std
decb
xchg
inc
and
mov
pop
push
fcmovbe
shl
push
outsb
out
sub
popl
pop
sbb
cld
pop
pop
out
or
sbb
xchg
dec
or
xchg
stos
push
fmuls
mov
mov
push
push
cmp
inc
call
push
sub
stos
adc
add
pusha
cmp
mov
imul
jg
and
in
xchg
push
jle
shrl
fstps
jp
add
jge
push
sub
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
add
and
jle
pop
je
mov
xchg
pop
push
mov
dec
mov
sub
add
inc
rclb
cmp
fisttpl
imul
mov
cmp
fimull
jo
les
pop
test
mov
sbb
xlat
lods
mov
pop
sbbb
shl
jl
xor
adc
insb
push
addb
enter
clc
mov
aas
lock
mov
cmp
inc
sahf
in
sub
inc
jne
rcrl
imulb
daa
stc
jno
fcmovbe
rep
or
mov
int3
mov
cmp
out
xchg
fistpll
sub
inc
jecxz
mov
sub
push
mov
sbb
enter
xchg
push
fcmove
stos
and
in
cmc
cli
ljmp
and
adc
scas
dec
rcrl
in
xchg
cmc
cld
jp
xor
in
aas
scas
insl
pop
enter
imul
cmp
pushf
cmp
push
cmpsl
jb
int3
xchg
testb
andb
repz
out
push
jo
add
pusha
pop
pop
data16
sbb
fcmovnbe
mov
fadds
jle
pop
leave
ret
push
mov
jmp
jb
test
adc
popf
xchg
lods
sbb
jmp
mov
adc
fs
out
call
popf
adc
mov
test
cmp
pop
test
mov
jecxz
adc
stc
xor
movsl
inc
pusha
hlt
mov
test
dec
mov
adc
mov
loop
push
lds
mov
push
adc
mov
cmpsb
rorl
mov
mov
rol
pop
cli
jne
scas
stc
jae
dec
cmpsb
pushf
je
and
or
cmc
sub
outsl
fistpll
mov
stos
jno
mov
xchg
mov
or
in
ret
loope
repnz
push
pushf
in
loope
aaa
xchg
push
popa
scas
push
push
mov
outsl
push
add
imul
or
jecxz
js
jo
loopne
jns
popf
mov
mov
push
add
icebp
adc
pop
dec
lcall
movsb
mov
test
and
sbb
sbb
inc
inc
sub
scas
test
int3
mov
pushl
sub
cmp
jb
add
pop
ja
cmpsl
lock
call
dec
jecxz
cwtl
cmp
insl
mov
out
test
fidivs
pop
xchg
jo
shrb
inc
call
dec
mov
iret
mov
ret
sub
mov
adc
mov
sbb
test
rorl
cwtl
aaa
pop
mov
loope
push
test
adc
aaa
mov
mov
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
push
mov
jle
jg
jle
jno
dec
rorl
out
lahf
sub
add
es
sbb
mov
pop
int3
das
dec
mov
jecxz
lods
out
sbb
mov
inc
sub
arpl
repz
or
sbb
add
sbb
xchg
jp
pop
pop
jns
mov
push
lcall
js
js
push
and
clc
sbb
push
mov
repz
test
sbb
shl
push
daa
pop
lock
dec
aas
cmpsb
andl
add
into
and
test
cmc
iret
insb
pushf
pop
aam
js
dec
sbb
test
xchg
rcl
pop
in
sub
xchg
lods
sbbb
in
dec
fimuls
scas
xor
stos
data16
lret
xor
leave
mov
mov
mov
xor
xor
sub
jmp
loope
pop
mov
mov
aam
rcl
push
and
sbb
sub
mov
push
repz
mov
cmp
mov
xor
mov
shll
mov
and
sarb
push
sahf
scas
cltd
xor
lods
pop
testb
in
lret
rol
dec
sub
loopne
hlt
addb
inc
inc
jb
rclb
mov
or
xor
divb
sti
test
sbbb
jmp
lea
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
stc
xchg
and
dec
and
dec
mov
and
dec
mov
sub
sbb
ja
mov
lds
push
sbb
bound
push
and
scas
call
cwtl
pop
notb
js
sahf
mov
mov
lds
shlb
xor
stos
jp
and
in
fidivrs
sub
scas
lds
cmp
movsb
sbb
iret
ret
mov
or
lea
pop
and
popa
dec
mov
inc
sub
push
loope
test
sub
and
das
shlb
adc
mov
mov
das
repz
enter
in
ja
inc
mov
and
push
dec
jo
xor
inc
outsb
or
aaa
js
mov
inc
jp
lock
adc
std
out
cmpsb
imul
popf
mov
movsl
fimull
cltd
xchg
je
repz
jne
sub
loope
ljmp
sti
dec
push
dec
push
loope
ljmp
sbb
and
filds
repz
pop
xor
aam
lods
push
testl
xor
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
fxam
jle
jle
jmp
pop
adc
and
out
arpl
int
cs
sbb
jp
iret
aam
add
push
mov
mov
adc
jge
dec
mov
jns,pn
adc
aam
xor
xor
sub
push
scas
cld
pop
fs
sub
mov
nop
sti
or
mov
sbb
mov
sbb
imul
add
dec
ret
cs
das
in
popf
jb
mov
inc
sahf
lret
add
dec
or
push
flds
test
jecxz
out
int3
lret
or
dec
fcoms
cmp
and
stc
mov
xchg
jnp
fnstsw
mov
test
movsb
pushw
lcall
in
mov
push
jbe
and
push
xlat
push
orl
das
cmpsb
dec
xchg
ret
addl
jmp
test
fcmovnb
cmp
jle
pop
mov
mov
mov
and
jg
push
xchg
adc
pop
nop
dec
push
jmp
xor
cwtl
cmp
outsl
inc
insb
pop
xchg
push
aas
stos
sbb
jp
mov
clc
pop
xchg
push
mov
idivb
repz
cmp
jbe
and
sub
mov
and
insl
push
cmp
andl
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
hlt
jmp
jg
jle
pop
adcl
jl
fidivs
inc
sub
push
aam
push
arpl
pop
jae
into
stos
mov
fincstp
mov
add
popa
int3
leave
xor
adc
fs
insb
pop
cmpsl
inc
in
pop
xchg
push
stos
dec
negb
mov
repnz
inc
cmp
es
xchg
jge
gs
mov
scas
jle
mov
push
or
gs
xchg
rorb
mov
mov
pushl
sbb
jle
xchg
xor
js
xchg
push
je
ds
inc
push
ds
aas
dec
mov
pop
js
lock
pop
sahf
addl
test
push
call
mov
mov
lcall
sub
outsl
sub
shll
or
out
push
sub
dec
add
mov
inc
cmpsb
or
outsb
mov
loope
out
mov
les
cltd
fmull
pop
lret
mov
icebp
and
jmp
out
lret
xchg
xor
pop
cmpsb
int3
ljmp
cmpsb
in
push
inc
pop
inc
mov
add
sbb
mov
dec
push
mov
sti
std
xchg
sub
aad
not
rcrb
inc
sub
push
mov
cs
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
pop
or
dec
adc
fdivrl
jle
bound
cmp
iret
out
pop
mov
addr16
or
dec
pop
es
int3
ljmp
leave
repnz
pop
mov
in
jmp
or
clc
testb
inc
add
push
inc
stc
aam
out
dec
jecxz
popf
push
push
lds
or
fnstenv
pushf
pop
popa
and
mov
cmp
cmp
outsl
mov
pop
ud1
mov
pop
test
inc
arpl
push
cmp
cld
push
xorl
xor
mov
test
je
and
mov
int
pusha
sti
mov
lret
movsb
sub
loop
inc
fsubs
pusha
xchg
or
pop
jnp
push
icebp
xchg
ljmp
cli
and
cmp
xlat
in
mov
xchg
imul
mov
mov
das
fnsave
mov
or
mov
sti
shrb
and
notl
lcall
cmp
and
mov
jmp
movsb
lock
pop
pop
cmp
fimuls
xor
lds
popa
fisttpl
aas
sbb
popa
das
inc
or
test
into
push
pop
aad
mov
iret
rclb
xchg
enter
ret
inc
add
add
add
das
pop
xchg
adc
arpl
push
push
sub
push
jle
fdivrl
jle
dec
mov
jmp
aas
repnz
addl
xchg
inc
mov
jne
fsub
and
lock
out
popa
subl
lea
mov
leave
into
pop
into
mov
shll
ds
adc
jae
inc
xchg
imul
mov
push
sbb
xor
popl
mov
and
outsb
jecxz
gs
mov
jne
and
jle
xor
add
cwtl
mov
and
repnz
lds
cmp
inc
cmpb
dec
out
or
jbe
jb
cli
xchg
jle
addb
in
in
or
daa
xor
test
push
inc
mov
pop
mov
xor
es
fists
imul
mov
pop
sti
xor
mov
mov
push
xor
xchg
insl
adc
and
xchg
test
adc
out
push
xchg
bound
leave
jb
push
cmp
sbb
ds
and
repnz
gs
sbb
lods
aam
sub
push
shrl
cmpsl
sbb
sub
mov
roll
mov
jmp
mov
jmp
push
gs
movsb
es
xor
adc
fdivrl
jle
ljmp
mov
mov
mov
jo
inc
sti
shl
shl
in
push
push
mov
pushf
or
mov
addr16
push
xchg
dec
call
push
and
cltd
std
insl
mov
testb
out
add
in
mov
insb
or
inc
sti
dec
xchg
or
daa
mov
loop
out
fmuls
inc
dec
pop
pushf
out
repz
hlt
sbb
scas
mov
clc
int3
jno
push
xchg
aas
arpl
cli
adc
pop
adc
jne
test
sbb
xor
faddp
fsubr
out
sahf
lock
jae,pn
pop
popf
mov
mov
out
clc
xor
xor
push
insb
in
mov
notl
push
sub
cli
pop
loop
fidivl
fidivrl
sbb
xorl
or
cltd
loope
mov
and
xor
mov
mov
repz
dec
xlat
xor
bnd
or
mov
push
jo
cwtl
dec
inc
pusha
or
xchg
outsl
or
xlat
mov
ds
cwtl
and
je
cmp
xor
adc
push
mov
repz
xchg
mov
hlt
lret
sub
xor
and
lock
mov
dec
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
mov
dec
push
xor
push
mov
xchg
pop
inc
inc
mov
xor
insl
andb
lds
add
pop
fcoml
cmp
cwtl
xchg
jns
std
je
mov
mov
shlb
stos
lods
xchg
mov
sub
xor
les
call
push
pushf
pop
mov
sarb
js
test
mov
cmp
dec
lcall
fwait
test
sub
cwtl
ja
fstpt
das
jo
shlb
push
jmp
jns
repz
jmp
repz
loope
and
xchg
cmp
mov
and
nop
divb
add
out
fadds
push
mov
clc
in
mov
pusha
push
jge
mov
push
dec
push
movsl
mov
adc
fisubl
rcrb
jo
lods
add
xor
jl
xchg
scas
cmp
mov
adc
fbld
gs
in
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
out
xchg
jge
jle
or
jle
push
data16
aad
clc
push
out
jge
add
add
pop
stc
dec
mov
mov
sbb
sub
add
sbb
dec
cmp
sbb
fistpl
stc
add
pop
mov
call
in
jo
rcrl
les
sub
jns
aad
lods
sbb
outsl
je
int
mov
fsts
pop
mov
dec
adc
fdiv
leave
push
dec
shlb
mov
es
sub
or
and
sarl
mov
xor
nop
mov
lahf
fcomp
popa
int3
jmp
int3
mov
sbb
pop
cltd
stos
ss
shrl
mov
shlb
jl
and
jns
jp
jl
cmc
pop
leave
cltd
dec
push
fwait
nop
mul
jo
shrl
xlat
loope
js
ss
cwtl
loope
or
inc
lds
dec
inc
movsl
adc
mov
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
ficompl
sub
or
jle
or
push
data16
adc
sub
shlb
xor
mov
out
jnp
fwait
jne
xchg
lods
ds
inc
push
clc
xchg
mov
pop
subb
mov
xor
js
adc
out
je
adc
mov
mov
mov
scas
jle
rcll
sub
add
icebp
daa
aaa
mov
hlt
push
movsl
cmp
pop
jno
push
dec
inc
push
fistl
pop
mov
add
leave
cmp
icebp
mov
hlt
mov
jmp
leave
jecxz
mov
adc
push
lods
mov
mov
jmp
push
xor
je
mov
stos
sub
scas
sbb
mov
dec
in
loope
out
ficoml
lds
and
xor
ljmp
and
pushf
push
outsl
or
int3
repnz
lahf
in
shl
sub
scas
rol
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
fs
add
jg
jle
dec
rcl
out
movsl
movsl
mov
call
xchg
aad
push
adc
cmp
lods
push
insb
ret
shll
repz
mov
xor
xor
push
insb
fistl
sub
lcall
sti
pop
stos
lcall
xchg
aas
or
jp
cmpsb
xor
cld
ss
sets
daa
push
mov
mov
or
das
shr
jg
fiaddl
add
or
push
xor
dec
jmp
xchg
jle
xchg
xchg
insb
jb
mov
add
xchg
xchg
pop
add
adc
jo
xchg
rol
dec
add
ret
cltd
movsb
mov
mov
or
mov
sarl
mov
je
and
fistpll
int
push
fimull
xchg
mulb
pop
xchg
in
aam
ljmp
stc
cmp
push
fidivrs
lret
adc
mov
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
rcrl
xor
adc
jle
or
jle
lds
call
cwtl
stos
add
add
inc
pop
mov
and
cmpb
sub
cmp
imul
roll
cwtl
aaa
cmp
and
insb
lods
push
or
jecxz
out
mov
je
cli
je
jae
mov
fidivrl
pop
and
push
mov
dec
xchg
test
aas
inc
xchg
daa
out
psraw
mov
push
icebp
in
or
testl
loope
rorl
cmp
ret
mov
fstpt
mov
xor
adc
pop
inc
inc
popa
push
dec
push
out
out
jg
adc
and
sub
cmp
xorb
sti
xor
cmpsb
cmpsl
outsb
bound
es
movsb
scas
xchg
mov
rcll
add
std
pop
dec
test
gs
sub
mov
out
mov
or
scas
mov
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
int
push
sub
jg
jle
orl
mov
adc
js
repnz
pop
nop
push
xchg
loop
clc
aam
mov
stos
mov
mov
in
pop
mov
sbb
jmp
jp
or
inc
cvtpi2ps
lods
aam
xchg
cltd
test
sbb
out
inc
mov
fwait
push
dec
cmc
mov
mov
cmpsl
jmp
pop
cli
inc
sbb
adc
add
dec
clc
push
stos
cmp
call
movsl
ss
sbb
pop
ret
xor
or
push
in
jo
mov
stos
sub
cmp
push
insb
outsl
mov
sub
pop
movsl
xor
inc
movq
jo
pop
jno
repz
mov
mov
iret
insl
sbb
rcrb
mov
adc
sub
pop
push
test
loope
popa
sub
jmp
jno
inc
inc
sub
lahf
ss
fsubrs
stos
aas
cmpsl
mov
cmp
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
popf
outsb
cmpb
jle
or
jle
call
ret
mov
jnp
int
dec
xor
dec
or
jmp
sbb
lds
pop
imul
out
mov
outsl
fstp
mov
outsl
test
pop
cmp
repnz
orb
mov
mov
inc
mov
add
enter
jbe,pn
stos
mov
mov
je
adc
les
xlat
mov
movsb
and
inc
mov
testb
jge
mov
sarb
mov
in
jns
xorb
or
xor
dec
mov
and
xor
imul
out
pop
dec
xchg
stos
aad
mov
cli
cmp
xor
add
inc
mov
jb
aad
dec
and
xor
push
popa
inc
imul
sbb
jmp
cld
add
mov
jmp
dec
sub
lock
mov
jle
jg
jle
pushw
cs
and
cmpsb
leave
mov
mov
outsb
orl
sti
insb
ljmp
int3
pop
lock
and
inc
shr
pop
or
ret
shlb
cmp
push
pop
xchg
dec
mov
push
mov
pop
dec
int
icebp
push
push
js
rolb
or
int3
and
xor
inc
mov
outsb
lock
dec
adc
repz
aas
add
push
mov
dec
push
jnp
xor
rolb
inc
scas
in
js
cmpsl
mov
gs
inc
ljmp
mov
idivl
cli
fimuls
ja
adc
push
cs
hlt
stos
pop
out
leave
cmpsb
cmpsb
adc
pop
xchg
addb
scas
push
ret
adcb
xorb
push
and
stc
lods
mov
faddl
dec
cmc
mov
add
jae
scas
jnp
imul
repz
and
inc
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
out
in
sub
jle
test
repnz
cmp
pop
mulb
push
shrl
insb
add
mov
sti
outsb
or
mov
leave
outsb
les
fisubrl
xor
sbb
je
int3
call
ds
xchg
or
adc
mov
inc
or
jmp
mov
sbb
mov
fmull
lds
jge
xor
rcll
fdivrs
xorb
or
les
out
or
sbb
das
dec
ret
les
bnd
pop
je
fmul
or
mov
xor
sbb
push
gs
fldenv
aas
sub
xchg
insl
mov
mov
jbe
add
fstl
xchg
out
sbbb
les
or
xchg
pop
dec
outsl
xchg
dec
inc
ret
push
xor
add
clc
insl
jne
idiv
push
cmp
pop
inc
mov
and
and
and
mov
in
mov
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
fcoms
jle
or
jle
lds
fcomps
sti
add
repz
xchg
xchg
add
cmp
fsub
mov
stos
sub
gs
xor
add
dec
dec
push
sahf
push
xchg
aad
imul
ja
adc
cmp
mul
mov
or
push
dec
loope
stc
mov
lcall
cmp
inc
test
popa
mov
ds
push
sub
push
jle
aaa
or
pop
scas
or
test
rorl
imul
rcl
fwait
add
in
les
mov
scas
dec
pop
inc
pop
mov
jle
repz
adc
sbb
push
inc
loop
jae
mov
push
push
out
xor
pop
mov
pushf
add
shrl
push
sbb
adc
xchg
push
movsb
pshufw
dec
iret
psllq
cmp
inc
mov
add
xchg
xorb
ds
push
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
xor
jne
and
or
jle
fcos
pop
push
stc
jg
movsl
sbb
mov
mov
mov
push
das
xchg
ja
iret
mov
jb
cli
data16
icebp
out
hlt
popa
jg
pusha
js
or
inc
pop
out
test
inc
jo
aad
jmp
leave
xchg
stc
lret
stos
push
mov
dec
cld
xchg
mov
test
xchg
test
push
sbb
inc
jae
clc
push
mov
pop
lods
sbb
mov
adc
pop
dec
aam
lret
jo
mov
int3
outsl
out
xchg
in
rorb
inc
adc
repz
push
les
ja
mov
xchg
pop
daa
int
cmp
hlt
fistps
repnz
ret
pop
and
lods
rcrb
xlat
jmp
pop
or
jae
std
in
imul
pop
inc
imul
jp
xor
sub
adc
push
hlt
jmp
int3
jecxz
sub
sbb
jnp
push
sbb
enter
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
push
ja
lea
jmp
out
pop
push
sub
mov
fstps
xchg
stc
pushf
adc
lods
pop
mov
pop
push
sub
pop
cmp
nop
test
mov
mov
xor
arpl
push
scas
pusha
and
sbb
negl
insb
adc
cmp
xor
shrb
movsl
out
sub
clc
fwait
mov
iret
cmp
sbb
and
push
jecxz
mov
jg
sti
mov
mov
mov
mov
mov
jmp
es
mov
les
xor
mov
cmp
and
cmpb
aaa
fwait
popf
xor
push
jge
xlat
push
add
and
jg
shrd
pop
push
test
filds
adc
pop
test
pop
jbe
push
mov
and
mov
es
sti
xchg
ja
fcoms
or
dec
mov
aad
punpckhwd
mov
out
mov
sub
cmp
xchg
notl
das
cmpsl
in
and
ja
xlat
adc
adc
mov
insb
daa
mov
dec
mov
roll
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
jle
popf
and
push
jg
jle
pop
ja
inc
js
mov
mov
test
mov
mov
leave
test
adc
push
cmc
xchg
lret
xchg
and
mov
add
jecxz
mov
push
push
add
in
sub
std
cmp
outsl
push
testl
add
cmp
lods
jp
lret
push
push
in
int
sub
dec
mov
loopne
cli
mov
mov
popa
jb
lods
or
rclb
sahf
nop
pushl
fstps
pushf
xor
lods
ss
inc
and
xchg
lcall
cmpb
je
inc
lods
fwait
jae
repz
fs
aas
xchg
adc
jl
cmc
cli
pop
xchg
fiaddl
push
add
cmpl
mov
push
or
push
inc
fsubs
dec
or
dec
xlat
or
mov
mov
and
add
addb
add
mov
cltd
adc
push
xlat
add
pop
imul
aaa
aaa
aad
sub
mov
xor
pop
xchg
sar
insb
fdivl
xlat
fildll
inc
lea
scas
push
push
inc
mulb
adc
dec
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
ds
fxch
mov
jle
push
jg
jle
outsl
mov
mov
ficoms
dec
and
popa
lock
mov
jmp
sub
cltd
fstpt
sub
jae
enter
push
dec
fldenv
xchg
jbe
fistl
aas
mov
mov
movsb
enter
push
jns
rcrl
test
xchg
mov
imul
outsb
fisttps
and
mov
movsb
ficoml
pop
or
and
inc
fdivrl
push
daa
or
mov
fildll
mov
fiaddl
ret
shlb
pop
mov
push
mov
outsb
sub
or
push
or
sahf
fbstp
das
mov
xchg
jae
loope
mov
sub
test
cltd
adc
rcrl
xchg
xchg
or
invd
pop
xchg
jp
push
scas
je
sbb
scas
cltd
test
shlb
jecxz
addr16
mov
clc
lahf
data16
push
mov
repnz
aas
push
outsb
add
iret
and
pop
mov
outsl
repnz
xor
or
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
mov
jle
push
jg
jle
mov
adc
mov
push
xor
les
pop
test
adc
cmp
jo
mov
repz
add
dec
outsl
lods
sahf
cli
scas
xor
mov
shl
arpl
stos
or
mov
add
jmp
xchg
mov
add
shl
insb
mov
push
mov
orl
testb
div
push
mov
jae
pop
mov
push
mov
lock
cmp
mov
aas
dec
lcall
mov
test
xor
mov
add
imul
fdivrs
or
negl
mulb
pop
pop
imul
pop
les
xor
hlt
mov
ljmp
mov
out
jp
popa
xchg
push
js
xor
fwait
outsb
pop
cmp
cmp
jl
xchg
pusha
hlt
sbb
ds
inc
aas
flds
cwtl
pusha
adc
stos
sub
sub
inc
sbb
push
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
int3
out
add
jg
jle
loop
fdiv
hlt
sub
ja
pusha
mov
icebp
mov
das
dec
or
cmpsl
adc
jo
sarl
jmp
jb
mov
orb
std
dec
cs
enter
mov
inc
sub
in
cmp
arpl
xor
mov
sub
popf
sub
xor
sti
jle
bound
out
ss
sahf
mov
inc
dec
pop
sarl
insb
mov
aaa
or
xchg
ss
jae
fs
vunpcklpd
sbb
add
mov
fbld
dec
sti
movsb
mov
xlat
lret
pop
movsb
les
arpl
pusha
sbb
ss
jp
lea
mov
cmpsl
clc
cld
pop
imul
cmc
test
pop
out
pop
or
cmp
dec
jp
push
pop
xor
xchg
nop
cmp
insb
mov
inc
or
lahf
and
int3
jae
sahf
cmp
or
leave
js
mov
mov
lds
loopne
or
lret
out
insl
dec
jbe
mov
aad
fsubs
lcall
mov
sbb
pop
pop
stos
es
gs
cmp
mov
shrl
mov
jg
mov
int
std
ljmp
cmc
js
lret
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
inc
mov
jle
lds
jle
pop
mov
ret
repnz
repz
inc
mov
sub
dec
imul
fisttpll
xchg
adc
stos
sarb
jge
ss
pop
mov
imul
mov
lret
in
jne
fxch
rol
adc
inc
and
inc
add
jle
cmpsl
ss
push
stos
jl
sub
call
add
pop
pop
mov
lret
xchg
mov
push
add
repz
xchg
popa
leave
cmp
dec
daa
adc
xor
outsl
shrl
xchg
jbe
pusha
lods
mov
sub
or
lea
xor
imul
pop
xor
fnsave
dec
jp
enter
adcb
scas
popa
jp
cmp
cmp
fwait
pop
into
jge
sub
mov
les
dec
nop
mov
jmp
pushf
popf
insb
push
fnstsw
jns
jnp
pusha
add
dec
int
aas
mov
jmp
int
sbb
cmp
xchg
pop
ljmp
ret
aad
mov
scas
bnd
sbb
jmp
dec
dec
int3
sbb
jno
sub
inc
dec
xchg
add
sbb
cmp
jp
mov
xor
xor
add
jmp
jg
add
jns
cmp
jno
dec
cmp
lds
jle
cmp
mov
lret
ljmp
pop
ljmp
adc
mov
adcl
push
pop
sub
insl
sbb
pushf
out
inc
sbb
jecxz
fistpl
ljmp
pop
test
data16
and
push
mov
test
or
jae
push
lret
sub
in
sub
mov
rcr
or
sahf
sub
dec
inc
data16
sub
fstpl
push
inc
sahf
and
gs
pop
mov
pusha
xor
mov
stc
fistps
ds
lea
xchg
xchg
dec
popa
xchg
leave
fisubrl
inc
push
aad
jne
pop
mov
into
arpl
adc
or
lahf
xlat
mov
test
in
inc
lock
popa
mov
sarl
stos
decl
lea
or
aad
repz
inc
sbb
cmp
push
dec
test
add
scas
cmp
or
test
insb
dec
jecxz
jb
setnp
inc
sub
xor
mov
int3
and
js
int
mov
jmp
adc
stc
shl
pop
lock
gs
cmpsl
adc
and
pop
pop
pop
push
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
mov
jle
jg
jle
mov
cmp
sub
cwtl
inc
int3
lret
cmpsl
push
push
and
je
inc
mov
cmpsl
mov
loop
pusha
fadds
iret
push
sub
out
sbb
sets
scas
in
or
les
xchg
sub
xchg
jo
ds
pop
test
xchg
aas
add
lods
sarl
mov
enter
mov
je
mov
ficoml
stc
mov
in
mov
inc
push
xor
jl
xchg
mov
std
or
in
aas
add
out
sub
inc
pusha
mov
ja
push
shl
jmp
xchg
sbb
xor
lret
jno
mov
jmp
sarl
sbb
mov
lahf
pop
inc
je
mov
mov
ret
fisubs
mov
sbbl
adc
or
sub
adc
out
pop
outsb
sub
sub
sub
jmp
cmp
pop
push
or
mov
out
jge
jmp
shrl
push
sbb
movsb
sahf
sbb
mov
dec
rcr
mov
lods
add
punpckhdq
mov
fisubl
scas
int
or
and
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
adc
icebp
jle,pt
mov
jle
mov
dec
xorb
sarl
lock
rorb
and
adc
sub
mov
icebp
jecxz
dec
pop
aas
in
ja
int
lcall
dec
dec
test
ds
leave
movsb
pop
push
and
jo
clc
pop
cmpsb
dec
lcall
xor
lock
clc
inc
aam
jo
fwait
dec
cmp
leave
xor
sub
jl
repz
cld
popf
mov
pop
mov
das
inc
xor
and
stos
out
nop
dec
ss
loope
pop
js
pop
pop
and
in
inc
outsl
pop
cmc
in
pop
xchg
push
mov
sbb
sbbb
adc
mov
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
dec
and
jle
jle
jle
lret
js
sbb
fisttps
mov
or
cmp
sbb
add
stos
jo
stc
fwait
jns
dec
enter
mov
dec
inc
loopne
jne
jb
scas
dec
or
and
and
sti
or
es
cld
sbb
xchg
fdivrs
mov
mov
test
push
lahf
pop
jmp
cs
cli
lret
add
push
aam
iret
inc
lods
cli
push
hlt
mov
jns
xchg
inc
arpl
mov
lahf
mov
pop
cmp
xor
or
call
daa
stos
mov
jno
daa
mov
push
cmp
sarl
and
arpl
dec
sbb
xchg
jnp
aas
jns
jne
movzbl
and
jmp
mov
stos
popa
jns
in
mov
insb
jne
add
jle
jle
jle
and
in
pop
adcb
mov
inc
jb
mov
xor
push
call
ret
jo
pop
add
pop
pop
mov
test
movl
sub
push
or
cmp
scas
cld
cmp
bound
hlt
ret
push
add
out
sub
into
xchg
pop
xchg
sbb
jl
and
inc
mov
mov
sub
test
adc
dec
cld
mov
cmp
add
jae
xchg
ss
cmpsb
sbb
xor
dec
mov
push
and
adc
fcoml
pop
add
push
dec
push
aam
movsl
daa
add
in
mov
mov
sub
fisubrl
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
xchg
or
pop
cmp
jle
jle
jle
stos
int3
cmp
or
out
dec
insl
jecxz
jg
add
xchg
out
inc
pusha
aaa
jb
adc
or
lea
xor
sbb
cli
iret
cmp
xchg
sub
sub
repnz
dec
shlb
ljmp
sbbb
push
enter
mov
pushl
outsb
add
push
dec
xchg
mov
push
es
int
pop
pop
push
popa
jl
mov
push
adc
aaa
leave
fsubrs
shl
lea
cmc
bound
xchg
lds
fldcw
xchg
jae
xor
dec
rcrb
pop
pop
cmc
xlat
std
mov
popa
push
jo
sahf
pushf
leave
out
shll
xor
add
xchg
cmpsb
push
xor
dec
add
popl
or
add
xor
adc
incl
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
jg
pop
adcb
jle
cs
mov
mov
insl
test
stos
das
inc
push
cmp
inc
fstpl
out
pushf
shrl
ret
cmpb
jo
or
jo
pop
dec
and
and
mov
shl
push
mov
mov
mov
cmp
mov
int3
sub
xchg
insb
mov
cmp
inc
add
ja
or
cmp
jl
jbe
gs
repnz
popa
dec
and
pop
lea
mov
fistl
jl
jns,pt
mov
adc
mov
mov
cmp
sub
cmp
cmc
jg
cmp
mov
ret
xor
ljmp
and
cld
adc
popl
mov
xchg
negb
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
xlat
ds
xor
mov
jle
data16
bound
cmc
push
or
je
and
shlb
sub
sub
mov
mov
in
pop
outsb
add
ljmp
add
jecxz
cmp
mov
insl
dec
pop
lock
mov
pushf
xor
test
fbld
sub
iret
pop
or
fisttpll
popa
xchg
mov
test
jge
push
or
sbb
mov
xchg
jbe
xor
into
add
or
fwait
mov
addl
fmulp
leave
enter
lahf
dec
jno
jbe
adc
pop
pop
jo
icebp
pop
mov
jg
ss
out
cmp
aam
movsl
xchg
aad
mull
stc
das
push
out
cmc
xor
iret
add
mov
sub
daa
or
out
decl
cmp
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
iret
cmp
xor
mov
jle
int
insb
adc
xchg
loop
xchg
pusha
scas
sbb
lret
mov
cmp
nop
mov
cmc
mov
or
mov
int3
push
cmc
gs
mov
sub
xchg
fmull
mov
xlat
mov
fldt
dec
mov
push
push
repnz
daa
push
xor
js
imul
jno
loop
rorb
bound
lea
xchg
jae
mov
or
in
frstor
cli
pop
cmp
ror
nop
fdivl
jne
sbb
jg
mov
imull
sub
addr16
outsl
dec
sub
jne
ds
outsl
mov
shlb
shlb
adc
push
push
ja
or
outsl
fimuls
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
cwtl
ss
vmwrite
jle
mov
jle
bound
hlt
imul
aam
mov
inc
add
add
xor
cmp
mov
xorb
lcall
packssdw
cld
rcr
repz
lods
jo
mov
mov
test
push
lahf
pop
sub
mov
mov
mov
xchg
jno
loopne,pn
in
xchg
push
pop
sbbl
pop
push
arpl
int3
dec
int3
mov
divl
cmp
inc
xor
jno
lret
xchg
cwtl
iret
cs
ljmp
dec
mov
neg
mov
adc
jo
lds
or
jno
lret
add
ds
inc
mov
cmp
dec
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
imul
jle
jle
jle
int
sbb
int
dec
sub
inc
inc
rcl
pop
in
mov
ficompl
or
ljmp
daa
shrl
scas
stos
imul
repz
add
shlb
push
out
xchg
mov
data16
push
sbbl
in
jmp
jns
sti
popa
imul
xchg
xor
lret
xor
int
psubsb
jmp
in
adc
jnp
popf
shlb
data16
mov
rep
test
pcmpeqb
loopne
cmp
xor
outsb
inc
jp
pop
sbb
cmp
pop
andl
push
cmp
cmp
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
mov
out
mov
jle
mov
jle
adc
sub
or
bound
and
les
pop
mov
cmp
jg
lea
dec
adc
fadds
and
and
lcallw
fmull
filds
loope
cmp
jae
xor
mov
std
iret
and
cmc
mov
jle
xchg
mov
aad
mov
movsl
stc
jno
xchg
mov
xchg
sbb
stos
jp
mov
xchg
dec
adc
outsl
clc
fwait
in
fsubrl
addr16
ret
cmp
inc
sbb
sbb
pop
stos
icebp
xor
mov
inc
mov
inc
cltd
mov
sti
subl
lods
ret
outsl
dec
imul
cmpsb
mov
in
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
in
push
jle
jle
jle
cmpb
loopne
inc
out
xor
fld
or
mov
xor
ja
and
adc
push
js
lds
add
in
inc
add
mov
sahf
cld
sbb
div
inc
add
cmp
incb
jno
push
add
xchg
lahf
jae
sub
push
inc
inc
adc
pop
inc
in
scas
inc
inc
mov
lret
pop
insb
in
das
shll
mov
dec
xor
and
and
mov
sub
dec
xchg
fsts
add
in
sub
leave
dec
and
hlt
cmpsb
inc
or
mov
jmp
cli
inc
je
dec
push
add
sarl
ret
or
add
mov
jmp
decl
xchg
or
cmp
jle
jle
shlb
cmpsb
movsb
movsb
ljmp
iret
cltd
arpl
xchg
incb
ljmp
cmp
in
and
dec
test
add
jle
push
imulb
shlb
rcrb
insl
cmpsl
fisubl
fisubl
sub
xlat
ficoms
pop
mov
bound
push
imul
lret
cmovns
test
lret
cld
sbb
gs
dec
or
xchg
sbb
sbb
sub
adcl
mov
faddl
jbe
and
or
jmp
jno
inc
fcmovu
or
or
mov
pop
push
movsl
pop
dec
mov
mov
js
mov
leave
enter
scas
add
loopne
add
inc
loop
xchg
imul
ja
push
aaa
jle
mov
jle
js
aam
jno
mov
or
mov
clc
cmp
rcll
jp
sbb
jb
bnd
mov
mov
fsubrp
xor
jle
sahf
or
push
or
dec
ret
fsub
stos
pop
test
out
shrl
sahf
into
push
mov
and
or
mov
jns
or
jp
or
jno
xor
fs
mov
loop
in
pop
leave
hlt
pop
addr16
fwait
in
loopne
cmp
add
subb
scas
lret
or
repz
xlat
insl
aas
mov
scas
cmp
in
shlb
into
xchg
ret
mov
adc
jmp
sub
das
add
in
dec
mov
xor
sbbb
jnp
fisttpll
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
mov
jle
mov
jle
sbb
lret
imul
into
jae
push
pop
scas
xor
push
mov
out
mov
jp
ljmp
pop
push
sti
dec
popa
add
jmp
shrb
movl
sbb
xlat
js
aas
add
jno
ret
mov
inc
pusha
into
call
add
add
clc
mov
mov
pop
jb
lds
mov
pmullw
jae
or
push
mov
adc
je
fs
testl
xchg
xchg
ror
repz
or
dec
cs
imul
imul
inc
sub
cmp
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
nop
push
add
loope
jle
mov
jle
aad
xchg
ja
inc
push
fisubrl
out
mov
cmp
push
cs
mov
jge
shlb
push
sbb
mov
or
js
jg
mov
inc
push
mov
mov
mov
pop
sar
adc
adc
sahf
jae
xor
inc
cmp
js
sub
in
jbe
and
and
add
push
test
xlat
fcompl
adc
or
mov
sbb
decl
faddp
fnstsw
adcl
push
ret
mov
mov
sub
or
adc
js
inc
nop
psllq
rep
jae
mov
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
xchg
dec
aad
add
mov
cwtl
inc
sbb
sub
lock
or
pushf
mov
push
dec
ljmp
ja
pushf
in
stc
mov
lahf
inc
movsb
add
adc
dec
sbb
xchg
and
fcoml
hlt
sbb
in
cmp
mov
movsb
fs
test
jmp
adc
inc
aad
inc
mov
hlt
iret
gs
xchg
aam
xor
icebp
ja
out
jecxz
std
jl
imul
jno
dec
dec
insb
fisubl
loop
jo
inc
mov
sub
out
mov
mov
pop
xchg
insl
pop
repz
dec
add
adc
outsb
lea
fwait
or
cmp
pop
pop
jne
dec
dec
dec
mov
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
movsl
scas
scas
pusha
jno
jle
mov
jle
mov
call
and
jmp
inc
je
cmp
cs
das
std
lods
mov
ds
test
adc
jg
push
pop
iret
add
pop
inc
pop
cmp
add
pop
lds
clc
mov
cmpl
add
js
pusha
cmp
mov
jecxz
inc
push
lahf
mov
add
xchg
push
xchg
aad
dec
xchg
or
push
cltd
push
dec
push
lahf
adc
xchg
push
imul
outsb
inc
or
adc
add
push
out
loope
out
pop
mov
mov
jg
insb
out
je
insl
dec
js
jmp
aas
loop
dec
or
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
inc
aaa
adc
mov
jle
mov
add
repz
rclb
xor
fidivrl
pop
inc
dec
aam
inc
leave
insb
mov
movsb
scas
ds
adc
or
rcr
adc
popa
xor
add
pop
mov
ret
xchg
pushf
jl
mov
adc
leave
enter
pop
and
push
dec
mov
shll
jno
clc
mov
pushf
lds
loop
xchg
dec
sti
mov
ljmp
mov
inc
or
stos
jo
arpl
sbb
in
xchg
in
cwtl
pop
dec
cwtl
pop
add
pop
pop
xor
jg
ror
jmp
fucomip
lods
adc
xor
mov
testl
mov
dec
pop
and
adc
loopne
add
test
xchg
push
stos
push
push
gs
xchg
lea
enter
jle
jle
xor
addr16
push
xor
lahf
and
adc
jb
adc
inc
fs
or
cmpb
xor
mov
jmp
push
and
testb
call
push
cmp
ss
pop
fdivrl
lods
and
pop
lret
in
jmp
pop
inc
mov
dec
imul
jae
lds
movsb
test
mov
and
fxch
adc
xor
pop
sbb
addb
push
adc
mov
push
jnp
jae
and
pop
inc
mov
pop
stos
test
sub
push
addb
pop
pop
leave
sub
xchg
or
mov
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
add
pushl
and
loopne
les
iret
adc
add
mov
add
cld
js
xchg
mov
out
je
pop
scas
and
add
adc
sbb
add
pminub
adc
xlat
adc
mov
clc
mov
in
lahf
mov
adcb
popf
push
push
mov
push
cwtl
jg
mov
scas
mov
call
lods
outsl
pop
ja
jmp
not
add
in
jmp
inc
pop
mov
daa
repnz
jmp
mov
int3
cmc
pop
pop
fiadds
dec
enter
sbb
dec
push
fdivrp
test
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
