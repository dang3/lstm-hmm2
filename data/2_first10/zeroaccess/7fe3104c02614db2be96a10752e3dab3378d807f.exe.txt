push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
jae
cltd
mov
jbe
ret
jo
jmp
out
loope
push
jns
or
jg
or
xchg
scas
shl
adc
test
add
cmp
mov
loop
adc
jge
inc
adc
jne
add
mov
loope
sub
sub
dec
adc
out
mov
sub
sbb
insl
push
nop
sbb
in
and
mov
xor
adc
loope
enter
adc
add
outsb
into
xchg
outsl
push
nop
cmp
jle
inc
or
ret
or
cmp
test
fcoml
testl
bound
sar
inc
xchg
popa
xchg
dec
fsubl
arpl
mov
lcall
test
sbb
movsb
nop
popf
pop
lock
popf
sti
pop
sbb
xor
mov
xchg
push
fists
mov
mov
insl
inc
iret
mov
shl
mov
fdivr
pop
inc
adc
xlat
jl
sahf
xorb
lcall
xor
pop
jecxz
push
add
aam
push
dec
sahf
dec
sub
jg
fldenv
push
hlt
push
inc
mov
push
cmc
dec
into
rcl
xor
pop
adc
mov
jne
add
xor
in
nop
nop
xor
mov
data16
adc
lahf
popa
sub
repnz
pusha
push
dec
xorl
xchg
mov
sub
xlat
lods
lods
adc
push
xchg
xchg
stos
inc
pop
sub
repnz
jns
scas
push
dec
cmp
or
pop
stc
inc
gs
push
push
leave
xchg
shl
enter
in
icebp
add
mov
xor
sub
jno
daa
pop
dec
jae
imul
int3
mov
repnz
fcmove
jbe
pop
shr
dec
cmp
xor
pop
dec
cmp
ss
ret
stc
mov
sbb
aaa
mov
aam
jne
inc
mov
rol
fwait
and
cmpsl
xor
ss
xchg
lahf
cwtl
push
roll
adc
cmp
sbb
adc
mov
mov
push
sub
or
push
sub
ret
test
sbb
sub
les
cltd
ret
lret
iret
fisttps
std
adc
ficompl
push
aas
divb
cwtl
fisttps
jo
es
sti
mov
frstor
test
sahf
mov
imul
aaa
xchg
arpl
pop
jmp
in
fldt
mov
imul
push
mov
pop
jbe
aam
xchg
push
push
xor
jbe
mov
mov
jne
dec
je
mov
inc
cmp
jne
inc
out
and
dec
jo
adc
aas
sub
mov
icebp
sbb
cmpsl
aaa
rorl
leave
imul
inc
fadds
cwtl
imulb
fdivrs
fdiv
lret
enter
das
lods
add
push
dec
aas
add
cld
jmp
in
cmp
in
loope
sbb
addr16
mov
inc
dec
fistpll
ret
test
mov
add
stos
xor
dec
aas
fdiv
dec
add
dec
inc
shr
ja
psubusw
sub
adc
repz
dec
push
enter
adc
loope
xchg
mov
pavgb
xchg
push
fsubrp
cli
sbb
xchg
cmpsb
jle
into
lret
sbb
mull
mov
icebp
jo
dec
jecxz
push
dec
into
andb
xor
lea
mov
hlt
movsb
imul
mov
faddl
mov
test
cs
gs
or
cli
call
push
insb
filds
negb
dec
and
lahf
adc
popa
fisubrl
pop
cmpsl
ds
and
shr
jl
cmpsl
xchg
dec
sbb
insb
bound
imul
shr
xor
pop
xor
fwait
mov
rcr
push
sub
arpl
cmp
dec
pop
scas
andb
inc
push
inc
adc
movsl
cmp
xlat
xchg
adc
stos
adc
jbe
sub
cmp
jg
cwtl
stos
test
mov
popa
jge
outsl
fucom
mov
pop
scas
je
insl
in
lock
xchg
xchg
leave
xchg
sbb
out
std
movsl
lcall
push
push
inc
xor
nop
xor
pop
stos
jo
xlat
pop
lret
cmp
imul
lods
cmp
mov
pop
or
and
ds
mov
pop
pop
imul
pop
add
mov
es
adc
mov
push
movsb
xor
insb
add
in
mov
dec
push
out
pop
or
pusha
xor
loopne
or
sub
aas
not
divl
and
insb
and
inc
les
rcrb
mov
xor
fbld
sub
mov
lcall
or
adc
push
jmp
push
sbb
jnp
or
ret
aaa
pushf
mov
mov
mov
mov
jne
dec
pop
sbb
add
icebp
sbb
cltd
jo
sarb
loopne
test
loope
jno
cmp
xor
nop
lahf
inc
dec
addl
xor
mov
clc
imul
jecxz
test
in
inc
clc
push
sti
adc
sub
push
or
and
lcall
push
std
imul
addb
and
lods
test
repnz
pop
data16
in
xchg
add
mov
push
int
jl
mov
mov
add
cs
iret
test
repnz
out
lcall
enter
xlat
push
ja
hlt
loop
es
pop
mov
sahf
lcall
scas
xor
xchg
pop
jmp
jno
lods
xlat
imul
push
adc
or
sbb
aad
stc
pop
repnz
add
push
sbb
xchg
mov
pop
jge
pop
xlat
xor
or
mov
mov
mov
subl
sbb
xchg
mov
inc
js
ficoms
pop
adc
lret
add
gs
mov
test
repnz
or
or
int3
test
cmpsb
dec
popf
data16
sub
in
inc
jno
lahf
cmp
pop
push
push
push
fnstcw
ljmp
and
scas
les
cmp
fstpt
lcall
fisttpl
push
stc
stos
dec
imul
jbe
lods
icebp
xor
push
test
fld
xchg
sub
clc
fs
aaa
jne
inc
add
fcmovnbe
mov
mov
cmp
pop
repnz
push
dec
int
xlat
int3
add
lret
add
out
cmc
add
movsb
stos
push
loope
aad
and
jne
ret
movsl
jmp
push
shrb
fdivrs
dec
xor
mov
fimuls
aad
pop
clc
lods
pop
scas
xchg
push
cmp
add
ret
cmc
out
adc
outsl
inc
out
loop
sbb
lds
enter
lret
mov
in
cld
adc
or
call
inc
out
push
push
imulb
mov
cmc
mov
and
shlb
mov
ficomps
rcl
mov
sub
loop
pop
sbb
adcb
or
ret
mov
cmc
cli
lret
lcall
mov
jne
icebp
movsl
dec
in
repz
hlt
repnz
das
inc
xchg
outsb
leave
scas
not
sbb
pushf
lret
cmp
jb
sub
les
dec
pop
add
jne
mov
stos
int
cmpsb
frstor
popf
cld
hlt
xlat
and
jp,pt
test
ljmp
js
jo
add
adc
mov
pusha
ret
push
int3
pop
inc
xor
popa
cmpsl
mov
inc
xor
jnp
sahf
loope
cwtl
andb
or
es
xchg
jbe
sti
mov
pop
jb
sbb
int3
inc
mov
or
test
xor
jle
mov
fildl
mov
push
in
mov
sbb
jns
std
in
sar
sti
xor
test
sub
scas
pop
btr
ljmp
addr16
ljmp
and
cmp
sub
outsb
out
jge
inc
cmp
mov
scas
jle
call
pop
mov
out
adc
and
dec
adc
push
shll
lret
jo
cmpsl
movsb
sub
mov
scas
inc
call
mov
jmp
xor
sbb
mov
cmp
and
fnstenv
lock
xlat
out
js
gs
jg
fwait
xchg
stos
pop
stc
mov
inc
cmp
jl
jns
add
dec
inc
jle,pn
push
pop
sbbl
push
or
add
cmp
sbb
outsl
cmp
mov
icebp
arpl
mov
or
or
jecxz
repz
loop
adc
in
cli
inc
pop
out
xor
adc
or
dec
ja
mov
movsl
inc
mov
cld
nop
mov
sbb
in
out
aas
scas
push
adc
sbbb
in
push
dec
gs
jmp
ds
cli
sahf
xchg
mov
dec
mov
cmp
out
addr16
xor
pop
xchg
lock
adc
sub
inc
inc
ljmp
insb
mov
xchg
fiaddl
cwtl
jbe
mov
cmp
aam
inc
dec
lret
aam
in
es
cmp
xchg
xchg
and
adc
cmpsb
cld
mov
ja
cmp
push
adc
dec
mov
mov
add
mov
sbb
sbb
add
pop
push
push
sbb
add
pop
stos
aam
idiv
inc
cmc
dec
clc
jg
lods
and
lods
adc
push
mov
jle
ret
pcmpeqd
pop
fildl
gs
mov
stos
or
sbb
xor
inc
xchg
call
sub
stos
loope
repnz
mov
loopne
mov
out
lcall
sarb
mov
dec
insl
mov
es
push
push
xlat
cmp
sti
pushf
mov
mov
mov
jnp
in
jo
or
cld
cmp
mov
jnp
jns
gs
add
adc
inc
ret
sbb
ljmp
cmp
les
pop
out
imul
add
cmp
push
jo
mov
jae
aad
cmp
decb
pop
cmpsb
fistpl
frstor
add
push
sub
mov
or
outsb
dec
cld
pop
or
push
insb
or
jns
adc
inc
pushaw
pop
icebp
dec
movsb
ljmp
stos
pop
insb
inc
push
shrb
jns
mov
jno
imul
cmpsb
xchg
mov
jmp
mov
testl
mov
cs
shll
hlt
cmp
mov
xorps
push
mov
shrb
dec
sub
fstpt
pop
add
dec
cmpsb
ret
xor
out
xchg
addr16
jp
or
scas
or
rolb
push
ret
mov
je
js
jg
ret
jmp
sub
mov
cltd
aaa
jecxz
test
dec
lahf
adc
mull
push
inc
jno
mov
push
cmp
mov
aaa
iret
das
aas
or
push
inc
out
mov
mov
lcall
test
lods
jo
into
dec
scas
scas
sub
jae
jae
das
jecxz
mov
icebp
movsb
fisttpll
cli
jge
lcall
int3
push
clc
sub
mov
loopne
push
sub
cmp
cmpsl
or
sub
movsl
adc
sbb
sub
ret
fmulp
call
push
xor
adc
leave
xor
adc
mov
ficoms
js
xchg
push
add
pop
push
adc
roll
insb
sbb
adc
in
sub
pop
pop
out
loopne
and
mov
movb
and
divb
loop
in
and
ljmp
addr16
push
outsl
fwait
lea
inc
subl
or
loope
sbb
sti
xor
dec
loop
inc
in
pusha
xor
adc
in
test
sahf
in
cld
and
in
loop
sbb
in
imul
sub
mov
and
jmp
lahf
or
push
popa
xchg
xchg
mull
and
push
xor
lock
inc
popf
xchg
mov
rorb
shll
xchg
mov
jg
xor
mov
divb
clc
lds
call
leave
les
aaa
bound
jle
inc
push
xchg
jp
outsl
out
mov
and
scas
out
cmp
xlat
pop
pop
xchg
test
in
stos
inc
clc
jno
jecxz
pop
in
flds
cmp
dec
cmc
mov
stos
stos
test
insl
shlb
sub
shlb
sbb
test
pushf
xchg
into
repnz
pushl
int
lret
repz
in
xor
pusha
cs
cmp
push
arpl
jbe
loop
sahf
movsl
pop
lea
popf
sub
adc
ss
xorl
or
cmp
imul
test
push
inc
adc
xchg
push
adc
and
lods
out
insb
call
call
out
mov
sbb
iret
sub
outsb
dec
imul
aad
mov
jle
les
sahf
enter
dec
out
mov
out
sbb
push
or
ljmp
dec
mov
xchg
inc
test
mov
lock
mov
jge
das
and
pushf
mov
pop
push
iret
repnz
inc
xchg
pushf
xor
std
inc
test
sbb
insb
es
push
cmp
xor
pop
jp
push
jbe
in
fstp
ljmp
sbb
lds
inc
cmp
hlt
and
adcl
dec
fstps
pop
aad
push
push
nop
into
cld
aas
xchg
add
push
jmp
repnz
cmpsl
nop
nop
add
inc
xor
sbb
daa
or
cmpsb
xor
call
js
cli
stos
mov
pop
inc
inc
cli
cmp
sub
mov
jne
mov
les
pushf
mov
in
mov
imul
insb
repz
cmpsb
add
shrl
shll
sarl
inc
inc
pop
xchg
sarl
cli
stc
sub
pushf
orb
pop
xchg
jb
inc
push
xorb
cmpsb
cmc
push
test
insb
ss
dec
stos
js
loop
pop
mov
cltd
enter
push
cmp
dec
jge
pusha
adc
inc
jo
shlb
mov
nop
ja
jo
mov
cmp
mulb
mov
or
push
ret
stc
test
add
aaa
loopne
dec
in
jl
out
jbe
sub
inc
sahf
cli
cltd
cmp
xchg
mov
sbb
add
stc
call
mov
aas
out
cmpsb
shrl
nop
sub
lahf
jmp
aaa
push
sti
mov
arpl
clc
loop
jae
in
cmp
xchg
daa
gs
jnp
dec
mov
dec
xchg
or
push
xchg
rcr
call
popf
mov
outsb
in
addl
cld
adc
hlt
sbb
mov
xor
fdivrs
rorb
or
xchg
test
arpl
sbb
add
out
shlb
or
lahf
imul
dec
or
push
pusha
mov
iret
jae
adc
cmpsl
xor
pop
std
adcl
mov
jmp
jl
js
insl
pop
mov
mov
fstps
cmp
mov
mov
rorl
daa
lock
loope
mov
lcall
push
add
adc
imul
inc
cmp
popa
les
lcall
sub
cmc
jge
addl
mov
push
ja
cmp
lock
stos
into
jecxz
jge
das
daa
shrb
xor
shrl
or
in
push
daa
xchg
sbb
dec
add
sbb
dec
jg
inc
pop
rorl
mov
xchg
jl
bound
enter
jnp
inc
fnsave
sahf
test
sub
jecxz
fsubrl
mov
sti
push
sbb
loopne
movsl
inc
ret
xchg
push
sbb
gs
dec
pop
and
mov
fisttpll
fiaddl
xchg
mov
sbb
mov
int3
insl
inc
fs
mov
lock
insl
mov
mov
jmp
sti
sahf
movsl
push
inc
stos
sub
push
fistps
shlb
daa
bswap
and
lods
mov
loopne
mov
mov
popa
add
fdivp
ja
flds
or
pop
push
jo
inc
lret
lret
insl
shlb
mov
add
and
ret
dec
sbb
jge
enter
sub
arpl
push
nop
pop
sub
lcall
pushf
adc
cmp
or
jns
icebp
ss
test
lahf
jmp
inc
stos
sub
lock
mov
inc
xlat
mov
inc
lret
lret
mov
mov
mov
pop
xchg
mov
imul
in
pop
hlt
call
pop
insl
xor
jo
ja
dec
push
xchg
add
and
xchg
aas
add
rcll
out
stos
js
fs
lea
cltd
and
adc
andb
sub
lcall
pop
imul
cmpb
fwait
mov
in
push
mov
jae
push
sbb
es
add
testb
arpl
es
iret
jne
fmulp
test
dec
add
iret
mov
xchg
and
sti
fwait
out
jp
cmp
leave
mov
rcrb
int3
pop
lods
or
push
jl
add
pop
enter
pop
mov
push
in
ss
call
incl
jno
pop
nop
jb
dec
lret
xchg
fdivs
xchg
mov
pushf
psrad
or
andl
jns
repz
hlt
pop
sbb
lahf
cwtl
mov
shrl
mov
out
or
hlt
jns
inc
dec
xorl
jno
setae
and
mov
push
dec
mov
cwtl
or
add
pop
stos
les
mov
xchg
fcmove
scas
out
mov
shll
mov
insb
sub
push
shl
das
sbb
movsb
dec
mov
jp
pop
popf
xor
xchg
push
cmp
in
push
sti
push
leave
lahf
mov
add
pop
dec
in
pop
popf
shrl
mov
dec
stc
push
arpl
and
movb
sub
test
fisubrl
xchg
mov
sub
roll
fdivrl
sbb
ljmp
pop
dec
mov
adc
dec
in
or
mov
in
hlt
xchg
lock
jne
cmpsb
push
dec
pop
xchg
mov
out
mov
pop
add
fidivl
sbb
xlat
enter
flds
xchg
out
add
cmpb
in
mov
mov
pop
test
add
xchg
sub
aaa
aas
movsl
xor
into
mov
mov
xor
rorb
and
popf
cmp
mov
jbe
inc
jle
fistl
jns
pushl
cmp
xor
ret
ss
dec
pop
fcmovb
xchg
loop
mov
dec
cwtl
mov
xor
jo
jbe
inc
mov
push
scas
sbb
hlt
sbb
lea
and
sbb
adc
mov
lds
sahf
or
pop
mov
mov
jge
arpl
inc
push
outsb
mov
pop
push
xor
add
iret
add
cmc
daa
dec
dec
lock
ss
das
xlat
rcr
jmp
fidivl
jle
das
lock
rol
push
rclw
rclb
push
sarl
out
stos
loop
shlb
sbb
sbb
adc
je
outsb
or
xchg
outsb
jle
push
aas
notl
adc
add
sbb
jno
mov
icebp
push
sub
mov
sub
jb
loope
es
ja
rorl
adc
mov
movsb
in
loopne
and
mov
xchg
fldt
and
aam
and
cmp
cltd
test
push
movsl
int
add
ret
pop
mov
bnd
lods
pop
loop
std
mov
mov
daa
pop
mov
bound
fisttpll
aam
jb
decl
sahf
xchg
inc
mov
inc
sbb
jb
in
je
in
inc
lahf
shl
mov
es
imul
jb
inc
loopne
aaa
mov
pop
xchg
repnz
out
pusha
insb
push
popf
xor
mov
rcrl
mov
and
inc
int3
jns
cmpsb
mov
add
cmp
or
mov
pop
add
lret
pop
rol
add
movsb
sub
jecxz
mov
or
mov
sbb
clc
mov
cwtl
xchg
xorb
pop
sub
imul
ret
rcr
lods
cmpsb
inc
pop
jno
push
sbb
imul
stos
hlt
cmp
xchg
sarl
mov
ret
fidivs
adc
cs
cli
inc
push
in
popa
jnp
cltd
dec
stos
push
fldl
pop
test
pop
push
mov
mov
xor
cmp
pop
push
xchg
aam
jne
jnp
stos
data16
lods
dec
xchg
shlb
jno
jecxz
out
mov
push
xchg
hlt
mov
xor
inc
sbb
mov
add
pop
int3
cld
mov
xlat
pop
or
sbb
and
mov
loope
imul
shrl
sub
mov
ret
mov
jle
fistpll
and
jge
imul
adc
cmpsl
sbb
les
sub
in
push
jecxz
jb
push
dec
mov
dec
dec
mov
data16
push
loop
sahf
push
in
pusha
xchg
loopne
stos
popf
pop
cmp
mov
repnz
dec
outsl
push
das
push
lds
scas
jno
push
insb
add
cmp
rorl
es
ljmp
xchg
loope
mov
jl
imul
mov
mov
add
fcoms
pop
test
int
nop
outsl
nop
xor
sbb
test
mov
add
jl
add
xchg
mov
jne
push
das
dec
xchg
sub
gs
mov
imul
arpl
int3
add
add
decl
pop
add
mov
add
lret
jg
jnp
mov
mov
or
xchg
push
sahf
mov
pop
xchg
in
add
dec
mov
fldt
xor
mov
test
aam
call
push
inc
addr16
add
fs
xchg
xchg
clc
push
repnz
xchg
pop
sub
or
lds
sbb
xor
bound
cmp
mov
mov
popa
cltd
sti
add
je
mov
in
dec
add
jae
insb
loop
adc
jno
sub
in
mov
jnp
sub
lret
jecxz
xor
jns
ja
orl
out
iret
or
mov
mov
testl
subb
loop
outsb
mov
mov
ja
in
loop
mov
test
mov
daa
or
xlat
mov
dec
mov
push
bound
sub
sub
pusha
mov
les
sub
fsubrs
inc
cli
pop
sbb
hlt
hlt
orb
addr16
xchg
xchg
mov
data16
sbb
loopne
xchg
mov
mov
inc
fs
pop
jnp
sub
pop
add
dec
push
and
or
mov
inc
xor
cltd
rcrl
imul
jl
and
js
cmp
es
cmp
clc
rclb
xchg
push
sub
add
ret
lcall
sub
cmp
jmp
lods
adc
mov
les
dec
test
cmp
pop
ret
stos
cmp
mov
sti
dec
js
lcall
jl
repz
insb
stos
js
push
and
and
pop
mov
xor
out
icebp
dec
stos
xor
or
incl
ljmp
dec
and
jg
loope
push
pop
outsl
pop
rcrb
sub
lock
loop
add
inc
sub
adc
jns
std
adc
test
into
fmull
push
ret
push
stc
xchg
ss
xor
dec
inc
int
push
xor
push
inc
fmull
dec
cld
mov
outsb
sarb
sbb
jbe
in
imul
insb
mov
add
push
les
or
cmp
mov
lds
outsb
mov
loop
gs
outsb
ficoms
cld
lds
fisttpl
popa
push
sub
sub
mov
in
imul
or
add
inc
pop
lahf
orb
or
cmp
cmpsb
test
or
and
inc
sub
ret
fsts
test
repz
add
mov
add
dec
inc
pop
into
int3
std
push
int3
lods
addb
fsts
pop
xchg
push
sbb
pop
pushf
ret
inc
es
aad
mov
ficomps
add
jns
fcmovnbe
lods
loope
mov
fs
xor
test
ficompl
cld
mov
rcrb
sarl
je
insb
loope
or
icebp
repnz
gs
gs
xlat
jbe
xor
jge
divl
inc
cmpsl
shrb
leave
inc
mov
push
incb
stc
cmpb
mov
pop
ret
jb
mov
clc
adc
test
sub
bound
into
adc
dec
push
jmp
push
lds
out
mov
lret
or
shrb
mov
repnz
mov
jp
cmp
or
test
push
repz
lahf
mov
xchg
lcall
and
mov
xlat
pop
jp
add
pop
aaa
sbb
daa
cwtl
in
call
jle
cmp
or
loop
jns
cmp
enter
outsl
jp
and
jae
inc
mov
or
aam
ss
ret
push
data16
imul
cmpl
mov
adc
jmp
and
imul
xor
aam
inc
pusha
sub
cld
inc
dec
sbb
lock
pop
nop
int3
sbb
dec
icebp
xchg
and
insb
pop
inc
in
aam
or
ljmp
sub
pop
mov
push
xor
push
pop
cmc
inc
adc
mov
popa
lock
les
ret
repnz
mov
mov
mov
adc
shll
or
sbb
xlat
adc
mov
or
dec
je
jg
xchg
fistps
and
mov
dec
jae
mov
sub
loope
cli
xlat
xchg
dec
sub
pushf
and
inc
add
push
pop
mov
inc
adc
sahf
out
adc
xor
pop
sub
push
sbb
insb
cwtl
jmp
test
lahf
mull
pop
mov
stos
dec
inc
jbe
sti
int3
push
out
shl
insb
out
cmp
jecxz
movsb
push
cltd
jb
pop
iret
mov
add
jno
daa
rorl
dec
inc
inc
std
xchg
push
or
test
lcall
iret
jbe
cltd
jo
cmpsl
sbb
int
xorl
sti
pop
stc
mov
xor
movsl
jp
push
xchg
jbe
pop
pop
std
or
xor
and
mov
xchg
cld
mov
sub
adc
mov
dec
sbb
add
frstor
lret
sti
dec
hlt
ficoms
andl
mov
ss
cs
push
std
sub
add
and
bnd
dec
xor
ljmp
rcr
push
pop
and
sbb
incb
stc
inc
movsb
into
xchg
jg
jb
imul
outsl
mov
jo
adc
cltd
pop
push
mov
xor
scas
jbe
cltd
xchg
jne
push
sbb
and
mov
pusha
mov
sub
sbb
in
xor
cmpsl
or
or
cld
jl
int3
orb
sti
add
sub
pop
mov
in
or
pop
in
mov
xorb
movsb
ljmp
push
jne
es
lret
jae
arpl
xchg
je
add
mov
fildll
xchg
sarb
aad
jnp
inc
cmpsb
sub
in
dec
std
imul
dec
pop
xor
nop
bound
divb
and
div
js
jp
mov
enter
mov
push
and
and
movsl
inc
in
sub
adcb
inc
rol
call
scas
push
add
push
jbe
rcrb
cmp
or
mov
out
pop
inc
mov
cmc
out
aad
or
pop
mov
ljmp
cmp
push
popf
rorb
rcll
cmp
addl
inc
push
ljmp
ljmp
clc
rclb
mov
pop
scas
mov
rcll
adc
mov
das
mov
mov
or
cld
push
int
arpl
ja
sub
xchg
fs
or
pop
imull
add
fcmovu
int
jbe
lahf
movsb
mov
sub
das
sub
xor
dec
xchg
inc
test
divl
enter
test
adc
push
fistpll
jns
cltd
enter
test
pop
mov
jmp
adc
jno
mov
mov
aaa
lock
inc
ret
lods
mov
mov
jo
pop
pop
mov
loop
divl
inc
pop
sub
adc
inc
int3
and
pop
inc
sbb
scas
arpl
mov
inc
test
loope
inc
sub
push
jmp
cli
enter
jnp
jo
dec
xchg
jmp
inc
sbb
in
imul
jnp
lea
push
sbb
pop
sub
push
rcrl
ljmp
sbb
jg
pop
and
scas
mov
cmpsl
mov
sub
mov
mov
fisubrs
ret
push
vpcmpeqd
xor
pusha
jne
addb
add
sar
in
lea
mov
push
xor
adc
mov
sahf
push
xchg
pop
stc
pusha
icebp
rorb
mov
cmp
push
dec
mov
in
adc
cltd
mov
xor
movsl
jl
test
xor
sbb
out
mov
iret
push
test
rcll
cld
xlat
pop
stos
dec
andl
in
jge
jg
lds
mov
mov
fdivr
insb
add
rcl
sbb
mov
bound
and
mov
call
mov
dec
shrl
inc
insb
jbe
bound
daa
fists
sbb
push
pushf
sub
mov
cmc
and
xlat
sti
adc
mov
dec
dec
mov
ds
jne
into
or
sub
sub
pop
dec
daa
mov
dec
mov
fucomi
ds
cmpsb
out
imul
outsb
inc
icebp
push
pop
fsubl
or
and
xchg
shll
out
outsb
and
mul
popa
mov
cltd
nop
mov
inc
icebp
lcall
push
dec
out
ljmp
dec
adc
or
sbbb
sahf
xor
roll
mov
or
call
aam
testl
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
insb
rcl
cmp
pop
jp
or
jp
enter
sbb
je
nop
xchg
push
and
scas
jb
jns
insb
testl
pop
lds
js
jo
jo
jle
mov
pop
mov
or
mov
or
dec
test
or
sub
cs
call
inc
sub
sbb
add
dec
sbb
loopne
jecxz
lods
es
adc
pop
adc
out
scas
cmp
xor
lcall
popa
mov
out
dec
sbb
push
jmp
lret
xchg
cmp
pop
outsb
add
fisttps
frstor
stc
ret
xchg
jae
pop
rol
mov
dec
push
and
lret
pop
or
mov
and
outsl
pusha
add
repz
hlt
inc
ret
popa
mov
sub
shl
add
aas
cli
dec
mov
adc
aam
push
mov
and
stos
xchg
and
jb
adc
cwtl
std
jge
dec
add
dec
jle
in
push
adcb
sub
int
aam
add
es
jecxz
mov
mov
lea
dec
xlat
lahf
in
das
dec
ss
jp
stc
sar
push
jnp
data16
loop
cld
test
adc
cltd
cmp
out
div
fdivp
push
add
inc
mov
xor
push
shlb
inc
and
pop
mov
cs
mov
xor
or
mov
xlat
and
fldl
ret
push
pop
xor
mov
les
mulb
push
mov
push
sbb
mov
test
xor
lret
push
pop
mov
notl
jae
sahf
mov
iret
jmp
arpl
repz
mov
cmp
xchg
inc
lods
inc
sub
sarl
shl
push
jle
shlb
adc
xor
or
xchg
add
inc
inc
or
outsb
ret
jno
sbb
xchg
sub
das
loope
icebp
xor
ljmp
xchg
lret
test
fsubs
js
std
push
pop
jbe
data16
push
dec
out
push
jecxz
and
fistpll
mov
sarb
push
or
es
xorb
mov
inc
xor
lea
push
mov
adc
push
pop
dec
xor
inc
iret
fmuls
notb
and
into
push
insl
enter
xlat
addr16
int
cwtl
mov
jno
inc
test
mov
insb
sbb
leave
neg
jle
out
cmp
sub
out
sbb
les
pop
push
push
mov
ja
insl
jmp
inc
push
dec
jns
ds
push
xor
fsubrs
mov
es
push
add
push
xchg
inc
mov
popa
pop
jno
jnp
movsl
daa
dec
incl
repnz
scas
push
and
into
repnz
dec
adc
sub
cmpsl
movsl
clc
cmc
push
cmc
inc
sub
cmp
in
sbb
pop
pop
cld
ret
js
jmp
pop
mov
ffreep
insl
lock
shl
movsl
add
aaa
stos
leave
ja
and
test
add
aaa
inc
pop
movsl
loope
test
lret
dec
cmp
fstl
pop
and
cmpsb
mov
sbb
arpl
inc
adc
fildll
cmp
cmp
xchg
sbb
ja
je
das
inc
mov
xchg
mov
cmc
push
sbb
sub
out
mov
pop
adc
out
fmuls
push
pop
sbb
and
xchg
int
or
pop
sub
fsubs
cld
adc
out
ret
or
cwtl
ret
cmp
ret
mov
fdivl
mov
xor
jle
and
mov
pop
mov
sbb
mov
mov
sbb
and
jb
lea
adcl
adc
mov
jg
xchg
pop
scas
ret
pop
xor
mov
adc
jne
or
arpl
dec
rol
cmp
adc
test
fwait
aad
jp
inc
cli
outsl
xchg
mov
cwtl
pop
lea
out
sbbl
fistl
dec
stc
fidivrs
nop
push
cmp
fdivrp
into
repnz
mov
lock
add
or
divb
movsl
xchg
and
pop
bound
add
daa
push
ss
cmp
inc
insl
xor
clc
mulb
pop
adc
cmpsb
dec
iret
cmpsb
leave
ds
xor
mull
insb
xor
or
hlt
cli
jmp
lret
jae
aam
fists
insl
mov
adc
mov
cmp
push
dec
cmp
cld
mov
fs
js
data16
fmuls
lock
jle
xor
xor
mov
pop
loopne
dec
sbb
addr16
shl
aas
stos
add
pop
dec
pop
in
sub
push
fucomi
out
cmp
xlat
ds
fnstenv
push
gs
jne
dec
xor
dec
push
inc
dec
rcrl
mov
fcompl
outsl
data16
mov
roll
mov
xchg
popl
lods
xor
fucomip
cmpsb
repnz
jns
mov
adc
adc
test
sub
test
repnz
pop
and
adc
push
mov
sti
sub
cmc
cmp
out
pushf
dec
push
dec
mov
mov
jl
in
xchg
es
push
and
out
pusha
bound
popa
pop
clc
sbb
mov
es
push
fwait
je
in
sub
jge
pop
mov
mov
inc
push
mov
enter
and
shrb
out
iret
mov
mov
sub
xor
loop
ja
cmp
aam
loopne
xchg
inc
loope
jmp
xchg
loope
mov
add
movsl
mov
push
push
inc
repnz
adc
adc
mov
aad
mov
mov
adc
inc
mov
outsl
xchg
push
cmp
sbb
aad
or
xchg
adc
inc
ljmp
inc
inc
cmpb
push
cmpsb
xlat
dec
cli
movsl
fdivrs
and
pop
cmp
fildll
mov
jo
sarl
ljmp
mov
and
adc
fwait
sbb
out
cltd
lahf
xor
ja
pop
mov
xchg
mov
test
cmpsl
cmpsb
push
lds
shlb
mov
notl
dec
jle
sbb
push
lds
and
aam
fbstp
xchg
pop
pop
pop
jno
ret
jecxz
insb
fisubrl
mov
repz
adc
stos
dec
xor
jecxz
or
jle
out
cmpsl
add
lahf
jne
lds
mov
adc
shl
lds
jo
outsl
mov
mov
add
sahf
mov
or
jecxz
and
aad
adc
ret
mov
out
clc
stos
ljmp
cmc
gs
shl
add
popf
movsl
add
je
cmpsb
xchg
ljmp
push
sub
into
cmp
out
roll
sbb
or
xchg
andl
loopne
and
cld
dec
clc
mov
ds
jne
cs
push
xor
sub
push
mov
sub
call
sub
cmp
cmp
fmul
jnp
inc
mov
jp
hlt
jecxz
lret
insl
int3
lock
push
mov
pop
xchg
lret
and
adc
mov
jp
xlat
mov
jl
andnps
sahf
mov
icebp
aam
enter
dec
dec
hlt
out
popa
icebp
mov
cmp
add
shrb
sub
jp
subl
lret
sub
out
hlt
shlb
addl
cld
sbb
data16
loope
inc
adcl
jmp
jno
mov
insb
dec
adc
cmpsb
sti
jecxz
inc
int
mov
cli
popa
jbe
or
jle
add
stc
sbb
inc
nop
xchg
push
repnz
arpl
mov
sbb
jecxz
in
push
insb
mov
and
pushl
bound
jae
xchg
mov
insl
xchg
leave
mov
mov
pop
xchg
dec
pop
xchg
ljmp
out
add
dec
mov
lods
or
cmp
dec
jns
imul
lahf
mov
dec
pop
jo
add
arpl
cmpl
clc
mov
imul
insb
mov
adc
pop
inc
cmp
fadd
das
xorl
xchg
mov
adc
roll
shlb
jl
adc
mov
and
test
push
out
push
inc
push
stos
or
xor
outsb
lcall
cs
rcl
hlt
addl
cmpsl
adc
mov
pop
push
and
js
sub
dec
and
cmpsl
mov
jns,pn
das
or
idivb
xor
push
jle
inc
lahf
outsl
nop
xchg
iret
test
fcompl
mov
loop
cmc
outsb
sub
mov
call
lcall
popa
ds
inc
or
bound
into
inc
cltd
sub
sti
hlt
adc
mov
inc
mov
rcrb
inc
pusha
jne
push
stc
inc
push
adc
arpl
cmp
sbb
in
pop
bound
dec
movsb
das
cmp
ret
shl
stos
mov
jbe
movsl
leave
stos
mov
sahf
test
mov
std
divl
gs
cli
movl
push
xor
fdivr
cwtl
sar
pushf
xchg
movsb
je
das
mov
xchg
push
pop
sbb
pop
das
or
movsb
das
aad
enter
enter
jmp
pop
jno
lahf
inc
stc
fstpl
fcoml
mov
xchg
enter
enter
mov
add
pop
stc
rolb
pop
xor
xchg
mov
scas
or
xor
push
movsb
jb
es
mov
mov
xchg
mov
rorl
cmp
lock
jno
or
push
outsb
sub
pop
dec
repz
mov
xor
or
pop
mov
fsubs
aaa
popa
jns
sbbl
mov
xchg
mov
mov
mov
mov
insb
xor
xchg
dec
xor
adc
mov
outsb
xor
sub
into
inc
iret
push
xchg
sub
adc
shl
inc
pop
mov
shl
push
cmp
xor
push
xchg
sar
ja
in
int
jne
test
and
dec
xlat
jae
or
popf
push
fldcw
add
xor
and
and
xchg
loopne
fnsave
push
popf
iret
push
out
mov
mov
sub
cmc
add
dec
js
mov
sbb
decb
dec
jp
xchg
dec
cltd
pop
jecxz
mov
jle
movl
xor
fstpl
loopne
adc
mov
mov
xchg
fmul
test
cmpb
sti
cltd
insb
push
stc
mov
mov
sti
jge
jp
or
sub
xor
push
and
mov
sbbb
cmpb
push
cld
test
adc
pop
adc
shr
int
jecxz
fcoml
repz
out
movsl
pop
imul
xor
movsl
dec
push
movhps
les
repz
xor
sbb
fs
imul
in
mov
mov
fldt
mov
mov
mov
mov
dec
in
jnp
rcll
test
cmp
xor
sbb
enter
sbb
cmp
jne
jns
and
add
outsl
icebp
repnz
and
popf
push
xchg
jno
test
hlt
xor
repnz
xchg
jnp
sub
and
pushf
jbe
mov
movsb
sti
xchg
bound
jg
repz
sub
mov
in
leave
xchg
lret
int3
popa
jne
rcll
xor
ja
sub
inc
or
jge
in
arpl
mov
add
mov
icebp
lret
sbb
add
adc
add
fsts
icebp
lcall
xlat
mov
mov
cmp
gs
pop
shrl
dec
out
push
push
pop
inc
clc
mov
cld
mov
mov
jp
gs
andb
mov
loopne
in
mov
mov
arpl
pop
rcrl
pop
es
mov
mov
sahf
stc
push
dec
mov
rorb
pusha
out
pop
pushf
call
adc
jg
mov
shrl
in
test
outsl
scas
mov
pop
jecxz
les
mov
push
cmp
nop
xchg
cmpsl
pop
xchg
jl
adc
jge
xchg
push
loope
sarl
mov
adc
inc
mov
mov
jmp
js
clc
xchg
iret
aad
jno
hlt
push
nop
push
les
imul
mov
shll
loopne
xchg
mov
sub
push
inc
in
mov
std
adc
jl
rolb
add
repz
fwait
sbb
mov
jno
fildll
jb
jns
fcompl
xchg
or
lahf
add
outsl
in
cmpsb
std
add
je
lock
fdivp
jmp
xor
cmpsb
in
push
or
xchg
out
lret
ja
cli
mov
xlat
mov
xor
cmp
ss
pop
mov
fadd
fisttpll
shll
xchg
hlt
les
fstpl
jb
test
push
jbe
sbb
push
jnp
xchg
test
movsl
cmp
adc
sub
mov
lods
iret
cli
push
adc
jecxz
add
mov
push
fnsave
aam
mov
fwait
or
pop
int
mov
dec
jo
adc
ja
xchg
jo
popf
out
cmc
mov
xorl
mov
mov
and
movsb
xor
das
fdivr
scas
std
pop
aaa
rcr
sbbl
les
les
cs
in
and
jae
cs
ja
sub
popf
shll
loope
call
movsb
pminsw
test
inc
pop
repz
cmpsb
test
cwtl
cmpsl
stc
adc
mov
or
cmc
fists
sbb
arpl
or
adc
pop
jne
scas
mov
push
sbb
mov
mov
scas
or
popa
add
and
xor
lcall
cltd
xchg
call
iret
adc
ss
push
pop
cwtl
push
adc
pop
out
rolb
mov
and
cmp
in
test
cli
jecxz
or
lds
fisubrl
cs
aaa
ss
sarw
xchg
pop
pop
gs
pushf
dec
xor
jp
xchg
mov
xchg
sbb
jo
mov
out
fcmove
or
iret
testb
es
lahf
pop
rorl
int
sti
mov
mov
add
xchg
mov
and
push
pop
inc
test
mov
push
call
fistl
rorl
xchg
fsubrs
ret
add
pushf
je
iret
sub
dec
xor
jne
stc
adcl
daa
push
inc
add
repnz
sub
mov
pop
cmp
stos
xchg
sbb
pop
in
push
push
xchg
inc
jae
rol
pop
pop
dec
push
mov
mov
xchg
pop
insb
mov
fbld
lock
bound
int
lahf
test
leave
jo
daa
das
rolb
stos
arpl
lahf
rclb
gs
insb
rcrb
nop
ljmp
mov
mov
lods
in
sahf
and
faddl
addl
add
je
add
aaa
sahf
pop
idiv
data16
movsl
cmpsb
test
inc
call
aaa
loopne
test
stos
xchg
fdivs
cwtl
fsubrl
pop
mov
mov
in
dec
and
pop
outsl
aas
sub
insl
int3
xchg
pop
jnp
into
fldt
cli
inc
aas
pop
lods
mov
push
cmc
or
repnz
sbb
repz
inc
pop
ja
xchg
sub
lock
sbb
push
pop
or
ret
rolb
inc
pop
mov
jae
dec
int3
and
iret
ret
scas
outsl
shlb
push
test
fs
loopne
in
dec
and
cmpsl
inc
xorl
add
xchg
out
insl
mov
jp
das
xorl
push
rorl
add
es
add
xlat
jnp
mov
and
insl
pop
push
ds
push
aam
sahf
aas
insl
movsl
pmaxsw
and
pop
int3
cltd
lock
sbb
xchg
dec
add
and
fsubr
mov
adc
lods
xorb
add
pushf
fs
xchg
mov
ret
mov
std
and
cmpsb
fdivr
rcrl
inc
dec
rolb
cli
mov
push
jmp
test
std
cmp
xor
in
cmp
xchg
loopne
jo
mov
rorl
xchg
scas
add
sahf
dec
inc
mov
sbb
lret
or
xchg
inc
out
adc
nop
aas
and
cmp
jne
rcrb
test
jecxz
popa
mov
sbb
pop
jnp
push
scas
or
lock
mov
ljmp
aad
sub
fimull
or
in
mov
mov
push
push
adc
arpl
add
in
stos
testl
lret
add
adc
sbb
lds
mov
imul
cmp
dec
jmp
mov
mov
jae
cmc
icebp
jg
mov
dec
lcall
xchg
imul
inc
xor
mov
insl
dec
add
jmp
sahf
xor
sti
dec
add
cmp
adc
call
rcrb
fwait
pop
xchg
fisubl
add
jns
xor
or
mov
in
filds
mov
into
fbstp
cmp
push
je
adc
jno
dec
stos
mov
or
in
pop
aam
fidivs
xor
xor
addb
xor
inc
fistl
out
sbb
dec
and
inc
lcall
pop
mov
mov
push
push
sbb
sub
inc
pop
add
pop
xchg
addr16
mov
mov
fldenv
xor
cmpsl
xorl
or
cmp
aaa
bound
test
push
sbb
inc
pop
aad
aad
sub
mov
inc
sbb
pop
repnz
mov
fcoml
mov
js
stos
call
mov
jns
mov
push
ds
fdivs
push
fists
push
cltd
idivl
js
andl
add
xorb
xchg
cmp
enter
xchg
sbb
loope
cmp
pop
inc
xor
aas
pop
xchg
imul
cmp
daa
adc
rcll
sub
aas
iret
and
pop
sbb
leave
sub
fwait
lock
xchg
jl
movsl
into
lods
loope
sbb
cli
scas
adc
cltd
xor
insb
es
inc
scas
into
out
sbb
adc
insb
cmpsl
mov
in
insb
inc
jae
mov
push
mov
popa
jg
or
hlt
jl
daa
hlt
mov
sbb
insb
xchg
push
xor
daa
cmp
hlt
std
cld
dec
inc
mov
test
and
into
mov
adc
cmp
mov
fidivl
inc
mov
imul
enter
sbb
sbb
mov
adc
je
ss
stc
bound
mov
loopne
nop
jecxz
subb
or
xchg
dec
fidivl
mov
push
jl
adc
data16
scas
dec
cmp
and
cmc
pop
jb
or
jle
pop
mov
loope
push
dec
cli
lcall
adc
lods
cmc
cltd
fucomi
in
xor
xchg
and
pop
stos
xor
mov
jae
dec
pop
xor
xor
rcr
mov
mov
push
pop
lcall
jb
adc
sbb
sbb
pop
out
xchg
fiadds
gs
dec
xchg
movsl
lcall
mov
push
insl
or
loop
das
fnstsw
inc
ror
xchg
lret
lret
sbb
cmp
adc
lods
mov
cmc
cwtl
rorb
sbb
repz
push
lds
jp
mov
pop
push
mov
fstl
adc
fists
push
mov
insb
jmp
loope
mov
fwait
or
xor
dec
push
das
mov
ljmp
sbb
adc
xchg
and
adc
xchg
fucomip
out
xor
insb
dec
dec
pop
dec
xor
cmpsl
mov
mov
scas
cmpsl
divl
sub
add
or
ljmp
pop
inc
pop
inc
push
xchg
dec
aaa
mov
clc
mov
ficoml
pop
mov
mov
xor
dec
stos
dec
test
out
sub
xor
mov
xor
cmp
mov
pop
xchg
sub
shlb
cld
leave
inc
or
ficoms
mov
xchg
fstl
adc
dec
inc
out
inc
std
and
repnz
mov
xor
xchg
mov
pop
push
ds
lcall
dec
push
sub
mov
les
mov
ss
ds
arpl
cmp
xchg
pop
aad
ja
mov
and
mov
jb
cmp
fmul
add
or
fucomp
test
dec
pop
out
push
popf
mov
test
jl
cwtl
sbb
out
xchg
push
lea
mov
ja
les
ret
cltd
fld
movsb
std
or
jecxz
push
xchg
rcll
mov
xor
in
inc
andb
dec
loopne
push
sti
leave
or
scas
mov
shr
cmpsb
mov
stos
adc
nop
jb
xchg
in
push
ja
into
cld
xchg
movsb
ret
push
sarb
add
add
mov
adc
jo
xor
pop
mov
popa
scas
test
pop
push
pushf
repnz
and
push
popw
dec
xor
cmp
scas
cmp
movsl
dec
mov
adc
cmpsl
in
shll
add
loop
mov
add
push
lret
leave
cmpsb
roll
dec
imul
jg
xorb
nop
in
enter
int
and
test
jae
fsub
mov
adc
mov
fidivl
nop
rclb
and
cmp
mov
mov
test
and
fcmovb
stc
iret
ret
sbb
jae
ret
mov
jg
ss
pop
shrb
pop
lds
clc
adc
sar
sub
or
fcmovne
cmp
lds
nop
test
pusha
sub
test
inc
jmp
out
pop
add
test
add
clc
jne
fistl
icebp
in
lcall
cltd
sbb
imul
mov
out
movsb
ja
xchg
sub
cmp
adc
int3
imul
lods
lahf
push
cmpsl
insl
ret
sbb
mov
jno
push
leave
push
jnp
pop
cmp
ret
sahf
sub
inc
ret
int
jbe
or
mov
fsubp
ja
aad
mov
xchg
inc
cmpsb
ds
mov
sbb
mov
xor
icebp
and
push
cltd
sub
pop
add
add
loop
cs
adc
cmp
push
add
arpl
pop
sub
in
adc
pop
daa
inc
loopne
adc
cmp
sti
sarb
push
mov
mov
lcall
test
push
fldcw
std
imul
xor
xchg
cmc
pop
jge
mov
cmp
add
shl
jg
scas
adc
pop
jno
out
stos
in
inc
out
mov
test
and
xchg
leave
lret
cmpsb
in
push
mov
sbb
add
lea
adc
xor
aam
add
mov
fdivrl
clc
pushf
aam
sub
add
dec
movsb
out
mov
popa
outsl
mov
sarl
in
mov
lret
mov
add
xlat
inc
inc
out
and
pop
mov
and
cli
or
fisttps
shrl
clc
inc
fisubrl
into
ficoms
mov
inc
jecxz
aad
and
bound
add
mov
test
outsl
dec
lods
repnz
imulb
arpl
pop
popf
lea
push
pop
into
jp
mov
in
mov
addb
out
ss
imul
decl
int3
dec
ljmp
in
int
inc
xor
dec
cmpsb
cld
ds
lahf
aad
and
jnp
lcall
cmp
repz
mov
dec
xchg
ret
and
das
jns
add
push
lods
ja
push
inc
femms
inc
sub
lods
lahf
lcall
lahf
cmp
cwtl
or
fnstenv
sti
xor
cs
jp
loop
fmuls
mov
add
jle
imul
repz
add
xor
jb
push
out
clc
inc
pop
dec
lcall
xor
adc
cltd
cs
shrb
dec
push
stos
or
push
int3
fnsave
add
mov
addr16
jno
sub
into
adc
and
and
ja
jns
add
and
data16
stos
ja
mov
decb
xchg
push
fisubrs
cmp
xor
or
cmp
je
cmpsl
pop
imul
xchg
cmpsb
out
xor
sbb
aaa
addr16
add
adcb
fsubl
push
xlat
mov
into
inc
lods
shll
mov
pop
inc
lcall
notb
lds
movsb
shll
push
arpl
lahf
negb
je
cmc
adc
dec
inc
or
mov
pop
into
pop
xchg
xchg
aas
adc
outsl
xor
inc
cmp
jbe
adc
mov
add
imul
mov
mov
int
arpl
dec
jecxz
dec
imul
leave
push
imul
enter
sbb
or
cmp
mov
inc
xchg
push
jbe
pop
jp
sbb
lea
movl
iret
lods
or
sub
mov
in
fdivs
mov
leave
roll
ror
dec
push
mov
in
pusha
cmp
addr16
and
fnstcw
aas
add
pop
push
inc
cmpb
daa
xchg
divl
not
mov
mov
test
mov
out
sbb
or
popf
add
aas
pop
xlat
or
adc
or
iret
or
push
leave
push
mov
inc
xor
xchg
stc
cwtl
outsb
insl
lea
or
dec
or
lock
int
fisubrs
int
test
outsl
out
scas
ret
mov
cmp
dec
push
push
and
add
test
pop
fs
cltd
pop
in
adc
outsb
stos
aaa
fisubs
test
push
sbb
fcoms
xchg
movsl
mov
jno
sti
sub
push
push
aad
lret
push
add
out
xchg
cmpl
pusha
repz
push
push
sbb
jb
sub
fldl
jle
clc
ss
in
lahf
mov
or
cmp
imul
xorl
in
mov
loope
and
popa
repz
adc
lods
pop
loope
cmp
mov
sub
dec
pop
gs
lret
bound
cwtl
ret
mov
pop
stos
sub
adcb
lock
icebp
xor
push
hlt
or
addr16
cwtl
ja
mov
rclb
mov
dec
fnstenv
out
jge
mov
mov
pop
cmc
loopne
out
xor
jbe
in
subb
cmpsl
jno
test
pop
in
lcall
push
inc
nop
inc
xchg
adcl
aaa
sbb
mov
cs
jmp
and
out
iret
inc
inc
adc
jb
pop
test
jne
shl
xchg
daa
movsl
vpmacsdql
cs
or
pop
mov
cmpb
push
hlt
pop
cwtl
and
xor
or
mov
in
sub
jg
pop
jne
fcomps
xchg
mov
mov
test
dec
mov
and
cs
inc
sbbb
and
addr16
stos
in
scas
push
xchg
pop
mov
movsl
xchg
fidivrs
cmp
inc
dec
pop
push
push
jns
aam
repz
stos
or
pop
inc
pop
or
push
xor
lods
add
fs
dec
pop
in
add
mov
pop
insb
in
and
fldt
inc
in
push
dec
bound
mov
js
shrl
int3
dec
jmp
cltd
orb
pop
ljmp
xor
outsl
jae
leave
push
sub
push
int
paddq
jle
mov
mov
je
movsl
imul
mov
in
imull
pop
cmp
mov
pop
cld
mov
fwait
mov
jae
lahf
sub
hlt
bound
adc
cwtl
stos
push
pusha
mov
stos
xchg
jl
das
lahf
add
cmp
repnz
ret
bound
jb
icebp
pushl
adc
jno
aaa
mov
lahf
pushf
push
mov
inc
xchg
je
xor
leave
lock
inc
push
stc
sbb
in
xchg
push
sub
dec
pop
inc
inc
repz
test
loopne
inc
mov
sub
xchg
cltd
pop
negb
push
lret
cmp
jbe
xchg
mov
xlat
ss
stc
jno
sbb
push
or
dec
jne
out
ljmp
or
or
cmpsl
fldcw
aaa
push
hlt
jae
or
fcmovu
or
cwtl
adc
jecxz
inc
jmp
lea
pop
or
in
pop
add
sub
sbb
loop
xchg
jnp
sbb
addr16
jb
or
cmp
roll
fcmovne
pop
aaa
imul
incl
imul
fsubr
cli
cld
jb
jo
or
mov
lret
mov
outsb
inc
andl
inc
inc
and
sbb
jecxz
idivb
dec
or
mov
std
and
pop
pmaxsw
pop
mov
push
and
adc
ja
cmpsb
loopne
insb
aaa
faddl
inc
fstp
dec
adc
xor
xchg
mov
push
aam
adc
clc
lea
lods
sti
pop
les
or
js
push
adc
mov
subl
sbb
notl
jns
rol
nop
push
push
into
inc
jne
jo
fisttps
jle
das
xlat
sbb
or
mov
call
mov
pop
or
adc
cmpsb
bound
scas
pop
ja
sbb
lret
adc
lcall
add
out
xchg
notb
and
aam
jl
mov
cltd
into
incb
dec
mov
jae
jge
repz
jns
movsl
ja
adc
testb
jle
push
dec
mov
rep
sub
mov
repnz
xchg
ret
push
add
push
dec
adc
mov
jle
insl
jno
jle
repnz
mov
ljmp
pop
mov
ds
xor
adc
test
fnstsw
sub
jbe
sbb
cld
jns
cmc
sbb
pop
mov
xlat
and
adc
ja
dec
xchg
add
cmp
and
xor
add
fnstcw
addl
das
cmp
add
stc
xchg
cmp
adc
sbb
dec
insb
jae
pop
xchg
dec
repz
add
addr16
sti
imul
cmc
outsb
add
sub
inc
adc
sbb
outsb
scas
fistps
ja
repnz
mov
jb
jnp
sbb
sarl
inc
cmp
inc
test
repnz
stos
inc
xlat
mov
or
jne
in
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
or
sub
lcall
jp
mov
sub
jmp
jbe
arpl
dec
mov
repnz
xor
dec
cmp
cmp
mov
test
sub
cwtl
aad
xchg
inc
push
pop
data16
fwait
rclb
xchg
es
jg
mov
inc
ror
push
jl
xor
xchg
es
and
test
jg
inc
pushf
mov
rorb
lea
inc
cld
push
lcall
cmpsb
loop
cmc
out
mov
fs
popf
dec
arpl
pop
scas
dec
lods
sub
dec
in
inc
mov
sti
ds
or
leave
scas
lea
mov
sub
sti
pop
daa
push
ljmp
xor
cmp
or
cmp
sub
inc
add
mov
xor
adc
lret
xor
test
dec
lods
sahf
mov
cmp
icebp
pop
push
mov
popl
scas
aas
and
lea
mov
mov
in
faddl
adc
mov
push
mov
gs
mov
notb
sbb
push
fmull
cmp
inc
push
lret
sub
mov
inc
bound
hlt
movsb
lea
mov
and
sub
pop
inc
xchg
jge
jo
xchg
mov
js
aaa
cltd
xchg
push
cmp
fsub
test
ret
stos
dec
sub
add
pop
int3
ds
sti
push
nop
cmp
xor
popf
push
fldt
xor
movsb
cmp
mov
int
push
inc
mov
subb
push
xchg
push
std
mov
mov
insl
xor
and
adc
in
cmpb
or
sub
mov
lods
sbb
add
rcrb
xlat
mov
out
popa
sbb
inc
imul
and
shl
repz
in
dec
jle
repz
mov
xchg
xlat
mov
jns
inc
inc
lock
xchg
dec
mov
iret
xchg
xchg
popa
cmpsl
cli
jl
gs
incb
shlw
inc
pop
and
scas
or
jge
sbbb
cmp
shll
ja
adc
and
dec
adc
xchg
insb
pop
sti
adc
jle
mov
sub
sbb
fsubrs
test
push
shll
or
shlb
inc
jge
popa
dec
popa
push
mov
mov
lret
add
int3
jg
repz
fwait
loopne
xor
incl
push
xchg
addr16
insb
pop
outsl
sbb
xchg
ret
mov
jns
frstor
sub
js
cmc
push
out
data16
mov
iret
inc
push
sbb
enter
pop
push
cmp
mov
lea
fsubrs
in
fsubl
sbb
xchg
popa
insb
pop
mov
inc
push
inc
and
inc
xchg
js
bound
mov
fucomp
mov
bound
in
shll
push
mov
lret
fcmovnbe
addr16
xchg
pop
xor
pop
inc
sti
cmpsl
test
jle
sub
pop
insb
push
jl
in
mov
pop
inc
shlb
es
ret
mov
push
outsl
int
add
dec
es
es
shrb
jmp
xchg
inc
jb
adc
adc
out
imul
shlb
sbb
aad
sbb
add
pusha
lret
xchg
jmp
aad
out
pop
fisubrs
dec
cwtl
aad
outsb
xlat
cli
fildl
or
scas
mov
dec
popa
cld
mov
sti
jmp
sub
push
jl
std
leave
into
adc
out
test
dec
cld
add
push
mov
push
inc
stc
loope
stc
in
cld
sub
call
push
xchg
shlb
mov
out
pop
fildll
cmp
jo
add
inc
lcall
jno
lea
rcll
jns
mov
push
aas
inc
movsl
xor
pushf
stos
push
sub
or
jge
push
enter
outsl
into
int
test
mov
int
push
jp
sti
mov
jmp
adc
or
jl
push
aad
mov
sub
mov
popf
xchg
mov
mov
xchg
sub
adc
push
clc
nop
addr16
jns
mov
add
cwtl
mov
jns
xchg
xchg
into
mov
scas
or
adc
adc
dec
and
jns
and
cmp
ss
clc
push
sub
decl
loopne
mov
push
inc
add
lret
inc
lods
and
in
or
dec
fs
xchg
fistpll
popl
mov
jo
jbe
fidivrl
dec
jae
xchg
sbb
sub
lea
mov
add
pop
fimull
outsl
arpl
push
insb
leave
add
push
test
push
mov
mov
cmpsb
sub
out
xchg
mov
fiadds
xrelease
inc
andb
sbb
xchg
or
push
mov
mov
xor
lret
imul
stc
xchg
push
pushf
stos
adc
xchg
jne
nop
push
lret
int
xlat
jno
gs
fdivs
outsl
mov
inc
out
lea
insb
push
aad
mov
js
sbb
dec
add
push
xor
xchg
cmc
std
lock
adc
jo
pop
fisubl
fmuls
and
fdivs
in
cmp
lret
pop
add
adc
xchg
dec
dec
push
out
mov
lea
addr16
mov
data16
jmp
mov
pusha
or
jmp
cmpsl
dec
push
fstpt
jno
and
in
jae
nop
cmp
imul
add
cmp
sbb
mov
xor
pop
popf
dec
call
fsubrl
pop
fimuls
jnp
fsubs
fwait
dec
int
jge
int3
loopne
outsl
xchg
xlat
mov
mov
sub
inc
fcoms
xchg
xor
int
aam
repnz
cmc
out
mov
roll
cmpsb
cmpsl
imul
dec
cmp
add
shll
sbb
fxch
arpl
into
push
mov
xchg
jne
sub
xchg
outsl
jne
leave
mov
ret
stc
push
mov
mov
xchg
addb
push
stos
out
repz
subb
inc
jge
ja
sbb
dec
hlt
jmp
or
push
and
in
negl
add
roll
xor
sahf
ret
or
lods
shr
scas
inc
pop
call
notl
sub
test
add
dec
andb
je
insb
sahf
mov
rcl
jle
mov
or
xchg
ss
stc
xorb
loop
cmpsb
cmp
push
rorl
push
lea
xchg
sub
mov
out
and
sahf
je
out
or
xor
or
stos
inc
popf
and
pop
cmc
enter
aas
in
mov
and
dec
sbb
add
pop
insl
jmp
test
push
orb
mov
xor
sub
mov
or
jbe
mov
test
popf
iret
cld
cld
test
roll
xchg
es
fists
cmp
mov
cmp
lahf
out
add
mov
loop
push
insl
jne
dec
add
outsl
adc
fsubrl
imull
scas
dec
lods
ss
xchg
pop
aam
fdivl
insl
pop
loopne
mov
int3
fistps
cmp
inc
mov
enter
out
mov
shll
inc
aam
js
aas
outsl
xchg
adc
arpl
lods
dec
mov
repnz
push
push
dec
pop
scas
inc
into
push
jl
cmpsb
pop
xlat
dec
mov
cld
sub
pusha
leave
push
push
cmp
lret
test
xor
int
dec
mov
pop
loope
aam
push
cwtl
sbb
or
out
rcl
stc
push
ja
jg
push
xor
cmp
faddl
inc
ljmp
cli
inc
adc
sub
in
mov
call
dec
incl
jae
or
divl
xchg
mov
rcrl
sub
push
clc
push
pop
cwtl
mov
pop
dec
std
es
xor
mov
or
lods
scas
enter
xchg
mov
dec
aad
std
sbb
fwait
stos
pop
cmp
mov
or
sub
fistpll
sbb
scas
mov
xor
mov
sarb
jle
pop
insb
call
scas
je
push
sub
insl
jl
dec
jnp
clc
push
fimuls
scas
test
iret
and
jge
aaa
jne
subb
loope
mov
jecxz,pt
push
stc
sub
movsb
aas
mov
cmp
mov
adc
cli
xorl
xchg
dec
adc
dec
cmp
pop
sub
pop
lods
cmpl
push
mov
testl
mov
push
out
or
test
jg
xor
pop
jnp
sbb
mov
leave
xchg
into
mov
pusha
je
or
add
scas
cmp
ficompl
popa
mov
leave
popa
data16
int3
jg
sub
sahf
mov
loope
jne
int3
xchg
rcll
hlt
rcr
mov
clc
pop
pop
mov
ljmp
sahf
inc
ljmp
aas
in
mov
repnz
jnp
jmp
cld
inc
xor
jmp
ret
cld
lcall
pslld
sub
cmpsl
ret
mov
insl
and
mov
mov
sub
xor
mov
pushf
inc
aam
add
ret
test
xor
cmp
movsb
cmc
mov
mov
mov
jae
mov
loop
and
adc
jo
lret
xor
dec
mov
movb
jbe
sahf
xchg
rcrl
push
andb
arpl
test
fisttps
push
push
pop
or
dec
inc
pushf
cmp
js
ret
or
repz
fnstenv
loop
pop
xlat
mov
sub
dec
fwait
add
out
push
cmp
fstps
out
out
stc
mov
and
add
in
adc
lea
pop
mov
pushf
out
outsl
add
pop
sbb
fmul
into
inc
scas
xchg
in
jecxz
push
add
in
movsl
adc
cmpsb
jg
mov
int
or
mov
and
and
aad
jle
adc
fwait
cmc
shrb
fabs
pop
push
dec
mov
stc
mov
mov
enter
rcrb
add
jmp
add
lods
in
ss
in
call
sub
out
data16
pushf
pop
shll
ret
cltd
inc
mov
frstor
mov
movsl
push
inc
out
adc
imul
jae
add
cwtl
add
cmp
inc
mov
scas
fnstsw
adc
shll
inc
adc
loope
push
iret
lods
testl
and
aas
cmp
xchg
mov
out
dec
stc
mov
lds
push
pushf
bnd
push
inc
aas
pop
mov
add
scas
mov
int
add
pop
aad
add
rcr
jae
adc
adc
arpl
pushf
cld
test
xor
jecxz
pop
and
bound
push
cmp
cwtl
inc
outsb
in
aam
mov
sbb
cld
aaa
in
test
int3
inc
jmp
sub
ficoms
in
or
jnp
inc
mov
scas
pop
insb
pop
cmpsb
cmpsb
adc
sub
and
jmp
mov
bound
aaa
add
xor
scas
ljmp
test
rol
scas
into
test
xor
mov
push
in
orl
cmp
jl
gs
lret
inc
cmp
mov
xchg
sub
xchg
pop
jle
out
add
cmp
mov
mov
or
mov
mov
scas
cmp
jp
arpl
ja
push
cli
adc
add
pop
jecxz
lret
ret
or
mov
subb
dec
mov
or
mov
in
ss
arpl
jmp
inc
ss
sbb
mov
mov
scas
fisttps
jg
and
lret
and
int3
mov
add
in
mul
pop
or
cs
stos
cmpsb
push
cmp
push
push
sarb
popf
popf
xchg
test
sbb
enter
mov
sbb
ds
lods
imul
mov
adcb
mull
add
mov
xor
into
mov
push
mov
dec
movsl
inc
cmp
notb
rorl
xor
stos
sbb
sbb
outsb
scas
out
and
test
jb
je
jp
mov
xor
or
jge
clc
ss
sarb
mov
je
ret
pop
fimuls
xor
jmp
inc
test
ds
jo
sbb
mov
and
js
mov
lods
cltd
sbb
insl
cwtl
xor
jp
cmp
sub
je
test
push
sbb
fcoms
clc
lock
rcrb
inc
xor
jae
and
mov
sub
pop
inc
pop
or
and
cwtl
test
cmp
in
inc
js
lcall
inc
stos
cltd
testb
jp
cs
sbb
int
insb
ret
fwait
cmp
jb
mov
arpl
pop
xchg
imul
mov
mov
in
fnstenv
aaa
ficoms
xchg
dec
lds
add
add
dec
sub
sbb
out
and
stos
add
xchg
imul
jb
das
add
imul
and
xor
ja
lcall
incl
rolb
lahf
fimuls
push
cmp
mov
cmpsb
fninit
lcall
dec
or
mov
popf
and
jae
fistpl
mov
fcompl
adc
ss
pop
les
ret
das
lds
test
inc
scas
lods
pop
daa
add
outsl
cmpsb
or
insl
icebp
jbe
cli
dec
fisubs
aad
push
jo
movsl
ror
popf
in
sub
dec
out
mov
adc
jbe
ret
popf
adc
stos
push
in
fmul
cmpsl
push
fs
outsb
loope
pop
sbb
cmovo
insb
fldl
or
mov
lcall
jo
test
xchg
xor
enter
leave
je
sbb
push
aam
mov
add
insb
dec
pop
outsb
pop
fildl
xchg
popf
popf
adc
or
enter
loop
xchg
fsubrl
cmp
add
sbbl
sbbl
imul
push
les
iret
in
xchg
fildl
in
aad
test
xor
repz
sub
adc
ja
and
jae
or
mov
ss
mov
lret
rolb
test
clc
xchg
push
push
insl
sub
imul
orb
sub
xchg
xchg
loop
inc
xchg
aas
push
cmpsl
rol
js
pop
rcl
sub
xchg
jns
cmp
test
cmp
fistpll
mov
lcall
mov
adc
pop
iret
xchg
mov
mov
mov
out
inc
and
pushl
in
cwtl
and
xor
cmp
push
out
jecxz
sahf
rcll
imul
orl
pop
mov
push
jmp
ss
or
inc
lock
xchg
mov
mov
mov
in
aaa
mov
push
out
adc
dec
pop
mov
or
push
push
xchg
ja
jns
mov
add
outsb
in
mov
movsb
imul
repz
push
inc
xchg
dec
stos
fs
adc
sarl
sub
movsl
mov
in
xor
sub
push
inc
loopne
and
lcall
icebp
jnp
pop
test
stos
sahf
or
inc
fsubl
push
adcb
sbb
fcoms
fisttpl
xchg
test
dec
jo
pop
jge
sarb
jae
mov
sub
lods
inc
jmp
mov
shrb
cmp
mov
lret
es
je
pop
fistpll
push
iret
mov
pop
dec
xor
sarl
or
mov
stc
inc
lock
add
push
fmulp
je
push
push
aam
sbb
cmpsb
pop
add
dec
push
cmp
jno
flds
data16
jae
pop
inc
mov
mov
in
pop
xlat
push
add
xchg
and
ret
add
hlt
sbb
aad
lods
sub
iret
mov
ds
je
loope
das
rorl
outsb
cmp
sbb
jne
dec
lods
into
imul
push
inc
jae
shrl
pop
out
mov
scas
push
jmp
data16
and
fsubrl
dec
mov
pop
add
stos
in
xchg
add
sahf
xlat
ds
das
dec
cmc
stos
cmp
dec
xor
fwait
ja
out
dec
roll
jno
or
cwtl
sbb
je
jecxz
pop
xor
push
jp
roll
mov
pop
jae
arpl
out
loope
jge
mov
repz
scas
imul
sub
popa
mov
out
cmp
mov
andb
jle
icebp
push
inc
pop
mov
inc
sahf
jl
ja
push
ja
lea
push
pushf
popf
hlt
sub
jne
push
test
cmp
daa
cltd
sub
mov
push
mov
les
dec
dec
inc
mov
es
data16
orb
xor
repnz
lcall
and
lods
xchg
push
pop
mov
or
jmp
sahf
and
jmp
mov
jnp
aad
pop
ret
or
inc
in
fcomps
arpl
mov
ret
push
cmp
jp
xchg
loope
pop
push
adc
inc
jo
enter
jae
popf
gs
ja
shr
mov
insl
jns
sti
jnp
fldenv
pop
in
sbb
push
mov
bound
xor
lret
or
std
jae
pop
sub
jae
sahf
pushf
mov
adc
inc
aad
sbb
aam
icebp
or
xchg
and
xor
scas
loope
xor
pop
inc
hlt
gs
je
loop
xchg
dec
add
pop
test
insl
cmp
ljmp
pop
and
nop
negb
popa
dec
mov
movsl
scas
mov
popl
mov
jne
jmp
mov
mov
fistpl
add
les
test
pop
lods
inc
pop
aas
rorb
pop
fcoml
imul
mov
pop
gs
orb
push
pop
jmp
mov
jno
and
or
xchg
ret
mov
inc
scas
gs
nop
dec
pop
xlat
push
pop
push
push
and
lcall
fbstp
shl
xchg
pop
cmp
out
adc
adc
mov
gs
popf
testl
popl
dec
adc
pop
or
adc
jo
cwtl
dec
xor
xchg
insl
sub
xor
outsb
aad
xchg
pop
mov
pand
mov
xchg
sub
test
mov
push
loope
jge
hlt
pop
mov
icebp
das
inc
lods
sub
aas
cmc
call
outsl
cmp
in
mov
shl
add
dec
push
mov
popa
les
push
xor
aaa
sbb
test
ja
js
das
cmp
dec
adc
mov
push
xchg
xor
adc
push
jg
and
xchg
call
nop
bnd
xchg
mov
push
cwtl
jmp
or
clc
fwait
sti
stc
call
les
sti
or
pop
adc
stos
push
adc
xchg
mov
cli
cmpsl
bound
loopne
cmpsl
mov
clc
xchg
push
add
gs
int
sub
mov
and
nop
mov
dec
push
sbb
daa
movsl
stos
fdivl
cs
rclb
pop
mov
sub
clc
sbb
in
sub
cmp
add
mov
loope
xchg
dec
and
or
insb
je
xchg
fsts
sbb
mov
lock
push
nop
xchg
add
pop
or
ret
das
adc
sub
mov
std
cld
ret
add
imul
add
outsb
jo
pop
scas
in
cltd
ficoml
adc
and
in
jb
jb
xchg
test
push
icebp
jbe
sub
mov
scas
dec
movsb
fsubrs
iret
adc
scas
hlt
cmc
inc
sbb
je
stc
pop
cmpsl
xchg
pop
outsb
clc
lret
stos
mov
cwtl
pop
xor
or
call
lock
neg
xor
sub
adc
dec
sub
sub
outsb
add
sub
xor
adc
sbb
test
or
jb
outsl
imul
lods
sbb
lock
test
jmp
cmp
lea
fmulp
sbb
mov
add
insl
xlat
xchg
push
mov
adc
pop
loope
in
push
rorl
sbb
mov
arpl
stc
mov
push
shrb
cmpsb
rcrl
jno
addr16
sub
xchg
insb
mov
cmp
mov
out
sbb
add
shlb
push
pushf
push
mov
daa
or
and
shll
popf
aas
lds
enter
gs
or
sahf
xorb
adc
ja
mul
daa
jae
jl
pushw
jecxz
xor
jo
and
out
stos
inc
std
test
lret
and
mov
inc
jns
or
ds
push
mov
arpl
leave
jns
push
test
jae
jnp
inc
stc
dec
fildl
mov
into
sub
rcl
int3
and
push
sub
push
dec
rolb
or
xor
leave
in
xchg
xchg
push
in
imull
nop
je
dec
xchg
jb
test
aaa
imul
mov
adc
push
shl
ficompl
xor
imulb
cli
ds
shrl
test
dec
jle
cmpsb
add
dec
test
icebp
xchg
or
and
int
and
jnp
into
out
cld
aaa
ss
enter
fnstsw
jmp
ss
lcall
mov
test
pop
lretw
jmp
mov
pop
mov
jle
mov
icebp
push
cmpsl
fisubs
pop
stc
in
mov
repnz
mov
mov
xor
add
mov
sti
and
adc
and
cmp
pop
pop
fstps
jmp
dec
stos
xor
pop
dec
inc
add
inc
sub
test
adc
xchg
mov
mov
lcall
in
xchg
mov
inc
jne
pushf
mov
test
xchg
adc
push
insl
push
ljmp
or
jl
fdivrs
aad
shrb
mov
lret
jecxz
out
mov
mulb
or
out
pushf
iret
push
jl
lods
movsl
leave
les
shll
ljmp
aad
imul
rorl
aas
fdivs
aas
insl
fdivs
aas
rcl
sbb
sbb
ja
push
xchg
adc
mov
jns
ss
insl
fidivrs
push
push
cmpsl
nop
add
mov
pushl
push
inc
shrl
out
dec
adc
loopne
icebp
movsb
dec
loop
push
cmp
sbb
lods
out
mov
leave
cmpsb
rcll
sarl
push
pop
sub
adcb
mov
push
mov
lret
aam
addr16
sub
mov
scas
add
inc
rcll
hlt
sti
ds
dec
adc
rcll
add
fdivs
or
in
std
cmp
or
hlt
push
xchg
shlb
clc
cmpsb
out
fimull
push
fbld
jnp
mov
and
mov
shlb
dec
mov
jp
in
ret
lret
sub
lods
jl
mov
pop
mov
jmp
insl
insb
xor
fidivrl
pop
cs
adc
lods
or
mov
xchg
call
mov
mov
sub
adc
dec
lods
dec
xor
mov
outsl
in
outsb
xchg
cmp
or
cltd
mov
aas
fs
ret
mov
out
push
and
insb
lods
cmc
cmpsb
add
mov
cmp
mov
lods
push
in
push
pop
xchg
or
push
lods
test
xor
dec
jp
daa
cmp
push
push
jle
lcall
mov
add
mov
mov
pop
xchg
in
jns
gs
loope
test
push
sbb
or
dec
into
cwtl
push
mov
pop
icebp
sbb
mov
push
leave
mov
adc
cmp
shlb
mov
dec
cmpsb
push
popa
mov
int
mov
clc
cmpsb
sub
roll
lods
jecxz
mov
arpl
test
cld
mov
mov
out
mov
dec
jecxz
iret
movsb
imul
mov
lea
cmp
mov
ret
sbb
pop
in
dec
mov
sbb
daa
test
cmp
stos
jo
mov
sbb
inc
sub
mov
fisubrl
dec
je
pushf
callw
and
dec
xor
sti
test
in
adc
pop
cmp
dec
adc
mov
lret
dec
dec
clc
dec
mov
ljmp
inc
sbb
pop
mov
push
hlt
inc
add
cmpsl
pop
mov
sub
mov
and
add
push
pop
pushl
test
sub
inc
sbb
jp
dec
push
lods
movsb
pop
sarl
cmp
push
fs
test
repnz
jo
inc
addb
pop
adc
test
int3
flds
mov
inc
mov
cmp
add
test
xor
xor
xchg
xor
xor
loope
mov
lock
adc
fsubrl
dec
mov
jp
out
fwait
or
gs
lock
mov
xchg
cmpsl
jne
into
fnstcw
inc
cmp
nop
dec
in
xchg
adc
sub
adc
push
cmp
sbb
ljmp
cwtl
jno
insl
in
jnp
xchg
push
shrb
push
test
xchg
adc
mov
mov
mov
lods
ss
sbb
xchg
orb
xchg
xor
mov
sbb
mov
sbb
push
push
mov
lods
cmc
xchg
xlat
cmp
rcrb
and
xchg
push
pop
sub
pop
push
push
addr16
sub
jp
dec
js
pop
jge
jmp
das
push
xlat
add
subl
or
ficomps
test
out
and
in
stos
jmp
jo
fsubrl
dec
or
mov
fs
fstpl
mov
stos
or
add
dec
xchg
sub
and
xor
add
std
es
inc
leave
jmp
scas
inc
mov
dec
stos
dec
lds
xor
push
fistpl
xor
adc
adc
cld
lea
in
xchg
lods
gs
stos
scas
out
imul
int3
and
test
pop
popa
sub
ficompl
mov
cmp
cmp
ja
lea
mov
or
mov
adc
cmp
ljmp
add
push
sbbb
sub
gs
inc
movups
lcall
imul
loopne
iret
push
dec
lcall
cwtl
mov
sub
xor
xor
aad
popf
dec
sarb
insb
cmpsl
mov
pop
mov
sbb
call
push
xorl
daa
pop
push
pop
mov
jae
in
jge
jmp
popf
or
inc
mov
cld
rorb
rcll
stos
mov
lcall
or
cmp
jb
xchg
xchg
push
add
shlb
or
ret
push
fsub
jle
add
jmp
dec
push
dec
dec
xor
mov
das
in
pop
rorl
cmpsb
hlt
pop
adcl
push
repnz
push
mov
cli
fmulp
adc
call
mov
push
xor
mov
lret
pop
repz
jmp
sub
ret
mov
push
lods
ror
adc
pop
test
xchg
mov
test
push
and
xor
mov
filds
mov
in
cmpsb
jg
inc
inc
pushf
in
pop
pop
xor
out
xor
mov
dec
jg
repnz
pusha
jle
sbb
sbb
lods
daa
jno
cltd
shll
sti
jl
hlt
test
push
xchg
adc
xor
dec
or
mov
jb
sbb
dec
and
adc
ljmp
adc
pushf
xor
insb
daa
cmp
outsb
sub
jl
cmp
leave
or
pop
rorb
push
std
and
aam
scas
jl
adc
out
mov
mov
in
cmc
inc
icebp
cwtl
test
std
pop
mov
jb
in
mov
add
mov
sbb
cmp
movsb
mov
adc
fwait
int
adc
or
pusha
dec
sub
scas
enter
mov
or
mov
aaa
inc
into
aam
xor
mov
mov
outsb
and
std
jns
fcmovu
imul
pop
jmp
mov
sar
neg
add
scas
jmp
arpl
loope
cmp
jb
pop
imul
pop
int
daa
in
call
cld
scas
dec
into
decl
lret
shll
data16
jmp
cmp
fmul
mov
mov
xor
ud2
or
jge
loopne
push
out
add
lcall
jo
inc
nop
adc
movsl
xchg
xchg
jp
or
dec
insl
cmpsl
mov
sub
sbb
mov
scas
or
rclb
dec
or
jbe
fs
jnp
mov
sbb
xchg
and
inc
push
xchg
xchg
ja
mov
mov
and
sub
adc
loop
aad
mov
test
clc
lds
test
pushf
xchg
ja
movsb
push
imul
dec
enter
jnp
les
repz
push
push
xor
mov
ret
inc
mov
cmp
hlt
sbb
cmpsl
loope
xchg
call
cld
lret
cld
fmull
nop
int
jnp
imull
lock
sub
xor
cmp
mov
cwtl
rcr
mov
ret
loopne
lret
daa
rorb
push
sbb
xorl
sbb
jbe
cmp
shrb
xchg
jo
into
jp
dec
pop
jp
sbb
lock
arpl
addr16
imul
enter
or
sbb
enter
cli
jbe
outsl
cmp
xor
or
and
in
adc
jl
leave
jne
push
mov
adc
lods
inc
sahf
cmp
mov
jg
push
jno
loopne
and
nop
dec
iret
jb
imul
or
test
popa
cmpsl
pop
lcall
or
bound
imul
mov
subl
scas
aaa
out
push
and
dec
icebp
cmp
shl
cmp
das
sahf
imul
les
pop
movsb
xor
add
pop
in
in
dec
dec
test
scas
je
repnz
xor
and
movsl
fiadds
inc
ror
lods
movb
lret
sbb
loopne
xor
adc
fiaddl
scas
out
dec
xchg
cmp
outsl
xlat
xchg
sbb
rep
cmp
push
ds
push
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
or
jp
pop
jp
adc
in
jmp
add
aas
xor
jmp
inc
cmp
adc
out
push
ds
arpl
into
std
shr
jb
aas
xor
sbb
mov
dec
mov
shr
fcomps
cld
and
arpl
pop
les
jl
add
sub
mov
sub
fxtract
adc
lods
sub
jb
scas
call
sub
dec
sub
cmp
int3
es
dec
lret
jnp
das
enter
cmp
mov
sub
insb
push
ljmp
sub
pop
fdiv
mov
mov
movsl
std
in
adc
jg
mov
xor
sub
xchg
or
mov
mov
testl
mov
ficoms
jb
jns
sbb
fldenv
roll
push
push
aaa
test
iret
fcompl
cmp
cmp
cmp
es
stos
movsl
pop
xchg
je
cmp
test
inc
inc
xchg
pop
lret
xchg
cmp
pop
imul
mov
mov
xchg
push
pushf
movsl
cmc
jecxz
pop
stos
aad
push
mov
mov
and
dec
jge
out
pop
jge
aas
and
insb
and
outsl
psraw
pushf
call
sahf
or
sbb
or
lret
add
mov
cmpb
jle
emms
icebp
or
push
pop
cmp
pop
out
jle
mul
pop
loopne
xchg
jo
leave
xchg
orb
mov
sub
adc
jl
fstpt
data16
xor
lods
popf
xchg
inc
mov
lds
xchg
adc
adc
addr16
js
dec
or
and
test
loop
cld
in
imulb
insb
leave
or
mov
enter
xor
sub
movsb
mov
push
mov
sbb
into
adc
data16
out
test
or
fcomps
ret
cmc
cs
mov
inc
clc
xor
clc
lret
popa
pop
pop
ljmp
mov
jo
jp
loop
cmc
lcall
dec
fwait
sti
rcll
ljmp
imull
cmp
adcb
xchg
push
imul
xchg
sub
xchg
rcr
mov
test
adc
or
insl
mov
jns
data16
fwait
jo
or
push
push
mov
mov
pop
push
sbb
loopne
mov
jbe
mov
enter
ljmp
xlat
pop
out
add
ja
mov
lret
mov
call
loop
cmp
jne
push
sbb
repz
out
mov
lods
daa
shrb
cmc
jb
inc
push
mov
xchg
arpl
xor
sub
adc
cli
sbb
xchg
in
shlb
in
push
add
xor
aam
stos
mov
adc
add
jbe
add
ljmp
xor
sahf
dec
push
jne
mov
mov
pop
jecxz
inc
adc
dec
ja
notl
xchg
lea
pmuludq
xchg
mov
cmpsl
scas
into
jmp
sub
cmp
adc
push
andb
clc
mov
daa
dec
pop
shll
mov
and
adc
cmpsl
mov
in
in
ret
lock
sbb
fs
out
cmp
stos
imul
mov
test
pusha
push
or
scas
or
iret
pop
mov
adcb
mov
ja
push
jno
xchg
sbb
leave
mov
insb
call
push
adc
lahf
xchg
push
aas
push
mov
jo
pushf
jnp
xlat
xchg
popa
out
xlat
sub
sarb
sbb
addb
add
dec
and
stos
xchg
xchg
insb
mov
enter
push
clc
sbb
mov
adcb
sbb
mov
int
dec
sbbb
out
pop
lods
fwait
inc
popf
rcrb
and
push
mov
call
xchg
mov
dec
cs
xor
add
cs
xchg
sub
mov
lret
out
dec
pop
mov
out
outsl
xchg
aaa
scas
and
pop
fildll
cltd
loopne
mov
add
outsb
jp
ret
jbe
dec
ljmp
hlt
mov
std
xlat
lcall
sti
push
jae
mov
je
jg
loopne
cmp
xchg
fdivs
mov
ret
ss
fsubp
pusha
dec
inc
fidivl
mov
sub
mov
ror
xlat
xlat
cmp
js
dec
pop
push
std
and
cwtl
jo
mov
mov
hlt
testl
rol
adc
push
dec
xchg
call
cwtl
inc
jecxz
fstl
test
sbb
outsl
in
pop
adc
cmc
aas
daa
movsb
jne
xchg
hlt
in
jle
mov
and
dec
imul
pop
pop
mov
and
movsl
data16
pop
insl
mov
pop
adc
cli
inc
lods
push
add
cltd
pop
jno
inc
push
insl
ljmp
mov
and
addl
mov
enter
gs
lcall
xor
out
mov
push
push
xchg
or
pop
dec
lret
and
int
mov
shrb
add
adc
insb
mov
or
ret
and
leave
int
adc
aaa
pushf
or
call
cs
add
adc
cwtl
jmp
insl
mov
cmp
cmp
ss
movsl
addb
montmul
cmpsb
pop
or
cmp
stos
pop
adc
push
test
pop
adcb
cmc
js
fnstcw
dec
add
gs
xchg
mov
jecxz
inc
xchg
pop
lea
sbb
in
xchg
outsb
scas
iret
test
jg
divb
and
mov
sub
and
sub
lods
inc
add
pop
in
sbb
popf
fs
icebp
dec
dec
jge
fisubl
mov
xor
outsl
outsb
add
in
sbb
or
pop
scas
cmpsl
andb
sahf
sbb
lods
mov
lahf
cmp
into
jge
and
inc
sti
inc
mov
cmp
imul
sbb
cmpsb
push
or
push
mov
or
xchg
pop
push
lds
pusha
aam
fisttpl
sub
fwait
hlt
push
repz
sbb
xchg
insb
dec
out
adc
ficompl
insl
shll
inc
mov
cld
js
repnz
inc
xchg
pop
jb
bound
int
xchg
cmp
je
rorl
and
or
arpl
cmc
fs
pop
gs
push
cmp
add
test
adc
push
iret
insl
std
dec
xlat
loopne
push
mov
ja
fcompl
add
nop
mov
or
xchg
leave
xchg
in
mov
push
repnz
push
adc
iret
shrb
adc
add
rcrb
ja
adc
sti
bound
das
sub
in
push
das
inc
mov
add
sub
pop
jmp
push
hlt
mov
scas
cld
insb
je
xor
fcoms
pop
add
jmp
cmpsb
jmp
jne
jecxz
mov
sarl
adc
xchg
mov
fldl
mov
inc
in
and
roll
in
cmpsl
arpl
fcmovne
pop
shll
xchg
jnp
icebp
ret
inc
push
in
cmc
pop
in
popa
scas
xchg
mov
jno
loop
xchg
xchg
popa
ret
sbb
scas
andl
xor
and
dec
popf
out
test
add
loopne
mov
cmp
xchg
xor
out
xlat
inc
mov
lcall
mov
outsl
jg
cmp
mov
jmp
jp
mov
aaa
mov
push
lcall
fimull
xor
fcompl
xchg
jg
push
mov
jg
rorl
ljmp
mov
mov
pop
out
stos
sbb
inc
jae
xor
repnz
add
out
pop
push
xor
test
notl
xchg
add
dec
push
xor
out
gs
jo
pop
pop
jnp
cmp
rcrl
inc
das
mov
fcmovne
or
popa
ret
push
shll
sarl
add
or
sbb
js
jbe
lahf
jne
jo
mov
pop
cmpb
pop
cmp
and
les
in
sbb
adc
xchg
sbb
ljmp
xor
add
in
dec
jl
lds
out
dec
jbe
les
adc
jl
cmp
xchg
push
adcl
int3
dec
adc
jg
mov
dec
mov
sub
cmpsl
scas
push
mov
and
ret
fdivs
add
nop
daa
mov
repnz
mov
mov
aad
rcrb
xchg
add
popa
inc
sub
jp
lahf
ret
cmp
mov
bound
fwait
lods
popa
pop
cwtl
push
and
inc
ljmp
dec
xor
stos
mov
popf
mov
dec
outsl
push
pop
clc
pop
mov
push
push
add
sbb
daa
imul
pop
sbb
inc
lds
push
adc
and
pop
dec
sti
add
and
xchg
shll
inc
adc
or
into
faddl
xchg
adc
jge
insb
dec
lock
mov
mov
mov
xchg
popa
arpl
loope
fbstp
push
mov
xchg
hlt
fcomps
push
inc
and
inc
sub
in
sbb
sbb
or
lret
mov
test
enter
fcompl
push
mov
icebp
or
lods
jns
seto
addr16
inc
add
mov
cmp
and
or
lret
and
rcll
lds
cli
jle
out
push
mov
or
mov
imul
fcmovb
pop
xor
cli
mov
pop
rorb
stos
in
jbe
jbe
int
pop
push
pop
es
es
push
orb
mov
leave
dec
sub
into
mov
sbb
sbb
imul
fidivs
sbb
in
cmc
xor
pop
adc
adc
mov
dec
push
repnz
pop
fwait
int
gs
lret
xchg
fs
int
into
lahf
inc
and
add
imul
std
cmp
cmp
dec
pop
cmp
dec
imul
jge
push
jle
jbe
or
adc
lods
in
dec
cmp
out
arpl
cmp
adcb
jmp
loopne
push
ror
push
jmp
in
xlat
mov
push
and
pop
pop
mov
aad
sub
mov
lock
jns,pn
movsl
fnsave
pop
mov
into
xchg
pushf
cmp
push
lret
mov
inc
ret
pop
imul
dec
jae
jecxz
push
test
and
lds
mov
jo
jp
inc
hlt
cli
gs
out
loope
xchg
add
push
adc
add
dec
andb
xor
shl
push
pushf
repz
fcomps
add
lret
ja
xor
rclb
inc
jp
es
mov
sub
jmp
xor
mov
pop
xor
enter
repz
dec
jl
push
push
inc
mov
je
cli
out
jge
out
cmp
pop
add
push
add
repnz
xchg
mov
and
xor
loop
mov
add
sbb
arpl
adc
je
test
push
mov
repnz
out
jp
and
mov
adc
fidivs
mov
jg
sub
out
test
mov
enter
jns
sub
and
mov
test
call
add
mov
popf
outsb
or
jne
adc
mov
jo
jge
cli
mov
add
lods
xchg
fwait
dec
orb
adc
push
movsl
or
cmp
icebp
push
imul
leave
sub
outsl
and
push
fistpll
cltd
cmp
addr16
fnstsw
add
xchg
and
xlat
adc
jae
cwtl
das
cmp
adc
adc
mov
icebp
jnp
adcl
xor
adc
stos
inc
xorb
cmc
xorb
frstor
leave
ret
inc
cmp
xor
mov
add
stc
cmpsl
ret
or
push
ljmp
xchg
data16
sbb
mov
fisttpl
push
dec
jge
fcomi
or
xchg
jo
movsb
test
out
les
or
dec
jecxz
and
in
xlat
or
and
test
xchg
or
fcomi
inc
sub
stos
and
mov
mov
pop
add
dec
ret
sub
adc
and
mov
js
sbb
in
mov
mov
inc
jp
cmpb
mov
ss
sbb
mov
jo
sub
into
outsl
outsl
rcll
mov
push
jmp
jne
sbb
or
push
inc
inc
jp
push
jg
je
test
mov
inc
dec
insb
dec
sbb
gs
ret
pop
add
mov
cmp
sub
xor
and
or
xor
sbb
frstor
inc
iret
fcoms
jp
mov
cld
add
push
adc
xchg
es
mov
fdivl
mov
mov
inc
mov
and
jp
push
in
dec
sbb
inc
mov
adc
addr16
imul
mov
rcrb
add
into
push
cmpsb
loopne
scas
test
sbb
sub
shl
dec
pop
or
jne
inc
sbb
pop
int3
xchg
push
jno
jbe
rcr
ret
push
sub
or
mov
mov
push
mov
push
in
cmp
dec
lret
bound
in
out
and
push
mov
scas
sbb
mov
push
leave
stc
sbb
cmpsb
inc
xor
pop
loope
les
dec
aam
pop
in
js
xor
dec
pop
daa
inc
rcr
xchg
cwtl
pop
sbb
cwtl
cmp
scas
fstpt
cmc
lods
fcoms
sub
mov
idivb
dec
rol
mov
cmpsb
jno
pop
cmp
xor
xor
fcomps
mov
inc
repz
push
jb
jae
mov
pop
rorl
bound
inc
aad
data16
push
outsb
add
push
mov
cmp
sbb
sbb
iret
add
out
lods
sbb
push
mov
popa
jb
xor
mov
test
pop
test
std
fstl
fcmovu
pop
mov
xor
push
inc
outsl
bound
pop
sti
leave
rcrl
sbb
mov
aaa
aaa
push
fmuls
in
test
rclb
jno
or
xor
outsl
stos
in
push
xchg
add
mov
frstor
push
fs
out
dec
insl
push
cmpsl
push
aas
jne
lret
push
sub
lcall
inc
fdivl
adc
rcrl
aam
dec
mov
sub
xchg
push
inc
stos
es
and
or
xchg
shlb
in
mov
mov
stos
cld
or
in
pop
pushf
or
sub
hlt
sbb
addr16
pop
inc
adc
loope
push
mov
jge
lock
comiss
jmp
mov
bound
les
xchg
mov
mov
cli
repnz
data16
mov
push
mov
mov
adc
add
adc
jge
adc
add
ret
stos
dec
pop
aad
pusha
mov
das
dec
scas
mov
mov
dec
xchg
mov
xor
xchg
sub
stos
aad
xchg
inc
sbb
ljmp
pop
fistps
inc
andl
sbb
mov
cmp
inc
or
pop
divb
test
and
in
mov
xor
or
inc
push
add
sub
scas
aam
mov
pop
loope
xor
shlb
adc
xchg
imul
daa
je
sub
add
cmp
jo
out
pop
mov
stos
cltd
and
and
testb
arpl
lcall
push
mov
fmull
jmp
lret
adc
or
ljmp
and
bound
out
and
jo
imul
and
push
push
dec
cmpsb
pop
cmc
sti
mov
adc
push
push
xor
pop
in
add
nop
push
in
sub
pop
sub
fdiv
sub
outsl
inc
push
stos
xlat
ljmp
cmpsl
cltd
es
or
cwtl
sub
pusha
je
negl
mov
movsl
push
dec
sti
decl
jbe
inc
sub
lret
ja
fdivl
jl
add
lahf
cld
jnp
cli
mov
jmp
and
rcl
pop
add
adc
stos
out
into
fiadds
iret
jne
movsl
les
jl
mov
sbbl
daa
pushf
sbb
mov
inc
dec
in
lods
push
repnz
jecxz
mov
pop
dec
pop
adc
mov
adc
bound
mov
enter
jmp
cltd
mov
pop
jnp
lods
frstor
popf
loope
cmp
dec
or
out
cs
pop
cwtl
and
sbb
loope
ficompl
pop
mov
cmp
xchg
sti
add
sub
sahf
jae
pop
int
mov
sbb
push
xchg
sbb
test
mov
jns
cmc
lahf
lods
and
mov
inc
fsubs
fiadds
push
mov
adc
sbb
or
fidivrl
add
xor
cld
loope
pop
and
add
cmp
jb
dec
fmuls
inc
push
movsb
in
mov
dec
fbld
lods
dec
inc
aam
push
jno
dec
push
xchg
cmp
sub
iret
ja
and
xor
inc
idivb
enter
ss
pop
adc
jo
es
loopne
xor
dec
xor
sub
add
sarb
iret
lock
mov
sub
jne
call
jno
jne
jns
ficoml
mov
add
and
cmp
call
sub
pop
out
mov
jle
jge
add
adc
inc
cmp
ja
call
stos
dec
inc
jge
rclb
ret
mov
push
in
or
cmp
sti
jp
dec
inc
inc
sbb
sbb
sub
gs
pop
shlb
icebp
call
loopne
pushl
aaa
push
mov
imul
mull
sbb
repnz
je
pop
push
lds
ljmp
fcompl
push
cmp
mov
xchg
jb
aam
mov
push
inc
add
syscall
lea
in
je
ja
and
decl
and
pop
addb
fwait
mov
cmpsl
repz
and
adc
push
adc
insb
cmp
lret
rorl
repnz
mov
mov
or
mov
lods
std
int3
nop
adc
or
iret
inc
dec
pusha
imul
mov
andl
push
pop
lahf
icebp
xchg
and
fmuls
push
and
rcl
shrd
pop
subl
popl
sub
mov
es
cmp
mov
sub
pusha
testb
test
cwtl
lret
nop
push
sarb
shr
inc
loope
nop
imul
cmpsl
loopne
mov
loop
mov
inc
jmp
repnz
adc
lcall
insb
xchg
popa
fsubrs
out
jae
and
roll
out
ret
cmp
lods
xor
test
pop
mov
ss
aam
outsb
add
dec
xor
push
gs
add
cmp
in
loopne
orl
sub
sbb
push
mov
cs
dec
mov
xchg
hlt
scas
mov
pop
inc
mov
xchg
push
pop
iret
xchg
in
sub
sahf
sub
test
mov
dec
mov
aam
adc
cmp
mov
fisttpll
movb
out
scas
sub
and
or
iret
gs
pushl
mov
lods
pop
shl
js
loopne
aad
and
rcrb
nop
or
leave
lods
add
sbb
sbb
shlb
jl
jo
flds
in
xor
xor
int
cmc
mov
aas
repnz
sbb
dec
dec
stos
frstor
pop
imul
pop
push
xlat
jns
in
fcomps
and
push
jne
scas
cmc
push
hlt
mov
jbe
cli
xlat
add
sbb
or
xchg
in
sahf
pop
pop
shrl
das
inc
hlt
fildl
add
mov
cmpb
dec
xor
call
loop
mov
insb
jb
inc
leave
push
xchg
out
mov
xor
and
mov
out
cli
or
mov
jnp
pusha
pushl
cwtl
mov
xchg
inc
pusha
sti
dec
xchg
insl
xchg
ret
xchg
imul
andl
imul
int
push
pushf
jnp
scas
xor
subl
sub
jns
sbb
fcmovu
push
mov
push
mov
mov
cmp
cs
or
enter
push
mov
mov
jno
in
push
cmp
push
leave
jmp
leave
mov
imul
xlat
fcmovnu
ret
add
mov
sbb
lret
ss
mov
pop
mov
sub
or
jnp
andb
or
repnz
sub
fsubr
shrl
addl
fdivrs
aas
dec
pusha
outsl
cmp
mov
pusha
xchg
dec
lret
inc
add
mov
or
aam
xor
xchg
pushf
or
sbbb
outsb
pusha
sahf
cmc
lods
mov
jle
cmp
sub
repnz
fcomip
inc
shrb
mov
mov
sbbb
cmp
push
into
lods
in
or
insb
mov
mov
ljmp
jl
cmp
inc
mov
movsb
push
repnz
mov
jb
dec
jo
movsl
mov
stc
pop
mov
xor
and
addl
out
push
ljmp
dec
leave
push
vmovsldup
jecxz
xchg
push
xor
push
ja
stos
adc
pop
mov
push
xchg
scas
mov
fisttps
pop
push
dec
out
xchg
pop
push
jg
xor
mov
hlt
addb
dec
movl
cmp
mov
sub
jle
xchg
loope
push
sbb
test
das
cwtl
sub
push
hlt
push
loopne
mov
mov
xchg
and
adc
or
icebp
dec
lock
js
je
movsb
dec
push
mov
repnz
xrelease
fstpt
leave
call
jb
xor
xor
inc
test
out
pop
repnz
lcall
jmp
insb
std
jae
aaa
lcall
std
inc
sub
adc
mov
cli
ja
xor
mov
out
out
lods
adcb
and
mov
test
out
add
shl
sbb
rcrl
lret
lss
push
xor
rorl
pop
xor
inc
jge
outsl
in
adc
lods
mov
pop
icebp
pop
cmpsl
roll
add
stos
mov
pop
enter
and
in
xchg
stos
push
pop
pop
les
cmp
inc
iret
sub
cs
dec
cmc
adcl
xchg
imul
popl
je
inc
mov
mov
pusha
jge
jno
sbb
jle
adc
mov
ja
cwtl
dec
sub
or
dec
fdivrs
orb
jg
xor
xchg
adc
push
rcll
test
sub
sub
add
dec
imul
and
and
lea
fwait
and
divl
xchg
mov
cmpb
mov
dec
cmpsb
or
dec
xor
dec
and
je
pop
push
cltd
in
je
lods
xor
scas
cmp
xchg
clc
mov
xchg
out
ret
imul
jb
int3
jle
sahf
mov
sbb
dec
leave
mov
sbb
orb
xor
dec
push
mov
ficompl
call
pusha
mov
pop
push
mov
ss
inc
push
xor
sub
fwait
xchg
xchg
daa
xor
xchg
pop
and
jbe
loop
xchg
pop
fnstcw
mov
push
pushf
das
cmp
inc
popf
sub
hlt
fsubs
stc
out
adc
xor
outsb
jbe
out
mov
mov
cmpsl
and
in
sbb
jmp
push
popa
sbb
pop
xor
mov
mov
jecxz
mov
cs
jbe
cltd
xlat
in
pop
dec
lret
jb
pop
ret
and
std
mov
stc
dec
cmp
cwtl
jnp
xor
jnp
ss
in
or
xchg
movsb
inc
xchg
lods
jmp
cmp
add
add
out
test
jp
push
pop
ljmp
dec
cmc
jo
sbb
push
je
sub
fsubl
test
adc
test
cs
shll
jmp
adc
cmpsb
pop
xchg
fnstcw
outsb
lahf
out
push
lea
mov
mov
sub
adc
sub
sbb
inc
jns
test
int3
jmp
add
gs
lcall
push
push
es
lds
jb
mov
lahf
lcall
in
dec
dec
icebp
pusha
mov
mov
lret
xor
push
ss
mov
fldln2
iret
out
cltd
mov
roll
and
popa
push
pusha
cmp
cltd
jmp
lret
lea
adc
add
mov
inc
add
jge
mov
jmp
out
xor
test
sahf
out
adc
lahf
and
or
daa
fidivrl
or
mov
pusha
data16
xor
inc
push
mov
imul
mov
cltd
pop
int3
mov
pop
mov
cmp
aam
sub
pop
mov
push
aas
fimuls
pop
xor
enter
mov
insb
mov
inc
pop
enter
fwait
and
xchg
daa
cmpsl
xchg
rorl
int3
mov
adc
rcr
cmp
test
loope
push
push
cs
xchg
cmpsb
je
ret
int3
mov
jbe
or
fadds
scas
pop
xchg
clc
and
inc
adc
out
out
call
lock
mov
enter
pop
fmull
xchg
fsubl
xor
cmc
mov
cmpl
push
lret
and
test
cmpsb
pop
sub
and
mov
push
ret
pop
xchg
or
or
stos
ss
adc
sub
lcall
jbe
popa
stos
je
sbb
fiadds
jle
aam
cmp
adc
xchg
arpl
xor
fimuls
in
cmpsl
sub
in
mov
cld
add
xor
mov
imul
adc
mov
sbbb
jge
mov
jns
sbb
push
jno
jle
daa
mov
adc
mov
dec
in
fisubrs
sbb
icebp
xor
jne
jge
or
cmpsl
push
repnz
cmpl
mov
fldcw
fyl2xp1
adc
pop
push
push
and
lret
dec
adc
clc
lds
cmpsl
dec
aas
imul
fcmovb
outsb
fdivr
mov
xlat
push
mov
movsb
adc
leave
orb
outsl
addb
leave
cmp
adc
add
fs
sub
outsb
aaa
push
push
push
jmp
xor
fwait
imul
fiadds
adc
sbb
mov
push
dec
cli
dec
cwtl
cmc
cmp
ret
lods
fwait
pop
in
push
add
push
cmpb
je
push
push
mov
popf
arpl
pop
jecxz
arpl
sbb
lds
jl
iret
mov
testb
es
ja
lcall
push
repz
push
movl
adc
and
mov
sub
mov
sbb
mov
dec
sbb
jecxz
or
inc
fbld
mov
cli
push
xor
pop
xchg
incl
loopne
mov
sbb
movsl
sbb
cmp
popa
iret
xchg
mov
inc
lods
sbb
mov
xor
hlt
sbb
sub
aam
push
int3
xchg
arpl
add
push
imul
lret
mov
add
arpl
and
cmp
xchg
add
mov
lret
push
add
adc
xor
pop
arpl
fwait
sub
fwait
out
outsb
mov
sub
cmpsb
mov
in
loop
out
data16
and
pop
movsl
inc
jmp
inc
in
ja
mov
xor
and
inc
inc
test
shlb
rcrl
add
fcmovb
push
arpl
push
pop
cltd
sub
sub
mov
sbb
inc
lret
push
or
pop
sbb
mov
adcb
sarb
mov
mov
dec
lcall
loope
adc
add
std
decb
adc
ljmp
aas
test
lods
ljmp
test
pop
fcmovnbe
lahf
jmp
xor
fcmovne
or
mov
add
mov
xchg
aam
or
mov
fldenv
sbb
add
and
inc
xor
sbb
or
mov
repnz
push
adc
xor
int3
aam
stos
pushf
mov
and
or
daa
orl
cmpb
xchg
and
fwait
adcb
test
pop
test
in
jp
mov
ret
sbb
jo
mov
out
and
outsl
movsl
cltd
sub
pop
in
inc
pop
lahf
and
mov
leave
xlat
mov
sbb
and
stc
inc
fisttps
push
and
cld
std
shr
sub
dec
jle
adc
js
div
adc
imul
pop
stc
push
pop
in
imul
test
mov
loopne
push
stc
jnp
mov
mov
cld
xchg
xor
fmuls
call
cli
pop
sub
lods
add
cmp
sar
mov
sbb
xchg
je
insb
sub
cmp
fs
dec
and
jnp
stc
lea
pop
int
push
jmp
lret
mov
xor
xor
mov
sahf
sub
push
adc
mov
xor
mov
lods
fistpll
adc
mov
int
mov
rcl
repnz
xchg
inc
mov
out
call
xorb
sbb
aam
aaa
scas
jmp
mov
mov
test
call
jns
cmp
cs
jmp
pop
aam
pop
sub
cwtl
push
jl
enter
jl
daa
cmpsl
add
pop
adc
arpl
or
push
inc
mov
fmuls
out
xor
adc
jae
or
test
xchg
pushf
add
adc
adc
in
lcall
js
stc
dec
insb
cmp
scas
fisttpl
addr16
bound
test
mov
int
lret
ds
push
sbb
push
mov
xor
dec
mov
mov
cwtl
cmp
pop
js
test
xchg
fisttpll
lods
push
cmc
lods
inc
test
aaa
out
das
jecxz
xchg
cmp
fisubl
push
mov
xor
inc
cmc
fdivrl
or
stos
jg
outsl
sub
rolb
sub
xorb
cmp
jge
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
rep
test
aam
jp
sbb
jp
pushf
ret
shr
or
jg
or
cld
in
or
add
std
pop
mov
xor
cs
dec
lods
mov
sbb
not
fbstp
mov
push
jecxz
push
xor
dec
cmp
out
out
mov
pop
cli
push
mov
mull
xchg
jb
mov
gs
pusha
or
sar
lds
addr16
aaa
hlt
fidivrs
adcl
jp
xchg
enter
and
pop
ffreep
sub
fstl
das
adc
sub
sub
mov
mov
mov
mov
loope
testb
xchg
push
xchg
inc
adc
cmpsb
pop
adc
jmp
mov
dec
sbb
inc
jmp
sbb
inc
dec
scas
xchg
out
mov
fsubr
faddl
mov
cwtl
fs
mov
jle
xchg
jae
fwait
sbb
loopne
dec
addr16
or
aas
imul
in
dec
mov
hlt
mov
loopne
and
fadds
pop
dec
aas
jmp
cmp
sar
pop
sahf
insb
fs
push
mov
fucom
dec
roll
xor
daa
insl
inc
cli
lcall
push
test
out
jo
bound
lods
ret
jo
scas
pop
pop
jnp
push
inc
or
movsb
mov
jnp
icebp
ja
jge
jge
lds
cmp
loope
popf
pop
adc
sub
ffree
add
or
sti
movsb
sub
imul
push
pusha
sub
stos
rcl
xlat
cltd
dec
xor
inc
movsl
sub
fildl
add
rcrl
cmp
insb
sub
cmpsb
xlat
sti
add
mov
inc
aas
add
cmp
sbb
mov
loope
ja
mov
lds
repz
xor
push
ret
adc
movsb
or
mov
out
mov
sub
clc
jnp
adc
out
mov
stc
pushf
mov
sbb
int
or
jecxz
aam
bnd
dec
cmp
jmp
lods
xor
imul
jo
mov
int3
scas
data16
add
in
pop
outsl
out
and
adc
xchg
pop
sub
cwtl
stc
push
shrl
pop
fdivrl
das
sub
out
popa
push
sbb
push
and
test
jae
inc
shlb
and
fisubrl
iret
sbb
repnz
push
pop
mov
pop
aam
jno
or
imul
or
mov
mov
mov
jns
call
add
push
cmpsl
das
call
loope
mov
loopne
push
mov
movsl
sbbl
mov
sub
pushf
xlat
ljmp
cwtl
outsl
xchg
push
pop
arpl
movsl
and
mov
push
mov
aam
out
or
push
mov
push
xchg
scas
aam
push
or
or
fldcw
loope
js
stc
addr16
pop
mov
pop
push
int3
loope
dec
push
cli
mov
ret
xchg
das
dec
mov
sbb
mov
xchg
xor
mov
xchg
push
aam
mov
jae
les
mov
and
mov
jmp
ret
adc
mov
pop
lcall
sbb
xchg
jns
lods
pop
jge
cwtl
cmpsl
inc
fistps
cmpsb
jmp
xchg
ljmp
popf
inc
mov
movl
mov
pop
sahf
mov
add
lea
lea
xchg
cmp
xchg
mov
inc
sbb
cmp
ror
jae
mov
and
jbe
cmpsb
pop
shll
pop
lahf
aaa
out
daa
pop
outsl
add
daa
xor
mov
add
cltd
mov
and
push
push
enter
pusha
inc
fst
mov
sbb
fcoms
mov
cmc
stos
mov
popf
add
mov
sti
mov
xor
jns
ds
dec
cltd
rolb
je
enter
and
out
imul
loop
adc
mov
std
jnp
fidivs
pop
stos
iret
daa
rcrb
mov
adc
ljmp
jae
push
pop
mov
sbb
jecxz
outsb
jno
push
jge
and
sbb
jecxz
lret
mov
pop
aaa
push
add
into
sahf
std
push
dec
jl
clc
scas
inc
mov
cmp
gs
in
xchg
aas
addl
subl
jae
test
xchg
fisttpl
cli
mov
nop
or
pop
in
or
xlat
outsl
jge
fmul
fildl
push
sub
imul
mov
test
xchg
cmpsl
aam
ljmp
inc
mov
shll
xor
dec
mov
xor
repz
pop
pop
sbb
cmpsl
jecxz
mov
int3
stc
xor
push
ds
pop
insb
les
xchg
sbb
pusha
lea
push
mov
xchg
cmp
or
test
lock
inc
mov
repz
dec
scas
lret
xchg
cli
push
shll
add
aaa
lods
aam
jb
or
adc
pop
jge
fidivrl
and
pusha
testb
cmp
adc
xchg
shll
movsb
ds
jp
sbb
sub
dec
mov
cmc
movsb
lcall
xlat
imul
jb
xchg
out
scas
cmpsl
fstl
sbb
fiadds
pop
aad
rol
scas
roll
jae
inc
int3
jmp
daa
into
out
jge
fs
test
mov
dec
cmp
imul
sub
stos
sbb
sbb
popa
mov
sbb
jle
mov
jns,pt
fsubrl
ds
dec
jg
jnp
call
imul
repnz
add
fistpl
and
aad
add
or
mov
or
sbb
pop
push
ret
mov
inc
mov
popa
movsl
xchg
mov
jmp
add
mov
xor
adcl
fsubs
idivl
or
inc
lret
push
rorb
test
mov
jge
jo
lahf
pop
xor
adc
aad
je
int3
push
xchg
ret
sarl
or
not
pop
and
clc
fwait
scas
imul
aad
sbb
jp
pop
cmp
je
jge
add
xor
ret
lcall
pushf
popa
fxch
rol
outsb
jae
nop
mov
ds
dec
movsb
dec
fstl
cmp
leave
aas
mov
imul
sarb
int
sahf
xchg
outsl
sbb
pop
clc
or
arpl
dec
cmpsb
push
jns
popf
loope
adc
sbb
mov
mov
mov
sbb
lahf
data16
repnz
inc
cmp
xchg
testb
int
test
enter
sbb
arpl
pop
ljmp
aaa
stos
call
jbe
sbbl
pop
cli
cltd
sub
xchg
out
pop
sub
es
inc
in
data16
xchg
in
ret
cmp
sbb
push
adc
mov
cs
in
jns
lods
push
push
outsb
or
aaa
mov
lret
and
test
mov
add
inc
xchg
shl
mov
es
mov
mov
jle
dec
jbe
test
push
lahf
add
inc
insb
adc
mov
mov
cmp
pop
bound
mov
sti
mov
lods
jbe
jno
in
imul
jmp
addr16
add
arpl
xor
ds
testb
cmp
pop
jo
add
inc
and
push
and
jge
adc
aaa
lahf
imul
imul
add
enter
sarb
lods
xor
pop
and
out
jbe
xchg
jb
add
jbe
imul
and
dec
lret
aas
and
and
jae
lret
shrl
pop
into
xor
sbb
pop
and
or
loop
xchg
inc
pop
lcall
lds
loope
imull
mov
pop
or
xlat
push
js
filds
xchg
out
jnp
movsb
aam
lods
hlt
movsb
push
push
lods
aas
cmpsl
pushf
je
mov
dec
mov
lahf
sti
cltd
mov
data16
mov
sbb
cmp
repz
xchg
les
inc
xor
ret
jne
fs
negb
inc
push
dec
cmp
cmp
cmp
xor
shr
lcall
pop
xor
push
pop
test
inc
clc
jp
std
jmp
pushf
ret
adc
fdivr
and
stos
and
cmc
sbb
andl
jg
pop
negb
lock
sbb
mov
int
or
inc
in
pop
out
jle
int
sub
loope
fstpt
repz
popf
adc
xchg
jae
adc
sub
pop
xchg
lcall
divl
int3
sbb
jns
xor
push
mov
cmp
cwtl
jae
das
es
push
xor
out
adc
lret
inc
aad
std
in
daa
push
xchg
mov
mov
scas
push
add
xchg
sbb
nop
popa
ss
pop
es
lret
fcomp
fcomps
mov
cs
stc
jp
mov
iret
add
and
push
addr16
call
adc
mov
gs
cmp
in
jmp
push
mov
insl
or
or
lret
test
pop
insl
jg
mov
aas
out
lahf
push
dec
mov
xor
rorb
cmp
push
sti
bnd
imul
cld
imul
rorl
or
in
loop
mov
pop
incl
xchg
mov
je
xor
imul
nop
xchg
imul
sub
push
pop
testl
xchg
mov
repz
mov
cmpb
sbb
dec
dec
repz
int
icebp
sub
aaa
jp
cmc
outsb
cmp
stc
inc
dec
shl
test
lock
mov
ret
fisttpl
mov
adc
sub
add
cltd
nop
outsl
lods
xlat
adc
inc
mov
out
lahf
int
jo
xchg
mov
pop
adc
es
dec
xor
jl
dec
das
mov
sbb
scas
jmp
mov
push
adc
sub
jno
dec
mov
popa
sbb
inc
pop
hlt
popf
mul
push
cs
movsl
mov
mov
cltd
sub
loope
push
pop
dec
push
bound
adc
sub
push
fbld
rcr
or
jl
repnz
ja
jmp
enter
je
lods
sbb
addl
mov
push
test
mov
lea
pop
pop
mov
sub
push
xor
or
imulb
or
std
fwait
mov
insb
outsl
lea
jb
loopne
xchg
sahf
imulb
shll
cmpsb
enter
rcrb
lods
push
adc
mov
pop
xlat
fbstp
stc
cltd
adc
jne
and
movl
push
or
int3
enter
cltd
cmp
pop
and
iret
cmp
pop
mov
rcr
and
pushf
shrl
cmc
mov
fldt
lret
adc
lcall
mov
insb
lock
lahf
lret
in
fnstenv
aaa
dec
inc
mov
add
sub
xchg
out
in
fsts
repz
inc
pop
xchg
in
nop
pop
inc
cmp
mov
push
inc
mov
pop
shrb
lret
sub
in
fimuls
push
add
mov
mov
xchg
mov
aam
adc
ret
jmp
pop
cmpsl
xchg
jg
sub
mov
mov
pop
xchg
shrw
cmp
push
dec
sbb
pop
sbb
sahf
dec
cmp
mov
mov
jp
cmpsl
shrl
inc
xor
jnp
jb
push
inc
adc
push
cmp
xchg
xchg
movsb
mov
addr16
daa
or
ds
and
adc
mov
sbb
in
jbe
sub
push
lods
inc
jle
cltd
in
pop
mov
lret
imul
daa
int3
aad
inc
xchg
inc
inc
mov
mov
xchg
dec
cmp
sbb
enter
xor
into
mull
lcallw
push
mov
stos
fadds
or
and
add
shrb
mov
iret
add
jne
rcrl
cmp
pop
or
pop
jbe
or
mov
repz
test
mov
push
or
inc
ss
dec
xchg
movsl
add
push
sub
cltd
idivl
loopne
rcll
pop
push
stos
mov
mov
sbb
mov
mov
outsb
ds
push
in
ret
inc
lcall
xchg
je
cltd
inc
fsubs
sub
mov
jge
dec
cmpsl
xchg
pop
les
and
out
xchg
imul
int3
push
jb
sub
sbb
das
dec
pushl
sbb
jge
adc
xchg
inc
jbe
fs
mov
clc
inc
cmp
mull
inc
cmp
pusha
jl
sub
ds
ds
or
sarl
shll
lods
ds
push
data16
int3
pop
cld
test
arpl
shl
xchg
mov
pushf
xchg
adc
sub
lret
pop
add
jns
negb
pushf
ds
or
mov
fildll
rolb
js
inc
lcall
stos
stos
out
dec
aaa
mov
adc
mov
push
and
mov
outsb
std
dec
mov
adc
cmp
sub
lds
out
jno
push
popa
jl
and
test
repz
cs
shl
ret
push
stc
fisttps
fidivs
push
sbb
daa
mov
js
xlat
ss
es
loop
mov
and
les
xor
pop
sti
outsl
mov
ljmp
sbb
jp
mov
or
loop
loopne
insl
mov
jmp
cmpl
aam
pop
fdivrs
test
cmpsl
sbbb
pop
pop
adc
loope
and
scas
add
loope
fildll
dec
jbe
shrb
mov
sub
arpl
std
cltd
and
ret
xor
xchg
sbb
push
out
popl
mov
lods
pop
or
psubd
cmc
pop
dec
jl
fdivr
addr16
and
push
and
pop
imul
xchg
inc
sub
sbb
lods
xor
in
imul
lcall
lea
push
test
cli
pop
ss
fwait
imul
rorb
fwait
add
pop
enter
dec
call
and
mov
or
pop
push
or
lret
lcall
mov
lea
in
xchg
cmc
jae
xor
lret
pop
jmp
rorl
aad
pusha
je
int
aaa
add
push
lret
loop
int3
pop
bound
aaa
scas
and
je
inc
cld
in
outsl
push
mov
dec
xchg
fwait
push
enter
decb
push
sar
daa
xor
cltd
jne
jge
call
pusha
xchg
stos
jmp
mov
cmp
mov
inc
clc
in
in
out
jbe
mov
cmp
ret
outsl
test
adc
xchg
xor
push
adc
inc
testl
data16
ss
adc
arpl
xchg
fnstsw
adc
sbb
mov
icebp
xor
outsb
outsl
mov
mov
negl
push
stos
nop
cmp
mov
in
xor
out
mov
out
inc
push
cmpxchg
jo
or
stos
add
aad
mov
movsl
pop
ss
mov
and
pushf
inc
imul
call
cmpsl
or
ret
scas
push
shlb
pop
cmc
jg
pop
jmp
scas
cltd
imul
add
nop
test
jg
mov
in
inc
add
xor
sub
loope
out
xor
push
pop
mov
xchg
ds
inc
rcr
adc
je
aaa
mov
pop
stos
enter
pop
sub
push
mov
xor
pop
lahf
sub
addr16
pop
pop
icebp
mov
mov
add
adc
mov
pop
or
daa
inc
loop
inc
cld
cmp
mov
fnstcw
sub
insb
cli
xchg
push
push
idivl
je
jbe
cmp
add
out
and
add
fbstp
or
sbbl
je
pusha
mov
subl
clc
push
clc
or
cmpsl
fcmovnb
push
mov
adc
sbb
and
push
fwait
jmp
adc
ret
jb,pn
mov
das
sub
xor
push
std
faddl
mov
and
jb
daa
out
cwtl
push
lods
setp
lea
sar
mov
out
pop
dec
int3
lret
jno
mov
shr
cmp
jnp
sbb
pop
add
mov
repnz
sahf
in
xor
sub
cmp
mov
in
movsb
dec
inc
jg
cmp
mov
jnp
subb
ss
jg
loope
pop
ja
rclb
cwtl
test
xchg
add
sbb
and
icebp
rorl
out
sub
pop
ret
bound
pop
cld
mov
jbe
pushf
loopne
arpl
xchg
out
aam
sub
xor
cs
aas
loop
dec
in
lods
jns
jne
xor
push
fs
xchg
ja
insb
mov
jnp
xchg
stos
dec
inc
xor
mov
dec
sbb
jae
mov
push
mov
insb
out
sub
adc
fstpt
push
sub
pop
xor
add
push
and
xchg
bnd
fisttpl
cmp
push
add
cmpsl
pushf
jecxz
pop
add
aaa
test
mov
loopne
icebp
adc
popa
push
adc
cli
mov
aaa
jbe
cmc
xchg
ds
mov
jae
outsb
mov
xchg
push
outsl
xchg
or
faddl
adcl
scas
xchg
rcll
sahf
jne
or
sub
sbb
or
test
add
shrb
sarl
mov
ja
sub
adc
movsb
xor
icebp
rorl
loop
ret
sub
cltd
fcompl
std
insb
fadd
or
xchg
repz
insb
and
xchg
push
je
data16
mov
and
cmpsl
push
paddsb
in
sahf
js
or
jae
dec
or
jns
mov
fs
enter
pop
stc
stc
rorl
and
adc
adc
adc
jns
mov
mov
jle
mov
cmp
outsl
mov
repnz
mov
call
andl
push
xchg
std
push
mov
xorb
sub
out
push
xor
inc
push
mov
cmp
test
push
mov
stos
cmp
fmul
movsb
mov
sbb
int
pmaxub
inc
negl
fdivrs
imul
jbe
cli
fs
hlt
mov
jae
xor
mov
sub
mov
pop
scas
cmp
mov
xchg
stos
cwtl
pop
sbb
pop
mov
or
sbb
iret
and
test
scas
fstpt
call
xchg
pop
addr16
and
fsts
mov
mov
aas
push
xor
pop
insb
mov
add
and
loopne
repz
fsts
mov
movsl
ljmp
pop
pop
sahf
outsl
adc
ljmp
ret
and
push
jecxz
out
cltd
mov
imul
cmp
test
das
xchg
rolb
lods
jle
mov
dec
cs
mov
int
imul
iret
mov
push
lods
das
jge
insl
and
imul
hlt
cmp
adc
mov
push
ljmp
adc
inc
hlt
test
jbe
xor
pop
test
inc
or
inc
pop
dec
in
dec
push
testl
out
push
fistpl
imul
scas
sti
push
rdpmc
xchg
and
lds
lahf
or
push
es
mov
inc
xchg
xchg
mov
push
movsl
adc
je
pop
mov
inc
push
pop
sbbl
aas
iret
stos
mov
loope
stc
ja
sub
shlb
sbb
int3
pop
leave
scas
jge
sub
jecxz
jp
leave
lods
mov
mov
mov
cld
gs
push
gs
inc
xchg
lds
sub
push
rcrb
jne
movsl
xchg
cli
sbb
test
sub
dec
pop
xchg
mov
adc
gs
popf
addr16
lock
daa
sti
adcl
inc
movsb
jb
clc
push
pop
inc
ja
push
inc
xor
insb
inc
frstor
stos
mov
add
jno
push
inc
pop
cmp
mov
scas
and
inc
mov
movsb
daa
mov
adc
push
pushf
lods
ljmp
daa
and
shlb
sbb
add
mov
sub
mov
push
cwtl
and
adc
stos
addr16
sub
ja
ja
hlt
leave
ljmp
push
push
push
rolb
pop
and
or
and
xchg
pop
sub
mov
mov
js
xchg
add
scas
sbb
mov
sbb
jmp
mov
xor
repz
lret
loopne
sub
stos
insl
xor
mov
movsb
pusha
add
gs
xchg
inc
out
dec
inc
fisttps
and
xchg
push
push
cld
loopne
ret
inc
pop
and
mov
and
add
fsubrl
jge
lahf
pop
or
stos
jo
out
inc
icebp
mov
cli
mov
sti
mov
iret
or
bound
mov
aad
arpl
in
les
push
cmp
mov
in
mov
push
xchg
cmp
loope
std
movsb
ficompl
jg
notb
sub
mov
push
cli
mov
test
mov
adc
mov
jns
repz
test
inc
mov
pop
in
jle
shrb
out
sbb
stc
out
xchg
imul
and
es
cmp
mov
adc
lahf
stos
pop
outsl
dec
inc
imul
je
int3
ja
jle
and
push
mov
hlt
jle
mov
mov
sub
sub
mov
int
inc
idivb
ss
and
lds
rcll
in
push
xlat
jnp
or
pop
or
shll
xchg
xchg
fiadds
notl
mov
xor
out
xchg
leave
lods
xchg
shrb
xchg
in
addr16
lahf
pop
fucomi
loope
arpl
ret
lods
hlt
jmp
or
add
cmp
fs
xchg
mov
aaa
jae
sbbl
inc
jmp
ss
aam
pop
adc
push
xchg
jp
shlb
mov
lock
daa
mov
lods
jo
shl
cmp
sti
out
inc
cmp
and
jne
enter
mov
fsubrs
cmp
pop
test
call
cmpsl
add
fldl
repnz
loopne
cmp
loop
pop
xlat
shlb
rcrb
inc
jb
sbb
int
std
shr
inc
mov
out
mov
xor
shlb
jnp
shr
stc
jne
inc
add
sbb
inc
dec
mov
scas
push
leave
pop
insb
adc
insl
dec
xchg
repz
inc
push
inc
popf
cmpl
and
imul
icebp
in
movsb
out
orl
out
mov
call
iret
jno
aaa
dec
sbb
outsb
jnp
or
dec
std
push
stos
addr16
pop
or
scas
stos
fistps
pusha
into
sbb
das
mov
pop
adc
and
popa
in
insl
jo
lods
dec
jo
adc
imul
push
mov
decl
bound
push
cmpsl
jno
mov
or
cmp
repz
jbe
pop
and
popf
nop
mov
sbb
mov
leave
in
cmp
xorb
decb
sbb
popa
sarl
shlb
sub
and
idivb
popa
adc
mov
daa
out
and
stos
mov
add
jae
fidivl
xchg
jp
pop
iret
idivl
sbb
jne
call
shll
icebp
add
dec
test
in
in
mov
push
adc
mov
mov
and
shrb
lret
inc
test
pop
push
addr16
fisubrl
dec
lret
mov
clc
mov
dec
xchg
ljmp
dec
dec
add
sub
jns
mov
xchg
fmull
jecxz
xor
xchg
mov
int
jnp
lret
out
orl
int3
in
call
push
lea
mov
mov
push
jb
and
cmp
push
mov
sbb
rcrl
adc
mov
test
call
jle
out
lret
sbbb
adc
pop
lret
push
and
out
jge
xchg
stos
push
or
out
cmp
lcall
gs
cmp
int3
addr16
aam
sbb
push
sub
test
mov
sbb
std
call
clc
mov
jg
cmp
inc
and
cmp
cmpsl
scas
xchg
or
jl
inc
sbb
sub
push
stc
jg
xor
sbb
lods
push
fldl
fisttps
stc
or
mov
icebp
xchg
or
fs
repnz
aas
inc
push
jmp
mov
mov
arpl
popl
jae
cmc
aam
or
loope
xchg
lret
std
dec
pop
xchg
sub
das
xchg
rclb
pop
sti
pusha
dec
mov
mov
or
mov
js
stc
or
and
mov
mov
outsl
lods
and
sbb
and
or
mov
enter
sti
or
or
sbb
cmp
rcll
cmp
js
push
cwtl
jne
xchg
outsb
testl
out
add
mov
ljmp
xor
out
shl
push
and
sbb
dec
testl
cmp
sub
pushf
ja
in
lcall
jns
arpl
mov
es
push
scas
dec
imul
dec
jmp
mov
jbe
fistl
pop
in
sub
sub
bound
push
sbb
adc
mov
or
ss
cmpl
xchg
xchg
and
cmp
push
cli
push
inc
sbb
xor
pop
xchg
jecxz
mov
mov
dec
xlat
in
jg
mov
mov
push
adc
insb
out
rcrb
lcall
jge
mov
out
loope
mov
xorb
lods
inc
add
pop
xchg
rcrl
stc
movsl
add
push
pop
inc
push
or
jmp
jmp
stos
aad
push
call
mov
adc
inc
pusha
in
and
je
mov
out
sub
fsubs
mov
sbbb
fdiv
lods
clc
push
ret
mov
push
movsb
out
inc
int
or
shlb
mov
lock
loop
pop
xchg
les
test
dec
dec
movb
mov
rorb
lock
das
std
ss
out
out
inc
lahf
mov
lea
lods
jmp
fwait
addr16
adc
rolb
pop
sub
inc
inc
andb
out
mov
mov
add
insl
or
dec
xchg
xor
mov
push
mov
sbb
sar
adc
inc
fs
mov
hlt
mov
fildll
sahf
push
scas
jg
cmp
packuswb
scas
cmp
dec
scas
ds
in
fnstenv
test
sub
sub
or
fwait
mov
cld
mov
sub
popa
mov
scas
mov
and
dec
jnp
ret
sbb
icebp
xchg
add
sbb
data16
shrb
adc
dec
out
data16
mov
leave
cmp
in
xlat
dec
xchg
xor
mov
sub
pusha
les
dec
fisubrs
fstpt
push
loop
fldt
js
loope
enter
orb
shlb
or
push
and
rcrb
sahf
fistps
push
or
mov
jne
lret
sbb
mov
sahf
outsb
xor
test
push
push
es
cmp
fs
call
jecxz
sar
outsl
jle
test
int
cmp
lahf
xor
add
je
adc
xchg
pop
sbb
adc
test
jge
dec
ja
cld
test
mov
and
cmp
inc
push
add
push
adc
iret
rclb
mov
aaa
jno
es
sbb
insb
outsb
inc
das
sub
pop
sbb
mov
sti
pop
test
mov
or
mov
push
dec
push
mov
add
sbb
popa
test
outsl
mov
and
mov
xor
andl
mov
ljmp
pop
dec
nop
add
mov
add
push
call
in
dec
pop
add
outsb
fdivs
scas
out
jno
adc
repz
int3
add
dec
adc
loopne
pop
mov
mull
or
dec
lea
sbb
mov
test
mov
lea
pop
inc
mov
je
jae
sbb
cmpsl
adc
pop
sbb
jb
popf
inc
or
in
xchg
push
addr16
pop
iret
outsl
rorb
sbb
cmp
and
leave
mov
push
out
or
sarl
ret
inc
clc
jle
pop
xor
fistl
mov
cmp
sub
stos
jne
push
out
mov
lea
cmc
aad
movsb
mov
fildll
daa
nop
sti
orps
addr16
cmpsb
mov
or
jb
jne
in
mov
lea
out
and
and
mov
inc
xchg
xchg
and
and
inc
mov
mov
cs
sub
in
aad
nop
imul
pop
ret
add
mov
push
ret
iret
into
sbb
mov
js
or
mov
loop
jmp
mov
push
and
xorl
cwtl
mov
mov
inc
mov
popf
imul
adc
inc
popf
pop
filds
push
push
cwtl
pop
js
jp
mov
out
cmp
cld
mov
cld
xchg
mov
dec
shlb
aad
mov
pop
and
test
xchg
jle
fistl
xchg
mov
mov
inc
inc
sbb
lret
jb
loopne
fcomps
xor
jle
mov
out
cltd
ss
sub
sub
inc
clc
popf
cmc
out
roll
lea
jnp
push
imul
arpl
push
ss
loope
dec
ret
xchg
fcoml
sub
cvttps2pi
popa
fcomp
fdivrs
and
out
adcb
add
sub
inc
das
hlt
or
mov
cli
cli
jbe
and
popf
pop
adc
pop
fbld
adc
jge
mov
mov
in
out
leave
popf
adc
imul
ficoms
mov
int3
out
lods
scas
add
pop
adc
and
lret
sub
pusha
sbb
mov
mov
ja
or
mov
jl
les
pop
inc
hlt
adc
inc
cs
fmul
sub
mov
aas
loope
xor
rol
out
scas
rolb
xchg
in
mov
fstpl
ja
inc
jo
inc
lahf
ficomps
mov
jp
sub
bound
push
lcall
mov
push
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
jecxz
jae
jp
sbb
jp
pop
dec
lahf
ljmp
pusha
repnz
lret
push
cli
popa
xchg
cltd
ljmp
test
inc
pop
inc
inc
mov
mov
jb
imul
adc
fwait
push
cwtl
mov
pop
or
dec
or
gs
stos
decl
or
inc
es
mov
inc
lock
bound
xchg
sub
bound
sub
mov
daa
out
lcall
push
sbb
mov
jo
notl
and
mov
aad
cmpsb
jo
fnstsw
xor
aaa
out
mov
xor
and
nop
pop
fsubl
pop
fbstp
inc
dec
pop
pop
insl
push
pop
push
je
sub
mov
out
lds
test
jne
mov
enter
insb
adc
iret
jae
push
jno
incb
lret
cmp
test
das
outsb
out
sbb
int3
les
and
push
inc
add
in
dec
inc
xor
sbb
shr
cmc
cld
mov
movsb
or
push
lret
jp
push
xchg
dec
inc
pusha
sti
fcomi
jno
fwait
je
divb
test
outsb
and
mov
out
test
loope
pop
pop
sbb
jo
cmc
adc
lahf
mov
fiaddl
lea
out
inc
add
repnz
test
pop
sbb
add
mov
sbb
inc
or
jno
mov
push
jne
jl
cmpb
scas
cmp
mov
cmpsl
pop
sahf
test
outsb
jmp
insl
mov
stc
out
lret
es
jno
mov
movsb
and
movsb
adc
out
add
push
sar
sbb
add
popa
popa
loope
aaa
mov
jg
imul
inc
sbb
mov
lods
sbb
inc
sbb
rclb
cs
push
jne
aaa
or
push
nop
sbb
in
stos
cmp
xlat
or
mov
outsl
rcl
scas
icebp
push
jae
xchg
mov
lods
mov
je
push
sub
mov
pop
cmp
add
adc
push
or
out
adc
pop
mov
or
dec
mov
cmpsl
xchg
xchg
push
dec
mov
sub
jge
aas
jp
xor
movsb
cmpsb
into
pop
imul
arpl
xchg
dec
pop
insb
or
rclb
in
jg
cmp
shr
test
rcll
and
push
xchg
aad
pushf
adc
sbb
mov
in
jle
jge
inc
out
sbb
mov
int3
insb
fmuls
aam
stc
cmp
ret
cmc
xchg
scas
or
mov
loop
adc
pop
jns
ja
xor
test
je
jecxz
shrb
fcmovb
cltd
dec
loopne
mov
push
sbb
test
sbb
decb
xchg
jmp
daa
fisttpl
pop
scas
subl
and
clc
jge
hlt
sbb
mov
sahf
addr16
shlb
subl
imul
and
mov
cwtl
inc
and
jnp
imul
sub
in
or
sub
aad
lahf
lods
icebp
dec
ficoml
cmp
and
push
fbld
lods
fldcw
push
sub
stc
add
xor
xor
loopne
mov
xor
inc
mov
call
cwtl
inc
out
push
cmp
or
push
outsl
push
cmpsl
or
cwtl
fcomps
mov
cmpsl
push
les
cmp
mov
rep
add
mov
or
add
je
sbb
dec
rcpps
sbb
rclb
mov
push
loope
cmc
pop
jns
or
cltd
test
sub
lahf
mov
mov
and
pop
sbb
sbb
mov
ret
mov
push
out
pop
add
xchg
std
or
dec
in
rorb
repnz
ret
and
test
jbe
adc
sub
inc
cmp
jp
xor
jnp
mov
aam
fisubs
addr16
stos
dec
stos
mov
jmp
fcompl
xchg
lods
xor
mov
loope
jbe
sarb
and
jl
test
sbb
or
cmp
sbb
mov
into
inc
sub
and
subb
pop
or
jbe
add
or
add
shr
push
adc
push
pop
jecxz
fimuls
shlb
aad
fldlg2
pop
and
xlat
imul
dec
xor
xchg
jne
js
dec
pop
movsb
sar
pop
xchg
pop
adc
aad
and
mov
loop
or
int3
idivb
ja
add
je
cmp
push
or
into
orb
dec
dec
mov
dec
add
fwait
and
aaa
adc
call
xor
or
adc
dec
ret
inc
adc
or
or
cld
popf
pop
mov
or
xchg
and
out
dec
mov
addr16
stos
arpl
sbb
dec
dec
pop
sub
imul
sub
insl
mov
sub
in
fs
inc
aad
mov
mov
push
mov
inc
scas
cwtl
cmpsb
inc
jge
jnp
sbb
dec
out
xor
jo
fimull
hlt
inc
inc
jno
inc
int3
imul
rorb
xchg
rcrl
cwtl
adc
push
loop
filds
inc
jne
inc
ds
outsb
xchg
loop
fcoml
cmpsl
adc
in
imul
shll
sub
mov
xchg
fisubl
jo
data16
pop
dec
xor
ja
std
in
add
dec
sbb
push
test
cli
loope
ret
mov
cmp
mov
lods
iret
cmp
mov
jle
jp
mov
add
jno
dec
notl
icebp
jb
lret
faddl
inc
or
xlat
dec
dec
push
inc
jg
lea
push
ret
clc
dec
cmpsl
imul
enter
out
pop
insl
inc
bound
insl
mov
lea
mov
je
adc
xchg
inc
lahf
push
stos
jnp
inc
out
cmp
adc
loope
shll
dec
or
xor
jp
ja
dec
or
mov
mov
insl
ss
cmc
pop
repz
mov
sbbl
movsl
int
mov
cld
jnp
out
pop
std
mov
and
pop
xchg
ret
ja
pop
imul
aaa
clc
mov
jb
jl
movsb
mov
jge
jecxz
mov
sub
push
test
mov
sub
mov
dec
xchg
cs
arpl
icebp
cmpb
out
into
adc
stos
cmp
fcmovb
popf
pop
test
pop
dec
and
pop
or
in
mov
inc
into
push
inc
jmp
enter
push
je
imul
mov
push
xchg
repz
loope
orb
xchg
fsubs
scas
fwait
xor
int
xchg
mov
inc
lods
outsl
outsb
sti
or
push
adc
push
les
adc
sbb
rclb
xchg
cltd
sarb
imul
test
sub
sub
loopne
jg
lcall
cmpsl
push
adcb
in
es
out
imul
push
jmp
insl
ret
inc
push
jle
or
or
xchg
pop
mov
ja
pop
xor
adc
cmpsb
pop
out
jne
push
pop
movsb
adc
fildl
sub
push
icebp
icebp
cmp
loop
push
xor
int
or
and
mov
push
es
adc
add
sti
jl
icebp
push
imul
jmp
push
fwait
push
mov
sbb
dec
push
adc
fwait
pop
cmp
fs
ljmp
clc
or
xor
jge
fcmovb
mov
test
stos
mov
std
mov
daa
xor
ss
pop
addb
push
inc
imul
xor
cmp
cmp
mov
aas
cs
hlt
push
sarb
lods
rcrl
jo
push
adc
lock
inc
sbbb
shrl
or
call
dec
fsts
dec
inc
std
push
in
and
sbb
cltd
movsb
xchg
dec
jae
jmp
lcall
les
jno
les
or
addr16
or
push
fimull
inc
jno
or
andb
push
adc
cmp
mov
test
mov
test
fnstsw
mov
sub
ret
sbb
leave
cld
mov
je
jo
out
pop
mov
es
sbb
mov
jae
paddq
and
fcmovnbe
xchg
psubusb
fcompl
pop
fbld
data16
in
xor
and
sti
push
ss
data16
sar
dec
xchg
or
push
cld
ss
hlt
loopne
movsl
and
fnstcw
inc
cmp
mov
lea
aaa
sbb
mov
imul
das
xor
out
adc
jmp
imul
outsl
push
jl
aas
test
incl
pop
popa
add
lcall
shrl
push
mov
daa
push
popa
pusha
add
mov
rorb
push
stos
cmp
push
orb
or
mov
or
mov
mov
sbb
ds
ds
pop
es
lahf
push
lds
push
jo
fsubrs
mov
stc
jge
and
cmpsb
pop
les
stos
lock
mov
mov
es
dec
ficoms
jmp
mov
mov
dec
rclb
in
push
lea
lret
das
dec
lret
les
mov
pop
popa
inc
lret
inc
test
insl
subb
lock
rorl
in
imul
mov
mov
mov
pop
sbb
fmulp
repz
adc
leave
xor
scas
xlat
xchg
push
arpl
mov
dec
pop
imul
push
pop
cs
out
sbb
iret
das
mov
es
add
jnp
test
cmpsl
adc
jbe
xlat
imul
aas
pushf
aam
jns
mov
mov
mov
mov
scas
mov
sub
xor
loope
mov
xchg
loopne
rcrl
or
loopne
or
mov
popa
adc
lods
fidivl
cld
cmp
in
dec
push
inc
push
ret
push
xchg
jnp
xorb
jbe
mov
xorb
imul
add
inc
addr16
int
mov
fstpl
sub
movsl
or
push
dec
into
sub
mov
stos
xchg
jo
iret
stc
fs
jg
push
nop
sub
xchg
testb
lret
inc
xor
mov
iret
insl
aad
iret
jge
outsl
gs
and
cmp
sbb
mov
lods
pop
inc
lret
ret
sbb
lds
push
aam
and
test
xlat
jmp
cltd
sbb
inc
dec
push
mov
das
pop
xor
xchg
insl
sub
jno
dec
mov
sbb
jmp
les
and
xor
out
jmp
jne
jns
mov
leave
xchg
es
mov
inc
adc
andl
je
or
aad
inc
push
cmc
dec
popf
push
in
jne
daa
and
pop
sbb
sbb
std
inc
mov
pusha
movsl
add
fidivrl
cmp
mov
fdivl
ja
sahf
mov
jge
xlat
outsl
mov
add
mov
adc
cld
das
xlat
mov
bound
jns
arpl
jnp
cmp
jg
xchg
sbb
mov
cs
sub
push
adc
fsubrs
icebp
std
scas
ljmp
jo
cmp
pop
mov
enter
mov
pop
add
lret
cmp
mov
sub
imul
fs
push
outsl
pop
mov
jg
cwtl
pop
mov
lods
xchg
pop
or
inc
movsb
pop
sub
mov
pop
ja
pop
sub
fcom
xchg
pop
jb
mov
push
lret
pop
push
push
dec
int
lea
push
sbb
rorl
xchg
imul
lcall
popf
divb
cmp
dec
cmp
hlt
daa
mov
cmp
std
jae
sub
das
lahf
xor
or
repnz
jbe
inc
imul
jge
bound
and
add
mov
jnp
int
push
mov
dec
mov
mov
add
fbld
sub
sbb
cmp
call
lcall
pop
push
stc
imul
xorb
addb
mov
push
je
jmp
mov
mov
scas
ffreep
enter
mov
mov
ds
hlt
int
ss
testl
dec
int
out
jb
bnd
fcoms
aam
cmp
or
in
mov
addb
push
cmp
xor
xlat
add
cmp
and
out
mov
outsl
roll
sub
pop
push
arpl
shl
mov
das
in
negw
in
xchg
xlat
sbb
outsl
mov
popf
xchg
js
jne
mov
sub
lods
push
int3
mov
in
mov
push
outsb
xor
xor
add
and
mov
ret
pop
je
mov
call
cmp
test
call
or
mov
cmp
or
shlb
cmpl
jl
ljmp
fistpll
sbb
xlat
out
jmp
jge
mov
jnp
pop
das
lret
arpl
sbb
mov
aad
jno
ja
and
or
pushf
mov
inc
adc
push
stos
pop
dec
dec
mov
pop
push
cmp
std
loopne
aam
mov
ret
mov
push
inc
insb
pushf
aaa
loopne
xchg
stos
mov
push
cld
testb
arpl
push
jae
jnp
xlat
rcrl
xor
and
fdivs
sar
add
sub
mov
add
aaa
cmpsl
int3
fsubl
loopne
add
push
xchg
pop
fs
push
xor
mov
cmpsb
out
fcomi
fdivrl
xor
stos
jl
scas
add
rorb
jp
hlt
dec
out
int
stc
xchg
adc
and
sarb
int3
test
data16
pop
inc
push
mov
idivl
push
sub
push
xor
mov
pop
inc
lcall
cwtl
ds
movlps
dec
ja
insl
call
pusha
insb
sbb
popf
pushf
pop
jne
and
or
jne
inc
mov
mov
mov
mov
sbb
push
push
icebp
roll
fidivrl
xlat
mov
inc
insl
ret
sub
mov
jae
outsl
mov
adc
lea
or
scas
xchg
jae
aas
add
push
movsl
orb
stos
sbb
cmp
cld
sti
testb
mov
xor
fildll
popa
les
les
test
xchg
shl
xor
sbb
adc
rol
aam
mov
insb
and
das
and
or
iret
les
push
mov
cmpsl
testb
lahf
arpl
loop
adc
push
addb
sti
add
jbe
clc
fwait
pop
pop
scas
movsl
mov
pop
cmp
mov
adc
out
movsl
jae
inc
mov
pop
cmc
inc
xchg
fistps
cmp
test
push
testl
jns
out
lea
and
or
imul
jecxz
inc
je
mov
mov
test
mov
cmpsl
je
mov
ljmp
jno
aad
add
std
roll
push
xor
fistl
notl
jns
enter
aas
xchg
push
fbld
out
negb
dec
push
mov
sbb
lahf
mov
shlb
jl
dec
xor
aas
adc
xchg
or
pusha
into
mov
or
test
xor
outsb
dec
ja
addb
cwtl
jbe
lea
lahf
in
shrl
push
mov
cmp
movsl
stc
and
dec
fnsave
out
mov
or
js
xchg
sub
mov
push
cwtl
js
je
mov
mov
lods
clc
ret
xacquire
out
test
pop
cwtl
testl
stos
or
test
jo
mov
jne
aad
and
scas
loope
jge
sub
jnp
dec
pop
daa
xor
je
xchg
pop
loop
notb
pop
iret
enter
cmp
push
sub
insb
gs
push
ret
pop
movsb
dec
lahf
cli
lcall
andb
gs
add
adc
lock
inc
mov
adcl
adc
out
mov
sub
sub
jp
xchg
fcomps
hlt
cwtl
leave
fs
je
rcrb
lock
lock
pop
div
cmc
pushw
fadds
dec
mov
fadds
lock
les
mov
arpl
leave
mov
jle
xor
mov
cmp
and
or
adc
mov
pop
dec
loopne
test
inc
pop
sub
xchg
pop
pusha
pop
out
dec
dec
or
sub
leave
stc
jecxz
movsl
or
add
xor
jo
add
cmp
lahf
pop
loopne
cltd
cmp
add
out
mov
les
xchg
mov
mov
push
mov
inc
aam
stc
push
fcmovne
jl
push
mov
mov
mov
cmc
popf
add
mov
mov
test
call
sub
repz
rcll
inc
shrl
loope
lcall
ret
jae
jae
sub
repz
mov
pop
add
mov
ss
out
insb
and
shrl
cmpsl
jno
xchg
ret
jns
notb
jae
adc
or
mov
xor
push
sub
in
ja
repz
mov
xor
int3
dec
mov
dec
ret
pop
inc
stos
mov
shlb
aas
xchg
fmull
or
jecxz
xchg
add
xor
pop
inc
push
cmp
cmp
mov
incl
mov
pop
pushf
mov
cld
sbb
aaa
or
dec
adc
outsl
mov
pinsrw
dec
mov
scas
mov
sbb
frstors
pop
in
push
and
cltd
pop
add
mov
sub
and
xor
popa
push
or
test
lret
mov
mov
push
dec
mov
cli
hlt
mov
movsb
shr
pop
add
mov
mov
sbb
sbb
push
sbb
inc
push
push
cwtl
mov
stos
popa
sub
lds
add
out
pop
mov
cs
add
mov
fidivl
mov
sbb
icebp
les
inc
and
mov
dec
mov
mov
sub
mov
xchg
in
std
sbbb
jb
in
daa
adc
loopne
cmpb
scas
jg
xorb
or
pushl
mov
insb
test
mov
mov
loopne
sbb
shll
sub
aam
es
fadd
enter
xchg
mov
shrl
lods
add
inc
call
cmp
lods
ja
test
push
push
iret
hlt
popa
pop
mov
daa
mov
pop
or
jecxz
push
inc
mov
push
xchg
inc
sbb
dec
inc
mov
insb
loop
mov
mov
ljmp
shrb
clc
seto
fisubrs
pop
xor
dec
dec
push
cmovp
pop
xor
cli
out
jbe
or
clc
push
push
ss
mov
pop
insb
aad
mov
sub
inc
and
test
nopl
outsb
incl
inc
cltd
push
cwtl
sub
ret
jo
repz
and
jne
stc
es
in
pop
mov
out
gs
lcall
and
pusha
push
nop
jo
aad
lock
leave
push
xchg
mov
cmp
push
and
loop
or
mov
scas
sbb
push
popf
mov
xor
shrl
inc
fsubr
ja
lods
pop
jb
jae
mov
cli
jecxz
cmpsl
test
out
js
lock
add
inc
mov
movsb
mov
inc
call
bound
mov
aam
sbb
xchg
cmp
sbb
int
adc
inc
mov
fildl
jb
add
jg
out
mov
div
lret
inc
or
stc
adc
mov
aas
test
pop
shlb
and
pop
pop
add
add
das
out
bound
cmp
test
xor
jle
pop
popf
ja
clc
lods
shll
mov
lret
in
ja
mov
or
out
xor
jne
fldt
int
adc
push
sahf
push
xchg
xchg
sub
sub
lds
stos
xor
pop
in
dec
roll
sub
or
push
leave
inc
mov
int3
dec
fs
jle
sub
xchg
jne
dec
int3
enter
daa
and
neg
in
cmpsb
mov
or
mov
loopne
in
sbb
dec
push
sbb
jmp
movsb
jmp
mov
mov
xchg
and
inc
pusha
mov
sbb
cmc
xchg
aaa
inc
and
not
int3
and
push
push
cltd
pop
daa
out
and
sbb
stos
cmp
loopne
xchg
hlt
push
mov
push
sbb
repz
jge
dec
fsubs
pop
push
inc
lret
mov
rcrl
clc
inc
inc
mov
fucom
and
dec
bswap
add
loope
out
xor
mov
xchg
pop
ljmp
jmp
inc
inc
test
rcrb
cmp
pop
inc
mov
in
mov
xchg
out
popf
jge
push
jmp
into
shlb
dec
movsl
xchg
stos
pop
jno
enter
add
sbb
incl
jbe
movsl
add
scas
inc
add
sub
lret
mov
fcoms
jg
cmp
clc
sbb
arpl
xor
das
sti
test
adc
shrl
pop
repnz
adc
aam
inc
sub
inc
mov
movsl
ljmp
lea
icebp
in
popl
xchg
les
or
add
sub
ret
mov
mov
push
loop
lahf
fimuls
adc
or
jnp
cmp
push
mov
or
fsts
lds
and
inc
into
in
rcrb
jmp
sbb
xchg
inc
push
loopnew
ds
add
in
rclb
fadd
in
xchg
movhps
fdiv
cmpsl
outsl
push
in
pop
jno
xlat
pushf
dec
push
into
jl
ffree
ror
or
lods
cmp
int
sbb
or
cmc
in
mov
rclb
fbld
dec
fisttps
aad
sbb
jg
enter
cmp
dec
out
sbb
iret
popf
movsb
ret
dec
jns
js
push
arpl
xor
sbb
shlb
pop
cmpsl
movsl
loope
sbb
pop
mov
loope
mov
fidivrl
scas
xor
sub
lret
mov
mov
dec
fnstcw
nop
test
mov
mov
add
iret
pop
int3
jbe
fidivrl
mov
negb
adc
pop
enter
mov
popf
je
lret
nop
xchg
dec
and
push
bound
scas
lds
push
mov
mov
outsl
mov
pop
xor
jbe
loop
lods
pop
aam
sbb
sbb
xor
or
mov
out
iret
mov
mov
fdivrs
mov
xor
sbbb
mov
ret
scas
cli
inc
mov
mov
cmp
mov
mov
mov
mov
stos
dec
push
std
popa
sbb
mov
rorb
sbb
fsubs
push
mov
test
jl
sbb
in
mov
dec
mov
add
aas
data16
sahf
outsl
out
sbbl
jg
stos
int3
fs
test
fcoms
cmp
aad
mov
hlt
fstps
mov
dec
push
mov
out
mov
pop
adc
pop
dec
rcl
sahf
pop
pop
ret
sub
rcrl
dec
xchg
xchg
arpl
std
cmp
out
imulb
jmp
mov
ret
les
outsl
pop
lock
dec
cmp
jecxz
jle
lahf
add
add
aaa
pop
negb
and
xchg
xchg
test
cld
push
cmc
repnz
sti
insl
insl
js
dec
push
fnsave
cmpsl
mov
adc
daa
jmp
sub
addr16
mov
in
xor
daa
jbe
mov
mov
adc
pop
stos
out
iret
ds
es
mov
stos
insl
ljmp
testl
dec
xor
or
pop
roll
loop
mov
imul
xchg
aaa
das
xchg
push
idiv
add
cmp
jle
mov
and
jne
mov
sub
mov
icebp
sbbb
pop
pop
test
jne
cmp
jne
mov
mov
sahf
outsl
out
inc
jg
bound
mov
xlat
jmp
push
and
inc
int
aaa
testb
mov
loopne
cmc
gs
adc
mov
ja
in
daa
pop
mov
mov
push
mov
in
rcrl
hlt
dec
pop
add
push
adc
or
das
aas
fimuls
lret
xor
int
aas
cmp
outsb
mov
enter
push
test
data16
push
rcrb
test
or
xor
push
aad
sub
jl
lret
inc
loope
andb
add
jb
loope
clc
int3
adc
pop
aad
outsb
repnz
cmp
cld
mov
jl
xor
je
and
std
xchg
mov
cwtl
and
xchg
inc
loop
push
outsl
ret
dec
push
xor
mov
push
js
cs
ss
or
sub
xchg
cmp
js
or
add
mov
push
stc
xchg
mov
js
pop
inc
aam
movsb
inc
dec
sbbl
aad
and
pop
mov
adc
out
push
dec
fldcw
stc
mov
xchg
pusha
xor
dec
sbb
pop
pop
pop
sub
mov
test
adc
aaa
arpl
aad
lcall
mov
or
pushf
xlat
mov
lods
add
cmp
jnp
pop
sbb
icebp
nop
inc
cmp
mov
add
repz
movsl
bound
jge
scas
jp
hlt
push
xchg
stos
dec
dec
mov
ds
fisttps
or
icebp
sbb
mov
aad
push
pop
fcompl
imul
jg
out
ss
xchg
mov
test
sahf
and
jnp
rcll
add
dec
loop
push
pop
pushf
xchg
mov
adc
daa
sahf
repz
test
gs
adc
imulb
orb
aam
push
test
sub
mov
xor
pop
mov
inc
ret
sbb
jnp
aad
pop
scas
xchg
inc
rclb
jns
hlt
jmp
xor
jp
mov
jnp
out
xorb
cmp
sbb
dec
push
jae
and
xchg
jnp
cmp
push
daa
push
outsb
push
aaa
cmpsb
dec
lret
mov
or
sti
loop
jg
int3
lcall
fsts
popf
lods
out
xlat
fidivrs
into
pop
js
xchg
stos
stc
sub
dec
push
mov
cmpsl
sbb
shrb
ds
push
cmp
lcall
mov
outsl
loope
lahf
fwait
cmp
enter
mov
in
inc
lret
push
icebp
jecxz
xor
adc
cmp
cmpsb
push
xchg
lret
ljmp
cmc
out
jl
and
xchg
push
push
xor
notl
stos
xchg
mov
push
and
dec
jno
add
mov
and
sub
or
scas
js
leave
dec
sbb
loopne
mov
or
push
inc
subb
in
pop
subl
adc
add
out
cmp
mov
fs
outsb
lret
or
push
push
leave
xchg
xchg
xor
inc
movsl
cld
sbb
iret
sahf
or
int3
push
mov
popf
sub
jle
ficompl
add
push
test
mov
xchg
mov
xor
pop
mov
and
add
jl
lea
xor
pop
adc
sbb
popf
mov
aam
xor
and
nop
lret
scas
mov
adcb
add
mov
cmpb
ficoms
loop
xchg
jo
in
mov
or
xchg
js
cli
rcrl
cmc
add
fisttps
jnp
cmp
mov
das
jle
mov
pop
or
add
lds
lods
xorb
aad
push
loop
jo
sub
or
out
mov
sbb
push
in
adc
adc
int3
movsb
jge
inc
decb
ljmp
das
jmp
add
xor
add
and
mov
andb
xchg
push
mov
cli
js
xor
fbstp
mov
adc
mov
jb
jo
sub
and
ss
imulb
inc
push
pop
add
pop
imul
aad
pop
das
dec
or
shrb
mov
fstpl
std
sub
jno
cs
jnp
sub
xor
js
cmp
mov
roll
jno
ffreep
aaa
and
xor
cld
mov
pop
push
xchg
cmp
jge
pop
lea
movsb
popl
es
hlt
pop
dec
cmp
hlt
jnp
icebp
pop
cmpsl
and
jecxz
negl
xor
push
xor
push
pop
or
cltd
fisubrs
in
ret
je
xorb
repz
call
push
pop
arpl
repnz
lahf
xchg
test
pop
fwait
andl
fidivl
loopne
and
ja
cmpsb
testl
es
aaa
mov
sbbb
xchg
xchg
push
mov
outsb
std
adc
das
outsl
shlb
pop
sub
push
and
adc
dec
lea
leave
push
or
sub
sub
mov
sub
ret
inc
jnp
inc
repnz
adc
emms
xchg
je
xchg
adc
add
mov
fnsave
push
dec
test
fnstenv
push
mov
pop
inc
jbe
mov
cmp
stos
outsl
add
into
lods
pushf
mov
sub
clc
fidivs
in
fldt
mov
sub
push
mov
outsb
adcb
loope
out
orb
call
rcr
mov
or
mov
outsl
popf
inc
ficoms
ljmp
test
mov
cmc
xor
sbb
sbb
nop
pop
out
jl
fisttpll
pop
mov
xor
mov
xchg
mov
xchg
mov
mov
mov
ret
outsl
nop
pop
inc
or
jo
xchg
push
ret
andb
insb
sarb
or
mov
jns
cmp
pop
push
inc
js
sahf
out
fs
into
push
jle
sbb
into
cmp
push
jl
daa
cmc
jmp
xchg
add
fsubl
jl
sub
aam
ss
sub
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
dec
cs
jp
or
jp
xchg
mov
cmp
call
nop
clc
and
stc
scas
xor
sub
jmp
scas
mov
jmp
daa
stos
push
shll
mov
push
sti
xlat
enter
lods
jno
lret
adc
mov
sbb
flds
mov
mov
xor
ret
imul
pop
xlat
test
jl
jl
test
mov
sbb
loop
pop
out
and
aad
mov
adc
dec
or
mov
and
push
and
add
div
xor
sbb
xchg
insb
or
je
shll
out
xchg
clc
jne
sti
hlt
cmp
xchg
inc
jecxz
inc
lds
shrl
in
in
stos
jo
mov
lds
ss
push
into
xor
jo
sbb
mov
fucomi
or
xor
xor
ss
je
int
mov
xor
bound
loop
and
mov
or
or
out
enter
push
pop
pop
mov
mov
pop
inc
rcrl
repz
stc
add
add
sahf
addr16
ja
mov
mov
adc
pop
mov
rcl
jmp
cmp
mov
daa
lcall
jns
mov
ss
jo
fstpl
daa
jns
xchg
xchg
fidivrl
shrb
push
nop
push
xchg
shl
dec
popa
cmc
icebp
cmp
scas
inc
loopne
stos
sbbb
or
insb
iret
in
ret
and
cwtl
sbb
jle
lcall
or
jecxz
mov
bnd
sbb
mov
in
hlt
bound
pop
test
mov
xor
xchg
pop
push
inc
mov
pop
jnp
add
lds
mov
and
js
loop
jl
insb
dec
lea
xchg
and
mov
js
into
push
mov
adc
and
xor
sub
xor
aam
xchg
dec
and
pop
mov
push
cmp
mov
pushf
and
xor
cli
xchg
xchg
xchg
shrb
lea
nopl
js
dec
adc
dec
popa
push
push
add
xor
xrelease
cli
add
into
mov
add
jle
stos
addr16
arpl
dec
in
mov
repz
ljmp
inc
and
ret
stos
sahf
repnz
push
pushf
in
fcomps
add
rcr
test
xchg
mov
and
mov
mov
inc
add
mov
jmp
push
mov
or
or
jp
sub
out
xor
dec
and
dec
jb
aaa
int
cmpsb
sub
and
jmp
test
arpl
mov
mov
push
fnsave
repz
fbld
and
in
xor
aad
push
cmc
lcall
ret
outsb
jno
jmp
push
inc
push
cmp
jle
sub
je
cmp
ss
ss
stos
pop
or
cmp
popf
xor
mov
test
lds
nopl
lds
dec
cmp
out
pop
jno,pt
xchg
push
out
out
cmc
in
in
sbbb
sub
in
inc
data16
rcll
test
clc
mov
adcl
dec
or
push
mull
ljmp
movsb
pop
rorl
repnz
sub
aad
pop
shll
sub
and
mov
pusha
into
cmp
and
add
add
sbb
arpl
popa
andb
jb
xor
shl
in
repz
int
sub
mov
xor
mov
xchg
mov
mov
cmp
inc
cmp
push
push
inc
mov
es
cs
dec
arpl
out
ss
andl
movsb
sub
and
mov
roll
subl
inc
inc
rorb
and
xchg
pop
xor
roll
and
mov
xchg
cmpsb
jg
mov
repz
mov
fistl
in
out
fisttpll
out
cmp
daa
dec
and
scas
inc
sub
inc
mov
loopne
in
shll
andb
in
addb
scas
cmp
lret
pop
and
addl
mov
jne
ss
sbb
sbb
mov
xor
les
lcall
mov
int
xchg
xor
jbe
xor
mov
jmp
xchg
cli
aad
mov
mov
mov
cmc
add
and
clc
stc
call
push
inc
pop
sub
inc
in
aas
fnop
mov
arpl
jl
mov
jnp
dec
mov
inc
xor
dec
adc
ja
outsl
add
jne
adc
and
out
in
ret
inc
pushf
sub
cmc
mov
fcmovbe
sub
jnp
sbb
mov
mov
add
insb
mov
out
mov
int
sbb
lods
or
orb
insb
push
fs
movsl
out
int
incl
inc
push
ror
lret
or
or
cli
pop
and
cmp
sub
mov
sti
call
xlat
popa
aas
and
movsb
repz
subb
mov
aaa
cwtl
push
xlat
test
push
rcrb
icebp
xchg
xchg
mov
jns
inc
in
lret
and
sbb
push
push
je
xor
shlb
pop
fstps
push
leave
sahf
pop
mov
jbe
push
out
int
push
clc
xchg
sub
cmp
sbb
cmp
out
inc
adc
or
mov
push
mov
clc
lret
inc
xchg
sub
xchg
or
mov
sub
call
js
jo
jns
sub
mov
ds
shr
sar
mov
aam
mov
popf
xor
dec
pop
mov
andb
cmc
sbb
roll
mov
and
es
sub
stos
xor
mov
mov
jb
dec
mov
cmpl
mov
push
in
test
mov
incb
mov
jb
jle
dec
dec
cmpsb
inc
sti
jne
or
jnp
jle
push
aam
cld
lret
mov
xchg
sub
sbb
push
mov
xchg
stos
push
cwtl
jmp
jns
pop
mov
push
dec
pop
lret
movsb
hlt
test
jb
dec
inc
jne
sbb
sahf
mov
pop
xchg
mov
js
pushf
push
insw
mov
pop
xchg
das
repz
std
rorl
ret
aad
out
adc
sub
stos
popa
fadds
dec
call
das
xor
pop
or
pop
ss
or
lds
cmc
add
lods
pop
dec
cmp
addr16
in
cmp
and
outsb
movsb
in
add
mov
mov
sub
test
jge
sub
ficomps
rorl
jo
jmp
jnp
inc
pop
lock
popf
xchg
testb
mov
xor
leave
sti
cmpsl
popf
mov
push
adc
addl
jp
stos
sub
xor
jmp
icebp
lock
sbb
dec
mov
dec
or
pop
push
push
inc
call
mov
imul
ud1
jge
jae
jg
or
xchg
push
add
fwait
lcall
lock
shll
mov
sbb
aam
inc
adc
negl
in
lds
mov
and
push
jne
je
add
leave
push
or
stos
adc
mov
mov
fisttpl
xor
jp
fs
data16
inc
pop
outsl
popa
out
pop
add
and
mov
lret
lahf
dec
adc
stos
add
mov
push
adc
fidivrs
inc
ljmp
ret
sub
cli
lds
fsubs
mov
dec
shlb
sarl
dec
adcl
mov
sub
negb
or
aam
mov
cmc
bound
fs
xchg
push
lcall
cmp
hlt
sbb
js
jnp
ficoms
pusha
cmp
and
mov
adcb
outsb
sbb
or
rorl
cmpsl
scas
lea
fimull
mov
jo
jnp
inc
dec
nop
test
pop
data16
call
outsl
mov
inc
jb
clc
push
mov
or
inc
mov
ja
sbb
jl
jl
popf
test
nop
xor
xlat
and
mov
dec
adc
sbb
imul
xchg
jno
mov
in
and
xchg
mov
push
test
mov
mov
notl
aad
sar
fildll
cwtl
std
sti
xchg
push
xor
jno
into
mov
ja
movsl
in
es
push
sub
divb
mov
es
cmp
sbb
inc
out
test
out
sbb
movsb
ljmp
cmpsl
stos
aam
inc
imul
inc
inc
or
jno
test
jns
mov
push
lret
lock
sbb
pop
xchg
clc
scas
insb
popf
push
cli
movsb
add
dec
fwait
inc
push
jb
mov
sti
sti
pop
into
push
or
mov
sbb
mov
je
in
popa
movsl
cmp
leave
repz
dec
dec
pop
push
sbb
cmp
loopne
outsl
sbb
dec
dec
xor
shl
bound
fcmovbe
icebp
xchg
sbb
xchg
inc
ja
inc
addr16
in
jp
push
aam
add
filds
or
and
ja
inc
lcall
push
pop
in
mov
ret
js
push
ficoml
neg
sti
nop
arpl
ds
in
sub
out
xor
jg
sbb
int
push
in
in
ja,pn
popa
lods
mov
jl
mulb
scas
dec
jp
les
sbb
xchg
mov
pop
adc
fucom
adc
or
push
stos
jno
jne
scas
repz
jns
jle
adc
loopne
dec
rorb
xor
popf
loopne
mov
jae
dec
add
inc
mov
pop
lret
jge
jl
in
or
pushf
pushf
push
inc
fldenv
lods
out
sub
add
arpl
sbb
jge
lret
movsl
int
xor
sub
dec
daa
movsb
adc
jns
jne
ds
push
jmp
pop
lods
fnstcw
cli
setbe
add
data16
fwait
cltd
cmpsl
mov
sub
xchg
xchg
stos
hlt
loopne
dec
jecxz
pop
mov
cld
and
sub
int
popf
negl
call
pop
cs
lret
je
outsl
and
imul
lret
xorb
pop
xchg
loopne
xchg
mov
dec
idivl
stos
jg
push
rolb
rol
nop
ficoms
mov
subl
mov
mov
mov
adc
je
aam
int3
fsts
fisubs
ss
fdiv
stos
lods
mov
scas
mov
fildl
sarl
insb
adc
sub
enter
test
imul
aaa
cmp
jb
das
xor
xlat
pop
or
loope
inc
inc
jne
mov
stos
jmp
nop
ffreep
add
in
ss
int3
inc
push
aam
pop
cmp
adc
inc
pop
mov
sub
lahf
call
fldt
push
ret
in
aad
fldl
xchg
dec
adc
cmp
aam
mov
add
lcall
sub
sbb
divl
loop
roll
mov
stos
das
jo
push
in
sub
es
lcall
pop
call
push
push
mov
aam
lods
test
mov
dec
xchg
cmp
stos
mov
sahf
jb
call
test
or
push
fnop
loopne
add
ret
cmpsb
xor
ljmp
inc
mov
jnp
adcl
inc
rcrl
push
push
cmpsl
clc
sbb
lcall
das
aam
xchg
pop
lods
cmp
lret
lahf
and
lods
cmp
leave
bound
int
xchg
outsl
cld
leave
fcmovb
test
es
mov
scas
dec
into
lcall
or
jae
sbb
push
lcall
push
mov
or
mov
orb
negl
jnp
push
pop
mov
jne
popa
push
in
cmc
pop
mov
mov
mov
xchg
int
and
jp
movl
fcoml
or
mov
les
cld
inc
mov
roll
in
data16
scas
push
out
xor
imul
mov
pop
test
jge
push
and
jle
lret
adc
mov
mov
cmp
cmp
mov
pop
mov
or
imul
sbb
mov
test
sbb
mov
jnp
xchg
dec
addb
cmp
inc
cld
pop
insl
sti
into
out
cmpsl
and
or
repnz
into
xchg
rclb
mov
mov
insb
pop
lcall
imul
scas
push
mov
clc
pop
push
jg
sub
fdiv
iret
mov
adc
pop
sbb
pusha
dec
mov
xor
pop
flds
popa
jge
add
scas
sub
pop
mov
aam
mov
push
inc
sahf
in
fldenv
outsb
cwtl
cli
out
repnz
mov
adc
les
in
aam
push
outsb
scas
mov
pop
out
adc
xorb
stos
inc
mov
fstpt
mov
cld
inc
cmpsb
icebp
sub
lahf
lcall
sub
daa
dec
jmp
pop
mov
cmc
or
popa
mov
lock
sbb
pop
popf
mov
loopne
mov
pop
push
pop
ljmp
lods
cli
popa
jns
iret
sub
cmpsl
jp
into
sub
dec
das
push
and
cmp
pop
call
aaa
mov
popf
sbb
cmp
popa
int3
stc
mov
inc
mov
mul
movsl
mov
sub
jmp
out
dec
fcompl
mov
pop
std
mov
and
lcall
addr16
push
adc
adc
pop
dec
xlat
jo
cli
pop
mov
arpl
scas
sti
loop
scas
in
adc
adc
aad
test
jne
jmp
movsb
adc
loope
loop
xor
sbbl
inc
mov
inc
adc
adc
xor
popf
cmovns
sbb
in
dec
pop
push
js
stos
pusha
andl
push
mov
cwtl
inc
cmp
rcr
cmp
mov
cmpsb
mov
enter
cltd
cmc
push
push
pop
pop
inc
enter
xchg
or
movsb
adc
pop
sbb
push
or
push
push
adc
sbb
inc
pop
adc
shll
or
cltd
mov
xor
jae
and
mov
lds
fnclex
cltd
lods
ret
push
pushf
cld
sub
lret
out
out
adc
cltd
mov
push
dec
or
aam
iret
into
or
inc
pop
push
cli
jmp
mov
xor
pop
or
out
mov
movsb
mov
sub
bound
inc
ret
push
and
ret
loope
test
mov
mov
subl
pushf
cli
repnz
cmp
fucomip
enter
xchg
push
and
sub
fs
xlat
popa
dec
and
sbbl
clc
inc
add
push
cmc
xlat
pop
leave
rorl
push
mov
mov
repz
daa
cld
mov
xchg
xchg
repnz
mov
inc
cld
pop
push
negl
int
test
ret
enter
push
in
sahf
jle
xor
cmpsl
sbb
fistpll
push
jp
or
adc
lods
sti
jmp
pop
push
mov
clc
sub
push
sbb
lds
pop
leave
int3
mov
js
mov
mov
sbb
aas
je
xchg
inc
jmp
lret
mov
or
dec
nop
mov
out
and
dec
jbe
rcrb
sti
adc
mov
test
cmp
inc
pop
fwait
leave
jp
jne
loope
mov
inc
in
sti
scas
mov
lahf
sbb
jno
dec
xor
lcall
lcall
and
ficoms
adc
dec
inc
data16
ja
call
push
sbbl
or
mov
sbbl
add
mov
mov
ret
sub
sbb
xchg
dec
push
dec
enter
pop
out
pop
stos
orb
dec
shr
push
icebp
loopne
aas
xor
xor
lods
dec
sub
mov
cmpsb
xor
and
sub
test
mov
xlat
pop
jb
stc
mov
loope
and
cld
negl
mulb
int
or
xor
rcrb
sub
cmpsb
les
or
lock
push
mov
bnd
testl
mov
mov
mov
mov
add
lods
pop
leave
xchg
pop
push
test
pop
fdivrl
inc
shlb
sbb
movsl
mov
inc
inc
in
xchg
lods
adc
dec
je
or
scas
push
loop
cmp
fldt
lcall
jle
mov
jg
aad
sbb
sbb
xchg
in
gs
mov
hlt
jo
mov
insl
mov
and
pusha
rorl
imul
mov
std
or
fildll
push
lods
leave
inc
push
loopne
movsl
sub
cmp
adc
cmpsl
js
cmpsb
or
aad
rol
pop
mov
adc
push
outsl
dec
push
mov
pop
lcall
std
sbb
jb
pop
mov
dec
idiv
inc
aas
fimuls
xor
mov
inc
test
mov
cli
lods
push
std
lret
dec
lret
icebp
mov
js
xchg
repz
aad
mov
push
cmpsb
lock
ficomps
faddp
popf
je
jo
adc
int
leave
dec
add
xchg
and
mov
pop
cmp
daa
cwtl
call
stc
lds
popa
mov
leave
loopne
pop
out
push
xchg
int3
mov
fwait
lea
dec
rcrb
xchg
sub
jl
int3
jle
mov
loope
stc
and
dec
rorb
mov
clc
push
cltd
shll
inc
sub
fbld
adc
and
sbbl
mov
cmpsl
adc
loop
or
sub
xchg
sub
iret
xchg
into
jbe
popf
insl
push
int
stos
sub
dec
leave
xchg
xorb
pusha
fidivrs
pop
in
dec
xchg
sub
lret
adc
sbb
cmc
xchg
xor
repnz
cmp
jns
push
testl
subb
adc
inc
sub
sub
xor
pop
jo
sbb
cltd
gs
outsl
mov
sbb
cmc
aam
into
les
cmp
cwtl
push
push
mov
or
mov
notl
mov
xor
and
or
add
adc
fadd
sbb
xchg
jge
push
and
adcb
push
xchg
mov
es
xor
xchg
hlt
jns
mov
icebp
or
dec
push
mov
mov
sbb
xchg
pusha
adc
fisttps
mov
pushf
xchg
iret
out
orl
sbb
stos
xchg
aaa
les
cmp
loop
mov
sbb
mov
fcomp
scas
in
das
dec
mov
pop
mov
dec
cli
movsw
shll
pop
xor
fimuls
mov
pmaxsw
pusha
adc
sbb
cmp
cs
xor
pop
clc
mov
and
hlt
bound
mov
hlt
int3
out
mov
cwtl
in
dec
sub
rol
mov
jbe
sbb
shll
xor
std
and
lods
jl
fisttpl
mov
outsl
and
movsl
fldenv
mov
imul
adc
inc
ret
sahf
pop
ret
mov
dec
test
int3
sub
dec
sub
nop
fwait
pop
dec
adcb
nop
test
adc
xor
addr16
push
or
js
ret
mov
clc
xchg
out
lcall
sub
sub
jmp
scas
outsb
push
fstp
roll
lcall
inc
push
dec
xchg
dec
testl
addr16
push
fisttpl
movsl
cmp
xchg
enter
fwait
mov
add
push
popa
push
mov
pop
aad
xor
inc
inc
lret
cmp
in
xor
add
and
mov
ss
adc
pop
inc
jno
in
xor
add
mov
jne
add
lret
pop
xchg
sub
pop
ss
jne
shll
sbb
inc
int
test
fildl
add
add
incl
mov
aas
daa
inc
inc
add
cmp
cmc
mul
mov
and
ljmp
fstpt
addl
mov
mov
xchg
sub
xor
jbe
jbe
jae
pusha
cmp
add
ljmp
aaa
movsb
in
mov
inc
cmpsb
inc
loope
adc
cli
dec
jle
stos
sub
movsb
sub
jns
negl
adc
popa
insb
xchg
gs
inc
and
xor
shll
pusha
and
add
pusha
ds
jle
jae
mov
jnp
cmpsb
clc
sub
loop
sbb
popa
add
adc
pop
xor
cs
movsl
je
sbb
or
rolb
sbb
in
aaa
sbb
adc
jecxz
loop
xchg
xchg
es
fs
xchg
into
xchg
leave
sbb
xlat
and
rep
inc
and
sbb
push
iret
dec
mov
add
aas
add
int3
arpl
outsb
or
inc
ja
add
push
fistpl
add
loope
add
jae
inc
in
mov
arpl
and
xor
cmp
cmp
xchg
enter
imul
rorb
loop
cld
or
dec
mov
lds
push
das
mov
pop
cmp
pop
push
sub
lret
out
adc
pop
movl
xchg
mov
jno
mov
lahf
sub
mov
aaa
test
loopne
repnz
adc
dec
adc
lds
mov
sbb
jno
mov
add
pop
fisttps
test
icebp
and
out
int
fimuls
pop
pop
inc
jno
jecxz
lret
mov
dec
add
adc
dec
nop
xor
xchg
and
dec
jne
lret
insb
xor
push
jmp
lret
ja
mov
sahf
jge
scas
sub
pop
push
jae
imul
jbe
or
shrb
mov
sub
push
push
popf
push
add
cwtl
subb
push
mov
hlt
and
cmpb
outsb
add
test
add
inc
push
loop
arpl
je
rcr
lods
jg
sub
xor
or
push
adc
faddp
adc
push
bound
aam
and
ja
jno
dec
push
sbb
mov
push
jge
gs
mov
xor
sbb
in
aad
push
arpl
stc
jecxz
je
adc
pop
int
jo
stc
in
je
push
xor
cmpsb
movsl
xor
pop
and
sub
and
mov
adc
inc
roll
mov
mov
in
imul
fistps
mov
mov
mov
jne
vphadddq
aaa
dec
lods
stos
xchg
xchg
imul
push
sbb
es
and
or
xor
pop
rcrl
test
adc
mov
sub
mov
jg
lret
dec
popf
fistl
pop
cmp
nop
jecxz
ja
xor
mov
ss
lcall
fs
loope
inc
or
push
inc
icebp
add
hlt
lods
std
pop
xchg
push
or
imul
mov
pop
lock
cli
adc
test
loop
push
inc
movsl
cmpb
pop
in
call
dec
and
shll
jbe
ds
mov
dec
stos
jnp
lret
xchg
inc
ds
mov
ss
sbb
pusha
or
and
sbb
cli
jg
sbb
adc
dec
inc
add
mov
arpl
js
leave
insb
aaa
or
dec
cmp
in
pop
pop
add
dec
push
ret
xchg
xchg
sub
loopne
cmp
fidivs
fwait
dec
adc
sahf
sbb
int
add
mov
loopne,pn
mov
cli
jne
jo
and
movsb
xchg
gs
xlat
xor
out
mov
lock
iret
lret
mov
in
adc
gs
das
adc
mov
outsb
imul
aas
pop
xchg
enter
fdivs
push
mov
pop
mov
pop
pop
fdivs
jns
in
sub
sbbl
inc
in
shll
imul
arpl
test
loopne
lcall
insb
pop
jecxz
fildll
xor
mov
mov
stos
jecxz
pushf
push
icebp
mov
or
sarl
mov
cmc
mov
daa
in
add
pop
les
cmp
andb
mov
adc
add
data16
jecxz
int
pop
loop
inc
push
lods
xchg
sub
lret
or
pop
ficompl
sahf
dec
and
fdivrs
pop
clc
sti
xor
add
lahf
das
cmp
fst
and
add
call
icebp
jecxz,pn
es
sbb
int
adc
lods
mov
add
xor
pop
push
sbb
sbb
adc
or
sub
push
mov
lahf
and
xor
enter
cmc
adc
les
cmp
pushf
lret
push
jle
ja
jae
mov
mov
cmp
gs
mov
dec
repz
outsb
in
les
mov
mov
pop
popf
cmp
push
xchg
lret
sub
mov
mov
mov
rcll
push
pushf
jl
out
cmp
call
daa
cli
hlt
test
rorb
int
xchg
mov
push
mov
enter
push
mov
sub
fsubrp
icebp
rol
jns
lods
cmpsb
int3
pop
clc
add
mov
nop
jecxz
push
lcall
pop
call
daa
push
dec
bound
mov
sbb
or
ja
cmp
and
xor
cmp
xor
or
sbb
mov
xor
or
mov
mov
mov
repz
subl
adc
or
fs
adcl
sbb
mov
js
stc
clc
cmp
imul
popa
shlb
jge
cmpsl
jle
jecxz
shll
adc
xchg
adc
jmp
stos
cmpsl
mov
pop
in
or
xchg
scas
scas
cmpsl
xchg
out
pusha
and
into
fistps
sbb
sbbl
cmp
xchg
pushf
fwait
and
push
pusha
stos
pop
mov
cmp
add
sbb
add
mov
cmpl
and
add
scas
sbb
rorl
mov
ret
shll
aas
mov
xor
pop
dec
pop
imul
mov
xchg
test
test
push
inc
mov
sub
ret
lods
stos
mov
xchg
xor
mov
leave
out
lods
cmc
cmpsb
pop
in
int
lods
cmpsl
inc
ret
and
call
mov
push
mov
dec
repz
mov
jmp
xchg
mov
mov
in
test
dec
and
aad
push
pusha
xor
mul
gs
loop
mov
push
jo
shrl
lock
push
push
out
mov
mov
xchg
and
repz
push
les
jge
loopne
sub
scas
iret
push
out
mov
jl
lea
pop
js
cmp
sahf
dec
cmp
mov
lea
adc
pop
stc
push
dec
push
test
pop
ss
popf
add
loope
cmp
add
mov
imul
xor
ds
cwtl
ja
in
lret
cmpsb
inc
loop
mov
mov
fisttps
push
or
sbbl
clc
and
rorl
cmp
ret
xchg
fcmovne
pop
mov
aaa
lock
pop
xlat
mov
les
leave
outsl
adc
sbb
jno
push
sbb
adc
xchg
pop
mov
adcb
lds
in
out
sub
subl
andl
fnstsw
sub
sub
adc
popl
sub
cmc
dec
jns
dec
or
scas
cmp
sbb
dec
outsl
inc
test
loope
bound
out
inc
pop
sbb
jo
js
and
sti
sub
ljmp
xchg
ja
scas
cs
push
lcall
inc
sbb
out
fsubrs
xchg
outsb
js
inc
lea
daa
lods
nop
push
add
sahf
mov
jg
in
jp
xor
jmp
or
imulb
mov
adc
push
add
push
insb
jl
jle
dec
rolb
jbe
and
dec
xor
push
test
loop
ret
push
movsb
stos
adcl
aas
movsb
out
clc
jb
cmp
in
cwtl
xor
push
and
pop
roll
es
mov
movsl
cmc
iret
mov
sub
in
mov
addl
fisubl
cmp
mov
idivl
xchg
adc
mov
les
adc
mov
jmp
cmp
inc
jo
ret
lock
xchg
popf
push
shrb
repz
inc
loope
cld
sbb
test
bound
or
pop
lock
stos
jb
pop
mov
or
mov
cli
outsb
add
mov
push
pop
xchg
ja
mov
mov
in
push
cld
mov
das
jecxz
movsl
mov
daa
inc
dec
adc
test
lds
lock
mov
popf
xchg
orb
jecxz
mov
mov
or
pop
enter
mov
js
jp
jp
ss
fstl
adc
sub
xchg
loope
ljmp
addr16
mov
mov
int3
add
mov
sub
movsb
xlat
mov
adc
or
lock
sub
cmp
mov
push
pop
out
clc
and
rcl
xchg
add
mov
mov
sbb
rcr
push
stos
pushl
mov
and
leave
lods
inc
cli
or
xlat
or
ljmp
adc
push
roll
pop
mov
inc
jle
cwtl
mov
stc
stos
inc
clc
adc
aad
iret
arpl
in
jnp,pn
add
shl
scas
clc
cmp
fnsave
cmpsl
subl
seto
shlb
enter
pop
sbb
add
enter
roll
lea
ret
fcmovb
ja
ret
cmpsb
insb
cli
mov
shrl
mov
stos
jae
sub
and
rcr
jb
pop
push
pop
scas
js
add
scas
addb
or
nop
and
sbb
idivb
loopne
inc
push
adc
std
or
in
adc
jo
push
cmovge
aas
sahf
xchg
nop
les
test
andl
xor
enter
push
ret
cmp
xchg
sbb
xlat
xor
push
jecxz
xor
or
sbbl
sub
cmpsl
inc
daa
pop
scas
pop
sahf
push
mov
mov
dec
lret
inc
iretw
xchg
jecxz,pn
bound
enter
push
xor
push
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
loope
sahf
scas
mov
pop
jp
xchg
pop
jecxz
sub
pop
mov
jg
dec
cmc
decb
sbbb
jno
sbb
iret
mov
jge
nop
cmpsb
dec
jp
mov
or
in
fldl
mov
setne
push
subl
js
push
rcr
scas
popf
incl
adc
loope
adc
push
icebp
mov
mov
push
aad
insb
ja
out
adc
aad
jmp
mov
jle
ja
sbb
sub
cmc
push
pop
lcall
int3
cli
in
jle
out
and
repz
icebp
clc
std
iret
sbb
pop
cmc
popa
out
std
inc
stos
pop
jmp
loop
or
out
jmp
into
mov
mov
call
outsb
adc
adcl
inc
cmp
xchg
mov
mov
loope
xchg
push
sbb
lods
icebp
mov
mov
mov
js
inc
inc
jg
jno
stc
stc
push
je
fiaddl
scas
xor
test
lods
sti
or
push
adc
sbb
sub
mov
mov
and
cmc
dec
xor
push
fstpt
and
pushf
imul
sbbl
inc
out
aad
mov
inc
or
cmp
add
xacquire
push
xor
inc
sbb
sub
inc
cmp
mov
ss
adc
dec
xchg
or
icebp
push
push
ja
call
into
pop
ficompl
sbb
adc
jo
add
jns
nop
mov
push
fisttpll
cmp
add
insl
cmp
pop
and
mov
int3
xchg
cmpl
cld
adc
test
std
into
adc
mov
push
fbstp
xor
pop
stos
mov
xchg
pop
aaa
cmc
jecxz
mov
mov
call
insl
lret
adc
jge
into
mov
add
xchg
mov
push
xor
mov
push
jno
shlb
pop
pusha
cmp
repnz
pop
push
in
sbb
gs
pop
xchg
call
mov
icebp
mov
div
push
in
xor
loop
stc
pushf
inc
mov
push
stc
iret
cmp
je
rcr
movsb
xor
ret
or
int3
outsl
push
sahf
sbb
push
and
repnz
fcmovu
in
repz
adc
adc
insb
ret
fwait
sbb
jge
scas
push
cmpsl
or
and
xor
lods
loope
jne
xor
jbe
adc
add
jb
leave
xor
mov
enter
mov
and
and
out
inc
ja
pop
test
jmp
mov
into
xchg
jo
fcomip
fsubrl
sbb
dec
enter
dec
fisubrs
mov
inc
int3
ret
lods
cmpsl
push
inc
call
lock
sahf
jg
push
pop
dec
sti
loope
lret
repz
ja
enter
push
sub
cmp
aad
inc
push
fwait
sub
adc
push
xor
lcall
daa
fwait
cld
fdivr
mov
cmp
add
cmp
pop
mov
sbb
cmpsl
repnz
mov
les
lret
add
inc
cwtl
imul
dec
xchg
mov
push
lahf
inc
push
mov
stos
push
sbb
jmp
ret
aam
and
mov
mov
int3
xchg
nop
leave
push
jle
into
xchg
insl
add
sbb
pop
int3
inc
iret
shlb
clc
fmull
push
fldl
fnstsw
inc
pop
mov
enter
leave
rclb
add
and
xchg
jl
out
or
push
cltd
push
push
xor
xor
adc
mov
filds
mov
pop
pop
leave
mov
popa
pop
arpl
or
pop
cwtl
fists
fidivrs
jns
movsb
push
cmpb
in
pop
xchg
pushf
lahf
rcrl
or
mov
inc
pushf
jno
mov
push
jbe
inc
mov
push
in
pop
mov
sbb
mov
repnz
push
push
xor
in
sub
movl
aaa
je
ret
push
hlt
jbe
dec
fimuls
mov
or
sub
stos
pop
scas
add
xchg
rolb
dec
inc
enter
sbb
or
mov
cld
mov
inc
mov
push
mov
or
pusha
mov
arpl
into
stos
cmpsb
inc
jge
adc
or
hlt
ret
cmpsb
flds
test
lds
rolb
xchg
pop
xor
scas
push
test
jae
fildll
iret
ljmp
js
fmull
and
add
stos
aad
add
cmpsl
push
enter
mov
sub
sub
mov
ds
mov
insb
xlat
fists
jo
xchg
xchg
stos
sub
call
divl
shrb
inc
xchg
xchg
inc
cwtl
mov
inc
cmp
test
pusha
nop
mov
das
pop
lods
mov
imul
pop
sbb
insl
sbb
in
jae
mov
push
test
ud1
pop
ret
lret
mov
mov
shl
mov
sbb
lret
xor
push
hlt
xor
cwtl
scas
or
sbb
popa
aad
xchg
in
iret
pop
pop
lcall
enter
adcl
andl
ja
or
rcr
aas
adc
lods
cmp
jl
fsubp
call
add
cmpsl
int
sarb
jmp
test
add
arpl
mov
je
and
mov
stc
je
mov
sbb
nop
ret
add
sbb
pop
cmpsb
notl
gs
ret
popf
sbb
mov
jns
pop
fdivrs
cmp
popf
adc
lods
mov
cmc
mov
cwtl
mov
fdivrp
out
cmp
call
rcrb
in
dec
scas
call
push
bound
daa
test
fisubrs
les
ss
push
loop
push
movsl
popa
ss
mov
push
imul
in
sbbb
jno
mov
pushf
pop
fistpll
test
pusha
inc
outsl
pop
push
adc
sbb
outsl
sub
ret
or
jmp
in
std
xchg
dec
push
pop
flds
inc
iret
mov
or
mov
sub
add
pop
push
xor
in
mov
pop
insb
push
ds
cmp
and
mov
ja
pop
or
test
add
fwait
cmpb
jmp
int
lcall
outsb
inc
lods
lret
es
mov
popl
bound
lret
jp
xchg
pop
dec
mov
mov
enter
mov
dec
mov
andb
or
fmulp
jno
push
stos
in
mov
sub
pusha
adc
inc
flds
mov
jge
add
jb
xor
mov
es
sbb
jmp
xchg
in
mov
cmpsl
stos
and
sub
push
xchg
bound
mov
jns
lods
sti
mov
mov
addr16
or
hlt
test
inc
jmp
das
insb
dec
jnp
cmpsb
jmp
push
repz
addl
mov
lcall
cmp
dec
and
pusha
popa
adc
scas
enter
push
or
sub
push
and
mov
in
mov
fidivrl
fmull
iret
jns
out
rclb
lahf
or
outsb
add
aad
ss
adc
negb
mov
cmpb
jmp
mov
pop
sub
into
mov
sub
mov
jge
mov
xor
xor
nop
lock
je
shll
mov
pop
fs
sbb
jg
sbb
in
lret
push
pop
push
and
inc
adc
cmp
mov
test
mov
mov
imul
or
jecxz
or
dec
ret
xor
ds
leave
repz
dec
fiaddl
xor
outsb
lods
inc
outsl
movsl
cmpsl
pop
inc
pop
sbb
popa
inc
popl
cwtl
outsb
cmp
jecxz
ficoml
in
ds
scas
dec
lds
pminub
add
es
push
xchg
out
xchg
add
jnp
pop
jbe
or
cmp
jge
in
mov
loopne
inc
xlat
arpl
lret
cwtl
rcrl
in
jb
mov
fwait
jmp
sbb
sub
inc
call
inc
sbb
ja
jl
push
mov
ret
pop
add
xchg
xchg
inc
xchg
inc
dec
stc
subb
loope
cltd
sub
add
loope
fisubrs
jae
xchg
pop
int3
popf
in
cmpsl
or
leave
std
dec
mov
jecxz
aad
mov
rorb
daa
sbb
jbe
inc
lea
adc
call
mov
lds
ficompl
arpl
sbbb
adc
jae
cltd
mov
js
add
shrb
cmp
in
stc
cmpb
out
mov
adc
cmp
je
xor
lcall
dec
lcall
mov
mov
sub
xchg
icebp
mov
popa
mov
clc
aam
fs
xor
gs
mov
clc
sbb
out
fadds
mov
cmp
xorb
cli
je
imul
lahf
adc
pop
mov
push
sub
dec
int
je
adc
sahf
add
fucomp
call
cmp
dec
ficoml
sahf
adcl
stc
mov
and
cwtl
in
jns
sbb
push
push
aas
dec
in
cmp
pop
in
pusha
dec
out
or
lock
repnz
cmp
inc
add
sub
ja
inc
cmc
fnstenv
xchg
or
js
or
adc
movsb
push
and
push
cmp
int3
mov
mov
int3
mov
je
jmp
xorb
repnz
push
popf
cltd
pop
dec
push
subl
sub
in
aas
mov
and
mov
rcrb
lret
in
repz
stos
movsb
shlb
pop
and
outsb
or
clc
sarb
fiadds
inc
adc
push
push
xorl
call
mov
test
clc
jae
push
mov
aad
arpl
mov
xor
mov
push
or
scas
loop
xor
jb
pop
mov
jge,pn
stos
imul
les
adc
cmp
ds
jle
aam
fdivr
outsl
xchg
jp
jg
ja
mov
cmp
fcompl
test
xchg
jp
or
xchg
insb
cmpsb
out
mov
push
in
insl
inc
aad
mov
cmpb
dec
xchg
ja
in
jns
mov
xchg
lods
xchg
lods
or
pop
pop
out
inc
aaa
mov
scas
mulb
sbb
pop
stos
inc
insb
jns
mov
lahf
add
pop
jecxz
push
pop
repnz
mov
mov
jne
lret
jae
push
dec
lahf
jg
mov
ja
punpckldq
out
mov
xor
jb
ret
inc
push
lcall
lods
test
push
cmpsb
push
cmp
imul
and
imul
stos
or
xor
push
neg
mov
cmp
aaa
fwait
mov
outsb
das
adc
subb
inc
add
ret
or
stos
pop
movq
ret
xorb
push
or
rclb
loopne
cmpsl
mov
pop
aad
xchg
mov
push
xlat
push
in
cmpsb
mov
aaa
fstl
pop
loopne
in
cmp
jae
cwtl
je
mov
mov
dec
bound
lret
push
lret
aaa
pop
mov
ja
mov
xor
pop
stc
mov
dec
pop
in
or
inc
lods
stos
push
and
sub
and
dec
jecxz
and
scas
fwait
pop
repz
jnp
jecxz
fsubr
xchg
and
pop
dec
leave
add
mov
jnp
stc
mov
inc
sbb
or
leave
test
and
xchg
pop
pop
int
ljmp
pop
dec
fcompl
pop
inc
sub
sub
xchg
arpl
jnp
pop
inc
cmp
jnp
movl
cli
fiaddl
xor
mov
pop
mov
mov
xchg
ljmp
inc
sub
das
test
jg
mov
inc
pop
stc
lret
shlb
rcrb
lods
sbb
cmp
mov
pop
call
cmp
mov
test
and
fwait
sbb
inc
loope
xchg
stos
mov
test
stos
out
jmp
aad
int3
sbb
inc
jnp
adc
or
jns
dec
ss
sar
hlt
mov
js
and
jb
jae
lret
cmpsb
xor
inc
sbb
sti
dec
mov
add
jne
fistpll
hlt
loop
in
adc
sub
add
sub
sbb
loop
or
cli
push
outsl
sbb
loop
arpl
int
fidivs
add
jb
popa
and
inc
adc
iret
ror
xor
push
inc
dec
mov
cmpsb
and
stos
add
je
sbb
add
adc
insl
pop
xchg
inc
jne
push
xchg
dec
or
and
cmp
sbb
or
jae
scas
sbb
dec
repnz
pop
add
fidivrs
push
test
xor
mov
in
sbb
lods
sahf
ljmp
xor
idiv
mov
dec
int3
cmpsb
pop
aaa
inc
pop
iret
popf
nop
inc
inc
out
mov
sub
int3
sbb
mov
cmp
fwait
imul
out
iret
mov
add
push
hlt
dec
ljmp
xchg
aam
xlat
push
leave
sub
xor
xor
xchg
ja
ret
cmp
dec
jg
lods
rorl
inc
sbb
and
mov
out
xchg
push
mov
je
mov
add
mov
testb
xchg
pop
dec
jp
xchg
xchg
cmp
rolb
pop
movsl
and
dec
mov
sahf
cmc
add
cmp
xchg
add
xchg
jns
and
add
fstps
imul
sahf
push
fisttpl
daa
jl
pop
rorl
clc
mov
movsl
stos
jne
add
shlb
mov
xor
or
call
lea
bswap
sub
sbb
int3
mov
out
sub
mov
aam
add
add
mov
push
cmp
push
adc
cs
mov
inc
xchg
push
xchg
jns
out
jl
jge
push
sbb
push
jb
out
mov
nop
cltd
js
aaa
push
mov
movsl
fisttpl
cltd
pop
lds
pushf
lods
dec
dec
inc
mov
cld
movsl
add
mov
pop
mov
ja
mov
add
pop
xchg
adc
add
loope
cli
movsl
or
lahf
jo
cwtl
inc
xchg
mov
xor
adc
inc
or
mov
push
inc
jge
xchg
pop
inc
ret
insb
fisubrl
mov
scas
pop
movsb
cmpl
jne
mov
xchg
cmpsl
arpl
jb
insl
xorl
test
fmul
imul
jo
setl
testb
sub
movlps
cwtl
incl
or
mov
pop
test
sub
enter
mov
das
adc
subb
addl
sbb
mov
addr16
cmp
rcll
insb
sub
inc
push
push
leave
leave
push
into
lods
sarb
cmpsl
sbb
xor
xchg
in
cmp
into
das
lods
xor
inc
dec
sbb
xor
adcl
imul
rorb
dec
pusha
lods
cli
arpl
rcll
in
dec
lahf
dec
sti
pop
mov
outsb
and
sbb
adc
gs
add
mov
mov
sub
sub
dec
push
out
mov
into
dec
cmp
adc
push
loop
adc
pop
scas
jbe
ficoml
jno
jb
shlb
lock
repz
call
cwtl
dec
xchg
xchg
and
sub
scas
lea
or
mov
addr16
int
aam
add
jle
into
jmp
cmpsb
adc
dec
push
int
dec
fisttpl
stos
jmp
mov
xorb
mov
lods
pop
dec
fcmove
int3
mov
mov
imul
jl
lods
inc
xor
cmp
iret
orl
sub
xchg
mov
and
and
lods
sti
into
cmp
or
push
or
sbb
sub
fsubp
loope
lsl
cwtl
fnclex
and
pushf
iret
push
xor
mov
add
pop
add
pop
dec
jp
out
dec
ja
cmp
insl
rcr
fucomi
cmpsb
cmc
mov
jge
mov
push
scas
cmp
imul
das
jmp
jne
jecxz
mulb
outsl
dec
shll
cmp
push
mov
das
or
xchg
fdivr
pop
lods
jo
loope
jg
xor
jp
push
mov
aas
int3
mov
pop
pop
jecxz
inc
in
push
sbb
mov
push
clc
adc
fiaddl
cmp
dec
es
mov
inc
sub
sub
push
iret
iret
lahf
fpatan
pop
xchg
xchg
out
xlat
adc
mov
push
iret
pop
scas
pop
add
dec
es
add
cmp
and
outsl
js
out
jp
jg
ret
sbb
inc
movsb
mov
pop
sub
daa
cmp
push
inc
sbb
xchg
iret
xlat
mov
leave
cmpsl
or
addl
mov
faddp
or
stc
enter
xor
cmp
pop
add
popf
add
cli
stos
jno
cmc
dec
rolb
xor
clc
jecxz
xor
fstpl
aaa
scas
popa
pusha
jne
rcll
sbb
out
inc
push
adc
and
adc
add
lcall
mov
fcompl
pusha
jg
sbb
rcll
push
subl
in
xor
adc
add
and
int
aas
daa
inc
push
inc
push
mov
bound
sub
sbb
add
pop
mov
sbb
nop
dec
ficompl
lds
cld
rolb
add
fimuls
xor
mov
push
notl
aaa
adc
sbb
fwait
dec
cmpsl
repnz
movsb
sub
out
mov
notb
pop
rdtsc
xchg
mov
fs
pop
cwtl
jno
ret
dec
scas
das
rorl
dec
addr16
push
pop
and
pop
fistpll
cmp
lret
dec
mov
test
call
sbb
int
sbb
scas
icebp
cmp
test
mov
lods
pushf
aam
mov
mov
negl
lcall
jnp
fdivrl
cltd
stos
icebp
and
xor
cmc
leave
jecxz
mov
xor
jecxz
ret
lret
adc
fisubrl
adc
jl
aam
mov
mov
cwtl
ret
mov
lcall
dec
jg
popf
lret
popf
pop
dec
push
xchg
xchg
sti
clc
stc
and
xchg
dec
jne
jb
ds
jbe
loope
jns
in
orl
mov
arpl
pop
iret
xchg
movsl
pop
jmp
dec
dec
call
scas
add
out
mov
xor
lea
push
pop
test
and
arpl
ljmp
mov
mov
icebp
inc
jg,pn
imul
jl
add
movsl
xchg
stc
push
shlb
or
pushf
insl
imul
out
push
xor
sbb
dec
int
sbb
pop
xchg
je
ss
push
loopne
xor
jbe
add
mov
dec
sub
int3
add
push
loop
in
es
stos
cmpb
pop
imulb
cmp
fwait
xlat
sti
xor
sarb
or
sbbb
xchg
push
sub
inc
inc
jmp
sti
mov
dec
outsb
add
cmpsb
sub
cmpsl
pop
cmp
ret
pop
shrb
addb
lods
adc
dec
outsb
push
xchg
cmp
push
dec
adc
jne
movsb
push
lret
popf
cwtl
push
ljmp
rcr
movsl
in
or
fstpt
insl
push
xlat
jle
shll
sbb
enter
loope
rcrb
cmp
out
ret
dec
push
dec
jnp
int
addr16
xor
outsl
xor
push
aaa
sbb
dec
fdivs
pop
loopne
fsubr
push
mov
mov
xor
dec
sbb
outsl
fiadds
ljmp
xor
lods
pusha
pop
ss
xor
cmpl
xchg
jb
insb
sub
add
data16
je
mov
mov
sbb
gs
sbb
push
lret
cmp
fisubl
ret
hlt
in
push
out
pop
mov
xchg
call
nop
sub
add
das
cmp
xchg
mov
dec
or
ret
pop
stos
outsb
mov
push
xor
outsb
mov
xchg
leave
xchg
add
dec
out
xchg
outsl
shll
scas
scas
mov
push
jne
dec
adc
push
clc
xlat
inc
mov
xor
stos
shr
inc
in
mov
mov
sarl
divb
std
pop
sbb
in
testl
jns
and
push
je
or
pop
and
pop
push
inc
rol
fdivr
xchg
jl
repz
hlt
and
mov
ljmp
arpl
ret
testb
dec
shr
fnsave
fiadds
jns
in
adc
mov
rcr
jae
jne
outsl
scas
xlat
mov
lret
aaa
mov
mov
jns
test
pop
adcb
adc
xchg
adc
inc
pop
fdivrl
xchg
rcr
pop
clc
jno
incb
xchg
cmpsb
sub
das
push
cmp
push
iret
xor
xor
add
ret
ret
pop
cmp
jp
or
dec
jge
stc
cmp
push
mov
ss
mov
scas
jbe
pop
mov
dec
aam
shll
push
dec
daa
mov
pop
ja
mov
add
aad
and
jp
cmp
xchg
ret
dec
cmc
dec
cmp
sub
xor
pop
mov
add
push
jne
xor
xor
in
out
rclb
jl
lret
or
movsl
push
and
insb
sub
sub
mov
in
aam
mov
push
push
mov
insb
dec
aad
fstpl
push
xchg
mov
in
push
repz
xchg
rorb
sub
jb
lds
cld
xchg
sbb
mov
lods
lods
andb
xor
or
setno
pop
stc
xchg
in
or
outsl
adc
in
jmp
push
sbb
fcmove
xor
andl
mov
xchg
xor
pop
sub
push
test
hlt
fwait
nop
dec
out
cli
cmpsb
push
jmp
ljmp
setbe
loope
fnstsw
popf
mov
mov
jmp
add
mov
hlt
xchg
xchg
and
shl
jno
repnz
jae
push
jmp
rorl
movsl
mov
dec
sub
jg
ljmp
fistl
and
ss
sub
xor
xchg
movsl
test
lahf
inc
cmpl
push
call
pop
cmp
xchg
xor
and
and
shrb
aam
fiadds
adc
pop
inc
inc
push
movsl
or
push
mov
xchg
test
pushf
xchg
or
or
or
xchg
push
test
loop
nop
xchg
mov
jg
mov
mov
fucomip
mov
pop
and
testb
mov
fisubs
cli
pushf
outsb
loope
cmp
cmpl
lcall
xchg
clc
mov
add
push
mov
sbbb
lret
outsb
rorl
out
mov
cmp
repz
pop
fxtract
mov
push
cli
add
popa
jb
pushf
xchg
subb
dec
push
xchg
imul
mov
pusha
shl
and
mov
arpl
rclb
subb
fbstp
mov
xchg
lgdtl
nop
mov
cmp
pop
sub
jg
or
inc
push
adc
rcrl
mov
mov
cmp
cs
pop
mov
xor
pop
xor
lahf
pop
mov
xchg
mov
jmp
clc
adc
jno
push
popa
mov
add
std
ss
clc
ljmp
mov
inc
or
mov
ds
push
ja
pop
xchg
outsb
idivb
sub
inc
je
jl
jmp
imul
cli
push
cmpsl
lahf
ret
xor
in
jne
xor
jbe
out
pop
loope
pusha
rorl
xchg
ficomps
notl
out
jl
insb
pop
test
push
inc
jl
jne
outsb
mov
icebp
jle
xchg
out
out
mov
mov
xor
xchg
iret
xor
enter
cmpb
mov
or
addr16
xlat
sub
sbb
push
lret
mov
sahf
push
push
dec
lods
fistl
pop
lea
call
jbe
xchg
or
fwait
pop
dec
xor
or
mov
dec
mov
loop
cs
xchg
mov
pop
pop
scas
xorb
cmpsl
push
dec
mov
jns
push
ljmp
mov
aaa
mov
int
mov
hlt
or
push
dec
rcll
fistps
or
pusha
in
or
jg
jmp
and
push
rorl
cwtl
repnz
test
jb
in
pop
dec
pop
and
and
pop
lcall
and
pop
cmp
in
jmp
cld
fwait
ljmp
and
cmpsb
sbb
and
rorl
mov
mov
pop
rclb
das
mov
adcl
jbe
out
inc
sahf
pop
fdiv
pop
mov
cwtl
mov
adc
int3
pop
push
cmp
jge
dec
shl
cmp
js
sub
les
jnp
stc
repz
daa
push
mov
shll
jne
mov
lods
mov
test
mov
enter
add
pusha
pop
mov
push
sbb
add
dec
int
jmp
dec
add
fwait
pushf
sub
orl
dec
pop
mov
cltd
mov
pop
int
gs
cmp
jnp
sbb
lahf
pop
int
lods
aas
lds
cmpb
pop
sbb
mov
loop
mov
mov
push
and
xchg
adc
ljmp
mov
sbb
cld
stos
cmc
jmp
mov
xchg
and
fldcw
fidivl
push
pusha
test
cmpsl
adc
mov
inc
mov
and
mov
lds
subl
or
lret
dec
les
sbb
aad
imul
imul
sub
aas
jnp
sub
ror
mov
rorl
fmuls
dec
fldt
push
mov
in
sbb
mov
pop
push
jp
lods
mov
pop
iret
xchg
popa
fwait
mov
movsl
sub
or
cmc
jnp
ss
fdivp
pop
sub
add
inc
adc
mov
push
mov
in
shll
nop
test
push
mov
popf
sbb
mov
xlat
sti
pop
subl
aaa
push
orb
mov
or
shr
cs
repz
mov
push
lahf
ja
and
pop
xchg
pop
jae
pop
mov
or
pusha
pop
sub
clc
fsts
xchg
lea
pop
mov
movl
jbe
roll
mov
xor
pop
dec
cli
adc
in
xor
or
fnstsw
mov
call
aas
ror
mov
ds
adcb
iret
cwtl
cmp
jl
mov
pushf
loope
and
jnp
and
pop
mov
mov
pushf
and
mov
and
repz
dec
sarl
dec
jo
push
sti
xchg
sbb
xchg
sub
js
testl
aam
and
xorl
clc
lods
js
push
out
pop
rcll
fwait
push
adc
mov
or
cmp
mov
in
or
push
aam
cmc
mov
out
mov
dec
add
stc
arpl
add
or
fs
sti
or
sub
pop
xchg
sub
inc
pop
fisttpl
jnp
adc
dec
mov
jo
fistps
int
out
popf
lods
out
dec
and
push
add
push
ljmp
test
adc
rolb
xchg
push
leave
pop
ficomps
dec
cmp
test
push
pusha
jmp
lods
vpaddsw
outsb
sbb
sbb
mulb
xlat
lret
ss
sbb
push
add
add
out
mov
pusha
mov
frstor
push
fwait
xor
lcall
test
mov
pop
mov
sub
inc
sbb
int
pop
mov
cld
test
xor
ss
in
shrb
out
nop
loope
and
xor
fs
sbb
in
push
mov
mov
xchg
sbb
std
add
or
jnp
mov
xchg
mov
xchg
mov
lret
mov
pop
sbb
dec
dec
and
push
push
cwtl
push
cli
push
dec
pop
frstor
push
mov
leave
mov
shrl
jge
aas
fs
loopne
scas
mov
push
jae
dec
jp
mov
test
and
cltd
sbb
insl
into
inc
push
jb
test
pop
push
add
sbb
dec
mov
dec
push
cmp
cmp
sub
and
icebp
icebp
pop
cmp
je
lret
xchg
cmp
negb
add
jecxz
add
mov
sub
movsl
add
enter
xchg
insl
ret
fisubrs
adc
pop
addr16
std
cmpsl
cmpsb
divl
sub
fninit
jo
sbb
fidivs
into
xchg
xor
stos
arpl
loope
mov
push
jae
out
loopne
sub
std
popa
fcmovne
bound
adc
pop
scas
fcmovnu
subl
push
negb
jge
scas
xchg
sarb
mov
mov
es
and
test
ljmp
negl
sub
adc
cmp
and
mov
repnz
lcall
icebp
orl
and
fmull
mov
push
cmp
test
inc
int
lods
mov
mov
cmpl
xchg
or
pop
movsl
sahf
adc
or
push
jle
lods
inc
jl
sbb
mov
sbb
push
out
dec
out
nop
push
or
jmp
jl,pn
push
sbb
xchg
sub
repz
rclb
sub
iret
ret
xlat
pushf
xchg
xchg
pop
inc
sub
mov
pop
xor
mov
std
repz
icebp
int
pop
cmp
mov
loopne
xor
cmp
jne
ror
lock
mov
dec
fsubs
dec
pop
test
ja
incb
xchg
xor
rol
inc
movsb
subl
mov
outsl
call
dec
enter
and
ljmp
mov
lock
push
sub
mov
push
add
and
gs
pushl
mov
and
and
fcoml
ja
fistpl
mov
and
push
pop
jo
cmp
stos
roll
aad
ret
mov
cmp
jne
nop
inc
cmc
fwait
mov
pop
inc
mov
adc
add
jb
icebp
inc
xchg
pop
mul
cmp
sub
lods
adcl
jmp
ds
outsl
mov
push
ss
or
iret
dec
cmpsl
ds
stos
jge
cmpsl
add
imul
pushf
aad
add
das
lods
shl
pop
inc
ljmp
pop
add
mov
push
and
mov
cmp
decl
or
mov
cmp
je
jmp
jb
or
mov
mov
push
jge
or
jp
cmp
adc
lcall
aam
das
cmp
aam
inc
sub
mov
das
lahf
jb
pop
or
lret
jns
mov
jne
shll
jne
movb
mov
std
mov
pop
icebp
gs
fadd
sbb
mov
xchg
loopne
dec
jne
lcall
push
xchg
test
sub
adcb
idivl
insl
pop
loope
mov
xchg
aas
push
sub
lahf
dec
jp
pop
and
aam
sub
gs
adc
xor
and
mov
pop
int
sti
in
div
mov
cmp
sbb
pop
jnp
jle
mov
cmp
notl
add
adc
imul
jecxz
lahf
jg
mov
or
mov
fmuls
into
lcall
std
in
pop
add
bound
orl
adc
or
xor
scas
xchg
in
imul
jg
jno
dec
inc
js
xor
push
scas
push
mov
out
pop
push
aam
xor
dec
mov
enter
jg
jge
stos
push
or
pop
sbb
xchg
mov
andb
pop
jnp
mov
loop
inc
je
cmc
data16
enter
cltd
pmulhuw
cmp
xchg
sub
scas
add
je
pop
stos
pop
sbb
paddw
cmp
mov
jecxz
scas
push
icebp
or
in
aas
nop
push
push
mov
and
popa
repnz
outsb
imul
sub
loop
mov
jmp
mov
cld
cs
cltd
mov
loopne
mov
jmp
or
xor
cmp
push
dec
sub
aas
and
jo
and
pop
xchg
inc
jb
stos
mov
push
rclb
inc
push
jmp
sbb
mov
sbb
jle
cmp
enter
sub
add
fcomp
cmp
and
popa
add
pusha
lods
jno
adc
xor
xor
push
cmp
jmp
sub
popa
rolb
out
jo
pop
adc
mov
push
add
iret
xchg
push
imul
inc
notb
dec
push
dec
fisttpll
lret
cltd
sbb
outsb
push
rolb
sti
dec
inc
push
sub
mov
dec
nop
inc
js
fstpt
movsl
or
repz
inc
push
push
ret
daa
popf
cmp
cmc
push
enter
xchg
in
xor
jo
shll
dec
xor
fisttpl
pop
mov
or
mov
lcall
mov
add
int
inc
jno
xor
subb
jno
movsl
in
pop
hlt
sbb
mov
jg
xlat
mov
xchg
mov
add
pop
bound
and
hlt
mov
lea
lods
jmp
in
xchg
rolb
pop
push
imul
jo
popa
or
mov
fs
inc
loope
pop
out
xchg
adc
add
dec
push
sbb
inc
push
xorl
imul
arpl
inc
sbb
das
mov
sub
pop
mov
mov
mov
imul
notb
inc
das
subb
fsubrs
sbb
lcall
test
push
pop
cmpsl
xchg
sbb
imul
icebp
pop
pop
pop
and
shlb
pop
jmp
imul
hlt
pop
out
and
unpckhps
pmulhw
xchg
adc
jge
adc
adc
shl
pop
cltd
repz
mov
repnz
roll
xchg
js
in
ja
addr16
mov
js
xorb
add
les
or
pop
inc
or
mov
addl
jo
iret
xlat
inc
add
add
mov
movl
mov
js
fisubrs
ret
push
lods
dec
mov
and
jle
sub
jo
in
cmp
pop
test
aam
push
dec
xchg
mov
mov
sbbl
ret
inc
push
mov
add
pop
mov
mov
jo
xchg
and
out
stc
adc
popa
jns
xchg
sbb
arpl
jb
daa
jge
add
inc
xchg
lods
cmp
sub
out
push
cmpsb
les
rorb
mov
data16
adc
inc
pop
jns
and
jb
xor
cwtl
lods
xor
iret
xchg
lret
jg
leave
or
or
jnp
cwtl
stos
fnsave
dec
dec
in
jbe
push
and
mov
aas
add
push
sub
add
movsl
loope
cmp
fidivs
lods
pop
xor
xor
bound
aaa
cmpb
xchg
or
les
ficoml
int3
cmpsl
ljmp
add
ffree
inc
xchg
cltd
dec
adc
pop
mov
ljmp
lods
ss
idivb
jae
sub
pop
jbe
jo
inc
and
lcall
out
push
test
or
rol
cmp
popa
fsubs
pop
inc
pop
adc
out
in
dec
push
adc
fwait
and
push
outsl
arpl
movsb
or
pushf
lods
gs
jno
xlat
add
clc
sub
int3
jns
push
dec
cli
sbb
sub
sub
faddl
xchg
pop
sbb
mov
mov
xlat
jp
int3
or
sti
fadd
movsl
and
pop
sub
icebp
jl
movsb
stc
mov
les
std
repnz
cs
shrb
xor
inc
mov
cli
inc
add
mov
mov
pop
pop
outsl
mov
sub
push
sbb
jmp
lds
out
aaa
data16
data16
xchg
stos
jnp
xor
es
mov
lock
movsl
das
cli
sti
inc
loopne
xchg
push
mov
xor
into
jne
mov
movsb
push
pop
ja
mov
adc
adc
cmp
out
loopne
mov
adc
jnp
cmp
into
iret
xchg
sub
xor
jno
int
fadd
dec
into
mov
mov
fld
bnd
cmp
jge
cli
fistps
pushf
mov
add
daa
mov
std
xchg
pop
sub
pshufw
and
mov
cmp
das
mov
call
lret
into
addl
iret
dec
adc
ja
xchg
mov
inc
ds
fistps
incl
es
je
and
arpl
imul
cmpsb
dec
in
xchg
sub
loop
fidivrs
inc
cmp
or
cli
std
pusha
jne
mov
fcompl
and
insb
pop
sub
arpl
loop
xor
movsb
rorb
shlb
push
ret
fsubrp
xchg
jno
add
pusha
test
pop
pop
mov
push
push
fwait
or
and
add
aaa
roll
decb
aas
call
mov
inc
add
ds
jne
xor
dec
jae
mov
lret
jg
sub
xlat
xchg
outsl
lahf
inc
cmp
push
adc
adc
adc
sub
les
sti
cmp
dec
mov
pop
dec
xchg
sub
sbbl
lret
test
inc
lea
xchg
add
adc
mov
jb
or
adc
inc
cmpl
aas
mov
xchg
mov
or
pop
daa
inc
not
nop
fwait
testl
xor
scas
popf
push
sub
cld
add
adc
bound
cmp
dec
inc
icebp
fsubs
xlat
insl
stos
decb
jno
adc
ret
mov
jns
xorl
sbbb
into
outsl
fsts
sub
ret
stos
cmp
add
jmp
lock
inc
sub
sub
mov
and
xlat
push
outsb
dec
movsl
mov
push
in
push
incb
add
pop
add
xor
xchg
test
and
mov
xchg
out
icebp
jge
and
pop
adc
addl
cmpl
jmp
into
pop
mov
out
int3
jnp
inc
push
jae
xchg
sub
pop
cmp
lret
and
xor
or
xchg
inc
inc
imul
inc
movsb
jl
scas
push
adc
ret
stc
lret
shlb
sub
and
pop
icebp
adc
and
push
ds
mov
lods
rorl
sarl
mov
lea
daa
ficomps
add
jecxz
dec
inc
fwait
out
call
jl
int
in
outsl
out
sbb
dec
mov
xor
xchg
pop
pop
loope
paddb
test
and
or
mov
or
sti
inc
je
pop
out
pop
ss
lods
mov
jne
dec
ret
mov
test
pusha
mov
cmp
jge
jns
arpl
std
xchg
jp
and
ret
addr16
cs
movsl
in
sahf
ss
push
add
loop
adc
fisubrl
jle
mov
push
adc
nop
sub
notb
lret
ret
mov
dec
fucom
dec
dec
cmpsb
sbb
push
aam
sub
imul
pop
pushl
dec
test
popf
jecxz
imul
cmp
dec
scas
and
pusha
subl
jns
paddusw
shlb
or
iret
sub
cmpsl
pop
int
fsubrp
ljmp
mov
int3
imul
and
test
cli
data16
jns
ljmp
data16
call
jno
sti
or
jmp
push
imul
mov
inc
fucomp
sub
mov
xor
jp
arpl
aas
inc
pop
jns
fmuls
adc
ja
xor
ret
cmp
arpl
addr16
daa
cli
pop
sarl
xor
and
mov
cmp
inc
cmp
fs
lret
fistpll
inc
out
jl
bswap
or
inc
sbb
ja
pop
xorl
jne
es
jmp
rcll
call
jl
shll
dec
push
dec
shlb
fidivl
sahf
and
xchg
and
loop
loop
or
adc
jge
mov
xchg
mov
jp
pop
call
mov
mov
push
insb
jge
rcrl
pop
add
lcall
cmp
arpl
mov
push
adc
dec
mov
pusha
enter
jl
xchg
jne
mov
out
outsb
ds
pop
ljmp
push
test
les
movl
andb
popf
rcl
cmp
push
mov
stc
inc
pop
sbb
mov
aam
push
jmp
repnz
xor
gs
push
sbb
fdivr
out
ror
jg
jo
rcll
xorb
outsb
stos
push
aad
scas
mov
out
xchg
pop
fwait
sub
or
loopne
std
cmp
adc
ds
add
cmpsb
pop
pushf
aad
jg
mov
adc
xor
inc
or
xchg
daa
push
int
shrl
pop
adc
daa
adc
jge
pop
sahf
cs
mov
lret
pop
or
dec
pop
xor
into
mov
pop
test
enter
mov
mov
out
cli
lock
lahf
jge
aaa
cmp
inc
inc
addr16
jne
in
cld
inc
cmp
cwtl
lcall
into
pop
mov
test
into
mov
xorl
push
lahf
inc
mov
pop
popa
lret
insb
fwait
or
push
mov
es
lock
inc
jle
maxps
cmp
loop
imul
into
sub
sbb
notl
add
xchg
stos
scas
xchg
cmp
xchg
je
pop
test
mov
aam
ss
neg
push
jnp
mov
leave
mov
aam
outsl
mov
mov
mov
in
mov
out
call
jno
insl
iret
lods
mov
faddl
dec
mov
shll
ljmp
push
push
scas
xchg
stc
popa
int3
insb
xchg
jle
data16
pop
out
mov
lcall
inc
mov
adc
mov
push
push
add
jmp
movsl
fcompl
mov
mov
shll
cmp
mov
movsb
dec
jecxz
sbb
inc
negl
and
and
es
cmp
push
scas
inc
sbb
pushf
loopne
test
add
jge
cmp
sbb
mov
into
aas
lcall
push
loop
adc
int
add
pushf
cmp
call
mov
sti
mov
pop
jp
add
out
outsb
xlat
push
dec
mov
or
xlat
test
xor
in
stos
push
mov
outsl
int3
push
repz
dec
mov
jmp
mov
mov
xor
stc
sub
loop
mov
inc
lret
insb
lds
mov
mov
movsb
mov
mov
mov
scas
cmp
aaa
and
push
xchg
fists
dec
push
jns
adc
mov
fs
add
sarl
mov
lods
es
jge
scas
adc
cmp
sbbb
add
lcall
or
idivb
adc
mov
leave
ljmp
sbb
jle
mov
jle
dec
lret
cmc
pop
movsb
test
inc
or
and
dec
cs
rclb
adc
adcl
movsl
jle
imul
xchg
xchg
lock
stc
stos
lods
pop
mov
int
or
or
jbe
daa
stos
jle
mov
pop
or
incl
call
iret
xchg
sbb
arpl
sbb
xchg
add
push
push
cwtl
pushf
stc
xchg
and
xchg
mov
in
out
fisttpll
stos
movb
and
push
mov
jp
shll
roll
rorl
call
lcall
sbb
lds
sahf
inc
adc
xor
add
test
pop
sub
cld
js
in
push
std
lods
ret
cmp
js
add
jbe
mov
lret
lock
fbld
repz
or
jle
movsl
cs
jle
popf
mov
bswap
andb
cmp
cmpsl
and
repz
scas
ds
rcrw
mov
mov
push
push
push
mov
in
cmp
pop
daa
mov
push
mov
mov
add
fisttps
stos
aam
pop
cld
addr16
movb
ljmp
inc
sbb
mov
push
sarl
lods
imul
lret
push
xchg
mov
mov
adc
pop
out
jbe
add
lods
mov
adc
into
mov
test
dec
add
or
sarb
cwtl
rcl
cs
gs
mov
aam
and
lods
addr16
gs
cmpsb
notb
push
cmp
test
fstps
hlt
test
mov
movsb
and
cmp
rcrl
sub
cmp
movsb
and
pushf
xor
clc
movsb
imul
inc
xchg
mov
xor
shrb
jle
xchg
pop
adc
dec
adc
je
sub
cmc
mov
xor
mov
fsubrl
in
call
sahf
in
fnstsw
popa
rorl
mov
ret
pop
es
lcall
push
xor
scas
xchg
mov
dec
push
clc
popf
pop
xorl
adc
scas
or
pop
jno
cwtl
or
stos
mov
fwait
mov
mov
test
and
jmp
mov
ss
and
xchg
loope
mov
xor
pop
mov
fwait
xor
pushf
fldt
leave
cmp
gs
dec
daa
or
jl
xor
mov
dec
or
add
sub
and
cmp
sub
loop
mov
xchg
enter
test
dec
xchg
aaa
addl
push
dec
shr
add
ja
mov
mov
dec
cmp
mov
cmp
mov
jecxz
hlt
push
xor
adc
popf
rclb
in
out
push
das
sahf
mov
xlat
pop
icebp
add
lods
cmp
inc
in
cmp
sbb
sbb
fcoms
pop
cmp
xor
insb
jle
xorl
fadd
cmp
jl
cli
shl
jmp
jmp
mov
dec
mov
roll
jns
out
dec
push
and
leave
stc
jb
jns
xor
jnp
mov
sub
or
in
out
mov
mov
decb
lods
push
insb
jge
dec
dec
or
aam
pop
lods
pop
push
fwait
pop
movd
inc
or
sub
mov
xchg
sbb
mov
sbb
or
xchg
mov
xchg
sub
stos
jae
adc
cs
mov
gs
in
push
test
addr16
sbb
pop
dec
js
lds
pop
fmuls
inc
xchg
imulb
lcall
fdivl
cmp
fcomp
xchg
lds
cmp
je
test
jo
pop
inc
jmp
xchg
scas
gs
loop
xor
jo
jo
sahf
repnz
mov
cmp
pop
sbbb
out
mov
xchg
repnz
lds
int3
enter
fcomip
jl
add
stos
inc
addl
mov
add
pusha
cs
ret
into
stos
add
out
xor
jecxz
movsb
sarb
adc
mov
mov
or
notb
xchg
push
mov
sahf
lock
xchg
jo
es
jne
xchg
dec
nop
lret
rol
test
push
imul
and
insl
imulb
cwtl
shlb
stos
jecxz
rolb
push
dec
aas
jne
cmp
ljmp
loope
xchg
dec
cmp
sub
inc
aam
inc
fsubr
outsl
movsb
cmp
jns
and
add
cltd
hlt
jb
xor
fisttpl
jbe
mov
daa
sub
mov
lds
jae
xor
lods
aam
sub
arpl
popf
mov
sub
loop
sub
icebp
inc
pushf
cld
outsl
out
fs
xchg
fistps
adc
xor
sbb
std
ljmp
lock
jle
sarl
jecxz
les
movsb
repz
lods
stos
shll
mov
cld
lea
jp
xor
xchg
call
adc
push
repz
adc
pop
jge
pop
dec
adcl
mov
clc
mov
xchg
andb
mov
fdivl
in
hlt
aaa
jae
jge
popa
mov
icebp
dec
pop
sub
inc
movsb
pop
ret
ja
inc
xchg
lcall
stos
out
dec
or
sti
inc
inc
add
inc
hlt
enter
jnp
jl
out
push
mov
aad
test
pop
in
out
addr16
fs
pushf
dec
xchg
test
cmp
popf
xchg
and
cli
adc
loop
inc
lds
mov
repnz
inc
outsb
test
nop
inc
scas
lock
lret
popa
pop
lea
inc
or
jmp
stc
lea
addr16
stos
in
insb
in
popa
sbb
outsb
mov
inc
cmp
mov
xor
in
sub
rdmsr
aas
xabort
incl
or
mov
test
add
push
xchg
add
sahf
mov
loop
movsl
jle
movl
adc
leave
cwtl
sti
xor
pushf
mov
mov
jp
out
pop
dec
cmpsb
sub
mov
xchg
stos
jge
dec
stos
xchg
jecxz
sahf
rorl
mov
scas
add
jp
fldl
dec
jg
ret
mov
rcll
gs
add
call
sbb
cwtl
lock
jmp
fldt
sub
mov
rclb
sub
ja
lahf
lds
stc
or
stos
or
mov
das
jmp
in
mov
test
xorl
fbstp
test
push
mov
lahf
jae
sti
in
inc
add
mov
mov
xchg
push
aas
fnstcw
cmpsb
xchg
int3
int
imul
mov
fistpll
inc
call
test
jge
push
mov
das
hlt
push
mov
jnp
dec
cmp
stc
jb,pt
xchg
loopne
lret
ds
pop
xchg
insb
mov
repz
daa
dec
jmp
jb
lods
fildl
xchg
xchg
and
cmp
icebp
lahf
xchg
mov
fidivrl
lods
int3
movsb
or
dec
mov
sbb
loop
stos
jg
sbb
fcmovbe
ret
push
imul
sbb
mov
cmp
xor
sbb
imull
mov
cmp
pop
mov
jl
sbb
jns
jl
cwtl
rorb
cmp
sub
pop
mov
test
test
stos
xor
mov
addr16
not
push
lret
negl
xchg
or
cmc
push
push
push
aas
pop
stc
fsubr
xchg
jb
and
stc
test
dec
out
in
and
in
pop
inc
imul
push
push
and
and
add
pop
xchg
add
mov
out
add
repnz
sub
push
cltd
or
lahf
add
lods
mov
sub
je
jp
xchg
call
add
mov
xor
cltd
inc
jno
pop
inc
jbe
cmpb
sbb
xor
sub
fwait
xchg
stos
jbe
pop
in
ss
add
pop
ja
add
xor
mov
fwait
cmp
mov
mov
out
addr16
sbbb
mov
ljmp
adc
mov
dec
in
leave
ret
out
add
decb
mov
test
cmpsb
adc
push
ss
insb
pop
push
jmp
pop
sub
dec
icebp
into
xchg
ret
and
shl
rcrl
pop
add
aam
sub
insb
jle
jae
mov
lea
cwtl
jne
into
cmc
adc
cmpsb
int
outsl
fwait
or
dec
gs
faddl
adc
fnsave
aas
or
jecxz
inc
lods
dec
pop
pop
mov
xchg
shrl
in
out
shrb
loope
inc
lock
adc
cmpsb
gs
xlat
iret
bound
jbe
lock
xchg
push
pop
sbb
push
aaa
addr16
movsl
dec
loopne
jmp
scas
adc
push
icebp
jae
jmp
and
cltd
imul
ret
lret
rolb
ret
pop
fadd
rorl
lock
jbe
dec
push
fadds
imul
xor
sti
add
jne
or
ljmp
xchg
std
call
bound
push
out
js
icebp
outsl
aad
jns
mov
add
or
add
sub
stos
and
into
arpl
push
pop
icebp
movsb
jle
lods
repnz
add
jl
int
in
sub
scas
into
fistl
pop
sbb
mov
push
pop
out
sub
ja
mov
pop
sbb
sbb
jne,pt
fiadds
sbb
add
out
sbb
incb
jl
scas
mov
sub
faddp
xor
inc
lcall
insl
jp
frstpm(287
rorb
pop
aaa
aad
add
mov
aaa
sbb
xor
dec
jnp
push
int
sub
and
mov
das
pop
out
mov
mov
push
xor
add
inc
xor
ret
push
popa
inc
out
fbstp
cmc
cmc
sub
pusha
gs
call
ret
cs
out
or
mov
ja
push
std
inc
insb
into
sbb
lret
cmp
mov
add
sbb
mov
movsb
mov
push
mov
pop
loop
pop
hlt
and
push
sub
adc
lea
pop
lret
in
in
push
push
test
hlt
push
addr16
or
dec
js
lcall
pusha
pop
cli
lds
sbb
pop
sub
dec
in
jmp
hlt
push
pop
rolb
lret
mov
adcb
loope
cld
sbb
in
push
cmp
xchg
jmp
sbb
dec
mov
xorb
mov
aaa
adc
fmull
sub
js
push
inc
mov
push
add
sbb
xchg
jmp
sbb
sahf
xor
sbb
xchg
cld
int3
je
jmp
movsb
jecxz
sbb
cmp
insb
roll
adc
dec
dec
mov
sahf
mov
dec
loop
push
jbe
sub
dec
and
scas
stos
jp
xor
mov
cmpl
clc
add
sti
out
mov
into
out
mov
mov
out
les
sbb
jge
popa
push
cmp
xchg
mov
mov
les
int
sbb
cli
lret
jecxz
and
lcall
cmp
ret
mov
nop
lret
sbb
je
cmp
add
mov
inc
mov
ds
loopne
mov
sarl
mov
jp
jb
and
ret
leave
sub
scas
in
lods
jns
shlb
lods
cld
imul
lahf
insb
inc
fadds
inc
incl
sti
push
leave
pop
mov
imul
lret
and
aad
loope
icebp
iret
or
push
jnp
divl
jle
xor
mov
mov
jno
movsb
out
lds
popa
mov
jecxz
les
cmp
and
imul
loop
popf
fsubs
testb
out
scas
xor
xor
inc
cmc
inc
andb
out
push
mov
mov
popf
adc
lret
cld
daa
push
cmp
jecxz
add
sub
insb
dec
hlt
sub
fsubl
pop
and
adc
cltd
or
sub
cmpsl
jbe
ret
popa
out
mov
loope
cmp
or
mov
or
jmp
fcompl
aam
icebp
outsl
es
fs
add
dec
clc
in
arpl
fnsave
imul
cli
cmpsb
or
fistpl
movsl
jmp
and
sub
push
inc
or
adc
arpl
test
xor
fcmove
daa
ljmp
gs
xchg
call
movsb
mov
mov
fs
ret
ja
add
jbe
add
adc
pop
mov
inc
adc
xor
add
push
movzbl
jo
xchg
jne
inc
sub
mov
enter
inc
test
push
pop
ret
pop
sub
sar
ret
movsb
cmp
addr16
insl
adcl
inc
and
adc
sbb
into
mov
loop
mov
adc
or
cmp
mov
xchg
pop
push
jge
call
pushf
adc
cltd
cmp
scas
mov
dec
es
outsb
cs
das
jmp
push
xchg
or
arpl
aaa
xchg
mov
in
push
adc
icebp
movsb
mov
push
adc
xorl
and
std
and
sarl
sarl
or
fsts
rcl
fwait
movsl
stos
add
jo
cwtl
and
sub
push
sahf
mov
xchg
ret
andl
cmp
rcrb
mov
mov
cmp
les
bound
adc
mov
jle
push
test
aad
add
xchg
sub
jecxz
jg
mov
inc
push
jbe
mov
dec
xor
sub
sbb
dec
xchg
dec
sti
mov
mov
clc
xchg
arpl
cmpb
loopne
bound
xchg
rclb
cmp
add
dec
xchg
stc
add
mov
rol
into
fiadds
jmp
or
push
sub
enter
xchg
imul
dec
jnp
mov
lret
loope
pop
ret
inc
repnz
int
xlat
sbb
mov
movsb
cmp
pop
cmp
out
jge
push
xchg
icebp
push
xor
movsl
dec
bound
xlat
in
cld
mov
ret
add
bound
inc
push
shll
xchg
lret
sbb
loopne
outsb
jge
rorb
dec
mov
and
jg
ss
in
sbb
arpl
jecxz
xlat
push
repz
cmp
pop
pop
adc
cmc
psubq
mov
xchg
sub
sahf
outsl
push
das
fdivs
in
ret
inc
stos
fnstcw
out
lret
iret
clc
jmp
and
leave
adc
cmp
inc
sub
xor
popa
push
outsb
jmp
gs
pop
pop
mov
iret
test
lds
neg
sbbl
data16
repnz
xor
shlb
jp
mov
push
inc
lds
ret
sbb
xor
testb
dec
rclb
imull
in
test
les
mov
cmp
inc
mov
outsl
jo
scas
mov
jae
fdivl
pop
jno
loopne
sbb
sbb
out
movsl
cmp
hlt
lcall
xor
out
add
es
paddusw
cmpb
and
in
clc
inc
dec
fcompl
addr16
jno
gs
lret
pop
enter
out
dec
sti
add
jo
aad
rcll
arpl
int
add
inc
or
inc
mov
cwtl
in
push
jns
aam
mov
pushf
shll
and
mov
cwtl
or
cmpsl
xchg
jns
mov
fwait
lds
ja
outsb
adc
mov
and
xchg
cmpsl
or
test
xor
mov
xchg
mov
sub
add
mov
sub
add
mov
inc
add
add
pop
inc
mov
clc
mov
scas
hlt
mov
jb
adc
xchg
cmp
ss
push
add
fcomps
fnsave
push
mov
inc
jo
call
mov
xchg
add
popa
jno
pop
stos
movsl
mov
loopne
pop
xor
movsl
repz
xchg
add
test
mov
cmpsb
sub
jbe
xchg
popa
xlat
fiaddl
test
and
push
inc
out
cs
test
push
shlb
fld
push
cmp
stc
ffreep
add
push
mov
gs
aam
pop
jg
aam
xchg
mov
cltd
jmp
idivb
mov
dec
shl
into
scas
sub
rcll
mov
xor
cmpb
imul
jb
mov
data16
push
push
add
mov
push
pushf
popf
mov
lret
int
scas
push
pop
test
loop
xchg
ret
lret
fs
gs
mov
mov
sub
push
mov
sbb
jecxz
in
and
test
negb
xchg
inc
les
mov
sbb
jmp
stos
pop
scas
aam
cmpsb
pop
cmc
jg
icebp
push
or
cwtl
dec
jl
mov
add
lock
hlt
push
jno
sub
xchg
xchg
movsl
cmp
adc
cmpsb
jmp
or
pop
dec
inc
sub
std
fxam
out
pop
mov
mov
inc
fsubrl
push
push
bound
test
cltd
in
jns
cmpsl
je
lds
pusha
and
out
adc
std
call
mov
mov
sub
and
stc
sbb
and
loope
dec
mov
in
sarb
sahf
jg
sub
cltd
orb
cld
repz
div
rorl
mov
and
cmpsb
xlat
cmp
cmc
add
mov
out
mov
jl
xchg
outsl
loop
mov
repz
or
aad
dec
mov
push
pusha
dec
xor
dec
jns
xor
inc
aad
jmp
sarl
adc
shll
jo
and
push
xchg
js
ret
dec
loopne
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fsts
mov
cmp
or
jp
xchg
inc
and
loop
cmpsb
sub
adc
inc
in
sub
movsl
push
inc
stos
mov
mov
sub
test
loop
jle
cmpb
cmc
test
cld
sarb
cmp
insb
and
jle
lods
rclb
jge
insl
stos
push
adc
std
out
cmp
lods
xchg
xchg
repz
sub
repnz
cmp
inc
push
pop
test
adc
mov
andb
rorb
push
mov
adcl
mov
int3
shll
stc
xor
and
in
xchg
dec
cs
dec
outsb
out
jns
add
es
cwtl
lret
dec
das
or
push
add
in
cld
ret
add
mov
push
jl
loope
call
and
mov
pop
or
pop
mov
gs
jne
in
bound
xchg
add
mov
repnz
in
jno
push
or
fs
jl
and
xchg
inc
cmp
add
mov
pushf
jo
xor
mov
stos
movsl
push
xchg
shl
xchg
xor
adc
add
lods
and
cmc
sbb
mov
repnz
inc
add
jp
push
imul
test
aad
sub
mov
es
sahf
push
push
cld
add
pop
sbb
test
insb
xor
aam
or
icebp
mov
addr16
push
pusha
mov
or
lods
mov
leave
clc
popa
icebp
pushf
ja
mov
sub
pop
movsl
insb
aas
std
mov
mov
mov
mov
in
fdivrl
or
fnsave
daa
jns
repnz
inc
es
dec
in
movsb
cmp
pop
test
and
mov
aam
push
nop
jg
imul
shll
cwtl
mov
cmp
lcall
cmpsb
or
xlat
loope
sub
push
xchg
imul
xor
ljmp
push
jp
lahf
in
loopne
mov
jae
js
sbb
cmp
and
fistpll
adc
ret
adc
pop
scas
and
xchg
jle
aas
orb
orl
out
push
push
cs
data16
vshufpd
jle
sub
call
inc
adcl
xchg
icebp
je
mov
mov
pop
push
add
cs
mov
add
sahf
adc
bound
and
test
gs
data16
pop
push
ja
cmp
sub
out
cmpsl
jge
push
jno
in
cmpsb
aam
insb
fadds
dec
stc
mov
movsb
mov
sbbb
inc
xlat
xchg
sbb
jns
jmp
ror
mov
pushf
cwtl
pop
mov
inc
subb
xchg
cmpsb
xor
fdivs
mov
or
enter
cli
in
or
add
les
mov
dec
scas
rolb
jmp
jb
push
mov
xchg
xorl
mov
fldl
cmp
stos
or
cmp
cld
dec
or
fs
jo
ja
in
mov
mov
dec
shr
mov
movl
cmpsl
adc
leave
sbb
shlb
and
dec
pop
fstpt
or
test
jg
jne
insl
aas
mov
lds
ja
add
addr16
inc
call
icebp
shlb
cs
jmp
mov
scas
mov
pop
jle
inc
sub
pop
adc
cmp
ret
add
testl
sbb
mov
js
dec
sbb
sbb
xor
int3
or
ss
arpl
dec
mov
add
loopne
sete
mov
push
inc
hlt
sub
jmp
mov
pop
dec
nop
jl
stos
test
scas
test
mov
mov
jecxz
es
pop
in
jmp
sarb
jns
int3
dec
push
mov
pop
cbtw
fidivs
jecxz
call
mov
xchg
dec
js
mov
sbb
cltd
push
jns
shll
imulb
test
stos
mov
mov
sub
mov
test
jae
push
xor
ss
or
cltd
cmp
sub
dec
pop
cmpsb
test
cmpsl
dec
dec
cwtl
xor
popa
push
jmp
adc
sti
repnz
dec
or
push
mov
movsb
xchg
loope
mov
pop
mov
ret
sbb
test
or
mov
jmp
aas
in
pop
and
pop
xor
movsb
cmp
inc
or
pop
xor
push
lods
inc
add
cmp
xchg
cli
les
cmp
aas
cmp
out
inc
arpl
adc
mov
rorb
mov
outsl
push
sbb
push
inc
cmp
aaa
mov
clc
pop
jns
sbb
das
fwait
inc
mov
mov
les
push
shrl
adc
sub
in
add
pop
xor
xor
cltd
ret
xor
pushf
test
xor
loope
or
insb
insb
ljmp
lods
add
sub
sbb
sahf
out
mov
sarl
syscall
lods
out
pop
mov
and
sub
lods
mov
lret
xchg
xor
stc
repz
adc
push
mov
or
cmpsb
jae
stos
pop
mov
mov
mov
xor
stos
push
mov
xlat
pusha
test
es
pop
es
cmp
pop
sub
stc
iret
adc
rorb
adc
mov
lds
dec
adc
inc
sub
adc
jmp
jae
ljmp
cs
sub
popa
inc
push
cs
cmp
dec
jecxz,pn
xor
mov
mov
jge
lahf
cli
mov
bound
sbb
mov
dec
push
pop
sub
mov
mov
mov
xchg
inc
push
das
add
mov
adc
in
stc
out
pusha
imul
jmp
pop
pop
mov
stos
insl
cs
inc
jns
ffree
jnp
adc
lock
sub
dec
incl
stos
push
xchg
es
mov
lret
leave
nop
outsb
std
and
or
mov
push
enter
jp
mov
push
repnz
in
in
lods
xor
xor
push
cmp
dec
lret
xchg
test
sbb
cli
rorl
mov
andb
jbe
and
cltd
aaa
jge
mov
pushf
add
rorb
lods
popf
and
ljmp
or
mov
out
jne
adc
ljmp
test
mov
mov
in
mov
pushl
push
push
xor
dec
push
fsubs
mov
push
dec
push
push
call
mov
mov
xchg
fidivl
out
daa
and
pushl
hlt
out
push
inc
dec
repz
loope
incb
mov
sub
rcrl
push
lret
mov
sub
xlat
ja
adc
mov
inc
inc
out
jp
push
inc
test
fnstsw
jno
cltd
cmc
push
dec
jge
push
in
lcall
xchg
push
push
xchg
popa
out
cmp
in
lcall
mov
popa
pop
jnp
mov
movsl
orb
sub
call
icebp
popa
ficomps
ja
xchg
std
xor
jne
mov
std
dec
dec
inc
mov
jnp
or
xor
or
adc
sahf
inc
stos
jmp
inc
inc
jno
mov
call
mov
and
inc
ret
loopne
pop
push
xchg
sbb
push
cwtl
cmp
repz
int3
mov
mov
fstl
call
xor
jbe
stc
sbb
mov
inc
or
xchg
mov
jmp
push
or
push
mov
js
xor
xchg
mov
gs
clc
xor
lock
idivl
xlat
sub
test
add
dec
push
stc
mov
bnd
mov
das
int
popa
std
not
dec
dec
push
ja
int
cwtl
sub
lret
and
jb
and
cmp
xor
call
pop
and
daa
adcl
dec
inc
dec
ja
sbb
xor
movsb
scas
imul
and
add
ja
and
repz
pop
xchg
test
cltd
out
mov
lock
test
mov
filds
mov
bound
cwtl
jle
xchg
jg
stos
loope
mov
sub
dec
ja
inc
mov
cli
into
mov
enter
pop
xor
shlb
jo
imul
push
jns
jle
aas
xorl
xchg
push
sub
pop
outsb
push
pop
pop
movsb
test
test
dec
arpl
jbe
pop
push
adc
adc
sub
mov
add
jle
js
mov
sbb
aas
xchg
gs
int
mov
pop
cli
out
xchg
dec
add
es
ja
fcmove
or
jl
xor
mov
mov
mulb
dec
pop
dec
repz
sbb
mov
xchg
mov
fisubrl
aaa
mov
test
xchg
push
out
call
adc
cmp
addr16
frstor
push
nop
fidivl
jge
lea
sub
xchg
push
fnstenv
nop
ss
rol
sbb
adc
jbe
mov
out
clc
test
int
and
xlat
mov
mov
sbb
nop
dec
and
sti
push
xchg
aam
jmp
jecxz
xorl
mov
cltd
mov
fwait
xor
insl
lret
xor
xlat
rcll
jl
loop
jmp
mov
std
movsb
lds
loope
mov
inc
cwtl
inc
jp
enter
out
pop
je
outsl
and
adc
ret
dec
jo
mov
pop
lods
imul
cwtl
inc
pop
es
loop
cltd
std
movsl
dec
sbb
fsubl
jp
test
mov
shll
call
sbb
nop
nop
or
cmpl
iret
xor
mov
pop
push
mov
imulb
mov
jnp
testl
lods
shlb
xor
in
fcoml
mov
js
push
adc
fadds
in
jo
adc
shl
cwtl
addb
repz
ret
lock
or
stos
inc
jno
into
pop
outsb
addl
or
sub
push
fisubrl
pusha
and
loop
rcrb
mov
fldl
sbb
adcb
mov
pop
push
add
lahf
lock
arpl
out
in
ds
sbb
dec
aas
inc
dec
sbb
stos
jno
out
pop
and
jo
es
pop
mov
addl
aas
sbb
cwtl
std
nop
add
lds
shll
push
ds
je
pop
cld
jnp
pop
rolb
rorb
fstps
enter
push
pop
sar
sub
xor
inc
xchg
shll
cmp
out
shrl
test
mov
adc
push
push
mov
mov
xchg
inc
inc
repnz
jp
fsubs
in
inc
pop
dec
pop
inc
aas
bound
jb
add
pop
xchg
inc
sub
dec
jno
out
dec
popa
push
std
movsl
gs
adc
add
mov
lea
cmpsb
and
pop
cmp
push
sbb
jl
dec
mov
dec
icebp
or
jle
add
dec
adcl
mov
mov
mov
pop
nop
dec
orb
lods
andl
loope
push
int3
cmp
andl
std
add
pusha
xor
aaa
inc
dec
ja
dec
mov
inc
add
jns
push
mov
or
ljmp
and
movsl
fildll
mov
in
dec
insl
rorb
pop
and
pop
inc
inc
sti
pop
sub
mov
lods
push
sbb
in
xchg
dec
int
stos
and
stos
mov
pusha
fsqrt
xor
in
sub
cli
mov
addr16
nop
adc
stc
and
leave
jecxz
and
test
sub
daa
pop
dec
enter
mov
mov
rorb
mov
adc
fadd
and
cmc
mov
inc
repnz
lds
adc
mov
fwait
or
mov
cwtl
push
dec
repnz
mov
jmp
cmc
jmp
xchg
outsl
jl
sub
push
faddl
lcall
push
dec
std
and
jecxz
and
push
stos
push
or
and
xor
add
daa
and
cmp
mov
jbe
push
jbe
jg
call
shlb
js
mov
sbb
sub
pop
loope
push
insb
data16
cmc
in
pop
call
xchg
inc
lahf
pushf
xor
fsubrl
jecxz
ja
mov
stc
push
enter
push
dec
sti
xor
push
cmpsl
cmpsb
fnstenv
and
nop
in
call
jno
push
pushf
xchg
inc
inc
and
imul
dec
hlt
into
jno
lods
and
inc
inc
adc
cmpsb
xor
shl
testb
mov
jb
mov
icebp
test
inc
push
mov
repnz
mov
mov
dec
loopne
adc
aaa
pop
lcall
jae
imulb
adc
mov
mov
clc
mov
ss
dec
add
xorl
icebp
mov
cltd
pop
leave
and
dec
in
mov
test
mov
lods
test
ret
aaa
xchg
or
mov
adc
xor
cltd
ss
sub
push
stos
loope
sbb
push
enter
popa
das
inc
inc
lcall
gs
cltd
mov
jne
xor
xor
test
mov
nop
test
mov
adc
mov
add
andl
cmp
test
add
addr16
js
sbb
or
cmp
icebp
and
fucom
sbb
sub
xor
ret
jg
cmpsl
push
lcall
xor
mov
mov
pop
imul
cmovae
pop
mov
lods
adc
add
xor
sti
mov
sti
ret
xchg
test
sahf
and
sbb
arpl
dec
push
sbb
jl
stc
ret
mov
jne
arpl
inc
mov
jne
sbb
sub
imul
add
orb
hlt
testb
inc
mov
xor
into
cld
or
pop
mov
test
mov
mov
fldt
js
int3
test
cwtl
mov
pop
push
adc
pop
cwtl
aad
pop
lods
mov
iret
in
repnz
loop
jl
sbb
jmp
jecxz
dec
lret
pushf
sub
ret
aaa
dec
xor
cmpsb
or
adc
lcall
fmull
movl
add
loopne
sbb
inc
in
and
xchg
jg
dec
cmc
nop
push
ja
ret
or
push
dec
insl
fistl
arpl
jle
push
inc
or
dec
sub
test
jae
loop
out
pop
jl
mov
repz
psrlq
dec
mov
cmp
cmpsl
js
xchg
scas
jle
mov
dec
in
std
call
push
xchg
mov
iret
das
cmp
xor
jns
cmp
jne
icebp
scas
sbb
push
pop
sub
sahf
xor
or
push
jmp
into
mov
mov
jmp
cmpsb
mov
int3
xchg
mov
xchg
addr16
ret
syscall
add
jne
xchg
hlt
das
pop
pusha
test
xchg
stos
adc
adc
out
ret
ret
mov
mov
push
cmp
inc
inc
mov
sbb
mov
inc
xchg
push
jp
xchg
ja
fcomip
fcompl
push
or
lret
xor
jmp
mov
nop
lcall
stos
out
pop
mov
push
jb
add
popa
cld
jecxz
mov
mov
in
les
lahf
fwait
fwait
stos
adc
enter
mov
std
call
cmpsl
call
xchg
in
sub
frstor
cmpsl
mov
xor
dec
shlb
sarb
pop
pusha
cmp
jmp
cltd
mov
mov
lock
add
jecxz
cmp
std
test
jecxz
lock
call
pop
pop
sbb
jmp
push
adc
leave
in
arpl
xorb
cmpsl
lds
dec
inc
cltd
push
or
pop
or
pop
add
and
cltd
mov
pop
or
cmp
or
or
mov
stos
mov
or
shrb
jg
test
mov
test
pop
movups
jecxz
arpl
in
pop
push
cmc
adc
xchg
stc
pop
cwtl
movsl
add
scas
mov
xchg
sbb
cltd
push
inc
cmpsb
mov
jno
pop
fstl
clc
mov
adc
mov
jecxz
cmp
add
fwait
aam
adcb
add
jb
sbb
ljmp
pop
cmp
jbe
and
imul
jo
xchg
inc
pop
jp
push
rclb
rolb
sbb
pop
pop
pop
icebp
xchg
sbb
or
js
das
xlat
cmc
or
popa
xchg
popa
mov
mov
pop
pop
inc
pop
push
mov
test
into
mov
jb
aaa
push
ret
adc
mov
data16
dec
dec
lds
sbb
and
imull
lods
inc
mov
lods
push
cmpl
and
push
arpl
dec
scas
fdivs
sub
mov
cmp
dec
adc
dec
je
jp
add
sub
mov
inc
mov
fisubs
out
scas
outsb
lret
repnz
std
mov
ljmp
popf
movsb
mov
sub
ds
push
hlt
mov
xor
add
in
push
in
sub
stos
adc
xlat
push
add
jp
add
insl
push
inc
icebp
sub
lods
or
js
add
cmp
push
sbb
in
fwait
add
sbb
lods
mov
test
mov
dec
xchg
jge
clc
fxch
leave
jo
fadds
ss
packssdw
pop
add
data16
rol
ret
jg
adc
test
cmp
xchg
add
data16
mov
loop
popf
cmp
fcmovne
push
fwait
inc
lock
es
in
add
fildll
pop
mov
xchg
push
jno
sub
aad
mov
test
xchg
push
mov
fisubs
cmp
test
adc
xchg
popf
xchg
pop
cld
push
pop
mov
sahf
mov
sbbl
into
scas
jp
mov
dec
fsubrl
and
ret
mov
fsubr
lock
rorl
faddp
lds
add
pushf
insb
xchg
lret
lcall
cmc
push
mov
sahf
xlat
in
js
aaa
jae
arpl
test
pop
ljmp
sbb
fxam
es
add
repz
insl
sub
test
sahf
cld
mov
scas
test
mov
je
jne
nop
mov
int3
in
pop
jne
insl
xchg
add
divb
dec
mov
cld
push
cmp
add
test
dec
into
jnp
mov
lods
push
cmp
negb
or
sahf
jns
gs
repz
push
mov
inc
sub
sub
daa
xchg
mov
cmp
and
out
xchg
incl
rorb
sahf
ss
add
popf
mov
or
sbb
mov
dec
xlat
xchg
mov
xor
dec
lahf
decl
pop
pop
repnz
xor
mov
push
scas
stos
data16
mov
and
pop
icebp
pop
or
mov
roll
int3
negl
aam
call
pop
sub
nop
test
test
dec
and
push
out
pop
ja
add
dec
push
stc
fstpl
into
stos
adc
leave
adc
aad
dec
aad
adc
and
call
int
jns
cmpb
rol
das
cmp
inc
pushf
pop
adc
lods
push
xchg
mov
cmp
in
std
pusha
mov
vmovupd
daa
cmp
clc
mov
dec
insl
mov
and
iret
pop
popa
cmp
push
ljmp
flds
mov
mov
sub
lcall
insl
inc
mull
gs
ds
adc
cmc
cmp
mov
leave
and
pop
daa
in
mov
in
ss
pop
shrb
xchg
add
leave
pop
push
inc
lahf
aad
jp
fwait
mov
leave
mov
daa
or
inc
and
outsb
dec
inc
jg
mov
mov
paddsb
mov
dec
mov
push
pop
pop
jl
out
inc
roll
loopne
cwtl
lret
mov
xor
sti
ljmp
jbe
fiadds
ds
cmpsb
jl
adc
mov
lret
fisttpll
test
inc
adc
sti
fwait
xchg
xchg
adc
data16
aaa
inc
mov
sbb
and
icebp
jl
or
ret
inc
stos
dec
inc
pop
adc
test
sub
jp
jecxz
scas
out
popf
mov
inc
into
push
mov
test
adc
dec
lret
jne
add
and
and
std
sbb
aad
nop
cmp
fldl
fs
adc
leave
outsb
shrl
sbb
ss
orb
sbb
mov
shr
das
push
xor
scas
ds
mov
xor
sti
inc
dec
adc
xor
push
or
in
xchg
mov
xchg
inc
xor
mov
mov
frstor
or
push
dec
mov
or
and
dec
jno
cmp
or
fcomip
add
jno
mov
out
lds
roll
sbb
pop
or
dec
xor
cmp
and
cmp
push
mov
jae
mov
jno
sbb
cmpl
inc
imul
mov
sbb
mov
inc
test
sbb
daa
pusha
pop
and
mov
sbb
fwait
jb
mov
pop
mov
inc
xchg
adc
push
xor
shll
imul
pop
add
xchg
nop
pop
mov
fwait
loop
cmpsb
jae
out
sub
rorb
cwtl
push
xchg
lahf
call
dec
lods
test
out
sti
ljmp
add
in
les
scas
dec
ret
dec
jecxz
sti
adc
dec
pop
shrl
jbe
sub
fcompl
sbb
or
dec
mov
aam
mov
cmp
stos
xchg
dec
or
pusha
add
imul
dec
push
lock
jl
js
sbb
push
jp
or
out
cltd
or
jb
xchg
mov
movlps
inc
mov
sti
push
adc
shr
mov
mov
push
cmpsl
xchg
mov
scas
adc
int
int3
fcomps
out
xchg
jg
dec
ss
call
sub
movl
insb
cmc
adc
aaa
in
jmp
dec
adc
mov
push
sub
adc
and
xor
add
cmc
and
xor
mov
dec
shr
dec
les
push
push
repnz
cmovl
popf
enter
iret
scas
aad
test
or
stc
sbb
push
xor
mov
insb
mov
repz
stos
jl
inc
add
into
sbb
push
xor
sarl
jmp
jae
hlt
hlt
test
adc
add
data16
shll
lret
aam
lods
jnp
mov
lret
subb
movsb
add
pop
mov
or
sbb
xchg
daa
enter
je
mov
cld
fwait
jp
jo
mov
mov
or
sbb
mov
lcall
vpmaxub
sahf
sbb
enter
inc
xchg
adc
lods
sarb
mov
test
cmp
iret
arpl
xor
xor
jg
add
mov
aaa
mov
mov
rorb
imul
pop
daa
jg
popl
xor
cld
loop
mov
mov
insb
ljmp
push
int3
flds
jbe
sub
cmp
call
or
sub
cmp
xchg
movl
dec
inc
fdivl
xlat
int3
and
andl
jp
nop
fidivl
ljmp
jmp
sub
mov
xor
sti
fstpl
rorb
mov
scas
imul
insb
mov
insl
xchg
hlt
lahf
bound
pop
push
xchg
outsl
lcall
xchg
adc
mov
lret
in
fistpl
repz
jge
je
cmp
sbb
loopne
jge
add
add
sbb
loopne
cli
xor
adc
mov
mov
inc
mov
xor
call
xchg
sarb
or
incl
nop
inc
in
xchg
push
sbb
mov
lret
pop
andl
dec
adc
inc
rcrl
push
int3
xlat
mov
mov
or
inc
bound
jb
dec
dec
mov
aam
pop
sbb
adc
sbb
xchg
test
mov
aas
ljmp
xlat
loope
pop
lahf
daa
aaa
or
pop
pop
sbb
ja
stos
adc
jbe
cmp
cmc
lods
mov
xchg
nop
inc
dec
gs
imul
mov
xor
into
bound
outsl
cmp
xchg
clc
addr16
sbb
and
stc
fsubrl
push
arpl
push
pop
add
movsb
fsts
adc
adc
mov
mov
xchg
lcall
mov
push
xchg
jb
push
hlt
bound
sbb
clc
loopne
fildll
inc
sub
mov
stc
cmpsl
stos
or
popf
rolb
xor
jne
lods
sahf
cmc
sub
fimull
sbb
push
inc
mov
dec
or
leave
ljmp
xchg
sub
lret
pop
rolb
fcmovne
pop
test
dec
mov
faddp
and
ret
outsb
mov
ret
push
popa
push
out
leave
sahf
bound
mov
lods
stc
mov
lock
stos
test
or
nop
push
cs
sbb
jge
cmp
test
jl
stc
out
lcall
dec
add
scas
int
inc
sarl
lret
sub
xlat
mov
jmp
jbe
sbb
outsb
or
mov
xor
mov
pop
jo
dec
jecxz
or
xchg
pushf
gs
mov
ds
shr
cld
lock
xchg
loop
cli
mov
mov
add
pop
mov
push
ret
pop
dec
mov
icebp
mov
test
inc
cmp
sub
fmul
inc
ror
fcmovne
ror
inc
mulb
push
mov
pop
les
mov
push
mov
mov
push
mov
xor
sahf
mov
push
cld
cmp
fwait
shlb
inc
jecxz
lods
lret
call
and
dec
push
cld
les
jns
push
cmpsb
jbe
and
push
inc
adc
xchg
sar
sahf
inc
xchg
lock
jo
xor
mov
xchg
sbb
or
jecxz
mov
mov
cld
test
mov
mov
cmp
dec
rcl
pusha
and
add
in
xchg
adc
add
or
pusha
fildl
daa
cmp
lahf
mov
sbb
adc
cmp
repz
movsl
adc
mov
imul
jmp
ret
mov
cmp
mov
ds
xchg
mov
xor
add
repnz
scas
push
gs
insb
inc
pop
imul
iret
pop
xchg
inc
aam
sub
pinsrw
stos
dec
push
lcall
and
jl
out
inc
add
scas
test
push
lret
popa
imul
xchg
iret
andb
ljmp
sti
mov
xchg
stc
pusha
pop
xor
lret
jg
push
fsubr
push
mov
cmp
xchg
scas
inc
push
mov
cld
dec
or
jne
sub
sti
stos
shrl
push
xchg
sub
popa
xor
icebp
imul
rclb
adc
push
leave
jbe
and
call
pop
and
cmp
sbb
jg
and
xor
adc
movsl
stos
call
mov
and
cli
pop
mov
lret
push
movsl
fdivs
testl
scas
ret
je
mov
xchg
jp
adc
pop
push
inc
pop
dec
mov
dec
push
xor
jmp
jnp
loopne
xor
xor
adcb
into
jg
arpl
xchg
sub
int3
xor
jp
adc
stos
mov
xchg
in
adcb
pusha
popf
daa
mov
mov
push
mov
cmp
jmp
cmpsl
push
sub
fucomp
add
and
and
push
cli
dec
add
bound
out
push
dec
cmp
dec
fcompl
ds
and
and
push
push
jns
push
adc
mov
dec
push
jne
in
ljmp
outsl
subb
or
ja
dec
cs
and
jns
cmp
sub
or
xor
add
cmpsb
add
clc
repz
into
es
adc
aam
mov
mov
mov
or
dec
mov
in
mov
dec
shll
fstps
xor
and
push
cli
fbstp
jns
lods
shlb
push
iret
and
aaa
hlt
sbb
push
cmp
push
lock
dec
mov
stc
add
push
dec
sbb
jno
xor
mov
lahf
mov
dec
xor
jp
loopne
aad
lret
test
inc
pop
pop
inc
xor
cs
iret
je
sarl
add
fcomps
stc
mov
push
push
mov
into
iret
clc
lret
or
jae
fcomi
scas
pop
aam
std
insb
push
faddl
mov
jnp
add
xor
jne
ja
imull
cmp
jno
repnz
mov
add
xchg
adc
push
mov
dec
jns
ljmp
or
mov
jns
gs
insb
les
sub
ljmp
iret
or
clc
push
mov
sbb
mov
cmp
arpl
lods
sbb
outsl
adc
add
fdivl
xchg
enter
add
in
not
sbb
ftst
mov
rcll
rcrl
enter
iret
xor
incb
push
test
adc
pop
sbb
and
sub
jg
mov
push
lret
inc
leave
mov
xor
in
mov
pop
inc
cwtl
ret
mov
fdivrs
jno
mov
test
ret
movsl
outsl
loop
sbb
mov
in
clc
and
and
xor
pop
cmpsl
addr16
sbb
es
das
stc
ret
sarb
cmpsb
mov
xor
out
popf
push
testb
cmp
pop
ret
inc
dec
xlat
dec
push
xor
add
add
cmp
sub
scas
je
int
jp
jae
lods
filds
dec
push
arpl
mov
loop
inc
sti
adc
ds
in
addb
adc
int
xchg
mov
lahf
xchg
push
cli
lods
mov
pop
inc
repz
mov
fdivrs
das
out
dec
insb
mov
inc
insb
sti
xchg
mov
mov
js
sub
inc
ljmp
or
mov
mov
dec
hlt
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
mov
sbb
jp
pop
jp
notb
pusha
mov
jge
and
cmpb
fsubr
push
jmp
mov
stos
xchg
into
fwait
dec
dec
addr16
adc
aaa
arpl
in
mov
pop
pop
cli
ret
mov
mov
stc
lds
xlat
pop
mov
adcl
cwtl
inc
or
pushf
lods
std
mov
sub
and
cld
xor
mov
fistpl
adc
cs
mov
negb
es
add
dec
jne
inc
dec
jae
mov
mov
sbb
adc
xchg
int
gs
in
and
adc
xor
out
push
loop
xchg
ficompl
enter
sbb
mov
sub
fsts
xchg
sbb
lahf
cmp
idivb
cmp
in
lcall
push
or
fdivrs
data16
int3
or
lret
sub
insl
addr16
es
xchg
xchg
mov
push
or
std
or
insb
push
lods
ss
insl
nop
fwait
or
dec
push
js
fs
loope
clc
mov
xor
mov
insb
cmp
jnp
fisttpl
stos
addr16
dec
shlb
inc
mov
mov
insl
int3
sub
sub
inc
es
outsb
ja
dec
mov
sbb
sti
pop
mov
hlt
mov
sahf
inc
ss
sub
nop
mov
or
fiaddl
arpl
sbb
sbb
testb
pop
push
lret
dec
mov
push
cli
insb
cli
pop
lods
cltd
xchg
and
or
jmp
inc
gs
iret
mov
mov
data16
lock
or
dec
scas
cmpsb
icebp
ficoml
outsl
repz
stc
sub
ss
bnd
dec
jbe
xor
push
add
push
cltd
cmpsb
ss
add
xor
rol
mov
mov
add
sub
jns
sbb
flds
int
xor
loope
fstpt
push
cs
test
std
stos
xchg
push
call
repz
ds
pushf
mov
setne
data16
jbe
aas
add
pop
adc
or
mov
dec
cltd
push
add
cld
dec
ljmp
pop
leave
mov
dec
mov
dec
inc
test
cmp
rclb
mov
dec
mov
hlt
push
pop
pop
shr
inc
sub
scas
xchg
dec
out
mov
sahf
into
pushf
imul
adc
es
mov
in
mov
jmp
mov
dec
mov
fs
and
je
jo
jns
xchg
pop
jne
and
push
push
stos
jp
sub
pop
sarl
adc
xchg
lret
push
xor
cmpsl
xchg
outsl
aad
jle
into
les
push
cmp
cmpsl
sbb
add
cmp
or
cmp
or
pop
std
scas
movsl
std
xchg
inc
xchg
mov
add
push
lcall
xchg
pop
mov
dec
jbe
outsl
jle
jae
js
imul
and
jae
or
cwtl
mov
push
sarl
and
xchg
sbb
xchg
push
jns
sub
sbb
cmp
ljmp
push
in
pop
popf
pop
xor
xor
push
pop
sbb
mov
sar
inc
inc
push
les
test
mov
mov
pushf
sbb
or
mov
rorb
rcll
negl
cmp
pop
mov
inc
cmp
lods
jnp
pop
pushf
pop
je
sarb
lock
loopne
ja
add
jmp
jmp
xlat
mov
jp
icebp
sti
mov
std
stos
mov
int
xor
clc
pop
ss
jp
push
mov
jnp
ja
push
push
xor
in
bnd
out
adc
dec
test
pusha
fst
add
cmp
int
mov
scas
fcoms
dec
test
cmp
in
jle
adc
es
mov
push
jmp
mov
imul
mov
cmc
sub
mov
ss
mov
inc
test
pop
xchg
popf
sarb
and
xchg
cmp
push
repz
dec
mov
push
roll
mov
fldcw
test
mov
out
sarb
test
mov
lret
jb
mov
repz
das
inc
mov
clc
jmp
ja
fstps
mov
cmp
xchg
mov
xor
outsl
mov
lods
insl
fisubl
push
js
ret
sbb
push
dec
ficoml
mov
cwtl
or
jecxz
jecxz
fcoml
jecxz
out
mov
loopne
testl
rcrb
jp
xlat
mov
sub
adc
inc
sbb
and
testb
dec
inc
inc
push
lret
mov
out
cmp
leave
push
mov
out
xorl
aas
mov
and
in
mov
add
jecxz
popf
mov
pusha
sbb
xlat
fdivr
xchg
xlat
push
scas
sbb
lret
loopne,pn
call
sahf
jns
ret
push
sbb
rolb
and
xchg
sbb
jb
push
je
sbb
nop
cld
loopne
insb
mov
shrb
mov
cmp
mov
push
cli
push
and
mov
lcall
cmp
or
push
inc
je
and
mov
cltd
or
stos
shrb
xchg
repz
mov
ss
js
outsb
mov
test
cli
mov
push
pop
cmp
lret
cmp
sarb
int
adc
cs
lret
je
cwtl
xor
push
or
dec
mov
push
lock
icebp
jl
sbb
adc
adc
xor
add
scas
lds
pop
adc
mov
jmp
and
std
or
scas
cmp
int
lahf
cld
xchg
sbb
into
les
jp
es
add
or
test
xor
and
iret
mov
daa
sbb
mov
mov
mov
shlb
seta
adc
shll
jmp
dec
xchg
out
pop
sub
sbb
inc
arpl
pop
out
cs
lds
jcxz
xchg
and
stc
jnp
cli
jle
fnstcw
push
lds
mov
out
xor
ret
jnp
mov
lods
fdivrs
push
or
addl
pop
mov
popl
int
mov
test
sub
lea
or
shlb
cmpsb
xchg
cli
sbb
jae
mov
mov
push
inc
dec
jb
lds
aaa
test
mov
adc
fdivrs
je
push
std
jae
cwtl
mov
adc
mov
test
pop
jle
loopne
xchg
aaa
sub
rcrb
pop
jo
push
shll
inc
fnstenv
pop
push
jbe
negl
sbb
rolb
sub
push
xlat
in
add
fcom
aad
sbb
sub
jb
add
jbe
mov
xchg
pop
pop
test
inc
scas
ja
popf
icebp
xchg
and
sar
jge
testb
mov
repnz
inc
dec
cmp
push
fwait
loopne
lea
mov
sub
push
xor
cmc
repz
loope
in
stc
insb
add
stos
xor
xchg
sbb
xor
imul
aaa
xchg
cwtl
jg
roll
out
jecxz
inc
mov
and
jo
cmp
je
inc
mov
or
loope
lods
cli
dec
jno
dec
loop
pushf
mov
in
call
aam
cmp
push
jp
push
dec
addb
lods
fidivrl
push
xchg
rcrb
cltd
iret
mov
pop
fcompl
and
pop
stos
out
push
xor
out
mov
xchg
mov
loope
xor
ss
jae
movsb
mov
or
cli
jne
dec
aaa
daa
mov
dec
inc
or
leave
out
hlt
mov
rolb
pushl
and
in
sbb
cwtl
pusha
ljmp
gs
xor
push
xchg
mov
js
xor
xchg
mov
outsb
ds
lahf
or
ret
arpl
mov
addr16
cmp
inc
stc
fdivs
scas
fcmovnb
in
idivb
iret
adc
pop
repnz
test
icebp
pop
pop
adc
test
ficoml
and
stos
in
jno
int3
pop
xor
data16
mov
xor
push
push
loop
push
testl
fists
mov
jb
mov
cltd
ja
adc
fadds
scas
out
mov
mov
cmp
sub
fsubl
cmp
cmp
dec
cld
icebp
mov
or
and
or
pop
and
push
xchg
mov
repz
insb
pop
movsl
das
imul
or
mov
mov
jg
push
pop
insb
add
push
mov
cld
adc
addr16
loope
xor
popf
aad
jmp
test
lods
insb
xadd
add
cmp
sti
loopne
mov
adc
scas
adc
sub
out
and
pusha
pop
push
icebp
xor
arpl
inc
xchg
rcl
pop
loopne
and
mov
scas
push
sbb
mov
add
out
push
push
sub
lods
jb
mov
inc
mov
sbb
rcrl
into
adc
xchg
fs
xlat
pop
push
and
dec
hlt
das
cmp
cmc
add
aas
adc
icebp
ds
adc
adc
push
icebp
aam
xchg
scas
inc
and
or
iret
mov
push
dec
cmp
inc
mov
aam
test
and
std
loopne
pop
jmp
lcall
fwait
shll
xor
cmp
ljmp
pop
mov
mov
scas
test
cli
mov
mul
in
call
adc
pop
push
or
imul
sub
loopne
mov
mov
cmc
mov
mov
ret
adc
xor
movsb
push
sub
sti
icebp
or
xor
pop
xchg
pop
lret
nop
jbe
xor
and
adc
imul
das
mov
movsb
cmpsl
ss
das
or
fistps
mov
adc
mov
and
mov
imul
dec
mov
pop
sbb
xchg
in
sub
adc
sub
imul
adc
gs
mov
pop
push
daa
dec
jmp
jp
pop
pop
push
push
es
in
dec
bound
jb
mov
pop
lock
fwait
das
xchg
mov
jno
mov
addr16
jg
dec
cld
fsubr
mov
jno
push
pop
xlat
pusha
mov
adc
stc
push
or
sarb
xor
hlt
sbb
sub
xchg
cmp
jg
in
leave
mov
insb
mov
mov
loopne
mov
mov
dec
fidivl
xchg
roll
hlt
inc
jmp
jge
subb
jecxz
enter
or
shll
int3
xchg
pop
push
sub
pop
js
inc
inc
fs
xchg
jle
ljmp
ds
mov
test
jge
lea
fldl
imul
sub
xor
cmp
movsb
mov
push
xchg
sbb
bound
addr16
pop
mov
mov
lea
or
repz
pop
nop
inc
lcall
int
mov
ljmp
fistl
lret
add
xchg
dec
outsb
insb
adc
sub
cmp
mov
push
dec
in
mov
or
sbb
out
insb
jns
push
movsl
call
mov
jge
mov
lret
les
jmp
imul
cmc
pop
fucomip
decl
popa
icebp
mov
mov
arpl
out
stos
sbb
dec
cs
mov
lods
jge
jmp
sbb
lock
scas
adc
je
mov
fwait
in
jno
cmp
popl
mov
inc
push
cltd
cmp
sub
rcl
mov
in
lods
xchg
mov
push
pop
and
cmpsb
jo
in
or
fs
mov
push
xor
mov
mov
jns
and
shrl
aaa
mov
leave
iret
push
orb
gs
or
push
xchg
or
pop
sahf
inc
sub
cmpsl
push
sub
std
push
sub
out
inc
xchg
pop
jae
add
jae
lahf
cmpsl
inc
cmpsb
testb
out
in
xchg
pop
in
jmp
lods
mov
jns
filds
rcrl
mov
insb
enter
jb
fwait
negl
mov
in
add
mov
mov
mov
cmp
mov
test
fwait
lret
or
push
cmc
mov
sbb
push
or
negb
mov
pop
das
pop
inc
in
enter
outsl
mov
roll
or
jns
pop
enter
mov
sub
int
jp
mov
iret
fcmovu
cmpsl
leave
ljmp
cmp
rcrl
push
or
and
cmc
mov
cmp
adc
push
sub
mov
stos
push
inc
dec
xor
les
out
out
inc
mov
cmp
mov
cli
xchg
jb
rcr
mov
sbb
nop
jbe
clc
out
clc
leave
and
lock
or
jno
das
jns
repnz
mov
xor
lretw
into
mov
pop
out
sub
das
ret
loope
mov
imul
pop
inc
and
jmp
imul
push
add
push
jns
jge
jp
shlb
mov
add
pop
xchg
xor
es
push
cltd
fdivp
jae
out
sub
sub
sbb
ret
sbb
daa
cmpsb
ljmp
xchg
stos
stos
icebp
lock
add
pop
scas
movsb
push
pop
bnd
aaa
inc
fisubrl
or
iret
bnd
xor
mov
sbb
jne
das
fnstcw
cmp
arpl
sub
cmpsl
ficomps
push
sub
shrl
mov
add
mov
scas
sbb
imul
sub
push
xor
sbb
sub
fwait
mov
rcr
or
mov
mov
test
xchg
add
dec
cmp
and
add
mov
sarl
sub
add
ss
out
xorb
dec
xchg
outsb
mov
pop
jmp
cmpsb
sub
fdivrl
jg
aam
jp
sub
insb
loop
or
aas
mov
pop
pop
push
add
shll
xor
jb
insl
push
pushf
imul
test
in
cmp
and
stc
jae
out
pop
inc
arpl
lcall
das
in
push
xor
pop
cmp
pop
adc
lods
xchg
out
rcrb
xor
subl
cmp
lods
push
push
loope
aaa
mov
ss
cli
cmp
pop
popf
dec
sub
cmp
jnp
adc
lret
negb
push
xchg
gs
jne
fidivrl
mov
mov
aas
dec
jbe
fst
xor
mov
pop
mov
xor
ja
sbb
test
test
movsb
out
ror
jno
orl
scas
js
push
dec
inc
dec
mov
imul
aas
int
repz
sbb
adc
lret
int
dec
fsubr
std
pop
outsb
gs
add
sub
sahf
imull
int3
cld
repnz
cli
mov
mov
mov
fists
shll
cmp
sub
adc
sub
mov
insb
in
cmp
jnp
adc
add
fs
cmpsb
pop
test
out
cs
push
les
loope
or
lea
xor
fisttpll
pop
jp
sbb
sti
in
jmp
dec
rorl
mov
out
sub
mov
loope
cmc
push
sbb
inc
jo
andb
add
adc
ds
hlt
pop
divl
push
cmp
addr16
mov
mov
and
pusha
push
push
push
mov
jns
stos
lret
mov
push
inc
xor
lods
addb
jle
subb
inc
scas
rcrb
cmp
fcoml
jbe
mov
stos
fdiv
sbb
xchg
sbb
and
cmc
es
dec
out
int
stc
aas
cvtpi2ps
fildll
sbbb
push
ret
add
test
jbe
jmp
loope
adc
xchg
shlb
inc
out
jl
jl
cwtl
shll
sub
adc
outsl
negl
mov
popf
cmp
jne
int
sub
xchg
mov
pop
or
jle
push
movsb
daa
xchg
lret
call
lahf
mov
push
push
cmp
lahf
xor
xor
loop
setns
pusha
cld
movsl
push
inc
sbb
rol
xor
ljmp
push
adc
pop
jg
aad
xchg
aad
es
jb
xchg
and
pop
push
dec
or
push
test
nop
bound
jo
dec
rcl
sub
mov
movsb
stos
repz
ss
fs
imul
push
sar
mov
shlb
mov
sbb
dec
adc
or
loopne
ror
mov
mov
mov
andb
mov
push
sbb
pop
adc
sbb
mov
push
and
dec
inc
and
lock
addr16
xorb
inc
les
push
pusha
or
jbe
das
sahf
or
clc
insl
ja
push
and
fmul
adc
scas
lods
test
ss
cltd
in
scas
xor
cwtl
jmp
add
into
push
or
das
fs
adc
mov
fcomp
push
or
mov
lods
cmp
repnz
popa
bnd
ror
js
and
test
mov
jne
dec
in
scas
addr16
mov
loop
cmp
sub
mov
test
sbb
adc
fld1
mov
pop
enter
jno
add
sub
push
adc
scas
int3
mov
mov
insl
push
xor
jnp
mov
sar
test
push
mov
enter
std
loopne
popf
sarl
pop
mov
or
cwtl
push
push
jb
pop
push
pop
mov
js
cmpsb
dec
add
mov
insb
pop
push
leave
sub
xchg
xor
mov
lret
in
cmpsb
push
ja
fists
adc
mov
pop
push
popw
jmp
sub
push
add
cs
mov
mov
lds
icebp
ss
stos
mov
sub
repz
movsl
and
decb
ds
jb
rcl
lahf
dec
or
adc
mov
insb
push
jmp
insl
imul
cmp
pop
shrl
cmp
dec
jo
lcall
or
push
jae
xor
lret
push
pop
push
shrb
mov
dec
xchg
pushf
xchg
sbb
jbe
jne
mov
mov
aaa
jb
lea
fdiv
lcall
mov
dec
leave
leave
pushl
gs
add
rcrl
repnz
sub
jmp
mov
notb
into
mov
jns
dec
insl
xorb
std
pop
ret
inc
mov
add
iret
daa
lods
push
pusha
cmp
push
pop
gs
cli
xchg
adc
nop
sahf
mov
cmpsb
movsl
lcall
pop
mov
pop
xchg
xchg
jp
xor
push
xor
pop
ss
xchg
xchg
xchg
jp
daa
iret
ds
mov
das
fld
test
mov
sbb
sbb
and
je
xor
insb
xor
dec
and
dec
rorb
inc
fwait
orl
jg
popf
push
stos
mov
repnz
cmp
pop
inc
testb
cmpb
sarb
mov
xchg
lret
call
cli
mov
sarl
in
out
sub
add
sbb
mov
or
push
cmc
xor
mov
or
fldt
mov
jb
out
popf
add
scas
jbe
pushl
imul
ds
imul
lret
or
push
out
jbe
jno
dec
sahf
fsubl
inc
push
hlt
inc
hlt
in
ds
repnz
inc
lods
or
mov
je
in
xchg
xchg
xchg
mov
aad
outsb
outsl
movsl
pop
mov
loopne
xbegin
das
sti
std
inc
or
sbb
ds
call
and
scas
faddl
cs
jns
xor
pop
mov
inc
fldenv
insl
sub
push
and
adc
jp
call
mov
jno
fnstcw
int
add
pushf
and
cmp
and
cmpsb
repnz
mov
pop
pop
jg
ja
lret
cmpsl
outsb
insl
xchg
xor
fldl
adc
mov
push
and
xchg
push
pop
fisubs
push
cmp
fdivr
pop
dec
loope
in
inc
das
jmp
and
fcoml
jns
stos
mov
push
idiv
adc
adc
push
lahf
cld
mov
fldl
outsl
in
imul
mov
sub
inc
std
lahf
fmul
dec
mov
lods
ja
gs
cmpsl
out
mov
clc
rol
lea
ret
or
fdivrs
daa
imul
add
dec
pushf
add
adc
repnz
mov
lahf
loope
cmc
push
addr16
aad
adc
lahf
sbb
scas
jle
sub
mov
out
mov
adc
cld
cld
lret
dec
lods
cmp
hlt
or
sub
movsl
mov
pushf
mov
dec
fadds
lret
lock
aas
xor
adc
cmp
shlb
sbb
aaa
mov
mov
stc
mov
adc
mov
mov
add
mov
arpl
push
mov
mov
mov
addr16
or
call
pop
xlat
pop
into
xchg
cmp
mov
jo
fidivs
test
in
cmp
adc
andl
xor
fwait
jae
push
pop
ss
insl
dec
pop
in
mov
or
icebp
jnp
bound
fsubrl
les
fcomi
inc
cmpsl
push
rcll
mov
xchg
cwtl
sbb
dec
mov
repnz
sti
sub
mov
mov
dec
test
jecxz
cmc
stos
in
ja
lock
push
rcrb
mov
scas
and
xchg
sub
in
scas
inc
add
scas
daa
mov
lea
mov
jo
jg
andl
test
sti
pusha
push
cmp
in
push
jl
test
push
jge
fcmovnu
mov
fstps
xor
fs
inc
lods
dec
push
scas
mov
or
shrl
adc
dec
in
dec
fsts
shr
xchg
and
push
sbb
jnp
aas
outsl
sbb
adc
add
sub
pop
push
mov
push
jo
inc
addr16
repz
lahf
push
xlat
adc
aaa
imulb
add
cmp
xor
cmp
mov
jae
sbb
xchg
fucom
mov
sub
cmovp
mov
int
push
sbbl
sub
adc
xor
fwait
and
add
xchg
sub
push
sbb
je
rorl
adc
pop
or
adc
rclb
outsl
outsl
xchg
xlat
mov
cmpsb
sub
pop
jecxz
and
pop
ljmp
mov
je
outsb
ds
jecxz
loope
adc
divb
scas
in
rolb
out
stos
dec
mov
daa
sahf
clc
jl
adc
xchg
add
mov
push
sub
in
aad
hlt
inc
fimull
stos
ss
push
cmp
ja
cld
adc
xlat
pop
pop
or
nop
push
jns
int
mov
pop
push
leave
mov
adc
fnstsw
popa
pop
std
pusha
movsl
insl
jmp
cmp
mov
icebp
stos
ss
pop
stc
lahf
out
inc
shlb
lock
call
inc
and
test
mov
push
push
insb
jns
fdivrs
lods
cmp
jl
cmp
adc
es
subb
mov
sahf
cmp
pop
push
ficompl
mov
and
lret
or
push
sbb
aad
shll
sbb
test
fwait
and
insl
scas
push
add
pop
jne
outsb
imul
dec
filds
xbegin
adc
push
repnz
adc
xchg
loope
or
jle
lret
pop
push
mov
adc
jo
dec
pop
push
out
adc
ret
sbb
cmp
jbe
push
adc
mov
mov
pop
pop
enter
ss
xor
fidivrl
test
cwtl
sub
std
dec
jbe
xor
pop
add
rolb
xor
sub
xchg
hlt
push
jl
mov
scas
or
add
sti
sbb
cmc
mov
sbb
push
in
rcrl
shr
popa
cmp
mov
sbb
cmp
sbb
pop
into
add
outsl
mov
push
loope
push
xchg
addl
mov
call
add
or
sub
pop
dec
bound
aas
inc
push
rorl
addr16
scas
cmc
xor
dec
add
test
popf
sbb
push
pop
sbb
cs
push
div
mov
jge
nop
mov
arpl
subl
js
push
lret
xor
je
iret
incl
mov
push
cld
pusha
or
out
stos
out
push
pop
push
mov
and
mov
cmp
jns
mov
mov
push
add
aaa
push
arpl
arpl
or
mov
xchg
xchg
mov
rorl
sbb
rcr
adc
jne
loopne
nop
sti
mov
repnz
fsub
xchg
inc
dec
jl
movups
push
inc
mov
cli
adc
sub
jb
push
nop
lds
adc
push
push
rorl
xor
push
and
fs
lret
fildl
mov
sub
xchg
dec
push
adc
pop
jmp
inc
out
cmp
pop
lret
loopne
es
daa
add
xlat
dec
jo
mov
dec
or
int3
mov
movsl
add
lret
jnp
aas
repnz
and
ret
push
fdivl
hlt
pop
mov
sbb
cmp
dec
fcoms
fs
mov
or
xchg
in
pop
or
dec
xchg
addr16
jge
jmp
imul
movsl
mov
xchg
cwtl
shl
cmpsl
cmp
imul
mov
fistps
out
add
and
imul
cmp
inc
cmpl
fnstenv
ret
push
leave
mov
popf
sub
loop
and
mov
and
sbb
pop
adc
sahf
dec
sub
sbb
hlt
nop
and
inc
jnp
mov
adc
xchg
mov
adc
add
shlb
popf
and
rcll
and
pushf
movsb
cmp
lea
in
push
fnstsw
inc
xor
inc
and
lods
ss
stos
mov
shrb
pop
and
pop
jb
push
jnp
dec
or
jmp
jmp
loop
stos
into
sub
mov
sub
push
fistl
loopne
ja
ret
wbinvd
fistpl
mov
sub
xor
cwtl
jecxz
adc
iret
dec
or
push
and
push
fwait
jbe
add
mov
sarl
in
fcomps
sub
repnz
movsl
imul
add
sti
addr16
in
adc
orb
orl
jecxz
or
mov
cli
xchg
pop
xsha256
cmpsb
xchg
aam
cltd
sahf
dec
xchg
pop
xchg
cmp
addb
lods
es
stc
or
and
push
neg
push
frstor
stos
les
lret
roll
push
outsb
mov
rep
and
fistps
mov
enter
sahf
movsb
xor
adc
leave
nop
loopne,pn
adc
outsb
mov
in
push
add
jmp
or
mov
andb
fstl
xchg
push
bound
mov
or
sbb
cmp
fcompl
aaa
xchg
aad
ret
and
in
xchg
mov
sbb
ljmp
mov
stos
xlat
addr16
mov
js
sar
add
ret
shll
cmpsb
loop
pop
lret
inc
push
sub
adc
arpl
push
mov
aad
movsb
ljmp
scas
or
jecxz
dec
jle
add
and
mov
sbb
mov
inc
or
jb
js
shll
fnstcw
es
lret
xor
push
test
mov
negb
xor
and
ficoml
in
shrb
je
sub
lods
mov
pop
jle
repnz
cwtl
dec
pop
inc
out
in
pop
xlat
ja
xchg
sbb
inc
xor
push
fisttpll
pop
ss
sub
xor
mov
dec
pop
loopne
adcb
jo
popa
scas
push
es
mov
cmc
pop
enter
fnsave
je
cmp
imul
xor
mov
cs
xchg
hlt
adc
xor
fs
mov
pop
xor
mov
ret
push
rol
mov
fstpt
cwtl
or
mov
sub
flds
lahf
inc
xchg
xor
fsub
scas
or
inc
sbb
pop
mov
push
roll
dec
clc
mov
fimuls
repz
sub
daa
jns
jle
pop
mov
dec
sti
insb
jecxz
aam
loopne
cmp
dec
aad
sbbl
push
dec
cltd
sbb
xchg
stos
loopne
jbe
mov
push
jnp
mov
sbb
adc
jmp
push
jmp
cmpsb
pop
jo
cld
lds
loopne
pop
mov
and
pop
add
shl
pop
iret
mov
out
out
mov
xadd
push
cmp
xchg
xchg
inc
dec
push
jp
cmc
jmp
cmp
loop
and
les
jp
arpl
imul
add
dec
repz
popf
pop
in
xchg
cmp
orb
outsb
cmc
pop
inc
mov
jb
int
sbbl
and
cmp
sbb
dec
push
scas
or
xor
xchg
cmpsb
pop
jp
stos
popa
call
jne
cmp
stos
out
pop
mov
inc
mov
pop
out
in
shll
mov
in
mov
testl
mov
gs
jle
or
or
inc
dec
aad
mov
insb
lods
adc
push
and
sbb
leave
push
stos
inc
inc
cmpsl
and
fs
ret
ljmp
pop
inc
mov
xchg
inc
jb
and
xchg
lods
pop
mov
dec
jnp
jp
roll
cltd
adc
movsb
out
addb
in
popf
jbe
jae
mov
dec
loope
push
jecxz
dec
adc
push
lret
mov
repz
icebp
fmuls
mov
mov
inc
xchg
vmread
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
outsl
cmp
loope
jp
pop
jp
dec
lret
nop
cmp
rcrl
popa
add
sbb
ja
addr16
int3
sub
or
cwtl
pop
sub
inc
cs
int
arpl
jnp
fnstcw
jno
jg
dec
popa
cld
ja
inc
xor
xor
fisttpll
sub
lods
or
lcall
push
sub
in
cmp
and
pop
clc
rorl
dec
lcall
lret
pop
sub
ja
ljmp
shl
stc
stc
fmull
pop
rclb
push
dec
sub
pop
shl
int3
cmp
mov
pop
pop
in
pop
and
cmpsl
inc
lcall
add
loope
arpl
les
cmp
popf
cmc
mov
js
sub
mov
xor
mov
das
negb
decl
insb
mov
sti
clc
mov
pop
cmc
mov
sbb
sarl
stos
imulb
xor
cmpsl
ret
mov
ror
fidivrs
cs
sub
loop
cmc
mov
mov
push
mov
xchg
popa
mov
mov
int3
cld
push
adc
insb
pushl
add
loopne
leave
sbb
sbb
or
orl
cmpsb
fisubrs
fstpl
dec
mov
scas
cltd
stos
jl
mov
testl
adc
repz
xor
adc
outsl
stos
lods
pop
push
mov
sbb
pop
in
outsb
sbb
cmp
aad
pop
sbbl
mov
jle
and
or
stc
cmp
mov
subl
push
int3
jmp
or
push
mov
jne
jno
imul
lock
loopne
cli
sbb
mov
mov
pop
sbb
push
push
addr16
cmp
mov
fists
cmp
into
adc
xchg
icebp
mov
lds
cmp
push
outsl
and
add
xchg
pop
mov
mov
mov
or
sbb
jg
and
xor
popf
pop
push
sub
iret
xor
sbb
ret
sbbl
mov
and
add
sysenter
int3
adc
sub
loope
or
push
add
mov
jg
adc
fstps
push
pop
lret
imul
jns
mov
push
repz
dec
dec
cwtl
xchg
pop
push
xor
loop
xor
test
mov
aam
nop
fiadds
sub
shll
push
adc
cli
push
xor
sub
in
xor
fsubl
adc
jmp
push
in
push
lock
push
loop
jmp
dec
inc
cs
push
pop
ss
outsb
push
sub
or
stos
mov
sti
imul
out
addb
shll
inc
mov
aas
lds
aaa
or
pop
push
mov
sub
lods
lret
out
or
or
push
jae
pop
scas
xadd
in
xor
int
sub
lret
xchg
pop
adc
pop
xchg
and
stos
jb
xlat
lret
mov
sub
jl
pop
iret
sub
cmp
rcl
fnstenv
xchg
jb
xchg
mov
mov
sub
in
stc
dec
and
dec
or
jo
outsl
add
push
js
xchg
cs
cmp
mov
inc
jmp
dec
inc
out
lahf
xchg
lods
pop
repz
imul
jle
movsb
cltd
add
sub
adc
adc
push
dec
js
sarl
mov
sbb
mov
mov
out
incl
addl
push
arpl
sbb
enter
arpl
aas
push
ja
iret
sub
shl
jb
lea
push
xchg
add
subl
dec
xchg
in
ljmp
mov
mov
sub
fs
mov
popf
in
bound
andb
xchg
stc
adc
mov
inc
sbb
scas
pop
or
shrl
repnz
mov
leave
sub
pop
mov
shrb
lods
inc
sbb
dec
roll
nop
fsubr
adc
movsb
dec
popa
loop
or
xlat
jmp
dec
and
xor
or
mov
fisubrs
xorb
xchg
icebp
jmp
loopne
loopne
mov
dec
movsb
xor
push
xchg
xchg
test
int3
out
test
popa
fiaddl
out
jp
aad
sti
loop
jae
fcomip
movsb
jle
inc
cs
push
loop
xor
mov
fstl
cmp
sbb
dec
push
mov
loopne
data16
dec
roll
sbb
je
loopne
fsubrs
push
and
and
aas
hlt
cli
inc
jmp
enter
or
addl
loope
mov
mov
push
sub
divb
dec
jge
cmp
mov
clc
hlt
inc
or
sahf
icebp
jmp
je
movsb
ds
lret
fnstsw
mov
insl
scas
ds
in
nop
mov
popf
push
add
jbe
cmpsl
mov
xchg
push
sbb
mov
sub
pop
adc
inc
jns
orb
dec
outsb
push
dec
lret
call
frstor
sub
sbb
dec
inc
mov
addr16
je
jns
pop
xchg
jge
jle
jae
ljmp
mov
rcl
mov
cs
loope
andb
inc
out
call
mov
scas
test
xlat
out
mov
xchg
xchg
stos
cmp
jae
adc
in
fisubrl
pop
xchg
popw
cld
daa
push
push
pusha
dec
jbe
test
xlat
scas
jbe
xchg
imul
cwtl
adcb
jge
jl
adc
mov
insb
mov
pop
jl
jmp
fdivs
outsb
push
lahf
adc
inc
or
jp
mov
adc
out
les
bound
dec
ror
aas
add
test
dec
mov
cmp
jo
sar
outsl
push
mov
leave
inc
inc
dec
jo
push
fdivrp
inc
out
popf
outsb
pop
sub
daa
pusha
scas
decl
xor
ret
rorl
test
push
cs
int
ja
inc
call
loope
imull
int3
ds
movsl
ljmp
nop
sbb
adc
daa
fcomip
imul
pushfw
xchg
mov
lock
cmp
push
push
out
mov
push
add
jno
xchg
shll
sarl
xor
arpl
imul
lock
shll
dec
fsubrl
sbb
es
xchg
xchg
cmovs
imul
pushf
mov
jb
out
add
stos
fucomi
bound
or
xor
in
std
inc
mov
ds
push
out
insl
jae
fcmovne
js
popa
dec
daa
icebp
out
push
popf
out
popf
and
pop
stos
cmp
movsb
pop
add
xchg
popa
out
adc
jnp
lea
push
and
testl
stos
lock
inc
lcall
and
mov
add
sub
clc
sbb
dec
mov
xchg
pop
dec
shll
xor
lock
mov
imul
jecxz
sub
dec
add
jecxz
aad
push
pop
xor
push
aam
stc
icebp
rcrb
scas
leave
out
in
xor
popa
jge
mov
xchg
jecxz
jb
add
jl
jl
iret
mov
sub
in
loopne
bound
sub
push
cmp
fmuls
mov
mov
adc
out
mov
push
xchg
mov
mov
imul
sahf
mov
adc
push
call
movsb
sub
testl
jle
mov
sarb
and
out
nop
sub
mov
out
test
popa
inc
push
leave
int
inc
inc
ret
push
or
lods
push
test
sbb
adc
push
dec
in
ss
insl
inc
push
or
cmp
or
or
pop
shlb
push
fisubrs
imul
jp
in
popa
dec
or
stos
sbb
imul
xchg
push
xchg
sbb
loop
push
lahf
mov
xchg
popf
es
push
sbb
pop
int3
arpl
dec
xchg
fcoml
lahf
cmpsl
push
sarl
dec
adc
jp
outsl
cmp
mov
mov
xor
leave
cmpsl
pop
pop
inc
xchg
pop
inc
sub
mov
inc
and
and
mov
lea
popa
dec
mov
fcoml
movb
inc
aaa
movsb
dec
insb
add
pop
inc
icebp
nop
rclb
scas
mov
cli
test
fwait
adc
hlt
sub
mov
movsl
jno
ljmp
insl
mov
jl
in
mov
mov
lret
pop
pop
sub
cmc
lahf
ret
pop
lret
mov
call
stc
inc
cmpsb
dec
leave
ror
movsb
fs
adc
add
push
xchg
and
xor
fs
das
ret
cli
mov
dec
push
jns
mov
test
loopne
sarb
mov
cmp
jecxz
stc
rclb
dec
xchg
aad
test
pop
or
dec
mov
je
push
add
or
daa
decl
xchg
daa
or
test
lods
pop
movsb
jge
data16
in
mov
jne
mov
gs
out
das
push
jno
stos
xor
pusha
mov
ljmp
sub
data16
cmpsb
lds
mov
adc
fs
jmp
punpckhwd
jae
fbld
sbb
dec
push
pop
addl
scas
jbe
pushf
daa
stos
stos
movups
popa
aas
mov
pop
lahf
adc
repz
shrl
mov
jns
adc
pop
in
and
push
xchg
insl
inc
hlt
lods
jg
sub
push
sbb
aaa
stos
xchg
or
and
outsl
arpl
rorl
imul
xchg
xor
loop
cmp
and
cmp
pop
in
ljmp
out
xchg
xor
iret
sub
lock
mov
gs
and
jl
outsb
je
ja
xchg
jecxz
sbb
arpl
imul
sbb
addb
ficoms
pop
mov
and
cld
and
jns
sbb
sti
outsl
cmp
addr16
xor
jae
out
sub
pop
inc
call
push
or
bound
jmp
stos
cld
xchg
push
test
cmc
into
mov
repnz
dec
mov
stc
jecxz
jns
sub
mov
int
leave
cmp
pop
negb
bound
or
fs
arpl
movsb
and
xchg
pop
in
add
jo
mov
lods
adc
cmp
dec
aaa
sbb
clc
push
cmpsb
mov
cmpsb
pop
xor
cli
jle
mov
dec
rcll
or
push
add
push
sub
test
inc
cmp
jle
fisttpll
add
adc
lahf
or
cmp
adc
jge
and
sbb
jg
xchg
mov
jmp
push
inc
icebp
mov
xchg
lods
notl
outsb
mov
or
mov
mov
leave
sbb
imulb
or
sbbl
pop
sub
and
xchg
sahf
jg
add
mov
in
mov
lahf
mov
ljmp
mov
jne
pop
hlt
push
fadd
jne
popa
xchg
lds
mov
mov
test
and
pop
lahf
rcl
ss
inc
dec
jecxz
scas
fdivp
push
mov
and
push
mov
push
mov
xor
mov
sbb
mov
vpaddq
iret
test
cli
sbb
xor
push
rcrl
lds
jmp
stos
xchg
push
mov
inc
stos
mov
cmpsl
into
je
lahf
and
add
lods
popf
push
and
aam
jle
xchg
mov
mov
loop
xchg
lds
push
pop
stos
mov
xchg
roll
cli
sub
dec
insl
push
pop
sbb
xlat
adc
add
or
adc
push
data16
mov
insl
xlat
push
cmpsb
in
sub
cld
or
xlat
jg
sub
iret
mov
mov
mov
cmp
adc
pusha
or
or
pop
andl
notb
sti
pusha
int
dec
aam
ljmp
fldl
stos
mov
fstpt
jnp
repz
das
xor
call
mov
and
mov
testb
mov
cmp
js
ficoms
sub
aaa
test
xchg
subl
andnps
or
ljmp
cld
mov
push
xor
pop
cmp
mov
je
xor
lds
and
mov
inc
test
or
sub
adc
dec
test
add
mov
add
dec
stc
cmp
adc
xchg
ss
adc
cmp
xchg
movsl
fidivl
call
jp
scas
mov
fcmovnbe
pop
insl
jp
jno
xchg
cmp
pop
jbe
es
push
mov
aam
dec
dec
pop
gs
mov
xchg
jl
es
out
push
xcrypt-ctr
cmpsl
lcall
insb
pop
add
loopne
push
mov
in
mov
into
aaa
ljmp
mov
dec
xor
es
stc
inc
mov
adc
mov
adc
stc
sti
scas
std
imulw
jle
jle
mov
outsl
shrb
mov
scas
shl
shll
imul
fnsave
and
jb
jge
out
dec
and
ret
movsb
pop
popf
icebp
pop
arpl
test
clc
js
sbb
movsl
call
loopne
insb
sub
out
push
add
in
pop
inc
idiv
leave
stos
mov
test
push
out
sub
dec
test
les
repnz
cmp
xchg
gs
dec
mov
pop
add
pinsrw
faddl
sub
xchg
xor
adc
pop
cmp
pushf
sbbl
mov
cmp
mov
dec
repz
stc
sbbb
push
fldl
pop
mov
test
js
mov
repz
and
mov
cmp
out
sub
and
jge
scas
lcall
push
outsl
jns
mov
mov
nop
movsb
xor
jmp
cmc
addr16
pushf
icebp
jp
dec
jmp
movsl
hlt
push
push
adc
ja
fstpt
fwait
repnz
mov
mov
and
mov
std
imul
outsl
fdivl
dec
das
mov
mov
jle
ss
in
xor
mov
xor
psubsw
aam
pop
in
adc
test
add
cs
jecxz
sbb
fcomip
rcrb
outsb
jnp
sti
fsubrp
test
mov
sub
sbbl
mov
mov
js
add
rclb
xorb
push
outsb
jo
call
jge
jns
rclb
mov
push
adc
fstpt
gs
es
xchg
inc
out
push
aad
mov
aas
inc
fadds
int
sbb
stc
arpl
icebp
xchg
aad
loopne
and
mov
push
lds
rolb
mov
aaa
mov
test
xchg
sti
jns
cld
push
jo
push
mov
mull
cld
sub
ror
or
sbb
inc
rolb
movsb
mov
pop
inc
mov
add
and
push
ja
xchg
inc
and
pushf
and
popf
int
aas
movsl
dec
or
xchg
stos
dec
or
repz
mov
xor
in
loope
dec
and
pop
add
add
sbb
popa
mov
mov
mov
dec
out
cmp
mov
iret
es
adc
cmp
aam
adc
mov
push
test
outsl
pushf
fcompl
pop
mul
dec
inc
dec
mov
fdivrs
mov
mov
jns
into
adc
dec
es
in
popa
sub
sbb
fxch
cwtl
popf
or
xor
sbb
stos
out
xchg
xor
mov
stos
call
je
push
mov
adc
cs
pop
pop
shll
add
sbb
lahf
lahf
add
shl
data16
dec
mul
cmp
iret
fmuls
push
xor
cli
inc
cmp
fdivs
aad
arpl
mov
fucom
popa
shrl
push
push
xchg
iret
mov
or
xor
mov
sarb
decl
movsb
sub
dec
dec
xchg
and
movsl
std
cs
aad
arpl
jnp
pop
push
dec
rorb
jne
sbbb
movups
mov
xchg
or
mov
shr
in
pop
repnz
or
loop
adc
mov
sti
push
cmp
cmpsb
ljmp
pop
and
xchg
es
inc
mov
cs
pusha
push
orl
sti
fiadds
adc
dec
int3
inc
in
into
add
aam
imul
imul
cli
jle
and
addr16
lcall
cmpsb
repz
add
push
inc
loop
ret
clc
push
js
cmp
fidivrs
adc
mov
shlb
jle
jecxz
cmp
cmp
cmp
adc
cmp
es
jns
dec
mov
in
sahf
xchg
cbtw
cs
in
loope
test
mov
sbb
jle
daa
rcr
sbb
dec
jbe
in
arpl
xchg
jnp
sub
andl
lret
and
ljmp
gs
pop
out
sub
int
mov
jnp
jp
and
loope
test
mov
rcr
arpl
cmp
adc
pop
daa
xor
test
xchg
xchg
aad
loopne
or
movnti
dec
cld
sarl
stos
dec
out
and
mov
loope
dec
sbb
dec
popf
jmp
stos
mov
arpl
lods
or
call
insl
loop
les
xchg
jne
test
imul
sub
je
ljmp
jnp
aas
push
push
notl
mov
xchg
addr16
xchg
dec
jmp
adc
stos
xlat
outsl
movswl
fsts
sti
xlat
pusha
inc
stc
shl
lods
cli
repz
jno
sub
sarb
xchg
repz
dec
mov
outsl
movsb
mov
insl
mov
fdivrl
adcl
lds
dec
scas
aaa
hlt
xor
je
mov
or
jg
sub
arpl
ret
sbb
mov
ja
mov
add
mov
pop
stos
cmp
fwait
std
shlb
and
fisubl
out
and
imul
les
pop
and
sbb
shll
repnz
jmp
lds
sub
shll
xor
push
sahf
dec
xchg
inc
test
push
xchg
push
in
dec
das
dec
inc
mov
push
mov
repz
shl
out
push
jae
popa
push
shl
sbb
pop
cmp
push
lods
fsts
aam
sbb
jle,pt
mov
outsl
in
test
xor
sbb
jecxz
bound
cwtl
mov
push
xlat
daa
nop
aas
cli
push
and
push
adc
mov
inc
addr16
add
or
add
pop
in
pop
xlat
fstps
cmp
xor
push
testb
fidivrs
sbb
push
pop
jae
pusha
lret
push
adc
push
daa
lods
hlt
mov
cmp
data16
inc
out
mov
adc
mov
adc
pop
jg
pushf
push
and
cmpsb
mov
cltd
adc
pop
pushf
mov
rcl
into
movsl
jg
shlb
stc
repnz
gs
xchg
jo
mov
inc
ss
testb
cltd
sahf
data16
mov
mov
mul
fadds
lcall
fdivrp
lods
xor
sbb
push
sti
cmp
popf
pop
rolb
test
imulb
ret
lahf
inc
mov
mov
mov
fsubr
call
cld
leave
inc
out
je
sub
jmp
mov
and
int3
jbe
fdivrl
or
xor
dec
mov
aam
or
add
insl
xchg
xor
ret
movsb
lods
xchg
jno
lods
aas
inc
aaa
and
leave
sbb
sbb
mov
out
push
sub
mov
inc
push
roll
pop
inc
push
dec
iret
sbb
push
mov
add
jnp
push
add
inc
sbb
or
sbb
mov
xchg
cmc
jge
or
push
push
out
call
scas
jl
mov
hlt
pop
js
mov
roll
sbb
stos
pop
xchg
jecxz
clc
push
mov
cmp
adc
push
out
movsb
icebp
test
mov
adc
out
mulb
fildl
push
adc
ret
jle
dec
rcll
fiadds
or
pop
enter
lahf
dec
and
pop
ss
inc
mov
and
movsl
lods
stos
fistl
push
inc
push
pop
out
les
outsb
movsl
rolb
insb
mov
jnp
adc
adc
and
xchg
jl
xchg
or
push
push
ljmp
cmp
xor
je
adc
repz
popf
push
imul
test
xor
mov
fstl
or
pop
cmp
mov
cs
or
and
adc
mov
lds
stc
pop
dec
push
adc
sarb
sbb
xor
leave
testb
push
mov
push
lret
inc
icebp
mov
fistpll
test
mov
shll
aad
imul
mov
popf
mov
inc
cld
mov
sahf
jp
inc
out
lods
and
jbe
jne
mov
pop
cmp
das
sbb
sub
shrb
jo
sbb
or
popa
scas
or
bnd
inc
and
lea
add
loopne
mov
pop
mov
mov
xlat
xchg
push
pop
mov
add
xchg
inc
jne
inc
xchg
popa
pop
in
or
push
fmul
dec
in
je
push
rcrb
mov
pop
ficoms
inc
inc
pusha
adc
and
adc
dec
or
pop
cmpsb
pusha
dec
dec
sbb
gs
popa
sub
mov
and
push
mov
dec
jns
lods
xchg
cmove
mov
xor
xchg
dec
fistps
mov
imul
pop
mov
mov
inc
dec
notb
lods
in
mov
fnstcw
xor
inc
jg
sbb
sub
cld
scas
mov
mov
test
xor
jmp
aad
lds
mov
mov
cmovne
ja
or
cmpsb
jecxz
bound
ss
cmp
ja
xorb
inc
inc
jmp
test
daa
fistpl
cwtl
out
pop
cmpsb
push
fmul
and
pushf
fcmovnu
je
mov
sti
outsb
es
push
outsb
in
jecxz
arpl
and
sub
mov
mov
mov
xorps
mov
xchg
pop
je
mov
jmp
mov
and
dec
scas
sub
xchg
or
adcl
xchg
or
sbb
dec
insl
scas
out
lcall
push
pop
int
pop
push
inc
pop
int
cmp
xor
cmp
imul
xor
lcall
mov
push
stc
scas
jl
pushf
mov
jmp
cmp
xchg
lock
mov
scas
in
mov
cmc
and
lds
xchg
rcll
xchg
mov
sti
fstpl
mov
mov
xchg
in
add
clc
rcrl
jp
das
mov
cmp
xor
sbb
push
imulb
cli
nopl
lods
adc
bound
outsb
std
stos
aas
lods
in
xchg
ss
inc
adc
in
pop
mov
leave
push
pop
outsl
int
mov
inc
call
xlat
dec
mov
icebp
ja
or
or
jle
lock
push
sub
xorb
mov
xchg
push
add
es
sub
icebp
shll
inc
inc
cmp
fst
jecxz
pop
add
jle
mov
je
std
jne
stc
ds
icebp
decl
cmp
fwait
aaa
jnp
xchg
in
std
sbb
sbbl
mov
jle
mov
in
sbb
sti
cs
outsl
pop
hlt
push
xchg
lods
xor
ret
push
test
adc
xor
and
xchg
aas
jne
jb
bound
jge
sub
movsb
xor
ror
inc
pop
push
lds
inc
push
data16
jne
shr
inc
out
lea
xchg
dec
dec
push
popl
add
fidivl
or
mov
pusha
pop
cmp
xchg
aad
xorb
jae
xchg
sbb
cmp
shll
addr16
repnz
xor
std
dec
xchg
mov
mov
lahf
dec
out
dec
bound
rcrl
xchg
adc
fildll
movsb
enter
cwtl
push
fdivp
ret
jmp
insb
aaa
cltd
cmpsb
pusha
xchg
sahf
sbb
dec
out
outsb
pop
or
ds
inc
jecxz
pusha
addr16
mov
or
mov
pop
enter
imul
lcall
sbb
in
insl
add
jb
mov
jp
mov
mov
push
roll
ret
pushf
in
add
dec
mov
popl
cmp
xor
push
inc
inc
add
mov
sbb
cltd
je
cmp
rorb
stos
dec
xor
cltd
fs
mov
or
movsl
fnsave
outsb
adc
pop
and
jae
dec
xchg
aad
jmp
jge
popa
je
xor
cs
xor
loopne
mov
popf
dec
jnp
push
insl
push
push
sub
aam
add
push
xchg
fimuls
mov
add
negb
or
popf
mov
sahf
mov
outsb
in
xor
push
jne
into
mov
and
loope
or
clc
xchg
ret
mov
xchg
cmp
jecxz
sbb
ds
mov
mov
fsubrs
push
jb
xchg
shrl
ja
insb
add
je
clc
bnd
int
das
iret
xlat
insb
cli
sahf
movsl
fwait
addr16
xorl
push
outsl
jbe
fnsave
cmp
cmp
loope
mov
aaa
cs
sbb
insb
xor
orb
mov
fdivr
test
pop
pop
in
rcrb
mov
ret
push
pop
sub
lock
lret
ja
sub
cmpsb
stos
cld
es
jne
les
cmp
push
push
aas
and
shr
out
cmpsb
adc
sbb
xchg
mov
adc
fcmovbe
das
lahf
scas
leave
in
mov
dec
jmp
dec
mov
jmp
cmpsl
cmp
insl
jnp
scas
aad
add
xchg
subb
mov
push
pop
outsb
lock
loop
enter
mov
mov
mov
pop
mov
pop
in
ds
adc
gs
cs
xor
mov
or
cmp
mov
cmp
push
xchg
in
pop
ja
pop
lods
lret
adc
loope
jmp
shll
and
fstps
xor
loop
out
dec
add
push
bound
test
imul
sbbb
scas
sub
inc
sub
in
daa
dec
xor
add
dec
lahf
shrl
jne
add
inc
data16
sbbb
xor
dec
lcall
and
inc
adc
xor
inc
sub
jo
in
xor
xchg
out
js
push
pop
test
cmpsb
ret
sti
xchg
xlat
lods
add
lods
movsl
mov
cs
xchg
lret
imul
cmp
aas
lds
pop
mov
shl
nop
pop
loope
std
pop
pop
push
mov
dec
flds
idivl
xchg
jmp
jno
push
pop
xchg
aam
cli
jecxz
stos
xor
iret
mov
jns
fs
push
sub
lds
fsubrl
fidivrs
aas
push
cmc
fcmovbe
pop
jl
jbe
std
enter
lret
adc
vpandn
insl
mov
push
ja
repz
sbb
pop
sub
addr16
cwtl
push
test
scas
xor
and
test
mov
dec
repnz
cmc
rcrl
jmp
in
cli
out
adcl
shrb
pusha
pop
or
dec
lods
or
pusha
or
movd
popa
mov
jle
ret
mov
pop
xor
mov
mov
add
pop
inc
mull
cmpsl
xor
rcl
push
dec
pop
ja
or
aas
jae
arpl
and
into
or
mov
inc
cli
jae
cmp
push
ss
mov
xchg
jbe
cs
mov
jo
rcll
mov
cs
je
sbb
mov
les
fstl
mov
pop
and
sbbl
mov
inc
xchg
cmp
pop
xorl
sub
imull
pushf
mov
cmc
cmp
xor
cmp
mov
xchg
fs
xchg
xchg
cltd
insl
cmp
mov
enter
jne
fisttpll
cltd
in
int
mov
mov
push
sti
sbb
jp
cmp
add
xor
es
xchg
inc
loope
mov
xor
push
dec
xchg
insb
cli
dec
mov
push
push
gs
mov
mov
lcall
and
andl
pushf
mov
push
mov
mov
and
push
jae
xchg
test
xor
int
and
jmp
daa
mov
int
imul
movsl
jmp
out
jg
roll
sbb
jecxz
jmp
mov
sbb
add
cmpsb
or
xor
dec
outsl
hlt
in
das
adc
mov
addr16
xlat
and
mov
cmp
dec
add
adc
push
sbb
daa
rolb
sbb
push
mov
lods
inc
inc
dec
mov
aas
repz
int3
dec
adc
mov
jmp
call
add
lods
call
stc
adc
mov
add
sub
jno
lods
scas
jo
and
popa
sbb
sub
sub
stc
push
ret
jl
fstpl
push
adc
push
mov
mov
mov
mov
andb
xchg
add
addr16
mov
imul
add
mov
pop
jle
pop
roll
mov
fldl
lds
jl
mov
mov
push
test
xchg
dec
cwtl
movsb
jl
je
xchg
cmp
ljmp
inc
es
test
lret
mov
add
and
out
lea
out
das
iret
pushf
mov
repnz
out
mov
push
sbb
push
and
inc
or
dec
jge
push
cmp
inc
outsb
movsl
jne
cmp
fs
aam
cmpb
cmpsb
js
es
jno
out
lret
lds
stos
xor
movsl
cmp
movl
inc
pop
test
xor
sub
je
dec
sub
into
loope
or
out
stos
add
and
push
cmpsb
adc
pop
inc
dec
sqrtps
int3
es
stos
xchg
pop
mov
add
push
add
sti
or
mov
addr16
leave
int
imul
xor
fmull
cwtl
ja
mov
cs
fildl
pushl
nop
add
loope
adc
xor
sbb
rolb
into
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
inc
or
pop
jp
roll
stos
mov
xchg
cs
rcrb
xchg
imul
and
dec
ja
and
jbe
pop
dec
adc
mov
loop
rdmsr
lret
and
mov
inc
scas
push
je
push
testb
pop
repz
or
insb
aaa
loop
cltd
clc
sub
mov
mov
hlt
cmp
repnz
outsb
in
xlat
les
test
pop
pop
add
stos
int3
pop
mov
cmc
rorl
ret
add
jae
push
and
shrl
aas
cmpsb
lahf
add
stos
inc
adc
lcall
orb
cltd
adc
mov
mov
pop
jno
stc
or
push
fidivrs
mov
jl
cmp
dec
push
pushf
push
aaa
push
xchg
stos
lods
leave
roll
mov
adc
mov
clc
adc
cmp
imul
mov
shr
movsb
inc
outsb
lcall
into
data16
cmpsb
sahf
lcall
push
push
xor
pop
mov
fdivrs
lret
lahf
pop
jae
int3
cmp
pop
sbb
sub
mov
inc
test
fisubs
out
jnp
lds
inc
rcl
cwtl
test
or
push
sub
cli
into
add
fcompl
scas
fdivl
jae
inc
pop
mov
ss
dec
adc
fisubrl
lds
adc
mov
rcrb
stos
int3
test
mov
insl
xchg
sub
lds
add
add
jnp
nop
fisubl
stos
jl
in
jl
jmp
sahf
add
in
inc
add
fstpt
imul
and
or
add
shlb
inc
daa
sub
dec
mov
dec
outsb
jle
shrl
or
pop
in
push
jns
mov
es
mov
or
dec
stos
adc
mov
in
inc
in
mov
popf
out
dec
icebp
cmp
imul
and
cs
stc
fistl
xor
push
popf
pop
adc
iret
fs
lcall
jno
push
cmp
negb
out
scas
int3
xor
cmp
adc
cmp
movsb
popa
xor
pop
cld
cwtl
mov
inc
jl
push
out
mov
cli
or
shlb
pop
mov
insl
inc
xchg
lahf
jp
insl
inc
jl
nop
and
jno
mov
scas
mov
mov
and
mov
mov
cltd
and
xor
sarl
in
add
pop
cmp
daa
xchg
mov
enter
lahf
mov
mov
push
mov
xor
push
ja
std
push
xor
mov
inc
out
mov
movsl
inc
pop
mov
fildl
pop
and
fwait
es
inc
pop
lcall
sub
pop
pop
push
mulb
or
ljmp
sbb
lock
xchg
xchg
imul
xor
pop
aad
out
leave
lcall
push
nop
add
shrl
movsb
test
pop
fnstsw
fisttpll
jmp
push
sbbb
push
or
xorb
sbb
ret
xchg
mov
mov
mov
into
aaa
mov
pusha
inc
mov
xchg
pminub
push
hlt
push
loop
fnstsw
xor
fnstcw
push
into
rol
cmp
movsb
imul
dec
push
mov
add
sarb
cli
js
shl
cli
gs
ret
or
push
lret
and
adc
adc
mulb
xor
inc
mov
and
sub
xchg
jge
into
jge
and
sbb
int3
sub
pop
imul
xor
sbb
or
or
imul
icebp
jl
lods
aam
push
pop
inc
cmp
dec
insb
adc
add
lock
scas
cs
jae
jecxz
adc
in
add
sti
dec
shll
xor
jl
mov
sub
push
sti
xchg
enter
mov
mov
movsb
and
lds
xchg
mov
mov
cltd
or
push
add
loope
add
or
add
push
scas
inc
push
inc
inc
cmpsb
adc
sbb
cmp
sub
repnz
xor
push
jge
ja
xchg
lods
rorl
push
adcb
mov
jb
xchg
hlt
mov
xor
push
adc
arpl
cltd
aad
sub
cmpsl
leave
xchg
mov
ror
lcall
dec
mov
xchg
xor
pop
push
add
mov
lea
cmp
insl
fidivrs
adc
pop
aas
mul
loop
and
arpl
out
fadds
icebp
clc
mov
cmpsl
call
repnz
cmc
js
cmc
lods
sbb
addr16
cli
enter
pop
subl
shl
push
adc
inc
inc
mov
mov
out
mov
mov
fisubrs
xor
mov
cmp
jge
sti
movd
lcall
sti
jmp
fwait
sub
jge
hlt
rorb
sbb
mov
sti
jno
or
push
movsl
out
pop
mov
mov
sub
inc
pop
push
fucomi
std
popa
aaa
testb
xlat
test
xchg
fwait
out
cltd
inc
sub
dec
push
xchg
repnz
movsl
mov
push
ja
hlt
push
fs
imull
imul
mov
in
aad
je
push
mov
mov
xchg
popf
sbb
cmp
iret
pop
push
or
in
cmp
lret
and
pop
addr16
pop
cs
repz
shl
addr16
jbe
inc
clc
sti
addr16
mov
mov
add
gs
dec
add
xor
inc
sub
dec
and
xor
xor
inc
fsubl
fldenv
scas
xor
jp
popf
mov
mov
fists
cmp
jmp
dec
cli
in
lds
cwtl
add
xchg
jne
mov
repnz
test
loop
popf
cli
cmpsb
sbb
in
aas
mov
sbb
jle
adc
push
xlat
sbb
or
jns
daa
stos
sub
or
xor
mov
xchg
movb
lods
pop
push
lods
sbbb
loope
fisubl
inc
jb
sub
pop
sbb
movsl
xchg
xchg
stc
pop
jnp
insl
fdivs
arpl
movsb
cwtl
sub
je
pop
out
or
aaa
je
test
or
mov
mov
mov
or
xchg
fldt
jne
shrb
pop
mov
cmp
xor
pop
das
sbb
aaa
and
aaa
mov
cmp
leave
cmpsl
cmp
mov
mov
dec
adc
addl
push
or
jmp
pop
rorl
loope
inc
in
lods
cmp
sub
ret
and
mov
js
mov
mov
inc
int
outsb
fidivrs
mov
jo
jl
mov
fwait
in
xchg
lea
test
dec
push
xor
fiadds
rcll
mov
aam
xchg
ret
jo
or
jg
ret
dec
mov
scas
icebp
jno
fistpl
or
or
dec
repz
and
sub
mov
jb
inc
sahf
jl
pop
jbe
into
dec
xor
mov
pop
mov
mov
mov
mov
ja
add
mov
in
sahf
loop
ja
call
and
dec
stos
sahf
xor
sti
mov
xor
arpl
imul
sbb
pop
adc
mov
mov
shl
xchg
or
arpl
jmp
jl
std
mov
popf
gs
sbbl
ljmp
ja
dec
popa
rcl
xor
jns
call
push
hlt
outsb
nop
pushf
mov
sub
insb
mov
cli
movsb
jp
sbb
lods
mov
gs
sub
imul
in
enter
jp
out
push
sbb
or
nop
push
pop
or
add
inc
xchg
mov
aaa
adc
orb
xor
jne
pop
shr
rcrb
push
inc
ss
lods
mov
movsb
lock
jns
sub
and
xorb
insl
enter
imul
arpl
adc
cmp
pushl
mov
inc
ljmp
test
notb
les
ja
pop
into
mov
pcmpgtd
rclb
hlt
lods
stc
popa
and
adc
push
dec
imul
dec
jmp
xorb
lds
or
arpl
mov
mov
mov
jmp
je
data16
rcl
aad
outsb
push
xorb
pop
pop
int3
stc
mov
out
or
arpl
sbb
sub
push
fmull
fsubrs
sub
int
dec
insl
icebp
push
bound
jae
nop
pop
scas
pop
jns
ljmp
clc
mov
and
dec
movsl
dec
ja
mov
and
icebp
jo
test
popa
cmc
cli
imul
or
inc
lds
pop
jae
pop
mov
dec
punpcklwd
add
adc
cwtl
mov
in
jge
inc
roll
pavgb
sub
arpl
stos
or
xchg
jo
aas
fisttps
or
mov
sbb
or
mov
dec
cli
jae
mov
movsl
and
jno
inc
arpl
inc
mov
and
jns
outsl
jns
das
cmp
dec
jmp
sbb
dec
mov
aas
xor
popa
inc
test
sub
pop
fcompl
insb
ss
pop
push
popf
pop
movsl
repz
mov
pusha
dec
xchg
mov
mov
mov
in
adc
jp
in
jecxz
shll
inc
js
test
and
xor
push
aam
outsl
inc
mov
mov
stos
dec
test
in
or
test
scas
pop
repnz
and
filds
inc
pop
add
cmp
sub
data16
in
push
stos
or
outsl
jp
std
mov
pusha
dec
cmp
mov
fnstsw
bound
loopne
loope
fwait
xchg
lock
arpl
clc
cs
and
arpl
adc
xor
stc
das
orb
bound
outsl
imul
jp
adc
inc
push
mov
pushf
mov
cwtl
push
add
mov
fnsave
popa
popa
js
out
adc
pop
pop
fldl
mov
popa
lret
xchg
les
adc
sub
xchg
aaa
jl
cmp
dec
lcall
mov
inc
hlt
fnstsw
mov
div
in
std
push
sub
mov
mov
pop
fs
getsec
aas
xchg
xchg
sub
iret
mov
or
loop
cmp
adc
int3
nop
mov
xor
xor
fisubs
and
gs
mov
das
xor
lds
xor
cmp
or
ja
cli
mov
pusha
sub
jnp
mov
cli
jno
xchg
jns
push
gs
arpl
cmp
inc
sub
arpl
outsb
jne
adc
fwait
xor
xor
mov
fsubrl
movsb
adc
div
test
adc
stos
aam
repz
jge
add
lods
pop
or
cmp
popf
sub
adc
add
xchg
iret
sub
mov
dec
scas
aad
sub
xchg
mov
inc
popf
adc
dec
out
es
loopne
movsl
fsubr
mov
out
fs
sbb
inc
mov
fistps
xor
xor
xchg
mov
ljmp
movsl
outsb
stos
test
cmp
jae
fdivrs
cwtl
clc
xor
pushf
inc
push
dec
std
sbb
xchg
xchg
sub
push
mov
bound
out
xchg
dec
cld
stc
orl
jge
adc
cmp
and
sub
clc
xor
push
movb
pop
jmp
pop
pushl
push
dec
jno
jp
fistpll
inc
push
pop
test
in
clc
in
jb
test
cmp
inc
adc
push
jmp
lcall
gs
imul
cwtl
push
test
xchg
shlb
mov
stos
lods
mov
jl
and
lods
ds
sarl
pop
lods
or
lahf
stc
cmp
jg
pop
mov
pop
add
mov
into
jecxz
js
std
ret
sbbb
mov
stos
mov
push
pop
jns
divl
popf
and
ljmp
int3
cli
jnp
sahf
inc
nop
add
or
aaa
jo
arpl
sbb
dec
pop
and
mov
lret
in
popa
cmp
ljmp
cmp
jp
sbb
dec
fs
aas
test
xchg
leave
push
and
sbb
xchg
mov
aam
sbb
aam
sub
mov
push
cmp
mov
sarb
and
xchg
xor
test
adc
rep
lret
lock
add
ficoms
jp
mov
lods
cmp
call
dec
scas
das
add
outsb
icebp
xchg
or
divl
add
cmpsl
mov
ficompl
and
push
popa
lods
push
pop
insl
roll
jbe
enter
xchg
cwtl
in
lret
mov
pop
pop
jge
pop
cmp
lods
jp
ficoml
or
sbb
push
cmpsl
repz
jo
mov
imul
dec
fcoms
ss
cs
jle
insb
test
mov
xor
and
push
cmp
add
clc
push
push
sarb
xchg
fimuls
and
rorl
sti
mov
or
xor
into
inc
out
jne
dec
inc
cmp
add
mov
jg
mov
pushl
xchg
inc
test
and
or
into
cwtl
ds
out
xchg
ss
and
loop
push
inc
rcrb
iret
bnd
dec
adc
ja
fldl
ljmp
in
fisttpll
les
mov
cmpsb
mov
inc
mov
leave
fiaddl
push
insb
notb
lret
repz
sub
pop
or
cmp
mov
imul
cltd
cmpsl
and
dec
cmpsb
cmpsl
add
push
push
sbb
xchg
xchg
jp
cmp
sub
adc
daa
test
lahf
cmc
jo
faddl
sub
arpl
sbb
xor
out
xchg
ss
add
push
and
outsl
cmpsb
in
cmp
test
test
dec
cmp
sahf
fstl
lea
dec
or
fstpl
pop
fs
sub
push
les
int3
xor
cmp
sub
fidivrs
es
cmovl
mov
mov
or
sahf
pop
cmpb
insb
mov
mov
sbb
xchg
icebp
call
sti
arpl
les
mov
mov
lds
jg
jg
lea
stc
scas
or
rcll
je
fs
cmp
mov
sbb
icebp
rorl
sbb
cmp
cmp
sahf
mov
sbb
sbb
cs
cmpsl
in
out
jns
lcall
ret
pushf
mov
inc
mov
cmp
add
addr16
push
push
in
jge
push
cmp
jmp
aas
mov
mov
fstps
daa
add
cmpsb
jge
js
jmp
fiadds
dec
incl
lods
mov
push
jbe
pusha
or
loope
cld
dec
js
push
inc
mov
enter
mov
xor
cltd
icebp
cmp
xchg
dec
int3
push
or
sti
js
cld
mov
pushf
lcall
neg
dec
cmp
and
repz
mov
enter
mov
or
and
dec
out
imul
sub
adc
movswl
lret
sub
ja
pop
inc
outsl
xor
sub
mov
testb
loope
fldenv
loopne
jbe
negb
xor
pop
mov
icebp
into
sub
jmp
mov
scas
mov
sub
andl
daa
imul
insb
mov
lcall
aas
js
push
jl
leave
xor
loope
or
fdivr
adc
iret
cmpsb
cltd
in
cs
dec
cmpsl
popa
xchg
sti
or
jg
ss
popa
sbb
adc
cli
push
data16
insl
loope
or
push
sbb
jle
sbbb
mov
add
shll
shr
in
cwtl
add
push
jmp
mov
push
mov
push
lock
cwtl
ret
dec
cmp
xchg
testl
mov
lock
or
shll
inc
rorl
movsl
inc
aad
loopne
icebp
lret
mov
add
ret
mov
and
dec
fsubrs
push
scas
mov
mov
cmp
cmpl
sub
stos
inc
pop
enter
out
sbb
out
fwait
orb
out
mov
sub
jmp
dec
notb
xchg
lret
es
test
jecxz
mov
aam
lcall
cmpsb
cmp
lods
scas
movsb
mov
rorb
test
fcoms
jno
dec
jno
shr
gs
or
je
lea
mov
fistpl
mov
lds
inc
or
xchg
decl
sbb
fsts
rclb
add
dec
sub
cmpl
daa
movsl
add
mov
cli
xchg
popa
cwtl
lds
addr16
test
shrb
pop
mov
fldpi
je
sub
dec
out
enter
clc
pushf
xchg
stos
inc
jae
rcr
or
cmp
mov
cmova
sbb
aad
es
sub
mov
push
dec
mov
jns
fwait
and
add
in
jle
das
es
and
test
repz
inc
rclb
ret
mov
push
xchg
lret
shlb
shll
push
dec
mov
jo
add
inc
mov
leave
push
add
xchg
dec
pop
cmp
lock
xor
imul
lds
pop
push
cmp
cmpl
aad
lds
dec
aaa
inc
pushf
cltd
push
arpl
lret
dec
or
enter
out
xor
ret
fcmovnbe
leave
cs
imul
xchg
and
mov
pavgb
outsb
add
mov
jmp
and
insl
div
dec
loop
jle
lret
das
jne
fimull
in
popf
dec
hlt
stos
xchg
xchg
add
xor
sbb
rorl
clc
std
aaa
fnstcw
scas
mov
mov
lret
pop
clc
iret
and
cmp
push
sarl
cmp
shll
aad
sub
jg
dec
sbb
xor
aas
cltd
scas
xor
popf
and
xor
ljmp
into
push
lods
out
stos
ret
outsb
scas
sbb
jle
pop
mov
sbb
adc
inc
fwait
push
pop
xor
fistpl
loope
mov
aam
push
adcl
adc
xchg
jmp
sbb
test
jmp
dec
cld
lds
xchg
pop
mov
stos
push
inc
dec
mov
mov
test
xor
mov
push
dec
daa
in
xor
mov
pop
jbe
negl
xchg
cmp
adc
jbe
cltd
mov
pop
ljmp
fmul
nop
in
and
enter
dec
push
push
movl
addr16
or
out
cltd
or
cmpsb
jnp
and
cmp
test
je
fs
add
test
mov
inc
mov
movsb
dec
add
xchg
cmpsl
lods
movsl
je
or
shl
incl
out
dec
jb
pusha
xor
adc
repz
inc
pushf
jge
sar
push
mov
iret
lret
loop
nop
call
cmpsl
mov
push
mov
cmovno
pop
add
lock
int3
iret
xor
pusha
stos
pop
lcall
lret
imul
mulb
adc
jecxz
and
pop
adcb
dec
leave
lds
pop
cs
repnz
ret
sti
aad
ds
cs
pop
lcall
mov
or
push
movsb
fsubrl
cmpsb
daa
stos
adc
inc
in
adc
push
adc
fs
mov
sahf
gs
std
js
push
xchg
dec
nop
daa
inc
xchg
and
mov
fwait
shl
test
test
mov
fnsave
jns
fidivrl
decl
loop
call
daa
jne
jle
shl
pop
add
xchg
sbb
mov
int
test
inc
ficoms
ljmp
daa
es
cmpsl
mov
adc
ja
dec
movl
out
dec
nop
and
push
jecxz
insl
push
dec
dec
inc
outsb
andl
aam
les
mov
cwtl
xchg
dec
dec
fsub
cmp
jo
jno
sbb
clc
add
sbb
shll
mov
mov
mov
outsl
push
xchg
jbe
ficoms
push
sub
pusha
add
xor
inc
call
mov
mov
iret
rorb
xchg
aas
das
jecxz
arpl
loopne
dec
lock
pop
xor
sub
pop
mov
jb
push
sub
or
lock
std
in
ret
or
add
ljmp
jecxz
sub
dec
aad
jb
fildl
jno
or
adc
fcmovnb
and
jns
test
gs
in
or
stos
dec
inc
das
mov
movsl
out
and
push
scas
scas
jmp
pop
xchg
xchg
loop
jp
imul
and
pusha
jno
lock
inc
adc
lcall
std
insl
and
push
std
jmp
insb
in
dec
jp
out
fimull
sub
adc
mov
jmp
icebp
and
ss
hlt
jge
sub
sub
mov
push
dec
outsb
jl
test
fstl
sbb
stos
cmp
loop
adc
call
xor
fdivs
enter
iret
ret
in
adc
popa
jg
mov
jns
adc
cmpsb
adc
mov
xor
adc
test
adc
inc
mov
xchg
ret
lret
jmp
rol
aas
cmp
in
lods
es
xor
jp
push
outsl
in
cltd
or
xchg
push
adc
xchg
sbb
rorl
push
push
outsb
daa
lret
mov
pushf
movsb
addr16
xor
cmpsl
mov
stos
bnd
cmpsb
outsl
das
ljmp
dec
arpl
lods
out
fs
ret
pop
cld
js
cmpsl
es
shlb
sub
mov
ds
pop
mov
or
jl
inc
jle
xchg
jp
js
js
std
gs
leave
imul
call
cmpsl
mov
mov
in
les
sbb
pop
lcall
pushf
xor
cmpl
incb
mov
scas
ja
cmp
fnstcw
inc
stos
mov
jmp
stos
int3
xor
shll
and
ja
icebp
notl
jp
inc
ret
mov
jmp
push
mov
movsl
add
das
mov
mov
mov
pushw
inc
bound
fmul
mov
aaa
mov
fs
fidivrl
lahf
popa
mov
sar
das
mov
add
inc
vmovapd
mov
cmp
xchg
inc
or
ljmp
mov
lock
cmp
psllq
xchg
pop
lcall
fistl
jb
jle
mov
pop
cmp
adc
push
lea
dec
jnp
xchg
jl
stos
movsl
outsl
addr16
inc
lds
clc
jno
aam
and
movsl
ds
sub
in
cltd
jne
loopne
leave
movsb
push
push
jmp
ds
jle
bound
pop
aaa
enter
dec
int3
test
ja
clc
cltd
inc
jecxz
lret
clc
jg
xor
rolb
popl
push
imul
fisttps
in
xor
mov
cmp
xor
test
mov
gs
dec
jae
pop
cmp
sbb
stos
pop
or
lock
mov
cli
loopne
jns
cmp
push
inc
dec
hlt
sbb
mov
xchg
js
stos
add
movsb
in
mov
cmc
decl
jge
repz
mov
or
pop
or
dec
jl
pop
mov
sti
es
add
hlt
push
lds
jge
xchg
sti
or
cli
sbb
dec
or
cmpsb
imul
pop
into
mov
sub
jp
cmp
mov
mov
test
out
sti
outsl
loop,pn
add
insl
and
int3
sarl
repz
xor
dec
clc
cs
mov
adc
bound
mov
xchg
xchg
and
push
ljmp
push
jle
shlb
inc
pop
xor
sbb
gs
mov
out
lea
out
dec
sub
cmp
push
insl
pop
dec
mov
aaa
push
dec
lods
cmp
mov
sub
xor
lahf
sahf
hlt
and
mov
jmp
mov
inc
xor
mov
pop
jecxz
jg
shl
adc
jp,pn
adc
cmpl
pop
sub
ds
roll
inc
nop
add
rcrb
lock
jo
inc
nop
mov
mov
adc
nop
pop
cmpl
pop
in
jmp
out
test
inc
into
sahf
adc
cmp
cmp
out
jae
clc
les
outsb
xor
repz
xor
push
aaa
bound
or
insl
nop
fimuls
xor
sub
mov
sarl
dec
rol
mov
movsb
movsb
loopne
mov
xor
popf
in
sub
jg
mov
xchg
movsl
lock
cmc
inc
lcall
add
xchg
les
popf
sti
mov
and
pushf
inc
mov
inc
div
push
mov
pop
pop
xchg
add
cmp
mov
mov
pop
leave
into
inc
imul
mov
push
and
leave
int
fsts
and
mov
dec
mov
xchg
rolb
test
push
rcrb
pushf
or
jmp
dec
in
mov
pop
adc
out
or
imul
popf
xchg
pop
pop
andl
pop
add
xor
lahf
push
or
pop
or
cld
ds
lds
repz
jecxz
div
testb
call
pop
xchg
add
pop
mov
mov
outsl
pop
popf
mov
push
push
mov
mov
sar
adc
sbb
add
mov
lret
mov
out
xor
mov
arpl
sbb
into
cmp
inc
shrb
in
mov
mov
xchg
dec
pop
push
lahf
jp
icebp
add
inc
decl
adc
jbe
dec
push
iret
mov
repz
lcall
iret
dec
push
sbb
shlb
jp
jns
sbb
je
imulb
sbbl
ja
sub
movsb
js
or
push
jmp
rcrb
dec
pushf
or
sti
inc
stc
shlb
imul
shrb
enter
ja
jno
xchg
loopne
and
mov
and
mov
pop
hlt
arpl
mov
inc
pop
rcrb
ja
ljmp
xor
and
out
negb
daa
into
loopne
outsb
mov
daa
out
leave
iret
cmp
mov
jg
pop
or
dec
push
mov
cmc
dec
and
adc
push
push
lret
sub
sbb
popa
pop
jecxz
movsl
test
dec
js
xchg
pop
inc
mov
pop
and
jmp
adc
adc
mov
imul
xor
icebp
mov
or
out
ds
outsl
and
sbb
mov
lock
ds
mov
dec
xor
xor
sbbl
or
shlb
xor
pop
clc
mov
aas
dec
sub
fidivrl
push
adc
xchg
push
or
daa
sub
add
adc
xchg
fcoms
ret
out
pop
ret
push
mov
int3
cltd
insb
mov
mov
pushf
out
fnsave
js
aad
std
inc
mov
sub
cld
les
or
popf
xchg
fsubl
lret
ds
mov
sub
loope
add
mov
mov
fnstcw
jecxz
repnz
bound
sbb
ficompl
mov
aad
loopne
pshufw
movsl
sbb
lcall
aad
push
fcoml
lods
out
jb
jae
push
xor
jae
pop
rcll
punpcklbw
push
rorl
inc
xorb
lods
pop
adc
insb
cmp
sub
pop
adc
jg
scas
ljmp
or
cmp
push
sbb
mov
outsb
lods
jle
xchg
int3
subl
xorl
lock
enter
push
mov
test
jb
icebp
movsl
inc
roll
pusha
mov
mov
sbbb
lahf
xchg
fs
sbb
lods
mov
ja
fsub
cmp
adc
repnz
mov
repz
cmp
rorl
mov
das
sbb
mov
jl
cld
test
sahf
jns,pt
in
in
mov
enter
imul
mov
mov
sub
jns
and
out
xor
leave
jno
loop
repnz
push
push
cmp
push
dec
cmp
or
call
lock
xchg
scas
pop
hlt
mov
add
icebp
icebp
jo
xchg
pop
mov
shl
scas
or
mov
inc
add
fcmovnbe
mov
nop
loopne
xor
mov
pop
sub
imul
and
in
add
push
icebp
xchg
add
pop
gs
push
push
xchg
out
ud0
lea
mov
adc
push
xchg
into
inc
std
nop
dec
cmp
out
xlat
leave
push
repz
mov
pop
xor
repz
cmp
cmc
sti
dec
sub
test
push
push
test
sbb
or
and
xor
call
xor
cmp
or
inc
sarl
stos
daa
mov
imul
lods
jle
lea
lods
test
lds
mov
add
arpl
jecxz
and
sahf
push
pop
xor
imul
lods
or
push
sbb
das
jb
lcall
mov
sbb
xchg
cmc
sbb
fsubs
mov
add
call
jae
adc
fistl
ss
fucom
mov
pop
inc
xchg
sub
iret
and
call
xor
cmp
rclb
clc
dec
arpl
loope
cmc
mov
fsts
sub
mov
dec
dec
in
jns
loopne
xor
popf
mov
jle
mov
mov
jmp
mov
loopne
mov
cmpsl
dec
movsb
repnz
add
or
push
call
aam
sti
mov
pop
lret
sbb
ret
lahf
in
fmul
xchg
jae
dec
mov
cmp
int3
xor
inc
inc
jns
jmp
and
cwtl
adc
pop
sbbl
imul
enter
sbb
orb
pop
lcall
scas
push
lea
adc
sub
sti
jecxz
popf
cmp
inc
roll
repnz
pop
fistps
je
pushf
sbb
ljmp
in
jecxz
js
pop
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
gs
xor
fldl
subb
cltd
sahf
push
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
