push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
jmp
sbb
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
movzbl
sub
mov
mov
andl
mov
subl
sub
xor
mov
movl
mov
cmp
jne
movl
lea
adcl
mov
adcl
lea
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
jmp
push
xlat
xchg
loopne
cmpsb
emms
adc
subl
js
dec
pop
js
adc
pop
cmp
popa
ds
push
fdivrp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
mov
fdivrp
push
jg
jmp
xchg
fmull
mov
imull
push
or
and
dec
push
and
push
scas
adc
movsb
jmp
inc
sub
lret
sbb
jp
arpl
lcall
dec
repz
jo,pt
or
sub
xor
iret
mov
mov
inc
push
dec
push
cmp
xor
test
ret
stc
push
push
mov
inc
add
mov
int
enter
pop
aam
bound
je
xor
inc
test
xlat
jns
stos
pop
hlt
jecxz
aas
mov
loope
inc
outsb
mov
mov
out
lock
sbb
xor
shlb
idivb
pop
push
pop
jns
mov
xchg
ljmp
fcompl
fs
sub
notl
pop
xor
add
mov
aaa
jmp
adc
and
cwtl
xor
inc
fdivrp
int3
push
ret
mov
push
pop
imul
cli
mov
pop
shr
mov
mov
fcom
outsb
add
out
gs
and
mov
add
push
cld
sarl
mov
in
fwait
jp
loopne
mov
hlt
adc
xchg
inc
mov
movsl
rcll
pop
mov
mov
bnd
mov
int
lahf
aas
adc
inc
add
in
inc
jge
loopne
push
fstpt
subb
aam
div
sub
jno
push
jp
inc
push
stc
xchg
lcall
popa
sub
push
in
push
adc
sbb
scas
add
test
inc
lcall
lods
fsubl
inc
jmp
pop
sbb
mov
xchg
lret
mov
std
stos
dec
mov
xchg
mov
adc
ds
outsb
mov
rorb
jle
cmp
fstl
ret
xchg
mov
lret
or
push
imul
jmp
mov
fcoms
arpl
pop
rclb
mov
je
in
ret
jle
push
loop
jp
lcall
hlt
cltd
shlb
outsl
stc
shlb
dec
ficoms
ds
in
pop
je
adc
mov
mov
xor
push
ds
xor
adc
jo
rcrl
mov
cmp
loope
insl
sub
dec
outsb
das
test
sub
into
dec
mov
imul
xor
pop
cmp
jnp
filds
in
lods
notl
pop
aad
fucomip
fwait
imul
push
outsl
jno
pop
mov
sbb
xor
mov
cmp
roll
pop
mov
popf
mov
cld
lock
mov
in
outsl
fisubl
jmp
insb
sahf
and
cltd
pop
mov
orb
jnp
cmp
lcall
pop
std
inc
jmp
fdivs
lods
xchg
xor
and
mov
sub
out
mov
iret
sahf
lahf
pop
inc
aaa
xchg
sub
jb
mov
inc
lods
repnz
inc
insb
or
loope
mov
push
les
cmpsb
and
jbe
jo
mov
repz
aaa
push
push
cmc
push
pushf
rclb
fdivs
test
jge
jns
add
dec
and
adc
jne
pop
sub
inc
cli
enter
fidivrl
in
jno
jmp
cli
sahf
xorb
push
jb
cmp
add
mov
shlb
mov
aaa
cmp
scas
jne
movsl
movsl
dec
sbb
mov
xlat
popf
leave
jno
push
and
jl
cmpsb
mov
fcompl
or
into
xor
inc
mov
into
cmp
sub
loopne
sahf
mov
ljmp
lock
outsl
sub
mov
scas
pop
sbb
pusha
loop
and
cli
sti
and
imul
cmpsb
cld
mov
mov
mov
arpl
add
mov
ja
push
jb
jo
in
pop
pop
and
pop
lods
rorl
add
pop
loope
or
pop
out
xlat
insl
add
inc
leave
out
hlt
scas
das
jns
cli
dec
addb
repz
inc
mov
pop
into
push
xchg
out
into
adc
ds
xchg
mov
and
lods
lahf
push
iret
and
inc
cli
loopne
mov
pop
pop
sbb
sbb
sbb
decb
cltd
rcl
jnp
mov
dec
sahf
fcmovne
inc
cwtl
lock
into
addb
sbb
sub
lcall
or
push
pop
push
test
xchg
les
cmc
insb
scas
scas
es
test
movsb
sbb
arpl
sbb
mov
scas
lcall
icebp
dec
jbe
aaa
jg
jae
pushf
mov
dec
push
jnp
imul
aam
dec
xchg
mov
mov
push
lea
xchg
push
mov
push
lds
int
mov
push
mov
out
and
dec
leave
dec
jecxz
stc
stos
mov
or
fadd
add
sbb
icebp
rcll
loop
pop
jmp
dec
lock
jl
popa
ljmp
adc
add
push
dec
insl
popf
sbb
movsb
mov
mov
mov
xor
mov
pushf
mov
sti
sbb
movsb
or
aad
loop
dec
cltd
addr16
out
inc
pop
fwait
imul
push
add
cmpsw
aaa
and
and
cmp
jbe
xor
testl
pop
sbb
fsub
and
xchg
imul
or
xchg
inc
pop
cmc
xor
pop
mov
les
lods
pop
ret
cs
out
add
jge
pop
in
xchg
or
xchg
add
in
push
and
mov
and
xchg
pop
sub
xorl
add
scas
add
mov
test
fs
lods
push
rcll
cmpsl
sub
ljmp
inc
xchg
popa
aas
loope
cmc
xor
fstps
or
loope
aad
dec
add
aaa
push
sub
imul
pop
repnz
and
ficomps
jne
out
call
inc
stos
and
fimuls
pop
ja
xlat
fwait
lods
dec
push
imul
lea
dec
push
inc
sbb
std
fisubrs
aad
sub
xchg
jge
mov
mov
lea
jl
mov
xor
scas
leave
push
ror
and
inc
lahf
fnstcw
pop
into
repnz
test
psllq
jle
jo
cmp
jge
in
mov
ja
jp
xchg
popa
aam
mov
xchg
ja
add
push
iret
fcoms
jecxz
in
xchg
loope
pop
dec
dec
pop
cltd
or
inc
mov
adc
mov
lods
je
and
jbe
cmovbe
mov
aad
cltd
cmc
das
iret
mov
out
fidivs
dec
jl
daa
adc
xlat
insl
sub
test
adc
xor
adc
pushf
and
mov
cli
mov
js
mov
inc
xor
or
loope
flds
dec
mov
pop
mov
adc
inc
push
dec
mov
push
fistl
movsb
mov
add
mov
mov
add
pop
test
inc
xor
mov
push
mov
and
adc
push
mov
int
jmp
xchg
das
in
stos
jg
enter
icebp
push
or
sub
sbb
inc
jle
out
or
fsubrp
mov
xchg
mov
test
loop
push
shl
push
stc
out
xor
jge
js
je
cmp
push
cmp
pop
sti
push
lahf
test
rorl
sti
lods
dec
jle
cmpsl
fs
cmp
xor
dec
adcl
push
lods
leave
dec
ret
xchg
mov
add
shlb
xor
cmc
jle
lods
xchg
hlt
hlt
pop
in
movsl
mov
in
ficomps
adc
scas
sub
cltd
aas
and
outsl
popa
lods
mov
sub
mov
xchg
sbb
cld
sbb
cmpsl
mov
pop
fs
jb
xor
fldcw
call
push
lods
or
cltd
xchg
ljmp
loopne
in
add
testb
xchg
std
subb
fwait
jp
outsl
incb
xor
mov
cmp
clc
sub
xlat
push
aam
data16
inc
sbb
jmp
imul
sbb
lock
lret
shl
jl
adc
and
in
loop
pop
test
inc
xlat
in
jae
out
add
mov
fsubs
imul
testl
jne
lcall
mov
xchg
pop
fsub
sbb
dec
inc
jb
add
scas
xchg
adc
sbb
daa
daa
mov
dec
and
out
and
mov
push
push
lret
sbb
lret
adc
xor
es
es
sarb
push
xchg
sbb
lret
fxch
sub
sarb
loopne
repz
cs
loope
iret
mov
jno
movsb
dec
lahf
dec
pusha
inc
out
dec
stos
pop
stos
jo
xchg
loop
in
dec
test
pop
in
inc
shr
or
sahf
ljmp
test
in
jge,pn
push
icebp
pushl
push
dec
sbb
lret
sarl
imul
push
nop
jg
mov
dec
ja
mov
sarb
dec
inc
inc
jns
imulb
or
fdivrl
cmp
sbb
mov
push
sub
mov
mov
dec
xchg
fs
pop
sbb
dec
loope
sub
jecxz
notb
lock
loopne
jnp
lock
push
cwtl
sbbl
adc
mov
imul
sub
push
shll
sbb
dec
jecxz
aaa
data16
fisttpl
pop
push
cmp
dec
adc
and
xchg
mov
lods
imul
movsl
hlt
sbb
movsl
int
lcall
insl
inc
add
mov
shlb
xor
out
rorl
or
data16
rolb
mov
cli
paddsw
icebp
pop
icebp
cmp
mov
mov
sub
mov
loope
mov
sbb
xor
sbb
or
fwait
loope
dec
outsl
jp
push
push
sbb
cmc
imul
test
ja
mov
jle
movsl
fisttpl
sahf
outsl
hlt
scas
ret
cmp
clc
cld
mov
cltd
jl
outsb
sbb
test
aaa
jo
pop
fisttps
mov
fs
and
mov
adc
imul
ss
mov
mov
pushf
xchg
shl
mov
sub
xor
push
mov
mov
mov
add
mov
xor
and
scas
out
insb
enter
xor
das
cmp
out
pushl
in
call
lock
pop
dec
movlps
xor
xchg
xor
pop
pop
xchg
jp
pop
jns
pop
imul
add
aas
ret
aad
jb
rcrl
cmc
aas
jnp
in
xchg
pop
fs
repz
mov
hlt
sbb
imul
mov
repz
pop
sbb
sub
or
add
adc
sbb
cmp
xchg
dec
ficoms
bound
es
jmp
push
adc
xchg
mov
insb
dec
push
fisttpll
inc
ljmp
je
in
std
mov
pop
adc
ljmp
loope
js
inc
mov
mov
aad
nop
lret
dec
push
and
jae
decl
int3
inc
push
sbb
out
add
fldl
xchg
dec
mov
aam
jno
jl
push
xchg
push
mov
jp
clc
lret
adc
fstps
push
jge
and
dec
mov
fdivrp
jne
or
fisttpll
jg
cmp
in
movsl
pop
pushf
icebp
fldz
jae
adc
mov
int3
cmp
jmp
push
pop
adc
fmull
subb
in
pusha
fs
sar
xchg
scas
out
xor
cli
inc
dec
xor
mov
cmpb
aas
pusha
lock
inc
sbb
mov
xchg
aas
cmp
jmp
mov
imul
scas
cmp
out
fstpl
add
mov
das
pop
dec
add
jmp
pop
add
andl
cmp
incb
out
sbb
enter
in
fcmovbe
pushf
or
mov
xchg
xor
es
loope
adc
add
or
scas
or
adc
xchg
sub
aaa
inc
ret
icebp
stc
and
dec
subb
lahf
ss
les
stos
pop
sbb
cmp
notl
out
jbe
or
or
lahf
cmpsb
ficoml
pop
fisttpll
fiadds
in
arpl
push
sahf
xchg
out
sub
repz
int3
pop
adc
and
adcb
cs
jecxz
in
dec
cmpb
dec
lret
ljmp
xchg
arpl
dec
inc
lahf
iret
adc
jl
jp
ljmp
sahf
sub
mov
test
sub
cld
lret
scas
cld
hlt
pop
fwait
lahf
cmpsb
jnp
sub
and
imul
xchg
or
mov
mov
adc
fwait
jbe
lcall
cwtl
sub
adc
pop
ja
or
dec
cmp
mov
jecxz
mov
sbb
addl
jno
nop
pop
cs
das
or
sbb
xchg
idiv
pop
shlb
bound
ds
inc
jg
out
mov
sbb
xchg
push
push
push
inc
pop
xor
outsb
xchg
mov
loop
cmpl
fsts
push
cwtl
imul
xchg
jmp
jb
jnp
rclb
dec
jmp
roll
pop
mov
insl
dec
push
push
sbb
sbb
stos
in
cmp
aad
addb
add
notb
pushf
push
mov
aaa
sub
repnz
lods
test
sbb
mov
iret
push
int
pop
test
mov
push
aas
fcoml
jnp
push
push
pop
rorl
push
daa
cmp
sub
mov
stc
adc
fcom
cmpsl
sbb
or
andl
jmp
adc
call
ja
pop
iret
pop
xchg
data16
cmc
out
pop
shlb
add
adc
loop
sbb
out
sahf
imul
or
roll
fs
aam
dec
push
mov
adc
add
in
loope
movsl
rcll
and
cmpsl
xchg
stos
pop
mul
xor
fimuls
fcmovne
addr16
mov
out
push
clc
push
mov
test
lret
std
or
fmull
iret
jmp
jb
icebp
and
mov
ret
pop
and
cmpsl
and
imul
mov
in
sbb
mov
popf
inc
push
addb
fwait
aam
adc
inc
scas
push
out
xchg
mov
ror
dec
mov
and
enter
mov
inc
cli
or
shll
lea
loop
bound
les
lock
sahf
imul
lahf
xlat
paddusb
sub
push
mov
xor
sub
iret
xchg
mov
insb
fs
mov
and
mov
imul
jno
xor
in
ficomps
sbb
mov
aas
mov
ja
fnop
push
mov
or
daa
jo
xor
adc
push
sub
jmp
cli
inc
imull
stos
jl
je
negb
fcompl
lret
or
push
mov
dec
inc
stos
or
push
jmp
int
xor
nop
pop
rcrb
inc
outsl
add
jmp
fcompl
mov
pop
negl
into
push
mov
cs
and
inc
pop
cmp
push
sbbb
mov
dec
cli
iret
mov
sbb
or
dec
mov
mov
add
sbb
sub
scas
les
xor
xor
sub
mov
inc
pop
mov
cli
mov
fdivrl
dec
sub
mov
jae
xor
pop
pop
cmp
into
rclb
pop
ljmp
adc
or
jne
shrl
dec
lret
xchg
lret
icebp
lock
fcmovb
mov
xchg
xor
or
imul
loope
lahf
sti
or
cmp
xchg
mov
and
ljmp
fcmovu
inc
addl
pop
mov
ljmp
mov
xor
jmp
imul
fdivl
bound
int3
repnz
xchg
cwtl
mov
mov
repz
or
lcall
jne
inc
jnp
xchg
xor
dec
iret
push
sub
push
gs
xchg
clc
dec
insl
aaa
inc
inc
out
test
jge
sti
adc
sub
xor
jmp
jo
les
and
sbb
ja
hlt
in
jo
or
dec
call
push
es
repnz
lock
cmpsl
xchg
pushf
pop
cmpsl
mov
mov
pop
mov
cld
mov
sub
xor
cs
dec
pop
lret
out
inc
and
insl
xor
xor
imul
and
out
lea
xor
adc
sub
sbb
or
fisubrs
dec
lret
adc
cmp
cwtl
or
jmp
mov
fwait
pop
icebp
inc
fldt
leave
mov
test
ret
imul
popf
repz
out
insl
aad
daa
daa
outsl
pop
xor
push
cs
orb
lret
lods
jno
add
pop
daa
jecxz
in
fistpll
dec
test
mov
test
jle
fstl
add
iret
cld
mov
pop
sbb
pop
fidivrs
jno
scas
in
cmp
inc
cmpb
inc
sti
mov
dec
mov
sub
mov
jmp
pop
inc
movsl
iret
loopne
gs
addr16
shrl
leave
std
mov
popf
cs
jb
es
xchg
dec
shll
pop
stos
in
dec
push
je
mov
pop
pusha
pop
mov
sbb
sbb
push
jge
cmp
fidivrs
gs
shr
repz
jbe
mov
loope
or
xchg
dec
in
mov
aam
push
xor
jnp
inc
jmp
inc
or
je
je
sbb
nop
pop
test
insb
subl
icebp
jecxz
pop
fistpll
push
je
lret
sub
mov
test
sub
pop
dec
inc
popa
shll
clc
scas
xor
inc
mov
leave
xlat
push
push
cld
pop
adc
in
aaa
lea
data16
lahf
cmp
jl
inc
mov
lds
xchg
pop
filds
jno
enter
jo
xor
jnp
nop
or
xchg
neg
xor
push
push
push
sbb
or
fs
aam
adc
jne
pop
xchg
jg
and
mov
push
or
cmp
or
fidivrl
fsubp
cmp
jg
movb
int3
or
popa
and
mov
cwtl
nop
in
outsl
xchg
arpl
fwait
ss
push
mov
sbb
xlat
jbe
pop
pop
lahf
cltd
push
pop
mov
imul
in
mov
dec
jge
out
sub
mov
mov
pop
xchg
cmpsb
loop
lahf
pop
icebp
lock
addb
mov
popf
push
sbb
mov
cmpsl
dec
lods
cmpsl
add
stos
adc
nop
outsb
cltd
pushf
mov
rorl
mov
mov
pop
sbb
push
shll
lods
ljmp
mov
rorl
xor
adc
push
shll
sbb
xor
lds
cmc
aas
loop
popa
push
out
sbb
sbb
shl
cmpsb
sbb
add
jnp
das
mov
xchg
mov
or
xor
dec
int
lock
cmc
adc
gs
fucomi
xor
mov
aas
and
push
push
dec
sub
mov
shlb
fiadds
adc
pop
push
pop
adc
sub
pop
data16
ljmp
arpl
int
sub
je
inc
fisttpll
cld
mov
mov
outsl
push
xor
sub
jnp
je
test
dec
inc
or
pop
adc
cld
xor
xchg
lcall
xlat
mov
mov
inc
pop
cmc
xchg
cmova
repnz
dec
cmpsl
push
xor
mov
jbe
stos
mov
in
push
inc
dec
mov
pop
iret
aaa
xorl
je
fwait
or
out
sbb
int3
rorl
xor
ds
scas
pop
test
in
mov
je
push
outsl
push
xor
lahf
cmp
add
out
sbb
mov
fmulp
es
mov
popa
adc
mov
imul
jp
cli
aaa
jmp
add
push
test
xchg
mov
push
sti
xor
and
mulps
jae
cmp
cmpsb
sbb
insl
push
sti
dec
pop
sbb
lods
push
jne
sbb
cmp
jp
ret
cld
bound
sbb
leave
ja
inc
repz
xchg
pop
outsb
out
cmp
sub
fs
sti
push
jnp
stos
mov
push
fsubl
push
pop
imul
inc
test
out
xchg
ljmp
das
out
pop
mov
or
jge
stos
fcomp
pop
sub
fmul
js
jge
scas
loop
leave
shrl
lahf
sahf
outsl
push
adc
out
add
lcall
jne
aas
ret
jge
mov
push
test
mov
xlat
ljmp
in
pop
fldenv
into
insl
pop
das
sbb
mov
into
jb
andl
gs
pop
dec
ret
jmp
scas
aaa
cltd
mov
sti
pop
cmp
cmpsb
adc
and
mull
xchg
lods
xor
adc
shlb
inc
rcrb
mov
xor
xchg
lret
iret
mov
xchg
cli
mov
outsl
std
xchg
pop
popa
cmc
dec
mov
or
lcall
inc
jmp
inc
test
mov
stos
add
insb
adc
jne
push
inc
and
dec
shlb
adc
mov
xchg
out
clc
mov
aam
clc
cmp
jo
push
aaa
orb
fildl
into
lret
out
jb
lret
mov
cmpsb
iret
mov
mov
lods
mov
pop
pushf
mov
add
inc
xor
outsl
inc
cli
bound
xor
scas
pop
out
xor
xorl
xor
and
mov
sbb
hlt
inc
sub
push
jno
xchg
jecxz
movsb
mov
or
nop
cmp
cmp
es
jp
aam
inc
hlt
sti
leave
push
call
test
out
pop
mov
sub
fs
xor
cs
jle
mov
cli
and
shll
mov
fidivs
mov
xor
stc
cmp
hlt
cmp
jge
sahf
leave
loopne
jne
enter
ja
mov
jmp
add
xchg
dec
rcrl
js
mov
mov
mov
sbb
in
lahf
push
push
or
xor
aaa
or
push
jmp
inc
and
jb
add
out
mov
lea
lcall
adc
js
mov
ss
dec
push
orb
xor
sub
add
and
lahf
mov
pushf
push
xchg
pop
insb
aad
or
in
or
push
adc
mov
xchg
inc
ljmp
stos
pop
cltd
xchg
leave
adc
data16
pop
sub
enter
shrb
bnd
fadd
xor
mov
mov
dec
dec
sti
sub
pushf
adc
cltd
outsb
mov
sub
pop
sbb
hlt
inc
xchg
push
in
sahf
into
sub
mov
jns
inc
adc
das
add
movsb
dec
movsl
or
fsubrl
pop
clc
test
leave
lret
es
sub
and
jae
dec
pop
jno
mov
inc
mov
pop
sub
std
sbb
lods
jp
ficoms
pop
out
mov
int3
add
fmuls
xchg
pushf
mov
sahf
and
jge
lock
inc
mov
and
push
cmp
movsb
xor
or
mov
mov
shrb
cmp
mov
fistl
fcmovnbe
popf
ret
pop
fdivl
and
js
arpl
lret
bound
dec
jne
imul
adc
loope
mov
pop
xchg
adc
ds
cli
loopne
mov
push
fcoml
mov
mov
ja
cmp
sub
inc
les
sbb
adc
nop
cmpsl
test
call
movsb
jbe
outsl
std
dec
fstpl
push
aam
lods
xchg
ficoml
imul
push
bound
fildll
data16
test
ljmp
jnp
xlat
mov
sub
adc
pop
mov
inc
sub
sub
lahf
pop
aaa
fidivrl
xchg
inc
es
idiv
adcl
lret
out
push
stos
inc
fadds
leave
push
mov
jle
js
sub
jg
pop
testb
stc
test
lret
cwtl
out
inc
mov
jb
jne
into
and
dec
xor
cld
enter
int
scas
and
cmp
cmp
sbb
leave
mov
lahf
insl
cltd
cmp
lds
lods
sbb
in
in
repz
loopne
rclb
adc
fildl
daa
stos
repz
stc
lds
mov
mov
jp,pt
push
mov
dec
iret
xor
fistpll
lods
iret
dec
aam
call
outsb
inc
jnp
arpl
ja
inc
jl
dec
shl
dec
andb
and
sub
hlt
cmpsb
mov
imull
push
mov
add
leave
cmc
push
insl
or
push
fsubl
jno
jae
add
mov
mov
or
mov
pushl
add
sbb
test
jl
pavgw
or
pusha
sbb
sbb
fwait
shlb
jle
filds
jae
push
mov
mov
in
push
dec
xchg
enter
jb
sbb
xor
adc
sbbb
fsubr
and
or
sub
lock
arpl
rcrl
push
jns
icebp
rorb
sub
xchg
dec
pop
imul
jns,pt
pop
test
push
in
test
jl
mov
or
iret
jmp
pop
pop
or
add
insl
rorb
mov
adc
cmp
and
fsubrs
xchg
inc
adc
dec
jg
or
int
stc
mov
test
inc
ds
inc
cwtl
lods
jge
shrl
xchg
sbb
das
adc
pop
stos
stos
and
fsubrl
out
fldt
shrb
imulb
flds
adc
pusha
inc
or
sub
xor
sub
mov
loopne
inc
mov
jbe
sbb
mov
cmp
push
cli
hlt
push
stos
pushf
int3
or
ss
mov
cmpsb
dec
jo
mov
jb
jmp
push
sbb
nop
stc
movsl
xchg
jg
test
sbb
iret
push
sbb
sub
sub
pop
lahf
into
xor
push
inc
sub
mov
pushf
sti
test
xor
mov
mov
jno
out
loope
lcall
add
xlat
cli
add
outsb
mov
dec
xorb
xlat
mov
mov
ret
mov
add
je
incl
push
into
add
nop
jae
add
je
adc
mov
sti
imul
int
std
jmp
fs
pusha
imul
into
ficompl
dec
sub
lcall
xor
add
and
mov
pop
xlat
ret
mov
pop
cmp
movsl
mov
push
outsb
stos
dec
push
subb
push
loop
sbb
adc
inc
outsl
pop
divb
ja
sar
sti
enter
xlat
test
mov
mov
jae
lcall
xor
cmc
rorb
fs
jae
lock
aaa
in
loop
cmpsl
cmp
mov
jne
adc
mov
mov
push
add
cmp
sti
push
cmpsl
push
out
xor
and
sar
inc
jge
mov
sbb
jg
mov
stc
push
pop
push
mov
xor
lock
stos
mov
lcall
jae
push
sub
js
test
data16
push
mov
imul
cmc
jne
cmp
jae
pop
leave
outsl
jbe
lock
es
xor
inc
sti
mov
cli
sti
inc
jp
cwtl
cmpsb
insb
dec
cmp
and
jns
xchg
pop
cmp
lods
gs
adc
lahf
jbe
dec
cmpsb
xor
dec
scas
adc
mov
insl
in
imul
jne
mov
test
xor
jne
pusha
call
add
push
fwait
ret
add
mov
mov
push
shl
mov
mov
cmp
pop
or
jp
mov
sti
xchg
push
mov
imul
sarl
push
nop
push
hlt
and
cs
rcl
loop
stc
mov
pusha
outsb
mov
pop
call
ss
sub
or
fidivrl
mov
xchg
sbb
arpl
in
add
popa
pop
sar
pop
scas
add
cltd
mov
inc
cmpb
movsl
mul
xchg
stos
enter
or
jmp
and
lahf
mov
cmp
sbb
pop
and
scas
jle
cli
mov
out
fsubl
mov
test
adc
mov
jo
aaa
test
sub
mov
fsubs
inc
inc
ss
das
imul
push
ljmp
add
fisttps
cld
loop
clc
mov
mov
out
out
orl
sub
mov
addr16
xchg
test
or
sahf
mov
outsb
fdivr
pusha
jg
in
cld
mov
add
dec
pushf
lret
sub
add
std
dec
sarl
stos
das
jge
cltd
inc
iret
mov
fs
cmp
push
xor
sub
cwtl
adc
out
add
loop
cmp
cmp
xchg
outsl
sub
mov
xchg
das
pop
xchg
gs
mov
in
add
roll
mov
cmp
les
jne
std
test
mov
movsl
jbe
or
aas
outsb
xabort
dec
addr16
sub
xchg
sti
jle
and
mov
jae
dec
clc
mov
cmp
mov
imul
sbb
cmpl
push
or
scas
jae
mov
iret
jae
add
rep
pusha
sti
loope
jecxz
adc
repz
aam
jle
dec
ret
fisubrl
int3
mov
adc
adc
jmp
aas
pop
hlt
mov
jmp
mov
into
jbe
ss
loop
mov
add
xor
call
add
xor
lahf
jmp
aas
popa
sub
pop
loope
stos
xorl
push
add
fisubs
inc
ret
ret
mov
pop
xchg
sbb
cmpsl
inc
imul
insb
mov
scas
lock
add
mov
ret
mov
or
pop
inc
cmp
jecxz
lret
push
pop
out
or
cmpsl
push
nop
mov
add
pop
orb
mov
into
out
adc
xchg
cmp
pushf
push
jge
mov
and
mov
movl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
mov
adc
xor
or
mov
push
add
mov
sbbl
add
movl
cmp
je
sbb
mov
mov
xor
xor
xorl
add
add
movl
adc
xorl
xor
mov
movl
push
mov
adc
xor
andl
xor
sub
mov
subl
add
movl
adc
xor
xorl
xor
cmp
jne
movl
cmp
movl
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
adc
movl
mov
subl
mov
xorl
add
xor
movl
cmp
jne
mov
mov
adc
mov
mov
add
mov
movzbl
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
notl
push
andl
push
andl
lea
push
xorl
push
sbbl
call
andl
push
andl
call
and
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
xor
sbb
mov
orl
add
andl
mov
xor
mov
andl
test
movl
je
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
movzwl
xor
add
xchg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
call
jmp
incl
sub
xor
mov
sbb
xor
inc
add
mov
and
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adcl
mov
mov
or
xor
add
sub
mov
or
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movzbl
and
add
xor
mov
sub
subl
lea
adcl
xor
xor
cmp
movl
je
mov
orl
xor
add
movl
cmp
movl
jne
pushl
call
movl
mov
xor
xor
and
mov
sbbl
mov
adc
xor
mov
subl
add
movl
cmp
movl
je
addl
pushl
pushl
call
adc
mov
mov
mov
xor
xorl
add
cmp
je
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
xor
add
and
mov
mov
mov
mov
add
adc
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
mov
mov
andl
xor
movl
movl
dec
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
add
sub
mov
xor
or
sub
xorl
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
sub
mov
orl
jmp
pop
sbb
fwait
jnp
mov
scas
xor
dec
pop
js
xor
js
mov
xor
cmp
cwtl
jno
adc
aad
push
jae
daa
xchg
pop
fidivrl
mov
loopne
lods
jns
pop
jo
movsl
test
pop
test
adcl
dec
pop
xlat
shlb
push
jmp
add
sahf
adc
and
push
adc
jnp
push
add
xchg
mov
jae
cwtl
addl
cmp
mov
jno
movsl
inc
loop
nop
in
iret
pop
sub
cmp
dec
sahf
sbb
mov
xor
shrb
inc
repnz
test
sbb
fs
mov
cmp
mov
hlt
stos
pop
stos
or
ds
or
mov
xor
cmp
je
fisubrs
imul
jne
aaa
test
psubw
stc
ljmp
sub
mov
cmpsl
xchg
dec
jae
pop
sbb
movsl
inc
push
repz
insb
and
imul
add
mov
mov
sbb
gs
xor
mov
inc
pop
xor
xlat
sub
ja
mov
dec
jo
pop
jns
jge
iret
sbb
pop
cmpsl
and
pop
jnp
repz
and
cmc
fisubl
pushf
add
std
mov
ret
push
ljmp
jmp
movsb
test
ja
pop
xchg
ss
cwtl
add
sub
outsl
and
adc
add
mov
pop
mov
sti
inc
ds
jo
ret
pop
icebp
sub
cmp
imul
popf
imul
add
and
lock
aad
xchg
inc
bound
sub
mov
jp
mov
pop
test
mov
cld
mov
xor
or
cmpsl
imul
pop
test
insl
cmpsb
dec
pusha
ret
cmpsb
cmp
pop
dec
inc
or
mov
popl
sbb
jmp
add
cmpsl
dec
push
push
cmp
xor
sbb
push
sub
sbb
pusha
jae
shlb
jbe
fidivs
movsl
or
mov
and
push
xchg
xor
or
ja
loopnew
cmp
mov
jle
mov
std
fistps
fwait
stos
repz
psubusw
je
loop
lret
cld
mov
je
pushf
int
stos
pop
mov
sub
lock
fs
rorb
mov
xor
mov
xor
inc
dec
ret
sbb
int3
icebp
pop
dec
jecxz
sahf
cmp
sbb
inc
sub
iret
jb
and
cmp
dec
inc
xor
std
push
shlb
pushf
cmpsb
mov
jge
stos
js
inc
xchg
popa
push
xor
aad
test
adc
loop
jle
and
mov
sub
jns
iret
jb,pt
ljmp
fdivrp
ljmp
pop
cmp
mov
std
xor
add
sbb
mov
pop
mov
push
push
std
mov
cli
bound
cmpsl
inc
ss
std
adc
rclb
jns
jp
test
xor
and
mov
push
cs
fistpl
popa
sub
lods
cmpsl
in
xchg
shl
dec
adc
jns
data16
xor
xchg
add
or
jae
push
stos
sub
mov
cmpsl
nop
sbbl
fwait
sahf
cs
sub
sub
cld
outsl
cs
rcrb
ds
cmp
popf
ljmp
das
popa
nop
arpl
jnp
pop
jecxz
mov
rol
cmp
popf
lock
sbb
jb
rcrb
mov
ret
fdivr
sarl
pop
add
mov
mov
jle
xlat
and
mov
xor
or
fwait
out
dec
hlt
stc
fcomps
dec
inc
fimull
mov
mov
clc
dec
ja
ds
std
nop
out
mov
xchg
ror
ret
aas
xor
clc
mov
mov
loope
in
jge
dec
pop
orb
fildll
lods
jmp
jg
jns
outsl
add
in
jg
aam
out
add
loope
lods
mov
adc
pushf
popa
push
dec
pop
arpl
mov
les
xchg
les
dec
xchg
pop
jne
mov
lret
xor
sbb
insl
icebp
sti
hlt
sbb
push
jo
inc
dec
loopne
mulb
mulb
inc
out
mov
and
mov
es
xchg
mov
lds
in
push
pushf
repnz
gs
jmp
cmpsl
push
data16
dec
or
leave
jle
test
mov
loop
adc
and
adc
xchg
xlat
les
or
mov
mov
inc
cli
xchg
out
xlat
lcall
add
stos
adcb
push
cmpsb
push
mov
ss
push
aam
pop
sbb
aad
lcall
mov
cmpsl
pop
cmp
inc
jl
jno
das
clc
sub
fwait
adc
and
das
dec
imul
jnp
mov
in
xor
ljmp
add
leave
bound
and
das
mov
xor
mov
sbb
in
mov
ljmp
testl
lret
pop
in
adc
jecxz
inc
mov
ja
call
sub
pop
loop
xchg
push
sub
movsl
test
or
pop
stos
shl
repnz
fstpl
cmp
xor
jl
fildll
andl
mov
mov
lea
stc
std
fwait
cmp
movsb
cmc
push
cmp
loope
xchg
ljmp
sub
testb
idivl
xor
fistpl
into
outsl
js
mov
ja
ja
test
sbb
test
pusha
or
in
call
cmp
xchg
cli
xor
or
jp
nop
out
pop
sbb
xor
jns
shll
fs
int3
push
pop
dec
cmp
fstpl
pushf
cmp
outsl
or
popf
push
dec
add
sub
or
xor
mov
jmp
int3
sub
cmp
jbe
add
or
jmp
imul
hlt
maskmovq
testl
fistl
jns
pusha
in
add
dec
jno
cmp
sub
enter
sub
jns
popa
int
xor
mov
jnp
into
mov
in
roll
mov
sahf
mov
outsb
addr16
inc
stc
loopne
xchg
dec
jae
jl
ds
cmp
out
pop
inc
cmp
popf
pusha
cmpsb
jg
xlat
mov
repnz
dec
mov
add
sbb
stos
xor
cld
jecxz
xor
into
push
push
pop
lock
xchg
pop
add
mov
dec
sbb
sbb
dec
mov
loope
sub
pop
nop
add
or
and
ja
rcrb
insl
mov
in
bound
rorl
xchg
push
xlat
leave
fnstenv
mov
dec
mov
jl
subb
sbb
cwtl
xchg
lods
push
rolb
data16
imul
aaa
mov
xor
push
mov
or
and
loop
mov
add
out
aam
mov
icebp
mov
xchg
xchg
sub
pushf
mov
lods
frstor
idivb
and
dec
add
fmull
push
xor
push
mov
stc
xor
fdivrs
negl
dec
pop
adc
out
push
adc
or
xor
daa
idivb
mov
push
xchg
rolb
push
ljmp
dec
in
fstpt
xor
add
or
dec
fxch
sahf
test
fsubl
adcb
and
sbb
jno
fmull
sub
xor
lahf
shrb
test
xchg
fsubs
mov
cmp
notb
or
xor
and
adcl
ljmp
and
add
orb
cld
ss
out
neg
sbb
imul
sbb
and
dec
aaa
stc
mov
pushf
cmp
daa
lahf
call
mov
push
int3
adc
inc
xor
imul
enter
xchg
lret
push
push
popf
pop
jg
jmp
rcrb
jecxz
mov
cmp
in
sbbb
adc
in
into
fwait
push
mov
outsl
cmpl
push
push
sbb
jae
sbb
rorb
stos
jae
test
cli
ljmp
fdivp
or
int
lods
popf
sti
ret
mov
aam
mov
xchg
insb
pop
and
mov
ljmp
pop
popa
inc
mov
pop
sahf
enter
es
cwtl
cltd
in
pop
sub
jo
mov
mov
ss
int3
sbb
imull
push
in
es
adc
lods
xchg
out
jo
arpl
sbb
outsb
out
ja
es
int
cmp
sbb
jnp
sarl
dec
and
sbb
lds
mov
pop
xchg
push
stos
jmp
jbe
dec
jo
ljmp
push
iret
aad
scas
xchg
loope
sub
jno
pop
cs
imul
call
dec
out
sub
cltd
enter
xchg
mov
pusha
ror
data16
aad
jo
mov
outsl
mov
cmc
bound
lahf
push
xchg
nop
jbe
lods
mov
daa
xor
je
xchg
dec
xorb
lock
xlat
nop
int
in
lret
mov
push
cmp
imul
pop
pop
sub
lds
movsl
popa
adc
xor
pop
mov
int3
and
fbld
xor
addb
lcall
mov
or
push
jns
adc
into
fmull
push
pop
rcll
pop
mov
je
sub
ljmp
pop
pop
popa
mov
pushf
icebp
push
mov
xchg
jecxz
addb
push
and
mov
pop
sub
scas
mov
lahf
push
outsb
dec
stc
mov
lret
xchg
pop
outsl
mov
sarb
aas
sbbb
ret
add
add
fs
js
iret
hlt
pop
mov
hlt
in
mov
int3
xor
in
xor
out
shll
add
repnz
flds
cmp
fsubrs
xor
sbb
aas
jle
xor
test
shl
aam
xchg
push
inc
mov
push
sbb
or
sbb
inc
or
shll
mov
popa
dec
jp
and
push
xlat
add
sub
push
repz
iret
shll
enter
mov
xor
add
jecxz
sti
scas
pop
mov
iret
test
mov
imul
xor
dec
testl
xchg
aad
fidivl
adc
add
xchg
mov
loopne
push
push
ss
fidivrl
ljmp
insb
insb
and
xor
in
incb
scas
push
mov
or
mov
mov
lret
mov
lcall
pop
mov
mov
sub
out
adc
push
and
aas
das
push
cmpsl
loope
mov
sbb
jne,pn
xor
cmp
sbbl
xor
inc
daa
mov
jns
mov
jp
imul
arpl
cli
shrl
in
scas
std
cli
fwait
sub
dec
jb
mov
cmp
rcl
xor
rcrl
sbb
pop
fcomip
inc
andb
add
pop
mov
imulb
lods
mov
xor
dec
sub
push
int
out
dec
add
insl
jecxz
out
cmp
rclb
pop
mov
add
cmp
cmpsl
cmp
pop
icebp
cld
ret
fadd
or
and
mov
jo
dec
sub
or
js
inc
cmpsb
paddusw
sarl
into
mov
lret
pop
mov
andl
out
loopne
xchg
ret
adc
lods
in
adc
pop
mov
add
pop
icebp
push
inc
sbb
push
mov
sbb
push
fs
int
xor
cmp
insb
mov
aas
xchg
enter
int3
dec
cmp
sbb
or
aad
pop
or
xchg
mov
sub
jmp
lahf
and
jo
lock
in
loop
daa
push
shrd
mov
jle
fstl
adc
mov
mov
sbb
adc
loopne
mov
test
mov
sbb
psraw
fnsave
xlat
inc
jbe
mov
cmpsl
test
mov
addb
xchg
mov
mov
push
sub
xchg
loope
add
pop
jns
or
cmp
fbld
imul
cmp
test
out
mov
mov
pop
and
addr16
jns
addr16
ss
cmp
mov
ja
in
mov
fldt
aaa
add
mulb
mov
popf
enter
add
mov
pop
inc
jmp
push
fists
je
sub
jbe
xchg
les
jae
inc
push
cmp
rcr
jo
les
mov
mov
mov
and
lahf
mov
mov
xlat
insb
mov
mov
mov
dec
repz
insl
cmp
ret
mov
cwtl
jno
pop
into
and
add
pop
pop
add
push
stos
mov
std
mov
xor
inc
fbstp
clc
adc
mov
ss
dec
sub
das
sub
jae
xor
or
lods
out
or
loop
cmc
push
xchg
lret
das
mov
out
fwait
jno
or
sub
jnp
push
and
push
data16
sbb
or
pop
jne
inc
cmp
into
adc
cmp
out
in
data16
stos
in
rol
pop
aam
ss
pop
popfw
adc
xlat
add
jno
add
rolb
sub
xchg
inc
sbb
pop
fiaddl
sar
or
ret
add
xchg
out
and
jo
mov
nop
push
xchg
jns
in
xor
cld
bound
xchg
jo
dec
xchg
fldl
pop
lret
ret
ja
mov
lds
jne
lods
fsincos
dec
jbe
fwait
add
sub
lods
inc
mov
fsubp
imul
ss
and
loop
mov
inc
fwait
jp
cwtl
cmp
or
ja
outsl
jge
jb
testb
gs
notb
cwtl
jbe
jo
fcomi
cmp
dec
ljmp
or
cmp
jnp
subl
jmp
lea
scas
adc
add
mov
jmp
dec
lods
movsb
call
mov
out
adc
outsb
add
sbb
fidivrs
out
enter
int3
xchg
sbb
push
sarl
dec
and
and
pop
add
push
xor
push
das
into
pop
aam
pop
rorl
push
jb
mov
popf
enter
sbb
sub
std
xchg
lahf
je
jb
adc
sbb
xchg
mov
lea
lcall
add
xor
pop
push
pop
arpl
dec
dec
mov
nop
xor
imul
push
adc
cmp
xor
dec
add
add
loopne
daa
xor
cs
mov
mov
ds
push
out
mov
sub
int
add
shlb
insb
int3
jmp
mov
outsb
dec
mov
jne
cmp
vmovsd
push
int
and
xor
push
scas
sub
adc
pop
mov
push
dec
lcall
gs
or
sub
sahf
fbstp
jge
cmp
es
out
push
push
sbb
dec
jns
jbe
subl
xlat
push
dec
pop
fwait
jb
xchg
cmc
mov
jl
pusha
repnz
and
ret
jge
mov
movsb
xor
inc
inc
out
dec
les
ficoml
out
or
jmp
pop
shlb
jp
into
mov
dec
sub
ds
repnz
mov
jns
lock
loopne
xor
pop
inc
cmpsb
cltd
and
lret
dec
repz
test
jae
or
and
int
pop
sbb
push
sarl
ret
hlt
jno
pop
int
out
jae
jg
cltd
cmpsb
or
fsubs
ret
imul
xlat
std
fisttpl
into
shlb
sahf
lahf
cmp
pop
in
imul
xor
dec
loope
dec
xchg
fs
mull
js
leave
sub
mov
push
or
mov
dec
gs
pushf
xchg
cltd
bound
in
push
das
inc
lret
jns
into
inc
lods
nop
ret
popa
jp
sbb
insl
and
inc
fldl
sub
aad
mov
push
mov
dec
pop
aam
mov
icebp
popa
in
stos
dec
mov
das
js
mov
daa
inc
dec
lods
jg
incb
ja
idivl
mov
fmulp
jnp
sbb
shr
loope
adc
pop
sahf
daa
jb
imul
jae
and
push
sub
cmp
jo
add
ja
or
push
mov
jne
bound
sahf
aas
pop
jo
int3
pop
imul
sub
ds
cmpsb
push
mov
ds
and
movsl
xor
out
enter
pop
and
or
jp
shll
dec
jne
lods
jne
je
mov
arpl
pop
fcoml
mov
pop
pop
pop
ret
mov
add
cmp
adc
cmp
add
div
fwait
pop
or
mov
in
mov
lret
arpl
pop
cld
mull
mov
adc
push
int3
std
xchg
call
dec
inc
cmp
mov
jo
add
pop
arpl
pop
dec
loope
data16
mov
cs
in
pop
in
cld
cmp
mov
inc
mov
cmp
es
jne
add
scas
lods
jp
dec
mov
jae
out
shlb
adc
cmp
cmp
push
sub
pop
xor
dec
pop
push
addb
cwtl
cli
ret
mov
movsb
aad
and
out
mov
jl
sub
out
cmp
jne
outsb
sbb
push
inc
das
mov
fnsave
mov
sub
and
lret
iret
xchg
sub
es
lcall
std
int
dec
xchg
sbb
adc
mov
add
and
xor
ja
movb
mov
jo
inc
cmp
hlt
in
add
mov
pop
insl
iret
mov
inc
outsb
and
hlt
orl
pop
xor
cmp
fisubs
add
dec
int3
jnp
out
push
mov
int
and
orb
ret
jbe
fucomip
sbb
je
shr
nop
daa
jg
jmp
notl
lock
mov
scas
jbe
stos
les
das
fnstcw
pop
mov
mov
sarb
add
xchg
sarb
xchg
and
sbb
or
outsb
std
sti
xor
pop
mov
sbb
aad
push
pop
pmullw
inc
adc
mov
sub
and
sub
ret
je
push
and
aam
mov
outsl
push
xor
je
jae
test
lock
or
adc
add
movsl
jb
sub
je
imulb
stc
jnp
cmp
cltd
dec
cmp
add
inc
mov
sar
std
jmp
cmp
shlb
xor
cs
xlat
adc
push
sbb
scas
fldcw
fbstp
dec
push
fwait
cmp
cmp
xor
push
and
inc
cmp
push
pop
out
dec
fnstsw
pusha
pop
in
ret
mov
sub
jle
aam
rorl
mov
sahf
mov
and
mov
pushf
or
xchg
add
push
jno
inc
sarl
lock
stc
nop
xchg
add
rclb
cmpsl
ljmp
dec
pop
inc
in
mul
outsl
jge
lret
scas
dec
mov
jnp
jae
sarb
gs
cmp
imul
ret
out
push
outsl
aaa
shld
int3
lret
test
les
pop
arpl
aad
or
pop
sti
or
sub
je
in
push
mov
mov
xchg
test
rep
andl
sbb
lods
push
clc
mov
mov
ret
push
sti
repz
jmp
inc
pop
or
sbb
fnstsw
jb
inc
mov
lock
outsl
jge
fnstenv
push
cmpsb
call
je
lock
pop
rclb
xor
cs
inc
into
imul
jmp
es
out
ret
sub
xor
pushf
and
pop
int3
jae
popa
push
mov
in
in
mov
test
inc
push
dec
rclb
cmp
pop
clc
cli
mov
cmp
and
icebp
cwtl
push
mov
mov
loopne
xor
cmp
mov
mov
xchg
data16
inc
fs
jbe
xchg
push
outsb
movb
jl
lcall
ret
push
cltd
push
dec
pop
xor
ds
inc
dec
mov
jmp
ljmp
jl
mov
pop
mov
lahf
into
arpl
mov
inc
jno
pop
dec
push
xor
sub
loop
and
lods
out
test
cltd
jne
es
in
cmp
jo
sbb
fcmovbe
into
js
pop
fs
cwtl
jnp
jl
adc
js
ds
jge
dec
insl
ljmp
std
mov
movsb
mov
jmp
sub
push
filds
lret
xor
pushf
adc
or
adc
fmull
push
adc
fwait
add
mov
inc
cld
adc
push
mov
or
out
and
mov
sbb
xorb
rcrl
sub
jmp
cs
arpl
pop
or
fisubs
add
adc
vmread
outsb
insl
dec
cmp
jno
loope
inc
jbe
sahf
cmp
int
push
mov
ret
jns
mov
cmp
push
mov
out
stos
push
xchg
mov
xchg
add
in
repnz
pop
cwtl
pop
in
sbb
fisttpll
hlt
xor
xlat
pushf
mov
dec
lahf
xchg
mov
outsl
mov
insl
push
sub
xchg
adc
push
mov
lcall
jecxz
mov
popa
dec
and
mulps
fnstsw
push
imulb
xchg
xor
and
jns
push
mov
aam
imul
aam
sbb
cmp
jle
sbb
add
jmp
test
sbb
stos
dec
scas
sbb
pop
jae
inc
xchg
and
testl
mov
adc
leave
test
pusha
and
leave
es
and
jno
push
gs
je
push
inc
mov
pop
cld
clc
jmp
pop
out
testl
enter
and
hlt
and
pop
ja
push
add
lret
mov
jne
xor
movsb
daa
aam
inc
and
fsubl
adc
ja
out
push
in
mov
lea
sti
cmp
and
push
popa
ret
lahf
or
daa
stos
sub
xchg
stos
or
xchg
xchg
cwtl
bound
adc
pop
jbe
inc
push
and
mov
mov
rolb
push
daa
adc
add
push
push
or
push
cmpsl
sbb
loope
subb
adc
into
jecxz
add
adcb
repnz
jns
cltd
xchg
jle
scas
jecxz
sbb
xor
clc
xadd
popw
lcall
int3
adcb
push
cmc
sbb
fwait
testl
imul
xor
gs
testl
sub
daa
js
mov
in
dec
pushf
push
mov
dec
push
cmc
fildl
leave
movsb
sahf
mov
mov
xchg
xchg
ror
sbb
push
out
iret
fistps
sub
bound
cmc
jmp
jmp
call
push
ret
jns
pop
jo
cmp
roll
sbb
xor
sbb
jno
fdivl
icebp
sbb
ror
cld
pop
or
orb
mov
pusha
lods
mov
dec
sub
jno
cld
or
inc
enter
imul
in
dec
imul
loop
mov
mov
insb
cwtl
xchg
jb
pop
cmp
mov
fdivrp
cmc
pop
jp
or
cltd
out
or
ficomps
ljmp
cmp
imul
sub
call
imul
sbb
insb
adc
ljmp
sahf
pushf
mov
aam
movsl
mov
popf
cmpsb
hlt
movsl
mov
fcoml
orl
pop
dec
jbe
lahf
push
sahf
pcmpgtw
xor
iret
pop
mov
hlt
out
rcr
and
mov
mov
add
clc
aad
fimuls
push
pop
mov
mov
cltd
rcrl
jmp
pop
xor
sub
lods
movzwl
rcl
testb
imul
in
pop
jmp
adc
sbb
ja
fsubs
jg
mov
clc
pop
sbb
cmp
inc
cmpsl
sbb
shlb
mov
insl
sub
xor
loop
mov
fs
mov
stc
subl
not
xor
dec
inc
outsl
movsl
or
int
out
inc
push
ret
dec
jmp
out
lods
into
out
andl
push
pop
push
movsl
fisubl
add
imul
addr16
ss
or
fcmove
jnp
jne
pop
xor
cwtl
xor
dec
mov
out
lcall
dec
xor
and
sbb
mov
outsl
outsb
enter
sub
int3
aad
sub
cmpsb
in
mov
xor
jmp
mov
arpl
xacquire
pop
cmc
add
stc
xor
mov
out
fildl
mov
cmpl
std
mov
mov
dec
stos
stos
pop
xor
mov
jmp
push
push
jp
mov
dec
pop
xor
mov
divl
stc
mov
sbb
sub
jl
mov
shlb
movsl
divb
dec
jg
mov
dec
in
aas
xor
sub
add
sbb
xor
nop
les
imul
add
add
mov
xchg
jge
adc
inc
lcall
insl
push
inc
push
insl
fstps
mov
push
sbb
cmp
xor
mov
incl
add
sbb
adc
fstpt
pop
test
repz
xchg
xchg
pop
sub
adc
pop
jl
dec
shrb
or
fucomip
leave
daa
popa
hlt
mov
insl
test
or
lahf
mov
inc
add
push
scas
mov
dec
test
push
inc
cmp
inc
nop
inc
sbb
xor
push
sub
and
daa
and
icebp
std
fdivr
jg
roll
lea
sub
iret
dec
xor
xor
jp
out
imul
push
mov
xlat
sbb
or
push
and
sbb
insl
and
ret
add
pop
xor
xor
mov
mov
icebp
adc
test
mov
xor
test
jae
dec
push
frstor
ret
andb
adc
xchg
fstpl
popf
mov
xor
mov
mov
pop
in
arpl
xor
mov
pop
fnstcw
hlt
icebp
mov
mov
jne
push
dec
into
jno
jp
and
fwait
sub
inc
mov
jmp
cli
scas
jno
rcl
push
dec
leave
rcl
in
mov
mov
dec
inc
and
clc
jb
das
rclb
incl
out
xchg
insl
adcb
jbe
jg
fcomi
inc
sarl
out
iret
movl
fwait
cmp
jnp
and
mov
inc
lods
mov
bound
leave
xchg
jle
inc
jle
push
and
pop
push
out
cld
aaa
inc
insl
cmp
fistps
xlat
loope
popf
mov
pusha
jo
mov
int3
ret
adc
sub
or
stos
xor
into
mov
pop
xchg
aas
pop
fs
inc
test
rcrb
sub
stos
pop
mov
jb
in
rcl
movsl
fnsave
mov
out
xchg
mov
push
add
mov
in
inc
mov
fnstcw
cmpsb
inc
imul
ror
popf
lds
stc
mov
xchg
nop
lea
dec
imul
aas
or
sahf
mov
gs
xor
adc
mov
mov
in
sarl
dec
sbb
push
pushf
mov
sbb
ljmp
pop
daa
mov
mov
push
lods
dec
andl
clc
dec
andb
jmp
cmp
inc
xchg
and
inc
and
xor
jbe
jnp
mov
pop
xor
pop
int
repnz
cmp
ja
out
xchg
cmp
sbb
inc
cmp
fildl
mov
iret
stc
xor
hlt
jo
gs
aaa
cmp
pop
sahf
popf
fptan
push
xlat
or
aas
sub
aad
dec
jo
cmc
aas
or
enter
dec
sub
enter
mov
das
in
addr16
xchg
pop
test
es
cmpsl
push
addr16
pusha
xchg
insb
test
dec
push
adc
mov
mov
jmp
movsbl
cmp
adc
fdivl
ret
das
je
stos
movsb
cmp
aas
jp
jns
jae
fs
aam
mov
lods
sti
jl
mulb
ja
adc
mov
mov
popf
jmp
mov
in
add
jg
pop
inc
inc
lods
sbb
in
lods
cmp
mov
lock
nop
sbbb
shrb
mov
es
repnz
or
xor
pop
cmp
mov
and
dec
xor
lock
pop
repz
je
add
sahf
lcall
clc
mov
dec
cmp
xor
mov
ss
xchg
test
dec
jns
mov
cli
cmc
jae
mov
sahf
jbe
and
jl
mov
subl
stc
insl
jle
jne
sti
fdivl
sbb
jns
xchg
pop
mov
cmp
popa
pop
test
cmp
rclb
adc
push
pop
imul
jno
lds
enter
aaa
inc
or
xor
inc
sub
mov
or
leave
xlat
sub
xchg
cmp
jae
lcall
fcomi
push
sbb
jecxz
ja
dec
xor
mov
or
mov
les
scas
mov
push
adc
std
xchg
push
gs
gs
sbb
insl
outsb
add
cs
insl
fildl
inc
insb
scas
cltd
dec
push
mov
aad
inc
jmp
xor
outsl
mov
pop
or
xor
aas
es
and
xchg
sbb
mov
push
iret
pop
jp
sti
imul
inc
dec
mov
dec
jb
adc
ljmp
jl
jns
es
and
add
je
outsb
push
push
cwtl
movl
cmpsb
or
ret
aas
sbb
pcmpgtw
mov
sbbb
pop
pushf
pushf
jle
cmp
add
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
sub
movl
add
lea
mov
xor
mov
push
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
lea
movl
mov
mov
adc
mov
mov
xor
andl
add
xorl
mov
xor
mov
movzbl
add
mov
mov
addl
mov
add
dec
push
or
mov
sbbl
mov
or
mov
add
mov
mov
xor
xor
add
mov
add
cmp
movl
je
movl
mov
movl
jmp
mov
movl
cmp
movl
jne
push
movl
jmp
movl
mov
mov
mov
movl
cmp
jne
mov
sbbl
xor
neg
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
inc
mov
adc
mov
xor
andl
add
addl
imul
mov
andl
xor
add
movl
cmp
movl
mov
jmp
push
pop
rcll
fwait
aam
adc
push
mov
ljmp
js
pop
dec
idiv
push
aam
testb
leave
loopne
ds
sbb
add
outsb
in
sbb
push
pop
sub
xor
mov
fs
and
ficompl
inc
mov
or
aas
fcomps
cltd
push
cmp
mov
adc
lock
enter
jns
imul
in
in
push
outsl
pop
popf
movsb
call
xchg
hlt
and
into
subb
xor
or
loop
mov
cmpsl
or
lcall
cli
push
shrb
enter
ss
add
lock
and
out
cld
sarb
pop
jecxz
xor
aam
cwtl
es
fnstsw
xor
dec
shrl
fs
lods
xchg
push
mov
sbb
movsb
cmp
sahf
lahf
add
into
and
mov
into
loope
xor
pop
nop
sar
punpckhbw
dec
pop
loope
inc
mov
mov
lcall
pop
fldl
insb
enter
ret
daa
imul
or
dec
subb
mov
xor
mov
and
out
push
lcall
sbb
fld
cmp
sahf
lock
cld
mov
cs
xor
jp
hlt
pop
mov
rcr
jmp
or
inc
jle
inc
push
fdivs
lods
xchg
loopne
in
test
pop
xchg
orl
pushl
xor
das
loop
jl
insl
out
add
imul
mov
cmp
lods
jl
fistl
scas
scas
stos
dec
jmp
and
addb
std
adc
subb
pop
push
cld
cmp
cmp
lret
lcall
adc
pop
adc
xchg
into
pop
es
stos
pushf
es
add
and
in
xor
and
iret
xchg
sub
jmp
ret
mov
xor
mov
addb
std
iret
cmp
and
push
ss
shr
ret
scas
or
cmp
and
xchg
shlb
push
inc
stc
mov
std
movsl
shlb
mov
stos
das
mov
push
xchg
mov
bound
out
jo
dec
cmovne
push
jnp
in
pop
adc
in
sbb
loope
mov
sub
cli
mov
adc
jmp
push
adc
sub
jp
inc
inc
pusha
in
adc
sarl
lds
sub
pop
jmp
stos
daa
xlat
jecxz
pusha
xor
adc
cmp
lock
scas
loop
dec
or
jns
icebp
adc
std
cmc
sub
in
push
push
cmpsb
fistps
fmulp
dec
std
xor
test
lock
adc
lahf
jne
push
test
dec
jg
xor
mov
push
jno
pop
pop
sub
paddw
pop
dec
pop
lock
scas
mov
insl
jmp
adc
jnp
mov
sbb
stos
adc
inc
mov
test
add
jbe
dec
jb
lret
jmp
cmpb
mov
sbb
lcall
cmp
adc
lods
dec
loop
clc
aam
adc
notl
iret
adc
lret
mov
adc
jp
inc
and
jl
in
add
mov
pop
mov
dec
jmp
arpl
push
mov
aad
test
nop
bnd
push
xor
jno
lods
mov
rorl
xchg
daa
ret
test
jle
xchg
fsub
mov
out
dec
js
movsl
xor
sbb
int
orl
cmp
adc
sti
xchg
inc
aad
and
xchg
add
xlat
sahf
dec
xchg
test
add
cmp
add
pop
cmpsl
movsl
mulb
rcl
push
xor
jge
push
pop
and
test
add
xchg
jge
out
shl
lods
push
jmp
inc
leave
ret
in
test
cs
xchg
fcompl
mov
cli
dec
scas
xor
imul
test
jae,pt
and
ja
fucom
jg
mov
push
out
fists
jb
lret
xchg
mov
movl
idiv
xor
ds
das
and
movsb
fsubs
mov
cmpsl
subb
pop
mov
cmp
jb
add
cs
and
lods
mov
cmp
clc
loop
cmpsl
mov
sbb
outsb
xlat
mov
pop
call
fdivrl
mul
xchg
inc
xchg
push
push
jecxz
mov
in
stos
push
mov
xchg
mov
adcb
xchg
in
mov
push
test
sbb
xor
js
fists
test
pushf
or
mov
pop
adc
or
insb
sbb
lcall
sub
jl
cmp
shlb
cli
daa
sbb
loope
test
repnz
sub
fistps
mov
cltd
and
mov
int
push
call
sbb
mov
cltd
call
push
fwait
push
loop
adcb
leave
jnp
inc
je
cld
and
aas
addr16
cmc
faddl
fisttps
sub
adc
jmp
jno
jecxz
cwtl
imul
dec
ror
daa
lds
dec
subl
mov
nop/reserved
data16
ljmp
rorb
in
sub
inc
pop
shr
out
js
pop
adc
or
sub
jp
mov
jno
jmp
sar
adc
jmp
mov
xchg
cli
scas
daa
xor
jb
mov
stc
xchg
imul
add
or
iret
xchg
mov
int3
decb
xchg
shrl
lds
adc
mov
mov
in
ja
mov
mov
cltd
aad
cltd
fdivl
pcmpgtb
add
shl
out
enter
into
cli
jecxz
pop
aaa
push
xchg
xor
lock
repz
fwait
stc
jle
cmp
xor
or
std
pop
or
mov
bound
mov
jge
lcall
xchg
adc
lcall
loopne
arpl
sbb
je
xchg
sahf
pop
hlt
xor
xchg
inc
into
push
dec
cmp
adc
jecxz
pop
ret
sahf
jle
outsl
mov
jp
daa
repnz
pop
insl
testl
das
repz
xor
cld
mov
add
jbe
and
jo
pop
jo
dec
int
cmp
outsb
inc
jns
cmp
jns
pop
ds
push
icebp
lcall
dec
adc
sbb
pop
loope
mov
adc
iret
add
loope
push
popf
push
scas
in
jno
adc
xchg
dec
jb
int
jae
sahf
insb
ret
mov
lahf
inc
dec
pop
adc
fsubp
pusha
sahf
sub
dec
xchg
push
in
lret
xor
jno
cmpsb
push
mov
cmc
icebp
daa
sahf
adc
cmp
cltd
push
enter
jnp
cs
and
out
add
jno
sahf
loopne
outsb
mov
gs
and
mov
cmpsb
leave
data16
cmc
pop
sbb
bound
mov
cli
pop
fdiv
or
das
push
adc
nop
sbb
in
and
loop
movsb
xor
sbb
test
in
xchg
push
imul
repnz
ret
fidivrs
inc
in
fcmovbe
inc
rcl
loope
push
ja
fstps
fisttpl
fptan
or
jne
mov
out
nop
fidivl
fwait
mov
lods
mov
hlt
jae
cmc
push
out
je
mov
xchg
fstl
insl
jmp
push
cwtl
arpl
addr16
aas
dec
cmc
mov
jno
repz
push
and
sbb
inc
sarb
icebp
lcall
cmpsb
dec
pop
add
mov
xor
inc
loope
in
push
lds
or
xlat
loopne
inc
sahf
psrld
mov
rcll
int3
push
pop
iret
das
cld
push
cld
stos
or
inc
and
mov
push
mov
add
add
ss
stos
outsl
mov
jns
push
sahf
jns
mov
sub
es
inc
arpl
std
cltd
xorb
jnp
mov
leave
push
or
call
xor
hlt
dec
pop
push
shlb
and
cmc
inc
call
nop
and
push
mov
dec
iret
mov
adc
and
inc
mov
repnz
push
and
insl
lock
js
addl
push
cmp
jg
pop
pop
cs
lahf
cmp
xor
fiaddl
shr
dec
mov
and
push
aaa
cmp
mov
xchg
in
jns
mov
enter
call
std
add
mov
add
ucomiss
cltd
std
je
sbb
bound
xchg
hlt
push
arpl
push
xchg
push
sbb
pop
repnz
mov
xchg
xor
ja
in
adc
dec
mov
xchg
push
pop
and
in
bound
push
test
adc
out
bound
lock
arpl
mov
negb
push
sbb
mov
dec
adc
int
decl
mov
cmp
pop
loope
fistl
sub
les
mov
xchg
stos
test
loope
push
addl
mov
mov
outsl
add
xchg
inc
add
lret
adc
aad
daa
pop
sbb
push
jb
pop
inc
leave
clc
mov
sbb
in
and
xor
stos
push
mov
xchg
sub
or
pop
dec
add
sar
cld
data16
mov
mov
inc
xor
inc
cmp
out
icebp
mov
push
ret
dec
loopne
adc
mov
sub
lea
add
test
sar
ror
add
sub
sbb
mov
pop
leave
dec
sti
mov
add
pop
out
mov
loope
push
pop
popf
jle
jbe
in
mov
test
cwtl
in
nop
in
and
add
shlb
int3
pop
int
sub
sbbb
mov
scas
cmc
mov
pop
loop
sub
bnd
mov
mov
repz
mov
test
es
dec
mov
inc
addb
xor
pop
mov
jne
lea
enter
ret
xchg
add
sub
push
lahf
push
cmc
fcmovnbe
js
imul
bound
xchg
cmc
shrb
or
negl
rcll
mov
mov
mov
lods
lds
fildll
jl
jecxz
imul
push
in
jge
dec
fcompl
sbb
imul
cmpl
cld
lods
jmp
rcll
popf
cmpsl
cmpsl
add
mov
pop
and
loope
mov
mov
and
pop
jno
inc
jns
filds
es
ss
repz
int
add
ds
outsl
mov
jp
cmp
jbe
int3
test
fsubs
adc
rcr
or
movsb
fcmovbe
mov
aas
xchg
test
cli
push
es
js
pop
pop
loop
leave
ret
mov
and
int
fstpl
jnp
mov
push
adc
mov
cmc
rorb
fidivl
dec
setbe
sbb
adc
aad
push
adc
lret
mov
enter
out
outsl
mov
mov
mov
lret
jg
iret
lret
and
lea
xchg
xor
adc
xchg
pushf
daa
int3
insl
xchg
jb
fmuls
scas
and
pop
pusha
pop
fstps
pop
inc
mov
inc
sbb
mov
add
and
std
jl
arpl
push
or
addr16
incl
jmp
scas
push
sub
mov
cmp
imul
mov
mov
or
push
jne
xchg
lock
cmp
fcomip
insb
mov
arpl
out
loope
or
jg
jecxz
xchg
fwait
dec
imul
out
out
push
roll
pop
pop
in
mov
imul
inc
mov
ds
adc
or
cmp
pop
and
xchg
mov
pop
and
push
mov
dec
cmpsl
xchg
lods
push
pusha
push
imul
lret
add
xchg
fdivrs
stos
lods
adc
xchg
jl
sbb
and
jmp
sbb
push
lods
fstpl
test
mov
in
repz
pop
aam
lret
fcoms
jle
jmp
inc
mov
iret
lret
jae
adc
sub
enter
les
ret
push
decl
pop
cmp
mov
xchg
out
and
ret
cs
and
mov
inc
xchg
push
mov
pop
sbb
lahf
pop
movsl
xchg
jle
cmp
ljmp
fs
xlat
mov
cs
or
enter
dec
push
arpl
popf
iret
inc
and
ljmp
pushf
dec
out
pop
push
dec
sti
sub
or
imul
clc
je
sub
pusha
scas
popf
mov
or
mov
lea
icebp
mov
inc
pop
push
ret
data16
push
xor
movsb
jo
dec
xor
ret
cmp
inc
jp
pop
ja
mov
into
push
inc
push
outsb
fisttps
hlt
pop
in
and
repnz
sub
xchg
inc
iret
jnp
xchg
sub
sub
das
mov
insl
cmp
imul
mov
add
jmp
xchg
inc
in
dec
pusha
xchg
lods
test
sbb
or
sbb
jnp
or
ret
test
mov
std
mov
ss
cmpsb
or
out
dec
test
or
sub
jnp
sub
dec
cmpsb
cmpsb
test
je
mov
das
in
rcrb
ss
lock
std
pop
mov
int
in
xor
inc
cmp
push
ss
call
pop
fsubs
push
cltd
fimuls
jmp
push
stos
movl
xor
jno
jmp
pop
mov
push
sbb
loop
xor
push
inc
jns
adc
fidivrl
push
jge
mov
and
leave
icebp
les
xlat
inc
test
dec
mov
lods
mov
fmull
sub
pop
and
mov
cs
pop
cmp
pop
lea
xchg
mov
adc
jp
adc
xor
test
loope
daa
clc
mov
mov
jo
pop
push
pop
or
mov
mov
xor
cwtl
or
outsl
rorl
adc
add
jl
pop
push
lret
mov
es
xor
shrl
jp
xchg
mov
insb
ljmp
repnz
inc
jae
jle
push
int
popf
adc
push
sub
mov
outsl
loopne
arpl
sub
cmpl
loop
movsb
or
rorb
cwtl
je
xor
test
into
sbb
mov
pop
xchg
aad
loopne
sbb
aam
es
or
add
and
pop
fs
jg
mov
ss
inc
hlt
lock
and
negl
mov
je
cli
push
inc
lods
sub
jl
inc
fs
aam
pop
sti
clc
lods
jbe
int3
fs
xlat
xchg
pop
or
lret
cmc
push
leave
cltd
adc
in
xor
adc
sbb
in
popf
bound
test
push
addr16
cmp
stc
test
test
or
lock
add
dec
push
cli
cld
jmp
xchg
jmp
stc
insb
or
fbstp
int
cmp
or
or
lcall
jnp
clc
push
bound
stc
inc
cltd
test
rorb
cmp
jp
xchg
pushf
imul
iret
imul
jbe
xchg
jne
adc
stos
stos
out
pop
push
pop
sbb
and
es
loopne
test
or
pusha
addr16
stos
cld
jmp
mov
shrl
jbe
push
sbb
push
movl
ss
push
inc
lret
cmpsb
lods
aas
push
jae
gs
xor
aam
lock
call
and
movsb
add
ja
mulb
loop
lea
clc
imul
pop
cmpsb
xchg
sub
mov
or
dec
fwait
mov
add
in
leave
sbb
mov
add
dec
and
xchg
sub
mov
jbe
push
adc
aaa
es
insb
cmp
cmp
inc
sub
fwait
mov
sbb
shrb
dec
xchg
hlt
dec
jg
ss
dec
xor
inc
xchg
outsb
xor
bound
sbb
inc
mov
popf
cmp
enter
es
adc
scas
aas
jg
jns
xchg
out
xorb
xorb
pusha
jae
adc
adc
jbe
push
das
fisubrl
push
psrld
cld
test
adc
mov
icebp
in
andl
pop
sbbl
cmpsb
test
mov
jmp
jle
mov
mov
mov
pop
xor
push
movsl
imul
pop
push
and
pop
push
dec
cltd
addr16
jno
cltd
cmpsb
mov
es
mov
lret
std
fwait
sbb
repz
xor
je
pop
cmp
andb
xor
xlat
inc
mov
jmp
push
xchg
lahf
ljmp
mov
sbb
adc
mov
mov
jo
cmp
xor
sub
push
inc
cmpsl
adc
cmp
adc
pop
cmp
lock
cwtl
mov
or
ljmp
mov
mov
xchg
insb
lods
push
das
out
aam
mov
jbe
dec
iret
lods
inc
cmp
mov
xor
push
dec
or
scas
xor
test
daa
xchg
add
inc
and
inc
sub
jmp
cmpsb
test
jecxz
aaa
mov
adc
fisubs
jbe
sahf
scas
jp
sub
and
mov
add
xchg
rcrl
mov
leave
push
lcall
pop
or
ds
xor
pop
mov
into
sub
mov
sub
jno
dec
data16
js
adc
xlat
div
and
and
sub
add
push
push
je
data16
or
pop
bswap
ja
lret
andl
sti
lret
imul
dec
xchg
mov
xchg
dec
clc
leave
scas
or
out
sub
mov
clc
dec
cld
push
and
cmc
outsb
xchg
mov
mov
test
stos
xlat
mov
or
loop,pn
ljmp
jg
mov
sbbl
rcrb
add
repnz
scas
and
xor
in
jmp
sbbb
xchg
and
push
sbb
and
dec
shlb
jo
mov
loop
ret
sti
popf
stos
push
mulb
aas
adc
sbb
xchg
das
int
jno
push
dec
mov
sub
dec
divb
in
and
push
cwtl
out
test
xchg
jmp
jae
or
pusha
jne
adc
xor
sub
push
push
mov
dec
mov
mov
loope
out
pop
xchg
pop
mov
scas
loope
dec
pop
aas
mov
lods
cltd
jge
ja
loopne
jle
xchg
push
and
mov
jb
out
fisubrs
add
clc
stos
add
pop
jmp
mov
inc
push
pop
outsb
push
in
lods
xor
mov
mov
inc
sbb
adc
xlat
aas
aaa
test
sbb
mov
aaa
cmp
clc
adcl
jl
fdivrl
repz
das
fsts
and
sub
jg
sarb
fldl
mov
mov
icebp
adcl
outsb
insl
push
iret
jge,pn
inc
jb
xor
adc
sahf
xor
lock
test
sbb
outsl
sbb
pop
adc
cmc
sbb
movsb
insl
jnp
mov
aaa
ret
xchg
aad
imul
xchg
test
mov
fwait
xchg
mov
xor
jbe
insb
sti
mov
xchg
js
mov
mov
dec
add
ljmp
add
insb
cltd
ret
out
dec
push
pop
ficompl
xchg
das
pop
adc
cmp
or
dec
or
pop
inc
xor
xor
xchg
cmp
stos
sbb
cmp
dec
push
daa
inc
xchg
jge
pop
jns
adc
sti
adc
push
add
add
adc
inc
les
das
fldcw
push
dec
fs
pop
outsl
xor
les
and
mov
int3
ja
inc
and
addb
iret
dec
jo
mov
lahf
push
dec
jmp
iret
in
in
sub
orb
mov
int3
jecxz
arpl
add
loopne
cltd
enter
repz
mov
push
test
pop
mov
sbb
lods
clc
adc
lods
popa
cld
pop
push
jne
jmp
je
pusha
xor
mov
iret
sbb
jb
sbb
cmpsb
mov
add
test
and
pop
dec
in
inc
sbb
xchg
add
fidivl
xchg
mov
test
push
pop
mov
insb
das
lret
push
sti
sahf
cwtl
out
jl
in
es
jb
mov
shlb
jno
xchg
negb
xchg
inc
sub
loop
jmp
xor
mov
dec
stos
jno
xchg
fdivp
or
call
push
mov
adc
jmp
pop
inc
sti
pusha
mov
jmp
or
aam
ss
dec
ljmp
push
sbb
mov
mov
fwait
enter
xchg
or
cmpsb
fildll
insb
repz
xchg
sbb
ret
mov
cltd
je
popf
repnz
into
jae
sub
adcb
es
adc
and
repnz
jnp
mov
cld
call
jnp
mov
adc
push
xchg
loop
out
imul
jmp
mov
pop
dec
js
jns
mov
imul
dec
mov
ds
xchg
fdivrs
xor
les
xor
or
stos
mov
test
ss
push
mov
and
dec
push
sub
mov
scas
loope
shrl
mov
dec
fdivl
lret
repz
rorl
dec
scas
repz
pop
mov
jno
sbb
pop
jnp
lock
nop
push
pop
sbb
mov
int3
pusha
push
xor
pop
jp
insb
push
mov
xchg
imul
shl
ljmp
mov
mov
stos
leave
mov
dec
lods
inc
xor
arpl
in
idivl
xor
mov
push
mov
pop
call
int
les
mov
or
sti
xchg
adc
mov
lods
cmpsl
stos
add
xchg
je
inc
xor
das
lret
pop
sub
nop
inc
mov
pop
in
aaa
xchg
cld
mov
add
pop
add
dec
jns
push
shll
sbb
rorb
mov
aad
int
xor
lock
test
lds
imulb
idivb
jmp
shlb
mov
and
fldenv
mov
lret
sarb
test
popa
push
jg
out
out
lock
movsb
insb
addb
decl
scas
cmc
jg
or
sahf
fs
jmp
and
jp
xchg
ds
js
movsb
sbb
pop
xchg
mov
outsb
shld
sub
out
clc
loope
cltd
cmp
dec
sub
add
push
push
lret
mov
in
aam
inc
cmp
test
test
dec
fidivrs
cmc
mov
sub
notl
lods
enter
aad
xchg
jp
xlat
dec
test
enter
test
out
sub
sarl
pop
daa
fcomip
fsubs
push
and
int
mov
add
addr16
lcall
fucom
inc
xchg
jnp
in
es
stos
fwait
add
outsb
pop
cmpsl
jge
ja
test
and
cmpsl
pop
fcoms
pop
ret
xchg
je
mov
cmp
jmp
jnp
int
jecxz
arpl
pop
cmp
sub
sbb
repnz
jb
fbstp
adc
mov
and
push
lret
inc
inc
mov
pop
loopne
cwtl
popf
test
cmp
rcr
pop
jmp
in
out
mov
xorb
xorl
xor
pop
sub
jl
or
fisttps
test
es
stos
cmpsb
adc
addr16
cmp
data16
dec
pop
addr16
or
in
add
mov
pop
jbe
cmp
inc
jl
sbb
mov
mov
sub
push
fstpt
lcall
adc
mov
adc
dec
mov
lea
fdivrp
cmp
pop
cld
repz
mov
lahf
lods
aam
out
sub
mov
adc
jmp
test
dec
xorl
push
icebp
es
cmpsb
push
adc
outsl
ljmp
test
je
and
je
fdivrs
jmp
or
and
ss
jl
mov
xlat
ja
mov
and
xchg
lcall
repz
and
cld
and
mov
lods
or
es
ret
mov
push
and
cs
lds
xchg
dec
ret
inc
leave
fldl
jnp
sbbl
aaa
pop
int3
ret
in
aad
mov
mov
mov
popf
call
clc
cmp
addr16
xchg
pop
jge
pop
cld
xchg
dec
push
mov
insl
sub
adc
ljmp
push
daa
add
jle
enter
out
cli
mov
and
dec
dec
pop
inc
dec
adc
or
inc
cmp
iret
leave
mov
and
nop
mov
imull
loopne
fdivl
sbb
dec
lcall
and
dec
mov
lea
scas
data16
pop
jmp
and
in
sbb
xor
or
fwait
pop
jp
in
jae
inc
push
sarl
shll
ret
push
rolb
dec
xlat
clc
stc
inc
orb
pop
mov
and
jae
rcrl
call
aad
add
mov
or
in
rdtsc
mov
xchg
pop
jecxz
sbb
jnp
sub
mov
push
cmp
push
std
mov
xchg
sar
lcall
lods
cmpsb
and
sub
cmp
sub
cld
jmp
out
inc
stos
cld
adc
cwtl
imul
and
dec
in
xchg
gs
insb
mov
pop
sbb
lds
pusha
push
stos
or
or
xchg
cli
jg
pop
addr16
adc
lds
pop
bound
stos
vpcmpeqd
repz
xchg
pop
or
negl
xlat
imul
lods
not
lds
adc
push
test
sub
cmp
or
lret
mov
rolb
inc
jbe
xor
scas
aad
xorl
or
push
or
adc
cli
std
or
dec
or
push
add
ljmp
sti
xchg
inc
push
cmp
cwtl
idiv
dec
push
xchg
cmpsb
mov
xor
pop
pop
mov
pop
test
mov
jne
fwait
pop
xchg
mov
inc
mov
fwait
pop
push
fidivrl
das
dec
subb
je
xor
mov
push
arpl
ss
lahf
mov
dec
push
es
ja
cmp
adc
dec
loopne
cmpsb
mov
movsl
cmp
pop
jecxz
cmp
and
fstpl
mov
stc
daa
gs
xlat
rcrl
cmp
pusha
loopne
xchg
add
sub
movsl
or
inc
addr16
fistps
enter
aaa
jg
cmp
dec
dec
inc
icebp
idivb
sub
loop
pop
jl
ljmp
push
dec
je
insb
in
mov
lret
cwtl
dec
imul
and
clc
pop
cli
and
mov
jnp
sub
mov
and
ffreep
and
push
std
xlat
cmpsb
inc
stos
das
jp
xchg
or
mov
mov
mov
adc
add
out
xor
sbb
mov
lods
out
std
xchg
sub
pop
inc
jnp
out
jo
lds
mov
xor
dec
stc
fwait
adc
jne
mov
popf
dec
out
dec
sbbb
lea
dec
ss
repz
insl
movsl
insl
adc
in
mov
ss
cmp
aas
jl
add
and
popf
fnsave
xor
jns
out
gs
inc
in
adc
xchg
xor
arpl
cmp
imul
inc
aad
mov
faddl
jb
push
add
mov
mov
insl
stos
in
cli
ds
mov
popf
jge
jmp
or
push
ret
mov
xchg
pushf
sub
ficompl
cmp
and
shl
add
pop
test
loop
add
xchg
pushf
mov
shl
mov
aas
push
add
and
mov
call
ljmp
cmp
mov
mov
in
lods
mov
sub
rcl
mov
fs
stos
mov
insl
cmc
xchg
sbbl
push
leave
add
sti
cmp
push
repz
or
jg
push
hlt
bound
mov
out
icebp
cmp
lds
push
push
ja
je
rorb
in
and
aaa
lea
pop
cmpl
pavgb
cmp
outsl
push
pop
mov
mov
scas
cmp
popa
mov
xchg
add
subb
int3
adc
sbb
ljmp
jmp
ret
push
je
cs
sub
mov
mov
cmc
arpl
xchg
cmpsl
cmp
push
mov
xchg
sub
push
inc
xorb
or
jmp
xchg
and
adc
ret
or
xor
xchg
mov
aaa
sbb
in
rcll
and
mov
and
mov
pusha
jecxz
push
sahf
sbb
jmp
xor
leave
sub
loopne
jecxz
xchg
in
adc
sub
sub
lods
bound
loop
push
dec
mov
cld
sbb
test
push
and
cltd
lahf
scas
lea
pop
sbb
cmpsl
push
cmp
ffreep
push
lods
cmp
dec
shll
ror
imul
and
mov
xor
out
test
mov
popa
jns
out
dec
jecxz
pop
jno
xchg
dec
jmp
aad
jno
filds
push
popa
cmp
cmp
jge
push
dec
and
shrl
pop
dec
or
int3
je
js
enter
gs
xlat
xchg
or
inc
fidivrl
popf
scas
test
je
cmp
popf
cmp
inc
sbbb
push
push
frstor
jl
mov
movsb
jne
xor
mov
test
fnstsw
es
jp
mov
push
test
mov
xchg
pop
fs
push
mov
mov
inc
or
sbb
and
scas
pop
loope
cli
pop
sahf
xchg
mov
out
and
dec
adc
mov
fstpl
mov
pop
cltd
dec
jne
add
nop
push
je
pop
in
inc
sub
adc
aad
sub
jb
in
inc
xor
sbb
fld
ljmp
inc
sbb
pop
fdivs
lock
std
in
es
rcrl
jne
push
movl
je
and
mov
add
mov
adc
mov
sbbl
xor
adcl
add
xorl
imul
mov
movl
jmp
movzbl
sub
mov
and
xor
and
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
xor
push
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
mov
push
subl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jb
xor
negl
xor
mov
add
add
imul
mov
movl
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sub
mov
mov
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
inc
mov
xor
mov
andl
add
xor
or
adc
movzwl
mov
andl
movb
or
lea
movzwl
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
or
mov
mov
adcl
xor
sub
movl
mov
xor
movl
sub
push
movl
mov
sub
push
mov
andl
xor
sbbl
mov
push
add
jmp
mov
movl
mov
movl
inc
cmp
jb
mov
adcl
xor
movl
add
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
mov
xorl
xor
mov
add
addl
movzwl
adcl
mov
mov
movzwl
xor
add
movl
mov
mov
mov
inc
mov
mov
cmp
movl
jne
sbb
mov
not
mov
xor
adcl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
addl
mov
xor
add
mov
movl
mov
movl
movl
mov
mov
movl
jmp
andl
mov
jmp
add
shlb
mov
ja
xor
add
fstpl
js
scas
rcll
xor
into
mov
stos
stc
mov
jp
push
jno
repz
or
lahf
bound
dec
call
into
aas
sbb
loop
and
sub
ljmp
or
xchg
cmc
xchg
jmp
xor
mov
jge
aad
and
and
add
insb
pop
fs
cmp
push
cmp
insb
mov
fdiv
outsl
push
imul
jno
dec
iret
push
adc
movsb
sbb
ss
push
xor
enter
add
push
loope
out
xchg
repz
lahf
pop
xor
popa
cmp
scas
inc
cli
sbb
sarb
out
mov
cmpsb
aad
jns
adc
repz
xchg
out
leave
mov
stos
adc
jmp
xor
pop
mov
and
xchg
lret
hlt
cmp
pop
std
sbb
cmp
mov
sbb
add
sub
test
mov
inc
xlat
stos
push
dec
xchg
out
icebp
clc
lret
mov
lea
sbb
inc
xchg
dec
jbe
movsl
and
int3
leave
and
or
jl
stos
cmp
clc
loope
ss
add
inc
arpl
ret
fwait
out
cmp
xchg
jno
sub
inc
rcrl
push
cmp
movsb
sahf
xchg
inc
outsl
mov
aaa
repz
xor
sub
ja
and
out
sub
dec
movsb
mov
push
push
fwait
sahf
xlat
dec
jge
shl
push
or
dec
xchg
cli
mov
fs
or
clc
push
adc
lock
mov
in
in
mov
cmp
mov
hlt
das
mov
test
xor
inc
pop
mov
xor
hlt
cmp
push
xchg
movsl
xor
stos
pushf
fwait
das
lods
sbb
and
xor
mov
adc
cltd
cmc
iret
xchg
add
in
push
cmp
ljmp
arpl
popf
xchg
cmpsb
rorb
pop
sti
inc
cmp
mov
jo
lcall
fistps
mov
cmp
shrb
out
and
popf
inc
call
bound
fstpt
les
add
pop
fisubrs
into
sub
adcb
mov
pop
aam
or
lods
mov
dec
dec
xor
pop
push
push
into
leave
xor
loopne
jmp
jge
push
xorl
adc
jl
pusha
test
lods
dec
ljmp
das
loop
and
out
ret
jns
cmpsb
sar
dec
pusha
sub
shl
lea
ret
xchg
ret
idivl
out
incb
push
ljmp
scas
jno
sarb
outsb
push
ss
ja
xor
bound
push
cmpsl
lods
push
cld
sub
xchg
roll
ljmp
rcrl
adc
add
inc
sbb
xor
pop
out
mov
cmp
sbb
js
push
xchg
pop
loopne
xor
jmp
mov
and
mov
loopne
aad
fprem
push
bound
pop
aaa
fsub
push
sti
inc
dec
mov
sbb
hlt
add
je
lret
outsb
movsb
incl
daa
loope
mov
mov
movsl
push
jmp
int
fmuls
jae
dec
test
fcomps
clc
adc
fnstenv
dec
add
or
cmc
dec
add
pushf
inc
arpl
aam
out
frstor
lds
inc
js
mov
xchg
cs
cmp
adc
jno
mov
jae
jl
xacquire
mov
hlt
or
insl
test
xchg
adc
jnp
pop
or
cmpsl
sub
fiadds
mov
adc
add
adc
xchg
mov
stos
jnp
ret
js
inc
pop
push
lcall
fs
iret
pushf
xchg
std
outsl
sub
add
and
adc
sbb
movsb
fsubl
dec
xchg
mov
push
jnp
mov
clc
cs
dec
mov
cmpsb
iret
aas
jns
fists
mov
sbb
inc
xchg
aas
ret
leave
sarb
jle
xor
push
mov
repz
cmc
mov
outsl
loopne
sbb
daa
sarl
inc
test
pop
cmp
inc
cltd
gs
mov
ja
int3
mov
jbe
rorb
mov
dec
push
fldcw
cwtl
gs
xor
imul
test
sahf
mov
loop
and
out
ja
inc
cmp
cmp
inc
inc
lcall
sti
imul
aad
notl
and
sbb
cmc
xor
adc
arpl
sub
cmpsl
cmp
dec
jbe
sub
or
xor
sub
mov
sbb
cli
loopne
jle
stos
adc
out
jae
fimuls
fucomp
and
fwait
je
fbstp
test
out
jns
cmp
test
sbb
push
cmp
repz
loope
sub
xchg
jae
ja
jge
xchg
dec
out
fwait
shrl
pop
pop
mov
js
hlt
ret
cmpsl
orl
adc
sbb
cmp
fdivs
adc
and
es
das
insl
cltd
lods
dec
mov
push
adc
subl
cmp
mov
popa
sti
xor
adc
int3
jbe
jp
xlat
outsb
inc
icebp
sub
je,pn
shrb
mov
popf
push
and
into
mov
lods
and
adc
repnz
aas
cmpps
jae
mov
jle
aaa
fsts
inc
jns
mov
push
cmpsl
clc
test
jb
pop
sbb
cld
pusha
in
xchg
adc
xchg
or
outsl
mov
dec
push
push
mov
jmp
in
xchg
jns
jecxz
pop
and
cwtl
insl
pop
pop
pop
fildl
fs
push
aaa
mov
sti
clc
je
cmp
pop
push
hlt
or
mov
fisubrl
and
mov
jg
sbb
leave
mov
call
icebp
shrb
jg
jo
frstor
hlt
insb
mov
in
lahf
fs
pop
cwtl
pop
sbb
and
mov
sahf
lds
or
and
push
bound
or
inc
aam
aas
adc
mov
xchg
shrb
negl
push
jb
mov
sarb
and
push
repz
jl
int
popf
jecxz
mov
stos
mov
xchg
xchg
adc
test
cmp
xlat
jo
push
notb
cmp
divl
jne
mov
mov
sbb
stos
data16
add
lock
outsb
enter
subl
dec
fxam
jnp
ljmp
int
cmp
fidivrs
add
lfs
push
out
mov
ja
dec
sub
mov
or
push
fdivs
outsl
in
daa
cmc
jbe
dec
les
inc
cwtl
jbe
sbb
popf
cld
into
repz
outsb
xorl
popf
adc
decl
mov
mov
lea
les
fistpll
lahf
icebp
imul
loope
lds
je
mov
pushl
in
aam
xchg
insl
or
bound
jecxz
stos
loop
test
lea
loop
dec
test
roll
nop
sbb
pop
sub
mov
das
clc
and
sbb
mov
jne
mov
les
xchg
jmp
adc
xor
out
jae
pop
push
xchg
pop
or
inc
es
mov
xor
xchg
adc
adc
daa
push
sub
fnsave
lret
cmc
call
in
mov
xchg
adc
ret
lock
out
sbb
adc
rcll
test
rcll
xchg
jg
cmp
pop
testb
xor
cwtl
jg
jbe
lods
ror
cld
stc
push
mov
lods
add
mov
leave
xor
xor
mov
pop
lahf
mov
aaa
in
loope
mov
xchg
popa
dec
pcmpeqb
push
xor
push
jne
xchg
xor
bound
fldt
pop
jg
add
sti
aam
jnp
push
rolb
sahf
popf
pusha
adc
push
mov
lahf
mov
pop
xor
push
icebp
adc
xchg
mov
xor
aad
mov
jmp
or
jno
test
insb
push
insl
inc
fs
xor
adc
xor
mov
in
sahf
aam
ljmp
xchg
xchg
pop
aas
pop
popa
xlat
imulb
js
js
push
je
dec
dec
jmp
xor
scas
push
cwtl
mov
rcl
push
push
jo
mov
outsb
leave
out
sub
scas
cltd
inc
test
sub
jae
je
pop
and
stos
pop
enter
insl
loope
dec
es
inc
pop
arpl
pop
push
sbb
add
mov
pop
enter
popf
pop
mov
adc
or
mov
jp
lock
fadds
sub
add
sbb
icebp
or
ja
pop
lea
adc
shll
faddl
int3
dec
repnz
mov
sbb
xor
data16
in
test
pop
mov
fadds
shrl
xchg
pop
test
daa
aas
fwait
pop
imul
mov
fldenv
out
inc
xchg
and
in
dec
jns
out
pop
cmp
js
or
ss
or
test
mov
xchg
lds
mov
lods
dec
jno
cmp
inc
jns
cli
test
inc
sti
lret
and
fistpll
lret
ficomps
arpl
retw
inc
or
pop
daa
ret
cmp
inc
xor
jb
jmp
xchg
push
rorl
je
pop
outsw
pop
xor
adc
mov
cmp
neg
xor
mov
ljmp
fnstcw
mov
sbb
sub
hlt
jecxz
pop
and
push
xchg
jno
xchg
jl
mov
ror
xchg
add
and
daa
cmpsb
adc
rorb
out
dec
dec
in
stos
mov
add
frstor
movsl
bswap
jmp
stos
jnp
push
push
inc
fabs
xlat
inc
xor
test
sub
out
rol
pop
cmc
push
cmp
je
mov
insl
and
aad
and
hlt
sub
xchg
jl
int
cwtl
aaa
add
mov
mov
hlt
dec
mov
xchg
jle,pn
mov
xor
adc
mov
pop
xchg
pop
leave
push
mov
or
xchg
fstl
xor
xor
lcall
ds
and
fbstp
insl
ljmp
push
dec
in
dec
les
rcr
xchg
pop
hlt
jecxz
pop
dec
and
or
out
mov
and
jns
les
sub
ret
shl
ljmp
cmp
fimull
add
popa
imul
and
call
or
adc
mov
cmc
pop
call
mov
flds
fisttpll
push
shrb
push
or
and
or
mov
push
loop
dec
in
scas
mov
mov
jb
cmc
fnstsw
pop
cmc
popf
xor
sub
adc
cmp
in
fnstenv
add
sub
and
in
pop
call
lahf
cli
dec
stc
xchg
and
aas
xchg
adc
movsb
nop
push
inc
and
inc
lret
pop
jb
loopne
cmp
loop
push
mov
lock
movsb
push
test
inc
lcall
xchg
mov
fucomi
ret
adc
inc
push
int3
xor
cmp
data16
sub
lods
in
xchg
jo
mov
pop
jae
movsl
mov
pusha
push
sub
xchg
jno
fisttpl
faddl
iret
mov
or
nop
sbb
cmp
jo
xor
das
ja
mov
clc
jg
out
push
subl
mov
test
jne
jnp
scas
std
sbb
sub
into
sub
pop
jb
add
rcl
sbb
add
lret
inc
adc
mov
add
pop
add
data16
cmpsl
out
mov
inc
sub
jmp
test
pop
adc
insb
sahf
sbb
pop
inc
loope
add
popf
push
mov
lods
sub
popf
cmp
mov
push
inc
jmp
dec
push
sbb
inc
mov
int3
inc
cmp
push
lahf
bound
repz
popf
mov
and
jo
call
mov
lea
mov
cmp
push
stc
out
mov
rcl
mov
subb
movsl
jbe
or
sahf
add
aas
imul
push
mov
and
cld
xchg
imulb
sbb
dec
mov
xchg
or
jecxz
stos
sahf
aad
dec
mov
test
push
out
imull
inc
jmp
cmp
imul
scas
push
scas
ret
ret
dec
sbb
das
pop
aaa
fimuls
pop
mov
sub
sub
or
inc
ds
imul
pop
cmpsb
dec
cs
push
jno
push
nop
xor
and
mov
lret
mov
lds
ret
in
push
push
mov
stc
mov
sar
or
int3
dec
aas
sub
ret
sbb
pop
pop
mov
subb
cmp
jno
push
jb
xor
mov
into
scas
cmpsb
mov
idiv
lret
lcall
xchg
adc
mov
dec
jno
cmpsb
je
inc
icebp
shlb
std
sub
add
and
or
inc
add
scas
cmp
and
inc
cmp
mov
xchg
ljmp
mov
or
imul
scas
cmp
sbb
lahf
nop
jnp
xor
add
sbb
dec
pop
out
cmp
mov
cmc
adc
icebp
sahf
cmp
cltd
loop
mov
or
pop
xorl
cmp
cld
je
dec
outsb
cmp
mov
stos
hlt
fadds
clc
adc
cld
fsubrl
xor
and
daa
test
ffree
lds
aaa
daa
jne
jmp
lahf
xchg
xchg
or
mov
mov
test
repz
and
mulb
inc
push
fcompl
ja
add
call
inc
insl
pop
adc
mov
adc
aas
sub
icebp
push
push
insl
das
xor
add
pop
xchg
jmp
push
xchg
fmull
or
js
xchg
push
outsb
jae
pop
sub
lret
adc
int
rcrb
pop
repnz
cltd
inc
xchg
cli
adc
repnz
xor
rcl
popa
out
stc
aaa
mov
cmp
sub
push
xor
adc
fadd
jae
pop
xor
dec
orb
inc
repz
hlt
mov
fisttpl
mov
aas
cli
fdivrs
popf
outsb
add
arpl
push
aas
cli
xchg
arpl
xor
jge
pop
jle
push
dec
sub
imul
leave
push
xor
sbbb
and
cli
add
stos
scas
shll
enter
addb
xchg
fsubp
aam
xor
xchg
add
lods
scas
movsb
jmp
mov
daa
leave
jecxz
icebp
jecxz
mov
xchg
test
mov
sbb
in
inc
mov
mov
or
pusha
decl
ffree
movsb
pushl
xchg
sub
sahf
xor
pminub
out
and
imul
pop
sbb
cmp
rorl
test
mov
xor
xor
popf
daa
adc
out
fidivrs
scas
test
orl
ljmp
dec
or
sub
sub
fiadds
out
cmpsb
sub
pop
push
in
and
mov
mov
ret
jns
mov
mov
inc
and
or
mov
imul
sub
push
iret
or
test
adc
xor
jne
push
inc
fstpl
data16
jnp
push
aaa
test
push
mov
and
xor
test
and
jae
arpl
push
pop
pop
mov
jno
pop
imul
jnp
pop
xlat
cmp
mov
pusha
sub
dec
imul
mov
insb
shr
pop
ffreep
or
lds
or
xchg
xchg
adc
stc
lret
or
mov
pop
sub
xlat
push
jl
or
mov
mulb
push
sub
mov
add
xchg
mov
clc
inc
addr16
jmp
or
xor
notb
cmp
inc
adc
icebp
push
jns
pop
cmpsl
sbb
jecxz
pop
aam
lock
xchg
or
out
mov
push
lret
int3
mov
lds
mov
sbb
sub
adc
push
outsb
push
ficoms
pop
lods
lods
loope
ret
test
or
mov
stos
shr
shl
add
cmp
cli
movsl
enter
lahf
mov
xor
outsb
into
in
sub
jbe
mov
mov
ss
sbb
enter
mov
add
inc
cltd
enter
out
repnz
pop
jecxz
imul
je
jno
je
pop
gs
sub
cmpsb
lods
or
cmp
test
test
jg
repz
imul
mov
xchg
push
shlb
scas
mov
js
cmp
mov
aam
stos
lea
bound
aad
xchg
sub
cmc
out
cmp
cmp
mov
jne
sbb
scas
daa
or
aaa
xor
inc
sub
jmp
int
sbb
dec
stos
pop
insb
mov
mov
bound
inc
test
sub
mov
sbb
adc
repnz
jo
lret
imul
js
shrb
pop
add
movsl
ja
mov
and
pop
sub
inc
lds
cli
push
inc
scas
stos
mov
mov
popf
or
adc
sbb
mov
cmp
jbe
cmc
push
lret
and
adc
xchg
test
ret
pop
mov
or
push
push
insb
arpl
test
lods
and
xlat
xor
aad
movsl
mov
push
xchg
push
sub
iret
clc
movsb
fwait
in
mov
rol
in
or
int3
mov
divl
pusha
cld
lret
mov
dec
adc
sbb
inc
xchg
pop
lea
mov
mov
cmc
stos
adc
enter
cmp
loop
test
xchg
sarb
aas
mov
mov
mov
or
jno
mov
adc
mov
sub
shll
push
mov
jnp
mov
test
mov
insl
out
out
fldenv
pop
mov
fdivl
jae
shrb
mov
push
sub
call
lock
lods
addr16
or
cld
pusha
scas
adc
pop
xor
cwtl
in
fsub
arpl
sbb
loope
dec
mov
stos
mov
jge
mov
mov
sbb
push
mov
xchg
pop
pop
outsb
pop
andl
loop
and
lahf
aaa
inc
out
orl
sbbb
and
mov
test
iret
fcomip
cmp
movb
imulb
jnp
push
fnstcw
repz
ret
lcall
cmp
cmc
stos
xchg
lods
cltd
dec
call
push
shll
add
lods
or
pusha
xchg
mov
jle
pop
daa
test
icebp
dec
fisttpll
lahf
out
sub
xorl
pop
pop
pop
enter
jnp
loope
push
into
pop
lea
mov
sbb
shll
je
push
cmp
mov
shll
xor
jbe
divb
mov
push
xor
xchg
push
jp
mov
cmpsb
stc
and
mov
mov
loopne
xor
cmp
stc
and
fsubr
mov
out
scas
sbb
jl
xor
data16
jge
add
fbstp
outsb
or
shll
js
fisubs
xchg
push
pop
repz
pop
xchg
push
movl
dec
lcall
inc
add
sub
aam
jge
imul
cld
fcompl
adc
leave
dec
shlb
ret
movsl
aas
jns
cltd
mov
into
js
mov
nop
insl
or
scas
mov
pop
sbb
test
inc
jae
adc
mov
aas
mov
xchg
loopne
push
mov
loopne
dec
push
enter
js
mov
sbbb
fidivrs
test
adc
idivl
arpl
into
lcall
xorb
pop
daa
lcall
push
and
mov
lds
push
xchg
pop
jno
push
jae
les
or
inc
call
fucomip
in
clc
stos
mov
push
pushf
hlt
out
and
sbb
xchg
mov
mov
cs
das
xchg
pushf
jns
scas
push
push
push
inc
imul
fsubrl
test
cmp
dec
ret
js
sbb
push
adc
shrl
loope
icebp
aaa
mov
add
adc
dec
inc
pop
sbb
cs
push
or
pop
sti
fistps
pop
aam
repnz
dec
das
jl
andl
insl
stc
mov
ss
out
cld
mov
push
les
popf
dec
dec
xchg
test
movsb
cmova
mov
jmp
stos
icebp
sahf
dec
out
sbb
inc
jnp
ret
and
or
icebp
add
arpl
inc
sub
sub
filds
ret
loop
popa
and
imul
or
sub
pushf
std
dec
jle
roll
pop
movsl
in
dec
js
loopne
inc
imul
in
cmpsb
push
xchg
mov
jne
sub
cli
pop
or
mov
pop
inc
xor
ret
add
cs
fcompl
pop
cmp
mov
xor
dec
int3
push
clc
mov
add
mov
nop
iret
dec
mov
cmp
push
aaa
cmp
fs
jmp
adc
jmp
jp
fbstp
dec
or
aas
mov
and
adc
sbb
cwtl
daa
pushf
cmpsb
addr16
arpl
mov
xchg
loop
imul
int
dec
mov
xchg
ret
xchg
jge
mov
xchg
xchg
pop
shr
dec
notl
push
sub
sbb
sbb
adc
dec
jnp
xchg
hlt
jno
sti
mov
fcmovnu
jns
jo
lods
inc
repnz
jle
push
data16
mov
rcrb
cli
cmp
jno
insl
mov
mov
test
mov
ljmp
aam
pop
shll
fsubs
push
jmp
push
daa
fucomi
sub
xchg
mov
lret
pop
push
lea
and
adc
nop
lret
pop
mov
xor
std
mov
iret
xor
clc
and
xorb
incl
mov
add
jae
inc
lock
mov
lods
mov
mov
or
scas
and
fnstcw
mov
jo
mov
insb
sub
add
cmovbe
lods
lods
stc
or
repnz
and
aam
jbe
jecxz
sbb
lods
jl
and
pop
jb
test
dec
and
fiadds
sti
std
xor
pop
test
dec
rcrl
sarb
add
jp
xlat
out
push
inc
adc
or
fwait
popf
out
sbb
pop
jecxz
cmp
pop
push
inc
xchg
sub
push
fmull
mov
xor
enter
sbb
pop
loop
add
pusha
xchg
cmpsb
push
xor
clc
roll
aas
sub
lock
stos
adc
xchg
pop
insb
push
divb
movsb
dec
je
pxor
jne
mov
xlat
adc
outsb
pop
insb
push
and
loopne
jne
sbb
lods
push
dec
pop
jns
or
gs
sub
cmp
adc
daa
sbb
mov
push
fucom
hlt
mov
ret
mov
or
and
test
out
pushf
mov
sbb
test
inc
dec
std
repz
mov
jp
in
ss
sbb
and
dec
clc
clc
jne
dec
pop
push
xor
ja
cs
or
cmp
leave
insb
mov
mov
cmp
mov
fisttpll
pop
sti
subb
xchg
js
dec
enter
push
dec
push
dec
aaa
dec
cmp
sub
adc
dec
pop
and
mov
mov
pop
and
ss
dec
mov
mov
jae
dec
mov
adc
sahf
xor
test
push
std
xchg
jecxz
xbegin
bswap
mov
mov
mov
and
test
xorl
jae
mov
test
and
aaa
push
out
data16
loope
pop
inc
xor
mov
and
cmp
or
add
idivb
mov
hlt
sbb
push
pop
xchg
jl
mov
xor
jo
dec
dec
mov
cwtl
push
outsl
jns
aad
fldt
mov
arpl
sbb
jl
push
mov
inc
adc
addr16
call
sub
jp
dec
lock
rcrl
push
ljmp
ror
sbb
push
xchg
add
popf
push
cmpsb
je
lods
dec
sbb
jae
aam
dec
lods
sbb
cmpsb
lods
addb
lahf
daa
in
icebp
mov
roll
mov
push
dec
cmp
flds
arpl
push
mov
out
pop
inc
rorb
dec
xchg
inc
sub
stos
jle
cltd
call
cmp
mov
rcrb
and
sub
cli
xchg
and
in
jge
mov
dec
and
es
repz
lods
jmp
mov
push
or
jg
add
ds
js
mov
daa
ja
enter
push
add
xor
xchg
mov
int3
test
and
lock
push
lods
inc
incb
mov
test
insl
and
scas
xchg
push
sub
xchg
mov
add
fisubrs
pushf
cmpsb
and
fsubrs
popf
lods
lret
pop
lret
pop
fwait
xchg
adc
imul
out
bound
jl
xchg
int3
mov
cmp
adc
adc
stos
addr16
sub
iret
sbb
movsb
pushf
mov
jnp
push
adc
repnz
repnz
mov
rcr
pop
aaa
dec
cmp
mov
ret
loope
int3
mov
inc
into
xor
in
add
push
jo
adc
in
dec
cltd
push
sbb
and
add
aaa
movsl
and
fildl
outsl
repnz
jmp
sahf
and
sub
lock
stc
lock
test
test
ret
loop
cmpsb
push
icebp
loop
push
imul
call
mov
into
push
ljmp
mov
cmp
mov
xor
xchg
jae
out
pop
cmpl
cmp
das
or
cmp
dec
cmpsb
adc
popf
cmp
push
push
int3
xchg
stos
lds
mov
mov
cmp
cmp
dec
jecxz
in
push
test
add
insb
cmp
cs
hlt
mov
stos
mov
out
fld
add
jg
pop
mov
js
cmp
rep
into
loopne
data16
lea
xor
sbb
mov
jecxz
jno
flds
mov
fwait
sbb
cmpsl
aad
and
push
insb
jecxz
dec
fldl
lret
dec
js
inc
and
pop
mov
pop
fstpl
mov
mov
ffree
xchg
in
adc
rol
sbb
adcb
bound
lock
test
lods
out
add
popa
in
mul
insb
sub
and
jno
jge
fucomp
adc
add
dec
or
xchg
jae
adc
nop
mov
sub
lcall
mov
adc
or
adcl
movsl
fiadds
sbbl
pop
lea
out
push
xchg
push
xchg
dec
xor
shrl
dec
rorb
loope
daa
cwtl
popf
fnclex
pop
into
movsb
lret
dec
inc
push
scas
jno
or
sbb
and
xorb
in
insb
dec
mov
jg
lods
cmp
push
inc
pop
lcall
insb
dec
add
in
enter
es
cmpb
mov
cmc
or
jo,pn
std
xchg
xchg
adc
ffreep
xchg
sti
repnz
xor
mov
sub
mov
test
lret
sub
sub
ds
fisubrl
xor
lds
lock
das
insl
pusha
sub
hlt
push
negl
sub
jg
in
aaa
stos
pop
fdivr
movb
bound
repnz
loop
arpl
testb
add
push
shlb
addr16
lret
mov
mov
fdivrs
gs
adc
xchg
stos
push
xor
mov
test
mov
push
out
mov
dec
mov
sub
cltd
es
outsb
jns
jns
lock
cmp
push
mov
pusha
shll
out
int3
sub
popa
ret
sbb
cwtl
xor
and
xchg
xchg
icebp
sbb
imul
inc
icebp
sub
and
mov
mov
jbe
fildll
mov
outsl
dec
pop
imul
sub
fs
into
ljmp
outsb
cmp
xlat
addr16
push
into
push
stc
cmpsl
dec
adc
mov
or
icebp
xorb
and
das
mov
popf
outsl
cmp
push
mov
imul
dec
mov
in
movsb
dec
into
bound
and
jg
popf
mov
enter
pop
jns
jbe
jno
mov
xchg
add
add
xchg
cmp
dec
or
mov
inc
test
test
pop
xchg
sub
cltd
xor
sub
pushf
pop
lea
lahf
push
lcallw
adcb
dec
sub
dec
aaa
lea
xor
fimuls
dec
ficompl
mov
aas
xchg
xor
insb
mov
dec
fdiv
xor
ud1
nop
scas
add
fisttpl
xor
jae
inc
jae
lret
mov
cli
dec
lcall
jl
and
lods
add
mov
fildl
xor
push
mov
ret
into
scas
mov
shlb
clc
popa
lea
xchg
aaa
mov
popa
icebp
je
insl
outsl
aam
xor
mov
add
xchg
dec
pusha
add
stos
adc
pop
popf
andb
push
loope
aad
adc
mov
cmc
arpl
movsl
negl
lahf
push
mov
rcrl
and
lods
stc
subl
orl
sub
pop
dec
mov
or
fdivrs
test
dec
sahf
pop
xor
mov
cs
push
mov
ljmp
or
inc
popf
jmp
loopne
cmp
sub
jnp
ss
fcmovb
in
add
addr16
aam
js
jmp
cwtl
mov
jecxz
out
mov
outsb
cltd
xlat
fsts
mov
icebp
pop
sub
push
push
dec
mov
lcall
shr
out
pop
ret
or
mov
adc
pop
dec
loope
sbb
jge
mov
dec
mov
pop
push
mov
ja
mov
repz
and
adc
mov
sub
fcomps
sub
inc
jno
pop
jno
insl
stos
test
mov
mov
gs
and
loopne
lret
int3
rol
sahf
inc
decl
ja
rorb
data16
mov
push
loop,pn
idivb
inc
out
jg
cmp
pop
js
sub
fisttpll
outsb
bound
stc
jmp
sub
mov
fidivs
data16
insl
sti
scas
dec
fs
and
stos
adc
leave
stos
sub
incb
mov
or
repz
adcb
pop
add
cmp
push
clc
andl
xor
sbbl
xor
adcl
sub
sub
xor
mov
mov
adc
mov
lea
sub
mov
mov
subl
mov
lea
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
or
mov
mov
lea
sub
mov
mov
mov
lea
or
mov
mov
xor
or
add
mov
lea
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
mov
lea
mov
mov
sbbl
xor
orl
add
jne
movl
jmp
xorl
mov
xor
xor
sbb
mov
xor
andl
xor
andl
sub
sub
xor
mov
movl
mov
mov
jmp
andl
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
subl
xor
not
sub
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
jmp
rclb
jecxz
je
push
mov
in
das
in
js
pop
js
int3
leave
sbb
lock
out
loope
lods
and
dec
cmc
or
fsubl
mov
into
fdivr
jmp
cmp
frstor
cmp
insb
dec
int
outsl
cmp
out
ret
mov
and
cs
stos
popf
pusha
xor
dec
dec
xchg
jbe
fldl
dec
paddusw
out
in
push
cmp
popa
mov
movsl
aas
mov
mov
rorb
dec
scas
mov
dec
inc
xchg
ret
xor
push
xchg
inc
pop
inc
popf
and
mov
out
adc
xor
lds
daa
test
rcrb
dec
pop
push
movsb
xor
jno
inc
hlt
sbbl
jmp
gs
loope
jmp
pushf
sub
or
mov
push
adc
int3
je
fisttpl
fiadds
sbb
sti
ds
mov
addb
insb
sbbb
or
mov
insl
out
and
popf
xchg
push
dec
xor
cmp
xchg
mov
outsb
es
out
jb
xchg
adc
inc
outsl
jne
jne
fadd
test
pop
mov
popa
push
cmp
push
adc
js
sbb
mov
test
inc
shll
push
test
and
cwtl
cmp
or
loopne
push
cwtl
dec
mov
cwtl
fistpll
sbb
cltd
or
pop
pop
outsl
jae
test
daa
mov
lods
cwtl
fdivrp
xchg
cmpsb
movsb
cmp
mov
fnstsw
mov
jge
dec
xor
dec
sub
mov
xor
lea
xchg
dec
mov
movsb
mov
test
ret
mov
repnz
push
dec
aas
cld
out
pop
imul
call
jge
xchg
out
scas
mov
clc
movsl
fwait
push
sbb
mov
addb
xchg
mov
sti
mov
fcoml
pop
mov
out
or
popf
cmc
ds
mov
std
or
dec
jp
js
dec
xchg
popf
jle
cmp
dec
push
or
or
sti
or
andl
in
pop
stos
jmp
test
adc
mov
cmp
pop
or
stos
lcall
xchg
cli
xchg
push
jle
jmp
push
mov
inc
int3
push
add
ret
sbb
je
mov
ret
ss
adc
adc
push
mov
cld
sbb
add
movsb
sbb
out
add
xchg
mov
push
cld
push
lret
stc
rolb
mov
adc
jg
sarb
xchg
leave
xor
ss
push
cli
mov
leave
mov
mov
mov
leave
adc
jno
pop
mov
jns
test
addr16
push
cmpsb
and
xchg
push
loop
fidivrl
fistps
sbb
pop
stos
or
jae
jg
xchg
cmp
push
dec
test
sarl
and
xor
fcoms
lods
stos
jge
ret
push
dec
mov
mov
shlb
pop
cmp
aaa
jl
sub
lea
dec
loope
xor
jae
adc
xchg
mov
out
xchg
adc
loopne
pop
leave
mov
cmp
test
mov
add
pusha
out
mov
faddl
sbb
push
fildll
cld
adc
push
push
dec
inc
cmp
push
movsb
adc
xchg
mov
pmaxub
je
ljmp
loopne
jmp
sub
stc
arpl
out
push
or
fidivrs
ss
rcrb
fs
pusha
popf
scas
data16
in
arpl
jb
push
jb
inc
call
inc
sbb
pop
and
add
pop
fstps
jo
adc
jne
push
out
lods
div
or
jmp
lods
dec
call
imul
jle
dec
cwtl
xchg
sub
test
inc
mov
aad
mov
lret
inc
out
inc
mov
push
in
inc
xchg
dec
call
add
hlt
mull
ja
fistpl
int
shr
add
in
sbb
lds
pop
shll
insl
jl
int
stos
xor
push
jg
icebp
push
mov
xchg
mov
insb
addl
inc
imul
fisttps
push
loope
sbb
mov
popa
sbb
or
push
popl
shr
pop
shr
adc
add
mov
push
in
out
pop
cs
add
test
mov
cld
xchg
sub
cmp
je
pop
es
out
aad
insl
ljmp
xlat
pop
jg
mov
cmp
add
cmp
and
jne
xchg
ss
in
cmp
outsl
into
xor
scas
loopne
push
and
jl
je
decb
into
mov
scas
icebp
or
das
lret
cmpsl
test
mov
push
inc
outsl
mov
pop
out
dec
popf
pop
push
cmp
shlb
mov
mov
jecxz
fs
roll
shr
ds
aam
icebp
in
add
jnp
fiadds
sub
mov
push
cmp
loope
mul
mov
hlt
imul
mov
es
rcrl
in
loop
lods
idivl
adc
inc
xor
je
xor
iret
add
pushf
xchg
cmp
invd
lock
jae
inc
xchg
inc
iret
add
cs
leave
imul
movsl
ljmp
stos
int3
inc
fcompl
subl
cmp
fcos
xor
cmp
pop
mov
scas
xor
stos
mov
out
push
stos
inc
iret
cmp
xor
add
xchg
lods
fstpt
movsl
out
lret
fwait
inc
shrb
pop
in
mov
push
mov
mov
data16
sbb
int
cmp
push
movsl
daa
xchg
into
idivb
das
jp
jnp
fdivl
xor
out
sbb
mov
add
sub
pop
pop
push
push
popa
push
mov
jns
mov
lahf
test
push
dec
fxch
scas
xchg
sahf
test
sbb
push
push
sbb
stc
pop
mov
clc
es
dec
mov
fistpll
hlt
xor
mov
dec
push
insl
cltd
leave
cwtl
or
lods
push
lcall
adc
popa
pop
jmp
or
ret
add
lock
jns
jmp
popf
xor
das
push
sub
mov
mov
mov
int3
inc
adc
inc
call
movsb
or
cmpsb
push
cmpsl
iret
int3
jb
pop
leave
cld
movsb
loope
pop
popf
mov
or
inc
cwtl
js
iret
pop
in
rolb
adc
pop
fadds
mov
cmc
popf
repz
xchg
fisttpll
mov
fildll
inc
jae
insl
imul
pop
or
xchg
fs
lret
loope
negb
loopne
sbb
push
mov
lea
out
cmpsl
sti
repnz
pop
jge
mov
adc
xor
push
js
fnstsw
int3
push
and
pop
or
stos
dec
sbb
or
aad
push
fmull
lcall
mulb
ds
fldcw
sbb
sub
movsl
cltd
invd
cmp
cmpsb
mov
inc
xchg
das
movsl
dec
or
mov
js
jl
jb
fdivrs
jae
mov
mov
mov
gs
mov
aaa
or
subb
pushf
push
movsb
adc
jecxz
mov
cmpsl
xchg
cltd
mov
lea
stc
inc
mov
xlat
repnz
jp
aam
ret
xchg
testl
icebp
in
or
cmp
pop
shl
lret
or
mov
pop
xor
jnp
fdivp
sbb
sbb
jle
mov
push
mov
popa
mov
testb
pop
pop
lods
in
sbbb
pop
lods
lock
je
jnp
fmuls
movsb
mov
je
push
popa
xchg
out
add
cmp
push
sbb
enter
int3
sub
push
out
repz
jmp
int
xchg
mov
out
out
adc
inc
mov
sub
inc
mov
test
and
loopne
jl
scas
inc
cmc
fstl
rcrl
mov
sub
sub
dec
movd
xor
add
xchg
hlt
out
mov
or
addr16
js
sbb
pop
cli
pop
pop
fcoms
bound
orb
push
sti
out
scas
lcall
dec
dec
mov
mov
mov
mov
lret
xor
mov
mov
fldl
sub
mov
js
mov
in
adc
aam
mov
xchg
jbe
test
or
arpl
mov
gs
cmpsl
insl
iret
sub
or
lock
pop
es
pop
sbb
sbb
stc
daa
pop
lds
ror
mov
adc
push
sarl
mov
sbb
adc
roll
popa
cmp
test
mov
mov
jbe
pop
and
jne
mov
push
inc
fstpl
iret
or
dec
das
jns
adc
push
sub
xor
aaa
imul
jmp
push
loop
add
pop
sub
xor
cmp
fnsave
dec
sub
enter
aam
and
mov
cmp
xchg
mov
cmp
jp
push
sub
xor
push
shrb
scas
sub
mov
and
pop
lahf
std
sub
sbb
and
call
out
sbb
je
insl
mov
shll
jecxz
cmp
std
rcr
dec
loopne
ds
xchg
insb
cld
jae
les
outsl
or
add
stos
loopne
scas
clc
pushf
or
test
movsb
decb
push
jl
dec
lcall
lahf
xchg
mov
popf
add
cmp
push
lcall
pop
loopne
mov
pop
clc
pop
xor
repz
and
fdivs
or
mov
xchg
or
mov
fnstcw
int3
mov
cmp
daa
xchg
push
and
enter
dec
outsb
lret
dec
notl
aaa
cmp
dec
scas
xchg
jae
sub
in
dec
lahf
xchg
add
sub
lret
ja
lods
jg
pop
sbb
add
pop
iret
lds
popa
ret
mov
cmc
iret
mov
inc
inc
call
in
sti
xorb
push
into
and
or
hlt
pop
sub
pop
or
jo
jns
sub
sbb
dec
xlat
pop
pop
sub
pop
add
or
cmc
fwait
aad
jmp
sub
pop
flds
or
sti
dec
dec
inc
lea
push
int
sub
inc
sub
sub
stos
xchg
sbb
imul
lock
inc
inc
mov
sahf
dec
mov
bound
cmc
mov
mov
pop
xchg
je
push
xchg
fisubl
into
repnz
cmpsb
sub
jmp
aaa
cmp
add
jmp
pop
mov
test
dec
popf
xlat
xchg
sub
inc
aas
add
and
gs
and
add
push
pop
dec
inc
imul
lret
mov
cmpl
shlb
mov
push
jne
ss
pop
lea
inc
xchg
test
roll
sti
xor
repz
fsts
ret
mov
sub
in
xor
inc
nop
mov
pusha
pop
test
pop
cli
cmpsl
or
inc
shll
sahf
out
into
jmp
pop
xchg
fildl
clc
test
jnp
xlat
mov
fsubrp
jno
ret
das
cmc
cmp
jb
pop
int
fnstenv
jnp
push
sti
iret
inc
dec
nop
repnz
push
push
sub
jb
mov
xchg
cmpsl
jo
jmp
in
hlt
mov
test
out
push
push
stos
or
imul
xor
out
xchg
mov
or
inc
iret
lret
nop
push
mov
std
mov
jb
mov
mov
xchg
mov
fiaddl
sbb
ja
cmc
mov
xor
or
pop
cmpsb
and
add
and
fxch
dec
ror
stos
add
or
push
arpl
frstor
add
xor
xchg
xchg
pop
bound
and
mov
pop
in
fsub
data16
daa
movsl
ret
sbb
or
sbb
rclb
sahf
pop
xchg
pop
ss
stos
cwtl
lahf
ljmp
lea
or
loopne
nop
adc
cmp
hlt
inc
lea
lods
mov
mov
shrb
mov
sub
lods
mov
call
mov
sbbb
lea
jge
daa
mov
pop
in
ljmp
pop
mov
popa
les
push
inc
in
insl
mov
xor
add
fidivl
dec
roll
xor
lea
lock
cmp
in
je
xlat
mov
mov
fs
push
insl
rorl
insl
pushf
aas
jle
xchg
pop
adcl
std
dec
jecxz
mov
xchg
push
mov
cmp
push
sub
pop
lcall
fmul
mov
pop
add
jno
mov
push
sbb
inc
jge
pushf
sbb
mov
inc
lea
xor
pushf
xchg
fsts
adc
sub
loopne
arpl
jl
mov
rcrb
jecxz
stc
je
stc
and
std
dec
loope
into
cmpsb
push
pop
jbe
adc
and
scas
push
xor
ja
inc
js
fisubs
push
mov
pop
push
out
js
mov
test
pop
and
push
push
pushf
mov
and
dec
inc
xchg
xor
inc
jae
sub
out
add
adc
notl
adc
inc
jae
and
xor
pop
sub
in
int
push
lock
or
lahf
ficomps
stos
mov
dec
mov
push
jnp
in
inc
cmp
push
adc
inc
cmpsl
mov
ficompl
movsl
and
ficoml
jno
call
lret
movsl
jno
aaa
sub
sub
popf
imul
xor
cmp
sti
xchg
aam
sar
dec
fwait
sbb
dec
lret
int3
pop
pop
aad
fwait
lds
and
adc
pop
addb
sbb
cmp
gs
pop
push
or
inc
ret
in
jmp
aam
jp
lret
popa
push
and
in
frstor
mov
std
pop
rol
mov
rcll
neg
xchg
dec
push
push
addl
push
adc
pop
xor
pop
push
bound
push
push
nop
loopne
and
mov
sbb
dec
movb
mov
out
inc
leave
mov
loope
fs
sbb
push
hlt
aas
cmp
cmpsl
enter
mov
inc
in
add
data16
mov
std
dec
push
mov
sub
cmpsl
inc
mov
lea
jle
pop
jmp
daa
mov
shl
xchg
cli
scas
hlt
cmp
insl
addr16
sub
or
sbb
mov
jnp
shr
add
popa
mov
mov
adc
adc
fsubr
add
xor
call
jnp
lahf
out
nop
mov
fidivl
add
pop
outsb
jne
ret
mov
xor
rcrl
pop
ret
sbb
pop
cmp
outsb
jp
xchg
mov
push
mov
xor
lea
out
lds
mov
stos
mov
cwtl
pop
mov
sbb
das
xchg
inc
or
aam
jne
jecxz
inc
adc
xor
jg
dec
addr16
xchg
adc
jp
icebp
mov
jl
and
ret
jmp
push
sub
mov
adc
push
orb
push
inc
adc
sub
out
fcomps
mov
fildl
movsb
fsubs
or
in
inc
xchg
data16
movsb
andb
dec
dec
mov
arpl
test
inc
xchg
mov
aam
mov
ljmp
rolb
and
insl
test
jg
or
pop
out
dec
outsl
cmp
popa
pop
fmulp
adc
adc
pop
cmc
push
xorb
mov
ds
and
arpl
pop
mov
adcb
add
jo
out
movsl
xor
push
mov
call
out
mov
scas
scas
push
fldt
xchg
sub
and
push
xchg
aas
xor
mov
push
aad
iret
mov
aad
orl
arpl
out
inc
stos
test
push
jb
or
jnp
cs
push
xchg
add
dec
sub
scas
fwait
jbe
pop
pop
notl
in
lock
cld
sub
mov
adc
addl
sbbl
lahf
xchg
cmp
inc
or
movsb
orl
push
xchg
leave
icebp
push
fdiv
pop
repz
in
fmulp
sahf
jmp
std
dec
mov
loopne
dec
in
test
mov
cld
mov
pop
mov
and
lods
test
test
negl
pop
aad
cmp
or
adc
data16
jno
xchg
push
cmpsl
inc
push
subb
std
jae
add
inc
push
sub
aad
mov
sbb
sti
xor
xor
cmpsl
cs
jmp
ljmp
mov
ss
inc
mov
packsswb
pop
and
popf
addr16
out
adc
mov
jno
dec
in
jae
repz
add
aad
cli
es
adc
fcmovbe
add
xor
sub
scas
icebp
jg
fistps
stc
pop
sbb
pop
push
ds
mov
aad
hlt
pop
pop
addb
or
ret
sbb
cmp
movsl
in
int3
add
jbe
ret
rclb
aad
lcall
cmp
jnp
test
push
daa
ficoms
mov
lock
mov
fcomip
test
sarb
mov
jns
inc
in
or
xchg
out
push
xlat
add
cmp
pusha
cmovb
mov
movsb
pusha
xor
out
hlt
sbbb
out
aad
sub
shrl
out
dec
lcall
cmpsl
pop
stos
push
mov
mov
aam
lods
pop
mov
aad
jecxz
mov
xrelease
and
outsb
lret
cmp
sub
jnp
icebp
stc
dec
cmp
inc
js
shll
ret
xchg
xchg
orl
lcall
push
push
add
test
orl
and
out
push
icebp
mov
clc
aam
cs
push
ss
add
jecxz
dec
lods
push
pop
mov
xor
sub
xor
fmul
pop
cltd
inc
cs
repz
push
xchg
sub
repnz
lock
cmp
call
mov
cmpsb
mov
ret
fists
dec
or
fwait
jbe
push
stos
or
icebp
dec
adcb
mov
cmpsb
rol
inc
pop
push
lahf
push
insb
pop
jb
sub
loop
cwtl
and
outsl
ret
inc
stos
or
inc
gs
pop
cmp
negl
stc
in
ss
inc
mov
sub
mov
or
pop
lods
xchg
xor
mov
push
xor
adc
inc
or
fsubr
jno
inc
inc
cmp
outsl
cmpsb
aad
jns
out
icebp
das
dec
or
xlat
jg
and
mov
dec
ss
or
mov
div
mov
clc
dec
xor
add
lea
addr16
xor
lods
mov
or
insb
test
dec
lret
lods
shll
stos
rclb
push
adcb
inc
xchg
adc
inc
xchg
inc
lret
addr16
add
pop
je
pop
mov
push
inc
ja
or
dec
cmp
repnz
push
popf
out
or
mov
xchg
fstp
shrb
js
mov
lea
inc
adc
loop
cs
xor
xchg
pop
sub
adc
outsl
push
std
mov
sbb
sub
push
xor
push
xor
cs
or
sub
cld
int
inc
aaa
pop
lods
data16
pop
pop
or
ror
sbb
popa
xor
mov
loopne
adc
out
ret
cmp
movb
xchg
sbb
cmp
jecxz
push
in
xchg
ret
inc
mov
pop
in
mov
sbb
inc
popf
jl
cmp
rep
jbe
xchg
sub
and
pushf
inc
and
aaa
das
je
in
mov
movsl
sbb
dec
mov
sub
jo
je
xchg
adc
scas
and
sbb
mov
cli
sbb
in
stos
jbe
popa
jmp
add
mov
pop
loop
rorb
not
or
ds
dec
push
cmp
inc
in
mov
sarl
dec
add
pop
mov
inc
faddp
aam
inc
push
lret
sbb
dec
xor
test
in
fdivl
pop
nop
lret
sahf
mov
imul
loopne
stos
sub
lods
push
sbb
sub
pop
and
pop
push
or
mov
jno
in
sbb
push
int
push
jnp
jnp
stos
lock
ror
out
roll
sbb
xor
mov
push
daa
jbe
jl
push
mov
in
stc
fadds
shr
xlat
fwait
movsl
rcr
sbb
jle
add
js
push
lds
inc
xor
push
push
adc
lods
sub
mov
dec
movsb
dec
bound
add
cmp
sub
pop
int
flds
es
call
fldt
add
sbb
mov
cmp
fidivrs
inc
loopne
arpl
enter
mov
cltd
xchg
inc
aaa
dec
or
out
xchg
add
ret
out
int3
sub
std
in
mov
pop
xor
div
xchg
xlat
mov
stos
fidivrl
jp
lahf
in
fs
mov
shl
inc
lds
add
or
out
sbb
adc
stc
and
lret
inc
mov
js
pop
sub
loope
pop
out
pop
mov
bound
leave
xor
xor
jbe
and
cmc
mov
fbld
in
add
shll
outsl
addr16
cmp
leave
fcomi
xchg
nop
adc
xchg
and
into
int3
inc
pop
mov
hlt
ret
scas
lods
test
sar
and
xor
or
jne
jo
and
dec
sbb
or
shrl
outsl
xchg
or
imul
push
xorl
push
push
push
xor
imul
xchg
cmpsl
rcll
fidivrl
cmc
aas
push
fisubrl
xchg
test
es
fwait
adc
aaa
mov
rcrl
fisttpll
add
pusha
adc
push
cmp
pop
lds
les
in
fldcw
xor
fbstp
int3
testb
faddl
push
mov
int
and
pop
leave
cmp
lds
jae
out
inc
jecxz
xor
cs
lret
or
movsb
mov
sub
xchg
gs
lahf
sbb
cmp
jle
adc
and
test
in
mov
xchg
mov
out
ja
repz
xchg
xor
adc
outsb
push
pop
in
lods
mov
mov
xlat
lods
adc
js
imul
jno
mov
scas
jle
adc
je
dec
fcmovnbe
xchg
sub
cmp
je
mov
ret
ja
inc
fisttpll
out
filds
hlt
clc
mov
repnz
add
jmp
enter
sub
pop
pop
sarb
daa
in
shll
sbb
mov
and
and
es
pop
push
test
ljmp
inc
sub
jp
and
jge
add
shlb
sbb
and
sbb
xorl
cs
xor
adc
jne
loope
and
stc
push
notl
repnz
std
loop
jns
adc
shrl
gs
and
ljmp
push
dec
push
imul
sti
jl
adcl
mov
stos
pop
inc
jle
pop
fcompl
insl
push
and
movsl
mov
adc
stos
out
in
mov
jnp
sub
test
pop
in
sahf
jb
icebp
xchg
inc
lods
rcl
mov
jb
dec
xchg
xor
les
leave
hlt
cmc
out
and
push
test
pop
mov
and
cwtl
fiaddl
std
cmc
xor
sub
inc
daa
fsts
imul
std
es
mov
jl
add
jecxz
sub
notb
data16
out
js
rcrb
ret
inc
xchg
adc
sub
mov
clc
or
xchg
mov
xor
mov
mov
mov
lods
xchg
lret
ret
leave
or
pop
fucomp
mov
cmp
xchg
data16
sbb
mov
or
mov
std
loope
mov
inc
out
fsub
iret
or
cmpsb
xchg
inc
dec
add
lods
sbb
add
lods
into
push
adc
and
jns
pop
std
test
cmpl
mov
clc
fnsave
ljmp
lahf
repz
xor
clc
mov
lcall
jg
xor
repnz
jbe
cmp
aas
pusha
cld
xchg
and
xor
inc
jmp
pop
sbb
ljmp
cwtl
lea
pushf
jp
repnz
lret
mov
xchg
mov
test
lock
aad
adc
jg
rclb
add
xor
adc
insb
cmp
ja
sbb
popf
popf
lahf
outsl
sub
pop
add
jo
jg
in
imul
test
mov
sub
inc
push
sbb
jno
pop
fdivrp
ficompl
xchg
in
dec
add
in
add
pminub
repz
push
std
sbb
push
ljmp
jmp
jmp
mov
ds
cld
mov
dec
or
inc
push
test
enter
popf
cmpsb
out
cs
or
mov
mov
call
out
rclb
loop
xor
dec
fidivs
pop
pop
vmovaps
ss
rcrb
mov
aad
mov
dec
fldl
pop
mov
stos
cld
call
mov
clc
dec
ja
sbb
dec
inc
jnp
arpl
inc
arpl
pop
subl
sbb
imul
fldt
and
mov
push
test
cmp
mov
lds
nop
push
in
jb
cmpsl
imul
popa
cmc
push
shlb
pop
pop
ret
pop
cltd
cmpsb
sub
cmpsl
stc
icebp
shl
addr16
mov
dec
mov
cmp
nop
mov
sub
loop
add
cmc
cmp
sub
sahf
xchg
mov
lock
insb
push
pop
or
jno
stos
inc
pop
dec
mov
fidivs
lret
or
cmpl
ss
arpl
sbb
dec
std
dec
jbe
dec
push
xchg
cmp
xor
mov
jp
sub
mov
outsb
std
add
push
mov
sti
push
push
les
push
les
add
arpl
aas
lds
popa
pushf
pop
fwait
in
out
cmp
adc
repz
adc
fnstcw
pop
dec
dec
mov
push
pop
cli
pop
in
lret
pop
mov
test
lods
jl
test
add
cmp
dec
xchg
je
cmp
or
pop
arpl
lcall
call
es
and
repz
push
movsl
or
sbb
push
mov
sub
or
mov
xlat
add
int3
out
out
xchg
push
stos
incb
mov
pop
mov
cmpsl
out
jle
leave
adc
cltd
stos
or
loop
mov
inc
sbb
test
push
sar
fs
xor
lahf
test
int
rcrb
jae
stos
rorb
cwtl
push
lods
push
mov
cmp
lahf
and
femms
jnp
sbb
ss
jbe
pop
stc
xor
and
pushw
mov
mov
fs
ds
js
fwait
rolb
pop
adc
cmp
or
lods
addr16
pop
or
mov
jle
dec
mov
jns
pusha
mov
aas
mov
and
out
fwait
add
movsl
cmp
nop
pop
mov
fcomps
or
sub
jmp
arpl
mov
push
int
xor
aaa
jbe
xor
xchg
mov
sub
xchg
repnz
inc
cli
stc
stos
repnz
mov
pop
jmp
sbb
fiaddl
test
adc
fdivrs
pmaxsw
dec
cli
cmp
lods
push
loop
dec
push
in
fwait
dec
stc
mov
pusha
fadds
xchg
sbb
movsb
test
or
adc
testb
dec
or
mov
jmp
mov
fnsave
xchg
test
ret
lea
in
jle
add
out
or
pop
cmp
fxch
shlb
outsb
lea
lods
fcmovbe
dec
add
out
xchg
cli
lcall
xchg
test
adc
loopne
lods
add
aas
adc
test
mov
cmp
sarb
mov
pop
xchg
dec
adc
mov
clc
jo
lea
repnz
xchg
test
lahf
sarb
inc
fisubs
jae
sub
mov
add
cld
mov
cmp
mov
cmp
mov
dec
mov
les
xchg
fs
incl
call
cmc
and
out
sub
ss
pop
call
outsl
out
hlt
addr16
mov
mov
xlat
lret
xor
mov
cmp
adc
repnz
sbb
movups
sbb
xchg
cmpsl
dec
pop
and
ljmp
or
inc
fldt
jb
and
rorb
ret
bound
divl
fiaddl
xchg
sbb
sar
outsb
pop
lret
lock
pop
mov
inc
fs
push
aad
pop
push
clc
mov
jbe
and
js
pushf
sahf
mov
pop
jb
or
xor
testb
pop
mov
negl
das
sbb
and
push
decb
out
dec
xchg
lret
inc
xchg
lock
fistps
std
loop
ror
clc
in
adc
in
mov
add
xchg
pop
sbb
repnz
aam
aam
in
mov
pop
add
aad
pop
imul
mov
mov
adc
cmp
inc
xchg
add
fcos
mov
out
lock
push
xchg
int
outsb
push
push
sub
jp
sub
out
idiv
mov
xchg
mov
xchg
add
lret
scas
xor
sbb
adc
sub
outsl
inc
lcall
aas
adc
stos
data16
imul
insl
je
dec
push
and
pop
mov
add
in
pop
enter
cwtl
cmp
mov
push
add
xchg
movsb
mov
jp
inc
pop
in
lret
adc
xor
ret
and
lahf
sbb
clc
add
ds
ret
cmpsl
imul
loopne
xor
pop
fisubrl
xorl
mov
aad
jg
dec
jnp
pop
mov
and
xlat
sahf
pushl
xchg
or
mov
popf
add
imul
push
mov
test
lret
fcomps
jle
mov
sahf
jnp
push
mov
mov
iret
and
addr16
jl
div
push
pop
add
loope
add
insl
and
jb
test
xlat
cmc
jae
data16
insl
sbb
dec
and
divb
sbb
addr16
mov
pop
cmp
aad
xchg
jbe
cmp
push
cmp
loope
cmp
pop
pop
xchg
inc
lret
popa
inc
in
xchg
ret
push
xor
mov
sub
dec
sub
push
pop
mov
and
xor
mov
into
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jmp
pop
sbb
ja
lret
push
outsb
pop
imul
pop
js
mov
add
pop
std
push
ljmp
jle
fdivl
cli
gs
sbb
pmuludq
add
xchg
test
lahf
pop
ret
std
push
or
das
in
or
cmpsb
test
xchg
mov
push
sub
and
outsb
scas
in
adc
push
mov
decl
rcrb
scas
xor
roll
xchg
mov
aas
insb
rolb
mov
aaa
inc
scas
fwait
stos
ror
stos
and
xchg
insl
mov
shlb
aas
inc
fisubl
jp
inc
out
jg
mov
fisubrs
jmp
and
arpl
sbb
sbb
and
dec
mov
lea
jnp
mov
inc
call
cmp
mov
std
add
test
xor
fs
out
in
xor
sahf
and
out
mov
leave
mov
in
mov
outsl
xchg
cmp
jg
dec
xchg
jae
arpl
ds
jne
dec
add
sti
lds
add
std
pop
inc
lret
cmpb
push
test
cmp
pop
mov
mov
repnz
cmp
xchg
cmp
or
and
insl
in
xchg
lock
push
and
pop
in
add
pop
adc
inc
mov
and
push
xchg
pop
mov
test
or
cwtl
sbb
mov
sahf
cs
mov
js
adc
add
scas
inc
addr16
cmc
lds
pop
pop
sub
scas
mov
push
ret
add
add
lods
aaa
xor
add
push
inc
pop
cmpsb
cmpsb
mov
repz
xor
push
ret
or
pop
add
lcall
roll
add
inc
cwtl
idivb
arpl
xor
cld
repnz
adc
dec
push
xchg
jae
movsl
and
andb
out
add
clc
dec
sti
cld
movsl
cmpsl
loopne
bound
cmp
pop
iret
cwtl
sbb
ret
push
aaa
push
fadd
cmpsb
sbb
sbb
push
outsb
jne
cmc
outsb
jns
fstpt
hlt
popa
ja
xchg
sbb
sbb
pop
pusha
push
mov
push
arpl
jecxz
sahf
add
int
xlat
push
call
mov
inc
jno
xor
fimuls
fsts
ljmp
fcomi
ljmp
mov
addr16
push
jle
push
ja
mov
jl
xchg
std
scas
sub
jl
jle
adcl
add
mov
adc
lret
xchg
bound
inc
aaa
mov
pop
sar
push
ss
and
cmp
mov
push
int3
stc
imul
subl
test
data16
imul
cmp
lret
mov
pushf
inc
jg
pop
cmpsl
jb
fsts
jl
adc
cmp
sbb
jp
imul
idivb
repnz
dec
inc
cmp
leave
push
mov
sub
or
stos
lret
pop
mov
rcll
das
pop
push
or
je
arpl
sarl
jo
test
mov
sub
insb
jne
jae
shll
jae
mov
adc
mov
rcl
insb
and
push
mov
std
lcall
decl
je
add
or
aas
sahf
sub
or
xchg
mov
dec
or
sbb
inc
sub
lock
das
xchg
jne
xor
sub
cmpsb
loope
ss
push
ja
push
dec
sbb
dec
fcoml
and
add
mov
lcall
push
mov
push
in
test
pop
scas
push
sti
add
and
xchg
and
andl
lea
jne
jbe
daa
mov
cmp
cmp
repz
inc
mov
xlat
sub
ja
fnstcw
aas
push
mov
jmp
xchg
mov
dec
test
inc
cmp
and
push
enter
cmp
xchg
cmp
outsl
dec
gs
icebp
sbb
ljmp
xor
je
rcrb
xor
fldt
arpl
cmp
aam
sub
mov
jae
cld
gs
test
vunpckhps
sub
xchg
push
or
sarb
inc
jmp
clc
cmpsl
adc
add
dec
jno
mov
or
adc
push
push
scas
ljmp
scas
inc
hlt
pop
adc
xor
icebp
mov
mov
jp
lahf
sub
lock
jbe
inc
adc
rcrb
add
xor
movsb
mov
adc
loope
and
or
out
int
lret
xchg
fnstcw
pop
add
dec
dec
call
adc
fldz
shll
les
nop
stos
out
aad
nop
pusha
dec
adc
sub
push
push
add
lods
shlb
dec
mov
mov
fists
sub
push
movsl
popa
push
add
ljmp
cli
mov
sbb
pushf
hlt
mov
js
js
sub
shll
push
sti
shlb
jp
dec
push
pop
test
inc
adc
inc
in
push
test
push
sub
popf
mov
sub
test
fwait
jns
cmp
sub
jle
xchg
add
dec
mov
push
add
shrl
jg
push
fistpll
les
enter
xchg
loopne
rorl
adc
add
test
mov
sub
pop
andl
mov
lods
xchg
ret
pop
xchg
xor
popa
stos
inc
cmc
stos
fcoms
push
mov
xor
push
and
mov
push
cmp
xor
mov
xchg
add
pop
adc
leave
cmp
stos
movsb
dec
mov
mov
dec
mov
jae
xchg
lcall
inc
insb
lock
shrb
dec
loopne
gs
push
ljmp
mov
jns
into
push
cltd
stos
pop
sub
and
dec
push
cwtl
mov
lahf
cwtl
cltd
rol
cmc
cmp
fildl
push
mov
push
jp
inc
or
sub
jb
or
data16
dec
mov
mov
lcall
sarl
push
pop
mov
test
testb
inc
mov
negl
dec
iretw
in
jmp
movsl
inc
xchg
mov
add
pop
sahf
cmp
out
loopne
in
pushf
mov
mov
lret
cli
ss
mov
push
push
std
daa
push
pop
dec
cmp
push
or
orb
push
xor
int3
sbb
jns
loopne
and
ret
out
cmp
arpl
adc
inc
dec
lahf
aas
sbb
mov
sub
ret
imulb
cmp
ds
cmp
in
stc
or
or
mov
jle
mov
or
inc
dec
dec
pop
test
dec
fdivs
mov
mov
lock
lret
neg
mov
xchg
push
inc
xchg
dec
stos
in
cmp
lds
mov
dec
mov
or
jno
jg
ficoms
stos
sti
test
mov
adc
add
xchg
jns
dec
out
mov
mov
mov
insb
adc
sbb
mov
or
divb
mov
dec
push
jno
inc
cltd
mov
inc
mov
insl
sub
jle
push
jb
xlat
out
mov
add
add
cmp
lock
xor
faddl
xorl
js
lret
lods
bound
mov
out
add
dec
xchg
dec
sbb
mov
scas
sbbb
mov
xchg
adc
lods
add
mov
rcrl
pop
xlat
jle
jne
addr16
les
fsubrl
inc
and
xor
cmp
mov
mov
sbb
mov
ss
sbb
bound
fstl
inc
adc
cmp
or
test
aam
aaa
outsl
aam
push
ficoms
out
pop
rcrb
vpmullw
mov
outsl
mov
test
enter
push
xchg
fdivrp
imul
fisubrs
push
arpl
mov
mov
orl
in
xor
pop
popa
dec
jmp
jmp
std
lods
mov
les
inc
ret
nop
aas
std
add
shll
dec
xlat
out
nop
xor
add
or
enter
cld
push
nop
psrlq
lret
icebp
sbb
jp
push
adc
push
ret
fiaddl
dec
pop
jo
pop
sbb
jno
jl
pop
testl
mov
into
jnp
sbb
adc
repz
push
or
mov
mov
ret
outsl
dec
push
cmp
sub
xor
fnstsw
scas
adc
pushf
mov
test
or
aaa
mov
cmp
lcall
or
shl
xchg
cmp
fildll
lock
cmp
add
or
mov
int3
xor
pop
add
push
jecxz
mov
jl
adc
hlt
lock
adc
ds
adc
mov
out
xchg
gs
loop
mov
sahf
dec
ljmp
and
xor
sub
mov
xor
add
notl
xchg
std
mov
iret
clc
or
out
push
mov
stc
or
sbb
loop
hlt
out
adc
sbb
push
push
and
jo
rorb
cld
int
ret
idivb
roll
ficompl
add
inc
into
daa
jo
aaa
dec
insl
cmp
shll
sbb
xlat
xchg
or
cli
fldt
inc
enter
jae
roll
adc
mov
movsl
dec
jl
icebp
inc
push
test
pop
dec
pop
push
out
cltd
scas
jae
pop
cwtl
sub
inc
cmp
addr16
add
iret
adc
cld
insl
and
sti
mov
pop
adc
inc
enter
sub
and
cmp
hlt
cld
sbb
adc
or
xchg
out
data16
sub
cwtl
sub
xchg
mov
or
adc
mov
xchg
dec
dec
sbb
sbb
in
jl
mov
imul
mov
xchg
aaa
adc
lret
lea
dec
mov
fwait
stos
shrl
sbb
out
sti
dec
lret
out
arpl
js
shl
xchg
scas
mov
ret
fmuls
mov
dec
mov
hlt
out
ljmp
movsl
daa
popa
arpl
and
dec
sbb
xor
pop
daa
jns
in
pop
jmp
cmp
in
lock
jp
ss
jne
test
fs
sahf
mov
and
pusha
mov
xchg
sti
test
inc
lea
push
insl
repz
aad
add
pusha
pushf
cmp
iret
mov
inc
or
cmp
lcall
scas
pop
stc
dec
test
and
test
cli
jnp
mov
mov
xor
mov
sti
insb
icebp
fidivs
shll
dec
push
mov
add
shll
sub
xchg
pop
mov
icebp
xchg
add
sar
decl
sub
lods
sbb
jge
outsb
sbb
add
mov
sub
mov
mov
daa
enter
sbb
or
es
jbe
push
clc
cwtl
sarb
add
mov
jnp
mov
pop
fwait
xlat
fadds
xchg
imul
mov
jle
xchg
xchg
out
adc
cmpl
xchg
test
xorb
imul
addl
and
loop
lahf
sbb
lret
and
mov
out
adc
stc
inc
gs
in
mov
pop
and
push
add
jge
stc
jb
dec
xor
loopne
cmpsb
mov
push
adc
sbb
mov
pop
push
add
fdivl
lret
adc
dec
inc
scas
pop
insb
cs
fcmovnb
inc
cmp
inc
cmpsl
std
mov
outsb
subl
and
loopne
push
cs
hlt
fsub
add
cmpsl
enter
aas
mov
test
dec
xchg
lcall
fst
dec
push
and
pushl
adc
push
lret
aas
pop
aam
in
xor
pusha
imul
jp
arpl
data16
pop
daa
inc
out
sarb
pop
stos
xchg
add
dec
or
inc
dec
int
xchg
fstpt
call
lock
pop
adc
xchg
loope
ss
pushf
hlt
js
std
imul
mov
and
bound
or
outsl
mov
xchg
or
mov
shll
pop
out
dec
sub
cmpsb
pop
mov
add
push
jnp
ret
mov
das
cmp
mov
in
mov
pop
or
lea
ret
pop
cmp
fidivrs
add
push
or
sub
incl
jmp
and
xchg
test
clc
mov
push
mov
out
mov
or
push
mov
popf
adc
or
sub
psrld
mov
pop
xchg
lock
sbb
jnp
and
pusha
cmp
not
and
add
lock
jae
aam
push
inc
rcr
pusha
and
dec
pop
ljmp
mov
jnp
out
sub
loop
fcompl
sbb
cmp
jne
push
scas
mov
out
in
mov
fwait
jmp
mov
add
inc
sub
push
xchg
mov
ljmp
je
mov
test
fs
out
sbbw
int3
cmp
mov
cld
or
notl
sbb
inc
jnp
inc
mov
jecxz
pop
mov
into
dec
in
inc
inc
push
pushl
das
scas
xor
lds
orb
add
cmp
push
mov
dec
sbb
sbb
and
stc
dec
call
les
push
inc
ds
mov
mov
jne
inc
cmpsl
fwait
adc
insb
imulb
test
jmp
lcall
ret
sub
ret
xchg
xlat
cwtl
out
fwait
aaa
pop
outsb
fidivrl
mov
mov
mov
push
xchg
movsb
xchg
lds
std
lahf
xor
mov
out
jp
ja
mov
dec
cwtl
popa
addr16
lcall
adc
cltd
test
int
icebp
jle
enter
icebp
das
shll
cmc
call
and
mov
rorb
rol
daa
call
out
stos
fildll
pop
popf
rolb
iret
imul
adc
mov
jbe
loope
pop
mov
testb
fldlg2
mov
stc
repnz
shl
cmp
loope
iret
mov
js
icebp
movsl
mov
shlb
aam
cmpsl
das
shrl
fisubs
in
flds
je
push
inc
pop
ret
pop
pop
inc
loopne
xchg
arpl
aas
or
ja
xor
mov
ret
nop
jl
jo
loope
andl
adc
push
mov
aas
or
popf
sub
repz
loop
push
adc
lods
out
pop
jl
into
test
adc
aad
mov
or
rclb
mov
ja
mov
int
jo
adc
ds
push
add
inc
pop
pop
mov
imul
sub
add
pop
and
out
test
stc
jb
dec
or
add
push
push
mov
or
sar
in
jl
lret
mov
sbb
imul
jmp
movsl
sar
add
fwait
dec
mov
lcall
into
insl
dec
sbb
mov
pop
mov
jo
add
cmp
sar
or
je
outsb
add
inc
pop
adc
in
adc
add
cmp
cs
xlat
cmp
imul
push
lods
shll
xchg
int
sahf
scas
sub
pop
loop,pt
movsl
shll
jbe
aad
dec
or
mov
pushf
add
das
dec
jb
push
lret
sbb
cli
jp
out
add
push
sub
xor
scas
scas
cmpsb
xchg
push
call
pop
xlat
insl
push
inc
adc
adc
jo
fsub
adc
pop
aad
imul
xchg
ret
test
or
xor
xchg
inc
repz
shll
mov
pop
into
cmc
out
lahf
addr16
sbb
pop
loop
and
push
adc
mulb
mov
loope
leave
adc
stos
jle
push
jae
dec
inc
sub
cli
dec
fcoml
fwait
pop
and
ss
fstpt
js
call
cmp
sub
repz
jmp
out
pop
pop
cs
fs
and
in
negl
pop
sub
and
xor
inc
sub
fisubs
cwtl
xchg
lcall
ds
cmpsl
sbb
sub
jno
mov
loope
lds
out
push
adc
into
aam
in
loop
fldenv
mov
add
adc
mov
push
mov
mov
sbb
subb
sbb
iret
push
xchg
stos
lcall
jb
adc
sbb
pop
add
cmp
inc
sub
std
int3
stc
adc
adc
clc
aam
fidivs
xor
or
ret
mov
inc
xchg
fs
and
add
pop
lds
xlat
adc
jno
es
push
and
push
out
mov
push
adc
mov
adc
sbb
aam
scas
cmp
pop
dec
jae
loopne
or
in
jb
cmpsl
xchg
popf
in
sub
in
xorl
in
add
adc
out
mov
jl
sbb
pop
sbb
ja
pop
mov
xchg
dec
jb
pop
mov
popa
mull
loope
sarb
sahf
jge
rorl
jne
test
xchg
jecxz
int3
or
inc
insb
dec
pop
ficoml
add
stos
adc
fadds
ljmp
rol
call
ljmp
popa
fwait
in
fists
sub
xchg
in
iret
xchg
daa
dec
sub
or
jle
into
dec
imul
xchg
fwait
insb
gs
aam
sbb
cwtl
fs
mov
jne
and
pusha
inc
repz
or
pop
leave
push
aaa
scas
imul
in
aas
cmpl
fdivl
loop
xchg
xor
das
jb
fnstsw
lods
fstps
xor
push
aam
inc
test
push
inc
inc
xchg
jbe
dec
stos
rcll
cltd
sub
or
inc
call
add
xor
out
sub
jp
icebp
pop
pop
aaa
shll
in
push
mov
js
fdiv
sti
push
and
inc
sbb
fidivrl
mov
divl
lock
cmc
loopne
push
imul
jnp
mov
jp
mov
loop
add
mov
or
or
xchg
xor
push
stos
inc
imul
jne
int3
and
hlt
cli
les
ret
jo
push
inc
les
push
pop
xor
push
pusha
xor
repnz
and
inc
cmc
push
mov
dec
xor
fsubl
and
ds
aad
jbe
popf
adc
and
imul
push
lahf
call
xchg
push
jb
sbb
and
lock
cltd
femms
sub
shrl
mov
xchg
movsb
mov
mov
fsubrl
inc
fisttps
ret
xor
hlt
mov
and
bound
ficoml
subb
and
sbb
fnsave
jbe
fisubrl
adc
repnz
fisubs
repnz
es
jne
loope
jnp
faddl
das
jg
push
lds
cltd
dec
cltd
ja
cld
imull
ret
cmp
add
fimuls
bound
cmpsl
testb
idivl
mov
jo
aaa
popf
push
adc
aam
ljmp
adc
dec
dec
sti
sti
int3
scas
mov
sub
dec
cltd
jnp
mov
fucomp
dec
or
stc
out
movsl
xor
mov
jae
mov
mov
inc
or
jge
dec
div
xchg
data16
or
mov
xchg
inc
cmp
sub
cmp
int3
inc
gs
test
lock
popa
cmp
pop
ret
push
and
iret
sbb
xchg
shlb
out
in
push
sbb
xchg
inc
es
cmpsl
push
xor
and
cwtl
and
add
je
insb
adc
jge
shl
push
pop
fs
fidivl
and
mov
xor
mov
es
adcb
jnp
adc
pusha
insl
jp
test
out
lods
adc
inc
inc
icebp
aad
shll
sbb
test
arpl
xlat
stos
inc
and
xchg
scas
jl
push
inc
mov
mov
and
shl
lret
insl
fndisi(8087
bound
data16
mov
call
adc
fs
dec
xchg
jbe
shl
es
dec
mov
aaa
adc
jmp
push
in
in
lret
lock
jae
sbb
and
sbb
pop
test
push
cwtl
loopne
mov
mov
xor
and
rcll
mov
xor
popf
pop
testb
sbb
mov
test
das
adc
int3
ret
nop
adcl
mov
nop
adc
and
inc
push
gs
lcall
pop
pop
push
cld
mov
ret
push
cwtl
shl
lods
ds
ljmp
cld
cli
arpl
push
sbb
jns
loop
and
int
inc
loope
cli
mov
mov
pop
movb
testl
out
inc
and
lret
dec
fs
insl
jno
fidivrl
hlt
rorb
mov
adcl
xchg
aad
movsl
push
xor
inc
adc
in
mov
mov
push
pop
jmp
lods
jp
cmp
xor
xor
aad
pop
push
ret
nop
ss
es
inc
mov
fnstsw
lea
jnp
in
imul
adc
inc
fstps
add
xlat
insb
jge
dec
mov
jbe
cli
jmp
mov
mov
mov
hlt
dec
pop
jb
jge
shrl
mov
ss
lds
sub
adc
fsubs
fs
jge
adc
mov
mov
aad
adc
pop
fldt
mov
sub
negl
aam
ljmp
dec
jg
sar
pop
sbb
repz
or
sub
mov
dec
ja
cltd
adc
insl
roll
jl
out
ret
stos
cwtl
push
sbb
mov
jae
aaa
insl
sub
fs
sbb
jp
adc
pop
sub
xchg
das
pop
fwait
jp
mov
jb
mov
push
jne
popa
outsb
add
inc
add
sbb
or
cmpsl
nop
mov
lahf
mov
ss
shrb
cmp
test
jmp
inc
jnp
xor
xor
fisttps
sub
adc
fisttpl
pop
sub
push
movsl
cmc
dec
mov
shlb
fwait
push
xchg
int3
pusha
aas
xor
add
xor
mov
adc
jecxz
fists
inc
jae
xor
scas
orb
adc
push
sub
addr16
stc
jne
imul
jmp
cmpl
jge
sahf
fsts
jne
mov
clc
mov
mov
xor
sarl
add
ja
loop
loope
jle
mov
cld
dec
cli
loope
push
aad
imul
addr16
incl
sub
pop
in
fwait
mov
or
int3
cmp
out
mov
mov
mov
aas
ret
add
aas
enter
xchg
jbe
sub
cmpl
mov
ror
add
add
test
fsubr
adc
adc
jle
rorb
mov
jae
cs
aaa
dec
loopne
sbb
cmp
and
pop
bound
loope
dec
subl
xchg
push
stos
in
xchg
lretw
sub
mov
mov
dec
test
sti
sub
pop
mov
lds
xchg
cmp
es
pusha
xchg
aas
mov
test
dec
xor
pop
ret
loope
ja
addb
jg
or
add
sbb
stc
mov
mov
test
mov
loope
xchg
sbb
adc
jmp
cmpsb
mov
or
sbbb
lods
fimull
pop
cs
arpl
data16
jne
fists
xchg
sub
int3
shlb
xor
add
inc
pop
dec
mov
and
xor
out
das
mov
int
xchg
sbb
jnp
jne
jp
cmp
inc
rcll
push
dec
test
inc
test
and
fs
pop
stos
dec
mov
int3
jle
jae
cmpsl
sub
popa
fmulp
adc
sub
push
jb
or
in
insl
jbe
sarl
loop
adc
ucomiss
in
fs
mov
loope
stos
pop
inc
cmp
or
mov
push
es
mov
inc
dec
loope
arpl
pop
fsts
movsb
loopne
jmp
sbb
or
dec
fsubs
xor
sbb
dec
insb
mov
adc
mov
int
mov
mov
add
cmp
jae
dec
adc
and
lret
push
int
or
adcb
mov
cmp
pop
dec
movsl
jae
outsb
loope
and
fwait
dec
outsl
popf
cmpb
test
sti
mov
shlb
jbe
fcompl
pop
je
clc
sbb
xchg
xor
lods
jb
mov
xchg
shr
pop
aaa
xor
dec
fucompp
lock
stc
adc
mov
in
xchg
test
cld
adcl
or
stc
push
add
shrd
dec
dec
jp
xchg
push
pop
out
fcoms
sti
imul
and
repz
fsub
out
dec
mov
mov
lods
inc
pop
pop
mov
gs
dec
adc
nop
xchg
repnz
cwtl
adc
sbb
mov
adc
xlat
shl
sub
cld
dec
mov
mov
mov
inc
outsb
fcoms
fcmovnb
idiv
aas
das
out
sub
mov
mov
insl
stos
enter
insl
jp
pop
rcrb
repnz
adc
pop
mov
js
andl
add
arpl
jmp
ds
jmp
jge
push
outsl
add
pop
mov
push
les
xor
inc
push
pop
mov
outsb
fldcw
outsl
mov
stos
lods
or
mov
mov
mov
cmp
jge
scas
add
adc
enter
loopne
test
fsubr
clc
and
xchg
jecxz
imull
loopne
add
jmp
test
inc
movsl
rcll
adc
cmpsl
cmp
mov
leave
cwtl
sti
jl
push
inc
sbb
cmp
sbb
pop
mov
inc
push
je
lcall
dec
stos
adc
fdivl
sahf
add
rcll
jmp
pop
pushf
sub
int3
movsl
or
repnz
cltd
test
jecxz
jno
inc
fs
pop
hlt
test
inc
loopne
imul
dec
pop
push
jg
lahf
push
xchg
aad
jg
clc
sub
ret
pop
iret
xchg
mov
ljmp
inc
sarl
sarl
fimull
mov
popa
sbb
mov
popa
and
popa
mov
mov
jl
and
jle
push
iret
aas
xchg
push
dec
std
insb
stos
dec
lret
test
fmuls
inc
mov
add
hlt
sbb
shrb
aam
pop
in
add
inc
mov
jne
push
sti
xor
stos
sbb
outsb
mov
pusha
idivl
mov
cmpl
ret
mov
lahf
inc
add
gs
in
cs
shrl
icebp
lcall
jnp
icebp
xor
pop
sub
jl
in
fidivs
push
loopne
add
lret
lea
enter
ss
daa
push
clc
sahf
in
pop
scas
xor
inc
mov
pusha
mov
iret
push
nop
sahf
test
mov
loope
js
cltd
pop
xor
sbb
pop
je
xchg
in
sbb
pop
and
xchg
push
inc
sbb
pop
dec
cs
mov
adc
xor
xor
pusha
xchg
or
and
mov
dec
sarb
sbb
ret
std
adc
dec
enter
imul
jne
xor
mov
mov
jmp
test
arpl
or
jbe
xchg
scas
cli
fsubr
xchg
cmp
icebp
data16
inc
adc
pop
scas
subl
jne
imul
fwait
cmc
mov
pop
lods
push
std
inc
push
faddp
xor
popa
shrb
sbb
mul
clc
sub
xchg
loop
xor
mov
cltd
inc
test
ja
mov
sbb
shr
pop
push
sbb
leavew
call
xchg
mov
bound
insb
in
sbb
nop
mov
or
mulb
or
rcrl
fwait
push
push
dec
lahf
cmc
push
les
btr
mov
scas
pop
data16
xchg
inc
movsl
sarb
inc
sub
mov
inc
mov
lcall
in
sub
lock
mov
jne
inc
push
scas
xchg
clc
adc
fistpll
jle
jbe
mov
mov
jg
sub
jp
icebp
xor
sub
inc
cmc
rcr
aam
or
daa
cmp
mov
sbb
scas
mov
mov
cmpsb
rorl
sbb
adc
mov
lods
push
push
jae
sahf
cmp
dec
pop
add
xchg
push
mov
bound
test
ds
jae
add
shl
mov
adc
inc
and
mov
add
dec
push
sub
inc
aad
insl
imul
bound
mov
sbb
les
sbb
lea
pusha
inc
es
add
repnz
xchg
add
mov
inc
xchg
push
xlat
pop
insl
icebp
sbb
sbb
out
xor
adc
shl
test
lret
xor
stos
push
bound
out
lret
xor
push
pop
outsl
out
fisubl
add
sbb
push
jno
mov
add
sbb
inc
or
arpl
jb
add
xor
pop
inc
loope
or
arpl
filds
cltd
or
push
sub
aam
xchg
jge
jmp
dec
sbb
inc
inc
repnz
addr16
add
mov
xlat
cltd
xor
mulb
lock
mov
mov
fldenv
popf
push
hlt
in
push
mov
lods
cmp
sbb
outsb
mov
ret
sub
pushf
pop
and
xor
cld
cwtl
jno
popa
outsl
ret
pop
cmp
lret
dec
orl
scas
in
mov
fbld
imul
sub
inc
mov
movsb
jle
inc
fs
cmp
sub
ret
mov
inc
rolb
ss
imul
enter
popa
cmp
int3
aas
movsb
ss
jl
adc
dec
xchg
cmp
das
sub
cmp
push
dec
lods
outsl
push
adc
sub
mov
sbb
outsb
add
dec
xor
out
xor
jo
mov
or
and
sub
mov
imulb
dec
cmc
xorl
mov
pusha
ljmp
repnz
push
cmpl
dec
into
fwait
mov
mov
cmpps
add
decl
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
adc
into
dec
add
add
add
add
cmp
and
add
adc
add
add
add
adc
into
dec
add
add
inc
and
add
add
add
add
add
add
add
and
add
add
inc
and
add
sub
add
add
add
inc
jns
popa
insl
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
nop
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
inc
push
inc
add
ret
dec
nop
cmp
lock
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
mov
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movb
mov
movw
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
in
sub
and
clc
add
add
or
out
testl
inc
push
pop
mov
daa
aad
sbbb
pop
fnstcw
js
imul
pop
cmpsb
call
push
sub
test
jle
jge
mov
push
xor
repz
and
mov
mov
adc
arpl
pop
test
and
addr16
lds
push
and
sub
repz
std
dec
in
cmpsb
xchg
xor
mov
cs
in
push
pop
stos
adc
hlt
shrb
imull
aam
or
xchg
stos
divb
mov
xchg
dec
pop
inc
xor
and
test
pop
mov
iret
adc
imul
jno
arpl
popf
push
repnz
jle
ds
lea
ds
int
jo
cld
xchg
inc
test
adcl
pop
loopne
mov
xor
sub
push
inc
inc
icebp
fbstp
imulb
sbb
fdivr
in
in
push
push
xchg
cwtl
popf
out
pushl
push
enter
cmpsl
xor
outsb
stc
xchg
out
cld
mov
lahf
and
adcb
adc
mov
or
pop
lods
rorl
addr16
add
pop
lret
rorl
xchg
pushf
sbb
xor
mov
pop
js
cmp
mov
lea
addr16
sub
sbb
mov
mov
idivb
in
fwait
pop
dec
sbbb
inc
push
dec
sub
or
sub
jmp
sbb
outsl
jne
xlat
cmc
lret
daa
rorl
xor
xorb
mov
dec
jb
xchg
mov
test
mov
repz
mov
adc
push
adc
std
xor
lret
jl
stos
pop
lahf
xchg
lds
xchg
mov
jg
daa
cwtl
xor
inc
pusha
ja
ret
out
cmpsb
repz
aad
jae
leave
jp
mov
ss
mov
mov
inc
stc
cmpsb
add
jo
pop
push
jno
sub
lods
mov
clc
jno
cs
daa
push
inc
pop
mov
xor
sahf
sarb
mov
jnp
jp
add
mov
push
or
repz
mov
jle
out
mov
push
inc
mov
inc
test
pop
jne
mov
jp
mov
aaa
in
lcall
xchg
cli
or
add
pop
loope
pop
adc
mov
fistl
iret
cmp
sub
push
cli
jo
lahf
pop
stc
jmp
dec
cmovnp
adc
rcr
push
jbe
pushf
dec
inc
inc
inc
mov
pop
xorb
lea
lahf
sbbl
fwait
mov
ret
pop
ret
cmp
subb
ljmp
sarl
add
cmpsl
inc
jp
test
xchg
mov
lret
sub
or
pop
xorb
call
lds
inc
icebp
or
pop
scas
sbb
popa
xchg
sbb
inc
mov
test
lods
xchg
add
arpl
xor
xlat
repnz
xor
pop
push
fisttps
ja
push
jns
into
and
cltd
mov
push
jmp
push
gs
aas
add
and
imul
sbb
jne
shrb
inc
int
test
cpuid
frstor
pop
loopne
jecxz
test
jg
pop
test
xchg
dec
jbe
xchg
cli
push
je
popf
imul
out
sarl
cmp
lea
jae
or
jle
or
enter
aam
adc
pop
jmp
mov
pop
push
lret
mov
jmp
arpl
daa
dec
movsb
mov
stc
jnp
pop
fadds
je
aaa
mov
jg
push
mov
mov
mov
sbb
cmp
xlat
in
xchg
or
mov
inc
cmp
jge
mov
xor
pushf
out
popf
xor
pop
jno
dec
cmp
ret
js
mov
push
jmp
jmp
push
imul
pop
stc
ljmp
mov
adc
sub
lret
sahf
rcrb
xchg
add
rep
ret
mov
stos
add
lahf
fwait
outsb
movsb
jae
adc
cld
mov
rol
dec
out
into
dec
icebp
and
adc
loope
jl
push
jns
subb
fdivrl
push
loop
gs
add
mov
jno
jne
push
add
bound
sarl
jle
cmp
mov
es
pop
addl
sub
push
mov
iret
jbe
push
rcl
fld
push
sbbb
fistpl
movsl
shll
fists
add
add
sbb
je
and
inc
pop
inc
pop
iret
lahf
sub
lret
jb
insb
jns
xchg
sub
xchg
mov
ret
rolb
jmp
shlb
sbb
or
mov
mov
popf
icebp
sub
sub
xor
shrb
test
fcomp
cmp
jne
inc
mov
loopne
pop
imul
lret
sahf
popf
cmp
xor
or
dec
popa
ficoml
repz
mov
cmp
add
cli
icebp
and
mov
dec
call
mov
xor
xor
mov
add
adc
lret
lret
and
and
lret
stos
in
pop
and
dec
mov
cmpsl
std
lea
pop
lods
mov
jecxz
push
mov
xor
cmp
pop
cmc
ds
sbb
dec
mov
xor
ljmp
push
dec
push
xor
call
push
decb
lret
insb
push
lcall
lds
mov
sub
ds
mov
sub
shrl
mov
sub
in
push
cmp
les
jge
push
cmp
inc
adc
icebp
shrl
cmp
pop
repz
fwait
data16
mov
jbe
jmp
in
andb
mov
pop
add
lock
jae
push
add
sbb
dec
lahf
stos
int3
cmc
push
xchg
int3
dec
int3
push
xchg
daa
arpl
add
mov
inc
cmp
shr
inc
jno
mov
incl
neg
enter
pop
and
ret
jo
xchg
out
pop
push
pop
fst
xchg
mov
dec
jns
imul
xchg
jge
mov
and
shlb
cmp
std
or
test
into
out
xchg
mov
jmp
mov
movsl
call
repnz
hlt
mov
pop
out
inc
mov
cld
push
testl
sbb
cmp
inc
ja
pop
add
cmp
imul
jecxz
leave
sub
sti
orb
xor
imul
fildl
inc
rcrl
cmp
add
stos
lods
add
mov
xchg
loop
mov
add
loopne
xchg
mov
mov
sbb
push
call
jmp
pop
testb
sbb
xchg
mov
adc
cmpsb
sub
add
sbb
shrb
shlb
addr16
outsb
jb
push
leave
and
ljmp
jb,pn
pusha
xchg
fs
push
jno
push
mov
and
add
aas
jno
pop
out
or
pop
sub
in
test
lock
xor
shr
movsb
push
sub
mov
and
in
loop
leave
push
inc
or
xchg
outsl
ljmp
add
fnstsw
cmp
inc
inc
fdivrl
mov
mov
cmpsb
jecxz
outsl
rcrb
jno
adc
pop
imul
dec
popf
js
hlt
mov
inc
add
or
int
fmull
fcomp
jns
icebp
and
dec
test
out
lret
mov
in
enter
rorb
sbb
xchg
shrb
jg
mov
mov
xor
int
mov
call
fs
pop
xchg
pusha
out
dec
cmpsb
pop
push
aas
mov
loopne
pop
out
sahf
jmp
mov
xorl
hlt
insl
aaa
test
repnz
mov
sub
stos
add
xor
aad
sub
data16
and
push
inc
mov
and
clc
jae
jge
lret
push
sub
call
mov
sub
lahf
rclb
out
fucomi
cmp
int
lea
sub
lret
addr16
or
notl
mov
pop
sbb
les
test
push
daa
mov
pop
mov
mul
adc
pop
sub
loope
pushf
movsl
jp
test
add
out
out
out
mov
mov
gs
daa
push
pop
mov
dec
fisubs
lds
jp
pop
mov
jo
push
aam
into
data16
fadds
sbb
cmp
mov
cmpsl
xchg
les
xor
mov
xor
jbe
dec
ds
cmp
push
sarl
sahf
pushf
add
ss
bound
divb
jecxz
pop
loope
adc
cli
push
leave
push
cmp
cmpsb
jg
mov
ror
mov
clc
add
add
pop
add
shr
mov
out
lods
mov
adc
mov
pusha
stc
inc
push
xlat
pop
dec
inc
bound
daa
inc
mov
cld
cmp
xchg
lea
pop
ss
aas
push
xchg
mov
cld
xlat
loop
sub
adc
orb
and
xor
shl
mov
mov
xchg
cmc
push
mov
jns
std
loope
notb
nop
lock
xor
sarl
add
out
mov
push
cmp
inc
clc
sbb
leave
mov
das
inc
dec
mov
cmpsl
cwtl
sysret
daa
clc
or
add
cmpsb
cmpsb
sbb
cmc
scas
lods
inc
xor
sti
lea
push
mov
test
mov
cwtl
fwait
mov
sub
or
fs
negl
dec
stos
inc
cwtl
sbb
pop
and
xchg
js
or
mov
adc
mov
lahf
add
jg
xchg
adc
shl
je
pop
xchg
ds
dec
call
sbb
dec
xchg
adc
leave
jno
mov
icebp
cmp
aas
sbb
jp
ja
pop
ficoml
mov
or
xor
mov
cmp
enter
es
es
popf
sbb
fsubrs
jb
jne
cld
outsl
dec
fcomp
pop
iret
cwtl
hlt
scas
sbb
andl
push
rcll
rcrb
push
jg
push
cli
inc
mov
fsubs
sbb
xlat
add
sub
or
push
out
cltd
frstor
imul
dec
imul
pop
sub
pop
and
sbb
jne
inc
pusha
daa
and
push
jge
and
and
pop
mov
mov
stos
lds
inc
cmp
jmp
mov
inc
test
xor
adc
mov
mov
jae
loope
pop
sar
hlt
add
and
ficomps
and
fdivs
inc
mov
push
fbstp
nop
loop
popf
test
lock
sarl
sub
pushf
mov
mov
pushf
mov
inc
sbb
cmc
mov
aad
add
fldt
insl
mov
adc
sub
test
scas
dec
int3
push
sbb
js
fimull
stos
andl
mull
je
aas
pop
inc
imul
stos
in
lcall
lods
int3
push
push
mov
jp
xchg
sbb
sub
fnsave
push
ljmp
jb
fidivrl
mov
lret
jno
mov
jmp
dec
js
dec
icebp
push
dec
jmp
pop
xchg
sbb
sub
nop
xor
inc
push
jmp
xor
fisttps
stc
je
jge
popf
rorl
mov
out
add
mov
andb
inc
into
scas
push
ss
xchg
and
push
jl
ret
insl
dec
and
xchg
ds
ljmp
inc
mov
add
lret
hlt
jp
lret
sub
push
stos
dec
jecxz
outsl
mov
rorb
out
mov
dec
outsl
adc
test
sbb
fwait
mov
into
in
mov
jno
jecxz
in
push
aam
sbb
cltd
fdivs
sbb
dec
fdivp
pop
nop
std
xlat
in
cmp
fildl
mov
cmp
mov
add
xchg
popf
xlat
push
xor
call
lods
pop
mov
mov
in
call
mov
xchg
cmpsb
mov
lahf
jg
aad
xchg
adc
adc
xchg
sbb
pop
popf
aas
ret
mov
sti
dec
jp
aam
pop
das
inc
inc
arpl
loop
xchg
mov
cmp
push
mov
aas
mov
push
mov
fldenv
xor
sti
push
push
inc
xor
outsb
lcall
or
fnstenv
popf
xor
ljmp
aad
xor
int3
mul
int
cli
push
xlat
push
bound
insb
xor
dec
and
lods
dec
stos
movsb
fwait
clc
insl
cmp
jo
arpl
lds
enter
pop
add
out
cs
jae
int3
iret
pop
cli
repnz
clc
test
fimull
popa
cltd
adc
sti
sub
adc
push
push
stos
ficoms
fidivrl
pop
jle
mov
sub
out
jne
cmc
push
inc
lret
mov
addr16
popw
rcll
cmpsl
rcrl
push
lret
pop
sbb
fistps
clc
pminsw
idiv
aad
push
adc
mov
clc
add
add
dec
mov
ret
xchg
lds
or
mov
icebp
xor
cmp
push
sbb
fs
lea
cmp
adc
je
jo
popa
fwait
setge
clc
sbb
fnstenv
fsubrl
sarb
push
dec
xchg
and
es
inc
or
mov
les
pop
mov
out
jae
rolb
inc
jmp
xor
cmp
bswap
in
shl
popa
xchg
test
icebp
scas
mov
mov
sbb
imul
mov
sub
adc
dec
mov
lret
dec
or
pop
add
js
adc
dec
sar
inc
mov
mov
cmpsl
jne
hlt
sahf
cvtss2sd
es
jnp
xchg
clc
fbstp
fisubrs
divb
test
dec
sti
ret
test
movsb
test
push
ret
stos
push
pop
fs
adc
fisubrs
shlb
sub
cld
gs
repz
inc
test
shl
std
aas
int3
push
fcomps
cli
ficoms
sub
lahf
ljmp
xchg
xor
push
mov
mov
sub
jae
push
rcll
rorb
mov
divb
fbld
fbstp
gs
subl
inc
adc
lods
sbb
outsl
sbb
lock
mov
pop
or
jp
jmp
sub
popf
sub
popf
adc
sub
and
aas
lea
loope
and
fidivl
movsl
xchg
or
lret
xchg
test
xchg
mov
xchg
fcmove
push
cmp
lea
and
cld
shlb
xchg
xchg
int
mov
and
dec
hlt
mov
and
cmp
adc
les
sub
xchg
int3
dec
pop
scas
xchg
out
and
bnd
cmpsb
sub
push
add
js
sub
cld
mov
mov
dec
out
sbb
dec
fs
push
mov
sub
loop
data16
push
mov
mov
loopne
sub
jmp
jns
arpl
iret
jl
loope
or
inc
out
std
xlat
imul
cmpsb
mov
or
dec
shlb
sub
repz
xchg
push
mov
jmp
lods
push
jle
cs
xor
shlb
sbbb
das
pop
mov
adc
push
lea
loop
adc
lods
insl
push
pop
stos
pushf
lock
pushf
xchg
das
mov
xchg
mov
test
xor
and
call
addl
aam
push
push
pop
push
mov
mov
lock
push
push
and
jle
adc
xor
je
pop
sbb
ret
sbb
orl
adc
icebp
iret
sbb
ja
jecxz
mov
call
pop
inc
imul
push
inc
push
movsb
push
or
repz
lods
jno
cmp
adc
orl
sbb
push
ret
mov
jmp
inc
push
adc
sub
jmp
imul
push
aas
push
cltd
xor
sub
jmp
nop
es
jno
pop
iret
repz
scas
inc
lock
in
movsb
mov
mov
aaa
mov
in
jl
test
dec
push
dec
scas
jb
out
rol
gs
aaa
scas
push
cmpsl
jmp
outsl
xchg
inc
xor
enter
add
hlt
popf
mov
arpl
into
test
rolb
std
add
pop
jns
into
mov
loopne
sbb
jge
std
repz
and
sbb
rcll
sub
sub
stos
mov
lods
inc
mov
xchg
mov
cs
ss
mov
xchg
mov
mov
mov
xchg
out
loop
fs
sahf
cld
dec
jg
insl
xchg
popa
repz
mov
ret
cmc
sbb
cmp
das
stos
xor
pushf
loop
adc
icebp
into
jns
rol
pushf
cltd
pop
sub
fs
shrl
add
adc
ljmp
jg
scas
xchg
mov
mov
mov
push
sub
mov
lods
nop
dec
aaa
ds
cld
sbb
cmp
cld
enter
faddl
ljmp
xchg
sarb
dec
lea
mov
push
sub
add
mov
xchg
lret
jnp
rcrl
xchg
push
aas
jge
add
clc
add
add
jo
das
hlt
pop
imul
leave
push
pop
xor
mov
inc
out
imul
outsb
mov
out
pop
ljmp
add
in
pop
call
fisttpl
aas
and
jge
jge
mov
enter
mov
hlt
lcall
dec
imul
cwtl
imul
lar
cmp
sub
popf
or
push
es
sbb
push
rorb
cli
arpl
mov
test
mov
sub
dec
adcb
out
lret
xlat
ja
lret
div
push
push
mov
ja
dec
mov
hlt
push
dec
lret
test
xchg
out
ret
jno
add
and
ret
jno
negl
popf
and
pusha
loop
cmpsb
aas
out
push
xchg
mov
daa
sahf
push
stos
mov
imul
xchg
add
faddl
clc
cltd
mov
test
imul
sbb
aas
cmp
bound
insl
inc
mov
sbb
sbb
mov
sbb
repz
adc
ljmp
in
mov
fwait
xchg
pop
jl
cmp
dec
pop
lret
out
xlat
add
jns
inc
mov
xor
mov
sbb
mov
pop
bnd
int3
lret
jno
lret
incl
insl
cltd
insl
insl
inc
mov
mov
rcrb
sub
loopne
cmp
loope
int3
pop
mov
pop
adc
cs
addr16
mov
xchg
adc
adc
mov
fs
sbb
dec
sti
mov
adc
push
fsub
ficomps
addr16
mov
ds
mov
dec
int3
rcrb
mov
mov
cmp
bound
cwtl
lret
jle
lods
inc
or
sub
or
xor
pop
mov
insb
int
sahf
es
add
dec
jo
cmpb
jb
in
insb
fwait
pop
inc
pop
mov
pop
aad
dec
xchg
dec
data16
mov
cmp
push
inc
and
fmuls
sbb
mov
test
stos
jns
xor
mov
pop
mov
and
push
ret
pop
scas
lcall
cmpsl
mov
cmc
aam
arpl
pop
jle
rep
mov
insb
ljmp
pop
sbb
inc
add
int3
and
paddw
scas
jl
mov
push
pop
iret
gs
dec
imulb
sbb
repz
ret
test
js
fimuls
lret
xor
aaa
sbb
and
jno
add
pop
pop
push
enter
ja
mov
adc
sbb
sub
or
std
jmp
popa
mov
xchg
stos
jns
adc
scas
and
jb
sbb
add
std
popf
pop
xor
aas
sti
xchg
arpl
push
inc
sbb
sub
adc
pop
or
and
dec
sbb
aas
add
push
fwait
sbb
ret
xchg
dec
scas
mov
mov
jnp
jns
pop
out
pop
mov
mov
cli
outsl
pushf
xchg
adc
add
out
stos
ljmp
aas
orb
dec
sbb
test
ljmp
mov
leave
sarb
dec
pop
and
jle
jb
mov
gs
sub
push
adcb
lods
xchg
mov
test
mov
jb
in
scas
fimull
dec
dec
loopne
jae
lret
adc
and
fcomps
repz
cmpsl
pop
repz
add
pop
loope
inc
sub
push
std
loopne
fsubl
push
adc
popf
jg
test
jns
sbb
repz
call
fstpt
xchg
ret
mov
mov
mov
xchg
mov
insb
or
adc
lods
cld
dec
push
jle
in
int3
jno
push
push
mov
lock
loopne
lahf
notb
pop
lea
shll
mov
lock
adc
fisubs
jle
xchg
xchg
add
jns
fs
lea
jno
mov
es
mov
sub
cs
gs
popf
push
out
adc
dec
mov
loope
es
xchg
push
movsb
lock
loop
les
loopne
sub
test
inc
inc
mov
fstpt
in
push
fdivl
adc
rolb
test
jmp
pusha
mov
out
scas
call
shlb
pop
cmpsb
xchg
mov
pop
out
les
xchg
nop
dec
dec
inc
mov
cmp
or
push
sub
test
enter
sub
pcmpgtd
add
clc
add
add
dec
push
aam
push
inc
inc
push
jne
and
gs
lds
add
xchg
aam
mov
jno
into
cmp
xor
daa
fsubl
ds
or
add
pop
jle
int3
xor
sub
idiv
adc
fisubrl
jne
xchg
lock
inc
fsubrl
pusha
xchg
lods
call
xchg
mov
stos
adc
and
stos
sub
xchg
pop
cld
aad
push
in
out
dec
scas
inc
inc
mov
test
cld
in
je
fcomip
cmp
es
shr
mov
push
fiadds
inc
dec
les
sub
inc
pushf
repnz
sbb
in
xorl
mov
mov
repnz
push
and
cltd
sbb
ja
insb
sub
push
jnp
cmpl
test
sti
lahf
sbb
fs
sti
mov
fisttps
jbe,pt
sub
sbb
popf
jbe
out
outsl
or
std
and
jecxz
jns
arpl
nop
rorl
lret
push
xchg
mov
push
mov
mov
aaa
movsb
jo
cmp
xchg
cwtl
ja
es
pushaw
pop
daa
pop
shr
mov
mov
dec
sub
lds
cmp
sbb
pop
gs
stos
cltd
jmp
and
xor
xchg
mov
xchg
out
dec
or
rcll
and
push
data16
add
add
adc
stc
adc
aam
xor
inc
xor
mull
xlat
stos
or
test
mov
dec
loope
jecxz
rcrl
insb
ret
inc
mov
push
push
xchg
addr16
mov
pusha
xor
pusha
aad
lret
mov
cmpsl
test
mov
aas
aam
aam
xchg
jnp
dec
mov
into
jns
add
movb
cld
adc
cltd
paddb
sub
outsl
hlt
push
adc
aad
jecxz
out
jnp
jb
rclb
xor
add
cmp
mov
fs
or
jecxz
insl
push
cmp
dec
adcb
cmpsl
mov
dec
lcall
dec
xchg
imull
repnz
scas
mov
or
mov
inc
vpunpcklqdq
jo
push
or
lods
add
xchg
jge
repz
jns
fidivrl
cli
mov
outsb
pop
cmp
and
adc
add
popa
pop
rcll
outsb
pushf
sub
adc
stc
pop
das
outsb
cmpsl
popa
add
mov
cmpsb
popa
fnsave
jnp
mov
push
add
stos
sbbl
pop
push
cli
addr16
outsb
xor
mov
mov
push
cmp
mov
sub
popa
aas
aad
adc
push
xor
add
inc
out
fdivl
jp
out
dec
dec
imul
test
mov
stos
cmp
movsb
jns
ss
pop
mov
fnsave
mov
pop
fildll
ret
xor
or
xor
mov
xchg
mov
mov
insl
out
jmp
cwtl
jp
mov
icebp
mov
mov
xchg
fdivs
fwait
jbe
sbb
repnz
sub
push
test
add
mov
aad
inc
outsl
jbe
mov
and
sbb
or
inc
jg
sarl
jg
sbb
pmaxsw
ljmp
sub
mov
hlt
cmp
lahf
jnp
pop
or
xor
mov
mov
test
push
ret
cs
cmpsl
cltd
push
sahf
jle
aaa
stc
jns
lret
mov
add
inc
pushf
jg
add
adc
push
cwtl
push
jg
cmc
inc
sub
dec
xchg
sbb
pop
sbb
pushw
ljmp
sub
pop
mov
addr16
adc
or
pushf
aaa
inc
outsl
imul
mov
push
lods
ss
in
dec
fdivs
xchg
xchg
insb
xlat
popf
sub
dec
mov
mov
lahf
repz
pop
sbb
pop
iret
push
add
push
fmul
sub
mov
frstor
aad
imul
adc
cmp
push
mov
lods
inc
mov
cmc
in
cmp
and
cmp
js
mov
inc
fists
mov
mov
jmp
push
fidivrs
pop
ret
adcl
adc
or
testb
jae
js
pop
aas
out
out
pop
push
adc
inc
inc
jns
insb
addl
xchg
mov
sub
dec
lcall
cmc
icebp
or
repnz
clc
add
add
shrl
shl
ds
and
mov
add
and
push
ret
mov
mov
sbb
leave
adc
call
xlat
xchg
adc
pusha
outsl
cmp
cmpsl
xor
adc
icebp
jnp
or
pop
dec
ret
cmp
xor
dec
pop
testl
xor
andl
jnp
inc
xchg
cmp
sub
repnz
fcmovnb
xor
loopne
adc
mov
jle
stc
dec
enter
loopne
dec
mov
nop
fbld
mov
roll
cmp
sbb
push
jecxz
add
or
cli
jb
test
inc
int3
stc
dec
and
pushf
mov
dec
jno
shrl
or
ja
lahf
loopne
dec
jmp
imul
sbb
add
dec
rolb
test
add
sub
push
push
mov
mov
jne
idivb
aas
push
int
stos
jno
inc
xor
fsub
xchg
jmp
inc
and
jp
cmp
add
mov
test
les
cmp
fwait
push
cmc
sti
push
push
dec
shrl
fdivrl
outsl
jmp
bound
xchg
or
adc
mov
jno
adc
pop
movsl
jle
add
in
xchg
dec
xchg
outsb
cmc
mov
xchg
mov
sub
xor
ret
push
pop
loope
adc
out
repz
inc
xor
ja
add
dec
inc
xorb
sbb
es
rorl
popf
mov
fs
jge
nop
lea
or
xor
xor
and
stc
sbb
imul
testb
xchg
inc
pop
repnz
and
andb
aad
lods
and
and
xor
cmpsl
sub
andl
add
divb
enter
in
add
cmp
push
pushl
fisubs
test
pop
divl
xlat
jmp
repz
out
stos
xor
test
repnz
ficomps
sahf
loopne
in
dec
nop
stos
mov
ja
lahf
xor
mov
xor
fisubs
and
int
sub
push
pop
loopne
out
ret
or
pop
shrb
ss
xchg
xchg
fs
pop
mov
fwait
scas
dec
inc
xchg
xchg
mov
and
add
cmp
arpl
movsl
mov
cmpsl
push
mov
je
mov
ljmp
and
add
fbstp
or
sub
push
mov
in
xor
mov
rep
jmp
mov
pop
add
xlat
outsb
pop
test
in
loopne
push
int3
sbb
jg
push
repnz
div
lock
scas
popf
add
gs
push
into
lret
xorl
jo
and
js
jae
jo
ror
pop
jp
dec
mov
pop
push
xchg
and
mov
push
rcrl
lcall
mov
push
sbb
mov
jg
inc
jns
ret
in
dec
jg
jmp
adc
inc
mov
call
sub
decb
in
pop
mov
out
add
xchg
hlt
add
stos
aas
stos
mov
jne
and
sbb
and
sbb
ret
push
into
jo
lods
dec
inc
mov
or
rclw
add
mov
mov
dec
sahf
rcrb
mull
loope
lcall
xchg
jae
adc
add
icebp
outsl
cli
mov
adc
or
setg
mov
cmp
out
scas
xchg
lods
fwait
lods
mov
jno
jno
mov
xchg
out
mov
lret
cmp
pushf
push
and
mov
aaa
outsb
lret
addr16
movsl
mov
lods
adc
out
mov
jmp
std
lock
lock
mov
or
mov
call
cltd
xchg
mov
add
sbb
or
lds
cmp
mov
testl
or
sub
leave
ljmp
jb
add
add
inc
sub
dec
push
rolb
mov
xchg
mov
mov
adc
xor
cltd
fldt
insl
pop
stc
std
fwait
sbbb
mov
jge
cmp
jge
inc
popa
xor
sti
cmp
mov
jno
jge
es
jno
cmc
mull
jg
testl
add
aam
mov
in
hlt
inc
inc
sub
pop
test
jne
aam
xchg
xchg
push
mov
push
imul
xchg
arpl
bound
ret
stos
push
lods
inc
dec
jno
or
pushf
mov
je
jle
stos
sbb
sbb
sub
add
mov
mov
lds
mov
into
fs
popf
adc
das
add
mov
aaa
xchg
mov
push
jp
adcb
movsb
pop
rorb
ret
jnp
sbb
hlt
das
dec
je
lcall
adc
push
shrl
mov
add
pop
mov
cmpsb
inc
inc
jno
movsl
daa
add
push
jl
scas
sbb
out
outsl
or
inc
jge
mov
mov
push
into
gs
jl
popf
jg
dec
stos
push
fildll
jmp
in
pop
ficoms
inc
test
push
jecxz
es
xchg
and
pop
jae
int
mov
xchg
fisttps
dec
cld
mov
pop
push
cmp
pop
push
xchg
fs
mov
inc
sbbl
push
push
aas
or
cmp
lcall
js
lock
out
rcll
xor
jmp
in
in
adc
and
add
sbb
lret
inc
cmp
mov
pop
scas
sarb
sub
or
lahf
inc
mov
dec
pop
clc
ret
dec
fcmovbe
mov
pop
nop
jmp
pop
or
mov
addr16
mov
xchg
testl
lret
sbb
mov
cmpsb
addr16
nopl
pop
fbld
mov
into
sub
ljmp
ret
clc
mov
movsl
sbb
in
into
aas
and
imul
je
cmp
jbe
enter
test
fisubl
adc
stos
test
adc
movl
and
and
bound
loope
jecxz
lods
ret
test
movsb
mov
mov
xor
sbb
aaa
pop
adc
lahf
sub
data16
push
insb
in
inc
fcmovnbe
mov
adc
sub
insb
xchg
jle
mov
mov
mov
add
cld
test
lea
test
loop,pt
gs
inc
stc
mov
mov
popa
insb
jb
xor
xchg
jp
lds
xchg
cwtl
pusha
add
in
adc
fadd
mov
pushf
mov
xchg
add
inc
mov
sahf
jmp
mov
out
ret
sbb
jge
pop
stc
pop
bound
xor
cwtl
push
rcrl
pop
dec
jno
inc
jnp
sbb
jg
shll
sti
sahf
and
sub
clc
xchg
sbb
or
mov
pop
mov
push
mov
lret
push
loop
push
pop
sub
out
jp
push
sub
in
gs
scas
dec
loope
push
mov
ror
out
lods
xchg
xor
jo
mov
xor
out
or
mov
xchg
fs
int
paddsw
push
push
or
loope
insb
mov
add
xor
push
push
mov
hlt
cltd
lahf
xor
jno
add
mov
icebp
je
lret
cmp
ret
mov
enter
cmpsb
jecxz
mov
cmp
popa
pop
aad
pusha
jmp
ret
imul
cmp
ss
cmp
mov
adc
xor
mov
nop
cs
mov
cltd
or
mov
rorl
jmp
fsubl
in
adc
cwtl
mov
xchg
stos
mov
das
sub
je
fs
in
sub
hlt
push
push
sahf
lahf
cs
lret
xchg
popf
cwtd
pop
rcr
ficompl
xchg
ret
lcall
mov
test
ljmp
addl
inc
mov
xchg
xor
pop
adc
mov
push
or
add
jb
adc
rcr
in
dec
jl
pop
imull
in
push
push
mov
push
das
xchg
add
mov
cwtl
and
mov
push
inc
jns
jbe
mov
in
int
das
adc
mov
pusha
in
mov
or
xchg
push
push
dec
push
pop
push
dec
mov
hlt
jge
in
es
cmp
insb
lcall
mov
xchg
push
fcompl
fmulp
mov
pop
cmpsb
cmpsl
push
loopne
xchg
add
sahf
xchg
inc
fisttps
lahf
roll
repz
cld
add
clc
add
add
lock
call
jno
mov
and
fcoms
mov
outsl
push
cli
pop
mov
imul
fiaddl
scas
out
sbb
fistps
cltd
aas
cld
cmc
mov
stos
je
mull
js
ss
or
mov
mov
lret
jge
pop
orl
mov
pop
inc
mov
adcl
push
addr16
cmp
in
mov
mov
and
out
sub
push
adcb
push
pop
das
xchg
data16
pop
cli
rclb
add
js
sbb
jmp
movsl
dec
scas
xor
mov
jmp
mov
push
imull
xchg
push
outsl
fcmovu
mov
adc
lret
sub
push
mov
mov
sbb
rcrb
add
popa
dec
adc
pusha
les
mov
jno
mov
cli
mov
mov
add
bound
mov
rcrb
ffreep
pop
mov
xor
roll
dec
add
push
mov
jne
fisubrs
into
je
dec
pop
push
aaa
cltd
pop
enter
jmp
mov
in
sbb
push
and
sub
lret
xchg
lret
aaa
xchg
aam
lods
sbb
dec
out
or
dec
adc
pop
mov
lea
in
nop
jp
pop
mov
ja
push
lcall
jp
cmpsl
push
fs
aam
dec
mov
lods
mov
mov
inc
add
adc
cmp
mov
addl
pop
and
jae
mov
or
in
lcall
jle
fucomp
movsl
out
sbb
out
dec
add
cld
imul
mov
sbb
mov
sbb
mov
adc
sbb
sahf
sbb
ja
stos
mov
lahf
pop
shl
inc
fistpl
sti
jne
imul
mov
in
jns
push
pop
add
and
push
nop
aaa
dec
lcall
inc
pop
aam
mov
stos
stc
rcrl
xor
lcall
mov
inc
mov
push
mov
sbb
femms
in
xchg
and
test
inc
mov
xchg
sbb
mov
ss
mov
inc
or
and
out
mov
mov
mov
add
pop
scas
or
stc
jae
cwtl
pusha
scas
sub
ficomps
xlat
push
movsl
in
lds
sub
mov
out
std
mov
jmp
add
mov
dec
and
les
dec
dec
fwait
pop
inc
or
rclb
jno
mov
xchg
xchg
jnp
mov
adc
nop
das
pop
push
lock
jno
xor
xchg
std
jg
mov
cld
sub
cld
inc
mov
in
xchg
inc
add
out
roll
sbb
in
push
fmuls
inc
hlt
movsb
insb
fisubs
es
out
lea
lret
mull
jge
shl
pop
mov
test
dec
push
repz
movsl
mov
or
xor
jge
hlt
lea
popa
jl
sbb
rclb
pop
xor
mov
jmp
dec
sub
push
xchg
sbb
ds
dec
loopne
sarl
and
push
fwait
scas
into
add
mov
hlt
in
frstor
aad
jno
in
out
arpl
pop
sbbb
mov
dec
cmpsl
out
mov
lret
int3
or
aas
lcall
stos
jle
sub
push
stc
int
lods
mov
mov
es
add
int3
pushl
ja
jae
push
das
pushf
icebp
lods
stc
cmp
sbb
jb
clc
push
sub
lret
fnstenv
std
cmp
in
cmp
and
or
lods
mov
imul
mov
sbb
cmp
add
popa
sbb
ret
aad
pusha
xchg
xchg
or
subb
mov
lock
add
in
lahf
adc
in
les
movsb
out
push
cmp
xchg
mov
fdivs
cwtl
roll
xchg
inc
pop
sub
pop
cmp
fisubl
call
sub
aas
mov
mov
adc
scas
scas
inc
in
subl
cltd
lock
setns
and
xor
subb
xlat
sub
into
outsl
out
cmc
sbb
movsl
roll
jg
lea
jo
mov
jmp
fucomi
pop
xchg
cmp
xlat
aas
mov
push
fbstp
clc
add
add
ljmp
push
jmp
std
out
xchg
mov
cld
dec
cld
jbe
add
cmp
and
gs
mov
test
mov
dec
lock
xor
sbbl
or
imul
in
insb
dec
xchg
pop
in
and
xchg
cmpsb
fs
enter
xor
adc
inc
iret
mov
jno
xor
jmp
dec
mov
mov
xor
imul
rorb
popf
lods
test
sbb
fsts
insb
mulb
dec
dec
and
push
xor
mov
repz
rolb
lcall
jg
xor
xchg
les
or
pop
loope
mov
mov
xor
lea
mov
lods
cli
shrb
sub
fisubrs
int3
adc
or
das
push
and
dec
xor
push
cltd
pop
inc
mov
and
aad
icebp
leave
aaa
mov
mov
aam
lock
adc
daa
cmp
xchg
rcll
fstpl
jnp
ret
roll
add
leave
std
lret
mov
incb
xchg
cwtl
pop
xlat
std
push
aas
ds
pop
fnstenv
test
xchg
scas
loop
paddw
fdivrl
xor
mov
jge
mov
push
and
aam
fnstcw
cld
int
lahf
flds
pop
mov
sti
jne
in
jns
int
jle
push
jo
mov
dec
jbe
or
shrb
push
mov
pop
popa
lcall
lcall
daa
test
idivl
adc
int3
test
in
inc
push
call
loopne
or
mov
scas
clc
xchg
push
jo
decl
mov
fs
inc
xchg
je
inc
sbb
dec
pushf
daa
in
cmpsl
and
pop
jae
aad
jnp
subl
push
pushf
inc
aad
into
outsl
xor
cmpsb
sbb
mov
out
add
lret
sbb
push
scas
pop
mov
mov
ret
mov
jmp
popaw
leave
iret
sbb
fdivp
inc
or
loop
pop
or
idivl
lods
and
cmp
mov
mov
mov
popf
loopne
mov
or
sbb
mov
sub
mov
scas
movsb
mov
sbb
ret
xchg
call
test
clc
cmp
sbb
xchg
mov
scas
sbb
and
or
cmc
dec
leave
nop
mov
xor
jno
xor
xor
push
popf
dec
out
xchg
lds
inc
fnsave
stos
xchg
jne
dec
pusha
test
addr16
jmp
adc
cwtl
sub
jne
mov
dec
lret
sub
push
rcrb
push
sub
sub
sti
mov
sahf
test
int3
call
daa
dec
sub
jecxz
or
leave
xor
sub
mov
inc
or
pushf
test
mov
pop
xchg
mov
or
repnz
inc
aas
out
cltd
aam
xor
repz
lods
pop
xchg
dec
lret
push
ret
cmp
ret
ds
sub
lret
adc
pop
add
in
jne
lret
imul
push
cmp
icebp
jmp
xor
jne
cli
xor
fldenv
repz
adc
or
dec
push
pop
or
dec
stc
push
pop
fsubr
icebp
xor
das
xchg
xor
sbb
pop
insl
enter
aas
jne
sub
pop
push
add
ret
sbb
or
sahf
sbbb
push
sarl
popf
loopne
inc
cltd
mov
pop
testb
jmp
lock
in
fldl
or
sub
add
mov
push
xchg
aad
shlb
mov
leave
pushf
stc
sahf
negb
add
js
mov
adc
pop
pop
aad
dec
lret
pop
addr16
push
sbb
jne
mov
jb
pop
out
dec
fidivrl
inc
mov
adc
cmp
fisubs
lcall
cmpsl
mov
inc
lret
loop
repnz
add
divl
pop
lock
loopne
push
ljmp
adc
cmp
cmp
mov
fwait
lea
pop
xchg
mov
loopne
loop
adc
int
push
pop
std
pushf
and
mov
test
push
mov
xchg
cmp
mov
rcrl
mov
fcmovnb
and
sahf
insl
not
neg
mov
jge
mov
add
clc
add
add
in
subl
imul
cld
sahf
push
jmp
xchg
jnp
lret
push
lods
sbb
and
xor
filds
cmp
aad
arpl
pop
cwtl
pushf
pop
dec
mov
mov
xor
mov
lret
jbe
test
incl
cltd
orl
or
hlt
gs
fs
movsb
jl
sbb
js
ljmp
add
jge
adc
xchg
mov
popf
ss
xor
in
cmc
push
lahf
imul
sub
lret
lods
sahf
xor
test
call
movsl
jo
outsl
push
inc
pop
dec
repz
leave
mov
push
inc
jl
push
and
sub
lret
ret
es
xchg
shll
adc
cltd
xchg
or
loop
sbb
aad
in
int
sbb
jecxz
mov
sarl
jb
dec
in
imul
xor
xchg
std
test
lcall
sub
jmp
mov
jge
jae
int3
push
sub
int
shll
gs
jmp
cmpsb
stos
push
mov
sub
xchg
pushf
push
decb
pop
cmp
push
cmp
repnz
ret
lret
mov
sub
icebp
xchg
inc
mov
jle
cmp
push
sub
xchg
inc
sbb
cmp
push
daa
imul
and
popa
sub
jo
xlat
pop
paddd
int
loopne
xchg
inc
jnp
roll
popl
mov
test
sbb
sbb
nop
cmp
push
scas
xchg
push
inc
mov
enter
insb
scas
stc
sti
cmpsb
cmp
or
lds
pop
pop
adc
xor
jl
push
cli
push
pop
arpl
int3
mov
push
inc
dec
sub
or
aas
ja
loop
xlat
imul
pop
cltd
ja
mov
pop
imulb
imul
leave
sbb
push
popa
repnz
mov
mov
pop
lock
sti
ret
lret
fdivp
into
mov
stc
movsb
shll
fwait
cmp
mov
xchg
ljmp
add
sub
mov
add
push
adc
dec
cltd
scas
pop
pop
xor
or
jnp
xchg
or
inc
int3
push
mov
sub
fsubr
call
and
movsb
je
ljmp
jl
iret
xchg
dec
or
sub
push
mov
test
loope
gs
cmp
mov
add
pop
sub
jle
dec
mov
pop
fs
test
roll
fsts
rclb
jp
inc
jecxz
shll
xchg
addr16
insb
nop
popf
pop
sahf
push
imul
stc
cmp
sub
pop
lret
jl
sbb
ja
xchg
xchg
or
sub
pop
add
test
cwtl
int3
std
xchg
xchg
xchg
inc
add
adc
mov
mov
movsl
out
jno
lock
jo
jge
sbb
xchg
pop
jno
push
push
xchg
int3
movsl
jp
pop
rol
out
imul
jns
push
test
mov
pop
movsb
ljmp
xor
or
les
xchg
or
xchg
das
cmp
lret
hlt
cmp
js
sbb
add
inc
ja
dec
clc
mov
sub
mov
adc
int3
sub
int3
imull
jle
mov
leave
push
rorb
inc
pop
pop
in
xchg
or
sbb
leave
mov
std
nop
aam
imul
jle
imul
jmp
daa
fdivrl
push
les
dec
sti
into
xchg
in
mov
adc
mov
xchg
mov
inc
cmp
loopne
add
adc
cli
cmp
lea
lahf
pop
andl
and
dec
jecxz
decb
mov
xor
arpl
stc
rclb
adc
xor
aad
push
sub
xorl
sub
add
mov
pop
daa
jns
mov
jnp
dec
xchg
loopne
sbb
xchg
hlt
movsl
shrb
repnz
scas
jg
inc
and
mov
mov
xchg
arpl
mov
lret
pop
scas
mov
mov
sbb
in
xchg
cltd
xchg
jp
lret
ficomps
add
insl
pop
ffree
jns
das
push
push
pop
or
loope
sbb
fldenv
aas
out
cld
xchg
push
add
rorb
cmp
mov
out
std
mov
cwtl
xor
das
loope
idivl
inc
or
add
add
add
adc
mov
cmp
push
repz
mov
xor
push
sub
pop
mov
imul
aaa
xchg
ret
mov
inc
vmaxsd
pushl
mov
jne
notl
nop
out
stc
ds
rcrl
shll
lods
or
jbe
add
inc
repnz
xchg
bound
mov
jb
jbe
xchg
rcll
sete
aam
ss
es
int3
mov
xchg
pop
dec
or
rorl
stos
out
cmpsb
push
xor
mov
mov
mov
insb
mov
push
push
mov
xorl
nop
iret
mov
sahf
mov
test
cmp
push
nop
outsb
mov
not
sbb
stos
das
test
aam
push
addr16
imul
outsb
push
popf
xor
xor
imul
sbb
xor
insb
lods
jne
rcll
mov
stc
pushf
sbb
xor
push
stos
outsl
and
shrl
ret
mov
sti
sub
sbb
lds
insb
popa
movsb
xchg
sbb
adc
ss
add
xlat
rclb
cmp
lods
inc
mov
les
and
xchg
jge
mov
insb
sub
xchg
lcall
and
outsb
imul
xor
xchg
jns
mov
jae
sbb
adcl
mov
cli
push
fnstsw
hlt
loopne
add
push
lds
cmpsb
mov
push
jp
mov
movsl
rcrl
cmpsb
fadds
in
das
hlt
pop
push
fmull
push
lods
mov
mov
outsb
mov
out
push
pop
lahf
lock
daa
sti
movsl
scas
repz
xor
ss
pop
jnp
jbe
pop
xchg
sbb
loope
sbb
push
push
test
jnp
int
jns
fbstp
outsb
jmp
hlt
scas
lods
ret
shll
jmp
jmp
jae
imul
and
lahf
adc
aas
imul
dec
rep
cmpsb
xchg
imul
clc
cmpsl
daa
mov
in
es
pop
mov
sub
js
addr16
mov
test
stos
mov
inc
fldl
xchg
in
insb
lret
div
cmpsl
test
lcall
mov
inc
jnp
mov
or
or
push
xor
das
jne
dec
mov
movsb
out
adc
or
mov
fistpl
rolb
push
jnp
jae
sub
int
mov
cmp
xchg
out
sub
pop
adc
pusha
sbb
test
repnz
pusha
and
frstor
mov
pop
inc
aam
jmp
cld
add
in
sub
ficomps
aaa
incl
cmpsl
gs
mov
or
mov
or
xchg
into
add
pop
pop
inc
inc
cmp
push
xchg
mov
push
dec
stos
fdivs
dec
in
mov
mov
sub
xchg
lret
shll
jbe
adc
iret
sbb
cmc
jbe
scas
xor
or
imul
rcrb
xchg
adc
adc
mov
mov
shrl
enter
inc
mov
push
inc
sarl
inc
pop
pop
jae
outsl
ja
push
insb
xchg
xchg
adc
mov
add
pop
push
das
adc
mov
mov
dec
pop
fucomip
rorl
pusha
in
ret
mov
nop
xchg
push
adc
mov
aas
aaa
mov
inc
sub
push
cli
mov
inc
mov
xchg
mov
cmp
sbb
mov
sti
adc
mov
adc
xchg
out
sbb
pop
std
ret
cld
das
cld
in
cmp
or
sbb
fbld
mov
outsl
mov
shl
push
fstl
test
or
cmp
imull
fs
adc
push
add
push
push
inc
jae
cmpsb
test
push
xor
lret
call
mov
jb
cs
call
mov
or
std
mov
lret
push
and
or
jno
outsl
push
clc
add
jp
or
addb
outsl
out
stos
notb
add
lret
mov
jp
fsts
test
xchg
pop
jns
das
inc
jnp
cs
dec
hlt
sbb
aad
popf
out
mov
hlt
mov
pop
cmc
dec
pop
jmp
inc
scas
mov
push
bound
dec
ds
inc
push
lret
in
out
pushf
das
cmp
cmp
add
add
push
shrb
cmpsl
sub
pop
fdivl
mov
sbb
mull
out
popf
repnz
in
inc
add
dec
and
aam
frstor
mov
mov
jl
xchg
push
xchg
daa
cmp
push
sti
jmp
adc
dec
jbe
add
inc
negl
or
lret
pop
jp
in
in
cld
push
fsubs
daa
clc
gs
stos
sarl
ds
negl
jge
pop
mov
adc
mov
push
push
pop
fdivrs
mov
or
xchg
sbb
out
movsb
mov
test
inc
lock
ds
xor
cmp
or
cmp
add
dec
aas
mov
cmp
dec
cs
in
or
add
xchg
mov
push
jb
es
cltd
xchg
dec
insb
mov
jo
jge
jbe
and
push
shll
lea
mov
xchg
ja
adc
mov
mov
mov
jo
and
cmp
ficoml
outsl
mov
jb
adc
ror
fcoms
sbb
hlt
andl
push
inc
jno
xchg
sbb
insb
lea
xor
mov
lods
xchg
add
jae
sub
stc
pmaxub
mov
push
jg
pop
adc
and
ss
and
pushf
mov
cltd
mov
dec
stos
dec
sbb
pop
imul
inc
test
dec
jl
int3
xchg
cs
cmpsl
pop
adc
ss
add
inc
ret
cmp
sahf
aad
xchg
xchg
mov
mov
pop
jnp
adc
nop
into
into
loopne
mov
shrb
or
inc
sub
scas
or
jmp
jecxz
hlt
xorb
ljmp
lods
pop
push
pusha
push
pushf
mov
xchg
adc
cmp
xchg
pmuludq
lock
data16
xor
mov
pop
inc
in
push
add
test
fs
lret
rclb
int3
cmc
sbb
rcll
aaa
in
mov
in
xchg
pop
popf
xchg
out
jnp
xor
cwtl
mov
pop
scas
cvtps2pd
out
movsl
mov
test
stos
orb
loope
mov
sub
pop
cli
int3
jecxz
xchg
jo
xchg
xchg
cmp
mov
mov
push
sbb
test
mov
arpl
aad
leave
fdivp
scas
or
inc
adc
mov
mov
pusha
add
mov
lods
push
rcrl
mov
xchg
inc
js
xchg
repz
cmp
cli
mov
ja
cwtl
sti
cmp
sahf
pop
repz
xchg
icebp
and
divb
jg
jne
cmp
call
pushf
stos
adc
jecxz
pop
dec
sub
in
pushw
cmp
ret
sbb
mov
sub
xchg
mov
mov
jae
lret
mov
add
in
mov
jmp
dec
rclb
adc
or
stos
cmp
jle
push
in
nop
mov
test
xchg
mov
xor
dec
or
mov
xchg
hlt
lret
mov
xor
mov
test
cmpsb
dec
mov
call
mov
adc
lods
sub
fs
outsb
andb
sub
fisubrl
lea
pop
scas
sbb
push
push
fildl
xchg
lds
movsb
pop
dec
xchg
lret
sub
arpl
or
insl
lcall
sbb
imul
mov
lods
in
stos
fdivl
popa
cmp
sahf
adcb
negl
hlt
cmp
fwait
ja
inc
popf
and
and
daa
mov
popa
inc
and
xor
push
out
mov
cmp
scas
jmp
dec
dec
and
mov
stos
sbbb
or
nop
out
push
push
or
aam
sbb
outsb
cmp
sbb
add
add
push
loop
nop
test
enter
stos
pop
xlat
pop
xor
mov
pop
scas
mov
ret
push
fwait
push
push
jae
and
inc
or
mov
ljmp
push
push
in
push
lea
in
hlt
mov
insb
daa
pop
arpl
pop
mov
mov
inc
xchg
lret
push
data16
sbb
and
pop
out
nop
dec
sbb
imul
xchg
scas
jb
int3
in
jns
xchg
dec
sub
out
lcall
push
mov
mov
push
pop
sar
xlat
mov
sbb
jmp
and
mov
out
jno
pop
sysexit
adc
add
and
push
mov
subb
mov
push
and
int
lea
sub
xlat
push
mov
movsb
repnz
adc
jmp
pusha
pop
adc
stc
mov
pop
push
sub
jb
loop
and
mov
xor
inc
movsb
push
xor
rcll
jne
leave
mov
add
fldl
aaa
clc
or
mov
and
scas
mov
insl
sbb
push
stc
mov
cmp
in
decl
imul
aas
mov
push
aaa
in
cwtl
sti
outsl
shlb
loopne
addr16
jl
outsb
bound
xor
inc
rcrb
int
sbb
jmp
mov
subl
mov
cltd
dec
sub
fs
ficomps
mov
xchg
push
push
test
test
ss
push
push
lahf
int3
sub
dec
pop
add
out
mov
outsb
mov
cltd
int3
mov
ljmp
push
xchg
adc
lcall
call
das
jecxz
mov
mov
movsl
inc
xchg
sarl
add
aas
test
test
adc
aas
mov
pop
mov
xlat
aad
inc
cltd
sbb
repnz
cmp
stos
jnp
gs
addr16
dec
ja
fmuls
inc
in
outsb
mov
mov
fadds
adc
dec
and
data16
in
mov
push
cwtl
mov
push
aad
pop
mov
bound
icebp
movsb
ficoml
pop
dec
cmp
adc
pop
sbb
add
outsb
sbb
push
sub
and
xchg
push
mov
fsts
rcrl
cmp
repz
popf
pop
repz
sub
jmp
xlat
loopne
js
stos
dec
fs
sbb
jg
fwait
sub
mov
inc
inc
mov
jl
xchg
cltd
loop
inc
dec
lock
cmp
pop
aas
sub
outsb
inc
cmp
inc
out
push
sbb
loop
inc
pop
pop
cmc
mov
pushf
lds
sub
pop
test
jbe
xor
int
sub
imul
xor
mull
add
sbb
repnz
fidivrs
xchg
push
mov
push
add
dec
shlb
mov
inc
inc
lods
lea
dec
sub
insl
dec
cmp
sub
dec
xchg
int3
bnd
cld
out
push
out
push
inc
sub
call
movsb
mov
push
fiaddl
xchg
cmp
out
repz
push
loop
ljmp
stc
aaa
or
xor
fwait
dec
xchg
or
pop
push
repz
sahf
dec
div
mov
outsb
fs
inc
fbstp
outsb
cmp
or
repz
xchg
dec
jnp
xor
xchg
je
push
mov
cmp
je
mov
addr16
adc
in
cwtl
imul
mov
arpl
push
rolb
in
bound
adc
fistps
adc
pop
add
popf
test
rcrl
push
aas
xor
dec
shl
sbb
jne
xlat
sar
adc
cmc
xor
iret
ss
push
mov
sub
mov
and
cwtl
jno
cmp
cmc
or
mov
nop
xorl
std
push
fisubrl
call
in
fstps
and
mov
inc
or
xchg
test
cmp
mov
mov
shl
insl
shl
mov
loop
and
mov
int3
ss
rcl
add
dec
xchg
shrl
sbb
lds
outsb
call
pop
movhps
repz
xchg
sbb
stos
ficoml
hlt
movsl
into
mov
and
sub
mov
jl
mov
in
out
sbb
andl
movsb
and
int3
pop
ficomps
mov
cmc
jmp
xor
jecxz
fsubl
sbb
leave
fistpl
in
lcall
add
or
out
push
push
xchg
js
pop
divl
lahf
fcmovnu
lret
repz
loope
jecxz
mov
sub
int3
cmp
and
inc
ds
mov
xor
in
notl
fdivl
loope
or
outsl
cwtl
adc
lcall
push
jp
rorl
jae
xorb
cmc
adc
dec
or
pop
mov
adc
or
ficompl
xor
mov
fs
lods
in
call
shll
xchg
sub
add
add
mov
mov
push
pop
add
push
dec
shl
push
stc
ss
mov
sub
fisubl
lea
mov
sbb
lock
jle
or
xchg
xor
lret
pop
popa
inc
fcmovu
rcrl
jl
xor
aad
push
jp
inc
fmul
pop
add
test
lods
sarl
push
push
or
lods
pop
outsl
dec
adc
adc
mov
add
adc
or
or
test
jne
mov
in
repnz
dec
outsb
inc
andl
int
jo
fsubl
jp
sbb
js
fs
jbe
push
rorl
aad
jecxz
movsb
cmp
cmc
mov
cmc
es
int
push
cmp
jl
mov
push
inc
sti
clc
xchg
mov
repz
jnp
loopne
sbb
fs
adc
imul
out
icebp
cmp
rcll
mov
pop
xchg
adc
sahf
inc
xlat
add
mov
outsb
dec
jae
mov
out
std
jp
push
sarb
adc
in
iret
mov
inc
mov
adc
leave
cmpsb
pop
rcrl
fwait
lret
fs
xor
stc
aam
test
jmp
mov
sub
scas
xchg
aaa
adc
incb
lcall
pop
jo
test
push
jmp
pop
jae
int
push
jecxz
sarb
adc
dec
jp
sbb
mov
push
insb
in
ret
pop
mov
sub
push
push
mov
loop
movsl
in
jno
jl
sbb
mov
fmuls
gs
fwait
xor
in
add
mov
mov
mov
dec
add
cmp
imul
sbb
shlb
sub
jmp
mov
imul
jmp
loop
xchg
push
call
pop
or
cmp
mov
pop
mov
mov
test
xor
lea
loope
mov
dec
imul
lret
jno
cli
out
nop
pusha
decl
hlt
sbbb
adc
pop
sbb
xchg
test
adc
clc
ljmp
scas
mov
jg
jle
jl
pop
dec
lds
dec
jb
or
cmc
fiadds
add
in
iret
dec
jo
jmp
jnp
lods
ss
out
popa
int3
in
mov
cmc
sarl
data16
sub
sarl
nop
and
aad
lock
sbbl
pop
fldcw
in
dec
mov
xor
clc
jp
mov
inc
dec
push
xor
sub
ss
dec
movsb
cs
mov
popa
movsb
stos
call
mov
stc
insl
mov
dec
or
in
out
inc
jb
and
inc
jle
pop
pusha
inc
lods
sti
fwait
push
pop
aam
lret
mov
cld
mov
decb
mov
addr16
filds
push
jmp
ljmp
push
lods
and
testl
fidivs
mov
and
imul
sub
jecxz
outsb
cmc
iret
cld
insl
cltd
adc
neg
push
push
nop
xor
hlt
dec
enter
daa
sbb
xchg
or
call
test
shll
adc
insb
mov
test
push
pop
lret
mov
jns
xor
mov
pop
pushf
and
loop
sahf
in
addr16
je
in
jno
imul
push
xchg
imul
aas
loope
push
fs
cmpb
pop
insl
cmpsb
xor
or
push
andl
lret
mov
xlat
or
mov
mov
push
lock
cltd
mov
pop
int3
mov
nop
les
mov
negb
adc
jae
mov
push
mov
je
jecxz
sti
sti
push
sahf
xchg
mov
pop
loop
pop
pusha
sbb
and
imul
mov
push
mov
sbb
mov
mov
inc
pop
fldt
cmpsl
ret
add
call
cmp
sub
jecxz
mov
mov
scas
mov
or
and
scas
gs
insb
adc
outsl
pop
cmp
xor
xchg
add
push
sub
cmp
cltd
out
pinsrw
adc
xchg
cmpl
fbstp
mov
mov
jne
push
rorb
adc
sub
pushf
aaa
sysexit
jb
push
pushl
addr16
inc
lea
mov
cmc
gs
add
dec
pop
sbb
lret
in
xor
and
add
add
xchg
insb
xchg
adc
push
mov
push
bound
inc
loopne
mov
lahf
mov
test
movsb
sahf
ret
add
adc
pop
mov
aaa
lcall
icebp
pop
lock
xor
adc
push
outsb
mov
push
push
pop
stc
push
pop
sub
test
push
push
bound
cwtl
pop
xchg
sub
xchg
mov
enter
inc
xchg
dec
xor
mov
data16
das
jns
sti
mov
fbstp
xlat
push
push
leave
or
into
je
pop
lret
jge
aam
inc
inc
call
popa
push
push
fucomp
scas
pusha
decb
pop
xorb
sbb
pop
test
xchg
scas
or
inc
lahf
adc
fsubl
xor
out
mov
xchg
cmc
xlat
add
movsl
das
mov
or
daa
imul
adc
adc
fidivl
insb
cld
xchg
xor
hlt
out
jns
sub
clc
sub
pop
push
int
pushl
cmp
pop
mov
test
out
clc
adc
loope
cmpb
adc
push
dec
push
shlb
add
mov
inc
inc
xor
xor
mov
roll
mov
fnstsw
mov
pop
cmp
ret
or
mov
in
push
sub
das
jno
in
div
sbb
add
int
shll
in
cmp
sahf
loopne
pop
pop
fisttpll
inc
push
sbb
sbb
in
gs
add
add
insl
movsb
lds
cmp
or
sub
mov
cltd
inc
test
push
rcrl
hlt
movsl
cmp
or
dec
add
out
sub
dec
sub
adc
mov
ds
xor
lea
mov
movsb
mov
mov
mov
and
hlt
push
pop
mov
lods
xor
test
js
int3
or
outsl
lock
mov
xchg
xor
insl
out
mov
mov
lock
adc
fs
cmpsb
or
je
neg
jge
sub
xchg
daa
inc
out
ret
enter
vpxor
sbb
sub
leave
or
push
push
jecxz
mov
inc
add
dec
aam
add
push
aas
movsl
mov
xchg
lcall
xor
and
sub
sbb
add
xchg
xchg
cwtl
clc
sbb
add
xlat
mov
cmp
cli
dec
stos
jmp
and
pop
inc
xchg
int
mov
cmp
inc
push
out
adc
jns
pop
push
add
sbb
jmp
mov
or
pop
push
mov
out
sub
jp
xchg
mov
movsb
inc
insl
icebp
in
cld
or
push
cmc
stos
inc
pop
sahf
mov
xchg
bound
sahf
stc
add
scas
jecxz
mov
inc
sbbb
push
jae
insb
popa
jp
loop
popa
cmc
lock
fisttpl
mov
inc
movhps
or
adc
jmp
sbb
adc
cmc
adc
insl
int3
jg
fsts
in
inc
test
in
jp
in
jge
in
div
cmpsl
loopne
lcall
sbb
add
sbb
ficomps
fs
stc
adc
test
dec
mov
iret
mov
dec
cmp
add
clc
lds
hlt
lods
in
aam
movsl
ret
cmp
cmp
xor
xor
enter
outsl
cmpl
dec
cmc
cs
inc
jmp
dec
or
push
fisubs
inc
int
loope
stc
aam
adc
mov
sbb
dec
mov
xlat
out
or
mov
enter
xchg
mov
lds
fcomi
mov
mov
adc
mov
push
xchg
push
mov
mov
ljmp
in
in
push
add
repz
sbb
es
addr16
xlat
int
pop
inc
adc
push
sbb
aad
mov
jno
mov
loopne
outsb
daa
jecxz
push
rclb
lea
cltd
push
adc
lret
fcomps
hlt
and
and
xor
adc
and
int3
ss
xorb
adc
mov
loop
sbb
cmp
inc
sbb
adc
inc
jmp
repz
lea
dec
orl
cmp
cltd
pop
out
jbe
mov
cwtl
dec
outsl
je
jne
pop
outsl
dec
cwtl
les
jbe
lcall
add
sbb
mov
shrb
or
imul
adc
in
pop
imul
cld
jp
rolb
mov
cmpsl
fisttps
adc
push
lock
and
cld
ljmp
mov
js
dec
mov
jb
out
in
popa
cmp
pop
inc
push
mov
testb
ss
xor
cmpsb
aas
dec
mov
and
xlat
mov
jge
loop
popw
imull
cltd
bound
adc
test
aad
or
pop
mov
into
rcrb
mov
shrb
sub
lret
jno
sti
je
fwait
push
and
push
inc
push
in
mov
fisttpl
mov
mov
xchg
mov
inc
sub
outsl
lret
xchg
push
scas
cmc
scas
push
lock
sarb
dec
dec
fcoml
aaa
ja
lock
imul
jle
imul
leave
pop
enter
pop
test
push
rolb
je
mov
pop
dec
add
cmpsb
aaa
and
xor
cli
xor
mov
or
shl
int3
cmp
jmp
aad
xchg
xor
in
aaa
fsubrs
lret
and
fcom
sbb
jno
push
aaa
fidivl
mov
mov
pushf
dec
inc
test
jae
pop
mov
fwait
push
jecxz
andb
cmp
loope
iret
in
out
rcr
push
mov
in
sti
fdivr
aad
shlb
cli
insb
idiv
adc
icebp
mov
in
iret
mov
ja
stos
adc
sarb
inc
fidivrl
inc
sbbl
push
jae
push
inc
cmp
repz
stc
daa
out
out
sahf
mov
fstpt
push
adc
cmp
sbb
fimuls
jmp
mov
sbb
fsubl
jae
dec
pop
insb
jno
test
test
imul
fwait
xchg
jb
ret
mov
enter
cmp
scas
jnp
jno,pt
xchg
xor
mov
shll
or
sahf
stos
scas
test
sub
dec
pop
ficoms
fcoms
lret
mov
push
pop
test
fwait
inc
adc
jge
aas
cmp
xor
mov
push
mov
ret
aaa
lock
subl
jle
movb
pop
and
gs
cmp
or
xchg
ret
or
cmpsl
xchg
xor
mov
lock
pop
pop
sbb
or
int3
cmp
fbstp
mov
test
and
sbb
lods
cltd
sahf
out
sahf
or
gs
ss
and
dec
add
fldt
cmpsl
or
xchg
jp
test
sbb
dec
dec
cld
mov
or
push
sub
subb
je
inc
xor
cmp
mov
add
push
lods
xchg
jp
sub
mov
aas
jmp
ja
mov
imul
inc
inc
mov
or
sub
out
stos
mov
dec
inc
sub
out
cwtl
add
or
cwtl
out
jbe
movsb
inc
jns
outsl
in
into
add
cmpb
cltd
xor
and
ljmp
in
add
jp
pop
scas
mull
jp
pop
pushf
loope
repnz
mov
clc
test
out
sub
test
push
pop
pushf
lcall
loopne
adc
adc
ret
pop
sti
adc
arpl
gs
or
pop
clc
sub
jae
inc
shrb
adc
mov
sbb
jg
sbb
jge
daa
push
xchg
push
mov
cmp
push
xchg
enter
mov
sti
or
fwait
inc
and
andl
push
into
in
fs
js
sarb
testl
and
scas
in
jbe
movsl
sub
or
sub
cmp
ss
ss
jle
add
leave
js
dec
inc
ret
and
fadds
or
or
cmp
push
xor
xorl
cs
daa
out
jecxz
jecxz
or
push
adc
cmpsb
test
or
jl
lret
int
popf
call
in
ds
mov
lods
xchg
sbb
leave
fisttps
sub
cmp
test
mov
hlt
dec
adc
cmp
mov
loope
repz
xchg
popf
into
shr
aas
jbe
lea
fimull
mov
les
clc
loope
or
jp
divl
and
sub
jp
cmpsl
loope
lods
mov
ss
pop
pop
jp
rol
into
inc
imul
mov
cmc
jl
lods
fisttpll
ss
std
iret
pop
sub
adc
popf
ljmp
add
add
sbbl
mov
stos
int3
mov
movb
outsl
out
js
pop
mov
inc
cmpl
aad
xor
xor
cmp
cmp
cld
sub
jb
or
jnp
mov
ficoml
sub
pop
mov
ret
push
push
push
adc
adc
sub
mov
lods
add
enter
xchg
and
push
outsl
in
push
mov
dec
dec
in
mov
and
arpl
into
xchg
mov
test
xor
add
jnp
outsb
aaa
push
or
test
jo
ja
jecxz
push
fxch
xchg
sub
mov
dec
inc
lret
jl
dec
je
pushf
sarl
push
sbb
insb
xor
pop
in
cmp
ficomps
jae
or
rcr
pop
pop
lock
in
sbb
cmpsb
xlat
pop
xor
orb
or
push
mov
xchg
mov
and
add
popf
adc
mov
jge
pop
stc
fwait
xchg
lret
imul
stos
icebp
mov
adc
rcrb
mov
sbb
je
out
or
xor
loop
test
mov
in
sbb
call
and
fcompl
dec
fdivrs
shlb
xchg
hlt
dec
push
fimuls
or
lds
pop
pop
jl
sahf
enter
dec
test
mov
dec
loop
insl
es
xor
mov
pop
dec
scas
mov
mov
mov
aam
or
push
xchg
xor
aas
dec
jo
sbb
or
imul
and
cmp
stos
popa
andl
lods
or
cmp
inc
inc
idivl
jne
cmpsl
lahf
mov
and
jg
ret
mov
mov
test
sbb
lock
mov
xor
mov
int3
notl
push
cmp
xchg
and
pop
or
cmpl
or
jo
imul
mov
dec
mov
xor
pop
test
ss
mov
repz
jmp
mov
loop
icebp
mov
fbld
cmp
fstpt
inc
fstpl
fisubrl
aad
inc
sub
fnsave
mov
rclb
sub
adc
jb
aad
mov
shlb
insl
sbb
cli
xchg
xchg
sahf
add
mov
add
xchg
fucomip
pop
jecxz
cmpsb
mov
cmp
mov
gs
push
hlt
cmp
and
jle
mov
push
cmp
cmp
push
aad
subl
fistpll
push
arpl
and
test
rol
testb
out
adc
mov
adc
pushl
and
push
xor
jae
adc
mov
mov
aas
insl
or
and
mov
scas
jns
sub
add
inc
mov
lret
fucomip
lock
mov
and
inc
adcl
mov
std
mov
mov
roll
orl
inc
faddl
inc
mov
mov
fidivl
outsb
lsl
shll
cmp
cmp
push
nop
fbld
xor
sub
stc
ret
sti
jmp
sub
aam
mov
mov
in
test
cs
call
pop
sar
call
jnp
or
add
mov
inc
faddl
movl
jp
sub
addb
cmpsl
out
push
data16
ljmp
mov
push
adc
sbb
loop
dec
mov
mov
push
ret
lcall
pusha
dec
mov
or
or
fnstcw
popf
fisubs
ffreep
popf
aaa
push
jmp
adc
pop
add
repnz
cli
mov
aad
pop
idivb
sbb
or
cmpsl
sub
mov
cmpsb
loopne
ffreep
dec
aas
add
inc
sub
or
shll
lods
or
sub
sbb
adc
ret
scas
paddd
xchg
sarl
mov
les
push
rorb
gs
int
daa
adc
sbb
insl
mov
insl
inc
or
bound
mov
mov
mov
dec
fcoms
xor
dec
sahf
dec
pop
sbb
or
movsb
xchg
aam
inc
mov
in
lret
mov
push
or
cld
es
mov
in
movsb
data16
add
clc
add
add
mov
cmp
inc
ret
imul
es
add
push
popf
sub
aad
mov
stos
xchg
or
sub
xchg
loop
mov
push
mov
xor
outsl
fsubr
fstps
fstpt
mov
and
popf
pop
jl
aaa
mov
dec
jo
enter
data16
inc
fists
imul
nop
in
push
enter
and
mov
dec
mov
out
and
xchg
cmp
dec
out
add
mov
loopne
mov
notl
ja
in
mov
xchg
imul
xor
lcall
subb
inc
mov
addr16
pop
push
je
push
xchg
inc
push
or
pop
push
xchg
pop
iret
ljmp
pop
les
aam
cmc
test
and
call
jmp
mov
shl
add
call
leave
sbb
mov
xchg
std
ss
add
add
sbb
xor
pusha
data16
jnp
mov
rclb
add
pop
sbb
mov
inc
cmp
test
xlat
mov
es
pop
stos
mov
ss
inc
movl
adcl
cld
pop
sub
adc
xchg
shl
jnp
dec
clc
sub
in
fs
mov
inc
dec
nop
addr16
aaa
lcall
rol
and
jnp
ret
mov
fwait
out
es
and
inc
sbb
or
adc
mov
es
std
dec
aas
loop
mov
insb
and
loop
and
ffree
jno
xchg
fs
cs
jne
pop
jne
popa
push
mov
dec
jle
mov
or
lret
test
cmp
inc
sti
negl
jp
mov
lret
xor
sub
jne
push
int3
push
sahf
dec
lea
mov
arpl
out
out
divb
adc
jbe
or
or
sub
scas
xchg
sbb
jmp
fcmovnb
push
sbb
cmc
pop
or
xorb
push
dec
mov
mov
pusha
dec
mov
in
sbb
inc
lcall
sbb
add
cmp
ret
lret
xchg
xchg
add
pusha
fdivrs
mov
repz
or
int
dec
mov
aad
adc
and
add
cmp
iret
scas
nop
lods
lret
adc
mov
ret
push
loop
dec
or
add
add
subb
sub
xchg
test
fimuls
sbb
pop
mov
cld
adc
cmpsl
cwtl
cmc
syscall
mov
test
inc
inc
lret
addr16
fs
pusha
mov
pushf
std
or
jle
enter
pop
ficoms
xor
cmp
out
movsb
das
add
stc
cmp
and
jle
mov
push
aad
repnz
in
mov
les
jl
insb
adc
ja
ds
loope
dec
movsb
fldln2
mov
and
xchg
push
add
std
fs
dec
dec
mov
in
xchg
push
xchg
jns
hlt
add
incl
push
inc
dec
jmp
or
adc
sub
pop
fnstcw
mov
insb
jmp
test
adc
pop
lret
in
mov
jle
repnz
arpl
push
aam
dec
mov
mov
fwait
inc
aas
add
mov
sbb
popf
outsl
aam
movsb
adcl
nop
or
orl
xchg
cmp
sub
mov
and
mov
push
lock
inc
shll
pop
mov
fistpl
data16
addr16
or
dec
inc
inc
stos
imul
jns
push
push
and
inc
imul
inc
iret
in
popa
xchg
sub
test
mov
push
in
lock
mov
jo
icebp
pop
aaa
jmp
sub
dec
lahf
fidivrl
push
and
ret
xchg
mov
add
lods
imul
test
dec
pop
insl
hlt
jns
addb
mov
shlb
mov
mov
pop
in
out
adc
jl
scas
add
sub
sub
je
in
lret
movsb
lock
fdivrl
fimull
lods
shlb
loope
and
in
mov
push
aas
cmpl
mov
and
add
shrb
and
and
jmp
cli
iret
insb
add
movsb
fnstcw
aaa
sti
addr16
out
fidivs
arpl
fiaddl
add
add
sbb
push
into
mov
xor
push
sbb
jle
jge
mov
sub
xchg
mov
jle
dec
int3
pop
pop
mov
sub
cwtl
sbb
fistl
movsl
loopne
fisubrl
mov
scas
xchg
jle
jp
xchg
xlat
cmp
or
mov
popw
jb
clc
mov
fstl
movq
mov
shrl
call
xchg
push
inc
add
aad
mov
into
mov
icebp
or
adc
xor
jg
ret
add
pop
stc
int3
gs
push
bound
mov
cmp
scas
test
jp
ret
fisttpll
fcmove
push
je,pt
pop
adc
ljmp
mov
scas
movsl
and
dec
lahf
enter
daa
pop
and
jnp
cmc
sbb
outsb
ret
pop
cmp
je,pt
and
rclb
push
icebp
imul
push
jle
outsb
in
test
xor
mov
push
mov
repnz
test
push
outsl
push
sub
mov
dec
push
push
sarb
add
scas
xchg
push
les
pop
mov
cmp
pop
pop
mov
mov
popf
xorl
fstp
jnp
add
sbb
xchg
mov
stos
cmp
lcall
lds
sbb
enter
ljmp
sbb
outsl
pop
fcompl
scas
lahf
out
mov
std
mov
sar
hlt
nop
xor
les
sub
cmp
mov
xchg
sbb
clc
movsb
mov
popf
and
test
or
pop
lret
ret
mov
mov
ret
sbb
mov
sarb
push
repz
cmp
xlat
jae
es
aas
or
pop
xchg
dec
inc
andb
nop
mov
pop
sahf
push
hlt
loope
lea
mov
push
mov
mulb
mov
xor
out
ficompl
push
adc
adc
xlat
mov
adc
pop
and
inc
dec
push
lret
push
xor
cmc
pushf
outsl
mov
xchg
add
mov
cmp
xchg
ljmp
pop
stc
xlat
cmp
xor
jnp
sub
aas
xchg
xor
cmovl
add
rolb
adc
and
insl
and
stos
push
ds
es
lock
push
dec
pop
mov
dec
jmp
add
stc
enter
xor
adc
jle
jp
std
dec
push
mov
movb
xor
notl
push
mov
jg
icebp
inc
dec
wbinvd
push
cwtl
mov
sbb
jecxz
jb
jecxz
daa
sbb
jp
mov
mov
pop
imul
jmp
inc
or
jg
xor
rcrb
sbb
ret
shrb
or
mov
ret
jecxz
push
fbld
adc
inc
mov
into
pop
out
push
out
sti
pop
outsl
inc
sub
rolb
push
mov
and
bnd
mov
lods
xchg
sbb
data16
sub
lods
cltd
mov
fdivrs
mov
aad
cmpsl
sahf
and
shlb
lcall
pop
jmp
mov
fyl2x
movsl
mov
cmpsl
pop
sbb
mov
inc
int
and
iret
daa
jo
xor
das
jae
in
mov
pop
loop
enter
mov
out
or
int3
push
fsubrs
jns
cmp
scas
add
adcl
adc
dec
inc
mov
pop
rol
mov
lcall
pop
jge
es
jne
int3
fsts
mov
or
movsl
dec
aam
imul
aad
xor
dec
sbb
pop
and
jecxz
push
jae
gs
into
add
jp
jb
add
mov
pop
jns
xlat
jbe
and
mov
push
xchg
clc
cmp
lock
mulb
inc
add
mov
ret
shlb
add
es
psubw
gs
shll
pop
rolb
enter
dec
bound
add
adc
in
and
shlb
ror
lret
inc
leave
pop
or
cmp
ret
andl
inc
popf
xor
xor
pop
cli
stos
fsts
dec
enter
pop
xchg
or
or
cmp
mov
mov
cmpsb
pop
fmull
out
sbb
repz
inc
imul
add
add
add
rol
mov
add
pop
stc
and
jmp
jae
mov
stc
mov
sbb
pop
jae
push
sti
xchg
clc
adc
das
mov
pusha
out
pop
sti
cs
mov
insb
ss
in
test
add
adc
icebp
mov
lds
mov
and
xchg
push
test
push
in
xchg
mov
dec
pop
mov
xor
and
fstpt
mov
mov
mov
jp
ror
in
mov
cld
xchg
sbb
scas
inc
loope
add
or
ss
lahf
in
inc
cmc
sub
out
and
adc
imul
fcomp
push
test
insl
fbstp
call
popf
lret
repz
movsb
test
stos
test
xor
daa
and
lahf
das
mov
cltd
scas
adc
lods
mov
ss
xorb
les
lcall
mov
jne
and
lret
add
mov
daa
shlb
ja
xorl
mov
rcl
popa
sub
sbb
pushf
lahf
push
xchg
lods
push
jp
test
jl
and
stc
sbb
sahf
in
arpl
adc
push
call
mov
iret
xchg
fdivrs
popl
push
sub
xchg
pop
test
add
xchg
cmp
xchg
out
in
pop
enter
or
sbb
mov
out
sub
cs
pop
mov
push
jbe
fcompl
xlat
fwait
test
out
pop
push
int3
ret
xor
arpl
mov
jb
cs
lcall
mov
inc
mov
sbb
sub
hlt
or
jne
fwait
lea
mov
pop
jg
test
xchg
xchg
imul
mov
ret
in
sbb
outsb
sub
cmpl
xchg
rcrb
in
jp
xchg
push
mov
adc
push
aaa
mov
popa
test
es
movsl
jns
push
icebp
bsf
stc
inc
jge
call
pop
in
sbb
icebp
mov
mov
pop
mov
jmp
add
loop
adc
dec
push
pop
orl
mov
mov
xchg
push
mov
sub
ret
in
push
xor
ja
dec
int
sub
rclb
fnstcw
fmul
adc
mov
jp
scas
mov
and
dec
aad
dec
fs
clc
pop
mov
xor
push
push
cwtl
test
sbb
mov
or
aas
pop
jmp
push
pop
mov
test
imul
insb
stos
inc
jmp
push
push
mov
mov
out
fdivrl
cwtl
lret
inc
inc
and
scas
into
insb
into
xchg
sub
jnp
in
mov
cld
jae
out
inc
gs
test
sbb
sub
dec
cltd
dec
popa
sub
inc
push
in
aas
cmp
loope
hlt
divb
mov
add
mov
std
cmpsl
mov
aam
mov
cs
inc
mov
gs
call
jno
pop
imul
inc
mov
jl,pt
ret
rcr
jle
jb
mov
cmp
ret
push
clc
inc
push
out
lcall
pop
sub
xor
inc
mov
insl
sbb
or
out
sbb
pop
in
cmpsl
fdiv
cmp
sub
pop
imul
pop
pop
add
adc
sbb
cltd
xchg
mov
jmp
sub
sub
loopne
es
enter
mov
call
dec
sub
sub
insl
stos
xchg
stos
test
push
mov
and
clc
dec
cmpsb
jle
add
mov
push
scas
aam
or
aad
inc
pop
stc
mov
arpl
inc
push
jno
add
jbe
in
cltd
aad
popa
jo
pop
dec
sub
repz
cmp
popf
fsub
roll
test
les
rcll
flds
pop
add
push
js
xchg
lds
popa
into
push
add
xor
out
std
adc
add
scas
lcall
cwtl
fwait
sub
xchg
inc
xor
out
lods
test
cmpsl
stos
jl
popa
ljmp
jno
pop
adc
dec
idivb
test
sbb
jge
cwtl
popf
addl
xchg
arpl
push
and
aam
mov
stc
pop
adc
out
out
mov
xchg
sbb
cmc
cmp
add
add
add
scas
lret
xchg
and
pop
in
adc
test
nop
mov
lods
push
xor
stos
dec
lds
xor
mov
sub
stos
pop
hlt
adc
add
jns
xchg
pop
mov
mov
add
inc
repnz
adc
mov
mov
mov
xchg
js
nop
mov
adc
mov
je
notb
hlt
and
mov
out
je
jbe
nop
adc
jae
jp
dec
bound
xchg
lock
incb
pop
cmc
jnp
pop
ret
fildl
or
lret
in
inc
ss
and
test
icebp
pop
nop
int3
daa
sbb
in
or
scas
sub
sysexit
adc
mov
cwtl
jns
cmp
out
jb
pop
add
nop
xlat
leave
bound
ret
pop
or
test
adc
ljmp
nop
js
xor
and
mov
enter
ja
sub
insl
lea
jo
sub
idivl
xor
decl
mov
popf
fstps
test
sub
adc
sbb
movsl
sti
insl
add
lret
cmp
xchg
mov
mov
mov
jg
int3
sbb
pushf
orl
imul
jge
shrb
sub
fdivr
jno
xor
scas
movaps
in
xchg
mov
pop
stos
in
fnstcw
mov
dec
pop
adc
repnz
stos
inc
fcomps
or
lcall
aaa
adc
stos
fdivr
iret
aam
popf
jbe
insl
jl
jge
nop
mov
mov
notl
das
and
or
andl
push
jecxz
pop
lods
jmp
ss
inc
cmp
mov
rclb
jne
js
scas
divb
icebp
push
movl
rorl
aam
xlat
inc
enter
repz
das
adc
lahf
sahf
into
mov
inc
cltd
jge
mov
adc
cmp
cmp
test
mov
enter
outsl
mov
adc
pop
movsl
add
xor
add
gs
mov
xor
add
popf
clc
cmp
je
iret
divl
popa
fsubrl
mov
adc
or
push
add
and
andl
lods
pop
ss
divb
and
cmc
add
aaa
ds
test
mov
aas
jo
outsl
jmp
icebp
push
call
pushf
push
dec
mov
pop
dec
or
aaa
in
add
mov
test
cltd
repz
xor
inc
mov
ret
shlb
xor
pop
addr16
or
xor
adc
and
test
inc
int
mov
dec
fucomi
inc
rorl
sbb
outsl
xchg
lahf
xchg
xchg
sbb
in
scas
ss
mov
cs
inc
jmp
cmp
pushf
daa
adc
or
je
add
mov
push
jmp
icebp
or
push
pop
pusha
popa
loopne
xchg
les
bnd
mov
push
fdivrl
sub
push
aam
mov
jns
xlat
push
repnz
outsl
xor
addr16
jns
cmp
mov
fsubl
push
les
push
jecxz
cltd
lea
pop
in
push
cmpsl
imul
pop
and
cmc
je
inc
xchg
arpl
loop
pop
pusha
xor
inc
add
xor
lds
in
popf
and
dec
pop
mov
sub
or
dec
into
sub
cmovle
adc
leave
pop
hlt
lret
inc
mov
ret
jne
jo
outsb
aas
push
xor
adc
imul
sub
mov
in
cmp
and
jno
loop
sbb
lds
xchg
sahf
rol
les
rolb
test
add
xchg
and
aad
mov
lds
loop
cmpsl
xor
add
sub
pop
push
sbb
repz
lods
fistl
and
stos
adc
mov
add
dec
sub
shld
or
mov
push
scas
cmp
es
xchg
bound
or
shlb
and
mov
push
mov
mov
cmpsb
push
lcall
pusha
push
push
cmp
mov
add
xchg
jb
addr16
adc
jnp
jge
xor
adc
dec
negl
mov
mov
inc
add
clc
add
add
push
ja
cmp
xchg
mov
inc
das
fmull
cwtl
xlat
mov
jl
mov
cltd
jb
or
loope
movsb
mov
and
and
insb
iret
hlt
push
and
cmc
jmp
rcl
out
pop
in
fisubs
fidivl
or
mov
les
scas
sbb
fcompl
adc
insl
xor
mov
cli
cmp
sahf
mov
hlt
xchg
dec
pusha
jge
jnp
cmpsb
into
loope
inc
rclb
and
fwait
les
sub
sbbl
jg
xchg
cs
test
sub
cltd
push
movsl
sbb
stos
movl
dec
outsl
xchg
add
push
push
and
push
add
cmp
call
negl
xchg
dec
and
enter
lret
adc
adc
cmpb
movb
mov
aam
pop
mov
adc
pop
mov
dec
and
mov
stos
cmp
push
jp
call
or
sbb
inc
xor
pop
xchg
jl
popf
or
jno
cmp
pop
add
movsl
sub
pop
sub
mov
loope
inc
out
xchg
inc
push
cmpsb
jno
or
add
mov
xorl
sub
aas
push
add
popf
fsubs
into
lret
mov
pop
in
mov
adc
xorb
pop
test
dec
inc
dec
das
inc
xchg
pop
mov
ljmp
and
mov
sbb
xchg
out
push
jmp
xor
jecxz
push
dec
insl
jp
lcall
es
adc
mov
inc
sar
cmp
fldt
xorb
xor
mov
mov
cmp
addr16
cli
shll
clc
cmp
jne
ljmp
add
cmp
xorl
cs
pushf
jg
jae
adc
nop
ret
add
pop
xchg
and
fs
jmp
pop
inc
test
les
leave
lea
xlat
add
push
pop
dec
lea
mov
insl
pop
scas
aas
movsl
outsb
rclb
jg
xor
loop
loop
incb
mov
adc
insl
cmp
fbld
test
jne
push
xchg
les
mov
lcall
or
jno
or
fs
jecxz
nop
loopne
cmp
lcall
push
dec
out
and
mov
lods
out
sbb
mull
mov
or
sub
insl
add
int
nop
lret
xchg
fildll
and
mov
push
leave
orl
add
hlt
fnsave
and
out
or
mov
sub
aam
xchg
loop
fwait
jmp
sub
enter
lds
ret
lret
inc
mov
xchg
movsb
cli
arpl
iret
pusha
sti
imul
jnp
cltd
xor
imul
jne
fdiv
lret
repz
fcoml
push
cs
imul
into
int3
stos
inc
stos
pop
outsl
aam
std
loop
nop
repz
ljmp
pop
mov
ret
xchg
shll
out
dec
or
cmp
inc
and
nop
lea
rorb
fcmovu
imul
jl
push
out
cli
pop
outsl
jg
in
mov
jp
dec
mov
in
cmp
mov
or
call
nop
or
cmp
dec
dec
sahf
hlt
add
mov
pop
outsl
xchg
arpl
aas
mov
inc
dec
out
push
push
push
mov
dec
mov
es
inc
sbb
rol
cli
pop
adc
pop
bswap
fcomps
lock
stc
in
mov
call
and
xlat
and
or
mov
mov
push
cld
enter
mov
movsl
sbb
and
inc
pop
ret
ds
xor
imull
mov
xor
mov
jbe
xchg
pop
xchg
mov
icebp
mov
inc
sub
jge
ljmp
pop
inc
add
or
jecxz
and
sbb
das
pop
cmp
jmp
bound
mull
ror
rcr
stos
fnstenv
test
adc
repnz
push
test
loop
sub
inc
cmp
mov
inc
in
test
pop
movsl
xlat
jmp
jecxz
in
out
int3
stos
fldl
and
decb
pop
addr16
pop
pop
iret
in
cmpsl
inc
aam
inc
sahf
sub
and
icebp
and
mov
mov
cld
mov
pop
add
push
mov
sbb
in
mov
fdivp
cld
js,pt
out
daa
sub
add
add
add
in
daa
push
xchg
dec
ficoml
mov
loop
imulb
rdtsc
and
mov
call
test
ret
jecxz
inc
movsl
ljmp
sub
arpl
shl
orl
jb
mov
xchg
aad
sbb
inc
cld
add
pop
xchg
rorl
cmp
nop
les
test
frstor
subb
test
hlt
fwait
adc
shrb
push
dec
test
fs
data16
shlb
jae
mov
je
loopne
lret
mov
pop
repz
sbb
stos
fistl
or
lret
dec
push
fdivrl
lock
mov
jge
add
xchg
out
mov
mov
cmp
in
dec
lods
dec
xchg
sub
movsl
push
push
adc
fiadds
sub
cmpsb
dec
pop
mov
mov
ret
mov
pop
mov
cwtl
add
loope
xor
mov
aaa
repnz
or
sbb
test
sub
mov
dec
lods
cltd
mov
cmpsb
pop
daa
adc
dec
dec
imul
mov
xorb
mov
gs
rcll
lock
cmp
bound
inc
mov
inc
xor
lret
mov
mov
add
jnp
push
xlat
fwait
lds
adc
jle
jmp
xchg
fbld
and
adcl
pop
lret
sbb
pop
push
push
test
test
jnp
gs
add
jl
adc
inc
and
ret
push
adc
pop
rcll
lahf
icebp
add
or
jns
cmc
jne
push
inc
outsl
mov
and
xor
cmpsl
ljmp
les
aaa
test
sub
out
and
sub
jns
or
mov
loop
insl
fnstcw
cmp
rclb
mov
imul
int
mov
sub
mov
sub
xor
cwtl
sub
or
xchg
fistps
xchg
jnp
dec
daa
xchg
adc
enter
movsb
pop
inc
cld
pop
inc
sub
pop
add
fmull
and
setl
loop
scas
push
add
pop
xor
sbb
scas
pop
jl
dec
das
jo
sbb
mov
loopne
mov
xchg
cmp
jecxz
pop
sub
lahf
popf
roll
ret
in
pop
scas
push
out
and
mov
mov
sub
pop
adc
pop
ljmp
dec
cmpsb
pushf
stos
and
lcall
loop
int3
or
add
decb
mov
pop
push
add
leave
add
mov
int3
aad
xchg
or
pop
fdivrp
cli
mov
push
es
xor
add
mov
out
in
mov
cmpsb
xchg
xchg
sbb
xchg
ret
das
cmp
insb
outsl
cld
mov
test
imul
push
push
pop
cmc
mov
incl
dec
cmp
leave
scas
mov
orl
xorl
test
out
pop
sub
push
or
sbb
mov
lods
add
push
es
lock
sbb
iret
lods
mov
xor
lods
and
pushf
push
lcall
jae
add
outsb
push
pop
mov
cs
xchg
cmc
shll
mov
jle
push
mov
sub
xchg
scas
dec
movsb
mov
and
add
jnp
or
jp
cs
ja
add
and
les
mov
enter
into
sbb
je
test
lret
and
outsb
jecxz
inc
jno
cltd
inc
and
or
jmp
adc
mov
push
out
test
inc
jg
jbe
push
push
lret
or
inc
stos
dec
push
imul
cmp
or
sbb
lcall
mov
loopne
pop
std
clc
fmul
jecxz
cld
sbb
pop
mov
push
inc
imul
sbb
or
hlt
xor
mov
jnp
mov
outsl
inc
imul
fcmovnb
fisttpll
cs
divb
bswap
outsb
push
das
mov
into
xchg
mov
xchg
cmpsb
mov
cmp
sbb
lock
int3
xchg
pop
rorl
push
pop
xchg
pop
xlat
scas
jecxz
loop
dec
xor
ret
jecxz
mov
lret
dec
cmp
fmulp
and
or
sbb
and
sti
push
mov
std
cli
mov
insl
add
pop
push
dec
cmp
cmpsl
mov
es
or
pop
mov
jg
adc
jmp
sbb
inc
xor
push
je
jnp
xor
jg
cltd
sbb
fisttpll
add
add
add
pop
call
popf
mov
mov
sahf
xor
pop
fbld
aaa
addb
jg
pop
xlat
ss
cwtl
push
outsl
shlb
js
push
sbb
out
fs
lret
inc
incl
or
cmp
add
test
cli
or
cmp
sub
shrb
rorb
fstpl
pop
mov
xor
cmp
xor
in
mov
fdivl
ficomps
pop
and
hlt
out
daa
mov
pushf
sub
fisttps
cld
jp
loop
push
mov
sub
dec
or
mov
xchg
jle
pop
ljmp
mov
dec
mov
adc
mov
in
arpl
int3
xchg
fimuls
cmp
push
push
ret
cmp
cmp
xchg
sbb
repz
in
pop
bound
xchg
mov
push
and
je
mov
dec
in
sarl
ds
pop
add
gs
into
cld
out
cmp
test
push
std
push
bound
xchg
mov
push
fs
xlat
add
fistpll
mov
cmc
fiaddl
pop
das
dec
arpl
frstor
jecxz
sbb
sbb
mov
popf
out
inc
sub
loop
lcall
cmpsl
lcall
mov
xchg
sbb
xchg
lds
rorl
outsl
mov
and
adc
mov
sub
popa
adcb
jnp
es
lods
mov
aaa
xchg
aas
mov
sub
pop
dec
inc
adc
repnz
loope
cwtl
push
inc
xchg
addr16
xchg
mov
cwtl
push
cld
push
jge
jns
xchg
pushf
adc
mov
dec
pushf
push
shlb
pop
cmp
adc
pop
scas
ffree
testb
sub
or
es
scas
sbb
stc
movsb
inc
arpl
sub
mov
ret
in
mov
mov
adc
inc
scas
js
fadd
aam
jp
int3
test
loop
test
dec
dec
xor
orb
into
push
dec
xor
ret
add
jecxz
pop
ds
xchg
daa
hlt
push
in
in
inc
mov
out
fstpt
inc
xchg
out
dec
incl
popf
jno
ja
lods
mov
or
das
xchg
jge
adc
mov
pushl
dec
aaa
adc
leave
addr16
out
bound
sub
adc
xor
xor
stos
xchg
dec
sbb
push
scas
lea
ret
mov
sbb
pop
enter
insl
sub
adc
repz
adc
sub
cmp
sarb
push
mov
mov
mov
stc
push
jo
or
or
and
xor
jae
mov
sub
add
fisubl
ret
mov
inc
ljmp
test
dec
dec
leave
dec
icebp
jae
mov
sarb
jmp
call
mov
scas
jl
into
pop
aas
outsl
nop
push
aam
cs
xor
pop
subb
cli
pop
testl
xchg
shlb
jge
pop
add
mov
cmc
sub
jmp
and
mov
fbld
in
sub
sbb
cmp
sub
fistpll
cmp
rolb
sub
dec
test
xchg
adc
lods
xor
sub
push
insb
xlat
dec
mov
push
popf
dec
dec
loop
mov
cmp
les
js
in
cmp
mov
das
cmovge
inc
test
gs
mov
xor
pop
xor
mov
pop
push
inc
stos
cmp
push
sbbb
adc
xchg
mov
mov
into
jo
mov
mov
xchg
cs
mov
pop
fldenv
push
pushf
xchg
add
xor
faddp
fwait
mov
inc
out
push
subb
sahf
stos
fdiv
insl
inc
inc
std
sub
arpl
inc
mov
sub
push
pusha
incb
push
push
mov
imul
fidivrs
cwtl
jns
cmp
clc
rcrb
mov
pop
rclb
in
pop
or
scas
xchg
add
vmwrite
push
out
out
mov
ret
pop
jo
loope
cmp
adc
push
scas
jnp
ror
scas
mov
pop
mov
xchg
pop
cmp
xchg
jmp
sub
aam
lea
aad
add
clc
add
add
lds
lods
lret
cmpsl
hlt
scas
push
aas
les
adc
mov
pop
mov
xchg
jle
adc
arpl
sbb
mov
pop
lods
cmp
cmp
lahf
mov
inc
push
pop
fs
inc
popf
shrb
stos
aam
add
adc
loope
pushf
add
sub
adc
add
rcrb
sub
hlt
lcall
das
push
subb
test
xchg
cmp
ret
insb
xor
das
push
je
mov
xor
ficomps
jno
pushf
or
xlat
aas
jmp
xchg
xor
popf
mov
sbb
aam
push
cmp
stos
insb
xchg
lcall
xchg
inc
not
dec
pop
fwait
xchg
xor
mov
push
out
push
insl
sbb
dec
jne
xor
dec
mov
cwtl
jl
inc
lea
mov
lahf
adc
mov
out
and
dec
scas
les
xchg
and
repnz
ror
cmpsl
out
inc
cwtl
xchg
aam
push
fbstp
push
popf
jl
pop
iret
fstpl
mov
pop
inc
lea
mov
mov
mov
out
and
jp
push
push
adc
mov
xchg
fwait
adc
ret
stc
sub
daa
rep
mov
mov
mov
xchg
fistpll
sub
mov
dec
fistl
nop
xor
jg
hlt
jno
fisubrs
sbb
pop
pop
cmp
sti
adcl
ja
test
int
addr16
leave
fldl
loope
and
cmpsl
bound
popa
xchg
mov
and
loop
mov
jge
decl
movsb
cwtl
jmp
cltd
pop
sbb
nop
pop
aas
out
repnz
push
jb
lcall
mov
lahf
sub
jmp
aas
lret
pop
outsb
sbb
repnz
test
mov
mov
dec
dec
xor
cs
out
lds
add
imul
movsb
test
imul
push
lock
insl
sbb
adc
cld
mov
add
and
jecxz
push
in
cmc
jb
mov
jp
fiaddl
scas
push
push
enter
sbbb
xchg
jp
mov
rclb
mov
and
popf
dec
mov
data16
pop
loope
arpl
sbb
sarl
popf
mov
in
jle
jnp
push
mov
mov
mov
scas
std
sbbl
cmpsl
repnz
ret
xor
and
aaa
jns
xchg
jne
jge
push
dec
xor
xchg
xor
pop
fwait
push
shlb
pop
pop
push
sub
nop
push
cmp
jb
mov
movsb
test
xchg
sbb
pop
pop
in
ljmp
pop
leave
adc
enter
scas
sub
ja
adc
add
push
mov
insb
jb
inc
jb
pop
scas
pop
pop
inc
cmpsl
sbb
xlat
jne
cmp
mov
fs
cltd
or
movb
sbb
daa
jecxz
mov
xchg
jno
push
rolb
dec
cmc
fwait
jecxz
ret
mul
mov
nop
out
loope
stos
emms
fidivrl
mov
repnz
in
hlt
movsl
push
mov
sti
pop
aaa
push
arpl
js
jge
stos
pop
jae
sub
or
imul
dec
jp
mov
push
and
jl
call
mov
imul
add
inc
repz
sbb
cli
pop
lahf
cmp
lcall
lret
pop
int3
lock
lret
xor
xchg
iret
xchg
fnstenv
in
adc
mov
daa
mov
cmp
or
inc
push
and
jbe
push
push
js
push
push
sahf
inc
sbb
stc
add
pop
ss
test
jbe
or
and
push
mov
xchg
fildll
pusha
movsb
test
idivl
outsl
scas
xor
out
ja
in
aaa
cli
cmp
loopne
xchg
flds
jne
out
mov
and
int3
movsb
sahf
sbb
xor
ret
lods
in
dec
cmp
push
ret
ret
mov
dec
cmp
sti
and
pusha
movsl
bound
jb
mov
jns
jp
jo
push
pushf
stos
in
xchg
mov
inc
cmp
pop
mov
fisubs
add
stos
enter
jecxz
jno
int
adc
mov
adc
mov
lar
mov
fsub
outsb
pop
repnz
lock
sbb
loope
loope
fistpll
xor
pop
movsl
in
push
int
add
clc
add
add
data16
stos
inc
ljmp
insb
push
jbe
sbb
or
xchg
clc
es
es
lahf
mov
xor
xacquire
cmpsl
js
insl
dec
aas
std
and
jo
iret
shrl
push
addb
or
sub
or
leave
xor
xor
in
sbb
xlat
mov
xchg
cmp
imulb
dec
ret
mov
jecxz
test
push
add
mov
dec
insw
inc
int
js
or
mov
inc
cmpl
in
in
aam
push
test
sbb
dec
add
ljmp
cltd
fs
mov
jl
fisttpl
roll
daa
jne
xorb
xorb
aaa
pop
les
leave
jae
inc
push
sbb
mov
adc
ds
mov
inc
inc
mov
and
xor
int3
pop
rorl
jg
imul
loope
adc
clc
pop
sbb
subl
or
mov
jmp
xchg
cmp
les
stos
dec
push
xchg
call
clc
mov
cld
push
lret
xor
into
nop
cld
xchg
inc
cwtl
mov
loope
jo
stos
shl
fildll
cmpsb
out
lods
mov
stc
andb
aad
add
sbb
jl
jns
les
leave
int
adc
pop
add
mov
mov
jl
cld
repz
int3
sbb
mov
sarb
mov
rcr
mov
scas
add
dec
add
sbb
je
push
mov
mov
fnstenv
jle
and
lods
dec
pop
je
add
lret
bound
push
inc
fs
cmp
aaa
iret
sub
stos
es
call
in
clc
xchg
dec
pop
std
pushl
insl
pop
pop
inc
adc
ror
stos
cmp
xor
negl
or
mov
push
adc
aas
aam
and
mov
lea
or
in
daa
xchg
pop
arpl
loope
xchg
cmp
inc
imul
fcompl
sub
lock
jecxz
adc
jecxz
lcall
scas
fst
pop
push
sbb
pop
sti
inc
int3
nop
add
clc
rcrl
xchg
push
rcl
add
fs
or
inc
dec
cmpsb
imul
jle
mov
call
jmp
jne
and
xor
iret
fs
add
mov
jno
or
jb
ss
lods
jno
mov
cmpsl
mov
jbe
mov
shrb
jb
dec
add
lcall
test
pusha
aam
sbb
dec
data16
jnp
ss
cmp
cmp
in
ds
lret
jg
mov
mov
inc
fisttpll
mov
pop
push
mov
bound
xchg
cmp
mov
leave
jmp
xchg
cmp
xchg
mov
imul
hlt
outsb
pop
and
pop
into
mov
dec
dec
scas
mov
or
loope
pop
xor
add
mov
ds
or
inc
xchg
sbb
and
test
int3
enter
rorl
jno
sbb
sbbl
lock
push
rclb
fstps
movsl
lret
pop
mov
shrl
fwait
mov
xchg
aaa
ja
xchg
imulb
out
and
xor
pop
scas
sti
rcrb
in
mov
es
fwait
mov
cmp
jae
jge
sub
loopne
enter
inc
pop
lahf
xlat
insl
mov
mov
xchg
rorl
xlat
jns
cs
addr16
sbb
add
sbb
loopne
das
cli
push
clc
mov
mov
jmp
fcmovnu
movsb
cmpsl
jmp
pop
inc
scas
hlt
add
in
inc
jl,pt
mov
xchg
faddl
push
clc
sub
cmp
xchg
out
into
out
pop
scas
mov
clc
mov
adc
xor
xor
mov
orl
push
jp
mov
sbb
inc
jae
mov
out
mov
fwait
int3
loope
cmp
sub
cs
xlat
int3
push
push
jg
or
imul
out
mov
insb
mov
mov
mov
xchg
xchg
pop
sti
daa
bound
jnp
mov
jle
push
lret
test
loope
adc
cld
iret
in
mov
decb
push
mov
ret
xchg
push
cmc
dec
sbb
jae
notl
mov
clc
sbbl
add
inc
add
movsb
add
xchg
out
notl
jp
mov
add
add
add
and
mov
test
jmp
in
inc
jmp
sti
ss
jne
movsb
arpl
push
lods
mov
dec
loopne
stc
lea
jle,pt
insl
stc
mov
imul
sti
ss
jmp
push
lock
pop
adc
or
add
bound
je
sub
popf
jg
cld
cld
sbb
fidivrl
lret
cmpl
mov
fldenv
jns
arpl
filds
scas
or
test
add
fildl
mov
inc
out
aas
pop
or
aaa
pop
mov
insl
ret
cmp
mov
rcl
xor
in
push
mov
jns
adc
imul
rorb
lret
jmp
push
test
pop
js
push
xchg
stos
and
lcall
fcoms
into
xchg
push
iret
push
fnstcw
jnp
in
xor
movsl
shrb
push
loop
les
xorb
test
pop
int3
mov
insl
push
lods
sbb
lea
push
mov
inc
aas
icebp
fldl
adc
push
lods
out
rcl
and
and
sub
ss
push
mov
dec
push
sbb
mov
jecxz
movsb
add
push
enter
jb
out
jns
sub
call
xor
out
add
pop
imulb
cmpsb
arpl
mov
popa
jns
lahf
xchg
jmp
lods
clc
ficoml
pop
sbb
shll
inc
inc
hlt
subl
jg
mov
mov
or
stos
adc
insb
iret
adc
add
add
sahf
insb
jns
mov
cltd
icebp
imul
mov
adc
jg
js
xchg
push
out
cmp
mov
lods
dec
test
jecxz
and
lds
loopne
test
mov
mov
fmull
mov
fdivl
add
cmp
cmpsl
repz
iret
and
mov
cld
jno
ds
pop
pop
jmp
push
outsb
adc
sbb
inc
mov
fisubl
push
xchg
jmp
addr16
sbb
push
mov
inc
pop
pop
pusha
sbb
adc
cmpsl
cmc
clc
sti
mov
shlb
fs
mov
cltd
push
test
xor
insb
es
dec
es
adc
mov
dec
inc
dec
insl
xor
xor
sub
popa
pop
inc
inc
ds
fsubrs
mov
popf
xor
int
icebp
jmp
cmpsb
test
add
imul
xlat
outsl
gs
rcrb
ret
inc
inc
das
mov
imul
es
fisubrs
fs
roll
pop
in
hlt
shll
xor
daa
lahf
adc
ret
sub
lea
lods
xchg
jle
push
les
dec
int3
push
push
roll
push
pop
sti
int3
dec
jge
inc
sbb
popf
cli
popa
push
dec
sti
popf
lea
in
test
adc
fistpll
xor
rcrb
jno
sbb
test
pop
das
xchg
jge
jecxz
sub
cmp
test
test
imul
sbb
and
mov
incb
mov
jne
jl
add
push
rol
push
in
xor
mov
sub
fidivrs
sbb
jno
fisttpll
xchg
out
and
psubusw
xor
shr
or
cli
or
mov
jnp
xlat
fdivr
scas
lock
pop
cmc
inc
or
inc
stc
pushf
add
push
add
xchg
push
stos
mov
into
dec
sub
iret
cmp
scas
add
lahf
divb
dec
outsb
rcrl
lods
pushf
xor
mov
sbbb
cmp
loop
jns
loope
xchg
xor
mov
push
ret
int3
lea
mov
lret
push
aam
out
mov
clc
xor
aad
mov
add
js
jo
ret
pop
ficoms
sub
rcll
cmp
aaa
push
xchg
cmp
pusha
fs
scas
fcoms
les
push
std
jle
jns
dec
popa
js
out
clc
and
je
cli
fsubrl
and
dec
std
cmp
jge
push
sahf
test
aad
in
push
pushf
cmp
mov
popl
jbe,pn
xlat
movsl
sarb
mov
sbb
cmpsb
add
lods
mov
pop
push
filds
mov
mov
push
or
xchg
inc
mov
orb
pop
inc
xchg
out
ret
rcr
js
mov
fbld
inc
icebp
pop
sub
movsl
setns
xor
add
and
cmp
loope
pop
ds
add
cmp
add
add
repnz
adc
xchg
sub
dec
mov
cmp
ror
out
outsl
adc
cld
ss
push
add
inc
in
pop
xor
dec
jg
mov
aas
xor
movsb
add
icebp
mov
and
fstl
popf
xor
sub
popf
push
lods
in
mov
mov
fsts
ljmp
lds
push
imul
pop
or
std
roll
repnz
jmp
push
jecxz
aas
mov
sub
jae
add
movsl
ret
cltd
jbe
sbb
or
push
jnp
outsb
mov
popf
xchg
xor
stos
push
xor
in
das
cmpsl
push
das
das
sahf
clc
cmc
sbb
adc
fwait
adc
jecxz
pusha
cli
fidivrs
sbbl
pop
inc
pop
insl
mov
cwtl
push
push
int
sarl
lock
lcall
and
mov
cmp
jmp
cld
pop
lds
shrl
insl
sbbl
jbe
xchg
xchg
out
incl
mov
xor
shlb
bound
jl
incl
insb
cmp
or
add
shlb
lea
jnp
lcall
imul
cltd
stos
mov
cld
test
pop
push
or
sbb
andl
into
cmp
pop
lods
iret
orl
mov
or
xor
mov
rorl
cmp
outsl
push
push
pop
in
mov
dec
mov
loop
dec
movb
int
in
scas
lret
mov
cltd
scas
lock
jo
pop
in
lds
nop
lret
push
sbb
dec
insb
jne
cmp
cmpsb
pop
adc
cmp
dec
rorl
xchg
stc
or
jecxz
sahf
inc
xchg
fwait
in
fbld
jmp
loope
cmp
dec
fxam
jns
out
lock
movsl
mov
mov
xor
sbb
dec
jo
inc
add
arpl
sbb
fwait
push
cmpsl
daa
mov
aaa
xchg
lret
dec
test
mov
push
out
repz
ljmp
or
xchg
mov
dec
sbb
mov
test
sbb
test
add
inc
cmpsb
aad
leave
inc
loopne
fwait
idivl
fidivrs
jo
and
negl
adc
inc
imul
xchg
out
fnstcw
cmp
xchg
xchg
in
ss
mov
ficompl
mov
xchg
xchg
lock
push
sar
loope
loop
mov
pop
scas
ficompl
adc
jb
mov
push
out
adc
push
mov
xchg
dec
ds
dec
add
ss
lods
ret
popa
or
imul
sahf
xchg
and
cli
push
cmpsl
add
jge
ud2
dec
sub
fcmovnbe
sub
rclb
out
mov
call
insb
flds
sahf
dec
and
xor
stos
in
repz
std
jg
push
jno
push
int
xchg
pop
and
stc
sub
aam
push
rcrb
pushf
lret
loope
sbb
adc
mov
sub
lret
xchg
push
aad
dec
mov
add
xor
lret
adc
dec
bound
xchg
mov
pop
xor
movsb
nop
dec
add
stos
popa
pop
pusha
mov
inc
and
loopne
fnstenv
testl
std
jo
out
sarb
adc
dec
jl
adc
inc
ljmp
ljmp
stc
push
or
cmp
push
ljmp
aad
push
leave
call
aaa
add
aas
sbb
roll
lret
ja
pop
loop
add
mov
xchg
shrl
inc
add
test
add
stos
les
jno
xchg
cmp
jle
testb
mov
push
or
xchg
test
or
mov
sti
mov
push
jp
push
and
xor
jmp
lods
stos
or
test
cld
sbb
in
int3
loope
pop
outsl
mov
outsl
mov
or
adc
inc
int
fs
cltd
rclb
mov
loope
mov
inc
xchg
sarl
dec
cmp
jb
pop
dec
cmpb
cwtl
adc
adc
xchg
push
push
nop
add
xor
scas
gs
movsb
ja
jo
test
mov
ljmp
into
out
add
stc
inc
outsb
mov
mov
jecxz
repz
nop
mov
clc
add
add
xor
scas
and
inc
sarl
insl
std
cmpsb
es
dec
push
mov
das
fs
pop
js
pop
mov
push
mov
lods
dec
mov
mov
jge
sub
cmp
mov
stos
mov
sbb
test
ljmp
and
ss
push
rcr
out
call
jge
popa
jp
mov
cmp
mov
sub
fadd
out
sub
stc
out
inc
cmp
fsubr
inc
out
outsl
test
loope
divl
movsb
pop
cmp
scas
imul
jno
dec
sarb
test
inc
push
pop
lea
mov
insb
sti
lret
mov
mov
and
popf
outsb
nop
rorb
mov
sahf
adc
jb
pop
push
push
inc
mov
cmp
push
and
push
xchg
hlt
dec
mov
dec
and
int
push
es
jmp
cli
or
mov
sar
mov
fadd
mov
ret
sbbb
fstl
fildl
bswap
out
xchg
cltd
outsl
lea
js
mov
jle
or
dec
cmp
xchg
jge
ret
loop
inc
or
xchg
btr
add
mov
dec
add
pop
and
icebp
jge
cmpsb
push
in
into
jne
cmpsl
aaa
test
je
pop
push
dec
mov
in
aad
test
cmp
scas
fwait
lods
cltd
mov
dec
mov
or
sbb
aad
icebp
fcmove
push
add
sarw
push
lret
lods
pop
mov
cmc
subb
in
iret
lcall
sbb
jns
ds
repnz
sbb
ret
jno
sti
fisubs
andl
dec
lods
test
xor
int3
jge
pop
and
jp
aam
mov
mov
jl
iret
lock
clc
mov
mov
sti
scas
insl
add
popa
inc
pop
test
aaa
lods
arpl
neg
cmp
lcall
cmp
lret
mov
pop
addr16
dec
aaa
pop
push
das
sub
popa
sbb
pop
mov
ja
loopne
mov
push
mov
ret
shl
and
mov
cmc
and
sub
out
xor
xorb
outsb
movsl
fcoms
cli
arpl
fidivrl
ret
dec
leave
je
lock
sbb
add
push
shll
dec
mov
cmpsb
das
mov
aam
cmp
mov
aad
or
add
pop
adc
cli
cmp
adc
cmp
xchg
and
int
in
xor
ds
add
fs
cmp
inc
push
int
xchg
call
imul
repnz
jb
stos
pause
mov
pushf
cmpsb
cltd
fidivl
sub
fsubrs
lods
movsl
loopne
jp
pop
dec
cmp
pop
stos
pop
hlt
addl
bound
in
ficomps
fists
pop
mov
out
fdivrl
addr16
cmp
xchg
cmp
dec
fcoms
subb
cmp
out
movsl
cli
or
in
mov
imul
xchg
jo
leave
daa
mov
rcrb
fidivrs
call
dec
lods
sub
adc
imulb
pop
cmp
addr16
test
pop
std
add
mov
push
ficoml
push
ds
push
mov
adcl
jae
dec
jmp
scas
add
mov
mov
mov
and
sarb
addr16
xor
insl
xchg
out
sbb
xchg
insb
subl
push
or
cs
mov
inc
add
xchg
adc
loopne
add
adc
or
or
mov
mov
jo
icebp
adc
mov
loopne
iret
push
xor
mov
loopne
mov
pop
xor
cmp
scas
jmp
jne
adc
mov
cltd
ds
movsl
lahf
arpl
cmpsb
push
imul
xor
aaa
loop
mov
cwtl
mov
arpl
outsb
fsub
ljmp
push
sarl
data16
dec
push
and
cmpsl
in
push
pop
stos
pop
mov
xchg
add
or
pop
gs
shlb
repz
dec
int
mov
cs
shlb
fiaddl
and
aad
imul
clc
mov
pop
fcoms
lds
arpl
push
mov
xchg
sbb
scas
and
out
cmp
xor
cmp
jp
jmp
in
mov
mov
xchg
jge
jnp
adc
push
push
cmp
cmp
push
push
or
loopne
mov
add
add
add
mov
xchg
pop
fsubl
aad
lcall
sub
js
stos
adc
out
int3
jae
sbb
out
mov
inc
adc
cmpb
xor
je
lcall
fisttpl
cmp
mov
test
mov
inc
jnp
movsl
or
xlat
adc
pop
stc
jle
ret
sti
cmp
cld
or
cltd
adc
addl
notl
cmp
dec
add
outsb
test
mov
call
pop
mov
rcll
es
sbb
outsl
push
pushf
and
mov
or
dec
pop
pop
or
leave
test
fdivl
adc
insb
cmp
int
mov
pop
cmpsl
mov
xchg
stc
jns
sub
stos
add
sbb
and
test
loop
aas
aam
mov
pop
js
int
out
loope
or
mov
sub
enter
movsl
iret
push
sahf
fwait
add
out
icebp
jmp
std
pop
jp
test
insb
sub
pop
imul
stos
stos
movsl
jne
mov
xchg
mov
push
jecxz
outsl
add
fsts
push
sbb
jno
push
dec
sbb
loope
or
cmpsl
dec
lds
stc
fldcw
push
push
jmp
aad
call
std
aas
mov
add
inc
push
ja
in
cli
push
push
mov
rorb
repnz
add
popf
dec
lcall
inc
dec
scas
repnz
lret
cmp
push
shlb
int3
in
gs
fsubl
fprem1
push
sbb
add
and
sahf
std
jns
sub
add
adc
pop
ret
stc
jl
cmp
xchg
lds
and
fnstenv
cli
roll
inc
fnstsw
mov
test
in
bound
ds
cld
clc
mov
addr16
xchg
shrb
push
cmpl
in
add
popa
xchg
push
adc
push
jb
xchg
imull
test
adc
leave
aas
stos
out
testl
sarl
jnp
aam
scas
or
int
addr16
and
imul
mov
daa
std
addr16
mov
rorb
push
loope
xor
cwtl
dec
jo
sbb
and
insb
adc
aad
xor
loope
test
out
cmc
mov
mov
fwait
pop
nop
push
roll
xlat
test
call
repnz
push
fldz
mov
jl
push
cmp
push
mov
and
movsb
jae
fwait
ds
adc
mov
das
mov
add
push
dec
sbb
rcll
test
insb
in
stc
xor
shrb
jmp
dec
xor
aad
shl
rcr
sub
test
cs
loopne
and
inc
daa
pop
aaa
cmpl
jae
sub
rolb
test
inc
sub
xor
xlat
pop
mov
aas
subb
mov
aas
idivl
mov
jno
jno
sub
out
adc
pop
fsubl
int
and
or
cli
test
mov
jb
add
daa
cmp
xchg
add
sbb
jg
add
jg
mov
pop
insb
adc
xchg
add
xor
xchg
movsl
push
mov
jns
scas
dec
aas
add
mov
mov
insb
mov
lea
jle
jg
mov
inc
xor
das
xchg
lock
scas
sbb
in
push
lcall
add
inc
mov
ret
or
xchg
pop
aaa
push
movsl
sub
mov
mov
pop
shr
add
add
dec
test
lock
inc
orb
adc
inc
mov
mov
movsl
es
lahf
loopne
ss
and
in
jmp
sbb
leave
cmp
push
fwait
rcl
fildll
or
stos
je
xchg
and
and
adc
mov
int
in
je
loope
jg
es
in
xorl
addr16
fwait
inc
inc
dec
jmp
sub
shlb
lret
dec
jnp
push
jg
xor
mov
fiadds
out
xor
ss
sub
jg
xchg
in
xchg
movsb
mov
jl
outsb
add
clc
add
add
push
mov
add
cmp
pop
cmp
dec
mov
xlat
nop
xor
test
lods
xchg
outsb
cld
dec
adc
cmp
imul
jb
data16
adc
sbbl
mov
mov
aas
bound
cmc
xlat
push
xor
add
push
sbb
or
call
sar
repnz
ficompl
fstpt
cmp
push
inc
push
ret
sarl
inc
fnstenv
xchg
push
and
xchg
adc
sbb
xchg
ret
add
and
or
inc
pop
int
lea
or
mov
sbb
xor
jle
xchg
fnsave
and
push
hlt
mov
sbb
rcr
mov
push
inc
jnp
push
push
mov
das
test
rcrl
mov
sbb
gs
sbb
add
icebp
lods
iret
in
gs
cmpsb
pop
and
int
shlb
rcll
push
cmp
and
add
pop
prefetch
push
adc
gs
add
and
lods
jge
push
sub
movsl
and
lret
jl
js
mov
push
push
das
jnp
mov
push
shlb
out
ljmp
push
test
dec
ja
xchg
aaa
repz
dec
lcall
pop
aad
pop
sbb
push
repz
lret
test
lret
inc
xor
pop
nop
into
testb
push
dec
mov
cmp
xchg
push
push
push
ja
jecxz
loopne
push
push
lret
out
cmpsb
popa
loopne
xlat
imull
lret
mov
insb
mov
push
and
jne
outsb
push
pop
int3
adc
mov
mov
mov
push
cwtl
cmpsb
sub
in
or
push
mov
jmp
or
xchg
sbbl
pushl
mov
aas
decl
adc
or
mov
shl
call
xorb
mov
lcall
sti
xor
cld
push
inc
inc
and
mov
sbb
adc
push
xchg
repnz
sbb
mov
mov
dec
cmp
mov
add
dec
add
xchg
xchg
fwait
sahf
bsf
jo
insb
lods
and
or
push
mov
aas
dec
fldt
mov
pop
std
fimull
jae
jmp
fmuls
int
jp
dec
lds
sbb
stos
js
pop
sub
or
mov
or
pop
xchg
bound
mov
les
xchg
xlat
daa
rdpmc
dec
dec
in
outsl
aas
and
lods
cmp
xchg
lret
jp
push
repz
dec
mov
jg
mov
and
sti
jo
and
xchg
stos
es
loop
add
and
cld
out
aam
pop
push
in
jae
and
ljmp
cmp
or
aas
ljmp
sbb
hlt
pushf
int
in
xor
cli
mov
ret
lods
pop
cltd
fsubl
jb
das
dec
sbb
fcomps
sub
pop
dec
pushf
xor
xchg
xchg
mov
sahf
xchg
jl
out
push
push
push
inc
imul
mov
cmpb
lcall
lret
or
xor
pop
ds
aam
dec
mov
mov
pop
xchg
leave
fcomps
flds
or
shr
xor
lods
xor
fcoml
push
pop
inc
sub
insb
and
cld
cmpsl
aam
in
stc
dec
sub
xsha1
cmpsb
or
xor
mov
push
and
aaa
pop
fcoms
add
repz
mov
push
dec
lds
fnstcw
add
cli
dec
mov
pop
psrlq
jge
mov
iret
push
xor
mov
je
dec
inc
inc
jge
dec
shll
xor
mov
ret
adc
and
aad
cmp
and
mov
push
cwtl
push
xchg
sbb
or
dec
or
dec
cwtl
mov
and
pop
das
sub
ja
fbstp
jmp
sti
cmp
cmp
out
push
jae
add
sbb
xor
faddl
data16
sbb
jo
repz
mov
cmp
pushf
xor
xor
and
test
dec
cmovo
movups
mov
cmpsl
clc
mov
lret
outsl
mov
dec
pop
xchg
xchg
aaa
test
mov
ficompl
pop
loope
test
sub
jne
mov
pusha
repnz
pop
ficoml
jae
add
add
add
pop
xchg
or
cli
and
mov
sbb
dec
inc
cltd
push
mov
xchg
cmp
adc
inc
stos
pop
scas
and
pushf
push
cmp
and
mov
cmp
pop
inc
mov
sbb
add
movsb
nop
jp
adc
mov
mov
pop
test
cmp
add
fwait
xchg
cwtl
mov
push
mov
jecxz
fmull
mov
lock
add
mov
mov
pop
pop
push
lds
aad
adc
push
adc
mov
xchg
adc
roll
popf
dec
js
ja
lock
cwtl
repz
ljmp
fisubrs
dec
mov
mov
jns
push
es
movsl
fcmovu
pusha
fadds
add
out
mov
mov
mov
dec
jne
mov
mov
in
paddw
add
out
or
mov
xchg
jle
cmp
jnp
fisttps
lret
inc
xchg
dec
jno
lds
add
lahf
xlat
imul
pop
test
or
fwait
inc
test
mov
mov
inc
je
cmpsb
std
pop
fdivs
int
imul
push
cmp
orl
xchg
in
jae
js
jp
pop
and
ret
aam
cmp
imul
push
mov
mov
imul
mov
mov
push
or
xchg
fiadds
xor
push
xchg
gs
test
inc
xchg
out
fsubrs
out
call
in
sub
lret
jl
xchg
bnd
mov
das
mov
mov
xor
sbb
cmc
push
or
jg
je
inc
sti
cli
iret
testl
clc
int
jbe
out
test
xchg
sbb
test
dec
push
enter
mov
sub
inc
sub
jb
pop
call
in
pop
es
sub
cmpsb
dec
mov
or
inc
pop
mov
enter
push
jbe
lcall
sub
dec
out
mov
lods
or
jmp
mov
imul
icebp
js
addr16
dec
fsubl
test
andb
push
lret
dec
sarb
dec
push
adc
jbe
or
mov
arpl
lods
pop
loop
outsl
add
pop
jp
push
ret
xor
xor
add
ljmp
dec
mov
fcompl
mull
or
pop
xchg
scas
into
inc
lahf
jns
bound
cmp
jno
inc
or
jbe
sbb
jmp
ljmp
xchg
aaa
mov
aam
pop
jle
inc
hlt
cs
mov
or
loopne
or
cs
scas
jecxz
fadds
scas
mov
cs
or
addr16
fninit
add
dec
fidivrl
push
jecxz
test
jns
jmp
xchg
jg
and
sub
sub
adc
jns
imul
nop
push
mov
int3
aas
or
or
jle
xchg
cmpsl
out
sub
mov
xorl
cli
lods
push
lret
bound
pop
adc
xor
pop
jl
sub
mov
push
sbb
lcall
imul
dec
lds
lret
imul
sub
mov
popa
aad
test
test
fstps
jle
into
dec
nop
out
pop
inc
jmp
sub
lods
out
xlat
cld
push
sbbb
testb
sub
pop
es
test
or
push
jne
repz
out
inc
jbe
pop
test
repz
lods
enter
xchg
pushf
shlb
xchg
mov
jb
xchg
lods
das
inc
push
ja
jbe
dec
cmp
loope
cmp
xchg
mov
mov
push
fdivrs
mov
arpl
inc
std
jmp
mov
sahf
ds
mov
lret
jl
addr16
adcb
fstpl
push
ss
add
mov
subb
mov
outsl
ja
test
jb
xor
lods
xor
notl
push
in
push
or
mov
jmp
jns
fbstp
jnp
mov
jns
test
jne
out
in
pop
adc
fdivr
or
mov
or
cld
out
lods
mov
jne
dec
std
lock
pop
ja
inc
pushf
sbb
pop
jl
mov
push
fisubl
push
sar
cmc
xchg
sbb
dec
sub
and
mov
dec
in
dec
or
adc
outsl
cltd
push
mov
fistl
push
xor
ret
xchg
roll
jns
adc
mov
mov
mov
std
gs
rcrb
xchg
js
add
add
add
pop
or
cs
shrl
xor
lods
mov
popa
int
bound
out
jae
cmpsl
mov
andw
repnz
mov
jns
inc
adc
shl
stos
push
into
jmp
out
pop
ja
lcall
dec
mov
cwtl
jb
mov
dec
add
mov
out
and
shll
dec
gs
adc
sarl
pop
inc
dec
out
loop
pop
ret
ffreep
push
aam
sub
adc
loop
or
aad
jg
pop
or
push
cmpsl
leave
cli
nop
or
jns
shrb
cmp
jno
jp
arpl
push
ja
jns
loop
dec
push
test
xor
lahf
sbb
and
add
xor
inc
inc
pop
in
sub
fisttpll
xchg
sbb
fdivl
inc
jle
adc
xchg
inc
adc
sub
sub
push
sub
or
aas
lahf
nop
leave
xchg
mov
lahf
cmp
lods
cwtl
popf
cmp
and
out
mulb
jl
out
stos
push
xchg
dec
jle
mov
jl
jbe
cmp
inc
dec
es
xchg
or
scas
data16
outsb
je
hlt
pop
clc
jl
jns
and
loope
sub
andb
mov
xchg
mov
cmp
sub
mov
fcoms
adc
or
lods
mov
mov
inc
lock
inc
fwait
inc
cmp
jae
in
mov
fdiv
cmc
jge
pop
mull
test
scas
ret
cs
ret
je
mov
xchg
shr
jns
or
adc
movsl
and
sbb
jmp
xor
push
jne
popa
sub
push
mov
push
adc
mov
add
push
int
adc
out
mov
lret
pushf
scas
push
and
repnz
lds
fwait
out
cmpl
test
sub
rcr
push
clc
xchg
packuswb
sub
dec
cmpsl
stos
jl
xor
xchg
out
sub
movsb
push
rorl
xchg
or
clc
addr16
and
pop
popa
rcll
fdivs
lods
sub
lret
add
sub
mov
sbb
mov
pop
pop
jmp
pop
popf
je
inc
pop
xlat
fisubs
xchg
push
jbe
or
jb
and
push
stos
mov
ljmp
fs
jnp
out
js
mov
insl
mov
ficomps
inc
jb
push
or
lods
pop
inc
je
push
clc
push
or
add
movaps
sbb
int
stc
jg
xor
ds
mov
imul
in
test
stos
inc
test
mov
jne
jp
ret
sti
jp
sbb
or
imul
inc
dec
or
xor
popf
std
adc
test
fstl
arpl
cli
mov
aam
cmpsb
xlat
jp
popa
add
jmp
mov
sbb
pop
ss
add
ds
outsl
ss
jne
sbb
pop
push
arpl
test
test
daa
push
dec
jge
ficompl
and
rcrl
and
mov
insb
xchg
and
pop
inc
dec
pop
nop
fwait
sbb
movnti
icebp
pop
and
pop
in
mov
cmp
aaa
insl
xchg
in
test
aam
mov
fstpt
inc
scas
ficoml
das
scas
push
in
sbb
lret
pop
mov
call
mov
inc
xchg
mov
mov
xchg
rcl
or
out
and
push
pop
or
jmp
jle
mov
mov
dec
js
jno
and
rcll
imul
daa
mov
aaa
bound
adcb
push
mov
sbb
pop
mov
add
push
loop
js
outsb
repnz
sti
push
cmp
sbb
ljmp
jae
out
mov
fisttps
or
inc
mov
mov
ret
and
cmp
sub
int
addr16
push
xchg
jecxz
sbb
imul
add
lret
dec
cld
mov
inc
sbb
fnstsw
mov
or
stos
les
scas
mov
xlat
mov
push
jle
std
iret
ficomps
gs
xor
jmp
sub
xor
push
mov
xor
outsb
jo
cli
sbb
inc
and
sub
mov
fldenv
lret
jmp
or
sbb
mov
add
adcl
mov
add
lea
add
add
add
fidivrs
xchg
aas
in
dec
pop
int
cmp
xor
xchg
in
inc
or
into
les
pushf
jmp
mov
icebp
mov
mov
mov
imul
ds
ret
sbb
xor
and
clc
lea
mov
cmovs
in
cmp
jo
jmp
xchg
xchg
push
insb
movsl
cmpsb
in
and
and
arpl
jecxz
adcb
imull
jne
das
mov
sbb
stc
jmp
adc
addr16
jp
push
stos
popa
adc
and
inc
aaa
scas
mov
in
dec
cmpsb
out
jg
xchg
jnp
jge
jp
popa
test
lea
jns
inc
ja
fdivs
shll
xorl
sub
xor
movsb
dec
fcmovu
jns
stos
frstor
or
jns
jecxz
push
mov
repz
mov
std
and
insl
push
cltd
xor
or
repz
outsb
xchg
in
repnz
sub
sub
rorl
dec
pop
xor
outsl
inc
fwait
sbb
insl
pusha
mov
scas
sub
cmpsl
lret
mov
cmp
jge
cli
mov
pop
adc
movsl
jg
out
xor
mov
mov
sub
sub
jp,pn
jns
mov
les
mov
test
nop
cltd
xchg
mov
je
rorb
out
in
ja
js
sub
push
ret
sahf
stos
std
mov
fldl
lock
orl
lds
mov
pop
loope
cli
lahf
insl
insl
adc
in
fisubrs
aaa
cmp
xchg
test
jo
iret
jle
xchg
fiaddl
adc
lcall
movsl
mov
lods
xor
jns
add
inc
je
xor
repnz
mov
dec
and
mov
inc
cmp
sbb
int3
xchg
in
cmp
fadds
pop
addr16
inc
jo
push
rclb
test
xchg
nop
mov
add
in
xor
sbb
xchg
xchg
adc
sbb
ss
outsb
aas
or
leave
das
dec
aad
adc
mov
mov
fisubs
aam
xchg
sti
jbe
push
lods
mov
sarl
aaa
jns
ds
fists
pop
and
xchg
pop
and
iret
js
add
dec
psrlq
jl
test
in
ss
icebp
test
stos
fs
mov
jns
js
and
js
stos
out
stos
pop
fsubrl
mov
cld
mov
fs
push
and
mov
jae
arpl
push
add
ret
push
fisubs
cmp
aad
decb
inc
addr16
add
rcl
pop
push
push
pop
dec
cwtl
pop
fbld
xor
movsb
loop
inc
and
adc
inc
dec
or
outsb
xor
fdiv
add
pop
add
lods
dec
cmp
repnz
inc
push
sub
imul
push
shrb
cltd
test
jae
sub
lods
sub
pop
insl
xchg
inc
pop
xlat
pop
cmp
xchg
inc
pop
out
scas
dec
xchg
insl
fbld
mov
cltd
ljmp
insl
xlat
xor
jno
imul
xor
addr16
sub
je
xor
jbe
lods
adc
pop
and
pushf
aad
mov
cwtl
in
sub
xchg
or
and
inc
in
shlb
int
pusha
sub
ret
call
xor
jmp
imul
out
outsb
jmp
lret
mov
lods
popa
lock
mov
mov
mov
arpl
testl
and
pop
mov
add
insl
xchg
sub
std
enter
stos
std
lret
add
aam
fcoms
pusha
mov
adc
pop
fdivl
rcl
iret
fists
shll
insb
scas
add
loopne
inc
insb
repz
movsb
leave
daa
int
fistl
clc
sbb
push
rolb
enter
cmp
mov
out
lea
ss
and
jo
or
cmp
cmpsb
pop
push
insl
popf
sbb
repz
stos
sub
xor
mov
or
js
mov
or
popa
mov
add
rcll
dec
cmp
fld
cmpl
cmpsl
push
cmp
cmp
leave
movsl
cmp
aad
push
jae
bound
mov
xor
sbb
cmp
ficomps
sub
xor
jl
push
jle
ljmp
pop
fldl
inc
sti
aas
loopne
imul
jmp
test
add
lock
aaa
push
add
int3
imul
aas
and
sbb
sbbl
push
mov
mov
jbe
add
xchg
es
aas
mov
jo
dec
inc
lcall
insl
test
out
dec
and
cmc
dec
dec
lret
aaa
mulb
cmpsl
enter
dec
or
lret
popa
cltd
cwtl
in
fwait
out
repz
lret
inc
aad
sahf
mov
pop
ficoms
xchg
inc
push
ljmp
sbb
in
xchg
cltd
test
leave
xchg
scas
loope
mov
add
orb
add
clc
into
in
cmp
pop
sti
and
data16
mov
cltd
test
fdivr
inc
jecxz
jp
pop
arpl
mov
mov
sub
adc
stc
movsl
jbe
pop
pushf
aas
sbb
test
xchg
sub
inc
outsl
jl
aas
scas
xchg
ljmp
add
jns
xor
dec
cmp
jae
jns
mov
mov
iret
hlt
and
inc
aam
xlat
cmp
xchg
mov
cltd
addr16
ljmp
mov
aas
mov
outsb
femms
pushl
ret
in
pop
push
nop
sbb
sbb
mov
sub
mov
cmpsb
pop
cltd
jl
cwtl
adc
repz
xchg
lret
outsb
test
dec
lcall
clc
pop
roll
adc
and
subl
push
mov
mov
mov
cmc
jno
fsubs
mov
dec
add
xlat
mov
pop
shlb
xor
pop
adc
fimuls
ljmp
xchg
orps
lods
add
jp
mov
cmp
cmp
mov
inc
xchg
or
and
in
mov
or
mov
clc
inc
mov
imul
out
cmpsl
dec
gs
sbb
xor
fs
inc
cli
mov
dec
dec
pop
or
sub
cmc
or
lods
jecxz
loope
aam
daa
jmp
bound
jl
shll
mov
cmp
push
inc
xlat
inc
jnp
outsb
dec
jo
sub
or
cmp
lods
ja
mov
mov
cvtps2pi
inc
call
cld
hlt
jecxz
jo
lret
fisttpll
inc
jmp
dec
pop
rorb
fstpl
dec
mov
mov
jbe
arpl
stos
cwtl
scas
mov
push
inc
push
iret
int3
jo
mov
xor
stos
arpl
dec
push
rorl
repz
or
scas
mov
sub
xor
out
jmp
mov
test
push
xor
sbb
fs
cmp
inc
jecxz
ret
notl
lea
sub
mov
aas
mov
jae
es
xchg
pop
add
pop
int
cmc
or
aaa
cli
sub
mov
mov
dec
repz
pop
cmp
push
in
xor
push
rcll
cmp
rcll
shl
js
enter
pop
stos
imul
inc
adc
jp
repnz
in
lcall
xchg
fiadds
movsb
adc
add
movb
adc
xchg
mov
jbe
sub
popa
xchg
adcl
ret
repnz
clc
push
xor
outsb
std
push
mov
addr16
mov
mov
mov
jmp
push
push
pop
jno
std
outsb
dec
out
ss
dec
push
inc
xchg
xchg
xchg
fsubl
push
add
imul
inc
sub
or
roll
cmp
out
jp
mov
pop
and
mov
inc
pusha
repz
aad
mov
jp
jmp
push
sarl
inc
pop
mov
cltd
pusha
pop
push
sti
imul
insl
pop
xchg
push
mov
int3
xorb
sbb
xor
cmp
mov
inc
add
or
xor
scas
push
inc
and
xlat
movsl
sbb
jns
loop
add
lea
adc
into
pop
lret
fsubr
testl
pop
mov
add
jmp
cmp
test
cmp
mov
int
mov
addr16
xchg
repnz
mov
sub
pop
add
call
loope
notl
movsl
adc
jge
mov
mov
cmpsl
fidivrs
out
outsb
fs
mov
pop
sub
insb
out
mulb
jge
dec
loope
add
das
subb
mov
popf
fdivr
adc
lea
dec
cmp
adc
nop
mov
mov
mov
in
lods
repz
and
mov
add
mov
int3
insl
xor
jge
add
clc
add
add
fld
inc
mov
cmpsl
mov
sbbb
hlt
sub
ja
clc
push
push
xchg
pop
in
rclb
inc
mov
loope
inc
sahf
les
mov
pop
dec
xor
dec
insl
nop
add
push
xor
mov
mov
inc
sti
es
add
hlt
pop
inc
je
bound
lcall
pop
cmp
mov
test
popa
jmp
jbe
subps
mov
test
and
sub
inc
push
sbb
xchg
push
lock
jge
les
push
in
fists
nop
ret
mov
test
mov
in
xchg
push
mov
inc
clc
xor
or
repnz
add
inc
xor
mov
iret
xor
xchg
jnp
adc
test
jb
movsl
xor
sbb
xlat
ss
je
repz
add
sub
or
out
fdiv
stos
inc
lea
loop
daa
add
arpl
sub
and
cs
mov
fdivl
mov
mov
cltd
jecxz,pt
sub
inc
pop
sbb
movsl
sarl
fsubs
insl
stos
mov
ja
inc
sti
sub
inc
rcl
jbe
rolb
orl
xorl
bound
dec
dec
mov
push
push
daa
push
push
lcall
dec
adc
rcrb
sti
popf
or
sbb
ljmp
inc
or
xchg
sbb
xor
jae
mov
mov
mov
lds
add
cmpsb
fmul
push
sahf
xlat
jl
xor
aaa
mulb
sbb
mov
xor
mov
xor
xchg
lret
stos
pop
pop
lret
out
sbb
pop
xlat
fnstcw
inc
fwait
movsl
jmp
stos
cmc
adc
adc
lcall
push
ret
push
mov
je
push
xlat
cs
inc
sub
mov
fistpll
jmp
test
adc
fcoms
cwtl
mov
mov
sub
test
pop
mov
aas
orl
adc
fstpt
jae
cs
mov
dec
lds
fdivrl
adc
dec
and
mov
push
jno
mov
sbb
push
repnz
xchg
jle
repnz
push
test
inc
ds
push
inc
gs
test
add
jg
add
movsl
mov
test
ret
dec
mov
out
pop
inc
rorb
out
outsb
and
icebp
mov
sarb
mov
ljmpw
mov
sub
fnstsw
shll
sti
sub
push
xchg
add
jge
mov
jae
add
pusha
mov
mov
out
aad
aam
dec
and
mov
shrb
jnp
inc
lea
xor
sub
lods
inc
leave
add
push
mov
and
dec
push
jl
in
adc
fcompl
mov
or
aaa
out
loop
jg
int3
lods
das
mov
xchg
ds
push
bound
das
mov
daa
push
imul
pmuludq
sbb
cmp
add
xor
adc
jmp
inc
and
mov
pushf
push
mov
add
aam
rcr
add
mov
fildl
fidivl
cmp
and
hlt
adc
pop
mov
das
jmp
sbb
mov
add
data16
push
adc
nop
mov
cmp
pop
pusha
cmp
mov
mov
mov
lahf
xchg
stos
into
inc
mov
and
jo
inc
sarl
mov
sbb
xor
dec
push
sub
sar
bound
push
add
lcall
imul
mov
xorl
out
sub
loop
fisttps
test
xchg
mov
es
rolb
sahf
enter
pop
and
enter
mov
jmp
mov
inc
sub
push
data16
xchg
sahf
das
cmp
pop
cwtl
xchg
fld
shl
es
sbb
in
aad
lods
mov
fwait
mov
aas
aaa
xchg
aaa
lock
dec
pop
mov
stos
adc
xchg
cmp
ret
mul
inc
in
mov
js
pop
pop
sub
out
fisttpll
mov
aam
jbe
dec
pop
xchg
repz
in
aas
rcll
jp
dec
scas
loop
push
fsubr
or
xlat
stc
ds
push
xchg
adc
pop
mov
add
jne
add
clc
add
add
adc
dec
mov
mov
cmp
or
pusha
inc
cmp
or
xor
sub
outsb
scas
stos
dec
mov
sub
popf
mov
ret
xchg
mov
loopne
jle
mov
in
xchg
or
xchg
pop
adc
icebp
push
and
ja
in
adc
lea
fstpt
fcoml
mov
test
out
ret
data16
and
cli
call
nop
outsb
dec
pop
stc
mov
lock
push
fstps
aas
mov
idivb
push
fwait
add
push
cmpsl
in
jp
sbb
pop
mov
movsb
jbe
icebp
jmp
test
cltd
cmc
cmp
xchg
test
cmc
xchg
outsl
xchg
lahf
mov
mov
popf
jo
movsl
inc
cmp
push
xlat
testl
sahf
shlb
cmp
sarb
aad
lods
adcb
jmp
loopne
lds
ror
out
int
sbbb
mov
push
add
cmp
les
les
dec
jmp
cmovo
pop
in
pop
jae
mov
jle
and
jo
mov
xor
loop
pop
mov
gs
inc
mov
jmp
sub
sti
inc
rcll
loopne
and
iret
add
nop
mov
es
jl
push
mov
dec
jo
nop
jmp
jo
outsl
clc
cmc
cmp
ret
inc
pop
mov
sub
push
inc
imul
in
out
xlat
rolb
or
mov
fildll
inc
xorl
in
dec
or
mov
cmc
nop
sub
insl
add
push
add
dec
outsb
call
das
call
dec
jmp
mov
dec
sbb
adc
pushf
jmp
repnz
push
sub
sti
dec
loopne
aas
aad
jo
aaa
lret
out
and
loope
cmp
pop
aam
adc
fsubl
cmc
cmp
jmp
ret
jae
push
fs
and
xchg
or
mov
pop
dec
adc
das
sbb
dec
or
fldenv
jle
dec
and
hlt
and
ret
add
sbb
mov
call
adc
je
mov
stos
enter
bound
ljmp
lahf
xor
and
add
push
addl
enter
and
pushf
fldcw
lea
js
lods
mov
sub
lods
inc
daa
inc
cwtl
push
adc
dec
dec
sub
in
sti
lea
xchg
or
inc
or
cmp
jecxz
cmp
testb
sub
pusha
fisttpl
inc
push
dec
stos
ret
and
lods
pop
sarb
mov
cmp
jnp
sub
xchg
cmc
popf
ds
cmc
sbb
inc
mov
sbb
inc
outsb
fcoms
or
aaa
mov
or
sbb
test
xor
adc
dec
mov
fisttps
inc
adc
rcrb
adc
xchg
test
lds
inc
in
jne
into
sub
jns
xchg
stc
stos
or
rcr
outsb
les
aas
jecxz
mov
push
mov
jne
jbe
push
dec
std
je
add
add
sarb
adc
add
jb
imul
sbb
stc
lds
fsubl
dec
fwait
gs
test
test
aad
or
and
sbb
adc
imul
xor
std
push
or
mov
mov
mov
adc
ja
icebp
lcall
shl
adc
pop
mov
orb
pop
inc
mov
jg
sbb
insl
cwtl
dec
add
dec
cmpsl
xor
adc
xchg
test
popa
jns
loopne
sti
in
ret
push
lea
in
push
inc
popf
and
mov
push
ds
ret
and
mov
jnp
add
mov
pop
mov
fsubs
jne
pop
dec
int
mov
xchg
inc
fimull
sub
inc
adc
mov
fnsave
dec
or
mov
lods
xor
sahf
sbb
out
sub
outsb
jp
mov
fdivr
xlat
pop
pop
mov
adc
icebp
jo
faddl
loopne
xor
shrl
xor
mov
sti
int
push
inc
popf
mov
pop
aam
jg
sbb
ret
mov
rolb
loopne
out
dec
push
stc
adc
lods
or
mov
jmp
outsb
popa
aas
pop
sbb
sti
std
rorl
outsl
subb
add
clc
add
add
lret
js
pop
pushf
mov
sub
fnsave
xchg
mov
jle
cmp
dec
mov
stc
push
in
dec
notl
lea
cwtl
dec
hlt
add
xchg
inc
daa
imul
stc
mov
je
notl
pop
pushf
lret
clc
outsl
dec
sub
fwait
push
sahf
mov
and
std
and
outsb
push
out
add
or
pop
int3
dec
adc
repnz
or
and
or
fnstcw
jbe
ret
mov
xor
mov
jl
cmpl
mov
movsb
cmpsl
xor
sti
cli
pop
xchg
loopne
lods
push
cmp
jnp
adc
int3
xchg
jbe
inc
andl
inc
dec
mov
int
xlat
jge
sub
shll
jp
std
mov
fidivs
sbbl
aas
in
and
xchg
adc
jns
mull
pop
sahf
popa
in
push
sbb
cmp
lea
and
xor
and
or
cmp
inc
xchg
cmpsl
or
out
add
push
insl
popf
inc
fstpl
int
jnp
cmp
rorl
shrl
add
pop
or
les
pop
pop
adc
fnsave
mov
stc
adc
bound
icebp
pop
lahf
fisubs
aas
stos
lea
and
sub
cmpb
std
test
sbb
cmp
ja
fsubrs
mov
adc
and
testb
faddp
test
xor
clc
jmp
comiss
roll
jbe
andl
outsl
lods
mov
xchg
and
or
xchg
push
sahf
add
push
pop
rol
pop
outsb
aam
movsb
sbb
push
inc
xchg
flds
testl
lahf
inc
xor
iret
ljmp
outsl
mov
popf
negb
daa
fmull
pushf
mov
nop
fdivp
lods
xchg
dec
pop
mov
and
adc
int
insb
mov
sub
jbe
mov
cmp
les
sub
insl
xor
sbb
int
mov
xor
je,pt
in
shll
sbb
xchg
adc
out
mov
jo
lcall
cmp
aam
aas
dec
clc
add
inc
push
int
pushf
imul
pop
lea
fs
xchg
adc
ss
and
mov
std
cmpsl
xchg
in
dec
mov
sarb
imul
mov
popa
icebp
and
xchg
cs
fcomp
push
lods
sub
sub
jo
and
es
push
aaa
push
lods
test
jo
outsl
add
pop
dec
dec
or
mov
fsubp
sub
xor
test
cmp
lock
jle
test
inc
subb
inc
add
mov
repz
insb
mov
leave
mov
fldcw
aam
ficompl
inc
ja
test
inc
je
hlt
mov
pop
sbbb
mov
in
shll
pop
adc
int3
push
scas
insb
lcall
clc
cmpsl
loop
les
pop
rcr
mov
roll
pop
cmp
into
or
pop
movsb
icebp
xchg
scas
into
frstor
ret
mov
outsl
mov
stc
mov
mov
inc
cmp
stos
cmpsl
mov
cmp
pop
outsb
push
mov
sub
outsl
cmp
or
sti
call
lods
jno
pop
xor
push
cmp
mov
es
add
dec
jl
icebp
lahf
test
mov
push
mov
mov
add
mov
push
fdivrl
xor
in
push
cmp
xchg
mov
bound
dec
jl
dec
jnp
sub
in
sbb
fildll
pusha
test
adc
popa
jecxz
lret
pop
jle
pop
jp
sbb
sub
push
out
hlt
call
pop
pop
fs
mov
ss
imul
push
test
sbb
inc
mov
sub
inc
das
mov
aas
xchg
in
fistl
push
xor
lret
ss
dec
mov
loope
repz
push
sub
jle
lds
cmp
add
or
daa
fcomp
test
adc
outsl
jns
insb
fistl
test
pop
push
xchg
adc
gs
fwait
jns
pushf
dec
add
popl
jmp
fadd
lock
mov
cmp
cwtl
cld
mov
pop
rcrb
sbb
sbb
jg
inc
jp
sbb
gs
add
clc
add
add
xchg
inc
cmp
data16
xchg
outsl
and
adc
add
out
out
int
pop
sbb
cld
leave
stos
inc
aaa
orb
xor
lret
push
das
xchg
sub
fs
subl
add
rcr
imul
js
test
mov
rolb
movsl
aam
push
jp
pop
push
dec
lds
and
mov
insl
dec
jge
jmp
ficomps
or
mov
mov
and
mov
roll
pop
stc
add
sbb
mov
inc
mov
xchg
adc
add
outsb
clc
jnp
cltd
mov
cmpsl
loop
cwtl
xor
and
fisubl
std
gs
in
mov
and
daa
push
dec
mov
add
jne
xorl
shrl
xchg
sub
int3
subb
pushf
lret
lahf
xor
iret
mov
cs
dec
dec
je
xchg
cmp
dec
outsl
push
mov
fsubrl
add
notb
shr
ja
and
ja
jmp
lea
sti
and
mov
xchg
push
inc
popl
ss
mov
push
outsl
fdivrl
lahf
into
xor
mov
and
sub
ljmp
lcall
mov
push
enter
test
or
inc
cmpsb
insl
movsl
jle
das
rcll
inc
inc
rcrl
data16
fisubrl
aad
cmp
pop
fstps
push
insb
fucom
mov
mov
pop
je
fisubs
aam
mov
dec
jo
xor
adc
sbb
mov
sbb
hlt
jns
adc
and
dec
mov
mov
jl
or
sbb
sub
pusha
jbe
inc
push
cmc
jb
clc
add
inc
ret
mov
and
sbb
xchg
fnstenv
or
lock
adc
sub
cmpsb
mov
add
jp
out
pop
je
cmc
call
out
push
in
fildll
add
cld
mov
pop
mov
xor
push
in
jmp
mov
insl
sub
and
add
xlat
or
ja
test
lock
std
and
xchg
arpl
repnz
pop
dec
mov
nop
imulb
mov
sti
andl
adc
pop
fsts
rcrb
push
jbe
inc
cmc
aad
les
mov
cmpsl
sub
fisttps
jge
mov
jp
pop
dec
mov
and
imul
mov
clc
pushf
stos
pop
sahf
popf
jne
push
and
fldt
and
dec
jo
and
and
fiaddl
mov
cmpsb
mov
or
arpl
or
in
add
push
or
jo
fs
mov
inc
incl
cwtl
xchg
insl
mov
pop
gs
scas
jge
mov
ljmp
add
mov
mov
enter
push
outsb
dec
sub
push
push
int
mov
jno
pop
mov
sub
aas
arpl
imul
mov
sti
ret
or
mov
add
xchg
xchg
dec
scas
rolb
xor
push
and
xor
shll
ja
cmpsl
sbb
or
sub
pusha
xor
inc
sub
outsb
mov
stos
pushf
add
push
in
push
mov
lods
iret
rcr
outsl
or
rcrl
testb
push
out
pop
and
mov
jno
repnz
ror
mov
stos
add
and
ss
pop
bound
push
push
jp
cwtl
xor
ret
out
dec
sbb
pop
repz
rolb
es
xchg
jns
mov
outsb
xchg
adc
out
inc
clc
jno
int
aaa
cmp
rorl
xchg
negb
je
mov
sub
gs
lahf
js
add
gs
inc
shll
subl
popa
lea
cmc
cltd
in
xor
add
push
fnsave
or
dec
lahf
fdivp
or
pop
pop
or
in
popf
into
mov
push
adcb
fs
sbb
inc
aam
cmp
mov
scas
inc
in
xchg
lods
cmc
cmc
divl
jge
les
jecxz
pushf
mov
or
adc
fisubrs
fxch
or
dec
jp
mov
lcall
add
mov
out
movsb
add
push
jnp
fsubs
insl
cmp
xor
cmp
pop
sub
stos
jns
pop
or
xor
sahf
mov
pop
fwait
add
clc
add
add
xchg
or
pop
mov
cmpsl
mov
fidivl
aas
add
fdivl
mov
or
mov
add
pop
je
inc
mov
aam
shr
ja
pushf
pop
pop
inc
xor
mov
jg
bound
sbb
push
xchg
sahf
sarl
rol
cmp
mov
adc
mov
negl
add
mov
aam
insl
ret
xchg
xor
mov
push
push
mov
push
dec
fcompl
mov
popa
mov
and
sub
and
test
inc
add
adc
and
mov
sbb
sub
xor
sbb
push
out
cmp
inc
jecxz
jecxz
enter
icebp
adcl
icebp
jnp
fsts
push
push
or
sahf
cld
jecxz
push
ljmp
fidivl
push
mov
xchg
inc
mov
xchg
in
ja
outsl
data16
scas
aam
stos
pop
mov
pop
dec
mov
cmp
loop
in
and
add
xchg
lods
clc
loop
mov
ljmp
cli
xlat
pop
or
mov
cmp
or
lock
out
mov
in
pusha
lds
fisubl
loopne
ss
adc
xchg
adc
ret
push
js
cld
xor
and
or
dec
pop
add
or
incb
in
notl
dec
push
cltd
sbb
fnstcw
mov
cli
cmc
inc
dec
sub
gs
ja
cli
push
xlat
dec
jnp
cmpsl
mov
jl
ret
jmp
enter
lea
test
jo
daa
mov
shlb
shl
mov
addb
or
mov
sbb
outsl
mov
push
jne
cmp
adc
xor
xor
pop
jg
lods
stc
sarb
stos
cmp
jg
test
mov
pop
in
xor
inc
loopne
sub
test
sbb
jl
mov
divb
jne
mov
adc
dec
and
dec
dec
xchg
push
jne
cmp
or
arpl
add
std
mov
es
mov
mov
jp
imul
outsb
into
cmp
pop
mov
insb
pop
push
inc
ficomps
loopne
cltd
outsl
dec
scas
mov
and
loop
das
push
push
adc
lods
aam
dec
inc
lcall
aam
mov
push
inc
fdivrs
adc
jo
sahf
cmp
lret
xchg
push
hlt
xor
rcrl
jb
daa
insb
add
inc
jnp
mov
dec
xchg
inc
mov
in
mov
cmp
scas
imull
xor
rorl
cmpsb
filds
xor
gs
pop
aaa
cmp
jecxz
and
aad
sub
mov
popa
es
cwtl
mov
divb
fldenv
jge
pop
rclb
mov
lds
inc
das
xlat
dec
mov
jecxz
and
mov
xlat
adc
lcall
into
jo
das
pop
icebp
xchg
ss
insb
push
insb
or
mov
movsl
movsl
cltd
push
fidivrl
loope
in
and
aaa
xor
adc
testb
push
push
mov
add
inc
dec
pop
xchg
test
daa
and
mov
xchg
cmp
pop
sub
cmp
pop
movsl
xchg
iret
nop
ljmp
cmp
popa
push
bound
cmpl
js
andl
add
subl
or
pop
push
cli
mov
mov
mov
add
push
decb
imul
fcoml
and
xchg
mov
inc
lea
mov
ja
into
pop
icebp
in
and
addr16
fld
xchg
jg
pop
pop
mov
aas
dec
dec
lret
xor
fdivr
pop
pop
aad
inc
sub
xchg
insl
push
cmc
hlt
xor
xchg
jbe
xor
mov
xor
les
xor
fstps
test
dec
cmp
mov
lret
shr
sub
sbb
out
lods
push
int
negl
and
mov
mov
or
pop
flds
ficomps
push
xchg
inc
in
movsb
sub
cmpsb
mov
push
push
jmp
cmp
in
adc
loope
dec
ljmp
add
clc
lods
sahf
and
aad
mov
adc
dec
jge
xchg
mov
test
cld
mov
add
add
add
dec
sub
or
popa
pop
pusha
xchg
arpl
adc
int
sahf
mov
test
mov
push
mov
ja
shl
insb
sbb
pop
push
add
push
adc
lods
negb
jecxz
mov
jb
jle
sbb
test
orl
jl
add
sbb
and
lahf
fdivrp
sbb
mov
push
jp
lock
mov
adc
dec
gs
mov
insb
xor
mov
insl
addb
fnstcw
sbb
push
add
stos
xor
fdiv
push
or
lret
jae
pop
push
in
or
sarb
jno
es
mov
dec
es
shr
ret
rcrl
jge
repnz
xchg
or
addr16
scas
pop
out
inc
lahf
rolb
out
int3
sti
mov
data16
fs
lcall
repz
ja
pop
or
xchg
stos
imull
push
jl
xor
icebp
mul
sbb
jl
cmpsl
jo
mov
int
and
shlb
loop
scas
test
cmp
xor
movsb
pop
dec
scas
idivl
sub
mov
cmp
in
sahf
or
pop
add
outsl
mov
int
inc
add
mov
insb
test
fst
or
ret
je
xchg
pop
stos
lcall
cmpsl
or
adc
clc
add
jmp
imul
sub
cmc
push
sbb
in
test
lret
cmp
sbb
loop
imul
movsl
cmp
pop
or
stos
sbb
cmp
gs
sbb
in
stos
mov
ds
and
mov
popf
push
pop
mov
mov
push
rcl
lahf
mov
subb
mov
shl
pop
ds
xchg
inc
shlb
mov
add
fistl
int3
jmp
inc
lock
cmpsb
jge
icebp
xlat
mov
dec
movsb
push
sbb
leave
sbb
cmp
cmp
xor
int3
imul
addb
out
repz
adc
pop
fldt
test
arpl
scas
cmc
xor
loopne
xlat
mov
inc
cli
sbb
jbe
std
inc
cmp
loope
jbe
jo
nop
push
mov
push
xchg
iret
je
sub
jmp
or
fwait
dec
push
cmc
adc
xor
popf
popa
call
push
fs
je
dec
inc
fwait
or
outsl
sub
icebp
pushf
loopne
clc
push
std
cld
mov
data16
mov
xor
xor
fbld
cmp
test
or
fisubrs
pushf
clc
aas
or
xchg
sbb
stc
jne
push
mov
xor
rorb
lods
jbe
mov
add
lret
push
stos
vshufps
mov
push
idivb
mov
mov
movnti
xor
enter
ret
out
xchg
cwtl
sub
push
jae
push
outsb
cmpb
jno
sbb
sbb
scas
xor
xchg
mov
sub
cwtl
movsb
mov
pop
hlt
popf
jae
andl
mov
jbe
sahf
out
mov
adc
inc
mov
sub
jns
or
or
push
notl
repz
mov
xor
in
clc
das
pop
sub
adc
mov
arpl
cltd
lret
adcb
mov
movsb
into
les
xchg
repz
push
lcall
push
cltd
addl
dec
mov
insl
xchg
into
push
dec
movsl
cltd
sbb
mov
dec
mov
xchg
clc
imul
xor
scas
jae
xchg
test
push
jp
add
jmp
movsl
test
ds
mov
ret
mov
xor
loop
fnstsw
out
jecxz
or
xor
popf
rcll
pop
jne
pop
lock
lea
add
pop
js
in
dec
dec
fcomip
test
push
das
ret
scas
sub
add
aaa
mov
loopne
clc
cmp
mov
call
inc
shlb
adc
xchg
xchg
pop
loope
xchg
imul
orl
popf
or
out
sbb
les
stc
lret
stc
pusha
dec
and
insl
push
shll
pop
popa
loop
cmp
mov
sbb
cli
pop
repz
add
jge
pop
cs
push
sbb
fisubrs
aad
dec
fstps
pop
pop
add
and
push
cmp
sub
xchg
xor
addr16
je
mov
mov
hlt
push
ljmp
push
iret
mov
dec
movsl
add
clc
add
add
jp
and
into
int
call
push
jl
sbb
mov
adc
mov
push
xchg
stos
stc
add
mov
xchg
test
mov
sub
pop
push
sub
imul
or
stos
mov
nop
cld
or
inc
jo
mov
out
or
inc
mov
push
inc
dec
xor
cwtl
stos
pop
xchg
add
adc
sub
movsb
mov
clc
pop
ljmp
std
lret
gs
scas
jg
mov
push
xor
cmp
jecxz
icebp
inc
or
sub
inc
sbb
mov
sbb
mov
inc
sub
mov
out
ss
mov
test
addr16
push
mov
mov
mov
and
aad
inc
lds
inc
les
test
cmovns
xchg
cmp
imul
imul
jmp
adc
sub
gs
mov
sub
mov
mov
mov
movsl
ja
and
shll
inc
ja
cmp
cmp
xchg
bound
inc
mov
fdivl
and
cmp
jle
test
rcrl
mov
sub
jno
sbb
mov
pop
mov
xchg
inc
and
and
xlat
into
mov
hlt
add
inc
or
jle
out
out
cld
insl
add
inc
out
mov
std
ss
popa
cmp
xor
mov
insb
mov
cmp
ds
mov
cmpb
push
addr16
sbb
inc
mov
addl
push
insl
sub
cmpsl
cmp
cmp
push
test
adc
int3
adc
xchg
and
test
inc
inc
movsl
xchg
jp
or
call
mov
das
mov
xlat
xchg
push
insl
ret
fmul
aas
push
inc
insl
xor
adc
out
repz
cld
pop
cmpsl
cmp
mov
and
or
cmp
add
arpl
inc
sub
std
pop
into
gs
lds
mov
mov
cmp
push
pop
add
rol
aaa
jl
imul
fiadds
fs
lahf
jnp
mov
pop
sbb
mov
jp
imulb
stc
jno
int
inc
mov
add
mov
mov
mov
jne
shlb
cmpsl
xchg
sub
or
jg
shll
sub
negb
push
shrl
or
or
add
xor
and
xchg
test
xor
sbbl
pop
aas
shlb
sbb
adc
lahf
fstl
mov
jp
add
rcrl
lods
stos
pusha
or
imul
leave
or
jp
sub
dec
hlt
int3
push
jecxz
lea
sub
cmp
mov
xchg
jne
xor
sub
xchg
es
dec
fisubrl
jnp
ret
or
mov
leave
fldcw
scas
xchg
adc
adc
cmpsl
pushf
push
sub
insl
cmpsb
in
lret
jb
fnstsw
cs
sbb
fnstenv
enter
xchg
jns
pop
push
pusha
mov
bound
and
gs
jecxz
jno,pn
ljmp
dec
out
xor
jmp
push
rorl
mov
test
lods
cld
xchg
push
in
mov
sub
jne
lods
pop
adc
test
or
in
in
das
pop
push
pop
pop
lds
jnp
iret
dec
cmc
fs
xchg
adc
mov
jbe
mov
insb
into
rcll
addr16
mov
ror
and
dec
movsl
or
ja
out
rorb
dec
cli
ja
ljmp
push
mov
mov
sbb
mov
dec
push
add
shrl
mov
mov
adc
lcall
add
imul
insl
cmpsl
gs
cmp
scas
pop
xchg
popa
xchg
mov
mov
pushf
fistps
scas
sub
xor
pop
daa
cld
adc
push
test
repnz
nop
sbb
inc
dec
push
les
dec
jne,pt
add
xorb
in
mov
bound
test
add
mov
pop
sbb
add
push
pop
into
cmpb
pop
xchg
sbbl
jae
cmpsb
sbb
pop
test
aam
lahf
pop
xchg
sub
pop
int3
ficoml
add
add
add
xlat
and
iret
dec
push
insl
pop
add
xor
adc
jne
cwtl
movups
cmpl
das
fldcw
scas
adc
test
jo
andb
mov
mov
movsl
push
pop
aas
add
mov
into
cmp
mov
scas
lea
fistpll
xchg
mov
pop
mov
fdivrl
sarl
call
adcb
dec
roll
inc
notb
push
adc
jecxz
dec
popf
push
cmp
sub
aam
mov
xor
pop
push
add
fsts
je
push
das
clc
sub
and
xchg
pop
mov
jle
inc
cmpsb
scas
pusha
bound
lret
insl
test
pop
jo
xor
inc
push
push
xor
mov
cmc
lret
js
iret
sbb
sub
lods
sub
adc
addr16
mov
mov
and
mov
mov
in
shll
out
pusha
or
jne
jp
cmpsb
cmp
jge
or
leave
push
aaa
jmp
stos
or
cmpl
subl
neg
orl
scas
imul
in
repnz
cld
pop
mov
ror
call
rcll
or
xchg
ss
sub
orl
fisttps
movsb
jmp
lods
inc
mov
dec
popa
cld
fnstsw
mov
fsubr
xchg
push
in
scas
mov
lods
arpl
mov
pop
or
stc
xor
mov
or
lods
push
aas
jo
ss
icebp
insb
lss
mov
push
mov
je
fadds
or
push
add
lock
and
and
mov
ja
int3
mov
or
in
aam
mov
lret
in
cwtl
mov
mov
leave
mov
sbb
sahf
popl
mov
jmp
mov
mov
js
mov
adc
jp
sub
divl
xor
and
adc
repz
sub
mov
push
lods
test
xchg
fiadds
sahf
add
mov
add
shl
adcb
hlt
cmpsb
bound
or
adc
rclb
mov
fsubl
mov
jg
add
xor
dec
push
lret
dec
push
pop
inc
out
jb
iret
inc
sub
add
sub
imul
pop
orb
pop
fcmovbe
call
pop
jbe
xchg
jb
ret
cmp
sbb
xor
push
mov
lods
sbb
jecxz
lret
add
aaa
sbb
ds
lods
push
ds
mov
mov
lea
or
lock
add
mov
lea
jbe
enter
ja
mov
inc
jo
and
and
aas
cmp
lods
dec
std
rcll
dec
sbbl
xchg
cs
xchg
cmpl
mov
fildll
push
mov
push
call
sbb
push
bound
pop
mov
xchg
mov
sbb
mov
xor
and
insl
addr16
int
out
test
imul
dec
addr16
je
int
lock
push
outsl
repnz
or
fcompl
push
xchg
ja
gs
mov
sbb
or
xlat
lret
sahf
add
xchg
xlat
pop
mov
test
fwait
add
arpl
sbb
adc
leave
lock
sbb
xchg
divl
mov
jbe
inc
test
cmp
inc
lock
cmpsl
add
lret
into
jecxz
lea
inc
mov
cltd
movsb
sbb
pop
add
mov
sbb
aad
dec
push
xchg
or
mov
hlt
or
adc
push
mov
and
test
cwtl
xor
mov
sbb
mov
out
or
pop
or
sub
mov
pop
popa
or
lret
aad
in
int3
xor
out
xor
lock
xchg
xorb
or
fldt
pop
pop
cmp
push
out
outsl
aas
push
xchg
push
arpl
jno
addr16
push
push
sahf
fcomp
fcmove
test
imul
adc
add
cli
aas
and
jmp
faddl
fnstcw
push
jecxz
pop
sbb
inc
mov
adc
dec
mov
lret
mov
mov
scas
add
clc
add
add
xor
xchg
pop
mov
jb
fmul
fistps
shr
jmp
fisubs
adc
scas
stc
ljmp
pushf
dec
mov
into
xchg
add
std
pop
cmc
jno
pop
incl
hlt
mov
dec
movsb
cs
addr16
xor
inc
mov
cmp
xorps
dec
pop
js
aam
repz
test
repz
out
mov
and
sbb
stc
xchg
lds
fsubl
mov
andb
add
xchg
adc
cmp
adc
pop
fadd
es
loopne
push
aad
lahf
mov
ret
xlat
add
sub
inc
adc
in
push
fstps
cli
sahf
jmp
enter
xor
gs
lods
adc
sbb
pop
jg
push
cltd
xchg
es
push
rcl
arpl
sbb
sbb
pop
sub
mov
xchg
mov
scas
pop
sbbb
add
sbb
pop
push
sbb
popf
pop
in
jge
push
subb
inc
orl
dec
jmp
push
nop
add
notb
cmp
in
stos
aaa
addb
nop
mov
push
push
in
xor
iret
mov
mov
loop
push
add
cmp
lds
or
xor
cwtl
inc
shlb
stos
ja
pop
mov
jbe
mov
push
stos
les
dec
sbb
push
adc
dec
jp
out
xor
sub
xor
inc
jo
repnz
ret
test
adc
lods
jg
xchg
mov
or
xchg
sbb
enter
std
dec
lcall
sti
lret
icebp
ss
js
jge
ja
jb
xchg
push
and
push
mov
inc
rcr
ret
jmp
enter
loope
push
jg
cmpsb
mov
lock
sub
fisttps
lret
inc
fidivrs
cltd
inc
mov
cmp
adc
jcxz
scas
xor
add
mov
adc
lahf
cmpsl
dec
add
scas
les
std
mov
insl
xchg
dec
mov
test
mov
cs
imul
pop
pusha
shr
add
ret
dec
jb
xor
stos
stos
mov
bound
pop
add
aad
inc
inc
shlb
pop
push
je
movsl
hlt
mov
sbbb
mov
inc
rcl
mov
xchg
psubusw
or
dec
decl
mov
jns
jno
test
pushf
mov
loop
push
fbld
int
testb
daa
mov
add
lds
in
inc
adc
push
adc
aam
and
or
repnz
jg
add
popf
inc
dec
sub
jo
pop
push
jle
pop
adc
mov
rep
inc
add
daa
mov
push
jnp
ja
or
mulb
or
or
aaa
jae
mov
mov
jecxz
cmpsb
fadds
imul
subl
mov
push
inc
sarb
inc
rcr
pusha
std
pushf
aas
lret
cmp
dec
and
stos
sarl
jge
mov
sti
cmpsl
into
adc
icebp
push
lods
fcomps
push
mov
out
mov
mov
stc
mov
mov
adc
push
dec
outsb
jae
push
adc
mov
inc
and
pusha
xlat
adc
cmp
imul
or
mov
clc
cmp
mov
aam
int
xchg
xorb
add
mov
in
jge
push
xor
int3
fs
fistpll
ret
lock
jno
arpl
jle
ficomps
fwait
xchg
jb
inc
ljmp
fwait
cmp
cmp
jp
sub
dec
shlb
jp
cmc
inc
pop
push
pop
fimull
jne
pop
cmp
cmp
add
daa
out
mov
add
loop
popf
inc
mov
mov
cltd
mov
push
rclb
mov
test
fsubl
mov
inc
mov
xor
inc
subl
std
mov
cmp
scas
mov
inc
push
ljmp
lret
subb
pop
mov
stos
outsl
xchg
mov
jl
xchg
dec
ss
aad
insl
sar
int3
dec
repnz
add
mov
xchg
jle
jb
xchg
xor
fldt
and
mov
ss
mov
daa
cmp
mov
ss
fistl
ret
add
clc
add
add
mov
cmpsl
into
pop
addr16
sarl
add
pop
lods
mov
addr16
loopne
sbb
cmp
outsb
inc
adc
scas
mov
jbe
or
bound
inc
fdivrl
bound
push
pop
fiadds
cld
mov
add
xchg
mov
pushf
mov
mov
stos
inc
pop
inc
test
out
pop
and
shrl
mov
xchg
addr16
lds
movsl
rcr
or
dec
jno
inc
mov
sub
pop
mov
sti
es
inc
inc
test
push
fdivp
add
jmp
add
fcomp
or
nop
push
adc
sbb
and
dec
rcll
xor
lcall
rorb
jmp
push
mov
adc
std
icebp
jmp
push
sbb
popa
leave
leave
hlt
popf
mov
cmpsl
jns
push
std
mov
sbbb
push
repz
sub
sub
cltd
jp
and
cmp
inc
lea
push
mov
push
pop
add
test
cmpsb
mov
and
int3
xor
lcall
pusha
cmpb
xorl
adc
icebp
xchg
rcr
push
and
inc
pop
roll
push
hlt
repz
sbb
scas
nop
imul
and
xchg
insb
subb
imul
mov
xchg
cmp
push
lock
jns
add
adc
xlat
jp
daa
mov
mov
jno
add
sub
cmpb
loopne
insl
xchg
jns
shlb
and
outsb
insl
arpl
es
stc
mov
enter
dec
es
dec
lret
mov
xor
enter
xchg
mov
dec
and
sbb
cwtl
lea
andb
and
sub
push
fildll
jp
push
xlat
xor
pop
jne
insb
jmp
push
fiadds
jl
jp
pop
out
xchg
in
int
jb
xor
loopne
cmp
enter
and
dec
int
test
cmpsl
les
dec
pop
xchg
cld
jecxz
jbe
jmp
mov
jp
movsl
sub
pushf
xor
inc
aas
mull
dec
scas
xchg
dec
je
outsl
inc
movsb
aas
lds
jge
xor
sahf
lcall
movsb
repnz
loopne
jo
adc
int3
dec
popa
cwtl
fstl
jo
into
inc
mov
or
xor
mov
sbb
mov
sub
int3
loop
and
fs
mov
mov
pop
cmp
sub
dec
lods
aaa
je
popf
sarl
fadds
push
call
push
mov
test
mov
add
loope
dec
loopne
and
jno
xchg
sub
int3
mov
movsl
sbb
push
sub
mov
fcompl
jo
movsb
std
mov
or
cld
roll
and
xchg
xchg
dec
int
enter
lds
insl
out
xchg
xor
scas
inc
popf
pop
sub
stc
jl
sbb
and
mov
mov
jbe
inc
outsb
adc
pop
clc
mov
test
mov
xor
push
mov
inc
pop
lds
jge
or
cmp
in
into
pop
or
popa
pop
adc
fcmovu
sub
lahf
daa
cli
in
xchg
popf
mov
jecxz
sbb
xor
mov
push
ret
adc
cmp
mov
out
sub
cli
scas
ficoms
roll
mov
mov
mov
add
dec
or
sbbl
push
inc
xor
out
enter
stos
ret
sbb
lods
fdivs
xor
neg
in
lea
xor
cmc
in
or
mov
cmp
jns
rolb
xchg
sub
mov
test
jns
push
lahf
xor
mov
cwtl
dec
cld
sub
rcrl
mov
popf
dec
add
jmp
shlb
mov
cmpsl
xchg
fidivs
xor
pop
loopne
imul
fisttpl
cmp
int
add
and
sbb
sti
jge
fistl
in
stc
fidivl
ljmp
push
pop
mov
cmp
mov
adc
fisubrl
or
inc
lods
jecxz
in
fs
arpl
cmp
into
inc
aad
incl
dec
xchg
dec
scas
and
addb
mov
pop
sbb
xor
mov
sar
data16
mov
ret
adc
mov
add
dec
adc
mov
popa
test
fsubrs
jne
lret
aaa
in
pop
test
cmp
lods
cmc
ret
repnz
mov
jbe
mov
imul
pop
mov
cmpl
mov
mov
int3
pop
push
cmpsb
into
faddp
sub
dec
push
sub
inc
pop
scas
and
icebp
and
jecxz
sbb
mov
xor
push
arpl
ret
test
mov
fisubrl
hlt
xchg
adc
fcomps
test
movl
fwait
movsl
rcrb
scas
jb
aaa
xor
cwtl
mov
shrl
mov
push
pop
xchg
jl
sub
mov
dec
in
adc
mov
and
sbb
push
mov
inc
or
call
insl
orb
in
aas
sbb
fisubrs
xor
ret
sbb
push
mov
jge
adc
loop
push
insl
pop
dec
mov
mov
inc
movsl
sub
and
imul
bound
aaa
inc
adc
das
not
popf
stos
mov
popf
lret
or
sbb
int3
mov
mov
jb
lods
pusha
jecxz
test
iret
xchg
mov
dec
dec
or
inc
mov
insb
cmp
cltd
push
mov
mov
hlt
mov
jb
xchg
imul
dec
xchg
mov
push
iret
je
or
mov
test
insb
mov
xor
jns
sbb
jae
push
outsb
pop
loop
loopne
shr
pop
in
fbld
mov
jl
pop
pop
xor
repz
add
mov
jnp
aas
xchg
iret
int3
ficoml
adc
stc
xlat
mov
xchg
insb
div
rcrl
xchg
in
pop
jae
jmp
and
outsl
movsb
sti
push
test
notb
test
aad
into
xor
pop
xchg
push
push
rol
jl
pop
and
sbb
mov
shl
push
xchg
pushf
ja
pop
adc
push
mov
jecxz
in
into
cmp
jo
jg
mov
inc
jno
cmp
imulb
cld
mov
dec
xor
das
and
mov
mov
adc
lods
fildll
shlb
or
js
pop
and
nop
fistl
sbb
jne
mov
pushf
movsb
cmpsb
in
inc
adc
shll
out
xchg
sub
fimuls
addr16
fdivl
sbb
mov
lcall
jae
cmc
cmp
cld
mov
inc
outsl
loope
and
aaa
std
testb
lods
lock
sbb
dec
pop
xor
xlat
cmpsl
rcrb
cmp
jae
push
mov
cmpl
push
dec
pop
shll
gs
in
in
inc
repnz
xchg
jge
das
ficoml
notb
cwtl
adc
repz
rcl
jnp
es
scas
cmpsb
push
add
push
das
test
cmpsb
lret
sbb
adc
test
lahf
xorb
jmp
mov
adc
rorb
sub
iret
cwtl
lahf
push
jl
sbb
fsub
fisttps
adc
sub
jl
andb
xor
pusha
lret
mov
jne
inc
int
mov
fdivrl
mov
in
cmp
xchg
fs
fistpl
xor
dec
lock
out
ficoms
sub
arpl
mov
test
out
jmp
and
sbb
in
or
clc
scas
rcl
adcl
push
cld
and
mov
imul
popf
cmpsb
faddl
mov
and
out
xchg
sbb
fisttpll
push
mov
popl
xchg
dec
fadds
adcb
pusha
or
bound
push
xchg
dec
mov
and
cmp
push
arpl
add
xchg
imul
incb
or
das
push
pop
or
ds
xlat
cmp
xor
sub
mov
rcll
shrl
mov
xorl
aaa
fs
fstl
movsl
mov
mov
ds
cmpsb
jbe
out
ja
pop
and
aaa
add
push
jl
test
pusha
lret
lahf
pop
or
sbb
dec
repz
stos
xor
xchg
mov
shl
add
mov
cmp
mov
adc
enter
int3
lcall
cmp
clc
push
mov
xchg
xor
cmpsb
jnp
into
sbb
cmp
push
les
stc
outsl
nop
jp
adc
sub
iret
cmp
outsl
stc
jmp
xor
dec
mov
add
add
add
sbb
inc
mov
ret
sub
push
mov
pop
xchg
xchg
push
lock
popf
sbb
rcll
cmpsl
jo
rcll
pushf
adc
mov
or
inc
xchg
adc
movsl
xchg
mov
push
popf
mov
nop
and
xor
rcll
fnsetpm(287
scas
mov
or
int3
pushf
and
dec
out
es
fdivrs
sbb
push
pop
xchg
xchg
xlat
xlat
faddl
xlat
addl
mov
aam
push
push
out
or
stos
rcr
ret
ret
stc
data16
dec
hlt
mov
stc
jmp
pusha
in
insb
arpl
icebp
jae
add
cmc
repnz
bound
std
inc
sub
sub
or
lea
push
mov
popa
jl
jp
or
dec
jnp
push
pop
dec
fmuls
mov
mov
lret
adc
insl
scas
js
xor
mov
xor
lods
icebp
sub
in
sub
cmp
mov
or
bsf
nop
mov
insl
jecxz
adc
add
adc
sub
aas
insl
push
mov
scas
cwtl
hlt
jo
movsb
loop
cmp
in
add
cmp
inc
mov
es
lods
or
mov
cmpsb
sbb
pop
xchg
repz
jns
loope
lret
xchg
rcll
ja
inc
jl
mov
imul
jne
and
pop
nop
push
push
pop
jecxz
jmp
push
fcmovu
and
in
shlb
jp
into
into
repnz
lods
mov
jo
cmpsl
sub
arpl
xchg
mov
sub
outsl
dec
xchg
out
add
jp
sub
push
clc
sbb
inc
adc
xchg
popf
jl
out
subl
inc
push
sbb
cmp
stos
je
mov
xchg
dec
test
xlat
cmc
xor
mov
es
xchg
insl
lock
add
jno
ret
and
push
into
pop
xchg
mov
call
cltd
sti
add
jl
push
mov
add
xchg
lret
inc
ja
inc
leave
or
pop
mov
fs
fsubs
sahf
das
pop
ja
mov
hlt
or
adc
sahf
cmp
mov
push
insl
mov
or
add
daa
dec
cmp
jo
mov
sub
cld
dec
test
outsb
test
inc
mov
jo
fsubl
cs
dec
repz
imul
xchg
in
fimull
mov
jmp
or
adc
popa
dec
add
adc
test
icebp
hlt
sub
mov
dec
pop
outsb
mov
add
mov
loopne
pop
aad
iret
mov
jnp
mov
dec
inc
pop
enter
js
jle
stos
add
pop
push
pop
adc
repz
aam
mov
inc
jle
or
leave
mov
lock
xchg
rcll
and
jmp
sbb
sub
and
mov
or
jbe
stos
dec
push
mov
out
sbb
cli
nop
jg
adc
mov
mov
lcall
mov
out
dec
shll
jne
mov
jb
push
decl
xlat
test
add
movsl
push
inc
dec
add
or
repz
dec
mov
xchg
xchg
mov
je
cmp
in
cltd
xor
fwait
inc
loope
fs
enter
cld
insb
mov
fistl
push
mov
pop
add
dec
xor
repnz
pop
adc
pop
push
in
pop
lock
mov
xchg
jp
dec
ja
in
inc
push
jg
mov
pop
pushf
inc
sub
mov
dec
push
scas
jno
jnp
ljmp
iret
scas
add
shl
mov
xchg
pop
ret
mov
xchg
sub
push
jp
xchg
ret
stos
jo
sbb
ljmp
int3
push
leave
or
xor
inc
lea
mov
mov
cld
lahf
inc
push
lock
jo
std
pop
ds
xor
sub
jp
mov
fbstp
adcl
mov
mov
iret
push
rcrb
sahf
adc
ret
ret
xchg
mov
loop
jo
test
frstor
int
pushf
lock
jne
mov
mov
nop
arpl
mov
lcall
adc
jb
jp
dec
out
jbe
sub
dec
into
cltd
arpl
and
aad
shlb
or
or
fbld
nop
lahf
mov
mov
pop
cs
dec
xor
ljmp
cli
mov
sahf
cld
inc
adc
push
std
push
ret
sbb
add
add
mov
pop
rcr
xchg
jecxz
out
popl
rorb
pop
in
and
ljmp
xor
mov
aam
jo
cwtl
lahf
jb
push
data16
rcll
adc
adc
out
mov
pop
scas
mov
or
xor
js
push
rorb
fidivrl
negb
mov
adc
mov
push
ret
jg
gs
push
fs
jne
in
cltd
js
mov
mov
mov
xorb
out
mov
fs
inc
imul
jle
cli
lcall
test
bound
push
ds
pop
jmp
push
adc
rcl
mov
out
sub
jmp
mov
aad
es
popf
dec
lcall
iret
pop
jl
inc
or
jp
out
arpl
pop
stos
cltd
or
adc
pusha
xor
les
adc
fdivr
mov
call
iret
call
pop
and
rcll
lret
loope
adc
mov
jl
mov
jle
test
pause
lods
push
shl
lahf
adc
jle
pop
push
neg
xor
jl
test
call
aad
push
jle
pop
sub
inc
rolb
mov
mov
inc
xchg
pop
frstor
mov
lea
inc
iret
cmp
cmp
sti
inc
mov
push
or
insl
sub
sub
rcrb
jb
pushf
popf
pop
das
fcoml
cs
push
out
pop
repnz
pop
fimull
xlat
pop
add
push
push
add
sahf
dec
pop
int3
xchg
xor
xor
mov
or
cmp
dec
aam
mov
push
mov
fnsave
loop
jp
data16
aam
pop
adc
ljmp
push
jl
xor
ss
push
pop
mov
mov
mov
aaa
jno
fstpl
stc
scas
pop
shlb
bound
fs
scas
addr16
aas
mov
pop
bnd
add
cmp
icebp
cli
scas
mov
pop
cmp
out
popa
lock
stos
push
das
mov
xor
or
cmp
enter
nop
fsts
std
mov
mov
lret
xor
xchg
jae
mov
push
pusha
negb
andl
jmp
lds
or
idivb
mov
movl
stos
ret
imul
xchg
jl
xor
inc
and
insb
test
loope
mov
jno
test
xchg
jge
aam
jecxz
push
int
cmpsl
jo
push
sarb
or
popf
lahf
mov
cmp
cmp
stos
add
jp
aam
add
or
fs
mov
add
sub
and
negb
sub
xchg
das
dec
scas
sub
cwtl
sbb
rol
ds
call
push
mov
nop
test
mov
cmp
je
sbb
jl
nop
movsb
add
adc
movb
and
idiv
cmp
sbb
pop
mov
mov
enter
out
out
push
mov
push
fmull
dec
add
mov
xor
daa
in
dec
inc
pop
lds
fsubs
adc
cld
mov
lock
jp
or
iret
js
and
scas
jl
or
and
sub
movsl
into
cs
push
or
cmp
addr16
rcr
or
push
orb
ret
sub
shll
shrl
movsb
xor
mov
jae
pushf
ret
je,pt
and
jne
movsl
pushfw
xchg
xlat
xor
push
arpl
aas
sahf
cmp
xor
in
jnp
push
and
imul
and
shll
jns
push
mov
adc
pusha
rolb
cmp
and
mov
sub
push
lods
sbb
jae
into
ss
imulb
adc
pop
sbb
pop
dec
out
imul
repnz
mov
xchg
push
loope
jmp
pop
js
fwait
popf
adc
lcall
lahf
int
mov
mov
movsb
push
cmp
fcompl
mov
mov
add
stos
in
sub
or
sbb
or
lcall
pushfw
pop
jecxz
adc
sahf
in
test
push
fadd
fsubs
loope
mov
mov
imul
aas
cmp
mov
adc
xor
hlt
xchg
inc
rcll
xor
addb
bswap
int3
push
lahf
jb
outsl
cltd
adc
add
add
cmpsl
int
pusha
out
mov
addr16
pop
push
fisttpll
ror
insl
push
xchg
mov
and
xchg
in
outsb
js
out
pop
pop
test
scas
les
add
mov
daa
xchg
ljmp
insl
das
movsb
dec
arpl
adcb
mov
out
xchg
sbb
adc
test
rcll
or
out
adc
mov
cmp
imul
jge
mov
pop
cli
xchg
pop
icebp
mov
mov
lock
xor
shll
push
cmc
cltd
mov
cltd
jne
divl
jno
outsb
faddl
mov
mov
iret
hlt
insl
ljmp
dec
sub
pushf
out
aas
mov
out
cmp
ss
sbb
repnz
fnsave
and
in
push
inc
mov
mov
sub
and
fwait
jnp
sarb
and
hlt
fdivrl
xor
stos
cmpb
inc
mov
push
dec
js
push
mov
addr16
ljmp
sub
mov
repnz
cmp
or
pop
xchg
mov
sbb
fdivs
frstor
jbe
je
outsl
mov
push
jge
lods
mov
xchg
sub
pop
cmp
mov
insb
inc
cmp
daa
aam
mov
outsb
mov
lahf
jnp
pusha
xchg
nop
mov
popf
xor
add
push
xchg
idivb
nop
add
xlat
cmp
sub
lahf
std
jmp
pop
xor
lods
fs
mov
aas
adc
loope
scas
push
add
or
add
or
data16
lds
pop
push
jg
adcl
shl
rcrl
cmovnp
pop
loop
sti
mov
repnz
cmc
mov
scas
lods
push
jnp
xchg
cmpb
jmp
and
push
xchg
pushaw
push
dec
dec
into
clc
movsb
pop
dec
divb
out
call
mov
adc
lcall
sbb
idiv
jmp
pushf
inc
push
bnd
jge
out
jle
xlat
push
aas
mov
iret
iret
jmp
std
xchg
in
cli
dec
mov
insl
add
pop
jb,pt
push
push
sti
out
inc
daa
call
and
push
xchg
xor
daa
out
mov
leave
sti
out
adc
repnz
jo
pop
jecxz
xchg
paddusw
sbb
bound
cmp
roll
or
shl
pop
rcl
jno
insl
lahf
inc
stos
sbb
int3
inc
hlt
sbb
sbb
push
push
inc
fwait
lret
rol
xor
inc
fldl2t
fsubrl
ficompl
lret
mov
jmp
xchg
cmp
mov
jnp
xchg
lods
sbb
and
inc
clc
dec
or
leave
into
idivb
lret
inc
inc
inc
outsl
scas
mov
je
and
or
cmp
aam
and
jo
dec
sahf
lcall
movl
sbb
cmp
xchg
jnp
aad
fistpl
mov
mov
xchg
mov
cmc
cld
pop
rorl
xchg
mov
dec
xor
inc
adc
pop
xchg
scas
je
xor
sbbl
mov
push
push
xor
insb
fs
jg
pop
push
hlt
shrb
jne
adc
mov
sbb
sbbb
cmp
out
cmc
insl
add
inc
sbb
pop
addl
aam
sbb
sahf
mov
mov
sti
insl
iret
xchg
shrb
mov
outsb
inc
xchg
ret
ret
sarl
dec
jne
xchg
jns
dec
les
aad
adc
fnstsw
mov
mov
insb
jae
push
push
mov
ret
xor
push
adc
mov
popf
into
pusha
jne
xor
sub
insb
js
imul
push
xchg
or
jg
pushl
nop
sub
cmc
jp
rolb
leave
mov
fcom
sub
shrb
lds
add
cwtl
mov
popa
js
into
ss
lods
ss
cmp
adc
push
xor
and
pop
ktestb
loope
cmpsl
scas
int
pop
mov
pushf
jge
add
test
xor
movsbl
sub
sbb
add
xchg
lea
push
bound
int3
sub
add
in
ret
jb
dec
jb
adc
or
mov
push
clc
inc
inc
movsl
jne
loopne
sbb
lock
xchg
fcmovnu
add
stc
sub
sbb
setnp
outsl
out
jg
cmc
jae
cmp
jo
js
or
add
add
out
nop
test
sub
in
test
jbe
lret
add
into
aaa
lret
jp
std
push
outsl
pop
fistl
xor
mov
push
xchg
mov
stos
movsb
dec
jne
pop
add
inc
sbb
cmp
adc
mov
and
ja
jle
movsl
or
cmpsl
int3
outsl
xchg
xchg
xor
mov
cld
leave
scas
popa
and
fnstcw
adc
xchg
stos
testb
lds
xchg
leave
or
ss
stos
mov
sahf
jb
fimuls
adc
xor
mov
or
mov
jl
cmp
jmp
repz
bound
int
or
sbb
push
inc
sub
pop
mov
cmp
testl
mov
pop
or
out
push
jl
faddl
repnz
add
adc
das
mov
call
cmpsl
jp
mov
jns
insb
fcmovbe
jl
fs
mulb
and
and
in
int3
adcl
fsubl
and
mov
jno
sub
iret
cmpsb
fldt
xchg
pop
jmp
popa
xlat
sub
mov
and
mov
push
cld
dec
jp
ds
mov
out
fnstsw
pop
sub
lahf
or
popa
mov
sbb
test
mov
or
jecxz
mov
inc
pop
mov
jl
pop
cwtl
fcompl
push
jle
out
push
inc
mov
push
repnz
push
or
sbb
sti
cmp
cmp
lds
cld
insb
outsl
or
pop
inc
gs
push
cmp
fnstenvs
outsb
mov
inc
ret
jns
std
and
sbb
mov
jno
inc
loopne
lds
subb
push
inc
xchg
lahf
test
pop
ja
mov
loopne
sub
mov
repz
or
ss
rclb
xchg
add
daa
adc
fbld
mov
push
sbb
subb
push
mov
into
jp
iret
andb
pusha
cmp
js
inc
push
push
pop
rol
adc
rcrl
pusha
bound
push
mov
add
sbb
push
mov
lret
lcall
je
andl
or
pop
sub
pop
daa
mov
popa
adc
mov
add
sbb
iret
sar
or
jae
push
rclb
or
xor
inc
test
inc
fwait
sub
fwait
xor
out
iret
incl
cmp
xor
test
jg
add
xchg
sbb
lock
mov
cmpsb
sub
xlat
jne
aaa
xchg
mov
cld
repz
add
cs
sbb
pop
ret
or
icebp
add
nop
xchg
add
mov
mov
dec
mov
fsubs
push
and
mov
ret
fs
or
adc
push
mov
cmp
sbb
pop
add
xor
repnz
pop
test
loop
dec
dec
cltd
mov
roll
inc
iret
repnz
mov
add
sub
dec
push
jb
sub
loopne
xor
xchg
mov
sbb
sub
mov
sbb
add
lock
fs
dec
xchg
mov
scas
inc
adc
fnstsw
ds
fisttpll
or
inc
fldenv
xor
loopne
aaa
lods
or
jne
test
fidivrs
sbb
xchg
dec
mov
or
loopne
sbb
cwtl
jnp
shl
int
cli
popf
cs
sbb
jl
fimuls
xchg
pop
sahf
pop
jp
jp
imul
pop
js
push
ljmp
in
add
fs
sbb
push
stos
jae
sbb
sub
jl
cmp
cltd
sbb
loop
das
mov
pop
lret
inc
sub
pop
adc
test
movsl
cltd
mov
pop
fsubrs
push
jns
push
adc
xchg
fsub
jae
mov
insb
mov
jp
inc
jno
orl
repnz
data16
lahf
add
push
sub
push
pop
data16
jae
fmull
ret
ficoml
xchg
push
sahf
mov
das
jo
ljmp
das
sub
mov
outsb
mov
sbb
cmp
mov
inc
out
adc
sub
cmpsl
jle
clc
movsl
clc
andl
pop
nop
fcmovbe
jne
lods
xor
das
inc
or
les
cltd
add
xchg
mov
sbb
loopne
test
lds
mov
add
add
add
sahf
add
sbb
insb
inc
pop
mov
int
inc
cmp
iret
jae
aaa
add
mov
push
sub
push
fnstcw
outsb
xchg
out
fs
xchg
cmp
push
mov
in
dec
fists
mov
fistpll
mov
es
rcrl
lods
adc
icebp
ficoml
daa
cmp
pop
lods
xor
out
mov
cmp
arpl
sub
mov
jle
jg
test
mov
push
dec
mov
and
lods
add
jae
adc
and
js
stc
xchg
mov
push
jae
fistps
pusha
push
or
mov
enter
adc
in
mov
adc
mov
add
jno
push
pop
ret
sub
xchg
cld
xor
add
cmp
cmp
push
push
data16
sbb
sbb
les
cmc
sbb
inc
add
daa
lock
xchg
rclb
mov
test
add
mov
icebp
pushf
add
stos
and
dec
jge
cmp
push
dec
xchg
lock
adc
inc
popa
sbb
xchg
pop
mov
mov
jbe
sbb
nop
pop
push
mov
jge
js
sar
pop
lock
into
bnd
movsl
push
notl
mov
and
sub
fsubp
cmpsb
xor
outsb
outsl
fists
mov
sub
lods
sahf
pusha
scas
xchg
out
fs
imul
xor
mov
sbb
fldl
cmp
stc
lods
mov
adc
add
add
loope
mov
mov
insl
xchg
inc
add
test
sarb
jns
aas
insb
stos
stos
stc
bndldx
sarl
xor
pop
dec
mov
mov
lods
imul
or
push
push
outsl
lahf
andl
pop
xchg
daa
push
adc
pop
xchg
out
push
cli
aaa
test
mov
test
dec
cmp
sti
rcrb
mov
or
ljmp
or
inc
or
fisubl
test
adc
lods
cwtl
jb
out
push
call
sub
xchg
xchg
dec
push
pop
mov
xchg
imul
cmp
mov
and
lcall
into
sbb
out
enter
shrl
nop
and
jns
hlt
mov
pop
mov
shll
adc
dec
mov
in
shrb
aam
lods
pop
mov
mov
movsl
daa
jno
add
lret
jmp
or
lret
lret
out
lahf
pusha
push
lcall
xor
lock
sbb
xchg
or
arpl
cmpl
mov
cmp
push
or
lret
sbb
mov
mov
clc
jecxz
lret
dec
jl
mov
push
mov
push
cmp
sub
lcall
cltd
mov
test
lret
add
into
dec
adc
mov
outsb
push
repnz
mov
test
xchg
mov
sub
sub
ds
nop
stos
push
jo
mov
mov
adc
push
and
jecxz
notb
mov
insb
lods
lcall
mov
xchg
xchg
fs
fbld
mov
ss
loopne
mov
cli
imul
mov
sub
sub
push
xchg
movswl
sbb
je
push
movsl
sbb
enter
push
and
pop
dec
insb
ljmp
outsb
add
pop
sbb
inc
lock
push
stc
mov
rolb
sbb
mov
or
push
sub
xlat
adc
xor
clc
mov
mov
mov
sub
mov
jnp
add
jbe
lds
div
cmp
pushf
mov
hlt
mov
insb
lcall
mov
push
push
call
mov
push
sti
jb
inc
adc
pop
movsl
fbstp
sbb
dec
cmp
xchg
dec
push
mov
lea
outsl
inc
add
and
dec
jb
cmp
inc
adc
data16
push
fnstsw
mov
repz
clc
cs
dec
mov
jle
mov
xchg
xor
into
enter
repz
add
sub
nop
bound
fdivrp
fdivrl
lret
das
mov
pop
push
fwait
or
lea
dec
jne
push
out
add
lret
lods
xlat
sti
jmp
pop
sub
cmp
clc
add
add
push
add
mov
or
xorl
in
mov
push
sbb
lahf
push
sarb
jmp
xor
xor
and
mov
ljmp
push
jno
clc
push
adc
and
cmpsl
aad
ss
aad
mov
pop
jp
lea
pop
xor
sub
mov
mov
lea
pop
push
jno
pusha
sti
int
jnp
in
fmull
les
scas
mov
push
aam
xchg
popa
cmp
cmp
mov
add
iret
ds
adc
cmpb
dec
xlat
leave
mov
cmp
mov
in
or
cmp
loope
jbe
es
sbb
sub
push
or
fst
jne
cmp
movsl
jns
push
push
cmpb
sbbb
inc
lahf
dec
in
out
dec
mov
cltd
popf
fistl
fwait
rcr
shll
inc
or
cmp
adc
iret
shll
adc
popa
daa
sbb
clc
add
imul
aad
scas
addr16
loop
lods
shlb
cld
ds
mov
mov
xchg
rcrb
ljmp
cld
bts
inc
push
fnstcw
cmp
loop
jbe
out
push
sti
push
gs
cmp
aam
add
repz
clc
xor
push
int
inc
movsl
rcrl
mov
xor
xor
into
or
scas
cmp
add
pop
stos
jecxz
mov
pop
or
clc
push
pop
mov
fs
inc
daa
mov
xchg
adc
pop
test
push
sub
mov
out
dec
push
sti
xlat
ss
in
mov
cmc
jae
add
aad
and
frstor
xlat
push
ljmp
xor
lret
stc
mov
mov
mov
push
cwtl
mov
stos
and
cmp
xchg
das
adc
xor
jne
sbb
inc
inc
and
sarl
cmp
jmp
int
cmc
nop
cmpsl
inc
or
movsb
imul
mov
rcll
lret
cltd
push
stos
fnsave
lds
iret
jmp
iret
enter
gs
push
jne
aad
sti
sahf
mov
jg
or
lret
cmpsb
dec
or
arpl
jns
mov
xchg
in
enter
clc
and
add
je
fidivrl
les
mov
dec
jp
xchg
lcall
popf
jl
sbb
in
addr16
adc
sub
fsubl
cmpsb
mov
pop
jg
and
idiv
mov
mov
scas
mov
scas
ss
aaa
stos
add
push
sbb
mov
xor
cmpsl
mov
jmp
and
fisubrs
daa
lds
or
clc
or
lods
bound
lahf
push
inc
sub
jl
xchg
dec
dec
addr16
fnstsw
sti
enter
and
andl
push
sub
stos
pop
popa
xchg
inc
pushf
push
test
dec
imul
clc
adc
popl
jbe
mov
ss
sbb
cmp
clc
mov
fiadds
js
and
add
call
lods
int3
jl
mov
subb
icebp
mov
icebp
hlt
in
shrl
dec
in
lcall
out
xchg
sub
pop
inc
xchg
push
jae
fsubp
mov
pop
push
test
fcmove
pusha
cmpb
stc
adc
jo
push
sti
xor
adc
mov
fadds
and
shl
movl
and
scas
sbb
divl
icebp
ret
mov
xchg
lods
inc
inc
out
mov
lret
adc
xchg
adc
dec
mov
or
test
add
sub
push
je
add
lea
and
xor
mov
rdtsc
hlt
movsb
add
imul
repnz
jno
adc
xchg
jp
fwait
pop
adc
jb
imul
inc
sbb
dec
repz
jp,pn
popf
xor
pop
ja
les
add
rol
fists
mov
ds
loopne
and
and
jecxz
fnclex
loopne
cmp
aad
jle
cmp
loope
jl
pop
loope
pop
in
iret
dec
imulb
lahf
movsl
sbb
incb
repz
clc
fidivl
les
pop
jge
add
push
pop
std
pop
push
popa
jnp
dec
inc
pop
mov
loop
bnd
fstpt
mov
add
fildl
add
add
add
mov
mov
pop
and
dec
mov
dec
jo
cmp
and
fsubs
pop
shrb
shll
jge
push
push
in
movb
fwait
roll
fs
les
scas
sti
dec
call
push
pop
push
mov
mov
stc
add
lea
sbb
mov
jp
push
shl
insl
xchg
sti
inc
pop
stc
pop
fsub
in
pop
shl
mov
push
and
add
sub
jno
sbb
or
test
inc
sub
mov
or
adc
mov
mov
sub
pop
rcl
shr
push
gs
or
faddp
mov
ja
fcoml
je
jne
lods
clc
jnp
leave
iret
daa
idivl
and
rcrb
jmp
jne
leave
std
adc
pusha
mov
mov
sbb
fstpl
add
xchg
movsl
into
xor
stos
adc
ror
jb
pop
out
and
add
adc
imul
fs
xor
mov
inc
jmp
jl
bound
clc
rorl
or
xor
clc
mov
out
daa
dec
hlt
mov
cmp
adc
inc
pop
lds
outsb
jg
shrb
int
data16
fsub
lods
fs
subl
or
lret
sbb
iret
test
shll
in
movsl
pop
jno
lods
repnz
push
mov
fldenv
xor
jbe
in
or
sbb
pop
mov
popf
test
shll
cmpsb
je
loop
dec
mov
dec
out
lahf
sahf
ds
jecxz
outsb
lea
fwait
mov
xor
iret
call
stc
mov
inc
sar
adc
sbb
mov
arpl
sahf
sbb
stc
xorl
pop
shl
pop
test
dec
lds
ljmp
mov
into
mov
push
and
iret
push
out
mov
es
push
popa
mov
sbb
out
test
and
mov
and
cmp
adc
movsb
movsl
lods
and
repz
ror
add
pop
or
sarl
jecxz
ljmp
pop
push
adc
rol
add
lods
hlt
aaa
mov
xchg
jg
jecxz
mov
adc
mov
sbb
jg
cmp
movsb
clc
mov
pop
pop
pop
xor
adc
push
push
outsb
dec
lahf
push
jecxz
cmp
sbb
inc
push
xchg
dec
pop
or
gs
jne
stc
xchg
addl
push
lock
pushf
sbb
push
sti
and
test
popa
jo
mov
and
cs
cmp
and
jp
in
sub
ret
clc
incb
lods
mov
nop
push
mov
mov
xchg
popf
jno
mov
mov
sbb
shll
cmp
out
pushf
shll
jecxz
xor
adc
mov
cwtl
lock
fildl
jbe
inc
test
or
in
xchg
mov
scas
push
ret
inc
or
stos
imulb
mov
adc
pop
pusha
insl
jle
push
popf
sbb
sti
pop
mov
mov
fcmovnu
call
clc
xchg
fsubrl
loopne
inc
dec
popa
xabort
outsl
popl
inc
test
or
fsubrl
in
mov
call
pushf
jne
mov
mov
stos
mov
adc
mov
dec
aam
insl
test
addr16
dec
adc
cmc
aad
pop
jge
test
xor
out
ds
push
xchg
call
dec
iret
and
pop
xchg
fcoml
xor
stos
ja
lret
push
pop
cmpb
mov
hlt
rcl
ss
inc
mov
jg
inc
in
or
pop
jnp
dec
aaa
icebp
and
lea
or
or
cwtl
cmc
push
fwait
rorl
and
pop
lea
je
sub
push
in
xor
cli
pop
int
ds
dec
ja
or
lock
adc
sub
andb
shrl
xchg
nop
lock
pop
sbb
gs
pop
and
sbb
ljmp
adc
push
sub
clc
pop
ficoml
add
stos
sbb
cmp
cmp
mov
gs
xchg
nop
pop
jne
and
push
dec
repnz
adc
sbb
shr
ljmp
ja
fs
maskmovq
testl
stc
in
and
fiaddl
in
call
xor
loopne
add
add
add
clc
inc
pop
inc
cmpsl
fcomi
daa
mov
or
sti
movsl
xor
es
out
jg
stc
aas
pop
outsl
dec
mov
push
add
int3
mov
mov
push
jg
lds
test
js
add
aad
cmp
outsb
push
cmp
mov
jnp
cld
mov
mov
xchg
in
push
sub
mov
cltd
mov
pop
loopne
fs
mov
adc
scas
adc
sbb
cmp
add
data16
fwait
mov
mov
pop
pop
mov
iret
popf
adc
pop
pop
push
mov
xchg
or
and
cmp
push
dec
mov
stos
adc
fstps
mov
pusha
lret
mov
adc
push
adcl
cmp
movsl
xor
mov
dec
inc
mov
xchg
cmp
fnsave
dec
rcrb
xor
jb
mov
daa
xchg
js
fwait
ds
adc
repz
scas
es
iret
sub
ljmp
leave
loopne
pop
enter
pop
add
jge
rol
repz
jmp
inc
cmp
jecxz
mov
pusha
repz
cmp
popl
lock
out
es
jno
and
out
pop
js
pop
mov
movsb
outsb
sti
dec
test
cld
xchg
jno
cld
jne
fildll
pop
dec
je
xor
lret
add
add
or
mov
dec
loopne
pop
inc
repnz
or
in
lret
lods
and
jmp
jp
pop
jnp
in
cwtl
fstps
push
test
lret
pop
inc
inc
push
mov
into
inc
imul
call
and
cmp
xchg
arpl
pop
dec
mov
cmp
jg
pop
orb
jb
adc
mov
dec
fs
out
xchg
push
in
adc
in
push
cltd
in
jl
mov
dec
cmp
xchg
f2xm1
push
add
fnstsw
inc
shl
xchg
xorl
mov
sarb
xchg
and
push
ja
jg
shll
subl
call
xchg
pop
inc
outsl
shlb
insb
cwtl
mov
lahf
mov
inc
andl
push
xchg
push
hlt
sub
arpl
cli
pop
pop
sarl
sbb
cmp
movlps
movsb
cmp
xor
push
stos
xchg
lds
jge
out
sahf
push
fwait
lret
cmpsl
cmp
pop
not
out
scas
sub
jle
mov
iret
lahf
cli
scas
and
out
loop
xchg
and
add
iret
jns
scas
pusha
loopne
das
jle
into
out
dec
mov
ljmp
push
outsl
dec
addr16
faddl
mov
je
gs
cmpsl
and
adc
jo
inc
insl
dec
mov
lcall
cmp
insl
jecxz
insb
cltd
mov
pop
cli
or
push
movb
addr16
xchg
cmp
shrb
mov
mov
adc
or
jae
jecxz
jae
scas
mov
jg
dec
or
mov
ror
leave
js
mov
gs
sahf
push
xor
lret
and
fdiv
mov
loopne
mov
out
xchg
cmp
icebp
push
aas
mov
pop
nop
mov
mov
js
inc
sbb
sbb
scas
lock
sahf
scas
and
sbb
and
ja
mov
jle
sbb
cmpsl
loope
cld
cmp
decb
xor
daa
in
dec
mov
xchg
ret
add
xchg
push
fiadds
mov
gs
jns
mov
adc
rcll
jl
cmpsb
ss
sbb
dec
lahf
adc
pop
or
xchg
inc
leave
pop
add
mov
outsl
int
ret
es
pop
mov
xor
xor
adc
push
add
inc
inc
add
jmp
rcll
in
sub
xorb
dec
out
xchg
xlat
add
xor
cli
cwtl
call
mov
les
dec
popa
ret
sub
and
out
sbb
lret
movsb
gs
roll
add
jns
or
in
push
rorl
popf
fidivl
bound
xor
xchg
xchg
imul
inc
test
pop
jp
roll
sbb
imull
jecxz
mov
ss
fsubr
lods
inc
dec
or
aad
cwtl
mov
jo
movsl
mov
enter
mov
inc
xchg
push
scas
and
rcll
in
pusha
arpl
rcrl
inc
adc
push
push
mov
in
add
add
add
insl
pop
imul
scas
daa
jnp
int3
pop
scas
popf
fwait
das
fwait
mov
std
jp
push
sti
mov
sub
inc
adc
in
dec
sub
xchg
idivb
mov
pop
xlat
cmp
adc
pop
jnp
add
sub
icebp
mov
lret
cmpsb
dec
cwtl
imul
cmp
push
sub
or
and
shl
add
fadds
scas
xchg
js
sbb
rclb
ss
in
inc
push
test
xchg
lock
int3
cmpsb
cltd
pop
lds
push
fnsave
jmp
pop
std
cmp
xor
adc
pusha
test
and
lcall
or
inc
iret
mov
lret
addl
mov
sahf
js
test
movsl
or
ljmp
mov
stc
ret
aad
xchg
mov
in
loopne
mov
sti
or
add
roll
int3
js
pushf
mov
adc
adc
std
lea
xchg
and
scas
xchg
adc
push
xor
rcr
sbb
adc
and
aaa
jbe
xor
add
xchg
sbbl
mov
into
jg
aam
dec
adc
add
das
inc
clc
jl
mov
push
or
lods
ja
ret
mov
inc
and
enter
xor
mov
leave
xor
lahf
mov
pop
imul
loop
adc
cld
stc
mov
std
pop
and
adc
int3
movsb
mov
dec
ret
fcomps
push
or
enter
or
out
add
cli
lock
scas
std
call
xchg
arpl
in
cmp
dec
mov
imul
cmp
lret
cmp
daa
stos
lahf
sub
ljmp
popa
sbbl
jo
rorb
shll
adc
jb
movsb
mov
lret
xor
stc
loop
rolb
loopne
add
int
sahf
cmp
mov
xchg
outsb
nop
jp
adc
inc
jbe
icebp
mov
xchg
lock
xor
dec
nop
jge
mov
mov
sub
ja,pt
sub
lods
adc
inc
scas
xchg
or
mov
iret
sub
stos
mov
stos
or
jge
push
adc
daa
mov
inc
lret
or
sub
sahf
mov
aam
hlt
pusha
sbb
dec
cltd
push
jbe
adc
and
cs
rcrb
leave
flds
pop
hlt
subb
shr
mov
in
sahf
das
fbstp
lods
js
incl
je
lds
negb
or
xor
pop
dec
push
jns
dec
subl
fistl
sbb
and
lahf
cmc
sbb
sbb
mov
clts
pop
xlat
dec
mov
mov
sbb
pop
loope
push
inc
aas
mov
out
fs
fneni(8087
in
dec
inc
jno
out
push
xor
cli
ret
imul
push
enter
lea
gs
out
mov
call
scas
mov
sar
pop
jnp
mov
xchg
outsb
push
lock
mov
lock
std
sub
lea
cmp
outsb
add
aam
jmp
mov
mov
mov
repnz
and
dec
cmp
call
dec
jge
pop
and
mov
sbb
cmp
mov
inc
pop
xor
jnp
out
xchg
sbb
andl
shlb
jo
gs
retw
cmp
mov
jae
inc
mov
jl
mov
hlt
clc
movsl
pop
fidivrs
mov
xor
psubb
test
cmp
sbb
out
mov
sub
dec
xchg
xchg
jl
xchg
xchg
sub
ss
ja
fsubr
push
pop
jo
jg
pop
jge
iret
test
enter
mov
lock
in
scas
daa
stos
mov
hlt
js
es
inc
dec
ss
jno
push
lcall
es
sub
push
cld
ljmp
aas
push
pop
and
aam
test
cmpsl
adc
int3
in
repz
daa
mov
pop
imul
icebp
ficoml
and
adc
movd
push
mov
clc
mov
inc
sbb
cmc
adc
xor
mov
add
iret
gs
jmp
mov
inc
mov
dec
mov
and
mov
xchg
mov
iret
jle
add
js
adc
xchg
jmp
jne
repnz
pop
dec
mov
sub
mov
js
rcrb
add
add
add
scas
pop
and
mov
andb
xchg
xor
ja
or
xchg
lock
mov
ret
jl
into
daa
lret
cmp
insb
pop
out
outsb
mov
fwait
popa
or
nop
mov
pop
cwtl
aam
jnp
mov
or
xor
inc
lret
adc
push
aad
or
xor
subl
imul
adcb
call
dec
xchg
ja
jmp
dec
push
repnz
mov
movsb
add
in
int3
jmp
push
hlt
pop
mov
sub
or
mov
jbe
push
jne
and
ret
daa
pop
bound
in
inc
push
mov
fwait
mov
pop
out
mov
jmp
arpl
hlt
hlt
cwtl
sub
out
dec
adc
adc
cltd
mov
jae
call
arpl
cmp
faddl
sbb
lcall
push
out
sub
or
out
test
mov
in
and
xchg
std
push
lods
or
jp
outsb
lock
jno
test
sbb
pop
mov
push
sbb
loope
pushf
jp
xor
aam
dec
mov
xor
imull
mov
lret
push
sarl
cltd
test
mov
imul
jmp
clc
dec
sbb
shlb
xchg
pop
andl
outsb
cli
ficompl
out
and
pop
iret
xor
ds
iret
add
stos
and
sub
mov
sub
inc
pop
scas
or
add
sbb
in
pop
pop
movsb
jmp
xchg
sub
mov
nop
test
shl
insb
dec
mov
cltd
mov
mov
lahf
scas
inc
mov
and
popf
cmp
xchg
roll
jg
jbe
mov
popf
push
in
push
cmpsb
jne
xor
ret
jbe
adc
data16
inc
int
ror
es
pusha
pusha
stos
cmp
jmp
pop
rolb
mov
jae
ret
shll
dec
repnz
cmpsl
test
fmul
pop
push
cli
jp
add
lret
int3
dec
hlt
jge
rcll
aad
pop
pop
in
and
stc
add
jge
cs
in
push
sub
outsl
fidivs
jl
fidivs
mov
mov
push
and
inc
insl
pop
mov
mov
xchg
push
jns
mov
lret
and
add
andb
dec
cmc
push
cmp
dec
je
push
sub
les
push
cs
xchg
je
xor
sub
out
clc
aas
push
xchg
daa
adc
ret
popa
push
inc
scas
sbb
movsl
xor
repnz
out
mov
mov
out
add
idivb
repnz
test
ret
jp
cltd
xor
add
mov
enter
ds
mov
xlat
and
pop
push
in
testb
out
jae
enter
mov
cmp
inc
daa
sub
scas
imul
lds
out
mov
push
test
int3
and
pop
adc
xor
sub
pop
divb
pop
mov
mov
andl
repnz
iret
mov
add
mov
inc
cmpsl
mov
mov
test
or
pusha
xchg
movsl
cmc
sub
jmp
inc
mov
inc
pop
rcl
dec
test
push
sub
aaa
gs
jg
mov
call
jae
jae
push
xchg
stos
cmp
inc
sbb
push
inc
lods
fdivp
mov
mov
cmp
jmp
xor
iret
cli
pop
push
jb
stc
popf
adc
fs
add
mov
out
ljmp
in
cmp
xor
shlb
in
dec
sbb
aam
mov
jno
sbb
xchg
mov
roll
popa
cmp
insb
or
cld
inc
inc
push
lea
ds
mov
dec
imul
dec
repnz
push
cli
dec
addr16
push
dec
hlt
pop
mov
xchg
daa
sub
xchg
adc
or
andb
pop
mov
dec
jnp
idivb
mov
fisttps
cmp
in
jg
insl
rcrb
push
adc
imul
xchg
mov
or
push
add
add
decl
sub
out
jnp
and
out
test
mov
xor
jbe
sbb
pop
and
mov
add
or
xor
jne
mov
cmp
or
sub
and
shlb
push
or
cmc
movsl
testl
xor
stos
or
mov
std
push
mov
scas
or
out
add
clc
add
add
xor
lock
addb
inc
test
hlt
dec
push
lock
jle
movnti
leave
pop
jo
scas
sbb
add
jmp
push
xchg
pop
rclb
out
xor
clc
mov
stc
cli
mov
js
mov
mov
lcall
icebp
movsb
dec
test
out
lret
outsb
dec
xor
icebp
into
rorl
add
jae
es
dec
es
fwait
jecxz
bound
and
pop
movb
and
push
pushf
push
aas
jnp
mov
add
jns
test
cmp
push
push
arpl
repz
out
mov
scas
lods
int3
out
shll
fmuls
lock
push
cmp
lcall
adc
jecxz
rclb
ficoml
mov
jo
imul
or
cmp
xor
into
mulb
jmp
adcl
xchg
xor
mov
add
sahf
testb
push
ss
mov
pusha
push
imul
and
push
fcoml
jne,pt
fiaddl
pop
push
push
cmpsl
xchg
pop
outsl
sbb
out
push
xchg
cmp
icebp
out
popa
dec
or
xchg
inc
fstpl
ficomps
add
push
aam
adc
outsb
lds
add
cmpl
dec
ljmp
pop
xchg
mov
loopne
mov
mov
xor
ja
push
imul
shlb
sub
mov
mov
leave
aaa
cmp
jo
jae
filds
jbe
lds
mov
imul
insb
cltd
lods
jnp
movsl
mov
outsb
je
jnp
pop
shl
bound
mov
and
inc
in
call
mov
or
adc
scas
loop
add
adc
and
inc
xor
dec
cld
push
push
mov
mov
not
xor
sub
mov
jg
sub
xchg
imul
add
push
push
or
andl
push
dec
notl
xchg
and
xor
mov
bound
mov
cli
jae
dec
iret
jb
jno
gs
das
imulb
ds
enter
cltd
mov
pop
ljmp
inc
adc
sbb
loop
insb
fisttpl
aas
inc
aas
in
clc
adc
stos
cld
or
pop
nop
xchg
pop
sbb
mov
or
in
pop
jne
mov
std
add
dec
ret
rsm
jbe
sub
xor
rol
out
mov
push
dec
in
vpsrad
push
addb
push
push
push
sbb
cmpsl
cli
pop
push
iret
mov
loopne
adc
push
shll
cmp
jle
mov
inc
mov
jmp
test
push
xchg
rolb
outsb
insb
scas
lret
movsl
inc
pop
pop
shrb
add
pop
pop
cmp
outsb
cmc
pop
addr16
jne
sub
dec
push
mov
outsl
jge
insl
adc
ljmp
pop
jo
aam
aam
dec
ds
rcl
es
mov
fcmovu
sbb
push
and
inc
sub
push
fidivrs
and
pop
shl
imul
jae
jle
sub
ret
lahf
outsl
aam
mov
mov
mov
cmp
push
and
hlt
out
pop
dec
clc
cmp
cld
loope
mov
ss
jecxz
inc
repz
test
aam
xor
iret
cmp
jge
mov
dec
stos
cmp
imul
lahf
push
adc
sub
imul
push
imul
orb
xorb
insl
xchg
mov
sbb
sbb
int
pop
sub
pop
sbb
inc
mov
test
sbbb
bound
xor
cld
test
or
and
out
adc
sub
cli
cli
scas
jl
hlt
add
add
sbb
bound
clc
xchg
sub
andb
or
inc
mov
push
repz
cmp
scas
and
jge
test
dec
pusha
push
sub
sti
xchg
test
rolb
xor
pop
jo
pop
mov
das
or
faddl
mov
push
dec
outsb
rorl
popa
sub
cmpsl
mov
sbb
lret
out
pop
add
fnstcw
pop
inc
pushf
sbbb
mov
jne
repz
ja
fcom
mov
lock
test
xor
adc
fidivs
je
cmpsb
mov
loop
insl
outsb
movsl
sahf
lahf
enterw
call
push
dec
shr
jg
std
cli
imul
pop
imul
hlt
add
clc
add
add
je
push
inc
or
cmp
mov
and
ss
sub
lods
inc
mov
mov
push
fstpl
jge
sub
cmp
imul
xor
add
scas
push
xchg
sub
ficoml
inc
sub
dec
xchg
lock
pop
scas
popf
xor
inc
lds
lcall
xchg
dec
fdivs
xchg
add
mov
dec
cmp
mov
loopne
push
mov
mov
mov
fndisi(8087
or
repnz
arpl
out
cmp
and
xchg
stos
or
test
rol
fbstp
fistps
out
xchg
xchg
sub
orl
mov
insb
push
cmc
dec
xor
dec
or
sar
test
jg
lods
les
lods
mov
out
add
cmc
mov
sub
dec
jmp
push
xchg
and
push
cltd
popa
cmpsl
push
mov
test
cmp
rcll
push
sub
aad
mov
ret
adc
lock
das
jge
inc
in
pcmpgtw
inc
lcall
stc
push
xchg
mov
loop
jmp
mov
add
adc
cs
dec
jae
mov
and
movsb
rolb
cmp
and
nop
test
inc
popf
in
cmp
and
sti
shll
or
nop
and
inc
sbb
push
cmp
jg
into
into
out
pop
icebp
mov
es
cmc
inc
lock
aaa
pop
jbe
xorl
repnz
outsb
pop
adc
loop
mov
jnp
test
adc
pop
or
cmp
popf
inc
dec
inc
inc
adc
mov
je
and
cmp
rclb
push
pushf
push
push
ja
xchg
test
out
imul
dec
ret
fiadds
movsb
mov
mov
jns
jbe
mov
je
leave
jle
jnp
ss
push
jno
lods
xchg
dec
or
lock
cmpsl
imul
movsb
mov
movsl
xor
sbb
mov
dec
fiadds
mov
int
cli
loop
ja
and
ljmp
imul
xchg
es
movsl
fdivrs
in
inc
inc
repnz
hlt
sub
mov
cmp
jae
pop
mov
pop
test
mov
call
cmpsb
negb
push
xchg
outsb
mov
sub
mull
popa
mov
cmp
xlat
pushf
into
lods
sub
cmpsb
push
scas
int3
mov
sbb
xchg
enter
or
jo
in
xchg
dec
sbb
pop
dec
and
lods
loope
mov
xor
repnz
push
jbe
mov
mov
push
bound
mov
jns
popa
push
mov
or
inc
mov
int3
xor
stos
rorl
pop
xor
pop
repnz
adc
inc
insb
or
hlt
loopne
jo
out
sbb
std
xchg
sbb
jbe
iret
loope
sti
push
aaa
aas
pop
xchg
cmp
pmulhw
mov
cmp
leave
xor
and
in
and
jno
scas
outsl
cmp
fwait
outsb
inc
test
pop
mov
shll
pushf
test
daa
xchg
xor
push
mov
daa
jbe
enter
xchg
cmp
fcmove
jo
and
xor
aaa
and
outsl
loopne
and
sub
mov
mov
test
push
xor
outsb
sub
iret
inc
sub
imul
add
jno
jecxz
insb
pop
lcall
jmp
int3
lret
sub
jecxz
dec
or
and
aaa
insb
xor
pop
xlat
jno
and
ret
pop
lock
jae
popf
push
jo
je
xchg
adc
push
lret
cwtl
in
mov
jb
lock
sbb
inc
dec
repz
mov
movsb
mov
std
dec
das
pop
push
push
dec
iret
adc
add
lods
in
cmpxchg
dec
test
movsl
or
mov
xchg
sub
sbb
pop
xchg
add
or
dec
cmp
pop
into
push
mov
dec
dec
mov
and
mov
xchg
or
xchg
outsl
add
lods
bound
dec
mov
pop
mov
and
test
js
cld
mov
add
sub
xor
decb
mov
dec
mov
push
das
mov
daa
in
imulb
notb
push
jecxz
imul
rorb
movsl
push
movsl
shl
divl
nop
pop
iret
nop
aas
add
add
add
ret
mov
sbb
inc
mov
xchg
mov
mov
ss
pushf
push
fmul
mov
adc
arpl
adc
pop
push
or
inc
jb
inc
mull
les
push
add
or
and
xor
add
adc
mov
add
inc
das
ss
push
lcall
mov
mov
enter
aam
fnstcw
aam
add
cmpsl
mov
test
lods
mov
add
cs
jns
push
jmp
ss
ja
sub
test
popf
mov
icebp
dec
sbbl
mov
into
sub
adc
out
cli
gs
test
in
pop
idivl
inc
dec
add
gs
loopne
test
jg
test
dec
or
pop
mov
jbe
sbb
and
cmp
xchg
fscale
movsb
pop
add
jno
icebp
xlat
add
jle,pn
stos
push
mov
in
mov
scas
sbb
repnz
popf
add
jno
mov
lret
int3
jmp
pop
mov
add
mov
inc
lret
or
leave
mov
rcl
inc
out
out
decl
out
sub
mov
add
bound
pop
cmp
dec
push
cmp
sub
cld
mov
sub
inc
lea
lcall
shrl
sub
pop
mov
mov
adc
out
pop
mov
orb
adc
jae
lret
inc
je
sub
mov
fisttpl
jns
mov
mov
sbb
shl
mov
xchg
in
pop
mov
pop
adc
sbb
jge
push
jle
xchg
hlt
sub
fdivl
adc
xor
int3
inc
mov
das
adc
xchg
rcll
lods
jp
addb
jge
gs
inc
pushf
or
mov
xor
cmp
lcall
out
mov
or
loope
sub
dec
mov
outsb
ljmp
xor
mov
dec
stos
stos
xor
out
mov
frstor
in
test
jno
scas
jno
popa
push
in
pusha
mov
add
sahf
xchg
mov
adc
es
mov
lea
add
leave
or
add
rorb
mov
pop
lock
pop
into
shrb
pop
or
dec
dec
mov
sbb
repz
aaa
add
stos
mov
fwait
push
push
outsb
push
add
lods
or
pop
shrl
inc
and
adc
xor
sbb
dec
mov
pop
xor
xor
rcll
or
pop
les
pop
xor
cmp
lret
cwtl
pop
scas
pop
mov
movsb
inc
mov
or
loop
pop
xchg
mov
test
in
and
int3
dec
cmp
test
jl
pushf
mov
mov
outsl
sub
jae
xor
sbb
cmp
int3
scas
and
out
loop
shll
js
fldt
call
adc
xchg
and
jno
popa
ljmp
and
test
jns
and
sbb
out
movsl
xchg
arpl
jmp
les
push
xchg
imul
xchg
jle
mov
xchg
fsubr
mov
jbe
add
or
pop
cmpsl
add
sub
ds
and
shl
mov
adc
pop
lods
inc
mov
into
inc
das
mov
aaa
arpl
out
lcall
fdivrl
xchg
and
enter
mov
fnsave
jg
std
dec
ret
push
nop
dec
shlb
ret
aam
pop
insb
repz
cld
test
orl
orl
xor
dec
loopne
inc
js
cli
pop
cmp
push
ret
mov
imul
jle
jl
imul
shl
jp
cmpb
out
xchg
cmp
das
les
dec
push
jbe
sbb
clc
insb
push
in
rcrb
lcall
movups
stos
std
add
inc
jnp
xchg
lahf
push
test
inc
sar
loope
ret
mov
xchg
pop
mov
xor
icebp
cltd
insb
shrb
adc
and
pop
sahf
lds
shrb
das
lcall
add
shrl
sub
mov
sbb
