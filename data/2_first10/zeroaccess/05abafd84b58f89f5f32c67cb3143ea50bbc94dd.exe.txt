add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
je
jle
jle
fidivrl
jle
cmp
fld
ja
or
add
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
push
iret
call
ss
xchg
jb
pop
xchg
into
add
test
pop
popf
mov
mov
fcomps
sbb
sahf
dec
dec
jb
jno
inc
push
xor
mov
mov
dec
test
xor
out
into
push
sub
sbb
cmpsl
enter
adc
call
inc
add
add
jae
popf
xchg
fimull
nop
cmp
divl
call
adc
pop
imul
xchg
mov
ljmp
and
pop
testb
fildll
orl
lret
aaa
ljmp
outsb
mov
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
jg
jle
jg
jle
es
outsl
push
ret
mov
fs
nop
mov
inc
sbb
inc
gs
mov
inc
add
les
pop
ficoms
iret
or
pop
sub
ror
or
ja
cmpsb
push
mov
cmpsb
nop
mov
out
sub
add
inc
mov
xchg
shrd
sbb
test
mov
mov
jbe
stos
jns
outsb
gs
mov
adc
or
cltd
mov
shrb
es
std
or
mov
rcr
ret
inc
popa
add
movsl
addr16
pop
or
lds
mov
outsb
ficoml
in
cld
popf
jecxz
cmp
imul
test
sahf
jmp
into
lret
push
and
js
test
fsts
mov
sub
outsb
inc
push
loopne
test
lods
into
pop
iret
push
adc
pop
mov
mov
jns
jae
pop
lret
addr16
test
lock
pop
outsb
inc
roll
and
sti
dec
ljmp
dec
mov
outsb
mov
add
inc
pop
push
test
out
outsl
push
jmp
push
xor
xchg
push
sbb
sbb
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
mov
jl
jle
jg
jle
out
xor
jecxz
cld
scas
ss
flds
pop
nop
push
orb
imul
outsb
loope
mov
outsb
arpl
mov
inc
lock
insl
sahf
test
inc
mov
ja
hlt
mov
add
xor
push
lcall
lds
imul
insl
cs
mov
xchg
mov
dec
or
aad
inc
mov
test
mov
xchg
adc
xchg
cmp
repnz
sub
push
jmp
mov
cwtl
push
ret
jo,pt
je
adc
lahf
mov
mov
xchg
pushf
mov
sbb
inc
mov
push
mov
sub
sub
fldt
jae
fcmovb
adc
shrb
in
xchg
lcall
mov
push
out
stc
pop
dec
in
sub
pushf
mov
clc
lods
pop
adc
mov
icebp
mov
pop
outsb
test
out
jnp
pop
aam
insb
test
aam
iret
fmull
adcl
aas
add
xchg
ret
cmpsb
add
mov
addl
shrl
nop
sbb
lret
lret
mov
fisttpll
clc
push
stos
fisttpl
jg
dec
add
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
mov
fidivrl
jle
cmpsl
dec
add
push
cmp
cmp
push
rclb
jnp
add
mov
xor
mov
out
cltd
or
outsb
movsl
js
rcrl
ljmp
inc
dec
insb
clc
into
pop
pushf
inc
cmc
xchg
cmp
or
je
mov
adc
shll
cmp
test
cmp
mov
jo
dec
es
scas
leave
out
adc
jp
orb
adc
sbb
and
aas
cmpsl
aad
and
dec
mov
mov
adc
mov
aas
adc
mov
subb
adc
sbb
jb
dec
mov
mov
xchg
nop
cmp
sbb
push
push
add
test
dec
and
push
jmp
rcrb
dec
cmp
push
mov
aad
jnp
cmp
dec
pop
add
popa
ljmp
dec
jns
push
xabort
dec
pop
enter
and
push
mov
popf
les
dec
fdivr
scas
xorb
cld
cmpsl
xor
jmp
push
pop
xchg
add
insb
es
sub
push
pop
or
dec
mov
pop
lret
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
push
mov
push
mov
xlat
or
out
sub
dec
inc
fdecstp
or
out
cltd
jno
pop
dec
add
cmp
scas
cmp
fs
dec
pop
scas
imul
pop
cmp
ror
mov
sbb
xor
xchg
pusha
repz
jl
fldl
xorl
mov
add
mov
adc
mov
mov
outsb
rorl
sub
loop
and
sarb
shrl
adc
mov
lcall
mov
aad
adc
cmpsl
out
inc
nop
jbe
out
nop
push
xchg
cmpb
mov
repnz
dec
add
mov
shll
sub
lods
adc
popa
pop
leave
sub
cld
inc
fidivl
enter
jecxz
mov
adc
push
mov
sub
addr16
ds
pushf
sub
push
xor
test
sbb
lds
shr
fs
iret
or
stc
sbb
push
pop
into
ljmp
jle
shlb
or
inc
adc
inc
cmp
in
ss
pop
sbb
mov
bound
cmp
loope
cmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
orl
jle
jg
jle
iret
dec
dec
int3
sub
lds
aad
dec
xchg
push
push
mov
in
xchg
or
add
jle
lret
loop
adc
inc
and
lea
push
jmp
push
sbb
or
jl
sbb
xor
cmp
or
jmp
imul
xchg
add
mov
add
sbbl
xor
xchg
push
mov
jle
shrb
fldcw
sub
inc
push
and
cmp
pusha
dec
pushf
je
out
nop
ds
and
popf
mov
mov
ljmp
or
cmp
sbb
dec
push
orb
scas
sbb
xor
cmp
dec
repnz
add
ret
mov
daa
xchg
pushf
repz
push
sbb
push
add
jns
imul
jecxz
or
fldt
adc
lods
jge
xchg
adc
scas
jbe
cmc
mov
mov
jecxz
outsb
into
rcr
in
ret
subl
pop
stos
cltd
xchg
mov
test
int3
std
inc
jne
jne
mov
jb
mov
sub
add
cli
inc
mov
mov
dec
je
push
pushf
dec
fcom
push
orl
lcall
inc
sub
push
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
das
sbb
enter
jle
jg
jle
mov
xchg
or
inc
mov
push
aas
pop
push
or
sbb
mov
ja
outsb
sbb
jl
pushf
out
out
mov
cmp
stos
fbstp
sti
sub
pop
rol
stos
ret
fimull
add
fcmovnu
fistpll
pop
xor
in
out
stos
adc
mov
test
pop
add
and
xlat
mov
clc
push
xchg
cli
sbb
into
mov
mov
mov
and
data16
jb
mov
movb
pop
mov
jo
xor
push
rcll
push
sti
xchg
xchg
mov
in
dec
push
mov
jb
sbb
mov
push
sarb
lar
push
das
pop
test
enter
dec
mov
jg
aas
cmp
aam
stc
es
stc
imul
mov
mov
dec
mov
fbstp
add
pushf
nop
mul
in
cld
sub
inc
lock
dec
lcall
mov
mov
mov
dec
push
dec
cmpsl
test
cmp
not
sbb
push
pop
sbb
js
inc
ljmp
fistps
xorl
or
lcall
das
stc
std
mov
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
cmp
bnd
jle
jg
jle
cwtl
pop
pop
cwtl
jo
aas
push
jno
loopne
mov
jecxz
fsubp
mov
or
dec
add
mov
mov
imul
dec
popf
dec
lcall
jmp
cmp
repnz
jb
loopne
mov
out
or
clc
mov
jl
mov
mov
addb
out
sub
inc
xchg
lock
jmp
or
shll
fldt
cmp
pop
fs
sbb
inc
call
sbb
fwait
sets
xlat
xchg
adc
mov
cmpsl
jl
sub
xchg
lds
xchg
jl
cmp
mov
clc
mov
or
xchg
cs
pop
pop
ror
mov
cltd
and
push
sub
mov
out
scas
jne
or
mov
xor
push
mov
lcall
pop
lcall
mov
push
jmp
dec
mov
fstpl
push
repnz
jo
pop
jecxz
jle
mov
push
rcrb
cli
pushf
loopne
mov
jnp
pop
fst
je
inc
or
push
in
sbb
xchg
ljmp
orb
sbb
iret
int
leave
and
das
xchg
cmpsb
shrl
loop
pop
sub
dec
add
clc
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
fmull
pop
je
jle
jg
jle
sbb
pop
push
pushf
push
sbb
and
or
mov
cmpsl
adc
bound
in
push
movsl
push
out
pop
lcall
in
mov
js
sbb
push
jbe
add
sbb
mov
dec
lcall
and
sub
mov
sarb
ja
lahf
cmpb
negl
push
or
mov
pop
cmp
mov
pop
pop
dec
sub
mov
jns
stc
iret
enter
dec
outsb
leave
lret
inc
fidivrl
pop
pop
lods
mov
lea
mov
and
cli
inc
mov
iret
shl
incb
stos
jns
sbb
jne
push
pop
xor
sbb
xchg
sub
jbe
mov
clc
sbb
jbe
xor
sti
mov
push
pop
popa
adc
addr16
stos
mov
xchg
loopne
jg
leave
adc
or
aas
int3
addr16
pop
int3
fisttps
stos
pop
pop
stos
inc
cwtl
fiaddl
push
push
popf
daa
in
hlt
sahf
int
sub
ljmp
std
lock
xchg
inc
cmp
mov
mov
pop
enter
mov
mov
mov
shlb
push
addb
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
gs
jle
fidivrl
jle
and
mov
mov
addr16
adc
popa
or
cmpsb
cs
outsb
out
pop
sbb
and
mov
repnz
adc
cmpsl
pop
in
sub
or
mov
fimuls
cmp
mov
les
adc
sbb
xchg
in
loope
push
push
cmp
daa
addr16
add
and
jo
cmc
fwait
jno
and
add
jae
xchg
arpl
movsb
sub
ror
xchg
leave
bound
lea
dec
inc
pop
sbb
rol
enter
shl
pushf
and
sub
cvttps2pi
in
lcall
pop
data16
add
dec
add
xchg
jle
push
ret
push
mov
jns
jp
enter
mov
jno
inc
sub
and
cmpsl
adc
movsb
sub
loopne
jmp
xorl
xchg
aam
cmpsb
xchg
sti
inc
mov
inc
jmp
test
es
inc
add
and
es
jb
jg
xchg
movsl
insl
jo
cli
outsl
shl
cmp
mov
aas
mov
adc
cld
sbb
mov
jnp
dec
mov
xor
ja
or
sbb
cmpsl
dec
push
jns
out
ljmp
or
test
xchg
out
sti
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
imul
xchg
jle
and
jle
mul
shr
popf
insl
mov
popf
push
iret
in
mov
ret
mov
jbe
aaa
ds
xlat
jecxz
out
repnz
inc
gs
inc
push
inc
or
and
mov
out
sahf
jecxz
ja
adc
jb
out
add
pop
or
dec
sbb
mov
pop
leave
jnp
negl
jno
xor
xor
aas
cld
dec
data16
xchg
ret
jns
adc
js
add
addl
rclb
dec
xchg
mov
cmp
hlt
loope
xor
adc
dec
sbb
push
insb
adc
sub
pop
ror
scas
inc
mov
xor
mov
pop
repnz
lcall
imul
or
nop
mov
pop
xor
in
dec
cwtl
stos
add
inc
cmp
jecxz
or
fists
jecxz
sbb
xchg
gs
jno
jle
sbb
sbb
cld
into
inc
push
mov
mov
mov
addb
cld
xor
xor
push
xchg
jmp
mov
mov
cmp
int
push
push
ret
popf
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
pop
mov
jle
and
jle
sarb
insb
sbb
repnz
clc
mov
mov
ret
dec
add
mov
inc
test
sbb
lods
aad
fwait
cmpsb
sbb
jg
push
xchg
pop
test
loopne
nop
cmp
lea
mov
fs
jmp
sub
push
loop
or
and
clc
cmp
loope
inc
push
loop
pusha
push
shr
xor
in
and
pusha
cmp
rol
leave
jmp
sub
pop
cmp
out
adc
add
adc
fdivl
mov
xor
fcomps
arpl
or
ljmp
cmp
call
lods
pusha
shl
rolb
jno
stc
add
mov
fidivl
xchg
cvtps2pd
pushl
rcl
shll
xchg
push
add
xor
pop
cmp
leave
cmpsl
adc
movsl
jae
mov
xchg
jnp
iret
add
out
sbb
daa
mov
xor
xchg
adc
arpl
popa
das
push
jmp
gs
pop
push
loope
cltd
repnz
mov
inc
jmp
or
mov
or
or
jle
and
jle
xchg
push
imul
xor
out
jae
dec
negb
adc
mov
adc
sbb
pop
add
in
xchg
push
xor
xor
add
and
inc
insl
dec
aam
mov
mov
rcrl
pusha
push
jo
add
cwtl
push
add
dec
cs
jl
loope
je
cmc
mov
xchg
pusha
inc
test
xchg
adc
in
and
ficomps
les
mov
enter
add
shl
push
call
inc
dec
pop
jle
mov
fidivl
mov
add
out
data16
xor
push
mov
dec
or
aaa
loop
xor
bound
movsl
mov
and
popf
xor
xchg
xor
sub
lds
xor
mov
sbb
sbb
lods
add
sub
inc
cmpsl
jno
in
or
jne
into
inc
cmc
divb
lock
jecxz
in
xor
popa
lahf
mov
push
xor
bound
mov
in
xlat
inc
xor
iret
pop
mov
lods
adc
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
xchg
sbbl
or
lcall
setae
mov
xchg
sbb
lret
pop
add
xchg
jmp
movsl
adc
and
lahf
call
ret
pop
cmp
and
mov
fbld
stos
test
lret
fdivrl
xchg
sbb
jle
mov
cmp
fsubrl
jmp
push
cmp
in
sahf
cli
dec
repz
cmpsb
adc
push
xchg
xchg
mov
sub
xchg
jle
lds
push
mov
sub
push
in
push
jns
fwait
mov
or
adc
outsl
jmp
mov
fwait
loope
xchg
out
inc
scas
sub
ret
scas
pop
mov
mov
stos
xchg
xor
aam
ss
sti
out
bound
mov
adc
mov
gs
fmull
cwtl
inc
shrl
push
fs
push
divl
and
jnp
scas
inc
mov
push
adc
mov
mov
lods
pusha
add
inc
adc
mov
mov
hlt
or
fcoms
xchg
jns
or
mov
pop
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
pop
inc
shrl
stos
repnz
add
test
ret
test
or
cmp
imul
sbb
pop
mov
ffree
lcall
rclb
arpl
int3
xor
scas
or
add
mov
cmc
lea
in
inc
xorb
out
jecxz
loop
xchg
sub
mov
pop
xchg
ret
cs
mov
mov
jne
xchg
sbb
repz
dec
lcall
dec
in
ja
in
add
movsl
les
push
sti
lods
push
ss
jne
mov
dec
mov
sbb
adc
adc
and
pop
inc
cmc
clc
push
lcall
jnp
mov
dec
dec
imul
cmpsl
cmp
jg
jl
mov
mov
test
orl
mov
mov
cmp
adc
xchg
clc
add
sbb
lahf
in
imul
mov
push
fs
pusha
push
popa
and
insb
sub
xchg
sub
mov
pop
jbe
and
stc
add
imul
mov
jmp
jbe
xchg
call
adc
cmc
sbb
jg
jle
out
add
push
and
in
dec
sub
jg
inc
movsl
pusha
pop
mov
push
cld
stos
dec
or
sbb
sbb
loop
mov
out
lods
fidivrl
mov
je
mov
adc
push
rcrl
pop
pop
fwait
std
imul
sti
push
mov
imul
and
inc
jmp
out
mov
inc
mov
add
pop
cmc
pop
and
jae
or
mov
mov
cwtl
jb
enter
out
adc
mov
mov
lds
jle
mov
test
mov
stos
push
pop
ss
cmpsb
mov
jo
cmc
mov
imul
loopne
mov
sbb
js
mov
xchg
mov
mov
pop
mov
xor
push
dec
and
xchg
xchg
pushl
call
xlat
lret
aam
cltd
loopne
sub
es
outsl
mov
jmp
ss
mov
sbb
mov
loop
inc
mov
add
inc
dec
sbb
sub
dec
mov
xor
popa
xchg
test
insl
mov
inc
stc
fstpt
inc
iret
dec
inc
cmp
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
sbb
add
and
jle
and
cmp
push
xorl
stos
add
or
das
or
sbb
sub
lcall
leave
dec
js
jbe
jae
push
dec
xor
cmpsl
cmpsl
cmp
jge
mov
pop
faddl
jnp
ret
cmp
sahf
ret
xchg
jge
push
leave
rclb
mov
inc
push
aam
push
inc
mov
xor
pushf
jno
jge
popf
sbb
jg
shll
popf
fbld
stos
adc
and
adc
jb
mov
jl
pop
sbb
outsb
and
and
pop
pop
shl
xchg
scas
add
mov
in
out
adc
adc
shll
mov
rolb
sysenter
popa
xor
fs
pop
cltd
cmpsl
xor
movsb
mov
pop
pop
test
pop
lret
push
sbb
mov
jb
xchg
dec
xor
or
insb
addb
dec
mulb
cmp
int3
xor
push
or
popa
fwait
and
mov
pop
cmp
add
scas
mov
push
mov
outsl
sub
test
jp
shll
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
aaa
rcr
jne
jle
and
jle
add
jmp
adc
push
ljmp
or
outsb
cli
jae
insl
cmp
sub
lret
mov
popa
iret
lods
mov
ret
adc
stc
fdivr
mov
jmp
jle
movsb
dec
jl
mov
adc
jns
mov
and
mov
jae
das
push
adc
xchg
xchg
add
sub
in
adc
inc
inc
or
sbb
push
add
arpl
daa
sbb
pop
jne
jb
ficoms
int3
cmc
xlat
dec
xchg
pop
push
cmp
xchg
lret
sbb
out
scas
xchg
es
mov
lea
xorb
mov
notl
bound
int
sti
mov
dec
popf
add
pop
lods
popf
imulb
jmp
add
lea
jns
mov
xchg
sbb
jmp
mov
pusha
mov
add
sub
sbb
loope
test
pop
mov
and
jo
out
sub
das
in
mov
cmp
add
add
sti
mov
stc
repnz
pop
out
add
and
jle
stos
or
or
pop
aaa
sarb
add
test
or
pushf
lahf
and
leave
idivb
pop
movsbw
dec
subl
mov
aam
lods
cs
sub
push
jmp
imul
lea
mov
cmc
dec
xlat
adcb
loope
xor
jmp
scas
add
add
mov
lods
pop
sub
jl
xchg
fstps
ljmp
dec
inc
push
idiv
div
cmc
xor
mov
mov
lret
jmp
lret
cld
aad
adc
sub
sbb
cmp
add
cmp
add
pushf
pop
and
xorb
out
cmpsb
xchg
cmpsb
outsb
mov
sub
inc
xchg
sub
or
push
xor
push
std
in
sarl
stos
test
sahf
mov
ror
inc
mov
sbb
inc
xchg
stos
cmp
push
add
push
mov
cmp
xchg
mov
mov
xchg
inc
pop
fnsave
sbb
mov
mov
inc
and
xchg
cli
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
lds
add
and
push
faddl
lods
test
das
xchg
cltd
xor
jbe
bound
test
mov
je
xchg
push
add
jb
xor
hlt
loope
out
xchg
xchg
jg
movsb
mov
mov
push
mov
and
pop
scas
push
icebp
mov
es
mov
clc
push
fiaddl
sbb
inc
xchg
gs
es
pop
int3
cmpsb
sub
jl
and
stos
popa
lock
repz
add
push
int3
or
pop
into
cld
mov
pop
int3
lcall
aaa
int
xchg
cwtl
push
and
mov
outsb
je
push
lcall
cmc
adc
jne
xchg
pop
jle
push
std
inc
adc
aas
jle
jl
xchg
lods
mov
out
fs
mov
inc
push
jl
jnp
inc
ja
lds
dec
cmp
mov
pop
and
jle
add
push
jg
ret
fwait
data16
cmp
mov
sbb
lahf
sti
cli
mov
test
fdivp
std
rcrl
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
mov
pop
jle
and
jle
xor
mov
jecxz
mov
iret
mov
insb
mov
and
add
mov
sub
ja
test
lods
popf
es
pop
aam
pop
stos
cmp
scas
clc
out
push
sbb
stos
sub
xor
in
pop
fcmovu
mov
adc
lret
push
sub
cltd
and
adc
fcomps
repnz
xorb
jns
xchg
sbb
cmp
adc
adc
push
mov
add
push
add
cmp
into
bnd
inc
sbb
aam
ja
pushl
test
scas
icebp
and
sub
xorl
lret
shlb
mov
pop
mov
nopl
inc
ljmp
adc
loop
jle
stos
or
xchg
mov
sbb
addr16
inc
pop
pop
xchg
dec
outsl
inc
push
pop
jmp
pop
cwtl
out
leave
mov
int
mov
add
mov
into
aad
xor
shlb
push
pop
mov
mov
jmp
jns
mov
dec
js
movsl
mov
lods
push
test
pop
add
jle
jg
jle
push
mov
aad
pop
xlat
ljmp
xchg
add
test
push
pusha
ds
int
xlat
test
lea
sbb
mov
cli
push
or
outsl
mov
out
cmp
inc
xchg
stos
inc
jecxz
xor
std
lods
cmp
out
or
pop
outsb
lret
outsl
xor
inc
adc
adc
add
daa
out
leave
dec
dec
push
inc
inc
sbb
jle
lret
loope
jl
mov
adc
push
push
sbb
jmp
sbb
lds
mov
xchg
jle
mov
nop
cmp
scas
outsb
iret
into
cmp
sbbb
xor
jnp
hlt
sub
xor
jmp
add
ret
sbb
mov
adc
insb
test
cmp
ss
ret
mov
inc
push
sub
pop
shrb
movsb
pusha
inc
negl
dec
xchg
inc
mov
jg
sbb
dec
xchg
sbb
orl
add
leave
cmpl
ret
dec
mov
adc
int3
jns
ficomps
cmpsb
sub
mov
out
jge
add
jge
mov
cmp
push
or
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
nop
cmc
mov
jle
jg
jle
dec
inc
xchg
mov
cmpsb
adc
inc
pop
inc
push
or
fdivr
jno
inc
pop
ds
and
inc
lods
insb
loop
cmp
inc
sub
xlat
jbe
shl
inc
dec
add
inc
dec
inc
mov
imul
fidivrl
mov
inc
sbb
idiv
jg
cmpsl
outsb
cmp
jb
bound
clc
pop
xor
ret
adc
xchg
mov
jmp
fnsave
sub
dec
cmp
lea
jnp
and
adc
pop
mov
cmp
stos
rcll
push
mov
out
hlt
mov
daa
psllq
inc
addb
stc
push
push
and
call
inc
test
inc
jo
jae
jne
loope
dec
mov
mov
jbe
mov
out
lahf
push
cwtl
pop
sub
push
mov
xchg
test
mov
dec
mov
jno
gs
xchg
stos
push
xchg
scas
push
lods
pop
mov
fdivl
adc
leave
rol
lret
jp
icebp
fsts
sti
fldl
in
leave
push
adc
sub
bound
daa
add
mov
sahf
pop
pop
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
fldenv
jle
jg
jle
pop
test
fisubrl
xchg
mov
repz
ljmp
adc
fstps
insl
cmp
mov
enter
sub
xor
es
and
movsl
dec
push
inc
clc
pop
cmp
clc
cli
repnz
es
lret
pop
in
cwtl
ss
mov
roll
repz
inc
push
xchg
inc
cmp
popf
pop
das
sbb
ss
cmp
shrl
loopne
mov
inc
sarb
sub
xchg
fsubrp
adc
mov
push
xor
xor
test
mov
outsl
movsb
mov
push
cs
int3
and
inc
jo
adc
mov
add
xchg
push
das
inc
xchg
mov
js
std
sar
xchg
xchg
and
es
mov
push
lea
inc
pop
dec
xor
sub
lea
jb
aad
inc
xor
and
int
add
push
shlb
mov
sbb
addr16
lcall
cmc
or
pop
movsb
cmpsl
mov
sahf
repnz
adc
fisttpl
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
addr16
sbb
and
jle
out
icebp
mov
daa
mov
out
mov
repnz
ja
xchg
xchg
xchg
push
es
mov
in
and
push
add
adc
out
jo
push
aas
push
roll
fucomp
negb
ret
xchg
mov
cld
jb
jo
and
ss
sbb
xchg
add
lods
ja
sub
js
daa
xchg
ljmp
test
mov
adc
aaa
xor
jns
fcomps
neg
test
leave
jp
ljmp
aas
xchg
aam
pop
repz
imul
test
in
imull
andb
dec
cs
imul
adc
popw
pop
repnz
push
mov
mov
sbb
adc
push
push
adc
push
adc
pop
fiadds
ja
mov
es
leave
and
xchg
clc
stc
dec
or
add
sub
adc
enter
push
lcall
cmp
dec
stos
pop
leave
ret
push
mov
jmp
jb
test
adc
xchg
test
sbb
jmp
rclb
mov
cmp
ljmp
call
push
xor
adc
es
adc
push
xor
std
or
xor
xchg
insl
lcall
scas
adcl
fisubrl
sbb
mov
ret
test
push
xor
call
xchg
sbb
jge
push
dec
push
dec
pop
lret
add
in
sub
add
stos
mov
das
in
adc
adc
and
mov
lcall
pushf
or
in
and
mov
or
push
fucomip
iret
daa
xchg
xor
mov
cmc
dec
push
dec
outsb
push
or
xchg
push
inc
mov
push
push
out
xchg
outsb
in
jmp
lods
push
sbb
jp
and
lds
fisttpl
push
sub
jge
cltd
jecxz
jns
sbb
movsl
and
jnp
sbb
mov
mov
pop
dec
inc
inc
xor
test
fwait
adc
adc
or
test
sub
push
mov
cli
cmp
loope
or
xchg
je
and
mov
sbb
mov
sti
pushf
enter
mov
movsl
pop
shll
mov
into
jo
or
or
aas
das
push
ret
imull
mov
dec
es
shll
push
mov
pop
sbb
and
push
in
sbb
dec
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
pop
mov
jmp
or
xchg
jns
cltd
aas
adc
adc
push
repz
mov
or
dec
mov
pop
lcall
les
fimuls
rcrl
mov
pcmpeqb
mov
cwtl
xor
dec
into
jecxz
pextrw
adc
push
repnz
inc
dec
aaa
sub
adc
in
mov
and
leavew
add
mov
int3
pop
lods
push
xchg
hlt
sbb
imul
test
mov
popa
aad
or
mov
push
loop
fmull
adc
cmp
and
pop
mov
call
lret
mov
into
movsb
int3
cmp
xchg
ret
sbb
inc
pop
stc
sub
icebp
int
xchg
dec
shl
adcl
pop
cmp
mov
push
pop
repz
pop
ret
ret
cli
flds
push
cmp
xchg
sub
add
insl
mov
dec
push
cli
push
sbb
or
pop
bound
jo
mov
and
icebp
lret
pop
sbb
mov
mov
add
lahf
dec
test
js
incl
ljmp
sub
inc
jp
push
sarb
or
pop
xor
fstpl
push
enter
xchg
pop
stc
cld
mov
outsl
jno
fcoms
add
add
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
ljmp
or
aad
lret
xchg
arpl
add
bound
pushf
push
aad
pxor
mov
mov
pop
lea
inc
mov
lds
mov
addr16
lea
insb
std
cmp
jl
xchg
jne
lahf
push
push
cmp
push
xor
adc
fildll
loop
std
in
fldt
loope
pop
sbb
sbb
nop
int3
pop
ds
test
xchg
jnp
icebp
ds
add
fistpll
jne
inc
xlat
sub
jns
sar
mov
xchg
xchg
mov
push
cmp
shlb
xchg
mov
dec
jb
sbb
inc
mov
mov
inc
enter
pop
sahf
push
mov
mov
cmp
outsb
jle
sbb
iret
arpl
stos
adc
jns
outsb
adc
jmp
adc
dec
je
enter
gs
xchg
cwtl
int
add
xlat
lds
aad
pop
into
dec
cmp
mov
pop
mov
shl
sub
mov
push
mov
stos
arpl
gs
in
stos
shlb
mov
or
push
nop
jbe
lret
sub
xchg
xchg
xor
xlat
fwait
cmp
dec
sbb
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
stos
les
jle
jmp
push
push
shlb
aam
pop
mov
xchg
nop
mov
pop
clc
mov
leave
sub
inc
jmp
push
cltd
repnz
aam
movsb
test
mov
rcll
cmp
test
sbb
mov
xor
jno
push
mov
iret
sbb
cld
jns
jmp
dec
pop
dec
movsb
and
stos
xor
cmc
lahf
inc
repz
mov
sbb
hlt
lret
pop
cld
cmp
divl
sub
mov
rdpmc
or
outsb
dec
lret
inc
and
ret
add
lods
add
fists
shrb
push
inc
and
inc
cli
pop
jo
mov
push
inc
cmp
fstpt
ja
mov
mov
push
inc
movsb
inc
cltd
mov
aas
push
pusha
pop
mov
jb
outsb
xchg
mov
push
sub
aas
lds
mov
jl
stos
sahf
rcrl
das
sbb
das
lcall
scas
and
pop
mov
icebp
pop
xlat
inc
add
pop
popf
and
mulb
das
out
in
pusha
mov
andb
int
or
sub
outsl
sub
data16
pop
mov
add
add
mov
andb
sbb
lods
test
fidivrl
data16
xchg
fdivp
push
dec
out
mov
push
roll
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
gs
jg
jle
mov
scas
pusha
jmp
jo
fcomps
push
es
stos
into
push
jp
jmp
das
pop
xor
fwait
lock
incb
fmul
mov
nop
inc
sbb
cmp
cmc
push
ja
fcomp
fisttps
add
dec
jp
xchg
bts
testb
loopne
les
xor
mov
lcall
pop
cld
inc
ja
repz
fdivrp
scas
mov
mov
jno
shll
sub
xchg
les
loope
pusha
sbb
lahf
out
mov
aad
das
cmp
dec
lret
jecxz
mov
xor
or
in
mov
sbb
adc
and
or
int
in
jbe
adc
pop
sub
je
pop
add
shll
and
ret
aas
pop
mov
ret
int
gs
inc
es
movsl
mov
clc
jmp
jmp
fnstcw
pop
dec
add
lods
push
dec
adc
dec
lret
push
popf
pop
mov
mov
movsb
out
mov
ret
movsb
lret
gs
test
clc
pop
and
in
mov
sarl
pop
fwait
das
fdivl
out
iret
adc
or
mov
out
dec
bound
loope
out
xor
jmp
dec
out
jle
aaa
xlat
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
scas
lods
dec
dec
adc
fdivrl
jle
leave
out
sub
xchg
daa
cmp
xchg
inc
dec
push
lods
fbstp
xor
lea
jnp
xchg
fnstcw
dec
inc
jp
lahf
rcll
sub
data16
inc
mov
repnz
add
lock
enter
mov
jb
pop
cld
add
push
subb
or
mov
outsl
or
sbb
out
push
jl,pt
adc
push
sbb
pop
mov
adc
mov
movb
in
shll
inc
jl
test
inc
add
cmp
mov
stos
mov
jns
imul
hlt
inc
or
inc
popa
cltd
mov
xlat
outsl
push
enter
pop
cmovno
test
add
popf
sti
mov
push
sub
cmp
xor
jle
cld
sbb
mov
sbb
add
xchg
out
inc
adc
fists
into
jle
mov
pop
cwtl
fsubrs
fisubrl
jno
push
test
out
jns
add
hlt
dec
sbb
mov
out
push
inc
enter
popf
push
mov
push
pop
loop
popa
in
daa
push
es
sub
ret
inc
add
add
add
das
pop
xchg
adc
arpl
mov
jle
fdivrl
jle
or
es
aas
pusha
and
add
js
adc
lods
leave
sbb
je
imul
lahf
add
data16
inc
testl
jb
cmp
repnz
sbb
jmp
xchg
and
jns
mov
jg
cmp
rcll
hlt
jge
xor
push
inc
mov
xlat
cld
icebp
adc
pop
call
lea
rol
shll
pop
dec
out
stos
das
pop
rcrb
inc
mov
dec
and
inc
and
clc
cwtl
aam
sbb
out
stc
fwait
cs
mov
jecxz
sub
lret
adc
pop
rclb
lock
sub
stos
fcoms
icebp
lds
or
arpl
fsubrl
mov
arpl
mov
fdivrl
test
push
sbb
icebp
sar
mov
lods
popl
dec
imulb
cwtl
scas
xchg
push
push
sub
in
sub
das
stc
mov
mov
lock
call
jge
lods
subl
dec
stos
mov
and
push
divb
loop
js
and
mov
and
out
shlb
fcomps
ja
rol
sub
mov
cmpsb
jns
loop
dec
neg
dec
dec
enter
stos
jmp
cmpsl
mov
add
mov
jmp
mov
jmp
push
gs
movsb
es
cmpsb
sahf
adcl
jle
jg
jle
jp
movsb
push
pop
and
push
call
mov
movsl
add
mov
clc
subl
add
scas
sub
push
aas
xor
pop
mov
dec
daa
lock
mov
mov
push
mov
push
jno
pop
stos
mov
movsb
mov
or
ss
dec
fistpl
shll
mov
into
push
pop
fnstcw
xchg
sbb
mov
mov
scas
inc
xchg
jmp
push
push
sbb
mov
in
in
jl
fdivp
mov
in
in
arpl
dec
mov
sarb
imul
pop
add
pop
pop
jbe
push
adc
in
mov
adc
mov
jmp
cltd
sbb
jp
sar
jecxz
icebp
paddw
sub
mov
sbb
push
lock
inc
ss
xchg
inc
mov
pushf
sbb
or
cmpsb
jp
pop
out
adcl
data16
rcrb
iret
mov
cmp
data16
mov
aam
dec
pop
adcl
fisttps
sub
cmpsb
jns
adc
inc
loope
and
add
aas
test
dec
inc
adc
push
sbb
adc
dec
sbb
pop
dec
xchg
push
mov
xchg
jo
dec
jg
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
mov
inc
push
jnp,pn
xor
or
ret
dec
push
stos
movd
mov
push
pop
xchg
push
in
iret
jl
std
andb
outsb
and
pop
push
push
arpl
insb
insb
pop
ljmp
fwait
aaa
adc
inc
rcl
xor
dec
lret
lods
mov
leave
mov
jmp
mov
mov
ss
sub
lahf
and
pusha
dec
aam
inc
sub
adc
add
jl
cmp
mov
and
decb
repz
jo
enter
xchg
repnz
jg
xchg
and
or
jmp
sbb
fisttps
mov
lret
cmp
jge
jo
and
jns
insl
iret
mov
imull
push
loopne
cmpsb
stos
lret
xchg
mov
pop
inc
push
loop
sbbl
sub
and
es
jle
adc
mov
repnz
stos
mov
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
pop
insb
inc
jge
jle
or
jle
or
mov
data16
ja
jp
jae
repz
lods
js
outsl
clc
xor
aad
repz
std
sub
rorl
or
add
and
pop
ljmp
cs
mov
call
pop
xchg
inc
mov
or
xor
clc
mov
gs
push
jecxz
xor
mov
mov
pop
xchg
sbb
mov
sbb
fstpt
fisttpl
dec
int
inc
in
push
ja
pop
jl
test
pop
lock
push
add
mov
in
and
mov
cli
outsl
jns
iret
cld
stc
jl
xor
inc
insb
je
pushf
push
xor
push
xchg
cmp
mov
xor
mov
cmp
jae
pop
test
xchg
nop
cmp
xchg
sub
lahf
cmp
push
sbb
imul
test
shl
jns
pop
mov
mov
mov
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fidivl
mov
sub
or
jle
mov
movsb
adc
mov
cmpl
jmp
and
je
push
hlt
jmp
das
shrl
xchg
sub
cmovbe
mov
inc
jg
arpl
sub
js
push
pop
add
ds
fsts
sahf
movsb
sbb
shlb
xor
adc
mov
jae
fistl
and
aad
movsb
or
lret
adc
divl
jne
js
dec
push
std
ficoms
shlb
dec
dec
jle
sub
inc
out
sti
lock
das
mov
jae
add
jne
xchg
js
sarb
and
in
loopne
pushf
xor
test
mov
shlb
and
fdivrp
mov
push
pop
or
loop
pop
daa
sbb
aas
pop
cld
mov
dec
icebp
cwtl
fcoms
jg
scas
sbb
mov
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
aaa
dec
sbb
jg
jle
jmp
std
add
ret
sub
test
movsl
adc
rol
jl
fs
cmpsl
divl
fstpt
jbe
enter
or
test
fmul
fisubrs
stos
add
arpl
outsb
pop
into
aad
movsl
jne
wrmsr
out
aad
dec
inc
ja
xor
mov
addr16
xor
or
icebp
andl
adc
out
lcall
stos
scas
js
jbe
dec
pop
inc
stos
inc
and
jae
in
cmc
xchg
int
xchg
mov
jmp
pop
cmp
nop
sahf
movsl
lret
out
sbb
or
push
shlb
mov
xchg
push
lock
sub
dec
popf
lods
add
call
insb
inc
xchg
aas
or
mov
adc
dec
or
jmp
addb
test
mov
shrb
mov
stc
cmpsl
add
push
pushf
js
jecxz
push
xchg
xchg
nop
pop
gs
roll
cmp
je
jmp
xor
cltd
js
popa
cmp
dec
add
jle
or
jle
push
imul
ds
ja
popa
outsb
sub
add
sub
mov
es
sub
push
cmpsl
xlat
nop
gs
iret
aaa
mov
test
or
mov
dec
stc
in
mov
mov
mov
inc
mov
into
sub
scas
fstpt
and
rcrl
fisttpll
neg
test
je
push
mov
push
inc
mov
mov
cmpsb
ljmp
mov
adc
mov
xchg
push
hlt
sbb
les
dec
and
dec
pop
push
stc
xor
jae
addb
pop
xchg
sbbl
inc
adc
mov
stc
or
ja
adc
cmpsb
sub
mov
xchg
movl
jp
or
xchg
fs
ja
movsb
dec
mov
xchg
idivl
inc
mov
mov
loopne
dec
outsb
repnz
adcl
inc
mov
add
inc
xchg
add
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
rol
mov
or
jle
aas
pop
mov
dec
inc
pop
cmp
lahf
pop
ja
jo
jno
ds
scas
sub
popf
mov
xchg
shll
xor
lds
jo
and
fadds
and
shll
add
mov
cltd
cmpsb
add
aas
jae
cmc
xchg
roll
into
add
lds
std
js
test
das
xlat
adc
pop
imul
in
out
std
push
sti
jle
sbb
mov
stc
insb
dec
cmp
xchg
dec
cmp
inc
jns
dec
aad
popa
jb
pop
xor
leave
adc
cs
dec
pop
pop
stos
add
xchg
xchg
das
iret
loope
hlt
aas
es
pop
in
sbbl
inc
dec
mov
nop
pop
shlb
adc
push
dec
aad
cli
jno
rorb
orb
mov
sahf
aam
add
nop
xchg
sahf
jecxz
jno
outsl
imul
pop
xchg
js
or
sbb
pop
wrmsr
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
pop
mov
jle
jg
jle
add
or
or
icebp
mov
push
or
test
outsb
sub
sub
call
mov
mov
outsl
xor
das
daa
cmp
lcall
add
pop
and
dec
loop
cmp
pop
add
dec
not
cmp
cmp
mov
xor
mov
loope
mov
sub
cmp
fnsave
movsl
lock
in
stos
inc
mov
jae
ja
inc
jmp
adc
movsl
mov
or
cli
pop
jle
cmp
sbb
pop
sahf
fcoms
mov
sbb
sbb
jg
int3
mov
cmpl
out
in
sahf
push
push
xor
pop
push
daa
inc
ljmp
pop
mov
loope
loop
fsubrl
lcall
push
and
xorb
add
and
add
dec
sub
lock
jle
or
jle
mov
jle
jo
or
and
sbb
inc
cltd
mov
jecxz
push
arpl
xor
adc
pushf
std
mov
jecxz
or
jne
into
das
movsl
dec
int
mov
ficomps
mov
fcomps
cmp
mov
push
mov
jl
or
in
xchg
fs
in
inc
mov
pop
outsb
push
inc
inc
lahf
lock
jge
mov
inc
faddl
call
and
clc
das
push
and
cmp
pop
sahf
dec
orl
push
xor
fistl
jnp
and
or
sbb
dec
pop
sbb
sbb
lret
ds
aam
clc
cli
stos
xchg
inc
daa
add
scas
je
es
lock
fadds
cmp
cs
or
enter
pop
pop
stc
add
stc
mov
xor
bound
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
adc
jle
jg
jle
jo
cmp
mov
pusha
sub
je
mov
xchg
pop
scas
or
sub
addr16
inc
mov
mov
mov
lret
jp
pop
xchg
mov
scas
scas
sbb
sarl
and
adc
sub
dec
pusha
bound
out
ret
xor
sbb
cli
fstl
pop
xchg
push
outsl
add
xorl
sub
scas
cmp
scas
mov
xchg
sbb
js
mov
std
add
aaa
repnz
xchg
rcll
sbb
pop
mov
insl
pop
aaa
adc
cmp
aam
pusha
pop
jnp
xlat
fmuls
shlb
push
mov
push
lods
enter
mov
data16
iret
in
xor
lret
pop
adc
mov
dec
aad
adc
sub
cmp
add
call
imul
cld
mov
in
inc
out
cmp
dec
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
adc
sahf
jb
and
or
jle
pusha
jae
arpl
ds
testb
mov
add
jecxz
call
mov
lret
and
jle
lahf
shlb
pop
hlt
mov
push
add
cmp
imul
jno
pop
sub
mov
cmp
add
into
lods
adcl
mov
dec
scas
adc
mov
stc
ret
ljmp
mov
push
outsb
dec
push
inc
loop
push
dec
ljmpw
push
sub
sbb
pop
mov
decl
pop
push
aas
aas
lahf
mov
sbb
jnp
loopne
inc
add
or
mov
test
das
daa
imul
insl
mov
scas
cmp
into
jns
cmp
dec
inc
pop
pop
insl
outsb
xor
pop
repnz
cmp
pushf
jnp
add
bound
and
inc
add
movsl
out
or
popa
cmp
stc
jno
push
or
rorl
add
or
inc
std
decl
jmp
or
stc
xchg
ljmp
jg
jle
stc
pop
dec
mov
les
lock
mov
ret
dec
or
aaa
xchg
or
ss
jae
leave
stos
mov
mov
cmp
inc
imul
dec
add
inc
sub
mov
lcall
popa
in
outsl
lds
and
lret
test
mov
aaa
fldl
lcall
out
jbe
stos
out
ja
fwait
cmpsb
insl
or
int3
mov
mov
mov
mov
xor
sub
clc
mov
add
je
cli
inc
adc
push
faddl
push
packsswb
inc
hlt
mov
push
test
cmpsb
mov
scas
xor
rcll
pusha
movsl
sub
pushf
add
inc
jecxz
mov
fldt
xor
fistpl
push
in
in
mov
mov
add
repz
cmp
jge
enter
lods
sbb
xor
adc
push
mov
negb
adc
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
inc
lret
xlat
inc
sbb
js
mov
js
dec
adc
push
inc
pop
jge
icebp
hlt
mov
jno
inc
mov
cmpb
js
repz
sub
or
jmp
push
xor
sub
mov
repz
subb
push
stos
cmp
lahf
xchg
loope
clc
inc
insl
repz
add
or
stos
in
sub
cmp
xor
addr16
out
xchg
adc
xchg
mov
pop
mov
mov
mov
mov
jmp
es
mov
les
xor
mov
jle
jle
jle
scas
cmp
test
insb
sub
dec
cmp
scas
pop
lea
xor
imulb
out
sub
aas
ljmp
jmp
xchg
add
inc
pusha
rcr
mov
test
push
mov
repnz
sub
fildll
pop
fcmovnb
pop
jno
mov
outsb
int3
pop
ret
insl
sbb
and
mov
rclb
mov
jge
push
add
cmp
jo
shlb
out
cmpsb
testb
cli
outsl
mov
roll
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
loopne
mov
push
jg
jle
leave
aas
add
mov
fmuls
cmpsl
imul
fsubp
addb
jecxz
inc
ret
mov
stos
jl
xlat
adcb
orb
popa
mov
adcl
dec
lcall
icebp
shll
dec
ljmp
jno
pop
or
mov
pop
dec
xor
push
test
loope
lret
daa
into
push
mov
sti
fs
pop
jo
xchg
lret
scas
mov
or
in
pop
cmp
das
fmuls
pusha
out
jmp
jecxz
mov
mov
mov
daa
jp
ror
inc
jo
xor
cmp
fcomp
inc
xchg
cmc
call
rcll
xor
test
out
es
lods
xor
test
ds
pop
cli
mov
scas
mov
xchg
ja
xchg
adc
cmpsl
int3
imul
xor
dec
sub
jl
das
shll
lea
mov
pop
inc
pop
xor
push
push
js
cs
push
shrl
push
dec
sahf
cmp
mov
mov
arpl
or
inc
cld
cmp
pushf
clc
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
lahf
xor
divb
jg
jle
icebp
pop
fucomi
push
lds
addr16
adc
mov
cmpsb
ret
mov
add
mov
lcall
adc
icebp
mov
push
pop
outsl
xchg
jmp
dec
ja
mov
cmc
popa
push
out
sbb
cld
mov
arpl
les
inc
mov
lods
pop
mov
jp
cmc
insb
push
fwait
sbb
ss
imul
sbb
jne
sub
xor
sub
test
lea
nop
push
call
inc
insl
scas
cmp
sbb
pop
inc
push
xor
pop
sub
mov
add
adc
xorb
push
xor
shl
and
mov
fnsetpm(287
stos
cmpsl
cmpl
xor
shl
mov
xlat
ja
mov
dec
aad
out
fbld
in
out
cmp
mov
adc
pop
pop
ret
push
jae
sbb
add
test
sub
mov
sbb
pop
push
add
push
or
gs
jp
xchg
or
and
fisubrl
call
adc
aam
inc
adc
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
and
jle
push
jg
jle
dec
ds
jno
scas
f2xm1
in
filds
js
ret
outsl
and
push
incl
in
jp
mov
das
iret
ljmp
push
mov
jb
fldt
sbb
addr16
in
stos
push
xchg
adc
xchg
ret
mov
cmpb
add
mov
jg
sbb
pop
lahf
dec
sbb
mov
push
in
in
xchg
mov
jp
push
ja
cmp
mov
mov
dec
movnti
mov
mov
rcl
mov
pop
fists
cmpsb
add
insl
pop
sub
filds
idivb
xchg
ror
fisubl
adc
mov
jns
sarb
mov
insl
push
outsl
mov
pop
rcrl
cmp
push
add
les
outsl
or
cmp
int
mov
jno
pop
scas
pop
push
rcl
lahf
push
ret
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
es
jle
lds
jle
mov
or
or
xor
sub
sub
jecxz
xchg
lcall
or
lcall
push
push
fistpll
shlb
decb
stos
jge
push
fistpl
xor
push
sarb
adc
mov
or
cmp
in
and
lods
inc
mov
stos
sbb
ror
and
mov
loope
cwtl
mov
in
add
in
inc
pop
xor
iret
inc
ret
aaa
jns
mov
les
jl
aam
mov
mov
mov
dec
sub
out
mov
jno
add
mov
sub
adc
mov
sbb
sahf
out
insb
inc
pop
cltd
ds
sub
push
cltd
lods
push
sbb
sbb
jle
pusha
aas
fidivrl
jmp
roll
pop
insl
and
cmp
rcrb
imul
jne
test
arpl
sub
leave
stc
xchg
lock
imul
ds
scas
lcall
jnp
mov
dec
scas
push
mov
imul
mov
and
push
sub
mov
gs
lahf
sub
sbb
xchg
stc
dec
adc
xchg
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
dec
jecxz
and
cmp
lds
jle
scas
cmpsb
popa
dec
divl
mov
add
xor
add
and
dec
btc
int
sbb
cmpsl
out
dec
aas
pop
sub
push
mov
cmc
push
stos
mov
push
loop
sbb
pop
push
xchg
xlat
hlt
push
in
xchg
movsl
dec
cmpsb
jns
sbb
pop
outsl
push
scas
je
pop
ret
or
dec
xchg
pusha
sub
dec
push
pop
adc
sahf
shll
add
les
aaa
add
insl
and
lcall
fsts
pop
js
repnz
mov
dec
xchg
jnp
mov
cwtl
add
dec
loope
ljmp
movsl
lods
inc
dec
pusha
fisttpll
fs
mov
stc
xchg
stc
xor
shlb
stc
lcall
pop
mov
loopne
and
inc
sbb
mov
cld
jecxz
push
cmp
outsb
add
ds
test
stos
inc
lea
jno
enter
dec
xchg
xorb
jl
adc
jo
sbb
cmp
hlt
mov
push
ret
fidivrl
inc
loopne
jecxz
push
test
sbb
pop
dec
pop
pusha
pop
or
inc
pusha
xor
push
inc
sbb
xchg
lea
jb
cmc
iret
lods
pop
xor
xor
add
jmp
jg
add
jns
cmp
jl
dec
cmp
lds
jle
inc
shrb
aad
je
out
out
or
push
xlat
in
pop
push
jb
das
jo
addr16
mov
adc
lret
and
scas
flds
add
mov
or
sub
fnstsw
jae
jae
test
push
aam
xor
insl
push
repnz
xchg
xchg
rorb
pop
in
sbb
movsl
push
mov
fwait
inc
pushf
sahf
or
fisttpll
mov
and
sub
push
jecxz
xchg
xor
das
in
sbb
test
cmpsb
mov
aas
pop
or
divl
inc
ficoms
mov
push
lock
adc
cmc
in
mov
push
fsubl
aas
inc
push
mov
incb
mov
xorl
mov
gs
movsb
arpl
mov
fwait
mull
fwait
into
aad
lcall
sbb
fldenv
fldcw
xor
mov
test
push
xor
addr16
sub
push
xchg
or
jg
cmpsb
cmpsl
sar
pop
es
loopne
push
lods
pop
sbb
std
test
sbb
cmp
xor
xchg
add
mov
mov
int
pop
call
lret
pusha
cmp
icebp
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
out
cmp
lds
jle
lcall
inc
stos
mov
push
repnz
aas
nop
ja
lds
cld
je
mov
lret
push
fwait
or
out
sub
lcall
ffree
push
and
repz
out
dec
mov
fisubl
or
clc
mov
or
push
inc
insl
test
push
cwtl
pop
xor
mov
test
or
rclb
xchg
mov
mov
addr16
loope
push
or
mov
sub
cmp
movsl
dec
clc
leave
dec
pop
shlb
shlb
repnz
out
mov
add
jg
jnp
mov
imul
shl
or
push
adc
cmp
xchg
adc
in
sbb
mov
xchg
jmp
adc
mov
nop
fcmovu
or
jb
mov
lret
pop
xchg
mov
jae,pt
aam
shlb
adc
or
out
cwtl
shll
mov
sbb
fildll
stos
ds
ret
pop
sbb
clc
pop
out
sti
or
inc
dec
sbb
mov
mov
insl
hlt
or
inc
lods
inc
lods
or
push
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
orl
jle,pt
mov
jle
add
cmp
push
lret
test
xor
or
cmc
sub
ret
xor
and
jle
mov
mov
add
jp
mov
or
test
xor
sub
out
jae
push
push
mov
xchg
push
pop
bound
pusha
dec
mov
mov
dec
xchg
xchg
xchg
jnp
push
movb
sti
push
data16
mov
pop
adc
in
aaa
leave
push
jno
mov
nop
fcmove
add
sub
jb
xchg
add
jbe
outsl
divb
js
daa
jg
es
lock
mov
lret
add
iret
orl
jb
xlat
into
movsl
cmc
jp
cmpsb
dec
popf
pop
xchg
rcll
xchg
xchg
test
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
adc
jle
mov
jle
sub
or
das
int3
xchg
loop
xor
push
push
add
push
or
sub
hlt
fwait
aam
mov
add
inc
std
pop
shl
loop
mov
int
jae
aaa
cmpsl
pop
mov
cmc
adc
mov
xor
stc
add
outsl
dec
jecxz
xor
aam
jb
mov
mov
add
test
enter
ret
aaa
scas
int3
rep
clc
mov
popa
imul
xor
xchg
lahf
imulb
xchg
sarb
enter
aaa
movsl
cmp
aaa
xor
popf
fldcw
add
nopl
mov
xor
es
dec
sbb
xchg
outsb
fildl
dec
cli
or
mov
jne
movzbl
and
jmp
mov
stos
popa
jns
in
mov
cmpsb
push
mov
mov
jle
jge
or
add
pushf
adc
mov
jmp
dec
ja
fstpt
pushf
xor
fstpl
das
fwait
call
movsl
jecxz
arpl
cmp
test
or
leave
xor
mov
pushf
mov
jnp
dec
fcoms
shl
push
adc
enter
push
add
in
in
and
pusha
mov
shll
stc
adc
pop
loopne
and
jae
jb
lods
mov
test
jns
pop
stc
dec
lret
pop
add
inc
ja
dec
adc
inc
data16
jmp
ljmp
movsl
fsubrp
popa
das
cmp
and
fldz
test
dec
out
push
call
gs
mov
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
std
pop
dec
pop
cmp
jle
jle
jle
dec
and
jae
enter
lods
adc
outsl
mov
lds
xchg
flds
movb
mov
ficoms
and
adc
and
popa
dec
scas
xchg
in
push
sbb
dec
mov
jb
ds
das
data16
xchg
bound
repnz
or
sarb
aad
iret
stos
inc
jb
mov
loop
iret
dec
insb
xchg
ret
mov
repnz
sahf
push
dec
cmpsb
inc
repnz
add
dec
ljmp
jne
mov
in
lcall
cmp
outsl
gs
inc
insb
and
mov
cmp
or
stos
addr16
test
inc
mov
test
jne
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
push
popf
test
xchg
cmp
jle
jmp
adc
sub
sbb
out
bound
hlt
adc
pop
js
vmovss
hlt
inc
sbb
mov
cmpsl
imul
jmp
push
mov
test
fldenv
loop
push
mov
cmpsb
push
addb
xorb
mov
iret
pop
sub
icebp
decl
push
sbb
orl
add
stos
mov
mov
add
clc
xchg
fstpl
mov
mov
adc
xchg
sbb
and
int3
and
xorb
sub
mov
cmp
pop
cmp
pop
pop
out
movsb
xchg
ret
mov
scas
cltd
cmpsb
test
lods
pop
mov
loopne
out
mov
movsb
mov
and
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
push
fcomi
jmp
jle
jle
push
shll
loop
iret
or
jg
bswap
or
ss
int
xchg
adc
mov
cmc
push
decb
inc
adc
in
add
imul
add
loopne
scas
decb
iret
xchg
rcrb
jbe
ss
add
out
mov
cmp
fstpl
or
imul
outsb
jb
sbb
test
mov
push
aas
imul
sysexit
mov
sbb
inc
movsb
sub
push
adc
dec
mov
xor
fwait
sub
jl
lret
dec
in
xor
cmp
dec
and
mov
jge
mov
fwait
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
jg
and
jle
mov
jle
xchg
iret
addr16
or
fwait
mov
orb
push
aas
add
inc
stos
sub
cmp
dec
inc
es
adc
lods
cwtl
or
movsl
cs
fiadds
jne
inc
push
pop
ja
add
pop
stc
cli
adc
fidivs
fsts
pop
jle
add
mov
dec
add
in
aam
sahf
cmpsl
jno
mov
call
dec
clc
adc
pop
inc
aaa
fsubrs
adc
out
mov
xchg
shlb
stos
inc
shlb
inc
fbstp
cmpl
out
pop
add
lock
push
or
mov
out
dec
sub
pop
in
test
push
mov
ja
cmp
test
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
cltd
fidivs
jns
jle
mov
jle
add
fnstcw
out
sbb
out
dec
in
movsl
in
jbe
sbb
idivl
xchg
cmpsb
jmp
jg
mov
or
test
xchg
sub
dec
pushf
loop
jne
dec
xor
mov
in
lods
adc
inc
or
test
fiadds
mov
movsb
leave
sub
jp
xchg
pop
rcrb
sbb
ret
fidivrs
aaa
das
rcrl
cmc
jge
or
enter
jle
addr16
dec
jg
rcll
adcl
add
pop
ret
sti
push
push
mov
outsl
inc
pushf
test
adc
inc
push
fidivrs
clc
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
xchg
lret
mov
jle
mov
jle
pop
js
and
dec
jg
test
inc
repnz
loop
inc
xlat
stos
xchg
mov
and
jb
sbb
add
bound
sti
mov
aam
lcall
mov
xor
das
stos
outsb
daa
imulb
and
loop,pt
jne
push
dec
fdivl
fsubrl
cld
xchg
sbb
filds
insb
and
lcall
mov
push
pop
loopne
xor
aam
mov
hlt
mov
jae
lea
nop
adc
cmpsb
mov
test
es
mov
dec
lret
cltd
and
mov
scas
and
cmp
and
dec
in
dec
in
jecxz
push
rorb
push
push
icebp
shrl
loopne
inc
and
ss
icebp
jl
or
jle
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
jno
stos
mov
jle
mov
jle
add
cmpb
sbb
scas
or
inc
xchg
inc
sbb
pop
mov
scas
jnp
sbb
and
or
loopne
lds
andb
jb
xor
adc
subb
packsswb
cmova
mov
outsb
insl
test
int
push
mov
clc
pop
pop
aas
mov
or
popf
inc
divb
pop
jno
jecxz
arpl
idivl
cmp
add
push
inc
sbb
dec
xchg
cli
sub
jo
std
xor
stos
sbb
testb
mov
aam
inc
ja
xlat
push
mov
and
stos
stos
and
push
push
cltd
out
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
adc
addr16
shll
jle
jle
jle
lea
cmp
add
notl
ds
rcrb
xchg
dec
jnp
cmp
and
repz
pushf
mov
movsl
xchg
xchg
nop
add
les
jnp
jle
xchg
out
fcmovu
push
sti
pop
punpckhdq
in
mov
int
mov
loop
dec
xor
stos
ljmp
ss
loope
mov
or
cmp
mov
add
lds
add
jp
add
add
mov
xor
outsb
xchg
pop
pop
popf
stc
sub
pop
or
icebp
push
cli
bound
jns
inc
mov
lods
orl
cmp
dec
inc
aam
cmp
and
xor
xchg
jmp
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
mov
or
aaa
jle
mov
jle
rol
test
sti
pop
shlb
xlat
cli
imul
js
lods
sbb
fidivrs
mov
sub
jle
lds
les
push
rolb
inc
mov
or
adc
fisttpl
fwait
mov
insb
push
in
psubsb
mov
jae
sub
lods
jns
or
and
mov
sub
push
sub
cmpsl
pop
lock
aad
cltd
stos
xchg
ret
mov
push
movsl
push
or
sub
push
mov
je
aaa
jnp
pop
addl
aas
mov
subb
icebp
insl
stos
aam
inc
xchg
jbe
jmp
icebp
sbb
xchg
sub
arpl
dec
cmpsl
popf
lret
das
movl
loopne
add
inc
loop
xchg
imul
xchg
nop
push
aaa
jle
mov
jle
sub
pop
loopne
rorl
dec
iret
jecxz
fcomip
out
xchg
or
sub
mov
orl
xor
mov
ss
jo
sub
mov
jns
jp
das
movsb
inc
pop
dec
mov
sar
jmp
nop
jo
pusha
mov
repz
cld
nop
push
or
xchg
push
out
pop
mov
jge
pop
sbb
scas
pop
aaa
rcrl
jmp
adc
jle
inc
and
fs
sub
and
xor
clc
dec
mov
aas
adc
cmp
pop
lahf
xlat
shlb
mov
cs
mov
jo
dec
mov
int
out
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
adcl
jle
jle
jle
or
xorb
fsubl
xor
jno
xchg
pop
mov
int3
in
mov
jnp
push
inc
out
sub
adc
fsubrl
mov
dec
call
and
mov
ljmp
pop
push
jb
daa
and
cmp
adc
mov
fmulp
mov
sub
xor
jmp
mov
mov
imul
mov
fnsave
insl
dec
mov
add
pop
clc
add
mov
mov
je
nop
inc
leave
push
adc
cmp
push
xor
mov
jno
pop
pop
mov
icebp
sti
push
jp
fxch
xor
lock
push
int
repz
cwtl
fs
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
sti
lahf
inc
push
loope
jle
mov
jle
clc
and
or
bound
push
test
sub
mov
divl
movsb
xchg
in
sub
stc
imul
ljmp
mov
in
cld
pop
dec
mov
icebp
lret
mov
lahf
push
cmp
sbb
jae
data16
loope
pusha
inc
push
inc
icebp
fcmove
inc
mov
rclb
jmp
lret
cs
je,pt
jno
xchg
negl
pop
cwtl
fildll
push
mov
repnz
cmp
add
mov
js
cmp
mov
mov
scas
lock
mov
jno
push
cwtl
ss
cwtl
imul
pop
lods
adcl
and
int
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
les
ficoms
cmp
into
movl
jne
aas
jg
inc
push
add
sti
clc
dec
call
enter
hlt
jp
xor
inc
ficoms
xchg
cmp
pop
jne
in
inc
mov
cwtl
rcll
sub
mov
sub
ljmp
xchg
xor
mov
je
cmpl
mov
and
adcl
shrl
add
push
movsl
arpl
cltd
aam
mov
sub
stos
lahf
cmp
sbb
pushl
push
ljmp
repz
jno
sbb
mov
shrb
mov
outsb
xor
rolb
cmp
cmp
or
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
addr16
in
jno
jle
mov
jle
adc
or
sbbb
fldt
jbe
xchg
jne
mov
cs
dec
loopne
mov
sub
push
lods
repnz
stc
mov
popa
cmpsl
push
aad
ljmp
loopne
dec
cmp
andb
enter
dec
hlt
inc
push
ljmp
push
les
fsub
push
jns
and
aaa
out
mov
or
test
imul
int
fs
add
pushf
pop
stc
iret
adc
mov
jg
sbb
lods
dec
bound
add
jns
sbb
mov
xor
xchg
sbb
or
ret
stos
pusha
cltd
cmpsl
je
mov
cmp
inc
call
xor
jmp
popa
jno
jnp
jnp
or
lock
dec
lret
jle
mov
jle
add
mov
mov
mov
sbbl
jl
fldenv
jne
pop
add
xor
sahf
mov
push
jne
and
popf
shlb
push
mov
lock
pop
xor
sub
movsb
movsl
mov
push
pusha
xchg
add
test
or
push
pop
out
jg
rol
sbbl
xchg
mov
pop
push
sti
testl
pop
arpl
lds
mov
mov
mov
lock
add
inc
out
pop
mulb
mov
ret
push
rol
xor
fucom
and
pop
lahf
rcrb
mov
sub
imul
mov
jno
vmovaps
xor
pop
in
cmp
jmp
test
xchg
push
stos
push
push
gs
inc
inc
insb
or
jle
inc
in
adc
mov
int
nop
cmpl
adc
pop
dec
pop
push
cmpsl
test
lock
insb
test
mov
imul
mov
mov
xor
aam
and
imul
xchg
sub
dec
daa
push
push
push
pusha
cmovge
dec
ret
decb
cmp
adc
xchg
mov
jo
jecxz
adc
roll
mov
xor
or
mov
jne
repz
mov
int3
pop
popl
fiadds
mov
notb
jb
bnd
jno
lods
jnp
stos
dec
mov
lods
lods
lods
jb
shll
xor
shr
mov
fstpt
scas
clc
and
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
jns
mov
and
cmpsb
rol
adc
fistpll
gs
pop
sbb
fimuls
xor
mov
xor
adc
fimuls
js
lods
sub
sbb
mov
and
repz
sbb
push
cmp
sbb
dec
add
sahf
cltd
int3
repnz
cli
fdivl
xchg
inc
xchg
movsb
loope
std
scas
inc
dec
dec
mov
rcrb
movsl
mov
xchg
jecxz
mov
icebp
adc
pop
push
scas
xorl
mov
icebp
ret
nop
int
stos
aam
frstor
pusha
push
rclb
inc
out
cmc
fisubs
aad
lock
sub
lods
push
sbb
shl
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
