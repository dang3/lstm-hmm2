add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
mov
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
xor
add
jns
jle
jne
in
add
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
jl
mov
pop
mov
sub
enter
xchg
pop
sbb
and
adc
mov
push
test
scas
imul
out
out
add
xor
pop
cmpsl
arpl
lret
fists
and
xchg
fs
or
cmp
test
imul
adc
popf
int3
mov
bound
push
jo
lods
jg
push
aam
sub
pop
cmpsb
lret
or
sarl
out
out
pop
sbb
cld
fists
leave
rolb
dec
int
rclb
test
shrb
aad
cmp
jmp
fld
jp
jne
jle
in
fs
in
imul
lods
daa
sahf
ss
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
loope
call
jl
jl
ss
nop
mov
dec
cmp
cmp
lret
pop
push
loop
or
insb
add
add
xchg
mov
cld
out
jg
pop
data16
jae
mov
push
mov
adc
cmp
cltd
hlt
jnp
xor
pop
fwait
ljmp
ja
clc
lock
push
das
insl
cld
xchg
xchg
jb
fldenv
fwait
dec
push
movb
cwtl
cmp
cmp
int3
xchg
ficoml
xchg
in
imul
test
test
push
mov
inc
imul
stc
xchg
jae
jb
jns
sbb
xchg
sbbb
cmpl
xchg
push
inc
xchg
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
in
aaa
lock
jle
jl
jl
jl
dec
jge
xchg
loopne
adc
je
ja
and
or
pop
scas
ret
ljmp
arpl
pop
sub
test
xor
mov
mov
sti
and
dec
inc
mov
cmp
fsubl
in
jecxz
adc
or
adc
sub
sub
mov
xor
jno
insl
out
push
jne
pusha
adc
orl
sbb
push
mov
es
fldenv
sti
in
cld
xchg
or
mull
cmp
repnz
and
out
dec
mov
lret
fwait
sahf
aad
jnp
sub
loopne
stc
xchg
mov
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
and
pop
call
mov
inc
sub
repz
jl
idiv
and
jle
adc
imul
xrelease
pop
mov
movsb
lds
mov
aaa
push
xor
sbb
or
mov
xorb
mov
push
jge
sub
dec
imul
jg
jae
sti
popf
or
pushf
or
add
push
dec
inc
adc
jae
hlt
add
push
xchg
mov
dec
xchg
push
cmp
push
adc
mov
lods
test
dec
je
mov
xor
dec
jl
lcall
push
mov
pop
dec
ret
or
cmc
lret
aas
sub
shll
ret
add
inc
add
enter
add
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
xchg
jl
jl
hlt
jne
push
fdivl
xor
aaa
or
mov
test
push
xchg
jp
xor
loope
iret
aad
sbb
and
lahf
insb
cmc
lds
jecxz
movsb
jp
out
fcoms
test
fidivrl
sarb
arpl
aam
push
push
pop
mov
fbstp
cwtl
xchg
jne
outsb
jmp
mov
jae
mov
adcb
ja
cwtl
fbld
mov
inc
andb
lods
out
xchg
adc
push
xchg
stc
and
cmp
mov
cmpsl
out
xlat
std
jo
imul
in
adc
orb
insb
movsb
sub
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
sbb
cmp
mov
mov
cmp
pop
out
in
push
in
dec
fidivrs
lret
sti
scas
jmp
lret
insl
inc
incb
movsb
jle
popf
dec
mov
jo
add
nop
pop
imul
data16
repnz
les
test
stc
cmp
lea
jns
xchg
int
into
push
push
pop
dec
inc
cmp
cmp
ret
idivb
and
mov
insl
adc
mov
mov
pop
imul
sub
push
gs
out
lods
mov
push
ss
imul
mov
and
test
test
mov
xor
das
mov
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
jbe
jo
jl
jl
jl
cmp
and
pushf
push
loopne
push
out
lcall
xor
cmp
sbb
jg
push
xor
xor
les
mov
inc
xor
push
add
data16
jmp
scas
mov
enter
push
das
in
pushf
push
insb
test
pusha
and
out
mov
test
pop
rcrl
xorl
loop
xlat
mov
inc
icebp
sbb
lea
jb
fldt
xchg
hlt
mov
pop
and
and
cmp
fsub
xchg
sarl
fbstp
ror
cli
test
add
stc
pop
jb
jp
cmpsb
aam
xchg
jne
call
jmp
cld
mov
mov
dec
mov
aad
adc
jl
mov
out
lock
stc
push
xchg
aas
mov
mov
in
mov
pop
jnp
fbld
xor
ror
sub
gs
stos
jnp
adc
cmp
mov
pop
jae
inc
lcall
xchg
icebp
dec
fs
popa
iret
rcrb
pop
sahf
hlt
push
ljmp
out
mov
aam
cmp
dec
cmp
shlb
cltd
cmp
out
xchg
push
movsb
ficoml
jnp
adc
cmp
mov
jbe
cmp
sbbb
dec
and
sub
pop
push
rclb
mov
inc
cld
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
das
mov
shlb
jl
jl
jl
ret
out
push
mov
mov
mov
inc
or
cltd
pop
jne
fsubs
sbb
in
cwtl
filds
and
movsb
push
add
xchg
arpl
jae
pop
movb
xor
iret
cmp
adc
xchg
fwait
lods
pusha
insl
gs
bound
fistpll
mov
pop
add
sub
cltd
push
outsb
fisubrs
test
mov
aam
aas
jnp
les
out
mov
popf
mov
add
outsl
fstps
in
insl
sub
xlat
lea
mov
repz
xlat
ret
roll
xchg
mov
push
mov
inc
gs
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
icebp
pop
pop
insl
sbb
jl
jl
jl
push
inc
cltd
and
lea
inc
jno
pop
shrb
add
cmp
paddusb
sbb
push
ja
mov
and
cli
bound
mov
iret
xor
enter
jp
lret
xor
je
rcll
pop
or
add
mov
adc
dec
or
addr16
fstl
nop
xor
inc
aam
outsb
mov
cmp
mov
mov
andb
dec
leave
push
xor
pop
ds
adc
adc
jmp
fisubs
push
imul
cwtl
jae
jge
mov
fisttpl
mov
dec
or
xchg
fwait
push
add
mov
add
sbb
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
jmp
bound
jne
jl
jl
jl
adc
rol
lea
mov
xchg
mov
fmull
mov
jnp
pusha
mov
fwait
cld
int3
in
push
jp
sbb
out
mov
outsl
mov
push
sub
popa
mov
inc
int3
lret
clc
je
sti
inc
sti
mov
aad
imul
jle
mov
xchg
les
inc
je
jnp
sub
push
ss
sahf
cmpsb
inc
popl
test
out
fwait
lods
xor
sub
jne
mov
popf
pop
push
adc
in
jg
xchg
les
xorb
cmp
call
lahf
aad
pop
pusha
lahf
popl
lret
inc
fmuls
mov
dec
rclb
jne
jmp
pop
jecxz
xchg
mov
jb
daa
inc
sub
sbb
je
jl
jl
jl
sub
aam
cmp
test
push
ds
jno
add
in
repz
in
cs
jo
sbb
dec
sub
rclb
xlat
mov
push
xchg
sub
pop
xor
imul
stos
push
or
frstor
xor
dec
sub
lahf
jge
sub
lock
insb
test
xchg
jmp
into
add
rol
and
cld
jbe
and
iret
xchg
hlt
subl
and
shlb
xor
push
jb
jno
fwait
lahf
cmpsl
cmp
mov
jne
aaa
push
jl
jb
jg
out
das
imul
or
into
add
add
adc
mov
mov
push
int3
xchg
xchg
int
std
mov
jl
jl
jl
sbb
mov
and
pusha
pop
sbb
cmp
push
push
out
test
arpl
lret
mov
movsl
xor
pop
pop
jno
ljmp
pop
jnp
rorl
loope
lcall
mov
jbe
popa
jns
add
rcl
sbb
jle
rol
jl
mov
mov
fisubl
sti
mov
in
add
push
aam
enter
jl
mov
inc
popl
outsl
scas
or
insb
arpl
xor
push
xor
jg
les
sub
push
rolb
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
icebp
pusha
ja
jl
jl
jl
cld
inc
sub
movsl
cltd
xchg
icebp
or
hlt
inc
call
outsb
xor
scas
inc
pop
jae
sub
mov
lcall
xor
adc
pop
gs
xchg
cmp
mov
outsb
cmpsb
fsubrp
xor
lcall
xchg
dec
xchg
or
jmp
fiadds
adc
xorl
subl
scas
add
pop
inc
jnp
aas
push
mov
aas
adc
popa
mov
mov
mov
dec
repnz
enter
adc
in
je
mov
lea
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
xchg
jl
jbe
jl
jl
jl
in
adc
lahf
mov
inc
jne
inc
and
sbb
lds
push
or
pop
dec
jge
dec
popf
and
neg
xchg
cmpsl
enter
sbb
loopne
or
or
pop
pop
push
lahf
inc
adc
mov
dec
jb
fdiv
xor
cmpsl
inc
sarl
jecxz
jae
insb
push
outsb
inc
sbb
mov
pop
mov
xor
or
enter
scas
roll
out
pop
leave
dec
stos
and
push
lods
fisttpll
flds
dec
cltd
mov
mov
jl
push
adc
or
scas
loopne
dec
pop
cmp
rcrb
inc
or
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
mov
pop
fmull
jl
mov
pushf
push
mov
push
mov
and
and
out
imul
cmpsb
out
ja
and
mov
push
fbstp
dec
dec
imul
pop
jecxz
inc
in
test
cs
and
imul
repnz
mov
fs
hlt
pop
aam
xchg
loopne
pusha
bound
out
shrb
ret
pop
mov
aad
lcall
jmp
fcom
add
sbb
lret
lret
inc
shll
inc
lcall
lock
dec
cmp
add
cltd
sbb
jg
cmp
aas
cmpsb
cmpsb
jge
enter
push
mov
cltd
xchg
sub
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
fs
xor
add
jl
mov
repnz
inc
hlt
sbb
mov
mov
mov
jecxz
movsl
add
popf
mov
mov
imul
and
mull
lock
sub
out
ljmp
xchg
xchg
mov
xchg
sbbb
jmp
pop
je
js
or
dec
sub
sub
push
lcall
sahf
lret
jo
inc
leave
xchg
cmp
xchg
mov
hlt
call
int
and
in
sbb
inc
ret
mov
pop
stos
ds
pop
mov
stc
aas
mov
scas
cli
pop
call
insl
xor
and
aam
cmp
addr16
test
lds
je
jae
insl
sub
push
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
xchg
sahf
dec
or
jl
jl
adc
xlat
outsl
dec
jnp
mov
aas
or
mov
cmc
insb
mov
pop
iret
cwtl
xchg
out
xorl
lea
inc
cwtl
cmp
mov
and
or
sbb
das
add
in
lock
fdivrs
sub
adc
dec
fcoms
roll
repnz
loop
jno
cmp
es
xor
push
ljmp
jmp
mov
jle
stc
mov
mov
mov
call
add
mov
mov
inc
enter
cmc
loop
ret
faddl
lods
inc
or
lds
jg
nop
mull
sbb
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
popa
scas
decb
jl
mov
aaa
sbb
repz
scas
dec
hlt
fldenv
fwait
and
inc
int3
fisubrs
adc
xor
add
sti
fs
jge
hlt
sub
jle
xor
es
pop
mov
cmpsl
push
and
lods
sbb
data16
mov
or
rclb
pop
push
xchg
ror
xor
pop
lret
js
test
push
rcll
fwait
dec
jge
lods
sbb
xchg
cld
test
mov
mov
dec
out
out
inc
in
jbe
aas
test
pop
ret
inc
sub
lret
nop
jns
js
mov
push
outsb
inc
int3
loopne
pop
test
ljmp
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
xchg
fsubl
and
jl
mov
xchg
subl
ljmp
add
mov
fdivl
dec
xor
and
push
lret
xor
add
lock
ss
fidivrl
iret
add
stos
popa
out
int
rcl
cs
add
cmc
repz
jae
fisubrl
mov
cmp
sbb
jbe
int3
mov
jge
lea
lods
into
push
and
pop
push
sbb
leave
and
sub
xchg
push
mov
mov
imul
mov
int3
push
xor
push
pop
and
popa
fwait
mov
pop
test
or
and
sub
ret
jb
sbb
and
add
mov
jmp
pop
fimuls
cltd
push
mov
push
mov
or
jl
jl
sub
mov
pop
adc
cld
and
mov
lock
arpl
int3
dec
pop
outsl
inc
lret
das
icebp
mov
adc
push
inc
test
adc
sbb
push
jns
imul
pop
stos
daa
mov
cltd
popf
and
xor
pop
mov
and
ja
lock
scas
dec
hlt
stc
scas
or
push
jo
test
sahf
inc
xlat
aam
cmp
mov
jns
loopne
push
out
push
xor
add
mov
mov
push
pop
xchg
mov
cmc
pop
repz
mov
fisttpl
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
and
sub
nop
or
jl
xchg
cld
daa
mov
std
enter
into
mov
lret
inc
xchg
cli
movsb
pop
xorb
addb
push
bnd
mov
mov
jne
xor
inc
cmp
test
dec
xor
xchg
cwtl
aad
mov
loopne
cmp
push
xorl
xchg
mov
jno
fisubrl
pop
and
sti
pop
push
mov
aam
dec
jp
out
insb
js
cmp
sbb
roll
add
and
push
mov
sbb
jmp
add
mov
fdivl
mov
addr16
rcrl
cwtl
xchg
adc
pop
add
mov
out
mov
repz
jmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
adc
jl
mov
pop
nop
out
test
rcrl
and
xchg
mov
cli
push
fiaddl
shll
sub
or
into
jno
xor
mov
push
xchg
insl
or
sbb
push
fsub
add
into
add
add
push
cltd
mov
jbe
fcmovu
mov
jns
arpl
xor
pusha
es
xorb
fbld
add
sub
pop
in
pop
pop
sub
mov
addb
ret
jp
jmp
lds
push
pop
cwtl
movsl
xchg
adc
repnz
push
add
lcall
mov
add
jmp
in
test
sti
mov
adc
push
nop
or
jl
mov
sbb
cmc
scas
cmp
xchg
ds
mov
insb
mov
popf
jecxz
jg
lahf
xchg
mov
pop
jae
jge
enter
pop
pop
or
xchg
std
mov
mov
mov
dec
lods
push
sub
out
movsl
pop
sub
xor
inc
movsl
incb
cmp
add
inc
clc
push
out
lods
mov
cmp
ja
sub
dec
dec
pop
rcll
hlt
lds
pop
add
jns
or
fs
pop
sub
pop
nop
outsb
movsl
sub
lret
mov
shr
pop
pop
fisttps
jge
arpl
cmp
xor
add
jmp
dec
jge
cmpb
jge
push
loope
dec
sbb
fidivs
jl
jl
mov
mov
adc
inc
inc
sbb
insl
leave
data16
je
pop
add
adc
pop
pop
fs
xor
adc
and
dec
sub
pop
insb
mov
movsl
sarl
push
adc
push
cmp
imul
pop
mov
cmp
hlt
in
les
sub
insl
inc
ss
std
or
loopne
mov
jp
sar
mov
lock
sti
xlat
and
sarl
pop
pop
dec
cli
addr16
lods
int3
jl
repz
inc
xlat
mov
rorl
insb
scas
es
mov
enter
mov
push
and
neg
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
enter
push
jl
into
jg
jl
adc
pop
pop
clc
mov
sub
jo
and
lahf
rcrl
es
test
fprem1
adc
sub
repnz
xchg
pop
notb
push
sahf
sbb
push
xrelease
cmp
xor
sub
mov
lret
inc
jo
lret
jmp
js
mov
push
cmp
sahf
dec
dec
xor
in
and
cmpsl
push
push
scas
scas
lcall
push
je
and
vpackssdw
aas
popa
shlb
daa
rorl
movsl
aaa
loope
notl
jae
dec
ficoml
dec
xor
xlat
pop
inc
push
cmp
adc
lcall
pop
pop
cltd
mov
test
mov
pop
push
push
jnp
or
mov
adc
nop
icebp
outsl
imul
stos
inc
enter
push
mov
sbb
xchg
push
icebp
add
out
or
adc
loope
jge
jecxz
jb
ret
push
jne
dec
in
mov
xor
cmp
pop
int
call
pop
jmp
push
jl
inc
mov
mov
lock
jecxz
push
repnz
xchg
jp
iret
cltd
mov
subl
add
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
testl
jl
into
jg
jl
cmp
mov
pop
cltd
enter
push
aad
nop
xchg
repz
dec
mov
inc
sahf
sub
test
xchg
popf
mov
lret
outsl
test
cmp
test
ss
rorl
inc
and
or
mov
pushf
inc
jecxz
stos
sahf
adc
clc
xor
ds
add
pop
sub
add
sbb
push
mov
jecxz
mov
xchg
xchg
movsb
in
aad
in
nop
sarb
sbb
xchg
gs
insl
dec
cld
jne
test
and
lock
jae
mov
push
loop
mov
test
stos
cmp
push
sub
lret
mov
aaa
movb
imul
or
or
ret
pushf
or
jp
add
in
data16
hlt
fnstenv
sahf
jecxz
sarb
and
mov
pop
scas
mov
cmpsb
inc
andl
frstor
jle
andb
xor
mov
sbb
push
or
xchg
or
loopne
or
mov
push
std
and
jne
fadd
xchg
aad
sbb
stos
push
or
push
inc
arpl
sbb
and
and
pop
push
aad
xor
xchg
cmp
dec
lcall
xor
pushf
clc
jmp
jno
in
cli
insl
cmpl
add
xchg
sbb
jl
into
jg
jl
sbb
or
dec
je
leave
or
push
push
stc
loope
imul
aad
add
inc
push
mov
fwait
dec
ds
stc
cli
orb
push
jge
gs
and
jno
jbe
test
mov
es
dec
lds
jmp
hlt
stc
jecxz
jne
imul
repz
cmp
out
push
insb
in
mov
mov
fwait
hlt
adc
hlt
add
stos
loopne
mov
in
push
fsubrs
pop
bound
dec
mov
je
xchg
add
int3
and
sbb
cs
in
hlt
pop
stc
mov
cmp
xor
js
sbb
mov
aaa
popf
or
xchg
inc
sbb
ret
mov
bound
dec
scas
test
mov
jae
jl
setnp
add
pop
dec
and
add
sbb
inc
test
mov
lahf
movsl
mov
outsl
testl
mov
jbe
pop
loope
xor
pop
sub
imull
scas
clc
cmp
fnstsw
sub
jle
cmp
test
push
jb
xchg
dec
jge
loop
sub
jp
sti
lea
movsl
popf
pushf
lcall
or
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
or
mov
out
add
jl
jl
cltd
cmp
mov
fnop
xchg
subl
mov
enter
pop
push
pop
mov
mov
mov
push
mov
leave
jo
fcomi
mov
nop
lret
adcb
mov
pop
call
repz
mov
fcmovb
repnz
and
popa
ja
sti
pushf
xchg
js
adc
pop
and
push
leave
aas
call
pushf
pop
dec
mov
mov
cli
insl
push
push
cltd
popa
mov
int
int3
xchg
mov
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
mov
add
jl
jl
push
pop
push
add
test
aaa
add
aaa
aaa
mov
jne
xchg
test
loope
jge
sbb
rolb
test
lock
sbb
in
or
xchg
out
and
mov
shlb
pop
xor
stos
pop
test
movsl
out
xor
xchg
ss
inc
inc
sbb
cmpsb
cmp
xor
ss
inc
shl
cmpsl
adc
fidivl
stos
mov
push
xchg
jp
push
sahf
push
cmp
xor
cmp
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
imul
hlt
jl
jl
add
repnz
hlt
push
mov
xchg
inc
fldl
enter
out
sub
bnd
mov
imulb
imul
ds
fldenv
sbb
inc
and
dec
int
mov
mov
and
mov
scas
and
popa
fdivs
out
push
fs
push
scas
fcomps
fsubl
mov
mov
mov
inc
je
cmp
add
lcall
cmp
sub
ret
push
or
pop
sub
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
sub
std
jbe
jl
xor
jl
mov
mov
lret
adc
daa
ljmp
aas
iret
xchg
mov
and
sahf
mov
fnstenv
mov
jge
and
jb
lcall
jno
sarb
test
mov
inc
gs
mov
add
outsb
sub
imul
sti
mov
sub
loopne
leave
lret
xchg
push
or
mov
mov
xchg
loope
nop
and
inc
pop
cmp
ret
inc
aas
pusha
hlt
ds
add
dec
testw
test
dec
mov
adc
cmpb
xchg
cmc
ret
push
cli
clc
sub
jle
mov
fdivrs
sbb
mov
jae
pop
cmpsb
adc
rclb
test
popa
into
insb
mov
mov
jle
xlat
push
jle
mov
xchg
mov
call
mov
jecxz
or
arpl
jne
mov
mov
sub
dec
imul
sar
aas
or
leave
pop
shrl
push
repz
loopne
imul
sub
mov
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
adc
stos
pop
into
pop
jl
xor
jl
ss
mov
xor
hlt
dec
mov
xchg
adcl
test
xchg
rol
ret
jae
push
cmp
and
mov
and
fcoml
dec
push
in
jge
movsb
ret
in
ljmp
sub
dec
stos
je
lea
mov
scas
sti
mov
inc
fistpl
fbld
mov
sub
sub
fbld
cmpsl
pop
inc
mov
mov
xor
popa
mov
cmp
xor
enter
lods
mov
add
cltd
outsl
popa
and
imul
aad
repnz
pop
jmp
cli
jae
sbb
mov
and
inc
pusha
nop
aaa
pop
mov
decl
jmp
mov
jae
mov
cmp
call
and
mov
pop
lret
shl
ret
pop
sub
xor
push
aam
add
jmp
inc
aas
cwtl
out
dec
xlat
imul
aam
sbb
push
roll
sti
mov
cltd
mov
dec
lock
jb
lds
stc
leave
imul
fists
xor
ret
cmpsb
clc
pop
add
test
insb
lds
hlt
xchg
sbb
loop
jecxz
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
je
lods
aam
push
jl
xor
jl
mov
lcall
jne
repz
jl
jl
mov
sarb
scas
popa
adc
lahf
es
fcmove
mov
pushf
stc
mov
cmpsl
in
push
sahf
jnp
inc
or
push
insl
sahf
movsl
cmp
das
add
sti
mov
jg
aas
add
and
rcr
cmp
inc
int3
mov
pop
jno
jl
sti
jnp
in
pushf
mov
jl
mov
and
push
inc
movsb
cmp
clc
adc
subl
mov
inc
fs
fs
cld
cmpsl
xor
and
aam
int
insl
mov
je
mov
push
jmp
dec
push
add
and
push
mov
bound
lret
mov
jp
insb
int3
jl
scas
cmpsl
pop
ja
lcall
pop
inc
sbb
dec
inc
fcomps
mov
pcmpeqb
stos
pop
xchg
cli
push
aad
scas
and
loopne
adc
and
insl
cmp
sub
cli
loope
test
out
inc
das
jb
iret
in
test
roll
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
xchg
ret
pop
sbb
jg
jl
mov
dec
aaa
lret
jns
stos
addb
sub
mov
outsl
gs
mov
andb
xchg
dec
fdivs
fs
rorb
aaa
test
push
aas
push
cs
shll
adc
xor
sarb
mov
sbb
lea
sbb
fucomip
out
fs
bound
sbb
insl
add
outsl
jge
clc
lods
mov
lcall
cmpsb
pusha
push
add
jne
mov
mov
fs
test
push
push
mov
cmpsl
cmp
outsl
test
mov
call
insl
lahf
inc
std
and
push
mov
inc
lds
sub
lea
sbb
xchg
dec
arpl
sbb
pop
scas
and
and
dec
rolb
daa
mov
jecxz
outsb
mov
test
mov
mov
pop
faddl
pop
jp
and
jmp
scas
jge
fistpll
jmp
dec
addr16
ds
jno
pop
mov
test
call
xchg
test
aaa
jge
push
xchg
xchg
stos
jae
rcrl
push
ds
mov
iret
push
outsl
cmpsb
cmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
jne
push
sbb
jg
jl
shr
mov
fldl
out
clc
outsb
insb
fmul
jnp
out
pop
mov
in
les
jne
subb
adc
pop
mov
xchg
fildl
test
push
shrb
test
and
pop
dec
and
or
jl
stos
icebp
mov
sbb
sub
jmp
dec
jns
in
lcall
mov
mov
stc
les
cmc
inc
sarl
push
pop
and
fisubl
and
test
jp
or
movsl
iret
out
jmp
jle
mov
in
aam
in
aam
adc
and
ret
pop
pop
mov
imul
hlt
and
pop
push
lret
dec
mov
inc
testb
dec
push
int3
outsb
mov
cmp
jle
xchg
ss
sub
add
pop
or
mov
adc
nop
xor
pop
xchg
lock
mov
ja
xchg
ret
sahf
ss
bound
sub
fdivl
sub
mov
out
push
adc
jmp
mov
jae
fiaddl
and
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
sbbl
jl
popf
imul
pop
sub
mov
fcmovu
jg
aas
mov
cltd
bswap
fsubl
inc
fmulp
push
aaa
pusha
fisubs
push
fs
movsb
dec
pop
inc
and
adc
ja
in
out
inc
into
sbb
pop
leave
add
pop
mov
mov
mov
push
ret
gs
push
pop
stos
cli
ret
push
cwtl
test
sti
adc
daa
repnz
add
pushf
pop
pushf
sti
mov
jbe
fadds
aas
push
mov
sbb
aad
pop
inc
imul
fildll
mov
popf
test
push
stc
mull
pop
mov
bound
sub
iret
push
les
sti
jo
and
pop
clc
out
loopne
mov
mov
fisubl
mov
mov
rcrl
adc
xor
jnp
rcl
int
ret
push
js
cld
shr
popa
js
cmp
adc
and
pop
mov
xlat
fbstp
push
xchg
push
mov
push
or
dec
cmp
aad
lret
rol
shrb
cmp
les
js
mov
adc
push
push
cli
mov
test
pop
sahf
jle
xor
lea
hlt
xchg
cmpsb
scas
jp
xor
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
insl
and
sub
jg
jl
add
aas
addr16
cli
loop
xchg
mov
lods
pop
les
inc
cmp
cmp
and
adc
lods
mov
inc
push
out
shl
sbb
mov
in
pop
adc
add
jns
addr16
mov
xchg
inc
stc
divb
jb
aam
and
mov
jns
shll
movsl
jns
jns
adc
fldcw
loopne
dec
out
xor
test
lds
push
mov
add
push
sbb
or
mov
push
dec
xchg
adc
mov
mov
push
ret
push
push
push
shrl
cs
hlt
sbb
sub
in
daa
jg
daa
inc
in
insl
dec
fsubs
and
and
test
adc
lds
fxtract
jno
inc
fs
jae
dec
cmp
cmp
cltd
lahf
mov
jb
mov
movsl
aam
add
insb
sub
sub
out
cli
sub
jne
add
insl
xor
imull
inc
test
cmpsl
shlb
jne
pop
push
stc
int3
fadds
push
jb
sbb
daa
adc
hlt
sub
pop
push
ret
mov
mov
jmp
psraw
out
frstor
adc
jl
xor
jl
add
mov
sub
cmp
sbb
inc
test
cmp
or
mov
lock
ret
les
aad
jne
and
or
mov
leave
xor
and
jnp
andl
lods
loopne
cs
pop
in
into
or
roll
mov
push
adc
enter
mov
jnp
mov
sbb
push
push
jbe
xchg
mov
test
into
xor
pop
hlt
adc
adc
jne
lods
mov
cwtl
subl
jg
aad
lds
or
xchg
push
out
mov
push
adc
cld
adc
mov
mov
in
jo
mov
shl
push
jae
sbb
mov
jp
mov
in
xchg
or
jbe
bound
mov
mov
lcall
jl
dec
jl
sub
ja
xchg
add
cmp
cmc
out
mov
push
adc
xchg
cltd
rorb
loopne
adc
mov
xchg
jmp
es
mov
xchg
pop
dec
mov
cs
cmpsl
int3
movsb
std
adc
arpl
sti
and
push
out
pop
inc
movsb
jbe
clc
repz
out
fxch
add
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
imul
add
inc
dec
mov
movsb
out
int3
ljmp
cmp
mov
cmpsl
in
mov
mov
daa
mov
mov
roll
jbe
mov
push
cmpsb
incl
cmc
ja
add
aad
into
inc
iret
popw
xchg
dec
fbstp
stos
sarl
out
inc
push
cs
decb
push
hlt
push
sti
popf
popf
scas
cmp
leave
outsl
dec
mov
push
cmp
movsl
test
sub
dec
sbb
mov
jb
xchg
pusha
pusha
rcr
and
sbbb
enter
test
pop
dec
leave
subb
push
out
scas
and
outsb
int
ss
popf
lret
mov
mov
jne
mov
xor
cmp
cmp
xor
and
addr16
inc
and
inc
int3
cld
das
bound
inc
inc
mov
push
or
pop
mov
mov
sbb
inc
bound
je
push
out
imul
mov
sub
mov
xchg
cmp
movsl
imul
or
push
inc
mov
call
lods
push
scas
push
add
pop
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
inc
lea
mov
jl
xor
jl
fldt
xchg
mov
jb
push
repnz
fwait
cmp
lock
dec
ja
lcall
mov
sarl
flds
emms
imul
add
mov
test
icebp
in
out
cmp
ljmp
js
pop
adc
fs
fwait
sahf
dec
test
call
pop
leave
jg
loopne
out
mov
clc
xlat
ud2
inc
cltd
mov
pop
loop
lods
inc
or
xchg
dec
frstor
push
es
lds
inc
sbb
ja
sub
sub
or
pop
mov
sub
cmpsl
daa
shrl
adc
push
adc
or
push
jmp
push
lret
push
lods
mov
punpckhwd
jmp
enter
inc
mov
xor
dec
movsl
movsl
ja
es
fimuls
push
add
enter
dec
call
or
push
adc
flds
adc
cmp
ss
cmc
mov
aas
pop
sub
pop
mov
or
es
jg
pushf
or
call
int3
loope
cs
enter
add
dec
es
lods
xchg
push
rcrb
adc
rolb
push
in
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
pop
cmpsb
call
aaa
inc
ss
clc
jecxz
mov
out
popf
in
scas
push
imul
dec
xor
or
xchg
inc
cli
ret
movb
fnsave
adc
stos
jp
scas
mov
xor
hlt
mov
ret
mov
jnp
mov
add
enter
cltd
xor
lods
ja
rclb
cmpsl
mov
dec
loope
dec
rol
xchg
dec
mov
stos
mov
es
inc
sub
lock
push
mov
gs
cwtl
lds
ljmp
rcrb
inc
mov
mov
pop
add
gs
mov
xor
mov
fwait
or
and
adc
dec
fwait
movsl
mov
fidivrl
pop
xchg
dec
xchg
cmc
jb
pusha
or
out
lcall
sbb
push
add
xchg
xchg
xchg
sar
movsl
cmp
xor
xchg
in
pop
or
ljmp
push
inc
je
jbe
dec
cmpsl
and
loop
sbb
imul
dec
jge
ljmp
mov
jno
dec
pop
add
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
adc
shl
and
add
addr16
ljmp
push
fwait
xchg
cmpsl
popa
push
inc
lea
xchg
cmp
or
push
fs
mov
sbb
and
pusha
sbb
adc
mov
outsl
inc
pop
mov
shlb
inc
jns
xor
xchg
outsl
mov
mov
push
or
push
cltd
dec
xor
xor
test
sub
rcrl
divl
enter
clc
xor
ljmp
popa
dec
mov
xchg
fwait
scas
mull
jne
mov
or
jle
add
cmc
adc
aad
mov
xchg
adc
ret
jg
iret
scas
into
repnz
mov
xor
fistl
xorl
ja
and
cld
add
lret
test
push
cmc
or
sub
cwtl
repnz
pop
mov
or
sub
daa
sub
mov
sub
jmp
outsl
or
xchg
xchg
pop
fcoml
push
insb
ja
sub
arpl
pop
clc
popf
movsl
cwtl
sub
mov
and
mov
mov
mov
jmp
or
push
cmp
dec
sarl
aaa
hlt
adc
jl
push
cmp
hlt
in
dec
test
xchg
and
lcall
jl
dec
ss
adc
insb
and
stc
stos
clc
int
icebp
push
clc
das
repz
xchg
add
pop
iret
or
pop
daa
and
sbb
xchg
les
xchg
and
cmpsl
lock
andl
add
addr16
push
mov
jecxz
shl
sbb
jno
pop
cmc
aaa
pop
in
pop
bsf
sub
pushf
push
mov
aas
mov
test
cld
mov
int3
scas
jecxz
mov
rorl
and
mov
inc
xor
nop
not
push
in
push
push
rcrl
xor
nop
mov
sbb
add
pop
jb
jl
and
xchg
push
rcrb
jbe
into
loop
popa
repz
cltd
outsb
cld
cli
cmp
fisttpll
pusha
call
lods
push
jb
das
push
mov
je
push
mov
shrl
je
lahf
daa
add
loopne
mov
jmp
xorl
dec
adc
pop
pop
aad
cmp
xor
add
imul
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
push
adc
jl
jg
jl
mov
sahf
enter
cmp
push
int3
add
aas
lds
pop
leave
loope
mov
out
imul
jnp
dec
sbb
push
repnz
cmp
incl
pop
pop
push
int3
pop
sub
push
das
std
das
pop
popf
insb
int
inc
mov
mov
test
fstpl
or
or
ljmp
leave
xor
sub
mov
inc
mov
add
imul
xchg
shlb
mov
aam
sub
movb
lods
and
lret
push
or
pop
dec
sub
es
mov
jbe
pop
inc
or
xor
pop
and
xchg
sbb
cmpb
test
ret
xor
popf
rol
or
fadd
add
sub
jne
loope
add
push
into
and
jle
push
mov
pusha
fldenv
mov
push
and
adc
or
nop
ret
cltd
andl
mov
mov
in
pop
ficomps
pop
xchg
cmpb
mul
pop
push
push
dec
test
dec
aad
repnz
inc
out
aaa
test
data16
mov
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
cld
lock
inc
shll
jne
mov
ss
mov
xchg
cltd
add
lret
lock
pushf
lret
ret
fdiv
into
add
fstl
mov
mov
loopne
flds
dec
data16
push
mov
scas
out
ja
push
sub
ss
mov
in
and
test
out
or
test
fdivl
jle
cwtl
repnz
pop
mov
not
add
in
scas
sbb
mov
int3
mov
jbe
pop
stos
cmp
inc
in
cmp
cmp
push
int
sahf
out
or
sbb
subb
adc
mov
cs
pop
mov
pop
test
jg
dec
mov
insl
cmc
xchg
icebp
inc
and
fsubs
arpl
push
insl
inc
ja
loop
pop
cli
fwait
lahf
sub
xchg
mov
rcr
cmp
push
imul
cli
lret
out
iret
popf
jecxz
push
adc
rorb
xchg
lret
and
sbbl
lock
js
pop
adc
jnp
je
push
or
aam
dec
pop
movsb
arpl
pop
jg
fst
mov
aas
jns
mov
shrl
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
aam
pop
ret
jl
bound
inc
mov
leave
sub
dec
cmpb
add
cmpb
dec
movsl
pop
cltd
dec
lcall
cmp
fwait
mov
sub
sbb
popf
leave
sahf
dec
xchg
mov
sub
jg
adc
nop
adc
pop
out
aam
ljmp
ljmp
addr16
mov
and
rcl
push
in
dec
xor
mov
add
or
add
into
stc
mov
xor
enter
adc
xchg
cltd
pop
dec
int
scas
aad
jecxz
cmp
fucom
popa
data16
cltd
xchg
and
mov
subb
fdivrs
shl
aam
scas
xor
out
pusha
push
dec
lret
jns
push
fldl
adc
das
repnz
inc
mov
dec
xor
sbb
adc
mov
lahf
adc
out
xchg
jmp
shl
xchg
fs
jns
adc
jne
stos
in
and
jl
bound
and
jecxz
add
and
pop
xor
push
clc
negb
cmp
mov
pop
jae
jecxz
mov
pop
cmp
sub
scas
jge
adc
repz
adc
jl
mov
flds
in
call
inc
add
sub
aaa
pop
jecxz
lods
shr
cwtl
imul
scas
pop
cltd
inc
scas
pushf
ss
push
aad
ret
and
dec
and
int
mov
cmp
dec
imull
dec
cld
ss
xor
ss
fistpl
push
xor
pop
fsubrs
add
add
and
call
into
lods
aad
push
scas
loopne
fmuls
pop
push
cli
and
sbb
jmp
iret
in
cmp
stos
iret
fcmovb
ret
or
mov
es
xchg
repnz
test
das
push
test
adc
popa
sbb
or
xchg
jmp
fisubs
out
jns
lods
dec
outsl
mov
movsl
fidivl
pop
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
pushf
mov
lods
sub
jl
bound
test
or
ffreep
inc
dec
sub
jno
pop
push
nop
mov
loopne
sub
mov
inc
mov
test
pop
sub
fbld
ja
mov
icebp
lods
mov
dec
rorl
rcrl
pop
mov
test
les
les
in
xor
movsl
xchg
std
cmpsl
sti
pop
loopne
ljmp
dec
lret
xchg
int3
das
mov
int
popa
movsb
dec
lea
inc
mov
inc
mov
xchg
xor
mov
imul
xor
mov
outsb
lret
pop
ljmp
push
sub
arpl
jo
or
pop
fsts
insl
inc
adc
inc
addr16
inc
pop
lods
sub
add
xchg
pop
dec
loopne
mov
and
shl
push
dec
cmp
and
leave
sub
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
jmp
sub
jg
jl
sti
xchg
call
pop
cmp
dec
xor
xchg
negb
clc
aam
fcomi
jb
nop
es
scas
mov
out
test
sahf
loop
scas
xchg
fistpl
loopne
bound
xchg
imul
lds
ja
adc
lds
in
cmp
out
hlt
js
popf
test
adc
movsb
dec
fdivrp
rcrb
cmc
sti
inc
mov
lcall
mov
mov
fsub
adc
arpl
mov
mov
fcomip
push
push
std
ds
loop
mov
xor
cmp
xorl
sbb
mov
rol
movsl
push
fidivrs
and
fiadds
cmp
out
fisubl
fsubrs
push
in
loop
ficomps
repz
orl
icebp
mov
jne
test
inc
cltd
testl
gs
ja
jb
mov
stos
mov
and
fsubrl
insl
push
adc
ret
inc
cld
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
arpl
sub
jl
lcall
loope
push
cmc
adc
inc
cmp
mulb
push
scas
rcrl
outsl
stc
fprem
inc
jge
ror
add
cmp
sub
rorb
aas
lea
call
fbld
fildl
jp
movsl
sbb
sbb
mov
adc
dec
jmp
cmc
rolb
fwait
push
mov
test
cmp
mov
jg
inc
jge
ret
pusha
inc
pop
cmp
sbb
pop
jae
aas
sbb
ljmp
arpl
nop
and
call
sub
xchg
xchg
arpl
mov
cmp
pop
xor
sub
ret
adc
add
push
add
or
lcall
xor
pop
inc
sarb
out
inc
and
pop
push
cli
or
cmc
jle
cmp
cmpsl
xchg
adc
aam
std
gs
dec
in
sti
pop
jnp
mov
ss
mov
cmpsb
frstor
add
jns
outsl
jbe
fnstenv
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
mov
sbb
jl
lods
in
cmp
leave
aaa
xchg
loope
pop
sahf
cmp
loop
inc
add
enter
iret
xchg
movsl
dec
imul
daa
mov
rorb
repnz
xchg
sbb
adc
shl
scas
xor
jg
jns
adc
repnz
xor
sbb
mov
insl
dec
sub
mov
addr16
das
popa
dec
xlat
divb
or
scas
xchg
jne
sbb
xor
in
clc
stos
pop
jbe
mov
sbb
addb
repz
cltd
leave
mov
icebp
mov
fmull
test
mov
adc
or
xchg
mov
jae
das
dec
imul
jo
jo
jle
and
adc
sub
sarb
jns
xor
sarl
sti
inc
inc
or
mov
aas
outsl
int3
xchg
dec
push
outsb
mov
and
sub
addl
xchg
hlt
jo
aad
xor
outsl
mov
imul
xchg
xchg
adc
xchg
mov
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
push
in
mov
sbb
jl
jecxz
lock
sub
das
adc
imul
inc
adc
btsl
fdivrl
arpl
jns
xor
push
mov
jecxz
repz
idivl
mov
mov
pushf
sub
fimull
rclb
mov
xchg
dec
push
repnz
loop
dec
add
loop
mov
push
pop
je
and
lds
clc
iret
jl
scas
sub
lods
out
pop
icebp
lahf
mov
out
sbb
rol
adc
add
clc
xchg
loope
int3
jg
jecxz
call
imul
cld
mov
mov
loope
insb
cmp
movsb
or
cmp
mov
jmp
pushf
mov
mov
incl
repnz
push
xchg
scas
rcl
imul
cmpsl
adc
pop
lock
loope
push
inc
add
xchg
mov
ret
shlb
fldt
sub
sub
inc
pusha
shrb
pop
xchg
add
pop
sbb
cmpsb
xchg
mov
xor
mov
xlat
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
aad
outsl
push
subb
jl
jg
jl
sub
pop
cs
fcomp
sbb
movsl
xchg
mov
dec
pop
dec
jbe
sbb
cmp
add
jl
hlt
push
and
nop
test
clc
xor
jl
mov
adc
dec
iret
inc
mov
popf
int3
insl
mov
dec
dec
fbld
shll
inc
cltd
push
mov
stc
es
aas
lods
jae
mov
cli
mov
push
popf
adc
test
fwait
insl
adc
popa
add
inc
cmp
jno
adc
flds
sahf
jmp
in
xlat
ss
jp
inc
inc
lahf
pop
ljmp
or
push
shll
xor
in
hlt
xlat
shrl
enter
lock
sub
adc
pop
lock
lahf
xor
mov
adc
or
cmovne
mov
sub
dec
jp
rcrl
iret
push
lds
inc
lcall
popl
mov
add
pop
pushl
daa
add
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
push
xor
inc
xchg
and
jg
jl
inc
adc
rcll
dec
pop
push
sub
mov
sub
and
xchg
mov
lea
int
sete
sbb
test
sti
in
sub
in
mov
cltd
xchg
sbb
adc
xor
cmpsl
mov
stos
xor
pop
out
pop
mov
jge
sub
les
clc
lods
inc
jo
jg
int
jne
cmp
sub
or
jp
cmovl
cmp
dec
imul
aas
andl
cmp
js
add
push
sub
and
and
ret
in
add
sub
push
xor
pop
jp
mov
push
jl
push
xchg
sbb
jge
xchg
ret
sub
cmpsb
sbbb
lea
addr16
pop
inc
mov
jne
out
mov
fwait
sub
lret
jo
xor
mov
mov
and
mov
xor
and
and
js
outsl
sti
sarb
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
mov
jl
or
and
lahf
or
mov
lret
sub
stos
popf
mov
sub
out
xchg
mov
fistpl
dec
adc
push
stos
ret
mov
push
fidivl
or
xor
test
cld
test
out
std
shrl
mov
push
dec
scas
pop
movsl
xor
gs
rolb
xchg
and
sub
loop
inc
xchg
push
pop
stos
xchg
data16
arpl
vmovhpd
push
out
dec
mov
cmpl
dec
cmp
add
jns
shrb
jbe
mov
mov
jl
mov
pop
sahf
add
jmp
aad
jne
cli
xor
push
fmulp
int3
jns
jnp
bound
in
rcll
inc
bound
pop
add
or
sarl
jne
and
stc
sub
in
cwtl
dec
mov
rcrl
sub
jo
jge
loop
inc
xor
cmp
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
in
fnstsw
jg
jl
out
xchg
adc
pop
aaa
mov
ret
mov
shlb
mov
ds
cwtl
mov
lods
hlt
repz
add
xor
mov
movsl
cmc
add
pop
sti
into
xchg
adc
dec
clc
imul
int
mull
lcall
aaa
in
adc
daa
rcr
test
lahf
and
in
jo
xchg
jb
jno
lret
mov
or
test
cmp
push
sahf
adc
sti
pusha
xor
cltd
out
sbb
cmp
push
adc
js
inc
leave
pop
ss
sahf
pop
ja
adc
dec
mov
mov
xchg
xorb
xor
lahf
lret
andb
mov
jecxz
xchg
das
popa
cmp
scas
mov
out
cli
ds
pop
sbb
pop
cmp
xor
or
add
dec
nop
mov
insl
sbb
xchg
mov
out
cwtl
jnp
inc
imul
sub
push
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
mov
and
jg
jl
sbb
and
ljmp
sbb
add
ret
sub
daa
loop
inc
mov
jo
cld
mov
jae
cli
dec
ja
mov
test
mov
xchg
inc
jnp
mov
out
sub
lods
inc
fisubrs
mov
and
cmp
in
dec
or
jle
dec
add
popa
dec
cmp
jecxz
daa
cltd
in
cs
out
popa
es
cmpsb
inc
pop
out
sahf
enter
movsl
and
rclb
pop
sti
mov
cltd
xor
fsub
lahf
add
test
fcoms
mov
inc
and
repz
jo
add
xor
cmp
xlat
or
dec
xor
push
bnd
loopne
arpl
sti
inc
xor
jmp
mov
sbb
in
lods
in
mov
mov
test
push
mov
mov
nop
mov
mov
shlb
pop
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
jnp
test
jl
or
mov
loopne
outsb
push
adc
sbb
mov
inc
sub
or
or
mov
stos
stos
xor
rcrl
xchg
ret
fwait
pop
adcb
xor
xchg
xchg
mov
mov
mov
add
aad
stos
incb
cmp
mov
add
mov
cmp
cmpsb
or
jno
add
scas
inc
push
call
pop
xchg
dec
lods
adc
jno
inc
pop
out
adc
gs
lret
inc
inc
mov
negb
sbb
add
pop
mov
rcr
scas
jne
xor
repz
loop
pop
xor
scas
insb
inc
adc
scas
cli
jb
imul
repz
ds
and
mov
adcl
repz
and
aaa
scas
or
loope
lds
dec
mov
cmp
scas
pop
add
rcrl
aas
xor
inc
aaa
out
mov
fwait
jno
jnp
and
mov
incl
add
add
add
sti
inc
add
inc
in
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
fstps
jl
or
fcomp
out
mov
aam
sub
pop
popf
fmul
mov
fidivrl
mov
sub
addr16
fsts
xchg
test
dec
sbb
xor
cli
out
push
mov
in
mov
add
lods
in
add
rcrl
push
xor
inc
pop
sub
out
fprem
pop
je
js
dec
pop
cmc
adc
loope
pop
sahf
dec
aas
mov
imul
cs
and
dec
imul
repnz
cwtl
xor
xchg
jl
faddl
sub
xchg
cs
dec
dec
xchg
stos
sub
mov
add
cwtl
cmp
sub
fs
dec
mov
cmp
inc
sub
loopne
mov
bnd
stos
cmc
push
repnz
mov
add
out
jnp
scas
cmc
mov
push
xchg
imul
dec
adc
xchg
dec
in
add
push
jmp
sub
jge
jge
fnstenv
jne
jnp
jl
or
leave
loope
xchg
int3
push
fdivs
arpl
jl
mov
jle
outsb
popa
xchg
mov
rcrb
xchg
test
mul
xor
xchg
add
inc
inc
ja
or
insb
mov
or
cmp
pop
fs
into
xor
xchg
mov
mov
daa
repz
cmpsb
mov
arpl
mov
jbe
stc
pop
testb
mov
xchg
dec
add
add
mov
mov
enter
sub
lock
mov
push
xchg
std
mov
push
add
test
xchg
jb
es
lret
add
nop
idivb
or
sub
in
movl
cmpl
cmp
push
scas
leave
out
addr16
movsl
dec
jb
xchg
sbb
cltd
sbb
outsb
mov
bound
scas
outsl
int3
das
push
jle
insl
cmpsl
icebp
pop
jbe
mulps
out
mov
mov
jmp
shr
dec
pop
pop
jns
insl
adc
or
or
jl
or
mov
mov
push
and
std
jmp
cmpsl
daa
mov
loop
cltd
sbb
mov
addr16
pop
shl
xlat
pop
in
std
pop
xrelease
popa
xor
pushf
cmp
inc
inc
aaa
sub
mov
out
xchg
stos
fcmove
pop
xor
jns
dec
or
pop
out
xor
cwtl
mov
mov
cs
mov
repz
push
imul
jl
and
stc
pop
sbb
jl
xor
in
xor
xchg
outsl
xchg
or
and
mov
dec
adc
inc
xchg
adc
js
inc
in
nop
xchg
nop
pop
fisubl
loop
dec
arpl
xchg
jb
inc
add
xchg
cmp
xchg
stos
mov
loop
into
test
inc
rol
and
enter
inc
inc
repnz
and
inc
mov
xor
sbb
scas
sub
xor
orl
in
xor
repz
decl
clc
add
loopne
test
inc
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
push
repnz
ja
cmp
jg
jl
lock
shll
sub
adc
addb
and
add
jo
je
mov
adc
cwtl
mov
daa
add
data16
not
push
mov
mov
push
fdivl
add
jnp
insb
dec
and
cmp
push
sbb
pushl
stos
outsl
mov
or
sub
lcall
aas
dec
lods
inc
cmc
repz
adc
imul
ret
mov
loopne
push
inc
sub
orl
imul
sbb
testb
insb
mov
mov
fisttpl
fsubs
lods
lock
ja
ficoms
test
inc
loopne
push
add
jg
lods
dec
dec
test
jge
dec
or
je
mov
cwtl
jmp
fucom
or
ret
jg
lds
push
aaa
xchg
mov
sbb
and
cld
dec
data16
push
xor
ja
sub
add
cmp
fdivl
jl
mov
popa
movsl
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
add
push
cmp
jg
jl
scas
mov
out
lock
xor
sub
mov
loope
out
cmc
in
jmp
cmpb
pop
call
and
mov
aad
or
jo
sahf
stc
xor
adc
push
int3
pop
imul
jge
and
aam
pop
inc
int
mul
inc
loopne
test
jecxz
pop
push
je
or
ret
inc
jno,pn
xor
jnp
push
xor
dec
aas
lods
lods
dec
loopne
cs
jno
rcll
out
mov
out
push
and
pop
or
add
shll
stc
lret
movsb
pop
mov
cwtl
add
cmpb
stc
push
mov
sub
lret
pop
adc
ror
inc
push
add
loop
outsl
mov
fmul
int3
stos
int
jp
sbb
in
jmp
ds
shlb
ret
into
imulb
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
cmp
jl
jg
jl
or
into
sbb
std
mov
mov
or
xlat
or
push
idivl
push
mov
and
js
mov
mov
lcall
ss
sahf
pop
dec
stos
cwtl
dec
jbe
js
dec
jns
adc
cmpsb
inc
add
add
push
jo
xchg
dec
sbb
dec
adc
xchg
nop
addb
fcmovu
pop
and
jnp
mov
dec
outsb
inc
xchg
fdivrs
je
pop
cmp
cwtl
mov
sahf
bound
jl
movsl
xchg
repnz
addr16
jl
fstps
mov
add
pop
xchg
mov
icebp
jecxz
lds
xor
xor
call
dec
dec
jg
imul
test
daa
aam
gs
adc
dec
mov
cmc
and
ja
lods
sbb
js
bound
popa
enter
outsl
push
cmp
or
insb
lds
mov
sub
repnz
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
ljmp
jl
jg
jl
lret
push
lock
fisubs
in
pop
cmp
push
xor
pop
jle
add
es
and
mov
test
mov
sbb
lahf
orl
pop
cmp
int3
lods
lds
mov
cmp
xchg
mov
lds
push
sub
inc
test
ljmp
sbb
lods
jns
ja
dec
cmp
movsb
out
and
dec
or
loopne
push
mov
lock
fstpl
ret
fadds
aas
mov
ds
arpl
dec
dec
push
xor
sbb
mov
mov
stc
mov
xchg
jbe
int
or
push
das
sbb
push
xchg
rdtsc
insb
daa
push
and
xchg
in
ja
mov
push
sbb
popf
fldlg2
pop
fnstcw
int
rcr
int3
loope
jge
mov
mov
iret
xlat
ret
pop
pop
cltd
jp
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
jmp
sbb
mov
insl
lods
test
gs
lds
jl
jg
jl
or
les
adc
push
mov
in
cld
add
mov
insb
xchg
inc
xor
out
sahf
xor
hlt
jmp
loopne
das
inc
lcall
jo
cmp
inc
add
out
jnp
scas
sub
scas
sub
imul
xchg
into
sbbb
jecxz
loope
and
xchg
in
test
inc
push
and
xchg
or
cld
aad
push
cmc
pop
push
std
mov
int3
divb
xchg
aad
je
sbb
cmp
ret
xlat
subb
dec
cltd
dec
fsincos
and
inc
inc
mov
stc
push
cmpsb
or
test
adc
fst
imul
sub
lock
xchg
out
cmp
sbb
push
mov
and
jg
xor
testb
outsb
bound
or
inc
or
flds
adc
push
add
jmp
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
orb
or
lock
lds
adc
inc
sbb
lock
enter
popa
outsl
sbb
cmp
adc
jne
fisubrl
xchg
xchg
pop
ret
mov
les
and
cs
pusha
mov
push
xchg
mov
loopne
inc
or
out
jb
push
mov
fcoms
stc
pop
scas
xchg
jecxz
or
inc
jne
mov
int
jnp
cmp
dec
shrl
adc
sub
stc
jge
pop
cmpsb
lahf
roll
mov
pop
jl
pop
xchg
int
cmp
lock
stos
jg
push
cmp
jge
stos
or
jmp
test
mov
mov
cmpsl
cmpsb
sub
ds
idiv
lahf
daa
xor
lahf
out
dec
jbe
mov
scas
call
dec
adc
push
push
pop
xor
repz
xchg
cmp
lea
dec
inc
cmp
or
fdiv
mov
adc
jno
add
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
stos
dec
jecxz
jl
push
jg
jl
sbb
xlat
clc
fsub
sub
fsubrl
xor
or
cmpb
movsb
sahf
or
nop
mov
adc
add
adc
xchg
sti
aas
xchg
sub
mov
addr16
add
cltd
jg
sbb
pop
sbb
cwtl
push
sub
sbb
in
mov
aam
pushf
sub
sbb
aam
jmp
cltd
ret
push
out
pusha
addr16
shr
mov
out
xor
add
popf
push
stc
or
lcall
mov
or
fwait
testb
or
xchg
lret
jae
add
inc
leave
sub
jne
repz
dec
mov
es
sub
pop
push
push
stc
test
dec
call
sub
push
rcl
xchg
mov
and
jmp
mov
mov
dec
xchg
adc
xchg
call
cmc
sbb
cltd
adc
cli
out
loopne
cmpsb
mov
notl
stos
out
arpl
mov
xchg
into
push
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
and
inc
pushf
dec
inc
push
jg
or
xchg
add
call
cmp
dec
out
addr16
fcomps
addr16
bound
dec
jg
sbb
fcoml
call
mov
ficoml
repnz
cli
shl
fisttpll
adc
insb
xor
or
cmpb
cmp
push
shrl
or
div
ds
xchg
mov
les
sbb
pop
jle
sub
jnp
or
icebp
outsl
mov
repz
idivb
les
out
mov
mov
push
incb
push
sub
sub
sbb
cmp
out
and
pushf
dec
int
cltd
xchg
addr16
lret
fwait
sti
push
pushf
inc
push
push
mov
movsb
push
jmp
negl
cs
mov
lret
jp
rol
and
cmp
or
xorl
xor
nop
pop
xchg
sti
cmc
dec
mov
pop
jle
jnp
pop
jo
test
nop
sahf
cmc
shll
inc
fsubr
xor
add
movsb
flds
xor
jge
xchg
xor
jg
jl
add
imul
jb
jmp
aad
sub
aaa
xchg
js
adc
inc
push
xchg
pop
push
jne
jns
xor
mov
cwtl
test
pop
pop
roll
add
jb
gs
icebp
shrd
dec
insl
lea
fwait
cmp
std
sub
adc
add
adc
test
pop
ffreep
add
fsubrl
push
jmp
mov
sbb
sbb
hlt
call
stos
sti
add
lods
movsb
out
jge
jmp
fisubs
addl
xlat
add
inc
mov
jl
out
nop
add
addr16
cltd
cmpsb
add
movsl
pop
or
aam
scas
outsl
push
call
cmp
aas
xchg
andl
cmp
movsl
fistpl
and
adc
lret
loop
into
ss
jns
inc
sub
add
dec
add
out
insl
sahf
push
pusha
scas
or
fsub
fadds
mov
sbb
and
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
dec
decb
jl
jg
jl
lret
faddl
aas
dec
insl
mov
cld
popa
ror
mov
pop
rcrl
inc
pop
add
or
mov
xchg
pop
fsubrl
rcrl
int
xor
jge
fwait
push
inc
xchg
adc
jmp
popf
lods
xchg
lock
add
jecxz
iret
outsl
idivb
jo
xchg
or
leave
fsubrs
in
dec
inc
jb
out
jle
rcrl
lds
jle
xor
mov
xor
sbb
pop
shll
je
push
fsubs
sbb
fmul
cli
les
addr16
xchg
gs
xor
adc
out
adc
dec
dec
aad
int3
gs
pop
dec
cmpsb
dec
sbb
cltd
stc
hlt
in
push
sub
pop
jne
inc
or
sub
repz
jbe
and
into
mov
dec
push
mov
adc
mull
loope
mov
cmp
sub
fildll
jns
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
adc
fwait
pop
xor
jg
jl
mov
xchg
dec
test
mov
js
aam
jnp
xchg
insl
loop
xchg
xchg
mov
inc
cld
fidivs
jmp
push
and
push
shrl
xchg
cwtl
mov
aas
ljmp
and
ffree
negl
push
mov
cltd
push
repnz
mov
mov
sbb
push
and
shr
mov
fdivl
rcrl
dec
jnp
xchg
test
lods
xchg
pop
shr
xor
add
mov
movsb
test
jp
js
mov
push
pop
and
inc
xlat
dec
shll
mov
and
jb
jns
out
sub
pop
mov
in
cmc
xor
and
mov
cwtl
add
xor
notb
shll
ds
fstl
cmpsb
adcb
and
xor
repz
ret
pop
inc
push
cld
pop
push
xchg
lret
ret
mov
cltd
roll
in
popf
dec
push
inc
push
ret
call
push
cld
sub
repz
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
leave
cmpb
push
jg
jl
sti
xchg
sub
mov
jns
pop
daa
std
jmp
lcall
loop
mov
stos
xchg
pop
lahf
push
loop
jmp
sbb
icebp
lcall
out
push
subl
pop
rol
jne
stos
push
test
cs
sbb
adcb
repz
fnstsw
dec
and
lods
leave
xor
pop
add
cmp
into
sbb
and
sbb
fwait
add
mov
jg
jmp
dec
adc
js
iret
jns
das
push
and
xchg
cmp
mov
test
sbb
push
add
mov
cmp
dec
sbb
pop
out
mov
push
sub
in
xor
push
cmc
xor
loopne
mov
rclb
stos
cmp
cbtw
das
cmp
pop
repnz
mov
add
or
dec
adc
inc
scas
imul
add
mov
xlat
mov
sub
inc
lock
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fistps
pop
jns
getsec
jl
push
jg
jl
ds
sub
sbb
fildll
add
aam
adc
jp
sbb
inc
xlat
sbb
inc
mov
lds
sbb
push
lock
incl
xchg
rolb
pop
in
push
cli
shlb
push
xor
fwait
scas
mov
loope
idivl
outsb
rcll
aad
mov
push
jmp
fimull
sysenter
fsts
jne
add
adc
insb
inc
scas
add
mov
dec
xchg
adc
pop
aaa
ds
ret
push
jo
dec
and
enter
xlat
mov
ljmp
adc
dec
cmp
repnz
xor
stos
popa
and
mov
mov
and
dec
outsb
dec
pusha
sub
clc
jnp
mov
mov
sarb
fwait
imul
cmp
pop
lret
or
jno
xchg
and
pop
jno
push
aam
movsl
xchg
lds
cmpsb
leave
push
push
stos
notb
lret
jae
jge
xor
cltd
sub
daa
es
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
std
push
fldcw
cwtl
gs
add
movsb
out
into
icebp
jae
push
lahf
sbb
push
lods
or
inc
es
sbb
push
dec
inc
xor
cmp
mov
cmp
repnz
test
jl,pn
add
adc
lret
or
add
cmp
clc
cmpsb
xchg
push
cmp
ljmp
aaa
mov
jne
movsl
lods
mov
call
sub
ja
mov
fists
adc
fistl
xor
loope
mov
fisubrl
test
add
repz
test
push
mov
xor
movsb
xchg
pop
jp
ljmp
test
arpl
fstl
xchg
pushf
mov
jg
pop
std
dec
adc
xor
rcr
dec
or
or
push
sti
pop
mov
add
push
jmp
in
in
je
or
xchg
rorl
cmp
mov
xor
sahf
mov
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
inc
xlat
xor
jl
push
jg
jl
pusha
fs
lret
mov
mov
sbb
test
ret
and
repz
mov
mov
pushf
std
loope
jg
jae
jnp
mov
int3
aaa
or
pop
xchg
mov
add
sarb
inc
xchg
mov
lahf
gs
adc
sahf
inc
cltd
mov
push
mov
xchg
xor
dec
pop
or
jnp
movsb
shrb
sub
cmp
or
shll
dec
dec
and
and
sbb
es
adc
stos
adc
lea
cld
popl
gs
stos
cmp
mov
ss
xchg
xchg
and
add
and
mov
inc
ret
test
enter
scas
dec
jne
aas
cltd
jecxz
xor
xlat
xchg
push
je
cmp
outsl
xor
insb
mov
lock
lock
insl
fbstp
mov
je
jecxz
mov
pop
push
call
cs
push
jne
insb
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
mov
push
jg
jl
sbb
out
sub
jg
adc
stos
aad
bound
fsincos
add
push
in
inc
xchg
cmp
fdivrp
jmp
fwait
jb
cmpl
aam
push
cwtl
add
xchg
push
ljmp
add
jne
dec
in
lea
in
xor
out
xor
push
xchg
dec
cmp
jb
dec
and
aas
adc
xor
jecxz
push
dec
aad
lahf
inc
cmp
xchg
loopne
cmp
sbb
cmp
test
inc
inc
imul
dec
enter
fldpi
and
mov
ja
icebp
ds
inc
cmp
jge
imul
xor
sbb
or
mov
xor
xchg
js
jl
sbb
loop
rorb
imul
lret
dec
mov
push
cld
movb
dec
es
xchg
jns
mov
dec
mov
inc
xor
sub
inc
adc
popf
shll
mov
movl
inc
fmull
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
cmp
xchg
out
lret
jl
mov
je
inc
pop
idiv
es
mov
in
in
sbb
push
push
aaa
scas
fnstenv
fs
and
lcall
lret
out
repnz
push
shll
mov
jmp
jne
popa
scas
inc
push
mov
cwtl
in
nop
shrb
in
pop
and
add
xor
movsl
xlat
sbb
sub
lcall
insb
jge
dec
cmp
insb
inc
xor
dec
sarb
stos
sbb
push
sub
mov
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
psubb
lret
mov
xor
pop
and
adc
inc
mov
push
out
call
jle
dec
and
call
into
call
pop
pop
push
jecxz
leave
mov
mov
mov
xchg
push
xchg
push
bound
out
fistps
mul
sti
data16
daa
add
adc
cltd
and
dec
inc
and
lahf
xchg
cmpsb
mov
iret
cmp
in
mov
jmp
xchg
push
xchg
insb
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
jge
repz
mov
cmp
or
fsts
sbb
dec
mov
out
inc
mov
cs
in
iret
clc
pop
psubb
nop
mov
sahf
sti
lods
mov
cltd
dec
xchg
cltd
pop
jns
shrb
data16
and
adc
pop
test
pop
jne
icebp
sbb
orl
dec
cld
push
es
scas
repz
or
push
or
shrl
mov
pop
outsb
pop
stos
jge
or
and
out
push
pop
sbb
out
mov
xchg
push
jle
xchg
mov
mov
sbb
mov
fwait
das
sbb
push
cmp
pop
test
inc
xor
into
nop
jle
call
nop
stos
cwtl
loop
mov
pop
in
xor
xchg
cmp
dec
sarl
outsb
sub
xor
repz
dec
mov
push
xor
sbb
sahf
das
jo
sbb
or
pop
ficoms
mov
aas
xlat
sti
and
shll
fs
in
pmulhuw
xchg
aam
sahf
lds
push
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
jmp
jno
mov
jl
daa
jg
jl
test
push
scas
aaa
fbstp
push
ficoms
mov
in
addr16
sub
fldenv
adc
pop
in
mov
inc
inc
and
mov
or
pop
mov
pop
inc
sub
imul
inc
mov
mov
add
inc
popf
mov
add
mov
test
subl
gs
dec
rcrb
lret
xor
popf
pop
mov
out
test
pusha
lds
std
dec
stos
lret
cmpsl
mov
dec
psllq
int
xchg
int
jne
cwtl
outsl
hlt
push
and
pop
fwait
cld
imull
movb
stos
mov
sub
xchg
xchg
rcl
data16
push
call
jno
fwait
int
test
mov
scas
jg
xchg
xchg
aas
inc
cmp
pop
push
in
xchg
aad
rorb
sub
js
inc
dec
lods
or
xchg
pop
push
inc
cmpsb
push
dec
pop
popa
push
scas
hlt
jle
ljmp
xor
jp
fistps
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
bound
jl
daa
jg
jl
pop
push
adc
mov
mov
adc
or
or
mov
insl
call
mov
hlt
fiaddl
loope
int3
xchg
xor
jg
push
push
xchg
repnz
cmp
xor
lds
jmp
rclb
push
cmpsl
mov
js
sub
popf
insl
insb
add
popa
lahf
dec
call
jmp
lret
mov
and
adc
push
sahf
cwtl
and
fwait
dec
cmpsl
pop
sahf
in
loopne
pop
xor
dec
xchg
jmp
sbb
das
inc
pop
add
mov
je
mov
xor
cmp
fmull
cli
icebp
and
jbe
or
aam
movsl
lahf
jecxz
sbb
jg
jb
xor
lods
sub
or
mov
mov
add
push
xchg
outsb
mov
xor
pop
es
ds
rcl
dec
mov
mov
aam
cmp
fwait
xor
xor
imul
mov
inc
inc
mov
mov
pop
dec
test
popf
jmp
testl
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
neg
stos
lret
jl
daa
jg
jl
add
mov
push
out
fsubrl
ds
icebp
dec
sbb
aaa
inc
jns
xlat
test
sub
sarl
and
rcr
movsl
xor
push
ds
ja
aas
xor
outsl
lock
xor
sti
pusha
shr
add
or
aam
xor
scas
sbb
ror
scas
fsts
dec
das
sub
pushl
fldcw
adc
push
cmp
mov
pop
fmull
xor
rcrl
cmpl
test
xor
and
cltd
addr16
clc
mov
mov
mov
dec
cmp
je
pop
sub
sbb
repnz
add
and
dec
inc
sub
or
push
push
into
sbb
out
movsl
in
mov
xorb
lock
pop
imul
mov
pushf
sub
jecxz
fistpl
nop
faddl
popa
push
les
into
jecxz
and
cmp
lcall
sbb
push
jo
push
mov
jno,pn
adc
ja
inc
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
sarl
jl
test
aaa
imul
mov
repz
push
iret
stc
cmp
popa
sbb
mov
les
in
movsb
cltd
xchg
repnz
fs
and
jl
cmp
icebp
mov
adc
dec
mov
movsl
pop
dec
cwtl
xchg
es
test
rcll
xor
inc
mov
mov
mov
arpl
pop
cmp
testl
jo
pusha
clc
stos
mov
les
stc
pop
aas
jg
fsubs
addr16
or
test
stos
dec
rcrl
nop
shl
les
push
dec
inc
es
sbb
push
mov
insl
push
push
cmp
cmpsl
mov
dec
jne
cmp
jo
sub
fidivrs
mov
xchg
jo
xchg
clc
int
xor
movd
lods
xor
cli
jg
adc
das
inc
clc
jp
push
mov
ds
imul
adc
shrl
and
cmp
clc
adc
cwtl
cmp
pop
cmpsl
rcrb
jo
je
add
pop
jb
push
push
inc
outsl
sti
inc
cmpsl
add
and
cmp
adc
mov
xor
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
aas
jns
adc
divl
aam
lods
aas
stos
mov
cli
fists
inc
dec
mov
push
cmpsl
sbb
fisttpl
pop
lahf
inc
test
call
pop
ljmp
arpl
aas
push
arpl
out
fwait
push
incb
sahf
inc
adc
add
je
js
out
jmp
shld
addl
into
roll
lock
mov
hlt
imul
sti
sub
cmp
cltd
xchg
push
pop
xor
jge
fld1
adc
inc
cmp
hlt
call
lods
or
lods
data16
cmp
mov
ljmp
loop
xchg
and
sbb
ss
js
call
iret
shlb
push
sbb
push
data16
clc
mov
jns
adc
pop
mov
sub
sbb
push
lods
dec
scas
sub
add
sub
pop
outsb
cs
popa
xchg
pushf
xor
nop
and
cmpsl
mov
pop
dec
call
out
clc
hlt
push
xor
mov
jns
sub
sbb
or
dec
lds
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
cld
mov
dec
pop
movsb
dec
sti
fimull
lea
xor
xor
lods
test
xchg
add
shlb
inc
outsl
mov
xchg
push
mov
push
mov
mov
xlat
jbe
inc
jmp
pop
mov
sub
lret
aad
cltd
adc
inc
xchg
jle
and
iret
gs
leave
outsl
out
cs
adc
cmpsb
rclb
mov
cli
dec
sbb
jge
call
adcl
jl
enter
mov
adc
inc
sub
shll
in
push
ret
aas
jne
jb
int
pop
sub
cmc
mov
lods
movsb
idiv
sti
flds
cmp
mov
or
inc
cmc
aas
outsb
ror
lret
xor
cmpsl
push
test
test
addl
add
shrl
sarb
call
mov
mov
cmp
cmp
aaa
inc
ret
mov
mov
sbb
inc
and
cmp
mov
out
sti
loopne
shl
aas
mov
mov
inc
fnsave
push
test
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
lds
jg
jl
inc
fidivl
pop
sbb
clc
or
rcrl
insb
fisttps
ja
outsb
cwtl
dec
sub
lea
mov
popf
cmc
jb
daa
or
stos
sbb
cmpsb
xchg
std
mov
jge
stos
shrb
cmpl
std
or
adc
pop
jecxz
sbb
xor
adc
cmp
jb
fisttps
fcom
xlat
stos
sti
mov
add
mov
imul
jno
jecxz
aaa
pop
mov
gs
je
mov
pop
lcall
jmp
hlt
xor
mov
sub
cli
into
insb
std
test
add
scas
cmp
out
lret
dec
js
mov
and
cmp
mov
xor
pop
xor
idivl
pop
inc
sub
inc
sub
sub
mov
pop
xor
mov
dec
out
pop
aaa
test
mov
repnz
mov
pop
mov
aas
fsubrp
inc
xchg
inc
jp
dec
rcrb
imul
mov
mov
mov
sbb
jg
lods
movsl
push
xchg
cmp
test
lret
scas
inc
dec
bound
inc
not
lock
cmp
add
add
push
fs
jge
sbb
jl
lret
jl
test
mov
iret
cmp
ja
idivb
xchg
les
push
xor
dec
push
pop
jl
test
lahf
je
sti
push
hlt
add
push
mov
dec
lcall
ljmp
call
in
mov
xor
les
cmp
loop
cmp
cmc
cmpsl
das
pop
push
mov
jmp
sub
movsb
adc
push
and
imul
xor
mov
pop
popl
test
stos
mov
repz
rcr
testl
pop
add
or
mov
xchg
mov
adc
xchg
mov
mov
mov
mov
mov
pop
xchg
arpl
popa
mov
xor
jbe
push
scas
mov
xchg
push
clc
sub
inc
lods
insb
cmp
aad
sbb
fsubs
and
mov
push
or
xchg
fnstsw
insb
in
movsl
and
sbb
int
pop
push
cltd
cmpsb
lea
fidivrs
mov
out
cmp
push
lcall
test
cmp
mov
push
push
push
dec
lret
cld
es
les
cmp
pop
cmp
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
add
inc
add
add
inc
add
add
inc
add
add
in
jp
jp
jnp
adc
mov
add
and
add
mov
jno
sub
idivb
in
lea
push
inc
cmp
cld
cmp
je
test
or
jns
testl
popf
mul
cmc
jnp
ficoml
sbb
mov
movsl
and
test
inc
es
aam
cmp
cmp
lock
xchg
frstor
mov
sarb
les
add
pop
in
loope
inc
push
mov
stos
out
mov
ret
dec
out
cltd
ljmp
push
adc
xchg
mov
nop
sbb
sahf
in
push
movsb
pop
filds
add
nop
pop
out
cmpsb
shl
scas
int
test
fscale
mov
jmp
std
xchg
js
mov
enter
leave
cmp
sub
sub
mov
sbb
pop
rcrl
mov
pop
cwtl
xchg
xchg
mov
adc
rcrl
push
bound
test
or
mov
test
mov
sbb
inc
xor
mov
hlt
sbb
adc
lcall
cmp
mov
mov
adc
scas
jecxz
pop
sub
js
mov
mov
jp
xchg
loop
ret
xadd
xlat
out
mov
into
test
data16
push
and
jnp
mov
je
cmp
xor
push
movsl
ljmp
loopne
stc
cmp
mov
inc
ret
push
or
popf
xor
mov
inc
aaa
cmp
xchg
jnp
fistpl
adc
pop
add
inc
sbb
cmc
scas
sub
mov
or
fwait
jne
adc
xchg
data16
xchg
adc
push
xchg
mov
fbstp
adc
fwait
push
sti
and
mov
mov
fldcw
mov
popf
mov
lds
in
sbbb
leave
fidivl
fcomi
cmp
ljmp
stos
inc
xor
pop
jle
add
cltd
repnz
pop
pusha
inc
sub
jne
gs
out
dec
aaa
fs
sub
les
dec
repnz
jb
xlat
lea
push
mov
pop
stos
cmpsl
rorl
scas
add
out
movl
or
out
fcompl
xor
int3
imul
jl
dec
test
lods
icebp
fnstenv
fisubs
cwtl
jb
or
aaa
xlat
and
leave
addr16
mov
inc
dec
or
and
int3
daa
sub
mov
xchg
pop
add
sub
mov
bound
pop
mov
aaa
or
rcl
cmp
jo
iret
pop
mov
call
nop
mov
rorb
in
stos
mov
inc
inc
rcrl
pop
loop
inc
test
add
out
push
popf
les
popaw
sub
sbb
ss
mov
lcall
add
push
push
and
push
or
sbb
movsl
and
lods
cmpb
stc
adc
jno
adc
xor
mov
push
loopne
not
push
jno
sub
not
pusha
mov
jb
lret
mov
push
mov
enter
push
push
dec
pushf
push
xchg
int3
adc
mov
hlt
pop
sub
and
rcrl
lock
cmp
inc
popa
ret
es
lret
bound
and
popa
sub
es
inc
test
daa
movsb
lahf
outsl
ret
mov
jp
mov
bound
add
inc
clc
lods
and
sub
lods
out
sub
lea
mov
push
push
orb
mov
push
mov
imul
jg
jns
lds
andl
aaa
push
xor
push
sub
cmp
arpl
dec
mov
dec
jp
xchg
hlt
add
jge
xor
xchg
push
mov
dec
arpl
adc
ja
out
pop
mov
out
xchg
inc
jae
pop
xlat
rclb
mov
pop
push
add
cmp
repz
cmpsb
scas
fwait
dec
int
dec
jbe
cmp
sub
pop
scas
lcall
mov
xor
adc
clc
inc
dec
out
lods
ret
insb
jbe
hlt
pop
dec
sbb
push
mov
inc
inc
or
rclb
call
dec
mov
mov
dec
sbb
into
out
dec
hlt
fbld
test
pop
and
and
imul
mov
adc
pushf
icebp
loopne
iret
xchg
sub
push
aas
or
ds
jl
lods
lock
lcall
adc
ret
fnstenv
lds
mov
lret
cmpsl
xor
adc
sbb
ret
push
mov
ljmp
xor
pop
repz
lret
xchg
xchg
hlt
sub
gs
aad
jp
pop
shll
pop
dec
xor
mov
into
dec
sbb
outsb
or
outsb
adc
jnp
insl
arpl
pop
sub
adc
xchg
pop
shl
cld
fistps
dec
fdivs
fcomps
mov
xchg
jmp
lret
ljmp
xor
adc
push
imul
or
mov
mov
add
lods
rcrl
jmp
cmp
push
stc
xchg
outsb
pavgw
mov
pop
cmpw
cmpb
add
pop
mov
jbe
stos
sbb
mov
push
add
clc
mov
add
hlt
fsub
mov
push
sti
dec
pop
push
mov
test
lcall
add
inc
xchg
imul
xchg
pusha
jg
mov
loope
pop
adc
dec
ret
sti
scas
lcall
mov
mov
jmp
push
das
cmp
mov
inc
stos
fs
lock
push
int
sub
int
loopne
lods
lret
ret
int3
idivb
js
scas
inc
ret
cltd
cwtl
ja
xor
xchg
mov
mov
test
scas
divb
enter
xchg
iret
jg
pop
stos
cmc
repnz
pop
call
mov
add
call
pop
repnz
push
push
cmp
lret
xchg
jb
xor
sub
or
lcall
adc
cmc
cmp
inc
jg
out
or
in
int3
sub
jp
add
sar
movsl
cmc
lret
add
mov
adc
pop
out
push
ss
jb
dec
cmp
push
loopne
jb
call
mov
xchg
les
lcall
mov
adcb
add
pop
add
insl
pop
inc
lods
std
and
push
stos
xchg
cmp
dec
arpl
dec
xchg
das
push
test
jmp
daa
jne
xlat
pop
sub
mov
fsts
inc
add
mov
dec
shr
pop
pop
inc
inc
adc
std
xchg
pushl
scas
pop
dec
sbb
pop
pop
std
cmp
mov
adc
movsl
out
xor
pop
mov
and
enter
add
push
mov
fimuls
jl
test
arpl
dec
mov
pop
andl
je
jbe
test
cmp
jbe
add
orb
psrlq
lds
inc
scas
fldl
jb
sahf
pusha
icebp
outsl
add
cmp
fwait
mov
dec
lods
outsl
int3
iret
pop
mov
dec
repnz
cmc
aam
stos
xorl
mov
mov
sahf
jge
frstor
test
or
sti
fsubrs
popa
gs
inc
imul
xor
inc
add
pop
or
jmp
cmp
adc
adc
add
dec
mov
inc
push
gs
jge
inc
rorb
ja
repnz
scas
push
loop
sbb
test
aaa
testl
out
fisttpl
bound
add
sbb
shll
popf
fimull
mov
sub
mov
and
pusha
adc
sub
mov
leave
paddb
xchg
and
icebp
xchg
xchg
xor
lcall
jbe
inc
cmpsl
adc
dec
inc
dec
mov
sub
cli
movsb
xchg
out
and
out
dec
incl
enter
dec
out
ja
outsb
dec
loope
aas
sub
push
jb
xchg
scas
jns
int3
cmp
std
sbb
jae
aaa
lock
stos
jmp
ds
mov
or
popa
rorl
xor
stos
mov
and
add
adc
mov
sub
hlt
stc
jge
mov
out
cmp
adc
jb
cli
push
adc
jmp
pop
inc
ss
mov
xchg
lods
pushf
add
inc
sbb
lret
or
stos
jae
fidivs
mov
jp
push
mov
pop
sti
cmp
xor
push
inc
mov
in
clts
loopne
sub
test
outsb
stc
leave
and
push
mov
fcmovne
int3
push
cmpsl
aas
imull
scas
xor
mov
jno
fwait
lods
mov
filds
jg
push
xor
cmp
inc
fabs
hlt
inc
loope
iret
pop
mov
pop
subb
sarb
subl
and
push
test
xor
in
jmp
mov
inc
inc
les
lods
cmpsb
pop
mov
lret
xchg
iret
ljmp
rdtsc
jle
lahf
add
push
cli
into
test
cwtl
xchg
orb
mov
out
xor
add
mov
xor
adc
pop
int
insb
mov
add
push
xor
fmuls
xor
and
daa
mov
or
into
xor
xchg
push
pushf
mov
jnp
jb
jnp
cmpsl
test
int
adc
xor
aaa
scas
inc
xor
sbb
adc
bound
push
mov
mov
std
jle
scas
incl
mov
sub
add
fwait
cmp
mov
je
ss
jmp
pushf
lret
orb
sbb
add
fildl
cwtl
jg
ret
test
pushf
daa
int
arpl
jge
stos
cmp
sub
jl
xchg
test
push
mov
cs
push
sub
xor
insb
mov
int3
fadd
ljmp
loopne
inc
cmpsb
out
sub
cli
pop
dec
jle
enter
clc
push
aaa
or
idiv
mov
cwtl
jmp
ret
stos
xchg
shll
je
mov
mov
mov
push
adc
and
jg
cwtl
out
enter
data16
sub
in
adc
xchg
push
sbb
jp
or
add
cmp
aam
lds
rorl
fdivrs
outsl
ja
sarl
sbbl
icebp
or
mov
jg
fwait
test
pop
add
in
jns,pn
inc
jmp
cmpsb
add
lcall
jmp
repz
push
inc
fmul
lcall
adc
aam
or
and
imul
addr16
adc
fs
sbb
sbb
das
mov
xor
sbb
rol
dec
ss
cmp
dec
push
inc
loopne
dec
mov
scas
decl
das
clc
mov
xor
xchg
mov
mov
or
out
repz
ret
add
jecxz
scas
loopne
dec
rorl
outsb
mov
scas
jp
in
sbb
jae
aad
test
sub
and
push
mov
push
sbb
cmp
cs
xchg
arpl
sbb
push
mov
scas
andb
popa
call
pop
pop
dec
adc
mov
jnp
stos
fsubrp
int3
scas
jb
mov
push
jmp
js
add
adc
out
mov
mov
pop
sub
and
cmpl
push
fwait
ja
mov
mov
and
ret
out
std
sarl
enter
sbb
inc
sbb
jecxz
adc
loope
out
adc
push
flds
cld
test
stos
push
and
xor
lods
shl
pop
sbb
psrlw
cmpsl
test
sub
pop
std
cli
divl
or
inc
subps
out
shll
mov
push
sahf
pop
xchg
push
cltd
mov
mov
int3
jmp
mull
shll
sbb
inc
jmp
cmp
xor
lods
inc
repz
xor
insb
std
push
or
or
cwtl
add
push
jecxz
sub
pop
out
xor
jmp
mov
je
sbb
es
push
xchg
sbb
inc
sbb
dec
daa
mov
push
xor
push
fcomps
dec
push
orb
fwait
lcall
icebp
push
mov
and
mov
sub
add
mov
call
dec
bound
push
xchg
fisubs
push
xchg
imul
mov
cmp
movb
shl
jae
popf
push
sbb
cld
hlt
data16
stos
xchg
out
cmpl
inc
push
cli
divb
shll
add
pop
add
xchg
push
sbb
rol
dec
cmp
sub
ret
xchg
push
add
rclb
mov
dec
inc
xor
inc
xor
movsb
dec
add
push
mov
int3
ljmp
cmp
jnp
or
jecxz
xchg
pusha
ret
push
sti
xlat
nop
inc
loopne
subb
iret
les
push
cmp
pop
lea
aam
push
lret
sub
out
sbb
imul
dec
scas
xor
mov
jle
xchg
in
jp
insl
std
pop
dec
iret
flds
dec
inc
xchg
in
pop
loope
sub
mov
add
mov
nop
loope
or
loop
testl
pop
popa
xchg
and
movsl
dec
sarb
or
adc
xor
sub
or
push
xchg
jo
mov
loope
xchg
out
test
imul
or
popw
xchg
ffree
push
pop
pop
xchg
loopne
ret
jle
push
repnz
faddl
in
into
add
xor
xlat
sbb
sbb
mov
or
fdivrs
cmp
pop
inc
and
into
mov
mov
push
mov
xor
dec
jo
shr
loope
cwtl
nop
and
mov
jo
test
out
data16
daa
add
xchg
fwait
iret
stc
lods
pop
mov
cmp
cmp
xchg
iret
add
data16
adc
testl
push
jo
insl
aad
je
sbb
xchg
scas
idivl
push
pop
in
arpl
and
cli
ljmp
in
jl
push
hlt
sbb
or
in
vpaddsw
mov
jbe
sbb
loopne
test
inc
loopne
mov
cltd
push
cmp
mov
adc
jbe
push
pop
lcall
push
mov
out
js
mov
ds
jmp
xchg
mov
aas
fisubrs
sti
fst
popa
add
cmp
or
jge
jo
hlt
jp
pop
push
out
outsw
ss
or
rcl
mov
mov
fcoms
and
lock
add
out
test
jbe
out
mov
cwtl
and
pusha
cmpsb
jge
add
scas
sbb
sbb
mov
sub
mov
mov
ds
pop
roll
jecxz
sbb
lods
and
inc
adc
pop
das
dec
arpl
mov
int
sti
out
pop
fiaddl
sbbb
loope
aad
add
jnp
aaa
ret
mov
cli
push
mov
aas
lds
push
push
aam
xchg
ret
imul
xor
mov
adc
addr16
testw
test
cmpl
inc
js
xor
xchg
xchg
and
sbb
mov
xchg
mov
xor
mov
mov
push
push
dec
xchg
inc
push
adc
outsl
mov
aad
cli
and
add
adc
sahf
jnp
scas
in
or
das
push
cwtl
ja
pop
shr
sbb
int
sub
in
out
nop
int
dec
mov
imul
lret
mov
dec
std
sbbl
push
loop
push
insb
loopne
lret
sub
in
mov
mov
outsl
negl
nop
leave
pop
divb
ret
inc
dec
xchg
pop
mov
push
push
mov
ret
sbb
push
push
mov
ja
addr16
aad
subb
test
xchg
popf
pop
sub
rcrb
enter
fdivr
inc
dec
mull
cmp
push
mov
or
and
movsb
ljmp
add
je
ja
insl
add
xchg
fcomps
loop
pop
call
and
inc
jp
jno
jno
popa
lock
lock
insl
divl
add
lock
pop
xor
xchg
xor
imul
sahf
jg
lcall
sub
nop
dec
add
stos
cmp
jp
cmp
popf
mov
push
fcmovnbe
imul
xchg
jnp
add
add
jg
nop
lods
jo
sbb
xchg
lea
mov
mov
jmp
add
push
test
push
mov
adc
push
adc
sahf
insb
enter
push
popa
push
into
in
and
push
lods
mov
inc
pop
test
repz
add
outsl
mov
push
mov
mov
push
and
mov
xchg
cmpsl
popa
xchg
cltd
sbb
pop
movsl
push
inc
test
in
add
daa
xchg
inc
pop
stos
inc
sub
lock
pop
jp
std
sahf
dec
in
inc
sub
arpl
xchg
or
cwtl
andl
adc
jb
loop
sub
jo
lock
loope
lret
pop
dec
or
sub
imul
pop
xor
int
hlt
cmp
repz
sbb
lods
mov
icebp
aad
mov
loop
sarl
push
cmpl
pop
push
jmp
es
outsl
mov
test
fwait
jbe
dec
add
into
rorl
mov
ret
dec
pop
lcall
fwait
mov
dec
test
js
lods
nop
popf
pushf
push
ss
cmc
fsts
outsb
shlb
mov
lock
push
mov
loop
mov
mov
add
outsb
mov
mov
testl
aam
mov
rcrb
bound
pop
jno
rcll
dec
sbb
push
mov
lods
push
mov
mov
xchg
fldenv
in
test
mov
dec
icebp
popf
and
xor
push
scas
jo
mov
xor
lods
das
icebp
dec
adc
hlt
sarb
mov
dec
bound
xchg
call
xor
fcmovbe
jecxz
pop
cltd
testb
sub
mov
xchg
jl
mov
faddl
int3
xchg
cmpsb
xchg
out
loope
sub
sub
sbb
mov
lcall
or
jp
out
pop
repz
push
pusha
cmp
and
jecxz
or
ret
cmp
or
xor
inc
ficoml
and
inc
mov
xor
arpl
popf
stos
aam
lods
mov
or
lock
mov
dec
xchg
inc
mov
add
pop
and
jle
add
sbb
adc
dec
and
or
cs
jecxz
and
adc
inc
jae
arpl
repz
inc
gs
inc
pop
cmp
rcl
in
ss
or
pop
in
testl
and
mov
pop
add
adc
pop
push
adc
scas
imul
adc
sub
inc
repz
inc
mov
inc
or
jmp
test
call
je
popf
mov
mov
lret
insb
jb
push
rol
ror
jnp
repnz
repz
xor
sbbb
fs
xchg
addr16
cmp
leave
dec
sub
mov
out
adc
ja
pushf
data16
fs
or
mov
mov
dec
and
mov
mov
mov
fidivrl
fcmove
hlt
mov
mov
add
push
into
mov
imulb
push
loope
repz
mov
imul
gs
mov
adc
push
flds
lods
and
adc
jb
js
orl
stos
int3
dec
loop
mov
inc
pop
lcall
xchg
xor
divb
pop
jecxz
mov
or
inc
cli
shrb
loopne
repnz
repz
mov
push
adc
mov
fcmovnu
mov
aad
mov
cli
push
imul
bound
adc
jle
test
and
mov
jb
sbb
fidivs
cmp
sub
iret
sub
pop
mov
xor
stos
xlat
lcall
aaa
ja
adc
cs
call
and
test
das
xor
roll
outsl
outsl
cld
in
mov
addl
aam
scas
mov
adc
sbb
and
mov
xlat
xor
adc
cmp
xchg
jae
shl
push
es
dec
out
out
fcoms
dec
fcomps
mov
in
popa
fiadds
js
mov
inc
xchg
sub
fadds
xchg
sbb
lret
into
jecxz
bswap
lcall
sbb
int3
stos
adc
rorb
sub
or
gs
hlt
mov
fcmovnb
dec
jnp
sahf
or
mov
dec
adc
inc
dec
pop
adc
lods
mov
mov
insl
mov
and
pop
push
repnz
mov
inc
pop
mov
mov
xchg
cmp
mov
xchg
aad
std
mov
dec
imul
mov
xor
imul
cli
data16
pop
mov
sbb
les
jle
or
jns
lods
lds
cli
ret
cli
icebp
adc
in
bound
xor
dec
adc
cmpsb
sbb
call
loopne
data16
or
sarl
lret
andl
and
xor
pop
in
jge
dec
lcall
xor
and
inc
stos
push
xchg
fidivl
mov
aad
scas
addl
xor
shlb
and
dec
std
shll
xchg
mov
or
addr16
cld
and
cltd
inc
lret
mov
mov
ds
test
xor
mov
arpl
or
inc
mov
imul
ljmp
xor
adc
loop
in
pop
sub
mov
push
cmpb
sub
mov
popa
xchg
mov
xchg
and
push
add
or
mov
stos
call
inc
data16
sbb
lds
insb
or
mov
cmpb
inc
adc
pop
and
jne,pn
jg
cmpb
or
movsl
mov
sub
movsb
mov
ljmp
jbe
in
dec
cwtl
mov
mov
aas
xor
jecxz
sbbl
scas
lds
call
lahf
stc
or
inc
inc
xchg
sbb
and
fsubrs
sti
cmp
push
adc
movsl
in
mov
jb
stos
mov
outsb
jae
xor
fxch
mov
xchg
std
mov
or
leave
outsl
xchg
lcall
dec
dec
xchg
jns
lods
aaa
je
push
insb
movsl
cmpsl
scas
mov
test
pop
rorl
js
jo
pusha
shl
or
jno
push
xor
movsl
js
mov
das
lock
inc
pop
sub
dec
xchg
clc
xchg
ljmp
cmp
xor
mov
add
es
cmp
sub
popf
fidivrs
mov
nop
bound
rcr
lds
sahf
sbb
mov
stos
jecxz
sbb
fnstenv
push
and
lahf
pop
add
sahf
jl
cmp
lea
out
clc
cmp
arpl
lods
push
jecxz
jle
or
pop
mov
jmp
std
out
repz
xor
xor
xchg
repz
adc
lahf
adc
mov
mov
pop
sar
cmp
or
add
sub
cmp
dec
sbb
jp
cmc
jmp
mov
add
stos
je
or
jne
decl
les
and
scas
addl
xchg
jbe
jg
dec
adc
dec
idivb
mov
cmc
pop
pop
outsb
in
xchg
jge
inc
sbb
mov
mov
pop
das
xchg
stos
pop
cld
lret
push
and
push
gs
push
in
dec
mov
sahf
adcb
pop
adc
or
ljmp
movsb
fldl
scas
push
jg
push
adcl
pop
sub
or
imul
inc
xor
clc
xor
sbb
rcrb
and
push
fisubs
add
int
adc
stos
sbb
insl
rcrl
sub
jne
ljmp
lea
sbb
fdivrp
sub
lods
pop
sti
mov
ficoml
xchg
sahf
std
add
adc
imul
test
mov
rclb
leave
xchg
repnz
dec
scas
and
jno
ret
ljmp
jbe
outsl
aam
lods
jl
pop
call
and
inc
cmc
and
fldt
mov
js
fisttpl
mov
pop
pop
dec
add
push
shl
adc
mov
xchg
jp
add
or
scas
clc
negb
leave
jbe
and
sbb
pop
test
sahf
pop
inc
xorl
mov
xchg
adc
xchg
loopne
xlat
scas
shl
sub
add
cltd
inc
cmp
sahf
mov
mov
xchg
and
push
cmp
shrl
adc
imul
lock
clc
fadds
add
add
add
add
movsl
pop
xor
int
ficoms
cld
xchg
add
and
add
xor
popa
or
pop
xchg
xchg
xor
and
stos
in
xor
push
loopne
jnp
push
pop
add
add
clc
clc
add
sub
je
mov
pop
sub
stos
mov
mov
loop
or
sbb
popf
out
mov
call
adc
dec
xchg
jge
dec
cs
stc
pushf
push
pushf
dec
mov
xchg
repnz
jb
bound
sbb
cmp
fisubs
pop
jge
push
cmp
mov
xchg
aas
sbb
pop
clc
int
push
ret
insb
and
sub
addr16
into
rcr
pop
jge
rcr
sbb
fistpll
pop
mov
cltd
cmp
pop
push
out
fdivl
pop
les
jne
mov
xlat
sbbb
jb
mov
fdivr
sbb
jo
addb
in
mov
sub
cmpsl
mov
imulb
xchg
push
pop
int3
cmp
frstor
sub
mov
repz
push
fistpl
clc
imul
stos
mov
and
movsl
repz
mov
mov
cmp
pop
xchg
push
mov
test
xchg
cmp
jmp
sbb
push
add
adcl
sbb
adc
lret
outsl
or
scas
js
or
add
insb
pop
jg
add
and
xor
lods
sbb
ret
jnp
jns
jecxz
inc
push
outsb
add
pop
idivb
in
push
push
rorb
lcall
jle
notb
cmpsl
lret
std
je
aaa
sub
pop
pop
clc
notl
orl
xchg
iret
testl
sbb
iret
sub
sbb
pop
inc
outsl
xchg
adc
fnstenv
mov
mov
pop
mov
xor
fwait
mov
mov
ljmp
loop
int
adc
ss
push
pop
fldenv
pop
cmc
lods
movsl
inc
fdivl
pop
fcom
xchg
jmp
fimuls
pop
ljmp
cmc
std
fcmovnbe
jg
stos
imul
jnp
out
jno
repz
outsb
xor
test
pop
jle
mov
push
sub
call
xlat
mov
xchg
xor
add
dec
sbb
pop
mov
leave
lds
cmp
add
hlt
pusha
jecxz
lret
inc
jge
icebp
add
pop
xor
aas
imul
psrlq
lret
mov
mov
mov
cmp
ljmp
inc
xor
mov
sbb
stos
arpl
pop
call
dec
mov
push
scas
or
mov
push
adc
jecxz
aaa
cld
lds
push
pop
lahf
in
xlat
inc
mov
addl
lea
ss
push
or
xchg
xchg
jb
mov
cli
adc
inc
stos
stos
ret
pop
jno
mov
xchg
and
aaa
mov
push
popa
or
mov
mov
fidivrs
jns
inc
jl
lods
addb
fnstenv
dec
clc
sbb
sub
xchg
fadd
aam
arpl
sbb
xchg
mov
jae
mov
out
outsl
les
mov
mov
cmpsl
out
jmp
movsb
test
and
sub
inc
or
orb
push
lock
jno
popf
out
in
xchg
jns
int3
in
mov
aad
add
dec
xor
lret
xor
xchg
xor
fs
dec
imulb
in
hlt
test
shrb
aas
loope
sbb
adc
push
sub
pop
sbb
hlt
xchg
add
fsubrs
inc
mov
and
ja
iret
mov
jmp
adc
nop
movsl
push
clc
test
adc
das
data16
insb
pop
in
xchg
sbb
test
icebp
cmp
inc
inc
xchg
rorl
dec
sub
adc
leave
pop
sub
inc
test
lahf
jge
push
loopne
mov
lret
bound
mov
stc
cmp
or
push
dec
push
jl
mov
out
xor
adc
fs
mov
fs
ds
mov
inc
test
lods
shlb
or
xchg
add
addl
nop
insb
xchg
mov
aad
cmpsl
test
xor
adc
jno
mov
in
cwtl
mov
add
cmpsb
rcr
sti
call
sahf
add
mov
mov
icebp
inc
xchg
xchg
into
mov
sbb
mov
lret
lret
fwait
add
mov
xor
std
push
inc
inc
jp
pop
adc
mov
dec
and
in
sar
loop
jns
mov
fidivrl
pop
icebp
jo
rcr
xchg
push
lahf
inc
push
in
mov
xor
pop
push
aas
ss
pop
sub
lahf
add
repz
cld
dec
sub
jnp
in
mov
je
or
cltd
push
jo
jne
outsl
insl
leave
sbb
push
mov
mov
add
sbb
xchg
sbb
out
xchg
les
mov
es
fwait
popa
dec
and
aas
test
and
iret
or
mov
add
imul
out
mov
nop
mov
dec
test
jmp
gs
pop
mov
popf
jmp
and
sbb
out
pop
xchg
call
push
mov
xlat
out
inc
repnz
ja
dec
cmpsb
push
lea
flds
xor
mov
aas
dec
out
sub
cltd
fldt
mov
xor
clc
jae
push
xor
out
push
cmp
shll
jno
rorb
sub
pop
imul
cmc
call
pop
ret
push
fimuls
jge
pushf
repnz
inc
cmp
insl
adc
xor
hlt
mov
addr16
test
fimull
fsts
sbb
jle
jb
push
add
xchg
dec
rcl
mov
xorb
push
mov
sub
seto
fs
insb
and
xor
cmp
mov
pop
mov
adc
jno
imul
push
cmp
or
imul
push
jnp
or
cs
pop
aas
cli
xorb
mov
add
or
aad
xlat
jb
and
jp
jg
bound
add
xlat
cmc
outsl
movsb
daa
jbe
idivl
mov
cltd
sti
add
add
pop
add
fcoms
dec
mov
cmp
pop
and
add
jb
ds
outsl
iret
add
push
add
sub
mov
out
xchg
adcb
jmp
pop
cmp
pop
add
out
cld
cwtl
jmp
xor
sbb
bound
pop
scas
nop
clc
sub
dec
mov
dec
cmp
pop
stc
pop
cld
dec
mov
imul
popf
in
xor
or
dec
xor
hlt
pop
cmpsl
add
pop
rorb
imul
mov
mov
ja
cmp
push
hlt
inc
nop
inc
pop
hlt
jns
jp
ds
sub
rcll
jo
jbe
dec
mov
rorl
and
mov
push
ds
xchg
dec
or
mulb
addl
sub
pop
mov
incl
enter
pop
xchg
mov
test
xchg
add
mov
mov
xorl
pop
sti
scas
cmpsl
push
inc
sbb
add
mov
repnz
es
sbb
fwait
lock
popa
jo
jp
and
addr16
mov
popf
adc
dec
pusha
stos
js
mov
rclb
fsub
cmp
out
cmpb
scas
rclb
in
imul
jae
pop
loopne
movsb
icebp
adc
dec
jae
repnz
imul
mov
sub
cld
sub
sbb
divb
pop
fimuls
das
dec
gs
sub
jne
jp
dec
sub
sbb
mov
or
ret
fwait
rolb
ret
mov
stc
jne
add
and
nop
stc
jne
mov
xor
cmp
xor
jl
cmp
mov
xchg
cmp
jmp
jnp
pop
sti
mov
pop
lock
imul
jmp
xor
or
aas
jmp
hlt
mov
setle
jno
xchg
mov
in
enter
call
mov
clc
insl
enter
mov
pop
dec
out
int
cmp
pop
adc
cmpsb
dec
mov
jg
lret
jp
inc
in
inc
pop
sbb
mov
xchg
rolb
jmp
loopne
sbb
xchg
ss
adc
data16
mov
jb
fldt
into
mov
cmpb
aad
shlb
pop
or
movsb
into
add
loopne
outsl
sbb
imul
inc
mov
mov
shr
push
notb
mov
jne
aas
sbb
sub
mov
xchg
dec
movsl
cmpb
jns
orb
call
push
bound
xchg
subl
popf
and
xchg
push
icebp
inc
jae
bound
popl
in
mov
mov
loopne
arpl
ret
icebp
sti
insl
or
popa
popl
lods
xchg
sar
pushf
cli
lock
cld
push
outsb
ret
cld
pop
push
jl
mov
xlat
imul
cmp
mov
test
push
mov
or
out
or
xchg
in
in
add
es
sti
sub
mov
sarl
xchg
outsl
adc
addb
pop
ret
mov
fsubrl
mov
xchg
inc
outsb
sub
out
cmc
cmpsb
test
or
call
pushf
popa
cmp
lds
sbb
xchg
mov
iret
rorb
cmpsl
ret
inc
sub
jnp
dec
mov
cltd
fsubp
pusha
push
shrb
sbb
cltd
lods
lret
add
adc
clc
sub
bound
out
sti
mov
addr16
ret
sub
aam
xorb
ds
jno
divl
arpl
popa
repz
std
out
mov
sbb
ja
sbb
sub
pusha
mov
dec
or
daa
pop
rolb
dec
aam
xchg
ja
dec
mov
pop
aas
testl
js
scas
iret
ret
dec
cmpsb
outsl
mov
jmp
jne
movsl
xchg
out
push
push
outsb
push
push
jecxz
test
movsb
gs
lods
jmp
jno
pop
xlat
push
inc
inc
popa
pop
sub
dec
addr16
pop
inc
stos
daa
shll
sahf
cmp
add
and
xchg
ret
mov
icebp
mov
xor
arpl
adc
and
mov
and
out
jmp
rcll
mov
clc
push
or
adcl
xchg
jmp
pop
pusha
adc
jo
fwait
out
inc
mov
pop
mov
cmpsb
filds
xor
add
add
fldpi
adc
inc
das
xchg
arpl
xor
sbb
popf
pusha
dec
pop
and
or
push
xchg
or
xchg
jb
sbb
add
add
cvtpi2ps
sbb
mov
in
lahf
xchg
aas
mov
jno
mov
inc
test
mov
lret
repnz
mov
es
sub
mov
jo
repz
jns
loopne
push
andl
sub
or
popa
fistps
roll
ds
pushf
push
dec
movsl
or
or
or
push
les
push
iret
adc
into
sbb
sub
arpl
xchg
imul
xor
or
stos
lods
mov
cmc
repz
aad
xor
add
bnd
lods
sbb
mov
cmpsl
mov
cmp
cli
mov
icebp
imul
mov
inc
popf
lock
push
int
loop
movsb
pop
xchg
das
cmp
cmp
test
cltd
cld
sub
add
repz
scas
mov
push
mov
inc
dec
subb
mov
test
lds
gs
pop
mov
dec
sbb
and
subl
mov
test
add
lcall
cwtl
and
dec
sbb
lea
rcr
fdivrs
add
jl
dec
ret
adcb
scas
loope
jecxz
pop
clc
xor
in
adc
jb
jg
adc
jge
and
or
jb
jbe
xor
cmc
sub
sub
jbe
sbb
mov
mov
mov
jmp
inc
mov
cs
inc
mov
xor
arpl
adc
or
dec
aad
fs
xlat
loopne
cwtl
or
ss
pushf
mov
xorl
insb
rorb
adc
sbb
inc
push
cmp
out
dec
add
cpuid
faddl
add
add
add
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
add
add
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
push
xlat
mov
xlat
lea
xorb
pop
sbb
add
pop
add
jecxz
loope
adc
inc
add
adc
loope
out
fwait
js
mov
in
loope
stos
movsl
flds
fimull
pop
mov
es
cli
aam
adc
cmp
push
sbb
dec
imul
cmc
pusha
push
mov
arpl
cmp
shlb
jmp
and
icebp
scas
bound
mov
pop
mov
fdivs
mov
pop
loope
add
and
jne
adc
push
scas
sub
std
cmpsl
add
sahf
push
mov
sub
in
push
xchg
jb
or
cli
lods
jge
jge
hlt
push
sahf
fistl
jo
mov
sbb
popf
mov
repnz
gs
push
jecxz
fcmovu
cmc
leave
popf
ret
lods
ret
dec
add
inc
push
adc
xchg
repz
mov
adc
jle
add
sahf
inc
fwait
nop
or
hlt
push
xchg
and
jecxz
lea
xchg
pop
or
dec
pop
enter
stc
xor
test
mov
loop,pn
mov
std
ljmp
test
mov
popf
dec
dec
jnp
pusha
movsb
mov
mov
hlt
cld
repnz
scas
cmp
rcll
jg
lcall
aad
pop
adc
adc
test
push
hlt
fldl
dec
fistpl
jle
out
in
push
add
aad
jno
ljmp
aad
lret
insl
scas
outsb
cli
xlat
std
mov
dec
into
mov
int3
repz
add
ret
fiaddl
pop
data16
out
scas
add
loope
or
jbe
jge
out
mul
js
jne
mov
das
xor
leave
mov
add
mov
lcall
movsb
adc
inc
insl
scas
cmp
sti
movsl
jb
leave
into
adc
subb
sbbl
int3
enter
int
call
dec
call
mov
adc
clc
cmp
fimuls
xchg
jne
popa
jns
cmc
imul
lea
lret
lea
enter
addr16
ja
adc
sub
dec
jo
pop
push
xlat
rolb
adc
clc
shll
adc
lds
arpl
rcrb
lret
shrb
xchg
xor
imulb
cmpsl
outsb
xlat
jno
mov
add
das
adc
sbb
mov
push
xorb
ror
lods
orb
ds
lea
cmpsb
es
in
sar
mov
outsb
bound
push
dec
inc
notb
cmp
rclb
xchg
sbb
push
test
xchg
inc
and
xorw
add
mov
mov
or
hlt
ljmp
lods
pop
sti
popa
mulb
mov
lret
and
shl
jge
and
rcrb
dec
ret
dec
scas
jmp
imul
ficompl
mov
pop
jmp
mov
nop
push
popa
push
jns
dec
jno
push
inc
lea
movl
mov
cmp
pop
xor
aaa
push
dec
jp
ds
jbe
mov
roll
dec
mov
dec
mov
fstl
or
inc
dec
xchg
pop
in
jno
inc
fstpl
je
div
jns
dec
int
xchg
lahf
cmpl
jb
pop
imul
push
xor
xor
or
cmp
xor
leave
jns
inc
mov
dec
dec
negb
mov
mov
jns
test
test
sbb
aas
lods
jne
cmp
flds
les
lret
ficoml
ss
push
shl
pop
xchg
push
outsb
jg
fisubl
pop
mov
dec
add
test
icebp
jg
test
jbe
loope
cwtl
lcall
jmp
int3
adc
fidivl
mov
adc
ror
daa
outsl
andl
xor
dec
cmpsl
dec
push
mov
or
mov
sbb
icebp
out
test
xor
xchg
cmc
aam
cmp
js
xor
dec
push
jns
pop
or
sbb
and
and
jg
add
push
dec
test
jno
mov
lds
dec
sbb
mulps
jge
fbstp
jo
jbe
in
or
dec
and
sahf
rcll
jns
inc
rcrb
mov
dec
and
cmp
sahf
jg
sub
mov
jp
jnp
lock
loop
jne
pop
jbe
jb
cmpb
sbb
sbb
xor
add
mov
xchg
cld
jl
mov
jle
int3
xchg
cmp
and
xchg
mov
shrl
and
jo
or
add
test
mov
sub
repz
loope
sar
sub
lds
fidivrs
aam
fstpt
and
mov
jmp
mov
adcl
loopw
pop
imul
inc
bnd
lods
data16
mov
sub
cmp
adc
inc
repz
cld
or
sub
push
insb
inc
xchg
jae
out
movsb
pusha
outsb
fdivrs
xchg
dec
sbb
push
add
inc
in
cld
nop
pop
inc
pushf
pop
and
mov
adc
inc
in
push
cmpsb
jo
out
push
adc
and
rcrb
mov
js
frstor
leave
lret
inc
push
push
dec
inc
mov
sbb
stos
push
dec
mov
imul
dec
mov
insl
lcall
add
mov
xchg
mov
adc
dec
repz
dec
loop
adc
add
aas
lods
dec
sub
pop
mov
pop
push
test
cli
fmulp
xchg
cmp
pop
cmp
and
inc
rorb
mov
sbb
sbb
dec
jg
pop
jmp
inc
sub
inc
xchg
fiadds
inc
jmp
sbb
iret
insb
loop
xor
scas
xor
or
movzbl
jbe
mov
jge
jne
sbb
and
mov
sbb
stos
fnstenv
std
idivb
mov
xor
jns
or
leave
and
dec
adc
clc
push
xlat
fisttps
dec
shll
les
pop
jle
les
sub
or
xor
add
add
add
add
jg
stos
mov
dec
mov
and
add
dec
or
insl
lret
repz
dec
daa
into
test
movsl
or
icebp
sti
xchg
ret
push
bound
sbb
and
xor
jmp
xlat
adc
fbstp
aad
sub
bound
mov
iret
inc
fs
cwtl
outsb
mov
cltd
adc
xchg
dec
or
jg
push
ficoml
lods
push
cmc
aad
or
xor
adc
push
adc
add
in
loop
fwait
out
push
fs
cmp
mov
sbb
mov
ret
das
nop
mov
popa
add
out
inc
jbe
std
and
sub
test
cmpsb
into
lea
jb
out
stos
popa
sub
sbb
cmp
clc
mov
mov
xor
xchg
or
mov
mov
and
xor
mov
lcall
dec
lahf
jle
gs
int
sti
out
nop
sub
xchg
mov
pop
andb
popa
bound
fstl
scas
xchg
int3
cmpsb
mov
arpl
loop
push
cmpsb
shrl
and
std
jle
xchg
jg
lods
push
xchg
popf
inc
mov
cmpsl
cwtl
sbb
popa
fidivrs
or
sbb
sbb
clc
stc
mov
xchg
out
pop
mov
js
addl
test
mov
mov
in
mov
pop
insl
xor
into
shl
dec
sub
in
add
insb
jmp
cmc
in
adc
pop
mov
xor
adc
in
adc
popl
and
loopne
leave
mov
fmuls
cmp
leave
xor
mov
getsec
ss
push
dec
in
popf
mov
add
mov
sub
cmp
into
mov
jge
xchg
mov
or
adc
push
mov
dec
lret
dec
lods
loopne
loopne
pop
mov
shrl
mov
roll
sub
jmp
iret
or
insl
je
fnstsw
pop
das
xor
call
jg
sbb
leave
not
pop
pop
int
insl
pop
dec
dec
inc
sub
out
mov
ja
repz
xor
sbb
dec
mov
mov
jno
cltd
mov
xor
mov
aam
out
data16
fmuls
repz
adc
push
shlb
pop
push
lock
push
cmp
arpl
push
xchg
int
mov
add
lcall
and
and
or
or
adc
mov
push
ja
or
sbb
push
mov
dec
iret
decb
xlat
mov
insb
and
jge
in
and
push
add
das
incl
cmp
push
int
leave
push
cwtl
mov
ficompl
sbb
cmpsl
pop
popf
mov
mov
gs
mov
mov
mov
sbb
stos
pop
push
pcmpeqw
movsl
add
or
popa
leave
sbb
clc
arpl
or
jge
push
pop
dec
mov
ja
data16
out
jnp
mov
fstl
add
test
lock
arpl
adc
jecxz
jp
inc
dec
repnz
call
and
and
dec
xchg
movsb
xchg
and
cld
xchg
sub
and
jbe
and
arpl
leave
pop
rorl
dec
pop
add
adc
mov
stos
inc
push
and
aad
cltd
lahf
jp
test
aas
clc
in
lea
pop
and
arpl
cmpsl
cmpsl
inc
mov
cwtl
repz
rolb
inc
fcompl
pop
or
les
pop
cmp
xor
clc
and
jmp
lock
xlat
std
gs
fdivl
mov
inc
test
outsl
jl
scas
loop
sub
je
sbb
jl
jns
or
orb
test
push
dec
outsl
scas
and
in
adc
xor
adc
pop
jnp
xchg
jp
and
sub
jle
add
inc
add
cmp
xor
sub
jp
xchg
cmp
lahf
mov
mov
in
and
imul
and
sub
xchg
sbb
push
push
mov
sub
rcrl
adcb
add
gs
mov
sbb
cmp
lock
cmpsb
xchg
cmp
dec
stc
fsts
pop
pop
stc
adc
add
jle
mov
sub
mov
inc
xlat
loopne
sub
jmp
dec
and
push
mov
xchg
pop
and
sub
mov
je
and
jb
arpl
fmull
sbb
out
cli
xchg
loope
in
fsubrl
aam
or
pop
int3
fdivl
add
stc
jae
jl
inc
test
test
mov
rclb
jmp
adcb
or
out
pop
jmp
fnstenv
mov
dec
out
add
popa
cwtl
jne
or
loope
je
loopne
pop
mov
cmpsl
mov
push
test
dec
out
add
and
dec
nop
lods
insl
adc
cwtl
imul
daa
scas
xchg
sub
or
scas
inc
fcmove
pop
dec
ja
jl
mov
addl
sub
cltd
inc
mov
test
cmp
orb
jge
xor
push
and
xchg
lods
fcomi
lds
inc
je
gs
test
mov
jno
popa
push
andl
in
stc
insb
cwtl
out
ljmp
fdivrl
xor
or
pcmpgtb
cmp
loop
addr16
aad
adc
fisttps
mov
push
ss
mov
movsl
arpl
push
je
cltd
decl
sub
and
cmpsb
inc
cltd
cld
imul
in
and
cmp
sub
lods
cmp
pushaw
out
stos
inc
ja
les
fsts
add
adc
sub
jnp
int
addr16
adc
mov
aas
and
pop
lret
pop
sub
out
dec
jae
lahf
push
movsb
xchg
dec
mov
and
adcb
mov
mov
jecxz
jl
mov
cmpsl
movsl
adc
in
push
xchg
xor
sbb
pusha
ss
jbe
je
inc
dec
mov
mov
adc
mov
lock
push
movsb
mov
pop
call
and
pop
inc
movsb
enter
enter
xorps
add
add
add
add
je
out
cmp
repnz
mov
mov
sbb
add
pop
add
dec
out
data16
aad
adc
scas
shl
cmp
mov
jecxz
jno
dec
in
inc
fscale
ljmp
dec
push
gs
pop
jno
cmpsb
cmp
scas
iret
icebp
adc
pop
imul
add
xchg
mov
pop
icebp
adc
or
cmc
adc
or
in
cmp
xor
adc
sti
mov
add
cwtl
xchg
sti
jne
and
dec
push
xchg
pop
test
stc
imul
jb
jmp
xlat
fbstp
notl
daa
adc
callw
imul
aaa
aad
jb
jmp
rcr
sub
mov
sbb
cmp
cmp
push
xchg
imul
pop
or
iret
push
idiv
xchg
out
jmp
pop
into
dec
cmp
jae
push
mov
sbb
xchg
stc
pop
fwait
add
ss
out
cmp
sarl
scas
push
dec
inc
shrl
rolb
les
xchg
aaa
cmc
cwtl
mov
jb
jns
shl
pop
sub
in
jbe
xor
addr16
xchg
testb
mov
or
in
pop
scas
cmp
push
xchg
sbb
out
movl
scas
repnz
push
in
sbb
dec
mov
lds
xor
sbb
mov
xor
add
fidivs
dec
test
fs
cmp
aam
xor
xchg
std
clc
out
mov
loop
pop
call
es
pop
push
fsubrp
stos
pop
mov
mov
out
inc
push
outsl
push
iret
inc
add
push
in
int3
mov
cltd
xchg
aas
fcoml
cltd
insb
mov
bound
mov
push
or
mov
mov
mov
mov
xchg
push
ret
psrad
lcall
push
ljmp
dec
sar
inc
mov
xor
xchg
xchg
pusha
adc
or
nop
fnstsw
inc
cli
test
mov
mov
mov
mov
or
roll
pop
ret
sub
mov
sarl
pushf
mov
xchg
std
mov
repz
test
pop
push
in
pop
rcl
jge
in
andl
or
stc
loope
push
or
ret
repz
jnp
sub
js
mov
cmp
adc
push
dec
push
inc
mov
addr16
pop
clc
fcomps
jbe
mov
lods
les
pushf
xor
test
or
and
loope
fidivrl
pushf
xchg
cs
lock
loop
test
inc
mov
push
insl
cmp
inc
mov
jb,pt
dec
sahf
lods
xchg
insb
faddp
das
xchg
or
adc
mov
dec
push
js
cmp
add
mov
xor
outsl
push
mov
inc
jg
inc
test
out
outsb
push
outsb
stc
mov
jp
add
call
push
je
js
sbb
push
inc
inc
xor
sub
mov
xchg
pusha
mov
adc
or
leave
aas
int3
xchg
mov
xlat
mov
in
pop
testl
pop
mov
aad
sbb
loope
inc
push
dec
mov
sub
out
cli
mov
negl
or
jecxz
adc
fisttpll
cmp
je
mov
imul
xor
pop
pop
mov
aam
mov
lea
loop
jae
adc
mov
xor
dec
pop
pop
out
cld
dec
mov
and
adc
mov
nop
adc
add
fcompl
dec
popa
test
pusha
and
adc
mov
fwait
xchg
ljmp
push
shl
sbb
mov
out
and
outsb
jle
pmuludq
inc
pop
iret
and
push
mov
sbb
mov
ficoms
pop
std
jne
add
rclb
mov
imul
into
push
dec
in
fsubrp
xlat
pop
lret
in
iret
xchg
add
pop
add
rclb
fdivl
xor
or
cmpsl
fldt
in
test
popa
and
pop
mov
dec
xchg
or
and
jb
dec
rcll
jg
inc
push
loope
cmp
push
xchg
ret
into
in
out
push
push
lods
jecxz
das
or
xor
or
sbb
push
lods
nop
mov
data16
inc
push
push
mov
mov
shlb
lds
popa
fs
iret
cltd
hlt
data16
xor
cmp
aam
test
out
insl
jecxz
imul
fbld
push
popf
mov
mov
repnz
mov
test
movsl
jle
into
faddp
in
jmp
outsl
imul
mov
mov
jl
xchg
fisubl
fwait
mov
aas
dec
mov
iretw
je
mov
cmp
ss
mov
xchg
adc
nop
sub
pop
mov
cmpsl
pop
xlat
inc
lea
jnp
lret
pop
ss
pop
stos
push
mov
xor
jne
repnz
add
inc
mov
jg
sbb
fwait
test
subb
jmp
sub
mov
mov
mov
xor
inc
add
xchg
or
shl
or
or
mov
cli
test
xor
dec
or
rcrb
mov
fcomps
xchg
push
ja
les
enter
push
aad
inc
add
xor
sbb
push
sub
cmp
cmp
cmp
pop
mov
mov
xchg
cmp
xchg
in
xchg
sarl
cmp
cmp
dec
dec
lea
decb
pop
push
jmp
movsb
cmp
lods
cmpsl
cmpsl
loop
jecxz
mov
or
dec
lods
movl
stc
jecxz
inc
mov
xchg
jne
std
dec
jb
ja
dec
mov
xchg
lea
sbb
enter
notb
add
jnp
push
out
fldl
cld
cmp
push
sbb
add
sub
lock
mov
sub
and
cld
adc
jbe
aas
cltd
cmpsl
js
mov
mov
dec
mov
sub
and
sbb
jecxz
out
enter
test
and
add
rclb
jb
push
adc
mov
lret
jno
or
jmp
and
or
mov
adc
pusha
dec
and
mov
aad
pusha
cld
jne
pop
pop
xchg
push
jnp
add
and
add
call
inc
add
adc
inc
shrb
icebp
jbe
push
scas
or
xchg
push
inc
sbb
adc
pop
daa
adc
sub
and
jo
sub
int
mov
movsl
fwait
clc
xor
std
lds
cli
pop
btc
push
int3
xchg
inc
adc
loope
testl
dec
stos
sbb
test
lret
imul
xor
adc
pop
inc
mov
sbb
movsl
or
adc
cmpsl
je
mov
imulb
jmp
adc
inc
cli
jno
adc
movb
stos
cld
les
mov
push
outsl
shrb
xor
bound
jb
xchg
into
sti
push
data16
inc
ret
ficoml
cmpsl
call
dec
mov
fidivs
adc
icebp
jmp
cmp
and
mov
ljmp
lret
in
mov
sub
add
push
xchg
mov
test
subl
pushf
clc
and
pause
jno
insb
and
sbb
movsl
leave
jbe
shlb
pop
movsl
sti
loopne
jmp
xchg
adc
mov
scas
or
sti
sbb
out
mov
std
movsl
add
adc
test
cmp
inc
testl
inc
inc
roll
mov
inc
aam
ret
add
dec
enter
add
outsl
jge
push
fdivr
mov
mov
cltd
mov
jmp
jnp
cmpsl
xlat
mov
add
pop
jns
jmp
jae
sqrtps
fwait
loop
dec
ss
push
xor
mov
loop
sbb
shr
push
stos
dec
rorl
xor
adc
jnp
inc
frstor
bound
xlat
mov
inc
add
es
adc
cltd
inc
and
gs
push
out
mov
outsl
cmp
leave
in
shlb
xchg
adc
sbb
xchg
test
push
jl
fists
out
fwait
mull
xchg
fildll
jb
and
mov
xor
and
inc
mov
rcr
push
sub
call
xchg
mov
sbb
jne
leave
push
xchg
lds
push
test
ja
dec
outsl
mov
fnstsw
ja
movsl
popa
test
xchg
push
and
insb
mov
sbb
and
popa
inc
xorb
mov
xchg
mov
lcall
test
aaa
and
dec
pop
out
mov
mov
pop
adc
xor
pop
lods
mov
cmc
push
nop
pop
jb
sub
jo
leave
mov
cmp
push
shll
pop
lcall
cmp
inc
imul
push
lea
add
push
mov
fnsave
jno
push
pop
sbb
mov
out
or
lds
sbb
and
scas
push
jns
idivb
popw
dec
mov
pusha
sbb
out
sbb
pop
sbb
cmp
sub
pop
imul
lock
jle
negb
pop
stos
dec
mov
lds
xchg
scas
mov
xchg
mov
xchg
xor
add
push
xchg
push
dec
inc
aam
push
ror
push
add
sbb
xchg
inc
pop
ds
hlt
das
jl
push
jbe
xchg
pop
mov
pop
add
dec
inc
repz
xchg
mov
addr16
and
pop
jg
pop
sub
or
push
push
and
stos
add
sub
xor
scas
push
shl
push
les
in
out
rolb
fwait
add
cmpb
add
sbb
pop
xor
add
punpckhwd
arpl
outsb
and
and
sub
flds
imul
or
jbe
xor
test
lock
into
inc
xchg
sub
out
arpl
inc
pop
lods
xor
pop
mov
out
pop
push
mov
pop
pop
jle
cld
sub
inc
cwtl
cmpsl
lods
sbb
fs
popa
push
or
dec
pop
push
aam
ljmp
fbld
mov
jae
cli
pop
xor
xchg
jno
dec
push
sbb
outsl
mov
shlb
lahf
out
xorb
mov
filds
cmpsb
in
cmp
cli
out
adc
into
pextrw
inc
jge
into
pop
lahf
xchg
inc
push
inc
loope
imul
mov
push
pop
out
lods
pop
lret
adc
in
adc
pop
les
mov
outsl
push
push
mov
pop
es
loope
push
pop
pop
cmc
sub
repz
inc
mov
dec
mov
adc
push
repnz
dec
push
shlb
cld
sub
in
push
call
xchg
aam
shl
push
into
mov
fwait
dec
jle
into
popa
gs
stos
outsl
jne
outsl
mov
adc
sub
pop
and
inc
and
sub
das
das
js
daa
mov
lcall
pop
loope
jecxz
mov
jp
enter
ret
stos
in
dec
roll
mov
enter
xor
mov
daa
sbbb
push
jbe
std
and
in
mov
jp
mov
mov
mov
lret
push
cmp
imul
sbb
ljmp
push
xchg
mov
movsl
xchg
mov
cmp
or
xor
loopne
push
ljmp
int3
pushf
push
jnp
xchg
dec
mov
inc
pop
cmpsb
aas
das
push
sbb
cmp
xchg
aas
repz
outsb
cli
sbb
xor
xor
add
mov
pop
adc
test
push
jnp
gs
inc
cmp
mov
cmp
out
in
mov
jo
in
sbb
in
fiadds
sub
mov
stos
cmp
in
jnp
mov
out
pcmpeqb
fwait
call
pop
rorb
sbb
out
jp
pop
test
mov
stos
je
jle
dec
add
jg
jbe
push
inc
lret
ret
and
jno
mov
mov
sbb
repz
or
cmp
inc
stos
out
movsb
dec
xchg
dec
sbb
jnp
rcrl
jge
push
cmpb
notb
in
cmp
out
and
cld
adc
pop
lds
movsl
out
adc
dec
sub
ret
mov
sbb
pusha
nop
xor
cli
add
pop
push
test
cmp
lahf
data16
cmp
pop
dec
mov
incl
add
add
add
add
mov
mov
fwait
sub
add
pop
add
inc
pop
scas
lock
les
jae
sbb
push
cmp
cmc
jg
pop
add
lock
xchg
fnstcw
pop
and
fcoml
js
repz
jl
fsubs
imul
push
mov
xchg
mov
xchg
daa
repz
daa
xchg
in
roll
jb
sub
pop
pop
or
mov
dec
jp
sbb
nop
cmp
ds
movsb
cs
lahf
cs
cmp
ss
cld
in
push
mov
cmp
or
idivl
dec
pop
cmp
pop
and
dec
ds
add
dec
xchg
lahf
pushf
movsl
popa
popa
xor
mov
jg
ja
stos
cmp
ja
lds
les
lret
movsl
repnz
adc
push
xchg
push
cmp
out
pop
mov
cltd
sbb
icebp
in
cmp
iret
xor
popf
out
or
mov
sbb
pushf
sub
fucomip
dec
or
outsl
fsubs
ljmp
cmp
ja
hlt
in
fiaddl
cmp
fidivl
mov
movsl
xchg
insl
add
std
cld
sub
in
pop
fidivl
pushf
cmp
adcb
add
sbb
or
dec
mov
sarb
xor
rcrb
cli
pop
popa
cwtl
xor
dec
jp
popa
dec
hlt
and
clc
inc
cmp
push
rorl
pushf
into
xchg
and
icebp
cmp
cmpsl
lret
lods
adc
test
loope
scas
mov
pop
xchg
and
lods
mov
lods
icebp
or
fwait
pop
mov
jmp
fwait
repnz
aas
adc
or
jp
jge
xor
push
pusha
mov
push
adc
sbb
sbb
cmp
lret
lea
and
adc
mov
cwtl
sbb
lahf
pop
rclb
jns
bound
mov
js
mov
inc
jns
mov
push
fidivrs
or
sub
sahf
lea
cmpsb
ficomps
push
insb
sti
dec
movsb
jo
adc
mov
in
insl
lea
jns
or
imul
and
pushf
push
add
imul
jae
inc
push
call
es
inc
pop
inc
outsl
test
in
mov
pop
sbb
mov
mov
mov
dec
or
test
mov
sbb
xchg
pop
inc
clc
pop
aaa
test
jne
xlat
xorl
fsubs
xchg
and
pop
mov
mov
adc
lahf
outsb
sahf
aas
scas
mov
ljmp
in
jne
xchg
inc
shll
call
xchg
sbb
xchg
popa
lret
daa
xor
cmc
fists
jnp
les
ja
sahf
jmp
mov
mov
mov
xchg
push
push
sbb
and
mov
shrl
lods
fnsave
movsl
and
dec
into
sub
sub
aas
les
adc
mov
lds
in
ljmp
fsubrl
fucomip
mov
push
jno
and
push
cli
fiadds
mov
pop
or
and
dec
sub
ljmp
add
sbb
mov
cmp
cmp
popa
ds
xchg
adc
arpl
es
cltd
orb
pushf
add
hlt
sahf
popa
negl
dec
adc
xorl
lahf
jl
dec
or
mov
aad
or
sub
cwtl
cs
leave
or
mov
cmc
lods
inc
sub
cmpsl
loope
add
daa
fwait
mov
out
shr
mov
adc
xor
adc
and
out
sub
lcall
jae
xor
out
mov
loope
rep
clc
stos
inc
les
inc
cmp
inc
jb
insb
xchg
mov
loop
pop
jo
dec
test
adc
push
push
xchg
sub
jg
fistpl
dec
add
dec
pop
lods
mov
xlat
stos
lds
les
cwtl
inc
jmp
mov
or
lcall
jecxz
xor
mov
and
xchg
psubb
scas
pop
xor
shll
cld
mov
xor
pop
pop
jnp
mov
outsb
cmp
pop
cmpsl
loop
or
fwait
js
inc
sbb
fld
jne
test
pusha
imul
pop
dec
stc
jne
mov
rorl
cmp
pop
repnz
loop
imul
and
push
popf
loope
addr16
pop
mov
cmc
ss
sub
idivb
outsb
push
fsubrs
sbb
outsb
dec
add
push
mov
jmp
mov
or
cmc
out
cmc
fdivrl
xor
xchg
popa
shlb
cmpl
mov
jecxz
subl
mov
or
fs
and
stos
fisttps
outsl
add
jge
rorl
test
xor
push
popf
lret
pop
fmul
ret
xor
pop
stc
push
loop
inc
add
mov
cld
jo
in
and
fcompl
sahf
stos
es
adc
cwtl
pop
adc
lods
push
mov
loope
push
cmc
aaa
jns
pop
mov
adc
shlw
js
cltd
push
ret
jbe
cwtl
mov
imul
xor
shlb
imulb
scas
lret
outsl
pushf
pop
mov
and
ret
addr16
xor
repnz
std
mov
lret
dec
sbb
pop
out
in
loopne
push
pop
in
xchg
xor
and
and
pusha
iret
cltd
lds
lock
lret
mov
mov
cmpsl
mov
mov
xor
hlt
jecxz
pop
mov
jg
mulb
mov
add
sub
rcll
mov
or
jns
or
jno
pop
adc
pop
movsb
shld
mov
sub
inc
test
loope
pop
cmp
cmpsl
sub
test
inc
hlt
mov
mov
push
jno
xchg
call
xor
cmp
test
cmp
daa
mov
jmp
loop
mov
add
leave
adc
mov
aas
add
mov
xchg
addb
push
repnz
dec
xchg
mov
int
in
sbb
lock
out
frstor
scas
push
and
mov
sbb
mov
add
add
add
add
popa
jle
pop
lods
into
fisttpl
fwait
jp
popa
mov
pop
add
add
sbb
lcall
fbld
jo
mov
mov
or
in
push
cs
pushf
in
dec
xchg
mov
shlb
push
aam
dec
cli
aas
js
push
inc
lret
into
cli
in
push
scas
loope
xlat
ret
in
mov
add
insl
jp
inc
jge
dec
pusha
ljmp
jne
and
pop
add
int3
stos
dec
test
dec
int3
shr
push
pushf
mov
pop
cmp
sbb
pop
test
xor
xor
sub
imul
in
aaa
sub
add
adc
mov
clc
push
adcb
inc
mov
inc
sub
xchg
cmpsl
lret
mov
testb
or
ret
jbe
insb
rcrb
xor
insl
out
xor
or
lods
mov
and
fsubrs
leave
dec
jns
jae
mov
xchg
jl
pop
sbb
mov
cmp
ret
lret
add
in
jae
pop
mov
rcll
fs
push
dec
lahf
int3
jb
xchg
outsb
std
shrb
loopne
and
push
mov
sbb
into
fildll
adc
xor
movsl
and
jecxz
das
ds
jb
rolb
sub
sar
and
idivl
push
call
hlt
mov
bound
xor
orb
aaa
or
cs
push
pop
jmp
fmull
scas
xor
jecxz
stos
mov
cmpsb
adc
pop
sub
into
jb
mov
jns
data16
sar
lret
lds
jl
das
push
aaa
in
jb
cltd
push
aas
add
adc
incl
jo
je
xchg
cltd
inc
stos
test
addr16
adc
dec
xchg
stos
mov
ja
popf
scas
pop
insl
mov
std
dec
movsb
sahf
jmp
jbe
sbb
push
imul
or
inc
jo
xor
pop
shrl
mov
push
inc
mov
sbb
sahf
pusha
jge
xchg
mov
dec
jg
mov
test
std
outsb
cmpsl
xlat
mov
je
shrl
ja
or
inc
cmpsb
in
xchg
dec
aam
jnp
mov
pushf
sub
and
stos
mov
ds
cmp
ljmp
and
adc
sti
and
xor
pop
shr
out
dec
cmpsl
sbb
inc
hlt
inc
mov
fnstsw
dec
push
sub
push
push
js
push
or
xchg
jmp
imul
out
adc
test
popa
popa
dec
or
movsl
subb
jbe
movsl
mov
fcompl
notb
add
jno
mov
or
idiv
or
sub
jg
and
xor
cs
and
xor
fdivp
dec
fsubs
mov
add
js
jb
std
dec
int
into
inc
mov
xchg
pop
cmp
pop
stc
xchg
push
mov
fsts
lods
sti
mov
popa
lods
xchg
xchg
jo
cmpsb
mov
js
sahf
das
jge
lret
dec
push
mov
pop
adc
xchg
and
lods
pop
xor
xchg
or
clc
push
shll
mov
and
mov
fmuls
adc
pop
shlb
in
xchg
dec
out
xchg
lcall
or
cmp
jne
stos
loop
pop
movsl
cli
adc
xchg
data16
push
cmp
xchg
pop
pop
xlat
out
aam
dec
mov
mov
dec
add
rclb
and
xlat
lods
bound
cmp
jnp
jns
lods
jbe
cwtl
fwait
xchg
ja
ds
mov
or
pop
fwait
rcr
clc
cmp
gs
xchg
inc
int
cmp
sbb
mov
push
fwait
into
dec
out
mov
jg
push
test
sti
pop
xchg
jb
mov
cwtl
sbb
inc
imul
cmp
sbb
mov
and
mov
ds
pop
int
scas
fsubp
pop
rolb
add
fwait
sub
and
push
dec
add
in
stos
data16
cmpsl
bound
dec
xchg
loop
fldl
push
scas
jp
push
cli
pop
jmp
sub
lods
repz
int3
loope
test
cmpb
or
mov
outsl
sarl
pop
or
imulb
dec
sbb
inc
pop
out
or
arpl
out
add
inc
data16
out
ret
xor
fwait
dec
jl
dec
sbb
insl
sbb
popf
jmp
sub
std
sbb
test
nop
shrl
andb
sbb
je
jl
jae
add
ljmp
xor
cmc
jns
mov
xor
rep
out
jmp
push
ja
mov
sub
pop
jb
cld
xchg
hlt
xchg
fisubs
adc
jbe
jnp
inc
or
ja
out
popf
mov
insl
fisubrl
add
xchg
jmp
push
dec
decl
rcr
leave
push
push
aas
insb
lds
mulb
dec
jmp
test
sub
ja
cmp
jl
iret
stos
stos
pushf
lahf
lret
xchg
mov
xor
cwtl
mov
mov
pop
cmp
and
js
mov
aad
and
repz
pop
iret
das
sub
mov
shrb
or
add
jmp
in
jno
adc
fwait
push
adc
cltd
mov
mull
loop
mov
fisubrs
or
enter
xor
push
sbb
or
add
mov
divl
jp
mov
pusha
or
movsl
popa
mov
sbb
mov
lea
or
jb
shlb
pop
imul
shlb
push
or
cmc
int3
adc
push
ss
cld
cmp
mov
pop
lea
jne
ja
cltd
sbb
out
xor
cli
lock
jnp
jae
sbb
push
icebp
daa
hlt
push
lods
sub
in
mov
in
aad
int3
jbe
into
dec
fucomp
hlt
sti
mov
pop
cmp
lahf
inc
mov
mov
mov
push
aad
sbb
gs
ljmp
or
mov
sub
adc
lret
mov
jnp
push
pop
push
pop
sahf
and
push
jnp
adc
rcll
inc
ja
mov
jl
int
fldenv
iret
scas
mov
pushl
aam
bound
fmul
and
pop
addl
lcall
ffreep
ljmp
test
push
das
mov
push
mov
add
add
add
add
pop
cmpsb
adc
mov
test
clc
jecxz
add
and
add
mov
addb
ficoms
jg
xlat
enter
or
mov
loopne
sub
add
push
add
cltd
fcom
std
out
shrb
lds
mov
jnp
enter
jne
movsb
pop
pmulhw
sbb
mov
popf
dec
sub
orl
cli
lahf
insb
xchg
ja
sbb
dec
push
sbb
adc
call
mov
outsb
mov
mov
and
mov
popa
cmp
mov
adc
loope
inc
js
test
dec
daa
outsl
sub
dec
adc
xor
in
repnz
arpl
inc
jb
push
movsl
mov
mov
mov
into
cmp
or
jb
pop
lahf
push
orb
std
dec
rcrb
and
adc
mov
in
test
out
dec
pop
call
pop
imul
push
ja
mov
repz
push
inc
pop
and
das
mov
sbbl
xor
or
mov
cmp
or
xchg
fists
cmp
and
sub
inc
mov
cmc
cwtl
adc
test
and
mov
mov
jl
leave
mov
adc
cmp
cmp
movsl
jo
push
pop
adc
cli
xchg
and
pop
mov
mov
mov
es
stos
sbb
pop
add
subb
jae
popf
gs
dec
xlat
ffreep
add
les
mov
rorl
test
or
pusha
ds
cmpsl
xchg
fld
mov
dec
or
xchg
mov
fdivl
dec
and
out
cld
jle
out
mov
push
int3
xor
pop
push
icebp
jge
aas
lret
pop
int
stc
rcll
or
and
push
bound
loope
jae
fisubs
lods
mov
loope
repnz
or
add
std
inc
fildl
mov
jae
daa
sub
scas
adc
xchg
adc
cmp
dec
sub
into
xlat
outsb
sbb
dec
or
insl
rorl
out
or
ljmp
mov
frstor
adc
mov
fldenv
sub
sbb
lret
push
imul
sub
inc
mov
inc
push
enter
xor
ljmp
push
daa
sbb
pop
push
push
loopne
jmp
cmp
xchg
fcomps
xchg
push
sbb
clc
add
daa
mov
xor
push
jno
inc
int3
adc
aas
push
mov
push
lds
or
adc
jne
dec
jbe
sbb
push
outsb
movsl
push
jnp
xchg
add
repz
dec
xor
sbb
jg
push
add
loopne
jg
in
jl
mov
mov
ret
movsl
adc
sbb
inc
push
mov
cmpsl
push
fisttpll
inc
scas
xor
xchg
repnz
xchg
movsl
je
mov
iret
push
nop
out
cmp
push
push
and
negb
clc
mov
mov
mov
push
cli
loope
int3
pop
mov
sahf
pushl
stos
lcall
cld
mov
add
jg
xchg
lea
lea
pushf
inc
add
outsb
aam
push
mov
das
mov
call
sbb
jl
popf
sub
fwait
sbb
lods
jae
xchg
loop
push
inc
mov
and
pop
or
test
add
mov
mov
inc
int3
pop
loope
jns
push
rcrb
add
dec
mov
fcomps
push
or
xchg
pop
mov
cmpsl
dec
cmpsb
sbb
sti
je
cli
sub
aad
inc
in
notl
test
add
push
into
sti
shll
mov
jb
add
movsb
out
mov
in
dec
pop
data16
sub
ja
dec
outsb
mov
or
sbb
cmp
add
jp
and
notl
inc
mov
into
lret
sbb
lea
out
lahf
xchg
cmpsb
fidivl
mulb
mov
out
adcl
adc
xchg
lods
test
mov
xchg
fdivr
dec
dec
or
inc
inc
fiadds
ret
jge
cmp
lahf
repz
mov
sbb
sbb
test
cmp
push
mov
xor
mov
lret
xlat
and
xorl
insb
push
loop
andb
pop
hlt
stos
mov
pop
int
test
sub
rol
sbbb
in
inc
push
stc
xor
mov
mov
in
negl
add
fsts
das
lcall
es
push
push
mov
popf
mov
pop
pop
push
adc
jb
ror
repz
pop
das
cmpsl
dec
fidivrl
sti
leave
stos
rcl
push
and
and
xchg
mov
sub
out
test
push
test
lods
and
mov
adc
jb
dec
inc
dec
in
inc
fs
mov
mov
icebp
dec
cwtl
and
outsb
push
or
aad
pop
cmp
add
popa
jge
jle
lea
sub
mov
popf
mov
mov
stos
and
push
loope
sbb
mov
mov
cmp
sbb
xchg
iret
pop
cs
insl
movsl
sub
mov
cli
add
cs
int3
sub
lcall
pop
inc
xchg
cmp
stos
sub
mov
and
sub
imul
outsl
push
repz
test
scas
and
cmp
xor
xor
mov
or
sub
xor
rcrb
xor
mov
movsb
add
adc
push
sahf
mov
sti
add
mov
sub
jle
loope
call
jge
or
adc
ss
mov
sti
xchg
jnp
pop
and
fnstcw
mov
pop
push
pusha
scas
add
loop
hlt
adc
pop
and
sub
mov
rorl
jl
xchg
push
push
lahf
loop
mov
int
adc
xchg
into
sti
testl
sub
popa
sti
pop
mov
or
aam
inc
fisubrl
mov
xlat
push
stc
cmp
in
jae
fisttpl
neg
push
in
push
stos
in
ds
sti
int
mov
mov
icebp
mov
js
ret
lods
dec
movsb
bound
leave
loope
lock
sbb
cmp
or
xor
lea
dec
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
sbb
insl
les
mov
jae
mov
mov
and
add
push
ficomps
gs
xchg
fstpl
ss
sti
and
fistpl
add
imull
or
js
mov
aad
xor
inc
loop
push
lods
scas
xchg
jo
pop
arpl
push
lods
int
mov
pop
outsl
inc
inc
push
int
loop
ljmp
mov
sarb
push
ljmp
jecxz
rcll
lock
mov
jge
and
clc
xor
insw
test
ss
inc
mov
fdivp
jae
push
jg
mov
push
cld
std
xor
xchg
xor
repz
pushf
mov
jmp
popl
push
jmp
jno
and
mov
push
push
shll
lret
and
das
lea
cmp
lcall
imul
scas
jnp
jle
mov
pop
nop
and
mov
sub
clc
add
outsl
cltd
cmpsb
dec
and
sahf
or
xor
repz
lret
sbb
aad
lret
pop
jns
pop
inc
jno
clc
mov
add
mov
test
pop
mov
stos
loop
xchg
sub
lea
mov
add
mov
jle
insb
in
mov
push
outsb
mov
cmc
in
sbb
es
cmp
frstor
js
inc
mov
and
fisubs
jb
cmp
mov
aas
or
scas
inc
or
jno
push
or
jmp
insl
rorl
sarb
sahf
or
xchg
incl
into
icebp
test
mov
in
pop
dec
adc
mov
jae
das
rcl
or
outsb
mov
mov
adc
push
pop
cmc
lcall
mov
mov
ljmp
mov
repnz
es
lret
cmpsb
fldcw
imul
jmp
clc
das
arpl
xor
int3
in
jp
pop
push
sub
jne
adc
fcomps
add
mov
push
lahf
mov
mov
xlat
adc
insl
mov
fsts
mov
daa
inc
ret
call
test
xchg
fdivl
stos
sub
in
sub
out
test
mov
mov
and
aad
fnstcw
mov
or
mov
fistpll
int3
cltd
lods
ret
cli
and
dec
xor
popf
cmc
aaa
or
or
enter
ds
mov
popf
cld
daa
loope
hlt
fcmovne
into
xor
cmpsb
sbb
out
xor
leave
add
sub
cld
hlt
repnz
fwait
and
jbe
mov
xor
xchg
clc
xor
rclb
out
xlat
pop
mov
fwait
sbb
jnp
pop
mov
pop
xchg
mov
mov
sbbb
jno
mov
jp
jecxz
and
jnp
pop
sbbb
dec
in
add
mov
mov
aad
repnz
sub
outsl
cmp
cmp
jle
in
xor
mov
fnstenv
mov
mov
scas
ljmp
jmp
dec
jne
xor
pop
shlb
cmp
repnz
or
imul
insb
mov
imul
shlb
mov
mov
jecxz
push
jecxz
clc
mov
mov
adc
and
sub
sti
add
push
mov
scas
out
pop
jae
stos
jp
cmp
adc
inc
shl
xor
clc
mov
jl
push
fbstp
fsubl
fsubr
icebp
in
or
iret
orl
sbb
fnstenv
push
aam
mov
xchg
pushf
push
jecxz
inc
sbb
or
andb
add
adc
sub
xchg
dec
aad
clc
jecxz
div
or
push
jmp
jo
add
in
rorb
mov
adc
cs
lods
mov
rcrb
or
mov
call
ljmp
pop
iret
xchg
ds
push
int3
xor
inc
inc
outsb
dec
out
ljmp
and
xlat
aad
mov
mov
notb
sub
inc
xor
dec
sarl
ficomps
mov
or
pusha
arpl
push
inc
ds
repnz
fs
outsb
dec
inc
adc
ret
jecxz
shll
jae
push
out
cld
rorb
cmp
mov
rol
mov
test
xchg
xchg
mov
outsl
jno
arpl
pop
ss
fs
and
bound
in
cmp
loop
ret
pop
push
push
push
xchg
sbb
addr16
cmp
cmp
imul
rcr
sahf
pop
pop
mov
push
cmpsl
aaa
popf
aas
inc
lret
inc
cmp
cli
pop
cmp
addr16
pop
sub
sbb
test
aas
xchg
cmc
inc
jne
push
jo
cmp
rolb
ljmp
fs
inc
outsb
aaa
pop
jns
aad
call
outsb
int3
add
aad
add
push
leave
shrl
mov
imul
pop
jb
out
call
xchg
or
mov
fmull
dec
sahf
cmp
out
call
in
pop
xor
cli
sbb
pop
sbb
repnz
or
insl
aam
roll
sub
pop
ljmp
push
push
jmp
enter
sarl
outsl
sbbl
push
and
pushf
ljmp
inc
outsl
xor
jnp
sbb
mov
shll
mov
stos
aad
or
hlt
rcrb
sbb
fistpl
popa
loope
xlat
mov
dec
pop
cld
push
and
xchg
or
nop
lret
imul
jp
adc
fneni(8087
add
push
pop
pop
outsl
mov
cmp
or
cltd
add
je
arpl
stos
in
sub
push
fs
imul
push
sub
or
xchg
stc
sub
xchg
std
adc
cltd
sbb
xchg
or
cmpsb
xchg
pop
xor
xor
jl
adc
mov
jno
push
push
adc
adc
or
inc
sub
popa
push
icebp
cs
ss
pushf
pop
dec
dec
shll
lret
test
leave
xchg
sub
imul
dec
sbb
out
dec
arpl
out
fdivrs
mov
push
in
push
test
lret
add
pop
jns
lret
add
add
add
add
lahf
arpl
mov
xchg
sbb
add
pop
add
or
data16
lret
dec
movsb
hlt
fadds
xchg
xchg
xchg
ret
sbb
xor
inc
xlat
dec
fisttps
in
mov
xor
mov
sbb
fs
fsubl
les
pop
leave
mov
add
mov
mov
incb
aam
inc
incl
mov
rorl
xchg
sbbb
lods
xor
andl
or
ret
imul
xor
leave
data16
sbb
sub
data16
mov
lea
adc
add
push
and
scas
popa
outsb
xchg
ja
mov
loopne
lds
adc
aam
cmp
mov
sbb
xchg
sbbl
es
inc
xor
mov
xchg
leave
ss
out
sbb
push
xor
das
aad
sti
push
data16
pusha
jp
xlat
cmp
sub
push
fld
mov
jne
sar
lret
and
cmp
inc
in
push
cld
dec
dec
xor
or
pop
jge
test
adc
or
add
loope
push
mov
xor
jmp
xor
and
pop
rcll
push
push
ja
jne
in
mov
xchg
jmp
inc
mov
mov
pop
inc
sub
jns
mov
jp
or
ja
rclb
fdivrs
jne
cltd
mov
cmp
xor
xchg
adc
jg
sahf
jno
xor
xchg
cmp
out
in
adc
pop
inc
fsqrt
sbb
pop
bound
fwait
rorl
push
in
mov
int3
out
add
cmp
add
push
shlb
rol
stc
sub
test
lods
fisubs
fldenv
pusha
lret
inc
xchg
test
std
pop
mov
loop
mov
sub
jge
arpl
mov
and
shll
insl
cmpsl
sub
out
cmpsb
outsb
movsl
mov
sbb
adc
dec
mov
jle
insl
push
arpl
fwait
dec
data16
dec
outsl
mov
aaa
fadd
inc
adc
mov
mov
mov
sub
jnp
xor
pop
sahf
xchg
sub
sarb
or
pop
ss
fcoms
insb
jge
sarl
push
cld
jne
push
stc
lods
js
xchg
xor
adc
les
rorl
je
aas
push
xor
out
sbb
cmp
std
jmp
ljmp
data16
sub
adcb
stc
cmp
fcoml
jecxz
dec
test
push
pop
lret
jne
popa
stos
sarb
push
pushf
aaa
xchg
xor
mov
pushf
xchg
xchg
lret
out
xor
lods
push
lcall
and
aaa
fistl
popf
jl
les
fistpll
adc
insb
sub
stos
dec
adc
jge
dec
add
xchg
mov
or
ja
xor
sbb
out
stos
mov
ficoml
dec
inc
fs
mov
and
das
das
dec
clc
add
in
sub
mull
cld
push
jle
and
daa
push
push
inc
sbb
loop
loope
cs
mov
pop
arpl
data16
pop
pop
mov
mov
inc
pop
xchg
mov
jbe
dec
stc
inc
inc
dec
out
int
ret
push
je
mov
shl
or
ds
ret
push
add
sub
es
ds
pop
mov
ja
subb
icebp
js
shlb
adc
and
iret
enter
imul
dec
js
insb
aam
push
jns
int3
mov
sub
or
cmpl
lahf
mov
xor
xchg
xor
lds
test
mov
outsl
rclw
push
xchg
inc
icebp
pop
cmpsb
popa
vpsignb
mov
jecxz
add
add
cmp
in
cmp
je
jle
sub
inc
inc
mov
and
dec
push
pop
lods
rorb
cmp
add
cltd
and
test
sbb
jae
daa
cli
mov
imulb
mov
pop
or
popa
push
enter
scas
data16
inc
stc
push
sbb
loopne
outsb
mov
add
imul
add
mov
mov
std
into
jle
test
pop
mov
adc
push
jno
aam
inc
out
mov
imul
or
mov
cmpsb
sub
sbb
rcl
cmp
push
mov
icebp
jbe
sub
repz
mov
gs
dec
ss
dec
je
scas
out
pop
outsb
scas
imul
scas
aaa
mov
pop
out
inc
mov
inc
aad
push
repnz
jne
mov
movsb
arpl
jno
sub
test
pop
ficoms
out
cmp
sarl
loop
add
rcl
jo
push
xor
adc
mov
push
sub
xor
into
into
adc
out
pushf
in
rorb
sub
jae
out
xchg
les
pusha
sbb
jae
int
lret
int
pop
test
imul
pop
adc
bound
mov
fmull
cmc
cmpsl
sarb
push
add
cli
cld
push
adc
pop
imul
dec
push
scas
repz
push
adc
leave
rol
sub
cmp
mov
lcall
aas
aad
sbb
std
cmc
adc
lods
ljmp
push
stos
jecxz
cli
es
test
nop
dec
add
loope
not
xchg
adc
mov
sub
jns
lea
repz
negb
sub
sub
jmp
pop
mov
mov
dec
mov
dec
call
inc
push
mov
jle
pop
mov
nop
and
and
icebp
and
stos
or
cmp
idivb
mov
mov
stc
sub
push
cmc
popa
dec
and
lock
in
cmp
loopne
int
ret
dec
ja
icebp
out
std
movsb
xor
xor
lret
add
pop
in
cmp
xor
arpl
mov
and
insl
pusha
xor
adc
fstpt
and
inc
mov
add
mov
adc
ja
inc
lahf
call
dec
push
loop
xchg
sbb
into
ljmp
ljmp
add
add
add
add
mov
gs
mov
dec
add
and
add
popf
jl
jl
pop
shl
movsl
sbb
fldl2e
inc
push
ret
inc
aaa
in
daa
xchg
clc
jno
pushf
push
add
fldcw
mov
jecxz
sbb
rclb
fisubl
daa
fimuls
mov
dec
pop
mov
int3
and
outsb
in
cmp
fidivs
sub
popf
adc
call
or
mov
vmovddup
mov
loop
or
out
mov
insb
into
into
adc
out
xlat
mov
imul
data16
push
test
push
lea
pop
imul
sti
js
jne
adc
and
adc
cmp
into
sbb
sahf
stos
mov
sbb
lahf
jae
out
mov
xor
add
jns
mov
lea
fcomps
push
push
pop
cli
or
pop
adc
repnz
mov
je
mov
cmp
or
or
in
ret
lcall
pop
lcall
shlb
std
add
es
pop
insl
lea
loopne
mov
jmp
adc
into
xchg
jle
xchg
test
add
subb
push
and
aas
int3
fadds
pop
add
xor
xchg
es
setne
jp
movsb
mov
sbb
shlb
add
inc
mov
fdivs
mov
insb
mov
xor
sub
addb
mov
xor
loope
add
test
adc
mov
pop
je
mov
sbb
push
sti
sub
push
jp
ljmp
cmp
imul
add
sbb
in
out
adc
popa
ja
mov
out
mov
pop
mov
cmc
mov
sub
cmc
repnz
inc
sub
xchg
xor
fcompl
scas
sbb
js
mov
push
movsl
int3
popf
sbb
cltd
inc
pop
mov
shll
xchg
dec
dec
sub
mov
fs
stos
cmp
add
call
jge
adc
or
adc
sarl
addr16
loop
insb
pop
cmp
cli
std
mov
inc
inc
cmp
aad
xchg
xchg
fdivs
ffreep
outsb
push
lock
sbb
cld
test
adc
jns
mov
pop
inc
jb
mov
fimuls
lds
imul
push
addl
out
imul
test
jb
push
pop
sub
lock
jne
pop
out
lods
int3
test
out
bound
out
pop
mov
mull
out
mov
xchg
in
adc
loopne
xchg
and
into
inc
cmpsl
lods
iret
aaa
lods
sub
sub
push
insb
pop
ja
push
add
shrb
out
mov
jp
lods
lcall
and
jge
ja
dec
popa
dec
idiv
divl
into
subl
cmp
stc
fistps
out
mov
and
int
lock
sub
xor
dec
cmp
ss
mov
mov
pop
dec
fxch
jg
sti
and
ja
into
cltd
mov
fdivrs
in
add
cltd
xor
repz
push
cmc
test
mov
jle
test
lahf
sub
outsb
fcomps
enter
xchg
ret
int
ret
cmp
jl
rorb
ret
cld
imul
or
jge
mov
pop
inc
int
das
xchg
cwtl
cmp
fmuls
pop
mov
jne
xor
sub
jns
jmp
cmc
jno
nop
inc
cmp
inc
fdiv
and
out
mov
jmp
idivb
out
xor
test
popa
inc
pop
sti
inc
fisubrl
in
jo
cmc
xchg
aam
sahf
inc
sub
js
lock
roll
inc
movsb
fsubl
stos
add
scas
mov
add
rcrl
lds
sti
sbb
aam
data16
popa
cmp
js
mov
push
out
cmp
push
pop
jns
inc
adc
cmp
lods
rorl
add
es
cmp
xchg
mov
stos
inc
cwtl
mov
div
inc
imul
inc
clc
dec
addb
call
xor
jno
dec
jg
adc
hlt
std
std
in
cmp
sbb
ret
lahf
aam
and
pop
mov
jecxz
sub
loope
rcrb
xor
cs
sub
cmp
leave
mov
aad
adc
sbb
sub
pop
dec
fsubl
cmc
sub
inc
scas
sar
and
data16
xchg
mov
jmp
xchg
xchg
sub
ja
int
jbe
mov
clc
add
cmp
add
add
add
jo
add
imul
ret
int
lret
shrb
xorb
mov
fdivrl
mov
cli
xchg
popa
dec
aam
cli
repz
push
pop
stc
cs
pusha
cmpsl
imul
sbb
nop
mov
mov
and
dec
in
cmp
cmpsb
pop
pushf
stc
mov
push
mov
adc
shl
repz
repz
rorl
or
cmp
dec
mov
lret
fdivr
xchg
and
xor
movsl
test
outsb
xchg
pushf
sub
aad
adc
jge
les
sbb
ret
mov
outsb
sbb
inc
aam
sbb
or
aam
pop
popf
inc
xchg
sbb
inc
gs
xor
cmpsl
nop
pop
mov
jecxz
inc
into
jae
fildl
gs
jl
mov
lcall
mov
cmp
fstpl
rolb
jmp
repnz
push
icebp
push
arpl
cltd
sbb
cmp
mov
xchg
jb
stos
lcall
sti
and
sub
jae
sub
adc
add
iret
jmp
add
and
je
sub
xor
jo
inc
bnd
stos
ret
dec
pop
xchg
fmul
addb
add
inc
sub
aam
cmp
sbb
loop
das
and
xorl
mov
rcr
sub
push
push
sub
fistps
aad
mov
insl
xlat
or
pop
faddp
cmp
push
mov
insb
pop
cmpsl
movsb
pop
lds
add
xchg
xchg
dec
push
inc
or
pop
cltd
shl
loopw
push
add
and
add
stos
mov
sub
cmc
int
xchg
mov
cmp
dec
lret
and
xchg
es
cmp
lgs
fsubr
je
insb
pop
ds
xor
jge
mov
inc
sub
xchg
or
repnz
out
fidivrs
mov
jnp
popf
fnstsw
imul
xor
icebp
xorb
push
sbb
lods
pop
add
push
cmp
or
fadds
shrl
mov
pop
mov
pop
inc
inc
mov
push
imulb
pcmpgtd
jae,pt
movsb
push
sbb
cmp
repnz
out
pushw
scas
mov
mull
fmul
fs
xchg
push
inc
fninit
or
rorb
fdivrs
sub
lods
rorb
xchg
cltd
mov
and
js
stos
jle
jne
sbb
lods
out
imul
enter
cwtl
inc
sbb
mov
add
inc
iret
fs
push
inc
and
pop
andb
lahf
mov
mov
fsub
cld
sbb
in
inc
fiadds
popf
mov
mov
cmp
aas
pop
cli
jne
inc
add
fs
and
nop
addr16
ffreep
loopne
mov
shlb
adc
fadds
pop
js
pop
push
out
bound
cmp
subl
loope,pt
pop
mov
out
cmp
test
xor
sbb
or
mov
inc
mov
pop
add
leave
xchg
js
and
pop
xor
and
lcall
jg
rol
in
or
pop
fwait
popa
int3
icebp
mov
ret
mov
out
push
cmp
movsl
xchg
notb
fildl
jp
add
xor
inc
shll
test
jge
scas
cmp
test
nop
mov
jbe
and
cmp
and
ror
in
aad
loope
dec
aas
adc
mov
clc
fimuls
cwtl
jecxz
cmc
adc
xchg
shl
cmp
adc
popf
pushl
sbb
cmp
push
and
jge
lret
inc
mov
pop
jp
dec
aaa
faddl
push
xchg
and
rcr
filds
inc
lock
mov
sub
sbb
adc
xor
dec
pop
jae
mov
xor
mov
adc
jge
in
or
scas
jb
sbb
cmp
xchg
roll
mov
outsb
inc
hlt
jbe
push
cmp
aas
mov
ds
xorb
pop
fsubp
inc
sahf
mov
iret
or
cmc
cltd
scas
mov
mov
shlb
add
adc
das
test
rolb
xor
mov
mov
hlt
testl
sbbb
adc
add
or
pushf
jmp
fists
mov
pop
and
testl
mov
mov
mov
jmp
es
sbb
pop
out
and
aam
bnd
xlat
aas
sti
jp
pusha
nop
lods
mov
pop
jp
sbb
adc
push
xchg
pop
pop
mov
fs
idivb
cltd
add
mov
xor
mov
out
pop
out
cmp
mov
je
test
push
imul
sub
data16
and
adc
shlb
xchg
ja
mov
outsb
ret
mov
dec
mov
int3
stos
mov
jl
int3
cmc
adc
or
inc
or
inc
inc
xchg
je
incl
daa
mov
pop
repnz
add
push
jb
push
inc
lods
jle
add
pop
xlat
daa
jl
ficoms
lcall
popl
arpl
mov
pop
mov
dec
outsb
sub
into
hlt
je
jbe
gs
mov
mov
and
add
mov
stos
adc
sti
lahf
cli
mov
xchg
push
aas
mov
or
push
push
les
and
outsb
jno
xor
push
mov
xchg
mov
subl
lret
sbb
sbb
movlps
lods
pop
mov
mov
aaa
sub
jnp
int3
push
pop
fs
mov
mov
jle
sub
inc
arpl
mov
cltd
out
scas
lods
xor
xchg
inc
fdivl
cmp
and
jp
loopne
mov
pop
or
and
shll
xchg
loope
imul
adc
push
lret
sbb
lret
flds
fstp
stos
mov
daa
xchg
aam
jl
sub
test
ljmp
decb
xor
xchg
shll
loope
adc
fs
sbb
dec
ret
ret
adcb
test
fiadds
sbb
add
faddl
push
dec
mov
mov
push
xchg
aas
aas
sub
adc
cmp
movsl
in
sbb
shrb
mov
adc
movsb
mov
fs
push
or
stc
cmpsb
shl
push
in
movsl
mov
mov
push
in
rolb
call
imul
xor
pop
add
push
add
out
in
or
inc
cmp
pop
repz
iret
xchg
fstpt
dec
push
movsl
pop
je
xor
out
xor
movaps
shl
rcrb
ret
insb
mov
ljmp
rclb
jg
sahf
inc
or
dec
lds
sbb
nop
int3
movsl
and
or
jmp
push
subb
outsl
sbb
mov
in
push
ljmp
and
popa
mov
mov
xor
jle
mov
cmp
mov
jl
into
pop
push
xor
inc
shl
and
xor
jl
mov
stc
xor
sub
mov
outsl
sbb
push
adc
pop
iret
mov
xchg
xor
pop
jns
mov
adc
cmp
dec
add
test
hlt
aas
mov
out
test
add
int
push
adcb
jno
ds
inc
xor
inc
mov
cs
lret
and
repnz
cmp
xchg
test
das
pop
arpl
or
and
out
xor
mov
jl
pop
stos
test
or
call
push
outsl
mov
movsb
out
or
xchg
xchg
mov
cmpsl
mov
pop
rcl
inc
mov
stos
xchg
sbb
repnz
mov
add
add
add
pop
addl
rolb
pop
add
and
add
cmpsb
ret
fdivrs
mov
stc
outsl
pop
neg
shll
add
inc
roll
add
jno
ja
jo
inc
xor
imul
pusha
popf
mov
pop
mov
outsl
mov
xlat
scas
orl
iret
and
inc
ficoms
mov
shll
inc
jge
cvtdq2ps
push
cmpsl
ss
mov
jle
fistpl
cmp
xor
fs
lret
xchg
jae
xor
xor
push
mov
sub
sahf
fistpl
fnstsw
mov
jnp
cmp
adc
clc
int3
push
jmp
je
pusha
lret
sbb
pop
outsl
in
pusha
imul
cwtl
outsb
rorl
inc
pop
xchg
jbe
cmp
xor
or
lret
loope
outsb
sub
mov
aad
pop
cmc
xor
xchg
jo
test
mov
xchg
adc
daa
cltd
loop
popf
cmpsl
jg
jl
fwait
clc
fsubp
xlat
fwait
adc
fwait
pop
adc
daa
adc
xor
sbb
bound
add
sub
jne
loope
je
pop
aad
jbe
push
int
or
ja
cmpsl
mov
pop
test
outsb
sub
jns
fildl
cmp
iret
decb
or
adcb
adcb
sbb
fstl
mov
ret
movsb
lret
inc
scas
inc
out
xchg
inc
addb
or
mov
xor
and
int3
add
push
inc
jecxz
scas
dec
jbe
jmp
fmuls
negb
sbb
dec
sub
shl
insb
loop
mov
imul
push
pop
data16
push
clc
pop
or
jno
sbb
cmp
push
lock
shrb
stc
outsl
mov
dec
jg
rorb
xchg
jg
shlb
jmp
mov
xor
push
mov
jecxz
hlt
pop
div
repnz
push
into
imul
shlb
or
xor
dec
aaa
ljmp
mov
jae
xor
xchg
and
ljmp
pop
leave
mov
jnp
sub
fmuls
lods
test
leave
inc
xchg
in
outsb
push
sbb
mov
out
pop
das
test
aad
pop
clc
cmc
in
cmp
outsl
jmp
mov
adcb
mov
incl
push
inc
ret
xlat
nop
mov
out
mov
fdivrp
jmp
mov
ret
mov
into
ret
jns
mov
sub
jp
adcb
sbb
daa
std
pop
lahf
std
sahf
mov
xorb
filds
in
cltd
inc
mov
stos
add
cmc
add
testl
orl
pop
pop
ret
inc
xchg
arpl
xor
aam
inc
add
sbb
sbb
gs
iret
lcall
sbb
out
mov
dec
sub
sbb
lods
loop
push
jle
or
mov
mov
xchg
sub
int
fdivrl
push
into
pusha
fmull
cld
test
jecxz
xchg
dec
xor
mov
mov
cmp
shl
je
mov
fldt
push
and
sbb
movsb
aad
inc
push
fimuls
dec
daa
scas
loop
sbb
insl
or
mov
mov
dec
and
fcmove
js
pusha
add
sbb
or
sub
aaa
xchg
pop
cmp
jb
pop
cmp
mov
dec
inc
xchg
gs
test
pop
jl
fdivs
pop
jo
das
add
jmp
mov
in
mov
pop
adc
cmpsb
push
lods
sub
cmp
enter
push
sti
pusha
pop
mov
enter
adc
ds
lods
cwtl
pop
sbb
or
outsb
xchg
pop
push
mov
pop
fmul
lahf
mov
cs
mov
sbb
decb
lods
xlat
fidivrs
or
fxch
or
add
addr16
jnp
loope
leave
and
pop
inc
and
or
xchg
xor
cld
xchg
dec
or
out
sbb
inc
and
in
jle
mov
sub
icebp
clc
inc
subl
std
cmp
ret
inc
or
mov
sbb
sbb
js
push
icebp
xchg
fcmovbe
push
mov
repnz
sbb
mov
lret
ds
and
cmp
mov
pop
hlt
shr
popl
mov
dec
out
dec
pusha
mov
bound
subb
jb
sub
mov
inc
mov
aam
fwait
hlt
inc
rcl
pushf
mov
popl
push
jnp
mov
or
rol
inc
push
mov
mov
adc
add
ss
mov
mov
inc
xlat
bound
lock
xor
insb
stc
adcl
mov
cltd
add
mov
loopne
xchg
stos
pop
push
hlt
pop
in
dec
out
jne
sub
push
testb
lods
mov
inc
xchg
dec
mov
pop
mov
int
cmp
cmp
mov
xor
pushf
scas
mov
push
jge
cmc
pop
hlt
sub
add
ss
pop
cmp
or
cwtl
rcrb
jne
and
add
fnstenv
xchg
xlat
hlt
cwtl
mov
and
or
mov
jb
xchg
mov
scas
sub
push
inc
fldcw
dec
mov
test
xchg
cmc
xchg
add
xorps
inc
adc
test
orb
pop
es
loope
fwait
cltd
xchg
test
mov
insb
xor
pop
or
or
mov
sbb
mov
repnz
in
out
mov
daa
testl
add
mov
les
mov
icebp
lock
pop
std
sarl
aaa
fisubrl
sbb
jl
nop
and
add
push
push
scas
pop
repz
jnp
bound
xchg
sub
inc
pop
fdivrl
setg
adcl
clc
jne
mov
pushf
in
and
pop
nop
shrb
push
cli
mov
dec
cmc
xor
imul
outsl
add
pushf
scas
adc
pop
xchg
xor
shll
sub
or
popa
movsb
lods
and
dec
decl
pop
jne
jnp
mov
jb
or
add
add
add
add
jle
ret
repz
std
jle
loope
mov
sbb
add
pop
add
fmul
stos
inc
repz
test
lds
popa
add
pop
push
cmp
shlb
push
int3
push
ret
or
adc
mov
clc
inc
popa
outsb
loop
jmp
data16
add
in
and
adcl
outsb
xor
and
into
jp
cmpsl
pop
or
sbb
rclb
fldcw
push
lea
scas
jbe
and
cmpsl
adcl
dec
inc
std
dec
in
je
stos
mov
push
loop
cmpsb
in
enter
dec
addb
jbe
push
jmp
and
xchg
mov
and
lcall
insl
pop
inc
ret
or
sbb
mov
xor
pop
sub
out
xor
push
out
lahf
repz
push
add
sub
cmp
xor
popa
in
jmp
in
mov
jnp
ror
fwait
out
mov
lret
fsubl
test
and
leave
insb
stc
movsb
push
cmp
jge
ret
fmull
hlt
adc
add
xchg
or
lock
cs
rcrl
jae
xlat
pop
cltd
loop
aad
fstl
sbb
and
enter
and
mov
jge
and
mov
add
sti
leave
mov
sti
sub
inc
idivl
add
mov
int3
test
fists
jge
in
sbb
push
fisttps
lahf
daa
cmp
fwait
mov
pop
mov
pop
lahf
sub
pop
sbb
daa
popa
mov
cmp
jmp
int
shlb
xchg
fisubs
les
dec
adc
and
psllw
mov
fildl
loope
jbe
mov
sbb
jmp
push
inc
push
insb
add
in
mov
mov
or
imul
lahf
in
jmp
mov
or
mov
out
lock
imul
inc
sarl
xchg
ljmp
fucomip
xchg
dec
imulb
push
popf
xchg
sub
sarb
or
pop
roll
pop
cwtl
out
jle
cld
in
adc
or
jecxz
dec
xchg
jle
pop
xchg
test
sbb
dec
int3
xchg
out
inc
sti
aam
mov
int3
scas
mov
lcall
mov
mov
inc
fs
lret
lods
sbb
mov
dec
inc
ds
mov
mov
popa
pop
and
outsb
jl
jle
fnstsw
test
adc
fiaddl
test
cmp
ljmp
sub
mov
test
add
int3
cmp
stos
push
dec
testl
pushf
repnz
mov
fwait
mov
lahf
jnp
fwait
inc
hlt
jns
xlat
xor
aaa
push
lahf
adc
addr16
mov
sbb
xor
or
insl
push
pop
fnsave
roll
push
and
inc
mov
mov
push
jmp
aaa
jbe
cmc
xchg
and
mov
pushf
jb
fists
sbb
ja
add
jo
cmpsw
ja
addr16
fdiv
cmp
movsl
insl
in
movsb
adc
cmc
or
aam
call
ret
and
sbb
in
mov
shrl
mov
cmp
or
lahf
mov
gs
mov
jnp
and
mov
int
mov
insl
xor
fbstp
adc
push
xor
hlt
arpl
xor
jecxz
sub
push
pop
cwtl
fwait
sbb
jo
sbb
mov
or
sahf
push
mov
jle
mov
jne
ljmp
pop
fcom
sti
insb
or
ljmp
lods
ljmp
mov
mov
iret
loopne
mov
push
xchg
ret
mov
cmp
fiadds
add
fs
pop
dec
pop
cld
mov
jo
shlb
addb
lock
adc
ja
je
icebp
mov
push
sub
xchg
in
xchg
lahf
loopne
mov
lcall
cltd
js
out
imul
cmp
lods
push
add
mov
push
pusha
xchg
mov
fdivrs
jnp
jno
push
movsb
and
rolb
sub
daa
inc
sahf
mov
roll
adc
fisttpl
mov
pop
roll
jg
js
call
dec
out
movsl
shrb
rorb
pushf
xchg
loop
aam
pushf
in
jbe
movsl
in
repz
sbb
ja
or
dec
xor
hlt
out
sub
lods
inc
or
sub
or
imul
mov
add
mov
jp
adc
jbe
and
lods
pop
pop
inc
fldenv
xchg
jg
pop
inc
xor
or
push
xor
xlat
cmp
pop
aad
jne
mov
stos
add
pop
sbb
test
mov
dec
add
fldl
subl
mov
adc
dec
repnz
test
ljmp
icebp
sub
sbb
and
inc
mov
bound
daa
stos
cli
fnsave
and
xchg
add
lahf
cmp
xchg
cmp
lods
sbb
and
aad
mov
inc
mov
icebp
inc
add
sahf
sbb
or
mov
nop
mov
jne
adc
call
dec
inc
cmp
lahf
adc
inc
movsb
jno
out
in
add
fcoms
or
outsb
add
cmp
pop
or
sbb
mov
push
push
adc
test
sub
call
mov
gs
repnz
stos
xor
jo
push
test
xlat
adc
clc
icebp
lea
call
push
and
mov
mov
pop
push
test
sbb
hlt
movsl
fwait
lea
in
dec
sahf
pop
into
aad
mov
mov
push
add
inc
std
mov
pop
jg
adc
enter
and
out
gs
fisttpll
xchg
pop
push
mov
lahf
or
or
aaa
ret
imul
sub
fnclex
push
or
fcmovu
pusha
scas
cmp
les
negb
imul
popa
xor
imul
jle
jns
je
dec
cmp
fldcw
mov
pusha
sbb
aaa
jg
lcall
jae
loope
jge
push
xchg
push
xor
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
data16
outsb
cmp
jbe
jp
jle
add
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
add
add
add
sbb
add
add
or
cmp
cmp
cmp
cmp
cmp
cmp
and
sbb
add
les
enter
shlb
aam
fdivs
fdivl
loopne
xchg
dec
idiv
sahf
out
or
xor
mov
pop
add
inc
lret
pop
nop
pop
cmp
adcl
push
int
sbb
test
cmpsl
push
jl
jmp
ljmp
mov
mov
sti
add
cmp
xchg
les
in
mov
xchg
sbb
in
xor
fcoms
adcl
mov
movsl
inc
dec
pop
test
jbe
ljmpw
lods
sbb
jle
push
mov
enter
in
mov
test
xorb
ret
add
pop
add
push
mov
mov
xor
xchg
inc
jne,pt
fwait
and
jae
outsb
enter
cmp
outsb
and
loope
or
or
mov
popf
pop
jle
lods
cwtl
sti
negb
andnps
push
stc
pushf
and
enter
call
insb
mov
add
xchg
lret
xchg
in
cmp
inc
push
leave
mov
add
scas
sbb
lods
daa
inc
or
lcall
aas
mov
dec
mov
test
push
push
xor
xor
fs
fldcw
push
popa
pop
clc
imul
loopne
cli
sahf
andl
inc
movsb
out
mov
cmp
mov
enter
cld
inc
rcll
pop
pop
push
add
sub
cmp
jl
lret
jo
daa
jbe
cvtdq2ps
mov
push
xor
mov
fisubl
xchg
jecxz
sub
mov
mov
popa
fs
add
sub
out
add
cmp
nop
xchg
add
int3
push
push
test
repz
and
cmp
push
addl
xlat
outsb
mov
fyl2x
mov
xor
adc
aaa
cmp
push
mov
insl
or
mov
in
adc
pop
shrb
pop
cmp
std
clc
add
rorl
xchg
dec
pop
cmpl
mov
outsb
aad
addr16
loop
mov
stc
scas
test
mov
mov
mov
jb
pop
dec
mov
je
sbb
and
cmp
adc
or
lcall
pop
mov
inc
dec
test
insb
lds
ret
and
sub
or
dec
jle
jns
fdivp
pop
dec
sub
aad
jno
into
fisubrs
dec
scas
and
inc
loop
push
xor
pop
aam
sarb
jne
pop
dec
clc
pop
loope
aad
jns
jo
test
stos
adc
inc
iret
std
pusha
and
mov
leave
push
cmp
push
out
sarl
jle
dec
arpl
sahf
push
jecxz
xor
das
jle
popl
es
jno
inc
or
adc
mov
roll
lea
mov
rcll
notb
push
lahf
or
or
cmp
inc
lds
pop
xor
cmp
je
das
dec
and
push
dec
jno
sbb
pand
movsl
pop
ss
lret
sub
inc
add
int
aam
iret
mov
sarl
aad
sub
movl
inc
pop
pop
xchg
pop
sbb
inc
cmp
mov
fwait
out
inc
mov
xchg
test
inc
or
sbb
es
mov
xchg
xchg
mov
loopne
js
sahf
jmp
push
jne
adc
add
sbb
out
andl
xchg
out
out
sbb
pop
sub
mov
push
nop
ds
std
push
fs
ficoml
sub
inc
xor
in
fcoms
movhps
xchg
or
mov
mov
pop
and
dec
jecxz
adc
cmp
and
nop
sub
aam
push
lcall
ljmp
jb
repz
lahf
inc
dec
int3
jecxz
jg
sub
test
sbb
push
sti
and
push
iret
jns
cld
data16
imul
dec
xor
adc
xchg
mov
or
js
lds
cli
cmp
movsl
cmp
stos
pop
sbb
mov
inc
pop
or
xchg
push
fdiv
outsl
push
setp
push
nop
int
dec
add
sub
insl
mov
jno
push
fbld
push
adc
xor
xor
pop
mov
sub
jg
pop
sub
cmpsw
adc
cmp
fildl
sbb
iret
sbbl
cwtl
push
or
iret
roll
sti
sbb
mov
adc
outsl
orb
movsl
divb
hlt
push
dec
pop
mov
sub
push
mov
fildl
xchg
add
inc
cltd
xor
and
scas
aad
dec
mov
leave
sar
mov
or
xchg
jp
push
xlat
cld
and
jne
or
fcomp
mov
cld
mov
aas
or
push
es
lahf
nop
lcall
das
or
dec
adc
popf
mov
xorb
scas
jmp
and
test
jmp
mov
add
inc
xor
fdivs
and
xchg
faddl
ljmp
in
scas
adc
loop
cld
fld
mov
push
fld
inc
dec
mov
mov
adc
cltd
data16
and
add
clc
dec
mov
int
adc
pop
xchg
aas
mov
sbb
mov
xor
lds
fisubrs
lea
xor
fmul
xchg
int3
pusha
or
sahf
adc
xchg
inc
cmp
mov
push
int
pop
cmc
pop
scas
sub
sub
sub
add
xlat
rclb
sbb
aaa
nop
jp
mov
xchg
jbe
push
ret
or
iret
rcrl
clc
les
push
add
mov
sub
push
sub
and
mov
jo
outsl
xlat
ss
addr16
or
dec
aad
flds
out
fs
mov
data16
xchg
out
ret
mov
inc
sub
sti
lcall
mov
xor
adc
test
rol
fisttpll
loop
cwtl
call
mov
and
bound
je
sbb
lret
mov
dec
je
mov
xor
iret
cmp
mov
cltd
inc
jl
xor
movsb
jmp
test
xchg
jp
aaa
cmpsb
out
aam
inc
xor
in
fcoml
jecxz
jbe
jle
iret
popf
cmp
ret
stc
jl
fiaddl
inc
mov
sbb
lods
dec
ljmp
call
idiv
ficoms
inc
and
movsl
pusha
out
outsl
add
and
add
or
pop
inc
jecxz
sbb
inc
out
ss
scas
push
jle
add
gs
or
push
gs
cs
push
pusha
fisubs
mov
mov
add
test
xchg
inc
nop
shlb
mov
mov
cmpsl
lret
fcoml
jb
adc
mov
rcr
add
cmp
mov
or
out
sub
in
adc
jne
insb
rorb
adcl
push
mov
dec
lret
xchg
push
bndstx
gs
cltd
xchg
aas
pop
cld
sbbb
sub
xor
insl
dec
out
mov
jno
adc
std
in
mov
out
idivl
fistl
lcall
adc
jmp
fistps
push
in
test
or
fs
pushf
mov
int3
mov
jo
movsb
push
mov
mov
out
std
movsl
ljmp
push
pop
leave
dec
in
out
ljmp
inc
cmpl
scas
pusha
nop
mov
pop
lods
xchg
hlt
xchg
arpl
add
lcall
les
popf
std
imul
mov
and
test
lds
cmp
xor
outsl
cmp
int
jb
jae
cmp
jl
sti
mov
dec
sub
je
fildll
mov
in
sub
mov
mov
sub
mov
add
das
sbb
ret
jle
dec
js
cs
out
push
int
adc
decl
push
stos
sub
stc
lods
fcom
inc
out
push
sbb
dec
push
cmp
push
xchg
push
ficompl
repnz
inc
jl
inc
push
test
incl
out
dec
mov
cmp
cmp
bound
inc
mov
adc
jae
test
pusha
or
push
xchg
aas
mov
mov
mov
pop
or
in
sub
push
in
rol
jb
sbb
and
push
adc
xchg
add
or
jbe
aaa
mov
sub
imul
pusha
gs
jmp
sti
xchg
icebp
es
xchg
sub
out
sbb
mull
repz
mov
dec
push
aaa
pushl
push
push
mov
stc
jb
imulb
andl
scas
sbb
loopne
add
xchg
andl
sub
sub
or
jns
mov
mov
inc
mov
imul
pop
rol
sbb
xor
cli
jp
pop
mov
stos
xor
out
xor
gs
insb
adc
pusha
stos
enter
sahf
gs
lods
xchg
push
lcall
stos
insb
das
adc
loop
adc
mov
inc
outsb
cmpsl
packsswb
les
jmp
and
shl
push
je
sar
aas
scas
js
xor
test
cmpsb
add
test
adc
stos
fdivrp
insb
xor
aad
js
lods
mov
scas
xor
out
aad
jne
and
call
sbb
sbb
or
push
inc
push
sarb
lcall
inc
scas
clc
push
insb
or
leave
cs
xor
dec
push
add
hlt
int
lcall
faddl
aaa
push
or
inc
out
fwait
scas
inc
out
cmp
adc
pop
ds
and
mov
sbb
out
shrb
mov
xchg
lods
xor
loop
push
dec
xchg
inc
jb
jge
subb
pop
mov
ret
ds
push
sub
push
mov
idiv
aas
movsb
cmc
sbb
sbbl
test
jge
adc
repnz
cmpl
scas
pop
int3
xchg
jge
xor
fwait
arpl
pushf
clc
es
xor
adc
push
push
std
or
inc
movsb
dec
movsl
pop
cld
leave
add
imull
pop
in
fdivrl
sbb
pop
pop
nop
rorl
sub
push
les
inc
rorl
cwtl
jo
dec
sub
xor
adc
ret
notb
pop
insl
mov
inc
and
sbb
jmp
xor
in
dec
push
xchg
ljmp
sbb
or
pop
push
inc
lret
mov
jmp
jnp
jnp
mov
loopne
mov
jp
mov
shll
jmp
xchg
ret
mov
sub
add
mov
sub
out
int3
cmpsb
push
push
hlt
xchg
pushf
pop
xchg
inc
push
das
ljmp
stos
shrl
push
fcompl
or
add
sbb
and
inc
shl
xchg
sbb
add
or
mov
mov
cmp
in
cmp
outsl
fstpt
add
ret
pop
int3
insl
ret
aad
sub
mov
fsub
jmp
adc
lock
aad
std
das
mov
mov
insb
jg
xchg
or
movl
aaa
dec
or
icebp
out
nop
hlt
mov
inc
mov
adc
ja
mov
push
push
xor
pop
rcl
pop
pop
popf
out
add
das
add
ja
dec
jb
and
push
jbe
dec
pop
aam
dec
addr16
inc
idivb
cwtl
mov
push
mov
loop
inc
xchg
sub
cli
repz
sbb
inc
mov
xchg
push
ret
cmp
push
lahf
insb
sbb
out
call
je
testl
fstpl
xchg
shrl
sub
pop
or
push
adcl
push
aaa
mov
fs
xlat
fisubrl
and
stc
mov
in
push
dec
pop
mov
push
dec
sub
ja
jl
xchg
out
adc
push
stc
sbb
bound
mov
or
sub
je
xor
push
std
jo
sbb
dec
mov
jbe
das
push
mov
dec
adc
push
jne
inc
push
mov
aad
xchg
xchg
push
arpl
mov
nop
push
ja
xor
jnp
pop
cmp
je
mov
and
and
dec
jne
outsb
fwait
iret
fidivl
and
mov
cmpsl
pop
pop
test
push
sbbb
call
mov
sbb
mov
pop
ret
cmp
movl
int3
flds
pop
mov
push
jb
mov
dec
rcrb
sbb
xchg
lods
stc
mov
pop
pushf
das
enter
sahf
or
clc
cltd
in
inc
mov
daa
and
mov
pusha
es
shl
jbe
add
pop
add
or
lcall
xchg
adc
cli
add
aas
pop
repnz
adc
daa
jb
aam
mov
aas
dec
sub
xor
and
test
insl
jae
xchg
push
inc
fwait
jns
movsb
mov
mov
cs
push
xor
jecxz
lods
xchg
or
push
cli
pop
mov
mov
mov
bswap
out
fsubl
cs
fstpl
imull
movsl
lods
add
sbb
or
xchg
pop
push
jecxz
mov
push
mov
pop
xchg
jge
mov
mov
dec
popa
cmpsb
pushl
inc
jle
nop
std
rcrb
sub
loope
mov
xorb
das
out
cltd
push
lock
mov
cwtl
push
cltd
push
mov
push
mov
xor
add
out
jno
inc
cmp
jnp
mov
mov
xor
clc
mov
insb
cpuid
nop
sbbb
jns
dec
scas
rcl
sub
test
cmp
je
mov
cmpsb
rcll
jp
jb
imull
hlt
in
xchg
fmull
nop
mov
inc
dec
jg
sbb
js
mov
pushf
push
push
push
jae
out
das
or
xchg
sbb
ljmp
push
iret
jo
mov
inc
and
mov
mov
mulb
stos
xor
inc
popa
mov
insl
pop
fwait
call
movsb
jge
push
sbb
je
mov
data16
clc
jg
push
mov
dec
lds
inc
cmp
mov
dec
cmc
dec
fnstsw
dec
cwtl
jg
jb
nop
pop
add
scas
insb
sbb
in
pop
jns
insb
lods
cmpl
mov
jo
lods
dec
push
movb
mov
sarb
lret
sbb
jmp
or
vpsubsw
sub
movl
js
aas
ds
out
aas
pop
push
jb
cmpsb
push
dec
add
cmp
push
mov
push
mov
ret
cmpsl
in
xor
inc
loopne
pop
cmp
adc
lahf
inc
mov
std
fidivrl
push
int
roll
jae
dec
rcrb
push
cmc
mov
xchg
cmpsb
popf
btc
les
mov
mov
dec
addr16
or
mov
fnstsw
in
adc
sbb
inc
pop
fnsave
clc
and
lret
adc
in
shr
gs
insb
loope
test
lcall
cwtl
xchg
inc
jo
push
xor
mov
pusha
shrl
inc
lahf
push
sbb
dec
or
fwait
push
xor
js
sub
insb
inc
adc
sbb
outsl
inc
fwait
outsl
fsubs
sbb
sbb
push
jge
jmp
dec
loopew
lods
imull
jg
mov
cmc
fs
mov
je
mov
cltd
pop
test
jo
ret
dec
sub
out
mov
imul
xchg
or
mov
dec
int
add
sbb
popw
adc
or
pushf
leave
icebp
jecxz
sub
push
insb
repnz
push
test
inc
in
sub
jp
xchg
outsb
mov
mov
inc
mov
fwait
inc
jl
cld
sub
xchg
cmp
dec
pushf
and
cmpsb
mov
inc
xor
fidivs
add
push
mov
sub
jle
je
jno
mov
inc
adc
mov
stos
lods
iret
std
fs
sti
loope
xchg
ds
xchg
inc
push
iret
repz
in
shrl
std
mov
cmp
fidivs
out
je
push
and
pcmpeqb
inc
outsb
cld
addb
or
lods
js
dec
dec
icebp
push
lods
js
and
dec
cwtl
fcmovbe
insl
and
nop
outsb
push
ss
out
xlat
ret
pushl
add
mov
fcmovbe
out
clc
sbb
sar
or
outsb
jmpw
jnp
stc
imul
pop
out
mov
lock
mov
pop
pop
jno
mov
xchg
fists
and
pop
jge
pop
push
stc
mov
cli
pop
lret
stos
inc
sub
adc
cmp
inc
pop
dec
and
daa
or
mov
mov
sub
popa
leave
test
pop
dec
add
nop
gs
xor
ds
push
mov
push
cmp
inc
push
jne
mov
loope
imul
outsb
jb
jp
add
adc
cmp
jmp
andb
ds
adc
ret
add
mov
pusha
add
mov
rorb
mov
nop
and
enter
mov
fwait
mov
xlat
dec
aad
cmp
xchg
mov
xlat
popa
xor
xchg
cmpsl
or
sahf
shrb
cmovle
sbb
fists
mov
lret
push
je
rclb
aad
add
and
pop
andl
cmc
repz
out
mov
mov
rolb
mov
jecxz
bound
or
mov
iret
mov
cmp
jns
insl
into
filds
enter
pop
gs
ror
cmp
outsb
fidivl
xchg
mov
push
mov
or
and
inc
mov
cmp
lcall
dec
mov
dec
inc
mov
push
add
cmp
add
js
mov
and
mov
movsl
stc
je
jbe
ds
outsl
pop
popf
test
jno
das
pop
int
sbb
cltd
jbe
xor
cwtl
inc
mov
jae
push
push
in
leave
out
pop
sahf
sahf
mov
daa
or
sbb
cmp
cmp
adc
cmc
dec
sub
sub
sahf
jp
mov
cmp
mov
inc
clc
fwait
loope
cld
incb
xchg
mov
ret
shrb
les
mov
inc
cltd
and
ds
add
sub
xchg
cmp
cmp
repnz
loop
sub
and
ret
movsb
js
out
outsl
pop
sub
in
xchg
cltd
cmp
clc
xchg
ret
lods
push
aam
loop
mov
and
cmp
sbb
ja
cmp
xlat
mov
pop
adc
pop
into
jno
test
push
inc
into
hlt
push
inc
xor
jbe
or
insb
lds
rorb
les
repnz
sbb
add
add
jecxz
mov
test
insb
out
pop
inc
and
ss
jle
dec
lock
lods
aaa
or
add
ds
dec
xchg
filds
xchg
ja
mov
mov
xlat
or
in
outsb
mov
mov
cmp
mov
fstps
subl
pop
rcrb
add
add
add
popa
push
pop
jmp
jle
js
aam
or
add
pop
add
ss
lods
cltd
xchg
mov
test
lahf
out
mov
push
push
and
fstpt
mov
add
imul
push
sub
fsubrp
ret
enter
push
or
fnstsw
push
pop
bound
cwtl
imul
hlt
push
jge
mov
in
push
int
fdivrs
out
jecxz
adc
sub
movsb
adc
pusha
adc
sub
out
scas
adcb
enter
mov
int3
ret
mov
repz
and
jno
cmp
jle
sbb
or
or
pop
repnz
sub
push
mov
mov
sub
push
scas
xor
mov
lahf
inc
mov
adc
sbb
mov
in
sub
xor
std
mov
push
add
in
scas
lods
pop
or
pop
lret
mov
inc
fs
pop
xor
je
jne
inc
movb
std
out
xchg
push
mov
mov
adc
es
add
loopne
cltd
jnp
cmp
or
nop
cld
cmp
in
outsb
out
out
loope
pop
xor
xor
iret
sahf
cmp
cmp
inc
and
and
xor
and
enter
and
shrb
das
cmc
xchg
stc
lret
cmpb
cmp
mov
aaa
pop
sub
int3
mov
ret
and
and
cwtl
mov
jge
clc
sub
cmpsl
inc
jecxz
dec
ss
js
and
mov
les
popa
mov
mov
inc
subl
hlt
bound
aas
mov
addl
test
mov
lahf
push
pop
push
in
out
xchg
adc
hlt
push
add
test
outsb
push
rorb
xchg
lahf
test
subl
push
cmpsl
and
movsb
hlt
cmp
cwtl
lcall
cs
popf
arpl
xchg
or
jle
sub
loope
lds
cmpsb
insl
mov
jecxz
call
mov
cmpsl
in
xor
add
pop
xor
pop
lret
mov
sub
out
sub
fs
add
add
add
pusha
mov
cmpsb
cmp
mov
repz
pop
cmpsb
arpl
mov
xchg
dec
xorb
add
adc
mov
jecxz
or
out
push
or
int3
adc
jns
lock
jnp
adc
xchg
sbb
jne
lock
hlt
inc
sbb
cmc
and
test
outsb
cmp
stc
lret
scas
mov
jnp
jle
sbb
fldcw
jbe
dec
lds
dec
sbb
notb
lret
jmp
mov
lods
add
pusha
xchg
flds
dec
pop
push
out
ljmp
add
stc
popa
into
xor
movl
das
dec
sbb
imul
out
xchg
rcrb
pop
xchg
adc
int
xor
sbb
jbe
dec
mov
xor
dec
dec
mov
in
cli
inc
jo
jmp
loope
inc
and
xor
add
jle
loope
xlat
xchg
add
or
loop
cwtl
sub
jge
clc
sbb
test
popf
icebp
adc
sub
push
and
stos
out
sub
inc
mov
mov
ljmp
push
jl
out
xchg
sbb
lods
clc
pop
or
add
ret
ja
test
xchg
aas
adc
adc
sbb
lds
jbe
xor
sbb
pop
push
or
push
sbb
mov
push
push
add
xor
dec
inc
pop
sbb
adc
mov
sub
lret
decb
mov
fwait
dec
scas
add
stc
sub
xchg
out
mov
in
fdiv
cmp
or
into
mov
aad
addr16
push
inc
insl
popf
and
ja
outsb
and
das
outsb
mov
mov
cmp
scas
dec
push
sbb
and
mov
xor
dec
fldt
push
fadds
outsb
dec
mov
stos
lret
inc
push
pop
xor
ss
dec
jae
ljmp
adc
mov
out
mov
repz
repnz
lret
out
sbb
inc
stos
shrl
je
sti
mov
dec
jg
add
hlt
sarb
cmp
jecxz
dec
stos
in
or
out
icebp
jne
or
xchg
mov
mov
mov
ds
push
sti
mov
daa
outsl
sbb
mov
and
mov
pop
mov
mov
addr16
fpatan
or
test
add
jo
jmp
cmpsl
aaa
push
rolb
adc
cmpsb
std
and
stos
iret
ljmp
mov
outsl
mov
xchg
stos
out
sub
push
lcall
push
js
push
or
in
inc
testb
sbb
cltd
lret
or
sbb
int
mov
add
pop
adc
stos
aam
aad
fs
and
addr16
sbb
les
dec
sti
cwtl
sub
xchg
loop
clc
cmp
bound
mov
xchg
push
pushf
mov
loope
xor
xchg
mov
sahf
dec
inc
add
dec
mov
leave
jmp
pop
adc
push
xorb
add
or
ds
pop
outsl
pushl
fnsave
sub
cmp
test
clc
imul
push
jl
movsl
mov
pop
dec
fwait
out
mov
test
fstpl
leave
add
pushf
fldt
mov
mov
sbb
loopne
fs
test
imul
push
mov
mov
mov
dec
inc
mov
xor
jl
outsl
or
cmp
xlat
mov
test
stc
in
test
push
loope
xor
lods
sub
sbb
mov
stc
push
push
in
mov
sub
mov
mov
cmpsl
fiadds
xor
dec
int
pusha
arpl
xor
push
and
in
and
in
icebp
or
pop
cltd
mov
mov
pop
inc
fildl
jnp
push
dec
mov
pop
xor
and
sbb
jg
jecxz
and
mov
add
sub
cltd
test
push
es
daa
sbb
sub
cmp
sub
mov
sarb
push
loope
and
sbb
cwtl
adc
ret
inc
incb
push
jecxz
arpl
test
add
pop
add
sub
push
int3
jnp
int
xchg
lret
mov
insb
adc
cmc
jle
mov
sbb
dec
daa
cltd
cmp
xchg
int
sbb
adc
or
push
ret
jns
jecxz
add
rcrb
sub
mov
and
dec
jns
mov
test
push
jmp
mov
enter
mov
ja
insb
or
std
and
insb
outsl
call
jl
dec
jecxz
push
call
add
dec
mulb
pop
or
ret
jmp
repnz
mov
xchg
xor
jne
sbb
and
call
jo
orl
aad
inc
xor
loopne
loope
ja
cmp
scas
jno
dec
or
outsb
jl
roll
int
pop
iret
or
int
shlb
ss
enter
xor
xchg
test
add
adc
push
push
pop
jae
mov
add
dec
mov
dec
xchg
test
pop
gs
cmp
int
pop
push
inc
sbb
pushl
jmp
cmpl
push
popf
mov
adc
adc
mov
int3
mov
popa
mov
outsb
dec
lret
xor
add
add
mov
sbb
push
and
call
sub
insb
int
jns
adc
add
rcrb
add
daa
lahf
xor
lods
mov
outsb
cltd
xorb
pop
sbb
adc
xchg
or
mov
mov
fmul
and
sub
out
xor
js
aad
sbb
lcall
sub
lock
es
cwtl
jp
rolb
gs
pop
mov
jae
adc
cmp
lret
mov
ret
push
in
gs
pop
mov
adc
ss
sbb
cld
and
xchg
divl
aam
fs
jge
inc
inc
out
inc
jmp
ja
xor
xchg
repnz
push
call
cmpsl
xchg
xchg
aas
add
ret
or
outsb
icebp
sti
mov
daa
es
fisttpl
js
sub
inc
or
xor
mov
xchg
mov
and
movsb
jae
pop
xlat
addb
cltd
pusha
jnp
xchg
lcall
pop
dec
dec
mov
jecxz
push
cmpl
xchg
pop
or
push
aas
pop
mov
aaa
fwait
mov
es
insl
push
dec
incb
out
add
imul
sub
inc
cmp
sahf
mov
pop
repz
xchg
push
cmp
mov
mov
lret
iret
jne
mov
mov
jp
lods
jp
loop
js
test
or
inc
add
mov
jae
xchg
pop
cltd
jle
jecxz
scas
fbld
loope
jl
sub
lods
mov
ljmp
mul
dec
cmp
fwait
subl
ret
pop
inc
pop
dec
iret
sahf
in
insb
mov
cwtl
movsl
shrb
xchg
or
and
sbb
add
mov
cmp
inc
pop
inc
add
and
scas
fsubs
sub
stos
inc
and
jmp
les
mov
mov
inc
cmp
cltd
sti
cs
pusha
dec
xlat
fstl
sahf
mov
mov
imul
aas
dec
sbbl
adc
cmp
pop
outsb
sbb
xchg
in
pop
or
jle
cwtl
cli
loopne
sbb
lods
pop
jb
adc
sub
mov
dec
cli
cmp
push
and
fbstp
add
sub
and
jbe
std
jbe
shll
jp
sub
mov
pushf
xchg
xor
outsl
push
mov
cmc
orb
or
add
or
std
mov
nop
dec
daa
pop
aaa
sub
int3
xor
idiv
insb
inc
shrb
push
clc
pop
fsubl
repz
in
adcl
cltd
movsl
and
test
mov
inc
je
jbe
pop
sub
movsl
lea
xor
scas
sbb
rcrb
movsl
or
xchg
test
popf
pop
aaa
jnp
lds
mov
smsw
cmp
cmc
inc
pop
movsb
push
arpl
aaa
addr16
mov
or
mov
pop
imul
iret
out
xor
stos
daa
mov
push
xor
add
pop
fnstenv
xchg
nop
jge
out
inc
dec
icebp
mov
push
and
cmp
in
and
fnstsw
sbb
push
test
jo
stos
pop
and
cmp
and
pop
rol
mov
aam
jecxz
out
push
in
or
xor
and
adc
mov
adcl
jl
imul
scas
gs
xchg
dec
xchg
jno
push
popf
in
dec
pop
out
push
loop
cld
and
xor
add
push
in
inc
xor
mov
cmp
adc
lahf
je
addr16
jb
mov
cmpsb
out
pop
jecxz
adc
push
insl
add
lret
dec
pop
mov
arpl
sbb
mov
aaa
rcrb
push
xchg
jle
ret
mov
inc
mov
shrb
movsb
push
dec
test
lcall
cltd
pusha
int
fnstcw
xchg
xor
dec
inc
stos
and
sub
sti
fstl
jge
movsb
add
push
inc
mov
mov
mov
out
and
orl
insb
push
add
adc
fistpll
inc
jp
pop
xor
jp
outsb
xchg
xchg
cmp
imul
les
mov
inc
jle
arpl
lahf
jecxz
cmp
daa
sbb
fs
inc
ret
rclb
lods
addl
push
lahf
sub
adc
sub
nop
ret
cmp
fcomps
pop
movsb
test
repz
iret
test
dec
pop
mov
lods
push
hlt
sub
adc
pop
jno
add
dec
call
movsl
ret
xor
pop
cltd
cmp
lock
std
cmc
enter
into
popa
inc
push
loopne
mov
xchg
fcmovb
push
les
int
cmp
out
pop
into
jnp
cmp
jl
rcrl
mov
inc
cs
adc
test
add
aam
out
sub
push
movsl
push
sub
pop
movsl
loopne
loope
sbb
jmp
xchg
loopne,pn
mov
adc
inc
mov
pop
out
pushf
dec
loopne
repz
add
add
add
add
aas
pop
push
jb
stc
call
mov
add
pop
add
lods
inc
xchg
push
mov
inc
jns
adc
dec
push
mov
int
jae
mov
out
adc
pop
push
jo
xchg
aam
push
nop
pusha
mov
sbb
mov
xchg
push
and
inc
jo
dec
or
aaa
inc
call
iret
mov
fimuls
test
sbb
xchg
iret
and
shlb
int3
cmpsb
test
inc
mov
xchg
in
sub
mov
ss
sbb
rorl
lods
ficompl
rol
pushf
pop
xor
dec
addl
scas
aaa
mov
mov
add
fsubl
xchg
sbb
shrl
mov
leave
mov
inc
xor
xchg
jbe
lret
sub
sbbl
jb
xchg
je
push
and
out
mov
jbe
push
arpl
int
je
cmp
rcll
negb
icebp
cmpsb
arpl
int3
das
aaa
mov
call
mov
mov
pop
xchg
dec
movsl
xor
xlat
aad
iret
sbb
push
jge
adc
sahf
mov
leave
cmp
popf
pop
xlat
and
out
and
ss
and
fimuls
mov
out
inc
jne
and
mov
or
jmp
push
xor
sahf
add
hlt
push
push
iret
sti
negb
sub
mov
cmp
lcall
inc
push
adc
add
movsb
rcl
aad
jb
cwtl
mov
xor
and
or
pushf
cmpsl
std
out
sbb
aas
in
jno
fldt
arpl
push
pop
pop
lahf
fldl
jmp
inc
adc
stos
aaa
jg
mov
insl
and
orl
xor
cmp
xchg
cwtl
adc
mov
cld
cmp
mov
pop
jae
pop
fwait
jo
adc
inc
mov
and
lahf
dec
cltd
dec
stos
push
xchg
xchg
push
inc
fsts
push
xchg
and
lea
movsb
movsl
sub
scas
lock
decl
and
lcall
icebp
icebp
out
adc
out
es
mov
cmp
cmc
add
mov
add
xchg
add
mov
cld
xor
add
ret
mov
xlat
enter
aam
aad
int3
je
jg
sbb
mov
xchg
cltd
pop
int
xor
imul
inc
sbb
push
pop
stc
stc
pop
gs
or
sub
pushf
xor
imul
lods
fwait
lds
or
cmc
in
sti
xor
or
roll
loope
sarl
test
aas
stos
or
jnp
add
push
into
and
leave
enter
jecxz
mov
shl
mov
imul
mov
xchg
lahf
lret
cmp
fucom
push
jmp
xlat
adc
aaa
pop
push
xor
mov
inc
rclb
stc
movsl
dec
inc
inc
and
cltd
xor
lock
jo
jae
cs
fwait
iret
mov
into
iret
inc
jnp
aam
sbb
pop
cmp
xchg
jo
dec
mov
mov
pop
adc
jne
cwtl
lock
out
jmp
call
outsb
sub
mov
incl
and
inc
pop
cli
daa
cmp
adc
lods
jle
or
push
fisttpl
or
cltd
sbb
mov
negl
int
push
lods
sbb
inc
jg
xchg
inc
test
sub
cltd
mov
dec
into
adc
test
iret
lret
mov
mov
leave
mov
pusha
cmpsl
pop
push
leave
dec
insl
cmc
xchg
and
inc
pop
in
xchg
hlt
inc
and
mov
adc
push
test
pop
sbb
mov
aad
cmpsl
mov
aas
pop
scas
xchg
jb
jne
mov
test
mov
sbbl
fdiv
repz
push
mov
push
sbb
adc
movsb
pop
mov
mov
mov
or
sbb
pop
repnz
aad
jbe
mov
faddl
rcr
jnp
faddl
aad
test
mov
jl
loop,pt
divb
add
comiss
les
lods
nop
sbb
sbb
es
int3
mov
pop
xor
aam
lret
roll
ret
scas
mov
mov
xchg
stos
fsubrp
xchg
mov
xor
shr
cmp
out
xchg
fisttpl
mov
stc
call
int3
or
add
sbb
popf
and
push
cmp
mov
xchg
and
out
mov
shrb
jmp
lods
push
mov
cli
negb
shl
or
xor
push
lcall
call
adc
imul
aaa
shrl
xchg
jmp
rorb
out
jge
push
mov
mov
jne
idiv
mov
mov
sub
sub
add
ret
pop
or
lods
out
stos
mov
into
dec
sbb
mov
ds
lret
mul
jbe
xor
hlt
testb
cmp
adc
aaa
aaa
ds
push
mov
gs
popa
hlt
pop
repz
rdpmc
aam
fwait
xchg
cwtl
inc
push
popw
adcb
ret
jmp
sbb
lcall
and
movsb
dec
inc
adc
fildll
mov
ja
inc
mov
push
adcb
inc
sub
cmpsl
orl
pusha
ss
ret
fimull
inc
and
fisubl
jecxz
scas
addr16
lret
aam
fiaddl
movsl
stos
pop
push
cmpsb
pushf
aas
arpl
pushf
std
fildll
jmp
cmp
out
mov
cmpsl
mov
xchg
push
pushf
xor
inc
ja
mov
lea
or
sub
outsb
repnz
ret
in
int3
jle
pushw
sub
and
pop
imul
xor
ret
pop
inc
xor
stc
or
xchg
inc
pop
push
pusha
dec
lds
inc
or
xor
push
out
movsb
xor
sbb
add
test
movsl
dec
cltd
push
sti
fdivrp
cmpl
xor
repnz
std
fcmovb
and
mov
aad
jbe
incl
cmp
daa
xchg
cwtl
subb
pop
and
mov
add
add
add
add
lea
into
out
popf
adc
stos
pop
jnp
add
and
add
cwtl
pop
lret
adc
cmp
push
mov
pop
push
lahf
test
lods
fwait
cmp
mov
and
jg
jne
adc
fsubr
add
enter
loope
stos
cmpsl
gs
mov
scas
mov
push
stos
bound
dec
pop
cmp
shrb
sbb
jl
add
jae
lods
les
inc
cmpsb
rolb
cmp
outsb
pushf
cld
adc
js
push
aaa
pop
les
mov
daa
push
dec
xchg
shll
scas
test
mov
sbb
jns
imul
int
adc
stos
sti
frstor
shlb
xchg
mov
jnp
push
adc
imulb
xor
jle
mov
dec
fnstsw
mov
das
and
push
lods
in
out
ss
mov
adc
mov
push
adc
rorl
jno
jge
xchg
hlt
pop
mov
faddl
enter
loop
outsl
adc
mov
inc
cmp
scas
jnp
dec
std
xor
or
sub
pop
and
push
ja
xchg
nop
push
sti
addl
lods
sub
jno
push
aaa
xchg
add
incl
fistl
mov
je
hlt
pop
push
pushf
lods
lret
xor
add
mov
insl
cmpsb
xor
mov
test
mov
mov
dec
pop
cmp
adc
lret
or
in
cli
ljmpw
into
mov
lods
dec
sbb
add
pop
call
es
add
push
adcl
cltd
in
sub
dec
in
or
aam
repnz
mov
cwtl
aad
arpl
fwait
jl
mov
dec
pop
pop
sub
xchg
jnp
sbb
lea
aam
hlt
pop
outsb
mov
shl
mov
movsl
mov
idivl
mov
clc
inc
cmc
stc
out
xchg
enter
stc
pop
and
xchg
fidivrl
xor
xchg
and
movsl
in
xor
xor
add
test
and
fisttps
sahf
mov
push
and
out
push
cwtl
fidivrl
mov
inc
test
pushf
out
xor
in
or
std
imul
lcall
daa
lds
push
jbe
inc
xchg
outsb
arpl
aaa
pushf
sub
xor
lahf
enter
dec
loop
loop
pop
dec
adc
cs
outsl
mov
sub
mov
jb
inc
in
xor
idiv
nop
shl
stos
and
nop
and
in
cld
insb
popa
stc
mov
mov
sti
flds
mov
xchg
xchg
mov
jecxz
ret
outsb
mov
movsl
xlat
jge
mov
jbe
inc
sbb
fildll
imulb
std
frstor
call
mov
dec
mov
push
out
cmp
lret
mov
imulb
or
pop
das
pop
in
mulb
jge
fdivs
inc
cltd
daa
ret
fs
repz
mov
jp
cmp
mov
push
mov
push
cmp
inc
std
cmp
xchg
sbb
mov
adc
call
mov
mov
loop
xchg
sub
sarl
sub
cmp
mov
push
iret
aad
sbb
rorb
fsub
leave
inc
and
int
cmp
push
cld
jle
stos
js
cmp
sub
in
xor
xor
cmpsb
loope
xchg
bound
jne
loope
imul
out
movl
mov
mov
pop
lret
fnsave
cli
cmp
adc
daa
aas
mov
sbb
dec
mov
push
test
popf
sti
and
mov
fnsave
or
insl
xchg
cmpsl
sbb
bextr
mov
or
ds
fwait
mov
push
hlt
adc
pop
cs
push
adc
jb
fiaddl
mov
mov
mov
imull
or
push
fildll
mov
push
or
mov
sub
jg
js
pop
dec
mov
mov
ja
push
add
mov
inc
clc
cmp
call
ja
cmpsl
xchg
fildl
or
cmc
jae
test
sti
es
test
shll
mov
cmp
mov
xor
ror
ret
xor
xor
imul
decl
push
and
cmp
outsb
test
sbb
mov
cmp
subb
das
push
cmp
int
push
mov
rorb
mov
movsb
add
and
adc
stos
xor
jne
sub
adc
push
jae
inc
inc
adc
cmp
mov
mov
repz
shll
adc
jg
in
xor
sbb
loop
imul
rcl
fiaddl
mov
in
es
or
testb
sub
mull
push
jg
mov
and
arpl
das
divb
pop
xchg
jo
cmp
xchg
xchg
mov
test
inc
gs
lea
or
xchg
ljmp
pop
push
sbb
cli
xchg
mov
lds
icebp
push
fwait
xchg
jmp
test
and
push
or
mov
and
mov
ror
push
sbb
orl
test
iret
sub
sbb
adc
lods
add
gs
xlat
fdivr
lock
mov
sbb
test
and
push
or
dec
fisttpl
cli
mov
push
ret
push
xchg
push
fwait
mov
add
dec
mov
sti
out
lcall
dec
xchg
ret
inc
adc
stc
xchg
mov
aam
roll
iret
lods
mov
lahf
mov
pop
aaa
cmpsl
mov
mov
filds
dec
add
adc
add
and
mov
mov
jae
jmp
inc
fwait
jl
imul
js
sahf
adc
xlat
sub
jnp
xor
push
mov
aas
cmc
pop
out
test
cmpl
xchg
leave
fstps
imul
stos
fisubrs
loope
loop
push
xor
loopne
aam
push
jge
jnp
imul
sub
data16
fldl2e
inc
cmp
test
xlat
iret
push
mov
in
arpl
cmc
pushf
outsb
mov
add
mov
dec
ret
sbb
pop
leave
sbb
lret
insb
jecxz
sub
rclb
and
xor
out
bound
jl
xor
pusha
addr16
xchg
cmpsb
rolb
xchg
dec
jnp
sti
mov
ds
ret
push
dec
fwait
lcall
push
fisubs
nop
ljmp
inc
notl
dec
jp
mov
mov
pop
test
dec
cmp
leave
repz
sarb
adc
mov
xor
stc
es
lods
dec
sbb
dec
xor
xor
jp
or
gs
bound
mov
add
pop
cwtl
pop
inc
push
jnp
adc
jg
inc
fidivrl
fnstsw
cmp
lahf
mov
sub
ja
jno
fcompl
and
cmpsb
xchg
mov
jbe
mov
xor
or
nop
je
icebp
sti
shll
ljmp
mov
int
out
and
xchg
loopne
sbb
add
fsubrl
sbb
inc
std
mov
popa
out
cmp
jo
roll
push
fldt
push
out
fwait
push
sbbb
gs
dec
jecxz
in
outsw
std
pop
adc
lret
shrb
pop
aas
sahf
xchg
push
les
mov
jecxz
jecxz
push
pcmpeqb
xchg
jg
ret
push
cmpsb
xor
cld
jl
or
xor
pop
stos
cld
jle
sbb
in
int
push
incb
pop
xor
lds
dec
jae
movsb
sti
add
adc
xchg
lock
push
shll
mov
icebp
outsl
js
pop
pop
xchg
ds
xchg
xchg
ljmp
divb
push
mov
ljmp
add
add
hlt
cld
mov
mov
fdivl
and
xor
push
xchg
ds
sub
imul
loop
imul
aad
imull
ret
sbb
int3
and
pushf
mov
or
sub
movd
std
adc
mov
inc
out
jg
fisubrl
mov
mov
mov
push
pop
adc
xchg
int
movsb
fadd
inc
pop
out
mov
lods
repnz
jp
btc
fdecstp
stos
daa
and
sub
mov
rcrb
lods
je
ljmp
out
stc
rcrl
mov
adcb
jo
das
mov
mov
xor
cmp
bound
bound
out
sbb
je
das
inc
ret
lock
xchg
mov
aas
and
pusha
lock
cli
aam
lods
mov
decb
leave
cmp
push
cmpb
hlt
mov
idiv
inc
dec
in
jg
sarl
lcall
add
sbb
out
scas
add
cltd
push
jnp
dec
cs
push
xchg
in
lcall
mov
movsl
adc
adc
cs
fwait
sbb
push
inc
aas
int3
adc
add
repnz
divl
out
add
jmp
pop
call
and
sub
inc
sub
rcrl
insb
push
jns
sub
sbb
sarl
adc
enter
inc
mov
jl
mov
push
dec
or
in
xchg
mov
and
add
inc
nop
scas
mov
popa
sbb
xchg
es
fdivrs
jg
jmp
mov
jb
pop
sti
xlat
or
pop
cmp
inc
daa
sarb
std
lahf
notl
cmp
stc
mov
inc
xor
inc
stos
and
mov
jnp
lods
seta
icebp
pop
mov
push
fstpt
cmp
inc
ret
cld
mov
inc
scas
jmp
pushf
or
stos
ret
adc
test
inc
or
lret
jle
into
mov
movsl
pop
and
and
ror
out
lds
mov
jle
sub
gs
mov
in
and
or
cmp
fistpl
and
pop
jbe
testb
aas
in
adc
jp
in
xchg
addr16
gs
mov
addr16
lock
mov
cltd
or
ss
shl
stos
push
sub
stos
mov
pushf
popa
inc
bound
popa
xor
mov
xor
ss
mov
push
inc
xchg
int
fwait
mov
insl
fldcw
lods
mov
cwtl
popf
jne
popf
push
lret
push
lahf
dec
cmpsb
out
cmpsb
cmp
adc
movsl
add
sbb
xorl
and
jo
mov
scas
xchg
or
cmp
mulb
addr16
aam
cmp
xchg
js
cmp
dec
inc
test
push
sbb
add
xor
sarb
jmp
mov
lods
jnp
fldl
cli
loope
mov
inc
or
cmp
adc
mov
shr
push
xor
dec
pop
push
into
enter
dec
xchg
jmp
out
add
fldl
in
ljmp
mov
insl
scas
cmp
addr16
mov
inc
cmp
mov
push
lods
jmp
sbb
lret
insl
sbb
icebp
hlt
push
repnz
or
rcll
bound
jbe
push
movsb
fsubrs
divl
loop
jae
mov
jmp
push
filds
in
popf
mov
xor
or
pop
mov
pop
and
add
mov
mulb
dec
mov
jno
pop
dec
leave
decb
push
adc
mov
add
sbb
stc
jl
xchg
cmp
push
test
adc
ljmp
sbb
inc
mov
xor
ljmp
sahf
push
das
mov
and
mov
add
mov
int
inc
pop
and
loop
clc
sbb
mov
add
add
shrb
outsb
sub
xor
jmp
push
les
dec
loope
pushf
mov
sbb
das
aaa
and
pop
in
bound
dec
ret
daa
scas
aas
arpl
bound
pop
mov
adc
mov
jns
mov
test
jecxz
out
decb
sbb
dec
popf
sbb
jns
enter
and
xchg
shrb
pop
jno
mov
hlt
in
xchg
fsub
dec
rorb
imul
pushf
jge
fistpl
pop
lock
shrl
outsb
popf
cmc
gs
fldenv
cmpsl
xor
add
in
fstl
arpl
push
mov
xor
fisubrl
xorl
mov
mov
stc
mov
jecxz
mov
in
pop
jle
xchg
mov
push
adc
adc
adc
adc
stos
xchg
mov
pushf
cmp
out
ljmp
ficoml
incb
popf
push
into
push
mov
adc
insl
out
dec
test
sbb
icebp
or
lcall
mov
rcll
adc
mov
cli
cmp
mov
mov
add
das
aaa
dec
jg
mov
inc
fstpt
jno
xchg
pop
or
pusha
mov
lds
mov
fsubrs
fnstcw
cmp
jle
gs
inc
mull
lcall
xor
pop
mov
sbbl
adc
into
or
and
mov
sbb
fistl
ljmp
jno
andb
mov
outsl
xchg
insl
mov
mov
loop
inc
jl
adc
cmp
imul
cmc
sub
pop
das
mov
xchg
pop
or
imul
adc
sub
jne
aas
jg
mov
jns
and
std
or
imul
xor
fcoml
rcr
fcompl
and
sahf
call
push
adc
mov
cmp
sub
lea
xor
or
addr16
mov
stos
add
in
sub
cltd
out
dec
xor
add
lret
jge
call
in
stos
fbld
push
pop
out
and
xchg
jbe
cmp
arpl
mov
rol
repz
xchg
push
adc
jl
shrl
in
jbe
sub
je
outsb
mov
das
push
xchg
inc
jg
mov
xchg
popa
adc
addl
xchg
inc
loope
mov
lcall
into
into
inc
jp
cltd
lret
aas
and
sbbb
jg
mov
lahf
addr16
test
dec
xor
pop
pop
inc
scas
cmp
jl
mov
rclb
std
repnz
in
pop
lret
sub
sub
std
mov
cmp
lret
and
je
and
push
push
mov
inc
pushf
test
shll
rep
lods
mov
sbb
repz
cmp
les
enter
or
imul
ljmpw
dec
xor
xchg
popl
pop
out
test
sbb
inc
enter
cld
push
pop
sub
in
cmp
fwait
movsl
adc
mov
and
and
ss
mov
xchg
push
dec
adc
frstor
dec
sarl
jecxz
out
mov
dec
mov
insl
sub
push
ret
add
ss
arpl
mov
test
cli
js
adc
sbb
jl
ret
icebp
dec
mov
dec
dec
data16
decb
pop
shl
mov
icebp
in
bound
xchg
or
mov
jns
mov
jge
jmp
xor
imul
xchg
vcvttss2si
andb
fs
loop
inc
test
jbe
cld
or
scas
mov
jp
stos
push
xlat
dec
pop
lock
dec
push
push
jb
jo
push
cwtl
lcall
cmp
jecxz
add
inc
xchg
dec
lods
loope
mov
mov
push
repz
pop
adc
add
in
movsb
nop
mov
gs
mov
push
push
loop
cmp
test
shlb
cmp
pop
mov
jno
fsubr
nop
or
or
push
nop
dec
jnp
out
cmp
inc
dec
cld
inc
sbb
pop
or
mov
sub
push
adc
ret
mov
mov
repnz
cmp
rcrb
sub
cwtl
mov
jg
adc
insl
mov
push
out
mov
pop
imul
jbe
xchg
adc
lock
inc
xor
enter
sbb
mov
lcall
sahf
lds
mov
nop
and
adc
pushf
pop
pop
sub
fucom
mov
loope
inc
mov
ret
dec
sbb
push
mov
inc
inc
push
loope
mov
subl
pop
test
dec
pop
lahf
scas
addb
jmp
movsl
push
mov
dec
xor
insl
mov
pop
loopne
cs
in
stos
or
popf
mov
test
dec
sbb
xchg
addb
in
cmp
adc
lret
jo
and
leave
sbb
gs
nop
sub
mov
jae
mov
and
xchg
inc
popf
orl
cwtl
aam
call
lock
js
or
xchg
fsts
ss
inc
in
mov
jle
out
inc
push
les
push
cmpsl
popa
scas
negb
inc
dec
or
lods
add
sbbl
add
shll
adc
sub
sahf
mov
cs
sbb
ljmp
dec
outsb
insl
xchg
xlat
clc
movsb
xchg
jno
fxch
stos
jl
or
and
loope
xor
sub
jnp
dec
xchg
mov
pop
add
outsb
push
cs
rcll
das
test
cmc
in
dec
cmp
dec
in
popa
pop
dec
out
push
rorl
insl
inc
pop
lock
and
cmp
dec
mov
rorl
xor
sahf
negl
pop
pop
adc
xor
mov
pop
push
push
or
push
dec
scas
int3
loopne
fistps
inc
bound
lea
push
cmp
das
lret
xor
add
sub
cmpsb
pusha
mov
sub
xor
dec
loope
push
xchg
sub
nop
leave
iret
pushw
push
shll
addr16
out
test
mov
add
mov
bound
jg,pt
jb
and
gs
sbb
outsl
xchg
out
adc
lret
loopne
cmp
mov
push
out
ljmp
mov
pusha
jle
jno
sub
adc
lock
mov
jle
push
pop
ss
xor
or
pop
jb
std
sub
insb
pop
in
sbb
int
dec
sub
in
push
orl
nop
push
mov
sbb
mov
insb
xor
cmpsb
mov
sbb
jno
or
add
sarl
fdiv
inc
lods
sub
mov
out
lahf
scas
cmp
jns
mov
fwait
mov
gs
fs
fidivrl
jecxz
fcompl
add
ds
dec
ficompl
cld
dec
push
push
bound
out
in
jns
dec
inc
daa
test
je
shl
hlt
popf
mov
or
pusha
dec
insb
push
imul
rcl
in
int
sarb
push
lock
or
or
push
fcmove
jb
jo
dec
mov
add
jbe
adc
scas
pusha
xor
push
push
sub
jbe
test
sbb
clc
xchg
mov
mov
and
rorl
test
pop
mov
ret
inc
ss
adc
add
add
jecxz
add
ja
xchg
popf
mov
ret
fldt
add
push
push
ret
rclb
shlb
dec
pop
jecxz
mov
call
mov
test
pop
jp
pmulhw
and
push
push
cmp
aam
popf
sub
adc
mov
or
jne
dec
sar
pusha
cmp
fistl
out
mov
jb
test
mov
add
js
imul
inc
push
sub
xchg
insl
enter
inc
push
pop
mov
sub
dec
cwtl
mov
pop
adc
insb
dec
cld
jmp
outsb
add
insb
xor
xlat
aas
mov
push
xchg
adc
in
cmp
push
xlat
jg
cmpsl
fidivrl
inc
lcall
inc
repnz
jb
add
cmp
into
iret
pop
lds
dec
push
pop
mov
mov
or
mov
cmpsb
test
mov
xor
or
jp
xor
xchg
add
sahf
adc
shll
rorl
xorl
call
push
stos
clc
in
enter
lea
loopne
or
imul
add
xchg
les
jae
mov
sbb
test
sub
add
adc
jb
add
cmp
jnp
out
stos
roll
arpl
inc
call
jmp
lahf
jle
fmul
pop
sub
test
jae
test
pop
inc
mov
dec
arpl
add
lcall
mov
push
movb
add
divl
sahf
adc
push
aaa
call
into
das
out
cmpsl
dec
rcll
push
push
and
nop
inc
fs
cld
push
push
sub
pop
lcall
shlb
mov
into
cmp
outsb
cmp
mov
jno
pop
push
test
lea
enter
cmpsl
call
ljmp
sub
iret
pop
sbb
jle
inc
les
stc
mov
lret
aam
sub
xor
push
ss
add
or
movsl
cmp
lods
lcall
mov
pushl
lea
dec
cmp
ja
out
dec
lds
shr
push
test
outsb
push
pop
push
gs
iret
sti
fwait
iret
xor
mov
jmp
lds
mov
aas
pop
mov
lds
imul
dec
adcb
popa
jno
repnz
dec
inc
cmp
xchg
sub
loopne
mov
xchg
pop
mov
out
scas
inc
ja
push
hlt
inc
test
sbb
jo
cmp
movsl
mov
cmp
pop
fldl
push
leave
lods
jecxz
or
xor
mov
xor
dec
bound
cli
push
test
push
cmc
xchg
orl
shrb
cmp
out
cmpsb
push
cld
call
iret
dec
loop
inc
xor
and
fsubs
popa
inc
icebp
and
mov
shrl
jg
shrb
lret
push
imul
fildll
jnp
jo
shlb
in
pushf
out
fnsave
in
push
cld
daa
in
or
sahf
outsl
jl
or
lret
xorb
mov
pop
arpl
and
cltd
sbbb
push
mov
mov
xchg
cmp
iret
rolb
push
dec
dec
or
jge
add
adc
orl
jp
add
push
in
lock
scas
push
push
rorl
aam
stc
sti
mov
scas
sahf
repz
xor
popa
test
stos
ss
imul
shlb
sbb
ret
cwtl
and
rorl
mov
push
cmpsb
xchg
push
nop
pop
rcrb
mov
xchg
push
roll
inc
stos
out
mov
and
pop
rcl
fistpll
cmp
movsb
rol
sbb
xor
dec
push
rcll
lcall
clc
mov
test
jmp
xor
jecxz
insb
mov
sahf
mov
sbb
mov
sahf
xchg
and
repz
push
adc
xor
sbb
sub
dec
cli
or
dec
rcrb
xor
nop
xchg
fnstsw
xchg
cs
lock
sub
repnz
mov
pushf
inc
cmp
inc
jns
fwait
sbb
popf
lock
bound
rorb
push
jmp
pop
pusha
lret
jno
inc
pop
mov
cmc
cltd
fdivp
rcll
sbb
testl
jnp
std
mov
hlt
pop
jecxz
je
loopne
in
inc
inc
imul
in
mov
movsl
fdivr
stc
loope
adc
das
rclb
and
mov
mov
fcomi
adc
fwait
cmp
or
shlb
xor
les
rclb
dec
inc
ret
sub
mov
inc
add
popf
adc
push
push
test
js
mov
xchg
xor
mov
sbb
push
ss
mov
lods
dec
bound
in
test
mov
push
cs
std
btc
scas
enter
repz
mov
fisubs
pop
pusha
mov
jecxz
pop
xor
sahf
inc
mov
popa
or
xchg
jle
in
mov
dec
jl
or
xor
xchg
dec
fstpl
int3
jecxz
fcmovu
repnz
movsb
mov
loopne
sub
daa
sbb
jnp
lret
cmp
aas
mov
push
in
decl
sub
xchg
mov
std
sbb
push
andb
sti
cmp
jno
pop
push
mov
sbb
jp
dec
mov
push
xlat
xchg
mov
imul
jl
shrl
dec
aad
inc
cli
add
cmp
xchg
test
cmpsl
pop
adc
dec
and
ds
orb
test
jecxz
neg
cli
std
fimuls
sti
mov
mov
mov
shlb
or
inc
jecxz
add
scas
cltd
enter
in
clc
and
in
add
jnp
xorl
stos
std
leave
xchg
aam
repnz
xor
sbb
fwait
sti
inc
imul
cmc
in
sti
jb
or
sti
shlb
out
jmp
out
mov
dec
mov
xchg
pop
in
sub
in
add
lea
pushf
mov
mov
pop
lahf
push
dec
mov
sbb
cmp
mov
pop
xchg
cmp
shl
dec
pushf
sbb
push
sahf
fidivrl
add
sub
loop
scas
add
and
add
shrl
push
adc
add
add
add
cmp
lcall
sub
popa
fildl
sub
push
outsl
jae
and
dec
fs
fstpt
roll
lcall
add
shll
je
adc
push
mov
pop
fwait
dec
lods
mov
mov
cmpsl
sbb
call
into
cmpl
mov
shll
sbb
lock
in
outsl
push
xchg
ds
push
arpl
xor
inc
adc
mov
pop
cmp
fmuls
mov
sbb
xchg
bound
js
call
aad
aam
cmc
lahf
addr16
sbbl
lods
sub
sub
fbld
clc
jb
xchg
cld
jge
sarb
in
and
or
hlt
iret
outsb
or
add
lret
je
fmul
ds
popa
out
xlat
insl
pop
sub
pop
cmc
ja
jecxz
lods
cmp
sbb
and
pop
call
sbb
mov
sbb
addl
and
test
mov
addr16
pop
in
xchg
mov
imul
sub
add
test
xor
dec
iret
push
mov
insl
jae
and
dec
dec
cld
pop
fnstsw
pop
or
jne
and
jo
ljmp
add
lds
adcl
notb
sahf
xchg
sahf
call
mov
out
movsb
dec
adc
popa
ficompl
mov
pop
add
fmuls
ret
inc
bnd
repnz
andb
insb
test
sub
push
xchg
ret
jecxz
sahf
int
xchg
sub
xchg
sub
sbb
jl
jnp
jb
outsl
loope
hlt
lock
jg
sbb
jo
jmp
lock
imul
pop
mov
mov
rorb
shl
jb
aad
jb
test
clc
les
imul
mov
test
lds
push
loop
push
ljmp
or
inc
push
inc
jmp
sub
shll
push
insb
pop
push
sbb
and
or
ds
sub
rcl
add
out
loop
mov
int
out
cmpsb
mov
adc
mov
push
stos
orl
out
push
or
jae
mov
outsl
mov
loop
ja
cs
fwait
stc
jmp
pop
loope
add
push
ret
mov
push
dec
sub
mov
mov
testl
in
movsb
lret
es
sub
sub
cmpsb
adc
test
hlt
adc
lea
adc
das
repz
popa
mov
xor
jg
pushf
lret
sbb
push
test
cmp
test
jl,pt
in
mov
std
xchg
mov
outsb
ja
and
cmp
sub
enter
and
ret
xor
adc
push
shrb
pop
cmp
mov
adc
add
dec
and
fs
imul
or
dec
insl
popa
daa
fwait
ss
dec
or
jecxz
in
xor
or
sub
popa
in
les
insb
decl
rcrl
mov
lret
mov
xchg
into
sahf
or
movsl
fidivs
pop
cmp
inc
mov
lea
pextrw
pop
inc
sbb
jl
shll
lret
add
clc
es
lret
jmp
test
rcll
xchg
add
filds
rorb
sbb
xchg
push
ret
push
cli
or
mov
or
bound
push
mov
cmpsb
dec
pop
cmp
test
addr16
sti
movzwl
popf
mov
jecxz
push
push
ret
cltd
jmp
xor
sbb
jnp
mov
inc
jns
int3
push
xor
je
mov
movsb
dec
bound
xchg
out
jo
scas
inc
les
mov
and
pop
stc
mov
fsubrs
in
sbb
stos
sub
repz
xlat
cmp
xor
cltd
dec
and
scas
jge
out
scas
and
pop
fisttpl
mov
filds
pop
inc
mov
push
iret
jnp
and
sub
adc
sub
adc
cmp
daa
jle
jnp
push
and
push
add
xchg
movhlps
shrl
fadd
xchg
into
addb
dec
and
loop
outsl
jp
adc
popf
rorl
xchg
rcll
add
fsts
pop
pop
inc
xchg
pop
ds
adc
jb
jmp
lea
dec
or
xor
mov
add
and
sub
in
lcall
xchg
or
cmpsl
and
jo
pushf
jo
xor
and
movsb
lret
and
jnp
stos
and
mov
xor
mov
lds
xor
mov
lahf
sbb
dec
lods
cmp
cmp
in
push
xor
mov
sub
fisttps
dec
pop
ss
sub
push
lcall
jmp
mov
push
imull
test
push
roll
test
sub
loop
sub
ret
test
ss
ds
push
fwait
jle
jl
test
popa
mov
cli
sub
dec
mov
xchg
inc
lods
add
jno
push
jo
dec
adcb
xor
std
loopne
mov
pop
cltd
or
xor
push
push
mov
xorl
lret
leave
lods
daa
lcall
inc
stos
andb
lods
lret
cmc
aas
lods
sti
aad
loopne
xor
insb
xchg
pop
cmc
mov
lods
ret
aas
cmp
mov
std
sub
push
pop
data16
cmpsl
mov
mov
cmpsl
loope
dec
fisubs
fcomps
lea
cld
jp
mov
sbb
sub
rcrb
inc
es
arpl
or
daa
ss
fwait
in
sub
imull
lret
test
push
mov
and
fldcw
push
addb
or
das
lea
jbe
cmpsl
and
in
mov
sub
sahf
ljmp
fcmovnu
pop
es
add
test
int
inc
jb,pt
jp
insl
cld
adc
sbb
ja
test
fs
xor
dec
fldenv
ss
mov
arpl
lcall
pop
push
ficompl
mov
add
pop
add
sub
xor
sbb
cmc
or
mov
jae
push
push
call
or
fs
add
test
ror
cmp
loopne
pop
test
xchg
jg
aaa
pop
lds
icebp
sub
sbb
int
out
push
out
adcb
push
aaa
push
jle
push
lcall
pop
xchg
and
mov
ret
loope
jbe
repnz
int
dec
or
xlat
test
adc
divb
sti
xor
test
mov
mov
scas
xchg
adc
dec
adc
mov
insb
add
xchg
lods
adc
add
xchg
fs
mov
xchg
mov
stos
adc
or
lret
mov
push
mov
aam
sbb
out
aam
sbb
and
pop
out
loopne
ljmp
insb
inc
ds
fstps
and
ss
mov
mov
xor
aam
pop
cli
sub
addr16
shl
push
test
jle
mov
jle
pop
adc
pushf
ljmp
mov
or
lahf
dec
cld
or
push
int
or
xor
ds
mov
add
adc
mov
adc
pop
gs
clc
cmp
in
pusha
cmc
mov
jge
mov
jge
sub
sub
dec
adc
pop
xchg
xchg
les
or
fdiv
pushf
loope
or
shrb
lods
sub
adc
mov
and
je
mov
fsubl
add
dec
sub
and
inc
dec
shll
inc
rcl
in
xlat
jns
scas
mov
xor
push
jge
lahf
rolb
xchg
or
jne
in
fnsave
cmc
in
std
pop
cmc
mov
ds
inc
cld
mov
cmpsb
sub
pop
ret
enter
sbb
je
lret
repnz
sbb
inc
pop
movsb
test
into
arpl
gs
pop
lahf
popf
ret
mov
push
mov
outsl
lret
push
mov
and
loopne
dec
or
data16
fwait
jnp
in
lds
cmp
imul
test
subb
cwtl
dec
and
imul
cmp
xor
add
mov
cld
out
or
cmpb
mov
rorl
movsl
cld
dec
arpl
stc
fs
xchg
add
in
or
ljmp
inc
not
divl
mov
or
ret
cmpl
fldenv
mov
xchg
gs
jle
out
fnstcw
enter
in
incl
mov
ja
pop
aaa
and
dec
rcrb
das
xchg
clc
push
sbb
jl
inc
and
imul
mov
movsl
or
ficoms
repz
gs
aaa
push
dec
add
cltd
mov
aam
outsb
sti
cwtl
int
mov
pop
insl
cmp
ja
sub
jae
pop
aas
xor
stc
popf
xor
mov
notb
mov
loopne
les
lods
mov
mov
sbb
cs
inc
insb
pop
push
dec
mov
rorb
cmc
mov
lahf
pop
sarl
ret
std
push
xchg
adc
mov
mull
js
jp
pop
add
mov
fadd
loopne
xor
mov
aad
loopne
mov
lea
jecxz
xor
jmp
mov
sub
pushf
add
add
xchg
jp
mov
mov
loopne
inc
mov
cmp
mov
or
aad
xor
or
jp
or
push
or
xchg
arpl
scas
aaa
mov
sbb
mov
das
mov
push
mov
addr16
fisubrl
aaa
xchg
sbb
aam
sub
adc
jge
enter
lea
mov
in
sti
popf
fldl
xchg
clc
jbe
pushf
sbb
adc
inc
add
xchg
mov
loop
shrb
inc
xlat
imul
in
hlt
mov
cs
mov
adc
jo
arpl
jecxz
xchg
pushf
iret
inc
and
sub
rcrl
jp
test
sbb
dec
shlb
cmp
push
out
insb
frstor
in
inc
ficomps
and
frstor
jmp
jmp
ret
scas
out
xchg
cmpsb
jp
and
xor
icebp
and
add
ljmp
cmp
das
lock
in
sbb
or
in
mov
repz
int
push
cmp
or
sbb
ror
cmp
xchg
push
adc
ret
push
mov
aas
jnp
xor
pusha
push
repnz
xor
iret
cwtl
and
jmp
fstpt
shrl
xor
inc
mov
pop
ret
aam
pop
loope
inc
fnstenv
lods
ljmp
adc
pushf
outsb
int3
dec
xor
js
daa
sbb
lock
aam
push
sub
orl
sbb
ja
inc
int3
cmpsb
xor
xor
pop
cltd
cmp
nop
cmc
jmp
rorl
pop
add
sbb
fcomps
or
add
stc
aam
aad
inc
pop
mov
xor
xor
insb
cld
sub
outsb
add
repnz
sbbl
mov
xchg
xchg
mov
andl
movsl
mov
jmp
sub
loope
adc
inc
xor
icebp
and
stc
fwait
jne
sbb
push
loop
lea
push
test
shl
int3
loope
jmp
xchg
je
cmp
inc
mov
push
shl
js
nop
call
mov
adc
and
lods
ret
call
cld
and
inc
xchg
pop
add
test
push
dec
dec
popf
mov
scas
fistps
cs
orl
loopne,pt
repnz
mov
in
push
inc
jecxz
mov
scas
xchg
jo
sbb
and
mov
jmp
es
cltd
incl
xor
inc
dec
mov
mov
sbb
push
dec
imul
bound
xor
iret
sub
adc
push
leave
adc
xchg
data16
int3
imul
icebp
movsl
lret
dec
mov
xchg
stc
out
inc
std
fidivrs
movsb
dec
int
push
sarb
mov
add
in
movsl
in
jp
xchg
loope
into
cmp
mov
fwait
xchg
dec
xlat
push
stc
mov
jbe
jg
mov
jns
arpl
addr16
lods
lret
int
aas
cmp
fdivr
repnz
fcomi
lret
out
or
jnp
cmp
cmc
test
cmp
sbb
push
add
and
xor
lds
in
cmpsb
inc
ja
popa
or
test
push
ja
rolb
repz
xor
out
sbb
popf
cmpsb
cs
rolb
inc
inc
mov
sub
rolb
push
push
out
jo
adc
cltd
mov
out
pusha
mov
sbb
mov
pop
jb
mov
inc
das
gs
in
cltd
popa
movsb
in
lds
lock
cltd
lcall
clc
cmp
xor
mov
dec
or
push
xchg
mov
adc
jbe
dec
dec
movsb
addb
mov
jle
fwait
repnz
in
mov
pop
sub
inc
and
mov
jbe
jle
inc
js
lds
js
xchg
fwait
push
mulb
loope
mov
mov
dec
test
sbb
xchg
popf
dec
add
les
push
xor
fisubs
inc
imul
fnsave
push
ret
inc
push
in
fsubl
clc
js
imul
shll
xor
std
mov
insb
dec
mov
lcall
adc
ljmp
xor
sub
or
dec
out
jecxz
pop
jo
jp
cmp
icebp
xor
addr16
jae
pop
pop
lock
into
es
mov
stos
pushf
icebp
mov
jecxz
cs
push
insb
xor
cmp
jle
jp
mov
push
gs
shlb
negb
fisubl
ss
pop
push
rorb
iret
jns
out
subb
push
cmp
xor
mul
push
lahf
test
pop
push
sub
xchg
mov
jmp
or
push
jl
adc
cld
pop
sub
mov
rcrb
fstl
mov
imul
cwtl
push
ret
in
jae
or
mov
cmp
adc
ljmp
stos
out
movsl
mov
and
inc
shl
or
int
push
jo
cmp
fidivrs
fdivl
jb
mov
xor
arpl
jbe
xchg
das
cmp
sub
test
cmp
mov
rcll
sub
pushl
paddw
sbb
sbb
outsb
xchg
shrb
jbe
das
and
lahf
mov
jnp
ret
push
sbb
and
pop
addr16
or
cmp
stos
sub
xchg
jle
icebp
insl
sarl
xchg
js
rclb
cwtl
jns
dec
incl
pop
pusha
ljmp
jae
adc
jp
arpl
mov
push
sbb
push
mov
and
adcl
ret
inc
in
pop
xor
jne
scas
mov
cmpsb
cmp
ljmp
mov
filds
je
bswap
mov
dec
mov
push
jge
js,pt
fldt
ljmp
sti
mov
idivl
insb
ja
test
jb
dec
xchg
jmp
jle
dec
iret
and
push
pop
fdivrs
les
sbb
int3
cmp
xchg
pop
aam
das
lds
cmp
lds
push
stc
lods
adc
gs
mov
outsl
or
lret
xor
xor
cmp
lahf
fs
insl
dec
cld
ret
mov
les
push
les
lcall
mov
pop
ret
jp
xor
ficoms
add
lret
jne
xorb
cmp
es
jno
dec
adc
mov
popa
adc
hlt
xchg
sub
in
pusha
mov
push
push
add
jge
pop
dec
mov
es
jecxz
cmp
shr
int3
outsl
xor
jb
mov
push
les
pusha
and
push
imul
xchg
imul
cmc
lcall
adc
cmc
testl
mov
pop
call
clc
mov
pop
cmp
mov
adc
gs
dec
xor
scas
aam
xor
cwtl
negl
shrb
imul
testb
push
mov
aam
aad
mov
xchg
or
pop
sub
xchg
lods
sub
inc
pusha
mov
fisubrs
sub
aaa
aas
mov
pop
mov
insb
ja
or
test
inc
repz
fadd
dec
lret
jmp
icebp
addr16
pop
aam
aas
fsubl
xor
icebp
sub
fmul
jnp
int
aaa
lock
test
mov
jecxz
sub
mov
cmpsb
aam
movsb
add
mov
mov
and
sub
ret
iret
mov
mov
inc
mov
jmp
sub
cmp
insl
push
dec
arpl
nop
or
inc
insb
adc
mov
movsb
lret
pop
mov
cmp
pop
push
insl
scas
in
lcall
fs
cmpl
cmp
ret
test
loopne
addr16
hlt
rcr
pop
pop
or
xchg
daa
or
and
mov
movsl
int
out
iret
icebp
std
mov
je
push
or
mov
push
sub
dec
testl
fimuls
adc
add
sbb
aam
daa
xchg
sbb
mov
fisttpll
mov
and
jge
adcb
inc
repnz
jecxz
ss
adc
std
lods
push
punpckhdq
subl
push
shlb
mov
fsubl
divl
push
outsb
xchg
into
adc
fs
sub
or
or
jb
call
aam
cli
int3
fiaddl
je
sub
stos
daa
fistl
mov
pusha
xchg
mov
sbb
mov
pop
and
add
adc
inc
inc
clc
mov
mov
xchg
cli
xchg
xchg
or
and
cmp
or
jle
inc
pop
or
aam
mov
inc
call
dec
pop
lcall
jae
movswl
push
out
sub
or
jno
test
scas
mov
jb
decl
sbb
mov
and
pop
mov
inc
sub
mov
fstpt
js
mov
xchg
mov
lods
xor
jbe
mov
jmp
push
dec
or
mov
mov
in
idiv
jg
and
jl
pop
lds
add
pop
add
loope
xorb
mov
das
jecxz
cld
ljmp
les
fucom
cmp
adc
enter
daa
rcrb
subl
jbe
ret
add
fmull
pop
lods
push
push
sbb
repz
lods
sub
aaa
jg
addr16
sub
inc
in
fcomps
ja
xor
mov
lahf
pop
loop
cli
fstpl
push
les
std
pop
sbb
lcall
push
sub
rorl
sbb
mov
adc
clc
lret
jmp
xchg
enter
jle
mov
imul
int3
xchg
fwait
mov
jns
incl
scas
xor
jle
xchg
test
into
fdivs
popl
les
dec
inc
mov
xor
and
xchg
negl
cmp
cmc
gs
sti
in
mov
xchg
push
call
es
sbb
addr16
adc
pop
cmp
adc
out
adc
clc
imul
mov
mov
xor
lret
nop
outsb
jne
cmp
aas
adc
adc
push
js
sti
cltd
inc
in
imul
add
lret
push
push
mov
daa
jnp
les
push
test
sbb
leave
fdivrs
imul
cmc
cmp
mov
mov
xchg
ficompl
outsb
pushf
shrb
rorl
lds
arpl
mov
fwait
lcall
aaa
insb
cmp
or
xchg
xor
lret
mov
sub
inc
mov
sti
mov
mov
dec
shr
pop
fnsave
bnd
addr16
sub
filds
insb
enter
je
push
dec
out
mov
fcomps
out
movsl
fisttpll
fidivl
fiaddl
fldl
test
cmp
mov
sbb
enter
push
shr
or
bswap
mov
push
mov
xchg
mov
ds
das
pop
movlps
iret
push
lea
mov
fimuls
inc
push
sti
add
adc
cmpsl
inc
adc
or
cmp
mov
xchg
xchg
xchg
mov
push
orb
scas
dec
rclb
pop
push
inc
pop
ja
push
and
cmp
xchg
icebp
xchg
mov
stos
in
dec
sub
mov
add
sbb
int
shrl
dec
lods
mov
loop
pop
clc
push
sub
ljmp
mov
test
mov
negw
and
or
clc
xchg
pop
mov
xchg
cld
jmp
jo
test
jbe
fisubs
cmp
lcall
cli
xchg
pop
xor
insb
inc
mov
sub
cs
sarb
add
das
inc
jg
jmp
cmpsl
incl
push
fbld
or
dec
lods
je
dec
mov
cmpsb
pusha
outsb
mov
fbstp
adc
movsl
jns
icebp
mov
add
imul
mov
jb
in
shr
ficoms
je
iret
cmpsl
xchg
mov
pushf
mov
fs
xchg
dec
cltd
cmpl
adc
iret
or
cmp
xor
sti
leave
inc
jle
fsts
int
addr16
loopne
add
ds
iret
std
jae
and
dec
into
pop
cmp
or
popa
add
sbb
dec
nop
dec
adc
decl
push
push
leave
xchg
test
jmp
fs
dec
sub
xor
aad
xchg
cmp
push
jecxz
mov
shrl
je
stos
mov
test
jp
jl
inc
cld
cmc
xchg
scas
xlat
jno
nop
jae
pushaw
cld
and
outsl
xchg
aaa
xchg
mov
sub
dec
xor
and
je
hlt
xor
scas
mov
out
cmp
jbe
icebp
bound
idivb
and
sbb
lock
loop
clc
mov
mov
xor
cmp
mov
daa
mov
hlt
lahf
loope
lods
xor
fs
dec
iret
rorl
rcrb
jo
out
adc
mov
cltd
and
mov
clc
test
aad
enter
cltd
inc
in
mov
stos
leave
xlat
out
sahf
mov
push
popw
lods
ja
shl
sahf
ja
outsl
js
insl
add
in
fwait
xor
jbe
mov
cli
fiadds
cmpsb
fcomps
add
pop
cli
dec
xor
mov
aam
jno
cmpsb
bound
lcall
out
dec
aam
pop
ret
adc
int3
ret
es
and
aam
je
push
jl
lret
add
or
out
or
mov
inc
in
sbb
sbb
lods
add
push
mov
out
rorl
lahf
rorb
pop
fisttps
in
mov
pop
inc
jb
add
mov
push
jnp
test
mov
stc
cmp
adc
arpl
inc
xchg
sahf
inc
mov
mov
sub
jbe
fnstcw
ret
bound
xchg
insb
je
inc
loop
aaa
imul
lds
pop
int3
cmp
pop
ret
xchg
sub
clc
dec
push
repz
fadd
sbb
int
pop
neg
xchg
mov
xchg
and
fiaddl
sub
mov
test
test
push
cmpsl
cmp
fidivl
cs
jge
clc
sbb
cmp
stc
cmp
testb
sahf
jp
fimuls
scas
rclb
mov
xlat
lods
dec
lcall
test
pushf
mov
mov
sbbl
test
push
ss
aaa
loopne
adc
fildl
nop
cmpsl
and
mov
xchg
mov
xor
inc
dec
xorb
es
jo
stos
loop
cs
test
out
fldt
xor
or
inc
outsb
pop
adc
into
insl
mov
jle
popa
leave
push
or
push
inc
cmp
cwtl
and
adc
and
nop
mov
ds
mov
sarl
sbb
pop
rorb
jmp
and
push
push
mov
ret
shl
and
fisubrs
popf
rcrl
adc
cmp
test
divb
mov
movsb
aas
and
adc
xchg
xchg
push
fwait
jp
mov
jnp
test
add
mov
out
test
in
xchg
mov
or
mov
push
sahf
cmc
shr
and
aas
fcomip
out
or
idivb
add
and
add
sbb
xchg
ficomps
nop
lds
xor
jl
and
je
inc
testb
popa
mov
leave
jb
mov
inc
mov
dec
out
add
in
pop
xor
out
inc
xorb
cmpsb
xchg
out
add
mov
stc
clc
testb
xchg
lods
xchg
inc
and
mov
jbe
rcr
cmp
movsb
add
xchg
insl
sub
rcl
or
pop
ljmp
lret
sti
and
shll
fdivs
sbb
xchg
cmp
fwait
popa
dec
jae
stos
inc
xchg
mov
lret
mov
push
and
dec
inc
aad
nop
xchg
jge
mov
mov
popf
mov
dec
mov
or
mov
es
clc
fistpll
gs
fldcw
dec
mov
jle
lock
adc
mov
mov
cs
fdivs
xchg
jae
cwtl
loope
jmp
push
pusha
add
mov
inc
rolb
negl
into
mov
lods
sub
mov
ret
xchg
loope
cmp
pusha
push
xchg
mov
and
arpl
mov
jmp
mov
ss
out
arpl
mov
push
jmp
cmpsl
xor
sarl
sbb
add
out
inc
mov
adc
mov
rorb
insb
sub
insb
dec
push
lock
xlat
mov
push
lea
and
jne
or
cli
jmp
int3
adc
cmp
mov
cmc
leave
xchg
mov
repz
out
in
sbb
adc
mov
scas
lds
lods
lods
popf
jae
pop
imul
mov
mov
pop
out
add
shl
sbb
mov
in
jae
add
sbb
iret
movsb
mov
and
push
shrl
icebp
xchg
and
in
adcb
jno
jg
and
sahf
dec
loop
lcall
cmp
or
mov
or
xchg
and
sbb
jmp
int
jae
cmp
cmpsl
mov
xchg
data16
mov
mov
xorl
mov
ljmp
gs
fsubl
dec
mov
insl
data16
aam
inc
pop
xor
push
xor
clc
and
out
push
push
ss
or
add
lock
std
outsb
aaa
jnp
mov
and
in
mov
das
cmp
xor
pop
pusha
pusha
push
mov
faddl
fucomi
push
jle
dec
cld
jge
leave
test
ret
repz
outsl
mov
addr16
sbb
loope
orb
out
out
adcl
test
mov
mov
cli
mov
add
cmp
fsubr
inc
repnz
sbb
push
nop
es
imulb
pop
mov
fwait
negb
fnstenv
insl
hlt
pusha
push
out
mov
mov
popf
movsl
fstpt
sbb
aas
adc
mov
adc
ficomps
dec
add
leave
and
stc
xchg
mov
sarl
into
cwtl
inc
or
xchg
dec
pop
mov
add
inc
sub
lcall
cli
push
inc
movsb
ja
mov
xchg
inc
adc
mov
xor
jmp
pop
sub
pop
xor
int3
ja
cmpb
pop
cmp
addr16
and
jb
sbb
repz
ret
rorb
jo
sbb
je
cmp
add
decb
push
jp
sbb
inc
cmpsl
mov
pop
mov
cmc
and
xchg
aam
loopne
lods
mov
mov
push
xlat
mov
les
inc
test
scas
and
addr16
inc
cs
pop
or
sub
inc
fmul
fmull
aad
xor
sahf
and
out
xor
mov
out
shlb
dec
or
dec
ret
andl
cmp
inc
push
lods
sub
xchg
mov
sub
out
fs
or
pop
sbb
or
in
leave
push
mov
xchg
push
pushl
cmp
pop
enter
daa
pop
orb
sub
adc
rcll
adc
gs
icebp
xor
push
mov
push
in
mov
popa
push
cmp
pushf
mov
cld
roll
mov
or
inc
orb
ror
nop
jg
out
mov
loopne
dec
mov
jae
jae
mov
or
loope
fimuls
add
mov
push
sub
push
fs
stos
out
fimull
mov
lods
pop
jle
and
jns
cmp
hlt
fisubl
lds
dec
sbb
fxch
dec
inc
and
jle
mov
cmc
jmp
jae
pop
insl
enter
push
in
mov
popa
mov
mov
out
push
xchg
pop
outsb
xchg
push
dec
cmp
clc
cmpsl
pop
out
aaa
mov
out
notb
addr16
incl
cwtl
xchg
rcrl
ljmp
pop
adc
inc
fcoml
insb
and
mov
xor
cld
add
cmp
xor
cmpsb
jle
jno
cmp
push
sbb
das
push
pop
gs
dec
lds
xchg
jnp
addr16
getsec
cwtl
dec
pop
repz
xorb
jp
popa
outsl
orb
arpl
jecxz
xor
int
sbb
adc
dec
sub
nop
xchg
es
sbb
popf
addl
test
inc
lds
dec
cmp
sbb
je
in
dec
pop
movl
cmp
repz
xor
or
push
cmp
into
stos
mov
and
mov
xchg
sub
jp
add
add
add
jae
jnp
or
popa
test
jp
and
mov
cmp
mov
adc
icebp
mov
popa
sbb
lea
mov
sub
and
test
and
rorb
jbe
dec
pop
decb
inc
lock
aaa
fldcw
sbb
adc
inc
dec
mov
jb
sub
call
testb
outsl
add
add
mov
push
insl
cli
dec
xchg
cmc
repz
mov
sahf
aaa
xchg
pop
hlt
in
inc
mov
scas
imul
lea
loop
lret
ja
daa
inc
call
jae
roll
add
pop
add
lock
pop
sbb
fdivrp
mov
mov
nop
scas
stos
into
test
movsb
pop
repnz
xchg
xchg
mov
jge
fmull
pop
hlt
pop
inc
mov
dec
inc
mov
mov
scas
inc
test
das
mov
std
fidivs
je
mov
or
xchg
jle
xor
pop
fcmovnb
jmp
je
push
int
out
loopne
lret
repz
imulb
lret
push
and
pusha
push
out
lahf
mov
push
jp
pusha
sub
dec
fcom
push
cltd
mov
out
in
mulb
or
sub
mov
aaa
add
lahf
and
dec
dec
xor
sub
out
adcl
adc
jmp
jno,pt
sub
cmp
mov
jns
or
gs
fisttpl
dec
mov
inc
push
int
cmp
mov
and
jb
js
out
or
pop
sbb
les
imul
mov
mulb
mov
js
or
mov
xchg
movsl
repnz
xor
popa
mov
mov
rolb
sbb
inc
push
in
lret
jmp
mov
xchg
fucomi
aad
lahf
mov
bound
jp
push
mov
je
fidivrs
and
pop
gs
jp
aas
loopne
xor
aaa
sbb
adc
jl
push
mov
repz
mov
push
outsb
mov
pop
dec
cmc
outsb
lret
dec
add
lret
scas
adc
inc
out
movsb
lds
mov
fidivrs
xchg
and
push
nop
movl
lock
dec
and
nop
xchg
xor
sahf
movsb
repnz
push
scas
jb
enter
dec
inc
jo
imul
add
xchg
shlb
out
adc
aas
dec
jecxz
dec
and
xor
pop
or
or
out
test
out
lds
xchg
xchg
repnz
xchg
popa
adc
test
xchg
mov
xor
push
addr16
cld
inc
xlat
add
aam
push
unpcklps
sub
sti
ret
pop
mov
and
mov
dec
enter
test
sub
fxch
jecxz
mov
cltd
or
cmpsl
jl
fisubl
xchg
hlt
test
ret
iret
and
xlat
mov
pushaw
jp
xchg
add
jmp
aaa
fstpl
or
out
cli
mov
outsl
fistps
sbb
mov
dec
jecxz
mov
and
mov
mov
xchg
shrb
pop
add
sbb
arpl
out
xor
lock
mov
xor
or
daa
inc
adc
cltd
cmp
ret
jp
xchg
mov
scas
hlt
mov
jb
jge
sbb
push
add
std
out
loopne
xchg
cmp
xor
jb
pushf
push
shll
push
sub
mov
imul
push
dec
sarl
lock
mov
cmp
sahf
cs
push
xlat
sub
push
cltd
loopne
aaa
out
cmp
inc
mov
das
dec
roll
shrb
lret
outsb
ret
xor
shlb
fsin
nop
aad
mov
test
fsubs
push
xchg
fldl
popf
stc
out
shlb
aam
cmp
inc
and
push
into
mov
aad
xor
add
nop
in
imul
pop
fmull
jge
cmc
inc
in
loop
loopne
xor
es
inc
add
xor
shl
push
call
or
pop
pop
cltd
dec
and
inc
dec
scas
push
xchg
lods
int
add
cmpl
adc
cmp
sub
xchg
or
xor
adc
push
dec
std
xchg
sub
fsubl
jmp
stc
mov
iret
pusha
dec
add
fs
mov
popf
out
cltd
ret
insb
sbbl
xchg
loop
lods
adc
mov
cli
mov
inc
dec
fidivs
inc
and
jp
lds
iret
bound
lret
jmp
adc
fistps
scas
mov
adcb
sbb
or
mov
push
test
test
push
cltd
and
adcl
fsubrs
cld
lret
inc
dec
cwtl
imul
mov
ret
shlb
sbb
xchg
cwtl
or
mov
arpl
js
cmpsb
jo
inc
sbb
testl
push
dec
and
or
xor
pop
push
ja
cmpsl
add
pushf
push
inc
sub
sub
cmp
jb
jo
leave
outsb
mov
xchg
imul
jge
ljmp
lds
subl
add
pop
push
xor
xchg
das
push
mov
les
dec
movsb
mov
and
add
jmp
adc
cmpsl
fisubl
or
xchg
es
mov
dec
js
and
cmp
fildll
mov
adc
sbb
push
shrb
popf
fucomip
xor
imul
xor
scas
push
lcall
mov
or
mov
dec
jbe
pop
push
scas
cmc
dec
ds
mov
mov
xchg
popa
std
jmp
pop
pop
call
or
dec
stc
cld
mov
int
adc
inc
pop
btrl
ds
bound
stc
xor
inc
sbbb
mov
mov
rcr
inc
mov
mov
repnz
cli
js
mov
push
pop
mov
pop
sbb
in
jmp
mov
and
out
notb
xchg
xchg
jbe
sub
out
pop
xchg
and
stos
lahf
xor
xchg
xorl
jg
inc
cmp
mov
stos
test
push
mov
jae
bound
push
sbb
cld
push
xor
sar
scas
inc
add
push
xchg
outsb
xchg
jno
aad
bound
enter
xor
push
out
and
and
ss
jp
ret
mov
iret
mov
cmp
repz
inc
add
mov
andl
xor
or
pop
xchg
push
mov
enter
cwtl
jae
ret
and
cmp
stos
lods
mov
test
pop
add
stos
pop
jnp
xlat
movsl
mov
mov
fstl
repz
push
pop
mov
pop
es
ljmp
pop
add
aas
loopne
lods
mov
out
push
push
loopne
ss
adc
xchg
jge
and
jnp
cs
mov
repnz
mov
cld
aas
mov
mov
imul
jns
xchg
push
xchg
push
push
inc
jmp
mov
mov
cmp
aad
push
mov
jmp
out
repnz
in
cmp
les
lea
enter
es
add
inc
out
repnz
pusha
xchg
mov
das
pop
mov
lahf
xor
mul
and
scas
sbb
inc
push
shl
in
call
loopne
and
mov
xchg
inc
jge
and
loope
aad
sub
scas
push
dec
scas
insl
sub
jns
in
jae
sti
xor
notb
cmp
cmp
fsubl
aad
push
pop
sub
insl
cmp
mov
gs
lret
imull
cmp
fdivl
cmpl
notb
aam
dec
push
sub
mov
pop
fwait
lods
loop
cli
filds
nop
out
repz
xchg
out
ds
clc
stc
lods
or
std
xor
shll
lret
jmp
das
add
das
inc
mov
fnsave
xor
adc
lcall
jp
inc
jne
sbb
cltd
jne
cwtl
mov
adc
ja
outsl
out
inc
in
xor
lea
pop
pop
pop
dec
sbb
add
mov
jl
mov
cs
add
or
pop
sti
imul
xchg
insl
out
push
js
mov
mov
pop
or
shlb
bts
mov
in
ss
adc
jno
dec
or
mov
xchg
movsb
or
hlt
jl
test
sarb
mov
call
pop
aas
cmp
sub
lret
pop
mov
jno
fiadds
mov
adc
fistpl
enter
xor
aas
testl
cmp
adc
xor
pop
cmovg
mov
cmp
sahf
pop
int3
fs
sub
xchg
outsl
inc
cld
les
push
push
dec
xor
aaa
popf
cmc
sbb
inc
scas
mov
dec
push
jmp
add
imul
out
in
push
inc
jae
pop
push
lods
add
fbld
sar
ror
dec
loop
jae
imul
push
mulb
pop
lods
jp
pop
aad
push
dec
sarl
mov
lcall
lret
mov
dec
test
cmp
push
stos
mov
and
fwait
push
out
inc
mov
aaa
mov
daa
pop
and
mov
inc
test
cs
lret
dec
frstor
addr16
sub
or
cmp
out
push
das
sub
push
inc
ljmp
push
test
adc
jmp
cmc
bound
cld
cmp
or
movsb
ret
jmp
ficompl
add
imul
pop
mov
push
ret
inc
mov
lahf
jmp
jo
in
sbb
mov
pop
xor
outsl
xchg
mov
mov
xor
mov
scas
dec
cmpsb
bound
das
scas
inc
scas
cmp
out
inc
js
or
icebp
mov
daa
cmp
xchg
sub
jbe
adc
sbb
pop
xor
fldl
sub
aaa
pop
cwtl
jno
in
lret
repnz
add
popf
mov
or
and
fisttpl
xchg
out
push
aam
lret
and
out
sbb
push
xor
dec
jne
rorl
fildl
in
xchg
inc
mov
push
jp
dec
mov
cs
inc
dec
les
int
mov
mov
inc
ret
clc
lahf
dec
mov
pushf
and
in
shlb
mov
push
nop
out
je
xorb
lcall
int
mov
je
xor
pop
cmc
repnz
cmp
dec
jecxz
cs
mov
les
mov
inc
pop
add
jbe
cli
inc
sbb
xchg
sub
stos
jp
iret
xor
into
roll
imulb
mov
add
enter
ficomps
add
sbb
dec
sbb
gs
jmp
and
das
cmpsl
xor
mov
mov
jb
cmp
sti
pop
add
jg
fisttpl
mov
and
fs
pop
fisubrl
add
into
sub
clc
loop
std
imul
aas
pop
jecxz
or
das
mov
mov
aad
sub
xchg
xchg
shr
popf
hlt
push
sarl
adc
push
dec
mov
movsl
stc
sub
xor
jge
test
push
repz
lcall
aaa
pop
xchg
jbe
pusha
stos
in
iret
mov
int
lds
orb
pop
daa
popa
cmp
shlb
push
lods
jmp
or
cmp
pop
into
scas
movb
daa
xchg
jns
popl
jg
push
mov
add
int
jp
dec
add
sbb
gs
cwtl
pop
out
cld
inc
xchg
mov
xor
mov
or
xchg
dec
popf
test
out
or
cmp
xchg
out
ljmp
mov
imul
inc
mov
adc
sbb
adc
scas
js
imul
sub
pop
inc
int
inc
add
sub
push
pop
int
mov
jl
mov
sbb
cmp
fldt
fs
dec
ds
scas
sahf
mov
hlt
clc
lods
cld
xchg
jne
sub
cmpsl
xchg
push
pop
pop
jae
dec
fildll
dec
lods
jp
mov
shl
std
lcall
xor
jbe
pop
scas
xor
ja
loope
out
fs
out
negb
mull
pop
pop
mov
jae
mov
push
or
cmp
aam
jp
mov
mov
fidivrl
cmove
sbb
jg
adc
popa
or
fcoml
pop
mov
lods
inc
xor
insl
psubw
rol
and
ljmp
mov
incl
iret
mov
cmp
mov
mov
mov
pushf
in
xor
inc
push
pop
mov
and
sub
push
xchg
push
out
push
jnp
and
and
and
clc
test
sub
jle
mov
mov
pop
push
aas
cmp
std
xor
sbb
in
jmp
sahf
xchg
sub
mov
in
sti
mov
mov
add
add
add
add
pop
mov
cmp
loope
add
pop
add
mov
or
pop
lcall
jecxz
mov
mov
pop
jns
test
dec
xchg
cvtdq2ps
fistpll
iret
into
imul
aam
mov
mov
imulb
cbtw
and
adc
push
imul
dec
xchg
sbb
scas
insb
int3
pop
sbb
mov
shlb
pop
mov
jae
jo
push
mov
push
dec
mov
or
jle
xor
cmp
cld
pop
cmp
sti
push
sub
lret
push
lds
pop
lds
stos
or
push
xlat
in
xchg
sbb
cmp
jecxz
int
jnp
cmp
filds
aad
ret
pop
stos
pop
lcall
bnd
pop
testl
dec
fwait
mull
aad
repz
scas
xchg
adc
or
sub
mov
mov
roll
es
icebp
adc
xor
push
sahf
das
or
ret
inc
adc
sarl
and
sub
xor
shl
mov
xchg
fbld
fs
inc
adc
mov
adc
daa
xchg
or
jo
fidivrl
adc
push
mov
icebp
mov
popf
cli
sbb
lds
cmp
lock
mov
cmp
movsb
and
movsl
out
ds
jno
out
into
mov
inc
iret
adc
loope
push
lea
mov
push
cmp
push
mov
iret
fcom
mov
jp
std
outsb
leave
movsb
jmp
mov
xchg
cmpsb
ja
inc
inc
aas
fidivs
xor
shr
cmp
add
cli
sub
pop
mov
mov
cli
test
hlt
xor
outsb
fnstcw
out
sub
cld
add
icebp
out
lahf
push
scas
shl
add
out
mov
sbb
out
push
subb
ljmp
sbb
sub
insl
mov
loopne
repnz
mov
xchg
inc
inc
push
scas
imul
aas
daa
daa
jno
faddl
addl
cmp
jo
call
sti
lret
adc
je
mov
sbb
int3
stos
dec
pop
mov
cwtl
clc
sub
addr16
push
adc
jge
jno
mov
test
loope
inc
sbb
dec
and
mov
cmc
jmp
in
jecxz
in
out
movsl
outsl
bound
and
scas
pop
sbb
xor
xor
lock
mov
jle
inc
stos
lock
xor
mov
out
fsubrl
negb
xor
scas
cmp
frstor
nop
dec
inc
in
loope
sub
aam
push
push
push
ja
aad
jbe
lahf
push
ljmp
add
fsincos
pusha
inc
mov
xchg
lds
subb
mov
xor
pop
fdiv
jl
mov
call
pop
sbb
cmp
mov
loope
ss
push
ss
imulb
ror
push
sbb
xchg
les
jbe
jle
pushf
and
stos
scas
popf
int3
push
add
mov
lret
dec
cmp
mov
push
pop
pushf
unpckhps
outsb
sbb
xor
inc
lock
cmpb
fistl
mov
adc
jnp
xchg
cmp
jo
int
mov
call
stc
int
and
mov
or
mov
add
cmp
ljmp
test
jno
imul
mov
push
mov
fsubs
push
jl
and
push
inc
fst
pop
das
arpl
add
dec
or
inc
test
imul
sub
fnstcw
repz
out
push
xchg
mov
inc
stos
loopne
and
sub
gs
xchg
testl
fsubs
imul
cmp
and
dec
lea
inc
sbb
push
push
mov
das
pop
aas
in
sbb
sub
mov
pusha
add
scas
adc
mov
setae
popa
mov
movsb
mov
xor
jmp
test
xorl
lea
sub
dec
sub
imul
insb
and
push
out
fistl
into
pop
mov
sub
cltd
fisubrs
sbb
inc
sbb
loope
push
and
in
in
push
and
mov
jne
mov
add
int3
test
fs
nop
adc
or
orl
ret
scas
loope
jp
rolb
cwtl
in
insl
fistpll
push
in
and
std
jae
clc
push
xchg
sahf
mov
cwtl
add
mov
fs
fsin
jne
out
lret
sbb
repnz
xor
orl
sub
xchg
gs
sbb
dec
jle
dec
fdivr
pop
sbb
adc
adc
jle
mov
xchg
jno
jmp
pop
mov
pop
adcl
jo
inc
push
push
ds
sub
lea
or
out
call
mov
pop
push
push
int
imul
add
dec
xor
enter
pusha
loope
cmp
xor
lret
fs
mov
stos
scas
add
push
fwait
leave
rolb
call
add
hlt
lcall
jbe
int3
fimuls
in
mov
push
out
loop
mov
dec
push
push
data16
pushf
jo
lret
lea
dec
cmp
out
sub
push
pop
std
jmp
xchg
hlt
inc
pushf
mov
jb
lea
and
add
test
js
shr
lret
lods
pop
cltd
add
repnz
jge
notb
aam
jne
lret
ss
sub
rcr
and
fidivl
dec
add
mov
add
stos
sbb
cmp
pop
push
push
pop
push
jle
imul
sbb
push
mov
dec
and
out
or
ficoml
lock
mov
add
jg
inc
mov
les
sbb
mov
punpckldq
jnp
and
xchg
inc
cmpsb
push
jl
jmp
js
loopne
outsl
or
sbb
es
sbb
inc
test
pop
mov
xchg
mov
jl
mov
and
rcll
mov
ret
inc
or
inc
and
fwait
cmp
mov
add
test
xchg
mov
pop
pop
xor
inc
inc
jns
lds
mov
push
mov
mov
add
add
add
loopne
mov
aas
stos
in
jg
pop
cmp
and
add
pop
aam
repz
and
fs
in
jg
loopne
das
imul
adc
xor
data16
in
cmp
sbb
les
pushf
fidivs
popa
sbb
ljmp
mov
xchg
aad
xorb
out
movsl
xchg
cs
add
mov
xchg
jp
add
inc
bound
jnp
int3
mov
dec
xchg
punpckhdq
xor
dec
xchg
aas
xchg
aad
jge
push
or
std
fisttpl
adc
push
sbb
arpl
add
addr16
pminub
xchg
pop
in
addb
pop
push
arpl
bound
xor
rorl
lret
add
mov
lret
jne
jle
or
es
in
jb
insl
mov
hlt
dec
or
lods
aam
roll
xor
mulb
jle
push
fisttps
loop
add
fnstenv
in
xchg
fs
mov
push
sbb
push
fsubrp
cmp
pop
mov
mov
in
inc
ret
es
push
les
int
test
out
mov
mov
pop
pusha
pop
insl
lcall
push
clc
cs
pop
push
pusha
add
cs
bound
rorb
mov
push
ret
imul
push
dec
push
ljmp
add
pop
sahf
sahf
mov
fwait
shll
fidivrs
push
inc
xchg
sbb
pop
shlb
dec
sub
cltd
pop
pop
in
mov
sahf
jnp
loope
mov
adc
stos
add
jb
sbb
cmp
mov
xor
mov
push
andb
push
into
sbb
imul
jbe
cvttps2pi
inc
mov
imul
stos
jl
and
add
jnp
lods
jns
insl
jle
stos
dec
adc
xor
xchg
jle
sarb
test
jb
insl
pop
cmp
and
popl
aad
jne
hlt
lret
das
inc
adc
xchg
cli
xchg
mov
addr16
pop
aam
nop
mov
inc
aas
pop
xchg
hlt
xchg
mov
aad
push
xchg
mov
xor
sbb
out
ljmp
pop
inc
sbb
mov
push
adc
js
movsb
nop
fcmovb
pop
lgs
mov
pop
enter
inc
cmp
addr16
movsl
fdecstp
outsl
divl
subl
push
mov
cmp
shlb
ja
push
in
inc
sbb
mov
shl
imul
enter
cmp
sub
mov
addr16
mov
lods
les
or
aad
jbe
add
push
popf
sbb
lods
out
dec
mov
push
in
pop
test
mov
add
jbe
imulb
mov
cmp
push
roll
jmp
lds
and
into
push
rorb
adc
add
push
rorl
leave
insb
mov
dec
xor
jecxz
jno
xchg
call
scas
lret
mov
decb
and
fs
jmp
outsl
push
addb
dec
pop
repz
mov
into
adc
dec
test
je
lahf
jmp
ss
lods
push
and
push
push
mov
imul
cltd
pop
in
and
fwait
mov
ds
imul
add
inc
movsl
insl
out
pop
xchg
dec
cli
mov
sbb
dec
rcl
adc
mov
jo
hlt
addr16
int3
mov
scas
mov
dec
push
add
xchg
inc
daa
pop
nop
loop
cmc
mov
loope
pop
test
jle
and
mov
push
mov
test
data16
mov
sbb
mov
orb
setno
std
dec
fiaddl
pop
shlb
mov
fwait
cwtl
add
loopne
mov
jg
mov
mov
imul
in
std
add
sbb
call
jno
or
fsubl
dec
xor
mov
mov
jecxz
movsb
jmp
addl
add
faddp
inc
mov
fdivrs
aam
pop
cmpsb
lods
mov
aaa
les
shrl
cmc
fimull
add
stc
movsb
cmp
lahf
fcomps
fcmovnb
mov
fcompl
add
cli
in
mov
ss
dec
mov
sub
sarl
rorl
lahf
add
mov
movl
adc
ds
xchg
xchg
dec
push
mov
rorl
push
xchg
cmp
loop
int
std
cmpsl
jo
cmp
or
inc
mov
pop
int3
je
push
mov
shr
mov
cltd
xchg
inc
jge
insb
jae
bound
call
daa
add
aas
int3
and
pop
or
inc
fdiv
push
idivl
xchg
in
add
cmpsb
sbb
in
mov
std
mov
pop
jg
sbb
cmp
addl
jnp
popa
xor
add
shll
mov
xchg
std
mov
dec
pop
cltd
fnsave
mov
and
ror
push
lcall
xchg
in
sbb
dec
fisttpl
or
rcl
mov
fiadds
sub
loope
and
mov
cli
into
ret
sahf
xchg
cld
sub
nop
movsb
push
jp
std
mov
and
cmp
mov
push
int3
aas
cli
bound
mov
fadds
pop
mov
in
sub
dec
pop
pusha
and
in
andl
fcoml
mov
rep
call
mov
jl
cmp
aam
jno
jns
dec
shll
or
mov
and
mov
and
xchg
aas
xchg
sub
jnp
xchg
fisubrs
mov
sbb
xorb
inc
adc
dec
pop
fidivs
mov
and
jno
cmpsl
mov
cmp
inc
out
test
cwtl
mov
fnstenv
xchg
mov
jbe
mov
arpl
icebp
je
sbb
cmp
cmp
sbb
mov
test
ljmp
ljmp
iret
push
stc
adc
sbb
adcb
clc
push
and
mov
subl
int3
shrb
sub
and
sbb
mov
movsl
dec
mov
pop
dec
fnstenv
call
xchg
sub
mov
scas
inc
lock
rcr
inc
push
flds
sbbb
add
add
add
add
rclb
aad
adc
jmp
test
lock
and
add
imul
sbb
cwtl
cs
inc
and
jbe
adc
movsb
jnp
push
push
xchg
fstl
xor
rcr
fldt
mov
enter
inc
mov
inc
mov
mov
pop
subb
popa
xor
push
mov
or
mov
pop
test
add
int3
inc
and
add
inc
pop
push
pop
xchg
mov
push
dec
xor
cmp
fwait
imul
imul
idivl
push
sbb
and
xchg
fdivp
clc
test
lret
test
ja
mov
jge
or
pop
jo
fisubs
bound
jecxz
lods
in
icebp
dec
push
aaa
scas
jno
cmpsb
inc
or
or
std
fwait
add
xchg
mov
xchg
sub
xchg
sub
push
js
cmp
sahf
mov
jmp
add
cmp
inc
fs
or
pop
inc
xor
adc
aad
mov
fldcw
pcmpgtd
add
xor
sub
cltd
out
fwait
jnp
pushf
data16
push
cwtl
push
imul
rcl
inc
addr16
or
inc
into
mov
adc
pop
sbb
xchg
shll
adc
cmp
cmp
push
outsl
rorl
mov
repnz
ljmp
cmp
sbb
xchg
ja
dec
xorl
ja
sbb
int
lahf
xchg
ds
push
mov
inc
jmp
pop
dec
xor
je
xchg
testb
outsb
movsb
inc
ja
sahf
xchg
pop
mov
mov
and
sahf
dec
shll
pushf
pop
rcl
lock
pushf
imul
and
cmpsl
pop
dec
jge
pop
xchg
out
jns
mov
mov
data16
nop
daa
nop
xor
aam
mov
bound
or
inc
xchg
mov
mov
mov
ret
xlat
sar
cli
dec
dec
cli
xor
mov
xchg
pop
pop
sub
repz
stos
popf
adc
lcall
loop
shrb
addl
mov
lret
mov
cmpb
lret
jns
rcrb
insb
stc
xchg
jmp
and
push
cmpsb
dec
fmull
inc
icebp
dec
aam
inc
jbe
fs
xchg
scas
lcall
xchg
adc
mov
fbld
mov
cwtl
imulb
sahf
inc
jle
push
or
and
adc
mov
cmp
clc
outsl
inc
mov
dec
xchg
cmpsl
or
or
loop
mov
gs
es
pop
ja
jo
pop
scas
xor
jmp
push
sbb
add
sbb
mov
loopne
arpl
mov
imul
mov
fnstsw
cwtl
arpl
lahf
xor
outsl
mov
lret
xor
mov
inc
lcall
push
adc
mov
lods
fildl
jne
das
out
pop
cmp
cmp
call
aas
sahf
xchg
push
push
scas
movsb
shld
shlb
mov
push
inc
push
and
xchg
push
pop
stos
jae
inc
popf
mov
jl
icebp
cmpsl
mov
dec
fildl
in
mul
adcb
shr
cs
pop
scas
fsubrs
xchg
adc
cmp
pop
and
pop
jnp
mov
push
ja
cli
int3
fnsave
sbb
mov
scas
inc
mov
mov
push
xor
or
scas
in
jl
adc
in
enter
push
enter
stc
fs
lret
icebp
outsb
add
call
out
aas
fimuls
scas
cmp
push
xrelease
repz
or
shl
mov
enter
mov
out
push
mov
popf
loopne
xlat
mov
pop
jmp
xor
inc
mov
adc
sbb
adc
in
jge
dec
pop
jnp
add
and
dec
ret
dec
push
sbb
pushf
xacquire
lods
pop
call
movsb
pop
xchg
jnp
ljmp
ss
aas
pop
lret
xor
fldenv
pushf
mov
gs
outsl
pop
mov
andl
push
int
pop
dec
mov
push
jnp
cmp
xor
icebp
or
jge
xor
cli
cmp
inc
jne
lock
jmp
jo
inc
push
push
lret
xchg
sub
or
addr16
dec
xchg
mov
add
pushf
sub
scas
add
ffreep
sahf
xchg
lret
bound
int
and
lret
dec
add
cmp
xchg
jg
cmc
mov
fwait
rcrb
sbb
inc
daa
mov
mov
fidivrs
in
andl
sub
push
enter
test
rolb
int
sbb
mov
mov
js
add
testl
lahf
sub
dec
sahf
sbb
incl
xorl
add
push
dec
jns
jge
mov
bsf
mov
inc
cs
repnz
repz
movsb
cmp
sub
and
xor
jbe
jmp
mov
lods
movaps
sub
xchg
cld
mov
pop
mov
xor
aad
inc
cli
add
sarl
xor
out
lods
fisttps
outsl
cmp
lds
cs
int3
push
sub
push
adc
mov
inc
and
push
push
stc
fcmovu
mov
xor
scas
inc
mov
ljmp
inc
jmp
mov
xchg
aaa
shrb
adc
jb
xor
mov
imul
mov
pop
dec
mov
aas
ret
jne
add
sub
push
lds
out
hlt
push
mov
jl
les
rol
fmul
mov
push
sub
adc
sbb
and
mov
test
mov
xor
ficoms
nop
popl
pusha
fistl
in
shl
jmp
das
sbb
sbb
outsb
jnp
or
imul
lret
sub
popa
push
pop
lret
out
add
dec
jne
xor
lret
push
mov
sub
push
fistpl
ror
xchg
movsb
pop
pop
ret
das
sub
xor
lods
bound
inc
inc
mov
or
je
mov
inc
std
or
in
sbb
ss
pop
outsl
xor
add
add
add
add
xlat
mov
rorb
cmpb
add
and
add
lock
cltd
fildl
adc
rcrl
cmc
pop
mov
and
call
orl
cld
jge
test
sbb
mov
enter
out
mov
and
fwait
adc
sub
jg
ret
push
inc
cltd
jbe
and
dec
cmp
jne
xchg
imul
pop
lret
mov
icebp
in
and
or
mov
aas
pop
add
cld
sub
ljmp
mov
outsl
dec
rcrl
mov
dec
sbb
cmp
out
jne
dec
ret
sub
call
xchg
clc
mov
out
push
out
rcll
or
in
into
adc
sbb
mov
std
mov
sbb
cli
xor
fcoml
incl
cmp
jecxz
mov
mov
or
std
insl
xor
lea
fsub
lret
xor
dec
mov
movsl
xor
rcll
bound
data16
dec
and
dec
dec
pop
lcall
enter
loopne
dec
mov
hlt
movsb
xchg
or
and
sbb
or
into
push
mov
xor
nop
fidivl
or
lcall
adc
jnp
mov
jb
lods
scas
imulb
mov
xchg
repz
pusha
inc
jbe
push
lds
pop
inc
ficompl
jnp
outsl
arpl
arpl
mov
cmpsb
lcall
ljmp
in
mov
or
cmp
pusha
mov
out
ret
xor
cwtl
sub
cmp
loop
int
bound
xchg
xlat
adc
popa
pop
inc
xor
xchg
js
dec
aad
xor
dec
cwtl
lock
in
insb
mov
in
adc
fnstenv
test
stos
out
js
loope
gs
icebp
gs
aad
pop
sub
sti
jp
push
mov
js
xchg
data16
sub
adc
mov
jae
mov
push
fnstsw
pop
xchg
inc
lret
fcmove
cmp
leave
shrl
ret
aas
mov
imull
sbb
xchg
sahf
and
and
cbtw
xchg
xor
cmp
in
inc
push
inc
jmp
iret
push
sti
testl
xchg
gs
outsl
addr16
loopne
popa
scas
lret
jo
sbb
dec
and
ss
cs
and
jge
ffree
out
inc
fs
jmp
lods
addr16
cmc
outsb
movb
inc
push
inc
lods
mov
xchg
push
cmp
adc
push
ret
push
jl
xlat
cmp
pop
dec
fs
cmp
cmp
ret
adc
orb
fisubl
mov
arpl
xchg
popl
sti
lret
mov
das
lcall
mov
lock
sub
jb
xchg
jae
mov
add
shll
mov
sub
filds
out
push
das
cmpsl
imul
shll
shll
cmc
ss
dec
outsb
pop
xlat
mov
andb
sub
outsb
outsl
mov
fcmovb
fwait
push
sub
pop
xchg
push
push
xchg
xchg
cmpsb
hlt
fdivrl
pop
jb
inc
out
xor
mov
mov
xchg
pop
sub
xor
clc
xor
xor
or
jbe
rcrl
pop
jmp
and
mov
test
or
repnz
mov
mov
pop
icebp
lods
leave
test
xor
ret
mov
out
test
dec
out
xchg
jno
icebp
dec
popf
lret
lret
addr16
fldcw
xchg
enter
mov
and
enter
jle
dec
dec
fstpt
mov
lea
sub
daa
dec
ds
cmpsb
out
js
dec
int
cmc
orb
fcomps
or
shl
jp
imul
rsm
push
imul
push
mov
stc
mov
mov
call
lahf
jo
jle
aaa
pop
mov
and
hlt
mov
xor
test
adc
dec
push
xchg
inc
shrb
fimuls
adc
repz
ret
popf
loope
pop
daa
jno
in
cli
sbb
and
stos
adc
xor
cmpsl
xchg
xchg
mov
xor
mov
mov
aam
ret
das
sub
int
int
mov
pop
push
pop
mov
sub
in
mov
scas
mov
jnp
jno
jg
sbb
inc
dec
jp
or
into
jns
fstl
mov
push
inc
lods
inc
mov
mov
xorb
arpl
cmp
mov
jae
inc
push
lock
pop
aaa
call
inc
mov
mov
mov
mov
push
arpl
jb
cs
mov
push
xchg
push
mov
xor
jns
mov
jns
ret
push
inc
imul
mov
pop
js
xchg
bound
xchg
push
test
mov
jg
in
sub
aam
arpl
rcrb
jns
mov
insb
push
inc
bndstx
add
mov
mov
push
into
adc
mov
pop
mov
and
xchg
insl
fcmovbe
pop
test
mov
lret
push
into
stos
icebp
xor
jbe
aad
cmp
cli
inc
mov
pushf
jle
and
sahf
and
inc
jns
xor
leave
test
out
pop
mov
pop
outsb
data16
push
push
repnz
pop
add
jne
mov
jne
icebp
jb
sbb
addr16
lea
scas
inc
lds
mov
jp
xor
add
mov
mov
jl
mov
add
call
sub
jb
adc
lds
push
je
sahf
fs
icebp
cmpsb
xor
mov
xchg
rclb
jle
shlb
and
clc
idivb
dec
aad
or
movsl
pop
jb
fwait
add
xchg
xchg
cmp
or
and
pop
insl
movsl
or
inc
sbb
mov
pusha
xor
or
add
shll
shl
icebp
cmpsl
aad
out
enter
mov
add
jns
jns
js
pop
and
loopne
xchg
xchg
and
push
ret
repz
fcom
or
mov
pop
xor
ja
mov
mov
cmp
imul
and
repz
movsb
adc
movsb
mov
cmpsl
dec
pop
incb
add
pop
add
cmp
mov
mov
shll
push
mov
pop
fcmovnbe
shll
pop
xchg
bnd
push
das
or
sub
jge
loopne
leave
insl
ljmp
lret
popf
hlt
stc
adc
mov
negl
mov
mov
lret
pop
lret
jno
outsl
mov
inc
push
inc
jmp
jl
cmp
stos
or
jg
lods
mov
adc
xchg
mov
push
xor
xor
mov
cmp
push
mov
cld
pop
fwait
loopne
icebp
xchg
mov
mov
xchg
xor
adc
mov
dec
push
sbb
repnz
pop
sbb
mov
jp
mov
inc
mov
adc
sub
sbb
sbb
lret
shl
pop
push
dec
dec
adc
cmpsl
push
push
lds
xlat
out
mov
cmp
adc
xor
add
xchg
and
sbb
mov
orb
int
push
sbb
mov
jmp
into
notl
xchg
sarb
and
or
mov
pop
shlb
shll
add
pop
xchg
jmp
outsl
ret
jle
cld
jae
mov
push
movsb
lods
adc
je
add
shl
jg
scas
pop
mov
sub
leave
push
sbb
mov
movsb
es
xchg
insb
shr
xor
mov
mov
out
sbb
stc
cmc
jmp
clc
nop
fiaddl
imul
inc
test
adc
inc
lods
cltd
mov
cltd
mov
mov
mov
rolb
pop
jl
enter
ds
loopne
xor
nop
push
hlt
movsl
stc
enter
add
js
mov
add
xorb
push
inc
lods
and
rcrl
and
inc
das
loope
stc
push
adc
xor
sbbl
xor
jns
cmp
mov
cmp
sub
call
xchg
dec
mov
insl
inc
fists
cltd
mov
imul
and
xor
lea
adc
jmp
pushf
sti
push
and
mov
xor
ret
or
pushf
inc
movsl
in
out
fistps
cmc
inc
clc
int3
out
or
adcb
dec
cmp
mov
pop
pop
adcl
sbb
adc
jmp
scas
push
push
les
out
aad
icebp
mov
or
subl
jle
cmpsl
addr16
cwtl
fisttpl
imul
cmp
dec
and
cmpsb
idivl
xchg
pop
in
jns
cltd
adc
ror
stc
pop
testb
xchg
leave
cmp
mov
xchg
mov
jo
cmp
stc
imul
std
repnz
dec
jo
iret
mov
shlb
insb
adc
leave
and
adc
pusha
out
jb
fdivrs
sbb
mov
adc
in
sub
mov
int
mov
arpl
dec
mov
roll
std
ljmp
pop
jle
scas
push
cmp
dec
outsl
ret
mov
dec
jp
loop
xchg
xchg
jmp
and
push
pop
mov
push
inc
int3
addb
jb
out
add
ds
fnstsw
adc
sub
inc
out
scas
mov
movsb
cld
xchg
mov
call
test
inc
fmuls
mov
jne
pcmpgtb
icebp
clc
mov
fstpl
movsl
fcmovne
popl
popa
leave
js
mov
and
inc
fisttps
out
push
das
rcl
mov
push
sub
add
xchg
pop
cmpsb
dec
adc
push
dec
jmp
lock
xor
jo
jb
jg
movsb
idivb
adc
xor
loope
shrl
and
lods
pop
push
adc
add
stos
adc
nop
cmp
cmp
inc
pop
clc
mov
jl
jb
jle
push
test
or
sbb
and
andb
pop
ss
mov
adc
ret
push
dec
jne
icebp
pop
lods
xchg
in
mov
adc
cmpsl
xor
or
pop
add
add
mov
cmpsl
cmpsb
mov
adc
ret
jb
push
cmp
je
ja
outsl
jmp
push
hlt
xor
sahf
loope
scas
dec
ljmp
cld
add
in
xor
in
xor
sub
mov
ret
push
outsb
mov
cmpsl
out
dec
imul
mov
mov
mov
sbb
into
pop
mov
and
dec
mov
mov
or
jae
mov
xchg
xchg
mov
push
cmp
add
mov
subl
call
pop
cmc
cmpsl
aad
jns
js
jecxz
and
jl
int
movsb
outsb
mov
sub
sub
in
andl
sbb
sbb
fnstcw
sbb
inc
es
arpl
cmp
and
xchg
movsb
jmp
inc
fcomps
imul
es
and
testl
push
fmulp
pop
push
sbb
ret
jb
jb
xchg
cld
mov
inc
push
xor
in
mov
cmp
cmp
cmp
sbb
stc
mov
sahf
fcmovnbe
aad
push
shll
pop
test
and
aad
jmp
pop
or
aaa
movsl
jge
jns
test
mov
xchg
dec
cmp
aad
mov
flds
jmp
insb
jbe
and
movl
test
jle
or
pop
out
jmp
jg
repnz
mov
rcll
fadd
or
jl
lods
add
ljmp
es
adc
or
mov
mov
dec
out
xor
push
movsl
sub
rcl
popf
scas
lea
push
fcoml
xor
mov
adc
ljmp
sbbb
das
cli
in
aas
sahf
and
lods
lret
inc
call
or
fdivrl
sbb
jae
add
sub
xchg
es
push
adc
and
dec
mov
lea
clc
add
mov
ja
insb
in
andb
mov
movsb
scas
imul
adc
arpl
push
mov
mov
jecxz
hlt
jmp
xchg
adc
movsl
jo
inc
mov
mov
out
pop
in
pop
ljmp
add
add
add
dec
jbe
ja
sub
lret
ds
add
add
add
lock
sti
jb
pop
mov
cmc
inc
add
