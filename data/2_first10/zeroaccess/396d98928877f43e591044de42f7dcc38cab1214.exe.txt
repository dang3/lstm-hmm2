push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
or
push
idivl
enter
out
lods
imul
xchg
insb
mov
fnstcw
nop
repz
sbb
jp
push
insb
imul
rcr
sbb
sbb
loopne
xor
notb
push
push
ss
mov
vpbroadcastw
loop
mov
mov
scas
push
mov
shrb
ror
xchg
mov
jmp
stc
sbb
aam
subl
mov
pop
ds
out
aad
sbb
inc
push
xor
cmpsb
les
xchg
sub
xchg
add
and
gs
out
mov
or
lock
dec
cli
clc
inc
das
and
xchg
dec
fs
lcall
xor
push
lods
jge
inc
or
xor
mov
pushf
xlat
inc
and
xchg
and
jns
fstpl
clc
and
inc
pushl
xchg
pop
add
pop
inc
dec
push
jecxz
cmp
sub
movsb
mov
test
push
scas
div
scas
movsb
dec
xor
fadds
test
jo
in
std
inc
mov
stc
les
jle
fucomip
inc
scas
out
sub
dec
sbb
ja
dec
bound
ret
xor
adc
xchg
add
jp
loop
push
popa
cld
mov
fsubl
pop
fwait
out
daa
ljmp
xchg
dec
in
into
test
and
push
sbb
add
mov
push
sbb
lods
sti
mov
popa
pop
std
sub
popa
cmp
data16
cld
push
pop
lret
adc
jmp
xchg
fwait
fwait
packuswb
mov
sbb
mov
loopne
pop
jecxz
scas
sub
adc
jae
add
xchg
mov
jo
xchg
push
ss
jmp
dec
mov
pop
test
not
add
adc
mov
push
and
icebp
sahf
mov
cmp
lahf
int3
call
shrb
rcr
out
ja
xlat
xorl
fs
inc
mov
inc
fwait
mov
ret
push
rolb
mov
out
pop
dec
movsl
rcrb
lods
sbb
les
fwait
imul
sub
xchg
aad
iret
dec
dec
pop
leave
in
dec
insb
jl
sbb
jge
fldcw
cmpl
push
aaa
add
or
inc
js
rcr
lret
aam
rorl
inc
jecxz
stos
cmp
test
loopne
xlat
pusha
data16
jmp
icebp
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
mov
or
adc
adc
inc
ljmp
lret
sub
jnp
mov
fcomps
mov
fs
jnp
pop
add
jl
nop
jne
aam
aas
in
adc
and
mov
jl
cwtl
popl
mov
mov
push
sub
push
mov
and
stos
pop
cld
rcl
notb
lods
pushf
sarb
outsl
pop
and
std
or
dec
and
data16
add
insl
mov
lcall
adc
hlt
fnstcw
jne
mov
sub
std
xchg
and
pop
push
inc
hlt
mov
addl
fnstenv
adc
jb
sbb
mov
cmpsb
insl
push
movsb
jb
cmp
lds
or
mov
fcmovbe
adc
mov
andb
push
loopne
cmp
mov
cmp
mov
repz
cmpxchg
sbb
stos
sbb
mov
fldenv
jecxz
xchg
nop
xchg
and
jmp
ffree
adc
pop
adc
push
push
push
sub
fstl
ja
jb
repnz
pop
fwait
xor
bound
inc
mov
in
shlb
push
das
cmc
push
jo
idivl
or
sub
xchg
dec
mov
adc
sarb
in
pop
pop
or
aam
lds
hlt
push
ficoml
jp
mov
pop
mov
fsubrl
insl
shl
cli
inc
aad
mov
adc
xchg
jne
mov
aaa
inc
push
dec
or
mov
cli
shrb
sbb
movsl
inc
sbb
xchg
lret
insb
pop
ret
inc
dec
aam
jp
leave
xor
ret
gs
stos
divb
das
insb
xchg
in
sbb
jb
push
sarl
sbb
in
mov
or
cmp
mov
hlt
pop
xchg
in
aas
add
jb
cld
mov
roll
mov
mov
sub
pop
shlb
mov
hlt
push
mov
mov
xchg
pop
outsl
jg
insl
mov
push
jp
inc
loope
adc
mov
fcoms
push
sbb
and
scas
call
xchg
mov
rorl
enter
push
sub
inc
cmp
loop
sub
cmp
js
xchg
pop
mov
jl
lods
shr
shlb
dec
popf
scas
and
scas
lcall
jle
push
imul
or
rolb
mov
cmpsb
shll
pushf
lods
aas
xchg
repz
pop
lods
lods
adc
and
push
out
mov
mov
popf
push
mov
sub
mov
daa
push
cmp
addb
andl
lods
inc
ss
js
popf
fisttpll
out
pushf
xor
fildll
sahf
lea
or
lret
es
pop
xchg
mov
push
sbb
imul
dec
inc
lds
out
pop
mov
fcomps
push
repz
lds
aad
lret
mov
in
loopne
sbb
lods
or
mov
or
test
in
inc
push
inc
aaa
add
lret
dec
add
cmp
comiss
pop
xchg
imul
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
ret
es
out
mov
pop
xchg
dec
loope
sbb
outsl
ss
test
movsl
pop
pop
pop
shlb
sbb
dec
ror
daa
xlat
adc
into
xor
xchg
data16
dec
cmp
push
inc
leave
les
and
or
int
test
fs
inc
jecxz
imul
xlat
inc
xlat
pop
and
cs
and
out
stos
inc
push
sub
out
mov
xabort
icebp
xchg
sub
mov
mov
leave
aaa
mov
in
sbb
fldenv
adc
xor
fcomip
or
test
stos
es
xor
rcrb
cld
dec
and
jge
adc
in
cmpsb
sub
inc
xchg
inc
sub
jmp
xor
enter
mov
inc
adc
inc
movsb
aad
cmp
fs
int3
inc
inc
sub
adc
adc
stos
ss
mov
scas
sarb
icebp
mov
dec
and
and
inc
mov
adc
cltd
push
add
aad
mov
popa
dec
or
mov
icebp
lret
mov
jne
int
push
xchg
mov
rcrl
mov
das
daa
jb
lds
and
push
loopne
inc
movsb
insb
sub
int
xchg
aad
jl
js
imul
adc
push
pop
sub
adc
out
les
jae
cmp
xor
sti
hlt
cmpsb
sub
sbb
mov
inc
sub
in
outsl
dec
aaa
push
jp
pop
enter
mov
adcb
xchg
sti
or
push
jmp
pop
push
inc
lods
push
cmpsb
out
pop
enter
scas
push
dec
imul
dec
adc
in
push
mov
sub
orl
or
ret
mov
mov
repz
cmc
test
push
sbb
sbb
aad
loopne
mov
adc
aam
stos
repz
mov
cld
mov
jecxz
push
jmp
test
pop
fs
adc
movsb
data16
mov
xchg
and
xor
movswl
bound
rcrl
push
adc
movsl
xchg
or
je
mov
cmp
call
movsb
cli
out
mov
sbb
adc
fldln2
push
cmp
mov
adc
and
in
pop
sub
in
fdivrp
fwait
in
ljmp
fisttps
add
push
mov
stos
cmp
aas
stos
sbb
idivb
push
ret
shlb
arpl
pop
dec
adc
lret
mov
daa
jae
dec
and
cmc
sarb
std
pusha
enter
icebp
out
mov
mov
push
inc
pop
enter
ret
sti
inc
ds
loope
or
xchg
out
int3
and
sbb
addr16
cltd
divl
dec
adc
add
scas
sub
pusha
lret
rolb
insl
inc
adc
add
push
sub
int
roll
jb
push
cmp
or
imul
or
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
les
call
adc
adc
cli
lcall
and
addr16
push
xchg
cmpsl
sub
fs
outsl
fwait
cmpsb
pop
mov
jp
cmp
inc
in
je
mov
loop
jge
or
and
xchg
jp
dec
and
lret
js
ja
push
xchg
mov
dec
arpl
fwait
shrb
dec
pusha
xchg
jo
icebp
add
push
ds
cmpsl
out
jnp
subb
add
push
loopne
xor
daa
scas
test
shrl
in
insl
xchg
stos
mov
sysenter
fnstsw
and
add
insb
and
jge
sbbb
pop
loopne
pop
mov
jns
cmpsl
inc
ds
sbb
scas
sbb
cmpsl
or
inc
es
call
xor
aad
push
sbb
add
pop
mov
and
and
jmp
pop
or
adc
stos
js
mov
movsb
mov
leave
shll
sub
ss
push
cltd
idivb
and
pop
dec
aaa
inc
arpl
xchg
and
out
pop
jnp
mov
xor
fistpll
orb
nop
inc
bnd
mov
bnd
dec
mov
push
fstpt
cmp
dec
imulb
pop
jno
aam
aad
inc
xchg
pop
mov
sub
cmp
cltd
push
data16
jae
movb
jle
cmp
push
sub
movsl
aaa
pop
jae
les
call
out
iret
inc
lds
jns
mov
push
fdivr
cmpsl
xchg
sub
les
and
mov
mov
and
fwait
cmp
add
inc
sbb
jecxz
jno
addr16
sub
dec
fsin
pop
xor
pop
fdivp
mov
sub
stc
std
jb
repz
add
clc
mov
inc
cmpsb
adc
outsb
jns
repz
inc
popf
pushf
test
out
std
fs
jp
cmp
inc
mov
mov
push
roll
push
mov
xor
mov
pushl
adc
loop
je
hlt
pop
add
pop
push
and
aam
inc
mov
mov
aam
or
xor
and
jecxz
int
xor
aad
sahf
fsubr
test
out
push
std
nop
push
jo
andl
cmpsb
fcomi
stos
and
or
into
push
fs
int3
aas
outsb
or
cwtl
adc
popa
mov
mov
out
stc
lea
push
sub
aam
in
mov
outsl
dec
jecxz
mov
fwait
jg
jbe
jge
imul
fwait
stc
fstpt
xlat
in
xor
sub
sti
clc
mov
cmp
lcall
jecxz
lahf
js
mov
lods
push
add
not
movsl
add
mov
xchg
and
mov
pop
bound
lahf
ja
shll
sub
test
mov
decl
das
cmp
xchg
xchg
mov
in
std
sub
push
cmp
mov
inc
push
inc
or
outsb
inc
pop
xchg
lret
mov
adc
sbb
enter
add
sbb
cmp
in
pop
mov
insb
xor
cmp
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
push
les
adc
adc
mov
and
and
int3
movsb
dec
mov
mov
loopne
jns
dec
mov
xchg
jg
cmp
stc
adc
or
jmp
mov
xor
jnp
mov
ljmp
push
es
out
test
pop
adc
and
mov
sub
xor
aad
cli
sbb
test
aas
sub
roll
push
or
fst
icebp
xor
sub
or
xor
xorl
inc
enter
fstps
cmp
mov
push
xchg
enter
cmc
es
dec
pop
sti
fnstsw
dec
popa
cwtl
cmpb
mov
push
or
push
xchg
mov
gs
stos
jo
cli
mov
dec
ljmp
jecxz
rclb
pop
mov
insb
inc
enter
fcmovnbe
lds
mov
push
lea
pop
pushf
adc
pop
stos
movsb
add
orl
outsb
lea
mull
insl
mov
adc
outsl
mov
pop
xchg
push
inc
inc
sub
insl
bound
sub
mov
loop
pop
sbb
nop
jp
pop
pop
lcall
xchg
fs
inc
and
into
imul
dec
lods
xor
ffreep
mov
movsb
inc
cmovns
stos
inc
lcall
cmpsb
out
add
inc
setae
jo
cmp
cmp
mov
sbb
rol
sbb
popa
cmp
push
ss
or
pop
test
nop
adc
mov
stos
add
inc
and
cmpsb
aaa
sub
adc
xlat
xchg
xchg
jmp
lcall
inc
pop
pop
xchg
and
or
cmp
imul
mov
js
das
mov
popf
push
jo
ret
mov
jns
out
push
and
pop
jmp
jg
jl
pop
jmp
push
scas
sbbl
loopne
inc
decb
mov
test
loope
jge
pop
cmp
jecxz
imul
dec
dec
sar
stos
adc
repz
pop
mov
hlt
pusha
sbb
push
dec
push
dec
jecxz
rolb
cmp
jae
jno
jmp
lret
push
jecxz
add
push
imul
sbb
inc
adc
popa
push
push
cld
mov
xchg
dec
jp
ds
jl
cmc
mov
loop
ret
js
and
inc
push
add
mov
sub
arpl
xor
jl
mov
cltd
adc
xchg
xor
inc
cmp
sbb
inc
mov
lahf
popa
pop
push
inc
call
mov
inc
add
mov
sarb
ror
cmp
movsl
sub
js
jae
adc
lret
mov
add
mov
nop
es
push
sbb
lahf
roll
xchg
mov
movsb
dec
dec
cltd
dec
push
incb
movsl
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
inc
and
popf
repz
adc
adc
lods
ljmp
inc
dec
mov
sbb
mov
aas
xchg
out
ss
inc
repz
mov
imul
xor
jmp
push
push
push
sar
test
mov
pop
xchg
jg
add
mov
pop
or
jnp
dec
scas
jl
cmp
jno
mov
sbb
std
adc
jb
xor
xchg
inc
xor
sub
dec
mov
adc
rdmsr
pop
cmpsb
mov
ds
sub
add
into
mov
cltd
push
sbb
cmpsb
iret
xchg
enter
xor
pushw
pop
inc
pop
sub
fnstsw
sub
mov
sub
xchg
jae
test
jg
xchg
pop
in
sbbl
daa
fs
ljmp
jge
fistps
fsubrl
and
subb
js
xchg
rcrb
pop
into
xchg
movsb
and
stos
mov
sbb
fisttpl
ljmp
cmovne
xchg
push
add
shrl
xchg
push
or
adc
inc
or
mov
int
std
jl
pushf
in
je
mov
dec
xchg
jmp
adc
mov
hlt
aad
push
mov
jecxz
ds
repnz
xchg
and
repz
sub
xchg
ljmp
mov
xchg
enter
rolb
fs
or
cmc
inc
pusha
cs
lahf
inc
push
dec
mov
pop
daa
aam
adc
sti
mov
lods
xor
jb
leave
mov
dec
pop
dec
cmc
leave
dec
nop
cmp
out
push
arpl
and
jae
or
adc
sbb
or
stc
cmp
and
fsin
dec
push
xor
sti
pop
add
jle
stc
daa
pop
subl
out
std
xchg
aaa
into
and
popf
pop
aad
xor
mov
dec
sarb
test
cmp
cltd
outsb
jne
pop
mov
pop
jno
aam
add
rorb
and
and
mov
outsb
mov
pop
add
movsl
in
loopne
cwtl
mov
xor
push
das
int3
cmpsl
add
clc
inc
repnz
test
and
popf
dec
adcl
mulps
and
add
data16
or
stos
push
mov
mov
decb
inc
cmc
ficoml
rorb
je
fs
divps
enter
jnp
ja
ss
repnz
ret
outsl
lods
mov
roll
lods
sub
cs
lods
out
add
jle
and
jbe
pop
and
incb
jnp
add
mov
sub
out
mov
pop
or
lock
pop
loope
sbb
mov
dec
aad
sahf
jle
lods
sub
negb
mov
mov
xchg
inc
inc
mov
mov
in
sahf
lret
or
jge
mov
popf
outsl
data16
mov
jmp
xchg
cltd
bound
and
push
jo
fcomps
call
adc
adc
xchg
das
out
iret
dec
out
insl
cmc
add
pop
adc
hlt
sbb
pop
sahf
mov
or
in
pop
lea
or
lea
mov
out
inc
dec
popf
add
dec
fnstcw
push
pminub
jmp
mov
into
aam
jge
movsb
xchg
cmp
mov
insl
push
shrb
stos
mov
outsl
xchg
icebp
andl
pop
mov
cmpb
sub
add
inc
or
sti
addb
ficomps
in
or
std
scas
jl
xor
fs
mov
mov
mov
nop
mov
mov
mov
and
cmp
adc
andl
pop
mov
imul
mov
mov
and
ret
pop
push
sbb
pusha
dec
lcall
dec
jge
cs
mov
out
notb
cld
enter
push
push
cld
insl
dec
cmp
sub
scas
lcall
push
outsl
xlat
cmpsb
or
push
mov
push
cli
mov
lock
mov
push
fwait
jge
xchg
sub
push
adc
dec
imul
cld
pushf
mov
push
fsts
mov
or
aaa
or
add
in
pushf
ljmp
sbb
lahf
cs
es
test
std
push
dec
push
into
push
shlb
adc
in
out
shll
imul
lret
cwtl
mov
aam
mov
xor
adc
dec
movsl
arpl
andb
push
test
fs
das
xor
cmp
stc
stc
push
add
test
or
cmp
aaa
roll
aas
daa
mov
cmpsb
popf
inc
mov
xor
ss
out
std
fdivr
mov
fs
pop
fcomps
adc
jne
iret
rclb
pushf
or
insl
test
dec
mov
dec
popa
cmpsb
mov
xchg
mov
adc
pop
inc
mov
aas
leave
xchg
dec
ret
cmpsb
pop
mov
or
inc
in
push
data16
shll
mov
or
cld
or
xor
push
jno
enter
jnp
movsb
out
push
push
bound
push
in
popf
data16
push
stos
sti
jmp
pop
ds
cmp
sbb
or
repnz
jbe
std
into
xor
ret
mov
hlt
lret
mov
push
push
sti
cmp
test
adc
add
xlat
xor
test
dec
cs
mov
mov
or
mov
jne
in
fwait
into
push
es
ss
sahf
push
xchg
mov
or
xchg
scas
sub
jno
negl
lret
fisttpll
popf
mov
ffree
jnp
adc
mov
push
cmp
jge
mov
sbb
xor
or
int3
arpl
jb
lods
loope
or
mov
std
jns
jae
mov
shr
pop
mov
pushf
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
pop
cmpb
adc
adc
push
push
loopne
aad
xor
cmpsl
ret
hlt
mov
cmp
pusha
xor
shl
notl
fcmovnb
dec
ss
lock
xchg
test
jp
insl
jl
push
dec
or
xchg
arpl
es
int3
fs
jb
xchg
add
in
lret
mov
mov
dec
daa
push
push
dec
cs
loopne
mov
leave
xchg
cli
sbb
dec
jnp
enter
sub
jae
adcb
sarb
imul
test
dec
sbb
push
adc
out
add
xchg
jb
lea
mov
je
pusha
xchg
lcallw
pop
adc
out
hlt
scas
fsubrs
sbb
mov
xchg
pop
pop
fistpl
inc
jmp
xor
es
mov
inc
jne,pt
add
push
sti
add
loope
mov
in
test
or
dec
js
push
and
subl
mov
int3
push
sarl
rorb
repz
jmp
push
scas
fmul
in
cmp
in
inc
mov
test
sbbb
lret
ljmp
dec
int3
jmp
xor
test
inc
jg
aaa
mov
add
push
mov
test
push
pop
cmpb
sub
out
add
int
stos
and
mov
sub
dec
lcall
mov
mov
mov
cmp
iret
cltd
jne
test
pop
in
mov
push
mov
and
idiv
pop
cltd
dec
divb
cli
negl
pusha
sbb
fcompl
ds
ja
dec
push
mov
cmc
ret
pop
push
mov
sbb
rcrl
fsubl
dec
jns
add
mov
mov
stc
cmp
add
adc
lret
sbb
outsl
xchg
stos
xchg
les
fldenv
mov
mov
lods
jae
push
jp
and
enter
mov
add
sbb
and
xchg
jle
sti
adcb
aam
inc
push
les
js
in
cltd
subl
outsb
popa
xchg
sub
add
rolb
imul
xchg
push
sub
sti
mov
lea
mov
test
inc
or
outsl
mov
bnd
mov
push
test
std
mov
aas
jae
loope
add
mov
jne
push
add
sarl
xlat
pop
cmp
jge
mov
rcrb
repnz
fld
lods
push
push
test
cli
mov
inc
push
dec
sbb
rol
test
mov
pushf
es
mov
push
fmul
add
push
sub
outsb
bound
rolb
push
xchg
inc
movsl
shlb
sti
aas
lcall
repz
int3
mov
cmp
push
push
jne
inc
sbb
test
push
push
pop
hlt
cmpsb
fisubs
mov
pop
dec
jecxz
push
ja
fcomps
outsl
movsl
xor
enter
jnp
stos
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
fisubrs
and
adc
adc
jp
mov
cmp
lcall
jg
mov
into
mov
sbb
xor
pusha
aam
sub
popf
int3
pop
adcb
flds
push
add
adc
stc
mov
cmp
sub
mov
sbb
mov
cwtl
loope
and
out
out
sarl
cmpsb
cli
xchg
jno
hlt
test
adc
mov
in
fistps
ret
mov
dec
sbb
dec
jp
or
cli
dec
out
icebp
iret
sbb
or
roll
repnz
fcomps
xor
outsl
jl
pop
mov
xor
add
insl
xor
inc
mov
mov
mov
push
movl
dec
inc
int3
outsb
mov
adcb
out
iret
and
xchg
in
xchg
push
cmp
out
cmpsb
xchg
insl
pushf
aaa
bound
dec
xor
icebp
or
add
loopne
push
test
bound
sahf
xor
sbb
jae
push
mov
fwait
icebp
shlb
testb
mov
addl
aas
xchg
push
sti
imul
sbb
hlt
cmp
ss
pop
lahf
pop
cmp
ds
fisubrs
xchg
stc
pop
and
xor
xchg
in
mov
mov
adc
cld
pop
jecxz
pushf
mov
pop
stos
mov
push
cmpsb
and
add
mov
mov
jne
in
sub
in
adc
mov
and
in
xchg
ja
lods
lea
nop
hlt
push
lods
and
addl
inc
xchg
cmp
xchg
lret
xchg
or
lahf
lret
push
push
xorl
repz
push
pop
repz
mov
sub
aad
loopne
subps
mov
push
leave
clc
aad
rcrb
je
jp
jge
ffreep
rcr
out
out
lds
jne
jo
and
jle
or
repnz
mov
pushf
mov
jle
roll
mov
popf
push
adc
pusha
rcrl
es
clc
lea
inc
faddp
arpl
pop
fsubrp
jge
add
xor
or
js
mov
push
int3
andb
ss
pop
mov
pop
mov
into
das
aaa
enter
pop
jo
outsl
imul
std
and
es
inc
or
push
and
setnp
push
lds
shlb
test
pop
add
dec
mov
test
xorl
jmp
aaa
out
ret
pop
cmp
in
xchg
push
clc
notl
negb
out
jmp
loopne
mov
mov
mov
lods
jne
pop
lds
ret
cli
mov
je
jnp
pop
add
cmpsl
leave
push
and
add
nop
hlt
daa
push
scas
enter
mov
inc
out
jmp
mov
fsub
data16
cmpsb
mov
and
fimuls
std
sbb
lcall
push
inc
add
add
sub
add
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
sub
mov
adc
adc
imul
xor
movsb
mov
pop
dec
sbb
mov
xchg
mov
add
lret
mov
add
or
divl
adc
cmp
cld
xor
pop
aad
pop
mov
dec
xor
ljmp
inc
mov
adc
cmc
test
iret
or
cmp
xchg
stc
cmp
loopne
sbb
in
mov
push
cmp
scas
mov
imul
mov
sub
sub
xchg
inc
mov
mov
les
xchg
adc
add
and
shl
cmp
sti
subl
xchg
dec
cmc
test
adc
dec
lret
and
mov
cmp
lret
imul
fists
mov
mov
fldenv
imul
xor
inc
pop
sarb
xlat
jg
and
cmpsb
popa
dec
enter
pop
inc
jne
xchg
outsb
mov
lods
mov
rcll
in
std
jmp
adc
faddl
and
dec
mov
add
leave
imull
das
sub
stos
insb
stc
fisubl
int
sub
mov
push
dec
adc
sbb
inc
cmp
mov
clc
outsl
lods
ret
outsb
push
xchg
cmpsl
outsb
repnz
add
out
aad
cwtl
adc
loop
aaa
ret
cmp
jle
rcrb
loopne
cmc
int
pusha
mov
inc
jnp
icebp
mov
cmp
inc
cs
add
and
cmp
mov
cmp
sbb
scas
out
lahf
lret
xlat
and
out
fistl
iret
add
xor
clc
ljmp
popf
mov
xchg
sbb
or
aam
movsl
fldcw
pop
fcom
lahf
negb
out
cld
sbb
pop
cmp
push
les
mov
inc
sub
stos
dec
xchg
lods
mov
mov
sub
in
insl
pop
xchg
dec
add
std
ss
push
and
push
adc
cmpsb
jbe
shlb
add
adc
jmp
pop
or
js
rorl
jl
xchg
mov
jnp
cmp
cmp
sbb
outsl
aam
in
xor
int
push
call
push
and
out
arpl
mov
cmp
in
out
jne
cmpsb
ja
push
scas
jmp
xchg
dec
sbb
cmp
fwait
stos
sub
mov
arpl
push
outsl
lret
pop
stos
pop
mov
divl
arpl
push
dec
pop
rcrb
outsl
add
rcll
leave
jno
cmpsl
push
nop
sbb
loop
sahf
lea
inc
cli
inc
lret
inc
stos
inc
scas
out
or
icebp
jge
pop
dec
pop
shlb
cmp
sub
jae
dec
int
xchg
xchg
sub
and
in
repz
outsb
jo
sti
pop
xchg
xchg
adc
sub
pop
stos
add
leave
jnp
jecxz
ds
xor
jl
sub
cmpsb
add
scas
jle
es
adc
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
in
mov
adc
adc
sbb
fcompl
stc
js
pop
cmp
push
lods
push
sbb
jbe
mov
mov
clc
icebp
adc
sub
sub
mov
mov
test
sbbl
rorb
jecxz
lahf
fs
pop
xchg
popa
cmpl
pusha
xlat
sub
cmp
js
add
lcall
daa
xchg
sbbl
sub
xchg
mov
adc
dec
hlt
inc
add
roll
mov
pop
int3
in
pop
hlt
pop
push
dec
adcl
int
stos
daa
clc
pop
cmc
dec
dec
dec
jnp
inc
je
pop
pop
inc
int
jmp
add
jmp
test
push
or
aas
mov
insl
jb
push
mov
cmp
loope
in
jle
mov
std
inc
loop
mov
jae
add
pop
js
jbe
nop
mov
dec
ljmp
adc
sbb
sbb
cmp
fnstsw
popf
scas
dec
out
out
bnd
mov
cmp
lret
adc
sbb
in
push
xor
push
mov
push
ja
sbb
ret
inc
push
mov
mov
sar
sub
in
pop
pop
sbb
cmp
pop
jp
movsl
cmp
pop
xor
fcompl
loop
mov
in
scas
dec
mov
cmp
dec
int
sarb
test
mov
mov
ret
cs
pop
pop
movsl
inc
mov
es
sub
push
arpl
into
push
imul
clc
sub
xor
jle
mov
fwait
jmp
and
dec
or
xchg
add
stos
lahf
mov
push
push
mov
inc
ret
pop
sub
pusha
orl
and
xchg
pop
pop
imul
in
jge
into
or
pop
icebp
cmp
dec
repz
mov
lock
pusha
add
cli
icebp
mov
adc
pushf
loope
andb
push
mov
push
or
sahf
push
sti
fs
push
dec
enter
loop
test
mov
sub
outsl
int3
test
xorb
enter
dec
enter
stos
mov
xor
sbb
cli
mov
or
jge
rorb
mov
mov
mov
jge
push
stc
addr16
shll
mov
mov
dec
cs
jmp
mov
add
dec
push
aam
fmul
sub
dec
out
lds
in
push
inc
sbb
enter
xchg
dec
mov
fistpll
jle
arpl
inc
stos
cltd
and
outsb
add
pop
sets
mov
xchg
mov
andb
adc
pop
push
mov
pop
or
adc
imul
jg
repnz
shl
stos
push
mov
mull
sub
cmpsb
flds
inc
cwtl
decb
cmp
aas
das
fiaddl
arpl
pop
stos
scas
and
mov
sub
xchg
repz
std
mov
gs
imul
aaa
fwait
adc
shrb
pop
jnp
cld
cwtl
cmp
mov
inc
lock
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
lock
jno
adc
adc
adc
ret
das
mov
push
pop
cmp
cmp
sbb
jno
jo
clc
insb
jne
sbb
hlt
jl
int
out
in
movsl
out
jo
and
scas
push
pop
mov
jae
xor
lahf
andnps
fsts
ds
xchg
mov
lea
cmp
stos
test
ror
pop
or
mov
lds
adc
and
push
sahf
sbb
mov
fldt
adc
push
pop
fisttpll
add
mov
mov
sub
jge
cmp
adc
pop
aam
nop
jmp
and
push
adc
ljmp
fchs
inc
mov
sub
js
jno
and
test
in
cmp
out
mov
push
push
jle
stos
xlat
mov
lds
cmpsb
push
or
in
fstp
dec
inc
xchg
movsb
adc
mov
pop
repz
push
loopne
sti
ficoml
pop
dec
xor
aas
and
mov
ljmp
xchg
out
inc
sub
mov
lea
aas
xor
jb
or
sbb
add
stos
stc
roll
rcll
ss
push
clc
pop
adc
mov
jl
inc
mov
cli
cmp
mov
int
cmpsb
jl
mov
pop
dec
shll
into
mov
std
das
sub
push
inc
jp
cltd
sbb
xchg
mov
sub
sbb
cmp
scas
outsb
insl
xchg
mov
negb
rolb
out
cltd
ret
pushf
sbb
xlat
test
push
out
cmpsl
cltd
xchg
jl
scas
shrb
sbb
push
sbb
imul
in
cltd
shl
cmpsb
adc
push
enter
ss
fstpl
add
cmp
out
cmpb
sub
ljmp
push
lret
xchg
jle
sub
and
repnz
mov
testb
pop
std
push
cmpsl
test
pop
dec
aam
shlb
sbb
test
mov
ret
jae
cmp
jnp
inc
in
out
or
out
test
test
push
lahf
pop
ss
lahf
scas
mov
push
inc
hlt
jne
adc
cmp
in
fsubr
push
call
je
shll
sbb
or
adc
addr16
decb
bound
jg
std
imul
xor
idivl
inc
popf
lret
mov
and
outsl
cld
into
and
stos
leave
imul
mov
mov
insb
sbb
and
lahf
in
cmp
call
mov
add
jmp
repnz
dec
xor
xchg
xchg
pop
pop
les
sti
inc
push
stos
ja
stc
not
test
inc
pop
mov
pop
fwait
sbb
push
hlt
jnp
rclb
jns
adc
cmp
jae
fldcw
adc
xor
jg
out
xchg
clc
scas
outsl
daa
lahf
cld
xor
mov
inc
jg
scas
push
push
jge
aam
jnp
rorb
ret
movsb
xorl
rolb
inc
pop
ret
adc
stos
lret
add
push
inc
cmp
xor
out
xlat
aam
mov
ljmp
inc
int3
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
andb
adc
adc
jle
punpckldq
jg
xchg
add
pop
jg
xchg
pop
out
add
test
inc
adc
test
dec
push
push
pop
push
rorl
clc
jecxz
shlb
cmpsb
sub
and
je
xor
add
cmp
lea
add
adc
es
daa
frstor
push
sarb
add
sbb
je
ljmp
or
jo
popf
icebp
mov
outsb
push
lret
lods
sbb
push
xor
shrb
xchg
adc
push
push
mov
push
fmuls
repnz
inc
aad
inc
mov
add
loop
mov
idivl
insl
adc
xchg
pop
xchg
rcl
mov
cmc
mov
mov
mov
shll
ret
cli
stc
or
ret
addr16
adcb
sub
and
mov
repnz
push
add
or
mov
add
outsl
mov
out
das
push
sbb
add
daa
pop
mov
pusha
push
xchg
jg
sbb
jo
fwait
pop
call
pop
pop
lcall
sbb
jnp
inc
pop
dec
lea
sub
into
jo
sti
xchg
push
in
xor
out
lahf
test
jo
add
cli
dec
add
out
xlat
mov
pop
sub
xlat
stos
pop
and
cmpsl
jnp
loopne
mov
loopne
cmp
ret
iret
push
int
push
jae
ret
or
inc
adc
inc
testl
xor
sti
out
jge
jae
sti
jno
lea
mov
js
loop
xchg
add
andb
sub
and
mov
aam
adc
mov
pusha
jnp
ret
fcoml
aaa
pop
movl
das
inc
jp
repz
xchg
fldt
push
adc
mulb
add
aas
imul
or
movsl
shl
je
and
push
mov
imul
or
test
jnp
inc
inc
roll
xchg
adc
test
push
inc
cmpsl
mov
pusha
call
icebp
pop
pushf
insl
adc
cmpsl
test
pop
cmpsb
fcmovnb
fildl
adcl
in
call
jns
nop
aam
lcall
pop
imul
pop
push
sbb
sahf
cmc
inc
mov
jg
out
sbb
lret
push
fldl
cmpl
pop
fdivs
mov
aaa
fs
shrb
inc
xchg
stos
jne
mov
push
ficomps
repnz
lret
xor
test
repnz
sbbb
add
stos
leave
jo
mov
push
or
fistps
cltd
stos
dec
loopne
mov
xchg
xor
pop
pop
imul
add
into
insb
loopne
mov
mov
pushf
mov
repz
xor
push
jns
das
cmpsl
movsb
sbb
vmovd
lret
cmpsb
mov
loop
push
jnp
out
pop
cmp
xlat
xchg
les
jo
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
ss
scas
fbstp
dec
add
pop
inc
push
mov
or
dec
cld
pushf
jg
xor
adc
fwait
pushf
mov
inc
std
aad
test
call
adc
inc
popf
cmp
ja
cld
mov
and
scas
add
cs
mov
mov
aad
and
fdivrl
xlat
push
repnz
subl
adc
add
or
push
leave
nop
xchg
mov
movsl
inc
xorb
int
mov
xchg
orb
or
mov
jns
shrl
stos
xlat
subb
mov
cs
pop
sahf
dec
outsb
daa
sbb
in
arpl
mov
gs
lcall
add
or
cltd
rorb
xchg
mov
push
aaa
out
fmull
cmp
andb
xlat
pusha
in
dec
int3
jbe
mov
or
ret
xchg
in
or
pop
repnz
cmp
pop
ret
cmp
lods
adc
sub
sbb
pusha
addr16
sub
mov
sbb
push
jno
data16
sub
enter
arpl
sub
jle
jno
cs
push
popf
lahf
add
sarl
mov
int3
push
xor
decb
out
or
push
in
add
cld
imul
enter
cmp
test
popa
leave
inc
mov
sub
mov
pop
pop
sbb
pop
bound
dec
push
insl
sbb
faddl
out
gs
outsl
dec
sub
sub
movsb
xorl
mov
mov
aas
loopne
lcall
sahf
xchg
xlat
pop
mov
sub
loopne
push
inc
pop
adc
pushf
pop
push
aam
cmpsl
sub
std
sbb
insl
and
pop
pop
test
push
mov
mov
arpl
or
and
aam
push
mov
jp
addl
pop
ss
mov
aaa
pop
rcrb
sub
test
jge
jp
adc
mov
xor
pop
cmpsb
jp
movsl
dec
and
mov
adc
adc
xor
scas
mov
lods
arpl
dec
test
xor
xor
shrl
xorl
sub
ss
cmpsl
scas
lcall
aad
cmp
push
xor
fiaddl
mov
jg
test
xchg
jae
xchg
mov
push
pop
arpl
in
clc
push
xor
lods
data16
aam
mov
scas
push
cmp
gs
mov
cli
cmpsb
add
xchg
scas
aad
pop
test
sub
sbb
push
sbb
aam
dec
mov
mov
stc
lock
sbb
repz
lods
faddl
mov
adc
call
and
jmp
imul
mov
vmovaps
push
add
push
stc
in
jns
sbb
or
mov
mov
dec
enter
mov
mov
lret
xchg
mov
jge
pop
or
cmp
mov
dec
rorb
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
stos
push
mov
adc
add
gs
fs
jns
hlt
in
add
sub
inc
outsb
jmp
inc
jle
xor
or
jns,pt
in
cli
scas
pop
or
xchg
dec
jae
test
outsl
mov
adc
mov
addr16
aaa
out
rol
jle
xchg
imull
pop
push
jp
jbe
push
fistpll
ss
pop
fmulp
pop
sarl
sbb
daa
cmpsl
aaa
lret
sub
scas
xor
lret
test
lods
pop
pop
mov
push
je
and
imul
lcall
in
sbb
dec
repz
loope
pop
jbe
es
and
loop
cmp
leave
std
xchg
jle
jecxz
mov
cmp
cs
movl
or
std
mov
jg
out
xor
shr
sarb
xlat
push
sbb
mov
jle
in
push
test
imul
cmp
and
dec
jle
call
imul
mov
jp
scas
push
or
jae
or
add
pop
ficomps
sahf
push
out
fists
mov
and
push
add
mov
mov
push
push
adc
dec
iret
xchg
xor
psubw
leave
das
pop
test
arpl
out
jne
ret
sub
loop
cs
push
push
push
imul
push
sbb
inc
push
cwtl
cli
or
int3
andl
sub
sub
dec
fildl
dec
je
scas
pop
imul
adc
jge
mov
xchg
or
ljmp
rcl
push
and
dec
xchg
ret
or
pop
push
inc
test
mov
arpl
scas
aam
and
fisttpl
mov
cmp
jp
jg
dec
adc
pop
out
shr
jne
mov
rcrb
xchg
pop
lret
sbb
ds
dec
cmp
mov
mov
hlt
sub
enter
outsb
xor
ds
pop
mov
add
mov
sbb
aas
jns
ret
jnp
stos
gs
cmp
es
decl
es
stc
inc
adc
mov
mov
lock
cs
nop
daa
dec
pop
and
mov
xor
test
imul
outsb
sbb
push
arpl
fnsave
mov
out
or
pop
lds
adc
add
out
adc
in
mov
dec
out
sub
outsl
mov
sarb
pop
cmp
sub
xchg
xor
mov
test
pop
test
scas
ret
xchg
mov
push
es
xor
and
inc
lds
les
push
pop
and
jae
iret
pop
push
inc
lcall
cwtl
push
sub
inc
mov
jo
imul
pop
fadd
cmp
cld
shll
stc
ja
divl
ror
clc
frstor
push
clc
add
es
shll
aaa
mov
fstp
out
out
xor
and
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
in
dec
or
adc
adc
ja
push
ljmp
fwait
xor
daa
lret
scas
mov
aad
sub
mov
jbe
test
mov
xor
push
cmp
in
jno
loopne
dec
push
aas
or
int3
jb
xchg
pop
fmull
rcr
aaa
jge
aaa
les
ss
adc
add
xlat
or
inc
test
leave
jmp
inc
bound
pop
aaa
in
js
inc
aam
imul
sub
je
scas
testb
or
mov
in
add
insl
mov
mov
sbb
rcrl
mov
jp
movsb
and
mov
adc
sub
adc
inc
push
or
mov
out
xor
inc
or
jle
xchg
bnd
scas
jp
jle
push
mov
shr
vandps
pop
imul
in
xor
shrb
mov
mov
push
out
or
pop
negl
jo
mov
loope
stc
cmp
mov
in
pop
mov
test
fmull
insl
lods
fcomp
mov
roll
add
pushf
adc
movsb
sub
add
dec
cmp
fistpll
and
xor
hlt
ds
test
sub
jle
lods
cmp
fidivrl
movsb
mov
rorl
adc
push
jns
lcall
fcom
jns
push
xor
dec
inc
inc
nop
orb
mov
shl
in
movsb
fbld
adc
es
jp
leave
xchg
imul
or
movsb
test
enter
aaa
cmp
int
and
orb
outsl
xchg
mov
mov
mov
mov
mov
inc
adc
cmp
add
ja
cmp
push
jecxz
test
and
xchg
inc
xor
stc
in
add
fsubs
jo
movsl
repnz
call
pop
sub
inc
shlb
es
mov
cmc
cli
mov
jecxz
and
push
insb
push
jae
xchg
lods
movl
cwtl
aas
insl
test
push
pop
sbb
jmp
inc
rclb
testb
add
jp
add
fdivrl
test
jecxz
fldenv
xor
sub
jle
push
mov
dec
jle
mov
cmp
adc
inc
sbb
jnp
mov
outsb
inc
inc
xchg
cld
out
or
sub
mov
mov
cld
pushf
jbe
sub
push
jns
sahf
mov
jl
aam
jmp
fwait
inc
xor
lds
mov
jge
enter
pop
adc
add
sbb
xlat
sbb
in
xchg
lcall
ljmp
cwtl
in
rcll
and
xchg
mov
ds
cli
mov
cmpsl
jp
call
sbb
dec
and
imul
inc
loopne
or
stos
sub
arpl
stc
cmp
xor
repz
lcall
imul
movsb
fldz
inc
std
jb
test
insl
push
jl
hlt
inc
jmp
push
cmpsl
repnz
fsubrp
addr16
aaa
mov
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
push
nop
fidivrl
adc
adc
add
add
in
cs
cmpsl
mov
add
mov
fildl
add
aaa
lds
repz
fildl
xor
pop
push
lods
leave
mov
dec
in
push
and
jle
sbb
ret
aam
push
ret
cli
mov
movsl
pop
insb
out
inc
xor
and
out
xchg
mov
dec
push
cmc
lods
mov
push
push
push
ja
repnz
mov
and
xor
dec
cs
pop
fiaddl
adc
mov
fcmovnu
cmp
cmpsl
imul
filds
insl
dec
adc
cwtl
and
repz
mov
mov
ret
lret
popa
push
xchg
inc
xor
inc
dec
insb
jecxz
lock
enter
inc
and
fistpl
push
fildl
iret
sbb
mov
cmpsb
sub
pop
outsl
rorb
sub
jo
cmpsl
pop
stc
and
adcl
adc
mov
jecxz
testb
mulb
push
daa
in
hlt
jle
cmp
gs
repz
and
add
xor
xchg
rcll
call
out
mov
pop
mov
jl
inc
repnz
dec
arpl
out
push
subb
fistpll
cmp
and
sbb
ss
xlat
push
in
repnz
dec
and
mov
push
aad
mov
ret
ljmp
fisttpll
xchg
pop
mov
arpl
jno
sub
stos
inc
sub
mov
mov
mov
add
adc
in
fwait
es
and
adc
mov
stos
and
jne
xor
jne
inc
push
mov
rolb
xchg
mov
outsl
and
faddl
xchg
or
mov
lret
jmp
in
sub
mov
clc
sbb
xchg
stos
sarl
xchg
aam
clc
add
scas
jbe
xchg
ds
xchg
or
xchg
test
mov
aad
fs
add
push
and
lods
push
call
cld
jg
pop
or
jo
inc
shrb
shll
in
dec
adc
gs
dec
out
stos
inc
ret
rcll
cli
sbb
or
sti
out
fisttps
mov
push
test
cmc
cmc
pop
pop
xor
adc
sarl
and
jg
pushf
jns
fistl
add
std
in
adc
pop
insb
inc
dec
aam
and
loopne
or
mov
in
pop
pop
and
test
stos
or
fsubrs
jle
adc
sub
pop
adc
mov
outsl
mov
xor
jbe
movsl
mov
dec
cmp
mov
mov
pop
adc
aaa
sbb
add
pop
popf
sbb
mov
out
add
insb
fbld
aad
and
pop
pusha
ljmp
call
adc
pop
mov
lock
jmp
inc
mov
mov
push
mov
and
popa
jmp
mov
js
lea
xchg
cmp
pop
cmpsb
dec
dec
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
rdmsr
stos
inc
movsb
adc
adc
adc
mov
mov
lcall
mov
fstpl
push
pop
lret
cmp
mov
cmp
add
xor
outsl
lcall
xchg
cmp
or
ljmp
dec
call
mov
in
and
iret
fadds
pop
in
rolb
and
pop
xchg
outsb
and
pop
dec
xlat
mov
dec
addr16
les
jae
mov
cmp
fmuls
push
jb
out
dec
nop
mov
inc
mov
or
add
je
pop
or
test
ret
scas
xor
push
or
inc
nop/reserved
jno
and
fwait
subl
jmp
jno
sub
and
fsubr
in
inc
xchg
test
ljmp
int3
sub
ljmp
jae
cmp
jne
cmpsb
mov
fisubl
push
xor
roll
fbstp
mov
push
mov
ss
push
mov
jecxz
je
lcall
cmp
mov
scas
shrb
cwtl
add
pop
or
mov
scas
add
cs
ja
sub
inc
push
adc
ljmp
jbe
jmp
and
das
fnstenv
xor
adc
jp
aas
push
in
add
cmp
insl
push
insl
push
fidivrl
inc
stos
jge
testl
pushf
sbb
into
jnp
push
rcrb
xchg
fsts
mov
cmp
lock
push
jne
mov
mov
mov
ds
pop
cmp
stc
jmp
std
imul
fmul
out
mov
bound
sti
dec
pushf
add
mov
cwtl
pop
aad
pop
frndint
les
xchg
movl
pop
adc
push
and
fdiv
lea
sti
cli
add
ret
jns
xchg
sbb
pop
mov
cmp
inc
in
push
push
popf
mov
aad
lcall
xchg
mov
nop
popa
sub
je
out
mov
sar
rcll
pop
sti
xchg
dec
pusha
jne
mov
jbe
shr
dec
out
push
outsl
arpl
dec
jle
mov
add
inc
sbb
cmpsb
lret
dec
mov
and
rcrb
xor
adc
adc
push
dec
out
xchg
mov
push
push
mov
jmp
ss
jae
imul
sub
sub
fs
mov
jo
fwait
inc
mov
pop
push
in
in
daa
jp
int3
stc
push
ftst
and
insl
inc
dec
cltd
sub
dec
in
cmp
icebp
add
cli
add
mov
inc
add
and
or
jo
adc
loope
clc
pop
arpl
lds
shll
push
cltd
jo
mov
fcompl
xchg
xchg
xor
in
jo
test
repnz
rcl
push
adc
fbld
stc
adc
cmpsb
mov
pop
xor
mov
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
push
dec
or
adc
adc
lahf
adc
sbb
lret
fcompl
xor
or
jmp
mov
fstps
inc
in
push
fistps
out
fistps
lahf
addr16
sub
dec
mov
imul
push
pop
mov
cmp
pop
stc
mov
mov
jns
arpl
adc
dec
push
cwtl
in
push
cld
pop
iret
xchg
mov
inc
enter
test
fbld
pop
adc
xor
pop
add
fwait
outsb
push
sub
pop
inc
mov
pop
sub
enter
testl
inc
jae
add
lods
push
popa
adc
pop
adc
push
xchg
jp
jge
sub
dec
xor
ja
out
jecxz
enter
xor
xor
mov
pop
or
pop
in
jg
jo
jge
add
inc
jmp
inc
lcall
add
inc
push
jae
rcrb
inc
data16
cmp
mov
das
fisttpl
movsb
pop
sbb
and
dec
pushf
pop
push
pop
repnz
jno
clc
cli
ret
cs
push
icebp
lcall
int3
pop
pop
sbb
add
ja
popf
sbb
std
jbe
xchg
icebp
mov
inc
add
cmp
dec
push
nop
movsb
jb
sahf
je
nop
pop
xchg
loopne
sarb
or
movsl
push
sbb
pop
sbb
xor
push
pop
test
or
pop
adc
push
adc
adc
or
cmp
jge
or
cltd
pop
adc
enter
in
int
popf
xchg
sti
or
sub
ja
and
shrb
mov
cmp
xchg
movsb
daa
hlt
mov
xor
xlat
aas
adcl
sti
das
inc
mov
aaa
scas
stc
and
or
scas
movsl
out
ja
xlat
adc
gs
lea
lods
es
in
sahf
inc
xchg
sub
mov
fcmovnu
scas
icebp
div
mov
cmp
mov
xchg
dec
scas
ret
cmp
int
mov
sarl
daa
ret
mov
xor
mov
out
mov
mov
jge
mov
push
pop
xlat
mov
ret
or
adc
faddl
arpl
push
ds
jb
dec
daa
ret
mov
fisubrl
xchg
data16
or
int3
jnp
cmpsl
mov
dec
mov
inc
mov
mov
pop
ja
pop
pop
addb
and
shll
aad
sbb
ret
sub
ds
cmp
lods
or
jae
mull
sbb
sub
jle
cli
in
or
stos
jnp
adc
in
dec
aad
gs
ja
xchg
mov
sub
cli
icebp
dec
adc
enter
jnp
iret
fcompl
add
sub
mov
andb
xchg
lcall
lods
cld
xchg
mov
hlt
bound
mov
out
sbb
movsl
mov
jbe
push
sbb
rolb
pop
xor
setne
aas
push
xorl
sbb
test
mov
lret
roll
cld
lea
shl
xor
or
add
mov
jmp
xor
and
xchg
pop
test
loope
adc
adc
adc
mov
adc
add
in
inc
or
leave
andl
pop
data16
fcom
sub
lea
cmp
xchg
xchg
aaa
std
cmc
push
add
pop
in
rorb
pop
xrelease
xchg
dec
mov
cltd
out
inc
in
mov
loope
inc
mov
iret
aaa
adc
sbb
lods
arpl
pop
cmp
aas
jecxz
shll
jmp
xorl
cmp
inc
movsb
int
jg
push
scas
push
adc
inc
arpl
call
out
xor
aas
sub
notb
mov
shrl
shlb
jae
jle
pop
popf
dec
cld
jae
movsl
clc
adc
popa
jg
cmp
jge
test
das
out
jb
aaa
js
pop
jae
das
dec
out
filds
pushl
push
les
sarl
rcll
sti
xchg
and
cmp
clc
loop
cli
inc
loopne
cmc
std
aam
mov
lea
pusha
inc
pop
sarb
jb
sbb
jecxz
xchg
int3
push
stc
mov
pusha
in
add
xchg
adc
jl
pop
les
jo
in
dec
enter
add
push
or
mov
arpl
sub
dec
cmc
fs
or
rcll
notl
popa
dec
movsb
and
push
push
rolb
mov
push
push
adcl
adc
push
jl
push
test
aam
xor
xchg
insb
mov
pushf
dec
scas
dec
jge
ja
mov
scas
cld
or
add
dec
jl
mov
xor
add
sub
push
lock
xchg
aad
mov
mov
ret
leave
jg
dec
and
fisubs
adc
or
push
int3
inc
stos
out
xor
adc
and
cs
test
pop
in
cld
gs
shlb
mov
jecxz
fstpt
ret
pusha
div
push
clc
loop
push
iret
sbb
xorl
fstps
repnz
xchg
push
cli
xor
repz
jne
push
lds
jecxz
xor
sbb
shrb
dec
dec
imul
or
fiaddl
jge
xchg
fldt
pop
mov
xor
ljmp
or
cmp
pop
and
sub
xchg
xchg
push
push
in
cmp
jg
sbb
xchg
pop
mov
imul
mov
sub
sub
pop
cmp
mov
add
bound
cmc
cld
test
dec
orb
mov
sbb
xor
add
mov
dec
ja
push
mov
inc
xchg
insl
mov
sbb
std
mov
ret
mov
mov
cld
shlb
sahf
int
call
sbb
jl
loop
xchg
sbb
ret
push
je
bound
push
mov
add
subb
mov
sub
and
int3
jg
clc
sub
sub
or
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
cs
sub
adc
sbbb
das
pushf
cmp
outsb
les
push
push
jp
clc
sahf
mov
xchg
cli
stos
xchg
jp
sbb
sub
leave
mov
ret
mov
jl
push
loope
xlat
cmp
mov
mov
pop
insl
jp
xchg
nop
add
pop
jno
add
jns
out
cmpsb
add
pop
loope
arpl
or
mov
into
mov
mov
andl
jbe
dec
pop
out
js
mov
js
aaa
shr
decb
aam
sti
pop
jno
push
jne
lea
pop
fs
mov
subl
loopne
cmp
xchg
mov
mov
mov
jge
adc
jle
lock
jae
sbb
fwait
andl
adc
pop
or
test
mov
push
call
push
shll
out
or
pop
pop
cmp
faddl
jge
inc
dec
add
ds
pop
xlat
arpl
leave
cmpsl
aas
mov
jo
adc
pmaddwd
imulb
add
imul
or
xor
scas
nop
inc
xchg
out
nop
adc
ljmp
idivl
pop
lods
cmpsl
repz
jecxz
repz
cmp
adc
mov
sbb
push
add
stc
jbe
push
hlt
sub
adc
mov
testb
sub
sysenter
scas
mov
lahf
mov
jnp
push
test
sbbb
mov
divl
hlt
pop
jae
pop
jno
loopne
mov
xchg
jns
sub
cmp
adc
cmp
mov
adc
clc
lahf
es
cmpsl
dec
xor
mov
insl
mov
cli
jg
js
mov
js
ds
movsl
push
insl
gs
ds
or
push
and
test
test
fdivl
imul
jnp
ja
mulb
scas
scas
loopne
ss
adc
lods
mov
pop
out
xor
inc
jp
inc
mov
sbb
test
mov
sbb
xor
mov
aas
add
imul
dec
sbb
mov
addr16
mov
in
fwait
mov
pop
dec
fadds
cmp
iret
mov
and
adc
aam
xchg
scas
xor
das
pop
fisubl
sub
test
hlt
inc
jecxz
out
popf
aam
pusha
fcoml
rcll
sub
mov
leave
into
fcomi
iret
ret
and
add
aam
dec
das
mov
fisubrs
movsb
fs
cli
fs
push
loope
outsb
dec
out
mov
aam
xor
or
aas
mov
inc
pop
xor
cmp
les
les
lret
jae
xchg
ret
je
sbb
pop
add
into
shrb
cli
mov
in
mov
add
add
in
xor
lds
gs
push
outsl
imul
std
adc
cwtl
xchg
jnp
jmp
xor
adcl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
sub
mov
adc
adc
dec
xor
jl
in
fisubl
inc
icebp
cmc
fwait
in
add
push
adc
sbb
icebp
xor
cmp
mov
mov
fcmove
addr16
jae
add
fs
dec
mov
syscall
aad
push
pop
aas
out
inc
mov
fiaddl
mov
in
cmp
push
outsl
and
hlt
pop
push
lock
jo
test
loope
clc
repz
sbb
mov
adc
les
xorb
and
idiv
add
jbe
or
dec
jb
fcmovne
mov
sarl
and
adc
push
int
xchg
xor
push
pop
flds
repnz
ds
mov
dec
and
mov
test
sub
repz
mov
lods
pop
xchg
cmp
pop
ss
lods
int
lret
jl
stc
jnp
cmp
sub
lret
add
stc
sbb
sti
addr16
das
and
mov
mov
mov
into
jns
lods
in
push
mov
cmpsl
jl
xor
ret
xor
sbb
cmpsb
or
pop
jne
xor
lret
sub
or
loop
mov
add
xor
movsb
mov
repnz
sub
mov
nop
je
mov
push
cmp
jg
push
shrd
xor
iret
fisttpll
xor
icebp
aad
push
jne
movzwl
int3
jmp
mov
dec
xor
daa
negl
popf
cld
mov
push
scas
adc
shll
stos
jns
pop
in
ret
je
mov
jns
mov
push
mov
dec
dec
aad
push
mov
bound
dec
out
cmp
and
jb
in
lahf
mov
fsubs
mov
insl
dec
pop
add
and
out
popf
and
and
push
repnz
mov
test
pop
mov
mov
testl
pop
jae
mov
popa
lods
xchg
cmp
cmp
out
mov
dec
mov
dec
ret
push
adc
lds
mov
and
xor
aaa
fdivrs
cmc
std
neg
xchg
sahf
and
pop
outsb
movsb
pop
mov
jb
pop
sub
push
inc
xchg
mov
push
add
stos
sub
cmc
push
mov
adc
imul
push
subl
loop
popf
das
cmpsb
inc
cmc
mov
pop
sbb
in
sbb
sbb
add
out
push
call
push
outsb
sbb
push
hlt
push
dec
mov
and
adc
jbe
popf
shll
cmp
imul
icebp
lea
mov
xor
popf
sbb
or
cmp
dec
xor
int
popl
ret
fisubl
sub
roll
mov
stos
mulb
xchg
fcmove
mov
stc
dec
outsl
das
mov
jmp
adc
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
fwait
sbb
push
clc
std
xchg
xor
mov
test
movsb
dec
fsubs
xor
test
mov
les
jp
pop
jae
dec
sbb
push
mov
ds
int3
add
nop
insl
xor
cltd
cmp
mov
rclb
inc
aad
stc
or
lock
daa
jb
cmp
add
popa
inc
dec
jnp
lods
add
mov
inc
neg
or
inc
movsl
mov
mov
add
and
filds
stos
fwait
out
cmpsl
mov
mov
push
movsb
in
jl,pt
mov
shl
mov
and
xchg
scas
stos
inc
inc
push
inc
shlb
out
aam
sub
xchg
sarb
jnp
scas
mov
nop
push
add
dec
orl
shlb
mov
jmp
lods
push
push
pushf
sahf
jae
repz
insl
adc
shrb
push
and
add
insb
mov
xchg
into
lods
test
lret
lds
outsb
cltd
out
sub
mov
notl
aad
push
xchg
jb
jg
jb
stos
mov
jbe
add
adc
sarl
sub
cmp
outsl
lcall
shr
push
push
jo
and
mov
daa
cmpsl
mov
scas
movsb
test
pop
cltd
and
add
lds
add
aam
fbstp
daa
pop
sub
push
das
pop
push
sbb
outsb
sub
mov
mov
lahf
or
imul
mov
les
lahf
sbb
jbe
xor
cwtl
jecxz
sub
mov
test
mov
xchg
add
inc
scas
xor
ds
cmp
adc
int
fdiv
jbe
pop
ds
ffreep
mov
cmp
loop
insb
cltd
push
mov
or
sahf
icebp
inc
sbb
fidivrs
ret
jno
and
aas
push
and
dec
lds
adc
cmp
mov
mov
sbb
mov
push
cmpl
sti
daa
leave
outsb
pop
xchg
and
movsb
fisttpll
test
cld
shll
jae
xor
psrld
inc
cli
femms
ror
dec
mov
inc
inc
iret
cmp
inc
scas
hlt
incb
jns
pop
cmc
mov
mov
scas
push
out
fimuls
add
mov
pop
call
jnp
xchg
dec
hlt
pop
or
in
outsl
xor
cld
pop
inc
pop
jo
pop
cmp
int3
stc
mov
rorl
push
jmp
or
mov
jp
sub
cmpsl
shrl
inc
in
and
jbe
xchg
add
ror
adc
je
mov
pop
repz
cmp
fucomi
xlat
xor
adc
jmp
repz
movsb
lea
stos
jmp
jge
push
subl
jmp
ljmp
sub
push
inc
leave
jns
xor
repnz
pop
dec
cltd
xor
sub
pop
sub
les
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
insb
sbb
adc
adc
ror
das
or
adc
lret
jno
lret
mov
lret
cmpsl
stos
lcall
nop
pop
sbb
leave
lcall
icebp
lods
iret
in
fimull
mov
jne
movl
mov
inc
pop
and
and
sbb
adc
sbb
mov
push
jmp
in
into
xor
imul
cmp
sbb
xbegin
adc
test
lahf
push
movsl
pop
jge
and
sub
pop
scas
rorl
in
or
enter
nop
xchg
jg
fnsave
cwtl
into
nop
inc
add
and
stos
add
mov
idiv
mov
dec
scas
bound
sub
outsb
in
pop
or
sub
jecxz
sub
dec
pusha
imull
push
scas
xchg
mov
inc
sahf
aad
push
pusha
pop
in
lret
cmp
arpl
xlat
pop
int3
cli
fdivrl
xor
shlb
xor
rcll
dec
movsl
cmp
das
mov
mov
int
xchg
sarb
neg
xor
mov
cmpsl
inc
ficoms
sub
clc
sbb
add
jp
out
or
loope
dec
mov
dec
add
mov
int3
rol
add
or
test
xlat
jg
movsl
test
mov
icebp
scas
and
add
push
push
inc
or
jnp
gs
loop
stos
mov
lcall
mov
inc
jp
mov
mov
push
test
lea
js
jns
adc
enter
push
xor
push
lods
lods
fwait
push
jno
and
clc
movsl
dec
jb
cmpsl
insl
nop
push
mov
lret
jp
xor
fwait
daa
push
push
add
and
test
scas
out
inc
jbe
add
or
lret
mov
adc
imul
mov
xor
mov
add
iret
mov
sub
adc
lret
pop
cmp
movsb
mov
mov
hlt
stos
pop
and
int3
pop
outsl
jo
sbb
jge
lcall
sbb
cmpsb
jecxz
mov
push
daa
and
jnp
sbb
rcr
ret
insb
mov
inc
shrl
push
sbb
push
dec
cmc
rol
in
cmpsl
cmpl
stc
jl
jp
pusha
xor
adc
cmpsb
xor
fstps
lea
xchg
mov
and
int3
push
jne
xchg
dec
daa
mov
sti
jmp
xchg
out
push
push
jg
cli
sarb
sahf
ljmpw
sti
ljmp
xor
inc
into
mov
iret
mov
jmp
pusha
out
lret
scas
shll
ds
pop
jg
out
jmp
pop
inc
adcl
lods
fistpl
mov
dec
enter
pop
dec
adc
jbe
xchg
inc
xchg
aam
dec
or
and
xor
add
adc
cmpsl
into
data16
test
mov
les
adc
mov
pusha
stos
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
int3
cwtl
out
fs
adc
adc
stc
dec
lock
mov
mov
pop
add
movsb
sub
and
ss
dec
cmpb
pop
dec
xlat
sahf
push
into
xchg
dec
mov
fnsave
rorl
aad
mov
js
aas
stos
lock
xor
mov
sub
mov
arpl
sbb
jns
push
mov
gs
xorb
aas
pop
and
cmp
ret
inc
gs
inc
daa
or
xor
jge
adc
in
adc
int3
push
mov
and
insb
and
add
les
in
fsubs
xchg
xchg
test
aam
mov
nop
adc
test
add
adc
fiadds
jmp
in
dec
arpl
outsb
cmc
xchg
testb
mov
jg
loopne
mov
jge
add
ret
jne
add
dec
xor
xor
out
popa
je
mov
mov
jecxz
jno
addr16
sub
push
mov
xchg
testb
mov
test
adc
push
es
insb
lret
negb
fxch
decl
pop
cmp
cmp
sbb
xchg
ret
test
fwait
pushf
jge
in
dec
jge
sub
notl
ret
mov
sub
inc
adc
roll
adc
stos
push
cmp
jmp
scas
ljmp
and
sub
aad
in
mov
jle
lret
fdivs
in
or
xchg
and
sti
xchg
pop
jmp
push
enter
inc
push
cmp
xchg
aam
mov
mov
sarb
xorb
adc
pushf
xchg
test
mov
push
std
mov
or
pushf
je
sub
outsb
divl
je
push
stc
sbb
mov
adc
pop
out
ss
int3
loope
cli
aas
jmp
cli
pop
mov
jmp
stos
pop
mov
or
mov
ja
mov
jle
fcom
cmp
insb
jnp
adc
mov
mov
into
or
addl
je
jecxz
repz
adc
cmpsl
fldt
nop
jg
xchg
lods
and
and
cmp
push
pop
adc
in
add
mov
ja
enter
inc
nop
int3
jno
insl
mov
gs
iret
hlt
cwtl
and
sbb
jae
mov
mov
mov
fwait
inc
lahf
adc
divl
test
popf
mov
into
push
pushl
mov
mov
repnz
fs
sub
xchg
xchg
std
sbb
pop
push
dec
jbe
dec
cwtl
jge
push
xor
mov
push
loope
sub
xchg
popa
pop
test
xchg
push
jp
loop
xchg
dec
sub
pop
movsl
pop
adc
mov
lds
cmp
and
incl
or
mov
or
mov
call
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
push
ja
js
jb
adc
int
loope
cld
inc
inc
inc
in
mov
out
shl
outsl
inc
ss
movsl
inc
outsl
inc
hlt
test
adc
sti
stos
push
or
adc
jne
scas
sahf
cmpsb
push
in
and
hlt
mov
lods
icebp
sub
push
sbb
add
hlt
and
push
verw
jnp
sbb
xchg
jecxz
in
xor
enter
fstpl
push
sbb
pop
mov
push
inc
push
iret
out
and
popf
push
mov
sub
mov
and
xchg
sub
jmp
add
or
test
lret
sub
pop
cltd
icebp
test
imulb
mov
or
pop
fisubrs
and
push
lcall
xchg
pop
sbb
mov
fwait
aam
bound
jg
adc
repz
cmp
xor
sub
cmp
div
adc
rclb
ja
xchg
std
stos
and
test
adc
add
add
hlt
into
nop
mov
aam
shlb
add
push
popa
and
mov
out
lcall
dec
add
jne
jle
scas
cld
outsl
sti
lds
ljmp
ds
scas
out
mov
xlat
cmp
lcall
mov
dec
and
inc
jge
mov
sub
mov
cmpsb
mov
or
or
cmp
jne
imulb
in
pop
xchg
pop
or
xchg
cld
pop
adc
ds
push
outsl
out
stc
xchg
lcall
mov
andl
mov
and
inc
popf
mov
pop
lcall
mov
loopne
aad
bound
cmpsl
or
adc
or
mov
int
add
fistpl
lret
xorb
add
xor
push
mov
repz
getsec
sub
xchg
xchg
xor
nop
mov
rol
mov
cmp
push
cs
jmp
mov
or
pop
pop
std
xlat
inc
mov
or
xorb
add
push
adc
fld
rcrb
jg
jge
iret
pop
dec
arpl
divb
loopne
aas
mov
push
dec
sbb
ret
outsl
push
adc
sub
clc
mov
ret
mov
outsl
ss
dec
ljmp
fbstp
pop
push
stc
test
dec
jb
int3
fwait
iret
mov
push
push
mov
xchg
and
insb
out
push
xchg
jae
gs
xlat
mov
stos
mov
mov
mov
push
test
push
and
push
out
lahf
mov
rclb
repz
scas
push
mov
xchg
add
into
lahf
in
sub
sbb
or
ret
inc
loopne
js
in
aaa
outsl
gs
mov
jbe
or
cwtl
mov
xlat
lret
push
lock
dec
inc
insb
call
movsl
pusha
cmp
xor
jl
movsl
pop
je
test
pop
pop
jne
inc
xchg
push
pop
mov
ds
sbb
push
mov
fists
add
jmp
pop
out
js
stos
sahf
outsl
shll
sub
sub
xor
sub
pop
gs
jp
pusha
xchg
fs
mov
sti
mov
cmp
jo
xchg
ficoml
jmp
in
or
mov
push
mov
pop
mov
mov
sbb
push
test
inc
push
jl
xor
add
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
out
cmpsb
sbb
je
jb
push
inc
movsb
movsl
addb
notb
mov
cmpsl
sbb
test
xor
push
dec
sub
fldl
adc
jne
xorb
pop
into
xchg
pop
adc
inc
dec
mov
xchg
sub
outsl
cmpsb
adc
or
out
repz
test
inc
mov
inc
movsl
jecxz
repnz
mov
inc
adc
lahf
mov
mov
lret
jmp
sub
es
mov
negb
outsl
mov
add
loopne
into
cltd
xchg
xor
daa
stc
inc
xchg
push
outsb
or
sub
enter
push
pop
pushf
push
jle
mov
and
notl
out
aam
or
aam
cmc
mov
mov
stos
mov
jge
sub
pop
shrb
cmp
insb
nop
xchg
xlat
pop
out
ljmp
stos
add
ffree
dec
sub
int
insb
lea
push
fistps
add
lock
das
inc
pusha
fs
mov
adc
and
cwtl
cmp
addr16
pop
lods
test
jp
lods
or
out
cmp
call
call
mov
movsb
mov
dec
jle
add
or
out
mov
aam
daa
dec
sbb
movsl
push
and
stos
les
dec
mov
xchg
cld
adc
jb
daa
xlat
xchg
jne
xchg
inc
dec
xchg
jp
sub
and
mov
cld
lea
mov
mov
fadds
cli
pop
andb
enter
scas
sub
out
mov
pop
outsb
outsl
mov
jl
pop
fstpt
or
push
xchg
mov
les
lods
out
ret
or
es
lahf
pushf
mov
sbb
aam
cmp
push
cmpsb
inc
xor
xor
stc
pop
mov
mov
inc
pop
outsl
xor
jb
mov
ja
cmpsb
outsb
adc
dec
xchg
gs
sub
pop
fists
pop
addr16
xchg
cmc
into
in
and
inc
dec
stos
push
sub
xchg
aad
mov
mov
jo
fsubrl
adc
sbb
arpl
popf
cli
leave
inc
xor
pop
bound
pop
dec
xchg
jae
aam
in
arpl
mov
dec
movsl
sub
adc
stc
mov
pop
notb
fsubs
dec
aaa
js
pop
xchg
outsb
scas
xor
aaa
dec
jb
cli
ret
add
inc
fs
lcall
pop
lock
sub
dec
pop
mov
cmp
jmp
inc
movsl
mov
and
adc
sbb
mov
stos
ret
repz
repz
lea
cltd
xor
daa
rol
mov
mov
testl
ss
out
cmc
sbb
mov
xchg
add
dec
jge
adc
xor
push
mov
jecxz
out
sub
push
ds
addr16
mov
and
dec
lods
jns
dec
push
cmp
inc
aas
add
sarb
adc
adc
xlat
out
inc
xor
mov
in
pop
push
xchg
push
dec
mov
mov
jecxz
sti
test
rcr
push
dec
std
fldt
and
push
mov
enter
popf
test
pop
mov
in
pop
xor
movsl
sbb
add
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
jne
insb
bound
adc
lea
icebp
adc
mov
mov
push
cmpsb
pusha
xchg
inc
cmp
or
test
icebp
pop
fmull
sub
mov
inc
test
add
jmp
rclb
mov
cmp
and
mov
jb
mov
inc
or
push
jo
into
mov
fadd
xor
mov
cmc
or
lret
push
xchg
cmp
jnp
test
add
add
lahf
dec
notb
lock
jno
jae
sub
cmc
and
mov
mov
adc
shll
shrb
imul
js
or
popf
shll
mov
mov
popa
lcall
lea
shll
popf
cmp
aad
jne
or
dec
inc
idivl
testl
dec
sub
test
stos
out
push
and
mov
arpl
push
jp
mov
xchg
mov
adc
adc
push
fmuls
xor
push
hlt
push
mov
inc
xor
push
xchg
mov
jmp
sahf
fdivs
test
cltd
xchg
xor
imul
push
popa
inc
dec
push
pushf
ret
xchg
xlat
mov
mov
and
adc
xchg
fmuls
cmp
lcall
xchg
mov
jb
cmp
jae
mov
mov
push
sarl
stos
xor
sbb
stc
mov
repz
dec
shll
imul
pop
xchg
mov
pusha
ficoml
scas
jb
mov
jp
shrb
mov
or
push
cmpsl
lods
or
add
inc
mov
orb
push
dec
xor
sub
jno
jmp
and
sub
mov
xchg
stos
mov
imul
mov
je
xchg
mov
mov
lods
rcll
sbb
pop
movsl
nop
add
jmp
inc
test
cmc
scas
sub
in
sbb
test
pushf
jbe
cmp
out
mov
mov
insl
jo
dec
adc
cmp
push
mov
lds
mov
cmp
sub
or
sub
inc
mov
loopne
pop
int
inc
das
cwtl
das
jb
das
and
stos
sarl
test
popf
mov
fists
movsl
push
lahf
inc
cmp
xor
and
xchg
scas
mov
mov
fxam
push
into
pop
scas
rcrb
repz
and
es
or
fisubs
test
xchg
xchg
ret
bound
ret
xchg
mov
and
and
arpl
cmp
jg
pop
xor
data16
add
out
in
mov
mov
or
inc
mov
mov
bound
push
mov
push
push
lds
ret
add
iret
push
pop
add
mov
jns
das
in
icebp
cmp
ljmp
adc
sub
push
mov
or
mov
js
adc
cmpb
sub
lds
mov
cmp
lea
test
rclb
popa
push
stos
test
jge
push
out
lahf
adc
daa
push
push
repnz
lret
cmp
ds
std
adc
pushf
outsb
jg
mov
fdiv
addr16
imul
mov
push
leave
scas
insl
xchg
push
xor
sub
cltd
xor
push
cmp
inc
lret
adc
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
js
pop
adc
mov
negb
sub
xor
pop
push
imul
popw
mov
mov
in
jns
out
mov
or
icebp
mov
imul
sub
push
sti
stc
ja
sub
mov
mov
mov
mul
pop
in
scas
mov
push
imul
inc
mov
pop
mov
fdivrs
xchg
cmpsl
mov
aaa
inc
xchg
mov
aam
loope
enter
sti
insl
outsl
push
jg
fimuls
arpl
fisubl
xchg
jl
add
lcall
cmp
dec
aam
fwait
xchg
inc
push
jl
cmp
enter
imul
dec
enter
mov
lea
mov
jge
popf
sub
xchg
dec
in
sbb
rorl
lret
and
xchg
mov
xor
loope
leave
pop
mov
and
lahf
icebp
daa
xor
aas
pop
in
out
mov
fldt
imul
mov
xlat
sbb
mov
addr16
cltd
outsl
addr16
fs
jnp
fnstcw
mov
subb
mov
mov
lods
push
dec
inc
pop
fdivs
push
add
jne
adc
mov
mov
dec
shll
into
xchg
xchg
xchg
mov
pop
lahf
xchg
add
xchg
jl
arpl
out
xor
push
ret
adc
mov
hlt
or
add
not
add
call
xor
sbb
roll
mov
jbe
dec
mov
mov
jg
stos
mov
les
add
ljmp
cmc
push
adc
int
es
in
inc
leave
filds
lret
push
mov
jp
pop
and
mov
mov
daa
faddl
xor
add
or
addr16
sub
stos
push
mov
adc
pop
mov
add
in
dec
pop
or
pusha
push
aad
cmp
fsubl
sub
adc
aad
fnsave
push
cli
mov
fists
stos
push
jmp
pop
xchg
jae
sar
xor
inc
in
lods
jmp
dec
push
enter
aaa
pop
inc
xchg
mov
xchg
es
adc
cli
xchg
js
shl
mov
in
shlb
cltd
or
outsl
or
pop
push
xor
into
sub
ror
push
sbb
call
cmp
lahf
dec
push
mov
aam
scas
push
mov
mov
mov
and
jo
adc
mov
lcall
fs
push
mov
out
int
stc
jbe
cmp
jmp
enter
out
dec
popf
and
or
dec
xor
divl
mov
mov
cmpsl
mov
lret
sarl
jae
inc
inc
sub
call
js
lret
cmpsl
ds
adc
cmp
push
fnstcw
lret
sti
pusha
das
jae
xchg
sbb
jl
jo
dec
jae
in
ja
xor
dec
outsb
and
sbb
pcmpgtb
mov
inc
stos
imul
test
push
xchg
nop
cld
xchg
add
inc
lcall
js
mov
mov
insb
loope
inc
sub
fcmovnbe
call
add
je
push
in
jmp
sti
adc
mov
xchg
in
test
push
mov
sbbl
sahf
mov
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
lret
notb
adc
adc
sbb
cmc
daa
jl
add
pop
pop
mov
mov
adc
dec
repz
push
adcb
scas
sar
in
int
je
sub
mov
mov
mulb
orl
mov
push
addr16
loop
xor
insl
and
fdiv
lods
push
mov
mov
leave
push
adc
out
jmp
jl
inc
mov
dec
mov
test
push
xchg
enter
inc
adc
rcrb
repz
jg
test
xor
sub
mov
lret
cld
repnz
dec
pop
ret
adc
push
sub
xor
cltd
rolb
cmp
cld
mov
mov
sub
sub
push
jge
pop
sahf
xor
add
add
ds
add
push
cmp
cwtl
pushf
sub
adc
test
jle
movsl
cmpl
jmp
scas
or
pop
adc
rol
mov
adc
out
imul
xchg
cld
add
mov
push
push
add
inc
jmp
imul
in
xor
inc
adc
in
mov
hlt
fbstp
jbe
jge
or
sub
sbb
push
stos
mov
xlat
stc
adc
cli
inc
mov
sub
movsb
adc
sbb
add
xchg
dec
xor
xchg
or
jnp
cmpsl
push
fmull
adc
arpl
lahf
sbb
add
sar
push
movsl
dec
cmc
push
xchg
xlat
out
mov
test
mov
out
pop
and
bound
call
iret
cmc
push
push
xchg
stos
dec
push
sub
nop
divl
mov
aas
and
scas
pop
movsb
shl
and
stos
mov
cmp
add
adc
xchg
xlat
or
stos
bound
scas
lods
pushf
mov
iret
pop
xchg
pop
push
test
aas
fcoml
or
cwtl
mov
repnz
rcll
ret
aas
mov
into
mov
mov
int
out
mov
icebp
shrb
inc
dec
inc
test
mov
pop
adc
mov
inc
pushf
inc
scas
cmp
xchg
jecxz
or
inc
daa
push
jbe
xchg
inc
sahf
push
into
sub
in
std
out
lea
lds
xorl
or
scas
pop
pop
jae
jns
add
ss
fisubl
ret
mov
xchg
out
and
jae
insl
iret
dec
leave
in
cmp
add
shl
or
sbbl
inc
mov
sar
or
mov
cmp
aam
sbb
int3
repz
test
hlt
ss
sub
loopne
push
mov
jmp
jns
sahf
xor
pushf
mov
stos
stos
xor
xchg
and
push
pop
sbb
sub
sbb
pop
cmpsb
ljmp
and
aad
jbe
not
and
jnp
cmp
xchg
inc
or
sub
mov
jo
pop
inc
inc
sahf
les
test
lret
push
arpl
das
mov
ret
sub
test
ret
jp
fstpt
ja
insl
cmp
or
icebp
push
sbb
push
sub
xchg
pop
mov
lods
gs
js
loope
add
sub
subl
movsb
sub
pop
inc
dec
jns
or
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
insb
xchg
dec
adc
mov
adc
sbb
int
inc
xchg
fadd
inc
inc
xchg
jp
sub
xor
gs
pop
add
cmp
decl
cmp
andl
pop
sbb
in
adcb
notl
push
and
sbb
mov
lret
fadd
mov
inc
mov
cwtl
fistpll
push
pop
js
rorl
push
adc
cmp
mov
sub
fcmovbe
aaa
mov
pusha
sbb
push
loop
into
mov
js
inc
ret
jmp
ret
and
lock
mov
xchg
and
iret
push
pusha
pop
sbb
push
push
xchg
ss
push
movsl
scas
aaa
test
push
or
push
and
mov
sbb
gs
dec
fldl
xchg
mov
xor
pop
insl
leave
cmpsb
xlat
rorl
sarl
sbb
cli
sbbl
jns
das
mov
int
hlt
dec
rorb
fdivrs
ror
rorb
dec
ror
jecxz
popa
mov
and
adc
dec
jecxz
mov
inc
jge
pop
and
loop
pop
jmp
je
jecxz
cmp
jne
fistpll
xchg
insl
ficomps
or
in
cs
arpl
add
inc
xchg
inc
rorl
int
xchg
jl
pop
add
pop
cmc
das
arpl
je
mov
fs
out
clc
xlat
lds
mov
cmp
xor
pop
outsl
loopne
dec
lea
mov
lcall
and
icebp
ror
push
ss
push
inc
lods
jb
or
or
lods
les
cmp
dec
out
pop
sub
mov
push
sbb
hlt
push
mov
mov
iret
dec
jge
nop
cmp
aas
push
mov
mov
sub
jg
inc
add
sub
jno
or
jl
or
mov
cmp
pop
mov
insl
pop
stos
sahf
mov
sub
push
sbb
inc
push
lret
and
mov
and
push
leave
add
icebp
fldenv
pushf
lea
mov
push
mov
dec
faddl
mov
hlt
jnp
mov
dec
mov
pusha
aaa
cmpb
mov
jecxz
jnp
das
sub
outsl
jbe
les
add
lcall
cld
loop
mov
out
in
cld
cmp
shrl
repz
setp
jno
adc
and
jg
inc
adc
sbb
add
in
mov
mov
mov
insl
jno
sti
sub
pop
or
orb
adc
jg
mov
sub
dec
cmp
xchg
call
push
cmc
popa
sub
cld
jmp
fists
mov
shrb
rcrb
popf
xchg
mov
sub
xlat
flds
or
dec
or
or
pop
mov
scas
add
or
mov
xchg
movsb
subb
enter
fsubrs
push
sbb
mov
ret
movsb
leave
jae
push
xchg
sub
fwait
ret
xchg
cld
pop
call
lcall
add
jb
mov
test
fs
clc
outsl
push
lret
jl
ret
push
push
sbb
cld
add
add
stc
and
ja
jb
sub
shl
inc
mov
sbb
jbe
test
pop
outsb
cmp
pmaddwd
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
out
loopne
lods
xor
adc
adc
clc
xor
push
cmp
sbb
push
sbbb
into
outsb
test
aas
aad
shll
push
dec
adc
sub
mov
inc
pop
dec
icebp
std
sub
or
mov
and
xchg
xor
sub
repz
xor
and
testb
lret
pop
jnp
add
outsb
cmpb
mov
sub
add
mov
idivl
fstpt
je
scas
jecxz
clc
stc
daa
jb
mov
pop
jne
loop
and
sub
pushf
fwait
aam
xchg
hlt
shlb
je
fs
adc
popf
imul
std
popa
dec
int3
push
stos
jp
dec
xchg
push
and
nop
and
incb
push
sub
xchg
jb
sbb
test
loop
dec
or
jno
inc
insl
aad
out
jbe
sbb
mov
das
hlt
mov
inc
inc
pop
daa
xchg
jp
icebp
iret
sub
mov
cmp
lods
popa
cld
push
mov
test
sti
dec
xchg
xchg
mov
insb
rorb
pop
aas
jbe
pop
addr16
in
mov
jg
add
cmc
jp
in
outsb
lret
push
inc
xchg
shlb
mov
or
sbb
imul
lret
lods
jp
pop
xor
js
imul
cmp
inc
jne
shll
and
cmpsl
clc
push
push
cmp
stos
movsl
shlb
loop
repnz
mov
cmpsb
mov
or
jle
push
clc
jg
jp
push
xchg
ret
out
cmp
lea
aaa
sbb
mov
sub
cmp
imul
cmc
or
insl
dec
test
int
clc
mov
mov
or
jns,pn
cmpb
aam
and
out
mov
mov
ret
in
xor
jb
xchg
leave
cmpsb
add
daa
add
jge
ret
ljmp
jo
or
add
adc
mov
scas
dec
stos
sahf
xchg
adc
push
dec
dec
push
push
dec
shll
pushf
fldt
lret
cs
cs
imul
xchg
push
rclb
inc
fmulp
add
pop
sbb
out
push
push
fstpt
cmpsb
int3
or
add
xchg
sub
out
in
and
int3
fmulp
mov
ss
cmpsb
insl
mov
into
jae
iret
ss
dec
out
and
inc
scas
and
out
cmp
in
lcall
pxor
loop
dec
sarl
push
enter
inc
stc
add
in
scas
xorb
mov
xchg
xchg
mov
sbb
cmp
cltd
push
int3
dec
call
sub
lea
xor
jp
clc
push
push
enter
ds
inc
mov
mov
je
sbb
jecxz
jbe
mov
fbld
xchg
es
sbb
dec
stos
loopne
addb
shl
out
jl
outsb
mov
pop
int3
jmp
inc
and
inc
out
fidivrs
and
jge
into
inc
loop
sub
in
ror
movsl
sarl
pusha
ja
push
shll
jno
xlat
arpl
test
mov
lret
push
xchg
mov
or
in
and
cltd
push
mov
push
dec
adc
sub
mov
les
enter
and
inc
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
mov
mov
adc
pop
rcrb
adc
push
sub
ss
dec
mov
loopne
loop
sub
bound
ficompl
or
mov
sub
cmp
notl
bound
mov
cltd
popf
addb
pop
cwtl
jl
pop
ja
in
inc
mov
add
pop
imul
ret
leave
dec
sahf
or
push
loopne
and
and
ficoms
aaa
loop
xor
xchg
xor
push
mov
jg
cli
mov
inc
mov
add
add
gs
mov
push
sbb
setl
mov
in
or
mov
sti
leave
mov
mov
in
jecxz
sarw
movsb
jo
testb
mov
sar
ja
mov
xlat
push
loop
mov
mov
addr16
out
mov
push
pusha
and
movsl
add
mov
idivl
cmc
jne
sub
out
push
and
jae
dec
inc
inc
xor
test
cmc
stos
test
dec
out
adc
ss
jbe
in
movsl
sub
or
int3
xchg
rcl
adc
inc
or
subb
pop
mov
jp
jne
cli
movsl
pushf
pop
add
mov
xchg
dec
outsb
fnsave
hlt
mov
mov
test
aam
sub
movsl
jno
outsl
cmp
and
pop
stos
pushf
push
lds
je
outsb
mov
mov
xor
sub
xchg
dec
xchg
aas
adc
lods
jo
pop
adc
stos
in
or
fisttpl
mov
ss
pop
shrl
mov
jmp
sub
cli
fwait
mov
dec
stos
insl
cmp
mov
fwait
sub
sbb
mov
scas
or
pop
jne
lods
mov
mov
inc
sbb
push
mov
dec
fucomi
into
push
mov
add
imul
std
into
dec
mov
lock
popf
xchg
rcrb
test
orb
or
push
stos
push
pusha
and
outsb
cmp
mov
loop
mov
int
sub
mov
sahf
nop
xor
fildl
pop
les
jl
imul
add
mov
aas
inc
popa
scas
cld
sub
jae
add
cld
push
inc
add
lahf
fwait
dec
add
aad
adc
push
js
in
in
js
lret
repnz
inc
jnp
jl
push
scas
mov
loope
inc
dec
arpl
sub
clc
mov
pop
ret
mov
sbb
inc
fisttps
fbld
push
int
popf
lahf
push
mov
cmp
xchg
ljmp
lret
aad
mov
and
xchg
mov
mov
push
mov
adc
xchg
popf
cmc
dec
xchg
movsb
fidivrl
add
jp
push
add
cmp
cltd
inc
shrb
sbb
test
shrl
out
sub
lods
inc
in
xor
icebp
mov
outsl
or
lahf
jp
xchg
dec
loope
xor
push
lods
loope
jno
outsb
bound
mov
out
mov
das
incl
jl
cmp
stos
fisubrs
fwait
sbb
pop
iret
test
jmp
mov
cmc
adc
adc
test
shrb
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
les
adc
mov
adc
lcall
pushf
push
adc
push
add
push
mov
loop
mov
mov
xchg
lret
divl
jg
xor
out
push
imul
gs
push
mov
sbb
and
aam
loop
call
icebp
andb
aas
add
push
pop
out
mov
fsubrl
jbe
loopne
scas
out
faddl
and
inc
sub
xchg
xor
sti
aas
in
xchg
mov
ss
into
jmp
mov
jge
xorl
in
outsb
scas
sbb
shl
cmp
xchg
adc
clc
cmp
pop
hlt
lods
daa
sti
mov
pop
movsl
push
je
test
sbb
lods
adc
pop
push
icebp
push
jmp
testb
push
lds
cli
pop
or
xor
mov
inc
cmpsl
loope
cs
lret
aam
rclb
out
xchg
ss
imul
jg
das
jb
js
xchg
cmp
mov
das
stos
dec
loope
push
dec
ficomps
arpl
cmp
ror
push
sahf
jns
rcrl
mov
fs
call
cli
cmp
xchg
nop
mov
cmp
les
repz
jl
fisttpl
adc
sti
mov
addb
inc
arpl
dec
jmp
orb
pusha
std
lds
push
int
out
imul
pop
insl
addr16
shl
adc
cmp
add
mov
inc
js
sbb
pop
add
imull
lds
pop
pop
mov
inc
jle
daa
adc
hlt
mov
out
mov
jg
jp
mov
inc
aas
clc
pop
imul
ljmp
in
in
add
xchg
test
dec
insl
out
lret
jp
mov
jmp
mov
lds
jl
push
popa
sub
jns
pop
lahf
and
and
rcll
xchg
mov
cmp
addb
mov
arpl
pop
pop
lcall
out
mov
ljmp
xor
mov
mov
xor
gs
in
jnp
inc
pop
rolb
in
repz
arpl
push
jbe
mov
mov
adc
enter
mov
es
sub
inc
rol
sub
outsb
adc
inc
push
inc
inc
or
mov
inc
daa
cmc
sbb
xchg
mov
aad
fnstsw
inc
scas
leave
sti
pop
xor
jns
movsb
jp
cmp
sbb
out
addl
cwtl
out
jae
out
ss
fwait
push
addr16
jl
xchg
enter
enter
pop
push
sub
jnp
adc
es
icebp
gs
xor
fcoml
xlat
add
xchg
mov
cwtl
add
jmp
lcall
cmp
xlat
mov
or
sub
scas
adc
rcrb
inc
enter
mov
shrd
std
out
imulb
das
sbb
inc
mov
scas
das
cs
xor
es
sti
xor
ret
inc
lcall
xchg
dec
pop
stos
add
test
sbb
lret
jecxz
rolb
jmp
pop
out
mov
jp
loope
testl
adc
xchg
and
lds
dec
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
into
lods
or
adc
mov
adc
mov
push
xor
stos
xchg
xchg
push
xor
push
scas
out
or
pop
push
pushf
adc
aam
and
and
jae
mov
push
sub
push
xor
in
jns
ss
pushf
outsb
int
aam
insb
ja
scas
data16
sbb
pop
jo
shrl
dec
and
lahf
insl
lret
out
loope
aas
aaa
adc
or
mov
jp
pop
add
adc
add
jns
adc
lret
sarl
jne
jo
out
flds
imul
clc
xchg
dec
cld
int3
pushf
mov
add
add
aad
mov
popf
inc
aad
icebp
leave
aam
in
cli
test
jp
int
pop
mov
xor
ja
pushf
ret
cs
mov
mov
adc
repz
sbb
jle
rcrl
xor
mov
inc
in
mov
jmp
popf
add
cmp
pop
pop
mov
rcl
repnz
jbe
xchg
xor
add
scas
sbb
sbb
pop
and
jb
mov
data16
into
mov
or
pop
mov
pop
fwait
mov
imul
cmc
fcmovne
inc
mov
out
push
pop
mov
inc
rol
shl
insb
pop
roll
rcrb
hlt
fdivl
shrb
testb
test
mov
push
mov
daa
popa
inc
pop
adc
aas
pop
xor
mov
leave
xchg
imul
sahf
cmp
lcall
lock
roll
mov
ljmp
cmp
adc
mov
inc
or
das
daa
mov
mov
mov
adc
in
pop
and
cmp
hlt
xchg
stos
cmc
popa
mov
shr
xchg
fwait
and
pop
mov
mov
inc
dec
lods
inc
mov
popf
jae
fnstsw
inc
repnz
mov
sub
mov
dec
cmpsl
lds
cltd
scas
out
and
adc
fstpl
inc
and
xorb
les
hlt
add
pop
leave
mov
in
jecxz
lret
and
jbe
mov
ja
test
mov
ja
loopne
push
fcompl
pop
sub
mov
loopne
add
fwait
push
mov
jmp
aaa
push
jns
sbb
mov
and
cwtl
test
xor
sub
push
outsb
cli
mov
cltd
add
mov
sub
add
dec
pusha
mov
add
adc
jmp
cmc
ret
cli
ss
sarb
das
xchg
jns
lds
incl
addr16
cmpsb
scas
xor
jge
les
push
je
ljmp
sbb
outsb
mov
cltd
xchg
mov
in
inc
fs
aad
fisubl
jp
fbstp
addr16
pusha
test
addr16
movsb
loope
pop
arpl
pushf
dec
mov
lods
aas
daa
cli
leave
push
call
pop
stos
stos
loope
xchg
jnp
outsb
fstl
or
jle
dec
enter
mov
and
jmp
adc
cltd
ret
sub
stos
or
inc
in
dec
and
push
inc
popa
jns
pushf
xchg
jmp
loope
in
adc
aas
fxtract
je
or
cmpsl
xchg
add
inc
xor
adc
or
push
mov
cwtl
xorb
rolb
fsts
fnsave
push
push
mov
into
adc
fsubrl
mov
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
ret
mov
mov
adc
mov
inc
call
and
cld
jg
push
testl
ss
jge
cmp
cmpsl
into
pop
popf
push
mov
cwtl
stos
mov
rclb
mov
xor
mov
adc
jg
xchg
test
jmp
sub
mov
daa
adc
aad
mov
push
adc
addr16
loopne
sbb
add
xchg
sub
jge
xor
sbb
and
or
cmpsb
cltd
mov
daa
or
xor
stos
adc
or
mov
cmp
test
or
sahf
mov
ljmp
xlat
inc
jns
roll
mov
mov
ret
outsb
fs
sub
pop
mov
loopne
shlb
mov
jmp
mov
ljmp
pop
std
xor
testb
cmc
and
scas
lds
dec
or
data16
sti
push
cmp
cs
rcl
outsb
jmp
push
pop
repnz
or
push
sub
test
outsl
push
sbb
fwait
inc
or
and
into
sahf
out
data16
in
push
enter
sbb
cmp
rorb
push
xor
sarl
ljmp
sbb
push
nop
lods
insl
or
mov
mov
sbb
movl
add
lret
iret
xor
jecxz
sbb
arpl
sbb
stc
mov
rcrb
sbb
or
sub
in
cmp
je
xchg
sub
adc
mov
dec
cmpb
lret
sub
shlb
lods
push
cmp
imul
dec
clc
sub
sar
dec
add
push
add
adc
insb
fstps
or
mov
mov
enter
movsb
cwtl
xor
mov
mov
xor
or
pusha
xchg
stc
lcall
notb
push
out
pushf
imul
xchg
fdivs
pop
fs
sub
mov
lds
adc
mov
ds
je
adcl
mov
xchg
xchg
sub
xor
pop
pushf
sbb
lods
fistps
mov
jnp
inc
cmp
push
sbb
xor
leave
popa
pushf
loopne
push
inc
sub
imul
fisttpl
shr
imul
mov
aaa
out
adc
adc
xchg
xchg
mov
mov
test
cmpsl
pop
mov
imul
test
test
mov
mov
ja
cs
aad
mov
in
mov
andl
sub
repz
hlt
jnp
xor
out
adc
scas
scas
push
mov
in
jnp
xchg
adc
cmpsb
into
adc
stos
and
mov
jecxz
mov
repz
add
leavew
fwait
push
mov
clc
cmp
sub
mov
mov
sbb
adc
push
jp
adc
ljmp
loop
mov
cmp
lods
out
lock
mov
mov
pop
xor
push
pop
or
stos
pop
add
push
mov
sub
xchg
xchg
es
icebp
sbb
jnp
incb
push
add
popf
ja
sub
and
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
ja
mov
adc
add
cmp
dec
pop
lods
jb
nop
cwtl
jb
pop
adc
dec
cld
xchg
call
mov
or
xchg
xchg
rorl
push
shlb
cmp
adc
ljmp
pusha
jle
repz
cld
test
in
sti
inc
mov
pop
data16
mov
lahf
xorb
or
gs
push
xor
jns
and
fidivrs
insb
dec
cwtl
repz
cli
adc
mov
pop
jecxz
inc
jb
insl
xor
dec
popf
jns
add
fs
pop
dec
inc
mov
mov
jmp
int3
rcrl
and
pop
scas
pop
mov
jecxz
mov
mov
lock
push
cmp
sbb
or
sbb
out
in
push
sti
pop
or
inc
pop
mov
jo
test
inc
cmp
imul
arpl
adc
and
insb
xchg
mov
mov
cmc
jne
ljmp
mov
daa
add
aam
lods
xchg
in
jmp
lock
das
mov
mov
jb
in
mov
dec
add
add
icebp
lods
aam
addr16
in
jbe
lret
les
jecxz
xor
shll
mov
shr
mov
and
rorl
jnp
mov
push
dec
loope
push
imul
mov
mov
and
and
outsb
push
ret
shlb
sbb
rorl
in
push
iret
jbe
cmpsl
jp
lock
mov
hlt
scas
out
fwait
popf
mov
enter
cmpl
xchg
mov
pop
rcll
jne
adc
pusha
jecxz
add
push
sbb
pop
add
insl
mov
shlb
and
cld
cli
mov
aaa
push
or
fildl
dec
mov
fildll
call
sbb
xchg
inc
pop
xchg
and
movsb
mov
mov
je
cli
fstpl
nop
jo
lds
push
xor
outsl
push
or
out
inc
pop
inc
fisubs
adc
sbb
int3
in
and
jge
or
pop
fcomps
int3
dec
sbb
cld
cli
or
scas
fldenv
inc
clc
nop
pushl
shl
call
out
xor
repnz
jo
aam
mov
mov
bound
sbb
push
clc
out
dec
mov
outsb
repz
roll
adc
aad
cmp
pushf
arpl
fsub
jne
jg
imul
out
jmp
sub
popa
push
pushf
adc
notb
enter
in
xchg
out
daa
sub
dec
lcall
sbb
sar
or
jge
lret
outsl
into
ja
wrmsr
mov
mov
sarb
enter
mov
inc
and
insb
gs
arpl
push
jl
adc
test
jl
jge
shlb
scas
in
in
ficoml
mov
or
adc
pop
je
clc
js
sti
ja
aad
es
mov
stos
push
mov
imul
cmp
inc
sbb
clc
mov
psubusb
call
mov
rclb
push
push
xor
je
pop
mov
or
sbb
sub
dec
imul
mov
in
int
mov
xchg
mov
cld
icebp
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
aas
negb
daa
push
sahf
and
out
psadbw
fucomi
cli
push
sub
loopne
xor
xchg
sbb
xorl
mov
or
adc
sbb
add
inc
mov
daa
push
push
inc
jns
enter
jns
jae
les
jge
cmp
dec
fs
jp
sub
stc
xor
pop
out
pop
mov
js
jge
mov
loopne
xchg
pcmpgtw
lds
outsb
mov
dec
adc
mov
sahf
mov
mov
adc
push
pop
dec
or
sbb
dec
test
push
push
xchg
or
xor
push
sbb
sub
dec
xchg
xchg
int3
movsb
sahf
or
shrb
sbb
pop
mov
adc
sti
scas
orl
push
inc
mov
pusha
and
int3
fxch
rclb
xchg
jnp
sahf
mov
aad
daa
fidivrl
push
and
in
pop
jo
fidivs
outsl
lock
sarl
scas
sahf
out
ja
mull
push
shl
out
mov
mov
fwait
inc
pushf
out
cwtl
fstpl
push
or
sbb
pop
mov
out
mov
lds
das
inc
sub
mov
out
stos
and
or
push
mov
sbb
mov
aas
pushf
add
mov
cmpl
jne
addr16
pop
mov
pusha
xchg
addr16
mov
mov
in
jb
mov
fistl
test
loopne
xchg
mov
sub
mov
pop
xchg
or
in
aad
outsb
xchg
inc
imul
aad
mov
jg
xor
xor
fcmovbe
orl
dec
cmc
enter
imul
insb
cmpl
scas
lcall
leave
outsb
mov
cmpsl
test
push
movsl
hlt
das
pop
inc
dec
nop
rorb
andl
lret
pop
mov
imul
sbb
xchg
or
push
and
mov
shrl
fstpl
hlt
inc
gs
andl
push
mov
repz
es
and
rcl
push
test
jmp
ret
push
jp
bnd
sub
sub
lahf
adc
int
je
push
mov
inc
in
aam
and
xchg
aam
jns
jne
cs
and
decw
stos
pop
jp
add
js
rorb
subb
mov
or
or
mov
adc
mov
nop
mov
add
pop
jo
stos
and
mov
fstps
pop
les
clc
fdivs
xorl
in
repz
out
adc
fadds
imul
add
stc
arpl
stc
jecxz
sbb
sbb
push
fbstp
lds
in
sub
sahf
sbb
or
hlt
stos
rorl
aas
imul
cmpsb
sub
stc
add
inc
jl
and
mov
lock
arpl
jle
and
hlt
pop
mov
jb
lcall
xor
imul
xchg
aaa
inc
xchg
loope
out
mov
push
iret
adc
rorl
push
into
fsubs
fsub
dec
jo
push
add
sub
pop
bound
sahf
inc
outsb
pop
sub
test
aad
iret
push
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
ljmp
adc
mul
pop
jg
jmp
sub
nop
leave
xorb
mov
stos
xchg
adc
push
dec
int
mov
fdivrs
mov
xchg
fsubrs
adc
jl
jge
and
loop
pop
cltd
push
and
outsl
push
or
add
out
jmp
xchg
inc
hlt
je
je
sahf
jl
imul
dec
hlt
ret
pop
nop
mov
vcvttps2dq
ss
aam
inc
jmp
pop
push
fisubl
jne
cmc
out
rorb
adcb
and
das
and
jg
das
jmp
mov
push
imul
adc
mov
inc
or
fmull
jp
cmp
or
lahf
mov
ret
popf
mov
test
loop
and
adc
xlat
aam
repz
outsl
inc
scas
push
ret
or
hlt
push
jns
pop
jp
mov
adc
push
popf
ljmp
add
mov
nop
lret
arpl
mov
cmpb
mov
cwtl
xchg
cltd
cmp
sarl
sub
mov
push
push
mov
jno
mov
and
add
in
jae
push
dec
outsb
dec
lods
push
es
xor
adc
sbb
dec
mov
ret
jle
ss
push
lods
or
mov
fwait
push
scas
ja
int
add
xchg
ffree
insb
jae
inc
cmpsb
pop
mov
sub
call
rolb
addr16
mov
mov
leave
cli
je
test
pop
jns
add
mov
clc
mov
imul
adc
loop
imul
cmp
cmpl
lods
pop
mov
insl
inc
cli
rolb
jns
cli
cmp
mov
stc
out
mov
jae
sahf
cld
sub
lds
fisttps
sar
testb
xchg
mov
push
mov
outsb
push
adc
inc
pop
lods
arpl
jl
fcmovnu
push
movsb
pop
xor
mov
test
inc
loop
jle
das
lea
mov
mov
gs
icebp
pop
outsb
addr16
and
cld
cli
jecxz
int
daa
xor
or
xchg
bound
inc
outsb
jne
jnp
push
sbb
daa
sub
mov
repnz
int
mov
and
push
push
gs
or
std
sbb
divl
scas
xchg
cld
mov
in
bound
stos
lret
leave
clc
insl
outsl
scas
mov
fimuls
push
adc
inc
and
xor
into
adc
stos
push
pop
faddl
out
mov
jl
dec
xchg
adc
sbb
jb
aaa
int
scas
cltd
mov
pop
mov
scas
je
xor
into
pop
xchg
sub
or
div
inc
jle
sbb
shr
adc
movsb
mov
movsl
jecxz
mov
aad
xor
lds
aam
rorl
pop
dec
iret
lcall
insb
sub
cmp
or
das
mov
mov
aam
lret
lahf
js
cltd
mov
adc
xor
cmp
mov
aaa
push
push
ja
lcall
dec
js
add
les
jl
fs
in
and
inc
adc
mov
mov
push
pop
out
sahf
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
cmp
jle
or
adc
mov
out
push
rorl
inc
fnstcw
imul
ret
xor
ret
xchg
js
cli
cmc
push
sub
cmp
jmp
ds
fs
cmp
push
or
or
xchg
stc
push
inc
rcr
mov
lret
mov
fnsetpm(287
adc
aas
or
mov
mov
and
ds
sub
xor
aam
xchg
adc
mov
sbb
dec
fdivr
jl
jge
xchg
mov
adcb
out
inc
push
fstpt
rcr
icebp
push
into
and
rclb
jmp
repnz
mov
shlb
or
cmp
scas
cmc
dec
sbb
insl
shlb
sahf
mov
sub
inc
push
xchg
cmp
fcmovnu
mov
xlat
xchg
xor
int3
pop
sub
or
loopne
mov
dec
sahf
bound
jnp
mov
pop
out
add
sti
stc
mov
jmp
loopne
cmp
orb
ljmp
loopne
inc
rcr
popf
jg
and
mov
cmp
sub
lret
fcmovu
test
sbb
out
mov
out
lds
lock
push
repz
mov
adc
add
test
out
popf
cmpsl
pop
push
stos
das
dec
inc
cltd
xlat
jne
pushf
push
leave
add
lcall
xor
jnp
pushf
insl
iret
mov
fidivl
mov
xchg
popa
or
jo
lret
int3
mov
in
fistpl
inc
ret
into
mov
push
push
imul
push
xchg
mov
mov
cmc
insb
js
rcrl
mov
out
lds
cmp
ja
pop
jge
dec
inc
es
adc
cmp
mov
and
les
repz
arpl
mov
mov
repnz
cmp
push
add
adc
loop
iret
sbb
ljmp
or
andb
jb
push
sbb
faddp
or
pushf
ror
pop
mov
jmp
cmp
xor
mov
push
cld
je
jo
inc
adc
adc
je
subb
int3
add
in
ss
adc
mov
adc
dec
shlb
and
dec
and
aas
and
cmp
and
mov
jl
push
enter
sbb
or
in
lods
push
jecxz
test
imul
sub
outsl
push
and
and
scas
pop
in
jns
ret
adc
cwtl
adc
addr16
dec
jge
repnz
jecxz
or
test
xor
pop
out
fildll
iret
ss
push
in
dec
inc
incl
rcr
or
sub
sbb
fwait
hlt
mov
mul
mov
cwtl
movsl
data16
fsubrs
sbb
xchg
jno
repz
lea
mov
test
and
jl
fdivp
xlat
cmc
sub
sub
xchg
cmp
imul
jmp
rep
cld
outsl
mov
pop
aas
mov
sub
jns
or
cld
les
dec
mov
testl
cmc
push
fdivrs
xchg
push
cwtl
or
repnz
pop
dec
dec
insl
mov
test
test
imul
out
fisttps
push
rorb
fwait
test
cmp
jbe
pushf
pop
cmpsb
mov
rclb
xchg
lahf
xlat
ror
xchg
push
inc
push
jae
out
mov
loopne
lret
int3
add
cmpsb
dec
jge
int
and
dec
mov
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
stos
test
adc
mov
adc
ja
mov
imul
cmpsl
mov
add
shll
adc
and
scas
das
test
inc
add
negb
call
pop
shrb
clc
fistl
aaa
push
aas
push
cmc
into
xadd
mov
sbb
xchg
sbb
xor
movsb
hlt
out
inc
aad
stc
sub
in
or
daa
xor
out
popa
dec
es
mov
cmpsl
jge
ljmp
sahf
mov
inc
jmp
jnp
addr16
rorb
lcall
or
mov
popa
mov
movsl
mov
stos
push
push
cmpsl
lret
jle
jp
in
cmp
cs
test
push
inc
dec
es
push
ja
push
mul
mov
lods
push
jo
repnz
or
sahf
pop
push
repnz
mov
mov
push
mov
cwtl
lea
loopne
test
mov
cmp
hlt
mov
fwait
clc
outsl
incb
aas
push
std
or
push
lods
add
outsl
lea
sbb
xor
cmp
cs
cli
inc
sub
cmc
pop
out
shll
cmp
fstpl
lods
jmp
push
fisttpll
cmp
push
mov
cltd
loop
jae
dec
pop
mov
push
adc
sub
jle
icebp
dec
out
rorb
lcall
subb
xlat
outsl
add
cmpl
imul
sub
rcrl
sub
jmp
repnz
pop
mov
pop
cmp
ret
int
cmp
sahf
sbb
jecxz
popf
cmp
push
push
and
or
aaa
mov
add
sub
cmp
xor
fwait
sub
movsb
jb
out
rclb
lods
jb
xor
int3
fs
pop
aam
push
push
ret
outsb
xor
scas
xchg
jmp
mov
jbe
lods
insb
scas
jg
and
jnp
scas
and
xchg
cmp
mov
fnstenv
inc
adc
mov
lds
push
or
iret
lea
loope
jno
inc
jge
ljmp
mov
sar
jne
aam
sbb
push
imul
out
pop
mov
aaa
insl
pop
dec
mov
int3
adc
mov
fwait
and
push
jp
shrl
fwait
mov
push
mov
outsb
dec
stos
inc
dec
icebp
jl
mov
int3
andl
xor
fbstp
es
sub
push
push
test
mov
cmp
pusha
push
pop
adc
sbb
pop
clc
mov
and
or
aaa
mov
inc
adc
mov
or
dec
arpl
sbb
bound
xchg
push
shlb
push
fcmovnb
xlat
loope
pop
add
into
push
fldcw
insl
cvtps2pi
fildl
in
pop
push
push
inc
stos
sub
push
push
int
and
mov
iret
xlat
aas
lods
cwtl
and
and
xor
or
cmp
mov
sar
out
xchg
sbb
mov
scas
fs
lcall
mov
xchg
pop
clc
dec
je
pop
cmp
sub
mov
out
ds
aad
jo
or
test
enter
pop
fwait
sbb
or
add
sbb
push
fdiv
sahf
mov
mov
xorb
add
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
dec
xor
adc
gs
fiaddl
divl
or
aaa
sarl
and
dec
insb
cmpsb
lods
and
cmp
cmp
loop
add
jb
jne
add
jle
inc
add
inc
lods
push
sbb
loop
cmp
xchg
int
std
cmp
les
add
jge
jle
or
adc
push
cmc
lds
xchg
int3
and
cmpsb
cld
lcall
xchg
stos
test
xchg
jno
jb
and
nop
and
gs
into
test
lret
insb
ret
imul
dec
insb
cltd
inc
into
jns
int3
jmp
test
mov
arpl
pushf
mov
mov
add
outsl
xchg
in
mov
into
movl
outsl
test
jno
xchg
push
sbb
xchg
add
rol
and
aaa
push
inc
cmp
push
cmpsb
mov
popa
mov
lock
push
xchg
nop
adcl
jecxz
xchg
push
pop
cmc
dec
mov
and
je
cmp
inc
jno
icebp
and
pop
mov
push
add
int
mov
jge
loop
mov
loope
testl
jae
cmc
inc
and
push
and
sarl
dec
mov
xor
mov
jp
movl
std
xchg
mov
faddl
cmc
pop
add
pushf
sub
jns
inc
divl
insb
in
in
js
aaa
dec
psraw
call
lea
aas
cld
jle
mov
and
jg
adc
js
mov
mov
aas
out
ret
out
sub
ljmp
push
pusha
cmpsl
or
or
iret
jno
fxtract
pop
out
pop
inc
movl
test
jae
rorb
push
mov
ljmp
dec
pop
test
mov
mov
sbb
lret
jns
jne
mov
mov
clc
imul
and
mov
and
xchg
jmp
xchg
enter
or
mov
add
pushf
mov
inc
pop
jp
xchg
in
rorb
outsl
cmpsb
inc
es
pop
jecxz
adc
loopne
push
ficoml
mov
push
outsb
mov
adc
add
les
fdivl
das
fwait
jp
ret
test
push
pop
mov
push
ja
push
aaa
in
dec
mov
pop
out
imul
nop
jle
mov
mov
cmp
in
pop
push
fisttpll
fcomps
sbb
mov
setp
imul
addb
scas
mov
in
lahf
push
nop
sbb
lods
lock
dec
add
mov
test
mov
mov
pop
mov
xchg
push
jae
inc
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
addr16
jle
lock
adc
adc
adc
push
adcl
jns
testl
push
loop
subb
add
int3
or
nop
mov
negb
out
xchg
and
xor
popa
fsubrl
sti
cmpl
pushf
dec
or
cltd
push
push
jne
mov
cmpsb
sub
fs
lds
mov
push
lds
popf
aam
lret
jl
cli
adc
das
ds
push
daa
fisubs
push
call
sub
mov
pop
and
and
xor
mov
fwait
mov
push
mov
push
push
insb
in
iret
sbb
cmp
icebp
aam
dec
lods
mov
lock
sti
into
cmc
sbb
mov
ja
movsb
cld
xlat
push
xor
pusha
insb
inc
aad
push
clc
in
scas
cmpsl
sub
inc
fnsave
and
lret
jb
push
cmp
inc
aad
add
mov
insl
jns
dec
adc
mov
inc
push
addr16
jmp
dec
dec
int
mov
pop
test
inc
dec
data16
loope
out
push
lods
inc
daa
in
cmp
xor
fisubrl
mov
repz
cltd
inc
scas
inc
fcmovnb
outsl
fdivrl
imul
adc
jecxz
pop
pop
movsl
jbe
adcb
fmull
push
push
les
in
xchg
pop
jne
pop
mov
sub
mov
mov
jp
push
jns
inc
jns
rorb
lods
pop
fcoml
sbb
in
outsb
notb
repnz
push
jle
xor
mov
jae
jno
daa
imul
mov
mov
mov
xlat
ret
dec
out
add
pushfw
jmp
ljmp
fmull
jmp
xor
inc
adc
into
mov
ja
inc
out
lock
fcompl
sub
imul
cli
mov
xor
imul
out
dec
rcr
and
cltd
add
idivl
add
jbe
cmpsb
lret
shrb
stc
push
cmpsl
jnp
aam
xchg
jge
roll
cltd
adc
sarb
sub
lods
js
dec
lea
inc
daa
pop
addr16
insb
int
shlb
fstpt
xchg
and
sub
pop
rorl
imul
push
roll
cmp
rclb
lret
test
adc
sbb
add
lds
test
dec
pusha
rcr
int3
pop
xor
and
mov
repz
arpl
push
lock
std
es
adc
xor
stc
inc
inc
test
cmpsb
sub
and
scas
xchg
movsb
sbb
orl
jnp
rolb
pop
mov
cwtl
xchg
orl
sub
xor
hlt
mov
add
sarb
sahf
lret
ficoml
cmp
jl
xor
dec
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
inc
push
mov
adc
adc
mov
loopne
push
pop
pop
mov
push
fcmovu
adc
mov
stos
sbb
call
inc
cltd
adc
rep
mov
jns
dec
loop
xchg
shrl
sbb
ds
shr
arpl
fdivp
into
push
pop
scas
xchg
pop
dec
fs
mov
pop
xorl
or
lahf
ja
cmp
inc
jb
mov
ja
add
sub
or
pop
pop
aas
push
in
cmpb
xor
mov
inc
cmp
xchg
pop
lods
mov
imul
add
mov
frstor
mov
dec
iret
sbbl
out
ljmp
add
or
in
pop
icebp
shrl
cmp
ds
jnp
push
into
xchg
fsubs
mov
mov
pop
xchg
mov
or
ds
cmp
stos
out
imul
ret
push
aas
inc
mov
gs
lods
mov
and
push
insb
adc
adc
add
add
hlt
cmc
les
xchg
dec
lret
lret
aaa
orl
in
iret
push
sbb
adc
xor
iret
push
mov
or
loopne
into
fstpl
mov
fcmovnu
pop
xor
push
adc
ds
outsb
adc
daa
sub
dec
std
sub
and
loop
lahf
cld
push
xor
outsb
popf
mov
repnz
jo
jns
jge
mov
push
jno
xchg
cmpsl
sti
push
fisubrl
fstpl
ret
stos
push
mov
test
aad
xor
pop
jae
pop
sbb
add
adc
jno
cmpsb
push
mov
cwtl
inc
pop
mov
scas
mov
dec
fwait
dec
mov
rclb
scas
dec
lods
cmpsb
aad
frstor
mov
scas
add
xor
stc
out
jae
popa
ja
mov
mov
imul
fs
lret
and
dec
jae
sbb
jecxz
mov
push
add
jbe
push
pop
stc
cmp
push
insb
push
cmc
cmp
xor
sbb
nop
xchg
fsub
ljmp
push
popa
sbb
iret
jae
outsl
ss
rorl
sub
in
sti
ficomps
cmp
inc
mov
push
mov
jmp
sar
cld
aaa
mov
cmp
lock
scas
mov
adc
sbb
pop
mov
dec
sub
inc
rcll
push
shl
jle
cmp
mov
mov
mov
mov
cmp
in
cli
inc
leave
mov
mov
outsb
jle
bound
push
jo
xchg
lahf
adc
and
fists
push
sub
add
leave
and
shll
into
jge
cmp
mov
lret
sbb
xor
adcb
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
outsl
mov
adc
adc
imul
mov
mov
cwtl
xchg
and
adc
aas
ret
inc
notl
test
das
mov
imul
push
and
mov
shlb
lcall
pushf
xchg
pop
sub
icebp
and
fisubl
dec
cmp
sbb
in
fwait
ss
test
adc
imul
lods
fwait
mov
dec
scas
dec
cmp
scas
in
in
aaa
add
aam
mull
add
adc
aaa
outsl
cld
pop
bound
mov
jecxz
dec
sahf
cmp
push
xchg
dec
jb
movntq
shrb
nop
fildll
out
cmc
insb
inc
lret
mov
int
sbb
inc
pushf
movsb
sub
jno
xor
pop
js
shlb
fs
mov
test
in
dec
xor
add
push
sarb
dec
jne
sbb
jb
jo
push
pusha
mov
ss
fsubs
jnp
test
mov
leave
repz
mov
es
insb
fadds
and
mov
xor
lret
in
adc
jno
arpl
fcmove
ror
fsubrs
xlat
das
sub
adc
or
stos
loopne
ss
iret
push
sub
add
push
add
jge
leave
mov
je
bound
sarb
call
out
cmp
rorb
scas
cmp
addr16
dec
test
lods
sub
adc
lock
or
mov
lahf
xor
cmp
push
rorl
jo
fstpl
mov
dec
ljmp
clc
inc
sbb
dec
sub
push
pop
xor
xchg
jp
out
leave
popf
es
jo
icebp
push
div
lods
inc
jle
or
mov
and
arpl
ljmp
cmpl
sar
xchg
pop
adc
cmp
mov
jbe
xor
movsb
into
inc
cs
mov
cmp
add
inc
pop
loope
mov
lds
pop
dec
inc
push
push
or
sub
lods
jp
aam
inc
in
cmp
mov
pop
fcompl
mov
pop
or
out
mov
jmp
mov
xor
push
push
out
inc
ret
sahf
movsb
xor
push
adc
push
xchg
jb
aad
pop
ss
inc
negl
jge
cmp
mov
or
dec
mov
nop
movsb
out
xchg
push
xchg
or
mov
cs
in
in
mov
mov
xor
jno
pop
inc
fisubrl
pusha
push
push
loope
jmp
ljmp
push
aam
loop
inc
or
test
inc
out
rclb
lods
sarb
xchg
cld
pusha
or
test
ret
imul
fs
hlt
and
mov
sbb
fwait
add
insb
add
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
js
pop
lods
loope
adc
adc
adc
adc
xor
fists
dec
mov
mov
mov
stos
imul
add
push
fdivp
ja
pop
ret
enter
cli
jno
jns
out
push
pop
xor
jae
fcmovnb
rcrl
xor
mov
fs
mov
push
shlb
push
movsl
jmp
test
push
mov
pop
xchg
sub
sbb
sub
or
jb
shl
jnp
lcall
rcr
add
and
xor
fisubrs
adc
jnp
dec
in
sti
dec
ljmp
clc
inc
jns
test
repz
outsb
push
lcall
add
outsl
in
adc
movsb
pusha
mov
stos
outsl
and
fwait
loopne
fs
dec
dec
fisttpl
pop
mov
mov
dec
mov
cld
outsl
call
inc
jecxz
mov
xchg
xor
nop
mov
stc
push
les
xchg
push
dec
repz
xchg
jno
mov
sub
roll
loop
das
scas
cmp
mov
mov
pop
cmp
adc
in
mov
lret
mov
loope
and
jle
ret
ss
popf
add
mov
xchg
dec
adc
int3
jecxz
in
icebp
and
mov
lret
sbb
ja
repz
sti
je
mov
sti
nop
rol
ficoml
xchg
or
loope
fistpll
push
cmpsl
movsb
sbb
xchg
cmp
mov
mov
pop
or
mov
stos
jp
adc
fstl
inc
mov
jb
out
or
fcmovbe
fxch
stc
das
mov
sbb
mov
ficomps
inc
leave
test
pop
int3
ds
adc
std
push
inc
je
inc
pusha
pop
gs
imul
je
in
adc
sbb
pop
push
sahf
xlat
jecxz
jo
fstp
popf
cltd
fld
loope
je
addr16
cmp
nop
dec
fiaddl
hlt
jge
cli
test
jmp
insb
jg
es
imul
out
mov
test
mov
imul
repnz
mov
movsb
push
mov
sbb
jl
shr
in
jb
xchg
dec
cmp
aam
in
mov
cmpsl
jp
in
mov
sub
mov
jnp
xchg
pop
adc
sub
notl
icebp
jae
jns
pop
inc
push
test
sbb
jns
and
ret
fildll
scas
bound
xchg
jno
les
xor
cld
insl
in
cli
nop
std
dec
mov
jp
lea
aam
cmp
inc
rcrb
popa
mov
out
sbb
push
iret
in
dec
mov
mov
stos
js
add
xchg
adc
cltd
push
bound
jmp
pushf
je
pop
pop
jne
pop
call
mov
pop
mov
xor
outsl
addr16
add
cld
sub
out
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
fcomp
sub
dec
xchg
jmp
push
sti
lahf
sbb
sbb
lea
push
xor
ljmp
mov
push
sub
pop
cwtl
xor
in
push
repnz
push
xchg
adc
ret
push
push
jge
push
mov
mull
add
das
sub
jmp
xor
jg
dec
inc
lcall
add
jl
xor
lods
out
ja
mov
or
insb
jnp
test
ja
inc
ljmp
test
shll
cmp
dec
mov
sub
sub
and
jmp
cmp
lahf
test
cmpsl
ds
mov
adc
push
sbb
xor
pusha
loopne
mov
cmp
cmp
xchg
pusha
stc
push
out
sub
xor
std
jmp
cmc
inc
ret
frstor
mov
inc
jl
mov
pop
cmc
push
adc
jb
xchg
sub
mov
cltd
mov
cmpsl
dec
mov
out
add
rolb
ret
dec
test
aas
cltd
pushf
xchg
pop
aas
sub
mov
push
xchg
mov
sub
sbb
loope
xchg
pop
roll
cli
push
aad
je
int
in
mov
mov
push
ljmp
addb
push
mov
add
ror
jne
jnp
dec
insb
xchg
mov
sbb
push
inc
sbb
adc
sub
mov
xchg
shl
repnz
into
dec
mov
ret
mov
push
fstpt
ja
subl
rcl
inc
mov
jl
icebp
repnz
mov
mov
fs
cmpb
std
mov
pop
add
mov
fwait
mov
js
inc
push
sub
xor
popf
xor
aad
test
push
push
push
dec
sti
dec
fcmovnbe
out
stos
or
ss
and
bnd
fmulp
and
adc
bound
nop
shrl
add
pop
inc
and
mov
movsl
retw
jle
lahf
test
cmc
test
and
cwtl
adc
movsl
xchg
inc
mov
je
mov
jecxz
xchg
add
xchg
test
xchg
sub
xor
jbe
jp
icebp
jb
fildl
nop
push
xchg
loopne
sub
outsb
test
jo
xchg
notb
popa
add
xchg
sub
adc
rorb
cmovns
mov
fwait
or
push
adc
lahf
dec
mov
cmpsb
lock
fcmovnb
xchg
xchg
sub
mov
js
jg
das
pushf
in
mov
push
loopne
sbb
add
mov
mov
and
mov
mov
test
shlb
fbstp
jbe
into
repnz
repz
dec
sti
test
xchg
and
sub
inc
cmp
mov
in
mov
mov
jmp
in
xchg
add
mov
adc
stos
inc
sbb
inc
add
jno
adc
jo
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
movsl
nop
js
aad
adc
adc
adc
sbb
insb
lret
mov
dec
roll
in
sbb
jge
sub
repnz
and
scas
test
pop
outsb
jno
adc
xor
mov
roll
fstl
ljmp
fs
lcall
loopne
xlat
or
mov
hlt
inc
push
int
inc
stos
xchg
stos
xchg
pop
fnsave
pushf
mov
mov
sub
pop
dec
sub
loop
test
and
jbe
pop
and
mov
push
push
adc
mov
lcall
dec
dec
cmpsl
sbb
scas
hlt
add
or
fistps
scas
mov
sub
push
stos
sub
inc
daa
es
xor
andb
aad
lea
or
js
arpl
dec
push
cmp
sub
mov
movsb
js
call
das
jbe
inc
adc
movsb
nop
cmp
fildll
xlat
loop
xchg
push
mov
adc
cltd
movsb
bound
xor
out
xlat
fnsave
mov
mov
jmp
push
pop
sub
loopne
mov
mov
jae
and
mov
loop
xchg
mov
data16
cld
and
les
add
push
lahf
ds
dec
jge
cmp
pop
or
push
jecxz
int
loop
inc
imul
jp
pop
mov
les
mov
inc
jge
mov
in
ret
jnp
jae
ja
add
sbb
or
mov
ret
popf
xchg
or
add
add
popa
sub
pop
sti
sbb
mov
cmp
stos
xor
cmpsl
lods
loop
xchg
int3
xchg
inc
xor
dec
scas
cmp
adc
push
mov
popf
mov
aad
stos
xor
adc
sub
repnz
xorb
fimull
loop
ljmp
out
sub
mov
mov
pop
mov
jae
pusha
mov
mov
adc
inc
mov
add
jns
cmp
insl
push
add
sub
jmp
sub
outsl
inc
inc
imul
dec
lds
movsl
out
mov
pop
add
ror
sti
dec
cmp
inc
jge
pop
add
insb
and
fdivrs
pusha
imul
pop
enter
shll
mov
sbb
repz
rcll
hlt
push
out
rolb
dec
dec
cmpsb
inc
pop
inc
loope
jge
call
or
jl
leave
push
hlt
fiadds
adc
and
jbe
xor
sub
in
das
sbb
rcll
push
lock
dec
addr16
add
push
cmc
mov
cmp
push
jmp
lret
paddb
es
jp
in
daa
mov
xchg
add
ret
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
ret
nop
js
int
adc
sbb
test
lods
nop
imul
dec
adc
cld
xchg
test
xor
popf
and
test
jb
testl
fwait
stc
xchg
push
cwtl
nop
or
in
mov
nopl
xchg
inc
aaa
movsb
aas
dec
sbb
movb
cwtl
fcomp
or
rcrb
stos
es
add
cld
jl
loopne
add
sahf
rcrl
add
mov
dec
nop
shl
and
dec
pop
cli
add
cmp
push
xchg
aas
inc
cmp
sbb
mov
scas
shll
shl
das
jge
rcll
jo
ja
jecxz
out
outsl
repnz
dec
or
mov
pop
mov
fwait
cmpb
jge
mov
pop
out
xchg
cmpsl
push
push
xchg
dec
xchg
adc
xchg
pop
mov
mov
dec
bound
fsts
incl
ficoml
jmp
fistpl
popf
ficompl
insb
repz
jnp
scas
aad
call
mov
jmp
push
jb
ljmp
data16
nop
and
pusha
stos
mov
fcoml
sahf
sti
inc
jp
test
mov
sbb
mov
push
inc
int3
dec
nop
imul
int
daa
addl
sbb
sti
lret
add
dec
or
add
hlt
jmp
dec
scas
fldenv
aas
shll
add
imul
push
gs
testb
pop
rcll
and
outsb
sub
cmp
loopne
cmp
cmpsl
mov
mov
mov
out
mov
test
imul
pop
aas
xchg
arpl
rolb
xchg
add
adc
dec
je
mov
shrb
std
fcoms
loopne
mov
std
sti
sbb
test
int
pop
mov
dec
out
inc
dec
jns
loope
daa
xchg
loope
mov
mov
out
mov
fcoms
cltd
push
idivb
lods
rcl
push
xor
addr16
and
jbe
enter
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
fdivrl
xchg
movlps
xor
ljmp
xchg
push
andl
push
pop
repz
cmp
ja
sbb
int
sti
lods
aad
or
add
pusha
rcl
and
insl
sbb
inc
icebp
dec
push
lea
int
or
cmp
lret
icebp
shll
mov
add
mov
fdivs
enter
cmc
fiaddl
int
push
mov
orl
ss
ss
mov
add
shr
repnz
adc
jmp
xor
mov
cld
lods
pop
gs
dec
mov
push
push
sbb
mov
mov
push
xor
test
aas
les
repz
mov
sub
cmp
insl
pop
loop
lahf
stc
add
lods
popa
xor
iret
cltd
rcrl
sub
xchg
mov
push
ja
jl
mov
loope
insb
mov
aas
dec
test
lret
xchg
ret
cltd
jae
popf
adc
push
or
lcall
pusha
add
cmp
loop
lock
subl
mov
jbe
sbb
jae
js
mov
jbe
cmp
sti
push
scas
rolb
xor
dec
outsl
mov
in
push
mov
mov
sbb
sbb
lock
dec
fcmove
xor
adc
mov
mov
jns
insl
mov
fisttpl
aad
pop
cmp
push
dec
int
rclb
sbb
jge
mov
push
or
mov
out
data16
mov
and
ss
and
push
cmpb
mov
int3
inc
push
imul
scas
sub
lret
ret
xchg
push
add
xchg
in
add
pusha
dec
shll
xchg
cmp
mov
lcall
jg
mov
xchg
scas
add
pusha
jnp
xchg
cltd
inc
or
xor
push
fwait
xor
xor
aad
mov
cmc
insb
clc
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
ret
loope
insb
add
adc
xchg
movlps
lcall
push
fadd
sar
mov
dec
cwtl
out
mov
test
adc
stos
pop
inc
test
and
mov
inc
sbb
adc
iret
fmuls
or
xor
add
daa
fistpll
jbe
mov
jns
imul
push
stc
lret
or
int
mov
bound
sub
cld
shll
mov
push
pop
xor
pop
dec
jb
pop
test
xchg
mov
cmp
add
or
xchg
movsl
movsb
outsl
adc
xor
jmp
mov
in
out
test
pop
jno
and
out
nop
pop
add
ret
jno
loopne
js
xor
sbb
xlat
or
push
leave
fs
and
or
pop
push
pop
loop
mov
aam
lcall
rorb
in
dec
fs
sarl
pop
inc
mov
call
in
mov
lret
pop
imul
xchg
mov
jnp
lods
dec
push
fcompl
test
or
imul
mov
fistpll
mov
inc
sti
mov
dec
pop
imull
or
bound
iret
lret
push
inc
shl
jmp
cld
bound
push
outsl
xchg
lret
rorb
add
jl
pop
push
cmpsb
cmpxchg
addr16
jbe
sbb
inc
inc
lret
imul
xor
cmp
fwait
push
fsubl
call
ljmp
mov
bound
ss
push
data16
jecxz
jbe
mov
push
lret
clc
sti
iret
dec
and
jmp
outsb
mov
test
pop
push
fdivp
cmp
fwait
mov
bnd
test
lahf
imul
aas
jmp
xchg
rorb
in
int3
xor
sub
in
or
xchg
es
inc
jle
orl
fcmovbe
jnp
sti
inc
sbb
add
popf
lcall
iret
dec
arpl
bound
add
sub
mov
scas
sete
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
sahf
icebp
fidivrl
xchg
movlps
inc
outsl
add
mov
adc
es
jp
cmp
int3
testb
ss
cld
loopne
cmp
insl
pushf
pushl
mov
aaa
and
sub
stos
aad
or
leave
insb
je
sbb
pop
out
cmp
popa
sub
lods
sbb
pushl
xor
icebp
scas
push
or
mov
lods
mov
xchg
jge
icebp
test
fildll
xor
test
push
xchg
aam
xchg
add
repz
mov
into
cmp
add
or
mov
sbb
push
stc
rcl
sbb
add
push
xor
jbe
icebp
mov
ret
call
jle
adc
mov
push
and
rcl
push
adc
xchg
imul
rorb
mov
paddw
pop
pop
push
sbb
push
das
or
xchg
adc
int3
sarl
add
inc
lock
sbb
dec
lret
xchg
lret
sub
in
mov
shlb
adc
divb
iret
lcall
push
int
mov
aad
push
mov
movsl
xchg
bound
loopne
cmp
pop
cmp
mov
lds
adc
lret
add
mov
xchg
lret
or
dec
xor
movsb
push
add
gs
push
sub
push
sbbb
lret
cmpsl
adc
out
out
ret
mov
push
adc
jbe
dec
insb
js
cli
pop
push
jns
out
ret
mov
lock
sub
mov
mov
lret
add
stos
pop
daa
mov
sbb
cmpsb
data16
roll
and
jne
addr16
cmp
into
lods
inc
inc
das
mov
jl
loope
sti
rolb
out
dec
sub
stos
xchg
test
int
test
stc
in
mov
scas
mov
aaa
dec
mov
jno
mov
adc
push
outsb
popf
shll
jmp
lret
jmp
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
or
outsb
loop
cmc
lea
sub
cwtl
sub
out
mov
aaa
push
fildll
mov
push
adc
into
mov
xchg
nop
pusha
cmpsl
push
hlt
push
mov
lods
sbb
push
pop
add
jns
add
fsubrs
mov
mov
rcrl
pushl
mov
std
rorb
stos
adc
aas
rorb
push
xchg
aam
lea
hlt
mov
call
jno
push
in
xlat
sub
adc
lret
and
out
pop
stos
and
adc
pop
test
mov
es
test
jno
imul
sub
cmp
dec
inc
rolb
xor
sub
xor
inc
and
mov
rcr
inc
push
shll
mov
int
cmp
jg
inc
adc
lcall
cld
ss
out
push
xor
fwait
mov
cmp
mov
mov
or
dec
sbb
idiv
sbb
push
sbb
cmp
jbe
dec
rcrb
icebp
aam
jmp
xchg
jmp
inc
cmpb
lods
rolb
xchg
insb
mov
testl
dec
sub
jb
hlt
test
pop
or
inc
out
pop
push
ret
add
roll
fsubs
mov
xchg
fisubl
hlt
ja
and
dec
imul
xchg
and
scas
cmpsl
mov
jo
shrl
cmc
mov
mov
adc
lret
mov
inc
sti
or
lahf
cld
test
ss
test
lahf
lods
push
pop
cli
scas
mov
aas
sub
pop
shll
in
xor
in
pop
sbb
fsubr
rorl
in
into
mov
mov
jecxz
int
daa
mov
hlt
popf
jo
cmp
arpl
push
jno
mov
negb
in
xor
jg
cld
jl
lret
xchg
cld
mov
jmp
xchg
add
inc
add
mov
shl
sub
jns
outsb
les
push
loope
xor
dec
insb
pop
xchg
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
xor
mov
xchg
movlps
inc
pop
cmp
jo
rcl
aad
mov
insb
dec
sti
or
xor
loopne
mov
mov
scas
jmp
xchg
jb
stos
jl
pop
xchg
sbb
sbb
cmpsb
adc
add
inc
xor
addr16
mov
and
mov
lcall
dec
in
scas
push
js
ret
les
push
clc
mov
fistps
mov
daa
fwait
rcrl
mov
in
add
enter
jne
scas
ret
sbb
ja
imull
fiadds
outsl
cmp
test
jae
sbb
push
inc
pop
out
jge
cmp
mov
mov
mov
jns
lds
test
dec
add
xor
fidivs
out
popa
push
xor
sub
daa
mov
sbbb
mov
hlt
stos
mov
or
pushf
xor
jbe
into
or
push
out
add
mov
lods
mov
cld
xor
fsin
push
mov
xor
mov
imul
jecxz
nop
mov
pop
insl
or
push
jo
jns
jmp
insb
stc
aaa
push
cmpsl
inc
xchg
inc
cs
adc
out
fnsave
pushf
repz
mov
mov
ss
pop
je
and
daa
push
adc
xor
fucomp
mov
mov
in
shlb
shr
loope
inc
in
loop
xor
or
xchg
nop
mov
scas
dec
jnp
sub
int3
pop
mov
push
or
out
pop
sub
pop
add
push
rorl
jmp
in
adc
stc
jmp
aad
pop
daa
xor
nop
fstl
jnp
scas
and
or
lahf
and
cli
rclb
arpl
xlat
fsub
inc
jecxz
xchg
mov
cld
cmpsb
mov
or
xor
cltd
adc
test
inc
push
xchg
cli
mov
insl
add
mov
fsubrp
addr16
ficompl
mov
jge
adc
orl
stos
mov
push
rolb
out
je
dec
cmp
daa
ljmp
or
cmc
jp
jne
mov
sbb
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
mov
adc
adc
adc
or
push
cmp
cs
sub
jo
stc
pop
or
dec
inc
outsl
lcall
mov
mov
sub
xchg
xchg
push
sti
add
icebp
sahf
or
jb
push
push
lea
daa
dec
stos
dec
call
or
fldt
cli
mov
mov
inc
sub
push
nop
into
push
subl
lods
and
jbe
hlt
sbb
cmp
add
sbb
mov
adc
in
loope
sub
aam
mov
icebp
notl
cmp
shlb
push
add
xchg
jnp
lahf
sub
jl
push
pop
stos
dec
daa
dec
call
xor
mov
dec
xor
fcoml
dec
xor
add
mov
arpl
fstpt
faddp
cmp
push
lock
fsubs
std
xchg
push
inc
push
imul
lock
andl
or
xchg
sbb
sub
insb
es
daa
cmpsb
jne
push
jbe
test
aaa
xorb
stos
mov
repnz
dec
jae
add
sub
inc
iret
push
stos
dec
and
lret
rolb
add
mov
es
xchg
stos
sbb
pop
and
push
push
xor
jb
dec
andl
sbb
ljmp
out
repz
pop
mov
aam
cli
fimull
aad
add
jnp
adc
push
jg
in
lahf
add
mov
push
int3
or
jmp
in
xchg
push
mov
sub
jae
negl
jns
add
mov
add
lcall
daa
mov
xchg
loop
push
repnz
sbb
movsl
and
inc
jne
cmc
push
movsb
and
aam
xchg
testl
es
inc
insb
adc
inc
addr16
and
push
imul
in
add
and
cmpsb
mov
or
sub
pusha
les
mov
mov
add
mov
iret
incl
mov
orb
jecxz
mov
je
test
das
adc
mov
inc
mov
cwtl
pop
enter
movsb
lea
je
dec
push
enter
lret
loope
insl
out
orb
push
dec
jae
sub
adc
push
pop
add
sbb
sahf
xor
lods
icebp
mov
inc
ss
dec
ds
mov
xchg
in
scas
sub
fdiv
sbb
rclb
stos
repnz
cmp
test
ja
sbb
js
sbb
or
out
cltd
outsl
sbb
xor
test
movsb
movsb
testl
adc
pop
pop
mov
into
lret
sahf
enter
fbld
data16
dec
jns
sbb
mov
xchg
lock
pop
dec
adc
xlat
aas
es
and
int3
add
lods
loopne
jns
push
mov
xchg
mov
test
and
popf
xchg
shlb
pop
adc
rcrb
loope
add
popa
add
dec
aas
jl
repz
mov
call
or
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
repz
stos
out
cmpsl
adc
add
adc
iret
pop
lahf
sbb
ss
jb
imul
jae
loope
ret
push
push
int3
cmp
shll
and
adc
in
xchg
mov
jb
stos
adc
popf
rcrb
pop
adc
and
bound
push
lret
and
pushf
stc
inc
bnd
cwtl
inc
inc
mov
cmp
xor
add
sub
xchg
add
mov
inc
lods
cmp
or
mov
push
fwait
mov
mov
sub
push
mov
movsl
adc
in
in
xchg
push
adc
jae
sub
mov
pushf
leave
nop
push
mov
and
testl
mov
jb
sbb
cmpsb
mov
dec
inc
mov
inc
mov
or
pop
leave
or
incb
ljmp
adcl
dec
daa
xorb
out
add
into
movsb
push
and
mov
add
nop
test
lcall
stos
cmp
jmp
push
push
lret
leave
xor
pop
and
les
xchg
mov
jge
sahf
push
mov
push
pushf
insw
int3
andl
ljmp
das
inc
test
imul
loopne
pop
xchg
movsl
xchg
ret
cli
mov
push
mull
xchg
jp
lods
int3
std
divb
popa
push
adc
pop
mov
mov
test
cmp
or
dec
cmp
jp
cmp
aam
push
int3
shlb
jecxz
in
dec
cwtl
adc
mov
or
cmp
imul
lods
enter
in
je
mov
in
pop
xchg
xor
mov
jmp
rol
ret
addl
fmull
js
dec
xchg
push
inc
hlt
or
mov
mov
mov
push
mov
cmpsl
adcl
daa
xchg
outsb
mov
data16
mov
and
dec
mov
xor
out
jns
testb
mov
jno
jne
cmc
out
pop
cmp
loop
jmp
sbb
and
fwait
xchg
jmp
xor
pop
aas
aaa
dec
jnp
pop
ret
mov
dec
dec
mov
and
add
push
lret
adc
dec
cli
push
push
stc
mov
lea
mov
push
and
adc
test
hlt
xchg
imul
and
test
xchg
cmp
cld
jns
sub
adc
pop
out
cmp
mov
repnz
jecxz
jo
mov
pop
outsb
pop
adc
loopne
ret
out
sbb
lret
inc
adc
loop
stc
movl
inc
shl
dec
pop
sbb
dec
push
int
push
sub
mov
outsb
mov
cmp
fdivrl
loope
ds
jl
inc
pop
aad
out
imull
sbb
dec
lock
aas
imul
cs
adc
insl
sbb
gs
mov
movsl
clc
arpl
shrl
or
jno
sub
cmpsl
push
add
xchg
push
jb
mov
jo
lods
notl
pop
ljmp
jl
out
xor
aaa
mov
or
lods
xchg
icebp
sti
js
sbb
add
lret
adc
popf
loope
scas
pop
sbb
xor
adc
jg
aaa
cli
mov
jns
mov
jnp
loop
push
pop
scas
inc
xchg
push
add
cld
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
repz
lods
adc
das
push
clc
xor
test
mov
and
lcall
cld
cli
ret
mov
sbb
cs
das
aas
jbe
ds
xor
cmp
xor
cmp
lret
aaa
mov
jg
cmpsl
mov
mov
fisubrs
out
enter
enter
negb
mov
cmp
in
test
or
cmp
inc
imul
pushf
mov
jb
mov
je
and
inc
hlt
dec
cltd
sbb
cld
movb
sti
push
xor
mov
sahf
rolb
push
add
scas
adc
pop
mov
imul
mov
test
lods
movl
outsb
or
lcall
pop
xchg
sub
push
mov
push
push
scas
sub
mov
sub
mov
fwait
adc
iret
xchg
xor
xchg
mov
or
sti
cmp
sahf
ja
adc
cmp
test
mov
je
lcall
add
test
add
inc
dec
sub
hlt
mov
rclb
mov
std
movsb
js
lods
dec
dec
loope
incb
xchg
mov
adc
pop
lea
test
dec
cmc
lock
daa
push
pusha
adc
inc
test
leave
or
mov
dec
add
jle
popa
jle
add
jb
ja
addb
sub
jge
push
cmp
je
cs
dec
fs
xor
or
mov
or
add
call
js
or
push
stos
mov
or
divl
ljmp
mov
fs
shll
inc
lcall
jg
sbbb
ficoml
andb
dec
push
sub
movsb
lods
or
and
pop
push
inc
fistl
popf
lret
sbb
mov
imul
lods
in
cwtl
xchg
push
ret
and
jnp
cmp
push
scas
int
sub
clc
push
fwait
insb
cmpsl
push
and
and
xchg
xor
push
sub
pop
jmp
das
jnp
out
scas
lods
inc
sti
lret
adc
dec
in
pop
loop
addr16
mov
and
mov
hlt
es
inc
jp
fiaddl
and
test
add
push
fwait
inc
xchg
jl
cmpsb
in
aam
and
pop
popf
xchg
mov
movsl
push
mov
icebp
mov
mov
out
add
in
cmp
in
mov
clc
push
lcall
bound
cmp
mov
jge
out
push
add
stos
pop
mul
mov
mov
push
mov
add
mov
add
xlat
out
lea
sahf
mov
fcmovnb
fcomps
scas
mov
outsl
je
xchg
dec
xchg
xor
lahf
xchg
inc
es
jecxz
and
jmp
add
xor
mov
daa
mov
jb
bound
adc
mov
dec
dec
mov
out
jno
adc
pop
mov
push
loopne
shrb
flds
filds
dec
pop
inc
xor
push
mov
insl
test
xor
push
and
addr16
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
sbb
popf
adc
jne
adc
inc
push
push
pop
lods
leave
out
push
xor
bound
lds
cmp
lds
pop
cmp
or
dec
call
jle
push
xchg
mov
add
test
loop
pop
lods
movsb
movd
adcb
push
andps
pushf
pushf
clc
mov
push
out
xor
inc
jbe
xor
jb
jbe
and
int
arpl
lret
push
orl
or
loop
mov
int
mov
mov
cltd
xchg
sub
or
mov
xlat
leave
rolb
inc
imul
dec
dec
push
gs
mov
push
cmpsl
xchg
std
lahf
dec
push
lret
aad
sti
mov
ret
xchg
cmpl
add
mov
adc
pop
enter
cs
lds
addr16
or
cmp
push
mov
jbe
rclb
aaa
ljmp
dec
or
bound
cmpsb
xor
je
data16
mov
loopne
shlb
addl
das
arpl
outsl
mov
stc
mov
and
cmp
xchg
or
outsl
jp
add
mov
scas
movsb
popa
sahf
jae
les
jl
add
lock
decl
lahf
mov
sub
mov
push
fs
cmp
pop
fcmovnbe
and
cmp
mov
xor
adc
shlb
cmp
repnz
push
jle
les
add
andl
xor
or
out
daa
cmp
aaa
rorl
adc
inc
cmc
ret
iret
jne
scas
adc
fistpl
push
in
jo
mov
fisttpl
xchg
xchg
sbb
mov
ret
das
dec
or
xchg
push
rcrb
iret
inc
movsb
cmpsl
xor
and
sti
push
arpl
inc
mov
adc
and
hlt
mov
sbbb
sbb
push
jno
aam
inc
imul
int3
orl
cmp
fwait
js
and
push
ss
dec
push
cmpsl
lds
testl
insb
adc
and
jb
shlb
lcall
mov
inc
pop
push
nop
pushf
and
add
jg
jmp
stc
nop
les
mov
pop
call
jno
ja
cmpl
mov
imul
orb
mov
dec
call
lock
outsl
mov
cmp
fidivrs
inc
add
pop
stos
mov
or
pop
loop
dec
dec
or
adc
inc
push
jmp
xorb
addr16
push
negb
cwtl
pushf
mov
cld
mov
cmc
and
inc
jo
or
fists
cld
scas
push
adc
dec
lcall
sub
or
lret
cltd
mov
fwait
jge
hlt
inc
push
jmp
jb
pop
stos
and
insb
xor
add
repz
mov
ds
push
xchg
mov
jbe
pop
sti
ret
mov
adc
insl
jne
sbb
pop
pusha
inc
ja
dec
mov
imul
and
cs
call
add
aas
and
adc
jl
xor
dec
sbb
imul
lods
lds
loop
cmp
mov
stc
push
hlt
mov
jae
loope
je
js
jmp
cmp
xlat
stos
xchg
push
mov
xchg
andb
popa
lods
mov
dec
xchg
xor
loop
mov
push
and
in
cltd
mov
xlat
es
mov
jle
dec
cmpsl
dec
add
loope
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
inc
push
je
sub
adc
mov
test
fsubl
jmp
scas
mov
adc
pop
push
lret
les
sub
movsl
sahf
push
pop
inc
scas
aad
mov
outsl
aad
or
fs
dec
imul
push
cmp
add
xchg
shrl
pop
sbb
mov
mov
rcl
scas
push
in
mov
and
mov
push
insb
fistl
ret
mov
inc
fidivrs
xchg
and
jg
inc
inc
push
mov
or
xchg
je
lods
dec
push
and
pop
incl
jecxz
or
mov
push
or
or
xrelease
aaa
popf
stos
frstor
negb
add
xchg
mov
fiadds
ficomps
and
arpl
sti
movsl
mov
jbe
ss
test
sti
mov
xchg
pushf
in
cmpsb
mov
mov
fisubs
jae
loope
data16
xor
scas
cmp
fsubrl
adc
sub
jmp
push
data16
hlt
adc
in
xchg
or
or
mov
inc
pusha
mov
dec
adc
pop
adc
cmpsb
jbe
int
adc
mov
enter
and
pop
test
xlat
sar
scas
cwtl
lea
inc
out
stc
xor
fcoml
add
xchg
or
xchg
bnd
loope
add
mull
rcr
cmp
push
cmp
sbb
mov
cmp
aas
adc
ret
pushl
pop
test
jle
add
pop
inc
or
sahf
sbb
adc
shrl
loope
and
je
popf
inc
jg
mov
mov
sbb
int
xchg
and
pop
dec
cmp
popf
hlt
hlt
xchg
into
cld
shll
push
adc
jge
fiadds
test
mov
shrl
xchg
adc
mov
rol
mov
stos
es
stos
popa
or
mov
push
mov
mov
stos
mov
decl
dec
pop
in
jmp
cmovbe
xchg
or
rol
xlat
push
cmc
repz
pop
xor
stos
fildl
and
cld
ja
dec
jne
mov
movsl
fiaddl
scas
ret
lods
cmp
icebp
popf
shrb
roll
scas
sbb
stos
out
mov
jl
ds
mov
lods
std
je
push
xchg
rol
jb
and
mov
int3
mov
jmp
mov
pushf
outsl
adc
ljmp
mov
sub
and
sub
repz
pop
cmp
imul
icebp
push
sub
mov
mov
loopne
aaa
test
into
mov
bound
mov
inc
orb
cmp
xor
or
test
xor
mov
fisubl
rcr
and
loopne
mov
popf
pop
pusha
dec
call
js
sahf
repnz
add
pop
lock
adc
mov
std
shll
mov
inc
sahf
add
jmp
sti
sbb
pop
imul
jecxz
sbb
cmp
pushf
mov
negl
scas
daa
fistpll
outsb
aad
sbb
jp
scas
rorl
popa
cltd
lods
out
ss
in
pusha
jno
inc
mov
and
data16
push
decl
pushf
jmp
pop
mov
cmpsl
dec
mov
mov
test
pop
xlat
lret
cltd
mov
int
mov
aaa
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
jmp
insb
orl
adc
rcr
sbb
or
sub
add
hlt
lea
dec
cvttps2pi
or
lds
subb
ja,pn
mov
cld
into
testb
out
inc
and
shll
mov
adc
lods
in
ret
push
in
inc
mov
sti
jl
pop
sub
dec
fwait
orb
out
loop
insb
and
push
jecxz
mov
pop
pop
jp
push
pop
pop
or
cmp
push
scas
in
mov
jae
push
jp
jns
pop
data16
push
mov
xlat
sarl
sbb
loop
jbe
daa
imul
sahf
xor
pop
insb
pop
jg
pop
push
lret
sub
and
fadd
inc
sbb
hlt
push
dec
fldl
xor
pop
add
xor
into
or
xor
and
inc
nop
pop
outsb
negl
pop
or
jnp
arpl
aam
cmpsl
stos
into
jnp
lea
movsl
push
jp
mov
adc
sub
dec
fcompl
shrb
mov
sbb
loop,pn
dec
inc
into
adc
sub
fsubrl
inc
pop
push
jmp
js
push
ds
or
cli
pop
cmpsb
idivb
cmp
lea
ret
jnp
pop
rolb
sbb
mov
ja
pop
movsl
mov
mov
add
mov
arpl
mov
xchg
push
adc
xor
mov
or
add
ja
int
fisubrl
js
and
sub
fs
outsb
ret
push
jecxz
testl
movsl
insb
push
pop
push
lea
mov
sbb
mov
jne
xorb
lahf
sbb
cmp
mov
adc
jb
repnz
in
mov
es
std
divb
pusha
jno
jae
xor
xor
in
inc
mov
sbb
aam
loop
sub
add
decl
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
fadds
dec
xchg
adc
movlps
aas
dec
pusha
sbb
lods
dec
lahf
adc
mov
sub
xor
mov
push
mov
lret
mov
adc
adc
cs
mov
scas
jp
jecxz
test
arpl
sbb
je
add
test
popf
rorl
add
ds
mov
xchg
mov
dec
or
mov
inc
xchg
push
sub
clc
and
out
pop
cmp
mov
push
cmc
jae
mov
dec
add
mov
adc
adc
dec
imulb
fcompl
pop
jns
mov
dec
pop
bound
bound
imul
fisubs
cmp
ja
dec
in
test
ljmp
jge
mov
jns
sub
inc
fadds
fwait
add
or
lcall
and
xor
icebp
inc
pop
cwtl
mov
sbb
ljmp
jp
aam
pop
push
insb
inc
ret
jne
xlat
add
jo
inc
xor
sbb
aam
ficoml
push
mov
or
mov
sub
in
pop
movsl
adc
packsswb
fcmovb
insl
fidivrl
mov
cli
inc
jb
psubw
pop
mov
push
iret
pusha
addb
mov
cmp
adc
push
test
insl
add
inc
sahf
jo
lea
addr16
lcall
into
bound
loop
aas
push
push
stos
cmpsl
xor
push
mov
roll
out
mov
xchg
call
jmp
fwait
loope
sarb
jbe
scas
rolb
xchg
movsl
cmc
mov
jne
mov
or
and
lret
push
pushf
and
xchg
data16
repz
add
in
scas
das
movl
cmc
out
addr16
ret
push
stc
out
into
jb
pop
in
push
insl
insl
test
xor
cmp
push
add
nop
xchg
mov
lret
xor
add
xchg
jecxz
or
movsb
add
jbe
xchg
ja
mov
lret
sbb
fstpl
push
jge
aam
rcll
es
cltd
xchg
adc
mov
hlt
mov
mov
xchg
lea
arpl
shll
jmp
jae
test
loope
jne
sbbl
aaa
ret
cmp
dec
adc
and
cmp
cmp
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
je
js
test
adc
movlps
xchg
pop
sub
mov
or
fiadds
movsb
mov
and
int3
lods
mov
push
xchg
mov
or
out
sahf
push
movsl
mul
sub
dec
shll
jae
xor
push
mov
xor
inc
cmc
fstpl
adcb
pop
mov
sbb
sarb
imul
pop
stc
popa
ficompl
inc
std
and
xor
scas
mov
sbb
imull
pop
clc
push
push
adc
repz
push
cmp
int
dec
xchg
or
jnp
xchg
jo
sahf
jecxz
test
adc
pop
dec
cmpsl
inc
stos
loope
inc
cmpsb
stos
aaa
xchg
jmp
or
adcl
push
stos
icebp
arpl
add
xchg
pusha
loope
mov
mov
movsl
outsb
xchg
adc
sbb
sbb
movsb
fldl
xchg
lret
push
xchg
mov
stc
xchg
push
lea
fmulp
adc
push
fdivrl
dec
add
xor
and
push
mov
sub
js
sub
nop
sub
popf
jbe
jmp
mov
stos
out
cmpsb
imul
add
jne
mov
mov
sbb
shll
call
dec
sbb
test
test
mov
call
mov
lods
lahf
sub
sub
dec
pop
mov
adc
dec
js
cmp
cmpl
repnz
xchg
jp
jne
xchg
push
mov
fisttpl
mov
arpl
add
lret
popa
and
or
pop
loope
add
lcall
jl
daa
inc
cwtl
shll
xor
push
jle
and
add
mov
les
push
mov
cmp
mov
xor
and
jno
aad
mov
mulb
das
popa
mov
aad
shll
xor
add
inc
std
test
fld
push
xchg
xor
inc
movsl
push
shr
push
shlb
mov
fwait
out
cmc
movb
aad
shufps
dec
daa
add
and
push
icebp
sbb
or
and
push
pop
sub
clc
jae
pushf
or
femms
mov
inc
cwtl
mov
xor
sub
mov
iret
pop
or
mov
daa
mov
lret
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
jmp
adc
movlps
push
ljmp
cmpsl
mov
clc
mov
lahf
lcall
push
pop
aad
ret
cli
gs
cwtl
fxch
ds
xchg
insb
sbb
and
xchg
test
mov
jnp
xchg
or
cld
push
cmp
mov
inc
mov
cs
add
sti
jo
movsb
dec
add
roll
jle
adc
and
sbb
push
cmp
hlt
xchg
rcrl
dec
lret
aas
jg
ljmp
pushf
fwait
mov
xchg
push
aaa
scas
lcall
lahf
dec
mov
add
and
push
and
adc
call
fs
cli
lock
and
mov
sti
xor
pop
or
adc
inc
inc
push
std
loop
and
shl
dec
shll
fstpt
lcall
add
fists
sbb
adc
xchg
xchg
inc
push
daa
pop
aam
and
mov
adc
ret
addl
fimuls
xor
xlat
ljmp
xchg
xchg
sbb
sar
mov
cmp
sbb
dec
sub
fsubrs
xchg
mov
xor
dec
cmp
hlt
jl
xchg
adc
mov
nop
adc
popa
pop
outsl
sbb
adc
adc
addr16
lret
inc
es
cs
lcall
jp
mov
cmp
cmpsb
stos
jg
or
pop
mov
adc
mov
xor
icebp
jl
push
insl
xorb
scas
enter
pop
adc
shlb
xchg
sahf
popa
leave
incl
adc
sub
inc
mov
mov
dec
xchg
xorb
out
idivb
sbb
fbld
ret
sti
cmp
cwtl
les
add
inc
xchg
ljmp
inc
pusha
xor
bound
fiadds
mov
inc
adc
call
pop
repz
aad
gs
nop
sti
ret
and
pop
stos
ficompl
adc
cld
pop
insl
rcrl
mov
and
xorl
sub
mov
fidivrs
mov
jns
fstpl
or
lock
lea
push
jp
jg
rcr
add
inc
mov
push
cld
xchg
mov
mov
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
ret
cmc
stos
clc
ja
adc
movlps
cmpsl
lcall
mov
pop
cwtl
pusha
cs
mov
std
sub
stos
inc
push
rcl
inc
sub
mov
or
sti
subl
aam
lock
and
inc
adc
cmp
cmp
in
mov
ret
mov
or
jge
mov
push
ret
cmpsl
dec
inc
scas
mov
inc
aad
inc
mov
loope
in
inc
push
mov
mov
and
popa
ljmp
outsl
mov
and
and
xor
push
lret
pop
push
xor
icebp
xchg
push
imul
or
loopne
xchg
jle
bound
loope
test
jl
xchg
stos
push
test
addps
test
mov
lahf
int3
mov
add
xchg
shr
sbb
sub
push
test
and
xchg
out
mov
cs
mov
pop
lret
cmp
adc
push
cmp
adc
xchg
add
pop
int3
je
mov
cmp
cmc
outsb
xchg
cli
rorl
sub
mov
push
dec
testl
test
aam
in
iret
lds
lret
mov
aad
pop
sbb
pop
mov
adc
inc
jp
je
shll
shl
in
fcmovb
inc
jg
or
add
xchg
leave
les
and
leave
movsl
je
dec
xor
ljmp
dec
jmp
xchg
fwait
in
loope
pop
fcoml
out
adc
sarb
clc
mov
jno
movsl
ljmp
mov
test
push
shlb
adc
ljmp
inc
repz
imul
movsb
stc
scas
add
xchg
pushf
mov
loope
jge
in
pop
jg
and
and
mov
pop
xchg
jg
push
in
lods
pusha
mov
sbb
or
mov
or
dec
std
jno
fwait
cmp
shl
mov
cmp
adc
movsl
pusha
pop
stos
adc
jle
into
add
ds
cmp
lret
je
inc
arpl
lods
mov
or
jl
cmp
into
sbb
sub
or
outsb
outsl
push
rolb
pop
fldcw
sti
inc
repnz
lret
xchg
dec
mov
scas
add
fstpt
shl
call
mov
jmp
js
cmc
repz
sub
and
loop
adc
decb
adc
ret
das
dec
movsl
sti
adc
sub
and
pop
add
pop
scas
leave
xchg
jg
inc
push
es
movsl
sub
adc
mov
cmpsb
xor
cmpsb
out
mov
lea
jp
dec
xchg
jno
lahf
decb
arpl
outsl
add
mov
repnz
scas
scas
in
sbb
sub
fs
adc
adc
adc
or
test
sbb
add
and
stos
xor
dec
arpl
sub
loope
flds
xor
addr16
shrb
pop
xor
sub
es
add
test
mov
mov
cld
xchg
enter
sub
pop
int3
inc
sbb
inc
dec
sub
mov
in
xor
sbbl
lods
mov
mov
mov
or
stos
push
sbb
rep
cmpsl
mov
cmp
or
scas
add
xor
push
rolb
cmpsl
push
or
enter
cltd
int
fistps
and
and
lret
mov
lods
xchg
sbb
lret
and
xor
fidivs
and
fidivrl
mov
jbe
popf
insl
sbb
cltd
mov
xchg
xor
aad
lahf
xor
or
int
in
fdivrs
mov
sbb
jnp
adc
add
pop
adc
adc
or
cmp
push
mulb
shrl
aad
add
paddsb
sbb
fcmove
pushf
sbb
dec
or
cmpsb
popa
and
roll
xchg
mov
or
xchg
out
pop
into
adcl
jb
jo
xor
mov
fwait
cmp
xchg
mov
push
gs
xchg
in
loope
cmp
mov
push
sahf
repz
bound
add
add
pop
dec
nop
xchg
pop
lods
mov
test
flds
sbb
jg
mov
nop
xchg
push
sbb
jp
or
sbb
mov
mov
std
xchg
mov
out
xor
test
dec
or
dec
push
shll
dec
je
push
fs
jno
push
test
fdivs
inc
jno
push
jp
loopne
fcompl
clc
insl
fyl2xp1
mov
decb
movsl
mov
add
sbb
adc
add
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
js
jno
adc
movlps
or
fbld
mov
rcll
jecxz
test
jb
icebp
xchg
adc
sahf
out
xchg
mov
out
lcall
adc
out
sub
dec
adc
les
or
in
jnp
xor
adc
cltd
jmp
shlb
jp
std
clc
mov
mov
or
sub
cmc
icebp
jne
dec
popa
ret
lcall
stc
xor
into
and
imul
aas
stc
dec
dec
addr16
jle
add
mov
mov
xchg
lds
stos
jp
push
inc
les
pop
xorl
adc
add
add
scas
pop
pop
push
das
daa
push
xchg
xor
lret
int
inc
fs
fwait
push
inc
sub
and
lock
jp
mov
stc
cltd
mov
loopne
pop
or
outsb
pop
jae
xchg
shr
stc
rorb
sbbl
sti
in
aaa
adc
or
aam
stos
push
jo
pop
stc
cs
dec
lret
jae
cmp
addb
cltd
loope
mov
adc
jmp
xchg
mov
mov
jno
push
gs
add
addl
cld
pop
mov
hlt
jo
lahf
adc
ja
shl
loope
pop
adc
frstor
or
or
rorl
stos
or
inc
mov
mov
mov
data16
loop
mov
inc
mov
ror
adc
data16
and
inc
int3
mov
cmp
pop
mov
and
sbb
ret
bnd
mov
mov
lods
xor
dec
inc
mov
mov
mov
ret
ret
jb
fcom
push
sub
push
lahf
sbb
mov
insb
popa
push
xor
scas
scas
push
jae
xor
movsl
add
insl
add
nop
pop
pop
scas
cltd
push
xorl
mov
sub
dec
cld
mov
and
mov
pop
sbb
inc
mov
jg
pop
les
sbb
cmp
fwait
popf
push
insb
loopne
cld
enter
mov
xor
fnstcw
jb
ret
jl
fwait
push
pop
fnstsw
btr
outsb
dec
xor
fmuls
insb
and
cmpsl
insb
out
or
movl
xor
movsb
or
sbb
mov
fs
insb
loop
push
push
test
or
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
dec
push
mov
movlps
jmp
rorl
repnz
cs
xchg
outsl
and
addr16
add
ja
add
xor
xchg
gs
add
clc
xor
pop
adc
pop
loope
cmp
xchg
ret
repnz
clc
xor
in
pop
in
jbe
loop
sub
push
insl
subl
or
add
mov
roll
popf
mov
and
out
jmp
dec
inc
xchg
in
les
mov
je
outsb
inc
fstp
jbe
pushf
repnz
mov
push
popf
je
xor
xor
sbb
lea
loopne
scas
outsb
loope
or
push
fists
pushf
je
dec
in
shll
pop
incl
or
ljmp
shll
testb
movsl
mov
negl
cltd
cmp
aas
dec
hlt
add
stos
test
cwtl
lea
pop
push
pop
mov
stc
mov
xchg
add
cmovp
dec
out
mov
dec
push
xor
xchg
add
jmp
xchg
push
mov
in
xchg
out
dec
ja
stc
sahf
decl
jmp
push
sahf
mov
cs
mov
js
inc
add
jecxz
pop
sub
repz
sbb
push
xchg
jne
mov
inc
cltd
sub
mov
sub
mov
in
or
adc
negl
aad
xchg
mov
mov
adc
fucomi
jge
adc
mov
jbe
mov
sub
ja
sbb
insl
adc
test
jb
dec
push
std
push
or
jb
int
mov
jo
fiadds
aam
mov
push
out
dec
fcomps
adc
call
push
test
and
jns
inc
mov
inc
pop
test
cli
js
mov
dec
mov
inc
inc
hlt
hlt
outsb
into
test
or
popa
push
loop
xchg
or
dec
aam
dec
cli
sbb
ret
fcomp
dec
cmp
add
pop
loop
aad
out
insb
sub
xlat
shll
pop
and
push
xlat
cmp
xlat
jecxz
clc
shlb
jo
mov
pusha
and
test
or
dec
xor
sbb
dec
and
aad
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
inc
add
arpl
adc
movlps
pop
mov
loopne
and
lret
jnp
push
sbb
fdivl
clc
pop
add
adc
jmp
or
push
addl
jne
cs
cmp
mov
stos
pop
dec
lds
fistpl
or
add
mov
out
stc
das
inc
and
mov
inc
mov
movsb
xchg
sbb
fucom
mov
ds
pop
aam
inc
pop
mov
mov
call
daa
jo
xor
cmpsl
imul
xchg
add
mov
cmovp
mov
cld
mov
xchg
loop
mov
sarb
add
mov
sub
cmp
sbbl
push
adc
shrl
mov
imul
insb
rorl
mov
or
xor
add
cli
cwtl
lea
mov
inc
call
mov
xlat
adc
jns
divl
mov
stos
add
cmp
inc
lods
cli
jmp
ljmp
push
imul
into
enter
jo
leave
cld
mov
adc
mov
fs
or
lcall
push
lret
mov
fsub
and
add
push
pop
or
daa
rclb
jo
mov
iret
es
pop
pop
or
js
jns
loope
pop
out
pop
fisubs
xchg
aad
fcomps
mov
fstps
cmp
xchg
cs
jbe
cwtl
outsb
cli
jge
repnz
dec
pop
imul
loop
popa
in
mov
xchg
cmp
adc
add
jnp
into
push
sbb
test
pusha
std
pop
mov
ja
or
int
enter
xlat
ljmp
cmp
sbb
jo
mov
imul
sbb
pop
fidivrl
inc
lahf
negl
xor
sbb
cld
movl
shl
leave
jne
lea
jns
cwtl
movsb
fcoms
adc
das
lret
cmp
vpblendmw
sub
dec
andl
inc
inc
negl
movsb
mov
push
xor
pop
mov
ds
jecxz
mov
inc
jg
or
xchg
jge
popa
xchg
into
loope
cmp
gs
es
mov
sarb
inc
pop
icebp
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
cmp
lods
jp
adc
decb
adc
das
mov
cmpsb
push
adc
xor
pop
mov
add
adc
aaa
int
cmp
xchg
xchg
lods
mov
mov
sub
enter
mov
cmp
rol
pop
inc
push
aad
in
shll
rol
jo
lret
icebp
mov
outsb
sbb
shl
aas
inc
sti
iret
fwait
movsb
cmpsl
shl
sbb
xchg
and
repz
cmpsl
or
pop
jns
outsl
insl
das
mov
xchg
dec
roll
and
pop
addb
ret
push
insl
add
sub
pop
icebp
sbb
faddl
jg
inc
pop
sub
mov
pop
jmp
fbld
jne
pop
pop
pop
sbb
sarb
xchg
cmp
add
cmc
ret
mov
and
push
pusha
neg
sbb
cmpsl
movsl
fdivrs
mov
mov
loopne
cmc
shll
or
push
xor
xlat
sbb
cmp
inc
stos
jnp
dec
adc
mov
add
clc
lahf
xorl
jecxz
push
mov
xchg
loope
fidivs
xchg
test
int3
jbe
mov
rcll
mov
sub
popf
xor
sub
xchg
mov
shlb
arpl
push
cmp
out
stos
jns
lret
scas
xchg
push
bound
pop
movsl
cld
push
push
jecxz
jns
sub
add
xchg
adc
stos
es
aad
fsubs
pop
sub
mov
pop
repnz
std
fnclex
test
bound
test
jge
andb
mov
imul
add
in
xor
shll
lahf
and
push
out
mov
adc
cmp
lret
add
lods
adc
ja
sbb
xlat
mov
pop
add
repz
dec
outsl
xor
cwtl
xor
mov
testb
push
sbb
shr
cmp
sub
mov
sub
in
mov
int
dec
xor
mov
mov
pop
inc
test
ja
xchg
xor
std
add
insb
inc
sub
scas
out
std
inc
sub
loope
nop
adc
mov
sbb
dec
xchg
aad
adc
test
jg
push
fldl
in
cmp
insb
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
lods
pop
pop
adc
decb
adc
cmp
icebp
negl
xchg
sbb
mov
cmp
je
aaa
mov
inc
mov
dec
mov
mov
jecxz
dec
fs
dec
mov
push
mov
cmpb
jmp
and
push
dec
fstps
pop
lods
xor
popf
or
fsubrl
enter
ret
and
sti
divb
lret
lea
adc
popf
adc
pop
cltd
or
and
jg
fsubs
popa
mov
sub
mov
mov
xor
inc
jge
ljmp
mov
mov
in
adc
insl
les
pop
add
xchg
icebp
or
std
je
add
lea
or
insl
adc
lahf
cmp
xchg
pusha
sbbl
aad
leave
mov
insb
lcall
dec
adc
adc
daa
push
mov
mov
push
cld
mov
xchg
iret
data16
test
int3
out
pop
adc
ficomps
shr
mov
dec
push
int3
add
shlb
scas
jne
xchg
pop
mov
fistl
adc
leave
das
and
xchg
and
or
inc
xchg
sbb
adc
int
enter
push
neg
dec
cmp
lret
fmull
into
or
lea
leave
jo
inc
mov
mov
dec
inc
jo
jne
dec
mov
rcll
mov
xor
sub
pop
dec
push
cmp
cmc
inc
adc
mov
mov
aam
pop
jno
push
mov
js
ss
push
cmpsb
ja
daa
cmp
sub
mov
mov
xor
loope
mov
lock
cmp
bound
mov
xchg
xchg
mov
adc
push
xchg
inc
cli
jo
jae
mov
xchg
dec
pusha
insl
daa
jns
std
cmpsl
scas
jnp
mov
mov
or
or
hlt
mov
sbb
sbb
jns
repz
dec
pop
aas
jno
loop
adc
jnp,pt
xchg
sti
push
dec
out
lea
lods
fldenv
mov
xchg
insl
mov
cmpsb
leave
adc
out
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
add
enter
adc
decb
adc
cmpsl
add
xor
roll
push
push
jecxz
insb
xchg
dec
lahf
cmp
lret
sbb
ljmp
and
lcall
add
xchg
pop
scas
sbbl
pop
xchg
fs
mov
mov
mov
inc
mov
xorl
mov
push
loope
stos
mov
cli
loopne
mov
addb
add
repnz
sbb
xchg
push
xchg
dec
add
xchg
into
jno
stos
das
cmpsl
xchg
sub
rcl
xor
ja
xchg
mov
lods
mov
push
bound
ja
xor
ja
jge
test
loope
sbb
jmp
sub
and
jo
jno
add
mov
insl
pop
pop
lcall
push
xlat
mov
in
mov
shr
inc
pop
arpl
cmp
jnp
sub
jns
dec
sub
sbb
push
out
mov
push
cwtl
mov
not
push
cmc
adc
outsl
dec
sbb
mov
dec
pop
push
mov
jecxz
mov
mov
add
or
jmp
cmp
jmp
lret
jns
cmp
sub
ja
ja
xchg
push
pushf
mov
test
or
dec
pop
ds
shrb
adc
int3
data16
ljmp
adc
cmc
inc
ret
jbe,pn
push
cmp
jl
rolb
xchg
cli
cmp
inc
movsb
xchg
xor
dec
mov
sub
push
and
lret
xchg
mov
jmp
sub
fistpll
je
add
adc
adc
dec
int3
and
sub
mov
inc
add
mov
fmull
lcall
cmc
out
addl
inc
aad
push
and
orb
adc
xchg
pop
push
dec
fldenv
sahf
sarl
shl
and
add
scas
popf
push
movsl
fs
fdivs
push
shrl
mov
cwtl
add
stos
leave
rdmsr
and
mov
shrl
dec
jecxz
pop
das
das
sub
xor
or
jo
sub
outsb
lahf
sbb
subl
mov
cmpsb
jo
pushf
inc
int
xchg
repnz
jbe
int
xlat
mov
aad
add
sbb
das
gs
push
dec
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
jl
mov
decb
adc
cmp
sbb
adc
imul
xor
adc
add
lcall
dec
cmc
jbe
sub
aad
push
fisubl
and
imul
xchg
mov
push
sbb
sub
push
push
test
pushf
outsb
push
out
aam
mov
mov
pop
mov
mov
jg
mov
pop
es
dec
add
jns
xor
movsl
jl
mov
dec
insb
xchg
fldcw
push
incl
ror
rolb
mov
ret
mov
mov
jp
push
push
mov
in
lcall
idivl
ror
cmpsl
pusha
clc
sub
cs
es
add
dec
xchg
jle
sti
and
in
test
in
xor
push
test
out
test
sbb
push
cmp
fcomps
test
sbb
cmp
aad
fucomp
or
mov
pop
jns
out
push
cmpsl
pusha
subl
jg
negb
fdivrl
mov
fimuls
xor
and
repz
not
rcrl
mov
lds
out
loopne
xor
jl
add
adcb
pmulhw
xor
xchg
cmp
cmp
push
mov
push
repnz
xor
lahf
test
and
mov
adc
or
cmc
test
and
fcmovne
add
icebp
xchg
imul
dec
dec
mov
adc
sub
cmpsl
dec
test
pop
inc
std
xor
ja
arpl
mov
shll
lds
jmp
cmp
push
add
sbb
cmp
pop
add
mov
repnz
ds
mov
inc
incb
pushf
lret
inc
hlt
push
cwtl
add
shr
inc
cld
mov
mov
jnp
xor
out
lret
push
mov
pop
out
lahf
xor
stos
cwtl
fildll
mov
or
cmp
xchg
adc
xchg
cmp
inc
ret
add
imul
jp
pop
xor
push
add
fcoml
cmc
xlat
mov
dec
nop
pusha
sbb
xchg
xchg
xor
xchg
sbb
aad
movsb
lods
inc
fsubr
mov
cmpsl
in
ljmp
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
in
lods
adc
adc
movlps
mov
dec
xor
les
push
js
in
push
adc
pop
sbb
lock
xchg
popa
imul
jne
cld
sub
mov
and
outsb
jmp
jno
adc
arpl
test
push
or
inc
adc
lock
les
cmc
loopne
hlt
push
outsb
sub
xchg
push
adc
imul
mov
pop
add
addl
jmp
int
mov
out
jae
imul
test
inc
mov
mov
mov
js
cmpsl
mov
push
xor
xor
sub
int
repnz
ds
ja
inc
jg
daa
aad
movsl
xor
push
or
jbe
adc
pop
fisubrl
in
mov
std
andb
in
or
cmpsb
loope
lcall
bound
iret
xor
inc
stc
jbe
or
add
out
repnz
fstpt
push
mov
sub
inc
lmsw
imul
xor
les
cwtl
inc
pop
adc
dec
scas
mov
dec
xchg
fnstcw
cltd
adc
sub
mov
and
lods
fsubl
pop
ret
inc
shrl
add
mov
daa
mov
inc
lcall
sub
fildl
and
lcall
adc
pop
dec
sbb
cmp
mov
jb
jp
dec
xchg
cmp
aas
imulb
ret
test
lods
push
sbb
fwait
mov
mov
imul
sti
mov
sti
insl
pusha
aaa
int
daa
and
mov
out
push
sti
mov
mov
gs
out
pusha
pop
cmc
loopne
cs
or
stos
cmpsl
pop
and
mov
jecxz
inc
sbb
sbb
jbe
fdivrl
jns
data16
push
cmpsb
cmp
mov
push
out
ss
cs
sahf
add
xor
testb
mov
and
mov
mov
scas
cs
jbe
ficompl
cld
adc
and
mov
jo
add
rorl
mov
in
and
sbb
sub
mov
jp,pt
cmp
je
aas
movsl
rcrb
idivb
sbb
inc
scas
xor
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
xor
cld
push
loopne
repz
sub
imull
inc
test
cmp
mov
or
add
push
jnp
push
add
sbb
sahf
cmp
mov
aad
mov
addl
inc
push
das
add
pop
mov
call
push
add
push
mov
cmc
cmp
xorb
int3
scas
inc
imulb
pushf
incb
mov
push
lret
fwait
xchg
xchg
cmpsb
push
aas
jl
imul
movsl
jo
ss
jle
fnsave
bnd
jle
xchg
or
add
push
or
mov
sbb
xchg
mov
jae
int3
lods
stos
imulb
fstpl
dec
adc
stos
jb
sub
mov
rorb
dec
ficompl
aad
fwait
fs
repz
push
and
cmpsb
arpl
or
insb
cmc
lock
push
cmp
jg
or
mov
pop
push
xor
or
jno
xor
dec
cmpsl
sub
or
call
dec
mulb
ficomps
inc
lds
add
push
mov
mov
clc
xchg
sbb
fbstp
clc
jb
pop
xchg
sbb
mov
xchg
test
stc
cmpsb
arpl
jmp
lods
fucomi
ds
imulb
pop
fucomp
push
les
mov
out
jge
pop
pusha
or
xchg
insl
jecxz
jmp
dec
inc
mov
pop
mov
sub
mov
dec
aas
sub
jl
pop
xchg
and
jmp
mov
scas
repz
shlb
sub
arpl
das
push
test
xor
ret
inc
cmc
jns
in
mov
jp
or
dec
adc
sub
and
inc
icebp
inc
sbb
push
rol
fcmovnbe
addr16
out
movsb
add
pop
sti
cwtl
loopne
roll
test
pop
aam
mov
std
out
mov
push
lock
in
incl
add
and
rcl
mov
mov
int3
fidivrl
xor
call
test
ret
inc
nop
aas
and
xor
lock
ss
stos
cmc
xchg
leave
mov
xchg
mov
sub
sub
mov
push
fildl
sbb
mov
push
adc
push
cmp
outsl
xchg
pop
lahf
int
mov
add
inc
adc
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
inc
ljmp
shr
or
enter
xchg
or
loopne
and
xchg
jp
jmp
cmp
push
jo
repnz
icebp
dec
adc
add
bound
mov
pop
xchg
cmp
mov
sti
mov
xor
xor
sub
push
adc
cmp
sbb
xchg
adc
loopne
call
daa
or
xor
js
mov
in
push
inc
jae
jo
sbb
call
arpl
arpl
in
popa
inc
mov
cmp
enter
ds
out
adc
or
in
pop
mov
mov
cmc
imul
iret
add
xchg
les
scas
fisubl
sub
test
loop
jmp
dec
lods
add
adc
inc
xchg
inc
and
push
mov
mov
lret
repnz
outsl
add
loop
aas
push
ret
xchg
adc
out
jp
scas
outsb
addr16
cmp
dec
adc
pusha
mov
movsb
fsubs
mov
gs
mov
stc
jecxz
mov
mov
pop
movb
sub
int
adc
test
or
sti
jecxz
in
push
cmp
sbb
nop
aad
adc
mov
pop
popa
dec
sti
mov
adc
pusha
js
sti
mov
mov
and
mov
mov
xor
movsl
mov
cmp
aam
jnp
mov
sbb
inc
jbe
popf
jecxz
jb
sbb
mov
pop
jb
mov
pop
or
orb
push
ljmp
fbld
sub
cs
push
inc
sub
cli
daa
mov
addb
or
pushf
adc
out
mov
mov
out
mov
pop
or
add
dec
cmp
out
int3
mov
cs
and
repz
repnz
test
cmp
fcmovb
jmp
push
test
rol
stos
out
mov
cmpsb
xchg
push
mov
popf
pusha
js
ljmp
pop
dec
adc
xlat
cli
repz
add
test
inc
pushf
clc
xor
cmpsl
popf
mov
flds
dec
nop
xchg
icebp
shr
out
inc
test
adc
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
daa
shlb
adc
cmc
cwtl
loop
sbb
lock
fmuls
cs
fcmovb
xor
xchg
push
cmp
push
adc
sbb
int
mov
xchg
or
fs
outsb
add
xchg
popf
ret
fsubrs
sbb
je
ss
dec
ficomps
loop
or
pop
sbb
jg
cs
jge
xor
lods
and
pusha
cwtl
mov
pop
mov
sub
xor
repz
pop
or
cmp
in
fsubrs
push
aam
cltd
mov
jns
or
mov
jmp
and
cmpsl
iret
mov
add
repz
lods
mov
mov
decb
cmp
mov
rcrb
sbb
mov
cmovo
dec
push
sbb
jbe
mov
dec
cwtl
or
insb
orl
roll
sahf
orb
cmp
add
int3
dec
fdivrs
repz
push
insb
mov
out
xor
push
dec
adc
mov
ss
push
scas
cli
push
add
jae
push
cmpsb
test
in
push
popa
das
jne
mov
fildll
loope
dec
fwait
cmp
xor
sub
loop
addb
xchg
dec
daa
sbbb
mov
outsb
jle
pop
adc
addr16
ljmp
sbb
mov
push
pushf
aad
push
int
mov
lea
mov
aad
divl
xor
cwtl
or
into
addr16
into
pop
clc
mov
jo
push
outsl
test
cld
rclb
lret
mov
or
fadds
inc
pop
xor
jmp
xchg
loope
dec
xlat
jne
fistl
test
dec
xchg
mov
mov
adc
or
sub
cli
dec
aas
adc
popa
sbb
in
or
adc
dec
jb
lods
cltd
xor
and
std
ret
pop
jge
xchg
push
mov
mov
movsl
xorl
out
movsl
push
clc
adc
push
mov
clc
in
fs
mov
cmp
mov
push
add
cmp
jo
sarl
jo
sbb
mov
imul
jae
popa
in
and
pop
push
xchg
sbb
loopne
push
xchg
imul
int
cs
rorb
test
in
cmpsl
loopne
pop
out
pop
push
dec
imul
inc
out
lds
pop
shlb
mov
push
fisubl
pop
xor
or
cmp
mov
imul
xlat
mull
pop
sbb
out
adc
out
loop
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
sub
push
cmp
adc
xchg
sbb
pop
sbb
out
mov
pop
mov
test
lret
hlt
and
xor
add
adcb
shll
cld
out
xchg
outsl
pusha
jecxz
ret
cmp
push
push
and
out
shl
or
dec
popf
jne
pushf
sbb
fsts
pop
sbb
in
insb
cld
fistpll
xchg
push
cmp
pop
bound
fwait
push
dec
hlt
cmp
jne
mov
dec
das
outsl
stos
sbb
sub
out
mov
push
xorb
xor
cmp
cmpl
pop
fidivs
aad
test
dec
faddl
xor
jg
negl
test
and
stos
cli
test
lds
inc
and
fwait
cwtl
lock
adc
xchg
call
adc
mov
int
nop
xor
mov
loop
je
dec
loope
testl
mov
add
cmp
adc
fcmovnu
and
xorb
bound
xchg
inc
jns
dec
bound
jle
fcoms
xlat
and
push
hlt
in
cmpsl
cmp
pop
stos
fwait
out
adc
inc
fwait
imul
jb
in
fstpl
mov
or
faddl
xorb
xchg
xchg
sub
aas
mov
or
or
shrb
icebp
inc
movsb
mov
mov
push
sub
jmp
cwtl
lds
mov
xchg
incl
mov
mov
or
ljmp
xor
cs
push
xor
insb
mov
sub
dec
pusha
sbbb
cwtl
or
cmpsb
clc
fcompl
push
out
mov
mov
cmpsb
xor
jns
mov
in
dec
mov
aaa
mov
pop
sbb
mov
mov
sub
loopne
test
cmpsb
outsl
sub
cwtl
jmp
dec
cwtl
arpl
and
pop
insb
mov
ljmp
loope
mov
rorl
shr
cs
nop
dec
dec
imul
xor
subb
mov
stos
inc
xrelease
dec
sti
clc
sub
mov
iret
mov
push
adc
leave
xchg
xor
jp
pop
shlb
test
out
sbb
xor
aas
cmp
arpl
addl
outsb
xor
inc
insl
shrb
xor
out
push
mov
and
into
push
movl
and
icebp
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
lock
mov
popf
movlps
roll
shll
into
stos
push
and
ret
jg
xchg
jns
gs
fwait
sti
mov
inc
cmc
push
in
fsts
in
xor
fidivrs
mov
adc
add
sbb
rorl
fadd
fistps
loope
aaa
dec
cmp
jbe
scas
loop
xor
mov
jl
repz
xor
mov
sti
fistl
mov
pop
sub
cmp
adc
cmc
and
loope
jle
sub
testl
shll
daa
insb
js
xor
test
sub
pop
daa
stos
xorl
push
dec
mov
pushf
xchg
cmp
cmpsl
das
call
lret
push
add
ret
iret
sub
jmp
dec
pusha
or
dec
mov
and
insb
fldcw
enter
adc
xchg
mov
movsb
in
in
dec
mov
outsl
dec
push
mov
hlt
or
mov
into
mov
movsl
insb
mov
xor
xchg
rolb
stos
mov
cmp
and
test
js
sbb
in
sub
mov
push
jmp
loop
push
in
pop
push
cmpsl
insl
push
push
out
sbb
inc
mov
sub
mov
into
push
repnz
fidivrs
inc
pop
pop
add
and
popf
adc
js
mov
vaddsd
das
xor
je
jle
addr16
jmp
mov
and
mov
pop
mov
mul
movsb
nop
shr
rcrl
jecxz
mov
subl
icebp
cs
hlt
xor
jmp
sar
jbe
add
inc
in
rcr
enter
push
ljmp
ljmp
loope
subb
push
xor
and
aas
pop
test
movsb
mov
xchg
jbe
jg
fwait
aas
rcrl
mov
stc
pop
jo
test
push
test
repz
cmp
cmp
nop
mov
mov
fiadds
xchg
lret
stc
and
aam
clc
or
das
loope
insl
rorb
aas
cmp
cmp
test
ss
mov
loop
mov
aam
notl
xchg
mov
mov
mov
dec
fcmovu
fstl
push
shlb
or
dec
inc
xchg
rcrl
or
cmp
add
and
addr16
push
adc
int3
xchg
lcall
and
ja
daa
pusha
and
or
sub
jnp
xorl
mov
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
mov
dec
ljmp
sarl
adc
orb
icebp
in
push
inc
out
cmp
cmp
test
inc
into
xor
jbe
mov
ljmp
scas
aad
addr16
and
ret
or
sarb
xchg
jg
inc
jo
loopne
jbe
and
push
inc
add
popf
cli
mov
mov
mov
sbb
mov
push
jp
daa
inc
or
outsb
fldcw
xchg
sbb
pop
pop
out
insl
lods
sub
add
fstpt
jbe
cmc
jns
fistps
or
lcall
mov
in
pop
xor
push
roll
mov
mov
gs
ljmp
arpl
divb
mov
mov
xor
inc
push
sub
dec
roll
clc
sbb
pop
mov
outsl
jle
inc
push
pop
faddl
adc
popa
dec
jecxz
add
int
push
jbe
dec
push
in
ficoml
xchg
into
adc
and
mov
in
dec
lea
jae
aad
pop
pop
pop
outsl
ror
fwait
dec
push
mov
pop
iret
fbstp
add
mov
mov
pushf
add
pusha
xchg
jmp
movsl
das
cmp
mov
jp
sbb
rorb
jmp
and
xchg
out
mov
or
loopne
cwtl
in
sbb
pop
stos
pop
insb
ret
lods
cmpl
or
lea
jp
sbb
stc
sahf
cwtl
mov
inc
push
ficomps
movsb
mov
sbb
push
jmp
mov
lods
lock
mov
sbb
or
mov
insb
push
cs
stos
xchg
and
inc
dec
int3
je
ret
test
into
sub
jmp
push
sbb
mov
shlb
dec
mov
sub
sub
fsubrl
push
xchg
ds
popa
adc
sub
mov
sub
xchg
xlat
shr
rcrb
mov
xorl
xchg
jle
popf
push
cs
or
pop
mov
movsl
test
mov
inc
dec
sbbl
pop
add
nop
das
popa
jle
fidivrl
insl
push
push
xlat
sbb
mov
jp
mov
adc
add
test
cmpsb
jne
ss
call
push
test
adc
stos
arpl
xor
push
or
adc
mov
mov
dec
push
andl
adc
cmp
pop
out
sahf
inc
push
push
inc
mov
aad
lds
add
ret
hlt
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
cmp
out
scas
sbb
ficoms
mov
repz
in
sub
test
xor
xor
jecxz
aaa
inc
pop
jg
pop
push
lahf
lahf
scas
mov
or
lods
lods
mov
cwtl
push
pop
or
sub
jle
sub
dec
jne
in
pop
mov
pop
mov
pop
xchg
out
jno
sbb
scas
js
push
xchg
push
ja
mov
inc
fimull
mov
sub
and
lock
xor
lods
out
enter
cmp
int3
adc
repnz
cs
aam
pop
cmp
testl
pop
cwtl
sbb
bound
adc
xchg
jo
fiaddl
cltd
xchg
pop
mov
jmp
icebp
push
shrl
pushf
mov
mov
pop
rcrb
push
dec
scas
and
sub
and
fcompl
leave
stc
sub
loop
imul
mov
je
fisubrs
repnz
mov
sbb
cmpsb
and
lds
mov
push
in
push
add
rol
mov
or
out
int3
insl
loopne
movsb
cmpsl
in
inc
cld
scas
mov
ret
cld
mov
pushl
push
add
ss
push
insb
repz
and
mov
addr16
xor
mov
sahf
nop
push
mov
loop
testl
andl
incl
mov
xlat
sarb
mov
cs
inc
dec
jns
dec
ret
sbb
adc
mov
sbb
imull
popa
mov
loope
push
mov
fsubs
into
je
mov
sub
fidivrs
cmpsb
mov
loopne
adc
push
push
popl
and
mov
jp
and
daa
dec
lret
mov
daa
jge
and
inc
jle
out
fdivl
out
mov
dec
ja
mov
rorb
lret
cmp
inc
mov
inc
pop
out
rorl
pop
imul
out
jno
fdivl
inc
stos
inc
movsl
xchg
sbb
cmpsb
inc
sub
sbb
dec
pop
paddq
sub
ja
test
inc
xchg
pop
jge
enter
jnp
adc
outsb
orl
xchg
xlat
fidivrs
mov
cmpl
stos
gs
in
jnp
pop
and
fld
lds
mov
mov
lods
mov
sub
push
or
and
add
add
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
scas
insb
xchg
pop
adc
iret
movlps
subl
add
jmp
scas
cwtl
and
lods
imul
push
mov
pop
xor
cwtl
fisttps
fnstcw
popa
js
xor
ja
sarl
imul
adc
mov
ds
fnstsw
push
mov
pop
sbb
sbb
pop
out
add
mov
lcall
decb
cmp
dec
hlt
ret
cmp
inc
loope
xor
mov
dec
sub
jno
pop
inc
mov
ret
loope
cmp
rcrl
sub
call
mov
jp
cmp
scas
loope
or
insl
fdivs
js
imul
xchg
and
test
je
inc
test
je
fnstenv
mov
push
cmpsl
xchg
mov
cmpsl
stc
or
push
fimuls
jno
mov
inc
lods
lds
test
sub
test
call
dec
jne
xor
lods
jb
mov
testb
cwtl
adc
inc
adc
insb
push
fsubs
jp
sbb
dec
xchg
xchg
cmp
fmull
mov
push
call
js
xor
insl
adc
xor
sub
push
mov
daa
dec
data16
push
jae
test
cli
push
lahf
xlat
and
mov
popa
mov
mov
sub
adc
pop
xor
mov
addb
dec
jg
lds
jb
popf
pusha
xor
in
push
add
ss
inc
cmp
mov
cld
sub
imul
sti
jo
int3
dec
mov
fisttps
inc
jle
jae
push
lods
sbbl
inc
rcrl
es
ror
cmp
into
cmp
out
ljmp
jecxz
movsl
out
pop
in
addl
fcomip
push
mov
imul
cli
mov
mov
nop
mov
stc
xchg
sahf
jne,pn
add
stos
and
andl
popf
push
mov
add
in
mov
cmp
pop
lea
xchg
xor
and
xchg
fildl
add
dec
shrl
xor
ficompl
mov
insl
out
xor
test
pushf
dec
mov
cwtl
mov
and
sarl
xor
cmpsl
mov
push
push
out
insb
pop
clc
xchg
cmpsl
fbld
repz
jnp
sysret
xchg
and
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
add
stos
push
sbb
adc
aas
mov
sbb
mov
ret
repnz
xchg
cmc
push
mov
hlt
in
aad
jle
jmp
and
xorb
sbb
rcll
lds
xchg
movsl
cmp
mov
xor
or
jno
xor
dec
mov
shrb
and
mov
pushf
aam
outsb
inc
jge
cmpsl
clc
mov
xchg
push
lret
out
and
leave
out
icebp
mov
xchg
loopne
jns
pushf
mov
dec
mov
sbb
dec
dec
out
cmp
add
mov
or
xor
mov
das
mov
mov
test
lfs
xchg
lcall
push
add
xlat
pop
sub
sbbb
sbb
dec
pop
adc
adc
out
and
ret
push
xor
cmp
data16
cmpsl
loope
roll
and
sbb
mov
jns
push
or
aaa
inc
pop
ficompl
xchg
inc
jnp
mov
loope
out
mov
mov
std
adc
or
mov
roll
mov
pop
xchg
push
xchg
lcall
stos
movsl
cltd
inc
mov
inc
das
es
nop
les
pop
or
xor
aaa
fiaddl
xchg
aad
mov
std
daa
add
jle
mov
inc
cld
das
mov
out
push
xchg
jmp
inc
xchg
shr
inc
imul
insb
jbe
dec
lock
aaa
add
mov
mov
mov
jo
pop
test
or
je
ja
adc
dec
enter
aad
mov
shlb
cmp
xor
mov
imul
add
psrad
hlt
setb
popa
test
push
push
pop
push
inc
movsl
pushf
lret
loope
ud0
rorb
pop
xchg
pop
std
ljmp
sub
dec
rorb
test
scas
pushf
nop
and
xchg
jnp
sti
incl
pop
lock
out
daa
push
fcmove
stos
test
orb
push
xchg
shrl
or
mov
sub
ja
stos
imul
cmp
lods
inc
notb
pushf
add
daa
inc
pop
scas
fmuls
mov
add
adc
icebp
lcall
add
jb
or
and
clc
cmp
jnp
push
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
cmpsl
sbbb
movlps
mov
icebp
mov
jecxz
aam
xorps
or
xchg
fmull
push
push
enter
mov
movsl
imul
mov
adc
outsb
sti
fwait
fs
xor
mov
push
pop
in
jmp
sub
out
nop
lret
aaa
cs
and
je
adc
sub
xor
xchg
mov
nop
out
jecxz
inc
movl
mov
fsubrl
jg
add
cmp
out
jp
or
add
lock
out
or
loope
adc
dec
jnp
mov
lret
inc
je
dec
fs
and
imul
mov
das
stos
ficomps
rcrb
imul
inc
gs
sbb
push
xor
xchg
out
dec
test
inc
pusha
sti
xchg
and
loopne
xchg
push
inc
out
inc
mov
cld
lods
loope
push
orb
jle
mov
sub
mov
aaa
mov
dec
mov
test
inc
call
loopne
cmp
xorb
stc
daa
mov
shr
xchg
je
xchg
jle
fsubl
xor
cmp
mov
pop
jb
add
mov
in
mov
in
push
mov
into
sub
xlat
rdpmc
jmp
or
es
dec
sub
add
pop
jmp
inc
popf
std
pop
outsl
mov
iret
mov
mov
insb
out
dec
ljmp
fs
push
push
ja
dec
adc
fwait
pop
jne
movsb
out
pop
adc
pop
push
mov
jl
inc
mov
jae
jmp
push
pop
mov
nop
cmc
mov
gs
int3
cmp
aaa
add
imul
loop
enter
xor
aad
lret
leave
aas
aad
pop
add
push
lock
pusha
mov
sub
mov
lods
clc
orl
icebp
neg
fidivrl
push
icebp
in
lds
out
in
lods
test
movsl
lds
sbb
popa
or
or
gs
notl
cmp
jns
insb
inc
cmpsl
les
sub
push
mov
sub
mov
or
cwtl
or
negl
sbb
aas
ss
cmp
mov
lods
aam
es
fucom
adc
dec
das
push
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
sbb
unpckhps
iret
movlps
nop
cmp
lods
in
mov
popf
cmp
dec
sbb
or
xchg
mov
sbb
nop
js
mov
jge
fdivrl
cmpsl
cli
pop
xor
cs
adc
cmpsb
mov
or
mov
je
icebp
jns
sbb
fstl
mov
and
dec
push
popa
mov
dec
and
repz
inc
jle
push
int
cmpsb
cmc
aam
in
jmp
vphaddbd
push
push
shlb
fwait
cmpsb
int3
cmp
inc
adc
movsl
inc
cli
add
mov
lret
imul
out
xchg
and
hlt
jg
shl
adc
adc
sub
push
mov
fisubs
push
and
lods
mov
mov
mov
mov
dec
mov
xor
mov
mov
enter
jle
push
mov
mov
inc
pushf
xlat
es
movsb
lcall
outsl
arpl
inc
sbb
sub
cld
leave
dec
das
jl
je
xchg
in
leave
adc
mov
xchg
xchg
ds
insl
enter
lods
inc
cmpsb
sbb
out
scas
mov
xor
and
imul
xchg
cld
xchg
dec
daa
mov
xchg
push
in
or
dec
dec
sub
sub
mov
add
pop
aas
aam
iret
pop
jmp
mov
pop
scas
int3
adc
push
push
aaa
aas
addl
stos
movsl
or
dec
shrl
xor
bound
push
cmpb
xlat
mov
push
insb
aad
inc
test
pop
xchg
cmp
inc
lea
mov
arpl
xor
clc
out
push
mov
mov
lods
sbb
inc
nop
aad
jp
movsb
inc
gs
mov
inc
push
xchg
iret
lds
mov
insl
je
aad
or
pop
cmpsb
xor
push
cmpsl
popa
mov
scas
hlt
mov
cmpsl
fsubrp
mov
loop
pop
sbb
adc
xlat
pop
mov
adc
std
xor
or
sti
leave
das
shl
fbstp
xorl
ret
test
and
sbb
mov
dec
fmuls
and
mov
add
pop
mov
xchg
fidivl
imul
aaa
cld
adc
jbe
xor
pusha
or
sub
xor
std
sbb
mov
imul
push
push
or
or
jmp
dec
pop
imul
enter
mov
test
adc
daa
adc
and
stos
and
pop
loope
imul
and
subl
jl
cmpsb
lods
stos
idivl
inc
bound
mov
lcall
sbb
jns
mov
mov
nop
test
aam
cmp
xchg
mov
out
inc
cwtl
in
test
call
in
jns
bound
insb
and
call
sbb
int3
stos
shll
adc
dec
cmp
repz
testl
stos
lods
push
mov
mov
push
jge
repz
add
repnz
iret
stos
divl
add
pop
mov
pop
xor
adc
inc
xlat
dec
iret
xor
pop
sahf
lea
lret
xchg
jno
push
bnd
inc
rclb
shlb
mov
ljmp
add
adc
lret
ds
fmull
mov
cmc
pushf
sbb
addr16
mov
rcrl
aaa
adc
daa
mov
rorl
push
mov
cmp
push
sbb
mov
push
pushf
sbb
push
loopne
aad
aad
inc
repnz
rolb
cwtl
mov
stc
loop
lahf
in
insb
fwait
inc
sbb
fs
pop
loope
add
inc
mov
popa
inc
xor
sbb
cmpsl
or
loop
xchg
mov
aas
outsl
mov
les
sub
mov
sbb
jle
push
mov
inc
or
nop
inc
mov
std
mov
test
dec
dec
loope
add
xlat
sub
fldt
dec
xchg
mov
test
popa
sub
ret
jle
mov
out
or
clc
xchg
test
dec
or
int
shll
pextrw
xchg
jmp
sar
add
inc
jg
ss
sub
loope
in
cmp
dec
or
mov
inc
and
ja
data16
pop
aam
jno
cld
push
mov
scas
loopne
inc
ficomps
and
ja
ret
insl
or
popf
aas
pop
add
adc
jecxz
leave
arpl
mov
cli
shll
sub
inc
and
aam
and
push
xor
shll
ret
jg
xchg
dec
popa
shll
aad
int3
movsl
push
jne
push
pop
ret
daa
stos
pop
and
int
adc
lahf
cwtl
stos
out
popa
sub
loope
pop
dec
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
and
das
shr
testl
mov
out
pop
lahf
sub
mov
push
add
pop
mov
rcrl
push
mov
push
enter
mov
enter
xlat
sbb
jmp
sbb
or
xchg
in
loopne
andl
cmpsl
inc
outsb
repz
push
xor
mov
or
pushl
jnp
in
iret
fbld
mov
rcrl
adc
dec
sub
pop
xor
xchg
inc
pop
cwtl
sbb
cmpsb
mov
sarl
jmp
fldenv
push
dec
loopne
fstpl
dec
mov
or
add
iret
xchg
adc
negb
gs
adc
jge
xor
je
cmp
xchg
ds
xor
es
mov
pop
mov
inc
aam
jl
leave
sub
mov
aam
movsb
movsb
notb
inc
fdivr
lret
repz
in
adc
in
popl
xchg
mov
sti
nop
mov
pop
xor
jge
std
out
inc
jae
lcall
in
lahf
shll
mov
xchg
aas
mov
jbe
clc
cmp
call
rorl
or
or
cmpsb
inc
lcall
sub
mov
cli
imul
ret
jecxz
xchg
sub
mov
and
xor
pop
push
push
arpl
rorb
pop
insl
mov
sub
inc
loope
ret
loope
sub
and
pop
fstpl
pop
mov
sbb
cmp
jns
gs
dec
and
cld
jg
imul
and
enter
punpckhbw
push
xchg
and
inc
dec
dec
inc
lds
add
inc
adc
insl
inc
fisttpl
fisubrl
movsl
insb
gs
add
xor
test
std
xchg
frstor
enter
int3
jo
inc
in
ljmp
inc
repz
xchg
sbbb
push
stc
imul
mov
hlt
in
shlb
lret
xchg
fsub
sub
dec
mov
cmpsb
jns
out
xchg
inc
pop
inc
in
insb
adc
arpl
and
sti
loope
sub
cmp
pop
cltd
xor
xchg
ljmp
ja
mov
sub
negl
push
sbb
mov
sti
or
hlt
gs
push
inc
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
ficoml
cld
call
adc
dec
sbb
cs
push
lods
dec
test
outsl
clc
fldl
fidivl
sub
pop
push
lret
movsb
adc
adc
int3
insl
dec
in
scas
cmp
scas
test
or
push
jg
cli
popa
inc
push
scas
xchg
sbb
call
pop
lock
mov
mov
into
xchg
rcrb
out
test
jecxz
aas
sbb
fstl
mov
cld
out
mov
out
push
orb
add
mov
mov
mov
push
sarb
test
mov
out
mov
xchg
cmpsb
mov
in
cmp
add
cmc
lds
and
and
pop
inc
in
xchg
fistps
in
mov
daa
loop
push
filds
sbb
lods
mov
cwtl
imul
jmp
mov
sub
pop
jecxz
inc
sbb
mov
jge
testl
pop
inc
ds
sbb
divl
mov
cmp
sbb
pop
pop
jo
dec
stc
sub
push
dec
mov
loop
jae
aaa
test
repnz
or
push
mov
daa
in
das
jg
stos
inc
stos
mov
push
cmc
pop
dec
and
std
int3
sbb
sarb
int
lock
shll
or
xchg
stos
mov
ss
mov
or
movsl
rclb
add
in
test
dec
adc
xchg
and
and
ret
jnp
leave
pop
ror
jno
push
out
test
push
ljmp
shll
push
subl
popa
inc
cmpsl
repnz
insl
nop
pop
dec
call
enter
sbb
and
sti
loopne
sbb
bound
arpl
dec
adc
pushf
hlt
bound
inc
test
pop
das
dec
and
xchg
or
fmuls
mov
imul
adc
dec
mov
shlb
testb
jb
mov
sbb
jmp
dec
leave
push
aaa
in
pop
int3
dec
cli
xchg
cmova
pop
les
lea
jmp
aaa
xor
xor
sub
sub
jnp
push
mov
and
jne
push
adc
js
mov
adc
sbb
mov
mov
gs
ds
cmp
mov
mov
sar
jmp
push
or
and
cwtl
jns
stos
jbe
shrl
adc
push
enter
data16
xchg
out
mov
shlb
int3
cmp
pop
push
pop
loope
inc
or
xchg
jo
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
xor
ja
lea
dec
push
cmp
lret
clc
repnz
dec
mov
bound
ficomps
pop
jp
cmp
push
adc
ljmp
dec
xchg
in
adc
enter
or
scas
mov
or
ljmp
xchg
or
mov
jl
xchg
test
and
push
je
jne
repnz
addl
pop
push
aaa
xchg
adc
sub
mov
mov
dec
nop
push
call
ja
imul
adc
lret
and
lods
cwtl
cmp
jl
jge
cmp
movsb
jl
mov
idivb
bnd
jne
dec
pop
fnstsw
push
arpl
aad
ss
pop
ljmp
lods
xor
aas
std
adcl
incb
fucomip
in
inc
jp
test
xchg
adc
pop
call
outsb
dec
in
dec
sbb
jb
loop
leave
ficompl
dec
adc
jg
das
pop
idivl
cltd
iret
push
and
sti
add
call
push
test
push
push
jo
movsb
sub
dec
and
lock
movsl
pop
jp
out
mov
movsl
ljmp
fdiv
jmp
daa
xchg
cmp
and
mov
dec
loopne
and
mov
pop
mov
lcall
jno
pop
mov
pop
push
lods
dec
idivl
cld
jne
inc
repz
jle
pop
aam
xchg
sub
test
test
cld
in
add
dec
mov
push
sti
push
test
push
enter
xor
mov
or
or
cltd
movsb
aam
aam
push
fsts
mov
or
sbb
mov
xchg
adcb
lret
or
insb
rcrl
int
push
dec
outsb
aad
loop
rorl
pop
sbb
outsb
or
xchg
xor
cmp
iret
inc
push
arpl
jl
in
mov
das
add
sahf
subl
adc
ja
adcb
push
cmpsb
mov
jae
lds
cmpsl
push
and
sbb
cmpsb
mov
je
sbb
pop
xor
xchg
pop
sub
sbb
xor
adc
cmp
dec
stc
loopne
sfence
icebp
fbld
add
and
inc
xor
push
bound
inc
es
and
ret
out
cltd
call
or
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
and
stc
adc
adc
mov
push
stos
sub
add
jns
pop
repnz
imul
pop
fldcw
jbe
jle
cmp
lahf
orl
movsl
aas
cmpsl
mov
or
loop
fidivrl
xchg
xor
imul
xor
repnz
mov
cmp
pop
cmp
stc
mov
and
dec
outsb
popf
stc
dec
mov
xor
pop
lret
int3
ror
mov
fdivrs
lods
jnp
sbb
add
or
dec
rcll
mov
sub
rolb
shrb
jl
inc
jb
dec
push
adc
cmpsb
jmp
pusha
adc
fwait
movsb
pop
movsl
push
xor
gs
scas
shl
cmp
jae
or
xchg
push
ret
mov
xor
aam
mov
cwtl
and
jg
iret
mov
loope
addr16
and
notb
xchg
popf
aad
rdtsc
dec
xor
out
jle
repz
insb
xor
stc
jns
inc
xlat
xchg
dec
pop
in
mov
addl
daa
lods
push
adc
adc
mov
mov
add
mov
pop
roll
xor
lods
aaa
jno
dec
std
divb
cmp
mov
arpl
es
push
lock
loop
movsl
sbb
push
sub
and
and
jl
xchg
wrmsr
sbb
pop
loopne
insl
mov
cltd
sbb
test
mov
fs
xchg
mov
movsl
lds
mov
inc
in
sarl
add
imul
pop
cwtl
push
lea
cmpl
pop
xor
inc
push
shll
inc
fs
shr
cmp
xor
inc
mov
sbb
mov
xchg
dec
loopne
shll
pop
incb
filds
cmp
out
iret
popf
sahf
pop
es
add
sahf
mov
int3
lds
fcoms
or
xchg
sti
scas
ss
daa
jo
test
flds
cli
mov
fwait
xor
in
test
or
push
subb
imul
repz
lea
xor
ret
ljmp
icebp
ret
imul
cmp
cmp
sahf
xor
dec
add
mov
mov
push
rorb
push
jnp
cld
pop
pushf
dec
xchg
jmp
push
es
leave
adc
cmp
adc
pop
cs
mov
and
or
mov
cli
jo
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
repz
fidivrl
iret
movlps
push
addr16
popf
lds
jle
cmp
xchg
cwtl
andl
pop
lret
mov
movsb
adc
jo
mov
mov
fnstenv
pusha
rorb
enter
jae
shrb
popf
dec
adc
pop
je
or
fwait
stos
hlt
popa
call
inc
mov
add
ja
and
mov
test
insb
nop
xor
jne
xor
inc
nop
and
mov
dec
adc
int
aad
imul
test
insl
cld
popf
mov
ret
pop
mov
shl
jp
adc
cwtl
btc
nop
xchg
ds
and
add
lcall
loopne
xor
shl
idivl
cmp
adc
add
rcll
jno
jae
jno
iret
mov
sub
inc
mov
jge
or
cwtl
rol
push
ret
sarb
mov
shl
push
adc
notl
jae
xchg
xor
loope
inc
jg
out
cmp
adc
sbb
and
js
ret
loopne
fistps
sub
xchg
call
test
dec
mov
fimull
int3
test
add
int3
sbb
js
pop
cmp
fdivs
outsb
cmpsb
mov
push
jbe
push
js
mov
rorl
or
dec
mov
sub
dec
jecxz
adc
clc
in
loope
insl
sub
push
arpl
rclb
sahf
loope
je
pop
sub
mov
sbb
push
test
lock
cmpsb
sub
xchg
push
jne
mov
pusha
movsb
insb
shll
and
sbb
lods
sahf
clc
and
mov
push
mov
test
cmp
jo
clc
orb
lods
pop
dec
hlt
imul
cmpsb
ret
popf
mov
mov
es
repz
cmp
fdivrs
mov
mov
or
inc
sbb
push
cs
aaa
sub
mov
mov
mov
sti
sbb
je
xchg
fcomps
add
clc
jo
fs
loopne
insb
in
cmp
scas
out
or
or
xchg
aam
leave
xlat
addr16
cwtl
in
xchg
cs
dec
outsb
rcll
and
push
outsb
pop
jne
stos
mov
addr16
pop
lret
push
movsb
inc
clc
sub
cs
push
mov
es
sbb
and
sbb
mov
cmp
add
inc
and
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
pop
out
stos
jmp
adc
adc
xchg
sbb
je
dec
addr16
test
sub
fwait
outsl
shrb
add
scas
pop
mov
or
flds
shlb
out
pop
lret
aam
test
xchg
out
lock
adc
jge
cs
or
fmuls
hlt
mov
test
mov
aad
dec
rcr
xlat
outsb
inc
loop
arpl
data16
cld
in
jle
addr16
lods
int3
and
cmp
call
pusha
pop
dec
mov
mov
adc
xchg
mov
in
cmp
xchg
loope
jge
jl
sarb
lods
test
popa
jo
invd
add
jo
scas
stos
jbe
test
test
xchg
stc
idivb
das
mov
lods
addr16
pop
dec
pop
sbb
inc
sar
sbb
cmpb
pushf
repnz
test
nop
or
daa
mov
leave
addl
loope
push
inc
stos
stos
cmp
pushf
lock
jo
cmpsb
loop
jmp
stos
add
jmp
sbb
mov
das
clc
ret
test
mov
out
movsb
cld
push
sbb
mov
fcoml
and
les
mov
lea
popf
mov
lcall
cld
jnp
cmpsb
push
mov
bound
push
lret
addb
jge
out
fbld
fmul
fldl
into
aas
std
ljmp
xchg
das
mov
fs
gs
inc
cmp
jo
cmp
and
sub
inc
sub
mov
jmp
pop
pop
jnp
mov
out
sbb
popf
xchg
jbe
push
sbb
sbb
push
in
jmp
lcall
loopne
out
outsb
mov
xor
fmuls
sbb
int3
mov
cmp
inc
dec
enter
xchg
sbb
ret
lea
dec
fwait
test
or
push
jecxz
push
add
add
add
arpl
mov
shl
cmc
popa
insb
sahf
mov
mov
jb
stc
mov
push
inc
push
lods
cmp
push
mov
inc
adc
scas
ret
daa
mov
rcl
imul
loope
scas
popa
push
jg
or
xchg
sbb
ret
in
push
out
loopne
pusha
movd
or
out
push
sbb
cmp
shlb
and
pushf
out
test
sub
xor
inc
in
sbb
loope
jnp
sbb
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
cli
in
loope
pop
pop
xchg
out
popf
ljmp
in
sarb
adcb
sub
sahf
in
mov
repz
xchg
pop
jmp
lcall
sub
mov
popa
shlb
pop
out
test
add
mov
test
mov
mov
hlt
adc
dec
fnstenv
xchg
or
sbb
addl
sub
call
xor
and
mov
fmulp
push
aam
mov
mul
shrb
pop
lret
jae
cld
js
insl
sub
push
mov
push
cld
lcall
xchg
fidivrl
aaa
inc
jecxz
enter
xlat
adc
movsb
lds
adc
sub
clc
and
fadds
jge
dec
xchg
out
repz
mov
jmp
sbb
test
mull
mov
push
fistl
sub
push
adc
roll
ret
stos
test
pop
orb
dec
mov
scas
pushf
mov
aad
test
insl
mov
nop
lea
cmp
dec
push
ja
sbb
mov
shlb
in
or
ja
push
add
incb
mov
mov
test
sub
pop
mov
js
fs
pop
push
dec
std
outsl
insb
xor
push
loopne
mov
adc
es
cmp
in
mov
dec
jl
inc
les
repnz
pop
repz
dec
aaa
rclb
mov
or
std
jmp
add
call
mov
cli
dec
cmp
jp
and
cwtl
mov
aaa
test
and
cmp
aad
dec
dec
lcall
or
enter
inc
cmp
pop
and
sti
xor
mov
inc
push
sbb
punpckhdq
icebp
sub
mov
fisubrl
xchg
push
sbb
outsb
mov
es
jl
inc
or
and
mov
sub
lahf
xor
cmpsl
test
je
mulps
push
lret
pop
sbb
adc
push
and
mov
push
xchg
mov
dec
mov
data16
pop
mov
ds
add
psubq
je
and
cs
das
add
ss
and
ja
fs
shrb
inc
dec
xor
rcr
mov
jp
stos
sbb
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
test
iret
movlps
fmuls
loopne
sub
scas
pop
adc
out
cmpsl
push
sbb
mov
and
mov
push
inc
in
mov
cmpsb
rcrb
mov
add
dec
add
fnstcw
test
sbb
enter
lret
adc
imul
sti
mov
iret
dec
xchg
adcl
xchg
push
add
cmc
pop
arpl
add
fdivl
or
scas
or
pop
and
mov
addr16
rcrb
in
xchg
inc
in
jmp
sub
mov
mov
loope
fnstsw
jno
sbb
int3
adcl
cmp
jno
in
sbb
outsb
xchg
test
pop
jg
jmp
outsb
xchg
dec
xchg
orl
std
mov
aad
xchg
pop
dec
mov
test
ds
shll
pusha
add
sub
insl
xor
daa
fs
adc
xor
jle
imul
je
fs
iret
bound
ja
add
xchg
mov
push
outsb
pop
push
cli
andl
fistpl
mov
xor
xchg
std
das
pop
xor
or
lahf
das
clc
bound
rorb
jle
lods
testl
add
xchg
shlb
or
out
pop
sub
arpl
push
add
add
movsl
test
js
shll
je
mov
mov
outsb
pop
addr16
pop
ror
pop
push
pop
les
inc
cmp
jns
xor
sbb
lret
mov
nop
sarb
jmp
jo
inc
leave
imul
mov
xchg
mov
imul
popa
loope
das
inc
iret
sbb
add
push
fs
insb
bound
push
jecxz
add
movsl
jbe
sub
inc
lea
mov
enter
and
dec
mov
stos
jmp
sub
pop
imul
xor
sub
mov
sub
fdivrl
push
sti
mov
pushl
bound
inc
pop
xchg
gs
imul
in
popf
imul
rorl
orl
andl
or
stos
jo
add
push
lret
adc
pop
pop
mov
pop
dec
mov
adc
push
xchg
lahf
xor
add
jge
cwtl
xor
test
and
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
xor
iret
movlps
cmpsb
sbb
andl
push
testl
xchg
ret
jns
and
xchg
inc
push
sbb
inc
xchg
mov
test
bound
or
jg
inc
xor
out
jge
or
ret
fs
dec
fimull
stc
test
jno
mov
idivb
inc
xor
nop
imul
dec
test
mov
cwtl
xchg
jp
xchg
pop
loope
call
fidivrs
cmp
pop
jbe
xor
jo
sub
push
adc
das
jne
es
xor
push
push
dec
decb
out
mov
mov
dec
arpl
xchg
jo
dec
xchg
fadd
sarl
call
inc
cmc
and
clc
mov
inc
add
adc
jbe
inc
pop
je
add
fisttpl
lret
sub
xchg
cmp
mov
imul
jl
pop
pusha
xchg
das
out
jns
cs
repnz
mov
jge
cmp
out
aas
xchg
sahf
out
add
jg
jmp
or
dec
mov
loopne
pusha
fsub
or
inc
or
es
ret
cmc
sahf
cltd
pop
bsf
fwait
iret
xor
mov
sub
rcrb
inc
adc
xchg
sub
mov
sarb
pusha
mov
xlat
xor
inc
movsl
mov
cmp
mov
bound
mov
jecxz
mov
in
and
cmpsl
bound
and
test
mov
mov
or
push
pop
dec
repnz
decl
mov
xchg
cmp
dec
lret
add
add
push
fndisi(8087
insb
inc
push
sahf
fstpt
xchg
xchg
rcl
xor
insl
push
inc
sbb
cmpsl
inc
loop
pushf
add
aaa
out
pop
mov
shlb
idivb
rcr
xchg
push
sbb
gs
dec
mov
pop
stos
xor
movsb
lods
mov
aad
push
test
sbb
jp
adc
mov
movsl
gs
nop
lret
inc
ret
mov
mov
mov
fucomp
mov
sbb
jnp
xor
lahf
int
or
mov
inc
cld
jae
xor
pop
mov
outsb
dec
repnz
ja
xchg
andl
push
mov
and
jno
add
lds
outsb
out
pusha
test
int3
cmp
je
sub
test
inc
and
xor
mov
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
xchg
mov
fcmovnu
adc
adc
nop
int3
dec
mov
inc
sub
mov
stos
jbe
mov
mov
push
cmpsl
push
mov
cld
ss
dec
cmc
mov
and
inc
push
loop
sub
cwtl
xor
roll
pushf
mov
sub
mov
call
add
adc
sbb
jmp
enter
xor
jns
lock
sbb
jb
movl
mov
xchg
inc
cmpsl
and
fs
jg
popf
loop
push
sub
jo
jmp
lods
push
test
test
and
popa
in
loopne
cmp
or
addr16
out
jne
ss
jp
xor
repz
js
nop
and
mov
push
in
orb
cwtl
pop
mov
aas
fadd
es
xchg
incb
loopne
scas
xchg
mov
int3
mov
ljmp
sarl
int
dec
mov
push
push
xchg
xchg
push
ss
cmpb
pop
inc
repnz
add
mov
jge
xchg
dec
in
inc
or
ljmp
daa
iret
loope
mov
in
mov
icebp
mov
scas
push
into
jne
mov
sarl
sbb
ds
lahf
jo
cld
pop
mov
mov
adc
outsb
adc
js
xchg
push
jb
xchg
enter
push
pushf
xor
orl
or
push
mov
jmp
pop
dec
cmp
dec
cld
cmpsb
dec
add
jb
pop
xlat
inc
add
sbb
rol
enter
out
jno
inc
sub
dec
jecxz
out
icebp
movsl
dec
add
or
leave
scas
xchg
xchg
adc
xor
adc
loopne
pop
out
xor
push
hlt
iret
or
jl
or
dec
add
ja
gs
and
or
sub
mov
and
aam
lret
int3
inc
jae
insb
xor
dec
push
rol
mov
mov
jle
or
adc
jo
jg
dec
ljmp
pop
shrb
adc
or
mov
and
mov
lods
fists
xor
fucomp
add
sub
inc
scas
fdivl
addr16
adc
lock
js
rol
mov
push
cmpsb
fnstenv
cs
push
stc
sub
jl
lock
jns
and
loope
aas
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
js
rclb
adc
mov
fbld
xor
mov
dec
xchg
rcll
and
hlt
add
inc
pop
inc
sti
and
frstor
and
mov
lcall
cmpsl
mov
ds
cmp
inc
outsl
xor
dec
mov
sub
loop
pop
add
into
out
push
sub
pop
xor
dec
xor
call
sbb
cmp
sbb
add
push
sahf
out
lds
jo
rcrb
mov
outsl
sbb
inc
call
mov
js
xor
idivb
femms
or
les
ret
rcrb
into
xchg
push
sbb
xchg
adc
mov
sub
inc
gs
sub
lahf
into
sbb
push
pop
mov
addr16
jge
iret
les
lods
xor
out
and
rorb
add
outsb
dec
sbb
add
movsl
sti
and
in
loop
add
or
cmp
mov
and
mov
or
push
iret
fildl
dec
dec
roll
push
pop
lods
divl
lret
pop
mov
add
movsl
adc
or
cmp
ja
push
xchg
loope
dec
mov
mov
lock
jge
fcmovnbe
into
sbb
xchg
jmp
insb
test
fwait
arpl
fs
inc
jmp
fisubrl
adc
xor
aas
sub
dec
xchg
lock
sbb
sub
addb
xchg
xorb
aam
xor
popf
and
jp
aas
sbb
repz
mov
fisubs
push
inc
test
stc
add
cmp
adc
movsb
cli
lahf
inc
daa
inc
xchg
iret
bnd
push
frstor
adc
cmp
sbb
and
scas
out
mov
fisttps
push
jge
and
jge
xor
or
dec
push
push
mov
lods
movsl
adc
popa
pop
dec
dec
and
sub
je
inc
shlb
xor
dec
call
push
mov
push
adc
movsl
loope
lahf
xchg
dec
adc
nop
fwait
cmp
icebp
roll
cmp
das
mov
pop
and
and
adc
and
mov
push
js
mov
outsb
lds
jg
mov
jle
stos
dec
jnp
xchg
jmp
lods
movsb
xchg
test
sub
add
cmp
sub
cmpsl
xchg
mov
imul
gs
push
jae
pop
mov
dec
imul
adc
pop
loop
shl
pop
pop
mov
mov
call
pop
xchg
adc
xor
stos
jecxz
int3
add
mov
cmp
push
pop
mov
not
mov
dec
pop
mov
cwtl
mov
in
and
fs
lret
add
xor
insb
int
and
xor
ds
inc
out
sahf
xchg
arpl
sar
int
popf
scas
cs
pop
jbe
mov
adc
hlt
mov
inc
fnstenv
pop
or
lds
push
cmpsl
jg
and
lock
sbb
lods
push
aam
inc
xor
iret
mov
fdivrl
rorl
addb
and
jnp
dec
outsl
cmp
loop
aaa
or
arpl
lahf
pop
pop
jmp
pop
and
sahf
lcall
mov
push
ds
popa
repz
push
fdiv
push
fdivr
pop
div
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
into
adc
adc
in
fbstp
out
insl
lret
out
pop
ss
pusha
out
loop
aas
cmp
incb
sbb
mov
push
popf
mov
sub
inc
dec
sti
in
and
adc
and
pop
fstpl
in
xchg
in
push
and
bound
ret
xchg
ja
cmpl
add
pop
outsb
cmp
sbb
xchg
movaps
out
inc
xor
out
push
pop
lods
pop
jle
mov
aad
sbb
pop
xor
adc
idivl
mov
inc
cltd
jecxz
jmp
jae
pop
and
mov
xchg
inc
fcomip
adc
mov
mov
or
dec
push
outsb
mov
fimull
fidivrl
pop
insb
inc
inc
sbb
mov
pop
dec
hlt
pushw
adc
outsb
shl
pop
push
adc
cld
pmullw
mov
add
sbb
jne
imul
sbb
aas
xlat
loopne
pop
inc
mov
andb
inc
gs
add
inc
pop
xor
and
int
jmp
es
jno
out
sub
mov
push
cli
ja
sbb
push
and
lods
shl
je
dec
stc
sahf
in
and
xchg
sbb
push
out
pop
fimull
icebp
inc
sbb
or
icebp
gs
imulb
cmpsb
mov
mov
sbbb
jbe
test
test
scas
pop
addr16
repz
movsb
pusha
mov
xor
arpl
out
add
dec
lds
mov
sti
push
xchg
popa
jl
inc
jae
ret
hlt
jae
push
or
sub
cmc
andl
or
sbb
rorl
insl
jnp
jmp
xlat
imul
fidivs
in
mov
int3
aad
imul
lea
xchg
push
mov
inc
mov
cmp
mov
sahf
imul
xor
xor
repz
lret
jg
rclb
aad
or
or
jle
int
cmp
dec
xchg
call
popf
add
jecxz
and
mov
or
lods
inc
sub
int
in
lods
dec
into
enter
int
sbb
fdivs
in
cmp
fimuls
jle
push
ret
pop
push
cmp
xchg
test
std
pop
fldt
cmpsb
and
ret
jne
xchg
mov
mov
sbb
lods
pusha
popa
or
add
pop
push
adc
cltd
push
and
repnz
test
or
sahf
mov
sarl
pusha
mov
aam
cmpsl
push
adc
mov
mov
repz
xor
roll
in
iret
cmp
inc
jecxz
stc
xchg
cltd
inc
xchg
aas
pop
data16
mov
loope
addr16
fcoms
mov
aam
loopne
nop
pushf
insl
cmp
adc
inc
movsb
out
out
fst
dec
push
mov
or
xor
sub
add
ja
cmp
cmp
pusha
lahf
orb
sbb
xchg
sub
neg
inc
mov
dec
mov
pop
inc
xor
dec
scas
dec
popl
adc
push
mov
xchg
cmp
jns
mov
cld
cwtl
jg
loopne
or
mov
or
xor
lcall
mov
idivl
sub
pop
sahf
lcall
xchg
xchg
mov
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
test
add
cltd
push
out
ret
mov
xor
adc
sbb
ret
jne
add
aas
ds
ret
dec
add
xor
or
lods
cmpsb
cs
add
shll
gs
out
mov
aas
ret
ja
clc
mov
pusha
push
loopne
mov
ror
or
shrl
ljmp
mov
pop
lods
test
loopne
adcl
int
sbb
push
mov
and
pop
or
xor
xchg
in
sub
inc
test
std
fstp
aam
orl
lds
aas
sbb
jno
popf
sbb
leave
jns
repz
sub
jecxz
rcrl
cs
sub
inc
adc
cmpsl
jl
sub
pop
jno
shlb
fwait
mov
dec
pushf
xor
push
lcall
imul
das
push
in
mov
fdivl
cmp
or
xor
fwait
lods
jg
add
in
int
mov
pop
push
push
leave
rcrl
outsb
jno
cwtl
xchg
lock
lock
stos
jb
dec
mov
ror
or
faddl
adc
inc
out
cwtl
iret
movsl
into
lret
std
lds
mov
stc
push
out
out
loope
jb
ret
js
or
jnp
sti
sarl
js
sub
insb
loope
ret
loope
cmp
cltd
sbb
mov
fldenv
roll
in
inc
or
icebp
add
sahf
sbb
xor
clc
jl
orl
push
inc
mov
lret
subl
push
enter
mov
fdivrs
inc
push
push
push
leave
or
jo
sub
and
aas
mov
aaa
push
jo
or
fbld
mov
sbb
xor
pusha
cld
inc
jae
or
inc
jb
pop
dec
sub
xchg
pushf
sqrtps
adc
mov
mov
or
inc
xor
inc
inc
rclb
and
add
iret
in
cs
insl
xchg
enter
mov
mov
test
and
push
inc
je
clc
cs
sub
and
push
jno
fsub
mov
push
idivb
test
mov
insl
fmull
popa
fstpl
sbb
lods
push
imul
lcall
data16
sub
pushw
inc
xor
inc
stos
sub
dec
addr16
dec
xchg
clc
dec
sahf
xchg
lock
cs
popa
es
test
ss
xchg
push
or
add
dec
dec
movsl
xchg
inc
pop
sbb
imul
mov
sbb
mov
cmp
into
rolb
lea
loopne
aam
aam
xor
stos
xlat
jp
mov
aas
test
movsl
gs
push
xor
call
decb
jmp
adc
xor
mov
xchg
fucom
mov
ss
aam
push
lcall
cmpsb
scas
sbb
xor
aam
and
pop
pop
push
xchg
pop
jl
movsb
mov
in
mov
mov
push
clc
stos
xor
inc
and
jecxz
pusha
sub
mov
mov
shlb
imul
mov
movsb
rolb
jle
cli
es
pop
mov
sub
roll
popa
push
cli
mov
rorb
add
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
add
pusha
mov
adc
mov
dec
adc
dec
rolb
es
jb
lea
mov
mov
cli
lods
push
and
jns
inc
jp
lret
dec
mov
inc
adc
xchg
lret
push
mov
lods
gs
mov
lods
push
es
enter
sbb
ljmp
xor
movl
std
xchg
sti
adc
xbegin
out
ds
add
xchg
push
or
in
icebp
outsl
xchg
aaa
je
cmpsl
adc
cwtl
xchg
fmul
mov
jmp
push
push
clc
andb
xchg
jbe
outsl
jecxz
add
outsl
les
adcl
and
mov
push
xchg
jns
inc
mov
push
xor
addr16
call
lea
adc
sub
cmp
stc
fldenv
mov
movsb
fwait
xchg
or
xchg
adc
nop
xchg
mov
lea
cltd
cmp
rolb
lock
out
std
mov
pop
pop
mov
xchg
mov
inc
pop
enter
xchg
xor
cmc
daa
pop
mov
mov
cmp
fidivrl
outsb
cld
jg
add
dec
mov
mov
cmp
mov
stos
cmc
inc
pop
sar
or
mov
pusha
lods
cli
setge
xchg
xor
bound
cmp
inc
in
sub
sahf
in
push
std
jp
or
movb
mov
jb
push
push
sbb
rcrl
jbe
cmp
fs
cmp
cmpsb
test
movsl
push
aaa
inc
rclb
mov
add
clc
dec
lcall
fnop
push
fiadds
xchg
gs
mov
push
pusha
mov
push
or
adc
sti
mov
orl
fdivr
jecxz
jo
popf
push
and
lods
sti
sarb
inc
xchg
and
repz
les
mov
sub
mov
adc
ror
aad
out
xchg
shl
adc
fdivr
fidivs
adc
mov
lods
scas
mov
push
inc
jae
mov
imul
cltd
inc
adc
dec
mov
in
and
fwait
mov
jbe
loope
pop
movl
push
out
pop
push
push
mov
push
add
sbb
aas
cmc
lret
ds
out
mov
scas
cli
into
push
inc
cwtl
cmp
xor
ror
mov
adc
fs
in
int3
enter
dec
aam
mov
test
js
stos
nop
mov
push
mov
mov
hlt
shlb
inc
in
outsb
and
sti
sbb
mov
ror
std
inc
add
aaa
mov
test
and
push
dec
and
sub
divl
addr16
iret
dec
and
cltd
jno
xorb
pop
inc
adc
jb
int
jge
xchg
sub
pop
fsubrp
addr16
aas
stc
jo
stos
mov
pop
fsubp
pop
pop
pop
aaa
les
cmp
and
mov
and
push
add
mov
push
xor
sub
mulb
stos
jne
sub
mov
mov
or
fwait
sub
lods
mov
add
sbb
jo
push
call
shr
insl
push
loopne
mov
dec
mov
inc
sub
rolb
pop
add
xchg
dec
add
lods
mov
out
pop
push
std
cmc
das
adc
cmp
jecxz
lahf
sti
leave
scas
mov
shll
jno
jo
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
dec
xchg
stc
mov
popa
mov
adc
sbb
scas
rcll
fmul
test
push
xor
rcr
mov
pop
mov
jo
sub
arpl
add
and
pop
xchg
test
add
xchg
and
lds
fwait
js
push
rep
js
in
dec
daa
imul
lods
outsl
pop
dec
call
push
dec
xchg
inc
add
aad
arpl
sbb
dec
stos
pusha
push
inc
popf
fwait
jmp
cld
popa
mov
xchg
fst
ljmp
inc
xorl
lock
movsb
les
sub
in
int
push
mov
push
push
sbb
jb
cmp
nop
stos
mov
les
cwtl
jmp
jl
inc
mov
test
push
popf
es
int3
cmp
pop
mov
mov
shrl
fistps
xchg
stos
loopne
push
ja
xor
fcmovnu
sub
xor
fstpt
jmp
jbe
aad
es
fdiv
dec
mov
push
popa
std
inc
and
adc
jg
out
fwait
leave
xchg
out
mov
pushf
rol
pop
mov
inc
add
mov
push
repz
xchg
or
imul
out
bound
push
cwtl
in
pop
fcmovu
fs
mov
pop
sbb
adc
inc
lahf
jg
popl
aam
add
mov
dec
mov
lds
jbe
or
cmpsb
stos
mov
ret
je
or
push
or
push
or
mov
jg
sub
stos
mov
cmc
gs
lcall
fwait
add
mov
in
xchg
jns
mov
pop
pushf
or
xor
gs
cwtl
fnstcw
mov
ret
dec
gs
pop
les
ret
fsubrl
mov
movsb
push
jnp
adc
jno
mov
adc
inc
std
pop
mov
push
adc
lret
pop
and
mov
xor
fdiv
or
sbbb
stos
inc
out
inc
enter
ja
faddl
xlat
mov
fwait
inc
cli
xchg
sub
repz
inc
mov
jle
jge
add
lods
mov
dec
mov
ja
jb
cmp
sbb
faddl
xor
cli
ljmp
jle
mov
sarb
xor
sbb
jae
cmp
mov
mov
aad
popf
inc
cwtl
and
jbe
adc
addr16
cmp
jg
sbb
into
push
movsb
sub
aas
les
mov
sbb
pop
mov
loop
clc
scas
adc
or
aaa
mov
fsub
push
add
test
test
sub
jmp
cmp
out
xchg
test
jmp
fistpl
or
mov
push
adc
lcall
in
movsb
outsb
mov
pop
lea
ret
arpl
into
adc
mov
cmpsl
sbb
or
sti
push
add
shr
jecxz
and
in
jp
pop
pop
push
jp
and
adc
popf
les
je
sar
int
or
test
cld
mov
cli
sti
leave
aam
ret
mov
negb
and
xchg
test
jg
push
push
ret
mov
out
iret
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
cli
push
push
lods
adc
adc
in
das
aas
sbb
leave
test
mov
lret
je
outsb
mov
xlat
inc
mov
cmpsl
ret
jmp
nop
ss
push
out
sub
inc
dec
popf
ret
mov
cmc
inc
push
cli
movsl
cmp
xchg
leave
mov
pop
sub
mov
dec
daa
xor
and
xchg
mov
inc
movsl
iret
jecxz
cmp
and
nop
psubsw
outsl
lret
mov
jp
lock
ret
mov
mov
inc
lret
jbe
push
push
push
lock
stos
dec
push
out
out
div
daa
pop
test
push
mov
add
mov
sub
xor
dec
lock
pop
fwait
and
enter
sarb
cmp
es
mov
iret
xor
push
rclb
out
cmp
nop
aaa
hlt
pop
clc
jle
inc
orl
out
dec
pop
mov
lret
lret
je
imul
cld
adc
iret
xchg
in
out
adc
mov
xchg
addb
adc
cmpsb
xchg
pop
sub
inc
outsl
icebp
jbe
xlat
lret
mov
fisttpll
mov
push
dec
pop
pop
mov
insb
mov
ret
cmpl
stos
fisubrs
lods
sub
inc
repnz
lods
mov
std
imul
mov
int3
bound
cmpsl
cld
pop
pop
mov
push
outsb
and
inc
out
mov
pop
xlat
lcall
pushw
xchg
outsl
inc
jo
dec
negl
inc
jne
inc
mov
in
divl
scas
jne
lret
dec
jecxz
cmp
push
popf
shll
push
pop
jmp
jb
std
dec
nop
pushf
adc
pop
dec
pop
adc
mov
out
jecxz
out
sbb
xor
jecxz
push
cltd
xchg
dec
call
loop
dec
lcall
adc
xor
gs
je
fsubs
jns
test
fmuls
push
fcomp
and
shr
sub
push
sbb
and
in
rcrb
adc
mov
mov
jno
sub
cmpsl
xor
push
data16
sbb
outsl
pushf
je
loop
push
dec
xchg
mov
popf
fcomp
jae
les
lds
mov
cmp
ret
xor
imul
or
sub
les
out
mov
scas
dec
and
in
jae
popf
mov
arpl
push
fbstp
int3
ja
fcomp
xlat
inc
lds
js
mov
pcmpeqw
xchg
test
inc
push
in
or
xlat
decb
cmc
dec
data16
xlat
les
test
or
inc
push
mov
and
sub
jl
adc
push
push
push
mov
fcmove
inc
int
add
xchg
fisubrs
add
mov
jmp
xor
sub
xchg
es
mov
jns
ds
xor
cmp
ss
push
xchg
pop
scas
fimull
and
dec
sub
shl
and
ss
cmp
out
aad
pop
xor
inc
jo
adc
xchg
sti
es
hlt
jecxz
ficoml
adc
ljmp
clc
mov
mov
or
adc
mov
leave
mov
jbe
push
jg
cltd
cmp
lods
cmpsl
insb
testb
mov
xor
xor
jmp
or
mov
mov
mov
pop
jmp
adc
adc
xor
lcall
pusha
aas
imul
cmpsl
xor
test
stos
xchg
xchg
arpl
or
ja
lods
cmp
cmp
into
data16
into
lea
xchg
fnstenv
loope
rcrb
lret
aad
or
push
add
inc
into
jo
and
ds
xchg
out
sahf
movsb
mov
add
mov
jle
cltd
push
sub
jo
int
imul
pop
sar
lods
int
jo
mov
adc
ret
fstps
sub
call
cmp
mov
add
or
xchg
inc
xchg
xchg
das
xchg
sahf
fs
add
enter
int
aaa
push
jns
push
mov
mov
xor
bound
adc
xchg
fidivrs
cmp
imull
pop
fisubl
cmp
push
xlat
int
iret
inc
out
or
fwait
or
sub
jp
xlat
push
jle
aas
lock
stc
scas
and
push
lods
cmp
mov
icebp
cmp
mov
jo,pt
int3
gs
cmp
jae
cltd
scas
aas
mov
ret
ljmp
or
inc
push
pop
ljmp
clc
adc
pop
icebp
xor
xor
shll
jg
inc
in
fistps
mov
in
push
dec
leave
pop
movsl
or
xor
ss
pusha
dec
pop
imul
pop
or
sbb
xor
xchg
ja
sarl
pop
mov
sahf
pop
cli
in
or
sbb
pusha
mov
ljmp
sub
sti
jo
mov
adc
jmp
lea
push
add
cltd
inc
inc
nop
lcall
data16
xchg
add
push
push
mov
ret
jns
sub
ret
mov
push
jbe
je
test
xchg
lcall
fptan
adc
inc
cltd
mov
test
cmpsb
popa
shlb
add
xchg
mov
test
xchg
push
ljmp
xor
cmp
pop
xlat
gs
in
push
cmp
loop
shl
xor
cmp
cmp
repnz
popf
std
loope
outsb
bound
cmp
jne
jo
lahf
inc
movsb
lret
in
addr16
dec
lret
mov
xchg
lods
call
mov
sbb
dec
bound
jnp
outsl
sahf
int
pop
adc
pop
adc
test
rcrb
aam
mov
or
in
or
jge
lret
rolb
jl
or
iret
lods
cmp
push
xor
out
xchg
in
out
sub
or
mov
testb
in
push
shl
stos
sbb
daa
scas
ret
movsb
add
dec
or
xchg
push
loopne
loopne
pop
inc
dec
lods
push
aad
xlat
ss
jb
jg
sbbb
lret
fcmovnbe
and
das
stos
mov
std
adc
in
jo
lock
mov
and
mov
sbb
dec
inc
pop
sub
das
sub
mov
ret
shrb
sub
jmp
out
dec
xchg
leave
xlat
mov
loop
pop
mov
in
dec
insb
jne
out
loop
hlt
xor
sbb
adc
inc
and
xchg
cld
sbb
adc
daa
add
and
pop
xchg
sub
les
cmp
jo
cwtl
aam
fstpl
clc
pop
getsec
daa
jmp
xor
and
mov
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
jle
pushf
adc
adc
gs
movsl
aas
idivb
loope
cmc
shll
mov
fisubrs
out
inc
sub
cld
adc
ljmp
cli
push
xchg
inc
mov
fs
xor
sub
inc
and
pop
iret
add
stos
adc
sbb
inc
xchg
jecxz
aaa
cmpsl
pushf
aad
sub
mov
jo
les
push
roll
jbe
sahf
jmp
cltd
loop
sbb
mov
jp
pop
sbb
push
stc
nop
ljmp
sbb
aaa
repz
fstpt
jns
add
dec
jne
cmc
repz
cwtl
out
int3
dec
push
push
popa
pop
repz
mov
dec
lods
addr16
inc
mov
bound
cmp
mov
xor
mov
idivl
ljmp
movl
dec
or
cmpsb
repnz
mov
cmp
cmp
rorl
inc
out
insl
add
xchg
aam
jae
ljmp
hlt
icebp
xor
ds
outsb
fs
inc
push
jecxz
xchg
nop
cli
jno
dec
push
and
ret
rclb
jae
pop
les
in
xor
in
pop
jae
fstps
ror
test
xor
out
jp
fdivrp
sub
pop
pop
in
out
sti
aaa
add
iret
xor
jecxz
mov
push
sub
ret
call
andb
xchg
int3
dec
push
xchg
rep
test
xor
adc
iret
xchg
cmp
int3
push
sub
insb
repz
jmp
mov
cmpsb
loope
xor
fldl
xchg
mov
dec
push
and
jae
hlt
bound
xlat
xor
ret
hlt
push
loop
lea
xchg
cmp
cmp
dec
sbb
xchg
mov
sub
inc
cmp
mov
sti
int3
andl
jb
js
mov
mov
fistl
xor
clc
enter
xchg
pushf
std
sbb
arpl
fwait
pushf
sbb
leave
hlt
data16
ljmp
mov
icebp
inc
sbb
push
sbb
cli
subl
test
stos
enter
mov
xor
and
inc
xchg
cmpsb
xchg
and
aas
test
mov
add
push
into
mov
xlat
mov
sbb
adc
mov
jle
lods
jmp
jg
dec
stc
xchg
je
mov
xor
sub
outsl
pop
lret
test
jno
mov
adc
jle
fs
cmp
stos
setb
sub
inc
cmp
ljmp
es
add
mov
scas
popa
mov
inc
ret
in
loope
loopne
xchg
fmull
shll
add
shrb
out
ret
adc
jl
fsubp
orb
sti
jmp
inc
jmp
js
int
xchg
jp
fidivl
dec
and
movsb
fmuls
mov
fs
mov
pop
call
dec
in
stos
pop
filds
test
scas
dec
loop
push
shlb
idivl
sahf
add
jecxz
enter
inc
aam
push
test
gs
xor
mov
push
push
out
pusha
or
jp
xchg
add
sub
insl
cmpsl
sub
xchg
nop
sub
xor
jmp
jge
jmp
cmp
mov
js
lcall
mov
sub
popa
imul
fiaddl
test
adc
pushl
test
pop
sbb
pop
add
mov
inc
cmc
dec
test
rclb
ss
push
pop
cmpsb
add
cwtl
sbb
inc
xchg
cmpsb
loope
fwait
lret
leave
adc
addr16
adc
add
rcrl
push
xlat
mov
mov
xchg
pop
or
stc
stc
cmp
sub
add
pusha
inc
jmp
cmp
ret
dec
push
es
mov
mov
dec
dec
aas
cmp
sarb
inc
cmp
jl
es
stos
mov
sub
sahf
mov
loopne
movsb
cmpsl
out
add
inc
test
xchg
je
loope
mov
sub
int3
push
mov
mov
sbb
int
adc
inc
in
cmp
xchg
sahf
adc
sbb
sbb
pop
mov
aad
and
pusha
fwait
sub
cld
mov
sbb
mov
sbb
das
xchg
scas
fnstenv
cli
and
pop
adc
rclb
cmp
leave
inc
out
leave
xchg
and
xchg
mov
cmp
push
dec
sar
lret
repz
jns
jns
push
and
into
mov
cmp
mov
push
stos
rep
xchg
gs
out
add
aam
adc
insl
jmp
and
fldenv
dec
cmp
enter
sbb
hlt
dec
rolb
sti
es
scas
jp
inc
xor
push
clc
mov
inc
xchg
mov
fisubrs
mov
add
cwtl
testb
sub
test
jmp
rcrb
mov
and
jle
ret
pop
insl
inc
pop
stc
push
pushf
pop
mov
stc
cmp
pop
pop
and
mov
mov
inc
pop
and
je
in
xchg
xchg
out
xor
sbb
lock
xlat
add
in
jns
sahf
sahf
mov
icebp
mov
jl
mov
cmp
cli
mov
mov
cltd
and
ret
call
push
ret
std
mov
pop
cli
lret
addr16
xchg
fildl
mov
mov
sbb
jns
loop
jle
pop
les
stos
test
push
sub
int3
adc
pop
insl
ret
fmuls
add
fstpt
insl
inc
pop
and
testb
xor
xchg
lcall
adc
cmovp
testl
int3
mull
lret
loop
xchg
xrelease
and
pop
test
xchg
pop
in
xchg
pop
adc
out
adc
imul
fld
cmc
sub
pop
push
dec
xor
xor
xor
inc
pop
inc
pop
js
jo
adc
test
arpl
or
ret
pop
add
in
cmp
in
pop
jae
jmp
jb
ret
add
in
outsl
inc
cwtl
in
sub
stc
fdivrl
xor
dec
test
sti
inc
pop
insb
mov
lret
jne
stos
bound
adc
or
and
inc
outsb
cmp
xorb
inc
push
xor
stos
push
aad
sub
xchg
pop
sub
cmc
add
insb
jbe
push
or
ficompl
cld
dec
push
movsb
nop
ss
notl
fs
mull
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
mov
adc
adc
cltd
jge
stos
mov
cmp
gs
mov
and
insb
das
andb
mov
mov
mov
push
xchg
dec
movsb
mov
scas
test
js
push
and
pop
data16
fildl
xor
xchg
std
jg
xchg
xchg
push
dec
lods
jae
mov
xchg
leave
sahf
cmp
aad
cmp
push
push
push
dec
xchg
xor
jno
div
jle
and
mov
loop
aas
jnp
sbb
int3
loop
nop
mov
mov
imul
fbld
mov
xchg
jle
adc
iret
sub
test
or
and
ret
pop
addl
repz
jp
push
mov
data16
je
jmp
insl
push
jae
ja
pusha
jmp
fwait
ja
inc
popf
lahf
dec
subb
and
add
shll
dec
push
dec
arpl
test
mov
nop
xchg
into
jno
test
pop
xlat
out
add
daa
mov
out
push
fsubs
sbb
lds
outsb
jno
add
sub
pop
inc
pop
outsl
push
sbb
mov
jg
mov
cmp
xor
mov
jle
mov
loop
cmp
jbe
sub
loop
pop
adc
ljmp
add
out
cmp
adc
cmpl
jmp
jno
jmp
pop
pop
mov
jmp
add
mov
int
std
scas
mov
pop
aas
and
js
add
rcrb
scas
and
jno
inc
xor
decb
jno
fidivs
jg
inc
pop
dec
bound
movsl
dec
push
lcall
fidivrs
pop
xor
or
sub
pop
popa
pop
mov
int
lods
jge
mov
stos
fidivl
sbbb
int3
xchg
sahf
dec
leave
or
fmull
daa
aaa
adc
shr
shlb
test
int
sbb
imul
inc
sbb
aas
test
cmc
loopne
jo
pop
in
jo
pop
jmp
pop
test
sbb
pop
bound
lret
pop
and
dec
decl
mov
pop
negl
add
in
hlt
dec
int3
jo
push
test
jb
xchg
aas
and
and
jl
fdivs
mov
sbb
mov
iret
or
and
jae
jne
xchg
pop
test
stos
pop
mov
sarl
push
ds
mov
adc
outsl
sbb
fildl
sub
inc
xchg
in
test
gs
out
dec
adc
and
cmp
push
scas
sbb
lret
fs
mov
stos
cwtl
div
xor
pop
sbb
sbb
lock
sub
adc
stc
adc
inc
mov
mov
out
pop
jno
dec
lods
xor
std
inc
out
shlb
jno
shrl
sbb
cmp
subl
inc
dec
movsl
mov
leave
cmpsl
sub
mov
xchg
sahf
les
sub
and
pop
push
xchg
shl
jb
dec
cmp
fucom
or
xor
jecxz
mov
cmpsl
sahf
es
jne
mov
mov
mov
xchg
sub
fldt
fildll
mov
mov
scas
outsl
mov
lahf
lret
jle
push
jp
pop
lcall
sbb
xchg
pop
cwtl
mov
sbb
mov
pushf
mov
jmp
sahf
pop
pop
adc
lahf
sbb
jle
mov
adc
mov
icebp
stos
popa
addr16
push
pop
mov
into
cmp
mov
nop
cltd
adc
lret
stos
test
cld
test
enter
inc
adc
jl
pop
loop
lret
jns
xchg
sarb
loopne
xchg
or
pop
mov
int
adc
jp
push
lcall
rcll
adc
mov
or
jne
shll
hlt
inc
lcall
cwtl
sti
scas
mov
mov
inc
lea
jmp
dec
xor
mov
mov
int
jne
pop
mov
in
inc
rcll
cmc
and
in
sub
mov
cmp
mov
cmp
push
cmp
inc
push
sbb
cld
jmp
add
in
bound
cmp
out
pop
int
mov
pop
pop
imul
cmpsl
lock
data16
repnz
push
jnp
test
fs
cltd
bound
test
call
fisttpll
pushf
and
sub
sbb
iret
out
pop
repz
lods
xchg
lods
popa
inc
ljmp
sbb
mov
xchg
cltd
and
and
and
sahf
cmp
mov
dec
daa
mov
add
imul
cmp
aas
mov
lret
loopne
mov
xchg
ljmp
dec
push
push
pop
jmp
into
gs
add
xor
dec
adc
mov
mov
mov
and
mov
xlat
dec
cmpsl
fdivrl
imul
pop
jmp
add
insl
mov
pop
clc
inc
jmp
mov
xchg
jnp
das
pop
dec
jg
fdivs
dec
xor
dec
mov
push
push
fnsave
xchg
lods
adc
inc
hlt
ds
sub
jno
and
dec
sbb
scas
scas
repz
lock
imul
fidivl
lahf
sahf
sbb
xchg
inc
int3
inc
xlat
add
insl
lods
push
lock
dec
xor
leave
jne
push
jae
mov
jmp
add
int3
pop
xchg
mov
sbb
push
enter
hlt
jne
roll
or
into
push
test
jp
fiadds
shll
sbb
adc
out
jecxz
mov
ja
fstps
jge
js
and
xor
aad
or
xor
jne
mov
xchg
aaa
xchg
insb
sub
inc
hlt
data16
mov
add
and
out
lods
mov
jne
push
push
cli
xor
mov
lods
dec
push
xchg
mov
movsb
adc
jns
jg
pop
movsb
pop
mov
hlt
outsb
ret
sub
and
mov
mov
or
jge
aad
ss
push
and
int3
mov
and
adc
vsqrtsd
mov
rcrl
in
jmp
test
lcall
dec
rol
pop
fnstcw
or
inc
ds
inc
push
add
fildl
js
and
dec
pop
inc
push
js
cmp
push
cmp
in
mov
addr16
shll
iret
jecxz
jb
sbb
or
xchg
sti
xchg
insl
lret
pop
cmp
int
jmp
dec
pop
cmp
push
mov
loop
dec
stos
fstl
in
gs
mov
pop
inc
mov
jg
hlt
test
leave
cmp
add
stos
decl
lea
test
incl
lret
fmuls
fdivr
decl
pop
dec
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
pop
lods
pop
adcb
scas
ljmp
pushf
icebp
sbbb
xor
cmp
pop
push
push
sub
or
sbb
out
sbb
fiaddl
cs
mov
ret
popa
mov
add
inc
add
mov
cmp
scas
mov
pop
inc
pop
incl
xor
pop
outsl
cs
or
sub
popa
fmuls
push
xor
push
sub
leave
cmp
pop
into
mov
fisubrs
stos
jp
loope
and
ljmp
shll
and
and
lcall
mov
dec
pop
cmpsl
jp
shll
cmpb
mov
cmp
insb
lock
mov
rcrb
dec
popf
inc
aas
adc
rorb
repnz
jle
xchg
mov
aam
movb
imul
movsl
jb
sbbl
js
push
mov
mov
dec
jns
add
pop
or
mov
xor
pop
sbb
sbb
mov
push
or
sub
cmp
loop
and
in
sarl
pop
dec
dec
jb
or
lcall
push
inc
movsl
push
mov
add
icebp
mov
in
xbegin
cmpsl
dec
xchg
ljmp
mov
adc
aas
adc
movsl
and
popa
jge
inc
mov
pop
xor
mov
mov
xchg
mov
push
fistpll
sub
mov
cmpsl
int3
std
push
aam
dec
and
mov
arpl
add
fstps
jo
mov
adc
mov
mov
addr16
adc
sti
xchg
sub
or
inc
hlt
cli
add
inc
sub
das
adc
fistl
pop
sub
clc
mov
or
mov
inc
jl
pop
lods
pop
add
sarb
stos
xor
pop
aam
in
in
aaa
lret
xchg
mov
xor
jno
ret
int
pop
cld
sbb
push
or
mov
pop
cmp
out
mov
xchg
mov
ret
adc
ror
mov
jne
shll
mov
push
xor
add
and
das
in
lods
mov
jg
mov
add
mov
push
mov
mov
pop
ds
ret
inc
mov
sub
or
clc
jb
push
cmpsb
imul
mov
push
sbbl
sbb
shlb
loopne
fidivs
push
cmp
jp
sub
adcb
jle
jp
pop
mov
pop
xchg
movsl
mov
mov
push
jmp
aam
jae
push
adc
mov
or
iret
fwait
xchg
enter
or
xor
jbe
sub
adc
daa
outsb
xchg
cmpsb
fwait
sub
cmpl
test
pop
ret
jmp
xchg
mov
mov
push
ror
insb
jp
hlt
imul
add
xchg
mov
movl
sbb
out
les
mov
adc
lods
push
repz
or
cmp
sbb
cmp
js
idivb
and
cmp
pop
in
orl
mov
jo
mov
cmpsl
outsb
lret
mov
push
stos
xchg
add
push
in
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
push
stos
insb
mov
adc
adc
ret
pushf
bound
xchg
stc
setg
in
jno
add
leave
mov
divb
push
int3
pop
jg
popf
or
inc
test
pop
cmp
repz
xor
into
shll
mov
mov
call
in
sbb
mov
or
cltd
cmp
nop
add
mov
inc
inc
pause
pop
jo
push
arpl
mov
shll
iret
push
hlt
mov
negb
mov
mov
iret
int3
add
xchg
push
sti
mov
aas
scas
cmpsl
shl
scas
mov
int3
push
jno
ret
dec
lock
lret
or
cmpl
mov
jmp
ds
add
cmc
lock
imul
mov
mov
ret
rcl
push
frstor
pusha
pop
je
clc
ss
movl
mov
adc
mov
std
arpl
dec
imul
adc
push
loope
kortestb
mov
or
and
aam
mov
cmpsb
push
sbb
cld
stc
in
inc
dec
and
and
xchg
lea
nop
je
inc
ja
jmp
adc
ds
push
mov
icebp
js
push
aas
in
pushf
js
push
sbb
add
aad
dec
pop
push
dec
jnp
int
jnp
sub
jg
mov
cmp
cmp
mov
xor
hlt
inc
test
cmp
add
filds
fsts
mov
pushf
push
int
shrl
rcrl
rclb
xchg
lret
sahf
jo
sbb
xlat
jne
jmp
mov
push
inc
orb
inc
stos
adc
and
sub
imul
insl
xchg
adc
nop
mov
dec
ljmp
aad
jnp
ja
andb
mov
or
popa
jne
push
test
adc
aam
ja
aad
add
or
aad
lret
jae
sub
cmp
shll
dec
pop
mov
pop
aaa
sbb
jae
lcall
into
das
popf
cld
data16
popf
icebp
shl
push
into
out
push
and
jle
les
in
sub
lcall
pusha
push
mov
mov
lahf
lock
and
sub
out
sbb
sbb
mov
jne
cmpb
sbb
or
negb
inc
cld
shll
les
lret
lds
movsb
push
jmp
adc
mov
addr16
jne
mov
xor
cli
push
jns
adc
nop
stc
fiaddl
jb
loope
scas
pop
gs
pop
inc
into
add
or
movsb
movsb
rorl
and
dec
lahf
cwtl
jne
inc
mov
lds
movsb
scas
or
stos
xchg
xor
dec
scas
scas
jp
xchg
test
jmp
test
lock
push
js
or
pop
lahf
xchg
and
mov
xor
jo
insl
frstor
sub
stos
int
pusha
xchg
dec
push
loope
pusha
pushf
into
out
dec
push
sub
nop
jo
adc
icebp
or
test
aam
xor
addr16
add
lds
or
mov
xchg
sbb
lods
std
stc
stc
leave
add
fisttpll
ret
scas
test
je
addb
dec
inc
sub
sbb
lret
mov
jbe
jbe
pop
dec
faddl
and
cmc
sub
shr
push
cmp
or
fisttps
decl
jmp
mov
clc
mov
sub
jle
inc
adc
adc
pushf
xor
mov
push
outsl
je
sbb
test
mov
dec
out
incl
sbb
arpl
mov
pop
inc
test
fisttps
jge
cltd
lods
and
push
push
xlat
mov
loop
push
mov
outsl
and
mov
bnd
mov
cld
jp
xchg
fld
jge
mov
sahf
xchg
or
pop
movsl
popa
mov
add
movsl
xor
bound
pop
movsl
pop
and
inc
decb
lret
arpl
fs
ret
sbb
ffree
imul
and
add
inc
mov
pusha
sub
fnstsw
mov
jl
sub
xchg
inc
inc
push
lcall
jno
xchg
mov
icebp
push
inc
and
pop
aas
inc
mov
ss
mov
mov
out
out
into
les
jl
lcall
mov
loope
aaa
push
iret
cmp
js
loopne
in
int
cmp
int
pop
mov
imul
dec
cld
xchg
pop
adc
xlat
ret
mov
in
push
cmp
daa
adc
mov
addr16
testb
jp
xchg
xor
jno
xchg
movb
cmp
movsl
movsl
xor
mov
call
out
or
in
repz
fisubl
test
lcall
jns
scas
test
std
dec
rclb
je
sub
mov
mov
aad
addl
mov
push
mov
enter
nop
add
cmpsl
inc
stos
dec
vmovapd
inc
push
jge
fwait
mov
je
fadds
add
lcall
int3
out
bound
bound
aam
or
jmp
and
and
jbe
test
add
inc
nop
xchg
and
push
xlat
sbb
jnp
bound
inc
and
dec
std
jmp
bound
adc
inc
lea
addr16
xchg
and
dec
repnz
or
and
call
jbe
sbb
pop
cmp
mov
xchg
stc
sarl
mov
push
loope
cli
js
rol
outsb
push
dec
mov
adc
xchg
inc
or
leave
push
lock
sarb
push
into
lcall
shl
jg
repnz
mov
mov
lret
cvtdq2ps
pop
pushf
xchg
push
scas
addr16
adc
fnstcw
mov
sarb
hlt
jae
and
mov
mov
pop
lods
pop
jg
push
mov
out
pop
adc
scas
sbb
push
jnp
pop
pop
pop
mov
subl
out
leave
lahf
push
dec
pop
int3
sub
roll
cwtl
daa
xor
inc
mov
mov
loop
xchg
adc
iret
pop
movsl
add
inc
xchg
mov
add
xor
push
xchg
leave
mov
test
sbbl
jge
fidivl
insl
ss
rorl
insb
outsb
push
inc
andb
add
mov
dec
mov
mov
es
inc
push
daa
xabort
jp
sbb
sbb
test
sbb
leave
lret
aad
cmp
in
pop
inc
lock
jg
lcall
adc
wbinvd
or
sbb
lods
xchg
dec
cs
popa
inc
imul
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
in
pusha
pop
lods
call
adc
adc
or
jbe
jge
xor
jge
adc
pop
jmp
push
cmpsb
sahf
out
push
add
add
lods
pop
test
shrb
cmc
jo
add
popf
push
addr16
pushf
sti
in
push
adc
ljmp
test
add
mov
stos
or
cs
pop
pop
dec
pop
in
cmp
mov
or
push
inc
pop
lods
pop
movsl
push
inc
mov
xchg
mov
dec
push
insb
lcall
in
sub
xchg
daa
outsb
add
push
int
outsb
xor
or
or
outsl
jo
movsl
imul
addr16
das
and
int
push
jb
mov
mov
sub
adc
into
xor
je
sub
inc
or
cmpsb
das
js
je
imulb
addr16
ret
andl
cld
push
inc
jne
sbb
js
dec
cli
dec
sub
adc
push
idiv
dec
icebp
nop
js
call
pop
lahf
sbb
xor
cltd
test
or
dec
and
mov
dec
fdivrs
pop
pop
xor
inc
jp
mov
fs
shl
insb
shlb
cmp
loope
lret
jecxz
popl
mov
aam
pop
and
std
adc
push
shll
out
leave
arpl
das
xlat
in
out
push
shl
push
inc
adc
push
and
insb
das
sub
and
jo
cmp
mov
pop
or
mov
ret
int3
sub
es
cmpsl
cmc
cmc
repnz
lret
adc
shr
insl
lods
popa
fldz
or
cs
cmp
pop
pop
ja
mov
cli
testl
ljmp
lods
pop
bnd
test
jnp
mov
outsb
mov
push
insb
repz
mov
mov
mov
mov
lds
push
scas
pop
mov
jmp
notl
add
push
and
in
sbb
push
loope
add
jmp
or
loope
pop
sbb
push
test
pusha
pop
sbb
scas
cmp
jmp
fwait
push
jle
push
dec
fistl
xor
and
adc
jecxz
in
pop
xchg
arpl
scas
cmc
dec
and
jge
mov
imul
es
dec
mov
fst
or
mov
add
lret
cmp
jns
push
jne
pusha
in
stc
inc
push
xor
iret
bound
sbb
repnz
sub
jo
inc
sbb
pop
daa
dec
cmpsl
lods
shlb
add
push
stos
cmc
in
jnp
dec
imul
adc
lahf
mov
pop
lds
adc
pop
fsts
mov
cld
or
shr
scas
add
lahf
and
xor
scas
mov
mov
lret
sbb
rol
test
jo
jg
popf
popf
in
cmp
pop
fldt
mov
cmpsb
das
dec
pop
bnd
add
aam
push
sub
out
ja
rclb
pop
xor
mov
inc
mov
jp
xor
xchg
mov
lock
push
loop
mul
push
cmp
or
pop
xor
mov
cmp
dec
lcall
dec
push
test
cltd
clc
xor
cmp
adc
mov
in
clc
mov
inc
add
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
mov
mov
cmp
jo
fnstenv
pop
adc
and
or
fisubrs
jmp
mov
cld
xchg
mov
pop
daa
mov
mov
mov
cmp
mov
addb
imul
sti
cwtl
dec
rorb
out
div
mov
ja
lea
mov
push
mov
imul
mov
mov
test
popf
mov
lea
lret
pop
sbb
popf
push
xchg
nop
sarb
fcomps
dec
xchg
fidivrs
mov
icebp
xchg
sub
imul
lea
push
push
cmp
in
leave
repnz
mov
jno
xchg
push
into
add
dec
cmp
icebp
dec
push
cmc
xor
push
adc
js
jae
push
xchg
push
or
cmp
into
outsl
inc
shl
xor
jle
fs
lea
lcall
and
cmp
mov
out
call
mov
ja
fcomi
push
ja
dec
mov
addr16
sub
rcrl
mov
mov
adc
dec
mov
lock
dec
arpl
and
in
sbb
inc
test
dec
fldt
cli
aas
fucomip
sub
adc
ror
es
lret
jp
xor
movsl
jbe
cli
dec
loope
pop
nop
mov
xchg
sbb
out
cli
ljmp
loop
movsl
mov
xchg
ss
rolb
sub
ds
jge
sbb
xor
enter
fsubl
fwait
movsb
cld
test
pushl
jecxz
js
notb
pushf
mov
out
cmp
rcll
xor
shlb
jb
stos
mov
mov
push
inc
icebp
mov
xchg
inc
lret
push
adc
pop
push
xor
aas
insl
mov
dec
jg
sbb
cld
mov
and
rol
mov
xor
mov
pop
in
ljmp
sbb
add
dec
popa
push
loopne
add
push
iret
cli
dec
aam
scas
push
aaa
mov
faddl
stc
sbb
aam
stc
pop
nop
mov
jnp
hlt
sbb
pop
push
enter
inc
and
mov
adc
adc
test
xor
cld
adc
in
pushf
out
add
push
pop
mov
shrl
mov
dec
pop
jmp
xlat
movsb
xor
sbb
ss
pop
mov
mov
cld
sbb
out
outsl
xchg
dec
stos
fwait
xchg
cltd
pusha
pop
mov
xchg
enter
test
test
fstpl
orb
aam
data16
fsubrl
or
movsb
add
mov
pop
sarl
faddl
xor
mov
cmp
repz
testb
cmovg
cs
cltd
outsl
jbe
mov
and
push
pop
or
mov
enter
test
dec
lods
or
xchg
enter
sub
iret
test
sti
aad
aam
jbe
enter
cmp
repz
push
cmpsl
inc
testb
xchg
push
xor
shrl
mov
inc
sbb
aaa
sahf
cmpsl
xor
sahf
out
pop
cmc
dec
call
cld
dec
loope
sti
cmp
shr
sbb
decb
and
lahf
sbb
cs
pop
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
jp
idivl
pop
adc
adc
push
jns
in
rorl
shlb
cmp
mov
sub
pop
inc
add
int3
pop
push
insb
push
and
test
and
push
adc
adc
bound
cmp
xor
into
movsb
fstps
dec
mov
insb
ror
movsl
add
mov
xchg
lcall
adc
xchg
jne
add
stos
js
or
ffree
mov
insb
aam
mov
mov
sbb
sahf
adc
cmc
pop
out
mov
les
jb
inc
ljmp
dec
xor
inc
sarb
adc
cmp
dec
filds
mov
sub
data16
pusha
mov
and
inc
mov
pop
outsl
add
inc
pop
fdivrs
pop
fistl
mov
or
scas
mov
fsubrl
ret
cmp
pop
and
jnp
inc
adc
repnz
mov
adc
out
fidivrl
clc
pusha
inc
or
push
cmp
xchg
shl
jo
cli
pop
lods
pusha
add
add
lcall
pop
adc
xor
add
dec
test
sub
clc
cwtl
mov
ret
mov
arpl
test
movsb
cmp
pop
shrl
rcrb
cwtl
pop
incb
xchg
mov
hlt
add
lds
xor
fnstcw
push
sub
inc
mov
test
and
push
ss
ss
ja
push
mov
pop
js
mov
scas
pop
pop
lcall
sbb
nop
aas
push
orb
or
mov
stc
mov
xor
add
leave
and
cli
scas
ds
aas
das
push
out
lds
test
cltd
push
lret
cli
pusha
add
imul
jae
repnz
sub
xor
gs
xchg
ljmp
dec
lock
lea
ljmp
jecxz
inc
xchg
idiv
out
xchg
sub
xor
fs
pop
jp
orl
cmp
jecxz
fcmovu
or
inc
pop
xor
mov
pop
jb
sub
or
lods
scas
testl
shrb
dec
mov
int3
call
pop
bound
xor
xchg
ret
jno
data16
mov
xor
popf
sbb
sbb
mov
jae
rcrb
dec
faddl
sub
pushf
jp
xor
push
inc
push
int
inc
inc
jne
data16
cmp
movsb
std
iret
dec
insb
xor
cmp
push
aaa
xor
adc
add
and
mov
into
cltd
push
mov
mov
sbb
cmp
lahf
or
loopne
bound
and
and
dec
sub
mov
jne
mov
mov
pop
mov
out
mov
fistpll
mov
pop
js
int3
ss
jl
mov
scas
sbb
mov
jmp
jge
xor
mov
loope
cmp
movsb
pop
xchg
xchg
xchg
dec
inc
mov
out
cmpsb
stc
dec
insl
mov
je
and
into
mov
or
movsl
mov
mov
and
and
mov
pop
inc
push
in
inc
sub
nop
adc
push
xchg
lods
inc
fstpl
add
mov
lret
pop
cmp
adc
add
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
mov
es
stos
roll
mov
inc
call
or
mov
push
ficompl
mov
loope
stos
sbb
int3
xchg
aas
mov
dec
xchg
sub
xchg
mov
push
nop
sub
sbb
fistpll
test
jp
aaa
pop
mov
and
sub
lret
adc
mov
xor
cs
fiaddl
fdivl
add
or
push
int
dec
pusha
pop
jge
gs
enter
or
add
and
mov
std
sbb
outsl
pop
jae
xor
jns
adc
subl
sahf
mov
clc
enter
jno
aam
dec
insb
out
cli
jl
add
pop
lds
inc
pop
fmulp
adc
pusha
cmp
fwait
aad
or
fbstp
push
push
inc
mov
mov
repnz
mov
inc
mov
das
adc
jge
push
jge
sub
lock
rorl
enter
idivb
push
pop
jnp
or
xchg
gs
inc
add
pop
xchg
or
mov
jge
scas
mov
and
and
enter
cmpsl
push
iret
sub
pop
outsb
xchg
icebp
pop
jo
hlt
dec
aam
push
lcall
xchg
andb
lret
add
xor
fbld
mov
mov
xor
jns
imul
dec
xor
fucom
add
aam
xor
testl
sub
jno
dec
div
arpl
mov
out
pop
inc
in
sti
rorl
ss
pop
test
push
adc
cmp
mov
dec
dec
push
sbb
and
test
push
pop
lds
pop
imulb
test
dec
sbb
and
push
sbb
ds
pop
ja
cmpsb
mov
nop
insl
mov
ja
mov
ds
mov
mov
xchg
out
pop
mov
imul
or
aas
inc
lret
testb
in
add
outsl
mov
dec
pop
pop
rol
stos
out
cld
lods
stos
mov
inc
sahf
cmp
ja
pop
mov
scas
xor
std
push
loop
clc
cmp
test
pop
addb
mov
negl
call
cld
scas
popa
iret
push
mov
outsl
fucomp
imul
insl
jnp
loop
add
inc
xchg
lahf
je
sub
ss
outsb
adc
pusha
int
xor
pusha
aas
mov
dec
push
xor
dec
nop
aad
sub
mov
mov
mov
pop
xor
and
jb
add
aas
sub
mov
push
out
imul
sub
adc
dec
repnz
adc
addr16
fstl
out
and
fisttps
mov
aas
push
inc
push
loope
pop
outsb
push
scas
insb
xor
xchg
inc
cmp
enter
mov
jnp
cwtl
cmc
movsb
sub
hlt
fisubs
les
xchg
loope
stc
imul
enter
fsubr
bound
jo
jae
push
push
lock
pop
shll
xor
adc
stc
xor
loop
adc
sub
fucomi
icebp
sbb
and
fsubrl
les
lcall
push
stos
lods
lea
mov
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
fisubrl
stos
adc
adc
enter
and
and
movsb
push
dec
push
xchg
nop
ss
lret
test
sahf
dec
stc
imul
out
pop
in
mov
test
jmp
subb
push
push
xchg
rcll
jno
mov
cs
push
data16
dec
dec
cmp
ret
arpl
sub
in
loopne
pop
adc
aas
xchg
test
mov
xor
andl
jno
dec
jl
test
and
sbb
xor
lea
hlt
test
loopne
repz
xor
cltd
jb
push
mov
dec
push
xor
iret
mov
fistps
out
popa
dec
sub
fs
mov
lcall
push
push
incl
mov
mov
add
int3
jb
adc
call
mov
sbb
imul
loopne
jo
in
mov
push
iret
inc
xchg
fists
ss
cld
pop
dec
push
and
lret
cmpsb
ja
ret
mov
mov
add
ljmp
sbb
stos
add
rcrb
adc
imulb
pop
and
minps
or
stos
mov
add
pop
jae
sar
lret
es
pop
cmp
and
cwtl
pop
loopne
aaa
loope
jp
rorb
loop
cmpsl
jmp
pop
inc
mov
push
bound
sbb
shrl
inc
pop
xor
arpl
or
and
xor
popa
push
jo
rcrb
in
cmp
aas
sbb
adcl
and
jmp
mov
cltd
push
sbb
xor
popf
jbe
in
scas
jns
inc
fdivr
xor
mov
and
rol
and
lcall
sahf
loopne
fwait
xchg
pop
fmull
sbb
cmp
les
insl
sub
data16
dec
lea
pusha
jg
lods
xchg
sbb
push
insl
sub
cli
adc
sbb
rclb
outsb
aas
dec
cmc
adc
ja
repnz
out
push
scas
pop
and
jo
mov
add
adc
shlb
ja
lods
dec
xlat
out
andb
das
fcmove
ret
loopne
mov
push
adc
xchg
jmp
aam
or
imul
pop
fidivl
mov
and
lock
out
cmp
rolb
cmp
lock
jmp
in
addr16
inc
or
rcr
jg
in
adc
ret
cld
lahf
aad
inc
dec
pop
out
jg
out
outsb
push
jge
jb
adc
sbb
fxam
incb
loopne
mov
or
ss
loop
fisubrs
jae
cwtl
aas
mov
jae
sbb
add
repz
bnd
jae
scas
add
mov
xor
mov
xor
test
cmpsb
pop
adc
mov
push
sti
pop
cld
sbb
xor
or
cli
insl
xchg
dec
pop
sbb
aaa
or
leave
add
dec
mov
aaa
cmpsb
mov
jle
mov
mov
iret
lods
ja
scas
pop
mov
addr16
add
andl
ljmp
negl
sahf
sub
rcr
cmp
jb
push
int3
or
shll
ljmp
fcompl
mov
cs
push
outsb
push
je
cmp
sbb
lods
inc
lock
dec
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
nop
fsub
mov
push
pushf
adc
lea
nop
mov
cmc
addr16
sbb
and
mov
ja
cmp
out
sti
xorl
xchg
lahf
inc
shlb
cmp
popa
cmc
lcall
sub
sbb
sbb
adc
stos
scas
lods
mov
stos
insb
and
sti
enter
mov
mov
mov
mov
test
aam
and
mov
mov
mov
or
out
scas
inc
popf
dec
stos
push
dec
xchg
rcrb
rcrl
mov
test
mov
pusha
lret
stc
daa
out
pop
mov
push
fwait
lea
ja
rcl
sub
mov
mov
outsl
or
pop
cmp
add
orl
pop
adc
xor
dec
adc
inc
mov
outsl
jae
dec
cmp
popf
lret
mov
sub
repz
cmc
outsl
out
daa
and
icebp
pop
ret
aam
fidivrl
shll
bound
enter
xor
xchg
push
add
pop
push
arpl
aad
jnp
lret
test
or
add
xchg
sub
push
mov
cmp
adc
data16
lods
mov
inc
popf
push
jns
add
pop
mov
lret
fwait
sbb
dec
test
inc
imul
ss
dec
add
mov
dec
popa
dec
mull
ret
mov
xor
jge
mov
adc
jae
mov
jno
adc
pop
mov
js
out
idivl
shlb
loop
jmp
sub
fbstp
sbb
ret
pop
push
jo
and
inc
loopne
out
int3
mov
sub
in
mov
xor
rcrb
in
ja
int3
jl
and
sarl
es
cmpsl
push
int
sub
mov
fists
inc
popa
jae
decb
cmp
out
pop
or
out
xlat
sub
push
or
dec
jbe
dec
hlt
jmp
arpl
enter
pusha
jmp
sbb
push
jno
dec
movsb
dec
stc
xorb
or
and
fdivrl
les
push
pop
inc
shl
sti
clc
dec
or
sub
out
or
add
xor
mov
cmp
adc
sub
pop
xchg
fisttpll
inc
cmp
push
data16
or
bound
sub
sub
and
xchg
je
test
mov
and
stos
test
mov
enter
cld
gs
lret
fidivrl
adc
jp
loop
popf
sub
and
sahf
jns
mov
cmpsb
mov
cmp
mov
fsubrp
out
xchg
xor
sub
xchg
ljmp
push
sub
loope
inc
xchg
ljmp
inc
jmp
aaa
mov
mov
out
ret
int3
xor
js
sub
push
xchg
mov
dec
dec
insl
push
xor
int3
mov
inc
aas
xor
mov
mov
pop
lods
dec
ljmp
dec
call
pop
dec
cltd
dec
inc
jg
roll
sarb
pop
or
js
ja
push
nop
mov
pop
iret
mov
lahf
cs
cmp
rcrb
es
inc
xchg
inc
push
insl
rcrl
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
cmp
cmp
adc
jmp
sahf
add
push
dec
insl
lcall
mov
cmp
cmpsl
sub
les
sub
add
and
adc
xchg
inc
and
lret
mov
dec
xchg
loopne
stos
pop
test
bound
or
mov
rorb
sbb
push
pop
leave
andb
cmp
js
push
and
pop
xchg
repz
mov
popa
push
sbb
dec
push
movsl
pop
rorl
push
pop
roll
gs
jmp
push
test
imul
jbe
mov
test
push
out
ret
pop
popf
push
inc
mov
push
fiadds
sbb
add
mov
test
stos
rcll
inc
push
xchg
and
fdivrl
pusha
pop
hlt
sbb
mov
out
push
adc
mov
fmull
cld
xor
imul
in
push
mov
jg
or
das
and
into
cs
push
push
jg
cmp
xlat
subb
xchg
fdivp
mov
mov
aaa
movsb
xor
js
push
std
xchg
adc
inc
cmpsl
jne
fidivs
test
stos
and
mov
xlat
loop
push
cmpsl
push
imul
xor
mov
xchg
ror
bound
icebp
pop
inc
sbb
push
leave
stos
pop
idiv
loop
push
rcrl
mov
pop
je
testl
jbe
push
xchg
pushf
icebp
data16
cmpsl
push
fadd
stos
xor
mov
mov
lret
and
mov
in
ljmp
mov
stc
adc
adc
int
mov
dec
cmp
mov
popf
shlb
out
lods
cld
int
cltd
scas
into
mov
mov
adcl
loopne
out
fistps
sahf
clc
popa
repnz
dec
pavgb
or
mov
test
pop
cli
push
mov
imul
mov
jmp
and
xor
lcall
shl
rclb
or
stos
mov
js
leave
xchg
pop
cmp
es
sbb
mov
push
jle
pop
add
enter
pop
add
rorb
shlb
push
movsb
js
dec
or
loope
scas
das
sbbl
push
cltd
cwtl
xor
int3
movlps
mov
and
sbb
sbb
fisubrl
jp
pop
xchg
das
fistps
aam
push
push
cmp
xchg
loopne
mov
xchg
fisttps
or
ljmp
mov
sbb
mov
out
outsl
mov
sbb
inc
xchg
or
rorl
out
add
out
scas
bndstx
xchg
sbb
cltd
sub
repz
roll
outsl
lock
ds
das
jge
adcb
push
fistps
fs
adc
mov
fstp
add
sub
fadds
mov
cwtl
ficoms
jle
test
push
shlb
cmp
fiaddl
dec
or
imul
cwtl
xor
or
mov
xchg
add
mov
fiadds
lret
pop
sarb
xor
push
in
push
stos
xchg
jmp
add
fmuls
mov
fnsave
incb
repnz
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
push
andb
xor
adc
mov
pusha
daa
sub
add
fdivr
inc
push
fsubrs
outsl
dec
sub
div
aad
psubd
in
add
dec
add
mov
orb
scas
xchg
insl
fwait
cmp
es
inc
test
add
mov
aam
sub
cs
add
pop
movsb
push
js
dec
jno
adc
dec
mov
xlat
das
mov
bound
mov
jns
pop
pop
fisubl
fisubrl
aas
mov
mov
xor
stos
enter
hlt
cmp
pop
ja
outsl
xchg
inc
movsb
leave
lcall
pushf
lret
notb
leave
fucomp
call
adc
fnstenv
mov
fisubs
sbb
adc
pop
xor
mov
sub
icebp
out
nop
mov
into
add
fadds
xor
out
pop
sbb
sub
xor
push
adc
inc
xor
adc
outsb
pusha
fwait
xchg
xchg
sub
mov
mov
mov
mov
iret
mov
push
or
fadds
shlb
sbb
cmp
and
in
bnd
repz
adc
mov
sbb
ljmp
pop
mov
inc
and
mov
sarb
mov
mov
jb
add
xor
ficoml
xchg
mov
mov
stc
mov
mov
divl
xlat
and
cmp
sbb
dec
mov
ljmpw
and
pop
dec
dec
adc
fwait
stos
mov
inc
pop
jmp
or
leave
test
fnstcw
je
out
hlt
mov
mov
pop
fsubrl
rcll
std
add
movsb
xlat
cltd
jne
leave
outsl
jg
jmp
adc
pop
cs
test
xor
push
data16
push
push
lcall
fwait
pushl
out
mov
and
in
cmp
nop
adc
add
enter
stc
movsl
shrb
fnstenv
push
aam
fcoml
dec
inc
push
xchg
cmp
pop
inc
f2xm1
notl
and
addl
mov
sbb
pop
aas
push
or
push
adc
adc
dec
cmp
shlb
add
mov
enter
pusha
sbb
cmp
push
mov
adc
lods
inc
cmpsb
cli
loope
sub
lds
and
pop
ds
mov
insl
insl
fdivs
xchg
mov
inc
shrb
xchg
push
add
sti
jns
push
dec
incl
dec
pop
arpl
mov
pop
cmpsb
cwtl
es
cs
int
xchg
adc
fldcw
fiadds
pop
adcb
mov
or
sbb
sahf
pop
pop
mov
push
mov
loopne
or
push
inc
push
jnp
leave
mov
push
jp
dec
xchg
sub
stos
sub
adc
cmp
push
int
into
push
inc
pop
push
mov
inc
in
adc
push
cld
pop
rcll
mov
nop
mov
decb
jmp
push
fst
jb
cmp
or
mov
mov
jae
push
icebp
jle
xchg
test
and
mov
jo
mov
mov
ljmp
outsl
mov
test
insl
xchg
repnz
pop
les
xchg
andb
loope
in
pop
add
inc
pop
adc
mov
mov
jecxz
cwtl
push
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
fidivrs
stos
adc
adc
arpl
sti
inc
fbld
jb
mov
sbb
movsl
adc
pop
lods
stos
sub
cmp
stos
cmpsl
dec
xchg
sub
ficoms
pop
and
adc
sbb
imulb
aas
clc
dec
xchg
mov
adc
mov
cld
mov
shlb
lret
jbe
loope
push
imul
jb
popl
sub
imul
popf
divb
cmpsl
and
pop
imul
sarl
mov
adc
push
mov
push
mov
jg
mov
cmp
mov
aas
paddq
add
push
push
mov
mov
imul
add
sahf
dec
push
add
pop
mov
cmpsb
cmp
cmp
rcrb
sub
in
in
mov
mov
iret
into
call
fdivr
xor
add
mov
nop
inc
testl
int3
pop
sbb
mov
pop
loop
lods
aas
dec
mov
mov
jne
pop
lods
in
icebp
sub
out
and
je
sbb
lods
pop
out
xor
mov
outsb
pop
cmp
pop
and
movb
inc
andb
loop
in
jmp
jg
push
je
stc
sti
adc
js
mov
sahf
fisttpl
ret
loope
ds
lcall
sbb
bts
adc
push
sbb
inc
sbb
pop
inc
push
push
jbe
sbb
stc
mov
mov
jae
xor
mov
mov
xchg
cmpsl
std
pop
mov
add
rolb
jg
cmp
addr16
sbb
xchg
push
push
mov
cmpsl
jecxz
leave
push
fstl
dec
rcr
inc
pop
rcr
shll
call
dec
lret
scas
mov
jmp
shlb
pop
and
scas
cmp
lds
xchg
stos
cmpsl
push
pop
sub
js
xlat
subl
push
out
sahf
popa
scas
xchg
jg
jae
push
out
test
sahf
loope
cld
mov
xor
stos
aas
inc
nop
cmpsb
dec
movsl
add
loope
add
sbb
mov
pop
ljmp
sarl
dec
addr16
pop
and
xchg
movsl
mov
xchg
flds
dec
push
push
mov
packsswb
cmp
or
and
mov
out
cmp
test
inc
push
sbb
dec
insb
lcall
stos
jo
cmp
add
jae
pop
jp
sub
bound
xlat
jae
into
inc
imul
shlb
loopne
aas
movsl
test
aas
imul
lock
sbb
loopne
jno
inc
sub
push
push
cld
mov
pop
pushf
push
and
bound
imul
jb
pop
jp
fisttpll
sbb
mov
mov
popa
xchg
xor
stc
aaa
pop
fisubl
out
jl
imul
xchg
and
into
jns
popf
cld
push
mov
fimuls
pusha
push
ss
fucompp
adc
pop
dec
sub
pop
push
xor
pop
xchg
repz
in
pusha
subb
mov
sub
jle
xor
repz
add
xor
shlb
mov
sar
push
pop
add
mov
popa
and
add
aas
push
mov
dec
clc
int
and
sbb
loop
int3
sbb
jge,pn
xchg
add
outsl
lret
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
dec
mov
stos
adc
adc
cmp
mov
ss
dec
sub
and
stc
in
add
gs
sbb
jmp
fstpl
out
repz
leave
shrl
jl
push
sub
ficoms
or
test
std
fxch
adc
xchg
pop
lret
inc
push
mov
std
aam
xlat
hlt
jnp
imul
lock
or
inc
or
push
cmc
jo
sub
jl
lods
cmp
loop
gs
jge
push
jns
jle
outsb
dec
loope
and
pop
dec
mov
aad
jbe
push
or
mov
xchg
loopne
lds
cmp
pop
add
sbb
repz
aas
sub
jbe
fwait
add
dec
out
insb
call
inc
pushf
mov
cwtl
int3
xchg
sub
add
sti
shr
cmp
push
sbb
adc
fwait
push
icebp
pop
xchg
dec
int
stos
in
aad
xchg
push
dec
test
data16
sub
push
mov
rorl
and
fwait
xchg
cwtl
loope
sahf
mov
and
adc
pusha
sub
add
push
add
and
sbb
mov
cmc
or
pop
push
lock
jae
leave
orb
cmpsb
imul
je
add
sbb
cli
addl
icebp
jmp
jbe
lock
mov
lock
mov
cmpsb
enter
je
nop
push
lds
cltd
dec
loopne
mov
cwtl
call
cmpsl
into
shrl
in
sub
fnsave
loop
sub
fs
adc
addb
hlt
imul
pushf
sbb
sbb
ss
jmp
sti
pop
pop
jne
daa
out
dec
pusha
iret
add
inc
imul
pusha
jbe
stc
cmpsl
fcompl
mov
xor
jne
leave
cs
ss
jne
xor
cmp
jne
scas
dec
pop
aam
fidivl
mov
pop
sbb
or
cmp
orb
sub
cltd
insl
mov
in
xchg
and
dec
xor
aaa
cmpl
push
push
mov
cmpsl
and
ficompl
cmp
sar
jmp
es
fimuls
mov
aas
and
pop
inc
mov
dec
inc
cmp
xchg
mov
or
ja
pushf
mov
ds
xor
sub
imul
mov
mov
daa
ss
or
inc
outsl
scas
aaa
push
insb
pop
in
int3
push
inc
mov
into
inc
int
cmpsb
neg
cmpsb
lock
test
mov
cld
jno
pop
loopne
insb
testl
mov
cltd
mov
xor
in
mov
or
push
repz
adc
push
or
xchg
sbb
pop
xor
and
shll
shrb
cmp
cmp
dec
mov
ret
cs
sbb
and
fldenv
shll
jne
add
mov
push
inc
xor
lods
or
and
cmpsb
inc
pop
adc
loop
push
dec
xchg
ljmp
pop
inc
jb
xlat
stos
push
inc
hlt
leave
test
test
lcall
xchg
jb
cmp
push
out
lds
lret
clc
dec
jnp
cmc
in
sti
cmc
dec
xlat
int
js
je
mov
ret
and
or
scas
mov
repz
in
mov
jo
cli
lahf
or
jmp
xor
mov
dec
arpl
fwait
repz
ret
mov
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
ficoms
scas
addl
jp
jne
cmp
xchg
nop
kaddb
push
std
inc
bound
fistpl
ficompl
cmp
imul
popa
dec
fldenv
sbb
dec
dec
scas
inc
xchg
sbb
pop
add
add
push
int
mov
and
aad
jle
rcrl
in
xchg
ret
sub
cmp
inc
arpl
pop
sub
mov
xor
jle
xchg
sahf
repnz
adc
addr16
subb
sub
shl
jp
adc
fildl
fstps
lret
xchg
mov
daa
xor
test
dec
jne
dec
repnz
hlt
fmul
movsb
sbb
jbe
std
movsb
xor
adc
inc
or
ret
and
scas
movq
loopne
lock
ljmp
scas
sarb
jb
test
daa
out
push
xor
pusha
mov
outsl
add
pop
subl
aam
jno,pt
enter
nop
lock
push
addl
in
test
push
sub
mov
mov
sub
fwait
or
push
mov
out
and
pop
arpl
dec
sbb
and
mov
mov
mov
shlb
fdivp
xor
pop
int
xchg
mov
pop
and
int
pop
add
adc
aas
mov
adc
clc
call
sahf
xchg
testl
add
mov
aas
shll
mov
push
jp
sbb
push
test
pop
call
and
dec
icebp
or
inc
xchg
mov
sub
xor
pop
loope
clc
adc
mov
jmp
or
push
adc
daa
imul
mov
inc
xor
mov
pushf
jecxz
inc
sti
int
andl
shrb
hlt
insb
je
dec
cmpb
xchg
push
nop
xchg
sarb
jo
mov
test
aas
stos
jle
das
push
sub
iret
pop
cli
push
test
adc
push
popf
fisttps
les
mov
hlt
jbe
sub
sbb
mov
lods
in
repz
in
sub
or
and
push
ja
mov
icebp
xchg
test
mov
xchg
pop
push
or
mov
je
in
jno
jl
les
sub
jns
mov
aam
sub
stc
pop
xlat
jecxz
nop
xor
out
push
inc
dec
xor
inc
xchg
stc
mov
incb
outsl
pop
add
test
jo
aas
xor
ficomps
lock
inc
adc
adc
dec
xor
xor
xchg
and
fistpll
lods
xor
push
adc
rcrl
bound
push
mov
out
hlt
gs
cmp
cmc
inc
mov
filds
stos
inc
into
iret
or
jb
fdivl
mov
faddl
mov
test
dec
ds
dec
jne
jp
sbb
xor
cli
cmp
cmp
pop
jle
pop
loope
push
shlb
and
and
sub
js
inc
add
insl
xchg
loope
add
push
or
mov
or
adcl
fisttpl
popf
sarl
xor
xchg
sub
push
add
rep
xchg
sub
add
add
mov
mov
mov
jmp
or
mov
adc
insb
xchg
js
sbb
adc
jge
fists
aaa
jge
in
push
dec
push
mov
in
jno
push
cmp
andb
adcb
call
in
inc
out
stos
push
loope,pt
das
pop
mov
xor
dec
push
out
aam
lods
push
insl
sub
dec
and
add
gs
rcll
out
inc
dec
scas
in
cli
repz
cs
scas
movsb
xchg
sti
jae
inc
out
mov
dec
xchg
test
jae
sub
lods
xor
push
das
sbb
insl
inc
and
bnd
lea
add
pop
loop
adc
xor
adc
cmp
pusha
imul
or
push
pusha
in
cld
cwtl
jle
es
mov
mov
in
xlat
leave
xchg
jns
out
add
jb
and
test
xor
cmc
sarl
lahf
outsb
push
sbb
sbb
mov
mov
jo
mov
xor
scas
sub
mov
xchg
andl
xchg
mov
xchg
and
push
add
rcrl
movsl
stos
data16
mov
fistpll
push
enter
and
int3
mov
lret
xchg
nop
daa
jge
lds
test
xor
stos
js
adc
xchg
pop
fwait
sahf
cld
or
loopne
int3
pop
xchg
push
mov
ret
fcoml
lea
psrlq
loop
push
mov
imul
pusha
inc
cmp
xor
xor
xor
dec
add
adc
jl
scas
cmp
data16
ljmp
cmp
fwait
ljmp
xor
xchg
fistl
test
cmp
sbb
fst
cmp
cmp
mov
jg
enter
popf
fdivl
lods
dec
stos
jb
test
adc
and
jae
rep
cmp
es
sub
jbe
add
hlt
push
jecxz
push
push
cmp
insb
push
pop
pusha
addl
inc
js
inc
das
ficompl
inc
xlat
pop
outsl
enter
mov
leave
int3
in
pop
xor
cmp
test
xchg
js
push
nop
and
jle
ljmp
push
xchg
add
jae
lods
loop
xchg
xchg
sub
jle
iret
gs
es
nop
jbe
popa
inc
push
xchg
xor
fs
and
arpl
adc
mov
and
mov
xchg
or
adc
dec
mov
lods
subl
aad
and
movsb
or
pop
sbb
fnsave
mov
cltd
outsb
outsb
xchg
cld
fdivrs
inc
sbb
push
lret
sbb
adc
sbb
imul
add
ror
pop
push
mov
insl
enter
adc
addr16
sbb
lea
fs
not
mov
fwait
dec
and
xchg
aad
fdivl
aad
inc
fimull
cltd
jae
dec
add
inc
jno
jne
or
gs
mov
mov
ljmp
test
stos
test
leave
lods
repz
inc
mov
sbb
adc
push
out
loop
xor
insl
mov
neg
fwait
cmp
inc
adc
flds
mov
fsts
xchg
cmc
out
popf
inc
daa
mov
cmp
or
mov
push
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
call
adc
adc
sub
imul
test
pusha
in
pop
test
xchg
ds
loopne
imul
idivl
cltd
stos
orb
and
inc
inc
jle
mov
xchg
shll
rcll
adc
push
cmpsl
or
push
cld
and
aam
xor
jg
cmp
pop
pop
mov
mov
push
icebp
sub
xlat
in
pushf
loopne
lahf
lods
inc
sub
push
or
push
pushf
decb
roll
mov
and
dec
dec
dec
imulb
sub
movsl
es
out
mov
jo
je
sub
push
sbb
lea
iret
or
jo
orl
jb
xchg
xor
and
adc
pop
push
dec
sbb
mov
arpl
mov
dec
push
xchg
arpl
repz
std
mov
popa
cmp
push
fdivrl
add
cmc
mov
das
lret
test
push
mov
inc
aad
push
outsb
and
out
clc
scas
outsl
cs
mov
out
xor
pop
dec
jl
xor
mov
ficompl
mov
test
loope
div
sbb
call
fwait
call
popa
pop
test
std
or
test
int
xor
pop
and
lret
stc
pop
mov
sbb
clc
lahf
mov
fnsave
mov
sbb
and
inc
dec
mov
js
jmp
shrl
arpl
dec
xchg
loope
mov
repnz
popf
dec
dec
leave
mov
jmp
sarl
push
inc
dec
jae
popf
test
xchg
repnz
scas
ret
call
out
push
mov
pop
adc
or
add
iret
stc
cs
fnsave
mov
insb
cwtl
repz
xor
mov
sbb
insl
dec
data16
cld
adc
out
fimuls
in
aad
pop
dec
push
and
mov
fs
sub
xchg
push
clc
ja
inc
push
lds
fmuls
stos
iret
inc
cmp
int
dec
test
mov
mov
pop
sbbl
xchg
xlat
mov
mov
fsubl
clc
push
les
push
adc
sbb
push
adc
cmp
out
es
jl
rcrb
or
push
push
in
cli
add
mov
adc
xchg
les
mov
mov
popa
cli
test
cmpsb
sbb
les
pop
dec
js
push
js
or
or
push
push
aad
xchg
lcall
mov
out
mov
lds
jl
popf
dec
cmp
jbe
jp
xor
iret
xor
imull
mov
push
std
dec
xchg
add
bound
cmpb
sub
or
aas
cmc
mov
shll
inc
pop
lock
inc
outsl
add
sub
jb
mov
push
jp
out
arpl
movsb
dec
jecxz
push
call
outsl
or
outsl
push
jmp
enter
std
fildll
outsb
dec
std
cs
cmpsl
adc
in
stos
mov
fstl
fistpl
in
mov
loopne
adc
aam
mov
ds
jge
add
jnp
popa
and
mov
ror
mov
mov
pop
mov
sub
adc
cld
pop
sub
test
add
add
in
add
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
sti
xor
imul
loopne
rcl
and
test
nop
leave
sub
pop
movsl
mov
call
loopne
sarl
das
fs
fwait
or
add
scas
cli
cld
pop
call
jnp
insb
inc
sub
sbb
xor
sbb
loope
adc
aaa
outsb
mov
jecxz
mulb
movsl
jne
push
stos
int3
lds
ljmp
pop
mov
push
outsb
into
addr16
sbb
and
sahf
pop
mov
add
sbb
int
mov
enter
pop
xchg
add
das
movaps
mov
xor
inc
cmp
dec
lcall
push
cmp
call
cltd
pop
nop
sar
pop
mov
add
jge
sub
addr16
jb
roll
xor
or
xlat
in
xchg
push
or
jg
mov
xchg
or
test
subb
mov
mov
movsb
sbb
xchg
and
xchg
xchg
adc
mov
mov
pushf
jb
and
xlat
pop
cmpsl
jmp
xchg
pop
sub
dec
pop
add
mov
push
jp
inc
mov
aam
lods
test
es
jns
iret
and
les
popf
outsl
lret
fimuls
pop
lea
fisubrs
inc
xchg
mov
xchg
lds
inc
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
