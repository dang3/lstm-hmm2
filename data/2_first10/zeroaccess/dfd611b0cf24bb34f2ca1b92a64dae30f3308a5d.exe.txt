push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
cmpsw
loopne
lea
push
xor
sub
lods
cld
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
aam
insl
pop
pop
push
testl
cmp
pop
imul
sarb
popa
jecxz
shrb
cwtl
mov
add
add
fs
sub
mov
cmp
push
mov
sti
test
pop
cmp
and
add
lock
xchg
xchg
and
lret
aad
xchg
mov
outsl
sarb
inc
push
insb
xor
jmp
or
pop
push
push
or
cmpsl
pushl
scas
test
ss
or
mov
pushf
dec
call
push
rorb
inc
fldl
jbe
push
popf
pop
std
shld
cmp
or
scas
dec
or
out
sub
pop
mov
stos
test
bound
mov
dec
in
cmp
fldl
pop
in
subb
xor
xor
lahf
mov
nop
scas
mov
popa
in
adc
lds
lret
jnp
aaa
out
xor
cmpsl
adc
xorl
into
xchg
xlat
icebp
fadds
cmp
mov
cmp
mov
or
addr16
dec
loopne
mov
xor
xchg
pop
fldl2t
sub
stos
mov
popf
shlb
testl
cs
out
sub
mov
lea
mov
lcall
sbb
jle
xchg
stc
les
xlat
shlb
into
pop
dec
dec
push
or
ljmp
call
push
aam
fnsave
out
push
sub
hlt
adc
or
xor
xchg
jae
es
sub
push
or
xchg
sbb
pop
imul
mov
cwtl
push
push
ds
cmp
ret
sub
or
gs
jae
cld
sbb
std
addr16
jp
in
adc
xor
in
add
mov
mov
aad
and
das
lahf
pop
dec
cmc
scas
bsf
out
cmpsl
sub
addr16
movsb
pop
pop
pop
rcrb
xor
loope
test
cmp
fsubs
adc
inc
aad
push
mov
push
scas
or
test
or
pop
add
and
icebp
xor
mov
outsb
pop
mov
std
mulb
data16
mov
mov
dec
mov
cmpb
fiadds
xchg
aaa
js
lret
fidivrs
sahf
jg
pop
lods
dec
mov
lock
pop
add
xchg
mov
orb
push
loopne
dec
or
jbe
rcrb
fildll
ret
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
and
sahf
lods
adc
adc
adc
xor
adc
mov
and
repnz
sbb
decl
inc
mov
sub
in
sbb
inc
fistpl
test
les
es
cli
scas
push
mov
pop
bound
and
cmpl
mov
xchg
sahf
push
fildll
jns
dec
in
dec
or
sub
or
lods
shr
in
cs
push
sarb
jg
or
inc
adc
rcrb
jp
mov
stos
push
popa
sahf
fistpl
ja
lock
fwait
cwtl
or
arpl
xchg
pop
xchg
sbb
mov
pop
sbb
mov
js
andb
filds
out
subb
push
in
xchg
mov
jge
cmp
xor
aaa
lds
xchg
mov
lock
call
shll
ljmp
xor
jnp
insl
rolb
and
ljmp
or
add
jnp
stos
cmp
cmp
push
add
in
pop
popa
int3
sbbb
mov
ss
movsl
fdivs
xor
int
scas
pop
out
popf
movsb
xchg
sub
je
or
mov
in
aaa
or
mulb
roll
mov
dec
pop
sub
cmp
fwait
push
cmp
je
jo
in
or
lret
sbb
leave
mov
mov
jp
arpl
inc
lods
inc
mov
add
ret
fistpll
pop
lock
dec
fcmovne
inc
inc
xchg
popf
iret
in
lock
xchg
cmpl
mov
add
jnp
stc
das
cmp
sbb
in
cmp
aas
mov
and
mov
cmp
sub
vscatterqpd
lret
inc
enter
insl
push
ljmp
cmpsl
xchg
sbb
push
add
shll
out
cmpsb
enter
xor
pop
inc
xchg
out
cmp
push
je
sub
test
add
pop
inc
cmp
and
movsb
fidivl
das
lods
in
sub
mov
xchg
bound
fbstp
mov
sbbl
nop
and
sub
add
and
shl
push
dec
out
adc
jo
fmulp
sbb
mov
cld
in
jno
adc
xchg
shll
add
dec
jnp
mov
pop
adc
out
repz
addr16
pop
rclb
movsl
xchg
mov
pusha
loopne
rcll
fwait
dec
mov
decl
jp
and
insb
int3
test
jbe
adc
aaa
jns
leave
cld
mov
sub
lea
lret
xor
add
cmpsb
addb
popf
ret
int
push
jp
sbb
mov
push
pop
lahf
dec
jns
fdivp
outsl
jae
add
out
jp
cld
out
pop
xchg
out
and
inc
push
mov
ja
adcl
dec
cmpsb
das
in
jg
bound
test
shlb
or
movb
and
push
ffree
pop
decb
mov
lret
mov
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
sbb
xor
jp
mov
xor
mov
notl
pop
push
push
dec
and
jae
addl
mov
clc
mov
sbb
in
mov
jo
push
arpl
ficoml
adc
stc
jle
lods
pop
test
inc
push
jp
test
push
push
leave
push
imul
movsb
cld
pop
dec
cld
pop
popa
int3
mov
lods
out
dec
sti
sub
and
ret
pop
fisubrl
scas
pop
push
test
lock
dec
fildll
xchg
jecxz
push
stos
mov
fimuls
cmc
sarb
arpl
add
sub
rolb
inc
add
gs
pop
test
nop
or
sbb
jg
pop
pop
stc
mov
xchg
and
mov
cmp
jecxz
stc
dec
in
sub
mov
jnp
cmp
in
loop
stos
xchg
lock
sbb
dec
imul
out
pop
out
inc
fwait
movsl
das
out
ret
outsb
adc
iret
in
mov
mov
dec
and
mov
mov
xor
fidivrl
fldt
pop
cmpsb
jno
push
mov
xchg
xor
push
cmp
call
jae
sbb
aaa
push
loope
sub
jl
pop
jno
fisubl
inc
scas
add
push
popf
cmc
dec
rcll
outsl
in
fistpll
push
adc
jmp
pusha
mov
andl
mov
jle
push
mov
pop
gs
shll
ljmp
ss
add
jmp
mov
scas
mov
clc
repz
test
pop
aaa
cmp
or
sub
inc
xchg
cmp
cs
mov
xchg
cwtl
lahf
mov
mov
sub
mov
aad
adc
and
in
xor
dec
adc
movsl
xchg
jne
and
inc
push
sbb
xorl
in
nop
mov
cmp
push
lea
and
scas
jp
sbb
push
test
push
jbe
movsb
ret
jle
cmpsl
aad
cmc
loopne
jo
xchg
insl
push
hlt
jmp
rorl
add
and
adc
dec
adc
popf
std
dec
out
in
subl
jbe
fsub
add
testb
into
xchg
mov
add
xor
adc
push
bnd
dec
or
imul
push
xor
sub
and
push
enter
outsl
andl
cld
shlb
in
mov
fcmovnb
and
jb
outsb
sti
mov
cmp
xor
rcll
test
imul
mov
test
lea
cmc
shlb
mov
push
xor
adc
sbb
mov
leave
push
pusha
leave
push
cmp
jo
jno
jns
aad
mov
cmp
cld
xchg
hlt
into
testl
pop
leave
jge
jo
cmp
popf
popf
js
mov
xchg
add
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
outsl
sbb
adc
adc
add
adc
insl
mov
jo
mov
loopne
add
adcl
xchg
sub
aas
aam
inc
or
xor
push
adcl
and
aaa
mov
mov
insb
je
inc
popf
xor
sbb
mov
ds
add
add
sbb
xchg
enter
enter
out
test
xchg
jae
jo
pop
frstor
sahf
sub
ret
sub
pushf
push
rol
push
ds
enter
test
out
scas
xchg
movsl
jno
cmp
mov
mov
fs
std
sbb
mov
je
int
dec
ret
ja
loopne
stos
cmp
shr
dec
jo
lds
pop
jne
outsb
xchg
inc
or
push
scas
mov
fiadds
jnp
xlat
push
xlat
sbb
or
pop
lea
movsb
mov
jl
ljmp
insl
fistps
outsl
jl
cmp
fnstenv
iret
out
pop
jle
and
add
xorb
mov
insl
cmp
inc
ss
push
shll
addb
sub
lret
fildl
aad
fwait
mov
pop
bound
lds
inc
jg
bound
adc
pop
sub
inc
mov
mov
jno
ror
std
or
cmpsl
gs
test
sub
aam
jno
ss
fsubrl
push
leave
fs
dec
std
xchg
fnstsw
push
test
dec
push
xchg
outsl
in
fcompl
jo
hlt
aas
jbe
pop
adc
cwtl
mov
in
ss
cmp
xor
sti
into
jecxz
stos
pop
addr16
cwtl
push
sbb
adc
mov
aas
push
jle
inc
mov
pop
jbe
fnstsw
xchg
push
fcmovnb
jno
and
sbb
int3
rcrl
shl
ret
cmp
push
and
shrw
mov
xchg
imul
adc
add
lcall
rorl
ret
push
dec
mov
loopne
dec
jl
leave
rcrl
in
mov
sub
and
mov
sub
ljmp
imul
in
test
fistl
xchg
aam
inc
rcrl
movsl
aad
cld
enter
push
cld
fwait
loope
lret
fs
inc
dec
sub
sbb
sbb
fs
add
je
out
dec
sub
aaa
cmp
outsl
insl
scas
adc
xchg
push
cmp
mov
jecxz
mov
pop
rcrb
pusha
cmovns
pop
sbb
in
push
lret
mov
mov
dec
mov
adc
mov
add
sub
bound
mov
push
and
or
push
sbb
sub
lods
lods
cs
jecxz
movsl
sub
mov
xchg
lea
jb
sub
int3
jbe
sub
pop
movsl
out
movsl
cs
les
mov
imul
dec
int
lods
jae
jb
subl
or
in
xchg
jle
add
jge
lock
push
aam
fcomip
xor
or
xor
sub
sti
add
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
ss
sahf
lods
dec
std
adc
adc
adc
rdmsr
jmp
stc
add
repz
repnz
nop
in
data16
stos
mov
enter
nop
push
and
push
jnp
lds
push
sub
pop
xlat
hlt
jnp
loopne
xlat
push
push
repnz
sub
mov
pop
xchg
clc
iret
cmpsl
cmpsb
sbb
push
stos
icebp
push
cmp
repnz
mov
pop
sahf
call
push
out
dec
rcr
in
cld
data16
out
loop
add
dec
push
iret
fistpll
or
enter
mov
clc
lods
mov
cmp
push
aam
mov
mov
lods
out
xchg
mov
xchg
push
repnz
nop
aaa
push
or
stc
fdivrl
lret
adc
in
das
cmp
and
cmp
loopne
xchg
adc
push
adc
pushf
jo
imul
jge
or
fidivrs
clc
push
data16
pop
fidivs
pop
jmp
pop
cwtl
mov
add
divl
imul
jmp
cld
rcr
sti
scas
dec
das
mov
mov
sbb
push
andl
cmpsl
rcrl
sub
movsl
in
cmpsb
cmp
add
pop
adc
loopne
orl
out
mov
and
push
mov
cmp
jnp
mov
rorb
cltd
std
inc
mov
xchg
cld
push
in
loop
imul
or
mov
out
ds
mov
or
inc
mov
sub
jno
cmc
fcoml
xchg
and
out
mov
ja
inc
imul
out
add
cmp
pop
fs
test
jae
lds
and
pop
out
leavew
movsl
lods
cmp
shl
xlat
xchg
mov
out
push
jnp
dec
arpl
fucomip
xor
lahf
dec
xor
dec
scas
fistl
sbb
cmp
jge
cmp
jbe
subb
roll
dec
inc
into
fisubl
cmovs
enter
aaa
jae
mov
data16
cmp
mov
cmp
xchg
cwtl
dec
pop
dec
repnz
cmpsb
bnd
and
insl
sub
mov
lret
lret
adcl
add
or
jo
loop
cmpsb
mov
jmp
adc
out
and
or
test
leave
inc
mov
add
sbb
scas
scas
xor
cmp
cmc
dec
lret
inc
daa
mov
movsb
push
xor
cmpsl
jb
inc
shr
into
pop
mov
push
xlat
scas
test
rclb
stos
in
mov
cmpl
sub
add
mov
call
cmp
xor
mov
movsl
jae
mov
stos
inc
mov
lret
or
cmc
lret
lcall
pop
jp
ljmp
jmp
adc
nop
dec
push
push
fstl
ret
sahf
mov
lock
cmp
push
lea
outsb
sbbl
jo
dec
mov
dec
nop
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
xor
jle
repz
adc
adc
addr16
dec
jb
ficoms
sub
call
xor
mov
xchg
mov
lea
sbb
mov
xorl
repnz
sub
out
ds
sbb
pop
jecxz
jb
sub
dec
pop
je
je
ja
cmp
adc
pop
mov
dec
xor
push
stc
cmc
inc
pop
sbb
and
gs
mov
ret
in
insl
cmp
in
push
in
mov
mov
loop
xchg
xor
push
repz
sub
xchg
xor
xor
or
stc
sbb
int3
lods
mov
push
pop
sub
aaa
ss
jg
push
out
add
jns
pushf
in
popl
pushl
mov
jo
das
add
pop
out
pop
cmp
testl
mov
cmp
sahf
and
leave
imul
nop
pusha
push
std
sub
ret
aad
rorl
cmp
xor
fdivl
cmpb
inc
jne
stos
sub
stos
jge
push
loop
mov
pop
xorl
sbb
inc
jb
cs
mov
rorb
ds
cmpsl
or
ret
push
jns
imul
enter
cmpsb
sbb
imul
or
jns
shlb
int
pop
shlb
hlt
ss
aas
popa
pop
cmp
push
xor
xchg
cmp
jmp
rcll
mov
push
jnp
cmp
xor
and
and
jg
nop
sar
sub
or
fcmove
xchg
or
pop
dec
mov
xchg
jns
subl
xchg
rdpmc
scas
or
pop
arpl
imul
pop
inc
jns
pop
inc
orl
negb
jge
movsl
lret
mov
push
push
test
dec
scas
test
movsb
mov
xor
testl
cltd
pop
pop
ret
insb
fcomps
into
mov
imul
sahf
cmp
jbe
xchg
jle
push
ljmp
or
scas
or
jecxz
outsb
mov
pushf
sbb
pop
dec
outsl
xor
test
sbb
jae
ret
dec
adcb
mov
iret
pusha
inc
xchg
std
fimuls
xchg
in
pop
out
dec
aas
lods
gs
pop
xchg
and
inc
aam
in
cli
add
push
mov
mov
sbb
xchg
aam
sbbl
hlt
scas
or
bound
mov
scas
cld
ja
fbstp
sub
mov
push
fwait
push
rorb
ljmp
pop
les
mov
jecxz
lods
xchg
cmc
das
loope,pt
not
mov
lods
adc
mov
xor
loop
test
xor
xchg
mov
mov
xchg
xlat
insb
and
push
ljmp
xchg
jl
xchg
ret
cld
cmp
mov
jl
xchg
mov
int3
les
ja
sub
call
add
pushf
adc
adc
push
addr16
mov
call
shlb
ss
add
sbb
mov
sub
pop
mov
jmp
xchg
cltd
bound
and
push
jo
pop
imul
call
adc
adc
aad
ret
mov
icebp
xor
push
sub
sub
mov
arpl
dec
cltd
jle
rolb
cmp
cli
movsl
sarb
inc
ss
enter
popf
in
flds
insl
pop
adc
xchg
cmc
inc
enter
jle
es
add
push
jne
and
or
adc
mov
push
call
pop
add
enter
push
mov
dec
jb
mov
xor
sbb
lret
and
outsb
mov
movsl
pop
in
sar
imul
out
test
movsb
mov
mov
mov
ds
test
dec
repz
push
bound
sub
outsb
mov
aaa
cmp
enter
mov
in
jmp
cli
pop
lea
addb
jp
pop
lret
or
dec
dec
lret
clc
cmp
add
cmp
jg
jae
or
mov
fdivp
adc
cmp
pop
inc
cmp
ja
sbb
or
lods
pop
cmpsl
jns
xchg
xor
les
pop
std
pushf
in
and
add
push
lcall
mov
mov
gs
imul
xchg
imul
test
call
mov
xchg
jnp
jmp
arpl
fcoml
insb
in
shrb
lret
sub
faddl
pop
js
les
test
jmp
addr16
jae
orb
mov
mov
lods
cmp
adc
movsl
adcb
imull
ds
xchg
in
mov
fwait
out
push
mov
es
stc
rorb
fstps
xchg
dec
mov
jl
xor
push
cld
jne
iret
cltd
lahf
pop
cmpsb
dec
push
push
roll
or
and
mov
jns
inc
lahf
fwait
scas
jb
pop
jo
test
mov
inc
ret
rcrb
stos
cmp
gs
rcr
xchg
ret
push
ja
sbb
push
pop
pop
adc
lret
xorb
lret
vrcpss
pop
xchg
fisttpl
cmp
inc
add
pop
sahf
mov
dec
sarl
test
das
jmp
popa
je
out
loop
bnd
adc
push
popa
xchg
mull
or
mov
mov
sub
test
mov
das
dec
into
mov
mov
insb
fisttpll
or
shl
pop
pop
push
cld
mov
inc
cmpsl
pop
fcompl
jns
and
lahf
mov
lret
mov
data16
loopne
aam
sbb
idivb
lods
aam
jne
push
inc
insb
jno
add
dec
imul
dec
sahf
aam
mov
in
test
in
ds
cmp
outsl
icebp
adc
fst
test
jle
mov
stc
jbe
jae
out
sbb
lcall
xor
int
stc
jl
and
pop
mov
js
std
push
jg
call
lods
mov
lods
roll
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
call
js
ljmp
fisubrl
lock
add
push
fsubs
stos
sub
insb
mov
jmp
xchg
cwtl
or
pop
fwait
int3
mov
mov
lahf
cli
jbe
sti
jecxz
sub
into
xchg
pop
sti
xlat
movsl
test
adc
in
stos
ret
rolb
enter
pop
adc
mov
mov
mov
dec
mov
cmpsl
dec
in
add
cmpb
daa
and
rcll
xchg
mov
sub
adc
stc
loopne
std
sbb
push
mov
cmp
sub
pushf
aam
xchg
int
fnstcw
sub
iret
xchg
mov
mov
fbld
les
loopne
xor
fcoms
push
pop
sbb
or
mov
push
jo
dec
add
gs
nop
cmp
fwait
sbb
aaa
jmp
or
cmpb
aaa
cltd
movsl
push
incl
sahf
pop
or
lret
push
bound
sbb
stos
popf
popa
icebp
cld
sub
pop
inc
sub
sbb
jle
sub
fnstsw
sbb
or
pop
xor
std
enter
xor
xchg
jl
add
push
mov
lcall
test
dec
aas
pop
cwtl
popa
mov
mov
in
icebp
xor
out
cs
mov
clc
mov
jge
mov
loopne
mov
or
jecxz
pop
xor
mov
cmp
mov
popf
mov
xchg
xor
stc
sti
mov
dec
arpl
xchg
jle
mov
pushf
insl
xchg
test
inc
xor
and
mov
cmovae
mov
rcl
mov
mov
xchg
ja
or
fcomp
adc
outsb
pusha
dec
mov
xor
add
cld
outsb
mov
jge
mov
dec
clc
shrb
es
pop
sbb
std
add
sti
stos
push
mov
outsb
pop
aas
rcll
lods
and
sub
iret
jge
jle
or
mov
test
sti
jge
mov
mov
cltd
xor
add
push
outsb
and
cmp
test
insl
repz
pop
stos
or
enter
xchg
sub
xchg
stos
ja
cmp
mov
mov
orl
fsubrs
cmc
and
pusha
adc
and
bound
pop
pop
sahf
out
int
add
rcr
add
jp
leave
push
lcall
jnp
aas
push
xor
push
fcmove
fldl
fnstenv
leave
jmp
fsubrs
lods
jp
jmp
mov
lds
xor
mov
cmp
add
test
adc
fcmove
outsb
aas
cmp
scas
mov
adc
scas
cs
cmp
or
inc
push
xchg
xor
push
dec
ret
sbb
cmp
dec
mov
push
jg
xchg
dec
mov
lret
push
mov
add
gs
lahf
add
cli
inc
jbe
fdivl
ret
jns
mov
add
mov
in
or
and
push
ret
test
pop
dec
jle
push
cwtl
xor
mov
sub
push
in
in
dec
loopne
or
xchg
inc
pop
xchg
insb
mov
mov
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
mov
adc
adc
adc
loopnew
sub
and
xor
out
add
adc
dec
add
xor
cmp
mov
sbb
sti
mov
sbb
outsb
nopl
dec
cs
in
out
lret
jnp
cmp
pop
outsl
not
rorb
cmp
ret
and
pop
jo
fnstenv
shrb
pop
xchg
add
int
adc
mov
pop
inc
xor
enter
or
fnstenv
gs
cwtl
lahf
dec
aas
movsl
adc
inc
cwtl
jle
leave
inc
inc
xchg
pop
mov
or
mov
test
ficompl
test
aam
fsub
dec
cs
mov
aaa
mov
sbb
jns
xor
pop
mov
outsl
xor
sbb
mov
pop
pusha
inc
les
mov
lods
lods
stc
push
das
bound
mov
lock
cwtl
jecxz
mov
pop
xchg
lods
fisttpll
rorl
inc
mov
jnp
pop
arpl
mov
add
pop
cld
push
fisubs
leave
leave
pop
dec
inc
daa
adc
lret
mov
cld
add
cmpl
dec
jl
jecxz
pop
addl
aad
inc
insl
out
iret
movsl
in
adc
mov
mov
sarl
mov
xlat
sbb
mov
sub
lods
movsb
or
lock
mov
jle
in
adc
adc
jle
dec
out
jns
lods
clc
addr16
jb
je
xchg
jns
push
sbb
loop
out
inc
cmpsb
push
jmp
scas
pop
mov
inc
pop
mov
cmpsl
mov
pop
out
sbb
sbb
pop
inc
out
insl
inc
clc
add
jb
mov
loop
mov
cmp
out
sbb
sub
push
push
xchg
xchg
mov
cs
out
and
xchg
adc
mov
xor
sub
mov
sub
mov
ljmp
outsb
aaa
arpl
addr16
lahf
or
sti
cmp
adc
call
fsubrl
out
xchg
mov
or
clc
xchg
cmp
mov
xor
addr16
pop
xlat
lods
mov
cltd
mull
mov
mov
dec
xchg
xor
roll
cmp
test
jmp
test
je
cmp
mov
cmpsb
cmc
ror
sub
dec
xor
xchg
enter
mov
ljmp
out
scas
pop
cmp
dec
inc
jne
dec
pop
std
test
test
gs
adcb
out
jnp
mov
xlat
adc
int
lahf
push
xchg
mov
push
push
fldcw
xchg
inc
push
cmp
sub
jp
int3
jle
shll
fdivl
xchg
push
mov
add
add
icebp
lea
cmpsb
enter
js
push
xchg
push
jne
imul
es
push
mov
test
xor
cld
push
push
adc
lea
std
mov
fbstp
add
dec
je
cwtl
push
fcmovnb
xchg
mov
add
shll
sbb
add
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
in
fidivrs
adc
adc
sbb
ljmp
lods
mov
jg
dec
int3
pop
icebp
lods
fdiv
test
into
lret
subl
add
in
repz
int
jne
aas
pop
pop
xchg
mov
xor
out
repnz
pop
mov
iret
fildl
mov
mov
stos
leave
pushf
push
inc
in
mov
pop
aas
sub
add
xchg
lret
scas
lods
icebp
iret
jo
xor
movq
shlb
cmp
xlat
mov
push
outsl
mov
lcall
js
stos
pop
push
jnp
ficoml
push
mov
sub
cmpsl
mov
pop
aas
lock
scas
adc
gs
ss
test
mov
int3
inc
sarb
sub
jbe
bnd
insl
orl
xlat
iret
mov
pop
shlb
xchg
js
and
add
mov
jb
cs
inc
loope
sub
mov
mov
int
and
flds
push
xchg
sbb
ret
mov
inc
ftst
push
sarb
fisubrl
xchg
loopne
or
rcll
insb
mov
mov
stos
cltd
xor
icebp
mov
xchg
leave
mov
nop
popf
xor
push
xorb
je
fiaddl
jne
jne
sbb
pop
xchg
jbe
repnz
cmp
adc
xchg
rclb
xor
mov
fld
push
mov
fimull
loop
inc
nop
gs
or
adc
inc
movsb
sti
mov
sbb
lds
pop
repz
fldl
adc
fmul
aas
int3
sbb
cmpsb
inc
mov
adc
test
xchg
mov
rorb
mov
sub
in
adc
add
adc
add
lahf
mov
test
sbb
movsl
aas
push
pop
mov
stos
push
rcrl
lods
sub
mov
pop
fisubrl
sbb
lret
push
dec
in
loop
dec
mov
sub
inc
ja
lock
popf
sahf
dec
fisubrl
mov
adc
clc
mov
pushf
xchg
add
mov
repnz
jmp
sub
repz
dec
and
ja
fwait
arpl
pop
imul
sub
adc
movl
push
movb
lcall
andl
xlat
cs
mov
gs
int3
ds
stos
out
add
roll
stos
add
push
xchg
cmp
in
inc
fstpl
out
dec
cmp
in
mov
out
pop
addl
test
xor
push
sbb
leave
mov
sbb
inc
out
and
stos
jne
add
pop
jnp
repnz
mov
adc
add
fldenv
push
jbe
in
cmp
das
sbb
mov
test
fdivrs
ret
sbb
adc
jae
mov
ret
mov
sub
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
call
adc
adc
adc
clc
ljmp
add
fucomip
cmp
xor
mov
lahf
mov
ja
jb
jge
cmp
ret
js
in
rorb
js
jmp
sub
test
leave
push
hlt
and
lret
xor
xor
xor
insl
cmc
fists
mov
aas
sub
repnz
lret
bnd
inc
enter
out
inc
fdivs
or
sahf
mov
mov
mov
dec
mov
out
ficoml
dec
das
xchg
int3
js
stos
fisubl
loop
ja
loopne
sub
lods
xor
les
and
xchg
push
cwtl
adc
std
adc
dec
mov
shrl
out
inc
jbe
leave
inc
jo
dec
dec
shlb
call
mov
pop
adc
scas
xchg
add
mov
or
movsl
cs
jne
add
dec
pop
scas
shll
ljmp
or
pop
sub
orb
pop
lods
mov
sub
rol
sbb
test
add
cmp
push
adcb
xchg
cld
dec
jns
test
inc
iret
icebp
jnp
dec
iret
mov
mov
mov
push
cmpsl
shlb
dec
xor
stos
add
les
xchg
mov
hlt
or
test
mov
mov
xchg
lds
pop
adc
adc
shll
fiadds
imul
adc
pop
rorb
xchg
into
pop
push
sub
out
inc
sub
std
push
mov
leave
push
push
jns
cmc
cld
add
mov
pushf
jmp
aam
pop
loop
imul
push
xchg
jo
cmp
jo
and
stc
sti
nop
sbb
in
data16
push
jl
adc
fildl
loope
push
lds
div
dec
pusha
cmp
cmp
jg
icebp
cmpsl
aas
repz
or
in
jnp
adc
mov
insb
aad
pusha
sub
cwtl
mov
xor
repnz
mov
pop
jnp
movsl
cmp
adc
mov
and
cld
mov
aam
jge
sbb
and
push
xchg
addb
popa
xor
cmpsb
jl
negb
pop
es
mov
jnp
in
xchg
xchg
mov
inc
repz
jp
lds
add
mov
cmp
and
stos
test
fsubs
mov
add
adc
push
int
mov
xchg
jle
push
or
sub
popa
in
lahf
mov
aad
insb
out
int3
int3
jg
adc
jns
fdiv
mov
lret
mov
testl
jg
xchg
int
lods
pop
adc
xchg
test
mov
mov
das
cltd
aam
out
jecxz
xchg
decl
decl
stc
and
into
pop
outsb
loop
inc
mov
and
mov
sub
scas
ljmp
insl
cltd
sbb
lods
dec
or
sahf
add
xchg
sbb
std
sub
sbb
dec
add
dec
loope
std
cltd
mov
int3
cmp
or
inc
cmp
jb
sbb
hlt
stos
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
or
insb
jno
adc
adc
adc
mov
cmpsb
push
inc
cltd
inc
jnp
dec
push
bound
push
add
pop
xor
lds
mov
fistpl
mov
iret
rcll
jg
xor
iret
out
push
in
mov
mov
push
pop
test
and
cmp
test
xchg
icebp
cwtl
inc
out
adc
fistpl
pop
jns
jl
inc
stos
jl
ja
call
das
cmpsb
scas
nop
mov
test
adc
aaa
xchg
cmpsb
or
mov
xchg
rorb
in
je
cmc
cmc
push
cmp
cmpl
outsl
adc
push
add
jns
hlt
and
rorl
addr16
or
jnp
mov
jnp
mov
and
mov
test
jl
int3
sti
fwait
lahf
aad
sbb
js
sub
or
jno
dec
pushf
sbb
mov
loopne
hlt
and
lret
lods
call
loop
out
jno
add
jle
jno
je
mov
push
push
stos
sub
mov
in
aas
mov
js
adc
xchg
in
mov
xchg
mov
mov
mov
roll
insl
int
lret
shlb
fdiv
jmp
add
push
sahf
cmpsb
inc
dec
pusha
jb
jno
lahf
inc
cmc
adc
mov
das
hlt
xorl
movsl
out
inc
cli
mov
mov
cli
xor
sbb
lcall
mov
dec
lock
paddd
cmc
aas
lods
ss
andl
js
xor
jp
imul
int3
pushf
xor
mov
push
sbb
cmp
jno
adc
pop
adc
xlat
out
aad
cmpsb
enter
jecxz
sub
daa
in
fists
lods
xchg
bnd
pop
fsubl
dec
add
lock
dec
loop
inc
iret
lods
push
xchg
pop
cltd
push
mov
dec
call
fldt
xor
enter
ret
sbb
lea
xchg
lea
jns
inc
pusha
dec
gs
jg
repnz
ljmp
addr16
addr16
and
mov
cmp
mov
lea
inc
xor
outsl
mov
inc
mov
into
ds
mov
aaa
cmp
mov
fnsave
jge
pop
arpl
clc
xchg
mov
jmp
jmp
pop
sub
pop
xor
adc
jns
cmp
mov
outsl
in
or
js
pop
mov
mov
dec
lods
imul
mov
pop
movsb
loope
or
and
movsl
addr16
push
pop
jb
or
outsl
incb
fnstenv
in
aaa
ret
or
inc
sub
push
sbb
pop
pop
pop
or
mov
jp
hlt
cmpsl
in
cmc
into
xor
xchg
pop
sbb
orl
cwtl
pop
fdivl
push
pop
inc
jmp
shlb
jecxz
mov
jno
and
cmp
hlt
mov
xor
push
push
int3
adcb
jp,pn
mov
popa
test
loop
mov
inc
xor
mov
aad
loop
jle
cmpsl
cld
fidivrs
ljmp
js
mov
inc
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
ds
pop
lods
mov
adc
adc
sub
xor
rcll
lea
mov
jae
inc
inc
out
clc
cli
daa
jle
aaa
dec
imul
xor
mov
xchg
in
popa
mov
mov
in
ja
mov
mov
cmp
sub
push
mov
add
push
jle
pop
sub
clc
sub
or
popa
inc
lds
shll
or
fwait
mov
sub
xlat
das
pusha
add
xor
lret
arpl
out
xchg
or
in
and
xlat
jae
jo
lret
pop
cmp
icebp
mov
sub
xchg
xchg
out
lods
fadds
xchg
cmp
movsb
mov
ret
push
jb
jg
xor
add
sbb
ficomps
mov
cmp
ficoms
fisttpll
push
call
mov
repnz
ss
loopne
sub
push
daa
dec
add
push
bound
fildl
jg
sub
stos
sbb
mov
push
inc
mull
jg
and
push
add
fistpl
lret
sbb
xor
sub
cmpsl
bound
xor
sbb
mov
push
xchg
mov
out
or
sahf
mov
add
aam
shlb
and
arpl
push
mull
andb
push
rolb
mov
mov
jne
mov
sub
insl
std
in
cli
fs
in
insl
push
or
mov
mov
sub
in
jge
mov
call
or
stos
jnp
scas
dec
out
xor
jns
or
sbb
fisubrs
out
sbb
jle
das
into
nop
and
xchg
aaa
push
sub
mov
jo
cld
add
xchg
sub
outsb
int3
in
xchg
mov
arpl
outsl
ljmp
stc
leave
aam
jne
jl
imul
xchg
xor
mov
or
sbbl
cmc
daa
idivl
leave
or
enter
out
dec
ds
pop
sbb
lock
mov
aad
adc
das
clc
clc
adc
adc
xchg
lret
add
cmc
test
sti
add
loopne
ds
mov
jnp
pusha
inc
adc
std
push
and
push
jl
push
inc
jb
push
jbe
enter
xor
pushf
push
shl
out
js
mov
cld
or
out
pushw
jge
stos
sbb
arpl
cmpsb
rorl
xlat
cs
mov
shll
fiaddl
mov
sahf
test
test
outsb
mov
call
in
inc
or
jns
jbe
dec
das
int
aas
pop
mov
mov
jns
jbe
out
sbb
pop
or
arpl
rol
sbb
sub
test
mov
or
mov
jmp
jp
xchg
push
push
or
jp
xchg
jge
pop
cmp
xchg
or
insl
insb
push
out
mov
cmpsb
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
push
mov
jne
shlb
jg
push
scas
add
mov
ret
dec
or
inc
int3
sar
das
sub
mov
cmp
pop
inc
cmc
mov
lret
rcrl
lea
not
out
dec
aad
insl
jae
fwait
test
cld
push
xchg
push
ljmp
das
gs
cs
loop
cltd
jne
cmp
add
lret
sub
in
xorb
and
mov
dec
and
aam
mov
mov
jp
jb
push
mov
sub
inc
cltd
adc
sbb
rclb
inc
cmp
adc
stc
and
inc
sbb
dec
mov
mov
adc
and
push
xlat
xor
push
aad
inc
dec
sarl
cmovne
mov
scas
dec
jne
mov
mov
fwait
mov
loopne
pushf
cmp
das
xor
shl
sbb
and
andl
xor
adc
in
aaa
sbb
add
adc
ret
fnstenv
sbb
mov
inc
hlt
movsl
sub
cli
jg
mov
sarb
mov
andl
imul
pop
dec
roll
mov
out
push
ret
cs
data16
ss
jmp
in
or
mov
xchg
adc
cld
call
cmp
cli
mov
out
add
fimull
cwtl
sbb
sub
xchg
in
sub
mov
scas
notl
push
sbb
mov
adc
imul
cmp
xchg
jle
mov
cmpsb
mov
pop
adc
fildll
imul
addl
cwtl
sub
inc
push
add
mov
cmpsb
cmc
xchg
outsb
mov
int
iret
cmp
cli
test
xchg
push
mov
cmpsl
es
fisubrl
ror
jnp
dec
test
xchg
inc
lds
inc
ja
add
pop
cmp
adc
or
jg
arpl
jb
sbb
and
pop
dec
out
inc
xchg
mov
xor
cld
add
lcall
mov
jecxz
push
dec
and
and
push
push
hlt
shrl
and
pusha
rclb
jb
rolb
hlt
loopne
enter
lret
gs
nop
pop
popf
das
jne
dec
in
jns
faddl
test
shlb
cmc
leave
scas
pop
sub
push
mov
daa
sub
adc
mov
insb
sbb
mov
mov
or
es
call
je
jg
or
popa
jge
mov
clc
cmp
ljmp
dec
cmp
out
jo
add
out
ss
test
lock
mov
into
fnsave
pop
out
adc
clc
dec
or
jb
cltd
add
fldcw
std
loope
dec
cli
lcall
dec
sub
fstpl
sahf
out
pop
push
mov
nop
rorb
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
jle
mov
adc
mov
pop
pushf
mov
adc
jge
lret
mov
call
xlat
push
add
push
popf
sbbb
pop
push
iret
xor
ss
in
inc
loop
stos
loopne
out
test
cmpsl
ljmp
inc
shrl
aas
popf
push
pusha
and
cs
pop
lret
sbb
sti
mov
fisubs
pushf
gs
int3
in
pop
outsb
cmp
pop
fucomp
mov
popa
es
into
iret
mov
mov
pop
dec
cmp
jnp
jnp
dec
out
iret
sarb
ds
and
fistpll
xchg
jbe
and
pop
dec
imul
lret
repnz
sub
mov
in
aam
xorl
dec
sub
mov
addb
pop
pushf
dec
cmp
data16
lds
fucomp
push
xorb
sub
icebp
lods
pop
push
mov
stc
addr16
mov
js
push
loope
in
xor
incl
dec
xor
xchg
add
gs
movsb
pushf
ds
sub
je
notb
repnz
jae
push
push
popf
and
jo
fcompl
mov
lret
nop
xor
pop
push
data16
std
les
push
jmp
lods
outsl
sti
fucomp
je
jnp
mov
ljmp
aam
jmp
or
shufps
fnstcw
shl
xchg
out
leave
test
loop
fst
sub
imul
xor
sub
in
es
jae
jmp
sbb
jmp
mov
movsb
jmp
shr
jbe
out
add
mov
daa
adc
repnz
cmp
or
out
bound
sub
test
mov
test
and
jmp
xor
dec
mov
in
stos
or
mov
pop
test
jge
out
lret
add
gs
or
jae
mov
jmp
cmc
pop
xor
jmp
or
dec
nop
lea
dec
mov
in
pop
out
pop
into
mov
stos
xchg
insb
hlt
sbbl
jge
pop
add
shrl
sbb
addl
or
std
xor
ja
jle
arpl
xchg
mov
push
push
into
popf
push
bound
adc
call
fildl
sub
outsl
push
cmp
rolb
jnp
gs
xchg
sbb
mov
adc
pusha
jae
sub
sbb
cwtl
arpl
scas
test
xchg
cmp
cmpsb
cmc
xchg
mov
lods
dec
pop
dec
fiaddl
inc
fcomip
inc
sbb
push
je
fldenv
cmp
sbb
sbb
subl
int
cwtl
nop
addr16
leave
int3
dec
and
jno
scas
in
pop
dec
in
or
sbb
popf
repz
test
mov
xor
and
repz
or
divb
test
insl
adc
rcr
push
mov
ret
jo
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
loope
add
adc
adc
das
les
fcoms
aas
or
enter
imul
test
inc
add
xor
std
daa
jg
daa
xchg
bound
adc
mov
jge
js
mov
sbb
aad
pop
lds
xor
nop
scas
lock
iret
imul
mov
pop
xor
xchg
inc
lret
das
cwtl
in
xor
pusha
iret
pop
cmpsl
repnz
loope
cmc
sub
cmp
dec
jmp
xchg
and
or
xor
out
lods
into
ror
pusha
shlb
and
xchg
xchg
lods
in
addb
or
adcb
lret
mov
sbb
adc
add
shlb
test
iret
dec
out
in
push
dec
hlt
mov
int3
adc
sbb
xchg
mov
inc
dec
jle
push
inc
ficomps
adc
mov
clc
popf
and
and
int3
mov
insl
int3
daa
imul
sub
pop
adc
dec
cmp
mov
cmpsl
pop
mov
cmovp
and
ds
sub
xchg
add
pop
push
inc
ljmp
mov
mov
orb
inc
mov
xchg
ret
int
movb
or
cmp
pushf
add
pop
test
outsb
aas
addr16
loop
loop
ficomps
sub
pop
cmpl
sbb
inc
pop
xchg
fnstenv
inc
xor
pushf
mov
lret
jo
inc
sbb
mov
es
inc
icebp
cmp
jns
add
mov
sti
testb
sub
dec
or
pop
sub
imul
mov
fdivs
outsb
adc
insb
imul
push
or
mov
or
xor
into
push
aad
into
lret
testb
mov
mov
cltd
outsl
mov
push
addr16
pop
push
mov
mov
jge
add
call
pop
or
cmpb
sub
add
adc
dec
nop
cmp
jb
cmc
dec
ficompl
imul
push
jne
jp
insl
pop
jge
adc
add
out
test
popa
pop
lock
adc
negb
inc
lret
fstpl
dec
movsb
mov
push
scas
leave
int3
aas
je
aas
mov
bound
les
aaa
mov
sbb
mov
imul
lret
into
sub
into
in
fsubl
adc
ds
dec
mov
mov
inc
sbb
push
push
fwait
mov
pop
or
or
ret
sbb
push
pop
cmc
push
cli
xor
outsl
jle
les
in
ja
mov
outsl
cli
sbb
ljmp
mov
je
adc
mov
or
stos
jecxz
jnp
sbb
inc
mov
imul
dec
cmc
pusha
sbb
je
cmpl
daa
les
mov
pop
push
into
and
sahf
testb
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
sbb
scas
adc
adc
adc
subl
sbb
fistl
fdiv
add
imul
out
jmp
pop
mov
xor
popf
stc
into
fcoml
fidivl
or
outsl
or
imul
cmp
add
popf
cmpsl
sbb
pop
jno
xchg
sbb
lea
adc
bound
push
sbb
add
adcb
lcall
mul
popa
xchg
add
test
or
dec
or
btc
in
push
sbb
lock
das
push
in
xor
adc
cmp
int
insl
fisubrl
xor
xchg
in
loopne
jge
jmp
mov
sbb
or
fcomi
adc
fmuls
adc
cmpsl
lds
mov
out
push
je
sub
cmpsl
outsl
pop
nopl
mov
xchg
pop
sub
test
fsubrp
pop
inc
lods
jns
inc
stos
or
mov
jnp
push
or
or
test
adc
mov
scas
movsl
jle
std
stos
xor
push
add
test
repz
shll
das
out
out
cwtl
inc
sub
pop
and
mov
mov
popa
inc
stc
cmp
cmpsl
jne
mov
sub
or
lock
lods
lcall
push
adc
incb
sub
insw
mov
dec
insl
xor
sub
jne
push
pop
mov
ja
jg
scas
mov
out
push
decb
mov
test
cmp
sbb
lods
push
and
push
xor
pop
sarl
popf
push
inc
lcall
push
bound
test
cmpsl
mov
add
push
insl
stos
inc
xor
sbb
jmp
jbe
mov
inc
xor
mov
adc
inc
scas
cld
enter
pusha
add
mov
sahf
push
lahf
push
pusha
ja
lods
mov
bound
cmp
movl
stos
mov
mov
cmp
jle
loope
and
test
aaa
bound
sbb
jmp
mov
fsubl
sahf
es
psubusb
je
adc
stc
idivb
ds
pushf
in
jp
cli
int
ret
jmp
movsl
dec
sbb
loop
clc
mov
daa
dec
loope
mov
xchg
test
cmp
pop
lcall
int
dec
jecxz
pop
dec
and
mov
jmp
lds
in
inc
out
lock
cmpsb
or
loopne
adc
int3
aaa
sub
or
test
and
data16
lret
ljmp
dec
inc
pop
leave
xor
dec
ret
hlt
adc
mov
sub
push
pop
movsb
and
je
rcll
mov
pusha
popa
ds
insb
sbb
mov
fstl
scas
jno
pushf
or
cld
pushf
jl
sub
fs
sbb
out
push
mov
jecxz
jg
outsb
pop
jns
add
fwait
mov
mov
inc
fnstenv
dec
pop
rcll
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
cld
jle
inc
movsb
adc
adc
adc
mov
jecxz
roll
popa
out
or
sahf
icebp
pusha
rcll
mov
je
mov
cmp
pop
jg
mov
out
fdivrp
push
push
xor
mov
loopne
pop
std
movb
adc
jnp
adc
outsl
inc
sub
and
test
mov
loopne
cmp
mov
divl
push
or
cmp
mov
xor
ffree
and
and
lret
mov
adc
mov
cmp
jae
jns
icebp
adc
sub
loopne
pusha
lret
xchg
rcrl
imul
cld
mov
cmp
xor
push
movsl
cld
notb
pop
mov
stc
inc
lods
jno
pop
sbb
xor
pop
cmp
push
mov
bound
icebp
mov
lcall
or
mov
pop
cwtl
ret
mov
inc
inc
mov
jmp
std
fimuls
push
mov
or
push
xchg
rclb
jl
xchg
mov
addr16
out
and
mov
leave
popa
sbb
dec
shlb
cmp
inc
pop
stos
int
test
lods
rclb
stc
jns
ret
push
inc
mov
rcrl
adc
outsb
jo
xor
ss
push
mov
dec
adc
pinsrw
mov
mov
lahf
aam
push
jmp
push
filds
pop
or
scas
xchg
fisubrl
aaa
rorl
stos
mov
es
repnz
adc
insb
or
pop
loopne
rolb
insl
xchg
and
insb
int3
xor
mov
cmp
pop
xlat
mov
jmp
xlat
es
inc
pop
pop
push
loope
sub
cmp
addl
ret
outsb
push
push
add
fbld
aas
xchg
lock
sub
lret
mov
iret
mov
inc
or
into
filds
andb
push
in
add
decl
test
or
cwtl
mov
int
repz
add
pop
outsb
cs
mov
popl
adc
adc
pop
cmp
roll
popa
push
or
jl
std
dec
adc
add
dec
xchg
push
mov
push
loope
lock
jg
loopne
xor
fldt
sub
and
test
mov
fwait
daa
add
mov
popa
sub
in
jbe
and
ljmp
mull
xchg
daa
ret
jno
jbe
inc
xor
popl
dec
daa
sbb
cs
jge
dec
dec
sub
ds
jns
add
adc
test
pusha
mov
scas
xor
push
fcmovb
mov
xor
pop
inc
cwtl
cli
hlt
mov
in
adc
sbb
mov
dec
outsl
fsts
arpl
movsb
rorl
lods
repnz
hlt
dec
pop
scas
nop
xor
bound
daa
mov
add
jl
dec
js
iret
mov
add
rdpmc
mov
adc
mov
cld
out
in
push
add
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
cmpsl
and
lods
nop
pushf
adc
adc
adc
xchg
mov
cs
adc
add
std
and
test
xchg
cmc
add
lods
testb
in
gs
dec
adc
ds
les
loope
repz
mov
frstor
out
sbb
xor
xchg
cld
or
outsb
and
pop
imul
add
popf
mov
mov
scas
mov
pop
push
fucomp
cmp
and
xchg
or
mov
fsubrp
cli
pop
add
aaa
mov
pop
and
sbb
cmp
push
xchg
jg
sbbl
cmpsl
jmp
pushf
fsubr
stc
and
or
mov
shlb
clc
pop
cmp
mov
dec
pop
rolb
repz
aas
jge
imul
mov
into
push
ljmp
and
mov
and
jmp
pop
adc
mov
ja
push
scas
jmp
adcb
inc
ret
aam
stos
push
dec
inc
aad
mov
in
ds
je
mov
adc
mov
sarl
add
arpl
pop
or
dec
bound
dec
scas
mov
fdivl
sbb
push
cmpsb
cmp
cmp
loope
sub
push
cmp
stos
subb
cmp
pop
ja
dec
int
mov
popf
mov
xchg
jno
dec
sbb
xchg
xor
mov
mov
mov
fs
ljmp
inc
sub
ss
dec
xchg
pop
mov
stc
add
stc
jo
mov
push
ret
out
ljmp
in
add
cwtl
aad
xchg
dec
lock
push
xchg
xor
insl
fistpll
insb
ret
out
cmpb
pop
cmp
pop
imull
sbb
xor
aam
pop
lcall
sub
push
mov
je
xor
mov
push
dec
rol
xorl
xlat
test
push
jmp
loop
push
bound
jp
cmc
push
jns
movl
xchg
fdivs
jnp
bound
adc
ds
and
jbe
testl
std
jo
in
sbb
jbe
push
push
push
adc
sbb
sti
sbb
scas
arpl
pop
shr
xchg
jbe
inc
push
loope
mov
shll
aaa
mov
push
dec
xor
push
pop
pop
jle
push
fstl
rcr
lcall
cmp
ret
pop
pop
or
mov
add
fwait
mov
inc
mov
push
cwtl
inc
push
sub
enter
cmc
in
repnz
push
lret
or
jns
mov
jmp
dec
int3
test
push
mov
fists
xor
or
arpl
les
jmp
add
out
nop
xchg
aaa
dec
mov
icebp
adc
jae
cli
adc
inc
fnstenv
ss
add
and
in
jecxz
dec
in
ret
pushf
fbstp
push
push
sub
or
mov
sub
shrl
sub
xor
shl
xor
or
add
mov
jmp
xor
and
xor
cmc
stos
loope
adc
adc
adc
mov
push
orb
sbb
add
jbe
jne
mov
mov
jbe
xchg
jbe
movsb
repnz
fs
jae
and
out
out
add
pop
dec
and
hlt
inc
pop
cmp
xchg
dec
jp
iret
ds
cmp
add
push
aad
lds
add
cli
iret
popa
js
insl
hlt
xor
sbb
pop
pop
out
popa
mov
lods
popa
popa
pushw
cltd
test
fisubs
movsl
frstor
das
addr16
popf
inc
pusha
sbb
or
ret
out
pop
push
pop
xlat
add
addr16
pop
loope
test
adcb
push
jge
and
jge
dec
addl
jp
or
ret
mov
pop
loop
data16
adc
in
or
mov
fwait
pop
in
jo
js
data16
shlb
jle
packuswb
cmp
jbe
mov
and
xchg
outsl
fsubrp
loopne
pop
mov
cld
push
mov
out
and
xlat
fldt
jno
lods
aad
rolb
popa
mov
repz
lret
pop
inc
push
cmp
clc
lods
loop
dec
in
sub
cmp
imul
jns
inc
cmp
movsb
cmp
sbb
arpl
leave
mov
iret
inc
inc
iret
ds
rcll
xlat
hlt
sbb
push
jne
test
fisttpll
push
loop
das
mov
mov
inc
into
jg
mov
jmp
pop
cld
mov
push
lret
imul
dec
adc
in
mov
push
fcmovu
shlb
movl
movsb
dec
lock
arpl
loop
ds
test
negl
clc
rcl
xchg
mov
jecxz
pop
nop
jge
test
shl
es
je
jl
mov
or
repz
gs
pop
ja
sbb
pop
cld
int3
pop
lds
jb
js
xchg
cmp
mov
dec
aam
sarl
faddl
sbb
rorb
adc
pop
hlt
mov
aad
xchg
add
pop
pop
mov
aas
inc
hlt
rorl
mov
xchg
fidivs
mov
lods
mov
fisubl
push
add
test
jae
data16
ret
adc
pop
aas
out
pushf
int3
mov
scas
jmp
jmp
loope
mov
out
add
cmp
lea
pop
mov
clc
mov
push
lock
outsb
arpl
roll
lret
bnd
cli
scas
clc
test
aaa
or
xorl
outsl
sbb
adc
or
xchg
iret
cmp
pop
loope
jle
cmc
cmp
jge
pop
int
push
or
jae
cmp
int3
sub
push
cld
jp
cmpsl
cmp
inc
fs
daa
fiadds
fdivs
cli
xchg
clc
scas
imul
push
jmp
fimuls
idivl
cwtl
cmp
add
adc
and
fdivrl
data16
mov
jecxz
xor
pop
push
jbe
icebp
mov
stc
bound
or
xchg
ds
sub
out
cmp
iret
cmp
or
lods
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
push
movsl
cwtl
lods
sub
adc
inc
es
xor
arpl
fsubrs
inc
js
dec
mov
test
xchg
cltd
add
fisttpll
adc
adc
lcall
das
ret
lret
inc
dec
pop
leave
push
test
xor
mov
inc
or
inc
xchg
add
pushf
enter
sbb
mov
sbb
fmulp
cmp
push
lock
call
xchg
adc
mov
enter
inc
in
lea
aam
and
aas
lds
shll
fdivs
data16
jb
in
push
test
jg
shlb
mov
div
dec
pop
arpl
jbe
jne
push
outsl
mov
lock
jae
jne
sbb
loopne
cli
lahf
arpl
nop
inc
cmc
ljmp
mov
sub
daa
mov
pop
jne
scas
xchg
xchg
xor
mov
cmpsl
fistpll
imul
and
mov
mov
das
jg
xorb
dec
in
loopne
rorl
pop
cmp
push
cmp
jle
xchg
add
rcrb
in
sti
cmp
xor
add
leave
jno
mov
mov
imul
popf
int
and
aam
and
mov
cld
adc
andb
cmpsb
adc
mov
inc
test
imull
enter
scas
aad
mov
xchg
xor
push
das
fsts
mov
jg,pn
cli
mov
incl
les
aas
push
loop
popf
repnz
test
dec
xor
jae
mov
sarb
rcrb
and
int
cltd
mov
or
mov
xchg
dec
ficoml
bound
push
lea
xor
in
mov
mov
testl
or
outsb
cltd
popf
fcmovbe
lds
lods
sarb
nop
pop
dec
or
arpl
add
imul
mov
sbb
cmpsb
mov
pop
popf
in
cli
inc
inc
xor
sbbl
xchg
lods
sbb
sar
fisttpl
push
xchg
and
mov
push
ficompl
xchg
sbb
pusha
rorb
mov
adc
repnz
pushf
add
or
and
scas
shrb
fnstenv
test
je
sarb
pusha
inc
mov
mov
dec
inc
cmp
or
xchg
arpl
iret
pop
loop
jecxz
es
pushf
push
lods
js
fdivl
jmp
pop
ret
jns
ja
add
or
push
inc
aam
aaa
and
and
xor
ds
dec
test
rorl
mov
scas
mov
xchg
and
int3
add
pop
into
addb
xor
pop
or
pop
xchg
in
dec
sbb
cmp
and
fsub
dec
mov
push
mov
mov
ret
inc
data16
lret
mov
in
push
sub
mov
inc
out
inc
cmpsl
fdivl
fistpl
test
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
pop
jno
stos
jle
adc
adc
adc
outsl
movsl
sbb
inc
sti
cmp
add
push
jae
in
repz
je
int3
enter
cmovle
subl
fs
outsb
or
scas
arpl
insl
pop
lods
lcall
and
in
das
inc
mov
notb
sbb
insb
adc
fistl
mov
test
jge
dec
sub
mov
ds
adc
xor
jns
ficompl
lret
mov
jp
ffreep
xlat
sahf
xor
std
outsb
sub
je
xchg
mov
lods
les
test
inc
bound
cs
in
cmp
mov
jge
push
fiaddl
push
in
cmp
jge
test
mov
scas
out
push
aad
hlt
imul
call
rcl
pop
cmpsl
scas
mov
fmull
pop
jl
sub
jmp
inc
es
sub
pop
int
outsb
mov
inc
fnsave
popf
jo
cmp
cmp
xchg
mov
inc
leave
adc
aad
cmpsl
pushf
push
lea
ret
adc
push
iret
ds
jnp
sub
test
hlt
stc
sbb
pop
inc
int3
xchg
add
mov
jae
fsts
out
dec
xchg
rcr
pop
out
scas
or
stc
je
sub
incl
push
and
jl
or
mov
ja
pusha
inc
js
sub
mov
mov
mov
adc
or
addb
movsl
cmp
hlt
inc
in
aam
lods
mov
push
mov
lds
iret
test
rcrl
push
lret
sbb
lds
xchg
insl
gs
pop
repnz
jecxz
mov
jne
outsb
mov
mov
jae
hlt
into
mov
subl
pop
mov
sbb
and
fnstsw
out
adc
mov
xchg
jg
fimull
popa
push
cmp
cmp
leave
jg
out
das
mov
insl
adc
pop
lret
pop
sbb
shl
mov
lock
pop
jne
rcl
jge
pop
push
iret
sub
pop
mov
lret
mov
pop
mov
int3
lcall
testb
lret
xor
adcb
adc
xchg
pop
lea
fcomps
sbb
inc
ljmp
cmc
add
pusha
outsl
loop
add
xor
into
or
cmp
loope
iret
daa
add
sti
mov
sti
sti
addr16
mov
sub
jbe
in
sub
mov
sub
fldcw
cli
mov
add
dec
cld
filds
push
sub
aaa
fnstenv
fmuls
shr
icebp
ja
mov
test
xchg
leave
outsb
sbb
icebp
add
lock
jb
sbb
inc
dec
xchg
daa
out
into
ljmp
push
pop
inc
xchg
mov
push
ret
fstps
add
enter
push
mov
adc
mov
jno,pt
fcomp
push
std
loopne
leave
adc
es
popf
sbb
xchg
enter
jg
fistps
scas
out
in
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
jae
jge
and
push
cmp
jns
push
ss
adc
jmp
xchg
insb
jle
mov
pop
lods
pop
fstps
mov
mov
jg
mov
add
aad
xor
pop
mov
icebp
cmp
pushf
ret
mov
pushf
out
aas
fdivrl
add
shll
and
ljmp
push
push
mov
mov
push
jmp
and
pop
adc
ss
and
ja
lahf
xor
insl
xchg
cmp
jnp
imul
adc
out
loopne
adc
aaa
movsl
push
ss
rorb
jae
loope
shl
sbb
sarl
mov
inc
jb
idiv
mov
mov
ss
dec
test
cmp
sub
hlt
sub
insl
and
sbbl
pop
out
repnz
aad
bound
push
repz
xor
cmpsl
pop
xchg
and
leave
mov
sub
mov
push
mov
sbb
xchg
faddl
dec
push
loop
xchg
xlat
das
mov
shlb
or
xchg
call
repnz
dec
xchg
das
or
cltd
pop
aaa
bswap
insl
cmpl
pop
enter
jno
sbb
sbb
lcall
inc
adc
imul
pop
dec
icebp
sub
cmpsl
push
mov
fs
repz
jns
push
add
jmp
xchg
sbb
aam
xchg
xchg
adc
into
lret
xchg
push
cwtl
shll
fldt
in
mov
popf
jo
notb
sti
dec
mov
sub
stc
add
jo
add
cmpsb
je
movb
push
ja
fcmovnbe
and
lret
inc
iret
hlt
pop
xor
insl
filds
and
movsl
and
stos
test
aaa
test
ds
addb
jle
mov
lcall
inc
mov
divb
xchg
das
and
sub
mov
xchg
sub
xchg
popf
decb
lods
adc
aas
pop
jmp
jns
mov
inc
popa
popf
jbe
jge
lods
xchg
imul
mov
rol
iret
repz
mov
sub
ja
lods
test
stos
or
shrl
insb
inc
dec
das
out
xor
test
aaa
scas
fnsave
sub
cmp
xlat
sbb
test
inc
aam
push
int
in
test
iret
mov
sbb
mov
imul
mov
push
dec
sbb
inc
pushf
pusha
pushf
fcomps
dec
test
dec
scas
jecxz
or
or
cltd
fildll
xor
je
pmaxsw
sti
decb
mov
pop
mov
xchg
into
clc
fs
add
inc
dec
sbb
sahf
cmp
into
mov
xchg
data16
daa
mov
sbb
mov
push
sub
cmc
jo
fcomp
cwtl
push
xchg
orb
mov
xor
xchg
jmp
fmul
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
lods
sbb
adc
adc
jno
xor
jns
inc
adc
out
pop
jbe
xor
addps
cmp
dec
sbb
push
lods
dec
adc
lods
popf
pop
mov
hlt
nop
ja
lods
or
adc
xchg
xchg
imul
pop
mov
cli
inc
push
mov
fst
imul
push
hlt
mov
arpl
mov
lock
or
popa
cmp
pop
pop
xchg
xchg
cltd
mov
push
in
nop
outsl
mov
outsl
cli
popa
arpl
lahf
stos
add
pop
data16
aam
adc
xchg
iret
arpl
fisttpl
jg
leave
clc
addr16
movsl
dec
dec
call
jbe
outsb
adc
and
and
fwait
jns
mov
cli
in
add
js
lock
xor
stos
faddl
xor
loope
hlt
and
into
in
mov
add
lahf
cs
aam
cmpsb
mov
pop
dec
add
rol
out
mov
xchg
push
cmp
jae
jb
ret
push
dec
insb
dec
clc
push
sbb
in
jmp
lods
dec
dec
jmp
lret
inc
push
cmp
xchg
sub
add
insl
testb
stos
inc
sbb
test
aad
inc
xchg
pop
out
movsb
pop
test
mov
cli
or
daa
cmpsl
mov
or
insb
insb
es
or
inc
lcall
add
movsb
mov
sbb
inc
dec
or
push
or
in
shl
adc
andl
lret
int
mov
push
les
stos
fistps
push
xchg
es
mov
lods
es
xchg
sbb
xor
adc
jg
adc
sub
in
cmp
in
mov
inc
addb
push
xor
insb
ret
add
mov
js
pop
adc
cld
je
add
inc
push
cs
rol
sbb
enter
cwtl
stc
lock
sar
ficompl
mov
jmp
loop
and
mov
test
jb
push
inc
imull
out
cli
mov
std
ret
pavgw
add
jae
js
adc
stc
filds
mov
sbb
les
repz
jge
mov
inc
pop
mov
sahf
movsl
adc
xor
int
cmp
mov
xor
pop
pop
mulb
popa
push
aaa
ret
cmp
sbb
cld
jmp
cmp
loop
sbb
add
lods
mov
mov
mov
xor
inc
shlb
outsb
test
leave
dec
bound
mov
sarl
std
jae
sub
cmp
inc
adc
xchg
out
cld
jbe
push
lcall
aaa
and
push
dec
stos
and
mov
fwait
sbb
push
push
stos
xor
ja
lahf
push
fnstsw
loop
xchg
loopne
mov
xlat
xor
push
xor
adc
les
ss
jnp
ret
cld
fs
repnz
and
orb
or
mov
jp
mov
pushf
add
sbb
or
mov
cmp
repnz
mov
rorl
inc
adc
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
sbb
insb
fs
adc
adc
push
stc
mov
in
out
adc
out
sub
push
rol
mov
jp
mov
mov
lcall
gs
icebp
pop
arpl
gs
adc
mov
push
jle
add
ror
and
aaa
mov
mov
adc
addb
jmp
shl
jae
and
mov
aam
ja
mov
adc
mov
roll
aad
sbb
mov
inc
adc
sub
inc
xchg
sbb
jo
jnp
mov
dec
int3
fsincos
push
dec
pop
mov
push
xor
pop
cld
out
or
xlat
xor
jecxz
mov
mov
inc
aam
add
cmp
into
cli
and
loop
ds
cmpsl
push
inc
adc
pop
sbb
mov
xor
mov
mov
hlt
jbe
mov
fidivl
xor
icebp
test
fnop
in
and
pushf
push
or
mov
sbb
add
mov
mov
jge
addr16
repz
and
xor
imul
dec
sbb
cmp
stos
insl
push
push
arpl
sub
mov
aaa
push
dec
cmp
and
sub
cwtl
mov
xchg
ja
pop
lret
enter
fsubrl
das
cmpsb
xchg
insl
or
or
std
filds
adc
sbb
mov
stos
faddl
repnz
fadd
add
and
push
pushf
gs
or
sbb
sub
jecxz
mov
cld
mov
stc
ljmp
push
jge
loopne
loopne
or
fs
loope
xorl
imul
repz
push
arpl
push
ljmp
xchg
add
mov
push
mov
sarl
mov
mov
test
and
scas
pop
sub
cmpsl
cltd
ret
push
jns
mov
push
clc
mov
out
pushl
outsl
push
sub
ret
cs
lret
adcl
cli
stos
ret
sub
or
mov
testb
mov
cwtl
add
mov
sbb
aas
mov
fs
sub
dec
adc
ficomps
add
mov
stos
mov
or
add
push
ss
mov
cld
les
mov
push
dec
jge
daa
pop
ss
addr16
pop
fwait
and
dec
xchg
js
in
scas
jmp
insl
notl
pop
or
or
jns
dec
add
xchg
or
jno
sub
imul
inc
mov
cli
mov
lahf
inc
scas
std
push
add
popa
scas
shrl
dec
push
lock
inc
jle
bound
adc
pop
mov
shll
xchg
push
test
aad
mov
sbb
jb
mov
mov
xchg
cltd
stos
stos
xchg
scas
cld
lcall
xchg
lods
inc
dec
mov
fildll
mov
ror
cwtl
mov
popf
xchg
mov
push
and
xor
inc
cmp
mov
mul
inc
fsubl
out
imul
sarl
add
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
jns
mov
adc
push
xchg
push
out
jne
insl
add
aad
repz
enter
inc
adc
xor
les
test
orl
pop
sub
pop
dec
addr16
add
ljmp
imul
js
inc
insl
dec
insb
int
pusha
movsb
jle
int
inc
ds
xchg
hlt
sbb
mov
sahf
scas
les
into
add
outsl
lahf
test
cmpsb
cwtl
jmp
stc
andb
sub
jmp
repz
mov
mov
jno
mov
inc
mov
push
or
lods
imul
xor
test
fldenv
push
mov
sub
iret
sbb
dec
mov
sub
jecxz
sub
mov
dec
push
adc
jb
repz
mov
xchg
leavew
add
pop
pop
add
movsb
jmp
cs
repz
cwtl
push
daa
jb
jne
xor
out
sub
pop
cmpsl
cmpsb
scas
mov
mov
cmpsl
movb
insl
mov
sbb
cld
bound
mov
lock
repz
loop
pushf
pop
addr16
jne
arpl
imul
sub
adc
lahf
pop
xor
stos
dec
js
pushf
jge
xchg
mov
sub
call
cmp
lds
mov
mov
call
lods
popf
lret
push
cmp
push
xchg
inc
cwtl
cltd
iret
mov
inc
dec
push
je
mov
lea
popf
sub
rorb
movsl
lahf
jp
hlt
sub
pop
cld
jge
jl
rclb
ret
aam
and
enter
enter
lods
xchg
in
cli
mov
mov
sbb
shl
xchg
pop
ljmp
lret
stos
dec
cmp
fcomp
pop
adc
hlt
test
int
xchg
push
lcall
mov
fiadds
mov
into
fiaddl
xchg
repz
mov
test
mov
mov
pop
scas
test
ljmp
aam
sub
test
sub
fs
mov
fwait
dec
sub
sub
cld
dec
sahf
movsb
nop
add
add
cwtl
cmc
or
mov
sbb
sub
ret
int
inc
adc
add
add
aad
xchg
in
testb
fcomi
pop
push
adc
sub
dec
leave
jns
jno
sbb
cmp
sbbb
cmpsl
iret
and
adc
pop
mov
mov
mov
outsl
es
mov
pushf
call
loopne
lret
sbb
push
lea
jl
inc
sbb
out
repz
daa
loopne
mov
or
outsl
and
movsl
pusha
and
aad
lcall
invlpg
sti
pop
ja
mov
mov
sti
jle
dec
xchg
cmp
je
jl
jae
sub
arpl
rorl
out
xchg
mov
xchg
sti
add
pop
cltd
cmp
in
inc
pop
or
xlat
repz
lahf
xor
stos
imul
aam
out
mov
fmul
shl
jb
mov
int3
leave
mov
push
inc
and
addr16
call
std
loope
mov
in
pop
adc
repnz
pushl
pop
int
push
mov
inc
lret
rcr
xorl
dec
dec
int3
mov
push
and
mov
in
xchg
dec
fbld
hlt
and
test
or
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
pop
nop
out
incl
sbb
dec
mov
pop
pushf
sbb
sub
mov
xchg
sti
sbb
jmp
mov
add
dec
inc
or
and
mov
out
jnp
pushl
lret
das
add
mov
pop
pop
mov
cs
cmp
lcall
xchg
les
or
cmp
mov
cltd
mov
sbb
stos
daa
xchg
xor
cmpsb
aam
and
call
mov
sbb
push
and
dec
aas
mov
sbb
outsl
clc
repz
repz
out
sub
adc
sbb
jmp
sahf
xchg
push
mov
pushf
gs
and
mov
xchg
mov
clc
mov
sar
jo
and
sbb
cmp
fwait
ret
jle
dec
pop
jbe
xchg
add
lret
xor
xchg
add
pop
int3
mov
sbb
sub
bound
cmc
jge
jp
or
cmp
cmpsb
pusha
lea
out
cmp
lea
loopne
or
neg
xor
pop
or
xor
pusha
xchg
cmp
call
lock
adc
push
test
mull
lds
sub
or
mov
aam
cmpsb
lcall
mov
mov
cmp
shl
daa
hlt
cmp
sbb
loop
bound
inc
rclb
bound
pop
or
popa
mov
mull
outsb
xor
popf
push
cld
movsb
pusha
lods
mov
inc
cmc
mov
cwtl
das
adc
scas
ljmp
mov
stos
pop
inc
mov
inc
adc
popa
xor
add
mov
sti
ljmp
mov
add
add
fcomi
stc
push
xor
shll
mov
mov
sub
addr16
jne
lret
stos
push
xlat
pop
fistpll
andl
lock
mov
arpl
xchg
push
cmpsb
pop
jmp
pop
out
outsl
int3
and
ret
popf
or
cld
and
call
xchg
mov
mov
icebp
mov
mov
pop
mov
xor
xor
cmp
adc
arpl
sub
inc
lret
test
in
scas
idiv
push
mov
ja
pop
xchg
sbb
cmp
xchg
xor
sub
pushf
gs
xor
pop
repnz
insl
jg
lock
adc
jbe
lds
pusha
push
push
mov
lds
lret
and
push
arpl
int3
cmc
bound
jne
jne
push
repz
fwait
mov
jmp
cmp
jne
mov
cltd
push
inc
xor
fstpt
stos
mov
adc
push
cmp
in
mov
nop
mov
jmp
dec
lods
fwait
lods
fcmovnb
mov
test
add
je
lret
aad
call
cmc
pop
or
iret
add
and
jns
mov
jns
mov
nop
lock
test
push
int
mov
inc
mov
or
enter
add
mov
insl
or
xchg
and
jbe
jge
lds
mov
push
adc
lods
lret
out
lods
cmp
leave
pop
mov
push
xchg
test
mov
xor
add
xlat
movsb
mov
pop
inc
and
decb
pop
xor
movsl
sbb
add
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
cld
idivl
bound
adc
mov
sub
adc
iret
inc
push
outsl
leave
or
aas
jge
adc
in
adc
push
push
dec
clc
out
out
in
sahf
sbb
mov
jecxz
cmp
insl
adc
sub
push
sbb
movsl
or
test
mov
ror
gs
mov
in
movl
adc
stc
mov
stos
mov
and
dec
inc
cs
jns
push
call
or
imul
into
es
into
adc
ja
adc
ds
push
andb
addr16
cmp
push
mov
test
in
les
jl
out
mov
in
jns
dec
push
cmpsb
mov
jno
dec
outsb
inc
and
xchg
mov
add
xor
addr16
mov
clc
add
inc
fildll
add
fisubs
mov
dec
dec
and
xorl
imul
in
mov
les
out
add
pop
mov
int3
mov
pop
mov
jno
mov
mov
and
lret
stc
aad
adc
nop
mov
sub
gs
or
mov
add
dec
pop
cmp
rolw
imul
jbe
repz
jle
lret
cwtl
sti
cmc
shlb
xchg
adc
outsb
xchg
jle
outsb
adc
iret
addr16
cld
out
fsub
test
xor
sub
stos
sub
fnstenv
adc
bound
aas
lock
fucom
xchg
and
in
aam
adc
cli
xor
mov
nop
mov
nop
dec
mov
lcall
and
xchg
pusha
sub
loopne
fcomps
mov
cs
sub
inc
mov
lret
xchg
pop
inc
cltd
leave
hlt
mov
dec
xor
ret
stos
mov
insb
mov
fisubl
dec
sub
loope
aaa
into
adc
sub
mov
stc
out
xor
xor
sbb
sbb
dec
clc
pusha
lret
fmul
jp
xor
pop
loope
mov
idivl
jecxz
dec
or
sub
push
lcall
bound
inc
push
daa
sbb
and
loope
mov
jg
pop
rol
xor
push
add
sbb
xor
pop
lcall
sbb
cmc
test
mov
add
ja
std
int
jno
push
sub
sbb
xchg
mov
jecxz,pn
sarl
scas
leave
lret
in
cmp
or
jmp
clc
add
mov
xchg
add
out
scas
popa
int
test
loopne
out
je
je
into
shrl
dec
jo
shrl
ss
xchg
std
out
mov
adc
fbld
xchg
add
iret
sub
repnz
sbb
shll
add
insb
push
sbb
mul
pop
and
mov
pop
jb
mov
ja
fists
int3
loope
shrb
cli
fs
es
int3
repz
jne
mov
scas
lcall
lds
sbb
mov
cmp
insb
sbb
xchg
push
fistps
push
inc
jbe
popf
enter
jb
sub
fdivrp
ja
adc
in
push
out
jne
inc
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
mov
mov
ja
loop
out
push
xchg
pop
js
lods
pop
lds
test
xor
and
push
cmpsl
pop
xlat
jae
arpl
inc
pop
xchg
cmp
imul
xchg
xchg
or
andl
pop
mov
insl
test
pop
dec
loope
add
in
lcall
pusha
pop
sbb
arpl
xchg
mov
mov
out
cs
inc
pushf
xchg
inc
fnstenv
xlat
popf
and
sub
fcmovb
push
or
sub
xchg
loopne
sti
pop
inc
cmp
or
scas
roll
jg
pop
rclb
cmp
into
in
cmovb
jmp
aad
push
push
es
imull
mov
push
aad
xchg
mov
cwtl
push
mov
jbe
sub
sub
in
dec
xchg
jnp
fwait
add
test
cmc
test
push
mov
pusha
and
mov
push
mov
xor
pop
test
test
lcall
adc
arpl
mov
stos
mov
rcrb
inc
in
add
shrl
pop
jae
fdiv
sub
mov
andl
fs
jnp
divb
cli
ss
aaa
cmp
ret
call
sub
fidivl
push
jo
pop
aad
hlt
das
or
or
push
out
mov
imull
inc
adc
repnz
cmp
fnstenv
test
in
sub
mov
pop
jl
imul
addl
movsl
xor
test
aad
scas
std
mov
fwait
cmp
mov
cmp
int
mov
imul
jo
and
cmp
int3
and
stos
inc
je
push
out
pop
cltd
inc
shll
inc
pushf
xchg
xchg
daa
mov
xor
push
adc
cwtl
je
jmp
out
adc
mov
enter
push
lods
jb
jbe
dec
cwtl
push
loope
popf
js
out
xor
insl
jmp
pop
sub
or
inc
or
and
insb
das
mov
jg
addr16
in
cmp
push
cmpsl
ds
mov
fisubrl
pop
mov
lods
jge
loopne
call
jecxz
std
xor
mov
jge
jno
mov
lock
mov
adc
movsl
mov
leave
cmp
lea
mov
stc
loope
pusha
push
xor
jae
and
repnz
into
dec
out
dec
push
mov
dec
cltd
push
cs
pop
je
repnz
jae
loope
sub
sar
mov
mov
xchg
jnp
fcmovnbe
les
dec
shll
hlt
dec
inc
pop
sub
fs
sbb
mov
stos
in
movl
mov
sub
icebp
lods
pushf
adc
in
jno
movsl
xchg
sbb
jno
cmp
xorb
call
mov
fisttps
arpl
std
push
cltd
stos
fs
mov
fwait
mov
sbb
ds
fucom
and
push
or
dec
rorl
or
jmp
mov
popa
xchg
ds
sub
das
dec
mov
pop
les
push
imul
jle
out
add
lods
cmp
xor
sub
das
pop
or
jge
jp
repz
mov
mov
sub
fs
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
enter
push
adc
mov
adc
mov
mov
stc
mov
bound
sarl
nop
adc
mov
cmpsl
sbb
jns
repz
xchg
cmp
out
outsb
add
push
and
scas
mov
sub
mov
mov
dec
movsb
pop
ds
inc
out
mov
movaps
fisubl
ds
sti
cmp
nop
stos
lahf
inc
lret
lock
psubb
pop
shll
rclb
jg
jns
fcmovb
adc
ror
into
cmp
sub
ficoml
mov
jecxz
sahf
cs
jp
sub
pop
inc
xor
stos
pusha
adc
or
cmp
add
inc
movsl
inc
jmp
or
sahf
or
dec
push
orb
add
in
sbb
push
addl
cmp
icebp
fstl
push
out
jno
int
lods
xchg
enter
std
outsl
xchg
mov
sbb
dec
dec
cmp
ret
sub
stos
pop
outsl
add
mov
add
adc
xchg
inc
movsl
push
or
imul
jle
addr16
and
mov
std
ja
inc
xchg
inc
rol
push
xor
aad
lds
xor
pushf
dec
decl
xchg
xor
repz
sub
ficoml
icebp
stos
pop
push
fcomps
in
push
jecxz
or
shl
scas
and
pop
imul
push
fwait
and
lret
jae
outsl
mov
adc
aas
mov
dec
pop
dec
cmp
inc
fdivrs
mov
xor
jmp
std
icebp
and
stos
sahf
cmp
mov
push
ret
pop
xlat
aas
push
xlat
icebp
xchg
adc
mov
lcall
pushf
rcrb
sbb
cmp
std
jno
cmc
pushl
add
or
xor
inc
xchg
sbb
cmpsb
out
fs
repz
insl
lea
push
sub
adcb
mov
mov
jae
daa
cmpsl
adc
jnp
dec
lcall
jae
enter
cli
add
pop
pop
test
stos
nop
imul
bound
pusha
fdivl
sub
pop
movsb
dec
mov
imul
mov
into
mov
jle
dec
cli
insb
fcomi
lods
imul
xor
lret
mov
ficoml
add
or
out
in
mov
shl
pop
iret
test
push
mov
ja
andb
push
cmpb
add
shlb
lret
test
jo
test
dec
push
mul
repz
jmp
jmp
rcrl
mov
pop
roll
inc
add
bound
xchg
sbb
and
mov
cmp
ja
mov
lea
adc
arpl
dec
xorb
loope
mov
sbb
stos
jg
test
sub
bound
cmp
sbb
jnp
mov
imul
in
jmp
rcrb
test
dec
pop
or
cmpsb
pop
jmp
movsb
testb
ja
or
lock
xchg
mov
out
jp
loopne
test
or
xor
xchg
xor
sub
ss
in
and
stos
mov
cmpsb
dec
mov
and
cltd
mov
popf
ljmp
mov
fidivrs
mov
mov
test
mov
dec
lock
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
lods
xchg
dec
adc
mov
adc
outsl
mov
sahf
push
pop
push
enter
int
fsubrl
push
mov
pop
mov
dec
std
ret
loop
add
jns
lds
cs
push
sbb
pop
jecxz
das
mov
jmp
inc
cmp
add
loope
sub
or
out
cmp
scas
adc
mov
sub
mov
push
jg
bnd
rcll
dec
inc
into
jmp
sbb
mov
jg
ja
add
sbb
push
int3
xor
and
test
sbb
mov
clc
andb
daa
dec
inc
xchg
jle
leave
imul
add
pop
in
std
imul
fxch
dec
movsb
shlb
aas
cs
add
sbb
loopne
int3
test
sbbl
adc
pop
pop
daa
mov
pop
and
and
push
dec
push
cmpsl
pop
sub
mov
testl
or
stos
in
lds
jne
fwait
inc
fiaddl
inc
test
vpsadbw
into
mov
popf
mov
xchg
xchg
pop
ja
push
jo
jae
repz
cli
out
out
clc
std
dec
mov
mov
inc
fidivs
inc
cmpsl
add
adc
push
scas
mov
mov
or
or
push
cmpsl
lret
inc
test
mul
mul
xchg
dec
or
mov
mov
aam
outsl
xor
or
push
sub
lods
fiadds
in
add
fcmovnu
pop
push
cmp
ret
xchg
shrl
push
cld
and
pop
mov
mov
popa
pop
es
or
and
mov
pop
dec
mov
aas
mov
repz
popa
push
fldenv
push
loopne
loope
xchg
outsb
inc
sbb
and
inc
es
ror
add
and
ret
int
cmp
inc
sub
jno
sub
repz
loop
sub
loope
lock
and
lahf
push
mov
test
ret
enter
push
imul
loopne
lahf
fnstenv
sbb
ds
sbb
jecxz
lods
lret
mov
xchg
sub
imul
xchg
xchg
push
cmc
mov
adc
fs
add
sahf
and
push
and
fmulp
int
rorb
pop
ds
es
lods
mov
pop
nop
adcb
push
pop
aad
mov
daa
inc
sub
stos
shlb
inc
xchg
pop
dec
mov
fsubs
negl
push
sbb
pop
imul
cmp
pusha
jb
cmp
mov
sub
inc
add
cmp
xor
sub
xor
aad
or
iret
mov
in
xor
fidivrs
fptan
xchg
ja
xor
cmpsl
pop
and
mov
sbb
mov
jg
cmp
iret
pushf
popf
movsl
test
movsl
cmp
lcall
aas
push
adc
out
rorb
pop
or
push
add
lea
jp
iret
movsb
mov
test
fdivr
jge
pop
nop
fs
scas
ja
mov
sub
ret
cmpsb
in
cli
inc
fdivp
roll
adc
mov
xchg
enter
imul
test
adc
cmp
or
mov
inc
out
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
xor
inc
adc
mov
adc
pusha
mov
aam
inc
jmp
lcall
out
movsb
sbb
das
pop
adc
add
ds
mov
sbb
inc
movsb
pop
lret
std
mov
pop
add
pop
cwtl
mov
pushf
inc
mov
jae
xchg
aaa
out
and
jns
mov
sub
and
sbb
jl
or
jns
mov
or
inc
xchg
or
xchg
push
jne
dec
fdivl
mov
arpl
lds
xor
jle
sti
lock
jmp
cmp
push
dec
mov
or
popl
sub
mov
adc
out
sbbl
adc
pusha
test
dec
or
dec
loop
lcall
movsl
and
mov
adc
fcoms
xor
adc
jl
or
fildll
push
xchg
and
or
dec
mov
repz
mov
js
xchg
cmp
repz
sbb
cld
xorl
bndldx
push
fildll
nop
rcl
inc
es
push
gs
push
mov
jp
jp
lcall
jle
mov
sbb
jno
dec
xor
lods
jbe
or
push
mov
std
test
xor
bound
bound
push
psubusb
pop
adc
std
sbb
cmp
jg
xchg
negb
pop
gs
cmpsl
aam
push
xor
jnp
sub
loop
outsl
jmp
inc
rclb
test
xor
ds
stos
sbb
or
lahf
pop
lods
loope
lcall
mov
xlat
and
or
add
sbbl
xchg
push
jecxz
cld
fidivs
sbb
out
cmp
xchg
dec
mov
dec
cmp
xor
inc
xor
mov
adc
outsl
pushf
fwait
pop
pop
nop
jmp
stos
cmp
je
mov
es
imul
gs
bound
popf
fldcw
mov
xchg
adc
bound
mov
loopne
mov
lea
fstps
fldenv
inc
mov
test
or
stc
mov
or
clc
xchg
cs
ret
sub
lock
jg
sbb
push
inc
sbb
jo
lcall
pusha
stos
int
test
jnp
mov
and
mov
add
das
stc
cli
outsb
adc
jecxz
cmpsl
mov
jne
or
imul
icebp
jne
sub
mov
xchg
call
addl
mov
cmpsb
sbb
stos
inc
pop
fbstp
jl
push
jbe
js
aam
inc
sti
mov
roll
mov
int
addb
cli
out
push
daa
adc
fcompl
outsl
jnp
push
pop
outsb
in
pop
push
pop
or
cmp
sar
adc
mov
or
mov
mov
fmuls
ret
xor
xchg
outsb
xor
test
pop
jmp
dec
jb
data16
inc
sub
cmp
stos
call
adc
int
mov
int
iret
xchg
jle
cld
nop
out
lcall
mov
lret
cmpb
fwait
jnp
in
lods
pop
pop
repz
insb
push
es
int3
fwait
and
subl
aaa
into
mov
mov
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
lods
aad
adc
mov
adc
pop
xchg
xor
lods
fisttpl
js
repnz
mov
addr16
stc
mov
sahf
mov
mov
cltd
xor
inc
or
mov
xor
sbb
cli
mov
mov
sub
pushf
inc
cli
hlt
or
testl
jp
ret
in
adc
outsl
repz
in
icebp
lock
ret
jge
and
mov
fcompl
cmc
mov
or
aad
mull
icebp
enter
aam
aaa
and
fnstcw
cmc
cmp
cltd
push
addr16
call
movsl
mov
fstp
jne
iret
scas
lret
cmp
jecxz
nop
xor
pop
jns
loop
test
xor
out
sub
movsl
sbb
bound
scas
pop
xchg
rclb
cmpsl
and
aas
adc
aaa
rol
pop
ljmp
add
push
dec
and
mov
dec
adc
add
js
sbb
or
in
xchg
ss
ficomps
sub
pop
jbe
add
push
cmpsb
jmp
sub
push
cmp
jne
pusha
jmp
sub
mov
inc
outsl
mov
leave
test
mov
out
lcall
adc
and
shlb
jl
mov
shlb
xchg
mov
lret
or
push
frstor
cltd
icebp
sbb
ja
and
inc
stc
xor
aam
test
inc
stos
pop
lret
cld
into
jle
inc
subb
adc
cmpsl
dec
mov
cltd
scas
xor
out
outsl
pop
cmp
push
mov
lea
or
push
mov
adc
jo
jmp
lods
sub
mov
push
insb
lcall
test
movsl
push
imul
xor
mov
adc
stc
sti
pop
sub
repnz
cld
sti
add
loope
xchg
mov
sbbb
jne
xor
adc
pusha
mov
add
mov
pop
add
sbb
loop
xchg
shll
cmpsl
daa
je
cmpl
inc
mov
adc
sub
jne
xorl
cmpsb
push
outsb
dec
aam
lcall
adc
and
ficoml
xor
filds
imul
adc
inc
ljmp
js
inc
cmp
bound
and
shll
lahf
push
push
or
mov
gs
mov
xor
popf
push
repnz
stc
addb
scas
jbe
fwait
out
loope
mov
mov
out
cmpb
in
or
push
or
cs
test
cld
add
fwait
cmp
ljmp
or
cmp
out
jbe
mov
sub
xchg
stc
je
jmp
dec
movsb
dec
add
pop
fimull
mov
sbb
xor
sbb
loop
xchg
hlt
inc
jnp
pusha
in
add
jmp
push
popfw
sbb
mov
mov
std
sbb
icebp
or
mov
sbb
pushf
or
insl
out
sub
fisubrs
jl
clc
and
pop
loopne
cli
lret
jbe
lahf
dec
pop
dec
rolb
ret
imul
sub
lea
aas
jnp
adc
insl
ret
addr16
idivb
mov
bound
jmp
cmp
shrb
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
mov
push
push
adc
mov
adc
jb
sbb
movsl
repnz
iret
shl
je
xor
sub
cmp
jne
jb
cmpsl
out
roll
xchg
xchg
push
cmp
leave
jo
das
push
jp
pop
call
and
add
jno
clc
adc
mov
insl
cmp
sub
mov
jecxz
clc
and
daa
mov
xor
repz
pop
ljmp
int
nop
out
hlt
idivb
jecxz
fmul
cmp
add
loope
cmpsl
mov
insl
sbb
rolb
push
clc
cwtl
push
repnz
repz
idiv
loopne
mov
xlat
shll
mov
lds
xchg
lock
dec
pop
adc
mov
jae
arpl
in
jns
xchg
sbb
fs
jge
cmc
xor
sbb
ror
out
jge
lret
inc
add
pusha
dec
jp
push
adc
xchg
into
jns
jnp
cs
mov
and
fistpl
or
push
add
xchg
xchg
sub
int3
jne
mov
shl
mov
loopne
mov
jp
xchg
stos
sub
pushf
add
imul
outsb
dec
nop
or
lods
inc
mov
or
out
repnz
icebp
js
mov
orl
adc
cmp
popa
mov
pop
sbb
icebp
popa
testl
not
mov
pop
inc
push
adc
and
sbbb
mov
or
fisubs
mov
ss
xchg
dec
sub
mov
fdivrs
jp
cmc
xchg
xchg
xorb
mov
lods
adc
not
sbbb
in
lret
in
jmp
out
dec
sbb
ret
fdivp
es
cltd
cltd
in
push
adc
into
mov
dec
stc
je,pt
sub
das
jae
mov
insl
rolb
imul
and
cmp
jns
pop
sub
jecxz
fistl
scas
xor
mov
jo
out
mov
out
adc
jle
or
cmpsl
data16
stc
test
sub
jo
adc
add
scas
ss
outsl
mov
pop
xchg
int
popf
mov
push
data16
int
iret
lahf
cli
sub
in
jmp
std
insl
and
inc
insb
rolb
xor
ficoms
sahf
push
outsl
in
push
out
mov
mov
lea
dec
es
scas
popa
adc
icebp
sbb
lahf
repz
test
sub
dec
sbb
mov
mov
cmc
lods
push
or
shl
call
hlt
js
sbb
add
imul
test
add
xchg
stos
rolb
imul
jns
xchg
jno
and
repz
jmp
add
or
inc
sbb
ss
push
leave
jns
pop
ficomps
inc
imul
mov
or
decl
jns
adc
add
sbb
je
jnp
push
dec
or
mov
jge
adc
xchg
sti
jg
dec
jl
lock
test
ret
test
pop
test
sarl
mov
jge
push
and
dec
and
cmovg
xchg
and
rcll
aaa
nop
lret
add
nop
add
xor
dec
test
mov
pop
pusha
mov
ret
pop
add
repz
pop
jl
hlt
movb
xchg
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
mov
adc
pusha
in
inc
ja
lea
mov
xor
or
dec
inc
push
pop
mov
mov
nop
jo
add
mov
dec
pop
test
fsubrs
hlt
pop
fldt
iret
fdiv
ret
cmp
sub
test
add
call
mov
push
arpl
in
imul
add
xchg
push
cmpb
cwtl
in
push
or
movsb
stos
scas
push
mov
add
lods
or
jle
lahf
rcrb
mov
xchg
shlb
pushf
enter
pop
aaa
into
inc
push
fs
jg
adc
aas
notl
mov
adc
xchg
in
ds
xchg
push
adc
sbb
pop
mov
jo
jmp
ss
mov
out
cltd
and
pop
jbe
frstor
adc
repnz
mov
and
jb
repz
jae
jbe
sbb
cmp
pop
jp
ret
or
jmp
push
xchg
lods
push
mov
outsl
adc
sbb
pop
jge
jmp
xchg
cmp
fwait
push
cwtl
mov
mov
and
adc
insl
xor
mov
out
movl
pusha
cltd
push
cmpsl
pop
sti
sar
sbb
jbe
mov
int
mov
int
imul
cmp
mov
mov
pop
popl
jae
stos
into
lds
inc
mov
scas
filds
xchg
and
and
hlt
xchg
pop
sub
sarl
icebp
test
mov
out
sub
fidivl
faddl
push
dec
stc
lret
cwtl
adc
test
mov
xchg
imul
pop
add
mov
inc
mov
inc
mov
xchg
add
push
xchg
mov
pop
mov
mov
mov
adc
sbb
or
jle
gs
out
sub
and
testb
inc
data16
cld
cmpl
stos
ss
xchg
fldl
outsb
push
iret
popa
adc
mov
fldcw
mov
ss
adc
push
lock
adc
xor
mov
mov
lcall
gs
mov
pop
cmp
in
push
push
fsubrl
pop
pop
sbb
cmpsb
pop
pop
pop
inc
daa
fimuls
insb
aas
sub
mov
pop
jmp
add
jne
std
ror
mov
outsb
adc
mov
das
jbe
jns
cmp
sub
xchg
cmp
jb
call
or
xchg
pop
mov
out
pop
outsb
mov
cmp
repz
adc
mov
xchg
jge
lds
mov
fisubs
cmpsb
mov
push
jle
fmull
sub
lds
push
cmpl
and
jno
scas
xor
mov
pop
cwtl
lock
and
outsb
test
cmp
fcmovnb
lcall
scas
xor
push
and
icebp
adc
inc
leave
faddl
pop
cmp
dec
int3
int
sub
sahf
repz
rcll
insl
mov
push
pusha
mov
das
arpl
inc
xchg
enter
ljmp
in
in
jecxz
jo
push
inc
popl
xchg
fcmovne
push
push
dec
adc
mov
mov
xchg
xchg
sbb
iret
lods
outsb
mov
mov
in
mov
int3
dec
popa
int3
scas
jb
sbb
std
jp
lret
dec
push
mov
cld
negw
ja
lods
mov
cmp
data16
icebp
jbe
in
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
iret
into
dec
mov
mov
adc
call
xor
mov
cltd
sbb
xchg
jns
loopne
adc
outsl
sbb
loopne
push
push
sbb
movl
test
incb
cmpsb
loopne
cmpsl
nop
sub
aaa
pusha
pop
mov
pop
dec
jne
adc
dec
mov
loope
out
insb
cmp
rorb
and
sbb
jno
ret
lret
lret
lods
popw
push
mov
fstpt
mov
and
xchg
pop
mov
jp
stc
fists
pushf
lret
out
push
out
xchg
fucom
ret
outsb
sub
or
xlat
inc
cmp
inc
jmp
loope
aad
add
loop
shrb
jg
add
pushf
mov
out
cltd
jne
addr16
rcrl
and
hlt
outsl
push
scas
mov
sbb
sbb
cmp
aam
stc
jb
stc
ljmp
inc
push
pop
add
sahf
and
sbb
or
loope
or
sbb
in
pop
loop
in
int3
push
ljmp
lret
inc
pusha
adcl
pushf
jp
and
cmc
sti
push
adc
mov
dec
xor
mov
mov
imul
nop
cli
mov
iret
adc
xlat
gs
jge
lds
scas
data16
pop
jecxz
cld
repnz
paddw
cmpl
ja
push
mov
inc
ja
mov
jmp
addr16
fnstsw
pop
sbb
mov
out
xor
shr
repz
jecxz
jl
sub
dec
lahf
icebp
cmp
and
and
pop
mov
sub
je
sub
xchg
lds
loopne
or
stos
test
cwtl
and
sarl
filds
xchg
mov
sbb
pop
add
outsl
enter
out
jmp
mov
sbb
lods
movsl
add
xchg
fsubrs
sbb
fsubl
dec
repz
ret
adc
sub
adc
repnz
xor
pop
mov
push
dec
add
cmp
cmpsb
pop
jno
dec
jl
inc
rorb
arpl
daa
call
mov
mov
pop
out
xor
sbb
mov
shll
cmp
iret
push
pop
add
adc
mov
jae
add
movsb
testl
stc
aad
sub
dec
out
dec
ret
rcrl
xchg
ret
and
out
dec
ljmp
xor
push
xor
cld
inc
lcall
xchg
cwtl
std
int
adc
push
mov
sahf
adc
pop
or
pop
and
xchg
fwait
jno
jmp
jns
xchg
mov
fcmovu
or
cmp
in
clc
xlat
push
cmp
and
pop
js
repz
outsb
enter
push
or
in
cmc
cmp
xchg
adc
cmp
pop
iret
adc
imul
loopne
mov
or
dec
cmp
mov
sub
add
imul
pop
xchg
out
add
push
xor
stos
mov
pop
cmp
cwtl
cmp
dec
xchg
cmc
lods
dec
cli
and
lds
pop
jl
add
out
and
mov
mov
push
fs
jecxz
jns
je
stc
pop
sbb
mov
pop
rolb
test
push
addr16
std
push
lods
cwtl
cmp
je
cmc
mov
mov
push
adc
push
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
in
xor
mov
adc
pop
xchg
movsb
sbb
cmp
pop
jl
ljmp
lea
ret
cmp
mov
ja
xchg
adc
mov
jmp
scas
sbb
pop
add
pop
jmp
inc
adc
jecxz
cmp
mov
out
pop
aaa
pop
filds
and
inc
lock
int
jbe
xlat
rorb
sub
insb
mov
jnp
mov
jb
mov
or
dec
add
mov
sbb
or
mov
xor
std
leave
je
aad
push
cmp
fsqrt
lret
push
jo
int3
inc
xchg
mov
pop
scas
lcall
push
mov
call
cld
lcall
adc
xchg
ja
dec
icebp
mov
ds
xor
imul
rolb
xchg
mov
or
mov
mov
cmp
cld
pop
rorb
fldcw
popf
bound
insb
add
loope
aas
lods
mov
mov
dec
out
mov
lahf
or
out
push
inc
xor
ja
jns
inc
sbb
enter
cmc
push
xchg
mov
push
pop
pop
fistl
ds
cwtl
mov
jge
or
clc
loope
push
mov
mov
cmc
je
ljmp
or
cmp
sub
mov
addr16
add
push
imul
leave
repz
imul
mov
daa
add
cmc
insb
hlt
push
movsb
and
mov
mov
xlat
icebp
jns
bound
pop
and
pop
or
mov
xlat
movsl
lods
dec
mov
push
inc
mov
cmpsb
cmc
and
sub
hlt
xchg
imul
mov
outsb
popl
and
pusha
cmpsl
leave
jp
push
imul
jnp
sahf
mov
adc
mov
mov
and
xlat
pop
cmp
dec
mov
mov
lods
cmp
fucom
loopne
xlat
sbb
data16
adc
mov
xchg
lcall
int
xor
push
adc
es
dec
push
sub
out
or
dec
mov
jecxz
mov
mov
push
scas
push
pop
inc
or
mulps
movaps
seta
les
xor
jle
pop
ret
enter
cmp
or
fcoms
data16
sub
cmc
mov
popf
xchg
test
adc
in
repz
test
dec
sub
dec
test
jmp
adc
push
adc
xlat
popf
pusha
sbb
lods
add
adc
aas
fisubrs
and
sub
imul
sti
inc
mov
push
pop
scas
push
ret
nop
mov
pop
adc
pop
inc
out
out
cmp
cwtl
loopne
insl
jmp
jbe
lods
mov
xchg
sbb
mov
xchg
xchg
call
jbe
or
push
xchg
xchg
xchg
add
jp
popa
lret
mov
mov
add
hlt
sub
mov
cmc
cmpl
inc
mov
sub
in
push
in
push
sbb
clc
push
mov
push
clc
scas
dec
xchg
fwait
mov
push
xor
aad
mov
int
subb
pop
sbb
xor
out
cltd
cld
pop
pushl
out
sarl
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
lret
jnp
loope
mov
pop
push
sahf
jmp
xchg
jp
in
mov
and
ficompl
test
dec
adc
cmp
inc
cmp
jl
mov
call
mov
lea
jne
icebp
leave
inc
mov
cs
and
or
aad
mov
push
fwait
pop
loop
js
sbb
imul
push
ds
orb
scas
dec
push
or
clc
cmp
ss
enter
sub
imul
and
pop
mov
ret
inc
aaa
adc
ljmp
iret
pusha
adc
repnz
out
adc
add
cld
push
sbb
adc
js
jmp
loope
fldl2e
ljmp
ss
mov
out
insb
dec
xchg
shll
int
xor
lods
pop
in
aaa
push
add
cmp
push
std
pop
sub
cmp
xchg
push
mov
syscall
fsubrp
scas
jns
xchg
sub
mov
jnp
fildll
mov
xor
into
adc
and
popf
inc
sbb
icebp
push
xor
cmp
mov
xlat
inc
dec
cmp
push
ljmp
filds
adc
insl
pop
lahf
sbb
pushf
pop
mov
imul
mov
adc
in
pop
mov
inc
pop
es
mov
ljmp
inc
inc
fwait
pop
cwtl
or
adc
movsl
mov
xor
and
sbb
fsts
test
scas
stos
push
cmpsb
jecxz
out
jbe
mov
xchg
pop
int3
jg
fwait
mov
jg
or
into
aam
std
jge
mov
sub
lcall
insb
add
push
mov
mov
das
pop
mov
add
and
inc
xchg
insl
cmpsl
fcmovu
sbb
in
ss
cli
cmp
mov
sbbl
adc
mov
and
repz
pushw
xlat
mov
or
and
aas
leave
icebp
lock
push
push
mov
movsb
cmp
cmp
out
jbe
imul
aad
mov
into
mov
idivl
imul
fisubrs
or
out
inc
pop
in
mov
insl
add
xor
sar
jp
add
cmp
xchg
fdivs
stos
jecxz
inc
loop
lcall
jmp
pusha
sub
mov
sbb
push
pop
push
aam
cmp
dec
mov
xorb
inc
mov
and
sub
cmp
adc
mov
stc
repnz
pop
lods
xchg
cmp
shrb
jo
dec
dec
inc
int3
iret
daa
or
scas
sbb
outsb
mov
imul
xor
sub
out
xchg
xor
inc
repnz
movsl
test
ljmp
or
jo
arpl
test
jge,pn
popf
cmc
leave
mov
or
xor
lock
lods
mov
sbb
clc
or
popf
jge
movsl
lret
inc
stos
pop
out
cmpsb
in
sub
ss
dec
stos
fstpl
lcall
push
repz
out
lds
push
jecxz
fsubl
jno
xchg
jmp
cmp
adc
js
sbb
ja
shrl
inc
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
xor
inc
stos
jae
adc
mov
adc
pop
leave
jb
cmpsb
jno
sbb
notl
mov
adc
sahf
arpl
fisubs
mov
jbe
stc
mov
inc
mov
or
xchg
jp
lret
add
mov
xchg
or
aad
push
xchg
xchg
inc
lock
dec
enter
add
subb
sub
push
or
in
dec
inc
xor
pushf
mov
mov
sbb
int3
jecxz
adc
ljmp
rorb
cmp
ret
pop
dec
cli
sahf
push
fwait
lahf
mov
into
xchg
inc
and
inc
mov
mov
sub
or
dec
sbb
pop
inc
imul
xorb
mov
mov
jnp
neg
ja
sarb
or
or
shl
ja
insb
adc
xchg
sub
call
pop
push
pop
inc
dec
dec
cwtl
sub
or
xchg
jns
adc
sub
movl
out
hlt
adc
jge
jnp
daa
and
push
pop
mov
xchg
pop
insl
sbb
or
jp
repnz
jnp
test
pop
in
in
inc
xchg
call
sti
xchg
popa
mov
ljmp
xor
enter
xlat
lahf
cmp
mov
rolb
aad
jmp
arpl
aaa
in
mov
in
mov
divl
and
mov
stos
in
mov
out
add
mov
test
pop
push
xchg
adc
and
movsb
xlat
xor
es
fdivr
gs
push
xchg
lcall
divb
sbb
shlb
gs
ds
or
fs
lahf
mov
fdivrp
cltd
or
daa
add
xchg
div
jecxz
lods
push
repz
push
call
fwait
rcr
cmp
lods
fisttpll
fcomps
sbb
push
xlat
xchg
pop
cwtl
cmpb
or
repz
out
lahf
xor
inc
add
cmpl
test
jb
mov
jne
xor
lods
pop
jle
repnz
mov
add
aaa
mov
mov
sub
in
sub
in
enter
repnz
cli
cmpsl
mov
cmc
nop
jg
mov
or
adc
mov
sub
out
adc
mov
inc
mov
mov
inc
jecxz
jb
xchg
adc
lret
js
test
rorb
scas
repz
fwait
push
push
ret
stos
outsb
mov
popa
test
or
fildll
xchg
mov
add
xchg
out
cmp
mov
inc
insl
add
mov
dec
mov
mov
mov
stc
flds
jo
push
pop
insl
pop
ljmp
mov
dec
or
sbb
sub
dec
lcall
cwtl
adc
sbb
rclb
sub
xchg
inc
inc
fdivr
mov
mov
sub
xor
icebp
xchg
mov
xchg
or
or
mov
fwait
jl
or
inc
fcmovnu
push
shlb
jmp
imul
iret
cmp
cmp
pop
cmc
adc
sbb
fstl
sbb
cmp
sub
jo
push
mov
test
iret
mov
adc
mov
sahf
xchg
icebp
lods
hlt
int3
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
std
mov
adc
mov
ret
fsts
pop
add
ret
hlt
adc
in
jl
addb
lods
jg
adc
push
push
xor
and
push
add
stos
int3
hlt
dec
mov
mov
push
jns
add
mov
clc
daa
clc
rorb
arpl
sub
pusha
iret
pop
mov
xor
mov
adc
jg
push
negl
fimuls
loop
jbe
mov
aaa
and
insb
loope
xlat
sub
into
lods
sbb
cs
push
stc
cmc
mov
inc
cmp
bound
add
fdivrs
sub
into
push
js
xor
out
mov
adc
pop
fidivrs
mov
sub
call
lret
scas
lea
dec
xor
fdivs
dec
loope
aam
loope
xchg
add
cmpsb
push
mov
dec
adcb
mov
mov
pushf
sub
and
mov
dec
sarl
inc
adc
dec
xor
adc
cmp
fcomi
cwtl
and
pop
popa
jp
push
xchg
or
sahf
jbe
scas
test
imul
int
pop
adc
ss
dec
inc
lret
adc
out
outsb
arpl
aas
jnp
ret
push
xlat
je
and
mov
and
sub
inc
mov
xchg
loope
mov
stos
outsl
mov
ficoml
push
and
repnz
int
clc
in
or
or
add
pop
xor
pop
sub
mov
nop
xor
sbb
jo
inc
cmp
jne
mov
test
pushf
xchg
dec
fcomp
inc
lock
inc
loopne
fs
jb
movsb
or
jle
cmpsb
ss
je
aad
mov
cmpsb
bound
adc
xor
mov
adc
jle
xor
sbb
notl
xorl
icebp
nop
arpl
cmc
inc
mov
mulps
rolb
push
out
aaa
fs
mov
push
js
mov
inc
sbb
mov
mov
lret
and
je
repz
push
fprem1
sub
mov
mov
in
dec
je
cld
mov
push
cmp
push
mov
mov
inc
loop
lret
push
out
les
jge
pop
jno
sahf
or
mov
xlat
inc
cmpsl
and
jge
xchg
loopne
aaa
clc
out
inc
mov
mov
nop
stos
adc
inc
or
xchg
and
stos
sbbl
test
or
mov
push
push
pop
pop
jae
mov
jge
and
ljmp
test
pop
jns
dec
sub
and
sarl
pop
aaa
cli
xor
mov
sti
xchg
inc
lret
cltd
push
shrb
dec
andl
dec
jmp
outsl
sub
dec
fimuls
inc
mov
outsb
pusha
mov
fiaddl
add
cmpsb
push
imul
mov
and
push
ret
data16
inc
mov
addr16
adc
pop
popf
xor
ret
mov
lea
jno
fldt
aas
xlat
and
mov
sbb
lods
xchg
push
lds
and
add
enter
je
cmc
adc
mov
mov
insb
mov
repnz
sbb
fisttps
test
adc
xchg
add
movsl
fmulp
sbb
xchg
mov
jl
andb
xorb
jb
dec
mov
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
stos
test
adc
mov
adc
inc
adc
gs
fadds
cmc
sbb
adc
stos
and
out
adc
adcl
outsb
or
inc
sbb
jl
test
mov
push
adc
or
push
lock
daa
dec
popf
in
pop
mov
out
pusha
pushf
lods
and
ss
imul
push
shrb
mov
sbb
mov
adc
cmc
jl
pop
add
jno
shl
sbb
aaa
test
out
push
sub
and
mov
dec
roll
in
cmp
sub
push
xor
mov
pop
fwait
push
lds
imul
lods
into
jmp
cli
fadds
xor
leave
dec
or
fidivs
cmp
into
inc
lock
inc
imul
clc
loopne
sub
mov
inc
add
inc
pop
shlb
inc
inc
leave
sbbb
sub
jnp
sub
out
sub
xchg
movsb
mov
int3
push
lods
jge
pop
jae
mov
pop
das
mov
ror
push
subl
pop
mov
iret
or
pop
hlt
addb
lret
and
xchg
mov
dec
mov
test
mov
nop
repnz
push
sar
neg
or
cwtl
lea
add
jmp
cmpsb
mov
push
rorl
nop
jnp
push
imul
int3
push
cmpsb
push
in
int3
in
shlb
dec
inc
adc
jecxz
scas
or
add
mov
nop
push
jnp
nop
add
fsubrs
daa
push
call
repz
push
jmp
and
lea
jmp
cli
lea
inc
leave
ds
fidivl
mov
arpl
and
push
lods
pop
es
add
js
shl
jge
and
cwtl
les
cmp
push
cmp
dec
mov
insb
in
xorl
test
inc
push
pop
fcoms
leave
mov
insb
inc
and
scas
push
cmp
fincstp
imul
sub
addb
testl
shll
and
aam
data16
rolb
ficoms
cmp
xchg
xchg
push
in
cmpsb
fidivl
adc
mov
add
xchg
adc
stos
cmpsb
mov
mov
jecxz
mov
mov
fs
popf
or
cmpsb
jmp
cmp
sub
push
xchg
mov
mov
pop
jae
inc
test
and
lcall
scas
pop
sub
pusha
and
pop
xchg
sbb
loopne
pop
loop
insl
popf
mov
in
leave
lea
jae
lahf
repz
cmp
les
ljmp
stos
fidivl
inc
sub
fsubs
and
cs
inc
mov
repz
ret
dec
clc
adc
mov
jecxz
jl
loopne
ss
movsl
adcb
push
js
test
aas
les
clc
out
testb
bnd
cmp
xor
sti
pop
lcall
cmp
pop
loop
movsb
sbb
xor
cwtl
mov
jmp
push
pop
pushf
inc
push
inc
lds
sub
shll
jmp
and
fucom
mov
outsb
sarl
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
dec
xorb
adc
stos
add
jge
mov
jae
test
sbb
iret
xor
or
adc
xor
aaa
loope
lods
mov
imul
sub
and
pop
sbb
cwtl
jp
shlb
xchg
pop
out
add
cmp
push
inc
pop
pop
hlt
or
aad
and
into
add
push
popf
pop
pop
cmpl
mov
jo
push
movl
sub
scas
and
sbb
inc
incb
lahf
xlat
fsubrs
test
sub
stc
adcw
pop
add
xchg
or
js
jbe
xchg
mov
mov
mov
sbb
cld
rorb
and
xchg
push
mov
cmpsb
jmp
pop
cmp
int3
int
cmc
ds
addl
or
pop
movsb
push
shlb
mov
pop
cmp
sarb
add
sub
mov
insb
outsb
ljmp
leave
outsb
movsb
mov
mov
and
mov
in
inc
in
rclb
lahf
push
mov
lcall
fsubrl
cli
or
into
jp
popa
jp
add
push
xchg
mov
cmpl
lret
sub
lods
and
add
or
fiadds
arpl
cmp
int
mov
outsl
aam
and
xor
xchg
mov
inc
jp
or
dec
and
push
cmp
push
jp
push
mov
mov
inc
movsb
fisttpll
outsb
lods
inc
push
xor
fistl
sti
push
push
dec
ja
clc
call
ret
cld
cmp
jge
mov
fistl
insb
std
andl
lcall
arpl
loopne
adc
mov
clc
or
lods
mov
fdivrs
scas
push
cmpl
cmp
mov
adc
hlt
loopne
jnp
scas
add
in
loope
jns
and
sub
mov
sbb
and
fwait
ret
cmpsb
jb
fbstp
sti
in
jg
jl
xor
inc
lock
aaa
sahf
pushf
jle
repnz
arpl
xor
out
xchg
inc
shrb
mov
push
mov
inc
mov
xchg
mov
in
insl
rcr
ret
mov
jb,pn
mov
pop
shll
pop
jbe
dec
push
inc
add
mov
ja
sub
js
fmuls
test
mov
jae
in
adc
cli
pop
jb
or
push
adc
test
sub
insl
pop
inc
das
pop
in
mov
stos
repz
inc
inc
jge
rorb
xchg
sti
daa
test
mov
mov
movsb
sbb
mov
adc
repnz
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
jnp
idivl
lock
adc
adc
sub
xor
jnp
add
shrl
ret
enter
idiv
nop
inc
xor
pop
and
add
mov
and
add
push
leave
outsl
mov
test
jne
add
in
cmp
jg
push
adc
lret
dec
mov
mov
dec
ss
adc
push
and
or
and
jne
scas
stos
daa
out
pop
cli
jp
loop
aaa
xchg
push
test
aas
ror
cmp
push
hlt
and
leave
pop
scas
xchg
pop
in
xor
mov
ljmp
xchg
dec
jns
push
jp
dec
jl
inc
mov
rorb
cmp
and
stos
jae
mov
jg
cmp
out
jne
push
lods
shl
cmp
push
ss
into
mov
adc
subb
jbe
fists
fwait
mov
movntq
dec
rcrb
xchg
sahf
js
dec
shlb
push
loopne
test
ljmp
jecxz
mov
push
ds
add
mov
outsb
mov
or
mov
daa
hlt
movsb
cmc
sub
and
lea
gs
or
out
jb
mov
mov
jge
inc
popa
sub
xchg
gs
jle
add
mov
mov
sub
repnz
in
popf
jb
div
mov
cmp
shlb
aas
daa
std
mov
sbb
push
or
arpl
add
mov
mov
add
and
sbb
sbb
xor
outsl
or
iret
cmp
xlat
movsb
jo
mov
negb
jecxz
mov
jp
rep
ffree
inc
arpl
cltd
rol
out
fdivrp
xor
out
inc
imul
jle
cli
mov
testl
arpl
add
jo
mov
sub
mov
sbb
dec
inc
aam
pop
test
rorl
jne
mov
popa
arpl
call
lret
inc
sub
mov
mov
adcb
add
insb
sbb
jmp
sbb
sbb
and
adc
jo
push
xchg
inc
fnstenv
dec
fildl
cmpsb
pop
rolb
mov
xor
lret
jno
adc
pusha
mov
adc
mov
leave
pop
sbb
mov
test
push
mov
inc
jl
sbb
push
sbb
sub
arpl
mov
push
jo
sub
repnz
imul
sbb
enter
mov
ljmp
mov
add
arpl
shll
sub
fstl
loop
dec
push
pop
sbb
xchg
cmp
ss
mov
rcrb
mov
mov
push
stos
dec
ret
cmpsb
xlat
xor
stos
aam
pop
outsl
incb
call
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
pop
xchg
js
out
adc
adc
adc
push
and
mul
or
aad
test
pushf
pushf
inc
push
xchg
cmp
add
jnp
xchg
or
jge
ss
stos
sub
mov
inc
xor
jnp
fcmove
iret
push
xchg
jle
pop
adc
mov
leave
inc
jb
pop
jb
jle
sub
cmpsb
sub
outsl
lock
mov
push
push
pop
ret
int
or
call
in
push
incb
jp
cwtl
insb
push
sahf
out
pusha
adcb
inc
push
and
push
outsb
sub
lods
jns
mov
lods
out
les
push
jbe
in
push
jecxz,pn
adc
cmp
add
loopne
jg
dec
cmp
mov
out
pushf
inc
sub
inc
mov
loope
jne
lret
cwtl
mov
adc
iret
sahf
add
mov
jne
mov
mov
sub
orb
repnz
xor
adc
neg
xor
sub
push
clc
push
push
mov
dec
fsubl
xor
mov
push
loopne
fisttps
shrl
hlt
cmpsl
mov
mov
nop
iret
pop
adc
push
test
push
adc
sbb
and
out
adc
rorb
scas
ds
enter
lods
aas
test
nop
and
ja
js
cmp
pop
jae
pop
cmp
test
xor
sub
cmp
mov
es
sub
lahf
aaa
push
les
sar
bound
push
je
sbb
push
inc
mov
inc
sarb
fcmovnb
pop
push
out
loop
dec
lock
aas
sbb
xchg
inc
sbb
das
test
mov
cmp
jge
insb
push
cli
or
out
or
pandn
adc
test
pop
xchg
lret
jecxz
cmc
or
stos
jno
in
mov
xor
addr16
into
and
adc
push
pop
xchg
imul
gs
clc
xchg
or
stc
dec
insb
aam
out
push
roll
pop
mov
push
xor
cmpsb
in
adcl
cld
imul
push
dec
fisubl
sub
sti
hlt
mov
in
adc
mov
aas
inc
dec
or
mov
mov
test
fucomp
jne
inc
xchg
adc
hlt
xchg
lods
icebp
mov
scas
xchg
insl
fbld
and
mov
adc
xchg
dec
dec
mov
inc
jnp
fidivrl
mov
ror
je
xor
xor
lret
push
ds
popa
inc
aam
inc
andl
stc
outsl
sub
mov
push
ds
shr
test
insl
imul
cmpl
test
cli
mov
lods
xchg
out
jg
data16
popf
adc
sbb
ljmp
mov
repnz
xchg
sub
push
xlat
int3
flds
push
mov
inc
lret
push
mov
xchg
ljmp
js
add
add
ret
nop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
xor
adc
adc
sub
sbb
xchg
jl
jnp
imul
jne
or
cld
mov
cmp
fwait
stc
arpl
dec
lock
aad
shll
pop
push
inc
jecxz
out
dec
test
and
andl
clc
add
sahf
int3
fs
and
and
ja
je
repz
xlat
in
bound
sub
repz
je
mov
xchg
imul
or
ja
add
aaa
hlt
mov
jb
pop
test
gs
pushl
stc
std
jb
push
ret
sbbl
je
gs
dec
andb
cli
cmc
fmull
daa
sbb
mov
mov
xchg
pop
mov
mov
dec
int3
mov
sub
jne
jl
dec
jnp
mov
mov
sub
repnz
enter
push
dec
and
icebp
mov
rorl
loopne
aas
sub
jl
gs
cmp
pop
fcmovnb
dec
movsb
enter
lock
ret
xchg
mov
test
loope
in
mov
cli
add
jg
mov
adc
sub
wbinvd
lds
int
iret
mov
inc
loop
cwtl
mov
aas
hlt
cmp
push
dec
sub
arpl
divb
lret
in
xor
sbb
inc
clc
icebp
pop
je
mov
shrb
adc
mov
gs
das
mov
inc
dec
jge
adc
or
and
sub
pop
out
ja
adc
ret
adcb
icebp
push
sub
fsub
cmc
inc
shrl
out
out
jecxz
inc
and
cmp
sub
xchg
aaa
in
sahf
dec
lret
push
push
cmp
push
xor
pop
or
mov
sub
out
jae
jecxz
sahf
fstl
stos
adc
ja
inc
lock
adcl
iret
inc
imul
adc
gs
shll
mov
fmull
leave
or
pop
mov
xchg
dec
dec
add
push
lock
sar
cmp
xchg
lret
mov
aam
stc
addr16
xchg
add
mov
sbb
jne
mov
ret
xlat
or
push
fldt
push
inc
or
cmp
cmp
aas
je
add
pop
and
cli
jle
xchg
push
test
repz
stos
ljmp
out
out
leave
flds
mov
das
pop
data16
mov
inc
xchg
pop
or
scas
and
pop
outsb
sub
add
xchg
cs
ljmp
sti
outsb
sub
mov
xor
dec
test
cmp
nop
cmpsl
xchg
adc
xlat
pop
test
lahf
shrb
inc
mov
test
std
or
outsl
mov
daa
push
mov
jl
subl
mov
dec
cmc
lea
add
shl
icebp
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
in
addr16
adc
adc
adc
jne
mov
out
iret
js
fisubrl
ret
mov
shl
sub
push
rcrb
mov
je
xchg
add
sti
pusha
imulb
lods
pop
sub
and
sub
dec
sbbb
mov
test
add
dec
arpl
in
lds
iret
adc
push
subb
lahf
call
push
out
mov
xchg
cld
fld
inc
and
cs
adc
sti
push
cwtl
test
pushf
int
int3
jl
sahf
pushf
iret
pop
fsubrs
adc
xchg
cltd
mov
cld
adc
inc
jge
cmpl
dec
xchg
iret
int
mov
inc
adcl
push
ljmp
cmpsl
jecxz
push
pop
dec
movsb
jg
jmp
add
fnstsw
jbe
adc
jmp
aaa
mov
pop
repnz
mov
sub
mull
lret
clc
iret
mov
xor
pop
icebp
pop
in
pop
out
ret
shlb
jnp
inc
jle
xor
into
mov
sbb
mov
into
push
clc
frstor
push
push
cmpsb
cwtl
jns
sub
icebp
or
and
inc
cmp
ficoml
xchg
push
cmp
push
push
cmp
or
fbstp
pusha
push
shr
fldt
mov
cld
stos
cmp
jecxz
or
aad
jo
mov
jno
jge
push
cmc
pmaxub
add
hlt
and
mov
xchg
mov
out
jge
or
push
or
pop
lret
push
pusha
inc
or
pop
jbe
jne
xor
cmpsb
out
fdiv
xchg
mov
fiaddl
lock
dec
test
add
push
stos
xchg
xor
dec
test
mov
fs
mov
xchg
xchg
daa
push
outsb
xchg
push
sub
xor
insb
sahf
enter
jo
inc
sub
pop
sbb
cli
insl
pop
inc
outsb
cmp
fnstcw
mov
add
rclb
add
daa
test
or
sub
in
pop
inc
imul
adc
rorl
mov
int3
inc
test
mov
and
fiaddl
cmp
bound
in
xor
insb
dec
xor
pop
inc
int
rcrl
jmp
mov
adc
dec
fmull
lds
push
sbb
fdivl
es
inc
movsl
add
lcall
js
jl
into
jnp
or
pop
aaa
cmpsb
out
dec
je
jecxz
xor
paddusw
lods
int
jg
sub
outsb
and
jp
lods
orl
scas
movsl
dec
int3
popf
xlat
mov
sub
add
sbb
mov
push
sbbl
es
adc
lret
mov
bound
lret
and
xor
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
inc
shr
jg
cli
adc
lret
inc
movsb
xchg
ret
or
dec
jae
call
call
and
mov
lea
daa
jmp
push
lea
dec
and
jmp
pop
addr16
sub
mov
mov
pop
scas
test
pop
add
insb
add
and
aas
pop
mov
and
add
xor
xor
mov
add
push
mov
sbb
sub
pop
and
sbb
mov
lret
out
mov
or
stos
xchg
add
loopne
xor
jbe
into
pop
mov
jo
leave
test
decb
enter
sbb
add
jns
shr
flds
jge
inc
mov
mov
cld
mov
ret
les
das
les
xchg
ljmp
out
push
rcrl
adc
les
fs
ja
mov
pop
jle
int3
mov
mov
jb
cs
fwait
or
dec
scas
adc
cmp
xor
popa
mov
data16
push
test
jns
fistpl
jbe
cs
cld
movsl
mov
adc
aam
rorl
js
in
inc
inc
aam
lret
xor
data16
push
mov
stc
adc
xor
jg
cmpsl
sub
roll
lret
push
mov
les
sbb
orb
and
outsb
mov
dec
mov
xchg
dec
jo
and
pop
jle
sub
mov
inc
push
adc
xor
insb
ds
cmpsb
pop
jl
mov
shrl
pop
xchg
adc
mov
lret
out
xor
sti
insb
je
aad
rol
xchg
sbb
sti
call
cmpsb
lret
rcrb
sub
adc
jnp
loop
aad
int3
jbe
pop
adc
les
mov
cmp
jae
xor
mov
add
mov
loope
pop
pop
repnz
ret
mov
jns
xor
xchg
mov
mov
dec
mov
mov
and
inc
arpl
cmp
mov
pop
dec
mov
dec
xchg
inc
lcall
cmp
dec
dec
in
mov
mov
push
fisubrs
mov
rolb
lret
lahf
sahf
mov
dec
xchg
mov
xchg
fidivs
add
mov
xor
jae
loop
and
outsl
orl
sub
ja
insl
mov
addr16
mov
cltd
mov
in
push
pop
leave
adcl
dec
adc
dec
ljmp
out
daa
or
std
leave
mov
ss
cli
dec
mov
cmp
aaa
fnstsw
arpl
jecxz
inc
inc
vmovapd
mov
arpl
mov
dec
fnstsw
lock
mov
xchg
outsb
cmp
dec
jns
repz
and
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
push
pop
lods
pop
aad
adc
adc
adc
pop
xchg
cmp
sub
inc
imul
sbb
jle
or
fsubrs
xchg
jmp
fcoms
adc
mov
push
or
outsb
js
sar
sbb
xchg
push
xchg
in
outsl
jmp
adc
sbb
inc
pop
pop
dec
in
clc
orb
jmp
cs
adc
lods
jno
shr
js
sub
inc
imul
pop
pop
adc
scas
jb
sti
adc
and
jb
iret
push
mov
mov
xor
mov
jbe
cmp
lds
lret
out
das
cltd
dec
popa
int3
ds
mov
jo
lret
sbb
sub
aas
cmp
jb
mov
sub
jmp
lock
fsubl
idivb
cmp
jbe
mov
cmovno
aam
cmp
push
repnz
or
iret
test
loop
cmp
add
mov
mov
jle
sub
fsubl
cmp
adc
neg
fldcw
ds
add
dec
lock
mov
jae
addr16
mov
jg
and
add
ss
sub
movsl
xchg
or
xchg
jle
dec
repz
sahf
pop
adc
cmp
add
add
sbb
or
daa
ret
jbe
inc
lahf
sbb
bound
adc
push
adc
in
cmp
fmull
jbe
adc
inc
out
cwtl
mov
sub
sub
je
mull
mov
jbe
and
mov
jns
adc
enter
mov
mov
and
test
pop
adc
nop
out
jle
inc
pop
pop
data16
adc
push
loop
inc
push
fbstp
sub
push
fbld
lcall
push
fwait
jecxz
mov
filds
inc
sbb
lret
jg
push
push
lods
mov
out
and
and
lret
repz
add
cmc
pop
in
jmp
icebp
mov
xlat
jl
dec
mov
shll
push
xchg
cmpsl
inc
push
std
out
pop
jle
pop
lahf
xchg
aam
out
pop
adc
pushf
sbbl
mov
add
lds
mov
jmp
pop
mov
in
jne
jae
add
mov
shlb
jg
or
mov
xchg
mov
mov
inc
add
fildll
out
dec
mov
mov
cmpb
decl
adcl
loope
movsl
outsb
sahf
mov
or
jge
icebp
mov
lret
xchg
adc
dec
add
cli
mov
idivb
dec
subb
pop
push
cmp
jo
fisubrl
push
xor
mov
and
jbe
aam
pop
aad
lahf
inc
movsl
jecxz
inc
enter
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
lret
les
xchg
movlps
pop
std
insb
loop
ret
dec
xchg
std
cltd
mov
cmpsb
insl
cwtl
mov
fdivrs
aaa
jb
sub
push
push
loop
and
loopne
xor
jns
cmp
inc
mov
mov
andl
mov
xchg
iret
mov
in
nop
int
loop
enter
lds
mov
sbb
nop
jge
cmp
push
out
es
xchg
bound
or
push
adc
lods
inc
mov
lret
xor
ja
jo
jb
imul
xchg
dec
les
call
sub
inc
sub
mov
pop
xorl
cmpl
std
cmp
aaa
xchg
fisubrs
sti
add
sti
jge
out
xor
jl
add
lcall
jmp
negb
shr
or
sbb
js
int3
in
int
jle
leave
jle
push
lods
lahf
sbb
lock
xor
loope
outsb
pusha
repz
clc
sbb
addr16
in
adc
mov
rol
jecxz,pn
divb
orb
cmp
stc
pusha
jecxz
das
orl
xor
jp
cmp
in
lods
in
pop
cld
in
fistl
popf
loop
enter
mov
cwtl
int3
dec
loop
jge
xchg
dec
pop
negl
dec
test
repz
inc
pop
xchg
stos
repnz
mov
add
lock
sbb
add
bound
in
mov
pop
push
jecxz
xor
cmc
pop
adc
nop
cmc
mov
and
aad
xor
test
daa
jl
mov
jl
das
jno,pn
cmp
jb
sub
idivl
jns
pop
push
loop
movsb
mov
xor
ret
jl
loop
movlhps
ret
mov
aam
lcall
out
mov
cmp
andb
popf
xchg
lret
cli
inc
fs
in
mov
jno
mov
dec
inc
fstl
push
add
xor
not
mov
hlt
mov
mov
cli
bound
rolb
popa
add
add
ret
aaa
xchg
dec
cmpsb
ret
test
out
insl
add
in
popf
jmp
pop
scas
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
sub
leave
adc
xchg
movlps
jmp
stos
push
es
repnz
sub
cmp
insl
dec
out
out
mov
movsb
imul
sarb
loopne
cmp
cs
jecxz
or
sbb
fsubp
dec
cwtl
repz
xchg
das
xchg
shlb
inc
icebp
sub
repnz
jp
sbb
mov
loope
and
fists
enter
pop
mov
pop
mov
push
mov
insl
cmpsl
lcall
repnz
xchg
pop
repz
and
mov
repnz
imul
jle
imul
sahf
insl
cmp
mov
imul
adc
sti
xchg
and
sub
mov
mov
jo
sar
lret
push
stos
test
cld
pop
push
mov
pop
aam
mov
pusha
fdivr
loopne
leave
and
std
fisttps
sub
fmull
push
imul
mov
shll
repz
jbe
push
shl
lods
adc
xor
ja
lock
fiadds
aaa
test
pop
lea
test
dec
sarb
aas
flds
xor
lea
fnstcw
movsl
or
aam
imul
add
jne
and
cwtl
xor
hlt
sbbb
adc
fnstsw
jnp
or
insb
test
test
sbb
int
xchg
push
xor
loop
mov
arpl
xlat
loop
inc
inc
cmc
add
mov
push
cmpxchg
mov
enter
inc
leave
std
cmp
jg
stos
or
outsl
test
aas
lret
mov
scas
xchg
jae
inc
testl
ret
lcall
lock
mov
xorb
lcallw
cmc
adc
arpl
push
jle
es
arpl
inc
addl
mov
ret
inc
int3
inc
fninit
in
cmp
pop
cmpsl
repz
xor
dec
push
dec
pop
sub
fxch
outsl
jb
pop
jge
hlt
aam
jp
push
movsb
adc
rorb
dec
add
sbb
jmp
sbbl
cmp
aam
pop
lods
mov
and
add
adc
xchg
movlps
pop
pusha
ljmp
pop
lret
mov
cmp
or
mul
push
cmp
push
sbb
mov
xchg
lods
out
out
pop
and
pushf
cmc
int3
repz
jecxz
outsb
icebp
fildl
arpl
cmp
popa
jae
pop
inc
adc
insb
cmpsb
or
ljmp
stos
or
sahf
test
inc
lcall
xchg
sub
jno
lahf
ss
push
rol
fs
ret
xor
push
ret
adc
push
and
add
sub
cmc
push
inc
fwait
rol
lods
mulb
cmp
negl
out
adc
int3
xchg
roll
sub
and
inc
mov
mov
dec
xchg
int3
lods
hlt
rcl
inc
adc
sub
cmp
fisubs
sbb
stos
or
mov
test
sti
out
adc
adc
scas
mov
fcoms
lods
inc
test
sahf
dec
int
mov
mov
inc
lahf
jg
ret
mov
xor
or
cmp
pushl
mov
fildll
mov
push
and
adc
loope
sub
scas
les
std
cmpsb
lods
push
pop
inc
or
add
add
and
out
js
inc
push
sub
addr16
imul
push
mov
pusha
mov
mov
mov
scas
jb
sub
lret
outsw
xchg
lock
out
cmp
fldt
sub
inc
jns
and
xchg
mov
mov
lock
bswap
xor
sbb
sarb
adc
add
push
ss
inc
mov
insb
lds
push
mov
mov
popf
pop
push
call
xchg
pop
fs
inc
subl
lahf
rcll
and
ret
out
dec
jp
add
in
push
arpl
pop
or
fwait
mov
and
xchg
jo
or
mov
fcmovu
and
pop
push
stos
jecxz
bound
out
xlat
pop
shll
cld
iret
mov
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
scas
pushf
loop
add
adc
fistps
lcall
or
xchg
lcall
icebp
cmp
fidivs
mov
xor
lahf
or
xor
repnz
and
popf
mov
or
int3
inc
push
cmp
shr
test
and
mov
pop
shll
inc
mov
std
cmpsb
pop
fstps
mov
sbb
xchg
cltd
in
xor
add
ficompl
mov
add
mov
cmp
mov
cmp
scas
lods
push
lea
and
lahf
pop
xchg
movsl
jg
iret
push
mov
ret
xchg
sbbl
outsl
adc
fists
xchg
into
rclb
lock
pusha
push
pop
sub
mov
add
add
scas
xor
sub
pop
inc
inc
lods
lret
shlb
sbb
lret
or
into
mov
and
aam
adc
addb
and
and
fstl
add
out
enter
orl
push
and
adc
cmp
lea
or
adc
adc
fbstp
imulb
jns
jmp
aad
add
dec
in
shrl
iret
fs
inc
and
not
push
xchg
sbb
dec
sub
aaa
mov
jmp
pop
popl
pop
xchg
mov
mov
mov
lock
out
data16
pop
cmp
mov
add
push
neg
adc
sub
ja
cmpsb
pop
sbbb
lds
push
push
adc
mov
std
rorl
jo
inc
ss
arpl
cltd
lods
push
lahf
mov
sti
push
sbb
das
xchg
mov
adc
aas
jno
in
jnp
fsubl
jmp
mov
enter
add
and
pop
mov
inc
pop
inc
data16
xchg
aam
adc
dec
scas
push
cmp
out
add
jo
test
pop
fstl
testb
int
xchg
mov
jge
mov
test
xlat
lock
imul
jno
pop
orb
xchg
aas
test
lcall
mov
daa
cmp
loope
mov
in
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
leave
jb
fistpll
jnp
clc
clc
inc
insl
movaps
cwtl
ret
test
push
fmul
push
and
jmp
push
outsl
add
cmp
stos
sbb
jno
mov
xorl
cli
dec
popf
stos
call
or
fcompl
lea
aad
nop
movsb
int3
pop
mov
jnp
movsl
mov
enter
add
xchg
scas
xchg
ja
lret
call
outsl
aam
cli
in
outsb
sub
push
decl
insb
and
pop
sbb
fs
or
and
pop
inc
sub
push
test
mov
jno
loopne
lods
cs
out
add
enter
lret
xchg
stos
sbb
xchg
xor
stos
movsb
es
outsb
push
lret
fld
mov
mov
stos
mov
cmp
push
sbb
mov
cmpsl
sub
leave
xchg
scas
lret
loopne
xchg
dec
cli
fldl
xchg
lret
adc
stos
mov
pop
jbe
push
push
outsl
fcoml
xor
das
prefetchwt1
mov
xchg
push
div
pop
js
jo
dec
jbe
fwait
in
or
sbb
pop
test
loop
or
pop
adc
nop
pusha
add
out
push
add
into
pop
repnz
lock
mov
dec
mov
mov
loope
fsubrl
sbb
je
push
jg
mov
jne
push
pushf
in
and
ltr
sbb
add
push
in
mov
mov
cld
sub
outsl
dec
xchg
or
or
pusha
dec
push
sbb
insl
lods
mov
mov
movsb
jne
or
push
inc
call
fsubr
bound
test
inc
pop
fstpl
mov
jne
jg
in
shll
lds
inc
scas
adc
popa
dec
inc
jp
or
jl
dec
iret
push
sbb
divb
jbe
sbb
ficoml
daa
rcrl
lds
shll
cli
fstpt
and
dec
jne
adc
cmp
imul
lahf
gs
mov
xchg
ja
lret
addl
mov
cltd
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
dec
mov
xchg
movlps
add
inc
call
test
insb
mov
xchg
jbe
xor
cmp
pop
bound
xlat
mov
mov
dec
pop
lods
sub
and
outsl
adc
fcmovnb
xchg
negb
mov
adc
push
pusha
adc
std
jecxz
add
stos
mov
out
fwait
clc
movsl
xor
add
fcoms
and
dec
test
hlt
add
pushf
arpl
xor
xor
jo
sahf
adcb
add
out
xchg
xchg
out
inc
cmp
sbb
cmp
push
dec
ret
cmp
inc
shlb
std
roll
cmpb
sbb
stos
mov
adc
iret
mov
dec
mov
call
inc
pop
arpl
jbe
std
in
dec
cs
sub
dec
nop
out
xchg
push
icebp
fisttpll
in
pop
leave
pusha
les
push
dec
out
and
mov
lret
ja
sahf
pop
pop
sbb
sti
jne
pushf
cmp
insl
xor
je
stos
out
mov
sbb
push
jo
adc
repz
jg
jno
and
mov
sub
scas
sahf
jl
mov
shr
nop
mov
pop
push
push
dec
and
pop
push
fadds
lret
arpl
mov
xchg
add
ss
ss
mov
aad
lds
mov
mov
lahf
hlt
or
xorb
iret
test
cmovae
mov
int
xchg
push
cli
inc
push
adc
lret
cmp
dec
test
repnz
dec
mov
ja
add
fsub
sbb
stc
icebp
sarb
fsubl
pop
cmp
dec
push
jg
addr16
stc
or
loopne
or
test
pusha
or
aad
inc
mov
test
xlat
mov
repz
clc
mov
xchg
je
cmpsl
out
mov
and
dec
imul
aas
mov
jge
gs
in
lretw
ret
sub
lds
xchg
sbb
and
insb
loopne
int3
xor
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
sub
add
adc
add
adc
mov
das
sbb
or
dec
imul
scas
mov
dec
xor
jp
outsb
outsl
idivb
jg
dec
adc
popf
inc
jmp
mov
shll
adc
sbb
inc
lcall
bound
adc
lods
or
sbb
aam
lret
xchg
aaa
sbb
jae
pusha
stos
mov
call
mov
fbstp
push
clc
sbb
sub
cmp
sahf
push
mov
mov
into
push
jle
in
and
pushf
pop
dec
in
add
rolb
repnz
iret
mov
xor
xlat
test
daa
dec
xor
popa
std
and
xchg
call
push
sub
and
rolb
mov
insl
sub
cli
push
push
jg
clc
shll
sarb
push
jo
nop
inc
add
stos
mov
fistpl
clc
xchg
push
xchg
adc
lahf
pop
xchg
stos
sub
ficompl
inc
jl
cmp
push
mov
imul
into
mov
jne
push
dec
test
and
mov
jp
mov
pop
cltd
jmp
loope
iret
nop
xor
add
push
jge
test
imul
in
mov
inc
push
out
adc
test
scas
pop
xor
xchg
xchg
mov
inc
add
pop
fsubr
loopne
or
mov
dec
push
and
divb
fs
out
pop
push
shll
push
pusha
fcomps
xchg
bound
je
lods
jmp
mov
mov
push
dec
cwtl
inc
add
inc
mov
push
adc
hlt
mov
adc
add
stos
decb
je
fiadds
verw
or
mov
xchg
mov
pop
arpl
cmp
and
cmp
out
jnp
sti
lret
rcrl
pop
jne
add
aas
mov
mov
mov
xor
out
test
xchg
xchg
into
stos
add
mov
sarb
mov
rolb
bound
out
cwtl
pop
mov
push
xor
rorb
mov
test
int3
mov
fcmovnb
cwtl
stc
test
dec
xchg
xor
in
imul
mov
mov
fcomp
adc
push
pop
push
jl
lret
ret
mov
push
rorl
inc
scas
insb
rolb
repnz
repnz
testb
lahf
dec
push
scas
cmpsb
gs
fidivrs
in
dec
mov
addb
mov
shlb
jp
push
insb
and
cltd
lods
mov
imul
lds
decl
lock
adc
lods
cmpsb
frstor
iret
aaa
sti
xlat
ljmp
adc
pop
push
jg
adc
lret
and
mov
mov
lock
xor
xchg
lea
cltd
push
or
or
pop
ss
lret
ss
loop
sub
pop
push
cld
pushf
or
les
adc
jp
movb
js
fistl
arpl
imul
cmpl
test
and
sarb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
cmpsb
xchg
add
adc
js
outsl
loopne
cmp
jg
out
mov
push
dec
xchg
adc
inc
adc
inc
or
and
dec
rcll
pushf
mov
in
xor
pop
sbb
push
shll
arpl
push
mov
cmp
out
dec
dec
fnsave
outsb
jg
pop
dec
xchg
shlb
outsb
and
ljmp
fsub
jecxz
or
int
test
jne
lods
xor
mov
aaa
pop
sahf
arpl
mov
gs
inc
aad
in
add
cmpsb
adc
jmp
mov
push
ds
or
push
insb
pop
dec
lahf
and
dec
das
jns
mov
sub
movl
adc
sbb
push
xlat
add
arpl
push
rorl
pop
arpl
in
in
cmp
sti
mov
repnz
ret
aaa
cmpsl
jnp
sarl
es
cs
jns
shlb
into
xor
imul
xorl
mov
hlt
sbb
lods
lcall
pop
imul
pusha
xchg
rcll
xchg
movsl
mov
jl
mov
and
in
sahf
aas
xchg
add
pop
add
inc
dec
nop
mov
je
sbb
insb
aaa
fistps
or
push
jl
pop
push
into
pop
cs
pop
out
je
scas
pop
xchg
xor
iret
sbb
inc
fcmovne
lret
movsl
aaa
inc
mov
push
sub
sbb
test
mov
and
outsl
pop
cmpl
lcall
mov
hlt
jg
push
dec
adc
push
rcr
rol
add
add
sub
test
lea
repz
clc
jno
outsl
in
stos
sbb
inc
cmpsb
ret
pushf
inc
sarl
dec
in
pushf
push
jns
xorb
inc
mov
sub
and
test
add
push
aad
jae
push
push
mov
xorb
sbb
shll
daa
or
aam
es
loopne
ss
sub
insb
pop
adc
mov
sbb
mov
cmp
outsl
repnz
inc
xchg
xor
fsubl
fwait
pop
dec
pop
mov
es
daa
add
movsb
shll
sub
cmp
and
test
loope
pop
cmp
rclb
xchg
ret
lahf
cmp
mov
std
lods
insb
and
mov
and
repz
adc
rolb
lock
outsb
mov
dec
mov
mov
dec
fsubs
adc
cmp
push
nop
aas
test
pop
and
dec
add
cld
lea
enter
int3
dec
stos
push
js
inc
inc
xlat
aam
aam
pop
xor
cmp
push
cmp
inc
cmp
xor
cmp
pop
cwtl
adc
je
out
jns
jl
shlb
sub
adc
cmp
mov
clc
inc
inc
in
sub
push
test
filds
insb
jae
mov
xchg
nopl
or
test
sub
push
jg
xlat
mov
in
out
mull
sub
push
inc
dec
jl
out
adc
push
insb
rol
add
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
cmp
mov
add
adc
cmp
or
or
test
stos
enter
mov
shll
mov
inc
mov
js
push
mov
jge
cmp
sbb
sub
loope
int
push
sub
sub
push
push
scas
dec
push
fcompl
dec
out
xchg
push
push
lret
sti
push
xor
outsl
xor
cmpsb
imul
in
mov
and
dec
and
jns
jb
popa
imul
adc
pop
push
jl
add
fwait
pop
mov
je
push
cs
mov
and
cwtl
adc
xchg
sbb
shll
or
call
push
arpl
push
adc
loopne
cmp
ret
xchg
xchg
sub
pop
in
dec
pop
mov
lds
jb
gs
xor
dec
call
ret
adc
out
int3
mov
jo
pop
mov
scas
cmc
lret
ljmp
fildl
push
jbe
sbb
or
xor
mov
pop
js
jo
xchg
jp
pop
fwait
insl
dec
cmc
call
sarb
adc
mov
xchg
pop
sbb
push
xlat
dec
aaa
js
xor
pop
shl
xor
sub
inc
push
ret
outsb
add
rcrb
insb
sbb
xor
ds
pop
sub
lods
lds
and
or
rorb
adc
jo
data16
push
and
aam
xor
mov
adc
sbb
flds
xlat
outsl
inc
data16
aaa
jp
adc
mov
dec
dec
les
xor
or
ret
mov
mov
data16
je
mov
loope
dec
mov
adc
mov
ficompl
push
jnp
pop
or
orl
jae
push
mov
xor
incl
popf
mov
mov
push
adc
pop
mov
mov
ljmp
std
js
push
cmp
daa
and
mov
mov
sbb
or
mov
lds
xor
adc
cmpsb
mov
std
xor
pop
stc
mov
sti
js
lods
sub
and
cwtl
jmp
pop
int3
mov
push
jmp
push
inc
stos
les
pop
cmc
addr16
jbe
sahf
cs
je
xor
xchg
lcall
enter
mov
push
xchg
adc
leave
shl
mov
lcall
mov
add
iret
cmpsb
fnstcw
push
dec
xchg
xor
ljmp
lcall
sbb
mov
mov
shl
push
daa
lahf
mov
clc
jl
add
es
push
xchg
mov
imul
mov
sbb
bound
push
les
rol
repnz
inc
mov
xor
pop
mov
inc
adc
pop
sahf
add
xor
pop
and
xchg
xor
outsb
mov
idivl
mov
bound
das
testl
jg
aaa
sahf
pop
aam
in
xchg
aas
es
mov
add
inc
or
inc
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
cmpsl
ja
mov
jne
adc
mov
cmpsb
loop
aad
inc
cwtl
mov
sbb
stc
aad
mov
push
lret
iret
stos
mov
call
or
xchg
pushf
cmpb
icebp
cltd
in
popa
ds
jb
stc
in
bound
cmp
mov
in
xchg
out
lock
sub
nop
add
cmp
xor
jecxz
lods
add
xor
shr
int
add
incl
push
or
loopne
sbb
sbb
jb
adc
clc
push
cmp
pop
cmp
inc
mov
lret
loopne
inc
cmp
psubusb
xchg
scas
fists
ret
and
movsl
dec
jp
inc
fldt
scas
das
loop
pop
inc
or
je
xorl
mov
jge
xchg
xchg
xchg
sub
pop
jbe
dec
sub
xchg
lret
push
fistps
int3
scas
shl
jno
in
cmpsl
sahf
add
outsl
mov
xchg
lds
ljmp
inc
pop
jp
pop
int
add
and
pop
cmpb
or
test
aad
fcmovbe
das
outsl
dec
mov
sub
cli
les
xchg
sbb
adc
out
pop
ja
out
xor
inc
ja
ss
outsb
lahf
mov
out
adc
adc
mov
push
ljmp
inc
xor
outsb
dec
pop
test
add
xchg
or
and
dec
pop
inc
adc
jecxz
inc
cmp
jl
lret
ds
je
mov
je
dec
inc
push
adc
xchg
push
sbbb
sbbl
imul
scas
jnp
and
dec
lods
pop
lock
pop
dec
lock
jecxz
cmp
mov
jb
into
loopne
int3
or
xchg
dec
cmp
pop
cli
push
insb
inc
jge
addb
and
and
cwtl
sbb
pop
into
inc
sub
ret
lds
imul
mov
fs
mov
lock
and
add
out
xor
xor
mov
sub
pop
mov
fiadds
mov
fnstcw
push
xchg
out
sahf
adc
cmp
pop
xchg
xchg
inc
adc
sbb
inc
sub
popa
loopne
hlt
movnti
cwtl
mov
jmp
fistpll
cmp
push
mov
inc
lock
dec
stos
in
xor
cmp
aas
fwait
movsb
sub
xor
test
lcall
adc
mov
in
mov
push
es
pop
jecxz
dec
mov
nop
xor
or
pop
das
cmp
inc
xchg
fiadds
jp
ja
and
shll
and
jmp
xorl
push
fsubrl
jge
aaa
mov
and
scas
loopne
pop
cwtl
cld
cmc
xor
mov
icebp
shll
lods
mov
je
repz
incb
mov
lds
inc
cwtl
push
xor
dec
sub
jmp
imul
fldenv
out
in
jne
or
fbld
les
and
push
scas
ficomps
movsl
stc
loope
mov
ja
test
fnsave
mov
cmp
movsb
or
sbb
jl
adc
rorl
jmp
das
adc
sub
xchg
push
fcomps
adc
jl
filds
aam
shlb
push
fdivrs
stc
insb
and
into
icebp
fwait
stos
fs
and
and
das
dec
jecxz
push
cmp
dec
insb
insl
push
scas
pusha
mull
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
jmp
fdivrl
jne
adc
ja
or
in
push
inc
jmp
les
mov
jp
add
andl
mov
stos
cmp
adc
pop
dec
or
shll
jnp
jg
mov
andl
xor
cmp
add
icebp
fchs
cmp
aam
pop
test
add
or
sarl
lcall
mov
mov
mov
sbb
lods
xor
pop
push
jmp
ret
sub
ds
xor
int3
push
and
frstor
mov
xchg
bound
pushf
cld
cmpsl
aam
filds
int3
xor
push
inc
clc
divl
jbe
add
lcall
pop
xchg
jno
das
push
fs
mov
lcall
mov
or
mov
add
mov
test
xchg
decb
test
aad
xchg
aas
mov
push
jo
mov
or
idivb
lds
mov
loopne
xor
ret
es
or
mov
lds
push
xor
mov
idiv
call
inc
xlat
xchg
es
lea
cmp
lods
jmp
addl
mov
sub
rolb
add
jne
sbb
ficoml
scas
loop
sub
xor
fisubl
jecxz
push
rol
jnp
and
push
sar
mov
call
call
xchg
fwait
adc
imul
lods
ds
sbb
mov
and
ret
or
outsl
add
imul
fsubrl
aas
mov
xchg
lds
rorb
mov
dec
ds
ja
scas
pop
dec
aaa
xchg
mov
lds
out
aad
sahf
aam
subl
add
aas
mov
pop
mov
sub
mov
scas
idiv
xor
and
rclb
pop
add
lret
add
mov
sahf
out
sbb
adc
fsubrl
enter
jb
push
dec
ds
mov
jp,pn
xorl
push
jmp
lods
leave
jnp
sbb
lods
pop
and
mov
lods
enter
mov
jle
mov
into
repz
dec
fs
mov
add
dec
xchg
fsub
jbe
mov
and
adc
insb
push
mov
clc
push
lret
cmp
mov
inc
fwait
inc
cmpsb
lods
mov
xor
sub
mov
cmp
mov
pop
inc
stc
add
sub
mov
cld
add
scas
hlt
popa
testb
mov
dec
mov
imul
xlat
sbb
jbe
sub
jle
sbb
popa
test
ficoms
jno
pop
push
add
mov
mov
and
xor
jo
mov
insb
adc
adcl
shl
inc
gs
cs
in
mov
clc
or
jmp
xor
stc
andb
divb
mov
push
cmpsb
add
mov
mov
dec
inc
aaa
daa
or
outsl
add
movsb
jmp
pop
pop
fdivs
movsb
mov
sbb
xor
lock
push
ds
enter
fildll
inc
pop
addr16
outsb
dec
mov
mov
sbb
dec
sbb
mov
mov
jp
cmpsl
push
scas
popf
sbb
outsb
not
add
fsubrs
mov
jnp
cmp
stos
loope
xor
rorl
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
mov
adc
fimull
adc
scas
into
pop
loop
mov
mov
test
leave
pop
mov
mov
repnz
in
cmp
xchg
sbb
mov
movsb
add
inc
xchg
mov
test
sub
or
mov
fnstenv
add
mov
pusha
fstpt
loop
jge
and
and
xchg
jmp
mov
push
fs
jns,pt
sbb
adc
pusha
int3
or
push
add
insl
or
aad
subl
ds
cmp
sbb
repz
mov
orl
or
jb
pop
sbb
daa
aaa
sub
jne
xchg
shlb
ss
outsl
dec
sub
fsubl
imul
addr16
mov
inc
sbb
out
daa
mov
fbstp
ss
sbb
jp
adc
sbb
jo
out
lds
mov
mov
xchg
pop
sbb
fdiv
stos
pop
push
lds
pushf
adc
push
mov
cmp
sbb
adc
loope
push
xor
in
mov
cmp
jle
jbe
cmpsb
push
mov
mov
mov
sbb
mov
mov
push
movsl
pop
ret
or
mov
sub
mov
std
fsubr
sbb
loopne
and
fwait
cli
xchg
fs
jmp
jg
add
push
scas
push
jp
mov
or
imul
lret
in
sbb
mov
movsb
and
or
gs
mov
dec
pushf
test
fwait
xor
shrl
and
dec
or
pop
lcall
pop
inc
mov
in
test
cmpb
push
jle
cmp
jecxz
jo
notb
mov
popf
xor
std
xchg
jg
mov
xchg
and
pop
sub
divb
sahf
dec
es
lea
imul
insl
call
and
push
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
out
mov
decb
adc
daa
pop
test
cmp
in
dec
add
dec
xor
fcomps
mov
sub
mov
lcall
lcall
jns
cltd
lcall
into
add
inc
adc
in
and
pop
idivl
rclw
pop
push
insb
or
iret
leave
andb
into
icebp
mov
push
pop
mov
mov
imul
add
jno
mov
out
sbb
and
inc
cmp
shrl
xorl
mov
clc
mov
insl
int
stc
xor
push
cmp
out
mov
mov
test
lock
lods
mov
insb
jg
lock
inc
pop
mov
shrb
fldcw
and
ss
ljmp
icebp
gs
pushf
sti
enter
repnz
addr16
push
test
pop
int3
jo
and
xchg
leave
lock
dec
mov
mov
xchg
divb
ja
std
lock
leave
test
dec
lcall
xchg
pop
inc
cmp
jno
sbb
repz
arpl
mov
lret
pop
rolb
jg
push
mov
pop
xchg
sbb
into
cltd
sbbl
inc
dec
es
and
push
xchg
cmp
imul
pushf
mov
idivb
cs
cmpsb
pop
or
arpl
dec
add
xchg
mov
jns
aam
cli
cld
add
adc
icebp
rorl
jmp
add
mov
push
jnp
jmp
lds
cmp
lea
xlat
mov
jbe
hlt
cmp
add
arpl
add
sbb
ds
rcl
aaa
addr16
js
fs
cwtl
pop
sub
fidivs
mov
inc
ja
mov
and
push
pop
inc
sbb
out
pop
adc
mov
movsl
cmp
add
in
push
jp
mulb
add
add
out
mov
in
push
dec
mov
dec
int
es
cmp
push
xchg
lds
cmp
pop
scas
jb
in
and
push
ret
jecxz
aam
xchg
mov
aaa
xlat
inc
add
popa
cmpsl
out
pop
inc
rolb
pop
test
jg
jae
xlat
mov
sbb
pop
mov
xchg
adc
rolb
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
sbb
jle
test
adc
movlps
cli
dec
shl
xor
pop
in
loop
sub
mov
test
ds
pop
daa
int
push
or
imul
mov
div
mov
adc
mov
xchg
arpl
xchg
leave
and
test
aaa
repz
into
test
mov
fdivrs
jecxz
jb
sarl
out
jle
ja
stc
cltd
push
scas
pop
pop
ss
jbe
adc
and
jecxz
test
mov
cmp
pop
push
out
loope
xchg
repnz
inc
sub
int
fisttpll
inc
pop
sahf
push
push
mov
lock
lret
mov
mov
xchg
test
push
pop
xchg
sub
adcb
dec
outsl
mov
mov
jns
fsubr
movsl
clc
cmp
lea
lret
test
cli
pop
iret
loope
enter
push
fs
fldl
pop
and
xchg
fistps
stos
sbb
mov
and
loope
jmp
in
cmp
push
out
jne
jns
cmp
cmpl
mov
cmp
sbb
inc
sahf
push
sbb
inc
sbb
pop
add
aaa
sbb
dec
sbb
loopne
test
mov
mov
sbb
mov
lds
addr16
xchg
mov
mov
mov
icebp
js
jmp
push
rclb
cld
inc
fcomps
or
add
xchg
in
mov
or
mov
jmp
in
mull
sbb
sbb
mov
enter
pushf
jb
pop
xor
or
leave
jg
aad
or
xchg
mulb
push
bound
dec
sbbl
lahf
xchg
stos
mov
sub
mov
jo
and
rclb
push
push
xchg
inc
test
mov
add
fbld
scas
mov
push
frstor
aad
es
js
lds
pmulhrsw
mov
jo
inc
jge
sahf
in
xchg
rcrl
mov
xchg
jg
loop
jl
adc
ficompl
call
push
test
sub
xchg
jne
lahf
adc
pop
dec
ja
sub
aas
pop
clc
or
cmp
pop
fsubrs
mov
insb
std
fldenv
xchg
shll
fidivl
lret
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
jbe
adc
movlps
pop
or
mov
cmp
cmp
jno
fs
jg
scas
jnp
popf
pushf
dec
jge
out
xor
cs
push
dec
jb
cmp
sbb
fwait
push
enter
movsb
outsb
sbb
xor
shlb
adc
pop
in
fxtract
fisubl
or
add
shlb
outsl
jnp
jnp
lods
ja
push
gs
lret
jno
lea
xchg
bound
pop
fisttps
xchg
sbb
or
cmp
in
jmp
out
push
and
rcr
aad
shll
push
mov
sbb
repnz
test
mov
pop
add
mov
mov
cmp
test
test
cmpsl
rcr
lods
mov
ret
jmp
push
aam
lret
cld
sbb
xlat
out
movzbl
enter
fs
jecxz
add
cmp
movsb
and
andb
loopne
mov
out
std
dec
push
push
inc
fstps
cmp
sub
out
jg
aad
shlb
rorl
xor
aaa
cltd
xor
lods
mov
fwait
daa
push
adc
shll
adc
lods
push
lret
dec
or
mov
push
add
dec
cmp
daa
cmp
inc
stc
sbb
rorb
adc
xor
jp
push
loopne
mov
fiadds
lcall
inc
ja
pop
cmc
sbb
adc
mov
add
dec
sbb
dec
nop
or
movsl
gs
pop
inc
sbb
push
out
fisttpll
jecxz
sub
mov
sub
jp
adc
mov
mov
and
aaa
mov
dec
jne
sbb
cld
pop
popf
jae
andb
cmp
mov
repz
sub
add
inc
cmp
gs
add
pop
jl
add
rclb
rcl
aam
xchg
mov
and
loop
xor
pop
movsb
or
loop
daa
out
fs
sbbb
adc
sahf
sbb
out
jns
push
pop
xchg
dec
xchg
inc
cmp
sbb
call
lods
bound
daa
shrb
repz
test
popa
pop
push
mov
mov
inc
mov
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
xchg
adc
adc
movlps
icebp
lock
or
in
mov
popf
adcb
fs
mov
test
repnz
xchg
mov
fnsave
mov
std
enter
outsl
and
xchg
jle
inc
pop
sub
nop
xchg
stc
and
sbb
outsb
stos
push
cmpsl
std
pop
movsl
mov
jns
stos
push
ret
mov
in
in
or
cmc
sub
inc
dec
scas
cwtl
jo
ja
xchg
mov
inc
cltd
shrb
and
jb
push
sbb
outsb
sbb
mov
inc
in
shrb
pop
cmp
xchg
fnstcw
cmp
sbb
xchg
rorl
mov
adc
filds
dec
jmp
and
and
mov
lcall
xchg
lock
jb
loop
sub
mov
fiadds
mov
ret
cltd
or
pop
sub
xchg
push
pop
mov
lret
cld
popf
push
mov
and
inc
push
dec
int3
arpl
lock
out
ljmp
mov
fnstsw
dec
xor
in
lds
sbb
and
das
popf
inc
inc
popf
popa
movsl
mov
jle
mov
and
lods
cmp
and
jecxz
mov
cmp
imulb
dec
ljmp
aad
mov
clc
and
inc
repz
inc
mov
shrb
jns
repnz
push
in
orb
xchg
cmp
ficompl
mov
in
bound
nop
or
lods
xor
jp
lret
mov
xchg
dec
test
in
call
sub
repz
dec
insb
push
adc
lods
jo
outsl
in
adc
jb
stos
bound
inc
lods
push
xor
sahf
or
jbe
test
xchg
ljmp
inc
lock
outsl
pop
js
pop
out
mov
push
push
mov
jp
xor
daa
sahf
or
jle
jno
loop
sarl
jae
test
and
lds
sar
mov
dec
fbstp
add
ljmp
adc
mov
in
dec
aas
add
push
dec
divb
fwait
jge
and
fisttps
lds
sub
xor
mov
cmp
xchg
bound
dec
shl
call
mov
jmp
js
cmc
repz
sub
adc
lods
loop
adc
decb
adc
lock
or
std
lock
loop
es
push
mov
xor
inc
mov
pushl
out
arpl
jp,pt
cwtl
inc
scas
dec
stos
jge
adc
mov
jno
into
mov
js
dec
inc
cmpsl
fwait
outsb
dec
xchg
push
jae
hlt
jp
mov
pop
jl
push
lret
int
jbe
fadds
sub
arpl
jecxz
jns
cs
push
mov
pop
add
add
sbb
xor
iret
sti
dec
jecxz
sub
dec
or
test
xor
lock
mov
iret
mov
inc
pop
cwtl
sbb
xchg
jns
fsubp
mov
add
aas
sti
mov
enter
cvtpi2ps
sbb
add
and
ret
bound
repz
jbe
addr16
out
movl
cld
lods
iret
scas
lods
bound
or
mov
xor
cmc
stos
ds
lahf
mov
int
dec
inc
cmpsl
test
outsl
jbe
jb
out
mov
lahf
mov
rolb
ljmp
ficompl
cmpsl
xor
ljmp
or
xchg
jns
cmp
stos
adc
lcall
push
and
iret
or
lret
jbe
mov
cmp
test
xchg
xor
dec
popf
sbb
cmp
test
lret
cmpsb
mov
lock
iret
std
mov
mov
dec
adc
and
in
cmc
mov
jne
adc
test
rorl
jne
cmpl
out
xchg
pop
push
lcall
mov
xchg
and
xor
arpl
callw
adc
loop
add
push
mov
pop
mov
and
and
mov
adc
mov
mov
fsubl
and
xor
sub
and
add
test
add
mov
lea
fucomip
pop
nop
inc
repz
shr
ret
fwait
gs
xchg
sub
into
imulb
js
cmp
jo
push
adc
cmp
jg
adc
out
cmc
out
jp
jg
lahf
jmp
lcall
orl
fisubl
jl
popa
sbb
xor
insl
mov
or
mov
out
dec
jo
loop
inc
cli
cltd
add
je
sarl
ljmp
cmp
dec
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
js
jno
adc
movlps
mov
lds
lods
mov
lcall
cmpsl
fnsave
cwtl
jbe
insl
push
sub
push
jb
incb
mov
sub
cmc
and
cli
daa
mov
xchg
jp
les
clc
das
and
addl
inc
scas
mov
shlb
inc
xchg
bound
jnp
loop
pop
enter
inc
mov
stc
lea
xor
insb
push
mov
adc
stc
fisubrs
imul
out
xor
cmp
pop
in
pop
and
or
adc
xor
sbb
or
pop
jo
je
iret
out
imul
sub
out
pop
inc
push
push
shl
adcb
add
pop
ds
pop
pavgb
mov
add
addr16
inc
bt
mov
fildll
mov
pop
sbb
icebp
imul
lahf
cmp
and
in
push
dec
xor
cmpsl
lods
jno
loope
dec
shlb
pop
and
mov
mov
cmp
or
add
mov
mov
mov
lret
add
in
push
mov
aaa
mov
repz
les
daa
imul
fbstp
je
movsl
mov
fimuls
adc
lock
insb
xor
popa
enter
dec
insb
ljmp
shl
arpl
xor
addr16
adc
xchg
mov
add
or
push
arpl
xchg
mov
lds
mov
sub
cmp
pop
push
sub
sub
mov
loope
jae
mov
in
daa
inc
jg
mov
lret
dec
or
cli
xor
int
lret
push
push
pop
into
push
clc
les
add
sarl
mov
sbb
xor
lahf
push
lds
sub
add
adc
dec
or
mov
movsl
movb
sbb
jmp
push
and
imul
adc
decb
inc
aam
jecxz
push
int
adc
mov
iret
out
dec
sbb
outsb
std
out
frstor
xchg
dec
add
hlt
pushf
std
jne
in
movsb
mov
cmp
movsb
shl
stos
mov
loopne
cmp
ljmp
or
xchg
add
or
mov
or
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
movsb
rolb
adc
decb
adc
sbb
push
cmpsb
push
mov
pushf
shlb
and
push
or
into
mov
lahf
in
xchg
iret
sahf
dec
insl
scas
rcrl
movb
inc
mull
cmp
arpl
in
fstps
mov
in
lret
mov
sbb
sbb
push
fldl
cmp
mov
cmc
sti
add
repnz
mov
xchg
aaa
sbb
pop
cmp
loope
outsb
ja
icebp
mov
ret
mov
cmp
rolb
into
and
insb
icebp
cli
mov
popa
sub
imul
mov
dec
pop
xchg
push
dec
sbb
pop
mov
cmp
adc
loopne,pn
mov
ret
jne
aas
sar
into
clc
mov
clc
mov
dec
sbb
sbb
pop
sarb
fwait
enter
pop
in
jmp
sbb
ds
dec
add
popa
pop
addr16
arpl
mov
mov
ret
or
and
cmp
push
cmp
mov
push
mov
call
jge
pop
jo
ret
mov
sahf
sbb
jl
dec
pop
shlb
cmpsl
daa
mov
mov
jnp
lea
movsl
cltd
mov
into
sti
scas
dec
cwtl
cmc
rcrl
push
cmpsb
outsb
leave
mov
xchg
lret
cmp
mov
push
sub
inc
xor
xchg
ret
push
or
and
lahf
into
insl
shlb
jecxz
mov
dec
jo
insl
loope
inc
push
lahf
or
inc
bound
cmp
push
jp
daa
jle
jmp
shl
lods
pop
daa
jmp
adc
dec
jbe
xchg
hlt
out
cmp
or
popf
mov
fidivrs
jns
mov
lods
jecxz
shll
inc
push
push
pop
lret
outsl
nop
jl
xchg
in
fidivs
lock
pop
adc
in
xor
roll
aam
ds
add
pop
shll
push
out
sub
mov
jecxz
sub
mov
cmp
push
adc
mov
and
test
cli
ljmp
fsubrp
mov
jae
sti
les
mov
pop
test
or
push
mov
ds
mov
xchg
scas
adc
push
or
sub
ds
fistpll
cld
nop
jl
push
les
cltd
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
push
leave
insb
insb
arpl
adc
movlps
dec
adc
mov
push
adc
sub
out
push
sub
stc
pusha
pop
cmp
out
mov
push
outsb
fiadds
push
aam
fs
es
sbb
mov
movsl
push
int
mov
pop
cmc
sahf
push
xchg
nop
ja
lret
addl
pop
lods
daa
mov
sub
loop
jnp
add
jmp
add
pop
cmpsl
and
mov
lea
int3
sbbb
das
sahf
inc
aaa
arpl
mov
test
cmc
adc
push
sbb
push
and
int3
dec
in
inc
and
dec
jle
rcll
and
repnz
cld
xor
call
mov
xchg
test
sub
mov
and
jge
in
outsb
or
inc
xlat
mov
dec
mov
outsl
inc
push
jbe
push
cmp
gs
add
mov
loopne
jo
cmpsb
pusha
pop
mov
xchg
enter
repz
outsl
dec
xchg
adc
cmpsb
imul
int3
push
sub
and
jl
adc
int
fwait
xchg
iret
loopne
dec
add
mov
lret
xchg
dec
push
loopne
push
xlat
ljmp
and
adc
adc
xchg
add
dec
test
dec
mov
pop
aam
cmp
mov
mov
xchg
dec
sub
ss
repnz
test
mov
sub
push
rol
cs
push
push
or
push
iret
movsl
fwait
pop
sub
std
fdivrl
jle
cmp
insl
mov
sub
push
mov
rcrb
or
stc
test
jmp
movsl
cmc
ljmp
lea
dec
pop
xor
out
add
in
and
outsb
sbb
jmp
cmp
dec
insb
lahf
jg
es
push
ret
fcompl
sbb
push
stos
dec
cld
xor
xor
push
test
mov
bound
xor
fnstenv
ret
arpl
pop
push
pop
sub
roll
ljmp
leave
sbb
mov
push
pop
dec
cld
mov
cwtl
or
push
jo
push
adc
movsl
data16
xchg
fildll
pop
inc
rcll
xor
lcall
sub
inc
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
adcb
movlps
dec
lods
sub
sub
pop
push
pop
xchg
lret
inc
jo
lea
leave
sahf
jmp
int
and
dec
xchg
push
repnz
push
call
test
leave
push
push
xlat
sti
aam
std
in
hlt
sahf
jmp
xchg
iret
in
adc
lods
xor
testb
xor
mov
pop
jge
mov
push
xchg
into
jl
aaa
pop
ret
pop
fadds
mov
decl
add
arpl
sub
xchg
fstl
push
repz
add
sbb
xchg
ja
push
mov
cmp
push
jae
sub
dec
je
addb
pop
and
ljmp
jbe
adc
es
pop
inc
filds
stos
push
hlt
jecxz
or
mov
sbb
add
pop
fs
iret
adc
out
cmp
push
and
es
shrb
dec
or
test
and
testb
iret
mov
ret
lock
mov
and
xor
lret
push
mov
add
push
shlb
add
xchg
lea
repnz
xchg
jno
jo
adc
ja
mov
inc
inc
cmp
mov
xchg
jle
mov
xchg
mov
mov
jnp
arpl
ja
popa
push
or
fisubrs
aam
ret
loop
adc
mov
mov
cmp
mov
xchg
inc
mov
jecxz
lods
adc
lods
xor
subb
pop
movsb
sub
fcompl
inc
xchg
pop
jecxz
pop
rorb
push
push
out
andl
rcrl
jne
xor
mov
scas
cmovnp
stos
xor
call
lahf
stc
xor
adcl
jmp
bnd
mov
add
push
push
and
shll
pop
negb
lock
sub
push
mov
mov
mov
popf
jo
rcll
mov
in
data16
out
adc
repnz
and
xlat
lock
mov
push
pop
pop
add
or
mov
jge
mov
mov
mov
cmp
mov
pusha
mov
or
jmp
test
xchg
dec
es
mov
ret
xchg
int
cmpsl
lock
sbb
lret
mov
and
test
sbb
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
push
pop
adc
decb
adc
mov
pushf
and
cmpsb
jns
out
imul
movsb
test
fidivs
mov
dec
mov
loope
pop
cld
xrelease
fidivl
loopne
mov
xor
jne
push
mov
stos
pusha
push
inc
mov
inc
or
push
in
sahf
cs
out
aas
adc
aaa
ret
mov
fwait
ret
inc
xor
push
lahf
es
icebp
xor
lret
imul
ret
xor
add
or
adc
movsl
in
mov
mov
cltd
gs
or
aam
ljmp
sub
lret
adc
sub
sub
cmp
cmp
in
mov
and
fcoms
mov
mov
lock
mov
mov
inc
ds
adc
sub
dec
sbb
fidivs
sub
inc
cltd
arpl
test
push
mov
int3
in
in
jl
push
xchg
adc
pop
call
mov
mov
clc
ret
or
xchg
loope
popl
test
push
jecxz
fidivrs
fs
fadd
adc
pop
add
out
or
cmc
pop
push
fidivrs
pushl
push
out
cmp
les
fisubrs
int
mov
dec
je
mov
dec
add
mov
adc
inc
aaa
jno
popa
mov
add
inc
fiadds
lret
imul
push
lds
xchg
dec
cmp
aas
push
sarl
mulb
mov
pop
in
inc
jno
stc
add
inc
mov
dec
aam
dec
fidivl
jns
xor
mov
sub
xchg
lods
je
movsb
adc
adc
mov
imul
cltd
sbb
pop
push
movsl
aaa
sbb
in
push
adc
xchg
addl
pop
xor
mov
mov
adc
sub
roll
ljmp
jo
inc
adcb
cmp
out
mov
popa
push
movsl
jp
pop
movsb
hlt
test
scas
xchg
lods
dec
loopne
jnp
lods
dec
xor
and
sub
stos
ror
aam
adc
imul
ss
cmpsb
decl
jg
test
jb
repz
xchg
sbb
adc
lods
push
fisttpll
vphsubbw
clc
aas
push
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
push
cmpsl
adc
push
adc
decb
adc
loop
sub
movsb
leave
sbb
mov
sub
mov
data16
into
jle
popa
mov
cmpsl
adc
incl
das
mulb
mov
xchg
bound
dec
nop
in
mov
pop
pop
stos
les
push
mov
xor
or
inc
addl
inc
pop
shrl
dec
stos
repz
repz
cmp
jecxz
pop
nop
xor
outsb
push
lret
or
push
cld
stc
or
add
repnz
pop
std
or
fld
in
or
adc
icebp
push
jns
dec
pop
add
mov
roll
fdivrs
dec
xor
movsb
test
xchg
rorl
xor
xor
adc
xor
jbe
icebp
cmpsl
addr16
jge
std
movsb
pop
in
sub
mov
inc
jmp
call
loop
push
shrl
lea
movq
loope
std
roll
xor
fs
or
sahf
inc
pop
in
fisubrl
lea
cmpsb
cwtl
xchg
movsl
xor
and
cmp
inc
mov
adc
mov
adc
cmp
xor
and
sbbl
push
dec
sbb
fwait
dec
and
and
sbb
test
and
sar
jmp
jle
jmp
xchg
jnp
pop
hlt
imul
sti
mov
dec
enter
movsb
dec
pop
or
in
stos
push
inc
jle
or
mov
aad
xor
lea
mov
outsb
sbbb
sahf
pop
inc
hlt
in
xor
pop
pop
jb
and
push
stos
lahf
out
xlat
sub
gs
mov
push
xor
sub
je
push
cltd
sbb
es
xchg
dec
andb
int3
loopne
xor
mov
stos
inc
sub
in
out
push
rclb
push
sbb
mov
movsb
fs
iret
sbb
xor
mov
outsb
lods
or
pop
movsb
repnz
lret
lret
jg
loop
cmp
ficoms
jge
rorl
push
fidivs
sub
fimull
or
mov
cwtl
roll
cmp
xchg
loopne
stc
xor
mov
outsb
outsb
inc
icebp
pop
fcompl
and
sbb
fdivrp
lods
nop
adc
in
push
add
mov
fwait
test
mov
jg
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
ds
lods
daa
dec
adc
decb
adc
rol
dec
xor
cmp
mov
aam
loope
xchg
loope
mov
mov
push
pop
push
mov
push
stos
filds
dec
scas
push
sarb
adc
in
and
and
and
dec
add
lods
cmp
mov
scas
test
jp
pop
outsl
iret
sub
pop
adc
jge
jb
jo
sub
testb
mov
test
inc
push
add
or
xchg
lret
ja
mov
pop
insl
mov
xor
mov
push
jnp
mov
inc
je
mov
adc
add
mov
lock
test
adc
mov
xlat
jecxz
fsubrp
call
push
adc
xchg
popa
in
cli
popf
fwait
xor
cmc
mov
inc
cmp
in
call
rolb
inc
mov
popf
cs
aam
mov
mov
sbb
std
loope
into
jp
cmp
xor
enter
test
push
add
mov
negl
lcall
add
lods
lea
dec
hlt
mov
xor
les
shll
fdivl
testb
bound
or
loopne
xor
ljmp
rcl
and
push
stos
mov
push
das
mov
or
mov
addl
pop
mov
xchg
in
inc
int3
sbb
ljmp
mov
mov
push
fists
andl
pop
adc
div
xor
jo
out
movsl
dec
ret
jmp
jecxz
xor
jle
fnsave
jmp
push
push
cmp
mov
sbb
add
jne
leave
pop
push
les
ja
filds
jns
mov
filds
es
dec
push
in
mov
clc
or
mov
jge
call
push
push
neg
movsb
out
xor
and
sbb
xchg
out
rorb
cwtl
or
imul
mov
push
fcmovu
fcoml
add
pusha
mov
mov
cs
pop
ror
xor
xchg
adc
inc
pop
and
jae
jnp
aad
jbe
push
sbb
pop
adc
insb
adc
movsb
push
sbb
xchg
xchg
stos
inc
call
jge
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
mov
adc
decb
adc
rcrb
ljmp
sub
inc
sbb
jns
pop
loope
pop
cmpsb
pop
sub
repnz
mov
aad
lret
xchg
sahf
adc
ja
and
sbb
lods
sahf
std
in
sub
lea
repz
and
daa
fldenv
add
enter
stc
add
cli
dec
pop
and
js
in
jne
mov
sbb
test
push
lods
loope
pop
sub
adc
push
mov
dec
les
pop
bound
push
xlat
push
cmpsl
sarb
push
into
cmp
out
sarl
push
mov
mov
loope
pusha
loop
loop
push
jbe
mov
and
sub
xchg
push
jno
dec
outsb
and
and
pushf
sub
mov
cmp
inc
sbb
fs
and
lret
mov
inc
jns
lahf
or
xchg
mov
add
sub
stos
jo
fs
mov
and
cmovp
stc
mov
and
iret
jl
popf
aas
and
loope
scas
idivl
cmc
por
clc
sbb
mov
adc
leave
into
fst
subl
jg
jne
mov
pop
jno
or
or
mov
dec
pop
push
imul
xor
pop
cwtl
inc
jo
cmpsl
fnstcw
or
mov
push
imul
fiaddl
sub
shll
jg
xchg
lahf
dec
dec
call
push
cmp
arpl
jg
pop
jnp
pop
movsl
lret
xchg
addb
pop
jne
jle
or
daa
test
loop
ret
or
xor
fistpl
mov
or
xor
inc
jb
jbe
push
jl
in
add
inc
out
sbb
adc
mov
adc
testl
test
jle
js
add
mov
xchg
jle
jb
cwtl
cmc
pop
loope
int3
xchg
xchg
cmp
test
ret
xchg
cmpsl
testb
push
outsl
sbb
jno
mov
mov
pop
jae
cmp
stos
cmp
pop
pop
iret
or
xchg
insb
outsl
xor
jo
insl
aam
cmpsb
mov
test
imull
push
sbb
insb
repnz
mov
mov
xor
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
jno
negb
shrl
mov
data16
ss
dec
repz
pop
imul
xor
cmpsb
fdivl
cmp
fucomp
jnp
mov
lcall
jg
sub
dec
lret
into
push
push
test
lahf
pop
popf
popa
jl
dec
cmp
lods
pop
imul
popa
pusha
xor
cli
or
sbb
loop
adc
adc
aaa
cmpsl
mov
outsl
and
ds
je
cmpsl
int3
push
leave
sti
inc
jno
jae
jno
jbe
pop
aas
push
jge
dec
sbb
rorb
btc
enter
fmul
push
pop
stos
cmp
cmp
lods
movsb
mov
inc
or
shrw
pop
jne
inc
fidivrl
sub
push
mov
inc
mov
xor
mov
add
test
cmp
addr16
push
mov
call
ret
dec
ds
cmp
xchg
sub
std
adc
fsub
out
es
sbb
and
call
adc
lods
aas
add
xor
movsl
add
push
ja
or
rcl
inc
xchg
lcall
jg
arpl
outsl
dec
and
das
mov
sub
inc
jo
dec
loope
mov
pop
hlt
and
cmp
and
into
jbe
std
outsl
cmp
xchg
cltd
xchg
jne
pop
je
cli
andl
jmp
add
jns
push
adc
adcl
lods
cmp
lods
subl
sub
mov
add
push
lds
push
add
dec
insl
fidivs
mov
xchg
ljmp
inc
adc
fldcw
nop
je
xor
push
fcoms
and
sbb
clc
jp
mov
mov
inc
in
push
hlt
in
sbb
js
mov
adc
lods
cmc
pusha
sub
decl
sti
shll
jo
jnp
adc
jmp
and
jmp
xor
rolb
fnstcw
cwtl
cmp
sbb
or
das
push
lcall
out
dec
fdivl
and
mov
mov
sahf
aaa
mov
in
test
icebp
cltd
sub
jmp
lods
sbb
jne
mov
lcall
loop
fucomp
sbb
push
sbb
js
mov
mov
xchg
lret
xchg
push
pop
xor
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
cltd
stos
loopne
scas
push
cs
adc
cwtl
adc
push
xchg
mov
mov
mov
jg
pop
imul
dec
inc
cs
push
scas
aam
add
out
sub
sub
and
and
adc
aam
movsb
rcll
shl
imul
and
mov
ja
xorl
pop
in
je
aaa
mov
and
xor
aad
ret
xor
mov
inc
lret
sub
clc
add
push
add
mov
mov
dec
xchg
adc
push
adc
and
pop
out
dec
cmp
xor
jbe
xorl
outsb
push
mov
popa
adc
popf
xchg
sub
loop
cwtl
sub
pop
mov
int
ss
loope
ret
mov
inc
dec
push
imul
sbb
test
test
jns
xchg
scas
ficoms
xchg
inc
push
xchg
jmp
sub
in
movsb
pop
lods
jae
imul
or
xchg
fcmovbe
adc
stos
test
mov
lea
jnp
lcall
pop
lea
mov
shll
cmp
lods
mov
cmp
movsb
push
clc
icebp
adcl
push
pop
jnp
out
gs
push
xor
shlb
and
adc
mov
xchg
popf
jle
xchg
fdiv
mov
stos
hlt
adc
ljmp
push
jg
add
ss
mov
cmp
mov
xchg
pop
push
loope
or
nop
adc
std
cmp
jmp
in
xchg
out
test
push
jbe
jge
sub
lea
int3
pushf
pop
xor
data16
mov
mov
dec
out
pop
mov
daa
jl
add
cli
pushf
sti
test
es
lods
xchg
loop
gs
adc
and
sub
mov
push
push
insl
cmpsb
push
arpl
sahf
hlt
fstpt
cmp
addb
loope
xchg
imul
dec
adc
arpl
stos
ret
jle
mov
push
jno
das
cmpsl
or
out
int3
sbb
scas
adc
ja
fidivs
xchg
pop
mov
cmp
pop
stos
lds
inc
jne
call
std
xor
in
mov
and
mov
inc
jg
dec
push
adc
inc
cltd
test
loop
repnz
pop
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
and
pop
lods
sarb
adc
testb
or
out
add
std
loopne
push
test
test
push
jnp
dec
les
mov
loope
movsl
cmp
movsb
je
push
hlt
xor
cs
fcomps
nop
adc
adc
mov
movsb
pop
xorb
mov
nop
lods
cmp
sbb
lods
fstpl
push
stos
repnz
orl
fs
loop
jae
mov
pop
push
push
aam
roll
adc
mov
imul
xlat
mov
out
enter
inc
popf
pop
rorb
cmp
dec
sbb
fmuls
test
adc
outsb
lock
pusha
pushf
inc
xchg
decb
scas
inc
mov
arpl
push
push
xchg
add
out
xor
stos
mov
enter
mov
sub
in
sub
push
jns
sub
inc
jmp
shl
ds
out
bound
pop
popa
daa
sarl
leave
sbb
es
ret
clc
arpl
addr16
notb
cmpsl
cwtl
and
xor
dec
or
jnp
xchg
sahf
std
mov
test
add
stos
cld
jae
clc
sub
or
das
add
sbb
repnz
push
push
or
mov
dec
add
xor
or
cmp
cltd
pop
ja
cmp
mov
iret
and
mov
enter
lock
mov
push
xor
lds
xlat
xor
push
lcall
fisubrl
pop
imul
movsb
stc
jnp
repz
mov
jo
leave
inc
and
mov
pop
adc
push
fidivrs
xchg
cmc
movsb
sahf
popf
sub
pop
jle
in
jb
adc
or
dec
fwait
popf
mov
mov
push
push
jae
mov
inc
xchg
sbb
frstor
int
mov
bound
outsl
test
push
lock
jo
xor
or
dec
repnz
addr16
sub
addr16
jne
les
xchg
in
iret
inc
cmpsb
lock
jnp
dec
imul
inc
cltd
and
and
mov
or
mov
cltd
rcrl
mov
xchg
je
pop
pop
xchg
ljmp
loope
orb
sub
inc
jl
pop
mov
ds
xchg
xor
fs
nop
xchg
mov
xor
loop
std
pop
fisttpl
icebp
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
cs
jle
cmp
adc
adc
dec
or
dec
fstpt
gs
adc
mov
dec
pop
ds
xor
sub
cmp
xchg
push
mov
lock
fdivr
adc
pop
ficompl
addr16
shll
pushf
mov
fmull
push
pop
leave
sti
clc
popa
push
xor
adc
xchg
outsl
sub
jno
mov
das
jg
out
out
ret
sub
adc
pop
mov
adc
lahf
addr16
aam
push
xchg
inc
lea
adcb
loope
push
movsl
and
push
sub
or
mov
mov
or
mov
mov
aad
xor
rcrb
xor
sub
add
cmp
dec
repz
pop
imul
mov
jmp
rorb
movsb
addr16
imul
mov
out
bound
imul
sbb
rep
addl
dec
jns
unpcklps
dec
mov
cli
or
or
mov
lret
mov
dec
insb
not
cwtl
cld
pop
mov
sub
xor
adc
and
add
es
movsl
movl
popf
sbb
mov
pop
mov
mov
ja
push
push
daa
test
and
adc
or
in
mov
cmp
aad
add
mov
in
fisubl
pop
pop
insb
lret
pop
adc
sbb
xchg
dec
cmp
dec
push
inc
inc
ret
add
or
jmp
shlb
pop
jno
lea
xchg
and
dec
adc
popf
aaa
sub
filds
nop
lods
in
ja
add
ror
adc
cmpsb
push
add
pop
mov
pop
add
fadds
pop
iret
or
inc
test
roll
jno
pop
movsb
xor
xor
mov
mov
sub
test
or
push
inc
push
cs
in
outsb
push
jae
xchg
stc
es
rcr
mov
jns
lcall
jle
xchg
jno
das
leave
or
sbb
ror
ret
out
jge
jg
pop
pop
jae
xor
and
dec
mov
jecxz
aad
cmp
sbb
imul
sbb
lods
mov
push
mov
imul
mov
mov
mov
xchg
xchg
push
xchg
cmp
fdivs
mov
dec
imul
daa
fwait
mov
cmp
scas
adc
push
mov
and
push
cmp
outsl
cmp
std
loope
pop
add
and
icebp
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
lea
js
das
adc
popf
movlps
add
jmp
sbb
pop
aam
mov
inc
pop
in
fdivl
stos
adc
inc
mov
jl
adc
xchg
dec
aas
fldcw
pop
inc
cmp
dec
jg
inc
add
mov
pop
jmp
and
mov
aaa
das
lock
add
int
js
jae
and
sbbb
add
mov
dec
mov
push
jmp
mov
mov
scas
mov
int
or
inc
push
xchg
lods
nop
inc
cmp
fisubrs
push
sbb
push
push
dec
inc
inc
or
jecxz
ud0
mov
fstl
pop
and
je
pushf
mov
pop
sub
aaa
add
mov
cmp
das
dec
pop
dec
fs
aam
push
xor
jne
bound
cmpsb
ja
adc
rorl
inc
xlat
sbb
insl
mov
sbb
xchg
inc
ds
insb
push
jno
popa
push
shlb
push
imul
xor
sarl
out
mov
pushf
pushf
pop
sti
push
pusha
cmp
fwait
lods
push
hlt
jb
adc
in
dec
enter
mov
cwtl
enter
jae
into
and
jne
inc
mov
shll
dec
andb
xor
insb
pushf
notb
rcrb
aas
push
dec
add
push
cmp
clc
sarb
repz
mov
es
mov
pop
or
cmpsb
mov
pop
xchg
fsubl
mov
xchg
pop
xor
cmp
and
scas
jo
es
arpl
fidivrl
pop
jp
stos
rcrl
in
flds
push
pop
inc
shll
xor
jp
add
cmp
dec
sahf
pop
add
cmc
sub
push
loop
inc
test
std
or
xor
push
mov
sahf
sbb
loopne
jmp
fwait
arpl
jb
sbb
aaa
addr16
mov
arpl
ret
shlb
jbe
fnstenv
loop
shlb
movsb
arpl
fdivs
lcall
in
mov
jle
stos
push
push
ja
push
cwtl
mov
cmpsb
push
add
push
pop
sub
shrb
sub
sub
mov
or
clc
or
mov
in
rclb
into
out
push
loop
xchg
or
jne
notl
add
out
jl
sub
out
pop
sahf
in
std
sarl
pop
jbe
mov
xor
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
enter
ss
sbb
inc
repnz
push
push
out
cmp
lcall
mov
mov
mov
xor
les
addl
cmp
mov
int3
js
sbb
mov
aaa
adc
mov
lret
inc
nop
cmp
subb
movsl
call
add
jp
sub
jne
sbb
loope
cmovg
lds
dec
and
fs
jmp
mov
daa
adc
in
popf
mov
adc
stos
dec
jl
dec
lds
into
idiv
xchg
xchg
lret
mov
hlt
push
xlat
cld
mov
xchg
mov
lods
cmp
inc
data16
cmp
push
cmpsl
mov
cltd
outsl
js
shll
jp
fsubrs
scas
xor
iret
sub
and
xchg
lcall
neg
sub
rcr
add
sub
in
mov
or
fdivs
loopne
test
xor
sub
mov
adc
jle
mov
sar
inc
movsb
leave
nop
fcompl
inc
fsubrl
mov
push
xor
icebp
mov
in
push
jl
xchg
outsl
mov
jmp
xor
mov
test
pop
push
lea
fildl
sbb
mov
mov
adc
and
lods
icebp
test
and
sbb
pusha
outsb
cli
push
mov
cmpsl
jp
pop
aam
lret
test
jo
pop
clc
lds
popf
pushf
adc
aaa
or
ljmp
push
stc
inc
imul
pop
mov
int3
lea
aaa
cmpsb
jbe
nop
pop
into
dec
out
pop
call
xchg
mov
adc
jl
xchg
xchg
inc
mov
add
aad
out
xlat
inc
jae
ss
sbb
and
dec
push
loop
adc
aas
arpl
mov
mov
inc
mov
push
mov
stos
push
cmp
cmpsb
sarl
ss
lods
or
lcall
cmpsl
hlt
es
sbb
subb
push
pop
push
pop
push
add
dec
mov
xor
nop
outsl
adcl
faddl
outsb
mov
scas
lods
mov
mov
push
dec
push
enter
dec
xor
int
adc
mov
stos
dec
push
cld
push
xor
xchg
rclb
lock
mov
mov
dec
bsf
syscall
xchg
cmpsl
daa
test
xchg
leave
or
cmp
movsl
jmp
icebp
fisubl
scas
sub
sbb
cmpsl
int3
out
adc
fnstsw
lret
sbb
and
add
ret
hlt
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
fsubs
cmpsb
sbb
jno
stos
add
mov
cld
mov
icebp
cmpsl
adc
divl
out
inc
ja
sbb
addr16
jmp
not
jno
data16
and
mulb
lods
adc
cmpsl
aad
lcall
jle
mov
cld
or
mov
and
test
hlt
adc
mov
hlt
sbb
pop
push
jbe
iret
jl
cld
fiaddl
jl
sbb
stos
aaa
or
xchg
imul
in
aam
jecxz
sbb
arpl
and
cmp
loop
test
or
in
icebp
jmp
data16
and
and
mov
fcmovbe
sub
sbb
sbb
jns
mov
add
or
cwtl
std
movsb
cmc
mov
inc
mov
cmc
and
ret
bound
outsb
dec
push
pushf
mov
into
xchg
jecxz
lret
jge
fcomp
mov
std
mov
test
dec
pop
inc
shll
shlb
sbb
les
and
add
push
mov
int3
add
pop
addr16
insb
out
push
xchg
jae
push
pushf
insl
lcall
or
repnz
test
sti
xchg
mov
test
pop
cmp
cmc
test
insl
sub
jge
loopne
adc
fwait
and
mov
test
mov
das
mov
fsubrp
jae
xor
xchg
icebp
jb
test
jns
or
aam
scas
loop
cmc
repnz
adc
inc
dec
out
pop
pop
loopne
jne
inc
add
and
inc
mov
imul
stos
out
cltd
pop
and
movsb
fdivs
in
sbb
dec
subb
or
sbb
shl
mov
out
mov
imul
out
orl
pop
and
cwtl
or
mov
lcall
test
mov
mov
sub
sbb
mov
mov
leave
scas
mov
jne
jle
int
sbb
aaa
subl
les
imul
lods
stc
pop
push
cmp
dec
fwait
repnz
lods
mov
icebp
arpl
add
fcmovbe
outsb
ret
popa
jb
mov
or
or
pop
insb
adc
aad
jne
sub
stos
call
in
jno
loope
mov
pop
and
rclb
sarl
xor
add
inc
rorb
push
inc
test
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
enter
adc
iret
movlps
mov
cmp
ds
fidivl
jl
or
out
or
xor
inc
adc
sub
clc
fisubrs
les
jle
mov
jne
ret
cmp
sub
or
clc
iret
leave
in
je
push
pop
adc
bndstx
jmp
sub
jge
lahf
and
sbb
test
lock
movsb
sub
mov
inc
mov
cmpsb
adc
mov
shlb
xor
push
sbb
xchg
fcoms
xor
int3
mov
dec
add
std
push
mov
std
pop
lods
outsl
inc
ljmp
shl
mov
jo
pop
lds
fdivrl
icebp
mov
fistpl
cmp
xchg
outsb
ljmp
les
add
push
cmp
xchg
push
sahf
fidivs
stc
sbb
cmp
fbstp
fwait
lahf
xchg
test
adcb
loop
test
scas
ja
mov
xchg
fldt
or
mov
imul
jecxz
jno
ljmp
jecxz
mov
hlt
je
jmp
shrl
mov
negb
pusha
adc
lods
sti
rorb
xchg
outsl
mov
repz
pop
cmp
fldenv
or
mov
jmp
pop
mov
xor
mov
or
arpl
in
push
mov
pop
inc
jl
lds
mov
loop
orb
es
pop
lock
cmp
adc
pop
inc
insl
sbb
mov
sbb
cmpsl
call
mov
cmp
jl
or
xor
and
inc
adc
imul
mov
and
and
std
pop
pop
cltd
hlt
popa
xchg
fadds
subb
fcoml
sub
js
aam
jns
pop
ret
jge
call
add
ret
out
lds
aam
or
loopne
rclb
and
jbe
repz
out
cmp
or
repnz
add
jbe
jmp
daa
ficompl
push
dec
jo
fs
mov
and
xchg
aas
in
adc
pop
mov
sbb
pop
aam
nop
and
cld
sub
arpl
mov
aad
fstpl
call
lret
repnz
mov
sub
lods
out
outsl
sar
in
or
and
jo
ss
xor
inc
pop
cld
add
mov
xchg
xor
cli
jns
test
clc
cld
xor
inc
and
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
or
adc
iret
movlps
pop
push
push
call
mov
cmp
jmp
mov
sarb
inc
hlt
and
mov
mov
dec
cs
sub
fimull
loope
inc
jb
popa
divl
xor
rcrl
aas
push
flds
dec
push
sarl
xchg
push
jmp
add
mov
out
xchg
pop
gs
push
outsl
mov
pop
mov
jl
mov
call
orl
and
out
mov
push
daa
sub
mov
jo
in
or
jae
dec
lds
xchg
adc
cld
ret
push
mov
add
pushl
and
jae
and
arpl
loopne
push
das
mov
popf
repnz
inc
icebp
or
xchg
icebp
faddp
push
and
scas
lcall
mov
sbb
cmp
xchg
cld
push
fsubs
pop
lea
lahf
fcompl
aad
cmp
xlat
mov
in
daa
clc
pop
jne
mov
jecxz
dec
dec
imul
iret
mov
mov
fnstsw
aas
sub
scas
lcall
in
and
xchg
lcall
test
gs
mov
pop
arpl
out
lea
stc
fsts
mov
mov
data16
inc
push
pop
jo
aam
xor
call
leave
movsl
dec
leave
aad
push
loope
or
sbb
jge
in
adc
fadds
adc
push
mov
sbb
xor
and
dec
subb
jae
ljmp
mov
dec
mov
pop
iret
lea
pop
les
sbb
jno
movsb
mov
or
faddl
hlt
nop
mov
int
push
mov
push
std
imul
faddp
add
pop
loop
out
lret
outsb
stc
or
ss
insb
mov
cli
cmpsb
xchg
xchg
sbb
stc
mov
popa
jge
jnp
mov
test
xlat
mov
dec
cmp
push
roll
push
pushf
jecxz
or
xchg
push
or
jnp
push
cmovne
mov
push
enter
pushw
and
mov
xchg
shlb
sub
xchg
push
add
adc
push
sahf
ja
jge
adc
mov
mov
mov
fildl
adc
enter
sbb
movsb
ret
fwait
pop
jge
in
inc
xor
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
mov
adc
adc
inc
lcall
es
nop
lret
mov
test
into
rol
adc
xor
pop
sbbb
add
orb
add
mov
mov
push
jnp
inc
add
out
imul
test
loopne
aas
adc
sub
lret
outsb
lods
sub
mov
insb
push
xchg
dec
mov
jnp
xor
cmpsb
int
pop
mov
push
outsb
sbb
jl
cmp
jg
iret
scas
pop
inc
sbb
gs
pushf
imul
sbb
xchg
jno
je
xor
adc
lds
sub
int
je
imul
pop
sub
push
repz
and
test
push
mov
in
xchg
shlb
fidivl
push
add
lcall
mov
mov
popa
loop
adc
les
push
fildll
ret
dec
popa
stos
pop
mov
mov
push
xchg
inc
add
pop
aad
push
cmp
jmp
in
shlb
insl
insl
mov
aam
adc
xorl
cmp
lea
adc
aad
testb
in
sbb
add
mov
int
xor
int
stos
data16
cmpsl
fsubrl
loopne
fistpl
mov
rolb
xchg
xchg
or
test
and
popf
sub
stos
mov
push
int3
fildll
scas
nop
adc
jb
aas
lods
aam
cld
xchg
inc
ss
leave
inc
stos
pop
or
xchg
push
outsl
shlb
pop
pop
sti
test
ret
imul
sti
pop
pop
scas
lods
cltd
test
ret
and
or
xor
jnp
and
loope
stos
jae
mov
mov
out
lds
lods
sub
pop
in
add
and
les
xchg
mov
sub
in
rolb
push
lret
mov
sti
cmp
scas
xor
mov
bound
fldt
iret
sbb
dec
xor
pop
movsl
out
inc
xlat
mov
push
mov
shr
stos
movsl
push
shrb
xchg
adc
sahf
int3
push
push
push
fs
jo
pop
push
enter
push
addr16
mull
jns
lds
sbb
push
in
jae
lret
fsubr
dec
pop
lea
xor
ret
mov
popa
pop
fdivr
arpl
into
ret
notb
jg
lea
cmpsb
pop
mov
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
mov
adc
adc
into
pop
loop
lock
inc
add
pop
xor
add
push
xchg
push
jb
sbb
hlt
push
fwait
jnp
icebp
dec
shl
in
ljmp
lds
cmp
ret
push
pop
sub
ja
mov
rcrb
pop
lods
mov
repz
mov
mov
mov
shll
shrl
mov
pusha
jmp
adc
pop
cmc
stos
jecxz
or
stc
mov
into
and
data16
dec
add
mov
in
mov
pop
sbb
pop
aam
shl
push
dec
adc
imul
dec
and
mov
mov
pushf
lods
and
data16
sub
and
sbb
insl
outsl
repnz
loopne
pop
cwtl
mov
rcl
lds
in
xor
mov
in
adc
test
jp
cmp
sti
add
aas
and
addr16
test
outsb
sub
adc
cmp
mov
adc
ds
leave
lahf
ret
test
xor
xchg
xchg
mov
or
pop
icebp
dec
mov
stos
les
shll
mov
test
sbb
stos
lods
xchg
inc
sti
add
lock
ss
or
stc
adc
mov
push
fcmovne
out
cmp
mov
mov
fldcw
ljmp
int3
and
loop
sti
insl
rolb
scas
scas
rcll
mov
fdivl
and
inc
sarl
sub
and
stos
fs
mov
dec
call
sti
mov
stc
rcpps
mov
ja
jmp
sub
lea
mov
cmc
and
pop
movsb
push
push
lret
sti
data16
sub
cmp
xchg
sbb
jl
ret
pop
nop
imul
mov
imul
pop
mov
cmp
int3
push
mov
mov
jnp
mov
popf
adc
mov
in
aam
in
insb
outsb
jmp
mov
ret
sub
out
clc
test
int
mov
ja
mov
in
pop
mov
fnsave
mov
adc
jno
ds
inc
pop
cmp
mov
jnp
test
jne
ja
or
ja
pop
xorl
push
or
or
jmp
dec
pop
imul
enter
xor
iret
movlps
pushl
sbb
jg
xor
xor
ret
push
ja
dec
add
lods
stc
xor
xchg
dec
sub
cltd
cmp
mov
into
pop
cmpsl
dec
bound
inc
test
mov
enter
xrelease
adc
xchg
push
ds
test
shll
lret
push
mov
mov
fisttpll
std
inc
aas
sbb
mov
popa
dec
movsl
add
push
hlt
sub
xchg
push
mov
cmp
mov
xor
xor
or
fdivrs
pop
ret
sahf
pop
dec
xchg
inc
mov
enter
lds
cwtl
insl
inc
fwait
dec
arpl
jl
shlb
shr
std
cmp
push
sub
outsl
test
loope
mov
and
dec
shrb
popf
push
dec
mov
movsl
ds
sub
mov
or
dec
inc
dec
loop
and
pop
sbb
sbb
add
add
lock
jg
lret
lods
sub
cmpsb
imul
fwait
popw
add
inc
add
mov
pusha
inc
cmp
sbb
andb
stc
aad
push
adc
lcall
xorl
sbb
in
mov
mov
mov
sti
push
add
sub
xor
add
and
stos
sub
fisttps
dec
sbb
and
inc
movsl
ror
xor
fdivl
jg
dec
testl
stos
out
fnsave
mov
das
repz
pop
fbld
cmpb
leave
push
jecxz
fadd
mov
add
fcmovnbe
and
adc
xlat
xor
mov
pop
pushf
pop
mov
stos
outsl
ret
xor
or
or
mov
je
dec
rcl
jbe
je
xlat
imul
cmp
mov
js
cmc
out
ja
or
cmpl
mov
xor
jge
addr16
fsubrp
repz
mov
mov
dec
jmp
pop
outsb
ds
cmpsl
bound
rorb
movsb
inc
push
pop
and
push
enter
popa
dec
inc
xor
movsb
pusha
sub
jg
push
push
in
lret
mov
mov
sub
arpl
jae
loopne
cmp
mov
das
mov
add
push
jne
push
add
add
pusha
mov
and
sub
inc
sarl
adc
xchg
jp
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
push
jo
adc
ret
xchg
testl
push
mov
mov
pop
cs
enter
xor
pusha
fcoms
in
aaa
pop
mov
mov
dec
stos
adc
or
mov
mov
or
add
aam
inc
je
mov
pop
pusha
test
cmp
test
leave
push
cli
jnp
mov
lock
movsb
imul
sbb
in
movsb
cs
mov
mov
mov
cmp
ja
aad
bound
sbb
sbb
or
ret
cmpsl
pop
mov
and
jae
fstpt
mov
pop
cld
inc
sti
add
mov
xor
in
push
cmpsb
fisubrs
xchg
repz
jmp
pop
adc
inc
and
les
mov
mov
scas
lahf
mov
cld
mov
inc
and
mov
bound
mov
mov
mov
fistpl
leave
or
and
jns
ss
clc
in
and
mov
cli
sbb
add
mov
fisubs
jnp
sub
jns
dec
sub
and
orl
add
test
cli
sub
and
jo
cld
bound
pop
in
loopne
and
adc
mov
or
xor
mov
push
scas
push
add
or
cmp
add
cmpsl
out
daa
mov
scas
pusha
shrl
push
out
dec
mov
dec
jo
jecxz
hlt
pop
mov
pop
mov
add
fistpl
adc
ljmp
scas
aam
inc
push
xchg
xlat
fs
inc
les
out
lcall
inc
movnti
mov
jnp
lcall
mov
leave
outsl
mov
xchg
mov
xor
pusha
es
lret
loopne
lea
loope
xchg
cld
adc
int3
pop
adc
iret
out
pop
xchg
push
xchg
pop
xchg
call
pop
xor
push
in
xchg
mov
jp
mov
xchg
lock
fdivl
jno
mov
daa
lret
sbb
mov
pop
mov
nop
pop
aas
stos
mov
and
and
mov
enter
sub
push
mov
jns
repz
xchg
les
xchg
ss
mov
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
outsb
insb
cld
call
adc
sbb
das
cmc
xor
dec
mov
cli
mov
inc
insb
icebp
popf
push
ror
cmp
pop
add
sbb
mov
fisubl
or
cmp
leave
dec
fimuls
shr
mov
lds
or
sub
cld
cs
rcrb
pusha
dec
fbstp
pop
cmp
push
testl
and
lea
mov
sbb
hlt
lahf
test
lds
test
imull
jns
push
fcmovu
xchg
cmc
lea
rcrl
les
out
loope
push
repz
sub
shl
out
fmull
dec
sbb
xchg
mov
cli
and
popl
scas
mov
mov
adc
gs
inc
cmp
add
sbb
js
lret
popl
addb
scas
jp
stos
xor
jmp
insb
mov
jecxz
jmp
int3
and
je
fidivs
ds
adc
mov
and
lahf
adcl
bnd
or
rclb
cmp
push
mov
sbb
cli
ljmp
test
mov
shlw
aam
pushf
mov
leave
aaa
mov
lcall
iret
cmp
xchg
stc
dec
sub
mov
jecxz
inc
out
push
jnp
pop
lods
in
aaa
popf
cmp
adc
cmp
stos
adc
jne
jae
xchg
mov
adc
aam
loope
xor
push
or
inc
mov
mov
xchg
jbe
lods
sbb
sub
int3
enter
pushf
ss
dec
test
sahf
push
pusha
js
fs
std
cmpsl
hlt
sar
scas
lcall
adc
mov
imul
jb
movl
fst
pop
and
bound
test
pop
rorb
pop
jmp
or
mov
mov
loop
subl
aas
xor
sub
adc
adc
add
aaa
mov
jp
les
sub
xchg
inc
mov
push
jle
xchg
movsl
jp
push
loope
inc
lea
and
add
icebp
xchg
loop
dec
mov
jb
aad
or
push
in
leave
pop
icebp
fwait
aaa
xor
fstpl
sbb
push
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
add
out
dec
sub
scas
and
push
mov
cs
test
push
outsb
mov
sub
jne
lock
or
mov
dec
into
popf
mov
pop
pusha
cmp
fwait
mov
mov
ds
cmp
cmp
stc
mov
or
in
sbb
shlb
imul
mov
mov
pop
movsl
or
dec
mov
cmp
rorb
mov
fstpt
and
adc
ret
cmp
jns
std
mov
test
hlt
outsl
or
jo
lds
arpl
shll
jg
and
pushf
or
out
pop
fidivrl
data16
mov
jns
enter
mov
clc
cmp
pusha
or
aad
dec
or
mov
test
mov
sarl
cmp
imul
jae
xchg
insb
lea
xchg
cli
sub
lea
push
hlt
repnz
xchg
clc
jmp
sub
jne
cli
cmc
pushf
cmc
in
inc
jne
inc
add
push
fiadds
bound
pop
pop
adc
add
sbb
add
jae
lahf
adc
xchg
xor
push
pop
dec
lret
pop
add
aas
xor
or
xor
sbbl
insl
cmp
adc
xlat
push
lahf
sti
fiaddl
cmp
adc
fwait
into
jnp
xorb
incl
dec
shlb
ss
jne
punpckhbw
gs
mov
outsb
lods
mov
out
lea
mov
popf
mov
clc
sti
and
shlb
incb
packuswb
mov
mov
lea
insb
push
adc
scas
data16
in
xor
mov
add
stc
sbbl
std
cmp
jns
inc
jge
lret
xchg
flds
cli
inc
lcall
fdivs
sbb
stos
addr16
push
clc
mov
mov
insb
mov
xor
cmp
and
mov
loope
dec
mov
mov
data16
or
sub
push
es
and
mov
je
push
lahf
negl
test
pop
xor
push
add
addr16
pop
xlat
stos
icebp
jnp
nop
cmpsl
sub
in
loopne
jecxz
cmpsb
xchg
movsl
mov
clc
es
test
push
lret
or
push
ja
dec
popa
xor
adc
lret
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
ds
xchg
js
stc
adc
adc
adc
fbld
dec
and
xor
scas
jmp
push
add
pushf
aad
add
sti
cs
cli
adc
mov
add
icebp
je
adc
mov
mov
ret
popa
nop
cmp
sbbb
stc
and
adc
and
out
push
int
jns
ret
or
add
cmpsb
sbb
imul
testb
mov
std
jmp
jo
das
lahf
or
mov
iret
movsl
lds
popa
addr16
xchg
iret
mov
mov
and
cmp
out
add
imul
imul
icebp
mov
stos
rolb
push
mov
or
inc
pop
fistl
jl
fsts
fistps
out
push
cmpsb
adc
cmc
pop
mov
pop
xchg
pop
mov
jbe
cmp
outsl
pop
pop
sahf
mov
dec
fs
pop
outsl
add
dec
push
mov
and
or
ret
mov
js
imul
adc
jo,pt
adc
mov
xchg
in
adc
push
push
pop
or
lret
test
inc
sbb
mov
rcrb
jns
or
sbb
fldt
sub
idivl
push
stc
sub
or
popl
inc
jge
inc
xchg
add
lock
or
push
and
out
push
inc
inc
or
sbb
cs
push
aad
mov
cwtl
out
ret
jle
lock
fcmovne
lret
les
outsb
ret
and
jbe
cmp
lcall
in
jge
sti
inc
inc
popf
push
xor
push
xor
loopne
out
shrb
loope
or
mov
pop
ds
mov
sti
adc
cmp
pop
clc
push
lahf
adc
idivb
jns
cmpsl
mov
dec
jle
out
mov
cmp
out
mov
cmp
adc
mov
lret
dec
lahf
pop
sbb
mov
cltd
or
test
and
xor
iret
stos
xor
sub
imul
mov
inc
mov
pusha
adc
rolb
mov
test
out
mov
mov
lret
gs
adc
lock
xchg
arpl
dec
sbb
je
out
imul
xor
inc
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
cmp
dec
mov
iret
movlps
shlb
cmp
int3
jmp
lret
les
xorl
mov
outsb
mov
push
jae
aaa
shll
push
repnz
int
cmpsl
popl
jno
cs
and
pushf
inc
dec
pop
cmp
scas
lea
imul
imul
lcall
pop
sti
sbb
cmp
bound
jns
sbb
repnz
cld
ljmp
jne
mov
mov
pusha
in
mov
mov
xor
cli
out
in
mov
fiadds
mov
sbb
adc
movsb
push
pop
iret
adc
or
jp
sbb
ret
pop
inc
test
cmp
mov
and
nop
cmpsb
fiaddl
ret
xor
int3
pop
repz
push
cmp
shll
xchg
sub
mov
insb
fsubl
ds
ret
lcall
pop
adc
push
pushf
sbb
imull
jne
sti
pop
xchg
loop
popf
mov
mov
into
pop
pop
xor
push
std
pop
mov
mov
mulb
inc
mov
push
pushw
test
xor
mov
xor
mov
xor
scas
cs
lods
push
xor
test
and
jge
ds
cs
daa
sbb
roll
pop
cmp
mov
jge
mov
stos
adc
daa
cltd
pop
inc
push
repnz
mov
or
push
inc
into
sbb
outsb
mov
rclb
mov
jo
test
cmp
mov
out
icebp
pop
inc
adc
rclb
inc
pop
mov
xchg
bound
imul
jmp
add
test
shrl
xlat
fbstp
in
andl
pushl
mov
daa
lods
imul
test
in
lock
adc
pop
xchg
arpl
scas
push
and
xor
sbb
pop
sti
or
mov
mov
lock
sbb
fcoml
cmp
arpl
in
mov
mov
jl
or
arpl
loop
mov
imul
fistl
jb
push
adc
shll
hlt
xchg
push
mov
and
xchg
sti
scas
enter
out
lods
cmp
pop
mov
fcompl
pop
jmp
and
dec
popa
or
sub
xchg
dec
mov
cwtl
insl
add
outsb
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
rcrb
in
adc
adc
or
jno
ljmp
cld
pop
xor
leave
movsb
iret
xchg
mov
push
jmp
dec
cmpsb
push
lds
cltd
push
int3
adc
cli
push
call
mov
pop
sbb
ss
cmp
loopne
scas
or
test
je
cmp
jl
fcoml
call
sbb
pop
mov
add
loope
mov
mov
add
sti
xchg
addr16
mov
xor
mov
adc
dec
mov
loop
mov
adc
xor
push
mov
pushf
fistpll
scas
cld
jb
push
push
pop
dec
stos
sar
mov
loope
fistl
call
cmc
fadd
push
xchg
test
sub
dec
orl
pop
fsubrl
push
xor
femms
mov
int
xor
leave
inc
mul
mov
ret
movups
cmp
loopne
jb
shl
jns
arpl
mov
iret
or
and
add
loope
in
fmul
pop
cmpsl
inc
imul
shrb
into
jmp
add
adc
icebp
pusha
pop
addr16
xchg
faddl
cmp
adc
lret
fadd
jecxz
int3
and
mov
loop
push
xchg
roll
sbb
iret
lahf
pop
les
loope
popa
cmc
jge
cltd
xchg
js
mov
stos
cmc
mov
adc
sbb
pop
outsl
mov
shlb
std
cmc
xchg
stos
cmp
push
cmp
pop
imul
sub
loop
add
data16
sahf
sub
or
adc
push
xorb
adc
ljmp
xor
repz
xchg
je
js
aaa
cwtl
xchg
call
push
arpl
lahf
rorl
das
dec
ss
xchg
cmc
mov
insl
aam
scas
in
sub
or
xor
mov
push
decb
adc
sbb
repnz
repz
sub
inc
cli
es
imul
jae,pt
pmaddwd
and
sbb
push
inc
push
fisubl
push
inc
out
inc
sbb
mov
or
xchg
and
leave
mov
mov
test
sub
xchg
or
movsb
and
loopne
roll
mov
adc
lock
jns
int
xlat
hlt
and
scas
insb
mov
stos
in
jb
pusha
test
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
cmp
jl
cli
test
add
adc
movl
imul
ds
push
lret
std
in
xchg
es
and
mov
imul
lret
mov
adc
mov
in
sub
mov
inc
ret
jnp
sub
hlt
and
sbb
sub
into
adc
cs
mov
pop
aad
jne
push
repz
push
push
fiaddl
cwtl
jle
jle
xchg
adc
inc
dec
or
pop
xor
ret
sub
imul
cmp
scas
add
fcoml
xchg
lds
mov
out
test
inc
lea
inc
sub
mov
cmpsb
push
mov
pop
xor
dec
fcmove
adc
adc
sti
push
xchg
pop
pop
push
sub
mov
pop
std
into
and
out
sub
out
jp
in
cmp
mov
adc
into
mov
mov
leave
cmp
sub
xchg
lods
pop
jecxz
fdivs
aam
jo
mov
sbb
cmp
inc
rcrl
cli
sbb
in
xor
adc
jmp
mov
pop
dec
scas
dec
idivb
push
sbb
xchg
arpl
dec
push
jp
fcomi
rcl
dec
add
jl
cmp
out
je
lds
notb
in
jmp
push
popa
and
subb
mov
lock
add
adc
outsb
mov
push
gs
mov
shrb
das
repz
les
in
push
loope
scas
ret
icebp
and
adc
xlat
xor
push
mov
jb
inc
mov
lret
push
xchg
inc
xchg
pop
adc
adc
xchg
push
mov
mov
dec
xchg
pop
mov
jae
aas
enter
pop
sub
push
sub
test
jbe
add
adc
xchg
adc
rcrl
sar
or
xor
or
mov
inc
jbe
sbb
repnz
mov
lock
icebp
xchg
cmpsb
in
pop
push
push
orl
js
inc
cltd
sbb
cwtl
into
pusha
shll
pop
inc
sub
mov
and
lret
xor
rcl
jl
cmp
das
or
rorl
xor
notb
rorb
ret
xchg
or
aaa
xchg
mov
ret
cmp
lods
popf
adc
dec
jns
add
fadds
les
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
es
loopne
adc
movlps
inc
mov
sbb
dec
push
cltd
stos
pop
ror
testb
jp
roll
push
mov
xchg
icebp
fcomps
and
and
stos
das
add
dec
jns
and
lret
push
repnz
cmp
insl
inc
xor
out
scas
xlat
lock
test
ljmp
pop
inc
inc
jp
adc
idivl
add
inc
inc
mov
sbb
mov
lods
add
add
lock
addr16
inc
or
repz
mov
mov
xchg
pop
dec
xor
cmpsb
xchg
stos
fdivs
or
pop
gs
adc
jno
loop
fs
ret
sub
cwtl
cld
shrb
rcrl
test
arpl
imul
push
mov
jno
mov
and
aam
and
mov
call
in
call
lret
sub
push
sbb
ds
mov
sbb
in
fstpt
adc
jmp
jo
or
xchg
in
out
sub
fwait
das
dec
faddl
jp
hlt
xor
stc
xchg
int3
and
push
xchg
push
loopne
inc
iret
and
xor
out
cmpsb
xlat
xchg
clc
fbld
dec
push
sub
cmp
gs
lods
xchg
inc
inc
leave
daa
add
mov
icebp
push
lods
xchg
pop
ljmp
popf
shrl
ja
mov
mov
dec
nop
jle
jb
lock
mov
repnz
sbb
enter
add
addr16
pushw
dec
scas
dec
dec
test
fidivrs
push
adc
loopne
add
inc
or
decl
mov
sbb
or
popa
xor
arpl
jmp
lret
setb
cld
push
adcb
aas
repz
cli
xor
inc
and
or
xchg
iret
subb
jg
mov
sahf
into
xlat
aam
jmp
mov
jg
out
mov
push
mov
aaa
mov
add
aas
mov
mov
rorb
pop
or
ja
jb
shr
shrl
stos
jne
ja
inc
jle
adc
cwtl
and
ja
and
jne
mov
dec
filds
push
sub
out
push
ret
stos
repnz
mov
xor
pop
mov
test
repz
das
shr
stos
xor
out
mov
rorb
cmp
xchg
dec
push
xor
aaa
cmpsb
pop
sub
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
inc
in
pop
fcoml
adc
jmp
pop
and
dec
jl
addr16
mov
nop
in
mov
add
pusha
iret
mov
aad
popa
xor
lds
xorb
notl
pop
push
sti
mov
shrb
int3
loop
test
ja
mov
pop
scas
jne
popa
in
pop
cltd
add
fildl
add
mov
data16
addr16
int
push
xchg
and
push
adc
adc
add
jg
leave
mov
push
outsl
out
out
or
jecxz
mov
enter
jb
sub
mov
out
sub
mov
ljmp
mov
xchg
in
inc
iret
movq
lret
sbb
push
push
add
pusha
pop
add
iret
or
push
repz
insb
or
pop
sbb
leave
leave
push
cmpsl
sbb
in
imul
lods
fistps
sbb
add
inc
or
xor
dec
xchg
lahf
cmp
cmpsb
cmp
movsl
int3
bound
insb
xor
sbb
andb
stc
stc
or
loopne
or
mov
pop
mov
mov
les
fsubl
stos
or
pop
sub
and
cmp
mov
inc
inc
pop
mov
push
ret
add
ret
iret
pop
mov
dec
scas
pop
lods
sub
xor
aam
cld
iret
xor
aam
test
pop
dec
xor
mov
push
jge
insl
xchg
repnz
repnz
mov
gs
es
in
jmp
pop
mov
xor
fisubl
loope
dec
push
aad
out
push
cwtl
push
pop
cld
pop
icebp
out
sarb
push
lcall
xchg
loopne
das
ret
mov
enter
inc
loopne
cmc
sub
dec
in
lds
mov
shll
mov
lods
push
xchg
test
roll
leave
xchg
or
xor
es
xchg
stos
xor
inc
push
and
stos
into
dec
pop
dec
mov
dec
fstpt
insb
ror
js
rcl
or
inc
pusha
fstpl
pop
mov
popf
push
test
dec
sbb
cmpsb
hlt
push
jne
rcrl
push
mov
dec
in
sub
pop
lock
int
loop
in
lods
jp
fisttpll
fs
sti
lcall
lock
add
lea
sbb
inc
cli
cli
add
inc
lock
sbb
adc
loope
sbb
movsl
cmc
insb
lret
jp
dec
ds
in
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
mov
adc
adc
ss
pop
shlb
outsb
cld
push
jmp
xchg
hlt
mov
dec
jle
loopne
cmpsb
add
xchg
add
mov
xor
or
mov
stos
jmp
and
jmp
out
div
cmp
fwait
inc
lock
ljmp
decb
notb
mov
jmp
data16
xchg
mov
hlt
pop
outsl
adc
arpl
mov
or
int3
mov
inc
inc
xchg
cmpsl
cltd
mov
rclb
fs
lds
push
mov
mov
sub
xchg
adc
push
in
clc
pop
push
xchg
sbb
cmp
push
je
pop
mov
sarb
mov
into
divb
mov
xor
popf
mov
and
mov
jp
ss
std
std
push
mov
adc
mov
or
mov
push
mov
xchg
xchg
xor
and
push
and
push
sahf
int3
ret
test
pop
int3
outsl
push
push
push
jae
and
dec
sbb
fiaddl
popa
fldt
repnz
adc
and
and
pop
popa
hlt
add
pop
lcall
jno
mov
dec
mov
loop
imul
sub
push
fdivs
mov
dec
fistl
ja
xor
or
cmp
dec
add
mov
xchg
inc
js
inc
cmp
rcll
push
inc
into
inc
or
mov
loope
xor
out
inc
inc
and
shrb
mov
scas
scas
aad
cmpsl
fidivrl
xlat
hlt
outsl
push
into
cmp
jmp
adc
sub
xchg
push
adc
push
xlat
rolb
push
pop
and
pushf
sub
jne
addl
sbb
push
scas
sbb
popl
out
movsl
ret
pop
lds
xchg
jecxz
gs
lds
rcrl
stos
scas
sbb
pmulhuw
or
push
add
cmp
jne
lret
jg
push
je
shl
dec
xor
and
pushf
jecxz
sub
bound
fnstcw
out
dec
add
lea
stos
pop
imul
shll
jno
scas
ret
cmp
andl
sub
iret
bound
in
xor
lds
mov
lcall
xchg
mov
sbb
popa
mov
ret
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
mov
stos
adc
adc
es
ds
mov
data16
mov
pop
push
imul
add
push
xor
jns
add
insl
loope
nop
mov
div
repz
cmpsb
cmp
lea
pop
gs
jae
xor
sti
cmp
arpl
mov
clc
movsb
add
mov
push
rclb
mov
hlt
in
sahf
jp
mov
adc
adc
outsl
mov
cmp
cli
jns
xchg
in
jb
inc
jl
push
addl
daa
xchg
xlat
mov
push
push
jmp
fcmovnu
pop
inc
add
xor
movsb
jge
sbb
mov
in
push
pushf
out
mov
xor
dec
dec
decl
dec
inc
mov
cmpsb
int3
pop
mov
add
movsb
rorl
jnp
cs
mov
push
push
add
push
adc
pushf
mov
aam
mov
inc
and
shrb
mov
scas
xor
cmp
cld
in
jle
jb
dec
scas
in
inc
and
adc
pushf
cld
xchg
mov
icebp
sbb
in
jns
in
jle
cwtl
jle
mov
lods
xor
stc
mov
inc
ja
scas
push
nop
xchg
into
jb
sbb
jb
mov
jns
aas
lods
inc
scas
pushf
mov
mov
inc
faddl
add
jmp
sub
adc
xor
lods
jo
adc
mov
imul
cmp
pop
xchg
arpl
mov
cmp
xchg
pop
xchg
jl
enter
ret
or
xor
inc
adc
pop
jp
imul
or
or
cmpb
ja
in
and
ss
jnp
mov
fisttpll
mov
and
xchg
mov
pushf
fwait
xor
and
mov
ret
adc
push
popf
mov
xchg
and
sub
cmp
ret
sahf
mov
pop
aaa
aad
lahf
adc
xchg
js
scas
mov
test
rcll
mov
rcrl
imul
in
xchg
and
push
mov
in
adc
pop
shlb
pop
or
xor
adc
dec
jp
lcall
push
xchg
test
adc
dec
push
inc
lahf
cmp
inc
mov
xor
mov
test
lock
call
mov
cltd
dec
mov
sbb
jmp
push
pop
jns
ret
push
movsb
mov
nop
dec
lcall
jb
lret
arpl
xchg
xchg
lods
xlat
outsb
rorb
aam
xor
mov
lcall
scas
fs
xlat
xor
clc
pop
xchg
imul
and
icebp
popa
aaa
and
mov
sbb
mov
sbb
and
adc
cmpsb
icebp
lock
mov
or
pop
mov
sub
fcmovnu
mulb
rcr
or
into
fdiv
repnz
jmp
xchg
mov
aas
test
mov
lea
add
test
inc
cmc
divb
scas
mov
call
es
adc
jbe
or
push
fsubrl
push
mov
outsl
mov
push
pop
xor
insl
jmp
jge
out
aam
jge
push
cmp
repnz
lods
push
push
cs
notl
cld
popf
or
icebp
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
dec
add
stos
adc
adc
mull
jbe
mov
test
lock
cmp
shlb
pusha
ja
adc
leave
cld
fidivs
and
aad
xchg
dec
in
pusha
shrb
dec
stos
shlb
enter
or
cs
or
mov
stos
xchg
xchg
repz
int
dec
clc
lret
xor
pop
dec
sbb
jmp
xchg
add
int3
rolb
cld
and
int
pop
cwtl
movsb
pop
js
inc
mov
adcb
lock
and
sub
lret
pop
test
popf
sarl
fidivs
add
mov
xor
repnz
lret
jb
iret
cmpsl
js
data16
or
xor
insb
add
push
pop
sbb
pop
ss
mov
sbb
rcrl
lock
loope
and
clc
inc
add
adc
lods
xchg
push
mov
imul
fldl
imul
sub
mov
pop
push
push
cmp
xor
iret
push
adc
xor
out
in
mov
outsl
jb
dec
sub
inc
inc
outsl
in
dec
popf
orb
push
jae
pushf
in
imul
js
mull
xlat
scas
and
imul
jmp
sbb
call
insb
movsb
push
mov
dec
inc
mov
jle
fs
ja
test
mov
test
bound
fstp
adc
inc
sbb
cmp
jl
jecxz
outsl
add
in
jnp
add
jmp
add
in
jp
xchg
lret
or
lds
xor
lahf
je
pop
bound
cli
xchg
icebp
fsubr
xchg
nop
sbb
or
aam
dec
daa
movzbl
lret
pop
mov
fists
ds
push
xor
inc
fs
mov
or
xor
nop
outsl
or
sbb
or
clc
xchg
pop
addr16
pushf
or
inc
out
in
cmp
cwtl
and
cmpsb
test
xchg
sbb
cmp
inc
out
xchg
ss
pop
inc
mov
call
les
sti
ret
aaa
les
cmpsl
sub
in
mov
xchg
or
aad
and
pop
pop
pop
jp
adc
pop
int3
adc
lds
pop
data16
mov
mov
outsb
mov
mov
push
je
sarb
rcl
shl
jmp
mov
std
sahf
xor
xchg
out
outsl
jge
fdivrl
cmp
or
sub
push
xlat
adc
and
mov
jo
fsts
lods
addr16
movswl
sti
dec
pop
inc
sub
adc
mov
icebp
out
es
push
dec
fcmovnbe
lods
mov
cmp
and
shrl
orl
xor
xchg
inc
push
outsl
fs
pop
xchg
inc
and
xor
dec
jecxz
loopne
fs
rcrl
xor
mov
sub
decb
pop
push
mov
mov
lods
and
mov
push
push
adc
lahf
cmp
in
mov
mov
subl
roll
push
sbb
test
mov
cmp
stos
push
pop
sub
popa
loopne
jl
xchg
sbbb
or
xlat
sub
pushf
adc
arpl
jmp
enter
in
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
mov
sub
fidivl
inc
cmp
cltd
test
jmp
pop
pushl
pop
pusha
cs
sti
sub
xchg
int3
xor
inc
push
sub
stos
out
outsl
lahf
mov
cmp
stos
lods
inc
mov
fs
inc
or
loopne
dec
fdivs
cmpsl
or
push
out
sbbl
out
inc
add
int3
jge
jns
or
push
push
push
iret
adc
or
testl
out
cmp
les
shl
push
pop
test
mov
xor
add
insb
jns
xchg
leave
cld
and
inc
add
push
mov
mov
out
sub
fisubrl
das
addl
lret
adc
in
mov
sbb
push
scas
and
cwtl
insb
out
mov
sub
insl
xor
fnstsw
sub
fcoml
inc
push
mov
lret
xchg
inc
dec
insl
mov
jnp
mov
jae
cmp
or
or
xchg
pop
loope
and
dec
testb
push
inc
inc
xchg
clc
jbe
outsb
add
insl
xchg
outsl
into
out
sbb
hlt
filds
add
mov
movsb
test
mov
ss
xorl
adcl
out
pop
and
movsl
adc
nop
lcall
pushl
jae
data16
sbb
aaa
adc
imul
idivb
mov
stos
mov
int3
jp
sub
cmp
bound
adc
leave
cld
std
das
enter
inc
sub
mov
dec
pop
xor
ret
lock
or
push
push
xchg
testb
lods
inc
arpl
pop
adc
xchg
xchg
adc
jne
jmp
stos
arpl
push
cld
jmp
fidivl
fcmovnu
mov
or
xchg
push
mov
cld
sub
imul
into
adc
mov
xchg
or
xor
test
lahf
push
inc
cli
and
mov
clc
sub
js
iret
fstpl
notl
les
sub
pop
inc
cmp
shrl
hlt
loop
add
pop
inc
sbb
mov
dec
sub
mov
stc
xchg
fs
or
mov
int
outsl
dec
sub
mov
loopne
cmp
pop
dec
cmc
ljmp
mull
insb
mov
jbe
push
cmp
mov
xlat
hlt
stc
les
gs
sub
repz
fidivrl
and
test
data16
add
mov
pop
push
int
xor
cmpsl
xor
xor
cld
aad
jnp
iret
mov
call
and
jp
mov
repz
xchg
fldenv
rorb
lods
add
in
inc
addb
pop
push
lods
mov
and
int
aaa
jbe
push
mov
stc
call
in
fisubs
mov
jb
popa
xor
jl
movl
jp
mov
loopne
dec
jmp
lcall
xchg
dec
dec
pop
pop
mov
fsubs
icebp
popf
and
push
cmp
sbb
pop
popf
addb
cmp
or
inc
push
fnstsw
push
aad
jo
bnd
xor
lcall
pushf
iret
pop
aad
or
lea
fidivrl
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
ss
pusha
mov
adc
jo
mov
fdivs
mov
cld
push
or
push
lods
jecxz
add
xchg
gs
and
sub
add
jle,pn
fwait
addr16
stos
or
ret
jl
shl
mov
es
mov
mov
out
or
sub
mov
clc
and
add
inc
cmpb
stc
jns
lock
movsl
pushf
add
xchg
adc
and
rolb
inc
fsts
nop
xor
inc
and
sbb
je
rep
rclb
mov
and
inc
mov
push
pop
xchg
jecxz
imul
adcb
lret
xchg
push
jl
scas
inc
pusha
add
ficompl
fwait
clc
bound
xlat
das
adc
mov
push
fsubl
lcall
stos
push
shrb
adc
xchg
sahf
rcll
mov
ret
mov
je
dec
out
cld
call
sbb
jnp
inc
inc
fucomp
loopne
call
sub
push
jmp
inc
ljmp
dec
push
adc
into
inc
nop
stos
stos
sub
in
stc
lock
adc
mov
sub
xor
ja
adc
add
xchg
mov
xchg
push
push
sbb
pop
add
adc
outsl
mov
loopne
daa
cmp
dec
or
pop
push
enter
mov
testb
sti
call
add
and
cmp
xor
hlt
cmc
int3
or
adc
stc
mov
add
imul
adc
iret
mov
fnstenv
sbb
ljmp
iret
xchg
mov
pop
mov
fildll
fcmovbe
pop
lods
dec
pop
xchg
fdivs
mov
dec
sahf
pop
mov
sub
and
mulb
jnp
sub
addb
add
imul
pop
inc
movsl
jbe
ja
mov
dec
or
in
push
js
mov
pop
test
mov
mov
mov
imul
mov
sti
ror
cmp
dec
inc
lcall
out
pusha
mov
lods
sub
and
popa
dec
xchg
clc
mov
push
out
push
mov
xchg
mov
pop
idivb
sahf
cmp
iret
inc
sbb
push
inc
es
add
push
nop
pop
adc
sbb
cmp
iret
push
outsl
mov
pop
int3
lret
sub
mov
clc
and
in
push
cmpsb
inc
loopne
fadds
sub
dec
and
cmc
ret
repz
paddsw
or
icebp
or
xlat
pusha
jns
mov
jle
mov
mov
jae
es
push
lcall
jg
jne
fists
adc
pop
xor
dec
enter
and
adc
rcll
pop
outsl
adcb
cmpsl
ljmp
sub
lcall
imul
add
rcll
hlt
mov
sub
lea
mov
fnstcw
and
inc
out
mov
mov
fsubr
push
mov
int
push
pop
jle
and
cmpsb
ficomps
sub
push
pop
cmp
outsb
mov
iret
testl
and
leave
fists
enter
xchg
add
popf
cmp
pop
xorl
mov
jo
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
psubsb
stos
push
roll
inc
jmp
sahf
nop
xor
jl
mov
outsb
iret
jge
arpl
jb
pop
and
push
adc
arpl
xchg
fwait
mov
cmpsb
xor
daa
cld
leave
mov
lcall
xor
jle
call
mov
inc
or
mov
jb
hlt
insb
sbb
mov
inc
sub
orl
rclb
divb
fisttpl
pop
inc
je
imul
enter
jg
cmp
mov
pop
push
adc
adc
sbb
jl
jmp
outsb
xchg
jle
mov
cld
jecxz
jbe,pn
pop
mov
inc
fs
jmp
idivb
rep
jb
roll
es
sub
sbb
mov
xchg
addr16
jb
std
inc
lret
cli
mov
in
add
mov
fists
mov
mov
cmp
cmp
iret
shl
roll
jae
mov
pop
and
or
dec
lahf
mov
sub
shlb
iret
add
or
cmpsl
testl
dec
jo
add
test
sub
loope
in
int3
mov
mov
imul
ss
inc
or
xor
xor
andb
mov
inc
stos
unpcklps
movl
push
fimuls
dec
cmp
mov
dec
movsl
and
sarb
dec
push
sub
cmp
dec
mov
jns
cmc
mov
mov
jmp
lods
sub
xchg
add
repnz
sbb
adc
ret
lock
lea
lret
adc
fisubl
mov
in
stos
popf
stc
xor
cmpsb
out
icebp
sbb
outsb
rol
jae
mov
aad
shll
shl
jle
xchg
imul
cmp
fwait
sbb
int
pop
jl
mov
xor
pop
push
lods
or
push
clc
xchg
sbb
inc
xchg
or
mov
or
loop
adc
mov
mov
pop
mov
pop
cmpsb
xchg
clc
sbb
lods
mov
fucomip
adc
sbb
sbb
ss
push
lret
insl
mul
or
jle
insl
adc
repz
inc
hlt
dec
cmpsb
clc
lcall
push
les
jecxz
cmp
mov
add
jnp
fcoml
adc
mov
rcll
adc
lahf
movsb
jnp
jle
rolb
lea
pop
lods
outsb
fnsave
mov
xor
xor
push
xlat
inc
movl
mul
and
int
imul
cwtl
imul
jg
leave
test
addr16
adc
add
xor
mov
ss
adcl
jl
incb
mov
cld
lds
fidivl
cli
sbb
jnp
jle
inc
cmp
loop
sub
aas
xlat
pusha
jns
call
decl
fs
jecxz
test
mov
sahf
rorl
cmp
icebp
dec
xor
cmp
pop
xchg
adc
mov
lods
arpl
ja
xchg
inc
xor
xchg
fidivrs
lahf
aad
imul
pop
stc
inc
outsb
jp
pop
lods
mov
inc
sub
push
dec
in
push
pop
mov
int3
nop
ds
xor
das
push
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
cmp
ss
lods
adc
adc
push
mov
push
push
push
int
mov
cs
pop
popf
rcrb
xor
inc
sub
into
or
ja
push
popa
data16
cmp
xchg
xor
push
dec
insl
mov
fwait
add
movsl
movsl
test
punpckhbw
jns
adc
leave
in
adc
and
jmp
pop
lret
inc
xchg
nop
ss
adc
je
aas
and
outsl
outsb
je
add
jo
fs
mov
pop
dec
mull
inc
dec
jle
pop
cmp
into
scas
shll
bound
loope
cs
loope
shll
aad
pop
dec
and
jo
out
sub
call
mov
fldcw
inc
mov
ret
jle
test
enter
sbb
data16
or
stos
rcll
mov
outsl
xchg
cwtl
subb
add
pushf
add
pop
shrb
mov
push
fstp
es
pop
movsb
sub
test
mov
xchg
mov
mov
xchg
cltd
stos
jmp
pop
jns
inc
out
push
inc
lahf
jp
inc
testl
ds
jg
or
inc
pop
push
add
iret
aam
mov
pop
inc
jno
cmpsb
adc
int3
ds
shlb
in
add
insl
mov
push
sarl
loope
pop
push
sub
dec
cmpsl
in
clc
adc
cmp
inc
push
icebp
xchg
les
frstor
loop
lods
pop
cmp
cmp
push
loope
andl
mov
add
mov
inc
lods
jg
cli
das
push
mov
xor
nop
xor
jae
or
push
sub
ds
sub
xor
mov
pop
scas
mov
icebp
adc
push
push
xchg
jge
jmp
std
nop
add
dec
cmp
ja
daa
push
push
jb
ret
lods
or
pop
cmp
fcmovnu
and
std
popf
imul
cmp
cmp
or
cmpsl
dec
push
and
les
imul
loop
iret
and
adc
inc
sti
cmp
push
jg
xor
xor
sub
test
lahf
mov
add
or
das
mov
add
or
and
pop
push
lds
jmp
push
mov
inc
pop
ljmp
pushf
shll
test
lea
add
dec
movsl
cmp
ljmp
cwtl
sub
movsl
jmp
dec
and
lods
and
mov
pop
add
pop
jecxz
pop
ror
xlat
xchg
jp
jecxz
add
arpl
and
pop
ljmp
lock
fucomp
push
out
pop
outsb
cld
lea
mov
jo
or
clc
jmp
add
test
dec
and
lcall
jbe
xchg
jecxz
xor
cs
xchg
lods
pop
jl
jle
mov
popf
sbb
sub
adc
scas
pop
clc
aam
mov
push
lods
imul
cli
cltd
cmp
out
mov
or
push
xor
xor
add
insb
in
jle
jne
int3
cmp
mov
xchg
add
pop
pop
push
int
mov
aam
shl
jle,pn
popf
loop
sbb
or
dec
dec
mulb
jnp
sbb
pop
into
loope
and
fucomi
push
insb
mov
mov
mov
xchg
and
decl
pushl
xor
jmp
or
mov
mov
mov
into
les
stos
adc
adc
add
push
pop
jnp
push
xchg
inc
push
ds
add
ja
inc
insl
dec
dec
mov
pushw
add
sbb
scas
cli
xor
xchg
andl
lahf
bound
xor
pop
sbb
inc
cmp
push
xchg
lcall
ja
push
fcomps
inc
or
les
fwait
mov
js
pop
xor
add
inc
js
add
push
sti
arpl
paddw
in
movsl
sarb
lock
movsb
add
add
lea
jo
cmp
call
sub
in
pop
or
xchg
add
or
dec
loope
outsb
push
lock
aam
in
sub
addr16
test
pushf
orb
cltd
dec
fidivl
cltd
lea
push
sar
push
nop
icebp
arpl
push
xor
push
cmp
divl
insl
or
stos
mov
adcl
fst
pushf
pop
xchg
add
loopne
xchg
and
rcrb
push
cmp
pop
inc
inc
xor
imul
adc
add
cmp
imul
add
loope
mov
xchg
inc
jb
jl
push
xchg
sar
dec
out
negb
outsl
ja
xor
add
cli
adc
jnp
out
pop
cmpsl
frstor
nop
adcb
aas
std
jle
mov
mov
fcmovu
shlb
sti
xor
test
imul
in
inc
jp
or
mov
xchg
sbb
lods
mov
cli
sub
add
jb
pop
pop
outsl
rorb
aad
mov
pop
mov
jge
sahf
xor
xor
inc
lcall
hlt
mov
jecxz
mov
cli
add
dec
and
mov
repz
pop
inc
arpl
pop
mov
cmp
fisubl
sbb
push
adc
test
xor
lcall
add
dec
add
rcl
sbb
xor
bound
stc
push
cmp
dec
sbb
dec
add
xchg
jge
xor
jmp
movsb
mov
pop
cmc
ss
rolb
lock
push
adc
mov
mov
sub
aas
adc
sub
ret
cltd
or
lret
inc
pop
sbb
out
lea
daa
xor
rorb
lahf
int3
push
push
xchg
imul
pop
cmp
mov
mov
cmp
pop
xchg
cmpsl
and
pop
repnz
fists
push
test
sbb
ljmp
add
pop
popf
mov
pop
fisubl
and
lock
sub
imul
in
into
setle
nop
shl
push
popa
dec
xor
sti
pop
mov
int3
xchg
pop
jns
rcrl
mov
xor
xchg
cwtl
mov
mov
movsb
cmp
push
cmp
roll
mov
pusha
or
pop
sbb
inc
movsl
loopne
dec
dec
lcall
in
sti
xor
mov
xchg
lcall
inc
xchg
les
and
call
push
test
icebp
xor
or
or
mov
mov
inc
loope
lret
in
jp
add
cmp
arpl
xchg
inc
and
xor
test
enter
xor
ret
js
pop
sarl
jae
imul
ja
sub
sub
jl
xchg
mov
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
jle
pushf
adc
adc
jle
pop
in
fldt
in
loope
add
repz
cmp
fsubrs
push
lret
or
icebp
mov
sub
rcll
xchg
repnz
push
shlb
mov
cmp
add
jmp
cmp
fwait
cmpsl
in
inc
lods
mov
rcll
mov
jb
aaa
lret
mov
sahf
ja
enter
adc
popf
xor
mov
add
leave
cwtl
std
sub
mov
inc
add
clc
mov
push
push
test
insl
scas
les
jae
jecxz
int3
inc
mov
push
mov
lds
cli
repz
int
cmp
sbb
insl
leave
jl
dec
js
fwait
and
out
push
sub
aas
das
cmpsl
mov
adc
or
das
pop
scas
sbb
fcmovu
mov
pushf
mov
ficompl
dec
cmc
mov
and
int
sub
lods
dec
xor
fstpt
lahf
int3
ljmp
or
lods
fwait
daa
pop
out
js
ret
push
pop
pop
test
mov
ret
pop
adc
fwait
nop
sbb
push
hlt
mov
xor
test
xchg
sub
xor
jl
add
jl
shrl
out
ret
xor
mov
mov
xchg
cmp
stos
and
mov
flds
dec
add
addr16
xchg
or
insl
repz
adc
pop
dec
pop
fmull
xorb
pop
jnp
sub
into
aam
add
push
cwtl
test
pop
les
pop
pop
sub
stc
pop
daa
stos
pop
add
xchg
cld
fidivs
arpl
dec
mov
xchg
dec
insb
ret
mov
fst
mov
and
shrl
mov
sub
dec
dec
clc
lret
adc
xor
sub
add
data16
xchg
or
sub
xor
dec
pushf
and
aas
or
mov
popf
movsl
pop
sub
daa
rcll
pop
dec
jp
cmp
ljmp
jle
imul
test
test
cmp
and
pushf
add
sbb
lcall
repz
and
pop
testl
mov
out
mov
cmp
push
jp
xor
in
js
or
and
adc
mov
xchg
daa
lcall
fs
inc
xlat
lcall
adcl
les
pop
mov
ss
jno
jmp
cmp
jmp
addb
mov
xor
and
adc
sbb
leave
inc
mov
imul
xchg
imul
lods
es
out
push
rcrl
xchg
call
push
ret
stos
mov
popf
filds
pop
mov
rorl
sub
in
gs
xchg
inc
adc
rcrb
mov
inc
daa
add
dec
push
nop
pop
xchg
ljmp
out
ljmp
mov
pop
scas
das
cli
lret
sbb
mov
fwait
rorb
test
push
cmp
cmp
xchg
ret
or
jp
jb
push
adc
pop
in
fstps
jnp
jb
leave
enter
xor
adcl
aad
lcall
lods
mov
cmc
rcll
mov
and
fincstp
mov
test
jmp
mov
neg
mov
pushf
jmp
jge
jmp
cmp
mov
js
xchg
sarb
lcall
rcr
loope
xchg
lock
add
lcall
int3
mov
dec
jb
ret
fistl
mov
mov
lea
adc
inc
cs
fiadds
jl
or
jp
cmpsb
in
pop
sbb
lds
fwait
sub
mov
jo
cli
sbbb
mov
insl
xor
dec
pop
push
imul
sub
out
and
mov
std
out
repnz
jns
addr16
push
fs
popf
sub
cld
mov
cmpsb
xor
aam
adc
and
insl
inc
mov
inc
or
jge
mov
clc
mov
std
mov
test
pop
mov
idivl
cmp
sti
mov
aad
outsl
pop
test
fdiv
add
push
cs
dec
ficoms
ja
rolb
mov
arpl
mov
cld
mov
xor
roll
inc
sub
dec
jno
mov
push
es
lret
pop
adc
mov
mov
lret
add
jno
sarb
xchg
adc
mov
adc
xor
xlat
cmp
mov
adc
repz
and
lahf
or
repz
outsb
cltd
jmp
lret
jo
es
mov
cmpsl
pop
jo
mov
data16
popa
push
inc
sar
mov
and
in
out
outsl
call
sub
dec
out
push
cmc
sub
xor
out
mov
movsl
test
mov
daa
fbstp
call
enter
and
nop
stc
ljmp
ret
dec
stos
out
cmpsb
jbe
in
xor
sub
jecxz
xchg
xor
test
lods
lahf
sbb
mov
addb
loope
shll
nop
mov
aas
mov
ss
cmpsb
cmpsl
je
lods
mov
push
icebp
lahf
lods
push
loopne
pusha
pop
sub
lods
insl
pushl
and
loopne
cmp
repnz
cmp
mov
daa
fdivrl
jmp
pushf
daa
xor
iret
test
test
jae
push
je
push
insl
test
dec
decl
sbb
xor
cmp
mov
jne
dec
test
fcoml
push
push
xor
icebp
aas
sbb
jbe
xchg
sub
push
mov
das
cmpsb
push
pop
les
movsb
stos
xor
in
mov
jecxz
cld
ret
mov
leave
pusha
mov
idivl
out
test
xlat
into
int
adc
insb
inc
fsubrl
outsb
mov
xchg
outsb
ss
scas
shlb
pop
jmp
inc
in
adc
repnz
or
cmpsl
xchg
ds
es
mov
out
ljmp
addr16
jb
sbb
xchg
adc
cmpsl
mov
loopne
ljmp
push
inc
push
daa
fidivrs
mov
stc
rorb
sbb
ret
lahf
jecxz
mov
stc
mov
mov
leave
bound
xor
sbbl
shrb
lcall
out
into
test
xchg
imul
xchg
fldenv
negb
insb
sub
mov
fidivrs
mov
movsb
jnp
daa
xchg
lahf
lcall
sub
add
hlt
ret
cld
jne
subl
inc
xor
jmp
pop
shrb
lods
adc
daa
push
lret
pop
lret
stos
outsb
scas
ljmp
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
mov
adc
call
stos
mov
lea
pop
clc
mov
ss
xor
push
mov
jb
cmp
jp
xor
push
pop
cmpsl
lods
rorb
lods
inc
add
aam
lret
or
repz
shll
adc
ret
pop
stos
jb
mov
pushf
mov
mov
stc
xchg
nop
adc
xchg
xchg
loope
je
dec
add
cmc
xchg
cmp
add
fiaddl
lcall
dec
imulb
jge
pop
mov
jbe
fmull
out
cmp
mov
push
mov
mov
jae
xchg
fimull
adc
jne
pop
aaa
push
cmc
pop
es
add
or
jnp
adc
fs
insl
adc
rorb
mov
sbb
popf
mov
clc
mov
jnp
stc
xor
js
push
add
fucomp
xchg
push
xchg
mov
jmp
fwait
lock
imul
sbb
xor
rorb
add
fs
mov
mov
js
mov
or
add
xor
pop
cmp
inc
hlt
jns
mov
outsb
lock
push
insl
cmpl
daa
and
insl
roll
or
push
idivb
loope
rcr
cltd
nop
repz
mov
jae
aas
push
aaa
add
ret
addb
decb
addr16
inc
lock
jg
pop
in
jns
and
xor
mov
pop
and
sbb
push
sbb
and
jecxz
lock
outsl
sub
mov
stos
fsubrl
xor
in
mov
xchg
cmp
mov
adc
lcall
and
fists
test
mov
and
jmp
mov
xchg
aaa
jecxz
sub
cld
rolb
lret
bound
xchg
xchg
mov
gs
push
mov
mov
cli
out
jle
dec
xor
add
rolb
dec
mov
dec
mov
push
test
enter
push
dec
fsubr
cmp
mov
cld
jae
or
xchg
push
lock
mov
arpl
cmp
mov
mov
push
jp
mov
out
in
clc
inc
jne
loop
jl
scas
lods
mov
int3
pop
imul
and
mov
aad
arpl
outsb
jb
loop
dec
push
push
jno
mov
leave
lret
out
sbb
test
das
inc
lahf
cmp
outsb
jno
aaa
mov
addr16
ret
clc
das
cli
sub
xlat
bswap
pop
mov
or
dec
jb
out
mov
push
outsb
pop
push
lret
clc
dec
mov
mov
or
push
sub
jmp
int
cmc
in
test
push
adc
jl
out
adc
xchg
push
xchg
and
ret
insl
movsb
pop
push
xlat
mov
test
sub
lret
pop
int3
loope
add
jge
out
mov
xor
fmull
add
jo
addr16
push
hlt
aas
outsl
sub
nop
mov
or
mov
rcr
xchg
add
push
sahf
jge
mov
push
jecxz
fbstp
mov
loopne
lods
shl
mov
mov
shlb
insb
dec
add
sbbb
push
dec
dec
xchg
popa
outsb
jb
je
outsl
jp
ja
push
mov
fwait
cltd
bound
aas
add
mov
sbbb
repnz
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
push
fwait
push
je
cltd
xor
lds
dec
inc
dec
jne
imul
rcl
mov
inc
push
and
pushf
mov
lods
fsubrl
xor
or
mov
cli
movsb
mov
push
inc
sub
xor
imul
push
nop
fwait
daa
jae
hlt
dec
xchg
mov
mov
jge
in
insl
cli
std
push
bound
jns
ret
push
and
pop
imul
inc
ja
xor
pop
aam
cmp
push
pop
xor
cmp
dec
sbb
bound
pop
or
mov
pop
mov
pop
enter
jb
and
pop
xchg
cli
mov
add
jl
bound
mov
outsb
inc
inc
movsb
mov
fnstenv
add
je
add
mov
push
xchg
fwait
ds
xchg
lock
jp
pop
into
inc
mov
mov
fwait
push
cmp
psrlw
aaa
jl
rol
add
sbb
push
mov
rorl
mov
sub
lods
mov
xchg
pop
mov
jmp
pop
cmp
pop
add
rclb
xor
cmp
ret
push
fwait
adc
adc
pushf
xchg
xor
xor
push
pop
jp
int
or
imull
push
lcall
cli
aam
call
inc
enter
mov
lcall
repz
outsl
mov
mov
in
fcomip
cmpl
fcmovnb
sarb
testb
mov
jmp
pop
inc
out
out
add
add
jle
jg
xchg
pop
push
or
fcoml
push
hlt
in
jnp
inc
pop
pop
in
cmp
cmpsb
repnz
int3
subb
and
sbb
and
inc
push
or
push
add
orl
pop
inc
mov
lcall
and
in
stos
pop
cmp
sbb
inc
adc
or
shrl
int
or
jbe
jecxz
or
imul
xchg
insb
inc
fimull
adcb
repz
dec
jne
push
cmp
or
xor
pop
jae
repnz
mov
inc
int3
mov
xchg
pusha
push
int
xlat
repz
in
xchg
and
and
fs
insl
ljmp
cmp
mov
lahf
mov
mov
or
xchg
add
sti
out
mov
mov
xchg
pop
lods
test
jge
push
push
mov
repnz
and
movsb
push
add
adc
xchg
iret
lcall
dec
xor
icebp
out
scas
dec
jp
vmaxpd
in
fadds
add
fdivr
ror
cmc
fcmovnu
jmp
pop
fwait
jnp
cmp
or
pop
and
push
das
in
cwtl
call
inc
cmp
xor
repnz
rcrb
dec
mov
fs
mov
fldl
push
mov
inc
shl
sbb
and
bound
rcll
ret
test
sub
rcl
pop
inc
mov
pop
sub
data16
push
stos
cmp
cwtl
loop
sbb
mov
xorl
jle
roll
jmp
xlat
sbb
orl
dec
cmp
int
decl
lea
test
incl
lret
fmuls
fdivr
decl
orl
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
pop
lods
pop
adcb
outsl
xchg
add
loop
inc
and
jecxz
loop
xor
adcb
inc
mov
nop
or
stos
sbb
nop
aad
popa
inc
pop
xor
cwtl
adc
movsb
mov
xor
ret
hlt
andb
in
lds
outsl
jo
test
sbb
dec
cmpsl
mov
inc
in
test
or
aam
jnp
out
lea
adc
lods
push
aad
pop
jmp
xchg
add
testb
mov
imul
lock
lock
std
call
rorb
inc
inc
push
add
shrl
leave
iret
ret
cmpsl
pop
or
push
xlat
or
and
scas
stc
push
xchg
js
loop
mov
loopw
and
push
push
sub
jne
std
jns
enter
jae
dec
push
mov
hlt
or
sarb
sbb
jns
testb
add
shrl
jo
pop
fiaddl
imul
pop
loop
mov
or
mov
fsubl
cltd
cld
dec
xchg
test
and
adc
fbstp
pop
cli
std
and
mov
outsl
cmp
cmpb
dec
dec
test
cmp
int3
sbb
pop
popa
ret
daa
popf
sbb
cld
es
jge
daa
inc
les
mov
xor
adc
add
add
inc
and
sbb
rclb
sbb
push
mov
lret
jp
in
shl
fwait
mov
pop
jp
xor
int
or
mov
les
pop
les
pop
push
and
adc
cmp
movsb
jo
out
popa
inc
outsl
cwtl
jns
loope
mov
es
cmpsl
sahf
add
mov
out
arpl
sbb
push
inc
fwait
lahf
dec
xchg
pop
xchg
in
jno
rcll
inc
cli
sub
vmovhpd
dec
push
bound
lods
jb
sub
int3
lea
mov
mov
sub
shl
mov
nop
imul
push
jae
out
mov
clc
or
push
pop
js
les
fmuls
mov
lods
or
aad
bound
sbb
adc
mov
je
xchg
and
and
into
les
lds
ret
sti
pop
call
es
push
sbb
adc
loope
pavgb
int
lea
aas
xor
mov
mov
iret
xchg
jo
shlb
cmp
xchg
mov
fsubl
mov
cmp
and
jo
mov
cmpsl
out
adc
add
enter
mov
je
mov
enter
loopne
insl
rolb
inc
mov
out
loope
outsb
sbbb
or
push
movsb
dec
xchg
enter
pop
jge
imul
pop
mov
sub
insl
repnz
dec
and
xchg
push
out
out
add
push
movsl
mov
adc
jae
je
xor
lahf
jne
lods
pop
sbb
mov
cwtl
mov
lcall
jp
or
es
push
icebp
sbb
mov
cld
data16
or
es
add
data16
jo
cmp
ret
and
sahf
lea
xchg
lahf
dec
cli
loopne
sbb
push
aas
xchg
mov
ret
lret
push
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
inc
xor
stos
adc
adc
pushf
cmpsb
sbb
inc
push
fists
cmp
stc
ds
cwtl
jl
daa
mov
mov
inc
mov
pop
outsb
das
xorl
xchg
int
iret
adc
cmp
nop
jne
aam
add
dec
imul
dec
stos
push
xchg
pop
insl
fmulp
andl
rcl
cmpl
pop
loopne
out
sbb
mov
lret
rcrb
jmp
mov
or
sbb
das
aam
push
add
sarb
push
xchg
xorb
fnstcw
mov
pop
dec
rcrl
aaa
lea
dec
dec
push
sbb
mov
mov
or
lret
jg
jge
in
leave
es
cmp
mull
cmp
add
push
je
fwait
mov
leave
cs
les
loop
movsl
fcomps
gs
pop
xchg
fnstsw
insl
cs
jmp
push
iret
sbb
dec
cmovle
fnstcw
shrb
out
mov
cmp
gs
jae
nop
push
lods
in
lret
jp
dec
mov
cmp
cmp
pop
lahf
jne
cmp
add
xor
inc
cmpb
push
inc
je
xchg
gs
push
test
outsl
stos
in
or
xor
and
pop
mov
insl
sarb
add
jns
outsb
ret
xor
push
push
stos
daa
pusha
xchg
notb
cmp
push
inc
movsl
mov
jno
sti
movsl
mov
pop
mov
out
flds
fdivs
pop
hlt
pushf
dec
inc
mov
push
pop
xchg
and
push
shll
in
xor
pushf
xor
sub
inc
inc
scas
or
mov
inc
xor
jmp
cltd
jns
mov
mov
add
out
pusha
loopne
pop
pushf
sbb
fwait
cmp
mov
mov
shll
pop
mov
imul
aam
jns
nop
fiaddl
ss
imul
jbe
and
mov
cli
and
pop
or
cmp
and
data16
subb
lret
lods
popa
outsl
ljmp
es
outsl
cmp
pop
stos
ret
mov
jnp
out
hlt
scas
test
movsl
popf
inc
xlat
inc
pusha
mov
or
shrb
in
cmp
xchg
scas
aas
lods
jb
shll
add
sbb
jns
push
int3
and
sbb
push
sub
lea
jl
dec
aam
sahf
mov
jnp
dec
sbb
pushf
loope
sbb
imul
sub
stc
mov
xchg
push
fstl
jae
pop
cmp
icebp
inc
and
pop
daa
dec
dec
lods
jle
pop
mov
jbe
cld
cli
repz
es
insl
jge
fsubrl
dec
ret
sbb
mov
and
sub
sbb
mov
dec
out
int
in
mov
int
push
int3
adc
loope
jl
rolb
dec
pop
ljmp
je
aam
push
add
jl
jl
dec
nop
add
sbbb
dec
in
inc
call
insb
pop
scas
sub
mov
ret
adc
stos
movsl
push
and
out
xchg
jge
aaa
mov
mov
adc
sti
cs
pop
repnz
xor
popa
adc
add
es
adc
decl
jmp
mov
clc
mov
sub
jle
sahf
jle
push
jo
adc
inc
das
mov
mov
push
jo
adc
js
clc
stos
iret
faddl
mov
js
dec
cmpsb
xlat
pop
int3
pushl
mov
sbb
aad
push
sub
dec
icebp
pop
mov
xchg
push
mov
mov
jmp
ds
pop
and
mov
adc
jmp
or
xchg
imul
push
ret
outsl
jl
lods
mov
mov
leave
cmp
or
das
jo
out
cmpsb
push
push
cmp
pusha
jge
push
and
addr16
mov
mov
jg
lock
enter
add
dec
or
outsl
bound
push
xor
pop
rclb
into
mov
ja
aad
std
cmc
lret
add
in
std
std
icebp
leave
mov
enter
pop
jne
adc
sub
and
mov
jae
push
add
or
jne
pusha
lock
jle
jge
sbb
icebp
mov
xor
mov
test
test
mov
pop
lea
dec
add
add
mov
addl
add
imul
int
je
and
push
lahf
movsl
jp
jge
lahf
insl
fistpll
pushf
test
add
adc
and
jg
jl
fistpll
add
dec
xchg
mov
cmp
loope
sub
xchg
push
popa
scas
ss
jb
xchg
popa
imul
push
je
add
fwait
dec
dec
dec
inc
and
or
je
mov
ret
or
mov
jns
mov
dec
xor
repz
sub
iret
lods
loope
mov
in
scas
adc
and
ljmp
movsb
push
ja
xor
jno
enter
std
push
jp
sbbb
xchg
flds
mov
adc
cmpsl
mov
mov
js
fmuls
daa
pop
popf
shlb
in
hlt
mov
pop
mov
cmpb
mov
mov
and
pop
jp
cmp
inc
inc
add
and
insl
aaa
cmp
mov
leave
call
and
mov
dec
in
adc
lods
enter
ja
fmul
or
sbb
or
lock
andl
mov
dec
enter
andl
xor
imul
cltd
scas
xchg
add
in
jne
fcoms
push
test
mov
ret
pop
mov
xor
inc
pusha
fbstp
imull
xchg
insb
mov
imul
push
mov
leave
clc
in
test
add
fmull
push
dec
out
mov
jle
cmp
or
ja
pop
xchg
aad
xchg
jo
and
loope
jae
iret
jbe
mov
icebp
mov
and
aam
out
mov
cmp
jp
cmc
adc
jns
mov
aaa
xchg
xchg
push
addr16
mov
pop
rcll
ljmp
ret
pop
icebp
outsb
pusha
xchg
jns
mov
je
out
xor
xor
dec
pop
les
xor
jle
imul
in
push
push
or
inc
add
dec
into
inc
and
cmp
imul
mov
cmp
lret
add
pop
imul
pusha
sub
fistl
or
xchg
mov
mov
mov
loopne,pn
and
scas
rolb
push
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
or
adc
adc
movsb
xor
mov
repz
sub
jmp
pop
lock
cmpsl
xchg
lcall
imul
or
xchg
enter
jmp
fwait
or
and
je
xchg
push
xor
add
lods
aam
pop
gs
mov
flds
icebp
ljmp
das
inc
xchg
mov
pop
push
xchg
movsl
sbb
scas
jb
mov
mov
into
push
pushf
jo
and
filds
out
ljmp
lds
pusha
cmp
sub
push
push
mov
pop
dec
movsl
mov
mov
fisubrl
cmp
leave
and
das
rcl
dec
pop
aam
ret
stc
cmp
cmc
mov
jo
ljmp
xor
mov
sub
lcall
shlb
je
push
cld
je
cmpsl
mov
mov
repz
jecxz
ficoml
add
movsb
icebp
shl
or
pop
pusha
hlt
rcll
pop
and
cmc
lret
or
pop
mov
push
mov
fdivrl
pop
imul
or
xor
clc
sbb
inc
in
ljmp
push
fstpt
outsb
jno
lcall
cli
mulb
stc
mov
pusha
test
rolb
adc
jle
out
ss
divb
jp
mov
test
imull
fiadds
lods
std
dec
aad
mov
std
test
jge
jge
in
frstor
jb
inc
cmp
mov
mov
pop
sar
jne
mov
outsl
mov
inc
and
inc
std
xor
or
add
pop
and
mov
dec
jle
inc
aad
adc
mov
jo
scas
popf
movsb
andb
xorb
or
fisubrs
repz
subb
out
loope
ss
pushf
jmp
cmp
je
scas
rorl
push
adc
iret
add
push
or
int3
outsl
xchg
aas
insb
inc
rcll
dec
jae
jge
inc
sahf
pop
or
pop
inc
push
and
out
test
mov
jp
in
iret
and
pop
cmp
inc
jg
and
sub
pop
mov
jmp
sub
fidivrl
repz
sbb
gs
mov
popa
jne
jl
pop
imul
cmp
pop
cmp
test
subl
pop
sbb
rclb
xchg
add
jp
xchg
into
or
cmp
test
in
cmp
in
pop
sub
rorb
mov
iret
mov
loopne
dec
incb
test
aam
xchg
pop
mov
int3
pop
mov
mov
mov
push
insb
imul
or
ret
nop
bnd
add
mov
xchg
lahf
push
aaa
dec
xor
dec
mov
cmp
clc
sahf
pop
jmp
test
cmp
rorl
push
fidivs
das
mov
fwait
xchg
icebp
jae
push
in
cmp
pop
mov
lock
jb
ficoms
clc
fildl
inc
pop
ja
insl
int
xchg
lahf
mov
xlat
in
mov
mov
mov
nop
fldl
pusha
dec
outsb
cltd
lahf
lret
iret
stos
adc
adc
aas
ds
dec
push
movsb
rcll
push
out
cld
outsb
mov
or
dec
push
xchg
push
mov
jbe
orb
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
sbb
lods
cmc
xchg
jno
movb
mov
mov
das
and
push
mov
gs
divb
mov
push
adc
push
rcrb
inc
xor
mov
lea
xchg
push
lret
std
mov
xchg
mov
les
cmpsl
xchg
xchg
outsb
mov
dec
stos
xchg
in
mov
add
stos
and
mov
xor
ret
jnp
xchg
xchg
mov
adc
sub
push
add
sbb
jae
adc
test
icebp
add
cmp
test
call
push
inc
mov
loopne
adc
add
call
and
aaa
sbb
jle
fisubl
scas
push
mov
mov
cld
outsb
data16
loope
mov
cmp
push
pop
cmp
sub
mov
sub
das
mov
xchg
mov
insl
fprem
daa
and
add
xchg
add
andl
and
push
mov
in
mov
add
adc
xor
ret
jge
mov
imul
pop
fdivl
mov
mov
sub
sbb
cltd
cltd
dec
jnp
jmp
repnz
int
bnd
mov
popf
push
push
imul
lods
cmp
pushf
adc
jg
xor
loopne
pop
cmp
or
mov
xor
stos
sub
inc
sub
mov
jae
ja
test
stos
mov
or
pop
xor
test
bound
nop
sbb
or
xchg
or
push
sbb
int
pushf
jne
pop
cmp
aam
je
dec
lods
daa
cmpps
ret
xchg
xchg
push
clc
sub
jmp
and
addr16
sbb
xor
adc
lret
aas
or
std
pop
sar
push
pushf
jo
iret
xchg
and
mov
pop
fstpl
rcll
fstps
xrelease
mov
out
fs
and
popl
mov
dec
daa
imul
jp
dec
dec
or
fidivs
mov
shrl
sbb
add
test
inc
sub
mov
hlt
popf
add
daa
mov
mov
fimuls
mov
mov
xchg
std
add
push
cmp
test
mov
aad
mov
sub
and
movb
stc
and
sti
movsb
adc
icebp
or
mov
js
and
sbb
outsb
or
pop
out
jbe
lret
cwtl
cs
xchg
add
jae
mov
test
sbb
in
rcrb
and
jg
adc
arpl
stc
shrb
jmp
mov
aas
jno
leave
cmpsl
shlb
rol
enter
cmp
mov
mov
sbb
mov
cmc
lret
testl
inc
dec
or
fnstsw
aas
fiadds
cmpsl
ja
inc
scas
mov
sti
pop
nop
cwtl
push
sbb
std
xorl
out
xchg
popf
les
lcall
xchg
xchg
ss
xchg
inc
subb
mov
cmc
lahf
test
pop
mov
inc
dec
adc
xchg
daa
cmp
mov
dec
push
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
cmp
js
pop
adc
adc
jg
int
inc
push
je
inc
cmp
push
pop
movsl
je
les
mov
xchg
cwtl
or
push
pop
sarl
sbb
pop
or
nop
jge
pop
rcr
xchg
mull
clc
xchg
pop
cmc
cmp
addr16
scas
movsl
xchg
xor
adc
sub
inc
mov
push
adcb
mov
stos
jl
movsl
sub
popf
pop
imul
pusha
dec
dec
jp
dec
repz
rolb
rcll
xorb
rclb
jecxz
test
bound
push
ja
ljmp
mov
push
stos
imulb
xchg
int
fdiv
adc
add
aaa
mov
xlat
push
gs
lahf
and
xor
sub
std
adc
jo
pop
add
stc
pop
cmp
out
push
in
insl
or
fistpl
push
aas
xorl
outsb
push
sub
mov
pop
pop
out
les
movsb
jl
neg
fbld
adcb
dec
jge
mov
cmp
movsl
push
sbb
loop
shl
sub
daa
adc
pop
xchg
push
mov
or
xchg
js
mov
loope
mov
popa
mov
inc
inc
hlt
adc
inc
pushf
cmpsb
inc
dec
mov
dec
test
stos
repnz
icebp
cmc
jge
push
sbb
fcomps
xchg
daa
mov
jb
insl
movsl
sbb
imul
jmp
xchg
adcb
inc
lods
xlat
pop
add
pop
xor
into
not
sub
xchg
test
or
outsl
test
loope
xchg
jno
iret
adc
dec
mov
add
mov
dec
je
inc
push
xchg
mov
inc
in
cmp
cmp
sbb
cltd
or
rcrl
mov
loopne
movsb
loope
pop
xchg
outsb
pop
xchg
in
mov
mov
jge
and
fs
in
nop
xchg
popa
aas
xor
inc
sub
dec
imul
push
inc
push
loope
out
hlt
add
cmpsb
addr16
ljmp
adc
mov
es
clc
xchg
pop
iret
sbb
xchg
clc
push
dec
and
sub
sub
xchg
sub
mov
fdivrp
and
mov
and
pop
xor
loopne
loopne
pop
movsl
add
mov
and
sub
mov
test
fsubrs
addl
lock
inc
jecxz
pop
std
addr16
outsb
shlb
or
outsl
xor
scas
or
insl
aam
inc
xor
push
pop
xor
xchg
and
and
cmpsb
push
clc
mov
xchg
fdivs
mov
mov
mov
inc
cmp
out
jle
sub
jle
cld
dec
out
add
dec
and
fucomi
inc
xor
dec
adc
add
nop
insl
mov
inc
icebp
or
orl
insl
xor
mov
sub
orl
ds
cltd
xchg
xchg
cld
sub
pushl
out
lods
sub
push
pushf
sbb
add
push
movsl
mov
outsl
imul
filds
test
jns
adc
lods
mov
push
mov
push
or
jg
outsb
idivb
push
xor
jmp
int
mov
into
fsubs
outsl
pop
adc
lahf
je
jl
dec
fwait
mov
and
push
push
mov
add
push
fcoml
pop
lods
push
and
divl
lock
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
movsb
sbb
es
fidivrs
mov
out
sub
sbb
lcall
mov
push
mov
lea
into
cmc
jb
adc
popa
cmp
mov
push
mov
jbe
dec
mov
pop
nop
inc
push
pusha
cmpl
ss
aad
int
int3
xorb
jbe
imul
jo
and
or
jmp
inc
push
add
add
rorl
or
cmp
push
insl
out
dec
cli
adc
sbb
push
in
mov
lds
or
cmpl
xchg
lds
loope
mov
add
dec
or
dec
push
ret
in
xor
adc
add
mov
cmp
xchg
test
push
jle
cs
dec
shll
pop
cltd
sbb
dec
test
cltd
sub
mov
out
push
sbb
sub
mov
loopne
negb
call
fistl
mull
aaa
fldt
cld
sti
and
mov
nop
popa
pop
dec
or
fwait
push
sbb
push
xor
adc
pop
adc
cwtl
loop
cmc
xor
ljmp
cmp
jbe
adc
cld
dec
jl
adc
inc
inc
loop
shl
sbb
pop
scas
bswap
xchg
mov
mov
push
or
fimull
mov
xor
jp
mov
sti
repz
into
xchg
jo
test
pop
fwait
sbb
xchg
not
push
mov
pop
dec
icebp
ret
bound
add
stos
or
xchg
jns
es
inc
push
dec
add
sti
and
outsl
out
ss
call
popa
sbb
adc
add
xlat
dec
or
add
fidivrs
nop
out
aaa
pop
cmp
sub
dec
or
rorb
adcb
aad
jne
in
xchg
mov
xchg
xchg
inc
cmp
ljmp
lahf
dec
stos
and
hlt
lds
mov
push
loop
add
push
push
jp
mov
mov
sbb
in
jmp
xor
push
aam
lcall
adc
in
inc
fs
inc
xchg
push
add
sbbl
dec
repz
loope
and
inc
jne
test
push
aam
jecxz
or
psubw
out
stc
sahf
push
mov
mov
out
repz
subl
push
xchg
xchg
push
xchg
aam
enter
mov
dec
inc
out
jo
ljmp
jns
stc
push
mov
repnz
mov
and
jle
xor
xor
mov
mov
mov
aaa
stos
cmc
popa
idiv
adc
in
idivb
push
in
xor
cltd
push
inc
cmpsb
sahf
mov
adc
jb
fsubl
out
les
xchg
push
scas
xor
std
es
shlb
leave
adc
push
ja
xlat
cmp
mov
push
mov
das
lea
imul
lahf
fs
out
lret
and
gs
dec
aaa
in
or
add
mov
repz
pop
call
int3
adc
inc
push
rcr
scas
les
lea
cmp
mov
mov
dec
into
ss
ret
xchg
mov
pop
push
orb
dec
out
adc
out
stos
sbb
out
mov
mov
sbb
cli
jns
cmp
ljmp
testl
decl
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
or
mov
stos
adc
adc
clc
ljmp
dec
xchg
xchg
in
pop
int3
dec
mov
mov
or
adc
decb
add
fcom
sahf
fsubr
push
fistpl
or
mov
shll
fstps
jmp
or
mov
movsl
cmp
orl
loop
push
mov
push
sbb
sub
pusha
pop
cli
xorl
cmp
dec
cltd
mov
sub
movsl
lods
aad
jnp
pusha
cltd
andb
fcompl
insb
adc
je
inc
jns
lea
hlt
xchg
sub
add
add
sub
ror
mov
out
dec
mov
and
rorl
push
scas
add
sar
adc
mov
inc
xor
sub
mov
les
add
push
jg
ss
cmpb
xchg
lea
cwtl
pop
cmp
lret
fnsave
dec
xor
mov
dec
pop
fwait
cmp
mov
cmpsb
mov
into
test
ds
cmc
pusha
and
cmpsb
dec
cmp
je
add
push
xchg
iret
shr
xor
hlt
cmc
aas
ja
mov
mov
leave
adc
jge
inc
push
xor
push
xchg
shrl
into
mov
dec
lock
gs
cmp
pop
jle
outsb
je
pop
mov
xchg
clc
in
aas
jnp
xchg
rorl
pop
imull
je
or
adc
mov
sbb
enter
xchg
loopne
push
sub
xor
inc
cmovbe
add
in
sti
jo
fldenv
pop
and
push
and
push
xor
bound
cmp
lret
cmp
jns
pop
out
ret
add
inc
add
xchg
fistps
aas
xchg
data16
push
ljmp
xorb
mov
mov
or
das
adc
push
dec
aad
sbb
mov
jp
fildll
loop
dec
xor
fwait
inc
outsl
rcll
xor
gs
fisubrl
popf
and
in
sahf
push
lcall
test
mov
icebp
sub
out
sti
decb
lds
mov
ss
or
pop
das
xor
sbb
mov
mov
jle
inc
pop
push
leave
ds
mov
mov
fsubrs
jmp
lds
popl
sub
outsb
add
mov
lret
jle
adc
lds
cmpl
orl
sahf
stc
negl
stos
movsb
aas
sub
or
mov
mov
sbb
mov
test
int3
jo
pop
jmp
test
mov
jmp
jno
push
mov
std
imul
imul
insb
mov
loop
aad
pop
xchg
outsl
push
sbb
loop
cld
test
pop
jl
sbb
loope
outsb
loopne
mov
movsl
cwtl
gs
jle
pop
dec
clc
movsb
mov
lods
add
cmp
push
adc
add
bound
add
push
in
xor
push
pop
pop
in
adc
sub
outsl
cmp
insb
sub
fs
xchg
cmp
roll
repnz
and
loope
shr
jb
outsb
test
paddd
mov
movsl
adcb
pushl
test
cltd
enter
jmp
xchg
cmc
pop
andb
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
fists
orl
add
lods
mov
out
xchg
cmpsl
inc
add
fstps
mov
sub
sarl
jmp
rolb
addl
pop
stos
imul
mov
decb
xchg
mov
xor
repnz
sbb
addr16
cmc
pop
dec
test
mov
or
mov
fmull
out
mov
addb
mov
fildll
push
aam
jbe
outsl
mov
xor
daa
ficompl
sub
pop
inc
scas
sbbl
and
pop
cld
divl
inc
stos
or
gs
into
mov
sbb
movsl
sbbb
out
and
inc
mov
decb
mov
ror
imul
icebp
sbb
imul
out
cmp
adcl
je
faddl
add
sahf
jle
jno
and
cmp
pop
sbb
cli
addb
jb
ret
out
pop
daa
repz
mov
insb
sahf
movsl
adc
je
cmpsb
pop
adc
jmp
adc
dec
in
into
out
movsl
mov
loopne
sahf
sarl
xchg
addb
ret
ss
lea
mulb
and
inc
shll
test
push
roll
xor
cmc
test
in
pop
bound
push
in
xchg
aas
call
imull
xchg
repz
mov
xor
movsl
mov
decl
mov
push
pop
cld
pushf
repnz
mov
or
jb
pop
jl
push
xchg
bound
iret
add
xchg
mov
sbb
jae
pop
push
mov
jnp
popa
test
mov
pop
lret
jmp
xchg
dec
cmpb
mov
imul
sbb
cmp
subb
jl
jecxz
out
adc
and
rcrb
push
or
and
push
jge
sub
mov
fnsave
xchg
gs
aaa
pop
sub
test
sti
hlt
mov
sub
mov
push
cltd
inc
mov
enter
daa
lea
mov
adc
nop
add
cmp
fdivl
lahf
lds
stos
xchg
sub
int
pop
push
outsb
mov
insl
lods
sahf
xchg
fldl
sub
cmc
push
dec
cmp
outsl
push
js
les
cmp
iret
dec
sbbb
or
inc
push
aam
movsb
enter
xlat
add
pop
mov
xchg
mov
shl
shll
xchg
mov
fnsave
inc
rorl
jno
cli
out
or
cmp
test
pop
inc
and
aaa
inc
or
loope
scas
jmp
sbb
adc
lret
mov
jae,pn
mov
pop
sbb
jp
add
xchg
mov
pop
int
repnz
mov
jge
inc
jmp
mov
cmp
pusha
sti
stos
pop
mov
inc
or
jne
in
imul
stos
loop
cmp
dec
lcall
mov
lods
into
aaa
fsub
leave
fldlg2
in
add
adc
inc
cli
mov
jg
mov
cmpsb
out
and
and
je
out
lahf
aad
loopne
scas
xchg
lods
push
movb
push
rorl
ret
xorl
nop
mov
rorl
adc
stc
lcall
dec
rorb
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
rep
js
adc
adc
test
mov
fildl
mov
xor
into
aam
lds
call
push
xor
mov
push
push
cs
pop
xchg
sub
fdivs
jno
push
mov
dec
mov
add
mov
sub
sub
and
or
movsb
mov
jmp
sub
push
sub
popa
ss
mov
lcall
mov
mov
push
sbb
cmp
pop
mov
clc
cli
jmp
mov
cwtl
js
push
std
sub
jp
imul
int3
daa
mov
xor
je
clc
icebp
mov
jmp
sti
dec
push
add
add
mov
add
pusha
sub
inc
subl
xlat
jns
cmp
int3
xchg
lcall
mov
aaa
mov
xchg
jg
insb
mov
ret
sub
xchg
sahf
enter
jge
shlb
pop
pop
inc
rcll
lcall
add
das
jae
fisubs
mov
push
mov
ss
mov
out
mov
inc
mov
repz
and
sbb
scas
sub
sahf
dec
dec
ss
ret
out
mov
in
rcr
nop
jle
cld
fwait
lock
add
lock
je
cmp
xchg
cmp
mov
fnsetpm(287
mov
insl
or
push
pop
lret
push
inc
fnsave
adc
pop
adc
repnz
lods
fcmovnbe
mov
nop
mov
pop
jne
inc
sbb
jmp
lcall
lea
ljmp
ss
int
mov
add
fistl
mov
int3
mov
scas
inc
pop
scas
repnz
jmp
dec
or
aaa
cmp
cmp
nop
insb
ja
mov
sub
pop
divb
or
stc
mov
jg
pop
stos
pop
stos
sti
ljmp
and
leave
leave
test
imul
mov
and
aad
push
lret
ss
gs
fwait
jmp
sub
sbb
int3
xor
xchg
movsb
jae
cli
inc
outsb
dec
xor
adc
test
int
pop
cmc
xor
call
ret
fstpl
jge
imul
mov
mov
lret
imul
int
mov
sub
or
sbb
outsl
add
cmp
lahf
outsb
xbegin
jmp
jnp
pushf
push
or
cwtl
pop
das
push
jp
and
mov
les
std
sbb
aas
cmp
push
or
sbb
adc
xor
xorl
hlt
adc
pop
sub
jl
bound
mov
lret
dec
mov
cs
mov
test
adc
mov
sub
jmp
sbb
or
mov
in
pop
adc
mov
pop
xchg
stc
loop
ds
mov
lods
adc
imull
dec
or
or
adc
pop
mov
pop
or
jbe
out
jl
mov
mov
nop
fdiv
xor
es
inc
lock
scas
shlb
and
outsb
stc
push
dec
adc
fld
shlb
repnz
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
sbb
insb
insb
sysenter
adc
adc
xchg
lret
das
fucomip
test
xorb
pop
roll
mov
cmpsb
mov
out
or
mov
ret
scas
gs
xlat
dec
and
add
pop
push
jl
cltd
adc
mov
rorl
xor
scas
adc
movsb
mov
in
add
into
sbb
outsl
sub
fisttpll
xor
mov
mov
jl
fcoml
inc
adc
cld
and
mov
push
inc
add
jecxz
jge
ficoms
clc
lods
outsb
popa
sub
and
pop
sub
inc
jno
daa
movsb
sub
jb
jle
jno
cmp
inc
jne
pushf
mov
and
fwait
rorb
sbb
and
in
subb
int3
jae
lret
adc
jb
in
sub
push
iret
push
sbb
pop
and
shrl
or
and
xor
fdivr
jns
push
xor
and
ljmp
loopne
mov
or
sbb
gs
inc
xchg
mov
jns
lock
fimuls
int3
and
loopne
xor
ljmp
sub
push
rcrl
arpl
and
cmp
mov
test
xlat
jecxz
loop
mov
addr16
lds
xlat
fisubl
xlat
xchg
or
xchg
jnp,pn
int3
xor
pop
pop
xor
into
testb
or
push
fs
rclb
fstps
push
jb
pop
out
pop
push
jae
pop
xorb
mov
xchg
pop
rorb
movsb
repz
dec
cltd
test
or
and
leave
into
pop
mov
mov
jae
test
shr
sbb
ja
addb
pop
andb
data16
and
mov
push
jns
sub
hlt
popa
xchg
mov
aam
pop
mov
imul
rcl
mov
fdivrl
rorb
stos
neg
out
inc
add
stos
ss
xor
ds
pop
es
out
test
push
je
cld
adc
inc
aad
jns
sub
jmp
dec
cld
js
mov
mov
lods
add
pop
mov
sub
leave
add
lock
lock
adc
inc
mov
in
jae
dec
cmpsb
adc
fwait
cmp
je
mov
psubusb
rol
ss
xchg
pop
int3
sbb
ret
xchg
xor
jne
test
push
sbb
xchg
aad
pusha
or
rcrb
pop
mov
mov
pop
adc
mov
sub
fistpl
inc
ljmp
out
cmp
cltd
dec
pop
push
cmp
sub
cmp
mov
out
inc
and
sub
xchg
in
sub
and
cmp
adc
xor
dec
adc
pop
mov
cmc
sbb
mov
xlat
dec
cmp
cld
sarb
sub
sub
loope
loopne
sub
addr16
jne
mov
fists
dec
sub
or
pop
stos
lea
aad
loop
roll
xor
add
adcb
push
inc
add
cmp
mov
ljmp
push
test
shrb
xchg
sub
and
ret
jnp
sbb
loope
daa
dec
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
es
xor
adc
icebp
pop
imul
loope
add
jb
leave
addr16
push
xlat
aad
call
scas
jle
ja
pop
rcrl
and
inc
imul
cmp
sbb
xchg
addr16
gs
add
mov
popa
scas
roll
push
negb
or
das
inc
inc
ret
xchg
xor
dec
loop
pop
js
js
pop
cmp
neg
sti
clc
ja
int
mov
insb
xor
testb
xor
mov
rcl
add
lcall
roll
jle
scas
xor
imul
or
jle
pop
imul
imul
in
enter
inc
movsb
jae
mov
jp
into
dec
pusha
pop
loope
mov
les
ret
jg
bound
xchg
cs
inc
xor
sub
bound
clc
xor
add
and
mov
and
push
popa
fildll
add
jae
adc
ja
data16
xchg
xor
out
adc
fcoml
mov
sbb
pusha
mov
xchg
hlt
pushf
fucomp
jmp
push
or
or
out
cmp
jg
add
mov
fsub
jmp
movsb
fistpll
mov
xor
mov
mov
push
insb
enter
pusha
jnp
add
fistl
and
clc
xchg
js
popf
mov
jmp
adc
push
jnp
rolb
or
ss
lods
pop
or
lcall
test
int3
xchg
and
push
imul
sub
jl
cs
loop
or
jmp
adc
int3
jmp
lahf
rcll
mov
jp
jb
sbb
dec
loop
dec
daa
js
mov
repnz
outsb
pop
in
insb
repnz
xchg
push
ja
mov
stos
das
adc
mov
aad
inc
pop
inc
pop
push
hlt
aaa
out
dec
scas
imul
sbb
ret
xchg
mov
in
test
aaa
gs
dec
inc
shlb
inc
ss
cmp
jb
push
fst
aas
cmc
inc
add
or
lret
jb
and
lea
in
sub
adc
test
sbb
add
inc
addr16
jae
sub
movd
cltd
mov
pop
dec
mov
mov
aaa
xor
mov
insb
dec
jecxz
out
shlb
mov
xor
xchg
das
xchg
testl
iret
adc
mov
int
fldt
and
jns
xor
push
jno
insl
loopne
sub
xor
inc
fcmovnu
jo
ss
es
or
data16
mov
out
call
hlt
jae
cs
call
pop
pop
lahf
mov
hlt
pop
mov
aad
jnp
cmp
push
and
push
sub
jg
aaa
sahf
scas
scas
ljmp
cli
les
push
lret
popa
push
loop
call
outsb
lock
sbb
pop
xlat
xchg
out
inc
cmp
lahf
popa
imul
aad
jge
sbb
mov
les
imul
ss
mov
ds
testb
cmc
mov
mov
addr16
sti
push
sbb
xchg
sbb
sbb
inc
stos
lea
adc
mov
push
and
push
xchg
push
shll
test
xchg
and
cmpsl
icebp
push
sbb
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
or
lods
inc
sub
adc
mov
mov
adc
push
insl
insl
int3
mov
dec
out
sbb
sbb
fsts
mov
sub
jbe
xor
lock
call
add
gs
fmul
cwtl
and
adc
mov
xchg
and
add
add
rcll
lds
ljmp
inc
sbb
dec
mov
inc
mov
mov
push
jg
fildll
pop
les
roll
pop
pop
aaa
sbb
xlat
jno
dec
mov
repz
xor
xchg
sbb
fdivrs
sbb
mov
scas
or
clc
push
and
test
sub
lcall
jo
xchg
pop
aam
cmp
rcrl
mov
daa
fisttpll
push
mov
inc
push
and
push
aas
ud2
mov
subl
jnp
ds
adc
hlt
sub
ljmp
inc
jmp
jo
mov
cld
stos
or
aas
adc
sbb
lret
aam
gs
add
stc
inc
mov
addr16
or
cld
mov
inc
jbe
in
add
dec
pop
cmp
mov
xchg
push
mov
push
scas
leave
in
mov
aad
cltd
mov
fisubs
dec
jl
and
ja
test
nop
pop
loopne
mov
je
test
incb
imul
mov
mov
push
in
inc
test
iret
call
pop
mov
dec
psubw
daa
and
repz
fcmovu
or
fnsave
mov
pop
mov
nop
jp
or
ret
mov
scas
aas
lock
xchg
call
push
adc
rcrb
rorl
out
jp
xlat
fisubl
jmp
push
pop
xchg
sub
add
idivb
or
inc
shlb
cmpb
push
clc
dec
pusha
push
mov
roll
and
xorb
dec
and
jmp
lret
lret
clc
mov
xchg
add
nop
xchg
fcmove
jne
sub
adc
push
xor
pop
cmp
sub
jge
orl
repz
out
movsl
or
ret
jmp
jp
rcrl
fdivrl
fnstcw
dec
adc
gs
mov
enter
or
js
pop
stc
or
inc
inc
push
push
sbb
loopne
sub
in
aaa
std
mov
lods
mov
aad
rolb
cmp
or
clc
jno
push
cmp
cmpsl
and
mov
rolb
push
xlat
mov
jne
pop
xchg
jb
or
jb
repz
sub
movsb
xchg
pop
adc
imul
test
ds
clc
inc
mov
icebp
or
lock
add
out
int
mov
sbb
mov
gs
fadds
mov
ljmp
stos
repz
add
dec
lret
or
test
cmp
sub
sub
jne
pop
lahf
cmp
adc
mov
ret
adc
xlat
fcomip
lock
and
fcomi
dec
mov
in
cmpsb
and
leave
mov
sub
lret
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
push
xor
add
jp
dec
jle
icebp
sub
inc
xchg
mov
scas
out
jns
in
cmpsl
std
into
pop
ficoms
imul
ficoml
inc
fwait
iret
ss
xchg
in
cmp
sub
mov
rol
push
sbbb
mov
xor
jl
adcb
push
outsb
mov
test
jge
mov
popa
out
xor
es
sbb
dec
fcoml
xchg
sub
decl
jno
inc
mov
fnstcw
adc
mov
les
ljmp
aam
inc
popl
pop
movsl
xchg
jecxz
out
sbb
inc
ja
mov
inc
sub
jae
sub
pop
xor
hlt
fwait
mov
mov
or
ja
add
or
sbb
add
int3
std
or
push
es
outsb
and
movsl
lods
mov
out
cmp
inc
rcll
and
xor
push
daa
leave
mov
push
dec
add
fidivrs
jb
pop
mov
gs
or
cs
mov
inc
push
push
pop
push
sti
in
push
push
xchg
ss
jp
clc
imul
mov
add
aam
mov
ss
push
pushf
pop
movsl
fucomi
ret
or
ss
add
sub
pop
dec
fs
sbb
sbb
addr16
jge
sub
push
sahf
fbld
sub
xor
jmp
call
mov
and
imul
cmc
mov
cwtl
lea
insl
push
loop
sub
add
mov
lahf
adc
stc
cmp
mov
outsb
mov
in
dec
jl
mov
cmp
dec
jp
cli
ds
adc
cmp
xchg
aas
mov
mov
sbb
xchg
les
xchg
stos
mov
add
jae
mov
enter
gs
dec
ds
leave
push
mov
jo
pop
aaa
pop
leave
aas
push
pop
and
xchg
dec
aaa
cs
adc
insl
pop
je
sti
iret
insb
jmp
mov
cli
xchg
push
mov
inc
sub
arpl
push
into
mov
xchg
sbb
xor
push
mov
push
adc
add
xchg
add
rolb
xchg
sub
pusha
fnstcw
call
imul
push
sub
sbb
repnz
daa
cmp
push
outsl
xchg
push
aaa
inc
pop
jp
imul
push
add
add
push
in
dec
out
push
addr16
sub
jmp
mov
mov
cmpsb
jb
popf
outsb
mov
mov
cwtl
mov
insb
jmp
les
push
iret
cmpsb
adc
pop
int
mov
popf
pusha
cmp
push
aas
leave
xchg
test
fisttpl
hlt
mov
ss
cwtl
sub
stc
xchg
mov
inc
ljmp
or
add
cmpsl
dec
push
cmp
movsb
pop
enter
ds
cmp
cld
xchg
out
cmp
neg
xchg
out
mov
xchg
jno
xchg
sub
mov
fisubl
subl
mov
sub
jmp
pop
pop
jge
or
push
jge
pushf
ret
cmpsl
jae
push
mov
iret
aaa
or
push
jb
push
scas
cmp
loop
or
jne
loopne
jnp
jnp
xchg
call
roll
popf
sti
repnz
mov
lret
add
es
popf
add
rolb
mov
add
mov
mov
mov
jmp
or
mov
adc
bound
sbb
adc
in
jns
add
rol
movsb
in
inc
xorb
rorb
loopne
repz
dec
scas
or
mov
ljmp
cmp
inc
sub
ja
mov
adc
sbb
push
cmp
jae
or
shrl
dec
sbb
int
lcall
push
popa
sub
and
mov
dec
scas
mov
lods
popf
je
stos
mov
sub
sbb
test
cmpsb
xor
cmp
jns
push
scas
push
sub
sbb
iret
pop
sbb
scas
push
cmp
cld
scas
pushf
xor
js
mov
gs
into
adc
outsb
adc
xchg
jno
inc
add
cmp
sarl
sub
fidivl
add
sti
jp
cmp
in
lret
xchg
add
sbb
lret
xchg
pop
pop
and
mov
mov
inc
popa
xor
mov
sbb
or
and
mov
cmpsb
mov
cmp
int
inc
sub
add
jmp
sub
pop
in
ljmp
leave
push
call
shrl
cmc
hlt
xchg
cmp
dec
popa
mov
dec
fwait
pop
lea
insb
xor
jnp
inc
in
pop
push
mov
dec
outsb
or
loopne
jno
jg
test
sub
xor
loop
xlat
dec
add
inc
pop
sbb
stos
add
lcall
jge
push
add
adc
adc
jnp
mov
sbb
push
fnstcw
ret
fwait
mov
out
jb
sbb
lods
pop
mov
cwtl
xor
or
jmp
sbb
mov
rcrb
shlb
popa
stos
in
fidivrs
jge
popf
test
xchg
ljmp
mov
cmpsl
or
mov
fwait
pop
pop
mov
dec
add
sbb
xchg
mov
sahf
xor
ss
aam
mov
movsb
xchg
push
jge
jmp
add
jb
ret
sbb
rcll
mov
cmpsl
es
adc
gs
mov
stc
mov
out
ja
xchg
imul
inc
test
scas
call
shrl
lret
aam
adc
call
xchg
mov
adc
jo
mov
sahf
in
pop
aam
outsl
dec
test
in
mov
cltd
int
sbbb
xlat
jecxz
fcmovu
jmp
xchg
lahf
jno
xchg
mov
das
and
les
xor
dec
sbb
in
testl
push
flds
inc
push
insl
rorb
xor
nop
repnz
mov
add
fcom
mov
movsl
xchg
pusha
roll
scas
push
outsl
sbb
mov
incl
mov
adc
xchg
or
xchg
adc
jge
mov
mov
jp
ret
push
cmp
adc
cmpsb
shlb
jne
popf
sarb
lret
or
ds
cmp
call
lret
sbb
jbe
decb
mov
mov
arpl
mov
sahf
filds
xor
hlt
shll
sub
mov
push
add
adc
and
lock
out
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
jmp
lods
or
adc
adc
rdmsr
lock
pushf
inc
pop
clc
lds
je
push
arpl
push
adc
insb
cltd
aad
loope
and
and
in
mov
and
jl
pushf
mov
loopne
pusha
ljmp
pushf
loopne
mov
out
aas
sbb
std
inc
in
push
ljmp
lret
mov
xchg
lock
mov
lea
inc
push
imul
stc
lds
cmp
out
addr16
out
cld
js
test
jo
jo
inc
cmp
lea
pushl
xchg
shlb
outsl
das
and
das
xchg
out
mov
adcb
fnstsw
pop
pop
fisttps
cmp
cmp
adcl
xor
sub
cmp
int
mov
and
mov
into
mov
and
pushf
aaa
cmp
mov
mov
sarl
shlb
in
hlt
lret
call
out
push
aad
mov
sbb
xor
add
lahf
std
out
pop
lret
mov
loope
xchg
ficomps
dec
xchg
std
cli
inc
std
sub
xor
mov
push
push
stos
test
sub
mov
xchg
dec
jne
cmp
aad
les
das
mov
push
adc
cmp
cli
fucom
outsl
in
lret
jnp
out
inc
bound
stos
sahf
fnstenv
xchg
mov
and
cmovg
push
inc
cmpsb
and
inc
lea
jle
jae
and
movsl
arpl
out
inc
xor
fwait
imul
in
loope
xor
fistpll
xlat
sub
sbb
cltd
test
ficoms
repz
movsb
dec
repnz
sub
jno
js
adc
sarb
xchg
lock
xchg
dec
jb
adc
mov
mov
mov
ja
sti
xchg
mov
dec
cli
sbb
pop
and
test
xchg
daa
ds
sub
sbb
add
arpl
sbb
mov
pop
xchg
xor
fs
popa
mov
dec
clc
dec
cmp
xor
fwait
stos
fwait
mov
xlat
add
add
shll
pop
ficoml
int
push
xor
pop
or
adc
mov
idiv
mov
jb
pop
pop
adc
or
and
add
inc
push
mov
fdivrs
repnz
test
jo
mov
xlat
pop
outsb
popf
mov
sub
shlb
adc
out
stos
xchg
inc
inc
sub
filds
ficoml
cmp
jmp
inc
fsub
xor
and
int3
mov
fcmovnb
scas
add
pop
fucomip
jbe
popa
jmp
mov
adc
mov
adc
int3
sub
cmp
cli
cltd
mov
mov
or
pop
call
push
inc
nop
inc
fbld
imul
mov
sub
icebp
imul
ljmp
sbb
pop
ljmp
nop
fcom
data16
sub
test
sahf
or
or
outsl
aas
sub
pop
xor
test
cmpsb
and
outsb
cmc
inc
cltd
hlt
lcall
lock
addr16
dec
fiadds
out
and
mov
dec
negl
ret
dec
jo
mov
xchg
int
stos
fimuls
ljmp
sub
or
movsl
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
test
faddl
lret
xor
inc
scas
cmpb
ret
lret
mov
movsl
xchg
vmwrite
outsb
jp
in
lret
jns
push
push
inc
insl
rcr
scas
pop
xchg
mov
fisttpll
add
push
in
cmpb
inc
sbb
bound
inc
xchg
out
lds
rcr
sbb
pop
clc
cmc
sbb
jmp
mov
mov
scas
rcr
mov
fmuls
jecxz
mov
popf
clc
and
stos
cmpl
fimuls
cli
sub
outsl
fidivs
and
fdiv
cs
dec
sbb
xor
in
adc
test
push
cmp
pop
xchg
int3
mov
in
adc
jb
and
sbb
out
jge
icebp
fidivrl
int3
stos
adc
mov
xchg
lret
mov
lock
pop
xchg
xchg
imul
movsl
mov
add
bound
pop
shlb
and
negb
mov
addr16
and
or
jecxz
mov
add
or
xchg
push
jo
pusha
mov
cmp
dec
mov
clc
dec
push
sbb
inc
je
lahf
insb
ret
dec
adc
xor
jp
push
add
adc
dec
ss
cltd
dec
fdiv
cltd
fistpl
push
mov
cmpsb
iret
inc
sub
outsb
fldenv
sti
icebp
pop
out
push
xchg
in
pop
sti
sub
or
hlt
inc
add
adc
inc
pusha
and
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
