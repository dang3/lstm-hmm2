push
mov
sub
xor
jmp
into
rcr
aad
mov
ja
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
bound
out
fdivr
andl
out
push
ret
nop
lahf
jmp
dec
lods
lahf
and
aad
fwait
dec
adc
pop
cmc
xchg
filds
jbe
bnd
loopne
sbb
cli
jp
xchg
or
add
test
pop
int3
push
adc
or
test
nop
les
push
mov
mov
cmc
adc
rcr
pop
mov
jle
ret
mov
mov
mov
mov
pop
jns
outsb
pop
fisubrl
arpl
loop
pop
out
loopne
mov
mov
out
xchg
adc
dec
jge
popf
fbld
in
push
aaa
push
jns
mov
xlat
imul
and
fwait
pop
push
push
cs
or
arpl
aam
add
nop
sbb
pop
stc
cwtl
imul
scas
std
clc
test
pop
insb
scas
aad
sub
pop
xchg
cmc
jg
inc
pop
push
test
out
mov
movsl
insl
mov
fmull
out
and
push
addl
ljmp
in
pop
jl
add
icebp
stos
adc
pushl
mov
lret
iret
push
xor
addr16
mov
cmc
add
mov
addr16
cmp
jmp
scas
es
aam
jno
inc
mov
jns
sub
push
hlt
std
test
cli
bswap
cltd
inc
leave
pop
dec
mov
in
push
dec
pop
push
and
fidivrs
mov
push
sub
mov
xlat
xor
pushl
add
out
sbb
mov
test
cmp
push
decb
dec
lcall
cmp
dec
lret
sbb
stos
pusha
fnstsw
mov
push
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
shlb
pop
jle
js
jle
js
lcall
imul
scas
xchg
inc
xor
movsb
cmp
jp
adc
in
dec
out
cli
sar
sarl
daa
int
sub
push
iret
aam
adc
sub
and
push
or
insl
mov
sbb
repz
fiaddl
xchg
cmp
cmpsl
loopne
lods
mov
ja
pop
loope
or
mov
jl
mov
push
adc
sub
div
mov
jp
adc
push
clc
xchg
repnz
inc
lods
dec
mov
push
adc
fisubrl
push
sbb
xchg
cmp
hlt
pop
jo
add
sub
pushf
into
lods
frstor
jle
lahf
fbstp
or
dec
movsl
mov
mov
das
or
xor
mov
stos
mov
call
dec
shlb
jmp
stc
sub
xor
es
sahf
add
aas
ret
or
jg
fildll
inc
mov
jg
jecxz
push
and
xlat
mov
sbb
jnp
rol
rclb
out
cmpsb
repz
aas
cmp
sbb
call
test
flds
cmpsl
nop
imul
sti
testb
jmp
fstps
imul
sub
xor
ljmp
lahf
xor
push
imul
aad
mov
cltd
push
fisubs
test
sahf
nop
sbb
add
cmpsl
mov
in
js
mov
or
int3
and
inc
dec
stos
fists
shrl
dec
mov
pop
test
nop
add
push
iret
fldl
aas
push
les
xor
lock
cmp
gs
ja
jg
cli
cmp
and
xchg
fnclex
sub
es
ret
adc
sub
getsec
jmp
adcb
mov
jo
mov
xchg
not
sbb
out
leave
shl
out
mov
iret
cmpb
fsts
mov
fisubrs
add
test
in
idivl
xchg
into
movsl
push
in
push
mov
xchg
call
pop
cmp
bound
lret
test
pop
jl
shl
sbb
out
pushf
les
into
enter
in
cmc
jmp
push
mov
loope
negb
das
add
repnz
movsb
mov
addb
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
js
jle
js
and
leave
decb
cmpsb
aad
jne
je
jl
mov
icebp
xor
adc
sbb
cmp
inc
fs
sbb
loop
mov
jmp
cltd
mov
push
mov
adc
and
outsl
xchg
add
pop
filds
cmp
cmc
push
jge
push
lods
jne
lds
push
cmp
rcrl
stc
movsb
dec
xor
jnp
lock
mov
test
stos
xchg
mov
fiaddl
fiadds
xchg
cld
and
jae
lods
mull
data16
jno
arpl
mov
aaa
or
cli
push
jne
sbb
movl
xchg
lcall
out
and
sbb
cwtl
mov
stc
sahf
out
mov
subl
les
imul
lret
cmp
sbb
mov
in
jg
mov
jbe
mov
pop
popa
lret
leave
aaa
xchg
das
inc
loop
cmp
sahf
xchg
clc
lcall
adc
jns
sahf
addr16
les
cmp
mov
scas
ret
orb
pop
mov
cmp
add
add
pop
jp
xor
xchg
cmp
movsl
mov
sbb
mov
cmp
add
stos
cmp
loop
sbb
pop
aam
push
push
push
out
jnp
cmpsl
xlat
mov
ljmp
imul
mov
add
inc
lahf
js
ss
punpckhwd
mov
adc
lock
push
ss
je
and
shlb
fs
add
push
inc
cmpsl
adc
or
test
ds
into
cmp
int
push
call
outsb
jmp
xor
int3
push
xchg
sbb
jg
ficomps
jae
adc
xlat
push
scas
add
insb
popa
or
mov
xchg
hlt
fcomi
mov
shl
fbld
jae
aaa
xlat
and
lcall
sub
xchg
imull
push
pop
sbb
cli
dec
stos
into
pop
cmp
fstl
out
pop
xchg
movsl
xor
adc
push
es
stos
jb
mov
ret
push
test
call
mov
dec
divb
push
xchg
daa
adc
popf
repnz
mov
mov
aas
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
xor
js
jle
js
push
outsb
push
sbb
ret
pop
sbb
mov
mov
or
addl
clc
fs
sub
mov
sahf
cmc
mov
xchg
js
fcoms
fs
call
scas
and
jmp
stc
pop
inc
adc
jmp
sbb
sbb
sbb
inc
pushf
xor
mov
stc
jne
or
test
mov
mov
aas
rolb
rcl
mov
out
loop
sub
call
in
xchg
pop
hlt
gs
cmp
fcoml
add
sti
fs
dec
ds
mov
mul
sbb
and
mov
subl
push
cmpsl
jg
gs
add
int
or
mov
cmpsb
pop
inc
lret
mov
sub
mov
mov
xor
or
xchg
cmc
loop
lret
cmp
mov
ja
mov
stos
adc
jge
inc
and
shrb
pop
scas
inc
sbb
cmp
pop
stos
jp
mov
ret
imul
iret
jmpw
dec
frstor
popf
mov
dec
stc
push
popa
dec
sub
push
jns
dec
fldl
ds
add
cld
out
mov
xor
pop
stos
or
mov
mov
add
xchg
inc
lret
push
mov
cmp
cmp
mov
jbe
mov
adc
mov
inc
dec
fs
xor
push
adc
adc
outsb
mov
adc
insb
mov
roll
inc
and
cmp
faddl
aaa
fbld
mov
push
or
push
jae
lods
sub
rcrb
es
dec
leave
xchg
inc
pop
inc
popfw
jbe
cs
xchg
and
testl
add
enter
inc
iret
inc
je
add
xchg
jns
icebp
loope
sub
mov
cmp
jmp
stc
jnp
jns
fsubrl
imul
jo
shl
pushf
pop
mov
aam
loope
dec
fsubs
jo
shlb
jns
fdivrs
es
cmp
pop
jmp
pop
sbb
mov
push
pop
xchg
movsb
fidivrl
jo
stos
push
mov
adc
cmc
cwtl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
push
jmp
jle
js
and
push
mov
insb
lock
cmp
jbe
mov
aam
xor
in
filds
push
aas
mov
std
jmp
repnz
inc
imul
pop
cmp
fcoms
ja
pop
enter
push
ret
orb
adc
push
or
ss
cmp
aam
loopne
test
cmpsl
inc
scas
inc
aas
or
ret
shr
mov
sub
movsl
dec
jl
mov
push
sbbb
add
push
ljmp
sub
lods
inc
sub
js
and
xor
fisubs
mov
fmulp
scas
popa
dec
cmp
sub
call
int
pop
inc
repnz
jg
xchg
rclb
push
add
scas
pop
adc
roll
pusha
movsb
stos
repz
out
add
push
sahf
mov
push
dec
imul
jl
pop
add
scas
push
ret
aas
add
push
dec
sarb
jo
jae
adc
cld
fidivl
cmc
loopne
push
add
cmp
daa
pmuludq
ret
mov
pusha
enter
fldcw
add
sbb
in
jecxz
js
lcall
shll
adc
and
pop
scas
sub
jl
push
sbb
inc
cli
out
mov
jg
aas
push
nop
movsl
mov
fwait
pop
or
dec
cmpsb
push
pusha
mov
aas
and
sbb
dec
pop
inc
sub
test
lahf
sub
mov
aam
arpl
lahf
jp
or
outsb
std
mov
or
fists
js
and
arpl
xchg
mov
in
xor
popa
rolb
sub
adcl
andl
loop
xor
pop
xchg
cmpl
ss
jl
mov
imul
mov
test
sbb
ret
rclb
sbb
sti
xor
or
jge
insb
jl
ret
outsb
ret
cmpsl
cli
pop
xlat
movsb
ficoml
dec
andb
test
or
add
cmp
jne
mov
ss
icebp
ss
movsl
pop
pop
insb
mov
pop
loope
test
fs
jo
insb
and
das
inc
mov
xchg
add
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
add
js
jle
js
punpckhdq
cwtl
or
das
fs
push
sub
movsl
mov
mov
dec
scas
jne
cmpsb
adc
cmp
adc
pop
lret
into
mov
dec
es
cmpsl
xchg
inc
fnsave
nop
addr16
in
sbb
and
jb
dec
les
push
jecxz
shl
adc
push
xchg
mov
into
mov
mov
loop
xlat
sahf
iret
pop
ret
sarb
pop
jl
mov
and
stos
fildll
insl
inc
jecxz
cltd
subb
decl
push
ret
mov
out
jnp
stos
jp
int
adc
test
and
adc
loope
mov
insb
sub
mov
push
loopne
jno
xor
inc
xchg
cmp
push
sbb
stos
icebp
hlt
dec
ljmp
sub
mov
pushf
jbe
fstpl
leave
xlat
pop
call
cmpsb
and
cmp
out
jbe
sbb
mov
ss
inc
pushf
cmp
popa
mov
jmp
sub
add
hlt
fsubr
sti
fmul
scas
sub
push
xchg
ja
jmp
or
and
pop
arpl
and
sub
mov
aas
addr16
es
stos
popa
and
cmp
fucomip
daa
adc
or
sbb
repz
fsubr
sbb
or
or
int
mov
mov
mov
add
gs
jg
inc
sbb
pop
loop
mov
sahf
mov
fstl
jnp
xor
and
ja
cmp
pop
out
dec
test
test
push
inc
enter
inc
pop
repz
sbb
xchg
xor
mov
fildll
sbbl
mul
dec
and
sbb
test
ret
adc
dec
push
mov
sub
das
inc
xchg
arpl
dec
mov
cs
cwtl
shlb
sbb
push
adc
mov
ss
out
jmp
inc
addr16
call
mov
test
mov
mov
inc
dec
pop
ret
xor
mov
mov
std
fld
mov
cmp
xor
adc
xlat
cmpsb
arpl
adc
add
and
mov
inc
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
arpl
add
js
jle
js
imul
pop
outsl
fldenv
push
lds
inc
aad
movsb
fwait
out
leave
stos
mov
out
shlb
cmpsl
add
adc
mov
adcb
push
shll
js
or
movsb
inc
mov
clc
xorl
ja
shl
jb
sub
out
adc
lds
sti
out
rcrl
fldenv
mov
and
shll
sbb
fsubrp
adc
cmp
out
or
rolb
mov
mov
sub
enter
in
mov
popf
adc
inc
lret
add
dec
in
movsb
cmp
gs
lock
pushf
pop
push
ja
sub
sub
notl
jg
popf
out
aaa
mov
enter
sbb
insb
push
and
scas
adc
pushl
mov
mov
or
add
jle
xchg
xor
sbb
rcr
ss
popa
and
fdivrp
mov
in
fsubrs
addr16
lret
mov
pop
inc
or
push
push
scas
sbb
addr16
das
inc
cs
inc
jne
shlb
es
fs
dec
outsb
dec
bound
test
inc
lcall
arpl
imul
push
outsl
pop
leave
sub
pop
pop
outsb
stos
xchg
and
cltd
or
pop
faddl
cld
and
hlt
pop
movsl
xor
clc
sub
pop
add
cmpsl
push
xchg
pop
jns
sbb
out
xchg
cmpsl
pop
mov
in
adc
push
lods
mov
clc
xchg
lods
cltd
mov
and
xchg
or
fs
repz
jl
inc
aaa
mov
lods
test
mov
xor
or
ret
ds
mov
add
addb
xor
add
xor
sub
jbe
mov
xchg
add
leave
icebp
inc
cmp
dec
jns
jmp
pop
mov
cmp
mov
push
outsb
cmp
std
mov
aam
call
lret
xor
dec
mov
scas
xchg
cmp
cmpsl
mov
push
sbb
sbb
daa
jo
mov
insb
arpl
pop
jp
jno
add
sub
mov
mov
repz
mov
inc
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
dec
pop
mov
js
jle
js
cmp
aam
pop
fadds
test
aaa
stos
test
loope
mov
and
js
inc
sub
cli
cmc
push
shll
adc
xchg
dec
cld
fbstp
pushl
mov
fstps
mov
imul
out
add
and
adc
add
sbb
sub
dec
push
mov
push
dec
cmpl
adc
pop
adc
pop
jae
push
fdiv
aaa
mov
test
outsb
es
out
xorb
and
insl
sbb
push
filds
sub
jns
pop
cmpsb
out
mov
fsubrl
cmpsl
jecxz
popa
add
ss
pop
inc
jge
xlat
sub
jno
rol
jnp
scas
fadd
cmp
lcall
pop
mov
movsl
in
lea
mov
pop
add
inc
sahf
pop
xorl
fldt
stos
add
pop
fcomp
les
shll
fidivl
adc
and
cmp
xchg
mov
xchg
cli
mov
xchg
lret
pop
cld
call
fs
insb
ss
in
pusha
push
lock
mov
stos
xor
loop
mov
sub
xchg
add
jne
sub
repz
lret
push
jo
xchg
push
cmpsl
push
hlt
xlat
mov
push
mov
and
aas
lock
push
pusha
repnz
inc
pop
push
or
shll
push
adc
inc
clts
pop
or
imul
mov
fsubs
movsl
pushf
pop
xor
sub
repnz
icebp
jg
jmp
add
xor
addb
add
add
xor
mov
jae
out
xchg
adc
jmp
xchg
enter
sbb
or
xor
aad
loopne
jmp
jge
je
dec
xor
pop
mov
dec
lea
cmp
xchg
xchg
push
xor
stc
movsb
test
dec
in
sub
push
clc
cwtl
sar
lret
std
scas
sbb
dec
mov
aaa
pusha
add
jnp
xchg
push
sbb
out
sbb
xchg
jp
pop
lahf
jecxz
push
xchg
clc
mov
lret
shlb
or
jo
xchg
mov
cmp
in
dec
sub
xchg
xor
xchg
addr16
jp
pop
insl
in
loope
out
out
addr16
jle
add
out
xlat
sub
lock
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
pop
xor
or
js
jle
js
out
repnz
movsl
cmc
out
test
mov
aas
inc
adc
adc
pop
xchg
lea
rcr
xor
xchg
jns
cmp
js
mov
popf
incb
fmuls
inc
add
lods
imul
push
std
icebp
in
inc
inc
sarl
sub
adc
add
mov
inc
rorb
adc
movsl
mov
lahf
mov
in
pop
dec
xchg
cs
fwait
adc
jo
dec
sbb
shl
mov
nop
mov
add
lea
or
jp
mov
pop
shlb
sub
fdivl
jecxz
add
cmp
idivb
rcrb
sbb
jns
jbe
stos
and
imul
push
sub
xchg
into
mull
outsb
inc
push
sbb
push
dec
les
subl
pop
add
mov
xor
cwtl
movsl
xchg
pop
imul
add
cmc
packuswb
dec
jne
aad
xchg
sbb
mov
pop
sub
mov
jp
push
mov
xor
rol
xchg
jg,pn
cmp
addr16
jo
mov
and
fidivl
in
cmp
pop
imul
and
xor
add
pop
inc
jb
mov
out
ss
mov
fstps
mov
rcr
in
outsl
lods
loope
jae
push
dec
rcrl
push
mov
push
fmulp
std
fistpl
mov
test
testb
lret
and
adc
sub
inc
sbb
mov
enter
adc
stos
mov
cmp
arpl
jae
or
add
mov
xlat
lret
xor
adc
sti
movsb
add
add
mov
and
add
dec
jp
lock
icebp
out
jne
sbb
xchg
lcall
imul
cmp
inc
daa
mov
pop
imul
lret
aas
cmp
scas
jl
cmpsl
inc
or
fcoml
and
lea
push
shll
test
ret
mov
rclb
cmp
cmpsb
shrl
je
cmp
adc
push
mov
mov
cmp
pop
jecxz
hlt
jnp
mov
les
or
imul
test
icebp
in
sub
jmp
ror
int
rcr
aad
bound
mov
adc
jle
js
mov
sub
arpl
sub
jp
add
mov
xchg
pop
test
jnp
dec
push
push
in
lcall
sar
lret
or
mov
xor
mov
and
shll
sub
repnz
mov
push
fildl
add
cs
jg
setle
fucomp
push
xchg
ja
mul
out
stos
mov
or
aas
add
jge
pop
cmp
sbb
mov
test
data16
pop
sti
push
or
ficoml
sti
mov
in
addr16
pop
or
mov
dec
lock
dec
dec
jecxz
push
pop
cwtl
adc
insb
daa
shlb
out
je
dec
or
mov
jae
popa
mov
push
adc
sbb
sub
mov
mov
xchg
outsb
inc
fwait
in
loop
mov
ret
push
jb
insb
or
mov
sub
xor
rcrl
sbb
imul
scas
jno
negb
xchg
mov
movsl
and
nop
lcall
aaa
xchg
loop
push
out
lcall
sub
nop
pop
bound
aad
push
mov
cmpsb
cmp
into
mov
iret
sbb
xchg
addl
add
pop
ss
mov
adc
lock
mov
in
mov
mov
jns
mov
loope
pop
cltd
mov
jnp
inc
sub
sub
aaa
in
aad
or
or
pushf
adc
sub
daa
fimuls
push
iret
sahf
pop
sbb
int3
and
ds
pusha
fwait
test
adc
cwtl
mov
xchg
clc
ljmp
mov
ret
shrb
out
popf
pop
gs
jo
push
aad
xchg
xchg
xchg
je
dec
mov
sub
sub
call
out
shrl
leave
test
mov
mov
cmpsl
sbb
mov
push
push
inc
inc
sub
mov
ds
aas
test
pop
add
aad
mov
mov
test
popf
pusha
sti
xchg
cs
mov
iret
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
jne
and
or
js
jle
js
loope
cmp
loopne
jae
or
lret
sub
sbb
jo
popa
in
pop
push
adc
test
sbb
inc
and
jge
xchg
shll
xor
mov
jo
pop
cwtl
cmp
adc
in
daa
cmp
sbb
repz
pop
out
fstl
cmp
xchg
fsubs
std
addb
pop
jl
add
jle
pop
sbb
jae
mov
fldt
jecxz
insl
fstp
je
fstpl
mov
or
xchg
mov
jecxz
jnp
push
int
mov
pop
xlat
jae
mov
pushl
movsl
aad
pop
and
xorl
adc
push
fnsave
ret
xchg
add
das
xlat
cmc
mov
fs
je
jnp
inc
test
jg
jl
and
sbb
mov
mov
inc
pushf
mov
mov
xchg
dec
cs
pop
lret
lret
or
add
xchg
jge
xor
popf
repnz
sub
or
mov
dec
rorl
jg
adc
test
and
dec
dec
mov
repnz
repz
pop
loopne
cmc
jmp
jmp
dec
push
cli
lret
mov
pop
push
rclb
rolb
cmpsl
subb
jmp
add
cli
ja
push
std
jns
fs
repnz
cmpsl
xchg
add
aam
nop
push
mov
scas
adc
enter
xchg
push
and
ret
popf
pop
mov
testb
pop
stc
xlat
sahf
ljmp
sub
and
leave
pop
aad
add
scas
pop
loopne
mov
and
inc
jns
jmp
inc
adc
data16
mov
xchg
jae
lock
push
insl
push
adcb
test
xchg
xor
shl
repz
clc
sbb
xchg
daa
dec
or
xor
xchg
lods
inc
xchg
iret
sub
les
xor
scas
mov
sbb
arpl
push
sbb
mov
add
mov
pop
push
mov
stos
mov
jo
stc
adc
icebp
nop
lock
addl
in
mov
aad
enter
scas
sbb
add
leave
and
mov
jb
in
cld
sub
sbb
jge
test
cmp
fnstsw
pop
pushf
or
add
mov
jmp
ror
ror
ror
test
xchg
push
push
sti
or
js
jle
js
cmc
or
out
lods
aam
mov
test
push
aaa
jecxz
xchg
pop
jo
icebp
ss
xor
movsl
jl,pn
clc
in
and
push
loopne
aas
loope
sbb
lods
mov
jbe
and
sbb
dec
xchg
adc
jecxz
jge
or
dec
mov
lret
sbb
push
int3
xor
push
xchg
mov
push
jp
scas
iret
popl
imul
std
aas
insl
lret
and
adc
scas
outsb
imul
mov
cld
mov
xchg
push
mov
icebp
xchg
jecxz
les
add
push
mov
lahf
mov
sbb
sti
cmc
pushf
lcall
jle
sub
gs
push
rcrl
add
adc
push
in
loopne
lcall
hlt
cmp
xchg
sub
pop
mov
mov
push
pop
pop
mov
jne
pop
jmp
leave
shll
fmuls
mov
pop
sbb
sub
xchg
fildl
jecxz
pushf
inc
std
leave
jno
outsl
mov
sub
push
inc
pushf
add
dec
sub
cmp
scas
mov
sbb
or
arpl
movsl
jb
push
es
pop
mov
fiadds
mov
or
xor
xchg
arpl
cmp
popf
xlat
int3
stos
ljmp
xor
and
mov
sub
mov
divb
mov
push
cltd
cmp
out
out
push
test
lds
cmp
test
fbld
sti
pop
mov
repz
ret
lahf
outsb
dec
shll
ret
into
mov
ljmp
push
das
cmp
and
jl
cmp
push
loope
pushf
mov
mov
xlat
push
loop
leave
movl
addr16
repz
sbb
shll
fistpl
push
out
aam
rcrb
sub
outsl
mov
pop
add
test
mov
push
inc
xor
popa
xchg
cltd
test
inc
outsb
testb
jecxz
sbb
xor
sbb
jg
aas
and
push
inc
mov
dec
pushf
rolb
xchg
outsl
insb
inc
lods
cmp
dec
lea
repnz
call
hlt
push
lret
rcr
int
movb
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
test
in
sbb
jle
js
daa
mov
push
sbb
js
add
hlt
jns
adc
jno
add
roll
jle
fs
cld
adc
fwait
mov
mov
inc
adc
int3
xchg
and
and
jmp
popf
fnsave
jno
ds
mov
sbb
mov
inc
adc
add
daa
lock
shlb
lock
pop
ja
js
in
fs
lcall
adc
dec
push
stos
jge
or
dec
gs
inc
imul
jns
imul
mov
sbb
push
xlat
lcall
xchg
push
stc
push
arpl
jo
lds
mov
stc
inc
and
data16
gs
xor
scas
negl
mov
or
int3
mov
andl
sti
pop
movsb
xchg
and
xchg
xchg
out
inc
aaa
outsb
les
lds
push
daa
loopne
push
dec
mulb
enter
mov
mov
inc
ljmp
cld
lods
cmc
mov
dec
out
push
sub
frstor
fs
xchg
push
adc
sbb
cmpb
or
and
stc
dec
mov
add
push
mov
dec
xchg
jb
add
shl
test
mov
jbe
mov
xchg
sbb
mov
fdivl
adc
xor
test
dec
into
outsl
jo
out
mov
ret
jmp
xchg
lock
mov
test
pop
divb
and
flds
or
stc
lods
push
enter
and
add
xchg
hlt
and
pushf
cmp
adc
inc
movsb
xchg
push
xor
pop
in
sahf
nop
xchg
inc
mov
leave
fidivs
nop
imul
and
pop
mov
je
and
loop
addl
jl
mov
iret
popf
lcall
push
iret
insb
ja
fidivrs
test
andl
repnz
stc
cmp
aam
sub
ja
adc
sub
fnsave
cmc
xor
rorl
inc
jmp
xchg
roll
outsl
ja
xchg
cmp
pop
loop
dec
orl
movsb
and
fisubrl
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
and
xor
push
insl
push
sbb
into
dec
xchg
xchg
cli
sbb
lahf
xor
mov
test
sub
lgs
xchg
sbb
jle
jb
jae
daa
dec
mov
push
aad
pop
sbb
mov
inc
movsl
es
xor
and
mov
test
stc
or
mov
fldl
call
inc
mov
pop
das
scas
mov
repz
fidivl
cmpsl
mov
loop
jae
or
nop
inc
stc
jae
aad
fnstenv
cli
into
push
aas
add
mov
adc
scas
jnp
jno
sub
sub
inc
jp
cltd
loop
js
jle
jmp
lods
and
cmpsb
jno
iret
inc
lea
mov
imul
in
test
imul
mov
sub
jns
hlt
pop
movb
aam
cmp
mov
ret
push
cmp
sahf
jo
inc
xor
push
adc
into
loope
iret
pop
loop
dec
dec
jae
lcall
cmp
fwait
lods
sbb
adc
ror
pop
sub
pop
sub
je
and
call
adc
cmp
mov
in
mov
or
push
mov
and
cmpsl
ret
fistpl
es
aas
inc
cmp
xor
sub
sbb
inc
cmp
dec
jge
push
xor
pop
or
pusha
inc
in
cs
cltd
xchg
xchg
inc
hlt
lret
lahf
ret
sbb
aam
mov
xchg
into
push
aad
pop
and
jbe
imul
adc
jp
sar
push
add
push
add
cmp
das
xchg
jg
movsb
sub
fiaddl
stos
dec
test
imul
inc
push
and
mov
mov
jo
cmp
fcmove
push
inc
fwait
call
nop
insb
jae
jne
xlat
xchg
xchg
xchg
js
inc
or
mov
bound
cmp
fidivl
mov
xchg
or
dec
fldenv
or
adc
shlb
sbb
ds
pushf
dec
mov
aaa
pop
mov
mov
leave
add
in
test
push
pop
mov
inc
jl
push
mov
jge
call
loope
in
test
frstor
popa
push
sub
repnz
in
mov
mov
add
mov
jmp
into
rol
ror
mov
sub
iret
adc
js
jle
js
mov
in
ficomps
xchg
sbb
in
jb
lods
je
imulb
cmp
inc
xorl
lds
cli
inc
dec
cmp
xchg
add
arpl
jg
dec
inc
nop
sbb
xorb
cltd
dec
std
test
repz
mov
ljmp
push
loop
mov
push
ret
popa
push
aad
out
push
push
ret
push
jl
cmpl
fnsave
dec
mov
mov
push
push
aaa
cmc
insl
mulb
mov
or
aam
shll
dec
and
in
inc
mov
imul
repnz
inc
out
test
jnp
sbb
pop
lcall
lods
dec
popf
imul
add
dec
mov
push
pushf
sbbb
push
adc
out
cld
add
hlt
sbb
fucomip
jb
sbb
mov
ljmp
addl
mov
xchg
mov
mov
insb
sub
daa
aam
int
or
test
jne
sbb
mov
jns
dec
push
jae
insl
push
mov
pop
push
mov
cmpsl
jb
dec
and
sub
std
inc
xchg
add
and
ret
lret
clc
sub
xchg
icebp
clc
loopne
mov
cmp
add
mov
dec
mov
and
dec
rcrl
pushf
test
out
in
lds
and
stc
pop
add
fs
int
sahf
mov
lret
jae
fdivrs
inc
xor
hlt
xor
dec
sub
mov
sub
cmc
cmp
dec
subb
inc
loopne
jecxz
shrb
retw
jb
aam
loope
iret
inc
mov
mov
jp
xchg
fucomi
or
in
addr16
jl
jo
daa
jl
inc
push
or
push
jge
pusha
hlt
incb
fdiv
xor
push
outsl
cmp
cld
out
cmpsb
mov
repnz
popf
mov
push
push
adc
mov
sbb
popa
sub
and
add
std
jle
push
int3
pop
cmp
mov
into
enter
loopne
mov
and
cmp
jns
popa
mov
sub
stc
pusha
jl
stc
in
loope
pop
ja
mov
inc
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
pop
call
js
jle
js
add
and
jnp
sub
jb
or
xchg
out
dec
adc
subl
cmpsl
addr16
sub
cmp
subl
push
shlb
push
aam
jb
fscale
pushf
lahf
fistpl
lods
cmpsl
push
popa
dec
stc
ja
into
scas
xchg
jl
and
cmp
add
mov
jne
icebp
inc
or
sub
sbb
jg
push
sub
iret
enter
sub
stc
inc
or
push
sbb
scas
inc
idivb
std
aad
out
lahf
cmp
sti
in
or
xchg
aaa
fs
stc
xchg
imul
mov
inc
cmc
das
sub
ss
xlat
and
pop
cwtl
sahf
sub
ljmp
inc
xor
enter
hlt
aaa
jg
das
xchg
sbb
mov
jecxz
adc
pop
mov
or
push
mov
shrb
dec
stc
lds
mov
aas
lods
and
jno
insl
pop
dec
rcr
popf
loope
iret
cli
lcall
stos
mov
inc
xchg
call
jmp
ret
enter
aas
adc
movsl
xchg
or
cmp
in
int3
ja
pop
lds
sbb
and
and
dec
outsl
adc
outsb
push
pop
into
cwtl
cltd
mov
mov
and
pop
sbb
pop
cmp
inc
rcrl
lods
jno
nop
fsubrl
mov
test
mov
cs
or
lods
fadds
out
loope
mov
in
into
sub
ds
dec
mov
iret
xchg
ss
push
and
mov
dec
sub
add
pop
rclb
dec
xchg
das
rclb
and
leave
push
jo
xchg
test
sub
ss
mov
icebp
pop
adc
dec
mov
test
add
arpl
gs
cwtl
xchg
ja
ss
ljmp
dec
ss
inc
lret
mov
xlat
cmp
nop
pusha
push
mov
je
fwait
push
sahf
loop
push
shrl
pop
das
push
adc
daa
add
sbb
sub
or
cmp
sub
je
lcall
insl
cmp
ljmp
push
push
adc
nop
hlt
fcoms
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
adc
sbb
js
jle
js
mov
cs
cmp
fcompl
lcall
in
inc
adc
shrb
loopne
cs
and
or
outsb
test
sub
mov
ret
andl
ja
mov
pop
push
fisubrs
sbb
movsl
cmp
cmp
jbe
jb
xchg
les
les
inc
and
ljmp
in
jne
mov
cmp
mov
inc
pop
push
imul
push
cmp
jno
ret
push
sub
rol
mov
data16
inc
imul
inc
out
sbb
not
ret
shrb
jecxz
xlat
shr
push
jmp
stos
push
aaa
pop
mov
pushf
ss
aam
mov
lds
cltd
xchg
out
cmp
mov
push
mov
push
test
inc
push
pop
lods
jne
mov
cmc
and
pop
push
test
pop
stos
or
jle
scas
loope
and
inc
loop
cmp
and
sbb
dec
adc
cmc
sub
lahf
inc
xlat
lods
push
ds
scas
xchg
jno
mov
xorb
cmpsb
xor
inc
inc
xor
movsl
lret
add
dec
femms
xchg
jp
and
push
bound
inc
add
sbb
adc
xor
ss
addb
mov
jl
in
test
aas
int3
loop
jo
and
sub
sbb
push
aas
shll
add
sti
cmp
push
aas
xchg
ror
aad
cmp
lret
xchg
pusha
ret
cs
icebp
xchg
push
mov
enter
fcom
jno
imull
mov
dec
into
or
pop
push
pop
or
push
mov
xlat
xor
stos
add
das
mov
fsubl
mov
inc
cmc
mov
std
ja
out
or
mov
es
rcrb
gs
pop
add
loopne
dec
into
cmp
stos
sbb
xor
sub
xchg
and
fstpl
and
popa
mov
popf
cmpsl
mov
mov
inc
arpl
repz
bound
popa
stos
jb
or
cmpsl
xchg
jmp
test
jp
iret
mov
cmp
daa
ret
vpsadbw
dec
xchg
pop
xorl
jmp
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
insb
jl
sahf
es
jle
js
sahf
and
stos
std
mov
stos
mov
js
inc
jne
fcomps
in
gs
es
push
add
sub
popf
test
mov
mov
rorl
leave
adc
in
push
xchg
mov
out
adc
push
xchg
sbb
mov
sbb
outsl
push
shlb
jg
aaa
sub
mov
faddl
xor
fnstsw
fs
addl
xor
loop
mov
or
stos
add
lret
dec
or
jb
fs
in
mov
fistl
push
mov
xor
es
mov
cli
aas
and
or
and
adc
cwtl
jae
jp
ret
mov
jo
das
test
ds
in
push
sbb
fucomp
popf
push
add
pop
data16
jle
push
fwait
divl
subb
icebp
movsl
sbb
js
roll
ljmp
push
pop
mov
cltd
ror
popf
ret
sub
add
pushf
cmp
or
ss
out
insl
xchg
xor
jg
ss
pop
andb
out
pop
adc
orb
leave
inc
xor
cmpl
icebp
xlat
add
inc
js
pop
fs
inc
or
movb
int
and
repz
ret
push
push
fadd
xchg
push
fs
dec
int3
flds
jne
fnstenv
pusha
icebp
ret
inc
cld
add
adc
stos
sub
scas
xchg
or
xor
push
je
sbb
out
pop
and
lcall
lcall
inc
mov
lea
jbe
lcall
cld
aas
xchg
sub
mov
fsubrl
loopne
fs
dec
sbb
jb
arpl
stos
add
pop
pop
bound
cld
sbb
andl
jo
xor
insl
mov
js
xchg
xorb
xchg
xor
add
nop
addr16
movsb
cmp
stos
xchg
dec
and
mov
sbb
adc
mov
cltd
push
setg
push
mov
cwtl
addb
shll
xor
int
movsb
insl
outsl
and
mov
ja
mov
das
mov
mov
lret
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
sarl
js
dec
jle
js
arpl
mov
stos
imul
jne
lods
mull
nop
call
push
scas
fstpl
mov
add
inc
lahf
rcll
ret
add
mov
xchg
icebp
stc
lods
and
out
enter
int
pop
cmp
dec
ret
roll
pop
xor
lahf
out
pop
aas
je
fistpll
push
jbe
aam
scas
jae
adc
mov
sbb
jns
pusha
call
nop
push
push
popl
fucomi
leave
aas
out
push
xchg
shrb
sub
stos
insb
sub
adc
mov
sarb
gs
sub
jns
jns
inc
fidivrl
dec
push
in
jle
imul
scas
cmp
scas
in
lds
mov
mov
push
mov
sub
cltd
cmpsb
xor
mov
jno
cltd
and
es
int3
cs
xlat
jnp
xchg
adc
imul
fdivrs
cmp
xor
int
jl
dec
imul
add
cmc
adc
mov
pop
popa
add
imul
scas
popf
xchg
ret
ret
mov
test
push
adc
clc
dec
inc
mov
aaa
sbb
push
out
xor
mov
fsubrs
dec
push
mov
pusha
subb
mulb
dec
cmp
ss
pusha
sub
mov
and
push
jne
mov
pop
insl
sub
in
pop
add
jl
mov
test
or
sahf
xchg
sbb
or
cmp
inc
mov
mov
jecxz
fwait
or
mov
inc
iret
jge
jg
rcrl
or
jle
imul
je
pop
je
jbe
rolb
adc
outsl
push
js
adc
sub
push
in
pop
repnz
test
mov
xchg
test
or
pop
ficoml
ss
lods
fcomps
aad
cld
mov
push
push
imul
inc
jmp
sbb
jle
or
inc
lods
pop
xorl
mov
test
jmp
fs
sbb
int3
cmp
loop
lock
push
cwtl
leave
pop
shlb
imul
adc
andb
loope
inc
ret
adc
mov
andl
jbe
aad
sahf
or
jae
lock
mov
push
lea
inc
push
or
xor
pop
adc
mov
iret
inc
xchg
out
adc
push
inc
and
adc
arpl
mov
push
cmpsb
sarl
xchg
jbe
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
iret
cmpsl
jno
js
dec
jle
js
lcall
test
jl
inc
jecxz
pop
pop
aas
dec
in
out
xchg
mov
push
bound
push
push
jecxz
and
mov
gs
test
inc
mov
lock
jmp
push
fidivrs
dec
and
sbb
rcll
out
add
scas
pusha
jp
jne
aaa
in
loope
in
adc
fs
xchg
sbb
nop
xchg
mov
imulb
lret
cltd
jnp
pop
jne
aad
adc
jge
gs
das
jbe
mov
xchg
rorl
hlt
push
jmp
loop
les
imul
cld
xchg
dec
push
imul
cmp
push
cmc
pop
das
fwait
adc
shr
xor
sbb
xorl
add
dec
xchg
jge
jb
dec
sbb
mov
popf
or
pop
jbe
cmp
pop
jp
add
mov
pop
loopne
fisubrs
push
xor
pop
or
ds
jg
mov
in
fisubrl
push
sbb
push
mov
aad
mov
pop
cwtl
lcall
orb
movsl
call
in
cmc
cmp
push
mov
push
inc
cmp
cwtl
lock
ret
in
pop
in
inc
mov
lcall
bound
pusha
in
call
pop
sar
mov
movsl
fisttpll
dec
rcr
inc
stos
pop
mov
xchg
lds
lahf
jns
les
fiaddl
cli
lret
popa
mov
or
mov
push
cwtl
dec
mov
daa
lods
into
mov
or
adc
cwtl
stos
daa
adc
inc
xchg
clc
jnp
cmpsl
shlb
and
add
popf
pop
scas
rclb
inc
daa
cmp
js
pushf
sbb
sub
xor
xchg
insb
xor
push
jb
sarb
push
pop
inc
insb
jae
std
pop
pop
rorl
jle
mov
jae
push
mov
xchg
jns
ss
repz
mov
ja
cmp
je
cltd
iret
cmp
xchg
sbb
mov
mov
sbb
inc
dec
hlt
iret
adc
ljmp
jae
cmp
mov
xchg
and
inc
jo
sbb
lret
dec
mov
aas
push
push
xorl
jmp
ds
outsb
pushl
push
jg
mov
call
lea
fdivrs
popa
ss
jnp
sbb
dec
and
jmp
stos
and
push
and
stc
or
or
sbb
or
mov
outsb
cmp
adc
popfw
mov
mov
fs
pop
cmpsl
add
ja
out
push
or
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
cmp
mov
dec
jle
js
repz
lods
iret
subl
cmpb
mov
lret
popa
add
jne
adc
sub
cld
mov
mov
in
cltd
out
push
jo
lret
mov
mov
out
loopne
incl
mov
movsl
or
lods
mov
clc
inc
mov
dec
mov
xlat
and
add
inc
mov
lds
aas
jp
popa
dec
inc
test
mov
xor
cmp
popf
and
push
and
cmp
daa
pop
shlb
ljmp
jle
movsb
cltd
sub
mov
jne
aad
dec
stc
pop
jne
fdivrp
xchg
test
leave
icebp
test
jae
xchg
mov
jne
pop
icebp
or
fsubrs
sub
enter
outsl
adc
std
and
sbb
xchg
sbb
fwait
sahf
in
jge
mov
cmp
pop
pop
les
mov
pop
pop
rdpmc
ja
mov
pop
or
les
mov
test
stc
shll
in
xchg
movsb
xchg
iret
inc
mov
out
es
mov
jp
adc
xchg
lret
sub
call
pop
mov
lods
mov
xchg
mul
inc
out
sahf
cld
stos
jmp
cmc
xchg
scas
mov
mov
mov
ret
lds
movsl
jae
mov
loopne
jl
cmp
inc
into
movsl
js
mov
bound
push
enter
xchg
dec
inc
xor
shrl
into
sti
xor
gs
add
pop
xor
out
pop
mov
adc
jecxz
xchg
in
das
adc
xor
mov
push
into
mov
add
ret
push
enter
sub
inc
mov
mov
bound
test
or
ret
outsb
push
sti
or
lcall
orl
cmpsb
dec
push
and
ret
dec
sbb
nop
push
clc
mov
xchg
int
bound
mov
and
cmpsb
jb
push
fwait
add
in
mov
fistps
gs
fstpl
scas
jae
inc
push
adc
pop
sub
pushf
cmp
mov
inc
dec
aaa
or
mov
movsl
orl
aaa
xchg
and
rcrl
adc
inc
sub
mov
pop
mov
les
sub
fsubs
and
mov
call
or
cmpsl
mov
dec
sysret
xor
mov
add
dec
out
dec
mov
lcall
xchg
and
test
mov
outsl
adc
int
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
xchg
js
dec
jle
js
stos
mov
jnp
mov
mov
ret
aas
inc
int3
ret
push
rcl
shll
popf
pop
call
pop
xchg
leave
movsl
test
js
jecxz
cltd
or
fwait
cmp
aas
out
or
push
inc
mov
or
out
and
cli
out
xor
sub
ss
lret
inc
test
test
mov
xor
insb
jmp
shl
xchg
xor
out
dec
add
adc
stos
nop
add
inc
xchg
inc
ljmp
repz
cltd
mov
cli
xchg
inc
stc
add
fadds
xlat
in
fildl
movsl
aam
fsubrp
pop
in
out
insb
jecxz
js
push
jg
ret
mov
test
cmp
mov
movhps
cwtl
adc
shlb
sbb
sub
add
fadd
fbstp
xchg
sub
mov
xchg
xchg
push
pop
push
jle
adc
out
std
sbb
pop
aad
jns
stos
mov
jnp
dec
loope
dec
adc
xchg
lcall
pop
xchg
jecxz
xchg
adc
or
dec
cli
repnz
int
adc
mov
inc
mov
dec
mov
and
enter
mov
in
xchg
mov
cmpsb
fdivrl
and
push
sarb
pop
adc
push
dec
leave
rcr
xorl
dec
loop
or
in
mov
ret
adc
shlb
test
out
mov
ret
pop
xor
test
push
inc
shrl
mov
inc
lcall
pop
mov
rcrb
stos
xor
sbb
inc
mov
lahf
mov
popa
adc
test
xor
push
test
and
push
mov
sbb
loopne
loop
jle
dec
push
sub
pusha
adc
ds
cs
lcall
dec
mov
mov
lods
fadds
fstps
xchg
rcll
sbb
out
push
je
cmc
mov
sub
aam
cli
mov
ds
sub
lahf
stc
iret
and
add
repz
pop
pop
pop
adc
jo
sbb
mov
cmp
lock
aaa
xor
stos
jne
mov
fs
or
sub
loop
movsl
push
xchg
nop
cld
pushf
mov
sbb
ss
or
lret
out
dec
lahf
push
mov
and
add
mov
jge
adc
and
sbb
subl
inc
inc
push
pop
mov
push
ljmp
or
out
dec
icebp
out
jns
mov
stc
out
jnp
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
cmp
xor
dec
jle
js
adc
lea
cmp
add
lock
sbb
scas
cmpxchg
fwait
cli
or
rorb
mov
enter
out
enter
sti
mov
push
cltd
jmp
test
cmc
mov
loopne
aad
or
adc
sbb
repnz
ret
sub
clc
hlt
push
jns
inc
jge
sahf
enter
jg
push
xchg
lds
dec
stos
lods
pop
mov
cmp
int3
jge
ja
fstps
xor
cmpsl
mov
loope
mov
cld
test
inc
or
cltd
or
int
lcall
ror
iret
mov
inc
repnz
xor
fstp
and
push
stc
lds
dec
pop
adc
pop
push
fcmove
shl
dec
adc
loop
inc
mov
xchg
lahf
arpl
aaa
mov
je
les
pop
pop
add
into
sti
push
mov
je
in
fcmove
stos
or
lds
shrb
jmp
jmp
mov
sub
sti
or
xchg
pop
imul
mov
jo
icebp
sub
cmp
sbb
rclb
pop
outsl
push
mov
add
jle
fcoml
cmc
sbb
stos
out
loop
les
dec
inc
or
loope
cmpsb
mov
pop
sbb
shlb
and
jns
sbb
mov
sahf
arpl
mov
jl
adc
xchg
clc
inc
and
cmpb
sbb
out
sbb
and
mov
pop
jp
cmp
dec
dec
std
stos
add
jle
mov
mov
mov
mov
jae
loopne
iret
sub
rorl
push
add
lods
sbb
lahf
jmp
push
je
mov
int
inc
cmp
shl
sahf
stos
xchg
add
mov
int3
outsl
cli
stos
scas
imul
pop
mov
mov
cmc
jg
es
fldt
jae
icebp
inc
jle
call
nop
scas
mov
int3
mov
or
cli
pop
push
mov
mulb
jp
cmp
nop
shl
push
int3
xchg
addb
lcall
loop
inc
dec
orb
push
jmp
jmp
stos
and
mov
xchg
dec
push
std
lock
xor
add
scas
test
pop
lret
rcrb
inc
out
xchg
leave
jns
fistpll
jae
dec
test
dec
stc
daa
shll
mov
push
icebp
jno
sbb
dec
nop
ljmp
and
mov
in
inc
clc
jmp
int
rol
ror
aad
inc
jecxz
fmul
ds
xor
js
and
mov
pop
inc
or
jecxz
fcom
dec
adc
addr16
mov
repz
lds
repz
insl
aas
pop
cmp
cltd
sbb
push
push
sbb
mov
cmpb
inc
mov
inc
adc
dec
cmp
push
cltd
pop
xchg
bound
jg
mov
stos
sub
aam
xchg
or
xor
movsb
cmp
ffreep
bound
sbb
cmc
pop
sahf
push
xchg
dec
cmpb
vfmaddsubpd
adcl
or
fimull
test
xchg
lahf
jns
repz
pop
ffreep
into
xlat
mov
idivl
dec
les
mov
popa
add
mov
inc
inc
in
inc
das
fstl
loop
rorl
mov
shlb
hlt
cmp
arpl
xchg
push
fs
inc
xchg
enter
add
dec
mov
cmp
or
inc
sbb
pushf
or
dec
xchg
nop
xchg
fnstcw
add
mov
cmpsb
jmp
in
scas
fs
xor
push
mov
add
mov
negb
mov
cmpsb
jnp
ds
or
jae
inc
push
mov
xchg
push
push
movsb
push
sbb
repz
mov
push
mov
das
adc
bound
daa
pop
mov
xchg
cltd
insb
aaa
movsl
add
in
xchg
mov
movsl
adc
push
pop
lock
call
hlt
addl
leave
inc
pop
mov
sbb
fwait
mov
inc
push
inc
fstpt
dec
insl
test
out
mov
ja
mov
arpl
adc
adc
jp
jle
insl
test
mov
inc
inc
and
notb
pop
and
dec
jmp
adc
lock
into
test
jp
sbb
inc
or
push
decb
xor
push
cmpsl
repnz
or
jmp
aad
xor
cli
cmc
lret
outsb
sub
jle
cltd
test
rcl
push
out
adc
dec
sar
sub
adc
std
addr16
imul
clc
fsubp
shrb
fsubrl
xor
xor
cmp
mov
push
int3
lret
pop
pop
in
icebp
or
das
jmp
jp
test
dec
jbe
test
gs
popf
sbb
mov
xor
adc
insb
sahf
cvttps2pi
cmpsl
and
mov
les
imul
into
mov
sbb
cmpsl
jo
and
cmp
xchg
jle
dec
xchg
rcr
mov
arpl
push
fdivrl
popa
loopne
sahf
shrb
fadds
lea
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
movsl
cld
shrb
cmp
dec
jle
js
dec
xchg
mov
xor
ffree
sub
sbb
cli
cmp
jle
dec
clc
mov
mov
iret
jae
shlb
roll
sub
push
cld
sub
push
push
inc
cmpsl
loop
bound
daa
outsl
mov
in
or
leave
dec
gs
jmp
mov
pop
mov
sub
fwait
sti
mov
addr16
test
push
dec
adc
adc
jno
cs
es
aas
insb
mov
ja
adc
sbb
adc
xor
ret
inc
push
or
push
ret
push
mov
hlt
jge
pop
mov
cmpsl
push
lcall
negb
mov
lods
and
push
loope
lret
aaa
dec
orl
mov
sub
sub
sbb
ror
push
and
cmp
loopne
imul
ja
pop
ds
dec
aas
aaa
scas
scas
repnz
jae
ds
es
mov
xlat
sbb
add
jno
pusha
xchg
push
ja
fwait
sbb
movsbl
pop
sbb
sbb
fwait
adc
testl
and
or
add
into
outsb
lock
or
mov
sbb
and
and
jp
pop
dec
imul
addr16
xchg
es
cmp
fsubrp
call
xor
push
lret
jmp
sbb
xchg
int
xchg
or
mov
cmp
cld
imull
fimuls
cmc
sti
lahf
test
inc
fdivrs
sbb
aas
jmp
pop
mov
insb
fidivrs
add
push
cmp
shlb
roll
test
stc
std
xchg
mov
hlt
insb
xor
mov
cmp
cld
cmpsb
dec
xchg
sbb
add
adc
test
mov
popa
mov
sbb
fidivrs
sahf
pop
mov
mov
addr16
imul
inc
aaa
sbb
add
jmp
jo
cmp
roll
es
inc
imul
gs
inc
push
and
inc
sbb
fisttps
inc
mov
pop
lock
mov
sbb
fcomp
imul
cwtl
sub
xchg
dec
mov
xchg
inc
mov
insl
iret
xchg
dec
mov
shlb
sbb
cmp
xchg
jno
outsb
pop
repnz
mov
cmp
mov
adc
push
xchg
fwait
lock
notl
xchg
cmpsl
jno
clc
test
sub
shrb
xor
lahf
xor
jnp
sbb
or
xchg
push
fsubr
pop
ljmp
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
adc
jle
cmp
dec
jle
js
push
in
pop
jnp
xchg
push
outsl
out
outsl
xchg
jmp
dec
mov
je
int3
mov
cmpsb
xchg
hlt
add
lahf
lods
sub
add
nop
dec
insb
lock
stc
in
or
jmp
fsts
loope
int
push
xchg
rorb
xor
add
xchg
jae
push
cli
inc
xchg
jge
mov
lea
imul
inc
lock
insl
out
pop
push
jae
mov
adc
jmp
dec
adc
out
dec
dec
mov
dec
loope
mov
ret
incl
leave
adc
mov
mov
add
hlt
mov
stc
ljmp
cli
jns
adc
ss
pop
mov
jb
pop
outsb
int3
push
push
int3
out
mov
out
int
mov
dec
ret
xchg
sti
sub
xor
inc
push
test
push
lcall
loopne
push
mov
or
bound
push
xchg
push
jb
rcrl
push
push
les
imul
mov
loopne
std
pop
add
or
and
xchg
cmc
bound
mov
mov
cltd
or
xor
ret
out
in
into
fwait
adc
insl
into
push
pop
cmp
imul
lfs
and
test
out
lock
or
push
cmpsl
cwtl
out
mulb
cmp
std
cltd
dec
jge
cli
fisttpl
mov
dec
cmp
test
dec
int
pop
inc
lret
popa
cmpsb
hlt
addr16
lret
jbe
dec
and
iret
fldenv
mov
dec
lods
hlt
pop
insl
ret
inc
ds
pop
stos
popl
cmpb
fbld
mov
cvtps2pd
pop
cmp
das
negl
pop
push
mov
cmp
or
pusha
outsl
push
lcall
mov
mov
and
lcall
les
cmpsb
out
pop
in
push
loopne
or
dec
lcall
mov
and
sbb
pop
jno
aaa
mov
rclb
jle
movsb
inc
inc
js
int
push
jl
je
jecxz
lret
cmp
loope
xor
mov
sahf
or
adc
ret
dec
sub
pop
inc
sub
movsl
daa
and
xchg
xchg
hlt
insb
or
dec
xchg
xor
clc
xor
out
mov
xchg
fdivrl
jge
add
out
movsb
and
in
or
add
sub
xchg
add
test
js
and
fisubs
xchg
jno
mov
dec
icebp
xchg
pop
jae
lahf
std
jle
cwtl
stos
xor
jae
mov
mov
jmp
rol
ror
leave
rcr
aaa
mov
out
mov
js
dec
jle
js
subl
sahf
mov
lcall
mov
pop
ret
jle
movsl
push
inc
inc
jecxz
js
mov
and
mov
jg
xor
imul
mov
stc
push
cmpsb
sub
lahf
mov
daa
outsl
loop
loope
rol
pop
mov
sub
movsl
sbb
mov
mov
xor
push
mov
cwtl
outsl
rol
dec
xchg
ret
mov
mov
xchg
xchg
push
jbe
outsl
xor
xor
out
mov
leave
or
popa
cmp
mov
xchg
out
iret
and
jmp
cwtl
roll
addr16
sub
xor
jne
xor
jecxz
leave
xchg
add
or
ja
movsb
bts
idiv
popf
xchg
and
mov
out
and
add
rolb
test
add
or
dec
and
cmp
push
mov
pushf
mov
out
insl
add
mov
iret
insb
push
outsl
mov
shrl
add
out
stos
sub
es
cmp
inc
sub
fwait
cmp
gs
adc
outsl
mov
inc
icebp
xlat
mov
out
repz
lods
cmpsb
gs
xchg
rcr
clc
push
lods
sbb
je
imul
jle
or
xchg
and
imul
cltd
lds
adc
cld
xchg
test
cmp
movsl
test
mov
lods
outsb
add
sub
fcoml
push
pop
cs
add
cmc
hlt
xchg
dec
loope
cmp
cmp
stc
dec
and
xchg
mov
fcom
pusha
push
cmc
sbb
xchg
push
inc
add
fsts
pushf
xor
subl
repnz
jle
push
adc
sub
add
frstor
pop
sti
outsl
addr16
mov
mov
push
in
in
and
mov
inc
jbe
pop
and
out
addr16
add
rclb
mov
mov
mov
mov
sub
or
lock
and
xor
fstpt
sbb
stos
dec
mov
enter
push
adc
mov
push
shlb
jns
cmp
dec
push
es
scas
outsb
repz
push
push
out
xchg
push
add
lds
push
adc
jne
lahf
movd
jecxz
pusha
ret
pop
dec
add
jae
out
mov
adc
xor
pop
cld
bound
xchg
push
sbb
aas
fld
jle
and
popf
inc
imul
jp
jb
loop
xor
jae
mov
mov
sub
pushf
loop
xor
andl
cmpsl
aad
mov
fidivrs
push
std
fs
jmp
add
iret
rcl
lret
ror
xlat
lods
and
popf
mov
sahf
mov
js
dec
jle
js
pop
adc
dec
xchg
sbb
push
das
ss
les
enter
dec
mov
xchg
leave
mov
adc
cmp
repnz
pop
jl
aam
js
aam
push
pop
imull
cmp
data16
push
sub
or
sti
cmp
aas
sar
cmpsb
jle
scas
sub
cmp
or
rol
mov
xchg
jmp
stos
jns
dec
sbb
jp
xor
ds
cmp
xchg
mov
or
mov
mov
jg
stos
inc
je,pn
and
mov
sub
fidivrl
outsb
cmp
cli
rcrl
push
pop
jbe
add
adc
lock
sub
push
inc
mov
lret
std
sub
mov
push
dec
js
cmpsl
outsl
lret
jmp
outsl
sub
das
pushw
dec
cmp
pop
imull
mov
add
cs
cmpsl
mov
mov
insb
dec
jle
push
push
loop
dec
cmpsl
mov
and
popf
push
or
ret
pop
inc
movsb
mov
imul
ja
push
mov
shlb
pop
cmp
aam
out
shll
pop
sbb
jae,pn
mov
imul
and
jmp
shr
xchg
filds
clc
das
mov
xor
pop
pop
push
test
or
ds
cli
mov
pop
stc
insb
cltd
loop
adc
sub
mov
mov
add
mov
es
xchg
and
mov
pop
pop
cmp
push
push
xor
pop
inc
jbe
and
xchg
adc
xchg
mov
stc
insl
sbbb
xchg
cmp
popa
fwait
in
cmpsl
jl
pop
sbb
aam
push
out
and
mov
sbbb
adc
inc
movsl
push
push
lods
mov
int3
mov
push
sub
dec
mov
into
mov
outsl
or
ja
pop
add
xchg
inc
cmp
into
arpl
xchg
or
sahf
aaa
arpl
das
sub
ja
roll
ror
stc
push
sbb
pop
fcomps
dec
and
inc
imul
jle
add
lds
mov
lock
mov
lahf
dec
fwait
lahf
daa
fidivs
mov
mov
xor
fidivs
test
pop
push
or
loop
push
xor
rcrb
push
fisttpl
dec
inc
mov
pop
adc
and
je
dec
pop
xchg
push
pop
aam
jns
push
push
call
sub
mov
dec
incb
pop
push
js
dec
mov
lock
pushf
add
div
mov
jmp
aas
ret
rol
sbbl
mov
js
dec
jle
js
xlat
dec
add
add
jo
cmp
in
in
push
fsubrs
lods
dec
cwtl
push
dec
cwtl
cltd
cmp
mov
arpl
sbbl
in
xchg
jae
popl
dec
pusha
and
mov
and
xchg
int3
pushf
pop
push
dec
lock
push
push
pop
push
push
push
enter
mov
cmpl
push
test
and
sbb
cmpsl
ja
stc
dec
aam
mov
out
xor
arpl
xchg
sbb
int3
ss
stos
xor
cs
ds
rclb
lods
rcrl
aad
imul
fs
mov
xor
adc
aas
sub
dec
js
adc
mov
or
and
push
xchg
lock
mov
mov
xchg
out
mov
fcomi
push
or
and
fdivrl
test
sbb
xlat
fwait
incb
fcomp
mov
sbbl
jecxz
add
mov
scas
push
push
out
rcll
lea
les
dec
aas
es
stos
sub
enter
ret
pop
mov
insb
or
cs
outsl
jge
pop
stos
push
mov
enter
and
and
jae
xchg
movsb
mov
cltd
loopne
fisttps
inc
mov
arpl
ss
xorl
mov
ja
call
int
jbe
sbb
mov
roll
jmp
sub
pop
mov
inc
filds
and
pop
inc
nop
cltd
sub
movsb
stos
xchg
cld
mov
mov
mov
mov
xor
cmp
xchg
xor
push
mov
pop
adc
xor
pop
std
ja
push
mov
ljmp
stos
popa
jbe
mov
xchg
mov
ret
xchg
stos
bound
cmp
mov
pop
mov
mov
cwtl
adcb
sub
les
iret
or
imul
das
hlt
pop
imul
addb
cld
out
dec
jecxz
or
inc
xchg
paddw
cmpsb
jne
jecxz
cmp
loopne
hlt
cld
adc
arpl
inc
adc
ljmp
jno
xchg
cltd
sahf
push
scas
adc
mov
ljmp
xor
and
cmc
xchg
push
or
cmc
fwait
mov
out
sbb
lret
or
adc
loopne
ret
pop
sbb
fsubs
sbb
rcll
adc
cmp
jmp
xor
pushw
fsubs
enter
sbb
jmp
ds
cmp
mov
inc
in
dec
mov
les
dec
jle
js
lods
jmp
or
stos
loopne
jnp
dec
decb
xchg
add
and
sbb
popf
push
lret
dec
mov
mov
mov
aad
mov
cmp
in
fistpll
pop
inc
add
addr16
loop
pop
in
or
lret
and
and
mulb
xchg
add
mov
test
sti
jmp
bound
pop
push
inc
sti
xor
mov
and
in
lock
aaa
popf
xor
mov
pop
lcall
orb
xor
imul
pop
in
aas
mov
adc
xchg
in
pusha
pop
mov
das
iret
jmp
or
sub
push
xchg
stos
popf
dec
insl
xor
out
xor
or
jns
in
push
add
fmull
clc
in
mov
imul
por
sti
adc
ljmp
test
movsb
or
je
nop
xor
aam
arpl
push
mov
pop
xchg
lahf
imul
mov
mov
addb
cmp
xor
leave
repnz
into
xor
call
cld
mov
loope
dec
push
push
mov
push
xchg
dec
jnp
mov
or
dec
in
or
imul
cwtl
add
jo
sub
cmp
cli
cmp
clc
adc
mov
fiaddl
cld
xchg
jns
out
dec
mov
jns
scas
adc
notb
pusha
stos
pop
or
mov
add
divb
mov
sahf
incl
mov
repnz
loopne
pop
arpl
cmp
in
xchg
jmp
sbb
cmp
insb
insl
dec
lea
sbb
fisubrl
xlat
nop
push
pushf
mov
mov
and
js
jmp
pushf
lcall
and
fcompl
daa
and
inc
mov
xor
rorb
mov
cld
rclb
mov
mov
outsb
cmp
repz
movsl
mov
or
scas
mov
addl
out
pop
jl
pusha
cs
jo
test
push
mov
pusha
mov
jne
push
xor
push
repz
xchg
icebp
mov
mov
cmpsb
mov
xchg
fisubrl
gs
mov
mov
iret
xchg
lcall
movsb
cmp
and
and
les
dec
iret
pop
stc
shrl
add
push
in
out
mov
incb
inc
gs
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
xchg
aas
jg
leave
js
fs
js
add
repz
xlat
xchg
jge
mov
lock
add
pop
aaa
fisubrl
cwtl
dec
jmp
pop
push
fcompl
pop
mov
arpl
pop
roll
les
mov
sub
stos
out
and
push
mov
clc
jno
jb
xor
mov
sbb
dec
stos
jle
dec
cmpsl
sub
push
gs
and
or
jp
push
cmp
ss
sub
dec
xchg
jnp
or
push
dec
cmpsb
lcall
mulb
or
add
add
flds
int3
sbb
lock
imul
sub
sub
imul
fadds
jge
call
aas
out
retw
lods
or
pop
xlat
out
jne
repz
pop
loope
inc
pop
xchg
push
je
sti
xchg
in
inc
imul
cld
pop
lods
add
out
inc
fs
fmuls
cli
and
test
movsb
dec
mov
icebp
jno
test
dec
test
cmpsl
repnz
xchg
xchg
xchg
int3
out
lret
gs
pushf
jp
movlps
pop
clc
pop
mov
jno
xchg
arpl
adc
ficomps
divb
sub
pop
mov
add
insb
mov
pushf
mov
fnstsw
mov
enter
xor
rolb
and
lret
iret
jg
or
shrl
and
inc
cmpsb
pop
mov
arpl
push
jno
dec
ret
push
fsub
xchg
mov
mov
sub
push
divl
cltd
stos
outsb
and
test
adc
rolb
mov
jb
jecxz
push
lret
aad
in
pop
gs
addl
mov
int3
test
mov
sbb
mov
dec
outsb
xchg
adc
xchg
jg
cwtl
rolb
pop
mov
push
ffreep
adc
and
mov
mov
sub
inc
and
into
jge
mov
fst
gs
jbe
es
xchg
data16
cli
mov
mov
adc
mov
push
xor
daa
dec
jns
fistpll
filds
jne
xor
fsubs
scas
sbb
and
loopne
loopne
pushf
rclb
sub
add
cs
mov
dec
fdivl
mov
test
test
scas
pop
push
fstps
fbstp
pop
scas
daa
rcrb
push
add
cli
cmpsl
out
sub
sub
imul
stos
mov
push
mov
and
fdivs
scas
push
sbb
xor
leave
xchg
dec
mov
xchg
addl
cmpsl
jle
pop
mov
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
and
insb
iret
js
fs
js
dec
testb
push
ret
adc
es
xchg
ja
adc
xchg
lahf
dec
push
push
sub
loopne
jne
pop
push
xchg
jnp
sub
dec
out
and
out
adc
addr16
xor
cmpsb
add
sub
ret
scas
lds
xlat
pushf
pop
add
xlat
pusha
dec
cld
out
out
jp
xor
nop
and
aam
jge
mov
cwtl
fisubrs
xor
lods
cli
in
inc
jmp
adcb
data16
jae
fucomp
or
mov
sbb
pop
rcll
clc
push
cmpsb
imul
and
rorb
pop
mov
add
adc
dec
gs
fs
std
arpl
je
xor
leave
pop
pop
fdivs
mov
fs
push
sub
and
fmull
sub
inc
mov
into
jmp
cmpsl
pushf
icebp
mov
add
inc
scas
popf
stos
pop
shll
hlt
xor
sarb
idivl
pop
inc
fmuls
fbld
lods
loopne
push
xchg
test
rorb
mov
test
lods
xchg
pop
and
xor
loope
mov
insb
dec
mov
inc
mov
or
and
push
outsl
push
fsubrl
and
mov
fists
scas
xor
std
add
sub
lods
inc
sahf
mov
pop
mov
lds
stc
ljmp
xor
dec
cmp
imul
mov
xchg
adc
xchg
rcrb
nop
das
jae
cld
mov
fnstsw
imul
mov
cmp
lret
add
jno
xchg
pop
jbe
lret
and
add
mov
popf
sub
inc
in
xchg
inc
add
enter
fsubrl
inc
jecxz
out
andl
mov
lods
cld
inc
cs
cwtl
in
movb
rorl
xor
push
jns
stc
sbb
sub
jmp
mov
loopne
push
jmp
stc
in
xor
call
js
push
in
mov
hlt
movb
data16
sub
ficompl
rorl
add
in
pop
pop
and
fcompl
dec
jbe
inc
dec
pop
cs
hlt
js,pt
loope
ljmp
cmp
pop
or
add
mov
outsb
xchg
aam
mov
or
clc
jns
lds
mov
stos
imul
add
lods
push
pop
adc
lret
ja
test
mov
jno
inc
std
sub
or
shl
fcoms
in
mov
xchg
je
push
push
push
ljmp
lock
imul
jb
xchg
pop
arpl
add
rcrl
subl
test
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
out
inc
ds
int3
js
fs
js
addl
pushf
test
dec
rcl
and
adc
xor
pusha
pop
ja
xchg
sub
inc
pusha
pop
push
hlt
data16
rclb
nop
js
mov
mov
mov
les
jns,pn
mov
xor
jmp
shlb
sbb
add
sahf
ret
repnz
pop
inc
mov
pop
in
xchg
idivl
sub
aas
andb
mov
mov
dec
lds
cmp
sahf
xlat
lods
out
pop
push
fisttps
fmull
test
imul
mov
jge
adc
gs
mov
push
jnp
fbstp
and
mov
sub
orl
cli
add
pop
lret
sub
mov
mov
movsb
lret
inc
mov
nop
mov
jae
lret
insl
jo
jmp
and
fnstcw
jo
cltd
fcmovnbe
pop
ljmp
in
inc
mov
mov
lahf
insl
inc
orps
rcl
out
aam
inc
aad
add
icebp
jo
clc
jecxz
and
fsubs
dec
push
test
sbbb
push
xor
mov
popl
inc
popf
inc
pop
ret
mov
ja
sahf
and
push
mov
out
sub
inc
int
pusha
mov
mov
jle
out
movsl
push
das
dec
cli
aad
push
add
mov
jae
ret
cmp
jmp
xchg
cmc
mov
leave
ret
ror
bound
pop
lods
inc
pop
out
pop
xchg
adc
and
adc
sub
sbb
xor
xchg
xor
incl
scas
jo
outsb
hlt
or
jne
lahf
mov
jp
orb
in
push
cmc
add
push
and
imul
repnz
mul
mov
fidivrs
mov
aas
jge
arpl
add
pop
lcall
outsl
pop
sub
clc
cmp
stos
cmp
xor
mov
xchg
addr16
outsb
int
aaa
dec
lock
pop
or
inc
mov
test
push
lcall
dec
sbb
mov
jl
sub
pop
sub
cmpsl
dec
sub
movsb
jbe
outsl
insb
cld
out
jo
sti
imul
sti
xor
daa
sub
or
addr16
cmp
ret
imulb
out
push
js
dec
fldt
push
pop
sub
sarl
adc
mov
sbb
jg
dec
mov
test
das
and
and
popl
push
add
out
daa
andnps
leave
push
mov
xor
insl
and
lods
xor
notl
fdivrs
shrl
inc
pop
lods
pop
sub
inc
mov
pop
jae
mov
or
movb
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
pop
push
jge
pop
cli
xlat
xor
push
sahf
push
in
insl
sbb
and
gs
or
push
pop
add
out
fstpl
add
sbb
imul
cmc
xchg
hlt
icebp
push
and
xor
fstpl
dec
iret
std
mov
imul
cltd
inc
in
or
pop
scas
movsl
js
mov
xchg
jp
fs
popa
sub
jmp
dec
cmpb
cmp
xchg
sbb
adc
test
inc
xor
mov
popf
in
stos
outsl
adc
cltd
sub
psubw
outsb
in
frstor
jg
xor
sti
jle
fwait
or
push
add
in
cli
mov
adc
adc
fistpl
dec
or
dec
sbb
das
xor
in
push
xchg
ret
out
pop
insl
fisubrs
xchg
mov
shrb
cmpsb
cltd
adc
jae
push
dec
or
out
or
in
mov
jle
xchg
adc
pop
adc
or
push
fmull
and
jge
or
filds
jp
cmp
out
negl
sbb
repnz
cmp
movsb
ss
pop
ret
push
dec
dec
imul
adcb
mov
test
rclb
lock
faddp
arpl
addr16
xchg
mov
adc
push
adc
pop
cltd
add
lcall
push
mov
adc
outsl
pop
xor
test
div
cwtl
mov
add
xor
outsl
lods
sub
pop
pop
scas
adc
insl
push
mov
into
lock
rcll
dec
popl
mov
cli
mov
xchg
roll
mov
sbb
inc
jl
ja
xchg
add
jns
xlat
ss
jmp
adc
stos
mov
inc
inc
jg
es
fdivrs
mov
out
popa
jge
pop
mov
jmp
inc
ljmp
and
xor
add
adc
inc
adc
ret
inc
shlb
xchg
adc
sbb
idiv
mov
popa
je
xlat
lods
lock
into
add
cmp
cmp
scas
loopne
add
rcll
xor
scas
dec
repnz
jne
shl
mov
mov
test
cmp
in
pop
xor
fxch
add
popa
leave
inc
jle
adc
fildl
pop
test
pop
mov
outsl
in
cmp
inc
cmp
enter
scas
loope
xchg
jbe
mov
inc
mov
in
adc
outsb
popf
push
fs
imul
jge
fcompp
xor
repz
pop
stos
mov
xor
cmp
push
cmp
test
lret
cmp
ja
mov
xor
jae
inc
lock
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
adc
or
fs
js
in
mov
or
fldcw
rcl
cmp
push
ficoms
in
sti
dec
std
lahf
jl
adc
ficomps
pop
movsb
gs
sbb
into
ja
pusha
test
mov
mov
push
dec
jge
cltd
test
leave
xlat
mov
cmpsb
mov
mov
cmp
mov
inc
std
dec
pop
ja
clc
sbb
push
push
xor
mov
call
mov
and
dec
ljmp
adc
ds
insl
aad
sub
into
pop
dec
xchg
and
sti
or
xor
fisubs
and
jnp
nop
dec
inc
je
mov
sahf
ret
lahf
mov
lcall
dec
dec
mov
ss
mov
das
lds
mov
or
push
jmp
jecxz
or
ret
into
xchg
mov
int3
push
add
aaa
pop
inc
jnp
cmpsl
pusha
or
mov
sbb
sbb
inc
fadds
movsb
cmc
or
sbb
push
mov
stc
test
dec
nop
dec
mov
pop
xor
mov
push
mov
jecxz
mov
adc
or
aam
xchg
mov
add
fadd
pop
and
xchg
dec
andl
cmp
lea
scas
sahf
lods
stos
test
hlt
push
xlat
cmpsl
adc
mov
inc
cmp
add
cmpb
mov
rorl
jnp
push
insb
hlt
dec
sbb
jmp
ret
sub
scas
cmp
xchg
or
loopne
xchg
pop
adc
mov
cs
xor
ret
in
sbbb
scas
pop
mov
out
std
xor
stos
cmp
mov
ficoms
mov
ljmp
int
outsb
jo
dec
mov
bnd
ret
mov
fs
xor
dec
inc
cmp
repz
adc
mov
pop
push
sbbl
aas
scas
negl
mov
lea
ja
stc
test
pop
pop
adc
flds
xor
push
mov
jbe
shll
fwait
sbb
sbb
test
pop
push
push
xchg
sub
xor
xor
xchg
bound
jo
inc
rcrb
es
push
sub
test
push
xchg
aas
push
ret
mov
outsl
push
and
dec
daa
dec
call
cmp
sbb
imul
stos
mov
loopne
push
xchg
mov
sbb
add
push
jl
clc
mov
mov
rclb
out
out
stos
cltd
pop
xchg
and
xchg
jns
loop
adc
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
int3
lcall
fs
js
sbb
adc
or
jecxz
arpl
call
dec
or
shrb
dec
aas
inc
int
rcll
cmp
jb
mov
aam
jge
popa
mov
sub
lret
mov
pusha
mov
das
lock
test
stos
repz
mov
sub
lret
jae
imul
sbb
lods
push
dec
shll
dec
add
in
jno
jns
sub
push
xchg
aas
xor
xchg
and
pop
cmp
mov
jp
pop
insl
lea
jl
lret
lahf
stc
xor
repz
cmp
push
add
push
cmp
sub
push
jle
jnp
dec
pop
pop
das
dec
add
sbb
dec
fdivrl
stc
mov
or
dec
mov
mov
or
rolb
dec
cmp
lods
cli
aaa
push
push
sbb
scas
popa
pop
mov
ja
jns
fidivs
xchg
inc
fbstp
insb
mov
mov
mov
repnz
aas
ljmp
xchg
std
outsb
adc
test
mov
mov
data16
or
sbb
xor
jbe
insl
inc
fldenv
dec
xchg
jmp
and
mov
or
out
pop
loopne
loopne
popf
adc
aad
cltd
or
and
adc
mov
cwtl
or
jno
sub
or
shll
or
inc
jb
xchg
loop
dec
push
pcmpgtd
das
fimuls
inc
mov
ficoms
push
test
lahf
xor
roll
cmpsb
xchg
adc
in
nop
sub
popa
lret
lret
xor
outsl
out
imul
sub
dec
neg
jge
sub
mov
jns
pop
mov
push
push
inc
in
inc
or
movsb
adc
cld
xchg
sbb
and
mov
test
inc
mov
pop
lret
sub
sti
aas
adc
adc
mov
cltd
pop
push
ret
push
jne
mov
rcl
lods
pop
test
daa
imul
and
sub
cmp
sub
nop
cmp
jo
adc
loope
loopne
mov
mov
mov
jbe
xchg
sub
dec
xor
adc
rclb
ljmp
and
enter
xor
arpl
mov
jb
sar
xor
cmc
mov
movsl
aaa
jbe
mov
sbb
nop
mov
inc
jb
xchg
fs
or
inc
pop
and
cmpsb
inc
test
jg
popl
pop
fisubl
pop
in
jmp
in
push
lods
mov
cmpsl
jmp
out
push
or
jb
mov
popf
push
xchg
pop
notl
je
es
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fdivrs
push
in
fdivrs
fs
js
icebp
cmp
int
test
mov
je
sbb
in
and
mov
rol
negl
dec
int3
or
mov
sbb
lods
xchg
xchg
pushf
and
cmpsl
or
fsubr
pusha
inc
xor
and
cltd
pop
sub
movsb
out
dec
add
repz
fildl
in
movsb
stc
mov
movsl
inc
cmc
ss
or
sar
hlt
or
sbb
or
sub
adc
pop
cmpsb
lea
mov
int
cmp
bound
lods
mov
andb
fidivs
lahf
out
enter
mov
add
sbb
add
or
mov
ss
out
mov
and
ficomps
mov
jno
sub
push
ss
dec
mov
lods
mov
mov
movsl
test
insl
mov
hlt
xor
add
int
call
int
jne
add
fstp
cli
mov
scas
arpl
xlat
in
div
lahf
enter
roll
js
mov
cwtl
repz
add
xor
ret
inc
ja
xchg
jmp
daa
mov
hlt
jno
jne
int3
loop
cmc
fs
daa
sub
fs
xor
fmuls
mov
std
sbb
xchg
pop
sub
leave
and
lods
int
call
dec
jno
adc
push
mov
das
loope
fsubs
sub
pop
pop
or
mov
cmp
imul
inc
pop
push
into
mov
repz
outsl
loopne
stos
dec
cmp
bswap
insb
notl
pop
ficoms
es
push
xchg
mov
push
ret
mov
lahf
in
jne
xor
mov
out
out
cltd
adc
hlt
mov
nop
lret
fldcw
mov
push
subb
cwtl
sahf
rcrb
mov
iret
jnp
xchg
inc
mov
jo
jmp
inc
cmp
fs
aad
ret
jae
dec
aaa
lods
or
push
cmp
scas
cli
sub
testb
mull
shr
lcall
popa
adc
sub
das
mov
mov
pop
repnz
push
xchg
outsb
add
or
push
andb
and
jae
inc
add
xor
push
loopne
and
repnz
popf
or
popf
imul
jb
fsubl
cld
jne
pop
mov
mov
test
enter
mov
sbb
sub
inc
hlt
dec
fmuls
xor
push
push
repz
cmp
cmp
popf
cli
jns
xchg
sub
insb
push
fwait
push
dec
in
jns
mov
cltd
inc
cmp
test
or
data16
mov
dec
rcrl
xor
add
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
cwtl
hlt
fnstsw
fs
js
sahf
aam
dec
push
inc
outsb
mov
cmpb
mov
and
fs
xchg
mov
lret
xor
push
imul
arpl
and
les
pop
int3
in
js
shll
mov
dec
dec
aam
dec
fldcw
lret
lea
pop
in
arpl
pop
ret
das
xor
cwtl
cli
mov
das
mov
jnp
in
jmp
adc
pop
cltd
orl
lea
push
fstpt
push
insb
aaa
loop
add
mov
shll
add
pop
pop
push
mov
xchg
and
sbb
scas
pop
dec
cmpsl
int
scas
mov
das
lods
lods
push
not
dec
out
jno
call
je
dec
lods
add
stos
in
lods
inc
sbb
dec
icebp
xchg
call
adc
inc
xor
inc
loope
mov
xor
and
das
dec
cltd
push
xlat
push
negl
mov
lret
or
sub
pop
and
clc
push
xor
xchg
hlt
aam
mov
and
jo
inc
enter
enter
outsl
adcl
xchg
je
mov
mov
mov
inc
iret
add
dec
jle
jmp
jnp
sar
mov
fwait
sub
xchg
mov
std
dec
cwtl
dec
mov
mov
add
arpl
leave
dec
push
adc
je
pop
mov
scas
test
dec
push
lds
jecxz
call
cmpsl
dec
sbb
sbb
adc
shrl
mov
xchg
xchg
sbbl
std
pop
pop
aam
pop
sbb
inc
mov
mov
xchg
mov
xchg
add
push
out
daa
in
sub
pop
add
in
mov
js
in
push
into
pop
cmpsl
addr16
rcl
fimull
and
je
cmpsl
lahf
in
aam
fadd
mov
aam
lock
xor
and
sbb
ja
or
adc
sbb
stc
bound
push
sti
flds
icebp
xor
lahf
jo
movsb
in
and
popa
cwtl
call
mov
mov
dec
xchg
les
mov
leave
fidivrs
inc
inc
inc
jle
xchg
push
stos
sub
dec
jg
cmp
xlat
jl
sub
arpl
sbbb
dec
out
xor
xchg
les
add
arpl
les
adc
pop
aad
rolb
jo
jecxz
icebp
cld
inc
mov
inc
push
push
mov
fdivl
sbb
sub
fidivl
push
jb
mov
inc
or
jne
into
xchg
push
arpl
and
mov
test
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
data16
jl
jbe
jge
inc
dec
xor
flds
bound
loope
call
pop
in
cs
nop
out
xchg
push
sahf
nop
add
aam
das
push
aaa
fucompp
mov
sar
icebp
inc
nop
xor
pop
mov
inc
ds
add
stos
data16
cmp
jbe
add
movl
jnp
jp
daa
out
ret
cld
sub
jbe
jp
or
mov
pop
dec
das
aad
xor
cmpsl
mov
jmp
sub
sbb
in
mov
out
mov
xchg
mov
dec
inc
out
adc
push
xor
sub
sbb
pop
push
xchg
lea
sbbb
outsb
xchg
push
adc
fwait
sbb
pusha
pop
stc
loopne
sbb
lods
mul
rcl
sbb
cld
dec
mov
pop
mov
push
xchg
mov
sbb
push
fbld
jmp
stos
xor
pop
jge
dec
and
and
lea
cmp
push
pop
dec
pop
in
and
add
in
rorb
cs
cmp
xchg
les
ds
jle
lods
mov
or
sub
enter
push
je
sub
outsl
pop
push
xlat
mov
xchg
mov
rcll
aam
cmc
xor
mov
push
pop
jnp
js
xchg
dec
mov
cld
mov
add
push
cmp
repz
movsb
cmp
lret
jae
sub
inc
jge
jae
mov
arpl
loop
fs
jge
xlat
pop
push
pop
or
fistpl
stos
mov
lcall
mov
xchg
fldenv
mov
push
push
test
cmc
jns
hlt
imul
cld
pop
mov
mov
loop
insb
mov
adc
add
test
bound
dec
lcall
mov
mov
addb
imul
out
push
mov
xor
mov
loopne
int
jg
cmpsb
cmp
mov
pop
jl
mov
mov
lahf
mov
xor
aad
lock
sbb
sbb
fsub
lahf
mov
xchg
push
adc
cmp
mov
ret
jle
cmp
fucomi
mov
push
inc
ljmp
dec
clc
inc
sub
in
adcl
cmpsl
jg
dec
sub
inc
inc
sub
and
fwait
cmp
sbb
lods
inc
mov
mov
es
imul
sub
pop
js
xor
sbb
mov
push
xchg
xor
xor
call
inc
in
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
aad
dec
dec
int3
out
js
jle
js
out
pop
filds
inc
and
or
inc
push
out
pushl
jns
lret
insl
mov
inc
and
lahf
inc
sub
dec
fdivp
jne
add
mov
push
mov
loopne
adc
jne
pop
daa
cld
cmp
mov
xorl
mov
cmp
movsb
nop
popa
in
imul
int
lgs
repnz
pop
pop
rclb
cmc
arpl
pop
adc
fisttpll
xor
push
test
out
addr16
pusha
inc
fwait
loop
add
xchg
inc
mov
cmc
fucomip
inc
xor
shlb
pop
ds
repnz
jl
ss
adcl
pop
sti
dec
pop
inc
xchg
push
pop
cld
and
int
aad
mov
es
jge
daa
mov
pop
pop
shlb
roll
lds
divl
jnp
nop
jmp
pop
pop
xchg
cmp
jg
ss
movl
dec
fsts
add
stc
pop
aaa
and
and
pop
data16
fcomps
xor
sbb
mov
sbb
cmp
dec
push
jle
push
xchg
mov
push
mov
test
jbe
into
jb
ffreep
mov
pop
mov
dec
adc
loopne
mov
lods
push
fwait
and
sub
outsl
or
mov
jge
add
in
lods
pop
jmp
loop
cmp
popf
xchg
sti
mov
push
lcall
je
sub
adc
fdivr
and
cmp
jno
pop
sub
dec
loope
les
xor
mov
xchg
shlb
push
test
dec
sub
lods
les
push
mov
notb
and
lret
fisubrs
and
jne
dec
dec
push
les
pop
jmp
fwait
lock
push
es
movsl
xor
and
movsb
mov
add
cmp
push
cltd
push
sar
repnz
int3
xchg
cmpsl
pop
or
pop
inc
and
aaa
repz
add
lock
xor
popa
jo
not
mov
sbb
outsl
mov
fildl
xor
and
stos
sub
or
clc
les
cmp
loop
inc
jns
pushf
pop
std
iret
rclb
mov
xchg
pop
cmp
out
repnz
test
testl
and
loopne
popf
jae
into
repz
shr
pop
push
inc
inc
loope
popa
test
das
int
mov
out
xchg
aas
sbb
in
aam
jno
adc
cmp
out
lahf
pushf
pop
xchg
lods
je
loop
jae
or
dec
xchg
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
pop
cmp
cmp
js
cmpsl
jle
js
xchg
push
mov
inc
les
push
es
ja
jge
mov
movsl
add
mov
and
leave
sbb
jecxz
jecxz
lcall
es
inc
faddl
xchg
adc
sub
push
iret
mov
pushf
clc
mov
fdivrs
loope
jbe
testb
cmpsb
nop
xchg
jmp
cmpsb
pop
sbb
or
jmp
cmpsl
popa
pop
push
sarl
leave
pop
xchg
mov
mov
push
pop
pop
ret
cmpsb
fsubrs
lods
loope
or
fsubr
mov
jo
sbb
xchg
std
mov
dec
roll
int3
add
mov
jb
jge
xor
dec
push
push
jge
inc
or
arpl
pop
call
mov
sub
nop
push
movhps
cmc
xchg
in
mov
or
fmulp
pop
sbb
mov
arpl
test
xchg
dec
inc
insb
orb
test
dec
std
sub
cmp
dec
add
xchg
mov
rorb
scas
sub
jb
pop
mov
fs
push
les
mov
jp
xor
lods
xchg
mov
or
cmc
adc
out
shrb
mov
cmp
aaa
pop
adc
cld
xor
popa
or
mov
mov
cmp
test
sti
ret
and
aam
icebp
sub
fisttpl
xchg
sbb
cmpsb
insb
lock
bound
popa
cs
popf
cltd
mov
out
inc
xchg
dec
jo
insl
mov
and
mov
imul
fcoms
mov
aad
fisubrl
clc
push
jne
inc
orb
cmp
icebp
mov
rorb
dec
mov
xor
stc
sbb
xchg
sbb
insl
push
fs
jp
dec
mov
mov
add
mov
or
xlat
lret
test
test
cwtl
jl
gs
add
cmp
rolb
fisubs
in
fbstp
lods
fcom
cmc
in
lods
pop
rcl
dec
sbb
lods
mov
std
inc
or
pop
fdivs
loope
push
sbb
mov
aas
std
cmp
cltd
mov
pop
sbbl
popw
mov
pop
inc
out
push
shl
sub
and
fdivl
mov
aad
mov
cmpsb
mov
imul
movsb
mov
es
push
cmovle
dec
pop
lret
and
add
imul
addr16
enter
sarb
sub
xlat
js
inc
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
ret
enter
js
cmpsl
jle
js
fbstp
imul
push
lcall
mov
dec
sar
cmp
mov
push
movsl
adc
xor
mov
mov
pop
aas
std
int3
inc
sbb
jno
adc
pusha
xlat
decb
in
pushf
mov
mull
or
subb
ret
cwtl
push
repnz
ret
into
pop
andb
cltd
cmp
sbb
fisubrs
pushf
xchg
mov
add
push
out
inc
jmp
jl
cmp
daa
xchg
push
pusha
and
inc
cmpsb
adc
xchg
insl
fsubrs
scas
fnstsw
sub
int
or
and
jnp
xor
pop
pop
push
jns
sbb
push
int3
inc
xchg
jp
aaa
std
cmp
fstp
push
mov
sub
mov
cmp
pop
pop
xchg
fcoml
add
fldl
stos
lods
bound
fimull
aam
xchg
or
inc
jns
dec
rcrl
cli
int
sub
adc
mov
sbb
or
xchg
les
fldl
jnp
xchg
push
pop
ljmp
sbb
out
dec
add
fldl
sub
in
mov
loopne
in
xchg
cmp
push
scas
lods
add
jmp
mov
sbb
cmc
adc
adc
adc
notl
aas
pop
xor
in
test
nopl
mov
xchg
inc
loop
sti
ds
aas
fadds
aad
lea
lcall
push
mov
push
loop
dec
cmpsb
sbb
cli
push
sbb
xor
jle
and
loop
and
mov
cmpsl
xchg
adc
das
lds
mov
inc
pop
popf
pop
cltd
push
sbb
out
dec
repz
or
dec
or
push
and
dec
push
jbe
inc
fidivrs
out
mov
in
push
fstp
enter
mov
push
and
mov
and
and
shlb
and
mov
and
sub
pop
movsl
inc
sub
jne,pt
and
sti
jns
jb
int
dec
add
lock
mov
xchg
mov
adc
jno
push
frstor
stc
pushf
aaa
xchg
pop
jle
fs
or
cmp
movl
jne
jmp
lret
cmp
mov
or
leave
mov
js
cmpsl
jle
js
cld
inc
pop
mov
leave
inc
lds
or
fisttps
test
insl
scas
popa
imulb
arpl
fwait
outsb
test
xabort
inc
xor
sahf
xchg
aam
push
orl
adc
loope
or
cmpsb
mov
and
push
mov
pop
stos
xchg
dec
shll
xlat
mov
push
jnp
js
mov
lds
fsubl
es
sub
mov
mov
push
sbb
mov
add
push
sbb
mov
sub
jo
dec
lcall
xor
popf
or
lods
das
das
sub
adc
xor
mov
and
stos
ds
mov
pushw
shll
daa
andb
adc
test
and
push
andl
pop
cwtl
add
mov
xchg
ret
pop
loop
repnz
movb
fstl
int
mov
sub
mov
addr16
jge
cmpsl
out
mov
mov
cwtl
test
mov
jmp
sbb
cmp
mov
mov
repz
out
push
in
shl
and
fidivs
imul
pop
sub
div
cmp
adc
or
mov
sub
insl
xor
cmpsl
fimuls
jo
mov
lock
sahf
imull
xchg
and
add
mov
push
in
inc
popa
xchg
fstpl
xchg
ljmp
sub
sysret
pop
scas
dec
mov
push
int3
icebp
or
aam
scas
enter
and
jns
or
xor
jge
push
movsl
mov
and
xchg
and
mov
sub
mov
inc
and
mov
stc
inc
lock
mov
lods
and
push
fildll
pop
ljmp
loope
outsl
add
sbb
sahf
dec
mov
sbb
in
pop
fbld
push
mov
das
mov
adc
rcll
mov
mov
mov
dec
fbstp
or
pop
arpl
and
dec
cmp
loop
adc
push
rcrb
mov
aas
jmp
and
jne
xchg
test
mov
adc
fnsave
push
fidivs
add
test
popa
stos
clc
icebp
sahf
sti
mov
shr
popf
rdmsr
fstps
inc
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
test
js
cmpsl
jle
js
fimuls
lret
push
inc
push
imul
inc
xor
or
mov
pop
dec
cmp
pop
push
cmp
inc
aam
mov
rorl
addr16
je
mov
sbb
add
sub
add
mov
in
dec
pop
fs
test
mov
adc
ja
pop
ja
push
sarl
inc
dec
jl
adc
in
fwait
mov
mov
xchg
in
iret
int
in
mulb
adc
fistpl
inc
popa
pop
call
cmpsb
mov
push
push
cli
lds
dec
xlat
jns
imul
jl
push
mov
jg
insb
mov
add
dec
cmp
or
test
push
add
out
adc
or
pushf
xchg
shlb
es
daa
xchg
and
enter
fadds
in
add
repnz
adc
mov
mov
out
fcom
xlat
add
sarl
lcall
sbb
icebp
hlt
mov
shrl
sbb
inc
xchg
cmpsb
dec
into
xchg
pop
xchg
lds
stos
jg
xchg
out
jb
lea
mov
add
testl
out
pop
lds
leave
jbe
mov
into
sub
cmpsl
sbb
lock
aas
xchg
mov
pusha
mov
mov
fwait
and
into
push
dec
push
or
adc
sbb
faddl
inc
mov
stos
xlat
fnsave
in
jl
sub
pop
mov
jp
xor
xchg
inc
outsb
dec
add
les
push
clc
mov
data16
imul
and
fstpl
cmp
cmpsl
push
add
mov
into
dec
frstor
cmp
inc
fiadds
dec
jmp
xchg
mov
jge
shll
mov
add
mov
dec
ret
das
out
je
jae
adc
jg
mov
and
or
mov
pop
mov
lock
adc
mov
jae
lcall
ds
xlat
dec
cmpsl
fs
and
sub
mov
icebp
xchg
pop
xchg
lods
adc
xor
lret
out
lahf
cmpsl
pop
mov
or
xlat
int3
push
pop
jg
jb
test
pop
aad
int
mov
pop
mov
dec
lock
sub
lcall
inc
or
or
out
movups
inc
sub
lret
add
fidivl
jle
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
dec
je
pop
bnd
push
jle
js
jmp
sub
mov
movsb
daa
sbb
push
push
push
clc
push
je
pusha
cmpb
pop
mov
xor
rorl
pop
cmp
push
lds
and
daa
adc
call
movsb
js
jbe
xor
in
fldl
add
add
inc
pinsrw
mov
stc
sti
negl
cld
fstp
push
sub
mov
shll
lcall
hlt
movsl
leave
add
pop
pop
pop
cmp
fsubrs
sub
dec
jnp
and
inc
ja
cli
inc
mov
mov
fwait
inc
or
jl
jl
ror
sti
fmulp
mov
das
lea
xor
and
ss
loopne
sbb
or
inc
les
sbb
imul
out
out
jmp
and
or
add
in
jno
ss
sbb
das
shl
insl
ja
mov
push
icebp
mov
or
das
mov
inc
mul
mov
aas
sbb
inc
filds
push
outsb
movsl
push
xchg
fld
movsb
cmpsb
dec
mov
lods
cmp
into
daa
nop
xlat
jo
xchg
sbb
or
cmp
xchg
in
dec
xlat
enter
fsubl
xchg
jl
mov
pop
cmp
pop
je
or
dec
push
and
mov
fucom
loopne
bound
mov
ret
sbb
and
push
iret
lock
in
sub
lods
into
mov
cmp
cmp
dec
enter
xchg
cmc
nop
shrl
mov
sti
or
mov
mov
and
dec
cld
and
jge
rcr
test
mov
mov
jae
loope
flds
sub
fidivs
jmp
das
mov
fmuls
adc
popf
mov
scas
and
rolb
push
mov
mov
push
movsb
or
xor
call
pop
scas
enter
xor
outsl
adc
out
add
leave
inc
dec
inc
or
ror
xchg
or
enter
fcoms
mov
pop
in
add
mov
dec
mov
jo
cmovs
and
mov
cs
test
pop
adc
sub
push
push
pop
lds
mov
imul
loop
mov
ret
adc
mov
adc
loop
mov
push
movsl
jmp
jno
mov
aam
addb
out
push
add
jo
loopne
stos
cmp
scas
xor
mov
pushf
adc
xor
or
or
add
sbb
lret
inc
pop
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
inc
dec
aaa
mov
js
push
jle
js
cmp
or
in
xchg
xlat
nop
xchg
rcrb
mov
dec
scas
jno
cmp
dec
jbe
ficomps
arpl
aaa
insb
loop
ljmp
xor
cs
pop
xchg
add
or
push
es
js
sbb
add
adc
lock
jle
pushf
insl
ret
mov
addr16
or
mov
xor
shrl
sub
or
pusha
push
push
in
lret
push
xor
xchg
fwait
sbb
sbbb
je
dec
xchg
test
inc
das
pop
shlb
xor
cmpsl
xor
mov
sub
xchg
cwtl
in
hlt
jnp
loop
lcall
test
add
cmp
mov
cmp
mov
mov
mov
cmovg
and
inc
clc
test
loope
and
int3
dec
dec
loope
icebp
mov
and
adc
iret
push
dec
sahf
push
mov
or
lds
ret
mov
outsb
jno
clc
xor
dec
aas
es
push
fisubrl
mov
test
mov
repz
movsl
xor
fwait
add
incl
xchg
clc
mov
into
lret
imul
leave
pusha
cmp
in
dec
inc
xchg
inc
mov
pop
es
insl
cmc
fs
repz
mov
scas
insl
inc
dec
xor
sbb
and
mov
loopne
push
addb
mov
aas
outsb
or
pop
push
cmpsl
ja
mov
adc
adc
jle
add
fldl
jg
and
shlb
repnz
fcomip
xor
jp
pop
and
sbb
xchg
enter
mov
jecxz
push
jns
lods
insl
testl
lods
nop
cli
add
movl
cmp
cmc
cmp
xchg
push
les
inc
mov
nop
call
dec
cmp
pop
jb,pn
pushl
rcrb
icebp
es
out
fadds
inc
sbb
out
jne
cmp
push
push
testl
add
and
dec
shlb
mov
adc
outsl
mov
mov
jo
test
push
shl
movsl
pop
stos
mov
pop
pop
dec
add
inc
cmpsb
jae
mov
pop
inc
pop
mov
jge
inc
dec
call
xchg
mov
mov
add
imull
jo
add
nop
mov
mov
add
scas
xchg
mov
lock
out
pop
cmp
inc
sbb
aaa
mov
add
inc
clc
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
leave
push
inc
inc
insl
jmp
mov
inc
pop
lret
rorl
add
cli
or
xor
mov
inc
inc
loop
fistps
inc
daa
pop
mov
and
dec
sbb
sub
mov
mov
jg
xchg
push
xchg
out
add
sbb
aas
ds
fisubs
jmp
shll
mov
movsb
push
pop
dec
mov
gs
imull
or
mov
xchg
cld
push
and
les
push
jo
mov
clc
or
fucomi
pop
or
pushf
jmp
lret
jmp
mov
out
sub
ljmp
xchg
enter
mov
adc
inc
mov
adc
icebp
push
adc
lret
in
sub
mov
dec
xchg
xchg
dec
clc
shlb
in
jno
pop
ret
sub
jnp
xchg
jmp
jb
pop
lret
stos
xorb
push
xlat
lock
jb
les
cmp
mov
dec
ret
in
xchg
and
push
xor
js
jmp
das
jmp
test
cld
sub
pop
add
cmp
cwtl
fisubrl
mov
rcrl
push
add
clc
push
or
enter
dec
dec
jecxz
fldcw
insb
shrl
clc
pop
mov
movsl
add
outsl
shrb
inc
xchg
js
push
stos
and
sbb
leave
and
shl
cmc
aas
insb
adc
push
daa
stos
and
jle
ljmp
pop
ljmp
scas
jb
push
movsl
cmp
inc
scas
jg
and
ds
pop
pop
in
add
and
inc
inc
std
jle
aam
popf
pop
outsl
cltd
jae
rclb
lret
adc
sbb
add
and
and
fistpl
sub
mov
jne
sahf
mov
lods
xchg
and
dec
jge
cmpsl
dec
xchg
inc
dec
pop
or
push
mov
cmp
xor
outsl
dec
push
or
scas
enter
loop
cmp
sub
out
sahf
bnd
js
lds
push
repnz
shl
sub
shr
icebp
roll
cmp
push
into
mov
and
sti
push
cwtl
fisubrs
xor
xor
ficomps
mov
or
or
sub
mov
pop
fstps
cmp
mov
pop
insl
pop
or
shll
inc
pop
mov
xchg
sub
popf
in
or
lret
sbb
mov
std
test
cltd
cld
ret
xchg
lahf
popf
sbb
incb
addr16
das
cmpsl
dec
cmp
dec
notl
jle
inc
ljmp
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
hlt
loop
js
je
js
mov
aas
push
mov
js
adc
inc
ljmp
lcall
mov
test
mov
or
sub
xchg
int3
mov
test
leave
inc
pusha
sbb
xchg
adc
inc
inc
test
stos
sub
pop
pop
jge
movsb
je
or
dec
dec
les
loope
es
xor
fdivrp
xor
xchg
orb
incb
add
push
movsb
dec
dec
cmpsl
mov
test
jae
sub
inc
dec
pop
xchg
loope
repz
lds
stos
cld
dec
cmp
add
xchg
and
cmp
xchg
in
mov
stos
or
rcrl
iret
and
xor
or
jnp
and
test
int3
dec
test
push
fdivl
pusha
push
data16
cli
lret
add
push
lahf
stc
pop
adc
ss
icebp
mov
das
nop
dec
negl
data16
jl
cmp
and
add
loop
sub
imull
adc
and
imul
fistl
in
dec
add
jae
xor
xchg
pop
loopne
push
mov
xchg
fdivrs
sub
imul
mov
jns
sub
pop
and
enter
xlat
fs
inc
sub
push
inc
movsb
cs
ss
xor
lea
icebp
adc
test
daa
push
fsubp
ret
push
imul
jno
push
ds
adc
jge
loop
jle
pusha
inc
jmp
out
bound
xor
out
ret
dec
xchg
jnp
push
cmp
and
mov
sub
pop
cltd
aas
roll
and
js,pt
xor
xchg
cmp
pop
xor
pop
lcall
jne
adc
sub
mull
sub
dec
pop
inc
sbb
movsb
add
dec
bound
shlb
test
lahf
test
cmpsb
add
dec
xchg
punpcklwd
roll
sub
sbb
sbbb
inc
out
and
cli
movsb
hlt
inc
and
xor
inc
pop
rcrl
pop
in
dec
shlb
mov
js
lods
aad
aam
fs
sub
iret
roll
cmp
xchg
xor
or
xchg
mov
mov
inc
fs
xchg
out
adc
das
cmp
adc
dec
aam
jns
insb
cmc
dec
cmc
mov
out
mov
ret
fcoml
cmp
arpl
xchg
push
dec
in
in
lea
std
pushf
jbe
jmp
mov
js
cmp
mov
add
cmp
loope
dec
addb
fcmovnb
cmp
jo
lock
montmul
cmpsb
add
int3
idivl
loopne
dec
loop
adc
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
cmp
fdivrp
js
je
js
ss
xor
or
outsl
popa
les
je
loop
push
xchg
sub
jnp
jne
bts
shr
ret
jmp
cli
push
nop
imull
in
les
jmp
xchg
das
filds
jecxz
add
inc
sbb
pop
ja
or
and
lods
mov
es
dec
mov
push
sbb
mov
ljmp
adc
push
or
ret
ret
mov
push
and
cli
imul
fwait
xchg
jecxz
rcrl
imul
cli
aas
popf
and
xor
xor
push
jo
mov
dec
mov
movsl
xchg
in
loopne
and
rorb
std
shl
mov
mov
push
mov
cs
shll
and
sub
jge
test
pop
and
mov
pop
cs
push
aas
fimuls
sub
cltd
jb
xor
and
add
add
cltd
push
pop
sbb
dec
rcrb
outsb
lahf
pop
cli
test
cwtl
xor
je
outsl
lds
aas
jmp
jecxz
mov
ja
pop
cs
pushf
mov
xor
pop
sbb
xchg
popa
mov
shlb
data16
xor
inc
mov
insl
pop
data16
shll
adc
mov
mov
loopne
rolb
out
mov
cld
inc
shlb
inc
cmp
xor
lods
jns
jb
mov
mov
dec
test
and
les
lock
push
pop
cmp
adc
mov
mov
inc
es
add
lret
xor
push
dec
mov
outsl
das
sub
stos
outsb
cmp
mov
lea
dec
out
adc
pop
pop
mov
mov
and
out
insb
andb
insb
mov
mov
adc
call
and
insl
dec
lea
iret
xchg
adc
mov
stc
leave
cltd
xlat
adc
lret
mov
adc
jbe
cld
fwait
push
in
jbe
and
mov
cmpl
jle
cwtl
popf
popa
lock
adcb
mov
lahf
mov
insb
sub
popa
leave
je
mov
add
adc
push
mov
dec
adc
pop
add
adc
js
inc
pop
and
and
pop
and
push
push
aam
loope
sub
and
jg
sub
dec
pushf
inc
add
and
stos
fld
mov
fwait
pop
xchg
roll
sbb
lidtl
mov
add
sub
mov
popl
push
adc
daa
js
xchg
lea
js
mov
cmp
idivb
int3
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
add
fiaddl
js
xor
sahf
sub
mov
fldt
data16
xlat
mov
sub
pop
or
sbb
jne
outsb
daa
inc
inc
stc
xchg
in
ss
test
sub
jnp
fldt
or
and
xor
mov
out
clc
inc
lock
aam
pop
fisttpll
es
push
adc
mov
or
mov
push
mov
mov
mov
pusha
push
iret
inc
addl
jnp
imul
xchg
or
pop
aaa
and
scas
mov
stos
sub
bound
pop
cmc
mov
xchg
popa
movsb
movsl
jns
and
dec
mov
cmpsb
xchg
inc
xchg
outsl
push
mov
adc
fld1
adc
push
and
gs
insb
cltd
movsl
arpl
cmp
xchg
dec
lods
pop
ds
xor
lahf
pop
jmp
pushl
pop
mov
lcall
xchg
data16
fmuls
fisttps
xor
lods
and
fucomp
ljmp
in
xchg
jg
xor
xor
mov
mov
fwait
or
mov
repz
pop
push
cs
cmp
jmp
testb
into
sbb
jne
mov
lret
xor
xchg
mov
mov
out
or
lcall
aas
sbb
test
int3
decb
push
push
xor
xor
jecxz
shrb
jmp
jge
or
orb
int
jb
scas
outsl
add
fsubl
decb
mov
outsl
aam
int3
nop
hlt
loop
cltd
jb
mov
mov
push
xchg
cmc
loope
mov
adc
test
xor
inc
imul
dec
ljmp
jl
icebp
cli
mov
int3
sbb
outsl
cld
cmp
outsb
sub
adc
push
inc
jae
jbe
pop
hlt
inc
cmp
add
in
data16
xor
sbb
adc
lods
adc
push
inc
and
pop
stc
int
out
in
not
dec
jne
mov
popa
adcl
insl
or
pop
enter
mov
push
sbb
dec
mov
loope
fdivp
inc
mov
aas
adcb
jns
lods
out
mov
jo
pop
pop
xor
or
cmpsl
in
or
mov
outsl
mov
sub
jmp
jns
loope
je
jne
dec
pusha
add
jae
cmc
imul
cwtl
out
scas
inc
ret
cmp
lock
xchg
fcoml
jle
inc
test
sbb
push
mov
cwtl
cli
das
movsl
in
lahf
sbb
pop
repnz
dec
icebp
jmp
xchg
insl
jo
cmp
mov
xchg
shlb
movsl
mov
mov
andl
mov
push
push
xchg
loope
pop
sti
orb
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
cvtdq2ps
lods
cmpsb
cmpb
jle
js
adc
push
nop
out
or
or
push
sbb
xor
mov
popa
pop
lcall
js
ljmp
lods
es
sub
out
in
out
repz
outsl
std
fsubrs
daa
fnstcw
xchg
ljmp
mov
aaa
scas
aas
test
pop
in
out
jns
cmp
insb
fimull
push
lea
or
mov
push
xor
inc
add
jmp
and
lods
sarb
ficoml
into
mov
daa
adc
sbb
outsl
push
push
imul
cmp
int
shr
xor
pushf
shlb
and
and
nop
add
add
or
inc
inc
sbb
mov
pop
sub
dec
enter
pop
stos
enter
mov
jo
imul
popa
js
cmp
inc
mov
cltd
xchg
arpl
mov
mov
adc
mov
fidivs
sarb
out
insb
and
into
adc
adc
jbe
stos
jmp
hlt
in
test
mov
add
mov
pop
push
inc
movsl
xor
cwtl
jb
nop
lock
test
rcll
scas
mov
daa
adc
xor
cs
scas
adc
rcr
leave
and
dec
push
or
adc
pop
imul
movsb
jecxz
mov
sbb
dec
dec
push
out
andl
scas
imul
hlt
mov
les
rcrl
push
addr16
repnz
dec
pop
push
or
pop
mov
xchg
lcall
shrl
jno
add
test
outsl
cmp
stos
lahf
aam
push
dec
pop
das
mov
stc
jb
mov
sub
leave
dec
dec
jo
xchg
fistl
outsb
cmpsb
inc
notl
jecxz
out
hlt
out
inc
repz
inc
push
clc
push
push
cs
outsl
xor
dec
pop
mull
pop
mov
mov
jecxz
cmc
jp
addl
add
or
test
add
test
push
push
rclb
jb
ret
out
arpl
cmp
fstl
leave
add
inc
or
inc
xchg
negb
addb
sub
imul
xor
push
test
lods
and
insl
ds
mov
adc
pusha
mov
es
inc
xchg
or
add
popf
call
mov
jge
sbb
fimull
mov
adc
push
and
jmp
jo
inc
sbb
or
lcall
ja
lock
and
add
push
add
cmpsb
ds
xchg
inc
jle
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
shrl
rolb
js
jecxz
push
call
ja
cld
ljmp
outsb
sbb
mov
fs
xchg
jmp
jnp
movsl
daa
fstps
xchg
or
mov
mov
int
aam
int3
xor
ja
xchg
xor
push
xchg
sarl
mov
xor
pop
addr16
out
sub
jno
mov
add
stos
pop
test
aas
mov
addb
roll
mov
or
or
call
cli
adc
push
sbb
mov
sbb
insb
and
push
ja
mov
xorb
inc
les
aad
xor
dec
pop
negl
jns
lods
int3
insl
sub
sub
xor
sub
fs
sti
cmpl
jle
stos
loopne
xchg
mov
jg
test
push
sbb
sbb
mov
movsl
gs
cmpsb
ja
push
add
jo
xor
aas
lock
or
push
xchg
xor
insb
add
lds
xor
push
add
ret
push
shlw
les
cld
es
push
jo
lock
adc
insb
out
into
in
lret
aad
popa
fwait
adc
or
jb
xchg
push
dec
cmp
pop
out
insb
push
push
daa
mov
sub
repnz
push
aam
and
and
and
data16
nop
mov
in
add
ret
aaa
scas
xor
sub
jg
sub
pop
and
sbb
stc
mov
pushf
repnz
stos
je
xchg
addb
lret
or
rclb
add
mov
test
lret
jecxz
xchg
or
inc
jmp
pop
outsl
jne
repnz
nop
cmpsl
sbb
data16
inc
movsb
push
or
subl
xchg
push
lea
dec
gs
aas
test
fcmovnu
lods
push
inc
inc
cmp
iret
aas
cwtl
aad
fs
enter
inc
adc
stos
xor
pop
push
int
into
and
das
incl
xchg
icebp
adc
mov
push
mov
cmpsb
sub
aad
imul
xor
add
outsl
inc
js
aad
daa
nop
nop
inc
cmp
shl
mov
or
mov
incl
inc
cmpsl
jae
out
mov
es
lods
sbb
add
jge
lock
clc
dec
sub
out
and
fwait
dec
mov
push
lret
adc
or
lret
test
mov
pop
pop
aaa
inc
stos
test
incl
dec
mov
mov
lods
mov
sbb
frstor
aam
pop
xchg
shlb
jp
sub
add
add
rol
fcmove
rcl
pop
mov
fxch
into
mov
je
js
xor
loopne
or
les
pop
mov
mov
imull
sbb
push
loope
xor
loopne
ljmp
repz
inc
aam
jl
hlt
xor
je
mov
dec
movsl
pop
ja
or
and
out
aam
cli
jmp
pop
insl
lret
lret
lea
push
in
lret
mov
test
roll
adcb
push
out
test
les
and
and
popf
in
cmpsb
push
dec
cld
sbb
xchg
and
xchg
lds
and
inc
fwait
sbb
movsl
xorl
jae
mov
push
xchg
lds
inc
jg
popa
mov
cmp
loop
inc
ret
jb
push
mov
add
mov
xchg
mov
sbb
jne
push
dec
icebp
xchg
fucomi
aad
cmp
mov
sbb
push
mov
imul
inc
stos
mov
scas
sub
dec
mov
push
je
push
dec
lret
cmp
fwait
outsb
xor
or
stos
push
dec
mov
dec
loope
btr
push
outsl
or
xor
cld
lea
xchg
or
mov
int3
ja
dec
xchg
adc
test
adc
aad
and
push
xlat
fiaddl
aaa
add
aam
sbb
cmc
xchg
fdiv
fwait
mov
adc
xchg
std
xchg
ficoml
xor
sbb
ja
arpl
ds
jns
mov
fdivrl
sbb
push
xchg
test
ljmp
push
out
cmp
pusha
shrl
or
or
dec
sbb
and
shlb
sbb
mov
sar
rcrb
enter
arpl
mov
int
bound
in
scas
inc
xor
int3
pop
adc
ret
xchg
outsl
lock
fidivrl
stc
or
mov
push
jo
inc
pop
sbb
mov
adc
in
mov
mov
cwtl
push
jbe
cmp
arpl
loope
stos
mov
fsubrs
mov
add
scas
shlb
ret
aad
cmp
int
inc
or
mov
mov
inc
sti
insb
and
push
lea
pop
push
incl
pop
sub
push
aad
movsb
int
leave
int3
lea
lea
cltd
mov
in
jbe
or
repnz
add
fxch
pushf
or
push
lea
push
ljmp
leave
loope
xchg
or
jle
cmp
iret
jbe
aas
pop
lcall
clc
push
ret
fwait
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
mov
ja
js
je
js
xor
mov
cmp
dec
in
xlat
xor
ret
subb
jp
les
outsl
mov
inc
jg
push
popf
leave
sti
repz
cltd
fs
add
inc
sub
shl
dec
roll
fildl
lods
shrl
int
repnz
loope
cmp
addr16
aad
sbb
jbe
int3
dec
mov
bound
fcmovbe
data16
test
stos
push
and
aad
pop
sub
sbbl
cmp
xor
xchg
sti
pop
cmpl
lock
pop
inc
ret
xor
enter
sbb
push
test
aad
fs
cmp
lock
mov
mov
insl
sub
jae
ss
pusha
cmp
outsl
xor
dec
pop
lock
xchg
iret
and
lret
pop
movsb
movsl
mov
loopne
faddl
dec
lahf
push
or
mov
push
inc
sbb
subl
pop
stos
lea
in
repnz
cmc
push
addr16
xchg
mov
fidivrl
push
insl
pusha
jl
test
rclb
mov
rcll
cmp
out
pop
arpl
andl
addr16
xor
test
jae
lret
bts
sub
fsts
inc
mov
mov
cmp
rcrb
xor
push
dec
push
push
adc
cmc
xchg
les
xor
mov
cwtl
sahf
pusha
daa
xlat
fs
cmpsl
push
mov
sub
jo
mov
negb
xchg
aaa
data16
test
lds
push
movl
sbb
loop
ja
aam
in
mov
mov
mov
lcall
cmp
mov
call
mov
cwtl
loopne
adc
hlt
jmp
and
xchg
or
in
mov
xor
ja
fsubp
push
mov
xor
xor
stos
jne
dec
pop
xchg
mov
stos
mov
lods
in
sahf
mov
or
fsts
push
repnz
mov
pop
insl
push
and
jno
sti
jo
cmp
in
outsl
addl
sbb
leave
pop
sbbl
arpl
pushf
push
fistl
inc
bnd
fisttpll
sub
xlat
repnz
aam
mov
dec
or
imul
scas
shlb
push
leave
cmp
fucomip
xor
cltd
or
ret
aas
fdivr
jo
es
test
mov
mov
lcall
bound
test
rclb
push
aad
lods
sub
and
xor
dec
sbb
hlt
inc
sbb
pop
xchg
mov
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
ror
sarb
cmp
mov
je
js
mov
adc
xorb
cwtl
nop
pop
leave
xchg
loope,pt
popa
scas
aas
in
sub
mull
add
js
push
jo
push
rorl
xor
jo
cltd
loope
shrl
inc
clc
out
imul
mov
mov
xlat
mov
pop
xchg
cld
imul
ja
fcmovb
sub
push
mov
add
push
mov
js
out
ja
adcb
mov
sarl
and
aaa
testb
fistl
pop
jecxz
daa
push
mov
sub
fdivr
cmp
lret
data16
shl
shlb
dec
push
add
xchg
sti
addr16
test
lret
or
add
cmpsl
jo
jb
dec
sub
enter
mov
jg
xchg
mov
js
loope
pusha
cmc
nop
test
adc
aam
push
mov
push
adc
fxch
or
pinsrw
dec
test
adc
cmp
lods
das
sbb
jbe
stc
mov
mov
shll
int3
push
popf
sub
adc
aaa
in
mov
jo
sub
sbb
addr16
stos
fidivrl
out
or
loopne
ss
push
std
xor
subb
jno
push
or
mov
inc
jecxz
inc
jbe
and
jecxz
and
je
insl
or
jnp
scas
xchg
aaa
enter
inc
movsb
jb
inc
cmpsl
pop
outsl
fldcw
dec
aad
inc
rorb
mov
mov
in
dec
mov
add
lock
jl
jle
mov
jl
mov
xchg
mov
mov
lret
fs
xchg
jno
lds
sbb
stc
mov
fabs
or
out
or
push
scas
or
push
leave
push
lds
aas
xchg
add
aas
jno
mov
xor
cmp
outsl
dec
sub
dec
mov
jne
jmp
mov
das
cmp
fsubrl
xbegin
je
push
out
jge
mov
mov
call
bswap
push
inc
jp
xchg
inc
lods
sbb
adc
sub
sub
sbb
pop
push
mov
test
push
imul
push
fmuls
pop
stos
xorl
outsl
mov
sti
and
pop
pop
mov
jp
insb
jg
adc
je
pop
lods
out
and
sub
add
cltd
movl
fnstenv
test
movsb
push
mov
cmp
dec
jmp
mov
mov
ljmp
sbb
xchg
lcall
insl
mov
cli
inc
into
push
cmp
call
jle
cli
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
aad
out
ret
js
jle
js
pop
mov
add
inc
cmp
mov
shll
cmp
inc
imul
mov
and
sbb
jg
inc
packssdw
ret
jo
and
insl
es
adc
sahf
lcall
test
or
jb
int3
js
fsubr
mov
daa
orl
xchg
leave
jo
and
sti
scas
ret
sbb
cmp
loop
negb
ljmp
lahf
jb
test
setns
dec
daa
mov
xor
int
pop
movsl
sub
xor
jne
dec
cld
lods
icebp
jecxz,pn
les
fs
outsl
jb
mov
repnz
cld
iret
in
cltd
xor
repnz
in
fcmovnu
enter
jnp
sub
sbb
jns
push
xor
rcrb
mov
std
out
rorl
jl
adc
cld
outsb
xor
add
fldcw
ljmp
adc
jno
pop
ficoms
mov
mov
dec
fwait
cmc
sbb
aam
jle
jge
fistl
dec
mov
adc
in
add
push
lea
push
mov
add
cmc
iret
xchg
sub
mov
das
cmpsl
sub
add
xor
les
stc
push
xchg
xor
ja
pop
rol
xchg
or
mov
jecxz
mov
pop
ss
jb
cmp
repz
outsl
mov
je
outsb
lods
fs
xor
and
cmpsb
dec
test
jecxz,pn
test
or
bound
and
std
hlt
jne
dec
jl
cmpsb
jnp
mov
cmp
in
call
aam
and
or
xchg
pop
pop
loopne
xor
inc
loope
fnstsw
or
or
sub
stc
xor
out
pop
or
loopne
lods
inc
push
pop
mov
mov
mov
cmp
movsl
ret
xchg
mov
cli
dec
dec
popa
xchg
jge
xor
push
cs
clc
cs
sbb
xchg
loope
jb
gs
mov
cltd
push
mov
dec
daa
push
dec
cmp
add
fcmovne
out
shrl
dec
sub
pusha
mov
in
idiv
adc
inc
lret
sbb
mov
inc
call
push
arpl
stos
sub
dec
inc
mov
mov
stos
adc
jle
push
inc
loopne
jbe
mov
adc
jbe
push
inc
lahf
subb
inc
jb
push
lret
popa
and
sahf
mov
pop
adcb
jle
test
loop
jg
sarl
inc
jnp
mov
jmp
int
mov
out
xchg
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
mov
xchg
js
je
js
mov
or
cwtl
sbb
ja
js
stc
std
sub
sti
xlat
or
inc
fnstsw
out
xor
and
jae
inc
lods
inc
icebp
mov
mov
jl
dec
je
adc
adc
mov
sub
mov
sub
in
addb
enter
cmp
xor
sbb
scas
loop
adc
mov
ljmp
dec
inc
mov
inc
mov
js
push
std
dec
std
sub
outsb
stc
jo
out
push
popf
sub
lods
pusha
pusha
jae
into
sub
push
add
jae
mov
inc
addb
or
mov
mov
scas
and
icebp
ret
and
sti
push
add
fcomps
shrl
add
cmpsb
xorl
sbb
xor
aaa
lods
stc
sub
mov
hlt
mov
sahf
mov
mov
loope
fldl
mov
and
sbb
or
mov
sub
push
cltd
loope
xchg
cmpsb
ja
pop
daa
xor
jecxz
insl
test
cmp
lret
jns
hlt
mov
dec
xchg
dec
cwtl
cmpsl
jp
cmc
jo
xchg
pop
xor
filds
push
movsl
dec
ss
shlb
nop
mov
inc
pop
pop
xchg
sub
mov
scas
mov
push
out
pop
pop
outsl
fsubrs
sub
imul
stc
insl
xchg
aas
cmp
aas
mov
inc
jb
jge
jb
push
and
jle
rcrb
addr16
outsl
xor
insb
movsb
sub
enter
and
push
push
sbb
xchg
xchg
and
inc
leave
cltd
je
and
hlt
arpl
aam
aad
js
or
cs
mov
arpl
data16
dec
enter
call
mov
fnstsw
xchg
imul
cmp
lods
cmp
repz
pop
mov
mov
lret
cmp
pop
test
xchg
loopne
xor
insb
shlb
pop
jge
ret
xchg
add
mov
outsl
outsl
cmc
loope
or
fs
std
lods
mov
jno
loop
sbb
scas
dec
cmpsl
pushf
and
lds
mov
dec
or
iret
dec
mov
push
dec
push
mov
xlat
push
aas
xor
in
into
insb
jmp
adc
push
je
in
ss
mov
fistpll
pop
push
jl
mulb
out
es
xchg
mov
dec
jnp
mov
fs
js
pop
ds
mov
jl
mov
xchg
cmp
cmp
jmp
aad
js
je
out
ret
add
push
sbb
test
sahf
xor
mov
mov
jmp
xlat
cmp
ds
js
adc
andl
fwait
js
je
js
sbb
cmp
addr16
or
pushf
loopne
push
pushf
movsl
mov
and
pushf
icebp
or
mov
stc
js
test
out
pop
cmp
sbb
xchg
sti
in
sub
lret
into
mov
mov
jb
andb
aam
sbb
int3
xchg
pop
popa
es
pop
lahf
enter
inc
xchg
push
stos
js
rcrl
cs
xor
ficomps
lcall
mov
or
test
negl
in
push
sub
inc
push
and
xchg
test
daa
and
xchg
inc
xchg
and
sub
aas
nop
pusha
xor
mov
xchg
pop
push
cmp
xchg
popf
in
fisubrs
xchg
push
dec
test
in
mov
mov
fnstenv
insl
pop
xchg
mov
popa
mov
in
addr16
test
mov
cld
xor
xlat
int3
rcr
mov
clc
inc
xor
mov
in
xchg
jb
cmpsb
mov
cmpsl
adc
xor
imul
mov
pop
mov
mov
mov
jecxz
xchg
ds
xor
pop
sahf
cmp
xor
rcl
or
inc
outsb
out
xchg
xor
in
push
jne
fistl
inc
lock
rorb
jns
data16
xor
mov
jns
int
push
jmp
cmpsl
fwait
dec
adc
pop
sub
lock
mov
push
dec
repz
out
shlb
jne
dec
or
or
and
push
cs
mov
push
stos
ljmp
jns
lret
and
adcb
pop
insl
dec
xchg
xor
sub
fsubs
pop
dec
es
sub
cmpsl
lods
nop
inc
mov
jp
jle
lahf
aaa
sbb
icebp
push
addr16
mov
shll
adc
dec
cmp
mov
and
push
adc
jne
mov
mov
cs
mov
jg,pn
mov
cli
negb
xchg
jb
std
popa
enter
fistl
xchg
lahf
jp
hlt
imul
fcmovne
inc
dec
jne
stos
xchg
in
cltd
aam
adc
lahf
adc
jae
das
stos
adc
arpl
mov
scas
out
outsb
ret
insb
mov
clc
sbb
cmp
push
push
push
mov
das
out
xchg
nop
xor
dec
mov
imul
cmp
cmp
test
jbe
mov
cli
and
xchg
int
hlt
mov
repz
add
jns
or
pop
xlat
ja
das
sub
aad
ret
daa
push
fstpl
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
lods
or
cwtl
js
je
js
inc
mov
mov
negl
fsubs
fs
sbb
sti
out
out
adc
sahf
jecxz
xor
dec
test
pop
out
int
gs
inc
lret
jg
pushf
jo
sub
in
aad
sub
int
in
jns
in
leave
adcl
ds
loope
dec
pop
mov
add
cmp
xchg
or
lock
inc
xor
out
xlat
push
jmp
iret
push
sbb
test
and
jnp
sub
push
xor
dec
negl
das
mov
or
adcb
inc
mov
jg
or
cld
jo
test
icebp
je
push
xchg
pop
and
lods
ficoms
bound
pop
and
lds
cmpsl
mov
in
pop
and
mov
nop
xor
test
xor
xchg
insl
mov
filds
xor
or
insb
imul
mov
sub
push
leave
push
rorb
loopne
stc
sub
int3
jle
les
mov
fnstcw
es
outsb
mov
fs
pop
leave
bound
push
shrl
sub
cmp
jecxz
lret
mov
clc
mov
lcall
pop
or
mov
imul
in
inc
fadds
xor
repnz
inc
or
pop
fwait
iret
push
pop
fcmovbe
dec
mov
mov
loop
ljmp
cmc
jmp
xchg
xlat
pop
sbb
jno
rorb
sbb
repz
out
dec
mov
loopne
stos
imul
pop
mov
jg
rorl
push
inc
cmc
cld
aaa
into
jae
cmp
movsb
loopne
nop
daa
jmp
fadds
sub
mov
popf
add
not
mov
jnp
fisubs
mov
xchg
inc
pop
or
stos
cmp
mov
sub
sbb
inc
pop
mov
mov
dec
imul
sub
sub
xchg
pop
sarb
movsl
pop
leave
cwtl
dec
js
outsl
es
and
outsb
pusha
rcr
xchg
mov
cwtl
jg
lahf
dec
nop
ret
sub
hlt
add
add
sub
jnp
gs
ja
pop
jecxz
stos
popa
test
sbb
xlat
mov
call
jae
or
mov
and
addb
cmp
inc
push
mov
inc
pop
mov
xor
pop
push
or
aad
xor
xor
xor
or
sbb
pop
push
nop
adc
jbe
push
adc
ja
cmc
push
mov
pop
sar
push
loop
mov
cmp
mov
aas
add
inc
loopne
push
clc
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
test
nop
xor
js
add
mov
dec
or
mov
dec
jge
and
insb
jnp
test
ds
fnsave
lods
or
inc
out
add
mov
rolb
and
clc
stos
xchg
push
ror
adc
or
xchg
jle
mov
fadds
sarb
jo
aaa
and
sti
sbb
data16
std
in
sub
jae
cmp
sbb
dec
mov
jge
arpl
jmp
cmp
cli
mov
cmp
inc
add
inc
jns
inc
add
lcall
loopne
ljmp
cmpl
dec
cmp
sub
lret
cltd
push
jns
jbe
sbb
inc
out
mov
out
pushf
mov
mov
push
mov
sub
xchg
in
sub
jb
scas
mov
lret
dec
push
or
test
fcompl
loop
mov
push
in
jnp
fdivs
sarl
ret
mov
push
mov
mov
sbb
adc
mov
imul
in
test
add
pop
jo
cli
loope
movsl
popa
mov
adcl
jmp
or
pop
scas
mov
je
mov
fwait
das
call
call
out
sbb
pop
cs
cmpsl
dec
inc
sbb
daa
fsts
sbb
cmp
movl
sub
push
leave
cld
repz
adc
push
sbb
jbe
int3
adc
hlt
mov
lods
test
inc
filds
mov
idiv
in
frstpm(287
rcr
jbe
iret
push
fiaddl
lahf
mov
or
in
icebp
push
lret
jbe
xchg
pop
pop
mov
adc
sub
mov
icebp
rorl
cmp
in
and
adc
add
mov
pop
call
outsl
sub
jmp
pop
jo
sub
push
enter
push
lcall
adc
jge
inc
cmp
dec
or
lds
cld
mov
sbb
and
jl
subb
add
lock
shll
and
push
insl
cmp
pop
cmp
jae
xchg
pop
mov
lret
mov
out
pop
lea
xor
stos
test
outsl
int3
mov
fsqrt
adc
bnd
sbb
add
adc
les
dec
out
cwtl
sbb
clc
and
dec
xor
xchg
adc
mov
and
add
subl
jmp
rol
ror
aad
xchg
mov
aad
push
js
je
js
add
int
add
xorl
cmovno
jmp
mov
icebp
mov
out
cwtl
jno
cmpsb
mov
xchg
movsl
mov
loope
add
adc
mov
push
mov
add
and
aam
in
cmp
add
mov
mov
test
ljmp
clc
pop
into
cmp
outsl
xchg
push
adc
jle
stc
sbb
add
add
test
mov
push
js
frstor
jns
cltd
sbb
push
mov
mov
fstps
gs
cmp
mov
cmp
stos
and
cmc
or
insb
or
fwait
mov
adc
loop
cmc
hlt
and
fnsave
sbb
lahf
test
outsl
cli
xor
jg
repz
add
out
ljmp
test
jle
sub
jp
sar
dec
sub
call
and
cmp
jl
imul
pop
push
push
lock
sarl
fists
imulb
mov
aam
insb
repnz
imul
out
xor
mov
jmp
mov
imulb
mul
repnz
dec
or
jge
lcall
xchg
dec
xor
add
inc
cmp
push
pop
pusha
test
push
scas
inc
mov
stc
lock
xchg
icebp
add
push
xor
push
arpl
inc
sbb
scas
sbb
rcrl
mov
arpl
cwtl
sub
or
push
cmp
mov
sarl
sbb
es
jnp
add
xor
pop
in
lahf
pop
arpl
xchg
roll
andl
and
ret
and
and
inc
call
mov
aas
sub
dec
jb
cli
jae
mov
mov
imul
sbb
cmp
rorb
adc
leave
jecxz
add
fs
push
mov
sub
xchg
and
leave
mov
mov
push
imulb
cwtl
nop
ljmp
cmp
inc
lods
xor
into
test
inc
clc
push
jae
sbb
xor
test
dec
mov
sub
sub
dec
ret
jne
pop
cmp
push
bound
pusha
adc
adc
out
shrl
lock
loopne
imul
inc
es
cmc
lahf
adc
setle
xor
mov
push
jne
fildl
fcoms
lock
dec
push
mov
rcrl
mov
mov
aaa
mov
xchg
xchg
xchg
pushf
xchg
cmp
jmp
inc
add
or
and
jns
mov
push
pop
dec
mov
into
imul
test
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
imull
js
xor
aas
jge
xlat
insl
sahf
jle
pop
mov
push
and
cs
xor
cwtl
sbb
jl
popf
rol
mov
mov
xlat
aas
test
pop
int
push
or
sti
dec
stc
repnz
dec
xor
out
sar
ret
add
sbb
cmp
rclb
jno
push
out
mov
inc
ret
in
push
enter
cltd
pop
adc
mov
xor
mov
rcrb
dec
sbb
add
jb
cmp
out
push
jmp
jge
lea
rolb
or
cmp
js
rorl
pop
mov
and
mov
xchg
shrb
aam
or
xchg
cmp
enter
mov
mov
cmp
or
mul
cmp
or
jbe
iret
push
mov
aad
je
jbe
mov
in
and
mov
xor
int
rorb
add
xchg
push
ror
add
lret
xchg
add
and
test
mov
mov
jmp
jg
or
aaa
push
int3
push
ljmp
mov
call
int
movsl
mov
es
ds
xor
stc
popa
das
sbb
hlt
fisttpll
pop
sbb
rcrb
arpl
inc
pop
pop
jle
pusha
adc
popf
test
cli
sbb
push
add
push
iret
test
mov
subl
int3
insb
insb
inc
push
or
repz
rsqrtps
add
xchg
lods
out
add
mov
fidivs
rep
cmp
addl
mov
mov
or
mov
ljmp
aam
icebp
lods
cli
cmp
insb
imul
sbb
jl
lahf
int
xchg
dec
cltd
out
xchg
sub
mov
test
xchg
iret
inc
ja
dec
push
test
je
xchg
cltd
jbe
dec
pushf
jp
adc
das
sahf
jae
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
sbb
sahf
out
js
xor
insl
xor
xchg
sub
sbb
pop
mov
clc
fsubrs
jp
insb
cld
mov
mov
stc
fdivrs
ret
and
leave
rclb
push
loopne
xor
iret
out
insl
cmp
cmp
cmc
push
inc
mov
ja
out
xor
arpl
scas
aas
adc
dec
push
imull
mov
lock
dec
lret
mov
or
rclb
icebp
sarb
aas
ror
inc
shl
or
cmc
add
sub
subl
mov
cmpb
js
adcl
cmp
aad
dec
das
mov
lods
mov
mov
add
and
mov
xchg
lds
testl
aad
hlt
shrl
push
shl
inc
in
mov
mov
cld
pop
adc
push
rorl
pop
push
add
jmp
aam
rcll
push
inc
xor
adc
mov
xchg
sbb
std
and
iret
fnstsw
stos
xchg
inc
mov
jg
andl
jle
xor
jb
ss
cmpsl
fmuls
jne
or
sti
sbbl
inc
lds
std
or
and
je
adcl
ret
into
cmpl
or
pushf
mov
mov
mov
mov
push
loop
fistps
inc
pop
lret
in
scas
xor
icebp
inc
adc
mov
bound
movsb
push
mov
inc
inc
lods
sub
sbb
insl
mov
fiaddl
das
push
mov
add
mov
jne
sbb
rcrb
push
lret
or
pop
fadd
lahf
mov
adc
jp
pop
dec
sarl
cmp
inc
cmp
and
rcrb
dec
xchg
bnd
mov
es
cmpsl
repz
or
fxch
xchg
clc
imul
pop
insl
ja
jecxz
mov
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
cmp
pushf
stos
js
xor
cmpsl
lcall
pop
js
adc
adc
imul
dec
dec
clc
or
cltd
in
pop
rol
dec
sub
sub
cmp
mov
jns
jmp
cmp
xchg
inc
test
sub
fsubrs
fdiv
cld
inc
jp
push
jne
mov
mov
jmp
les
cmpsb
pop
arpl
insb
add
mov
push
mov
push
push
mov
loopne
add
adc
inc
rcrb
lock
stos
pop
pushw
std
xor
push
mov
sti
inc
push
jne
or
lock
inc
mov
push
sub
cmpsb
xchg
insl
test
lret
loop
or
inc
sub
xchg
pop
das
adc
sbb
mov
sti
xchg
ret
repz
cmp
fwait
mov
jns
lods
jge
rolb
push
icebp
gs
dec
push
aas
out
xchg
xchg
mov
mov
mov
pop
push
add
mov
cmpsb
sbb
push
ret
pusha
and
pop
mov
dec
outsb
mov
pop
add
rcrl
mov
mov
movsl
or
xchg
lret
cmp
push
push
mov
inc
out
pop
sbb
rcrb
ja
movsl
nop
imul
ds
pop
pop
pop
ljmp
or
fiadds
lods
pop
and
adc
jp
add
arpl
ret
in
das
cmp
or
fisubl
fisubrl
rorl
or
jns
ljmp
sub
xchg
imul
into
push
pop
adc
in
sbb
mov
pop
lds
cli
jbe
push
fwait
cmp
xchg
lods
fwait
mov
jae
gs
fistpl
sbbl
adc
push
and
out
mov
sar
push
cltd
xchg
push
jne
adc
test
and
int3
ret
addb
out
dec
jbe
aam
aaa
mov
test
ljmp
pushf
lret
pop
stos
scas
add
and
shl
ror
dec
dec
sbb
add
add
mov
test
add
lds
add
add
lret
aad
lea
mov
jle
js
mov
out
loop
leave
cmp
push
push
stos
aas
pop
insb
pop
jbe
xchg
adc
sbb
in
cld
sti
mov
test
mov
in
gs
mov
imul
sahf
lods
mov
sub
add
add
loope
inc
mov
lcall
je
cmp
outsl
out
cwtl
pmulhuw
out
add
fcoml
cmp
fcomps
pop
or
cmpb
sub
jno
xor
aas
movsb
xlat
repnz
roll
xchg
inc
nop
sub
mov
add
out
xchg
lret
testb
cmp
jecxz
into
mov
loopne
sub
aas
dec
sbb
sub
add
mov
mov
mov
push
insl
lahf
pop
in
pusha
mov
and
repz
cmp
sahf
pusha
lret
jbe
pop
jnp
ja
xor
loopne
fsts
sub
adc
es
stc
and
xchg
rorl
mov
jl
jg
lcall
test
pop
push
and
lahf
insb
insl
insl
les
insb
sub
push
loope
dec
pushf
xchg
test
test
ss
mov
imul
cmp
test
push
iret
cmp
call
scas
or
fildll
sahf
test
pop
lods
mov
pop
mov
fstps
push
sbb
mov
scas
stc
pop
xchg
push
leave
in
xor
scas
xlat
test
jl
inc
out
int
repnz
subb
pop
outsb
idivl
test
and
repz
popa
fdivp
js
lcall
cmpsl
xchg
rcrb
sbbl
arpl
jo
push
pop
std
dec
adc
pop
jno
pop
in
outsb
and
push
gs
mov
ret
in
stos
and
mov
inc
fs
gs
adc
lcall
inc
adc
push
cltd
push
sbb
ret
pop
into
lret
data16
pop
mov
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
mov
scas
js
xor
push
in
or
cltd
mov
lock
inc
xorl
push
xor
or
mov
cmp
frndint
std
xor
mov
ds
xor
lahf
pop
into
mov
rcll
ss
inc
push
fbld
sub
xor
ss
dec
sub
stos
arpl
fmuls
cmp
rorb
pop
outsb
icebp
outsl
mov
push
cmp
mov
shll
std
inc
add
push
cmp
mov
dec
add
aam
xchg
xchg
add
and
push
dec
shrb
sub
jnp
mov
bswap
sbb
pop
inc
lahf
sahf
fldl
mov
mov
push
repnz
push
or
fwait
lods
mov
push
daa
jne
and
and
mov
popf
out
int3
jbe
cmp
pop
jl
cld
insb
and
mov
and
lods
addr16
or
fbstp
dec
adc
pop
negl
movsb
repnz
push
cs
inc
mov
cmp
or
sbb
dec
dec
jp
lea
jmp
std
dec
sti
xor
adc
mov
imul
sti
cmc
xlat
andb
dec
adc
mov
cmpsb
push
and
les
inc
pop
test
add
cmp
repz
ret
dec
push
sti
or
scas
ret
outsb
dec
sub
inc
pop
arpl
push
mov
adc
jb
into
test
ficoml
bound
negl
push
mov
loop
leave
sbb
jno
out
push
int3
iret
mov
into
aam
xchg
inc
out
outsb
enter
mov
jmp
push
mov
dec
das
and
lea
int3
mov
je
ret
or
inc
pop
inc
outsl
or
push
mov
xorl
cmp
pop
pop
pop
mov
sbb
inc
rcrb
outsb
xchg
call
rcll
test
mov
jo
mov
or
push
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
lahf
in
and
xor
pop
adc
rolb
xchg
out
in
xchg
mov
out
lea
mov
fwait
rcll
lahf
push
sbb
lods
mov
jno
repnz
xor
dec
lret
cli
stc
push
aas
iret
push
cmp
inc
xchg
ja
cmp
stos
loope
xor
sbbb
prefetcht0
push
test
dec
call
push
xchg
xchg
jmp
jno
popa
loopne
ficoml
clc
sbb
popa
xor
aad
jg
adc
cltd
mov
push
jecxz
fstp
repnz
mov
mov
pop
out
insl
pop
std
xchg
pop
ja
rcll
dec
lds
or
leave
lock
mov
mov
fwait
adc
or
adc
cmp
adc
push
sbb
or
lods
push
movb
push
mov
out
xchg
cmpsl
ss
add
push
adc
imul
xchg
js
inc
inc
jmp
pop
and
jae
ss
jo
out
pop
pop
push
clc
scas
fwait
dec
shll
or
popf
add
hlt
push
stos
mov
xor
mov
mov
or
sub
lret
mov
sbb
cld
mov
sbb
rorl
jne
lret
sahf
das
outsb
ficoms
nop
movsl
xor
pop
mov
in
pop
add
test
cmp
mov
pusha
dec
test
xchg
xor
clc
call
pop
sbb
ret
xlat
jb
sub
cmp
cmp
call
ficomps
cmp
xchg
scas
out
sbb
xor
in
leave
fisttpl
adc
inc
jg
repz
mov
inc
push
dec
fistps
mov
popf
sub
push
pop
daa
add
pop
int3
xor
cmp
dec
jmp
adc
hlt
popa
inc
xchg
cmp
fisubrs
shrl
das
push
xchg
pop
dec
faddl
mov
jle
das
add
jle
test
insl
scas
kmovw
fldcw
dec
arpl
es
in
xlat
jmp
pop
shlb
cmp
fldl
xor
mov
iret
add
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
divl
mov
js
imul
mov
jp
lock
fs
stc
pop
stc
in
push
mov
ss
subl
xchg
out
rcl
call
push
push
inc
jbe
or
movsl
dec
add
xor
fidivrl
pop
inc
pop
in
xchg
lahf
mov
out
addl
ss
xor
inc
sarb
hlt
inc
push
jl
faddl
test
outsl
push
in
xchg
pushf
or
ss
popa
js
leave
lds
pop
arpl
push
jns
adc
sub
loope
or
lcall
fstl
jo
in
scas
addl
cmpl
xor
lock
in
mov
das
add
ret
adc
movaps
cltd
and
nop
pop
dec
popf
sub
or
mov
repnz
push
shlb
cmpsb
sbb
adc
outsb
xor
cmc
xor
pop
push
jl
scas
das
sbb
movsb
loop
xor
xchg
mov
test
loop
mov
and
push
mov
xor
add
test
mov
test
int3
popa
add
inc
sbb
or
fldcw
push
sbb
mov
mov
sbb
sub
inc
cmp
xor
mov
cmp
sub
push
push
xchg
jbe
fnstsw
insl
sub
loope
xor
pop
adc
inc
inc
cmp
push
xor
in
inc
cmp
enter
adc
adc
cvtps2pd
out
mov
popa
dec
jge
fnstcw
sub
aaa
dec
mov
xchg
sbb
jl
aam
sbb
adc
testl
daa
xor
fidivl
fwait
add
cmc
js
cltd
test
xor
mov
xchg
pop
mov
add
out
cmp
push
mov
mov
inc
out
push
xor
mov
dec
nop
sbb
arpl
xor
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
mov
mov
js
jle
js
lods
sub
cmp
pop
lds
popf
das
hlt
cmp
mov
ljmp
cld
aad
arpl
push
into
and
roll
punpckhbw
dec
loopne
mov
cld
rclb
ja,pn
cmpsb
xor
xchg
mov
fnstenv
sbb
cli
sbb
pusha
fwait
jnp
fwait
dec
dec
roll
xchg
mov
add
push
clc
aas
adc
jmp
pop
call
lret
cmp
movsl
aam
mov
xchg
out
inc
fldt
adc
xchg
and
loope
stos
addr16
shrl
ret
push
in
out
fistpl
and
push
cwtl
out
cld
sub
cmp
leave
mov
xchg
bound
cmc
int
aaa
sub
or
xor
push
inc
sbb
iret
sahf
mov
bound
cltd
push
xor
out
pop
insb
rol
aas
popa
dec
mov
leave
or
mov
cmp
mov
ljmp
je
popf
add
pop
sahf
stos
pushf
adcb
orl
push
dec
clc
pushf
xchg
repnz
ret
insl
or
aad
fwait
adc
jnp
stos
jnp
pop
bound
mov
pop
fdivs
xor
inc
or
popf
push
xchg
sub
les
dec
push
int
fwait
jno
movsl
mov
cmp
icebp
inc
xchg
pop
xchg
std
fisubs
dec
jo
je
mov
jmp
sbb
hlt
pop
bound
mov
test
jns
jge
add
dec
sahf
rcrl
push
sbb
inc
jne
and
stos
adc
sub
xchg
mov
push
cmp
out
repnz
push
fimull
jge
cmp
and
std
rorl
xor
pop
mov
sbb
mov
mov
lcall
jbe
hlt
insb
mov
cmp
sbb
sub
sub
mov
loope
fcmovne
aaa
fs
xchg
xorl
lret
mov
mov
add
ljmp
lods
add
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
int3
cmp
xor
jg
jns
jecxz
mov
mov
data16
add
adc
add
loopne
mov
je
shlb
lret
std
xorl
lock
test
mov
out
jo
xor
out
mov
mov
or
push
pop
jo
push
push
lret
sbb
pop
and
stos
add
pop
adc
insl
enter
fsubs
or
pop
or
and
xlat
or
pushf
outsb
add
aaa
adc
out
pop
jl
xor
ss
adc
xor
dec
dec
mov
scas
aaa
xlat
push
data16
leave
sub
push
sbb
clc
pusha
mov
xlat
lahf
cmp
dec
and
scas
dec
daa
js
xchg
js
cmp
lahf
loope
btc
fdivs
cli
fcoml
xorl
out
xor
push
pop
cmpb
aam
inc
fnstsw
push
pop
mov
mov
xchg
add
ss
icebp
ljmp
imul
inc
push
xchg
cli
cmp
lahf
call
xor
mov
cwtl
sbb
repz
sbb
mov
mov
shll
mov
adc
mov
push
inc
push
int3
loope
pop
adc
inc
jbe
lret
fmuls
inc
int3
xor
leave
mov
inc
push
mov
dec
and
jbe
pop
pop
inc
mov
loop
fistpl
sub
bound
aaa
gs
xchg
pop
and
stos
out
es
test
dec
and
ja
rcr
int
lret
cltd
outsl
lret
les
mov
ja
mov
push
mov
push
xchg
je
div
mov
lods
adc
cmpsl
inc
mov
fistps
xor
bound
test
fcmovnu
pop
xor
mov
jnp
or
or
stc
sbb
xor
pop
insb
out
or
inc
or
sti
pushf
xchg
xchg
int
jae
push
sub
outsb
adc
out
jne
cmp
into
mov
clc
pushf
decb
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
popa
loop
stc
aas
mov
js
mov
sub
xor
mov
shlb
sub
xor
nop
cmpsb
mov
mov
jb
orb
ds
aam
or
andl
sub
push
lds
xchg
cmp
xchg
xchg
mov
add
pop
iret
test
cli
insl
outsb
lock
jp
stos
loope
and
mov
adc
cmp
int
pop
dec
add
cmp
ret
push
or
data16
add
and
or
leave
lods
adc
add
add
inc
sub
stc
sarb
or
ss
inc
dec
dec
lret
xchg
sub
sbb
dec
pop
push
mov
add
xchg
ret
decb
nop
rcr
cltd
cmp
jge
push
inc
rcll
mov
dec
call
xchg
clc
push
inc
out
xor
push
aam
cltd
jbe
scas
rcrl
push
roll
or
adc
test
pop
dec
rcrb
xchg
adc
inc
loope
push
loopne
cmp
pop
mov
cs
adc
dec
sarb
movsl
or
rol
scas
xor
mov
xor
pop
sub
lcall
in
jle
adc
pushf
test
inc
jno
repnz
cmp
pop
push
mov
push
mov
xchg
fdivl
js
sbb
fwait
jecxz
mov
jge
roll
sahf
mov
pusha
xchg
insb
mov
jbe
push
push
push
mov
iret
enter
inc
xchg
jns
push
jnp
xor
stos
push
or
cmp
lret
xor
jge
cli
pop
insl
xlat
mov
and
aaa
pop
lret
icebp
mov
icebp
add
xor
and
inc
mov
sbb
push
sbb
mov
ret
inc
out
sub
pop
adc
mov
mov
test
sbb
arpl
mov
es
mov
shl
inc
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
inc
shlb
mov
js
xchg
xchg
pop
std
in
mov
adc
fsub
jbe
fnstenv
cmpsl
cmp
pop
fiaddl
leave
fstl
stc
iret
fmuls
lds
std
shlb
inc
mov
mov
add
and
jmp
push
das
fdivrp
xlat
push
adc
add
movsl
inc
inc
jbe
movsb
pop
jb
xor
arpl
or
sub
jg
arpl
mov
gs
int
jl
push
cld
or
pop
dec
stos
jmp
mov
and
add
imul
sbb
adc
mov
mov
shlb
fwait
sarl
jae
inc
cltd
inc
and
ljmp
xor
stc
filds
pusha
aaa
lahf
inc
sub
mov
orb
cmpsl
mov
mov
push
insb
jnp
lock
jg
jle
test
mov
jb
cmp
cmp
popa
pop
xchg
cmp
int3
xchg
sub
add
mov
data16
lock
jmp
movsl
sub
test
mov
daa
into
ds
mov
xchg
jnp
adc
cltd
in
js
and
xor
aam
jecxz
mov
add
fbld
and
adc
mov
ret
movsb
lcall
fimuls
test
jbe
ret
lock
jge
repz
push
repz
inc
inc
ret
pop
lds
mov
lds
and
mov
push
mov
or
ss
and
loope
pop
sbb
jecxz
fwait
test
repz
pop
inc
dec
push
aam
dec
dec
in
add
inc
insb
shrb
adc
lret
fdivl
xor
inc
mov
cmp
xlat
movsl
xchg
xor
jmp
movsl
arpl
repnz
mov
lods
aad
xor
in
adc
mov
adc
imul
jp
xchg
or
in
sub
fisubrs
pop
fwait
mov
pop
ljmp
jle
ffree
psubw
jo
incl
sbb
fmuls
rcrb
push
xchg
pop
cmpsl
dec
out
pop
scas
mov
xorb
out
push
idiv
data16
sbb
mov
stos
inc
lods
pop
push
lds
mov
dec
insl
or
or
rclb
movhps
sbb
pop
inc
cltd
sub
or
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
addr16
popa
mov
js
bound
cmp
cmc
pop
push
push
dec
push
jnp
lods
aas
mov
in
jno
lods
shr
cmp
lea
insb
icebp
mov
xor
into
iret
adc
cmp
stos
mov
push
adc
pop
mov
xor
cltd
cltd
lods
iret
je
cs
jo
bound
stos
in
xor
jecxz
mov
sub
inc
add
in
sub
adc
sub
adc
loope
lods
rcrl
outsb
inc
add
push
jae
sbb
or
push
mov
mov
ss
daa
or
int3
divl
test
push
push
xor
shll
insl
cmp
jne
mov
jl
mov
in
sbb
jno
jo
or
mov
mov
xorl
inc
js
adc
and
sbb
fdivrl
es
dec
lods
xchg
cmp
xor
fwait
mov
or
in
pusha
xor
cmp
mov
ljmp
repz
cltd
push
push
push
ss
pop
sub
iret
push
cwtl
mov
rcl
xchg
xchg
mov
inc
outsl
gs
lock
scas
outsl
jno
fucom
fs
adc
sbb
adc
insb
jle
addr16
aad
es
mov
mov
xchg
sti
jne
call
popf
sbb
pop
scas
mov
lods
stc
cmpsl
cmp
fsubrs
mov
mov
rcl
fsubl
das
scas
dec
xor
in
out
cld
test
jge
jmp
int
xor
out
xor
addb
and
outsl
scas
pop
pusha
ret
or
ret
adc
rol
or
jmp
jo
stc
adc
bound
xor
xchg
cwtl
clc
fidivrs
push
dec
sub
pop
or
mov
mov
fdivs
or
xchg
icebp
mov
aas
cld
add
mov
js
inc
or
mov
int
xchg
sbbl
loop
test
out
call
push
fidivs
sub
or
jne
inc
gs
test
mov
adc
aas
lods
sub
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
dec
pusha
into
mov
js
pop
pushf
cmpsb
lret
dec
movsl
xchg
adcl
ljmpw
js
popa
jbe
subb
arpl
sub
decl
aam
sbb
cmpsl
push
push
in
mov
ljmp
sti
sub
lock
jg
pop
and
pop
lods
inc
repz
mov
jns
pop
ljmp
sarl
or
jne
leave
scas
insb
push
adc
movsb
icebp
lret
lds
stc
out
pop
shrb
lcall
fimuls
push
jmp
test
pop
test
hlt
push
sub
pop
sbbl
add
pop
mov
notl
ret
insl
and
or
mov
jg
push
into
add
jbe
mov
inc
add
xor
xor
mov
arpl
xor
inc
sub
enter
out
repnz
add
push
movsl
xchg
sbb
cli
mov
add
cli
and
pop
lds
std
mov
and
xchg
imul
aaa
sbb
outsl
push
mov
repz
mov
or
lahf
and
cmp
lods
jbe
fdivrs
jecxz
xchg
fstpl
xchg
outsl
push
std
jnp
stc
sbb
arpl
loope
cs
mov
inc
jmp
pop
inc
push
mov
sbb
xchg
sub
pop
push
mov
testb
push
fs
or
fisttps
xchg
cmp
fbld
inc
dec
mov
loope
shl
loope
lea
scas
mov
test
out
stos
mov
adc
pop
push
mov
test
sbbl
jecxz
movsl
mov
psrad
xchg
aaa
fcmovnbe
enter
pop
daa
cmp
pop
shl
pop
jae
sub
mov
and
xor
xchg
inc
mov
pop
aas
jge
xchg
dec
sub
pop
mov
cmp
lods
sub
adc
xchg
adc
out
adc
inc
push
cmp
pop
lds
or
stos
outsb
stos
add
push
clc
mov
lea
mov
mov
clc
icebp
lahf
xor
add
cmp
push
fnstsw
xor
or
add
add
add
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shrl
xchg
pop
mov
jle
js
pop
cs
aam
xor
bound
mov
pushf
ss
cli
int3
in
cli
in
into
xor
scas
pmulhuw
test
mov
sbb
jmp
and
push
push
cmp
push
aam
cmpsb
outsl
scas
in
push
push
bound
mov
pop
dec
xlat
test
mov
rcll
jns
jl
in
mov
dec
aad
xor
jecxz
sahf
push
cwtl
scas
dec
int3
jecxz
and
dec
fists
outsb
add
inc
inc
repnz
xchg
jb
enter
mov
push
cld
out
das
data16
int3
sub
jp
mov
movsb
js
jo
lods
pop
inc
and
les
xor
dec
sub
int3
jp
es
or
mov
mov
sub
rcrl
aad
enter
je
mov
mov
idivl
xchg
sub
mov
shll
jg
insb
inc
mov
clc
loope
and
jnp
scas
shr
cltd
rolb
dec
loop
jle
inc
sahf
mov
repnz
push
jmp
test
in
mov
mov
adc
repnz
jne
inc
repnz
jne
in
repnz
sbb
fimuls
cwtl
aas
mov
stc
out
imul
je
sub
sti
adc
ja
test
mov
adc
lea
arpl
cmpl
clc
adc
dec
xchg
leave
fidivs
pushl
in
lock
es
pop
or
imul
lods
push
sbb
sahf
sub
mov
data16
jg
xchg
aaa
dec
shrl
dec
xor
push
rcll
das
icebp
repnz
xchg
loope
cmp
sub
test
xchg
cmpb
jns
decb
lods
pop
imul
sub
movsl
sahf
imul
mov
add
inc
sbb
sub
xor
adc
mov
push
push
push
leave
xchg
push
xor
repnz
lock
arpl
cmp
adc
mov
dec
test
cmpsb
imulb
push
sub
jge
daa
mov
mov
shl
mov
stc
into
fldenv
xchg
cmp
sarl
cli
movl
jmp
ret
ret
lret
test
adc
inc
js
in
js
add
pusha
lods
movsl
repnz
dec
fwait
ds
popf
arpl
mov
shll
mov
mov
daa
and
sar
push
lahf
mov
and
push
mov
xor
jle
xor
inc
es
push
add
push
xlat
and
inc
sti
lret
loop
call
mov
mov
add
xchg
xchg
mov
pop
pop
sarb
mov
stos
rcrl
stos
adc
mov
push
sahf
push
imul
mov
icebp
movsl
mov
xor
sub
mov
mov
cld
mov
and
in
lods
icebp
add
adc
inc
dec
mov
sbb
mov
daa
lock
pop
xor
fldl
dec
jno
fnstsw
jmp
mov
inc
mov
mov
mov
cmp
dec
dec
int
fnsave
jae
enter
fnop
dec
addb
in
sub
mov
xchg
or
in
test
loope
lcall
fnstenv
mov
mov
repnz
popa
dec
fs
mov
loope
int3
into
sbb
adc
mov
pop
outsb
adc
and
xor
mov
lahf
daa
test
push
mov
pop
lahf
test
stos
adcl
popf
rolb
mov
pop
push
pop
dec
and
es
push
movsl
adc
repnz
out
mov
sbb
mov
push
gs
popa
xor
jo
nop
jg
cld
xor
idiv
ror
adc
cld
push
mov
mov
push
xchg
pushf
hlt
fs
add
jge
sub
push
inc
in
cmpsl
stc
mov
sbb
iret
popa
cwtl
jle
mov
lea
inc
xlat
shrb
and
pusha
inc
pop
cmpb
loopne
out
insb
aas
leave
stos
insl
sbb
sub
push
push
iret
adc
das
sbb
orl
sub
cs
pop
arpl
stos
dec
roll
sbb
cmp
jp
outsb
jmp
push
push
repnz
pop
pop
ret
repnz
je
inc
sub
dec
adc
sub
pusha
imul
adc
and
cmp
ficoms
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
xchg
pop
mov
inc
js
in
js
add
int3
mov
pop
scas
add
mov
inc
jge
loopne
test
dec
mov
push
inc
jo
pop
push
mov
xor
mov
cltd
gs
sbb
imul
dec
rcrl
cmpsl
and
roll
xchg
mov
add
inc
fstpl
ds
loop
push
sub
rclb
mov
fcomip
cltd
xchg
sub
fisttpl
xor
sub
xor
arpl
cmc
out
je
cltd
movsb
clc
or
pop
stos
cmpsl
inc
in
jbe
sahf
mov
jge
in
leave
xchg
mov
nop
imul
fcoml
fcmovnbe
aas
jo
scas
xor
mov
cld
inc
mov
fstps
test
mov
mov
enter
cli
adc
nop
dec
cmp
jno
repz
add
loop
mov
sub
sub
push
pop
shld
popa
or
mov
call
mov
mov
push
sete
adc
jp
push
xchg
nopl
mov
mov
cmp
add
push
mov
lods
lods
lock
mov
lock
stc
outsl
fsubl
dec
sbb
xchg
and
hlt
and
mov
mov
adc
lds
pop
inc
cmpsb
adc
xchg
jg
mov
aad
ljmp
adc
mov
mov
push
jmp
jne
mov
add
movsl
insl
push
call
cmpsb
pop
xor
pop
into
adc
inc
inc
mov
sbb
xchg
stos
jns
mov
mov
loopne
fs
mov
mov
fwait
call
cmpsb
aas
inc
fsubrs
xchg
push
jmp
add
mov
je
push
loope
lcall
xchg
cli
shll
cs
inc
sbb
stos
icebp
into
push
pop
push
add
adc
fdivrl
daa
lods
sub
lret
mov
test
in
push
in
push
adc
push
sub
inc
fisubrl
mov
js
cltd
push
jge
push
cmpsb
jecxz
xchg
call
push
dec
enter
call
push
cld
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
fwait
pop
fcmovu
jp
js
in
js
fcoml
mov
insl
push
test
inc
push
pop
jb
loop
rclb
jbe
std
clc
test
pusha
mov
out
mov
adc
repnz
shrl
mov
sbb
shrb
jo
stos
movsl
outsb
shrl
sbb
mov
movsb
sub
adc
fidivrs
fists
subl
jg
addr16
mov
bound
repnz
xchg
or
js
outsl
push
sub
dec
test
push
or
lret
cmpsl
fisttpl
imul
insl
repnz
test
repnz
mov
sarl
aam
fstl
shr
mov
sti
cmp
daa
mov
sub
fiaddl
ds
lods
sahf
pop
sub
out
jo
cmp
dec
jo
enter
aam
push
push
repnz
movsb
lds
jno
mov
repnz
mov
pop
fwait
hlt
icebp
jge
scas
out
into
rcr
cmp
push
gs
mov
out
xchg
add
push
lds
rcl
and
adc
push
out
jb
loop
stos
mov
dec
cs
mov
or
test
sarl
pop
mov
or
test
ljmp
fwait
sub
fcom
sub
iret
fildl
out
xor
or
scas
out
in
ret
repz
push
fisttpl
adc
outsb
ljmp
push
pop
imul
adc
roll
sub
outsl
test
jp
adc
inc
mov
dec
cmp
ret
stos
cmpsl
mov
jbe
or
fmul
jne
jmp
jae
and
or
idiv
ficompl
push
sbb
push
and
mov
jns
pop
dec
dec
test
mov
jp
cmc
jg
cmp
enter
imul
and
cmp
pop
cmpb
jmp
lret
dec
push
mov
mov
bound
pop
mov
mov
int
inc
flds
repz
inc
xchg
push
repnz
imul
cmp
pop
cmc
push
or
ja
push
inc
cmpsb
and
sub
mov
mov
pop
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
loope
cs
dec
js
in
js
inc
dec
sbbl
inc
push
adc
inc
inc
cmc
in
test
or
bound
inc
sti
inc
fisttpl
aas
mov
jle
mov
inc
dec
xor
xchg
mov
adc
jle
cmc
pop
icebp
and
mov
mov
and
subb
das
cs
xchg
jmp
pusha
jns
xchg
xchg
pop
mov
push
xchg
jns
movsl
pop
mov
jne
mov
fstpt
fists
xor
xor
mov
inc
mov
jne
push
jge
das
sub
lock
add
jbe
mov
xchg
sar
and
movsl
dec
dec
aas
test
sub
push
adc
and
jmp
sbb
jb
adc
dec
jo
mov
sbb
mov
jb
inc
in
cmpsb
push
jp
pop
push
inc
pop
movsb
gs
mov
into
addr16
aaa
pop
pop
jbe
addl
jmp
rorb
xor
cltd
jecxz
dec
mov
in
dec
fstps
js
mov
mov
cli
sub
in
notl
sub
or
sbb
mov
mov
xchg
bound
xchg
xchg
cwtl
dec
mov
test
bound
or
sub
notl
sub
push
mov
movsb
or
out
and
outsl
or
mov
mov
gs
push
xchg
gs
rorb
mov
jl
pop
mov
cs
add
test
add
aas
jb
dec
fs
cld
cmp
and
shrl
xchg
lahf
addr16
adc
scas
sbb
push
add
fldt
or
in
pusha
pop
jne
int3
mov
dec
xlat
sub
jecxz
add
sub
or
or
mov
adc
lret
sbb
adcl
insl
movsb
push
add
enter
cmpsb
mov
nop
add
inc
loopne
pop
and
popf
jno
xor
insl
nop
xchg
jle
add
mov
dec
data16
outsl
pop
loope
outsl
je
stos
hlt
stc
fidivrs
cmp
fildl
cmpl
mov
cwtl
dec
int3
push
aaa
fiadds
shr
addl
add
int
into
xchg
jle
clc
cmp
js
jle
js
dec
insb
fdivrl
jo
js
jo
scas
xchg
jne
stos
push
rolb
cmp
mov
in
add
xchg
rolb
mov
dec
adc
popf
test
insb
in
push
xchg
stos
push
daa
mov
lcall
lds
push
push
std
sbbb
dec
mov
sub
xchg
cwtl
nop
sbb
insb
enter
push
inc
mov
popa
testl
stc
lret
shl
psubd
jmp
adc
xlat
sbb
out
loop
fcoms
leave
mov
fucomip
js
movsl
std
mov
inc
inc
xchg
outsb
pop
test
cltd
test
into
mov
iret
mov
mov
adc
call
mov
or
pusha
ret
movsl
cmp
stos
mov
pop
mov
jge
insl
xor
aaa
xchg
sub
and
jl
and
sub
sbb
dec
mov
adc
xor
inc
stos
adc
dec
call
out
mov
inc
mov
mov
xor
jno
pop
icebp
lods
inc
addr16
sub
or
sbb
cli
mov
jae
arpl
pusha
sbb
xchg
and
test
aam
adc
sahf
inc
mov
sbb
mov
mov
push
orb
sti
cmc
lahf
add
fidivrl
pop
out
daa
aam
into
cmp
lret
fcomps
cli
mov
cmc
ret
popf
sub
mov
shl
aas
dec
ljmp
jo
sti
xchg
fwait
jne
cmp
inc
arpl
sbb
pop
dec
iret
xor
cwtl
sbb
pop
inc
cmpl
push
ret
mov
cmp
mov
pop
lret
sub
inc
pop
dec
push
scas
mov
dec
push
pop
inc
sbb
dec
xor
xchg
loop
dec
sub
push
fildl
cli
ret
push
sub
dec
inc
insb
jmp
and
and
jno
adc
push
scas
dec
mov
sti
es
xor
andl
clc
fidivl
roll
jecxz
in
int3
jo
les
push
je
mov
sarb
imul
in
push
lds
inc
in
call
lcall
clc
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
adcl
js
jle
js
scas
mov
bound
mov
imul
dec
xchg
daa
test
push
iret
push
in
lods
outsb
mov
cli
and
addr16
sbb
fsubr
lods
fwait
rorl
aaa
out
popa
push
fwait
mov
xor
sbb
sub
mov
pop
stc
sbb
out
and
in
aad
adc
fdivrs
inc
rcrl
stos
add
aas
cmp
xchg
js
cmp
xchg
lahf
dec
mov
lret
mov
pop
push
adc
test
jg
add
mov
or
fsubr
repnz
scas
jno
pop
shrb
or
dec
sbb
xchg
imul
ret
insl
add
inc
xor
xor
or
outsb
fisttpl
adc
notl
dec
call
xchg
test
lods
adcl
mov
lods
loop
ja
dec
orl
and
arpl
jnp
aam
fstpt
dec
lods
das
loop
dec
dec
sub
sbb
jge
pop
inc
fsts
jge
or
dec
mov
scas
mov
push
add
dec
aas
test
in
push
sub
hlt
mov
ja
loopne
mulb
ljmp
popf
xchg
nop
imul
adc
push
fcoml
mov
out
jno
xor
mov
fcoms
fsubp
cmp
shll
scas
loope
mov
lods
dec
lds
std
sbb
push
cmp
push
jl
or
rcrl
add
add
mov
jns
xchg
cmp
and
push
loop
xlat
pop
popl
jmp
lds
int3
push
std
fimull
int
fidivrs
add
or
mov
lret
push
mov
inc
push
notl
jo
ljmp
mov
xchg
push
cmp
mov
bound
das
aam
jb,pt
cld
movsl
mov
dec
adc
insl
dec
adc
mov
fwait
cld
jmp
out
pop
inc
test
cli
in
sbb
outsb
out
mov
inc
add
and
stos
lods
push
pop
xchg
jae
lahf
cmp
fsubl
notl
mov
cmp
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
sbb
imul
js
mov
cmp
jle
jns
loop
lret
scas
ja
or
sub
push
bound
mov
xor
fcompl
add
popl
mov
adcb
fistl
mov
out
mov
shrb
test
xchg
or
popf
clc
jno
pop
inc
clc
mov
xchg
fdivp
popa
add
clc
mov
jo
ss
pcmpeqb
or
xchg
jl
out
add
nop
imul
lods
daa
push
aas
mov
out
push
sti
les
mov
ds
mov
jmp
xchg
lcall
shll
lods
aam
mov
std
dec
mov
cwtl
adc
inc
pop
mov
mov
fisttpll
bound
fiadds
xchg
adc
pop
pop
sqrtps
aas
cmp
sarl
into
mov
push
pop
jl
rcl
les
sub
scas
jg
adc
jecxz
or
cs
in
jle
jge
or
outsb
jle
rorl
mov
sbb
fwait
sbb
ljmp
or
lds
das
mov
push
out
pusha
mov
test
add
dec
cmpsb
push
push
or
inc
push
dec
and
xlat
add
movsb
add
ja,pt
inc
mov
sbb
es
dec
aas
fs
adc
dec
cmpsl
outsb
stos
cmp
add
and
push
je
rolb
push
mov
cli
dec
mov
mov
sti
sub
or
sub
aas
mov
cmp
in
jl
dec
mov
jno
inc
push
mov
add
adc
and
xor
mov
jno
pusha
not
lock
and
sbb
dec
push
xlat
cmpsl
mov
movaps
pop
mov
test
jmp
xchg
pop
push
dec
cmc
aaa
mov
out
sbb
pop
xchg
xor
mov
dec
arpl
sbb
mov
test
scas
mov
jge
inc
cli
mov
loopne
loope
push
inc
cmp
mov
inc
mov
andnps
xchg
add
add
adc
add
cld
xor
xor
jmp
aas
lret
iret
aad
jo
lods
negl
lock
adc
js
jle
js
dec
mov
or
sbb
lods
add
sahf
mov
sarl
out
ja
out
add
sub
fnstsw
fsubp
jbe
mov
jae
iret
int3
sub
cmp
subl
jnp
push
inc
adc
call
jle
or
data16
dec
dec
inc
in
mov
push
or
cmp
ds
bound
add
push
xchg
loope
leave
jl
sbb
add
aam
subb
jg
imul
fisubrl
lods
adc
jecxz
adc
aaa
std
mov
dec
mov
or
mov
xorb
in
sbb
jp
cmpsb
xchg
dec
add
mov
lret
jge
jne
mov
bnd
aam
and
movsl
push
xchg
lds
pop
loop
test
fidivs
jnp
repnz
mov
adc
push
cli
ljmp
xchg
rcll
sbb
shrl
push
mov
or
jecxz
dec
push
lret
add
mov
ljmp
push
addb
shlb
lods
ss
adc
rorl
scas
jbe
shll
jmp
outsb
ret
outsl
xor
dec
movsb
daa
fisubrl
inc
aad
movsl
mov
dec
add
xchg
movb
mov
sub
cmpb
mov
pop
mov
sub
or
cmpsl
pusha
push
mov
and
fnstenv
push
ss
lret
inc
hlt
movsl
sbb
push
add
hlt
push
add
addl
jle
mov
xor
lea
inc
movsb
lcall
test
inc
xchg
dec
jnp
movsb
in
into
js
jo
cltd
dec
incl
sbbb
push
push
cli
jo
mov
dec
fsub
pop
lret
jecxz
inc
lock
jmp
pushf
and
push
mov
das
pop
cld
pop
and
cmc
and
push
mov
adc
adc
mov
das
inc
dec
or
popa
ret
cmp
push
pop
xchg
aaa
pop
rcrl
pop
mov
adc
xchg
das
mov
fldcw
sub
movsb
add
jmp
ficomps
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
nop
stos
das
clc
push
js
in
js
subl
ret
xchg
sub
cs
lock
sub
test
adcl
loope
cld
sub
add
dec
aad
jno
mov
jge
push
aam
jge
mov
jo
jb
jnp
cld
repz
add
jp
inc
push
pop
aas
shlb
fdivl
sbb
scas
jne
or
pop
dec
lcall
jnp
faddl
loopne
pop
mov
popa
xlat
adc
sbb
xchg
loopne
add
repnz
sahf
jecxz
xchg
icebp
icebp
flds
out
insl
cmpsl
out
test
sub
aaa
jl
lahf
sahf
stos
pop
dec
bound
icebp
rolb
clc
into
in
shl
push
movsl
imull
and
mov
gs
outsb
mov
in
mov
xor
out
icebp
add
adc
test
in
sub
aas
addr16
xor
into
or
shrb
in
push
inc
dec
push
sahf
sbb
and
add
xchg
repz
xchg
add
pop
cmpsb
addr16
outsl
outsl
sub
repnz
lds
in
and
mov
dec
lret
mov
int
ret
stc
shr
flds
stc
pop
mov
mov
mov
enter
stos
inc
jae
es
cmpsb
addl
sbb
test
xor
jbe
les
hlt
lods
jmp
enterw
addr16
cwtl
test
loope
adcb
movsl
xor
and
push
jbe
insl
push
orb
js
loope
jmp
cmpsb
inc
xlat
icebp
in
scas
hlt
movsb
fsubrl
leave
sarl
pop
jno
out
call
xchg
dec
mov
push
xor
xchg
xor
push
movsb
sbb
mov
or
push
xor
push
ljmp
rorb
lods
add
cmpsb
dec
aaa
pop
ds
ss
xchg
imul
in
cmc
subb
pop
xchg
cmpsl
cmpsl
into
mov
mov
div
scas
movsl
dec
pop
push
leave
xor
in
mov
aad
add
decb
shl
inc
loopne
in
mov
imul
jg
stc
pop
inc
jne
outsl
push
sti
or
cld
cs
or
ficomps
stc
jmp
int3
into
ror
rcl
into
jbe
inc
data16
jae
gs
js
in
js
repnz
adc
xor
sarb
imull
loop
jecxz
inc
pop
int
push
sar
xlat
push
out
roll
cli
cmp
adc
mov
adc
sbb
pop
jg
imul
stos
inc
inc
stc
dec
inc
fadds
orb
aaa
scas
push
mov
das
test
iret
and
push
xchg
and
jle
ror
mov
jbe
scas
xchg
push
adcb
xchg
int3
fidivrs
adc
test
int
aad
sbbl
and
inc
clc
mov
xchg
fxch
loop
jno
push
push
daa
jne
jl
and
icebp
ljmp
aaa
out
inc
je
fidivrs
inc
sti
mov
pusha
shll
inc
pop
jle
inc
sub
mov
jmp
jp
jmp
divb
push
xchg
jno
xor
ljmp
dec
ret
fstps
xchg
imul
cli
xchg
push
mov
or
or
jbe
clc
cmpsb
in
or
pop
sarb
mov
lea
aas
mov
aam
leave
xchg
xor
and
fldt
mov
mov
xorb
jp
inc
cli
cltd
sub
call
std
pop
movsl
and
xchg
rorb
adc
sti
mov
mov
inc
mov
and
inc
call
sub
movsb
rcrl
clc
arpl
sarl
enter
xchg
sbb
push
push
cmpsb
mov
movsl
xor
mul
inc
in
movsb
rep
rorb
shlb
dec
xchg
aaa
push
out
adcb
or
or
jno
sub
mov
mov
das
test
subl
and
in
jg
dec
std
ja
loopne
dec
cmc
loope
and
add
mov
add
cld
pushf
cli
cli
and
out
jnp
aas
inc
aaa
xchg
xlat
or
insb
xchg
lods
push
adc
inc
jp
scas
jle
fs
push
cs
xchg
int
mov
sbb
jecxz
mov
xor
fbld
cmp
xlat
shlb
and
btr
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
pop
inc
call
pop
js
in
js
dec
jp
aaa
sbb
cmp
call
pop
stos
aaa
ret
call
popf
aad
popf
jne
inc
and
sbb
jns
inc
jno
lods
or
aam
xchg
sub
mov
mov
scas
push
in
out
pop
or
je
mov
pop
leave
jg
pop
pop
mov
xchg
daa
stos
inc
sbb
lret
dec
push
lret
lcall
outsb
cmp
jae
jnp
popf
cwtl
add
daa
lahf
out
push
out
call
adc
mov
movsl
fdivrs
pop
and
jge
pop
or
in
ja,pn
dec
scas
cmp
pop
ret
sbb
arpl
sti
outsb
lods
cli
ljmp
stos
and
dec
in
inc
cltd
loop
pop
shrb
cmpsl
xchg
das
mov
xor
dec
and
xlat
hlt
aad
adc
int3
outsl
xchg
idivl
shrb
pushw
les
pop
loope
aad
mov
das
xchg
adc
fdivrs
pop
lods
push
push
push
adcl
test
pop
ficompl
add
cmp
stc
stos
cld
add
push
scas
push
mov
pop
gs
mov
orb
mov
adc
and
negl
orb
icebp
cld
je
outsb
sub
out
int3
inc
mulb
sub
in
xor
lcall
xchg
mov
and
mov
and
out
ja
pop
aas
mov
mov
cmpsl
adc
call
loopne
hlt
test
lea
pop
push
xor
fildl
sub
adc
sbb
hlt
and
xchg
pop
cs
sub
imulb
sbb
aaa
mov
or
js
or
je
adc
popl
mov
inc
jae
push
js
pop
cmp
dec
mov
fisttps
test
mov
neg
jnp
xchg
ror
mov
test
pop
leave
pop
mov
pop
aas
int3
mov
fisttps
je
lods
fldl
popa
mov
test
and
adc
adc
test
sub
loop
mov
in
sub
daa
inc
mov
and
aas
repnz
inc
stc
inc
jle
cmp
pop
lock
cmp
ja
jmp
rol
xor
popf
clc
dec
lcall
js
out
and
iret
push
lret
lods
add
aad
push
sub
lds
push
xchg
xor
inc
popf
or
repz
jne
lret
std
jl
mov
andl
lock
leave
dec
ja
xlat
push
out
popf
inc
push
and
rorb
push
inc
das
xorb
push
mov
out
in
iret
hlt
cmpsb
icebp
ja
xchg
or
int3
nop
jecxz
lahf
iret
xlat
aas
sub
rcl
sarl
test
xchg
lods
adc
mov
jmp
cmp
ret
pop
pop
out
push
lahf
jp
lods
cmp
push
xchg
movb
cmp
es
add
mov
aad
jnp
mov
add
call
out
or
jl
test
adc
jns
shll
push
push
test
inc
inc
loope
adc
and
dec
lock
in
mov
jle
dec
jb
outsl
mov
shlb
mov
dec
test
mov
into
out
push
pop
clc
jnp
dec
int
fwait
or
sbb
mov
cmpsl
xor
in
pop
mov
out
scas
lock
push
jg
dec
xchg
or
aaa
aam
and
xor
mul
hlt
notl
dec
out
push
push
jne
sub
pop
scas
ret
jl
daa
mov
xchg
push
inc
sbb
jecxz
add
cmp
scas
shlb
movsl
mull
loopne
cmc
push
xchg
rolb
sarb
pop
mov
out
adc
cmp
test
shll
adc
js
lods
shrb
push
push
daa
sti
mov
aam
xor
cmp
or
lcall
dec
cmp
andb
incb
les
xchg
repz
jecxz
into
int
jb
dec
fsts
add
jp
push
aas
movsb
mov
ficomps
sbbb
adc
push
xchg
out
in
shll
stc
gs
pop
xor
mov
xlat
add
lods
call
add
test
mov
or
pop
in
imul
imull
dec
in
insl
testl
das
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
or
fstpt
js
in
js
call
orb
ja
pop
dec
sbb
xchg
push
mov
sbb
mov
loope
lret
popa
mov
jmp
rorl
jmp
adc
mov
and
test
mov
dec
inc
xchg
rol
cli
outsl
into
dec
arpl
sahf
rcrl
fstl
aad
lods
mov
cmc
adc
iret
xchg
inc
xchg
mov
mov
test
lods
or
and
or
mov
add
sub
sarl
fists
or
nop
xchg
and
adc
xor
and
cwtl
into
inc
sub
sbb
repnz
pop
fadd
push
imul
cmpsb
mov
cmp
inc
mov
mov
add
sbb
les
push
js
repz
push
jp
or
jle
push
mov
daa
pop
loop
mov
adc
popf
mov
call
mov
fidivs
roll
jl
xchg
mov
mov
push
mov
loope
mov
les
or
adc
sahf
pop
mov
pop
jne
cmpsl
mov
jmp
and
test
add
add
or
hlt
aad
addr16
loop
xor
fldenv
in
ret
jcxz
out
mov
dec
pop
inc
sbb
xchg
call
in
add
and
out
or
pop
imul
int
jnp
iret
std
leave
call
mov
test
jp
pop
loope
xor
or
outsl
pop
popa
push
push
arpl
cmpsl
jne
jle
in
sub
fdivp
into
fs
sbb
push
mov
fs
clc
insb
push
adc
stos
or
inc
ljmp
decb
fcmovb
gs
pusha
movsl
mov
inc
jmp
call
into
call
xor
popa
testb
add
pop
or
jecxz
rclb
add
pop
mov
or
sbb
sbb
in
hlt
push
outsb
cmp
jmp
xchg
jmp
inc
int
cmpl
stos
and
pop
dec
ret
mov
mov
mov
daa
loope
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
cs
jge
pusha
js
in
js
and
or
push
insb
cld
ja
add
idivl
jg
lock
jnp
ret
mov
mov
sub
adc
and
int
aas
and
std
in
and
inc
outsw
xlat
out
loope
mov
in
cmc
loopne
out
jecxz
stos
jno
sbb
fldenv
and
inc
jmp
fisubl
cmp
insb
or
push
xor
mov
outsb
push
add
inc
cld
sub
sub
pushf
dec
sub
xchg
mov
mov
adc
and
cmp
mov
sti
cmc
push
aaa
and
hlt
fisubrl
dec
pop
cmc
sub
xchg
xchg
int
daa
sbb
sti
inc
xchg
push
jg
test
mov
xchg
push
sbb
inc
mov
shl
xor
add
xor
dec
jg
sub
push
enter
aas
mov
cmp
mov
sub
jge
repz
out
shll
push
inc
or
xlat
jo
mov
mov
push
aad
pop
lock
jb
stos
jle
data16
ljmp
test
push
jp
int
insl
test
jnp
shl
inc
inc
jnp
lcall
and
and
fdivrl
shrl
xor
mov
movsb
movsl
mov
xor
iret
add
push
dec
lret
outsl
inc
les
push
xor
out
sbbl
lea
aad
xor
and
inc
outsl
lcall
pop
data16
mov
enter
hlt
and
les
test
inc
dec
daa
jge
in
mov
test
jl
cwtl
xchg
lret
popl
insl
fsts
jg
outsb
lret
cmp
mov
mov
xchg
insb
and
insb
dec
sub
addr16
into
das
or
mov
out
aad
addr16
pop
cli
sbb
mov
je
iret
fisttps
int
xor
icebp
stos
movsl
add
test
push
fwait
pop
imul
mov
lret
jmp
in
push
jae
cmp
sahf
into
sbb
push
test
mov
sbbl
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
lcall
in
js
push
and
sbb
and
cmp
mov
pop
out
mov
shrl
jo
add
xorb
inc
push
cmp
pop
in
cmp
in
dec
add
sbb
jecxz
lods
ret
jae
rcl
test
push
in
jns
inc
call
pushf
mov
lods
into
cmp
stos
inc
je
in
fisubl
ss
dec
andl
je
mov
js
xchg
sbb
adc
push
push
inc
call
mov
pushf
fwait
clc
fists
lret
aas
cmp
std
in
call
add
xorb
adc
dec
xchg
addr16
mov
mov
jle
imul
cwtl
add
dec
mov
inc
xchg
shrb
mov
cltd
or
fcompl
lods
lock
inc
sbb
adc
inc
or
repnz
leave
mov
ja
ss
rcll
rcr
cmpsb
lcall
cmp
adc
xchg
or
mov
pop
arpl
jbe
js
xchg
pop
in
insb
pop
aas
sub
mov
lock
sbb
rcll
mov
testb
faddl
lods
mov
inc
in
xchg
sub
outsl
jo
mov
arpl
subl
movsb
daa
push
cmp
sarb
stc
xchg
xchg
mov
into
pop
sub
dec
push
in
fsubl
stos
insl
out
cs
lds
lcall
add
xor
inc
hlt
pushf
mov
push
es
mov
iret
sar
push
inc
dec
mov
cli
fistl
hlt
outsb
or
add
fbld
fsubrs
repnz
jl
xlat
sar
push
cli
inc
jbe
out
dec
adc
sub
icebp
mov
cmpsl
pop
shrb
cmp
cmp
icebp
ret
call
outsb
repz
inc
mov
jbe
inc
into
hlt
scas
shrl
xchg
xor
cmpsb
lret
dec
fdivs
xchg
nop
jnp
test
outsl
mov
mov
gs
fcmovnb
pushf
push
jecxz
imul
arpl
lahf
push
jb
scas
cli
movb
cmc
and
sbb
push
lcall
pushf
or
les
jp
mov
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
into
shll
imul
jle
js
out
pop
push
mov
xchg
lods
lock
mov
push
mov
outsb
orl
cmp
or
and
in
stc
push
insl
mov
push
dec
data16
mov
mov
jno
mov
sbb
add
jecxz
xchg
mov
add
subb
jmp
sub
mov
xor
add
test
xchg
into
rorl
push
aas
das
pushf
mov
or
push
push
test
adc
and
ret
push
stos
jno
and
decb
and
aas
sub
sbb
insl
lret
pop
cltd
jne
jne
out
push
loopne
shll
mov
les
lds
mov
push
push
popf
in
mov
add
repz
fsubrp
jnp
inc
inc
pushf
stos
mov
daa
mov
jae
enter
push
cmc
jnp
pop
incl
push
aas
enter
mov
pusha
ficoms
ss
xor
mov
push
lods
out
lret
xor
js
push
sbb
mov
mov
cli
insb
arpl
insb
repz
mov
and
cmpsb
lret
cmpl
mov
inc
stos
das
jo
mov
mov
push
push
hlt
and
adc
lock
jbe
fnstsw
adc
stos
andb
xchg
and
sub
les
aad
sahf
sub
iret
daa
pushf
sbb
pop
mov
mov
push
lret
pushf
ffreep
ret
out
sbb
cmp
cmp
and
xorb
adc
lock
inc
mov
mov
fnsave
daa
imul
stc
loope
pop
xchg
dec
fiaddl
xchg
push
add
rorb
mov
and
movsb
test
nop
jl
fisubs
xchg
rolb
in
adc
jns
rorb
push
dec
mov
in
jbe
mov
imul
jge
subb
in
dec
or
sbb
pop
stc
mov
xchg
data16
fstl
pop
imul
fidivl
or
out
frstor
test
mov
mov
out
lods
scas
mov
mov
rcll
push
mov
mov
mov
das
push
jne
dec
idivl
push
pop
cmp
pop
push
jb
xchg
push
stc
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
fxch
mov
js
jle
js
sub
sub
jecxz
add
mov
and
sub
jo
into
inc
inc
dec
ret
add
or
mov
fiaddl
sbbb
in
dec
sub
jecxz
ljmp
test
ds
test
sub
in
inc
xchg
cmp
jmp
es
mov
jae
pusha
clc
js
stos
dec
scas
shrl
ret
inc
pushf
ljmp
mov
dec
movl
add
mov
cmp
xchg
es
mov
sarl
cmp
mov
pop
inc
icebp
mov
cmc
push
inc
add
adc
orl
fbstp
ret
push
cld
call
push
push
mov
je
and
xor
es
or
sub
add
inc
pop
or
and
sub
call
mov
les
xor
call
push
sarb
aad
mov
in
pop
mov
dec
test
sub
mov
jmp
stos
lret
ret
xor
adc
push
shl
add
sti
xor
add
xchg
rol
popf
sub
daa
lret
xchg
adc
cli
pop
rcrl
mov
push
test
pop
dec
scas
pop
imul
jge
in
lcall
mov
leave
arpl
popa
push
iret
or
testl
ds
sub
mov
cmp
jge
rclb
call
jne
call
pop
mov
sbb
out
roll
push
mov
icebp
in
cmp
daa
mov
out
adc
or
push
ljmp
inc
pop
shl
jecxz
fiadds
push
cmp
inc
in
test
testl
mov
cmpsl
pop
sbb
mov
std
lods
movsl
mov
cmp
xchg
dec
loopne
dec
cmp
cli
inc
scas
pop
ljmp
mov
stc
sub
and
insl
mov
iret
popa
jecxz
testl
bound
adc
mov
pop
es
sbb
fcmovb
jl
or
pop
mov
jae
adcb
out
or
mov
or
push
bound
in
addl
add
ret
rol
fcmovnu
mov
stos
aas
mov
in
js
popa
in
mov
jb
jmp
add
sar
call
jg
and
in
es
sbb
cmp
mov
loop
insl
scas
xor
in
mov
aas
lods
fists
xor
sbb
jnp
outsl
mov
push
pop
dec
pushf
lret
in
push
shlb
ret
pop
lods
adc
push
mov
call
xchg
xor
fidivrl
or
cwtl
jge
sbb
adc
mov
fisttps
ja
stos
adc
lcall
cmpsl
movsb
lret
call
pushf
cwtl
clc
push
stos
inc
adc
and
outsb
movsl
imul
cmpsb
aas
in
sub
pop
ficoml
gs
ret
pop
pop
lcall
cmpsl
sub
sarb
pop
add
xchg
imul
mov
add
jecxz
cmp
rcrb
pop
repz
nop
mov
shl
or
call
push
push
fdivl
add
lods
repnz
cmpsb
push
sub
jp
jno
ds
xorl
push
std
mov
push
xor
movl
sarl
xchg
or
rorb
or
xchg
lret
xchg
cmpl
sub
scas
sbb
inc
push
movl
stc
jno
push
ds
add
test
or
xorb
cmp
daa
test
cmp
xchg
sbb
rorl
cmp
mov
nop
out
inc
cmpsb
fistpl
dec
and
sub
pop
test
mov
dec
push
scas
mov
dec
movsl
xchg
pop
mov
das
sub
push
sti
xor
insl
jl
jne
sbb
gs
xchg
popa
mov
ljmp
ret
mov
push
adc
push
and
push
cwtl
pushf
push
xchg
mov
add
xlat
mov
call
out
inc
sbb
frstor
mov
xchg
inc
out
push
lds
add
push
std
aad
pop
xlat
out
add
fmuls
xor
jmp
xchg
cmpsl
repnz
pop
dec
xchg
push
xchg
mov
addr16
xor
sub
xor
cmpsb
ja
mov
add
inc
hlt
cmp
mov
jmp
int
ror
fcmove
leave
sub
or
js
in
js
out
sub
test
add
inc
stos
mov
flds
add
adc
out
push
pop
call
int
or
inc
pop
or
push
lock
jno
inc
mov
pusha
imul
jb
jmp
jmp
out
jmp
addr16
push
sbbl
inc
ret
inc
push
add
xor
xor
nop
dec
xchg
dec
mov
adc
test
push
push
lea
fdivrs
iret
dec
dec
shlb
pop
fistps
in
push
cmpsb
mov
cmpsl
adcb
sahf
jl
mov
mov
cli
adc
loope
cli
mov
jle
cltd
out
aaa
movsb
stos
jo
adc
add
push
mov
test
fildll
xor
fisubrl
fsubrs
sbb
dec
mov
mov
push
js
rcr
outsb
adcb
push
cli
stc
std
ret
xchg
test
test
hlt
dec
push
dec
xor
or
outsl
adc
inc
ds
add
inc
cltd
fisubs
and
popf
mov
not
mov
pop
daa
loopne
lahf
push
imul
push
scas
sti
mov
mov
adc
xchg
inc
push
mov
add
sti
lock
shlb
outsl
loope
scas
dec
fs
test
ljmp
xchg
in
mov
test
xchg
xchg
lds
cmp
mov
bound
sbb
lcall
or
push
cli
xchg
mov
mov
outsl
xor
test
sub
sarb
mov
adc
sbb
push
test
ret
clc
push
cli
jle
mov
das
movsl
xchg
push
pusha
cmp
fidivrl
cs
in
int
sub
dec
outsl
andl
dec
loope
pop
sar
fwait
out
stos
stos
xchg
cmp
ret
jnp
inc
iret
imul
rclb
dec
mov
push
mov
pop
fbld
push
sahf
cs
out
sbb
inc
and
mov
lret
shrb
dec
sbb
stos
outsb
pop
bound
xor
dec
outsb
imul
sldt
mov
xor
add
jmp
ret
xlat
data16
pop
inc
clc
pop
jno
js
jle
js
rcl
sbb
cmpsl
dec
xor
jl
test
rcrl
inc
out
mov
push
adc
jge
lods
xor
sub
jmp
ds
fs
inc
push
sub
inc
sbb
ficoml
mov
add
bound
xor
and
push
and
notl
lds
jge
mov
inc
andl
push
and
ret
pushf
fdivrp
aam
lds
cmp
lods
insl
loope
loope
test
mov
mov
or
dec
adc
dec
pop
mov
or
stos
cmpsb
shlb
sarb
dec
mov
push
mov
dec
and
sbb
inc
jg
push
mov
push
lock
test
movd
mov
and
rol
icebp
fwait
ljmp
adc
xchg
scas
clts
adc
mov
fisubl
imull
call
and
pop
les
je
push
xorb
pop
arpl
and
cmp
xor
ret
pop
inc
not
pop
mov
insb
ljmp
cli
adc
cwtl
xchg
pop
inc
jg
orl
icebp
push
push
push
xchg
sbb
jmp
cmc
aaa
scas
mov
and
arpl
cmp
pushf
pusha
stos
loope
dec
aam
and
ljmp
rep
push
pop
sbb
mov
and
sub
out
dec
or
or
jno
loope
fwait
in
cmp
fcoml
shlb
cmp
cmpsl
jmp
clc
jb
sbb
aas
aaa
jae
shrl
dec
jge
pop
ret
lods
rorb
xor
mov
mov
mov
sub
adc
in
shrb
dec
hlt
andb
int
add
insb
push
xchg
pop
dec
add
xor
ds
cmp
lret
dec
xchg
sbb
push
daa
mov
test
mov
and
pop
es
add
shl
add
pop
mov
rcll
adcl
cli
mov
imul
mov
ficomps
call
mov
mov
jmp
int
xlat
enter
shll
std
xchg
ja
js
jle
js
mov
das
xchg
mov
jnp
in
mov
sti
aam
jns
dec
les
enter
lea
jmp
mov
push
call
subb
jp
and
lea
inc
out
push
arpl
sti
dec
adc
stc
loope
imul
fnstsw
in
push
in
lds
addr16
sub
mov
test
mov
push
pop
push
pop
fildll
iret
stos
xchg
push
cli
cwtl
daa
pop
sub
scas
sbb
jp
addr16
cmp
add
push
pop
add
popf
je
cwtl
icebp
fs
insl
popf
ret
mov
adc
push
dec
iret
xchg
xor
xor
cmp
xchg
inc
lcall
cmp
push
movsl
add
int3
push
call
dec
pop
data16
inc
push
jg
js
shl
push
mov
pop
inc
icebp
jle
cmpsb
xchg
sti
addr16
addl
ret
xchg
dec
lock
stc
cltd
lods
jns
icebp
sbbb
fbstp
cmp
and
inc
adc
and
imul
pop
lock
test
or
jl
and
hlt
leave
mov
add
or
and
or
adc
mov
fnsave
ret
cmovg
leave
scas
call
cmp
add
cmp
rcrl
push
xor
inc
mov
mov
mov
push
test
xchg
cmp
inc
cwtl
jbe
mov
das
cli
jae
push
mov
loope
jmp
inc
repnz
pop
dec
cs
ljmp
mov
jg
repnz
adc
push
out
es
push
movsb
jae
inc
jns
xor
lfs
insb
data16
gs
ret
push
stos
cltd
lahf
sti
mov
xor
mov
xchg
shlb
cmp
ret
aaa
outsb
pop
jae
sub
mov
add
stos
sbb
mov
pop
pop
nop
repz
xchg
pusha
adc
xchg
dec
lcall
rol
rorl
js
jae
adc
adc
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
enter
jne
js
jle
js
push
cmp
jmp
xchg
aad
adcb
out
addr16
adc
ret
in
test
loopne
pop
outsb
daa
and
xchg
sub
int
clc
pop
scas
inc
xchg
xchg
mull
cld
mov
or
mov
out
jae
xchg
imulb
xlat
scas
push
sbb
cld
sub
lret
fbld
cli
mov
mov
push
mov
scas
pop
inc
adc
lret
mov
cmpsb
enter
xor
inc
stc
lret
pusha
sub
data16
inc
fidivl
adc
cltd
test
cmp
adc
mov
xor
sti
mov
divl
pop
bound
out
dec
mov
arpl
fld
sbb
jae
in
jl
add
pop
divb
out
ficompl
sbb
fmull
in
add
test
arpl
mov
xlat
push
sahf
jns
movsl
push
outsl
popa
xchg
mov
push
pop
sbb
je
jmp
cs
push
cld
mov
int
sub
and
imulb
shlb
out
hlt
add
test
sub
incl
je
adc
lahf
mov
and
push
xor
leave
daa
push
fldt
cmp
mov
clc
ja
xor
sahf
cli
jnp
sub
pop
sub
std
int3
mov
push
and
pop
loope
packssdw
test
test
xor
std
sarl
xchg
push
adc
aas
mov
add
mov
imul
cld
push
idivb
xchg
int
jno
xchg
out
outsl
sti
add
xchg
andl
cmpsb
cmc
pushf
xor
adc
xor
cltd
fwait
ljmp
icebp
cmp
in
pop
xchg
sti
xlat
nop
js
adc
sub
outsl
in
in
adc
cmp
repz
push
movsl
cmp
mov
sub
cmp
icebp
pcmpgtb
and
lea
jmp
mov
mov
scas
pushf
inc
xchg
out
bound
cmp
pop
fildll
inc
testl
mov
mov
scas
leave
hlt
jbe
decl
inc
inc
add
or
and
mov
aam
xchg
rcll
lds
hlt
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
aam
push
pushf
jp
js
jle
js
fwait
sti
inc
int
iret
pop
std
fnstcw
sbb
adc
pop
imul
into
add
pop
push
mov
fwait
in
bound
mov
push
cmc
scas
in
xchg
fdivl
in
lods
clc
mov
gs
addb
dec
int
mov
mov
cld
movswl
sahf
dec
mov
out
sbb
nop
adc
insb
jno
mov
ret
mov
imul
gs
pop
les
or
add
sub
and
cld
dec
movsbl
xor
lret
jle
push
call
xchg
push
test
lea
sbb
mov
sbb
repnz
mov
sbb
mov
outsb
sub
inc
push
inc
aad
popl
sti
inc
xor
xchg
or
in
dec
test
fstpt
imul
test
sub
sub
das
hlt
mov
xor
sub
pop
fistps
mov
xchg
and
jnp
fimuls
aaa
mov
push
ss
into
cwtl
sbb
lods
jns
shll
jo
xchg
fdivs
iret
test
sub
mov
push
lcall
pandn
cmc
inc
sbb
xchg
into
stc
lcall
pop
aam
ret
lret
in
mov
enter
jl
push
pop
cwtl
leave
jo
stc
and
jns
add
iret
jnp
xor
pop
sub
mov
mov
adc
or
out
scas
in
stc
lods
lret
xchg
lea
or
adc
mov
jnp
jno
jb
push
in
pushl
inc
ret
pop
xor
and
push
xorb
jns
rclb
stos
loopne
daa
pusha
push
dec
in
sbb
mov
xor
scas
jl
inc
fstps
test
mov
jno
fs
inc
mov
or
lods
cwtl
pop
pop
jp
pop
pop
lods
cmpsb
pop
in
mov
push
cmc
inc
jnp
jns
xor
cwtl
lods
cmp
xchg
dec
adc
adc
hlt
ds
rcl
repnz
xor
pop
dec
pop
cmp
leave
mov
xor
mov
cmpsb
pop
test
test
in
ljmp
sub
mov
mov
mov
jmp
enter
cld
imul
pop
inc
js
js
jle
js
adc
arpl
push
xor
or
cmp
push
inc
mov
fstpl
sbb
and
push
add
inc
jb
insb
pop
inc
and
xor
add
and
es
ret
xlat
shrb
pop
inc
lds
lock
lods
pusha
or
or
insl
xchg
repz
add
lods
inc
and
test
xor
mov
das
mov
lea
lahf
cld
daa
dec
mov
fiaddl
pushf
orl
cs
fwait
lods
push
sbb
lcall
out
mov
cli
ret
hlt
mov
jnp
mov
fcmovu
sahf
or
dec
sub
jno
push
mov
sbb
aaa
cmp
inc
pop
les
lret
movsb
hlt
cmp
pop
nop
dec
pop
xor
xchg
cld
xor
push
xchg
jecxz
add
les
xor
lods
filds
add
mov
lret
movsb
xor
cmp
push
enter
pop
jmp
fsubs
in
fdivrl
pop
jmp
in
add
push
cmp
jnp
add
xlat
lea
loope
inc
imul
fisttpl
stos
sbb
aaa
movl
enter
daa
data16
jl
sbb
fcmovnbe
or
mov
addr16
jbe
insl
test
jmp
cmp
adc
mov
or
das
gs
popf
cmp
movsl
add
jecxz
daa
aam
xchg
stc
mov
mov
iret
lahf
iret
loopne
inc
test
mov
or
pusha
and
inc
mov
lods
add
sbb
or
fisubrs
faddl
into
ret
adc
repz
ror
sub
xchg
pop
fst
sub
xchg
mov
testl
int3
outsb
aam
jnp
outsb
xchg
arpl
test
fists
jecxz
fstps
adc
push
std
je
mov
sbb
fbld
int
outsl
cmp
fucomi
jnp
test
pusha
fs
mov
pop
aaa
xchg
cld
icebp
negl
mov
lods
mov
inc
and
or
xor
dec
in
fwait
push
daa
rorb
mov
repnz
jmp
mov
mov
lea
hlt
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
adc
jge
js
jle
js
aad
pop
jmp
icebp
aaa
mov
and
bound
and
gs
movl
lds
and
and
out
cmp
pop
jne
call
cmpsb
inc
cltd
stos
stos
orb
jl
sbb
js
enter
loop
sub
mull
lret
imul
and
insl
out
mov
jecxz
sub
xchg
aam
adc
outsl
in
mov
lret
mov
cmp
inc
sti
loopne,pt
xchg
add
fcompl
mov
cmpsb
ror
adc
int
fldlg2
push
out
sub
in
lret
rolb
mov
and
xor
int3
adc
out
enter
test
inc
add
xor
out
mov
aas
or
push
cmpsl
lea
inc
loope
jp
sub
out
out
or
sbb
hlt
xchg
or
sbb
mov
subps
pop
sub
jg
xor
test
inc
stos
xchg
xor
lods
mov
jae
mov
inc
add
mov
sub
sbb
test
movsb
xchg
scas
andb
movb
mov
lods
jmp
inc
cmp
push
into
mov
ss
jne
int3
loopne
mov
popa
inc
push
mov
add
insb
js
in
adc
mov
add
pop
mov
in
push
push
dec
cmp
outsb
test
sub
mov
ja
cmp
push
xchg
push
and
movsl
insl
ljmp
ret
sbb
jns
push
push
jo
jae
cmp
xchg
arpl
sub
int
in
cltd
pusha
and
inc
push
pop
test
iret
push
and
fdivrs
sahf
jg
loope
jp
cmp
mov
insl
xor
iret
push
adc
shll
imul
jle
or
push
push
dec
xlat
sub
ret
aad
pop
ja
sub
cmpsb
clc
int3
je
cmp
pop
dec
shl
and
das
mov
cmpsl
xchg
push
sbb
fstps
inc
cmp
push
sub
rep
jecxz
inc
cmc
mov
out
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
and
add
in
js
les
popf
cmp
inc
icebp
loope
and
repz
ud0
repz
inc
adc
bnd
sub
inc
mov
cmpsl
cmc
jg
lret
push
push
cmp
cmp
stos
dec
adc
rcrb
sti
sbb
fstl
out
push
out
and
dec
loope
sub
jbe
cmp
mov
and
and
int3
jnp
xchg
sbb
negl
xor
cltd
pushl
daa
out
cmc
in
in
mov
stc
ja
mov
ss
int
mov
in
popf
mov
mov
xchg
repnz
jae
push
and
test
test
and
psrld
push
add
mov
ja
cmp
outsb
imul
ds
inc
xor
mov
pop
subl
inc
xchg
lock
adc
nop
insl
mov
mov
adcl
dec
jp
inc
hlt
push
sahf
jmp
and
decb
xchg
or
repz
sar
es
popf
or
cmp
and
out
pop
jae
sti
xchg
aad
xchg
aam
xor
movsb
mov
dec
fdivl
mov
int3
mov
testb
xchg
fnstsw
jbe
jbe
pop
imul
out
inc
fimull
ja
std
pop
or
inc
mov
or
or
push
jns
xchg
push
adc
jno
cmp
xlat
dec
push
popa
stos
pop
out
mov
jb
mov
pop
xchg
inc
and
pop
scas
and
jmp
push
fwait
mov
std
fistl
pop
inc
lcall
push
add
mov
sub
ffreep
mov
dec
les
ljmp
cmp
cli
repz
cmp
push
push
test
push
movsb
jns
cmp
inc
mov
insl
bound
lock
pop
sub
data16
je
and
xlat
mov
orl
inc
xchg
jns
wrmsr
sub
xchg
repz
mov
cld
leave
mov
jge
mov
xor
add
jmp
ror
iret
aam
insl
js
add
sub
add
jg
in
js
ss
inc
das
pop
push
out
pop
pushf
push
mov
pusha
test
mov
inc
repz
mov
fnsave
fs
hlt
jb
fnstcw
lods
cmp
scas
aam
jb
xchg
add
cmp
rorb
outsb
mov
xchg
test
push
fcompl
xorl
push
xchg
or
adcl
in
mov
loope
mov
popa
call
xor
fucomp
add
call
in
and
push
dec
xchg
ret
scas
out
lcall
or
mov
mov
hlt
lods
addr16
mov
mov
outsl
sbb
inc
dec
hlt
arpl
std
dec
mov
push
jne
scas
and
addr16
push
or
jmp
lret
jnp
ret
lahf
mov
jmp
enter
ds
and
lret
iret
pop
inc
jle
cmpsl
sbb
push
adc
push
in
pop
ja
push
pop
decb
in
push
aaa
test
jns
pop
jbe
jns
mov
or
sahf
adc
test
enter
mov
pop
pop
dec
movsl
out
mov
add
jne
lock
movsb
and
lea
xchg
call
ret
cmp
sub
cmp
or
out
pop
mov
mov
into
lea
repz
test
cld
icebp
mov
fisubrs
mov
sub
sub
fwait
push
xchg
nop
jne
aas
jge
add
decl
add
mov
and
pop
lock
in
inc
fcoms
ja
xchg
stos
movsl
scas
out
fdivrs
insl
xor
and
loop
jo
je
cs
mov
pop
pop
rol
xchg
test
fmuls
cmpsl
mov
push
inc
aam
push
idivb
mov
jle
clc
stos
lock
or
push
decb
std
xor
das
pop
das
clc
push
jge
or
mov
pop
call
xor
popf
int3
ljmp
ret
das
test
test
jns
repz
mov
inc
jecxz
jae
in
xor
shlb
lahf
pop
push
std
orl
scas
sti
mov
jmp
rol
leave
rcr
rcr
enter
inc
push
mov
js
jle
js
adc
xchg
div
int3
or
sbb
frstor
fstpt
out
mov
rcr
daa
jmp
jmp
fnstcw
scas
test
add
in
scas
mov
mov
sub
add
lahf
aam
and
idiv
push
jp
enter
sub
jecxz
pop
rorl
or
aad
decb
outsl
mov
das
mov
insb
or
orl
movsb
xchg
bound
and
subl
fsubp
xchg
push
rep
mov
sti
or
mov
sub
movsl
push
pop
pop
hlt
mov
adc
daa
mov
mov
mov
jbe
push
cs
rcr
lods
stos
cli
adc
in
lea
rcrb
stos
shlb
int
sahf
add
sbb
ret
and
je
fldt
popa
setp
in
test
and
jb
xor
cmp
sbb
mov
mov
dec
mov
push
jge
stos
rorl
pushf
jbe
push
dec
adc
outsb
cli
sub
fmull
mov
mov
mov
in
xor
xor
mov
xor
xchg
and
mov
adc
mov
and
sub
jb
sub
xchg
pushf
xchg
fsqrt
lahf
std
sbbb
and
out
loope
fnstsw
jecxz
inc
shl
or
mov
sub
ret
int3
xor
mov
sub
rcll
les
or
push
xor
push
nop
cmp
icebp
sbb
mov
orl
xchg
mov
jnp
rclb
adc
sbb
sub
xchg
pop
push
adc
lods
gs
jae
push
insl
or
dec
cmp
push
adc
cmp
stos
ret
aad
lods
orl
push
sbb
mov
lahf
jle
imul
sbb
mulb
xchg
xchg
adc
into
jb
mov
dec
lahf
and
imul
sbb
jnp
cmc
push
les
sub
adcb
or
mov
push
jae
cmc
ds
jmp
les
int
aam
mov
fistps
js
jle
js
jmp
shlb
outsb
dec
mov
sub
mov
stos
xor
push
imul
inc
jle
int
fldenv
push
mov
or
das
or
push
imul
js
in
sub
push
cmp
shrb
enterw
je
pushf
mull
icebp
fstps
push
xor
daa
pop
push
lret
mov
ss
fbld
cld
or
mov
mov
add
cmpsl
sahf
cmpsl
fisttpll
aam
setge
stos
lea
xchg
int
dec
lock
or
popf
je
cli
xchg
repnz
adc
mov
dec
dec
mov
movsb
lret
in
add
out
jns
lcall
scas
jb
ret
mov
int3
adc
lods
inc
test
lods
jnp
xor
xor
and
xlat
and
and
loopne
jnp
mov
shll
fldt
inc
mov
push
pop
add
aaa
cmp
rolb
mov
push
jge
outsb
ret
dec
mov
mov
adc
and
mov
daa
xchg
es
or
mov
mov
mov
add
mov
repz
pop
push
jecxz
fcomps
pop
adc
push
mov
cld
es
dec
jecxz
jne
jne
call
out
fldl
add
lret
add
pop
int3
push
xor
pushw
mov
loope
push
stc
inc
mov
test
inc
ret
pop
mov
xchg
jbe
jo
xchg
stc
cmp
sub
mov
lret
ljmp
in
mov
cmpsl
dec
dec
or
ljmp
push
imul
test
std
stos
lcall
cwtl
pusha
jo
scas
icebp
push
shl
mov
add
xor
test
push
jne
stos
ljmp
jl
pop
insb
adcl
xlat
xchg
aas
xchg
mov
stc
stc
add
inc
push
or
pop
and
jge
pop
lock
ret
in
or
leave
mov
and
mov
xchg
mov
aam
cltd
mov
fistpl
inc
int
adc
fldcw
lods
xchg
imul
sub
sbb
add
loopne
pushf
outsb
cmp
fnstsw
aam
lahf
xchg
adc
mov
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
or
in
js
sub
addr16
sbb
sbb
mov
out
int3
adc
or
xor
mov
shl
cmp
rcrb
bound
inc
cmpsb
fs
jne
cmp
pop
ja
ljmp
push
loope
mov
jecxz
jmp
pop
mov
ret
pop
fstl
mov
mov
and
or
xor
xlat
mov
sub
sub
sarl
push
ret
ret
jge
das
mov
push
adcb
dec
mov
mov
xchg
into
push
mov
mov
mov
jg
lahf
loopne
fbld
stos
les
mov
mov
add
test
mov
xor
hlt
inc
fisttpl
cmp
stc
mov
xchg
outsl
lret
movl
hlt
mov
pop
pop
pop
xor
and
outsb
and
lods
mov
and
sbb
icebp
lock
stos
cmp
mov
std
push
pop
inc
push
mov
mov
cmpsl
shll
iret
sarl
popf
mov
cltd
dec
cmp
sarl
shlb
out
adc
jmp
pop
adc
jg
imull
ror
sbb
fwait
xchg
in
in
sahf
mov
mov
sub
out
sub
rcrb
cmp
mov
and
and
or
mov
add
inc
pop
movsl
mov
fs
push
mov
fs
pop
jno
fwait
adc
pop
hlt
add
mov
aam
mov
xorb
xor
repz
test
pop
push
mov
add
cmp
adc
push
fdivp
pop
cltd
or
aam
pop
fldl2t
cmp
jno
mov
xchg
push
inc
pop
enter
divl
jmp
sbb
or
fadds
jmp
clc
jnp
push
stos
jg
je
mov
jge
das
mov
sub
dec
push
cmp
fwait
movb
sub
hlt
loope
movsl
xlat
xor
lret
js
mov
imul
mov
jmp
lret
ret
vpand
ret
xorb
scas
movq
jle
js
lock
push
mov
sahf
ds
fbld
sub
outsl
popa
adc
inc
call
lret
mov
fldenv
pop
jb
lea
push
lret
jbe
test
subl
filds
xor
xor
addr16
insb
fcoml
loopne
sub
sarl
sahf
dec
mov
cmp
test
sbb
lcall
pop
mov
jo
dec
sbb
pop
iret
mov
out
mov
xor
mov
jae
sbb
jecxz
xlat
hlt
aaa
or
aam
repz
add
fistl
mov
xchg
cwtl
mov
stos
lea
cmp
sbb
and
mov
sub
loope
add
ss
lret
pop
sub
cwtl
cmp
mov
jmp
jmp
data16
adc
cmpsb
int3
bound
imul
pop
push
loopne
jp
adc
cmp
xor
fidivrs
xchg
iret
mov
adc
fldl
dec
push
out
popf
jg
dec
repnz
fnsave
push
dec
daa
fldcw
add
lea
mov
dec
mov
dec
fsubr
mov
and
mov
ret
bound
insl
push
fisubrl
popa
fwait
sub
rcll
js
out
sub
sahf
mov
in
mov
lahf
out
cmp
sbb
ss
out
mov
push
stos
dec
jle
lock
mulps
jns
or
adc
ficompl
int3
loop
push
cmp
insl
add
mov
dec
ljmp
xchg
sahf
mov
dec
vcvtsi2sdl
sbb
jnp
xchg
pop
nop
repnz
cmp
sbb
shl
dec
popa
or
push
jg
shr
push
cwtl
in
xchg
cld
push
scas
or
lret
mov
and
adc
adc
loop
push
int3
popf
stos
dec
mov
test
fcoms
pop
push
shrb
mov
out
adc
andl
daa
outsb
adc
xchg
mov
xchg
shlb
or
stc
divb
jge
cltd
jns
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
shrl
js
jle
js
fsubrl
cwtl
cmp
sbb
ret
imul
sbb
add
push
mov
push
sbb
cmpl
mov
xlat
jge
xor
xchg
or
lds
pop
xchg
gs
pop
or
sub
je
out
and
push
int
and
dec
xchg
aam
sbb
dec
xor
adc
fwait
imul
mov
addps
fidivs
in
push
mov
add
adc
jno
pop
cmp
jno
imul
out
in
dec
rorb
lcall
mov
andb
aas
pop
mov
cmp
inc
and
xor
outsl
inc
mov
inc
test
cmp
sahf
push
test
je
ja
andb
dec
sbb
lret
divw
push
mov
add
pop
sub
std
data16
pushf
fcmovnbe
es
outsb
int3
xlat
stos
push
out
mov
aaa
shlb
push
int
pop
jl
pop
dec
fisubrs
movsb
sarl
cmp
xchg
nop
adc
xchg
xlat
cmp
in
and
jg
decb
imull
icebp
fucomp
out
mov
ljmp
xchg
push
mov
lock
mov
mov
mov
rcll
dec
xadd
test
sbb
sbb
jle
fnstsw
jge
and
repnz
in
aam
cli
xchg
or
nop
mov
std
cmpsl
inc
out
in
jle
stos
mov
std
imul
out
push
mov
xchg
push
movsl
sbb
dec
loope
repz
iret
jge
mov
inc
fs
mov
inc
jmp
shrb
callw
lahf
insb
shlb
dec
push
push
test
xchg
aad
mov
xchg
inc
imul
fwait
clc
push
lret
or
mov
mov
out
out
mov
pop
ret
ds
popa
xchg
or
stc
dec
cld
out
dec
lods
jno
aam
pop
xchg
jnp
jecxz
scas
rcll
xchg
inc
add
dec
dec
arpl
out
push
and
mov
setbe
xor
add
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
cwtl
stos
or
adcb
js
jle
js
mov
dec
mov
in
lock
cli
mov
jb
loope
cmp
pop
out
ds
es
push
cmp
pop
and
jae
dec
movsl
stos
fildl
lret
and
std
fwait
xor
es
rcr
aam
xor
xlat
add
or
push
loope
subb
out
out
movsl
je
sbb
stos
in
addb
fcoml
rorb
icebp
nop
xchg
and
in
pop
fisttpl
popa
fwait
xchg
ljmp
outsb
push
fsqrt
fs
fwait
or
inc
pop
jns
xchg
fdivs
cmp
cmp
xor
js
sub
push
sahf
mov
jle
sbb
mov
pop
xorw
mov
mov
ret
js
or
sti
daa
xchg
jle
fdiv
jno
outsl
ret
jmp
enter
icebp
cmpl
xchg
loop
gs
xor
jge
fwait
aam
push
sub
dec
push
pusha
xor
dec
gs
sbb
adc
and
pusha
jge
dec
test
repnz
lret
stos
movsl
test
pop
mov
pop
adc
int
fildl
xchg
adc
fsubrs
out
dec
mov
push
sbb
pop
xchg
int3
push
add
or
lret
add
fidivl
iret
jbe
cltd
add
adc
out
lret
push
scas
mov
scas
faddp
imul
cwtl
dec
dec
or
lods
cli
jne
pop
fcmovb
repnz
jl
scas
mov
xchg
pop
jae
jbe
push
mov
aas
push
pop
xlat
push
cmpsl
stc
es
xchg
js
adc
stos
out
movsl
mov
subl
jecxz
mov
bound
jecxz
or
pmaxsw
mov
std
jecxz
add
jo
sub
stc
mov
aad
fsubrl
nop
push
sarl
fldcw
mov
ds
incl
cmp
mov
or
sub
or
or
push
aam
cmpl
sbb
pop
pop
cmp
in
cmpsb
push
fadds
insb
xor
cli
or
xchg
adc
xchg
xlat
dec
mov
lea
data16
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
sub
aas
pop
insl
adc
xchg
jle
js
sub
ret
add
loope
int3
pushf
pop
test
push
mov
xchg
pop
and
test
inc
sbb
pop
repnz
push
sub
push
and
mov
jecxz
xchg
jp
mov
iret
add
popa
add
push
or
cwtl
jmp
rcrl
cld
jne
sbb
aas
inc
clc
data16
int
or
orb
cmp
popa
jmp
xor
into
insl
sub
push
call
aaa
out
mov
loope
icebp
push
fwait
out
loop
ds
dec
ljmp
aam
popf
lock
loopne
movsb
and
xchg
cmpsl
or
dec
mov
test
jae
mov
push
jns
dec
fmuls
shl
dec
and
in
and
jle
call
outsb
rclb
xor
cmp
lods
add
les
orl
mov
mov
iret
mov
cmc
mov
add
xchg
cmp
pop
xchg
cmpsl
jp
jno
call
pop
mov
lcall
lods
push
add
push
jne
ds
or
xchg
and
inc
pop
into
sub
fstl
add
lahf
push
lock
decb
and
pop
or
cltd
shrl
inc
jmp
mov
and
sbb
pop
push
adc
call
leave
dec
inc
mov
xor
lods
push
sbbl
cli
inc
lods
outsb
fisttpll
test
pop
add
outsl
lods
adc
mov
mov
ds
adc
pop
cmp
xchg
sbb
mov
shrl
inc
sub
dec
push
cmp
cltd
mov
ror
loope
clc
mov
aas
scas
sahf
and
jne
fisubs
cmc
ficomps
repnz
fldt
or
and
and
jo
shrl
mov
aas
stos
dec
xchg
cld
push
jb
movl
cmp
sbb
xchg
jg
fld
add
jp
pop
mov
mov
lods
adc
call
sub
aas
aad
and
test
cld
in
mov
pusha
mov
imul
sbb
ja
in
stos
jg
fdivr
adcl
lods
cltd
mov
std
add
xor
and
push
adc
add
inc
sbb
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
jb
loopne
adc
js
dec
or
rclb
test
cs
addb
loopne
leave
mov
cwtl
jecxz
jle
mov
jb
add
cmc
xor
clc
sahf
xchg
inc
ret
jg
insb
stc
call
aas
cmp
push
loop
inc
mov
lcall
jnp
sub
adc
sub
cwtl
sbb
leave
outsb
xchg
arpl
pop
and
sahf
add
inc
or
inc
xchg
jmp
int3
nop
mov
cltd
cmpsl
mov
or
fs
repz
sub
push
lds
jne
test
mov
xor
xchg
shrb
outsl
pop
xchg
aaa
push
sbb
cmp
fwait
push
mov
movsb
add
std
adc
ret
and
push
in
pop
push
movsb
inc
arpl
push
testb
out
add
cmpl
popa
aad
outsb
sti
test
jg
lods
pop
pushl
in
les
jl
cmp
adc
movb
push
pop
cli
aas
add
fwait
mov
bound
mov
out
xor
xor
sbb
pop
adc
inc
stos
std
lcall
andl
addb
sub
mov
arpl
mov
mov
stos
cmc
lock
int
or
adcb
and
add
scas
xchg
or
test
cmpsl
mov
sahf
pushf
outsl
inc
sub
cmp
cmp
push
insb
movb
pop
jbe
xor
inc
movsl
cmp
jg
push
dec
mov
sbb
cmpsb
enter
in
add
jmp
scas
xor
sarb
in
notl
fdivrp
in
mov
fdivrp
test
sbb
insl
loopne
cmpl
sub
movsl
sbb
push
sahf
in
mov
in
sub
jo
push
call
jg
enter
sub
sub
mov
mov
mov
jmp
or
addb
ds
bnd
ds
sahf
sub
and
xchg
push
into
ss
movaps
cltd
xchg
adc
dec
inc
clc
mov
dec
xchg
sti
dec
fs
inc
loop
scas
das
jbe
mov
mov
adc
lret
ljmp
dec
xor
mov
rclb
mov
cmp
mov
sbb
js
cld
insl
in
mov
add
jge
inc
add
insl
add
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
pop
sti
xchg
dec
daa
sbb
xchg
jle
js
lds
mov
iret
je
lcall
xchg
js
loope
pop
repnz
pop
xchg
push
mov
hlt
cmpsb
fmuls
sub
data16
negb
out
int
pop
inc
lret
mov
xorl
mov
sub
inc
mov
or
pop
lods
and
jl
stos
push
xchg
shl
mov
xlat
enter
mov
xchg
divl
mov
scas
dec
fldl
xchg
je
pushf
push
adc
imul
arpl
imul
hlt
xchg
mov
mov
mov
push
cmp
sub
movsb
mov
jmp
or
jge
mov
jg
mov
adc
nop
dec
in
or
adc
sbb
mov
ljmp
popa
dec
sbb
cmp
xor
ss
faddl
add
lods
sbb
aam
mov
adc
movsb
xor
dec
add
lahf
jg
push
inc
xlat
add
shlb
gs
insb
fucomip
and
fists
add
lea
or
cmp
adc
lahf
sub
jne
pushf
pop
mov
loopne
fcomps
inc
loope
in
bound
popa
aaa
fnstsw
pushf
and
mov
js
int
sbb
jnp
add
xchg
mov
inc
icebp
daa
ds
incb
sti
sarl
xor
int3
or
xchg
and
or
cmp
mov
lcall
test
jb
mull
lahf
mov
stos
fs
add
xor
js
popf
cmp
stc
movsb
cltd
add
and
cmp
pop
ret
stc
jmp
sbb
xor
pop
je
jb
and
cmp
fadds
imul
stc
dec
sub
adc
mov
mov
mov
imul
dec
add
clc
jne
pop
aaa
add
shl
fnstenv
mov
pop
sbb
scas
fidivl
bnd
xor
add
xor
fnstcw
aas
icebp
inc
xlat
scas
push
mov
lods
pop
rol
into
or
push
fcomps
lds
mov
fsubl
das
lret
les
pop
sub
pop
lret
adc
xchg
sub
inc
loope
addr16
fstpt
jl
xor
lcall
lret
leave
sub
inc
cld
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
je
sbb
xchg
jle
js
adc
sbb
lahf
addb
or
xchg
sub
call
aas
scas
mov
popf
out
pusha
mov
sti
ret
lcall
xchg
adc
mov
pushf
adc
sbb
pop
sbb
pop
pusha
xlat
xchg
pusha
inc
xor
in
pop
pop
xchg
mov
dec
lcall
jg
les
or
je
jno
mov
pop
jmp
movsb
or
into
fldt
jno
leave
mov
aad
jmp
lds
jecxz
test
xchg
jecxz
movsb
sbb
nop
in
pop
repnz
sub
mov
icebp
sbb
jns
fs
cltd
das
mov
fcomi
pop
imul
pop
push
mov
clc
xchg
jl
icebp
push
push
rolb
cmc
mov
leave
pop
lods
jne
inc
ficompl
repz
aaa
dec
insl
imul
sub
icebp
orl
jae
jb
sbb
dec
enter
out
jg
sahf
xchg
xchg
ja
mov
out
adc
or
enter
cwtl
dec
mov
inc
mov
sub
int3
je
mov
cmpsl
sub
xor
pop
inc
fucomi
sbb
dec
adc
ret
xchg
addr16
push
sti
pop
bound
leave
and
lret
xchg
push
jmp
inc
mov
stos
cmp
les
ja
dec
aas
xchg
dec
stc
jnp
mov
shrl
cmp
js
je
stos
pop
mov
and
in
bound
mov
cmpsb
cwtl
ret
dec
mov
ja
arpl
imulb
mov
lods
adc
iret
insl
dec
call
ja
or
push
cs
ljmp
into
fnstsw
mov
movsl
mov
movsl
stc
insb
push
cwtl
xchg
lea
mov
add
enter
mov
push
ja
adc
inc
rep
lcall
push
movsl
add
sbb
and
mov
push
pop
addb
and
mov
sub
fistps
sub
jmp
mov
adc
aas
shrb
mov
decb
lock
mov
adc
sbb
jecxz
mov
pop
in
imul
sahf
cmp
cmc
jl
mov
pop
loopne
cs
mov
mov
jmp
ret
int3
int3
aad
leave
roll
insb
and
fstps
js
int
ftst
addr16
push
arpl
nop
cwtl
fnstcw
sbb
hlt
adc
iret
lret
mov
adcl
dec
pop
lret
hlt
insl
cltd
inc
out
xor
mov
push
xchg
add
jecxz
or
pop
jb
stc
movsl
xchg
cmpsb
in
js
bndldx
pop
cmpsl
into
aam
out
pop
xor
jle
mov
negl
xchg
outsl
push
adc
mov
and
inc
or
movsl
pop
test
ds
in
push
pop
arpl
mov
popa
pushf
loope
js
lea
jmp
ror
xor
jnp
mov
mov
outsb
stos
int3
inc
test
xchg
das
sub
cmpsl
repnz
pop
ret
jg
jb
fmul
scas
mov
jge
fldenv
mov
dec
pop
rcrl
push
nop
jmp
pop
lcall
mov
mov
mov
ljmp
pop
mov
jne
mov
faddp
jle
cwtl
mov
add
cmc
imul
lds
adc
inc
lcall
jg
aaa
jno
mov
mov
sub
fisubs
or
out
jp
inc
movsl
and
jno
xor
mov
add
mov
jge
add
sub
push
mov
mov
repz
sahf
xor
sbb
dec
aaa
cmp
roll
fs
icebp
sbb
add
or
xchg
fiadds
pushf
mov
inc
fbstp
pop
mov
xor
dec
ja
fbstp
stos
mov
push
lahf
test
push
mov
cmp
ret
fdivs
dec
rorb
movsl
or
lea
mov
cwtl
pushf
roll
ja
mov
scas
push
adc
into
addr16
out
clc
inc
sbbb
inc
addr16
adc
adc
mov
and
fwait
dec
add
pop
scas
mov
mov
shll
mov
add
rcrb
xor
add
icebp
lcall
push
add
fstps
outsb
jg
outsb
lret
je
dec
sbb
pop
int
jmp
xlat
popf
cwtl
xchg
xor
mov
jge
jns
xchg
mov
sbb
daa
ficoms
ret
fwait
insb
push
data16
insb
stc
add
and
and
out
and
cmp
gs
sti
pop
jmp
xor
int
and
or
push
mov
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
or
push
mov
xchg
jle
js
and
stos
pusha
mov
push
cmc
dec
pop
and
xchg
out
mov
lods
adc
bound
cli
jns
inc
jb
lahf
pop
or
int
sub
rcrl
subl
pop
mov
sbb
fdivrs
lods
ffree
push
push
xchg
jbe
mov
jg
xor
mov
int
adc
add
pop
sub
call
mov
xchg
mulb
xlat
add
adc
dec
xor
pop
imul
xchg
mov
or
pop
adc
jg
jge
into
je
xor
lds
lcall
cs
aas
loop
test
adc
jle
add
push
jnp
scas
push
cmp
fdivl
popa
push
fsubrs
je
mov
jmp
or
cmpsl
dec
jge
mov
push
rcll
dec
mov
cmc
xchg
xlat
pusha
loope
inc
lret
fsubl
inc
es
fcomps
or
pop
inc
fs
sbb
ljmp
lahf
lea
pop
fsubrl
jns
std
je
jae
sbb
mov
aaa
fwait
inc
sbb
sbb
imul
movsl
xor
ret
roll
sub
aam
decl
mov
into
aad
in
jge
adc
jno
sub
add
daa
es
inc
inc
xchg
into
insl
mov
sahf
hlt
outsl
cmp
mov
aaa
rorl
jmp
pusha
mov
test
jo
adc
subb
inc
inc
shlb
loopne
or
adc
out
sbb
andl
dec
popl
push
xor
xor
test
or
lahf
mov
arpl
sarb
daa
mov
push
add
mov
cwtl
popf
dec
mov
xchg
xchg
push
arpl
or
inc
bound
shll
xchg
test
mov
fnstsw
pop
cwtl
int3
dec
dec
neg
jecxz
inc
add
mov
adcl
cmp
mov
divb
cltd
out
bound
arpl
sbb
mov
daa
bound
ret
pushf
sbb
aas
dec
call
dec
insl
jl
inc
test
lcall
fiaddl
mov
jo
rcll
adc
jl
adc
xchg
jge
popf
pusha
pop
sbb
aas
nop
jle
dec
leave
lahf
adc
cmp
stos
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
xchg
push
cmpsl
xchg
and
xchg
jle
js
cmc
sbb
sbb
or
jne
repz
pop
cmp
adc
push
mov
test
imul
jns
cmpb
fldl
int
jae
or
dec
pushf
les
mov
adc
cmp
mov
popa
sbb
test
adc
mov
push
mov
xchg
out
add
outsb
add
cmp
xchg
push
aaa
dec
insb
int
jecxz
inc
mov
dec
adc
pop
shr
push
jmp
sbb
xor
and
insb
popf
popf
jno
cmp
and
pop
shl
add
pop
adc
mov
sbb
jbe
shrb
cmp
or
nop
cmp
fdivp
out
sub
inc
gs
cltd
mov
pop
mov
pop
adc
leave
jmp
in
push
gs
das
shrl
pop
scas
jmp
shrb
mov
pop
movups
pop
xchg
sub
jne
or
push
mov
mov
sub
add
xlat
mov
mov
pop
cs
inc
mov
pop
ljmp
jo
repz
mov
imull
mov
lahf
mov
jo
dec
inc
pop
cmp
test
push
stos
out
push
jns
sub
jmp
cmp
lret
lcall
adc
arpl
addr16
imul
dec
lds
push
fimull
leave
cmp
out
loope
sarl
xchg
sbbl
mov
dec
add
add
lods
vmovd
les
sub
jmp
push
cpuid
push
xchg
imul
push
or
idivl
call
fsubrs
xchg
dec
and
inc
add
sbb
mov
rorb
lcall
xor
imul
xchg
filds
cmp
push
icebp
movsl
stc
lea
cmpl
outsl
popa
jb
je
dec
rorb
sbb
jb
andb
jns
fldcw
xor
pusha
push
inc
cmp
sub
sbb
sti
lret
cli
jmp
lods
add
add
nop
insb
lods
fdivrl
outsb
push
mov
inc
push
lods
xchg
ret
data16
lret
lods
aaa
add
aam
notl
fdivr
sbb
pusha
addb
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
xor
aas
add
push
sahf
and
sbb
jmp
xchg
adc
stc
and
adcl
xchg
pop
mov
ja
aaa
xor
sahf
cld
push
adc
dec
jnp
dec
cmp
cmc
daa
lods
or
mov
sti
mov
jge
shrl
hlt
cmp
fldenv
jecxz
mov
inc
psubsw
imull
daa
mov
addr16
sti
push
and
add
outsl
add
sub
jge
scas
sbb
add
nop
adc
mov
push
dec
shl
jge
jbe
jge
rcll
add
insb
dec
out
sub
pop
push
icebp
pop
lret
test
js
push
test
aaa
cmp
mov
xor
mov
jge
xchg
pop
addb
jo
lods
pop
pop
or
pop
or
jno
jg
scas
pusha
fwait
jae
lret
push
test
dec
cmp
dec
mov
data16
jns
ja
sub
cwtl
dec
and
or
and
xchg
push
daa
mov
arpl
fistps
scas
sub
and
cmp
sbb
and
pop
test
jg
scas
or
xchg
fs
fnstenv
add
mov
mov
add
add
jno
dec
loope
movsl
out
subb
add
out
pushf
xchg
add
orb
dec
rolb
jbe
shlb
dec
sub
inc
jb
adc
pop
mov
sbb
pop
add
push
daa
sbb
add
clc
out
sbb
cmp
inc
aad
inc
sti
out
push
jnp
inc
jg
mov
out
stc
outsl
andps
pop
call
push
fstpt
mov
fidivrs
push
adc
sbb
cmp
iret
cmp
cmp
xchg
mov
pop
push
rcrl
cwtl
aaa
movsb
pop
ret
pop
push
sub
fcompl
sbb
xor
or
or
pop
push
adc
test
jle
cmp
pop
dec
push
pop
lods
adc
push
adc
xor
in
jo
cmc
fwait
xor
jle
jb
mov
mov
sub
cmovl
and
cld
cmp
popf
mov
sub
add
xlat
sub
aaa
ret
cmpsl
repnz
arpl
and
jecxz
movsb
scas
pop
cwtl
repz
int
lock
or
sbb
add
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
inc
sub
xchg
jle
js
insb
inc
stos
jb
sub
lock
icebp
out
fmul
cmpsl
add
in
mov
pop
or
inc
mov
xchg
push
adc
rorb
push
sbb
inc
mov
xchg
mov
cmovo
pop
xorl
pop
sub
rol
stos
inc
cmp
call
adc
or
fwait
out
add
xor
and
bound
fidivs
sbb
addr16
add
scas
inc
adc
repnz
test
mov
cmc
or
pop
pop
mov
mov
stos
xor
aas
and
mov
jecxz
inc
pop
mov
jge
dec
sbb
addb
cld
xchg
dec
dec
cmp
xchg
pushf
mov
dec
xchg
pop
mov
shll
andb
loopne
jne
xor
loopne
ss
add
add
shlb
movsl
or
xchg
nop
and
and
pop
inc
es
jg
out
loopne
outsb
int3
mull
adc
inc
call
push
jnp
ret
das
addr16
jp
out
faddp
xchg
movsl
lahf
pop
mov
push
and
rcll
out
mov
loopne
ja
sub
or
xchg
and
jo
mov
and
lds
sbb
fs
inc
ds
out
lcall
dec
hlt
push
jg
xor
loope
add
cmp
bound
nop
scas
shll
mov
xor
pop
xchg
xor
fcomps
dec
enter
inc
sbbl
jmp
push
imul
test
jp
aas
loop
and
jl
repnz
in
setb
lock
inc
mov
cmp
arpl
mov
leave
imul
adc
incb
popf
jnp
in
xchg
xchg
mov
fisubs
jns
cwtl
ret
rorb
push
or
pushf
pop
outsb
out
jb
lret
sbb
out
push
or
rolb
test
or
scas
or
loop
fs
mov
lea
mov
inc
movsb
lcall
inc
inc
jbe
lds
and
pop
pop
inc
and
dec
jae
arpl
pop
out
call
pop
dec
mov
pushl
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
shrb
sub
js
jle
js
and
mov
cmp
test
es
stos
nop
gs
cmc
mov
fcomi
fistps
outsl
mov
cli
cli
add
push
jbe
rcrb
leave
cld
test
or
out
jmp
or
push
das
ss
inc
inc
pop
ret
jl
xlat
pop
scas
cmp
adcl
fidivrs
adc
imul
mov
xor
mov
jl
jbe
jl
arpl
test
enter
xor
shl
les
shlb
mov
push
stos
test
pop
inc
shlb
bound
dec
xchg
add
stos
in
test
arpl
cld
fucomip
adc
iret
inc
sub
cwtl
psllq
mov
mov
pop
loopne
mov
ss
movsl
lcall
fdivr
add
out
ja
mov
sub
cmp
jo
sub
stos
mov
jmp
add
push
mov
sub
ss
leave
mov
pushf
xchg
nop
push
decl
out
data16
mov
js
add
int3
sub
push
cmp
pop
mov
cwtl
arpl
cmp
push
xchg
rol
lahf
aad
xchg
enter
jae
sbb
lock
pop
or
ljmp
mov
and
jae
mov
cld
mov
jcxz
xchg
lods
ret
iret
into
mov
dec
sub
mov
and
out
lea
mov
jg
xor
push
sub
jmp
mov
dec
insl
scas
out
cmp
dec
add
jns
xchg
jp
out
mov
psubsb
push
push
inc
fwait
sahf
pop
nop
test
mov
daa
xchg
xchg
xchg
add
mov
jle
xchg
inc
add
xchg
addb
stc
xor
shll
or
and
push
inc
pop
jle
stos
pop
enter
dec
pop
ret
mov
dec
jno
test
jne
enter
orb
imul
stos
add
xor
dec
mov
mov
stos
les
xorb
dec
std
or
mov
fimuls
push
push
mov
cmp
je
insl
ss
mov
pop
scas
xchg
cmpsl
in
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
cmp
stc
jg
jg
add
cmpsl
xchg
rol
test
jmp
or
jge
pushf
nop
sbb
outsl
xchg
lret
xchg
movsl
stos
dec
and
jg
mull
cwtl
xor
inc
xor
addl
inc
inc
repz
lahf
pop
pop
inc
add
daa
and
or
xchg
mov
lock
dec
dec
ja
divb
bound
leave
adc
or
push
adc
mov
jbe
jnp
aam
insl
jno
mov
in
xchg
pop
fs
add
cmp
rol
and
cmp
xchg
into
jmp
push
mov
fwait
out
xchg
mov
jge
add
push
iret
std
inc
dec
icebp
mov
pop
mov
dec
jg
stc
sub
subl
mov
pop
mov
ss
or
les
cld
cltd
inc
and
mov
xlat
or
imul
sbb
sub
inc
stos
inc
jmp
pxor
movsb
fisubl
fiadds
jae
outsl
mov
cltd
jmp
fstl
stos
es
push
xorl
dec
rcrl
bound
lds
inc
xor
les
je
roll
rcll
gs
mov
push
gs
ret
loopne
lret
repnz
es
adc
sub
xchg
sar
out
jns
adc
scas
mov
out
hlt
jnp
aas
pop
icebp
or
mov
scas
gs
ja
loope
dec
sbb
int
xor
hlt
inc
xchg
in
in
in
in
xor
outsl
negl
pushf
out
test
roll
mov
movsb
in
inc
xor
shlb
mov
andb
in
cmp
add
sbb
js
or
push
adc
inc
pop
cld
es
test
add
jmp
cmp
aad
aad
popa
adc
pop
cmp
js
jle
js
and
fsubrl
test
ljmp
push
out
arpl
repnz
push
mov
push
sbb
stos
sarl
jle
sub
out
jecxz
imul
xchg
mov
pop
and
jne
stc
aas
xor
pop
cmp
xor
sbb
int3
loopne
imul
mov
ss
jne
adc
fwait
addr16
jmp
loope
leave
add
xchg
es
and
hlt
test
aad
inc
and
test
adc
pop
ja
jle
ljmp
fdivrs
or
scas
and
pop
cmp
inc
and
mov
push
cli
or
jne
push
xor
inc
outsb
mov
mov
test
pop
addr16
sbb
xor
inc
sub
push
fiadds
inc
fnstsw
inc
and
pop
lea
ds
adc
jb
outsl
das
lock
ret
xchg
test
jbe
mov
insb
push
fbld
pop
jl
arpl
bound
ja
lahf
sti
aam
and
inc
or
jno
dec
jb
fs
lods
addb
mov
sub
incl
inc
or
cwtl
xchg
stos
mov
xor
inc
jp
cmp
add
adc
mov
repz
adc
dec
fistpll
rol
dec
clc
lcall
fsubrs
stos
push
ret
aas
cli
pop
or
adc
push
scas
loopne
repnz
scas
scas
pushf
rcll
rolb
lcall
mov
movsb
push
xchg
sbb
shrd
rcll
loopne
addl
fcmovb
jecxz
daa
outsb
test
xchg
push
mov
movsw
inc
and
dec
jmp
ds
add
xchg
scas
push
push
add
int3
ds
push
vmulpd
dec
jae
cmp
mov
fstpt
popl
aad
push
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
inc
adc
jg
add
repz
aaa
fldl
clc
push
leave
jge
imul
aaa
dec
or
fidivl
lret
sahf
ret
sub
dec
mov
xchg
mov
cmpb
sahf
cmp
inc
or
xor
bound
pop
xor
movsb
and
ds
aaa
jns
rorb
push
decb
inc
lock
dec
sub
pop
mov
data16
mov
lcall
jno,pn
imul
cmp
mov
pop
and
and
cs
rcrl
enter
ljmp
jne
dec
sbb
lock
sbb
cmp
daa
sbb
icebp
fwait
push
mov
xor
pop
xchg
ficomps
lods
mov
aas
jmp
xor
xor
jg
test
sub
jecxz
xor
mov
loope
in
fstpl
jl
outsb
repnz
test
aam
mov
fstl
mov
hlt
insl
mov
mov
leave
jge
call
insb
pop
aas
mov
push
test
adc
xchg
ficoml
int3
pop
scas
xchg
sbb
cld
and
mov
sbb
rcl
jno
shlb
imul
lods
push
push
subb
jne
mov
sbb
enter
or
addr16
push
clc
and
sar
fstl
cmc
jecxz
jne
in
pop
and
rcll
data16
rolb
xor
insb
mov
icebp
jecxz
jns
rol
jg
mov
xor
sub
rorl
sbb
and
mov
pushf
cmp
push
scas
jne
and
fldl2e
fistpll
sub
lret
cmpsb
nop
xchg
jmp
sub
jb
sbb
mov
inc
inc
mov
jmp
popf
mov
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
call
lret
aaa
jg
jnp
js
add
adc
pop
movsb
adc
push
or
sub
jl
imul
cmp
cmp
mov
out
repnz
sahf
mov
mov
loopne
dec
iret
mov
push
ret
cmp
add
popa
mov
jbe
sti
stc
add
stos
xchg
daa
out
inc
ficomps
test
shl
and
rorb
xor
lods
push
and
mov
push
sub
insb
adc
and
loopne
icebp
filds
xor
imul
xchg
rclb
mov
int3
pop
repz
jo
mov
ret
stc
dec
jae
sub
sub
and
push
sbb
hlt
fucomp
fwait
stc
sbb
in
movsl
mov
fstl
sub
mov
inc
jne
es
in
jns
mov
xchg
fwait
mov
or
jb
shl
and
adc
pop
xchg
cltd
dec
xchg
dec
push
and
into
cmpsb
xchg
push
mov
and
rorb
adc
cltd
mov
leave
rclb
pop
or
testl
push
adc
cltd
jecxz
jecxz
psrlq
push
pop
lds
lret
mov
jb
scas
add
cmp
jg
mov
insl
fnstcw
jmp
xchg
fists
xor
xor
dec
js
out
movsl
jnp
pop
cmp
mov
xorl
jb
mov
int
sbb
jmp
xchg
loop
jae
fmull
faddp
mov
hlt
xor
ret
imul
lock
stos
jl
fsts
jnp
sti
stos
pop
cmpsb
and
fnstsw
std
rclb
adc
sub
adc
push
push
inc
jno
sbb
jg
xlat
repnz
insl
mov
push
push
add
dec
push
iret
add
lods
pop
xor
push
sub
push
mov
cmpsb
mov
push
xchg
out
mov
int3
and
jg
adc
fsubs
xchg
ds
outsb
test
adc
inc
or
adc
pop
mov
jle
movsl
xchg
pop
mov
adc
sub
push
push
sahf
into
xchg
adc
jp
mov
inc
jno
cmp
test
jbe
sbb
mov
fistps
dec
push
xchg
inc
mov
pop
jno
or
and
cmp
ret
in
dec
lods
or
adcb
testl
stc
push
sbb
inc
in
out
sbb
xchg
ret
arpl
jns
in
adc
mov
lds
sub
je
out
add
xchg
and
je
mov
aaa
jp
dec
jg
jne
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
nop
xor
adc
xor
js
jle
js
ljmp
lock
mov
add
out
test
dec
and
pop
cmp
loope
aas
jecxz
lods
roll
fcompl
fisubrl
sbb
lret
adc
cmp
iret
inc
pop
xor
repz
pop
out
rolb
push
pop
xchg
clc
scas
mov
shlb
negl
not
adc
pusha
les
scas
fwait
push
sub
fists
jecxz
shl
repnz
dec
aaa
clc
popa
inc
jp
shr
fmuls
dec
mov
xor
andl
inc
xor
ds
lock
cmpl
pop
push
dec
inc
xchg
es
jo
ljmp
fisubs
adc
sub
stc
xor
dec
jbe
mov
lock
jl
jecxz
movlhps
or
bound
mov
mov
jecxz
push
jl
int
adc
cmp
mov
cmp
insb
cmp
jle
repnz
arpl
jnp
out
lahf
pop
mov
mov
loopne
movsb
sahf
push
mul
outsl
ljmp
outsb
fidivrl
outsb
inc
add
and
fnsave
pop
shlb
iret
shrl
popa
adc
cmp
test
xor
scas
shl
sbb
push
ja
jns
les
cmp
lret
pop
dec
mov
inc
xchg
ffree
sbb
xor
js
cmp
jns
adc
js
cltd
ss
sub
pop
pop
in
mov
cmp
out
loop
jp
xchg
data16
scas
pop
add
mov
cmove
xchg
push
jns
adc
mov
add
mov
inc
fcmovnu
jo
pop
out
xchg
sarb
das
shr
mov
sub
push
rorl
xor
dec
aad
lahf
mov
sub
mov
orl
test
jge
pusha
pop
push
push
mov
gs
xor
aaa
adc
xor
xchg
push
mov
fs
std
and
dec
mov
push
sbb
mov
xchg
lods
das
imul
and
fwait
daa
cli
and
fwait
or
cmp
div
ljmp
lods
pop
jg
movsl
ss
xchg
ret
testw
jp
rcrl
sbb
pop
ljmp
rcrb
pop
imul
popf
jg
enter
pop
inc
cmp
fdivl
mov
adc
dec
shlb
cmp
push
loope
adc
dec
adc
push
aaa
mov
jle
xor
movl
push
mov
add
inc
sarl
movsl
or
cli
lcall
test
add
jae
stc
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
test
adc
jg
jnp
js
aas
pop
and
push
in
fcmovne
arpl
je
add
mov
je
xchg
aam
jne
mov
mov
fldcw
cmp
data16
sbb
push
das
fwait
sbb
cmpsb
ret
pop
mov
mov
xlat
incl
addr16
xchg
sub
aam
xchg
sub
mov
fisttpl
add
sbbb
add
insb
cs
in
mov
lret
shrb
xlat
jg
mov
pop
ds
push
jmp
xor
notl
out
push
repnz
nop
jns
jae
pop
idivb
jns
sub
jmp
leave
add
add
in
test
imul
xchg
into
and
mov
bound
lods
inc
rcr
iret
out
jbe
mov
mov
lahf
xchg
test
xchg
push
into
ss
mov
repnz
or
dec
xor
lock
or
jne
cmp
enter
push
adc
out
rcr
lea
out
sub
add
int
shlb
push
sbb
in
je
lds
int
xchg
pop
fptan
jmp
arpl
lds
in
popf
xchg
mov
aaa
pop
insb
rep
jl
xor
ds
jae
ret
jecxz
repz
fcoml
andl
sub
outsb
xorl
sarb
add
sub
lods
rcrl
cmp
lds
cltd
adc
sub
fmul
ds
mov
dec
inc
outsl
dec
mov
inc
jnp
mov
inc
xchg
jge
aas
sub
add
dec
enter
into
mov
mov
cmp
mov
pop
movswl
pusha
push
outsl
js
push
clc
and
and
push
adc
pop
adc
mov
xor
mov
mov
insb
mov
scas
sbb
sub
mov
bound
in
pop
ja
sti
enter
push
daa
adc
sahf
rcr
cmp
clc
subl
or
mov
jbe
cmp
inc
jecxz
sahf
aad
xchg
into
mov
mov
xor
test
shr
movsl
and
push
enter
pop
mov
cmp
push
adc
outsl
or
jl
jae
pop
pop
test
cmp
mov
pop
jle
pop
jo
mov
xchg
sub
mov
stos
leave
jbe
lret
rcrl
adc
nop
scas
es
fcomp
sbb
inc
shl
repz
mov
das
mov
jae
adc
and
nop
sbb
cmp
push
fdivr
cmp
pop
or
fsubrl
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
movsl
cs
jg,pt
jnp
js
fiaddl
inc
add
loop
cmpsl
subl
mov
cld
arpl
imul
test
mov
mov
inc
pushf
pop
cld
jp
les
aam
addr16
dec
mov
mov
out
xchg
insl
rorb
cwtl
fbld
adc
push
inc
call
mov
xor
xchg
scas
mov
repz
ljmp
add
jno
stc
hlt
fimuls
shlb
dec
fwait
cmp
inc
sub
mov
sub
lock
mov
cmp
int3
ret
add
jnp
and
mov
repnz
sti
add
adc
popa
push
jno
cwtl
out
leave
fistpl
ret
in
jbe
mov
in
repz
push
stos
xlat
inc
je
add
subl
mov
cmpsb
hlt
addr16
test
test
push
js
jnp
dec
mov
push
mov
cmpl
adc
ljmp
orb
add
mul
lcall
push
fists
pop
jp
ljmp
cmp
sbb
or
test
push
inc
sbb
mov
mov
push
adc
out
orl
sub
cmp
in
shll
xchg
and
push
arpl
ficoml
sub
mov
jnp
xor
fldenv
dec
push
andl
fidivl
xchg
fstps
orb
pop
out
repnz
add
inc
push
ja
lods
sti
fists
rcll
cmp
pop
lahf
call
add
mov
fcompl
sub
fidivl
add
stos
dec
jne
stos
movsl
bound
mov
arpl
hlt
pop
push
cmpsb
push
aas
jb
dec
lods
movsb
add
xor
in
jge
adc
cmp
fadds
inc
outsb
add
rclb
pop
push
loop
cmp
mov
stos
add
daa
pop
mov
sbb
xchg
ret
fstl
push
xchg
dec
or
test
arpl
xchg
dec
imull
sti
out
ja
push
jae
xlat
xor
sbb
fbld
setle
daa
mov
xchg
inc
loop
jp
in
mov
icebp
shrl
dec
shrb
mov
outsl
test
call
sbb
es
push
mov
sub
rclb
jmp
int
mov
or
fwait
ss
pop
mov
loope
subb
out
cmpb
inc
pop
es
cmpsb
hlt
ficompl
fldenv
test
lret
pop
sbb
test
or
test
ljmp
jnp
fidivrs
lock
cmpsl
pop
mov
jmp
xchg
add
add
adc
into
ret
ret
lret
xor
stos
push
dec
sub
js
jle
js
adc
and
push
jmp
xor
out
xchg
shll
sub
push
out
and
lahf
add
adc
push
adc
xchg
and
test
cmp
push
xlat
lods
adc
movb
fisubl
push
and
mov
ret
push
cmp
add
insb
imul
mov
and
loopne
les
pusha
xlat
lods
adc
jae
sub
pop
jae
stos
dec
out
add
mov
into
pop
sbb
jne
out
popf
sub
popa
adcb
push
sbb
in
cmp
ss
das
inc
xchg
mov
adc
inc
or
pusha
lea
sub
ret
mov
aas
inc
call
rcll
adcb
or
mov
lock
mov
arpl
pop
aas
aaa
insl
ret
pop
xchg
pop
sahf
cmpsb
fs
rclb
pop
cs
sahf
movsb
jne
pop
dec
sbb
or
sarl
dec
add
movsb
int
add
pop
mov
jo
xchg
pop
sub
cs
insl
cmp
ljmp
subb
repz
xor
mov
popf
sub
adc
ljmp
popa
push
dec
fistpl
sub
push
add
jno
cmp
cmpsl
repnz
adc
or
mov
ret
sub
sarb
jns
push
or
mov
outsl
outsb
lahf
add
clc
insl
push
lcall
and
xchg
mulb
loopne
mov
jg
adc
dec
das
mov
shlb
lcall
cmp
push
mov
cld
push
mov
pop
std
cwtl
push
adc
inc
mov
das
cmpsl
aam
sbb
cmpsl
repnz
lea
test
mov
mov
aaa
pop
clc
stos
adc
sub
jb
mov
xchg
clc
out
xor
inc
lock
pop
push
gs
push
inc
pop
out
pop
stc
ss
jg
arpl
lret
aas
jle
mov
jle
sahf
test
jns
fs
mov
dec
jnp
sbb
push
inc
into
jbe
dec
rcrb
outsb
adc
cmp
into
sub
add
out
fst
push
sbb
out
mov
push
sbb
jne
mov
jp
mov
inc
lea
jae
xor
dec
add
pop
movb
mov
lods
pop
stos
and
push
fstp
arpl
ljmp
xor
adc
cmpsl
add
inc
xacquire
rcrl
adc
mov
fsubr
dec
xchg
imul
mov
jmp
lret
rol
leave
shll
sub
jp
or
jle
js
xchg
and
push
jbe
push
cmpsl
mov
outsb
sbb
nop
xchg
xchg
or
pop
imul
call
mov
adcb
aaa
or
add
mov
add
sti
pop
ljmp
xor
xor
jl
mov
int3
sbb
aaa
pop
movsl
push
mov
outsb
mov
mov
adc
pop
xchg
movsl
loopne
mov
and
stc
in
aad
jo
mov
mov
cmp
mov
addl
pop
xor
sub
shll
and
fs
jge
call
rcrb
lret
popf
mov
sub
xor
or
and
and
cmpb
xlat
rcr
mov
adc
or
mov
jp
das
mov
add
inc
or
jmp
in
popf
outsl
sbb
xor
cmp
or
div
xor
or
dec
aaa
push
add
jl
negl
aad
daa
xchg
adc
push
push
loopne
push
pop
fidivrl
pusha
cmpsl
insl
cmp
mov
outsl
cmp
mov
push
cmpsb
adc
and
pop
out
or
cwtl
test
pop
push
pop
dec
jl
and
and
into
js
int
cmp
adc
es
mov
mov
mov
cmpsb
cmp
repnz
pop
cmp
sbb
jle
adc
or
ret
sub
adc
call
inc
jmp
adc
mov
rsqrtps
sbb
popf
mov
in
cli
mov
jle
repz
dec
cli
int
cli
adc
pop
inc
lods
or
loopne
and
mov
fidivl
sahf
adc
and
repnz
mov
addr16
push
push
fsubrs
and
dec
cmp
dec
mov
mov
pop
push
fwait
push
sub
sbb
in
lret
inc
mov
nop
std
and
xor
hlt
mov
dec
adc
or
push
xor
addr16
jo
xor
dec
cmp
dec
pop
push
fdivs
outsb
aas
add
mov
outsl
mov
push
les
jg
jns
dec
adc
ret
add
sbb
xchg
divb
inc
enter
inc
shrl
or
stos
mov
inc
jge
or
das
inc
add
or
stos
inc
or
leave
fs
pop
lcall
jl
filds
adc
or
out
mov
and
push
mov
pop
in
pusha
pop
lods
mov
fsubs
iret
scas
call
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
leave
jne
lds
adc
js
jne
xchg
sbbb
daa
lods
jmp
and
jmp
out
xor
rcl
pop
push
int3
mov
in
inc
xor
cmpsl
je
xchg
stos
push
andb
stc
int
push
adcl
shll
xor
adcb
rol
or
push
sub
roll
arpl
sbb
int3
dec
loope
xorb
sti
pop
mov
sbb
ret
jmp
jl
outsl
sbb
jnp
push
xor
lods
aam
lret
or
sub
jbe
cmp
iret
inc
mov
addr16
out
push
push
adc
xor
cld
mov
jne
popf
cmpsb
out
aam
adc
movsl
aaa
push
scas
fistpll
lret
xor
or
adc
cmp
cs
sbb
mov
mov
lods
es
pop
test
je
aad
ror
loopne
stos
adcl
and
adc
jb
stc
sub
ret
jle
cmc
cmc
imul
xor
push
into
sub
addr16
push
xchg
push
xchg
dec
adc
jns
stc
sub
fmull
pop
lret
arpl
jae
add
xchg
addps
nop
adc
dec
mov
or
in
or
xchg
jb
icebp
out
mov
gs
inc
aam
mov
sbb
jl
fwait
dec
inc
ds
cmp
out
sub
test
rcrl
test
scas
xchg
adc
fldl
ficompl
xorl
adc
mov
mov
call
pop
fmul
pop
jnp
pop
xor
inc
dec
lea
xlat
mov
sbb
push
and
cmp
lret
pop
mov
inc
js
scas
in
jbe
inc
jns
mov
cmp
in
test
sahf
cmp
push
jne
or
jg
insb
or
push
sub
cmp
jae
rorb
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
pushf
inc
and
jg
adc
js
sub
imul
repz
jbe
mov
jg
cmp
jnp
pop
ds
in
test
mov
sub
push
test
ss
movsb
sub
mov
stos
adc
inc
or
loop
jae
mov
jp
mov
mov
jg
outsb
push
fisubs
andb
sbb
and
adc
push
sar
jle
mov
test
sbb
cld
hlt
cltd
jns
fildll
and
ljmp
test
lock
add
clc
push
stos
pop
idivl
insb
sub
gs
jle
outsl
push
ljmp
jp
cmp
add
fbld
dec
mov
xchg
dec
outsb
push
shll
cmp
leave
fadd
mov
jbe
pop
popa
cltd
cmp
pop
std
pmullw
sub
mov
idivb
push
popf
aas
mov
mov
pop
xchg
add
mov
and
mov
leave
movsl
dec
push
lea
mov
outsb
ret
jecxz
in
ficomps
adcb
nop
repz
jb
outsb
in
out
sti
andb
lods
lret
sub
loop
stos
in
adc
jo
sbb
std
inc
add
push
push
push
and
fwait
dec
hlt
cmp
dec
push
cmc
pop
adc
out
fists
cmp
push
rclb
or
test
test
rorb
loope
jno
sub
jae
push
xlat
xchg
rclb
dec
ss
roll
push
aam
mov
xor
push
sbb
mov
push
xchg
popa
loop
subb
stc
pop
xlat
out
sarl
nop
daa
mov
out
std
or
sub
inc
push
xchg
xor
mov
jl
data16
clc
or
cmc
addb
int
test
mov
or
test
adc
dec
cmp
outsb
std
or
push
xchg
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
clc
idivl
leave
jg
adc
js
loop
lret
test
nop
cmp
shr
push
rol
stc
notb
mov
in
lds
daa
outsl
imul
outsl
or
xchg
or
std
mov
insl
and
push
shlb
xchg
jge
ret
mov
xchg
mov
rcrb
repnz
stos
dec
push
mov
mov
in
arpl
ljmp
shl
rcl
popa
jne
movsb
lea
mov
mov
pop
xchg
jge
jno
into
leave
iret
xchg
xor
push
js
mov
inc
inc
dec
fisttpll
add
pop
add
mov
lea
xor
add
push
ljmp
pop
and
and
xor
sub
or
ret
mov
shlb
sub
xchg
mov
inc
or
pop
pop
push
xchg
jecxz
mov
jns
push
out
fwait
out
push
int
mov
add
mov
in
lahf
lea
mov
add
and
and
testl
mov
pop
sub
xchg
lods
and
inc
sub
sbb
test
inc
push
jbe
clc
mov
xchg
sbb
adc
scas
les
xchg
pop
dec
popf
cmp
cmc
cmp
push
jg
or
mov
cs
jp
cmp
inc
dec
mov
mov
push
cmpsl
xchg
mov
inc
sub
mov
mov
adc
mov
mov
pop
clc
jb
ret
xorb
adc
sbb
jns
xchg
xchg
fsub
adc
in
mov
outsb
rclb
mov
popa
inc
les
int3
aad
xchg
jmp
mov
lret
clc
add
sahf
xchg
mov
notl
stc
and
xlat
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
frstor
repz
jg
adc
js
sti
cs
loopne
ret
sub
fsubl
xor
les
inc
ret
pusha
or
out
cli
arpl
rcrl
dec
mov
push
and
add
sub
jbe
negb
repnz
ds
jbe
cmpsb
pop
sbb
jg
jp
xor
push
add
inc
push
int
das
sbb
adc
sbb
and
lahf
incb
movsb
outsb
subb
lret
fisubl
pushf
arpl
and
sub
pop
lock
aam
lock
mov
test
frstor
mov
xchg
and
mov
data16
pusha
fiadds
sub
addl
adc
dec
test
mov
sbb
mov
sub
xchg
pop
adc
loopne
rol
rcll
mov
mov
jle
adc
xor
jo
add
xor
iret
jmp
jbe
in
icebp
cltd
or
repz
inc
in
cmp
call
imul
out
mov
mov
scas
sbb
mov
or
inc
inc
nopl
lea
scas
lods
cli
pop
mov
fstpt
out
sub
out
ret
xchg
ja
mov
movsl
mov
pop
pushf
shlb
shll
ja
mov
sub
sub
sbb
mov
cmp
fbld
xchg
addl
fcomi
pusha
and
iret
daa
jl
push
aam
xchg
ja
cmpsl
in
xor
xchg
ret
dec
adc
jmp
pop
mov
add
pusha
pop
aaa
fwait
push
test
aas
xor
iret
bound
movsb
push
mov
xchg
or
popa
mov
adc
mov
out
aam
in
jnp
leave
mov
push
sub
fsub
sub
jg
ljmp
dec
add
inc
loopne
test
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
add
call
jle
js
or
and
ss
mov
lock
cmp
adc
mov
mov
orl
jb
addr16
lock
xchg
mov
push
jge
and
jge
cmp
mov
movsl
mov
out
nop
mov
fwait
loope,pt
pusha
xor
icebp
push
cmpb
scas
int3
lcall
xchg
jae
loop
pop
mov
mov
cmp
cmp
arpl
dec
jnp
ss
push
cmp
mov
js
rorl
mov
sub
jge
sarb
push
test
mov
ret
add
testb
in
into
fs
pop
add
push
adc
mov
pop
daa
cmp
mov
testb
test
imul
sbb
outsb
and
mov
dec
out
sti
test
mov
out
pop
jl
enter
dec
jp
pop
mov
xchg
inc
rolb
xor
adc
sbb
movsl
clc
or
test
xchg
inc
aaa
repz
mov
sub
mov
orl
imul
xchg
add
subb
rcll
jb
pop
xor
repz
pop
push
dec
mov
pop
pushf
mov
aas
mov
insb
sub
iret
push
mov
sbb
push
out
les
push
cmc
mov
imul
out
adc
lods
je
jae
jmp
push
sub
mov
mov
and
ja
shlb
js
nop
cmp
or
push
push
xlat
dec
inc
push
imul
neg
cli
mov
scas
scas
mulps
and
or
sbb
fisttps
lods
xor
pop
cmp
push
xchg
int
testl
fwait
or
shlb
jne
fldcw
stos
mov
mov
adc
push
xor
psrld
lret
adc
subb
mov
imul
xchg
push
add
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
jmp
js
jle
js
mov
adc
cmpsb
rorb
and
std
out
out
rcrb
sbb
rolb
push
or
popa
psrlw
cmc
js
out
movsl
and
dec
fxch
sbbl
mov
adc
mov
xchg
hlt
int3
notl
add
sbb
inc
mov
cmpsb
mov
ret
push
dec
mov
jp
mov
ja
mov
mov
cmp
or
std
jnp
and
cmpsl
pushf
andb
cwtl
ljmp
sti
xor
jno
hlt
cmp
outsl
outsb
inc
push
cmp
lcall
sub
and
mov
in
or
sub
sbb
repz
and
jb
xchg
leave
and
outsb
ret
idivl
cmpl
add
mov
cmp
in
adc
push
push
dec
sarb
fldcw
arpl
neg
scas
leave
xchg
sti
and
jb
loop
jl
dec
mov
and
bound
xchg
jo
insl
cmpsb
cmp
xchg
mov
mov
les
dec
lds
adc
jge
sbb
dec
sub
clc
push
pop
call
push
into
pop
xchg
lock
iret
or
ret
enter
add
nop
dec
loopne
jecxz
xor
mov
mov
sahf
mov
xor
pop
dec
dec
adc
sbb
in
loope
js
cmpl
insb
jne
or
add
and
mov
sub
pop
mov
jp
add
sub
lods
jg
dec
dec
pop
lcall
out
sbb
je
notl
aas
pushf
mov
out
push
lods
xchg
movsb
imul
lcall
test
ja
jne
pop
arpl
enter
push
stos
mov
pop
cwtl
add
sbb
push
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
push
cwtl
sarl
adc
js
out
icebp
push
lock
test
imul
pop
in
imulb
dec
mov
bound
cli
xor
loope
mov
mov
je
fsubrl
adcl
cmp
mov
fucomi
sbb
dec
out
out
scas
xchg
fcoml
cli
es
push
sbb
rcl
loop
scas
fwait
or
dec
shlb
pusha
inc
add
bnd
and
xorl
mov
mov
call
mov
mov
or
rol
sbb
loop
mov
sahf
mov
je
ret
or
cli
insb
pop
or
inc
jl
pop
and
and
mov
sbb
xor
fbld
sbbb
adc
push
sub
sbb
mov
call
arpl
les
xor
push
dec
les
mov
mov
decl
dec
out
sbb
and
aad
mov
std
lods
xchg
and
imulb
pop
mov
cmp
test
into
jl
inc
lds
rorb
mov
or
fldenv
mov
std
mov
or
xor
cltd
cmpb
add
xchg
adc
popa
push
loop
pop
add
mov
jg
mov
sub
xchg
lods
jmp
pop
sahf
test
gs
and
jle
add
cmp
clc
inc
outsl
shlb
add
push
out
lret
pop
sbb
mov
jae
mov
adc
jg
std
mov
ret
int3
pop
push
push
mov
gs
xor
lods
or
lahf
xorl
cwtl
outsl
lea
movsb
mov
lock
out
jecxz
sub
push
cltd
pop
cld
jno
xlat
sbb
xchg
bound
mov
jae
es
mov
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
push
xchg
adc
jle
js
popa
ret
push
fmuls
cmp
xchg
inc
shl
and
push
adc
mov
out
fninit
add
jbe
daa
insb
jge
mov
jmp
hlt
test
test
mov
test
jg
or
push
xor
movsb
roll
outsl
rclb
add
ret
sti
and
rclb
sub
and
inc
or
push
insb
mov
data16
and
mov
inc
and
in
jge
in
cmp
pop
dec
add
inc
mov
mov
cltd
push
mov
push
clc
push
scas
or
cltd
ja
mov
jmp
xchg
enter
xchg
xor
inc
rdpmc
imul
push
test
mov
ficoml
fisubl
pusha
enter
cmp
sbbl
xchg
inc
push
out
lret
inc
xor
inc
or
imul
and
int3
jle
or
push
out
dec
push
mov
jmp
or
arpl
jae
push
decl
imul
sti
mov
bound
stos
inc
or
arpl
pop
cmp
mov
movl
pop
mov
lret
cmp
lcall
xchg
and
hlt
and
cwtl
rol
scas
loopne
jb
outsl
adc
jge
js
push
mov
sbb
in
lret
or
sbb
rcl
pushf
mov
popf
mov
sub
mov
leave
loope
xlat
sbb
pop
adc
push
add
fstpt
nop
sahf
cmpsb
mov
jg
pop
mov
dec
test
push
mov
mov
cmp
add
les
loop
imul
cli
adc
mov
mov
sbb
mov
add
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
cmpl
sbb
jg
adc
js
in
pop
cmp
int3
xchg
push
jg
subb
xchg
pushf
sbb
int3
adc
xchg
mov
cmp
es
cmpl
pop
dec
aad
add
gs
mov
scas
pop
jmp
mov
sub
imul
sarl
int3
jle
data16
cmp
icebp
jb
out
fbld
inc
mov
test
fstpt
stos
insl
adc
call
movsl
aas
aam
mov
mov
inc
ret
adc
fwait
data16
fdivrl
mov
mov
daa
movsl
insl
mov
push
add
add
adc
stos
sub
ret
test
loopne
push
dec
cwtl
dec
xchg
jnp
jg
dec
pusha
rcr
jb
psubq
ret
push
sub
test
dec
movsb
dec
ss
or
push
test
push
pop
or
jle
sbb
mov
inc
pushf
clc
cld
inc
jge
pop
mov
jle
mov
insb
les
cwtl
mov
sub
sub
and
add
push
cwtl
std
popa
std
loope
cmpsb
ljmp
or
xlat
cs
jge
adc
mov
cmp
pop
mov
test
mov
xchg
mov
test
mov
mov
jge
stc
jp
filds
mov
xor
test
xchg
xor
insb
jmp
xchg
nop
lahf
pop
xchg
cmpsb
outsb
push
cmpsl
call
mov
jmp
jl
insb
clc
add
ljmp
xor
inc
jno
popf
cmp
mov
sub
mov
jb
mov
mov
jbe
rcrb
in
out
mov
mov
push
psubd
xor
pop
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
dec
pusha
fstpt
adc
js
in
inc
sub
mulb
pop
in
pop
pop
outsl
mov
insb
pop
cli
xor
or
xor
stc
push
fiaddl
add
add
jl
pop
sbb
scas
out
test
add
mov
fadd
fs
pop
ljmp
rorb
xchg
add
lcall
stos
push
xor
ret
xchg
hlt
outsl
pusha
movsl
mov
sub
loopne
cmp
add
out
stc
lock
push
sbb
ja
rcl
sbb
jp
cmp
sahf
ja
shl
push
jp
jo
inc
aaa
mov
lods
aas
stos
filds
jg
jb
orb
call
dec
in
movsb
fstpt
inc
enter
sbb
cmp
loope
cltd
aam
pop
shrb
jge
repnz
or
into
push
lret
and
sbb
gs
xchg
add
mov
lds
cmp
add
iret
cmp
shr
test
ficomps
inc
cmp
inc
mov
cltd
xor
gs
je
mov
stos
pcmpeqw
hlt
push
imul
mov
popf
rclb
adc
fnsave
cmp
push
in
js
cmpsb
mov
xor
push
mov
test
mov
mov
in
popa
pop
rcll
data16
inc
cltd
jae
xchg
jmp
lcall
mov
call
mov
adc
adc
movsb
inc
mov
or
jnp
aam
arpl
jb
imulb
mov
in
sbb
dec
cmp
lret
repnz
imul
dec
sbb
cmp
xor
inc
mov
lods
fadd
les
and
gs
pop
sbb
mov
sub
into
pushw
jle
leave
jg
cmp
js
sub
sub
xchg
sub
jmp
ret
aas
fxch
rcr
mov
int3
cmp
js
jle
js
adc
gs
leave
rolb
iret
push
test
jmp
mov
add
pop
sub
shlb
aaa
aaa
push
mov
cmp
lods
and
push
test
pop
in
pop
cwtl
push
mov
leave
cmp
add
or
push
iret
lahf
inc
out
mov
push
out
mov
mov
sbb
cmp
xchg
insb
cmpb
lea
shrb
mov
fcmovne
rcrb
push
stos
cmpl
jp
push
mov
xchg
test
pop
push
add
loopne
jecxz
sub
clc
xacquire
shlb
sub
adc
bound
fsubrs
pop
repnz
sbb
stos
cmp
xchg
fisttpll
xchg
and
cmp
mov
or
scas
sbb
pop
je
sbb
xchg
push
adc
mov
or
js
daa
push
cmp
add
dec
xor
fdivs
lret
xchg
push
xor
add
pop
bound
lods
ljmp
push
push
sub
insl
into
sbb
add
rorb
jnp
test
add
jo
pop
jnp
or
movsl
cltd
sbb
xchg
rclb
shlb
rcll
inc
fisubrl
fsubl
xor
jns
daa
aas
sub
rolb
mov
shlb
add
cmp
push
std
xor
cmp
rcrl
pop
xchg
popl
hlt
and
fidivs
cmp
insl
test
shll
mov
or
test
dec
sub
ret
cmp
adc
sbb
idivb
aad
mov
mov
cmp
stos
jg
inc
fsubs
ret
push
xor
pop
in
insb
jne
jp
xorl
cmc
pop
dec
push
insl
pushf
stos
jbe,pt
sbb
sbb
sahf
cmp
dec
add
mov
mov
lahf
mov
lea
inc
jle
sub
inc
xchg
jmp
int
int
fnstcw
lea
js
jle
js
sbb
cmp
push
mov
lcall
rorb
xor
clc
stos
push
xchg
icebp
das
out
in
fwait
jnp
sub
movsb
add
pushf
fldenv
sub
jle
cmc
lret
stc
sbb
in
loope
stos
pusha
jno
in
xchg
push
repz
int3
or
jecxz
aam
push
push
shll
cld
idivl
lea
pusha
pusha
inc
dec
sbb
sub
xchg
push
sahf
xchg
adc
xchg
dec
imul
sub
loopne
xchg
mov
pmuludq
vshufpd
andl
adc
jo
add
cltd
outsb
cwtl
jne
jl
mov
stc
inc
test
out
lcall
popa
cmp
jl
push
in
xor
mov
pushf
stos
pushl
xchg
jnp
xlat
add
push
pop
or
es
ffreep
dec
movb
das
xchg
pop
inc
mov
shrl
scas
out
test
clc
popf
ficoml
je
sbb
xlat
mov
and
mov
push
addr16
rcrb
sub
push
in
or
xchg
jb
call
les
lahf
sbb
cld
jp
adc
test
or
mov
fdivrp
mov
stc
ret
and
adc
or
pop
pop
popf
test
js
aad
push
adc
roll
cmp
dec
popf
sub
mov
add
add
jmp
cwtl
shlb
inc
repz
pusha
dec
mov
lods
mov
inc
inc
jge
cltd
movsl
lock
jo
or
cmpb
jae
xor
jae
xor
dec
dec
iret
jno
pop
leave
dec
call
loope
adc
stos
fdivrs
mov
mov
dec
jl
or
lds
pop
jo
or
push
aad
sub
push
mov
nop
cmp
ret
cmp
into
xor
pop
adc
lcall
mov
pushf
sub
jmp
in
xor
add
iret
enter
fcmovnu
xlat
push
shlb
imul
jle
js
adc
aaa
call
mov
xor
cmp
stos
std
frstor
sub
sbb
pushf
aam
adc
je
std
mov
and
pop
out
mov
nop
cmp
jae
int3
mov
cld
lock
outsb
pop
jg
mov
bnd
add
popa
lods
leave
subl
xor
gs
repnz
shll
sbb
jno
xlat
pop
idiv
jb
push
rorb
mov
in
add
outsl
rclb
mov
pop
scas
push
cmp
xchg
adc
in
inc
ljmp
aas
gs
fstl
bound
cmp
jecxz
lea
rclb
inc
notb
dec
cmc
pop
add
lahf
jp
scas
jle
cld
push
adc
out
xchg
jle
sbb
mov
in
sub
jge
lods
call
divb
icebp
cmp
xor
cs
jmp
cmp
adc
push
insl
int3
int3
inc
jecxz
adc
xor
lahf
pusha
cs
shll
ss
lods
cmp
sbb
xchg
inc
lock
pop
pushf
sub
mov
ja
mov
or
xchg
fwait
clc
imul
mov
push
aaa
out
mov
jnp
xor
mov
imul
mov
mov
jnp
push
adc
jne
aad
jmp
fcompl
jne
fwait
push
cs
subl
out
leave
out
sub
ret
pop
outsb
leave
push
fs
aam
mov
or
insl
rcl
adc
je
adc
mov
sbb
cs
jg
push
lcall
mov
popf
inc
outsb
sub
sbb
pop
pop
pop
mov
push
lds
lods
fwait
add
inc
add
mov
test
lods
push
fdivrl
fcomps
nop
inc
or
mov
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
add
jg
adc
js
scas
mov
xor
and
jb
adc
mov
mov
movsl
or
insl
inc
fimuls
inc
dec
scas
enter
addr16
xor
mov
sub
icebp
mov
js
jae
scas
mov
shll
xchg
dec
aam
inc
loope
gs
cmp
fistpll
ss
push
xor
mov
jo
lods
inc
xchg
jg
pop
pop
or
ja
pushf
push
jnp
or
jae
cs
pop
add
int3
flds
cli
or
jle
repnz
and
jnp
jmp
add
dec
shrl
fidivs
sbb
lahf
and
pushf
jne
stos
mov
outsl
mov
cmp
adc
mov
repz
pop
fs
push
iret
and
xchg
push
pop
sbb
xchg
and
dec
sbb
jg
jp
adc
in
ljmp
cli
ljmp
jle
mov
pushf
mov
mov
adc
or
push
cmc
or
inc
ds
push
dec
sbb
btc
sub
enter
pop
sbb
subb
adc
jle
out
cwtl
push
push
nop
xor
jbe
xchg
xchg
inc
mov
cmp
pop
jmp
lahf
jp
or
je
sbbb
xor
jle
adc
xor
divps
cmpsl
mov
sub
push
fldt
jge
pop
sbb
mov
push
xor
xchg
stos
es
ljmp
sub
jl
adc
xchg
imul
mov
lahf
jnp
insl
fildl
mov
and
in
add
xchg
daa
fmuls
pop
xor
fs
push
lock
push
and
mov
ja
int
mov
arpl
dec
xor
jl
andb
add
roll
jmp
int
int
rcl
int
cmp
outsb
and
loopne
js
jle
js
rorl
xchg
sti
push
lock
mov
rorl
lods
xor
test
sbb
fs
decl
in
fimuls
daa
cmpsb
jp
mov
sub
mov
stos
pop
mov
xchg
imul
addb
jge
pushf
lret
sahf
out
jmp
pop
arpl
xor
cli
jge
leave
inc
loopne
ret
mov
jg
pop
jae
test
sub
jl
fisttpl
pop
and
adc
gs
push
vucomisd
mov
fsubrs
sub
mov
jl
pop
pop
imul
leave
sub
sub
lds
adc
int
popl
or
negb
in
je
fcoml
das
int
outsl
jbe
mov
jmp
xchg
dec
xchg
xor
mov
jge
test
enter
jns
or
nop
cwtl
lods
fildl
cs
xchg
out
jae
dec
sub
in
mov
inc
xchg
sub
jo
stc
adc
add
xor
pushf
icebp
sub
scas
pop
pop
data16
sub
sbb
lds
push
sbb
sti
or
push
loop
dec
pop
push
jne
int
and
jmp
es
leave
aad
and
clc
out
fimull
cmp
xor
add
cwtl
lods
push
nop
adc
aas
adc
aaa
and
jns
jae
out
scas
jb
add
push
pop
rcrb
sub
test
push
sarl
xor
adc
mull
pop
jns
ljmp
in
dec
outsb
xor
cltd
in
adc
gs
mov
call
jae
lds
std
dec
jmp
popf
pop
jbe
and
mov
push
inc
rcr
add
push
mov
fstps
add
scas
adc
inc
xor
notl
js
push
enter
cmp
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
lock
js
jle
js
mov
es
fs
sysret
aam
xchg
mov
xor
xchg
nop
add
mov
and
out
mov
ficoms
cwtl
push
jge
push
and
cmp
pop
jae
mov
adc
stos
xor
and
pushf
sbb
xchg
lret
mov
xor
adc
mov
in
push
out
push
sub
or
je
scas
les
lret
sbb
pushf
flds
stc
cmp
cmp
cmp
cli
adc
cmp
movsb
mov
int3
add
jge
lret
xorl
cmpsb
inc
xchg
aad
jmp
mov
shlb
int3
sti
xchg
and
nop
lods
add
sbb
mov
shrl
les
mov
and
sbb
insl
push
add
inc
fcmovbe
lods
xorl
out
fbstp
add
and
test
scas
cmp
adc
pop
inc
sbb
jl
scas
jmp
dec
stos
in
inc
popf
clc
sub
sub
pop
xchg
dec
mov
xlat
and
xchg
bound
cmpsb
mov
mov
int
aas
loop
jae
out
cwtl
adc
ficompl
add
daa
push
test
mov
or
test
adc
ret
add
and
ds
cmpsl
test
stos
mov
inc
mov
dec
ja
mov
add
pop
nop
ret
scas
cli
push
mov
or
xor
int3
jg
sub
jmp
outsl
repz
pushf
mov
mov
mov
cmp
popa
xchg
lds
cmp
stos
cmp
push
cmp
push
add
pop
cmp
push
mov
fcoms
stos
sub
cltd
fsubr
outsl
out
fsubrp
sti
pop
call
test
ds
xlat
sbb
xor
jmp
enter
iret
rcl
mov
out
mov
adc
js
daa
mov
inc
lock
mov
cmp
sar
adc
cmp
jne
dec
into
rcl
mov
xor
mov
jno
loope
sahf
sarl
adc
pop
shl
push
fwait
pop
mov
jnp
addr16
arpl
stos
notl
inc
fistpl
jg
fadds
adc
cmp
cmc
mov
mov
mov
pop
pop
adc
fisubrl
int
mov
insl
sub
or
push
bound
mov
mov
ret
shlb
xchg
js
test
or
add
cmp
jae
leave
les
pop
lds
in
adc
pusha
daa
aam
sahf
ror
and
in
mov
scas
test
or
xchg
sbb
pop
stos
pop
push
xlat
push
repnz
sti
mov
imul
sbb
or
inc
or
mov
pop
cli
jge
pop
insl
xor
add
pop
sub
or
pop
ficoms
push
jle
pop
inc
cmp
aas
popa
mov
hlt
insl
in
inc
xor
lret
or
cmp
in
in
jl
test
dec
shlb
inc
lcall
jge
mov
imul
lea
nop
mov
mov
icebp
cmpsb
lret
sub
mov
popa
shrl
inc
push
sub
mov
jns
mov
push
out
mov
push
pop
insl
fbstp
inc
stos
je
pop
leave
test
int3
push
mov
loopne
sbb
fisubs
shll
sub
int
xchg
cmp
jns
inc
dec
dec
or
inc
xchg
call
sbb
lock
ret
dec
or
scas
hlt
cmc
lret
add
and
aas
orb
push
pusha
cmc
adc
imul
add
inc
cmp
push
push
enter
es
add
inc
leave
mov
mov
xor
jne
mov
xchg
cltd
push
xchg
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
pop
fs
mov
jle
js
cmp
pop
das
adc
push
subb
imul
ss
cwtl
xchg
bswap
les
add
sbb
sbb
imul
cmpsl
lea
pop
insl
shl
test
fcoml
or
push
mov
icebp
test
jno
lahf
mov
or
xor
enter
stos
js
movsb
pop
sbb
inc
sbb
inc
rcrb
xlat
fcompl
ja
lds
ficoms
aaa
test
or
cmpsl
inc
mov
imul
push
sub
addr16
call
jl
push
xchg
or
xchg
fdivl
arpl
cwtl
mov
mov
adc
dec
add
and
inc
in
dec
jmp
xor
popa
dec
or
cmp
pushf
sbb
push
pop
pop
push
xchg
xor
jmp
jbe
and
adc
pop
jbe
andl
pop
mov
jg
push
mov
jne
imul
movsl
lcall
fdivrp
push
dec
sbb
cs
add
mov
std
fidivl
xchg
fisubrl
imul
pop
mov
cmc
scas
inc
mov
repz
xchg
popf
aad
cmpsb
push
mov
dec
inc
sbb
xor
repz
xchg
adcb
stc
out
cmp
aaa
add
xchg
cs
inc
jl
pop
and
xchg
lock
sub
or
or
lahf
sub
or
jge
add
cli
cmp
cli
cmpsl
xor
aaa
enter
mov
dec
jg
sbb
mov
mov
subl
or
and
jnp
and
sub
inc
jnp
mov
cmp
aas
or
mov
mov
mov
andb
int3
xchg
jb
add
enter
hlt
decl
add
mov
mov
jmp
mov
xlat
movsb
inc
xor
sub
mov
jle
js
cmp
gs
pop
rcrl
sarl
gs
jmp
bound
movsb
add
dec
mov
mov
pop
inc
ret
mov
inc
fs
xor
loope
mov
xor
rcl
sbb
cmpsl
rep
xchg
es
mov
sbb
lds
or
ss
cmp
xor
ret
xchg
fcoml
dec
scas
outsb
adc
js
in
add
hlt
inc
inc
pusha
mov
mov
out
adc
pop
mov
inc
inc
add
pop
call
jmp
jns
shll
insl
pusha
je
movntps
popf
xchg
ret
and
fcomps
pop
mov
in
fdivp
stc
or
mov
sub
stos
lretw
xor
mov
aas
stos
xchg
das
xchg
stc
xor
push
pop
push
cmpsl
ljmp
pop
lcall
cmp
and
and
push
lcall
arpl
dec
or
cltd
lret
inc
int
xor
or
je
incl
mov
xchg
sub
and
sbb
outsb
mov
je
push
mov
mov
and
sbbl
sbbl
lods
inc
shrl
lods
das
push
js
insl
sbb
addr16
sub
sub
xchg
pop
xor
xchg
push
pop
sub
xor
mov
sub
sbb
jb
cmpsb
aad
cmp
mov
jmp
incl
pushf
sbb
add
adc
mov
mov
mov
jl
int
shrl
pop
imul
pop
pusha
push
sbb
lock
pop
test
movsb
jno
mov
sbb
mov
and
repnz
jbe
push
mov
push
and
movsl
mov
xorb
cmp
pop
mov
or
add
jmp
cmp
rol
jb
dec
pop
adcb
push
out
jg
adc
js
fwait
dec
mov
pop
jb
jg
test
dec
popf
or
mov
dec
test
push
push
or
mov
lret
rcrl
push
lret
mov
pusha
pop
sub
mov
sti
lret
mov
ds
cmp
cmp
jnp
sbb
dec
xor
aas
pusha
add
in
dec
push
lea
push
pop
ss
pop
pop
lds
les
mov
pusha
adc
xlat
push
and
jg
je
mov
data16
xlat
fimuls
xor
push
push
fisttps
aad
mov
jno
xchg
cmc
shrl
xor
arpl
mov
jbe
mov
int3
outsl
bound
jmp
fidivs
xor
sub
xlat
add
lods
jp
in
mov
inc
insb
fidivrl
out
out
gs
jl
ds
push
test
add
mov
fnsave
ss
mov
mov
or
movsb
mov
add
loopne
lods
imul
mov
and
cmpsb
cmpsl
scas
and
popf
in
pop
add
or
bound
mov
test
popa
add
jbe
scas
xchg
mov
stc
js
dec
repz
call
inc
jle
dec
out
jbe
jg
arpl
mov
pop
sub
mov
jle
xchg
and
fwait
lret
lahf
xor
and
ss
js
pop
xor
sbb
pop
bound
xchg
popa
xlat
lods
sbb
adc
in
movsl
popa
push
fdivrp
faddl
cmp
fs
mov
les
lcall
inc
outsl
lahf
xor
pcmpgtw
jae
mov
sub
rorb
fadds
pop
aad
test
fldcw
out
getsec
pop
pop
fdivl
enter
outsb
jne
arpl
popf
lret
xchg
add
jne
mov
jmp
rol
enter
lret
pop
jp
push
scas
subl
js
jle
js
call
dec
rorl
and
pop
sbb
dec
or
popf
into
lods
data16
mov
adc
mov
add
ss
jle
repnz
pop
cmp
lea
xchg
and
cmp
fs
xchg
jbe
fwait
repz
xchg
dec
cmp
jmp
jge
out
adc
pop
and
xchg
mov
mov
adc
lods
mov
mov
mov
and
fmull
cmp
push
mov
mov
test
jbe
dec
js
fs
jne
push
mov
push
rcl
sub
fbstp
mov
insb
pop
push
mov
mov
add
sub
dec
mov
cmp
mov
jne
cmp
inc
popa
sbb
add
or
mulb
mov
in
pusha
rcrb
mov
dec
scas
ss
push
cli
xchg
test
mov
lds
sub
and
into
dec
jecxz
fsubl
in
push
ficoms
lret
call
sbb
add
fldenv
jmp
and
hlt
push
cmp
je
mov
aad
arpl
push
std
adc
mov
daa
push
fidivrs
stos
in
inc
mov
psadbw
or
inc
jmp
fldenv
push
int3
imul
add
aam
stos
ret
ljmp
xor
mov
sbb
movsb
dec
pop
movsb
call
mov
cmp
imul
or
clc
push
imul
divb
je
test
les
sahf
test
xchg
cli
jae
sub
lcall
pop
jo
scas
dec
or
xor
xor
iret
scas
add
xor
xchg
inc
dec
daa
mov
or
xchg
fstpt
add
add
loope
mov
cmpsl
ss
cmp
gs
pop
push
mov
sub
sbb
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
pop
lret
jg
adc
js
imul
fs
xchg
jg
push
sub
repnz
jo
repnz
imulb
bound
repz
xchg
mov
loope
arpl
lcall
imul
movb
ljmp
add
mov
jecxz
inc
xor
shll
je
data16
int3
xchg
cmpsb
adc
fwait
scas
cs
sti
mov
int3
pop
dec
fadd
fcoms
das
add
xchg
mov
in
cwtl
inc
jns
cmpsb
xchg
sbb
and
push
icebp
fadds
daa
rcrb
bound
push
pop
hlt
clc
lds
rcrb
sub
in
fwait
pop
jmp
out
dec
in
pop
jge
adc
pop
mov
gs
out
lods
pop
pop
test
test
pop
lret
cmp
mov
stos
jbe
stc
mov
cmp
inc
f2xm1
add
ljmp
pop
push
sub
mov
lcall
mov
int3
push
xchg
dec
pop
das
xor
pop
or
mov
jl
or
in
sbb
mov
push
push
mov
rorb
xlat
adc
and
mov
jne
into
mov
adc
or
sar
mov
and
or
sbb
clc
ja
pop
push
arpl
mov
daa
mov
test
push
push
fsubp
aam
icebp
mov
cmpsl
outsb
lds
xor
xchg
imul
inc
out
popa
sub
pop
clc
xor
lods
mov
aam
sbb
xchg
les
sub
inc
lock
jecxz
loop
xchg
adc
mov
lret
std
jp
sbb
mov
lcall
outsl
cmc
mov
mov
jns
push
repz
sahf
in
fcomp
lods
inc
movsb
lcall
or
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
dec
bound
adc
idivl
adc
js
xlat
iret
loop
sahf
mov
cmp
jb
shlb
push
jge
jmp
pop
jl
bound
add
push
fwait
pusha
xchg
mov
and
xor
jo
jae
push
mov
psubusb
push
push
stc
cmp
cmp
inc
or
insl
lret
jge
mov
pop
sarl
lods
or
leave
push
mov
fstps
into
dec
data16
inc
ja
ljmp
adc
and
or
outsl
sub
in
pop
dec
out
das
dec
sbb
das
push
xchg
push
cmp
cmp
inc
adc
daa
imul
ror
jbe
mov
insl
or
push
dec
adc
sub
inc
pusha
push
mov
adc
or
and
rorb
push
js
pop
filds
mov
mov
mov
pop
sub
stos
jbe
xlat
fcmovnbe
push
test
es
mov
add
inc
cs
mov
adc
sbb
adc
mov
inc
bound
xor
xchg
push
insl
cld
mov
sub
hlt
inc
push
sbb
das
sbbb
test
shrb
sbb
xor
sbb
lds
sub
pop
fcom
lret
daa
xchg
lahf
add
test
push
pop
xor
mov
fsubrs
mov
mov
enter
cwtl
xor
jp
ret
shll
mov
and
aaa
fmull
fucomi
mov
sti
xor
mov
fisttpll
jbe
or
lock
rol
cmp
sub
jmp
inc
sub
stos
out
icebp
ret
arpl
into
ss
stc
jmp
add
push
mov
daa
mov
or
imul
pop
mov
mov
xchg
lea
pop
jmp
into
iret
into
ror
aad
aad
mov
mov
js
jle
js
in
fdivs
insb
loop
fsts
mov
mov
lret
jecxz
aad
call
push
dec
push
or
sbb
pop
fsts
jmp
sub
gs
ljmp
jl
dec
fistpll
push
push
sub
mov
test
mov
lods
rclb
jae
aad
les
imul
sar
in
xchg
out
and
jl
jecxz
jno
out
enter
stc
stos
xor
add
add
pop
lock
enter
pop
sub
or
int3
mov
call
les
sub
cli
and
xchg
lods
lcall
das
xor
cli
adcl
pop
xchg
insl
lods
jbe
out
sbb
test
bound
adc
js
mov
insl
xor
mov
in
icebp
in
out
testb
cld
push
jbe
cli
add
pop
mov
add
in
icebp
cld
xchg
movsb
lds
pusha
pushf
and
clc
clc
cltd
mulb
push
pop
xchg
push
xlat
jg
out
jb
popf
scas
adc
mov
add
lcall
je
xchg
push
test
data16
nop
pop
ret
loope
jge
push
sbb
adc
in
cmp
inc
enter
fs
in
mov
inc
and
hlt
pop
push
xor
loop
xlat
cmp
clc
mov
push
clc
pop
insl
stc
mov
xor
insl
sub
xlat
test
into
sbbl
clc
jge
jo
sbb
mov
dec
jmp
imul
clc
shrb
add
lea
inc
rorl
fsubrp
dec
mov
into
lock
stos
jmp
xchg
js
rorb
mov
cmpl
rolb
push
push
sub
xchg
test
push
int
xchg
jmp
les
addr16
pop
pop
data16
jecxz
add
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
push
cmpsb
incb
aam
in
mov
inc
aam
jno
xchg
aam
fwait
jecxz
shll
cmpl
mov
add
or
scas
mov
pushf
popa
mov
outsb
mov
out
or
cmp
sub
mov
mov
out
xor
fiadds
sti
std
push
in
mov
xchg
mov
in
in
pop
sub
mov
stc
xorl
jne
scas
push
xchg
mov
test
loope
mov
test
and
cmp
stos
inc
inc
les
enter
xchg
test
jnp
cwtl
ss
cmp
leave
leave
neg
shll
leave
adc
loope
inc
and
es
pop
push
inc
les
stc
mov
xchg
addl
sub
aas
xchg
mov
push
mov
xchg
sub
shl
aaa
les
pop
inc
pop
jbe
pop
es
addr16
call
in
mov
inc
jmp
iret
cli
rcrb
data16
jg
test
dec
pop
imul
push
insb
shlb
test
in
in
sbb
sub
in
jecxz
je
loopne
pop
mov
dec
fmull
cmp
cmp
ret
jbe
lods
sub
pop
loop
mov
decb
mov
lock
dec
sub
mov
inc
pop
stc
in
and
push
lods
rcrb
push
push
xor
in
push
mov
adc
scas
xchg
dec
cmp
les
jnp
and
insl
test
jge
lea
or
imul
jbe
lods
adc
lock
adcl
in
xchg
xchg
std
lds
cmp
adc
rol
lods
ret
xor
insl
pop
mov
mov
or
mov
pop
ja
fiadds
loopne
or
int3
fldlg2
sbb
adc
cltd
mov
int3
das
push
jmp
pop
xchg
jo
stc
mov
sub
and
mov
inc
adc
aaa
lods
mov
add
aaa
pop
xor
push
lods
negb
mov
lds
dec
arpl
dec
pop
test
inc
jp
and
mov
xchg
addr16
movsb
popw
xchg
cld
add
jns
xchg
test
repz
mov
mov
jle
xor
dec
push
or
jae
loop
test
push
movsb
data16
xchg
fmuls
jbe
int3
ljmp
push
dec
in
sub
into
dec
rorl
mov
pop
or
cli
je
sbb
lods
pusha
add
movsl
lret
flds
andl
sub
stos
leave
push
imul
cmc
les
les
cmpsl
lcall
test
test
jmp
mov
mov
dec
dec
lds
dec
and
and
mov
adc
rcrl
jge
lods
popa
iret
movsb
lcall
fsubrs
fsubr
xchg
ret
fs
push
sbb
mov
adc
mov
jge
call
jmp
lods
adc
push
addr16
dec
divps
mov
ljmp
test
lds
dec
xor
mov
mov
dec
push
inc
pop
mov
push
stc
sti
xlat
xor
cmp
mov
and
jae
cmpsl
stos
shll
sub
movsb
in
mov
pop
push
sbb
mov
mov
sbb
movsb
out
mov
fdiv
dec
lahf
mov
pop
push
add
add
movsw
loope
jo
push
test
imul
xchg
pop
and
ficompl
movsl
stc
sub
sahf
jle
lods
xchg
aaa
pop
jno
mov
xor
cli
mov
test
push
leave
mov
add
mov
int
add
add
stc
or
or
pop
mov
dec
jge
push
pushf
inc
pop
popf
mov
enter
js
xchg
mov
subb
lea
int
jg
sti
popa
sbb
adc
dec
jecxz
mov
and
testb
cmc
sahf
imul
outsb
mov
sub
xchg
outsb
imul
test
mov
mov
mov
pop
loopne
xor
xchg
mov
and
jne
scas
xor
dec
mov
loopne
xchg
dec
nop
add
pop
inc
negl
call
jl
stos
dec
push
xor
xchg
in
and
fsubrs
dec
sahf
gs
mov
insb
test
add
push
fnstenv
ror
pop
xor
adc
pop
sarb
out
mov
incl
inc
pop
movsb
push
test
jae
and
outsl
or
dec
hlt
push
lods
cmp
movsl
out
pop
rcrb
cmp
jne
jmp
xchg
or
or
push
jno
icebp
stc
outsb
clc
pushf
insl
jb
movb
xor
stos
pop
jo
xchg
hlt
cmp
and
out
icebp
ljmp
lret
fs
sbb
leave
jmp
mov
ret
notb
test
push
push
fadds
cmp
inc
sbb
sbb
sub
out
jbe
movsl
outsl
pop
sbb
adc
cmpsb
sbb
jnp
movsb
cmp
sub
ficomps
loop
fs
cmp
adc
mov
stos
add
push
scas
scas
loop
popf
lcall
xchg
movsl
mov
mov
push
dec
cwtl
rcrl
pop
shlb
mov
pop
pop
minps
mov
call
push
scas
daa
mov
add
lods
call
out
jb
push
out
leave
jge
pop
pop
es
xor
repz
fs
lods
cld
lret
ss
sbb
dec
push
hlt
sarb
mov
mov
mov
in
cli
out
or
lea
popf
andl
jmp
rolb
cmp
lret
lahf
mov
xchg
aas
mov
adc
cmc
cmp
push
dec
dec
inc
pop
inc
pop
pop
shrb
js
cmp
xlat
addl
xchg
add
divb
sub
sub
test
lock
sub
inc
add
fdivs
das
push
stos
cmp
push
call
in
mov
pusha
jecxz
mov
push
mov
decl
xchg
or
lods
mov
push
add
fisubl
dec
pop
xchg
out
xor
arpl
call
pop
shlb
and
sub
push
cmpsb
and
mov
mov
fisubl
fistpl
jae
dec
or
push
lock
add
test
mov
lds
fs
jno
inc
roll
pusha
xlat
mov
cmpsl
add
mov
mov
dec
movsb
les
test
lock
push
mov
cmpb
test
popa
daa
and
and
fs
dec
out
push
mov
xor
out
jmp
imul
test
adc
sbb
imul
pusha
add
fs
negl
and
test
ret
adc
test
mov
outsl
and
fdivs
adc
data16
push
packuswb
mov
dec
loope
or
xchg
or
out
mov
loopne
test
cmove
jecxz
repnz
repnz
call
outsb
lea
push
inc
int3
mov
xchg
enter
repnz
push
mov
imull
mov
shlb
xchg
leave
test
sub
mov
dec
ja
xlat
movq
inc
arpl
push
mov
mov
push
mov
cwtl
adc
inc
jno
es
sub
cli
mov
into
inc
xchg
in
sub
dec
dec
mov
je
stos
call
mov
call
imul
or
or
mov
cmp
mov
xor
mov
mov
push
mov
adc
pop
fbld
pop
mov
mov
int3
repnz
les
inc
fs
push
dec
aas
mov
arpl
mov
int3
add
ja
lock
or
add
mov
dec
dec
rcr
je
sbb
jne
ss
pop
je,pn
mov
sarb
cmpsb
xchg
pushf
push
aam
xchg
mov
mov
jmp
sub
movsb
daa
adc
int
add
xchg
sahf
in
cmp
movsb
inc
rcrl
and
and
jg
or
pop
lods
popf
and
lahf
mov
cmpsl
shlb
mov
xor
fwait
pop
arpl
mov
rolb
mov
and
inc
ficoml
sub
rcll
cli
fdivrs
jp
cmc
jp
fdivs
aas
in
sahf
mov
jmp
iret
mov
cmp
xlat
mov
mov
mov
daa
mov
and
aam
mov
les
xor
mov
inc
fcoms
repnz
xchg
mov
push
pop
dec
cmp
cmp
fistpll
xchg
les
push
pop
or
inc
pop
adc
mov
out
jg
or
js
subb
pop
jge
negb
push
mov
add
jl
fucomip
imul
shlb
cmpsb
jp
hlt
inc
bound
push
scas
ret
repnz
sarb
mov
pop
sub
pop
dec
imul
cmp
pop
aas
mov
fsts
orb
inc
fwait
inc
or
es
pushf
aas
shlb
int3
js
pop
sbb
push
xor
pop
sti
mov
pop
mov
xor
xchg
fsubs
mov
push
mov
mov
cwtl
dec
mov
xor
push
push
dec
subl
adc
ret
scas
mulb
mov
mov
and
aad
in
cmp
fisubl
sti
lret
mov
sbbb
bound
jle
cs
dec
mov
fiadds
inc
insl
dec
lcall
out
inc
iret
mov
mov
cmc
xor
pop
rcrb
mov
pushf
fdivl
or
stc
hlt
movb
insb
sub
mov
push
mov
lods
inc
sti
movsl
xchg
jl
xchg
les
les
cmp
sub
lods
cmp
test
and
xchg
mov
or
push
pop
push
adc
pop
hlt
mov
lods
xchg
xor
imul
imul
jbe
lahf
xchg
jl
test
dec
incb
sar
jl
push
mov
sbb
out
pop
jecxz
ljmp
xchg
pop
xchg
int
cmp
stos
sbb
fistl
lods
daa
mov
push
imulb
sub
add
test
sarl
add
mov
sbb
mov
sbb
push
adc
push
aaa
sub
jae
jmp
xchg
dec
or
adc
test
cs
xchg
lret
xor
fcomps
or
ja
fadds
dec
mulb
sbb
sub
dec
bnd
lcall
stc
lds
mov
push
mov
cmp
fisubs
push
push
jmp
sbb
sub
dec
sbb
lret
in
jl
outsb
and
rorb
xchg
clc
adc
mov
ds
pop
xor
add
mov
push
in
popf
notl
xchg
add
mov
sub
jno
mov
xor
cs
je
inc
mov
sbb
inc
mov
idivl
sti
test
sbb
mov
cmpsb
mov
cltd
push
jae
lock
mov
dec
adc
data16
insl
mov
push
or
imul
pop
push
pop
dec
mov
dec
push
daa
ja
inc
pop
mov
add
or
inc
mov
mov
pop
rorb
inc
cwtl
repnz
flds
or
mov
subl
fs
cli
dec
lret
mov
cli
jae
sbb
mov
mov
pop
test
mov
cmp
or
lods
imul
mov
sbb
sti
in
out
xchg
gs
cld
std
adc
incl
adc
adc
jle
pop
xor
repnz
ja
jo
push
dec
lret
xor
adc
in
in
divb
jno
out
movsl
jne
cmp
pop
mov
fnstenv
mov
vandnps
inc
xchg
add
add
lret
outsb
and
arpl
jg
scas
leave
btcl
push
mov
push
push
xchg
iret
add
jno
aas
adc
or
or
pop
fsub
loope
inc
clc
sbb
jge
out
sahf
lcall
push
mov
incb
cmp
cmp
mov
adc
add
dec
rcll
and
mov
mov
in
mov
jne
lret
adc
adc
xchg
mov
ljmp
jl
inc
aad
jne
mov
jl
enter
icebp
and
add
loop
xchg
scas
imull
pop
scas
inc
and
cmp
gs
push
lock
loope
pop
xor
pop
mov
xchg
adc
adc
push
add
push
mov
sbb
fwait
ret
cmovo
and
loop
testb
mov
push
push
leave
inc
sti
lds
mov
xchg
js
fstps
or
jmp
test
fwait
lahf
mov
outsb
push
dec
icebp
loopne
sub
add
add
aam
mov
into
int3
push
and
mov
and
add
mov
decl
mov
mov
fldl
notb
cs
xchg
aas
or
xchg
in
mov
pop
inc
inc
shrl
es
cmp
mov
int
adc
or
mov
in
jp
adc
arpl
addr16
and
shlb
fldenv
jge
jle
add
bound
fimull
sar
mov
and
int
push
push
push
dec
sbb
jo
mov
leave
push
dec
jne
fisttpll
mov
decl
pop
pusha
sbb
mov
insb
cmp
cld
sbb
pop
jne
pusha
stos
imul
call
sahf
testl
sbb
rcrb
and
leave
pop
jp
cmp
pop
test
mov
aas
pop
mov
mov
sub
mov
mov
inc
mov
jb
dec
jno
sbb
xchg
dec
leave
dec
dec
es
dec
pop
rclb
xchg
outsb
dec
movsb
adc
leave
xorl
jns
push
lea
mov
and
movsl
cmp
fsub
jle
jae
mov
fildl
pop
ret
imul
xchg
ficoms
lcall
pop
imul
fdivl
jne
jb
dec
cs
imul
pusha
xchg
insl
push
roll
mov
xchg
jl,pt
push
mov
aam
cmp
mov
stos
inc
cmp
and
stos
fwait
shrw
ret
je
mov
push
mov
gs
fiaddl
sbb
push
mov
andb
jae
jne
mov
cwtl
pop
sahf
rorb
jns
pusha
cmc
ret
insl
cmp
in
mov
out
out
jb
mov
insl
mov
pop
adc
add
and
mov
je
test
nop
sub
pop
mov
mov
add
outsb
mov
fisubs
andb
mov
pusha
mov
xor
sbb
stos
test
bound
push
int3
andb
shlb
imul
cmc
out
notb
xchg
arpl
cmc
fisttps
repz
inc
das
push
pop
jb
or
xchg
test
pop
or
mov
aam
bound
iret
fdivs
cmpsb
jno
cmc
frstor
movsl
out
mov
and
add
out
insl
clc
loop
ficomps
mov
fisubl
cmpsb
xor
in
jmp
mov
mov
pop
cmc
lret
daa
daa
add
fldl
fs
inc
dec
hlt
jbe
or
and
jecxz
pop
lahf
and
sar
arpl
xor
mov
mov
enter
jcxz
push
cmp
pop
ficoml
push
lods
cmp
sub
xlat
lret
lcall
mov
mov
js
add
and
push
pop
cmp
jbe
lods
bswap
xchg
mov
and
stc
pushf
cltd
in
sbb
ret
or
sub
jg
pushl
out
loop
rcll
cmc
add
sbb
jl
push
test
jns
test
lods
xchg
mov
xchg
xchg
jb
fstpl
xchg
push
div
aad
mov
or
add
and
repnz
mov
lods
xor
loopne
lods
dec
xchg
pushf
mov
mov
and
rcrl
push
mov
aaa
jo
loope
stos
int
roll
lea
mov
jl
rorl
push
push
and
fldt
xor
test
pop
ret
add
aas
adc
pop
sarl
cmc
push
mov
push
fidivrl
xlat
aaa
jo
and
pop
or
movsl
fs
lods
pop
or
pop
jecxz
xlat
cmp
cmp
repz
mov
adc
mov
xchg
aas
call
xlat
sbb
pop
iret
pop
clc
std
or
adc
testl
jnp
cmp
sbb
repnz
fnstsw
leave
iret
push
mov
rol
les
inc
jne
xor
add
inc
dec
dec
pop
pop
push
sub
xchg
nop
cltd
or
nop
add
xchg
add
les
es
mov
in
mov
iret
inc
adc
push
mov
push
mov
sbb
lahf
fcom
xchg
into
pop
dec
out
icebp
xor
lods
outsb
inc
add
sbb
mov
push
push
daa
out
fsubs
insl
fwait
and
jg
rcr
icebp
fwait
in
adc
cmp
dec
scas
stc
pop
dec
xchg
or
fdivs
fdivrl
pop
repz
adc
outsb
jo
push
mov
mov
adc
inc
jp
jl
xor
mov
decb
cmpsb
call
mov
sub
imul
mov
adc
shll
ficomps
jbe
sub
sub
mov
imul
dec
add
loopne
xor
sbb
stc
inc
add
test
and
sbb
movsl
fwait
rcrl
fdivl
adc
int3
lods
aam
les
daa
insl
xlat
fiadds
push
mov
ljmp
mov
mulb
pop
jle
jl
xor
mov
popa
push
push
xchg
xor
xchg
xor
add
popa
xchg
in
and
in
out
aad
cmpsl
jge
cld
orl
enter
lret
int3
mov
loopne
mov
jae
jge
adcb
mov
out
iret
jmp
adcl
mov
mov
loopne
push
sahf
scas
mov
mov
test
cmpsb
and
add
jl
adc
jp
add
inc
adc
das
pop
repz
rcll
leave
push
add
fs
lret
cmp
push
loope
cwtl
push
gs
iret
test
pop
mov
ret
popa
das
imul
andl
mov
push
adc
imul
and
imul
dec
cmpsl
lods
ljmp
push
jmp
add
cmpb
xorl
shl
mov
ret
das
sbb
adc
adc
in
stos
sub
push
shlb
mov
repnz
pop
jne
cwtl
mov
and
pop
fs
mov
push
mov
cmpb
jecxz
fiadds
mov
ret
cmpsl
sub
es
dec
cmp
movsl
push
or
pop
xchg
adc
pop
arpl
jmp
mov
mov
int3
fbstp
data16
mov
jl
and
adc
sub
ljmp
ret
mov
test
mov
mov
jnp
repnz
ljmp
pop
add
pop
cld
cmc
out
mov
repz
or
inc
xor
in
repnz
jecxz
push
mov
iret
stc
lds
ror
mov
dec
in
adc
or
dec
pushf
push
je
aaa
inc
into
push
xchg
cmp
adc
lcall
or
push
lret
mov
push
xchg
imul
xchg
mov
stos
cltd
dec
add
sahf
ljmp
nop
out
xor
cmpsb
mov
mov
sbb
pop
enter
jo
sub
xchg
in
leave
popa
xlat
jno
pop
lea
add
movsb
hlt
in
int3
mov
push
add
fldenv
pushf
xor
pushf
repz
dec
mov
dec
cmp
enter
das
add
inc
and
dec
inc
push
mov
stos
xchg
inc
jge
incb
aas
cmpsl
push
idivb
adc
mov
sbb
push
insb
mov
call
jecxz
out
xchg
lea
cmp
cmpsb
int
push
cli
sub
mov
fisttps
xor
xor
jbe
ljmp
sti
int3
pop
rorb
push
dec
push
cmp
lods
cwtl
cmp
mov
push
lret
push
bnd
ficoml
gs
icebp
mov
mov
test
test
aad
scas
pushf
dec
cltd
mov
les
fs
mov
mov
xor
pop
negb
push
mov
aaa
sub
dec
dec
adc
repnz
icebp
fbld
negb
subb
mov
mov
push
push
dec
imul
aad
lret
les
shl
push
into
leave
imul
ret
sbb
jb
mov
ret
push
enter
shlb
bound
sub
je
sub
pushf
push
popw
scas
add
iret
inc
mov
sti
pop
fwait
lods
add
jns
std
roll
and
cli
sahf
fwait
sbb
andb
pop
rcpps
dec
xchg
jbe
mov
or
xchg
pop
cli
aam
pop
push
call
jmp
in
jle
movsl
lods
iret
cmp
out
mov
jne
test
mov
cmp
jmp
repz
mov
fisubl
adc
mov
mov
fisttpll
inc
jmp
mov
popf
hlt
data16
adc
jge
xor
lods
dec
les
jle
lcall
mov
mov
mov
nop
lret
fnstenv
adc
sub
jae
push
xchg
xor
fisubs
xor
cli
inc
ret
imul
leave
sbb
jle
icebp
int3
cmpsb
mov
lds
cmpb
xchg
int
lcall
jge
inc
out
test
clc
daa
mov
sbb
shlb
xchg
movsl
adc
dec
dec
jo
and
aam
inc
outsl
shrb
sarb
xor
mov
xchg
adc
test
xchg
push
in
loope
mov
mov
mov
jno
adc
insl
pop
ds
inc
aaa
mov
mov
or
sub
arpl
jmp
cmp
xchg
mov
movl
sub
aad
movsb
adc
dec
sbb
in
and
push
push
in
push
and
mov
movb
outsl
sub
and
inc
mov
or
ror
and
and
add
dec
dec
dec
inc
dec
sub
test
add
and
mov
add
xchg
fcmovnbe
into
mov
dec
mov
out
sub
adc
xchg
adc
divl
mov
cmc
dec
movsl
lock
xchg
subl
xor
sbb
dec
cs
lret
leave
cmp
sbb
scas
test
cld
add
push
push
aas
roll
test
push
fcmovbe
xchg
je
dec
or
push
mov
pop
mov
in
lock
dec
out
adc
rcrl
mov
shrl
and
lcall
or
cmp
fdivrs
or
int
add
out
xchg
iret
ljmp
push
call
dec
outsl
fdivrs
and
notb
dec
inc
test
sub
js
mov
popa
je
xor
testl
adc
jecxz
dec
orl
sub
sbb
test
repz
add
jo
or
mov
icebp
xchg
xor
push
sbb
xchg
mov
mov
xchg
jle
dec
int
jge
lock
or
mov
lahf
mov
adc
dec
iret
mov
jmp
jo
shl
mov
mov
cmp
rep
enter
mov
imul
aad
ja
pop
les
addr16
pop
and
mov
sahf
xor
inc
pop
test
in
pop
scas
xchg
sub
aas
pop
std
lret
pop
and
ds
cmp
pop
jmp
fcomps
sub
push
jp
mov
out
mov
into
sub
mov
cmpsl
mov
jbe
push
mov
insb
jecxz
xchg
or
test
dec
test
lahf
cwtl
cmp
push
cmp
sbb
add
stos
repnz
repnz
movsl
or
insb
daa
cmpsb
leave
scas
pop
sub
packssdw
or
adc
imul
dec
fstpl
mov
mov
arpl
pop
fwait
pop
bound
jno
mov
addb
fucomip
push
jl
xor
jmp
jbe
xchg
mov
add
mov
sbb
xor
adc
push
nop
cwtl
int3
ljmp
not
stos
and
xchg
lods
test
out
add
scas
enter
nop
fidivs
mov
inc
xor
jl
popl
gs
and
inc
scas
ror
shlb
movsb
in
add
xchg
lds
in
xchg
dec
pop
out
push
sub
mov
jno
pusha
sbb
dec
xchg
fldl2t
imul
mull
mov
daa
or
les
fdivrs
mov
call
in
sahf
adc
inc
lock
mov
mov
sub
aad
or
mov
iret
and
ret
sub
mov
data16
cmp
lds
mov
in
insl
sbbb
lahf
inc
shl
pop
or
test
aas
mov
adc
ret
pop
stos
sub
cltd
cmp
call
outsb
lcall
clc
outsl
rcrl
shr
mov
shl
outsb
inc
lea
std
icebp
shr
jge
cmc
inc
icebp
popl
adc
xlat
out
scas
xchg
jb
out
cmp
pop
mov
jge
jnp
loopne
fwait
stos
mov
testb
es
fcmovu
xchg
lahf
lahf
push
shl
shlb
mov
adc
xchg
mov
fs
pop
adc
pop
cwtl
and
xchg
scas
jnp
lret
or
jne
xchg
inc
xchg
mov
mov
fnstsw
mov
jbe
mov
push
sti
sub
add
adc
mov
or
push
jle
cmpsl
les
mull
aam
andb
sbb
dec
jmp
insb
xchg
cwtl
in
cmp
push
aaa
fldt
test
hlt
in
mov
push
std
or
js
insl
mov
aaa
scas
dec
leave
aad
add
aam
cmc
int3
jbe
mov
in
cmp
jg
pop
sbb
out
cmpsb
dec
sub
sub
fsubr
push
lods
fistl
and
cmp
sbb
insb
lods
insl
pop
xchg
xlat
mov
or
xchg
mov
jne
shl
shrb
mov
in
popa
dec
sub
cmpb
and
fsubrp
inc
fnclex
and
stos
in
inc
in
nop
cmc
cli
and
cmpsl
push
lods
stc
and
xlat
sub
movsb
testb
jb
sub
jne
cmp
xchg
jbe
add
test
pop
pop
add
mov
test
pop
das
enter
aas
mov
mov
dec
aaa
push
jne
test
push
cmp
sub
imull
fidivl
jns
dec
outsl
jge
mov
jno
and
bound
cmpl
fadds
lds
or
xor
fs
inc
fcmovnb
hlt
test
or
orb
mov
ficomps
or
fisubl
pop
push
lret
loopne
mov
dec
inc
imulb
outsl
mov
xor
sub
movsl
and
add
push
adc
push
es
adc
imul
xchg
mov
mov
sub
jge
mov
mov
bswap
jne
mov
ja
mov
push
hlt
sarb
icebp
test
mov
jle
insb
aam
inc
inc
andb
int
jnp
sbb
fsubs
imul
dec
ljmp
sub
pop
push
sarb
cmp
add
std
push
dec
lcall
cmpsb
incb
jge
push
sbb
xchg
iret
and
dec
shl
and
push
inc
mov
cmp
adc
sbb
push
in
ss
enter
popa
xor
lcall
fs
jmp
dec
into
mov
sti
add
inc
push
pop
pop
push
dec
cmp
or
jge
repz
add
xchg
add
cmc
mov
scas
lahf
imul
xchg
loop
jg
mov
push
mov
push
xchg
ret
sub
xlat
imul
jae
movsb
sti
jecxz
leave
mov
subb
jle
xchg
mov
jge
adc
fdivs
hlt
add
test
cld
jmp
imul
add
jecxz
pushf
cwtl
int
out
jecxz
xor
fdivrs
or
lods
pop
fstpl
adc
inc
insl
inc
iret
mov
cli
fstp
loopne
jo
and
push
or
std
lret
push
push
inc
out
mov
sbbl
pop
push
mov
jl
out
lods
jns
in
and
and
jg
or
push
xor
dec
fbld
cmpsl
or
xchg
dec
xchg
push
cmpb
cmp
xchg
mov
mov
mov
divb
in
push
mov
mov
push
mov
adc
sbb
ds
mov
xor
fildl
pop
sub
jne
out
je
repz
cwtl
sub
rolb
dec
jecxz
dec
test
and
loope
std
push
cmp
xchg
jg
lods
push
xlat
mov
xor
pop
mov
lods
fsubr
jbe
shlb
pop
test
jo
mov
movsb
jp
leave
sub
loope
fadds
inc
dec
pop
and
xor
ljmp
inc
sti
pop
lcall
bound
xchg
mov
ja
movsb
jecxz
push
dec
mov
add
mov
pop
popf
fadds
popf
shrb
mov
out
mov
movsb
pop
push
cwtl
xchg
fdivr
dec
pop
and
rep
in
pop
cli
mov
repz
cmp
out
rcll
roll
push
push
push
xchg
mov
inc
inc
mov
ret
mov
inc
pop
push
divb
pushf
dec
cli
xchg
cmc
pop
jg
and
jne
mov
popf
jp
out
mov
ljmp
mov
or
mov
adc
cli
sbb
push
pop
inc
shr
lea
add
mov
clc
je
adc
ret
mov
mov
in
in
xchg
test
stos
dec
mov
and
aam
cli
in
jmp
xor
and
cmpsb
push
inc
leave
xchg
mov
lods
rcr
leave
fildl
sub
cli
int3
push
out
inc
aas
popf
and
cwtl
cmpsb
and
popf
nop
jmp
lret
icebp
je
pushf
sbb
sbb
shll
movsl
push
insb
jb
dec
sub
sbb
inc
lock
shrb
lcall
stc
mov
cmp
pop
sbb
les
ret
jmp
stos
jl
add
ljmp
fmull
mov
pop
push
out
adc
sti
mov
jp
cmp
dec
xor
mov
inc
mov
sarl
pushf
sub
cld
rcrb
mov
pop
lea
in
xor
mov
and
addr16
or
cmp
je
cmp
test
xchg
popa
int
mul
out
iret
repz
jle
cmp
xchg
subb
inc
out
lret
sub
mov
test
mov
addr16
outsb
mov
into
rolb
fiadds
jp
xlat
inc
xor
sbb
mov
sbb
loope
inc
lret
dec
into
imul
clc
dec
aad
or
es
repnz
sbb
or
lcall
pop
push
addr16
mull
xchg
addb
movsb
mov
push
popa
cmp
lock
xchg
push
jo
fbstp
mov
mov
mov
jne
jge
ja
test
mov
in
jnp
cwtl
pop
dec
xchg
mov
shrl
mov
arpl
cmp
pop
cmp
data16
das
cmp
dec
add
movsb
in
negb
xor
fsubrs
dec
or
xor
test
adc
xlat
cmp
pop
adc
inc
adc
notl
fmuls
fldt
aad
cwtl
adc
push
loop
jle
fsubrl
roll
mov
dec
mov
bound
sbb
add
jmp
fnstsw
pop
cld
pop
sahf
aad
pop
sbb
dec
mulb
mov
push
rcll
and
roll
xchg
xor
fimull
adcb
popa
loop
pop
fnstsw
mov
cli
mov
stos
test
dec
mov
subb
aad
and
in
xlat
outsb
mov
cmpsb
sbb
or
popf
xchg
inc
and
xor
xor
sub
hlt
xchg
dec
fwait
scas
add
push
dec
nop
popa
push
mov
in
sub
cmp
imul
or
inc
inc
add
xchg
loopne
xchg
fildl
fldcw
daa
or
jge
lods
bound
movsl
xchg
push
lock
imul
fdiv
inc
mov
push
outsl
sti
sbb
je
lret
repz
and
sbb
push
data16
js
mov
adc
cli
bound
xchg
mov
xchg
lds
bound
hlt
lods
fwait
jecxz
sub
mov
js
je
outsb
outsl
addw
add
imul
repz
je
sub
dec
movsb
arpl
xor
mov
pop
ljmp
aam
xor
je
mov
arpl
xchg
pop
cld
sbb
cmpsb
cmp
or
mov
dec
popf
cmp
jp
test
jo
push
mov
cltd
dec
imull
push
scas
cmp
popf
mov
pop
repz
into
and
xor
dec
lahf
dec
ret
sarl
jno
jecxz
or
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
cmpl
add
fcmovbe
fadds
xchg
pusha
pop
ds
rcl
in
push
leave
sub
in
sbb
pop
je
cmp
inc
std
icebp
jns
aam
xchg
mov
or
fistps
loopne
and
cmp
popf
ds
and
add
lds
sbb
add
pop
mov
int
pop
imul
adc
push
mov
das
ret
add
xor
out
lahf
xor
iret
jge
fwait
or
das
xchg
push
lahf
pop
jmp
pushf
mov
aaa
or
call
add
arpl
leave
fisttpll
jmp
pusha
sbb
push
je
mov
idivb
mov
adc
jecxz
bnd
and
xchg
leave
mov
sbb
jbe
rcr
aam
dec
fwait
xlat
dec
cmp
rcll
or
rol
mov
sbb
movsb
lret
xchg
dec
sahf
push
in
mov
loop
mov
and
cmp
je
repz
jp
aam
push
pop
outsb
mov
into
ror
xor
jmp
aas
pop
dec
mov
fistl
scas
jbe
mov
scas
push
test
add
popf
inc
inc
in
jge
jnp
pop
cmp
icebp
inc
and
fwait
andb
mov
mov
sti
mov
insb
jb
mov
in
sbb
lock
mov
mov
adc
testl
sub
mov
xor
shrl
mov
ret
ja
or
push
clc
out
add
stos
hlt
add
int
mov
shr
out
push
jnp
mov
movsb
pop
mov
je,pn
and
dec
mov
dec
adc
mov
ljmp
jae
fcompl
mov
imul
shl
and
xlat
jae
movsb
push
lcall
andl
and
test
sub
roll
not
test
jo
dec
ds
sub
popf
out
xor
mov
mul
jle
js
dec
ja
test
insl
push
bound
mov
and
rcll
jns
add
cs
loop
pop
sbb
lock
movsl
add
adc
pop
xchg
cs
mov
test
jg
fsubs
lahf
icebp
inc
notl
sbb
mov
push
add
jmp
dec
out
lret
ja
adc
sub
mov
xor
je
or
pop
int
xor
lahf
cmpsl
add
aas
out
movsl
cli
add
mov
loop
pop
and
int
xor
dec
mov
fistps
in
cli
icebp
nop
adc
fcomps
mov
inc
add
out
rcrb
xor
fidivs
sub
out
or
test
jge
test
aas
dec
cmpsl
push
gs
and
xor
rcrb
shlb
mov
and
cmpsl
movsb
xor
shlb
ret
in
mov
cmp
pusha
mov
shll
out
mov
pushf
xchg
xlat
and
sbb
mov
mov
inc
fiaddl
lcall
lods
and
shlb
adc
adc
or
clc
mov
cmp
lret
notb
mov
lahf
xor
into
push
and
bnd
insb
lods
fnstsw
hlt
ret
inc
mov
sbb
daa
fsubl
or
pop
sub
into
add
repz
adc
xchg
inc
inc
mulb
bound
scas
cltd
and
aad
push
push
idivl
cmp
pop
in
out
add
jle
lret
or
out
push
call
xor
sub
add
ss
leave
lock
adc
jbe
popw
inc
sub
inc
lcall
orb
xor
cmpsl
push
jecxz
in
pop
out
cmpl
es
int3
es
mov
cmp
inc
fs
jmp
rcrl
ljmp
dec
stos
and
sbb
add
pop
add
and
push
adc
aas
jae
test
mov
stos
jl
jmp
pop
stos
pusha
les
lods
pop
or
mov
pop
shlb
cmpsl
mov
icebp
push
add
sbb
jno
push
sbb
inc
adc
mov
test
mov
aad
leave
jp
das
sub
push
gs
add
outsl
adcl
cmp
cmp
push
movsl
cmpl
cmc
out
mov
mov
sbb
inc
dec
jae
pop
mov
dec
pop
dec
fidivrs
cmp
mov
mov
test
dec
mov
lea
in
iret
add
or
sbb
cwtl
mov
xor
mov
mov
and
stc
or
pusha
push
test
lds
cli
ficoms
ss
in
pop
cs
jne
nop
je
repz
cmc
insl
sbb
and
cmpsl
es
scas
mov
into
jmp
mov
pop
pop
addr16
lahf
sbb
cmp
sub
mov
and
xchg
cmp
xor
mov
ffreep
mov
nop
aas
xchg
loope
xor
insw
dec
call
insl
fucomi
inc
jp
leave
inc
sbb
xlat
mov
sub
test
xchg
mov
data16
mov
and
pop
xorl
inc
sub
shl
emms
testl
sub
push
gs
and
imul
mov
enter
icebp
scas
loopne
and
jne
js,pt
cmp
out
sub
adc
xlat
jbe
mov
arpl
mov
scas
icebp
adc
nop
cmpsb
jmp
adc
imul
lret
mov
sbb
push
inc
pop
pop
pop
pop
push
dec
mov
xchg
rolb
stos
add
xchg
add
adc
in
loop
xchg
mov
out
movsb
pop
xor
out
inc
or
fcomps
push
mov
lds
sbb
mov
fidivs
adc
xchg
push
jae
nop
popa
jnp
stos
mov
test
cmp
shlb
fldz
push
ss
pop
out
push
mov
xor
jno
push
dec
mov
jecxz
xor
cmp
cs
cmp
push
into
fisttpll
dec
push
ds
xchg
push
push
inc
mov
loope
adc
and
push
jmp
add
inc
dec
out
xor
outsb
push
dec
mov
push
pop
or
sbb
test
aas
stos
sbb
jo
fisttpll
xchg
sub
mov
xor
pop
jecxz
pop
popa
test
in
orb
clc
xorb
jecxz
out
jne
sti
cmpsl
stc
adc
ficoml
sub
sbb
ds
pusha
rcr
cmpsb
push
jecxz
nop
inc
fs
push
adc
sub
dec
inc
dec
mov
fildl
lret
add
mov
dec
enter
inc
sbb
rolb
inc
jae
into
mov
xor
stos
cmp
nop
pop
movsl
pop
sbb
scas
sbb
mov
jg
outsb
mov
icebp
pop
imul
push
fs
fldt
je
xchg
roll
mov
mov
mov
sbb
clc
jg
xchg
push
mov
jle
push
dec
inc
mov
ret
pop
hlt
xor
xchg
repnz
mov
arpl
pusha
push
in
or
push
lcall
xchg
ds
sbb
pop
fucom
ljmp
iret
add
lcall
sub
mov
xchg
xchg
arpl
jbe
stos
xchg
ja
mov
adc
jecxz
jbe
dec
jle
insl
mov
test
in
cmpsl
icebp
idivb
xlat
mov
out
dec
inc
jbe
push
gs
popa
mov
mov
lcall
loope
jno
push
or
fadds
lret
loop
inc
lods
insb
int
iret
jecxz
popf
cmpsl
sar
dec
mov
fldcw
jbe
adc
dec
xchg
mov
loopne
insl
mov
xchg
xor
jo
imul
imul
out
scas
dec
hlt
dec
jecxz
popf
loope
sub
pop
mov
mov
mov
test
jecxz
cmpl
and
cmp
mov
aam
les
inc
push
hlt
cs
xor
fisttpll
in
dec
mov
lcall
jle
dec
sbb
mov
sub
fisttps
pop
push
mov
div
fs
jecxz
cmp
pop
vsqrtps
popa
scas
mov
xchg
push
adc
cmpsb
inc
xor
and
push
xchg
cltd
lods
sub
mov
mov
cwtl
xchg
pop
je
stos
pusha
insb
inc
enter
test
adc
cmp
or
push
dec
aaa
fstpt
sbb
inc
cld
fisttps
xor
repz
mov
scas
lds
sub
dec
icebp
xor
loope
cmp
cld
nop
call
push
sub
pop
movb
sbb
cmp
or
testl
add
sbb
cs
in
test
mov
jmp
jmp
ljmp
cmpsb
rclb
dec
lret
stos
stc
mov
xchg
push
mov
and
lahf
ret
clc
out
sahf
mov
fnstcw
rclb
xor
cmpsl
test
popa
adc
or
aaa
mov
lea
mov
test
fcomps
adc
mov
outsb
shll
cmp
out
add
dec
push
push
jnp
ficoml
hlt
add
stos
add
ja
or
push
mov
sti
sbb
addb
imulb
ja
and
nop
jmp
enter
ja
ret
add
cmp
xor
xchg
inc
aaa
mov
cmc
int
dec
mov
cmp
mov
mov
pop
xor
jae
ret
jp
xchg
mov
imulb
cmp
push
xor
stos
aam
fldenv
sub
adc
sub
rorb
and
xor
sbb
jbe
dec
rcrl
fisubrs
and
pop
jne
mov
stos
std
dec
lods
xorl
dec
sahf
outsl
in
lret
jb
mov
add
ficoml
insb
inc
jg
lods
pop
lods
adc
sbb
push
inc
xor
push
jns
xchg
dec
ret
cmp
and
adc
push
add
xor
icebp
out
sbb
dec
and
loopne
xchg
repz
mov
cli
imul
in
push
push
xchg
iret
inc
in
adc
int
jae
sbb
inc
xchg
lahf
xchg
dec
xchg
jle
and
mov
lcall
pop
mov
fmull
cmp
dec
sub
sahf
testb
stos
add
push
fcom
in
jg
ds
arpl
pop
test
inc
sarb
pop
jecxz
insl
sub
scas
adc
iret
stos
mov
insl
jnp
fbld
jp
push
add
lock
push
sbb
xchg
mov
insb
pop
jno
jb
test
jge
bound
fs
outsb
mov
xor
inc
movsl
fildll
mov
cmpps
sbb
aaa
add
lock
in
loopne
es
cs
hlt
lret
in
mov
scas
inc
and
ja
jmp
and
data16
cmp
aad
and
in
xchg
js
test
faddp
pop
clc
aad
ss
dec
and
dec
ss
xor
dec
loope
jmp
push
push
lea
mov
mov
lret
lods
enter
test
loop
sbb
mov
add
inc
push
inc
push
push
push
outsl
pop
mov
orb
add
outsb
les
jmp
gs
lock
test
fnstcw
rorb
xchg
subl
addb
adc
cmp
pop
insb
inc
pop
sub
ja
pop
dec
popa
ds
xchg
mov
neg
in
ja
daa
or
adc
sbb
cli
das
mov
into
daa
mov
stc
cmp
cltd
call
js
sub
push
fisttpll
ljmp
ds
mov
or
cmpl
inc
mov
repz
stos
mov
and
jne
ja
rolb
jno
lcall
outsb
mov
lcall
sub
sub
cmp
aas
cwtl
rcl
enter
mov
pop
fwait
cmp
loop
xchg
and
push
inc
xchg
xor
pusha
ret
pop
mov
jb
adc
scas
cmp
sbb
cmp
addr16
xchg
xchg
cld
rcrl
loope
fnstcw
insl
mov
sub
inc
mov
and
inc
xchg
mov
cmp
or
inc
mov
fsubs
dec
mov
loopne
add
jp
dec
test
push
lods
in
adc
xor
mov
aaa
nop
push
pop
arpl
shrb
xlat
cld
movl
aaa
jle
jae
out
js
fiaddl
lahf
lret
ja
insl
adc
in
and
stc
lret
adc
ds
adc
xlat
js
xchg
add
fiadds
out
cmp
sti
mov
mov
xchg
mov
pop
jmp
cmpsb
and
jl
sbb
push
aam
test
cmp
call
pushf
cmp
fidivrs
or
lcall
push
xchg
jge
fcmovbe
mov
cmc
and
push
jmp
out
out
loope
jp
cltd
inc
mov
daa
test
cli
ret
push
movsb
adc
not
and
jb
in
xor
out
lods
sbb
sbb
sarb
xchg
lret
push
or
fimull
pop
fsub
fucomip
or
push
fs
or
adc
dec
xchg
insl
out
dec
leave
lods
leave
lds
dec
mov
xor
mulb
lds
and
fcomip
outsb
mov
and
jmp
out
or
jmp
mov
mov
ret
pop
adc
cmp
sub
adc
push
scas
inc
pushf
sbb
pop
mov
push
lcall
cwtl
ja
and
and
cmp
sarb
jp
dec
cmpsl
lret
xor
addr16
mov
push
push
sub
mov
rcrl
dec
orl
in
xchg
push
jne
sbb
mov
dec
shlb
mov
lods
clc
shrb
ss
stos
dec
xchg
mov
fisubs
dec
in
test
shll
sub
dec
into
sub
daa
xor
mov
cmp
fcompl
aam
dec
sarl
stc
das
jmp
cmp
inc
shr
insl
xor
push
push
push
mov
sub
push
jb
shll
orl
push
push
dec
cwtl
rorl
mov
clc
out
xor
xor
inc
jne
xor
call
pop
sub
movb
xor
data16
inc
and
es
sub
shrb
or
sub
test
or
adc
cmp
mov
repnz
test
bound
jmp
testl
pop
push
bound
xchg
cmpsb
mov
or
in
enter
jbe
mov
test
clc
ja
xorb
inc
test
cmp
or
scas
add
mov
xlat
js
out
dec
nop
insb
add
nop
js
dec
out
les
push
pop
jnp
in
stos
pop
fldl
insl
jg
sub
add
jae
jle
sub
popf
mov
mov
testl
jp
mov
shrl
sahf
inc
add
sub
int3
inc
popa
pusha
jns
stos
sbb
in
and
rcl
test
dec
adc
and
and
jl
xchg
outsb
popf
add
dec
aam
stos
or
sbb
pop
outsb
adc
push
popa
test
sbb
jns
test
inc
add
bound
lea
xor
push
mov
xchg
adcb
std
inc
mov
je
lret
dec
add
jbe
adc
shr
push
es
dec
and
push
lock
sub
aad
test
nop
lcall
xchg
add
xchg
jle
adc
insb
sub
pop
pop
adc
or
sti
xchg
fldlg2
jb
dec
sub
lahf
xchg
scas
insb
pop
pop
ss
nop
rcrl
mov
out
or
out
lea
stc
cmc
add
and
dec
sbb
adc
mov
adc
stos
sti
movsb
push
incl
fstps
jge
loopne
fs
jp
jo
inc
cmp
test
testb
cltd
or
outsb
test
ret
adc
clc
mov
data16
aam
lret
or
cmp
sub
inc
inc
sbb
push
inc
dec
sub
and
mov
popa
jae
mov
cmpsl
pop
mov
fisttps
scas
push
cmpsl
and
out
lret
or
sti
stc
jae
xchg
inc
pop
pop
stos
ret
cmpsb
xchg
add
test
movsl
fldt
call
addb
cmp
lret
add
pop
shl
and
daa
inc
mov
sarb
inc
in
ja
addr16
stos
xchg
test
cltd
rcrb
pop
cwtl
pop
and
lods
cmp
jle
cmp
imul
mov
push
push
dec
pop
dec
pop
push
stos
mov
stc
xor
mov
mov
add
iret
jno
int
out
xor
cmpl
cmc
xchg
xor
mov
mov
fimuls
in
jb
mov
xchg
loop
xor
mov
or
mov
or
adc
iret
and
pushf
into
dec
add
std
outsl
mov
in
das
xchg
lds
or
xadd
daa
sub
xor
mov
les
or
cmp
fiaddl
shrl
in
sbb
dec
out
int
movsb
mov
mov
mov
dec
adc
or
leave
movsl
and
xchg
ror
jb
mov
mov
shrb
ss
add
mov
cmp
hlt
fisttps
push
add
mov
enter
push
sub
bound
inc
xor
subl
cmpsb
lds
jb
pop
gs
mov
sub
pop
adcl
cmp
lea
xchg
aad
cmpsl
add
test
pop
sub
mov
int3
mov
xor
mov
shlb
mov
mov
cmp
pop
jbe
movsl
mov
shr
cld
in
rclb
int3
loopne
dec
sahf
lahf
mov
test
out
pop
sub
jge
hlt
add
out
loop
push
movsl
jno
hlt
or
sahf
iret
repz
loopne
cwtl
sub
int
sub
lock
sbb
cmpsb
loopne
cmp
std
mov
fldenv
fcomip
rorl
dec
inc
inc
loope
mov
sub
mov
paddd
xor
stos
lret
or
fdivrs
dec
outsb
sub
jo
cmp
ljmpw
loope
std
lods
gs
aad
push
inc
pop
mov
test
mov
out
clc
in
ret
xor
or
lahf
sub
stos
in
adc
pusha
outsb
icebp
aam
pop
es
pop
adc
mov
fimuls
cmp
jl
jae
out
lea
push
fistpl
outsl
adc
and
pop
fsubr
cmc
jp
inc
stos
push
mov
js
sub
call
hlt
sub
mov
dec
xor
popa
outsl
test
jle
xchg
flds
stos
add
mov
or
adc
mov
push
icebp
sti
imul
cmc
in
mov
mov
cli
or
out
jmp
fwait
sbb
push
lret
repnz
push
jle
jmp
xchg
mov
decb
ficoml
into
dec
inc
add
mov
jmp
xchg
push
sbb
sbb
xlat
jmp
pop
xor
push
js
int3
jp
xor
pop
punpckldq
push
pop
movsl
fildl
cmpsl
lea
lret
push
iret
mov
sub
cvttps2pi
data16
mov
inc
sub
push
cmpsl
lahf
cmp
inc
cmp
out
loop
dec
dec
pop
or
jo
dec
mov
cmp
or
jmp
repnz
jae
fistpl
cli
scas
pop
jmp
out
mov
pop
imul
xor
xorb
push
js
jl
mov
imul
mov
pop
mov
fs
mov
enter
or
aad
cmpsl
pushf
sbb
and
cmp
mov
xorb
push
cmp
push
pop
xchg
int
mov
jle
lret
push
dec
dec
pop
mov
or
add
jns
popf
add
pop
or
movsl
mov
ret
mov
test
xor
and
nop
mov
sbb
int
into
loope
ss
dec
pop
lret
in
add
cmp
dec
cwtl
sbb
jp
add
scas
mov
js
repz
je
test
pop
push
pop
out
stos
xor
xor
arpl
ret
sub
out
push
jno
lds
out
xchg
pop
sub
leave
repz
stc
cmp
cmp
pop
mov
mov
pop
pop
ret
xor
add
insb
cld
fadds
mov
xchg
pop
dec
pushf
inc
jno
and
mov
leave
incl
nop
je
push
aam
imul
push
lods
outsl
lcall
push
jl
push
lods
push
leave
dec
xor
sub
rorb
aam
outsb
aam
xlat
dec
ja
into
outsb
push
adc
xlat
jmp
int3
rclb
mov
out
mov
js
and
or
rcr
sbb
popf
mov
pop
popf
mov
lret
inc
testl
cmp
test
jecxz
pop
pop
mov
out
mov
xor
pop
sub
and
shrl
test
or
push
cmpl
add
fmull
pop
cmp
xchg
adc
lods
outsl
je
push
sbb
sti
lahf
xor
or
sbb
fwait
mov
ret
rcr
mov
push
jmp
jno
ret
mov
loopne
fadds
cli
cltd
cltd
arpl
inc
jp
jg
jmp
adc
stc
mov
sub
lock
jae
iret
lret
push
inc
outsl
add
jbe
and
sbb
scas
sub
adc
imul
mov
cs
xchg
ljmp
push
add
or
hlt
adc
addl
cmpl
add
sub
leave
cmp
cmpb
mov
sbb
fnsave
jmp
or
push
scas
jmp
sbb
jne
pusha
inc
or
jl
mov
mov
push
dec
and
cmp
pmullw
dec
cwtl
imul
in
fcomps
insb
lret
add
repz
insb
cli
lret
shll
imul
daa
ficomps
in
cli
inc
xchg
rcll
push
push
mov
int3
adc
movsb
jg
iret
sahf
mov
enter
fldt
call
push
jne
aas
cmp
rorl
adc
mov
jmp
insl
fistpll
bound
cmpsb
jnp
sbb
sub
push
dec
dec
push
pop
push
pop
dec
idivb
jns
sbb
add
xchg
add
and
add
mov
and
dec
push
ss
stc
mov
jp
jb
mov
mov
fdecstp
xchg
sbb
pop
imul
lahf
cmp
iret
or
push
fs
scas
pop
sahf
cmc
seto
sti
in
sbb
pop
push
sarb
rcrl
or
roll
mov
push
mov
ficompl
push
in
repz
scas
in
mov
pop
int
dec
mov
pop
nop
mov
inc
cmp
lret
jl
sti
cmp
xchg
or
jo
in
out
sub
in
xor
out
ja
sub
add
pop
ds
out
iret
pop
lcall
adc
aam
push
enter
or
lcall
pop
outsl
fs
xchg
sti
fisttpll
push
out
xchg
mov
cwtl
jecxz
popf
lret
or
test
iret
cmpb
mov
enter
out
inc
adc
jmp
shll
test
push
addr16
cmp
imul
xchg
sbb
stos
push
push
pop
xchg
loope
nop
bound
fcompl
rclb
aam
jmp
fisttpll
add
push
mov
mov
insb
adc
inc
sub
mov
lods
fidivrl
cmp
xchg
xchg
pop
inc
ficompl
mov
mov
xchg
push
dec
test
push
sub
into
inc
pop
scas
jge
push
xchg
push
push
cmp
test
sub
xchg
mov
stos
das
ss
sub
sub
jp
xor
nop
sub
add
call
test
jle
add
ret
push
lret
fimuls
call
adc
fdivrp
icebp
pop
xchg
stos
filds
push
cmp
fwait
push
xor
sarb
sbb
call
loopne
int3
in
add
xchg
push
rcrb
or
mov
insb
add
cltd
out
pop
inc
sub
das
inc
cmpsl
jmp
dec
cltd
sub
movsb
jnp
fildl
movsb
mov
lret
cld
sub
pop
inc
sbb
add
ret
fdivl
xor
mov
lahf
adc
xlat
fidivs
push
or
xchg
sbb
cmc
and
add
inc
lcall
jmp
ljmp
xchg
sbb
pop
lret
sahf
in
mov
or
and
jl
psubw
lret
push
jae
loop
aas
in
mov
xor
mov
and
movsl
add
xor
sbb
mov
lods
adc
jnp
ds
mov
pop
aas
xlat
and
ja
inc
push
rorl
ds
aas
fidivl
inc
inc
imul
test
ret
bound
ret
cmpsl
adc
add
das
test
lock
mov
ss
cmc
je
pusha
test
pushf
rclb
mov
cmp
mov
add
test
daa
in
fnsave
call
insb
rcrb
or
mov
mov
sub
and
int
or
frstor
and
cmc
mov
and
pop
pop
ds
mov
idivb
loope
mov
add
sbb
aas
imul
scas
add
cmp
das
cltd
cmpsl
loop
push
or
and
sub
cs
pop
jae
mov
iret
jb
leave
add
cmp
gs
jno
mov
xchg
lea
test
cmp
sub
andb
pop
aam
cmp
popa
xchg
xchg
stc
cmp
cmp
and
push
fs
mov
add
xor
xor
mov
arpl
push
daa
sbb
jle
cmp
push
fists
out
cwtl
mov
hlt
mov
jp
ljmp
test
cmc
in
pop
mov
jge
jp
sahf
aam
popa
push
sub
push
inc
imul
sub
orl
pop
mov
jle
adc
mov
ret
xchg
testl
in
dec
inc
xor
addr16
mov
cmp
lret
add
inc
movsl
push
jmp
xchg
mov
pusha
fistpl
sub
in
sti
jae
notb
adc
test
mov
adc
pop
lds
js
fs
lcall
rcrb
cmp
push
mov
xchg
mov
mov
int
fcomi
lea
add
lcall
xchg
adc
xchg
pop
je
mov
gs
jge
jno
or
movsb
xchg
pop
jmp
dec
test
js
outsb
sub
out
xor
out
pushf
cs
push
mov
jmp
mov
outsb
mov
inc
add
mov
or
jno
pusha
add
fcomp
dec
xchg
mov
or
in
pop
es
dec
push
mov
repnz
jne
and
nop
add
push
fiaddl
call
leave
pop
sbb
add
dec
mov
adc
lcall
add
push
jle
push
add
jle
loopne
push
mov
push
push
lods
push
dec
inc
xor
mov
mov
pop
addr16
hlt
cld
adc
nop
jg
inc
pop
aad
mov
jbe
jno
xchg
stos
adc
push
push
jl
negl
dec
mov
ficomps
jecxz
js
and
daa
arpl
gs
mov
adc
xchg
jns
dec
add
stc
sub
sub
push
cmp
mov
dec
jge
adc
mov
inc
lcall
inc
in
movups
shrb
or
popa
mov
imul
outsl
push
les
xchg
push
loop
dec
imul
inc
sbb
fwait
adc
insb
fwait
andb
jns
scas
pop
fstp
xchg
mov
xor
out
ja
mov
outsl
pusha
dec
sbb
add
dec
push
dec
push
pop
pop
mov
stos
scas
popa
sbb
push
add
int
dec
sub
ss
push
xor
xor
sub
push
mov
adc
movsb
loopne
jae
push
push
dec
mov
aaa
adc
xchg
push
dec
sbb
call
or
lcall
push
jae
shr
test
cmc
das
outsb
daa
mov
push
jp
fimull
pop
imul
loope
popa
es
lods
mov
shll
jle
dec
push
pop
inc
stos
ret
clc
jnp
in
mov
mov
or
add
icebp
loope
repz
cmp
fisubrl
dec
testl
idivb
and
dec
iret
xchg
aad
mov
aad
fmul
pop
imul
stos
iret
or
mov
int
das
push
add
mov
lcall
out
or
int3
xchg
pop
push
fistl
fcos
pop
jb
add
icebp
mov
push
mov
push
aaa
cmp
push
sub
in
flds
cmp
mov
mov
je
insb
jo
xor
les
cmp
bound
xchg
repnz
or
data16
mov
mov
inc
xchg
mov
rcrl
lret
into
fadds
jae
push
ljmp
sub
mov
sub
fwait
jno
mov
dec
sbb
ret
jle
movb
sbbl
jg
lcall
pop
push
cmp
rorl
lock
mov
xchg
iret
sahf
mov
bound
inc
xchg
jmp
hlt
push
leave
sbb
mov
cmpsb
popa
shl
adc
into
dec
push
bound
sub
xchg
inc
fistpll
cmc
repz
mov
lret
mov
push
ljmp
push
out
aaa
imul
mov
push
lea
cld
or
jg
xchg
mov
inc
mov
and
dec
xchg
pop
out
rcl
cmp
and
mov
rcll
adc
lds
aas
hlt
lcall
mov
sub
push
xchg
jb
mov
xor
push
add
stc
mov
insb
loop
or
dec
ja
pop
adc
in
stos
jg
mov
or
push
pusha
incb
mov
mov
sbb
popf
clc
xchg
pop
jns
push
iret
sub
out
xchg
out
or
adc
xchg
add
scas
imul
lcall
stos
in
sub
cld
sub
hlt
or
mov
mov
xor
rcl
es
cmp
fwait
add
outsl
inc
cmp
cld
mov
push
inc
push
push
inc
sti
adc
adc
arpl
dec
lahf
jo
inc
mov
add
mov
cld
aas
pop
cmp
inc
xchg
mov
loop
negb
mov
jge
push
push
imul
outsl
inc
jo
sub
jno
inc
imul
sbb
push
movl
sarl
sbb
xlat
iret
js
dec
sbb
xor
or
sbb
and
in
arpl
mov
jmp
in
jnp
adc
pop
jne
fwait
adc
out
mov
pop
dec
aas
pop
outsb
or
jo
mov
dec
sub
jmp
sbb
push
jnp
sub
subb
cmpsl
in
sahf
iret
xorb
pushf
lahf
stos
add
mov
xchg
cmpsl
mov
cmp
pop
test
sbb
dec
sbb
jl
imul
out
sub
pushf
pop
jae
xor
add
jbe
pushf
les
cltd
dec
mov
adc
pop
icebp
sahf
push
or
sbb
leavew
fdivl
push
fildl
mov
sahf
imul
and
jle
dec
fs
mov
push
push
scas
ss
push
es
mov
aad
inc
xor
or
push
outsl
nop
repz
cmpsl
aaa
push
jle
sbb
mov
mov
arpl
xor
mov
cltd
xor
out
nop
adc
cmp
in
push
lret
cmp
cmpsb
fldt
pop
dec
xchg
out
xor
adc
sti
and
jns
push
out
data16
inc
daa
aaa
shr
push
adc
mov
inc
and
xlat
mov
xor
cmpsl
sti
dec
pop
outsl
mov
repz
jb
lods
clc
mov
daa
bound
out
mov
and
insb
xchg
adc
push
ss
or
aam
imul
iret
jp
movsb
mov
into
adc
lods
add
mov
mov
out
pop
xor
std
test
dec
sbb
fldt
pop
pop
and
lcall
loop
dec
jmp
cli
xor
mov
or
pop
rcr
jbe
test
mov
dec
fcmovnu
cmpsb
loop
mov
inc
mov
xlat
lret
jb
cs
repnz
and
das
mov
adc
sub
mov
leave
into
xchg
mov
or
sbb
jge
pop
and
jbe
and
and
sti
test
mov
in
jns
scas
adc
push
sbb
xchg
popf
fs
imul
mov
rolb
insb
sti
ljmp
bswap
popa
icebp
pop
pop
popa
out
mov
push
mov
fbstp
adc
mov
or
sarb
ds
andb
imul
incl
sub
fnstenv
mov
push
jo
mov
pusha
les
call
pop
xchg
mov
hlt
out
jb
lock
lds
mov
xchg
aas
sarb
js
movsb
lahf
neg
mov
xor
push
cmpsb
mov
daa
jmp
shll
xor
jno
xor
xchg
dec
add
inc
pusha
cmp
or
popa
aad
cmc
cmp
sarl
mov
dec
ss
enter
mov
add
push
push
push
inc
push
test
popf
aas
movsb
lret
add
xchg
add
call
cli
xor
inc
insb
xor
subb
mov
enter
add
in
lahf
xchg
lea
inc
mov
mov
es
das
imul
xchg
xchg
fdiv
stos
scas
add
inc
push
xlat
scas
in
push
mov
pusha
mov
add
popa
loop
add
hlt
out
testb
insl
inc
loope
ja
adc
dec
or
pop
sbb
mov
xorl
sub
icebp
mov
test
or
xor
jnp
mov
ret
add
data16
mov
jmp
insl
insl
and
int3
divl
and
hlt
fs
rol
iret
push
decb
les
xor
pusha
stc
jmp
xchg
adc
sbb
mov
das
loop
dec
rcr
push
adc
pusha
lcall
sti
loope
outsl
mov
xor
in
xlat
inc
push
cs
mov
lock
jbe
daa
xlat
inc
test
mov
adc
dec
inc
in
add
ds
daa
daa
scas
mov
adc
mov
push
adcl
and
push
xchg
jp
dec
std
lea
insl
lods
adc
andb
push
gs
or
dec
icebp
push
sub
sbb
or
and
mov
mov
in
mov
xor
out
adc
xchg
push
xchg
jns
cltd
cwtl
scas
mov
movsl
lahf
sub
adc
jle
nop
xchg
inc
push
add
lods
pop
stc
sub
rcl
xor
and
loope
das
gs
into
shlb
aas
movsl
int
rol
imul
and
lahf
aas
mov
xor
bound
lahf
or
nop
shr
fildl
int
or
or
pushl
mov
enter
outsb
and
cmpsw
arpl
mov
fldenv
pop
xchg
gs
sub
in
fwait
lcall
fisttps
sbb
mov
mov
shrl
mov
mov
jecxz
inc
and
or
mov
sub
int
push
cmp
mov
cltd
fdivrs
call
inc
lods
sub
jnp
in
or
jns
push
rorb
dec
lods
jae
xor
and
mov
xchg
sub
adc
pop
ja
loopne
outsl
int
mov
dec
pop
pop
mov
dec
rcrl
xchg
fbstp
nop
pop
stc
xchg
mov
aaa
mov
mov
inc
jl
push
sbbl
push
fisubrl
cmp
testl
in
in
mov
mov
data16
mov
jge
add
adc
xchg
mov
jnp
mov
cmpsl
sbb
lret
or
push
cmp
jne
xchg
in
sub
and
stc
gs
mov
outsl
std
push
cmp
cmpsl
dec
add
dec
pusha
jle
push
push
pop
or
int3
pop
dec
nop
add
mov
lods
idivb
push
pop
lcall
orb
lahf
adc
scas
push
fs
dec
dec
hlt
out
cwtl
ljmp
hlt
fwait
push
and
mov
add
scas
loopne,pn
pop
hlt
addr16
fldenv
xchg
pop
loope
ds
das
xor
dec
jne
cmp
les
mov
setg
ja
ja
clc
fistps
lret
xor
fcoml
jno
dec
cmp
push
or
and
push
mov
push
lods
data16
inc
enter
lods
jnp
sbbl
jg
jle
mov
adc
pop
jge
push
sub
aas
jp
clc
ds
dec
jns
xor
bound
xchg
mov
jnp
add
divl
imul
jnp
inc
mov
enter
pop
jb
sub
stc
jae
in
clc
jmp
adc
pop
xchg
rcrl
fiaddl
lods
mov
jg
pop
in
rcll
rcll
loop
aam
and
add
or
movsl
push
push
dec
ret
adc
mov
or
addr16
loopne
push
das
aas
imul
mov
sub
mov
das
enter
stc
leave
and
ret
or
ss
lret
lahf
inc
jnp
pop
lret
int
push
pop
insb
push
data16
movsb
mov
int
mov
fs
ficoms
sub
jmp
xchg
and
push
sbb
cld
mov
cmp
test
dec
lret
hlt
sti
sub
adcb
das
test
fwait
xor
out
cmp
dec
lcall
push
jmp
ja
mov
push
sahf
xor
push
mov
xor
mov
mov
sbb
repnz
lods
mov
fwait
pop
xchg
fstl
cmpl
enter
mov
arpl
pop
shr
mov
pop
fildl
imul
fistpl
loopne
push
repnz
mov
and
or
dec
jae
adc
shr
out
jbe
inc
int3
xlat
addr16
movsb
xchg
das
daa
mov
inc
std
adc
jle
xchg
pop
mov
aas
jo
popf
adc
add
sub
arpl
dec
lock
lods
aam
bound
je
popa
div
test
push
adc
inc
xchg
aaa
jmp
and
push
inc
inc
fsubrp
mov
xchg
lret
insl
arpl
cmp
jle
push
int3
and
ret
pop
mov
cmpb
das
cmp
adc
dec
fisubrl
xor
add
lret
mov
mov
aaa
test
out
pop
or
and
cmp
jne
dec
sbb
aad
push
xchg
lods
aas
mov
mov
shll
mov
inc
popf
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
fsts
sub
add
xchg
add
repnz
mov
repz
lahf
mov
push
or
jo
sarb
xor
lods
repz
mov
dec
and
imul
insl
loopne
rorb
mov
cwtl
sbb
push
les
andb
xor
js
dec
fld
and
inc
xchg
js
xor
cltd
clc
aam
repz
loopne
lds
sbb
mov
dec
mov
inc
mov
mov
fsubrp
iret
outsb
cs
ds
inc
push
mov
inc
sub
mov
ficomps
sbb
add
nop
lcall
cwtl
popf
fadds
pop
aaa
test
movsb
pop
sub
icebp
jge
fnsave
bound
das
xchg
insb
cs
sbb
pop
loope
loopne
jmp
movsb
sub
dec
pop
cli
cli
sub
iret
in
dec
push
push
xchg
mov
adc
mov
pushf
jno
pop
fcompl
jbe
rcr
xchg
lea
cmp
fisubrl
pop
out
lods
ret
mov
xchg
lret
xchg
push
mov
pop
pop
repnz
aaa
test
and
das
out
stos
mov
fwait
mov
jno
jns
xchg
aaa
or
jecxz
pop
hlt
cltd
movsl
subl
mov
stos
pop
fistps
mov
imul
pop
sub
xor
cmp
loopne
pop
fsubl
mov
daa
ss
and
xchg
mov
cmpsb
lcall
inc
int
sub
shrl
ja
gs
jp
clc
inc
jne
jns
scas
cmpsb
int3
mov
inc
lret
test
sar
and
aas
cmp
int
popa
cmpsl
jnp
pop
lea
push
mul
push
pop
sbb
sarl
push
pop
adc
cmp
pop
shlb
sub
fsubs
jnp
mov
sahf
les
lahf
decb
addl
lods
ss
inc
aas
cmc
mov
dec
mov
rcrl
shll
add
orb
fnsave
icebp
xchg
jmp
movsb
lret
mov
popa
shlb
fs
cmp
pop
and
pop
push
ret
mov
es
int3
lret
inc
scas
or
rol
repnz
fistpl
pushl
xchg
inc
js
inc
in
call
repnz
xchg
jne
xchg
fnstenv
xchg
sub
and
cmp
lcall
iret
bound
test
mov
adc
outsb
arpl
xchg
mov
mov
sbb
ljmp
mov
int3
popf
stos
lods
cmc
pop
mov
lret
in
fimull
xchg
sub
loop
mov
hlt
pusha
cmpb
and
mov
fnstenv
xchg
adc
xchg
data16
pop
adc
push
cwtl
inc
out
or
out
xchg
cmp
imul
or
jne
fsubr
sahf
pop
dec
and
fstps
adc
popf
and
clc
mov
inc
pop
das
fnstsw
repz
add
mov
mov
mov
add
scas
inc
inc
loope
loopne
add
pop
jbe
out
jno,pt
push
mov
jp
mov
inc
cli
in
ret
ficoml
xor
push
add
dec
js
xchg
adc
enter
dec
imul
lea
cmp
fs
sarl
ja
ljmp
push
push
cwtl
out
sub
adc
jge
and
inc
xchg
cmp
inc
xchg
jmp
mov
aam
shrb
fldt
or
stc
jno
jae
loop
stc
fimuls
shrd
xor
divl
jmp
fsubl
pop
dec
sarl
lods
pop
insb
sbb
mov
jns
push
cmp
jnp
add
dec
repz
nop
mov
ljmp
xor
sub
adc
ret
fistpll
dec
fsubs
xlat
and
push
cli
xorb
adc
dec
mov
mov
pop
nop
lahf
xor
and
or
popf
sbb
adc
popa
loope
lahf
scas
cmp
xchg
cmp
jmp
jbe
xor
jg
outsb
xchg
les
inc
mov
mov
sahf
fwait
xor
movsl
loopne
lahf
mov
arpl
xor
fisubl
adc
xchg
and
cs
addr16
cwtl
inc
push
push
cmp
add
out
cmp
int
dec
insl
cmp
cmpsl
dec
pop
fwait
lea
push
aaa
bound
xor
call
cmp
mov
sub
sbb
inc
jno
rol
xchg
into
xor
mov
push
add
xchg
addr16
sub
aad
mov
lods
or
xchg
in
cltd
int
movsl
fimull
sbbb
xchg
dec
das
sub
aam
loopne
fistl
aas
pop
jno
f2xm1
cltd
lock
push
rcrl
xlat
inc
sub
in
out
loopne
sbb
sti
inc
jp
adc
rcll
xorb
push
ret
sbb
movsb
mov
fs
xor
xchg
inc
cmp
sahf
shlb
leave
mov
stc
push
inc
and
shrb
insb
dec
shll
xchg
stos
lods
push
hlt
aad
dec
xchg
pop
sub
aam
fnstsw
cmc
outsb
push
add
mov
add
sbb
rolb
pop
loope
mov
insb
jne
sti
jl
adc
cs
mov
xchg
sahf
aam
jne
inc
inc
or
inc
imul
shlb
pop
cltd
mov
outsb
outsl
and
insl
lcall
sahf
out
shrl
xor
jmp
mov
cmpsw
or
xchg
sbb
dec
sub
add
addr16
das
add
fs
shll
push
fadds
dec
les
fs
hlt
out
push
jae
je
jae
and
js
out
lret
mov
arpl
and
pop
or
test
jl
jns
add
je
aas
or
leave
arpl
jp
push
testb
stc
repnz
test
mov
dec
mov
jns
push
inc
push
push
push
push
push
inc
rorl
popf
mov
add
xchg
add
jecxz
scas
repz
cld
add
es
fdivr
stos
push
sub
push
mov
test
es
inc
hlt
imul
inc
adc
imul
cmp
add
scas
mov
xor
adc
xchg
fildll
enter
and
mov
push
jne
push
in
sahf
dec
stos
flds
les
and
popa
popf
adc
cld
outsb
xchg
aaa
jle
xchg
mov
sbb
lds
adcl
das
jbe
jno
mov
fidivrl
movsl
rol
mov
test
pop
dec
cmpsb
stc
arpl
mov
and
adc
adc
sahf
ds
jo
mov
popa
push
out
lock
mov
push
scas
outsl
outsl
test
or
sbb
hlt
out
mov
imull
xchg
ljmp
pop
out
mov
jp
dec
mov
in
ficomps
mov
jmp
pop
xor
rolb
stos
pop
mov
jb
pop
jl
push
roll
movsb
std
xor
jns
mov
stos
pushf
inc
emms
stos
push
faddp
jmp
jl
xchg
nop
dec
mov
lahf
lret
mov
loop
ja
cmp
jecxz
or
pop
leave
jecxz
mov
scas
jo
inc
lea
nop
mov
mov
xorb
movsb
frstor
fistpl
push
or
push
or
sbb
pop
decb
bound
fcmovnbe
or
jns
enter
shrb
rdtsc
adc
js
lods
loope
sti
pushf
out
addr16
sbb
sbb
daa
movl
lret
mov
mov
test
xor
and
cmp
mov
or
push
pop
sub
or
ds
xchg
outsl
outsb
push
cmp
sub
or
iret
mov
sbb
jge
cltd
lock
es
dec
mov
jg
pop
loopne
mov
pop
jbe
push
adc
outsb
mov
aad
sub
js
lds
pushf
bound
jecxz
std
jbe
fcoms
mov
aaa
fsts
shr
mov
fs
adc
aam
inc
jg
rcrb
stos
daa
push
pop
in
jl
and
cmp
jle
fucomip
mov
push
insb
xor
in
enter
xchg
lock
stos
sbb
cltd
in
jne
repnz
push
shrb
lahf
divb
ficoms
iret
icebp
xor
pop
mov
mov
jmp
adc
orb
cmpsl
ljmp
push
mov
leave
dec
pop
mov
lods
push
or
out
lds
sar
in
xchg
mov
test
or
aaa
add
mov
test
imul
mov
decl
nop
or
push
arpl
mov
popf
ja
je
xor
sub
xor
aas
add
push
mov
dec
dec
es
call
and
mov
sub
cmp
decb
fwait
jnp
push
sub
cmp
dec
jns
ror
xchg
les
scas
sub
fnstenv
test
cmpsb
xchg
add
sbb
and
inc
jmp
cmp
std
mov
into
mov
test
adc
into
xor
or
mov
cld
sbb
aas
pusha
sarb
cli
mov
xchg
push
das
adc
jge
rolb
int
adc
push
push
jbe
or
sbb
js
rolb
cld
and
lods
enter
sub
sbb
ja
mov
in
and
js
lea
add
std
pop
mov
scas
lret
fisubrl
repz
mov
outsb
pop
mov
imul
add
mov
cmc
imul
inc
movsl
mov
cli
xor
xchg
stos
mov
mov
loope
aaa
push
into
js
push
xchg
rcrb
cmp
sub
pop
push
lret
push
out
adc
arpl
hlt
xchg
out
cmc
sub
mov
push
imul
int
imul
mov
adc
test
jmp
out
adc
sahf
je
pop
lock
cld
incb
outsl
mov
add
pop
sub
vcvtsi2sd
mov
or
jo
jle
xor
or
jno
outsb
xor
or
into
cld
xchg
xchg
mov
inc
dec
dec
cmp
push
add
jp
ret
xlat
out
xchg
xor
mov
and
insb
xor
xor
popf
jnp
int3
jle
push
scas
fldl
adc
add
cmp
test
aad
add
pop
pusha
or
aaa
pop
in
mov
xchg
add
loope
cmpsl
inc
xchg
adc
push
rcll
mul
sub
mov
outsl
xchg
jo
push
jne
pop
in
fs
cltd
test
mov
ret
jns
mov
ljmp
cmp
xchg
xchg
cld
pop
inc
enter
jp
add
ds
mov
or
fnstsw
push
sub
je
pusha
xchg
xor
adc
aas
xchg
mov
mov
mov
and
sbb
icebp
jg
lock
mov
push
add
dec
int3
push
es
stos
les
stos
shll
js
leave
outsb
push
push
add
xor
sub
je
adc
test
stc
inc
xchg
out
rorb
push
addl
lret
xchg
dec
pushf
mov
fildl
pop
push
push
push
pop
push
pop
pop
xchg
stos
mov
popa
cmp
add
xchg
add
mov
sub
jno
movsb
lea
cli
pop
mov
fimuls
test
popf
in
adc
leave
dec
mov
inc
pusha
in
and
and
loope
or
fldl
testb
cmc
mov
mov
flds
test
ficomps
pop
mov
push
mov
test
mov
xor
sarb
insb
or
out
subb
mov
xor
lds
mov
cmovno
loope
mov
cli
sbbb
aaa
idivb
sbb
push
cld
pop
shr
je
inc
bound
fs
jae
xchg
push
or
icebp
aas
les
aaa
inc
and
push
jmp
push
sbb
push
cmpl
imul
mov
pop
sbb
nop
jecxz
sub
mov
mov
cs
scas
push
movsl
jge
scas
mov
scas
xchg
mov
lds
fcoml
pushf
xor
popl
sbb
sbb
add
gs
mov
dec
rcrl
das
cmp
dec
xchg
xor
mov
ficoml
int
or
int
cmpsb
mov
cwtl
or
out
dec
or
jg
leave
ret
xor
mov
and
dec
jle
push
xchg
movsl
mov
xchg
iret
aam
dec
or
xchg
cmpsl
in
repz
es
dec
pop
ret
mov
je
lahf
dec
mov
ds
out
lods
mov
mov
push
notl
inc
xchg
out
sbb
dec
mov
or
popf
stos
xchg
call
insb
stos
and
pop
xor
sbbb
js
push
cmp
jns
sbb
aas
sbb
adc
ljmp
cwtl
sub
dec
sub
xchg
mov
inc
andb
xor
cmp
dec
jnp
mov
ljmp
xchg
mov
cmpb
aam
xorl
mov
dec
movsb
sbb
mov
sahf
aaa
dec
rcll
xchg
jbe
lcall
lcall
shll
test
cmp
aas
sbb
bound
pusha
push
jecxz
pop
jecxz
bound
aam
fsubrs
xchg
sub
sarl
lods
xor
push
dec
repz
dec
insb
movsl
fsub
sub
pop
or
stos
lret
inc
xchg
or
xchg
and
leave
enterw
pop
xchg
jnp
mov
lods
inc
popl
movl
inc
out
push
imul
das
mov
mov
sub
pop
add
mov
jp
xor
loope
in
sbb
mov
mov
lcall
stos
jecxz
push
xchg
stos
cmpsl
sbb
movsb
adc
inc
aaa
stc
pop
in
mov
stc
dec
cltd
lea
test
push
pushf
xchg
iret
inc
cwtl
and
scas
xchg
jg
fwait
xor
xor
dec
jl
cmp
jbe
inc
enter
fwait
loope
sbb
dec
cmp
add
jnp
mov
int
push
xor
jecxz
mov
pop
out
sub
lret
mov
ljmp
sub
mov
lods
mov
push
sti
icebp
mov
inc
int
outsl
mov
mov
test
enter
dec
out
mov
cmp
popf
hlt
xlat
repz
jmp
xchg
in
cmpsb
hlt
nop
or
fiaddl
add
jnp
inc
xor
add
adc
test
test
mov
lock
aaa
cs
data16
mov
mov
dec
adc
sti
mov
lods
pop
cli
xor
sub
jg
int
into
outsb
fsubs
loop
fisttpl
xchg
scas
mov
jmp
push
pop
and
pop
mov
scas
dec
xchg
jns
add
and
push
xor
push
stos
cltd
jno
in
xor
xor
mov
shrl
mov
les
andl
lret
cmp
das
out
fs
out
mov
repz
mov
iret
xchg
xor
and
xchg
lods
pop
pop
das
mov
adc
push
xor
pop
adc
cmpsb
aad
cmp
repnz
fadds
cltd
fdivs
cmp
jge
xor
mov
imul
test
push
push
out
sarl
cmp
aaa
stc
mov
mov
aaa
les
cld
cmp
add
push
push
pusha
cmp
sti
push
dec
je
insl
mov
adc
dec
xchg
jne
mov
and
push
not
or
xchg
push
ret
cmp
mov
pusha
jg
mov
in
push
insw
cmp
adc
loope
jle
clc
divl
mov
nop
inc
pop
or
data16
arpl
mov
movsb
push
sbb
or
lds
rorl
pop
mov
cld
dec
je
pop
jbe
repz
scas
insl
push
cs
mov
xchg
cs
cs
mov
sti
arpl
dec
mov
xchg
pop
push
xlat
xchg
push
dec
mov
push
pop
adc
adc
cmpsb
mov
outsl
ss
divb
mov
jae
mov
sbb
xor
push
xchg
sahf
insl
adc
stos
pop
lret
movb
cli
sbb
in
ljmp
ss
add
mov
xchg
mov
enter
lret
add
shrb
nop
rcrb
sub
stos
mov
pop
mov
add
push
jns
lcall
xchg
xor
out
sarb
loopne
inc
xor
lahf
subl
stos
stos
dec
inc
addb
scas
imul
sbb
sbb
pushf
out
aad
lods
test
test
cltd
popa
sti
stc
jns
jmp
aaa
mov
aaa
push
in
shlb
jo
sub
add
push
push
pop
push
dec
pop
idiv
xchg
inc
in
add
aam
jbe
jnp
push
fisttpl
repz
sub
adcb
inc
ret
fadds
sub
fistps
negl
stos
sub
mov
jne
nop
inc
test
ret
push
lods
es
adc
add
mov
jp
push
vpand
mov
push
popa
xchg
out
dec
mov
jl
or
jbe
nop
lods
inc
fisubrs
and
sub
aas
movsb
add
ret
push
mov
mov
jmp
or
outsb
dec
outsl
or
dec
adc
mov
mov
xor
and
mov
xor
int3
cld
mov
pop
mov
mov
pop
sub
in
hlt
mov
hlt
sbb
test
cmp
cmp
xor
movsl
das
clc
lret
mov
pop
lea
pop
add
sub
jbe
outsl
loopne
clc
stos
sqrtps
lods
pusha
icebp
mov
paddsb
dec
fisttpll
lret
js
xorl
inc
dec
pushf
popa
pop
dec
fldenv
mov
hlt
dec
mov
rorb
dec
movsb
mov
push
stos
push
sahf
add
xchg
xchg
out
jmp
and
inc
sti
mov
cmp
inc
aam
scas
push
fsubp
xchg
dec
jmp
adc
out
sub
or
dec
xlat
fcmovbe
jmp
mov
mov
cli
bound
jmp
notl
pop
push
or
test
xchg
cmp
dec
arpl
and
shlb
jg
je
hlt
mov
jns
dec
and
repnz
cwtl
push
push
ds
mov
cmp
pop
std
sti
mov
stos
mov
mov
jle
xchg
xchg
shlb
ss
lds
mul
out
aas
sbb
int
mov
pop
stos
pop
dec
adcl
enter
leave
lods
push
call
mov
bound
jp
and
out
cmp
and
aam
or
mov
push
jb
mov
cmp
jge
scas
aas
out
in
ljmp
pop
sbb
xlat
sub
pushw
aad
rol
mov
cmp
and
jns
and
frstor
mov
in
lock
imull
fs
movsl
rcrl
daa
xchg
pop
push
test
sbb
out
loopne
int
adc
mov
imul
and
into
mov
cmp
std
lock
push
or
int3
scas
pop
adc
ja
mov
lods
rcll
movsb
cmpsb
hlt
les
fstps
je
and
mov
xchg
xor
leave
sarl
lret
out
mov
aam
or
sbb
sbb
inc
out
imul
ret
xchg
pop
gs
jb
mov
dec
stos
lods
pop
vpsubusw
jnp
cmpsl
enter
cmpb
and
mov
popa
in
or
mov
repz
out
sti
xchg
mov
daa
mov
cwtl
sbb
and
popf
enter
movsl
add
fs
es
mov
out
mov
pushf
push
iret
mov
dec
rcll
and
jecxz
in
repnz
pop
cmp
and
dec
in
mov
push
xchg
xchg
lea
push
add
subb
popf
mov
in
call
vphaddbw
js
and
cmp
pushf
sbb
and
andb
call
in
daa
sub
and
fisttpll
adc
jecxz
mov
jns
hlt
push
pop
lds
sub
jle
xchg
dec
pop
arpl
xchg
mov
cmp
lock
nop
fiaddl
inc
dec
es
loopne
bswap
jecxz
out
cmp
pop
stos
sbb
lahf
mov
mov
push
lahf
ljmp
ficomps
outsl
inc
test
pop
push
push
mov
cwtl
mov
int
jns
jnp
mov
mov
fcmovb
jb
cmp
shll
in
scas
xchg
in
mov
xchg
fildl
pushf
icebp
outsl
call
fucomp
jne
sbb
mov
mov
jns
mov
sub
pop
in
call
push
mov
mov
leave
in
or
pop
add
lcall
lret
cmpl
jge
out
in
ljmp
xchg
popa
cli
jne
iret
shll
mov
sbb
xor
push
fldcw
and
adc
mov
pop
jg
add
push
dec
cmpsb
push
fsubrl
fwait
pop
add
fsubrp
adc
mov
sbb
add
jae
in
push
push
pop
test
rorb
mov
pop
add
cli
inc
and
gs
mov
inc
pop
adc
test
sub
mov
sarb
pop
and
xor
mov
ret
daa
push
push
push
aad
ret
xchg
cmp
mov
mov
imul
add
adc
or
mov
jbe
fisttpll
sub
cwtl
mov
clc
addr16
add
jl
jno
inc
shrb
outsb
enter
adc
xchg
xchg
mov
dec
ficoml
mov
cs
xchg
movsb
test
fstps
adc
or
inc
in
lods
pop
mov
mov
imulb
ficoms
mov
imul
ljmp
add
push
ljmp
out
push
dec
and
lea
sub
inc
mov
add
inc
dec
movsl
inc
ret
pop
popa
mov
add
aaa
loop
jmp
inc
sbb
mov
popa
decl
cmpsb
jl
repz
fcmovnu
cmpsb
enter
sbb
mov
xlat
into
xchg
mov
xor
or
divb
cltd
mov
stc
cltd
ret
fstps
dec
sub
pop
ja
into
sbbl
add
sbb
iret
cmp
xchg
scas
aas
sarl
inc
pop
inc
pop
pop
pop
mov
push
mov
add
inc
in
add
xchg
add
or
pop
add
adc
lahf
mov
outsb
mov
nop
adcb
add
data16
inc
mov
mov
fmull
shlb
add
sub
cmc
je
inc
and
push
cs
cmp
notl
or
mull
pusha
popa
jbe
jae
sbb
lcall
mov
outsb
lock
dec
js
ds
mov
daa
jg
ucomiss
test
add
hlt
cld
icebp
dec
lds
negl
loop
xchg
lods
test
inc
clc
xchg
jnp
cwtl
mov
jns
std
xor
lret
fidivl
and
jecxz
mov
sarl
repz
mov
xor
sbb
out
add
and
jns
push
hlt
mov
shlb
jle
and
lahf
mov
popa
dec
or
insb
data16
pop
lods
mov
cmc
jg
out
lret
adc
adcl
f2xm1
xor
inc
jle
mov
xor
adc
shrb
out
cwtl
test
dec
mov
and
lock
cmpsb
push
pop
jle
stos
repnz
cmp
sub
jl
shlb
fidivrl
mov
repz
pop
lcall
xor
jl
sti
or
push
cmp
sub
dec
push
rcpps
or
repz
sub
shrl
push
dec
icebp
outsb
jp
loop
jnp
pop
mov
or
jmp
pop
jmp
xor
ljmp
cs
std
sub
scas
icebp
xor
in
sti
add
push
sbb
pop
cmp
xor
fwait
dec
or
sbb
clc
imul
cmp
push
popa
out
inc
push
das
addr16
std
cs
and
arpl
inc
adc
notl
push
subl
pop
push
mov
in
xor
mov
cmp
dec
fldl
adc
lret
imul
cmp
ljmp
ret
leave
ss
push
inc
daa
dec
cmc
int3
or
inc
mov
rorb
pop
pusha
xchg
cli
andb
daa
repz
insb
pop
stc
adc
outsb
pop
ja
push
inc
xchg
xchg
inc
jno
add
stc
push
nop
popa
out
fidivs
jp
lds
adc
in
jb
sub
stos
sahf
leave
sbb
pop
sub
jl
outsl
pop
cs
xchg
iret
sbb
loop
ret
xor
cmp
fldt
push
inc
push
xor
push
ss
stos
roll
inc
loop
fldt
dec
mov
add
push
call
dec
lock
dec
xor
into
cmp
jle
cmp
mov
out
push
xchg
jae
movsl
xor
inc
mov
lea
xchg
xor
shrb
sub
cmp
xchg
jle
adc
lock
out
sub
mov
rcrl
adc
daa
sahf
ret
pop
leave
loopne
add
sbb
cmp
test
mov
in
jp
sbb
pop
pop
adc
dec
test
jmp
cmp
xor
lods
pop
inc
ret
fmull
cmp
lea
shr
sbb
das
jno
pop
cmp
out
sbb
lods
and
adc
dec
rolb
into
pushf
xchg
mov
addl
ljmp
pop
insb
cs
fisubrs
andl
in
cld
sbb
dec
push
jle
push
xor
lahf
enter
enter
xor
dec
pop
les
rorl
xchg
hlt
xor
int
inc
loopne
fisubrs
scas
shrb
call
xor
or
jnp
jo
pop
lahf
scas
lods
test
or
mov
inc
jmp
nop
mov
add
jbe
test
dec
incl
inc
aam
enter
pop
cmc
or
call
push
fimuls
bound
jmp
movsl
cmc
dec
aaa
int
clc
or
addr16
sbb
fs
inc
popf
push
scas
cs
icebp
dec
dec
xorl
pop
cli
lods
cmp
mov
adc
arpl
arpl
adc
jge
fnstenv
sarl
addr16
bnd
push
xchg
ror
add
test
push
call
insb
outsl
or
pop
test
mov
popf
ljmp
pop
or
inc
pop
pop
ljmp
adc
cmp
fwait
pop
ja
js
sub
aam
push
xor
xchg
aaa
outsb
addl
mov
cmp
loop
insb
repz
out
or
loop
jmp
and
inc
pop
mov
aas
std
dec
imul
add
mov
in
movsb
std
fimuls
jns
fsts
inc
in
ret
or
aam
xchg
das
push
jp
mov
and
js
mov
aas
mov
add
jge
xchg
jae
xchg
cmpsb
int3
in
lret
or
gs
clc
sti
jge
and
fwait
and
jle
arpl
mov
xchg
fnsave
mov
cmp
mov
sub
or
out
mov
ret
sbb
add
add
xchg
hlt
clc
frstor
stc
clc
xor
xchg
push
xchg
mov
mov
sbb
or
dec
or
mov
std
inc
sbb
mov
xchg
lea
sti
ret
orb
inc
test
cmova
jmp
or
and
in
cs
mov
mov
cmp
iret
mov
inc
filds
imul
pop
insl
imul
push
cmp
sahf
in
je
mov
lock
pop
shrb
lahf
ljmp
test
adc
negl
mov
iret
push
es
fsubl
push
push
and
daa
mov
lret
add
lods
add
int3
sbb
xchg
push
mov
mov
es
jns
pop
sbb
pop
mov
add
inc
push
pop
push
pop
pop
ss
imulb
xchg
jb
into
repnz
xchg
add
mov
js
mov
sbb
in
loopne
imul
rcll
bound
jmp
xor
sbb
push
int
adcb
ret
gs
xchg
hlt
rcll
loop
sub
jae
imul
or
arpl
fisubrl
out
pop
dec
outsl
xchg
sbbl
jne
jns
popf
fisubrl
mov
add
sub
push
or
movsl
adc
mov
mov
jg
call
sub
jecxz
xorb
cmpsl
js
ss
mov
loop
adc
iret
push
mov
mov
in
rcr
stos
push
out
xchg
cmp
std
push
stc
jae
jno
cmp
cmp
pushf
in
sarb
dec
cld
into
das
aaa
add
clc
jp
lods
dec
inc
scas
inc
pop
lcall
sahf
dec
jno
addr16
mov
adc
jo
sub
lret
hlt
and
xor
ficomps
loop
push
in
es
add
cmp
jge
lods
repz
aaa
mov
dec
in
xor
fnop
mov
dec
out
or
cmp
dec
test
adc
xor
imul
dec
test
push
subl
jno
push
mov
mov
add
andnps
xchg
jae
jae
pop
outsb
dec
xchg
stc
dec
push
mov
mov
mov
popf
scas
dec
adc
add
and
out
inc
adc
les
hlt
adc
cmpsl
divl
jg
xor
inc
test
mov
jecxz
add
mov
adc
push
push
push
mov
aad
and
mov
out
outsl
pop
jge
mov
ret
push
mov
mov
leave
add
shll
inc
fdivl
ljmp
mov
or
je
fisubs
test
or
add
pop
mov
sbb
scas
xor
inc
movb
cwtl
test
cmp
jmp
inc
lea
jecxz
in
ja
inc
dec
lcall
pop
cmp
cmpsl
dec
iret
xchg
or
ja
stc
fimuls
add
lock
xchg
mov
out
jb
and
insl
pop
shrl
je
inc
mov
push
cmp
mov
hlt
inc
stc
lea
insb
xor
or
sub
fidivrs
mov
push
sub
mov
data16
mov
mov
out
nop
dec
pop
aad
sti
jnp
in
mov
sbb
add
popf
bt
je
movsl
mov
adc
sub
xor
negl
mov
test
movl
mov
cli
ret
fldenv
jge
jecxz
iret
daa
xchg
testl
and
dec
pop
mov
and
repnz
iret
test
mov
xor
or
lcall
xacquire
jne
movsb
add
test
mov
test
push
adc
mov
pusha
jo
aam
in
dec
xchg
pop
shll
xor
pop
int3
xchg
xor
mov
xchg
leave
sbb
add
repz
dec
sub
jp
jecxz
pop
jnp
popf
mov
insl
mov
push
popa
pop
push
fstpl
add
add
sti
loope
adc
adc
lret
outsb
ror
xchg
pushf
cmpsb
mov
jg
push
repnz
popf
add
scas
das
lods
or
inc
sbb
xchg
xchg
leave
jl
sub
xchg
lods
mov
mov
out
inc
push
int
fsubrl
out
push
in
jno
mov
inc
inc
adc
movsl
inc
pop
popa
dec
or
push
ss
jnp
xor
incb
sbbb
adc
push
mov
xchg
cmp
subl
dec
mov
cmpsl
mov
jge
fdivrs
jb
arpl
jecxz
jno
insl
sar
sbb
add
sub
inc
out
loop
jno
repz
je
gs
push
add
add
stos
jmp
je
push
push
test
push
push
cmp
cmp
jmp
xlat
xorb
dec
jne
push
gs
mov
in
jmp
and
dec
insl
pop
push
dec
mov
stos
imul
push
mov
cmpsl
daa
sub
jne
and
shlb
pushf
mov
inc
mov
xchg
jge
push
divb
test
loopne
jmp
and
adc
jp
int
loope
jp
shl
jb
xor
pop
dec
cmp
xor
in
adc
out
dec
lods
jle
mov
inc
outsb
pushf
sbb
or
inc
dec
out
pop
or
sbb
xchg
outsb
jecxz
shll
and
cwtl
aaa
mov
cli
xor
push
cld
aas
mov
jns
test
push
mov
jmp
aad
aad
arpl
pcmpgtb
pop
sbb
test
sub
loop
sbb
sbbb
loopne
push
add
mov
and
loop
xor
shrl
mov
jecxz
mov
movsl
or
add
movsb
imul
pushf
sbb
cltd
inc
stos
hlt
fidivrl
cmp
xor
shll
mov
and
stos
fidivrl
and
inc
adc
scas
inc
fwait
pop
enter
jno
mov
dec
mov
dec
repz
xor
xchg
xlat
test
push
imul
push
sarl
fsubrs
adc
pop
add
ja
sti
stos
push
add
sti
mov
xor
sub
mov
aam
sbb
jge
fists
enter
fistl
dec
mov
or
pushf
movb
loop
cltd
nop
inc
sub
jnp
mov
add
inc
pop
pop
dec
push
dec
push
enter
in
aam
stc
add
test
add
dec
cmp
insl
fsubrs
sbb
ret
iret
jnp
addl
aad
icebp
mov
mov
sub
test
lods
mov
lds
sbb
sbb
dec
mov
mov
mov
push
in
cltd
mul
xchg
in
std
mov
ljmp
outsb
or
pop
ljmp
test
dec
cltd
xor
adc
int
xchg
jp
mov
sub
xchg
or
mov
popl
and
loopne
jle
inc
inc
jmp
or
sbb
sub
popf
addr16
inc
inc
sbb
cmpsl
xchg
xchg
aaa
sbb
or
scas
mov
dec
mov
mov
push
and
mov
in
mov
xor
mov
in
and
push
pop
pop
mov
cld
es
stc
pop
lods
push
cmp
mov
nop
pop
xchg
mov
addb
fisubl
inc
outsl
xor
sub
loope
pop
mov
js
add
mov
mov
aas
pushf
fs
and
dec
cmpsb
xor
out
and
rcrl
add
clc
fisubl
cmovge
popa
loopne
mov
pushf
inc
pusha
adc
js
test
sub
notw
sbb
xor
dec
psllw
insb
push
es
mov
mov
shll
out
jno
mov
or
sti
loopne
rcll
aam
scas
pop
es
or
dec
dec
test
jg
and
push
jg
mov
cmp
add
test
xor
inc
mov
repnz
or
fsubl
dec
cmp
ret
mov
fisubs
xchg
stos
dec
stos
std
shl
js
inc
inc
dec
push
push
gs
adcb
in
sbb
mov
dec
add
shr
negb
lret
lahf
outsl
lods
ficoms
inc
icebp
icebp
add
leave
test
or
xchg
daa
inc
fildl
imul
sub
fsubp
bound
nop
pmuludq
push
daa
dec
stos
inc
shrb
sub
adc
outsb
out
pcmpgtd
aas
into
popf
daa
mov
out
loop
push
aad
push
add
test
in
mov
inc
and
repz
and
inc
shll
out
repz
push
daa
cmpsb
sub
sbb
stos
cmpsw
stc
fwait
aaa
cmp
insb
shlb
sahf
idivl
mov
std
movsl
push
rcrb
cmp
jmp
push
leave
scas
insb
mov
dec
scas
fildl
pop
xchg
mov
insb
push
add
adc
popa
cmc
push
cmp
ficompl
xor
xchg
xor
push
dec
cmpsb
ja
imul
repnz
mov
adc
or
jg
xchg
fs
mov
push
inc
mov
enter
sbb
adc
mov
cmp
aaa
sbb
or
pop
shlb
je
jns
out
pop
pop
xor
push
xchg
cmp
dec
inc
xor
aas
mov
dec
sbb
xchg
sub
add
pop
popf
jl
mov
gs
shlb
or
inc
pop
out
ljmp
jl
cmp
dec
adc
das
imul
fists
mov
mov
sbb
loopne
push
push
cmp
adc
cltd
dec
repnz
fwait
icebp
pop
ljmp
ficompl
lret
lods
adc
faddp
inc
and
and
inc
int3
or
adc
or
jb
fldcw
daa
das
jb
lods
xor
insb
dec
mov
add
lret
push
jbe
in
cmc
inc
scas
mov
daa
jo
sti
fiadds
test
cmp
cltd
aas
out
ret
pop
js
push
sbb
bound
test
clc
outsb
pop
paddsb
jnp
adc
xor
add
repz
fistpl
test
push
loop
cltd
push
lret
bnd
je
out
mov
pushf
mov
mov
mov
xor
dec
bound
or
rcrl
push
icebp
xor
pop
and
add
push
pop
cli
pop
nop
lods
push
xor
cltd
lods
cmp
jge
jl
insl
mov
xchg
mov
stos
in
das
inc
sub
test
adcb
push
outsb
add
rorb
dec
ret
hlt
pop
js
movsl
mov
test
pop
jecxz
adc
scas
pop
inc
in
xor
in
push
ljmp
test
popl
mov
int
stos
jbe
sbb
dec
lods
mov
pop
pushl
aas
pop
cli
inc
lods
xchg
push
cmp
cmp
ljmp
cmp
push
test
or
pop
dec
jp
out
iret
mov
push
outsl
mov
jge
stc
or
or
cwtl
xchg
push
shll
dec
scas
in
fldcw
in
sub
and
add
enter
decb
popf
insb
test
sbbl
icebp
xchg
inc
inc
mov
jle
xchg
mov
cmpsl
adc
fidivrs
jb
cltd
stc
or
or
movsb
rcrb
iret
sub
mov
popf
in
repz
add
push
aam
std
mov
sbb
cmp
fs
std
sub
lods
dec
dec
push
shrl
push
xchg
stos
popf
in
loopne
cmp
outsb
inc
daa
dec
incb
ret
lahf
inc
insb
ds
orb
mov
ss
jg
loope
mov
jle
iret
iret
cmc
fistpll
inc
ljmp
and
inc
pop
lahf
mov
inc
imul
loope
sbb
cmc
fisubs
lods
fsubrs
aad
dec
inc
add
inc
lods
inc
inc
jmp
mov
ss
xor
sbb
aad
scas
rclb
lret
xchg
out
xchg
sub
sub
push
fsubrl
push
inc
out
push
mov
mov
lcall
popf
lds
add
hlt
adc
sbb
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
aam
out
add
xor
sbb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
