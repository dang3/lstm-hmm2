push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
gs
subb
pop
bound
sub
pop
add
pop
jne
pushf
jo
inc
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
sbb
fists
mov
insl
clc
stc
aas
jo
sbb
std
sbb
dec
subl
and
cmp
loopne
and
cmpsl
dec
mov
mov
adc
mov
fisttps
xchg
mov
loopne
mov
dec
ss
aas
push
hlt
inc
inc
lds
adc
sahf
outsl
dec
mov
test
ja
jmp
push
je
sbb
sub
add
pop
lock
push
std
inc
or
es
mov
nop
dec
push
xor
sbb
inc
ficompl
jno
je
fimull
jo
dec
into
xchg
jbe
ljmp
mov
xor
insb
mov
add
xlat
popa
mov
adc
dec
rorb
mov
divl
gs
pop
mov
cwtl
cmp
mov
call
mov
testl
push
xchg
mov
lds
lock
cmp
cld
mov
xorb
dec
cld
insb
mov
fidivrl
xchg
pop
xchg
or
jmp
mov
pop
sbb
filds
shl
fwait
loopne
xchg
cmp
mov
xor
je
movl
push
mov
arpl
mov
icebp
mov
pop
dec
fistl
lahf
cli
sbb
sub
aas
in
pop
sbb
mov
pop
roll
in
repnz
stc
gs
jne
lcall
test
lds
mov
mov
ret
jnp
shll
cmpsl
int3
js
jecxz
stos
xchg
mov
popa
mov
ja
sub
lods
cmp
jg
cmp
mov
dec
in
jmp
cmp
fisubrs
jno
out
fildll
sbb
mov
add
sahf
pop
cmp
fsubs
gs
fs
movsb
inc
cmc
outsl
int3
inc
lcall
data16
or
and
adc
lret
hlt
inc
fistps
sbb
mov
movntps
outsb
iret
int3
mov
jno
js
add
push
lods
mov
ret
xchg
setle
xchg
data16
sub
mov
in
push
and
inc
leave
sbb
insb
xor
fwait
add
mov
rcrb
xor
mov
dec
shll
mov
ja
idivl
ds
mov
cmpsl
adc
leave
test
jge
enter
test
lods
xchg
sbb
dec
outsl
mov
jmp
push
leave
mov
jmp
sub
mov
jnp
pop
cmpsb
sbb
mov
cmc
jo
pusha
ret
mov
xor
sub
pop
mov
push
fcompp
push
or
mov
jp
push
jp
je
pmulhw
loope
xchg
cmp
add
aas
xchg
enter
bound
lcall
mul
pop
outsl
xchg
shrb
shll
in
push
inc
mov
popa
repz
cmpsb
rorl
rorb
push
mov
mov
jmp
rep
lret
mov
popf
jmp
fs
pop
cmp
and
in
mov
jbe
stos
sub
mov
cld
sahf
jle
push
imul
dec
jae
imul
or
xchg
ds
sbb
adc
lock
scas
into
adc
mov
les
and
sbb
add
leave
insb
or
inc
test
fnstsw
jg
xor
lcall
jno
lcall
adc
mov
sahf
jle
jmp
xor
pop
or
out
jge
sbb
testb
cmc
push
sub
cli
lods
aas
xor
out
push
repz
mov
scas
add
mov
leave
sar
sub
push
cmpsl
pop
movsl
jg
mov
fldenv
ljmp
jne
pop
clc
mov
xor
add
in
fcomps
inc
iret
inc
sar
adc
fsubs
jne
ficoml
fwait
sbb
or
mov
cwtl
mov
enter
add
xor
gs
xor
and
push
adc
adc
jl
mov
fstpl
xor
adc
jmp
xlat
outsb
outsl
ss
rcrl
push
mov
mov
cmp
fdivs
stos
cmpsl
sbb
push
xchg
fcom
sub
shrd
push
ret
fnstcw
mov
sub
xchg
and
and
sbb
stc
or
pop
and
lahf
jns
test
cmp
dec
and
popa
clc
out
clc
cmc
repz
and
dec
imul
pusha
or
jmp
iret
out
xchg
test
std
xor
int3
sub
mov
fisubl
bound
sbb
aaa
shl
sbbb
into
shrb
and
lea
mov
hlt
cmp
subl
jge
push
lock
repz
loop
add
pop
xor
inc
movsb
rol
imul
mov
or
cmp
insl
mov
int
add
int
ljmp
mov
jmp
bswap
mov
out
inc
pusha
add
cmpsb
inc
pop
pusha
jbe
ret
lret
jg
in
int3
xor
inc
test
lahf
mov
shl
test
or
push
mov
inc
mov
xlat
dec
sub
xchg
cmp
push
pop
cmp
imul
sbb
rolb
fs
push
cltd
dec
push
loopne
jmp
pop
adc
loop
add
rol
sti
scas
lahf
sbb
push
jbe
cmp
shrl
aaa
rcll
jle
arpl
or
mov
rorb
jns
push
and
lock
out
sbb
sub
into
leave
subl
adc
and
mov
inc
mov
out
mov
mov
push
mov
sbb
inc
sbb
cmpsb
lds
std
shll
xchg
cmp
jge
repz
icebp
cs
pop
lock
fstps
mov
jmp
ds
mov
mov
lcall
mov
push
cmp
push
int3
mov
popf
out
push
mov
dec
jne
add
cld
dec
scas
jne
cmc
and
ret
jge
jge
mov
popa
cltd
addr16
and
or
mov
fbld
lret
outsb
push
push
loopne
rorl
add
sti
mov
mov
js
lock
fwait
int
ret
ljmp
movsl
xchg
add
xchg
mov
gs
mov
push
shr
mov
inc
mov
pop
xchg
mov
mov
mov
imul
lock
imulb
ljmp
adc
pop
add
imulb
in
andl
nop
adcb
sbb
cld
mov
pop
push
jmp
mov
inc
mov
xor
xchg
add
daa
cwtl
jae
out
enter
jbe
sub
mov
in
xor
mov
es
xchg
sub
fs
or
scas
add
mov
cmp
cmp
mov
xor
xor
mov
int3
mov
and
int
subl
mov
xor
jns
jg
and
fwait
aam
fs
movsl
les
das
cmpsb
jmp
sbb
ljmp
lea
and
test
inc
jmp
add
mov
sbb
ja
dec
arpl
mov
fcmovne
cli
ret
jo
arpl
mov
out
stc
mov
in
inc
cmp
outsl
repz
insb
fs
fwait
call
jmp
int
or
lret
add
add
xchg
dec
frstor
jno
xor
cld
jecxz
addr16
inc
fbstp
mov
and
sti
lock
mov
subb
mov
out
insl
ja
dec
aas
inc
popa
xchg
push
xchg
imulb
sub
xor
jl
mov
cmp
mov
lods
jmp
jbe
into
insl
ret
adc
je
and
and
inc
ret
cwtl
jg
sbb
int3
push
add
inc
pop
xlat
fdiv
xor
or
pop
dec
cmp
ret
enterw
sbb
or
cmp
or
push
fiaddl
out
push
aaa
js
rcrb
enter
pop
lock
sub
loopne
sub
lods
pop
scas
or
outsb
and
stc
orb
leave
jne
push
ljmp
pop
mov
add
and
or
pushf
mov
jge
fadd
dec
inc
xlat
pop
xor
mov
shl
fst
add
lret
sahf
mov
adc
sub
jns
fs
leave
imul
adc
cmp
mov
outsb
inc
dec
inc
sbb
ret
ja
sbb
out
mov
or
pop
aam
inc
mov
lods
sbb
fstps
pop
lods
mov
pop
movsl
jp
jg
popa
xchg
xchg
jmp
in
aaa
and
dec
dec
nop
xorl
add
mov
sti
inc
inc
jne
mov
dec
fistpl
sbb
out
test
lds
cmp
idivb
rolb
jg
pop
rclb
sub
rcl
fdivr
inc
comiss
neg
and
xchg
aas
lods
stos
jb
and
cs
sub
lret
cli
int3
push
sub
adc
push
xor
pop
mov
mov
stc
sub
es
pop
repnz
dec
mov
mov
xor
mov
cmp
mov
sar
dec
pop
ss
cmc
jbe
out
int
push
test
adc
repz
inc
pop
or
pushf
adc
pop
xchg
imul
add
test
sahf
mov
dec
pop
mov
mov
loop
xchg
jle
push
call
scas
xor
pop
rolb
and
cmp
inc
mov
or
ret
fildll
aas
adc
mov
xchg
pushf
std
adc
cli
in
jb
jb
ja
sub
or
jo
imul
in
xor
or
lahf
mov
sub
xchg
gs
dec
push
xchg
xchg
xor
lods
and
movsb
and
popa
test
int
out
fisubrl
aam
xchg
jae
jmp
imul
xor
add
xchg
shrb
jge
dec
addr16
sbb
loope
sub
xor
mov
cltd
inc
stos
lea
shll
adc
fs
inc
adc
clc
sub
scas
jnp
shrl
dec
loope
add
add
ret
js
xor
int3
xchg
stos
push
repz
mov
dec
pusha
inc
mov
pop
xchg
fidivl
push
add
mov
cltd
inc
cwtl
dec
clc
aaa
dec
out
arpl
ljmp
xor
pop
movb
mov
ret
loope
mov
ucomiss
cs
into
in
insb
mov
mov
or
or
mov
lock
mov
addr16
xchg
cmc
dec
push
push
mov
adc
popf
cli
xchg
mov
ja
mov
dec
or
jb
ficoml
ds
sub
xchg
or
roll
adc
mov
loope
fistl
pop
ror
pop
inc
mov
mov
test
pushf
bound
insb
inc
pushf
in
cmc
sarb
pop
add
jg
pop
or
repnz
std
lock
lret
mov
adc
pop
pop
push
pushl
out
lock
mov
std
aas
or
fistpl
pop
repnz
jmp
gs
pusha
nop
sub
stos
and
je
les
out
stos
and
pop
mov
cmc
loope
jmp
push
mov
sbb
std
dec
xchg
inc
sub
mov
push
pop
xchg
leave
pop
add
div
lcall
lock
mov
sub
repnz
and
mov
or
cmp
test
popa
cmp
addr16
fwait
lret
outsb
inc
iret
inc
in
popl
jbe
cmp
aam
jmp
gs
xor
jge
cmp
jo
divb
nop
inc
fcomi
inc
xchg
fstpt
aam
orl
frstor
test
pop
movsl
xlat
test
dec
lds
popa
pop
rorb
cwtl
cs
and
inc
pop
fwait
int
clc
incb
pop
shll
repz
inc
cmpsb
inc
notb
sbb
outsb
cs
insb
inc
inc
sti
out
sub
sbb
sub
daa
add
call
in
cmp
cmpsl
pop
sti
inc
or
lea
xchg
mov
out
xchg
sub
mov
pop
dec
cmp
cld
es
xchg
sti
cmc
sbb
jns
sbb
mov
movsl
lret
notl
dec
push
scas
pop
cmp
pop
mov
pusha
and
cmpsl
imul
mov
cmpsb
aas
mov
push
inc
int3
in
mov
dec
gs
pop
cld
out
xor
cmp
aaa
test
xor
insb
adc
into
pop
mov
loop
lea
imul
and
push
pop
cmpsl
pop
push
jno
out
into
mov
cmpsl
pop
pushf
test
adc
xchg
outsl
mov
push
push
jnp
push
dec
dec
fstps
dec
pusha
mov
sub
sti
clc
add
aam
sbb
jge
mov
iret
push
mov
add
xor
gs
inc
adc
jle
or
mov
mov
test
mov
pop
pop
sbb
mov
or
stos
loop
xchg
sbb
int
sub
mov
imul
rolb
mov
in
arpl
pop
cmpsl
push
int
mov
mov
lea
fsts
sub
pop
inc
cs
sbb
fists
mov
mov
outsb
out
pushf
cmp
call
xor
dec
cmpsb
jns
nop
dec
mov
mov
out
mov
lret
icebp
mov
lahf
and
add
orb
pop
mov
ret
inc
mov
int
mov
pop
mov
hlt
rolb
mov
shrl
adc
fildl
or
lret
mov
add
jbe
push
mov
lods
jns
mov
in
gs
jns
lea
in
push
aas
or
pusha
loopne
hlt
and
mov
cli
cmp
popa
pushf
fwait
shl
xlat
jo
das
sub
lea
sub
sbb
adc
sti
add
mov
addb
outsl
mov
in
outsl
ljmp
inc
inc
push
xor
out
or
pusha
push
pop
lds
sub
pop
in
sahf
lahf
ficomps
out
jmp
xchg
cmp
inc
or
or
inc
int3
xchg
xchg
and
and
add
mov
fiadds
jnp
mov
mov
pop
pop
jnp
inc
shlb
outsl
pop
movsl
int3
repnz
cmp
cltd
mov
ficoml
inc
mov
mov
int3
les
fwait
xor
push
ds
pusha
enter
fbstp
xor
or
jae
popf
sbb
or
inc
rolb
outsl
data16
ds
cwtl
cltd
mov
test
lods
movsb
roll
xor
and
lcall
pusha
int
push
add
jp
pop
stc
mov
mov
push
int
addr16
jmp
popf
pand
xor
push
sbb
dec
jg
pop
out
mov
pushf
jnp
out
push
or
loop
out
or
mov
cmpsb
dec
les
xchg
cmp
add
lds
stos
movsl
lods
sub
ss
add
popa
adc
jle
adc
sub
inc
and
sub
cmp
xchg
fildll
ja
and
cmc
xchg
mov
pop
xor
dec
xchg
out
out
mov
es
iret
mov
stos
inc
out
adc
xor
push
push
popl
sbb
inc
mov
inc
sub
inc
insb
mov
gs
cli
mov
mov
add
lods
out
add
les
inc
dec
fwait
scas
dec
lahf
mov
sbb
cmc
cmpsl
or
ljmp
and
call
adc
mov
mov
push
mov
jns
outsl
jle
cmpl
jns
stos
mov
xchg
jp
cmp
xor
outsl
lret
shl
mov
pushf
mov
mov
adc
mov
mov
push
mov
loop
cmp
lret
test
mov
cmc
add
stos
xchg
xchg
push
pop
jb
cltd
std
insb
jb
gs
ja
sbb
frstor
pop
sbb
ficompl
cmp
andl
cltd
cld
test
add
dec
mov
pushf
movsb
nop
sbb
stos
push
stos
cs
and
jmp
mov
enter
mov
in
xchg
repnz
cld
ret
inc
js
sbb
sub
jnp
flds
xchg
jne
or
stos
xor
mov
jl
jnp
jle
nop
mov
imul
rclb
int3
ljmp
mov
xor
jge
push
adc
jle
clc
xor
sbb
jge
andb
xchg
sub
fisttpl
loopne
sub
lods
jmp
jno
jbe
mov
sub
mov
push
mov
mov
fsubrs
stc
pop
out
jecxz
or
adc
push
mov
cmp
jmp
cmp
lods
push
inc
divb
dec
lahf
popa
test
aad
fldenv
mov
js
lds
loope
aam
xchg
cmpl
xor
js
gs
or
or
xchg
sub
icebp
and
cli
push
cmp
mov
icebp
sub
sub
imul
sub
xor
enter
das
inc
jne
cmp
fldt
cmpsb
add
movsl
dec
in
xchg
lea
repz
adc
jae
movsb
iret
rol
xorb
cmp
pop
cmp
fs
push
xchg
test
inc
jge
mov
scas
pop
movsb
fs
pop
and
push
cld
out
mov
xchg
adc
pop
dec
mov
bound
test
mov
inc
insl
subl
or
xchg
inc
rcl
sub
push
aam
pop
enter
rcrl
and
mov
or
pop
dec
int
mov
and
cmp
pop
cld
in
sbb
inc
cmpsb
and
mov
push
mov
out
dec
imul
adc
loopne
int3
std
dec
fiaddl
lret
jle
jg
adcl
push
push
push
cmp
mov
jp
je
mov
mov
push
mov
xchg
adc
mov
sbb
cmpsl
add
out
sbb
cmpsl
aaa
push
jbe
mov
cmp
cmp
cltd
cwtl
loop
pusha
jnp
fs
not
cmc
inc
mov
mov
call
push
cmp
and
and
adcb
mov
dec
mov
or
dec
mov
lahf
je
mov
and
inc
xchg
gs
fsubrl
in
lds
xor
cmp
sub
call
mov
rcll
scas
pop
jl
insl
bound
mul
repz
ss
loopne
push
dec
dec
pop
mov
bound
mov
lock
cmp
lahf
mov
cld
loope
and
pop
xor
mov
cmp
testb
and
lds
in
push
nop
and
dec
movsb
int
inc
push
test
push
sbb
aad
sahf
inc
xor
cmc
out
shlb
arpl
jmp
dec
test
ret
mov
jmp
sub
enter
in
push
xchg
cltd
gs
insb
popf
mov
lret
dec
xor
adc
test
stos
add
ror
jb
xchg
pop
test
in
pop
addr16
faddp
dec
cmc
cmpb
sub
sbb
xchg
mov
or
imul
inc
dec
rcrb
pop
add
movsb
ret
add
jmp
pusha
or
and
sbb
fdivrp
mov
dec
test
mov
insl
rcrl
mov
fldl
jp
and
adc
push
cwtl
sti
xor
pop
jecxz
xor
out
jle
mov
cwtl
lods
mov
xchg
push
and
pop
data16
push
pop
jg
push
cmp
clc
xchg
cs
pop
mov
or
insl
fs
push
jmp
ud0
pop
iret
cltd
cltd
cmp
aas
mov
and
jmp
out
xchg
adc
mov
mov
push
std
repz
push
push
adc
push
test
xor
or
test
cmp
fimuls
lahf
ret
mov
nop
fs
addr16
mov
mov
mov
jle
adcb
lahf
mov
stos
mov
mov
enter
test
jb,pt
mov
ljmp
lea
stc
jne
xor
icebp
mov
dec
repz
out
into
lret
mov
sbbl
testb
test
out
or
lcall
pop
inc
call
imul
aaa
and
idivl
addr16
fcomi
nop
das
xchg
push
mov
lods
mov
cmc
cmp
xor
in
nop
cltd
lock
and
mov
test
fbld
insl
push
std
xor
push
pop
loope
mov
rorl
insl
outsl
inc
divb
mov
mov
adc
lea
shrl
jp
cli
adcl
jnp
jp
lcall
fbstp
xchg
or
into
sbb
imul
dec
mov
negb
add
or
lret
lcall
jb
pop
filds
lahf
out
jno
dec
inc
popf
pop
test
into
in
lahf
out
loop
bound
sbb
fmull
out
cmpsl
popf
jl
out
ljmp
inc
inc
out
mov
xchg
ror
incb
cmp
or
cmp
das
aaa
mov
leave
jne
and
mov
mov
jmp
xor
hlt
add
and
test
pop
dec
or
iret
push
cmpsb
mov
lods
push
ljmp
inc
lcall
push
scas
mov
dec
das
pusha
pusha
popf
repz
mov
je
in
and
cmpl
cmp
into
fmull
divb
mov
pop
xchg
dec
bound
xchg
xor
inc
jae
mov
push
xchg
pusha
dec
xchg
push
jge
insl
xorb
pusha
adc
dec
test
add
mov
repz
dec
ficompl
cmp
xor
or
imul
lods
jl
fcmove
ds
testb
adc
adc
lods
push
mov
pop
subl
mov
pop
sbb
sub
roll
push
cwtl
das
dec
fiaddl
cltd
mov
outsl
cwtl
fnstenv
fs
jns
repz
sbb
sahf
xchg
xchg
loop
mov
push
mov
popa
rcll
std
inc
dec
mov
sbb
arpl
lcall
enter
mov
loopne
iret
lahf
adc
xchg
jns
mov
jge
cmpsb
les
cmc
push
dec
sbb
out
pop
xor
in
dec
mov
xor
or
xchg
sub
in
xor
les
pop
sub
push
call
xchg
jg
pop
or
imul
shlb
add
fcmovne
push
jg
insb
inc
out
xor
add
xchg
mov
xchg
mov
lds
push
pop
or
mov
inc
sti
jno
xchg
lret
rcl
inc
imul
cmp
cs
jp
xor
push
out
divb
loop
fwait
ffreep
cmpl
xchg
pusha
or
fldl
xchg
cmpsl
movsb
push
and
stos
xor
xchg
aam
subl
rorb
mov
icebp
stc
std
shlb
or
lock
mov
lock
or
xchg
in
je
insl
push
push
mov
pop
shll
jp
fistps
cmp
push
scas
cmp
sbb
js
push
sub
sbb
xor
aam
sub
sbbl
xchg
sub
daa
ret
sbb
hlt
push
mov
bound
push
stos
pusha
lods
dec
pusha
aas
push
ret
inc
jmp
jecxz
subb
xor
sub
add
and
sbb
mov
mov
inc
add
mov
adc
ss
stc
dec
cmpsb
sti
imul
int
sbb
mov
dec
cld
fcompl
sub
adc
dec
outsl
adc
std
fwait
lcall
push
sub
dec
mov
test
outsl
aas
and
loop
scas
in
jp
mov
inc
cmp
mov
xchg
jmp
push
sbb
and
int
adc
adc
rcl
xor
lods
or
mov
sbb
loop
in
inc
sbb
incb
in
push
pushf
loope
add
ficompl
clc
data16
std
pop
insl
stos
testl
pushf
cmp
insl
mov
jl
xchg
pushf
lcall
test
jl
aaa
jns
inc
inc
inc
mov
and
mov
in
jbe
jmp
das
pusha
xor
fcompl
fscale
mov
sbbb
xchg
push
xchg
popa
xorl
out
incb
int3
add
repnz
adc
cmp
lods
cmp
inc
xchg
dec
xchg
movsb
xchg
fsubrp
aaa
test
and
mov
loop
outsl
inc
insl
lock
sti
mov
int3
mov
inc
or
cmp
enter
repnz
adc
lds
xchg
jns
loope
lods
sarb
pop
lock
fstps
add
add
xchg
add
sub
xchg
cwtl
jl
fidivrl
notb
orb
insl
fucomip
fmull
sbb
fldl
pushf
fistl
mov
ds
filds
ds
add
inc
call
lcall
dec
xchg
clc
xchg
in
xlat
mov
cmpsl
or
push
shll
hlt
inc
fsubl
cmpsb
inc
mov
rcrb
gs
pop
and
and
sbb
mov
xor
and
add
cmpsl
incb
repz
hlt
xchg
jle
mov
sti
sub
add
dec
mov
xor
or
xor
imul
adc
roll
or
dec
mov
mov
push
push
xchg
push
cmc
pop
loope
loop
xor
lret
and
mov
fs
imul
push
aaa
xor
call
fwait
dec
aam
inc
mov
mov
into
mov
jbe
stc
pop
mov
adc
pop
push
mov
sub
mov
repz
es
aad
repnz
cltd
call
pop
cld
clc
enter
adc
inc
xchg
dec
dec
dec
xor
push
ss
xorb
repz
enter
ror
sbbl
fs
repz
or
xchg
inc
jge
stos
cmpsw
push
in
scas
add
mov
mov
int3
lret
fcomps
cmp
loope
xchg
push
pop
xchg
adc
push
outsl
xor
leave
jnp
js
mov
loop
faddl
fs
les
xchg
popf
xchg
mov
pop
jbe
push
daa
decl
ret
dec
xor
aam
sbb
push
mov
inc
jl
icebp
mov
aaa
sarb
pop
mov
and
ds
lahf
xorb
stos
pop
int
push
xchg
adc
aad
adc
int
cmp
fistpll
adc
xchg
and
push
jp
in
or
mov
imul
ja
mov
or
mov
xchg
mov
jp
lock
mov
inc
push
sbb
das
mov
or
sub
fsubl
xor
mov
movsl
jne
xchg
or
aad
loop
mov
call
mov
loope
xchg
loopne
daa
cmp
enter
mov
pop
rcrl
or
jl
jl
imul
cwtl
mov
add
lds
outsl
fcmovnu
ss
fbld
cmp
pop
imul
mov
push
dec
call
and
js
jecxz
mov
ret
adc
or
sub
push
in
pop
sti
push
cmp
rcrl
fmull
mov
jne
push
subb
cmp
fisubl
xchg
les
mov
add
mov
imul
std
lret
inc
sbb
rcll
inc
add
ret
cmp
js
cltd
in
aaa
xor
xchg
movl
push
adc
push
shll
aas
mov
mov
inc
mov
pop
popl
xchg
xchg
inc
test
test
mov
loop
jmp
cmc
jnp
sbb
mov
cwtl
push
inc
cmp
inc
shl
test
sub
adc
jl
mov
adc
mov
mov
mov
pop
movsb
xor
test
and
sbb
lea
lahf
add
ss
add
test
fldcw
lret
mov
repz
fbld
jb
scas
movsl
bound
lds
jne
in
mov
into
push
cmp
outsl
push
lret
sarl
out
mov
mov
cwtl
pop
das
out
push
lret
mov
test
test
cmp
push
and
mov
mov
mov
adc
pusha
aam
xchg
sbb
jbe
fistpl
rcrb
xchg
adc
inc
int
das
rol
and
iret
cmpsb
or
pusha
sub
shl
les
les
rcrl
push
or
mov
mov
mov
addr16
jo
sbb
mov
fs
cmp
inc
jo
mov
adcl
into
lods
cmpsb
dec
aad
sbb
inc
inc
bndldx
cltd
sub
mov
orb
pop
add
dec
shl
dec
mov
jo
mov
pop
fnstcw
add
out
push
sahf
or
add
aam
mov
clc
gs
and
addr16
andb
and
inc
gs
shlb
inc
add
mov
loope
xchg
std
jno
or
jae
inc
stos
aad
dec
jo
loope
push
loopne
inc
or
mov
cwtl
mov
mov
out
or
jmp
out
dec
out
movsb
addr16
ret
repnz
sub
cmp
imul
mov
add
mov
ficompl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
lock
lret
lret
lret
clc
sub
in
jp
call
repnz
or
mov
add
mov
xor
mov
sbb
xchg
lods
inc
add
adc
sbb
mov
jl
inc
inc
popa
adc
mov
aad
and
test
xchg
push
ljmp
xchg
fdivrl
cmp
push
mov
xchg
loopne
push
fldl2t
xchg
cmp
sub
imul
shl
xchg
xor
out
lods
idiv
ret
push
notb
stos
push
cmc
jg
cmpb
shlb
push
fdivl
cmpsb
mov
or
or
xchg
scas
pushf
pop
xor
test
mov
cmp
shlb
movsb
pop
or
adc
sti
loop
repz
cmpsb
jae
les
xor
int
mov
call
or
fs
xor
insb
lods
neg
sub
aas
mov
jbe
out
pop
xor
jge
insl
xchg
push
lret
and
popl
mov
mov
cmp
pop
sub
cmpsl
ror
inc
push
xchg
mov
ficompl
out
cltd
mov
inc
or
mov
xor
jb
jnp
outsl
into
push
ret
push
sbb
cmp
shl
out
push
dec
sub
std
pop
fwait
sbb
fmuls
pop
insl
jbe
and
outsb
push
push
in
inc
nop
or
mov
add
dec
fsubrl
es
inc
repz
xchg
or
or
push
lret
xchg
sub
mov
insb
iret
pushf
decb
pop
cwtl
cmp
outsl
ret
xchg
cmpl
mov
push
cs
and
out
icebp
cmp
sbb
ss
cmp
mov
mov
aad
jle
xchg
add
js
lcall
pop
mov
cmc
cmpsl
loope
xor
xor
pcmpgtb
stos
popf
pop
and
mov
cmp
dec
xchg
subl
mov
sbb
and
sub
sbb
loope
xchg
cmc
movlps
inc
out
stos
mov
lahf
xchg
lods
push
iret
sub
iret
inc
scas
loop
out
sbb
movsb
jg
bound
push
test
test
rorl
je
cmpl
popl
fdivrs
lds
jl
out
out
push
je
push
sahf
int
and
rol
or
test
inc
xchg
pop
sub
dec
cli
cli
pop
sub
hlt
test
lods
sub
adc
out
pop
adc
xlat
incl
shl
jo
jmp
iret
sub
test
nop
and
push
cmp
ret
xchg
mov
fildl
mov
sbb
mov
out
sub
dec
int3
mov
shll
and
push
mov
outsl
cmp
ljmp
cmp
fists
lods
aaa
cmpsb
mov
ror
sub
popa
jmp
insl
jne
data16
or
popf
gs
fistpl
test
dec
int
cmp
mov
jno
adc
xor
cmp
and
leave
sub
shlb
shlb
pop
lods
cwtl
lea
in
aaa
push
sbb
arpl
jno
mov
xor
mov
xchg
jle
fnstsw
pop
std
mov
pushf
and
dec
imul
mov
inc
adc
sub
stos
js
rcrb
jg
insb
or
xchg
xor
sub
fidivrs
cwtl
loop
insb
stos
jno
lods
icebp
add
pop
roll
popf
lcall
fdivrl
add
loop
notl
jae
adc
fwait
test
and
ja
into
cmp
push
pop
jbe
insl
mov
xlat
mov
loope
xor
out
pop
sbb
push
and
ja
rcll
mov
rcr
pop
push
fsubr
stos
das
push
adc
nop
gs
push
shr
aam
mov
and
testb
mov
hlt
cwtl
jo
cmp
enter
gs
dec
add
out
xchg
test
fistpl
les
add
popa
mov
mov
push
jle
enter
daa
pop
mov
js
or
dec
mov
mov
fcmovnb
adc
flds
sub
push
mov
and
or
lret
xchg
call
fstp
lret
push
pop
cmp
inc
add
fcomps
scas
mov
lahf
ljmp
pop
lock
icebp
loop
mov
dec
xchg
iret
int3
int
insb
clc
sbb
sti
mov
push
push
mov
mov
dec
lods
and
push
pop
rorl
mov
mov
mov
test
stc
xchg
and
loopne
sbb
jne
cld
cmpsb
mov
push
or
jg
call
sub
add
add
inc
out
stos
jmp
loope
out
jecxz
inc
xor
icebp
call
shr
mov
inc
fs
inc
int
push
int
mov
mov
mov
mov
cmc
in
inc
or
pop
mov
sbb
sbb
xlat
loopne
cmp
mov
sbb
add
adc
cmp
sbb
imul
repz
popa
lods
popa
add
popf
pusha
and
dec
sub
dec
jb
inc
and
addr16
sti
push
sbb
ss
cld
add
or
add
pop
fwait
push
jnp
xor
cmpsl
and
int3
ret
or
or
jp
cmp
cmp
sbb
dec
ljmp
movsl
or
mov
lahf
and
hlt
outsl
test
cmp
fs
sbb
sub
cli
dec
outsl
aad
and
gs
cmp
push
inc
add
dec
pusha
sbb
inc
push
add
in
cmpsl
ss
jnp
xchg
test
pop
xchg
adc
sarl
enter
and
mov
push
add
pop
dec
sub
cmp
scas
dec
inc
add
lahf
sbb
scas
js
mov
aam
or
xor
inc
and
or
nop
push
adc
xchg
pop
inc
call
pop
lretw
jmp
pushl
aam
inc
cmp
or
pop
xchg
jo
jg
fistl
movsb
andb
nop
addl
jne
adc
or
fmull
cmc
sti
sbb
cmc
iret
in
movb
push
ret
jns
dec
mov
cmpsb
push
mov
mov
jmp
stc
out
sbb
push
inc
jg
xchg
cltd
mov
shrl
jmp
push
lock
mov
jae
sub
add
cs
cmpsl
aam
push
or
cmpsl
cld
in
incb
adc
in
ret
adc
fsubp
fnstsw
sbbl
mov
mov
mov
fldenv
mov
nop
xchg
imul
sub
stc
sub
les
pop
mov
mov
or
inc
and
movsl
adc
jnp
xor
loopne
mov
mov
pop
icebp
lret
out
lods
hlt
out
imul
sar
mov
xchg
jb
jnp
jge
out
pop
push
xchg
push
stos
xchg
jnp
push
dec
cmpsb
cmp
mov
pop
aas
xor
sti
xchg
ja
jb
mov
ja
xchg
mov
hlt
outsl
adc
jle
scas
or
mov
bnd
outsl
test
pop
mov
inc
adc
cmp
aaa
shr
decb
pop
mov
xor
fmull
push
ss
push
xchg
call
adc
mov
sbb
cmp
sub
push
sub
loop
mov
icebp
jg
mov
aam
lahf
dec
loop
xor
dec
pop
add
enter
cmp
lds
dec
testl
jno
xchg
lods
lret
fwait
xlat
push
pop
or
inc
ret
sub
shlb
out
xchg
and
xor
inc
jo
push
lods
insl
mov
scas
pop
push
or
sahf
sub
pusha
test
out
js
pop
mov
aad
xchg
mov
push
rorb
into
test
xchg
sahf
into
cmp
mov
pop
mov
rol
lock
sbbl
hlt
rcrb
and
push
movsb
jnp
push
xchg
mov
cmpsl
andl
mov
inc
mov
mov
les
pop
std
mov
push
add
testb
lcall
cmc
mov
xchg
popa
inc
mov
xor
fildll
stos
inc
or
mov
xor
dec
and
inc
xchg
push
ret
inc
rclb
mov
push
ret
dec
fcompl
sti
push
add
stos
and
fsts
pop
adc
cmp
into
ss
enter
adc
pop
xchg
int3
mov
or
add
lret
adc
jnp
repz
mov
add
cwtl
fs
popa
out
mov
jne
mov
add
pop
scas
jmp
mov
xor
push
pusha
xorb
inc
cmp
fcompl
aad
inc
xchg
je
cs
cmpsl
andl
push
mov
lock
xchg
add
inc
insl
gs
arpl
adc
dec
test
lret
incb
push
push
ljmp
lock
push
pop
prefetch
frstor
mov
jmp
repz
jge
inc
jp
cmpsl
fstps
mov
sub
sbb
mov
push
add
sub
pop
rcl
xor
in
arpl
lcall
and
mov
jb
inc
xchg
fcmovbe
iret
mov
dec
or
cltd
in
add
sbb
cmp
imul
aas
xchg
test
cld
hlt
cmpl
mov
cmpsl
and
pop
test
inc
sbb
inc
aam
inc
dec
les
jmp
les
aad
daa
add
push
insb
push
cmp
push
in
push
mov
jl
clc
and
pop
adc
aas
xchg
inc
cmc
cmp
mov
scas
test
mov
ds
orb
xchg
out
xor
mov
sub
pop
call
ss
dec
xlat
add
ljmp
mov
add
pop
pop
push
sarl
ror
test
into
xor
cmp
negl
test
push
xchg
push
add
sarb
rolb
push
addr16
sbb
jmp
aam
push
aad
push
fisttpll
cmpb
inc
dec
jbe
ja
divb
mov
cmpsb
mov
loope
cmpsl
mov
or
sti
negb
fidivrl
fildll
outsl
mov
mov
je
test
scas
push
dec
and
and
mov
push
jp
and
outsb
push
pop
mov
fistpll
insb
add
cmp
stos
repnz
xchg
cmp
adc
repnz
xchg
cmp
mov
jl
repnz
mov
js
je
xor
popa
dec
int
scas
call
mov
cmp
jge
ret
pop
mov
cs
std
pushf
dec
xorb
jge
loopne
aam
je
pop
mov
les
pop
out
movsl
pop
pop
cwtl
test
cmp
ret
loop
ljmp
shrl
mov
fsubs
jge
push
mov
push
mov
jns
jle
push
iret
cltd
inc
hlt
pop
lea
add
mov
inc
stc
and
add
and
xchg
mov
ss
cwtl
dec
dec
int
jmp
insl
adc
push
push
inc
lds
mov
and
mov
and
mov
and
and
xchg
loope
or
mov
lock
jnp
xchg
cli
aaa
mov
adc
je
xlat
scas
or
cmc
ret
insb
fwait
mov
lds
pop
flds
sbb
rorl
lods
push
repz
cmpsb
push
xlat
cltd
or
lcall
fwait
inc
fists
xchg
aad
mov
xchg
sti
adc
lock
outsl
imul
fwait
sub
sbbl
pop
xlat
fcmovu
sbb
cltd
and
xor
movsb
pushf
test
sbb
push
cmpsl
or
loope
ficoms
or
scas
int3
out
je
lcall
cmp
xor
pop
add
stos
lea
mov
inc
push
inc
push
loope
jecxz
dec
cltd
imul
in
dec
and
adc
cmc
hlt
iret
jle
jge
jge
lods
enter
repnz
mov
sub
outsb
push
add
or
cmp
adc
mov
ret
sbbl
sbb
or
inc
scas
xchg
push
lds
out
mov
mov
data16
dec
sbb
mov
pop
cmpsl
daa
or
pushf
mov
dec
cmp
or
int3
outsb
loope
lret
inc
pop
test
movsl
jns
inc
leave
ss
mov
inc
mov
js
fnsave
pushf
cmp
xchg
add
pop
shrl
xor
push
outsb
cmpsb
and
add
push
xorb
enter
jo
dec
scas
into
sub
pop
insb
sub
fsubs
sub
in
ret
cwtl
adcl
data16
xor
cmp
mov
jnp
dec
fisubrl
cmp
fcmovu
sbb
gs
jmp
jo
pop
mov
mov
setae
mov
dec
jns
dec
push
mov
js
pop
jo
push
cmp
cmp
pusha
imulb
cli
xchg
add
xor
mov
cli
and
cmpl
je
adc
mov
dec
and
dec
inc
lea
adc
pop
cmp
aad
cmpb
jl
pop
lcall
jle
mov
test
bound
loop
push
inc
add
add
and
push
and
xchg
xchg
xchg
add
sub
ljmp
mov
fwait
xlat
dec
test
daa
mov
hlt
adc
xchg
inc
pop
push
and
push
pop
adc
mov
jge
adc
js
sbb
repnz
dec
pop
jne
pop
cmpsl
or
or
lods
loopne
scas
mov
or
jo
insl
push
adc
jbe
cmpsl
sbbl
sub
mov
xchg
ds
loope
xorl
pop
in
sti
jg
pushf
push
add
fwait
inc
pop
outsb
or
mov
imul
jne
xchg
fdiv
pop
jecxz
lods
pop
dec
and
dec
jp
fs
jecxz
jg
push
jno
clc
add
stos
xor
mov
adc
ret
stos
pop
xchg
adcb
insb
dec
dec
and
in
mov
jmp
dec
inc
lret
ds
mov
pop
dec
inc
sub
adc
gs
in
adc
push
cmpsl
bound
sub
or
dec
nop
daa
jbe
jge
pop
shrl
cmp
xchg
jne
repnz
sahf
push
outsb
int3
xchg
ds
sti
jbe
aad
or
jnp
fs
jae
ret
fs
repz
icebp
in
mov
sub
andb
stc
repz
out
iret
lea
xchg
andb
mov
jmp
out
icebp
in
push
mov
out
jb
fildll
jge
in
sbb
pop
cwtl
jg
aam
fsubr
iret
fwait
in
imul
sbb
sti
push
mov
mov
jp
es
inc
pop
call
in
mov
pop
repz
add
or
mov
in
sahf
and
clc
or
mov
xor
xchg
pop
test
mov
cmp
mov
addr16
pop
pop
sub
and
out
sub
lea
pop
jg
inc
inc
je
flds
xor
jg
jp
xchg
adc
or
lods
mov
jg
jbe
jae
cmpsb
inc
jecxz
add
movsl
or
xchg
je
xlat
popa
mov
imul
aaa
jne
aas
sbb
cmpb
cmpsl
adc
mov
and
cmp
fsubr
call
enter
or
jbe
pop
mov
iret
pushf
jnp
cs
mov
sub
jae
dec
jle
jl
xchg
add
sbb
fimuls
cmc
dec
test
arpl
les
cmpsb
test
and
pop
cmp
rorl
push
and
pusha
std
cmp
mov
and
mov
mov
fisubrs
ljmp
jno
xchg
push
fstpl
fdivl
pop
adc
movsl
fcmovb
adc
std
lds
inc
bnd
shll
pop
scas
fistpll
in
inc
mov
movsl
dec
rolb
mov
pop
xor
or
in
mov
repnz
xor
cmp
das
add
subb
idivb
lldt
push
cmp
sbb
or
mov
xor
call
mov
sub
adc
daa
and
or
cmp
inc
lret
enterw
scas
mov
add
cmp
loope
stos
pushf
add
mov
nop
jle
cli
stos
xchg
or
inc
stc
sahf
pop
push
inc
pop
fnsetpm(287
sbb
dec
sar
and
sti
iret
cld
push
les
ret
jp
and
push
rcll
icebp
std
aaa
xor
or
xchg
repnz
insb
push
xchg
and
mov
imul
scas
cmp
lods
mov
pop
fs
sub
jl
movsb
sbb
shrl
add
dec
popf
repnz
pop
push
int3
mov
mov
movsl
jl
push
and
inc
lds
fisubrl
mov
pop
lahf
pushf
enter
data16
test
dec
cmpsb
jecxz
dec
aas
inc
mov
movsl
xchg
mov
or
mov
js
inc
daa
cmpsb
dec
jle
jb
dec
cmp
dec
dec
xchg
jae
pusha
push
adc
push
iret
xchg
inc
lock
fimuls
clc
and
movsb
push
into
clc
sub
popa
mov
fs
and
mov
adc
lret
push
or
mov
pop
movsb
fimuls
inc
call
mov
cld
dec
out
adc
fs
inc
push
and
cmpsl
aas
xor
sub
addb
xchg
inc
ror
jno
repz
jae
int
subb
in
and
aaa
fbstp
mov
xchg
xchg
jge
clc
pushf
cmc
adc
cs
lods
dec
cmpsb
jae
ret
jg
daa
ljmp
jg
sahf
out
dec
mov
sbb
xchg
icebp
pushf
addr16
sub
sbb
in
mov
mov
cli
mov
cmc
cmpsb
cmp
and
adc
stc
pop
addl
push
jmp
lcall
push
xchg
mov
pop
sbb
adc
sbb
cmp
repz
push
add
inc
jae
js
add
aas
and
xor
jbe
loope
adc
cmc
sarl
dec
jl
rcrl
clc
icebp
rclb
loope
popf
push
stc
mov
sahf
pusha
sub
out
pusha
xchg
out
xor
and
adc
jno
mov
xchg
sti
adc
pop
shll
pushf
or
xchg
sbb
movsb
sbb
data16
sahf
or
push
and
fwait
out
aam
outsl
sbb
adc
int3
add
mov
iret
jp
dec
pop
aaa
mov
andl
dec
outsb
pop
xchg
jmp
xor
call
mov
xchg
fisubrl
xor
repnz
pop
fstps
sbb
add
sbb
xchg
jnp
xchg
cmp
xor
int
aas
jmp
adc
pushf
push
loop
and
and
into
clc
scas
lock
aam
out
repnz
xchg
mov
sbb
test
xor
call
iret
xor
lret
stc
add
fldln2
and
sub
int
xchg
pop
iret
cltd
push
je
mov
and
xchg
ljmp
rorb
dec
mov
push
push
cmpsb
movsb
mov
push
out
pusha
cmp
popl
outsb
cmc
pusha
lret
mov
in
jbe
xor
jle
push
rorl
mov
dec
pop
ja
jle
mov
loope
xor
cli
mov
push
mov
imul
mov
nop
rolb
pop
push
mov
fs
xlat
mov
imul
and
call
es
fs
push
push
hlt
popaw
push
nop
in
dec
aaa
or
pop
xor
in
int
mov
dec
fwait
int
jg
pop
mov
insl
sub
aaa
pop
mov
mov
fadd
hlt
out
xorl
fcoms
xor
cmc
out
dec
xchg
in
pop
xor
push
dec
pop
push
lods
out
and
sahf
adc
mov
push
sbb
dec
or
adc
mov
aam
push
mov
clc
adc
shl
sahf
fs
shrl
in
std
dec
in
jp
xor
out
mov
dec
inc
popf
mov
fwait
add
jnp
bound
cmpsl
pop
or
sbb
xchg
adc
roll
and
dec
ret
mov
shl
push
xor
or
stos
mov
imul
jnp
hlt
jle
xchg
daa
jb
repz
sbb
sub
loopne
divl
add
add
mov
out
fdivrs
cld
filds
test
mov
xchg
mull
sbb
sbb
insb
adc
inc
shl
dec
scas
jecxz
shrb
rcll
cmc
jbe
dec
adc
fistpl
lret
mov
fistl
pop
and
cmp
add
ffree
adcb
mov
sbb
jecxz
and
rcrl
sub
fsubl
sub
and
xchg
push
mov
scas
add
and
lcall
mov
mov
aaa
dec
xchg
ret
xchg
faddl
imul
xor
fistpl
sub
mov
fimull
sbb
cmp
xchg
jp
mov
sub
cmpb
sbb
inc
mov
xor
adc
push
shrb
movsb
push
xchg
std
cmp
xchg
insl
icebp
sub
adcl
outsb
les
fidivrs
dec
xor
and
shrd
sub
mov
and
cmp
bound
and
jb
mov
stos
and
jno
or
mov
in
sbb
mov
loop
pop
mov
pop
dec
cmpsb
mov
cltd
fstl
jne
cmpsl
ljmp
adc
fldt
pop
push
popa
push
and
aas
cwtl
cmc
xor
dec
add
mov
stc
adcb
sti
sub
mov
orb
lock
add
cmp
fcomi
inc
sbb
sbb
lcall
subl
repnz
aaa
sbb
fildl
adc
rolb
cmp
adc
push
repz
push
add
shrb
sub
push
or
push
mov
xor
cmp
pusha
pop
js
cwtl
jp
loop
xorl
repnz
daa
mov
xorb
loopne
sbb
pop
into
push
or
xor
or
dec
pop
pop
repz
loope
pop
and
out
push
insb
and
fcomp
sti
outsl
lret
xchg
sub
in
js
jns
cmc
lods
outsl
subl
inc
mov
fstp
mov
aam
pop
or
or
in
shlb
insl
push
outsb
fstpl
js
test
enter
outsb
mov
mov
jg
stc
popf
mov
fiadds
pop
popf
sub
pop
inc
xor
test
adc
add
daa
add
dec
sub
call
cmp
fisttpl
ret
or
dec
cld
adc
subb
xchg
cmp
lock
sbb
sbb
inc
xchg
lock
push
stos
xchg
inc
dec
cmp
xchg
inc
dec
and
push
jle
jae
sub
scas
jo
dec
rcr
jbe
mov
loope
add
mov
xchg
mov
xor
mov
sub
adc
sbb
jns
shll
test
jge
enter
mov
and
fistpll
test
lods
mov
arpl
mov
mov
dec
leave
push
call
add
push
pop
inc
xchg
mov
and
jge
sbb
ja
add
aas
stos
cwtl
sbb
gs
out
pop
mov
ds
scas
xchg
int
cmp
xor
stc
lea
inc
lds
aad
jne
jmp
pop
push
leave
mov
fstpt
sub
pusha
cmp
xor
inc
jl
sub
decb
xchg
xlat
dec
test
out
mov
xchg
and
aam
pop
mov
pop
movsb
or
or
mov
jl
jo
gs
xor
push
cmp
mov
sbb
xor
ret
popf
dec
adc
mov
cmp
cmp
ljmp
imul
es
push
orb
hlt
test
fisubs
mov
sub
call
shlb
add
fistps
lea
add
and
aas
movsl
movsl
fmul
cmp
pusha
addr16
outsl
ss
mov
loopne
adc
orl
repnz
xchg
outsb
dec
xchg
sbb
add
data16
repnz
outsl
sbb
mov
lods
pusha
in
sbb
xchg
push
mov
gs
mov
mov
mov
push
lock
push
pusha
inc
leave
ljmp
popf
lea
lods
and
sub
xchg
das
dec
sbb
test
cmpsl
jb
test
mov
sti
aam
nop
push
cmp
mov
gs
jl
out
or
dec
cmp
inc
jns
push
rol
sbb
into
and
cs
xor
add
add
mov
js
fdivp
movsb
sbb
imul
aad
sbb
cmp
andl
sbb
dec
add
or
add
enter
sbb
fidivl
nop
push
mov
adc
jecxz
stc
xlat
ret
es
add
das
in
adc
stc
cmc
outsl
mov
pushl
pop
dec
mov
adc
adc
pop
mov
sahf
fstl
push
rcr
jno
sbb
mov
dec
in
add
xchg
dec
and
lods
jge
dec
sbb
inc
mov
cli
cli
movsb
loopne
mov
out
cmp
mov
pop
mov
je
sarb
xor
xor
adc
fiaddl
adc
pop
pop
push
fnstenv
jg
mov
notb
ror
es
imulb
dec
out
out
cli
pop
arpl
call
mov
stos
or
push
inc
nop
push
es
and
xor
gs
mov
fdiv
nop
loope
mov
out
fidivs
push
dec
cmpb
mov
cmp
mov
mov
mov
and
xor
fisubrl
test
clc
dec
pop
push
push
insb
adc
adc
cld
push
je
fs
incb
scas
jb
sbb
xchg
call
dec
fisubrs
xchg
xchg
xlat
call
lret
test
add
imul
test
adc
push
pop
out
xchg
push
cmc
sub
scas
test
mov
movsl
sbb
mov
mov
cld
sti
repnz
int
cld
into
cmp
lahf
mov
loope
inc
or
adc
jle
mov
sbb
mov
jp
mov
add
sarb
inc
cltd
xor
test
mov
push
lea
cs
pop
push
bound
adc
push
sar
xor
push
mov
faddp
jg
xchg
mulb
and
sub
push
cmp
inc
xor
test
mov
inc
scas
inc
pop
xchg
int3
mov
or
jb
sti
and
xchg
or
dec
cli
mov
jle
lret
test
aam
pop
pushf
pop
sub
xor
ftst
or
adc
mov
pop
imul
inc
dec
jbe
addl
dec
jae
cs
aam
int3
sub
fisubl
mov
mov
int
xor
rcll
add
movsl
popa
adc
dec
shrl
dec
fisubrs
inc
leave
cwtl
scas
mov
pop
push
dec
mov
pushf
bound
add
dec
fsubp
in
sbb
lahf
cmpl
testl
shl
popa
and
push
pop
lret
sub
or
or
loope
cmp
sub
test
mov
fisubrs
jmp
mov
lods
mov
push
stos
jle
je
mov
mov
mov
sarb
mov
enter
push
inc
andl
lret
repnz
cs
adc
jecxz
shll
inc
cwtl
das
mov
dec
jp
cmp
xchg
inc
out
out
cli
std
mov
daa
fildl
xchg
add
add
push
cltd
mov
popf
test
push
lret
fwait
out
outsb
mull
add
cmp
lcall
inc
lahf
mov
mov
push
push
jecxz
xlat
mov
xor
adc
mov
xchg
dec
imul
jae
pop
xor
xchg
xchg
jge
dec
iret
pop
lods
jnp
in
xor
xor
and
xchg
enter
push
lods
jb
das
xchg
rolb
rcll
ss
scas
test
bound
loopne
imul
xor
ljmp
pop
aas
jns
aas
dec
push
mov
test
fistpll
pop
stos
pop
cmp
loopne
dec
sbb
hlt
or
clc
ffree
cmp
jg
pushw
scas
adc
add
adc
mov
ds
aaa
adc
lods
or
xchg
mov
add
or
mov
jmp
dec
sub
mov
stos
mov
or
mov
fsubl
cltd
mov
in
add
dec
scas
loope
repnz
aam
sbb
sbb
test
cmp
xlat
mov
gs
pop
shll
ljmp
jno
jecxz
mov
js
fmul
and
mov
mov
mov
add
sbb
cmc
lds
pop
inc
int
psubq
mov
adc
add
repnz
inc
xchg
mov
gs
gs
or
jne
leave
fdivrp
leave
adc
imul
jnp
add
inc
test
sub
cs
inc
ss
in
mov
popa
leave
sbb
cmp
and
and
insb
loopne
in
bound
rol
rol
adc
in
xchg
jnp
outsl
xorb
xlat
ds
icebp
mov
mov
jnp
fwait
inc
cmp
fwait
and
push
pop
hlt
lea
rcrb
jb
call
ret
shlb
add
popf
bound
jo
subl
bound
mov
fldl
into
cmp
jp
lahf
or
mov
inc
in
ficompl
pop
sbb
jge
push
popf
jl
das
jp
out
fidivl
xchg
dec
stos
jns
stc
add
out
lock
sahf
sahf
mov
xor
cwtl
pop
imul
mov
aaa
inc
rcl
xor
imul
dec
sbb
icebp
push
lods
xor
test
rorl
leave
dec
or
xlat
adc
dec
push
out
xchg
fs
clc
or
mov
movsb
add
mov
dec
iret
cmp
gs
ss
imul
sub
aam
rcll
out
shr
lods
pop
inc
xchg
jns
mov
push
shrl
adcb
test
mov
divl
jbe
imul
leave
mov
or
jae
sub
fstpl
fwait
stos
dec
sub
data16
and
mov
nop
xor
mov
jns
repz
jmp
fs
int3
inc
sbb
aas
xchg
sbb
push
mov
ret
jne
iret
jno
cmpsl
jo
loop
lcall
or
std
insb
test
lds
nop
mov
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
fpatan
lods
xor
lret
xchg
rorl
addr16
nop
jp
dec
in
xor
inc
lret
xchg
inc
fstl
sub
xchg
shr
dec
ja
incb
cmpl
jnp
mov
out
or
cmp
jmp
pop
ret
orl
jae
mov
in
jecxz
jmp
daa
push
mov
mov
xchg
and
movsl
pop
mov
mov
aas
outsl
cmp
inc
jle
out
cmpl
jge
pop
fnstenv
sbbl
rcl
or
adcl
faddl
into
or
xor
or
push
dec
nop
andnps
fwait
icebp
pop
and
dec
push
movb
outsb
mov
clc
sbb
push
jnp
imull
ret
aad
jmp
sti
aaa
lret
add
mov
mov
adc
mov
mov
aas
ret
mov
adc
xchg
mov
js
inc
dec
mov
mov
ret
test
imul
adcb
push
jae
jno
and
mov
rcl
lcall
adc
jle
in
pusha
cmp
adc
mov
fcmovnbe
mov
das
mov
xor
iret
add
ljmp
xchg
jmp
in
cmpsb
lds
dec
bndstx
xchg
out
ljmp
pop
mov
cs
les
cli
loop
ds
imul
adc
je
xor
loopne
sbb
rclb
jo
jl
jnp
add
and
mov
andl
push
pop
mov
lret
es
push
cmp
leave
mov
mov
sbb
and
or
mov
icebp
cvtps2pd
movsl
inc
scas
mov
aad
add
stc
mov
mov
pop
mov
mov
jl
lods
xchg
mov
xchg
xor
std
shlb
sbb
fsubrp
jnp
loop
jge
jbe
xor
andb
loop
insl
xor
divb
mov
enter
or
scas
mov
adc
and
sbb
movsl
fsts
inc
mov
data16
decb
imul
mov
sub
sbb
xchg
movsb
pop
push
mov
inc
push
jne
mov
sbb
stos
adc
or
lret
fiadds
mov
xor
or
cs
mov
jb
les
push
push
imul
lret
push
add
inc
lock
sti
sub
push
xchg
aaa
pop
stos
pop
in
pop
sahf
pop
pop
xor
jno
daa
or
jp
inc
xchg
pop
xchg
movsb
jg
shll
dec
mov
push
mov
xchg
lds
ss
and
test
roll
inc
mov
je
cmpsl
inc
lods
in
cmpsb
mov
adc
aas
dec
lea
xor
pusha
cs
out
push
pop
out
rcrb
or
scas
sbb
sub
pop
sbb
shll
test
adc
scas
sub
subw
sub
mov
xchg
jns
loope
std
testb
addr16
xchg
popl
aam
inc
adc
dec
jne
aad
clc
in
subl
pop
pop
push
add
inc
pop
loope
popf
sub
imul
ljmp
or
pop
pushf
call
xor
jb
or
pop
jle
lea
es
xchg
dec
cmp
xchg
lahf
fwait
aas
xchg
loopne
xchg
and
in
out
in
push
or
jmp
aad
mov
cltd
mov
inc
js
push
jg
inc
lods
pop
bound
pushf
jl
xor
pop
adc
cld
or
push
adc
sbb
sub
lret
or
dec
add
or
shl
xchg
mov
jo
mov
xorb
jge
pushf
stc
mov
push
or
fsubrl
pop
cmc
es
pop
xor
mov
xchg
dec
call
and
subb
scas
imul
out
pusha
lods
daa
mov
sahf
push
mov
jno
movsl
js
inc
fbld
xor
ficoml
mov
pop
scas
sahf
je
ss
popa
sub
inc
cli
add
movsl
dec
mov
xchg
scas
mov
jno
sub
ret
testl
outsl
gs
pop
std
jmp
int3
mov
aaa
sub
jle
aam
std
mov
stc
in
mov
mov
ss
sub
int3
push
push
push
decb
push
lds
cmpsl
aam
mov
or
out
add
sahf
pop
aas
stos
mov
mov
pop
and
pop
loop
mov
inc
mov
pop
add
and
xchg
int3
push
xlat
mov
in
sub
loope
cmp
leave
fnsave
sbb
xor
pop
pusha
lahf
push
js
mov
movsl
jmp
loopne
or
repnz
leave
adcb
add
aas
adc
testl
mov
jle
dec
cmpsl
jp
mov
nop
xchg
pop
pop
outsb
repnz
push
push
inc
sbb
sbb
int
sub
sar
icebp
in
jns
add
mov
scas
and
orb
xchg
mov
fstpt
lahf
mov
sbb
mov
inc
icebp
sub
mov
add
in
pop
test
fdivrl
push
popa
ds
outsb
push
jnp
lret
pop
xchg
cmp
or
pcmpgtb
mov
inc
in
push
mov
in
add
rcrb
xchg
clc
push
xlat
scas
adc
xchg
lock
rclb
push
inc
inc
mov
cmp
pop
add
push
stos
das
add
add
fistpll
push
fisubrs
movsb
out
bound
xlat
rcll
pop
js
adc
dec
xor
add
aaa
mov
in
mov
iret
and
sub
mov
xchg
pushl
push
lock
mov
jns
sbb
inc
lock
inc
mov
bound
mov
outsb
lcall
cmp
lds
out
jge
pop
scas
add
icebp
push
mov
subl
or
and
cmpsb
cmp
mov
xor
mov
fnclex
icebp
pop
aad
and
xchg
jge
clc
cs
fists
or
lcall
mov
sbb
and
jns
mov
or
scas
in
xor
imul
rcrb
jecxz
cmp
cmpsb
gs
or
push
dec
test
cmpsl
clc
shlb
sarl
mov
mov
jbe
mov
loop
hlt
xlat
iret
push
jb
ja
inc
call
add
mov
mov
les
xchg
inc
loop
pop
mov
stc
dec
add
or
je
movsb
xchg
cmp
shrl
fisubs
test
shll
pop
and
test
dec
icebp
xlat
jecxz
xor
out
aaa
mov
inc
loopne
mov
mov
ss
dec
pushf
ds
inc
stos
outsb
sarl
cs
mov
imul
lea
sar
pop
mov
mov
lahf
add
sarl
shrl
xchg
aas
mov
or
arpl
hlt
das
push
inc
jecxz
adcb
shlb
das
inc
in
mov
mov
incb
enter
inc
stos
outsl
es
xor
fwait
and
sbb
movsl
sarb
mov
sbb
imul
pop
or
inc
aaa
xchg
mov
dec
adc
ss
inc
js
xchg
dec
sub
sti
push
in
and
add
mov
das
sbb
push
mov
inc
inc
inc
jnp
fisubl
sub
mov
fsubl
adc
imul
sub
hlt
adc
ds
movsl
sarl
daa
cli
imul
push
rcr
adcb
xchg
shl
jne
fisttpll
sbb
push
fucomip
test
xlat
sahf
and
pop
adc
test
sbb
jns
cmp
jl
div
lcall
adc
jo
insl
sahf
inc
jns
aas
mov
pop
jne
pushf
lcall
bound
mov
scas
test
test
dec
sub
testl
mov
cmp
pop
aaa
roll
inc
les
stos
je
fistpll
imul
insl
je
mov
xor
jge
sbb
out
pushf
mov
dec
loope
sub
cmp
pop
fiadds
dec
adcl
sbb
repz
pop
lds
mov
push
int
cmpsl
in
cmp
leave
iretw
pop
scas
dec
and
stos
fistl
mov
insb
pop
leave
sbb
jno
gs
mov
add
inc
sahf
aam
pop
in
out
sbb
das
dec
jnp
js
pcmpgtd
flds
mov
mov
push
sbb
inc
jmp
cmp
orb
xor
push
mov
int3
jl
sbb
out
fnsave
xchg
xor
sbb
jno
std
out
test
out
sarl
mov
xor
scas
outsl
dec
add
leave
mov
sti
imul
mov
out
mov
dec
or
sub
xchg
pop
xchg
aam
faddp
jl
test
fwait
divb
rcrb
jo
inc
out
nop
jp
popf
jmp
arpl
pop
pop
mov
sub
jnp
sub
imul
xchg
sbb
pop
shll
pop
pop
scas
sbbl
inc
inc
push
mov
xchg
int
loope
gs
xor
mov
mov
mov
mov
je
lods
aaa
loope
dec
addr16
dec
cmp
mov
push
and
xlat
insb
lods
test
and
and
xor
push
shl
js
inc
scas
fstps
std
inc
jo
mov
ljmp
xchg
jecxz
xor
data16
rolb
mov
lret
inc
aam
mov
jne
mov
jp
out
dec
adc
mov
mov
loopne
std
enter
mov
mov
lea
fwait
out
or
inc
cld
ja
push
mov
scas
sbb
mov
test
popf
filds
outsb
add
std
clc
push
rcr
insb
adc
push
jb
adc
push
inc
mov
ds
push
jle
add
cmp
pop
xchg
repnz
shrl
pushf
fs
stos
addr16
sub
jnp
add
sti
mov
push
stos
xchg
in
cmc
outsl
lahf
push
imul
xlat
mov
adc
sub
data16
into
push
rcrb
arpl
xchg
fnstcw
loopne
mov
add
sbb
push
iret
jmp
adc
repnz
sub
aam
addr16
cmpl
ss
leave
popa
loop
insb
sbb
aad
in
or
fdivrl
or
fs
cwtl
ret
lock
push
sbb
xchg
inc
fld
push
lret
scas
jecxz
imul
sub
sysenter
push
pop
or
stc
in
pop
adc
scas
loopne
push
inc
push
adc
es
add
popf
inc
int3
fcoms
xlat
xor
pop
push
cltd
pop
cmp
mov
lahf
mov
ljmp
sub
and
and
in
sub
mov
sbb
cmp
jnp
add
mov
or
sub
mov
xchg
cmpsb
cli
xchg
decb
fsubp
int
add
xchg
xchg
scas
es
pop
lock
jae
cmpsb
or
int
pop
mov
xrelease
popa
jne
push
es
rorl
cmp
xlat
adc
mov
or
insl
ds
jno
js
cld
das
push
cmp
test
xchg
inc
mov
lods
xchg
inc
push
arpl
adc
insl
js
cmp
mov
lahf
xor
xchg
leave
mov
scas
sbb
test
into
popf
xor
pop
mov
mov
cmpsb
loope
xor
in
add
js
mov
push
lods
mov
xchg
add
jnp
adc
test
out
push
push
sti
jno
sti
test
pop
es
jmp
inc
lret
xchg
sqrtps
adc
pop
in
mov
pop
sub
js
inc
mull
mov
into
scas
inc
lea
pop
push
fdivl
aam
fwait
push
lods
cmpsl
and
sbb
mov
popf
xchg
inc
push
sbb
jecxz
xchg
lods
jp
mov
out
sbb
loope
pop
adc
adc
imul
sbb
xchg
jb
pop
and
mov
push
jecxz
imul
insl
sub
movsl
xchg
and
add
sub
jno
scas
test
push
iret
pop
mov
cmp
test
push
and
jnp
jne
mov
shrb
fdivrs
outsl
push
cltd
jge
push
and
out
mov
je
dec
in
ds
adc
dec
jecxz,pn
enter
inc
mov
cmpsl
adc
sub
sub
in
lods
cmp
ret
mov
lret
fcompl
push
loopne
lods
test
jecxz
adc
cmp
adc
add
mov
adc
pop
dec
xchg
pop
mov
aam
aaa
mov
xchg
and
fisubrl
aad
lock
into
add
jne
push
push
leave
icebp
xor
outsb
jl
sahf
adc
std
jo
fmull
cmc
add
mov
ss
das
sbb
add
push
call
jmp
mov
sub
mov
push
xchg
outsl
jmp
rclb
int
rorb
fs
xor
xchg
into
mov
outsb
in
cmp
lea
ret
cmp
or
test
and
sti
mov
mov
movaps
add
rolb
lods
push
cmp
mov
subb
in
out
pop
jbe
and
loopne
aas
cwtl
imul
push
insl
das
mov
mov
dec
lods
aam
inc
xchg
shrb
popa
push
adc
mov
or
mov
pop
loop
loopne
dec
mov
call
push
mov
mov
bound
xchg
idivb
xchg
ja
xchg
int3
fnstcw
dec
adc
subl
push
roll
dec
mov
pop
bound
add
pop
and
pop
retw
jmp
ret
call
ljmp
pop
xchg
notb
jg
outsb
hlt
pop
sbb
pop
rorl
pop
adc
dec
lahf
sbb
into
adc
adc
outsb
inc
popf
cld
fcomps
and
stos
xchg
and
js
mov
pop
dec
arpl
outsl
sbb
xchg
inc
push
subl
lea
stos
test
mov
imul
cli
call
jg
sbb
lret
mov
dec
in
stc
idivl
adc
or
lret
mov
hlt
push
fdivrl
push
cmpl
fidivrs
in
cmpsb
mov
insb
mov
ds
rorb
ljmp
push
mov
xor
loope
sahf
call
adc
mov
jl
fiadds
movsb
mov
call
loop
insb
arpl
pop
insl
lret
aas
jge
sar
mov
pop
fwait
incl
push
dec
ret
mov
jmp
dec
sub
in
push
adc
cmp
enter
cltd
pushf
sub
add
mov
fxch
pushf
lods
adc
lea
cli
jbe
rclb
inc
xor
dec
test
pop
xor
les
and
sbb
test
sub
xor
out
cmp
push
adc
xorl
clc
cwtl
aam
fldcw
clc
fadds
add
xor
fcom
push
int3
cltd
jnp
adc
dec
in
sub
push
popa
push
dec
mov
popf
movsl
xor
cmpsl
sub
adc
mov
pop
xchg
out
in
add
jae
jns
ret
mov
mov
mov
fcmove
ffreep
and
stos
adc
cltd
loop
pop
mov
inc
shll
sub
ror
jle
mov
add
xchg
push
xchg
popf
and
inc
sbbl
jae
cmp
mov
enter
daa
daa
xor
mov
and
outsb
and
mov
and
add
xor
fbld
and
jge
fistpl
aam
lds
pop
jnp
int
sub
mov
and
or
in
jg
xchg
fistpl
jne
xchg
shrw
cs
jmp
popa
dec
inc
in
movsl
sub
jmp
dec
sub
xchg
adc
je
shlb
lds
xor
dec
adc
xchg
jnp
mov
xlat
push
push
sub
cltd
rcr
rcll
push
xor
lcall
mov
lret
or
arpl
mov
iret
mov
or
insb
or
mov
ja
xchg
jb
fnstcw
xchg
inc
mov
sub
push
adc
mov
pusha
xor
pop
mov
mov
or
cmp
out
or
hlt
fildl
cmp
jbe
xor
inc
aam
inc
sbb
mov
incb
or
imul
in
in
pop
cmp
jae
xchg
dec
in
mov
clc
jmp
pop
adc
cld
and
mov
mov
inc
daa
dec
cmpsb
mov
lds
mov
dec
sub
enter
and
sbb
sub
jo
aam
push
je
shlb
push
xchg
or
cmp
dec
jae
jbe
pushf
aam
sti
repz
movsb
jg
cmp
rol
in
shl
mov
jne
sub
into
rcr
xchg
ret
mov
jecxz
and
dec
dec
mov
outsb
adc
clc
insl
cmp
hlt
les
dec
xor
pop
pusha
adc
mov
scas
out
mov
dec
sub
mov
fs
mov
in
stos
push
cmc
cmp
or
push
lahf
fsubs
in
lods
sahf
data16
jmp
xchg
scas
push
xlat
dec
inc
jno
leave
test
sub
fstpt
sarl
repnz
jo
inc
je
push
add
insb
push
add
mov
sub
or
je
cld
hlt
mov
dec
dec
rcll
mov
sbb
and
jae
xlat
push
je
push
int3
rcrb
hlt
pop
push
mov
sub
mov
mov
test
sub
out
xor
xchg
in
dec
idiv
int
notl
push
jae
inc
sub
sbb
out
subl
call
movl
or
mov
stc
ja
xor
lea
int3
or
dec
mov
mov
insl
jmp
dec
test
jb
add
sub
ljmp
dec
cmp
mov
xchg
out
mov
je
stc
sub
faddl
push
gs
cmp
popa
mov
xlat
fisttpll
lahf
pushf
lcall
cmp
mov
lods
test
pop
push
adc
and
enter
rsqrtps
push
lds
lret
push
les
xchg
cmp
jmp
mov
jmp
js
mov
push
gs
mov
adc
inc
cmpsb
jnp
jecxz
push
pop
cmp
movsb
dec
rorl
inc
pop
scas
adc
jne
aaa
jo
ds
dec
mov
mov
mov
out
mov
test
sbbl
push
shr
inc
xchg
push
addb
ss
lcall
fistl
stos
xchg
or
pop
loope
je
xchg
push
pop
jne
adc
cmp
dec
incl
lock
xchg
bound
daa
jmp
or
add
subb
mov
inc
inc
popa
pop
orb
std
pop
push
cmp
out
mov
pop
cmpsl
imul
sbb
in
clc
cmp
rclb
push
lahf
ljmp
cmp
dec
int3
shlb
sbb
and
sarb
add
push
xor
pop
or
dec
in
hlt
jne
lods
dec
mov
mov
add
test
xchg
frstor
mov
mov
adc
lcall
mov
and
andb
push
pop
repnz
push
push
dec
addr16
mov
push
cmc
sub
ljmp
jle
and
std
lods
sub
push
dec
sahf
dec
lds
rcrl
iret
clc
adc
mov
lea
mov
sub
mov
cmp
sub
cmpsl
mov
nopl
stos
stos
push
pop
sub
push
rol
inc
test
add
mov
loopne
and
sti
dec
sbb
scas
add
ret
mov
sti
sub
sbb
and
sub
idivb
dec
ja
add
stc
lds
pop
pop
shlb
movsb
test
je
and
inc
xchg
loopne
cltd
mov
pop
and
lret
mov
scas
mov
sub
and
lods
cmp
lcall
cmp
movsl
mov
stos
and
xchg
sbb
xchg
lea
inc
lcall
cmp
icebp
negb
pop
jp
fwait
cmp
push
and
fdivrs
add
adc
or
mov
adc
aaa
in
cmc
mov
lock
bound
inc
jp
jns
and
aas
in
and
dec
out
aad
test
xor
jmp
shrl
out
pop
mov
pop
fsub
repz
push
sbb
adc
pop
mov
scas
mov
icebp
pusha
jnp
shl
mov
sub
push
xchg
loope
adc
andl
push
loope
jno
jo
xor
or
fisubs
in
jl
pop
dec
push
add
xor
stc
mov
xchg
loop
mov
jnp
les
ds
xor
stc
stc
sub
xchg
scas
cvtps2pd
jnp
fnsave
pushf
sbb
inc
push
or
sbb
mov
fldenv
dec
push
push
pushf
stos
jbe
ret
dec
xchg
push
outsl
jmp
pop
inc
cmpsl
mov
popf
roll
push
test
mov
jb
enter
adc
mov
ss
pop
adc
xorb
xchg
add
std
jbe
dec
ja
test
cmp
out
xor
cmpsl
test
iret
mov
clc
aas
lods
push
cld
fcomps
loop
not
xor
inc
inc
jmp
mov
push
js
xchg
std
into
dec
cltd
push
and
push
mov
sbb
xor
cli
rorb
stc
aam
hlt
push
sahf
jo
push
stc
mov
scas
and
dec
jns
and
loop
pusha
cmpsb
mov
aas
jo
addl
popf
dec
push
jnp
push
fists
add
jae
rorb
xchg
rclb
in
xchg
icebp
sub
adc
ficompl
js
xor
rcrl
sbb
int3
or
sub
sbb
icebp
insl
in
jg
mov
lods
sub
aas
jg
mov
out
insl
imul
mov
and
test
mov
pop
aad
repnz
decl
iret
lcall
dec
adc
pop
addl
dec
js
icebp
std
lods
mov
pop
or
inc
leave
sub
ss
add
xchg
mov
mov
ret
adc
lea
mov
add
inc
push
test
dec
test
push
xlat
xchg
or
xlat
ljmp
and
mov
std
add
lods
adc
clc
cmp
or
das
test
ret
mov
add
mov
ret
in
jno
int
or
lret
in
cmpsb
jns
mov
mov
shl
dec
repz
fisttpll
jp
pop
jnp
sub
mov
pop
mov
in
lods
inc
xor
arpl
cld
xchg
imul
and
roll
xchg
popa
mov
dec
jmp
xchg
mov
push
aaa
es
mov
mov
push
lock
and
ret
cmp
idivl
out
and
fwait
adc
lcall
bound
test
divb
dec
aaa
cmp
xchg
xor
pop
cmc
mov
mov
rcr
mov
gs
call
movsb
pushf
in
or
pushf
xor
shl
fidivl
sbb
cwtl
pop
add
mov
and
xchg
jnp
lret
xchg
lock
push
sbb
push
popa
imul
call
mov
mov
mov
pop
push
mov
addl
xchg
test
mov
xor
adc
sub
inc
ror
popf
xchg
cs
outsb
inc
out
sbb
adc
lahf
icebp
and
add
lods
andl
xor
ficoms
stc
insb
xchg
mov
fidivrs
std
mov
fidivs
pop
xor
lret
inc
ror
in
jbe
jns
mull
dec
and
or
loop
add
jns
decl
xchg
iret
addr16
cmp
cmp
cmp
mov
nop
cmc
xchg
mov
arpl
push
mov
es
push
pop
mul
test
out
mov
lods
addr16
std
dec
cmp
jge
leave
clc
test
sub
cmp
push
adcb
jp
push
dec
cwtl
pop
jl
cmp
out
mov
pop
rclb
pop
xor
or
pop
inc
cmc
xor
inc
jbe
dec
cmc
mov
push
call
pop
sub
push
mov
inc
scas
dec
cmpsb
mov
shll
add
fistpl
jo
fs
imul
xor
cmp
mov
xor
shr
jne
and
pop
daa
push
dec
add
out
dec
dec
sbb
cmp
lret
sub
imul
xlat
mov
ds
xor
push
lret
pop
xchg
lods
stc
es
cmp
xor
mov
pop
xchg
lret
xchg
dec
cli
in
pop
inc
icebp
test
push
pusha
jae
dec
shlb
inc
sahf
mov
push
pop
scas
jge
add
fdecstp
xchg
popa
sahf
jp
gs
jbe
mov
dec
push
xor
idivl
outsb
sbb
stos
sbb
push
pusha
and
vroundsd
lret
sbb
movsb
popf
call
imul
mov
xor
std
xchg
ficomps
cmpsl
pushf
sbb
mov
pop
lods
testl
int
push
popa
adc
std
xchg
lods
not
sarb
in
scas
jb
int
fdivrs
mov
mov
adc
icebp
int
cmpsl
imul
dec
sub
test
or
pushf
cli
sub
out
stos
cltd
dec
jge
fisttpll
sahf
push
push
lock
repz
pop
call
je
sbb
mov
roll
test
xlat
imul
cli
inc
pop
add
lods
arpl
xor
mov
or
pop
out
cmpsb
dec
gs
cmp
add
outsl
push
push
lcall
jne
inc
ficomps
dec
pop
push
popa
sti
xchg
fwait
leave
fstpl
shlb
sbb
mov
sbb
mov
and
shlb
int
jmp
aas
scas
jle
lea
shr
outsb
jmp
push
sub
hlt
mov
jbe
add
adc
xchg
pop
std
mov
bound
stos
stos
imul
in
shll
pop
sahf
mov
lds
push
out
aas
sub
sarl
jb
jb
jl
add
and
xchg
inc
xchg
inc
push
mov
repz
or
inc
dec
cmp
cli
or
xlat
pop
lock
insb
or
mov
mov
pop
cmpsb
cmp
push
in
sub
int
out
cmp
int
pop
pop
neg
push
rorl
push
sbb
adc
and
mov
popl
sub
adc
sbb
or
ja
or
add
imul
jmp
enter
mov
push
sub
out
loopne
insl
fwait
sbb
sbb
shll
ret
ljmp
cmpb
mov
cmpsb
sub
push
xchg
fsubrl
push
decb
jecxz
adc
pushf
push
loop
pop
daa
in
in
inc
push
mov
jnp
mov
sub
loopne
mov
inc
les
subl
sub
movsb
negb
call
mov
stos
movsl
pop
mov
fdivrl
rorl
in
add
mov
lret
arpl
roll
or
mov
dec
inc
rcll
pop
cmp
rcll
out
sbb
aaa
sub
mov
and
sub
adc
test
cld
add
xor
decl
movsl
inc
sub
rorl
mov
mov
mov
xchg
pop
jge
fs
mov
loope
pusha
cmpsb
sti
xor
lret
or
popa
mov
add
scas
dec
imul
push
cmp
sbb
dec
adc
stc
cmp
mov
lahf
pop
insb
jmp
cmp
in
bound
and
or
inc
mov
clc
mov
cltd
jbe,pt
push
lods
pop
xor
adc
jle
xor
push
push
or
push
popf
arpl
cmc
popa
jge
push
test
mov
push
lea
insl
xchg
dec
gs
sub
xor
xchg
movsb
shlb
sbb
xorl
mov
add
sub
inc
test
rolb
push
pop
fcomp
out
iret
stc
subb
addl
fwait
sti
jecxz
jp
iret
icebp
add
push
je
mov
in
pop
jb
pop
test
loope
jae
shrl
enter
mov
and
rorl
insb
daa
jo
sbb
das
lahf
fldt
dec
cmp
add
and
imul
mov
inc
jl
das
enter
and
ret
cmp
jns
sub
and
lock
out
sysenter
push
dec
mov
inc
mov
cmp
es
repz
cld
mov
xor
in
push
xor
xchg
xchg
xor
push
popf
stos
popf
cltd
les
or
out
ficomps
jle
aam
outsb
into
pop
cmpl
xor
fld
adc
addb
mov
sbb
mov
inc
test
aas
icebp
add
jg
je
pop
bound
not
or
movsb
iret
xlat
mov
push
and
push
js
lahf
or
fdiv
jae
xor
jno
orb
popa
loopne
add
sub
jg
adc
stc
mov
cmp
xchg
and
dec
mov
imul
shlb
fisubrs
cmp
movsb
out
sbb
xchg
test
mov
adc
mov
and
cmp
or
xor
sub
insl
or
push
inc
and
in
andl
mov
pop
into
pop
push
mov
inc
fs
into
dec
repz
mov
or
sbb
push
mov
ffreep
aam
lds
push
jo
fdivrl
mov
nop
mov
mov
mov
fstl
lret
ficompl
rclb
sbb
clc
insb
aam
cld
adc
mov
adc
xchg
xor
or
sub
jne
dec
mov
call
and
push
mov
dec
cwtl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
fdivl
cmpsl
sbb
or
bound
ss
mov
xor
sub
mov
push
imul
push
insb
push
jg
lcall
popa
sbb
pop
out
xlat
jae
xchg
jle
push
movsb
js
es
add
mov
add
std
ss
xchg
lds
ret
and
scas
rcr
out
mov
adc
jbe
sbb
or
es
adc
xor
js
xor
sbb
dec
add
sbbb
clc
int
test
mov
loope
lcall
jge
xchg
in
fwait
mov
cwtl
push
push
push
xor
mov
movsl
in
inc
jns
xchg
mov
xchg
or
repnz
aam
shr
je
test
adc
adc
add
fcmovb
jns
xor
xor
cmp
icebp
popf
mov
ss
cmc
xlat
push
adc
lcall
add
sarl
shlb
cli
sub
stos
xchg
je
repz
push
xor
adc
push
popa
mov
cltd
mov
insl
mov
je
mov
xchg
push
ljmp
cltd
pushf
inc
inc
insb
pop
enter
jmp
pop
sub
cld
sbb
inc
xlat
xor
cwtl
jl
mov
dec
out
stos
xlat
lock
adc
jne
cld
iret
sbb
mov
scas
push
inc
xlat
pop
fcmovne
push
div
aas
push
cmp
int
and
xor
cmp
push
clc
sub
add
ficoms
jle
xor
jge
nop
shld
mov
adc
sbb
bound
das
mov
sub
movsl
repz
xchg
xchg
pop
jnp,pn
mov
xor
inc
aaa
cmp
sbb
push
mov
movsb
xorl
push
insb
in
jnp
fwait
ja
pop
push
inc
sti
dec
jnp
push
cmp
pop
pop
call
imul
mov
jp
xlat
jbe
cmpsl
xchg
sub
xor
testb
lcall
sbb
into
cmp
dec
jae
jp
stc
pushf
sbb
in
sbb
enter
push
pop
pop
addl
lret
lret
in
je
jne
cmp
out
jne
int3
int3
sbb
bound
je
outsl
sub
ja
jg
rorl
sbb
test
add
push
pop
pop
cld
jnp
inc
mov
lcall
adc
nop
mov
icebp
push
jnp
mov
push
and
jb
mov
enter
imull
dec
pop
pop
loope
bound
out
mov
insb
xor
jp
mov
xor
add
dec
mov
cmc
shl
imul
adc
push
popf
insl
loop
ret
push
xor
fildl
insb
xchg
enter
int
pop
jo
jmp
jmp
loope
xchg
shr
push
push
rcrb
sub
aas
or
jecxz
jnp
movsb
sahf
scas
mov
and
mov
push
outsb
in
inc
leave
jecxz
les
adc
xor
push
dec
jnp
test
repz
push
cmp
or
insb
push
xor
int
clc
inc
cwtl
sbb
mov
mov
subb
bound
cmc
xlat
mov
jne
dec
outsl
mov
mov
aaa
aad
sahf
roll
shr
add
js
test
push
loope
mov
cli
jmp
mov
cmp
push
xor
push
mov
in
pop
sbb
popf
lahf
and
movsb
loopne
add
sahf
call
in
xchg
adc
bsr
jbe
mov
insl
pop
adc
call
in
pop
or
dec
scas
xchg
xchg
outsb
out
scas
call
movsb
out
sahf
mov
add
jb
pop
dec
push
jns
in
cmpsb
mov
out
and
pop
in
jp
mov
mov
inc
mov
fwait
xorl
out
or
or
jo
insb
lods
cmp
dec
inc
pop
push
mov
push
jnp
fists
ret
jecxz
inc
cli
call
data16
test
and
cs
ljmp
cmpsl
enter
lret
push
aas
into
test
jecxz
push
sbb
mov
push
sbb
loopne
je
mov
mov
movsl
sbb
sahf
test
inc
lret
ss
test
out
xchg
movsb
xchg
lcall
cld
add
sbb
sbb
stc
mov
push
mov
xor
shrb
out
adc
addr16
cmp
jmp
ficoms
cwtl
aad
adc
and
pop
das
rolb
ret
mov
ljmp
ret
fwait
push
in
mov
call
imul
cltd
cltd
mov
bound
jl
das
imul
jo
dec
push
xorl
pop
inc
xchg
push
jo
and
shrl
xor
adc
and
aaa
pop
js
in
mov
popa
or
push
push
pop
adc
test
and
push
bound
jne
fcoml
push
std
xor
stos
mov
fidivl
add
and
pop
mov
mov
cwtl
mov
incl
adc
pop
jo
sub
cs
cli
push
test
jecxz
cld
es
sub
pop
adc
aad
shrl
notb
xchg
in
shll
sbb
fildl
ljmp
dec
cwtl
pop
or
ret
mov
cmp
cli
test
insl
jle
inc
push
mov
jb
je
xchg
adc
jno
dec
mov
in
push
ljmp
pop
mov
or
popf
stos
daa
movb
fs
test
icebp
hlt
fldl
imul
les
push
or
movsl
cwtl
cli
xor
cmp
vcmppd
push
mov
outsb
xchg
popa
cmp
xchg
inc
clc
jmp
pushf
cmp
sub
inc
mov
push
mov
inc
sub
push
int3
push
or
idivb
or
xchg
test
lcall
sbb
and
xchg
lahf
dec
ljmp
pop
pusha
xchg
mov
mov
aad
jge
in
cli
fsubrl
inc
cmc
stos
addr16
adc
pop
xchg
test
lods
fisubs
cltd
ljmp
add
ja
mov
mov
adc
cmp
ljmp
out
scas
in
push
loop
mov
mov
sbb
add
sub
inc
icebp
or
in
cmp
xchg
loop
jb
and
mov
adc
shrb
lret
test
mov
mov
mov
lret
jb
mov
sub
xchg
sbb
stos
call
in
add
insl
das
vmulsd
dec
mov
int3
insl
iret
jne
sbb
mov
fs
testl
aad
ret
mov
mull
andb
jg
jge
cmp
sbb
push
inc
xchg
pop
jmp
sub
cmc
out
lret
movsb
mov
ret
push
call
popf
push
andb
xchg
pushf
add
mov
sahf
jnp
rcrl
cs
sub
stos
clc
cmp
push
out
mov
test
fwait
or
fcmove
cmpsl
out
jmp
cld
push
and
or
add
and
or
sub
lods
or
xchg
cwtl
add
std
xchg
or
aad
aad
stos
in
push
sub
call
jnp
jb
int
std
adc
or
rclb
push
fwait
adc
inc
pop
sub
cli
xchg
loope
movsl
test
inc
xchg
pop
pop
popf
pop
push
shrb
popa
out
mov
loopne
int
movl
push
pop
inc
fcomps
shll
pop
notl
dec
les
jne
test
out
pusha
cmp
test
iret
sub
stos
xchg
and
roll
call
cs
ss
popf
sbb
mov
lret
fisubrl
out
mov
hlt
and
adc
out
stc
in
mov
mov
stc
mov
mov
movsb
mov
leave
add
das
push
je
scas
cmp
fs
pop
pop
movsb
pop
mov
xchg
mov
pop
pushf
dec
sbb
xchg
jbe
lods
and
mov
add
push
sahf
jmp
pop
outsb
sahf
les
push
pop
sub
pop
dec
jo
cmpl
cmp
pushf
pop
jmp
rcl
pop
call
mov
or
nop
push
aaa
bound
pop
test
test
test
sti
std
icebp
mov
sbb
in
mov
mov
rol
fcmovbe
fwait
jns
push
jne
inc
fdivrl
jo
mov
call
push
fsubl
mov
addr16
jecxz
fs
out
insl
jl
cwtl
sub
mov
and
cmp
pop
or
xchg
and
in
test
mov
mov
rcrb
hlt
dec
xchg
in
rcll
mov
ret
test
dec
scas
sar
cmp
subb
xor
xlat
stc
jmp
iret
rcrl
ja
sbb
fstp
std
pusha
dec
stos
into
mov
outsl
push
inc
mov
cmp
mov
xchg
clc
int3
cmp
pop
out
and
ret
fbstp
mov
and
mov
jmp
inc
pop
std
call
imul
test
es
sub
shlb
fidivs
xchg
mov
mov
stos
jb
jno
mov
inc
test
inc
push
sub
fadd
adc
pop
mov
lret
sbb
add
ficoms
mov
and
inc
aad
or
xchg
jecxz
addr16
fnsave
xchg
sbb
push
leave
xchg
cmp
fs
add
sbb
mov
inc
and
loope
dec
out
xchg
gs
cmp
inc
mov
cmp
add
aam
imul
inc
pop
or
mov
repnz
jb
push
adc
aad
jmp
mov
sbb
cmp
imul
enter
adc
xchg
xlat
ss
cwtl
rolb
shll
mov
pop
jnp
push
nop
add
and
pop
popa
ret
cmp
jne
mov
into
push
or
in
repz
jp
outsb
bound
push
repz
aad
xchg
je
dec
inc
les
lea
mov
nop
dec
sahf
pop
aaa
mov
movsl
fwait
jns
loope
sub
inc
hlt
fsts
clc
loope
and
andb
fimull
cmp
das
xor
loope
stc
pop
dec
insl
cld
test
int3
sub
mov
dec
inc
xor
subl
inc
or
movsb
and
lcall
nop
shl
adc
xchg
cld
nop
lahf
jb
mov
int
rcll
das
mov
fucomip
xchg
pop
je
push
ljmp
jle
pop
pop
pushf
sub
ljmp
fstl
jge
add
mov
xchg
push
sbb
pop
dec
mov
mov
out
inc
mov
mov
push
cmpsb
or
xchg
jg
pop
pop
xor
rorb
addr16
cmp
ja
inc
lcall
bound
xor
jp
adc
cmp
sub
arpl
push
mov
push
or
mov
xor
sub
mov
es
scas
jg
adc
ss
mov
jge
sub
mov
xchg
sti
xor
fldenv
ljmp
popa
dec
test
icebp
insb
cmpsl
add
xor
mov
mov
ficompl
mov
pushf
popa
or
imul
push
xchg
aaa
and
xlat
pop
and
jns
mov
pop
push
fstps
push
dec
xor
adc
loop
mov
repnz
cmc
xchg
popa
enter
pushf
dec
outsl
and
insl
cs
add
test
les
adc
push
cs
ja
loopne
xor
mov
add
mov
or
mov
jp
or
test
fcoml
out
mul
enter
insb
fmul
sub
mov
mov
idivl
sub
adc
repz
inc
lods
repz
movsl
outsb
jne
ja
rclb
lods
dec
scas
repz
dec
ret
mov
inc
jg
nop
inc
jl
ja
mov
sbbl
stos
inc
jne
rcl
mov
xor
dec
cmp
out
mov
shr
dec
pusha
jg
jns
xchg
and
sub
xor
jns
repnz
push
insb
insb
out
sbb
jge
out
mov
adc
push
push
mov
js
js
xorb
jl
push
mov
outsb
xchg
cmp
popl
add
je
in
mov
and
mov
loop
cmp
test
shll
dec
push
push
sub
sbb
xor
stos
enter
or
test
daa
mov
movsb
testb
mov
inc
dec
loopne
sarl
mov
mov
sbb
test
aas
and
stc
cltd
cmpsl
or
mov
push
mov
out
loope
imul
arpl
dec
jbe
mov
std
cmc
mov
pop
pusha
js
pop
adc
xor
xchg
data16
leave
das
call
out
sti
icebp
jmp
jno
inc
cmp
mov
aad
adc
adcb
xchg
enter
fdivrl
pop
leave
inc
jg
sub
ret
adc
outsl
call
mov
fdivs
pop
dec
cmp
add
ljmp
push
pop
push
test
push
ret
and
ret
mov
inc
int3
mov
jbe
test
ja
sti
imul
jns
test
inc
mov
js
loopne
xor
stc
das
mov
cld
mov
sbb
aam
in
pop
cmp
sbb
xchg
cmp
pop
jecxz
xchg
or
fs
jmp
testl
scas
out
and
dec
clc
fnstcw
testb
ret
sbb
mov
xchg
pop
xor
jl
int
and
inc
les
xchg
cli
add
jl
sbb
fstp
mov
dec
pusha
lea
cmpb
and
pop
daa
add
outsl
lea
int3
lahf
sub
lea
sbb
adc
sbb
test
popl
pop
and
clc
shr
dec
jecxz
inc
call
mov
sbb
insb
mov
rorl
aad
rcrb
insl
pushf
loopne
xchg
ret
rolb
movsb
jl
jns
push
fs
dec
shrb
das
mov
das
mov
jnp
adc
jne
adcl
mov
dec
and
mov
and
in
aad
push
ljmp
mov
fbstp
xor
incb
outsb
cmp
aaa
adc
push
jo
clc
adc
sbb
inc
add
leave
aas
inc
push
xor
inc
or
in
adc
mov
and
clc
mov
push
sahf
jmp
cmp
push
mov
sbb
push
mov
and
add
mov
push
push
addr16
and
dec
scas
mov
mov
jae
pop
push
pop
test
pop
mov
std
sbb
cmp
push
cmp
xchg
cmpsb
xchg
mov
cld
xchg
jnp
insl
xlat
adc
das
adc
ds
push
cmp
fsub
or
mov
movsl
jo
and
shlb
cmp
mov
add
cli
xor
das
inc
and
mov
jecxz
dec
arpl
aas
cmp
adc
xchg
inc
jae
scas
out
jecxz
js
dec
lret
jecxz
mov
aas
imul
push
adc
cli
xchg
pop
cmp
adc
jnp
fisubl
or
pop
ucomiss
cmp
pusha
fwait
imul
shrl
inc
setne
cld
ret
ret
jno
add
adc
dec
lcall
add
push
add
add
out
es
mov
bound
jbe
imul
add
and
in
clc
fwait
or
cmp
lret
add
mov
in
gs
mov
andl
jno
inc
push
xor
pop
sbb
add
jns
sbb
in
leave
dec
aad
cmp
fsubrl
xchg
fidivrl
jno
cmp
mov
arpl
and
jnp
pop
push
sbb
aas
pop
sahf
test
jle
jmp
mov
mov
lds
pop
xchg
mov
add
lcall
lret
dec
xor
xchg
lret
push
popf
inc
cli
or
mov
push
dec
in
filds
lods
and
ljmp
adc
std
out
cltd
insl
mov
or
ss
sahf
inc
sbbl
jb
into
lret
int
sbb
repz
test
inc
leave
rolb
testb
into
pushl
lcall
mov
rcl
idivl
aam
js
push
xchg
ret
fiadds
push
and
test
mov
std
fdivr
pushf
stos
rcr
mov
sahf
bound
pop
je
sbb
es
sahf
je
pop
int
int
jno
dec
and
xor
jmp
test
xor
xor
xchg
xchg
lods
xchg
mov
dec
imul
sub
push
mov
cmp
fnsave
out
dec
scas
ret
xor
outsl
lock
and
push
jno
popa
dec
loope
call
cmpsb
and
mov
push
cmp
outsb
cwtl
push
add
push
mov
inc
add
in
mov
cmp
jmp
lea
pop
aam
mov
rorl
sub
cmpsb
cmpsb
psllw
sub
push
pop
lds
inc
ret
aaa
testb
ret
xchg
adc
leave
mov
dec
bound
arpl
mov
xorb
push
movaps
js
lahf
mov
mov
dec
sub
inc
jb
es
adc
ss
outsl
sbb
push
mov
push
mov
sti
test
pop
scas
daa
adc
into
push
mov
loope
jle
mov
sbb
jns
aad
popf
xor
fldl
or
repz
mov
sub
mov
repz
cmpsl
sub
jmp
jae
cmpsb
lcall
jno
xor
pop
nop
add
inc
or
mov
cld
cs
and
xor
cmp
xchg
loopne
push
ljmp
push
bnd
xor
inc
push
sti
in
push
pop
icebp
lock
inc
arpl
jmp
into
or
test
add
dec
movsl
fcoml
fisttpll
mov
movsb
ret
dec
add
add
arpl
sub
inc
mov
lret
cmp
jle
adc
ret
adc
sub
lea
mov
jo
push
pop
jge
mov
pop
das
cmp
inc
sbb
in
into
stc
fsts
dec
lods
sub
jbe
repnz
push
and
xor
in
pop
daa
cmp
xchg
add
inc
popa
lahf
mov
push
pop
push
or
dec
cmp
aaa
lcall
ds
pop
movsb
adc
scas
lcall
xor
rcl
xor
or
mov
inc
idivb
push
jo
xchg
addr16
xchg
std
inc
cwtl
int3
pop
inc
lods
dec
stos
jno
push
pop
shll
cmp
jne
add
mov
int
dec
push
xchg
push
fadd
call
mov
call
xchg
or
imul
int3
jns
cmpsb
ficoml
add
mov
mov
out
pop
fsubrl
jmp
push
mov
loope
pop
jne
xor
int3
arpl
xor
cmp
sub
in
test
out
jns
loope
fcoml
aam
jae
xchg
leave
inc
cmpsb
sbb
cli
lds
ds
gs
and
push
mov
sbb
fisubrl
jb
sub
xor
cmc
mov
sahf
icebp
loope
pop
imul
fimull
sahf
xor
jno
inc
inc
adc
jo
cmp
or
jecxz
shlb
jle
push
aas
das
repnz
adc
pop
xlat
repz
push
aad
jnp
or
or
stos
arpl
or
sti
lock
fwait
dec
mov
mov
or
cmp
imul
push
mov
and
daa
leave
cwtl
into
ljmp
call
add
scas
xor
add
xor
lds
aas
sub
cmp
mov
mov
lock
inc
movsb
and
daa
cmp
add
adc
jl
lcall
fsubs
imul
mov
shll
jb
ljmp
sbb
xor
adc
jne
sbb
popf
mov
inc
xchg
jb
adc
sahf
push
fidivrs
dec
bound
jle
pop
aad
cli
in
rcl
pop
jle
pop
jb
push
cmp
jmp
mov
insb
dec
sbb
std
adc
fdivrs
sbb
aam
xlat
jle
les
mov
adc
dec
jae
xchg
xchg
dec
cmp
and
dec
or
and
rcll
outsl
or
xchg
outsb
fldt
add
icebp
sub
mov
jno
push
out
sbb
jl
pop
sub
pop
push
inc
mov
mov
mov
sub
pop
cli
aaa
sbb
xchg
mov
loope
xchg
lods
dec
fnsave
mov
addb
push
mov
mov
pop
ljmp
sbb
sbb
cmp
fimull
in
push
in
jle
add
jo
addr16
pop
lahf
jl
fcomps
aaa
or
jg
scas
push
sub
xchg
push
in
adc
xor
inc
mov
add
pop
cli
dec
daa
push
xor
mov
inc
lods
and
sbb
imul
pop
jno
jnp
xchg
sti
cmp
sbb
rcr
subb
fdivrl
insl
hlt
sub
mov
push
mov
repz
lock
in
fidivl
ret
mov
dec
rcll
int
das
jge
pop
and
fisubrs
pop
pop
ds
and
test
mov
jp
push
filds
and
sub
inc
xchg
sub
data16
cwtl
add
sti
jbe
ret
push
int
into
push
or
xchg
mov
add
add
dec
insb
sbb
jnp
mov
or
sti
or
cmp
push
movsb
jbe
popa
sub
mov
lock
pusha
pop
lret
cmp
pop
adc
mov
aam
mov
test
push
xchg
xor
aam
movsl
in
repz
mov
xchg
hlt
inc
and
pop
dec
std
fsubs
mov
push
mov
add
inc
mov
inc
testl
out
xor
pop
fisttpll
ljmp
adc
iret
ss
push
es
imul
aaa
add
addl
inc
imul
frstor
cmpsb
in
sbb
fstl
pop
xchg
push
lock
in
call
scas
cmpsb
xor
jbe
test
mov
les
mov
jecxz
inc
in
add
push
nop
inc
mov
adc
repz
xchg
or
int
cmp
scas
push
mov
jecxz
mov
mov
ja
cwtl
andl
mov
pop
adc
xor
fcompl
jae
add
jp
fdivr
cld
dec
push
cmc
push
pop
lret
lods
pop
push
xchg
and
push
push
push
cmp
cli
push
add
xor
or
nop
stos
push
sub
jl
cmp
pusha
ret
push
stc
push
mov
loope
leave
sti
push
dec
xchg
jge
cmp
aad
add
sub
lret
andb
mov
or
jecxz
sbb
xor
adc
pop
div
das
andl
loope
mov
arpl
jmp
sbb
adc
call
imul
repnz
push
test
in
sti
shr
push
lahf
dec
sub
orl
xchg
sub
popa
iret
jg
xor
pop
ret
sbb
addr16
pop
and
or
cmc
ja
pop
adc
add
xchg
inc
repnz
cmpsl
dec
jns
mov
mov
and
movsl
inc
fwait
repz
movsb
hlt
inc
sbbl
pusha
inc
pop
pop
clc
xchg
cmpsl
repnz
jnp
lret
inc
or
and
flds
xor
xchg
jge
clc
int
out
cmp
scas
cmp
jl
jge
or
push
dec
fisttps
push
mov
aam
inc
adc
jae
popf
aad
test
jae
mov
shl
xchg
mov
mov
adc
jo
or
dec
cmp
clc
sub
mov
mov
ret
jmp
clc
push
and
jmp
sahf
stc
ss
jo
test
negb
mov
dec
jbe
popa
xchg
lret
dec
add
mov
aaa
xor
repz
popf
adc
sub
jle
outsb
mov
int
jns
imul
adcl
subb
push
ret
sbb
add
lret
clc
mov
clc
sub
popf
test
nop
lret
or
add
sub
es
push
int3
hlt
mov
sbb
mov
shll
mov
push
mov
add
cmp
scas
sub
and
ja
sbb
mov
xchg
mov
aad
mov
and
imul
pop
mov
fsub
dec
xchg
stos
pop
jno
cmp
pop
les
ret
punpcklwd
cmp
into
in
out
out
pop
rcrb
dec
sub
shl
mov
pop
jae
or
sahf
pop
inc
mov
dec
cltd
jne
test
sub
push
aam
out
xor
icebp
in
add
sbb
push
jle
int3
movsb
lock
arpl
enter
pop
lahf
shrb
or
and
push
push
cmp
dec
adcl
xacquire
and
mov
lock
dec
and
mov
cld
testl
cltd
sbb
arpl
lods
hlt
jnp
mov
and
dec
imul
sub
insl
dec
mov
sarl
fs
sbb
stos
fnstcw
gs
mov
inc
imul
sub
lahf
sub
mov
mov
ret
leave
xor
jge
stc
fdivrp
inc
nop
outsb
cmp
bound
inc
pop
cmp
dec
or
push
loope
out
pop
das
mov
fstpl
cmp
inc
mov
out
jns
daa
mov
roll
stc
lahf
pushf
call
ret
movsb
or
ss
loop
inc
enter
loop
and
inc
jp
push
fcmovne
mov
fnsave
and
cmpsl
les
hlt
dec
lods
push
mov
stos
or
jp
mov
insb
lods
shll
cmp
fcmovbe
lods
add
push
cs
adc
push
test
pop
lcall
mov
lret
daa
cmpsb
add
mov
pop
lods
mov
inc
or
push
cs
div
xchg
leave
adc
xor
outsl
ds
xchg
nop
pop
xor
lods
into
out
cmp
mov
ds
stos
arpl
mov
sbb
adc
nop
mov
nop
sbb
insb
mov
xor
iret
push
xor
push
dec
and
add
lahf
arpl
rclb
add
dec
cli
inc
sub
cs
jno
mov
push
or
cmp
dec
adc
add
clc
icebp
xor
outsb
fs
test
inc
dec
ds
arpl
hlt
roll
fstpl
jnp
cmpsl
ds
and
xchg
int3
lahf
int
sbb
and
xchg
pusha
pusha
cmp
push
mov
mov
aad
stc
jecxz
shl
and
in
mov
sbb
ds
push
or
sub
mov
jp
ds
or
pop
iret
je
icebp
nop
sahf
rorl
cld
adc
xor
push
adc
pop
xchg
in
mov
push
xchg
xchg
dec
enter
out
inc
cmpb
and
fisubrs
xor
sbb
jmp
jb
cmpsl
jns
sub
movsl
ss
jge
mov
dec
popf
xchg
out
inc
mov
and
cli
int
jle
or
ds
dec
cmp
adc
iret
repnz
ret
adc
jno
in
mov
outsb
sbb
fdivs
and
adc
es
jb
dec
out
xchg
inc
jp
sbb
add
test
roll
lret
mov
mov
outsl
mov
stc
pop
int
dec
rorb
pushf
out
daa
mov
pop
out
rcl
int
sub
mov
cld
sbb
test
jmp
mov
mov
pop
inc
js
and
in
jg
add
out
aad
mov
gs
inc
data16
inc
mov
xchg
jnp
jg
dec
mov
mov
clc
jne
loopne
add
and
scas
sbb
jle
imul
jno
sti
aaa
out
sub
pop
frstor
daa
dec
mov
sbb
jb
mov
or
sbb
adc
mov
sbb
int
xchg
shr
cwtl
mov
lcall
sbb
and
xchg
je
inc
or
add
insb
push
repnz
dec
jno
add
pop
lods
mov
mov
mov
lret
enter
jle
test
aam
jo
shrl
sub
jbe
push
cld
icebp
sti
xchg
jge
outsl
fs
scas
dec
icebp
sub
stc
outsb
push
cmp
jnp
pop
adc
jae
lods
pusha
jns
push
push
push
mov
pop
cmpsl
sub
pop
jg
push
in
jnp
data16
push
cmp
or
xchg
sub
xchg
mov
loope
fwait
dec
xchg
out
mov
fwait
popf
xor
stc
jge
inc
fnstsw
adc
je
inc
in
sbb
adc
fldl
push
arpl
inc
arpl
daa
mov
mov
xchg
int3
xchg
xchg
dec
adc
xor
add
push
lea
testb
xchg
shll
sbb
popa
loope
popf
and
orl
jae
les
cmp
mov
pop
rsqrtps
enter
add
scas
dec
mov
jnp
pop
and
mov
daa
insl
pop
xor
inc
xchg
les
lock
mov
fcmovu
fwait
clc
sub
fiaddl
jp
jo
mov
xor
sbb
in
gs
cmp
and
stos
pop
out
in
xor
imul
fldt
xchg
rol
dec
gs
mov
cmpsb
icebp
stc
mov
dec
popl
jg
in
rorb
les
and
dec
popf
xor
xchg
je
rcrb
stc
cmp
jl
and
push
enter
rol
mov
cmpsl
xchg
sbb
rcll
sbb
push
jnp
cld
mov
in
and
or
jl
jmp
or
jp
cmp
arpl
adc
lods
in
cmp
xchg
or
lods
push
xor
pop
out
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
loopne
dec
hlt
bound
pop
bound
lods
jae
push
dec
inc
mov
stos
aam
sbb
or
mov
sub
lods
clc
cmp
fisttpll
aaa
int3
popa
sub
inc
push
ds
dec
int
cmp
adc
mov
mov
add
jle
jmp
mov
decb
outsl
lock
sub
stos
pop
lea
push
iret
repnz
dec
cmpsb
movsl
jns
xor
aaa
inc
mov
scas
push
clc
cwtl
mov
jp
outsl
cs
or
test
mov
xor
addr16
dec
repz
insl
cs
fs
lock
aam
inc
mov
pushf
or
in
inc
cmc
dec
ljmp
insl
lods
jnp
inc
adc
mull
dec
or
xchg
mov
sub
jl
sahf
mov
int3
icebp
jae
xchg
sbb
test
bound
jbe
in
xlat
sbb
jb
xor
jb
sbb
jecxz
imul
pusha
lret
into
sahf
int
test
out
aaa
movsl
loopne
adc
inc
data16
xor
or
lret
xchg
clc
mov
add
pushf
lahf
lret
rcl
aam
sub
sbb
negb
or
or
mov
mov
pop
jl
test
pop
and
mov
push
les
sbb
pushf
clc
jmp
mov
out
mov
loopne
popf
dec
add
xchg
test
pop
inc
arpl
jle
fsts
rcll
out
push
leave
fdivl
cmp
mov
clc
pop
adc
push
shrl
fnstenv
jne
inc
and
sub
insb
lea
stc
shlb
movsb
jp
mov
xchg
xchg
push
sar
outsl
mov
cmp
sbb
scas
cwtl
jle
cmpl
mov
call
aad
mov
pop
cli
out
jo
push
notb
add
sbb
and
sti
fistl
or
ds
cmp
bound
dec
rorb
movsb
sbb
dec
lcall
pushf
ds
movl
mov
movsb
sub
add
xorl
data16
testl
pusha
or
rcll
icebp
jns
cmp
in
orl
and
addr16
adc
or
xchg
xor
ret
stos
daa
cmpsb
push
insl
dec
ds
xchg
in
push
scas
add
pop
pop
mov
fsin
sub
jmp
xor
push
int
je
jb
or
fnsave
test
add
push
add
push
outsb
int3
cmpsb
jnp
into
dec
mov
mov
mov
mov
sbb
pop
sub
out
cmc
jmp
xor
push
inc
xchg
xchg
adc
and
dec
and
leave
add
ss
sbb
jg
inc
mov
mov
pop
push
daa
call
mov
xchg
adc
int3
mov
and
inc
inc
rcl
fs
mov
push
je
sub
cwtl
mov
ljmp
adc
inc
in
xorb
xor
jno
jle
fstps
loopne
into
ja
into
xchg
cmp
iret
sub
sbb
fwait
pop
xchg
jle
mov
stos
rcrb
stos
inc
mov
pop
inc
icebp
repz
sbb
out
xchg
or
insl
sub
decl
dec
mov
pop
inc
xchg
mov
aas
pop
mov
stc
test
outsb
xor
rcl
cs
addb
xor
in
rcl
sub
pop
pushf
dec
int3
mov
cmp
push
sbb
cli
jo
and
popa
sbb
inc
lahf
jae
call
xchg
jg
mov
in
mov
jp
ror
cmp
mov
adc
cmpsb
mov
dec
and
or
mov
loopne
cmpsb
cmp
rep
push
adc
mov
hlt
jo
clc
idiv
cmp
or
jns
pop
push
loopne
ret
adc
lods
hlt
and
mov
insl
xchg
loopne
and
add
shlb
insb
bound
leave
bndldx
push
add
popa
jp
in
mov
add
aaa
adc
leave
dec
or
or
enter
ljmp
xlat
or
add
mov
cwtl
mov
mov
pushf
leave
mov
mov
push
cmp
and
mov
sub
ror
sbb
sub
fists
mov
ficoml
lock
in
loopne
mov
in
das
mov
scas
pop
aam
lcall
sub
pop
inc
mov
push
lods
mov
ret
rorl
pop
sub
test
in
or
sbb
push
adc
sub
movsl
mov
sbb
stos
fwait
inc
jnp
mov
push
and
or
push
pop
mov
push
int3
lods
xchg
movsl
cld
cltd
add
jl
and
rol
fisubs
mov
xor
dec
imul
mov
dec
dec
jmp
ja
xchg
jge
lock
outsb
sub
ficompl
ss
imul
pop
cmp
daa
push
xor
ljmp
mov
rolb
sub
mov
mov
pusha
scas
lods
dec
dec
clc
lret
inc
enter
jne
add
lds
pop
add
sti
test
mov
cmp
in
pushf
push
lahf
cwtl
repz
loopne
push
in
push
xor
lock
mov
sub
stos
jbe
push
out
out
out
sbb
icebp
mov
lds
imul
and
xlat
pop
dec
sub
pop
xor
shll
insl
xchg
add
stos
arpl
js
jns
xacquire
pusha
iret
push
sub
ret
das
and
xchg
and
ja
outsb
ss
push
mov
mov
adc
test
aaa
scas
sbb
mov
out
aam
movsl
icebp
mov
scas
mov
inc
inc
sbb
cmp
jns
fnstsw
rcr
or
gs
fldl
dec
push
or
popl
add
jnp
mov
cmp
dec
mov
sub
lods
rcl
cmp
bound
int
jbe
cltd
add
into
ds
mov
pop
or
pop
xchg
xchg
scas
sahf
shlb
xor
shlb
xor
inc
int
int
adc
mov
and
sub
movsb
ret
sbb
mov
ja
and
out
sub
fcmovne
lcall
inc
jno
mov
lods
and
popa
sbb
in
xchg
add
aad
xchg
sahf
les
bound
fdivrs
enter
dec
iret
mov
dec
add
mov
fs
push
ret
or
pusha
lcall
mov
test
scas
xchg
xor
mov
and
push
out
xor
push
out
mov
test
mov
shlb
mov
addr16
fidivs
mov
push
sbbl
cmp
lea
cmp
lea
add
cmp
faddl
test
fildll
dec
xorb
bound
jb
or
int3
ds
sbb
les
add
dec
mov
add
mov
add
mov
cwtl
popf
sub
add
sub
push
add
push
xchg
aas
cmc
lea
insb
shrl
xchg
rcl
cld
ljmp
cmpsb
pusha
push
dec
shrl
add
popa
int3
repz
xchg
or
pop
icebp
inc
sti
mov
adc
pop
test
mov
cmp
in
xchg
scas
jp
es
adc
aam
les
sub
dec
adc
push
lcall
sbb
rcll
pop
call
dec
ja
jno
out
xor
insl
iret
pop
movl
adc
jae
dec
push
addr16
icebp
xchg
mov
sub
inc
xchg
ljmp
and
lahf
test
cli
dec
jae
insl
stc
arpl
negl
scas
xor
jge
sub
xchg
stos
pop
mov
xchg
sub
rclb
or
xchg
insl
mov
out
inc
pushf
fisttpll
punpckhdq
dec
les
mov
jmp
xor
jmp
pop
pop
pop
jb
adc
push
movsb
jmp
sbb
push
xchg
cmp
pop
into
pop
and
sub
pop
sbb
popf
cmpsl
cwtl
xchg
push
aad
xchg
sbb
sbb
mov
dec
loop
push
or
xlat
or
sti
ds
or
sbb
addr16
or
outsl
rcr
adc
mov
sub
mov
add
inc
adc
and
or
movl
ror
jno
shll
into
testl
test
roll
fs
loopne
fidivrl
mov
sti
inc
out
mov
mov
inc
stos
in
dec
pop
mov
fists
cld
push
jmp
subl
adc
cmc
jmp
decl
sti
mov
mov
add
jno
lea
push
stos
pop
mov
mov
xor
jl
lea
out
movsl
sub
imul
jge
sub
out
cmp
adc
lahf
jne
cs
cltd
clc
aad
and
dec
push
pop
xchg
xchg
flds
mov
lahf
clc
jp
mov
fwait
xor
add
dec
clc
sbb
nop
lret
in
mov
jnp
popaw
iret
in
enter
jnp
xchg
lock
lahf
mov
sti
mov
sub
mov
push
clc
xchg
mov
in
inc
call
ss
pusha
cs
outsl
dec
xchg
cwtl
cli
mov
repnz
sbb
mov
add
push
mov
add
jg
test
mov
cld
gs
cld
add
and
and
mov
push
movsl
mov
imul
xchg
push
xor
lahf
icebp
push
repnz
push
adc
mov
inc
dec
xor
fbstp
cltd
js
mov
in
mov
nop
adc
ficomps
push
outsb
sahf
push
add
inc
sbbb
fs
test
lret
in
add
mov
push
ficoms
mov
imul
hlt
sub
fs
imul
jno
mov
in
movsl
sahf
addr16
imul
and
xchg
aad
adc
jae
mov
push
subb
je
dec
push
sub
dec
fs
shlb
add
jle
enter
jecxz
pushf
inc
lods
and
jo
rcrb
in
sbb
sub
xchg
lahf
fisubl
push
jo
xchg
sub
f2xm1
in
mov
leave
dec
xchg
lret
push
xchg
xchg
pop
or
inc
imul
sahf
or
sub
xchg
popf
ja
mov
sbb
ljmp
gs
imull
mov
jo
cld
stos
sub
jle
dec
fcomi
xacquire
mov
mov
mov
hlt
mov
mov
sbb
xlat
push
push
xchg
xor
loopne
cmc
ss
ret
cld
or
imul
sub
push
cmp
mov
ss
pop
shr
sub
sbb
gs
jb
mov
sbb
mov
in
xlat
dec
sbb
ret
add
inc
push
mov
or
xchg
sbbb
ja
mov
inc
ds
repz
mov
test
insl
je
adc
jne
inc
sti
jno
push
int
fidivs
push
sub
sahf
jmp
test
bound
jle
sbb
adc
iret
sub
cmpb
xor
addb
and
fcomip
push
sbbl
add
and
lcall
imul
mov
arpl
xchg
fucomi
jge
cltd
popf
in
ficoml
rcr
test
mov
movsb
or
inc
or
inc
xor
mov
fwait
nop
outsl
movntq
out
stos
pop
sbb
or
and
mov
mov
int3
in
jnp
fwait
cmpsb
bound
gs
aaa
aad
adc
or
mov
daa
sub
xor
sbb
mov
mov
shll
out
dec
in
lea
mov
scas
xor
fstps
push
mov
push
outsl
leave
ljmp
icebp
xchg
daa
jns
mov
mul
test
fmuls
xlat
lcall
addr16
jecxz
or
movhlps
loopne
mov
xor
pop
sub
push
push
xchg
lods
pop
sub
cltd
sti
ficompl
jge
inc
mov
dec
fnstenv
mov
mov
and
sbb
cld
popa
mov
xchg
add
xchg
pop
lods
int
pop
leave
mov
dec
sti
mov
push
ret
or
mov
test
or
sahf
cwtl
mov
mov
cltd
or
paddq
push
out
mov
push
lods
jb
loopne
addr16
push
or
xlat
lret
fldt
and
out
jle
mov
mov
nop
jnp
js
cmp
dec
fistl
cwtl
test
lock
icebp
dec
or
insl
push
mov
inc
daa
mov
inc
pop
xchg
popf
pop
sbb
das
sub
mov
out
movsl
in
das
subl
xor
lods
stos
cmp
xchg
push
inc
rcr
adc
fsts
fildl
xchg
cmp
dec
mov
cli
bnd
push
pop
inc
pop
add
jne
push
mov
fbld
mov
jp
jnp
mov
stos
mov
jbe
test
popa
mov
push
pop
call
sub
sbb
shll
add
ljmp
enter
jae,pt
stc
push
fs
mov
or
xchg
push
cltd
lahf
add
stos
scas
pop
loope
mov
adc
xor
popf
jle
lds
mov
mov
lahf
cmpsb
pop
mov
inc
xor
adc
imul
dec
movsb
bound
xor
inc
jb
int
pop
jl
scas
dec
inc
movd
divl
into
inc
imul
lahf
call
jg
ss
loope
sub
rorb
add
xchg
dec
addr16
xor
stos
xor
addr16
out
push
xchg
xchg
int
mov
mov
pushf
std
sbb
cmp
push
jno
aad
add
push
pop
lret
add
in
aaa
ds
dec
add
jg
inc
adc
test
cld
jg
xchg
inc
xchg
push
mov
or
push
loope
seto
lea
popa
jb
lret
sub
cmp
dec
fistl
out
ret
pop
sub
jmp
inc
lods
scas
push
xor
inc
imul
ror
mov
pushl
jl
cs
adc
inc
lahf
iret
cmp
inc
cmpsb
movsl
add
fwait
mov
adc
jle
cld
xchg
notb
xchg
mov
inc
bound
xlat
enter
outsl
cmp
mov
pop
into
and
ss
hlt
mov
clc
or
and
cli
cmp
dec
je
leave
testl
inc
rorl
out
outsb
call
xor
enter
fs
cmp
push
mov
mov
or
int
jge
sbb
and
and
pushf
rcll
pop
in
addr16
pop
ss
cltd
stos
xor
pop
cmp
fdivrs
cmp
sub
pusha
and
cltd
mov
nop
fsubrl
mov
sbb
adc
cs
cmpsl
jb
jmp
jmp
pop
js
sub
inc
xchg
fidivrl
insb
or
add
ds
stos
das
addr16
filds
cmp
rclb
test
push
das
mov
xchg
aad
imul
dec
shl
sbb
and
testb
mov
in
outsl
ret
and
addr16
cltd
ss
mov
ljmp
lds
outsl
push
test
int3
sbb
bound
pop
iret
scas
jo
scas
mov
sbb
pop
inc
mov
and
dec
test
arpl
rcll
sbb
mov
sub
cmpsl
test
jg
lea
cli
lcall
ss
add
sarl
in
cmp
cmp
stos
frstor
inc
jmp
ffreep
dec
xchg
call
cmp
sbb
inc
jp
sbb
lea
adc
das
jl
sub
and
sub
inc
ret
popa
dec
int
rcrb
add
push
mov
out
sub
add
test
inc
cltd
sbb
add
sbb
fs
clc
fucom
out
and
popa
pop
jo
inc
fs
sub
ret
sub
sbb
add
inc
lods
cmpb
and
div
clc
push
push
das
xor
adc
ds
or
int3
push
and
outsl
fcmove
jle
or
scas
les
xchg
adc
insb
sbb
xlat
mov
std
in
xor
and
add
or
adc
adc
dec
push
mov
jb
hlt
fs
test
push
mov
dec
sbb
mov
stc
push
fistl
sbb
ret
fwait
enter
pop
jae
fnstsw
scas
out
aas
jl
fmuls
cmp
push
pushf
fldcw
xchg
pop
sbb
loope
push
test
xchg
enter
adc
fisubl
pusha
adc
dec
sahf
das
and
add
pop
xchg
or
lcall
adc
jo
lds
mov
ja
lcall
xchg
push
sub
and
push
dec
dec
push
fcmovu
js
jg
pop
lock
popa
adc
inc
inc
mov
mov
cwtl
mov
inc
or
push
adc
ja
shrb
mov
push
push
add
push
inc
shlb
popa
sub
mov
or
push
shrl
lds
and
and
push
xchg
or
out
jle
shl
dec
rcll
mov
pop
es
xor
xchg
sbb
dec
imul
xchg
minps
outsb
aas
aaa
fsubrs
fimuls
testb
sub
int3
inc
mov
cltd
outsb
push
pop
mov
in
pushf
std
xor
loope
mov
jnp
mov
xlat
dec
inc
fwait
dec
pop
xchg
lahf
dec
fs
sbb
fwait
pop
jg
les
dec
mov
sub
test
dec
sbb
negb
ljmp
or
and
ljmp
sub
sbb
fnsave
push
mov
ss
jbe
mov
and
mov
or
inc
lcall
or
scas
lahf
add
rcl
jl
imul
fiadds
repz
xor
ret
jno
cwtl
enter
lret
gs
and
xor
inc
xchg
cmpsl
inc
mov
outsl
jno
push
lods
mov
jge
and
push
ret
in
inc
mov
push
stos
inc
in
out
les
mov
in
push
ss
pop
subl
je
mov
cmp
sub
subl
sbbl
push
cmp
or
movsl
in
lock
mov
leave
in
sbb
mov
je
por
lahf
mov
lods
cmp
mov
mov
ret
jp
clc
xlat
xor
sahf
jbe
in
adc
ljmp
dec
test
in
mov
inc
ljmp
add
rcl
shll
das
add
je
pop
jnp
repz
mov
lds
cmc
repnz
xchg
dec
and
or
adc
adc
sbb
imulb
js,pn
and
bound
push
testb
mov
mov
loope
ficoml
dec
cli
mov
add
rorl
jg
sbb
arpl
fucom
mull
jg
push
pop
mov
xor
lahf
mov
pop
adcl
test
fcoms
cmp
andb
mov
sarl
clc
fidivl
push
test
mov
xor
jecxz
call
add
nop
dec
sti
mov
mov
mov
punpckhbw
mov
xor
push
pop
mov
jo
pusha
enter
or
cli
out
mov
or
and
push
ds
inc
daa
sub
inc
iret
push
stc
cltd
and
repnz
push
sbb
lds
sbb
mov
xchg
xchg
pop
stos
movsl
or
cld
test
xchg
sub
xchg
pop
fstl
xchg
add
add
stc
not
sub
imulb
call
outsl
add
or
dec
or
mov
mov
int
mov
pop
lods
pop
xchg
dec
cmp
or
jnp
jmp
mov
lds
nop
leave
xor
popf
jecxz
fsts
pop
sar
mov
sbb
inc
fcompl
repz
gs
lahf
popf
data16
shrb
cmpsb
push
pop
cltd
jbe
jnp
aad
sbb
mov
add
jp
cli
push
sbb
out
xor
xor
gs
ror
inc
mov
adcb
mov
mov
push
cs
inc
and
push
daa
notb
mov
xor
popf
cmp
adc
fldt
inc
fdivrl
clc
push
cwtl
mov
sbb
shlb
inc
adc
cmp
cltd
jo
mov
push
pushf
cltd
inc
jp
cmp
mov
mov
pop
sub
cmp
loop
xor
xchg
nop
stc
ljmp
mov
dec
adc
mov
push
and
test
sub
dec
push
adc
dec
scas
jl
adc
jge
push
sbb
adc
pusha
add
mov
add
jg
test
xor
cmpsl
std
movsb
push
mov
jmp
sbb
lcall
stos
iret
inc
in
les
nop
mov
jle
cli
cli
cs
in
outsl
or
data16
call
and
jge
and
add
pop
fwait
div
inc
jae
notl
adc
scas
scas
inc
cmpl
dec
cmovp
leave
cmp
jnp
xchg
cmp
lock
lahf
mov
dec
loopne
and
into
mov
or
or
iret
mov
cld
cmp
dec
mov
shll
pop
mov
push
xor
fistl
hlt
jl
sbb
hlt
loope
sbb
sti
sbb
outsl
sub
sbb
fwait
jmpw
in
jp
push
jge
cld
xchg
add
jmp
add
fcomi
push
pusha
sub
scas
and
cs
mov
jge
iret
lret
pop
jb
mov
or
mov
pop
subb
scas
or
mov
push
lcall
adc
js
push
mov
call
dec
jbe
mov
sar
fidivrl
ss
push
adc
aaa
sub
xchg
add
out
scas
cltd
fcmovnu
fwait
jmp
xchg
cmc
xchg
add
test
adc
inc
mov
mov
inc
mov
in
jnp
add
mov
in
jo
inc
xchg
ja
sub
and
jmp
push
dec
enter
push
into
dec
sbb
not
mov
or
push
les
inc
stos
push
sbb
push
jb
adc
es
test
negb
cs
punpckhdq
movsbl
es
mov
jae
syscall
dec
sti
aam
add
adc
clc
push
sub
mov
xor
mov
jb
mov
pop
icebp
clc
xchg
stos
mov
push
rol
inc
leave
cmp
mov
xchg
loopne
int3
and
xchg
xchg
jp
arpl
pop
popf
mov
aas
jbe
or
and
add
out
jp
cmp
sti
push
xchg
outsb
adc
jl
xor
outsb
mov
mov
loopne
pusha
test
adc
frstor
dec
push
sbb
mov
pop
sub
in
dec
stos
jnp
loope
insl
insl
sbb
adc
jb
cld
push
sahf
inc
mov
dec
push
mov
xchg
mov
leave
push
and
or
ret
mov
std
sti
popf
mov
fidivl
hlt
je
or
mov
xor
fcomi
jmp
xor
adc
cmpsb
pusha
dec
sbb
sub
xor
aas
repnz
stc
jne
jp
enter
loop
sahf
xchg
cmp
mov
xchg
add
sahf
dec
les
mov
push
outsb
mov
dec
jnp
mov
or
mov
push
cs
outsb
fucom
subb
sbb
jg
enter
shrl
push
test
in
dec
xorl
clc
std
xchg
jb
or
lea
lock
iret
inc
sbb
pop
mov
mov
cmp
lea
and
cmpsb
mov
fcoml
add
push
loop
data16
stos
dec
aad
add
cltd
popa
dec
pop
es
sub
mov
and
and
adc
pop
mov
pusha
dec
dec
fimuls
xlat
outsl
pop
jp
and
adc
aad
mov
push
pop
imul
sbb
out
cld
bound
mov
pop
pop
mov
jno
ja
rorl
push
sbb
sbb
fisttpl
adc
mov
push
loop
pusha
leave
repz
test
pop
push
jp
sbb
int
test
cld
fcmovnbe
and
int3
movsl
dec
inc
fildll
mov
dec
mov
inc
in
lahf
mov
sbb
outsb
aam
sub
xor
std
dec
xor
inc
xor
xor
jnp
daa
sbb
imulb
add
test
jmp
mov
jmp
scas
lea
jbe
cmc
adc
les
push
adc
mov
test
jb
inc
shlb
addl
dec
loop
push
push
int3
fcom
jp
roll
fwait
jnp
mov
int
jmp
enter
jmp
sbb
int
lahf
sub
call
icebp
adc
pop
add
add
adc
mov
fs
aas
mov
subb
aam
dec
mov
out
mov
inc
xchg
sbb
inc
mov
jbe
insb
push
enter
addr16
imul
push
lcall
inc
cwtl
hlt
movl
out
cmp
xchg
jae
cmp
lret
and
lea
je
cmp
jbe
hlt
fisubs
push
movsb
ror
js
test
int
lea
mov
cli
in
icebp
fidivs
imull
add
pop
inc
or
stc
insb
sbb
xchg
lds
or
stos
insl
icebp
inc
mov
std
aam
push
les
in
adc
mov
pop
dec
mov
xchg
mov
or
aas
xchg
gs
test
scas
fucomp
test
jmp
jo
aaa
clc
or
cmc
out
mov
pop
ss
mov
jmp
xchg
loop
push
pop
lods
rorb
mov
xor
addr16
push
sbb
sbb
sbb
fs
and
mull
adc
jns
mov
cwtl
adc
cmp
stc
jl
xchg
xlat
pop
mov
lock
mov
push
lea
sbb
adc
mov
xchg
idiv
cmp
mov
push
iret
dec
mov
adc
push
mov
pop
testb
js
push
lods
push
icebp
fidivrl
lea
andw
dec
popl
daa
and
lcall
jg
jge
sbb
fsubs
inc
lds
jns
mov
sahf
cmpsb
lcall
daa
cmp
std
mov
insb
int
push
cltd
fs
dec
rcrl
sub
in
fsub
movsl
push
pop
push
into
xchg
push
jbe
mov
xor
xchg
mov
sub
or
test
fcmovb
cmp
pop
xchg
cltd
mov
mov
out
inc
jg
mov
jge
fsubrl
mov
lcall
gs
pop
xchg
pcmpeqw
xlat
aas
les
and
mov
fwait
mov
shr
add
and
sub
sub
mov
inc
lret
mov
fldcw
pop
jno
icebp
loope
pop
insl
or
sbb
or
pop
inc
adc
adc
rorl
popf
sub
sbb
cs
xor
outsb
gs
cli
repz
bound
insb
or
pusha
add
sbb
mov
pop
cltd
pusha
stos
lret
and
sbb
push
mov
push
loop
mov
mov
mov
lahf
popa
push
inc
mov
adc
xlat
mov
loopne
adc
dec
minps
dec
and
les
dec
fcompl
adc
mov
mov
push
jo
add
jmp
jg
sbb
ljmp
nop
xor
pop
idivb
cmc
xchg
dec
insb
xchg
mov
les
sbb
mov
ret
sarb
xlat
sti
lea
or
js
sbb
rcrb
push
pop
push
leave
sbb
xlat
es
cmpsb
fisttpl
mov
dec
lret
pop
enter
jp
sub
add
das
cmp
in
sbb
fidivrl
test
mov
push
mov
lahf
faddp
jmp
rolb
imul
in
int3
mov
into
adc
inc
mov
sbb
or
in
sbb
pop
add
repnz
stc
jae
inc
int3
iret
movsl
div
fwait
xchg
push
div
mov
popf
shlb
push
fcmovnbe
js
mov
mov
in
mov
push
push
mov
enter
jae
and
pop
sub
cltd
pop
push
adc
inc
testl
pop
lss
jb
xor
mov
adc
enter
jp
add
xchg
pop
lret
sub
inc
jle
inc
aad
mov
enter
mov
lahf
mov
xor
addr16
dec
jecxz
in
push
xchg
mov
pop
call
orl
adc
inc
mov
mov
dec
and
aad
xchg
int
push
and
mov
imull
dec
out
adc
push
cmp
add
mov
fdivrl
lods
lock
aaa
mov
sub
cwtl
icebp
cmc
leave
das
aad
push
fs
adcl
or
jnp
addr16
fistps
mov
mov
push
leave
and
cmp
fs
sub
std
insl
mov
in
push
sti
ds
scas
icebp
push
test
inc
es
out
mov
cli
xor
sbb
and
push
ret
mov
insl
cmp
and
add
or
push
in
cmc
mov
sub
bound
pushl
daa
out
movl
cmpsb
aam
out
sub
jmp
mov
mov
loopne
and
mov
lds
lods
cmp
push
add
jae
popa
xchg
mov
lcall
adc
cs
fbld
push
mov
das
jnp
jle
xor
hlt
arpl
jae
mov
mov
push
xor
fistpl
loope
adc
insb
mov
repnz
push
inc
imul
popf
loopne
mov
pop
hlt
sub
mov
push
pop
cmpsl
mov
sbb
inc
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
movsb
mov
bound
pop
bound
or
js
xchg
xlat
fwait
sbb
aad
mov
jbe
and
pop
jno
cmp
inc
lcall
xlat
pop
fldenv
out
push
xchg
dec
sbb
and
or
xchg
push
jo
xor
inc
sbb
dec
push
adc
adc
mov
mov
sub
pop
and
aaa
test
pop
fimuls
subb
pop
push
mov
aam
dec
sbbb
cwtl
or
cmpsb
or
cmp
decl
int
lods
cld
lret
pop
xor
aad
dec
sub
jo
mov
xchg
out
push
fstpt
test
dec
cmp
cmp
cmpsb
cli
xorb
push
pop
inc
and
add
ret
inc
out
pop
inc
enter
test
in
sub
cld
dec
dec
int3
out
dec
mov
mov
notb
clc
xchg
jns
jmp
pop
cld
or
pop
xor
jmp
inc
outsb
lret
jp
test
out
sti
adc
fstps
js
dec
cmp
int
dec
push
mov
cmp
add
shlb
fisubrl
inc
popa
xlat
orb
repnz
addb
xor
mov
add
popf
ss
jge
jecxz
sbb
aaa
cwtl
lods
or
scas
mov
orb
scas
stos
iret
mov
and
jmp
mov
pushf
and
scas
push
inc
jo
or
neg
mov
arpl
xchg
movsl
or
and
aaa
out
xor
cmpsb
ds
ljmp
sbb
ja
out
mov
lods
sbb
mov
xchg
insl
dec
xlat
lods
push
fnstcw
jmp
xchg
or
aaa
sarb
hlt
dec
jecxz
jo
sahf
mov
movsb
pop
push
scas
jbe
inc
fs
ja
or
pop
in
xchg
push
icebp
pop
mov
inc
aam
jge
test
enter
sti
or
xor
sub
imul
in
add
xchg
or
lahf
sbb
fs
das
ret
sbb
outsb
push
cli
mov
adc
or
sub
mov
xchg
pop
push
mov
js
iret
fimull
fsubs
push
lock
xlat
xor
pop
cmp
daa
push
mov
mov
cmp
loop
clc
in
xor
jl
mov
sbb
push
xchg
lock
fiadds
sti
sbb
rcrl
cli
add
divb
mov
fs
ret
leave
mov
or
dec
fcomi
icebp
mov
clc
loop
decb
inc
cmp
lahf
and
sarl
sub
std
std
rorb
adc
jb
sub
loopne
and
inc
xor
push
fs
jne
fldenv
ds
pop
mov
jae
cmpsl
jns
and
xor
mov
std
push
push
mov
jae
push
lret
fs
xchg
xor
mov
dec
aad
notl
mov
shlb
mov
out
pop
test
and
call
mov
jle
std
pop
rorb
pop
cwtl
sbb
fisubs
les
adc
sbb
dec
outsb
mov
jp
add
stos
pop
cmp
pop
xchg
pop
fadd
xchg
cmp
push
in
cwtl
mov
adc
pop
cmpsl
pop
xchg
rep
xor
scas
jno
popa
pop
pushw
mov
cmp
and
int3
xchg
or
stos
imul
cwtl
movsl
test
pop
and
pop
pop
in
les
dec
cmp
popa
add
mov
mov
or
pop
data16
out
mov
scas
and
adc
leave
cltd
icebp
je
pusha
scas
jl
sub
lock
add
mov
and
daa
ficomps
lock
jmp
ljmp
aad
mov
pop
pop
sahf
push
mov
cld
or
mov
ja
mov
cmp
xlat
fwait
sbb
daa
jl
popa
shrb
dec
jo
stc
mov
fdivrs
test
sar
popa
and
adc
or
sbb
sbb
stos
sub
mov
adc
dec
or
imul
mov
ss
cltd
iret
int
or
incl
sbb
jns
test
std
cvtdq2ps
ja
fisttps
sbbb
push
inc
pop
pop
jg
xchg
mov
movsl
jns
enter
cmpl
stos
rclb
cltd
ljmp
shll
push
in
mov
daa
jbe
popf
or
mov
jnp
jae
arpl
push
cs
ficoms
and
mov
test
cld
sub
lods
and
mov
sahf
ret
add
sbb
gs
cmc
aad
xor
jae
icebp
dec
leave
enter
xlat
push
xchg
inc
mov
cli
addb
lds
push
mov
jmp
jno
das
inc
and
outsl
mov
push
adc
inc
jns
push
xchg
mov
or
lea
sti
xchg
mov
add
sbb
pop
mov
es
mov
jae
lret
test
enter
add
mov
sub
bnd
mov
loop
xor
jno
rcr
rorl
sub
xchg
jmp
mov
std
dec
pop
dec
ret
push
lret
enter
loopne
jbe
mov
sti
ljmp
iret
cmp
or
iret
push
int3
arpl
inc
stos
hlt
pop
sti
pop
inc
iret
xor
mov
aas
lret
mov
sub
std
mov
inc
mov
or
aam
addr16
push
cld
cmp
fiaddl
sbb
dec
sti
mov
lret
mov
cmpl
bound
push
lods
push
out
sub
pop
iret
xchg
or
and
popf
xor
add
pushf
push
jnp
sub
add
sbb
and
loop
mov
mull
das
mov
js
sub
jmp
pushf
jb
in
jbe
xchg
mov
test
lcall
iret
push
iret
add
lock
jno
push
mov
mov
xchg
fmull
and
or
sbb
popa
sti
jecxz
into
sub
cmp
push
jne
sarb
mov
and
mov
repz
xchg
xor
hlt
jecxz
inc
pop
loop
push
gs
sti
inc
sbb
dec
xor
xchg
push
dec
xchg
xchg
mov
adc
int
adc
out
shrl
or
xchg
iret
xor
std
jmp
and
bound
mov
adc
jmp
cltd
lods
jl
rorl
jbe
aas
pop
dec
inc
xchg
jecxz
loopne
inc
add
dec
add
lock
popl
pop
xor
mov
push
shrb
fisubl
fwait
fs
xchg
in
daa
mov
sub
jp
mov
cli
xorl
sbb
or
xchg
int
jle
mov
lcall
insb
or
sahf
pop
mov
test
lcall
insl
cmpb
dec
nop
stos
push
jecxz
jbe
sbb
cmpsb
or
pop
sub
push
push
mov
jae
int
out
and
je
mov
pop
dec
lods
pop
ds
jno
adcl
neg
jp
xor
cmp
dec
pop
mov
push
bound
xlat
xchg
js
mov
mov
cmp
push
stc
jno
mov
or
fstps
sub
outsb
pop
dec
mov
dec
mov
in
test
adc
inc
sub
je
jle
movsl
push
in
or
push
sar
les
dec
loop
shll
je
outsl
push
inc
dec
and
cmp
push
ficoml
lret
movsb
add
jo
push
and
ljmp
mov
test
rcrb
sub
fdivrs
fidivs
lcall
push
xchg
popl
das
ss
xchg
pop
scas
pop
insb
sbb
cmc
mov
dec
mov
xchg
jmp
jb
sarb
xor
test
cmp
jge
je
lods
adc
jo
inc
clc
cli
add
and
or
loop
dec
xor
mov
scas
push
mov
and
sbb
lahf
popf
mov
imul
sub
in
imul
and
or
add
inc
fiaddl
mov
ja
push
out
adc
pop
jp
mov
test
adc
xor
aas
xchg
add
je
jmp
mov
repnz
outsb
cmp
bound
push
cmpsb
lds
les
cmp
dec
jmp
arpl
adc
xchg
pop
mov
add
ror
mov
xchg
divb
imulb
cmp
pusha
mov
xor
fnstsw
cld
add
push
shlb
cmp
xchg
push
mov
in
popf
dec
add
shrb
sbb
dec
push
dec
cmp
arpl
push
lret
lret
push
outsb
pop
jns
sahf
icebp
dec
adc
loopne
push
sbbb
loop
xchg
scas
sbb
shlb
and
xchg
dec
push
fdivrs
xor
mov
xchg
mov
dec
sub
mov
addb
ret
seta
push
mov
mov
xor
and
inc
dec
xor
mov
lret
or
fs
in
iret
in
hlt
cmp
cmpsb
push
add
jne
or
test
adc
hlt
adc
lods
ret
xlat
por
jge
cmp
nop
sub
aas
notb
ljmp
and
in
int3
cmpsl
imull
pop
mov
mov
mov
repnz
lcall
sti
jnp
imul
pop
lea
mov
inc
dec
mov
and
cmp
loopne
fwait
jmp
faddl
mov
dec
popa
lahf
cmc
fidivl
js
cmc
mov
fisubl
pop
and
in
pop
mov
ljmp
in
jl
inc
sbb
or
push
cmp
mov
sub
add
mov
dec
pop
mov
pop
outsb
out
add
pop
xor
ja
jg
popf
mov
data16
push
push
pop
lret
test
dec
inc
dec
or
push
sbb
adc
xchg
and
popf
or
mov
jg
popf
insl
outsl
cmpsl
daa
jb
iret
movsb
or
adc
mov
sar
cltd
int
cwtl
mov
jmp
push
pop
jle
sub
iret
xchg
xchg
aas
pop
add
lret
or
mov
idivl
test
addr16
bound
jl
ds
nop
dec
stc
sbb
xor
push
push
adc
aas
lcall
and
mov
shrl
xor
rol
sbb
popa
inc
cmpsl
or
dec
dec
jecxz
cli
add
or
bound
and
outsb
sbb
sbb
jns
cmpsb
push
mov
pop
in
js
or
and
call
rorl
jmp
sub
mov
cwtl
popf
test
ficoms
mov
jo
sbb
add
mov
popa
loope
push
and
fistps
lcall
out
and
lods
jne
pop
jcxz
leave
loopne
mov
push
or
cmp
sub
pop
push
sub
push
push
add
fs
mov
inc
xchg
pop
ljmp
dec
shufps
notl
shlb
test
jle
addr16
adc
push
jo
icebp
orb
cmpsb
test
sub
pop
in
fmulp
mov
gs
sbbl
inc
cmp
cli
repz
ljmp
fmull
enter
int3
fstpl
stos
sbb
notb
lods
fisubrs
nop
add
or
mov
jb
jae
push
mov
or
pop
xchg
cmp
fistl
ss
mov
jo
and
pop
push
mov
pusha
add
lods
cmp
jbe
cmp
lret
int3
xchg
mov
jp
sub
xchg
mov
mov
cli
mov
mov
jmp
lods
adc
sarb
pop
ja
les
cwtl
xchg
sub
cmp
jae
ljmp
shll
out
pusha
xchg
jae
mov
pop
jns
adc
mov
sti
sbb
inc
in
sub
fs
in
test
push
and
into
std
lret
mov
cmpsl
and
xor
js
test
mov
nop
xchg
lahf
and
push
jb
mov
xchg
pop
lods
outsb
fstps
mov
jp
dec
lret
daa
push
add
ljmp
or
adc
xor
scas
inc
int
push
insl
add
ds
jle
stos
jae
adc
dec
loope
xchg
int3
dec
mov
fnsave
cmp
cmpb
hlt
stos
adc
test
fdivl
fwait
adc
mulb
xor
ja
dec
xor
fmull
jnp
fwait
or
jge
pop
mov
pop
ss
fwait
adc
test
push
xchg
mov
outsb
push
lret
cmc
outsb
pop
xchg
cmp
push
jbe
cs
xchg
push
int3
push
mov
out
iret
or
pushl
test
aas
push
xor
clc
jle
push
add
aaa
mov
dec
push
mov
add
xchg
scas
enter
cmp
out
dec
add
into
pop
clc
insb
cmp
daa
jle
insl
push
pop
arpl
movsb
mov
jnp
fdivs
push
les
idivb
xchg
mov
or
inc
movsb
lcall
or
fsub
in
mov
iret
sub
sub
arpl
or
mov
clc
pop
sarl
xchg
loop
lret
sbb
lahf
xor
mov
test
call
mov
sub
pop
adcb
or
aam
in
aas
scas
iret
jl
scas
mov
mov
mov
pop
mov
loop
fbld
mov
addb
push
and
xchg
mov
out
mov
mov
inc
lret
adc
mov
pop
in
enter
outsb
mov
adc
adc
mov
aam
mov
xchg
pusha
sti
sbb
jmp
inc
jb
cmova
xor
xchg
aad
sub
mov
mov
jns
xor
stc
xchg
cmp
mov
inc
cmp
mov
sub
movsb
jl
fidivs
hlt
in
mov
int
mov
jae
test
movsl
repz
sbbl
pop
int3
stos
cmpsl
add
mov
scas
jbe
xor
pusha
loopne
cmp
mov
cli
pusha
or
xchg
cwtl
sub
lods
cmp
xchg
push
leave
or
out
sahf
xor
sbb
ds
sti
xor
and
call
mov
mov
in
mov
pop
repz
int
cld
sub
xchg
into
call
outsl
and
jbe
push
lods
inc
push
sub
outsb
adcb
xchg
sub
sahf
scas
xlat
cmp
jb
xchg
pop
imul
sbbl
jb
mov
sbb
cmc
inc
xor
or
xchg
or
imul
push
pop
cs
mov
or
xchg
adc
in
add
mov
mov
inc
fs
jp
jmp
pop
pop
xor
movsb
cmpsl
xchg
movsb
mov
shl
jp
leave
ret
nop
aas
mov
mov
xchg
loop
rep
pop
movsl
je
push
lret
into
mov
push
repnz
xchg
lcall
xchg
xor
push
popa
rclb
mov
xor
cmp
xchg
imul
shlb
jmp
push
xor
adc
xor
xchg
xchg
cltd
mov
scas
push
mov
int
sub
in
cwtl
push
cmp
cwtl
dec
mov
jle
mov
and
pop
cli
or
sub
sbb
sub
loopne
or
pop
sti
xor
lahf
nop
and
dec
mov
cmp
addr16
cmp
lret
jns
pusha
xchg
push
into
jbe
sarl
pop
in
test
push
popa
outsb
add
mov
fadds
sub
xchg
js
cmp
fiaddl
or
pusha
pop
outsb
xor
xor
lock
lea
in
mov
pop
adc
pop
addb
inc
loope
repnz
push
call
fisttpl
loop
jbe
xchg
fwait
aam
mov
pop
std
ret
sbb
bound
and
in
mov
leave
imul
jge
mov
insb
pop
sub
addb
inc
jb
es
scas
add
or
xorl
push
sbb
inc
add
inc
inc
imul
inc
and
lods
aad
sub
cmp
lahf
xchg
cmp
std
lret
hlt
or
cmp
clc
loop
xchg
push
mov
fidivrl
lcall
sub
faddl
or
dec
loopne
or
rcll
xor
push
out
stos
fstpl
pushf
mov
adc
mov
add
push
or
divl
sub
lret
xchg
andl
mov
jmp
adc
sbb
dec
out
or
mov
outsl
rorb
xor
mov
lret
mov
clc
mov
xor
stos
loopne
mov
lea
xor
jge
jns
adc
push
call
pop
cmpsl
pop
mov
int3
shrb
inc
push
call
cmp
mov
jne
stc
scas
add
dec
push
or
lds
pop
mov
sbb
xchg
rcll
mov
shll
pop
lahf
call
pop
ret
add
mov
pop
add
push
pop
sar
cmp
out
adc
mov
xor
rorb
inc
popf
fst
cld
shll
push
push
fmuls
add
push
pop
jae
outsb
stc
sbb
inc
xchg
lahf
jmp
cwtl
es
hlt
das
rcll
leave
dec
sub
xchg
cmp
call
push
in
push
fisubl
dec
jae
aad
rsm
push
sub
ljmp
pop
mov
xor
jle
sub
ss
mov
or
in
jl
push
ja
aas
loop
insb
xchg
aaa
out
std
test
stos
dec
test
aas
dec
je
movsb
dec
js
mov
scas
jns
in
mov
outsb
pop
mov
add
fdivs
sub
pop
dec
popf
stc
clc
push
stc
xchg
mov
mov
mov
cld
adc
loope
fcompl
pop
xchg
pop
jae
push
jmp
dec
adc
cwtl
orb
jmp
push
or
sti
push
es
inc
dec
mov
cli
jne
push
in
insl
sarb
ja
cwtl
inc
aaa
dec
std
push
fsub
push
pushf
adc
adc
push
mov
aad
mov
xchg
add
rol
and
mov
popl
xlat
int3
mov
mov
mov
push
and
pop
inc
xchg
shrb
xchg
data16
gs
inc
inc
fs
mov
mov
test
jae
dec
jae
jo
lret
inc
jo
push
pop
push
mov
mov
inc
cmp
jo
jb
mov
and
ljmp
dec
roll
stos
and
cmp
sbb
sub
jo
mov
pop
adc
sbb
in
scas
add
cmp
test
icebp
or
cmpb
orb
movsl
out
jecxz
inc
jno
jmp
lods
and
sub
roll
ja
int3
sub
mov
or
es
outsb
xchg
mov
push
lret
fistps
testl
repz
daa
inc
das
or
js
xchg
int
nop
dec
imul
cwtl
loope
data16
out
stos
loopne
fsubs
push
lret
or
dec
cmp
sub
push
pop
stc
or
fwait
add
push
dec
jae
es
dec
adc
and
dec
mov
mov
pushf
inc
jo
pop
imul
pusha
lret
adc
inc
nop
xor
les
sub
inc
testl
aad
cmp
js
in
lock
imull
popf
mov
cld
popl
xchg
jg
leave
xchg
rorl
subb
fisttps
rcll
add
imul
call
jg
push
pop
addl
fstl
or
int3
mov
sub
pop
roll
push
lds
ljmp
imul
fstps
js
push
std
push
and
icebp
loopne
loope
cmp
sub
outsb
outsl
pop
fdivr
jmp
cmp
or
mov
inc
das
mov
jle
loope
enter
jb
pop
aas
mov
xchg
inc
mov
aas
ja
xchg
mov
lods
pop
icebp
xchg
jp
loop
aas
fcompl
cmp
xorb
dec
call
sub
cltd
sahf
mov
jb
push
lea
aas
xlat
or
pop
icebp
and
mov
cmpb
std
jnp
jp
and
inc
iret
enter
movsl
adc
cmp
pop
fwait
mov
cs
out
out
cwtl
lds
ss
divl
adc
jae
jecxz
or
mov
and
xor
sar
jp
das
jno
xor
adc
andb
data16
xchg
cmpsl
dec
ficompl
into
ss
rol
dec
xor
outsb
lea
adc
and
sub
fcoml
inc
aam
iret
mov
insb
inc
lods
sarl
jmp
inc
bound
xlat
sbb
lahf
or
adc
frstor
xchg
out
xchg
jae
cmp
mov
in
xchg
das
inc
shl
cmp
sub
inc
inc
jns
sbb
sti
bound
xlat
sti
out
xor
cmp
aaa
sbb
fwait
les
test
enter
xchg
xor
out
lods
pop
cwtl
mov
call
cmpsb
push
xorb
les
pop
pop
movsb
push
mov
fst
xor
int3
mov
dec
mov
push
je
mull
out
leave
or
dec
sti
and
scas
icebp
jg
test
inc
outsb
cwtl
mov
jl
stos
mov
test
push
xchg
xchg
xor
mov
xor
and
xor
add
in
in
orb
mov
into
ss
xchg
jae
add
push
addb
cld
jbe
ror
xor
ja
jns
mov
pushf
std
or
mov
test
sub
mov
int
iret
mov
fsubs
test
rcl
addb
mov
jle
push
xchg
stos
aam
sub
jp
sub
frstor
call
jp
mov
mov
aaa
pop
outsl
cld
stos
xor
push
adc
es
sbb
xor
xor
test
jle
xor
xchg
dec
aad
rolb
jecxz
dec
push
mov
inc
xor
ret
std
pop
xchg
orb
sub
mov
daa
outsl
ret
add
xchg
jo
inc
fstpt
pop
xchg
lahf
movsl
bnd
adc
shrl
insl
xor
ret
xchg
dec
mov
repz
cmpsb
sti
dec
aaa
xlat
mov
mov
cmp
aaa
subb
adc
adc
jmp
add
lods
lods
out
fisttpl
pop
iret
mov
jp
adc
add
aas
dec
or
fs
popf
push
jle
mov
rcrl
xchg
jl
popf
data16
out
xor
pop
cmpsb
mov
mov
xor
jbe
cmp
jecxz
sbb
das
or
jne
mov
lods
adc
fwait
jo
xor
pop
aad
outsl
fs
clc
stos
mov
sbb
pop
outsl
jg
sti
and
mov
jmp
adc
and
add
lret
mov
sti
mov
loopne
jae
dec
add
dec
mov
sbb
fs
enter
lret
rolb
xchg
mov
addr16
cmpb
mov
enter
outsl
movsl
je
movsl
xor
aad
iret
ljmp
fisubrl
adc
and
jmp
inc
mov
rcrl
je
insl
jg
das
mov
xor
jne
mov
loop
and
adc
and
sbb
mov
ds
push
mov
jmp
test
and
xchg
outsl
add
dec
cld
dec
dec
push
test
pop
pop
leave
inc
cmp
shlb
sbb
cld
mov
adc
xchg
imul
pop
imul
out
mov
xchg
adc
int
out
mov
pop
clc
hlt
and
jo
xchg
punpckhdq
mov
ror
out
mov
mov
xor
inc
jecxz
sbb
push
xchg
or
repnz
in
loopne
scas
mov
jnp
adc
pop
xchg
jmp
into
test
sahf
inc
jle
divl
sbb
cmpsl
jmp
insl
nop
xor
ja
gs
xchg
mov
xchg
aad
mov
cmp
cmp
lret
out
std
jne
add
test
test
add
loop
xor
add
sbb
push
outsl
in
icebp
mov
mov
imul
jmp
fcmovb
movhps
jmp
sub
xchg
mov
inc
bound
std
dec
mov
or
lea
rcll
movsl
imul
lsl
shrl
adc
cmpsl
pop
add
inc
scas
nop
dec
adc
outsb
ds
mov
pop
sub
addr16
adc
sahf
les
les
icebp
into
xchg
xor
lods
call
out
xlat
push
out
mov
ja
fadd
call
mov
mov
js
fstpt
ret
sarb
je
div
or
jl
xchg
out
mov
aam
xchg
push
stc
mov
rorl
lods
sbb
es
pop
iret
scas
sbb
dec
inc
sbb
and
aam
testb
or
jbe
ret
outsb
stos
mov
js
xlat
pop
dec
lret
push
jnp
mov
or
jmp
dec
ss
and
and
push
fildl
push
lret
movsb
lds
cs
cs
or
adcb
sbb
pop
jnp,pn
fadds
and
minps
push
mov
pop
dec
push
push
xchg
int
lahf
push
ss
int3
lret
inc
push
fsubrl
addr16
aad
fsubr
cltd
pop
testb
jno
xor
ljmp
cmpsl
mov
cmpsb
mov
icebp
pop
and
addr16
incl
xchg
mov
add
cmp
lods
sbb
cld
into
stos
xor
rcrl
and
xchg
xlat
in
jnp
jo
cmp
addl
int
jo
xchg
lret
adc
fiadds
jne
xchg
mov
pop
pop
push
addr16
xchg
ret
mov
inc
dec
iret
mov
inc
push
adc
mov
xor
mov
nop
or
jae
lods
outsl
push
loopne
mov
cld
mov
lahf
fimuls
test
in
fiadds
iret
aad
inc
rcrb
ffreep
pop
mov
fisubrl
push
dec
push
inc
cwtl
and
mov
dec
dec
lret
sub
inc
fwait
sub
rclb
in
or
add
mov
add
pop
xchg
cmp
push
movsl
or
xchg
pop
cs
test
adc
xchg
lcall
inc
das
movsl
cwtl
cmp
jbe
test
pop
inc
insl
fs
pusha
fcomip
ds
add
adc
movsb
mov
dec
mov
mov
push
push
fcomps
xchg
shlb
loope
jo
dec
arpl
dec
inc
pop
cli
pushf
cmp
in
sbb
cmp
pop
fsts
out
or
jmp
xchg
mov
sub
push
fidivs
lock
add
adc
pop
insl
fildll
inc
add
jecxz
xlat
js
daa
cmp
cmp
xchg
or
adc
les
ss
test
scas
sti
andl
pusha
push
push
xlat
jmp
ljmp
paddusw
fcom
jmp
clc
dec
and
aaa
cmp
jl
lea
pop
or
aas
lret
mov
movsl
pushf
les
cmpsb
xchg
fmuls
movsb
pop
add
test
cltd
jnp
xor
sub
fs
mov
push
xchg
mov
push
aaa
xor
mov
test
pop
incl
notl
jns
jle
dec
mov
inc
iret
push
test
pop
mov
or
xchg
xchg
ljmp
mov
inc
out
mov
loop
loopw
pop
bound
gs
aaa
in
mov
fisttpl
aam
push
ret
xlat
gs
gs
adc
or
xchg
sbb
mov
dec
push
out
xor
inc
insb
sbb
mov
sbb
rcl
sbb
pushl
dec
pop
ret
mov
lahf
sbbb
add
xlat
int3
popa
and
or
imul
test
call
addr16
xlat
test
push
mov
dec
insl
sar
xor
jmp
shl
pop
or
mov
data16
leave
add
fistps
xor
sbb
jge
inc
popa
mov
cwtl
es
insl
dec
cmp
bound
xchg
xor
inc
mov
rcr
aas
mov
jne
imul
popf
jnp
dec
mov
sub
mov
ror
pop
mov
xchg
cmc
shll
mov
in
mov
es
hlt
sti
mov
push
out
push
fwait
je
movsb
jecxz
jnp
or
mov
scas
loopne
adcb
test
cmc
cmpsl
jl
jno
outsl
test
cmp
ljmp
test
mov
pop
and
add
mov
sub
push
jge
adc
dec
mov
pop
insl
inc
jp
inc
mov
insb
xchg
jge
imul
adc
push
movsl
enter
mov
int3
or
or
dec
sbb
mov
mov
mov
test
es
jecxz
jge
dec
adc
stos
add
xor
or
jb
addb
jecxz
mov
dec
fwait
jg
mov
mov
inc
add
jmp
je
xchg
scas
jns
js
nop
pop
nop
call
xor
into
jns
jmp
and
sub
sub
xchg
jb
lods
xchg
push
test
sub
std
add
xor
decb
push
lea
stc
ljmp
inc
xor
lcall
add
pop
sbb
jg
ljmp
jl
repnz
aaa
sbb
loopne
dec
inc
ljmp
sbb
scas
sahf
stos
test
addr16
mov
mov
add
std
aam
mov
jne
push
rorl
sub
lcall
lret
xchg
pop
scas
je
ret
outsl
sub
jmp
or
in
xchg
test
mov
inc
roll
jmp
lahf
fwait
or
xchg
leave
or
scas
ret
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
inc
xor
mov
or
bound
adc
in
lcall
in
inc
and
sub
inc
movl
mov
cmpsb
push
sub
jmp
mov
cmp
jmp
add
loopne
add
fs
push
in
xchg
pop
adc
rolb
fdivl
push
dec
movsl
mul
mov
cld
cli
push
ret
mov
mov
jle
loopne
imul
in
push
cmp
add
js
popf
sbb
dec
jge
clc
fadd
out
roll
mov
xor
dec
jge
sbb
mov
fs
enter
push
out
and
inc
adc
push
and
xchg
mov
cs
into
sbb
and
cs
pop
andl
adc
jl
mov
mov
sbb
addl
inc
arpl
aad
push
rcrl
enter
call
mov
fwait
xor
mov
push
cwtl
in
mov
repnz
jne
sbb
cmpsb
dec
adc
jmp
pop
clc
jnp
mov
sub
fidivs
push
xchg
push
nop
xlat
mov
lcall
jge
sbb
push
and
fs
dec
push
jp
mov
mov
pusha
mov
push
adc
in
bound
pusha
xchg
cltd
xor
enter
push
scas
adcb
cmp
shl
mov
jecxz
js
sub
shlb
scas
add
out
arpl
testl
ret
mov
cmpsl
daa
js
mov
bound
inc
out
xor
mov
pop
sahf
and
mov
sti
jns
je
xor
inc
sbb
lds
adc
cmpsb
lret
mov
xchg
out
jp
mov
out
aad
push
and
and
xchg
push
dec
xorl
dec
jb
pop
pusha
lahf
pusha
outsl
cwtl
xor
fiadds
test
es
orb
imul
add
iret
popl
scas
inc
sub
dec
call
pop
test
sarl
adc
mov
rcrb
aad
loopne
xchg
test
pop
jno
cmp
lods
cmp
mov
push
dec
out
jp
hlt
push
loope
idivb
cmp
xchg
in
inc
lds
add
cmp
inc
insb
gs
lret
ds
or
sahf
xor
out
std
pop
mov
sub
jnp
mov
es
sti
punpckhbw
cmp
mov
ja
jl
gs
cmp
test
test
add
xchg
adc
dec
icebp
ror
adc
in
andb
mov
mov
stos
ljmp
add
fs
cld
inc
lods
test
sbb
inc
in
push
xorb
dec
test
scas
orb
dec
mov
les
dec
mov
sub
aas
adc
repz
gs
popf
or
movsl
and
femms
addr16
test
inc
add
mov
jmp
inc
addl
cmpsl
imul
sub
orl
xchg
int
or
lods
int
sbb
jno
cli
pop
jmp
aad
sbb
movaps
stc
add
sahf
xor
cltd
mov
jp
imul
cmp
sub
fiaddl
xchg
hlt
lahf
loop
jne
jbe
imul
test
mov
sub
addb
jae
pop
ss
jmp
mov
push
hlt
arpl
jg
in
movsb
fiaddl
or
les
dec
sbb
imul
adc
movsb
fnstsw
mov
and
dec
mov
mov
pop
and
jl
sbb
cmp
xor
push
adc
or
dec
push
loopne
mov
mov
xor
in
sbb
pop
insb
mov
xor
shll
in
mov
dec
adc
aam
mov
mov
clc
inc
loopne
ds
imul
push
cmp
sbb
xchg
es
mov
pop
lea
xchg
jae
rorb
or
sub
sub
into
sub
push
mov
or
jnp
pop
pop
cwtl
xchg
cmp
dec
cs
mov
push
xchg
test
adc
inc
scas
lcall
sub
test
mov
rolb
jno
jp
fcompl
addr16
pop
fsubrp
cmpsl
sbb
xchg
add
das
sbb
xor
shrl
int3
in
dec
fyl2x
aam
adc
sbb
jmp
pop
xor
fwait
push
pop
mov
adc
pop
shll
sbb
in
aaa
std
xchg
mov
dec
pusha
sbb
popf
add
push
test
call
mov
cmp
pop
bound
repnz
mov
jbe
lock
jle
pop
xor
jns
repz
es
sub
add
andb
push
repz
adc
test
xor
push
test
push
sub
aas
loopne
fidivl
hlt
xchg
inc
sbbb
mov
sbb
or
adc
add
sti
add
xor
inc
aaa
or
jne
arpl
mov
lret
jl
add
jb
xlat
push
xor
rorl
lods
mov
repnz
imul
xlat
sub
or
adc
fldt
adc
jns
mov
jo
dec
dec
jno
push
jno
lock
enter
push
xlat
xor
lock
xchg
cmp
jl
xlat
les
out
jnp
enter
mov
das
addr16
mov
inc
icebp
insl
ds
test
pop
out
lock
imul
je
ss
adc
mov
rorl
cld
aam
sbb
ret
sarl
jno
lret
pop
jecxz
mov
test
or
dec
and
lds
je
das
or
aam
push
ds
sbbb
add
test
insb
fldl
cwtl
pushf
lahf
inc
fsubr
sar
rcl
fcom
pop
adc
outsb
mov
pop
imul
adc
sbb
mov
push
mov
pop
out
inc
mov
xor
mov
lahf
mov
mov
push
sbbb
into
mov
xchg
sbb
les
clc
sub
in
gs
xchg
fldenv
mov
jmp
push
bound
add
xchg
mov
das
test
outsb
fcomi
daa
enter
sarb
pop
ss
pop
bound
push
lret
xchg
ja
das
bound
mov
fildl
popaw
fcoms
sbb
xchg
push
sahf
loope
add
adcl
leave
xor
fistl
fadds
adc
cmp
add
xor
shrb
pop
cmp
and
fistpl
adc
mov
ficoms
mov
jg
roll
aaa
ret
mov
ss
pop
cwtl
fnstcw
ret
scas
clc
sbb
movsb
sbb
adc
jae
adc
int3
pop
and
cmc
ds
in
and
mov
sti
mov
mov
cmp
push
mov
das
testl
jl
jae
in
orb
fidivs
jo
jl
loop
cmp
fstl
mov
int3
lods
mov
jg
lods
stc
pop
addr16
repnz
pop
sbb
sub
mov
nop
jle
call
mov
das
jae
andb
cmp
int
add
or
inc
mov
pop
fnstcw
and
and
lock
imull
lcall
jno
das
mov
push
cltd
arpl
sahf
repz
mov
fimull
xlat
mov
mov
fisttpll
pop
pop
aad
or
std
cmp
xor
mov
pop
dec
and
movsl
push
inc
rcrl
sbb
mov
frstor
aad
cld
pusha
xor
ss
sub
inc
in
adc
test
sbb
xchg
hlt
push
je
dec
dec
xlat
dec
ficompl
pop
ror
pop
mov
in
xchg
pop
hlt
stc
lock
ds
add
pop
xor
test
add
pop
out
push
mov
test
pusha
scas
rorb
pop
lcall
mov
test
lahf
outsl
stc
pusha
push
lret
stc
out
jge
sub
add
inc
dec
xor
js
jne
sbb
and
icebp
and
cmpsl
subl
cmpsl
lret
jmp
insl
mov
xor
pop
mov
xchg
add
fwait
sarb
push
sbb
mov
stc
cwtl
xchg
mov
push
pop
ljmp
rcll
icebp
dec
lret
arpl
pop
sbb
inc
inc
xor
sbb
pop
sarl
jae
pop
test
pop
nop
lods
pop
push
pop
into
mov
daa
pop
jl
lea
fwait
cmp
out
imul
mov
push
adc
pop
xor
jecxz
sub
pop
dec
rclb
push
push
dec
rclb
jno
mov
fsubrs
rcl
cwtl
inc
loopne
aam
add
xchg
sahf
xchg
pop
imul
cmp
xor
sbb
fildll
mov
pushf
xchg
paddsw
lahf
aad
jmp
sub
xchg
cltd
or
push
hlt
lds
mov
pop
xlat
and
rcrb
outsb
xchg
rcr
leave
pop
pop
aaa
pop
jbe
sub
arpl
mov
ljmp
push
sub
out
pusha
xor
dec
xchg
inc
scas
outsb
stos
sbb
mov
sbbl
rcrb
or
cs
mov
adc
into
in
pop
and
and
mov
dec
adc
pop
subb
addr16
sub
mov
int
bound
xchg
gs
mov
arpl
push
aam
mov
mov
mov
popa
shr
addr16
push
and
mov
push
fisubl
jnp
push
je
sub
rorl
push
sub
ljmp
jnp
outsb
dec
ss
bound
lahf
out
stos
loopne
jecxz
mov
adc
add
stos
pop
sub
inc
and
aam
jae
inc
inc
or
inc
rcrl
sub
and
into
inc
pop
sbb
pop
or
sti
sahf
inc
mov
inc
mov
js
xchg
mov
imul
sbb
jge
aas
mov
push
mov
stos
xor
xchg
data16
mov
ds
fs
adc
lret
sarb
xchg
rcll
xor
iret
out
push
mov
or
jecxz
inc
test
inc
aaa
pop
stos
push
mov
add
pop
adc
jnp
add
test
add
mov
clc
outsb
mov
out
inc
lock
mov
cmp
dec
dec
xor
cld
cld
mov
lcall
je
stos
lock
sbb
adc
mov
cmp
cmpl
mov
testl
push
push
xor
sbb
sub
add
fucomp
sub
xchg
les
jle
fsub
lret
xor
movsl
lret
cli
js
mov
push
and
in
push
rcrb
mov
and
in
inc
xlat
mov
xchg
or
or
insl
and
fs
out
and
inc
iret
lds
mov
sbb
pop
xor
jecxz,pn
lods
int
mov
ljmp
aam
push
add
sbb
add
aas
fstps
scas
mov
mov
pop
mov
dec
push
fnsave
ret
jmp
sbbb
xlat
add
movsb
xor
les
jo
lret
xchg
cmpsb
call
mov
dec
mov
push
push
jo
dec
dec
xchg
mov
call
test
cwtl
ret
jne
daa
movsb
xor
pop
bound
test
int
mov
rclb
test
dec
movsb
mov
mov
or
fs
jp
fcmovnu
add
cld
cmp
cmp
add
jecxz
pop
outsl
dec
xlat
testb
clc
push
stos
dec
fsts
adc
jle
adc
push
ljmp
jnp
add
xor
adc
jnp
inc
jb
mov
stos
cmpsl
test
adc
jns
jge
jmp
mov
jge
pop
fs
pop
rcl
jecxz
arpl
push
xor
aas
mov
mov
xchg
mov
aam
cld
pusha
dec
and
cmp
fldl
xchg
leave
xor
jle
xchg
xchg
mov
cs
insb
jp
das
jnp
mov
nop
fisttpll
jecxz
outsb
mov
fbstp
dec
pop
xor
cmp
xor
mov
cltd
dec
or
jge
adc
mov
xchg
cmc
ljmp
lahf
pop
and
imul
sahf
lcall
test
cmp
pop
xchg
xchg
cmp
jmp
repz
mov
push
mov
mov
push
fdivrs
arpl
xor
inc
shl
pop
mov
xchg
pushf
loope
pusha
fisubrs
jle
bnd
sub
jno
lahf
pop
xlat
mov
sbb
jo
inc
fdivrp
push
movsl
sbb
cwtl
pop
lods
push
out
divl
imul
frstor
xchg
lahf
mov
dec
lcall
adc
push
add
jg
jmp
insb
in
and
stc
or
xlat
jne
sub
mov
or
iret
sub
mov
dec
test
dec
in
xor
jg
movaps
dec
cmp
dec
mov
hlt
mov
xlat
int
insb
stos
push
ret
adc
outsl
icebp
outsb
rcrb
and
mov
repz
inc
inc
sbb
jecxz
stos
stc
clc
cmpsl
xchg
mov
sbb
and
outsb
pop
jmp
pop
or
mov
les
cltd
xchg
push
mov
pop
jno
lea
jp
jmp
pusha
mov
push
pop
mov
sbb
insl
cmpl
pop
cmp
jle
dec
std
leave
cmc
pop
mov
inc
dec
fidivrl
mov
adc
into
push
xchg
mov
cmp
cmp
mov
sub
push
inc
inc
adc
xchg
xchg
out
or
mov
cmpsb
in
subl
gs
test
test
sub
push
in
inc
xchg
rorl
add
or
push
dec
rol
dec
stos
mov
adc
mov
cmp
mov
adc
push
shr
add
outsb
fstpt
gs
cmp
sub
out
lret
add
sti
outsl
dec
xchg
iret
mov
in
insl
add
fs
xchg
out
adc
fwait
mov
pop
dec
rcrl
notb
outsl
bound
imul
xchg
shl
outsb
clc
mov
jns
faddl
inc
addb
sub
xor
mov
loopne
jge
and
lret
aam
lahf
aaa
mov
in
das
pop
jno
into
notb
movsb
loop
loope
pop
test
push
fwait
repz
jo
insl
fisttpll
cmpsl
arpl
pop
aam
and
ljmp
cs
repnz
leave
adc
or
fcomps
rorb
and
push
fsubrs
cmpsl
xor
mov
fbld
xchg
lahf
addr16
subl
ljmp
inc
hlt
loop
jge
testl
inc
pop
inc
in
stos
jb
sti
sbb
cld
lea
sub
inc
in
test
cld
aas
xchg
xlat
xchg
incb
stc
jl
mov
lahf
dec
mov
loopne
mov
data16
sub
lock
sub
std
jmp
and
addr16
add
movb
leave
hlt
jbe
add
jmp
mov
cmp
test
nop
pop
sub
ret
gs
pop
in
and
jge
scas
scas
xchg
or
aad
jb
sahf
loop
mov
sub
dec
sub
xor
jmp
jle
je
push
out
or
mov
mov
outsl
jne
sbb
lret
rorl
es
push
mov
xor
jb
cmpsb
push
xchg
in
inc
in
insl
decl
icebp
cwtl
test
sbb
push
loopne
repz
shr
mov
lcall
add
cld
dec
xlat
xchg
lret
ret
outsl
lods
mov
sub
cmp
cmp
inc
enter
or
jle
or
xor
fmull
jno
sub
mov
jnp
pushf
dec
in
dec
mov
push
jp
add
das
jmp
lret
std
mov
imul
insb
fdivr
test
sti
push
sub
adc
push
ret
add
mov
add
sarl
mov
leave
pop
daa
add
or
dec
daa
int
jb
shr
mov
mov
bound
orl
inc
repz
mov
adc
filds
lcall
cmp
ret
and
hlt
lahf
js
lcall
movsl
icebp
pop
dec
sub
and
dec
xor
xor
lret
xor
loopne
pop
jns
mov
clc
decl
call
adc
add
pop
pop
sarb
cld
mov
adc
jle
mov
xchg
jb
rolb
imul
daa
pop
fdivs
push
mov
or
push
hlt
out
sbb
or
pop
clc
mov
push
filds
add
mov
sbb
in
push
mov
lods
inc
jl
mov
das
jnp
add
jecxz
stc
and
adc
jbe
mov
ret
jns
inc
mov
pop
je
cmp
jge
mov
icebp
pop
push
mov
push
pop
cmp
mov
mov
push
in
jnp
imul
push
cmpsl
sbbl
push
xchg
xchg
mov
je
movsb
mov
sub
data16
jl
pushf
insl
mov
and
lods
fs
sub
jecxz
lret
ret
mov
nop
sbb
ret
lods
xor
jb
lods
jne
xor
enter
jge
sub
sti
popa
lcall
dec
jmp
stc
stc
cmpsb
je
push
sub
out
mov
cmpsb
int
xlat
xor
sbb
shrl
cwtl
xchg
test
sbb
sub
js
mov
adc
push
jmp
sti
call
lret
add
dec
jb
clc
in
push
call
add
fdivrp
orl
pop
andl
ljmp
pop
xchg
dec
cmp
into
movsl
mov
gs
test
pusha
sbb
jecxz
lcall
push
xor
test
or
dec
mov
popf
in
mov
sahf
iret
insb
push
add
leave
int3
cld
xchg
pop
mov
and
or
iret
mov
mov
sbb
jb
test
xchg
push
xchg
fadd
int
pop
repnz
mov
push
je
scas
gs
push
jnp
jmp
add
fcoms
jb
adcb
stos
notb
test
cmp
push
xchg
push
pop
sbb
loopne
or
jle
pushf
xchg
into
xchg
and
lods
adc
xor
push
rorl
xrelease
jl
add
jae
fdivrs
subb
test
mov
aaa
pop
cwtl
dec
xlat
jge
push
imul
inc
insb
jg
jecxz
push
int3
cmp
dec
push
dec
js
loope
es
and
mov
sbb
mov
mov
add
cmp
sti
fldcw
in
pop
push
hlt
pop
sbb
hlt
adc
rolb
xorb
cli
movsl
xchg
pop
jmp
popa
dec
push
mov
mov
xchg
jl
rclb
outsl
inc
xchg
in
stos
js
clc
iret
inc
test
fbstp
push
scas
loopne
fbld
mov
iret
aaa
fdivrs
popf
mov
jb,pt
in
fsubl
pop
test
xor
pop
xor
dec
cmp
in
add
and
fcomp
bound
dec
sbbl
sbb
jge
xchg
fs
dec
loopne
mov
xor
pop
add
ds
add
pop
jne
cmp
shl
mov
mov
sbb
notb
hlt
xchg
adc
cmpsb
int3
lds
sti
inc
mov
fnstenv
in
scas
jae
jmp
movsl
testb
xor
and
int3
leave
sbb
fwait
xor
adc
je
ror
jmp
enter
dec
inc
jne
mov
addr16
mov
mov
jo
pop
inc
fwait
dec
and
cmp
lret
ficoml
mov
pop
push
xor
cmp
push
xlat
or
cmp
adc
jbe
arpl
dec
or
jno
fmull
divl
mov
cmp
lds
dec
sbb
xor
mov
pop
lret
mov
test
out
outsb
roll
and
sub
dec
nop
dec
mov
sbb
pop
aas
addr16
fadds
subl
lcall
push
mov
icebp
or
inc
or
sbb
aas
data16
sbb
xchg
push
add
sub
push
adc
push
addl
outsl
fstpl
or
fiadds
mov
aam
fwait
push
sub
mov
xchg
push
mov
leave
mov
mov
mov
arpl
lds
mov
in
push
mov
xchg
aad
or
inc
imul
rclb
xor
jecxz
pop
rcll
sub
cmpsb
fadd
adc
xchg
test
adc
xorb
ja
mov
lods
mov
xor
mov
push
pop
jb
cmp
pop
jne
rcrb
leave
int
push
xchg
sti
mov
aas
xor
mov
lods
gs
or
cmp
in
adc
push
add
cmp
dec
sub
es
or
dec
cltd
pusha
sti
dec
out
jne
dec
out
leave
inc
lock
fisttpl
adc
mull
mov
adc
loopne
pushf
xor
push
dec
pusha
mov
xchg
scas
loopne
repnz
mov
sub
rol
or
scas
pop
pop
out
mov
push
mov
inc
in
rorb
cltd
and
movsb
inc
sbb
jns
fwait
cld
pop
lahf
ja
dec
lock
nop
pop
test
loope
inc
popa
fildl
mov
jmp
cmp
sub
out
pop
mov
xor
inc
jo
xchg
inc
pop
sti
sbb
arpl
inc
pop
jns
cmp
imul
push
out
pushf
enter
push
test
jbe
jg
cwtl
lret
or
cld
jb
push
popa
stc
stc
out
xor
movsl
mov
jnp
mov
popa
sub
mov
push
stos
sbb
call
and
xor
rcrl
stc
mov
stc
test
xchg
sub
sub
pop
pusha
dec
stc
leave
add
sub
fdivs
pop
adc
fsubrl
scas
std
cmpsl
sub
insl
or
mov
and
imul
pusha
push
inc
or
pop
ret
into
push
inc
mov
fcomps
mov
data16
repnz
adc
mov
sbb
icebp
imul
es
dec
outsl
dec
push
mov
lahf
mov
test
xchg
scas
scas
int
jp
vsubsd
lcall
int
mov
paddb
cltd
out
shlb
push
jp
rol
notl
scas
mov
cmpsl
jae
fs
out
push
push
out
int
sbb
add
cmpsb
dec
cld
xchg
adc
outsl
push
push
arpl
mov
adc
jbe
sub
add
mov
js
inc
mov
scas
xchg
xor
jecxz
jle
mov
cmp
mov
fistps
setb
div
jne
aaa
jne
std
sbb
cs
and
cmpsb
xchg
or
sbb
je
jns
jns
xor
fdivl
xor
xor
sbb
das
and
gs
xor
mov
mov
ficoms
and
pop
pusha
in
icebp
push
jb
div
pusha
loop
push
add
out
ljmp
pop
repz
xor
jno
ficoms
pop
add
test
test
xlat
sub
add
xchg
and
xchg
and
jnp
sub
pushf
cltd
and
adc
and
adc
loope
pop
mov
or
mov
inc
je
mov
sub
cmp
inc
sub
lahf
push
out
inc
jae
xchg
rclb
xchg
jmp
jo
fwait
test
scas
jle
into
jb
lods
mov
call
test
cs
mov
xor
or
xchg
in
cmp
out
bound
or
pusha
loop
adc
scas
fsubr
mov
in
out
mov
add
push
pop
mov
adc
mov
test
inc
nop
cmp
xor
scas
adc
rcrl
push
call
enter
out
sub
loop
lea
sub
out
ds
adc
adc
xor
cmpsl
fxam
data16
push
sahf
arpl
or
movsl
xor
dec
xchg
pusha
mov
dec
pop
or
test
das
insl
push
push
in
dec
xchg
mov
sar
repz
fdivrl
jle
out
add
repz
mov
hlt
idivl
out
aaa
js
push
cmp
popf
pop
jmp
fs
rorl
mov
arpl
pop
mov
mov
mov
push
dec
and
xchg
inc
add
movsl
xchg
or
orl
sarl
imul
movsb
lds
add
inc
icebp
and
loop
jg
sbb
cmp
popa
in
inc
sbb
add
add
aad
incl
push
mov
jle
loop
iret
or
xor
sub
insl
imul
sar
lcall
mov
jge
in
cmp
ljmp
repnz
inc
test
mov
xor
push
clc
xchg
fidivl
jg
mov
js,pn
mov
fldcw
bound
push
movl
pop
and
add
ret
mov
aam
stc
fdiv
lods
xchg
mov
dec
ljmp
add
loope
sbb
mov
dec
pop
xor
mov
xor
in
xchg
add
pusha
jecxz
push
cli
dec
ret
push
fadd
add
lret
inc
fisttpll
cmp
outsl
and
mov
mov
adc
clc
dec
leave
fcmove
mov
push
insb
push
imul
inc
xchg
ljmp
sub
cmp
jp
popf
sub
es
push
cmp
popf
inc
mov
loopne
sub
adc
imulb
push
mov
in
xorb
dec
xchg
mov
or
xor
mov
lea
les
add
aad
or
nop
add
sbb
cli
jnp
test
rcr
mov
cmp
loope
mov
test
xor
subl
lods
mov
arpl
xor
xchg
sbbb
insb
and
js
xchg
fwait
pop
add
or
ret
enter
push
push
popf
push
xchg
and
rclb
jge
or
stc
adc
mov
rorl
mov
stc
insl
jecxz
push
jge
rcl
cmp
das
dec
sub
pop
ja
sub
inc
mov
mov
out
popf
mov
inc
mov
dec
sbb
repz
push
adc
jns
pop
outsb
sbb
loop
jp
fwait
jae
arpl
ja
jo
mov
call
shrb
ret
adc
cltd
lret
lret
mov
mov
sti
inc
sub
xchg
shll
or
into
ja
int
sub
jle
jns
cmp
add
add
cltd
push
pop
clc
mov
inc
xchg
add
pop
lahf
ret
sbb
inc
xchg
add
aam
cmpsb
insl
pop
push
bound
pushf
jmp
test
mov
or
and
inc
iret
ds
scas
sbb
dec
jns
push
stc
sub
pop
nop
fwait
and
push
leave
xor
cmp
inc
xchg
imul
mov
adc
aad
push
orl
dec
jno
or
fldcw
xor
fcomi
cmp
mov
call
dec
shll
mov
mov
xchg
pop
adc
pop
mov
mov
test
ficoml
inc
stos
pop
je
or
daa
pop
xor
cmp
inc
mov
xchg
icebp
call
fcoml
mov
loop
sub
ss
adc
push
jp
xor
pop
stos
fsubs
mov
inc
scas
add
and
leave
jnp
shrb
subl
bound
add
jnp
shrl
lods
mov
cli
les
lock
push
ficomps
clc
popf
imul
adc
jne
sbb
nop
fcomps
andl
das
dec
aaa
arpl
xor
pop
and
dec
imul
adc
insb
pop
cs
imul
pop
repz
cwtl
add
fwait
mov
jmp
imul
mov
pop
mov
shlb
mov
cmpl
stos
mov
aas
mov
add
pop
inc
cmp
sub
sub
xchg
ficoml
inc
inc
mov
clc
fstps
daa
jmp
xchg
jae
mov
icebp
mov
pushf
or
shl
jne
lret
fs
lret
das
cld
push
jne
hlt
in
std
mov
stos
inc
nop
cmc
jmp
lods
adc
ja
sbb
dec
clc
enter
inc
leave
push
shl
outsl
jle
and
xor
ss
dec
aaa
push
jmp
ds
out
insb
push
inc
mov
sub
push
loopne
jmp
divb
inc
and
inc
xor
inc
xchg
mov
enter
and
cmp
clts
xlat
stos
xchg
and
xchg
jb
inc
sub
and
in
sahf
cmpsl
lahf
cmp
ljmp
je
ljmp
aaa
cmp
xchg
outsb
sub
jns
in
cmc
cmp
fisubs
gs
bound
pop
mov
fstpt
mov
xchg
pop
rolb
movsl
add
sbb
fimull
arpl
inc
xchg
aaa
sbb
andl
jae
lods
mov
xchg
pop
push
in
add
dec
andl
js
xor
add
or
cs
ret
les
cmpsb
sbb
loop
dec
stc
push
ds
adc
mov
repz
clc
ss
es
sbb
testb
jns
fsubr
xor
pop
and
lea
xchg
insl
loope
cmc
shl
sti
and
in
adc
push
maxps
enter
loope
xor
sbb
fldenv
sarb
and
test
roll
and
rolb
aas
fdivs
push
dec
xchg
adc
out
mov
sbb
mov
aad
mov
test
xchg
sbb
xor
outsb
data16
adc
cmpsb
mov
leave
outsb
inc
inc
clc
adc
jnp
imul
addb
insb
lods
addr16
add
gs
push
pusha
mov
push
icebp
sub
leave
nop
mov
sti
stos
shlb
or
jge
and
test
rcll
fiaddl
lcall
outsb
inc
imul
test
test
lret
mov
xor
sahf
in
clc
adc
daa
pop
cmpsl
mov
mov
add
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
mov
inc
push
bound
pop
bound
mov
nop
fisubrs
pop
cmp
stos
jge
push
mov
movsl
cmp
pop
mov
xchg
cli
inc
or
cmpsl
loop
mov
aad
icebp
xchg
xor
pusha
rolb
cmp
mov
inc
pop
js
mov
mov
jg
movsl
loopne
je
and
test
push
insl
dec
inc
mov
mov
fnstenv
push
repnz
or
subb
orl
push
mov
rol
xor
dec
loop
mov
stc
dec
mov
adc
jno,pn
or
mov
in
inc
cmp
add
ficomps
jbe
aad
lods
pop
rcrl
je
jno
into
cmc
ja
mov
add
mov
icebp
xor
nop
lods
sub
pop
ja
mov
inc
add
cld
add
loopne
mov
ds
mov
mov
addb
cmp
pop
cli
pop
push
lods
movb
enter
insb
jbe
cmp
loopne
adc
rcll
mov
pop
xchg
or
testb
jbe
aam
test
test
dec
pop
inc
daa
jae
test
hlt
lods
push
fisubs
mov
shrl
inc
mov
inc
into
sbb
push
test
sub
rcrb
cltd
out
inc
lret
sub
in
jno
leave
adcb
sub
jecxz
cmp
enter
or
xchg
iret
sub
jns
inc
mov
mov
lds
pusha
and
or
dec
into
fs
mov
stc
addr16
dec
mov
mov
sbb
rclb
pushf
sub
in
jb
mov
mov
cmpsl
data16
punpckldq
xor
movsb
sbb
push
mov
sti
xchg
bound
stos
jmp
xor
out
push
in
std
mov
cmp
cmpsb
xor
outsb
jno
or
mov
rcrl
push
adc
mov
ror
shlb
popf
xchg
sbb
sbb
adc
mov
and
dec
popa
inc
movsb
test
push
fs
je
leave
adc
xchg
adc
pop
mov
lcall
pop
sbb
shll
mov
fldl
movsb
jg
xchg
and
je
data16
rcll
in
xor
pop
xor
dec
roll
les
in
jnp
adc
daa
fs
enter
adc
lock
xor
int
lds
into
push
addl
pop
neg
pop
sti
mov
jle
out
push
xor
push
mov
jae
mov
xchg
mov
pop
jecxz
pop
fdivs
enter
cltd
lret
inc
out
or
fdivrl
and
ficoms
out
inc
test
push
clc
push
int
fs
cld
aaa
xlat
xor
jge
dec
add
pop
out
mov
dec
sarb
mov
dec
and
ffreep
fs
mov
push
jae
cmp
inc
fsubrp
aad
sbb
xchg
jp
pop
fsubs
inc
and
outsl
scas
imul
jmp
outsb
xchg
icebp
xchg
jmp
popf
hlt
push
or
add
dec
das
adc
fstpl
scas
subb
push
aam
hlt
dec
pushf
pop
push
repz
mov
sub
imul
add
and
pop
xor
popa
xor
repz
fdivl
sarl
sub
cmp
ljmp
inc
mov
mov
and
mov
mov
cltd
ljmp
dec
stc
and
xchg
ret
adc
dec
lock
adc
xlat
and
decb
or
and
lret
sbb
test
iret
and
jecxz
or
int
scas
mov
mov
iret
mov
jnp
clc
rcr
aas
enter
nop
sbbl
aad
pop
in
clc
push
dec
dec
jp
sti
push
gs
jo
jns
dec
loopne
jl
aam
mov
sub
xor
pusha
sbb
dec
dec
push
xchg
jmp
cmc
mov
pop
xchg
fs
inc
jnp
test
je
repnz
ljmp
gs
pop
xchg
sbb
bnd
mov
push
pop
imul
inc
ror
xchg
pop
inc
popf
jp
cmpsb
pop
dec
popf
adc
in
sbb
pop
adc
dec
cmp
jle
mov
mov
cmpsl
lahf
cmp
fucom
push
fwait
bound
pop
mov
mov
clc
dec
dec
jbe
lea
jb
push
inc
mov
in
hlt
adc
in
mov
mov
xchg
jp
vpmaddwd
or
adc
scas
arpl
mov
xchg
loop
icebp
ljmp
frstor
mov
pop
jge
or
and
adc
frstor
fbld
insb
in
push
xor
inc
ds
fdivr
jl
mov
test
arpl
cmp
shld
adc
mov
dec
mov
or
cmp
push
push
out
movsl
xchg
jge
repz
outsb
mov
xchg
fucom
jmp
cmc
aam
pop
hlt
insl
fucomi
or
adc
push
clc
xor
mov
ss
mov
xchg
inc
int
lret
push
test
enter
loop
ljmp
add
iret
sbb
cmp
push
out
inc
leave
xchg
inc
mov
cmp
mov
jbe
sahf
shrl
pop
pop
mov
loop
cmp
sti
test
sti
int3
out
push
push
test
jmp
push
mov
or
sarb
add
mov
add
loopne
mov
clc
int
ret
or
jl
pop
add
inc
pop
pop
push
jmp
push
jp
mov
dec
xchg
cwtl
pop
movsb
pop
les
cmc
mov
test
jo
push
int
inc
adc
mov
fdivr
inc
jns
lods
pop
imul
sbb
cmp
sarb
cmpb
aas
punpckhwd
and
cwtl
std
fs
sti
or
fstl
stc
leave
lds
fistpll
or
std
movsb
cmp
inc
inc
xchg
push
stc
orb
mov
cs
and
xchg
test
int3
sub
pop
cmp
push
aam
push
sub
sub
cmp
bound
cmp
test
pop
pushf
hlt
test
add
aaa
xchg
mov
push
jae
fstpl
outsb
mov
mov
scas
and
mov
lahf
xchg
mov
push
aaa
and
dec
add
inc
push
add
cmp
jl
adc
push
fidivrs
sub
dec
out
cmp
popa
xor
idivl
cmp
ss
in
in
ljmp
insb
pop
add
pop
add
push
scas
adc
inc
ds
or
push
rep
mov
or
jne
sub
jmp
jp
jno
and
push
pushf
or
push
in
je
and
mov
inc
dec
push
inc
xor
sub
sub
dec
and
loopne
hlt
jp
inc
popf
xchg
jmp
jne
ret
stos
and
insb
jbe
sti
jge
mov
cmc
iret
in
xchg
cmp
cmpb
aaa
jecxz
mov
int3
loopne
repz
xor
out
insb
inc
cmpsl
dec
or
data16
lods
mov
aad
push
sub
incl
mull
int3
lods
inc
out
pop
into
sbb
and
and
adc
pop
sub
imull
dec
mov
test
ljmp
push
mov
jae
or
jne
leave
push
popa
inc
mov
xchg
or
sbbb
jmp
mov
mov
or
jge
add
test
leave
mov
sub
ret
jle
xor
adc
mov
call
popf
xchg
or
cmpsb
mov
in
dec
cmpsb
pop
pop
pop
and
sbb
dec
orl
fldl
add
pop
pop
sub
pop
jge
dec
cs
insb
pop
dec
xchg
jb
mov
jne
mov
and
fnstenv
cmp
mov
xchg
mov
xchg
and
pop
xchg
movsb
cli
out
xorb
mov
aad
mov
dec
pop
mov
sub
xchg
sub
xchg
fcompl
imul
xchg
or
out
sbb
mov
arpl
inc
fimull
fucomip
cmp
xor
sub
lahf
mov
shlb
mov
mov
and
pop
les
push
mov
and
es
sub
pop
sbb
neg
loop
xor
mov
fstps
xchg
pop
hlt
inc
in
sub
cmp
popf
and
js
jg
mov
ss
inc
sti
mov
jmp
sti
test
imul
add
pop
push
xchg
xchg
popa
flds
bound
arpl
mov
mov
mov
inc
mov
out
pop
lock
in
jp
add
cltd
popl
arpl
push
mov
test
push
jae
sub
jae
clc
movsb
jmp
jg
cs
lahf
nop
mov
jo
or
popa
mov
mov
clc
int
into
call
sub
shll
addr16
lahf
mov
stos
data16
add
repz
cs
or
enter
mov
es
inc
pop
gs
inc
outsl
xchg
cmp
push
leave
int3
jb
out
push
pop
xor
pop
test
insb
dec
inc
outsl
rclb
or
jno
enter
mov
mov
shll
call
adc
adc
icebp
fstps
and
inc
ljmp
sbbl
pusha
inc
mov
ljmp
cmpsl
dec
into
jnp
adc
add
data16
pushf
pop
dec
mov
popa
pop
int3
mov
mov
cmpsb
mov
int
jecxz
nop
test
or
ja
push
jo
and
add
xchg
mov
in
out
or
jmp
out
adc
mov
filds
push
cmp
mov
and
fsubrs
adc
lea
adc
add
or
cmp
mov
add
movsl
out
lcall
lods
mov
rorl
xchg
and
inc
and
jns
lods
mov
nop
loopne
imul
adc
jmp
push
cwtl
inc
inc
ret
rcll
cmp
je
rcrl
sub
jmp
mov
xchg
fs
loopne
push
xor
sub
loopne
int3
adc
pop
cwtl
or
sub
mov
mov
mov
pop
sub
orb
adc
adc
sahf
shl
xchg
mov
mov
lret
repz
mov
aam
mov
dec
icebp
rorb
call
push
gs
sarb
jno
stc
pop
outsl
mov
ret
idivb
ss
in
in
and
out
jo
pop
cmc
loopne
and
repnz
and
push
sub
testl
test
daa
lea
jo
inc
out
adc
xchg
fidivl
xchg
outsl
cmpsl
cmc
xchg
rcpps
aad
add
repz
xchg
mov
int3
push
mov
xchg
cwtl
add
ret
popa
loopne
pop
pop
orl
call
and
sarl
pop
pop
aam
push
adc
jle
xor
sti
lret
aad
adc
negl
sub
dec
sbb
icebp
sub
or
sbb
inc
fistl
shll
mov
aas
mov
mov
dec
aas
xor
dec
das
inc
inc
jnp
lcall
cltd
xchg
or
inc
mov
jmp
in
cmp
mov
mov
adc
sbb
insb
popa
fbld
cmp
sub
mov
cmp
push
add
cmc
pushf
inc
stos
outsb
cmpsb
jle
lret
xchg
in
mov
hlt
das
add
mov
push
out
ficoms
sub
insl
in
jl
pop
fwait
jno
es
rolb
cmpb
ret
clc
cltd
lods
add
adc
clc
jae
push
or
mov
fnstenv
xchg
or
add
bound
pop
mov
mov
out
push
sub
rclb
gs
push
sti
in
imul
loopne
out
into
popf
in
mov
or
pop
addb
jo
rcrl
lea
in
cmp
in
cmp
cmpsb
xlat
pop
ror
les
push
in
lock
and
mov
dec
in
jne
inc
cmp
pop
adc
add
adc
fsubrl
jmp
inc
mov
xchg
jmp
cltd
mov
insl
adc
call
push
push
call
stos
mov
sbb
xor
aad
test
jnp
sbb
xchg
lods
lods
dec
push
test
imul
pop
loope
das
data16
xor
out
sub
int
fs
mov
gs
test
mov
push
out
pop
cs
mov
pop
popl
or
gs
test
xor
mov
aas
test
cmpsl
sub
inc
mov
sbb
pop
inc
add
repz
cmp
sahf
mov
push
jae
cmp
mov
adc
cmp
cmpsl
add
test
dec
or
sbb
adc
add
mov
and
imul
mov
jl
int3
in
ret
aad
inc
jl
hlt
cmp
jecxz
mov
cld
scas
inc
or
loop
ret
push
addl
lret
repnz
mov
out
cld
mov
push
mov
aad
rclb
gs
test
pop
jns
xchg
adc
sarb
pop
or
int3
inc
sti
inc
pop
xchg
sbb
int3
push
adc
data16
jmp
fs
movb
jns
xor
bswap
push
imul
mov
mov
movsb
pop
sub
data16
push
jmp
jnp
rolb
je
sub
ja
fwait
js
push
cmp
lods
test
inc
lret
lods
out
sub
hlt
adc
push
inc
enter
inc
inc
loopne
test
cmc
inc
fimuls
sbb
xchg
int3
les
ss
sbb
inc
lcall
xchg
mov
cmp
add
mov
out
jg
push
jmp
addr16
or
or
and
fnstenv
decl
mov
ljmp
jle
pop
lods
call
adc
popf
nop
fdivs
jecxz
jmp
sbb
popa
pop
ret
inc
and
adc
lock
arpl
mov
push
movsb
add
out
das
push
mov
fldcw
and
mov
mov
xorb
leave
dec
mov
dec
mov
xor
es
icebp
add
dec
mov
in
aas
mov
iret
int3
mov
xlat
into
xchg
ret
xchg
fcompp
xchg
dec
xor
lahf
push
xchg
out
notl
push
mov
lea
popa
lods
lea
xor
add
inc
xor
jmp
lea
sub
gs
ret
fwait
lods
lods
push
icebp
adc
inc
xor
in
ja
cmp
mov
ret
lcall
cmp
test
dec
add
arpl
sarb
or
hlt
push
pop
fists
in
ret
pop
lock
mov
mov
fstpl
jmp
mov
loopne
jo
xor
push
mulb
dec
mov
cli
push
push
addl
adc
sbb
test
lcall
andl
or
test
popa
fwait
push
lret
add
rcrb
sbb
inc
in
lcall
sahf
lock
or
and
or
movsl
test
add
cmp
jg
loop
push
les
popa
sahf
lret
push
jo
push
pop
add
mov
or
rcll
jns
push
mov
push
mov
and
sbb
or
or
sbb
out
mov
pop
adc
les
cmc
and
ljmp
inc
aas
arpl
mov
in
scas
insl
ror
icebp
dec
lret
mov
lods
movsb
scas
pop
clc
xchg
aas
fiaddl
popf
dec
mov
pop
nop
mov
pop
xor
adc
shll
idivb
sub
push
repnz
notb
addl
cmp
rcr
popa
daa
mov
stos
jmp
jmp
dec
imul
add
pop
fwait
and
test
jo
sbb
cmpl
pmaddwd
scas
sti
or
add
xor
mov
loope
sbb
cmpsb
aaa
push
les
add
fisubl
jge
imul
sub
or
jno
lods
repz
jmp
fs
fldenv
push
int3
xor
jp
dec
add
das
insl
or
jmp
mov
ffreep
xor
xor
xchg
mov
adc
add
insb
imul
xchg
jno
cwtl
xchg
daa
cltd
jmp
cld
xor
and
nop
add
sbb
lret
mov
sub
shl
aam
dec
imul
sti
mov
out
cmp
icebp
outsl
inc
push
adc
dec
sbb
mov
sbb
popf
mov
xchg
ljmp
iret
in
iret
and
pop
mov
bound
adc
insb
or
and
push
mov
cmp
ror
adc
jmp
add
cmpsb
lret
adc
cli
scas
mov
cmpsb
sahf
ret
push
and
ss
ss
xchg
or
jg
icebp
aas
sbb
cmc
or
and
fld
fnsave
es
out
jmp
repz
in
iret
sub
lcall
popa
push
mov
sahf
lret
adc
lock
push
rorb
pop
dec
cmp
insl
jns
mov
ss
pop
arpl
lea
pop
cmpsb
xor
idivl
mov
leave
mov
mov
nop
fildl
pop
cmp
dec
aaa
lret
inc
cmp
scas
push
xchg
push
or
arpl
fs
mov
xchg
cmc
enter
clc
sub
js
cmp
xchg
inc
rorl
sti
dec
jmp
push
push
inc
pop
xchg
fdivrs
mov
scas
dec
lds
sti
test
out
ljmp
push
repz
aas
or
scas
cli
sbb
pop
sub
and
enter
mov
jp
sub
loope
test
add
mov
dec
shlb
bound
in
pop
sahf
mov
nop
dec
jmp
lods
adc
out
test
and
push
cmp
mov
in
ret
and
in
xor
ljmp
adc
outsb
mov
fldenv
outsb
stc
out
xor
fdiv
shlb
outsl
jge
xor
ret
or
adc
pop
int
jae
jns
sub
sbb
fs
add
inc
jne
push
sbbl
pop
mov
aas
addl
subl
loop
imull
nop
pop
pushf
xchg
inc
insl
aam
iret
enter
xchg
mov
push
xchg
fstpl
mov
or
ja
lds
test
or
xor
mov
js
sarl
leave
push
xor
dec
lea
lds
das
fwait
mov
inc
es
push
pop
imul
xor
ljmp
jge
fisubrs
imul
pop
fildll
aaa
imulb
jecxz
in
test
add
mov
adc
fcomps
mov
push
mov
stos
xchg
insb
gs
imul
cmovnp
inc
mov
dec
notl
fwait
test
mov
lea
cmp
sub
sbb
jo
ds
sub
inc
fwait
movsl
arpl
push
sub
cli
jbe
into
loope
fists
pop
cmp
or
sub
sbb
rol
or
jns
add
push
push
lods
repnz
mov
push
repnz
ret
es
aaa
pop
pop
adc
or
inc
mov
jbe
xchg
xlat
ss
cmp
subb
std
mov
sbb
xchg
mov
je
sbb
data16
mov
pushf
jg
mov
mov
loopne
cmc
in
rol
data16
cmp
add
cltd
and
lcall
int3
nop
pop
and
push
out
add
sbb
dec
inc
xchg
adc
adc
inc
loop
stc
push
mov
lock
popf
dec
push
mov
shl
cmp
mov
arpl
ljmp
cmp
add
aad
and
or
out
insl
mov
pop
test
outsl
push
xor
aas
xchg
push
jge
rolb
inc
pop
out
push
cmpsb
push
jne
std
mov
xor
ljmp
xchg
cmpsb
pop
dec
test
push
lock
add
push
dec
add
pop
std
std
sub
ret
jae
jl
notl
test
jne
mov
and
pop
int
add
dec
xor
mov
jnp
push
test
andl
sub
ss
sub
xchg
fdivrs
imul
fnstsw
inc
xchg
sbb
cmp
mov
lret
test
ret
dec
notb
or
mov
pop
mov
and
imul
outsb
in
jne
or
sub
repz
mov
call
faddl
movsl
xchg
sbb
fs
dec
pop
addb
push
fisttpll
push
cltd
push
iret
loope
nop
lahf
cld
adc
jne
mov
push
enter
out
cmp
loopne,pt
ret
out
adc
add
in
mov
mov
xchg
pop
repz
incl
loope
sbb
mov
in
loope
sbb
js
cld
mov
into
jae
loope
clc
jb
dec
xchg
cs
xchg
cld
push
and
clc
lea
es
stc
xchg
push
jg
call
lcall
adc
aad
scas
pop
mov
pop
jo
pop
sub
insl
pop
test
testb
push
gs
dec
pop
xchg
cltd
fmulp
mov
pop
xor
cmp
arpl
jle
push
inc
xor
fcoms
mov
and
or
aad
lret
mov
xor
aam
sub
roll
cmc
clc
cmpsb
push
das
scas
and
or
iret
int
push
xchg
cltd
xchg
mov
push
cmpsb
lock
lret
andl
push
stos
sbb
inc
shl
mov
xchg
push
add
mov
xchg
dec
ficompl
mov
addl
cwtl
push
pop
adc
sub
cmp
mov
icebp
xchg
stos
jp
dec
lcall
or
xchg
xchg
push
and
clc
dec
mov
mov
mov
out
adc
movb
dec
iret
ficomps
sbb
enter
orb
mov
pop
mov
das
jl
xlat
pop
xchg
cmp
jle
mov
insb
adc
popa
rcr
jl
pop
mov
jle
cltd
add
lea
jmp
insl
add
out
outsb
push
or
cmp
add
lahf
cmc
adc
adc
std
sahf
mov
aas
sub
xchg
dec
jp
cmp
xor
shlb
or
mov
shlb
mov
pop
insl
add
and
adc
add
xchg
pop
rolb
imul
aas
mov
divb
pop
jp
aas
cmpsl
sarb
in
sbb
lahf
jb
loop
into
cmp
cmp
movsb
hlt
nop
push
ss
adc
mov
mov
mov
jnp
xor
call
test
sub
mov
repz
fstps
test
arpl
sbb
inc
jmp
rol
testl
pop
pop
pop
mov
stos
xor
push
arpl
mov
hlt
xchg
out
xorl
lods
xor
sbb
mov
test
mov
jno
jnp
call
test
dec
mov
jne
jge
stc
push
push
pop
insb
or
xchg
add
jle
jl
pop
pushf
pop
pop
add
adc
mov
decl
cmc
lods
sahf
jp
ret
cwtl
aas
scas
cmc
lods
pop
mov
jnp
push
pop
ret
bound
dec
jno
cmp
and
push
cs
scas
jo
xor
push
sbb
inc
decl
aad
fs
das
fs
pop
movb
insl
push
lods
loopne
mov
push
xchg
inc
mov
dec
outsb
mov
sbb
in
out
cli
sbb
lods
fists
add
pop
enter
std
popf
dec
imul
xor
mov
stos
sub
pop
jg
push
mov
adc
or
out
xchg
mov
cltd
aad
inc
inc
mov
xor
cmpsl
jae
mov
fwait
insb
leave
push
nop
inc
out
jecxz
adc
mov
out
arpl
imul
sub
or
pop
or
or
lods
push
pop
and
sub
es
in
fcmove
xchg
mov
enter
out
aaa
addr16
mov
bound
mov
push
imul
mov
aad
into
or
nop
cmp
loop
in
div
xchg
movsl
xor
pop
insb
adc
repnz
cs
andl
imul
into
in
pop
aam
push
insl
mov
lods
or
stc
mov
add
mov
mov
mov
aam
mov
cmp
cmp
mov
adc
sahf
fcomp
jmp
push
xlat
insb
inc
repnz
fists
sbbl
cmp
push
std
xchg
or
movsl
imul
fcompl
sub
sub
add
push
xor
jmp
adc
stc
xor
in
push
cwtl
out
stos
push
push
ret
or
rorb
jle
cmp
sub
cmc
scas
jnp
adc
mov
pop
das
cmpb
stos
lods
mov
loop
loopne
xor
pop
sbb
sbb
mov
icebp
ret
nop
pushf
lods
mov
jo
xchg
xor
cmc
mov
and
jg
pusha
test
sub
call
xchg
sbbl
push
loopne
dec
and
hlt
add
pushf
mov
mov
mov
or
sarl
jl
xchg
cmp
imul
push
mov
stos
dec
test
sub
xor
movsb
test
push
sub
imull
stos
pusha
jl
andb
lret
sti
rcrl
jle
dec
or
sub
add
insb
mov
add
in
inc
push
or
js
out
inc
add
in
hlt
sbb
aas
pop
sbb
xchg
pop
out
jnp
aaa
jb
in
pop
movntps
fidivrl
stos
cmp
in
out
push
bsr
lret
push
pop
pop
outsl
gs
std
add
cmp
cs
cltd
jg
cmp
add
dec
mov
rorl
test
cmp
push
loop
adc
shrl
xor
sbb
pop
xlat
mov
push
loop
sub
jecxz
pop
out
inc
dec
fwait
push
cmp
xchg
xor
dec
jp
in
arpl
pop
outsb
js
jmp
fdivs
inc
mov
int3
mov
ret
xor
loope
and
push
push
jecxz
lock
jge
insb
adc
add
push
sub
fdivl
inc
xchg
adc
in
push
cmp
lret
dec
insl
or
adcb
in
lods
or
pop
je
sbb
mov
push
push
and
lds
rclb
mov
and
lock
ret
popa
scas
in
movsl
inc
and
or
mov
gs
shrb
cmpsb
dec
mov
adc
repnz
sahf
leave
orb
push
and
cltd
outsl
daa
add
js
add
iret
push
push
cli
cwtl
or
mov
sub
lret
adc
xor
inc
stos
xor
in
lods
and
in
mulb
repnz
xor
mov
movsl
jne
dec
les
lret
bound
cltd
loopne
mov
fdivrl
aaa
out
pop
cmp
movsl
es
add
dec
mov
mov
rcl
cmp
aas
cs
xchg
jae
loopne
add
pop
mov
sbbb
add
jp
shrb
loope
test
and
mov
push
pop
enter
sbb
sbbb
mov
mov
add
shlb
ret
cmpb
mov
fiaddl
mov
jns
sbb
pop
aaa
pop
sbb
push
outsb
xor
test
cmc
outsl
and
pop
push
lahf
and
imul
sahf
mov
cmp
pop
scas
faddl
movsb
addr16
inc
fcomip
hlt
scas
aas
xchg
xchg
mov
sbb
out
adc
xchg
mov
mov
or
nop
cmp
test
nop
mov
add
int
je
push
push
int
in
push
xchg
inc
adc
mov
jo
sti
es
adc
lea
cld
pop
push
xchg
lock
mov
test
pop
pop
dec
movsb
add
subb
adc
sub
pop
sub
xchg
dec
lahf
adc
mov
icebp
xchg
mov
dec
imul
fldenv
xchg
popa
imul
fnsave
rcrl
mov
in
cmp
add
pop
popf
lds
adc
jge
push
aas
lds
out
movsl
out
lea
cmpsb
jp
fidivl
stc
jge
fwait
jp
add
inc
ret
dec
out
and
arpl
dec
cmpsl
jle
mov
mov
xchg
inc
push
aad
jne
pop
dec
jge
ja
movl
hlt
inc
leave
and
or
das
fs
xor
cmp
test
cmc
frstor
sub
rcr
cmp
aas
movsb
shrl
jp
cmp
add
mov
call
popa
out
repnz
mov
xchg
fbstp
mov
add
jl
das
int
test
call
lods
and
mov
add
xor
cltd
jmp
ds
cmc
xor
jno
push
xchg
inc
jnp
jnp
sarb
mov
shl
lods
jae
inc
mov
inc
test
cmp
cmp
inc
enter
mov
inc
fdivr
add
sti
mov
ja
pop
mov
push
daa
xchg
inc
iret
inc
add
sub
inc
popf
or
and
loopne
lods
inc
xor
mov
adc
xchg
cltd
add
adc
mov
lcall
imul
push
sub
mov
cld
pop
lret
and
push
ja
add
movsb
mov
add
cmpsb
jl
loop
repnz
int3
faddp
add
ret
jmp
fdivl
in
and
shll
push
ror
pop
in
lret
aaa
loope
leave
sbb
sbb
bnd
push
inc
push
jp
sbb
jns
jae
cld
movsl
xor
pop
xorl
mov
or
cwtl
loop
stos
sbbl
push
mov
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
xchg
jmp
adc
inc
popa
bound
pop
bound
adc
les
add
aaa
popa
ljmpw
popf
xchg
shll
popf
pop
mov
test
xchg
fists
scas
imul
sbb
lcall
pop
ret
pusha
xchg
inc
and
and
cld
cli
lret
mov
inc
out
mov
sub
xor
out
sub
pop
jge
xor
xchg
lock
fists
sub
cwtl
add
pop
pop
push
mov
or
clc
jge
cwtl
jns
rcrb
cmp
push
inc
popf
loope
pusha
mov
dec
and
and
dec
outsb
sub
pop
fwait
sub
enter
std
sbb
jb
push
jbe
mov
ljmp
xor
pusha
mov
faddp
outsl
pushf
stos
int
mov
cltd
lea
inc
inc
sti
test
lods
push
into
cli
mov
add
mov
inc
data16
ss
in
sub
stos
lds
test
push
cmp
cwtl
ljmp
sbb
push
cmp
xchg
loop
sbb
fistps
sub
xor
or
into
and
mov
mov
xor
out
adc
adc
ja
mov
iret
outsb
fsts
fistpl
inc
std
mov
inc
in
fsubr
shlb
nop
cmp
sti
notl
bound
sub
jb
popf
test
hlt
dec
incb
dec
ja
adc
dec
ds
test
fdivrl
insb
jno
xchg
or
adc
xor
inc
mov
xchg
pop
bt
xchg
lahf
jge
sbb
mov
push
fbld
inc
xchg
ja
cmp
int3
out
sbb
adc
adcb
sub
das
shr
fidivl
in
adc
sub
dec
es
and
das
bnd
push
or
xor
dec
stos
scas
cmp
movsl
or
cmpsb
dec
paddsb
hlt
mov
jns
into
enter
add
push
fists
push
ja
push
inc
pusha
lods
mov
enter
push
push
pop
pop
mov
bound
lahf
repnz
cs
sbb
jg
arpl
std
cmpsb
stc
sub
push
test
mov
sarb
xor
jmp
jle
or
mov
xchg
mov
mov
outsb
das
cmp
xor
mov
loopne
dec
mov
mov
pop
xchg
xor
pop
sbb
mov
xor
int
jl
icebp
inc
and
adc
outsl
jp
rclb
mov
sub
leave
add
mov
xchg
mov
and
hlt
xchg
mov
popf
mov
push
xor
cs
iret
shl
mov
xchg
sbb
jmp
mov
in
sbb
jnp
pusha
lods
lock
jle
div
popf
add
cld
out
add
add
adc
fisttps
leave
xadd
out
jp
ffree
das
loop
mov
add
push
lock
pop
adc
test
add
sbb
cwtl
mov
mov
into
std
or
mov
and
cmpsb
jno
mov
addr16
mov
mov
fucom
sub
mov
mov
sub
xor
insl
mov
mov
fiaddl
pop
popa
nop
mov
dec
icebp
jne
add
pop
xor
inc
push
push
into
pop
or
push
or
sbb
or
cmp
inc
pop
aaa
lcall
arpl
push
fistl
imul
adc
cmp
sub
or
into
roll
call
mov
mov
movsb
ror
pushf
push
mov
mov
insl
xchg
and
lds
sub
xor
adc
xlat
inc
xchg
inc
mov
shrl
mov
inc
leave
je
ficomps
hlt
das
cs
xchg
push
cmpsl
js
jecxz
xor
scas
mov
adc
add
mov
out
lods
inc
mov
cmp
push
shll
in
mov
and
nop
ja
cmp
or
xorb
addb
sub
mov
xchg
mov
cmpsl
pop
add
shl
ret
movsl
mov
aam
int
in
xor
clc
stos
and
mov
hlt
lds
mov
mov
adc
insl
pop
mov
pushf
out
dec
data16
stos
sarl
aad
pop
cld
inc
es
movsl
cmp
add
rolb
fucom
mov
or
add
push
push
inc
or
adcb
cmc
inc
cmc
mov
jb
mov
sbb
xchg
inc
jecxz
les
mov
dec
jle
jecxz
adc
sub
sub
inc
add
lock
jecxz
jb
mov
mov
sbb
sub
sub
or
mov
lahf
xor
int
sbb
sbb
ljmp
mov
pop
push
cs
ret
adc
imul
jg
stos
sub
cmc
sub
outsb
or
and
insl
xchg
test
push
or
adc
imul
mov
imul
sub
xor
pop
call
loop
push
cli
fimuls
or
mov
out
fiadds
loope
les
sarb
fcoms
fadds
push
sti
inc
or
mov
xchg
pop
cli
lods
cli
xchg
or
sbb
ficompl
mov
aas
mov
mov
clc
into
aam
dec
js
mov
add
bound
lea
add
mov
aad
sub
je
xor
sahf
sub
cmp
mov
xor
adc
hlt
adc
adc
pop
push
fwait
xchg
jnp
sub
loope
or
or
sub
rorb
adc
nop
fdivrl
xchg
xor
fldenv
cmp
adc
xor
addr16
sahf
andb
fistpl
lcall
or
or
mov
jge
pop
push
mov
push
pop
push
fdivrs
aaa
ret
out
mov
arpl
pop
jp
dec
dec
repz
out
mov
outsb
dec
sub
ja
mov
pcmpeqw
scas
cmp
fstl
gs
sbb
test
pop
pop
push
adc
popl
mov
jae
adc
neg
dec
in
rolb
loope
lcall
lea
fs
lea
scas
jmp
dec
inc
pop
mov
push
ss
dec
mov
imul
inc
ficomps
je
sub
les
aas
pop
loop
ja
adc
ss
sbb
mov
in
fdivs
adc
adc
adc
shlb
xchg
jle
push
ret
jmp
mov
iret
push
nop
std
outsl
pop
mov
sub
lcall
cmp
lea
cmp
lods
push
bnd
adc
xor
aaa
cmp
lods
and
popf
addr16
mov
jg
js
lock
pusha
sbb
test
xchg
jns
loop
imul
cltd
cmp
xor
pop
vunpckhpd
mov
jae
pop
aas
insl
add
fldl2e
mov
int
cmp
sub
popa
jbe
jp
xor
sbb
lret
call
inc
cmp
adc
bound
in
std
je
sub
jp
outsb
jge
movsb
sbb
xchg
leave
lds
movsb
stos
mov
pop
fwait
clc
xchg
sub
and
dec
in
in
jg
jo
jae
lcall
stos
in
push
push
xor
ja
jg
call
mov
inc
dec
icebp
sbb
data16
das
fcmovnu
arpl
lea
scas
daa
and
mov
jg
push
shll
fbld
rorl
push
repnz
mov
and
ljmp
pop
inc
fcoml
jns
mov
or
incl
cmp
mov
nop
je
add
mov
ret
jecxz
js
dec
nop
fsubp
bound
jl
and
jmp
nop
into
inc
jo
jne
ds
and
jp
add
clc
pusha
add
std
stos
pop
or
scas
nop
pop
outsl
add
fcoml
aad
or
push
dec
fwait
leave
rep
jbe
cli
fs
xchg
push
imul
enter
inc
fsubl
cltd
inc
mov
lcall
sarb
out
xchg
mov
fldcw
pop
stos
leave
mov
movsb
xchg
adcb
mov
xor
push
insb
and
lahf
push
jo
cmp
aad
mov
fstps
jmp
repz
xchg
mov
mov
and
and
cmpsb
push
mov
aaa
and
shlb
sbb
add
ljmp
mov
ss
rclb
or
out
jo
push
adc
xchg
pop
mov
push
jmp
pop
xchg
sbb
loope
and
push
addr16
pop
movsb
xor
int3
icebp
xor
or
sbb
dec
outsb
jecxz
pop
addr16
nop
ja
icebp
subb
repnz
pushf
mov
or
rorb
out
in
xchg
insl
adc
xchg
leave
popa
mov
and
lcall
out
inc
or
jnp
fidivrl
jg
into
lcall
fcomp
inc
ljmp
lods
jg
scas
imul
gs
mov
data16
xor
aas
outsl
mov
push
push
decl
xor
mov
data16
pminub
ljmp
leave
in
int
aad
pop
sub
pop
mov
mov
shlb
push
les
jmp
out
lods
sub
sub
push
mov
push
call
cmp
aad
es
dec
ret
adcb
jno
addr16
mov
fwait
mov
in
sub
imul
es
inc
arpl
ja
add
xlat
inc
dec
leave
imul
mov
mov
mov
roll
push
mov
int3
scas
and
cmp
and
in
lods
fs
outsb
daa
imul
icebp
insl
push
insl
cltd
push
push
and
jo
and
imulb
dec
sub
dec
sub
jecxz
repz
add
jle
movsl
sub
int3
les
pop
inc
fidivs
cmp
out
repz
adc
push
stos
out
fldt
test
mov
xlat
pop
jno
sbb
and
xchg
mov
outsb
sbb
out
sarb
mov
shl
jp
fistps
rclb
cmp
in
sub
xor
fsubp
in
mov
jecxz
sahf
adc
push
add
outsl
hlt
mov
fstps
loope
mov
jecxz
push
jae
inc
mov
lahf
insb
sbb
jle
cmpsb
cwtl
and
push
inc
aad
xor
hlt
cmp
lahf
addr16
xchg
insl
idivb
outsl
sub
adc
dec
pop
movsb
sub
lret
xchg
lret
hlt
movsb
lods
aam
or
inc
aam
into
pop
cmc
adc
push
pop
mov
pushf
dec
fsubrs
add
clc
outsb
pop
icebp
ja
loopne
sub
and
scas
nop
pusha
adc
mov
insb
sarl
std
mov
out
mov
jo
mov
enter
sub
sub
dec
push
imul
lcall
inc
push
xor
aad
push
in
lods
jl
mov
subl
sub
outsl
jae
out
js
add
aad
aas
mov
popa
js
inc
imul
push
int3
adcl
rolb
clc
jp
std
mov
push
jge
mov
pop
pop
mov
or
enter
pop
add
jno
in
pop
cwtl
jo
xchg
add
out
in
ds
mov
loopne
aam
test
ret
out
pop
mov
into
in
out
sahf
jg
push
loop
neg
fucom
les
dec
outsb
xchg
cmpsl
lcall
loop
mov
scas
cmp
popf
cmpb
repnz
nop
mov
sub
jbe
loop
scas
call
sarl
cmp
mov
cmpsb
adc
dec
faddl
testb
push
pushw
lock
lahf
xchg
sbb
pop
or
xlat
test
and
jmp
loop
insl
xchg
pop
in
icebp
dec
inc
leave
aaa
pop
leave
popa
insb
gs
dec
pop
in
xor
sahf
bound
mov
sbb
cmpsl
jns
jge
mov
lahf
test
je
loopne
ja
mov
xchg
fisttps
add
lock
push
idivl
or
xchg
pop
es
mov
xlat
lods
push
jmp
fcomps
jno
stos
hlt
or
jns
lds
popa
lahf
push
adc
jecxz
fstps
fwait
jecxz
pop
sub
jge
jae
adc
arpl
sub
push
push
push
jne
sub
push
or
push
push
cmp
fidivrs
sbb
mov
push
pop
adc
jne
adc
stos
cs
movsl
cmc
mov
xorl
pop
sub
cltd
cli
fs
sbb
ljmp
sub
and
nop
sti
pushf
out
xorb
or
iret
xchg
fnstsw
mov
in
out
jnp
pop
out
mov
push
aas
sti
leave
pop
lcall
ljmp
pop
push
xchg
mov
and
mov
or
inc
push
hlt
imul
cli
in
mov
ljmp
dec
jecxz,pt
bnd
push
loop
xchg
mov
add
add
jne
enter
xor
mov
aam
pusha
clc
data16
inc
inc
jne
sub
es
cwtl
fidivrl
mov
or
movsl
add
lcall
outsb
cmpb
mov
roll
testb
mov
popaw
jp
inc
adc
stos
lock
sub
cmpsl
mov
ljmp
mov
out
imul
rcrb
mov
jae
and
jbe
mov
sti
gs
jnp
cli
or
test
xchg
mov
mov
imul
rolb
loope
outsl
negl
pusha
jns
test
push
mov
mov
clc
lods
dec
inc
out
mov
jbe
adc
or
ret
jle
jl
adc
test
pushw
sahf
shlb
lods
lods
mov
test
dec
or
jbe
jmp
push
and
aaa
jns
sbb
add
dec
jnp
dec
call
jg
sub
ja
xchg
aam
popa
insb
ja
adc
stc
in
lods
repnz
iret
push
sub
cltd
sti
push
fldl
icebp
outsb
xchg
out
push
push
cld
jnp
lahf
mov
dec
add
xor
dec
inc
xchg
or
popf
bound
xlat
hlt
dec
xor
mov
xchg
cmp
icebp
sub
sti
scas
adc
mov
push
aam
jp
sbb
or
mov
push
pusha
adc
push
or
mov
bound
dec
movsl
sub
loope,pn
mov
sbb
rcrl
mov
gs
dec
insl
pop
cmc
scas
jp
mov
cwtl
jae
and
sub
push
mov
adc
movsl
xor
inc
out
orl
sub
cmp
push
mov
push
je
push
hlt
push
and
adc
pop
out
mov
xor
and
rclb
sub
dec
adc
sarb
mov
ljmp
sbb
sub
popf
xchg
jle
addr16
imul
pop
test
rcrb
in
mov
cmpsl
cmp
insb
mov
pop
xchg
in
aas
jecxz
movsb
add
sub
popf
and
push
arpl
and
pop
mov
scas
jno
pop
jbe
push
jbe
jp
dec
push
lcall
or
int
mov
sti
mov
cmp
xor
xchg
cmp
sbb
mov
out
and
in
push
fs
stos
inc
sub
xchg
rcrl
pop
movsb
lds
lods
push
test
jle
repz
cmp
inc
push
pop
jg
push
lret
test
in
xor
test
lret
out
mov
push
xchg
out
lret
xor
mov
inc
pop
sub
sbb
jno
and
adc
and
ljmp
rorl
flds
xor
andb
and
sti
inc
push
xchg
verw
test
pop
xchg
out
pop
arpl
adc
and
sub
or
add
int3
xchg
fcoms
push
fcoms
daa
sbb
clc
stos
idivl
jge
repnz
mov
sti
test
jmp
pusha
out
and
sub
mov
fldl
or
lods
lds
hlt
repnz
adc
stc
or
loop
cmpsb
xchg
jg
loopne
cmp
mov
daa
daa
daa
mov
shll
clc
mov
jnp
pop
pop
mov
mov
sarl
pushf
imul
shlb
inc
sbb
int3
fisttps
mov
test
cmp
jecxz
cs
mov
hlt
xchg
pop
adc
ds
cmp
jae
xor
mov
cmp
xchg
add
xor
mov
jns
pop
stos
mov
in
push
or
cmp
mov
out
push
sbb
mov
ss
shll
fwait
call
test
or
mov
pop
push
push
push
sbb
les
ret
jg
xchg
xchg
push
inc
ret
add
rolb
push
sti
mov
in
jl
fistl
or
sub
cmpsb
cld
nop
fistpll
push
fs
in
and
dec
xchg
pop
fnstsw
insl
les
icebp
mov
or
inc
mov
les
lahf
and
sub
arpl
rcrl
inc
inc
fidivl
cwtl
cltd
incb
out
pop
mov
jle
sub
cmp
cmp
out
push
dec
and
xchg
inc
xor
push
ja
cmp
sbb
shrl
push
popa
ret
rorl
ss
pop
hlt
mov
mov
inc
cmp
sti
shrb
sbb
iret
iret
dec
pop
or
mov
push
adc
pop
scas
shll
cmp
lahf
jp
cmpsl
xor
into
adc
xor
mov
imull
hlt
mov
cwtl
leave
clc
enter
jne
sub
test
push
repz
adc
dec
mov
dec
jns
ljmp
fcomps
push
sbb
rcrl
daa
or
aam
add
lret
mov
shrb
jae
mov
push
loope
adc
lds
xchg
pop
pop
jae
push
and
popf
aam
orb
mov
xchg
test
cmpsl
or
adc
mulb
sub
fdivr
inc
les
lret
lea
adc
add
scas
fiaddl
push
stc
cmp
out
pusha
inc
mov
daa
aaa
mov
cmp
sbb
std
fdivl
pop
and
ja
andb
stos
push
loop
mull
or
mov
mov
and
push
icebp
mov
pop
xchg
xchg
in
mov
pop
xchg
insb
in
lock
cmp
movsl
jmp
fld
mov
xor
shrb
add
mov
mov
pop
cwtl
sarl
xchg
stc
mov
cmp
fmulp
cmpsb
fs
add
ljmp
or
add
out
mov
enter
in
push
adc
lods
jl
push
pop
lret
test
scas
leave
cli
inc
and
shlb
dec
inc
cld
scas
in
in
jno
sub
cs
cmp
iret
or
in
mov
mov
xchg
mov
pop
and
insb
shrb
jae
ds
mov
mov
fcmovne
fldcw
loopne
mov
daa
dec
mov
sbb
call
mov
addl
dec
xchg
lahf
cld
data16
push
jne
or
ss
inc
js
xchg
int
lods
jle
xrelease
in
stos
push
popf
outsb
xor
out
pop
pop
pop
test
fsts
aad
out
leave
inc
rorl
mov
call
dec
mov
add
push
leave
push
dec
cmp
pop
mov
lods
cmpsb
xlat
pop
or
jae
in
fiaddl
push
jae
mov
pop
push
lea
mov
push
xorl
movsl
cmp
pop
and
daa
cmp
pop
jae
sbb
sbb
mov
or
dec
mov
inc
in
xor
sbb
out
ss
mov
or
movsl
and
pop
jb
call
mov
lcall
pop
in
lock
pop
xchg
xchg
adcl
push
aas
insb
dec
lea
jl
imulb
xchg
add
mov
dec
and
xchg
pusha
sahf
loopne
addr16
lret
test
push
and
ja
mov
jnp
push
fldenv
cmpsb
dec
ljmp
xchg
sub
sub
mov
jb
cmc
sub
adc
shr
push
jnp
xor
mov
jo
clc
cs
or
outsw
xor
mov
lret
push
or
jecxz
mov
mov
jecxz
xchg
int
mov
dec
or
loopne
rorb
iret
stos
dec
roll
adc
or
mov
mov
and
shl
ss
fstpl
adc
mov
stos
es
add
pop
in
xchg
jecxz
push
cmp
xor
push
cs
sarl
jmp
inc
popa
divl
mov
sbb
scas
repnz
mov
inc
out
cmp
push
pop
call
jge
xor
push
test
pop
inc
into
bound
sbb
jl
aas
xlat
inc
pop
mov
loopne
and
mov
in
out
push
push
testb
and
mov
jbe
jo
xchg
mov
icebp
aas
mov
mov
enter
jno
mov
adc
lcall
out
mov
jmp
cmp
xor
add
dec
std
push
rorl
fsubs
sbb
xchg
test
mov
push
pop
in
fisttps
enter
push
xchg
sbb
bound
mov
dec
sbb
in
les
fnstcw
loop
xchg
inc
shl
adc
leave
push
sub
dec
dec
or
shrl
loope
xor
mov
xchg
mov
pop
sub
ss
jae,pn
or
cmpsl
aam
lret
mov
repz
out
pop
dec
dec
fimuls
repz
fdivrl
clc
fbstp
push
cmp
push
add
pop
cmpsl
in
test
shrl
adc
push
mov
mov
mov
leave
inc
test
enter
cmp
sub
and
in
lea
sub
sti
cmp
outsb
mov
sbbb
mov
popf
das
push
aad
sub
fcmovu
popaw
lahf
stc
pusha
jmp
lret
pop
loopne
daa
sbb
cltd
cmp
out
ds
sbb
pop
pop
stos
jp
ljmp
jbe
ret
cld
push
pushf
movsb
sub
gs
scas
cmc
and
popl
cmp
sbb
or
lods
jo
lods
sub
pop
or
or
push
loope
mov
test
or
xchg
mov
divb
dec
dec
fldenv
xor
add
mov
xchg
push
xchg
aam
fdivl
in
add
push
int
ja
ss
pop
enter
loopne
jp,pn
aaa
ret
xor
xchg
je
jecxz
cwtl
enter
ds
inc
cwtl
insl
mov
roll
bound
cmpsb
in
es
insb
lds
arpl
pop
fildl
xor
sub
fwait
add
mov
movsl
sub
mov
pop
roll
inc
cwtl
hlt
and
mov
les
test
enter
sub
mov
push
sarb
fnstsw
add
or
in
scas
scas
cmpsb
out
lods
jge
push
sarl
jae
or
sbb
xchg
pushf
test
bound
int3
clc
in
sti
or
xor
test
dec
xor
in
mov
int
cmp
out
pop
insb
cmpxchg
jle
push
xlat
cmp
and
cmp
lret
mov
xchg
push
or
in
popf
lods
sbb
movsl
add
test
pop
jle
test
lock
ljmp
pop
movsl
jp
repnz
out
add
or
test
cmp
in
push
inc
ret
aam
in
test
popf
mov
mov
ret
test
pop
popa
pop
sti
clc
test
rclb
test
sbb
xchg
dec
cmpsb
in
jl
cmp
decl
call
cmp
mov
mov
enter
bound
xor
cmp
mov
daa
add
push
sub
pop
incl
sub
data16
aad
imul
xchg
push
test
gs
xchg
ja
scas
repz
popa
inc
rcl
in
lcall
mov
or
int3
loop
push
aad
aaa
imul
mov
mov
and
and
out
bound
lahf
test
add
popl
lods
mov
clc
cmp
push
dec
lret
pop
ja
pop
into
mov
mov
mov
mov
in
mov
jnp
dec
ss
mov
mov
mov
xor
xchg
or
out
cmpsl
and
adc
jle
ja
int
int3
fnstcw
and
inc
nop
push
fnsave
gs
inc
fcoml
inc
ljmp
mov
mov
lahf
lock
insb
jmp
orb
dec
pop
jmp
add
fucomi
and
and
jbe
adc
loopne
pushf
add
outsl
add
adc
xchg
aad
xor
inc
mov
inc
inc
add
adcl
dec
shr
test
push
outsb
movl
imul
cmp
mov
movswl
ror
cmpsl
pop
fsubrs
xchg
insl
aas
mov
xor
insb
pushf
shrl
jae
aaa
sub
add
rorl
adc
out
in
inc
test
mov
dec
jns
xchg
xor
sub
jb
popf
push
push
scas
jno
cltd
sbbb
movb
add
push
xor
lds
enter
push
xchg
addr16
mov
fists
sub
shll
xchg
rcrb
pop
dec
das
cwtl
and
imul
cld
daa
cmp
ss
cwtl
add
cs
js
ljmp
pop
fisttpl
daa
enter
cmc
cmc
mov
mov
ret
imul
aad
xchg
mov
or
icebp
push
ror
xchg
jae
xor
jnp
and
scas
test
orb
mov
out
mov
lret
jbe
mov
xchg
loop
cwtl
es
fsubr
int3
mov
jmp
hlt
sub
push
fcoms
xor
loop
xchg
cwtl
sbb
pop
stos
cmp
movsb
cmpsl
pop
in
icebp
sbb
fidivs
out
nop
mov
andb
push
jmp
fsubs
daa
cmp
mov
jb
lcall
mov
int3
in
jmp
mov
mov
mov
mov
outsl
mov
jp
aam
test
add
pop
std
shlb
push
mov
cld
ljmp
xchg
sbb
xorl
add
insb
fdivl
push
mov
sbb
xor
dec
add
add
xor
mov
and
add
das
jne
add
xchg
stc
cmp
fldenv
add
add
sahf
movsb
add
xchg
push
mov
adc
lea
std
push
movsl
mov
hlt
les
imul
xor
and
push
jno
jle
subl
not
jmp
mov
cmc
shl
jge
xor
jge
push
out
lea
and
ret
out
jl
aaa
stos
dec
imul
adc
mov
test
loop
xchg
mov
inc
cmp
outsl
or
jmp
lcall
xchg
enter
fs
stc
out
shr
push
pop
in
repnz
sub
mov
inc
cmp
mov
push
push
jae
cmpsb
outsl
dec
das
mov
pop
mov
add
push
add
sub
gs
xchg
sbb
cmp
xchg
hlt
jecxz
pop
xor
lret
out
jmp
and
and
jb
inc
cld
push
xchg
inc
arpl
push
pushl
push
movsl
ffreep
jae
test
xlat
or
adc
mov
mov
jae
clc
cld
xlat
jge
xchg
xchg
mov
inc
in
or
xchg
push
jl
test
movsl
int3
ficoms
adc
sarb
mov
ja
call
adc
call
clc
pop
and
mov
insb
xlat
xchg
sbb
and
mov
mov
inc
inc
and
adc
lock
add
pop
adc
hlt
bound
nop
jo
adc
lds
cmp
rcll
std
cmc
ss
pop
dec
icebp
aad
jnp
or
sub
imul
mov
pusha
inc
cmp
fstpl
or
aad
out
movsb
and
test
add
imul
lcall
mov
adc
mov
dec
enter
cmp
dec
out
xor
inc
jp
subl
outsl
ljmp
imull
in
addr16
or
inc
in
adc
loop
push
dec
lods
push
inc
mov
xor
shl
loopne
jb
add
in
pavgw
repz
sbb
xchg
push
xchg
cmp
negl
les
test
inc
aas
ret
les
fimull
jecxz
xor
enter
push
jle
and
xor
aaa
cmp
imulb
dec
arpl
fiadds
out
fdiv
jb
or
push
push
inc
jnp
movhps
inc
sahf
test
mov
ret
outsb
mov
loopne
test
je
sti
sbb
stos
jo
xchg
and
icebp
fwait
mov
or
rcrl
inc
ret
insl
mov
mov
js
or
xor
test
pop
mov
loope
cmc
jb
ljmp
sub
xchg
push
mov
aam
outsl
mov
lret
out
mov
out
mov
loop
in
mov
aam
push
insb
adcb
adc
cmp
repz
adc
and
pop
xchg
push
andl
pop
jb
mov
mov
roll
push
or
data16
inc
subl
mov
mov
fwait
or
mov
xor
stos
stos
add
or
loop
pop
pusha
cmp
arpl
sbb
test
outsb
ljmp
lds
push
cmp
dec
mov
xor
pop
addl
fcmovu
movsl
mov
fdivl
mov
pop
or
mov
js
int3
pusha
enter
dec
outsb
leave
insb
and
lcall
lcall
push
insb
addb
sti
and
xchg
jno
inc
clc
mov
sub
or
adc
xchg
add
add
add
je
fsubrl
fdivrl
inc
in
stc
adc
scas
cmpsl
stc
fsubr
adc
mov
data16
ss
jecxz
scas
or
movl
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
sbb
mov
popa
bound
pop
bound
xor
pop
je
movsl
and
pop
and
mov
mov
inc
fucomp
mov
push
jmp
fistpl
rorl
hlt
mov
fcomps
push
cli
in
mov
push
push
xchg
dec
push
fsubr
adcl
loope
push
or
push
ljmp
dec
push
adc
leave
pop
dec
push
aaa
movb
insb
inc
fidivs
jecxz
jbe
push
sbb
add
push
and
in
xor
in
mov
xor
mov
mov
cmpsl
cmp
xlat
pop
xchg
or
add
cmp
sbb
mov
jae
ficoml
arpl
and
arpl
jecxz
cmc
and
cmpsb
lret
lcall
test
movsl
sbbb
sti
les
push
out
and
and
xchg
scas
ljmp
ljmp
ljmp
cmp
fwait
aad
lret
inc
mov
jecxz
repz
jnp
or
jecxz
push
iret
mov
mov
iret
mov
jle
jmp
or
push
jle
loop
push
and
dec
cmp
lahf
cmpsl
mov
dec
xchg
int
js
into
mov
sbb
in
cltd
and
adc
sbb
test
out
pop
mov
icebp
jmp
leave
fistps
insb
loope
mov
mov
ja
adc
adc
mov
data16
movsb
fildl
and
loope
xchg
out
scas
and
gs
in
leave
push
sub
sub
popf
dec
and
pop
popf
push
lock
cmp
loopne
push
loope
aam
and
xchg
push
ds
cld
xchg
daa
clc
jbe
repz
lcall
lods
push
mov
xchg
and
mov
lods
rorb
xor
cmp
fdiv
xor
gs
pop
jmp
or
xchg
mov
mov
jecxz,pn
and
and
stos
loopne
mov
pop
adc
push
stc
push
sbb
daa
push
or
scas
inc
mov
push
mov
enter
out
ficoms
out
clc
add
movsb
fnstenv
jb
cmp
jno
mov
data16
add
xor
into
push
mov
imul
rclb
xor
insl
dec
fcmovnbe
aas
in
jge
mov
mov
aaa
jecxz
dec
and
popa
and
jne
cmp
pop
jecxz
mov
gs
in
pushf
cmp
pop
xchg
outsb
jle
lret
movsb
jl
shll
dec
ljmp
mov
and
lret
cs
jae
int
jbe
iret
aas
mov
mov
cmc
inc
adc
push
add
cmp
mov
les
sub
add
sbb
pusha
in
adc
bswap
jne
mov
lods
add
jge
mov
frstor
leave
fisubl
iret
out
jb
mov
mov
add
xchg
cltd
dec
in
add
cltd
and
aaa
push
mov
jp
inc
xchg
dec
lods
stc
orl
sbb
jecxz
int
outsl
movsl
xchg
add
lods
mov
pop
sti
jne
inc
inc
mov
add
cmc
mov
popf
pushf
js
sub
add
sub
or
test
jmp
cltd
sbb
sti
mov
fimuls
cs
imul
inc
js
push
mov
in
pop
inc
fistpl
inc
cmp
or
movsb
and
test
mov
out
fdivrs
mov
loope
fbld
mov
jmp
cmp
jbe
icebp
xchg
icebp
jbe
mov
sub
test
bound
sarb
cmp
insb
inc
xor
xor
sub
insl
and
jnp
adc
cs
fisttpll
dec
adc
pop
test
std
test
test
inc
or
fisttpl
xor
cmp
inc
mov
mov
aam
mov
enter
scas
loopne
call
jp
das
out
push
jnp
stc
daa
add
pushf
je
repnz
loope
mov
test
mov
test
jo
adc
gs
inc
and
inc
add
pop
test
cmc
subl
xchg
or
sub
pop
aaa
std
inc
cli
dec
xchg
imul
out
inc
mov
inc
sbb
xchg
loop
xor
divl
imulb
inc
cmpsb
jae
mov
bnd
iret
adc
mov
int3
add
insl
jl
sub
int3
iret
pushf
in
and
ds
fildll
in
xchg
dec
std
ss
arpl
jp
xor
jb
repz
add
push
repnz
jbe
and
xor
dec
inc
fs
or
insb
mov
adc
and
adc
sub
push
jmp
test
clc
test
lods
push
and
push
dec
out
pop
dec
xor
inc
lods
movsl
lret
push
mov
pop
cmp
and
es
mov
pusha
mov
ret
daa
clc
aam
sub
push
repnz
xchg
shrl
js
scas
xchg
xor
inc
insl
icebp
dec
jae
adc
adc
xor
ficompl
mov
cmpsb
jns
loopne
xchg
xchg
decl
out
or
stos
iret
sub
xchg
movups
pop
cltd
sbb
loopne
sbb
insb
add
xor
inc
rcl
arpl
dec
das
push
mov
sub
add
jmp
es
jne
rcrb
mov
aam
push
icebp
pop
push
cmp
xchg
out
xlat
mov
mov
push
cmpb
psadbw
insb
sub
int
callw
inc
bound
push
jbe
xchg
pop
outsb
je
and
test
mov
lods
aas
popa
sub
xchg
repz
out
pop
mov
jecxz
ret
into
cmc
and
aas
pop
cmpl
mov
inc
ds
roll
cltd
shlb
push
and
dec
lods
push
js
cmp
push
add
mov
scas
pop
and
ljmp
cmp
jns
cwtl
jns
addl
stc
xchg
add
cmp
arpl
inc
lds
inc
mov
push
aad
ret
bound
into
mov
pop
cmp
ret
add
js
mov
sub
rorl
lret
adc
shrl
dec
sbb
dec
or
cwtl
dec
out
or
add
mov
jnp
test
sub
bound
lret
mov
imull
xchg
sahf
icebp
inc
out
ds
mov
cli
sbb
sti
int3
filds
xchg
into
xor
push
adc
imul
test
inc
mov
and
ss
adc
cmp
loope
mulb
jnp
fildll
enter
inc
adc
fstps
xor
sub
sub
cmpl
push
jp
fcmovu
inc
jecxz
jg
dec
lcall
out
jecxz
lods
out
pop
cmc
adc
hlt
sbb
jae
stc
sti
add
dec
repz
js
mov
mov
jne
ret
lock
das
enter
out
push
scas
push
and
inc
pop
ja
mov
cmp
arpl
ljmp
push
stc
xor
cmc
clc
cmp
sbb
rcrl
sub
push
shlb
adc
loopne
int
pop
inc
mov
dec
pop
ljmp
jae
fldt
and
mov
out
hlt
imul
dec
xchg
and
ljmp
rcrb
rorb
push
cmpsl
sbb
xlat
adc
pop
in
jns
push
add
inc
pop
push
push
pop
ja
fld
ljmp
test
je
int
mov
addr16
loopne
inc
xor
fdivl
aam
jp
sbb
dec
and
lret
jns
mov
mul
popf
mov
xchg
bound
xchg
test
xchg
add
js
fldenv
iret
add
aad
fistpl
adc
jb
stc
adc
and
adc
and
mov
pop
mov
sbb
js
pushf
mov
mov
push
add
mov
pop
adc
enter
push
fcomip
dec
pushf
push
out
ret
out
jb
xchg
sbb
int
lret
ret
or
sub
sbb
lods
cltd
int
adc
addb
sahf
push
pop
pusha
dec
dec
jle
cmpsl
push
lea
sub
push
dec
xchg
sti
fsts
mov
test
mov
cmc
xchg
out
cmp
movsl
lret
xor
jp
jl
daa
jb
sub
in
sbb
xchg
lds
and
add
out
cs
pushf
sub
push
xchg
enter
arpl
jge
popa
aam
lcall
je
daa
jp
push
push
push
sbb
daa
pop
mov
jl
imul
sub
out
jbe
mov
seto
repz
shl
xor
jns
dec
dec
pop
add
sub
hlt
sub
add
adc
xchg
mov
or
xchg
inc
ficoms
movb
sub
adc
fnstsw
inc
cwtl
mov
inc
inc
jne
cmp
roll
lret
push
jge
mov
int
pop
fnsave
mov
dec
xchg
jno
pop
test
test
fmull
dec
cli
sbb
pusha
orl
jbe
push
aad
mov
call
mov
push
scas
loop
jl
xchg
or
les
xor
pop
fdivl
call
jo
cwtl
pop
out
es
test
in
inc
fldenv
pop
jae
jl
dec
mov
es
std
cld
push
mov
sbb
push
mov
mov
push
mov
sahf
pop
pop
mov
lock
lds
mov
xchg
jno
jae
data16
arpl
arpl
pop
sub
repnz
mov
add
sub
jo
loope
mov
pop
mov
cmp
jge
inc
sub
mov
int3
adc
mov
mov
pop
mov
xor
insb
test
jno
data16
jecxz
mov
les
int3
jns
pop
outsb
gs
adc
enter
cli
cmp
pop
movsl
test
mov
popa
mov
sbb
mov
popf
sbb
aad
add
add
add
outsl
add
arpl
dec
sti
popf
rclb
cmp
lahf
dec
je
xchg
mov
addr16
cmp
dec
xor
xorl
pushf
mov
sbb
sub
cmp
dec
lea
cltd
mov
mov
cmp
push
gs
inc
mov
out
sbb
xchg
cmc
xor
mov
jno
sbb
arpl
mov
mov
dec
icebp
jle
insl
and
in
setno
fimull
add
dec
xor
out
pop
mov
aas
pop
popa
sbb
lods
pop
arpl
mov
inc
clc
loopne
fimull
inc
and
mul
jo
inc
fadds
or
inc
fsubrp
call
dec
mov
mov
jp
hlt
pushf
inc
mov
and
mov
lahf
loope
stos
or
and
ret
xor
sbb
jb
xchg
cltd
enter
icebp
hlt
or
sahf
jbe
xor
jecxz
xchg
jle
fdivl
fldenv
jg
ljmp
dec
mov
scas
cmc
adc
fdivl
and
xchg
dec
inc
xchg
and
push
test
addl
pusha
std
lock
lods
cmc
les
aam
lds
xchg
cmp
dec
loop
fldcw
gs
xchg
xlat
mov
frstor
jae
inc
loop
scas
push
jbe
sbb
rorb
or
push
mov
dec
pop
pop
dec
mov
jns
mov
push
mov
mov
xor
aas
mov
mov
repz
es
pop
inc
loop
pop
jle
xor
mov
mul
pop
or
clc
es
sub
pop
adc
sub
add
mov
adc
pop
and
pop
xchg
test
sub
jp
and
out
push
cmpsb
dec
push
sbb
add
add
aad
add
scas
jbe
mov
int3
sub
imul
jmp
mov
and
out
sahf
jmp
or
mov
dec
mov
arpl
das
iret
mulb
xchg
cltd
adc
push
cmp
push
fwait
or
add
add
ss
sub
fsts
ret
and
adc
lcall
cmp
aaa
jb
in
data16
push
cmp
add
and
or
enter
cmc
shlb
lahf
sbb
sti
scas
push
cmp
std
repz
and
movsl
inc
jae
in
divl
pop
aaa
adc
and
add
cli
shll
fcmovnu
sbb
or
pop
cmp
icebp
lds
xlat
xchg
push
aam
push
mov
int3
fst
push
test
sub
popa
adc
shl
sbb
mov
sti
pop
aam
mov
icebp
cmp
std
out
shlb
insb
loope
pop
or
pop
push
jmp
pushf
imul
mov
in
out
sub
aas
ret
cmp
arpl
xor
jne
mov
out
loope
push
mov
and
pop
ror
aad
sub
mov
add
es
add
cmpsb
cmpsl
xor
xchg
imul
and
adc
xchg
repnz
cli
bound
inc
sbb
inc
jb
fabs
dec
stos
fwait
shll
shr
mov
stc
lea
repz
mov
adc
cmpsl
push
adc
mov
arpl
repnz
jmp
pushf
dec
stos
mov
jmp
jmp
cltd
cli
imul
iret
dec
xchg
pushf
pop
push
or
push
push
or
mov
pusha
adc
stc
test
pop
imul
int
jg
lahf
daa
pop
and
xchg
fldcw
sahf
pop
jecxz
push
daa
stos
clc
pop
xchg
mov
or
lods
push
ret
xlat
dec
scas
mov
add
xchg
stc
arpl
data16
adc
jge
subl
int
sub
pusha
or
cmp
dec
xlat
add
movsl
fisubrl
or
sarb
orb
sbbb
call
jne
stos
std
lods
popf
jbe
les
adc
fidivrs
jecxz
loopne
icebp
push
adc
das
and
jne
lahf
cmp
fists
inc
mov
xor
push
mov
sub
fnstenv
ffreep
jecxz
xchg
out
and
inc
jecxz
repnz
jg
daa
outsb
popa
add
xor
cmpb
cmp
sbb
pop
push
sub
outsl
push
ja
dec
enter
daa
xchg
aad
lcall
inc
jp
xlat
pusha
int3
add
fcmovu
loop
test
add
push
push
repnz
cmp
aam
std
js,pt
leave
sbbl
leave
dec
inc
mov
sub
and
add
jb
push
popa
out
ja
ror
adc
xchg
push
push
adcb
rclb
cmp
xor
adc
xor
pushl
test
mov
sbb
jmp
jge
jae
pop
adc
and
cmc
xor
and
inc
xor
sahf
dec
stos
cmpsl
pop
pop
mov
pop
call
outsb
pop
cmpsb
and
sahf
adc
ret
xlat
rclb
test
dec
mov
add
and
into
jg
jb
mov
decb
mov
inc
cmpsl
adc
jl
enter
sar
lock
xor
adc
cli
xchg
ja
inc
mov
inc
mov
insb
hlt
jp
out
cmc
pop
push
mov
loope
popf
add
ja
jno
sti
outsb
push
ja
mov
push
adc
scas
xor
xchg
lcall
xor
cmpsl
push
cmp
push
push
andb
xor
les
mov
test
xor
pop
sar
xlat
sbbl
std
mov
movsl
sbb
inc
inc
sub
xchg
loopne
cmp
inc
insl
fiadds
out
xchg
in
stos
cmp
in
cmp
push
mov
jnp
xlat
xor
les
vpaddq
push
pop
insb
lahf
pushf
int
in
sbb
and
adc
sbb
ds
lea
mov
pop
jge
add
loop
insl
and
push
jge
xchg
mov
aam
insb
outsb
dec
sbb
insl
cli
add
lahf
jb
scas
pop
fidivrl
mov
pop
lcall
into
aad
cmp
call
mov
sub
xchg
lret
in
lcall
bound
arpl
insb
stc
or
cmc
jmp
pop
fs
lds
outsb
rcrb
inc
lcall
xchg
and
push
ja
push
sub
sbbb
jle
cmp
pop
imul
mov
lods
add
xor
jle
pop
adc
fstl
jb
sub
push
and
data16
lock
and
adc
push
and
outsb
push
mov
pop
xor
scas
mov
jge
imul
dec
insb
and
popf
pop
push
lahf
fsubrs
mov
push
fdivl
loop
cmp
mov
or
and
xchg
mov
mov
push
jno
fwait
sub
mov
push
sbb
mov
stos
incb
xor
gs
iret
insb
shl
std
jns
and
push
and
sub
into
or
imul
sbb
movq
and
fmulp
xchg
cmpl
add
shrl
or
movsb
bound
push
ljmp
sbb
mov
movq
inc
aam
lods
add
lret
mov
lods
jo
rcrb
mov
mov
stos
ss
ds
out
pop
xor
outsl
or
in
push
adc
inc
adc
add
insl
push
bound
cmpsl
adc
fldl
mov
into
popf
push
imul
mov
lret
push
inc
push
insb
and
adc
minps
xchg
mov
shrb
jne
inc
push
movsb
mov
je
or
sarl
or
mov
imul
out
and
dec
enter
xchg
lret
into
mov
push
iret
les
rorb
sub
mov
lret
jg
aam
imul
xor
shl
push
dec
push
jl
dec
stc
ficompl
mov
mov
pop
jb
je
mov
pop
xchg
xchg
aam
in
lret
pop
cmpsb
rorb
pushf
sahf
xchg
and
inc
dec
jo
xchg
lds
jo
sbb
sarb
cmp
pop
cmpsl
cmpsl
popf
jno
add
lds
cmp
add
lds
pusha
jg
pop
and
icebp
pop
fsts
or
test
ds
data16
xor
pop
push
sbb
inc
push
rorb
adc
insl
rorb
adc
andb
cmp
cmpsl
pop
mov
xor
test
jp
inc
xor
mov
fildll
mov
stos
push
or
stos
push
xchg
out
sar
mov
fistps
out
inc
in
in
add
ds
rorl
xlat
fsub
mov
and
test
sub
iret
adc
fcomps
pop
int
popf
push
leave
or
cmc
jno
imul
sarb
mov
negl
xchg
mov
xchg
jge
push
inc
aad
xlat
imul
xchg
es
dec
enter
xchg
and
int
pop
pop
mov
cwtl
out
fildl
mov
mov
repnz
pop
xlat
clc
and
mov
into
shlb
enter
mov
mov
inc
lea
cli
push
mov
aad
out
std
ljmp
push
mov
xor
test
push
inc
sub
jp
mov
shrl
and
xor
insl
xor
sti
add
fwait
cmpsl
aam
std
dec
or
dec
sub
outsl
fsubrs
and
mov
or
inc
lea
and
psadbw
out
shlb
cmp
jmp
ja
mov
or
sbb
mov
add
dec
mov
dec
jp
pushf
and
jbe
scas
dec
movsb
stc
ja
clc
add
addr16
or
repz
andl
lods
lock
cmp
gs
ja
push
aad
daa
push
or
cmpsl
roll
repnz
add
push
shlb
jne
loop
or
addr16
mov
imul
cwtl
xchg
cmp
orl
mov
dec
sbb
jno
ljmp
fwait
jb
add
nop
aad
test
ja
cmc
add
ds
movsb
jns
stc
fmulp
adc
je
loop
and
xchg
nop
jmp
jo
test
clc
ret
int
xor
jmp
mov
or
das
or
jecxz
cmp
lcall
pop
sub
mov
pop
inc
xchg
in
pop
mov
add
lahf
stos
or
ljmp
fsubl
fidivrl
inc
shll
leave
lahf
mov
inc
ret
jns
pop
pop
mov
lds
lret
sub
addb
cld
add
stos
icebp
ret
and
mov
pop
fistpll
stc
dec
clc
scas
stos
mov
mov
cltd
jmp
xchg
insl
and
fsts
xor
pop
mov
imul
fdivl
inc
and
popaw
pop
ja
jae
loopne
mov
lahf
pop
mov
and
add
push
jbe
fcompl
ret
in
push
test
add
sahf
xor
add
xor
jge
ja
jge
jb
dec
scas
pop
call
or
dec
mov
adc
push
in
inc
es
rcrb
jne
mov
popa
pop
loopne
mov
out
push
mov
pop
push
mov
sbb
pop
lods
popa
rcrl
dec
inc
push
mov
mov
leave
cmp
xchg
mov
cmpsb
jl
aaa
repz
push
sub
movsl
ret
loopne
insl
or
push
stos
loop
push
test
cmp
inc
cmc
rcrl
jb
outsl
push
ret
mov
push
xor
in
pusha
inc
imul
rol
addr16
sub
push
mov
bswap
adc
jae
xchg
and
push
into
mov
fstl
mov
and
scas
iret
repz
fcoml
push
jge
in
cmpsl
enter
dec
mov
sbb
push
mov
ljmp
pop
sbb
pop
pushf
inc
push
xor
cmp
rclb
pop
out
mov
sbb
push
pushf
outsb
pusha
dec
lahf
adc
cld
pushw
sbb
rol
cs
testl
leave
dec
jle
sti
sbb
jg
inc
inc
inc
inc
ret
in
and
rolb
push
sbb
pop
add
shlb
fnsave
test
in
cmpsl
loope
call
shlb
lods
xlat
dec
sbb
nop
or
outsl
adc
rol
jg
mov
cwtl
rolb
shrb
mov
rcll
stos
add
sbb
and
xor
pop
mov
cmp
cmp
xchg
ljmp
lods
ja
std
or
cmp
out
imul
mov
and
lret
bound
xchg
sahf
in
mov
arpl
inc
adc
andl
lcall
or
xor
and
and
jb
inc
mov
lods
push
cld
movsb
in
sub
push
add
or
or
je
addl
cmp
xchg
rorb
jno
jl
and
xchg
pop
data16
mov
pop
test
aas
lcall
xchg
mov
jno
jns
xchg
lahf
sub
sub
imul
jbe
jmp
cmp
dec
adc
mov
jns
ret
or
push
lods
adc
shrb
mov
jnp
xor
sbb
jl
or
mov
ret
imul
jb
push
fs
mov
out
es
or
sub
in
out
add
xchg
mov
push
pop
ret
sti
imul
ret
push
negl
test
cmp
cmpl
cltd
dec
or
adc
js
std
sbb
mov
pop
pop
mov
in
pop
xchg
insl
nop
cld
mov
and
sahf
ret
int
out
add
jecxz
test
mov
decl
lcall
out
or
testl
mov
pop
fstpl
mov
incl
in
pushf
into
sbb
sub
aad
adc
cld
clc
mov
mov
lock
clc
lcall
jle
mov
popa
dec
push
mov
pop
loopne
cmpsb
pusha
dec
inc
mov
cmp
icebp
stos
jg
xchg
jge
cltd
cmp
adc
out
xchg
mov
loope
mov
sbb
mov
cld
lcall
xchg
pop
loopne
or
mov
cmpsb
andl
in
mov
xor
pushf
push
ljmp
es
xchg
mov
inc
cs
leave
jecxz
xor
out
add
pop
mov
mov
push
dec
jo
ljmp
je
cmp
dec
fisttpl
sbb
cmc
imul
call
adc
arpl
fstpl
jb
mov
ror
jmp
pop
inc
push
movsl
movsl
adc
rorl
lds
add
push
testl
ds
sbb
les
pop
popf
in
sbb
mov
dec
gs
faddp
fwait
xor
int
mov
xchg
mov
inc
mov
mov
sub
xchg
pop
adc
mov
cmp
stos
cmp
pop
movsl
inc
scas
rclb
cmc
cmpsl
mov
cmp
and
std
imul
ret
outsb
mov
and
inc
add
es
jne
pop
adc
cltd
push
ljmp
mov
addr16
and
jecxz
rcr
jnp
and
add
pusha
call
add
sbb
adc
pop
add
pop
add
and
jge
icebp
pusha
mov
call
push
mov
jb
out
nop
push
repz
sub
outsl
insb
dec
mov
add
and
outsb
dec
ret
loop
movsb
enter
cmp
pop
pop
sahf
mov
jo
pusha
pop
sbb
mov
push
inc
xlat
clc
scas
mov
pop
or
arpl
jo
mov
pop
jecxz
push
test
cmpsl
lds
pop
pop
add
int3
jbe
cltd
rcrl
mov
push
push
ret
lret
shlb
mov
pusha
mov
shrl
or
mov
xchg
adc
mov
dec
bound
jne
add
enter
test
mov
rcl
les
lods
mov
pusha
cmp
mov
xor
mov
mov
xor
leave
mov
jae
adc
mov
push
lock
or
addb
inc
scas
test
mov
cld
fdivs
fwait
jnp
fidivl
mov
or
mov
cwtl
mov
cwtl
inc
sub
pushf
adc
cmp
pop
and
or
clc
dec
outsl
sub
mov
je
xlat
inc
pop
sub
cli
and
inc
and
xchg
out
inc
jl
pushf
cmp
sub
repnz
imul
jl
int3
lea
jnp
pop
mov
dec
sbb
sbbl
iret
daa
mov
push
inc
push
mov
mov
aad
into
out
mov
cltd
jmp
push
xlat
filds
xor
inc
mov
push
pusha
ds
cwtl
stos
mov
mov
mov
cmp
add
inc
in
call
repz
pop
jmp
aam
xchg
cmp
adc
mov
cmp
lds
jbe
xchg
cld
xor
inc
adc
xchg
push
xor
inc
inc
in
fwait
inc
popf
repz
aaa
xchg
push
dec
pop
mov
xchg
xor
pop
leave
adc
cs
jbe
mov
cwtl
or
or
loop
aaa
aad
lcall
add
push
cli
jb
imul
je
insb
arpl
div
mov
mov
jno
pop
arpl
mov
out
movsb
fwait
pop
lds
mov
mov
jge
in
or
and
inc
gs
and
ret
icebp
sbb
mov
out
pop
mov
or
loope
cmp
ja
or
dec
jecxz
pop
ljmp
lahf
rol
xor
mov
jbe
push
cli
data16
adc
push
push
dec
jno
or
xor
cmpsb
jl
push
xchg
pop
adc
cmp
mov
mov
test
jge
or
xor
iret
inc
daa
ss
mov
cltd
cli
shll
cmp
aam
push
das
rcl
mov
mov
outsb
ljmp
sbb
fldt
aam
imul
dec
jb
mov
loop
jbe
loopne
aam
pop
clc
push
pop
std
and
les
adc
adc
cmp
fcmovu
adc
xchg
stos
push
cmp
push
mov
or
es
mov
stc
fistl
dec
xchg
mov
aad
xchg
shlb
mull
iret
cltd
mov
xchg
push
in
and
jecxz
movups
ret
xchg
cs
adc
push
sbb
lds
jmp
or
sbb
sti
jns
fcompl
dec
mov
xchg
ja
pop
push
mov
mov
xchg
mov
add
imul
roll
fildl
mov
das
das
jo
enter
scas
scas
add
sbb
mov
into
aad
add
fistpl
andb
xchg
lahf
imul
mov
add
inc
loop
fdivs
in
cmp
in
les
xor
cmp
pop
cld
mov
lahf
push
pop
push
faddl
xchg
push
xchg
stc
ret
sub
lock
nop
xchg
sbb
cli
dec
adc
push
fnstenv
xchg
or
jmp
mov
xchg
icebp
sbb
leave
mov
or
js
sbb
jle
jg
shrl
xchg
and
imul
push
mov
xor
jl
lcall
add
or
sbb
loop
stc
dec
mov
push
cli
andb
adc
mov
imul
dec
js
outsl
pusha
xchg
cmpsb
mov
push
sbb
clc
adcl
xchg
jno
icebp
ljmp
aaa
test
int3
int
ret
cmc
popa
xchg
stos
add
jno
cmpsb
enter
jge
out
fcoms
es
add
push
subb
adc
and
punpckhwd
outsl
xchg
bound
cli
repnz
mov
jge
mov
sbb
mov
outsl
xor
jl
and
jo
inc
sbb
pop
test
push
outsb
jne
dec
pop
jb
sub
stos
daa
les
xchg
aad
cld
sahf
push
jle
dec
and
xchg
ja
mov
xchg
add
push
pop
test
neg
push
fmulp
sahf
mov
and
ss
mov
mov
push
push
out
scas
push
mov
adc
cmp
mov
cmc
or
lock
lea
fadds
push
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
and
xchg
jnp
add
add
bound
mov
fmulp
test
mov
int3
sbb
xchg
push
dec
pusha
pop
jp
inc
sahf
dec
jae
and
jg
pop
mov
pop
outsb
inc
sub
dec
inc
cmp
cmp
lea
pusha
pop
cmpb
nop
push
leave
ret
fxch
mov
mov
sbb
mov
mov
in
fistl
dec
es
inc
enter
pop
xor
lods
or
leave
pop
cmc
pop
xchg
sbb
shlb
stc
lods
test
xchg
mov
lds
jns
daa
mov
or
pushf
daa
daa
push
mov
sbb
xor
xchg
addl
std
xor
sbb
mov
lret
fsubl
cmp
cmp
sti
and
xor
jb
popf
sub
data16
loop
inc
or
gs
into
xchg
ds
imull
mov
sub
inc
push
cld
and
inc
cmp
inc
aam
adc
xor
mov
mov
push
push
lcall
fs
cmc
jb
and
mov
insb
insl
ret
lods
mov
cmp
cmp
cmpsl
ds
or
ja
mov
add
lds
sbb
add
lahf
mov
leave
mov
rcr
push
or
std
xchg
out
in
popa
lods
fnstcw
jb
pop
dec
jecxz
pop
loope
cli
mov
lock
movsl
jo
stc
xor
fisubl
aaa
xor
shll
mov
xchg
fdivs
sbb
dec
inc
fwait
dec
inc
fnstenv
pop
rcrb
jp
jmp
xor
sarl
xchg
rcll
aas
lock
ret
sub
xchg
cmpsl
add
imul
rorb
loope
imul
pushf
scas
sub
lods
lods
jae
mov
inc
loopne
ja
xor
ja
aam
dec
jnp
jg
scas
out
or
cli
mov
imul
test
push
or
mov
xchg
cmp
in
push
sbb
mov
cltd
push
jo
mov
scas
push
inc
popa
xchg
addr16
mov
xchg
jbe
cmovne
push
pop
movsl
xchg
outsb
xor
enter
lds
test
adc
pushf
lods
sti
xchg
add
xor
call
arpl
lret
inc
movsb
and
adc
addr16
push
xchg
rorb
push
lahf
orb
int3
bound
rcrb
inc
roll
pusha
out
aaa
into
hlt
cwtl
test
xor
mov
inc
pop
mov
lds
sub
add
fmuls
gs
mov
cs
jge
ljmp
jnp
sti
sbb
popa
sti
fwait
psubusb
dec
sbb
or
lahf
call
fsubs
sub
and
in
loop
mov
lcall
les
jge
iret
jae
in
pop
test
push
xlat
or
jno
mov
sbbb
or
fs
sbbb
sbb
pop
inc
mov
ds
mov
js
and
std
sbb
pop
dec
test
ljmp
dec
pop
and
lock
push
mov
inc
cwtl
jge
dec
inc
mov
xchg
dec
xchg
shrl
ficoms
jo
push
mov
les
cli
sub
lods
mov
cmpsb
mov
add
add
test
push
leave
adc
xor
mov
aam
xchg
pop
lret
movsl
push
mov
dec
inc
sub
push
push
test
pop
pop
aam
pop
popa
add
inc
into
aam
adc
push
fxch
das
push
pop
popf
cld
cmp
bound
add
loope
in
jno
cmp
cltd
cli
decl
push
outsb
fimuls
mov
sub
es
sbb
push
push
stos
les
mov
xchg
xor
add
inc
mov
inc
mulb
pop
mov
popa
mov
dec
lods
jg
and
cmp
fwait
ret
mov
add
xchg
dec
cmp
ja
lret
lahf
push
stc
lods
stos
cmpsb
movsl
xlat
lret
push
test
ss
testl
icebp
jne
mov
fwait
xor
and
movsl
ror
mov
into
out
icebp
in
xchg
scas
into
mov
push
outsl
int
addl
push
add
pop
cmp
imul
addr16
mov
rcll
ljmp
dec
mov
iret
pop
mov
fistl
popl
push
testb
into
fs
xchg
pop
jmp
loopne
leave
outsb
rol
call
js
jno
mov
xor
outsl
ds
or
inc
das
imul
or
sbb
sbb
orl
pop
mov
pop
test
cmp
or
std
inc
into
pop
sub
or
aam
lock
fstps
aam
sbb
lahf
cltd
and
jge
add
jp
push
mulb
inc
pushf
imull
nop
jecxz
mov
mul
lret
rorb
mov
addl
ds
outsb
mov
das
and
cmp
test
rol
lret
rorl
mov
xchg
stc
xchg
aam
arpl
mov
ljmp
lcall
ss
fwait
outsl
cmp
clc
mov
cmc
lock
inc
jmp
in
fwait
jno
lahf
test
out
popl
mov
xor
xor
jno
in
imul
mov
mov
and
push
cld
call
pop
xchg
sub
push
out
cli
and
adc
xchg
dec
sub
cmp
mov
lock
mov
nopl
sarb
imul
sbb
lds
push
sbb
sbb
loope
int
add
mov
inc
push
jns
std
xor
hlt
mov
jb
sbb
mov
xchg
xor
pop
jg
mov
out
adc
cmp
and
xchg
xchg
frstor
mov
addr16
loop
ljmp
mov
mov
jno
into
jne
dec
lods
or
sbb
clc
inc
cltd
xchg
push
mov
sti
out
ds
hlt
or
xchg
es
mov
xchg
mov
adc
fcmovnb
jge
sub
and
mov
xchg
mov
rep
stos
jmp
test
adc
pusha
adc
cwtl
xchg
subl
push
call
loope
jno
faddl
mov
test
rcll
dec
inc
ja
rorb
push
push
stc
stos
mov
xor
cmpsb
mov
mov
push
fbstp
in
movsb
clc
dec
cmp
das
arpl
jb
or
inc
repz
dec
out
mov
mov
cld
xor
sub
sub
or
jb
lret
xchg
xchg
sbb
and
or
adc
ret
pop
mov
das
mov
pop
mov
xchg
inc
push
jo
outsl
xchg
out
add
test
std
xchg
add
shll
adc
adcb
mov
sti
sub
sub
xor
aad
imul
aas
out
orl
das
xchg
push
sbb
xchg
mov
jge
cwtl
aaa
outsb
sub
loop
pusha
adc
sbb
xchg
xor
lock
addb
leave
mov
or
and
out
or
sbb
lcall
scas
add
push
mov
sbb
inc
mov
xor
mov
push
in
fists
nop
fcoms
cmp
ss
xor
mov
je
pop
adc
testb
cmp
inc
dec
js
dec
icebp
jg
cmp
cmp
pop
shlb
inc
jbe
fcmovbe
pop
clc
inc
movsb
es
mov
add
aam
sbb
xor
pop
rcr
or
xchg
mov
insl
add
push
ja
push
insb
dec
dec
test
mov
movsb
push
shr
ret
cmp
lret
repz
inc
daa
pop
and
shl
test
dec
fsubs
add
or
aaa
cmp
cltd
xlat
je
sbb
mov
or
rorb
jb
xchg
daa
sbb
jo
push
cltd
or
in
ret
pop
bound
jo
stos
mov
popa
testb
testl
add
jne
lock
add
js
pusha
stos
xchg
shlb
jb
cmp
hlt
gs
jno
pushf
out
pop
mov
aam
lds
lcall
test
jae
in
in
add
sbb
mov
ss
sub
cmc
push
pop
movsl
add
in
addr16
pop
xchg
mov
mov
jge
push
inc
scas
aaa
js,pt
aam
jmp
sbb
hlt
out
dec
jp
push
and
sbb
gs
cmpsl
cmpsl
mov
gs
mov
out
dec
jns
xchg
scas
cmc
ds
pop
pop
xor
sti
adc
push
xlat
mov
in
loopnew
fldl
jae
and
push
cmp
sub
xchg
adc
add
test
xlat
push
loopne
mov
mov
shrl
adc
test
mov
pop
mov
add
fstps
test
loop
fistpl
sti
aad
adc
notl
push
dec
sub
xor
arpl
mov
lret
lods
ret
cs
push
fildl
pop
popa
add
jle
das
sbb
mov
imul
lret
mov
adc
xchg
cwtl
shl
sbbl
push
mov
mov
lock
hlt
cmp
fs
xchg
mov
add
cmpsb
mov
mov
punpckhwd
sub
sub
in
cmpsb
jb
xlat
fwait
cli
popf
sbb
in
lods
mov
jl
ljmp
mov
pop
xchg
pop
inc
ffreep
or
pop
pop
imul
ss
das
sub
mov
or
jle
mov
push
dec
inc
adc
cli
inc
mov
sbb
and
xchg
inc
dec
mov
in
fwait
ds
add
xor
adc
mov
and
je
mov
subb
jge
rorl
ljmp
xlat
enter
shl
push
pusha
lahf
inc
fcom
pop
cmp
cs
shrb
pop
iret
das
lea
ret
dec
int
test
pusha
aaa
xchg
or
pop
imul
mov
repnz
inc
in
lret
das
in
ret
lods
popf
sub
pop
inc
add
lods
popf
push
pusha
lret
rorb
xor
hlt
icebp
bound
scas
imul
call
push
rorb
sbb
hlt
sbb
and
mov
mov
dec
call
pusha
pusha
movnti
enter
mov
push
out
sub
or
bound
pop
sub
call
leave
or
js
out
mov
outsb
rorb
gs
in
sahf
cmp
cwtl
jl
pop
cwtl
repz
cli
icebp
out
mov
movsb
int3
push
dec
nop
xor
js
repz
loop
push
ljmp
add
in
addr16
int3
cmp
popf
mov
xchg
shl
pop
inc
rcr
ljmp
jp
dec
xchg
push
icebp
in
push
test
sbb
pop
clc
in
xchg
or
lcall
xchg
mov
or
gs
cltd
cld
adc
out
push
xchg
xchg
movl
inc
fidivrs
xchg
out
mov
sbb
stc
outsb
jb
out
sub
popa
rcrl
mov
cmp
icebp
arpl
rolb
pop
adc
ljmp
cli
pop
cmp
pusha
movsl
cmpsb
pop
mov
sub
push
xor
idivl
jns
push
or
mov
dec
push
arpl
lock
fisubl
stos
dec
scas
sbbb
jae
mov
loope
push
xchg
stos
adc
mov
nop
mov
sbb
jnp
call
mov
out
push
and
rol
inc
xchg
adc
jo
mov
lcall
and
je
inc
mov
fsubs
pop
fdivrl
jecxz
std
mov
cmp
leave
stos
imul
push
inc
push
insb
sbb
pop
div
in
dec
mov
outsb
sub
loope
ret
and
cld
mov
popf
sub
rcr
mov
cwtl
test
call
incb
lods
push
dec
mov
xor
jb
out
push
loopne
adc
loope
hlt
xchg
fwait
xchg
xchg
in
jno
orb
jo
lods
shll
xor
xor
cmp
daa
sub
inc
adc
mov
xor
xor
fcomps
xchg
ljmp
push
shlb
leave
call
loope
pushf
push
adcl
pop
sti
push
pop
decb
scas
mov
lods
fisttpl
arpl
pop
in
and
mov
xor
es
imull
mov
push
scas
xchg
cwtl
and
lods
adc
xchg
or
sub
fsubl
mov
shlb
pop
out
push
in
imul
pop
push
and
push
sahf
cmpsb
cwtl
xor
loopne,pt
and
loop
out
addr16
xchg
into
push
mov
cmp
aaa
rolb
xor
call
or
mov
dec
shll
sub
repz
mov
inc
subl
mov
xchg
jmp
lret
stc
mov
sub
inc
pop
stc
lock
inc
dec
jecxz
sbb
aam
ret
ss
jo
mov
sarl
mov
into
sti
xor
dec
jl
pushf
dec
loopne
jmp
cmp
mov
xchg
ja
push
adc
scas
dec
fisubrs
and
cli
mov
lret
pop
push
rorb
pop
bound
jecxz
push
mov
jne
xchg
pop
call
pop
xorb
into
pop
mov
dec
insl
fidivrs
pop
sbb
add
sbb
insl
xchg
sar
adc
lods
js
aaa
ss
mov
push
ljmp
mov
mov
mov
ja
cltd
jnp
mov
and
int
jp
lea
and
dec
mov
pop
inc
addr16
jbe
dec
sbb
pop
cltd
cmp
mov
js
sub
add
leave
aad
mov
push
movsl
pop
enter
test
repz
clc
stos
and
push
in
xchg
je
sub
aas
sahf
scas
inc
lsl
ljmp
add
call
mov
sbb
adc
sub
inc
jns
les
push
pop
inc
negl
pop
loop
xor
mov
and
sub
imul
mov
dec
ret
icebp
lret
add
jmp
fistpl
pushf
in
ljmp
test
lret
pop
cmpsl
mov
int
pop
cmpsb
and
movl
sub
cmp
test
jp
adc
sbb
jle
scas
movb
idivl
stos
pop
pop
push
xor
lds
jnp
xchg
movsl
ss
pop
rcrl
jnp
mov
dec
mov
jge
xchg
push
xor
mov
mov
arpl
repnz
nop
movsl
or
sbb
je
les
cmc
pusha
fmuls
inc
shll
into
xlat
pop
iret
xor
pop
inc
sub
dec
xchg
js
jae
in
mov
dec
cmc
repz
xor
adc
or
mov
add
into
jecxz
or
xor
sbb
push
push
jl
out
lds
sbb
int
dec
jnp
fsts
bswap
orb
rcrb
fsubl
pusha
test
sub
lock
fwait
jge
aam
fdivrs
mov
sarb
cld
jp
push
mov
mov
pop
xchg
jle
mov
movsb
push
inc
sbb
adc
push
scas
std
iret
pop
pop
push
pop
adc
into
mov
push
mov
stos
adc
add
movsl
cmpsl
xlat
rorl
lret
cmp
loopne
jg
xor
cmp
dec
pop
int3
cmp
pop
test
pop
lods
mov
or
out
adc
push
adc
inc
fst
dec
mov
or
pop
cmpsl
mov
inc
push
sub
sbb
adc
mov
test
pop
mov
jns
ja
leave
pop
insl
dec
fs
pop
sahf
mov
mov
xchg
ljmp
notb
push
cmp
sub
push
sub
sub
fisttpl
out
cli
sbb
ss
cmovp
out
in
ror
sub
add
imulb
or
shll
mov
int3
scas
mov
mov
fnstsw
or
mov
nop
xchg
sbbl
lret
sub
adc
imul
arpl
in
pop
fstps
sbbb
stc
aas
jae
push
js
pop
les
stc
dec
xchg
imul
mov
repnz
cmp
mov
mov
pop
enter
test
test
stos
pop
adc
addb
negl
in
movsl
cmc
aaa
inc
into
pop
lret
pop
imul
rol
jne
dec
or
or
add
jne
dec
lahf
cmp
in
nop
push
sub
adc
outsl
ret
pop
dec
lcall
pusha
mov
test
sbb
repnz
xchg
scas
in
pop
and
ret
loopne
loop
lret
or
pop
lods
pop
jae
popf
movsl
out
mov
enter
das
push
and
mov
shr
xchg
ss
or
xchg
xor
cmpsl
fld
jb
jg
mov
xchg
seta
das
mov
jge
dec
pop
mov
and
test
icebp
adc
xchg
jecxz
fmul
prefetch
or
and
xchg
inc
cmp
bound
pop
subb
pop
cltd
or
ret
pusha
push
or
or
xchg
lahf
sbb
jl
push
push
cwtl
pop
insb
or
movb
dec
jne
jno
mov
pop
or
dec
ds
cmp
fwait
stos
test
cs
push
fildl
mov
or
repz
jae
scas
insb
dec
cwtl
adc
outsl
xchg
icebp
or
int3
daa
ja
mov
xchg
adcl
and
inc
inc
inc
pop
test
jg
loop
adc
arpl
daa
lds
xor
and
adc
addl
cmp
aas
push
jnp
es
inc
test
cwtl
xor
je
cmc
fdivrs
sub
cs
mov
add
in
loope
xor
push
aas
lds
out
push
outsl
aaa
pop
rcrl
sub
push
or
stos
xchg
sub
rcll
mov
mov
push
clc
ss
cli
data16
adc
mov
mov
daa
dec
hlt
adc
fisttpll
mov
xlat
clc
aad
mov
mov
adc
add
mov
sbb
or
mov
jno
sti
ljmp
sub
sbb
ds
pop
aam
addr16
cs
shlb
int3
mov
jmp
cltd
in
inc
xor
test
rclb
push
mov
push
jg
cmpsl
dec
inc
adc
or
icebp
jl
dec
mov
push
scas
pusha
add
stos
pop
push
pop
push
bound
lods
sbb
mov
orl
insb
dec
movsb
sub
fcoms
in
mov
lret
gs
dec
jp
stos
mov
addr16
rcrb
jo
in
adcl
lock
repnz
and
mov
adc
ret
mov
xor
arpl
cmp
mov
out
adcb
mov
imul
adc
mov
frstor
std
dec
sub
mull
lret
aad
nop
fcmovne
sbb
shrl
or
and
mov
jle
loop
jge
adc
sti
aas
call
pushf
adc
test
xor
push
fcmovbe
mov
lret
mov
or
adc
repnz
ja
cmp
xchg
lcall
mov
or
jno
push
test
mov
lea
pusha
xchg
icebp
fsts
cmpsl
ja
sub
popf
fwait
gs
js
xchg
in
outsb
push
repnz
cmpsb
in
sub
inc
pop
out
stos
ffree
dec
jae
ds
into
cltd
lock
add
popa
popa
cmp
add
fs
inc
mov
in
out
xor
mov
popf
mov
out
dec
fbstp
fldt
data16
add
mov
push
daa
int
ja
mov
mov
cltd
stos
xchg
sub
push
sarl
jmp
xor
mov
xor
das
mov
stos
int3
xchg
mov
xchg
cld
xor
ss
loope
add
pop
pop
or
mov
pushf
inc
je
adc
clc
scas
adc
pop
cltd
popa
and
cmp
decb
int3
xchg
adc
jl
inc
and
ja
sub
cld
dec
xor
out
je
sti
sbb
mov
mov
adc
push
icebp
jge
fldt
fucomip
mov
icebp
lret
shr
add
and
call
cli
inc
or
sub
fsts
clc
inc
loop
jnp
in
pusha
insl
pushf
cmp
fsts
adc
sub
gs
outsl
push
fnstsw
push
in
sti
loop
adc
pop
das
xlat
pop
data16
and
cmp
mov
cli
sbb
incb
and
jo
cmp
jle
adc
xchg
push
mov
add
pop
xchg
mov
push
mov
lret
adc
nop
sub
dec
add
sahf
lds
sbb
repnz
stc
je
xchg
loopne
test
xor
adc
test
jmp
xor
sub
je
fwait
out
sti
push
stc
sti
add
pop
in
pop
adc
or
call
sti
mov
jecxz
add
dec
mov
cmp
test
maxps
shrl
cmpsl
pusha
addr16
sbb
test
mov
vpaddsb
cmp
mov
xor
aaa
xlat
test
dec
adc
adc
loope
mov
mov
scas
or
pop
jb
sbb
lea
rcl
lock
mov
fsubrs
mov
pop
clc
in
cwtl
or
ds
mov
mov
fst
cmp
xchg
testb
nop
lret
xor
dec
push
pop
iret
mov
shr
icebp
std
xchg
mov
js
inc
xchg
mov
ficoms
lcall
out
sub
xchg
test
pushf
std
enter
cmp
mov
xchg
lock
push
loop
stos
popa
pop
dec
dec
mov
pop
pop
jnp
add
cmpsb
push
sbb
in
add
lret
mov
addb
fdivrl
push
test
test
lret
daa
cmpsl
push
scas
jmp
les
pop
mov
cmc
add
lds
xchg
jge
dec
jae
push
in
sub
ficoms
jne
inc
fiaddl
arpl
sub
fidivrl
mov
jmp
les
mov
push
xchg
rcrl
xchg
sub
add
xchg
bound
jnp
xchg
rcrb
insb
sub
insl
push
mov
aas
ret
pop
push
mov
lret
mov
dec
out
cltd
andb
fstps
stos
mov
shl
adc
adc
inc
inc
daa
call
or
jbe
scas
test
fsubs
adc
in
enter
shrb
ljmp
hlt
gs
mov
aaa
cmp
push
test
xchg
or
mov
fwait
push
js
sub
and
jg
push
sbb
jae
aaa
cs
push
dec
xor
stos
sub
pop
daa
and
in
inc
inc
push
icebp
jle
movsl
jmp
lcall
ret
es
call
xchg
push
popa
out
out
test
shl
cmp
addb
fidivl
and
fstpt
lcall
jnp
add
mov
out
push
sub
mov
jns,pt
mov
adc
inc
adc
repnz
push
cmp
jmp
xchg
push
es
pop
mov
sub
imul
sbb
jbe
pop
rcll
push
sub
lods
push
pusha
jl
cli
fwait
push
leave
ds
sbb
aad
sbb
mov
cli
scas
push
push
clc
jbe
movb
fcompl
cmpsl
or
push
pop
push
mov
out
mov
sbb
mov
test
push
cli
mov
xor
xor
mov
scas
xchg
shll
or
or
jp
or
cmp
ds
push
xchg
ret
shll
fs
inc
fcompl
ljmp
repnz
or
mov
sub
mov
jae
rcrl
popa
adcb
pop
adc
cs
adc
xchg
aaa
mov
loopne
ja
or
or
in
add
inc
mov
sti
or
adcl
movsb
es
sti
fwait
pushf
xchg
sbb
jmp
int3
xor
in
and
mov
sub
adc
aaa
ret
mov
push
sub
in
xor
or
aas
jp
or
loope
in
xchg
mov
jmp
pushl
adc
pop
sahf
dec
orl
and
sti
adc
xor
sub
push
jo
add
imul
or
fldenv
jg
shl
leave
dec
fsubr
mov
push
repnz
mov
pop
push
push
mov
and
push
cmp
adc
xor
xor
dec
push
cmpsb
mov
push
and
push
mov
mov
outsb
frstor
add
std
sahf
pop
dec
push
iret
jge
repnz
std
jmp
and
cmpsb
inc
cmp
mov
lcall
add
insb
push
jae
pusha
cmpsb
outsb
clc
shld
sar
test
in
mov
test
cmc
repnz
hlt
add
push
sub
fs
xchg
cs
movsb
into
out
push
mov
sub
adc
add
push
call
sub
cmp
inc
sti
or
xor
mov
adcl
imul
loope
push
mov
int3
and
int
pop
adcb
mov
inc
dec
mov
out
shrb
jmp
into
je
test
stos
dec
inc
pop
sub
mov
ss
push
sbb
mov
lret
jbe
push
jl
lahf
out
test
mov
loopne
mov
sbbb
add
cmp
scas
int
int
add
adc
xchg
insb
jne
loop
push
fcomp
mov
or
mov
js
sub
xor
outsl
dec
inc
push
scas
test
dec
cmp
xor
and
or
sbb
cltd
dec
jmp
sbb
aas
loope
cs
cmova
ljmp
mov
push
ret
sub
enter
outsl
aad
aad
in
test
fistl
fstpl
or
mov
lret
xlat
in
jge
cmpsb
das
idiv
out
imul
lret
jp
xor
andb
ss
jo
or
push
cmp
fdivl
dec
js
daa
mov
sub
gs
xchg
mov
push
or
cmpl
push
gs
fcoms
xlat
inc
and
cmp
enter
scas
push
cmp
push
loope
in
in
xchg
lahf
mov
push
test
int3
inc
in
push
repz
mov
add
cmpsl
orl
push
pop
pop
cmp
cmp
adc
sti
xor
iret
pop
add
sbb
cmp
push
je
push
cmp
stos
aam
xchg
inc
xor
xlat
add
test
adc
push
add
and
xchg
fxtract
dec
mov
mov
js
insb
dec
adc
xchg
push
lret
bound
and
ss
js
inc
sarb
pop
ds
pop
dec
inc
sbb
fs
inc
pushf
fnstcw
imul
nop
test
mov
ljmp
flds
push
push
dec
cmp
ror
inc
mov
inc
xor
ja
dec
test
enter
pushf
sub
sbb
ficomps
sub
jns
jno
mov
jbe
mov
mov
and
sbb
mov
xor
cwtl
and
push
sahf
clc
into
int
cmp
mov
shll
sarl
sbbb
and
push
icebp
fwait
xor
es
cmp
xchg
rcrl
jl
mov
cld
out
aas
scas
mov
xchg
fcomps
pop
push
call
les
je
rcl
test
js
movsb
push
sbb
lods
sub
repz
push
movl
hlt
rol
andl
lods
add
negb
sti
jne
push
loopne
fsubrl
fadd
lahf
adc
cli
pop
pop
push
push
jns
aas
xor
addr16
aaa
mov
mov
mov
and
mov
and
dec
xlat
clc
adc
xchg
jnp
das
mov
push
sub
cmpb
sbb
aas
subl
mov
hlt
in
mov
rcrb
cltd
mov
push
pop
pop
loope
mov
lods
andb
into
test
push
adc
mov
adc
dec
into
pop
test
aaa
mov
pop
add
mov
pop
xor
pop
int
mov
mov
rcrb
mov
jecxz
lods
pop
mov
xchg
addb
stos
jo
jle
aas
push
in
add
xor
mov
std
mov
inc
cmp
inc
std
fisubrl
inc
mov
faddl
cltd
push
jno
cli
ret
ja
dec
js
mov
jge
xchg
in
cmp
sarb
pop
pushf
pop
dec
invd
pop
pushf
dec
int
jle
jecxz
or
out
adc
add
add
xchg
outsb
mov
jbe
loopne
pop
test
in
jae
stos
push
inc
cmp
cmpb
jmp
or
xchg
out
pop
mov
and
mov
fwait
imul
jl
sub
and
mov
out
insl
cmp
push
imul
gs
xchg
sbb
cmp
and
cmp
shl
aaa
ljmp
lods
adc
insl
pop
jecxz
cmp
test
add
adc
dec
ds
sahf
stos
repz
lahf
jo
and
lret
inc
xchg
cmpsl
inc
adc
jno
ud1
rcll
xor
into
jnp
xchg
enter
repnz
nop
popf
call
popf
mov
pop
ljmp
aad
stos
sub
nop
xor
fmulp
pop
pop
shl
push
inc
pop
push
jne
cmpsl
mov
xor
pop
rclb
test
and
or
stos
jae
adc
jle
mov
sbb
mov
sbbl
xor
andl
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
sbb
xchg
loope
popa
bound
bound
lret
dec
bnd
jae
loop
out
outsl
sub
stos
pop
cmp
sub
pop
jbe
repz
pushf
addr16
mov
or
mov
push
and
pop
push
xchg
pop
mov
fisttps
push
inc
jmp
and
xchg
cmp
adc
fwait
push
pop
lcall
add
sub
stc
sub
mov
mov
fs
cli
repnz
push
jg
repz
dec
pop
push
dec
fstpt
mulb
cmp
sbb
sbb
push
aam
fdivr
movsb
ss
popa
and
sbb
adc
jns
or
xor
mov
js
pop
adc
mov
pop
popa
or
imul
test
pop
fucomp
in
scas
cmc
imul
xchg
mov
inc
sarl
sbb
or
out
clc
jp,pt
mov
lcall
movsl
or
icebp
pusha
xor
stos
mov
xlat
push
adc
bound
adc
mov
lods
loope
push
push
xor
xchg
jecxz
add
xor
push
fnsave
pop
pop
lds
loopne
cmp
nop
cmpb
jl
insl
mov
dec
cld
sbbb
mov
dec
insb
xchg
push
xor
loop
inc
daa
pop
push
ret
and
mov
ret
mov
sbb
inc
mov
cmc
inc
pop
cmp
inc
sarl
sub
and
rolb
js
out
jo
nop
mov
jecxz
fnclex
jecxz
insl
mov
cmpsl
stc
push
orl
addr16
pushf
inc
cmp
mull
add
lea
add
ret
jo
mov
lock
cmp
lret
das
cmp
aas
jle
adc
ret
je
sbbl
push
movl
or
fisubrl
pop
fcompl
push
mov
loopne
bnd
xchg
addr16
orl
push
popa
loop
mov
jmp
rorb
sbb
jae
and
in
lods
lods
enter
in
xlat
dec
cmpsb
nop
mov
lock
call
xor
cld
das
inc
jne
fs
jns
jbe
push
xor
repz
xlat
lret
int
add
or
roll
lret
lods
stos
mov
pop
xor
pop
push
or
cmp
dec
mov
xchg
dec
jae
push
push
imul
in
rorl
pop
adc
inc
pop
jle
ret
orb
mov
inc
cmpsl
cmc
mov
imul
rcr
add
sub
mov
pop
loope
cltd
mov
mov
inc
orb
sbb
insb
sbb
daa
cmp
cli
sub
popf
daa
sarb
leave
pop
in
add
enter
jle
int
movsb
test
sar
testl
lahf
into
jmp
jmp
icebp
add
sub
fiaddl
roll
scas
fistpl
jmp
pop
mov
into
dec
mov
xchg
add
and
jb
xor
sbb
push
jo
xchg
add
xchg
inc
cmp
lods
int
repnz
push
int
mov
in
inc
test
addr16
or
or
out
adc
inc
nop
and
xor
xor
cmpsl
or
data16
gs
xor
push
inc
imul
hlt
mov
sarl
icebp
lret
adcl
wrmsr
lret
and
adc
jne
lea
cmp
inc
mov
out
lret
jnp
dec
sub
pusha
iret
jl
sbbb
pop
ret
fdivl
cmp
aad
inc
dec
sbb
dec
lret
push
push
xor
push
dec
and
mov
addb
mov
aas
xchg
xor
popf
sbb
or
aad
pop
sti
cmpb
dec
js
mov
imul
mov
jo
mov
fiaddl
jge
jl
mov
popf
mov
fsubr
and
sub
pop
repz
sahf
mov
sahf
push
loopne
inc
pop
mov
pop
adc
jg
aas
cmp
jge
and
subl
aad
pop
push
xchg
adc
cmpsb
sub
test
or
mov
out
xchg
cltd
xchg
imul
push
addr16
lea
ds
pop
push
or
lea
sbb
add
xchg
inc
cld
loope
das
test
inc
mov
movsb
pop
outsb
dec
cli
aaa
pusha
push
inc
leave
cmp
jmp
faddl
repz
pop
cmp
pop
adc
adc
cmp
jbe
sbb
push
push
or
std
add
lcall
jb
sti
pushl
int3
test
xchg
fldlg2
in
and
mov
or
loop
inc
mov
out
xor
pushf
sub
jle
xchg
or
xor
push
pop
cmp
mov
aad
mov
push
and
pop
pop
pop
lcall
stc
in
mov
xor
cmp
cmp
shlb
fldt
arpl
insl
or
int3
jb
aad
insb
jns
mov
lods
mov
pop
push
outsb
push
arpl
dec
insb
xor
mov
enter
mov
jge
pop
lods
aaa
xchg
sub
test
mov
jne
xor
adc
fwait
lret
pop
cmp
push
adc
in
mov
scas
xchg
dec
adc
addb
xor
arpl
add
lahf
cmp
lahf
clc
push
fdivrs
je
and
sub
jecxz
in
adc
mov
add
ret
sbb
pop
test
mov
xor
fisttps
inc
push
pop
add
movsb
mov
ret
add
dec
std
sti
push
lret
jne
test
popa
sbb
cmpsl
jbe
cmpsl
cmpsl
inc
mov
divb
fwait
push
push
push
push
adc
out
leave
idivl
push
mov
rol
aad
cltd
icebp
xor
mov
fsubr
push
mov
add
test
jbe
dec
mov
xchg
lahf
int
or
fnstcw
ljmp
cli
testb
jg
pop
sbb
push
xor
lret
repz
test
pop
notl
popa
scas
pop
fdivs
xor
insb
xlat
push
add
test
out
cmpsb
insl
in
xchg
fwait
test
and
cltd
shlb
sbb
outsb
pop
iret
jmp
cwtl
dec
decb
xchg
test
lcall
sbb
test
xchg
mov
sub
xchg
mov
adc
sbb
jne
les
push
addr16
outsb
jp
pop
mov
cld
adc
jmp
jnp
imulb
cli
push
lea
sarl
xorb
pop
stc
jp
int
popf
adc
pop
shlb
cmp
cmp
xor
into
push
mov
cmp
dec
adc
das
lock
mov
mov
mov
pusha
push
push
insl
pop
arpl
mov
cwtl
sub
leave
sbb
sahf
jmp
push
pop
adc
mov
mulb
fsubrl
sbb
imull
cltd
sbb
adc
sub
jmp
mov
xchg
test
lret
inc
or
and
and
loop
bound
inc
push
popf
pop
jecxz
fs
mov
xchg
cmp
es
dec
dec
arpl
push
inc
mov
fisttpll
mov
sarb
les
mov
fiaddl
sbb
movsb
rolb
inc
call
mov
lds
or
in
aas
jns
mov
test
pop
lret
dec
outsl
arpl
inc
mov
and
mov
dec
out
push
or
es
lods
in
in
mov
adc
mov
mov
rcrl
in
out
test
pusha
and
xchg
pop
sub
sbb
sub
mov
sahf
icebp
jecxz
test
lock
push
xchg
outsl
fstpl
jecxz
jl
push
cmp
fsubp
jmp
ret
clc
mov
test
push
or
push
adc
and
sub
cmp
jne
sbb
mov
repz
out
mov
or
xchg
push
movb
xchg
ds
mov
leave
outsl
inc
and
pushf
insl
xchg
push
aas
xchg
mov
jae
lds
and
sbbl
add
sub
xor
add
xchg
inc
mov
mov
test
pop
cltd
mov
add
push
test
pop
rorl
mov
add
in
jae
fildl
xor
mov
inc
push
jle
cmp
xor
cs
sub
mov
dec
clc
xchg
mov
mov
jecxz
mov
xchg
fbld
out
sub
cmc
add
out
cmp
xor
add
pop
and
mov
jp
push
jl
mov
icebp
popf
dec
jge
jo
data16
leave
mov
cld
xor
add
mov
push
shr
push
sbb
mov
faddl
ret
mov
pop
test
pop
jecxz
push
lods
data16
js
dec
jne
out
jmp
bnd
sbb
cmp
mov
xchg
loopne
test
push
mov
lock
xchg
arpl
scas
mov
xchg
scas
inc
pop
lock
inc
jmp
mov
fcoms
cmpsb
gs
push
pop
stos
fsubrp
pop
jl
pop
mov
inc
mov
pop
fbstp
dec
add
jl
loop
pop
and
popf
hlt
int
ss
lahf
insl
lahf
leave
or
xor
lret
add
push
cmp
push
push
repnz
cs
das
ds
push
and
xchg
dec
lock
repnz
mov
orb
jp
jns
sub
daa
int
pop
outsl
cmp
rclb
mov
test
movsl
jp
xor
push
ss
jp
test
fistl
ss
add
mov
lahf
out
popa
repz
in
xchg
in
cli
mov
mov
rcrl
das
dec
jmp
mov
in
scas
adc
pop
push
out
xchg
outsb
bound
ret
insb
or
adc
movsl
out
pop
icebp
mov
jge
neg
call
push
pop
std
mov
lods
xor
imul
inc
lcall
shll
xchg
fcoml
lahf
and
fiaddl
fcmovbe
xor
out
and
mov
inc
add
mov
std
push
mov
or
jp
xchg
pop
ja
arpl
arpl
push
stos
or
test
xchg
push
repnz
inc
cmp
nop
dec
inc
dec
dec
xchg
and
add
jge
mov
mov
or
nop
pop
aad
in
sti
sub
mov
mov
push
inc
jecxz
aam
cli
pop
clc
dec
scas
iret
in
sbb
ds
jne
and
sub
xchg
mov
insl
jmp
repz
inc
adc
dec
in
pop
push
repnz
push
dec
fidivs
cmp
mov
js
mov
jge
xor
je
push
pop
pop
fsubs
cs
push
insb
outsb
rcrl
imul
je
mov
and
pop
jge
test
pop
shll
in
addr16
and
jge
test
fcmovbe
arpl
add
mov
testb
adc
popf
xchg
inc
movb
test
or
fistps
out
cwtl
ja
jo
push
jmp
sub
add
jns
pop
cli
popa
stos
xlat
inc
mov
clc
inc
jo
adc
pop
test
imul
dec
jne
xlat
push
addr16
fwait
cmpl
inc
out
mov
sbb
inc
popf
jl
sahf
xchg
mov
arpl
xor
shlb
inc
test
jge
sbb
test
mov
fcoms
xchg
aad
pop
mov
mov
test
mov
push
iret
call
push
push
mov
sub
pop
ss
scas
inc
lret
sbb
xor
xchg
sub
mov
mov
and
adc
sbb
xchg
outsb
xor
adc
and
movsl
xchg
xor
js
cmp
call
daa
xchg
xor
pusha
add
std
enter
xchg
test
cmpsl
cmc
lods
lods
push
sbb
sbb
inc
aaa
lods
ss
jns
and
jne
std
sub
inc
popf
fsubr
xchg
cmp
les
insl
stc
jle
or
push
jge
fwait
push
inc
push
sub
aad
and
fs
xchg
stos
ja
jnp
scas
cmc
pop
subb
xchg
in
adc
mov
sub
pop
mov
mov
fimuls
or
push
lea
out
jmp
divl
ljmp
sub
mov
ljmp
cmp
es
or
push
push
fs
repnz
inc
clc
adc
xchg
xchg
pop
cwtl
lock
xchg
inc
ret
pop
cmp
mull
dec
test
addr16
mov
add
pop
xchg
test
or
xchg
out
in
push
adc
inc
syscall
int3
cmp
sbb
jmp
xchg
dec
out
cmpb
xchg
fs
cmpsb
adc
pop
push
and
sbb
clc
in
ret
push
mov
cmc
mov
movsl
push
jbe
mov
cmp
scas
outsb
jno
ret
lock
repnz
push
mov
shrl
lods
adc
or
addr16
outsb
sbb
cltd
pusha
aaa
aad
adc
ja
sbb
scas
ljmp
cmpsb
mov
push
dec
add
cli
mov
cmc
arpl
mov
push
fcom
push
lret
mov
pop
dec
pop
imul
adc
push
fistl
aad
stos
lret
out
imul
mov
int3
mov
imul
pushf
adc
ljmp
sahf
push
popa
or
sub
xchg
xchg
unpcklps
mov
aad
repz
push
mov
fcoms
out
incb
test
ds
xor
mov
ljmp
jbe
pop
adcl
loop
jns
dec
jp
fdivl
loop
jg
sub
stos
mov
leave
mov
das
aam
scas
cmc
add
fisttpl
shl
push
scas
inc
mov
mov
lods
jae
arpl
cwtl
pushl
sub
jo
mov
pusha
sbb
push
inc
pop
jo
and
and
jmp
lods
outsb
sbb
pop
out
sub
loope
jns
out
lret
mov
rclb
push
xchg
int
ljmp
and
subl
hlt
out
xchg
adc
xchg
add
aad
pop
pop
pusha
pusha
scas
or
or
and
lds
repnz
fcmove
lret
push
pop
mov
popf
xchg
jns
cltd
pusha
ror
mov
cmc
jl
pop
lods
pop
cmp
fdivs
mov
stc
xchg
or
jl
repnz
icebp
mov
push
cmp
mov
fcmovb
es
push
jmp
fimull
cmp
sub
clc
into
mov
add
mov
stos
dec
jmp
push
std
adc
das
cld
in
dec
or
push
xlat
fsts
mov
sub
add
adc
sbbb
dec
add
cmp
jecxz
push
add
stos
cli
std
mov
enter
push
hlt
cltd
jb
xor
aam
leave
lahf
insb
mov
or
add
inc
sub
int
aas
orl
jns
cltd
pusha
sahf
repnz
jmp
out
sub
stos
push
jl
mov
cmp
pop
lods
and
mov
jecxz
test
das
cmp
loop
mov
cmp
push
add
mov
outsb
and
popa
sbb
insl
push
add
jae
dec
fwait
mov
mov
xchg
out
lret
jl
or
mov
stos
xchg
sub
xchg
rcr
mov
sar
mov
jp
cmpl
push
push
jnp
sub
push
subl
dec
adc
sub
lds
and
pop
out
adc
mov
adc
fcompl
xchg
repz
dec
inc
out
sub
sbb
xchg
pop
or
add
jp
inc
and
scas
mov
hlt
or
scas
pop
leave
idivl
jnp
divl
jbe
add
adc
nop
addr16
sti
aaa
xchg
ficoml
pop
push
sub
lcall
mov
int3
scas
inc
jnp
xchg
xchg
push
data16
int
enter
cwtl
fmull
xor
lcall
aam
push
jge
cltd
pop
or
xor
fdivl
das
in
nop
lahf
inc
lea
mov
jle
js
outsb
and
jne
stos
add
repz
mov
inc
ljmp
jle
cmp
push
stos
idivb
out
adc
roll
adc
inc
out
aas
es
mov
rorb
mov
ret
test
push
xchg
test
inc
jns
cmpsb
xor
push
pop
pop
inc
fadd
rcrl
inc
cmpsl
pop
fwait
lret
out
inc
std
adc
fwait
daa
jbe
add
pop
aas
inc
dec
aas
subb
inc
mov
sub
pop
cli
stos
sub
aaa
lock
add
popf
adc
jmp
mov
bound
jne
cmpsb
stc
loope
hlt
loope
mov
aam
sbb
fnstenv
mov
stc
stos
movsb
std
mov
mov
cli
mov
and
lock
out
lret
pusha
test
insb
sub
insb
inc
dec
jle
jo
push
mov
lock
lcall
scas
loope
shl
fiadds
emms
push
mov
out
inc
jl
sahf
fsubs
mov
jnp
dec
xlat
int
or
insl
xchg
ljmp
mov
push
ljmp
enter
rcrb
js
jno
popa
cmp
xchg
pop
cmpb
leave
xor
test
ret
add
movsb
sbb
inc
dec
idiv
or
add
aad
lea
and
inc
aas
fldenv
in
adc
jge
xor
pop
xchg
jb
divb
scas
push
xor
sub
pushf
add
pop
mov
cmp
sahf
push
shlb
xchg
xchg
adc
rorb
or
pop
push
imul
jno
xor
negl
jge
shrl
shlb
mov
int
roll
or
add
jge
lahf
lret
sub
mov
jno
push
cld
adc
stc
scas
test
loopne
je
cmc
outsl
sbb
hlt
or
mov
jg
in
insb
or
add
sbb
sub
sti
movsl
or
and
and
pop
sti
aam
loope
mov
add
lcall
or
out
fistpl
xor
ret
pop
imul
inc
sub
lret
mov
addr16
push
jmp
scas
or
mov
push
adcl
pop
aam
dec
mov
mulb
scas
sub
loopne
pop
jno
lods
pop
sub
mov
fidivs
jg
std
push
and
cmc
adc
cmp
sahf
xor
clc
fldl2t
stos
out
xchg
xchg
pop
adc
fwait
sbbb
sbb
jmp
sbb
sub
cmpsb
sbb
xchg
pop
lds
mov
push
sarb
lret
lcallw
sahf
in
fcompl
mov
test
gs
push
cs
dec
scas
mov
fimuls
repz
and
out
xlat
adc
cmc
push
dec
leave
inc
jno
mov
lods
jns
adc
mov
xor
push
aas
push
xchg
aad
and
nop
fstpl
mov
addb
jb
leave
pop
enter
enter
subl
fimull
push
jl
jne
mov
mov
std
imul
ret
cmc
jmp
jle
insl
scas
mov
xchg
mov
lahf
rorl
dec
lret
aas
scas
add
xchg
or
xlat
dec
ljmp
sti
jb
insl
subw
cmp
mov
fidivs
lods
xchg
inc
inc
je
sahf
fs
insb
push
cs
jp
test
mov
adc
call
fdivrl
xor
pop
shl
push
loopne
inc
mov
sub
sub
aam
mov
lcall
jp
mov
out
inc
daa
mov
dec
cmpsb
movsl
adc
fnsave
jecxz
adc
fisttps
cwtl
loope
mov
pop
popa
jg
sbb
add
pusha
fnstenv
jmp
dec
nop
push
mov
sarb
jno
pushf
pop
mov
xchg
adc
inc
in
pop
lock
jno
in
inc
pop
and
shlb
hlt
xchg
xchg
xlat
inc
xchg
push
pop
rcll
xor
jecxz
xchg
test
mov
int
mov
repnz
pop
ficompl
push
xorl
lret
imul
add
xchg
outsb
fstl
add
fmull
mul
cmp
xchg
test
mov
and
jle
cmp
shlb
dec
rclb
rolb
xchg
addb
inc
mov
push
jp
xchg
inc
int
jecxz
ret
xchg
mov
rcr
insb
and
add
push
aas
js
ss
xchg
mov
negb
push
pop
stos
imul
icebp
xchg
mov
xchg
mov
cmp
rorb
cmp
xchg
insl
jne
repz
sbb
jge
xor
mov
dec
adc
pop
stos
jnp
fistps
xor
negl
rcll
adc
aam
int
lahf
movsb
or
xchg
inc
faddl
ljmp
loopne
mov
inc
pop
mov
ret
cmpxchg
xor
mov
popf
add
and
mov
iret
add
or
stos
xor
cmpsl
test
outsl
inc
cwtl
push
cs
sbb
adc
pop
rol
mov
in
push
mov
xchg
xchg
push
insb
in
jbe
jle
mov
jnp
push
and
divb
add
jne
dec
mov
ret
add
lret
or
mov
inc
out
insl
icebp
sub
jnp
and
nop
mov
pop
fwait
imul
xadd
insl
jp
inc
stos
xchg
pop
mov
ret
fsubr
hlt
and
push
mov
into
add
pusha
rolb
jle
pop
lret
mov
add
adc
das
inc
int
pushf
lret
jno
pop
out
jae
lret
mov
jge
stos
jne
test
andb
add
idivb
or
pop
aaa
pop
sbb
cld
jo
popf
mov
or
pop
pop
aas
adc
xchg
push
dec
out
push
pop
adc
mov
lcall
xor
push
insb
sub
pop
jl
bound
mov
and
xor
push
loopne
into
push
push
lods
aaa
jl
push
lds
mov
shll
jecxz
cmp
loope
mov
hlt
je
jge
in
inc
or
out
int
add
push
fnstsw
leave
nop
inc
out
pop
pop
mov
jno
lret
xor
jp
push
xor
lods
cli
in
inc
mov
mov
out
adcb
cmp
mov
push
bound
insb
leave
sbb
out
les
sbb
cld
xchg
cmp
add
das
adc
pusha
sub
hlt
inc
leave
outsl
fwait
loopne
xlat
mov
ret
insl
mov
adcl
push
mov
cmpsb
outsl
cld
leave
stos
inc
ret
pop
cwtl
dec
mov
dec
scas
in
mov
mov
and
int3
adc
mov
in
idivb
jmp
inc
lret
cmp
sbb
arpl
jnp
pushl
imul
cmpsl
data16
xor
adc
mov
flds
and
adc
shrl
stos
push
pusha
push
js
push
in
lret
xor
inc
adc
dec
add
jle
rcll
call
popa
mov
xlat
jb
shll
stos
push
mov
cmp
jb
rclb
sbb
in
dec
dec
inc
mov
cmp
test
repz
je
sub
and
xrelease
cwtl
movsb
dec
xor
cltd
push
and
mov
add
jge
push
scas
fiaddl
sti
stos
push
ljmp
adc
movsb
mov
and
popf
aam
inc
xor
cmp
jb
or
das
es
or
xlat
scas
jle
inc
mov
aaa
test
xchg
into
jns
pop
ljmp
clc
sub
pop
stos
jmp
pop
test
or
and
call
cld
cmp
push
and
iret
lahf
sti
scas
and
cs
std
fistl
adc
xchg
xchg
stos
adc
push
ret
call
adc
and
jo
cmp
cmp
je
mov
pop
xor
hlt
sub
inc
cld
mov
hlt
std
xchg
mov
in
lret
dec
rclb
push
dec
xlat
nop
adc
xor
fs
ret
fldl2t
outsb
int3
in
je
inc
sti
ljmp
add
xchg
pop
xchg
pushf
inc
push
notl
icebp
xchg
test
pop
icebp
or
jl
pop
inc
pop
pop
and
pop
aaa
cmp
adc
out
adc
mov
pop
dec
in
or
jo
or
fstl
jns
jmp
ds
jne
jg
inc
aaa
push
addr16
mov
pop
sub
fstps
movsl
rorb
addr16
sbb
push
mov
pop
xchg
and
es
xlat
iret
hlt
and
xor
aam
cmp
push
xchg
cwtl
insl
sub
fdiv
jns
xchg
ja
jae
xorb
inc
lret
movsb
and
outsl
push
int3
cmp
cwtl
ret
sbb
mov
push
xchg
push
pop
add
test
inc
frstor
outsb
jg
add
jmp
jne
stos
pop
pop
insb
nopl
lods
jmp
pop
cli
ja
lret
mov
aas
sub
test
push
lret
cmp
notb
pop
jmp
pusha
cmp
xor
mov
pop
adc
xor
fsts
inc
scas
adc
cmp
mov
and
rcl
mov
out
jmp
bound
int
cld
cmp
orl
jns
int3
clc
dec
jno
pop
or
test
fistpl
jp
adc
adc
test
jb
stos
iret
icebp
mov
adc
std
sbb
mov
inc
insl
lods
je
mov
data16
push
inc
push
mov
bound
mov
inc
inc
loopne
mov
adc
loop
ret
mov
or
mov
add
nop
inc
xorl
jb
jmp
adc
push
pop
mov
imul
push
and
add
das
sti
push
cmp
push
movsb
fldenv
xchg
mov
call
les
jns
leave
or
scas
push
outsb
into
or
insb
pushf
mov
dec
pop
mov
or
push
xchg
mov
add
mov
test
aam
adc
mov
bound
fld
scas
pusha
insl
outsl
lea
push
jbe
lock
pop
out
lcall
lret
pop
dec
jle
cld
imul
clc
mov
mov
mov
es
mov
das
rorb
faddl
sub
push
adc
frstor
jne
sti
imul
inc
fwait
lods
cmp
cwtl
pop
je
lods
jle
mov
jae
sub
ss
out
jmp
dec
mov
inc
outsb
icebp
cmc
insb
mov
mov
mov
push
movsl
jo
jecxz
jb
fwait
call
into
mov
cmp
inc
sbb
iret
fcoml
adc
jno
mov
jmp
jae
add
dec
or
hlt
rclb
dec
and
dec
hlt
sbb
loope
dec
push
sbb
add
decl
int3
push
inc
loopne
pop
ficomps
sbb
or
sbb
in
sub
sbb
outsb
sbb
inc
push
or
cmc
in
sub
mov
sbb
xor
test
adc
orl
fs
xchg
mov
inc
nop
repz
sbb
sbb
cmp
mov
cltd
aas
push
pop
test
inc
push
mov
fwait
xchg
mov
cmp
popf
insb
lea
xchg
pop
test
in
push
add
in
inc
xchg
rcrl
lea
xchg
stc
cmpsl
cli
or
mov
mov
mov
fcompl
pop
dec
jg
sub
mov
add
insl
les
and
jae
jns
mov
cmc
insl
cwtl
sub
daa
fldt
mulb
and
jno
popa
push
pop
scas
daa
mov
sub
sti
dec
pop
pop
jmp
cwtl
dec
mov
inc
xchg
and
and
lahf
andl
jbe
sti
mov
imul
and
jmp
xor
popf
test
jg
xor
aam
sbb
dec
lret
int3
push
repz
mov
add
lods
push
call
push
ss
xchg
jge
sbb
or
xor
xorl
aam
and
testl
jb
int3
or
pop
in
cltd
icebp
cmp
insl
mov
testb
push
jae
jbe
mov
lcall
mov
movsl
subb
pop
sbb
dec
inc
popa
js
pop
insb
jo
out
insb
sub
js
xchg
test
ja
mov
es
jo
push
cmpsb
aaa
sti
xchg
xor
addr16
xor
dec
cmpsb
jle
in
setne
in
movsb
mov
loope
jno
ja
stc
clc
mov
xchg
movb
mov
pusha
outsb
fs
mov
lods
stos
dec
sub
cmp
aad
lock
pop
xchg
fisubl
inc
mov
mov
lods
and
mov
enter
adc
sub
mov
xchg
xor
push
jno
add
in
sbb
jae
dec
pop
xchg
mov
sbb
rep
ljmp
test
aaa
push
adc
inc
xor
test
sahf
cmp
int
test
fstps
cltd
inc
lea
loopne
js
test
dec
js
xchg
popa
sub
out
aam
fisubs
imul
push
sarb
mov
adc
les
in
js
les
into
or
jbe
mov
add
xchg
or
frstor
imul
adc
in
icebp
adc
daa
jo
cmp
jae
arpl
add
mov
addb
cmp
add
int
stc
sbb
sub
xor
jecxz
xorl
addr16
adcl
cmp
mov
cmp
int
mov
cmpsb
mov
ficoml
and
or
ss
jl
mov
data16
icebp
rclb
imulb
lret
aam
cld
pop
xor
enter
jmp
cmc
mov
sub
xchg
scas
xchg
pop
repz
and
negl
insl
jle
js
inc
push
sbb
ljmp
lcall
push
in
mov
cmc
mov
or
adc
sub
mov
mov
iret
js
sahf
push
sub
fs
sbb
fs
or
cmp
xor
addb
mov
test
inc
iret
cmpsl
les
scas
mov
popa
pop
stos
call
pop
xor
sbb
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
sub
bound
bound
cmp
repz
dec
add
dec
cmp
adc
fistps
daa
xchg
rclb
mov
dec
jb
xchg
or
inc
out
sar
or
push
xlat
add
cmc
ds
int3
movsb
rcrl
pusha
setno
push
arpl
scas
sbb
mov
pop
mov
fidivl
jp
xchg
imul
jl
scas
mov
mov
ret
int3
mov
adc
add
xchg
popa
cli
movl
inc
mov
push
scas
jle
cmp
loop
int
mov
loopne
jnp
sub
mov
cmc
adc
jo
xor
push
push
add
dec
stc
out
push
push
sub
mov
push
mov
btr
mov
pop
push
lock
sub
fsubrs
inc
jne
imul
pop
ret
xchg
jl
mov
ljmp
jns
jno
sub
push
leave
cmpsb
pop
pop
sarb
jb
jnp
ret
xchg
cs
fwait
leave
mov
inc
pop
test
cltd
sbb
dec
ffreep
pop
ret
pop
push
mov
mov
popa
ja
inc
popa
je
fldl
adc
add
cmp
sbb
scas
mov
dec
sbb
push
mov
mov
sbb
inc
dec
xchg
push
jecxz
mov
push
repnz
push
cmp
add
mov
enter
rorb
mov
pop
cmp
lds
inc
xchg
push
push
xor
mov
in
jno
xor
call
inc
push
add
mov
fisubrs
xchg
pop
and
int
les
mov
arpl
ds
ljmp
xor
or
mov
dec
adc
aaa
inc
leave
mov
adc
stos
push
or
lret
mov
fwait
cmp
cmove
or
adc
repz
lahf
jmp
scas
xor
adc
sbb
adc
jp
decl
xorl
je
and
xchg
xor
sub
lcall
ficoml
pop
inc
aas
sub
aas
or
ljmp
loope
pop
jo
push
and
test
mov
daa
xchg
push
lock
add
gs
insb
fisubrl
sbb
aam
aaa
fs
faddp
xchg
scas
mov
setp
dec
hlt
rclb
cmp
out
or
mov
xchg
movsl
fisttpll
mov
dec
outsl
mov
nop
aas
das
addr16
insl
push
imul
divl
jno
xchg
push
inc
jecxz
sbb
cmp
push
testb
test
ficomps
mov
xchg
cmp
pop
lcall
daa
icebp
test
out
xchg
sti
pop
jb
arpl
ss
imul
cmpl
in
and
icebp
loope
dec
jmp
push
test
xor
mov
mov
clc
ret
out
push
imul
lret
lock
sub
lock
mov
dec
loop
jl
xchg
enter
xor
iret
inc
fs
cltd
cmp
inc
fbstp
xorl
outsl
mov
xchg
int
arpl
jg
je
sub
pop
inc
insb
rorb
sarb
andb
push
rcrl
fnstcw
xchg
ja
and
aaa
repnz
fs
sub
inc
in
sbb
dec
xchg
cld
pop
dec
jg
inc
and
fistpl
xchg
scas
out
imul
adc
sbbl
cmp
jle
jl
adc
and
scas
inc
sbb
inc
adc
push
inc
xchg
inc
pushf
push
dec
and
sub
lcall
data16
imul
cmp
in
inc
pop
rolb
inc
ret
outsb
mov
xor
jmp
cmp
xchg
outsl
adc
jp
scas
loop
lret
cmp
mov
addb
cmp
push
sub
mov
pop
jmp
data16
sti
push
lret
cmc
shlb
cmp
mov
lret
lods
sub
lds
xor
xchg
push
push
fwait
sahf
mov
inc
stos
les
fcompl
movsl
sbb
lea
or
sub
mov
jmp
imul
adcl
testl
adc
add
add
std
je
inc
into
jp
mov
jmp
jno
xor
mov
or
dec
jle
inc
jecxz
daa
inc
gs
cmp
sub
cmc
add
and
dec
cmc
jl
push
xor
lahf
mov
xchg
jo
jns
mov
jbe
in
jo
jmp
xchg
stos
jg
or
das
fnstsw
xor
or
repz
nop
and
inc
lods
pop
cmc
inc
xor
xchg
push
daa
cwtl
aas
ret
push
aad
into
pusha
mov
mov
sbb
insl
pop
add
repnz
popf
cmp
or
xchg
fstpl
mov
repnz
cmp
and
and
mov
rclb
es
jmp
inc
add
mov
or
adc
sbb
es
cld
rclb
mov
bound
and
subb
imul
mov
mov
stc
add
push
negl
sub
dec
leave
pop
aaa
pop
jle
pop
sti
pop
scas
ds
in
testl
pop
jle
ds
pusha
sbb
sub
mov
push
jg
sub
pop
or
in
arpl
out
dec
dec
popf
jo
add
imul
dec
xor
mov
mov
or
aam
movsl
dec
lds
xchg
cmp
dec
and
xchg
jl
adc
cs
jl
test
fsubs
xchg
push
cli
or
arpl
xchg
out
xchg
insb
mov
out
adcl
jl
divb
jno
or
popf
push
sbb
sbb
cmp
cmp
pop
cmpsb
sbb
lods
mov
jg
daa
xor
pop
jb
repz
clc
iret
mov
fsub
iret
mov
js
push
adc
mov
repnz
test
test
push
shrb
dec
outsl
insb
lds
mov
push
movsb
pop
cmp
add
call
mov
and
push
push
jle
les
daa
pop
lods
jl
jl
mov
clc
mov
or
add
push
incl
add
sub
imul
movsl
ljmp
adc
xor
inc
adc
cwtl
stos
adc
or
sub
dec
adc
push
mov
xchg
jecxz
cmc
jge
into
mov
lret
js
mov
outsb
jmp
dec
jmp
iret
jnp
outsb
mov
or
xor
int
orl
inc
in
rcrb
pop
and
addr16
and
test
flds
fcmovu
data16
bound
add
xchg
cmp
inc
sar
inc
inc
inc
popf
adc
adc
es
aad
cmpsb
and
ss
in
lea
push
sti
popf
orb
ret
push
dec
lret
sbb
jge
inc
xchg
xchg
fstps
mov
dec
pop
or
outsl
aaa
stos
in
outsb
sub
int3
outsb
not
repz
int
cmpsb
mov
sub
decb
xchg
jle
pop
loopne
testb
push
inc
xor
xchg
or
dec
sbb
flds
push
add
add
lret
jae
mov
inc
cwtl
ret
jp
cwtl
shl
jns
movsb
clc
je
add
lret
rolb
js
aaa
scas
jmp
adc
shl
and
push
out
sbb
push
jecxz
lea
sub
cmp
gs
dec
dec
mov
xchg
jo
aas
dec
sahf
mov
sarl
dec
cwtl
cmp
mov
xchg
mov
and
dec
or
mov
jge
in
mov
and
addr16
aam
mov
add
jns
jae
jle
fisttpll
jge
lods
fsubrs
js
or
mov
jecxz
fildl
or
ret
xlat
js
xor
and
in
int3
push
test
jbe
push
int3
cmpl
in
xor
add
out
pushf
or
aam
shll
sarl
aam
fstps
and
bnd
lods
aam
cltd
xchg
xor
inc
sbb
pop
stos
mov
inc
push
push
cmc
mov
jns
mov
inc
and
scas
je
or
push
call
popf
sbb
orl
inc
lahf
je
pop
movsl
rcll
pop
sbb
cmp
lods
sbb
adc
dec
cs
test
jg
jmp
and
pop
push
popf
arpl
das
fcompl
inc
cmp
int3
push
cmp
or
rclb
fcompl
jp
orb
sub
adc
xchg
fdivl
xchg
pop
das
mov
fcmovnb
add
fsubrs
stos
mov
pop
sub
ds
adc
insl
pop
shll
add
repz
pop
jp
cmpsl
xor
mov
or
lret
int
mov
nop
inc
xchg
icebp
fwait
jo
mov
jmp
xchg
pop
push
jle
sbb
roll
stos
inc
pop
loop
jecxz
insb
inc
jae
mov
dec
or
shrl
dec
fmull
lret
int
jnp
jg
inc
xchg
loope
fdivrs
sub
cmpsb
inc
jae
mov
add
sub
mov
push
sti
xorb
insb
cmp
out
push
sub
cld
sub
int3
daa
xor
lahf
cmp
mov
xor
shrb
mov
mov
nop
mov
sbb
adc
dec
fcompl
in
sub
adc
pusha
or
loope
outsb
pop
or
mov
daa
lds
push
adc
push
fldt
aas
inc
xchg
pop
mov
mov
pop
roll
add
adc
movsb
and
std
scas
push
out
add
mov
out
std
xlat
mov
ja
shrb
or
fwait
jmp
adc
xor
adc
mov
andb
mov
push
addr16
iret
jo
or
cs
flds
gs
push
jge
sub
mov
pop
push
ret
dec
xchg
int
repz
pop
nop
bound
add
shl
shr
jnp
rcrb
pop
subb
add
test
test
fistps
imul
rolb
jbe
icebp
push
cmp
mov
nop
rolb
sbb
ja
xor
stc
out
popa
mov
and
stos
jmp
jg
pop
add
nop
pop
xchg
lock
and
test
into
sub
mov
xchg
sub
fsubp
les
ret
movsl
mov
loopne
cld
mov
ret
hlt
ds
inc
cwtl
inc
orl
fcmovbe
and
jo
push
scas
int
scas
push
xor
test
ljmp
push
push
inc
cmc
jge
xchg
or
and
lds
fmuls
xchg
xchg
mov
push
push
inc
aaa
cmp
push
inc
fisttpll
es
dec
fmuls
loopne
daa
iret
pop
xchg
enter
cmp
out
push
sbb
push
sbb
jecxz
adcb
in
insb
cmpsb
movsl
sbb
lock
cli
jl
mov
mov
jns
enter
and
push
sub
pop
xor
xor
jmp
outsl
stos
in
ljmp
into
stc
imul
lods
mov
imul
shll
shll
test
sub
push
into
pop
sbb
jmp
sub
cmp
mov
insb
adc
xor
insb
push
sti
sub
or
fldl
xchg
cmp
jmp
add
inc
sbb
adc
push
movsl
rcrb
xchg
gs
jae
dec
cltd
or
loope
jecxz
cltd
xor
pop
lcall
push
out
sar
insb
lock
stos
ss
mov
pop
std
cmc
sub
lds
arpl
pop
not
inc
repnz
xor
xchg
loope
mov
test
add
rorl
push
in
insb
mov
enter
stc
rol
sub
ds
mov
std
adc
call
pusha
cmc
jno
clc
push
faddp
xor
mov
push
push
xchg
pop
xlat
inc
enter
out
bound
shlb
lret
mov
cmpsl
jnp
mov
xchg
fldt
adc
push
lret
clc
out
aad
inc
inc
aaa
aas
arpl
andb
mov
mov
jp
mov
cmpsb
loopne
adc
dec
dec
mov
pop
inc
std
int
inc
aas
or
dec
loopne
cmp
or
dec
mov
pop
push
into
mov
insb
mov
add
push
push
dec
xchg
fstpt
add
and
lods
pop
jno
push
pusha
jno
xor
and
pop
push
push
in
fadds
stos
arpl
rcrb
mov
lds
or
jae
mov
and
jbe
mov
cmpsb
popf
test
pop
jnp
fcoml
or
xor
scas
or
lahf
inc
lock
dec
jnp
mov
inc
in
data16
xchg
push
into
push
mov
dec
cmp
stos
jge
fscale
jns
sub
lret
leave
out
jp
inc
pop
and
in
or
in
mov
call
lods
sub
cmp
push
inc
dec
sub
jo
dec
sti
xchg
gs
stos
push
outsl
imul
pop
push
add
inc
pusha
xchg
xor
outsb
repnz
ss
inc
pop
pop
jbe
adc
mov
rolb
repnz
xchg
push
in
mov
xorl
add
cld
adc
fcomps
xor
in
mov
sub
lods
orb
inc
and
lcall
or
or
sub
jbe
push
fistpll
and
iret
sbb
xchg
in
movsl
lahf
ss
dec
stc
enter
testb
and
pop
mov
jle
jbe
xlat
and
inc
imul
jl
adcl
out
decl
mov
mov
negl
jno
mov
and
xchg
pop
jmp
pop
mov
push
add
cmp
sbb
scas
xlat
repnz
in
adc
xchg
iret
cmp
out
stos
sbb
out
inc
add
shll
sbb
adcl
mov
cmp
popf
mov
jmp
mov
call
insl
mov
cmp
adc
mov
fmull
mov
lods
xchg
aaa
xchg
or
pop
mov
inc
sbb
mov
cs
lock
lahf
test
fs
push
ljmp
cwtl
ret
insb
mov
es
or
xor
mov
addb
daa
imul
out
in
mov
jle
nop
sarl
jg
sub
mov
arpl
mov
ja
or
fucomip
xchg
cld
and
repz
jb
fisubrl
sub
out
cmp
xchg
sysexit
xorb
hlt
pop
aam
enter
ds
and
mov
stc
sbb
xchg
out
test
push
out
xchg
pusha
xchg
aad
and
dec
pop
bound
insl
cmp
movsb
and
pop
inc
xchg
cli
ljmp
xchg
into
fldl
aas
and
iret
push
imul
sub
jl
xlat
pop
sbb
sbb
xchg
bound
lahf
decb
mov
into
cmp
test
xchg
cmp
fsubrs
xchg
mov
test
scas
sbb
cmpsb
adc
cmpsb
push
xchg
xor
roll
rclb
mov
sub
push
imul
test
and
add
cwtl
xchg
sti
sbb
or
stc
aam
dec
cmpsl
fidivl
sti
mov
scas
clc
sbb
or
icebp
gs
nop
pop
stos
or
idivl
int
jg
rcrb
leave
add
sbb
fistps
pop
xor
inc
cmp
sub
test
enter
fdivrp
cltd
pop
outsl
lea
and
pusha
sarb
test
rolb
shll
mov
add
lods
mov
in
sbb
in
dec
jbe
dec
mov
dec
cld
mov
ss
mov
int3
je
sub
jae
cmp
sub
ljmp
jo
mov
mov
sub
push
int
jb
mov
or
push
shlb
aaa
imul
dec
rorl
jbe
cmp
adc
sub
sub
mov
sub
add
or
sbb
add
out
adc
pop
or
fs
push
lret
dec
cwtl
inc
mov
or
imul
aaa
fdivl
in
testl
jne
sub
in
dec
mov
add
outsb
call
xchg
sub
sub
sbb
jl
jno
fsubrl
sti
cmp
bound
popf
ja
and
cmp
shll
cmp
mov
xchg
add
jae
pop
sub
js
aas
mov
fidivs
gs
pop
jne
adc
ja
ficoms
insb
pop
imul
sbb
jne
sub
mov
dec
leave
mov
pop
outsl
xchg
leave
leave
mov
cwtl
or
fnsave
xchg
sbb
stc
daa
lds
pop
sub
sbb
pop
lock
sub
push
add
push
cs
sar
xchg
shlb
inc
mov
cltd
nop
cmp
inc
shll
mov
daa
mov
repnz
js
dec
lds
mov
push
sub
jge
inc
cmp
gs
dec
xchg
cwtl
adc
inc
adc
lahf
mov
pushf
jns
sub
adc
ret
push
mov
mov
xor
out
loopne
pop
lret
sti
pop
jle
mov
jns
add
call
iret
in
aas
xchg
sahf
dec
inc
mov
sarb
xchg
addr16
jp
ficompl
clc
adc
jns
enter
std
into
jbe
les
adc
adc
jl
dec
daa
sbb
mov
mov
pop
out
iret
dec
aaa
adc
pushl
icebp
xlat
mov
xchg
mov
test
mov
push
imul
jecxz
mov
pusha
popa
imul
mov
sahf
test
pusha
mov
mov
sub
cmc
xchg
iret
adc
in
frstor
je
lods
cs
jp
loope
pop
aaa
sub
fdivl
in
jae
xor
sbb
adc
adc
mov
jb
pop
outsl
pop
shrb
mulb
loop
sub
lods
or
jnp
cli
push
mov
scas
xor
push
movsb
jmp
es
repnz
push
inc
cbtw
sub
test
mov
dec
or
rep
stc
xchg
push
or
pop
jae
lahf
xchg
movsb
enter
aaa
insl
or
or
add
test
cmp
push
or
pop
sbb
imul
out
jne,pt
outsl
sub
pop
pop
push
xor
and
shrb
lods
lret
outsl
inc
sub
stos
mov
lea
std
jne
pop
and
scas
lds
mov
mov
in
insb
dec
cltd
or
je
popf
push
cld
inc
mov
mov
adc
lret
dec
push
cmp
xor
sarl
stc
repnz
pop
sub
popf
dec
adcb
nop
jl
sbb
lock
aam
jnp
cmpsl
data16
lods
in
dec
aaa
add
mov
pop
jp
jl
roll
push
imul
and
je
and
or
in
notb
pop
daa
ficomps
jne
mov
and
pop
imul
dec
mov
shlb
ret
push
dec
lods
ljmp
aaa
test
int
gs
push
mov
push
inc
mov
cld
iret
fs
pop
in
lahf
mov
aas
fcompl
int
mov
push
mov
call
mov
sbb
fidivrl
iret
push
xchg
pop
fnstsw
jbe
sub
mov
and
cmc
lods
pop
es
cmc
adc
cmp
cld
cmp
fisubl
gs
jg
shlb
pop
andb
sti
or
in
repnz
add
in
sbb
push
dec
sub
das
push
das
sub
in
mov
inc
jnp
jmp
scas
cmp
jp
dec
cld
xchg
aam
inc
pop
cmpsb
sbb
xchg
push
sahf
sbb
sub
push
rcr
lods
lret
jns
pop
add
push
aad
pop
dec
lods
gs
hlt
stos
fnsave
and
imul
lret
mov
lret
sub
adc
and
iret
faddl
inc
ret
jmp
std
or
rol
sti
movsb
sub
add
xor
jnp
inc
loope
int
addr16
es
mov
mov
add
jge
adc
jbe
sbb
push
fincstp
pop
rcrb
leave
incb
in
sbb
jecxz
xor
lret
push
mov
add
jae
fldl
or
inc
daa
sbb
roll
mov
add
mov
xchg
sub
adc
outsb
jecxz
ss
sbb
icebp
shlb
jl
add
stos
mov
fcmovne
and
leave
lret
and
pop
fistpl
xlat
loope
add
cld
ret
pushf
fimuls
add
inc
mov
and
sub
or
popf
sti
cmp
mov
dec
popa
sti
push
mov
sbb
add
les
cmp
das
xor
and
xor
mov
test
sbb
push
inc
jbe
loopne
mov
xchg
in
mov
jnp
and
fldt
inc
js
push
adc
and
test
cli
in
fdivrp
and
scas
xchg
xor
hlt
add
xchg
scas
insl
int3
ja
xor
mov
sub
pop
fwait
jge
adc
pop
or
mov
or
push
pop
movsb
jne
xor
mov
and
mov
adc
xor
jne
and
mov
loope
stos
arpl
sbb
mov
insl
mov
mov
sti
mov
sbb
out
insl
scas
cmp
mov
add
outsl
cmc
pop
xor
out
std
jne
push
inc
mov
pusha
in
adc
outsb
or
popa
or
mov
lahf
push
stc
mov
popa
jmp
xchg
add
int
xchg
xor
imul
aas
push
inc
cld
loopne
xchg
mov
test
popa
and
pushf
mov
decb
aaa
push
in
mov
lahf
xchg
outsb
cmc
xor
mov
dec
push
inc
mov
sahf
xchg
out
mov
pop
int
pop
faddl
ds
cmp
sbb
mov
mov
test
jnp
inc
jns
push
push
bound
xchg
add
jecxz
ret
lahf
shll
mov
mov
mov
push
mov
cmp
jmp
mov
lcall
adc
sbb
out
out
in
pop
jno
aam
push
mov
sti
call
pop
jl
rol
icebp
xor
dec
cmp
sbb
orl
paddusb
leave
pop
orl
xchg
xchg
sub
dec
lods
push
je
mov
or
incb
faddp
sbb
inc
or
mov
cmc
push
xchg
adc
nop
add
xor
cmp
aaa
push
jne
jp
lret
mov
ljmp
lods
and
jbe
push
sti
or
jmp
cmp
insl
repnz
sub
mov
out
mov
adc
fstpt
jmp
jne
xchg
lock
daa
iret
pop
insl
ja
sahf
repnz
int3
add
icebp
stos
cmpsb
or
fdivrs
addr16
pushf
aas
mov
cld
or
and
je
mov
sahf
dec
push
mov
loop
jmp
mov
xor
push
pop
mov
xchg
and
push
mov
jne
loopne
mov
jp
or
movsl
stos
push
mov
xchg
jae
pop
jns
mov
jle
loopne
inc
adc
repnz
test
mov
lea
cli
add
mov
jb
mov
jbe
push
xchg
mov
into
repz
cmc
pop
adc
add
jnp
movsb
cltd
cmpsb
daa
aad
inc
insl
pop
cmp
aas
sahf
pop
jl
pushf
les
lods
repnz
call
sub
add
xchg
or
sbb
ficomps
push
sbb
push
hlt
pop
mov
and
and
and
in
loope
jmp
movsb
stos
imul
ret
mov
pop
addl
mov
lds
xchg
pop
addb
add
cltd
pop
scas
jle
lret
test
cmc
xlat
xor
mov
decl
scas
or
xchg
push
mov
adc
cmp
fidivrl
test
xor
gs
loope
pop
stos
nop
push
jae
or
push
ss
sub
out
jg
aam
add
sbb
mov
inc
jge
inc
mov
ss
out
call
cmp
mov
int
or
push
add
das
xchg
pop
cwtl
ficomps
cs
xor
test
std
sahf
cmp
loop
pop
roll
fcomps
mov
and
jae
fwait
mov
stos
cmp
mov
xchg
sub
negl
mov
xor
sub
add
sbb
or
dec
lret
mov
xchg
sbb
out
push
icebp
sbb
xchg
lds
imul
js
jns
and
loope
mov
push
push
inc
ret
mov
inc
cmc
in
mov
xchg
lcall
loop
add
add
cmovb
lcall
xor
repnz
int
pusha
xchg
pop
push
push
sahf
lcall
sbb
mov
enter
pop
decb
adc
mov
aas
ds
lret
sub
ret
test
rep
lahf
ljmp
and
dec
sbbb
les
notl
nop
push
les
int3
mov
movsb
fiaddl
push
scas
popf
ljmp
lods
leave
add
dec
hlt
rcll
mov
xchg
nop
and
sub
push
sahf
sub
add
sub
mov
pop
repz
cmp
pusha
addl
or
loop
push
out
push
push
xchg
roll
adc
cmc
ret
lods
call
sbb
mov
mov
mov
mov
hlt
mov
data16
fstps
addr16
push
adc
push
xor
repnz
cmp
decb
shll
arpl
in
and
inc
sbb
mov
cmp
std
or
out
push
out
adc
add
and
fistps
push
jbe
pop
rcrb
lret
xchg
pop
pusha
pop
outsl
sbb
mov
dec
inc
sbb
cs
inc
xchg
fldt
stos
popa
pop
mov
cmp
push
cld
push
adc
lds
shll
push
or
add
pop
sbb
pop
xor
cltd
stos
sub
sub
int
imul
mov
sub
inc
adc
mov
frstpm(287
xor
pusha
mov
test
push
jmp
pop
sub
fs
mov
repnz
scas
xchg
inc
dec
fsubl
mov
jle
or
adcl
mov
cltd
cli
add
sbb
in
iret
lret
or
cmp
ja
call
cmp
mov
lods
mov
mov
shrb
push
or
and
and
cmp
push
popf
push
jbe
int
xor
dec
and
test
stos
aam
xlat
test
stos
mov
add
push
repz
data16
lock
add
xchg
adc
retw
xorl
xor
pop
or
inc
rorb
test
cltd
cmc
repz
pop
fistpl
dec
popa
jg
mov
fst
bound
into
lds
or
jmp
out
lret
ret
xor
out
leave
insb
idivl
xor
in
dec
mov
fnstcw
ja
jmp
cmp
push
cld
pop
push
arpl
mov
shlb
dec
cmp
enter
test
aam
scas
repz
jle
mov
sub
mov
std
fs
scas
repz
test
stc
mov
jmp
sahf
and
mov
cmp
mov
scas
es
adc
xor
in
mov
push
mov
bound
ret
push
push
xchg
add
mov
inc
pop
pop
sub
pop
push
mov
test
mov
dec
outsb
test
lods
movsb
rclb
arpl
jae
in
inc
addb
movsb
pop
and
xchg
or
mov
popa
loopne
das
out
imul
lret
bound
into
add
pop
fisubrl
pop
dec
jge
hlt
mov
jne
mov
dec
mov
int3
jb
out
push
out
dec
shlb
bound
or
cmp
aam
inc
popf
loopne
outsl
add
insl
xchg
xchg
mov
mov
pop
pop
fiadds
push
aas
in
aad
in
lcall
and
imul
cld
icebp
xor
scas
fadds
push
xchg
ja
dec
or
andb
mov
mov
adc
dec
int3
adc
push
and
jle
je
dec
test
into
arpl
adc
fxch
xor
pushf
add
xlat
dec
lods
lcall
ja
cwtl
push
into
push
add
jecxz
xchg
inc
mov
fists
scas
jb
jns
inc
aas
addr16
dec
push
sub
dec
push
loope
addr16
outsl
ljmp
mov
jp
imul
fwait
popf
stos
inc
or
push
xchg
aam
fcoms
jb
and
loop
or
push
shrb
cli
and
adc
xchg
lods
or
add
dec
int
push
push
xor
sub
test
push
je
into
add
loopne
dec
pop
and
or
sti
insl
dec
fs
push
mov
cmpl
cmpsl
inc
push
loop
or
cmp
add
dec
ss
mov
outsl
inc
fisubrs
inc
and
popf
sti
push
fisubrs
mov
test
lods
mov
fnstcw
or
mov
fmul
mov
ss
cmp
or
out
sbb
pop
dec
mov
lods
lea
es
daa
es
sbb
fiaddl
call
fs
jge
setb
iret
sub
jle
add
xchg
popa
imul
testb
jae
jge
adc
or
inc
mov
and
hlt
dec
lods
aad
push
call
mov
mov
dec
out
mov
imul
imul
popa
imul
add
sub
jns
mov
xchg
xor
jmp
stos
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
jmp
cmp
add
add
in
adc
adc
adc
mov
cmpsl
stos
inc
fiaddl
mov
lahf
adc
mov
popf
push
jle
aam
cmpsl
mov
mov
or
fwait
pop
mov
leave
mov
mov
cli
cltd
mov
repnz
xchg
push
cmpsl
pop
adc
add
add
add
add
sub
adc
cmp
out
pop
xchg
push
sahf
int3
add
popa
add
add
pop
jp
test
ja
outsl
out
test
adc
sarl
ja
mov
sbb
add
adc
or
insl
in
lea
lahf
jge
inc
mov
loop
and
ds
mov
outsb
mov
mov
daa
scas
sbbb
sub
test
jp
xchg
in
lea
push
push
add
add
add
add
sub
sub
addb
int3
add
popa
add
add
outsb
js
fadds
stos
pop
aas
ret
lds
jl
loopne
sub
inc
in
dec
rol
pusha
bound
mov
or
movsl
test
movsl
mov
cmc
lahf
inc
mov
jne
sbb
mov
aas
adc
bound
cmp
jnp
dec
idivb
enter
cmp
loopne
push
insl
sbb
add
add
das
and
aam
aam
ljmp
je
and
outsb
jns
int
add
add
in
and
cmp
push
outsl
add
arpl
dec
outsb
push
xlat
inc
xchg
inc
dec
adc
dec
jl
lds
mov
push
loop
fidivrl
bound
jecxz
xchg
pop
inc
arpl
and
idivb
push
in
daa
lret
and
mov
testl
mov
cmpsb
shll
add
add
add
add
mov
sti
cmpsl
mov
dec
mov
ror
add
add
sub
addr16
pop
insl
adc
and
js
rorl
popa
sbb
test
jg
outsb
cmp
ret
rcl
xchg
push
fcomps
arpl
clc
cwtl
xchg
mov
cmp
iret
test
pop
inc
dec
jmp
mov
pop
inc
aam
or
out
lds
cmpsl
push
push
push
inc
sbb
add
icebp
add
add
add
add
out
lods
cmp
stc
stc
hlt
pop
pushf
aam
into
add
popa
add
add
out
adc
inc
pop
xchg
lret
lret
int
insb
fcomi
cltd
popa
ljmp
add
lods
sbb
xor
ja
cmpsl
sub
inc
xchg
pop
shll
out
xor
loopne
cld
jp
loope
in
mov
cmp
insl
jg
pop
lods
rcll
int
and
orl
adc
pop
add
add
add
add
inc
gs
aaa
push
mov
popf
or
add
add
jp
pop
ds
jge
push
iret
sbb
pop
rorl
sub
push
adc
jg
mov
add
mov
movsl
sahf
outsb
mov
xchg
dec
mov
push
ret
stos
dec
jge
imul
sbb
mov
jns
pop
xchg
in
data16
add
add
add
mov
push
adc
cwtl
out
push
sub
movsl
adc
add
popa
add
add
xor
in
mov
mov
imulb
xor
xchg
leave
fs
imul
pusha
ljmp
lds
or
loopne
sub
les
sbb
arpl
adc
dec
jg
pop
add
push
loope
pop
aas
xlat
inc
add
add
add
add
sub
das
jle
jg
imul
cmp
gs
jne
add
popa
add
add
stc
jg
loopew
add
jbe
inc
sbb
mov
and
scas
gs
inc
les
or
addl
out
loope
push
jbe
stos
add
jl
lea
fists
outsb
add
jl
pop
sub
xchg
ficompl
xchg
ret
fmull
xor
add
add
add
and
mov
mov
loopne
loope
add
add
pop
sub
pop
int3
pop
dec
mov
xchg
ljmp
loopne
test
inc
mov
scas
mov
aam
rclb
popf
mov
inc
dec
dec
sub
add
dec
lcall
dec
add
add
xchg
or
pop
in
pop
jmp
into
cmpsl
imul
push
fs
dec
fimuls
add
add
or
ret
lods
sub
mov
push
aaa
loop
add
add
insb
inc
and
dec
daa
inc
inc
scas
sub
into
popf
jns
popl
dec
lods
mov
xor
and
jle
testl
popf
sub
jnp
dec
imul
jmp
pushf
aaa
daa
loop
cltd
movsb
data16
cmc
jns
inc
cmp
sbb
sbb
bound
in
fs
sub
add
add
add
add
ret
pop
iret
fst
enter
xor
icebp
cwtl
loop
add
add
push
pop
bound
mov
and
push
stos
clc
cmp
lock
xchg
pushf
or
out
xchg
lods
cld
daa
push
inc
inc
incb
or
mov
dec
arpl
fcomps
push
inc
ljmp
inc
xchg
pop
fdivrs
sbb
add
add
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
jp
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficoml
inc
add
sbb
sbb
jle
inc
add
sbb
outsb
sbb
mov
inc
add
sbb
push
sbb
or
mov
inc
add
sbb
ret
add
sbb
or
inc
add
pop
inc
add
sbb
sbb
inc
add
test
ficomps
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
pop
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
adc
mov
add
add
sbb
outsl
pop
test
ret
pop
test
movd
mov
push
mov
xlat
fildl
jge
dec
adc
mov
sbb
js
cwtl
xor
fimuls
push
sbb
dec
xchg
add
push
sbb
mov
cwtl
cltd
hlt
xchg
in
mov
lock
dec
push
xor
xchg
aaa
mov
xor
dec
add
add
add
add
mov
push
mov
xlat
push
cmpsb
in
pop
add
popa
add
add
xor
add
movsl
xchg
sub
sti
sbb
std
pop
mov
adc
and
out
xchg
bound
dec
test
fsts
mov
fadds
add
lahf
fstpl
jb
sbb
mov
ds
mov
mov
fwait
iret
dec
popf
mov
fstl
mov
add
add
add
stos
pushl
xchg
push
aad
add
popa
add
add
mov
dec
sbb
dec
sbb
ficomps
xor
dec
sbb
stos
xchg
test
xor
mov
mov
stos
and
jmp
mov
dec
popf
pop
dec
jge
rcll
cmp
es
cmp
mov
push
cmp
xor
addb
add
cmp
cmp
in
fimuls
push
call
add
add
jns
mov
pop
adcl
adc
cli
adcl
and
call
sub
pop
addr16
xor
dec
loopne
pop
repz
enter
rcll
lock
inc
xchg
push
lret
icebp
cmp
in
popa
enter
pop
xor
lock
push
dec
mov
add
add
add
add
mov
sbb
std
negb
sub
push
xlat
add
popa
add
add
sbb
xchg
mov
outsl
lret
pop
jmp
xchg
iret
cld
fs
in
aad
cmp
pop
movsb
xchg
in
or
mov
jmp
dec
mov
pop
repz
push
test
dec
cmpsl
or
jl
lock
dec
push
adc
jbe
clc
in
test
add
pop
jg
call
mov
jne
add
add
add
add
xor
jb
inc
mov
push
fwait
xlat
add
popa
add
add
or
mov
add
adc
push
mov
std
inc
outsl
loope
pop
imul
cs
fwait
nop
mov
xor
sbb
cmp
ret
fmulp
push
pop
imul
aas
fdivrl
xchg
adc
pxor
xchg
and
jl
fldenv
stos
cmpsb
mov
cltd
pop
popf
add
rolb
add
dec
in
fwait
scas
fdiv
pop
sub
lcall
add
sbb
xor
je
jge
pop
pushf
adc
push
std
cmp
imul
jle
pop
dec
std
push
cs
mov
lea
js
inc
out
lds
dec
jle
hlt
xor
xor
push
insb
iret
jo
mov
pop
divb
addl
jo
mov
cmp
add
add
mov
aam
xor
and
pop
fadds
add
add
jae
std
inc
fucomip
xchg
jg
jl
pop
test
movsb
pop
je
push
mov
sub
push
sub
or
cmp
mov
xchg
or
rcrl
rol
push
repnz
aas
mov
daa
cmp
and
fisubs
inc
xchg
push
add
scas
data16
push
dec
movsb
add
dec
stos
fdiv
pop
in
pop
push
add
add
add
add
push
add
mov
out
add
add
popa
add
add
test
aad
stc
loope
repz
popa
sub
push
icebp
jl,pn
sbb
xor
xor
or
fwait
xlat
stc
lret
cltd
scas
scas
scas
inc
jp
mov
or
repz
xchg
xor
das
inc
es
jg
rcrl
data16
push
daa
pusha
and
icebp
pop
add
add
add
add
mov
jmp
fimull
jb
sbb
pop
flds
add
add
pusha
sub
jmp
push
in
jnp
clc
xchg
adc
es
aas
cmc
cmpsb
xchg
sbb
dec
jecxz
fdivrl
test
xchg
les
imul
dec
dec
je
or
ret
cmpsl
xlat
add
or
cmpsl
pop
cli
add
mov
jo
cli
and
repz
push
fldt
add
add
pop
iret
pop
aad
ss
dec
xor
incb
add
add
jae
push
mov
outsb
sahf
dec
cmp
jo
gs
lret
push
cmp
sbb
movsl
sbb
mov
jno
incl
and
ja
stc
mov
jnp
les
aad
push
mov
mov
stc
jmp
jge
mov
inc
sub
aaa
push
xchg
jae
pushf
or
add
add
add
fwait
test
jg
mov
fs
add
popa
add
add
add
pop
in
xlat
subl
mov
js
xchg
jae
nop
add
sbb
data16
pop
arpl
int
ret
add
add
cmp
jmp
stc
cwtl
xchg
out
cmpsl
daa
std
or
sbb
sub
ja
cmp
cmc
or
add
add
add
add
lock
jle
repz
outsb
jae
fiaddl
add
add
bound
and
mov
cli
rcll
and
pop
xchg
scas
rcl
lret
add
jp
insl
xor
push
inc
pusha
jne
lds
push
out
pop
mov
mov
push
push
data16
sub
inc
arpl
or
aam
sahf
rcrl
xor
mov
add
add
cmc
adc
adc
mov
lds
mov
add
add
gs
xchg
aam
aam
loop
sub
int3
mov
mov
rcr
fists
cmp
mov
in
xchg
mov
popf
int
pop
testl
xchg
lret
and
test
mov
xor
aas
clc
imul
in
xchg
inc
loop
sub
icebp
mov
adc
add
add
add
cmp
mov
rclb
xor
add
popa
add
add
jge
add
daa
fidivrl
adc
fimuls
in
add
pop
fldl
loope
sub
loopne
lods
lret
addb
push
push
xchg
jle
inc
loopne,pt
add
shl
fstpt
mov
ljmp
dec
xor
cmpsb
add
sbb
mov
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
mov
add
popa
add
add
xchg
inc
das
jle
in
fimull
mov
test
scas
add
cmp
pop
test
decl
jb
icebp
rclb
cwtl
push
imul
xor
stos
mov
out
pop
cmp
dec
xchg
idivl
jmp
fisubrs
add
add
sub
fildll
pop
xor
fildl
add
add
loopne
movb
insb
dec
lret
test
and
dec
testl
sbb
inc
inc
loope
sub
jmp
mov
push
mov
cmp
sbb
xchg
aad
dec
xchg
mov
push
sbb
add
xchg
aaa
mov
pop
inc
in
inc
push
mov
in
dec
cwtl
lds
add
add
add
adc
testl
out
daa
faddl
add
add
shr
push
xchg
xchg
enter
fmulp
mov
jno
movsl
cli
inc
jecxz
lock
mov
mov
sbbl
and
jp
add
cmp
loop
push
adc
inc
pop
jl
mov
cwtl
enter
mov
xor
adc
lods
insl
push
push
sbb
cmp
enter
mov
or
add
add
add
add
jne
jg
clc
cs
push
in
add
popa
add
add
sub
pop
shrb
out
and
fisttps
sub
aam
fmuls
cmp
jmp
adc
jne
jp
xchg
jo
push
add
adc
idiv
mov
mov
add
loope
cmp
mov
jp
ret
scas
adc
add
add
add
or
dec
mov
je
lcall
add
popa
add
add
cmpsl
and
mov
xlat
dec
ret
dec
xchg
inc
mov
ret
push
hlt
mov
cmp
aad
xchg
mov
jbe
sti
add
mov
dec
das
decb
shll
sbb
adc
scas
push
mov
mov
mov
adc
popa
sub
inc
sub
les
add
add
add
fists
dec
mov
xchg
adc
mov
pop
cmpsb
iret
add
popa
add
add
mov
scas
je
lods
fs
sub
mov
in
ds
sahf
mov
sar
jmp
cmp
imul
daa
dec
das
push
mov
call
xor
sarb
jp
sub
fcompl
hlt
aam
aam
aas
and
aaa
add
add
add
add
fisttps
push
ljmp
add
add
out
and
mov
in
cmp
fcompl
lock
jmp
and
mov
adc
pop
push
out
stc
scas
push
popa
paddd
lds
fadds
xor
xor
shr
cld
dec
pop
inc
mov
adc
testl
and
add
add
add
lahf
arpl
std
jle
out
sbb
mov
rolb
add
add
mov
out
lock
push
aad
or
sub
fadd
in
mov
addr16
push
inc
pop
mov
idiv
dec
outsb
ds
insb
sbb
ja
cli
repz
int
mov
rorl
mov
test
test
or
push
lea
ret
call
sbb
out
sbb
jle
imul
add
jo
and
cmp
jp
inc
leave
rolb
add
add
push
mov
push
pop
or
and
cld
fsub
or
pushf
dec
adc
jecxz
xchg
aam
loopne
add
das
arpl
dec
dec
fisttps
test
not
repnz
mov
lods
xchg
popf
les
adc
in
mov
add
add
add
xchg
nop
ffree
popf
aam
add
dec
sub
add
popa
add
add
out
push
outsb
pusha
pop
or
arpl
out
push
xchg
sub
xchg
scas
push
out
gs
lods
cmp
rolb
sbb
sub
in
jnp
aam
add
pop
fidivl
outsl
xor
mov
test
outsl
in
ret
cs
jo
movsb
in
and
das
push
xlat
add
add
add
add
mov
jbe
hlt
mov
and
cmpsb
adc
roll
add
add
jecxz
dec
pop
xor
nop
sbb
mov
sbbl
dec
jge
mov
ror
inc
cmp
jb
jmp
leave
pop
cmc
sahf
int3
rcrb
arpl
dec
addl
or
jmp
dec
pop
dec
test
loope
popa
ror
call
enter
adc
fistpll
popf
orb
add
add
add
xor
into
mov
sub
out
xchg
push
add
in
roll
add
add
mov
into
aaa
or
dec
dec
mov
inc
idivl
push
jge
lods
or
jle
dec
xchg
push
dec
stos
fs
mov
vpackssdw
mov
pop
or
enter
mov
mov
incb
popa
dec
shrl
mov
lods
xchg
rcll
movl
add
add
add
fucomi
outsb
and
pop
mov
dec
rolb
add
add
test
push
or
jns
dec
xlat
std
fisttps
sbb
mov
pushf
jle
ds
add
lahf
jbe
mov
out
mov
addr16
jnp
shlb
sbb
cmp
cwtl
add
or
xchg
dec
test
mov
xchg
loopne
clc
lds
les
xor
inc
dec
cmp
pop
pop
pusha
dec
lods
add
add
add
add
mov
and
inc
scas
rolb
add
add
aad
pop
cmp
imul
pop
enter
loope
arpl
clc
mov
mov
in
lret
add
cmp
ret
cmc
inc
or
fsubr
xchg
sbb
lock
mov
test
inc
jno
lret
in
imul
jecxz
and
add
add
add
add
stc
call
into
inc
mov
mov
roll
add
add
add
nop
dec
shll
int
daa
sbb
pop
out
jge
dec
mov
in
icebp
mov
in
fnstenv
dec
and
pusha
jns
add
in
add
jns
mov
das
jl
inc
mov
jb
outsl
mov
jno
aas
rolb
sahf
bound
jge
pop
add
add
add
add
sub
sub
or
adc
popa
add
add
xor
push
dec
jp
push
and
mov
adc
pop
mov
sub
add
inc
fistl
push
jmp
out
add
jmp
push
insl
mov
or
xor
pop
loope
negl
pop
lahf
add
mov
inc
ret
or
xor
pushf
cmp
inc
jge
out
inc
xor
aad
add
add
add
add
int3
sbb
out
loopne
lods
inc
cmp
inc
rcl
add
popa
add
add
mov
pop
pop
mov
add
lahf
mov
jb
or
andb
xor
test
loope
or
xchg
sub
lods
flds
push
js
sub
xor
mov
adc
cmpsb
sub
sbb
adc
cmp
test
int3
add
add
add
add
test
fildll
xor
cmpsb
or
aam
add
add
mov
pushf
xchg
test
arpl
pop
mov
into
int
push
dec
popa
sub
xchg
pop
dec
push
cmpsl
scas
adc
in
mov
fidivl
gs
fistpll
cli
mov
jl
in
or
fwait
lea
add
xchg
jo
aas
daa
add
add
add
add
lods
fcomi
sarb
add
or
aam
add
add
jne
jle
adcl
lock
loopne
leave
adc
mov
mov
cmpsb
sbb
pop
dec
mov
and
stc
sub
xchg
nop
mov
xchg
pushf
pop
mov
mov
leave
pop
cmp
lret
push
cmp
mov
inc
dec
and
or
jmp
add
add
add
divl
dec
cmp
dec
sahf
mov
and
popa
add
add
dec
adc
out
jne
xchg
sub
push
dec
pop
xor
adc
push
js
add
pop
pop
std
aam
or
push
sub
inc
shlb
mov
pop
cmp
xchg
mov
and
rcr
pop
sbb
inc
gs
xchg
daa
mov
js
cmp
shlb
mov
add
add
add
arpl
jge
mov
daa
test
aad
add
add
enter
adcl
sbbb
dec
fstpt
cld
testl
mov
and
into
push
shll
cmp
xchg
sbbb
imul
daa
cmpsl
adc
xor
mov
push
xchg
or
repnz
pop
sti
fwait
je
lcall
add
add
add
add
push
imul
jno
sub
mov
add
popa
add
add
jp
dec
jo
push
faddl
fldcw
push
push
inc
das
je
push
and
fidivrl
inc
adc
xor
mov
push
rorl
pushf
xchg
insb
xor
loopne
rclb
xchg
cmpsl
je
mov
dec
and
shlb
dec
lock
mov
push
dec
inc
push
adc
add
add
add
daa
ss
xor
and
out
jmp
add
add
lret
adc
jbe
mov
or
scas
test
jl
xor
sub
push
mov
mov
and
xlat
ja
dec
mov
mov
iret
xchg
pop
mov
das
jb
mov
mov
outsb
pop
clc
fidivrl
sub
jl
popf
mov
add
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
dec
fldl
add
add
xlat
cli
mov
pusha
lahf
jb
adc
fwait
mov
inc
add
push
mov
or
iret
sbbb
or
lret
adc
cli
pop
push
data16
outsl
adc
mov
xchg
mov
shl
pop
pop
pop
xlat
dec
dec
push
stos
xor
dec
hlt
inc
sti
iret
xchg
jl
cmp
add
add
add
push
aad
out
fucomip
ss
cmp
out
je
fldl
add
add
push
lahf
test
or
pop
outsl
inc
pop
push
je
outsb
push
mov
push
stc
jb
in
stos
inc
mov
pop
js
cmp
leave
out
xchg
push
pop
frstor
sbb
sbb
mov
push
inc
mov
daa
mov
out
xor
fucomi
mov
in
out
aas
add
add
add
add
in
cld
fisubrl
sbb
insl
orl
add
add
inc
sahf
clc
cmp
or
sar
fucom
in
xchg
jnp
push
pushaw
js
arpl
mov
sub
fnsave
imul
insb
mov
fnstenv
ret
sbb
mov
lahf
sbb
mov
jne
in
iret
jle
stos
jo
jle
jmp
mov
add
add
add
cmp
paddsb
nop
shll
push
fiadds
add
add
mov
or
movsb
test
leave
dec
popa
lods
in
jns
xor
call
shlb
inc
test
das
add
scas
cmp
lret
or
aaa
lret
jns
test
jbe
insb
loope
or
fisttps
mov
inc
xchg
push
or
inc
xchg
dec
imull
add
add
add
xchg
cmpl
push
loopne
lcall
add
popa
add
add
pop
in
fistpll
pop
xor
sub
leave
mov
int3
xchg
mov
mov
shrl
mov
xor
push
cmpl
mov
mov
test
scas
lret
cmp
roll
cmpsl
xchg
jmp
lret
jne
cltd
clc
adc
imul
add
test
and
pop
dec
xchg
push
dec
das
filds
add
add
inc
cmp
stos
iret
shrb
cmp
inc
dec
xchg
xchg
dec
xor
or
ds
mov
sub
stos
pop
test
movsb
ss
jbe
jb
adc
xchg
push
scas
xlat
filds
in
lods
pop
out
es
stc
xchg
and
mov
pop
orl
imul
add
add
aam
fnstsw
out
fcmovu
in
cmp
jg
filds
add
add
loop
xorb
rcr
dec
in
sbb
xchg
out
inc
jb
sub
or
repz
lahf
pop
imul
sbb
icebp
push
out
cmp
mov
mov
xchg
shlb
sarb
mov
adc
test
mov
test
xchg
push
fiaddl
add
add
add
stc
sbb
inc
jecxz
mov
push
mov
jno
filds
add
add
pop
push
xor
adc
fildll
inc
arpl
gs
xchg
addl
inc
fcmovnb
inc
testl
mov
and
pushf
xlat
mov
ljmp
pop
ljmp
fs
pusha
pushf
rorl
add
add
add
mov
mov
icebp
and
jle
push
loopne
add
add
dec
nop
jge
scas
es
jbe
popf
ljmp
inc
out
jmp
and
xchg
jo
mov
or
mov
jle
outsb
fucomip
jmp
jns
in
mov
cmp
rol
outsl
int
jne
sbb
mov
dec
popa
jecxz,pn
addr16
adcb
add
add
add
xlat
repz
das
cli
fists
dec
es
loop
mov
mov
add
popa
add
add
xchg
popf
push
fsub
mov
ljmp
outsb
fsts
ss
jnp
sub
lret
int3
mov
mov
push
xor
repz
xor
lret
pop
mov
mov
loope
cwtl
dec
scas
fidivrl
dec
js
les
fisubs
pop
ja
jecxz
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
repnz
add
add
add
add
add
add
add
call
aaa
add
lock
add
daa
mov
add
aaa
add
add
push
outsl
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
