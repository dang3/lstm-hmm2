push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
push
into
cmp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
clc
mov
addr16
rclb
push
aam
out
inc
aad
and
notb
cmc
mov
pop
xchg
mov
in
out
enter
mov
inc
adc
loopne
xor
or
pop
test
sarl
int
adc
lock
fidivl
movsb
into
mov
cmc
test
int
mov
add
adc
ret
push
movsb
inc
xchg
outsb
stos
push
roll
lret
mov
inc
pop
jb
pop
cltd
sbb
out
in
test
movsb
sbb
cmp
jbe
push
cmpsl
dec
lret
dec
movsl
sbb
and
sub
fldcw
dec
in
xor
shl
lods
fst
sub
adc
out
inc
ficoml
cmp
stos
repz
negl
scas
jle
stos
push
shrl
dec
pop
xor
xor
jle
dec
add
push
adc
pop
inc
ja
notb
xor
xor
lea
lcall
and
aas
enter
mov
or
lea
cmc
fcoms
push
lret
push
add
dec
int
pop
push
jmp
cmp
lcall
test
ror
mov
dec
daa
add
inc
pop
stc
pop
es
add
pop
mov
push
push
es
pop
test
mov
jnp
sbb
mov
mov
pop
test
pop
jns
std
lret
test
sub
jo
sub
cmc
xchg
out
imul
sub
leave
cmp
imul
jmp
mov
repz
inc
dec
nop
ret
or
push
sub
aam
lods
fidivrl
mov
push
pop
pop
push
mov
lahf
mov
shll
mov
out
mov
test
sbb
rcr
mov
std
xchg
popa
cld
stos
xchg
mov
pop
mov
mov
mov
outsl
das
sahf
pop
aaa
jnp
xchg
mov
fmuls
xor
cmp
adc
jl
shl
mov
movsl
shll
ret
psrad
jle
fdivr
pop
mov
mov
xchg
arpl
mov
jmp
lret
xchg
sbb
lret
cmp
add
adc
or
lock
dec
dec
mov
pop
and
test
test
mov
pusha
cmpsb
popf
mov
xchg
lods
mov
dec
icebp
sahf
add
sub
mov
insb
xlat
sti
sbb
add
movb
imul
mov
jae
cld
push
xchg
mov
pop
out
rolb
je
loopne
sub
call
imul
icebp
xchg
mov
pslld
xchg
inc
repnz
pop
jne
inc
lret
inc
imul
sub
movsb
adcl
push
mov
in
jns
sbb
push
imull
cwtl
stos
xchg
xchg
fstpl
inc
leave
jne
hlt
inc
mov
add
std
pop
fxch
lods
cs
dec
hlt
jb
adc
test
fisubl
lock
fdivrs
jp
xchg
stc
sbb
jmp
sub
es
jns
dec
jecxz
jmp
mov
ret
div
popa
xlat
xchg
dec
loopne
lea
mov
fldcw
outsb
xchg
das
sbb
xor
sbb
pusha
test
in
sar
xchg
cmp
movsl
cld
adc
pop
xor
in
push
arpl
mov
jbe
or
and
xchg
ret
mov
inc
mov
jg
ss
lods
mov
inc
in
pop
mov
jbe
xor
add
adc
jl
das
fcmovnb
push
lea
std
in
pushf
pop
jb
jecxz
adc
les
pop
dec
fs
xor
pop
sub
mov
fwait
and
es
ficompl
aam
lcall
cwtl
arpl
dec
and
xchg
mov
sahf
dec
das
sbb
cmp
shlb
jbe
repnz
cmp
mov
push
sbbb
mov
je
gs
and
outsb
cmpsl
scas
inc
jmp
and
push
jp
fistps
jmp
jo
cmpsb
rolb
in
aaa
mov
add
sarb
xor
divb
inc
adc
andb
imul
std
ss
arpl
dec
and
enter
int
sbb
ja
mov
mov
call
fldl
inc
iret
out
cmp
sub
gs
aas
fidivl
push
dec
adc
push
imul
shlb
mov
cmp
jnp
daa
dec
subb
je
add
push
jmp
test
adc
popf
int
adc
mov
lods
lret
mov
jl
push
xchg
and
lret
movb
adc
loop
sbbl
out
out
sbb
stos
mov
xchg
mov
mov
out
inc
in
dec
call
or
jmp
test
xor
and
pop
fcomi
fnstenv
mov
mov
aaa
ret
add
arpl
inc
fwait
dec
imul
repz
lss
hlt
mov
outsb
lcall
jl
cmp
dec
sbb
pop
out
icebp
and
sub
out
adc
dec
sub
int
push
fbld
adc
insl
add
mov
xlat
mov
movsl
sbb
or
ficoml
sub
cmp
in
xchg
add
pushw
fwait
dec
mov
test
push
inc
lret
les
std
cmp
xchg
mov
into
or
add
das
lahf
ret
mov
call
imul
push
xor
dec
xchg
sahf
dec
movsl
mov
xchg
pop
lods
push
mov
mov
fcmovnu
pop
push
out
rcr
sarl
negb
insb
jg
cmc
mov
loop
das
stos
clc
cltd
or
lea
lods
loopne
and
sub
push
shrl
je
inc
fcomi
jnp,pn
lahf
call
pushf
or
aaa
into
scas
xchg
ficoms
add
mov
sbb
push
outsb
aad
divb
and
fsubrl
pop
in
divb
popf
pop
repnz
xor
cmp
dec
call
test
sbb
dec
mov
test
fwait
push
inc
shrl
push
stos
sbb
push
leave
and
sub
sbb
sbb
or
lcall
addb
aad
inc
push
test
push
aas
mov
jne
mov
daa
mov
es
rcrl
dec
repnz
cli
pop
jnp,pn
pushf
jecxz
lods
dec
clc
sub
frstor
xchg
loop
jo
sub
push
test
mov
sub
pop
mov
jl
cmpsl
sbb
dec
sub
xchg
mov
inc
mov
lea
mov
xchg
outsb
sbb
pusha
insb
or
dec
mov
and
dec
test
test
push
push
mov
pop
lds
jge
int3
pop
ljmp
iret
jl
jae
test
jo
arpl
jl
lahf
and
cs
jmp
xor
std
shlb
mov
cmp
and
sarl
jle
in
inc
iret
lds
adc
inc
push
arpl
out
and
or
and
sub
sub
add
popa
mov
push
mov
loopne
xor
cmp
jae
pop
sti
push
inc
stc
int3
rcll
or
mov
xchg
lds
test
lret
dec
jbe
xor
cmp
jns
into
xchg
xor
pushf
lret
addr16
lret
xlat
jae
shrb
mov
mov
xor
repnz
push
pop
inc
orl
scas
pop
cmp
lock
adc
mov
cmpl
insl
ret
xchg
ret
ficomps
inc
sub
pop
mov
pop
lea
loopne
sbb
test
mov
mov
bound
outsl
hlt
cwtl
add
sub
call
scas
icebp
xor
xchg
and
subb
xor
lds
cmp
out
adc
jno
push
pop
clc
sub
inc
mov
or
ljmp
ficomps
arpl
jmp
imul
sbb
or
sbb
dec
and
lods
test
push
hlt
fisubl
shl
inc
dec
repnz
neg
loope
xchg
arpl
filds
xchg
insb
sub
and
hlt
test
mov
mov
cmp
add
adc
and
mov
sahf
cmc
mov
mov
mul
jns
ss
lret
lds
cmp
inc
add
jl
adc
add
and
pop
xchg
mov
popf
vcmpps
xor
mov
dec
mov
mov
js
push
cmp
push
mov
jmp
push
sub
pop
pop
fistps
adc
pop
je
jl
jnp
mov
and
sub
nop
out
pop
jns
por
imul
gs
mov
cmpl
mov
lahf
stc
aas
mov
sbb
sbb
fisttpll
sbb
int
cmc
push
ss
cmc
push
mov
pop
sub
in
inc
in
push
jg
adc
scas
dec
movsb
cld
dec
loop
test
pop
repnz
cmp
mov
push
cmc
push
movsb
and
fldt
sbb
inc
mov
and
dec
or
lret
mov
inc
mov
inc
jecxz
enter
in
xchg
test
cwtl
sub
rorl
push
insb
rorl
jo
mull
repz
and
cmp
add
mov
clc
dec
inc
lea
adcb
fildl
jecxz
or
rolb
xchg
jge
dec
ret
js
in
test
movsb
jb
fidivrl
adcb
mov
lods
aad
fldl
push
fistl
cltd
loope
pusha
inc
test
icebp
or
je
pop
and
lods
jb
mov
pop
sub
xchg
xchg
push
mov
outsl
sti
iret
int3
js
scas
repz
rcrb
or
push
inc
xchg
ret
mov
or
pop
sbb
bound
movsl
mov
sub
sbb
and
cmp
imul
mov
cmp
dec
outsb
dec
dec
cmpsb
adc
dec
shl
cmp
inc
aas
bnd
push
out
inc
movsl
xchg
jmp
mov
jb
shll
pop
int3
lock
cmpsb
mov
aad
stos
aam
in
inc
cs
mov
jmp
xchg
sub
pop
mov
sbb
sbb
fisubrl
xor
daa
xchg
jns
push
popf
jno
cmc
aam
cwtl
sbb
lds
xchg
dec
push
push
cmp
pop
push
jmp
mov
sub
fucom
outsl
pop
xor
mov
sub
divl
shl
mov
jnp
sarb
bound
setg
cwtl
push
mov
mov
bound
xchg
pop
sarb
test
add
jecxz
push
stos
outsl
cmp
out
mov
mov
push
fdiv
sub
sbb
jg
mov
movsl
test
mov
jo
mov
xor
or
popf
inc
loopne
out
jp
jno
mov
enter
jle
xorb
add
in
imul
push
ret
cwtl
aad
insl
cmp
mov
dec
sbb
cwtl
clc
imul
out
in
stos
sub
and
mov
mov
rol
cmp
and
inc
sub
jge
scas
cli
sbb
xor
mov
and
mov
mov
jns
aam
jb
aas
dec
cmpsb
mov
mov
popf
mov
mov
add
nop
sahf
xlat
mov
push
cmp
hlt
jnp
adc
in
sbb
and
jecxz
cmp
add
pop
adc
cmp
or
sahf
mov
cmp
out
movsl
mov
clc
adcl
js
ret
shlb
out
adc
subb
sbbl
mov
enter
cmp
cmp
inc
aaa
cli
xchg
adc
pop
insl
pop
pop
je
pop
fwait
mov
arpl
mov
jle
lahf
mov
int3
stc
dec
adc
pop
loopne
pop
fldcw
mov
ret
sbb
push
cld
pushf
dec
push
lods
test
in
out
jl
gs
pushf
dec
in
mov
fwait
add
jmp
mov
fwait
nop
stc
cwtl
sbbb
xchg
int3
add
add
and
push
xchg
popf
incl
mov
and
mov
in
jns
arpl
mov
pop
mov
adc
es
mov
std
in
mov
cmc
popf
mov
mov
jnp
inc
imul
adc
sti
xor
push
movsl
or
push
mov
loopne
ficomps
mov
sbb
mov
or
call
outsl
das
std
ljmp
insb
bound
bound
and
xor
int
scas
sbb
dec
ds
int
push
popf
aad
dec
cmc
jp
outsb
push
sub
sub
xlat
or
fdivl
rclb
gs
dec
and
push
std
inc
into
jmp
test
add
les
push
dec
add
lret
cmpsl
shrl
push
mov
sub
add
push
es
mov
adc
add
push
rclb
mov
mov
cmp
cmp
pop
scas
xor
andb
popa
add
addr16
xchg
dec
iret
and
out
je
pop
imul
stos
mov
ficompl
xchg
dec
jle
mov
jl
mov
nop
mov
mov
test
sbb
inc
ljmp
arpl
testl
arpl
adc
stc
gs
pop
fldenv
lahf
paddsb
inc
pop
pusha
add
mov
jl
push
push
xchg
or
es
and
or
xor
dec
add
push
inc
inc
sub
sahf
and
add
hlt
pusha
dec
jae
xor
inc
xchg
and
cltd
mov
jmp
lds
push
bound
mull
adc
fwait
cmp
lods
push
clc
push
leave
mov
and
daa
add
call
cmp
mov
xor
cld
and
jo
push
jge
ds
shrb
loopne
push
loopne
dec
xchg
pushf
dec
int
je
stos
int
xchg
pxor
lahf
or
pop
mov
in
loop
cld
int3
jg
xor
test
push
inc
clc
jmp
test
dec
bound
dec
jp
stos
or
mov
gs
push
lock
popf
iret
lea
sub
and
dec
arpl
dec
xor
jae
lds
adc
cmpsl
pop
xchg
decb
rcll
push
xlat
mov
push
lea
sub
cmp
and
adc
or
imul
xor
aas
mov
mov
cmpsl
or
fisubrl
arpl
sbb
ret
mov
loop
nop
ret
call
xor
shll
xchg
lods
xchg
xchg
push
mov
outsb
sub
sub
inc
into
gs
jb
jmp
sbb
xchg
test
sub
daa
xchg
ffreep
outsb
lret
ror
sar
or
andb
scas
sarl
sbb
mov
mov
inc
ficompl
mov
inc
add
ds
rcrl
pop
mov
minps
fmuls
in
lret
pop
outsl
push
ds
push
cmp
push
adc
dec
mov
movl
add
sbb
or
dec
jmp
ja
gs
cmp
ret
stc
push
fildl
add
and
dec
bound
sbb
cmc
add
loopne
test
pop
daa
xor
sbb
cmp
lret
mov
out
cld
pop
mov
sbb
mov
dec
mov
add
mov
push
adc
bound
shll
shlb
cmp
ret
movl
add
sbb
sub
cmpsb
or
jge
jl
popa
sbb
mov
movl
dec
inc
add
test
sti
scas
std
test
pusha
add
scas
pop
xchg
sbb
decb
fnsave
push
aas
int3
mov
sub
mov
imul
mov
inc
xchg
sbb
mov
pusha
mov
sahf
inc
lods
insl
cld
cmp
jmp
leave
in
clc
les
and
in
test
cmp
jg
stc
sbb
adc
insb
sar
jno
jne
xor
dec
cld
mov
pop
jge
pop
xor
jmp
xchg
rcll
mov
repnz
inc
shl
inc
lods
fwait
and
cltd
adc
arpl
fcmovnu
sub
test
mov
movsl
sbb
loop,pn
nop
xlat
and
xor
popf
mov
pop
loope
icebp
sub
and
mov
std
cli
jecxz
push
pop
pop
jmp
jle
popa
cmpsb
add
sar
shll
dec
mov
mov
hlt
push
subl
adc
lcall
cltd
into
lods
loopne
lcall
ror
xchg
push
mov
popf
cmp
fsubrs
into
lahf
push
xor
setl
fmull
lret
sub
pop
cli
xchg
shll
pop
cmp
imul
daa
stos
jb
sub
or
rcrb
xor
inc
mov
dec
mov
and
cltd
mov
xor
pop
adc
lds
test
xlat
testl
lods
or
lds
push
loopne,pt
lcall
jo
cmp
fimull
jecxz
ja
inc
add
pushf
xor
mov
imul
xchg
ja
push
ja
jle
inc
mov
and
or
add
add
add
loop
and
cli
add
daa
mov
mov
jae
or
call
into
shll
fsubrs
pop
les
sub
mov
arpl
lock
out
xchg
pusha
jmp
push
cmpl
adc
repnz
jge,pn
or
rcll
movsl
stos
lods
out
push
ret
mov
push
push
or
push
add
sbb
mov
out
and
daa
dec
loope
cwtl
lods
add
out
gs
les
mov
fiadds
pop
es
mov
or
dec
push
jo
adc
ret
xchg
fmul
es
xchg
lods
imul
xchg
decl
out
imul
repz
ret
js
sahf
movsb
push
std
xor
cmp
sti
scas
pop
cmpsb
jae
adc
cwtl
aas
imul
in
mov
and
push
imull
pop
dec
jns
add
pop
lock
xchg
mov
mov
push
jge
dec
adc
popf
xchg
adc
add
movsl
push
loope
jbe
mov
cwtl
aam
and
sbb
jle
sub
mov
out
push
mov
mov
shlb
mov
mov
mov
int
faddl
call
sbb
sbb
jecxz
pusha
mov
mov
xor
daa
mov
popf
inc
out
adc
popa
out
inc
lahf
push
cmp
cmp
jecxz
outsb
fwait
data16
push
dec
jnp
mov
xor
dec
and
mov
add
jno
sub
inc
inc
xlat
mov
cmp
ret
mov
dec
int3
cs
repnz
fdivrl
jg
popa
hlt
pop
das
dec
mov
and
push
fistpl
enter
aaa
aaa
int3
clc
clc
iret
jmp
mov
mov
enter
out
insb
xchg
icebp
push
xchg
push
and
pop
arpl
imul
sub
andl
insl
testb
call
adc
push
xor
or
sub
inc
pusha
mov
fdivr
orb
push
pop
mov
add
dec
jle
inc
dec
add
sbb
pop
sbb
or
xchg
mov
int
mov
test
and
mov
ficoms
inc
dec
std
or
and
lods
in
lods
add
xor
adc
int3
push
lret
mov
dec
ffreep
test
outsl
pop
sbb
cs
call
jo
cmp
sub
in
or
and
push
mov
inc
xor
mov
dec
maxps
add
cmpsl
lcall
jg
rcll
iret
loopne
jp
cmp
arpl
imul
hlt
inc
data16
pop
scas
or
aam
stos
loop
and
mov
ljmp
push
jge
add
rcrb
incb
mov
out
push
ds
mov
xchg
data16
pusha
dec
push
pop
push
sub
push
daa
repz
mov
add
jl
sahf
leave
sub
pop
pop
imul
or
inc
cmpsb
daa
pop
nop
push
or
mov
and
mov
mulb
xor
stc
fwait
mov
sahf
pop
inc
out
push
sub
stos
popf
int
fisubl
js
out
cmpb
clc
inc
inc
jmp
mul
mov
arpl
insb
stos
push
mov
and
lahf
add
add
testb
aas
and
sbb
cmc
incl
movsl
test
mov
vpmaxsw
jbe
ficoml
aas
in
mov
dec
mov
xchg
mov
sbbb
mov
pop
and
clc
jno
jnp
or
inc
call
sub
push
mov
jle
lcall
in
pushf
stos
cld
add
mov
pcmpgtd
mov
pop
cmp
xchg
xor
mov
push
cmp
adc
scas
clc
inc
sbb
xorl
mov
ds
adc
iret
nop
xor
pushf
cmpsb
sub
cmp
jne
pop
or
mov
rcrl
sarl
pop
xchg
add
xor
xchg
push
les
out
icebp
mov
sbb
rorl
mov
dec
bnd
repz
lods
fldenv
aaa
jmp
pop
clc
hlt
out
ret
cmp
mov
pop
xorb
mov
and
loop
popf
lret
or
cmp
sbb
pop
pop
dec
aam
aaa
enter
xchg
test
insl
leave
xor
mov
inc
add
pop
adc
pop
sub
das
jno
lahf
adc
jnp
sahf
or
xchg
jno
push
sub
dec
and
and
mov
pop
and
lret
testl
cmp
inc
jg
cli
lret
push
add
sbb
test
jecxz
scas
sbb
cli
add
pop
pop
loope
and
out
mov
lods
lea
mov
xchg
xchg
lcall
or
or
hlt
jae
push
sbb
mov
cli
xor
sti
jnp
into
int3
mov
jmp
sub
hlt
adc
aas
test
inc
adc
lds
rolb
aas
xor
popf
sbb
roll
dec
jmp
xchg
test
lods
cmp
cld
rclb
icebp
nop
aam
pop
imul
dec
test
push
jmp
push
ljmp
scas
popf
repz
adc
mov
xchg
jnp
xchg
cmp
movsl
out
sub
add
imul
ds
push
mov
js
pop
imul
scas
cmp
or
movsb
lret
pop
push
mov
ja
dec
pop
pushf
repnz
pop
bound
repz
in
test
push
xor
scas
pop
cltd
dec
cmpsl
jns
test
or
push
xchg
movsl
lcall
nop
xchg
cmp
fcomps
stc
test
and
sub
stos
les
inc
sbb
loope
xor
pushf
jl
aaa
inc
mov
cmp
add
cmp
inc
ds
fsubrs
repnz
inc
shrl
shrb
xchg
out
popa
into
lea
divb
mov
add
stc
dec
mov
lock
ljmp
dec
cmc
ret
inc
fdivrs
movsl
jnp
lea
adc
sub
xchg
cwtl
or
jp
loopne
xorl
loope
mov
gs
push
outsb
into
add
testl
sbb
gs
gs
fcoml
adc
imul
out
or
test
rcll
sub
imul
loop
sti
jns
div
out
ret
pop
loop
sahf
pop
xlat
add
mov
xor
inc
hlt
xor
mov
xchg
and
push
dec
xor
jmp
pop
adc
adc
jo
or
push
cmp
popf
xchg
sbb
faddl
call
dec
xchg
push
dec
or
scas
sbb
inc
sbb
dec
and
add
scas
lock
aas
dec
das
std
dec
xchg
js
shlb
xchg
jo
adc
cmpsl
mov
push
nop
adc
movb
out
mov
stc
xchg
mov
mov
pop
lret
aam
add
jge
fwait
push
pop
xor
jmp
mov
repnz
adc
movsb
shr
push
and
insb
popf
out
jge
cwtl
daa
fistpll
pop
popa
mov
stc
test
jbe
pusha
addr16
sbb
pusha
xor
cmp
jbe
inc
add
inc
stc
leave
pop
adcl
sub
roll
pusha
mov
xchg
push
repz
or
in
xchg
mov
lcall
fistpll
add
imul
mulb
xchg
sbbb
xorb
mov
jmp
xchg
scas
sub
in
aas
dec
xlat
sti
inc
shl
inc
das
jnp
push
js
push
adc
lahf
popa
push
pusha
scas
inc
push
test
cltd
call
xor
arpl
xor
add
ficoms
rcrb
cmp
aas
data16
adc
mov
push
inc
mov
gs
push
popf
pop
and
mov
jecxz
push
into
jge
mov
push
ret
frstor
bound
popf
mov
dec
ficompl
mov
adc
pop
mov
push
movsl
shlb
stos
aam
imul
pop
mov
je
in
jno
xor
dec
jmp
xor
nop
sub
xchg
rorl
inc
xor
ja
insl
mov
mov
cmp
adc
jp
imul
jb
sti
les
inc
sub
scas
add
jp
jnp
or
jnp
scas
and
sub
jo
insl
loop
adc
nop
add
cmp
sub
and
pop
iret
xchg
pop
xchg
icebp
xchg
insb
call
pusha
jge
cmp
popf
sbb
xlat
fs
inc
int
addb
sub
sbb
popa
outsb
dec
dec
sub
mov
fnstcw
test
jno
pop
into
inc
mov
mov
mov
jg
push
pop
push
mov
ficoms
push
lcall
cmp
xor
sbb
out
mov
int3
sbb
and
je
lcallw
sbb
mov
in
cwtl
icebp
sbb
inc
sbb
ss
mov
fcmovu
imul
sbb
int
or
arpl
jno
les
sbb
in
loope
cmc
xor
jnp
pop
andb
aad
cld
and
pop
mov
jle
fidivrl
jb
adc
popa
xor
inc
dec
push
cli
inc
sti
in
dec
cmp
push
push
je
nop
pop
cltd
xchg
lret
js
daa
ljmp
xor
je
mov
sub
push
and
sbb
mov
aaa
and
mov
sahf
mov
clc
jp
push
pop
aaa
dec
cli
inc
jmp
pop
jb
adc
add
pop
mov
adc
push
out
mov
ljmp
jne
mov
inc
pop
pop
ljmp
nop
xchg
push
cmp
scas
lcall
push
je
jo
addr16
jge
xor
test
or
adc
stos
cmpsl
movsl
mov
or
cmp
in
ds
outsl
jo
sbb
hlt
insl
mov
pop
je
mov
xor
mov
and
sub
daa
shll
lods
push
cwtl
push
out
xor
mov
ja
sbb
sbb
pop
mov
fbld
and
jns
jle
mov
lahf
xchg
outsb
testl
push
std
out
inc
pop
psllq
pop
cmp
in
push
cmp
sahf
push
adc
sub
repz
clc
pusha
push
int3
cmpsb
mov
into
pop
clc
xchg
daa
popa
rcrl
bound
cmp
jnp
mov
or
dec
sbb
cmpb
arpl
cmp
divb
push
mov
call
aam
mov
sbb
push
add
sbb
mov
push
sbb
cmc
cmp
in
add
mov
sar
sub
ss
pop
add
cld
addb
xchg
xchg
fimuls
hlt
or
add
jnp
jp
addr16
je
xchg
aam
inc
jl
subb
icebp
shrb
lret
loop
dec
lds
sub
fsubl
xor
test
jge
lret
cmc
cmpsb
sub
jp
ret
outsl
or
pop
rcrl
xor
and
aad
and
mov
fisubl
stc
inc
mov
repz
or
mov
pop
pop
xor
popl
adcl
loop
repnz
pop
add
gs
or
test
popa
add
dec
push
pop
mov
push
enter
out
inc
mov
dec
into
pop
mov
cli
xchg
xor
movsb
cli
inc
jmp
in
or
loopne
loopne
cmpsl
aad
std
xor
popf
lods
in
mov
ja
cli
enter
negb
stos
cs
xor
dec
push
fbstp
leave
sub
subl
cs
adc
add
repnz
js
mov
loop
nop
pop
xchg
inc
call
in
xchg
in
js
jg
add
iret
sub
inc
call
sbb
dec
sahf
rolb
in
incl
dec
inc
cwtl
fisubl
std
in
mov
jns
xchg
fs
add
fxch
movaps
mov
test
sbb
sub
xchg
test
imul
sbb
mov
mov
ret
cmp
add
xchg
sub
loopne
scas
fnsave
mov
and
daa
push
scas
das
andb
arpl
xchg
or
mov
inc
sbb
out
pop
and
pop
subb
ja
clc
pop
mov
pop
jge
push
sbb
sub
add
add
xchg
loopne
and
inc
and
je,pn
xor
call
pushf
push
mov
ss
mov
pop
add
add
mov
cmp
les
pop
movsl
fisubl
ja
fs
fwait
xor
jecxz
fcmovnu
xchg
xorb
lock
lret
js
add
or
push
mov
cmp
dec
cmp
xchg
sub
mov
fiaddl
sbb
push
lods
shlb
scas
mov
addr16
lods
cmp
mov
pop
fmull
adc
jbe
ficompl
xchg
scas
cmp
leave
dec
stc
add
pop
popa
dec
scas
and
or
and
imul
mov
pop
pop
and
jnp
jmp
mov
jp
sub
sub
cmpsb
jne
int
fisubs
jbe
addr16
mov
jb
bound
dec
les
lahf
xor
pop
fs
inc
cld
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
mov
pop
jp
xor
lds
stos
sahf
daa
jmp
mov
scas
int3
les
lret
sbb
push
xchg
jge
rorb
fisubl
test
pop
add
jnp
les
or
dec
add
xchg
ja
mov
xor
mov
fidivrl
push
jne
mov
les
xchg
jbe
lret
in
xchg
inc
or
cmp
add
xor
dec
sbb
bound
scas
sbb
call
data16
and
push
adc
icebp
mov
push
bound
pop
jo
scas
rcr
insl
mov
inc
and
dec
stc
mov
sub
add
sti
lcall
mov
push
add
pop
push
pop
cmp
mov
xor
lock
out
scas
rorb
jbe
fdivr
mov
adc
ret
fmuls
pop
adc
mov
sub
add
add
and
xchg
ror
popa
int3
jnp
lret
mov
jae
xor
in
cli
std
xlat
mov
test
push
out
lods
pop
cs
pop
imul
cmpsl
popa
out
mov
mov
mov
jmp
iret
roll
push
mov
lret
sub
int
jne
lahf
push
mov
pop
movl
sbb
cmp
movsb
jo
pop
ror
adc
and
iret
or
add
fidivs
cmp
pushf
push
mov
dec
sar
test
push
cs
daa
ss
loop
mov
adc
jecxz
mov
aam
cmp
inc
inc
clc
lcall
imul
jle
push
jbe
scas
push
inc
or
mov
adc
push
push
adc
xchg
sarb
inc
jbe
sbb
and
addl
cmc
icebp
ret
mov
scas
or
fmuls
mov
test
jecxz
jl
and
mov
int3
scas
inc
fnstsw
xchg
cmpsl
push
loop
fprem
jp
xor
inc
add
insb
mov
ljmp
das
mov
cwtl
jg
aam
mov
test
adc
lahf
sbb
repz
push
out
adc
call
sub
mov
xchg
inc
nop
iret
ljmp
add
inc
jg
nop
push
sbb
outsb
sub
inc
mov
sar
cli
inc
in
adc
mov
jbe
leave
leave
sub
push
dec
mov
cmp
stos
fsubs
or
pop
jb
or
les
or
fdivr
popf
repnz
mov
sbbb
cmpsl
decb
scas
jb
pop
rorb
imulb
push
aas
dec
pop
dec
sub
test
push
stos
shll
fs
jae
dec
clc
cmp
cmp
cmpsb
push
cmp
insl
lret
adc
scas
aas
outsl
add
aaa
ficompl
sahf
jmp
test
cmpb
xchg
dec
sbb
lods
shll
jl
sbb
popf
inc
outsb
lods
ret
faddl
outsb
cmp
xchg
dec
dec
jns
mov
dec
test
adc
cmp
pop
cld
imul
cmc
clc
xor
jb
adc
jnp
dec
ret
loopne
pop
mov
dec
sti
sti
repnz
inc
pop
in
dec
cmpl
add
cs
dec
lods
mov
xchg
les
jo
outsb
xor
repz
mov
mov
frstor
int3
clc
lds
cmp
call
ljmp
out
testb
mov
push
add
mov
pop
sub
xor
ljmp
int
std
sbb
jp
cmp
iret
stos
add
jns
mov
inc
inc
mul
stc
pop
sbb
add
push
inc
pop
pop
pop
inc
dec
inc
orl
add
adc
stc
ror
imul
addl
out
icebp
push
fwait
out
loop
and
pop
lcall
mov
mov
sub
sub
fwait
push
sub
mov
loop
out
jl
jb
mov
sbb
jnp
fmul
fwait
lods
sqrtps
popf
dec
lret
sbb
pop
cmp
ds
lret
leave
xchg
ljmp
mov
shrb
jmp
adc
or
in
adc
ljmpw
popa
pop
push
jg
shrl
cmc
popa
or
push
mov
stc
popl
push
ret
loope
fwait
iret
pop
cmpsl
add
iret
mov
cltd
sub
mov
das
push
lock
aad
orb
or
nop
cmc
fucomi
mov
add
jno
pop
sub
es
cmpl
xor
or
out
add
cmpsb
cmp
or
in
mov
mov
push
jmp
call
jge
ja
popa
stos
andl
xchg
mov
jp
insl
in
mov
sbb
aam
xchg
or
rcpps
or
and
xor
sbb
adc
mov
imul
lahf
into
sbb
inc
cs
test
stc
pop
push
sahf
movl
arpl
add
lret
fdivrs
pop
add
pusha
in
pop
mov
orb
sub
call
xor
loope
push
mov
push
push
jg
cli
test
test
stos
xchg
scas
gs
test
xor
out
cmp
xchg
dec
xlat
mov
cli
xlat
mov
cmp
add
lds
ret
push
in
push
cmp
sbb
inc
cltd
xchg
test
cmpsb
mov
jb
jmp
jbe
xor
lcall
sbb
repnz
xchg
xchg
push
sub
mov
cltd
dec
add
pusha
movsb
movsb
arpl
jns
mov
fs
push
cmp
lcall
ret
jo
cld
cli
sbb
ret
or
xchg
fadd
fdivrl
cmp
mov
sub
pop
icebp
pop
adc
mov
aaa
das
inc
call
xchg
cmpsl
or
in
out
inc
dec
xchg
in
lcall
fwait
jge
add
ret
pop
fisubrl
cmpb
orb
inc
mov
fisubrl
mov
shll
xchg
lea
xchg
jno
mov
loopne
outsb
gs
cld
loop
das
fidivl
mov
stc
mov
dec
js
sub
fcompl
test
dec
cmp
leave
push
loopne
into
xchg
es
mov
cmp
hlt
in
ficomps
adc
pushf
lods
mov
xor
mov
hlt
shll
ds
jo
clc
inc
or
mov
fmull
sbb
cmp
mov
push
fwait
and
nop
dec
iret
cmp
jmp
cltd
inc
ljmp
xchg
mov
dec
int
sbb
mov
lds
in
xor
cmpsl
sub
add
jne
jnp
repz
jnp
mov
ja
cld
lea
push
test
xchg
test
fldcw
and
outsb
shlb
enter
pop
push
add
rcll
push
push
movsb
jmp
mov
jb
hlt
lret
or
mov
push
lds
negl
pop
movsl
pop
test
stos
dec
imul
lock
push
sbb
leave
add
movsb
xchg
push
das
add
in
ret
inc
and
jno
cmpsb
pop
xorl
pop
in
sbb
repz
mov
shrl
hlt
jo
push
test
jecxz
insb
aad
sbb
ja
lret
sub
xorl
movsl
faddl
hlt
push
sbb
stos
in
ret
adc
out
mov
mov
fmul
pop
test
dec
xor
sahf
scas
mov
aas
int
mov
inc
sbb
inc
in
sub
jne
int
jo
arpl
aaa
pusha
adc
fs
mov
jb
sbbl
sbb
pop
and
mov
sbbl
mov
je
popf
jbe
ja
or
ds
push
mov
push
imul
loope
shlb
insl
test
rclb
and
rol
daa
add
pop
xor
xchg
pop
push
cmp
aaa
mov
sbb
xor
cmc
pop
mov
adc
pop
inc
pop
lahf
enter
rcll
addr16
mov
jg
dec
xlat
mov
daa
mov
movsl
cmp
gs
rclb
xchg
int3
sub
test
fsubl
scas
scas
mov
lods
cmp
jno
faddp
js
clc
ret
aam
hlt
bound
mov
jl
adc
fwait
dec
pop
jno
lock
inc
pop
leave
inc
dec
mov
mov
push
in
mov
xchg
int3
adc
add
push
cltd
inc
inc
subl
sub
cmp
shll
adc
jg
mov
xchg
pop
sub
inc
inc
push
push
mov
adc
scas
push
loopne
sub
outsl
in
mov
mov
out
cmp
sub
add
inc
or
movsb
repz
jle
jg
sbbb
insl
cwtl
pop
dec
xor
mov
out
outsb
sbb
pop
ljmp
jo
in
push
stc
and
outsl
push
sub
adc
mov
adc
xchg
mov
out
sbb
xor
aaa
sub
dec
dec
je
jae
xor
aas
cmp
push
mov
mov
xor
out
push
cwtl
and
cmp
rolb
pop
in
rorl
push
pop
sub
dec
adc
call
shrl
pop
jb
dec
mov
lods
inc
inc
test
sub
mov
cmp
lahf
cmp
jnp
xlat
cmp
fucomi
sbb
lock
icebp
pop
iret
clc
jb
lcall
mov
cmpsb
ret
shr
and
jne
mov
push
and
stos
scas
into
ficomps
lods
insl
in
inc
test
cmp
cmpsb
shll
adc
add
les
testb
sub
ret
push
inc
ss
and
jns
inc
jo
inc
fiaddl
arpl
jecxz
pop
lahf
mov
mov
sub
push
mov
mov
xor
aam
sti
xlat
mov
jl
xor
loope
jbe
mov
mov
movsb
or
xor
imul
or
pushf
jle
sbb
adc
adc
dec
clc
aam
cmp
jmp
jle
js
sub
sbb
pop
dec
out
sub
or
int
xor
xor
mov
pop
int
cmpsl
fidivs
jnp
dec
fwait
mov
test
cmp
mov
sbb
cld
scas
xor
sbb
or
cmpsl
adc
push
mov
sar
andb
subl
mov
outsl
sub
push
in
mov
cmp
mov
test
mov
icebp
fucomi
inc
dec
mov
lret
cmc
loop
mov
dec
mov
arpl
push
shrl
push
fs
push
mov
push
inc
push
into
arpl
rorl
test
pop
jmp
adc
pop
xlat
stos
sti
mov
shll
sbb
call
push
lods
jbe
jnp
mov
lea
mov
cmp
incl
mov
add
mov
ds
aas
ret
movsb
out
imul
insb
mov
adc
mov
and
hlt
daa
adc
jg
in
cmovns
pop
or
xchg
shll
call
mov
pushf
adc
loopne
mov
add
add
das
insb
int3
and
mov
mov
mov
mov
js
sbb
dec
pop
in
push
mov
mov
mov
mov
inc
sub
pop
pop
je
rol
adc
mov
inc
cmpsb
fmul
in
xor
clc
cwtl
aad
popf
sbb
jo
roll
inc
pop
push
gs
int3
imul
push
jg
mov
repnz
aad
push
pop
inc
clc
inc
repz
ror
jne
int3
mov
push
xor
pop
pusha
mov
mov
loop
in
xor
es
jb
add
insl
test
ret
jge
cmpl
sub
mov
lret
loop
lret
mov
and
jnp
out
stos
adc
mov
xchg
mov
pop
ljmp
cmpsb
cmc
dec
mov
je
cmpsl
xchg
push
enter
fmuls
jo
pop
stos
jg
ret
push
mov
icebp
repz
adc
sbb
shrb
and
jne
sbb
movsb
adc
xor
and
mov
add
test
lds
sbb
pushf
nop
pop
outsl
xchg
rcrl
int
sub
pop
in
adc
adc
rcrb
orl
imul
dec
ss
jnp
loopne
clc
mov
and
sbb
fs
sub
hlt
xchg
jmp
and
in
sbbl
aaa
psrld
xorl
sti
cli
cwtl
xor
shr
xlat
sbb
addl
scas
lret
sub
ljmp
xchg
bound
pop
loope
mov
mov
lret
stc
jb
inc
movsb
shrl
addr16
and
dec
bound
xlat
pop
pop
stos
push
js
out
lahf
pop
cmp
ja
ffreep
sbbb
adc
ret
or
or
aam
mov
pop
inc
shll
sub
and
pop
rorl
xchg
cltd
add
rol
loopne
test
mov
std
cmc
mov
mov
fsubl
std
pop
dec
pop
das
or
pop
pop
int
cmp
push
in
mov
ds
xchg
clc
push
jecxz
fcomps
enter
adc
cmp
jo
das
ljmp
pop
and
fwait
mov
jmp
sbb
pop
add
add
dec
iret
into
sbbb
xchg
jns
aas
fs
testl
inc
jmp
jbe
popf
imul
mov
push
jmp
cld
inc
in
sub
or
pop
ss
cmp
add
mov
or
ficompl
mov
je
mov
arpl
and
lcall
pop
imul
popf
in
sub
adc
cmp
xor
insb
cmp
ret
jb
incl
mov
ds
and
push
subl
cltd
mov
fsts
lret
sbb
sbb
pusha
movsl
push
ljmp
push
mov
mov
lods
lcall
es
inc
mov
push
arpl
lods
std
push
mov
imul
rolb
mov
rclb
scas
push
mov
shrb
mov
and
cmp
adc
cmp
jns
hlt
cmp
inc
jg
jnp
cmpsb
scas
lods
adc
leave
adc
jmp
repnz
pusha
or
inc
xchg
ja
push
imul
pop
int
out
mov
leave
cltd
shll
dec
test
adc
mov
cmp
pop
mov
add
push
adc
cmp
in
push
sub
ret
push
sbb
push
inc
mov
out
cmp
clc
in
jecxz
shlb
loope
and
imul
jns
mov
or
ret
sbb
or
clc
cmp
insb
push
inc
and
push
xorb
or
cmp
decl
or
or
sub
imul
jle
outsl
mov
pusha
lock
and
jns
mov
popa
fs
gs
jmp
and
xchg
into
das
cld
scas
scas
xor
pop
xchg
inc
jl
repz
adc
icebp
bound
fsubrl
stos
loopne
fnsave
ja
imul
test
lahf
scas
jle
jl
stc
push
insb
into
sub
sbb
and
aaa
arpl
jnp
xchg
imul
xor
mov
imul
push
push
nop
dec
je
test
pushf
out
loopne
mov
adc
cmp
out
add
out
arpl
adcl
cmc
xchg
test
dec
cmp
dec
in
decl
popf
pop
loop
mov
cld
adc
dec
pop
into
outsl
jo,pt
dec
push
test
into
sarb
jno
and
aaa
and
mov
mov
dec
push
lret
push
xor
ret
mov
rcl
jo
pop
jno
roll
insl
testl
popf
mov
jmp
loope
fwait
scas
push
jne
add
push
adc
popf
sar
dec
nop
or
in
jns
sar
arpl
mov
sub
sub
lea
jl,pt
xchg
mov
rcrl
mov
fldl2e
pop
push
mov
xor
lock
in
cmp
in
pop
adc
in
push
jbe
dec
cmp
cmp
int
and
xchg
jnp
sbb
pushf
out
js
adc
push
mov
testl
push
ljmp
xchg
xor
adc
xor
into
sbb
nop
pop
mov
xchg
xchg
dec
dec
hlt
cmp
shll
stos
sub
rolb
xchg
adc
notl
cmpsb
jle
push
sbbb
rclb
xor
sbb
fs
in
add
sub
pop
cmpsl
popa
aaa
enter
jns
outsl
in
in
out
int
fsubrl
sbb
sbb
popf
mov
roll
push
jg
mov
mov
add
cmp
lds
cmpsl
je
loop
push
cmp
sbb
bound
mov
sbb
sahf
ljmp
jne
mov
bound
mov
enter
pop
xchg
sub
mov
int
push
outsb
shll
cli
in
movsl
and
inc
rolb
outsl
icebp
hlt
sarb
push
mov
mov
clc
sbb
imul
clc
push
sbb
das
and
stc
pop
mov
jge
inc
es
shlb
inc
lcall
scas
and
loop
pusha
push
cltd
inc
mov
lds
xchg
test
call
dec
sub
ds
push
pop
cwtl
sarl
jp
jo
cld
ja
and
in
add
jo
mov
jg
inc
xor
pop
test
imul
int3
pop
dec
pop
lock
ret
xchg
mov
sbb
test
je
add
bound
push
mov
xchg
or
jo
push
or
jmp
cmp
repz
inc
andl
lcall
je
adc
push
xchg
sub
int3
mov
jns
jecxz
movsl
sbb
enter
cli
js
pop
bnd
ret
and
data16
stc
push
pusha
pop
inc
push
sub
adc
lock
cwtl
pushf
lret
mov
ret
adc
fisubrl
pop
fldenv
jne
jle
xor
lret
xchg
out
lahf
std
and
lds
adc
mov
fimull
inc
fcomp
sahf
xlat
push
pushf
ja
xor
fldcw
adc
mov
cmc
arpl
les
pop
inc
in
fucomip
test
pop
or
mov
pop
cmpsb
push
enter
adc
push
or
dec
adc
icebp
mov
insb
add
icebp
pop
push
test
and
lcall
loopne
cs
and
sbb
mov
jne
jg
sahf
scas
or
push
fiaddl
les
je
push
out
fcmovb
sub
fdivrl
fnstenv
cs
mov
call
mov
lcall
sbb
xchg
push
movlps
inc
jns
out
push
jb
mov
or
sbb
adc
das
sahf
inc
xchg
ret
sub
lds
in
jge
arpl
pop
push
gs
dec
inc
mov
mov
and
sbb
mov
imul
push
rol
xchg
repnz
sub
ret
shrb
adc
push
sub
sbb
es
pop
in
movsl
jb
sbb
or
push
daa
test
cwtl
pop
mov
push
push
popf
sub
push
mov
ror
shrl
bound
movsl
out
test
push
shrb
lahf
xor
sar
push
jne
dec
jge
es
xchg
xlat
inc
dec
lds
cwtl
into
loop
cmpsl
sbb
xor
cmpl
fidivl
scas
lcall
pop
sbb
add
shrl
or
lea
pop
xor
lcall
pop
div
dec
mov
insl
xchg
scas
and
out
es
rcrl
push
rolb
mov
mov
and
mov
xchg
dec
dec
adc
js
icebp
bound
adc
dec
inc
or
or
dec
lret
cmp
xchg
mov
push
mov
jbe
jnp
imul
clc
dec
inc
add
xchg
sub
adcb
sbb
add
and
add
pushf
jle
loope
bound
or
nop
int
or
mov
mov
test
mov
sbb
cs
inc
nop
mov
xchg
cmp
push
mov
je
sbb
sub
out
out
mov
shr
hlt
push
mov
ss
aaa
adc
fidivrs
push
rcr
inc
pop
pop
inc
pushf
push
mov
clc
in
or
sub
loopne
xlat
xchg
and
dec
data16
add
or
mov
pop
arpl
jecxz
jmp
ds
push
lret
ficoms
mov
out
stos
jb
jbe
dec
or
cmp
cmpl
xchg
sar
add
lcall
dec
popf
sub
jno
pop
mov
outsl
mov
cmpsl
decl
mov
add
dec
shrl
jae
xor
notl
inc
stos
shll
inc
mov
into
out
sub
pop
outsb
mov
pop
pop
cwtl
push
movsb
insl
sub
sahf
repnz
aad
outsl
enter
push
sbb
cmp
es
in
popa
mov
pop
cs
leave
or
push
ljmp
or
fbstp
push
and
repnz
test
fidivrs
and
and
add
mov
xchg
repnz
in
fwait
aad
fwait
or
jbe
sbb
cmp
jg
push
int
mov
xchg
outsl
inc
mov
jge
mov
push
sbb
int3
jle
in
or
int3
decl
push
lcall
or
xor
jg
lods
xchg
dec
repz
mov
outsl
mov
push
adc
cmpsb
mov
std
mov
xchg
icebp
insb
into
sub
xor
mov
cld
in
fbstp
xor
push
test
mov
std
sar
mov
sub
je
orl
xchg
xor
jge
shll
test
jo
ja
and
repz
pop
mov
loopne
xchg
or
aas
lcall
push
stc
and
insl
sbb
push
ffreep
into
dec
outsl
or
sbb
dec
push
jg
sub
loopne
mov
xor
and
push
scas
sbb
jo
or
fs
cmp
mov
or
and
into
in
inc
and
pop
pushf
subb
loopne
sub
add
mov
or
mov
dec
mov
mov
xor
fs
es
jne
or
dec
leave
out
pop
add
imul
shl
orb
add
cs
lcall
test
sti
imul
mov
mov
out
popf
imul
cltd
adc
sbb
sub
sub
inc
out
dec
xor
mov
sbb
cmc
push
sbb
adc
inc
cmpsl
push
adc
mov
mov
pop
lret
sub
in
stos
icebp
rorb
roll
mov
dec
mov
repnz
int3
stc
int
cs
mov
movsl
out
xor
xor
xchg
mov
inc
pop
dec
out
sub
mov
or
push
addb
icebp
xor
cli
repz
testl
dec
jg
mov
add
lds
add
cmp
lret
pop
sbb
mov
neg
testb
lahf
jne
adc
mov
sbb
dec
mov
cld
dec
add
mov
push
push
popf
rcrl
outsb
addb
inc
sub
or
ja
jbe
mov
push
and
mov
push
into
cmp
ret
xchg
insl
jnp
inc
push
clc
iret
mov
pop
mov
adc
dec
arpl
cmp
imul
lods
mov
inc
leave
and
cld
xor
test
lea
imull
xor
fbstp
jae
into
inc
call
pop
out
mov
jo
data16
in
lahf
int
dec
dec
loopne
icebp
cmova
pop
pusha
dec
xor
xor
rorb
add
cmp
lods
test
sub
faddp
lods
ljmp
les
inc
xchg
lock
mov
xor
popf
dec
test
jge
test
call
mov
push
leave
loop,pn
add
cmpsb
into
mov
int
add
add
je
addr16
loope
inc
cltd
inc
push
gs
mov
loope
xchg
cmp
fisttpl
daa
xor
pushf
sub
adc
mov
mov
and
and
pop
xor
or
aad
insl
jle
movsb
add
je
jns
movsb
fsub
sbbl
xchg
mov
cltd
sub
xorl
out
inc
mov
inc
cmp
dec
das
insl
mov
int3
inc
mov
mov
clc
mov
pop
outsl
insb
jns
inc
cld
mov
adc
xor
lock
mov
xchg
inc
scas
mov
scas
aam
iret
mov
cmpsb
inc
dec
adc
fwait
add
cmpsl
push
nop
stc
lea
getsec
push
mov
dec
mov
sbb
nop
mov
add
lds
sbb
imul
lods
xor
in
out
cmp
or
dec
mov
sbbb
cld
icebp
add
idiv
mov
mov
out
xor
lret
les
jns
push
arpl
lret
cmpb
ret
notl
xor
pop
cmp
cwtl
and
pop
push
ja
aas
lods
cmp
das
mov
imul
dec
in
addr16
in
lods
ret
bswap
push
stos
and
dec
dec
hlt
jae
loopne
rol
shlb
aam
pop
in
xor
in
nop
cmpb
inc
pop
mov
loop
adc
clc
xor
xchg
clc
cmpsl
xchg
repnz
xchg
outsb
xor
sub
sbb
pop
addb
pushw
repz
test
sub
add
xchg
ljmp
outsb
aas
lds
sub
inc
push
insl
xchg
or
pop
jg
cwtl
mov
inc
enter
dec
and
sub
stc
sti
aam
xchg
addr16
pop
xchg
jne
incb
sbb
push
cwtl
cwtl
jae
sbb
push
data16
pop
xorl
xor
mov
and
sub
shrl
jmp
jmp
fistps
in
ss
out
stos
adc
dec
dec
mov
cmp
sbb
xchg
movsb
cmp
hlt
inc
push
mov
enter
push
repnz
lret
jl
stos
mov
or
xor
pop
xchg
add
sbb
shlb
adc
and
jmp
and
aam
cmpsl
sbb
fdivs
sbb
aad
fstp
addb
push
lods
lds
xor
pop
pop
jne
add
out
inc
sti
test
or
add
fadds
test
push
inc
cld
dec
xchg
sti
out
jb
pop
cmpsb
loop
ja
xor
push
lcall
dec
insb
popf
mov
pushf
lock
add
insb
fists
popa
stos
lods
aam
sub
dec
lods
cmp
imul
mov
xchg
mov
jl
sarl
sub
adc
mov
inc
push
cmp
pop
pop
xorb
push
and
hlt
loope
push
xor
adc
xchg
into
and
rolb
xchg
cmp
sti
shll
hlt
aad
jmp
sub
lods
add
popf
adc
xor
adc
out
dec
test
dec
loopne
sub
pop
idivb
jle
mov
jo
pop
ror
fdivs
sets
mov
in
jb
inc
out
add
or
xor
stos
ret
push
iret
mov
gs
cmpsb
and
jno
inc
mov
xor
fmull
xchg
stos
mov
hlt
ficomps
mov
ljmp
xor
adc
arpl
and
inc
pop
mov
cmp
dec
mov
dec
cmp
lret
popa
mov
or
outsb
sub
mov
pop
sub
out
sbb
adc
sbb
dec
pop
inc
mov
push
inc
sti
out
lcall
sub
insb
mov
insl
cld
inc
imulb
fbld
fwait
leave
ja
daa
cmp
mov
mov
adc
jbe
mov
lret
xlat
add
and
dec
lea
popf
scas
sub
sub
cmp
pop
es
push
push
cltd
add
aam
sbb
aam
cltd
mov
cmpsl
cmp
inc
lods
shrl
arpl
push
or
rcr
leave
es
sub
addb
in
xlat
out
icebp
push
cmpsb
stc
lock
fstl
push
mov
mov
cmp
rcll
int3
aas
jmp
sub
pop
in
shlb
pop
fwait
das
dec
pop
cs
cmp
mov
mov
call
sub
lahf
mov
aam
bound
mov
lahf
adc
out
dec
fmul
popf
and
sbb
int3
mov
add
or
jns
fwait
mov
orl
nop
and
cmpsb
jae
push
stc
pop
pop
cltd
lds
mov
and
sahf
jle
cld
inc
rcrb
mov
aaa
outsb
adc
pusha
xchg
dec
popa
arpl
iret
mov
jl
loop
ds
cmpsb
sub
lahf
sub
aam
in
out
ss
jbe
imul
mov
mov
sahf
les
loope
push
fdivr
sahf
pop
sbb
mov
push
leave
maskmovq
divl
hlt
inc
int
mov
mov
or
test
ret
dec
xchg
xor
and
cmp
adc
sbb
and
adc
in
out
push
add
push
insl
clc
add
jecxz
test
or
aas
adc
sbb
stos
dec
cmp
cmpl
push
nop
sbb
icebp
mov
jge
push
scas
push
arpl
lahf
ret
repz
sahf
lock
cwtl
add
push
cmp
notb
cmpb
inc
insl
pop
and
andl
mov
fldl
or
sbb
or
in
cmpsb
js
ret
dec
mov
cli
aaa
test
mov
cld
xchg
jnp
add
mov
mov
jl
fisubs
clc
and
xlat
jecxz
out
call
jbe
adc
mov
cmp
in
sub
daa
and
loopne
jmp
or
jb
dec
mov
data16
jl
dec
test
dec
add
sbb
aaa
pop
testb
dec
sub
popa
out
xchg
imul
std
or
mov
add
shlb
lret
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
add
dec
aad
rcl
loop
popa
ret
adc
jno
bound
cwtl
mov
movsl
and
cmp
bound
jbe
mov
push
push
and
jbe
lods
mov
or
aad
xorb
pop
hlt
adc
das
call
test
mov
cmp
push
xor
xlat
cs
sarb
adc
lods
pop
popa
shll
repz
dec
push
jb
stc
sbb
inc
mov
jo
outsb
or
jp
in
jno
ljmp
js
or
jl
aas
fs
data16
loope
add
mov
sub
adc
xor
ret
loopnew
cwtl
dec
sbb
push
xlat
push
fadds
test
pusha
mov
mov
and
or
dec
stos
lcall
scas
enter
out
in
adc
and
mov
inc
in
add
xchg
movsl
jbe
xchg
or
cmp
mov
or
repz
adc
rclb
push
add
imul
pop
shl
xchg
sahf
fsubp
jne
enter
dec
ret
xor
int
fistps
sub
cmp
cmc
jmp
stos
pop
mov
jecxz
xchg
inc
adc
cld
lds
das
mov
sbb
out
push
scas
incb
push
and
std
cmp
pop
and
xchg
dec
jge
leave
xchg
jbe
subb
incl
mov
xchg
jnp
or
jp
stos
scas
test
test
mov
sub
inc
xor
sbb
loope
aam
clc
imul
jbe
insb
cmp
push
jns
nop
das
jno
lods
xor
outsb
stos
sbb
data16
xchg
pop
fisubs
outsl
xor
out
lcall
call
xlat
pop
pop
jae
mov
arpl
push
inc
pusha
data16
ds
cltd
scas
jnp
inc
jno
adc
lds
subl
rorl
test
pop
or
cs
fsubrl
pop
aaa
or
fstps
jnp
pavgw
popf
mov
xchg
cmp
add
xchg
lods
loopne
mov
inc
fucomip
lods
les
in
push
call
inc
jge
mov
mov
mov
inc
and
or
movsl
adc
jmp
cmp
mov
repz
push
jnp
jno
mov
fsubs
mov
jecxz
das
cmp
jge
mov
sbb
hlt
sbb
nopl
and
in
xchg
dec
mov
mov
and
fldcw
mov
push
call
cltd
jns
outsb
stc
jecxz
out
or
adc
sbb
cmp
sbb
add
xor
cmp
sub
insb
loope
stc
movsb
cmp
pop
repz
or
scas
inc
xor
roll
andl
call
jl
filds
test
notl
sub
out
test
movsl
add
pop
push
or
imul
in
call
pop
mov
rcll
lea
xchg
enter
fdivs
xchg
mov
xor
jae
sub
cmp
cmc
cli
mov
lret
outsl
xor
jl
inc
bound
cltd
inc
cmp
mov
cld
xchg
or
std
jp
xchg
push
xor
into
sbb
push
pop
imul
pop
aad
xchg
in
nop
mov
sbb
push
popf
mov
mov
inc
int
mov
cmp
xor
cmp
jl
imul
xchg
cmc
xchg
insb
push
loopne
out
push
cmp
mov
leave
pop
pusha
mov
imul
roll
jmp
push
outsl
jno
pop
cltd
ljmp
pop
cmp
dec
mov
sti
sub
mov
shl
movsb
test
or
mov
negl
lods
xchg
imul
push
fsubrs
movsb
les
jne
xor
lcall
iret
and
jnp
in
inc
outsl
dec
inc
jo
add
fildll
clc
movsl
fwait
ret
flds
pop
mov
out
pop
mov
clc
sbb
add
push
add
fcomps
imul
cmp
jg
inc
subb
fldl
fidivrl
cld
adc
and
jecxz
hlt
jp
jb
imul
test
jns
or
and
pop
jne
sbb
or
test
jp
pushf
push
pop
lods
lcall
add
mov
fwait
shll
xchg
movsb
jmp
xchg
arpl
inc
lods
push
rol
notb
sub
xchg
loopne
or
pop
xor
xrelease
test
dec
in
adc
xchg
sub
add
mov
ja
inc
ss
push
lahf
popf
mov
adc
sbb
adc
push
test
je
push
pop
ror
fsubrl
sub
scas
out
js
xchg
push
mov
mov
pushf
shll
pusha
pop
gs
mov
jns
push
mov
mov
sub
and
int
rorl
cs
and
ja
ret
aam
lahf
in
insb
xchg
popf
mov
dec
mov
shlb
js
mov
sub
cmp
cmpsb
inc
adc
cmpsl
fstps
stos
mov
and
repz
mov
in
loop
mull
and
js
lods
fbstp
pop
sub
std
shl
xor
pop
add
sub
xor
lock
pushf
cmp
shll
incb
in
hlt
push
sub
sarl
pushf
pushf
scas
pop
popf
pop
mov
cmp
jbe
xor
inc
cmp
mov
movsl
xchg
inc
sbbb
sbb
dec
jp
out
rcl
xlat
jmp
inc
sbb
and
daa
mov
pop
lds
js
jl
fisubl
clc
mov
add
outsb
jmp
pop
aam
fcmovnbe
adcl
in
mov
add
jmp
and
xor
jb
xchg
gs
add
sub
cmp
push
fstpt
data16
mov
loopne
sbb
mov
aad
lods
adc
clc
mov
cli
ds
pop
clc
mov
xchg
in
mov
xlat
jbe
cs
mov
xchg
test
jnp
xchg
out
repz
bound
mov
mov
lret
dec
flds
lret
sahf
aaa
loopne
stos
fsubl
lret
shlb
and
adc
xchg
xchg
cld
aaa
xchg
add
cmp
test
enter
fsts
xchg
aaa
imul
sub
mov
js
cmp
adc
fst
sub
sub
push
in
push
push
push
jmp
bound
test
out
les
sub
cld
and
or
gs
stos
lret
inc
sbb
frstpm(287
cmc
add
outsb
mov
hlt
orl
and
popa
loope
js
and
addb
cmp
or
jmp
mov
bound
imul
stos
popa
shr
xchg
out
inc
in
mov
fdiv
adc
xchg
push
add
mov
loopne
rcrl
push
mov
or
cmc
sahf
sub
lcall
dec
jae
push
sbb
mov
sahf
ljmp
cli
aam
mov
rcrb
jo
mov
ret
add
or
in
mov
inc
hlt
xchg
sahf
xor
jnp
sub
test
mov
sbb
xor
xlat
fwait
loope
pop
pop
push
divl
lods
jae
mov
test
cmp
ljmp
push
and
xor
imul
mov
xchg
sbb
clc
or
mov
and
sub
or
popa
xor
fcoml
push
lds
mov
or
xor
aad
sub
or
push
fwait
loopne
shlb
cmp
push
ljmp
decb
mov
sbb
cmpl
daa
icebp
ja,pn
lock
in
mov
lea
xchg
addb
bound
addl
jmp
and
test
orl
aam
ss
lods
iret
mov
fisttps
repz
loop
mov
jle
xchg
add
adc
repz
lahf
daa
pushf
or
lahf
cmp
das
cmp
push
daa
pop
test
ja
cld
mov
in
jnp
incl
mov
nop
out
repz
pop
into
rorb
pinsrw
gs
pop
push
fsubrl
arpl
xchg
shll
add
push
fsubp
aaa
aad
dec
call
ss
pop
cmp
test
push
cwtl
pop
enter
mov
das
or
dec
outsb
imul
insl
inc
rcrb
lret
imul
insl
or
dec
adc
rcrb
mov
loope
cwtl
scas
pushw
inc
pop
jmp
xor
cmp
jbe
popf
adc
jp
je
jp
ja
pusha
dec
cmp
arpl
mov
sub
scas
sub
rorb
add
ret
mov
rcrb
dec
push
in
jno
insb
jp
mov
sub
cmp
scas
or
adc
mov
mov
cmp
loop
mov
jge
cmc
loopne
push
in
jno
or
sub
mov
je
inc
cmp
jl,pn
or
lcall
imul
scas
push
sbbb
jae
hlt
jecxz
add
fisubrs
jg
orb
dec
js
scas
pop
lods
fs
iret
in
sbb
out
test
cmc
pop
xchg
int
xchg
test
subb
inc
leave
pop
push
jmp
or
mov
test
fistps
dec
adc
push
jb
fstps
fistpl
daa
loopne
vorpd
lea
and
sub
mov
je
mov
mov
and
pop
fidivrl
mov
pop
inc
and
and
imul
sbbb
sbbb
push
int3
bnd
lods
push
andl
shrl
lds
mov
add
lods
fcmove
cmpsb
sbb
sub
stos
or
add
mov
xlat
in
aam
push
cs
push
mov
es
cmp
jne
sub
pop
loopne
pop
jge
imul
push
jb
fildl
div
cmpsl
mov
rolb
into
out
and
and
push
dec
pushl
add
or
sbb
aad
scas
out
addb
movb
lret
rclb
in
es
add
mov
jecxz
inc
lock
in
sbb
jae
cli
inc
xchg
xchg
mov
mov
dec
cs
loope
adc
pop
out
std
mov
pop
popf
xchg
xlat
aad
mov
mov
mov
sbb
pop
add
aaa
mov
outsl
cmpsb
leave
xchg
shrl
fstpl
push
mov
clc
and
xor
push
xor
xchg
out
sbb
sti
hlt
adc
stos
pop
mov
lods
inc
jns
cwtl
cmpsl
movsl
push
roll
sahf
jg
inc
imul
imul
fcomps
push
jbe
jp
cs
dec
daa
or
or
cmp
loope
jecxz
aad
out
xchg
ss
je
iret
fs
cld
cmp
add
cmc
mov
lret
in
int
clc
lods
pop
or
inc
adc
jl
xchg
xchg
je
pusha
nop
xor
fisubs
push
pop
or
rcr
push
int
adc
loopne
jl
sub
xchg
push
sbb
inc
xor
push
aam
dec
xchg
mov
mov
pop
xor
xor
jg
movsb
cmp
jp
or
fildll
jae
jl
mov
pop
push
les
or
aas
jnp
bound
lret
out
pop
push
dec
jmp
bound
add
xchg
inc
fst
addr16
mov
leave
lret
shll
xor
insb
in
scas
or
or
popa
rcl
xchg
dec
pop
aam
test
out
enter
sti
fisttpl
inc
pop
mov
hlt
test
addl
in
xorb
dec
stos
push
jl
out
stos
in
pushf
add
gs
stc
inc
stos
hlt
repnz
add
dec
inc
into
movups
testb
enter
push
sub
int3
xchg
jle
inc
and
jmp
into
shrb
in
out
ds
mov
scas
jnp
adc
sub
mov
mov
pop
fdivrs
out
xchg
or
cmpsl
add
lock
mov
into
push
mov
bound
sub
das
or
aas
insb
jne
in
leave
xor
cmp
js
mov
pusha
inc
frstor
std
add
mov
jb
rclb
mov
xchg
cs
mov
sbb
dec
addb
movzwl
adc
das
pop
xchg
cmp
scas
daa
xor
push
insb
push
xor
lahf
and
pop
das
mov
mov
add
lods
cmc
xor
cmp
int3
test
cld
lret
das
test
movsl
in
scas
in
and
sbb
sbb
inc
or
aas
imul
mov
jp
clc
outsb
sbb
arpl
xchg
cmp
clc
or
xchg
sti
mov
push
out
scas
jle
add
mov
jge
push
test
dec
mov
lret
cmp
outsl
jnp
adc
jg
cmp
out
mov
xchg
dec
lret
imul
sar
int
sub
inc
xor
mov
sti
fdivs
mov
xchg
mov
add
ss
mov
cmp
or
sub
rcl
sti
lea
pop
mov
mov
jo
mov
je
mov
pop
aad
dec
sub
popa
dec
and
aaa
pop
cmp
mov
cwtl
imul
mov
add
int3
mov
scas
clc
mov
xor
fidivl
sbb
inc
jecxz
push
pop
and
leave
mov
mov
mov
xchg
mov
call
nop
rclb
mov
fwait
fwait
inc
mov
sub
cmp
sahf
add
mov
push
outsb
or
lods
aaa
bound
stos
test
scas
sbbb
fmuls
or
add
nop
dec
shrl
push
jb
insb
fsubrs
pusha
push
mov
andl
mov
push
adc
aas
mull
ret
mov
jmp
add
xchg
movsb
sbb
xchg
inc
mov
pop
cs
xchg
int
std
in
dec
inc
mov
rcll
imul
icebp
cmp
mov
cld
pop
or
dec
enter
stc
lea
sub
xchg
movsl
add
dec
or
pop
sahf
jecxz
xchg
hlt
es
xchg
lret
loop
fs
add
mov
inc
repz
movsb
dec
lds
addb
cs
push
insb
mov
lahf
xchg
push
pushf
fists
sub
mov
cltd
jp
mov
int3
andb
int3
mov
movsb
nop
leave
mov
sub
dec
mov
push
or
mov
dec
or
push
sbb
add
jmp
loopne
pushf
xchg
fstpl
sub
push
dec
inc
mov
daa
pop
adc
sub
in
int
int
xchg
cmpsb
inc
push
bound
rolb
sbb
repz
ret
stos
pop
and
mov
out
adc
or
push
imul
sti
inc
jno
sbb
adc
xor
pusha
push
cmpsl
pop
js
enter
pop
push
jns
mov
xchg
mov
mov
xlat
mov
ficompl
in
aaa
push
shrb
int3
pop
or
psubb
jecxz
xchg
icebp
mov
jmp
mov
jb
bound
aas
inc
pop
cli
mov
in
in
inc
cld
push
xor
out
dec
dec
jmp
cltd
pop
jmp
arpl
pop
mov
lcall
test
inc
sbb
lods
fwait
sbb
lods
lcall
xchg
stmxcsr
or
enter
ljmp
cmp
and
xchg
subb
jnp
int3
into
mov
popa
sbb
out
push
jnp
das
cmc
adc
mov
test
mov
mov
jae
or
daa
popw
jnp
xchg
or
into
adc
and
lods
inc
pop
test
inc
jecxz
lcall
cmp
mov
xor
xor
jl
adc
sbb
ror
sbb
xchg
push
xchg
scas
dec
mov
jecxz
das
enter
mov
inc
sbb
mov
test
or
in
mov
sub
repz
aad
sub
push
cli
scas
push
iret
out
add
adc
sti
imul
shlb
add
mov
mov
push
adc
dec
jns
mov
fistps
aad
xorb
scas
nop
jge
or
jl
jmp
out
push
inc
dec
andb
sub
dec
mov
std
gs
push
fcompl
dec
fisubrl
cmp
mov
dec
mov
lea
cmp
add
lahf
sub
addr16
dec
adc
fstpl
jno
insb
loop
pop
xchg
cmp
fsub
ret
addr16
je
data16
lcall
imul
cli
push
jl
xchg
add
add
fisubl
rcl
xchg
sbb
mov
lods
jae
push
mov
pop
clc
cmp
pop
mov
jge
push
and
sar
je
stos
xchg
movsb
mov
add
sbb
out
add
idivl
cwtl
ret
cmp
scas
sub
pop
stc
daa
xchg
jl
pusha
xchg
push
test
dec
mov
or
inc
dec
outsl
mov
inc
scas
fwait
push
and
movsl
push
sbb
mov
std
fxch
pop
lahf
mov
dec
test
sbb
rcr
mov
mov
mov
in
pop
lret
mov
ss
mov
xchg
add
lcall
sbb
add
lret
shl
cmp
sahf
and
out
mov
addr16
subl
cmc
fidivrs
sbb
dec
popl
pop
cmp
cmpsl
in
aad
gs
cmp
push
push
or
rcrb
outsl
add
pop
jne
mov
lcall
lea
mov
out
mov
int
js
je
xor
mov
scas
add
sbb
mov
ficoms
mov
lahf
mov
sbb
mov
imulb
pop
push
mov
lret
xchg
inc
pushf
lcall
and
pop
push
pop
jg
pushf
push
push
les
jbe
pushf
lret
cmc
push
jp
outsb
push
ljmp
mov
arpl
lods
and
icebp
ja
leave
jle
mov
in
push
jle
cmp
xchg
sub
imul
daa
push
in
addr16
cmpsl
mov
sub
repz
inc
jo
xlat
xor
mov
addb
pop
stc
adc
aam
inc
mov
popa
es
aam
xchg
fucom
stc
stos
lcall
lcall
pop
call
mov
jns
dec
mov
adc
out
mov
pop
jecxz
mov
cltd
stos
pop
int
out
push
subb
dec
sti
cwtl
in
push
add
jle
mov
sub
sahf
test
xchg
or
out
in
test
rorl
xchg
xchg
push
mov
dec
outsb
xor
icebp
jecxz,pt
cltd
jp
jp
popa
leave
inc
dec
xchg
orb
dec
lahf
clc
fdivl
rcr
sbb
sti
shll
rol
testb
push
push
jecxz,pn
xor
lds
stc
sbbb
fsts
mov
jmp
icebp
popa
test
jecxz
out
xor
js
addr16
fxch
pusha
mov
jmp
arpl
xchg
dec
sbb
jge
xchg
dec
xchg
adc
sbb
sbb
sbb
pop
repnz
sub
jecxz
ret
xchg
mov
xchg
ja
push
mov
cltd
out
jecxz
les
rcr
pusha
adc
scas
xor
mov
loopne
and
sbb
sub
outsb
xor
out
pop
add
or
pop
sahf
sbb
mov
pop
rcrl
xchg
lahf
fists
out
cmpsl
scas
and
int3
cs
ja
aad
push
sti
insb
icebp
imul
push
cmpsl
shlb
add
pop
xchg
call
mov
aaa
dec
aad
add
and
mov
leave
inc
int3
mov
xor
js
ss
popf
inc
popf
push
pop
outsl
or
ss
nop
popa
outsb
or
hlt
cmpsw
inc
mov
and
add
dec
add
into
pop
pop
adc
or
lret
push
pop
mov
dec
fmuls
adc
cs
lret
bswap
mulb
xchg
pop
aad
mulb
jge
ljmp
mov
jge
mov
test
sbb
or
aam
loopne
outsb
popf
sbb
push
xor
inc
fldt
pop
sarb
mov
ds
adc
call
xor
cmp
pop
lahf
jno
sbb
xchg
test
push
push
outsl
mov
jge
xor
or
cmp
mov
and
mov
xor
add
cmp
inc
mov
mov
enter
add
sub
jno
repnz
dec
cmc
push
dec
lret
sbb
adc
xchg
push
cld
popf
popf
pop
dec
ret
out
jp
xor
or
xchg
pop
test
jg
push
mov
cwtl
test
push
cmp
jns
cmp
je
xchg
push
out
sbb
dec
mov
test
lcall
test
lock
sub
popa
hlt
rolb
dec
paddq
or
movsb
push
and
sbb
sbb
or
and
testl
mov
addr16
jmp
ja
mov
and
nop
mov
int
xchg
bound
rorb
lods
push
xchg
adc
imul
movsb
out
leave
add
xchg
adc
pop
push
mov
adc
push
push
insb
cwtl
into
inc
adc
mov
xchg
push
sub
jge
imul
out
cmpsb
pop
xchg
jecxz
xlat
sbb
xchg
sub
repnz
repz
lock
xchg
loope
jmp
add
pop
jp
daa
imul
xor
adc
mov
xor
mov
or
ss
out
outsb
shll
push
inc
xor
sub
repz
jae
mov
icebp
inc
cmc
int3
jo
adc
pop
cmp
fisttpll
call
jmp
pop
or
inc
jmp
hlt
dec
mov
mov
xchg
insb
arpl
fsubs
mov
pop
mov
push
repnz
mov
pop
cs
pushf
and
xchg
xor
pop
mov
lret
xor
popa
push
cmp
mov
dec
mov
inc
xor
xor
icebp
xor
mov
mov
adc
adc
pop
mov
jecxz
jecxz
and
lea
adc
push
addps
out
cld
push
cmp
or
or
sub
push
orl
jmp
cli
mov
ds
ljmp
mov
xchg
push
xchg
mov
jae
push
sahf
xor
mov
lret
lret
mov
or
jb
sbb
sbb
rcll
sub
add
test
mov
outsb
outsl
mov
mov
fwait
jo
sti
push
ds
pop
out
aad
mov
adc
mov
leave
mov
rcll
popa
fcoms
dec
jecxz
pop
adcl
jne
push
inc
and
xor
push
pop
xchg
mov
sub
loope
in
lods
ficoms
or
rcrl
cmc
xchg
stc
nop
jnp
stc
inc
pop
movsl
mov
jl
inc
mov
adc
mov
inc
inc
add
fwait
sub
jge
sub
popa
and
mov
cmp
enter
mov
add
mov
leave
mov
xchg
lds
push
sahf
mov
scas
ljmp
push
pop
popa
pinsrw
push
aam
mov
lea
test
xlat
cmc
jp
pop
cmp
pop
inc
scas
fs
mov
xchg
in
fnsave
in
sti
push
xchg
adc
ret
stos
jne
xchg
jp
cltd
jnp
lcall
and
loope
rcrb
movsb
dec
aaa
inc
or
adc
movsb
sub
incb
testl
cwtl
push
popa
aas
out
jnp
scas
clc
aaa
imul
repnz
mov
inc
std
jecxz
sub
shl
dec
jge
call
mov
cmpsl
push
xchg
addr16
pop
sbb
not
mov
sub
jp
aad
and
jl
fldt
sbb
mov
int
jo
test
sub
jo
repz
orl
clc
ss
xchg
movsb
iret
mov
inc
push
push
adc
ss
pop
cmp
or
add
mov
bndldx
xchg
lahf
sub
jae
jo
or
fwait
into
nop
push
pop
pop
mov
dec
int3
xor
pop
pop
inc
cwtl
fsub
loope
dec
jnp
adc
rolb
mov
and
mov
mov
xchg
subb
pop
loope
enter
push
flds
pushf
jb
arpl
sub
xor
std
inc
add
leave
cmp
outsl
in
dec
cmc
dec
push
movsl
negb
jnp
push
push
ret
jo
mov
enter
cmpsl
jb
cmp
push
lea
and
mov
ficomps
mov
ds
stc
jno
push
mov
jp
das
jmp
mov
or
hlt
fstpt
xchg
fistpl
or
mov
mov
xor
pop
push
mov
dec
mov
in
pop
mul
in
and
add
fists
mov
pop
cmp
shr
orl
into
dec
jle
add
out
aad
sbb
or
cli
das
dec
push
mov
add
lds
or
sub
sub
scas
lret
xor
fistps
stos
add
jno
or
pop
inc
cwtl
aaa
fcom
mov
pop
inc
dec
sub
or
push
hlt
push
dec
orl
int3
ret
daa
or
mov
dec
pop
jmp
jecxz
fldcw
rcll
in
dec
cmp
dec
jno
test
mov
xchg
lret
inc
mov
cmp
sub
adc
mov
enter
pop
pop
xchg
ret
xor
clc
das
fsubrl
dec
adc
ja
popf
push
push
dec
pop
adc
adc
fmuls
addl
sub
mov
push
xchg
pop
test
mov
sbb
shl
cltd
neg
pop
leave
jbe
sahf
xchg
dec
xorl
popa
xchg
lock
imul
mov
inc
push
sbb
and
call
rolb
imull
or
adc
in
pop
pushf
in
adc
or
cmp
or
popa
ja
xchg
fistpl
into
pop
std
or
sub
mov
popf
jg
xlat
mov
lods
fnstenv
rcrb
and
sahf
loop
je
xor
fsubrl
adc
bound
pusha
mov
mov
cs
insl
or
push
or
popf
in
movl
xchg
xor
aam
aas
gs
roll
scas
imul
jae
fisubl
mov
push
loope
popa
pop
movsl
dec
loop
outsl
out
xor
sbb
jns
cli
push
jb
lods
bound
jae
pop
cmpsl
in
sbb
pop
dec
cld
cmp
arpl
push
clc
ror
faddl
xor
pop
push
xor
lret
pop
arpl
dec
cmc
lock
lcall
enter
hlt
jnp
shl
adc
stc
push
cmpsb
lahf
mov
es
shll
fidivrs
insb
in
imul
dec
jecxz
inc
lret
pop
nop
stc
pop
stos
dec
loope
dec
xor
aam
shrl
sbb
push
mov
jge
lcall
scas
cli
lret
scas
in
ficoml
std
pop
push
jle
push
xor
pop
push
imul
push
xchg
mov
cs
mov
jmp
or
pop
push
jmp
xor
mov
push
pop
push
movsb
ret
jecxz
out
cmp
mov
push
mov
loopne
icebp
mov
in
pop
xor
xor
fwait
lea
or
fs
adc
mov
pop
lretw
push
int3
mov
lret
or
mov
jge
dec
nop
imull
pop
inc
jbe
cwtl
jno
ret
test
xor
sub
xor
mov
out
and
sub
sub
rcl
inc
xchg
out
mov
popf
jae
and
jg
fdivrl
pop
rcl
dec
aaa
mov
pop
cmpsb
popa
jae
fs
test
loop
adc
outsb
push
pop
clc
aaa
jle
daa
xchg
sbb
in
call
ss
out
std
xchg
and
shl
adc
or
fstp
mov
xchg
aad
test
out
mov
int3
xor
pop
adc
mov
xchg
xchg
imul
lods
or
push
mov
pop
mov
lcall
inc
js
sbb
mov
sub
loope
fldcw
movsl
inc
aad
stc
int3
std
jnp
pusha
addb
cs
mov
daa
ja
fldcw
mov
enter
aam
mov
loopne
inc
fiadds
fsubrl
add
gs
lods
rorl
fs
cmp
test
ret
sub
xchg
push
xor
repz
stos
xor
gs
jecxz
adc
xchg
in
mov
out
mov
pop
dec
adc
push
and
mov
sbb
clc
pusha
ret
fwait
into
jnp
inc
jge
aaa
cmp
call
shll
or
arpl
sub
adc
not
mov
dec
inc
xor
cmp
adc
or
repnz
sbb
enter
jp
mov
mov
push
mov
inc
mov
dec
sub
addr16
lods
and
sub
push
push
push
add
or
in
sar
cmpsb
dec
inc
jl
popa
push
movsb
shl
jbe
stc
outsb
push
dec
sbb
adc
cmc
pop
pop
mov
popf
or
mov
xor
clc
lret
or
pop
out
jl
mov
xor
out
cltd
cs
pop
lret
sub
xchg
push
loopne,pn
leave
divl
daa
mov
jp
sub
iret
cltd
jnp
in
adc
pop
cwtl
inc
test
out
repz
call
icebp
mov
cmp
pop
fdiv
jmp
int
dec
cltd
mov
sbb
repnz
inc
xchg
mov
repnz
inc
jbe
pop
pop
mov
xchg
push
or
test
or
addl
sbb
push
dec
and
stos
ss
adc
mov
xor
lcall
repz
pop
and
push
jge
cld
jnp
mov
mov
xchg
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
lcall
out
jp
in
pop
lret
stc
mov
ss
scas
sahf
adc
mov
aad
mov
xor
mov
imul
adc
inc
fnstsw
push
xchg
cmp
sti
adc
pop
mov
cmp
test
mov
or
gs
jbe
inc
inc
jo
sub
cmp
out
inc
xorps
jg
scas
stos
add
add
and
ja
pop
fidivrs
ds
lea
andb
negb
shlb
ret
in
adc
fisubs
mov
mov
fcomps
cs
jnp
adc
out
jp
cmc
inc
sahf
push
push
in
dec
out
mov
pop
push
mov
cmc
xchg
or
lods
jg
dec
stos
pop
mov
sub
fstps
imul
loop
mov
and
xor
xorb
mov
sbb
jns
sbb
imul
rol
popa
pop
cmp
shlb
sti
lahf
lock
jge
test
mov
fildll
loopne
popf
imul
ret
js
cld
ja
stc
xchg
pop
fadd
popa
call
adc
insl
rolb
mov
loope
leave
inc
loopne
and
push
repnz
lds
das
pop
repz
adc
adc
pop
adc
sub
sbb
lds
xchg
xchg
sub
sub
mov
sub
cmp
cltd
pop
inc
and
ja
lea
dec
mov
pushw
aam
dec
sub
mov
jg
or
into
leave
inc
or
loope
or
js
out
mov
push
add
xor
inc
lcall
adc
jmp
jmp
repz
ja
xchg
push
orb
pusha
mov
mov
rcll
and
shl
lea
xchg
or
xchg
insl
sub
dec
int
and
sub
test
mov
std
push
out
or
sbb
shrb
adc
data16
enter
sar
cltd
mov
sub
push
xchg
ret
test
das
or
leave
ficomps
shll
push
nop
movsl
mov
push
js
sub
shlb
sbb
cmp
lahf
in
or
out
cmpl
add
cs
cli
push
lds
sbb
lcall
scas
dec
loop
loopne
adc
mov
xor
inc
aad
push
push
xchg
sarb
shr
cmpsb
ss
jb
jns
cld
adc
outsb
insl
cmpl
int
mov
das
jmp
or
fildll
pop
mov
jnp
push
rorl
fildll
cmc
xor
pop
cmp
dec
inc
loopne
loope
movsb
dec
data16
mov
dec
jecxz
psllw
imul
xchg
mov
icebp
clc
pop
dec
xchg
jae
pop
mov
cs
ja
xor
repnz
or
orb
sti
into
add
pop
sbb
dec
jecxz
cmp
cvtps2pi
dec
xor
mov
or
fldln2
and
dec
icebp
int3
outsb
and
xchg
vpslld
sbb
imul
test
mov
or
dec
xor
shrb
cmp
popf
jl
jmp
shll
inc
pop
pushl
mov
xchg
or
or
outsl
popf
out
cmp
cmp
jno
fimuls
out
pushf
in
push
and
dec
xchg
inc
mov
std
sub
in
lea
push
cmp
sub
fisubl
shll
push
pushf
in
ret
pop
add
idiv
mov
mov
dec
addb
scas
jl
rorb
inc
sub
mov
pop
adc
imul
pop
lcall
mov
rclb
cli
repnz
shlb
jl
adc
xor
pop
or
sbb
and
enter
and
pop
out
pop
lds
mov
or
cwtl
cli
cmp
mov
pop
data16
ret
xchg
iret
cmp
je
insb
xchg
push
ljmp
and
xchg
dec
sbb
xor
in
jae
ret
pop
ss
push
push
or
jle
pushf
sahf
sti
imul
mov
mov
imul
out
xchg
mov
jg
dec
mov
out
xchg
mov
repz
aaa
jnp
leave
test
clc
frstor
jmp
cmpsl
outsb
jno
pop
adc
dec
arpl
inc
jbe
imul
mov
xor
pop
insb
jbe
and
and
sbb
mov
and
test
pusha
add
outsl
mov
adc
push
fwait
jle
sub
insl
call
inc
xchg
inc
adc
add
push
jmp
sub
adc
vpsraw
int
or
fs
pop
cmpsb
repz
pop
jns
lods
jle
fwait
ds
sti
jno
sub
sbb
add
cmp
aam
mov
pop
pusha
sbb
push
pop
decl
shr
sub
xchg
mov
sbbb
sbb
cmp
pop
js
xchg
call
fs
lods
hlt
xor
stos
movsb
mov
lods
xlat
pop
sbb
xchg
daa
push
cld
in
push
lea
lods
lea
mov
jnp
sbb
test
and
push
std
and
mov
add
inc
setge
sub
movsb
pop
jecxz
and
push
fbstp
iret
mov
pusha
les
scas
push
or
mov
adc
jae
ss
inc
frstor
dec
or
mov
mov
pop
fstpt
mov
imul
mov
stos
jle
cmc
imul
mov
xor
jbe
push
cmp
fisttpll
jl
gs
lcall
and
in
adc
pop
loope
loop
pop
into
sbb
pop
jno
push
adc
popa
jno
sbbl
adc
push
pop
cmp
dec
ds
pop
ljmp
push
mov
adc
inc
cli
xchg
inc
adc
repz
inc
pop
repnz
repnz
cmp
cmp
addr16
repnz
lds
xchg
aam
pop
add
out
repz
dec
mov
pop
ud1
jbe
or
scas
rcrb
mov
filds
inc
cwtl
subb
pop
adc
cli
scas
imul
mov
pop
cs
xchg
mov
aaa
adc
jae
ds
test
andl
add
xchg
call
rorb
mov
outsl
popa
mov
pop
loope,pt
insb
arpl
ret
xor
dec
inc
push
daa
xorb
cmc
mov
icebp
int3
inc
loopne
cmp
pop
push
pop
sbb
or
mov
and
or
idivb
addr16
stos
fsubrp
xchg
and
xor
add
lret
jge
xor
adcb
enter
or
mov
fsts
pop
mov
sbb
mov
adc
mov
cmp
mov
cltd
dec
mov
mov
xor
loop
cltd
add
scas
mov
dec
or
jle
or
jp
or
cmp
ficoms
mov
sbb
test
jecxz
jne
jp
fadds
pop
sub
inc
xlat
sarl
repnz
imul
dec
inc
lcall
imul
xchg
int
jne
mov
or
sub
repnz
adc
inc
movsb
and
pop
popf
into
mov
push
jge
pop
and
fldt
jmp
lahf
stc
flds
pusha
sub
inc
cmpsl
push
fldenv
in
cltd
lahf
sub
pushl
push
xor
cmc
pop
mov
add
xchg
out
enter
sahf
sbbb
sbb
enter
sqrtps
mov
repz
mov
add
pop
in
xor
insl
jae
ret
cmpsl
cld
push
mov
call
movsb
mov
cmp
repz
fcmovnbe
adc
sbb
push
jecxz
pop
notl
or
loope
xchg
xchg
ja
test
cmp
and
testl
clc
in
ficoms
xor
in
pusha
lock
insl
sbb
push
stos
das
push
cmp
dec
xchg
jbe
stc
lods
cmp
xor
fwait
repnz
rcr
cmpsb
add
or
bound
inc
cmp
pop
out
loope
imul
out
das
jbe
cli
pop
xchg
lahf
push
lahf
mov
mov
loope,pt
xchg
mov
shlb
cmpb
push
int3
sbb
stos
pop
test
or
ss
pop
mov
nop
pushf
pop
push
int
cmc
subb
add
fistl
clc
xor
jae
dec
ret
mov
jae
cmpsl
sbb
mov
movsb
fisubrl
fidivrl
xchg
repz
filds
xchg
inc
mov
xchg
scas
inc
movsl
test
rorb
fisttpl
fldenv
clc
daa
pop
stc
xor
loop
dec
hlt
pop
mov
aaa
ss
stos
lods
jb
cmpb
push
scas
sbbl
arpl
sbb
fwait
and
iret
pop
insb
mov
add
cmp
dec
push
loop
sbb
push
pop
dec
dec
xor
mov
and
je
or
mov
pmullw
cs
mov
jp
add
stos
add
and
pop
ja
xor
lock
fucom
aas
mov
push
dec
test
in
fimuls
shrb
rorl
je
jmp
jecxz
in
push
or
out
cli
iret
push
pxor
cmpsb
mov
xchg
add
test
cwtl
add
imul
mov
push
xchg
cmp
pusha
mov
test
push
xchg
jnp
push
xor
jns
repz
popa
xor
insb
icebp
in
push
xor
int
or
cmpsb
add
mov
addr16
dec
arpl
inc
lods
in
xor
add
call
mov
fwait
inc
mov
mov
inc
hlt
out
ret
cwtl
hlt
pop
stos
sbb
enter
push
std
push
sub
mov
xor
test
outsb
add
dec
mov
or
or
sbb
cmp
pop
lret
mov
dec
pop
add
jae
cmpsl
repnz
jbe
movsb
enter
mov
jp
adc
mov
ret
mov
lret
jne
mov
inc
xlat
rorb
and
mov
mov
lods
mov
jle
push
dec
mov
subb
mov
dec
insl
lret
rcrb
stc
sti
in
jp
movsb
mov
sub
jb
mov
push
rcrl
call
adc
addr16
pop
and
fidivrs
cs
mov
push
xchg
dec
jmp
ds
and
in
jb
xor
inc
mov
mov
mov
andb
jns
jo
in
in
out
in
ja
pop
cmpsb
loopne
out
adc
iret
mov
adc
out
cmp
jae
jb
ds
daa
ds
hlt
fisttpl
sbb
inc
fldcw
rorb
cmp
cmp
loopne
adc
inc
aas
outsb
sti
pop
lea
jp
pop
push
sub
lock
push
or
push
lret
stc
hlt
push
repz
clc
cs
stc
push
sarl
dec
fcmovnbe
dec
push
ss
aad
mov
jne
insb
jno
addr16
stos
add
movsb
cmpsb
rol
xor
stos
xor
movsb
cltd
cmc
shlb
push
es
jmp
das
test
stos
cs
add
lock
ret
dec
sub
outsb
jmp
pop
lods
add
into
dec
add
mov
ss
adcb
iret
daa
xchg
pop
push
mov
or
cmp
pop
xlat
mov
jo
push
mov
sub
mov
xor
pop
stc
stos
dec
jmp
lods
sbb
pushf
mov
cmp
lea
add
add
out
mov
xor
hlt
mov
in
and
repz
adc
sbb
lods
sub
xor
in
dec
call
imul
decl
pushf
test
mov
xchg
aas
jle
das
movsb
pop
pop
or
xchg
add
insb
cmc
jle
mov
push
lret
cmpsb
ret
cmp
jne
cmc
xor
lods
pusha
bound
jbe
xor
mov
jecxz
xchg
mov
jb
sbbl
xchg
movhps
jno
mov
mov
aaa
pop
mov
hlt
add
call
into
inc
test
test
ljmp
sti
aas
xchg
lahf
lret
pusha
ljmp
imul
xor
or
sbb
jg
lcall
jo
int3
and
je
lret
decl
jge
in
mov
sbb
push
pop
add
mov
jecxz
scas
jo
jae
adc
dec
cmp
pop
movsl
sbb
xchg
cmp
or
scas
pop
je
test
push
out
add
cmp
popa
mov
jns
mov
outsl
add
xor
mov
lds
rcrl
idivl
subb
std
icebp
pop
mov
in
mov
xchg
lret
lods
adc
sub
shlb
jge
imul
pop
xchg
and
and
xchg
test
mov
xchg
sahf
pusha
pop
sbb
sbb
pop
popl
leave
popa
pop
adc
imul
lds
les
imul
mov
pop
sbbb
outsb
pusha
inc
pop
jno
movsb
loop
fnstsw
ljmp
xchg
push
mov
fdivp
cli
jp
mov
adcb
int3
jecxz
jns
lock
mov
divb
mov
sbb
int
xlat
push
and
mov
jecxz
pop
jo
negb
mov
inc
aam
cld
push
test
or
and
aad
out
mov
mov
pop
mov
test
je
fdivrp
nop
xlat
cmpsb
leave
pop
and
and
mov
jae
mov
sub
out
mov
dec
mov
and
std
jnp
push
scas
add
loope
or
cmp
sub
add
dec
mov
inc
jne
aam
push
seto
rol
jle
data16
push
fstps
icebp
sbb
jp
out
stc
pop
jb
push
dec
loop
and
ja
pop
mov
mov
subb
push
imulb
xchg
outsb
sbb
aad
mov
inc
scas
xchg
les
inc
mov
push
lahf
pop
daa
clc
movsl
rolb
je
jnp
dec
xor
bound
push
xor
xchg
arpl
cmp
or
pop
fidivrs
inc
repz
push
insl
jecxz
outsb
sub
lret
js
push
adc
in
pop
nop
or
or
hlt
stos
inc
lret
in
and
or
addl
xchg
notl
mov
adc
lahf
cmp
jg
add
icebp
fwait
or
ret
xor
pop
or
nop
outsb
out
iret
dec
mov
dec
inc
mov
xchg
mov
shlb
cmpl
bound
push
mov
pop
xor
and
test
push
pop
sbb
jecxz
cs
in
dec
leave
test
loopne
mov
enter
icebp
pop
bound
scas
cmp
fsubrl
sarl
fnsetpm(287
popl
xchg
stos
pop
aam
jecxz
enter
jbe
mov
pusha
cwtl
sti
pop
pop
shrb
imul
adc
arpl
in
or
inc
push
sbb
jg
aam
or
fimull
mov
mov
stos
lea
negl
inc
pop
mov
rolb
xlat
pusha
cmp
or
bound
pop
and
les
inc
addl
sarb
mov
cmc
inc
xor
or
jno
xor
mov
mov
mov
fsub
movb
fwait
shl
test
fldl
push
cmpsb
mov
mull
movsl
test
leave
inc
sub
inc
inc
dec
out
dec
push
into
dec
divl
inc
or
subb
or
aas
add
and
subl
outsb
xchg
loop
arpl
scas
jae
lret
int3
add
mov
sub
or
dec
sub
dec
rclb
pop
fbld
sbb
aas
popf
or
sbb
stos
mov
cmp
sarb
es
lret
push
xor
outsb
xchg
adcb
sarl
in
mov
sub
inc
fs
call
lock
movsb
pop
daa
cld
bnd
dec
sub
loope
jns
inc
shrb
bound
lret
fcoms
mov
les
and
aaa
adc
jg
clc
sub
ds
and
aaa
cld
xor
xchg
push
mov
push
fwait
or
dec
fcmovnb
push
lahf
and
xor
sahf
add
loopne
push
outsl
in
dec
bound
inc
jmp
int
aaa
sub
lds
imul
xorl
or
mov
mov
and
or
mov
imul
hlt
hlt
cmp
ss
movsl
push
scas
inc
stos
dec
xchg
outsb
jb
adc
dec
js
xor
sub
les
mov
idiv
cwtl
shr
push
cli
sbb
imul
inc
lods
dec
push
sub
imul
test
es
mov
icebp
jecxz
mov
xor
sahf
add
jnp
out
cs
inc
push
lahf
adc
or
addr16
sti
sub
lea
mov
outsb
jnp
pop
adc
mov
adcl
jno
jne
imul
sub
xor
cmp
pop
sub
push
fists
pop
add
mov
pop
cmc
das
pop
sub
aaa
cmp
cli
outsb
sub
sbb
gs
mov
push
push
dec
out
jnp
xchg
push
or
testl
jl
add
ret
xchg
insb
xor
pop
jp
mov
je
mov
push
inc
xor
inc
xchg
mov
adc
testl
push
push
bnd
pusha
and
jg
sar
sub
mov
shlb
dec
push
lcall
mov
xor
push
mov
pop
add
pusha
js
jnp
cmp
gs
xchg
call
dec
lret
jbe
mov
push
in
test
in
cmpsb
sbb
push
out
ret
inc
pop
sbb
imul
popa
rol
hlt
daa
adc
movsb
jp
fdiv
cmp
rcr
filds
inc
mov
mov
cmc
pop
mov
jl
arpl
scas
mov
or
and
dec
adc
jns
inc
xchg
pop
test
gs
xor
mov
cltd
sub
pop
into
nop
mov
adc
ljmp
call
stc
repz
rclb
or
mov
and
pushf
sbb
sbbb
decb
inc
adc
out
jl
call
push
lods
fidivrl
in
inc
lea
push
push
adc
mov
push
fisubl
pop
lods
jnp
repnz
outsl
and
pop
mov
ret
and
add
fsubrl
loopne
jmp
in
scas
fildl
xor
lret
ja
mov
loopne
pop
and
mov
jnp
test
mov
movsl
pop
pop
out
push
pusha
fbld
shlb
sbb
mov
xor
pop
sbb
mov
add
pop
fs
rcll
ret
push
cltd
push
xorl
jbe
inc
pop
inc
test
xor
sbb
imul
adc
hlt
push
adc
xchg
jge
sahf
testl
push
ret
sarb
jns
cltd
inc
ja
cwtl
dec
pusha
push
cmp
sbb
and
or
fs
cmc
add
inc
out
movsl
add
cmp
cmp
mov
xchg
jne
fwait
jnp
xchg
cmpsl
sbb
pop
stos
push
in
mov
pop
dec
push
or
imul
inc
xchg
jb
scas
adc
int3
cltd
fs
lods
fildll
shl
xor
sti
sti
jbe
ss
xor
xlat
inc
fisubrs
or
or
cltd
pop
jecxz
outsl
adc
sub
push
divb
push
mov
xchg
out
mov
pop
xor
imulb
shll
fldlg2
cmpsl
lock
lahf
mov
in
nop
jle
mov
insb
lcall
lcall
sysenter
jg
push
fidivl
ja
rolb
and
ja
aam
sub
rorb
jle
jmp
aam
jp
ffreep
add
imul
test
add
popa
jg
sbbb
inc
aad
aad
add
mov
push
sbb
fldt
mov
es
sub
pushf
push
int
jge
iret
data16
dec
and
test
sub
fldl
outsl
loope
lods
nop
push
add
loop
daa
and
add
fstl
cwtl
push
push
jg
pop
rcrb
inc
cmp
bound
pop
push
mov
pop
mov
xchg
mov
xchg
and
or
andb
ja
jge
mov
inc
dec
les
fwait
cmp
mov
dec
or
mov
loopne
dec
scas
out
bnd
icebp
jns
into
lods
and
adc
popa
sahf
or
xchg
call
pop
sbb
adc
sbb
lods
and
xor
sbb
loope
hlt
sbb
add
sbb
xor
aaa
inc
ror
shrb
or
jo
shll
fwait
xchg
jo
mov
push
push
push
dec
mov
test
incb
fwait
lret
cli
xchg
pop
xor
gs
push
fildl
mov
jne
cmp
dec
or
rclb
or
scas
dec
mov
fisubrs
xchg
sahf
push
xchg
dec
or
pop
mov
jno
xor
andl
stos
jle
lds
pop
std
mov
or
leave
dec
add
cmp
push
sti
iret
adc
out
fwait
outsb
mov
mov
pop
push
lods
lock
shrl
inc
cmp
push
add
mov
mov
push
push
dec
fistps
lahf
sub
sahf
xchg
mov
push
dec
inc
push
or
adc
in
sahf
and
insb
xor
in
pushf
div
scas
popf
into
xchg
push
in
xor
mov
push
xchg
mov
ror
dec
loope,pt
cmp
jo
or
pop
inc
sbb
nop
scas
fistpl
vucomisd
nop
xor
push
mov
inc
stos
jg
scas
cli
inc
lods
test
jns
xor
rorb
push
movb
fs
sarb
add
sub
aas
outsb
cld
xchg
daa
in
cs
cmp
dec
sub
mov
jmp
push
cmp
je
xor
mov
pusha
inc
push
cmpsl
pop
sti
imul
in
mov
stos
repnz
mov
mov
jmp
pop
pop
or
into
and
dec
xchg
dec
push
das
mov
and
mov
xchg
inc
push
sahf
lods
cltd
mov
xchg
shl
or
test
inc
les
add
sub
aad
cmp
dec
es
dec
or
and
inc
lods
dec
push
and
sbb
aam
xor
ss
ss
jge
xchg
aam
xor
ret
lock
fistpl
pop
outsb
mov
mov
xor
push
cmp
imul
and
outsl
xlat
jne
mov
fs
xor
lahf
mov
or
aaa
inc
cmp
xor
pusha
subb
les
fstpl
pop
adc
cmpsb
cmp
out
xchg
repnz
xor
adc
mov
cli
cmpb
iret
test
jo
je
popa
lock
push
pop
cmp
or
lret
fisubs
lds
jnp
adcl
shrl
push
inc
xchg
add
rcrl
jns
cmpb
pusha
jns
fwait
bound
ja
adc
inc
xor
das
xor
in
mov
std
mov
jmp
inc
and
mov
out
pop
jns
xor
xor
scas
push
stos
int
xchg
scas
cmp
pop
push
jae
jl
push
into
dec
inc
adc
fdivrl
cli
pxor
add
adc
dec
sti
push
out
or
cld
cmpl
push
dec
arpl
add
inc
daa
cwtl
fwait
inc
fisttpll
popa
sar
lods
stos
push
sbb
jnp
jae
cmp
xchg
ret
or
mov
ja
aam
test
xchg
pop
aad
sbb
sbb
sub
lds
movsb
ds
lahf
cmc
sbb
nop
test
dec
cltd
dec
lret
sub
dec
xchg
cmc
rcrb
sbb
mov
test
inc
sub
cmp
dec
ret
fidivrl
inc
enterw
push
repnz
cltd
xchg
push
test
out
test
pushf
icebp
mov
icebp
adc
not
adc
jp
jno
dec
iret
lea
cmp
gs
clc
sahf
sbb
loopne
jl
aaa
push
rcrl
cmpsb
xchg
lea
int3
xchg
std
rorl
in
clc
jnp
mov
push
jbe
cld
cmp
lock
push
ss
lods
mov
push
xchg
xchg
or
push
jp
xchg
mov
orb
in
out
sar
lahf
insl
fmull
cmpb
mov
xor
jae
mov
lea
ror
fisttps
std
loope
fmull
lahf
rcrb
loopne
out
and
out
fisubs
xor
push
test
adc
out
test
in
sbb
out
leave
xchg
ror
and
add
faddl
clc
mov
or
jle
cwtl
mov
pop
shlb
scas
lret
inc
push
cmc
pop
lock
jb
or
hlt
imul
in
mov
cwtl
inc
out
dec
sbb
push
sub
adc
mov
clc
mov
mov
xor
inc
mov
jnp
sbb
mov
lods
mov
push
lods
imul
pop
jge
nop
dec
movsb
push
xchg
popa
inc
test
rol
flds
outsb
clc
push
xorl
push
stos
mov
movsb
lret
cmp
inc
bound
cltd
cli
sbb
fldcw
fldenv
test
and
cmpb
push
sbb
out
lret
test
mov
adc
xor
adc
leave
std
xor
insl
cwtl
mov
mov
sbb
push
lea
clc
mov
pop
xorl
adc
mov
sub
faddl
inc
nop
in
dec
cmp
test
subb
mov
sbb
test
xchg
bound
leave
sbb
inc
and
leave
sarl
es
in
addr16
xchg
rcl
and
imul
int
xchg
xchg
fsubl
icebp
inc
mov
lcall
push
mov
cltd
sub
je
jmp
daa
sub
lds
test
in
daa
andl
mov
es
imul
fs
addr16
test
insl
push
ljmp
loop
movsb
mov
jge
leave
push
imul
and
mov
xchg
xchg
xchg
into
dec
into
scas
les
sahf
inc
clc
xchg
inc
aaa
es
add
outsl
popa
ret
jg
js
mov
sahf
dec
add
adc
outsl
pop
xor
sahf
sbb
clc
into
jnp
cmp
int
stc
in
push
arpl
in
mov
sbb
in
adc
cmpsl
and
push
mov
pop
mov
popf
add
out
jmp
jmp
sub
loopne
in
xor
loopne
and
and
or
push
jns
mov
test
notb
insb
push
aam
push
xchg
mov
mov
lret
push
xchg
push
push
xchg
scas
cs
cli
pop
bound
and
sbb
movsl
xchg
divl
repnz
lahf
ljmp
jmp
pop
xchg
cwtl
inc
int
mov
inc
and
test
test
cmp
lahf
imul
test
sub
mov
pop
movsl
and
add
mov
cmp
xor
push
cmpsl
repnz
into
sbb
add
cli
mov
out
fcmovnbe
movsl
and
pmaxub
rep
jle
mov
mov
aaa
jbe
push
xor
xor
push
js
mov
push
lret
loop
mov
xchg
jae,pt
std
movb
pop
mov
pusha
mov
test
fiaddl
xor
aas
push
dec
or
xlat
sar
ss
nopl
adc
movsb
jp
icebp
scas
pop
sub
lods
shrl
cmp
shrl
popa
rcr
out
jg
and
mov
xor
sarb
imul
test
mov
push
xlat
std
lock
cmp
mov
sub
xchg
inc
jp
sbb
push
insb
out
leave
push
shlb
sti
jno
repnz
nop
fstl
jp
aas
ret
outsb
adc
aas
aad
cmpsb
fcoml
popf
jns
fdivrl
xor
fcoms
repz
jmp
push
bound
iret
pop
jb
out
dec
add
pop
aas
xchg
jnp
sub
dec
decl
mov
xchg
or
pop
dec
gs
mov
ficoms
enter
insb
ret
je
jp
fadd
in
sub
movsl
loop
mov
movsl
push
mov
mov
lcall
adcl
shrb
lea
mov
inc
ja
jp
push
xor
sub
pop
and
mov
dec
repnz
sbb
mov
push
xor
sub
xor
aam
adc
sub
and
inc
or
bound
pop
imul
or
loopne
shll
pop
push
insl
adc
inc
mov
pop
js
leave
jg
popf
shlb
fldcw
cmpsb
mov
imul
mov
inc
psubusb
sbb
mov
fs
ss
leave
pop
js
jmp
pop
hlt
outsl
mov
mov
out
pushf
adc
fcomip
lcall
gs
inc
mov
test
push
into
xchg
cmp
out
leave
sbb
dec
inc
inc
das
push
ss
sbbl
sub
fs
or
rorb
and
leave
or
and
jno
sti
fistl
mov
or
push
jbe
aam
mov
lret
shll
pusha
cmp
and
mov
or
xor
enter
push
icebp
fwait
in
push
mov
out
push
xor
mov
mov
lret
jl
pop
daa
lcall
fs
dec
outsl
lret
mov
mov
sbb
xor
ss
dec
lock
jb
mov
sbb
aas
fcomip
push
add
adc
test
enter
psubd
and
rcrl
push
test
inc
pop
push
xchg
sti
sar
in
push
add
cmpsb
cs
les
loope
push
xchg
pushf
xchg
dec
movsb
mov
daa
mov
pop
push
test
push
cmp
xor
cmp
sub
xor
aaa
add
insl
pop
pop
and
jmp
mov
fisubs
in
jo
jmp
or
add
aaa
aas
mov
loop
outsl
add
mov
mov
pop
ss
das
add
imul
push
std
inc
test
add
mov
xor
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
fildll
lret
les
jecxz
outsl
lock
add
sub
daa
pop
mov
xor
imul
mov
jnp
jbe
fldenv
mov
pop
or
mov
mov
inc
sti
jecxz
cmp
subl
jne
mov
es
test
mov
pop
jae
push
aaa
movsl
or
and
and
daa
push
jne
pusha
icebp
jge
out
lods
sub
aam
sub
mov
mov
mov
xchg
aas
dec
and
stos
negl
outsl
inc
and
and
jmp
fwait
or
pop
mov
mov
adc
jmp
push
mov
push
xchg
sbb
sbb
int
cmc
iret
loop
mov
andl
sub
scas
ret
sbb
add
and
sbb
out
clc
pop
sub
add
bound
push
cltd
or
adc
mov
cwtl
repnz
sbb
pushf
sbb
icebp
stos
dec
sahf
xchg
or
xchg
sbb
lret
andl
lcall
mov
outsb
test
shrb
pop
fucom
or
add
fildl
sub
jno
stos
cmp
repnz
aas
or
das
adc
xor
dec
jnp
lock
sbb
je
jmp
shrb
in
mov
loope
sub
lock
mov
pop
jne
ret
cmp
cmp
out
push
mov
jns
cwtl
inc
stos
inc
scas
repnz
lahf
mov
mov
aam
mov
out
pop
adc
inc
cmp
add
jp
jns
data16
jge
jae
dec
and
testl
fistl
in
test
adc
stos
insb
xlat
mov
mov
cld
insl
pop
push
rcrl
sbb
fs
test
fstps
addr16
xor
push
test
mov
cwtl
dec
and
xchg
sbb
pop
in
jne
insl
jbe
xlat
in
xchg
sub
mov
movl
sbb
push
push
jo
mov
loopne
mov
sbb
mov
sub
int3
test
dec
mov
and
je
shl
int3
xor
fildll
cmp
inc
divl
scas
loopne
unpcklps
imul
test
out
adc
adc
jnp
or
ja
out
rclb
es
imul
in
mov
in
cmp
or
jl
mov
xorb
insb
jp
jns
sub
mov
jmp
stos
push
and
push
inc
push
adc
aam
orl
pushl
dec
mov
imul
leave
pop
cli
popf
addr16
adc
gs
dec
out
gs
mov
or
adc
das
out
pop
fildl
push
icebp
xchg
push
iret
mov
fcmovbe
adc
iret
loop
dec
lahf
nop
adc
pop
sarb
cmp
daa
jle
mov
hlt
out
inc
test
dec
ja
cltd
call
lods
jo
push
jge
fwait
rcrl
mov
testb
sbb
movsl
ja
sarl
nop
cmc
stc
mov
shlb
push
and
xchg
sahf
mov
out
cmpsb
xchg
xor
sbb
lret
roll
popa
lds
clc
cmp
sub
mov
rcrl
rol
xchg
lock
into
cwtl
fildl
data16
xor
mov
fildl
int3
or
or
push
bnd
mov
test
xchg
mov
adc
mov
data16
sub
shl
cld
aas
inc
push
xchg
push
fiaddl
and
movsb
sbb
dec
test
dec
clc
push
adc
lods
push
cmp
mov
inc
mov
rcr
jae
add
cs
adc
sbb
pop
pusha
add
mov
xchg
ja
push
repnz
xor
arpl
shll
inc
test
lods
sbb
xchg
and
xor
or
push
aad
pop
pop
das
mov
add
aam
cmpsl
mov
jge
sbb
mov
adc
mov
and
jmp
pop
fdivl
shll
icebp
lods
scas
push
cltd
xchg
push
insb
xchg
fsubrs
pop
mov
idiv
jg
inc
sub
sbb
push
push
outsb
inc
fidivrl
mov
jne
sbb
in
in
adc
lret
aaa
ja
jp
xor
lea
fldcw
mov
movsb
es
inc
call
mov
xor
dec
or
mov
ds
add
adc
cmp
jns
jo
push
or
adc
sbb
stos
push
xor
cmp
jae
jl
ret
or
cmp
fidivs
pop
std
mov
mov
sahf
dec
aad
inc
inc
in
mov
jecxz
imul
jo
scas
jne
jb
sbb
cmp
adc
xlat
lret
xchg
fwait
mov
outsb
test
pop
add
popa
jp
fmuls
cwtl
mov
pop
pushf
sbb
test
ss
pop
ja
cmp
or
sub
fwait
jne
mov
or
jae
mov
repz
jbe
nop
lret
clc
lret
push
mov
dec
mov
sbb
mov
scas
inc
cmpsb
cmp
movsl
push
sbbl
mov
vmread
xchg
sub
mov
pop
jne,pt
lock
inc
mov
fwait
lahf
mov
mov
push
or
mov
inc
and
xor
addr16
or
imul
test
pop
cmc
adc
dec
or
and
pushf
jbe
ficomps
cmp
sbb
int
mov
sbb
push
fs
mull
mov
adc
or
adc
fucomi
jae
xlat
in
and
int3
in
mov
adc
mov
imul
jge
push
adc
xchg
cmp
and
shl
jb
adc
aaa
mov
ret
scas
loopne
inc
out
cmp
insb
clc
fisttpll
sub
xchg
sbb
push
aad
adc
sub
lea
sahf
jb
fsubrs
int
mov
add
xchg
mov
xchg
jge
lods
daa
aam
adc
loopne
dec
shlb
incb
int3
push
arpl
mov
mov
mov
jmp
pop
outsb
jle
sbb
or
insl
inc
arpl
xor
mov
sub
mov
jnp
mov
sbb
mov
cs
out
ds
cld
lret
dec
mov
enter
jmp
jecxz
imul
mov
cmp
mov
mov
xlat
sub
and
add
es
and
and
fsub
and
int3
inc
and
mov
insl
inc
je
decb
jb
data16
out
out
cmp
push
jns
xor
dec
daa
xor
adc
push
mov
dec
loopne
cld
cli
cltd
push
push
mov
mov
imul
jnp
stos
out
or
push
fisubs
jge
imul
sbb
xchg
addr16
dec
sbb
xchg
push
int
into
jbe
xlat
insb
or
inc
fidivrs
popf
or
aam
inc
jecxz
mov
push
lahf
xchg
sarl
cmp
xor
daa
test
cwtl
inc
jmp
mov
lahf
inc
je
dec
pop
xlat
out
movsb
shr
lock
call
inc
lahf
push
test
movsl
pop
jge
pushl
loop
stc
mov
sti
cltd
sbb
fwait
jno
fmuls
test
inc
adc
out
or
xchg
jmp
pop
addl
inc
jmp
sbb
or
inc
jnp
pop
inc
sbb
xchg
mov
sahf
add
and
test
das
mov
out
mov
pop
lret
je
int
dec
xor
ljmp
repnz
into
mov
jecxz
stc
xchg
nop
mov
add
push
cmc
divb
lcall
loopne
adc
push
out
mov
loopne
jmp
and
xchg
lcall
xchg
mov
nop
lds
icebp
sub
push
shlb
jno
mov
pusha
out
into
push
imulb
dec
pushf
xchg
enter
sub
sti
push
add
mov
ret
fcmovbe
insb
fsubr
xchg
in
ja
pop
cmp
push
jmp
outsb
adcb
in
mov
mov
test
sahf
sbb
std
xor
lcall
fwait
std
xchg
cmp
clc
fcompl
jno
movsb
push
adc
ds
xor
scas
jo
sahf
xchg
jl
insb
pop
outsl
iret
negl
xchg
inc
cmc
inc
mov
dec
bound
mov
push
mov
xor
scas
xchg
test
loopne
leave
aam
imul
test
addr16
or
scas
push
fwait
inc
loope
mov
shlb
addl
ret
mov
push
arpl
cli
mov
pop
mov
pop
nop
cmp
out
mov
inc
pop
imul
adc
add
test
es
mov
mov
jle
hlt
add
cmpb
mov
jecxz
lcall
pop
cmp
outsb
add
jp
mov
fstl
mov
test
das
dec
idivl
and
inc
xchg
pop
mov
xor
and
add
mov
xor
lret
and
insb
test
jo
xlat
in
addb
add
aaa
outsl
test
jge
mov
jle
cld
push
lods
andl
mov
popf
xchg
push
and
sbb
mov
mov
fsubrl
and
adc
dec
inc
sbb
inc
aam
mov
mov
outsl
addb
dec
and
mov
push
dec
push
xchg
cs
sub
popa
xchg
push
push
jno
lods
insl
jge
add
in
dec
mov
dec
fcoml
in
cmpsb
lods
xchg
mov
mov
add
pop
xor
test
cltd
pop
and
out
jmp
push
mov
insb
div
addr16
push
cmp
cmp
adc
adc
std
outsb
incb
int3
adc
xchg
popl
push
push
mov
dec
add
adc
jo
push
mov
jl
cmc
cli
ret
das
notb
fcoml
pop
pop
popf
inc
sbb
test
inc
repz
jae
sbb
pop
cmp
mov
leave
mov
mov
iret
dec
cmp
pop
dec
xor
stos
roll
push
jns
add
icebp
test
aas
jbe
adc
pop
pop
movsb
std
ret
loop,pt
jg
insl
xchg
rcll
lock
pop
mov
cld
dec
or
stos
adc
adc
mov
push
leave
mov
dec
ja
cmp
mov
mov
sub
pop
fldcw
in
adc
mov
sahf
jecxz
xchg
out
popf
gs
sbb
lcall
push
mov
ret
les
pop
or
sbb
inc
mov
mov
fwait
mov
lods
repnz
cmp
lret
adc
pop
int
mov
and
jecxz
jge
das
std
hlt
fldenv
push
loop
popa
shr
iret
js
mov
stc
in
jae
push
clc
sbb
xlat
scas
jae
jmp
pop
push
inc
addr16
cwtl
in
sbb
pop
mov
push
push
xor
in
and
inc
jp
pop
icebp
pop
xchg
mov
rorl
add
push
movb
or
add
rcl
mov
xor
cmc
mov
adc
out
enter
sub
scas
mov
fcmovnbe
iret
arpl
dec
jmp
sub
pop
pop
xchg
es
push
mov
les
xor
mov
arpl
adc
fs
sub
add
mov
shlb
mov
das
cmp
dec
out
out
popf
outsb
lods
daa
lcall
lods
mov
cwtl
lahf
pop
scas
inc
push
jo
xchg
adc
xchg
sub
mov
add
imul
sbb
imulb
pop
pop
divl
cmpl
jo
mov
sbb
shrb
negb
mov
shlb
lock
inc
and
out
jecxz
jge
cmp
lcall
lods
int
jae
pushf
mov
andps
fsubr
in
into
and
xchg
inc
test
imul
ljmp
cli
jp
inc
mov
dec
inc
divl
pop
xor
mov
lcall
push
imul
push
es
fcompl
dec
mov
lods
sub
loope
out
pushf
inc
cld
dec
sbb
mov
mov
mull
xorl
jns
pusha
inc
test
inc
pop
sbb
mov
sub
xchg
jge
and
add
cmp
out
sbb
pop
outsl
xorb
aaa
shll
push
ret
daa
leave
adc
mov
cli
lret
and
iret
imul
dec
orl
cmpsb
push
push
clc
mov
popa
jo
test
push
scas
out
dec
cltd
fsub
scas
mov
mov
mov
loop
out
notl
adc
loopne
mov
mov
cli
fistl
movsb
popl
or
popf
push
mulb
dec
dec
dec
inc
adc
cld
imul
mov
xlat
shr
inc
and
nop
push
push
daa
or
inc
rorl
sahf
dec
xchg
out
push
inc
xor
adc
add
fsubl
stos
jno
mov
push
sub
mov
enter
xchg
mov
push
mov
push
add
pop
clc
outsb
inc
add
ljmp
push
lea
jmp
aad
mov
adc
rcrl
cmc
daa
lea
dec
xor
push
jb
in
outsb
out
ljmp
aad
sarb
and
mov
xlat
nop
inc
dec
push
push
iret
fnsave
and
fs
add
jns
ret
mov
outsl
xor
mov
scas
jecxz
mov
ss
mov
xchg
insl
pusha
push
push
sub
sbb
jno
and
mov
scas
cmp
int
clc
enter
insl
xchg
lds
in
arpl
jne
subb
mov
fbstp
inc
jle
adc
js
sub
sbb
out
fnsave
mov
std
push
in
cs
ljmp
inc
xor
cs
outsl
or
bound
fisubs
test
lret
dec
inc
out
pop
add
les
xchg
ss
adc
mov
out
imul
ds
xchg
or
fmulp
jle
xor
mov
push
fmul
scas
pop
mov
subb
fisubl
test
push
xchg
jge
mov
push
out
aad
adc
frstor
shlb
outsb
punpckldq
xchg
push
dec
iret
repnz
mov
mov
mov
negb
outsl
cmp
dec
mov
adc
mov
pop
sub
push
push
aas
subl
cmpsl
jbe
pop
pop
dec
xchg
int
or
jbe
push
adc
mov
mov
repz
decl
adc
or
mov
xchg
adc
cmpb
push
sub
inc
aam
outsl
cmp
bound
insb
pop
ret
pusha
enter
xchg
repnz
xchg
popf
negb
rcrb
mov
jp
or
stos
and
add
mov
add
mov
out
sbb
jbe
adc
jp
lock
jge
add
xchg
cmp
test
adc
lea
inc
or
fnsave
push
daa
mov
xor
in
lea
cmp
aam
inc
daa
aaa
ljmp
js
ror
loopne
int3
sub
lea
cmc
movsb
jle
out
cmp
inc
lods
add
sub
popf
outsl
jno
xlat
jecxz
lea
pop
cmp
push
lcall
sub
jp
adc
sahf
cmp
shlb
jle
call
sub
into
pop
rcl
inc
pop
divl
dec
leave
rcll
subl
scas
pop
push
sub
imul
lret
ds
rcll
aam
sbb
jle
jge
inc
icebp
clc
lret
mov
pop
fsubs
xor
pop
jne
push
dec
cwtl
mov
mov
in
cmp
addl
andl
jmp
test
inc
shll
add
insl
pop
mov
out
fiaddl
sbb
inc
pusha
loopne
xorl
sub
sbb
and
mov
aas
icebp
das
xchg
enter
adc
fcomps
jne
and
push
fisubrl
mov
stos
add
mull
aas
aad
ss
test
int
pop
sbb
popa
pop
xor
gs
addr16
std
adc
sti
rcl
sbb
arpl
hlt
pop
push
push
pop
push
and
pop
or
adc
pop
or
or
cltd
dec
lds
bound
bnd
daa
aaa
jne
imul
fsts
insb
outsb
sbb
or
jecxz
mov
movsl
fwait
loope
xor
mov
sbb
int3
lods
pop
rcl
pop
fldcw
movsb
popf
loopne
cltd
shlb
adc
inc
mov
in
jo
fndisi(8087
inc
and
addr16
jmp
xchg
mov
push
mov
loope
test
pop
out
lock
adc
call
fwait
les
aas
xchg
in
pop
leave
sbb
arpl
xlat
pop
loope
xor
mov
sub
and
jl
sbb
mov
js
jnp
pop
ret
mov
ja
dec
lahf
sub
ljmp
cmpsl
in
or
scas
in
mul
sysexit
mov
stos
test
test
fstpl
inc
xorb
sbb
mov
fisubs
jns
repz
push
cmc
push
pop
mov
int
xchg
nop
pop
xor
int
inc
xchg
je
push
mov
stos
mov
fnstsw
xor
roll
lret
fs
lcall
aaa
test
push
xchg
sub
push
out
mov
sbb
das
cwtl
sub
dec
jle
adc
imul
inc
scas
jbe
je
mov
xchg
dec
xchg
push
in
jno
dec
dec
inc
mov
jp
cmpb
int3
mov
sub
lret
aam
dec
cmp
mov
popa
dec
mov
xchg
sub
outsl
inc
dec
decb
rcll
xchg
sbb
xchg
fwait
sbb
das
or
movsl
push
xchg
dec
in
inc
leave
push
lods
lahf
and
xchg
add
stos
out
enter
mov
xor
insl
adc
andl
sub
push
mov
cltd
rorb
rorb
cld
xor
mov
mov
jecxz
and
or
repnz
inc
and
push
arpl
sub
jo
xchg
jecxz
inc
cli
in
and
jbe
xchg
inc
dec
and
mov
mov
lcall
ja
loopne
add
int
and
mov
and
mov
cmp
imull
cli
push
and
js
inc
or
push
shll
add
fstp
adc
pop
adcb
and
adc
dec
lcall
decb
and
loop
test
loopne
pop
add
hlt
xor
sub
mov
mov
adc
loopne
sub
xchg
push
cmp
lcall
fcompl
loope
mov
sbb
aas
movnti
arpl
sti
pop
push
movsb
loope
sbb
mov
call
jge
pop
pop
jbe
scas
shrb
inc
std
scas
cmpsb
add
test
bound
xchg
jge
mov
shrl
sbbl
cld
mov
sbb
nop
jb
mov
push
movsl
pusha
cmp
lea
idivl
or
push
outsb
pop
lcall
div
arpl
leave
out
jecxz
iret
mov
inc
inc
xor
cmpsl
pusha
inc
shrb
mov
insl
xchg
scas
dec
stos
cmc
popa
mov
jp
shl
sbb
jae
xchg
mov
sbb
jle
push
push
insl
scas
cwtl
outsl
data16
sbb
loopne
imul
push
jns
jns
xor
hlt
movsb
jge
out
sbb
pop
divb
push
js
push
mov
aam
sbb
pop
sbb
gs
cs
jmp
fdivrp
adc
gs
test
mov
jo
jnp
jnp
and
mov
aad
mov
stc
mov
movsl
cmpsl
mov
jne
xchg
outsl
gs
les
mov
dec
leave
fwait
push
add
inc
mov
jg,pn
out
mov
mov
fldcw
jle
inc
inc
jns
mov
sarb
cs
insl
xchg
in
sbb
mov
xchg
insl
aad
out
aaa
lock
shll
int3
scas
dec
jns
xlat
lods
scas
fnsave
and
push
icebp
lock
sub
popf
cmpsb
fdivr
aaa
fdivr
scas
xor
lret
add
popa
sbb
jmp
push
jne
cmp
and
movsl
cmpsb
jae
sbb
sti
jmp
cmc
inc
mov
xor
jle
xchg
xchg
add
xor
jnp
mov
ficoms
add
jo
negl
and
sbbb
inc
push
and
adc
clc
mov
jmp
xor
xchg
inc
sbb
jp
add
cld
in
ss
pop
xchg
cmc
cltd
or
or
test
es
loop
int
lea
or
jl
cli
cwtl
insb
rorl
jne
popf
pop
sub
enter
and
or
popa
lcall
mov
or
mov
lcall
out
out
inc
add
inc
rclb
mov
cld
mov
xlat
inc
cmp
xchg
add
scas
push
andl
mov
xchg
mov
cmc
mov
push
and
xor
push
and
lods
adc
addl
dec
add
and
jbe
cmp
pop
mov
inc
mov
jnp
imul
lods
xor
mov
adc
jnp
fs
add
mov
and
xchg
pop
cmp
xchg
sbb
mov
inc
cwtl
xor
lret
mov
popf
jne
sbb
nop
xor
fiadds
and
fcomp
mov
fwait
mov
pushw
sti
dec
sub
repnz
pop
mov
mov
pusha
mov
daa
call
in
cmp
shrb
cs
stos
mov
inc
xor
imul
gs
out
mov
in
xchg
or
lret
dec
cmp
arpl
push
or
sbb
or
aam
cmp
pop
push
lods
pop
movsl
das
jle
pop
adc
mov
mov
aam
inc
ja
adc
bound
imul
ja
fstpl
add
rorl
mov
hlt
pop
inc
adc
or
rol
push
out
add
mov
rcrl
xor
mov
ret
ljmp
mov
add
jns
popf
insb
mov
or
nop
movsl
cmp
cmove
insb
dec
mov
inc
fmul
push
push
je
jnp
jmp
das
mov
test
fwait
inc
add
adc
jle
dec
xchg
add
adc
scas
cmpb
mov
into
dec
push
inc
jge
sbb
xchg
cld
sub
xor
or
cmp
fiaddl
sub
movsl
push
aaa
out
pop
jmp
jmp
ret
fistps
cmp
dec
mov
sbb
add
lret
orb
inc
jp
or
cmp
imul
jbe
sbb
mov
and
dec
push
ja
push
mov
inc
and
inc
arpl
lods
cld
je
bound
jo
mov
push
push
mov
fstpt
xchg
lahf
xchg
out
stc
pusha
jae
push
imul
xlat
xchg
gs
mov
aam
jbe
mov
nop
mov
clc
testl
sbb
jmp
xchg
sub
test
xchg
call
movsb
imulb
repz
lret
sbb
lret
andps
sub
ljmp
pop
in
push
call
add
add
outsb
mov
jl
xlat
lds
hlt
sub
loopne,pn
fistps
dec
fcoms
incb
fcomps
mov
lcall
mov
jmp
lahf
mov
dec
imul
pushf
push
test
mov
in
mov
fisubs
push
cmp
cs
jnp
pop
xor
jno
mov
xchg
mov
sub
imul
les
inc
jns
movsb
outsl
xchg
dec
xchg
jae
cs
insl
aad
jecxz
and
js
add
sub
lret
push
repnz
xor
aam
mov
mov
leave
pop
pushl
inc
push
call
aam
outsb
inc
lock
ljmp
dec
arpl
lock
mov
pop
pusha
loope
mov
cmp
adc
jae
enter
fistps
xor
mov
in
rorb
or
lods
inc
push
data16
outsl
cwtl
or
cs
pop
je
mov
jnp
js
mov
adc
repnz
mov
ret
fistl
or
jae
jmp
inc
ret
call
pop
jge
lea
clc
popf
jb
fucomip
ret
fmuls
sbb
mov
inc
mov
add
push
out
aam
inc
pop
jno
imul
push
pushf
mov
mov
pop
adc
and
out
insl
outsl
xchg
push
les
pop
and
jnp
or
adc
ret
xor
add
cmp
lea
xchg
test
ja
or
je
sti
outsb
shlb
aam
scas
mov
movsb
jb
out
gs
mov
fistl
lcall
inc
and
mov
mov
push
sub
outsb
add
leave
cld
sbbl
out
jp
in
fsubrp
int
sbb
imul
jb
push
push
add
cmp
dec
test
sub
inc
testb
jmp
push
push
cs
xchg
cli
stc
add
pop
adc
pop
xchg
adc
js
sbb
jno
repnz
push
mov
add
je
insl
pop
xor
pop
out
fisubrl
dec
jb
sahf
and
arpl
test
mov
pop
dec
clc
ja
xor
adc
xchg
mov
jns
pop
leave
ror
shlb
repnz
xlat
cmpsb
lret
mov
sahf
std
inc
into
std
xchg
lods
scas
xchg
mov
orb
fstpt
sbb
outsb
mov
pop
ja
adc
outsl
add
adc
and
popa
mov
leave
sbb
push
add
mov
idivb
mov
insb
movsb
repnz
in
movsl
clc
inc
imul
jl
lret
jae
xor
int3
das
inc
inc
sahf
cmpsl
into
push
adc
mov
aam
push
adcl
sub
sub
jae
out
daa
loopne
mov
aaa
mov
pop
jb
pop
enter
add
cmp
gs
cmp
lahf
fwait
int3
jmp
fiadds
push
xor
cmp
loope
mov
pop
cmp
push
cltd
out
xor
add
or
jo
fildll
mov
adcl
test
sub
sub
jno
addr16
or
mov
cmpsb
js
call
aas
pushf
test
push
xor
xchg
lcall
inc
dec
notl
mov
sbb
lahf
mov
push
frstor
push
mov
cmp
mov
decl
mov
lds
pop
xor
xchg
push
push
cld
stos
sub
aad
loope
out
jl
mov
lret
mov
pop
mov
dec
movsb
jp
call
mov
and
lret
sub
mov
sbb
jecxz
shr
in
lret
adc
and
mov
popa
andl
pushf
mov
shr
inc
lret
cs
pop
stos
out
xchg
inc
mov
xchg
in
fcmovbe
aas
sbb
iret
ss
adc
cmp
jmp
iret
jb
insl
dec
ret
xor
dec
sub
les
in
add
loopne
fs
into
cmp
loope
repnz
aam
mov
test
dec
xchg
push
es
or
fstpl
insl
mov
icebp
fstpl
and
xchg
sub
push
pop
ret
push
push
hlt
dec
ret
inc
vorps
movsb
inc
cmpb
mov
sbb
inc
dec
jne
fdivrp
cmpsl
bound
rdtsc
pop
in
or
push
cmp
cmp
and
pop
stc
lea
test
movsl
mov
jp
mov
or
outsl
cli
int
insb
dec
push
mov
dec
inc
sarb
cmp
dec
lods
jnp
jb
insl
lods
xor
mov
lock
lcall
popa
movsb
fimuls
add
push
mov
cwtl
dec
pop
inc
mov
inc
xorb
sarb
adc
outsl
xchg
mov
dec
cmp
inc
int
cmpsl
out
jl
push
scas
repz
xchg
aaa
test
sbb
cli
out
push
addr16
enter
push
fstpt
jg
lahf
out
scas
movsb
add
fsubl
rcr
mov
call
outsb
fimull
mov
pop
aam
adc
cld
lret
pusha
sti
and
movsl
imul
pusha
sahf
xor
dec
ds
pop
jns
loopne
mov
push
push
pop
arpl
imul
push
fldcw
pushf
sbb
adc
push
dec
pop
mov
pop
or
mov
subb
das
and
cmp
sbbl
push
xchg
mov
lods
push
or
fprem
sub
imul
dec
stc
mov
mov
sbb
insl
clc
mov
jmp
insb
mov
or
cltd
ss
aas
insl
jnp
and
jb
inc
pop
or
push
mov
lret
clc
ret
outsl
xchg
add
insl
jmp
sbb
imul
addr16
push
ss
mov
inc
mov
push
enter
filds
das
leave
jle
loop
sbb
jl
pop
inc
cmp
mov
and
inc
pop
and
pop
inc
pop
mov
cmp
mov
lea
mov
sahf
xchg
ret
add
int
mov
adc
ja
cmpsb
xor
pop
cmp
popa
mov
lea
and
push
xchg
mov
ja
jbe
mov
mov
je
imul
xor
js
movsl
dec
xor
je
mov
xor
aam
pop
dec
scas
inc
notb
adc
jl,pt
fbld
cmpsb
inc
test
fdivrl
cmp
xor
xchg
cmp
in
pop
or
xor
js
inc
mov
repz
scas
xchg
int
movsl
int
cmpsb
mov
and
rcr
int
cmp
and
in
outsl
movsl
xlat
xor
in
out
lret
adc
dec
aam
add
aam
mov
jne
aad
or
jle
imul
insl
pop
pop
fidivrl
fldt
and
adc
jb
jne
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
es
jp
sti
pop
jp
out
pop
in
lock
das
jge
dec
jnp
cltd
inc
adc
rcrl
repnz
jae
aaa
inc
outsl
jne
cmpsl
fidivrs
push
add
sbb
push
das
hlt
test
and
dec
cmp
test
nop
orb
out
jl
arpl
mov
xor
mov
mov
outsl
and
push
inc
rcll
or
fisubrl
js
xor
decb
cmp
popf
sbb
jbe
aaa
sub
mov
adcl
mov
or
insb
or
add
and
xor
mov
lea
cli
mov
mov
mov
pop
dec
push
adc
ficomps
pop
imul
inc
or
popf
xchg
arpl
cmc
sbb
loopne
pop
icebp
movq
in
dec
cmpsb
push
dec
inc
xor
or
adc
dec
test
in
ret
cwtl
sbb
push
cmp
cwtl
repnz
mov
push
xor
pusha
cmpl
cwtl
iret
push
popf
mov
xor
or
or
xchg
and
mov
fmul
dec
xor
mov
pop
and
inc
inc
mov
aas
mov
pavgb
cmp
pop
jns
cld
dec
nop
mov
add
or
in
pop
bound
dec
les
rcll
jbe
push
xor
xchg
int3
mov
fisttpl
aas
and
mov
ret
call
aad
and
adc
ja
lods
xchg
jno
xor
movsb
and
push
enter
ret
popa
xor
jp
sbb
sub
sub
je
sub
outsl
call
test
icebp
notb
fildl
dec
pushf
jns
jmp
test
lea
ja
mov
scas
xchg
in
arpl
push
xchg
orl
loop
sbb
push
push
cmp
out
xchg
gs
ret
adc
jl
imul
lcall
pop
adc
aas
lcall
adc
mov
add
cmp
icebp
fdivl
push
enter
pop
push
mov
ljmp
sub
lods
insl
loopne
inc
pop
or
ret
out
and
aad
or
fnstcw
sub
jp
cmp
leave
mov
loop
xor
xor
mov
mov
inc
inc
sbb
adc
fsts
bound
inc
sarl
fsubrs
xor
gs
adc
dec
lea
push
aas
pop
pop
addb
leave
push
xchg
movsb
bound
test
mov
fdivrl
out
pop
pop
call
push
push
pop
idiv
xor
movl
or
lahf
jns
or
ds
in
mov
or
mov
dec
sbb
addr16
pop
out
test
popf
pop
cmp
mov
mov
dec
icebp
scas
pop
inc
cld
cltd
xchg
movsb
mov
mov
xchg
arpl
add
sahf
popa
add
inc
push
pop
lret
inc
add
jmp
enter
sbb
mov
hlt
stc
push
rol
mov
popf
clc
mov
add
pushf
lret
jmp
pop
xor
clc
mov
rcrb
inc
and
sub
jle
cmp
test
sbb
into
or
sub
sbb
sub
add
jge
xchg
add
sbb
push
xorl
out
lret
scas
and
imull
jecxz
mov
mov
ss
sti
jne
jb
mov
adc
or
pusha
push
adc
mov
incl
gs
sar
in
push
xor
pop
push
mov
int3
scas
sbb
adc
adc
jno
sbb
lods
push
fwait
repz
cmpsl
xchg
push
inc
movsl
push
pop
repz
in
push
lea
fs
aad
mov
sub
mov
in
cmp
test
test
cmp
jo
or
stos
cmp
loopne
into
hlt
in
shrb
cmpsb
mov
inc
stc
push
pop
pop
in
lahf
push
sbb
iret
cmp
hlt
and
popa
testb
rclb
xchg
jns
fists
in
fbstp
pop
nop
movsb
mov
ret
sbb
push
iret
nop
jle
push
aam
mov
dec
into
hlt
add
out
mov
pop
repz
xchg
gs
inc
scas
rolb
fucomi
dec
mov
dec
mov
jns
jb
inc
sub
arpl
mov
push
bound
out
adc
int
jae,pt
mov
push
cld
add
loope
aaa
sub
jns
sub
movsl
jb
xchg
out
lea
test
xor
negb
mov
and
xlat
fsubl
adc
sti
addr16
xor
repnz
push
mov
cmpsb
pop
mov
sub
in
inc
add
pop
push
xchg
cli
in
test
out
add
fists
les
and
mov
and
lret
mov
adc
mull
out
mov
in
dec
push
push
inc
aas
pop
fxch
xchg
sub
or
outsb
mov
mov
insb
fidivs
pop
jbe
les
in
xchg
stc
shlb
push
outsl
dec
fistl
test
adc
mov
es
mov
mov
addl
lcall
xchg
xor
mov
andb
dec
mov
push
pop
push
test
xchg
jbe
lods
pop
pop
cwtl
mov
cmp
ret
subb
and
inc
cli
inc
jns
ret
or
push
add
dec
cld
sar
cli
rol
lods
mov
out
repz
dec
pop
inc
ljmp
das
aaa
cmp
cs
fisubs
fstps
clc
sub
push
mov
hlt
fisubl
clc
cmp
xchg
mov
arpl
push
movups
inc
loop
push
ljmp
push
xlat
out
jg
pop
push
ficoml
pop
mov
gs
inc
adcb
inc
nop
adcb
push
cmpsb
stos
push
into
scas
push
ja
stos
out
popf
popf
sahf
daa
push
sub
inc
inc
aad
jo
insb
mov
or
hlt
dec
cmp
aad
cmpsb
loop
xorl
das
jle
rorb
mov
add
stos
sub
nop
movsl
or
and
int
lret
cltd
sub
xchg
sbb
sub
mov
ret
fsub
in
push
sarl
mov
jns
sbbl
fs
xchg
adc
jp
pop
int
mov
xchg
inc
xchg
xor
imul
xchg
cld
lahf
add
mov
mov
cmpsl
aam
add
movsb
mov
fsubrs
filds
or
and
mov
xchg
filds
add
fimuls
clc
and
mov
cld
xor
sbb
lds
int
out
and
or
or
mov
inc
inc
ret
sarb
fimull
mov
aaa
push
and
cltd
pop
aas
imul
cmp
dec
loope
dec
outsl
insl
and
fisubrs
xor
pop
mov
xchg
rcrl
mov
stos
lcall
loope
aaa
dec
fnstenv
leave
nop
cmp
mov
lods
push
mov
imul
push
repz
pop
mov
addb
scas
and
dec
mov
int3
mov
lret
shrl
leave
xor
icebp
mov
mov
push
insl
sti
popa
sbb
out
sub
fcom
mov
lods
mov
and
ret
fwait
popa
sub
into
dec
cmc
push
or
or
cli
or
outsb
mov
add
rcrb
ret
mov
push
pusha
push
stc
jbe
mov
inc
lods
shrb
xchg
adc
add
jg
xor
stos
mov
mov
ss
divl
int3
loope
int3
pop
fisubrs
cmp
decb
mov
add
adc
fsub
leave
cmp
mov
mov
or
popa
push
sbb
pop
xchg
and
mov
mov
push
jmp
sbb
or
popa
xor
xor
add
rcrl
fwait
adc
dec
pop
test
sub
mov
push
push
cmp
cmp
daa
call
pop
fucomi
dec
or
pop
nop
loopne
xchg
out
int
int3
aam
mov
stos
cmp
mov
clc
dec
fsubrl
in
mov
xchg
lock
xchg
xor
popf
outsl
inc
cmp
outsb
xchg
mov
test
shll
notl
sbb
lcall
adc
push
add
les
jp
test
ljmp
push
mov
pop
push
fiadds
mov
jecxz
and
stos
inc
loope
jle
cli
xor
push
cmpsb
cltd
iret
pushf
loopne
mov
jno
xchg
mov
pop
xchg
push
js
fsubs
mov
inc
pop
cmp
subl
jge
test
lock
or
sub
jne
mov
sahf
sub
enter
stos
outsl
and
out
data16
xchg
dec
mov
scas
stos
mov
imul
mov
sub
pop
or
inc
jb
jecxz
sbb
inc
arpl
fdivs
mov
in
int3
pop
lods
insl
jmp
ret
ror
aam
test
and
decl
xchg
xor
or
ret
mov
ret
test
sub
mov
popf
or
mov
test
jl
sbb
imul
push
and
push
adc
pop
jle
xchg
mov
pop
xor
cmp
sbb
mov
popa
push
icebp
add
aam
xchg
jge
cmp
lahf
jmp
movb
es
cmpsb
rol
clc
inc
lret
outsb
iret
adcb
popa
xor
mov
jb
out
cmp
xchg
push
clc
jb
je
mov
insl
cltd
insb
mov
inc
adc
ljmp
fsubs
sbb
mov
stos
adc
lea
dec
lods
xchg
xchg
test
jae
loopne
aad
mov
cmp
leave
shr
jecxz
jns
mov
je
sub
mov
xor
insb
mov
cmp
rol
movl
push
enter
aas
sub
dec
mov
cwtl
mov
aad
inc
ret
or
test
ljmp
mov
mov
jns
mov
bound
popa
insb
push
lcall
iret
jmp
sbb
adc
pop
jbe
adc
pop
mov
leave
arpl
and
cs
fnstsw
js
push
xor
xlat
aaa
dec
daa
pop
rol
aaa
loop
scas
nop
xchg
inc
leave
out
daa
dec
xchg
fldcw
mov
or
sbb
and
cmp
xor
ret
gs
jns
les
adcb
out
jb
aad
outsl
push
stos
mov
out
fidivrs
mov
aaa
push
mov
inc
rcr
jle
cmp
dec
enter
inc
pop
popf
lcall
cmpsb
hlt
jmp
xchg
xor
push
jg
popa
aaa
push
outsl
jbe
cmp
out
mov
or
fnstcw
movsb
sti
mov
adc
aam
jne
mov
mov
and
pop
mov
bound
cmpb
xor
jle
aas
fcmovnu
lret
xor
inc
push
call
and
daa
xchg
and
mov
jne
dec
pop
push
xchg
aas
xor
or
push
cmpsl
mov
adc
jmp
xor
es
sbb
cltd
out
dec
mov
enter
cltd
test
inc
mov
inc
leave
loopne
push
ljmp
sti
sbb
mov
rclb
adc
lods
xchg
adc
ss
xchg
sbb
mov
xchg
cmc
repz
xor
daa
xchg
sbb
cmp
xlat
imul
aam
mov
cmp
addr16
out
int3
cmp
int3
push
pushf
pop
or
mov
mov
clc
jg
pop
out
loopne
icebp
enter
fstp
mov
inc
cmp
leave
sahf
jecxz
inc
shll
or
fnstcw
inc
orb
xor
divl
sbb
adc
jbe
mov
fwait
fwait
aad
repnz
data16
lods
stc
jne
dec
xchg
jmp
push
dec
shrl
mov
pop
add
iret
pop
sbb
mov
push
adc
adc
and
xchg
stos
daa
xchg
scas
inc
fistps
daa
add
sbb
out
dec
dec
loopne
fbld
aas
inc
addr16
aaa
jecxz
mov
pusha
xchg
jnp
cmp
scas
dec
xchg
imul
mov
fldl
aam
mov
roll
or
mov
dec
pusha
ret
fnstsw
dec
orl
stos
rolb
sbb
inc
dec
cwtl
cwtl
mov
loope
je
cmp
cwtl
lods
pusha
cmp
dec
cmpsl
mov
std
mov
cwtl
lds
or
movsl
pusha
sub
fdivr
andl
push
outsb
xchg
je
xor
lea
fs
jecxz
shll
repnz
pop
les
pop
int
insb
lahf
hlt
in
sub
push
sbb
add
jmp
cmp
ja
jmp
sbb
test
hlt
mov
xor
test
pusha
rep
ficomps
scas
aaa
add
jnp
ja
xchg
cmp
mov
mov
xchg
or
icebp
xchg
ss
rclb
sub
and
fwait
push
div
outsl
jge
sbb
inc
sar
and
imul
fnstenv
push
add
sarl
lods
mov
and
and
lcall
out
les
lahf
cmp
sub
insb
pop
in
push
cmp
sbb
stos
es
out
pop
stc
scas
lcall
insl
push
cmp
push
pop
pop
aam
push
aam
fldenv
mov
jecxz
jne
fidivs
push
in
xchg
pop
cmpsl
pushl
cmpsl
push
sub
pop
out
mov
outsl
or
dec
or
cmp
and
ficompl
dec
scas
clc
mov
insl
pop
rol
push
in
dec
dec
push
mov
data16
mov
cwtl
insl
mov
gs
sub
insb
jo
push
sub
xchg
fs
mov
inc
hlt
pusha
dec
xchg
call
jae
xor
adc
mov
pop
pusha
test
xchg
notl
pop
or
fs
push
mov
mov
mov
in
mov
mov
pop
js
andl
rorl
in
and
fwait
add
js
into
out
adc
addb
jge
testl
sub
mov
ds
add
fldl
inc
ret
xlat
cmp
lcall
mov
das
pop
mov
inc
add
adc
jecxz
lcall
inc
cmpsb
insl
push
rclb
sbb
repz
cltd
jbe
aad
lahf
sub
cmp
daa
pusha
cmp
dec
loope
daa
loopne
popf
out
add
sahf
xchg
subb
stos
pushf
arpl
xchg
or
lret
aas
fucomi
pop
push
adc
or
add
dec
dec
or
pop
xchg
jae
lret
push
pop
loop
mov
sbb
ret
xchg
dec
push
roll
mov
sub
push
shrb
sub
fmuls
aas
cld
jecxz
aas
inc
pop
aas
inc
nop
sub
xchg
push
dec
lods
sbb
mov
pop
leave
push
xchg
sahf
test
mov
xor
aas
lea
cmpsl
fidivl
cmp
xchg
jp
add
push
test
push
pop
add
xchg
mov
cltd
fwait
lahf
or
push
out
inc
int3
insb
jnp
fnstsw
dec
cmc
cmp
arpl
stos
sub
out
lock
add
pop
mov
push
ds
cmp
out
push
nop
xchg
test
mov
fimuls
jb
push
or
bswap
xor
sbb
push
mov
jg
jne
or
lods
jb
imul
cli
inc
mov
push
adc
shlb
xlat
cmp
daa
outsb
lods
inc
test
mov
cmp
sahf
push
cs
call
mov
cmp
xlat
fs
xchg
cmp
out
movsl
cmp
adc
jne
xor
cmc
insl
push
sbb
adc
pop
shl
stos
loop,pn
adc
cmp
lods
std
xchg
xchg
mov
inc
mov
lahf
sarb
imul
xor
pushf
xchg
sbb
sub
cld
fsub
adc
iret
or
mov
jo,pt
xchg
mov
outsl
outsl
mov
popf
push
ret
cmp
jns
dec
call
ret
inc
ret
dec
and
jge
test
pop
fsts
cmp
ljmp
xchg
arpl
add
or
in
dec
loop
dec
lods
js
adc
movsl
inc
jg
or
xor
in
lret
sub
jp
pop
imul
mov
push
adc
aas
mov
sub
sahf
dec
orl
mov
cwtl
dec
mov
push
or
adc
jo
sub
mov
cs
push
sbb
scas
jne
insb
ds
jg
lds
lods
shrl
enter
fs
pop
movsb
ja
add
insl
xor
add
jp
xor
or
add
xchg
out
loopne
mov
jge
pushl
xchg
dec
lcall
xor
sub
imul
imul
xchg
cmp
pop
lods
mov
push
movsl
mov
out
adc
lret
adc
sahf
inc
cmova
pop
jne
jg
shlb
or
inc
jmp
test
xchg
fs
dec
shrl
sbb
shlb
pop
mov
mov
or
fwait
cmp
sarb
dec
pop
rorb
cltd
push
and
mov
mov
cmc
push
repnz
std
jbe
clc
ljmp
adc
xor
and
xor
fiaddl
rcll
and
mov
mov
push
es
imul
and
aas
cli
fwait
mov
dec
and
in
inc
imul
shrb
fwait
xor
aad
sbb
lret
jnp
push
xor
sbbb
incb
fsubrl
cmc
push
pop
cltd
lahf
mov
orl
sub
outsb
mov
int
out
xchg
push
out
push
push
jno
ror
xchg
push
cmp
adc
xchg
rclb
inc
cmp
int3
movsb
jb
mov
fcmovnb
imul
dec
adcb
inc
push
add
push
outsl
mov
jne
subb
dec
and
fisttpll
xchg
daa
leave
adc
into
mov
imul
loopne
cmpl
inc
cmp
push
fstl
pop
cmp
outsb
xchg
cmp
jb
pushf
out
ret
out
mov
inc
dec
mov
jge
mov
jmp
leave
ret
scas
dec
mov
rcrl
or
lret
sub
cmp
fs
sub
aad
push
mov
add
push
push
cmpsb
iret
shrb
fsubp
inc
fistps
jmp
rcrl
jnp
outsb
mov
xlat
lahf
fmull
inc
jmpw
adc
inc
inc
cltd
pop
cmc
cwtl
sub
jge
ret
movsl
and
out
into
leave
push
jb
popf
shlb
nop
outsb
sub
insb
test
jb
dec
jmp
sub
testl
sbb
fs
test
mov
test
lahf
xchg
ds
or
jl
clc
inc
mov
loope
add
popf
jnp
jmp
or
scas
lea
std
cmp
mov
ljmp
fwait
jmp
push
mov
sub
xor
shlb
fstpt
and
movsb
xchg
mov
mov
jle
xor
push
mov
push
mov
sar
stos
cld
adc
adc
lock
push
mov
mov
cs
fidivs
push
inc
test
and
and
fsub
pop
adc
fidivrl
popf
and
sbb
arpl
arpl
push
leave
xlat
jmp
dec
mov
inc
std
lea
push
push
pop
sub
pop
jo
and
gs
es
das
sbb
cmc
fimuls
ljmp
js
mov
sahf
xor
test
cmp
adc
xchg
icebp
stos
insl
mov
aas
enter
add
mov
rol
push
xor
test
push
addl
fdivl
jne
orl
xchg
jno
rcrl
pop
ret
sbb
jge
xorl
mov
pop
add
adc
test
mov
jl
add
mov
or
loope
mov
aas
adc
jns
stos
pop
movsl
in
leave
insb
daa
push
mov
hlt
testl
stos
mov
xchg
cmp
xor
fisttps
leave
out
test
std
inc
inc
cmp
pushf
or
out
imul
or
xchg
pop
fidivrs
lret
sbb
mov
jne
inc
xchg
adc
push
dec
jno
fs
inc
pop
setne
ficompl
push
cwtl
les
loope
fdivl
iret
stos
ficoml
push
dec
rol
cmp
fisubs
les
mov
addr16
mov
mov
xchg
jge
pop
lcall
sbb
pop
add
sub
sbb
loop
mov
fwait
insb
xchg
pop
mov
adc
inc
mov
and
scas
sbb
xor
sbb
stc
ret
repz
int3
xchg
jmp
andl
pop
sahf
cmp
mov
mov
jbe
push
add
dec
mov
and
mov
xchg
sub
push
mov
lcall
jno
fstps
adc
xlat
xor
add
lcall
xor
push
dec
cld
cwtl
xchg
fsub
and
test
sbb
out
push
mov
pushf
loop
insb
sbbl
or
adc
ljmp
imul
cli
idivl
xor
sub
insb
fmuls
xor
lock
incb
int
cmp
pop
into
xchg
popf
leave
xchg
jb
adc
inc
cs
push
je
clc
pop
pop
jne
dec
mov
and
stos
out
iret
and
jp
mov
pop
mov
ljmp
dec
xor
int3
sbb
push
push
xor
fisubl
xor
cmp
lods
dec
cmp
jp
mov
xchg
lret
jp
inc
pop
xor
pop
inc
scas
inc
into
mov
xor
and
shlb
fistps
leave
leave
pop
out
add
addl
fs
cld
push
xchg
outsl
loop
jo
xchg
rol
aad
jmp
pop
notl
movsb
xchg
fisttps
inc
pop
jne
mov
test
popa
jp
xchg
push
js
mov
movsb
xor
ja
sbb
fadd
sbb
negl
stc
gs
add
hlt
sti
movsl
pusha
es
cwtl
test
fiadds
jmp
dec
lods
pop
cmpb
pop
adc
or
inc
aad
mov
sub
mov
push
mov
inc
mov
ss
aaa
or
sbb
lds
sbb
jne
cmp
lock
fbstp
cmpsb
dec
pop
jns
int
inc
arpl
push
lock
shrb
lods
pop
adc
dec
movsl
lock
add
add
mov
jbe
loop
in
mov
jns
je
or
cmp
sbbb
ja
mov
lret
repz
pop
xor
inc
mov
mov
mov
lcall
add
mov
and
call
pusha
insl
mov
mov
lock
sbb
mov
sub
movsb
sti
add
sbb
or
aas
and
mov
mov
lds
std
add
xchg
xor
jecxz
sub
inc
js
pop
sub
lods
xor
push
xchg
pop
cmp
aaa
push
xor
test
cmpb
jl
jl
jb
adc
sbb
fdivr
incl
cltd
dec
mov
adc
sbb
daa
push
or
daa
mov
pop
mov
sbb
mov
mov
jb
cli
lret
inc
mov
mov
sti
lret
jb
js
mov
add
pusha
cmp
push
xchg
test
jnp
xchg
mov
mull
mov
dec
cmp
dec
mov
cli
fs
outsb
shll
insl
jl
stc
push
fcoms
lahf
adc
mov
mov
mov
lea
lock
jle
mov
mov
push
mov
add
jae
imul
loope
pop
lods
in
out
cmpsl
fisubs
subl
cmp
cmp
dec
std
xchg
out
inc
test
ficompl
adc
xchg
aam
repnz
sbb
jl
mov
test
fwait
inc
or
and
je
test
cld
push
movsl
enter
pop
jg
sbb
dec
test
adc
mov
nop
sub
insl
cmp
movsb
fmull
dec
mov
jbe
cmp
outsl
es
sbb
push
jecxz
lea
rcll
adc
xorl
jp
cmp
add
in
jbe
xor
jg
add
into
int3
mov
loopne
out
sbb
popa
cmp
or
testl
int
cltd
into
lahf
pop
cmpsl
jb
push
daa
pop
inc
xchg
out
push
test
sub
jns
dec
aad
sti
jp
cmp
scas
cmpsb
gs
xor
jge
fistl
adc
test
shrl
scas
loope
jg
outsb
dec
lcall
std
js
loop
mov
testl
sub
sbb
or
pushf
addl
mov
pushf
mov
jno
data16
arpl
mov
jge
and
mov
je
sub
movsl
pop
lods
adc
push
loop
dec
lds
cwtl
inc
inc
fisubl
aas
jbe
jo
filds
mov
mov
dec
mov
mov
and
cmp
sub
pop
cmpsl
sub
les
push
lea
xchg
fiadds
mov
cltd
sbb
mov
mov
fs
add
orl
jmp
js
test
loope
dec
nop
push
fisubrl
or
or
fsubrp
cmpsl
inc
push
ret
lods
add
lret
rcrb
push
jle
pusha
sub
sbb
ss
pop
data16
fwait
lods
xor
pop
sub
jno
shlb
sub
repz
jmp
push
mov
cmpsb
ja
scas
xor
sbb
adc
out
mov
xchg
jae
adcb
nop
add
and
mov
cmp
clc
into
mov
fwait
sbb
lea
push
sbb
cmp
xchg
das
pop
mov
push
insl
dec
test
sarb
dec
sub
testl
popa
inc
mov
cmc
aad
lods
xlat
xorl
jne
enter
into
mov
cli
push
push
and
add
movsl
mov
add
add
out
or
pushf
mov
stc
movsb
mov
push
push
dec
push
shll
mov
int3
pusha
popf
jb
adc
sbb
lock
hlt
jl
push
f2xm1
mov
mov
push
add
rorb
ja
inc
out
sahf
cmpl
pusha
fisubs
cltd
and
pusha
pop
lret
dec
mov
das
ds
push
enter
push
mov
insl
cmp
push
mov
push
xchg
jmp
mov
nop
out
pop
rclb
sahf
push
cmpsl
adc
mov
fisttpll
add
mov
sbb
push
in
add
mov
sahf
push
push
scas
inc
fs
inc
stos
lret
rorb
dec
inc
mov
mov
mov
pop
adc
sbb
loop
adc
pop
or
push
mov
aaa
dec
mov
sahf
gs
lcall
je
test
data16
or
clc
dec
popa
push
lret
shll
dec
xor
xchg
lods
xchg
pushf
outsb
dec
add
xor
dec
lahf
mov
sbbb
sbb
shl
mov
sahf
xlat
or
mov
imul
fisttpll
add
test
cmp
test
pop
sti
iret
mov
ja
jbe
leave
pop
jbe
lahf
mov
ljmp
aas
mov
cmp
stc
iret
icebp
mov
lahf
inc
dec
cld
push
outsl
adc
pop
xchg
push
rcll
mov
jg
sahf
xlat
dec
pop
cmp
addr16
xor
cmpsb
in
shrl
or
pusha
pusha
pop
cmp
cwtl
fs
cmpsb
xchg
lret
stos
aas
stos
into
xchg
sbb
xor
js
out
fsubl
inc
in
push
dec
mov
mov
or
mov
outsb
sub
cs
fistps
movsb
lret
jb
xor
mov
push
iret
xchg
mov
cwtl
fdivrp
scas
mov
push
or
adc
sub
mov
loopne
jnp
pop
cmc
cld
scas
mov
lea
enter
dec
test
adc
mov
dec
fistpl
iret
push
adc
jecxz
cmp
xlat
test
movsb
jo
shll
cmp
nop
or
int
dec
or
shll
movsb
arpl
and
nop
lea
jbe
sahf
int3
je
sub
stc
dec
mov
pop
jl
sbb
fwait
arpl
or
or
scas
mov
push
adc
in
jbe
dec
lock
jge
push
mov
sub
cmp
push
sub
push
sbb
adc
movsb
das
jmp
mov
out
and
es
mov
fwait
lds
cmpsl
xchg
adc
imul
mov
mov
sbb
xchg
dec
pop
inc
gs
mov
cmc
lahf
fidivrs
inc
mov
push
decl
and
add
mov
rcr
shll
cltd
jecxz
inc
inc
push
hlt
mov
fldcw
and
loopne
pop
pusha
inc
adc
jmp
and
leave
mov
xor
data16
data16
fistps
aas
add
leave
pop
sub
mov
mov
scas
pop
or
mov
pop
dec
adc
adc
sbb
xchg
addr16
ficoml
outsl
dec
sbb
rcrl
mov
scas
push
and
jecxz
enter
cmpsb
or
sub
jle
pop
ficoml
negl
push
sub
dec
pop
scas
jp
push
lcall
jle
push
or
push
test
je
shrl
inc
mov
aam
arpl
fdivrl
arpl
out
rcll
mov
cmp
fildll
mov
mov
push
pop
and
sarb
mov
lahf
test
jp
dec
sbb
cmc
popf
pop
sub
ret
adc
mov
fcomi
jmp
fnstsw
push
xor
int
add
stos
imul
pop
pop
iret
mov
sub
push
dec
lret
cwtl
mov
inc
mov
sbb
jnp
or
xchg
cmpsb
cmpl
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
cmc
xor
cmp
inc
xchg
int
in
je
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
in
jge
add
add
hlt
add
add
aam
jmp
pop
lcall
lret
fmuls
int
pop
inc
fdivrp
cmp
sbb
fmuls
decl
dec
and
inc
dec
sbb
mov
lock
mov
add
shrl
in
mov
jae
pop
enter
xor
enter
cmp
jo
clc
mov
ds
cmp
aaa
iret
push
sbb
push
sbb
xchg
imul
mov
mov
cwtl
out
cmp
jo
push
aam
fistpll
scas
xlat
dec
push
scas
mov
insb
dec
lock
xchg
xor
daa
repz
sbb
int
cmp
fidivs
leave
sti
hlt
sbb
mov
jo
clc
cmpsb
adc
out
loope
adc
repz
lret
aaa
add
popf
shll
div
sub
aad
jle
lock
dec
pop
ja
imul
mov
sahf
adc
and
mov
mov
lea
test
push
movsl
test
jge
cmp
scas
sbb
mov
daa
xor
push
push
cmpsb
xor
fwait
inc
dec
addr16
lret
mov
adc
stc
popa
mov
mov
jl
cli
arpl
sbb
add
mov
sbb
jmp
mov
jb
cmp
fs
scas
mov
fs
int3
mov
leave
cmc
mov
cmp
xchg
sub
stc
adc
xor
inc
int3
dec
cmpsl
ret
or
fildll
jp
jecxz
test
xor
inc
sbb
pusha
or
sub
mov
cmp
jecxz
push
inc
or
mov
call
ficomps
movsb
into
pop
out
and
lds
or
pusha
sti
lret
addr16
and
dec
rcrb
imul
xchg
mov
int
ljmp
les
cmp
dec
cmpsb
std
adc
adcl
mov
test
pop
addr16
push
dec
incb
sub
imull
pop
mov
aam
pop
jns
xchg
mov
sbb
push
xor
cmc
sub
mov
add
mov
lcall
and
les
xchg
test
clc
dec
int3
mov
xlat
sub
lods
or
push
test
lcall
xchg
pop
loopne
testb
test
dec
addl
push
js
and
or
int
iret
iret
imul
mov
insl
mov
out
push
add
mov
repz
repz
xchg
in
inc
ja
cltd
fadds
dec
adc
cld
popf
inc
shll
out
lret
sub
pusha
sbb
sub
cmp
loope
gs
insb
sub
fisttpl
int3
adc
and
jg
cmc
adc
sbb
mov
pop
xchg
jmp
lods
sbb
jbe
adc
sub
and
or
pop
mov
mov
push
loop
sub
scas
cmp
test
movsl
inc
cltd
test
enter
mov
ret
inc
or
aad
cmp
enter
mov
inc
movsb
fst
or
mov
mov
ret
add
movl
js
in
mov
ja
movsl
in
enter
mov
mull
scas
jp
shll
push
lods
es
lcall
bound
in
mov
mov
gs
mulb
pop
mov
mov
les
pop
mov
dec
adcl
sub
ret
cmc
and
imul
les
sbb
test
adc
lahf
dec
fcmovu
jecxz
sub
fildll
fpatan
xchg
lret
lret
mov
fsubrs
pop
push
mov
push
dec
xchg
test
xor
out
jbe
xchg
ror
sbb
and
jbe
popa
jnp
push
adc
xor
fcmove
sbb
sub
lahf
inc
mov
mov
incl
push
outsb
leave
les
scas
movsl
outsl
cmp
push
mov
dec
shrl
fisttpll
mov
push
fsubrl
jne
in
cmpsb
add
jns
push
insl
push
mov
addr16
mov
push
imul
lods
mov
gs
sahf
jle
js
or
mov
sbb
in
or
cmpsl
fsts
adc
outsl
adc
lahf
data16
cmpsl
das
imul
pop
pop
and
add
add
rclb
pop
lahf
jg
gs
loopne
dec
insl
flds
add
add
add
dec
fwait
rorb
xor
les
in
add
aaa
inc
cwtl
xchg
push
jbe
das
bound
sub
mov
sbb
sub
xor
stc
jl
mov
mov
adc
pop
pop
into
dec
lods
sarb
loope
loopne
ret
pop
mov
xor
mov
jle
aaa
dec
test
pop
and
jge
cmp
mov
orb
pop
sahf
shrl
ret
fwait
aam
dec
or
xchg
cmp
iret
push
divl
repnz
lods
scas
push
xchg
setbe
dec
aam
ret
xor
mov
mov
inc
scas
lods
lcall
xchg
ret
sub
sbb
xchg
mov
cmp
jnp
ds
arpl
push
dec
rcll
jno
jnp
pusha
push
jb
and
mov
clc
popl
mov
pop
into
fwait
andl
cs
or
xchg
sahf
jmp
adc
cli
aad
xchg
xchg
jne
cli
popa
xor
push
xor
iret
in
ret
cld
push
pop
adc
jne
pop
xchg
jmp
nop
sbb
sbb
xchg
addr16
out
faddl
cmovp
sbb
mov
loope
mov
movsl
adc
pop
inc
in
jae
mov
out
push
scas
dec
insl
pusha
add
testl
cwtl
or
push
fs
rcrl
out
std
jo
das
stc
xchg
jl
cwtl
dec
mov
adc
mov
jae
jmp
cpuid
dec
jmp
out
mov
inc
mov
mov
xor
mov
mov
sub
push
lock
mov
ror
arpl
lods
cmpsl
push
lcall
test
sarb
or
jo
icebp
sti
mov
push
popf
push
pinsrw
fnstenv
inc
hlt
mov
cmpsl
mov
mov
mov
sbb
dec
sbb
pop
out
pushf
aam
xchg
pop
hlt
adcb
cmp
sub
jns
iret
xor
push
mov
jmp
pop
mov
pop
mov
pop
aaa
inc
or
add
jle
jbe
mov
pop
push
push
cmp
sbb
data16
repnz
pop
scas
fsubrl
lahf
xchg
xchg
cltd
sbb
jb
cld
sbb
les
mov
dec
rcrl
leave
pop
mov
mov
pushf
jle
mov
jo
or
cmp
sub
repnz
cmp
push
jp
popf
cmp
stos
or
mov
mov
mov
repz
xchg
adc
dec
jnp
mov
dec
push
data16
test
inc
arpl
or
nop
testl
adc
loope
sub
inc
and
push
rcll
inc
loopne
adc
inc
jns
in
dec
cmpsl
xor
cli
or
shrd
or
fbld
sbb
hlt
jbe
inc
or
cmp
sub
xrelease
out
and
repnz
push
jbe
cmc
push
repnz
inc
ja
jo
call
pop
mov
insb
stos
add
loopne
arpl
jb
push
inc
and
leave
and
clc
mov
cs
or
rcr
xor
movsb
push
adc
jno
arpl
ret
jl
in
fcomip
push
repz
or
sub
out
dec
insb
push
xchg
test
and
rcl
mov
fistps
mov
sbb
ja
lods
pop
sbb
call
xor
popa
inc
out
js
test
ret
shrl
add
ss
stos
lea
test
jne
out
pop
rcrl
mov
push
adc
je
dec
push
add
xor
dec
xor
sbbl
jmp
push
jg
repz
cli
mov
ret
fmull
mov
es
xchg
cltd
xor
cmp
test
rcl
mov
int
push
push
adc
outsb
lret
adc
inc
xorb
fisubrl
inc
cmc
jg
pop
mov
dec
inc
pop
outsb
adc
push
in
out
push
in
mov
add
and
daa
mov
int3
jb
sub
jb
xchg
cli
je
xchg
inc
lods
lds
pop
sbb
mov
xor
sahf
pop
mov
mov
or
cmp
lea
shrb
shll
xchg
mov
jg
mov
imul
iret
hlt
jecxz
mov
mov
shlb
pop
movsl
movb
jmpw
in
sbb
xchg
lock
mov
pop
mov
in
push
sub
add
cmp
cmpsb
jg
mov
jae
out
in
push
popa
fiadds
add
add
add
imul
or
mov
mov
and
iret
sub
or
adc
add
jo
mov
adc
inc
nop
mov
push
adc
dec
mov
scas
xchg
rdpmc
xor
lahf
mov
pop
int
movsb
pop
mov
mov
dec
push
sub
addr16
cld
pop
jp
sub
cmp
adc
cmp
shll
xor
inc
mov
mov
dec
daa
mov
fmull
add
xchg
call
mov
pop
mov
xchg
sbb
jmp
push
jp
inc
sbb
xchg
push
lcall
lods
push
mov
enter
jge
int
mov
or
pop
out
and
leave
mov
mov
and
sub
mov
fstl
mov
out
sub
mov
xor
adc
fs
test
ret
mov
sti
add
into
aas
lret
test
cwtl
jo
mov
fsubrp
add
jle
cs
bound
mov
lods
xchg
mov
sub
push
dec
dec
mov
jmp
cs
mov
pop
loop
mov
inc
loope
sbb
out
mov
dec
std
mov
mov
in
sbb
jmp
xor
mov
mov
lcall
sub
sub
pusha
cmc
in
cmp
clc
pushf
inc
inc
ret
and
pushf
lods
xor
test
fstl
je
mov
pop
lods
in
cmc
lock
in
and
jmp
pop
sahf
xchg
jmp
sahf
shr
xor
mov
mov
mov
add
inc
fcompl
fadds
std
shrb
pushf
push
bound
int3
js
mov
push
inc
repz
mov
adc
mov
jmp
loopne
lock
popf
xchg
orb
aas
insb
adc
in
mov
mov
cwtl
cmp
sbb
jno
cmc
fdivs
jnp
xchg
or
mov
sub
insl
insb
or
mov
iret
sub
in
or
cmp
hlt
push
sbb
testb
popl
jge
test
stc
movsb
or
aam
inc
stos
xor
sbb
mov
rcrl
bound
sub
adc
call
fstl
or
lret
or
stos
xlat
mov
out
dec
inc
lahf
fisubrs
test
jnp
sub
lods
out
enter
or
loope
sub
mov
xor
cmp
rol
mov
mov
sub
mov
into
sbb
dec
pop
sub
aad
cmp
mov
inc
sti
push
fsubrl
cmp
mov
scas
mov
jo
dec
subl
bound
aas
dec
inc
add
mov
int3
push
adc
into
jns
and
cwtl
in
les
push
pop
push
mov
mov
int
lock
cli
dec
fsubl
imulb
stos
sbb
shl
mov
imul
add
add
mov
dec
or
cmp
cli
mov
cmp
cmp
lock
test
lret
or
enter
out
sarb
out
push
pop
lahf
mov
testl
loop
inc
xor
movsl
xchg
shl
jecxz
pushf
loopne,pt
out
ror
fisubrs
loop
jb
cmp
fimull
or
fnstenv
or
inc
movsl
push
std
push
iret
stos
and
sahf
pop
gs
test
push
js
leave
imul
jo
in
xlat
rcl
adc
lret
jae
xchg
sub
pop
subb
xchg
cmp
stos
xchg
cwtl
shrb
fcmovb
jo
xchg
test
in
pop
push
dec
sub
and
into
jmp
popa
dec
xor
or
ljmp
popf
mov
cltd
cs
pushl
js
into
mov
xor
out
mov
adc
movsl
enter
add
or
std
mov
fcmovnbe
push
outsl
lods
mov
rcll
scas
bound
enter
in
jl
imul
fiaddl
mov
push
es
test
sbb
adc
fdiv
iret
cld
std
dec
xor
sbb
xchg
popa
popa
xor
fs
les
rcl
enter
ror
adc
or
aad
push
outsb
and
inc
add
add
clc
pminsw
idiv
repz
lret
mov
add
hlt
add
add
inc
mov
movsb
adc
mov
xchg
outsl
jbe
sub
psubsw
pusha
add
popa
in
jo
cmp
xor
stos
insb
and
movsb
xor
outsl
mov
xor
dec
fisubs
sub
and
jae
insb
push
sub
ja
xchg
sbb
fdivp
push
push
insl
in
stos
ja
test
push
data16
inc
imul
loop
adc
cld
mov
push
jno
lcall
addl
mov
mov
movsl
mov
and
insb
jle
aas
test
and
xlat
adc
and
ret
jmp
pop
int
in
xchg
push
pop
jge
jecxz
stos
sub
mov
xchg
sub
addr16
inc
xorb
dec
sub
pop
xchg
xor
pusha
test
aas
dec
push
cmp
jbe
pop
pop
movb
xchg
or
lahf
jl
sysexit
lret
fdivr
fists
scas
xchg
fdivl
inc
sub
rclb
cmpsb
data16
jg
inc
or
mov
in
sbb
and
adc
lcall
pusha
out
jnp
pop
push
in
dec
pop
leave
and
xchg
push
sahf
enter
shll
addr16
pop
les
or
into
jmp
cmp
mov
mov
mov
pop
pop
cmc
dec
jne
push
push
dec
in
rcrl
test
std
xlat
lcall
mov
addr16
push
ljmp
lock
jle
jle
jge
roll
test
jo
sub
pop
and
pop
es
adc
cld
push
insb
inc
mov
mov
mov
cwtl
cld
or
out
add
push
xchg
jmp
leave
sbb
pop
outsb
lcall
std
loopne
adc
popa
pop
jbe
movsl
test
je
mov
test
test
dec
inc
push
faddl
cmp
test
lret
inc
xor
xchg
imul
lock
adc
dec
xchg
ds
cmp
xchg
cmpb
mov
pushf
add
sub
insl
and
jmp
cwtl
in
mov
adc
movsb
inc
test
dec
jmp
and
mov
mov
jmp
mov
jecxz
dec
pop
jmp
ds
enter
xchg
adc
inc
cmp
sbb
cmp
iret
loop
aad
insb
and
in
sbb
popf
adc
mov
sub
or
dec
fisubs
in
fs
add
jae
xor
push
mov
mov
mov
repz
mov
add
ficompl
add
jmp
test
mov
fnsave
lahf
sbb
aaa
push
loop
mov
scas
sti
decb
test
or
cmp
pop
movsl
dec
filds
sahf
enter
out
push
inc
cmp
mov
mov
movsl
add
cs
jg
lea
or
sbbb
scas
rcrb
pop
or
cmc
cmp
xlat
call
into
dec
xchg
lock
mov
adc
inc
imul
add
dec
out
pop
addr16
bound
pop
cld
out
out
scas
push
jnp
jb
js
jg
or
pop
lret
cltd
in
push
sub
mov
inc
xorl
ss
scas
jle
mov
xchg
in
lods
inc
inc
mov
pop
cwtl
dec
xchg
rcll
jae
jecxz
stos
adc
mov
bound
dec
scas
sub
mov
xchg
push
mov
test
mov
jl
pop
xor
fimuls
mov
jno
imul
aad
jge
aaa
js
sbb
shrl
shr
cmpsl
pop
leave
cmp
jle
dec
cmp
sti
dec
dec
rorb
push
cld
cmc
pop
lcall
adc
adc
xor
push
and
push
mov
xor
push
jg
in
add
das
dec
cwtl
xchg
jl
imul
cmp
sbb
fisubrl
imul
pop
bound
ljmp
cmpsb
or
pushaw
popa
imul
fdivl
xchg
pop
or
mov
cmp
xlat
pop
mov
mov
sbb
call
insb
mov
cmpsb
push
imul
jns
es
add
pushf
jb
loopne
or
cwtl
or
int3
dec
mov
shll
push
push
call
push
inc
test
fstps
jnp
out
pop
pop
pop
xor
rorl
adc
fwait
ss
lret
ret
push
and
int
xchg
sbb
push
mov
call
jnp
sarl
rorl
dec
call
add
cmp
subps
stc
in
in
mov
icebp
cmp
jecxz,pt
pop
xor
call
data16
icebp
test
mov
insl
xchg
shrb
test
jno
cmpsl
sahf
jbe
test
je
and
rorb
mov
jg
pushf
nop
pusha
aaa
rcrb
cmp
data16
scas
arpl
cmpsb
jae
jae
fsubrl
pop
cmp
sub
pop
mov
repz
fisttps
in
das
xor
mov
dec
add
test
fcmovnb
and
fcmove
mov
sbb
mov
and
mov
clc
ljmp
xorb
dec
mov
sbb
pusha
call
jl
lods
mov
cs
inc
fwait
sahf
lret
adc
or
pop
xor
jns
ds
xchg
addl
fidivrs
scas
dec
push
imul
pop
call
jae
push
loopne
in
int
pop
push
pop
icebp
inc
sbb
mov
mov
mov
xor
dec
sbb
sbb
sub
lods
push
adc
cmc
leave
fs
push
loope
imul
lea
fidivrs
or
fwait
outsl
lret
xor
test
xor
data16
int
sahf
stc
push
xor
mov
ret
sbb
into
xor
enter
jle
mov
jp
call
repz
lods
push
inc
in
cmc
lahf
inc
sub
cmc
jge
pop
gs
and
pop
aam
sub
les
lahf
in
es
leave
pop
push
hlt
test
cltd
in
push
mov
sub
pop
ror
mov
subb
or
mov
sahf
xchg
push
mov
movsb
test
inc
mov
cld
mov
fs
loop
dec
xchg
jno
daa
addr16
rorb
rcrb
cmp
inc
mov
inc
popa
int3
inc
push
sbb
jb
sub
pop
sub
mov
mov
nop
adc
and
and
outsb
rcl
adc
aad
mov
lods
mov
dec
lea
subb
lods
jmpw
xchg
ret
popf
xor
and
ret
pop
sub
adc
and
cltd
sub
int3
iret
stos
hlt
addl
push
dec
lods
call
ljmp
jbe
scas
push
mov
jne
sub
add
push
ret
in
les
out
popa
or
push
shlb
outsl
leave
mov
addl
mov
lret
push
pop
leave
push
mov
jge
loopne
add
aaa
sub
inc
push
and
jle
or
fdivrp
mov
or
mov
jo
decl
xor
andl
stos
adc
popa
std
jbe
ljmp
xor
xchg
int3
out
push
lret
dec
icebp
test
or
ljmp
popf
imul
push
int3
adc
mov
addb
dec
int3
lods
xchg
add
mov
and
ja
lret
add
mov
sub
mov
mov
lods
mov
add
pop
jg
cltd
cmp
cmp
iret
add
pop
and
xor
in
dec
stos
xor
sbb
mov
movsb
imul
jge
popf
rclb
xor
dec
cmp
in
es
daa
aam
out
push
loop
mov
loope
mov
out
les
and
js
xchg
jnp
fcmovbe
adc
enter
xor
dec
out
dec
cltd
and
jo
movsb
and
cmp
mov
in
fmul
cmpl
rcrl
sbb
lea
and
mov
push
addr16
popf
rcl
out
cmp
mov
cmp
adc
xchg
popa
mov
cltd
dec
loopne
or
insb
cmc
sub
cltd
cmp
xchg
out
sbb
xchg
or
jmp
mov
aam
mov
push
push
cli
leave
mov
call
sub
int3
push
pushf
jne
in
dec
pop
pop
arpl
jp
sbb
xlat
mov
icebp
mov
aaa
repz
or
add
sti
mov
mov
and
fwait
mov
mov
cmp
xchg
adc
jmp
and
mov
jns
popf
pop
push
shll
pushf
or
jae
test
das
ds
and
jmp
ss
or
rorl
and
add
aaa
aad
xchg
xchg
pop
das
jo
daa
lods
push
add
add
shll
inc
xchg
push
or
outsl
dec
xor
insb
xor
or
fcmovnb
pushf
fwait
call
add
push
sub
test
adc
adc
cmp
add
add
movsl
dec
dec
daa
cmp
pop
cmp
dec
ja
mov
orps
lret
mov
out
test
cmp
xor
sahf
jge
std
cwtl
mov
adc
jge
ja
add
adc
lret
jno
mov
push
fimuls
xchg
incb
stos
test
mov
imul
sbb
andb
adc
pop
daa
in
jns
adcb
inc
xlat
and
add
mov
add
hlt
cs
sahf
push
stos
ss
mov
dec
push
lea
dec
inc
filds
inc
ret
mov
xchg
sahf
mov
mov
or
jno
jb
mov
pop
cld
sbb
inc
add
out
movsb
xchg
push
insl
lret
mov
pop
mov
ja
ret
xchg
inc
inc
sahf
bound
sub
push
aad
push
insb
cwtl
pop
jb
xchg
repnz
xor
lcall
adc
imul
call
pop
mov
mov
or
mov
jge
mov
aaa
lahf
mov
mov
or
cld
push
fdivr
adc
cmpsb
jno
xchg
and
fidivs
mov
pop
arpl
adcl
fwait
push
sbb
ss
insb
in
fbld
gs
in
and
cmp
jns
sbb
je
into
ds
sub
idivb
jo
mov
mov
xchg
xchg
cmp
and
fs
mov
jmp
cmpsb
sti
push
out
ljmp
cmpsl
jno
cmp
stc
xchg
imul
aad
cmp
notl
inc
cmpl
mulb
jle
pop
cmp
inc
mov
hlt
or
jp
mov
sbb
mov
mov
adc
repnz
jbe
mov
divb
movsb
addl
ret
sbbb
out
rcrb
mov
dec
mov
loop
shlb
mov
cmp
pop
pop
aam
fisttps
movb
jno
sub
ja
sbbl
inc
mov
dec
movsb
adc
or
jno
sbb
out
xlat
add
cwtl
inc
dec
push
inc
xchg
jbe
pop
mov
int
outsl
das
mov
jl
and
or
out
sarb
pop
mov
or
jle
test
imul
in
cmp
call
ficoml
push
mov
mov
dec
fwait
hlt
imul
adc
fisubs
sbbb
repz
in
inc
in
test
test
shrb
js
ds
out
push
add
daa
shrl
popa
adc
jns
rcr
push
test
push
adc
push
dec
pop
cli
add
leave
adc
fcomi
jbe
add
adc
jg
mov
repnz
stc
inc
mov
cmc
movl
ja
imulb
dec
ja
cltd
es
or
add
fmulp
sbb
and
sahf
add
xchg
jae
or
mov
outsb
mov
add
test
sub
mov
or
and
add
les
push
or
inc
rolb
inc
push
add
fdivs
inc
cltd
pop
stos
jecxz
test
cmpsl
imul
out
cmp
jecxz
pop
in
mov
lret
ret
popa
mov
mov
addr16
mov
and
jp
xor
sub
mov
pop
sbb
cmp
mov
sub
sub
scas
mov
in
sbb
out
xor
xchg
pop
loop
out
xchg
mov
sbb
icebp
ljmp
sahf
pop
shrb
shll
dec
cs
int
push
jno
lret
das
popa
lds
repnz
jmp
or
or
add
push
mov
xchg
ds
pop
adc
std
lret
lods
test
shrb
inc
data16
lret
jb
mov
js
shrl
add
inc
pop
addl
mov
adc
repz
mov
out
mov
sbb
out
mov
mov
stos
add
and
test
jl
sahf
and
and
fists
push
jle
push
or
popa
inc
add
sbb
movsl
fadd
movsl
push
out
pop
mov
sbb
mov
in
xchg
xchg
test
cmpsl
insl
mov
jmp
loop
add
add
fisttps
mov
adc
lret
jne
xor
add
hlt
add
add
cmp
cld
push
xchg
icebp
popa
repnz
xchg
je
popf
faddl
cmp
xchg
inc
pop
pop
xchg
push
cmp
and
xchg
adc
sub
aam
mov
in
jnp
or
cs
into
stos
add
add
adc
dec
rdmsr
stos
add
out
addr16
mov
out
jge
push
and
bswap
fcompl
xchg
rorb
jmp
push
cltd
mov
lret
sub
mov
nop
jbe
xlat
fistpll
loopne
mov
cmpsb
dec
mov
popa
pop
lret
sti
cmp
lret
mul
push
mov
stos
addr16
mov
push
jnp
add
cmp
aaa
jge
nop
test
and
cmc
add
dec
ds
fs
cli
aam
enter
mov
testl
dec
dec
mov
dec
xor
lock
and
call
cmp
cmovae
jge
mov
and
inc
jae
inc
js
push
test
jne
or
mov
mov
sahf
enter
and
adc
sbb
iret
testb
std
fnstcw
or
push
rcr
lods
jl
inc
test
fldcw
aaa
fs
push
rorl
sbb
sub
leave
fstpt
movsb
out
fists
das
inc
hlt
or
daa
dec
mov
adc
cmc
fwait
inc
jnp
negb
inc
and
pop
iret
outsl
ja
loope
jp
dec
sbb
pop
mov
call
punpckldq
xchg
mov
dec
mov
xor
jno
mov
pop
enter
dec
mov
fwait
mov
xchg
mov
test
adcb
fisttpl
fidivs
jmp
inc
or
fisttpl
jg
jg
jb
sbb
cwtl
pop
ljmp
mov
sub
jae
pop
inc
mov
dec
jo
jae
xchg
mov
add
xchg
aas
cmc
je
push
aas
js
or
sbb
je
add
jns
divb
out
adc
xchg
xor
jle
inc
outsl
clc
rcrl
fwait
jle
inc
out
ret
mov
or
negb
mov
add
inc
enter
stos
sbb
lret
sahf
lcall
adc
mov
sbb
stos
cmp
mov
ss
push
push
daa
and
int3
ss
xlat
test
enter
jle
cmp
mov
pop
xorl
xchg
lds
lret
js
jno
es
lds
je
test
pop
inc
xor
fstpt
ret
ret
jb
repnz
push
sub
sti
fldl2t
stos
mov
dec
out
jne
in
loopne
js
mov
dec
xor
xor
and
mov
dec
out
mov
cmp
pop
notl
mov
aam
sbb
addr16
outsb
and
outsb
scas
xchg
lods
fstl
out
jge
jbe
or
loopne
inc
dec
pop
add
add
inc
out
mov
cmpsl
or
cmp
mov
mov
cwtl
lcall
jg
pextrw
in
das
insb
mov
cwtl
lcall
in
ljmp
cmp
sbb
test
fisubl
sbb
mov
push
cltd
cmp
sub
jo
push
pop
mov
data16
or
adc
sub
icebp
aam
nop
pop
fsubp
mov
pop
rcll
fsubs
add
xor
std
fistl
sti
int3
div
shrb
cmpl
sub
push
xor
mov
shlb
add
and
je
jb
dec
stc
or
aaa
icebp
testl
out
adc
es
scas
or
std
addr16
movl
mov
jne
jle
cmp
and
movsb
mov
mull
aaa
xchg
jo
xchg
call
cmp
push
push
fdivl
and
jmp
adc
test
sbb
or
scas
adc
rorl
insb
es
fs
mov
in
adc
jl
and
pop
dec
jne
ja
cmp
add
jbe
ss
mov
mov
outsb
xor
adc
mov
sbb
inc
push
jl
pop
adc
and
jnp
test
xor
adc
xlat
andb
add
add
es
jno
cmc
divl
mov
push
and
add
add
adc
cmp
xor
pop
lahf
neg
cmp
inc
and
jne
int3
js
cmpsb
xorl
and
mov
icebp
int3
mov
mov
repz
xor
jnp
xor
mov
adc
jecxz
lock
icebp
jmp
mov
fstpl
imul
js
push
shll
xchg
filds
jmp
ret
pop
fcmovb
hlt
popa
or
pop
aas
push
jp
pop
cmovo
adc
clc
push
jge
lea
addb
add
out
mov
mov
in
cmp
repz
push
sub
cmp
ds
add
sub
sub
mov
pop
push
add
adc
sub
fsubl
addr16
inc
xchg
inc
fadds
popf
shl
sbbb
xchg
cli
enter
push
push
cmp
movsl
rcrl
les
int3
mov
in
repz
lea
dec
jmp
test
jl
jne
or
dec
jne
jo
cmp
movsb
cltd
out
stos
and
cmp
gs
out
dec
and
or
sti
bnd
pop
xor
mov
mov
xor
cmp
cli
and
xlat
jl
push
xor
fisubs
loopne
pusha
pop
repnz
fldt
hlt
hlt
jne
loopne
mov
stos
idivb
mov
aas
push
addr16
cmc
in
lock
insb
sub
faddl
push
cmp
dec
aam
ds
insb
xchg
insb
stos
in
adc
lahf
decl
fwait
icebp
and
cmpsl
das
pop
xor
addb
sub
lahf
out
insb
insb
cmp
jo
dec
pushf
or
cmp
cmpsb
sub
xor
adc
mov
int3
jb
or
imul
sub
or
popf
add
jnp
inc
cmp
std
inc
insl
sbb
mov
cmp
bound
push
popa
pop
and
mov
inc
js
in
inc
pop
pop
je
movsb
mov
or
xor
outsl
rcll
outsb
fsubl
mov
stos
enter
popa
or
ret
and
xor
xorb
notb
sti
push
cmp
cwtl
shrb
xchg
dec
pushf
mov
sub
push
jle
cli
cmp
inc
movsb
or
mov
cmp
aaa
aaa
sub
ret
pop
xchg
outsb
addr16
push
shll
in
cmp
outsb
repnz
pushf
in
lcall
sbb
add
dec
movsl
mov
lcall
xchg
int
loope
cmc
cmpsb
cmp
push
and
add
mov
test
mov
dec
jmp
adc
xor
into
repz
mov
xor
inc
or
in
pop
add
repz
mov
hlt
xor
push
add
push
dec
cltd
add
fsubl
jne
out
xchg
jecxz
dec
pushf
pop
cmp
gs
add
mov
cmp
faddp
push
adc
push
scas
in
xchg
xchg
addr16
xor
mov
lahf
xor
es
jbe
outsb
jbe
mov
and
enter
pop
xchg
mov
cltd
aaa
sub
in
xor
jge
test
mov
jb
cmp
ljmp
push
dec
out
loopne
mov
adcl
ds
push
or
mov
iret
int
lds
push
jns
sub
loope
mov
cmp
in
loop
insb
repz
mov
sub
shlb
shrl
lea
lret
mov
and
jp
loop
call
lahf
xchg
testb
stos
in
cmp
mov
incl
daa
push
jnp
dec
in
jne
stos
mov
pop
xchg
fstp
fldenv
push
ficoml
pop
sub
jmp
pop
dec
jge
xor
daa
ja
fildll
cmp
pop
subb
cwtl
fs
cmpsb
clc
push
lret
adc
and
test
sub
or
ja
fucomp
jle
xor
dec
pusha
pusha
mov
push
insb
inc
add
and
pmulhuw
pop
push
xchg
mov
rol
sbb
or
clc
push
addr16
xchg
mov
mov
dec
sub
rolb
jbe
je
pusha
push
push
int3
sarb
stos
mov
add
add
sahf
xchg
inc
fisttps
lahf
int
push
pcmpeqb
or
hlt
add
add
jg
dec
out
or
pop
pop
sub
mov
sub
xor
sub
lods
shlb
or
cwtl
dec
sub
ret
fisubl
mov
mov
dec
out
or
mov
stc
imulb
in
push
in
mov
push
add
add
fildll
mov
into
jns
hlt
and
ficoms
xor
addl
sahf
cmp
dec
dec
adc
rol
arpl
cmp
fdivl
adc
push
dec
test
push
jae
inc
test
jne
sbb
lcall
sbb
jmp
dec
loope
outsb
filds
xchg
cs
dec
adc
mov
pop
xchg
outsb
sbb
test
inc
addr16
fsub
ds
lods
push
ret
and
and
loopne
in
inc
mov
pop
bound
fcmove
xlat
cmpsb
test
lret
or
jb
test
sbb
mov
mov
sbb
lret
add
ljmp
sbb
hlt
test
dec
push
and
iret
stc
or
xchg
jo
mov
xchg
pusha
inc
xchg
push
adc
fsubl
es
mov
cmp
jae
add
xorl
dec
scas
lret
lret
push
mov
ss
pop
lahf
jmp
and
hlt
ss
jbe
xor
cmp
mov
and
sbb
adc
inc
mov
jmp
test
pop
and
xchg
mov
fadd
sbb
cmp
dec
imul
repz
js
scas
iret
imul
sub
stos
out
pop
inc
lods
sbb
sbbb
je
sub
cmp
fsubl
jb
cwtl
xor
jno
mov
lret
ss
aam
and
or
int3
dec
scas
rcll
sti
inc
cmp
cld
fimuls
cmpsl
cmpsb
scas
mov
cltd
jecxz
adc
inc
lahf
sub
imul
lods
bound
and
pop
mov
popf
pop
jns
mov
mov
cltd
js
push
lods
ss
outsl
and
jbe
xor
int3
sbb
shrb
push
lods
rorb
mov
mov
cmpsl
lds
loopne
inc
out
ljmp
mov
data16
push
std
push
int
xor
add
scas
mov
test
bound
ret
dec
dec
jle
or
inc
or
cmpsb
push
sbb
sbb
pop
js
sub
jb
stos
lods
mov
in
in
cltd
dec
repz
mov
sub
mov
mull
cmp
aas
test
scas
data16
sbb
push
jmp
mov
mov
jl
test
add
leave
outsl
out
mov
pop
pop
sub
pslld
inc
imul
jae
sbb
gs
and
shrl
dec
xor
imul
sbb
mov
xor
insl
ja
xchg
push
mov
jns
in
imulb
mov
sub
pop
leave
idiv
mov
mov
or
push
fwait
push
shrb
aas
ja
sahf
pop
mov
dec
insb
or
jge
sti
gs
mov
adc
cltd
mov
rcl
and
fwait
add
loopne
or
mov
xchg
mov
pop
and
sbb
lods
push
dec
fldl
mov
popf
fdivl
xchg
inc
mov
sbb
rolb
pop
mov
add
aam
cmpsb
popf
ds
push
mov
subl
mov
mov
adc
push
cmp
in
pop
out
mov
xchg
imul
mov
add
pop
cmc
cltd
add
or
xchg
outsl
push
jne
push
push
insl
push
dec
push
arpl
iret
aam
cmp
out
test
in
push
push
jge
cmp
jb
lahf
lret
or
mov
mov
test
test
mov
rolb
mov
std
shl
mov
mov
xchg
jl
mov
push
add
je
cmp
push
mov
sbb
fs
clc
cmp
xchg
lcall
jbe
lea
xor
xor
sub
aaa
add
pop
inc
jp
sahf
jbe
stos
inc
mov
and
add
sarl
pop
and
add
add
call
aas
popa
adc
cmpl
or
add
add
ljmp
or
std
dec
mov
jno
stc
mov
stos
xchg
popf
test
xorl
adc
stos
clc
mov
add
fwait
cmpsb
les
push
inc
add
mov
cld
mov
pop
xor
jmp
xchg
cwtl
pop
or
mov
jg
xlat
xor
daa
das
push
push
notl
test
mov
enter
pop
sbb
dec
int
push
sub
push
push
mov
cmp
xchg
mov
dec
dec
int3
loope
std
jmp
jmp
jge
and
repz
mov
push
outsl
cltd
xchg
cmpsl
or
outsl
ret
jae
sbb
shll
xor
cmpsb
cmp
or
into
fldl
dec
cmc
cmp
inc
inc
xor
dec
aad
mov
mov
icebp
dec
hlt
filds
add
push
adc
scas
xchg
das
call
cmp
and
add
inc
imul
icebp
or
out
push
push
int3
movsl
lods
dec
push
adc
sarb
movsl
push
imul
cmc
jbe
iret
cmpsl
rcr
xchg
inc
repz
jnp
fsubrs
decl
mov
add
test
inc
nop
jno
or
push
mov
cmc
adc
xor
loopne
mov
or
pushf
enter
jo
lods
in
adc
add
fwait
loope
adc
jle
sbb
sbb
fnstcw
xor
mov
xchg
scas
sbb
fxch
or
or
shl
sbb
xorl
dec
cmp
pop
sahf
mov
jg
inc
mov
pop
mov
in
sub
int
imul
movsl
shll
stc
ficompl
bound
out
lods
add
enter
insb
dec
mov
adc
jmp
mov
push
lds
iret
xchg
icebp
add
xor
adc
loop
incb
repnz
push
idivl
inc
shll
fwait
popl
clc
push
daa
std
das
sbb
push
pop
mov
pop
inc
iret
push
mov
int3
aam
popf
mov
or
inc
ds
and
mov
mov
mov
jns
cmp
pop
adc
push
fwait
xorl
mov
das
les
in
mov
fdiv
rcr
aas
cwtl
sti
adc
movsl
or
xchg
cmpsl
rcll
inc
rcrb
inc
cli
call
push
insl
push
or
arpl
lods
sub
ja
xor
xor
ret
push
addr16
mov
cmp
adc
mov
cmp
cmp
pop
xor
pop
push
sbb
loope
mov
dec
mov
sub
fdecstp
in
iret
cld
test
stos
fwait
or
xor
adc
dec
das
clc
push
lret
and
cmpsl
add
mov
jl
cs
stc
testl
inc
adc
mov
mov
push
or
dec
aad
mov
mov
add
repnz
sub
in
rcrl
mov
adc
xchg
lcall
cmpsb
ret
mov
ret
je
ficoms
out
jp
orb
push
ja,pn
sub
sbb
inc
xchg
fildll
cmp
sbb
out
arpl
mov
mov
scas
aam
lods
repz
sub
add
aad
lds
nop
dec
mov
pop
dec
cld
adc
cmp
push
je
stc
xlat
pusha
pop
dec
push
ret
fisubl
hlt
pusha
jge
or
mov
outsl
sbb
inc
pop
js
mov
scas
loop
add
sbb
das
mov
movsl
pop
pop
stc
mov
add
aaa
out
sahf
inc
nop
leave
movsb
push
das
jnp
loop
xchg
out
pop
add
ja
test
mov
jmp
adc
gs
adc
loope
clc
sahf
stos
xchg
sbb
stc
mov
mov
jge
movsb
ja
dec
xor
jae
pop
sbb
outsl
push
iret
int3
popa
inc
and
dec
sbb
sbb
push
mov
xchg
mov
and
loope
aad
rcr
ret
adc
shl
mul
mov
aas
andb
loop
xor
inc
out
pusha
add
add
bound
fsubr
jne
sbb
and
push
ds
popa
shrb
icebp
lcall
loope
push
or
inc
inc
inc
mov
and
stos
mov
mov
imul
pop
out
xor
lahf
movsl
ret
inc
add
int3
dec
add
add
sahf
insl
not
neg
mov
int
jl
sgdtl
add
hlt
add
add
addr16
mov
cmp
jb
sub
cs
subb
cmp
loopne
fldenv
setge
test
das
sbb
repz
repnz
mov
add
mov
out
stos
mov
out
push
mov
hlt
inc
push
pop
mov
jno
lock
popa
adc
int3
mov
pop
aas
imul
addr16
dec
inc
movl
leave
bound
mov
push
sahf
add
xchg
shlb
add
xor
jnp
int
xchg
sti
dec
dec
add
adc
sbb
and
stos
push
push
dec
mov
loopne
pop
bound
les
in
sub
dec
iret
pop
sub
aad
daa
jl
xor
loopne
push
es
mov
and
addl
sub
popa
xchg
enter
sbb
ja
adc
movsl
push
inc
testl
imul
xchg
bnd
sbb
dec
in
sbb
std
add
inc
add
je
imul
lea
add
outsl
inc
adc
add
in
xchg
mov
in
cmp
fdivrs
and
scas
fidivrl
stos
xchg
outsl
mov
pop
notl
fs
lahf
xor
out
in
stos
addl
xchg
fmuls
popa
jns
cmpsl
adc
pop
inc
fbld
adc
jg
push
inc
xor
arpl
dec
jnp
lea
jmp
into
aas
sbb
mov
rcrl
outsl
roll
scas
fistpl
pop
mov
jecxz
sarb
or
xchg
dec
imul
jno
stos
stc
stc
outsb
pop
stos
ret
outsl
mov
or
repnz
daa
scas
jmp
dec
gs
xor
rcr
push
push
addr16
dec
mov
in
out
inc
add
cmp
add
mov
sub
je
cltd
inc
test
movsb
fcoms
push
data16
add
xchg
sti
test
xchg
jne
dec
fwait
sbb
mov
mov
into
push
mov
inc
in
scas
xlat
aam
stc
loop
fwait
cltd
ret
jbe
fisubrl
repnz
jbe
scas
mov
xor
lds
and
in
movsl
clc
test
hlt
cmp
cld
pop
test
lret
mov
out
adc
cld
les
inc
xchg
xchg
xchg
cs
fists
hlt
cld
xlat
xchg
test
out
xor
sub
inc
inc
jecxz
xchg
inc
clc
adc
cli
jecxz
xchg
sahf
addr16
or
push
xor
ljmp
cmp
add
lcall
lcall
out
pushl
mov
inc
jl
lcall
xchg
dec
sbb
sbb
stos
and
and
mov
ljmp
fimuls
push
jle
push
inc
cld
shll
cmp
xchg
jl
cltd
mov
cmp
repz
pop
subl
and
mov
jecxz
adc
xor
sub
and
into
daa
aas
insl
fiadds
movlps
jecxz
adcb
movsl
ds
add
sub
std
add
addr16
sub
sub
dec
inc
sub
cmp
xor
psrlw
inc
not
ret
fimuls
imul
xchg
adc
dec
sar
jg
addr16
into
stos
jl
lcall
or
fmul
xor
mov
mov
dec
mov
or
dec
leave
mov
xor
jae
repz
sub
push
push
xchg
iret
adc
push
sti
fnstcw
xchg
lret
insl
stos
enter
addl
dec
ret
divb
and
dec
mov
jae
cmpl
mov
dec
outsb
rclb
or
jg
lds
dec
inc
push
jp
scas
mull
out
cmp
add
xor
mov
shrb
popf
cld
ljmp
je
out
cwtl
cltd
aas
cmpsl
pop
out
addr16
mov
dec
mov
inc
mov
cltd
cmp
sbb
mov
fisubrl
sub
cwtl
xor
bound
inc
pop
mov
out
notb
pusha
or
add
leave
or
adc
in
addr16
stc
jg
test
ret
push
sahf
mov
inc
es
pop
jecxz
out
out
sub
mov
loop
push
inc
rorl
sbb
adc
ficomps
push
add
add
mov
push
out
std
mov
push
jg
mov
cmc
or
add
add
add
pusha
clc
and
push
arpl
push
mov
pop
xchg
push
stc
lock
dec
mov
mov
jnp
ljmp
rorl
adc
cmp
jbe
lret
rcll
dec
pusha
ljmp
cmp
cmpsb
inc
sbb
push
sub
pop
fisubrs
mov
push
xchg
mov
mov
push
mov
nop
mov
jb
scas
sub
dec
pop
insb
mov
in
adc
jbe
sbb
imul
or
pop
add
shlb
cmp
lock
aas
jge
and
jp
add
jmp
mov
jle
popa
jb
mov
insl
and
sub
mov
rcrb
enter
test
ss
jae
mov
and
insb
and
icebp
vpandn
aas
out
int3
xchg
aad
push
ret
fs
gs
cmc
adc
xchg
test
fnsave
push
dec
sub
cld
mov
shl
xor
jg
and
out
ljmp
dec
std
incl
mov
jp
decb
dec
das
cmp
mov
negb
mov
fdivrp
mov
adc
push
mov
xchg
ja
inc
sbb
cmpsb
shrb
push
pop
cmp
scas
sub
and
scas
jmp
inc
test
push
movsb
movsb
cmpsl
addr16
push
aam
out
cmc
bound
push
push
test
or
adc
fldl
ret
add
xchg
adc
data16
pop
adc
xchg
ds
dec
dec
xor
outsb
mov
cwtl
stos
xor
jmp
subb
dec
cmpsl
xchg
xchg
loop
mov
clc
iret
jg
mov
jnp
and
or
jle
jae
test
push
cld
adc
push
sbb
push
sub
push
jno
xor
sub
ljmp
shrl
push
inc
jne
xlat
adc
sbb
cmp
mov
jnp
sub
cmp
popa
aaa
mov
cmp
es
adc
dec
cmp
ljmp
sarl
sbb
cmp
hlt
in
mov
into
inc
loopne
fistpll
call
or
cmp
lock
fdivl
or
sbb
xchg
fldl
push
and
mull
loop
or
cmp
lret
xlat
outsl
jne
cmc
jne
gs
test
inc
or
out
inc
dec
stos
push
adc
jge
andb
xorb
or
lea
ret
mov
dec
ret
inc
mov
pop
loopne
fsts
mov
push
lret
cmpsb
test
xchg
push
subl
jp
int
cmpsb
repnz
enter
inc
stos
ret
out
jb
push
mov
fdivs
inc
cmp
cmc
enter
sub
aas
push
xor
sahf
inc
fsubl
jl
mov
ljmp
or
nop
push
xchg
and
xchg
push
dec
in
adc
sbb
add
xchg
in
sub
adc
and
dec
xchg
lds
jae
sbb
pop
or
or
scas
push
mov
addr16
mov
xchg
scas
int
mov
jmp
icebp
call
lahf
fldl
ficoml
fldt
sbb
push
push
test
mov
je
add
sbb
mov
mov
jns
repz
imul
div
xchg
shll
pop
sub
mov
addr16
ljmp
and
mov
pminub
loop
pop
jno
cmpsl
addr16
xor
imul
int
mov
mov
ret
sahf
xchg
mov
adc
movsl
jnp
jnp
jo
cmp
jns
lods
mov
in
push
out
adc
pop
into
adc
mov
in
push
jbe
sbb
rcll
stc
dec
adc
and
add
pop
jns
and
into
or
faddl
inc
push
les
imul
pop
addr16
push
xor
lods
inc
dec
icebp
in
dec
cmc
sti
sbb
test
xor
andl
cmp
or
sub
cwtl
cmc
add
dec
lods
xchg
repnz
outsl
lock
jp
call
jo
es
cmp
cmc
ljmp
push
ds
mov
out
icebp
jo
fistpll
lret
jge
sarb
xlat
xchg
and
mov
jne
pop
hlt
sbb
les
cmp
add
add
lret
in
out
dec
add
or
sgdtl
hlt
add
add
xor
dec
sbb
stc
rorb
imul
sbb
out
imul
dec
sti
xchg
mov
and
push
lods
dec
adc
dec
xor
mov
sbb
not
jl
daa
subb
icebp
repnz
or
xchg
jb
fmuls
insb
das
test
and
pop
lret
call
cmp
jb
nopl
sub
mov
mov
ret
push
dec
fadd
mov
lods
push
xlat
js
sbb
mov
fnstenv
cmpsb
xchg
in
cmp
lcall
push
push
or
sahf
push
out
cltd
push
sub
push
call
sar
pop
addr16
inc
mov
and
xchg
cld
scas
call
mov
shl
mov
dec
add
mov
jge
sbb
in
js
test
ss
subb
ja
test
ret
cmpsl
enter
js
test
iret
dec
xchg
fldt
add
fs
cmp
push
dec
cmp
sub
xchg
add
push
inc
or
mov
imul
pop
mov
push
imul
cmpl
fiadds
int
fucomip
push
xchg
lods
inc
movsl
adc
out
cmp
or
cmpl
lcall
lds
cmpsl
push
jle
xchg
jne
jmp
xor
mov
sub
shl
fdivrl
pop
lcall
lock
push
loopne
loop
cwtl
push
cmp
ja
dec
lret
cmp
and
xchg
lds
adc
andb
dec
ret
lds
addb
and
jbe
mov
adc
stos
mov
clc
xor
mov
pop
jo
xchg
enter
lds
shrl
mov
pop
inc
je
ficomps
lahf
std
inc
insl
mov
les
es
inc
or
xchg
pop
jmp
cmpsb
inc
add
sub
mov
rep
push
stc
and
adc
outsl
pop
xor
pop
nop
sti
push
mov
inc
mov
imul
outsl
cmpsb
out
inc
push
jno
pusha
push
xchg
int3
cmpsl
xchg
jge
cmc
sub
push
in
or
popa
fwait
pop
and
pusha
pop
sbb
inc
stc
cmp
mov
arpl
shrb
shl
fldenv
mov
aaa
scas
mov
sbb
push
shll
jnp
xlat
push
pop
pop
adc
sbb
xchg
lods
and
pop
lods
andl
xor
lock
std
arpl
in
xchg
cmp
les
dec
mov
xchg
cmp
scas
inc
inc
sbbl
jg
lret
pop
xor
mov
cmpsb
shlb
clc
sub
mov
add
push
rcrl
cmpsb
jmp
push
inc
popf
push
mov
push
cmp
jo
hlt
mov
push
jg
aas
mov
aad
arpl
mov
jae
cwtl
imul
dec
lea
mov
mov
adc
pop
movsl
and
push
mov
jbe
gs
sbb
xchg
inc
shrb
dec
test
shr
mov
divl
jae
cmp
push
sbb
adc
push
xor
push
mov
jp
jmp
and
aad
xor
push
mov
rcll
pop
or
jmp
fwait
jbe
add
cwtl
cmpsl
xlat
in
push
out
nop
sub
rcll
es
lods
xchg
cmpsb
hlt
bsr
rolb
scas
pop
shlb
xchg
outsl
push
jns
inc
pop
sbb
push
adc
mov
xor
movsb
push
btr
inc
lcall
filds
dec
sbb
or
jl
push
mov
push
mov
ss
xor
and
int
iret
inc
data16
push
xor
sub
xlat
mov
loope
mov
stos
jl
xchg
bound
push
out
ret
js
sbb
jns
scas
jl
into
int
test
das
dec
test
notl
push
add
nop
jge
mov
or
inc
scas
pushf
jl
and
push
inc
insb
xchg
xchg
sbb
daa
cld
andb
clc
lahf
ljmp
lds
jecxz
jns
mov
rcll
pop
sub
push
add
mov
pushf
neg
mov
adc
mov
mov
lret
fdivp
mov
mov
add
add
adc
je
std
mov
sarb
cmp
adc
add
add
add
cld
dec
jno
xchg
xor
jecxz
or
or
mov
fisubs
je
mov
out
jge
and
cmc
xchg
sub
sub
pop
popa
jno
inc
pop
pop
out
jp
fsts
hlt
test
popf
sub
sar
arpl
jno
or
mov
or
jbe
test
push
mov
push
mov
xchg
jmp
test
loopne
xchg
or
mov
lods
clc
call
pop
dec
bound
dec
scas
insb
mov
add
mov
test
clc
mov
lods
aas
fsts
lock
sbb
icebp
mov
cmp
mov
mov
adc
sub
sbb
and
mov
mov
out
fisubrl
cmpsl
call
gs
push
adc
pop
adc
andb
mov
cmp
xor
stc
scas
outsl
pop
or
jecxz
jecxz
sbb
call
popa
es
out
jecxz
std
inc
test
pop
in
xchg
out
stos
xchg
int
and
pushf
jp
iret
aaa
adc
in
and
cwtl
jae
xchg
inc
ss
cld
je
fiaddl
mov
add
or
mov
loopne
or
mov
mov
addr16
inc
cmp
push
push
addr16
movsb
mov
jno
ljmp
lret
aad
adc
or
cmp
negl
mov
stos
inc
rol
mov
cmpsb
out
push
cwtl
enter
loope
mov
adc
fildl
dec
mov
ljmp
leave
push
inc
movsb
and
mov
ss
das
xor
xchg
dec
pop
xchg
mov
cli
test
push
lcall
mov
mov
push
negl
arpl
adc
icebp
jbe
mov
pop
jl
clc
repz
push
sbb
jns
jo
testl
lahf
out
es
pop
push
mov
outsb
dec
pop
test
pop
pop
inc
mov
adc
loope
fldenv
pop
lock
xor
jae
mov
dec
jge
push
cmp
sbb
pushf
cmp
mov
ret
cmp
or
insl
xchg
std
popf
hlt
imul
sbb
dec
ss
lock
cmp
js
jmp
cmp
push
mov
add
adc
mov
sbb
sbb
test
or
sahf
in
lcall
fisttps
pop
aad
jae
fiaddl
push
cmpsb
mov
mov
inc
xorl
push
sbb
sub
sbb
pop
push
jge
ss
adc
and
xchg
sub
adc
xlat
or
pop
daa
pushf
cs
loope
xchg
add
in
subb
lcall
or
mov
test
add
xor
cwtl
pushf
dec
add
das
aad
ds
push
test
cli
inc
hlt
pop
push
cs
mov
pop
dec
sub
mov
pop
dec
pop
add
cli
psubq
sbb
lahf
mov
or
jl
add
and
jp
cmp
aas
stos
loop
xchg
cltd
xor
xor
mov
or
pop
loope
push
aas
xchg
sub
stos
jmp
lods
lea
xchg
loop
imul
pushf
repnz
rorl
inc
jl
jmp
daa
sub
mov
test
je
jle
sub
cli
mov
scas
mov
add
psubq
sub
xor
pop
fiaddl
int
test
sub
lret
sarl
jae
repz
add
popf
xor
pop
scas
arpl
imul
adc
ss
aam
in
addb
out
pop
data16
lea
pop
out
out
cmpsl
jne
inc
mov
enter
nop
and
add
rorl
mov
add
xor
xor
jp
je
bound
push
or
jge
jecxz
mov
repnz
xchg
ror
in
jmp
rcr
leave
stc
mov
push
pop
cmpsb
popa
mov
mov
into
mov
cmpsl
ret
xchg
rcrb
stc
andl
hlt
inc
call
inc
das
push
jnp
and
pop
outsb
insb
addr16
stc
movsb
dec
fnstenv
insb
clc
cmpsl
std
mov
jno
les
movsb
xchg
stos
xor
fisubs
or
cmpsl
pop
icebp
jae
in
and
adc
cmp
jp
sarb
pop
fnstcw
dec
rcll
cmp
push
sub
aad
xchg
aaa
cs
xor
add
mov
fs
lods
in
or
xchg
dec
rcrl
add
hlt
add
add
aam
sub
repz
pop
int3
jmp
push
stos
pushf
aad
cmp
mov
ja
les
push
adc
adcb
cmpsb
mov
jmp
push
fcoms
movsb
add
lret
insl
mov
mov
push
sbb
stos
adc
mov
or
or
pop
push
xor
inc
add
mov
pop
ret
test
cmp
pop
aad
or
rclb
out
dec
lahf
mov
inc
movsl
mov
pushf
out
iret
pop
sbb
push
add
sub
shlb
add
rorl
sbb
mov
mov
sub
sbb
enter
int3
cvttps2pi
mov
out
mov
orb
fisttpll
xor
sbb
and
dec
lcall
mov
jno
jae
mov
addb
mov
xor
jae
fwait
ja
negb
jns
mov
mov
push
std
mov
lods
stos
mov
imul
gs
xor
jge
mov
mov
daa
xchg
mulb
push
test
xchg
jnp
rolb
stc
lock
mov
movb
daa
xor
add
rolb
adc
mov
push
sbb
aaa
adc
lock
das
mov
shrl
dec
dec
pusha
mov
nop
add
movsb
imul
xchg
and
jbe
arpl
push
ss
mov
sub
sub
xchg
pop
push
fldt
les
push
jg
popf
sbb
hlt
sbb
loopne
scas
es
iret
mov
cmp
dec
aas
lock
inc
and
lret
mov
xchg
xor
cmpsb
aas
jno
mov
popa
out
in
jmp
jecxz
inc
fldt
int
xchg
xchg
out
add
mov
adc
dec
jne
insb
insb
enter
and
fcoml
pop
iret
fcomps
push
jl
mov
in
pop
push
int
lret
js
jne
nop
push
and
jp
xchg
les
jae
jns
jb
inc
mov
popa
lock
pop
cwtl
shrl
paddusb
sahf
cmp
cwtl
or
cmp
cmp
setb
das
std
out
cli
mov
cmp
pop
loope
rorb
pop
dec
arpl
sub
mov
pop
es
xchg
xchg
add
mov
lcall
je
inc
fsubs
dec
push
out
sti
dec
std
loope
inc
inc
mov
cmp
xchg
rolb
jo
int
xchg
outsl
jno
imul
xor
cmc
and
pop
outsl
or
jmp
push
add
loope
int
aam
mov
pop
push
mov
push
adc
xlat
jle
cmp
or
cs
in
push
outsb
in
fimuls
cld
or
pop
test
push
jecxz
jo
push
sub
mov
push
and
dec
add
lahf
or
jle
subl
aas
in
hlt
dec
int3
mov
stc
xchg
inc
push
sub
inc
cmp
pop
addr16
fists
in
aaa
movsl
lret
ss
mov
bnd
pop
dec
or
add
jbe
into
xchg
jp
or
cli
loope
push
jecxz
and
dec
shrd
cmp
push
push
mov
je
lcall
mov
sub
pop
dec
test
pop
jb
or
iret
mov
arpl
mov
cmp
sub
lods
cmpsb
shll
imul
xchg
daa
xor
push
rcrb
and
fidivs
and
jl
ljmp
xchg
dec
out
ss
adcl
fs
or
pop
loop
xor
mov
adc
repz
lcall
jne
adc
data16
mov
bound
movsl
popa
mov
adc
inc
mov
sahf
nop
adc
rcll
cmp
xchg
sarl
test
pop
add
fcoms
ficoml
repz
push
mov
mov
fcmovnu
pop
or
cmp
or
or
repnz
mov
inc
lods
fadds
pop
sbb
outsl
dec
ret
daa
cmpsb
cmpsl
iret
ds
inc
sbb
jbe
or
dec
lock
xchg
mov
and
test
ret
das
popf
pop
cmp
xor
jae
stos
inc
jge
mov
imul
xor
into
repz
jecxz
repz
test
das
push
andb
pusha
push
ja
fcmovb
inc
cwtl
outsl
sub
add
add
push
push
add
lods
test
gs
movsl
jg
push
add
hlt
add
add
inc
data16
and
aas
sub
jo
push
jns
xchg
xchg
fisubrs
adc
adc
adc
add
cmp
std
mov
or
addb
insl
xlat
pop
addr16
por
out
pop
mov
add
lret
cmp
jno
ret
jae
add
cld
mov
xor
jecxz
sbb
xor
dec
mov
pusha
fnstcw
in
dec
jne
bound
mov
jmp
add
sub
push
rcll
ljmp
test
test
data16
mov
arpl
das
daa
jmp
sti
aaa
incl
iret
das
je
stc
push
ss
in
cltd
scas
pushf
out
fstps
movsl
sbb
and
push
xchg
push
pop
popa
dec
hlt
or
mov
pop
rolb
jle
sub
fcomps
fidivl
mov
in
mov
sub
fwait
movsb
jge
jb
jns
pop
in
push
mov
pop
daa
jge
mov
add
jno
add
sbb
jbe
inc
jns
add
cmc
movsl
add
mov
pop
and
jnp
pop
and
adc
xor
mov
inc
pop
inc
out
sub
and
imul
fs
cmp
dec
inc
sbb
ljmp
push
dec
or
inc
cli
out
push
pop
cld
ds
sahf
sti
out
or
mov
addr16
sub
stos
mov
cmp
or
adc
and
cli
aaa
sub
arpl
inc
inc
shrb
lock
int3
lock
out
out
add
inc
add
cmp
push
lret
mov
loope
or
test
push
and
je
adc
push
mov
repnz
xor
rcr
lea
negl
sbb
mov
pop
sbb
mov
sarb
enter
xor
pushf
imul
arpl
jb
scas
sbb
xor
dec
mov
dec
iret
jl
test
aas
sub
aaa
outsl
lods
fbstp
xchg
dec
gs
xchg
ret
xchg
add
aas
pop
jnp
daa
enter
cld
aam
mov
and
push
test
jae
xchg
aas
popa
out
inc
nop
adc
bound
mov
mov
jg
addr16
push
int
pop
xlat
xor
and
notl
inc
lods
in
lahf
jecxz
mov
mov
addr16
sub
xchg
mov
and
and
les
scas
jnp
mov
add
sbb
insb
adcl
gs
inc
lcall
fnstsw
insl
mov
dec
xchg
pop
sub
xchg
pop
mov
push
and
mull
scas
ja
loopne
adc
jmp
pop
test
gs
ljmp
insl
test
mov
pop
rorb
xor
mov
jp
jnp
mov
or
jmp
inc
jne
xchg
lahf
pop
and
xor
fcoml
imul
call
mov
jnp
insl
or
test
mov
mov
mov
dec
ret
inc
sarl
cmp
lret
sbb
ja
xchg
into
loop
cwtl
icebp
and
out
jns
nop
and
adc
rorb
sti
inc
xchg
or
fadds
jle
fisubs
sti
jne
leave
into
mov
mov
mov
popa
mov
loop
inc
aad
sarb
fnstcw
xor
inc
clc
xor
mov
mov
aad
jno
pop
mov
shlb
xor
mov
lcall
add
cmp
mov
call
push
jge
fwait
sti
inc
mov
mov
mov
mov
push
repnz
fdivl
je
push
or
pop
push
arpl
in
out
push
test
in
or
inc
cmp
aam
adc
les
daa
lcall
jmp
push
rclb
repnz
dec
sub
mov
iret
mov
lock
mov
mov
or
cmpsb
popa
mov
popa
xor
jmp
je
mov
push
push
or
pop
in
loope
push
push
adc
and
mov
repz
push
push
ljmp
adc
pop
fstpl
sahf
mov
nop
jbe
mov
sub
mov
pop
lods
sub
jecxz
jge
or
jg
mov
jb
fwait
xchg
icebp
xchg
jbe
call
dec
xor
outsl
push
add
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
inc
xchg
andl
add
add
fdivl
pop
cmpl
icebp
inc
into
xchg
and
mov
adc
ljmp
decb
cld
add
stos
push
or
mov
xchg
fcomip
rcrb
ljmp
hlt
jecxz
iret
adc
cmpsl
cmp
popa
movb
movsb
test
lahf
jbe
push
xor
jno
and
xor
sbb
inc
test
out
outsl
std
add
shlb
in
loop
imul
push
rcl
sub
subl
ror
lahf
xchg
call
jnp
mov
pusha
les
inc
mov
mov
add
daa
out
xor
clc
cld
push
add
lcall
fnsave
inc
stos
les
adc
mov
fcompl
fmull
scas
sub
gs
adc
mov
pop
jecxz
test
mov
lret
cmpsl
pushf
and
fwait
xchg
cmp
or
pusha
xor
popf
mov
test
pop
push
aas
mov
or
leave
cmp
xchg
or
popf
js
cmp
mov
jno
xchg
xor
push
jge
fimull
xabort
xor
mov
lock
out
sbb
adc
shlb
int
imul
sub
push
mov
mov
test
pop
cli
movsb
xor
fldl
pop
in
pop
mov
pop
add
push
xchg
aam
and
subb
scas
outsl
cs
int3
xchg
push
xor
mov
stc
fnstcw
or
sbb
mov
jl
mov
jmp
fnstsw
and
aam
mov
cli
or
inc
outsl
push
pop
push
and
ds
enter
iret
fdivs
xor
mov
sbb
mov
jg
mov
and
jbe
adc
sbb
repnz
mov
xchg
mov
inc
das
jno
xchg
sbb
jns
out
mov
mov
mov
cmp
ret
mov
cmp
cmpsl
jge
std
dec
pop
xor
mov
mov
into
rorb
pop
pop
and
sbb
mov
mov
movsb
popf
mov
fiaddl
shrl
cmp
cltd
imul
xchg
loopne
sub
xor
ljmp
cli
ficoml
inc
es
and
test
mov
seta
mov
lcall
lods
push
loopne
xor
inc
lret
mov
mov
out
sti
dec
arpl
movsb
push
je
jle
mov
shlb
insb
out
push
mov
jno
lret
movsl
dec
jecxz
sbb
pop
outsl
pop
pop
add
xchg
in
rcll
aam
mov
dec
jo
jp
sub
bound
jmp
adc
adc
jbe
out
xchg
jnp
jo
fs
jnp
mov
mov
cmp
mov
xchg
or
inc
push
and
ds
dec
xchg
cs
xchg
sarb
jmp
sbb
jmp
call
cmpb
or
aad
mov
sbb
xchg
fst
mov
clc
pop
ret
jmp
mov
mov
jno
std
add
enter
repz
or
sbb
hlt
adc
es
xlat
mov
jmp
add
sarb
adc
popf
xchg
int3
gs
add
xor
test
js
jl
xor
xorb
hlt
jns
or
jge
pushf
aam
lar
jle
into
imul
mov
pop
lret
adc
push
arpl
add
pop
pop
pop
xor
mov
outsb
cmp
xchg
or
adc
outsb
jecxz
mov
sbb
dec
xchg
add
pusha
cmpb
xor
jge
mov
dec
inc
xor
sub
sub
sbb
xchg
cmp
mov
or
inc
cmp
mov
testb
xchg
jg
into
jb
pop
mov
outsb
push
imul
jnp,pn
cli
xchg
outsl
iret
push
jae
mov
cmp
movsl
push
xor
push
jmp
xchg
repnz
jge
std
and
hlt
shll
sbb
ja
mov
loop
outsb
clc
and
add
add
cmpsl
into
repz
iret
shlb
adc
leave
ss
inc
xchg
push
inc
inc
repnz
mov
stc
lods
sbb
fisttpl
filds
idivb
lahf
or
pop
add
repz
shlb
imul
add
add
ss
std
iret
cmp
cld
cmp
add
hlt
add
add
imul
and
jge
push
xchg
subb
popl
sub
stc
mov
lods
outsb
mov
push
jg
push
lods
mov
outsl
dec
cmpsb
insb
sbb
fsubl
mov
or
mov
xchg
ficoml
pop
mov
mov
imul
mov
aad
jl
lods
sbb
xor
lret
je
insl
lods
or
jno
outsb
aaa
stc
daa
mov
std
shrl
pop
and
out
in
fs
bnd
rcrb
inc
jnp
es
push
out
lcall
xor
mov
mov
insl
loopne
addr16
out
dec
lahf
outsl
negl
xlat
test
cmp
inc
inc
sub
test
in
jle
jle
clc
imul
hlt
cmp
repz
dec
xlat
or
xor
dec
mov
jmp
xor
jle
mov
lods
add
outsl
xor
mov
xchg
mov
jl
xchg
dec
inc
push
daa
nop
outsl
push
push
mov
loopne
pop
pop
xchg
div
pop
test
sub
pop
data16
loope
fisubrl
mov
ffreep
and
or
clc
fs
lock
mov
in
xor
pop
int3
outsl
scas
push
lret
in
pop
pushf
push
dec
sub
std
mov
mov
mov
lods
add
add
sbb
inc
stos
sbb
mov
push
fistps
mov
sub
std
mov
or
and
push
mov
pop
push
jp
orb
out
and
loop
add
sub
pop
test
enter
arpl
inc
shlb
adcl
xchg
inc
sbb
and
fistpll
mov
popf
es
ja
xchg
and
inc
and
add
push
jbe
scas
push
int
cmp
mov
inc
cs
dec
xlat
mov
xchg
in
cmc
mov
and
mov
sbb
mov
cmp
ret
in
cmp
push
jp
icebp
or
push
jge
push
adc
jge
pop
popa
sbb
mov
adc
std
cmp
adc
inc
js
mov
test
cmp
inc
sub
pop
leave
mov
out
mov
or
imul
dec
sbb
or
das
xchg
mulb
jmp
stos
shll
inc
push
fs
outsl
xchg
test
mov
xor
mov
mov
inc
sbb
xor
xchg
mov
rcr
sar
mov
pop
popf
rolb
pop
test
sub
add
add
loopne
fnstcw
push
mov
push
jne
test
jmp
addl
or
das
jle
fisttpll
jle
push
stos
insl
shl
movsl
mov
xchg
inc
loope
pop
and
ret
or
ds
cmp
push
nop
sub
addr16
push
push
out
popf
sub
cltd
rolb
clc
mov
lods
ret
adc
dec
je
xor
lahf
mov
fidivrs
rcrb
push
inc
sub
cmpsl
jb
imul
movsl
lock
push
mov
mov
outsl
adc
sbb
imul
mov
cltd
xchg
sub
lods
ret
push
gs
add
xor
cld
out
int3
loopne
xor
and
mov
les
dec
xchg
push
test
out
mov
xor
and
hlt
mov
mov
inc
insb
fcoms
mov
hlt
lds
fs
inc
xchg
xor
movsl
jnp
push
cwtl
pop
jno
in
nop
pop
fiaddl
iret
and
and
adc
test
cmp
lods
lea
insb
cmp
lods
xchg
add
dec
negb
push
imul
push
sub
sbb
in
adc
out
push
pop
sahf
cs
mov
xchg
imul
imul
or
jne
and
or
mov
add
int
jge
add
xchg
xor
movsl
and
data16
int
fcompl
mov
pop
outsb
xchg
mov
adc
xchg
fs
notb
mov
leave
out
jo
mov
stos
cltd
rol
jg
mov
xlat
cmp
inc
orl
mov
fists
push
ljmp
push
add
add
cld
es
mov
jmp
fdivrp
mov
xor
add
add
add
pusha
mov
ds
jg
lcall
jbe
mov
cmc
sub
mov
dec
push
sbb
pop
pop
xor
mov
inc
cld
mov
outsl
mov
or
xchg
rclb
push
pushf
dec
and
or
mov
sub
das
cli
cmp
les
or
incb
dec
sub
push
fxtract
mov
jo
push
pop
mov
push
outsb
adc
arpl
testl
and
lods
mov
test
stc
add
jb
pop
push
sbb
lds
insl
cmp
sarb
mov
sahf
aam
sbb
mov
into
aaa
cmpsl
out
jecxz,pn
xor
cmp
lret
clc
xor
inc
mov
mov
test
imul
aas
out
ret
or
xor
pushf
push
pop
add
or
or
or
notl
inc
shrb
xchg
lahf
inc
cmpsb
in
sbb
int3
inc
idivb
jno
jae
sub
popa
pop
lret
xchg
adc
sbb
js
cmp
adc
leave
les
imul
mov
jmp
testl
movsl
fwait
loopne
adc
paddusw
fxch
rcr
std
pop
shlb
sub
push
add
pop
lods
xchg
pop
mov
push
xchg
int3
xchg
add
fcoms
sub
xor
jge
xchg
imul
outsl
data16
push
and
pop
fdivp
mov
mov
push
mov
adc
into
mov
sbb
stc
and
push
cmp
fldcw
and
shll
mov
xchg
add
insb
adc
pop
test
daa
adc
mov
mov
sar
mov
jne
add
jle
jne
push
data16
test
sahf
data16
pop
mul
arpl
imul
iret
popf
jb
call
cmpsb
mov
sti
mov
je
adc
add
lea
dec
and
mov
daa
mov
pop
push
fldlg2
out
dec
mov
mov
decb
repz
roll
mov
pop
mov
mov
lahf
int3
fcomps
add
fbld
out
inc
enter
ljmp
mov
xchg
into
test
inc
cld
sbb
shrb
aad
js
push
or
cmpsl
inc
push
int3
lret
add
in
pop
data16
enter
lods
data16
jb
jae
les
stos
cmpsb
ljmp
pop
fisttps
out
jne
adc
out
push
xchg
sub
ret
shll
xor
xor
mov
pop
push
adc
jg
jne
pop
out
inc
cli
sub
pop
push
mov
mov
sbb
mov
lock
xchg
add
cmp
addr16
xor
sub
dec
addr16
addr16
sub
xchg
jno
cmp
fdivrl
xor
mov
scas
sbb
stos
cmc
mov
xor
inc
insb
int
xchg
pop
pushl
inc
dec
imul
cmpsl
mov
inc
inc
inc
fiaddl
sub
adc
adc
xchg
addb
cmc
stos
out
cmp
iret
rclb
jne
mov
test
inc
mov
loop
fadd
ficoml
frstor
pop
pop
iret
cwtl
unpckhps
and
jp,pt
imul
pop
mov
rcl
inc
mov
cmovb
jecxz
ret
push
in
sub
ljmp
in
movsb
or
mov
and
xchg
adc
in
add
mov
add
lcall
xor
out
or
jno
push
cs
sahf
jle
pushw
lock
inc
out
mov
das
lods
pop
xchg
cmp
pop
mov
or
cmp
ret
push
lods
inc
push
jns
sbb
aas
sbb
outsb
lods
dec
mov
or
mov
push
inc
pop
add
xchg
and
insl
inc
lds
dec
fdivr
repnz
sbb
cmpl
adc
jno
adc
cmpsb
pop
ds
lods
xor
mov
jae
sub
adc
mov
push
pop
xchg
sbb
adcb
push
mov
mov
pop
mov
cmpsb
arpl
shlb
jne
jp
fdivrp
mov
je
add
add
aaa
sti
addr16
out
fidivs
xchg
sahf
inc
sub
add
add
outsl
out
xchg
data16
jo
xor
push
jns
insl
repz
repnz
add
arpl
pop
mov
push
fimull
xor
jl
dec
cltd
mov
xchg
rolb
lock
xor
mov
or
jno
rclb
leave
jbe
jmp
dec
pop
or
popf
mov
jb
lcall
inc
cmp
xor
add
call
or
lcall
mov
aaa
mov
int
es
rol
mov
cwtl
loop
add
outsb
inc
leave
lods
dec
pop
pop
jge
mov
shll
fs
int
ljmp
lcall
nop
xchg
push
movsb
in
ret
imul
cltd
shrl
mov
insb
push
sahf
fdivrs
pop
cmp
adc
div
hlt
jge
lods
stos
mov
in
or
jge
xor
xchg
or
clc
mov
sbb
imul
and
mov
pop
subb
arpl
inc
test
fdivl
sub
lods
fs
cld
cmp
pop
enter
mov
dec
cmp
xchg
fwait
adc
aad
clc
ljmp
add
fcoml
mov
gs
adc
sub
adc
inc
mov
cwtl
jae
sahf
rcrb
push
scas
xadd
or
adc
xor
sub
pop
mov
jae
fcmovbe
push
bound
daa
outsl
ucomiss
mov
mov
mov
add
cmp
cmc
jge
pop
cs
mov
lods
pushf
mov
cmc
mov
lods
daa
push
inc
mov
xchg
sub
out
lahf
mov
pop
bound
pop
addr16
dec
int
xor
xchg
out
in
fbld
iret
mul
inc
mov
inc
pop
dec
inc
sub
sbbl
pop
je
outsb
dec
adc
enter
sbb
inc
push
popa
cli
xchg
outsb
cmp
inc
push
xlat
daa
cmp
inc
push
outsl
mov
and
xlat
add
mov
push
test
sahf
nop
hlt
mov
lahf
xchg
sahf
mov
ret
jge
cmp
add
pushf
inc
jle
sar
bound
xchg
pop
or
mov
roll
add
or
inc
mov
fidivl
adc
dec
xchg
dec
fiadds
mov
pop
aas
push
leave
imul
popf
rcrl
inc
push
dec
dec
loopne
cld
aaa
adcl
mov
adc
jns
clc
jg
dec
push
xor
sti
mov
insl
sub
loopne
out
mov
stos
push
or
and
jnp
fs
in
sbb
stc
push
or
cmp
xor
sbb
std
sbb
cmp
adc
repz
add
scas
ret
dec
imul
xchg
outsb
xor
jg
add
mov
mov
rcrb
inc
xor
xchg
fbstp
pop
jl
sbb
dec
jmp
inc
jnp
push
in
xchg
push
ja
incl
jnp
pop
xchg
lds
or
mov
imul
lds
dec
jle
push
push
int
jb
dec
jns
mov
pushf
sbb
call
in
in
aam
cmp
dec
or
ret
popf
mov
dec
dec
cwtl
lret
dec
outsl
xlat
fdivrl
sub
popa
ljmp
out
add
popa
jle
xorl
fldenv
mov
add
push
inc
push
xchg
mov
pop
shlb
outsb
fldenv
movsl
mov
push
ret
addr16
mov
sub
add
cwtl
addb
and
jae
jecxz
daa
out
mov
or
movl
ds
xlat
rorl
out
ljmp
or
and
or
or
xchg
jns
jg
xchg
stos
mov
outsl
pop
outsl
xchg
pop
mov
pop
xchg
fildll
test
insl
sub
ss
cltd
cmp
ljmp
mov
cmp
insl
scas
push
shrl
dec
cmp
push
or
mov
cmp
sbb
jbe
outsl
fistps
jns
xchg
pop
ss
adc
dec
push
aaa
or
sbb
shlb
sbb
xchg
loop
fidivs
mov
pop
push
ret
jns
loop
dec
push
sti
dec
in
ret
inc
aad
lds
leave
stos
clc
outsb
cmpsb
sbb
popa
jns
imul
out
lds
jg
les
movsb
mov
pop
bound
out
mov
add
add
out
sbb
repz
and
cld
mov
add
hlt
add
add
or
das
jle
dec
jbe
jns
popa
mov
inc
pop
das
aad
add
scas
inc
or
pop
out
cmp
mov
les
pop
mov
pushf
daa
mov
stc
fistl
mov
and
insb
leave
in
jg
movsl
or
insb
cmp
and
xchg
sbb
mov
xchg
imul
mov
xchg
xchg
mov
lea
in
dec
or
lods
mov
sub
cmp
leave
and
or
cmpsl
mov
sbb
adc
xor
xchg
xor
lock
lret
js
enter
ss
js
loop
dec
adc
xchg
movsb
mov
insb
pop
decl
imul
and
pop
aad
dec
cli
jge
adc
pop
push
outsb
lds
cmc
pushf
cmp
lds
jne
cmp
movsl
aas
call
test
loope
pop
jne
orl
push
mov
jecxz
pop
std
test
pop
mov
sbb
out
out
test
and
mov
inc
sub
add
and
les
es
and
stos
mov
xchg
lahf
push
arpl
mov
or
pushf
xchg
mov
mov
subb
in
and
mov
or
fwait
dec
addb
mov
bnd
sbb
xchg
jp
xor
int
sbb
fistpll
int3
xchg
push
movsl
stos
jno
jno
outsb
mov
mov
pop
cli
int
cmp
xchg
nop
scas
sbb
repz
xchg
lahf
add
aas
cmc
jne
xchg
movsb
or
ret
cmp
adcb
cvtdq2ps
test
inc
jnp
jb
gs
mov
xor
fcompl
adc
cmp
mov
or
daa
loope
xchg
clc
es
pushf
cmp
and
xor
test
mov
inc
ljmpw
outsb
xchg
mov
mov
iret
mov
adc
lahf
inc
insl
sbb
sbb
inc
loop
push
sarl
addb
xchg
xor
outsb
imul
sbb
jl
add
clc
sub
jne
sbb
and
and
ret
push
push
jge
add
lret
sub
adc
add
jbe
cmpsl
and
sar
mov
sbb
ret
mov
inc
lock
cmp
fiaddl
sbb
js
jo
cmp
test
daa
pop
sbb
nop
cli
add
pop
jne
daa
add
outsb
jnp
sbb
mov
adc
add
std
sub
cmp
sub
dec
mulb
mov
pop
loop
push
cli
push
idivb
dec
xor
inc
in
mov
fst
call
sbb
inc
loop
int
xor
push
dec
movl
push
inc
cli
cwtl
jmp
jns
and
sbb
jnp
adc
dec
popl
mov
sbb
xchg
leave
lea
adc
cld
add
popa
daa
daa
xchg
sub
lods
nop
pop
add
pop
mov
aad
dec
pop
xchg
ljmp
mov
adc
jns
mov
icebp
add
push
add
lahf
lds
fnstcw
shrb
jnp
divl
pop
xchg
xchg
and
mov
xchg
xchg
dec
add
js
lock
out
sbbl
mov
xlat
test
adc
aad
push
popf
jp
stos
xor
aas
mov
dec
aad
push
jns
pop
sub
addr16
add
les
jp
hlt
xorl
fstpl
nop
movsb
mov
sub
jg
out
test
mov
add
inc
mov
stos
jmp
add
lcall
cld
fs
sbb
xor
xchg
inc
mov
push
lcall
rorl
loope
dec
pop
lahf
cli
cmp
jae
lock
repnz
mov
je
xchg
dec
les
mov
cmp
int3
das
loopne
lds
call
and
scas
scas
fldcw
movsl
loopne
popf
sbb
loop
cmc
shlb
inc
std
add
sbb
pop
stos
lock
mov
mov
cmpsl
inc
sbb
fdivs
xor
mov
mov
adc
add
in
sbb
call
mov
jl
cld
mov
add
add
mov
out
out
mov
jns
jmp
jge
add
hlt
add
add
pusha
dec
push
ffreep
push
jp
in
cmpsl
xor
pop
stos
mov
push
enter
test
push
testb
adc
mov
imul
jp
jmp
jle
lds
pop
roll
cmp
or
test
and
inc
jge
mov
ljmp
call
add
leave
ret
lds
iret
andb
push
stc
pop
jp
in
gs
out
inc
out
add
and
jno
stos
xchg
add
or
dec
adc
or
mov
sub
lea
add
mov
in
jge
cmp
mov
mov
nop
mov
mov
dec
repz
xor
inc
dec
hlt
mov
adc
fsubrs
cmp
jecxz
or
push
xchg
dec
inc
mov
into
cmp
scas
cwtl
addr16
mov
ja
and
fdiv
and
mov
cld
mov
fstps
dec
mov
jbe
push
push
push
arpl
adc
scas
rcll
xlat
call
sub
ljmp
out
xor
nop
pop
xor
das
data16
sahf
lcall
adc
popf
pop
jae
dec
fstpl
ja
xor
push
loope
insl
fcmovne
pop
xor
cltd
mov
test
jae
rep
or
imul
jb
pop
mov
test
scas
lret
out
popa
cmpsl
jb
cmp
popa
and
add
iret
mov
leave
inc
xchg
jl
leave
mov
jae
sub
push
popa
es
mov
mov
loope
fsub
das
sub
fcoms
xor
rep
scas
and
test
iret
push
movsb
je
je
pop
ret
inc
push
rcr
adc
movsb
popa
mov
inc
gs
in
movsl
test
mov
and
bound
add
xchg
test
push
fsubl
push
adc
sbb
inc
fdivrl
bound
push
jno
xchg
cmpsl
rcrl
out
xor
jae
in
in
mov
add
lock
cmpsl
ret
aam
jno
xchg
xchg
int3
cli
inc
cltd
sbb
jns
gs
lret
and
insb
aaa
je
sar
cwtl
or
fsubrs
push
xor
ret
dec
icebp
scas
push
sahf
mov
sub
lret
add
repz
std
and
pop
sub
push
loopne
aas
js
jmp
sub
sub
pop
sub
mov
mov
mov
ja
jge
js
pop
fwait
int3
jno
lods
adc
mov
and
insb
cmp
jecxz
popf
sti
or
xchg
push
and
sbb
mov
fdivs
or
in
cmp
fidivl
inc
loop
and
and
test
inc
or
sbb
in
inc
in
lret
ljmp
fsub
mov
or
adc
xchg
fidivl
adc
fisubrl
jbe
sub
adc
cmc
sti
leave
repnz
test
add
sti
and
add
and
pop
xor
cmp
add
mov
bound
scas
or
xchg
cmc
aas
dec
cmp
inc
xchg
aas
aam
xchg
push
aam
lret
dec
push
push
mov
xlat
inc
mov
dec
shlb
cwtl
lods
xchg
jbe
cmp
leave
push
jmp
rcrb
out
mov
sahf
outsl
ret
cltd
jo
fucomi
xchg
add
adc
jo
push
jmp
or
fcompl
fidivrl
aaa
test
imulb
adc
sbb
inc
daa
fisubrs
sar
out
jns
add
lahf
xchg
add
rcrb
jo
dec
dec
sti
pop
and
cmp
mov
adc
jmp
sub
sbb
and
int
dec
dec
adc
shl
xor
ret
and
mov
xchg
inc
imul
aam
xor
push
mov
lahf
jge
mov
dec
jnp
mov
adc
gs
push
imul
mov
or
in
xchg
mov
inc
rclb
sub
or
mov
lret
cmpsb
pusha
hlt
dec
xchg
xor
faddl
mov
lcall
outsl
mov
adc
jge
adc
inc
filds
mov
sub
in
movsb
mov
jnp
sbb
cmp
pop
js
mov
jl
dec
mov
movsb
pop
xchg
xchg
int
adc
repnz
imul
pop
insb
cli
jns
js
enter
add
adc
dec
negl
mov
push
es
loop
inc
add
hlt
add
add
xor
mov
iret
shr
xchg
add
int
cli
mov
inc
push
fnsave
pop
mov
leave
outsb
push
adc
data16
cmp
sub
jo
and
and
jg
lret
fstpt
repz
clc
iret
ret
repz
cmp
iret
inc
sub
aaa
sbb
cmp
lret
dec
test
testl
push
pop
inc
xchg
xchg
or
scas
mov
xchg
mov
and
int
push
pop
daa
cmp
push
cmpsb
mov
add
clc
cmp
pop
push
and
mov
jmp
int
popa
scas
xorb
lock
mov
sbb
mov
jl
xor
xor
mov
pop
xor
xchg
movsb
xlat
pop
xchg
dec
mov
sbb
push
rep
push
shll
mov
in
adc
or
je
xchg
push
les
add
xor
sub
mov
cmpsl
mov
pusha
pop
fisubs
lcall
aam
sub
fisttpll
adc
and
push
cmp
aas
fmuls
xor
in
xor
idivl
rcrb
fwait
lret
test
push
arpl
cs
ret
js
jp
aaa
pop
mulps
arpl
pop
pushf
pushf
jecxz
push
aad
xlat
add
inc
dec
jb
fs
mov
cmp
mov
fincstp
lds
push
mov
mov
nop
outsb
push
mov
mov
mov
adc
pmulhw
mov
push
fsubl
sbb
push
into
mov
pop
push
jle
int3
jmp
mov
adc
out
shll
out
lods
xchg
jle
fstpt
xor
test
les
scas
out
mov
cmpsl
dec
gs
daa
add
fcomps
jo
adc
xor
mov
mov
orl
shl
cmpsb
insl
push
std
xchg
scas
in
xchg
sbbb
dec
daa
int3
nop
into
test
xchg
dec
sub
lods
and
mov
mov
cmpl
shlb
add
mov
in
mov
fnstenv
adc
xchg
pop
loope
test
stos
cltd
jae
mov
mov
or
jle
mov
scas
jmp
fs
fs
mov
stc
enter
out
stc
push
mov
jae
lcall
dec
test
mov
mov
into
lcall
repz
aam
cld
jns
pushf
add
insb
or
jle
xchg
jecxz
fwait
lret
in
call
insb
int
fistps
mov
xlat
pop
dec
add
or
sbb
pop
jl
and
xchg
imul
mov
cmpsl
or
into
test
fwait
outsl
mov
add
inc
test
movsb
sub
or
jae
or
ja
mov
xchg
add
insb
mov
roll
sbb
pusha
mov
flds
daa
out
scas
xchg
xchg
test
scas
and
xchg
aaa
jmp
or
ds
xor
fadds
sub
cltd
jae
xchg
sbbl
repnz
adc
xor
popf
mov
inc
or
xor
or
xchg
cmp
push
push
and
movsb
pop
and
nop
cmp
jle
arpl
mov
mov
jne
xlat
xor
inc
push
cs
out
adc
jbe
aad
ficomps
inc
mov
add
sarb
inc
cmc
ljmp
sub
notb
mov
decb
test
fcomps
lahf
das
mov
sub
and
push
dec
mov
fsubl
psrlw
sbb
enter
jl
inc
cmpsl
sbb
repnz
std
andl
jmp
je
cmp
and
mov
movsb
jnp
popf
mov
pop
cmp
ja
cmp
pop
mov
dec
sti
mov
daa
xchg
pop
cmc
fwait
mov
lea
arpl
push
or
les
sbb
testb
mov
imul
test
rolb
cmp
cmp
xchg
out
les
idivl
mov
sub
mov
repz
ljmp
movsb
sub
stos
dec
jecxz
es
mov
mov
jb
sub
adc
or
popl
add
add
ds
fdivp
cld
ds
daa
cmp
inc
or
add
add
push
jecxz
lret
or
or
mov
inc
add
int3
pop
cmp
out
push
and
aaa
inc
popl
jge
or
mov
popa
add
loope
xchg
fsubp
imul
mov
icebp
cmp
add
mov
sub
lods
leave
popa
mov
jp
pop
inc
adcb
mov
ss
aas
sbb
outsb
jne
xchg
jle
vpsubq
mov
cmp
inc
or
pmaddwd
mov
lods
sbb
lcall
mov
xor
xchg
sbb
add
mov
or
fnsave
mov
xor
dec
jge
mov
push
fsubrl
push
mov
cmp
sarb
std
sbb
imul
outsb
inc
dec
add
das
movsb
call
inc
stos
filds
pushf
add
les
inc
jmp
int3
out
mov
cli
cmp
mov
bound
mov
sbb
addr16
cmp
mov
sbb
xor
mov
mov
aam
add
sarl
repz
out
cmp
out
inc
xchg
loopne
shlb
pop
sbb
fistps
mov
fdivrl
and
inc
sub
ljmp
mov
es
xchg
ds
out
stc
pop
cmp
bound
pushf
lret
popa
test
push
dec
data16
add
xchg
lret
pop
pop
xor
xchg
in
aas
pop
sbb
repnz
push
inc
pop
sbb
xchg
mov
js
pop
adc
adc
adc
mov
lds
mov
pop
and
inc
popf
rcl
inc
shll
cwtl
leave
cmpsl
xchg
sbb
sbb
imul
loop
sbb
test
add
mov
bound
jg
pop
js
daa
inc
cld
shl
mul
mov
jae
mov
lcall
lds
fimull
pushf
insb
add
ja
fs
and
cli
mov
or
jae
fimull
and
inc
mov
cmp
mov
push
mov
testl
mov
pop
mov
es
dec
pop
mov
fstl
dec
fistps
lret
iret
rcr
mov
adc
rcl
push
sahf
ds
mov
lods
adc
int
xor
pop
shrb
loopne
repnz
fwait
mov
xor
je
cli
xor
movsl
out
mov
in
adc
into
inc
xchg
cmp
aas
adc
inc
sbb
mov
mov
stos
dec
test
lcall
xlat
sbb
aam
aam
or
cmpsb
aad
repz
jge
inc
xor
pushf
ja
clc
repnz
daa
pop
pop
cltd
cs
cwtl
stc
push
push
xchg
mov
inc
and
sub
add
cmp
mov
orl
test
std
rolb
pop
imull
imul
mov
shrl
cmp
adc
shlb
jmp
xor
popa
mov
sbb
and
push
das
inc
cmp
stos
or
ret
xor
add
pop
and
mov
int
fisubrs
push
data16
call
cwtl
adc
cmc
push
xlat
in
jle
jae
lea
adc
mov
pusha
fs
or
test
das
dec
popa
fildll
loop
fisubrs
subl
mov
cld
rol
lret
aaa
dec
out
sub
lahf
xor
push
push
and
jge
mov
xchg
or
test
enter
mov
cwtl
mov
and
pop
mov
jl
sbb
data16
lcall
xchg
rcr
lock
adc
fwait
or
insb
or
pusha
and
daa
int3
fs
push
lds
pop
bound
test
push
sub
and
xor
xlat
gs
or
and
or
adc
jge
outsb
push
inc
jae
loop
add
test
mov
or
insl
iret
aad
adc
adc
mov
repz
nop
sub
dec
ret
xchg
pop
push
fists
sbb
dec
sub
sub
daa
aam
pop
sub
jnp
xor
jg
sbbl
pop
dec
add
hlt
add
add
cmp
lods
rcll
dec
icebp
push
mov
cmp
loope
dec
outsb
stc
lret
mov
jge
scas
cmp
fnstcw
loopne
lds
loop
mov
adc
sti
test
inc
inc
fsts
mov
adc
mov
jmp
test
inc
sbb
insb
mov
out
ret
lret
add
std
xor
aas
sarl
cs
ja
orl
daa
cs
xchg
test
mov
inc
xchg
add
mov
push
sbb
jmp
push
loopne
mov
jle
jnp
loop
incl
xchg
cmp
add
pop
mov
rolb
fdivrs
pop
pop
inc
pop
pop
push
mov
shl
and
jge
inc
fldenv
inc
dec
imul
je
inc
kmovb
jns
inc
lret
movsl
call
ss
fsubrl
xor
pop
insl
out
cmp
cs
pop
sarl
push
fsubl
jp
mov
sub
in
and
in
scas
scas
add
shlb
xor
pop
and
push
adc
dec
leavew
add
dec
mov
add
and
sbb
dec
imul
mov
inc
push
cmp
imul
sbb
cli
iret
loop
lahf
cld
pusha
inc
daa
daa
cmp
jb
cmc
mov
subl
jg
pop
or
sub
inc
loope
inc
and
shl
lahf
dec
cmpsb
dec
mov
sarl
xor
sbb
xchg
mov
jb
jg
mov
push
fsubs
imul
aaa
orb
jle
mov
cmp
aaa
lcall
out
mov
mov
aaa
push
aam
add
icebp
cmp
shld
cmp
enter
fstps
jae
adc
mov
int3
iret
clc
repz
testl
push
loope
push
mov
imul
push
or
adc
jp
addr16
pusha
adc
cwtl
xor
adc
pop
xchg
mov
jae
push
daa
sarl
es
sbb
dec
xlat
les
loopne
pop
inc
cmp
int3
inc
stos
loop
sbb
or
ss
sbb
stos
add
adc
iret
test
mov
in
cmp
clc
insb
push
jo
add
dec
inc
pop
leave
add
hlt
or
popf
xchg
push
call
std
aas
pushf
popaw
sbb
mov
sbb
fnsave
pop
sbb
or
sbb
dec
jo
jno
arpl
inc
jbe
mov
sbb
xor
sbb
dec
xchg
jl
cmpsl
aam
pop
mov
sbb
dec
adc
je
inc
jmp
mov
cmpsb
mov
cltd
aaa
xchg
jp
pop
push
sbb
xor
inc
cmp
cmpsl
pushf
jle
xor
daa
das
imul
jne
xor
arpl
pop
push
or
mov
mov
arpl
push
sbb
adc
cmpsb
aad
and
dec
rcll
stc
fistl
fmull
sub
lret
inc
cmp
mov
sti
ja
and
clc
jbe
hlt
xor
jae
popf
das
xchg
rclb
in
xor
or
pop
clc
mov
sub
sahf
inc
test
jl
dec
dec
xorb
mov
add
les
in
enter
icebp
dec
aaa
fistpl
push
mov
sub
subl
arpl
pop
call
int3
test
jge
sahf
lahf
cs
cmp
into
out
stos
stc
jecxz
movl
std
into
pop
faddl
imul
jecxz
and
mov
insl
call
xchg
sub
mov
mov
loope
pop
and
mov
test
imul
add
in
shll
in
pusha
lret
xchg
sbb
int
inc
aam
mov
fstl
mov
out
icebp
int
mov
xchg
pop
out
push
mov
mov
movsl
ret
jne
std
pop
ret
jnp
add
xorb
sarb
push
add
out
shll
fdivp
mov
lret
ja
or
sub
cmp
sub
and
or
pushf
xchg
mov
ret
dec
aad
faddl
pmuludq
xchg
shlb
add
add
loop
add
mov
inc
into
xchg
dec
push
add
hlt
add
add
pop
mov
xor
mov
clc
jo
sub
in
test
in
inc
test
mov
lock
cmp
dec
rolb
ret
cmc
in
fstl
leave
icebp
call
xor
or
inc
aad
push
stos
inc
pusha
leave
call
icebp
push
cmp
nop
push
and
mov
gs
jg
ljmp
das
fwait
sbb
dec
push
imul
aad
push
xchg
jnp
push
jmp
dec
ret
das
or
pop
aaa
movsl
cpuid
cmp
sbbb
sbbl
loop
sub
mov
arpl
mov
scas
pop
faddl
sti
mov
mov
sub
push
mov
insb
ret
out
rcrl
dec
push
pop
rcll
js
xchg
jo
sub
sbb
jge
pop
push
shll
adc
iret
jmp
lahf
cmp
outsl
sbb
dec
lock
inc
test
adc
enter
lahf
xchg
rorl
pushf
scas
sbb
mov
repnz
outsb
xchg
js
push
inc
adc
inc
jbe
cmc
outsl
fcoml
dec
mov
inc
es
leave
mov
sbb
loop
cs
andl
enter
xchg
adc
pop
and
add
cmpb
pop
mov
sub
mov
pop
repz
xlat
outsb
movsb
jp
mov
pushf
jecxz
dec
or
add
inc
cmp
pop
cmp
sub
mov
push
add
lahf
inc
aam
lods
test
out
mov
pushf
push
inc
add
adc
pop
pop
hlt
mov
ret
xorb
insb
int
into
mov
hlt
xlat
push
cld
rorl
inc
pushf
mov
mov
xchg
movsl
imul
push
push
push
hlt
lahf
mov
or
dec
push
push
xor
xchg
cmpsb
mov
or
pop
std
lcall
loopne
nop
into
xlat
repz
mov
pop
pop
mov
jae
loopne
mov
mov
mov
in
aad
push
pop
sahf
out
mov
int3
xchg
rcrb
std
or
cli
jb
sbbb
xchg
xchg
mov
mov
jns
push
pusha
loop
jne
pop
cmp
inc
pop
lods
push
xchg
mov
mov
insb
sub
cld
popf
aaa
sbb
ljmp
add
mov
inc
xchg
jns
jne
cmp
pop
shl
jo
jns
mov
xor
mov
out
jge
movsb
sbb
outsb
mov
repz
add
jmp
cs
jle
jae
pop
adcb
pop
ficomps
fldl
push
stc
push
cmp
pop
addr16
enter
sbb
mov
lcall
xchg
repz
repnz
adc
lea
out
lret
xchg
mov
jecxz
dec
ret
push
sbb
jmp
lcall
insl
pushf
pushl
mov
push
mov
inc
jb
and
inc
jo
add
lods
pop
pusha
lods
mov
inc
pop
lea
or
les
ja
addr16
jno
inc
stos
mov
or
inc
mov
xor
dec
aam
scas
leave
hlt
mov
in
popf
into
pop
pushf
sub
ja
bound
sbbb
pop
mov
das
pop
fstp
xor
jo
outsl
dec
andb
push
cwtl
pop
das
aas
sbbl
sarl
iret
jno
jnp
mov
mov
jecxz
mov
push
jne
jp
cmp
shlb
imull
popf
lret
cwtl
ret
nop
adc
pusha
adc
xor
into
aad
pop
cmp
push
sub
in
or
movsl
xorps
je
dec
in
int3
cmp
sub
adc
sbbb
imul
jne
inc
xor
mov
test
or
js
sub
xor
popa
movsl
sub
jg
xchg
mov
mov
iret
push
imul
outsb
hlt
std
xchg
jmp
sarb
pushf
add
decl
shll
ror
cwtl
dec
jne
cmp
and
rcrb
rorl
and
cmp
sub
or
adc
push
and
mov
pop
inc
pushf
cmp
lret
sarl
lea
sbb
scas
or
push
xchg
vrcpps
add
loope
loope
fistpll
adcl
xor
add
hlt
add
add
pusha
adcl
fldenv
hlt
dec
mov
js
fnstsw
scas
add
sub
and
xlat
mov
loope
movsl
insl
and
cmp
and
aaa
jno
cmc
jle
iret
shll
add
stc
sar
xor
pop
xchg
jbe
dec
inc
sbb
or
jl
xlat
call
out
insl
and
mov
jns
or
es
jmp
xchg
sahf
cmpsl
into
cmp
outsl
stos
ds
dec
cmpl
add
dec
xlat
int
loopne
xor
mov
adc
or
lods
in
jnp
mulps
out
sub
dec
sti
or
cmp
jl
in
pusha
add
adc
js
adc
push
aam
imul
mov
jecxz
mov
xor
mov
add
ret
cmp
hlt
mov
dec
cmp
shll
push
and
fs
mov
xchg
push
idivb
adc
jge
mov
std
shl
jae
out
pop
fisubs
lahf
lock
outsb
xchg
mov
or
mov
jmp
test
add
pop
xor
decb
es
add
fimuls
jg
sbb
sbb
inc
out
popl
fsubrs
mov
xor
divb
jmp
repnz
mov
dec
cmp
lods
adc
sbbl
pop
pop
mov
popa
add
pop
jne
ret
xchg
stos
ljmp
inc
sub
adc
aam
dec
sub
lret
jb
dec
std
xchg
mov
flds
inc
sbb
je
inc
lahf
fsts
rcrb
repz
fildll
ljmp
cld
cmp
cmpsl
dec
add
xchg
push
arpl
ljmp
xchg
push
mov
in
xor
sahf
and
ret
mov
xor
js
mov
mov
xchg
pop
add
mov
jae
inc
out
jle
sub
shlb
inc
add
push
hlt
lods
inc
pop
into
push
mov
lret
xchg
xchg
jns
sbb
add
icebp
clc
sbb
pop
das
leave
dec
and
lods
movsl
jo
xor
nop
lods
rol
jg
mov
push
push
and
lcall
xlat
insl
push
lea
jge
jnp
outsl
mov
push
adc
in
arpl
mov
aaa
sahf
and
cmp
cmpsl
sbb
xchg
pop
fimull
in
cmc
lds
push
cltd
mov
imul
ds
nop
mov
pop
inc
inc
sub
dec
or
ret
lcall
repnz
jg
xchg
dec
out
pushf
xchg
inc
ljmp
loope
xchg
inc
mov
or
or
and
mov
and
test
in
inc
test
in
in
sti
xor
das
ja
pop
fwait
and
mov
jmp
add
sbb
push
inc
adc
push
das
fcoms
sarb
inc
pop
mov
xor
hlt
mov
dec
cmp
stos
pop
xlat
js
and
rcrb
sahf
sbb
loope
lods
xchg
sub
ror
adc
fidivrs
aad
std
flds
mov
sbb
sbb
imull
add
xchg
add
push
ret
out
stos
xchg
arpl
push
pushf
stos
pop
popf
outsl
int3
adc
mov
inc
sbb
fadds
pop
pushl
sub
lds
movsl
or
pop
jge
push
mov
or
ja
xchg
cmc
js
mov
dec
xor
scas
test
dec
push
bound
lods
into
mov
aas
cmp
add
xorb
lods
jae
pop
cmp
push
xchg
in
push
lock
in
mov
call
jl
ret
sub
or
jno
push
xchg
lcall
pop
push
sub
mov
xor
jae
mov
in
out
icebp
mull
push
xchg
mov
int3
adc
inc
dec
mov
sbb
movsl
xchg
clc
mov
push
outsb
mov
jl
addr16
jae
pusha
mov
or
cltd
or
mov
nop
jecxz
sbb
popa
xlat
mov
rorl
and
adc
inc
push
stos
dec
lret
push
lock
scas
cwtl
iret
xorl
lea
cld
xchg
mov
mov
loope
pop
sbb
dec
cwtl
mov
mov
push
cmp
mov
lea
xor
stos
inc
mov
push
lock
pop
ljmp
loop
jge
lods
loope
cs
or
jne
add
add
test
xchg
and
cmp
arpl
mov
xor
add
add
or
or
adc
mov
fidivs
jmp
dec
push
cmp
leave
push
mov
push
or
xor
mov
fsubrs
imul
data16
jmp
mov
aas
imul
out
mov
test
sti
or
inc
jns
mov
pop
mov
jp
imul
shll
outsb
and
dec
enter
cltd
xor
push
pop
loop
loope
addr16
cmp
inc
stc
xor
daa
outsb
loop
mov
sbb
xor
cmpsl
push
jl
enter
sbb
sub
jge
cmp
mov
jp
test
je
bound
jmp
or
movsl
sahf
sti
and
or
rcrl
stos
fcmovu
and
jecxz
pop
jg
out
cld
xor
and
test
jns
stos
fs
lea
popaw
xor
pushf
mov
movsb
ret
pminub
shlb
sbb
fimuls
jb
aad
das
popf
adc
mov
add
adc
imulb
push
popf
add
cmp
sub
or
mov
rcll
sbb
push
xchg
pop
icebp
sbb
cmp
jno
inc
lods
adc
gs
cli
cmp
mov
pop
and
dec
jns
pop
int
cmpsl
or
pop
rcrb
dec
add
cmp
imul
dec
int3
loop
jns
jmp
dec
popa
jecxz
sbb
scas
je
cmp
push
lock
lret
outsb
arpl
sbb
sub
adc
push
lods
cmp
sbb
mov
lds
cmp
pop
pop
or
cmp
mov
aaa
ds
cmp
dec
adc
push
jbe
movsb
add
mov
jns
mov
push
mov
push
addb
cmp
cmp
pop
xor
out
subl
mov
scas
scas
call
xchg
rcr
int
jne
fs
adc
ret
sahf
pop
cmpsl
movsl
xor
mov
mov
inc
mov
jecxz
aaa
dec
mov
icebp
adc
mov
loope
jp
outsl
insl
pop
mov
insb
xchg
test
in
aad
int
dec
pop
arpl
jnp
repnz
and
lcall
lock
lcall
push
adc
data16
and
aad
lcall
xchg
xchg
mov
sti
icebp
lea
lods
add
sub
call
push
sub
sub
sbbl
jae
psllw
cmp
mov
xor
imul
loope
lods
push
ljmp
mov
test
es
mov
sub
dec
test
and
xor
enter
push
shlb
xor
sub
mov
and
dec
or
movsl
out
shlb
out
jmp
aaa
shll
fstps
lds
push
pop
lock
jge
cmc
push
insl
ficompl
fcompp
outsl
int
es
mov
or
insb
pop
cmc
dec
and
push
xor
push
fdivrl
xor
shlb
aas
adc
xchg
js
icebp
fcoms
ss
inc
sbb
test
inc
insb
cmpl
adc
dec
jmp
mov
push
leave
pop
add
or
ds
xchg
mov
or
dec
jg
cmp
ffreep
xchg
mov
incb
cli
sbb
cs
adc
sbbl
jns
adc
push
add
lea
lock
mov
inc
shll
movsl
mov
gs
aad
cs
loop
and
cmp
sub
jmp
dec
mov
mov
out
inc
int
ficompl
jl
xchg
ja
enter
push
or
jle
das
lahf
mov
inc
repz
aas
ja
inc
lea
pop
inc
insl
in
adc
cltd
cmp
cld
mov
pop
ret
es
repz
rorb
xchg
or
mov
shlb
je
in
jno
jae
add
cli
fidivrl
call
mov
push
call
xor
mov
mov
push
pop
sub
and
out
aaa
nop
leave
inc
clc
sti
mov
int3
or
pusha
push
adc
xlat
faddl
aam
ja
pop
cmp
test
scas
out
lcall
xchg
xchg
ficomps
pop
add
add
add
and
cmp
loope
mov
test
hlt
add
add
clc
xchg
mov
push
push
dec
inc
pcmpgtb
xchg
aaa
std
fwait
cmc
cmp
jns
and
pusha
jb
or
je
push
ss
xchg
sti
inc
push
iret
add
cmp
loopne
cli
xor
mov
cmp
or
sub
push
rclb
pop
test
xor
in
lods
dec
mov
les
mov
mov
xor
jae
jne
add
int3
jmp
push
sub
add
movsb
clc
sub
jbe
fst
push
or
mov
and
test
mov
popa
cmc
test
xchg
mov
pop
les
mov
xchg
cmp
and
xor
push
or
insl
push
ret
add
push
data16
dec
add
push
stc
mov
daa
js
ret
xor
push
pop
insb
inc
or
scas
dec
xchg
dec
sbb
gs
fcmovnb
arpl
cmc
aas
lahf
and
jns
sub
adc
lret
sbb
sbb
shrl
ljmp
ficoms
aaa
gs
cmpsb
lret
lds
and
outsb
push
jmp
jge
dec
subb
mov
push
daa
adc
cmc
adc
rorl
xchg
xchg
pop
jmp
subl
mov
add
in
cmp
jle
sbb
jge
shll
aad
mov
inc
adc
ret
js
mov
dec
pushf
pop
inc
aaa
and
sub
inc
stos
jae
sbb
addr16
cmp
aaa
or
add
lret
out
adc
insb
cmp
cltd
incb
out
data16
push
fmul
stos
fdivs
xchg
jl
mov
call
push
xlat
aam
mov
enter
andl
dec
cmc
out
mov
push
aam
or
imul
ret
loop
movsl
mov
outsb
mov
dec
ljmp
pushf
dec
dec
cmp
gs
push
cld
stos
cld
outsl
js
cmp
shll
mov
imul
ficompl
and
lea
jno
mov
insl
pop
jecxz
hlt
inc
xchg
int
pop
cmpsl
jp
xorb
or
pushl
push
insb
or
lods
in
imul
fcoml
popf
arpl
bound
mov
xor
fists
mov
xchg
push
je
pop
daa
add
data16
xor
in
push
pop
xor
and
int
fcmovnb
test
and
movsb
in
negb
or
mov
ljmp
mov
scas
mov
lock
es
jge
iret
ret
aad
mov
out
dec
or
sahf
rcrl
fisubs
push
sbb
xlat
das
pop
mov
inc
das
push
mov
sahf
lds
xchg
test
fidivl
lods
push
sbb
punpckhwd
add
sub
xor
jnp
jle
aad
push
xchg
lcall
sub
sahf
mov
ja
jb
and
daa
xlat
pusha
pop
jle
add
adc
dec
mov
adc
jbe
ret
imul
clc
cltd
cmpsl
test
dec
mov
jae
mov
aas
sbb
or
rcrb
shll
push
xchg
sub
out
lds
test
xor
mov
aad
sbbl
andb
or
push
js
sbbl
push
push
xor
cs
add
stos
mov
jbe
mov
in
in
mov
xchg
adc
add
shrb
xchg
fidivs
sub
into
arpl
xor
fcomps
cmp
ja
call
sbb
sub
pop
mov
dec
in
stos
dec
lock
sbb
add
sti
cltd
pop
push
mov
lock
dec
sti
sbb
inc
and
xchg
sub
sub
sbb
sub
xchg
mov
outsb
cmc
movsl
mov
cmp
mov
xor
add
pop
jg
sti
jnp
jb
mov
daa
mov
repz
push
cld
mov
dec
lock
stc
add
fisttps
mov
int3
cmpsl
popf
sar
int
cmpl
insb
addb
pushf
divb
mov
mov
push
mov
inc
inc
stos
shr
scas
jb
lahf
rcrl
sbb
mov
pop
jb
push
push
push
jmp
ret
adc
xor
sub
jl
loopne
or
mov
add
ss
andl
add
add
mov
jp
ret
hlt
mov
add
hlt
add
add
pop
and
pop
loopne
and
push
das
xor
mov
into
jno
shr
pop
jbe
pop
push
in
push
test
pop
sub
sarb
dec
cli
mov
cmp
mov
jl
adc
data16
mov
in
xor
mov
sub
pop
notb
repnz
mov
sub
mov
movsl
int
pop
add
inc
mov
repnz
mov
idiv
push
imul
fnstsw
xchg
arpl
sub
ret
addb
sbb
fcmovu
in
sbb
into
inc
dec
loop
movsl
movsl
std
push
xor
adc
mov
mov
jmp
xchg
push
push
shrb
jns
xchg
cmp
mov
sub
pop
loope
xorl
test
dec
insl
push
aas
cmp
sbb
push
call
cltd
mov
sbb
cmp
into
pop
sti
adc
adcl
push
add
pusha
ljmp
mov
scas
lret
in
sti
fdivs
sarb
mov
mov
imul
ljmp
cmpsl
pop
xchg
in
adc
sahf
insb
movntq
out
mov
ret
lock
daa
inc
inc
push
lcall
inc
push
mov
fs
insb
jno
push
xchg
mov
call
imul
insl
shll
push
loopne
jmp
push
push
imul
jle
sti
scas
dec
lcall
in
and
push
mov
jge
rolb
js
test
in
cwtl
inc
nop
gs
jno
add
in
mov
cmp
jle
push
jbe
adc
push
negb
inc
add
pop
shrb
jne
dec
adc
test
xchg
pop
xlat
loope
mov
and
push
dec
lret
adcb
nop
stos
or
leave
xchg
ljmp
adc
jbe
mov
adc
jnp
mov
aad
mov
leave
jg
sbb
in
jb
clc
pop
aas
mov
xchg
pusha
pop
xor
bound
sub
cmpsb
outsl
mov
es
fwait
leave
lods
cmc
stos
mov
mov
fwait
mov
add
test
fdivr
adc
adc
xchg
movsb
clc
adc
xchg
pusha
inc
xchg
xor
imul
rcll
flds
scas
adc
je
scas
aad
add
cmpsl
cmc
inc
cmpsl
imul
jmp
insb
icebp
sti
mov
int
cmpsl
mov
or
imul
cmpsb
adc
popa
mov
ret
mov
jno
dec
push
xor
mov
dec
push
jp
xor
jns
rcll
push
popa
inc
int3
mov
repz
aas
mov
test
dec
sarl
mov
and
cltd
inc
mov
push
shll
pop
rolb
push
out
cmpsb
cmc
loopne
iret
movsl
mov
add
cld
ds
das
inc
cmp
or
in
mov
xorl
fcmovnbe
push
push
xor
xchg
divb
xlat
push
mov
dec
andb
fbstp
addr16
mov
sub
pop
mov
cmp
cmp
icebp
enter
sub
bound
gs
test
adc
mov
movsb
add
pop
cmp
pop
push
ja
xchg
mov
shll
mov
outsl
lds
sti
cmp
mov
mov
or
incb
stos
xchg
fnstsw
sub
jle
inc
push
ud1
jmp
aad
adc
pop
and
loope
imul
icebp
loope
add
and
mov
pop
jecxz
jo
xor
ret
mov
call
ret
xlat
jb
mov
push
mov
or
test
mov
popf
in
stos
jecxz
leave
jg
lods
daa
adc
dec
sbb
push
pop
mull
bound
push
xlat
std
adc
dec
push
in
neg
mov
pop
mov
or
imul
adc
mov
repz
sbb
jnp
in
pop
nop
and
enter
out
add
or
push
out
mov
pop
cmp
add
sti
push
push
mov
stos
pop
aam
dec
adc
push
xchg
out
lahf
popl
push
dec
movsb
and
sub
or
loop
or
fisubl
popa
fcomp
push
xor
xchg
add
and
scas
icebp
pop
in
fstpt
add
add
push
push
cmp
cmp
push
pop
mov
lahf
daa
fistps
add
add
add
cld
in
inc
lds
lods
repnz
test
pop
xchg
dec
xchg
mov
hlt
cmc
push
dec
cmp
fists
test
lahf
fidivrs
nop
lock
rclb
fbld
cli
sub
push
sbb
lahf
cmc
mov
add
out
outsl
test
clc
jecxz
leave
mov
mov
cwtl
dec
shlb
scas
sbbl
mov
insb
xor
negl
sbb
xor
shlb
lods
lds
sub
lret
xor
add
pop
and
loopne
dec
mov
or
test
xor
push
in
fdivs
test
cmpsl
push
in
push
cmpsb
add
shrl
cmp
push
js
jo
arpl
cwtl
mov
cmp
stos
sub
int3
shl
cmp
scas
loopne
iret
pop
in
gs
movsl
mov
mov
bound
inc
int3
jae
cmp
outsb
jp
pop
loope
sub
lea
imul
adc
sbb
pop
aam
leave
or
scas
mov
add
pop
bound
outsb
sub
push
sahf
out
xchg
aaa
call
arpl
mov
insb
jnp
cmp
mov
sbb
test
add
stc
sahf
mov
loopne
xor
push
shrl
pop
insb
cmp
les
mov
dec
dec
out
or
movsl
clc
shll
lods
pop
push
mov
call
nop
xchg
lds
loope
xchg
and
dec
sahf
and
mov
movsl
je
jbe
imul
mov
test
dec
dec
mov
mov
fiadds
incb
pop
lock
dec
dec
sti
xlat
repz
movsb
inc
jg
test
shll
mov
dec
jp
fwait
pusha
icebp
add
mov
push
pusha
les
das
fnstsw
jnp
js
outsb
mov
jne
test
loopne
pop
push
sbb
lds
js
cmpsb
into
cmp
xchg
lret
ja
jg
mov
scas
pop
cwtl
sbb
mov
sbb
adc
imull
add
or
sub
xor
jmp
xchg
pop
int3
movsb
arpl
stc
sbb
pop
xlat
pop
cmp
mov
add
stc
inc
mov
arpl
test
lods
xor
sub
int
mov
add
dec
sub
lcall
inc
push
movsb
xchg
fnstsw
sbb
and
xchg
cltd
rcll
mov
sub
xchg
inc
pop
xchg
jmp
aad
push
dec
jg
add
add
int
jecxz
test
or
jl
mov
xor
pushf
call
out
lea
pop
mov
mov
fcomps
xchg
lret
insb
setle
mov
cmp
add
sti
in
lahf
cwtl
sub
push
pop
jbe
push
in
ret
add
push
jo
mov
jl
mov
jbe
shlb
imul
dec
adc
clc
in
clc
fdivr
int3
arpl
mov
jae
inc
push
sub
popf
jge
std
inc
push
subl
dec
and
ljmp
pop
cmp
pop
sti
pop
mov
xor
adc
sub
aaa
mov
push
stos
sar
push
adc
sub
inc
pop
jnp
or
std
int3
loop
imul
dec
outsl
and
pmaxsw
subb
push
addb
dec
popf
dec
negl
aas
xor
sub
xlat
mov
test
xchg
jb
in
mov
adc
movsb
jne
or
shlb
pop
add
daa
in
fld
cmp
sbb
int
cli
data16
les
mov
js
cli
in
leave
jge
mov
pop
iret
xchg
sub
xchg
bound
cs
lea
adc
cmp
cmc
mov
push
mov
push
into
lock
stc
fsubp
sbb
scas
dec
push
pop
jb
ljmp
mov
jnp
jmp
jno
fisttpl
test
mov
cmp
incl
insb
fcmovu
aam
jmp
mov
jmp
pop
adc
adc
sbb
arpl
or
sbb
rcl
not
test
add
pop
cmp
in
cld
inc
and
jle
daa
sbb
mov
fcompp
rorb
cmp
mov
xor
push
cld
shll
sahf
and
cmp
sbb
jo
sub
es
cmp
dec
push
mov
cli
loope
push
fwait
xor
jnp
cmp
shlb
pop
add
mov
fdivl
add
add
mov
jg
test
out
sub
push
add
add
add
in
out
test
push
pushf
pushf
xlat
cmc
cmpsb
mov
mov
ss
outsb
arpl
dec
pop
mov
mov
push
call
xchg
adc
cmp
cmp
jl
and
inc
cltd
xor
roll
in
jl
shll
shrb
fsts
bound
insl
mov
out
inc
mov
into
pop
jecxz
nop
fimuls
mov
sbb
and
mov
roll
test
bound
fists
cs
cmpsb
ja
popf
cwtl
dec
stc
jo
sub
pop
aam
cmp
pop
and
int3
mov
insl
inc
push
into
push
pop
xor
adc
shlb
dec
clc
mov
pop
addb
pop
add
mov
inc
fs
dec
pop
fstl
inc
test
incl
pop
lock
das
mov
lods
ljmp
or
leave
sub
mov
jle
push
pop
jo
fdivrp
mov
divb
inc
les
movsb
iret
out
or
sub
xchg
lds
sbb
or
or
mov
scas
cmpsb
xor
dec
ds
and
orps
hlt
mov
inc
pop
sbb
mov
ret
das
aas
push
mov
mov
xchg
or
mov
xlat
outsl
xchg
xchg
leave
lcall
ret
into
xor
mov
xlat
into
pop
mov
fwait
add
pop
or
dec
mov
adc
sub
xchg
xor
mov
imul
icebp
jo
out
adc
lret
xor
dec
testb
push
pop
out
stc
imul
sbb
shll
lea
sarb
loope
test
mov
mov
cld
insb
jmp
out
in
andl
out
dec
insb
cmp
and
fwait
pop
mov
mov
and
out
xor
or
add
mov
ds
fcoms
mov
pop
pushf
fwait
insl
push
mov
arpl
mov
jne
inc
int
inc
inc
into
adc
mov
dec
cmpsb
sbb
xor
push
mov
pop
mov
dec
js
mov
sar
sub
jno
popl
adc
clc
mov
enter
mov
call
mov
xchg
jnp
xor
pop
cmpsl
xlat
cwtl
sub
ja
pop
pop
sti
aas
lcall
fwait
mov
mov
mov
std
aam
int3
mov
add
cmp
lods
xchg
mov
out
std
popf
ljmp
inc
aaa
in
cmp
je
mov
push
aam
add
pop
pop
shr
mov
inc
pop
sbb
test
pushf
fidivs
jg
jne
mov
dec
out
mov
popa
stos
jne
xor
jp
fcomps
add
push
xchg
int
mov
mov
shlb
pop
pop
out
icebp
or
adc
mov
sbb
and
or
xor
cmp
and
rol
aaa
xor
orl
lock
push
dec
test
xor
fidivrs
adc
jp
std
pop
cmp
cltd
mov
scas
push
inc
cmp
sub
sub
inc
popa
loopne
mov
sbb
fcomps
sub
mov
fcomps
lea
loop
mov
aas
popf
cmp
inc
dec
jle
jmp
and
pusha
pop
jle
je
inc
movsl
jno
pop
arpl
adc
and
mov
xor
mov
pop
stos
inc
pop
inc
lods
adc
adc
adc
sub
mov
adc
out
les
pop
pusha
mov
mov
jnp
pop
movsb
push
insl
lret
xchg
bound
sub
stos
out
dec
test
pop
cld
push
mov
rcll
xor
in
xchg
and
test
in
xor
inc
loope
fsubs
bound
xchg
jno
les
out
xor
and
adc
cs
mov
jae
in
pop
sbb
and
popf
cmpsl
testb
fildl
loope
mov
cmp
shll
pop
xchg
add
or
popf
pusha
and
nop
add
aam
xor
ljmp
adc
jl
mov
sbb
mov
push
addb
hlt
jnp
aad
scas
jb
add
add
dec
mulb
repnz
out
out
insl
adc
jb
add
add
add
mov
scas
movsl
int
in
pop
shll
ljmp
xchg
add
test
inc
jnp
dec
arpl
cs
mov
xchg
pop
push
cld
pop
ljmp
xchg
nop
dec
outsl
repz
xlat
dec
fisttpl
xor
or
and
inc
mov
push
dec
or
xchg
push
sub
push
xor
clc
add
jne
jnp
dec
fcomip
or
das
ret
insb
sub
xchg
outsl
clc
andb
gs
sub
or
lods
fistpl
push
push
xchg
xchg
dec
popf
hlt
inc
lahf
jno
aaa
xor
xchg
mov
and
xor
scas
or
js
iret
iret
cmpsl
xchg
inc
insb
mov
sbb
mov
out
or
std
ja
leave
lea
ret
pusha
cld
or
call
lcall
cmp
call
or
cld
loop
adc
flds
imul
xchg
add
test
adc
fcompl
cld
cmc
cmpsl
ja
mov
mov
push
mov
ret
jne
inc
test
mov
fcmovnb
dec
push
outsb
inc
jno
repnz
mov
mov
scas
cmp
ret
sub
mov
xchg
roll
push
hlt
call
and
inc
adc
cmp
sbb
sbb
shll
daa
in
je
aad
lahf
add
daa
xor
xor
mov
adc
push
mov
lods
adc
sti
int3
ret
mov
jle
flds
aaa
jne
sub
pop
adc
pop
mov
cltd
dec
mov
inc
mov
adc
rolb
mov
cmp
lahf
fisttpll
push
inc
push
outsl
mov
xchg
ja
call
ljmp
ficomps
rorb
fmuls
and
xchg
sbb
push
sarb
fwait
adc
dec
pop
xlat
test
cmc
push
aad
dec
or
jnp
jl
sahf
sbb
push
cmp
into
test
out
sub
pop
mov
xor
mov
scas
and
aam
and
and
orl
xchg
bound
or
pop
mov
adc
jp
fwait
mov
mov
repnz
icebp
popf
add
ja
repnz
data16
shll
subb
enter
es
mov
push
cs
pop
mov
shlb
aad
dec
enter
repz
sub
mov
imul
sub
dec
push
or
int
cmp
push
scas
cmp
jae
gs
xchg
pop
ficomps
mov
ret
imul
pop
jp
and
push
pop
or
jo
nop
adc
bound
sub
and
xor
and
adc
shl
sbbl
and
lds
into
fs
sbb
mov
ficompl
push
ret
dec
mov
sbb
nop
adc
inc
test
dec
das
jno
test
cmp
sti
sub
ss
sbb
inc
bound
out
xlat
dec
adc
nop
or
jle
xor
jnp
and
pop
lahf
pop
mov
and
mov
adc
xchg
push
ret
mov
aad
int3
dec
icebp
mov
gs
lret
inc
fwait
out
into
lahf
xor
lods
rorb
and
mov
xchg
enter
xchg
call
adcl
fbld
xor
xchg
pop
jno
fistpl
push
cmp
cld
cmc
ds
rorl
sbb
mov
stos
orl
nop
mov
push
mov
in
fadd
dec
lock
or
fs
rcrb
insl
fdivrp
push
pop
mov
out
rcrl
bound
outsb
cmc
pusha
cmp
push
pop
dec
sbb
mov
loope
fstps
xchg
cmovp
mov
or
bswap
ds
mov
hlt
xchg
sbb
jne
test
jge
pop
mov
jmp
adc
xor
je
shl
imul
or
mov
stos
ja
push
mov
cmp
cwtl
add
stc
lea
xor
jle
or
pop
cli
cmp
mov
inc
xor
pop
out
loope
mov
and
in
out
and
fldl
and
add
add
mov
mov
mov
add
out
in
ja
add
add
add
adc
sbb
cmp
xchg
leave
add
push
jp
sub
lods
jo
aam
in
cld
bnd
sti
addl
adc
mov
sub
xchg
mov
icebp
gs
inc
js
addr16
adc
mov
xchg
aas
adc
loopne
ljmp
add
fistpl
mov
mov
std
adc
pop
push
testb
lret
loope
jle
dec
sahf
test
scas
ficompl
mov
and
test
in
mov
mov
scas
fidivs
mov
xchg
hlt
test
js
lcall
jb
sub
inc
sbb
fstpl
sar
pop
jns
scas
lods
and
push
ds
sub
sbb
adc
add
dec
push
in
popa
mov
mov
mov
or
xchg
sti
mov
sub
aam
xchg
add
cld
stos
mov
xchg
pop
data16
mov
push
ja
jge
pop
stc
xchg
call
sbb
insb
loopne
cmpsl
out
ja
dec
lds
mov
and
lret
sti
push
in
lcall
lcall
push
push
jmp
xchg
hlt
mov
jnp
jl
leave
xor
push
les
push
cmp
or
xor
popf
pop
adc
sahf
adc
jae
jecxz
popa
out
ret
pop
jnp
lret
jno
addr16
std
out
jmp
leave
ds
sbbl
sti
dec
inc
cmp
adc
sti
std
add
jno
push
daa
ret
or
rclb
movsl
dec
les
push
mov
push
sbb
movsb
cwtl
sbb
pop
cltd
mov
mov
jne
gs
push
xor
lock
sub
fcomps
jle
xchg
push
and
filds
add
jecxz
int
mov
xor
orb
mov
mov
aad
mov
and
mov
adc
in
dec
jle
jmp
iret
rolb
sub
and
fsubrl
cld
int
push
sub
insl
or
fildl
jg
dec
lea
loope
push
mov
adc
sti
jmp
adc
popa
int3
sbb
insb
pop
leave
add
dec
pop
les
xchg
gs
mov
mov
out
addb
in
push
jge
sub
out
movsl
roll
in
cltd
cld
or
jp
fisttpll
cmp
es
dec
jecxz
jo
outsb
jle
fs
shrb
push
inc
cmpsl
int
mov
lods
ret
xor
adc
loope
das
cmpsl
ss
mov
into
dec
or
sub
and
jnp
cmpsl
xor
dec
addr16
ljmp
out
and
dec
push
mov
inc
outsb
lea
rcl
das
in
sbb
cmpsb
jno
lret
movsb
movq
std
adc
aaa
adc
pop
inc
aaa
ljmp
ja
push
xor
out
data16
mov
dec
push
mov
sahf
jno
pop
add
pop
pop
sahf
stos
inc
mov
push
ds
ljmp
loopne
imul
insl
jmp
xchg
loope
sub
movsl
inc
out
scas
cmc
js
mov
adc
push
jb
repz
add
lea
push
ret
add
fildl
idivb
mov
stos
or
mov
pusha
adc
mov
je
sbb
or
cmpsl
push
mov
cmp
dec
subb
js
jo
cld
xorl
push
xor
subb
ds
stos
repz
popf
xchg
dec
lods
dec
and
mov
rolb
cmp
dec
call
hlt
sarl
xor
sub
pop
add
inc
lds
shlb
cmp
add
mov
inc
shr
ficompl
or
mov
mov
jo
stos
adc
outsl
or
pop
dec
cmpsb
pop
ljmp
sbb
aam
lret
push
jp
cmpsb
fwait
push
in
flds
inc
push
push
movsl
aad
sahf
and
int3
and
je
lcall
push
cld
nop
jno
out
mov
adc
inc
loope
jb
loope
inc
aad
and
sub
or
insl
sub
jnp
jmp
inc
push
pop
outsb
mov
testb
and
lret
mov
add
add
mov
and
mov
add
hlt
add
add
out
mov
insb
scas
stos
jl
xchg
test
das
cltd
mov
data16
push
adc
mov
cs
ds
xchg
dec
adc
gs
daa
fwait
arpl
fwait
jne
in
scas
and
lret
inc
fdivs
mov
out
out
mov
mov
sub
add
sbbb
sbb
pop
or
adc
jo
jo
xchg
std
push
push
rcll
mov
imul
shl
out
and
sub
mov
sub
loop
mov
mov
adc
push
pop
push
adc
mov
stc
or
mov
loope
pop
rcr
hlt
inc
mov
mov
enter
push
dec
sub
imul
hlt
jbe
jmp
std
pop
jecxz
andb
pop
sti
jecxz
sub
mov
negb
push
push
pusha
jns
mov
add
loopne
stc
test
pop
scas
jnp
icebp
int3
jge
mov
jge
jp
out
repnz
out
pop
int
ret
xchg
lcall
mov
fs
dec
ret
mov
xor
fldcw
add
movsb
aad
jo
mov
pop
and
cwtl
pop
push
push
mov
call
mov
test
lock
pop
or
inc
xor
test
test
ljmp
mov
mov
mov
add
push
push
add
and
adc
int3
inc
hlt
inc
xor
push
daa
popf
mov
mov
ds
inc
loope
pop
mov
jp
testl
sub
push
mov
jne
cmc
dec
aad
push
fistps
andb
add
mov
cltd
stc
lret
outsb
ds
dec
aam
ret
adc
fwait
aas
mov
push
fcom
int3
daa
mov
aad
clc
inc
push
adc
ss
fmull
leave
mov
in
leave
sbb
inc
push
popa
jae
ffreep
push
in
push
cltd
push
inc
iret
xchg
add
inc
mov
ret
imul
pop
in
jnp
shrb
jg
mov
loopne
push
movsb
mov
enter
jno
lcall
push
jno
mov
xor
loope
popa
icebp
mov
ret
js
cwtl
out
cld
lods
and
jnp
pop
ja
jnp
dec
push
jecxz
xchg
rclb
ljmp
daa
or
adc
leave
mov
dec
and
loopne
nop
dec
xor
gs
jl
shrb
fisubl
aaa
push
imul
mov
push
xchg
shll
mov
test
clc
movsl
adcl
sub
xchg
pop
stc
in
jae
and
xor
push
push
movsb
xor
cmpl
notl
test
sub
cmp
push
cld
mov
jmp
mov
add
adc
mov
mov
ljmp
and
addr16
in
jno
ret
cmpsl
repnz
icebp
inc
cwtl
xchg
xor
negl
pop
mov
push
cmpsl
mov
xchg
bnd
cmpsb
call
insb
cmpb
push
cltd
shld
test
inc
imul
popf
push
testb
adc
rdtsc
arpl
sub
xchg
repz
les
inc
push
pop
pop
js
ret
cltd
mov
lahf
sbb
cmp
imul
jmp
sti
mov
pop
jge
mov
adc
movsb
dec
and
lock
fisttps
sahf
push
xor
mov
roll
add
mov
mov
and
sub
lret
ja
mov
pusha
xchg
rcl
cmp
ds
pop
loop
stos
jnp
push
mov
and
bound
cld
lods
xor
nop
mov
add
and
sbb
adc
mov
mov
pop
lret
int
inc
pusha
cltd
notl
adcb
adc
aad
mov
adc
das
iret
mov
and
fimull
or
mov
ljmp
and
and
ret
fnstenv
or
mov
aam
inc
or
inc
enter
lret
lahf
loopne
out
or
inc
int3
adc
adcl
icebp
into
push
jg
sub
inc
lahf
or
cmp
je
in
fcom
jmp
mov
sbb
movsb
or
add
sub
je
sbb
call
pushf
sbb
int3
data16
movsb
add
jl
bswap
les
jb
ja
in
gs
in
out
cmpsl
in
testl
add
and
fldl
inc
sti
aas
jb
add
xchg
adc
add
add
add
aas
scas
inc
mov
cmpsl
add
cltd
int
push
mov
or
je
arpl
in
fisttpll
jg
jg
xor
add
loop
adc
daa
pusha
sub
test
mov
or
inc
mov
fcompl
cwtl
cmc
mov
xchg
in
and
subl
inc
pop
dec
xchg
mov
adc
jl
xor
or
lcall
cwtl
mov
clc
repnz
mov
add
and
sbb
mov
mov
mov
filds
aam
mov
sub
cmp
mov
mov
fists
sbb
add
sub
mov
sub
sub
or
jbe
pop
sub
shrl
lret
lock
cmpsl
stos
dec
int3
mov
clc
or
push
jecxz
cs
mov
cld
inc
sbb
cmc
and
js
lods
push
data16
nop
mov
push
xchg
xor
cmpsb
cmpsb
out
rol
es
and
xchg
mov
xchg
push
dec
iret
xlat
mov
leave
cli
xchg
mov
outsl
int
popa
dec
pop
dec
xchg
mov
stos
jle
cmp
aaa
lcall
lcall
fwait
inc
repz
sbb
mov
sahf
push
sti
loope
pop
push
lds
pop
jne
mov
mov
insl
inc
mov
mov
or
test
cmpsb
add
out
out
fwait
and
into
js
mov
divl
add
dec
sub
gs
adc
push
aam
mov
cmp
leave
pop
jmp
xchg
sub
push
int
insl
fidivrs
sub
mov
jge
xor
or
xchg
testl
fldt
cmp
imul
jnp
popf
mov
mov
adc
scas
cmp
mov
jmp
cmp
mov
cli
jnp
cmp
punpckhwd
mov
pusha
popa
jbe
xchg
cmc
dec
mov
das
sbb
jae
mov
shrb
in
jae
outsb
lret
je
mov
lcall
and
and
inc
fucomp
loop
jnp
fs
repnz
fnstcw
daa
push
push
push
push
movsb
bound
sbb
jb
inc
call
push
mov
popa
fisttpll
inc
mov
pop
jp
jl
inc
add
pop
sti
ret
sti
sub
jae
sub
arpl
adcb
add
testl
lret
rorb
add
push
mov
jae
pop
addr16
leave
jl
adc
sub
fstpt
shll
mov
dec
loop
shl
movsl
or
dec
ds
lods
or
push
jg
pop
push
mov
inc
mov
repnz
sub
test
adc
ret
leave
shlb
cli
dec
mov
add
push
popa
shlb
outsl
push
add
pop
imul
cmp
mov
push
roll
push
jle
call
in
shlb
mov
push
lock
jne
lret
mov
mov
mov
cmp
fimuls
je
jecxz
push
sbb
xchg
jg
sub
dec
test
aaa
push
jb
mov
test
cmp
sub
sbb
sbb
insl
stos
jmp
cmpsb
adc
cmpb
push
cmc
repz
rcrb
loop
sbb
das
sti
arpl
pop
xchg
js
pop
sahf
enter
mov
lods
sahf
mov
pop
mov
pop
jae
push
mov
pop
mov
cmpsl
sbbl
jmp
xchg
and
sub
mov
ja
test
xchg
and
jno
jecxz
je
gs
cmp
inc
jae
das
testl
and
mov
fs
dec
cli
xchg
adc
test
stc
sbb
lahf
inc
jo
jle
cmpsb
icebp
jmp
repz
aas
leave
lods
out
icebp
mov
add
je
pushf
test
mov
cwtl
jle
sub
pusha
mov
fimull
lahf
push
xor
loopne
push
xor
push
scas
addr16
mov
mov
icebp
fdivr
shl
and
ret
rorl
js
jae
xchg
mov
jmp
pop
mov
rcrb
out
jne
fadds
cld
xchg
sbb
dec
out
aam
sub
ljmp
sbb
inc
lea
aam
sub
dec
xchg
and
out
add
add
jge
mov
or
fs
leave
xchg
add
add
add
incl
leave
push
dec
and
andl
test
pop
stos
loopne
adc
mov
nop
mov
ret
ret
out
xchg
nop
js
mov
movb
rcrl
aaa
push
xchg
mov
mov
inc
rep
add
mov
in
dec
mov
jg
loop
adc
sahf
mov
mov
push
mov
inc
in
stc
mov
xor
cmp
hlt
out
mov
cmp
cmp
pop
bound
ljmp
ljmp
mov
mov
push
ret
cmpb
push
push
xchg
adc
sub
sub
xchg
pop
jp
daa
repz
inc
lods
push
lods
push
dec
xorl
daa
mov
ljmp
je
andb
fs
sbb
xchg
roll
push
inc
test
mov
aas
test
arpl
jle
sub
fnstsw
cmp
std
xchg
mov
mov
imul
and
adc
mov
push
xlat
test
xchg
test
stos
jg
sbb
mov
dec
sub
sbb
cmp
shll
fs
xchg
sbb
ja,pt
jmp
dec
in
mov
mov
aam
lds
xchg
xlat
lea
sub
das
in
sub
ficoml
fcoms
xlat
mov
movsl
aaa
push
repnz
std
ds
jge
cmpsl
mov
cmp
movsb
push
cs
inc
rol
jnp
icebp
xchg
lods
mov
sbb
notl
jmp
inc
inc
push
or
mov
push
xchg
adc
pop
rcll
mov
in
outsb
inc
cmp
mov
sub
push
push
div
pop
sbb
and
mov
outsb
int
jns
ret
mov
lret
add
inc
jnp
clc
int3
in
cmpsb
test
xchg
and
jg
jmp
es
xchg
aaa
mov
mov
inc
addr16
xlat
pushf
jb
mov
push
xor
sub
mov
and
push
sar
mov
xchg
cmp
and
pop
inc
dec
jp
imul
in
fs
cmp
nop
into
ret
loope
sti
mov
mov
mov
inc
inc
mov
jnp
mov
adc
aaa
gs
jecxz
push
push
cmpsl
jge
mov
and
lcall
jo
xchg
add
pop
insl
or
sarl
jl
dec
je
shrl
mov
and
in
out
mov
add
addl
pop
sub
dec
enter
iret
cmp
push
mov
es
lods
jge
cld
aad
imulb
inc
xchg
xchg
je
and
mov
daa
rol
or
xor
xchg
gs
xor
add
popa
xchg
jb
movsb
mov
andb
in
adc
xor
lret
cmpsb
les
mov
cmp
movsb
shlb
cmc
push
mov
scas
sub
out
aad
loope
dec
push
pop
movsb
push
fs
pop
sti
sub
aas
pop
cwtl
fisubs
popf
cld
add
pop
push
jo
dec
lock
arpl
pop
nop
fwait
js
out
jl
or
stos
in
lea
fimuls
mov
mov
lock
popa
add
mov
cli
push
cmp
pop
fcmovne
movsb
stos
sbb
mov
sbb
cld
xor
ljmp
in
cli
dec
sti
daa
xor
mov
aad
test
fmuls
dec
enter
popa
mull
fisubrs
adc
out
push
xor
xor
mov
xor
adcl
stos
lret
add
add
mov
mov
mov
sbb
fisubrl
and
into
add
sub
outsl
repnz
inc
cli
in
mov
push
clc
insb
mov
adc
adc
lret
arpl
in
leave
xchg
mov
or
imul
xor
pusha
aad
pop
icebp
xor
rcr
outsl
ds
push
mov
add
mov
sbbl
roll
adc
mov
imul
mov
push
mov
cli
mov
sub
inc
aad
aad
inc
push
arpl
push
fcmovne
out
or
adc
mov
xchg
or
jb
mov
in
pop
insl
fcoms
add
mov
cmp
frstor
mov
add
add
and
call
mov
lahf
lds
icebp
mov
mov
data16
sub
add
insb
cs
mov
sbb
mov
mov
pop
hlt
push
sbb
push
adc
leave
jl
inc
lock
mov
or
add
mov
movsb
leave
dec
in
push
lods
subb
in
in
ret
pop
sbb
sarl
cltd
lcall
mov
sbb
sub
sbb
push
and
ss
arpl
lock
pop
addr16
dec
fs
mov
or
push
push
mov
je
inc
pop
push
and
and
loopne
out
loopne
mov
sar
outsl
xlat
adc
push
mov
adc
cld
mov
xor
sub
out
and
jl
aaa
pop
pop
pusha
xchg
inc
jecxz
fdiv
inc
jno
or
ret
fs
xor
in
and
das
sub
in
scas
mov
jb
cmp
pop
jecxz
cmpsb
cli
js
sub
mov
aaa
out
push
and
xchg
adc
cs
inc
jo
lcall
fimull
push
cmp
cs
jl
sarb
pop
repz
inc
in
jg
fbld
inc
test
cmp
mov
xor
mov
push
pop
mov
arpl
xor
cmc
enter
int
ret
pop
cwtl
add
or
mov
rcrb
sbb
hlt
rorl
mov
fs
adc
rcll
test
sub
sti
pusha
xor
fidivs
ds
enter
ss
fldl
push
leave
popa
pop
loop
vpunpckldq
and
xor
stos
popa
loop
sub
rcrw
push
gs
fnsave
popf
xchg
sub
lods
xor
ds
jns
pop
push
pop
lcall
iret
xchg
push
xor
cld
into
mov
adc
push
stos
add
insl
iret
mov
xor
and
test
das
lret
mov
addr16
movsb
mov
ret
mov
das
mov
mov
fiaddl
push
add
and
xchg
jmp
xchg
ljmp
aad
cwtl
sub
jnp
push
mov
mov
xchg
mov
xchg
push
add
int
sub
shll
pop
in
pop
and
pop
xchg
inc
mov
xchg
cmp
fists
gs
pop
es
adc
es
sub
lods
sbb
sbbl
out
ja
mov
mov
andb
adc
nop
addr16
fisubrl
frstor
cld
adc
movsl
sahf
dec
test
sbb
xlat
icebp
lods
xchg
xchg
rol
lret
jbe
push
push
add
int
icebp
mov
or
pop
pop
push
loope
outsl
add
xchg
inc
jle
push
movsl
jg
dec
xor
mov
fmuls
sub
addl
out
jg
mov
adc
mov
jns
test
iret
dec
mov
cmc
and
addr16
outsl
js
xchg
xor
or
xchg
inc
cwtl
add
mov
xor
test
rcl
jmp
cmp
pop
sub
fsubs
pushf
jmp
lret
aam
jo
inc
push
cmc
mov
or
dec
inc
sbb
mov
xchg
fwait
jno
sbb
pop
shrl
fistpll
arpl
xchg
pop
xlat
xor
push
es
jns
adc
cmpsb
cltd
dec
es
shll
mov
dec
jle
hlt
addr16
and
mov
sbb
test
ficompl
pushl
sbb
mov
ds
stc
sbb
lock
call
sub
adc
icebp
jb
hlt
push
lahf
shll
jle
adc
push
sbb
cwtl
rcll
ja
jp
shll
cwtl
cli
sub
arpl
imul
mov
int3
jne
fldt
outsl
push
push
andl
cmp
fldl
xchg
jns
xchg
lods
jb
lods
and
cli
mov
push
pop
shll
jl
sub
and
movsb
push
sub
jo
mov
bound
sub
jns
loop
popa
sbb
sbb
adc
mov
push
dec
dec
fstl
pop
into
mov
loopne
add
sbb
out
jecxz
enter
addr16
adc
iret
xorb
insl
dec
mov
mov
or
cmp
insl
cmp
imul
mov
add
add
sti
and
es
sti
std
sbb
adc
outsl
mov
add
hlt
add
add
test
imul
fnstenv
sub
push
xchg
jnp
xor
popa
jb
xchg
mov
arpl
ds
inc
dec
add
adc
aad
movsl
sbb
inc
scas
sbb
inc
fstps
les
cmp
mov
jg
push
jbe
xchg
movsb
xchg
arpl
jp
dec
outsl
aas
js
sbb
testb
jo
and
sbb
xchg
lock
outsb
push
je
lret
xlat
adc
in
in
or
les
sbb
loopne
scas
or
popa
aaa
in
or
xchg
xorl
fs
loopne
push
fstpl
jecxz
pop
push
or
insl
in
ds
mov
ja
or
ja
mov
pop
mov
jbe
sub
or
movl
cld
test
xchg
icebp
mov
insl
jle
push
das
loope
pop
cmc
stos
out
mov
pop
or
xor
jge
into
insl
mov
cmp
xchg
aad
outsl
add
cmp
es
ret
inc
fwait
jge
xchg
dec
out
cmp
shlb
lcall
dec
int
pop
dec
fimull
sub
adc
rorb
stos
out
cmp
rclb
decb
test
popl
or
mov
adc
pop
std
ret
test
add
dec
imul
and
aad
or
jns
imul
imul
dec
cmp
sub
cld
int
loop
sbb
and
fsubrp
mov
dec
add
push
imul
jl
hlt
movsb
xchg
add
add
and
fdivr
mov
xor
inc
outsb
pop
push
inc
cld
inc
insl
mov
ret
inc
jle
jne
cltd
mov
sbb
loop
push
xor
dec
xchg
jne
jl
fdivs
pop
inc
pusha
xor
xchg
imul
cmc
lds
enter
mov
sub
dec
xor
jl
int3
inc
mov
adc
lock
mov
xor
aam
repnz
push
add
imul
outsb
jp
sahf
or
movsl
pop
into
sub
and
lret
xor
push
and
xchg
aad
and
jl
sahf
test
cmp
dec
inc
frstor
and
leave
dec
iret
pop
mov
pop
addr16
and
fidivrs
js
cmp
cmp
aas
push
lcall
hlt
push
pop
arpl
mov
nop
jnp
je
test
jnp
loopne
mov
aad
out
push
int3
mov
and
ficoms
push
mov
xchg
fisubrs
cmpsl
add
in
test
xchg
daa
xchg
hlt
fidivrs
mov
int
dec
dec
jmp
inc
push
rcll
mov
cld
dec
jl
mov
rclb
pop
jns
in
ret
out
repz
les
mov
std
scas
test
add
testl
ja
jp
mov
push
insl
jle
out
aas
arpl
daa
int3
sbbl
cltd
sbb
jnp
sti
fs
add
sbb
jb
jl
sbb
int3
cltd
sbb
mov
movsl
jb
xchg
inc
movsb
mov
dec
mov
and
sub
daa
xchg
jmp
dec
inc
push
je
mov
pop
std
rolb
in
dec
pop
pushf
lcall
lahf
filds
cli
mov
aaa
in
fstps
cmp
mov
push
mov
lahf
pop
mov
mov
test
add
dec
and
mov
orb
xchg
ljmp
add
repz
add
movsb
fwait
jo
shl
add
or
cmp
imul
mov
add
xor
mov
jge
push
xor
scas
int3
sbb
sub
cltd
ss
mov
mov
mov
rcll
push
inc
cmp
sbb
rorb
mov
push
cltd
ret
lsl
xor
xchg
mov
je
xchg
pushf
cmp
cmp
in
ss
mov
push
ret
imull
test
jae
arpl
mov
mov
adc
xchg
loopne
cmc
push
cmp
mov
push
mov
movsl
push
rol
mov
insl
insb
movsl
and
jns
stc
test
inc
out
test
cmp
push
dec
das
in
push
int
cmpl
sub
xchg
adc
out
add
xor
sbb
jg
lcall
adc
add
add
and
leave
fsubrs
add
lock
pop
aam
popf
sti
loopne
mov
ret
enter
inc
push
das
cs
pop
jnp
sub
pmulhw
in
pop
aam
mov
inc
daa
push
jb
stc
fstps
into
mov
gs
pop
and
mov
mov
mov
cmp
jle
xchg
xchg
cmp
sbb
push
push
xchg
pop
pop
ja
sbb
sahf
mov
and
cmpb
jecxz
imul
iret
lret
pop
push
sub
test
mov
pop
sar
cld
push
xchg
loop
call
insl
pop
into
mov
xor
in
repz
stc
dec
mov
pusha
test
test
and
jb
mov
sbb
je
outsb
or
cmp
outsl
add
pop
adc
pop
leave
outsl
in
dec
pop
clc
mov
xor
imul
out
cwtl
fisubrs
mov
push
test
jns
push
pop
mov
inc
ja
or
add
mov
and
dec
sarb
xchg
andl
dec
in
pop
cmp
mov
xchg
mov
xchg
ss
pop
in
jp
addl
push
ss
dec
enter
leave
imul
popa
call
insl
testb
xchg
int3
adc
lea
lcall
dec
stc
scas
scas
sub
test
and
xor
add
insl
pop
jmp
cmpsb
scas
insb
add
ret
popa
enter
sti
dec
lret
push
or
mov
pop
pop
jb
sahf
movsl
xchg
into
xchg
int3
sbb
cmp
cli
call
push
xlat
insl
cmc
or
shll
xchg
mov
xor
shrb
xchg
testl
xor
mov
in
or
adc
cli
cld
push
cli
imul
movsl
pop
adc
shlb
inc
add
xchg
int3
push
data16
inc
cmp
mov
insl
add
sub
dec
sub
sub
add
or
push
push
and
enter
inc
dec
popa
pop
orl
adc
xor
shrb
mov
jg
sub
cli
shl
aad
push
adc
xchg
push
cmp
fisttps
test
push
jo
fwait
mov
cmc
leave
or
xchg
lahf
ja
hlt
sbb
inc
fisttpl
rcrl
pop
add
in
lea
in
cld
test
aad
and
xorb
fildl
mov
cmp
scas
popf
flds
cmp
cmpsl
sub
xchg
ljmp
je
mov
xchg
arpl
aad
or
and
ljmp
gs
data16
addr16
xor
and
ss
push
mov
add
jno
imul
lea
arpl
xchg
lock
sbbl
es
pop
xor
pop
push
pop
hlt
or
add
and
xor
data16
and
mov
sbb
xchg
out
testl
jb
pop
mov
sbb
loopne
adc
xor
jne
cltd
je
pop
mov
std
addl
sbb
xor
adc
sub
lea
loope
jl
in
ret
inc
aam
sub
push
xor
pushf
or
repz
mov
jbe
lock
mov
idivl
inc
popf
in
cmpsl
dec
jmp
inc
mov
mov
aad
jns
inc
sub
js
addb
mov
lret
jae
lcall
inc
lret
mov
ret
andb
mov
push
push
mov
loopne
push
mov
add
inc
xchg
outsl
orl
inc
sub
into
jne
xchg
push
stc
das
cli
sti
pop
jg
or
pushf
sub
and
loopne
mov
arpl
aaa
xor
jnp
hlt
lods
lock
lcall
es
xchg
loope
mov
into
test
out
js
mov
pop
in
pusha
xchg
aad
ffreep
jno
cmp
jo
cmp
out
and
popf
sub
sbb
mov
jmp
add
pop
sti
out
sbb
test
movsb
shrb
inc
jo
in
pop
jae
clc
mov
test
ss
push
jbe
mov
insb
sub
or
lods
xchg
mov
cmp
pop
sub
stos
jns
dec
sub
add
fadd
cltd
lcall
shrl
std
sbb
ds
inc
sbb
sbb
pop
sub
add
out
rolb
push
test
push
mov
sarb
jo
cmp
popa
xor
mov
or
outsl
cld
sub
dec
lahf
dec
dec
leave
xchg
push
jno
pop
add
aam
es
mov
fdivrp
inc
inc
loop
fidivs
fnstcw
div
out
es
push
pop
add
inc
into
lahf
pop
loopne
and
xchg
xor
outsl
jnp
jmp
bnd
clc
lret
les
sbb
jns
cld
sti
lods
xor
cmp
pop
arpl
mov
push
loope
idiv
stos
je
pop
push
push
mov
data16
in
sbb
test
mov
ljmp
mov
es
stos
push
cmpsl
jno
cltd
xlat
mov
fists
stc
arpl
xchg
mov
xor
ss
inc
imul
jae
mov
je
sbb
inc
call
hlt
mov
popf
stos
mov
cmpsl
push
xor
cltd
iret
test
jo
or
mov
rcrl
mov
mov
add
mov
lret
add
in
loop
ss
dec
ja
fildl
jge
imul
inc
in
xchg
cmp
inc
dec
lret
hlt
lods
icebp
shl
mov
rcrb
popa
repnz
jns
loopne
gs
js
jne
dec
push
aaa
sti
xchg
jno
adc
jb
push
push
and
icebp
imul
mov
cmpsl
cmp
push
sti
fidivl
addr16
mov
ret
pop
cmc
sbb
inc
mov
lahf
addb
ret
or
adc
xchg
inc
inc
adc
cmp
push
sahf
insb
imul
sahf
push
mov
adc
mov
aam
clc
stc
jne
aaa
inc
jecxz
roll
xorl
lds
push
fsts
adcb
and
sbb
dec
fcoml
mov
xchg
negb
pop
lret
data16
inc
mov
cmp
sbb
mov
mov
shll
dec
mov
jl
in
jo
sub
cltd
fsubrs
sahf
pop
fstpl
adc
push
jb
adc
jnp
xchg
scas
cwtl
xchg
and
sub
and
into
xchg
clc
int3
pushf
pop
push
or
fisttpl
sbb
addr16
jne
add
lds
imul
pop
pop
insl
push
into
xor
cmp
mov
hlt
push
jp
xchg
push
cltd
outsl
add
ret
mov
jmp
aaa
sarl
fidivrl
shrb
pop
jno
dec
lock
mov
jbe
popa
rcrb
lcall
mov
pop
dec
lcall
shrb
xchg
mov
or
test
pop
shrl
cmp
nop
int
inc
xor
mov
mov
loope
dec
dec
xlat
xlat
xlat
fmulp
frstor
pop
or
adc
ficomps
mov
jp
or
sahf
jg
psubd
xchg
push
or
into
jge
xor
dec
in
jl
add
fisubl
loopne
push
fmuls
and
mov
imul
add
ljmp
std
sti
icebp
or
and
scas
mov
jg
dec
fimull
movsl
or
sbb
push
mov
mov
lds
mov
or
inc
inc
sub
fsts
mov
repz
in
xor
sub
push
lea
pop
f2xm1
push
cmc
jecxz
mov
lret
adcl
dec
or
scas
and
sbb
filds
bswap
ljmp
sbb
xlat
mov
inc
sub
mov
popa
movsl
cltd
hlt
scas
les
jo
jp
jne
dec
cs
and
push
lea
and
add
in
mov
je,pt
leave
call
mov
push
inc
mov
xchg
test
inc
cmpsl
mov
jge
ja
jb
fildll
jp
arpl
sub
mov
in
test
data16
cmp
push
mov
inc
mov
mov
dec
cs
adc
fnstsw
std
in
add
out
cmp
xor
push
iret
push
std
inc
cmp
fistpl
cmp
push
cmp
insb
repz
or
dec
jle
enter
les
push
jl
dec
pop
dec
cmp
lods
leave
mov
lret
dec
jge
xchg
outsl
jge
lcall
add
hlt
add
add
sbb
push
or
loope
push
xchg
stos
mov
shlb
sbb
jo
iret
cmp
mov
les
test
pusha
cli
je
push
fldt
js
bound
lret
push
inc
inc
xor
popa
jge
lock
sub
fs
mov
pushf
aaa
cmp
xchg
inc
xor
ss
out
jp
dec
jbe
push
push
aas
jmp
scas
inc
leave
ja
insl
xchg
dec
in
imul
in
adc
mov
and
aam
and
sub
jl
and
fwait
movsl
xlat
dec
loopne
xchg
ja
rclb
insl
sbb
mov
and
fcmovbe
pop
out
mov
sbb
das
cltd
mov
dec
jl
mov
add
lods
add
push
std
leave
push
xchg
mov
mov
add
xchg
aam
push
inc
push
test
into
cs
mov
fisubrl
or
cmc
lcall
jl
xor
sub
push
dec
and
mov
shl
cltd
cmp
dec
cmp
fistpl
arpl
xchg
insb
int3
lods
mov
pop
sbb
lods
lea
imul
outsb
ret
lods
ret
xchg
and
fwait
into
jbe
inc
mov
jmp
jae
sbb
jns
test
add
dec
fmul
jecxz
jge
aas
call
xchg
mov
pop
dec
mov
cmp
ret
pop
mov
arpl
popa
jp
push
push
mov
popa
lock
mov
mov
pop
in
dec
mov
xchg
arpl
rclb
push
es
lods
stos
inc
je
xlat
clc
movsb
xor
jo
ret
add
sbb
lcall
xchg
mov
xor
mov
int
or
xlat
push
xchg
push
into
jmp
jae
mov
mov
or
add
mov
mov
fdivr
mov
jno
or
jle
cmp
xchg
out
test
ds
inc
sahf
aaa
pop
repnz
xor
xor
adc
push
inc
out
pusha
or
sbb
nop
push
fists
pop
mov
mov
or
and
push
push
outsl
pop
daa
jp
inc
sarb
push
int3
mov
mov
pop
or
push
sbbb
imul
int3
in
adc
dec
and
shrl
punpcklbw
inc
fdecstp
pop
lcall
aam
out
mov
cli
jo
lret
inc
dec
sub
inc
push
jno
lea
pop
ja
lahf
repz
or
cmp
sahf
imulb
jnp
movb
jmp
jb
cmp
pop
test
jl
rcll
cmpl
xchg
adc
jb
inc
shll
jmp
lcall
jo
cmpsb
or
int3
pop
addr16
mov
cld
stc
mov
push
ljmp
xor
stos
orb
xor
out
cwtl
push
or
inc
pop
xor
movsl
popf
or
sbb
cmp
cmpb
movsb
nop
mov
mov
sbb
or
mov
movsl
shl
imul
mov
lea
push
jnp
jns
fwait
call
add
and
sub
xchg
shll
inc
and
pop
mov
in
rcll
cld
add
insl
aaa
sbb
js
cli
les
adc
cmpsb
aad
adc
jns
lcall
adc
pop
xchg
in
fwait
and
sbb
test
sbb
in
push
into
out
mov
xchg
cmp
sub
cs
add
lret
and
cmp
lds
scas
or
ret
js
in
push
das
les
add
sbb
mov
jg
dec
cmp
and
pop
aam
sbb
jno
sbb
loope
pop
lcall
mov
add
cld
pushf
das
cmp
filds
bound
mov
pop
aad
sub
add
repnz
inc
test
mov
jo
sbb
fldenv
adc
ja
pop
xor
sahf
cs
xor
clc
or
aad
add
pop
mov
jnp
cltd
test
movsl
js
and
in
pop
add
push
and
push
xchg
jmp
fcompl
sub
jg
and
int
xchg
add
push
cmc
int
aas
mov
fsubr
pusha
and
jo
sub
cmp
add
xlat
hlt
push
ljmp
sub
cmp
andl
test
mov
in
mov
mulb
dec
push
fucom
jg
push
mov
fcmovnb
xchg
pxor
sub
jecxz
jle
scas
repnz
bound
and
cmp
cmc
in
adc
mov
arpl
sbb
xlat
fdivrs
icebp
push
notl
fucomp
loope
out
dec
nop
xor
xor
bound
mov
repnz
jmp
push
mov
push
aad
test
inc
jne
jnp
mov
imul
push
mov
pop
push
outsl
aas
mov
mov
in
jno
mov
dec
scas
jle
push
sbb
outsl
je
sbb
into
cmpsb
das
loope
jns
inc
pop
push
nop
xchg
lret
pop
cmp
mov
and
mov
cmp
mov
jnp
xor
sbb
mov
cli
imul
cltd
jg
shlb
or
in
push
clc
mov
clc
jp
sbbb
push
mov
add
pop
jns
daa
fsubl
scas
and
add
push
xchg
inc
push
or
addl
fistl
xchg
jbe
aam
jno
arpl
push
jo
push
loop
sub
lock
pop
or
out
and
mov
mov
inc
repz
mov
mov
mov
pop
mov
rorb
jge
jg
sub
test
shl
movsl
dec
rolb
scas
daa
adc
test
xchg
mov
mov
test
lret
rcrb
movsb
adc
inc
arpl
imull
dec
jnp
sqrtps
mov
movsb
xchg
or
sbb
into
lret
mov
cmp
cltd
add
mov
push
cmp
pusha
cld
adc
dec
lods
movsl
lret
or
sub
repnz
jo
xchg
pop
ret
aad
or
dec
xlat
jb
or
sbb
das
fldcw
jl
pop
inc
jb
pop
adc
sahf
andl
fisubrs
xchg
lods
paddusb
mov
sub
xor
bt
inc
in
mov
cmpsb
inc
adc
xchg
rorl
or
cld
mov
inc
xchg
das
fcoms
push
and
cmp
xor
push
pop
mov
mov
sti
in
push
shlb
je
or
es
scas
lcall
inc
pusha
xor
pop
add
mov
and
fldenv
hlt
pop
test
mov
or
jge
jp
or
popa
mov
bound
cwtl
repnz
shll
sub
xchg
xor
cltd
adc
ja
jnp
jmp
ret
aas
lahf
rorb
adc
inc
xorl
xchg
add
mov
aaa
test
dec
inc
sbb
les
cli
lahf
stc
dec
push
cmp
or
data16
xlat
rcr
roll
vpshufd
mov
xor
mov
push
scas
add
iret
adc
add
insl
test
pushf
pop
movl
xchg
xchg
adc
repz
cmpsb
outsb
cmp
jns
xchg
sub
push
call
je
mov
or
fcomps
popa
pop
cmp
movb
jp
int3
cmp
and
insl
scas
push
push
pushf
push
fincstp
movsb
shlb
and
mov
jns
pop
incl
rcll
ficompl
lcall
mov
stos
dec
adc
in
cs
mov
mov
hlt
movb
jne
sub
out
arpl
lahf
lret
pop
push
or
jmp
and
js
flds
ja
and
mov
std
add
cmc
adc
xchg
sahf
insb
jmp
out
sahf
das
stos
out
adc
jmp
divb
jae
sbb
push
mov
hlt
rcll
inc
addr16
fs
pop
decb
adc
inc
out
xor
pop
in
in
mov
dec
and
sub
je
data16
jbe
das
inc
and
lea
and
jge
js
imul
imul
add
stos
or
adc
cmp
sub
clc
js
aad
test
sbbb
mov
inc
in
xor
aas
insl
loopnew
ret
pop
sub
insl
aas
adc
int
bound
les
fcoms
lods
outsb
jne
add
mov
add
cmp
dec
jne
js
pop
ret
jp
in
dec
mov
aad
fidivrs
dec
sarl
add
add
cvtdq2ps
dec
sar
adc
lret
xorb
add
add
add
ror
in
jge
dec
add
dec
jp
mov
jg
ja
stos
movsb
cmp
aas
mov
xchg
pop
ss
js
mov
mov
jle
dec
push
xchg
push
ja
mov
adc
mov
mov
mov
es
iret
out
jl
aad
or
pop
push
sbb
mov
mov
or
adc
mov
ja
loopne
loope
fisubl
jp
mov
mov
adcl
in
js
add
xchg
nop
pop
mov
xchg
sub
je
add
xchg
adc
push
mov
popf
rorb
movsb
fldl
xchg
shrb
add
test
addl
shll
xor
movsl
cmp
inc
fisubs
in
xchg
push
sbb
cmp
ja
pop
dec
dec
push
cmp
cmovae
clc
cld
fidivs
sahf
push
subl
int
shlb
rcll
roll
add
cmp
mov
mov
out
cmp
dec
or
dec
in
test
jbe
mov
adc
dec
pop
pushf
inc
push
push
dec
sub
fucomi
mov
adc
loopne
test
leave
lcall
addb
sub
lcall
stos
lock
jmp
repz
cmp
in
cmp
sbb
adc
sbbl
xchg
cmp
mov
vprotb
test
punpckhwd
cmp
adc
shll
inc
into
pop
out
xor
add
mov
xchg
fnstcw
cmp
fldt
pop
xchg
pusha
repnz
mov
sbb
stos
dec
cwtl
and
adc
inc
aaa
movsl
mov
je
cs
mov
icebp
test
mov
cmc
pop
and
lea
lods
out
inc
clc
jl
xor
dec
std
adc
or
jg
int
test
cmp
pop
add
jnp
add
lret
dec
pop
cmpsl
aas
dec
sub
repnz
push
mul
xorw
sub
and
xchg
xor
iret
inc
loopne
roll
sahf
jmp
sti
aam
inc
in
pop
xor
ret
fldt
push
loope
out
and
pop
inc
loopne
inc
cmp
dec
cmp
fbstp
add
test
xor
or
in
push
xchg
jge
jmp
mov
mov
fiadds
out
jns
imul
cwtl
shlb
outsb
rcll
sub
inc
adc
cmp
iret
dec
das
push
movsb
cmp
out
sahf
add
jle
lock
test
popa
pop
addr16
sub
or
scas
sbb
xor
and
inc
testl
test
mov
push
push
mov
mov
loop
jg
add
xchg
jnp
fnstcw
pop
fildl
pusha
or
mov
loopne
scas
stos
push
mov
or
cmp
outsb
movsb
clc
outsb
ficomps
adc
mov
subb
pop
leave
pop
xor
lcall
and
pop
movsb
xchg
cmc
sub
jae
or
dec
adc
enter
cwtl
test
scas
repz
cmpsl
mov
stc
lcall
jecxz
aas
mov
mov
iret
movlps
inc
fdivl
push
dec
stc
pop
sbb
jecxz
imull
push
xchg
or
push
jae
and
mov
push
lods
es
xor
and
inc
movsw
add
pop
in
leave
pop
shrl
dec
aas
enter
and
addr16
test
push
shrb
pop
dec
xchg
push
repz
mov
sti
cmp
mov
pop
or
or
subl
mov
inc
dec
xor
orl
sub
flds
lret
cli
fs
sub
test
jo
cltd
ret
dec
mov
sub
push
mov
fidivrl
xchg
cmp
pop
sbb
sub
arpl
cmp
jmp
test
clc
cwtl
addr16
add
shlb
rcrl
jne
or
mov
sti
outsl
lahf
inc
jo
push
mov
jns
or
sbb
pop
into
ret
or
in
inc
adc
pop
xor
incb
sbb
ret
scas
mov
cmc
pop
sbb
jmp
xor
cld
cmp
adc
ja
fs
jae
lock
adc
ja
sub
fs
mov
xchg
mov
jne
mov
jne
adc
cmp
cmpsl
lcall
sahf
pop
into
lcall
and
out
in
add
add
push
push
lret
mov
jo
inc
fildll
add
hlt
add
add
vmptrld
push
push
or
sbb
lock
sbbl
inc
sub
outsb
loope
outsl
or
sbb
mov
das
arpl
xlat
or
adc
pop
cmp
aam
and
mov
and
cltd
aam
hlt
cmpsb
negl
sub
mov
pop
sahf
sbb
rolb
enter
cmp
mov
dec
test
xchg
dec
lods
std
cmpsl
mov
add
and
add
popf
mov
jl
fadds
std
pop
or
mov
je
push
push
dec
mov
out
push
or
rorb
daa
xlat
cli
popf
push
mov
jmp
xchg
jp
mov
aas
mov
cmp
push
or
loopne
mov
test
mov
popl
into
enter
pusha
stc
ret
adc
mov
fs
push
mov
outsl
mov
sbb
push
loop
ljmp
xlat
aaa
xor
dec
into
ret
fldl
cmp
bound
aaa
stos
lret
out
xor
aam
outsb
pop
mov
idivl
inc
int
fdivl
repz
jle
mov
in
loopne
mov
mov
rcll
sbbb
sub
das
sti
cmpsb
mov
addr16
test
fwait
call
pop
mov
jne
push
inc
sbb
xlat
or
mov
xchg
mov
ret
mov
push
inc
mov
xchg
nopl
push
addb
pusha
lds
pop
xchg
sub
xlat
jge
mov
xor
fadd
ret
lods
and
mov
inc
xchg
adc
mov
imul
enter
in
xchg
test
sbb
pop
mov
mov
pusha
adc
mov
push
andb
fildl
adc
sbb
mov
fs
xchg
sub
shrl
test
pushf
imul
mov
jmp
push
xor
and
add
ss
inc
cmp
push
test
and
pop
and
jb
neg
bound
subb
jnp
mov
pop
daa
fdiv
jne
lods
and
and
pop
js
lahf
lret
xlat
movsb
divl
fwait
out
stos
divb
rol
aad
cli
fwait
push
loopne
loope
xor
clc
mov
mov
sbb
xchg
rorl
shrb
test
push
xlat
mov
je
aad
std
add
mov
lret
test
bound
dec
imul
add
mov
xor
pop
pop
cmp
iret
loop
dec
repnz
push
and
jl
push
and
xchg
push
outsb
lods
inc
js
hlt
adc
lret
dec
mov
outsl
mov
int3
das
insl
pop
arpl
mov
mov
movsb
les
popa
test
out
sahf
jno
and
sbb
xor
sub
aas
jl
loop
pop
pusha
xor
add
xchg
sbb
sub
jp
pop
int3
int
sbb
in
mov
xorb
clc
pop
shrb
aam
push
aas
add
and
cltd
hlt
clc
dec
mov
adcl
pop
inc
sbb
and
stos
clc
cmp
mov
mov
sbb
xor
cld
insl
cld
sub
jg
or
das
imul
lcall
mov
adc
or
inc
ret
and
aaa
adcl
hlt
jl
mov
test
and
add
push
sub
xchg
pop
aam
push
popa
das
xchg
ds
in
lret
lods
je
cwtl
jmp
popa
mov
lcall
cmp
fmull
int
dec
or
jmp
add
pop
call
jae
push
pop
repnz
lret
mov
stos
push
cwtl
adc
xchg
data16
data16
sub
mov
clc
insl
daa
mov
push
xor
enter
jp
mov
test
fcomip
fmuls
pusha
cmpsb
jno
cli
cmp
out
push
test
adc
test
add
pop
sbb
or
lods
call
mov
fnstcw
movsl
jne
push
or
mov
dec
test
outsb
pop
or
enter
inc
addr16
test
and
cmp
pop
mov
mov
lea
mov
scas
fimull
mov
in
fs
roll
mov
fiadds
pop
rcl
fldcw
sbb
add
add
daa
cmp
mov
and
pop
mov
add
add
add
notb
je
adc
mov
outsl
xor
rolb
sbbb
shlb
sbb
xor
and
fadds
sbb
adc
sahf
les
add
sub
repz
dec
stos
mov
xor
inc
loope
cmp
adc
cmpsl
jbe
repz
mov
sub
adc
pop
or
pusha
fnstsw
mov
add
or
jne
lds
fistpl
mov
cld
mov
pop
inc
movsb
xchg
insb
push
cmp
imul
jmp
aaa
lock
or
repnz
pop
cs
bound
sbbb
fdivp
sub
mov
addr16
xchg
jp
add
mov
push
mov
test
js
jns
iret
divb
lds
sbb
enter
jo
mov
fmull
das
xor
adc
cld
inc
ja
sub
mov
pop
sub
iret
incb
jg
test
sbb
push
push
dec
or
dec
sbb
outsb
ja
std
jb
aaa
sub
aad
ret
loope
mov
lahf
add
sub
jp
dec
xchg
xchg
adc
and
xor
and
or
inc
mulb
jle
addr16
mov
insl
jmp
sbb
pushf
loop
sub
jmp
cpuid
fcoml
jecxz
jno
dec
push
add
nop
mov
repnz
add
cmpsl
mov
pusha
cli
inc
mov
loopne
movaps
push
add
adc
lahf
cmp
pop
mov
add
test
filds
imul
pop
xor
out
or
test
sbb
rep
shl
out
pop
add
push
mov
aaa
outsb
test
push
dec
mov
out
fwait
xchg
gs
jle
es
in
das
cmp
lahf
std
push
orl
jbe
div
fistl
push
out
mov
repnz
pusha
popa
inc
lock
xchg
add
inc
and
add
jne
test
mov
mov
lods
repnz
scas
std
or
jns
leave
lea
das
xor
fdivrp
pop
nop
lock
push
cwtl
mov
sbb
lcall
or
fbld
divb
bound
xchg
lcall
enter
fs
aas
and
mov
sbb
adc
shrl
pusha
stc
icebp
fadds
mov
outsl
xchg
loop
xlat
out
jg
dec
push
xchg
movsl
dec
inc
adc
insl
add
cmc
and
pop
sub
dec
repnz
and
in
lds
add
xchg
fadd
bound
sbb
testb
or
bound
daa
sub
xor
jmp
dec
lea
mov
push
mov
cltd
loope
adc
movsl
add
dec
mov
movsl
int3
aad
xchg
mov
ja
sbb
sub
bound
stos
dec
out
stc
xor
stos
xchg
add
data16
mov
push
xor
pop
pusha
mov
les
push
push
cmpsw
loope
cmp
push
fmuls
insb
out
inc
sub
cmp
lock
pop
and
fnstenv
dec
hlt
call
fbstp
js
xchg
xchg
outsl
sbb
dec
xchg
pusha
mov
inc
sbb
orb
dec
pop
scas
movsl
sbb
lahf
movsl
pop
fistpl
frstor
mov
mov
aaa
mov
lcall
pop
cmp
jne
fwait
arpl
jno
icebp
imul
mov
jge
aas
mov
cmpsl
add
fwait
ret
loopne
sub
test
out
es
push
pusha
movsb
shrb
xor
hlt
lcall
mov
out
mov
shl
mov
in
cs
inc
dec
sbbl
fcomp
inc
or
test
dec
out
in
jb
mov
jae
imul
fnstsw
push
stc
add
arpl
cwtl
sub
mov
jle
pavgw
stc
mov
sub
out
inc
adc
adc
mov
mov
dec
scas
pop
pop
dec
outsb
dec
xchg
xor
das
jge
fucom
lods
mov
jl
mov
cmp
pop
mov
pushf
das
sub
ret
pusha
push
xchg
add
fadds
xchg
and
add
add
clc
data16
mov
out
fiaddl
aam
push
mov
add
loope
mov
rcrl
add
iret
icebp
xchg
adc
fstps
mov
gs
add
out
pop
in
outsb
sub
fildl
xor
in
mov
pushf
mov
pop
mov
jo
mov
ss
fldenv
mov
mov
je
stc
and
cmp
sbbb
jb
adc
in
pop
outsl
arpl
clc
xchg
inc
and
pop
jae
lahf
rorl
imul
sub
dec
dec
xor
fldt
cltd
ja
pop
sub
or
mov
movsb
jecxz
cmp
xchg
stc
pusha
lret
clc
add
adc
dec
shl
enter
jbe
dec
enter
or
call
dec
sti
pop
outsl
mov
dec
xchg
test
fiadds
rcrb
dec
popf
jb
es
and
and
inc
ss
cmp
rclb
cmpsb
out
mov
pop
inc
fs
inc
ljmp
sar
es
movsb
das
mov
fs
jecxz
dec
and
push
mov
and
iret
inc
or
int3
sub
dec
inc
mov
sbb
aam
jne
pop
dec
test
inc
add
sahf
in
mov
cmp
scas
and
sahf
cmpsb
rcll
in
cmp
jne
sub
fcmove
mov
xlat
mov
fcomip
add
out
sub
pop
xor
lahf
fsubs
daa
ljmp
mov
mov
divl
sub
lret
out
dec
mov
nop
aad
inc
sub
shll
jns
jmp
pop
jbe
js
scas
push
mov
fstpt
jbe
stc
dec
jge
es
fisubrl
add
out
rorl
jmp
dec
jg
mov
mov
xor
in
mov
clc
int3
add
lea
or
and
sub
fs
pop
mov
sbb
sbb
inc
adc
bound
pop
mov
ljmp
push
nop
mov
inc
hlt
adc
lret
push
iret
push
lret
cmp
faddl
mov
jge
ret
shrl
xor
js
scas
lret
arpl
scas
inc
iret
inc
es
or
and
rcrl
jg
sbb
pop
je
mov
xor
ljmp
fs
daa
add
pop
arpl
cs
push
pop
ds
adc
sub
push
lock
pop
mov
add
leave
ds
xchg
inc
pop
xor
pop
repz
inc
in
testb
mov
cmpsl
jns
iret
fstp
outsl
lahf
cmp
jmp
mov
pop
xor
shlb
iret
dec
jo
pop
and
mov
aam
test
pop
loopne
xor
cmp
popf
mov
jo
lret
aam
cltd
ss
ffreep
out
lahf
cmp
lds
je
cmp
xor
mov
cmpsl
mov
add
or
call
mov
pop
daa
ljmp
fisttpl
hlt
arpl
add
sahf
sbb
stc
gs
sti
mov
imul
sarb
lcall
sahf
inc
pop
xor
xchg
xlat
prefetch
mov
sbb
mov
mov
mov
jge
lret
inc
sahf
pusha
sub
push
daa
and
lds
xor
orl
hlt
out
mov
aam
in
imul
push
mov
pop
rolb
fldl
insl
jb
gs
pop
imul
outsl
shrl
pop
shlb
pusha
push
add
pop
mov
adc
or
pusha
addr16
ficoml
mov
mov
dec
adc
scas
lods
xchg
movsb
daa
hlt
lods
adc
ss
cmp
cld
xchg
cld
fdiv
and
inc
stc
fs
jecxz
mov
mov
shrl
sbb
dec
add
jo
jl
dec
pop
xchg
mov
xchg
sub
sub
cltd
out
pop
jbe
loope
push
icebp
sub
repnz
pop
or
adc
std
inc
and
jmp
cltd
lods
xchg
ror
jb
xchg
fadd
mov
bound
aaa
or
ljmp
leave
lods
cmp
pop
enter
pop
es
adc
xchg
nop
aad
xor
das
js
repz
sbb
add
add
sub
iret
cmp
outsl
jecxz
push
insl
lds
xchg
hlt
inc
mov
add
and
pop
sti
clc
ljmp
mov
lahf
push
push
lods
test
test
cli
verw
xor
test
sub
ljmp
pop
int3
mov
adc
mov
xchg
xchg
lret
fsubrl
push
jns
mov
push
in
out
jmp
adc
jp
fbld
lahf
out
xlat
pop
test
jmp
ret
push
cli
jmp
adc
repnz
pop
arpl
inc
outsl
fldl2t
pop
pop
aam
xor
mov
xchg
cli
and
shrl
repnz
out
test
in
xchg
sbb
mov
ja
mov
cmpsl
adc
inc
cs
gs
lret
mov
imul
fwait
orl
lahf
push
ret
mov
icebp
adc
scas
cmp
sbb
sub
sbbb
das
jne
jno
mov
in
incl
mov
loope
aas
add
rorl
out
jg
cmpsb
clc
push
lahf
loopne
jecxz
jg
xchg
inc
outsb
shlb
push
js
pop
xchg
jb
sarl
cmp
movzwl
add
imul
push
dec
mov
mov
iret
mov
push
xchg
xchg
out
arpl
fdivrl
push
push
leave
out
or
jge
push
fnstcw
xchg
add
mov
mov
or
repnz
pushf
insb
lds
sbb
pop
aas
loop
jbe
cmp
add
shll
and
lret
mov
movsl
js
sarl
out
iret
cmpsl
vpshuflw
dec
aam
dec
loop
dec
adc
dec
dec
imul
popa
out
and
rorb
jnp
fwait
fwait
or
popf
imul
xchg
mov
out
mov
icebp
or
jne
pushf
inc
push
repz
fs
fmuls
pop
cltd
push
cmp
int
rcr
sub
in
jno
pop
rclb
scas
test
insb
push
loopne
cmp
jns
rolb
ja
xor
call
sti
mov
rcr
pop
rcr
into
mov
in
fldenv
daa
aad
outsl
stos
or
enter
xorb
daa
enter
jmp
jmp
or
nop
pop
scas
mov
stos
add
mov
mov
xor
push
mov
push
mov
jno
and
aas
mov
jne
sub
push
rorb
movsb
cmp
pop
push
mov
lret
lods
cmc
rclb
jno
push
mov
push
ret
push
xchg
jne
xchg
or
lret
cmp
lods
aam
fisttps
fbstp
movsl
test
push
mulb
lret
jb
xchg
sbb
adcl
mov
jl
sbb
mov
push
mov
lret
mov
pop
popa
addr16
dec
xchg
insb
mov
or
mov
sbb
ljmp
adc
xchg
or
pop
xor
pop
ds
shlb
scas
stos
xor
jne
std
leave
and
push
lods
cwtl
mov
sahf
cld
push
pop
push
jle
xor
sbb
inc
fadd
ss
pop
mov
mov
xor
xchg
pushf
cmp
cltd
sub
mov
ss
clc
sub
test
call
pop
shll
adc
outsl
mov
mov
outsb
mov
xchg
dec
ja
sti
push
sub
sbb
dec
inc
outsl
out
sti
loop
sub
outsb
repz
sub
xchg
sub
out
adc
cwtl
sbb
push
mov
mov
fsubs
sub
mov
inc
sbb
rcll
xchg
cmp
fwait
and
mov
sub
dec
bound
fstl
js
imul
lret
xchg
sbb
push
fadds
inc
sbb
cwtl
inc
insb
insb
adc
repz
clc
cmp
xchg
or
push
sti
pop
push
mov
mov
lock
push
ror
add
sbb
cmpsl
or
mov
jecxz
mulps
pop
push
fistps
test
push
mov
fnsave
xchg
das
push
movsb
mov
mov
bound
inc
sahf
pop
mov
test
addl
xchg
pop
push
push
xchg
decl
clc
mov
mov
and
xor
leave
rolb
add
add
lea
imul
fcmovnb
cmpsl
pop
pop
movsb
cmp
add
hlt
add
add
nop
or
add
cmc
mov
bound
rorb
sub
iret
addr16
ljmp
mov
lock
fcoml
les
lret
cmp
mov
ror
iret
aas
cltd
inc
mov
sarb
loop
rorb
movsl
ss
daa
outsw
mov
push
fstpl
mov
jne
insb
shr
cmp
popf
std
jecxz
mov
pop
gs
imul
fdivs
mov
clc
rcr
and
pop
push
repz
dec
inc
adcb
inc
cmp
lds
bound
sbb
ficompl
sub
inc
fidivrs
xor
fbld
fs
popa
aad
or
mov
xor
dec
cld
rorb
mov
pop
call
in
xor
dec
inc
in
jns
stos
push
push
mov
pushf
xchg
filds
inc
xchg
xlat
loope
xchg
xchg
mov
push
lods
mov
push
push
repnz
mov
popa
jb
jmp
lock
aad
in
incb
test
cmp
clc
pop
push
adc
sahf
stos
push
icebp
jns
jle
inc
pop
shl
scas
cltd
pop
movhps
sbb
push
outsb
cwtl
inc
xchg
rol
sbbb
pop
push
out
xchg
sbb
insl
in
inc
xchg
mov
in
jo
dec
add
aaa
mov
roll
sub
iret
xor
popa
adc
aad
das
or
setg
ror
int
pop
cmp
xchg
xor
sbb
addr16
mov
xchg
js
ret
mov
in
cmp
xchg
insb
mov
and
lcall
pop
int
bound
ficomps
ds
fldcw
mov
pop
cmp
dec
mov
cmc
add
push
int
push
cltd
jp
cli
or
pusha
mov
aas
stos
lods
fwait
nop
inc
mov
lcall
dec
push
mov
js
dec
inc
stos
ja
adc
leave
mov
jb
mov
add
lods
fsubl
adc
bound
mov
popf
adc
je
les
nop
leave
push
mov
sbb
sarb
pop
sbb
stos
dec
xchg
popa
sbb
sti
lret
add
pop
bound
pusha
xchg
std
call
iret
test
pop
sub
push
xchg
xchg
int3
movb
jecxz
aaa
or
sbb
out
cmp
push
scas
sbb
mov
pfrsqit1
jle
div
jge
test
cmc
dec
sbb
lahf
or
mov
mov
mov
pop
bound
pop
out
add
pop
and
cmp
adc
pop
ja
push
mov
in
loope
data16
addr16
dec
mov
dec
stc
xchg
push
shll
daa
mov
sub
mov
test
dec
cmc
sbb
idivb
dec
jmp
push
lcall
adc
ljmp
mov
out
clc
testb
and
mov
xchg
leave
pop
and
andl
push
adc
xlat
mov
icebp
js
imul
push
int
ret
mov
cmpsl
lods
repnz
and
cmp
jecxz
loopne
and
push
mov
inc
stos
fucomp
fldenv
or
pop
push
into
xor
dec
mov
test
xorl
aaa
outsb
push
and
rclb
fcoml
leave
lret
mov
jp
cmp
mul
inc
mov
and
in
rcr
adc
into
pop
fstps
cmp
pop
dec
mov
ja
push
lret
insb
sub
and
xchg
call
cli
nop
std
push
inc
add
cli
cmc
addr16
pop
sahf
xor
rclb
test
mov
dec
ds
inc
int
cmc
add
add
pop
xlat
mov
mov
arpl
mov
or
roll
xor
xor
pop
fwait
push
cld
jae
and
addb
icebp
xchg
subl
and
mov
ret
xchg
cli
inc
push
test
sbb
ds
mov
imul
aaa
and
jo
and
cld
fildll
xchg
test
cltd
in
mov
cltd
icebp
mov
xor
xchg
arpl
dec
std
je
repz
add
or
gs
jle
jg
in
jb
mov
inc
pop
je
test
add
addb
bswap
test
dec
or
movl
add
xchg
and
xorb
aam
or
fwait
mov
clc
and
and
cli
ljmp
jmp
out
movsb
xorl
loop
push
les
mov
push
adc
jle
push
aad
cmp
inc
cmp
fadds
sub
sub
mov
pop
iret
incl
sub
xor
mov
push
pop
or
hlt
push
fisubs
test
bound
and
out
push
fnstenv
cmpsb
inc
outsb
jae
rolb
cmpsb
rol
clc
inc
mov
cwtl
push
xchg
loop
sahf
pop
mov
dec
aas
add
push
je
push
out
outsl
pop
aas
imull
xor
pop
gs
or
push
call
scas
mov
movsl
mov
subb
ret
inc
mov
repnz
push
xorl
mov
pop
mov
xchg
rcrb
pop
push
insb
das
sbb
cmpl
adc
cld
sub
test
xchg
dec
cmp
test
shlb
mov
subb
sbb
rorb
mov
adc
pushf
pop
lods
fistpll
sahf
scas
sub
jp
sbb
nop
enter
add
xor
sub
inc
mov
jp
shlb
push
mov
pop
stos
cmp
stos
mov
lret
ds
outsb
or
pusha
jnp
shll
ds
add
fstps
cmp
ret
push
add
mov
sbb
call
push
fsubrl
add
mov
add
mov
inc
icebp
push
loopne
and
adc
mov
inc
or
push
aam
xorb
pop
sarb
mov
push
mov
in
dec
into
sub
loop
ds
jbe
pop
pop
rcrb
push
adc
pop
je
mov
cli
xlat
fildll
daa
call
dec
xchg
sub
sbb
fdivrl
pop
je
or
fwait
pop
cmp
adc
mov
loopne
cli
ret
cli
mov
out
jge
adc
repnz
sbb
lahf
sub
cli
add
aad
aaa
out
rcl
in
or
jecxz
loopne
cmp
dec
aaa
das
repz
inc
mov
lcall
fildll
mov
xor
loope
pop
mov
cmpsl
sbb
icebp
jns
mov
jl
sbb
and
adc
xor
jbe
push
push
xchg
lret
fistpl
das
fbstp
shrb
insl
push
inc
popf
popf
jno
jle
xchg
pop
dec
je
push
out
mov
pop
mov
cmovne
loope
push
aaa
popf
aam
mul
in
cwtl
std
mov
mov
jecxz
mov
lret
call
mov
jne
inc
pusha
add
rcl
out
mov
jmp
repz
dec
repz
add
iret
push
in
jp
leave
enter
pusha
js
jecxz
int3
and
add
mov
adc
sub
test
cltd
xor
int3
mov
pop
fisttps
inc
xchg
mov
cmp
xor
add
and
add
scas
inc
mov
push
xchg
add
mov
cmp
xor
cli
jl
and
xor
das
fcomps
ss
mov
popa
in
adc
pop
fwait
adc
push
das
push
fstpl
gs
arpl
int3
test
popf
sbb
icebp
into
sub
fildl
int
pop
in
in
loopne
pop
scas
push
es
mov
nopl
or
push
popf
and
mov
mov
cmp
adc
mov
es
filds
clc
add
cmp
stos
fcmovb
pushf
mov
js
mov
cltd
shll
cmpl
test
xchg
or
lods
mov
jno
fldt
faddl
andl
data16
repnz
jmp
sbbl
cmp
add
mov
mov
imul
cmp
jnp
fcoms
shrl
and
fidivrs
xorb
xor
jge
mov
sahf
bound
test
daa
pop
imul
in
jl
jbe
add
jle
xor
lods
jae
insb
add
cmp
stos
fisttps
adc
and
adc
sti
rolb
add
add
jg
cmc
or
mov
add
hlt
add
add
mov
mov
or
aam
enter
sbb
sub
rcll
iret
jmp
sub
pop
fmuls
inc
push
adc
dec
ret
mov
insb
jno
push
shr
inc
add
lahf
xchg
rorb
sbb
push
ljmp
jecxz
pop
sbb
sub
pop
adc
daa
loope
cwtl
shr
push
fisttpll
aad
mov
into
fxch
and
xchg
and
pushf
and
mov
push
sbb
xchg
sbb
outsb
lcall
cltd
push
push
ret
sbb
cmp
fs
out
popa
test
adc
sbbb
adc
fsubs
mov
xchg
popa
mov
daa
push
aaa
and
pop
xlat
pop
mov
loope
or
cmpl
ja
mov
pushf
xchg
xchg
sub
mov
movsl
in
sarb
adc
sbb
inc
int
xorb
mov
sahf
mov
aam
dec
test
repz
push
dec
lret
dec
mov
insl
xor
cmp
cmpsb
fcompl
repnz
pop
repnz
iret
lods
xor
sub
mov
mov
or
in
adcl
pop
cltd
mov
xlat
testb
or
and
ss
addr16
sbb
mov
inc
orl
mov
mov
stos
xor
push
mov
popa
xor
pop
icebp
jb,pn
inc
movsb
outsb
mov
cmp
repz
mov
leave
dec
and
mov
js
pop
inc
add
jmp
cvtpi2ps
dec
scas
sarb
or
jae
jl
stos
xor
repnz
iret
and
sub
mov
inc
sahf
loope
add
sahf
mov
leave
fwait
sub
das
xor
dec
mov
pop
scas
xlat
arpl
add
shlb
xchg
test
or
cmp
bound
inc
or
ds
xchg
xor
addr16
movl
fiaddl
pop
or
cmc
gs
cmp
or
sub
inc
jbe
test
xor
jo
push
gs
mov
das
push
stc
mov
xor
lods
jno
and
insb
inc
jl
iret
repnz
in
dec
add
cld
mov
xchg
jnp
dec
mov
rorb
mov
cli
xchg
gs
outsb
negl
mov
push
pushf
mov
sbb
mov
fcmovne
adc
aaa
lgs
mov
insb
sub
call
jno
push
lcall
into
jle
outsl
insl
mov
clc
jno
jbe
push
iret
xchg
mov
aaa
mov
clc
jns
jg
lcall
jmp
push
pop
cmp
xor
repnz
pop
in
ret
add
aas
jbe
adc
fisubs
hlt
outsl
jnp
cs
add
lcall
or
jl
pop
sbb
call
pushf
dec
add
push
paddsb
pusha
ss
leave
mov
movsb
and
mov
ficoml
adc
hlt
mov
jbe
bound
push
repz
xchg
movsl
repz
cmp
sarb
mov
adcl
push
mov
icebp
dec
mov
jg
jge
adc
push
cmp
push
sub
stos
sub
fcmovnbe
in
lods
enter
adc
in
or
loopne
cmpl
mov
dec
adc
inc
adc
lcall
inc
jg
push
ds
lcall
icebp
mov
lret
and
jecxz
jmp
in
bound
mov
in
popa
mov
iret
mov
cmp
rorb
sbb
lock
sarl
test
cmc
ret
cltd
inc
sub
stos
cmp
inc
je
hlt
aam
add
ret
jb
mov
mov
cli
outsb
jb
or
mov
push
sub
das
inc
scas
xor
fiadds
testl
mov
nop
les
lret
je
cmp
loopne
mov
icebp
shll
popf
adc
or
hlt
js
push
outsb
fwait
pop
inc
mov
test
lods
fdivrl
cmp
pop
mov
add
fdiv
cmp
xor
xchg
fcmovbe
pop
mov
mov
pop
cmp
rol
sbb
xchg
jae
sub
repnz
xchg
push
movsl
mov
gs
mov
pop
loope
push
movsl
push
and
mov
pop
jno
and
ficoml
rcl
ljmp
inc
movsl
test
adc
aam
sbb
shll
dec
les
cmp
add
outsb
out
lds
cmpsl
mov
adc
add
add
repz
xor
hlt
mov
sbb
adc
lcall
adc
xchg
in
and
pop
insl
in
bound
je
xlat
stos
popa
lret
push
les
movsl
jecxz
enter
mov
bound
dec
jmp
sbb
xchg
sbb
test
xor
mov
pop
test
or
adc
xchg
pop
subl
push
mov
imul
fcmovne
ss
xor
repz
roll
dec
ds
pop
test
mov
pop
repnz
aam
jg
arpl
xor
andl
mov
insb
push
stc
and
fmuls
add
xchg
repz
mov
mov
mov
call
push
ja
jo
jnp
sbb
dec
pop
adc
imul
ficomps
dec
sub
lret
and
sbb
jl
lea
mov
mov
je
cltd
repnz
fistps
jp
push
out
dec
and
enter
popf
push
inc
dec
mov
js
push
mov
out
and
loopne
outsb
jle
cmpsb
pusha
subps
data16
dec
mov
jns
insb
pop
sub
jno
xchg
stc
mov
ja
pop
dec
popf
xchg
mov
aam
mov
mov
xor
aam
in
pop
cld
scas
fidivrl
push
test
push
inc
js
jno
add
and
xor
dec
or
jp
ret
adc
mov
test
push
inc
ret
push
pushw
cmp
jnp
cmp
pop
addr16
cs
push
adc
jmp
jle
dec
lcall
or
hlt
scas
pusha
cld
cmpl
mov
add
add
push
adc
outsl
jle
push
mov
jecxz
sti
notb
sbb
cli
rcr
gs
sbb
lahf
fildll
in
test
or
jmp
jmp
xor
daa
adc
inc
cmc
fidivrs
inc
adc
sub
xor
sub
rcrl
or
inc
inc
in
mov
mov
or
sbb
xor
xchg
loopne
sbb
ror
insl
xor
xchg
je
pop
aaa
aad
pop
std
lea
je
notb
adc
pop
mov
mov
jb
notb
lret
fcomi
or
mov
test
mov
adc
or
push
rcl
sbb
push
xchg
mov
xor
pusha
lret
xchg
daa
out
adc
inc
ret
lret
fisttpl
add
and
cwtl
jns
sbb
push
inc
inc
jns
arpl
inc
movsb
jae
xchg
cmp
ret
jmp
and
cmp
pop
adc
jecxz
pop
mov
sbb
mov
cmp
lods
xor
jae
imul
mov
mov
subl
addr16
mov
lret
mov
test
incb
adc
xchg
cli
jb
outsb
scas
repnz
pop
mov
mov
cmp
inc
fadds
in
inc
push
movsb
cmp
je
jg
adc
aaa
test
xlat
je
jle
mov
sbbl
dec
loopne
xchg
mov
data16
ror
cmp
jmp
stos
fildll
stos
insb
mov
jnp
jp
loop
mov
push
clc
push
roll
mov
sbb
xor
lahf
movsl
inc
pop
rclb
jp
inc
testb
mov
mov
test
xor
sub
mov
jp
imulb
cbtw
dec
daa
popf
mov
lds
ffree
xchg
xor
jne
std
pop
ss
fnsave
cmc
add
inc
int
dec
jns
outsl
pop
sti
xchg
xlat
lods
xlat
insb
sbb
mov
aam
mov
push
and
sub
dec
pop
repz
xchg
out
movsl
cli
imull
xlat
pop
cld
jg
cwtl
xor
or
dec
xchg
adc
fsubrp
insb
test
imul
lods
ret
push
xor
inc
fmulp
fwait
inc
xchg
pop
adc
pop
je
outsb
mov
imul
mov
mov
mov
hlt
loop
lods
mov
jnp
adc
cmp
in
stos
addr16
jmp
cmp
stc
xchg
mov
mov
ljmp
incl
daa
mov
mov
pop
pop
dec
std
xor
pop
std
push
mov
dec
shrd
sbb
push
je
fwait
push
pop
jnp
add
add
lret
lods
xlat
sti
mov
clc
out
add
hlt
add
add
inc
xchg
inc
mov
dec
or
loop
imul
loop
sub
inc
jae
pop
xchg
ret
fs
pop
test
push
adc
out
adc
cmp
mov
xchg
xor
xor
pushl
rcl
test
out
ljmp
dec
xchg
stos
jp
push
sub
leave
or
pop
xor
jnp
add
rcrb
lahf
sub
or
or
arpl
popa
int3
inc
mov
dec
out
bound
lds
or
xchg
lcall
xchg
insb
push
pop
xchg
or
nop
outsb
pop
mov
test
rcrl
aam
dec
std
outsb
pop
divb
add
inc
push
addl
icebp
mov
jno
lods
jp
ss
sti
xcrypt-cfb
cmpsl
jecxz
outsb
jg
fsubp
cmc
sti
sar
xchg
add
pop
cmp
and
enter
adc
mov
pop
push
aam
lahf
inc
push
movsl
dec
scas
dec
inc
push
sbb
adc
mov
iret
enter
and
sti
test
dec
jae
stos
rorl
sub
in
outsl
sub
cli
cltd
push
pop
in
sbb
pop
add
push
bound
out
push
add
out
xchg
push
inc
and
faddl
mov
push
add
pop
je
cmpsb
mov
inc
enter
jg
test
outsb
lods
iret
or
sbb
cld
mov
push
out
sub
push
xchg
addr16
sbb
cld
jge
dec
fdivr
jno
adc
dec
inc
lea
dec
jne
jecxz
inc
push
sub
lret
test
mov
mov
jo
aad
negl
jns
in
ret
cli
mov
jo
fistpl
mov
xchg
loope
dec
leave
shrb
repnz
add
pop
and
adc
test
push
cld
dec
inc
lods
js
push
test
or
std
xor
add
rcrb
mov
pop
add
aaa
add
xor
mov
mov
js
mov
out
mov
mov
add
rorb
out
es
adc
mov
mov
mov
orb
imul
mov
sti
jmp
scas
rorb
lcall
sarb
and
mov
cmc
sub
xchg
pop
or
mov
dec
jns
jno
call
xor
repnz
jb
es
push
int
mov
aam
and
mov
or
or
sbb
xchg
rcrl
pop
xor
cmc
es
push
mov
lds
push
ret
into
std
mov
sbb
fistps
leave
cmp
test
xchg
inc
mov
and
cltd
mov
pop
in
xchg
ret
les
leave
cmpsb
iret
jb
dec
add
xchg
mov
and
push
shrl
out
testb
es
pop
push
inc
aaa
cmp
pop
push
sti
nop
adc
dec
adcb
je
fldenv
jmp
out
cmp
loopne
jae
cmp
repz
sti
in
and
add
xorl
in
or
cltd
aad
mov
and
negb
sbb
notb
push
pushf
xchg
add
xchg
lods
sub
lods
jmp
mov
ds
pop
xchg
adc
xchg
add
pop
jo
ss
or
inc
fdivs
push
cmp
icebp
mov
xlat
cmp
dec
call
and
cmp
movsb
outsb
in
jp
lods
add
repz
les
cli
cmp
andl
adc
sarb
mov
and
pusha
mulb
jg
lcall
rorb
ret
sub
call
test
push
mov
push
pop
mov
cld
cmp
andps
inc
icebp
cli
jl
sub
adc
xor
adc
cmp
mov
xchg
xchg
in
jae
cmpsb
hlt
repnz
call
xchg
xchg
jnp
test
dec
aaa
push
frstor
xchg
decb
push
leave
xor
lds
inc
jns
pop
inc
mov
sti
mov
mov
push
leave
test
mov
xor
div
sbb
xor
cmp
mov
xchg
out
sub
call
push
add
push
add
inc
jb
xchg
addr16
scas
ret
fidivrs
rorb
repz
cmp
in
pop
and
stos
jne
pop
jmp
xor
jns
pop
cmp
out
movsb
add
add
jno
loop
bnd
fcomi
mov
popf
outsb
add
hlt
add
add
rclb
mov
sbb
rcr
lret
mov
aaa
xor
jmp
inc
es
push
stc
sbb
pop
jl
mov
pop
xchg
sahf
ficoml
stc
sbb
in
adc
inc
dec
bound
sbb
cmp
in
dec
pop
pop
mov
frstor
or
mov
mov
mov
ja
mov
xchg
add
lods
mov
cltd
ret
xchg
jge
xchg
hlt
push
push
addb
inc
inc
pop
cwtl
add
push
test
lahf
jecxz
xchg
push
outsb
xchg
js
sbb
adc
stos
xorb
or
aad
popa
addb
sbb
push
pop
jo
mov
pop
add
in
add
movsl
sub
adc
js
mov
fwait
and
les
jbe
push
in
adc
scas
adc
or
cltd
js
fmul
adcl
roll
in
cmc
xor
dec
jo
and
shll
cld
insl
test
lods
sub
data16
scas
pop
cltd
mov
fnstcw
cmp
shl
dec
in
out
hlt
mov
adc
test
pop
cmpb
cs
jbe
mov
out
cli
mov
sub
testl
push
std
xor
clc
inc
pusha
das
mov
sbb
test
jo
dec
jne
add
mov
push
addr16
nop
addr16
jae
xchg
hlt
dec
ror
push
pop
fstpt
out
mov
sbb
jecxz
adc
mov
orb
cltd
push
stos
dec
add
insb
sub
push
push
or
jb
nop
mov
fnstenv
lret
sbb
push
sub
loope
add
mov
fistps
movsl
adc
adc
bnd
test
jp
sub
jnp
mov
jno
sub
mov
addb
cmp
adc
push
jp
xor
jbe
pushf
fidivs
fiaddl
std
inc
movsl
out
sahf
jecxz
and
pop
push
rolb
sahf
mov
pop
sub
sub
mov
test
jmp
lock
icebp
sbb
or
imul
mov
cwtl
repnz
adc
xor
xchg
cwtl
sbb
pop
mov
mov
push
sub
jmp
push
loopne
in
lcall
mov
fistpll
test
mov
lret
mov
outsb
cmpsb
in
cmp
test
mov
cli
push
decl
add
arpl
cltd
xor
imul
testb
xor
jo
or
push
cs
inc
and
mov
fdivrp
pop
mov
in
shl
fidivrl
jmp
imul
icebp
inc
fidivrl
std
push
out
pop
sarb
in
and
into
popf
mov
hlt
mov
xor
aas
js
jae
in
pushf
jmp
ss
pop
cmc
sbb
lcall
push
or
or
jns
adc
ljmp
in
out
sub
cmp
in
rcrb
shrl
and
jae
ja
aas
pop
inc
sbb
aas
int
mov
dec
mov
rclb
push
mov
aaa
stos
scas
std
mov
imul
push
ret
imul
dec
fildl
and
stos
es
iret
or
rcll
imul
ds
xor
and
in
daa
lds
push
cs
or
sub
jns
arpl
pop
mov
es
out
cmp
mov
lea
push
or
cmpsl
mov
mov
jmp
sbb
popf
sarl
movsb
fucomi
cmp
jp
and
jb
inc
dec
lea
mov
adc
cmpsl
test
sub
pushf
push
outsb
daa
fsubrs
cmpsl
pop
add
xor
xor
sub
xor
cmp
xor
xchg
cmpsb
push
adc
stos
cmp
mov
ret
mov
arpl
fiaddl
sbb
in
loop
popa
je
and
jb
pop
pop
lcall
ja
lahf
push
movsl
sarl
or
jecxz
js
aad
pop
imul
lods
stos
ffree
jne
sbbl
mov
push
mov
in
add
push
cmpsb
fwait
and
sbb
sub
push
testb
imul
and
push
jge
lahf
add
add
andl
ss
in
inc
cmp
jecxz
icebp
filds
add
add
add
push
cmp
mov
jg
fxam
les
fildl
push
out
jne
fcomps
or
shll
mov
inc
push
push
insl
rorb
les
push
cltd
xorb
cltd
out
in
cltd
push
adc
aas
push
ljmp
test
adc
movsl
fdivr
jg
adc
xchg
dec
test
adc
stos
addl
fwait
push
mov
or
ss
roll
shrb
or
fmuls
sub
pop
mov
out
les
das
cmp
in
icebp
cmp
leave
or
test
iret
arpl
or
xchg
jmp
jnp
push
push
cs
mov
pusha
pop
xor
mov
jp
cltd
outsl
push
ret
adc
or
push
shll
xchg
push
arpl
xor
rcrb
xor
cmpsl
insl
xor
push
add
push
pusha
test
aas
out
adc
out
ja
cmp
into
sub
sub
jbe
push
sahf
jae
loopne
shl
and
jo
fs
scas
jo
in
cwtl
fsubr
lock
inc
sbb
sbb
cmp
dec
pop
jp
xchg
enter
mov
jo
in
hlt
es
jge
iret
xor
nop
mov
pop
lock
jns
and
roll
push
testb
jbe
lahf
bound
mov
mov
lret
push
in
push
and
push
mov
imul
rolb
ret
mov
das
jne
push
test
mov
mov
pop
sbbb
inc
sbb
insb
ljmp
pop
in
dec
inc
add
adc
aaa
scas
pop
adc
js
push
js
ss
jb
sub
jl
xlat
pop
lds
ja
xchg
aam
je
mov
and
or
imul
fmuls
push
aad
jl
mov
push
sbb
and
incl
push
cltd
popa
dec
lds
mov
cs
insl
adc
std
cmp
icebp
out
sub
jp
nop
pop
sbb
imull
repz
es
cmp
push
or
mov
fisubs
ret
push
jo
mov
and
lock
add
inc
sub
pop
push
push
adc
sbb
xchg
rorb
fs
pop
xchg
push
scas
pop
push
cmpl
xlat
jg
aaa
cmp
pop
sub
sub
jns
add
int
adc
push
cmp
sahf
in
xor
fildll
add
imul
add
cli
cld
imul
dec
sub
cmp
pop
call
push
mov
hlt
jg
xor
dec
andl
push
insb
xchg
subb
shrl
push
xor
repnz
and
add
dec
fisttps
out
pop
ffree
repnz
add
scas
jb
fists
mov
insl
jb
sbb
pop
clc
stos
sti
xor
jmp
jno
cltd
popf
jl
cmp
jns
push
mov
xor
outsb
push
or
push
movsl
push
sub
sti
bound
out
xchg
dec
sbb
sahf
mov
sbb
sub
or
scas
int3
mov
push
bound
imul
jg
inc
cmp
psrlw
inc
inc
nop
inc
add
push
daa
dec
rcrb
dec
dec
lret
mov
xor
sub
xor
sbb
cmp
push
sub
sub
jecxz
aas
push
icebp
pop
mov
fldcw
mov
sbb
push
jp
push
add
int
push
or
dec
and
add
jnp
pop
inc
testl
inc
mov
ret
hlt
mov
je
adc
xchg
pop
sahf
aas
imul
sbb
pop
je
ds
xchg
push
ja
arpl
aad
push
xchg
in
mov
imul
adc
inc
ds
dec
adc
adc
cli
fbld
loopne
and
mov
xorb
cmp
ret
test
push
out
dec
pop
push
ret
icebp
fs
js
mov
cmp
out
jle
mov
mov
cmp
hlt
insl
lcall
or
cld
sub
jp
repz
and
push
mov
cmp
sarl
popa
into
cmpb
push
std
pusha
int3
xor
aam
xor
stos
mov
jno
aam
es
mov
arpl
jnp
je
push
loope
add
add
xchg
rcrb
pop
roll
lcall
hlt
add
add
jge
sub
scas
into
add
shld
cmp
xor
movsb
ficoml
or
jns
push
inc
stc
leave
movl
jnp
movsb
push
adc
shl
psubd
jne
clc
sub
gs
rclb
loop
jmp
fcompl
in
aad
insl
or
pop
xchg
sahf
push
aas
push
int3
bound
daa
cltd
arpl
outsb
mov
lds
imul
jae
rorl
iret
mov
fstps
pop
jae
dec
fcmovbe
incb
ret
jmp
push
hlt
jg
mov
out
cmc
push
mov
rcrb
movsl
or
add
popa
int
outsb
sti
dec
mov
push
cld
inc
fsubrl
and
in
mov
jmp
out
lcall
call
mov
sub
fildll
sub
fldenv
out
in
xchg
add
xchg
add
sahf
xchg
push
add
js
pop
xchg
mov
dec
jnp
adc
out
data16
sbb
flds
or
lahf
adc
push
fxch
or
testl
mov
lret
mov
loop
negb
or
in
jno
call
jl
sub
jg
daa
push
aas
cmp
jmp
jae
test
cld
imull
xor
sub
enter
outsb
repz
ja
fs
mov
enter
rcl
mov
imul
push
aas
fsubrl
jmp
mov
jmp
dec
insb
sbb
and
cmp
xor
std
jne
stc
push
sub
pop
and
arpl
js
mov
loopne
adc
pop
xchg
in
push
xor
imul
cli
xchg
loopne
aas
out
ss
inc
loopne
or
push
sahf
add
inc
repz
test
push
lods
sti
xchg
dec
inc
add
pop
and
mov
addr16
adc
jae
data16
sbb
loop
xchg
add
int3
jne
jle
jns
enter
lock
and
xor
lock
loopne
sbb
call
gs
push
xchg
rolb
pop
sub
call
mov
dec
push
mov
adc
lds
xor
mov
aaa
add
push
popl
xor
fstpt
pushf
fcompl
sarb
mov
lahf
xchg
test
pop
insb
xor
and
fwait
jne
pop
sub
sbb
cmp
adc
pop
and
xchg
dec
icebp
dec
mov
iret
jle
fs
mov
cli
mov
nop
xchg
lahf
ret
sahf
sti
adc
mov
out
loopne
dec
inc
dec
mov
in
lds
int
add
and
ljmp
aas
sub
jge
in
shlb
ret
lahf
add
mov
and
cmpsl
adc
inc
cmp
dec
add
data16
mov
sub
lcall
pop
adc
push
and
and
ret
andl
mov
inc
shlb
aaa
ljmp
movsl
sbb
out
movsb
adc
add
sub
pop
orl
fistl
and
int3
cmpsl
int3
sub
or
fsubl
inc
pop
push
pop
lcall
xchg
es
pop
push
add
fs
and
popf
mov
jmp
leave
adc
inc
pop
dec
xchg
inc
and
orb
lahf
xor
push
outsl
ret
push
sahf
mov
pop
stos
cmp
adc
cltd
shl
jb
mov
xor
cli
mov
mov
jge
ljmp
sub
scas
dec
push
repz
and
out
jmp
dec
arpl
or
add
scas
sahf
rclb
inc
jg
push
push
ja
es
popa
or
lret
mov
xor
dec
pop
cmp
rcrl
sbb
mov
push
sahf
and
pop
shrb
pop
sub
outsl
sub
in
lds
popf
push
test
clc
push
xchg
mov
aaa
lds
mov
sbb
cs
stc
adc
cmc
out
and
xchg
jo
fcmovnu
lock
shll
dec
push
fbstp
arpl
push
add
ss
sub
aaa
or
cmp
lret
iret
mov
loopne
out
push
ds
mov
sub
mov
je
adc
or
mov
loopne
movsb
push
rcll
add
sub
mov
inc
sti
movsl
cmpl
add
add
addr16
hlt
enter
mov
jne
insb
push
cmp
fs
aas
addr16
jl
mov
shrl
cmp
out
cmp
mov
out
scas
or
fdivr
push
lods
mov
mov
outsl
push
in
and
mov
ljmp
pusha
push
in
and
or
in
push
in
add
sub
adc
xchg
cmp
inc
jmp
ficompl
push
mov
roll
jecxz
adc
insb
js
rorl
iret
mov
pusha
outsl
ret
test
lods
cltd
in
mov
mov
jns
dec
in
in
ja
jg
sub
fdivrs
sti
out
mov
sub
icebp
movsl
sbb
jle
rcl
adc
test
sub
cmp
outsb
stc
sbb
enter
fmull
push
stos
inc
fadd
jmp
xor
lcall
aas
or
data16
and
shlb
jp
jnp
mov
inc
inc
xchg
insl
aad
adc
fnstenv
lahf
jne
insl
mov
in
inc
in
addr16
xchg
jg
mov
xor
cmp
push
mov
fdivs
dec
mov
dec
fsubs
or
pushf
mov
mov
pop
jecxz
ficompl
in
ja
scas
cmp
fwait
jb
pop
mov
push
clc
mov
and
shrb
js
mov
jg
in
sbb
popf
sub
pop
jnp
int
and
mov
ret
icebp
inc
lret
dec
ljmp
jle
sub
sub
push
cli
andl
cmp
and
dec
sub
push
mov
dec
or
mov
mov
pop
xor
and
loopne
aam
ret
inc
inc
sub
insb
xchg
sub
or
mov
jmp
testb
imul
stos
idivl
mov
movsb
ror
push
test
add
and
lock
dec
pop
es
sub
ret
outsl
int
leave
gs
stos
fwait
repnz
fwait
pop
push
mov
faddl
sti
push
ljmp
xor
lds
jl
push
pushf
ss
add
std
push
and
pop
pop
push
mov
add
rcll
mov
cwtl
mov
xor
sub
pop
je
mov
mov
pop
lods
push
pushf
xchg
fwait
sbb
pop
jmp
pop
pushf
testb
hlt
push
scas
bound
je
lahf
push
cwtl
lahf
mov
daa
adc
xor
push
addl
mov
or
mov
mov
enter
enter
pop
jmp
and
out
imul
fdivrs
jne
xchg
lods
jo
fnstsw
mov
add
mov
or
xor
jecxz
jg
pop
loope
sbb
nop
loopne
mov
mov
fdivr
sti
and
pop
cli
cmp
push
and
mov
dec
add
sub
sbb
and
adc
mov
fcmove
adc
scas
leave
fidivs
test
mov
mov
ljmp
pop
rcrb
cmp
xor
setnp
xor
inc
adc
sub
sarb
out
lods
xchg
push
or
mov
jge
addr16
rclb
add
cltd
dec
mov
sub
mov
idivb
es
xor
in
int3
xchg
arpl
fs
pop
das
sub
xchg
aaa
jl
cmpsb
mov
add
jo
and
enter
push
adc
add
ds
cmpsl
mov
insb
out
xor
jne
push
inc
mov
fildll
adc
js
jmp
xor
jbe
clc
inc
in
xchg
cltd
cmp
xchg
jo
inc
bound
movsb
ljmp
xchg
pop
and
sahf
movl
rorl
dec
mov
sub
iret
stos
test
sub
cld
mov
aad
stos
aam
sarl
fsubl
test
les
jbe
sbb
stos
jbe
add
and
cmp
repnz
xchg
mov
in
xchg
imul
dec
cmp
je
arpl
adc
inc
mul
int
stos
or
mov
loopne
shll
sbb
push
xchg
cmp
dec
mov
test
stos
or
mov
adc
push
inc
fldt
cld
add
add
or
mov
std
mov
fs
int
add
hlt
add
add
out
arpl
dec
xor
and
or
dec
jbe
enter
cmp
nop
test
push
movsb
cwtl
xchg
push
sbb
push
cmpsb
outsb
inc
pop
loop
or
fistpll
mov
and
or
inc
call
hlt
out
and
mov
push
fimuls
aas
data16
mov
dec
out
stos
jp
aas
inc
mov
mov
sub
dec
ficompl
jne
and
dec
rolb
aaa
adc
xchg
dec
sbb
out
daa
adc
stos
push
inc
pusha
pop
cmp
mov
pop
jge
loope
inc
pop
cmp
xchg
sti
test
xor
mov
dec
sbbl
gs
inc
cmpsl
xor
stos
icebp
lea
pop
call
enter
in
inc
mov
jmp
pop
arpl
xorb
pop
imul
sbbb
in
stos
lret
or
mov
push
pop
mov
movsb
out
inc
add
lods
data16
xchg
mov
ljmp
mov
add
jg
xor
jp
fsubrp
or
popa
jecxz
mov
lcall
mov
or
jge
lock
inc
xor
add
sbb
pop
jle
push
push
pop
cmp
fwait
sub
pop
xchg
cmp
jae
aaa
jge
addr16
loopne
ret
test
mov
js
cmp
arpl
enterw
out
stos
adc
test
inc
cli
dec
mov
adc
jns
add
cmp
call
xchg
xor
cmc
cwtl
add
inc
add
push
outsl
sub
call
or
mov
xor
loopne
add
sti
jmp
cli
adc
call
mov
adc
push
sarl
pushf
push
ss
pop
xchg
sbb
mov
pop
mov
rol
stos
lret
push
sahf
insb
cld
xor
jbe
inc
sub
imul
inc
pop
inc
jno
pop
push
pop
in
push
xchg
or
jmp
xchg
adc
sbb
mov
mov
jae
sti
imul
mov
adc
out
mov
aas
fimull
sbb
jle
ret
lea
ja
cmpsl
inc
insb
dec
orl
xchg
sbb
into
inc
into
jecxz
push
jnp
cmp
xor
out
cmp
inc
shll
shlb
ret
xchg
ja
mov
lods
mov
xchg
and
arpl
or
xor
in
and
inc
fidivrs
and
insb
pop
mov
xchg
sub
add
xchg
sbb
lret
loopne
mov
cwtl
test
adc
jo
ljmp
scas
mov
dec
rcll
xchg
xchg
lahf
lea
aaa
sub
aam
popa
cmp
fwait
out
or
test
or
testb
cmp
das
cmp
ds
js
lods
push
xchg
cmp
out
pop
fistps
jecxz
push
dec
xlat
data16
gs
jo
adc
je
lock
inc
mov
imul
lods
hlt
ds
aam
add
mov
mov
xchg
movsb
and
fptan
cmp
lret
xchg
test
push
cmp
inc
fdivrl
fbld
jae
and
fldenv
addr16
je
dec
xor
pushf
pop
mov
fistl
ss
inc
or
cmc
pop
test
aam
inc
in
push
or
rcr
adc
adc
ret
scas
dec
ret
inc
imul
cmpsb
out
pop
push
push
aas
mov
mov
or
addr16
ss
adc
js
loope
dec
jne
lods
cwtl
ffree
xchg
or
pop
fcoms
pop
aas
push
pop
push
xchg
fninit
cmp
push
mov
or
mov
test
mov
ficoms
adc
inc
arpl
call
fsubr
shrl
xorl
rorb
push
jecxz
xlat
push
pop
loope
imul
sti
notl
daa
xor
loope
fimuls
dec
cmp
sub
stos
and
sub
bound
add
enter
subb
scas
test
or
aaa
int
fiaddl
scas
mov
mov
imul
dec
mov
test
add
jle
xor
std
or
aad
pop
pop
jb
std
mov
je
es
xchg
jecxz
jo
sub
add
add
push
dec
shr
jg
push
mov
into
sbb
repz
hlt
add
add
push
push
ds
and
add
or
and
mov
push
test
jg
dec
mov
jp
sub
dec
mov
cmp
pop
push
cmp
fidivrl
mov
push
xchg
or
das
rorl
aam
push
and
xchg
js
movb
aad
mov
sbb
fisttpll
dec
nop
cmpsl
jne
insb
int
mov
mov
and
sarl
push
cmpsl
sbb
push
lcall
mov
jecxz
stos
mov
fsubs
inc
xchg
int3
outsl
sub
dec
std
movsb
jmp
pop
into
jmp
scas
sub
sbb
outsl
cmp
pushf
ss
pop
mov
dec
outsb
xor
cmp
jmp
pop
test
inc
mov
mov
pop
sub
addr16
sahf
mov
dec
push
dec
out
insb
or
fucomp
mov
fstl
out
inc
sahf
jno
inc
pushf
dec
mov
mov
in
sub
pop
nop
mov
xchg
pop
mov
sti
xor
mov
pop
push
or
repz
arpl
and
inc
loop
push
dec
andb
mov
push
iret
sub
jl
loop
push
stos
adc
mov
xchg
mov
push
nop
pusha
sub
inc
add
or
arpl
popf
adc
mov
pop
pushf
andl
aad
dec
cmp
rol
mov
test
mov
daa
mov
xchg
adc
or
ret
mov
push
jbe
xchg
and
jle
addr16
lea
adc
das
sub
sahf
xchg
or
push
push
es
push
xchg
out
test
std
adc
pop
pop
jbe
mov
aad
sub
push
pop
mov
movsb
pop
add
imul
push
ljmp
adcb
adc
and
and
clc
or
mov
cmp
dec
addr16
imul
sti
ljmp
out
fstpl
jae
cmc
mov
push
lret
jb
int3
xacquire
imul
lea
dec
movsb
mov
inc
lret
mov
negl
scas
test
aam
lret
cmc
test
movsl
xlat
icebp
call
add
loop
fs
and
inc
push
or
jo
lret
ret
mov
jae
daa
jmp
popf
repnz
imul
arpl
inc
inc
adc
nop
int
iret
jbe
xchg
decl
sub
add
xchg
andl
fistps
mov
add
cmp
adc
sbb
mov
xchg
sub
cmp
enter
scas
popf
push
sti
es
out
ja
loopne
pop
xor
outsb
loope
lret
daa
mov
sbb
in
std
icebp
lock
les
mov
outsl
sub
mov
xor
cmpsl
fwait
repz
daa
testb
sti
sub
xor
dec
fdivp
das
push
popa
lret
mov
mov
pop
stc
inc
push
cmpsl
mov
cltd
lcall
mov
je
repz
add
xchg
and
mov
xor
mov
adc
inc
sbb
pop
inc
adc
add
mov
lahf
into
pushf
into
dec
test
and
fldt
in
jp
inc
and
dec
sub
popa
xor
dec
fbld
pop
inc
jmp
lret
repnz
xchg
jg
mov
inc
rorl
inc
pushf
mov
insl
cwtl
stc
ret
aaa
cmp
adc
and
movsb
mov
push
mov
pop
or
rorb
icebp
mov
lea
pop
call
xchg
xor
enter
or
jge
aad
push
out
push
fidivrs
repnz
out
test
lods
sbb
push
movsb
pop
mov
popf
adc
insb
xorb
rorb
movsb
filds
pushl
inc
adc
stc
mov
fwait
push
and
cwtl
popa
or
jle
insb
adc
xor
push
adc
xchg
sub
pop
popa
inc
cmc
mov
test
mov
cmp
ret
sbb
xchg
scas
test
jb
int3
or
mov
push
scas
popa
push
cld
loope
mov
jmp
pop
xchg
clc
cltd
pop
jge
push
mov
jb
daa
icebp
movlps
xchg
jae
push
std
fwait
sar
adc
lds
xchg
add
xchg
out
mov
roll
mov
hlt
ds
aam
push
pop
fdivrl
sahf
mov
xchg
push
lock
test
je
test
pop
add
add
movsl
push
movsl
shl
divl
cmp
add
add
add
and
push
or
mov
mov
cmp
adc
and
loopne
mov
jle
mov
add
sbbb
push
lea
mov
out
push
mov
and
mov
ret
sub
xchg
lcall
stos
aad
out
inc
jae
lret
and
movsl
cwtl
or
call
stc
nop
insb
movsl
dec
ja
pop
fidivrs
test
cli
jl
lock
fs
lahf
xor
push
xor
es
std
addr16
icebp
mov
xor
lock
mov
mov
jnp
gs
jl
mov
ljmp
lea
adc
lcall
mov
stc
repz
xchg
pop
mov
pop
push
imul
iret
pop
jg
sub
cmp
cwtl
lods
leave
or
in
xor
fs
jns
mov
adc
shrb
or
fimull
in
lock
inc
mov
popf
sub
ds
icebp
cmc
mov
mov
pop
jle
fwait
push
inc
mov
dec
mov
push
xchg
sar
dec
fwait
mov
dec
or
jne
or
dec
stos
mov
sub
mov
cld
out
sub
add
repz
stos
aam
divb
xlat
in
adc
ret
js
pushf
pop
adc
jo
daa
sbb
xchg
adc
inc
aam
jle
pop
inc
cs
cmp
cmp
add
pushw
and
ss
lods
or
xor
mov
gs
jo
stos
xor
cmp
mov
xor
inc
in
sbb
iret
and
pop
mov
pop
lret
cmpl
faddl
and
mov
nop
pavgb
out
and
lods
jo
xchg
call
jo
pop
notb
sbb
fisubrl
xor
xor
and
dec
out
stc
sub
xchg
mov
xor
or
rdtsc
mov
std
imul
add
lods
mov
dec
popa
int
pop
das
xchg
aam
vmread
les
jbe
pusha
xor
orb
aad
pop
popa
scas
imul
mov
loopne
sbb
rcrl
imul
sbb
fidivl
mov
inc
xchg
or
outsl
in
iret
jns
fistl
xchg
jb
out
or
mov
sub
divb
mov
cmp
ret
and
dec
dec
cmpsb
sbb
push
mov
inc
fs
push
ror
fs
mov
aad
je
adc
mov
ja
shll
mov
xchg
adc
or
push
je
lods
dec
ss
in
sbbb
popf
out
mov
repnz
icebp
test
movsl
dec
lret
mov
mov
idivb
rorl
lcall
rolb
xchg
cmp
jnp
into
mov
loopne
lock
mov
push
ja
sub
icebp
or
stc
fwait
stos
or
sti
cmp
test
popa
int
movsb
hlt
leave
aam
leave
cli
out
pusha
mov
in
test
int3
pop
or
sub
insl
jbe
sub
xchg
pop
mov
inc
inc
adc
pop
sub
jb
nop
lds
jle
cld
mov
inc
rorb
mov
sbb
mov
adc
push
mov
or
mov
fwait
push
push
xchg
inc
mov
aam
and
xor
xor
das
ret
adc
push
insb
in
add
mov
scas
mov
in
lods
mov
ret
hlt
icebp
dec
sti
popf
cmp
mov
xlat
and
popa
cld
cmpsl
jp
daa
cs
xchg
pop
pusha
lea
push
mov
xor
call
ds
sub
hlt
mov
ret
imul
stc
cli
sub
pop
clc
icebp
outsb
mov
or
sbbb
xchg
pop
mov
fisttpll
and
dec
mov
mov
sbb
sbb
jg
mov
xchg
mov
mov
mov
xchg
insl
ror
movsl
xchg
and
out
es
jmp
sahf
stos
fwait
mov
daa
movb
in
in
push
popa
mov
adc
pop
inc
stos
push
mov
bound
into
lret
pop
testb
adcb
lret
insb
mov
std
add
push
add
add
mov
