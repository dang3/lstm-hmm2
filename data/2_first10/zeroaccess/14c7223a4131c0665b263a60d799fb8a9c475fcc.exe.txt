push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
dec
mov
jle
jg
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
lods
pop
xor
inc
loop
mov
out
cmp
xchg
pop
js
push
int
mov
lods
xchg
inc
daa
stc
jns
pusha
repnz
lret
add
inc
mov
cmp
and
icebp
pusha
push
imul
out
stos
sub
je
push
minps
fcmovb
mov
dec
fstpt
mov
sarl
adc
test
into
adc
xchg
loope
push
cmp
mov
or
cld
mov
mull
or
in
pop
inc
sbb
imul
pop
lods
and
mov
mov
mov
cmp
lcall
adc
and
in
jg
adcl
mov
mov
sub
jne
cmp
hlt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
jo
enter
jle
cli
jg
jle
and
mov
mov
ret
dec
ret
aam
ss
xchg
test
pop
sti
test
iret
cld
loop
dec
pop
add
jmp
mov
xchg
gs
aaa
add
enter
sub
xor
shll
xor
testb
mov
inc
rolb
popa
adc
movsb
negl
addb
xchg
clc
lods
inc
inc
mov
rcrl
addr16
xor
mov
dec
push
aad
xchg
iret
jb
add
repnz
xadd
or
cmpsb
mov
sbbb
cs
scas
hlt
jae
push
outsl
fistps
pop
cmc
pop
xchg
nop
pop
ljmp
sbb
fstp
or
jg
mov
push
mov
xchg
inc
iret
popf
imul
add
fcoml
xor
arpl
add
mov
cmc
mov
xor
pop
push
mov
jmp
mov
xor
and
mov
jecxz
addr16
mull
popa
in
and
sbbl
dec
imull
or
lret
mov
fsubrs
pusha
movsb
test
test
mov
add
push
sub
sbb
mov
lea
mov
mov
xchg
lret
cld
idivl
push
sub
mov
xor
jnp
jbe
lea
les
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
jmp
cli
jg
jle
push
popf
mov
jae
imul
in
int3
outsb
inc
push
inc
outsb
mov
cs
out
pop
ret
xchg
jg
xor
mov
movsb
or
insl
jno
pop
mov
mov
cld
mov
mov
cmp
pop
jle
inc
fwait
vcvtdq2ps
push
ficompl
xor
daa
jecxz
ljmp
scas
inc
arpl
mov
dec
std
cltd
mov
xchg
ja
push
xchg
mov
inc
ret
or
imul
cmp
mov
push
cli
movsb
fbstp
push
fs
andb
clc
cmpsl
xchg
loope
pop
fidivs
js
outsb
xchg
mov
cmp
sbbb
xor
aam
jbe
xchg
mov
lods
inc
outsb
xor
scas
adc
cmp
repz
mov
dec
or
pop
sub
addl
and
mov
cmp
icebp
outsb
inc
js
in
and
out
xchg
or
sub
jbe
xchg
pop
mov
out
pusha
pop
cmp
sub
sbb
rcl
dec
loopne
ss
jbe
call
add
dec
xchg
mov
inc
fabs
mov
xorb
add
repnz
repnz
lds
and
cmp
jle
sarb
mov
mov
xchg
pop
dec
mov
inc
and
nop
fldt
cmpsb
add
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
lods
dec
cmpb
cli
jg
jle
xor
rcl
xchg
arpl
std
mov
sub
push
fidivrl
mov
aam
push
fists
push
sub
pop
int3
pop
push
imul
pop
mov
pop
mov
push
fdivrs
add
call
sub
sub
out
add
das
mov
inc
js
scas
and
sub
mov
xchg
dec
testl
jecxz
jne
mov
adc
mov
scas
sub
inc
push
scas
mov
stc
test
imul
ss
mov
divb
push
icebp
insb
inc
pop
into
jmp
sbb
push
jecxz
sbb
addb
in
push
sbb
std
mov
push
aaa
mov
or
sub
popf
sub
adc
aas
sub
xchg
rclb
xchg
dec
and
fwait
push
lock
fwait
add
xchg
js
cmc
dec
icebp
repz
mov
and
repz
jmp
and
dec
in
xchg
call
sub
push
imul
mov
imul
gs
mov
dec
addr16
mov
add
jge
jns
sub
mov
loope
pop
xchg
into
sub
inc
fdivrs
ret
loop
mov
cmpsl
sbb
push
jmp
jmp
xchg
mov
push
jo
adc
dec
xor
sub
js
jle
jg
jle
test
adc
xchg
js
adc
aam
mov
loope
jp
xor
lods
ljmp
mov
fsubr
int
mov
in
nop
push
scas
call
lods
pop
add
icebp
mov
mov
xor
icebp
dec
mov
jo
pop
cwtl
and
cmp
mov
add
mov
mov
fnstcw
enter
icebp
lret
mov
popf
cmp
mov
cmp
jbe
jb
stc
push
sub
ret
cmp
in
adc
xchg
adc
cmp
or
or
xchg
ljmp
es
test
add
jnp
testb
fstpl
jnp
addl
adc
and
in
movsl
jge
sub
inc
xchg
repz
jno
mov
stos
ds
ss
or
out
jno
cmp
jnp
fisubl
jl
mov
repnz
pushf
jmp
jo
jns
hlt
mov
stc
dec
pop
jo
push
push
sbb
pop
adc
sti
push
xor
addr16
inc
pop
sbb
ss
sub
jae
xchg
hlt
mov
sub
imul
shrl
inc
mov
xor
fwait
cmpsb
insb
notl
sbbb
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
mov
inc
mov
cli
jg
jle
inc
xor
adc
xor
popa
lock
jno
mov
stc
add
js
dec
sub
push
xchg
mov
jp
xchg
dec
cwtl
inc
push
test
push
jg
and
mov
aam
mov
mov
cmp
jmp
ja
sub
jl
or
mov
pushf
jbe
sarb
aad
cltd
stos
jno
pushf
push
pop
arpl
xlat
popa
sarl
add
add
addr16
cmp
or
out
xlat
and
aam
xchg
xchg
or
mov
imul
push
jns
and
push
jge
icebp
jp
lret
pop
dec
out
pop
ja
out
sar
cmpsl
movsb
mov
mull
sbb
out
xchg
out
sbb
mov
jp
je
mov
ja
or
fstl
lahf
jecxz
popa
ds
xchg
jno
repnz
loop
cwtl
nop
inc
loopne
cmp
mov
cmp
jmp
add
rcr
call
cmp
pop
xor
nop
mov
popf
cwtl
sub
insb
clc
icebp
cmpsl
psubusw
jge
imul
lret
sub
sarb
mov
mov
fimull
push
xor
sub
inc
pop
xlat
testl
out
mov
mov
pop
pop
outsl
stos
cmpsb
push
pop
and
mov
aas
test
dec
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
pop
push
pop
jle
cli
jg
jle
and
inc
fbld
inc
cmpsl
or
xchg
lret
pop
popa
mov
movsl
stc
mov
mov
mov
loope
jo
sbb
sarb
js
mov
mov
jp
jbe
scas
cwtl
xorl
test
push
std
inc
in
cld
sub
inc
fisttps
sbb
cli
sub
cltd
lret
mov
xchg
xchg
dec
enter
sub
aam
mov
fcoml
dec
mov
rcrb
enter
inc
add
mov
loope
adcb
outsb
fcom
xor
cmp
mov
add
push
dec
aas
sbb
aam
out
cmpsb
push
push
rolb
out
mov
ljmp
xor
outsl
js
add
decb
aam
push
mov
test
out
jp
loope
or
jmp
sahf
adc
repnz
jae
cld
dec
mov
rcrl
fcmovb
or
adc
sbb
test
xchg
filds
aad
popf
inc
test
icebp
lret
mov
sub
mov
pusha
sbb
dec
ja
imul
mov
shlb
cmpsb
xchg
mov
pop
clc
jp
mov
ss
outsb
sbb
cmp
enter
pop
fldl
sub
gs
pop
shrl
sub
sbb
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
sbb
mov
es
pop
jl
int3
fs
loopne
aad
push
mov
or
or
jle
adc
insb
insl
lock
mov
and
arpl
ss
jb
mov
clc
mov
sbb
sub
in
test
and
orb
adc
repnz
inc
pushf
popf
fwait
jmp
mov
cmc
jp
pop
dec
adc
sbb
xchg
inc
das
lds
jp
in
push
dec
fdiv
bound
adc
mov
jnp
jmp
addr16
mov
bound
mov
es
ljmp
movsl
movsl
sahf
sbb
push
cmp
out
mov
jp
sbb
pop
cmp
leave
sub
jl
aad
cmp
mov
sub
mov
sub
iret
push
xchg
sahf
xor
fwait
test
mov
pop
mov
std
sub
or
mov
xor
out
and
mov
xor
xor
test
fildl
jnp
jge
fbld
jo
cltd
movsb
add
mov
or
scas
inc
call
and
push
xchg
je
dec
adc
int3
dec
addb
adc
pop
imul
dec
mov
lock
mov
inc
push
cmp
or
cmp
inc
dec
adc
push
mov
add
jmp
cmc
dec
and
jno
push
mov
dec
mov
jle
cli
jg
jle
adc
add
pop
or
jno
jl
add
loopne
js
mov
cwtl
mov
outsl
or
xor
test
push
mov
add
testl
add
jge
daa
push
orb
outsl
inc
fcompl
outsb
imul
insb
das
ss
ds
and
pop
pushf
shr
xlat
inc
rolb
mov
fldcw
mov
push
adc
push
lret
addr16
lods
js
push
into
into
arpl
loopne
stc
sahf
cmpsl
or
pop
mov
mull
push
mov
out
ljmp
out
dec
adc
mov
out
icebp
cmp
out
and
sti
push
pop
das
and
inc
es
out
je
icebp
mov
dec
fmul
cwtl
xor
pop
pop
or
sbb
mov
pop
jle
inc
sub
ss
sub
ret
call
adc
xchg
jle
xor
jnp
inc
aam
jmp
inc
add
arpl
shll
mov
pop
xor
shll
aas
imul
stos
ss
xchg
pop
sub
aaa
ljmp
sbb
stos
dec
gs
lock
xor
cmp
out
shlb
shlb
mov
lret
mov
push
cmc
out
xchg
scas
pop
stos
xor
fldt
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
lods
push
mov
jle
jg
jle
pop
call
sbb
xchg
pop
dec
aas
fs
nop
pop
lahf
xor
je,pn
in
pop
add
ficomps
adc
mov
inc
arpl
movsl
ret
pop
shll
jl
lret
jge
decb
stos
nop
xor
scas
xchg
jne
adc
push
inc
ret
inc
jae
and
int3
inc
pop
cmp
nop
lods
insb
mov
enter
repnz
clc
pusha
sbb
mov
icebp
mov
pusha
push
cwtl
fcmovb
pushf
mov
stos
lds
int3
pop
inc
jmp
mov
pushf
loopne
sbb
pop
ljmp
fbld
add
fnstenv
mov
ret
push
scas
fdiv
sub
mov
movsl
jmp
stos
jp
xchg
push
xchg
iret
add
inc
shl
mov
call
scas
cltd
pushf
xor
ljmp
arpl
cmp
push
jns
jae
loope
mov
xor
test
jo
xchg
inc
data16
insl
and
push
leave
data16
shrb
mov
shr
push
mov
and
call
xchg
gs
or
add
mov
in
in
mov
fsub
leave
jbe
testl
fcomps
das
shlb
xchg
fldln2
lods
and
mov
loop
popa
arpl
push
pop
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
push
pop
xchg
test
cli
jg
jle
rcrb
and
test
mov
pop
cmp
enter
int
dec
int
push
movsb
and
mov
mov
gs
call
arpl
jl
sbb
add
adcl
mov
std
add
das
jecxz,pt
xchg
cmp
push
mov
jl
jno
movsb
lods
push
xchg
push
cmpsl
xor
mov
cld
xchg
inc
xchg
cmp
or
cmpsl
out
xor
or
jmp
bt
or
sahf
outsl
adc
daa
rcrb
dec
subb
mov
cld
adc
push
cmp
lcall
jp
imull
ja
add
bound
daa
mov
test
or
xchg
sbb
or
jl
mov
gs
clc
cmovo
pop
mov
fdivl
test
jge
cmc
inc
jne
test
shrb
push
adc
les
ljmp
sahf
pop
cmpsb
jo
jmp
jl
sub
sbb
jb
repnz
push
mov
in
xchg
xor
pop
pop
adc
jns
scas
fsubl
aad
cs
aad
mov
hlt
add
movsb
pop
push
sbb
shrb
cwtl
outsl
add
inc
daa
cs
aam
loop
xlat
xchg
push
pop
cmp
sbb
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
mov
jg
jle
pushf
insb
pop
xor
sbb
adc
xchg
clc
pop
xor
dec
js
jmp
mov
push
inc
fldt
test
xchg
jge
dec
fs
call
lcall
cmp
stos
xlat
cli
xchg
aam
ror
loop
jmp
aas
nop
mov
push
push
cltd
jnp
xchg
in
lret
pushf
insl
dec
out
lret
fs
mov
daa
aam
xor
lods
out
imul
xor
adc
sub
adc
ljmp
in
and
xlat
fs
iret
ljmp
sbb
mov
pushl
or
inc
into
cmc
int3
jns
shrb
lret
rorl
movsl
mov
in
leave
outsb
add
and
negb
jge
rcrb
push
in
aas
sub
pop
sbb
pop
mov
inc
adc
inc
stc
rclb
mov
fs
xchg
roll
inc
jle
xchg
adc
sbb
adc
push
lret
cltd
or
sub
rcrb
sub
test
cmpsl
mov
inc
jecxz
sub
out
cmp
sub
data16
xor
dec
lahf
cmpsl
fucomi
mov
jnp
int
lods
mov
and
adc
cmpsb
rcr
xor
popf
enter
pop
negl
loope
sbb
and
hlt
jnp
lcall
in
jecxz
rcll
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
js
jl
cs
jle
jg
jle
jo
dec
push
add
insl
outsl
jne
sbb
inc
sub
out
inc
mov
aas
mov
out
inc
rcrl
add
rclb
xchg
int3
push
adcb
das
icebp
insb
lods
or
xchg
fs
and
lds
ret
gs
lods
dec
div
dec
test
ja
add
addr16
mov
fadds
lock
mov
loope
in
daa
fstpt
movsb
sub
xchg
stc
add
test
mov
aad
mov
int
cmp
arpl
mov
cmpsl
adcb
lret
std
daa
icebp
mov
js
push
mov
dec
dec
fs
repnz
sbb
negb
mov
bound
lods
mov
ret
idivl
or
cmc
pop
incl
dec
push
loopne
addr16
and
adc
lret
imul
in
push
int3
jb
adc
test
sbb
ret
aaa
pop
mov
ret
adc
ror
and
mov
push
insl
pop
or
les
loop
imul
jge
jo
mov
sbb
movsb
fistl
xchg
add
sbb
mov
out
ljmp
insl
cmp
cwtl
xor
jae
xchg
shl
dec
pop
jae
call
stos
add
push
sbb
in
loop
bound
jbe
mov
shlb
ffreep
xchg
scas
cld
jno
cltd
inc
xchg
push
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
lcall
jle
jg
jle
adc
mov
lds
or
pop
negl
imul
mov
test
jno
cmp
fiaddl
dec
sahf
inc
repz
ja
add
xchg
fimull
pop
fsubs
sti
cld
dec
sub
shlb
jo
push
test
or
subb
push
cmpsl
xchg
shrl
and
inc
adc
imul
add
push
mov
mov
scas
sar
xor
sti
adc
dec
aam
loopne
cmp
jb
adc
fwait
or
les
mov
test
fsubrs
icebp
mov
mov
fcompl
repz
out
dec
aad
inc
les
mov
add
mov
shlb
ljmp
xchg
les
pop
inc
xor
ficoms
insb
sbb
inc
insl
cmp
daa
scas
fstpl
mov
into
repnz
mov
lea
aam
mov
jl
jno
outsl
push
lea
dec
test
push
xchg
bound
jp
outsb
xchg
je
inc
sub
push
enter
add
incl
insb
inc
dec
hlt
mov
inc
mov
mov
int
lods
pop
mov
dec
add
cmpsb
adc
push
inc
stc
es
std
sub
or
xor
pop
adc
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
adc
inc
or
cli
jg
jle
aaa
fs
or
jp
sub
repz
imul
mov
push
jmp
cli
adc
in
sahf
sub
jae
test
lds
sub
orl
adc
fldt
mov
leave
lea
je
dec
sti
das
xor
movsb
pushf
adc
sbb
cmpl
mov
cmp
mov
xchg
sbb
jae
push
mov
fmuls
das
leave
popa
clc
cli
fildll
cmpb
xorb
je
xor
push
cltd
sub
mov
mov
add
pop
std
jle
lahf
sub
pop
stc
scas
or
sbb
and
ss
loop
inc
sub
mov
iret
shll
test
sahf
mov
dec
pop
cmp
or
and
xchg
repz
ret
test
ret
mov
sbb
jecxz
outsb
jle
mov
fsubs
out
dec
pushf
add
xchg
sbb
jmp
rorb
ret
adc
cmp
fwait
pop
jmp
sbb
and
lds
ljmp
cmc
sbb
out
cltd
test
mov
lret
or
add
and
mov
sbb
scas
pop
cltd
add
int3
dec
ret
mov
js
int3
scas
add
dec
inc
addr16
jo
imul
dec
mov
cld
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
std
sub
jg
jle
bnd
and
ss
pusha
insl
faddl
out
cmc
gs
and
loope
pop
movaps
rcrl
push
subl
fcompl
mov
add
fcom
jg
push
ljmp
fisttpll
sarl
push
out
loop
lahf
or
xchg
insl
mov
mov
pusha
arpl
mov
inc
mov
pop
es
sub
adc
xor
and
pop
jge
aaa
flds
xchg
arpl
test
clc
inc
and
out
jo
pop
pusha
adc
jle
scas
sub
popa
cmpsb
fistpl
lock
hlt
push
pop
jp
lds
scas
cmpb
in
leave
or
mov
inc
fldenv
daa
insl
pop
dec
push
mov
and
fsts
imul
xor
stos
adc
out
fisttpll
leave
mov
inc
out
cli
and
sub
insl
nop
pop
and
mov
enter
ljmp
out
outsl
sub
add
and
dec
jns
repz
out
fisubl
ret
cld
xchg
and
js
shlb
call
pop
inc
inc
push
insl
cmp
mov
pop
outsb
mov
xchg
shr
roll
jae
or
push
decl
aas
icebp
je
pop
mov
data16
pop
test
sets
xorl
cmp
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
adc
push
jle
cli
jg
jle
push
imul
inc
rolb
popa
scas
and
cltd
and
cmpsl
xorl
sub
inc
jbe
lret
sbb
dec
xchg
cmp
mov
rcrl
mov
or
repz
jne
dec
movsb
push
cmp
push
lea
adcl
xor
push
pusha
das
or
xor
mov
lods
decb
icebp
push
pop
mov
sub
pop
scas
jge
daa
push
cmc
in
jge
ret
loopne
mov
cwtl
pop
push
repz
push
mov
mov
fwait
or
test
loopne
mov
test
mov
test
daa
cmc
and
jnp
in
mov
test
push
or
mov
inc
in
mov
pop
xchg
xor
push
int3
lret
aam
lods
or
scas
mov
mov
xchg
test
sub
pusha
lret
mov
cmp
into
or
fmull
jmp
movsb
movsb
jg
js
mov
inc
xlat
shr
dec
sub
icebp
sbb
cs
int
dec
cmp
out
jecxz
test
dec
f2xm1
test
add
mov
push
fdivl
fninit
lcall
insb
jl
inc
or
mov
xor
jge
mov
push
mov
rcrl
mov
out
pop
xchg
jns
or
adc
test
pop
aam
call
mov
mov
add
pop
jmp
add
mov
adcb
cmp
cli
jg
jle
es
cmp
rolb
icebp
jo
je
mov
jne
repz
bnd
jno
repnz
inc
scas
mov
sbb
xor
gs
bound
cmc
stc
arpl
outsb
int3
nop
push
pop
cmpsb
repz
popa
pop
dec
addr16
js
leave
dec
push
in
xorb
sbb
repnz
repz
xchg
xlat
inc
flds
inc
jecxz
adc
daa
dec
mov
jg
xor
jnp
jns
pop
or
sub
mov
fsubr
movsb
call
mov
adcl
outsb
sub
inc
sbb
push
lret
arpl
iret
pop
add
fimuls
je
fs
mov
jns
add
lret
sbb
add
cmp
addr16
movsl
sahf
leave
ret
pop
sahf
sub
in
add
lods
lds
xorps
sbb
lret
stc
out
shrl
mov
and
pop
mov
fiaddl
or
sti
addr16
nop
int3
stos
mov
jmp
cld
idiv
rolb
sti
mov
cmp
mov
minps
cmpsl
inc
shll
mov
popa
movsb
sbbb
out
mov
enter
test
sahf
push
add
test
es
std
ss
adc
clc
imul
clc
sbb
xor
pop
or
add
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
out
test
jle
pop
jl
jle
jecxz
rep
arpl
les
push
stos
xor
out
fldl
add
and
jecxz
into
ss
xor
sti
add
pop
sbb
leave
ljmp
fnstcw
aas
roll
cld
xor
mov
imul
inc
arpl
push
sbb
and
out
adc
jge
outsb
in
leave
jno
pop
pop
orl
jp
xchg
fisubl
sbb
lock
gs
rorl
jno
ljmp
test
adc
shrl
push
inc
add
sbb
sbb
aaa
xchg
shll
daa
xchg
pushf
sub
push
cwtl
sub
scas
push
addb
fldt
fnsave
popa
mov
sbb
repz
sub
mov
insb
or
push
or
frstor
cmp
rcll
xor
pop
rcr
dec
cmp
dec
mov
subl
mov
adc
mov
shrl
and
mov
cmc
cmp
pop
cmp
sbb
mov
mov
xchg
mov
fisttpl
cmp
sti
aad
out
pop
mov
popf
mov
fstps
push
sbb
fmuls
fidivs
jg
out
pop
repz
or
loopne
mov
ret
jge
mov
dec
xor
inc
cmp
jmp
dec
leave
adc
test
cmp
sub
and
popf
dec
adc
ljmp
or
jnp
ds
sahf
jp
mov
adc
mov
das
addr16
sub
int
test
mov
push
in
loopne
fcoml
push
scas
inc
ja
add
xor
pop
das
clc
cmpsb
or
lds
inc
lcall
mov
sub
or
shl
fdivrs
add
inc
fildll
sbb
lods
leave
leave
sbbb
test
hlt
das
arpl
dec
xor
dec
rorl
xchg
cmpsl
shl
mov
fwait
dec
mov
push
inc
add
subl
mov
xor
enter
cld
aas
push
add
xor
xchg
imul
lret
sbb
popf
stos
mull
and
into
mov
cmpsb
xchg
out
aaa
faddl
pop
push
xchg
in
push
in
pop
or
subl
dec
mov
ret
add
jp
cmpsl
adcb
xor
sbb
mov
bound
push
stos
xchg
jb
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
sub
and
jle
pop
jl
jle
and
testl
outsl
lock
pop
rcrl
mov
dec
mov
cmp
inc
rcrb
and
cmp
jns
pop
movb
or
xor
dec
sub
lock
sub
jns
add
xchg
or
jo
lcall
sub
push
fcmovne
pop
inc
ror
outsl
lcall
mov
lock
cltd
jnp
outsb
rorb
scas
iret
mov
insl
push
xorl
cmp
enter
es
ret
add
pushl
xchg
cs
imul
sbb
movsb
add
stos
test
mov
out
loope
and
sub
push
repz
xorb
mov
mov
lds
sti
pop
shll
push
mov
jb
sbb
lods
aam
rorb
jbe
cmp
jge
scas
int
or
xchg
mov
ja
adc
aas
dec
mov
std
adc
stos
test
mov
pop
inc
jecxz
es
push
lret
outsl
roll
inc
pop
xlat
jmp
jnp
inc
adc
cltd
mov
pop
das
sbb
mov
das
loop
stos
ficoml
sub
adc
xchg
iret
or
ret
ds
clc
shrb
cmpsb
lods
dec
mov
pusha
cmp
shll
mov
mov
pop
and
jge
and
adc
repz
cs
dec
mov
mov
or
sbb
inc
les
xchg
jo
xor
cmp
ds
rcll
mov
js
pop
or
shll
inc
or
sahf
push
aad
jno
mov
lea
pop
mov
dec
jmp
xchg
imul
mov
fisubs
lds
rorl
lods
adc
out
push
push
movsl
repz
sub
hlt
pop
pop
jecxz
mov
push
sbbl
ds
and
mov
mov
ret
dec
adc
ficompl
pop
mov
stos
jle
inc
jmp
inc
pop
cmp
ds
sti
int
push
repz
sub
mov
mov
jp
dec
imul
mov
addr16
cmpsl
xor
nop
mov
aad
cld
test
test
pop
lret
rep
pop
enter
cs
popf
lods
test
add
lods
sub
mov
dec
rorb
shll
fldl2e
mov
andl
lods
test
icebp
pop
scas
mov
mov
push
jge
dec
in
jp
sbb
inc
jns
pushf
dec
mov
xchg
xchg
addb
or
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
jecxz
cmp
pop
jle
pop
jl
jle
push
jne
stc
pop
or
test
sbb
incb
xchg
movl
sub
mov
xchg
mulb
push
xchg
fimuls
adc
mov
xchg
enter
pop
mov
add
jo
andb
fbld
shll
cwtl
popa
cmpsb
insb
xchg
sbb
pop
push
add
les
sub
xlat
add
and
out
mov
mov
outsl
mov
aas
pop
add
cmp
mov
xchg
pushf
push
loopne
jo
push
push
test
jp
shll
jbe
xlat
retw
jmp
adc
out
jmp
pop
insl
mov
nop
cmp
push
pop
outsl
and
cmc
add
popf
jae
fildll
cmp
xor
and
mov
bnd
roll
test
pop
fldenv
shll
mov
lret
out
rcr
dec
and
out
mov
popf
sbb
repz
cli
cmp
idiv
icebp
or
adc
test
cmpsb
ss
push
mov
or
add
fnstenv
lods
call
xchg
lods
or
stos
mov
xor
mov
dec
stos
pop
xor
orl
mov
ret
cmc
int3
inc
imul
imul
cmp
xchg
ds
outsb
insl
push
je
pop
shll
shll
test
fists
int
pop
leave
jge
inc
xor
add
mov
data16
and
push
lods
test
repz
rcrb
inc
or
mov
dec
outsl
test
mov
pop
sahf
add
pop
mov
cmc
inc
cs
fdivl
cmc
push
xor
subb
insb
xchg
cmc
iret
clc
mov
cmp
mov
pop
jge
mov
ds
dec
fisubrl
mov
in
lock
test
xchg
jno
rcrb
iret
mov
pop
js
outsl
push
mov
imul
mov
mov
jl
mov
sub
popf
pop
mov
xchg
aaa
out
push
cmp
xchg
or
insl
mov
adc
outsl
pop
and
pusha
add
inc
push
jb
loope
es
add
push
in
aam
aam
jmp
mov
jo
inc
cs
push
and
dec
sbb
pop
roll
iret
sarl
jecxz
xchg
cmc
je
cmc
cmpsl
sbb
cli
lods
imul
add
push
mov
mov
mov
push
jle
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
or
jle
pop
jl
jle
jo
je
jmp
paddq
sbb
cmpsl
icebp
jl
outsl
pop
and
lahf
mov
stos
hlt
sti
popf
sub
jmp
mov
jl
stos
sub
mov
jne
push
dec
adc
imul
push
mov
dec
jno
leave
jb
loopne
or
and
inc
lahf
addr16
adc
dec
test
loope
enter
xchg
jnp
push
xor
mov
call
jbe
sub
addr16
cmp
mov
mov
adc
test
jno
mov
out
push
pop
pushw
mov
push
pop
mov
out
mov
imul
aad
mov
lcall
rcrb
jb
adc
aaa
scas
inc
xchg
or
outsl
adc
in
imul
jl
and
mov
ds
jb
mov
or
add
mov
sbb
rolb
cmp
test
pop
sub
mov
addr16
push
or
mov
dec
cwtl
cwtl
mov
sbbl
ret
repz
das
icebp
inc
in
js
je
insl
setp
test
fcoml
pop
std
loope
nop
cltd
dec
dec
cs
mov
pop
mov
dec
daa
sub
xor
push
lods
arpl
cmp
fadds
or
stos
cs
lds
or
adc
ds
sbb
adc
gs
xchg
nop
pusha
fsubl
cmp
adc
rolb
pmulhuw
push
pop
in
sub
or
xor
fldl
leave
stos
int
out
pushl
fsub
xor
scas
or
arpl
mov
push
mov
xchg
stos
push
pop
mov
inc
and
jns
fcomps
inc
pop
sub
clc
fstpl
loop
mov
call
and
xchg
mov
sti
cmpsb
cmp
xchg
mov
jns
ficompl
stos
leave
jo
iret
jnp
inc
mov
loop
fdivrs
jecxz
mov
or
ds
aas
mov
push
js
shrb
int3
pop
mov
popa
adc
aas
insl
and
sbb
inc
fldt
clc
mov
pop
and
out
cmp
sbb
jno
sti
fnstsw
sbb
sbb
xor
mov
sbb
mov
mov
adc
shrb
jge
shl
dec
clc
hlt
loopne
sbb
test
rol
ja
sbb
mov
and
jp
xor
add
mov
add
add
adc
push
cmpsl
jns
jmp
aaa
mov
or
aad
rolb
cmp
pop
jge
imull
dec
inc
fs
rcr
xchg
stc
inc
pusha
divb
clc
jmp
add
dec
popa
jno
jne
xor
jle
arpl
pop
sbb
pop
jl
jle
dec
lods
push
mov
push
sbb
cmp
inc
leave
mov
cmp
push
outsb
roll
cmp
push
mov
xorl
stos
pushf
fwait
cmp
in
inc
hlt
mov
arpl
dec
in
mov
push
mov
dec
sahf
ror
mov
jmp
cs
mov
int3
xlat
push
push
enter
push
ss
push
cs
mov
pusha
jp
ja
and
push
add
jnp
fmull
fcomip
xor
pushf
xlat
call
mov
mov
aaa
dec
fs
addl
sub
sbb
imul
imul
insb
das
add
pop
jl
pop
cmp
mov
sub
and
push
or
call
jbe
nop
mov
test
jp
std
movsb
cmpsl
out
test
fdivl
mov
sti
pop
adc
popa
bound
lock
cld
push
jl
mov
das
cmp
push
enter
jecxz
stc
fbld
or
xchg
repnz
cmpsl
loope
in
rclb
cli
add
adc
fiadds
or
xchg
mov
arpl
or
cmp
cmp
sub
loop
unpckhps
mov
fs
das
aam
sbb
jb
sub
aas
in
rcll
jl
xchg
stos
pop
jecxz
add
fnstcw
cmp
mov
pop
mov
gs
test
enter
sub
shlb
xlat
ficoms
dec
int
jbe
jmp
and
sbb
add
mov
bound
mov
jmp
mov
outsl
call
jno
gs
inc
aam
es
daa
push
pop
andl
mov
insb
jmp
push
mov
loope
mov
xor
ja
outsl
sub
lahf
pop
out
mov
adc
cmp
push
adc
push
stc
dec
jp
mov
lahf
dec
or
cmpsl
cmpl
cmpsl
and
jb
xor
test
or
pop
mov
sbb
cs
inc
jnp
inc
pop
fstpt
lds
jne
add
js
cmc
das
cld
mov
test
lcall
addr16
call
sbb
sahf
cwtl
fsubrs
sub
out
jmp
cmp
mov
idivb
push
or
push
sub
mov
pop
lahf
insl
push
sbb
mov
add
stc
and
cli
push
mov
pusha
out
push
mov
cwtl
push
stos
stc
enter
ret
cmp
mov
stos
mov
lret
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
jge
mov
jle
jl
jle
in
imul
subb
es
gs
mov
lret
popf
inc
sbb
adc
fistpll
jae
addr16
arpl
in
lcall
dec
push
push
insb
pop
push
cmpsl
push
inc
mov
pop
and
stc
add
scas
leave
or
pop
out
clc
lahf
xor
cmpsb
or
adc
ret
add
pop
push
test
hlt
movsl
neg
aam
push
imul
leave
push
cmp
adc
in
test
sbb
and
fidivs
sub
mov
dec
mov
popf
fstl
mov
rcrl
mov
jp
cltd
sbb
pop
ds
mov
ret
push
insb
mov
popa
loopne
cld
loop
dec
movsb
sti
cmp
adc
sub
mov
dec
shlb
inc
fists
scas
sub
xchg
push
pop
cld
lea
fld
xchg
pushw
pop
pushf
xchg
and
mov
mov
lods
jbe
mov
int3
mov
xlat
mov
mov
sbb
fsubs
pop
cmp
je
mov
sub
repz
out
adcb
inc
in
jecxz
cmp
adc
rcr
fwait
inc
imul
add
or
push
pop
or
cmp
out
pop
mov
add
sub
movsb
in
inc
cltd
dec
sbb
lods
xorb
xchg
in
xchg
fs
sub
aad
sub
jmp
je
lds
mov
dec
sbb
pop
clc
mov
mov
ds
stc
mov
mov
push
sub
jle
xchg
repnz
mov
add
clc
outsb
loopne
add
out
nop
pop
adc
pop
std
imul
pop
add
pop
push
dec
fdivrp
cltd
lods
arpl
inc
add
fmul
mov
sub
hlt
push
in
lods
inc
outsb
popf
cli
xor
lcall
inc
popf
lret
stc
jecxz
scas
sub
pop
xchg
movsb
xchg
mov
aam
jnp
stc
in
inc
subl
ficoml
out
test
cmp
gs
mov
test
into
daa
mov
xor
jecxz
push
xchg
je
mov
out
outsl
scas
sahf
jb
mov
mov
sbb
mov
push
lret
mov
js
pop
jnp
cmp
jno
daa
imul
test
push
mov
push
std
push
jbe
shl
push
std
imul
bound
cmp
cwtl
imul
das
inc
in
cmp
pop
mov
lret
cmp
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
loope
pushf
mov
jl
jle
imulb
mov
or
xor
pop
imul
mov
out
lcall
lock
sbb
sub
test
aad
push
adc
mov
push
mov
inc
sbb
add
dec
dec
frstor
sub
fucomi
mov
repnz
sub
hlt
fidivl
lods
inc
inc
out
imul
push
mov
mov
xor
lahf
push
call
fmuls
jp
push
pop
jno
sub
fldl
orl
cmp
push
aaa
addb
shrb
ja
pop
mov
cmp
pop
arpl
cs
sbb
adc
imul
push
rorb
adc
ret
sti
gs
adc
push
inc
and
mov
or
dec
outsb
shll
pop
movsl
xchg
dec
aaa
xlat
push
into
leave
mov
and
cmp
and
les
push
or
mov
pushf
aad
dec
imul
mov
and
loopne
fucomp
cmpb
jecxz,pn
sbb
test
pop
sti
cmp
xchg
dec
xor
adc
dec
rorb
push
dec
dec
mov
push
stos
cmpsl
int3
xchg
sub
test
or
mov
xor
and
les
enter
je
sub
xchg
sbb
mov
mov
mov
mov
xchg
in
bound
movsb
out
pushf
shlb
repz
add
out
aam
cmp
mov
push
movsb
jno
cwtl
mov
add
mov
mov
or
jno
dec
decl
inc
sub
dec
cld
cmp
mov
inc
jp
pop
rol
cmp
aaa
nop
xor
fwait
stos
jns
in
adc
push
jmp
sbb
out
dec
cmc
and
scas
mov
xor
fisttpll
pandn
add
loop
mov
xor
xor
mov
add
dec
insb
sub
test
xchg
cmc
inc
insb
push
cmp
pusha
out
fisubl
lahf
js
out
cmpsl
sbb
orb
cmp
rcrl
sti
jns
imul
test
or
ret
sahf
repnz
xchg
aad
xchg
mov
and
daa
mov
jg
rol
pop
cmp
cmpsb
cld
and
add
ret
adc
mov
or
xchg
lret
pop
test
cmp
add
cwtl
nop
psubd
mov
hlt
xlat
pusha
test
mov
pop
push
js
xor
xchg
rclb
arpl
ret
ss
lret
mov
scas
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
mov
jle
pop
jl
jle
xchg
stos
pusha
sbb
mov
aad
jle
rcrl
loop
mov
shl
scas
out
mov
add
pop
adc
push
fwait
cmpb
insl
iret
into
or
mov
push
ret
sti
mov
and
jnp,pn
push
insb
sbb
int3
mov
out
dec
mov
mov
dec
lahf
jnp
aad
mov
mov
fcmovnb
and
sub
data16
adc
das
mov
pop
mov
add
push
adc
js
xchg
cmp
mov
lods
test
jg
out
xor
inc
xchg
inc
fisubrl
ret
pop
jecxz
mov
fs
in
and
decl
mov
jge
pop
inc
push
add
cmp
adc
es
ljmp
leave
ret
jle
outsl
sbb
div
pusha
mov
sbb
or
not
jo
iret
cltd
xchg
ljmp
xor
mov
and
lcall
gs
mov
fs
inc
jns
iret
jne
fwait
or
sbb
lret
jbe
or
sbb
adc
loopne
iret
add
dec
aaa
stc
in
fcomi
lret
dec
lock
push
out
lods
arpl
mov
pop
ja
bound
repnz
and
xchg
imul
shll
push
jae
inc
sbb
lods
fistpl
sub
fistps
ficomps
xchg
add
pop
jmp
xchg
push
cld
sahf
test
popl
pop
sub
bound
cmp
fidivl
das
mov
mov
xchg
mov
inc
push
inc
insl
or
cmc
test
mov
lds
push
popf
aaa
test
mov
xchg
add
ret
cld
shlb
push
loopne
lret
lcall
or
lret
adc
out
stos
mov
shrl
mov
fildl
mov
xchg
mov
inc
xchg
lds
pop
popf
test
mov
add
mov
loopne
inc
adc
mov
adcb
push
mov
aad
push
cld
popa
cmp
xchg
fstpl
pop
sbb
and
sbb
cmp
mov
dec
inc
jmp
jbe
cmp
shrb
dec
scas
sub
mov
xchg
sti
xchg
je
test
loopne
jle
movsb
jne
mov
dec
lret
push
ds
xchg
cmp
imul
and
mov
jl
xor
or
fists
int
xchg
cmp
cmpsl
jb
sub
cmp
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
sbb
mov
jle
jl
jle
xchg
je
add
mov
arpl
out
imul
add
sub
cmpsb
rolb
lods
and
ljmp
push
insl
or
lds
mov
jae
xchg
nop
ret
or
push
pusha
dec
ror
jo
popa
mov
shll
jle
ja
mov
push
in
aas
shl
pop
ja
daa
sbb
test
mov
into
loope
hlt
push
stos
loopne
into
idivb
loopne
jmp
jp
dec
xchg
jmp
mov
pop
js
sub
mul
jmp
push
cli
mov
sub
push
add
push
jmp
sub
xor
popf
call
test
imul
pusha
cmpsl
xor
test
lods
lret
jbe,pn
je
jb
movsb
dec
fdivs
fldl
mov
dec
adc
dec
or
xchg
xchg
imul
into
dec
push
pop
jmp
mov
mov
inc
stc
incb
dec
pushf
mov
test
cld
sub
cmc
or
stos
stos
adc
aam
imul
call
xchg
xchg
jno
xchg
call
jecxz
out
dec
mov
leave
clc
divb
int
xchg
jno
jge
adc
ss
push
lret
pop
push
xchg
leave
ret
jp
outsb
sbb
scas
lods
stos
repz
shll
cmp
rolb
aaa
lods
sbbb
lcall
lcall
jns
push
outsl
xor
loop
insb
jl
hlt
ljmp
or
clc
xchg
jmp
cmp
addr16
push
push
js
inc
and
jecxz
mov
sbb
dec
cmp
lahf
and
mov
xor
adc
fldcw
push
dec
mov
xor
mov
shrl
jmp
adc
repz
ret
mov
mov
shlb
arpl
gs
inc
clc
sub
cmp
sbb
mov
and
aas
mov
cmp
das
call
adc
push
sbb
add
adc
pop
mov
or
mov
mov
cmp
push
cmc
cmp
jbe
out
xchg
out
aas
mov
js
push
fadds
mov
cld
jmp
mov
mov
and
xadd
push
cwtl
jne
lods
mov
psubd
or
fisttps
into
mov
aaa
jbe
ljmp
insl
xchg
aas
arpl
shlb
adc
or
xchg
mov
loope
daa
or
dec
push
movsb
pusha
push
and
inc
pop
loope
in
in
bound
fmul
hlt
enter
xchg
push
imul
idiv
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
sub
shrb
jle
pop
jl
jle
mov
ret
pop
sbb
inc
xorb
dec
test
in
les
cmc
repnz
leave
xchg
lret
addl
dec
jno
cs
cmp
sub
lods
add
adc
pop
testl
bound
push
add
lock
xchg
xchg
ret
pop
pop
and
and
fdivs
add
inc
in
daa
xlat
adc
mov
bound
dec
push
inc
fidivs
sub
dec
mov
ror
lods
and
ds
icebp
cli
jp
frstor
xchg
mov
or
inc
bound
and
mov
mov
loop
mov
mov
rol
xor
inc
xor
sub
and
leave
lds
xor
leave
icebp
sub
iret
pop
add
push
sarb
inc
sbb
cmp
repnz
adcb
sbb
mov
xchg
jmp
imul
test
xchg
xor
mov
xchg
scas
dec
jge
xor
jecxz
mov
pop
jg
jns
cmp
inc
sbb
mov
nop
shll
lods
sar
xchg
inc
fsubrs
or
shll
mov
ds
leave
push
mov
adc
mov
xchg
or
lahf
jg
lret
test
neg
jnp
xor
cmpsb
lahf
xchg
sub
and
mov
sub
fisttpll
or
or
jbe
or
cs
insl
jne
mov
adc
fiadds
test
aaa
mov
ficoms
popa
mov
or
sti
mov
in
jge
int
sbb
xchg
lods
xor
xchg
mov
movsl
lods
jbe
inc
mov
out
xchg
mov
sub
jo
ljmp
es
lock
rcrl
es
mov
sub
fistpl
ret
int3
lea
sti
mov
xchg
dec
mov
inc
test
pop
bnd
jno
xor
mov
inc
call
mov
daa
xor
xchg
and
mov
imul
inc
jmp
or
mov
adc
sahf
nop
into
movsb
outsb
ja
push
cli
mov
sbb
bound
sub
mov
dec
sub
sbb
push
lcall
call
cmp
adc
pop
dec
mov
sbb
rol
dec
int3
and
push
jo
movsl
mov
in
pushf
sbb
pusha
shrb
in
lods
xchg
sub
clc
jae
stos
xchg
and
cmpb
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
push
mov
jle
jge
jle
ficomps
xor
arpl
mov
daa
mov
sbb
xor
push
movsb
push
inc
xor
out
adc
adc
pop
testb
call
js
lret
mov
out
in
std
les
dec
lods
jbe
outsb
mov
sbbb
mov
mov
dec
adc
mov
xchg
dec
in
ret
out
imul
mov
incw
ret
sbb
xor
sub
xor
imul
or
rcpps
sbb
pop
add
mov
inc
mov
xchg
xor
test
fcomi
adc
aad
cwtl
cmpsb
sub
shll
je
movsb
adc
add
jbe
mov
sbb
mov
loop
dec
cwtl
adc
shlb
aaa
sbb
fisubrl
test
xchg
aad
ss
aas
into
mov
pop
bound
push
pop
push
outsl
cmpsb
cmp
pop
adcb
jo
mov
outsl
loopne
xchg
fcmove
pushf
push
push
lahf
pop
cmpsl
imul
nop
loop
arpl
pop
test
imul
icebp
pop
adc
ljmp
pop
mov
shlb
push
ja
js
out
inc
mov
icebp
pop
jl
xor
lret
ljmp
mov
pop
mov
jne
movsb
icebp
sub
push
stos
jmp
jns
addr16
loop
lock
pop
ret
insb
out
cmpsl
scas
and
add
cmp
add
sahf
add
je
rorb
jbe,pn
loop
cmc
idivl
cwtl
jnp
sbb
sub
sub
and
pop
sub
out
imul
adc
int3
jno
scas
or
repz
mov
cwtl
push
outsb
inc
or
or
outsb
scas
mov
out
lea
or
ljmp
inc
repz
jne
ds
jo
and
push
bnd
pop
sbb
fistpll
jno
add
in
xorl
xor
scas
jle
sub
xor
mov
in
push
ja
sub
jbe
clc
popa
dec
pop
or
push
cmp
enter
inc
inc
jo
push
clc
mov
mov
or
mov
mov
cwtl
jb
add
or
sub
mov
je
xor
insb
and
jae
mov
fld
pusha
adc
ljmp
dec
jns
push
nop
cmp
ja
xor
aad
mov
es
cs
jl
mov
test
movsl
cld
mov
xchg
ret
stos
data16
jp
mov
cs
dec
add
stc
mov
pushf
adc
hlt
push
inc
xchg
push
mov
repnz
push
cmp
shll
es
jo
xor
ret
mov
lods
in
jbe
out
sbb
movsl
push
pop
xchg
xchg
adc
xorl
xchg
mov
sbb
fwait
mov
push
cltd
inc
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
xchg
je
shll
pop
ret
jbe
adc
dec
sbbl
je
inc
ljmp
sub
cmp
sahf
add
add
in
int3
out
adcl
out
outsl
movsl
mov
lcall
mov
repnz
dec
adc
mulb
mov
cmpsl
adc
out
mov
aam
cmp
lods
repnz
testb
pop
loopne
push
and
mov
push
lcall
mov
or
push
aaa
jg
pop
out
sti
sub
and
es
or
push
sbb
mov
insb
push
cmp
xor
mov
jl
push
xchg
testl
cs
dec
lds
mov
lods
sbb
push
cmc
xchg
add
sbb
clc
sbb
in
jg
pop
xor
mov
add
and
es
sub
into
shll
mov
push
in
pop
add
adc
sahf
imul
mov
add
dec
mov
xor
or
and
fsubs
jmp
inc
rcrl
ret
bswap
loope
adc
das
and
sub
xor
pop
mov
xchg
int
mov
popf
pop
push
adc
inc
adcl
mov
xor
rclb
mov
sbb
xchg
mov
push
add
push
adc
pop
adc
fwait
cmpsb
inc
icebp
out
cli
test
aas
xchg
jmp
and
and
or
nop
jecxz
scas
or
lods
je
inc
aam
mov
push
pop
mov
lds
xchg
jecxz
mov
xchg
mov
and
aas
rclb
shr
out
sub
lock
jg
adc
mov
cmp
cmp
push
xchg
jge
inc
lcall
push
int3
repnz
push
repz
shlb
rcrl
xchg
or
lret
push
jbe
inc
lahf
sbb
fcmove
bound
lock
movsb
std
add
rcrb
prefetcht0
pop
fidivrs
jge,pn
and
dec
repz
cs
inc
pop
ds
js
enter
das
rorb
movsb
sbb
lahf
and
cmp
pop
pop
xchg
icebp
jnp
mov
xchg
data16
je
mov
fsubl
gs
fs
pop
ljmp
cmc
test
inc
test
jecxz
movsb
lods
mov
loope
dec
lods
mov
aad
inc
jge
imul
movsl
outsb
sbb
int
mov
ljmp
mov
int
jmp
adc
mov
add
cmpsb
sbb
cltd
lret
dec
jmp
ja
fcmovnu
add
xchg
ds
pop
insb
mov
mov
and
insl
xchg
rclb
popf
sahf
enter
jp
fistps
outsb
sbb
in
xchg
out
std
dec
mov
add
icebp
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
stos
xchg
mov
jp
jle
mov
test
loopne
setge
cwtl
lods
pop
sub
and
popf
mov
clc
jp
and
popf
inc
xor
mov
out
out
sub
in
hlt
fmul
lods
fisubrl
dec
sti
mov
sahf
add
inc
aad
lds
in
inc
lds
or
icebp
inc
adcb
js
inc
adc
rorb
nop
inc
sbb
nop
push
lods
bound
add
mov
push
pop
push
pushl
jne
orb
push
scas
inc
sti
hlt
fidivrs
xchg
xor
aas
es
mul
popl
add
xchg
lret
fidivrs
pop
jns
aad
insl
scas
or
fnstenv
das
sub
daa
mov
ret
hlt
pusha
mov
scas
add
fstpt
aaa
ljmp
dec
test
pop
lret
outsb
and
xchg
cs
mov
shll
add
imul
add
ja
icebp
dec
xor
or
sub
jns
dec
lret
leave
arpl
daa
popa
inc
jle
sbb
and
imul
lods
mov
sti
inc
jmp
or
pop
add
mov
loop
fcoml
adc
xchg
inc
out
cmp
and
popl
fcmovnb
and
jmp
sbb
mov
fmul
cltd
cmpsl
stos
xchg
add
sub
push
mov
pop
inc
mov
repz
cmp
inc
aad
xchg
add
and
pop
xchg
lds
sub
dec
xor
dec
fldl
fsts
jnp
lods
or
daa
add
pop
rep
mov
rclb
mov
cwtl
dec
inc
mov
xor
popa
idivl
sub
repnz
aaa
in
rcll
sub
mov
in
ret
lods
out
mov
lods
and
or
sbb
hlt
scas
cmpsl
xchg
push
std
jae
cld
ficoml
or
test
int
hlt
or
xor
cmp
shl
sub
shlb
out
sti
dec
imul
data16
dec
popa
sub
lds
test
add
sti
ret
add
mov
lods
mov
test
add
arpl
fwait
and
push
aad
inc
lahf
push
insb
flds
das
out
sbb
jne
push
or
icebp
lea
shrl
fiaddl
std
movsl
adc
aam
je
cltd
or
ret
out
shlb
lahf
outsb
inc
push
mov
adc
sbb
js
dec
push
pop
xchg
popf
nop
fldl
stos
outsb
ja
repz
sub
rcl
lret
aad
xor
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
jnp
jg
push
aas
jle
sub
jle
dec
xor
repz
lods
nop
xor
loop
imul
sub
adc
ljmp
scas
adc
call
dec
cmp
imul
movsl
xor
jmp
xchg
sub
xchg
sbb
sbb
imul
inc
add
shrb
xor
test
test
addl
or
out
les
inc
add
xor
xchg
das
dec
add
test
adc
aaa
sbb
mov
test
and
xchg
cli
xacquire
enter
nop
mov
mov
mov
std
jmp
xchg
pop
mulb
stc
dec
outsb
out
out
and
xchg
imul
push
repz
aad
mov
icebp
out
jl
lret
notl
jnp
push
in
sub
popf
enter
jmp
add
and
inc
mov
dec
ss
vcvtsd2si
xchg
xor
addl
xchg
pop
sbb
ljmp
dec
jne
lods
rcr
test
mov
aas
sub
xor
test
fs
inc
xor
fdiv
arpl
sbb
inc
add
mov
nop
and
cli
sbbb
out
cmp
mov
daa
jne
cmp
hlt
rorl
mov
jge
fwait
xchg
add
addl
mov
call
les
xchg
push
fisttps
adc
sub
test
add
inc
outsb
scas
jae
enter
and
dec
mov
jge
xchg
lahf
sub
cmp
xor
mov
iret
adc
jo
adc
sub
xchg
aam
sahf
fbld
inc
and
xchg
xchg
popa
xchg
std
xor
fmulp
imul
mov
xchg
pop
sti
mov
popf
xchg
cmp
sahf
sub
loop
test
testb
xor
mov
bnd
lret
xor
mov
pop
pop
and
ficompl
pop
scas
cs
dec
outsl
mov
push
jmp
fstp
pusha
aas
sbb
inc
mov
mov
and
cwtl
jo
clc
push
test
add
mov
int3
leave
add
je
push
jns
js
pop
inc
dec
jae
cmp
fwait
add
js
test
iret
in
lods
mov
jmp
sub
jb
mov
outsl
xchg
daa
int3
cli
lds
outsb
icebp
les
hlt
out
mov
xlat
mov
inc
mov
icebp
cmp
inc
add
mov
cld
clc
enter
pop
bnd
ljmp
lds
pop
outsl
test
test
and
and
pushf
mov
cmp
fsts
pop
stc
in
aad
out
cmp
jmp
pop
sbb
sarl
add
sub
lock
adc
scas
fldt
and
pop
mov
dec
negl
insb
in
push
test
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
jp
cmp
mov
js
push
or
push
and
test
lock
xchg
mov
sub
jmp
or
mov
mov
fwait
jb
test
aad
rcll
jg
dec
lahf
pop
xor
lret
jmp
mov
mov
sub
jae
fdivrl
test
lea
fstp
in
scas
roll
lahf
iret
mov
lahf
push
jmp
clc
jne
sti
cmp
cmpsb
or
lods
and
fidivs
cmp
sarl
xchg
fwait
xor
mov
mov
sub
mov
or
cmp
subb
mov
imul
jne
std
in
pushf
add
stos
mov
cmpsb
jno
outsl
clc
pushf
lret
test
movsl
xorl
and
inc
imul
xor
sbb
das
stc
pop
mov
fucom
push
push
js
in
das
frstor
lret
repnz
movsl
adc
mov
inc
es
clc
xchg
push
loop
add
mov
scas
xchg
repnz
cs
scas
clc
jae
cltd
sub
insb
push
in
sbb
xchg
or
test
pop
sbb
or
mov
pusha
das
fidivrs
add
pusha
mov
push
pop
imul
inc
xor
insl
lods
sub
testb
lcall
out
sbb
jg
es
inc
pop
and
push
jb
loope
add
cmp
push
ret
pop
mov
fwait
iret
jp
lcall
cltd
mov
fs
cmpsb
in
push
pop
mov
sub
and
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
push
jle
mov
sbb
pop
jle
stos
pop
nop
xorl
mov
mov
into
mov
sub
inc
or
lcall
loop
add
xor
push
cwtl
mov
adc
shlb
fldenv
out
or
cmpb
mov
imul
or
push
pop
pop
push
cld
pushf
jbe
aad
ja
jge
mov
mov
sbb
sbb
or
popa
pusha
mov
sbb
sbb
dec
inc
loope
fwait
xchg
mov
into
xchg
sti
out
cs
nop
and
scas
outsl
stos
jnp
loope
leave
push
jecxz
sub
fs
insl
out
std
icebp
mov
xlat
and
mov
lock
scas
mov
daa
cmp
scas
js
ficomps
daa
scas
cli
jg
push
in
or
add
dec
je
mov
lret
push
inc
cmp
xchg
out
add
and
movsb
hlt
adc
inc
lcall
pusha
fistps
fcmove
test
ret
outsl
dec
jnp
dec
mov
cld
sub
subb
fcmovne
cs
xchg
in
xchg
inc
shlb
shll
repz
jecxz
pop
cli
fwait
sub
or
push
hlt
adc
push
mov
shll
xchg
popa
inc
cltd
cwtl
rorl
pop
inc
ficoml
les
leave
push
lods
cmp
cwtl
pushf
inc
enter
cwtl
dec
mov
lods
sbb
out
lret
dec
pop
dec
mov
les
in
sahf
sub
stos
cld
cmp
int3
dec
outsb
lds
out
mov
lret
cmp
pop
mov
xchg
xlat
call
and
shll
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
xor
mov
push
incb
hlt
or
out
pop
adc
mov
lret
call
jmp
lret
popa
addr16
adc
mul
pop
sub
dec
inc
and
add
roll
in
inc
cmp
nop
or
test
out
add
xchg
and
dec
adc
mov
aaa
addr16
sti
fnstcw
pop
ljmp
out
fdivl
fdiv
mov
and
xchg
roll
or
leave
out
pop
mov
das
inc
cmp
add
jle
and
jle
add
mov
push
pop
fcompl
imul
mov
ret
data16
stos
pop
cmpsl
cmp
xchg
or
arpl
pop
iret
mov
mov
mov
jo
xchg
pop
or
insb
xchg
mov
stc
add
xchg
mov
insl
sub
push
push
test
pop
je
mov
dec
fdivrl
pop
mov
loop
fmulp
jb
ljmp
rolb
mov
jge
dec
and
add
mov
mov
test
jl
loop
inc
aad
arpl
mul
aas
jge
jbe
add
xchg
imul
pop
jns
or
sbb
daa
sbb
shr
mov
sbb
adc
jg
xchg
mov
or
xlat
sbb
lahf
movsl
mov
xor
mov
out
and
pushf
dec
dec
or
sbb
jae
or
add
cmp
pop
push
jmp
add
test
jmp
and
in
popa
push
lret
xchg
out
xor
xchg
les
mov
jcxz
xchg
mov
into
cmpsb
push
rclb
inc
jne
int3
dec
jl
mov
shlb
cmp
cmpsb
cmp
xchg
sbb
jecxz
mov
mov
mov
incb
push
or
std
pop
clc
and
inc
shrb
nop
dec
loopne
cmpsb
icebp
in
and
mov
xchg
sarl
sarl
test
mov
mov
fildl
idivb
daa
enter
loope
xchg
cmp
lock
dec
inc
push
mov
xor
call
jecxz
jae
jmp
iret
xor
mov
xor
mov
mov
push
ficoml
cld
mov
mov
pop
pusha
repz
or
mov
icebp
int
pop
int
ja
insl
xchg
mov
imul
add
push
inc
jle
mov
push
sahf
sbb
xchg
arpl
shrb
stos
mov
xor
stc
mov
cmp
sub
sub
and
dec
or
or
loop
pop
clc
xor
xchg
jge
jno
cmp
loope
mov
jecxz
subl
loop
mov
mov
daa
in
es
in
clc
scas
mov
call
movsb
hlt
push
test
mov
dec
adc
push
push
cmp
dec
mov
sub
frstor
jp
cld
arpl
cltd
xchg
jecxz
shl
imul
add
inc
mov
mov
inc
inc
mov
divl
push
fistpll
out
xor
lds
xor
ja
addr16
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
inc
sub
jle
jl
jle
std
ss
movsl
mov
stos
push
jns
mov
out
mov
dec
addr16
mov
test
call
sub
loop
pop
ret
jmp
jp
pop
fisubs
xor
xchg
sub
mov
xchg
out
scas
clc
sbb
out
enter
pop
xchg
sbb
outsb
aad
clc
cmpsl
sub
in
sub
cld
push
and
jo
pop
xor
pop
push
pop
mov
scas
xchg
pop
mov
sbb
lock
jmp
decl
fldt
mov
loop
cmc
add
sbb
fcmovnb
dec
mov
xor
push
pop
jo
xchg
sub
cmpsb
xchg
mov
imul
xchg
add
movsb
or
js
mov
push
pop
outsl
push
pop
pop
xchg
pusha
dec
popf
in
mov
jno
je
out
ljmp
mov
pop
dec
lret
iret
push
mov
pop
insb
adc
pop
adc
rolb
shrl
mov
sub
cmc
pop
xor
mov
mov
movb
pop
cmp
adc
nop
or
adc
push
pop
and
andl
sbb
addb
or
stos
xchg
fsubrl
movsb
out
pusha
sbb
push
ja
sbb
in
xor
in
cwtl
jp
mov
adc
sbb
cli
ret
sahf
and
dec
aam
shl
les
pop
or
imul
ss
ds
mov
xchg
and
div
or
push
pop
pop
imul
sub
int3
icebp
xchg
and
dec
dec
mov
ret
gs
pop
enter
dec
mov
hlt
cmc
sub
sub
pushf
in
add
sbb
or
cld
cli
xor
xchg
mov
mov
mov
mov
hlt
mov
test
sub
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
out
jmp
adc
jle
add
mov
out
cld
mov
inc
sbb
daa
push
inc
xchg
jmp
and
imul
jl
xchg
sub
movsw
push
and
arpl
mov
data16
js
loop
sbbl
or
xor
data16
lahf
fisubrs
mov
outsb
std
pop
xchg
dec
inc
inc
sbb
sti
mov
lods
fldt
das
mov
in
jnp
jae
mov
or
inc
mov
fbld
push
popf
dec
stos
sbb
pusha
and
rcll
add
push
lods
pop
push
dec
xor
int
dec
lcall
add
je
pushl
clc
inc
popa
xchg
incb
dec
push
inc
stos
gs
lcall
xchg
dec
inc
cmpsb
mov
xorb
jl
inc
or
jle
add
int3
bound
mov
lock
adc
pop
shll
pop
dec
xchg
jle
dec
xor
jo
in
scas
enter
xchg
fstp
outsb
popf
xor
pusha
fcmovnb
jo
jp
cmp
faddp
loop
jb
int3
cmp
mov
rclb
dec
cmp
dec
add
push
mov
movb
shlb
stos
mov
daa
push
mov
aaa
aas
loop
je
popl
stos
xchg
mov
xorb
in
stos
pop
rorb
adc
roll
mov
xor
dec
mov
sbb
rcll
int
sbb
inc
movsl
sub
fnsave
jg
lock
xor
xchg
jmp
mov
fucomp
push
sbb
xor
cmpsl
pusha
cmp
inc
dec
sti
cmpsl
iret
dec
xchg
std
adc
popf
js
pusha
cli
out
sub
pushf
pushf
xchg
adc
add
lods
popa
push
in
pop
xorl
or
xchg
mov
cwtl
mov
adc
inc
mov
into
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
insl
xchg
and
jle
add
xor
loop
cmp
mov
dec
hlt
lock
lcall
add
jb
cmpsb
popf
movsl
inc
daa
mov
insb
cmp
mov
shrb
data16
hlt
cmpsb
rcrl
icebp
sub
lahf
out
out
inc
pop
hlt
aad
rorb
into
push
adc
add
mov
sub
xor
movsb
jno
mov
xor
cmp
repz
repnz
stos
push
adc
jg
or
jae
xor
iret
mov
sub
mov
mov
or
imul
sbb
shll
js
test
mov
test
push
cmc
add
and
mov
ds
push
daa
or
inc
popa
movsb
add
hlt
mov
jg
xchg
sub
inc
sbb
push
imulb
sti
lret
inc
ret
dec
cmp
lods
adc
mov
sub
test
pop
push
lea
ret
pop
call
subb
lods
test
cmc
add
dec
stos
or
lahf
test
outsb
xchg
lret
push
fcomps
adc
fs
push
stos
push
imul
icebp
adc
sbb
xor
and
push
ret
das
xchg
pop
xor
jmp
aaa
iret
lcall
scas
out
xor
mov
dec
lea
add
shrl
jmp
and
mov
ret
imul
xchg
pop
push
clc
inc
xchg
bound
aam
inc
std
iret
jns
stos
cwtl
sub
sarl
loopne
inc
js
xor
xor
stc
and
fisubrs
jb
mov
mov
inc
out
mov
mov
xor
inc
push
nop
cmpsl
push
mov
negb
scas
mov
inc
outsb
pop
enter
sbb
arpl
mov
lcall
ret
add
mov
push
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
insl
test
sub
jle
add
xchg
push
jno
repz
lret
fs
push
push
movsl
adc
xlat
mov
xchg
int3
pop
adc
add
push
filds
jbe
sub
sbb
xlat
xchg
push
or
lds
push
das
outsl
loop
pop
inc
dec
in
add
cli
aad
lods
mov
mov
psrld
dec
pop
push
dec
adc
je
push
inc
js
repnz
in
bound
jb
sahf
das
adc
cld
movsl
lret
sub
inc
mov
sbb
mov
daa
int3
test
mov
pop
jecxz,pn
add
jnp
cmp
lahf
mov
dec
mov
stos
fldl
xor
ret
fldcw
mov
xchg
lods
jbe
add
dec
aam
sti
in
test
cmp
cld
xor
mov
ret
aad
repnz
inc
cli
iret
std
dec
or
dec
out
mov
cltd
movsb
xor
cmp
js
push
jmp
cmp
stos
add
popa
ret
popf
jae
inc
pop
int3
mov
mov
mov
outsb
jge
inc
dec
call
icebp
inc
push
sub
std
test
xor
fucomip
cmp
fs
inc
daa
jns
loop
lret
push
mov
mov
int
ss
sbb
shl
push
in
int
dec
std
and
imul
xchg
test
clc
jbe
repnz
arpl
les
jmp
call
or
cld
lods
jp
mov
pop
je
push
arpl
imull
sbb
imul
outsl
je
mov
and
xlat
cmp
clc
add
sbb
cmp
xchg
pop
das
and
sub
or
sbb
xchg
dec
icebp
mov
in
int
add
add
dec
mov
pop
inc
and
call
ret
div
dec
jnp
dec
mov
pushw
pop
push
mov
fs
repnz
insl
adc
push
sbb
jnp
and
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
pop
ds
and
jle
add
adc
lahf
or
xor
test
mov
and
test
popf
cmc
jmp
fbld
jbe
push
mov
mov
test
das
xorl
loope
ret
in
fucomip
into
rcrl
cmp
xor
lret
jb
push
ds
push
push
dec
scas
stos
sbb
mov
icebp
out
mov
push
mov
outsl
mov
ljmp
push
inc
dec
mov
sbb
test
cmp
ss
ret
lea
sub
mov
adc
cltd
lahf
leave
loop
jbe
outsl
inc
push
lcall
push
stc
pop
fs
xchg
addr16
jl
mov
fidivs
sub
jne
popa
pop
popl
pop
loop
cmpsb
jg
cli
adc
inc
adc
cltd
inc
test
cmpsb
mov
mov
cmp
jno
push
mov
decb
pop
mov
mov
jl
fstps
or
mov
fisubrl
inc
jo
inc
mov
bnd
scas
aam
sbb
out
mov
in
cmp
gs
subb
jb
ret
movsb
sbb
adc
xor
xor
adc
addb
ja
gs
fsubrs
fsts
mov
iret
jo
push
mov
mov
mov
cmpsb
sub
fadd
idiv
stos
in
mov
mov
push
or
test
cmp
jae
xchg
mov
es
and
pop
mov
dec
jbe
into
add
cmp
dec
cmp
arpl
push
ds
sub
les
mov
sub
jl
call
pushf
jno
and
rorb
scas
inc
mov
cwtl
stos
movsb
mov
mov
into
test
clc
loop
in
push
mov
js
sbb
push
divb
cmp
xchg
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
ret
movsl
mov
jle
jl
jle
loopne
ja
js
testb
mov
dec
jb
jns
push
addr16
sarl
mov
jae
sbb
std
shll
add
nop
daa
imul
mov
add
sahf
es
xchg
add
rol
mulb
add
ds
push
cwtl
ret
xchg
jo
jae
mov
cmpsl
pop
adc
das
mov
cmp
and
cmp
lret
ja
lods
cmpsb
ficoms
sub
xlat
push
pop
push
es
movsl
out
pop
add
inc
mov
xchg
fmull
rolb
dec
add
lea
pusha
fdivl
scas
sarb
idivb
dec
pop
push
sub
mov
push
ja
jge
pop
cmp
dec
pusha
cltd
sbbl
cmpsl
adc
inc
pop
mov
mov
lods
lock
outsl
xchg
insb
out
lcall
sar
repz
dec
das
test
hlt
mov
and
movsb
dec
or
orl
fs
cmpsl
repnz
rorl
jns
ja
add
pmaddwd
test
cmpsb
dec
sahf
mov
bound
xchg
mov
rcrl
out
and
adc
push
xchg
mov
push
data16
imul
andb
stc
sbb
push
test
mov
mov
mov
push
and
call
pop
pushf
fdivp
dec
mov
orl
or
notl
nop
fmuls
pop
lret
shll
insl
cli
xchg
push
rcl
addr16
mov
aam
sti
adc
xor
inc
jno
lahf
push
scas
jmp
ret
repz
cmp
push
push
push
inc
addr16
mov
jne
imul
mov
push
adc
rolb
pushf
test
mov
int3
inc
stc
jl
lahf
test
gs
add
push
sub
jmp
mov
adc
inc
add
inc
add
outsl
cmp
cmpsl
cmp
jmp
pop
push
jg
xor
add
pusha
mov
jle
and
jle
push
lods
popf
mov
or
mov
outsb
jbe
fcmovu
ds
cwtl
in
addl
sub
cmc
leave
mov
imul
sti
shr
aas
cmp
cli
loop
stos
mov
or
push
shl
mov
je
pop
les
lods
jnp
jne
mov
out
sub
call
mov
push
inc
and
lods
leave
xor
stos
mov
lret
dec
pop
dec
inc
clc
inc
repz
int
out
es
shll
push
inc
cwtl
mov
sbb
dec
inc
mov
add
in
andl
mov
push
mov
ds
ja
inc
jno
int3
cmc
sbbb
cmp
or
mov
mov
test
lds
mov
das
mov
adc
in
scas
outsl
xor
fisubl
mov
out
lret
int
xor
cltd
mov
push
jo
mov
mov
adc
mov
es
jnp
mov
cmpsl
mov
out
imul
lea
cmpsl
shll
cmc
cli
lahf
mov
imul
mov
inc
je
or
lds
pop
push
lods
inc
xor
pop
mov
icebp
inc
imul
add
push
fwait
xchg
jno
push
lock
mov
adc
out
cmp
std
cltd
push
xlat
mov
sysret
lea
shll
inc
pusha
scas
enter
jo
xchg
inc
or
mov
sbb
jge
jp
shrl
add
int
ficoml
push
add
sbb
bound
scas
mov
fisubrs
in
sahf
sti
rorb
lret
mov
mov
jge
std
mov
adc
inc
ds
cltd
ret
cs
cmp
sub
xchg
pop
in
sbbl
xor
sub
ss
add
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
dec
mov
jle
and
jle
enter
inc
ret
xchg
mov
mov
std
loopne
fucompp
hlt
test
aam
dec
fsubr
jo
enter
lret
pop
repnz
xchg
pop
rorl
cltd
xor
jl
push
mov
mov
outsl
mov
mov
dec
repz
xor
mov
loopne
pop
mov
or
push
test
sarb
lret
xor
xchg
jge
lret
mov
iret
inc
pop
sub
mov
xchg
mov
fwait
sub
cwtl
add
jnp
loope
aas
mov
bound
push
pop
xor
repnz
sbb
scas
jle
add
hlt
inc
packsswb
and
iret
andl
and
and
push
sub
sbb
add
cmc
pop
sub
jns
ja
mov
push
sbb
push
mov
mov
shll
push
cwtl
lods
add
les
cmp
push
mov
dec
xchg
adc
pop
leave
dec
add
nop
lret
out
add
xchg
add
adc
test
mov
sbb
fyl2xp1
inc
fwait
push
push
jl
lds
iret
sbb
daa
arpl
out
mov
cmp
js
and
daa
adc
js
jne
inc
push
dec
inc
sub
jae
sbb
jae
sub
mov
fdivrl
mov
btc
mov
inc
ljmp
idivb
or
repz
rcr
pop
in
loop
movsb
mov
cmp
lret
lea
daa
push
mov
int
int3
ljmp
add
xlat
jo
mov
imul
les
sub
rclb
ss
movsl
leave
mulb
sub
fcoml
push
push
scas
dec
and
outsl
pushf
or
dec
adc
inc
mov
rcrb
mov
pop
ja
mov
inc
xor
xor
stos
arpl
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
das
jb
std
data16
and
jle
arpl
outsb
jne
imul
adc
add
test
and
mov
inc
cmc
mov
iret
mov
jae
enter
mov
std
or
cmp
mov
sub
push
adc
lea
and
push
imul
xchg
repz
call
mov
repz
test
mov
jne
std
leave
movsl
sub
or
mov
pop
inc
daa
or
add
mov
popf
push
push
push
cmp
pop
rcrl
or
mov
xchg
enter
rcrl
iret
pop
and
sbb
loop
andl
adc
or
adc
fnsave
mov
mov
jg
incl
outsl
icebp
push
mov
cltd
sub
addr16
mov
scas
jns
insb
pop
into
xchg
jae
hlt
push
inc
jne
out
repnz
gs
or
jnp
push
push
hlt
push
shrb
aam
push
addr16
push
cmc
or
dec
xlat
cs
xchg
jae
xor
addr16
mov
fnop
push
jl
jecxz
cmp
inc
fistpl
stos
xchg
push
in
sti
shlb
xor
pop
insl
adcb
loopne
xchg
int3
push
aad
xor
or
lret
pop
jg
sti
aas
cmpsb
xchg
xchg
andl
push
xor
cmp
orl
pop
jecxz
jg
test
repz
lods
adc
or
jp
xor
movl
jg
fmull
mov
and
js
or
cld
test
mov
out
mov
jnp
push
stos
jle
or
mov
mov
adc
push
fisttpl
cmp
xor
std
mov
jecxz
sbb
inc
jne
aad
mov
iret
fldz
adc
pop
inc
addr16
sbb
xor
iret
adc
fdivr
in
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
hlt
push
cli
xor
test
xchg
mov
mov
xchg
fsubrl
enter
test
sbb
pop
repz
inc
add
xor
push
cwtl
dec
test
adc
xchg
mov
sbb
cmc
or
stos
ljmp
test
xchg
sbb
sarl
rcll
push
stos
shll
and
xor
push
mov
filds
out
pop
cmpsb
es
add
inc
aaa
mov
sub
hlt
push
int
jge
jns
jg
subl
sbb
adc
fsts
movsb
pusha
add
pop
out
shl
out
pop
cmp
jmp
pop
or
inc
jmp
push
add
mov
dec
aam
xor
add
dec
sub
stos
or
cwtl
int3
fucomip
nop
idivb
dec
lahf
inc
xchg
or
and
in
xchg
test
aaa
rorl
xchg
lret
and
fimull
repnz
cmp
adc
pop
xchg
mov
mov
add
test
mov
sbb
rcrb
mov
shll
mov
lret
jns
movsb
cmp
fistpll
adc
dec
sbb
loope
jo
imul
mov
jae
ljmp
or
sub
out
or
cmp
and
out
lds
cmpsl
in
jmp
xor
adc
add
js
out
fsubrs
push
xlat
pop
popf
insb
test
jg
pusha
movsl
jo
call
or
clc
movsl
aam
cmp
jg
push
sub
pusha
mov
push
bnd
repz
call
movsb
int3
std
sbb
or
push
pop
mov
fnstenv
xchg
and
add
mul
aas
or
leave
sbb
ss
cmpsb
jmp
cmp
inc
dec
cmc
push
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
cmp
jle
jl
jle
fistpl
xor
pop
insl
imul
out
sbbl
xchg
inc
add
shl
pop
lds
fildll
xor
sbb
hlt
jne
pop
xor
add
adc
add
xor
xchg
mov
xchg
out
pusha
pop
loop
mov
into
mov
inc
jmp
jb
je
jne
mov
fildl
xor
nop
insb
les
xchg
mov
sbb
xlat
jmp
lods
mov
jbe
scas
push
jge
adc
daa
mov
call
jo
add
ret
dec
sti
push
testl
push
sbb
test
push
mov
or
sub
cwtl
xchg
aaa
in
cli
push
adc
push
sbb
stc
pop
mov
sbb
and
fdivl
stc
dec
fcoml
test
sub
inc
xchg
xor
std
lock
test
and
xor
int
push
aad
push
or
shr
fcomi
inc
push
fdivp
pop
jo
sub
or
int
sub
std
mov
js
cwtl
and
int3
cwtl
imul
xorb
add
sbb
add
ret
inc
mov
lcall
mov
push
mov
mov
pop
pop
fnsave
xchg
test
dec
jb
fistpl
shr
jp
in
in
add
xlat
test
push
jne
test
inc
pop
into
mov
leave
mov
push
jns
mov
push
or
sti
mov
xlat
fwait
jae
std
mov
lcall
mov
pop
add
xchg
ret
outsb
push
inc
or
stos
xchg
add
rcll
inc
xor
push
cmp
insb
inc
subb
addr16
int
dec
jle
mov
cltd
int3
add
jbe
or
mov
cmpsl
xchg
in
and
je
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
xchg
xor
jle
and
jle
js
cmp
ret
fisubrl
mov
shll
jb
fmull
add
mov
into
add
adc
leave
and
sub
pop
lcall
clc
cltd
jb
cmpsl
mov
sbb
mov
dec
jo
push
arpl
stc
shl
movsb
pop
orl
cmpb
mov
lea
and
push
hlt
mov
das
scas
xor
push
outsb
ja
popf
xchg
jae
mov
sahf
stos
mov
adc
add
out
xor
mov
aaa
daa
sbb
lea
mov
orl
fwait
pop
jl
insb
pop
jnp
ljmp
nop
call
sub
imul
add
jne
mov
pushf
xor
pop
jo
pop
popf
lea
ss
sbb
andl
scas
xor
push
add
dec
or
lock
or
mov
dec
dec
sbbl
repnz
ja
jbe
aad
dec
test
fnsave
lahf
ljmp
out
insb
cltd
cmp
mov
push
jge
inc
leave
movsb
jmp
iret
leave
push
es
sarl
pop
cs
lret
xchg
out
mov
mov
fadds
add
mov
mov
xor
in
pop
pop
mov
inc
mov
ficoms
scas
cs
jmp
push
xor
iret
jl
rcrl
ret
pop
cli
dec
repz
xchg
loope
pop
or
mov
push
adc
arpl
sub
add
jmp
sbb
pop
call
test
cmp
add
inc
pop
leave
mov
or
cmp
xor
or
xlat
xchg
pop
pop
jp
in
dec
mov
xor
xchg
clc
mov
popa
nop
mov
mov
jbe
dec
pop
and
mov
mov
jno
mov
xchg
jge
test
push
pop
mov
xor
mov
insl
popf
add
xor
xchg
cmp
out
push
cmpsb
pusha
mov
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
inc
cmp
clc
arpl
in
aad
fcompl
and
mov
push
inc
add
jbe
pusha
cmp
push
dec
jge
sbb
adc
outsl
sbb
shr
and
xor
dec
clc
pop
pop
xor
lods
fldcw
push
push
jecxz
cli
jg
mov
inc
js
aas
call
es
jo
adc
in
cmp
stc
fstps
fisubrs
test
mov
inc
mov
imul
xor
adc
call
push
push
xchg
cmc
push
nop
push
add
sbb
inc
imul
xor
iret
cmp
les
fstps
pop
aam
fmulp
inc
xlat
cmpsb
fwait
test
outsl
lea
jne
loop
pop
ret
fmulp
or
mov
loopne
rclb
mov
sub
sbb
xchg
xor
adc
loope
sub
fsts
mov
pop
inc
es
or
test
scas
lcall
inc
xchg
imul
bound
push
mov
xor
mov
sub
dec
jp
mov
xchg
icebp
ficompl
mov
xorl
movsb
push
test
mov
cmc
gs
subb
push
and
sub
or
cmp
or
test
pop
push
cmpsb
shrb
sbb
jne
decb
xchg
sub
and
loope
pop
scas
arpl
push
es
jno
dec
pop
js
push
lret
pop
mov
rol
adc
fnsave
mov
rcrl
cltd
repnz
sbb
fdivrs
jmp
call
sbb
mov
pop
stc
cmp
xchg
dec
jecxz
in
xorl
and
insl
clc
mov
nop
pop
gs
pop
pop
mull
adc
or
iret
ljmp
xchg
or
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
je
insb
mov
jle
cmp
pop
inc
insl
push
xor
cltd
iret
fwait
or
jae
inc
sub
or
mov
imul
push
xchg
lods
xchg
lds
test
popa
mov
gs
sub
jecxz
jns
enter
or
add
fstpt
sbb
cmp
dec
fnsave
mov
stos
inc
xchg
xor
mov
shll
xorl
ret
movsbl
mov
pop
pop
add
jle
jbe,pn
jmp
inc
sbb
jb
insb
cmp
cmpb
call
pop
mov
movsl
sbb
jo
or
fdivs
add
push
leave
jp
jmp
cmovno
cmp
xor
jnp
popa
rcrl
cmpsl
inc
mov
dec
sub
call
stc
push
lcall
call
fistpl
test
pusha
push
out
pop
and
mov
lea
jae
pop
xor
ret
mov
xchg
subl
pusha
and
sbb
nop
pushf
mov
fidivs
rcll
xor
loop
mov
cmp
dec
jmp
xchg
je
jns
movsl
mov
nop
fstl
add
pop
clc
negl
sub
jg
divl
mov
call
out
out
clc
mov
mov
dec
mov
push
xor
int3
insb
sbb
and
push
jg
and
mov
jo
mov
es
ds
push
xor
mov
dec
or
inc
outsb
imul
dec
dec
enter
jmp
lea
xchg
nop
outsl
dec
cmp
stc
pop
lret
mov
stos
les
lret
sbb
sub
fs
push
inc
call
ja
sbb
lret
insl
mov
mov
loop
roll
repnz
cmp
enter
jmp
and
popf
icebp
add
icebp
lret
sbb
and
insl
dec
push
scas
std
ret
subl
popa
in
jl
cli
or
xchg
aam
scas
lods
movsl
hlt
cmpsl
stos
pop
xor
or
adc
cld
loopne
push
push
sbbl
jmp
lds
popa
mov
fisttpll
jo
in
jle
jl
jle
mov
in
jge
rcll
and
shl
out
fistps
jl
test
loopne
ret
lret
sub
jbe
adc
xchg
fwait
and
out
sub
mov
fwait
mov
inc
je
jg
loopne
leave
lock
data16
push
add
movsl
lods
fsubr
fs
ja
repz
xchg
push
inc
mov
sbb
sbb
and
ljmp
cmp
cmpb
pop
cltd
out
fs
stos
popa
dec
jle
pusha
insl
mov
fwait
movsb
cmp
inc
paddsw
pop
xlat
aam
mov
cmp
test
enter
outsb
data16
sahf
mov
pushf
sub
mov
mov
aas
push
je
sbb
scas
rolb
nop
out
movsl
mov
sub
fcmove
and
and
clc
jns
cmp
pop
cwtl
into
test
cmpsl
push
jns
cmp
mov
test
js
stc
out
insb
pop
orb
lcall
out
push
add
addr16
stos
sbb
notb
dec
int
and
lods
jne
or
loope
mov
test
cmp
scas
in
out
push
adc
icebp
pusha
out
jbe
loop
mov
mov
jb
add
xchg
outsl
mov
push
call
ret
pop
adc
scas
seta
pop
mov
cmc
adc
cmpsb
lcall
jnp
jo
test
cmpsb
mov
hlt
and
xchg
inc
xchg
pop
xchg
mov
mov
les
xchg
ficomps
pop
push
sub
shr
rcr
into
mov
pop
mov
mov
rclb
rorb
pop
rcr
inc
adc
pop
jne
cld
pop
add
and
adc
jnp
lods
mov
sub
icebp
int
fdivrs
repz
in
xor
shrl
or
pop
leave
roll
xor
cmpsb
cmp
push
sub
fsubl
push
iret
mov
iret
jne
dec
out
or
test
jmp
xchg
aaa
inc
add
xor
add
test
add
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
sub
jle
cmp
add
pusha
inc
pop
cmp
data16
inc
aaa
fcmovnb
sbb
pop
cmp
mov
push
test
jo
ds
ds
xchg
sbb
scas
in
scas
test
and
dec
aad
xlat
and
outsb
adc
push
les
sub
and
dec
test
clc
outsl
in
arpl
ret
rolb
je
out
sbb
movsl
push
ret
cmp
js
mov
jne
pushf
in
jg
push
inc
pop
add
or
adc
push
and
or
dec
es
ss
lahf
jle
mov
xor
cmp
jmp
fidivl
jecxz
and
cmp
and
xor
jg
lret
adc
popa
fisubs
ja
dec
sbb
clc
rclb
and
jns
scas
fwait
neg
and
and
and
or
jmp
or
scas
arpl
xchg
shl
enter
repz
add
dec
push
ret
push
inc
ljmp
adc
inc
cli
inc
jge
xchg
sti
mov
sbb
shr
cltd
lea
cwtl
lcall
fcoms
negl
lcall
in
mov
cmp
insb
lods
sti
sbb
adc
in
jp
xchg
mov
ss
out
pop
xchg
cmp
inc
jmp
cmpl
and
scas
mov
fdivrl
test
push
inc
cmp
cmp
pop
mov
fisttpl
sub
fsubrl
stc
jb
cmpl
mov
cmp
negb
bound
movsb
inc
enter
push
inc
sbb
loope
xor
out
pusha
popf
clc
mov
dec
jmp
popf
stos
fdiv
fistl
lcall
pop
fidivrl
call
xorl
sub
setno
jns
dec
dec
inc
jmp
scas
dec
divl
and
sub
mov
outsl
outsb
insl
inc
cmpsb
xchg
cs
xchg
xchg
and
mov
mov
ljmp
and
sub
stos
icebp
imul
push
sub
imul
jae
add
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
mov
jle
cmp
mov
push
loop
sub
clc
or
rcr
insl
jmp
gs
cmp
add
xchg
dec
ss
xor
cwtl
dec
and
in
cmc
jae
cmpsb
xchg
sbb
sbb
adc
insl
popf
sbb
inc
in
sub
test
sbb
or
cmp
insb
sbb
insl
mov
lock
and
mov
and
sbb
cld
testl
fwait
pop
or
imul
mov
inc
sbb
push
push
sbb
repnz
push
lahf
xchg
pop
outsb
or
and
std
mov
into
add
mov
mov
in
adc
or
xchg
aam
std
js
cmpsb
jbe
jmp
mov
jge
cmpsb
mov
push
scas
push
test
jmp
fwait
movb
dec
test
lea
sub
or
popa
std
jl
sti
mov
daa
daa
lahf
and
push
mov
aaa
sub
add
shll
mov
mov
stos
out
aas
add
cld
inc
sbb
outsl
loope
mov
jbe
jmp
test
iret
cltd
add
fldenv
addr16
scas
jge
jmp
aaa
cmp
xchg
adc
sub
mov
out
scas
sbb
jg
xor
jmp
arpl
dec
mov
ljmp
push
pop
nop
jne
pusha
lods
imul
xchg
push
daa
push
addb
mov
push
mov
xor
aam
inc
daa
jnp
mov
int3
int
mov
repnz
adc
xchg
fs
and
stc
sub
mov
outsl
out
int3
icebp
testb
jl
pop
sarb
pop
popa
mov
pop
mov
dec
in
dec
sti
ja
fbstp
cmp
leave
jb
pop
sbb
pop
push
jecxz
sub
cs
sbb
mov
mov
push
fwait
mov
adc
inc
das
ret
fldenv
shrl
sub
mov
ds
or
into
sub
orl
and
add
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
sub
orl
cmp
std
call
fisttps
ss
add
jl
cmp
mov
push
cmp
test
ljmp
data16
dec
jno
popl
jno
pop
xchg
in
ja
lea
cli
rcr
or
dec
and
mov
push
aaa
fstps
das
clc
pop
aam
jle
mov
mov
pop
scas
outsl
push
mov
xchg
lds
push
and
movsl
and
xor
mov
xchg
scas
xor
xchg
aaa
push
dec
fwait
std
dec
mov
test
fdivrl
inc
lahf
jl
out
test
lods
dec
bound
or
shr
sbb
clc
sbb
and
mov
pop
pop
mov
push
dec
jnp
imul
lock
popa
testb
jmp
js
lock
ja
xchg
popa
pop
shr
cmp
xor
jno
imul
jne
inc
xor
xchg
in
fcomp
icebp
cmpsb
sbb
jo
mov
mov
push
dec
jg
jl
jg
aas
cmp
sbb
jmp
mov
in
sbb
movsb
or
dec
dec
in
add
xorb
je
loope
loopne
sarl
jle
adc
cmp
jne
loopne
idiv
jbe
loope
add
movsl
pop
scas
or
push
sub
mov
mov
roll
cmp
scas
push
mov
pop
push
cmc
bound
cmp
in
add
mov
ja
mov
jns
ja
mov
push
jo
xchg
loopne
jae
xor
push
loop
add
pop
int
call
jecxz
fucomp
in
mov
cmp
and
mov
push
xor
int
lock
dec
xlat
sti
aad
xor
ret
int3
mov
ljmp
aam
cmp
mov
sub
mov
xor
add
jb
aas
cli
lcall
push
sub
fisttps
and
sub
jmp
xchg
dec
mov
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
ret
in
jle
cmp
out
out
push
adc
fs
movsl
loopne
push
loope
xchg
mov
mov
mov
or
pushf
adc
test
inc
mov
xchg
popa
and
dec
add
sub
cmp
and
loope
xchg
mov
popf
jae
fidivrl
add
sbb
add
adc
pop
cmp
fisubl
push
pop
lods
pop
pushf
mov
ret
call
ror
jbe
sbb
clc
jae
or
cmc
sbb
cmp
push
dec
cmpsl
jp
mov
mov
inc
test
in
pop
movsb
push
mov
hlt
in
pop
adc
scas
adc
es
and
jl
mov
xchg
xorl
mov
jle
pusha
jp
or
stc
add
cwtl
inc
mov
ljmp
mov
dec
loopne
adc
or
ds
aad
divl
iret
js
cltd
or
fwait
or
loopne
jb
pop
das
gs
rcrl
lds
inc
mov
int3
and
sbb
andb
pop
loop
pop
mov
xchg
daa
popf
mov
mov
test
push
pop
mov
call
sub
pushf
mov
cmp
push
test
cmp
mov
lea
fwait
sub
sarb
mov
push
xchg
xor
mov
ret
lahf
mov
mov
insl
outsb
test
fucomp
mov
mov
push
not
or
rol
and
jge
sbb
jnp
add
and
pop
and
jecxz
movsb
ss
repnz
xchg
jmp
mov
push
adc
shrl
mov
fistpll
jmp
dec
cmp
call
mov
std
enter
push
out
sbb
popa
sbb
int3
or
push
push
push
inc
xor
aad
fs
inc
push
cmpl
das
jae
and
adc
pop
pop
jle
sbb
jmp
out
shll
sti
push
bound
imul
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
mov
jmp
jle
jl
jle
iret
and
push
cmc
cli
cs
insl
inc
jnp
xor
loopne
rcll
loopne
mov
repz
fmul
mov
adc
jne
lret
inc
pop
sub
fldt
int
icebp
xor
ret
sbb
enter
into
sub
sbb
add
jbe
and
pop
ret
sbb
xchg
mov
ljmp
test
lds
lcall
sarb
push
shrl
dec
loopne
add
push
dec
xor
push
dec
ljmp
dec
sbb
nop
jae
repz
nop
sahf
fs
pop
xlat
ret
loope
push
jl
das
adc
mov
loope
mov
shl
sbbl
push
jg
sbb
push
in
or
mov
inc
push
mov
movsb
and
bound
into
cmp
sbbb
aas
cli
scas
inc
ret
xchg
iret
mov
jb
inc
dec
lea
fcomp
out
jge
cmpb
mov
lods
add
loopne
push
inc
mov
xchg
test
js
xchg
xchg
pop
sti
insl
scas
outsl
adc
sti
mov
sub
cltd
mov
adc
or
sbb
xchg
fwait
mov
push
bound
fnstenv
mov
data16
std
aam
mov
dec
rcll
xor
jmp
sbb
rorl
dec
shlb
sahf
sbb
ret
pop
mov
mov
orb
out
or
pop
and
ja
out
js
xchg
mov
aad
pop
out
hlt
cli
jne
loope
cmpb
mov
neg
sbb
push
push
xchg
lret
mov
out
pop
inc
inc
cmp
test
xor
jo
cmp
repz
mov
clc
stc
cmp
js
dec
addr16
push
test
push
cmc
sahf
and
xchg
testb
xchg
xchg
loop
cmp
push
pop
rcrb
test
aaa
fidivl
add
pop
sbb
mov
jmp
push
jecxz
sbb
and
jb
mov
aaa
setnp
cmpsl
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
pop
adc
xor
jmp
cmp
jg
adc
jmp
out
pop
push
add
jb
mov
lods
cltd
mov
jg
adc
sbbb
push
pop
arpl
cmp
aaa
stos
addr16
jbe
insb
rol
inc
jnp
je
xor
std
xor
ja
mov
dec
negl
fwait
test
lret
xchg
sbb
mov
scas
cli
inc
loop
lock
mov
mov
and
mov
cli
push
rol
out
jecxz
out
push
lcall
aam
xchg
push
out
scas
xchg
sub
pop
mov
jp
pop
in
dec
fxch
ret
inc
add
loope
test
sbb
cmp
push
lods
ljmp
mov
addb
jmp
jb
adc
mov
nop
pushf
stos
es
lea
pushf
shl
cmp
xor
mov
xchg
push
xchg
cwtl
scas
push
lret
push
and
imul
mov
test
lock
leave
pop
and
int3
lcall
jecxz
aas
xchg
sti
push
xor
mov
push
cmp
push
and
adc
or
and
andb
shlb
lock
out
xor
mov
ror
pop
xor
add
cmc
mov
mov
ss
cwtl
pop
xchg
pop
or
mov
std
xlat
mov
testl
mov
dec
or
push
add
rcr
in
mov
jne
xchg
out
inc
clc
jp
add
cmp
arpl
subb
inc
gs
jmp
xchg
xor
pop
and
imul
ds
in
lret
push
inc
xor
div
sbb
pop
test
push
stc
loope
jp
loop
mov
fxch
inc
mov
stc
ss
out
ret
aad
sti
jge
xchg
test
in
in
add
dec
out
adc
or
add
pop
loop
dec
add
mov
xchg
outsb
icebp
cmp
cmp
push
pop
popf
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
xchg
pop
pop
cmc
idivl
cmp
cmp
pop
jg
dec
jg
test
out
dec
imul
fwait
bound
jo
lcall
int
pop
out
cli
rclb
pop
std
xor
mov
jbe
sub
cmp
movsl
xor
stc
fld
xor
mov
out
arpl
mov
cmp
mov
mov
xor
test
call
adcb
xchg
sbb
jb
inc
inc
push
and
loop
pop
sub
das
lret
and
jle
ret
jmp
in
test
into
push
add
repz
pop
dec
dec
xchg
nop
mov
ljmp
xchg
jle
scas
dec
jp
mov
add
xor
sub
push
push
popf
rol
sbb
jge
add
repz
jle
and
lds
pop
push
jl
and
xor
in
xchg
cmp
cmp
push
inc
adc
sub
es
in
int3
mov
push
dec
inc
mov
lea
cmp
mov
cmpb
or
push
push
pushf
xchg
lret
pushl
ljmp
add
into
dec
ljmp
ljmp
mov
xchg
into
xchg
sub
in
mov
in
xchg
int
jne
dec
mov
scas
mov
lods
inc
dec
push
inc
jge
pop
insb
aam
xchg
popa
dec
test
add
aam
mov
stc
aad
cmp
sahf
loop
sbb
jnp
xchg
lock
sub
push
sub
fbstp
or
bound
xchg
add
mov
push
jbe
xchg
outsb
push
lcall
and
fcmovb
mov
clc
sbb
mov
cs
mov
pop
lahf
mov
mov
cmpsb
movb
fistl
mov
lods
lock
adc
jae
mov
sub
cs
insl
sbb
hlt
mov
inc
dec
jo
and
xchg
sbb
popa
cmp
sub
js
test
loope
stos
inc
mov
repnz
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
repnz
xchg
xor
bnd
cmp
push
add
out
cmp
insb
sub
xor
and
adc
sti
fcoms
inc
cwtl
dec
adc
test
inc
icebp
out
mov
pop
test
jecxz
test
pop
into
es
pop
ds
iret
cld
fdivr
adc
jbe
insb
jmp
pop
jnp
sbb
push
sub
pop
loopne
rcl
fisttpl
xchg
mov
lret
xor
or
push
xchg
or
jae
shr
sub
cmp
sbb
push
or
cmp
xchg
add
dec
mov
or
push
lcall
dec
inc
pop
in
sbb
mov
dec
cwtl
sub
test
aaa
ss
pop
sub
aaa
sahf
js
adc
mov
fwait
mov
rcl
pop
aad
sub
repz
mov
je
pushf
lods
pop
test
outsb
inc
loopne
pop
mov
daa
push
and
adc
pop
mov
dec
pop
mov
jo
sub
inc
and
xor
push
pop
hlt
or
inc
cmp
pop
xor
xor
int3
pop
jne
cmc
stos
mov
mov
push
inc
into
mov
inc
inc
test
lea
aas
enter
or
fisttpl
and
pusha
or
jmp
mov
test
lds
cs
push
pcmpgtb
test
rorb
xlat
mov
mov
sbb
je
mov
inc
dec
pop
fucomip
xor
sub
and
sub
lahf
movb
add
pop
imul
adc
xchg
out
in
sti
fst
cmp
int
push
inc
adc
adc
ss
repz
xchg
iret
mov
test
mov
xor
loopne
sahf
pop
mov
xor
outsb
mov
ret
pop
sbbl
std
sbb
inc
dec
fs
jno
jp
push
into
stos
jecxz
mov
call
ja
cltd
nop
adc
fmuls
test
fistl
enter
das
push
mov
and
pop
imul
mov
lret
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
cmpl
call
jl
jle
out
rorl
jl
scas
lahf
adc
stos
shrl
mov
mov
mov
mov
or
sbb
push
addl
sbb
mov
popf
push
stos
dec
push
mov
or
shrb
in
arpl
sbb
dec
jnp
fdivrl
ljmp
ljmp
mov
pop
jne
shrl
or
mov
push
xor
ja
lahf
lahf
mov
push
mov
cmp
roll
aam
pop
and
ja
jecxz
push
mov
loop
push
sub
add
lahf
push
leave
push
dec
cmp
dec
pop
stos
pop
popl
xlat
cmc
push
and
add
cmc
dec
push
std
and
dec
inc
popf
pop
aas
cmp
lea
inc
repnz
sar
ror
xchg
and
xchg
gs
add
fcmovnu
and
mov
pop
add
dec
push
sahf
sbb
jge
add
nop
ficoms
ret
mov
cmp
dec
xchg
pop
push
gs
or
shlb
sub
in
sub
negb
and
mov
and
sarb
push
inc
and
arpl
in
add
iret
aas
enter
sub
nop
push
push
push
inc
loopne
ret
sbb
cltd
xchg
addr16
inc
cmp
ds
add
fisubrl
icebp
repnz
sub
sub
pop
mov
push
cmpsb
add
pop
movsl
loope
add
lea
xlat
jnp
cwtl
mov
mov
sarb
mov
sbb
je
loope
jle
rcl
into
push
mov
mov
sbb
shlb
pop
jnp
stos
aaa
fstps
sbb
xchg
sub
mov
pop
mov
das
sub
xchg
dec
fstl
pop
ljmp
mov
jae
or
mov
cmc
mov
in
push
xchg
xor
call
ljmp
dec
xchg
loop
jnp
dec
stos
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
pop
out
xorl
push
in
jnp
push
mov
push
mov
outsl
test
xchg
ret
fsts
clc
push
nop
pusha
push
add
mov
cmp
shrb
lahf
sub
and
mov
lahf
add
mov
adc
lcall
or
pop
xchg
pop
sub
or
jns
xchg
dec
jecxz
inc
inc
popf
mov
in
popa
in
test
cmpsl
add
sahf
jecxz
cmp
int
adc
mov
xor
repnz
out
pop
mov
cmp
mov
pop
popf
xchg
add
or
dec
out
xor
insl
mov
pop
sbb
mov
sahf
stc
mov
lcall
inc
push
adc
xchg
test
jb
push
lods
inc
xchg
mov
sbb
xchg
lds
lcall
js
mov
cmp
inc
fadd
out
xlat
sahf
stos
pop
pop
sbb
in
dec
insl
pop
or
push
cmp
mov
les
fwait
popf
dec
lret
cmp
fldl
xor
testl
js
jbe
into
mov
mov
adc
aas
rcrl
daa
jo
inc
out
mov
sub
jne
push
add
lods
and
sbb
jp
test
sbb
add
lock
or
cmp
pop
fistl
cs
pop
nop
ss
daa
jmp
jmp
push
scas
fidivrs
pop
mov
adc
es
mov
in
int3
sub
out
or
out
push
rcl
lods
add
pop
mov
stc
mov
push
mov
xchg
add
xchg
mov
mov
loopne
cmp
fisttpl
fidivrl
inc
mull
mov
fidivs
gs
je
inc
outsb
cmpsb
mov
adc
mov
nop
mov
outsb
das
or
dec
gs
pop
mov
mov
mov
bound
add
imul
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
and
jl
jle
cmp
cwtl
or
loopne
push
xchg
mov
fidivrl
std
push
xchg
stos
lret
adc
mov
and
roll
cmp
dec
push
adc
fadds
cmp
loope
mov
push
pop
rorb
stc
jg
dec
xor
frstpm(287
pop
out
lret
sbb
pop
pushf
pop
rcrl
cmpsl
adc
scas
les
lret
mov
pop
cmp
je
cmp
rorb
in
cld
cmp
aam
sbb
add
xchg
out
pop
js
sahf
mov
pop
push
jge
pop
insb
sub
mov
cmpsl
fsts
dec
add
repz
call
test
push
mov
cmp
push
jl
or
popa
mov
arpl
lcall
cmp
loope
aaa
stc
fnstenv
fstpl
xchg
xor
fldt
fwait
dec
dec
ja
lea
mov
scas
inc
and
mov
push
jmp
jge
add
in
sbb
lods
dec
xor
push
add
aam
aad
ds
dec
pop
sbb
aaa
sub
push
imul
aam
xor
dec
outsl
and
std
gs
and
xchg
xchg
test
inc
xor
xchg
adc
in
xchg
xlat
outsb
je
xor
inc
mov
dec
mov
std
test
xorb
loop
jg
lds
jb
xor
xchg
lea
add
jmp
fldl
loope
lcall
adc
sti
ret
add
rcl
out
stc
ljmp
mov
pop
cmp
xchg
lods
loop
sub
mov
call
shlb
push
mov
jecxz
outsl
and
loop
jg
inc
test
imul
jmp
lret
inc
sahf
sbb
xchg
test
mov
lds
pop
xchg
xlat
js
rcrb
mov
scas
loop
or
cltd
mov
lahf
push
dec
sbb
lahf
pushf
lods
shlb
push
xchg
push
add
movsb
rorl
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
xor
cmp
sti
jle
cmp
outsb
jecxz
push
pop
pusha
xchg
jmp
fists
add
nop
jmp
or
test
inc
outsl
jae
dec
jb
jecxz
xchg
test
stos
xorl
push
subl
jno
pop
xchg
adc
adc
fsubrl
negb
lret
push
inc
and
dec
xchg
or
jg
lret
dec
leave
mov
jae
mov
cs
fisubrs
into
cli
inc
pop
cmp
jge
jns
xchg
pop
out
jmp
pop
adc
xor
cmpsl
sbb
hlt
es
int3
pop
xor
adc
outsl
insb
cmc
pop
in
lcall
pop
and
lea
jecxz
mov
and
cmp
mov
mov
sti
sub
pop
xchg
inc
or
and
fstps
aas
cmpl
adc
inc
shr
add
inc
pop
call
mov
mov
rcll
das
fsubr
loop
mov
sbb
inc
mov
inc
lcall
addr16
fadds
dec
mov
and
jb
pop
sarb
out
icebp
and
push
lds
sti
xor
jb
cmovo
stos
mov
test
aam
test
xchg
nop
or
pop
jmp
pushf
sub
mov
movsl
mov
dec
sbb
aad
ss
popa
sub
jns
xchg
inc
xchg
sub
jne
fs
inc
jb
jae
dec
inc
mov
sbb
and
mov
adc
xor
imul
or
push
jg
sbb
lods
and
mov
dec
jne
sub
mov
pushf
mov
push
push
movsb
pop
cwtl
xchg
cld
sahf
out
pop
insb
dec
xor
and
loop
popf
imul
xor
out
push
rcll
jb
push
inc
aad
dec
pop
aam
sbb
sti
add
stc
out
dec
repnz
enter
xchg
fiaddl
push
pop
cmp
adc
fxam
das
pusha
icebp
cmpsb
icebp
mov
lods
mov
jmp
in
out
arpl
pop
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
sti
cmp
jle
jl
jle
xchg
out
and
jb
loope
scas
fs
pop
xchg
dec
mov
stos
sahf
cmp
xchg
cli
gs
pop
mov
jmp
fwait
ret
fwait
mov
int3
mov
jne
pop
movsb
pop
in
adc
adc
imul
xor
stos
pop
mov
mov
xchg
jo
cmpsl
lods
add
push
dec
out
ss
cmp
inc
repz
vandps
lock
push
scas
and
jnp
mov
out
movsb
popa
adc
mov
mov
jb
sub
add
das
popl
popf
decl
notb
xlat
loope
popf
ljmp
mov
faddl
lahf
int
xchg
xorl
add
inc
jecxz
xchg
mov
clc
mov
roll
push
cmp
lea
or
lahf
aam
lret
push
jno
fstp
jg
mov
cs
out
dec
jne
repz
fldt
jae
lea
bound
inc
xchg
out
sbb
and
mov
lahf
fsubrl
sbb
mov
xor
int3
lahf
loopne
and
daa
shl
clc
jne
mov
decb
flds
imul
leave
dec
arpl
gs
sub
xor
sbb
push
movsb
sub
xchg
insl
stos
sbb
aas
push
enter
push
dec
mov
loop
sarb
incb
ja
or
pushf
sbb
int3
dec
sbb
int3
xchg
in
std
rcrb
add
pop
mov
sub
mov
inc
rcll
or
sub
add
vrsqrtss
inc
mov
xchg
lods
cld
in
cmp
mov
push
jp
es
repnz
fnstcw
push
mov
push
push
in
mov
insb
add
iret
lock
sti
ja
jg
push
mov
lea
push
pop
ret
cmc
jns
je
testl
in
lcall
adc
mov
xor
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
adc
dec
xchg
cmp
add
xor
adc
fisttps
popa
pop
daa
leave
outsb
ficoms
cmp
mov
push
and
pop
or
pop
iret
je
sub
mov
lea
or
dec
repz
push
dec
or
in
xchg
add
into
add
inc
decb
addr16
xchg
sbb
cmpsl
inc
orb
mov
dec
stos
or
in
stos
cmp
addb
push
ret
push
dec
adc
sbb
jecxz
adc
fucomi
mov
xor
das
add
jo
add
xor
jmp
add
bound
cmc
push
lods
das
repnz
rorb
pop
xchg
scas
add
outsb
stc
leave
loop
outsb
cmp
adc
pop
cmp
popf
test
cmp
push
scas
cmp
dec
ja
or
shrl
ja
out
js
stos
and
out
mov
inc
mov
jno
andl
adc
lods
in
movsl
xchg
add
dec
cmp
stc
lods
mov
negl
pop
mov
sbb
cmp
test
and
cmp
aas
cmp
cmp
sub
mov
push
rcrl
jno
sarb
repnz
std
lret
mov
in
fidivs
scas
adc
or
rcrb
sbb
repnz
or
lcall
mov
sahf
cmp
into
xor
arpl
inc
push
movsb
aaa
push
inc
in
stos
js
lods
adc
daa
adc
mov
lock
test
fldt
sbb
xchg
jl
jae
xchg
add
ficompl
push
push
or
cmpsl
cwtl
add
adc
rcrl
scas
mov
inc
cmp
push
and
neg
jo
shlb
jnp
xor
out
or
and
and
push
mov
das
into
sub
popf
pop
and
push
inc
mov
push
dec
adc
out
push
test
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shl
dec
dec
cmp
jle
cmp
sub
fwait
lock
cmp
pop
sub
mov
ss
rcrb
scas
cmp
iret
inc
xchg
jmp
sub
iret
push
push
xchg
pop
mov
fwait
push
cmp
and
or
xchg
adc
cs
push
mov
repnz
sbb
adc
push
lock
les
inc
mov
dec
xor
clc
ds
popf
nop
cs
aad
mov
dec
out
add
mov
gs
scas
stc
xchg
push
mov
dec
mov
mov
xchg
mov
jl
xor
mov
clc
fwait
jae
mov
fdivr
in
mov
outsb
add
dec
lcall
and
arpl
mov
inc
cmp
loop
mov
lods
mov
mov
mov
pop
push
pop
sbb
in
loope
out
xlat
jg
mov
imul
xor
cltd
pop
fisttps
loope
push
pop
pop
hlt
out
dec
xlat
push
fcoml
sub
and
push
cmp
icebp
cwtl
pop
jnp
inc
add
stc
jg
aad
jmp
fcoms
and
push
dec
aad
mov
imul
dec
stc
xchg
movsb
dec
xchg
pop
sbb
dec
sahf
notl
leave
xchg
add
and
fimuls
lcall
in
xchg
xchg
jne
repz
fld
cld
push
jne
mov
mov
ja
xchg
mov
sbb
cwtl
insl
les
pop
lock
sahf
inc
ss
mov
shl
push
les
repnz
cmp
out
and
sarb
gs
in
jne
in
hlt
push
movsb
sbb
gs
mov
rcr
in
and
sub
leave
lods
test
and
stc
test
inc
in
cmp
xor
insb
inc
pop
inc
test
jecxz
sbb
mov
test
les
cltd
test
jb
jl
das
mov
add
std
adc
pop
ret
xchg
mov
sahf
add
lock
mov
movb
leave
mov
cmpsl
mov
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
mov
fiadds
jle
jns
dec
pushf
shrb
and
aam
insb
lock
daa
mov
adc
mov
mov
push
int
and
sbbb
adc
sbb
adc
add
add
out
or
out
loop
xchg
and
out
sub
mov
and
pop
popf
clc
mov
inc
inc
or
or
and
dec
cwtl
testl
lahf
fidivs
and
mov
mov
lcall
push
push
sbb
icebp
enter
fs
mov
push
repz
mov
ficoms
test
dec
insb
mov
inc
lds
add
loope
out
mul
rcrb
jb
xor
stos
movsb
cmp
imul
mov
mov
lds
lret
inc
jle
movsl
inc
jl
xor
xchg
pop
or
jnp
xor
adcb
popa
stc
push
imul
xor
sbb
xchg
jmp
pop
lods
in
mov
xor
or
cmpsl
jb
cmp
add
adc
in
dec
ljmp
repz
std
stos
lds
xchg
fisubrl
icebp
gs
mov
lock
in
call
outsl
in
pop
jg
mov
dec
cs
add
test
leave
or
cmp
test
pushf
fwait
lret
or
clc
sub
and
repz
in
xchg
push
push
and
js
jl
inc
xlat
loope
shl
enter
stos
dec
push
and
and
xchg
add
mov
jp
push
out
or
pop
data16
sbb
add
cmp
and
dec
add
fwait
lods
pop
add
loope
push
pop
add
push
mov
sbb
jb
jne
lods
rcr
xor
popa
jbe
sub
ret
divl
jecxz
stc
mov
lods
test
dec
rcll
ds
adc
imul
xchg
je
dec
inc
rcll
push
xor
imul
cmp
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
and
jle
jl
jle
aam
inc
mov
lret
lods
add
mov
jg
xor
push
testb
adcl
inc
and
bswap
xchg
addr16
shl
out
out
mov
or
subl
rolb
push
cltd
xor
loope
push
fsub
lds
fs
test
xlat
mov
enter
cmpsl
mov
mov
xlat
xlat
sbb
cmpsb
loopne
sbb
jb
jnp
pop
jmp
cltd
jb
int3
add
sahf
push
push
xchg
add
inc
and
es
enter
cltd
scas
lret
out
dec
fisubl
daa
xor
fisubrl
rclb
cmp
sub
bnd
and
sbbl
xchg
int3
cmpb
dec
test
dec
pop
test
or
nopl
cmpsb
jno
xlat
cmc
testl
js
insb
add
dec
adc
fiaddl
clc
fsubl
arpl
mov
xchg
jge
cmpsb
xor
xchg
jno
movsb
add
xor
mov
outsb
iret
loop
pop
jns
out
idivb
jnp
rclb
xchg
inc
or
nop
popa
repz
in
dec
cmp
fnstsw
jge
clc
xor
xchg
mov
dec
jp
jmp
arpl
mov
xchg
fchs
mov
or
cwtl
sbb
dec
pop
testb
loop
xor
sbb
pop
jne
mov
pusha
stc
lock
mov
mov
loope
popa
jae
mov
sbb
js
sbb
cmp
push
lods
testl
inc
xchg
scas
scas
sti
xchg
mov
jge
test
test
insb
lods
push
test
push
data16
iret
mov
mov
add
sbb
xchg
xadd
sti
mov
jecxz
ror
inc
movsl
cmp
rolb
sub
mov
js
mul
inc
test
adc
outsl
cmp
into
inc
in
xor
cld
xor
movsb
mov
test
les
push
and
xorl
ljmp
jle
jg
xchg
cmp
xor
and
jg
std
sub
push
mov
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
jae
jo
mov
cmp
jae
das
sub
test
push
int
mov
popa
scas
mov
pop
enter
mov
ljmp
push
clc
outsb
sbb
lock
aaa
lcall
mov
xor
jne
lds
lea
icebp
cmp
or
push
movsl
stos
and
or
fstpl
add
mov
test
enter
cmpsl
adc
lahf
mov
sarb
and
cmp
je
mov
lock
cltd
insb
dec
aad
jne
xchg
push
mov
xor
inc
inc
stos
sub
mov
xchg
mov
ds
rcrl
cs
sub
mov
push
cmpl
js
pop
enter
icebp
cwtl
and
sbb
sahf
outsb
or
jmp
jle
adc
hlt
push
and
into
sbb
decb
fisubrl
fs
int3
cmp
in
or
add
xchg
fcmovb
les
rclb
ret
shll
lcall
xlat
dec
sub
stos
cmpsl
mov
sub
dec
jl
notb
sub
xchg
push
insb
shrl
fistpl
inc
pushf
mov
or
jbe
dec
movb
scas
push
lretw
movsl
pop
out
mov
fdivr
or
jb
fadds
ror
push
jecxz
xor
jne
xchg
sbb
xor
cs
inc
stos
push
subb
adc
or
adc
xchg
or
mul
sarl
xchg
subb
lcall
adc
dec
dec
sbb
jnp
push
mov
out
inc
shrb
lods
jbe
pusha
hlt
jbe
mov
and
or
into
call
fdivs
cmp
adc
xor
out
ret
sbb
sub
ljmp
dec
cmp
inc
mov
insb
popf
aas
mov
aas
lea
or
mov
inc
jne
stc
je
out
jge
in
cmp
cmp
cli
xchg
aam
dec
jge
stos
out
xchg
and
add
rorb
inc
xor
js
jbe
outsb
xchg
cmpxchg8b
fdivrs
cmc
sub
jmp
push
std
dec
sahf
push
push
add
mov
cld
mov
mov
cmp
mov
clc
mov
sbb
movsb
xchg
cltd
rorb
jge
cwtl
mov
or
notl
mov
out
adc
lods
hlt
and
loop
xchg
mov
lds
aam
and
bound
jnp
xchg
jae
test
ret
ror
and
cmp
outsb
addb
mov
mov
jnp
sub
dec
cmp
les
cmp
sub
out
dec
je
push
test
push
and
xchg
pop
sub
pop
inc
xor
cmpsb
mov
enter
enter
in
iret
xorb
cli
or
dec
fs
test
fbld
adc
sub
in
leave
jmp
add
add
adc
inc
out
rcrb
in
inc
iret
rclb
ret
orl
push
pop
enter
adc
gs
jl,pn
test
sub
int
jg
cwtl
dec
loopne
xor
xchg
xchg
mov
xchg
pusha
test
adc
add
sub
or
jmp
xlat
fwait
ss
lret
rcr
gs
cltd
das
push
xor
push
xchg
dec
nop
xchg
call
pop
insl
xchg
lock
aam
inc
add
add
sbbl
sbb
push
xor
arpl
jecxz
pop
mov
inc
popf
das
hlt
iret
xchg
xlat
inc
ret
shrl
xchg
or
loopne
pop
js
push
cmp
cmp
mov
xchg
jl,pt
sbb
fcmovne
jecxz
sbb
xchg
dec
das
ret
pop
cld
or
sbb
jne
add
in
inc
or
mov
inc
jmp
dec
lods
adc
sub
jmp
inc
outsl
and
ret
sbb
cmp
je
sti
mov
cmp
add
mov
cmc
xor
inc
dec
sbb
push
daa
fwait
cmp
xor
xchg
dec
push
jmp
imul
and
popl
sbb
inc
fnsave
repnz
jae
mov
mov
push
movsb
pushf
mov
test
inc
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
add
jle
cmp
dec
movsl
push
mov
mov
shl
and
mov
sbb
mov
repz
cli
in
rorl
lods
stos
das
push
mov
jg
push
pop
ficomps
lods
jno
xor
bound
leave
in
mov
clc
mov
xor
xchg
xor
pop
sarb
sub
sbb
in
pop
lcall
push
add
mov
js
jns
adc
in
loopne
out
ror
and
shrl
adc
mov
insl
mov
push
sub
mov
dec
sbb
loope
imul
cld
xor
in
or
add
pop
enter
mov
mov
pop
push
in
stos
push
pop
test
aad
in
sub
fisttps
sbb
adc
repz
sbb
mov
mov
add
mov
sbb
pushf
mov
scas
out
add
xor
xor
jl
push
sbb
ret
mov
mov
or
repnz
adc
in
aaa
fdivrp
inc
ret
push
cld
icebp
lar
dec
or
gs
and
and
bound
mov
shrb
imul
mov
and
mov
pop
mov
negl
xor
and
mov
call
mov
out
out
push
push
je
nop
dec
jb
push
scas
test
inc
sbb
cmp
xchg
or
mov
test
sbb
std
and
stos
adc
sub
shlb
jbe
inc
jg
pop
pop
inc
loope
sbb
cli
inc
enter
enter
lea
xchg
xorb
dec
jge
xchg
decl
out
into
js
push
xchg
inc
out
cmp
ret
hlt
out
fwait
pusha
mov
mov
loopne
fisubl
scas
push
cmc
xchg
sbb
repnz
pop
imul
sbb
xchg
int3
mov
bound
push
jb
push
aad
cmp
inc
out
stc
aaa
fisttpl
jbe
lods
call
addr16
leave
dec
clc
or
add
jno
fstpl
mov
or
fisttpl
add
add
stos
mov
pop
adc
movsb
jl
xchg
jle
cmp
ljmp
cld
xor
dec
jo
mov
push
das
das
adc
loop
cld
adc
jb
test
inc
fs
pop
mov
xor
inc
test
out
mov
sbb
mov
sbb
add
mov
int3
test
dec
dec
mov
mov
clc
xchg
fisttps
test
call
daa
xchg
loopne
dec
mov
cmp
pop
je
mov
dec
and
into
je
inc
in
mov
dec
xchg
rcll
add
inc
rorb
pop
jle
mov
mov
mull
jnp
mov
cmpb
pop
lods
fcompl
cld
xchg
mov
push
fstp
push
fsts
insl
or
pop
movsl
xchg
into
cmpsl
arpl
pop
adc
das
cmc
js
add
lcall
ds
bound
aad
fdivrs
mov
mov
sub
nop
or
mov
xlat
pop
xchg
push
mov
test
divb
xchg
add
fwait
sub
negb
cwtl
outsb
xchg
fs
mov
or
pop
add
mov
iret
dec
nop
dec
mov
jecxz
out
rcll
mov
mov
cmp
fnstsw
pop
rcl
cld
jae
mov
scas
fmulp
and
ja
test
loop
push
pop
movsb
jae
or
inc
mov
add
xchg
xor
popa
xlat
inc
mov
movsl
jmp
ret
incb
add
xlat
data16
pop
dec
and
and
mov
xchg
pop
sbb
iret
dec
int3
jnp
stos
pop
fbld
dec
inc
ss
mov
aaa
sub
clc
and
mov
push
in
xor
lods
jns
jg
fildll
lock
popa
push
jl
mov
xor
mov
stos
and
jns
mov
xchg
sahf
or
fidivrl
jns
pop
repnz
loopne
ret
test
dec
xchg
test
sbb
imul
comiss
add
negl
mov
jbe
in
jp
ss
add
loop
in
rcl
jge
jnp
mov
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
lock
jl
jle
mov
movsl
or
cli
ret
fdivs
mov
mov
cmp
adc
lods
or
aaa
lds
jae
dec
aaa
cs
and
and
inc
icebp
outsl
xchg
adc
imul
pushf
inc
mov
adc
scas
aas
fisubl
outsl
xchg
mov
pop
jmp
into
aaa
add
or
dec
cli
jp
mov
call
cmovne
mov
clc
cmpsb
push
sbb
lock
lds
cmp
jmp
aad
mov
mov
push
daa
sub
stos
leave
push
das
jl
rorl
outsb
lret
add
xchg
sbb
pop
and
inc
add
shr
mov
adc
ret
xor
mov
or
lea
push
mov
inc
mov
mov
dec
ds
dec
sbb
mov
das
aas
add
or
pop
pop
movsl
pop
mov
sbb
push
and
and
push
add
inc
adc
push
lahf
nop
mull
imulb
mov
add
loope
in
out
out
not
test
popf
sahf
repz
ljmp
push
cmc
jns
push
test
lret
jbe
adc
add
in
or
and
dec
add
test
not
sbb
fs
es
jecxz
pop
out
sbb
xchg
fbstp
sub
cs
testl
test
in
popa
pop
push
or
or
aad
mov
cmpb
dec
cmc
xor
stos
adc
cltd
cltd
inc
loopne
mov
inc
xorl
imul
dec
leave
loop
push
xor
decb
loopne
mov
mov
and
dec
push
pop
inc
adc
jb
out
sahf
mov
or
inc
fucomi
insl
aaa
test
fdivrp
mov
ret
scas
adc
aad
fdivl
test
pop
push
cmp
arpl
sub
jmp
mov
mov
xor
add
jmp
orl
imul
in
inc
cmp
jle
negb
mov
mov
push
inc
mov
in
repnz
or
mov
push
add
fs
xlat
repnz
mov
into
mov
stos
movsb
std
adc
rcrl
and
xor
push
mov
popw
cltd
sti
sbb
push
jb
inc
adc
inc
outsl
lock
mov
dec
xchg
push
fmul
insb
jle
neg
xchg
inc
mov
ficoml
int3
and
sub
adcb
insb
jp
xor
and
inc
fidivrl
mov
movsl
shlb
inc
sub
out
adc
imul
mov
or
lds
jl
add
scas
into
and
cs
out
aad
lock
mov
pop
out
add
pop
push
repz
xor
jne
inc
sbb
or
jns
roll
data16
inc
rorl
jmp
out
subb
pop
cld
mov
insb
pop
push
cmpsl
xor
loop
jp
mov
jb
in
xlat
fdivs
lods
loop
adc
dec
cmp
sbbb
sbb
sti
pop
stos
lods
lret
xchg
adc
es
sbb
fs
add
out
mov
adc
bound
inc
xor
inc
lahf
outsb
cli
mov
dec
pop
leave
sbb
ja
out
mov
add
psubb
into
lods
mov
jecxz
les
pop
mov
mov
ret
js
test
xchg
inc
push
inc
lock
adcl
popf
outsl
mov
xor
sub
dec
mov
jecxz
out
inc
fisubs
aas
daa
push
gs
iret
sbb
movl
jge
insl
pop
mov
or
nop
push
lret
jmp
mov
loop
jbe
and
and
ficompl
mov
dec
mov
pop
or
int
mov
or
test
xchg
xor
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
xchg
pop
pusha
jne
pop
xor
rorl
add
les
dec
push
xchg
lret
sbb
outsl
sbb
sbb
inc
fists
jae
push
nop
push
and
and
bound
jle
iret
sub
xor
repnz
and
xchg
jno
pop
and
xor
jne
sub
sub
jle
inc
jns
mov
inc
mov
enter
out
cmc
faddl
dec
popa
sub
push
xchg
mov
cmpsb
jns
pusha
inc
add
in
push
adc
dec
dec
xchg
xor
pop
adc
inc
add
or
push
sbb
enter
jbe
mov
sbb
xchg
addr16
cli
inc
jl
ljmp
or
inc
cmp
loopne
shlb
jecxz
mov
cmp
add
mov
and
int
stos
aad
ficoml
scas
cmp
bound
data16
inc
adc
adc
sbb
loopne
sub
jb
lods
test
sub
sub
movl
xchg
adc
pop
and
and
ljmp
mov
js
in
std
ret
jg
loope
inc
mov
add
mov
pop
jb
lods
mov
jecxz
inc
adc
mov
je
xchg
and
scas
mov
jl
hlt
mov
xchg
mov
pop
add
popa
mov
push
pop
pop
ret
add
or
add
sbb
fsubr
cmp
adc
leave
cmp
test
loope
push
adc
test
pop
mov
lock
pop
mov
cs
sbb
subl
push
loop
das
lock
fadds
std
mov
sub
sbb
mov
dec
mov
pop
xor
sbb
jo
inc
fstl
xchg
mov
sbb
icebp
mov
xchg
sbb
repnz
pop
xor
mov
das
pop
push
bound
push
or
xor
xor
inc
iret
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
divl
pushf
jle
adc
jle
ds
cmc
pop
push
loop
mov
dec
sbb
push
xor
test
sub
fldt
ljmp
loope
js
call
pop
cmp
lds
adc
push
lea
pushf
out
testl
push
mov
lods
sub
ret
xchg
inc
push
lcall
mov
sbb
pop
ret
jns
into
insb
lods
test
dec
fistpl
cmp
insl
lea
dec
mov
sub
loope
mov
sub
mov
or
cmp
bnd
push
and
insb
and
jbe
adc
pushf
dec
add
and
cmp
jge
stos
adc
adc
scas
rorl
xchg
pushf
jle
xchg
pop
aas
int
mov
fidivrs
xchg
xlat
not
test
stos
inc
mov
aam
inc
jbe
push
clc
xor
loopne
xor
pop
pusha
addb
fldcw
push
pop
imul
inc
or
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
xor
movsl
pop
popf
jle
adc
jle
jmp
fs
push
mov
jno
lods
sti
add
adc
mov
loope
cmp
jnp
orb
mov
xchg
xor
lods
xlat
pop
stos
movsb
and
rcl
and
adc
in
sub
lret
jmp
xchg
adc
leave
ror
mov
push
aaa
stos
or
cwtl
in
sub
aam
cwtl
jae
pop
lahf
dec
pop
pop
push
adc
adc
or
dec
pop
push
iret
xchg
or
inc
mov
nop
mov
ljmp
xor
lock
dec
incb
adc
push
fwait
add
in
dec
jb
adc
cltd
xchg
or
mov
xchg
mov
add
stc
jns
add
je
or
cmp
stc
flds
stos
cmp
mov
mov
das
xor
jg
cli
jne
mov
and
nop
jo
jne
call
adc
xchg
push
movb
xchg
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
push
pop
xchg
sbb
jle
adc
jle
sarb
iret
out
pop
insl
mov
aad
pop
pop
test
mov
cmp
fcmovne
xor
mov
or
mov
push
adc
sub
adc
xor
pop
test
sub
mov
cwtl
xor
or
les
cmp
lock
loopne
inc
or
jl
inc
shll
fdivrl
inc
es
xchg
in
push
inc
hlt
lret
xchg
addr16
mov
rcrb
test
mov
movsb
jno
sti
mov
nop
add
mov
pop
cmp
loope
incb
jp
repnz
or
or
pop
sti
sub
je
scas
jmp
in
int3
sbb
in
add
jne,pt
adc
push
divb
mov
enter
xchg
cmc
rolb
cmc
jl
in
push
cs
adc
movsl
fs
call
xor
popf
add
pop
inc
sbb
outsb
mov
daa
sarl
dec
out
sub
mov
inc
call
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
add
cwtl
jle
adc
jle
adc
test
push
push
jns
xchg
and
dec
push
bswap
xor
cs
cmp
mov
mov
les
pusha
add
loop
sbb
fucomi
arpl
fucomip
adc
jnp
sahf
push
fistps
sti
ljmp
pop
fs
sub
mov
mov
sub
add
pop
jns
mov
aad
test
push
cs
dec
scas
ret
in
jp
xor
and
or
lret
adc
mov
xchg
repnz
mov
or
test
lret
fcmovnb
xor
outsl
fcompl
in
ja
dec
addr16
rclb
pop
pop
lahf
fidivs
stos
jmp
push
or
dec
insb
fnstenv
and
test
std
stos
adc
inc
pop
xorl
jg
jo,pt
dec
in
incb
add
pushf
out
cmp
popf
cmc
push
xor
and
inc
add
inc
add
movb
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
cld
adc
sub
jle
xchg
cmpsl
sub
push
outsb
push
es
cmp
inc
or
adc
ret
sbb
addb
push
shll
jmp
enter
mov
cmp
faddl
cmc
jle
mov
je
loope
ljmp
xlat
jo
data16
xchg
mov
dec
sarb
lods
push
pop
std
xchg
mov
xchg
imul
pop
outsb
xor
or
outsl
sub
jmp
fwait
sbb
dec
xor
adc
xchg
adcl
xchg
fucom
mov
jl
out
pop
inc
mov
popf
out
call
pop
jo
xor
es
jl
lods
cs
push
ljmp
bound
jmp
ss
jno
and
daa
xorb
popa
movsb
in
adc
jo
fcmovnu
or
iret
ds
xchg
push
and
pop
xlat
xlat
insl
push
cmp
mov
or
dec
mov
and
and
outsb
fstpl
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
in
mov
cmc
pushf
sub
lahf
mov
mov
xchg
aam
popa
mov
cli
cwtl
ja
mov
pop
ss
mov
mov
cmp
and
jo
sti
cwtl
lods
push
rol
data16
mov
rorl
out
jmp
pop
fdivrl
push
in
dec
inc
pop
rcl
sub
cmp
mov
stc
xor
fiaddl
push
fistl
push
push
cli
mov
inc
dec
jnp
pop
pop
movsb
movl
aaa
and
sub
push
ficomps
ja
or
inc
push
push
adc
dec
sub
jmp
dec
xor
imul
fcmovne
cmp
stos
pop
dec
mov
movaps
in
mov
lds
div
in
xor
or
sub
sub
sbb
lods
sbb
add
sub
cmp
movsb
or
imul
inc
xor
gs
sbb
inc
aas
and
push
out
cmp
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
xchg
loope
loop
jle
adc
jle
sbb
ficoml
fcomp
jb
sub
or
jmp
jb
das
add
push
xchg
pusha
icebp
dec
call
add
dec
dec
out
aaa
pop
hlt
stos
insl
mov
int
adc
dec
testl
mov
orb
sub
or
sti
xchg
mov
mov
xchg
loope
js
mov
je
pusha
push
pop
sub
sbb
rcll
and
lcall
cwtl
adc
jp
in
in
mov
cltd
pop
inc
mov
cmpsl
dec
gs
mov
lock
inc
cmc
xor
dec
aas
jg
jno
lds
sbb
push
add
xor
stos
dec
gs
jle
sahf
cmp
in
and
jo
fbld
cmpsb
push
xlat
push
pop
es
insl
pop
mov
pop
xchg
lods
popf
pop
jnp
mov
mov
pop
movsl
push
adc
sub
dec
push
pusha
adc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
loop
movsb
jle
adc
jle
outsl
pop
cli
adc
sbb
sub
sbb
push
out
and
popa
mov
in
mov
addr16
daa
pop
dec
out
insb
aam
add
popa
mov
push
mov
lahf
es
fmuls
dec
in
push
push
cmp
sub
stc
ds
mov
cltd
sti
xchg
in
out
inc
sub
fs
cwtl
mov
js
data16
dec
dec
out
mov
insl
pop
cmp
cmp
push
xchg
testl
arpl
enter
nop
pop
testb
cld
mov
roll
xor
or
aaa
aad
mov
jge
cmp
popa
cmp
adc
cs
pop
sub
mov
add
xor
mov
outsl
pusha
push
clc
pop
das
in
xor
imul
jb
shlb
testb
in
rcrl
mov
movl
call
pushf
push
pop
mov
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
pushf
lcall
jle
jns
insl
jecxz
iretw
das
pop
sub
dec
pop
ljmp
cmp
mov
jb
fsub
cwtl
jae
and
cmpsb
into
imul
mov
shr
into
call
clc
stc
inc
inc
loope
jno
fidivrs
cmp
loope
mov
xor
jl
jmp
mov
lock
mov
in
jg
mov
xor
sub
and
leave
inc
movsb
pop
cld
aad
inc
jo
inc
push
push
pop
andl
sbb
popf
mov
sub
pop
das
sbbb
ror
xchg
fnstcw
hlt
mov
push
and
jp
js
push
inc
add
cmp
mov
mov
jecxz
cmp
out
out
xchg
pop
push
jb
or
ja
or
add
in
sbb
test
push
jb
add
mov
lock
mov
mov
mov
add
sub
push
inc
dec
rcrb
push
add
shll
and
jno
jne
stos
dec
add
mov
lods
or
dec
stos
arpl
mov
popa
dec
hlt
ret
xor
jo
stos
inc
aam
and
jae
test
or
xchg
mov
lock
decb
loopne
mul
sbb
jb
jbe
pop
pop
and
addr16
adc
out
fwait
pop
je
mov
and
insl
icebp
inc
int
mov
sbb
push
mov
dec
jl
mov
cmp
cld
add
pusha
push
mov
pop
xchg
fcoml
xchg
aaa
lcall
fs
adc
aam
pop
push
into
push
jae
rolb
or
daa
add
std
leave
jge
push
mov
push
mov
add
ret
shll
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
dec
push
xchg
inc
ret
mov
sbb
fmul
add
pop
iret
jmp
int
xchg
sub
push
mov
pusha
push
mov
outsl
rolb
dec
adc
pop
insl
dec
data16
xor
imul
cmp
push
xchg
movsb
lock
mov
dec
sub
lcall
xor
enter
or
pop
push
sbb
dec
xchg
dec
mov
cltd
mov
xchg
testl
jnp
int
or
mov
inc
add
cmp
or
inc
test
iret
ds
jns
and
nop
lahf
jg
dec
push
jle
push
mov
bound
stos
sub
bound
bound
cmp
add
orl
cmp
sub
push
xor
daa
popf
imul
cli
jecxz
or
pop
push
dec
inc
mov
cli
mov
lock
xlat
mov
jns
fbstp
lcall
outsb
out
mov
pop
sub
sub
sub
into
and
mov
out
pop
loope
loope
adc
jne
dec
jo
shlb
push
iret
ss
repnz
push
push
push
rolb
mov
iret
cmp
fstpt
in
es
mov
daa
push
pop
aam
leave
jbe
pop
sub
push
in
ds
scas
cmpl
lret
jbe
dec
fwait
xchg
fdivp
cwtl
lods
cmpsb
adc
lock
loop
push
out
jns
pop
lea
gs
jge
sbb
push
mov
or
add
test
data16
scas
lret
xchg
das
std
fcmovnu
stos
sub
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
lret
mov
jle
insl
rclb
mov
das
and
cmp
xorl
sahf
lock
jmp
push
loope
push
out
mov
push
add
lds
add
lcall
stc
dec
test
inc
sti
scas
push
mov
iret
dec
jp
cmp
fadd
sub
push
addr16
xchg
cmp
sarl
loope
lret
cmp
sub
sbb
iret
mov
icebp
fs
pop
aad
das
push
xchg
adc
addr16
fdivr
mov
push
cmpsl
sub
imul
mov
xor
stc
mov
pushf
adc
dec
lahf
or
mov
mov
adc
cmp
stos
dec
int
jne
push
rolb
rolb
mov
jns
and
int
jmp
jbe
sub
cli
stos
loop
jnp
sbb
in
or
test
add
insl
sbb
dec
and
xchg
sub
cli
popa
mov
lret
outsb
imul
and
adc
out
and
adc
jne
dec
cmc
pusha
daa
sbb
jno
pushf
jge
pop
roll
movsl
iret
mov
jecxz
popf
dec
into
in
push
cmpsl
icebp
stos
idivb
mov
jno
jnp
push
shrl
dec
xchg
pop
xchg
pop
in
dec
nop
sbb
add
cltd
sbb
mov
cmc
push
aam
fcomps
dec
mov
iret
data16
and
sub
jp
dec
jns
xchg
cmp
es
mov
xor
sbb
add
adc
or
add
pop
jb
mov
lods
jns
nop
add
mov
jo
inc
dec
xchg
xchg
test
mov
and
ret
cmc
push
xorb
aaa
mov
push
mov
pop
dec
mov
pop
es
fiaddl
imul
out
arpl
std
xchg
add
lahf
mov
sbb
sbb
xor
repnz
adc
scas
lods
rcrl
es
add
jb
popf
mov
xchg
rcrb
negb
inc
data16
divl
dec
pop
sbb
cmp
dec
dec
mov
add
fdivs
repz
daa
adc
arpl
add
fwait
out
ljmp
clc
sub
mov
sbbl
sub
sub
mov
stc
arpl
mov
pop
cmpsl
cmp
push
dec
movsl
mov
loop
andl
xor
xchg
pusha
addl
mov
lahf
xlat
inc
pop
add
mov
call
and
dec
int
mov
inc
and
shl
xlat
test
outsl
ja
pop
into
add
inc
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
pop
aam
jle
jl
jle
mov
stos
pop
lret
sbb
fnstenv
daa
inc
xor
mov
inc
pop
xlat
es
jbe
push
cmc
mov
or
fidivrl
lcall
sbb
mov
fstpt
xchg
loope
mov
mov
in
adc
imulb
pop
pop
iret
jns
pop
frstor
cmc
ds
imul
cmpb
push
sbb
fstpl
and
inc
ljmp
lahf
repnz
out
xchg
out
add
jp
fwait
and
lds
jno
adc
mov
mov
and
xor
mov
jp
xchg
jns
jo
mov
mov
jecxz
sub
dec
ret
and
adc
stc
sub
addb
rcl
jge
outsb
fldt
cli
sub
inc
cld
mov
mov
jmp
inc
mov
ljmp
mov
stc
xor
negl
paddd
push
int
xor
dec
repz
js
lret
divl
pop
mov
icebp
ret
sbb
in
arpl
pop
movsb
out
jae
inc
jp
jge
sahf
jmp
aam
cmpl
gs
outsb
insb
mov
xorl
and
andb
lret
nop
push
popa
rcrl
iret
mov
sbb
push
icebp
add
addr16
or
mov
lret
loop
mov
scas
inc
cli
sbb
repz
ja
ss
add
xchg
daa
mov
cltd
test
jns
das
loope
pop
orl
out
push
sub
jle
rorb
shl
xor
fwait
stos
push
mov
jg
push
int3
enter
mov
ss
iret
fcoms
aaa
in
insl
cmp
mov
lret
and
or
dec
jno
jmp
inc
sbb
lods
and
mov
or
cmpsb
add
nop
fbld
cmc
xchg
mov
ds
jmp
xchg
bound
por
add
into
shrb
loopne
imul
cld
sbb
and
aaa
jecxz
mov
jne
xchg
jnp
ds
xchg
imul
aad
hlt
cs
cs
mov
mov
divb
add
xor
adcl
nop
ds
rorl
inc
mov
cli
mov
outsb
or
or
cld
enter
pop
stc
mov
fs
test
adc
xor
xor
sbb
push
mov
sub
push
in
sbb
call
out
mov
or
push
and
icebp
insl
xchg
data16
scas
push
xor
and
repz
enter
mov
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
rcl
jle
jl
jle
vcmpss
js
xor
push
adcl
les
and
lcall
xchg
pop
pop
fsubs
dec
orb
lods
pop
xchg
add
movsl
pop
or
subl
pop
int3
shrb
xchg
bound
cmp
adc
lret
push
fidivrs
push
movsl
popf
and
sub
lock
aam
in
std
scas
sbb
mov
cmp
clc
add
add
jmp
mov
popf
dec
jmp
jge
aam
push
jmp
mov
xor
push
mov
lods
pushf
cmc
cmp
je
sahf
aad
mov
xor
loope
andl
pop
jb
mov
mov
adc
int3
fs
jae,pn
mov
jg
mov
inc
jne
ja
push
stc
xor
dec
xchg
in
fisttps
push
xchg
push
clc
sbb
lret
rcr
inc
jo
mov
push
and
mov
xor
mov
loope
or
jb
in
push
jmp
jb
adc
sbb
mov
pop
stc
pop
ret
lods
pop
cmp
icebp
lods
nop
movsb
jno
mov
outsb
dec
push
cmp
cmp
dec
pop
push
or
xchg
sbb
jmp
push
sub
xor
xchg
daa
mov
push
icebp
jb
add
xchg
sub
mov
jb
jg
xchg
test
inc
push
cmp
aam
data16
xchg
outsl
hlt
mov
ja
loope
xabort
outsb
push
cld
sub
fmull
push
in
lcall
in
popa
sahf
adc
jbe
adc
je
daa
loope
or
stos
in
ficoms
mov
nop
push
mov
xchg
lock
adc
aas
ret
rcrb
push
imul
aas
in
int
pop
test
insb
sbb
xor
xor
cmp
xlat
adc
cmpsb
sahf
sarl
aam
jge
ret
mov
fildll
icebp
cmpsb
dec
mov
cs
nop
outsl
jb
mov
jnp
repz
mov
aas
es
scas
and
sbb
cwtl
movsl
pop
enter
test
shlb
jle
out
and
rcrb
ljmp
ljmp
or
data16
mov
lods
or
jbe
or
and
outsl
xchg
inc
test
mov
stos
xchg
push
xor
icebp
rcl
das
or
enter
xor
add
xchg
rorl
dec
inc
dec
mov
jecxz
frstor
ljmp
push
cltd
xchg
fwait
cli
pop
pop
cmp
jmp
inc
push
ss
inc
test
adc
push
push
jb
push
enter
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
mov
jle
jl
jle
pop
fnstcw
xchg
push
scas
cmpsb
mov
lret
mov
scas
pushf
dec
pushf
incl
jg
xor
pand
pushf
lcall
mov
mov
inc
push
icebp
adc
pop
sub
pop
mov
sbb
imul
je
mov
pusha
xor
jmp
cwtl
push
and
cmp
inc
sub
add
mov
mov
mov
pop
jbe
jae
dec
popa
mov
in
and
push
es
imul
mov
out
push
cmp
mov
int3
jle
enter
mov
xor
dec
jbe
mov
push
sbb
loopne
xchg
xchg
mov
inc
mov
pop
push
mov
mov
adc
mov
mov
cltd
fxch
nop
push
js
test
repnz
fcomp
dec
push
nop
rcrb
cmc
pop
push
sbb
int
sub
jno
fmul
sbb
leave
shlb
fadds
scas
xorl
jbe
sbb
lods
cmp
add
cmp
divb
xor
mov
lret
shll
dec
mov
in
jo
lret
out
int
jbe
xchg
xchg
jmp
in
lahf
or
sub
push
int
sbb
jmp
popa
pop
lds
ret
dec
mov
dec
and
inc
fldcw
out
and
js
or
xor
and
mov
scas
inc
ss
inc
lds
inc
adc
lret
jp
sbb
out
xchg
scas
or
jmp
sub
jecxz
ret
je
imulb
xchg
pop
adc
xor
push
and
dec
lds
flds
mov
push
or
push
in
push
std
adc
push
in
cmp
into
test
in
adc
ret
ljmp
mov
andl
inc
roll
jmp
bsf
mov
adc
xchg
mov
lcall
mov
test
and
xor
nop
cmpb
pop
decl
xlat
pop
cs
cmp
loope
sti
cmp
out
call
xchg
or
jge
sub
ds
movsl
adc
push
js
mov
jns
cmp
xchg
rorb
cld
pop
xchg
pop
mov
fucomip
jo
pop
cli
sbb
cmp
dec
cli
out
sbb
bound
cmp
mov
cmp
loop
sbbl
jnp
dec
mov
out
mov
and
mov
aam
sbb
xor
popf
sbb
ret
cmp
adc
cmp
mov
subl
dec
js
daa
sti
das
call
xchg
popf
cmc
push
mov
ret
dec
mov
xor
mov
jmp
or
pop
jno
xchg
add
fsts
jl
jle
test
xor
dec
and
sbb
aam
fcompl
pop
jae
adc
jp
xor
test
daa
or
cmp
out
pop
decl
fwait
std
lcall
xchg
popf
mov
adc
cmp
negl
test
sbb
sbb
jbe
cmpb
jmp
outsb
mov
cmp
jle
add
jmp
fwait
ds
mov
insl
subl
out
mov
mov
cmp
xorl
pop
int3
mov
sbb
pop
mov
bound
push
fistps
test
movsl
mov
sbb
sbbl
mov
sahf
ret
fiaddl
cmp
adc
sub
aaa
out
push
push
xor
sti
push
adc
sbb
dec
pop
clc
jmp
clc
ljmp
or
test
pusha
mov
and
lret
call
pop
daa
sbb
push
faddl
inc
incb
xchg
fnstenv
lret
inc
xacquire
mov
mov
add
cmpsb
inc
out
adc
inc
push
into
pop
push
sti
jne
mov
test
and
mov
xchg
ret
push
mov
sbb
or
lret
sub
mov
mov
adc
fsubs
popa
xor
mov
setb
sarb
test
jmp
loope
mov
xchg
sub
adc
sahf
arpl
je
icebp
popf
lds
out
dec
or
xchg
lcall
push
ror
lds
jle
cmpsl
std
sti
aam
insl
imul
ret
jnp
pop
fiadds
mov
dec
gs
out
or
mov
jbe
rcrb
icebp
jp
lods
cld
out
leave
jo
in
mov
mov
cmc
jmp
imul
sub
roll
jns
mov
pop
mov
pop
orb
fwait
ljmp
adc
lods
xor
add
lods
xchg
and
push
ds
push
dec
dec
xor
jecxz
add
inc
iret
mov
stc
jae
lret
sub
sub
jge
int3
test
leave
jl
out
in
push
pop
mov
and
sbb
or
lret
jb
mov
sbb
addr16
mov
lahf
dec
insb
call
aaa
xchg
lods
push
mov
jbe
push
in
jmp
leave
cs
cmp
mov
xchg
cmp
xchg
pop
pop
push
inc
out
inc
xchg
dec
dec
push
gs
mov
push
xor
xor
xor
inc
xchg
shrl
cwtl
sub
jno
pop
ret
push
mov
jne
inc
mul
leave
dec
sbb
aad
icebp
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
jl
jle
scas
jl
jle
jae
jo
lret
hlt
adc
mov
rclb
and
mov
sti
or
mov
loopne
aaa
dec
xor
mov
call
mov
mov
pmaxub
mov
scas
pop
mov
in
dec
mov
add
pop
js
push
inc
jb
cmpsb
mov
mov
and
sub
or
mov
pop
iret
pmullw
aad
xor
pop
setbe
lret
xor
push
jae
add
in
cli
add
gs
mov
loope
int3
loop
out
fldcw
cmp
std
out
scas
repz
sub
or
inc
repz
cmc
clc
loopne
or
adc
jl
int
push
pushf
cli
stos
and
cltd
dec
shll
shll
jae
frstor
xor
pop
jne
lret
add
std
ds
mov
xor
pusha
lds
adc
mov
stc
iret
das
cwtl
stos
cmp
mov
lahf
je
cmp
lahf
pop
add
int3
or
fisttpl
nop
mov
push
in
sbb
push
pop
in
imulb
mov
mov
push
insb
into
add
cmp
add
ret
lock
adc
or
mov
and
notl
cmp
in
test
aam
xor
pop
jbe
pop
pop
add
out
cmp
or
aaa
or
test
sub
mov
add
bound
outsl
loope
rcrb
bound
gs
js
mov
push
pushf
xchg
cs
shr
adc
out
test
mov
and
lahf
aad
js
popa
aam
fwait
or
lcall
out
lahf
nop
lock
insb
push
cmpsl
jns
xchg
inc
cmp
sbb
mov
sbb
mov
das
aam
outsb
lret
cltd
xchg
aad
add
jne
pop
movsb
sti
xor
cmp
jmp
pop
lock
sbb
dec
cmp
fs
mov
cmpsb
xor
dec
divb
lea
jge
mov
movsb
cmp
or
aad
repnz
call
arpl
jo
cwtl
hlt
insb
test
in
pushf
fiaddl
in
pop
ds
sbb
stc
pushf
xchg
pop
insb
dec
sub
in
add
jecxz
push
lea
mov
shll
cmp
lds
shlb
aam
cld
shr
movsl
test
jge
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
cmp
or
stos
or
push
adc
sub
lds
fsubr
mov
cli
adc
mov
pop
or
xchg
add
jmp
lcall
rcl
pop
xchg
adc
lcall
cwtl
cmp
insl
and
inc
and
notl
cmp
push
mov
sub
ficompl
sbb
jp
inc
pop
out
cs
mov
fwait
or
cmp
cs
lret
cmp
sti
ja
cld
jmp
mov
xchg
sbb
mov
or
mov
lret
add
or
call
pop
mov
stc
pop
mov
arpl
pop
pop
rcll
inc
and
xlat
pop
xor
adc
mov
int
iret
sub
out
jno
or
scas
movsb
icebp
aaa
cmp
cmp
clc
or
fwait
loop
jmp
aaa
mov
mov
addr16
iret
lret
or
lods
dec
movsl
inc
sub
test
outsl
test
pop
push
xchg
or
mov
mov
inc
lret
sub
sti
mov
in
cmp
dec
lds
pop
xchg
pop
incl
cld
call
and
int
shlb
into
lock
mov
dec
and
clc
dec
out
out
frstor
mov
shrl
loop
lcall
add
lods
stc
mov
lock
cmp
push
mov
insb
lds
shlb
mov
xchg
cld
or
call
sub
std
jno
imul
mov
imull
inc
sub
nop
ljmp
fidivrl
mov
fld
and
mov
push
ss
shll
xor
leave
xor
sbb
sub
push
pop
into
fidivs
je
cwtl
jl
push
push
out
mov
stc
jmp
ret
int
pop
cmp
fldt
xchg
aad
mov
mov
xor
rol
aam
cmp
xchg
out
lret
sbb
add
push
mov
pop
rclb
leave
mov
sub
sbb
scas
jne
inc
xchg
out
and
repz
movsl
dec
cmp
popa
dec
cmpsb
in
mov
rorl
push
in
mov
mov
aas
xchg
push
aam
xor
adc
mov
lock
leave
add
add
xor
push
xchg
pop
add
jle
jl
jle
shll
jle
jg
popf
ret
mov
outsb
xchg
lret
enter
jecxz
dec
jae
js
in
imul
imul
test
popl
pop
cmpsb
test
and
push
loope
int
push
mov
out
in
aam
inc
dec
das
pushf
add
add
add
mov
ret
cmp
pusha
jmp
push
push
mov
loopne
jnp
icebp
mov
int
sbb
jns
lret
ret
scas
cli
bound
or
stc
dec
js
sbb
stos
les
xor
dec
inc
fstps
addr16
stc
mov
push
ret
xchg
mov
jb
sub
mov
out
inc
jge
sub
ds
ja
out
dec
loop
in
mov
add
jle
ret
cmp
arpl
sub
inc
in
mov
inc
insl
sbb
sbb
cmpsb
je
pop
and
push
loop
jmp
cmp
inc
in
or
or
pop
and
add
xchg
ds
mov
mov
out
pop
fdiv
fistps
enter
mov
lret
ljmp
cmp
push
out
outsb
push
pop
stos
mov
sub
repz
sbbb
sbbb
cmpsl
cmpb
cs
jns
test
jg
ficoml
aad
mov
add
cmp
pop
push
cmp
sbb
dec
or
push
or
imul
jge
iret
dec
rorl
push
mov
ficompl
pop
push
cmp
repnz
push
out
ljmp
stos
add
xlat
incl
dec
inc
inc
out
jecxz
pop
daa
jne
or
hlt
shl
push
scas
jbe
and
scas
jae
mov
jbe
xor
sbb
test
pop
or
sbb
cmpsb
fnstcw
arpl
inc
sar
movsl
sti
pop
mov
shll
or
loope
xor
dec
and
inc
push
sahf
push
iret
xchg
addr16
scas
ret
dec
rorb
sub
adc
and
outsb
je
shll
enter
add
shll
inc
sub
inc
inc
repnz
pop
leave
dec
sti
xchg
loop
jle
xchg
rol
aad
adc
jge
fcmovnu
sahf
enter
pop
mov
mov
shr
enter
dec
sbbl
insl
out
mov
aad
jbe
flds
sub
jg
adc
adc
inc
clc
jmp
je
push
push
lock
outsb
dec
mov
fwait
jmp
jle
scas
jl
jle
cltd
fwait
and
mov
push
xor
pop
mov
push
xchg
stos
adc
lock
ljmp
rcrl
add
les
shrl
sub
or
in
mov
stos
xchg
xor
test
dec
ret
mov
xchg
loop
bound
jbe
pop
xor
cmpsl
pop
mov
rcrl
gs
ds
or
sbb
insl
pop
clc
loop
mov
push
dec
add
lds
sub
lds
xchg
rcr
sti
lret
cmp
ds
loopne
sbb
push
or
rorb
and
sbb
dec
adc
sbb
jbe
icebp
mov
dec
loop
loop
fwait
cmp
or
iret
iret
negl
outsb
cmp
std
jb
mov
push
push
jle
xlat
andb
mov
mov
jecxz
mov
pop
stos
jne
adc
lds
push
mov
cmp
loopne
mov
icebp
mov
mov
fimull
and
insl
movsl
es
fst
xchg
mov
lods
nop
sub
cwtl
adc
in
push
mov
ret
test
lret
pop
faddl
adc
pop
mov
dec
fcmovu
es
pop
adc
sbb
and
sbb
rcrb
add
push
out
sub
push
cli
out
fwait
insb
clc
das
jle
push
dec
imul
lcall
dec
and
mov
inc
outsb
fbld
push
popa
ret
fidivrs
cmpb
stos
push
ret
cmp
andl
pop
push
dec
pop
inc
aam
daa
int
xor
xchg
call
dec
or
xchg
jo
xchg
mov
decb
sar
je
mov
lret
or
or
lret
sbb
and
mov
fildll
fiadds
jl
les
int
or
pusha
mov
fdivrp
xchg
data16
add
icebp
xchg
fs
add
int3
out
int3
inc
lds
stc
inc
and
mov
test
fists
jo
cmp
data16
push
jmp
sahf
inc
roll
stos
push
pushf
or
movsb
xchg
insl
jns
mov
pushf
mov
push
lds
cmp
popa
js
push
xchg
int
mov
dec
inc
push
mul
xchg
jl
mov
dec
push
push
sbb
divl
out
sarl
pusha
mov
pop
add
pop
xorb
sub
ja
dec
push
xor
out
ljmp
cs
mov
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
mov
and
scas
jl
jle
mov
jb
call
popa
jno
ret
popf
mov
mov
jno
movsl
test
loope
icebp
stc
jge
mov
xchg
pop
mov
mov
and
pop
xor
xor
notb
xchg
jbe
shr
pusha
sub
enter
xchg
inc
or
sub
mov
sub
mov
inc
sub
cmpsl
ljmp
movsb
fcmovbe
testb
cmp
mov
adc
adc
imul
xor
inc
sub
stos
js
inc
mov
mov
fdivs
aad
push
out
insl
add
push
add
push
sbb
or
in
add
sub
mov
adc
push
pop
adc
adc
mov
mov
jno
push
addr16
jbe
shll
xlat
jne
sbb
pop
scas
push
addr16
popf
ljmp
iret
xor
pop
inc
jp
mov
inc
stos
sbb
jne,pn
hlt
pop
jno
or
dec
mov
repz
sbb
imul
je
pop
push
ss
inc
dec
pushl
sbb
xchg
jne
test
mov
movl
les
insb
mov
and
mov
xchg
push
adc
sub
push
loop
or
push
call
test
ds
xorb
mov
sub
jmp
divb
nop
imul
jge
int
sbb
jb
xchg
pop
or
and
loop
scas
gs
insl
gs
test
xchg
or
adc
insl
mov
lret
xchg
cmp
jb
jge
sbb
dec
arpl
push
imul
mov
test
hlt
lcall
jmp
xchg
or
outsb
xchg
test
loope
xchg
loopne
mov
lret
out
cmp
test
out
ljmp
jle
or
mov
pushf
pop
inc
ret
clc
mov
mov
mov
lods
pop
pop
lret
jo
mov
imul
adc
add
fprem
hlt
call
xlat
pop
lcall
xor
dec
lret
lahf
in
ret
cmc
xlat
call
cmc
and
add
inc
inc
xor
leave
ja
fwait
clc
bound
out
hlt
repnz
lds
decl
incb
add
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
stc
xchg
popf
dec
inc
jle
scas
jl
jle
push
mov
fwait
or
pusha
pop
in
or
bound
mov
insb
ljmp
and
push
push
cld
pusha
stos
add
nop
dec
cmp
insl
test
fnstsw
push
mov
call
mov
xchg
and
dec
cli
shll
mov
add
inc
push
pop
fistpll
leave
pop
jmp
add
mov
fs
sbbb
leave
cmpl
jno
pop
fstps
imul
fdivrp
je
call
sbb
add
addr16
popf
push
xor
adc
adc
test
sbb
mov
sbb
pushf
lret
pop
shl
xlat
lahf
xchg
sbb
stc
or
sbb
xchg
ret
daa
sub
or
cmp
xchg
dec
test
pop
shrl
rcl
add
outsl
dec
aaa
and
xor
les
cmp
rcll
sahf
add
mov
cltd
mov
inc
movsl
leave
pop
jno
aam
sbb
mov
js
loop
ret
mov
or
in
mov
xor
loopne
adc
inc
or
sub
std
jb
jne
ss
xchg
data16
sbb
jmp
movsb
in
daa
test
outsb
sub
pop
add
aas
mov
push
xchg
xchg
xorl
lret
mov
into
test
dec
add
daa
lods
add
rolb
stc
cmp
int
sub
inc
test
ja
dec
sub
in
fdivs
pop
xchg
inc
push
sar
pop
sbb
jl
and
cmp
lods
enter
fdiv
jmp
adc
jl
pusha
shll
pop
jbe
inc
ds
pushf
push
xorl
loopne
dec
in
leave
mov
jg
mov
mov
stos
int
xor
pusha
jmp
loope
ss
cld
sbb
jecxz
pushf
pop
daa
lea
xchg
shlb
jge
dec
jmp
cmp
push
lea
mov
test
inc
jmp
icebp
inc
add
cld
sub
inc
pop
add
cmc
test
mov
leave
adc
xor
pop
sub
adc
mov
in
pop
push
ss
fbld
ret
pop
sbbb
inc
gs
adc
or
loopne
xchg
dec
out
or
add
add
mov
and
jno
push
mov
push
or
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
sub
aam
xchg
jle
jg
jle
jg
sub
scas
repnz
imul
in
jnp
mov
ja
bound
lds
ret
outsl
inc
push
pop
adcl
xor
test
subb
stos
jno
das
ret
jo
scas
or
dec
addr16
cld
sub
mov
enter
xlat
lret
ljmp
fcmovnbe
fdivrs
lcall
jno
call
loopne
mov
dec
jecxz
xor
std
out
imul
in
aad
cmp
insb
adc
out
dec
test
nop
and
fcmove
adc
inc
inc
push
pop
out
int
dec
xchg
sti
out
lock
aad
ret
push
mov
jae
scas
insb
pop
and
jecxz
aad
gs
rcrl
push
out
mov
lret
dec
pop
test
lea
push
insb
in
push
cmp
mov
pop
out
inc
aad
mov
mov
add
ljmp
fdivl
pusha
fnstenv
cli
ja
fistpl
lret
add
fisubrs
adc
fimuls
jl
push
clc
mov
subb
lret
pop
xor
popf
mov
popa
fsubrs
adc
loopne
shr
push
je
add
gs
daa
and
subb
fmull
outsb
shlb
dec
loop
xchg
mov
xchg
lcall
fiaddl
loope
mov
inc
or
dec
aad
mov
xor
popf
mov
jb
addb
xchg
test
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
or
dec
jle
movsb
jg
jle
push
fs
addr16
fnstenv
jmp
test
jp
mov
sub
mov
aas
add
aad
xor
fs
xlat
psubusb
mov
rcll
repz
xchg
cmp
push
inc
faddl
push
jmp
imul
pusha
stc
ret
pop
out
lods
out
jae
sahf
pop
xchg
das
sbb
fidivs
inc
sub
or
sbbb
fsubrs
and
and
shlb
xchg
popl
div
xor
into
push
mov
roll
cmpsl
pop
inc
pop
and
or
or
add
mov
mov
dec
mov
mulb
filds
adc
cwtl
and
pop
jno
adc
mov
inc
mov
xor
or
ret
jmp
xor
lahf
xor
movsb
in
xchg
lods
insl
int3
leave
nop
xchg
or
or
jns
icebp
jnp
sahf
sub
adc
push
cmpsl
popf
dec
jno
and
xchg
mov
fs
cmp
ljmp
push
loop
scas
and
lea
and
scas
xchg
in
mov
jg
cmp
inc
shrl
xor
mov
movsb
bnd
iret
dec
int3
push
pop
mov
pop
lds
aam
adc
xchg
mov
jns
adc
dec
nop
aad
jnp
idiv
inc
jb
call
jns
or
cmp
call
gs
and
xor
xchg
xlat
insl
xorl
fisubrl
jo
clc
stc
mov
shr
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
and
jo
add
add
add
push
add
sub
add
lret
mov
mov
mov
mov
shll
outsb
leave
push
pop
les
stc
mov
xor
mov
adc
xchg
shlb
adc
push
leave
sbb
test
aad
sbb
fiaddl
les
jns
add
xchg
xlat
or
cmp
nop
mov
cmp
pop
imul
mov
test
push
jo
incl
int3
ret
or
adc
out
jb
ret
nop
loopne
add
xchg
pop
int
inc
cld
mov
rolb
or
dec
or
mov
rcr
pushf
fstpl
xorb
sbb
cld
jge
imull
fwait
lahf
dec
push
movsb
add
adc
cli
jg
test
add
shr
clc
mov
mov
dec
and
jae
add
add
push
pusha
in
jle
lcall
aam
rolb
add
add
add
aaa
mov
shr
std
fs
shll
mov
xchg
bound
or
xor
lods
das
sub
cmp
fildll
out
sbb
and
fsubl
and
cmp
iret
test
out
daa
shrb
xlat
mov
sbb
cmp
aas
adc
adc
ret
aas
fld
shlb
mov
cmp
jae
dec
xchg
and
outsb
cmpsb
fwait
mov
jb
xchg
rcr
mov
inc
mov
cld
fstl
xor
sub
pop
xchg
fs
add
mov
pusha
ss
outsb
push
stos
sahf
or
xorl
and
or
fmuls
jg
xchg
pop
jb
mov
mov
hlt
rorl
dec
xchg
fstpt
pop
and
pop
cld
or
sbb
addb
rorl
repnz
add
add
add
mov
push
test
mul
roll
add
add
sbb
pop
jle
andb
fisttps
adc
arpl
int
out
fs
push
sbb
and
lea
pop
adc
in
xor
cmovo
scas
in
in
lcall
nop
cmp
sbb
inc
imul
mov
inc
dec
sbb
push
xchg
cwtl
cmpsb
fldl
push
test
push
sub
enter
shrb
insb
mov
flds
or
and
test
fimuls
mov
mov
outsl
xor
xchg
aas
adc
pop
cmpsb
sahf
pushf
mov
mov
stc
add
xchg
pop
jae
loope
lods
sarb
ror
insl
jl
mov
or
xor
loop
in
or
inc
mov
in
fwait
sub
mov
fcoml
jns
icebp
scas
and
mov
mov
jl
or
loop
xlat
pop
mov
push
cmpsl
es
xlat
push
and
add
mov
roll
scas
mov
add
add
shlb
test
xchg
cltd
push
les
into
jno
fidivrs
adc
in
mov
cmp
pop
aam
mov
mov
test
xorb
xchg
or
inc
pusha
cmc
ficoms
or
negl
std
adc
jle
orb
or
jo
xor
addr16
cli
in
jb
lods
jnp
repnz
jg
cmc
ss
jmp
repz
sbb
hlt
add
xor
fdiv
adc
mov
push
cli
sbb
pop
mov
dec
js
cmp
sbb
bound
daa
or
fs
and
shrl
fidivs
popa
lret
xchg
mov
and
push
dec
inc
fisttpll
adc
test
out
dec
mov
xchg
dec
ret
out
mov
xor
arpl
or
iret
sbb
fwait
sub
mov
push
lcall
add
pop
jae
or
pop
dec
or
xor
test
add
add
cmpsb
sub
push
int
sub
rol
mov
sub
mov
ror
sub
popa
imul
data16
out
ret
push
xor
repnz
sbb
jmp
jecxz
and
or
xlat
hlt
jp
and
push
pop
adc
lcall
jg
add
out
mov
dec
or
clc
mov
adc
add
sbb
xor
push
dec
popa
push
and
out
aad
pop
test
out
lods
xchg
adc
add
mov
lods
xchg
mov
loope
sbb
arpl
stc
jge
insl
inc
jbe
pop
roll
subb
out
cmp
stos
jne
das
add
dec
mov
loope
and
or
jecxz
push
mov
test
insb
fwait
arpl
icebp
jg
cmc
insl
cmc
out
lcall
enter
sub
add
add
jg
loopne
mov
sbb
std
mov
jp
add
lret
in
in
push
adc
orb
out
jnp
jne
mov
pminsw
push
jno
or
test
or
pop
ds
scas
dec
or
jbe
dec
in
sub
jo
rorl
mov
cmc
rcrl
pop
adc
pusha
cmpb
mov
aas
imul
push
push
cltd
jb
sub
ss
add
nop
adc
push
dec
cltd
push
sub
mov
cs
outsl
and
flds
and
aam
ds
push
mov
sbb
jnp
dec
subps
dec
mov
out
dec
push
or
xchg
and
into
pop
movsl
jg
andb
mov
fbstp
out
dec
jmp
mov
dec
fdivp
push
lods
cmp
xchg
movsl
dec
and
mov
ror
mov
add
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
movsl
and
roll
mov
push
dec
fistps
or
loope
repnz
sbbl
push
aam
pop
push
jno
scas
push
or
lahf
fadds
mov
imul
daa
and
not
jg
fwait
add
ds
and
pop
xchg
lea
dec
je
sti
pop
mov
add
sub
mov
addl
pop
movntq
adc
sub
mov
sub
jnp
fucomi
jmp
mov
adc
sti
stos
test
xchg
insl
repnz
arpl
out
das
clc
fucom
jnp
outsl
jle
outsb
sub
mov
sbb
inc
or
xor
stos
std
testl
or
ficoms
ljmp
fisubrs
jns
pop
sbb
or
scas
jb
ret
or
and
scas
sti
jle
pop
push
pop
sub
push
clc
fadds
add
add
cmp
adc
xor
mov
fwait
test
das
movsl
test
loopne
stos
addr16
xchg
clc
inc
sub
je
orb
xchg
sub
mov
push
jp
pop
movd
pop
cmp
mov
xor
cmpsl
mov
jp
clc
xchg
pop
sub
mov
imul
in
outsl
ja
push
jb
xlat
pop
mov
aam
jne
sub
out
imulb
dec
mov
fsubs
cmp
jp
out
add
ret
fwait
lcall
add
add
gs
dec
pop
add
and
incb
sbb
js
inc
rcrl
add
subb
fiadds
push
cmp
pop
push
in
dec
stc
fildll
add
jns
push
inc
sub
mov
imul
cli
xor
shrb
mov
sub
les
xlat
lret
rolb
add
add
negl
arpl
flds
add
add
or
repz
in
jl
into
orl
test
dec
adc
mov
pop
mov
xchg
shlb
mov
fistps
lcall
cmpsb
cld
jp
arpl
mov
test
push
sub
push
lods
lret
sub
loope
int3
dec
fimull
push
test
es
cmp
loopne
jl
or
nop
ret
fyl2xp1
nop
push
mov
fimull
xor
jbe
or
and
rcrb
inc
loop
inc
ficompl
stos
push
mov
pop
xor
test
mulb
sahf
test
mov
in
in
xchg
rorb
ss
push
mov
xchg
out
mov
cltd
std
xor
aaa
test
rol
xchg
sub
pop
sahf
lock
inc
pushf
inc
jnp
jp
test
inc
aaa
mov
adc
inc
inc
cld
mov
enter
sbb
or
adc
cmc
xor
push
jl
jle
insb
out
adc
dec
add
add
add
add
lcall
xchg
fwait
push
xor
rcll
mov
mov
in
decl
xchg
pop
mov
addl
mov
lods
dec
std
cmp
xor
out
insb
aad
or
push
pop
mov
ror
and
xchg
jl
lods
adc
insl
call
arpl
mov
mov
dec
and
sbb
std
cmpsb
aad
inc
call
mov
sbb
gs
xchg
fmul
popa
and
mov
aaa
and
mov
sub
fcmovnb
std
ret
addr16
addb
loope
pop
sahf
mov
sub
xchg
mov
mov
repnz
xchg
pop
jecxz
je
popa
ljmp
mov
add
pushf
stc
push
sbb
mov
lcall
cmc
adc
mov
adc
in
xor
adc
add
add
add
add
xchg
mov
ss
push
es
cmp
or
push
testl
das
dec
push
sub
pusha
fldenv
call
pop
jg
outsl
mov
and
dec
adcb
stos
aad
pop
xor
mov
mov
aaa
push
pop
adc
mov
in
push
ret
push
test
scas
jo
ficoms
or
mov
mov
inc
dec
fcomps
daa
leave
imull
inc
fcoms
lret
pop
popf
cmp
bound
push
pop
inc
dec
or
aaa
sbb
outsl
jl
push
and
push
cli
cmpsl
fisubs
sub
rclb
movsb
cmp
dec
pop
and
push
pop
jmp
int3
or
sbb
xor
push
adc
lods
mov
push
xlat
adc
push
push
cmp
fisubrl
sbb
xchg
fwait
fs
mov
xor
aaa
data16
jne
mov
lcall
add
add
add
jg
cmpsb
cs
divb
push
xchg
movsl
inc
sti
mov
mov
push
sarb
mulb
push
cmp
clc
cwtl
fcomps
jecxz
jecxz
add
push
lcall
cmp
in
or
scas
repz
jp
fcmovnbe
jp
lods
insl
fdiv
and
or
rorl
popa
vpaddusb
aad
pop
popf
inc
xor
aas
lods
pop
push
test
dec
aas
xor
test
cmp
pop
flds
jge
mov
std
mov
in
and
dec
inc
lret
enter
inc
mov
sahf
mov
ds
leave
xchg
push
push
test
dec
shrl
dec
pop
scas
cwtl
push
push
mov
repz
pop
fldt
xor
lock
jb
jo
iret
sub
mov
test
je
cmp
adc
shlb
popf
in
xchg
or
pusha
rol
ret
add
jnp
add
jnp
sti
xchg
lahf
mov
decb
add
add
add
mov
int
sbb
xchg
ja
fdivs
dec
ja,pt
adc
ret
gs
mov
iret
sub
leave
leave
cli
xchg
xchg
arpl
pop
popa
in
add
stos
mov
xchg
rolb
stos
push
loope
mov
mov
xchg
jge
mov
mov
pop
pop
add
loope
jle
mov
mov
out
mov
jl
mov
inc
dec
adc
xchg
jp
xchg
cmpsb
mov
dec
pop
test
cmp
int3
lds
test
xchg
inc
jo
xchg
and
in
and
sub
hlt
or
and
cs
notb
jae
add
and
int
or
in
in
shrb
mov
in
jl
adc
jb
pop
inc
or
stc
stc
mov
mov
push
mov
jbe
into
ja
cmp
add
add
pop
sarl
mov
ret
add
add
add
add
mov
pushf
loopne
pop
test
es
lea
mov
xchg
cltd
je
cltd
aaa
dec
mov
sub
das
push
add
and
fisubrl
test
xor
push
inc
inc
pop
pop
arpl
dec
add
mov
jge
test
sub
les
icebp
fldl
xchg
fisubs
pop
mov
sbb
sub
jmp
pusha
andl
enter
popa
add
push
xchg
iret
int
and
push
push
xchg
aad
aam
adc
mov
ljmp
and
mov
in
repnz
mov
mov
push
out
sub
cli
inc
cmp
or
sub
mov
scas
mov
fprem1
fimull
push
pushf
fbstp
dec
and
rcrb
sbb
hlt
cld
dec
jnp
jne
jmp
jl
movsb
fwait
xor
inc
rclb
mov
mov
add
add
repz
std
repz
cmp
add
add
add
push
xchg
pushf
fnstsw
dec
vphadduwq
jno
imul
loop
pop
sbb
cmc
ds
cmpsb
and
dec
and
xchg
faddp
pop
popa
call
add
inc
mov
xor
dec
out
mov
or
jae
ljmp
pop
xchg
lcall
bound
jnp
out
lea
sub
jne
in
mov
xchg
add
call
dec
imul
cmc
stos
ret
add
js
sbb
rcrb
and
jmp
retw
leave
add
clc
mov
pop
cwtl
mov
movd
out
inc
cltd
jl
adc
shl
jnp
add
adcb
mulb
inc
pop
jle
jle
mov
shrb
inc
aaa
lret
mov
jbe
mov
sbb
xlat
sub
lods
out
scas
cmp
sti
xchg
jge
and
adc
add
add
lock
cmp
arpl
je
xor
add
add
add
fld
xchg
mov
insl
xchg
xor
xchg
xchg
push
shl
sub
mov
mov
dec
inc
cld
outsb
xor
jno
and
inc
popa
xor
insl
adc
and
mov
rcr
xchg
adc
fbstp
pop
sbb
add
cltd
seto
or
sbb
push
cwtl
test
and
fsubrl
aam
sbb
ja
lahf
sbb
cmp
fistl
cmp
inc
fists
sub
cmp
insb
push
jns
mov
cld
xchg
mov
inc
out
pop
pushf
or
lret
clc
sub
push
movsl
sti
xor
cwtl
dec
jns
mov
xchg
mov
adc
mov
xor
pop
push
test
jecxz
aaa
sub
sub
cmp
lods
movsb
fcoml
lods
sub
std
mov
ss
mov
push
xchg
pop
or
pop
ret
fdivl
pop
jmp
insl
lcall
mov
inc
sub
cmp
add
add
and
aaa
sahf
iret
arpl
cmp
adc
shrb
push
outsb
das
popa
push
cmp
mov
mov
or
or
arpl
mov
push
jecxz
fimull
cmp
adc
test
sarb
cltd
or
inc
ror
mov
push
or
lea
imul
lock
int
into
dec
shlb
fwait
in
hlt
lea
mov
lret
into
cmp
popf
aas
pop
movsb
stos
int3
add
pop
mov
cmp
sarl
sti
adc
into
fwait
jle
mov
add
cmpsb
sbb
xchg
rorb
ss
sbb
fmuls
add
pusha
mov
xchg
shlb
inc
lods
arpl
pop
jl
pop
xchg
sbb
insb
lds
popa
xor
pop
stc
sbb
sub
shlb
and
pop
xor
push
es
xlat
lret
xchg
in
mov
incl
shrl
jecxz
add
add
out
xchg
inc
inc
xor
pop
and
jg
aad
and
out
fcomps
pop
xchg
pushf
push
or
sbb
mov
xchg
test
fnstenv
mov
mov
loopne
mov
aam
pop
iret
fisubl
sbb
mov
ds
adcb
rcll
int
pop
mov
push
sbb
pushf
popa
pop
cwtl
pop
cmc
mov
mov
iret
sti
fdivrl
mov
repnz
sbbl
test
rcl
enter
mov
cmp
cmp
mov
out
dec
lock
out
mov
inc
xchg
cmpsl
xchg
or
and
movsl
mov
imul
add
mov
dec
xchg
jb
push
adc
clc
mov
cmpb
adc
stos
dec
cmp
mov
sub
mov
jno
push
lds
dec
negl
sbb
int
stos
stos
xchg
inc
mov
in
negl
sub
movsb
fdivrl
add
add
add
pop
dec
lret
cmp
aad
sti
adc
jno
in
jl
stos
inc
add
pop
push
push
cmp
out
xcrypt-ecb
cmpsl
leave
mov
and
jae
inc
cld
mov
int
xor
sbb
frstor
or
and
xor
out
aas
jb
aam
sub
dec
mov
sbb
ss
mov
sub
mov
or
sub
inc
imul
lret
addr16
mov
mov
or
sbb
fcomps
notb
sub
add
aaa
jecxz
push
out
addr16
negb
cmp
fnsave
imul
inc
test
mov
jmp
xlat
ret
push
sub
scas
jge
cmp
jmp
test
ds
scas
mov
inc
pop
cmc
leave
push
dec
ficompl
outsl
push
sahf
mov
je
inc
pop
or
or
jg
fyl2xp1
imul
cmp
xor
imull
or
add
add
mov
stc
dec
push
fsubrl
in
add
add
sti
pop
les
scas
jp
ret
or
push
fnstcw
imul
add
dec
fbld
add
sbb
push
mov
mull
dec
jp
rorb
push
mov
push
and
jmp
add
movq
cltd
repz
jmp
iret
cmp
aas
xchg
lcall
sub
xchg
mov
mov
lcall
sbb
pushf
ds
or
addr16
dec
mov
mov
and
jne
jns
test
xchg
push
stos
popa
rcr
sub
enter
popa
idivb
dec
xor
rcr
insb
mov
sti
xor
sbbl
int
insl
daa
movsb
xor
icebp
out
cmp
cmp
and
jb
jp
pop
lcall
or
xchg
cbtw
std
dec
push
stos
mov
stos
icebp
sbb
pop
pop
cmp
sbb
add
add
adc
push
push
push
mov
in
sub
add
add
add
mov
push
xor
arpl
mov
pop
xchg
rcrl
cmc
mov
aas
loopne
pop
push
fs
cmc
std
inc
sbb
sbb
mov
stos
and
mov
addr16
jo
adc
mov
pop
adc
aaa
pop
iret
push
inc
push
imul
movsl
jl
push
sub
push
push
sahf
xchg
add
xor
xchg
cld
sahf
sarl
rcr
xchg
loopne
or
push
pusha
daa
ljmp
test
push
push
jg
jg
mov
cmp
cmp
xor
aad
adc
cmpsb
mov
cld
out
adc
out
call
pop
cmpl
dec
dec
jns
popf
add
or
repz
mov
adc
xchg
mov
dec
outsl
sahf
sbbb
dec
xchg
and
mov
jp
and
push
out
repnz
add
pop
lcall
les
int
mov
out
add
add
inc
or
xchg
popf
out
adc
push
or
xlat
stc
sbb
insl
hlt
cmp
pushf
fsts
fwait
imul
xchg
push
fistpl
stos
inc
cli
out
cmp
lret
mov
push
or
mov
pop
xchg
jecxz
jae
mov
fidivl
mov
sbb
out
or
shll
cs
jne
call
and
dec
adc
jmp
jno
loop,pt
stos
in
outsl
or
mov
iret
jmp
mov
push
int3
leave
test
iret
pop
jl
sar
add
jbe
repz
dec
in
xchg
bndstx
mov
dec
mov
loop
js
mov
jmp
inc
iret
dec
addr16
cmp
movsb
in
jl
cld
xchg
pop
jl
fsubrl
ss
into
mov
aaa
jns
scas
sbb
loopne
add
or
sub
adc
aaa
dec
aaa
dec
xor
sub
mov
loop
pop
mov
push
decl
sarb
dec
xor
add
add
add
xchg
cmp
pusha
int3
cmp
cmpl
cmp
adc
mov
pop
in
sbb
jbe
mov
cmp
outsb
mov
shrb
mov
sub
loopne
and
incl
jmp
loope
pop
insb
rorb
outsl
test
ja
jg
test
mov
fwait
xlat
push
xor
mov
inc
adc
shlb
pop
lods
sub
mov
xchg
mov
lcall
dec
dec
cmp
fadds
fwait
pop
dec
inc
outsb
adc
mov
jae
stos
test
lock
cmp
nop
push
cmp
jns
mov
shrl
fwait
lds
xor
in
mov
pop
add
jecxz
mov
mov
lcall
insl
fdivrs
cmp
das
fcomi
jmp
fcompl
jl
pop
xchg
or
pushf
dec
aad
cltd
and
outsl
push
mov
and
cmp
sti
fsubp
inc
push
sub
ja
jmp
add
sub
or
arpl
inc
pop
or
stos
xchg
mov
stc
lods
mov
adc
add
xchg
movsl
jbe
ds
ljmp
inc
in
aam
and
jb
pop
mov
loop
es
imull
test
jp
pop
mov
test
pop
mov
cmp
push
adcl
out
jmp
in
cmp
cli
lret
and
out
ja
mov
mov
icebp
aaa
fidivrs
stos
push
or
xchg
mov
jmp
cltd
repnz
enter
cmp
out
xchg
sti
add
sbb
out
mov
fs
lcall
leave
mov
in
sbb
cmp
inc
ja
sbb
popa
cmp
push
fnstsw
mov
test
jmp
mov
dec
out
pop
leave
xor
sub
aas
ja
push
add
and
and
mov
lcall
ljmp
popf
dec
and
mov
mov
or
jp
fwait
xchg
xor
loopne
ds
sbb
jb
adc
and
xchg
roll
and
mov
jbe
loop
addr16
xchg
jge
and
mov
pop
repz
jl
fsts
pop
mov
repz
js
mov
ret
cmpsl
outsl
lahf
add
and
xor
lahf
pop
iret
pop
push
push
clc
dec
enter
es
cmp
cmp
pop
add
test
movsb
cmp
lcall
mov
je
sbb
pop
mov
xchg
test
scas
cmc
and
les
cld
clc
aad
pop
xor
xchg
xchg
lds
sub
push
push
nop
mov
fidivrs
stos
fadd
data16
imul
push
sub
scas
sarl
out
in
cmp
dec
mov
cli
sub
jp
fstpt
cmp
add
repz
ror
lock
jnp
xor
xchg
xchg
pop
inc
jmp
add
add
addr16
lods
pop
sbb
xlat
pusha
cmp
pop
shrl
enter
fsubl
ja
jmp
mov
sbb
inc
pop
pop
xor
sarl
cmp
xor
jmp
fnsave
push
jbe
inc
jge
scas
sub
push
mov
cmp
int
repz
movsb
cmp
push
lock
mov
xchg
sub
shlb
lret
shlb
jge
scas
test
aas
mov
enter
push
cmc
mov
inc
inc
scas
push
inc
js
gs
sar
xchg
cli
dec
out
jae
je
or
xor
aad
loopne
test
scas
nop
sub
aad
add
into
adc
insl
sbb
sti
es
mov
into
shll
test
out
adc
push
jb
ret
push
lahf
sub
ret
pop
dec
jg
adc
stos
in
shlb
jecxz
test
fbld
add
repz
fisubs
stc
roll
add
add
scas
pop
mov
jp
ret
pop
mov
mov
ret
loop
fdivrl
in
fidivl
jle
add
cmp
pop
pop
bound
mov
and
movsb
cmc
pushf
lahf
sbb
mov
inc
aam
xlat
xchg
jmp
dec
mov
sub
push
mov
add
sbb
leave
addr16
addr16
outsl
pop
jne
rclb
out
notb
aam
xchg
pushf
insl
loope
jg
cmp
andb
sbb
icebp
stos
lahf
pop
int
sti
and
sub
cmp
aas
insb
mov
mov
and
jno
enter
int
inc
push
out
test
push
xchg
repnz
sahf
out
jg
negl
mov
shll
ljmp
add
pop
jecxz
loop
ror
js
mov
cli
add
inc
incl
out
sbb
push
jno
hlt
dec
in
add
add
add
sahf
sub
sub
inc
dec
nop
das
jp
in
sub
jne
cmpsb
jb
xchg
jb
sbbl
sub
fmuls
push
jecxz
mov
ds
roll
cmpsb
je
out
jo
and
xlat
mov
mov
bound
push
dec
push
inc
enter
fwait
inc
leave
sbb
pusha
push
push
add
sbb
lods
xabort
mov
bound
mov
pop
iret
cmp
pop
cwtl
mov
in
jge
mov
lock
divb
fistps
add
push
xchg
push
aas
std
ja
dec
in
shrl
scas
cmp
out
jb
pop
test
js
add
shlb
pop
pop
add
ret
es
sub
jle
pop
sbb
jge
mov
pushf
xchg
jmp
call
xchg
lahf
stos
mov
outsb
sub
jmp
std
mov
lcall
gs
call
test
push
or
lock
lcall
shrl
cmc
scas
sub
mov
dec
out
add
add
add
ljmp
fs
adc
lock
jg
push
stc
sarb
scas
aad
jg
arpl
shrb
frstor
test
xchg
pop
repz
or
out
jns
not
inc
cmp
adc
or
push
mov
inc
push
xchg
mov
fidivrl
aad
mov
lock
mov
push
dec
sbb
enter
sti
fldl
xor
sti
cmpsl
ret
aas
pop
mov
lret
dec
jecxz
fadds
decl
and
dec
jle
cmp
sbbl
and
movb
pop
daa
mov
or
mov
repnz
or
ja
xchg
sahf
jbe
sbb
adc
mov
jo
bound
inc
pop
popf
repz
pop
sahf
dec
mov
inc
mov
rol
arpl
lcall
test
incl
fidivl
add
lret
pusha
rorb
cmpsb
mov
push
push
out
add
add
add
in
jbe
lcall
sbb
ret
mov
xor
pop
daa
call
xchg
jmp
cmpb
sub
and
aaa
nop
push
popa
lods
jp
repz
adc
js
pop
dec
scas
mov
inc
aaa
mov
std
push
clc
loop
push
sbb
inc
inc
fistl
mull
add
push
js
cli
jge
mov
fcmovne
rcll
aaa
nop
pop
fimull
dec
inc
fimuls
jns
mov
in
std
stos
sahf
mov
mov
sbb
and
pop
cmpsl
sub
sub
jnp
mov
ret
les
push
loopne
add
out
sub
push
xor
adc
and
add
scas
push
fldl
cld
inc
xor
rcrl
adc
pop
pop
push
mov
xor
add
adc
ret
xor
dec
orb
add
jecxz
push
testl
std
adc
push
lock
add
add
fs
or
jae
xchg
popa
in
adc
sbb
xor
mov
xchg
or
ret
loopne
mov
es
push
sbb
mov
bound
jno
inc
dec
fists
jae
stc
test
shl
dec
xor
push
dec
xor
jle
out
in
sbb
into
sub
mov
sub
dec
outsl
lods
test
xor
in
push
inc
jmp
pop
mov
aad
mov
imul
xchg
call
adc
add
xchg
inc
pusha
jno
ret
sbb
xor
mov
aaa
scas
std
and
mov
add
std
cmp
lds
xchg
xor
xor
lods
mov
mov
pop
rolb
mov
lods
sbb
push
dec
aaa
pushf
sub
sub
jmp
dec
push
cmp
mov
fdivrs
xchg
mov
into
and
daa
lahf
mov
pop
das
xchg
xchg
in
pop
icebp
add
add
add
pop
jl
add
adc
cmp
jecxz
fwait
icebp
mov
sbb
or
faddl
xor
outsb
out
inc
das
sub
outsb
loope
xor
inc
mov
xchg
sar
fisubrs
xlat
jle
mov
aam
sbb
sub
fadd
pop
lcall
sub
pop
out
lock
jecxz
js
mov
frstor
test
pop
cmp
adc
loop
addr16
cltd
inc
cmc
shl
cwtl
outsb
fwait
dec
and
xchg
sarb
mov
and
popf
popa
sub
inc
xchg
aaa
lods
adc
ret
adcl
adc
imul
push
pop
in
lds
enter
loope,pn
sbb
inc
mov
sub
xchg
jp
dec
xor
or
lret
and
push
fiaddl
in
or
cmp
aam
pushl
lcall
sbb
ss
mov
fucomi
xor
mov
pop
repnz
add
add
out
mov
add
fildll
xor
in
xor
mov
mov
inc
sti
dec
hlt
and
jno
xor
mov
in
mov
jle
pusha
push
sbb
out
sub
jns
hlt
lahf
inc
sub
lock
icebp
push
dec
cwtl
mov
mov
sub
repz
and
iret
xor
fucom
insl
out
out
pop
jno
adc
xchg
jecxz
jp
aad
dec
fwait
adcb
cmp
xchg
push
in
pop
pop
mov
dec
sarl
mov
clc
aam
inc
pusha
pushf
inc
jmp
push
jge
inc
rorl
pop
jnp
repnz
lahf
pop
sbb
aaa
pop
cmpl
sub
imulb
mov
rcl
xor
jg
xor
jmp
ja
sti
add
or
inc
cmp
dec
jge
adc
test
call
xor
add
add
hlt
stos
and
jbe
push
inc
pop
jns
aas
loopne
sub
in
test
pusha
repz
add
add
out
imul
push
and
test
loope
mov
sub
shl
je
push
rorb
xor
faddp
mov
test
lahf
outsl
vfnmadd132sd
push
sub
push
push
jl
and
fiaddl
jmp
cli
fnstcw
aam
sub
lahf
mov
mov
adc
pushf
hlt
push
faddp
cmpsl
pop
sbb
shl
cs
push
in
adc
ret
sub
add
cwtl
mov
pop
add
pop
or
pop
out
adc
loopne
les
pop
fninit
add
loop
mov
in
dec
add
push
hlt
mov
fcomi
test
jl
cld
dec
mov
jmp
les
scas
out
pop
loope
pushf
fwait
lds
sbb
pop
movsb
mov
pusha
fcompl
cmp
leave
mov
and
test
adc
cmpsb
sbb
jnp
mov
adc
add
add
add
rorl
jnp
and
into
dec
ja
ret
repz
and
jae
clc
sbb
adc
mov
repnz
xchg
repz
adc
insb
mov
jb
in
aas
mov
int
ljmp
jb
xor
sub
cmc
or
hlt
pop
mov
and
push
scas
icebp
sub
lods
mov
push
fidivl
jns
mov
cmpsb
xchg
cld
fwait
push
popa
ficoms
int
push
mov
fstpt
shrl
jne
sbb
adc
and
fsubrs
movsb
stc
adc
fimull
sub
push
in
push
faddp
les
sbb
inc
jbe
cwtl
ss
add
mov
pop
inc
data16
scas
test
scas
push
mov
mov
adc
xor
aas
lret
dec
pop
mov
test
jecxz
fistpl
xchg
in
cmp
hlt
into
iret
out
or
add
add
xlat
pop
xlat
jg
mov
sbb
add
add
add
notb
int
ja
cmpsb
loope
xor
jg
lock
push
cltd
inc
lds
pop
mov
push
test
insb
sub
or
lret
pop
outsl
test
cmp
adcl
pop
int
or
leave
push
mov
inc
push
cmp
or
std
mov
and
loope
ljmp
int
mov
cwtl
arpl
loop
pusha
xchg
mov
adc
rorb
jg
in
rcr
loop
lea
mov
inc
je
pop
push
push
mov
nop
jae
pop
cmpsl
pop
lods
mov
stc
push
cld
rclb
mov
bnd
orl
push
sub
dec
out
scas
mov
inc
xchg
push
test
out
pop
orb
mov
arpl
mov
adc
adc
mov
and
mov
fdivs
jno
push
cmp
xor
or
mov
xchg
mov
idivl
in
and
insb
testb
add
add
jle
or
xor
pop
rcl
popl
sbb
in
push
sub
mov
mov
dec
mov
mov
mov
pushf
lret
jecxz
addl
aad
push
in
mov
push
adc
aam
pop
push
dec
rcll
lret
jbe
clc
test
and
arpl
cld
sbb
ror
lret
cwtl
cs
push
filds
out
adcb
xor
insb
mov
insl
jns
insb
pop
ljmp
mov
ds
repz
cmp
push
xor
in
insl
and
cwtl
bound
add
push
scas
sub
les
pop
popa
test
push
xchg
aam
inc
imul
add
add
das
sub
sbb
adc
sub
dec
je
adc
pop
xchg
fwait
inc
jl
enter
lahf
int3
outsb
jbe
out
test
mov
fiaddl
testl
add
jp
jmp
push
push
out
inc
outsb
dec
scas
lret
call
ljmp
or
add
push
pop
cmp
pusha
stos
jmp
lods
cli
sub
cmp
mov
call
pusha
adc
mov
mov
push
inc
mov
sub
popf
das
enter
mov
stos
and
or
push
push
sub
mov
sub
pop
adc
cli
xor
lret
pop
movsl
sub
push
sahf
sti
cmp
dec
pop
add
arpl
fsubrs
leave
cmpb
testb
mov
jle
xor
mov
lea
scas
jg
repz
or
and
or
ret
lods
adc
xor
add
popa
loope
xchg
or
cmp
xchg
cmp
lcall
test
movsb
out
out
call
dec
xchg
ret
add
jmp
imul
lahf
repnz
sbb
jbe
je
add
add
add
int3
pop
jg
aad
je
cmp
push
add
mov
int3
cmc
xorb
mov
push
divl
and
fidivrs
jmp
xor
mov
rcl
mov
xchg
inc
mov
mov
sti
pop
out
sub
push
lahf
fwait
ljmp
aas
pushf
adc
add
or
in
push
bswap
mov
inc
lret
rep
xchg
ret
add
loope
or
inc
cmpsl
lcall
mov
jl
les
xchg
movsl
insb
and
loopne
in
mov
fs
push
test
stc
aaa
hlt
cmp
fs
fisubl
mov
mov
push
or
jb
jb
hlt
add
pop
movsl
outsb
inc
and
mov
add
push
mov
mov
cli
xor
lock
stos
add
icebp
pushf
sbb
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
cmp
stc
add
add
add
mov
sbb
aaa
shl
daa
and
cmc
sbb
pop
ss
or
xlat
dec
mov
ror
add
sub
sbb
cltd
ja
dec
adc
xchg
mov
xchg
jae
das
shll
dec
jo
adc
pop
lahf
push
roll
push
ljmp
aam
repz
rolb
push
icebp
inc
pop
xchg
aas
cmp
inc
pop
aad
fmull
fadd
jecxz
pop
in
mov
and
outsb
fcomi
xorl
xchg
add
and
pop
cmp
jb
add
xchg
pushl
xor
sbb
jne
bnd
js
gs
ja
mov
sbb
jmp
pop
and
repnz
fidivrs
mov
sete
inc
mov
dec
sbb
mov
cmp
ret
outsl
clc
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
scas
faddl
xor
clc
jo
cli
cmpsl
fidivrl
notb
test
sbb
dec
addl
push
in
sub
or
mov
jbe
in
xchg
xor
xchg
xchg
test
loopne
pop
lcall
cld
fcomps
dec
ljmp
xchg
mov
mull
sbb
adc
pushf
inc
stos
dec
add
imul
mov
push
aaa
cmp
rcll
jge
sbb
test
xor
inc
xor
dec
xchg
cmp
js
jl
addr16
adc
inc
lds
in
push
es
cmp
add
outsb
fstpt
fnstcw
leave
repnz
imul
sbb
pop
pop
cmp
and
mov
adc
or
repnz
sbb
mov
xchg
cltd
repz
or
les
xor
hlt
and
jmp
addr16
inc
popf
push
shr
add
add
aam
int
aaa
das
aam
fimuls
cmp
add
add
insb
addr16
inc
mov
jl
fidivrl
jno
dec
mov
jmp
push
lock
inc
sbb
xor
daa
mov
pop
lcall
addr16
andl
adc
mov
adc
inc
cmp
stos
lretw
out
cwtl
or
sub
leave
into
sbb
shl
lea
test
inc
in
das
push
repnz
lds
cmpsl
inc
mov
fwait
stos
pushf
fdivr
xor
xchg
repz
and
jge
dec
jns
lcall
mov
add
negb
adc
int3
and
mov
jge
jge
sti
xchg
stos
cs
add
lds
cmp
pop
mov
mov
push
in
imulb
testl
inc
mov
cmp
cmc
mov
das
std
mov
add
add
arpl
addr16
sub
cmpsb
mov
jge
cld
add
add
add
lcall
jecxz
mov
or
movsl
jmp
pop
dec
test
addr16
cli
mov
sti
and
mov
stc
in
rol
hlt
sti
jne
or
imul
jmp
mov
adc
xchg
adc
repnz
xchg
or
lahf
pop
xchg
mul
xchg
xchg
sub
xor
cmp
sbb
sub
sti
mov
and
dec
sbb
loopne
shrl
lahf
dec
dec
add
leave
bound
mov
push
mov
in
mov
movsl
mov
imul
push
scas
notl
mov
mov
aam
aam
leave
cmpsb
push
dec
imul
popa
xor
mov
aas
sbb
mov
push
in
and
inc
mov
xchg
cmp
stos
mov
xor
push
mov
mov
jge
add
adc
jne
sub
sahf
fsubp
fldl
add
add
out
out
pushl
xchg
xor
loope,pn
outsl
mov
add
add
add
stos
dec
mov
outsb
pop
and
ret
xchg
jle
inc
dec
mov
cmp
clc
cmpb
adc
add
fdivl
adc
mov
dec
bound
push
push
gs
adc
lods
dec
faddl
push
out
mov
and
adc
test
in
adc
cwtl
or
mov
and
inc
andb
in
mov
add
lds
rorl
fdivrp
pop
mov
mov
mov
dec
sbb
les
pop
lret
mov
mov
cli
add
in
lods
mov
xchg
mov
push
push
mov
xchg
subb
add
fstpl
mov
sbb
insb
movsl
jmp
push
daa
dec
ja
outsb
jecxz
popf
xchg
cmpb
fbstp
daa
push
and
pop
fwait
call
or
mov
mov
addl
add
test
push
scas
mov
xchg
mov
add
add
add
nop
xchg
mov
pop
sbbb
push
test
adcb
frstor
cwtl
pop
mov
aad
into
xor
jb
pop
fcomi
and
push
dec
xor
rcrb
inc
gs
sub
imul
aas
pop
cs
outsb
rclb
js
hlt
xor
stos
mov
or
add
pushf
cmpsb
push
jbe
mov
ljmp
cwtl
pop
or
mov
push
sti
out
xorb
call
leave
in
js
daa
out
shll
mov
adc
mov
fdivrs
jo
imul
mov
xor
iret
sub
cmpsl
sbb
xchg
outsb
push
mov
je
inc
cmp
xor
hlt
enter
hlt
test
inc
sbb
int
ss
aam
mov
repz
test
mov
frstor
lcall
imul
loopne
mov
sbb
aaa
xchg
and
movsl
mov
mov
mov
sarl
nop
incl
add
add
dec
mov
pusha
pop
into
adc
xchg
cmp
lahf
add
std
inc
fs
pop
add
popf
ret
inc
jge
test
cmp
jbe
addr16
mov
inc
cmc
jmp
mov
mov
dec
cmpb
xlat
out
ret
fbld
and
dec
xchg
sbb
mov
inc
adc
sub
and
jecxz
cltd
jne
push
mov
dec
jecxz
es
adc
mov
out
fsubs
adc
out
out
andb
mov
or
shll
into
idivl
pusha
enter
fistpll
inc
and
addr16
sub
out
adc
inc
mov
clc
inc
adc
gs
sbb
daa
cmpsb
neg
std
or
xor
in
enter
push
cmc
lods
pushf
repz
call
adc
jae
mov
gs
rcll
sbb
jb
push
push
xchg
je
fdivl
mov
ret
mov
add
add
gs
test
lock
call
fists
dec
mov
in
push
iret
jae
test
shll
mov
adcl
xchg
adc
jno
and
mov
mov
call
popa
pop
jns
mov
call
push
aas
inc
push
mov
arpl
mov
adc
cwtl
jo
pop
sbb
stc
dec
rcrl
inc
or
mov
fwait
mov
and
cmovb
into
sbb
add
pop
push
mov
bound
clc
dec
fists
in
ret
cs
add
adc
pop
imul
jo
add
jae
xchg
js
xchg
xor
and
shrl
jae
push
addr16
and
cmp
repz
orl
stos
stc
adc
ljmp
sbb
and
and
data16
fcoms
sbb
ja
cmp
inc
stc
mov
mov
lods
imul
cmp
mov
cwtl
add
add
add
repz
mov
xchg
push
mov
jne
xor
cwtl
mov
cmp
pop
mov
jne
rolb
xchg
mov
bound
push
clc
fwait
sbb
xor
jmp
mov
setge
xor
push
incb
push
lret
jae
xlat
cltd
push
aaa
out
adc
test
adc
hlt
push
test
repnz
sahf
mov
testb
or
pop
imul
mov
mov
cmc
enter
adc
rorl
or
adc
hlt
out
call
jns
std
cmp
xchg
adcb
mov
filds
loop
mov
ds
shrb
pop
stos
or
js
outsl
mov
in
add
inc
sub
sbb
ret
addr16
fsts
xor
pop
pop
ror
pop
mov
jns
out
out
sbb
mov
scas
jne
aas
test
pop
xchg
sub
scas
or
cmp
mul
pop
aad
add
add
add
sub
leave
ret
test
jp
in
pop
jecxz
mov
cmc
imul
push
dec
mov
pop
inc
outsb
xchg
pop
xor
jle
andb
add
inc
imul
adc
xchg
or
or
outsb
jnp
ret
popf
jmp
sub
js
cmp
shll
jp
les
mov
xchg
xor
cwtl
sub
add
stc
or
xchg
add
mov
aam
sub
fcmovnbe
jle
lret
jle
pusha
xor
cmpsl
fldenv
or
xchg
xchg
mov
mov
sti
rcll
jmp
sub
pop
pop
movsb
in
mov
test
add
and
sub
bound
fsubrl
es
stos
or
cmp
and
test
dec
fwait
mov
int
xor
add
add
hlt
fbld
push
hlt
or
add
add
pushf
mov
and
stos
lock
inc
das
test
bound
and
push
or
push
push
sbb
mov
add
pop
fdivs
stos
mov
sbb
jmp
in
stc
repz
in
data16
stos
adc
out
rcl
jmp
lds
ret
rorl
jb
pop
mov
mov
jg
sub
mov
dec
jno
das
jmp
lahf
pushf
aaa
lret
jnp
leave
inc
jecxz
xchg
mov
sarb
lods
lock
xor
mov
mov
jmp
scas
mov
test
bound
loopne
mov
dec
mov
and
rcl
loope
add
pusha
and
enter
or
std
or
icebp
push
filds
int
fildl
push
dec
dec
jo
inc
fdiv
lds
cli
pop
mov
into
fwait
add
mov
adc
add
add
jmp
xor
sub
cmp
call
dec
mov
js
and
jb
pop
sahf
lret
imul
out
popf
js
mov
in
lock
loope
mov
adc
add
subl
mov
and
dec
add
pop
or
pop
pop
stos
cmp
dec
push
in
pushf
sarl
stc
stos
jb
xor
jnp
addr16
xchg
or
mov
or
mov
inc
pusha
imul
rcrb
push
shrb
mov
std
and
jbe
outsl
mov
out
pop
call
jae
test
mov
cmpsb
std
dec
testb
les
testl
pop
aaa
push
mov
divb
mov
adc
pop
aad
jns
je
je
xchg
lock
inc
mov
push
daa
jge
or
mov
xchg
cltd
fisubs
cli
shl
jl
test
out
mov
pop
sarb
in
cmpl
add
aam
mov
sahf
mov
leave
repnz
out
jne
insl
inc
fbstp
pop
pushf
cmpsl
movsl
rcrb
popf
in
ja
adc
and
mov
xchg
imul
mov
xor
and
dec
aam
sbb
int
negb
lods
std
sub
or
xchg
add
in
in
lret
addr16
xchg
add
and
mov
pop
mov
xor
xchg
outsl
jecxz
xchg
das
pop
es
addl
lcall
fdivl
cli
xchg
call
in
pop
adc
fnstsw
mov
jecxz
inc
outsb
jge
adc
scas
xchg
stc
dec
dec
icebp
cwtl
aaa
mov
xchg
clc
mov
pop
mov
inc
fnstenv
pop
dec
leave
sbb
pop
jo
shlb
and
inc
add
push
xchg
sbb
push
repnz
or
jno
mov
and
test
ret
jge
add
sti
inc
out
aas
mov
rorb
or
add
add
int3
pop
lds
xor
and
jae
cmp
nop
sbb
movl
clc
sub
stos
sbbl
add
in
lea
mov
outsb
movsb
xor
sbb
pop
lods
and
sbb
stc
and
jae
lcall
mov
loopne
and
xchg
jne
mov
cmpsl
jne
repz
mov
pop
cs
mov
pop
and
fldl
sti
cmpl
loop
add
in
xor
mov
sub
nop
aas
out
jne
jo
xchg
shrb
mov
fimull
lcall
nop
mov
mov
repz
call
cwtl
lods
push
fxtract
sub
mov
sub
jle
adc
loopne
in
add
jnp
sub
ret
xorb
add
add
bnd
dec
leave
and
sub
add
add
mov
xchg
aad
fwait
daa
add
loope
fdiv
jne
push
pushl
es
pop
je
mov
or
jmp
and
rclb
dec
lods
fdivs
ficoml
out
pop
inc
inc
adc
outsb
fisttpl
fadds
cli
dec
insl
jns
rclb
fwait
cmp
lea
or
fxch
push
call
xchg
lcall
mov
inc
xchg
inc
jne
mov
pop
xchg
push
xchg
xor
iret
outsb
mov
je
pop
aas
push
lahf
cltd
xchg
mov
pop
pop
mov
jno
inc
sub
xlat
loope
cmp
rcrb
fstpt
push
fsts
js
pop
movsl
mov
pop
into
push
movsb
jle
mov
fildl
push
mov
sarb
mov
sub
add
in
scas
push
push
mov
fildll
jae
inc
arpl
out
jno
xchg
and
and
mov
sbb
in
out
ja
filds
cmp
add
add
add
sub
mov
test
pop
ljmp
inc
pop
hlt
loopne
push
xchg
pop
jl
repnz
pop
stos
pop
adc
dec
push
inc
jp
ljmp
pusha
jne
or
mull
sub
js
decb
inc
push
xor
outsb
test
adc
fists
lods
outsb
addr16
or
xchg
push
out
repnz
sbb
loopne
gs
xchg
cmpsl
jae
es
pop
loope
push
rcrb
aam
hlt
rorl
adc
aam
xor
adc
aas
sbb
lcall
loopne
fldl
adc
push
cltd
sbb
xchg
into
jl
out
mov
xchg
sub
mov
in
fs
mov
mov
out
push
cwtl
aas
or
adc
sbb
adc
enter
mov
sub
js
jmp
out
clc
push
mov
xchg
leave
outsb
insl
scas
test
in
inc
push
or
or
add
add
fistpll
mov
cmp
or
mov
mov
or
das
ljmp
push
outsl
fldt
adc
insb
fdivp
mov
into
dec
cs
movsl
and
sub
xchg
push
and
aad
cltd
mov
repnz
punpcklwd
add
int3
ljmp
insl
mov
ficompl
ljmp
shll
mov
cmp
pop
mov
ja
out
mov
repnz
inc
push
cmp
and
mov
mov
add
pop
mov
fcmovu
xor
mov
xchg
mov
movsl
pop
daa
bsf
adc
lahf
aad
clc
sub
orb
pusha
loope
les
add
jg
ficoml
push
test
adc
xlat
pushf
aad
roll
inc
mov
jg
neg
pop
daa
inc
adc
xchg
xchg
add
roll
push
adc
sarb
push
pop
pop
pusha
fiadds
mov
stc
shrl
pop
sbb
out
movsl
pop
cmpsl
pop
shl
test
dec
sub
jle
push
in
mov
dec
rorl
call
or
jno
pop
fists
add
in
lret
std
mov
or
sbb
test
push
xlat
xor
and
jae
inc
cld
into
inc
mov
std
xor
mov
stc
and
out
adc
fdivrl
test
fsubrl
lret
adc
aas
pop
xchg
push
fucom
pop
negb
jb
add
movsb
cmp
aad
into
push
xchg
jecxz
aam
push
inc
loop
jp
and
mov
out
and
jge
int3
mov
lds
jb
xchg
iret
mov
ret
jne
jns
jns
xchg
sbb
cld
clc
sti
test
lcall
lcall
lahf
addr16
bound
mov
jbe
add
cmp
sti
jg
cmp
je
bound
add
add
add
xor
fsub
sub
add
jle
xchg
cmc
cmp
xchg
jnp
popl
cmp
rcll
cmp
int
dec
mov
mov
jg
push
sub
lods
adc
in
into
push
or
push
mov
add
pop
add
ret
xor
pop
fdiv
dec
sbb
bswap
sbb
add
repnz
mov
das
fs
xor
mov
pop
out
mov
mov
mov
insl
ret
movsl
cmp
or
pop
test
add
xchg
cli
xchg
push
les
or
inc
loop
or
adc
push
lds
pop
iret
inc
pusha
and
fs
mov
mov
enter
cmpl
test
jecxz
adc
mov
dec
mov
mov
addr16
mov
and
push
mov
pushf
inc
out
shrl
and
scas
aam
jnp
fstp
fcompl
int3
sbb
or
add
add
psubusw
inc
jne
or
and
pop
imul
dec
std
testb
jb
jno
add
in
shrb
mov
aam
or
cmp
adc
push
js
xlat
add
mov
ret
outsb
mov
jl
mov
in
insl
sarl
xchg
outsl
in
mov
lcall
fs
push
sub
xchg
and
cmp
mov
int3
inc
stc
lds
orl
and
enter
mov
mov
sbb
sti
stos
cmp
mov
sahf
imul
inc
cmp
movsb
fs
lret
outsl
je
mov
out
dec
pop
dec
mov
imul
xchg
ret
addl
mov
outsl
mov
mov
aam
add
cmp
pop
fistps
pop
cmp
lods
cmpsb
mov
popf
cmpsb
sbb
inc
mov
mov
jg
aad
stos
insb
ret
add
add
outsl
mov
add
out
cld
enter
add
add
stos
shll
in
pop
loope
inc
mov
dec
loopne
fldt
mov
test
imul
ds
out
fcoml
aam
lods
dec
cltd
out
sub
adc
std
loopne
xorb
mov
jp
insb
and
push
xor
fbld
faddp
cmp
je
adc
outsb
adc
repnz
leave
std
outsl
xor
and
jnp
jnp
inc
cli
sbb
std
test
cli
mov
jbe
add
dec
jle
sub
pop
cmpsl
arpl
sbb
adc
rol
dec
mov
cmp
pushf
daa
inc
push
test
xchg
cmc
aas
sub
xchg
dec
fsubr
int
loope
xchg
es
leave
shlb
sub
out
jg
aas
sbb
adc
and
dec
icebp
mov
pop
call
mov
mov
inc
inc
mov
aaa
leave
jl
add
and
mov
int
aas
arpl
inc
sbbb
loope
jmp
fucomp
cmp
add
add
scas
rclb
dec
inc
cmp
sub
call
jge
sbb
shll
das
mov
test
clc
xadd
loopne
loop
xchg
push
popf
mov
mov
stos
call
repz
push
dec
xor
dec
xor
jmp
sbbl
inc
and
ret
push
xchg
inc
lods
sub
ret
inc
or
lods
push
ljmp
xor
repz
pop
test
pop
mov
dec
insl
int3
js
sub
mov
lret
rolb
mov
dec
sbb
xlat
xchg
or
or
pop
popa
sarl
mov
add
cmpsl
into
gs
pop
out
add
sti
leave
dec
insb
and
das
mov
sbb
pop
jae
sub
mov
cmpsb
dec
sti
les
jno
pop
pop
je
movsb
dec
addb
dec
adc
iret
or
std
and
add
add
xor
test
xorb
add
add
jmp
xor
mov
jns
into
jbe
test
ror
pop
call
out
popa
das
adcb
filds
sbb
jb
pop
pop
bound
add
repnz
incl
push
frstor
popa
out
fadd
bound
clc
cmp
inc
or
loopne
dec
push
adc
sbb
jle
or
adc
lds
rcr
adc
jmp
dec
out
pop
cmp
lcall
lahf
js
dec
adcb
cmpl
add
in
fistps
out
sub
push
cld
push
iret
cmc
adc
cli
mov
adcb
push
and
and
call
imul
mov
insl
mov
pop
push
mov
pop
leave
xchg
sbb
dec
out
add
xchg
lods
es
add
jmp
sub
or
lret
jg
mov
cmpsl
adc
dec
dec
cli
inc
jg
int
xchg
lods
or
jmp
xlat
aam
add
add
add
in
data16
pop
inc
xor
test
ret
pop
popf
jae
out
aaa
add
ss
pushl
ret
xchg
cmc
mov
jge
test
jns
jae
mov
pusha
fwait
or
mov
dec
shlb
dec
sahf
fisttpl
into
ret
aaa
push
aas
adc
mov
pop
sar
cmp
into
and
add
leave
or
cmp
jno
push
stos
cmpsl
or
insl
lock
pop
mov
push
mov
rcll
pop
outsb
inc
test
hlt
inc
in
test
insb
rcll
xchg
in
mov
sahf
or
and
pop
xchg
adc
dec
rcrl
loope
jns
sub
movsb
rcrl
sbbb
jle
cmpsl
mov
ret
pop
imul
push
ljmp
lds
add
shrl
repz
je
int
sarl
dec
jl
ret
sub
xor
add
add
xchg
std
cmp
jle
fistpll
fisubrl
dec
fcoms
add
add
add
mov
pop
sub
insb
mov
sbb
out
rcrl
push
mov
loopne
ljmp
rcll
movsb
lods
fistl
cmp
jle
mov
mov
mov
jns
call
cwtl
mov
lret
or
sbb
mov
sub
fdivs
ds
shlb
mov
int3
gs
or
enter
outsl
sti
scas
popf
enter
fwait
loope
mov
subb
xchg
repz
shl
or
mov
and
pop
push
sub
cmp
sbb
mov
mov
and
insb
jmp
pop
imul
aaa
pop
cld
outsl
xor
ret
outsb
cmp
fmul
fcomip
clc
cmp
fldenv
xchg
push
mov
rcrl
mov
je
cs
loop
je
xchg
test
mov
gs
jo
rcrl
add
xchg
xchg
pop
lds
xlat
ficompl
inc
bound
xchg
fcoml
add
add
add
xlat
movsb
lods
and
ret
sahf
aam
dec
scas
jl
leave
add
sbb
daa
loope
stos
mov
sub
and
cmp
inc
sbb
stos
sub
sub
inc
int3
data16
inc
pop
pop
mov
jb
sub
and
sbb
push
es
sahf
pop
xchg
rorl
mov
xor
mov
ret
clc
dec
cmp
sti
mov
outsb
cli
mov
xchg
sbb
je
mov
outsl
out
push
push
sbb
xchg
dec
sub
das
clc
mov
dec
mov
fists
shlb
and
pushf
fcomip
xor
push
hlt
fcomps
loop
sub
dec
lret
je
scas
jae
push
mov
data16
out
pop
push
lahf
pop
loope
ljmp
and
mov
mov
xor
inc
jbe
scas
jae
add
add
sub
iret
outsb
jmp
push
test
lea
loopne
add
add
add
jb
mov
cmpsb
jecxz
pop
cmpsb
adc
mov
mov
xor
push
xlat
fisubrs
cmp
out
pop
xchg
fstpl
pop
mov
xor
test
jg
stos
fildl
push
ret
push
in
and
mov
adc
fwait
test
mov
push
or
rcr
push
fisubrl
mov
xchg
push
std
je
xor
push
mov
negb
jmp
jae
xor
xchg
outsl
rcr
xor
push
push
fucomip
mov
dec
cmc
mov
xchg
or
stc
shr
mov
data16
push
dec
loopne
imul
push
leave
cmpsb
push
daa
mov
movsb
push
inc
lods
pop
dec
aaa
repz
lea
push
adc
insl
pop
inc
push
jge
popf
lds
rol
cmpb
mov
std
movsb
jge
sub
pop
sbb
in
adc
inc
aas
cmp
jns
outsb
int
pop
inc
mov
sbb
std
sbb
stc
cld
or
test
in
add
add
add
push
icebp
xor
clc
gs
mov
dec
mov
mov
cld
or
pop
xor
mov
popa
mov
gs
xchg
push
in
inc
adc
testl
loop
movsb
mov
sbb
test
mov
or
push
in
jns
xor
movsb
mov
insb
lahf
add
dec
jge
cltd
std
sub
js
xor
lcall
mov
inc
stos
pop
jno
iret
nop
and
ja
mov
aam
inc
ret
jge
popl
mov
shlb
add
sub
jne
mov
jnp
cmp
dec
pop
and
pop
mov
cwtl
arpl
mov
ja
cmc
xor
xchg
roll
cmc
pusha
mov
push
and
loopne
int3
push
fcmovb
dec
mov
mov
xlat
lea
in
jl
adc
mov
mov
push
push
iret
cmp
js
jp
negl
adc
pop
xchg
cmpsb
arpl
add
add
add
xor
pop
cmp
rcr
mov
imul
loope
sub
jne
fwait
pop
inc
sbb
ss
xchg
out
out
divb
lods
loopne
pushf
ss
jno
ss
rolb
cwtl
push
shlb
popf
pop
inc
cmp
inc
leave
ljmp
pop
jmp
jae
push
stos
cld
in
sti
daa
or
daa
les
push
push
in
ss
jno
scas
and
lcall
mov
and
sbb
pop
sti
loop
repnz
movsb
addr16
jbe
fistpl
or
cmp
lahf
in
jno
cmp
cmpsb
sar
mov
movsl
add
cltd
push
bnd
dec
loopne
lcall
fisubrl
cmp
pop
aaa
cwtl
mov
inc
loopne
pop
into
add
les
rorl
dec
fwait
out
jecxz
mov
dec
andb
add
stc
cli
fisttps
repz
cmpsb
xchg
cmpsl
negl
testl
add
add
dec
pushl
or
push
add
add
add
sbb
or
lock
data16
ljmp
rcrl
jne
add
push
pop
inc
mov
cmpsb
lock
mov
aad
xor
cmp
mov
lea
add
sub
mov
in
cmp
mov
and
and
imul
fwait
shlb
push
mov
addr16
ret
addr16
xor
loope
xlat
push
and
fwait
out
loop
cmpsb
aam
pop
inc
call
cmp
xchg
decl
mov
jge
mov
push
movsl
sub
jns
movsl
iret
adc
jp
nop
fmull
jb
sub
xor
jno
or
stos
push
cmp
mov
sbb
in
jae
int
mov
sbb
mov
jne
out
push
mov
mov
cmpsb
mov
or
mov
cmp
insb
mov
and
add
add
inc
ja
pop
aas
dec
push
loopne
lock
add
add
add
xchg
mov
int
lods
rorb
orb
mov
mov
xchg
adc
jg
push
ljmp
adc
pop
fisubs
xor
insb
loop
cmp
aad
jmp
int3
loope
fs
push
test
and
mov
enter
out
inc
loop
mov
and
add
xchg
or
addr16
ficompl
mov
mov
dec
pop
in
inc
cwtl
in
and
mov
and
sbb
lock
inc
pop
mov
stos
mov
mov
aad
xchg
enter
push
stc
cwtl
mov
jmp
aaa
push
dec
rcll
mov
add
shll
movsb
cmpsb
clc
aaa
cmp
mov
lahf
mov
and
add
rcll
pop
adc
mov
call
cmp
jmp
add
sbbb
sbb
and
js
mov
jae
add
add
xchg
jae
ja
div
mov
shll
lods
hlt
sbb
add
add
call
out
mov
aad
iret
test
add
fsubr
insb
shrb
adc
jae
jne
mov
adc
out
cmpsl
dec
enter
jmp
push
ret
stos
add
push
iret
sub
pusha
cmp
pop
jp
pop
and
inc
inc
or
mov
or
cmp
scas
lahf
cmp
inc
dec
sbb
sub
push
jbe
add
push
xchg
xchg
sti
aas
jge
arpl
int3
fiadds
sub
xor
inc
pop
aam
cmc
mov
pop
dec
bound
xchg
es
adc
dec
lea
jle
in
cmpsl
scas
data16
cmp
adc
jmp
call
mov
daa
lods
mov
test
adc
out
loop
dec
rclb
outsb
xchg
add
jg
push
aad
int3
add
insl
pop
sti
or
insb
fmull
add
add
cli
std
jg
push
pushf
dec
and
add
add
add
pop
stos
xchg
pop
mov
mov
aad
mov
cmpsl
je
sub
jne
cmpsl
sbb
insb
and
mov
lds
mov
pop
aaa
aad
and
cmp
inc
js
stos
pop
mov
pop
addr16
in
repz
sti
nop
fdivl
xlat
adc
repz
mov
push
lea
add
push
loop
rcrb
js
lcall
das
addr16
leave
fldt
shll
sahf
adc
pusha
push
cmp
daa
mov
and
test
push
cs
xchg
or
xor
movsb
inc
mov
mov
cs
pop
mov
dec
pop
cmp
fdivrl
in
push
in
dec
cmc
jl
jb
test
rolb
push
fsubl
lds
mov
or
sbb
fstp
dec
sbb
aas
ror
into
sub
push
push
lods
movhps
jmp
testl
incl
sbb
clc
mov
add
add
pop
ret
daa
mov
and
data16
fidivs
xor
pushf
insl
mov
ffree
mov
lret
into
dec
xchg
xchg
jmp
int
imul
arpl
push
mov
js
outsb
lcall
hlt
inc
jb
mov
aad
inc
jno
stos
inc
nop
pop
subl
ret
mov
mov
clc
add
mov
cmp
out
and
sbbb
jl
mov
cmpsl
fwait
mov
inc
ret
sbb
fcoml
sub
mov
fildll
nop
outsb
pmulhuw
inc
fdivl
mov
mov
or
insb
jl
js
aas
xchg
pop
cli
mov
jbe
lret
stc
xchg
or
xor
stos
aaa
dec
xchg
std
fcoms
sub
insl
cltd
xchg
adc
aaa
arpl
insl
jge
mov
test
cld
ret
pop
mov
mov
mov
iret
push
imul
xor
or
mov
lcall
add
push
es
jg
pop
or
xor
fxsave
sbb
add
add
jbe
or
cs
cmp
jmp
hlt
cld
in
rcll
adc
adc
and
pop
fldcw
xchg
jp
sub
subb
pop
pop
icebp
popf
imul
outsb
pusha
jae
std
cmp
mov
xchg
sbb
pop
mov
xorl
mov
jno
mov
mov
jne
inc
call
xchg
jne
pop
push
lock
inc
pop
mov
adc
repz
jo
inc
orb
sarl
push
ret
push
cs
scas
aam
push
fidivl
sub
sbb
push
loop
xchg
in
mov
jl
pop
scas
jne
sbb
pop
sub
adc
ret
fstpt
mov
xchg
mov
out
push
adc
sub
in
dec
xor
mov
out
mov
insl
xchg
push
clc
or
dec
push
cmp
sbb
add
inc
movsb
aaa
sbb
add
jns
mov
shl
cmp
inc
addr16
xchg
jle
into
adcb
shrb
adc
sahf
imul
insb
lret
test
and
or
push
mov
or
std
hlt
adc
std
mov
or
enter
adc
test
xorl
mov
test
cwtl
cltd
std
mov
pop
orl
xchg
push
mov
test
addr16
cwtl
inc
aaa
shll
scas
lock
cmp
adc
cs
cmp
jb
decl
push
jae
movsb
xorb
repnz
xor
js
sbb
mov
xor
and
out
cltd
jns
jecxz
gs
icebp
daa
and
sub
mov
out
das
addl
adc
dec
repz
in
frstor
rcrb
in
leave
mov
cmp
xor
mov
push
mov
push
add
add
add
lds
ret
mov
xlat
jnp
xchg
pusha
insb
sub
repnz
test
xchg
lret
subb
insb
and
mull
sub
push
mov
loope
ljmp
xor
or
adc
cmp
adc
leave
mov
push
je
xchg
lcall
cltd
stos
jmp
jne
pop
xchg
or
cmp
xor
fsubl
ss
mov
xchg
sub
mov
pop
lods
ror
lods
sub
dec
pop
inc
jne
loop
inc
xchg
pop
adcl
sbb
aaa
call
lods
scas
fwait
push
movsb
xchg
xchg
int
sub
or
or
cltd
sbb
mov
and
iret
and
mov
adc
xchg
push
adc
jbe
inc
pop
bound
sub
and
and
dec
inc
pop
mov
jg
adc
sub
jnp
push
or
jl
sar
je
enter
add
add
ficoms
stos
sbb
call
mov
or
add
add
add
repnz
dec
call
outsb
andl
and
and
aaa
xchg
jmp
and
mov
cmc
xlat
call
sub
jp
sbb
xchg
insl
cmc
fisttps
xchg
mov
mov
movsl
and
test
jo
and
mov
add
int
sarb
icebp
and
xchg
addl
jmp
push
outsb
xor
bound
mov
sbb
xchg
in
pushf
mov
and
addr16
popa
and
mov
pop
mov
in
push
repz
mov
or
lds
fistpll
and
in
mov
xor
ljmp
xlat
movsl
fidivrs
and
push
add
jo
or
gs
movsl
mov
pop
call
cmp
jbe
sub
imul
daa
inc
dec
iret
mov
sbb
or
pop
jns
insl
xor
aas
popf
sub
and
mov
out
stos
jge
or
and
add
add
add
mov
pop
push
ja
shlb
fcomip
repz
inc
lea
mov
cs
mov
dec
mov
ljmp
jecxz
push
push
inc
es
iret
push
insb
pop
ds
lret
hlt
pop
and
enter
xor
add
out
test
fiadds
popf
js
cmp
or
cli
push
rorb
push
xor
jecxz
aas
push
xchg
std
fldt
push
adc
xorb
int
add
or
lea
popf
pop
mov
jmp
repnz
pop
std
add
movsb
adc
mov
sub
outsb
sahf
std
jnp
sub
scas
xchg
mov
cmp
pop
js
arpl
adc
push
jne
and
mov
push
push
cs
cltd
jae
push
cwtl
adc
fildl
rorl
xchg
jle
rcrl
scas
xchg
jg
stos
test
xchg
arpl
inc
lods
cmp
add
dec
or
out
xchg
iret
push
aas
mov
notb
add
add
add
push
pop
aas
or
outsb
rcr
push
jmp
and
cwtl
push
dec
stos
ret
test
inc
jmp
jecxz
pop
xchg
mov
sub
aam
out
pop
stos
mov
push
adc
rol
sti
xor
aad
dec
mov
movsb
add
push
movsl
lods
and
out
iret
dec
rorb
scas
dec
lods
dec
stos
mov
arpl
mov
flds
mov
fidivs
bound
leave
ret
dec
je
dec
imul
cltd
sub
in
data16
lods
xlat
jge
stos
imul
inc
pop
ret
leave
sub
mov
xor
dec
stos
sbb
scas
cmp
jge
sub
test
loopne
pop
loop
iret
push
fs
js
test
push
xor
xchg
sbb
inc
jmp
mov
push
xor
fnsave
xchg
pop
cmp
add
xor
jae
rorl
jmp
roll
add
aam
add
cmp
out
loope
jns
and
and
add
add
pop
mov
push
and
mov
lock
lcall
xchg
rcl
pop
push
jp
xchg
clc
dec
mov
sbb
pop
cmpsb
mov
push
cmp
out
rcr
je
jae
lods
das
ja
in
out
xor
rorb
js
es
imul
pop
out
fs
or
adc
lea
in
loopne
mov
clts
loop
adc
push
inc
jmp
mov
pop
scas
bound
xor
scas
mov
ds
outsb
or
rorl
add
jecxz
shlb
in
push
icebp
lods
jb
and
mov
fstl
sbb
lahf
dec
incl
pop
aas
and
mov
inc
xchg
mov
inc
sbb
pop
push
xchg
pusha
xor
lock
cmp
mov
faddl
dec
es
or
test
sbb
sti
push
mov
adc
add
add
add
repnz
lods
pop
ja
shrb
vcmpnlt_uqps
orb
test
sbb
sbb
popa
push
cltd
adc
aas
jp
jg
pop
mov
sbb
mov
pop
call
pop
mov
xor
mov
loop
adc
pop
mov
pushl
inc
mov
push
test
shll
int3
xor
cmp
push
lea
push
dec
andl
add
push
sbb
push
shr
mov
mov
aam
jge
shl
cld
scas
lds
dec
int3
mov
scas
jl
outsl
test
pop
cmp
xor
xor
int3
daa
push
out
sahf
xor
movsbl
loopne
imul
mov
ret
jne
insb
stos
dec
or
inc
inc
lret
sarl
sbb
dec
mov
sbb
sbb
imul
mov
dec
idivl
cld
ret
add
loop
and
add
add
add
loope
cmp
popw
jns
and
es
add
aaa
sti
dec
sub
int
cmp
imul
push
lret
xlat
add
clc
cmp
icebp
xor
les
aad
in
and
jbe
push
xchg
dec
or
add
mov
sub
push
les
cs
sbb
cmpsb
mov
sahf
fistpll
lahf
and
dec
test
dec
mov
add
lcall
das
sub
jg
pop
fsubs
int3
mov
out
bound
pop
add
jns
xor
in
scas
lea
pushf
sub
or
sub
mov
aad
adc
fadds
fs
daa
fnstsw
adc
std
sbb
pop
sti
mov
and
scas
inc
mov
lds
push
aas
stos
xchg
call
dec
loope
pushf
icebp
stos
inc
insb
loop
mov
xor
add
add
mov
iret
mov
in
and
and
add
add
add
dec
cwtl
jmp
ret
nop
inc
lds
loopne
ljmp
cmpl
call
fwait
mov
lods
cld
inc
sub
fildll
out
cmp
xchg
mov
sub
mov
jle
xchg
mov
stos
pop
mov
xor
add
dec
inc
or
pop
shlb
insl
mov
mov
dec
addb
pop
out
mov
pop
cmc
int3
sbb
dec
inc
fdivs
xor
and
dec
fidivrs
add
sub
loope
testl
jp
imulb
pop
rorl
cmp
xor
push
test
in
mov
aad
aam
mov
rcl
sub
sbb
jp
test
jne
pop
inc
fstpt
mov
inc
mov
adc
jno
push
or
fistps
cmpsl
jmp
add
sarl
mov
or
jg
arpl
bound
add
add
test
or
inc
sti
cwtl
pop
pop
mov
sbb
leave
es
sbb
mov
mov
push
dec
shrb
fimull
push
mov
in
es
out
xchg
icebp
jge
jle
or
adcl
popl
in
mov
vmaxsd
into
jno
adc
pop
sbb
mov
pop
out
inc
xchg
push
je
mov
imul
mov
xchg
dec
popf
push
push
ss
lret
je
mov
xchg
ljmp
adc
jmp
popf
lcall
cmc
cmp
pop
add
inc
test
xchg
xlat
xchg
fdivr
push
push
inc
jbe
or
and
or
pop
pop
shrl
js
rcr
out
pop
test
add
aas
wrmsr
fcoms
jmp
xchg
and
sbb
jno
cmp
cmp
add
or
inc
xchg
imul
add
xor
clc
cli
clc
sarb
sti
mov
shll
add
add
add
jp
or
xchg
push
imulb
xor
add
adc
mull
push
fcmovnu
movsb
jle
popa
lret
movsb
repz
mov
ja
neg
loop
jb
test
jecxz,pt
int
dec
call
scas
push
in
sbb
push
or
jnp
jae
cs
std
push
push
jecxz
data16
mov
jecxz
xor
fcom
xchg
aaa
mov
jae
fcmovb
push
leave
sbbl
push
xor
repz
frstor
cmp
hlt
jg
fmull
test
or
int3
push
mov
fildl
pop
int
pop
add
jno
fnstsw
outsl
push
in
or
cmp
test
ja
push
push
pushf
loope
sub
adc
push
jb
daa
icebp
ja
cmp
and
xchg
ret
scas
nop
fimuls
int
jbe
lods
or
rcrb
inc
mov
pusha
push
add
loop
sub
add
jnp
out
mov
add
sub
add
add
sbb
mov
ds
lret
incb
movsb
jo
inc
xchg
je
fwait
push
stos
push
mov
cmp
aas
or
and
lock
clc
mov
insb
cs
or
int
xor
das
in
in
sub
add
dec
dec
xchg
add
xchg
rorb
imul
jo
fwait
jne
push
out
js
pop
lcall
push
stos
xor
pop
jo
outsb
pop
in
dec
and
jp
insb
faddl
adc
and
pop
imul
pushf
lcall
sbb
aaa
cmp
js
xchg
sbb
pop
jnp
xlat
pop
cmp
mov
cli
scas
cmp
movsl
mov
shll
xchg
and
jg
imul
mov
movzwl
mov
sti
dec
cmpsb
jne
push
cmp
jmp
dec
movsl
mov
xor
dec
cld
ffreep
mov
or
aaa
xorl
inc
rcrb
xor
fs
es
data16
insb
daa
mov
mov
sub
add
add
cltd
mov
aas
xchg
test
xor
test
orl
jnp
jbe
jnp
pop
ret
into
loop
dec
push
or
rorl
jno
pop
xor
bound
inc
jp
xor
mov
pushf
pushf
cmp
mov
aas
mov
cmpsl
ficompl
mov
pop
pushf
js
mov
ss
insl
push
push
data16
mov
adc
sbb
mov
cld
or
add
ljmp
insb
sarl
rcr
roll
xor
inc
subb
add
lret
cwtl
addr16
lods
stos
lahf
insb
sarb
shlb
dec
repz
add
outsl
ds
popf
xchg
pop
push
repz
in
xchg
add
inc
sahf
lret
insb
xor
orb
jg
test
adcl
jecxz
xchg
dec
push
repz
mov
mov
inc
imull
add
add
dec
mov
imul
sbb
cmp
add
add
add
enter
jp
sbb
sbb
xchg
daa
cmc
pop
jne
clc
jnp
xchg
xor
ret
mov
or
jge,pn
shll
mov
pop
les
rcrl
and
mov
push
adc
xchg
fldt
mov
cli
cltd
mov
hlt
stc
addr16
js
xchg
adc
stos
fildl
popf
loopne
push
pop
xchg
jmp
mov
enter
movsb
sbb
or
push
jb
push
stc
mov
pop
clc
scas
cmp
mov
cwtl
hlt
mov
inc
mov
aas
or
xchg
and
or
xor
cmp
jns
dec
sub
jmp
push
push
lea
cmp
mov
bound
clc
push
out
subb
pop
or
pushf
imulb
jl
loop
pop
test
into
mov
lret
push
dec
or
mov
dec
js
aas
adc
add
and
push
sti
cmpsl
enter
cmpsb
icebp
xchg
loop
sub
add
add
out
adc
add
loopne
xor
shr
in
fcmovb
ja
push
hlt
out
mov
sub
mov
ss
int
out
cmp
out
add
cmpsb
decb
imul
negl
add
iret
gs
lock
or
sub
mov
ja
subb
insl
jecxz
jbe
pop
mov
and
xchg
mov
cmp
ret
add
mov
iret
loopne
dec
jg
aaa
jno
cmpl
xor
insl
adc
push
int3
les
dec
sub
fwait
aas
pop
add
sbb
sbb
iret
data16
movsl
cmpsb
bound
mov
call
out
pop
mov
lcall
pop
or
sbb
in
shrl
push
stc
add
sbb
repz
push
bound
or
lods
sub
fdivl
les
jmp
hlt
push
cmp
add
push
and
std
mov
dec
push
sub
in
sub
add
add
jbe
inc
lods
jns
lods
fsubp
adc
aas
push
in
sbb
hlt
shll
dec
jecxz
int
add
inc
bound
mov
push
dec
jbe
push
repnz
fnstsw
sbb
xor
xor
arpl
or
xor
xchg
mov
das
push
ja
cmc
insl
cmp
jns
sbb
test
xor
xor
std
push
sbbl
cmp
mov
sbb
dec
bound
hlt
jmp
sbb
nop
or
cmpsl
pop
jno
es
shll
in
mov
cld
rcl
cltd
lods
jg
rol
sub
cmp
pop
push
call
xor
jb
mov
jmp
subl
xor
int
dec
xor
mov
test
inc
je
push
dec
shlb
adc
sbb
xchg
pop
stos
jo
adc
shlb
lret
sldt
add
lds
xchg
and
inc
and
lcall
add
add
add
mov
mov
lcall
xor
pop
jmp
cmpsl
sbb
xchg
push
orb
cmp
and
imull
scas
in
jo
and
sti
inc
add
jmp
and
pushf
mov
fdivp
cmp
sub
sub
ret
mov
add
inc
mov
jne
repnz
mov
or
loop
test
sbb
add
mov
mov
repnz
dec
or
int3
hlt
icebp
pop
dec
in
push
test
ds
add
jle
cmp
sbb
sub
add
lcall
mov
sub
ljmp
cwtl
pop
int3
stos
push
mov
mov
shrb
push
sbb
clc
sbb
add
push
mov
sbb
rcrl
ljmp
or
movsb
adc
add
add
add
xchg
ficomps
cmp
lahf
loopne
jo
dec
add
add
add
and
add
cld
xchg
or
add
out
loop
and
sbb
outsl
add
shrb
sarl
lea
jl
and
or
inc
sub
sub
mov
roll
iret
mov
dec
in
shll
sub
les
push
gs
movsl
ljmp
mov
jp
cld
mov
jecxz,pt
loopne
test
loop
loop
mov
push
out
leave
xor
imul
mov
adc
push
sbb
cwtl
frstor
sbb
lods
adc
les
add
mov
shll
push
out
leave
hlt
dec
adc
adc
inc
cmp
lods
adc
es
xor
and
sub
xor
insl
aad
add
jg
mov
sbb
and
sub
or
xor
xchg
cmc
iret
mulb
xor
fwait
jle
add
lods
xor
mov
cmp
daa
fcoms
add
add
adc
jns
out
in
push
cltd
rcl
cmp
lret
xlat
mov
dec
xchg
ds
mov
iret
cltd
sbb
or
dec
popf
test
pop
mov
lret
mov
fdivl
push
jge
daa
aaa
jae
xchg
enter
mov
mov
insl
pop
xchg
cmc
xor
les
adc
cwtl
jne
sub
jo
sbb
add
jne
je
bound
xorb
lret
mov
adc
pop
dec
pop
stos
out
mov
inc
add
inc
mov
das
sbb
pop
shll
mov
jae
cmp
xlat
popa
xor
xor
or
fldcw
adc
cmc
xor
dec
inc
stc
cmp
add
movsl
call
pop
mov
mov
adc
jl
pop
pop
adc
mov
daa
xchg
and
pop
repnz
in
push
push
cmc
sub
cmpsb
je
sub
ret
xor
add
lret
mov
or
dec
scas
push
outsb
push
xor
add
add
aas
or
out
je
inc
mov
repz
pushl
outsb
sbb
in
lcall
lret
outsb
add
or
gs
imul
xchg
xor
inc
cld
mov
cmp
adcl
cmp
pop
insl
bswap
push
test
aad
out
out
lds
and
pop
xor
mov
dec
aam
push
dec
mov
movsb
bound
pop
pop
inc
iret
data16
pop
lcall
and
inc
in
jecxz
lahf
stos
fimuls
dec
sub
nop
ja
ja
sbb
rcrl
sub
mov
cmp
sub
mov
sub
xor
rorb
das
test
pop
cmp
pop
mov
push
xor
pop
push
push
outsb
faddp
or
cmp
test
cmp
mov
add
sub
sti
pop
jge
neg
hlt
add
xor
add
add
daa
sub
and
hlt
sbb
in
lahf
add
hlt
shll
dec
fcmovne
jne
sbb
push
xlat
orl
insl
aad
pushl
pop
mov
stos
add
dec
sbb
in
insb
inc
ds
sbb
dec
clc
vpinsrw
xor
enter
loop
sti
dec
mov
addr16
arpl
dec
sahf
call
push
mov
mov
push
ret
cmovno
mov
sub
mov
lcall
rcll
dec
test
xor
adc
add
sub
xchg
das
inc
ja
dec
or
add
sub
push
xchg
push
mov
out
push
adc
mov
arpl
pop
cmp
call
bound
add
xchg
fcmovne
or
xor
inc
nop
xorb
out
mov
adc
mov
pusha
cltd
fsub
std
in
popf
in
stc
jmp
clc
negb
adc
add
add
add
cmp
push
outsb
sub
popa
xchg
cmp
aad
jecxz
andb
rorl
adc
or
pop
rcrb
mov
jbe
jle
mov
fdivrl
inc
mov
sbb
in
repz
push
in
xchg
sbb
loop
movsb
dec
mov
imul
mov
cmp
das
mov
or
pop
into
push
mov
sbbl
mov
dec
push
jmp
xchg
cmp
hlt
jno
push
mov
fbstp
push
bound
xor
mov
xor
or
test
sbb
test
push
inc
scas
pop
and
repz
je
cmp
sub
scas
xchg
std
mov
adc
aam
out
mov
ljmp
imul
mov
mov
aam
scas
dec
or
mov
xor
mov
jb
sub
jne
inc
ja
add
fdiv
or
add
add
jp
jnp
sti
xchg
jle
jp
lods
loope
mov
add
add
push
in
add
jl
mov
and
lea
test
xor
inc
outsb
push
lea
mov
xchg
aaa
jmp
mov
sub
rorl
cwtl
sbb
stc
lods
fisubs
lock
push
dec
xlat
decb
pop
dec
cmpsl
mov
or
xchg
jns
and
add
sbb
arpl
sub
cmp
push
mov
call
push
push
push
sub
leave
js
divl
pop
dec
aas
cs
jns
lahf
test
push
lcall
adc
xchg
repz
jle
jno
test
adc
dec
je
add
mov
mov
push
adc
push
scas
adc
lahf
push
stos
pop
sub
cwtl
js
mov
cmpsb
jae
insb
pop
std
in
fdivrl
movsl
and
push
jp
mov
aaa
add
xchg
ss
mov
pushf
xchg
mov
push
sti
decb
mov
aas
pusha
xor
add
add
push
sbb
dec
pop
loopne
adc
ja
movsb
xor
adcl
cwtl
imul
mov
lea
fsubl
fcom
shrl
daa
adc
roll
dec
pop
shlb
pop
mov
jne
in
test
sbb
inc
jbe
mov
sub
insl
mov
cmc
rorl
sub
mov
jb
mov
xchg
imull
repz
adc
sbb
push
stos
push
pop
pop
lods
push
mov
push
movsb
or
push
push
and
mov
jno
adc
test
xor
data16
or
hlt
mov
cmpsb
mov
imul
xorl
xor
xor
call
push
clc
and
fisttpll
mov
mov
jecxz
jns
xchg
loop
mov
mov
pop
outsl
cmp
jl
mov
enter
js
push
cmp
imull
xchg
mov
jecxz
xchg
xchg
mov
push
ret
cmp
xor
hlt
mov
dec
add
add
add
loop
mov
in
adc
adc
fcoms
jl
mov
clc
aad
sbb
cld
fsubp
int3
dec
jge
das
movsb
stos
orl
push
xor
sbb
xchg
idivl
loope
and
das
sbb
dec
mov
cld
lahf
enter
pop
adc
popa
scas
mov
loop
add
jno
ret
jb
and
iret
out
aam
divl
add
mov
jo
lods
sbb
or
xchg
rorl
ljmp
in
pusha
ja
ss
das
pop
orb
lock
pop
sbb
or
shll
add
je
sbb
inc
addl
add
aaa
xor
cmp
push
lods
in
test
and
cld
xor
sarl
fs
push
imul
popa
mov
int
in
xor
ja
es
xchg
add
incb
ljmp
aam
subl
add
gs
imul
iret
jp
add
sub
test
popf
push
xchg
xchg
js
inc
sbb
inc
xor
loopne
lahf
mov
dec
test
imul
sbb
pop
dec
push
hlt
aas
ret
mov
pushf
xchg
xor
xlat
movsb
add
cmp
add
lcall
repz
sti
jl
lea
xchg
call
add
jnp
clc
test
outsl
mov
pop
sbb
fildl
loope
hlt
xchg
jb
cmp
out
push
cli
ss
fisubs
pop
cld
lods
insb
push
mov
sub
js
jbe
call
mov
int3
es
mov
adcb
push
es
fidivs
add
and
inc
adc
mov
les
mov
pop
clc
or
out
ret
fs
mov
jmp
repz
add
divb
rclb
nop
lcall
aaa
add
add
add
int3
adc
sbb
add
fmul
in
inc
insb
sub
in
add
or
repnz
xchg
fs
mov
lods
rol
add
and
clc
mov
mov
js
push
pop
arpl
ja
ficoms
inc
rclb
sub
sub
sub
mov
or
test
idivl
push
stos
jge
add
ficomps
out
add
xchg
cmp
push
mov
loope
mov
xchg
add
inc
outsl
mov
cmpsb
dec
xor
std
mov
and
imul
insl
push
push
and
mov
pop
jge
push
or
jg
jecxz
or
mov
insl
jle
mov
daa
negb
dec
into
push
shrl
push
das
cmp
scas
vrcpps
mov
lock
loop
mov
or
les
xchg
mov
mov
add
jl
dec
jbe
idivl
or
fldt
cmp
add
add
xchg
and
sub
inc
xchg
push
xchg
test
mov
jge
pop
orl
xor
shr
xor
add
jbe
mov
addr16
push
xor
jbe
push
ja
inc
or
xchg
cmp
mov
sarl
jecxz
stc
lods
mov
push
mov
mov
fs
or
mov
xor
cmc
mov
push
out
notl
sahf
add
aam
add
stos
pusha
add
ror
cltd
sbb
sahf
xchg
js
rcrl
js
pop
mov
bound
or
jge
ret
mov
es
lds
mov
in
jbe
inc
sbb
pop
jmp
ret
bound
jle
or
adc
inc
mov
jno
cmpl
sub
sbb
mov
sub
mov
and
outsb
sub
stos
fs
jmp
leave
aas
push
movsb
jle
je
add
add
add
and
and
push
inc
mov
sbb
xor
push
lods
jne
pop
push
sbbl
push
jl
push
mov
movsb
rorb
push
repz
push
add
cld
pop
xor
sub
scas
ja
mov
adcb
add
or
mov
insb
xchg
popf
cld
mov
inc
pushf
dec
test
je
dec
cld
push
shl
and
jno
sahf
or
mov
fidivs
lods
daa
fisttpll
andb
jno
pop
xabort
or
sbb
test
push
insl
pop
je
xlat
loope
les
sbb
mov
jl
jo
fmul
fs
fpatan
pextrw
mov
fidivrl
shr
xchg
add
inc
xchg
loopne
int
sahf
dec
sub
stos
add
jecxz
xchg
xorb
xchg
add
in
cwtl
cmp
mov
les
scas
fistpll
outsl
gs
xchg
push
inc
js
add
add
add
jns
int
enter
insb
jmp
pop
pop
das
mov
outsl
push
in
out
or
adc
shlb
mov
adc
dec
fstps
clc
test
iret
sbb
pop
js
loope
inc
mov
pop
cld
popa
cs
jae
out
mov
loope
ja
sbb
or
pushf
xchg
enter
icebp
jl
rol
popf
mov
jge
mov
sub
mov
pop
jbe
dec
fisubl
pop
mov
xorb
lret
int3
sbb
mov
out
inc
repz
xor
sahf
out
pop
iret
push
daa
int
cmp
or
ret
jmp
popa
xchg
dec
mov
test
pop
loop
cwtl
inc
cltd
cmp
push
dec
cltd
or
loopne
ret
enter
fidivl
xor
adc
mov
int
inc
mov
lds
cli
leave
push
sbb
jnp
jnp
cmp
movsb
push
sbb
scas
insl
idivb
add
add
adc
cmp
pusha
inc
sub
sti
sbb
rclb
xor
mov
ljmp
mov
cmpsl
xor
push
and
adc
das
or
mov
subb
shrb
rol
mov
adc
jno
push
inc
or
scas
movsl
inc
es
lret
inc
loop
add
mov
jns
ret
fwait
cmp
nop
push
xchg
or
test
mov
dec
pop
xor
dec
push
cmp
lcall
arpl
mov
je
cmp
sbb
lods
sbb
ds
mov
cs
cmp
dec
imul
dec
and
js
adc
adc
hlt
ja
popf
sahf
dec
fnsave
loope
int
jl
mov
iret
cld
outsl
xchg
add
xchg
mov
adcb
repnz
mov
loope
and
outsl
lret
mov
out
jmp
xchg
mov
cmp
add
add
push
mov
xor
hlt
lods
push
add
mov
stc
xor
add
or
icebp
pop
lahf
or
popf
xor
push
dec
scas
mov
and
and
ret
and
xchg
and
je
sub
xor
rolb
cmp
dec
cmp
or
test
insb
jmp
add
movsb
adc
int
add
imul
adc
gs
popf
js
jle
lret
lds
repz
mov
outsl
pushf
je
lods
jbe
div
xor
sub
push
dec
jmp
popa
ljmp
ret
jmp
pop
ret
push
pushf
enter
popa
sub
cmp
rcrl
pop
inc
adc
loop
js
sti
test
leave
push
xorb
ret
enter
nop
jecxz
addr16
andb
or
mov
test
icebp
fisttps
test
pushf
xchg
push
outsl
mov
and
das
cmp
lods
repz
mov
xchg
sub
xchg
test
add
imul
cmp
repz
push
fisttps
in
add
es
flds
xchg
fstpl
sbb
lret
inc
push
ret
xor
ret
adc
inc
lods
pushl
stos
add
push
outsb
or
lods
sbb
xchg
sub
jmp
jg
cmpsl
xchg
pop
fst
hlt
mov
sti
test
andb
and
outsl
xchg
scas
mov
push
push
call
pop
adc
fidivrs
test
dec
jmp
stos
out
lods
cmp
arpl
popf
cmpsl
hlt
aas
rolb
inc
cs
xchg
cmp
test
mov
xorb
or
lret
shrd
pusha
je
sub
scas
mov
cli
test
cmp
push
and
push
ret
bound
jno
cltd
cs
lea
aad
pushf
mov
adc
or
aas
daa
push
cld
push
std
jmp
dec
push
scas
jno
add
add
add
mov
or
rcll
jecxz
dec
fs
cld
imull
addr16
sub
pop
js
mov
sub
push
call
inc
ljmp
lea
push
push
cmpsl
jnp
pop
fstpl
push
mov
add
push
xchg
push
fcoms
adc
mov
jle
inc
xchg
sub
stos
adc
scas
fisttpl
mov
xlat
dec
pop
mov
inc
xchg
adc
pop
sub
arpl
enter
push
add
xchg
add
fs
clc
push
aas
inc
das
dec
jecxz
adc
xchg
xchg
xchg
in
jl
jb
pop
cwtl
cwtl
lcall
lsl
push
jns
pop
fwait
lahf
mov
jmp
lahf
scas
add
sub
jg
call
lahf
dec
mov
lcall
repnz
mov
cmpsl
xorl
add
test
xlat
insl
insl
bnd
bound
fistpl
fcomps
add
add
add
sbb
dec
push
out
aad
mov
aas
add
add
add
loop
lret
mov
or
pop
pushf
mov
loope
fwait
insl
cmp
mov
cld
shll
lods
lret
clc
xor
ja
add
inc
push
pop
sub
sub
push
pusha
mov
out
adc
cmp
dec
scas
push
les
pusha
inc
push
mov
lods
push
lods
out
mov
in
inc
push
cmpsl
mov
fwait
adc
cmpl
mov
shl
push
inc
add
mov
movsl
or
push
popf
out
cmp
ss
sbb
je
cmpl
scas
ljmp
stos
adc
fsubp
roll
std
add
mov
je
ret
loop
faddp
cmp
nop
cmp
sbb
dec
mov
inc
push
pop
int
adc
pusha
ljmp
insb
lret
pushf
jo
scas
ja
push
push
add
xor
mov
sub
scas
andb
inc
in
les
in
push
cmp
mov
stos
add
push
mov
or
icebp
add
nop
inc
add
add
add
iret
cmpsl
cmpsl
test
xchg
mov
ljmp
fwait
jmp
pop
sti
aam
arpl
mov
push
shrl
jmp
mov
adcb
daa
testb
fisubrs
das
insl
shll
jo
adc
xchg
or
daa
pushl
xchg
or
insl
mov
divb
pop
psrlq
aad
jg
orl
push
inc
fcomip
cld
or
iret
push
sbb
jp
sbb
lock
adc
mov
lea
test
mov
sub
mov
ret
pop
add
add
mov
incl
push
lods
jp
sbb
jg
arpl
pusha
call
sub
pop
xor
popf
imul
sub
or
mov
ret
sbb
mov
add
andl
lret
inc
cli
rclb
add
mov
ja
jg
xchg
orl
clc
xchg
inc
add
add
add
popa
mov
mov
inc
insl
mov
inc
cwtl
push
xor
inc
mov
adc
aas
push
cmpsl
and
cmpsb
jg
sub
in
push
pushf
pusha
sub
subb
cli
jp
or
mov
popa
and
sbb
xor
in
cli
mov
xchg
dec
hlt
jnp
xor
or
insl
test
adc
xchg
sub
inc
filds
leave
ss
dec
shll
popa
jae
xlat
sbb
lods
fcmovbe
lds
cli
iret
hlt
xchg
xor
push
gs
lahf
cmp
ja
add
mov
dec
inc
fisubs
lcall
mov
cmp
iret
adc
call
push
inc
dec
jnp
out
idivl
into
cmpsl
f2xm1
jnp
out
cs
int
xor
ja
jae
aam
in
mov
cmp
idiv
adc
push
sbb
test
int
fcmovb
nop
xchg
test
add
add
push
dec
lret
jmp
imul
aaa
je
lret
pusha
dec
cwtl
inc
add
add
add
out
repnz
inc
mov
mov
cwtl
or
repz
or
and
movsl
sbb
mov
cmp
aam
loopne
fwait
sub
cltd
mov
jge
es
pop
lea
mov
imul
icebp
mov
idivb
sbb
leave
cmp
stos
leave
push
inc
mov
mov
xor
mov
adc
adc
std
dec
cmpb
out
mov
ss
mov
dec
mov
enter
rorl
adc
pop
xchg
mov
xchg
fmull
jl
cwtl
aas
mov
inc
lods
xor
xchg
mov
jno
or
dec
aam
dec
xchg
or
sbb
enter
lock
inc
mov
xor
lahf
stos
les
pop
idiv
push
inc
aad
into
mov
jae
out
lods
or
lock
into
leave
repz
pop
add
add
lds
cmc
cwtl
xchg
push
sub
add
pushf
inc
add
add
add
cli
pushw
fdivl
sbb
aad
inc
xchg
xchg
xor
out
cmpsl
jmp
push
stos
repnz
push
and
xor
int
jle
movsb
flds
inc
int3
in
mov
mov
jae
sbb
or
int
mov
add
and
push
inc
lods
daa
and
and
mov
out
dec
inc
mov
push
lret
fldl
pop
scas
cmpsb
stos
add
sbb
sti
sti
icebp
pop
mov
scas
dec
push
int
out
test
xchg
dec
scas
es
push
popf
fldcw
ja
out
push
btr
pop
shrb
sbbl
sub
lock
mov
nop
dec
or
sbb
pop
ret
inc
sbb
xchg
in
adc
cmp
gs
int
jnp
mov
cmp
xor
adc
pop
pop
cmp
sub
addr16
pop
xchg
dec
leave
sub
jns
xor
jg
sarb
imul
add
out
andb
aas
push
cmpsb
ficomps
test
sub
mov
std
insb
nop
insl
cmp
stc
daa
sub
mov
mov
adc
inc
test
inc
xchg
ja
lods
clc
xchg
pop
int
pop
fadds
push
test
mov
xorb
in
loop
lods
jecxz
stos
lods
dec
pop
ficoml
xor
jbe
mov
mov
aad
pop
sub
jns
mov
and
aad
ss
inc
aaa
jle
test
daa
mov
nop
shrb
loope
xchg
or
pop
out
in
ret
push
sbb
movsl
lahf
and
and
repz
popf
pop
lahf
adc
lods
mov
mov
mov
cmp
sbb
xor
arpl
movl
mov
flds
add
sub
pop
or
mov
test
and
xchg
inc
jg
pushf
lea
scas
mov
pop
shll
or
add
js
ret
jg
decl
rol
push
mov
andl
mov
dec
enter
in
out
in
jl
mov
push
test
xor
repz
pop
mov
jge
sub
mov
jmp
leave
loopne
dec
mov
mov
jbe
push
pusha
sbb
stos
xchg
dec
mov
pop
mov
rcrb
and
aas
or
pusha
loopne
pop
mov
rorl
leave
mov
push
inc
adc
push
push
cmp
aaa
inc
cmp
fldcw
jno
or
lea
inc
mov
mov
data16
push
mov
shll
ss
push
scas
inc
fisttpl
in
sub
sub
out
imul
enter
pushf
in
or
mov
leave
inc
sti
loopne
mov
xchg
outsl
mov
in
add
int
xchg
loopne
mov
mul
dec
dec
int
std
dec
add
add
das
mov
out
aad
adc
call
add
add
fistpl
jl
ja
push
aas
inc
mov
insl
ret
adc
stos
in
push
loop
inc
sbb
dec
xchg
enter
vcvtpd2dqx
mov
loopne
jg
scas
inc
or
inc
repz
adc
mov
sub
sub
and
cwtl
xchg
aad
test
addr16
jo
fstpl
lods
aas
outsl
and
notrack
xchg
dec
jmp
ret
cld
adc
and
in
cmp
adcb
mov
cltd
mov
xchg
idivl
adc
adc
cmp
cmp
xchg
jo
in
cmpsl
outsb
insl
adc
jns
rcl
int
mov
movsb
mov
sub
into
mov
inc
pop
adc
andl
in
fcompl
adc
inc
jle
sbb
cmpsb
push
sti
es
dec
mov
push
pop
rorl
imul
adc
or
add
add
hlt
gs
dec
adc
adc
add
add
cmp
cs
push
or
outsl
dec
fsubl
and
notl
test
add
inc
fucomip
dec
jno
insl
jle
cs
sub
sarl
lods
or
mov
aam
dec
mov
int
mov
dec
adc
and
stos
xchg
int
cli
xchg
add
push
cmpsl
add
xchg
add
out
jle
stos
subb
in
push
sar
enter
dec
pop
and
xor
mov
orl
dec
mov
imul
xlat
mov
fdivs
push
fisubrl
sbb
and
jo
inc
push
inc
inc
ds
cmpsb
pop
movsl
sbb
add
push
pop
cmc
aad
rcl
nop
in
sbb
js
nop
lea
xchg
ljmp
cmp
mov
inc
and
andb
das
in
cmpsl
mov
rorl
inc
cwtl
into
add
aas
gs
pop
repnz
dec
add
add
add
xchg
mov
repnz
inc
jle
insl
jmp
sbb
cmp
rcrb
fcoml
outsl
aas
out
sti
fimull
aas
sbb
jae
mov
addr16
inc
pop
push
insl
and
pop
xor
in
mov
mov
rorl
or
je
js
ds
xor
cmp
or
add
jmp
lods
lcall
pop
lock
mov
ljmp
cmpsb
insb
sbb
push
mov
or
pop
in
pop
cmpsl
mov
scas
xchg
je
sbb
repnz
cmpsb
pop
int
out
loope
scas
mov
mov
lret
mov
push
call
test
dec
adc
xchg
dec
lret
pop
aaa
fsubp
cmpb
loopne
sti
jmp
jo
lds
pusha
das
out
ss
push
jb
mov
scas
int3
mov
add
out
fisttpll
lock
add
add
add
adc
mov
std
fstl
gs
lahf
mov
adc
sub
loopne
mov
xor
sbb
sub
xchg
inc
pop
outsb
jo
mov
mov
pop
xchg
pop
lret
cs
out
rcr
xchg
push
and
adc
xor
mov
es
adc
sub
push
mov
mov
pop
push
mov
xchg
jae
adc
dec
push
pop
mov
cmp
sub
inc
add
cmp
xlat
jge
inc
adc
int
into
js
lahf
inc
mov
test
xor
out
jge
or
mov
insl
imul
pushf
push
inc
aad
xor
addr16
mov
fisttpl
out
pop
mov
inc
adc
inc
add
xchg
rorb
add
ds
scas
bnd
or
insb
mov
int
aad
out
push
fs
mov
into
cmp
add
add
mov
ljmp
add
add
add
pop
in
daa
pusha
dec
mov
in
out
jmp
insb
mov
movl
cmpb
sub
jnp
pop
imul
jne
pusha
fstl
pop
pop
adc
jno
and
mov
push
or
int3
std
jb
and
or
xor
lock
mov
dec
jp
cmc
jbe
xor
push
lcall
mov
or
add
cmp
mov
add
cmpsl
fimull
cmp
adc
out
xchg
push
adc
loopne
push
fisubrs
fdiv
lods
int
dec
push
mov
subb
sub
cmp
addb
in
or
mov
pop
jge
xor
jo
data16
add
imul
sub
hlt
enter
lods
fidivrl
push
sbb
jmpw
fnstcw
jo
sahf
jb
out
and
mov
add
add
imul
ds
and
loop
data16
jl
inc
cmp
cmp
bound
dec
in
inc
or
xchg
mov
scas
push
loopne
push
into
sub
sbb
xor
xchg
and
pop
push
jnp,pt
inc
fistpl
xlat
pop
and
out
cmpb
aam
sub
pop
int
cmp
cwtl
gs
jne
dec
or
int
sarb
fstps
out
mov
or
adc
negb
int3
daa
pop
sbbb
mov
sub
dec
scas
sbb
add
and
mov
adcl
jmp
add
aam
mov
dec
sbb
popa
sub
sub
adc
push
dec
hlt
and
jne
movsb
xor
mov
sub
aam
fscale
test
movl
call
xchg
out
in
mov
and
push
mov
out
daa
std
je
mov
adc
fadds
add
add
imul
out
mov
mov
add
add
add
adc
lahf
mov
scas
dec
sbb
xchg
push
mov
cwtl
xor
adc
and
jne
cltd
pop
jb
call
data16
in
lods
push
add
xchg
ret
pop
insb
pop
iret
push
push
arpl
mov
inc
jecxz
and
adc
aam
and
adc
xchg
je
mov
mov
mov
outsl
or
or
mov
out
sti
pop
and
popa
addr16
or
add
scas
pushf
test
mov
push
stc
or
ret
nop
mov
fs
pop
repz
inc
icebp
scas
xor
mov
das
mov
sub
sub
sub
mov
out
xor
bound
mov
test
test
ljmp
mov
and
ja
js
sub
jg
inc
or
dec
mov
and
pop
in
js
cwtl
insb
test
add
js
add
dec
stc
mov
ljmp
les
add
add
dec
aas
aaa
jne
mov
or
scas
and
sub
lock
xchg
jbe
jg
sub
bound
pop
test
jp
sbb
int3
popa
push
or
cmpb
cmp
push
out
sbb
push
loopne,pn
pop
andb
pop
ffree
sub
cmp
xor
mov
fs
inc
push
jmp
xchg
fiaddl
insb
mov
mov
scas
sbb
aas
push
dec
sub
daa
adc
add
adc
in
jnp
stos
insl
loope
dec
pop
aam
popa
ret
pop
icebp
int
inc
out
iret
mov
pusha
clc
sbb
push
add
xlat
sbb
outsb
pop
push
dec
push
add
mov
jbe
ret
js
test
lret
hlt
out
notb
orl
mov
jecxz
inc
movsl
test
adc
add
xchg
cmp
jle
jg
cld
lcall
sbb
dec
add
add
add
enter
push
xchg
call
mov
add
xchg
ljmp
stos
xchg
jno
xor
fstps
call
insl
test
imul
je
dec
lahf
sub
adc
jge
nop
jns
fldenv
mov
fs
push
cmp
and
stc
adc
int3
sub
jne
lea
mov
loope
jmp
arpl
das
push
jmp
test
jo
push
push
sbb
add
pop
mov
xchg
leave
dec
or
loop
xor
mov
push
mov
pop
repz
shrl
or
adc
or
test
mov
es
ljmp
jo
sbb
jo
pop
jecxz
fcmovbe
inc
jnp
jae
jl
gs
add
aas
outsb
adc
xor
sbb
jne
imul
xor
fnstcw
add
add
xchg
mov
pop
fbld
int3
dec
add
add
add
jge
xchg
sbb
sarl
leave
jmp
leave
xchg
dec
dec
push
sbb
sti
int
lret
mov
fistpll
jge
push
pop
jno
daa
pop
lods
les
outsl
ljmp
aad
scas
push
cmp
fwait
inc
cltd
fdivrl
in
push
sbb
xchg
cld
cmc
sbb
mov
and
xor
dec
pop
push
xchg
test
add
call
push
xor
pop
pop
dec
cs
push
cs
es
or
mov
dec
movsb
scas
or
dec
ret
mov
dec
clc
clc
int
jno
mov
aaa
fcmovnb
in
fistpl
dec
add
dec
mov
aas
jo
cmp
mov
xchg
dec
pusha
jns
lret
add
ret
shlb
push
and
out
cmpsb
lcall
clc
inc
sub
ss
fmull
nop
add
sub
or
or
repz
xchg
sub
in
sbb
jne
add
add
inc
mov
push
push
jmp
push
mov
push
add
add
add
mov
dec
insb
ret
xchg
mov
fwait
loopne
add
lods
int
jne
mov
xchg
daa
es
pop
pop
cmp
mov
inc
ja
sti
cwtl
sub
jbe
shrb
stos
nop
rcr
fcompl
sbb
add
sub
jnp
ljmp
xor
mov
mov
ficoml
mov
mov
dec
in
jp
stos
inc
enter
inc
jg
pop
int3
push
sub
dec
cmp
push
roll
pop
mov
imul
mov
ja
insl
xor
pushf
jg
dec
in
movsb
inc
popa
or
xlat
ljmp
das
dec
mov
mov
sub
mov
pop
das
enter
mov
sub
and
pop
adc
out
pop
in
and
inc
outsl
jns
insl
shlb
pop
xor
mov
xor
fsubrl
mov
out
cmp
ret
or
lods
xor
add
add
push
fwait
rcl
dec
add
cmc
push
jle
scas
inc
call
scas
or
out
xchg
scas
ja
ret
xor
mov
shr
repz
jo
iret
fwait
push
sahf
out
stc
xor
fistpl
popf
jb
mov
negb
mov
fcomps
pop
shll
into
jo
xchg
std
inc
mov
loope
mov
and
add
pop
loope
jg
xchg
ss
jae
insl
mov
or
pop
pop
cmp
loop
cmp
and
test
xor
daa
xchg
sbb
inc
xchg
outsl
dec
and
test
lret
test
lock
es
divl
cmpsb
add
repnz
scas
movsb
in
repnz
xor
sub
sub
sbb
push
xchg
mov
mov
sahf
xchg
pop
inc
sarb
daa
lcall
daa
push
jns
mov
repz
pop
test
adc
inc
or
add
add
push
shll
out
pop
pop
pushf
push
pop
push
jp
fcoms
add
add
out
inc
mov
add
xor
or
pop
sar
imul
cmp
pop
pop
aad
or
xchg
loop
sub
mull
sub
call
lahf
loope
mov
cmp
jmp
iret
jl
and
add
mov
push
and
call
add
and
push
sbb
shlb
push
mov
sub
pop
je
mov
insb
jnp
fxch
sub
cmc
sub
sbb
add
dec
orb
outsb
shl
cwtl
iret
es
cld
inc
mov
sbb
aad
pusha
das
and
inc
fisubl
inc
pop
add
mov
push
xchg
push
add
jb
inc
out
lahf
movsl
movsb
sub
adc
xor
and
aaa
push
dec
add
add
mov
mov
arpl
add
fistpll
mov
pop
js
stos
push
lcall
hlt
mov
loope
mov
add
add
lea
es
xorb
enter
push
aam
push
enter
xchg
mov
xor
adc
and
mov
xchg
xchg
adc
sbbb
cmpsb
rcrl
sbb
jne
mov
jb
aam
cmp
mov
sbb
arpl
or
cmc
and
push
stc
int3
int3
es
jge
mov
pop
mov
loope
std
dec
fwait
es
pop
and
popa
and
ss
jae
mov
in
jge
lock
in
pop
mov
in
out
adc
stos
andl
pop
in
or
sbb
push
ret
and
outsl
bound
mov
pop
jg
js
dec
gs
orb
or
dec
add
pop
ficompl
xor
xchg
xor
push
ficoml
ret
popa
xlat
loope
divb
inc
repz
outsl
mov
mov
add
bound
imul
xchg
and
push
add
add
add
movsl
and
insl
xchg
push
dec
movsl
inc
lret
xor
cld
lea
nop
sar
in
cld
outsl
out
mov
or
stos
mov
nop
divb
enter
jo,pn
jle
pusha
ret
sbb
pop
std
sarl
mov
mov
int
xchg
sahf
cmc
mov
rcl
popf
lret
jg
xor
arpl
jne
jbe
hlt
js
ss
test
outsl
jmp
xchg
addr16
pop
cmp
int
inc
and
push
mov
ja,pn
insl
pop
ret
push
ret
loop
pop
jecxz
xchg
test
lcall
xchg
adc
aaa
imul
sub
and
adc
xor
jns
and
jne
jmp
into
aam
cmp
cs
out
scas
or
pop
cmp
cmp
leave
mov
pop
jge
cmp
inc
aas
push
cltd
pushf
lock
fwait
jg
fiaddl
xchg
jae
fwait
cmp
stos
sarb
in
add
add
add
jae
xchg
jns
mov
dec
push
push
or
push
popa
cli
int3
dec
and
inc
adc
fildl
mov
movsl
call
test
imul
add
shll
pop
movsl
aas
stc
andl
imul
icebp
in
inc
mov
cld
es
loopne
gs
xor
mov
in
addr16
fsub
pop
xchg
les
mov
inc
fildl
inc
in
push
les
jbe
movsl
aad
icebp
dec
js
inc
enter
and
movsb
je
stos
call
push
sti
push
movl
dec
jge
xlat
xor
decb
pop
push
add
mov
int3
lods
mov
hlt
lods
iret
out
or
jnp
test
add
xor
mov
lock
inc
and
mov
test
lods
aaa
lret
pop
xor
add
out
fiadds
sub
inc
push
clc
mov
and
hlt
movsb
test
add
add
add
mov
inc
pusha
mov
sar
into
adc
adc
hlt
aad
jmpw
lcall
sbb
popf
and
in
pop
movsl
lcall
hlt
in
inc
lods
ds
adc
sub
mov
js
leave
push
xchg
loope
adc
subl
jno
popa
out
fsubrs
mov
sbb
je
sub
adc
inc
dec
jle
xor
mov
push
xor
add
jns
ds
repz
xor
pop
aad
insb
aad
inc
sub
mov
inc
popf
xchg
scas
repnz
cmp
jbe
sbb
mov
mov
adc
pop
jbe
mov
jbe
lahf
jecxz
sub
jl
lret
xchg
ss
out
hlt
cld
iret
and
xchg
daa
in
dec
xacquire
add
or
pop
xor
xor
call
jae
enter
add
scas
xchg
push
adc
out
mov
mov
and
add
add
repnz
ljmp
push
imulb
sbb
shl
xlat
pop
enter
lea
xchg
fsubrs
into
xor
in
sbb
adc
dec
cli
jno
mov
nop
adc
adc
cwtl
outsl
in
stos
lock
call
scas
cli
scas
jne
push
cmp
fdivrl
sbb
mov
and
jl
pop
dec
xor
sub
jb
jno
mov
outsl
outsb
push
js
add
lods
fs
push
mov
aam
in
rcr
ds
sub
lcall
lock
or
iret
ss
cmc
aas
xor
push
testl
stc
dec
pusha
mov
js
push
popa
push
cmp
lods
lods
scas
je
loopne
dec
and
insb
hlt
cmpsl
movsl
push
push
lret
ficoml
daa
icebp
mov
mov
push
add
inc
insb
mov
jnp
js
fnstenv
addr16
es
sub
xchg
aam
out
test
or
fdivs
or
lea
lock
add
add
add
dec
jl
xor
dec
jmp
push
insl
xabort
hlt
pusha
mov
or
insb
ljmp
nopl
mov
add
mov
loope
aaa
in
mov
fstps
dec
clc
mov
movsb
pop
and
cmp
pop
sub
int3
push
shlb
push
cmp
xor
popf
ss
xor
cmc
and
pushf
movsl
lods
les
in
pop
in
mov
js
shll
lahf
mov
pop
inc
frstor
out
push
inc
lods
xchg
jae
or
pop
rcll
xchg
pop
mov
int
mov
mov
or
pop
std
leave
lcall
stc
cmp
add
mov
xor
cmp
lods
lahf
ss
cs
mov
scas
and
pushf
jmp
inc
addr16
dec
mov
or
cs
mov
push
repnz
add
sub
es
add
cli
scas
movsl
jge
jecxz
add
add
mov
pusha
cmpsb
add
out
pop
add
add
add
mov
lods
repz
xor
cli
hlt
sbb
aad
xor
add
ret
les
adc
iret
aas
scas
jl
adc
lods
out
pop
les
fldenv
dec
mov
xchg
cld
daa
daa
out
xor
cmp
stos
scas
jp
push
jg
out
pop
mov
mov
jl
xchg
pop
cmp
cmpsb
pushl
lret
add
daa
cmpsl
push
sbb
lea
cld
ret
jns
or
sti
jg
lret
fildl
mov
rclb
divl
xlat
mov
fwait
sti
aad
xchg
mov
dec
jle
cmp
rsm
imul
faddl
hlt
cmp
loop
lahf
cs
sub
add
movsl
mov
in
mov
bound
outsb
xor
dec
or
xchg
andl
push
dec
mov
cmpsl
testb
insb
iret
sti
icebp
mov
fsubl
mov
ja
mov
pop
cwtl
push
clc
pop
add
add
add
test
xorl
sub
test
pusha
or
pop
cmpsb
clc
mov
loopne
cmpsl
shlb
push
scas
mov
and
mov
add
mov
cmpsb
sub
in
fdivr
cmpsb
orb
inc
dec
mov
mov
xchg
pop
ret
inc
add
sbb
pop
test
outsb
ret
jle
cs
inc
int
je
inc
sub
ret
sub
inc
mov
aaa
divl
mov
imul
repz
rol
jl
es
push
pop
dec
stos
jo
mov
cld
loope
int
push
fidivs
sarb
jl
xor
std
loope
cli
cmp
in
sarl
std
aaa
mov
xchg
cmpl
loop
ljmp
cltd
adc
mov
pop
pop
xor
pop
xor
xor
add
add
xor
xlat
out
cld
push
jl
sub
pop
add
add
add
mov
repz
ljmp
mov
jecxz
push
and
xchg
pop
inc
cs
add
addr16
fbstp
ljmp
les
daa
push
movsb
push
pop
imull
xchg
pop
mov
add
imul
xchg
push
sbb
cmc
cmpsb
or
bound
jb
xor
mov
xchg
mov
shlb
mov
mov
mov
inc
sub
pop
pop
shll
sbb
pop
ret
fists
xchg
pusha
idivl
xchg
movsl
imull
js
xchg
das
pop
lds
imulb
lods
lret
xor
add
in
arpl
xchg
int3
jecxz
stos
cmp
and
push
rorb
xor
mov
mov
iret
lcall
inc
cmc
mov
orb
mov
shr
out
daa
mov
mov
in
and
add
add
add
popa
sub
mov
rolb
xchg
jbe
mov
ror
push
imul
in
or
mov
jno
mov
lods
pop
add
es
inc
and
test
jmp
jo
in
arpl
sub
sahf
pop
aas
jb
mov
pop
mov
stc
push
sbb
adc
push
lds
cmp
lods
mov
shrb
mov
fisubl
add
stos
rol
mov
dec
add
sub
adc
sub
mov
jns
dec
fs
scas
inc
dec
sbb
fcmovnbe
pop
insb
aaa
mov
jg
sbb
das
ja
xor
xlat
add
popa
fs
je
push
adc
pop
shll
outsb
push
ds
mov
in
mov
adc
aas
and
out
and
popa
sbb
jg
mov
out
into
push
push
inc
lahf
mov
add
add
add
add
movsl
mov
adc
mov
icebp
xchg
loopne
jae
out
inc
popl
pushf
out
cmp
dec
aas
mov
rolb
stc
dec
out
out
fwait
ret
mov
aaa
popa
mov
adc
and
dec
cmp
out
dec
xchg
xor
enter
xchg
cmp
inc
iret
jae
inc
in
aam
out
stc
pop
fldl
ret
push
mov
stos
js
pop
mov
pop
and
movsb
lds
push
jmp
sbbl
stos
data16
lock
mov
hlt
add
aas
adc
sbb
xchg
insl
out
fcoms
mov
cltd
xor
leave
lds
hlt
cwtl
jbe
stos
xchg
xchg
push
jg
cmp
gs
xlat
pop
int
je
cli
add
fisttpl
add
and
addr16
push
mov
shlb
cmpsb
enter
mov
jp
push
jmp
jge
dec
fisubrs
add
fs
data16
loope
xor
cmp
xorl
add
add
xchg
inc
shl
xlat
mov
jg
or
or
add
add
ret
lds
lret
mov
in
pop
jne
loop
int
loope
mov
pop
es
out
push
es
movsb
add
das
pop
inc
enter
sub
stos
shr
pop
adc
xchg
push
clc
push
mov
nop
cmp
out
clc
fists
pop
insl
cmpl
push
cli
mov
inc
test
pop
in
out
cmp
or
xor
xor
outsb
mov
jg
fldenv
shll
lods
movsl
shll
sbb
and
dec
sbb
sub
aad
sub
lock
sbb
or
aad
ss
in
sub
call
lock
insb
dec
jnp
and
aas
xor
sub
ljmp
push
mov
add
sbb
popa
lods
jp
mov
push
jae
out
mov
mov
mov
out
mov
cmc
mov
and
fxch
mov
inc
fdivp
pop
mov
add
lahf
pop
cmpsl
jne
mov
add
add
add
mov
mov
std
xorb
add
cld
xor
pop
dec
mov
pop
insl
mov
xor
mov
pop
jne
rolb
pop
jecxz
icebp
cltd
int3
add
and
daa
or
dec
inc
sbb
mov
mov
jnp
adc
pop
movsb
dec
jmp
fnsave
lcall
dec
sbb
jmp
or
movsl
dec
xor
clc
pop
das
fmuls
push
shll
cltd
int
call
cmpsl
inc
les
stos
or
push
xorl
shrb
imul
sti
mov
jmp
lret
xor
add
test
ja
pushl
bound
into
shrb
adc
popa
fbld
movsb
mov
jns
mov
imul
movsb
fdivrp
xor
inc
xor
nop
jb
or
rol
scas
icebp
xor
ljmp
xor
pop
xor
sub
int3
pop
pop
out
mov
jb
adc
add
add
idiv
jg
sub
fcoml
add
add
add
out
and
push
mov
andb
pop
cmp
jne
sbb
insl
and
xchg
shld
int3
leave
orb
sub
stc
sahf
cmc
sti
cwtl
bound
test
or
push
cwtl
lods
mov
jbe
rcrb
je
loope
cmp
cltd
pop
xchg
dec
inc
and
ret
fsubr
jmp
clc
xchg
cli
fsubl
xchg
sti
jns
out
pop
mov
sbb
cltd
mov
div
daa
sbb
pop
jmp
push
iret
ss
push
icebp
jge
dec
fisttpll
push
or
test
push
xchg
jmp
sub
test
cmp
dec
jge
pop
shlb
mov
aad
jl
jmp
push
xchg
cmp
jbe
mov
dec
and
add
fstps
pop
cs
loope
int
into
gs
cmc
cli
scas
cwtl
fmull
mov
sub
fidivrs
mov
jmp
push
or
call
add
add
inc
pop
mov
fstps
cli
popa
adc
add
add
add
and
push
iret
outsb
test
and
mov
cmp
mov
mov
cmp
aam
jbe
mov
dec
lods
mov
insl
cmp
in
pop
je
cmp
les
or
in
push
jle
cmp
mov
cmp
loop
jb
mov
fndisi(8087
cltd
lods
xchg
cmc
in
push
mov
out
mov
add
xor
mov
xor
sub
lods
pop
sbb
mov
fdivl
and
push
cltd
ret
js
fwait
mov
mov
test
sbb
aaa
cld
mov
pop
movsb
lock
sar
cmc
pushf
jle
pushf
inc
pop
in
dec
mov
push
sub
dec
lds
jne
xchg
xchg
push
clc
loope
mov
imul
enter
dec
loop
clc
popa
dec
push
mov
and
mov
mov
ss
push
jge
test
sub
add
add
repnz
movsb
jle
arpl
and
sbb
add
add
sti
repz
ret
dec
out
mov
push
notb
xchg
sbb
sbb
clc
dec
fs
repnz
inc
jg
xchg
and
filds
sbb
cltd
push
and
adc
scas
push
bound
cmpsb
mov
mov
sbb
out
stc
xchg
pop
and
sub
imul
out
mov
aam
gs
leave
nop
mov
notb
adc
cmp
dec
je
arpl
repnz
insb
xor
ret
jns,pn
dec
fimull
mov
in
cmp
pop
cmp
flds
lods
dec
jle
aam
adc
out
inc
dec
stos
mov
sbbl
mov
xor
js
or
ficoms
mov
xchg
xor
pop
iret
sbb
add
in
test
shll
das
test
imul
xchg
aad
and
stos
jae,pt
push
cmp
cmp
ret
mov
repz
add
stos
sub
stos
out
jmp
sub
mov
xchg
sbb
add
add
add
push
xor
or
fnstenv
mov
rcll
mov
mov
ret
push
mov
scas
subl
repnz
sub
xor
int3
call
stos
sub
in
push
jo
jg
repnz
dec
fstps
sub
jns
mov
dec
or
pushf
adc
test
orl
mov
adc
mov
xor
loopne
in
jb
mov
xor
xchg
pop
iret
cmp
cs
je
cmc
xor
ret
orb
dec
iret
roll
jp
ja
iret
or
mov
stc
push
jns
adc
xor
sub
add
cld
in
arpl
les
loope
cmpsl
repnz
cli
aad
cwtl
les
mov
add
enter
stos
in
aaa
addr16
sub
shll
fcoml
popl
mov
in
jb
add
add
shll
fnstenv
scas
rorb
and
add
add
sbb
daa
mov
repz
insb
jo
xorl
pop
mov
aam
leave
cmp
mov
addb
sbb
bnd
movsb
add
mov
cli
cmp
movsb
test
xchg
into
dec
test
ja
jp
jns
push
ds
cmpsb
ret
pop
mov
enter
pop
sarb
push
sbb
sbb
xchg
outsl
push
jg
stos
mov
xor
fadd
or
int3
or
rcrb
jns
insl
out
cmpsl
mov
call
sbb
fdivrs
xchg
jl
xor
popa
lods
jne
popa
adc
inc
into
dec
clc
jns
inc
pop
imul
xorl
data16
mov
push
call
sub
pusha
add
pop
fcoml
es
fidivrl
inc
fimuls
cmp
fmul
mov
cld
je
jbe
jns
sbb
fs
adc
add
add
ret
popa
arpl
inc
inc
dec
test
mov
adc
xchg
jne
or
lret
enter
sahf
mull
push
push
loope
or
xchg
mov
sbb
aad
and
test
sbb
cli
push
adc
pop
jp
lods
jecxz
jl
sarb
inc
fstl
sbb
pop
popf
sub
js
xchg
cmp
notb
xchg
test
dec
pop
repnz
or
popa
lcall
xor
mov
inc
into
sbb
pop
lcall
rolb
in
cmp
les
jbe
outsb
push
sub
fcomi
leave
bound
jns
mov
fdivr
inc
int
mov
inc
es
add
sub
aad
test
test
or
sbb
lahf
inc
into
mov
lcall
dec
lahf
and
pusha
cmp
mov
push
cltd
jmp
fildl
or
add
add
add
popf
sbb
fstl
clc
mov
outsl
cmp
cld
jnp
outsl
addr16
aaa
mov
ret
aad
mov
inc
adc
push
sbb
jmp
sti
out
mov
stos
add
jbe
xor
push
sub
jl
jle
add
cmp
cwtl
push
scas
out
daa
sbb
sbb
cmpsb
pusha
aad
hlt
fildl
jne
inc
aas
mov
mov
push
push
jmp
or
loop
jge
jle
mov
jmp
push
add
mov
jg
lds
pop
jnp
mov
xor
pop
push
mov
mov
mov
jl
outsl
mov
ss
out
fwait
out
aam
sti
lret
stc
xor
lahf
ficomps
push
jp
sub
jns
adc
mov
out
cmp
mov
rcll
in
jmp
mov
mov
xchg
loopne
mov
fimull
outsb
ljmp
add
mov
mov
push
jg
dec
xchg
dec
add
jae
sub
add
add
add
ja
and
inc
je
mov
pop
stc
mov
sbb
inc
xchg
ja
cmp
fisttpl
mov
mov
cmc
xorl
or
outsb
xchg
dec
rcrl
adc
fsubrs
in
mov
or
daa
ss
je
add
idivb
mov
sub
loopne
lods
sbb
les
jno
jae
sbb
sub
adc
mov
mov
mov
sbb
pop
loopne
sub
out
xor
ds
jp
cmpsb
popf
pop
cmc
sbb
test
loop
mov
pop
push
xchg
pop
sbb
insl
hlt
je
in
push
outsb
adc
xchg
fbld
scas
fs
inc
adc
pop
fnstcw
xlat
add
xlat
cs
iret
and
mov
fs
ja
in
shlb
mov
jne
push
in
dec
cmp
add
add
mov
fucomip
push
insb
xor
or
dec
divb
imul
add
movsb
dec
xchg
dec
push
add
cltd
dec
push
add
dec
sbb
fs
adcb
jae
mov
rorl
adc
loop
vmovupd
inc
jne
std
jge
movsl
sub
imul
xchg
mov
les
testb
sub
out
imul
inc
sub
imul
sbb
sbb
gs
es
test
ss
cmpsl
and
stos
pusha
inc
sub
mov
jo
push
test
jmp
leave
outsb
sbb
cmp
xchg
push
mov
sub
shl
mov
xor
push
mov
int
xrelease
ds
xchg
mov
push
mov
into
pop
cmp
subl
xchg
add
repnz
inc
sarl
jns
jmp
mov
ret
enter
add
dec
out
iret
jmp
aas
in
push
add
add
add
add
das
jo
hlt
test
ja
adc
jge
stc
fcoml
ss
push
test
jg
add
outsl
adc
push
xor
mov
add
stc
jne
jecxz,pt
mov
sbb
mov
out
push
hlt
mov
aas
stc
in
outsb
pop
leave
test
push
fs
je
scas
mov
xchg
sbb
pop
inc
pop
testl
in
jno
mov
inc
mov
mov
push
mov
xchg
jecxz
roll
or
lret
fs
dec
push
out
xor
push
mov
mov
jg
mov
ja
decb
push
int3
sbb
lret
fwait
out
sub
je
dec
cmp
or
orb
inc
adc
in
in
es
and
mov
dec
pop
pop
pop
shrb
pop
cmc
and
mov
mov
std
inc
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
imul
add
add
fisubs
push
xor
jge
je
icebp
mov
and
xor
and
cmp
stos
dec
scas
mull
mov
cmpsl
push
push
sahf
loopne
cmp
add
xor
jbe
rcrb
xor
movsl
dec
bound
ret
nop
jo
test
es
cli
dec
div
inc
xchg
sub
push
iret
into
xchg
loopne
je
scas
loopne
jmp
adc
and
adc
cmp
mov
push
or
fsubp
sbb
ljmp
popf
mov
jb
test
dec
fildl
rcll
rcrl
nop
scas
insl
lods
rol
in
xor
addb
in
or
outsb
and
push
mov
pavgw
mov
add
adc
mov
fistpll
xor
frstor
inc
add
sub
adc
ret
mov
sub
lods
mov
mov
add
neg
std
sub
dec
stos
xchg
cmp
add
add
add
out
sbb
hlt
adc
fs
and
cmc
push
das
mov
aas
sbb
hlt
into
fs
jge
jge
roll
mov
cmp
adc
pop
arpl
xchg
loope
mov
jmp
nop
and
xor
std
mov
inc
push
outsb
xorb
mov
lret
jmp
aam
dec
cmp
cmp
mov
xchg
xlat
xchg
jb
sbb
pop
dec
daa
jmp
inc
sbb
xor
pop
sub
std
ss
adc
jne
cmp
ss
lds
jge
pusha
push
stos
push
loop
mov
xor
dec
push
shll
add
je
dec
mov
pop
aam
int3
repnz
jp
cmpsb
mov
mov
jmp
jle
pop
or
pop
push
add
xlat
mov
mov
mov
pop
pop
idivb
lea
mov
int
outsl
mov
push
subb
in
push
mov
and
lcall
add
add
push
es
pushf
test
jb
jmp
inc
loop
lock
loop
or
out
enter
mov
out
je
adc
mov
inc
mov
in
gs
xor
ficoms
mov
pand
adc
out
fucomip
sbb
xor
jo
push
dec
xor
jmp
and
testl
adc
mov
bound
ja
sbb
xor
pop
pop
cld
mov
xchg
xchg
pop
out
push
aam
icebp
inc
lods
scas
test
loop
loope
adc
inc
inc
and
fldt
add
outsl
ret
je
stos
outsb
je
push
mov
les
sti
dec
call
imul
add
fstps
inc
fldenv
jo
push
mov
jo
pushf
movsl
test
pop
push
push
fldt
or
and
aas
dec
xchg
mov
mov
lcall
out
sbb
rorl
add
add
adc
and
and
or
push
les
js
and
mov
stos
jno
inc
lret
mov
push
std
rcll
xchg
in
testb
lret
movsl
cmpsb
or
cmp
sub
sarb
push
sbb
add
popf
adc
push
jo
cwtl
xor
mov
cmpsb
xor
mov
sbb
pushf
and
xor
stos
movsl
inc
inc
jno
nop
test
and
push
dec
mov
pop
cmp
inc
push
and
dec
inc
fidivl
movsb
push
add
in
orl
lahf
ljmp
jne
inc
mov
hlt
and
add
and
gs
into
mov
aas
loope
repnz
dec
cld
enter
cmp
loop
fcomps
orb
mov
adc
daa
adc
jo
cltd
mov
fmull
call
mov
fmulp
js
test
in
scas
daa
sub
ja
mov
nop
dec
orb
add
add
adc
mov
inc
mov
mov
bound
push
push
arpl
jle
leave
mov
add
les
fucomip
mov
test
pop
std
das
ds
out
enter
lods
orb
cmp
sbb
std
add
dec
pop
icebp
pop
mov
dec
mov
loop
push
sub
sub
rol
add
in
inc
test
push
test
push
push
add
xchg
lret
add
fcomp
pop
imul
jge
cmp
enter
lahf
pop
outsl
sub
adc
daa
shrb
enter
dec
dec
andl
pop
jns
sbb
aaa
pusha
sub
std
xchg
and
push
mov
jbe
push
mov
repnz
stc
mov
jbe
repz
push
dec
and
xor
mov
clc
xchg
ljmp
int
iret
add
pop
clc
sbb
add
cmp
jnp
outsl
cmpsb
loopne
and
dec
jo
add
add
jb
mov
fdivr
push
mov
sti
data16
adc
dec
push
cmp
sub
or
adc
movsb
jb
add
sbb
jmp
adc
jge
dec
xor
mov
mov
es
insl
jae
adc
push
aas
movsl
sar
dec
mov
popa
cmp
mov
lcall
outsl
and
mov
push
nop
into
rcll
in
scas
sbb
aam
mov
aad
sbb
loope
lods
xchg
test
aad
in
es
jo
sbb
mov
or
mov
sub
rclb
mov
mov
dec
loopne
mov
dec
add
cmp
orb
les
mov
sub
dec
cwtl
adc
movsl
adc
sti
adc
js
push
rcr
into
add
fiadds
es
mov
outsb
xchg
push
mov
cli
xchg
jle
push
je
sbb
lahf
dec
push
jno
add
add
int
sbb
fsubrs
fistpl
push
push
ja
aad
xchg
cmp
arpl
cmpsl
cs
jp
mulb
push
inc
dec
or
pop
cmpsl
jne
adc
jmp
inc
dec
lock
pusha
pop
mov
adcl
adc
repnz
hlt
or
inc
push
cmpsl
call
dec
inc
dec
pop
bound
cld
sub
mov
je
mov
add
addb
bound
lcall
nop
adc
into
enter
xlat
pop
pop
push
dec
dec
mov
int
int
jb
dec
sbb
cmpsb
sub
lock
cmp
fwait
cmp
gs
pusha
int
dec
push
loopne
and
sub
movsb
jg
inc
mov
mov
add
inc
xchg
ficomps
pop
mov
lods
daa
pop
fnsave
xorb
push
jne
fcomi
test
roll
jo
fists
add
add
fwait
jnp
aad
sbb
xor
add
add
add
pop
out
mov
xchg
mov
cmpsl
bound
pop
out
mov
mov
mov
cmp
mov
repnz
xlat
fwait
sbb
out
mov
xchg
xchg
jbe
pushf
push
mov
cmp
cmp
ret
jbe
fcmovne
adc
test
in
dec
dec
loop
sub
popf
and
stc
scas
dec
inc
aad
out
jg
cmp
in
jo
pop
cmp
movsb
in
add
lahf
cmc
addr16
sti
mov
inc
imul
sub
shl
mov
or
pop
test
mov
loope
pop
mov
inc
lods
adc
clc
cmp
aaa
sub
push
mov
movsl
xor
movsb
jmp
inc
loope
out
push
adc
cmpsl
lods
out
jo
jge
enter
mov
rcr
sub
push
and
inc
adc
sar
jl
jne
loop
xor
test
pop
bound
xchg
roll
add
add
std
mov
sub
shrb
mov
add
add
subl
in
in
cli
negl
adc
pop
add
mov
pop
clc
dec
insb
sub
ret
sub
mov
mov
pusha
fimull
jl
cmp
std
ljmp
pop
or
out
in
ret
add
das
out
sahf
enter
aam
sbb
mov
roll
inc
jl
xor
and
scas
pop
inc
stc
ljmp
adc
push
fldt
lahf
sbbb
adc
pop
inc
ror
shll
rorb
xor
outsl
sbb
es
repz
inc
aam
arpl
inc
push
jmp
shl
loope
mov
fs
push
xchg
ljmp
movsb
loopne
cmp
mov
call
xchg
fisttpl
lods
inc
mov
int3
daa
mov
jl
aad
and
out
aad
add
jne
das
and
subl
adcl
xchg
fisttps
mov
or
pop
je
add
add
xchg
and
dec
call
mov
adc
call
cmp
xchg
mov
lods
out
pop
cmp
adc
fldl
ret
mov
insb
fidivrl
and
mov
dec
sbb
andl
mov
mov
lcall
loope
mov
pop
sbb
icebp
cli
pop
sub
les
push
je
push
je
out
out
cmpl
popf
sbb
add
ss
sub
cmpsb
mov
cmc
jmp
xchg
pop
mov
jecxz
mov
and
push
out
repnz
inc
popa
test
lods
mov
fiaddl
je
inc
aaa
jo
pusha
gs
jns
scas
or
adc
insb
dec
fcom
push
xor
insb
add
jo
subl
arpl
out
inc
repnz
pop
pop
jbe
js
stos
inc
popa
pop
leave
aas
cmp
fcoml
dec
mov
inc
in
mov
mov
out
sub
sbb
jne
add
add
imul
sbb
ret
aad
push
aaa
and
in
push
bound
push
ja
mov
das
stc
outsb
roll
movsb
lea
shll
inc
or
pop
shrb
clc
push
stc
imul
sbb
lods
sub
out
mov
pop
sbbl
mov
pop
mov
adc
pop
popl
sub
or
arpl
mov
add
movsl
stc
sub
cmpl
fcompl
cld
lds
xor
loop
jmp
add
sub
es
push
das
inc
add
sbb
daa
incl
loopne
xchg
pop
fs
enter
adc
das
repnz
popa
movsl
mov
or
xor
sahf
pop
sahf
jge
lret
scas
mov
inc
inc
mov
lret
repnz
les
add
add
divl
in
sub
fs
add
add
pop
mov
ret
orb
iret
icebp
adc
aad
push
ljmp
cmovno
out
sub
loope
sbb
pop
xor
ss
test
insl
inc
imulb
pop
add
dec
ds
imul
popf
std
jbe
enter
data16
outsb
nop
lret
adcl
lods
mov
push
lods
cmp
xor
xor
xchg
movb
inc
add
jne
jbe
ja
test
neg
or
mov
ret
sbb
sarl
addl
jns
and
je
sbb
pop
sub
movsb
arpl
cmp
and
mov
and
mov
jge
mov
xor
cmp
adc
mov
cmp
sbb
add
sub
mov
test
sub
fnsave
add
fisubs
mov
mov
jp
push
add
add
pushf
dec
push
xchg
sub
or
push
jecxz
fisttps
pop
fidivl
inc
test
stos
xchg
push
arpl
jbe
or
add
pop
cmc
pop
mul
arpl
jo
je
add
jne
cld
sub
jne
lock
push
pop
jecxz
mov
dec
add
add
loope
mov
sub
out
es
mov
fcomi
mov
mov
cmp
pop
outsl
sub
xor
aam
inc
dec
dec
cmc
inc
into
inc
xchg
sahf
cld
cmpsb
inc
xor
push
or
stc
dec
addb
iret
mov
cmc
mov
outsl
loop
adc
popf
clc
cld
lahf
push
jge
pop
adc
int3
ljmp
out
xchg
xor
divl
mov
ficompl
dec
mov
pushf
decb
imul
cmpsl
lods
data16
jbe
push
jecxz
and
add
add
mov
outsl
jne
ljmp
call
add
add
add
cmp
sbbl
jle
cmc
dec
mov
pusha
xor
inc
rcrl
lods
jno
lahf
dec
push
push
shrb
mov
mov
jbe
mov
test
mov
dec
fsubl
pusha
stos
repnz
mov
aam
out
rorb
mov
adc
outsb
scas
dec
push
shlb
mov
jg
repnz
adc
imul
addr16
and
pop
jae
int
sub
mov
adc
push
data16
jnp
jp
std
frstor
into
xchg
lds
jo
push
in
std
sub
jmp
lea
cmpsl
inc
mov
repz
sub
adc
sub
fstpt
std
movsl
les
test
pushf
into
pusha
or
xchg
es
sahf
mov
adc
sub
insb
out
and
cwtl
mov
fldl
add
add
testl
xor
add
add
add
test
jae
mov
xor
subl
xchg
add
mov
andb
je
pushf
ljmp
add
push
lods
adc
push
stos
add
mov
jp
iret
xchg
xchg
cmp
filds
cmp
fsubs
outsb
fistps
dec
lea
or
lea
sbb
mov
inc
out
pop
es
adcb
lods
sbb
xor
lds
stos
inc
dec
test
fxch
xor
add
dec
nop
xor
cli
jnp
sbb
rcr
push
sbb
repz
std
cmp
icebp
push
aad
xchg
mov
test
fdivs
fst
mov
movaps
pushf
negl
xchg
imul
adc
dec
push
lret
test
test
mov
divl
push
ss
int3
aaa
aad
or
or
jne
mov
add
jo
ja
std
stos
sbb
ljmp
add
add
add
getsec
fistpl
mov
int3
mov
lret
cmc
dec
les
shll
and
pop
and
jo
movsb
xor
aam
shlb
push
inc
xor
adc
xor
ldmxcsr
pop
scas
sti
push
dec
sbb
rcr
sub
popf
out
movsb
lret
sahf
or
std
or
insb
mov
into
jo
insl
test
cmp
lods
adc
call
sub
repz
mov
hlt
push
cmp
out
and
push
nop
pop
xchg
and
push
mov
mov
insl
sub
stos
movsl
gs
add
sbb
sti
pop
dec
mov
sbb
div
inc
mov
push
and
fldenv
les
cpuid
add
es
sbb
jg
out
dec
fdivl
pop
cmp
adc
and
js
pop
mov
cmpsb
push
sbb
xor
jnp
add
add
jae
xchg
stos
test
jecxz
dec
mov
and
sbb
mov
aad
movsl
int
xor
repz
sub
jnp
aam
mov
pop
pop
out
xchg
push
das
in
testb
xor
cwtl
and
inc
fbstp
hlt
xchg
jae
shlb
ja
fistl
bound
rolb
add
push
enter
cli
ficompl
inc
out
mov
or
shrb
jmp
shlb
nopl
mov
and
push
imul
mov
dec
imul
pop
add
fbld
shll
sbb
xchg
mov
or
rclb
mov
push
mov
imul
sub
pop
lret
add
shrl
push
dec
jns
sti
adc
pop
dec
cltd
imul
add
cmp
cli
mov
aad
popf
adc
add
add
or
rcll
popf
jo
xlat
or
sbb
push
les
jle
and
push
popa
lahf
push
insb
lret
imul
and
mov
pushf
rorb
jbe
shrb
sub
push
bound
mov
dec
mov
inc
test
mov
dec
ret
and
mov
sbb
sti
mov
or
xor
cmpl
lret
xor
in
adcb
loop
shl
les
aad
mov
adc
js
cmp
mov
es
mov
lds
cwtl
inc
and
aam
lea
pop
xor
cwtl
lahf
icebp
sbb
sbb
cli
aam
mov
repnz
imul
addr16
int
inc
int
xorl
das
imul
cli
mov
lret
add
sub
aad
lcall
add
test
lcall
adcb
jge
add
add
popf
into
jbe
call
sub
mov
mov
mov
aaa
cld
bound
or
add
cmp
or
insl
addb
inc
aam
scas
xor
sbb
adc
cmpb
neg
or
stos
push
mov
imul
clc
data16
out
pop
pushf
mov
test
roll
dec
lds
mov
fs
sahf
add
sub
pop
mov
sub
jge
mov
fwait
sbb
iret
xchg
int3
stos
std
push
jb
jno
push
cwtl
jmp
out
fsts
aad
jmp
push
leave
outsb
mov
imul
pop
and
pop
mov
aad
mov
pop
or
xchg
or
inc
xlat
xor
inc
dec
xor
popf
jbe
es
push
int
mov
sub
cltd
into
add
mov
arpl
negl
add
add
xchg
xchg
jns
jmp
mov
data16
add
add
jbe
cmp
daa
out
mov
stos
pop
adc
clc
daa
movsl
sub
decl
std
xlat
jne
sbb
add
mov
add
lret
xchg
ret
enter
fiadds
jp
out
and
cltd
xchg
sub
mov
ds
jae
inc
jb
jmp
pop
add
arpl
xor
jo
enter
mov
mul
or
push
xchg
gs
fiaddl
ljmp
and
xchg
adc
mov
gs
mov
rsqrtps
xchg
sub
cmp
and
and
dec
js
pop
push
mov
pusha
sub
push
xchg
popa
in
xor
adc
rclb
push
mov
dec
icebp
mov
dec
xor
ret
sbb
push
and
out
out
out
xchg
cld
xor
dec
jo
cld
jne
loope
rclb
scas
and
add
add
scas
lcall
adc
sbb
movsl
add
add
add
pop
shrb
jge
mov
inc
xor
sahf
mov
inc
and
rcl
cmp
js
push
fsubl
inc
loopne
cltd
shlb
fmuls
add
xchg
mov
cs
mov
test
push
adc
inc
cmp
mov
insb
pop
or
jmp
cs
jo
arpl
and
mov
mov
mov
mov
int
xchg
rcl
idivb
dec
push
inc
xor
subl
push
mov
stos
loop
andl
cmp
sub
mov
clc
stos
dec
test
in
jle
dec
out
sub
add
leave
xchg
cmp
sbb
insl
xlat
lods
iret
inc
adc
jle
dec
xchg
ljmp
mov
lcall
add
pusha
jmp
push
loop
ljmp
dec
pop
fisubs
cmp
les
cmp
jl
cs
idiv
jne
iret
mov
addb
add
add
popa
aaa
lcall
mov
outsb
or
dec
je
jno
mov
or
movsb
mov
mov
mov
inc
xor
jl
cmpsb
fadd
mov
xchg
repnz
int
xchg
or
test
imulb
out
pushf
jb
xlat
xor
js
mov
scas
or
push
out
push
inc
mov
pushf
lahf
stc
push
mov
out
pop
inc
or
jmp
add
sti
ret
and
mov
andl
mov
mov
or
sahf
int
adc
imul
or
pop
fisttps
mov
aad
push
xchg
loop
fnstsw
pop
cli
or
lods
cmpsl
int3
adc
push
out
repnz
inc
sbb
mov
mov
lret
xchg
adc
int3
sbb
jne
jge
adc
sbb
mov
mov
xchg
pushl
sub
add
addl
add
fisubl
xor
les
sub
and
cmp
push
jl
lods
mov
ljmp
out
push
das
xchg
loop
pushf
xchg
testl
stos
mov
in
aam
add
hlt
aas
xorl
test
jns
xchg
mov
into
jae
stos
ss
fs
mov
bound
mov
pop
jno
adcl
push
aam
in
xchg
mov
mov
loope
or
xor
mov
test
jo
xchg
sbb
push
sti
out
mov
mov
int3
popa
push
pop
out
and
or
mov
fnstcw
jns
sub
mov
and
inc
fidivl
shl
inc
cltd
push
sub
out
js
pop
outsb
xchg
insb
xchg
stc
push
sub
icebp
fisubrs
call
int3
mov
push
mov
jge
inc
mov
insl
or
push
push
js
add
add
sti
iret
ss
push
jno
pop
mov
xchg
addb
add
add
push
pop
sar
sub
push
push
adc
xchg
cmp
into
clc
inc
mov
fdivs
mov
out
pop
push
data16
xchg
ds
jb
nop
dec
out
hlt
push
xor
pop
ss
rcrb
ret
loop
or
adc
xchg
dec
pop
call
mov
sbb
loop
cmp
sti
int3
or
imul
adcl
fstl
lcall
loop
xchg
in
out
push
sub
movsl
es
pop
cmpsb
mov
fistpll
adc
daa
push
fnstenv
dec
sbb
push
adc
sub
mov
xor
decb
lret
popa
dec
test
fwait
push
add
leave
sbb
xchg
hlt
inc
ljmp
sub
clc
leave
shr
inc
lret
ret
xchg
adc
mov
subb
or
data16
mov
push
push
dec
jno
fidivl
add
jnp
push
out
add
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
jae
pop
cwtl
addl
add
add
jecxz
mov
and
lods
aas
scas
mov
cmp
sub
inc
jno
sub
and
leave
fnstenv
loope
out
call
pop
or
test
cmc
jb
dec
insb
fucomip
mov
jg
or
mov
adc
cmc
mov
cmp
std
in
push
rclb
xor
notb
mov
roll
clc
sub
popa
pop
adc
mov
cmp
rcrb
outsl
nop
sbb
pop
xchg
divl
aaa
into
pop
xor
mov
into
pop
push
mov
lods
data16
push
xchg
mov
into
loopne
mov
jns
int
or
jp
stos
mov
fsubrs
push
push
xor
pop
dec
outsb
push
aas
mov
cmc
jg
inc
jbe
bound
fcomps
pop
mov
xor
sbb
add
mov
mov
mov
test
add
add
and
das
popa
call
aam
ret
jo
cmpsb
sub
push
pop
sbb
pop
dec
jecxz
dec
popa
adc
std
insl
loop
mov
inc
or
es
mov
ret
imul
popf
mov
adc
clc
cmpsb
jl
push
jae
xchg
pop
mov
jns
cmp
movsb
xchg
test
mov
inc
lock
stos
mov
jns
shl
dec
and
loop
mov
jle
dec
test
push
loop
push
fsubr
nop
cmp
ret
pop
mov
in
jl
xchg
push
xchg
cld
xchg
jmp
clc
cmp
adc
loope
mov
cmc
pop
pop
das
cltd
sub
lods
pop
cltd
jl
xchg
push
daa
mov
rorl
hlt
out
inc
mov
mov
or
int3
mov
inc
addr16
inc
jns
cmp
pop
mov
imul
pop
mov
mov
and
push
pop
fistps
cmpsb
or
push
cmpsl
and
out
ljmp
lock
xchg
fbstp
add
add
add
or
sub
hlt
adc
iret
outsl
dec
jg
jo
lret
test
mov
mov
push
test
in
lret
push
repnz
xor
add
add
cmc
lods
xlat
movsb
inc
inc
push
lcall
sbb
push
jmp
int3
dec
push
xor
fsubrs
mov
lret
pop
lahf
cmc
sub
jmp
cmc
lret
stc
pop
pushf
inc
and
add
jne
in
mov
mov
fs
addr16
insl
inc
orl
xchg
test
nop
jnp
inc
jge
sarl
dec
mov
push
hlt
xchg
dec
loopne
cli
or
mov
addr16
lock
outsb
inc
call
add
and
leave
push
scas
mov
mov
or
lods
mov
int3
sub
out
inc
mov
xchg
fiadds
cltd
xor
inc
int3
je
pusha
or
add
loopne
loopne
push
mov
stos
imul
inc
jbe
imul
push
jnp
sbb
push
xor
mov
lock
xchg
add
add
cmp
and
pop
or
out
cbtw
jnp
ds
mov
and
or
dec
repnz
adc
dec
js
inc
pop
push
mov
sub
or
subb
ret
cmp
jns
push
aas
mov
jno
push
xlat
jp
mov
sbb
fwait
inc
pop
dec
mov
incl
xchg
nop
fidivs
popf
xlat
push
les
jle
or
outsb
mov
inc
push
popa
pop
cmp
bound
push
in
sbb
cs
dec
add
sbb
popa
or
imul
push
pop
xor
movb
inc
mov
fisubs
sub
js
fmul
dec
ljmp
iret
jp
mov
fildl
mov
sbb
outsl
cmp
jb
mov
pop
ss
stos
xchg
in
sahf
sub
jecxz
adc
icebp
popf
mov
sub
leave
push
push
aas
or
mov
movsb
pop
lods
test
add
add
add
push
stc
aaa
hlt
ja
push
les
add
dec
shrl
push
je
aaa
add
adc
adc
adc
ficompl
dec
jae
xchg
inc
sti
lret
js
popa
cmp
addr16
call
inc
mov
mov
bnd
lods
pushf
and
out
mov
aas
mov
sbb
movsb
testl
shrl
imulb
test
dec
add
orl
imul
je
add
out
push
in
loope
jl
pop
xchg
push
stos
cmp
cmp
leave
enter
lahf
mov
xchg
xchg
sbb
leave
int
add
sub
xchg
mov
movsb
sarl
es
cltd
xor
dec
stc
mov
sbb
lds
jno
outsb
pop
test
dec
lret
ja
movsb
mov
inc
add
xchg
pop
pushf
mov
xor
mov
test
mov
ljmp
insb
fidivl
bound
mov
add
add
lods
jno
repnz
xchg
xchg
movsb
pop
mov
jl
mov
repz
or
rcrb
mov
out
inc
and
jns
cmp
sar
inc
push
jae
push
jmp
outsl
arpl
aad
movsl
and
fwait
jo
cltd
xchg
repz
in
mov
adcl
add
aaa
push
cmpsb
mov
dec
dec
fadd
rcrb
ljmp
jns
rcrb
imul
in
xchg
jae
jp
mov
jmp
push
loop
dec
jle,pt
mov
iret
leave
cmp
cmc
sbb
es
mov
lahf
mov
jge
jmp
mov
js
gs
iret
cmc
sarb
rcll
cmp
movsl
ret
out
inc
mov
lock
fwait
ljmp
fldl
jne
xor
daa
shll
daa
mov
test
clc
xor
loopne
add
add
mov
jns
shlb
mov
add
add
add
sbb
cwtl
inc
sub
in
mov
dec
jge
loope
cld
xor
fdivrl
stos
insl
addb
sahf
data16
outsl
and
movhps
pop
mov
insb
movsb
ret
daa
cmpsl
cwtl
ret
insb
or
dec
outsb
rcrl
dec
stos
imul
mov
mov
pop
pop
imul
sub
mov
add
sbb
fidivrs
lahf
mov
jmp
mov
incl
shll
mov
insb
mov
daa
jnp
mov
inc
jnp
sbb
sarb
loopne
leave
ljmp
ljmp
jl
dec
cli
lret
fsub
ffree
xchg
fstpt
outsl
shll
movsb
cli
jge
pop
enter
mov
cmpsl
mov
test
jl
shlb
xchg
fildll
out
cmp
mov
adc
mov
dec
je
inc
inc
push
and
std
fldt
les
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
dec
mov
add
add
add
sarl
inc
xchg
sbb
mov
inc
ja
sub
jecxz
lock
shl
xchg
fimull
mov
pop
cmp
out
lcall
jne
xchg
bound
hlt
jbe
dec
and
in
sbbl
dec
cld
cmp
gs
inc
shl
inc
push
test
sub
int
lock
sub
xor
popl
dec
sbb
add
clc
xchg
adc
pop
push
test
push
dec
jp
outsb
add
stos
les
xchg
sub
xor
add
jns
daa
cli
ds
imul
mov
sbb
dec
add
out
sti
fxch
dec
pop
xor
sbb
mov
mov
add
ss
cwtl
jae
aad
sub
in
sub
jbe
in
sub
lret
fstpl
pop
jnp
adc
mov
loopne
cmp
aas
add
pop
mov
int3
ss
push
incb
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
pop
mov
mov
pop
outsl
push
lea
fmul
shlb
lds
dec
ljmp
aaa
xchg
push
pusha
imul
or
or
sysexit
mov
xchg
jbe
leave
shlb
jne
int
ret
scas
sub
jmp
sbb
inc
fists
xchg
inc
ret
fadd
fistpll
sbb
adc
pop
lock
push
xlat
xor
ficoms
dec
adc
add
adc
popa
out
jnp
mov
jno
push
cltd
sbb
push
xor
andl
aaa
mov
dec
mov
test
mov
cmpsl
cmp
add
subl
mov
inc
adc
cmpsl
jmp
js
and
sbb
test
fsubs
sub
or
out
clc
and
or
mov
sub
lahf
jae
adc
lods
les
jnp
mov
icebp
nop
push
add
add
add
incb
push
pop
xchg
adc
mov
stos
popf
rorl
scas
lret
xchg
mov
jnp
xor
movsl
cld
in
jbe
and
sahf
xor
imul
movsl
shlb
dec
sbb
adc
scas
mov
lock
or
xlat
sbb
xchg
jne
dec
unpckhps
movsl
jl
mov
and
int
mov
fidivrl
iret
xor
and
fdivp
jb
fisubrs
nop
jle
mov
pushf
shrl
jl
idivb
hlt
data16
filds
xor
lea
clc
mov
xlat
scas
int
scas
jl
or
js
scas
in
or
jl
repnz
es
movsl
and
dec
lods
mov
mov
push
cld
push
leave
mov
daa
adc
cmpsl
rorb
scas
mov
xor
add
or
fwait
ss
inc
inc
or
test
fcomps
add
cmp
rorb
add
mov
xchg
ret
sub
cmc
add
jecxz
cmp
es
movsb
ja
addl
push
mov
pop
inc
repz
adc
push
pop
sbb
and
pop
add
sbb
mov
inc
push
cmpsb
dec
gs
mov
adc
cmp
push
into
fiadds
es
jecxz
xor
xchg
sarb
fwait
comiss
push
aas
loop
arpl
lcall
sbb
outsl
jecxz
pop
cmpb
cmp
push
sub
rorl
std
addr16
jns
sbb
lret
add
aas
lret
mov
and
mov
insb
xchg
addr16
pop
jge
xor
pop
adc
ror
mov
push
aaa
mov
inc
popa
std
test
sti
iret
pop
shlb
mov
adc
and
jns
std
repnz
imul
jno
sbb
std
push
in
xor
cmpsb
les
add
add
ljmp
dec
mov
sub
add
add
sbb
es
imul
test
add
test
jg
test
dec
lock
fmull
dec
jb
add
xchg
sbb
mov
pusha
xor
add
jae
aad
cwtl
shl
mov
rcll
add
and
aaa
repnz
xorb
dec
loop
push
je
mov
jp
mov
dec
shrl
inc
mov
imul
cltd
fcomp
ret
and
sub
movsb
cwtl
xchg
mov
fidivl
nop
mov
lret
sub
sub
cmpsb
mov
xchg
jp
and
inc
stos
add
xor
cmp
loop
pop
cmpsl
dec
out
mov
or
in
ja
in
cmc
lret
lcall
pop
scas
xchg
or
and
push
fidivs
jmp
add
aam
mov
add
add
aaa
shlb
cmc
div
testl
jg
popl
add
add
xor
rcll
imul
xor
mov
jb
pusha
call
fs
out
mov
int3
add
xor
insb
in
cmp
mov
shll
cld
jmp
pop
xlat
mov
adc
std
and
test
adc
sub
dec
popa
insb
shl
call
cmpl
or
xor
xchg
ljmp
adc
jp
inc
mov
into
rclb
mov
pop
inc
lahf
mov
in
or
mov
scas
cmp
inc
mov
jnp
popf
shlb
mov
dec
fs
inc
stos
xchg
fimuls
mov
sub
sub
insl
pushf
repz
lds
push
fsubrl
fidivs
enter
leave
xchg
divb
je
sub
mov
outsl
adc
shlb
xor
mov
pop
push
nop
push
sahf
rcr
pop
adcb
pop
mov
add
add
add
xchg
into
inc
add
xchg
bound
mov
and
cmp
add
cmp
xor
je
fistps
lods
fmull
das
addr16
insb
xor
mov
xor
xchg
and
pop
xor
push
jmp
inc
xchg
cmc
mov
lahf
lods
add
imul
mov
es
frstor
out
adc
es
outsb
mov
pusha
xchg
cmp
repnz
in
ss
jmp
sbbl
sbb
ja
sbb
clc
pop
push
sub
jg
stos
loope
sbb
movsb
fildl
fisubrs
in
sbb
inc
lds
xchg
add
and
dec
xor
dec
inc
push
in
mov
dec
cmpsb
fstpt
mov
xchg
imul
lods
outsb
jb
adc
mov
pop
call
jae
stos
gs
cld
lds
stos
push
push
fs
add
add
shll
cmpsb
jcxz
fimull
rclb
add
fistpl
xor
sbb
mov
jmp
dec
lcall
ss
fdivrl
cmp
mov
nop
rolb
push
add
xchg
push
mov
xchg
add
aam
imulb
cmp
sbb
pushf
cmp
movsl
push
dec
sub
cwtl
std
subl
mov
add
out
mov
add
enter
sbb
push
sub
mov
lods
sbb
pusha
imul
scas
push
xor
jmp
repz
mov
into
lret
movsl
xor
fsubr
pop
das
icebp
ja
outsb
fbstp
lret
sbb
cmp
imul
in
jge
push
add
and
ja
int3
in
mov
lds
add
jae
ss
repz
into
push
outsl
das
xor
stos
push
cmp
jnp
ret
mov
sbb
pop
pop
shll
fildl
add
add
clc
jnp
jg
in
cli
enter
test
xchg
add
add
add
mov
roll
cmp
stos
fsubrl
out
inc
mov
in
daa
sbb
test
push
jbe
test
sahf
int
lea
fcoml
pop
push
fdivl
mov
sbb
in
pusha
repnz
das
dec
mov
rorl
pop
sub
sbb
fimuls
movsl
pop
mov
xchg
ret
sbb
scas
push
push
enter
mov
xchg
pop
jae
xchg
ja
xor
std
fwait
ljmp
imul
fstl
dec
repnz
xchg
iret
decl
in
fsubl
mov
test
or
inc
lock
mov
add
fsub
int
das
pop
bound
cmp
xor
je
xchg
cltd
addr16
dec
fstl
insb
shrl
mov
sub
add
ret
xor
lret
pop
mov
sub
daa
sbb
push
xchg
dec
shrb
or
ljmp
cld
gs
mov
fcoms
add
pop
subl
xchg
incl
aam
sub
pop
pusha
mov
mov
and
push
dec
and
ja
cmp
cmpsb
cmp
out
add
out
inc
loopne
rcrl
movsl
out
cld
mov
insl
test
mov
test
jbe
xchg
rcll
mov
scas
xchg
mov
bound
fwait
sub
and
push
inc
fcmovbe
insb
stos
pusha
arpl
inc
mov
ljmp
or
cld
arpl
rcll
aas
xor
fldcw
mov
fs
adc
fstpt
mov
mov
test
stos
repnz
stos
dec
inc
loop
xchg
in
pop
jmp
idivb
and
mov
out
mov
inc
or
fisubrl
lret
inc
ds
pusha
jmp
clc
and
dec
pop
jmp
add
add
jl
sar
std
jle
pop
popf
scas
cld
sbb
add
add
push
pusha
rcll
aam
cli
cmp
jmp
mov
mov
popf
push
cltd
xor
in
push
push
jecxz
std
jb
pop
mov
push
mov
shrb
movsb
cmc
fisttpll
inc
push
outsb
test
test
push
lods
sahf
aam
aas
arpl
popa
jb
jmp
add
nop
enter
nop
jmp
cmp
mov
jmp
mov
pop
scas
in
outsb
leave
pop
lods
and
stc
jle
push
clc
pop
sbb
push
xchg
jo
in
or
sti
or
out
mov
and
cmp
sti
xchg
div
js
outsb
test
enter
enter
sub
xor
jl
mov
hlt
popf
lcall
push
fsubl
jns
jl
jg
daa
or
ljmp
sub
mov
fs
aas
xor
dec
mov
adc
aas
mov
xchg
lock
nopl
sbb
out
lock
add
cmp
cmp
in
cli
xlat
sahf
leave
loopne
add
add
add
nop
push
jbe
cmp
scas
pop
xor
cwtl
imull
mov
fisubs
insl
cli
test
shlb
push
mov
adc
jecxz
rcll
cmp
cli
jge
lret
jmp
or
push
mov
mov
mov
in
mov
and
scas
jbe
adc
mov
gs
dec
inc
add
sbb
es
push
jns
inc
lahf
jns
stc
mov
jno
mov
pusha
pop
ja
mov
popa
cmp
aaa
cmpsb
pop
lds
test
ret
les
mov
pop
inc
lods
aas
or
sbb
push
jmp
sub
cwtl
out
repz
push
sub
insl
sbb
cmc
xchg
mov
sbb
fcmovne
mov
mov
stos
inc
add
loope
icebp
or
in
cmp
pop
stc
lcall
pop
cwtl
jnp
shll
add
fwait
and
popa
mov
xorl
in
add
add
add
mov
cld
push
jp
movsl
inc
xchg
sub
jmp
xchg
out
cmp
push
test
ds
clc
push
or
or
fwait
or
cmpsb
and
cmp
or
dec
pop
fstps
icebp
and
test
lcall
mov
ret
orb
test
mov
pop
repz
fwait
xlat
and
push
hlt
add
xor
hlt
inc
xchg
test
adc
sarl
lods
sub
jge
mov
adc
aas
popa
xor
or
inc
imul
cwtl
shl
xchg
ds
mov
push
es
js
cmp
outsl
jp
adc
dec
lock
mov
sub
lock
dec
aas
das
fstpt
inc
jb
rcll
pop
xor
call
pushf
mov
jno
lods
xor
aaa
mov
or
int
repnz
and
push
and
xlat
aas
dec
sbb
or
call
add
add
not
daa
jle
mov
hlt
mov
fisttpll
mov
pop
cmp
lods
out
mov
inc
ss
addl
sub
inc
cmp
push
adc
cmp
ret
push
into
test
mov
fistl
adc
jne
adc
dec
aad
fwait
push
lret
in
cltd
pusha
test
mov
inc
inc
test
sub
mov
lea
jecxz
mov
mov
cmp
pop
popf
js
pop
push
fnsave
mov
mov
jnp
xor
fwait
ds
inc
repnz
push
out
call
movsb
push
in
fidivrs
imul
sub
pop
fcmovnb
je
insb
dec
inc
test
arpl
rorl
add
stos
out
mov
pushl
xchg
mov
dec
mov
xchg
lret
imul
outsl
vmwrite
jl
cwtl
add
add
add
int
pop
insl
and
icebp
jl
ret
std
pop
daa
test
fisttps
loopne
cmp
mov
xor
xchg
fdivl
andb
imul
popl
out
dec
inc
adc
nop
in
js
pop
lea
inc
leave
leave
addr16
cmp
in
and
push
mov
inc
imul
ja
loop
ror
sbb
andl
jbe
arpl
or
cmp
aam
mov
and
sbb
out
out
insb
stc
out
fdivrs
ret
jge
adc
nop
xchg
jle
jno
push
push
mov
repz
fstpt
out
sub
xchg
push
int3
bound
xor
xlat
ss
inc
ficoms
add
fistpl
ret
mov
lods
xchg
push
jp
add
in
movl
add
add
lret
sbbl
popl
mov
add
add
daa
inc
xor
addr16
or
and
out
insl
xchg
mov
and
inc
in
and
push
push
ror
sti
out
xchg
sbb
in
clc
jnp
in
jl
dec
xor
sub
mov
dec
push
test
nopl
cmpsb
cmc
cwtl
das
daa
cli
out
es
test
pop
and
or
and
and
xchg
cmp
cltd
xchg
or
sub
shrl
pusha
mov
push
jns
cmc
stos
cmp
adc
jmp
sub
jl
xor
mov
scas
call
lea
cmp
or
xor
or
lock
mov
jg
push
std
push
adc
enter
das
mov
inc
push
add
xchg
dec
lahf
testl
push
ret
inc
or
repnz
mov
add
gs
flds
mov
imul
movsb
and
xchg
push
hlt
lcall
push
aaa
xor
mov
and
mov
mov
mov
or
and
lcall
das
push
pop
out
mov
adcl
lds
jo
jbe
push
pop
lds
mov
xor
sbbl
cmp
inc
mov
scas
or
mov
inc
es
pop
or
jae
std
scas
lcall
mov
sub
mov
mov
pushf
mov
in
lock
shl
ja
lock
xor
add
push
nop
rclb
push
xchg
outsl
adc
shrl
ljmp
push
xor
push
pop
bound
in
jbe
xor
jg
mov
popf
inc
lock
jbe
mov
jns
adc
sbb
sub
outsb
cmc
movsl
jge
pop
inc
mov
out
loope
data16
push
in
mov
jge
jg
ljmp
in
lahf
mov
push
clc
fwait
add
add
add
popa
popa
mov
mov
test
xchg
daa
xor
xchg
xorb
mov
daa
sub
pop
or
inc
mov
xor
push
and
and
push
outsb
clc
mov
stos
stos
aas
mov
daa
aaa
fstpl
mov
jb
mov
push
and
pop
stos
movsb
orl
fstl
add
divb
gs
repz
add
enter
push
mov
popa
add
cmp
push
repnz
pushf
xor
js
loop
movsb
aad
iret
dec
cmp
rorl
js
jns
out
fstl
push
or
hlt
mov
testb
push
cmpsb
je
xor
sti
push
gs
cmpsb
inc
dec
cmp
pop
inc
cs
outsl
adc
ljmp
xor
cwtl
cs
scas
dec
add
and
mov
ja
push
mov
xlat
fwait
jne
lret
add
cltd
sub
out
inc
sub
or
cmp
add
add
fisubs
scas
mov
add
sub
hlt
cmc
add
dec
cmp
adc
stos
pop
fsts
rcrb
shrb
insl
mov
test
add
lods
out
movl
call
push
in
adc
shl
mov
xor
vmptrld
or
mov
cmp
pop
fstpl
mov
xchg
pusha
jnp
ljmp
xchg
cmp
xchg
addr16
and
test
js
sub
xlat
cmc
scas
je
stos
lret
jle
inc
lods
dec
and
ja
ret
ret
adc
iret
out
subb
and
push
in
jmp
push
rcl
or
sti
pop
adc
ret
mov
mov
add
arpl
in
setne
xchg
xchg
into
test
cs
enter
xchg
mov
loop
test
mov
cld
mov
add
add
sahf
push
mov
sbb
leave
cmp
sbb
push
jle
cmpsl
stos
insl
sub
dec
dec
in
fldcw
cmc
js
jnp
in
pop
popf
jb
pop
mov
test
jmp
lahf
mov
das
dec
mov
outsb
push
in
pop
clc
sbb
adc
dec
pop
adc
cs
nop
or
push
jp
add
lods
jbe
add
cmpsl
xlat
xchg
add
ret
aas
inc
ret
notl
aam
fdivrs
or
in
inc
mov
fwait
mov
and
mov
lret
test
adc
fdivrl
fnstsw
popa
adc
sbb
xchg
sub
mov
sti
iret
pusha
jae
inc
push
adc
pop
lahf
and
or
jmp
xchg
cmp
dec
gs
ss
jmp
cmp
pop
movsl
sub
loope
cmp
jns
popf
inc
scas
cmpl
adc
loope
out
or
add
add
mov
repz
repz
sub
add
add
add
pop
and
push
ss
cmpb
fisttpl
aaa
or
push
and
imul
mov
or
inc
test
xor
or
cwtl
fcmovb
jae
jae
daa
cltd
jnp
ret
testb
inc
mov
dec
xchg
aad
sub
xchg
ljmp
or
insb
out
fucom
xor
loop
loopne
jl
cmp
icebp
push
fwait
subl
push
movsl
fs
aas
cmp
mov
in
mov
shrl
out
cs
mov
shlb
sub
add
dec
aad
fsubrl
cmpsl
lock
pop
jae
loop
js
mov
xchg
pop
sub
push
xchg
int3
cmp
call
rorl
and
shrl
lahf
pop
sbb
int
aaa
pop
cmp
lcall
mov
int3
ret
dec
rorl
adc
aas
shlb
movsb
mov
mov
inc
inc
add
mov
add
cmpsb
xchg
pop
arpl
cs
pop
shlb
andb
adc
clc
xor
sbb
lea
iret
dec
fwait
cmp
inc
push
iret
mov
cmpsl
je
movsb
mov
out
mov
jnp
sbb
mov
push
inc
cmp
fildll
jg
mov
js
push
lahf
cmp
cs
adc
out
push
call
int
outsl
lret
test
test
jmp
jno
mov
sub
jbe
or
lea
pop
jmp
sbb
inc
dec
sub
and
in
push
or
jnp
mov
lods
xor
cmc
mov
or
sti
clc
arpl
or
aas
dec
es
inc
test
push
nop
sub
pop
push
ret
je
xchg
mov
xchg
sbb
sub
sub
xchg
mov
and
sbbb
or
out
mov
fisttps
aaa
jmp
or
sbb
inc
mov
jle
add
add
pop
inc
jecxz
clc
daa
fwait
mov
sub
or
push
adc
cmp
lret
mov
mov
std
inc
mov
shlb
ror
sarb
xor
fdivrl
or
inc
imul
mov
mov
insl
rorb
xchg
call
jne
inc
cmp
dec
xor
and
or
lcall
mov
sbb
mov
xchg
mov
shlb
cmp
insl
int3
mov
nop
jg
sbb
xlat
or
or
mov
je
inc
into
mov
ljmp
loopne
leave
dec
mov
imul
nop
cld
enter
inc
xor
into
ja
jecxz
rol
sbb
repnz
mov
jle
arpl
push
mov
mov
outsb
jecxz
mov
sbb
xor
loop,pt
sar
or
jmp
je
mov
outsl
jns
sahf
and
push
push
sbb
add
popa
lock
test
push
inc
fdivl
push
dec
mov
adc
add
mov
sbb
test
push
mov
rol
xorl
gs
lret
sbb
or
and
jmp
sbb
imul
dec
outsb
cmp
insl
dec
push
es
sbbb
fdivs
push
cmp
std
xor
add
lret
fidivrl
jae
int
xorl
mov
int3
inc
es
xchg
sbb
dec
mov
jbe
scas
cwtl
dec
add
adc
out
pop
mov
xchg
stc
fdivrs
jecxz
pop
lret
inc
pop
fsts
shlb
test
sbb
or
out
push
lahf
mov
lods
dec
inc
and
mov
out
pop
xchg
mov
push
andb
repz
add
aaa
xchg
lcall
mov
pop
rolb
xchg
pop
inc
lret
xor
mov
xchg
popa
xor
adc
mov
sbb
mov
add
jns
into
shrb
adc
and
leave
mov
sbb
or
sbb
test
imul
int
adc
sub
clc
cmpsl
cmp
push
in
imul
xor
mov
ljmp
jnp
or
in
mov
shrl
mov
sbb
or
cmc
add
imul
add
sbb
mov
cmpsb
push
xor
or
jbe
jmp
mov
popf
out
add
fs
insb
ret
push
cmp
mov
sbbl
or
cmp
jno
ds
sbb
data16
xchg
rcrb
test
push
push
add
pusha
insb
adc
jae
add
jecxz
cwtl
push
mov
jmp
fsubrp
xor
and
cmp
fbld
xor
or
or
push
pop
test
stos
hlt
jmp
cmp
jbe
push
movsb
add
add
add
orl
frstor
daa
xchg
mov
stc
dec
sbb
lcall
pop
push
mov
bound
pushf
movsl
loopne
or
ret
push
pop
cmp
stos
jbe
pop
int
fdivs
jmp
inc
mov
cmp
xchg
addr16
pusha
psllq
out
cmpsl
xor
inc
dec
dec
xchg
movsl
xchg
mov
dec
out
push
push
xor
or
out
or
imul
fcoms
ljmp
or
std
je
push
incb
sub
scas
pop
and
mov
and
sub
fcomi
adc
dec
iret
xchg
rorb
cmp
mov
shlb
rolb
mov
adc
cmc
popf
cmc
je
push
xor
arpl
xchg
adc
xchg
and
pop
dec
adc
leave
repz
out
leave
mov
cmp
imul
arpl
pop
out
and
add
out
xlat
out
jg
in
xor
fldenv
arpl
movsl
add
add
add
test
mov
rcrb
lahf
sub
lret
out
imul
nop
jecxz
out
inc
inc
insl
insl
pop
push
push
add
mov
sbb
adc
or
cmc
xchg
sub
pop
cmp
aad
cs
fbld
test
mov
cmc
cmp
sbb
dec
sub
daa
fisubs
es
cmp
dec
dec
push
inc
jp
or
stc
and
add
movsb
push
bound
pop
jmp
scas
jne
test
mov
pop
mov
popa
jmp
xchg
addr16
lahf
inc
sbb
mov
movb
out
pop
outsl
cli
mov
in
xchg
jmp
lods
subb
bound
sub
adc
add
in
dec
enter
adc
shlb
cmpsl
lods
mov
out
ret
xchg
add
mov
in
pop
jae
out
push
mov
sbb
pop
fbstp
fldl2e
cwtl
outsb
ss
and
add
and
pop
pop
test
call
sub
sbb
icebp
pop
pop
adc
aaa
jp
pop
ja
inc
adc
mov
xor
cwtl
and
cli
out
loopne
add
and
add
or
test
add
movsb
data16
stos
or
inc
scas
push
sbb
jl,pn
mov
xchg
fwait
stos
xchg
cmpsl
and
adc
jg
push
stos
pusha
xor
sub
cmpl
fcmovne
mov
cmp
jle
insl
push
repz
jae
and
ds
dec
mov
push
in
mov
scas
decb
addl
sub
pop
out
nop
shlb
mov
leave
addr16
and
lods
pop
ja
in
mov
iret
inc
aam
lods
int3
xchg
loop,pt
push
cmp
sbb
sbb
dec
cmc
lahf
sarl
sub
sbb
jno
mov
cmp
sub
stc
adc
add
add
mov
fadds
and
add
add
add
jl
loop
fwait
cwtl
mov
scas
imul
pop
fs
xor
xchg
sbb
or
or
cmp
movsl
pop
fistpll
sbb
xor
adc
pop
movsl
adc
jo
or
and
icebp
jecxz
xchg
pop
mov
or
shll
orl
dec
aaa
mov
ds
test
dec
add
ficompl
xor
outsb
cmp
cwtl
adc
mov
fdivl
iret
pusha
stc
lcall
cmp
inc
dec
shl
add
jb
push
pop
or
adc
jle
lods
cs
cmpsl
xor
cmp
stos
jmp
push
jp
call
sbb
mov
mov
dec
push
daa
pop
dec
adc
lret
scas
inc
xor
cli
mov
mov
test
sub
lea
lods
jns
cmp
cmp
dec
sub
pop
sub
sbb
fisttpl
stc
std
jecxz,pn
pop
xlat
cld
fadd
lret
jnp
sti
jmp
push
mov
neg
ja
jb
test
add
add
mov
ss
movsl
leave
and
jge
push
xchg
rcll
xchg
mov
cmp
test
int3
jg
jae
xor
mov
mov
out
scas
jmp
inc
call
into
stos
pop
sub
test
adc
pop
cmp
inc
mov
sub
scas
mov
or
jp
negb
mov
cmp
dec
jno
js
addr16
mov
xlat
cmpsb
loop
xchg
lret
addr16
sbbb
roll
in
enter
ja
cmp
cmp
mov
cmp
sub
sahf
push
test
movsl
push
xor
sub
scas
jnp
adc
sub
pop
out
shr
loopne
cmp
pusha
xor
add
pop
sbb
push
push
xchg
lahf
xchg
hlt
loop
xchg
or
xchg
mov
add
out
out
xor
in
xor
adc
add
add
jecxz
lock
xchg
pop
sub
add
add
add
sbb
lock
loop
cmp
clc
in
jb
sti
int3
mov
leave
jo
sub
inc
imul
mov
inc
xchg
imul
and
lods
cmp
lock
pop
cmc
cli
clc
pop
add
push
mov
jo
inc
xor
sbb
cli
fldenv
adc
notb
dec
push
adc
js
or
push
push
testl
mov
xchg
and
rcll
icebp
ljmp
pop
and
and
js
popa
and
mov
leave
addl
cmp
cltd
out
stc
mov
scas
lret
shl
lcall
cmc
push
fimull
dec
cwtl
test
aaa
popl
popa
sbb
inc
sbb
sbb
inc
ss
mov
inc
shl
adc
jnp
jp
mov
rclb
lret
in
outsl
mov
add
add
cld
mov
leave
push
or
add
add
xor
adc
sub
out
inc
jmp
and
or
sbb
cmc
jge
dec
jae
jnp
xor
mov
jbe
inc
and
mov
mov
or
xchg
dec
fnstenv
inc
gs
out
scas
aas
pshufw
cs
push
test
iret
cmp
adc
movsl
rcr
sub
pushf
pop
inc
dec
push
xchg
and
mov
pop
repnz
xor
out
dec
jae
loop
fld
push
pop
rolb
mov
xchg
fildll
ffree
and
mov
dec
sub
es
int3
in
hlt
fists
push
xchg
push
xchg
push
arpl
xlat
sbb
cmc
xor
adc
lret
lcall
cmp
leave
gs
cwtl
dec
inc
mov
pop
call
inc
andb
and
dec
xor
js
xchg
add
sbb
pop
fs
xchg
adc
mov
aam
sbb
xlat
mov
mov
dec
das
pop
out
cmc
mov
lahf
cmp
xor
add
add
add
inc
xchg
out
fucomip
mov
lret
rclb
jae
ret
addr16
aas
ror
mov
sahf
or
mov
ret
rcrl
clc
inc
sub
lret
mov
je
xchg
dec
mov
inc
jmp
scas
add
and
sub
sub
movsb
int3
ljmp
xor
xor
mov
or
pop
aam
out
dec
pop
or
and
mov
or
inc
rolb
out
or
pop
sahf
loop
lcall
in
pop
lea
imul
adc
jb
ljmp
mov
lock
inc
mov
fiadds
fldcw
dec
sbb
xor
ja
pop
les
sti
mov
push
inc
add
cmp
mov
lcall
out
cmpsb
rcrl
jl
fidivrs
jb
cmp
mov
int3
xor
js
and
push
icebp
gs
movsl
or
add
out
std
dec
std
pop
lcall
xchg
pop
push
mov
push
cmp
add
imul
or
sti
cmpsb
int3
or
ror
imul
loop
ljmp
call
scas
mov
inc
sub
or
dec
cmpl
lret
cmp
fs
fdivrp
and
jnp
xorb
lahf
xchg
mov
cwtl
dec
xchg
inc
and
scas
sub
mov
add
push
adc
mov
sahf
push
inc
and
call
xchg
fmull
cmpsb
mov
and
push
jecxz
rorb
fs
es
inc
fcomip
mov
push
ss
decl
and
decl
int
faddl
fiadds
lret
cmp
outsl
add
out
fs
inc
rcrl
filds
jns
decb
enter
pop
mov
in
and
loopne
lds
lcall
jle
mov
and
add
add
fidivs
loop
ljmp
roll
addr16
add
add
add
scas
outsb
iret
jae
inc
aaa
testb
ret
sar
fmuls
or
cmpsb
xor
movsl
jg
js
imul
enter
adc
in
jno
popa
ds
pop
addl
fiadds
les
jl
mov
mov
arpl
pusha
inc
push
int3
rcll
pusha
lock
decl
js
and
mov
leave
cmc
das
push
sbb
push
es
popl
out
lret
fs
data16
xchg
fstl
cmpl
dec
cmp
push
add
inc
out
test
fsubr
cli
push
inc
push
or
inc
shl
enter
push
fwait
or
or
add
pop
xchg
push
fcoms
push
out
pushf
lcall
hlt
cmp
cmc
xor
jo
push
imul
les
jmp
add
push
xchg
jg
jmp
std
mov
gs
sub
add
add
add
cmp
out
sub
enter
popa
sarl
out
insl
mov
mov
les
adc
mov
mov
insl
iret
xchg
inc
ljmp
sbb
xchg
lcall
xchg
jmp
pop
pop
es
fwait
cmp
dec
cmpsb
mov
sub
inc
ja
xor
push
pop
or
add
fldenv
rcpps
xchg
stos
push
adc
xor
aad
cmp
inc
jge
loopne
mov
pusha
les
push
add
aad
shll
fidivrl
push
pop
push
out
or
adc
mov
ss
mov
dec
and
lret
pop
pop
int
xor
aaa
int
addr16
test
cmp
mov
lock
gs
add
adc
pop
lods
adc
data16
cwtl
cs
bnd
cmp
push
fldcw
andl
dec
mov
popa
rcl
test
add
push
divb
inc
mov
stc
incb
add
add
inc
push
scas
popf
xchg
lcall
sar
rolb
adc
lret
adc
mov
shll
mov
mov
fxch
fisubrl
dec
cltd
add
shll
sbb
stos
fwait
shrb
inc
xor
push
cmc
push
mov
and
outsb
mov
xchg
jecxz
aaa
imul
pop
fbstp
cmp
fcomps
pop
adc
es
xchg
adc
adc
and
jle
test
or
jne
popa
dec
cmp
and
in
xchg
sbbb
adc
jbe
out
add
add
outsl
jb
loope
out
sub
cmp
mov
inc
popf
bnd
push
jne
mov
dec
or
shlb
add
arpl
popa
pop
stc
sbb
jle
push
adc
cs
adc
sub
mov
lods
inc
pop
push
pop
js
bound
call
add
add
xor
cmp
inc
call
jp
mov
add
add
fstl
sub
jae
adc
jae
mov
mov
ds
xchg
xorl
dec
loop
stos
ffree
fistpl
push
dec
clc
popf
icebp
or
jmp
lock
loope
jle
inc
cltd
sub
sub
and
xchg
adc
jg
sahf
push
sub
pop
outsl
shrl
sub
and
mov
jae
rcrl
aam
cmp
lcall
addr16
or
xor
test
out
insl
xor
sub
cltd
xor
mov
arpl
cmp
or
in
sbb
andb
inc
pop
push
gs
mov
out
ja
out
lock
push
lds
mov
pushf
and
push
aam
es
pop
mov
fistpll
daa
dec
lods
and
sub
dec
jecxz
sbb
out
jg
adcb
cmpsl
mov
and
cmp
dec
pop
iret
push
inc
cs
clc
jno
call
pushf
mov
cmc
es
les
mov
arpl
or
add
add
mov
rcll
jb
fsubrs
cmp
mov
and
pop
dec
or
dec
aas
js
jl
lcall
jnp
and
sti
arpl
inc
mov
cmpsb
xor
test
push
adc
sti
loop
jecxz
xchg
test
in
mov
fsubrs
out
outsl
sbb
mov
movsl
mov
xchg
xor
push
jno
dec
push
shll
mov
cli
cmpsl
sbb
mov
mov
mov
or
out
std
sbb
xchg
pop
xlat
push
inc
addr16
fcompl
sbb
addr16
xor
fsubr
scas
movsb
cmpsl
dec
adc
pusha
pop
loopne
insb
mov
sahf
cmpsb
sbb
push
lods
push
pop
js
dec
cli
mov
mov
cltd
sbbl
movsb
xchg
pop
xchg
add
ja
pop
dec
andl
add
xchg
mov
jnp
add
add
clc
pop
stc
out
push
pop
bound
dec
push
mov
add
add
into
add
mov
repnz
inc
jnp
xor
flds
adc
pop
sub
push
lock
inc
cmp
xchg
sbb
iret
dec
repnz
clc
out
cli
ds
mov
sbb
mov
mov
pop
cwtl
lret
imul
jl
jnp
movsb
pop
pop
into
adc
xor
stc
jmp
inc
xchg
sbb
push
jb
ror
sahf
xor
stc
push
jo
leave
jmp
popa
dec
jae
or
cltd
test
mov
xchg
movsb
mov
mov
mov
mov
xchg
fnstenv
xorb
mov
repz
sti
mov
cmp
push
mov
leave
cmp
or
mov
sbb
dec
imul
cmp
or
scas
inc
mov
pop
mov
leave
xchg
sub
jb
test
ds
subl
jp
or
neg
mov
add
add
push
mov
lcall
push
push
mov
add
add
xchg
dec
or
xchg
mov
adc
add
inc
sub
mov
lret
shll
jo
aas
leave
xchg
sbb
cli
nop
sub
xchg
test
xchg
hlt
inc
arpl
in
cmp
nop
lcall
pop
mov
in
xor
sub
iretw
inc
fnsave
mov
sub
push
mov
push
cmp
dec
insb
or
pushf
incb
push
push
sahf
out
and
sub
push
lret
cld
jmp
cmp
cmp
pop
subl
leave
bound
popa
xor
popa
pushf
mov
inc
outsl
push
dec
and
ja
inc
cmp
or
hlt
sbb
jb
mov
xor
push
imul
sub
adc
mov
or
test
inc
xlat
mov
xchg
add
add
add
jne
mov
int3
insb
lret
pop
mov
add
add
mov
in
das
jno
push
test
inc
aaa
test
aas
jle
in
pop
lods
ret
jns
mov
ret
scas
push
xor
jecxz
enter
add
xchg
loope
jne
adc
ret
xor
stos
movsl
lahf
dec
andl
repz
in
jmp
and
inc
and
roll
jno
mov
dec
mov
xor
pop
or
stos
sbb
scas
adc
mov
inc
cmp
inc
daa
xchg
mov
lea
popa
repz
pop
inc
mov
dec
sbb
roll
lea
and
and
xchg
and
adc
sbb
push
ss
mov
mov
mov
xchg
and
pop
fwait
inc
or
jmp
xchg
sbb
insb
in
jo
xchg
cmc
hlt
xor
rcl
dec
pop
pop
sbbl
fstp
rorl
popf
test
mov
add
add
cmc
and
or
scas
jo
cmp
jp
and
jne
adc
push
and
dec
jp
arpl
adc
rcl
mov
pop
mov
jns
and
jge
imul
adc
xchg
out
jge
cmp
or
sbb
cwtl
and
mov
push
pop
mov
gs
ja
das
iret
xor
aam
les
push
xor
add
hlt
stos
aaa
push
inc
pop
cmc
mov
and
popa
jb
pop
divb
and
mov
fists
and
and
aam
nop
sbb
push
mov
mov
fwait
sbb
cmp
enter
fildll
mov
xor
push
sbb
loopne
movsl
jb
mov
cmpsb
mov
dec
sub
lods
aad
mov
stos
pop
xchg
test
in
add
cwtl
jg
daa
ds
push
jl
pop
mov
inc
pop
mov
push
aad
loope
mov
jecxz
out
mov
mov
add
add
add
sbb
ja
inc
push
xor
pop
and
push
mov
mov
mov
fwait
int
xsaves
into
and
xchg
ljmp
lret
push
sub
aaa
in
mov
adc
mov
cld
inc
xor
xchg
and
clc
stos
inc
add
pop
into
add
or
insb
pop
mov
mov
or
inc
cs
aam
cli
es
push
mov
mov
aaa
or
stos
loopne
jge
or
aad
xchg
or
pusha
push
pop
push
inc
rolb
test
sbb
mov
dec
loope
popf
loopne
add
sbb
cmc
push
inc
push
pop
icebp
inc
sub
outsl
es
inc
rcll
mov
mov
stc
add
or
shlb
add
or
pop
and
add
add
std
test
jg
into
lret
orl
add
add
mov
fwait
mov
dec
mov
jmp
dec
repz
ret
jb
std
sbbl
jo
xor
inc
and
lods
mov
dec
icebp
imul
jno
dec
sub
inc
fisubrl
push
xor
int
andl
mov
fistpl
insb
popl
cltd
push
adc
arpl
scas
test
cmp
xchg
mov
aam
pop
ret
movsl
clc
int
sub
stos
clc
sub
or
xlat
jecxz,pt
push
icebp
jecxz
lods
cmp
data16
in
imul
inc
adc
and
mov
jle
add
insb
pushf
xor
and
sub
adc
cmpsl
mov
loop
jns
cmp
cs
pusha
sarl
jno
aas
ret
in
jno
dec
push
test
and
in
add
xchg
add
add
adc
in
lcall
jae
dec
mov
mov
add
add
add
xchg
fs
popf
adc
stc
add
repnz
or
je
subb
xchg
shl
aaa
pop
out
in
add
cmpb
sti
sub
mov
inc
or
enter
jmp
imulb
sub
sub
test
jnp
mov
cmp
cmpl
hlt
mov
mov
les
sbb
xlat
iret
call
outsl
imul
jne
fwait
orb
dec
push
cmc
sub
pop
aam
xor
push
fs
and
fistpll
and
xchg
xor
out
inc
dec
pop
stos
mov
xor
pop
sbb
or
push
fs
aad
and
jecxz
jno
jne
jnp
and
mul
addb
push
fisubl
inc
pop
xchg
into
xor
adc
add
repnz
cmp
sub
mov
lods
xchg
ds
adcb
cmp
dec
or
jg
dec
arpl
fsubrl
add
add
fwait
jl
mov
int3
xchg
vmread
roll
loop
dec
xor
add
mov
jecxz
lds
rcrl
dec
mov
mov
sub
jnp
xor
mov
cwtl
mov
popf
jg
out
mov
imul
pop
cmp
fistpll
pop
push
aas
addr16
add
sti
lret
ret
in
push
ds
aaa
adc
out
lahf
es
addr16
js
xchg
xor
sbb
dec
lahf
dec
inc
loop
xchg
loope
out
ret
sub
dec
sub
mov
rclb
ret
mov
pop
enter
add
inc
arpl
mov
cli
in
bound
add
cld
mov
mov
inc
push
xor
xchg
sbb
ljmp
lock
mov
push
sarb
xchg
cld
and
lea
popf
or
lds
add
add
out
idiv
outsl
mov
push
jge
jo
add
add
add
sub
xor
int3
aad
lret
loop
pop
push
mov
in
adc
mov
fwait
scas
popf
iret
jg
mov
jb
in
test
jb
hlt
mov
adc
lret
push
push
imul
dec
sub
insl
jmp
push
push
adc
aas
imul
inc
cmp
inc
inc
pushf
mov
nop
jecxz
lea
aas
dec
dec
int
hlt
fstps
leave
ljmp
idiv
cmp
fcomps
ljmp
adc
sarb
aam
and
and
test
xchg
popf
push
pop
mov
dec
push
imul
fisubl
xchg
popf
in
movsl
ret
xor
test
mov
cld
adc
std
aaa
sub
std
inc
fwait
repnz
sub
adc
mov
jmp
push
inc
cmp
mov
bound
mov
xor
or
in
sub
insl
sti
xor
mov
pop
mov
jo
je
add
add
add
arpl
inc
pop
pop
dec
out
sbb
sbb
call
jle
into
mov
daa
xchg
in
mov
push
lds
ret
add
cld
mov
push
outsb
mov
cld
movsb
or
inc
and
xor
mov
inc
fsubs
mov
and
pop
rcr
cmpsb
jl
lret
jae
repz
repz
pop
pop
in
jne
outsl
fcmovu
mov
pop
adc
int
push
test
adc
sub
enter
js
in
pop
cltd
sbb
sbb
xor
or
lret
or
jnp
dec
mov
mov
stos
or
jne
xchg
or
xor
push
out
mov
aas
mov
lea
scas
and
in
cld
mov
leave
in
jl
test
lcall
xor
sbb
mov
sub
rcrb
popf
add
lods
call
cmp
add
fistpll
call
push
test
add
add
add
xlat
mov
xchg
add
bound
pushf
xor
pop
insl
mov
or
popa
jp
lds
and
test
mov
pop
pop
sarl
add
xchg
pop
pop
sub
jne
sarb
andl
pop
std
or
adc
ror
aas
lret
out
push
test
inc
jb
xor
gs
mov
insl
jnp
subb
dec
add
mov
loope
aaa
cmpsb
std
cmp
xor
mov
loopne
loop
push
add
and
mov
movsb
jle
lret
pop
jg
test
ret
std
rcl
cmp
arpl
ljmp
sub
cmp
inc
sbb
cmpsl
aam
and
das
testb
fmull
lea
inc
movsb
mov
fcmovne
inc
fdivl
mov
push
jno
mov
shlb
add
add
std
sti
leave
sti
iret
jmp
ret
jl
add
add
add
pminub
insl
sbb
test
jno
push
cmp
cmp
addl
clc
arpl
sub
xor
jae
test
pop
push
mov
pop
mov
and
decl
cmp
pushf
or
xor
enter
les
popf
mov
pusha
mov
outsl
cmpsb
lock
fbstp
dec
mov
in
sbb
add
and
insb
push
sbbb
sbb
adc
dec
leave
pop
pop
leave
out
adc
mov
mov
fiaddl
sub
mov
adc
in
scas
pop
cli
sbb
sahf
mov
int
je
imul
fwait
xor
loope
inc
sbb
jno
ja
outsl
shrb
push
jmp
addr16
jbe
mov
outsb
and
or
push
mov
mov
add
or
jp
in
int3
adc
xor
nop
repz
xchg
sbb
mov
mov
xor
in
and
add
add
filds
pop
hlt
or
int
es
add
mov
pusha
popf
aas
cmpl
arpl
stos
push
cmpsl
jg
icebp
aas
in
sub
pushf
outsl
sbb
ret
adcb
imul
pop
movsb
push
adc
and
in
out
aam
mov
into
push
and
test
mov
or
in
rorb
pop
in
test
xorb
sbb
ret
loope
mov
lret
lret
mov
iret
stos
lods
imul
or
or
xor
js
pop
outsb
orl
ret
mov
sub
xchg
mov
and
jl
enter
stos
adc
dec
push
lods
repz
cmp
and
ljmp
cli
or
mov
push
cs
pop
lret
jg
pop
stc
inc
imul
push
popa
and
mov
push
imul
mov
dec
xor
popa
xor
cmp
das
sub
jne
add
add
jg
mov
sahf
loop
jno
repz
test
add
lods
fadds
xor
xor
cmpb
les
adc
push
inc
and
sub
cwtl
mov
sub
lahf
lcall
aas
xchg
add
rclb
sbb
cmp
in
jno
adc
xor
leave
lea
jmp
aam
mov
sbb
sub
xchg
xlat
inc
or
xchg
mov
dec
out
pop
pop
cmp
jns
and
mov
jns
cwtl
add
and
jl
rorl
cltd
icebp
iret
and
cs
sub
cmp
mov
stos
inc
pop
sub
adc
inc
adc
testl
push
stc
add
xchg
fs
ja
sub
pop
jp
in
incl
stos
ljmp
lcall
int
add
mov
mov
hlt
out
mov
add
imul
call
xor
push
cld
pushl
cld
sbb
mov
add
add
add
rcrl
and
in
cmpsl
inc
lea
mov
jns
loopne
emms
pop
les
pop
int3
sbb
push
dec
out
leave
ljmp
push
xchg
mov
daa
icebp
or
rcrl
mov
lahf
dec
inc
jns
adc
out
pop
rcr
ss
in
lock
jmp
inc
and
mov
stos
mov
movsb
mov
push
cmpl
hlt
cmpsb
rclb
aaa
cmpsb
call
dec
outsl
sub
sbb
popf
aam
call
fcmovnu
and
inc
and
inc
mov
jns
addr16
inc
inc
les
dec
movsl
fstps
ret
aaa
movsb
xor
push
push
ljmp
jmp
dec
mov
push
scas
insl
fildll
lcall
push
pop
into
add
loopne
iret
and
mov
int3
ja
add
xor
or
in
test
or
lret
int3
ficoml
xlat
pushf
shrb
lcall
lahf
outsl
xchg
inc
mov
add
add
add
cmpsl
flds
inc
cmp
je
cmp
pop
sbb
out
xchg
test
dec
push
xor
mov
inc
rcrl
rcl
xchg
pushl
ret
xor
inc
push
xlat
inc
movsl
cmp
stc
lds
loope
movsl
test
stc
xchg
in
sub
call
xchg
in
aas
les
jp
mov
and
mov
fldl
dec
jne
pop
gs
repnz
out
xchg
jmp
mov
scas
jno
mov
mov
pop
sbb
and
jecxz
call
sub
imul
mov
pop
addr16
ss
test
mov
mov
cwtl
idiv
xchg
cmpsb
lahf
adc
sbb
sbb
cwtl
mov
lret
mov
sbb
divl
xchg
jns
or
shrb
sbb
ret
xchg
int3
mov
add
test
mov
aas
scas
fldz
and
scas
nop
ret
add
add
sub
dec
cs
jge
mov
cmp
ljmp
ss
cmp
xorb
mov
aaa
sar
rcl
sbb
lret
push
cmpsl
mov
and
mov
jnp
test
sti
nop
pop
inc
inc
add
inc
loopne
xchg
jb
rcll
pop
cmp
jb
mov
sti
mov
and
shrb
insl
adc
lods
jnp
sbb
setne
push
repz
and
stos
jg
jl
sbb
or
push
jno
scas
pop
mov
notb
movsl
daa
rorb
loop
xor
and
inc
lods
fistps
push
pusha
loop
cmp
add
cs
imul
cmovo
cltd
lret
mov
subb
push
add
outsb
pop
or
imul
mov
xchg
cs
sub
lds
xor
sti
ja
divl
in
jp
push
loop
mov
add
add
jne
jne
jg
loop
mov
and
add
add
sub
in
in
jl
inc
adc
cltd
cmp
adc
pop
loope
inc
mov
iret
rol
cmp
ret
fwait
pop
loope
mov
mov
scas
or
rcr
inc
divb
int3
push
push
cmpsb
cmpsb
cmp
aas
lods
test
and
insb
xchg
fs
xor
outsb
or
cmp
jmp
fistpll
out
and
repnz
ds
les
dec
pusha
xlat
rcr
cmp
and
outsb
pop
lock
bound
and
ret
push
arpl
mov
aaa
dec
inc
mov
xchg
hlt
cmp
or
addl
add
sub
add
cs
clc
mov
in
loopne
test
jge
cmp
mov
cmp
xor
xchg
jno
mov
push
movsl
jecxz
into
mov
sar
jne
dec
xor
xor
cmp
jecxz
add
add
dec
pop
mov
cmc
mov
je
les
add
add
jp
loope
jbe
mull
xchg
mov
movl
lahf
aaa
xchg
and
lods
sbb
sbb
ficoms
lret
addb
cs
mov
pop
sub
test
and
scas
or
sub
in
sbb
jns
xor
shl
in
xor
and
lds
mov
jle
mov
hlt
test
repz
rcrb
and
xor
or
frstor
cmp
and
mov
jmp
pminub
movsl
push
add
sub
movsl
js
lock
mov
pop
jl
cmpsb
mov
cmp
repz
insb
or
mov
sub
xor
cmp
mov
daa
mov
cmpsb
stos
and
push
sub
pop
sbb
lret
lea
xchg
mov
add
outsb
jle
lods
testl
lds
add
add
jno
xor
adc
mov
mov
stc
divl
cs
lea
and
loope
cld
sbb
xchg
mov
push
dec
mov
popa
into
aam
mov
mov
add
push
push
mov
mov
push
fdivl
or
xor
movsb
mov
inc
xchg
loop
pushf
js
jle
jne
mov
pop
in
nop
xchg
stc
pop
out
movsl
nop
repz
xchg
mov
or
mov
adc
daa
mov
xlat
hlt
mov
sub
sbb
adc
add
push
xchg
lock
fldenv
cli
cmp
arpl
imul
add
ljmpw
enter
arpl
push
dec
stc
daa
test
mov
xchg
mov
cmp
or
popl
mov
mov
add
jmp
add
add
fisubrs
std
repnz
sbb
cmp
jl
scas
ret
loopne
inc
ret
mov
or
lcall
outsb
mov
das
pop
adc
out
pop
mov
fisttpll
inc
mov
mov
mov
aam
movsb
xchg
push
fildl
jne
testl
pop
loop
call
cld
daa
mov
push
lods
sub
scas
xchg
or
scas
loop
sbb
out
fimuls
mov
add
sub
fstps
xorl
sbb
ss
xchg
dec
repnz
stc
mov
pop
adc
insl
lock
and
push
inc
sti
push
sub
inc
mov
outsl
iret
inc
arpl
sub
sub
aas
and
xor
mov
es
jo
pop
sbb
sbb
push
xchg
in
in
je
mov
movsb
mov
add
add
out
sti
xlat
in
aad
inc
cltd
pop
cld
movsb
movl
add
mov
inc
sub
jbe
into
nop
popf
orl
dec
sarb
or
mov
mov
aas
sbb
mov
lret
stos
inc
mov
div
push
lea
out
inc
sbb
ds
loope
ret
aad
faddp
jecxz
out
fdivrs
adc
mov
jbe
push
dec
int3
out
fdivrs
repnz
sbb
insb
stos
movsb
jl
jl
push
add
jnp
cld
cld
pop
popa
xchg
and
hlt
jecxz
jo
sbb
pop
mov
sarb
jbe
imul
cwtl
movsb
rorb
mov
jge
push
das
mov
add
out
sbb
pop
and
push
daa
orl
ds
out
hlt
or
cmp
in
aam
popa
adc
pushf
stos
mov
cwtl
lods
push
out
cmpsb
dec
add
daa
cli
xor
mov
push
mov
xor
push
pushf
cmp
ds
sub
cmp
jg
and
mov
movups
test
add
add
add
fcomip
out
mov
add
mov
stos
mov
insl
out
lahf
popf
pop
ret
sbb
mov
xorb
xor
pop
adcb
in
je
xor
call
push
adc
jb
aam
dec
stos
jp
cld
fstpt
fwait
jl
inc
enter
mov
cmp
ljmp
lahf
ljmp
inc
push
mov
call
insl
lods
or
fs
sbb
mov
xchg
or
mov
xor
cld
mov
subb
sahf
icebp
mov
data16
push
and
add
pop
mov
sbb
pop
icebp
or
inc
xor
mov
mov
xor
mov
jge
xchg
mov
jo
mov
mov
push
jne
add
insl
sub
jle
mov
add
xchg
iret
repz
push
dec
or
call
jmp
ds
repz
fcoms
xchg
add
add
add
dec
sarl
nop
cmp
divl
and
adc
cmp
test
lds
mov
fidivs
cmp
mov
sahf
rcll
in
lcall
roll
mov
sahf
add
xchg
pop
loop
sub
rcrl
xchg
daa
pushf
insl
cmpsl
pop
ja
or
adc
jp
mov
jmp
sub
test
mov
test
scas
mov
ret
jge
adc
mov
repz
xchg
and
adc
add
or
mov
jle
mov
or
bnd
add
mov
dec
xor
jo
sbb
lods
and
fwait
sarb
gs
mov
cmpsl
insl
stos
fs
pushf
mov
es
rol
or
orb
cmp
mov
testb
repz
loop
pop
loopne
insl
fisttpll
mov
cmp
jle
mov
cmpsl
mov
mov
mov
orb
mov
add
add
add
adc
and
or
mov
movsl
mov
xlat
jp
jle
mov
mov
and
jns
loopne
loopne
adc
push
adc
mov
xchg
hlt
iret
loope
sbb
aas
pop
das
scas
sub
cli
outsl
ret
shlb
cmpsl
cmp
mov
ret
push
or
sub
jno
dec
xchg
sbb
daa
aas
hlt
push
sub
or
in
ss
cltd
dec
leave
test
fsubr
daa
jae
dec
add
sbb
lods
cmpsl
or
rep
xchg
jae
outsl
or
lds
aaa
ja
call
mov
mov
jo
push
sub
sub
sbb
into
add
xlat
stc
jg
ror
stos
push
mov
cmp
mov
movsl
lock
bound
push
cwtl
jnp
rcrl
adc
in
xchg
push
add
js
pop
lahf
stos
xchg
out
cmp
repz
add
add
enter
in
sbb
push
inc
adc
mov
lret
add
add
add
int
fdivr
imul
pushl
mov
into
ret
inc
mov
lret
das
cmp
jo
insb
mov
lahf
add
repz
arpl
scas
xchg
and
or
in
push
adc
jnp
lea
xlat
js
arpl
mov
sbb
test
or
sub
aam
aam
mov
xchg
leave
inc
outsl
in
mov
popf
push
xchg
popa
lods
and
mov
add
or
stos
mov
xor
std
repz
out
out
loope
sbb
sub
clc
shlb
pop
bound
push
sbb
mov
mov
shl
lcall
dec
scas
outsl
imul
mov
popa
mov
pop
decl
jecxz
mov
jmp
dec
or
dec
fstps
push
fdivl
sbb
mov
push
mov
mov
pushf
jne
imul
cmc
call
inc
push
popa
pop
mov
add
add
add
pushf
adc
movsb
les
and
push
pop
addr16
cmp
or
leave
ret
popf
scas
jns
xchg
imul
int3
stos
jbe
jb
orl
adc
dec
je,pt
enter
fnsave
outsb
sub
pop
test
adc
dec
xor
imul
xor
cwtl
repnz
lods
push
and
movsl
lret
inc
mov
xchg
xchg
imul
mov
cs
mov
add
adc
lea
sub
repnz
sahf
sarl
push
pop
inc
cmp
push
cmp
xchg
push
lcall
loopne
pushl
in
xchg
and
movsl
pop
xlat
push
icebp
mov
insb
dec
sbb
addl
xchg
out
cmp
adc
ja
sbb
lea
fwait
jae
sbb
dec
sti
mov
jb
rcrb
into
mov
popa
arpl
aam
cmp
sbb
mov
inc
add
add
add
ja
iret
sub
mov
add
add
decb
sti
sti
inc
arpl
push
js
add
jb
lods
or
bound
push
jne
js
cltd
bound
movntq
shrb
or
sbb
ret
movsb
pop
lret
adc
and
enter
fcompl
adc
daa
imul
es
mov
xor
loop
pop
mov
pop
mov
dec
cmp
or
bound
mov
stos
icebp
cmp
and
ds
cmc
mov
cmpsb
and
out
mov
and
ret
aad
pop
loopne
pop
out
cmp
mov
dec
xor
mov
mov
mov
mov
andb
or
xor
inc
push
mov
mov
lret
inc
jle
call
jno
mov
ret
dec
outsl
mov
inc
mov
sar
and
mov
out
out
out
into
gs
cld
test
jae
ds
add
add
outsl
inc
push
xchg
int
mov
add
sub
js
test
cmp
cmpb
xor
push
or
jg
lret
or
rorb
rcrl
mov
inc
cmpsl
mul
cmp
and
ret
add
mov
sbb
lret
push
fiadds
mov
adc
fnsave
inc
std
dec
jbe
jecxz
mov
jmp
inc
or
xorb
shll
test
out
add
inc
nop
mov
xor
lea
insl
add
and
xchg
inc
cmp
iret
je
xor
andl
or
les
daa
dec
jp
and
popf
fs
mov
xchg
jns
adc
sbb
xchg
fstl
jmp
mov
call
cmpb
outsl
sbb
jae
movsb
push
dec
addb
loopne
and
je
out
mov
mov
outsl
jns
iret
add
add
add
pop
mov
xchg
jae
mov
jne
pop
mov
daa
adc
sub
or
and
jp
inc
repz
xchg
cmp
mov
pop
iret
shlb
pop
cmp
pop
adc
lods
into
sub
sub
mov
mov
xchg
ds
add
int
addr16
movsb
out
pop
jecxz
or
jge
cmp
inc
icebp
repz
sub
inc
scas
mov
inc
std
add
movsl
std
inc
js
sbb
inc
mov
mov
cmp
sbb
fsubr
mov
mov
jl
and
fwait
dec
ret
add
adc
cmpsb
xor
adcb
cmp
aas
movl
mov
cmp
xchg
dec
pop
scas
lds
dec
rol
push
pop
dec
xchg
fidivrs
rcr
cs
jl
inc
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
sbb
add
add
add
xchg
xchg
xchg
fidivl
xor
test
shr
push
insl
mov
push
adc
mov
mov
incl
inc
sub
push
ret
nop
aad
jmp
fsubl
sub
out
sub
adc
cmpsl
out
cwtl
comiss
mov
lods
int
mov
cmpb
cmpb
fs
loop
dec
jnp
shr
addr16
or
fnstsw
dec
inc
js
jae
mov
or
sbb
adc
mov
jnp
or
sbb
push
jmp
shlb
nop
xor
sub
rcl
xlat
pushf
push
dec
sbb
pop
inc
pop
mov
lret
push
sahf
dec
test
or
pop
push
pop
cmp
pusha
fimull
inc
in
jnp
xchg
imul
cmp
mov
and
int3
and
jnp
ljmp
fs
jns
call
out
lahf
ret
or
cmp
int3
roll
add
add
push
add
push
mov
sub
std
cmp
adc
lret
push
fiadds
jnp
add
push
jge
les
jno
push
sbb
xchg
pop
leave
fnstcw
pop
sub
das
inc
mov
and
mov
inc
cmp
push
ja
out
push
nop
pop
jnp
popa
shl
lods
jae,pn
dec
jmp
mov
ds
push
and
xchg
sub
data16
cltd
xor
scas
xor
mov
cmp
adc
inc
and
xchg
mov
jo
pop
or
and
mov
adc
xor
sti
out
shlb
stos
mov
xchg
mov
es
jmp
push
rolb
in
xchg
cmpsb
jno
int
jp
jae
xchg
dec
pop
mov
add
rcrb
fldenv
lahf
out
mov
in
or
xchg
add
dec
dec
mov
mov
mov
pop
xchg
or
inc
mov
add
add
daa
jle
test
setg
cli
movsb
mov
xor
leave
in
xor
and
scas
sbb
cld
sbb
pop
movsb
adcb
lods
inc
mov
test
jg
imul
imul
loop
movb
or
adc
bnd
inc
outsl
push
sarb
mov
adc
cli
pop
insb
sti
push
shlb
fisttpl
push
xchg
mov
ret
xor
lods
stc
mov
and
lret
adcl
push
mov
daa
mov
add
dec
jmp
sbb
dec
xchg
ss
inc
adc
imul
and
cli
outsl
adc
aaa
mov
jecxz
add
push
push
mov
and
mov
cmpsl
mov
xchg
push
adc
inc
pop
sbb
push
add
lods
dec
rorb
add
add
add
add
add
sbb
sub
dec
fs
ret
fcmovbe
roll
add
add
sbb
popa
out
scas
mov
push
out
push
lock
cwtl
dec
shll
and
test
aad
add
mov
mov
das
outsl
sbb
mov
stos
jbe
sub
shll
rorb
xorb
ja
fists
addr16
scas
loopne
insl
push
loope
out
shl
push
xor
rorb
jnp
pop
dec
inc
nop
or
jnp
inc
push
addb
ffree
jo
pop
or
js
daa
aad
fdivs
daa
add
push
and
jl
push
jl
mov
jno
xchg
test
icebp
and
and
xor
xchg
mov
and
cs
adc
rcrl
pop
and
pop
test
cmp
insl
fmuls
push
adc
pop
cmp
jecxz
or
repz
sub
sbb
pusha
aad
inc
mov
stc
and
xchg
sbb
jno
dec
mov
mov
inc
jnp
lahf
mov
pushf
adc
ds
jae
jne
xor
aam
add
add
lds
fimull
ss
push
inc
fwait
lods
xchg
cltd
mov
fdivrp
push
hlt
test
xchg
sub
jmp
bsr
sbb
hlt
xlat
scas
xorl
inc
mov
sub
das
pop
cwtl
push
xchg
sbb
js
daa
cs
in
mov
pop
shll
fildl
mov
les
cmpl
jle
adc
pop
inc
adc
das
repz
sbb
or
fsubl
inc
jae
mov
daa
mov
test
daa
shll
cltd
dec
hlt
hlt
add
movsb
icebp
fadds
push
and
insb
add
cmpsl
loop
test
jge
aam
repnz
xchg
std
aaa
mov
sub
out
into
dec
adc
push
cmp
mov
cmp
and
aaa
cmp
jnp
add
mov
insl
sub
popa
jle
out
roll
lret
fidivl
and
xchg
and
idiv
lahf
insl
mov
gs
add
add
ljmp
ljmp
cmp
ljmp
scas
sbb
fidivl
mov
push
roll
test
mov
shrb
lret
and
sbb
mov
push
jle
in
adcb
out
fldt
mov
inc
jg
mov
imul
js
lea
cli
pop
dec
or
fsubrs
cmp
xor
in
add
stos
sbb
mov
loope
test
pop
xadd
andl
adc
push
cmp
inc
insb
cmp
xchg
fwait
push
ret
dec
mov
push
sbb
inc
cs
ret
out
sahf
mov
mov
sarl
lods
sahf
adc
jp
push
add
mov
stos
aas
inc
lds
shrb
adc
jp
mov
or
and
mov
add
lcall
inc
rcll
mov
add
cmp
jg
leave
or
sbb
iret
loopne
add
add
add
xlat
mov
dec
popl
dec
loope
mov
icebp
int3
int3
pop
pop
mov
push
sub
push
sbb
mov
push
sub
sbb
jae
xchg
sahf
pop
out
es
add
xor
mov
xlat
xchg
and
mov
mov
rclb
das
clc
xchg
dec
ljmp
nop
int
cmpsb
adc
mov
pop
add
mov
mov
stc
push
sbb
dec
sub
add
lods
push
pop
push
and
push
mov
add
and
repz
in
mov
dec
add
in
fwait
xchg
pop
ret
adcl
test
fistps
cmp
dec
out
sbb
test
sub
test
sub
bound
push
xor
inc
mov
and
rorb
push
fnstenv
fisttps
inc
test
add
add
int
out
out
imul
nop
xchg
movsb
add
xchg
add
add
test
outsb
fld
out
imulb
outsb
mov
or
mov
sbb
lods
xorl
jbe
dec
lock
rorb
fadd
insl
cltd
push
inc
int3
jns
int3
iret
mov
mov
int
popa
pop
addl
xchg
out
add
std
test
mov
or
pop
sub
pop
push
jne
in
lods
call
lock
outsb
dec
and
jp
into
pop
cmp
cmpsb
push
cmp
push
aas
sub
shr
les
std
lods
mov
shl
leave
sub
mov
adc
pop
cmp
mov
sub
or
scas
arpl
pop
mov
out
xor
xor
add
shl
cmpsl
or
rcll
dec
lea
add
mov
jle
in
jg
fdivrp
add
mov
add
psubusw
push
in
sub
sub
fadds
add
add
dec
jne
push
dec
pusha
je
insb
test
lds
sub
les
dec
xor
cmpsl
dec
xor
push
clc
ss
fiadds
mov
sti
pop
mov
mov
in
xor
test
or
sub
lcall
test
inc
xchg
stos
pop
mov
mov
das
push
test
jmp
and
xchg
movsb
js
pushf
icebp
flds
push
cltd
sar
push
jecxz
inc
dec
push
out
lea
jno
fs
pop
std
movsl
mov
sbb
sub
pop
andl
mov
add
insb
sub
cmpsb
push
divb
inc
data16
mov
enter
stos
movsb
cmpsl
rcrb
mov
jo
frstor
and
and
jbe
push
sbb
jg
fwait
rorb
call
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
insl
sub
add
add
add
subb
mov
lcall
push
data16
push
push
stos
dec
cmc
andb
lds
mov
push
adc
loop
pop
push
xor
or
jmp
jb
lss
xor
aam
cmpsb
lock
adc
rol
push
and
inc
dec
pushf
or
xor
je
adcl
sub
xchg
mov
jne
jne
mov
mull
test
jne
je
aad
cli
mov
test
icebp
xchg
sbb
out
adc
shr
lcall
and
insb
in
or
inc
pop
jbe
push
jns
push
into
rolb
jecxz
loop
je
push
jb
and
cmpsl
dec
das
jg
and
fsubrl
or
adc
adc
pmaddwd
lret
jmp
push
mov
pop
cmp
pop
and
and
aam
cmpxchg8b
sub
add
add
jle
jg
std
fstpt
into
ljmp
add
add
ljmp
loopne
popa
push
dec
fwait
add
add
push
fwait
pop
add
pushl
dec
inc
pop
mov
sarl
add
pop
jne
pop
push
cmp
inc
xchg
jne
adc
cmp
xor
or
test
icebp
sbb
jno
ja
mov
icebp
add
repz
xor
loopne
jmp
adc
sbb
jg
pop
push
cmpsl
inc
popf
inc
fstps
jae
pop
adc
mov
mov
sbb
repz
pop
aas
stos
scas
rcrb
das
add
stos
lahf
inc
xchg
or
push
mov
scas
imul
cmp
negb
mov
je
sbb
mov
xor
xchg
adc
out
dec
jbe
stos
daa
test
sahf
jnp
stos
js
push
pop
jne
lds
xor
test
cmp
ljmp
cmp
insl
xchg
hlt
fildl
add
add
test
xchg
sub
pushf
mov
mov
pop
dec
in
cli
dec
adc
sbbb
hlt
fs
outsl
push
pusha
add
push
push
adc
pop
sbb
xor
and
les
mov
lret
dec
dec
sahf
sub
cld
movsl
sbbl
push
out
gs
push
scas
mov
gs
push
fiaddl
cmc
add
mov
jecxz
sbb
setge
into
mov
or
and
out
cmpsb
push
adc
and
push
adc
or
sbb
fisubrl
jmp
jmp
ret
movsl
push
push
add
cmp
clc
cmpsl
push
jmp
mov
sbb
sub
sbb
mov
mov
add
jne
test
sub
int3
lods
call
push
pop
push
adc
fistpll
mov
mov
aad
ficoms
lcall
int3
add
insl
jbe
sub
pop
mov
lcall
add
sbb
jmp
scas
inc
call
clc
faddl
add
add
push
js
xor
ret
std
jle
lea
popf
loope
mov
sbbl
mov
aam
jbe
and
mov
cmp
loope
repz
cmp
enter
add
or
ret
addr16
inc
out
and
loope
add
xor
inc
xor
in
loope
dec
outsb
fidivrl
pop
sub
mov
cli
jno
enter
test
nop
js
jae
jbe
sbb
xchg
jns
cmc
dec
pop
dec
nop
mov
jnp
adcb
pop
adc
fstpt
mov
add
jg
ret
ds
fwait
xchg
adc
add
cld
repnz
out
mov
push
sbb
icebp
lret
adc
mov
mov
lret
lret
dec
das
xor
push
mov
xchg
xor
cs
leave
ss
jno
mov
mov
jbe
xchg
mov
add
add
push
out
faddl
std
pop
cld
fldl
add
add
faddp
pop
aaa
cmp
or
inc
std
add
js
mov
dec
sahf
adc
lcall
je
js
loopne,pt
jle
out
inc
add
push
inc
out
xor
repnz
jbe
pop
sub
aad
pop
mov
das
std
pushf
test
popa
jge
mov
pop
lret
mov
cld
rorl
dec
ja
jecxz
mov
dec
inc
or
out
mov
and
in
xchg
mov
push
stc
jp
jmp
push
xlat
bound
xor
outsb
jl
insb
dec
adc
shlb
into
ss
xchg
mov
jb
cmp
sarl
pop
int3
dec
or
jl
add
sub
cmc
ficoml
xor
jb
mov
mov
std
jne
mov
jecxz
std
ret
dec
add
lods
mov
rol
sub
js
add
loop
lds
scas
mov
cld
jle
mov
lods
and
imul
jg
mov
lcall
fisttps
or
add
add
add
add
test
mov
subl
xchg
cmpsb
push
sub
mov
xor
and
push
mov
sbb
adc
mov
adc
or
push
pop
add
call
add
dec
push
clc
push
push
loop
push
jo
or
test
xor
into
mov
or
mov
pop
pop
cmp
inc
insl
cmpsb
stos
cmp
inc
daa
add
ret
push
in
or
rcrl
inc
gs
mov
leave
loopne
shll
hlt
stc
cmp
sarl
pop
xchg
xor
pop
sbb
mov
push
mov
dec
pop
pop
push
mov
xchg
mov
test
pop
loop
xor
rclb
cwtl
out
fwait
push
inc
mov
lea
sti
dec
mov
push
xor
sub
sub
imul
shll
nop
das
mov
sbb
sbb
jns
xchg
xchg
mov
out
mov
add
add
adc
rclb
call
into
nop
adc
mov
imul
andl
insb
pop
push
sub
std
not
int
mov
xchg
xchg
adc
sbb
cmp
lret
adc
cltd
shll
fildl
sahf
mov
sbb
push
mov
out
mov
stos
rcll
sbb
leave
andb
xchg
inc
mov
popf
cli
inc
lock
fnstsw
pop
in
cmp
jns
out
cltd
repnz
out
mov
lock
mov
mov
push
jp
out
cwtl
xchg
jp
add
jmp
mov
mov
loop
cmpsb
call
test
push
sbb
sbb
fstpt
dec
mov
lcall
bound
push
sbb
popf
cmpsb
adc
bound
dec
xlat
in
push
xchg
push
sbb
lods
add
inc
sbb
xor
loope
std
aad
add
add
fadd
fsubp
jnp
or
cld
iret
aad
testb
add
add
add
inc
in
fdivs
or
xor
and
xchg
fisttpll
sub
jge
pop
cmpsb
jbe
je
aam
mov
ljmp
cmp
jmp
je
cmp
sahf
leave
or
mov
call
inc
push
shlb
or
icebp
inc
faddl
push
push
fistl
add
rcll
test
loope
push
jae
cmp
loopne
mov
mov
jle
xchg
xor
push
sub
xlat
or
dec
jns,pt
sbb
mov
inc
and
inc
out
das
jb
add
rcll
stc
jecxz
dec
lods
sub
icebp
or
mov
cltd
pop
mov
mov
adc
flds
jno
sub
pop
push
pop
sbb
movsb
cwtl
inc
pushf
dec
int
dec
out
push
imul
mov
out
pushf
fsubl
adc
insl
cmp
xchg
cmp
lret
fwait
and
roll
in
leave
sbbl
in
add
cli
xchg
sarb
add
sub
cld
cli
jle
dec
nop
xor
adc
orl
add
push
add
mov
movsb
dec
mov
push
xchg
pop
outsb
fst
sub
jbe
in
sbb
fnstsw
pop
xor
outsl
or
jnp
adc
in
jo
loopne
push
pop
sub
inc
mov
push
add
pop
ret
or
insb
iret
lret
pop
scas
add
xchg
mov
rcrb
sti
push
aaa
xor
adcb
ljmp
enter
xchg
jbe
aaa
stos
mov
cmp
repnz
add
test
mov
mov
clc
sbb
pop
test
loop
mov
ficoms
inc
pop
subb
shll
add
jmp
std
xchg
stos
sub
out
shlb
xchg
in
bound
aad
sbb
mov
dec
jmp
ja,pt
cld
cmp
mov
aad
adc
daa
cmpsb
sbb
jmp
imul
sbb
add
lea
pop
jbe
ja
sti
aaa
out
ja
arpl
dec
adc
add
add
add
pusha
inc
es
shlb
inc
jne
cmc
out
push
shll
sbb
dec
xchg
pop
sti
scas
sbb
xchg
mov
shr
iret
lahf
xchg
add
and
xor
cmp
cmp
dec
or
ja
push
jl
ds
push
pop
mov
aad
push
lds
sub
inc
add
movsl
mov
push
repz
cmp
outsb
lods
loopne
clc
lds
mov
mov
hlt
sbb
int
xchg
shr
std
push
inc
addr16
adcb
mov
fldenv
call
subb
ja
arpl
ret
test
sub
sbb
lea
add
lcall
ljmp
pop
sahf
imul
xor
add
mov
dec
aaa
adcb
rcr
adc
adc
push
imul
int3
fwait
pop
jle
push
cld
icebp
jg
add
add
into
arpl
pop
xchg
aaa
pushf
inc
pushf
lcall
add
add
mov
test
jp
fucomip
inc
push
lea
test
leave
in
inc
adc
mov
cmc
les
or
fdivrl
jg
push
in
sahf
inc
jbe
call
xchg
push
mov
fadds
mov
sbb
sub
mov
add
sbb
sbb
arpl
aas
in
add
mov
push
mov
ljmp
sbb
jl
stc
sub
xor
inc
into
mov
mov
lds
lods
lock
pop
push
push
adc
rcl
and
mov
jmp
shrb
gs
lock
mov
int3
dec
add
sbb
push
insb
add
shlb
out
mov
mov
xchg
mov
push
cmp
imul
sbbb
xchg
mov
sub
push
lret
jle
jmp
sub
or
add
ja
lcall
mov
dec
sbb
add
add
add
popf
fadds
sbb
cltd
mov
fisubrs
jne
xor
cmp
mov
icebp
ss
mov
out
ljmp
sbb
leave
int
lea
insl
repz
and
xchg
loope
shlb
ret
push
cmp
push
push
jl
sbb
dec
test
insl
addr16
mov
and
inc
test
adc
cli
mov
call
xchg
jg
cmp
out
dec
cld
mov
dec
jb
mov
filds
ret
mov
and
push
and
pop
cmp
push
sbb
addr16
test
ljmp
mov
pusha
lods
inc
insb
add
or
push
imul
xor
xchg
out
movsl
movsl
fisttpll
stos
iret
aad
out
lock
push
mov
mov
push
repz
lock
jg
in
and
pop
pusha
inc
sbb
add
add
add
stos
cmpsl
sub
sub
in
out
dec
xchg
or
jg
leave
add
fwait
inc
add
xchg
or
aad
or
fucomp
lret
push
pop
aas
test
imul
inc
shrb
sbb
add
mov
xor
xor
pop
push
movsl
fnstenv
mov
int
arpl
xor
movsl
popl
inc
setl
sbb
jno
mov
push
movsb
cltd
in
push
dec
ror
ss
loope
shl
pop
adc
cmpsl
mov
xor
adc
fidivrs
aas
iret
mov
jle
aad
jmp
jp
mov
repz
xchg
clc
sub
imul
pop
aaa
int
cmp
pop
lea
dec
cwtl
sub
pop
inc
fucomi
add
scas
and
xchg
mov
outsl
xor
mov
in
sarl
add
mov
popf
jp
pusha
add
add
pop
xlat
fistpl
pop
and
add
add
lock
jge
cmp
cmp
push
sub
xchg
ja
mov
pop
iret
xor
sub
jmp
and
imulb
lods
aaa
jb
test
nop
add
dec
mov
das
cmp
pop
bnd
mov
jbe
lds
ljmp
pop
push
cmp
pop
mov
scas
shl
imul
jnp
sahf
inc
adcl
jb
adc
hlt
jae
inc
add
lret
rcl
fstp
ret
aam
push
sahf
subb
push
mov
cmp
aaa
push
sbb
adc
xchg
sar
out
mov
movsl
fisubl
pushf
loopne
lahf
into
popl
icebp
fstp
mov
test
cmpb
mov
popf
sub
mov
cmp
enter
bound
lahf
scas
jns
mov
aas
dec
mov
mull
mov
dec
or
sub
in
cmp
stc
mov
dec
js
stc
mov
dec
int
xchg
and
gs
add
add
add
jl
add
repnz
inc
pop
or
js
repz
pop
jmp
repz
xor
int
in
sub
icebp
jmp
mov
imul
enter
in
mov
jb
push
negb
dec
xor
mov
jg
dec
jno
iretw
adc
mov
and
shl
jle
int3
cltd
dec
sbb
in
fstpt
inc
mov
ds
out
inc
fistl
sub
call
fdivrl
jno
and
inc
xchg
enter
xor
loope
cltd
push
ds
lret
or
mov
sub
push
aam
fs
jecxz
xor
lds
popf
adc
scas
add
jp
pop
in
cmpsl
stos
cmp
pop
jo
sub
cmp
loopne
push
fwait
je
addr16
jecxz
scas
jbe
push
sub
pop
push
mov
call
inc
sti
mov
fstpt
add
add
insl
repz
fwait
jns
jns
pop
pop
das
sub
add
add
add
push
mov
dec
push
sub
int
repnz
sbb
sub
bnd
add
movsb
cs
cmpsl
leave
pop
stos
je
aad
sahf
insb
push
pushf
loop
int3
cmp
dec
dec
cmp
sbb
pop
enter
push
pop
leave
insb
sar
lods
dec
ja
mov
into
xorl
dec
jne
sub
mov
das
push
insb
cmp
jb
or
or
repnz
je
push
pop
add
jb
mov
add
and
push
mov
cld
int3
inc
in
ss
outsl
mov
imul
nop
mov
js
neg
xchg
add
cmpsb
cmpsl
jnp
nop
stos
jno
and
pop
fsts
and
notl
lock
push
pop
sbb
jecxz
into
pop
stc
add
sbb
pop
mov
xchg
or
jb
jg
dec
sub
pop
inc
clc
mov
xor
jecxz
sar
dec
lock
add
cmp
jnp
adc
jne
xor
xchg
ja
ljmp
imul
xchg
and
inc
lret
insb
and
sub
les
add
add
shll
pop
pushl
ja
cld
insl
jno
loope
jmp
fcompl
mov
inc
sbb
lret
push
xlat
xchg
mov
mov
or
pop
jae
xchg
sbb
xchg
push
mov
mov
mov
mov
push
mov
ss
dec
fisttps
pop
xor
leave
inc
je
subl
das
xchg
push
sti
add
mov
xlat
ja
mov
fyl2x
mov
lcall
pop
test
lods
lret
std
adc
jnp
mov
add
scas
or
leave
and
dec
jmp
cltd
dec
in
cld
xchg
repz
insb
lds
xchg
adc
and
fnsave
adc
add
subb
fistl
das
pop
sbb
and
jmp
add
add
mov
sbb
stos
lods
add
std
ss
xchg
cmpsl
bound
imul
repz
in
out
rclb
sbb
fs
jl
pop
jg
and
aad
pop
mov
push
and
pop
jg
jge
sahf
scas
mov
mov
adc
add
jl
lds
mov
add
notb
cmp
bound
pop
jae
dec
lret
dec
rclb
ret
xchg
out
lods
int3
mov
fistl
cmp
jo
lods
hlt
or
and
sbb
loop
lods
push
push
hlt
mov
cwtl
jecxz
sarb
add
ds
push
fildll
ret
repnz
xchg
mov
psraw
mov
lds
cld
decb
sub
and
lcall
mov
idivb
orl
ret
sbb
test
test
add
lods
js
sub
js
add
jb
scas
decb
fisttps
inc
or
add
add
dec
adc
jl
mov
loop
or
jne
mov
test
movl
sub
fs
je
pop
mov
xchg
rcrb
icebp
mov
sbb
arpl
pop
scas
ret
popa
in
les
sarl
mov
les
decb
aad
xor
or
pop
mov
stos
adc
mov
loope
jecxz
mov
bound
in
xlat
nop
push
ret
mov
fbld
sbbb
outsl
xor
inc
push
out
out
cmpsl
ret
rcr
add
int
mov
lds
out
sub
mov
cld
add
mov
push
fbld
inc
enter
mov
rep
push
gs
add
sahf
adc
idivb
test
push
shll
sbb
jmp
and
je
adcb
add
xchg
ds
mov
xlat
mov
xchg
rcl
mov
add
add
and
xor
in
add
mov
mov
ja
push
mov
lret
or
icebp
pushf
lcall
jmp
xchg
andb
je
sbb
push
lcall
clc
lock
sub
push
lods
in
fnstenv
jle
cmp
add
and
inc
lock
add
jnp
dec
sbb
jno
stc
cmp
sub
push
sub
mov
jbe
in
arpl
jae
jo
sbb
mov
clc
imul
jecxz
ret
cmp
push
fcmovnb
jmp
cmp
sub
push
push
test
mov
ds
inc
xor
push
rclb
jle
ljmp
loopne
mov
cmpl
sbb
cmpl
insb
mov
sahf
flds
add
add
mov
aas
mov
icebp
xchg
add
add
repz
jl
pushf
pop
xlat
fs
mov
xchg
xor
jo
sbb
popf
ljmp
pushf
jo
xor
adc
aaa
sahf
xor
cltd
test
pop
adc
sti
mov
std
jo
hlt
out
cmp
sbb
or
in
cmovnp
rcrb
loope
adc
pop
jno
jne
iret
fucomi
dec
ljmp
loope
cmpb
mov
push
aam
ja
mov
sbbl
or
add
mov
mov
stos
pop
or
pop
scas
rcrl
loop
pop
add
imul
out
cmpsl
mov
out
insb
xchg
fwait
jg
add
outsl
mov
lock
push
ret
mov
push
outsb
pop
inc
imul
popa
push
xchg
enter
xchg
mov
stos
sti
mov
les
fwait
shll
xor
adc
add
add
mov
sti
mov
xor
mov
add
add
nop
pop
jmp
addr16
cmc
dec
lahf
ja
scas
inc
adc
test
pushf
sarl
dec
imul
std
jmp
add
mov
popf
lret
sub
stos
adc
pop
insl
mov
js
mov
jg
rorb
inc
cmp
test
xor
scas
sub
aaa
pop
test
aad
jmp
push
fisttps
aad
mov
add
add
sbb
push
adc
ret
xchg
fisttpll
jnp
adc
shr
xor
pop
cmp
fwait
sbb
in
mov
in
imul
xorb
pop
nop
inc
psllq
pop
xchg
inc
cmp
sub
and
push
mov
mov
pop
gs
lds
mov
fstpl
xchg
and
scas
inc
lret
lcall
sub
cld
mov
insl
inc
pop
xor
add
into
adc
neg
jge
xchg
jns
je
sbb
lock
add
add
in
mov
cmc
inc
push
test
adc
out
jecxz
lock
xchg
and
push
or
and
cmp
xorl
cmp
pop
sbb
lods
mov
xor
fs
les
loop
and
cmp
adc
mov
sub
push
jg
out
shlb
cs
les
pop
xchg
ret
out
xlat
xchg
sti
pusha
loopne
or
lcall
fstps
dec
cli
adc
sti
mov
adc
or
daa
adc
ret
mov
sbb
movsl
popa
hlt
inc
pushf
jb
in
fistpl
clc
iret
call
notb
dec
stos
cmc
adc
iret
out
stos
in
in
push
sbb
insb
mov
pushf
cmpb
jnp
imul
iret
lods
ja
jae
mov
jns
outsl
bound
mov
pop
fcomi
scas
mov
mov
pop
cltd
push
adc
pop
mov
jmp
repnz
mov
enter
pop
cmp
outsl
jg
jg
sub
fcmovbe
sahf
in
icebp
add
add
add
fcmove
mov
xchg
mov
test
cltd
pop
repz
dec
repz
mulb
pop
inc
stc
adc
ret
inc
xchg
inc
cld
int
js
aas
cli
push
nop
add
dec
jecxz
call
cmp
sahf
std
imul
sub
hlt
lea
ret
inc
pop
js
les
jne
sbbl
cmc
jo
test
cmc
mov
xchg
test
push
repnz
xchg
push
lahf
sub
pop
jo
js
mov
dec
or
dec
stos
mov
or
cmp
lea
dec
mov
dec
inc
leave
mov
mov
mov
adc
xchg
mov
lret
daa
mov
jno
rcll
movsl
jle
lods
rcrb
shl
mov
int
enter
mov
pop
repnz
loopne
add
and
nop
ja
jle
hlt
lds
adc
sbb
xchg
ret
ja
and
aaa
divl
push
shrl
repnz
add
add
xor
push
imul
adc
iret
jecxz
in
jns
js
inc
dec
test
mov
or
scas
push
adc
pusha
jo
cwtl
sarl
les
fcompl
movsl
dec
gs
sbb
dec
push
hlt
aas
mov
dec
xchg
inc
pushf
xchg
cs
jbe
pushf
xchg
test
imul
stc
inc
dec
stc
push
dec
pop
push
lock
sub
lods
add
aam
push
ret
xchg
clc
jnp
dec
push
mov
ljmp
shlb
jbe
sbb
push
and
lea
popf
test
das
notb
push
mov
pop
stos
inc
jae
xchg
xchg
aaa
jmp
movsl
sub
out
inc
je
fists
nop
mov
and
pop
sbb
dec
pusha
stos
sti
les
enter
pusha
pusha
int3
dec
pop
sub
lret
xchg
fwait
sarl
das
or
loope
xor
or
add
mov
cmc
mov
mov
repz
add
add
and
bound
push
int3
out
xor
sub
xchg
adc
add
fsubl
jle
add
sti
or
push
jmp
enter
mov
dec
add
add
pop
pop
push
jns
push
adc
xor
jnp
ss
and
mov
adc
outsl
sub
cwtl
jbe
sbb
sahf
fstps
pop
fldenv
ret
dec
add
push
xor
mov
imul
and
scas
nop
test
cmpsl
dec
fmull
jb
mov
int
inc
jnp
inc
iret
shrb
aas
add
dec
out
movsl
mov
outsl
lock
imul
imul
pusha
scas
aas
dec
pop
inc
push
inc
mov
int
clc
filds
mov
mov
push
pop
mov
jnp
lahf
or
out
adc
sub
pop
mov
in
frstpm(287
fildl
add
add
jne
pusha
popf
pop
cmpl
hlt
add
add
add
iret
jae
dec
pop
add
and
mov
xor
push
and
jmp
dec
pop
adc
pop
and
js
imul
inc
mov
mov
and
lret
push
movsl
imul
and
lea
add
jbe
in
push
inc
loopne
inc
loop
jle
push
aad
sub
negb
push
mov
xchg
mov
mov
out
jne
arpl
sbb
pushf
mov
mov
sub
pop
xchg
xor
leave
push
mov
repnz
out
sbbb
push
fcomps
xor
push
das
divb
dec
test
jb
arpl
sbb
lock
daa
dec
push
xchg
aam
inc
dec
jg
fwait
sahf
mov
sub
out
jb
dec
cmpsb
cltd
push
pushf
pop
adcl
jae
add
add
imulb
mul
xor
sub
add
add
add
repnz
incl
jo
pop
add
into
in
mov
jne
xlat
mov
or
add
leave
jl
out
pop
sub
cmp
imul
aaa
test
push
sti
int
push
dec
outsl
xor
sub
sbb
in
mov
push
lret
sub
push
aad
pop
or
pop
mov
xor
scas
sahf
mov
call
in
es
sbb
orb
adc
xchg
fdivrs
jo
mov
add
imul
adc
pop
dec
hlt
data16
loop
push
mov
inc
scas
xchg
push
mov
iret
add
cmp
lahf
jle
daa
mov
std
push
les
xchg
or
fs
sbb
jg
sub
jge
adc
scas
jp
adc
shll
repnz
xchg
or
test
lods
movb
add
ret
add
xor
jb
jae
add
mov
pop
testb
add
add
mov
testl
mov
xor
adc
out
lods
das
loope
testl
add
inc
fistpl
xchg
jns
mov
sti
jmp
mov
loope
loop
arpl
pop
iret
sbb
int
into
insl
out
imul
ret
stos
and
pop
push
add
stc
xor
lret
jle
pop
ret
inc
test
pop
lds
aaa
sub
jecxz
and
mov
jmp
sbb
fistl
push
pusha
call
jbe
stos
dec
mov
lret
subb
imul
xor
pop
pop
mov
test
and
arpl
sub
adc
or
js
pop
mov
daa
mov
sbb
dec
dec
js
in
sti
jb
pop
ret
scas
int
test
fdiv
sub
pop
sahf
sahf
dec
inc
jbe
mov
sub
addl
add
adc
int
in
idivl
js
mov
rorb
add
add
add
stos
aad
xchg
fwait
les
cmp
in
xchg
mov
xchg
stos
adc
and
pop
das
hlt
sbb
xchg
cli
and
jl
loop
jnp
into
scas
int
sarl
in
pop
pop
cmp
or
push
in
pop
rcrl
mov
test
jp
data16
sbb
insl
mov
test
repnz
ds
push
addl
into
dec
mov
ja
adc
mov
aas
jp
mov
pop
inc
cmp
les
sarb
xchg
test
sbb
in
popf
push
jb
lret
mov
iret
cmc
lret
or
pop
std
push
sbb
fbstp
mov
les
jae
outsb
pop
sbb
shr
xor
loopne
insl
ret
pop
fidivl
sti
mov
movsl
inc
dec
mov
xor
pop
mulb
adc
arpl
xchg
and
pop
es
inc
cli
aas
into
lret
xchg
out
fs
add
add
add
and
jge
fstpl
xor
rorl
jl
pop
mov
dec
or
mov
adc
xchg
fs
mov
in
mov
imul
mov
mov
rclb
and
adc
test
in
aas
sbb
jle
lods
subl
push
incl
sti
dec
mov
jbe
cld
pop
push
lcall
in
inc
shlb
pop
call
in
loopne
push
scas
popf
ret
aas
push
inc
ja
jo
mov
jo
repnz
xchg
das
jbe
std
push
rcll
and
xchg
iret
hlt
lods
loope
out
lea
adc
stos
jle
jo
daa
push
pop
cmp
out
jnp
push
scas
cmpb
mov
push
fildll
push
jle
and
or
jae
mov
inc
mov
dec
ffreep
push
mov
and
imul
inc
lods
out
xadd
adc
adcb
add
add
lcall
mov
push
add
add
cmp
popf
out
sbb
sbb
pop
mov
add
adc
repz
or
ja
mov
les
aaa
push
xchg
cmp
add
pop
xor
pop
jl
mov
insb
sbb
test
repnz
cmp
ret
arpl
xchg
cs
je
inc
xchg
cmp
xchg
rclb
inc
push
ja
inc
push
gs
push
fdivs
add
sub
sbb
aam
call
sbbb
or
lock
push
cmp
mov
data16
test
testl
cmc
cli
lret
aam
lods
mov
int
xchg
sub
jmp
clc
mov
int3
mov
sub
shlb
movb
cmp
cli
in
lock
adc
mov
fstpl
into
mov
or
jbe
aaa
jae
cltd
dec
mov
jno
mov
xchg
pop
insb
cli
add
add
add
mov
mov
inc
and
dec
popa
sbb
cmp
rorl
sub
inc
sub
in
test
mov
jne
and
lods
sti
arpl
dec
dec
jle
and
in
mov
jns
inc
adc
push
movsl
jge
adc
lods
inc
push
aad
dec
inc
js
add
fiaddl
roll
and
inc
scas
ficoms
sbb
push
add
pushf
inc
inc
mulb
sub
mov
sbb
std
ret
and
push
or
lds
jmp
pop
sub
aam
xchg
arpl
inc
jo
jo
pop
int3
cmpb
popa
adc
repz
lcall
or
ljmp
fistpl
cmp
adc
mull
push
pop
ret
lods
mov
add
hlt
lock
adc
pop
xor
xor
jb
cmp
rol
inc
cmp
insl
push
ds
into
nop
out
cwtl
jle
push
sub
dec
push
mov
add
add
mov
xchg
imul
test
jecxz
int3
and
inc
lret
adc
daa
mov
fidivrs
shrb
lcall
lcall
cmpsl
fsubp
and
sbb
mov
imul
or
mov
cmpb
mov
jecxz
adc
adc
mov
sub
in
loope
gs
xchg
dec
add
subl
cs
insb
cwtl
dec
std
mov
add
shlb
cmpsb
xlat
sets
jne
into
notl
cmp
add
out
pop
shl
jmp
pop
add
pop
test
dec
xchg
mov
int
fs
lods
and
jle
rcrb
or
in
mov
lahf
adc
rcrb
or
lock
orb
mov
jbe
les
jmp
sarb
add
into
into
orb
popf
dec
out
adc
add
add
test
jg
push
pop
push
mov
je
add
add
add
add
mov
xchg
into
bnd
out
sbbb
jle
pop
js
dec
test
fisubs
xchg
imul
test
dec
out
sub
cld
or
xchg
cmc
and
and
cmp
add
lret
filds
cmpsb
inc
xchg
mov
lret
mov
enter
daa
mov
das
mov
popa
xchg
sub
cmp
xor
test
movsb
movd
sbb
inc
pop
or
stc
mov
jno
and
outsb
push
icebp
hlt
xorl
sarb
push
xchg
bound
cwtl
dec
leave
and
xorb
push
sbb
aad
fsubl
je
sahf
push
je
and
jecxz
sbb
push
push
fldenv
imul
adc
push
in
dec
push
adc
xor
xchg
jne
jnp
push
push
test
adc
movsb
push
in
cmc
jne
sbb
js
xchg
sub
js
add
add
add
cmp
ds
xlat
fmuls
int
loope
orl
addl
mov
out
mov
int
out
sub
popl
testl
out
movsb
push
inc
sbb
popa
fisubrl
mov
cmp
cs
or
sti
or
mov
test
jge
or
add
pop
std
push
mov
repnz
dec
sbb
pop
daa
mov
stos
shll
aaa
arpl
imul
cld
lea
mov
xchg
int
and
adc
cmp
pop
and
aaa
mov
mov
pusha
inc
cmpsb
mov
popa
pop
ret
jne
cs
and
lock
je
sbb
popa
rep
rcll
jbe
test
std
dec
mov
sbb
jmp
jl
mov
adcl
mov
sbb
sbb
shlb
aas
out
int3
mov
jg
push
loop
incb
add
add
dec
stc
sarl
cwtl
bound
in
adc
int
repnz
inc
pop
das
aam
es
mov
jl
call
sbb
hlt
sbb
loope
out
sbb
sub
arpl
repnz
movsb
arpl
rcrb
jl
test
push
clc
rorb
or
js
pop
adc
popf
jmp
fcomps
mov
pop
xchg
movntps
aas
mov
inc
adc
sub
jg
mov
sbb
int3
dec
mov
clc
push
dec
into
mov
loope
and
mov
rsqrtps
dec
cwtl
nop
push
fistpl
daa
jb
jns
sub
pop
add
mov
insb
push
dec
jns
inc
in
scas
and
pusha
int3
fimuls
fs
cmpsl
xchg
mov
sahf
mov
repnz
int
pushf
fbld
xchg
cmp
sub
cmp
lock
add
or
mov
and
adc
cmp
add
add
pop
push
movsl
mov
sbb
gs
mov
sarl
cmc
and
push
loope
js
mov
jp
inc
push
dec
loop
mov
xor
mov
push
mov
adc
add
test
inc
pusha
jbe
mov
lret
out
lock
sub
loopne
rcrl
dec
lcall
test
xchg
addl
testl
imul
loop
jbe
or
cld
popf
add
imull
add
xor
jns
xor
fs
mov
adc
rolb
stos
mov
jecxz
xchg
fistps
orb
cmp
repnz
fisubrs
loop
ret
mov
adcb
out
repnz
adc
fiaddl
sbb
dec
rol
lret
clc
cmc
inc
stos
repz
adc
inc
test
add
add
add
inc
sbb
dec
push
shrl
inc
cmp
repnz
icebp
testl
sbb
adc
and
jbe
cltd
fdivl
jp
ret
sbb
in
push
clc
int
jmp
loopne
mov
pusha
test
add
rcrl
sahf
cwtl
jmp
imul
pop
mov
pop
push
adc
fstpt
cmp
cmp
les
sub
es
sti
aad
xor
imul
mov
or
inc
add
xchg
inc
insb
or
outsl
mov
mov
sbb
out
inc
stos
push
int3
fs
xor
xchg
inc
int3
out
inc
leave
je
mov
or
mov
xchg
sti
mov
pop
add
movsb
pop
and
ljmp
addr16
fwait
jae
push
cmc
cmp
push
adc
in
sub
pushf
cmp
sbb
pop
incb
add
add
std
aaa
mov
shll
mov
add
add
add
adc
cmp
sbb
push
jl
cmp
bound
js
iret
lret
and
cmp
adc
xor
mov
xchg
pop
jns,pn
push
adc
inc
nop
movsb
push
xor
imul
add
xchg
daa
push
add
sbbl
jns
cs
in
lcall
inc
gs
insb
xchg
or
pop
mov
test
int
add
into
sub
sub
test
xor
popf
or
inc
add
outsl
arpl
daa
ret
lea
mov
movsl
mov
lds
inc
pop
or
enter
movsl
pop
rcl
dec
stos
adc
lods
loopne
push
add
sub
fs
pop
inc
mov
insl
stos
mov
xchg
sbb
inc
mov
jno
cli
push
sbb
fs
outsb
idivb
inc
cli
enter
pop
call
xlat
xor
or
add
aas
imulb
leave
jp
outsb
js
push
pop
fidivrl
pop
mov
loope
add
add
insl
aam
mov
scas
add
or
orl
sbb
addr16
xchg
int3
pushf
xchg
sbb
inc
data16
or
ja
jne
insl
loope
outsb
add
sahf
lea
inc
mov
in
push
cmovae
cmp
dec
or
jmp
stos
pop
in
lds
mov
xlat
fidivrs
pop
and
stos
mov
dec
sahf
add
mov
pop
mov
sbb
testb
push
cmp
rcrb
dec
insl
imul
cld
adc
add
cltd
mov
fcmovnb
sarb
cmc
neg
nop
in
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
cmp
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
xchg
cmp
fwait
cmp
lahf
cmp
mov
cmp
stos
cmp
scas
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
push
inc
sar
jns
pop
dec
xchg
rolb
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
