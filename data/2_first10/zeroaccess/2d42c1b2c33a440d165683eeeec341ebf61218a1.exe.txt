push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
rorb
adc
adc
int
adc
dec
lods
inc
ljmp
lds
lods
add
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
sahf
mov
imull
dec
in
enter
jmp
imul
xlat
addb
ftst
push
bound
add
mov
cmpsl
gs
inc
xlat
fisttps
enter
cmp
jmp
iret
enter
fucomi
mov
sti
push
jne
icebp
inc
es
and
inc
cmc
out
xchg
dec
jecxz
pop
lods
xchg
jl
mov
push
jo
push
adc
leave
mov
jle,pn
jecxz
jno
jns
fimuls
cli
mov
imul
shll
xchg
push
dec
into
push
lock
shll
fsubrl
ret
test
out
fsts
adc
sub
push
dec
sub
cmp
in
je,pn
imul
aad
pop
or
mov
je
repz
pop
sahf
xchg
dec
pop
mov
neg
mov
pusha
xor
jo
mov
inc
sub
push
xchg
jne
jnp
push
add
sahf
andl
mov
adcl
pushf
fwait
push
push
and
xchg
aam
lods
sbb
cmp
mov
stc
push
ret
leave
and
cmp
jl
cld
xchg
mov
mov
pop
or
std
hlt
cmpsb
in
sbbl
dec
inc
fistl
inc
call
mov
pushf
push
push
jnp
adc
jns
mov
in
imul
into
out
not
insl
dec
std
leave
hlt
out
shrl
jmp
shrb
leave
xchg
mov
loopne
outsl
sahf
shlb
xchg
idivb
jmp
cltd
mov
mov
insl
mov
rcrl
shlb
adc
cmp
mov
std
xchg
xchg
xchg
pop
xor
mov
data16
orb
mov
xchg
cmp
xchg
adc
mov
inc
push
dec
test
sub
dec
sarb
dec
jge
jne
pop
push
test
push
pop
mov
cmp
imul
xor
fwait
cltd
ret
dec
push
mov
cvtps2pd
lret
clc
jae
shlb
push
lret
sbb
sti
add
in
add
cli
push
sbb
mov
push
test
test
add
mov
ds
xor
adc
or
bound
dec
xchg
test
stos
loope
lea
aam
out
mov
lcall
mov
cmp
ret
xor
push
arpl
jg
adc
fidivl
and
jecxz
jb
aad
cmp
sub
xor
fadds
inc
lods
negb
fwait
mov
ljmp
pop
sub
mov
xlat
fildll
xchg
add
jne
pop
cmp
inc
xor
insb
inc
xchg
daa
cmpsb
cmp
mov
inc
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
movsl
cmpb
adc
adc
and
nop
dec
sub
jg
inc
jo
mov
pop
jbe
jo
nop
mov
pop
ret
pop
mov
imul
lahf
add
pop
enter
hlt
sbb
mov
mov
mov
fneni(8087
or
adc
in
mov
pop
cmp
pop
mov
xchg
aad
iret
or
sti
push
jno
scas
mov
mov
ficomps
add
mov
mov
bound
insl
insb
lds
pop
shr
popf
sub
xor
outsb
jmp
mov
roll
add
scas
pop
fs
fildl
xor
sahf
ja
ror
outsl
fstps
xor
lcall
pop
gs
aam
mov
cmpsb
cmp
push
xchg
sub
scas
shrl
loop
mov
leave
xor
loope
inc
or
mov
fst
mov
std
jg
in
push
subl
dec
push
stos
cmc
fs
imul
xchg
sarb
xchg
cs
test
in
icebp
mov
mov
cmp
mov
xlat
dec
add
scas
sahf
decl
mov
imul
lods
dec
xchg
jmp
rcll
sti
mov
mov
xchg
cmp
shlb
dec
push
dec
clc
add
stos
mov
add
aas
test
lcall
dec
sbb
jae
fcmovu
jecxz
subl
stc
push
loop
mov
push
jns
das
jns
lcall
xchg
push
add
inc
mov
mov
jp
add
out
xchg
pop
and
rol
pop
push
push
addr16
adc
add
mov
inc
jnp
push
into
xor
loopne
in
enter
pop
lods
xlat
mov
fwait
movsb
jl
or
insb
imul
arpl
or
cs
call
xchg
xchg
nop
sti
fdivr
or
cli
sub
cmp
rorl
jmp
movsb
ret
push
ret
mov
xor
and
enter
enter
cmp
mov
mov
shr
xor
bound
xor
xor
popa
and
sbb
popf
xlat
sbb
out
fidivrl
inc
sbb
out
add
sbb
pop
movsl
inc
adcb
mov
aad
out
add
mov
mov
inc
push
inc
in
push
xchg
cwtl
or
jle
out
dec
jecxz
add
and
icebp
push
pop
adc
rcll
loope
movb
popa
push
mov
xchg
adc
outsl
pop
push
notl
imul
mov
xor
repz
in
xchg
sti
in
pop
das
push
lods
scas
inc
pop
cwtl
or
sbb
or
ja
and
testl
fisubrl
lds
cmp
dec
pop
and
pop
mov
gs
and
dec
add
movsb
mov
or
movsb
fs
fsubs
sub
mov
in
push
xchg
test
mov
addr16
inc
push
hlt
push
cmp
cmp
push
jo
and
jne
adc
rcrl
xchg
add
and
shrb
mov
mov
movsb
sub
lock
add
fcoms
add
sahf
adc
jns
xchg
add
bound
fisubrs
mov
cmp
xchg
adc
clc
sbb
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
pop
insl
inc
stos
orb
adc
adc
adc
data16
enter
aaa
adc
pushf
pop
jecxz
pop
pop
pop
adc
pushw
ficoms
add
into
add
mov
add
popa
lret
shlb
incb
xchg
pop
sbb
adc
dec
mov
outsb
adc
adc
xchg
sub
jb
mov
mov
cmpb
xor
mov
pop
xchg
xchg
outsb
enter
and
adc
xchg
xor
fldcw
inc
push
cmp
scas
cmp
inc
inc
inc
and
fadds
andl
aad
inc
pop
push
lds
data16
imul
aaa
add
jmp
or
mov
hlt
cmp
lret
push
mov
pop
push
push
push
xchg
mov
add
pop
jmp
dec
xchg
mov
and
das
xchg
inc
pop
ffree
test
pop
xchg
lds
add
push
and
mov
test
pop
cmpsb
inc
pop
lret
fs
scas
nop
inc
mov
stos
data16
pop
into
cs
cmp
mov
arpl
ficompl
faddl
jbe
pop
add
mov
or
lods
popa
dec
dec
mov
stos
das
sbb
addr16
xchg
cli
je
pop
fidivrl
std
sbb
dec
cmp
push
pushf
xchg
adcl
lret
outsl
push
addr16
out
mov
mov
je
push
pusha
ljmp
popf
sub
dec
xchg
rcll
and
dec
sbbl
xor
inc
mov
xor
and
push
jle
test
push
in
push
sbb
xorl
std
jg
stos
test
jmp
dec
popl
dec
cmc
pop
stos
cmpl
mov
push
jno
inc
lahf
jns
das
jp
stos
lret
test
ja
les
push
sbb
pop
in
pop
push
enter
fs
inc
adc
dec
pop
mov
aam
ss
insl
cli
mov
cmp
and
pop
in
lret
fdivrs
cmp
xor
cmp
inc
pushf
mov
dec
insb
jbe
mov
cmp
or
xlat
fistps
jecxz
or
testb
xor
inc
in
in
cmp
adc
scas
xchg
lret
sbb
cmp
lock
stos
lcall
sti
push
sbb
or
lock
ss
dec
das
jns
iret
xor
cs
push
int3
js
rcrb
stos
mov
arpl
jmp
or
xorl
push
sub
scas
ret
mov
aas
daa
ja
cmp
popa
aam
push
rorb
pop
out
fidivl
stos
shll
fucom
dec
push
outsl
js
imul
mov
add
mov
addr16
mov
push
adc
call
clc
sti
call
lahf
pop
xor
jge
xor
mov
inc
dec
and
cmp
push
jg
gs
lods
shrl
mov
inc
pushf
and
mov
mov
and
pop
cmp
adcl
pop
pop
push
jecxz
and
and
xchg
mov
jl
repz
push
add
fwait
push
pushl
imul
rcrl
scas
sub
mov
fs
pop
push
jg
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
test
adc
lock
lods
xchg
inc
xlat
push
pop
inc
sub
iret
enter
rcrb
pop
cmp
mov
mov
mov
xchg
lcall
fistpll
or
sub
jg
xor
rorb
push
call
lea
xchg
xchg
ds
outsb
movsb
scas
dec
jle
jmp
xor
in
xchg
cmc
xchg
cmpsl
pop
insl
call
pop
adc
mov
ret
daa
dec
add
bound
sub
orl
inc
add
ljmp
jmp
lcall
pop
lods
jb
aas
cmp
fmulp
jp
push
adc
and
nop
sub
js
mov
stc
mov
iret
dec
xchg
mov
or
pop
ror
mov
adc
mov
lret
loopne
mov
leave
mov
push
xchg
je
xor
scas
xchg
xchg
and
loope
shl
jl
loopne
test
add
xchg
icebp
into
loopne
ds
imul
cmp
lods
xor
adc
stos
ret
jge
das
sbb
inc
fiaddl
pop
dec
jp
add
and
fbstp
movsl
arpl
test
insb
inc
stc
push
sbb
mov
dec
mov
test
lcall
or
in
xor
add
mov
pop
push
jnp
stos
push
cmp
ror
fldl
jnp
gs
outsl
in
dec
sub
jp
stos
lock
comiss
stc
jmp
mov
call
sbb
out
and
mov
dec
cmc
inc
rorb
sbb
mov
jp
sbb
mov
dec
movw
and
add
fcmovnb
push
sub
and
pop
or
arpl
push
outsb
rcrl
mov
or
psrad
aad
mov
xchg
nop
inc
fmuls
scas
mov
mov
xchg
adc
xlat
mov
mov
push
mov
rorl
sub
shrb
shlb
insl
jno
movsl
cmp
jns
jmp
mov
scas
sbb
stos
stos
and
fadd
xchg
in
fdivr
js
xor
stc
xor
mov
lret
jle
pop
test
int
xor
fs
sub
xor
mov
adc
cld
pop
mov
xchg
sahf
or
jmp
push
xor
mov
pop
sub
adc
cltd
xor
pop
mov
sub
xorl
cli
fadd
scas
mov
stos
push
fdivrs
xchg
cmp
xor
test
xor
sub
sbb
scas
sub
xchg
loopne
mov
insb
or
inc
out
gs
cmpsl
mov
jb
ficomps
pop
xchg
pop
xchg
rcll
cltd
or
push
push
faddl
pop
imul
sub
insb
mov
xbegin
outsl
sub
adc
sbb
ret
insl
push
rcl
adc
fists
dec
nop
xchg
adc
xchg
lea
out
jnp
jl
push
mov
aam
cmpsl
loope
add
sub
lds
arpl
fimull
inc
sbb
dec
add
sbb
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
push
jmp
in
notl
adc
adc
adc
jmp
orl
stc
sbb
into
mov
sub
popa
inc
daa
iret
add
scas
add
dec
or
imul
mov
lcall
and
sahf
jo
lret
pop
jo
mov
lret
lods
pusha
fwait
adc
dec
bound
xlat
push
pop
add
nop
outsb
jne
xor
jno
fcmovbe
pop
or
mov
stos
sbb
mov
push
repnz
mov
mov
cld
jmp
and
mov
loope
fimull
jmp
dec
js
mov
dec
jnp
pop
adc
pop
dec
ds
scas
ret
bound
adc
jmp
xchg
ud2
lahf
adc
mov
icebp
negl
push
imul
mov
cwtl
cmpsl
inc
jecxz
mov
test
sbb
int
mov
push
jecxz
rcl
xor
dec
mov
movsb
xlat
imul
xor
addr16
xchg
push
js
jge
push
xchg
jo
add
sub
dec
insb
jp
arpl
dec
lret
aam
fdivl
and
movsb
jge
cmpsl
shl
and
scas
sub
lds
cmp
call
sarb
cmp
cmp
jae
push
dec
mov
rcrb
dec
arpl
fistpll
jl
loopne
and
jg
ret
inc
nop
sbb
jae
in
adc
xor
and
sbbb
sahf
divb
jg
dec
xchg
sarb
jns
push
movsl
inc
fnstsw
pop
fs
lcall
mov
test
sti
jne
cmp
lds
add
pop
insl
push
or
nop
jp
fisttps
outsl
fbstp
pop
push
rcl
fcoms
dec
mov
push
lahf
std
pop
das
test
mov
ficoml
int
pushf
rorb
sbb
pusha
ljmp
sti
lds
xchg
ja
mov
into
int
stc
mov
sbb
nop
movsl
push
dec
mov
aad
lret
jno
imul
rclb
das
adc
xchg
dec
push
adc
xchg
cltd
ds
adc
cmpb
mov
jne
outsl
xor
pop
mov
cmc
xchg
sbb
push
in
xor
jp
fs
jmp
jns
xorb
adc
stos
jmp
stos
cmpsb
gs
push
mov
adc
lret
repnz
dec
push
into
sub
cmp
mov
sbb
sbb
jbe
daa
jbe
mov
add
mov
andb
cmp
mov
mov
daa
or
or
sbb
stos
repz
jl
pusha
pop
push
mov
mov
and
mov
fbld
loop
ja
stc
pop
xchg
stc
pop
cmpsb
sbb
mov
mov
push
lea
push
mov
xor
lock
mov
pop
fcmovnb
insl
push
push
sbb
xchg
cli
and
inc
ljmp
mov
cmp
jle
cmp
or
cmc
xor
dec
sub
aad
cmp
imul
inc
sub
or
jmp
or
lods
and
mov
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
jne
sarb
out
adc
int
adc
popa
pop
sbb
loope
and
sbb
dec
repnz
ss
xor
testb
nop
pop
movsb
lahf
push
cmpsl
adc
sbb
test
lret
cmp
mov
mov
shrl
push
bound
mov
cs
imulb
cltd
arpl
push
rorb
mov
scas
push
lds
xchg
loopne
leave
dec
pop
rclb
jg
jecxz
cmpl
adc
data16
cwtl
cwtl
push
jl
mov
mov
cmp
adc
movsl
push
dec
xor
push
insb
push
and
lea
repz
inc
mov
popa
andb
dec
test
fwait
sysret
addr16
in
pop
xchg
mov
stos
rolb
out
add
sbb
lea
fidivl
movsl
adc
and
mov
addb
shlb
stos
pop
xchg
xchg
xor
scas
sbb
inc
pusha
mov
dec
js
lret
in
xor
loop
cwtl
ret
inc
andl
dec
je
add
push
es
xchg
sbb
jle
stos
data16
sbb
in
fildl
shll
int3
clc
adc
mov
std
sahf
stc
in
adc
mov
and
dec
divl
xor
stc
xchg
dec
cmc
and
cld
dec
jae
pop
xchg
or
adc
sbb
add
mov
cltd
mov
pop
sahf
mov
jbe
and
push
xchg
pop
xlat
adc
dec
mov
repz
push
out
scas
push
arpl
sbb
sarl
aas
jno
loope
popa
mov
negb
sti
inc
orb
call
jae
sbb
mov
addr16
dec
in
subb
jo
push
ret
imul
fcoms
out
sbb
into
stos
sub
mov
and
cmpsl
decl
das
mov
xchg
mov
jbe
cmp
sub
and
bound
out
mov
jbe
push
mov
push
gs
dec
mov
mov
rclb
scas
jge
mov
and
int3
or
cmp
insl
cmp
in
lea
js
ljmp
adc
ret
and
cld
adc
jno
mov
or
mov
xor
jecxz
int3
outsl
daa
pusha
mov
iret
iret
leave
out
mov
rclb
imul
stc
xchg
cs
xchg
bndldx
push
in
xchg
ja
inc
push
cmp
aas
mov
mov
out
adc
xor
mov
ds
mov
or
test
sub
lods
push
inc
mov
adc
idiv
dec
outsl
sbb
filds
adc
cmc
dec
inc
xchg
and
cmp
test
adc
push
cmp
adc
jmp
jecxz
clc
mov
les
jns
xlat
adc
repnz
aad
push
sbb
sti
mov
addr16
pop
xchg
icebp
cwtl
adc
mov
mov
fadds
adc
je
or
daa
movsl
repz
dec
sti
inc
les
xor
mov
cmp
jo
aaa
outsl
add
bound
push
sub
xchg
jmp
push
add
test
idivl
lods
cmp
sub
push
add
in
rorb
push
in
loope
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
jge
cmp
in
adc
int
adc
roll
lods
sbb
mov
test
pop
xorl
pop
push
imul
jbe
cmp
xchg
mov
push
in
cld
mov
sbb
loope
pop
pusha
out
test
insl
in
or
xchg
je
jae
sbb
dec
cmp
inc
arpl
sub
xor
imul
mov
mov
cltd
movsb
scas
lcall
adc
popf
and
outsl
sbb
push
jns
cmp
mov
xor
test
sub
iret
daa
popf
add
add
sahf
scas
sub
add
popa
adc
xor
fwait
cld
mov
add
mov
adc
sub
ljmp
add
out
and
mov
pushf
in
std
mov
and
add
push
jno
insl
mov
lods
add
icebp
pop
bound
fcmovnbe
testb
int
sahf
and
inc
inc
push
xchg
pop
cmc
add
lock
mov
pushf
cmp
stc
mov
inc
sbb
xchg
mov
pop
jbe
pop
test
les
lods
pop
dec
jecxz
jo
and
mov
idivb
lret
xchg
test
pop
lret
xlat
test
jl
xchg
add
mov
ret
push
mov
adc
or
mov
das
sbb
add
nop
or
andb
pop
pop
push
push
xchg
imul
mov
push
pop
movsl
scas
addr16
add
mov
repz
fwait
push
jb
jmp
aaa
int3
fiadds
imul
data16
sub
push
fdivrl
or
lcall
movsl
data16
inc
fcompl
mov
sbb
in
call
pop
mov
jbe
xchg
jg
adc
test
and
pop
pop
cmpsl
faddl
lods
sbb
xchg
jecxz
xor
rcll
pop
jno
rorl
adc
xchg
fists
pop
ds
cmp
adc
cmp
or
test
xchg
add
sbb
and
sub
and
fs
xchg
dec
cwtl
rorb
xchg
divl
xchg
lods
jo
loopne
cvttps2pi
push
std
repnz
xchg
xor
fwait
mov
in
pop
xchg
in
testl
fidivs
push
movsb
lahf
sbb
add
rcrl
inc
fidivl
and
and
xor
jl
xor
insl
cmp
loope
mov
rol
adc
push
pop
mov
sbb
out
aad
mov
leave
jno
cmp
push
pop
dec
adc
mov
cwtl
shll
jecxz
in
mov
sbb
inc
cli
sbb
dec
test
in
mov
and
push
inc
jl
movsb
inc
pop
addr16
inc
rorl
cs
out
lret
daa
std
popf
add
jb
popf
xchg
sub
repz
add
push
jle
rorb
int3
xchg
rcll
orb
jmp
cmp
outsb
mov
xor
push
inc
jp
sbb
outsl
dec
mov
mov
aas
sub
scas
insb
addr16
sub
in
mov
data16
and
outsb
pop
sub
in
imul
xrelease
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
andl
adc
adc
adc
xchg
das
pop
dec
fwait
lods
orb
add
xchg
sahf
leave
ljmp
mov
pop
addr16
cmp
xlat
fcompl
xchg
int3
inc
sub
aas
or
cmpb
sub
mov
and
mov
dec
in
outsb
pop
cmp
out
fidivrl
scas
xchg
or
add
addr16
movsl
pop
adc
leave
into
pop
addb
idivl
gs
adc
adc
pop
push
xor
repnz
int
insb
cmp
pop
movsl
std
fwait
mov
mov
mov
xchg
lods
and
in
cmp
push
sbb
jb
std
mov
jmp
mov
test
fs
dec
xchg
loopne
push
mov
fwait
mov
clc
adc
lret
in
sbb
int
mov
mov
adc
mov
add
in
in
push
jns
xchg
data16
push
sbb
mov
mov
inc
jl
pushf
adc
jno
mov
mov
jecxz
stos
jmp
scas
jmp
xchg
daa
int3
shll
outsb
test
push
in
fs
jae
add
xor
xor
mov
inc
push
in
cli
iret
arpl
repz
sub
xchg
mov
push
std
bound
insl
mov
mov
sbb
xchg
jmp
daa
pop
dec
fsubrp
xchg
pop
pop
sti
jnp
inc
scas
sub
int
in
pop
repnz
out
and
adc
and
xor
adc
jb
jbe
dec
mov
mov
xchg
psadbw
sbb
mov
pop
out
idivl
lret
repz
insb
mov
fmull
xor
outsl
in
jg
and
js
movsb
jle
sbb
jmp
or
add
fcoml
clc
rol
dec
inc
nop
cli
rorl
lods
and
add
sub
roll
sahf
negb
sbbb
adc
cld
in
or
and
or
mov
dec
shrl
mov
push
inc
pop
inc
repz
scas
jae
das
mov
push
jnp
dec
xchg
adc
push
jle
or
inc
jns
jae
inc
mov
mov
into
outsl
jecxz
fdivr
mov
dec
sbb
jno
repz
daa
sbbb
xor
jg
pop
iret
lods
shrb
pop
rcll
loop
xor
mov
jecxz
ss
imul
sahf
add
popl
sahf
in
mov
sub
jge
lea
or
in
scas
mov
int3
xor
adc
daa
scas
add
mov
cli
cli
aad
cbtw
ds
ss
ljmp
out
imull
push
shlb
xchg
ja
js
xchg
jb
mov
add
push
push
popa
mov
pop
dec
insl
push
stos
mov
mov
push
jp
in
test
lds
mov
nop
mov
js
loop
jno
inc
jge
xchg
sbb
xor
aam
stos
adcb
aam
xor
mov
loope
push
iret
or
in
scas
ja
mov
rcll
mov
cs
inc
sub
mov
xor
lds
push
push
icebp
push
scas
mov
and
xlat
arpl
push
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
pop
add
adc
adc
adc
jl
lret
rol
popa
mov
cltd
lea
orl
aaa
fimull
outsb
es
adc
aas
xchg
cmp
mov
push
jl
popa
sbb
adc
lret
inc
sub
mov
mov
inc
inc
push
or
pop
cmpsb
fcomps
outsl
jne
inc
mov
mov
leave
xor
sub
fstps
add
fildl
mov
and
xor
popl
lret
and
mov
inc
repz
mov
mov
cmpsb
mov
adc
xlat
add
cmpsb
mov
loopne
stos
movsb
mov
outsb
add
daa
cmp
jl
cmp
push
mov
cmp
inc
or
ret
xchg
cltd
mov
dec
jle
in
xor
repz
shr
stc
mov
push
cwtl
mov
int
aas
int3
les
mov
fimull
or
jns
jl
adc
sub
stc
jo
gs
mov
insl
and
js
adc
jno
mov
mov
mov
aam
rcr
mov
sbb
rorb
jg
enter
xor
add
sbb
rcrl
arpl
loopne
mov
or
adc
int
enter
in
sbb
ljmp
pop
cltd
xchg
or
outsb
out
sbb
add
xchg
mov
cmp
jo
inc
cmpb
adc
push
inc
js
cmp
fnstsw
mov
insb
in
sub
jae
sub
pop
daa
mov
jae
and
mov
cmp
das
aaa
repnz
icebp
xchg
daa
push
adc
insl
sbb
fdivl
mov
push
sbb
mov
adc
xor
jecxz
pop
mov
dec
adc
xor
movsl
mov
xchg
xor
sbb
aam
into
xchg
mov
insl
aam
or
scas
insl
dec
nop
cmp
mov
mov
dec
mov
fadds
lret
fdivl
sub
in
sbb
test
adc
and
mov
aad
mov
rorb
pop
pop
pusha
dec
dec
jbe
mov
enter
inc
mov
dec
in
inc
add
or
lahf
adc
pop
pushf
sbb
movsl
adc
mov
adc
fimull
or
aaa
shrl
iret
inc
inc
xchg
sbb
dec
xor
rol
into
xchg
int3
push
push
scas
icebp
pop
sub
jno
sahf
mov
mov
adc
lcall
mov
imul
add
sbb
sbb
adcb
aam
orb
sbb
or
int
jns
adc
pushf
dec
push
add
bound
js
pop
shll
cmp
cmpsb
lods
jae
pop
mov
add
aaa
sarb
xor
lds
dec
pop
adc
jae
mov
push
repnz
fbld
adc
incb
out
into
subb
mov
mov
sub
sbb
repz
sub
adc
push
ljmp
in
jns
cmp
sbb
xchg
mov
push
inc
jge
push
ja
jbe
aad
shll
add
in
loope
jmp
fmuls
sbb
fdivl
adc
int
adc
cmp
out
mov
or
cmpsb
mov
push
repz
pop
jns
push
sub
lock
adc
mov
pop
lret
scas
jmp
xchg
pop
add
stos
rep
lods
xchg
pop
push
movsl
test
lahf
dec
push
cli
dec
mov
xchg
shrb
add
dec
roll
pop
outsl
inc
leave
lods
dec
xor
push
jp
inc
shll
inc
mov
loopne
xchg
push
mov
les
xchg
fcoms
icebp
mov
cld
sub
and
into
or
jmp
jecxz
pop
aam
or
fiaddl
clc
fcomi
std
insb
iret
sbb
xchg
cmp
add
ss
cli
in
adc
std
pop
add
std
mov
repnz
arpl
loop
fldl
fisttpl
negl
out
add
lock
les
cmp
into
and
add
xchg
push
stos
in
cmp
out
and
pop
movsb
hlt
xor
je
jmp
mov
nop
add
into
mov
add
lea
inc
cs
push
push
ljmp
jle
inc
sahf
aaa
add
mov
xchg
inc
enter
pop
fs
jbe
in
outsb
icebp
js
outsl
pop
sub
out
aas
data16
cmpsb
lods
sbb
mov
sub
movsl
mov
in
movsb
add
xchg
and
cmp
xchg
rcrl
pop
aad
push
fnstenv
stos
pop
inc
int3
inc
lea
and
pop
adc
jo
ficomps
mov
adcb
iret
jns
test
or
idivb
in
rcll
mov
mov
lods
adc
or
aad
sti
pop
clc
mov
xor
arpl
sub
pop
jg
mov
roll
xchg
adc
sub
add
xor
dec
lock
mov
cmovbe
pusha
adc
sbb
out
and
inc
inc
dec
jl
cld
sti
cmp
clc
pop
sub
sbb
mov
jno
push
lret
adc
sbb
out
push
mov
add
adc
jg
outsb
sub
dec
lret
fs
in
push
mov
out
cwtl
dec
in
pop
out
cmp
outsl
std
aas
xchg
push
mov
jns
xor
repz
cmp
pop
sub
dec
cmp
fldt
aad
pop
mov
pop
cmc
addb
fs
in
inc
and
push
mov
push
ret
xchg
scas
mov
out
push
fisubrl
inc
lods
lcall
sbb
push
sbb
addl
lock
jns
jl
mov
fwait
pushl
clc
adc
or
jo
mov
dec
mov
push
jmp
xor
adc
movsb
bound
ret
pop
popa
std
fcmove
sub
xchg
adc
mov
outsb
jecxz
faddl
arpl
or
ja
mov
mov
out
push
and
mov
mov
lea
mov
pop
mov
xor
loope
roll
xchg
push
cwtl
scas
inc
or
xchg
jg
mov
test
dec
sub
out
push
fbstp
cmp
jnp
lds
decl
ret
push
bound
out
sbb
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
xor
xchg
js
int3
adc
int
adc
pop
imul
jbe
xor
test
call
mov
dec
fsubr
aas
aam
pop
lds
add
rcrb
dec
outsl
pop
push
aam
push
gs
xchg
push
xchg
pop
outsb
push
jle
je
cmpsl
dec
dec
not
inc
sbb
jbe
pop
adc
cs
jbe
cmpsb
or
subb
pop
cmc
lret
dec
adc
fisubs
mov
jle
lods
xchg
cmp
stos
inc
xchg
lods
mov
cmp
shrl
push
js
insb
test
jb
fs
or
lret
inc
testl
dec
bound
jp
lods
daa
rcl
add
popf
inc
mov
jmp
push
jle
sub
scas
mov
mov
or
subl
dec
insl
jmp
xor
sbbb
push
loope
or
jle
inc
and
dec
scas
in
out
mov
add
int3
imul
dec
fsub
loop
bound
xchg
mov
lods
xchg
int3
pop
das
popa
mov
cmp
into
xchg
rcll
lea
xor
add
rclb
push
cmp
push
jle
adc
xchg
mov
shrb
dec
xchg
fdiv
cli
push
jge
xchg
stc
cmp
rol
into
pop
ret
jle
adc
xchg
in
mov
sub
inc
adc
inc
mov
dec
mov
frstor
sub
lods
jno
pop
push
jge
mov
sub
pop
sbb
mov
or
mov
test
lock
add
sbb
scas
ret
out
test
lea
ja
outsl
or
adc
xchg
push
jmp
xlat
xor
enter
or
and
sbb
out
and
shrb
dec
nop
movsl
aam
mov
mov
loop
arpl
in
mov
jnp
iret
fldcw
in
xchg
lea
cmp
insl
inc
dec
int3
mov
xchg
mov
data16
aaa
inc
mov
jmp
js
fisttpl
test
imul
dec
enter
repz
jmp
sbb
push
stos
and
pop
mov
dec
inc
adc
mov
mov
ret
outsl
repz
lret
loope
mov
insb
jmp
icebp
inc
inc
pop
hlt
loop
aad
sbb
std
hlt
sbb
int
dec
lds
fiaddl
pop
sbb
cmp
lahf
cwtl
pop
sbb
mov
lock
cmp
xchg
mov
movsb
ret
mov
cmp
cld
movsb
add
mov
sbb
mov
push
mov
push
add
rcll
cmp
jp
aaa
add
xor
and
mov
pop
push
adc
ds
dec
cmpsb
dec
pop
cmp
lods
push
push
add
or
stos
jmp
xchg
loope
insl
mov
push
jle
test
add
xor
fistl
out
cld
rcl
xchg
lds
loope
roll
in
leave
rorl
push
jo
mov
int3
testb
int3
rolb
jecxz
lahf
arpl
mov
or
add
lds
out
clc
jle
fndisi(8087
out
pop
out
es
popa
add
sbb
mov
push
test
pop
test
enter
sbb
iret
outsb
clc
ss
repz
rolb
mov
mov
test
jecxz
dec
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
lods
in
js
les
adc
adc
adc
scas
mov
test
and
ror
test
mov
mov
fucomp
rcrb
jl
pop
inc
rorb
out
divl
sbb
mov
sbb
sbb
mov
pop
and
pop
imul
jecxz
xchg
aaa
popa
sbb
xor
and
dec
sbb
rcrb
sarb
cmpsb
call
mov
in
adc
call
fisubl
add
aam
out
insl
test
loop
in
xchg
in
lret
push
ficompl
cmp
xchg
add
and
fimuls
pop
push
inc
gs
sbb
jge
or
push
xchg
rolb
enter
push
hlt
sbb
bound
xchg
push
mov
cltd
jo
mov
outsb
je
stos
push
mov
xchg
int3
xadd
cwtl
inc
xchg
xlat
jno
push
int3
pushf
je
mov
and
and
push
push
xor
es
cmc
cmp
mov
imul
cltd
dec
mov
or
mov
push
or
push
inc
cmpsl
mov
cmc
dec
loope
lds
nop
data16
dec
roll
or
mov
and
and
pop
xlat
sar
scas
push
cmpsb
jle
fsubrs
inc
fnstenv
sub
adc
lret
arpl
inc
mov
xor
inc
dec
mov
dec
mov
loope
inc
mov
stos
xchg
jo
inc
add
xchg
pop
nop
xor
aam
repz
jmp
ficomps
mov
je,pn
enter
call
push
insb
mov
xor
and
and
cltd
packssdw
push
out
mov
lea
push
push
repz
loop
inc
test
push
pop
testl
test
adc
xchg
inc
xor
dec
sbb
sbb
andl
rclb
fwait
vmread
sbb
sub
scas
push
pop
pop
insl
ss
ret
sbb
pusha
inc
push
gs
cmp
pop
cmpsb
sbb
insb
shlb
dec
in
int
xchg
jnp
hlt
ja
or
inc
jge
hlt
push
stos
pop
addr16
inc
scas
push
xchg
loope
fistl
mov
sbb
push
test
fucomip
pop
movl
mov
xchg
jo
std
adc
or
dec
cmc
and
jno
loope
jnp
push
mov
test
arpl
mov
in
aad
sbb
xchg
add
ja
out
sbb
pop
xchg
xor
mov
fs
lods
mov
pop
pop
mov
imul
in
imulb
cmp
adc
insl
jecxz
or
pusha
loope
jns
out
or
mov
leave
ljmp
xlat
add
push
inc
xor
not
sbb
lea
dec
push
xor
std
outsb
aaa
push
or
mov
stos
add
xor
out
cs
or
rcll
jg
mov
mov
push
sub
push
xor
stos
stos
mov
fs
push
cmp
cmp
addl
shlb
psubusb
les
mov
jl
jno
outsb
repnz
xor
sbb
data16
rclb
mov
inc
xlat
xor
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
pop
and
jle
ret
int
adc
inc
xor
sub
xchg
pop
push
cli
pusha
mov
mov
gs
dec
add
mov
ds
pusha
jl
data16
jecxz
pop
jns
inc
dec
jecxz
or
es
ret
push
mov
fimull
jl
xor
mov
test
push
cs
insb
inc
xchg
mov
push
negl
shlb
ja
cmp
enter
jno
cmp
std
ds
xor
push
in
aad
ja
sbb
ss
jmp
jnp
and
inc
roll
shr
loop
pop
push
cld
lahf
dec
adc
xchg
sti
add
fwait
push
sub
outsl
lods
push
fiaddl
xchg
stc
fstpt
lret
pop
xchg
inc
cmp
fdivrl
push
fsubrs
or
or
inc
leave
pop
leave
lret
and
fstpt
popl
cmpsb
leave
outsl
pop
jb
dec
repnz
dec
xchg
cmp
popf
ja
ret
jbe
loopne
xor
lret
fmul
cmp
shl
mov
ja
notb
pop
and
pop
push
mov
xchg
int3
jecxz
cwtl
shl
rcrb
jns
sub
lret
fmull
lock
or
fstpt
mov
icebp
ret
mov
movsb
or
adc
les
inc
inc
mov
stc
mov
pushf
rolb
push
mov
shr
das
adc
icebp
xchg
lret
sahf
and
incl
cmc
js
addb
jecxz
movsb
mov
xchg
fmuls
nop
or
mov
lea
inc
cli
fstpl
inc
xchg
loopne
loop
shrb
inc
shl
decl
push
fsts
imul
es
rorb
scas
push
out
lcall
sub
adc
sbb
js
imul
stos
lea
pusha
fidivrl
push
pop
dec
jb
call
lds
fcompl
orl
and
inc
dec
dec
out
jmp
ret
je
out
arpl
push
aam
mov
lea
sbbl
cmp
lret
shrl
js
mov
inc
das
xor
arpl
sbb
jge
adc
push
subb
push
cld
cmpsb
ja
pop
sbb
xor
mov
pop
and
sbbb
xor
test
pushf
dec
pusha
mov
mov
hlt
call
mov
push
inc
adc
dec
es
in
movsl
pop
cmc
es
inc
dec
repz
bound
stos
ja
insb
jl
jp
push
add
pop
mov
ljmp
sub
mov
cmp
arpl
pushf
cld
int
cmp
pop
mov
out
pop
dec
sar
push
xchg
jns
and
mov
sub
inc
xchg
pushf
or
mov
dec
scas
pushl
movsl
add
jae
cmpsb
ret
rclb
movsl
repnz
fmuls
jecxz
inc
dec
and
test
fs
jnp
test
shll
mov
push
mov
xchg
xchg
lods
cmp
pop
push
push
inc
mov
sub
dec
dec
mov
jmp
sub
outsl
fmulp
push
js
mov
push
mov
iret
add
enter
add
dec
in
das
xor
les
dec
test
push
out
sbb
push
or
cmp
and
push
sbb
js
or
in
leave
loopne
mov
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
xchg
adc
adc
adc
adc
jne
imul
rorl
mov
push
mov
cmp
adc
js
jno
cmp
dec
mov
fisttps
jbe
cmp
out
inc
or
xchg
add
jno
lret
xor
jno
push
call
jo
push
adc
pop
sbb
inc
rclb
push
insb
loopne
jbe
loopne
push
mov
cmp
cld
icebp
negl
jle
xchg
dec
mov
dec
movsl
xor
and
cmp
jo
xlat
inc
in
jae
push
sub
in
in
cmpsb
and
jle
inc
push
frstor
lret
clc
push
insb
or
push
sub
or
outsb
scas
jb
out
scas
dec
inc
in
inc
stc
in
push
cmp
shll
pop
xchg
adc
lahf
fiaddl
inc
mov
mov
or
cmpsb
mov
add
lret
mov
push
push
lods
es
stos
mov
imul
jo
cmp
fdivs
mov
push
xchg
int3
cmp
push
rcrl
sahf
roll
mov
jne
test
add
test
test
jecxz
xorb
mov
and
mov
shlb
arpl
sti
push
jmp
xchg
sbb
test
or
mov
jns
push
push
mov
into
dec
clc
lcall
addr16
ljmp
sub
test
gs
fsubl
or
addr16
sbb
ss
adc
cltd
cmpsl
fmull
add
aam
cld
mov
push
in
jp
jmp
add
dec
dec
jmp
or
loope
pop
cmp
jecxz
repnz
pop
aam
hlt
fdivrp
fnstenv
xchg
push
sti
sub
add
jne
sub
inc
psadbw
stos
mov
out
push
ljmp
sbb
jns
inc
testl
aam
imull
sub
test
pop
push
fcmovnbe
adc
add
loopne
dec
loopne
and
mov
loop,pn
cld
aas
popf
out
and
pusha
push
cltd
out
jge
push
adc
mov
fldenv
sbb
inc
pop
or
or
xchg
dec
sahf
xchg
in
pop
sahf
test
clc
jle
mov
mov
arpl
add
xchg
lods
std
outsl
sbb
sbb
pop
xchg
fs
xchg
ret
mov
sti
movb
in
mov
or
scas
jo
fwait
jmp
mov
push
shll
ds
pop
sub
pop
jle
daa
dec
pop
fistps
jl
pushf
out
movsb
sub
stos
imul
mov
adc
mov
mov
mov
mov
or
and
fnstenv
push
lret
cs
and
pusha
fwait
inc
jbe
ret
inc
aad
mov
outsl
dec
push
or
sub
dec
sbb
test
mov
inc
pop
lock
sbb
and
stos
ja
sbb
mov
xchg
cmp
sub
scas
inc
loopne
rclb
mov
xchg
push
sbb
repz
pusha
loopne
push
inc
add
decb
sbb
and
scas
loop
repnz
dec
and
mov
mov
js
jnp
data16
shl
mov
subl
xchg
stc
and
pusha
mov
cmp
shll
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
aad
rep
pop
mov
adc
adc
adc
sti
stos
sbb
psadbw
mov
dec
jle
or
or
icebp
ja
pop
icebp
mov
push
cmp
out
les
jns
cmp
and
int3
adc
fisubs
cwtl
popa
lea
inc
and
shlb
sub
sbb
je
inc
es
test
cmc
out
mov
cwtl
and
cmp
pop
sbb
adc
shr
idivl
mov
sub
mov
dec
and
stos
xor
mov
jp
test
clc
inc
mov
cmp
out
push
jae
clc
inc
nop
add
fisttps
sub
mov
popa
testb
push
imul
pop
divb
rcpps
cmpsl
iret
cmpsb
int
push
or
add
stc
adc
adc
jb
sbb
dec
pop
pop
mov
in
sbb
test
or
fistpl
call
clc
or
cmp
dec
xchg
jmp
outsb
cltd
repnz
sbb
xchg
sub
or
dec
sub
xchg
dec
mov
xchg
or
aam
not
push
rorb
push
lret
fisttpll
add
jle
sbb
data16
lods
pop
pusha
push
or
fsubrs
je
mov
rclb
mov
je,pn
add
push
lret
mov
les
pop
cs
outsb
push
in
add
mov
xor
popa
cmp
mov
pop
aas
jo
fimull
fisttpl
push
mov
or
dec
xchg
xor
pop
or
lods
cs
mov
pop
in
popa
stc
and
ja
cmpsb
sbb
xor
daa
lea
push
pushf
lcall
roll
mov
icebp
dec
iret
push
out
insb
inc
cwtl
imul
inc
adc
mov
mov
fstps
mov
cmp
xchg
xor
mov
push
dec
mov
sbb
add
rcrl
cli
xchg
jge
dec
test
mov
scas
fwait
pop
stc
pop
xor
inc
int
inc
mov
mov
test
dec
imulb
dec
lcall
fiaddl
sub
sub
mov
or
jecxz
inc
cmp
and
aam
in
hlt
xlat
sti
cld
xchg
mov
incb
xor
lea
add
adc
out
adc
and
fs
dec
xchg
and
arpl
mov
repz
hlt
or
out
add
cmp
stos
xor
jbe
push
test
int3
and
cli
fidivrl
rol
push
arpl
jne
sbb
pop
enter
lods
mov
jp
jmp
jle
andb
jp
pop
sub
add
jecxz
jb
push
and
ds
or
loope
movsl
ret
sti
leave
inc
test
aad
dec
pop
aas
pop
sub
out
xchg
or
mulb
cmp
pop
jns
frstpm(287
mov
mov
in
sub
aam
sbb
mov
jae
ret
ja
inc
mov
mov
cwtl
bswap
or
dec
addb
lods
sbb
repnz
cld
adc
leave
jnp
psraw
sbb
inc
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
aas
je
shrl
adc
lods
loopne
add
cmp
int
out
fnstsw
push
out
movsl
and
dec
add
mov
pop
test
mov
test
arpl
jmp
cmp
mov
iret
rclb
js
clc
push
sub
fwait
aam
push
cmpsb
mov
in
jle
jg
cmp
jp
pushf
cmp
sahf
sub
dec
fildl
pshufw
adc
add
pusha
inc
or
lret
call
add
out
arpl
mov
inc
gs
xor
cmc
sbb
jne
and
adc
enter
loopne
dec
push
sub
push
pushf
ret
insl
jecxz
int3
push
insl
leave
mov
inc
xor
ret
out
mov
push
jo
inc
push
dec
repz
rorl
xchg
add
int3
pop
jecxz
pop
mov
inc
sbb
mov
cmc
xchg
xchg
push
jo
call
sbb
fnsave
push
hlt
push
pop
icebp
imul
pop
push
pop
imul
les
cmp
sbb
cmp
pop
fcmovnu
enter
ljmp
cltd
inc
out
out
in
daa
outsb
jmp
jp
dec
fmulp
xchg
cmp
add
arpl
fs
lods
testb
jb
hlt
lahf
pop
outsb
inc
sub
gs
orb
sahf
mov
mov
test
push
jbe
dec
mov
mov
clc
je
das
mul
out
adc
ret
or
xchg
das
test
in
test
mov
pop
mov
add
mov
imul
inc
into
fdivs
dec
sub
dec
int
sbb
test
cltd
ss
and
xlat
outsl
ror
jns
xor
test
iret
jae
mov
mov
ds
inc
sub
lds
dec
ds
or
xor
and
notl
push
cmp
addr16
mov
cmpsl
fiadds
dec
pop
lock
push
sbbb
xchg
push
mov
pop
lahf
jg
or
sub
push
test
int3
loope
test
push
incb
mov
inc
out
cmp
sti
andb
aaa
or
shlb
scas
rcl
repnz
ffreep
pop
pop
cltd
dec
int
js
mov
and
call
inc
int3
adc
aaa
sarb
xor
jo
xor
lods
add
adc
hlt
gs
das
cmp
in
mov
leave
push
xchg
xor
aam
repz
xchg
dec
sbb
sub
xchg
mov
add
ret
or
push
mov
aas
xchg
dec
out
dec
aas
cmc
outsl
mov
inc
rorl
mov
add
adc
lea
or
in
mov
aad
inc
out
xchg
int3
xchg
fld
inc
or
in
or
int3
repnz
jo
jp
mov
fdivs
aas
shlb
cld
sub
xchg
arpl
shl
xchg
sub
xchg
sbb
es
mov
cs
imul
and
stc
aam
inc
push
jecxz
aad
push
ficoml
in
dec
xchg
bound
std
dec
xor
sbb
xchg
cmp
adc
mov
sub
jno
fcmovu
bound
xchg
pop
pop
negl
push
push
arpl
push
in
mov
sbb
cmp
stos
filds
cltd
test
rorl
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
pop
out
js
mov
adc
inc
and
ffreep
dec
lods
stc
adc
adc
jb
fs
repnz
xor
mov
xlat
inc
test
pop
mov
mov
ds
add
aaa
shlb
dec
sbbl
cmp
mov
sahf
dec
add
in
scas
dec
sub
mov
mov
ja
insl
cmc
mov
out
and
lcall
push
scas
pusha
aaa
setp
jne
gs
adc
lret
fwait
xchg
push
ss
pop
aad
mov
dec
push
sahf
inc
cmp
int3
push
jo
lcall
mov
mov
sbb
pop
incb
mov
scas
jns
pop
cmp
popf
iret
int
daa
ja
stos
xor
insl
ret
and
xchg
xchg
dec
push
pop
push
sahf
mov
movsl
xchg
sbb
cmc
xchg
or
fstl
dec
test
adc
push
insl
inc
fsubs
loop
and
out
xor
test
je
movsl
aaa
pop
lret
mov
pop
not
inc
imul
ret
addr16
test
cmc
pop
in
sbb
pusha
ljmp
dec
aas
call
push
aam
imul
mov
inc
clc
pop
sti
sbb
adc
mov
push
repz
or
and
or
sbb
and
or
les
mov
jns
jno
push
fsubrl
jge
in
lret
addr16
in
rcr
xchg
or
sbb
fbstp
filds
popa
xchg
push
das
rcr
int3
loope
int
push
arpl
ret
add
andl
dec
adc
sbb
lcall
sahf
mov
pushf
jne
xlat
mov
add
mov
movsl
das
cmpsb
jl
aas
insb
push
adc
test
popa
ret
lock
sub
add
cmc
out
pop
mov
in
mov
test
adc
jae
xchg
adc
dec
push
jle
or
mov
pusha
std
push
mov
outsb
fwait
jp
and
cmp
or
repnz
je
push
push
jne
jl
into
inc
repnz
cltd
movsb
push
arpl
jb
outsl
enter
hlt
aad
das
inc
push
cld
in
arpl
pop
or
pop
inc
pop
lods
daa
xchg
ljmp
addl
jo
sahf
mov
add
xor
les
or
pop
test
sbb
xchg
mov
fsubrl
jbe
and
iret
insl
xor
sbbb
shr
ja
adc
mov
push
ror
loop
in
add
and
or
jl
sub
ret
shrb
loop
jle
xchg
outsb
pop
outsl
and
mov
scas
xchg
ja
xchg
sub
test
mov
mov
sar
bound
cltd
jmp
mov
push
pop
sbb
pop
and
xor
pop
scas
add
fsubrs
and
lahf
in
call
and
rol
mov
mov
repz
arpl
js
mov
out
inc
lret
enter
popf
in
sub
cmp
xchg
dec
cmpsb
xchg
adc
aas
mov
popf
inc
addl
enter
mov
jg
add
fisubl
xor
lret
rorb
inc
addr16
mov
and
dec
aas
pop
subb
std
ss
pop
inc
push
pop
adc
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
inc
cmpb
adc
adc
pop
pop
loopne
lahf
dec
nop
mov
jno
inc
out
add
adc
in
in
and
mov
hlt
xor
cmp
inc
push
jmp
popw
into
dec
xchg
mov
orl
outsl
lret
push
push
icebp
dec
dec
add
add
cmpl
ss
xchg
pushf
mov
movsl
loope
loop
dec
lret
out
add
std
adc
adc
clc
cwtl
mov
jl
pop
mov
xor
cmpsl
lds
xor
jl
loopne
jmp
in
movsl
fistpl
pop
pop
xchg
push
icebp
in
iret
jmp
outsb
repz
ffree
std
jle
fwait
je
add
inc
daa
inc
xchg
rorb
pop
call
push
leave
fdivrs
cmp
insl
dec
negl
in
jne
imul
cmp
cmp
lahf
lods
dec
sbb
sbb
sub
repz
jbe
clc
ss
add
mov
adc
or
push
add
mov
inc
gs
imul
insl
rcrb
les
mov
push
add
or
cmc
aam
nop
imulb
addl
test
mov
or
aam
sbb
enter
insl
adc
mov
sbb
aaa
jecxz
inc
cmpsb
in
lea
xchg
fs
movsl
cmp
xchg
push
arpl
and
push
shr
jg
mov
daa
push
mov
pop
out
xchg
test
dec
jne
ja
xchg
ja
aas
pop
iret
test
push
xlat
xchg
and
out
out
xor
sbb
add
add
pusha
insl
subb
rorb
das
mov
pusha
stc
daa
movsb
unpcklps
scas
or
jnp
mov
jge
push
pushf
popf
dec
push
addr16
inc
xlat
movsl
and
push
insl
fdivp
adc
andl
enter
push
adc
sbb
shl
scas
sub
icebp
xchg
cs
int
sahf
filds
push
repnz
push
shll
lds
scas
mov
inc
dec
shll
data16
mov
ficomps
js
pop
not
xor
div
mov
xchg
pusha
adc
pop
stos
fs
jb
push
lret
or
jns
imul
testl
fbstp
adc
fcmovnbe
cmp
scas
lods
mov
and
scas
and
mov
xor
or
inc
ret
xchg
or
mulb
sub
loop
mov
xchg
shl
xchg
rolb
fimull
mov
jnp
cmpsl
out
repnz
add
bound
enter
aas
and
sub
rcr
mov
repz
outsb
fcomip
popf
test
xor
shlb
mov
cmpb
clc
loopne
sub
adc
popa
push
shll
nop
ss
and
pusha
fwait
cmp
aam
sbb
outsb
movsb
add
ja
push
icebp
imul
enter
xchg
fisubl
call
jno
fcoml
dec
and
rclb
adc
mov
sbb
jne
aam
add
sahf
mov
mov
push
xchg
mov
ljmp
mov
pop
xor
add
adc
xchg
out
mov
fimull
mov
inc
xchg
xchg
xor
adc
and
xor
das
loop
lea
push
rolb
scas
pop
dec
jo
std
sub
aam
cmp
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
adc
cld
xor
lret
pop
push
mov
in
xchg
mov
mov
jo
jne
add
jb
ficompl
cmp
mov
cmpsb
insb
mov
out
fidivrl
sbb
rorl
js
or
aad
test
popa
push
rolb
cli
les
mov
and
sub
popf
enter
and
es
and
lods
mov
test
fcomps
mov
sub
cs
stos
out
and
stos
xor
dec
mov
subl
in
pop
ficoms
aad
into
out
and
stc
rol
mov
or
loop
xor
imul
setp
fldenv
adc
std
pop
jecxz
cmp
or
icebp
sti
or
ffreep
in
inc
stos
jnp
cs
mov
fs
push
sub
fs
push
outsl
mov
add
and
loop
lods
sub
lea
mov
ja
out
out
xor
pop
push
vmread
into
mov
subl
data16
inc
js
lods
pop
xchg
cmp
inc
pushf
fsubp
push
aam
jno
sub
test
es
sub
xorb
mov
lods
sbb
mov
call
pop
ror
push
inc
xchg
or
icebp
xchg
mov
xor
pop
scas
mov
fcoml
scas
sub
hlt
xchg
popf
mov
ficomps
in
lcall
aam
push
data16
rolb
fwait
xor
pop
jne
mov
adc
pop
xchg
sbb
leave
mov
rorb
leave
gs
mov
or
pop
sbb
mov
jecxz
imul
push
mov
mov
aad
lahf
pop
fmull
imul
loope,pt
outsb
inc
mov
or
fwait
mov
ja
mov
inc
outsb
inc
mov
ljmp
or
jl
nop
fimuls
js
xor
mov
xor
ds
rep
mov
mov
jl
jb
mov
cmp
pop
cmp
outsb
inc
cs
inc
cmpsb
jo
and
xchg
mov
addr16
jae
sbb
scas
sub
jb
add
adc
popf
hlt
push
push
xchg
movsl
imul
xchg
cmp
clc
jle
cli
mov
out
cmp
fwait
xchg
xchg
outsb
or
das
rcrl
or
lret
test
push
and
dec
sbb
aam
jge
bound
adc
into
xchg
or
fsubl
pop
lock
cwtl
jp
dec
add
lods
sub
test
stos
push
sub
mov
in
cli
cmp
rorb
push
jl
sub
push
push
imul
sbb
adc
lods
lea
popf
icebp
adc
cs
and
pop
jge
mov
fs
enter
mov
sub
sub
and
inc
pop
or
fisubs
add
and
int3
mov
sbb
pop
pop
enter
pop
dec
decb
or
xchg
test
lds
mov
pop
mov
adc
nop
and
and
or
sub
adc
aaa
movaps
mov
pop
sti
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
mov
adc
adc
xor
add
mov
jo
inc
xor
cltd
out
sbb
or
cld
in
sub
inc
ret
imul
mov
cmp
mov
sbb
jl
fwait
inc
andb
lods
pop
adc
test
shlb
mov
and
data16
pop
mov
sbb
pushf
xor
and
inc
inc
xor
cmc
mov
cwtl
ficomps
in
mov
std
jns
adc
jmp
int3
add
test
dec
rcr
stos
mov
push
frstor
mov
pop
popa
mov
push
aam
cmpsb
int
stos
jl
dec
test
mov
inc
loop
clc
scas
leave
mov
lock
cwtl
nop
lods
shll
xchg
aaa
loope
out
ss
ret
lcall
cmp
mov
cmpsl
pop
je
cmpsl
add
jl
dec
adc
cwtl
mov
inc
mov
and
jl
sub
jl
jae
pop
int
jge
ds
inc
or
test
lock
insb
mov
stos
jecxz
mov
pop
je
int
jl
push
test
mov
sub
mov
adc
lret
iret
mov
dec
std
mov
xlat
mov
out
test
adc
imul
add
lret
hlt
pop
xchg
fdivrl
pop
mov
cmpsl
pusha
mov
dec
pop
pop
and
sarl
push
lret
int
sarl
mov
movsb
in
sub
dec
cmpsl
xor
dec
and
adc
leave
and
xor
mov
inc
aas
loop
in
dec
imul
jecxz
jbe
pusha
adc
cmp
fnstcw
mov
das
mov
cltd
xchg
test
fbstp
jb
adc
imul
cmpsl
jl
mov
fstps
out
imul
inc
mov
in
aam
ret
dec
inc
mov
notl
xlat
cmpsb
aam
testb
and
jbe
dec
pop
mov
les
or
mov
stc
clc
cs
fs
call
and
mov
insl
stos
push
mov
mov
fs
or
dec
data16
push
pmaxub
mov
mov
adc
insb
xor
leave
sarl
pop
cmpsb
inc
jle
dec
popa
fcomps
push
mov
adc
lea
out
addb
inc
xchg
ja
add
inc
dec
lea
roll
push
repnz
aad
sbb
mov
jg
add
pop
sbb
or
jns
cmp
jge
fsubr
inc
ret
add
or
inc
dec
jns
xlat
jno
inc
sbbb
pop
or
adc
insb
sub
mov
fcomps
xor
in
cmp
mov
mov
jae
xchg
bnd
adc
test
adc
push
mov
cmp
inc
lcall
popa
dec
push
pop
push
test
sub
cli
xchg
imul
sbb
add
xchg
std
aam
rclb
jg
inc
dec
adc
mov
dec
mov
iret
add
cmpsb
rolb
imul
loopne
leave
out
negl
pop
inc
inc
inc
push
jae
jmp
je
adc
xor
mov
add
mov
pop
lret
xor
repnz
stc
das
jg
jmp
sbbl
mov
cltd
call
mov
push
stos
xor
mov
dec
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
jns
std
jle
test
adc
adc
adc
in
jmp
imul
mov
and
orb
jae
mov
add
sub
mov
cmpsl
repnz
stos
stos
or
adc
mov
ja
sar
lret
stos
xchg
xchg
ss
sub
pusha
in
mov
mov
lods
cmp
mov
out
dec
mov
jge
add
loop
mov
sbb
jae
sub
cmp
in
sub
in
ficompl
decb
inc
out
js
and
in
jo
push
hlt
pop
test
or
jae
sahf
test
cs
popa
cmp
adc
mov
xchg
sub
jns
pop
shll
stos
mov
imul
sarl
fbld
pop
mov
loop
inc
pop
xchg
xchg
pop
pop
insb
jne
add
cs
jno
sub
mov
aaa
les
fxch
mov
dec
push
arpl
jg
pop
fnsave
pop
lahf
pop
loopne
pop
lcall
inc
lret
xor
mov
sub
test
lds
lock
lahf
adcl
mov
pop
adc
mov
psubw
imul
arpl
or
push
sub
pop
pop
pop
sub
popa
lret
mov
mov
mov
adc
push
data16
mov
add
ss
fs
lock
stc
enter
scas
add
sub
mov
cld
cwtl
or
cmpsb
mov
cmp
bound
mov
or
lds
cmp
mov
inc
push
in
push
inc
shlb
scas
adc
or
iret
clc
pop
push
and
test
ret
int
add
jbe
xor
mov
inc
dec
add
insl
stos
in
loop
fsts
sbb
pop
std
test
push
pop
cs
orb
pop
cmp
test
jl
sbb
xor
lcall
jge
mov
add
loop
xor
add
mov
arpl
outsb
aas
lock
aas
cmpsb
lret
arpl
movsb
cs
shlb
pop
dec
jo
aaa
cs
pop
fcomps
xchg
inc
addr16
pusha
ret
pop
outsb
mov
out
push
jns
fwait
mov
pop
cmp
xor
sbb
setge
out
sti
loop
aaa
movswl
jnp
dec
es
cld
mov
dec
xchg
icebp
in
dec
cltd
push
daa
mov
xchg
fiaddl
fisubl
sub
sarl
adc
inc
add
loopne
jp
data16
bound
outsb
pusha
jne
fistl
popf
push
jne
xchg
in
lret
sbb
leave
ret
push
out
mov
mov
lret
add
pop
pop
adc
aas
mov
fstl
push
xlat
test
popa
je
inc
aas
inc
add
out
cmpsb
cmpsl
or
sbbl
xchg
inc
movsl
xchg
jno
mov
mov
push
or
fsubl
mov
mov
repz
push
je
shll
in
add
in
mov
ss
xchg
lods
adc
mov
pop
adcl
push
lea
and
js
mov
mov
sti
lods
push
lret
inc
fldt
or
xchg
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
iret
cmpb
adc
adc
call
push
imul
sub
cmp
xlat
cmp
xor
sarl
outsb
sub
aad
fsubl
inc
insb
cmpsb
sbb
push
loopne
in
das
pushf
mov
sub
fsubp
mov
fnstsw
inc
push
call
cmp
mov
pop
cmc
pop
psubb
mov
xchg
sub
frstor
stos
sarl
ljmp
lds
ja
sub
shlb
in
pushf
out
adc
loop
and
ja
repz
lods
popa
neg
mov
xorl
mov
xchg
sub
add
jbe
cmc
and
scas
dec
mov
cmc
jb
xchg
sub
jmp
or
and
jne
cmp
jp
adc
jo
stos
fsts
test
cmpsb
rcll
lods
sub
add
xor
fdivs
cmc
std
mov
xor
sbb
and
stos
arpl
and
mov
adc
jno
movsl
fisttpll
or
fwait
test
jmp
push
or
and
mov
inc
pop
push
or
negl
imul
fnstcw
mov
jne
loope
repz
xchg
sarl
leave
fst
jge
or
shll
sbb
mov
loopne
cmp
dec
adc
mov
push
or
push
out
ja
push
push
je
mov
inc
outsb
xor
inc
outsb
int
test
scas
ret
and
push
add
data16
xor
ficomps
aaa
jb
sbb
fcoms
mov
ret
arpl
fbstp
mov
sub
in
cmp
jb
scas
xor
adcl
fwait
into
or
cmp
int3
mov
jg
mov
imul
xchg
adc
adc
adc
loopne
in
push
imul
in
sub
push
xor
leave
sub
test
into
mov
test
cmp
ds
iret
cli
subl
mov
lock
out
xor
sub
aad
cmp
pop
aas
push
or
std
sti
call
add
stc
inc
stc
pop
push
lods
jecxz
xlat
xchg
fdivs
jbe
ja
cmc
cltd
adc
nop
das
xchg
es
vmwrite
loope
imul
lock
imul
dec
dec
dec
cmpsb
fsts
dec
push
test
adc
sub
repz
jle
pop
mov
cltd
and
stos
sti
mov
inc
and
test
fsubs
push
imul
cmp
mov
lret
push
mov
mov
mov
mov
mov
xchg
mov
add
push
xchg
test
push
mov
clc
addr16
pop
lcall
mov
mov
sub
sarb
inc
cmp
sbb
mov
nop
mov
xchg
out
jb
mov
pop
scas
push
adc
cmp
cmp
fisttpl
jae
enter
aad
aaa
jo
aas
pop
es
arpl
arpl
mov
cvttps2pi
int3
dec
jae
xor
or
es
insb
out
sbb
dec
mov
lret
xchg
mov
or
sub
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
je
outsb
insb
mov
adc
adc
aad
jbe
inc
pop
sbb
arpl
push
pop
jecxz
sbb
mov
ret
jns
shrb
frstor
sti
lock
add
mov
pop
dec
push
imul
jge
xchg
jle
mov
cld
insb
inc
push
fsubrl
dec
cmp
adc
add
mov
pop
push
pop
in
stos
jmp
in
les
movsb
xchg
cmpsb
icebp
in
add
icebp
ret
jp
xchg
fsts
push
mov
sahf
ret
mov
js
add
movsl
mov
out
or
gs
push
test
dec
testl
fstps
push
out
filds
push
mov
out
sbb
rol
xor
jne
pop
mov
xchg
loope
pop
test
dec
lret
pop
dec
inc
popl
das
fbld
mov
sbb
add
int
inc
xor
inc
addr16
sarl
jp
xor
loop
pop
jge
mov
xchg
cmpsb
add
fwait
mov
cmp
adc
divb
sub
xchg
sahf
jnp
xchg
xchg
xor
inc
mov
push
sbb
lahf
cmp
popa
iret
mov
fistpl
mov
cmc
sahf
jg
pop
fwait
das
dec
jne
mov
fcomi
jge
or
sahf
adc
pop
bound
pop
stos
sbb
add
and
aam
jb
cmp
lea
outsl
mov
and
lahf
push
movsl
mov
pop
imul
dec
cmc
cltd
lret
mov
sbb
ljmp
das
or
pop
and
repz
xor
push
sub
xor
sarb
sbb
xchg
xchg
repz
mov
adc
mov
clc
std
loop
hlt
leave
adc
addb
sub
pop
sub
mov
cltd
jg
lods
push
ror
call
cld
cwtl
push
pop
pop
shll
inc
cmp
fisubl
inc
add
inc
aam
arpl
xor
jne
fwait
xor
nop
jmp
cmpsl
pop
push
add
xchg
inc
mov
jno
cwtl
shll
sahf
jge
test
pop
fldl
jp
fadds
popa
xlat
notb
add
dec
pop
flds
dec
imul
dec
loop
subb
or
mov
jnp
enter
cli
pushf
and
xchg
jmp
mov
mull
pushf
fcomip
popa
sbb
sub
stos
inc
mov
testb
lcall
mov
pop
sbb
mov
pop
cmp
mov
arpl
xchg
popl
xchg
jae
sbb
push
enter
scas
mov
pop
mov
aas
test
out
pop
pop
mov
clc
cmp
fidivrl
jno
xor
mov
add
mov
out
xchg
sbb
xchg
mov
jmp
jecxz
jge,pt
push
xor
mov
mov
stc
sbb
subl
fisubs
inc
adc
dec
xchg
insl
push
adc
rcrl
clc
movsb
mov
loope
xchg
or
mov
mov
push
and
je
add
push
andl
cmpsb
aaa
out
jp
push
out
aaa
test
andl
shrd
jmp
ja
jle
sub
xchg
mov
jmp
or
adc
adc
adc
push
ljmp
push
fsubrl
arpl
adc
inc
addl
push
xchg
fidivs
mov
adc
jbe
lret
jg
xchg
stos
jnp
pop
arpl
xchg
les
lock
lahf
in
fwait
xchg
cmp
add
movsl
mov
adc
je
cmp
test
lods
aas
sub
xchg
push
cmp
jp
sub
mov
test
add
and
leave
lock
cmpsl
sub
dec
xchg
jl
pop
in
into
stos
lahf
sahf
lahf
cli
push
xchg
mov
xchg
mov
jl
out
adc
sbb
cli
ljmp
loope
dec
jne
jo
push
jecxz
mov
xor
rcr
sbb
rorl
add
rolb
pushf
fidivrs
adc
and
xchg
aaa
js
incl
in
pop
mov
cmp
dec
xchg
imul
dec
sbb
test
mov
push
sub
jecxz
mov
movsl
pop
out
cmc
and
mov
cmp
push
or
adc
push
xor
in
inc
push
je
inc
jge
jp
cmp
add
pop
lret
lahf
dec
neg
leave
adc
inc
loope
cmp
mov
lock
adc
push
add
xchg
add
lods
rcr
lea
push
arpl
test
and
jnp
lahf
mov
or
les
inc
into
dec
lahf
sbb
aaa
dec
or
gs
push
sar
movsl
pop
lret
es
bound
aaa
int3
or
add
push
jge
rorb
rcrb
nop
xchg
daa
pop
daa
or
cwtl
enter
mov
xchg
push
mov
jbe
scas
jle
insl
push
popa
cmp
imul
jo
sub
mov
or
push
mov
cmpsb
inc
sbb
mov
sbb
addr16
idiv
pop
cmp
js
scas
sarl
cs
adc
jae
add
jecxz
jecxz
xor
imul
arpl
jmp
or
add
jp
sub
cmp
push
or
loop
jge
jmp
int3
gs
out
sub
jecxz
mov
jp
push
test
mov
out
aad
push
push
icebp
movl
in
pop
cmp
inc
and
inc
jl
cwtl
jg
add
not
gs
sbb
rcl
mov
jmp
jmp
push
ret
into
xor
fiadds
push
mov
pop
pushf
cmc
xor
pop
sbb
inc
and
add
sbb
xchg
mov
iret
and
outsl
push
fxch
inc
mov
mov
xor
pop
mov
dec
dec
jecxz
or
lods
pop
inc
icebp
lea
lods
add
xor
test
sar
test
sbb
jmp
mov
dec
push
out
add
jl
sbb
xor
sbb
push
mov
jae
idivl
adc
add
jbe,pt
mov
push
add
xor
jb
lret
stos
mov
mov
test
sub
movsl
ss
in
sbb
in
or
aad
or
jp
and
stos
add
in
sbb
mov
pop
jae
sbb
js
pop
ja
pop
into
xchg
jo
mov
inc
pop
xor
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
aaa
data16
push
adc
adc
adc
and
int
dec
and
xchg
dec
in
jle
insb
xlat
stc
xchg
sti
mov
fs
adc
and
sbb
lods
sub
ret
dec
loopne
adc
shll
ss
rcrb
inc
rorl
aad
arpl
fldl
add
loopne
dec
int3
inc
mov
sarl
sbb
mov
sub
outsl
sub
cmp
faddl
popf
jge
cmpsl
scas
sub
and
push
mov
movsl
and
ret
lea
mov
xchg
adc
test
xchg
add
pusha
adc
inc
xor
mov
dec
orb
dec
fimuls
pop
cmp
mov
test
add
and
or
roll
sbb
cmp
fnstsw
shrl
mov
ror
ljmp
cmc
mov
lret
out
lods
push
mov
in
aad
cmpsl
mov
sbb
clc
negl
js
jb,pn
in
xchg
enter
xor
cmp
fcoms
icebp
imul
out
mov
sbb
xchg
fsub
pop
sbb
in
mov
shlb
lods
ljmp
inc
aad
mov
jmp
in
mov
sbb
out
ss
sub
ficompl
adcb
adc
ja
in
or
movsb
jmp
mov
mov
repz
jp
scas
pusha
jl
pop
xchg
xchg
das
jne
pop
mov
insl
gs
xchg
mov
mov
mov
adc
jmp
clc
mov
xchg
or
add
xor
psubb
mov
and
add
gs
les
adc
test
adc
and
xor
rcr
adcb
push
es
pop
in
adcl
outsb
and
xchg
mov
std
test
lock
fcmovbe
sbb
xchg
repnz
sbb
jle
lcall
lahf
fsubrp
out
sub
bound
ds
repnz
nop
mov
out
pop
testb
xor
sbb
fcmovu
cmp
mov
test
call
pop
mov
pusha
cmp
test
shll
xorb
std
inc
dec
lcall
aaa
xchg
dec
and
xor
cmpl
and
pop
add
xor
dec
or
xor
stos
lret
insb
hlt
jo
xor
enter
lret
ljmp
inc
pop
pop
cmp
xor
sbb
adc
cwtl
push
jo
xchg
mov
pop
cld
lahf
jmp
xchg
jns
je
jb
fstpt
cli
mov
jno
hlt
mov
mov
inc
mov
es
sbb
dec
out
xor
loope
inc
push
test
push
mov
popf
addr16
adc
pusha
mov
pop
xlat
pop
outsl
mov
inc
popf
push
xor
mov
mov
sarb
lods
push
lcall
dec
shl
into
std
sbb
int3
je
adc
and
shrb
std
or
call
scas
sub
negb
push
push
ja
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
icebp
push
adc
bound
adc
adc
jno
and
gs
fcoml
push
or
cmc
xor
xor
sub
out
ret
in
and
cmp
cmp
adc
repnz
lea
aaa
xchg
fimull
ds
std
lods
es
lods
sbb
out
mov
lods
push
mov
inc
movsb
bound
dec
rcll
or
roll
cli
icebp
fwait
notb
fwait
je
daa
and
movsl
test
test
jmp
mov
or
cmp
mov
xor
pop
mov
aas
and
jb
add
pop
icebp
adc
sbb
aad
int3
add
add
cmpl
pushf
pop
out
push
sub
inc
push
rcrl
cmpsl
mov
clc
pop
sub
inc
adc
cmp
jns
jne
stos
push
adc
call
popf
cmp
out
pop
std
cs
inc
xor
or
sub
scas
arpl
inc
xchg
push
rcll
jg
lret
aam
in
push
arpl
mov
out
sub
bound
and
sub
rclb
mov
jmp
xchg
lcall
call
repnz
fcmovu
add
pop
fisttps
lods
xlat
dec
stc
and
cld
repnz
mov
inc
or
hlt
test
xchg
mov
inc
cmp
shrb
or
pop
pop
xor
aas
call
nop
mov
xor
nop
loop
pop
push
in
mov
pop
stos
vpandn
xchg
push
or
xchg
mov
xor
stos
daa
adc
call
push
std
push
das
xchg
xchg
dec
push
xor
or
push
out
bound
or
inc
test
dec
sbb
cmp
push
roll
pop
fcmovnbe
mov
jg
dec
add
js
push
shrb
lret
jbe
mov
stos
jns
mov
mov
xor
inc
test
adc
jg
pushf
aaa
outsl
lret
lds
ret
jmp
cltd
ret
mov
imul
jnp
sar
and
sbb
shrl
sub
xchg
cli
iret
pop
repz
mov
cli
and
sbb
sahf
pop
icebp
mov
test
fldt
jmp
fisubrl
push
nop
je
shll
pop
popf
nop
imul
popa
or
setae
mov
add
je
ret
lods
xor
loope
dec
inc
cmpl
jo
lods
mov
leave
pop
pop
jmp
out
push
and
pop
out
xchg
xchg
inc
xor
inc
mov
sub
or
addl
pop
fcom
lea
pop
and
lret
push
add
fcmove
bnd
add
push
sti
sbb
das
divb
pop
dec
xor
mov
add
out
mov
fisttps
sarl
icebp
xor
xlat
add
dec
movsb
testb
push
jb
dec
mov
dec
and
and
push
inc
test
std
bound
rcrb
mov
inc
cmp
cmp
mov
movsl
jne
xchg
scas
std
jl
pop
lods
fs
iret
inc
adc
jge
inc
or
in
ficoml
inc
xor
push
or
push
loop
dec
inc
repz
popa
not
cmc
sub
ljmp
mov
adc
arpl
addr16
cli
cmp
div
test
jae
pop
xchg
mov
adc
mov
incb
push
jne
pushf
xchg
repz
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
ffree
scas
insb
adc
adc
adc
adc
aam
hlt
cli
xor
dec
adc
ret
mov
loopne
xor
outsb
cmp
pop
cli
lahf
insb
mov
popl
xchg
inc
jae
sahf
outsb
pushf
in
in
aad
mov
daa
jnp
cmp
push
repz
hlt
in
and
jno
es
stos
inc
jg
cwtl
test
jg
int3
sub
xchg
push
enter
pop
lcall
mov
ret
cltd
mov
pop
sub
push
lds
imul
lea
cmc
adc
sbb
js
or
mov
jmp
bnd
insl
cmp
mov
mov
in
repnz
in
out
pop
jb
nop
dec
mov
adc
into
ds
push
lods
cli
les
neg
in
fadd
and
mov
int
mov
xchg
lods
cmpsb
dec
and
mov
das
mov
push
inc
dec
push
pop
stc
nop
add
int3
xor
inc
mov
cli
fsubp
stos
jecxz
ret
xor
or
xchg
push
ss
jne
jnp
fs
jge
sbb
xchg
mov
pop
adc
pop
fisubrs
dec
das
enter
stc
push
push
jo
leave
cld
out
add
or
fwait
pop
data16
nop
adc
std
jbe
ds
lcall
sbb
or
in
ja
push
test
int
pop
in
push
inc
mov
rol
or
jae
mov
jg
xorl
movsb
ret
mov
pop
fcoms
mov
mov
xchg
and
push
into
cmp
jge
sub
repz
jb
movsl
sbb
into
movsb
hlt
out
ret
push
loope
daa
icebp
mov
pop
pop
popl
popa
stos
movsl
imul
out
repnz
inc
gs
push
or
adc
jbe
ja
push
lcall
fimuls
jo
xchg
push
test
xchg
jle
in
and
inc
insb
fisubs
in
pcmpgtd
push
adc
pop
mov
je
mov
adc
pop
popl
inc
ficomps
jp
mov
add
mov
mov
in
lcall
cmp
fs
push
out
lcall
mov
or
cmc
mov
mov
jg
lds
stc
dec
je
rcll
push
imul
mov
mov
sahf
cmp
sbb
fstl
or
in
or
push
push
cmp
stc
inc
fiadds
stc
dec
pop
stos
inc
fimuls
xchg
jge
sbb
imull
or
pop
jmp
pop
fdivs
cmp
adc
mov
xchg
pop
iret
sub
lret
icebp
out
fwait
daa
jae
movsl
push
enter
test
xchg
fnstenv
arpl
adcl
fistl
add
mov
imul
adcl
ljmp
in
mov
mov
jns
lcall
call
movsb
out
pop
push
scas
stos
pushf
push
pop
lahf
ret
fistpl
out
aas
lahf
lods
outsl
loop
xchg
jmp
inc
jae
aaa
int3
push
cmpsl
sahf
add
jg
ds
mov
adc
cmp
mov
mov
mov
inc
ret
mov
mov
in
mov
pop
push
dec
dec
ret
inc
mov
stos
push
mov
ficoms
inc
outsl
add
cli
xchg
cmp
nop
pop
mov
or
mov
sti
out
cltd
lea
dec
hlt
adc
cmpsb
xor
sub
pop
inc
test
lea
jnp
and
jge
ret
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
arpl
stos
xor
adc
adc
adc
push
jle
xchg
and
sub
push
xchg
iret
jae
jo
pop
mov
xchg
cmpsb
xchg
jg
cmp
sahf
jmp
pop
mov
inc
fstpt
jp
std
shrl
in
jae
cmp
push
leave
sbb
or
in
enter
xor
pushf
sar
sub
cmp
mov
sub
sbb
inc
fidivl
mov
stos
mov
mov
aad
mov
and
xchg
sub
sbb
fnstcw
ds
lret
mov
push
lods
mov
imulb
pop
mov
lock
in
mov
test
lret
dec
dec
lock
add
xchg
xchg
fisttpl
push
fcomps
faddl
mov
ficomps
dec
in
jb
and
dec
fildll
movsl
mov
pop
neg
aam
test
shl
or
jp
lods
mov
mov
gs
in
xlat
shll
fdivrs
pop
add
std
pop
ss
loop
movsl
mov
push
shll
push
mov
mov
popf
fcoms
or
js
cmp
lcall
xchg
aam
lret
xchg
cmp
push
sbb
pop
fstp
fsubrl
pop
sti
stos
rclb
cmpsl
rorl
test
aam
inc
ret
sub
or
jg
loop
stc
inc
mov
into
and
stos
push
mov
push
jmp
addr16
fildll
or
lret
lods
cmp
fbld
mov
sub
negb
testb
cmp
mov
sub
jns
mov
mov
jle
jnp
nop
add
sbb
mov
dec
repnz
xchg
sbb
ficoml
xchg
or
pop
xor
and
adc
mov
mov
jg
or
or
mov
dec
pop
xchg
and
push
mov
push
mull
dec
inc
push
stc
cwtl
push
fidivrs
popf
dec
mov
pop
mov
jp
out
insb
clc
push
lret
movsb
cs
mov
jmp
add
dec
mov
xchg
call
xor
test
into
inc
xor
mov
mov
inc
ficompl
orb
ret
pop
popf
out
xor
in
jmp
movsl
cmp
push
and
adc
push
jp
sub
daa
xor
mov
popa
mov
mov
rolb
subl
pop
in
clc
dec
mov
in
sbb
inc
int
cmpsl
push
cs
cmc
pushf
or
mov
ja
shl
pop
sbb
nop
jg
dec
out
jle
dec
dec
pop
scas
inc
inc
jge
mov
jo
popf
fidivs
and
xor
in
pusha
ss
orl
mov
xor
dec
sarl
mov
fs
je
jl
fs
in
dec
adc
test
or
push
xor
popa
mov
push
movsb
rep
dec
xchg
ret
aas
adc
add
hlt
lret
add
cmc
pop
fistpll
inc
inc
fcmovu
mov
xchg
xchg
fadd
aaa
jbe
out
inc
lods
xor
test
cmp
and
fcoml
xchg
push
or
into
in
repz
adc
mov
inc
xchg
pop
ds
fnsave
test
jp
push
in
repnz
loopne
fwait
xchg
mov
fs
out
cmp
rcr
stos
jb
lock
insb
in
in
mov
cmc
mov
subb
sti
mov
mov
xchg
lds
sbb
pop
dec
lahf
pop
push
dec
jo
insb
jae
cmp
faddp
cmp
scas
lret
int3
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
iret
dec
mov
xor
adc
ja
dec
call
insb
out
inc
lods
insb
mov
jne
xor
xlat
fcompl
push
mov
scas
and
test
push
icebp
fimuls
lds
jmp
jmp
push
icebp
xchg
cmp
dec
andb
bound
repnz
jno
jo
push
inc
mov
xchg
icebp
inc
adc
pop
lcall
jg
fidivrs
mov
sub
inc
test
aaa
js
inc
push
lock
xchg
and
out
ret
test
pusha
scas
int3
addb
enter
js
ja
push
add
or
ret
mov
fbld
cmp
or
sets
outsb
cmpsl
in
cmc
outsb
mov
in
dec
scas
dec
scas
aas
mov
sub
rcrb
or
and
mov
sub
fildll
call
lret
jmp
movsb
dec
and
cmp
xchg
add
dec
cs
adc
enter
cwtl
push
sbb
insl
dec
out
aad
push
sub
jle
mov
mov
fst
mov
popa
jne
push
xor
sbb
inc
mov
mov
jne
stos
mov
xchg
jl
or
cltd
push
repz
xor
mov
jae,pn
movsb
fidivs
bound
insb
fmuls
cltd
icebp
xlat
xchg
repnz
pop
push
xchg
lods
cmpsl
pop
loope
ret
fmul
pop
flds
inc
sub
mov
ret
and
sarb
jns
jbe
mov
push
xlat
bound
ja
dec
mov
xor
sti
sbb
add
das
into
or
pop
pop
mov
int
push
push
ja
inc
sbb
push
xchg
mov
negb
cmp
call
scas
sub
mov
out
movb
pop
loope
push
xor
ja
sub
xchg
cwtl
dec
sahf
sub
scas
loop
lcall
push
enter
mov
pop
jo
cltd
mov
and
pop
add
xor
fisttpll
cmovge
loopne
scas
lahf
push
add
rclb
jb
test
jmp
rcrb
icebp
test
movsl
pop
pop
jbe
std
mov
xchg
mov
mov
cmp
pop
push
shll
push
xchg
sarl
or
adc
xchg
cmpsl
sbb
shll
aas
fsubr
aam
dec
es
insl
insl
inc
jp
loop
mov
pop
inc
fists
push
cld
sub
mov
nop
in
adc
sbb
sti
push
int3
into
jmp
xchg
icebp
sahf
cmp
test
adcb
movsb
repz
pop
mov
imul
and
or
inc
push
pop
pop
pusha
xchg
add
sbb
push
or
inc
das
imull
sbb
inc
cmp
pop
jmp
icebp
sti
xchg
js
mov
pop
or
mov
paddq
xchg
insl
xchg
and
cld
movsb
sahf
out
xchg
rolb
jne
mov
ss
sub
adc
sub
test
out
cmp
adc
jmp
repnz
cmpsb
lods
dec
into
push
fst
roll
push
xchg
inc
lods
mov
rclb
inc
lock
repnz
into
shll
stc
idivb
popa
icebp
xor
cltd
mov
cmpsl
divl
sar
xchg
add
jmp
movsbl
cmp
dec
outsl
cmp
jb
xor
lods
loope
in
dec
inc
shll
mov
adc
movsb
sti
inc
je
sti
push
dec
cmp
loop
dec
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
mov
push
orb
adc
dec
sub
test
mov
cmp
sub
cmp
insb
and
sti
fldcw
sti
sbb
lea
xor
aad
jbe
shll
in
cld
xchg
fs
jl
decl
or
repz
out
cmp
xchg
inc
sbb
loopne
popf
stos
movl
mov
mov
lods
ds
cli
pop
in
mov
movsb
jg
cltd
mov
pop
lret
mov
lret
xchg
orb
mov
pop
xlat
jmp
jne
out
adc
loope
inc
gs
inc
cwtl
adc
cld
mov
or
lods
js
adc
imul
fs
in
mov
sbb
and
jge,pt
in
and
push
aaa
xchg
lahf
cmpsl
sti
insl
sbbl
movsb
push
xchg
cmc
or
lods
mov
add
aad
loopne
mov
leave
cmpsb
inc
das
jle
pop
inc
sub
int
jecxz
push
mov
loopne
adc
xor
clc
pop
cmp
dec
flds
stc
test
sub
fldl
cltd
sbb
repz
imul
xchg
mov
fdivr
mov
inc
push
dec
or
fmul
stos
jmp
ret
imul
fiaddl
cmpsl
imul
xchg
cmp
push
lock
inc
iret
ljmp
mov
and
es
gs
pop
pop
push
sbbl
or
lock
scas
clc
xchg
paddsw
or
mov
out
bound
push
push
xchg
test
pop
cmp
or
push
fildl
lret
mov
push
pop
clc
aad
clc
outsl
test
es
sub
pop
in
into
mov
cli
inc
insb
push
mov
jbe
icebp
cmc
negb
jmp
sbb
jg
in
cltd
fstpl
shl
sub
jl
cmp
push
jnp
sub
sub
xchg
inc
dec
or
lcall
out
xor
mov
jmp
mov
icebp
adc
xchg
mov
sbb
scas
inc
cmpsl
pop
aad
pop
imul
xlat
out
xchg
and
cmp
and
popf
mov
add
lock
enter
gs
cld
cmp
icebp
in
or
xchg
gs
push
outsb
fs
out
in
xchg
inc
jae
mov
or
aad
xor
pop
inc
popa
sbb
dec
ror
jb
sbbb
xchg
sbb
lock
scas
hlt
jns
mov
testb
testl
pop
pop
cmp
std
rorb
inc
je
out
loope
sub
std
inc
dec
xchg
fimuls
pop
idivb
js
imul
push
inc
inc
clc
ds
lods
jo
mov
call
add
jle
insl
push
je
ret
test
les
repz
jge
int
jmp
sbb
pop
and
xor
push
cmp
pop
ficoml
popa
push
and
repz
fildl
shrb
cs
bound
jge
dec
sub
mull
rcr
mov
cli
pusha
iret
sbb
cmp
in
cmp
mov
cmpb
mov
fdivs
mov
out
mov
fsts
add
inc
and
les
rclb
repz
xchg
repz
cmp
std
and
jne
pop
in
and
ja
repnz
and
cmpsl
inc
rolb
pop
das
jg
bswap
inc
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
in
jnp
adc
xor
adc
imul
fs
cmp
fisttps
xor
and
ret
lods
insb
adc
filds
mov
mov
and
mov
adc
js
push
lock
cmc
insl
notb
jnp
call
or
icebp
or
mov
lods
adc
aaa
and
cmp
push
sub
jle
outsl
add
jnp
xchg
fistps
jle
or
push
aam
inc
dec
push
pop
cltd
mov
cmp
sbb
jl
sub
lea
mov
jmp
shr
mov
aam
fstl
filds
inc
insb
rcr
out
imul
ja
sub
jno
and
imul
xor
sbb
inc
jnp
or
es
cmp
mov
xor
insb
or
adc
and
cmpsb
sarl
popa
dec
movsb
rclb
push
add
adc
pop
inc
gs
pop
sbb
adc
mov
mov
lds
or
and
std
lods
call
mov
xor
mov
adc
sub
jmp
sti
fwait
inc
adc
int
mov
sahf
sub
jmp
mov
std
and
lahf
lret
dec
mov
sbb
or
xchg
pop
push
mov
add
daa
xlat
data16
rcr
imul
push
repnz
clc
adc
xchg
mov
or
testb
cmp
push
push
loopne
out
scas
sbb
test
pop
dec
lods
jnp
dec
jg
or
faddl
mov
xchg
repnz
lret
jae
mov
push
nop
jp
lret
stos
std
icebp
movsb
or
jb
pusha
add
dec
jno
fbld
out
xchg
test
aad
sbb
mov
mov
jmp
and
cmp
push
rcll
lds
xchg
inc
add
push
cmp
outsb
rcrb
addr16
aad
jb
cmpsb
push
xchg
push
das
cwtl
sub
sahf
sub
xchg
ret
push
scas
sbb
idivb
orl
mov
gs
outsl
fildll
stc
sbb
pop
push
mov
je
inc
enter
and
dec
pop
cli
stos
loope
xchg
iret
mov
imul
or
inc
and
mov
and
ret
shr
push
nop
sbb
push
adc
lods
inc
adc
and
lret
les
outsb
hlt
in
jle
mov
shlb
jns
adc
out
push
push
repz
rcll
mov
and
push
repnz
pop
mov
out
into
negb
lods
dec
or
mov
mov
ja
xor
jmp
pop
cvtpd2pi
pop
sti
cmpsl
xorb
or
popf
lea
fcoms
loope
outsb
cmp
pop
in
xchg
mov
cmpsb
mov
push
adc
sbb
ret
pushf
jae
and
push
and
adc
sbb
jb
repnz
iret
add
in
in
inc
sub
fs
pop
or
fcmove
cltd
push
push
enter
stos
sahf
and
push
add
xchg
testb
jnp
ret
jmp
xchg
lahf
adc
insb
sub
push
pop
dec
xchg
jb
xchg
sbb
sbb
push
ds
pusha
jle
aam
shlb
std
adc
into
xchg
jg
and
cmpsl
dec
jb
mov
hlt
ss
or
rcrl
lds
or
add
loopne
pop
test
cmc
adc
dec
lcall
dec
repz
imul
mov
decb
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
addr16
xor
fwait
push
daa
popa
loop
mov
scas
xor
push
out
fnstcw
adc
push
cmp
or
dec
scas
rolb
pushf
adc
nop
fnsave
fdivr
adcb
mov
cltd
inc
sti
cmp
int3
lock
jns
push
lods
andb
jp
dec
and
jbe
sahf
xchg
xor
adc
mov
int3
xchg
or
or
push
xor
test
jp,pt
xchg
test
push
jb
adc
adc
inc
mov
call
scas
fyl2xp1
xor
iret
je
dec
sub
adc
pop
cmp
in
pop
in
mov
adc
inc
fists
or
jl
jbe
xchg
adc
lods
scas
repnz
stos
push
cltd
ret
or
fs
int
aas
ret
imul
cmpsl
stos
or
loopne
test
sub
cmc
mov
cmp
add
movsb
movsb
lds
mov
insb
dec
bound
lcall
mov
and
popl
rorb
and
mov
or
push
fldpi
scas
mov
pop
push
cmp
cmp
inc
inc
xchg
movzwl
xlat
lret
pop
cli
xchg
cmp
enter
jl
subl
adc
sub
jmp
stos
pop
mov
outsb
inc
stos
mov
outsb
sahf
jecxz
xchg
jp
xor
popf
int
cmpb
mov
mov
aad
push
out
pop
out
push
mov
and
push
or
jmp
mov
and
push
scas
inc
cmp
lea
pusha
jmp
adc
fucomip
test
inc
cmp
mov
mov
in
cmp
pop
fdivrs
int3
and
pop
add
roll
call
sbb
xor
inc
cltd
repnz
mov
aam
and
xchg
out
out
shll
sbb
dec
aaa
outsb
lods
subl
cld
cmp
in
es
jecxz
mov
aas
cs
push
adcl
mov
cmp
xchg
jecxz
and
sarb
mov
cmp
jne
std
cmc
mov
adc
dec
or
dec
dec
loop
add
push
xchg
movsb
inc
inc
push
jne
inc
cmp
or
add
jbe
movsb
int3
scas
aas
fcomps
mov
sbb
mov
cmp
or
pop
dec
xchg
dec
adc
lea
fsubr
or
mov
xchg
xchg
out
dec
fldt
clc
ljmp
scas
jbe
or
push
adc
cmpsl
mulb
inc
stc
gs
xor
push
aas
sub
adc
mov
mov
or
test
adc
scas
mov
ljmp
ret
insl
dec
sub
jne
std
mov
or
adcl
in
dec
xor
pop
xor
je
sub
xchg
pop
sub
or
call
stos
ss
in
pop
pop
or
fcoml
push
dec
loopne
push
scas
cld
jne
loop
inc
mov
dec
xlat
and
aad
es
push
cmc
roll
test
and
and
ret
push
jb
pushf
sar
popf
add
or
fucomi
mov
dec
and
mov
loope
cmpsb
adc
ret
inc
repz
sub
jb
pop
or
into
xchg
ss
jnp
xor
mov
flds
stos
mov
shrd
xor
jmp
mov
popa
lcall
outsb
pop
lods
scas
sub
adc
adc
adc
adcl
cmc
dec
movsb
sbb
mov
cwtl
mov
mov
xchg
test
outsl
ret
aam
insl
sbb
mov
adc
lahf
push
lea
pop
pop
ljmp
lret
ljmp
push
and
mov
lahf
lea
sbb
jns
mov
shr
sbb
lret
jo
cmp
jle
xor
mov
sbb
addb
shrb
or
int3
mov
jo
fidivl
test
into
in
sbb
cld
xchg
dec
pop
jo
out
in
push
xorl
mov
pop
sti
in
incb
cmpsl
fnstenv
fistpll
or
xor
aam
or
shll
push
and
mov
xor
pusha
mov
mov
mov
xchg
or
lods
xchg
lret
cli
testb
mov
stos
ret
jecxz
enter
das
mov
pop
in
sub
aam
out
loop
mov
outsb
mov
rolb
es
pop
pushf
dec
inc
fmul
sub
mov
nop
test
jmp
arpl
fnsave
test
lods
jge
xor
bound
or
fsubrl
das
mov
jp
jns
mov
pusha
jae
sbb
test
dec
push
cmp
mov
cld
in
outsl
xchg
repnz
xor
jmp
sub
push
cs
mov
mov
and
fisubrs
mov
ret
repz
aad
xlat
adc
push
rcll
jmp
loope
or
sbb
nop
fldcw
pop
arpl
test
push
jecxz
adc
push
xchg
add
mov
test
pop
ds
push
add
adc
mov
loop
out
outsl
jno
rcrb
mov
mov
push
sub
add
mov
mov
push
repnz
push
mov
stos
movb
divb
cmp
add
cmp
sub
lret
xor
aam
movsb
int
aaa
fstpt
icebp
sti
or
or
addr16
sub
in
scas
and
cmpsb
orl
mov
in
iret
in
sbb
sti
daa
rclb
dec
pop
xor
jl
mov
xchg
mov
aam
xor
sub
mov
adc
loopne
pusha
push
and
shlb
push
sub
idiv
add
or
cmp
sarl
pop
jle,pn
loopne
lcall
in
inc
inc
or
cwtl
movsl
mov
leave
stos
xor
sub
dec
inc
stos
in
xchg
sub
add
clc
aas
movsb
add
out
mov
fiaddl
test
icebp
out
push
sub
cltd
and
mov
lock
adc
dec
push
xchg
mov
add
fistl
int
out
dec
mov
adc
lret
ljmp
mov
divb
out
inc
sub
addr16
cmpsb
leave
cmpsb
cmpsl
adcb
push
xchg
cmp
jp
xchg
arpl
iret
jge
jg
in
popf
mov
movsl
mov
lods
mov
lret
push
pop
int
das
inc
mov
pop
push
and
inc
in
sbb
mov
sahf
cwtl
aas
dec
imul
pop
jecxz
jae
loop
dec
dec
xchg
addr16
add
inc
rclb
sarb
test
inc
mov
sbb
push
cli
call
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
cmc
stc
jle
and
adc
movlps
or
jmp
xchg
mov
orb
out
sbb
clc
inc
outsb
xchg
ds
mov
mov
int
pop
aas
mov
jl
or
ret
movsb
cwtl
out
xchg
in
gs
scas
call
add
fwait
insl
mov
lea
dec
sahf
loopne
xor
jns
dec
lds
mov
nop
test
xor
pop
notb
dec
adc
adc
loopne
push
mov
cmpsb
push
ds
data16
movsl
adc
xchg
adc
cmp
fldenv
js
xchg
fsubrp
imul
bound
popa
sbb
ds
ret
imul
int3
sub
mov
fdivrs
and
cmc
fbstp
aad
mov
fimull
add
cmpsl
pop
shll
and
cmp
lahf
imul
dec
ljmp
cmpsb
sub
pop
mov
repnz
xchg
sbb
xchg
repnz
movsb
push
push
nop
fiaddl
mov
icebp
xchg
movb
leave
fimull
jge
adc
adc
cmp
popf
push
imul
jns
dec
inc
adc
inc
enter
inc
push
testl
adc
push
sbb
aaa
pop
jae
cli
or
or
and
dec
mov
dec
jno
mov
mov
add
inc
xlat
scas
xorps
fistl
bound
mov
lret
push
fstp
int3
push
bound
loope
iret
pop
mov
xchg
filds
mov
jp
repnz
aad
jmp
sahf
pusha
outsb
pusha
xor
lcall
mov
ficompl
test
push
dec
pop
mov
xor
orl
inc
les
pushf
push
in
popa
dec
fisubrl
mov
mov
jcxz
stos
xchg
push
jmp
lods
jl
fsubs
push
dec
and
int3
xor
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
ja
mov
adc
movlps
leave
push
loop
mov
out
xlat
push
push
push
sbb
lods
stos
and
xor
out
push
dec
or
iret
adc
push
mov
xchg
push
fsubrs
and
mov
arpl
std
imul
nop
cmpsl
scas
xchg
js
pop
stc
test
adc
es
and
lods
addl
ficoms
shr
adc
adc
jnp
xchg
adc
xchg
insb
ficompl
cmp
jae
cmpsb
add
jae
cmpsl
mov
pop
fldt
mov
aaa
iret
incb
mov
call
push
cmpsl
dec
lcall
filds
lcall
inc
adc
xchg
add
add
inc
std
sahf
or
push
xor
cs
pop
fdivrl
dec
fwait
or
xor
jae
mov
repz
push
dec
lods
cmp
push
or
lahf
or
dec
mov
loopne
pop
insl
jle
cmp
iret
xchg
ljmp
mov
jp
pop
add
pop
loopne
out
jb
jnp
inc
outsl
mov
cmc
orb
lret
sbb
jp
dec
loopne
mov
push
jnp
shlb
fnstcw
das
jecxz
push
push
jmp
and
sar
jno
sahf
push
pop
popf
ja
subb
xchg
test
mov
xor
mov
scas
or
jnp
insb
outsl
and
cmp
jecxz
addr16
adc
call
ret
clc
insb
mov
adc
push
sahf
push
cmp
lcall
sub
iret
adc
mov
nop
faddl
sahf
push
iret
std
insl
daa
and
shufps
clc
pop
mov
out
jb
mov
shll
clc
js
xchg
aad
sbb
push
pop
int
setle
mov
ret
mov
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
movsb
fidivrs
fmull
adc
lcall
adc
mov
cmp
adc
stos
out
mov
xchg
add
adc
sbbl
jnp
shlb
mov
scas
xlat
lock
sub
insb
pop
mov
jae
push
push
push
cmp
sete
adc
stc
mov
js
xchg
cmp
adc
xchg
jbe
ja
lea
lds
lret
scas
xchg
aam
mov
sbb
jne
jmp
ret
dec
mov
mov
xchg
mov
stc
mov
xor
mov
mov
add
outsl
xor
adc
or
dec
mov
iret
xor
sub
inc
xorl
jae
mov
or
int
and
test
icebp
aam
cmp
jle
inc
mov
decl
mov
jmp
jnp
scas
cmp
stos
stc
hlt
movsb
jecxz
sar
dec
addr16
cmp
cmc
xor
subl
push
jae
test
das
adcb
lods
jp
dec
xor
pop
mov
dec
movsb
adc
mov
mov
dec
add
push
aad
jns
lds
add
hlt
fisubrl
insb
jnp
inc
mov
pop
inc
mov
push
jbe
pop
xchg
or
mov
sub
adc
pop
push
pop
mov
dec
test
loope
ja
and
test
mov
sbb
ljmp
jecxz
popa
add
cwtl
mov
jne
mov
aas
imul
cmpsb
stos
inc
pop
mov
inc
xchg
and
lods
fsubrp
xor
inc
inc
dec
push
sbb
fistpl
cmpsb
aad
jnp
push
lahf
sbb
xlat
push
sub
cmp
push
aam
and
and
sbb
xchg
loop
fs
mov
cmp
xchg
or
test
lods
loop
cmp
test
shll
pop
mov
inc
ret
pusha
adc
adc
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
sub
lods
and
movlps
add
xor
ljmp
pusha
leave
ret
sub
jg
clc
pop
iret
sbb
jl
xor
adc
loop
das
int3
roll
into
push
cld
inc
cmpsl
xchg
push
xor
mov
out
fcmovne
insb
dec
imul
imul
lcall
xor
test
mov
sub
andl
lcall
mov
sbb
pop
sahf
mov
lahf
loope
dec
pop
dec
or
add
xor
ret
lock
pop
test
scas
adc
cmp
cwtl
loope
push
dec
cmpb
or
leave
les
stc
adc
imul
aad
out
sub
pop
test
stos
test
inc
jp
xchg
or
pop
mov
mov
pop
xor
in
mov
xlat
adc
lret
or
inc
xor
gs
lea
lods
div
out
mov
icebp
sti
cmp
pop
loope
push
adc
push
test
push
sbb
pop
or
mov
mov
and
add
cwtl
jge
xor
loop
add
clc
pushf
std
inc
loop
pop
dec
cmc
js
fistpll
mov
mov
lahf
push
push
xchg
sbb
pop
push
mov
dec
imulb
inc
aas
sub
cmpsl
pop
xlat
xor
push
outsl
inc
out
pusha
xorb
or
ljmp
cmp
lret
fisubrl
pop
sbbb
scas
pop
lds
pop
or
movsl
mov
jno
pop
rcll
clc
repz
cmpsl
mov
iret
popf
fwait
repz
push
pop
mov
pop
xchg
and
jb
dec
fildl
jns
hlt
sub
inc
inc
jo
into
sub
lds
sbb
fdivrl
mov
lcall
fs
popf
sub
cs
jp
aaa
cmpl
shll
fidivrs
je
push
pushf
movsb
pop
negl
in
jle
pop
mov
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
stos
dec
mov
fmull
adc
das
xchg
push
call
sbb
jp
mov
scas
add
mov
push
push
shrb
pop
insl
mov
xchg
scas
test
jbe
test
xor
add
fiaddl
in
js
sbb
mov
movsl
mov
adcl
xor
xchg
fldt
add
stos
jp
mov
and
decl
into
cmp
jge
int
shlb
je
dec
mov
mov
xlat
cmpsb
sahf
out
sbb
mov
sarl
mov
movsb
das
cmp
clc
cmpsl
ret
push
js
lods
xor
into
mov
mov
iret
xor
popa
dec
hlt
faddl
popf
in
outsb
adc
or
mov
test
gs
rorb
xchg
cmpsb
mov
inc
push
daa
jl
pop
popf
xorb
dec
and
pop
push
sahf
xchg
bound
and
shrb
in
popf
sbb
mov
shl
pusha
sub
adc
adc
sub
push
mov
roll
jb
pop
jecxz
ret
adc
negl
insb
pop
push
and
fcmovu
pop
mov
cwtl
dec
lea
call
js
adc
mov
sub
lret
sub
icebp
xlat
sbb
bound
dec
push
and
dec
jle
insl
shrl
and
das
inc
mov
mov
and
popa
roll
fdivrs
sbb
mov
sbb
jno
mov
adc
push
mov
pop
mov
and
mov
movsl
add
pop
xchg
pusha
cmp
and
sbb
jg
cmc
inc
shrb
repnz
stos
xchg
xor
or
test
bound
or
std
push
popf
and
sbb
push
dec
mov
nop
and
mov
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
aas
cmc
mov
fcomps
sub
xchg
movsb
daa
add
adc
fnstenv
mov
pop
shll
pop
sahf
fdivrs
add
out
xor
jecxz
andl
mov
xchg
xchg
xorl
iret
dec
cmpsl
stc
movsl
push
fnstsw
imul
pop
imul
push
push
dec
rcrl
out
leave
in
lods
sub
icebp
cmp
mov
in
insl
xor
lcall
or
add
or
call
inc
loop
sarl
out
mov
inc
or
int3
jne
sbb
imul
mov
repz
sbb
gs
pop
stos
inc
jne
mov
inc
iret
push
rorb
mov
sahf
std
or
js
movsb
mov
dec
test
fnstsw
in
shlb
or
mov
test
pop
sub
enter
scas
loopne
js
mov
cmp
xchg
xor
mov
in
movsl
pop
lea
sub
dec
ljmp
inc
rcl
adc
icebp
or
cmp
movsl
pop
inc
pop
dec
out
in
pop
jl
shrl
push
leave
iret
inc
push
cmp
sbb
xlat
mov
dec
in
push
dec
inc
xchg
mov
rcl
pop
sub
mov
repnz
out
lea
int
faddl
or
jo
inc
nop
cmpsb
sub
jg
pop
push
lea
shrb
or
pop
ds
ret
jae
lahf
arpl
ds
push
cmp
cmp
loopne
sub
push
insl
jecxz
mov
mov
jbe
daa
imul
fwait
ret
pop
outsl
adc
adc
cmpsb
out
add
mov
les
xchg
cmp
inc
push
mov
jnp
lahf
loop
inc
xchg
aas
pop
into
inc
cwtl
js
pushl
mov
orb
or
push
pop
in
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
in
mov
fmull
adc
pop
and
mov
imul
dec
lahf
pop
pop
and
out
pushf
cli
pusha
mov
ss
pushf
lds
dec
mov
repz
jnp
jmp
cmp
loopne
test
sbb
jg
aam
push
ja
data16
jo
loope
add
and
nop
outsl
insl
enter
add
movsl
mov
mov
fiaddl
mov
lods
mov
cmc
cmp
popa
push
add
pushf
sub
nop
push
fisubs
outsb
sub
dec
sarb
push
pushf
mov
lret
push
mov
ljmp
in
inc
pop
mov
jle
mov
pushf
pop
pushf
xchg
cmp
mov
in
sub
push
mov
sub
mov
cmp
push
out
sbb
xchg
ja
cwtl
cmovbe
jnp
pop
repnz
test
outsb
enter
jae
mov
jmp
loop
push
in
adc
popf
and
cmpsl
mov
gs
loop
movl
mov
lods
test
cmp
mov
jle
ss
jl
lretw
adc
push
enter
xchg
icebp
movsb
fldl
imul
xchg
pop
fisubrs
xchg
xor
scas
inc
sbb
mov
test
scas
stos
cmp
popa
neg
frstor
hlt
iret
popf
call
out
stc
sbb
push
push
dec
ret
mov
lock
dec
or
add
push
jle
outsl
pop
inc
dec
fimuls
or
dec
addps
sbb
rorb
xchg
add
cld
repz
and
fimull
jmp
xor
push
fidivrl
mov
pop
or
jle
pushf
leave
xchg
orl
cmp
pop
shlb
pushf
es
sbb
enter
test
lods
leave
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
clc
mov
sbb
xor
xor
push
call
in
scas
or
xchg
sbb
add
and
adc
fcmovu
mov
sbb
aaa
out
mov
dec
mov
lcall
push
push
mov
adc
xor
gs
mov
inc
repnz
jb
dec
add
insl
ja
fnsave
in
out
cmpsl
sti
lret
mov
sbb
fiadds
fcoms
sbb
pop
jnp
dec
mov
cmp
mov
das
inc
adc
push
fwait
inc
mov
sti
inc
cmc
xchg
cmc
pop
cmp
sbb
cli
mov
sub
shl
sub
mov
into
xchg
mov
gs
insb
mov
lods
adc
fldcw
insb
pop
out
mov
mov
jmp
xlat
sarb
xor
xchg
xchg
jl
imul
add
add
fldl
sub
loope
and
mov
jbe
scas
sbb
pop
adc
jo
jae
bound
ret
mov
sbb
imul
leave
imull
in
mov
daa
cmp
xor
xlat
sub
dec
fbstp
mov
xor
cmc
jle
push
xchg
pop
sbb
mov
pop
test
or
pop
stc
sub
jge
xchg
lods
jbe
inc
inc
lods
adc
jae
dec
scas
lret
xchg
pop
clc
jns
nop
xchg
sbb
test
add
add
sbb
fsub
adc
xchg
jne
dec
inc
add
jge
fimuls
hlt
sbb
lret
push
mov
mov
gs
out
cmp
adc
sbb
shl
cmp
jp
in
sbb
lret
std
bnd
push
mov
jnp
or
adc
scas
lretw
das
stos
div
in
movsl
add
jl
inc
pop
test
push
and
test
cltd
jmp
add
lods
xor
inc
pusha
hlt
outsl
pop
cmpb
int3
out
mov
push
mov
in
adc
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
popa
mov
jmp
sbb
andl
pop
pop
xchg
pop
aam
jl
fsubl
or
mov
jno
andl
out
jne
mov
lahf
cwtl
stc
nop
mov
call
dec
adc
and
xorb
outsl
and
divb
loop
inc
mov
xchg
rclb
mov
inc
or
and
call
and
andb
loope
jb
inc
test
mov
xor
mov
push
test
sahf
xchg
movsl
mov
lods
mov
cmp
jnp
fistpll
jnp
ds
push
push
inc
mov
call
add
add
addl
lahf
popf
push
addr16
and
adc
addb
xchg
test
adc
jo
add
jmp
test
xchg
out
mov
aaa
sti
and
testl
jne
in
push
hlt
insb
shrb
imul
cld
add
and
mov
xchg
popa
xchg
sbb
mov
mov
jae
stos
dec
mov
mov
insl
out
stos
daa
icebp
mov
xchg
clc
mov
push
lret
dec
pop
and
xor
fldenv
xchg
adc
lods
mov
add
std
scas
mov
push
mov
inc
cmp
in
mov
xor
fst
loopne
jb
sub
clc
cmp
xchg
jecxz
fcoms
or
clc
in
aad
adc
popa
fisttps
mov
ljmp
sub
xor
adc
mov
inc
js
or
mov
int
sub
adc
xor
push
jp
loope
mov
fisttpll
xor
mov
jle
pop
lds
movb
enter
dec
aad
add
mov
dec
shrb
inc
xor
jmp
ret
and
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
addr16
mov
fmull
adc
xchg
mov
xor
shlb
ljmp
out
jecxz
mov
jecxz
shl
jp
fs
fwait
cmp
adc
or
add
sbb
jnp
and
xchg
mov
push
mov
ja
out
jb
lret
inc
pushf
and
xchg
pop
mov
cmp
in
xchg
mov
andb
xchg
adc
jnp
jg
inc
mov
addr16
mov
pop
and
jg
or
cli
addr16
jle
daa
pushf
addr16
sbb
adc
orl
sbb
dec
mov
pop
mov
pop
mov
pop
ja
hlt
adc
adc
in
push
mov
xor
mov
insb
repnz
adc
sar
insb
testl
xlat
mov
sub
add
fwait
jl
mov
cmp
adc
adcb
pop
sub
rcrb
popf
pop
test
cmc
jmp
gs
dec
rclb
xor
cmp
in
pusha
mov
loopne
and
fadds
loope
out
mov
cltd
orb
shlb
addb
adc
fdivrp
icebp
add
xor
dec
dec
add
jbe
or
pop
sbb
daa
xor
fcmove
mov
and
mov
nop
dec
lcall
flds
push
scas
popa
push
inc
cld
call
cmp
scas
clc
dec
notl
sbb
push
or
add
shll
mov
stos
int3
mov
and
or
pop
out
cmp
inc
pusha
mov
in
lods
cmp
cmpsb
aad
xchg
lods
add
call
xor
jmp
mov
cmp
fldt
es
xchg
xor
mov
push
mov
hlt
xor
add
mov
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
push
jo
popf
cli
adc
fmull
adc
filds
mov
adc
push
fs
push
cmp
out
ss
mov
pop
adc
cs
in
int3
mov
hlt
jns
lods
lret
push
push
adc
push
add
jecxz
in
pop
sub
mov
pop
lret
mov
lds
adc
insb
jo
test
fstl
loop
pop
pop
idivb
icebp
out
aaa
dec
pop
icebp
push
hlt
and
or
test
cmp
andb
and
mov
cmp
adc
gs
fstpl
cmp
cmpsb
jb
jg
mov
dec
jno
les
dec
sbb
push
xor
in
cli
and
ds
jmp
push
outsb
lret
addl
fsub
outsb
cmp
out
movsb
jl
mov
and
cmp
pop
mov
test
insb
mov
test
ljmp
push
sub
outsb
popl
out
out
jne
rcrl
sub
mov
repnz
scas
dec
pushf
push
test
icebp
sub
loope
add
or
cmp
push
inc
mov
stos
shrl
lcall
adc
mov
jo
nop
dec
int
jo
pop
sub
and
or
lods
test
out
jle
and
dec
inc
cmp
int3
out
dec
into
xlat
pop
inc
pop
pusha
push
sub
fcomps
mov
pop
insl
cmpsb
sub
addb
xchg
xor
testb
adcb
enter
lret
push
shll
repnz
adc
dec
lods
xchg
jae
adc
push
inc
pusha
fdivrs
or
adc
lock
out
dec
xchg
popa
inc
add
mov
xchg
xchg
sub
aas
rep
sub
fisttpl
gs
push
mov
pop
or
sub
gs
cmpl
in
or
push
mov
mov
cltd
dec
out
repz
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
adc
adc
fmull
adc
repnz
fcmovnb
loope
jb
sbb
pushf
push
aad
mulb
sub
sbb
sub
in
adc
ljmp
lods
cmpsb
or
jmp
xlat
cli
push
dec
shl
pop
out
lods
push
or
fbstp
mov
popf
mov
sub
lcall
iret
cmp
xchg
std
xlat
pop
sub
adc
or
repz
push
je
add
cwtl
shrb
mov
mov
xchg
or
dec
loope
pop
sub
mov
mov
cwtl
jne
movsl
mov
fisttps
and
test
and
push
aad
xor
stc
in
adc
push
pop
or
xlat
jnp
cmp
sub
movb
pushf
push
mov
insl
loopne
pop
inc
xchg
xor
fxch
repz
xchg
sbb
or
jo
rcrb
cwtl
iret
shr
mov
push
inc
mov
cmpsl
inc
leave
jecxz
loopne
jnp
mov
dec
sub
call
imul
cmpsb
pop
add
mov
sub
js
lock
insl
stos
sub
sbb
lods
jno
lods
imul
xchg
or
and
mov
xor
cmp
lea
fnstcw
mov
mov
add
dec
mov
enter
xchg
sub
cmp
lcall
adc
sbb
or
cmp
mov
cmp
jg
xor
rcrb
fnstsw
pop
pop
lds
add
mov
outsl
adc
or
test
in
push
cltd
int
xor
clc
or
daa
leave
shlb
xchg
dec
dec
mov
gs
lods
cmpsb
fs
idivb
sbbb
push
adc
mov
mov
iret
scas
adc
mov
in
dec
dec
adc
mov
es
jl
fs
push
test
jecxz
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
test
jo
sbbb
hlt
mov
dec
dec
xor
push
sbb
sub
push
dec
xor
push
ret
or
xchg
popa
inc
dec
test
fistps
out
cli
push
cmp
add
pop
mov
repz
out
pushf
ds
mov
lds
out
xchg
cmp
and
add
and
push
ja
and
out
push
xor
mov
push
push
mov
mov
shll
sbb
and
in
inc
mov
aam
les
fiaddl
stos
cmpsb
inc
dec
adc
or
repnz
xchg
jb
jmp
xor
sub
test
ljmp
cmpsb
test
imul
pop
sub
sahf
incb
adc
xchg
mov
push
add
mov
stos
add
or
xchg
push
cbtw
and
dec
ucomiss
xchg
mov
mov
jne
aaa
loope
xchg
sub
lret
dec
ds
lcall
outsl
cwtl
xlat
scas
adc
lea
mov
subl
jb
ljmp
inc
icebp
fbld
adc
daa
cltd
add
int3
push
shrb
mov
xor
dec
mov
sub
shll
xchg
xor
jl
mov
js
inc
cmpsl
jo
add
rolb
in
mov
sahf
xchg
pop
es
loop
lret
repnz
jg
mov
nop
mov
stos
xchg
inc
outsl
test
and
rcrl
cmp
mov
ret
push
subb
adc
pop
loopne
add
adc
push
cs
and
dec
mov
mov
push
mov
jne
mov
mov
ret
testb
addl
pop
test
jns
daa
mov
push
sub
mov
enter
push
cmp
gs
xor
lods
outsb
into
mov
cmc
test
roll
fcmovnbe
jge
adc
jo
out
ds
insl
bound
cli
dec
cmp
dec
addr16
mov
fiaddl
loop
push
enter
jo
cmpsb
das
dec
test
iret
cmc
insb
out
lret
dec
mov
mov
xor
adc
xor
test
add
ja
cli
cmpsl
jl
mov
dec
mov
loop
incb
sbb
dec
mov
std
es
lret
ret
xor
stos
fsubrp
imul
mov
popa
adc
fimuls
out
inc
mov
lret
xchg
lret
and
pop
out
pop
sbb
loope
fs
aam
pop
adc
sbb
lret
mov
negb
cmpsl
cmpsl
jg
mov
aam
mov
push
aad
mov
ljmp
lds
cwtl
fsubr
rcrl
fnstcw
or
dec
dec
sti
in
insb
add
dec
fsubrl
cmp
cmp
xorb
imull
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
mov
adc
jo
adc
push
ret
add
xlat
sub
cmpsb
fists
jg
push
ret
mov
add
dec
pop
jo
and
xor
mov
pop
insb
sbb
lret
xchg
sbb
cmp
rolb
xchg
xchg
add
shlb
in
jmp
xchg
add
pop
add
fwait
jae
xor
sbb
les
inc
cmp
or
sub
fiadds
fbstp
ljmp
xor
les
cmp
call
cmp
sub
lods
inc
mov
cwtl
movsl
pop
jl
pop
xchg
and
xor
popa
cmp
xchg
or
mov
sub
cmp
cmpsl
stos
cmc
jns
mov
pop
xchg
push
jae
mov
xchg
es
or
mov
arpl
lods
in
dec
mov
mov
sub
cmpsl
bswap
int
inc
dec
mov
jp
movsb
out
mov
sti
iret
in
dec
iret
sbb
cmpsl
mov
ljmp
cwtl
or
pushf
cmp
and
push
pop
stos
pop
cwtl
sarb
sti
fwait
mov
popf
les
push
add
mov
ret
pop
les
nop
mov
mov
lret
int
or
mov
add
sub
mov
aam
cmp
fs
daa
scas
jge
ret
ja
insl
jnp
xor
xor
idivb
adc
pop
mov
movsl
mov
xchg
push
enter
dec
cmp
fcmovu
sbb
push
aad
inc
jne
add
push
pop
pop
inc
mov
pop
imul
xor
xchg
xchg
mov
xlat
rorb
out
inc
pop
in
pop
fs
enter
test
subb
outsb
push
cmpb
fsubs
cmpsb
push
add
pusha
popa
mov
jbe
xchg
and
movsl
test
dec
mov
hlt
ljmp
adc
sub
es
lods
ret
jne
push
mov
es
dec
or
jnp
int3
pop
xchg
insb
jle
xor
dec
add
dec
and
push
adc
daa
sbb
dec
fwait
cli
test
cmp
dec
mov
stos
rcl
movsl
lcall
out
testl
aad
sbb
rcrb
sti
ja
xchg
sti
add
pop
je
out
imulb
xor
sbb
jecxz
mov
mov
and
in
and
cwtl
pop
jmp
inc
jge
lcall
mov
gs
jnp
pushf
mov
or
cltd
fnstenv
in
outsb
cmpsl
cmc
sbb
popa
xor
xchg
ficoms
adc
mov
mov
stc
popf
in
push
xchg
test
adc
mov
mov
mov
fwait
rcr
and
call
arpl
and
aas
xchg
mov
and
jae
add
pop
in
insl
stos
jmp
push
daa
push
ds
jne
cld
add
pusha
add
fmuls
adc
adc
xchg
mov
mov
inc
and
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
scas
adc
fists
adc
adc
cmp
mov
jo
jae
es
ljmp
shrl
in
push
xorb
xchg
adcb
fnstsw
and
jmp
pop
addr16
mov
sbbl
fildl
jle
call
jl
or
gs
stos
jl
lds
add
shlb
cmpsb
xor
imul
jg
or
mov
ljmp
jp
mov
inc
fsubl
sub
mov
xchg
es
inc
filds
push
push
mov
enter
imulb
inc
adc
dec
jmp
fwait
nop
dec
jns
sti
ret
cmp
mov
stc
movsb
leave
mulb
enter
inc
sbb
or
xchg
lods
lods
sahf
call
rorl
add
aas
cmp
lret
fwait
gs
mov
mov
mov
pop
stos
stos
shll
je
jle
dec
mov
add
test
xchg
mov
cwtl
sbb
into
mov
cld
and
xchg
jecxz
pop
aaa
ljmp
mov
in
or
mov
xchg
adc
scas
jmp
push
fwait
in
push
dec
out
jno
shrl
mov
mov
sub
frstor
cltd
scas
out
pop
or
ja
push
pusha
sbb
in
and
jl
popf
xor
sahf
sbb
rorb
lret
nop
loope
dec
lods
adc
xchg
inc
out
popa
pusha
gs
cmpsb
cld
dec
cmp
sub
mov
stc
sbb
adc
or
cmp
inc
sub
scas
mov
xchg
push
insl
adc
sahf
repz
orl
ja
icebp
std
xchg
push
pop
pop
push
xchg
dec
dec
dec
fsts
shrl
lods
mov
sub
jecxz
adc
dec
loopne
add
xor
mov
push
pop
add
cmpsl
cld
jmp
inc
dec
je
xor
cld
jno
lea
lcall
jae
lret
xchg
mov
jmp
jmp
verw
xlat
and
sub
cmpsl
xchg
out
jl
into
mov
push
fwait
lods
push
pop
test
int
push
inc
pop
jl
adc
mov
jmp
in
fwait
push
loopne
int3
lods
cmp
cmc
push
adc
lods
add
aad
stos
mov
mov
mov
pusha
int3
aaa
or
xchg
data16
inc
xchg
push
and
mov
bound
sub
lret
outsl
sbb
hlt
xor
repnz
push
les
adc
mov
outsb
or
push
mov
rcr
push
orb
and
sub
loop
or
cmpsb
jle
repnz
aaa
inc
sub
lods
sub
pop
dec
inc
lcall
xlat
testb
mov
jae
jle
mov
jle
push
psubsb
push
je
push
cmc
add
insl
nop
jmp
push
jo
lods
addr16
mov
pusha
jge
xor
mov
mov
push
nop
insb
fs
push
sub
daa
xor
inc
and
rcll
xor
sbb
addr16
enter
or
push
out
fistpl
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
int3
pop
lods
inc
fstl
adc
adc
mov
jg
int3
xchg
mov
and
xor
aaa
jo
and
mov
jg
lock
shrl
dec
pop
push
xor
js
inc
xchg
sahf
push
shlb
push
loop
jb
cmp
mov
xor
sbb
rorl
adc
jno
push
sbb
leave
sbb
stos
inc
das
pop
lds
int3
fdivrs
bswap
jle
pop
sub
loope
dec
imulb
jg
mov
in
jge
out
push
popa
testb
mov
mov
es
shrb
jmp
icebp
repnz
cmc
push
xchg
mov
mov
imul
or
adcb
mov
jg
mov
data16
ja
scas
push
stc
mov
lret
add
repnz
mov
push
addr16
in
lcall
xor
lods
mov
mov
cmp
bound
xchg
popa
loopne
fwait
in
sti
xchg
xchg
xor
mul
cmp
adc
mov
mov
shll
hlt
aad
cmc
mov
xor
push
inc
xchg
and
xchg
sbb
lcall
add
shlb
data16
and
addr16
adc
add
mov
leave
mov
das
and
inc
pop
and
dec
mov
lea
and
and
das
xchg
mov
mov
lds
sahf
push
mov
pop
xor
mov
repz
outsl
mov
jae
push
flds
fucom
sbb
or
test
adc
cli
dec
aad
sub
add
mov
jecxz
xor
jne
aad
or
push
dec
inc
cmc
sbb
push
sub
sti
scas
and
xchg
sub
push
imul
xchg
int3
dec
and
dec
or
call
push
cmp
arpl
push
push
and
jp
clc
push
xchg
pop
xchg
hlt
mov
xchg
and
mov
add
mov
sub
fwait
js
add
lods
xor
fdivr
push
scas
dec
inc
sub
and
fwait
jne
xlat
mov
movsb
jg
pop
mulb
loope
add
dec
shrb
movsb
loope
in
pushf
cmpl
lods
imul
mov
int
jmp
popf
lcall
sarb
pop
pop
dec
scas
lods
or
ljmp
xchg
test
add
lret
mov
jmp
fnstcw
sbb
or
repz
ljmp
mov
dec
jbe
mov
and
dec
cmp
jecxz
jmp
lcall
pop
push
lock
push
and
test
xchg
inc
and
push
pop
call
dec
pushf
push
rclb
pusha
jp
cmp
adc
shrb
mov
out
loop
imul
mov
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
mov
jl
sahf
aad
adc
adc
pop
mov
jnp
dec
nop
aas
or
aaa
pop
sub
call
pushf
sub
inc
lea
xchg
addr16
test
mov
inc
hlt
iret
popl
dec
stc
xchg
sub
movsb
dec
jae
pop
push
pop
inc
nop
popf
pop
cwtl
movl
sbb
mov
loope
mov
mov
mov
or
mov
jmp
outsl
imul
adc
and
stos
sahf
push
pop
xchg
xchg
xchg
mov
cld
adc
xchg
test
adc
lcall
in
mov
inc
sahf
loopne
loope
icebp
or
jg
sbb
imul
add
add
fmulp
inc
pop
jmp
in
lea
test
dec
leave
les
push
fbld
movb
xor
pop
ret
lods
test
addr16
cltd
decl
push
xlat
mov
jmp
icebp
daa
mov
cmp
stos
and
jle
insl
lahf
sahf
jne
leave
jns
pop
lahf
aas
in
mov
and
clc
mov
hlt
testb
sahf
adc
pushf
add
mov
inc
add
icebp
movsb
adc
lods
add
movsb
cld
push
and
pushf
mov
mov
lea
fst
movsl
lods
shlb
lock
sbb
mov
loopne
lods
rclb
loop
push
adcb
lods
pop
add
mov
enter
cmp
repnz
jecxz
lods
stos
jl
xor
mov
add
inc
pushf
dec
mov
fcoms
jne
sub
xchg
mov
jbe
add
insb
and
mov
cwtl
ds
adc
pop
push
es
xchg
jno
sub
cmp
aam
cld
loopne
lock
sti
mov
or
lret
jg
hlt
nop
hlt
test
mov
repz
mov
lods
pop
cmp
out
inc
or
jmp
out
arpl
push
mov
sti
frndint
subb
xchg
out
lret
mov
xchg
dec
inc
movsl
cmp
sbb
repnz
shl
adc
leave
rcrb
mov
mov
push
push
and
in
mov
stos
xor
cmp
test
push
dec
add
adc
jecxz
push
test
add
cmc
mov
andl
gs
pop
mov
push
adc
xor
push
push
inc
jl
or
pop
pop
out
adcb
bound
xchg
movsl
mul
cmp
or
notb
or
imul
mov
inc
push
fcomp
decb
fwait
lea
sub
mov
rorl
inc
ds
std
push
std
or
repnz
dec
insl
shrb
gs
add
iret
std
outsb
mov
jne
and
pop
outsl
call
inc
das
sarl
inc
add
movsl
ficompl
in
and
cmpsb
pop
ret
pop
test
pop
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
inc
dec
enter
adc
jo
adc
pop
adc
les
in
pop
cmp
sub
and
int
xchg
cmp
jle
test
jbe
fimuls
aaa
xchg
popf
mov
pop
jle
dec
rol
addr16
jmp
jle
iret
xchg
into
out
daa
pop
or
or
das
mov
cltd
lea
and
push
jp
xor
sti
push
mov
pop
jnp
into
pop
movsb
push
aam
adc
adc
xor
mov
sbbl
aad
and
shll
mov
outsl
shrb
push
les
hlt
dec
jp
in
mov
imul
lahf
push
dec
andl
inc
enter
lods
cmp
into
notb
and
in
dec
cltd
adc
enter
repz
sahf
pop
ret
sub
cmp
dec
fisubrs
sub
jne
cmpsb
adc
pop
nop
jb
jns
add
mov
daa
addr16
ljmp
pop
adc
jb
inc
push
aas
cmp
and
loopne
out
mov
xchg
test
test
sub
loopne
cmp
cltd
shlb
test
imull
in
push
test
sarb
mov
or
adc
pushl
xor
jecxz
pop
mov
aad
xchg
fistpl
mov
fadd
mov
sub
xor
inc
mov
nop
addb
ds
movsb
popf
iret
or
nop
cli
xor
movb
jg
xchg
out
xlat
fdivs
lock
loop
dec
jae
ss
mov
repz
mov
mov
push
sarl
dec
or
mov
jnp
cmp
xchg
push
test
js
aam
jno
inc
movsl
pavgb
gs
push
leave
or
xor
inc
xor
adc
xor
mov
imul
popl
adc
fnsave
je
in
inc
jns
mov
or
dec
aaa
xchg
es
xchg
sti
das
or
insl
jecxz
movsl
mov
push
mov
addr16
jecxz
dec
sbb
shrl
add
arpl
mov
imul
xor
or
mov
inc
outsb
sub
xchg
cmp
movsb
push
mov
call
pop
pop
outsb
adcl
in
dec
fsubs
mov
and
sbb
cmp
inc
jge
movsl
jns
pop
jge
cli
mov
push
or
cs
cmp
adc
mov
mov
ret
add
ficoml
adc
sbb
mov
test
scas
cltd
and
inc
mov
mov
pop
in
ficompl
cmpsl
loope
ret
je
ss
pop
dec
sub
lock
ficoms
xchg
xchg
xabort
adc
push
mov
lds
stos
xchg
scas
dec
rcll
imul
add
push
mov
loopne
jl
test
cmc
enter
and
dec
pop
fs
push
cld
test
sti
cli
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
pop
pop
loopne
fs
xor
in
pushf
mov
pop
mov
sub
pop
adc
xchg
movsl
add
into
pop
pop
mov
add
push
mov
adc
push
mov
mov
test
cli
jo
jge
ficoml
enter
popa
add
adc
pop
xor
in
je
sub
jnp
inc
std
xchg
cmpsl
xchg
jge
mov
imul
cli
mov
rclb
mov
cmp
push
sub
lahf
ljmp
das
xor
cmpsl
cltd
loop
test
mov
sbb
add
dec
das
xchg
push
lock
sub
repz
mov
shlb
lock
push
and
dec
mov
sub
stc
scas
fnstenv
aas
cmp
inc
mov
or
push
inc
jecxz
cmpsb
and
aad
in
sub
iret
dec
imul
mov
or
sbb
repz
fcomip
ljmp
xor
mov
shlb
ret
nop
fcompl
shlb
repz
xor
cmp
lret
call
jne
leave
pop
outsl
and
fisubrs
repnz
ficompl
push
out
ja
loopw
jp
mov
xlat
mov
dec
mov
mov
sbb
out
jae
ljmp
mov
cld
int
sub
loop
test
dec
cs
frstor
in
scas
popa
lea
ret
adc
sbb
xchg
call
mov
out
add
iret
xchg
mov
bound
sub
testb
xchg
pop
jecxz
test
dec
cmp
or
push
je
sti
pop
mov
popf
mov
idiv
daa
mov
add
arpl
pop
loopne
push
insb
and
fisttps
je
in
insb
lret
je
add
sbb
pop
xchg
fsts
in
movsb
ret
pop
in
scas
fldt
outsb
push
sbb
push
sbb
xchg
cwtl
mov
leave
jne
inc
pop
jnp
jo
stc
dec
aas
mov
outsb
ret
loop
jle
pop
out
push
insl
jle
std
out
outsb
sbb
jl
test
pop
mov
xchg
cmp
mov
jg
sub
mov
add
hlt
stos
jle
cmc
imul
and
or
dec
push
sbb
test
or
pop
das
jp
pop
mov
xor
mov
or
xor
mov
mov
clc
pop
in
xor
jp
mov
mov
jo
push
mov
iret
fwait
cmp
sub
mov
arpl
pushf
stos
push
and
cmp
in
adc
arpl
nop
xlat
call
mov
xchg
sahf
pslld
mov
loop
int3
xlat
mov
xchg
popa
cld
icebp
inc
je
cmpsb
test
sub
jp
xlat
out
loope
add
out
mov
andb
rorb
lock
movsb
lock
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
flds
js
rcll
jo
adc
push
pushf
sbb
add
in
pusha
out
jae
jno
mov
icebp
imul
mov
jge
pop
sbb
or
repz
push
pop
jo
cld
and
push
xlat
popa
cmp
mov
fs
sub
and
or
dec
repz
jbe
jmp
pop
popf
add
ret
push
mov
lret
xlat
pop
xor
cmpsl
mov
xchg
pop
mov
sbb
in
clc
xor
adc
dec
and
push
ficoml
fimuls
mov
or
out
cmpsb
mov
mov
add
arpl
aaa
popf
lret
cmp
mov
xchg
sbb
popa
mov
push
adc
dec
stc
movl
lcall
cmp
jnp
push
insb
js
sbb
or
repnz
nop
add
clc
pop
jns
inc
test
fs
dec
ss
sub
xor
mov
adc
push
xor
add
xchg
popl
in
clc
fwait
adc
loopne
lods
movsl
jmp
loopne
sub
mov
jno
mov
pop
sets
repz
inc
xor
pusha
inc
or
call
into
sbbb
std
int
cmp
fwait
sahf
hlt
adc
mov
cmp
lret
sbb
js
testb
jae
js
and
gs
lods
popf
ret
lret
xchg
push
add
mov
or
pop
out
pop
in
sub
push
push
test
add
subb
and
shl
sahf
inc
testl
and
pop
xchg
push
fmul
ja
dec
fs
pushf
jle
xchg
jg
fucomi
lret
jo
sbb
cld
dec
sub
std
aad
push
mov
ret
push
or
pop
rcll
xchg
sbb
sub
xchg
inc
xchg
pop
cmc
nop
dec
arpl
pushf
mov
movsb
pop
and
pop
scas
pop
insl
push
inc
and
or
ds
inc
out
pop
sub
lcall
stos
daa
mov
pushf
and
or
aam
iret
xor
pop
les
jnp
adc
ds
or
xchg
fwait
lcall
pop
and
mov
and
jmp
sbb
lret
lods
dec
shr
mov
cmp
mov
pop
cmp
fsubl
int3
fiaddl
mov
into
cmpb
sub
adc
ret
lds
repz
rcr
loopne
mov
or
les
jnp
dec
fdivl
jge
pop
call
cli
cmp
stc
mov
push
pop
add
fimull
adc
ss
xchg
sbb
mov
sbb
pop
cmpsb
roll
sub
xor
es
jle
shr
mov
in
jle
out
cmpsl
cli
es
lods
jle
test
daa
dec
ja
push
adcl
mov
in
fsubrl
sub
arpl
popf
in
aad
pop
mul
js
insb
jne,pt
std
rcll
mov
dec
cmpsl
lret
dec
or
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
fildll
adc
jo
adc
sub
ret
fcoml
mov
push
adc
push
xor
sarb
jae
sbb
addb
push
call
bound
imul
jmp
scas
and
repnz
cli
adc
mov
push
mov
dec
xchg
push
pop
jo
sbb
shlb
popa
cmp
in
test
mov
pop
sysexit
mov
xchg
xchg
push
sbb
jns
jle
out
add
arpl
jl
mov
fwait
sbb
ljmp
fistpl
xchg
add
stos
ja
jle
sub
cmp
cmp
adc
mov
adc
jno
sub
fcmovb
xor
pop
jae
inc
inc
ds
test
fdivl
jbe
push
add
xchg
insl
js
or
mov
xor
mov
neg
mov
loopne
mov
push
pop
inc
inc
xlat
idivl
add
xchg
or
mov
loop
mov
dec
push
xor
jmp
cwtl
int3
xlat
push
hlt
adc
test
pop
push
out
push
pop
les
pusha
enter
fmull
ja
sub
scas
cmp
imul
pop
mov
dec
shll
jg
push
testb
daa
mov
insl
adc
test
rcl
loopne
mov
xchg
popf
add
dec
pop
daa
call
lods
push
dec
imul
mov
or
movsl
or
xchg
push
sbbb
pop
dec
push
dec
imul
fs
mov
pop
inc
in
jno
call
mov
insb
mov
dec
movsl
stos
loop
roll
jmp
addl
push
adc
pop
xlat
clc
ret
pop
mov
pop
cmp
stc
test
and
aaa
inc
popa
jge
pop
inc
enter
cmp
je
into
push
aaa
jle
cmc
xor
ret
cmp
out
lret
das
push
jmp
jns
ficoml
adc
cltd
inc
inc
xor
sub
mov
mov
ret
scas
pop
ds
lret
sbb
pop
scas
dec
pop
push
out
lds
mov
andl
push
xchg
and
jge
mov
daa
dec
rcrb
lods
push
sbb
xchg
mov
leave
add
or
aaa
mov
mov
push
pop
std
cmc
add
mov
sub
or
pop
ret
push
subb
and
jecxz
pop
mov
jns
mov
int3
ss
xchg
scas
out
xor
pop
add
fwait
insl
in
adc
loop
cltd
mov
mov
mov
sbb
das
dec
repz
int
add
inc
cli
jg
sub
or
dec
popf
jae
jae
shlb
adc
movsb
aam
leave
imul
pop
repnz
sbb
ds
lods
sti
mov
shr
aam
push
add
sub
cmp
mov
push
mov
lock
cmp
xor
or
cwtl
push
add
xchg
mov
nop
adc
rcrb
lods
inc
mov
dec
cs
hlt
test
movsl
add
dec
jmp
add
add
cmp
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
aam
mov
test
scas
into
insb
repz
ret
ss
movsb
test
and
test
stc
pusha
pop
sub
aam
shll
ret
cmpsb
adc
outsb
xchg
scas
data16
pop
xlat
sbb
xchg
jmp
hlt
test
in
xchg
or
fs
aaa
pop
into
dec
adc
pusha
pop
mov
sbb
xchg
push
sahf
test
jg
mov
rcll
jecxz
push
scas
jl
mov
adc
rcr
dec
adc
mov
mov
adc
mov
xor
pop
ljmp
adc
lcall
out
mov
mov
mov
imul
aas
add
mov
pop
int3
orl
test
cltd
out
jmp
xchg
loop
dec
out
pop
inc
in
mov
inc
sub
pop
dec
sarl
pop
iret
test
sub
dec
mov
push
xor
stos
push
sbb
mov
cmp
inc
or
or
insl
lods
xchg
clc
adc
out
dec
push
xorb
scas
inc
fwait
cmpsl
pop
jbe
out
mov
scas
mov
lods
ja
lahf
pop
xchg
pushf
and
outsl
xor
lahf
add
mov
sub
out
xchg
stos
fnstenv
add
dec
je
fisubrs
add
mov
and
sbb
inc
mov
aam
or
xchg
scas
divb
out
xor
fwait
sahf
cmpsb
js
sbb
xchg
inc
inc
shrl
or
sbb
les
in
sbb
add
shrb
loopne
jo
or
rcrl
jle
or
sub
push
sbb
adc
test
push
push
push
dec
shrb
int3
jne
jno
push
jno
or
and
dec
or
jmp
sub
jno
sbbb
sub
cwtl
lea
aam
and
jnp
call
or
fbstp
cli
cmp
jp
or
add
rcll
cmp
jb
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
dec
pusha
js
stos
adc
stos
movlps
stos
adc
pop
lods
mov
idiv
mov
mov
push
inc
jl
sub
lea
rorb
pop
mov
sub
outsl
fists
or
mov
lods
in
xchg
sub
outsb
jmp
insl
pop
pop
mov
popf
aaa
repnz
rolb
sbb
mov
dec
out
ljmp
int3
rcrl
not
cli
sub
sub
push
scas
or
mov
rcrb
mov
stos
add
dec
ss
insb
imul
pop
cmp
cmp
add
sbb
insl
jecxz
outsl
dec
jp
test
dec
cmc
cmp
or
or
or
movsl
inc
je
adc
push
sbb
pushf
or
xchg
cs
stos
jbe
lods
adc
loopne
outsl
xor
clc
imulb
xchg
cmp
lods
and
dec
pop
cli
or
mov
dec
iret
adcb
sbb
or
pop
in
xchg
scas
pop
bound
jne
in
insl
adc
sbb
dec
fucomp
in
cli
jmp
out
mov
pop
cltd
in
inc
sub
sub
dec
pop
push
fdivl
push
mov
int
test
cli
mov
xchg
mov
daa
in
mov
cmp
xor
lock
add
pop
add
push
fdivs
fldl
gs
xor
into
and
mov
push
xor
jmp
mov
xchg
sub
xchg
loopne
fcomp
cmp
jae
mov
lret
sbb
jp
mov
and
imul
dec
lcall
mov
mov
mov
xor
andl
or
testl
sbb
insl
lret
mov
ret
mov
rclb
xor
pop
push
adc
cmp
or
sub
fcompl
xor
adc
jmp
pop
mov
ds
out
icebp
lods
inc
lcall
mov
push
sub
xor
shl
push
lret
das
in
loope
jb
dec
mov
cmp
add
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
mov
js
cmpsl
adc
stos
movlps
mov
daa
cltd
sbb
shrl
cmc
pushf
sub
ja
test
les
adc
xchg
xor
dec
mov
adc
jg
cld
ret
std
nop
sub
add
nop
mov
das
out
mov
shlb
cmp
cltd
int
mov
lahf
es
subb
lret
popa
out
cmp
test
sarl
shrb
les
aas
push
pop
sub
mov
pop
jg
mov
shlb
mov
pushf
sbb
sahf
stos
and
push
mov
fbld
in
adc
out
jns
dec
leave
xorl
dec
dec
adc
repnz
jb
arpl
enter
stos
jb
mov
cmp
and
add
adc
pop
addb
mov
and
roll
dec
lock
jne
xchg
jmp
movsb
out
mov
out
mov
cli
dec
out
roll
testb
or
das
xchg
pop
push
ret
mov
jbe
insb
dec
lcall
leave
ret
cmp
dec
xorb
pop
mov
sub
pop
pause
mov
cmc
call
add
push
movsl
add
pop
xchg
push
sti
cmp
fwait
pushf
push
mov
loope
mov
or
cwtl
cld
or
mov
loop
and
shll
aad
sbb
outsl
mov
test
fucom
and
jmp
leave
lock
mov
fadd
pop
fs
cmp
pop
cmp
nop
mov
push
adc
pop
cmpsl
xchg
loopne
out
imul
stos
icebp
addl
or
or
jle
mov
sarl
mov
push
pop
sbb
mov
out
mov
push
lods
int3
das
xor
cli
jo
les
push
out
dec
enter
mov
test
js
add
xchg
and
adc
mov
int3
or
push
ja
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
jge
cmp
mov
adc
shl
out
add
pop
push
jecxz
push
fcomi
sub
jge
lods
jp
imul
jl
lret
sarl
xchg
cmp
cmp
fsubrs
jne
pop
outsl
push
stos
or
xchg
adc
mov
mov
popf
outsl
popa
cmp
neg
fnstcw
int3
data16
jl
gs
xor
std
mov
cwtl
jle
movsl
or
fisttpll
jmp
adc
adc
arpl
das
outsl
out
rorb
repz
push
insb
and
daa
cmp
mov
pop
orb
lret
inc
and
lds
mov
jmp
test
and
pop
pop
mov
arpl
xchg
or
fucomp
push
ljmp
into
jg
jecxz
sbb
call
jmp
mov
mov
ljmp
mov
push
xchg
mov
ret
or
mov
dec
std
mov
test
je
dec
xchg
nop
push
mov
jmp
add
push
pop
je
test
hlt
shrl
push
adc
and
push
mov
jbe
pop
popf
negl
pop
fs
xchg
test
or
lods
pop
lahf
add
in
repz
xchg
sub
adc
daa
rorl
js
cmp
pop
dec
mov
pop
ret
into
iret
jl
push
aas
addr16
movsb
ds
shr
jp
adc
add
mov
pop
test
pop
in
fs
ror
int
stc
aad
dec
or
pop
mov
cmpsl
imulb
mov
das
repnz
sub
push
mov
imul
enter
aad
jnp
fsts
cld
cs
xchg
scas
jmp
mov
inc
lods
jmp
in
shll
inc
ja
pusha
outsl
mov
inc
xor
and
int
rcl
xlat
xor
push
push
sar
fwait
mov
pusha
test
add
hlt
mov
rcll
sbb
add
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
aad
inc
stos
mov
adc
stos
movlps
loopne
jo
dec
ss
mov
test
repnz
rclb
inc
and
cwtl
mov
fstpl
iret
es
inc
and
ljmp
aam
fs
fadds
jg
xchg
scas
dec
adcl
xchg
jne
loope
nop
sub
in
insb
pop
jns
in
sahf
adc
rolb
fcomip
sbb
mov
cmc
shrl
sub
aaa
imul
sbb
mov
test
fcmovu
scas
xor
int3
repz
jno
push
inc
dec
outsl
outsb
pop
in
gs
aaa
leave
add
and
cmp
mov
cmpsl
add
jo
loop
jbe
jecxz
rcrl
lret
mov
mov
pop
mov
xchg
inc
dec
mov
inc
xchg
pusha
xchg
and
mov
sbb
inc
int3
push
mov
mov
mov
cmpl
das
ljmp
not
out
dec
loope
fidivrl
leave
aad
mov
dec
les
stos
iret
xor
jmp
dec
int
je
pop
insl
jbe
out
je
pop
imul
pusha
cmp
and
movsl
cmpsb
callw
mov
add
int
ljmp
mov
mov
fsubrl
fmull
xchg
pop
mov
mov
inc
dec
and
cmp
int3
mov
jbe
shlb
das
jp
psrad
ss
mov
stos
sbb
stos
repnz
add
into
adc
lret
xchg
adc
or
ret
xchg
push
je
jno
push
mov
fucomp
or
in
lret
js
jg
push
movsl
adc
or
adc
sahf
mov
shrb
repnz
pop
pop
aaa
mov
scas
pop
cmp
lret
push
jp
cmp
cmpsb
adc
cmc
imul
cmpsb
push
testl
jecxz
ljmp
jecxz
negb
push
test
dec
aad
in
mov
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
inc
sbb
fistpll
xchg
mov
ljmp
dec
push
jnp
add
mov
aaa
or
mov
inc
rcrl
addb
ret
jle
repnz
mov
and
lea
movsl
clc
in
mov
ljmp
mov
mov
mov
mov
xchg
mov
xchg
sbb
sub
cmp
pop
push
cmpsl
inc
xor
lods
add
fs
xchg
mov
imul
or
xor
mov
push
out
movb
scas
inc
push
lods
mov
sarb
cmp
inc
inc
pushf
cmp
pop
nop
adc
adc
ficoms
mov
xor
mov
mov
das
or
mov
mov
xchg
lods
inc
dec
int3
cmpsb
xor
or
xchg
adc
dec
and
imul
jecxz
lret
mov
sahf
fmuls
lock
andl
sbb
lds
imul
psubw
aad
aad
sub
inc
dec
cwtl
insl
insl
jnp
in
outsl
sub
cmpsl
mov
cmp
jbe
notl
fdivrs
sahf
std
xchg
push
sbb
and
imul
addb
pop
pop
pop
xor
and
lret
dec
test
into
pop
and
push
mov
test
std
ficomps
lret
test
adc
add
and
out
fstps
lahf
clc
mov
and
mov
outsb
mov
cld
fs
mov
mov
pop
pop
xchg
mov
std
xor
mov
or
cmc
stc
adc
adc
add
jb
fistpll
icebp
jg
ja
cmp
ror
dec
mov
mov
cs
in
andb
addr16
or
sbb
test
xchg
test
mov
xchg
sub
ficoml
inc
lock
sahf
dec
pop
fstpl
lods
xchg
jne
sbb
or
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
push
insb
loop
mov
pop
sbb
dec
cmpl
inc
lret
xchg
mul
in
xor
or
rcrb
cli
mov
xchg
in
cmp
mov
mov
or
mov
daa
xchg
xor
scas
adc
and
pop
pop
push
xlat
pushf
sti
sub
sti
hlt
pop
inc
cwtl
mov
jle
pop
mul
testb
and
mov
or
mov
scas
cs
cltd
std
lcall
adc
sub
dec
xchg
nop
rclb
in
inc
loope
loopne
and
dec
add
xchg
mov
jo
or
pop
inc
outsb
pop
adc
or
fisttps
xor
mov
pop
adc
push
sbbb
xor
xchg
sbb
loop
pop
mov
inc
mov
lds
mov
inc
adc
dec
sbb
mov
add
pop
lea
xchg
mov
or
sbb
push
cmp
outsb
shrb
xchg
dec
rorb
je
cltd
fsubs
add
cmc
cld
xchg
popa
mov
and
push
jb
adc
pop
cmp
sbb
mov
das
mov
inc
imulb
testb
lret
cwtl
push
test
push
dec
outsl
insb
sub
push
sbb
std
push
jnp
shlb
inc
idivb
sub
jle
stos
pop
mov
sbb
or
inc
pop
and
push
jmp
jecxz
add
push
mov
icebp
stc
lods
repnz
mov
mov
xor
sbb
xchg
leave
arpl
inc
push
icebp
mov
pop
xchg
stos
jp
in
bnd
adcb
xchg
rcrb
dec
aaa
std
dec
mov
pop
push
cmp
sub
mov
and
stos
and
dec
push
inc
xchg
movsb
cmp
inc
and
pop
add
push
mov
scas
js
stos
aas
movsl
mov
sbb
jl
insb
add
int3
mov
adc
push
adc
xchg
enter
hlt
outsb
movsl
aam
lock
out
aad
xchg
test
inc
call
cwtl
cmp
mov
cmp
add
jns
mov
add
shrb
or
push
cmp
and
xchg
xor
dec
mov
xchg
mov
aaa
xorl
out
nop
push
jmp
push
jg
jnp
inc
sti
add
int3
das
jge
fs
loop
fucomip
jl
orb
icebp
push
and
stos
in
add
cli
push
mov
negl
dec
call
jmp
sbb
and
cmp
fistps
ret
push
pop
movsb
pop
sbb
aaa
push
xor
gs
daa
gs
in
push
mov
fsubl
cmp
mov
pop
lret
xchg
mov
lret
outsb
imul
int
fucom
mov
mov
test
mov
test
pop
mov
aaa
jg
xor
mov
inc
inc
cmp
in
dec
pushf
arpl
cld
pusha
pusha
cmpsl
mov
notl
stc
pop
in
fldlg2
out
xchg
pusha
sbb
mov
xchg
pusha
or
mov
jle
outsl
push
jp
pop
mov
sbb
jg
loop
xor
nop
and
cmp
and
popl
iret
orb
and
add
xor
jns
lds
push
lods
enter
loop
in
and
lods
sub
adc
push
je
mov
dec
mov
cmc
std
xchg
xchg
shr
add
clc
out
jg
leave
dec
dec
cmp
or
lea
jg
call
mov
loopne
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
inc
bound
xchg
adc
pop
adc
adc
mov
fbstp
xor
sub
sahf
lret
dec
gs
pop
xor
or
fadds
add
bound
mov
mov
scas
lcall
nop
inc
decb
jns
js
push
scas
or
sub
cmpsl
push
push
jae
pop
jno
push
in
in
dec
scas
dec
jae
push
and
adc
cmp
hlt
testb
out
in
scas
out
sarb
push
out
mov
stos
push
mov
outsl
push
xchg
xchg
cld
add
inc
fwait
jns
or
jle
lods
pop
push
jg
mov
dec
aam
mov
daa
sbb
adc
sbb
mov
ss
rorb
mov
inc
mov
mov
dec
inc
movsb
xor
inc
xlat
outsl
fimull
mov
inc
push
inc
incl
push
push
adc
dec
fmul
out
es
clc
clc
sub
negl
cmpsl
push
addr16
jle
jae
mov
fldl
and
out
hlt
inc
xchg
shlb
cli
mov
inc
scas
adc
pop
addr16
adc
addb
int
dec
imul
inc
inc
mov
push
sub
xchg
loop
fldt
cmp
dec
push
push
in
cmp
push
or
inc
in
pop
or
sub
loop
dec
mov
adc
fwait
cmp
and
loopne
inc
into
aam
dec
ljmp
cmpps
pusha
mov
inc
sahf
mov
and
leave
sub
popa
xor
push
insl
and
sub
insl
fnstsw
xchg
dec
dec
add
iret
or
inc
fs
inc
mov
inc
shlb
xorb
sahf
int3
int
cmpsb
rolb
mov
out
test
aam
lea
xchg
divl
enter
sbb
pop
dec
mov
cmp
push
divb
dec
int3
mov
inc
pop
loop
sti
cmp
lret
mov
mov
out
es
sub
lret
lea
mov
fs
testb
and
push
jg
insl
dec
dec
cmp
sub
xor
pop
icebp
clc
sbb
out
insl
xor
scas
inc
cld
push
fidivs
in
ret
pop
jb
shll
add
inc
mov
mov
add
shr
jge
imul
sub
ja
outsb
flds
or
outsb
ljmp
cmp
dec
pop
inc
cli
pusha
cmpsb
stc
mov
pop
pop
cld
add
xchg
mov
xchg
inc
fs
sbb
cmp
lcall
clc
incl
jnp
ret
out
push
mov
mov
sahf
push
test
fwait
cwtl
pop
push
pop
mov
out
imul
sub
ja
sahf
add
mov
cwtl
hlt
sbb
push
andb
lock
dec
movb
in
sbb
sbb
push
xchg
lret
je
iret
and
out
out
pop
ret
sub
push
das
push
push
xchg
inc
pop
mov
fimull
sub
dec
push
test
add
inc
cwtl
aas
sarb
mov
imul
cmp
mov
daa
xchg
loop
lea
dec
push
aaa
mov
rorb
int3
push
mov
shlb
cmp
ret
dec
inc
clc
dec
js
into
adc
fdivr
xor
adc
mov
shlb
and
jge
pop
inc
das
loop
faddl
mov
dec
subb
mov
bswap
jle
sub
pusha
and
in
jns
and
add
mov
rorb
cmp
nop
push
leave
pusha
cmp
mov
cmp
xchg
imul
orb
pushf
and
ret
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
jne
cmc
stos
in
mov
adc
movlps
pop
jbe
sbb
repz
popf
add
sbb
arpl
mov
mov
es
divl
sti
shlb
je
jmp
loope
and
loopne
pop
sbb
rorl
mov
imul
shl
xchg
cs
icebp
aad
jle
popf
xchg
sbb
fdivrl
clc
ret
mov
imul
mov
sbb
mov
subb
mov
pop
xchg
jmp
push
xor
mov
mov
ja
add
std
lret
sub
mov
sbb
imul
insb
push
push
test
cmp
sub
mov
repz
inc
test
and
loopne
inc
mov
loopne
jbe
push
rolb
cmpsb
leave
sub
jnp
and
outsb
jmp
inc
cltd
outsb
scas
add
xor
cmpsb
inc
cmp
movsb
clc
cmp
cli
mov
mov
or
dec
add
push
stc
and
xor
mov
sarl
ljmp
jns
pop
xchg
bound
mov
pushf
pop
gs
inc
jmp
leave
rcll
xchg
add
pop
popa
adc
fidivrs
and
add
xor
ret
jb
jle
movsb
shll
pop
jle
test
inc
xchg
les
je
icebp
in
push
xchg
testb
cs
mov
popf
fs
jle
mov
decb
movsb
inc
push
xchg
or
cmp
shl
push
nop
jle
cld
or
addr16
dec
jg
xchg
addr16
lock
or
sbb
mov
mov
adc
inc
jecxz
push
out
movsl
loop
cmc
push
push
mov
push
in
aad
xchg
add
adcb
or
mov
jl
aaa
inc
arpl
xchg
pusha
sbb
jns
movsb
mov
loopne
inc
push
push
out
fisubs
int3
mov
shr
pop
aam
inc
inc
push
sar
enter
or
ret
in
sbb
mov
jle
jecxz
inc
adc
dec
daa
into
xor
lock
pop
ja
inc
dec
jecxz
iret
cmp
sbb
inc
inc
sti
inc
pusha
push
cmpb
sbb
or
xor
add
and
ror
pushf
push
fisttpl
imull
and
dec
sub
or
repnz
add
je
lock
movsl
sub
dec
and
push
or
out
mov
in
clc
jo
push
mov
shlb
xchg
shl
and
scas
pushf
icebp
add
das
mov
xchg
sub
jg
pop
pop
aas
mov
xchg
xchg
cs
cmp
pop
jp
push
imul
mov
add
xlat
xor
test
dec
sub
sbb
stos
cmp
xor
in
nop
in
lods
add
cmpsb
cmp
or
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
fadds
sbb
aad
or
or
into
pop
cmp
orb
out
mov
imul
lcall
adc
icebp
pop
lahf
in
scas
inc
add
adcb
inc
sahf
push
mov
nop
add
mov
sahf
scas
push
fdivl
dec
cwtl
lcall
jb
pop
inc
out
jmp
push
out
dec
lea
dec
pop
mov
and
dec
mov
fwait
jbe
sar
and
mov
pop
jecxz
inc
xchg
cmc
incb
inc
popf
les
push
fistl
fists
shll
pop
push
insl
jo
into
push
or
ret
dec
sub
add
cld
jle
jno
ss
adc
ret
jne
lret
ret
add
push
int
in
popl
jb
or
push
gs
fildl
movsb
cmpsl
lcall
add
pop
js
icebp
inc
dec
popa
out
xchg
test
enter
int3
and
add
fldt
call
fsubr
pushf
sub
push
cltd
addr16
cmc
sarb
cmp
cmp
clc
test
jp
add
adc
xchg
mov
mov
jg
mov
iret
into
sub
pop
add
dec
push
xchg
sti
cmpsb
loop
cmp
mov
jg
clc
inc
cmp
push
jl
xor
inc
lods
aam
orb
sub
cmp
sbb
test
xor
sahf
mov
and
adc
pop
or
loope
or
cli
xor
loope
popf
ret
mov
cmp
push
pop
sub
xlat
pop
dec
outsl
cmp
cmp
or
push
js
lcall
filds
ja
dec
dec
inc
lods
xchg
leave
in
clc
pop
pop
hlt
call
cli
adc
push
add
adc
adc
cmp
rcll
cli
push
jge
pushf
add
add
cmp
mov
scas
add
cltd
pop
icebp
push
adc
pop
jns
add
cmp
xchg
mov
mov
std
cmp
sarl
mov
in
movsl
push
pop
arpl
cmpl
mov
adc
cmp
mov
out
inc
cmp
fdivrl
inc
pop
push
or
jl
xor
out
scas
xor
mov
sub
mov
xchg
push
or
push
in
pop
dec
imul
rcrb
xor
jg
mov
xchg
rorb
mov
dec
clc
or
dec
xchg
insb
dec
cltd
insb
sbb
cmp
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
add
and
adc
pusha
stos
sbb
add
mov
push
pop
js
cmp
mov
fldcw
mov
ret
fmuls
jl
sbb
jbe
gs
and
jnp
stos
test
cmc
push
xor
and
lret
loope
adc
add
icebp
ret
sbb
fcmovnbe
jnp
fnstenv
lahf
mov
sti
inc
cltd
into
pop
xlat
test
cmc
int
inc
loopne
roll
aaa
jge
push
pop
push
xchg
insl
and
adc
xor
sub
mov
add
and
lods
dec
test
fsubr
inc
fstps
mov
lds
or
call
or
jle
call
fmuls
pop
sub
arpl
pop
les
dec
mov
sbb
mov
shrl
in
std
aas
mov
and
jne
cli
insl
fs
mov
cmp
xlat
sub
dec
stc
mov
adc
dec
outsb
outsb
test
shll
loopne
jp
xor
rcll
and
xor
xor
shl
lahf
repnz
enter
in
popf
out
loop
ret
repz
push
rcrl
sub
dec
ret
stos
or
iret
scas
inc
es
stos
cs
xchg
jle
mov
dec
inc
push
inc
pop
push
add
jns
adc
adc
adc
dec
out
dec
rclb
mov
adc
adc
shr
cs
in
loope
pop
jl
xor
sub
push
fildll
rcll
pusha
test
push
pop
ljmp
pop
adc
adc
mov
push
jb
sbb
negb
jns
pusha
fidivrs
xchg
jb
daa
mov
sub
testl
xor
add
inc
mov
aam
cmc
sti
rcrb
rclb
repz
mov
dec
pop
adc
mov
add
sbbb
sub
loopne
jecxz
mov
arpl
cmp
adc
xor
adc
loop
int3
jnp
mov
mov
cmp
mov
or
stos
sbb
mov
sub
out
movsb
dec
cmpsl
pop
push
jp
mov
in
or
sub
jns
ljmp
pop
sbb
scas
out
and
xor
rclb
inc
in
jo
jle
stc
xor
inc
mov
sub
jbe
jnp
dec
out
in
dec
cmp
iret
lret
push
jbe
mov
jne
push
and
jo
xor
sarb
int3
adc
sarl
adc
bound
sbb
push
pop
movsb
lock
add
in
pop
mov
int3
add
xchg
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
inc
test
lods
pop
jae
adc
mov
xlat
js
scas
dec
lds
in
push
sbb
movsb
pop
call
dec
mov
scas
out
lea
xor
or
jno
jl
pop
in
inc
pop
std
xor
enter
cmc
mov
xchg
cltd
dec
popa
push
mov
add
xchg
int
mov
stc
je
inc
adc
or
fnstenv
jne
sbb
in
ffree
aas
mov
fs
dec
popf
movsl
xchg
inc
int3
aaa
cmp
and
clc
cmp
or
mov
and
or
xor
sub
into
cmp
jnp
dec
adc
jne
out
js
sbb
xchg
push
add
mov
and
sub
sub
fs
push
into
lcall
fidivl
sub
test
hlt
mov
test
shll
loopne
cmpsb
stos
sarl
addb
push
mov
fs
pop
lea
and
dec
fstl
mov
ficomps
push
xchg
pop
movsl
jnp
pushf
or
jmp
mov
aaa
mov
test
or
jge
mov
pop
pop
dec
loopne
lahf
jge
sti
sub
pop
adc
lods
and
adc
ljmp
loop,pt
mov
ja
into
dec
jns
xchg
sbb
sarb
lcall
pop
mov
ljmp
arpl
stc
fnstenv
ret
xchg
mov
jns
inc
aaa
lea
jae
sub
cmp
add
pop
repnz
or
xchg
push
in
lock
dec
outsb
jmp
leave
mov
add
leave
xchg
cmp
aaa
pop
cmc
xchg
rol
cmpb
xchg
bound
in
xchg
iret
mov
dec
rorb
push
iret
push
cmc
mov
jae
push
sub
jecxz
jae
mov
mov
jnp
imul
test
push
movb
xorl
jo
jo
sub
lea
push
sbb
dec
mov
push
popf
jge
icebp
hlt
lds
add
mov
xchg
pushf
test
fidivrs
inc
stos
jne
or
pop
pop
and
arpl
inc
out
or
mov
lock
pop
inc
inc
inc
ret
aas
pusha
cmp
jbe
adc
xor
inc
inc
cmp
or
imul
addb
push
inc
adc
test
cmp
js
jmp
xchg
adc
sub
mov
les
adc
in
mov
jle
bound
and
fucomip
out
xor
jb
popa
xchg
outsb
adc
add
sbbl
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
adc
xor
and
ret
push
pop
out
andb
popa
push
les
xchg
xchg
divb
popa
repz
or
push
iret
pop
int3
mov
push
cmp
inc
jnp
xchg
push
pop
and
sub
add
in
push
fistpll
testl
push
iret
arpl
in
mov
add
adc
or
out
fsubrs
popa
push
pop
and
mov
dec
mov
push
adc
outsl
or
movsl
filds
or
xor
dec
lret
or
mov
xor
test
mov
sub
cmp
pop
dec
mov
lods
movsb
push
or
addb
in
addr16
jg
lods
sbb
and
inc
add
lahf
mov
jg
mov
jl
dec
mov
jbe
je
xlat
cmc
adc
shlb
lds
mov
out
or
ret
mov
test
dec
cmp
lods
sub
adc
add
adc
mov
fimull
xchg
dec
cltd
ret
mov
inc
sbb
adc
xorl
stos
jl
mov
sar
js
movsl
mov
inc
fidivrl
sbb
jne
push
fucomi
sbb
jle
shrl
ret
push
stc
push
dec
aam
sub
mov
mov
addr16
popf
out
lret
mov
aas
fwait
lock
hlt
cmpsb
or
rcrl
xchg
js
jns
jno
inc
shlb
and
into
xchg
shrb
jl
repnz
sti
ss
sti
adc
fidivrs
rcl
mov
adc
aas
mov
es
test
lock
xchg
fldenv
push
cmp
andl
jle
sub
push
out
daa
push
xor
imul
xchg
adc
lret
xchg
jae
int
enter
mov
xor
stos
jo
ljmp
or
pop
xor
pop
stos
xchg
adc
aad
ret
mov
sub
call
push
inc
add
mul
xchg
xchg
inc
hlt
jge
inc
jno
test
pop
cmc
mov
dec
sub
mov
dec
out
sbb
sbbl
jne
sub
inc
leave
mov
cmp
xchg
mov
mov
addb
dec
int3
sub
mov
std
xor
gs
push
std
ret
pusha
pusha
mov
pop
aad
shll
test
sub
subl
adc
and
cmp
sbb
imul
bound
jmp
rcll
std
jg
mov
add
mul
out
mov
icebp
sbb
mov
fwait
movsl
sbb
jge
mov
ret
cwtl
daa
cmp
gs
mov
jge
filds
sub
imul
mov
jo
inc
ja
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
mov
adc
or
fnclex
loope
lods
test
mov
mov
mov
imulb
in
rcl
jno
push
xchg
scas
inc
popa
adc
out
xor
cmp
push
jge
imul
mov
popa
vmovmskps
mov
xchg
jmp
lods
lret
out
dec
mov
cmpsb
repz
cmp
jmp
mov
movsb
pop
push
into
leave
jns
cmp
ret
push
cmp
xchg
jmp
jae
xchg
popf
mov
inc
popf
jg
orb
movsb
add
push
xor
cmpsl
push
in
test
das
xorl
out
mov
cltd
jo
push
xor
fsubrl
or
fstps
mov
inc
mov
ficoml
sbb
loopne
imul
jae
cwtl
sti
push
fnstcw
pushf
decl
xor
inc
aas
mov
or
pop
jmp
in
mov
testl
dec
push
jge
push
push
lods
mov
sbbb
out
ss
test
inc
push
bound
out
stos
pop
sbb
cld
fmul
jmp
sti
in
or
lret
pop
insl
scas
sub
call
sahf
add
adc
inc
fsts
and
cwtl
add
push
daa
repz
rcrb
gs
push
mov
or
inc
adc
shrb
shll
lods
outsb
mov
mov
jmp
xchg
cmpxchg
pop
enter
pop
cltd
scas
loopne
ret
mov
leave
jne
jl
mov
jb
pop
dec
inc
cmpsl
fisttpl
nop
cmc
and
std
xchg
add
leave
jle
movsl
aaa
mov
pop
jp
leave
push
imul
pop
test
cmp
inc
mov
test
aas
dec
or
insb
ja
gs
cmp
xor
pusha
xlat
and
pop
mov
or
repz
sub
cmp
or
jp
jo
mov
ret
push
xchg
cld
test
push
aaa
mov
pop
xchg
jecxz
out
pop
stos
cld
dec
xor
rolb
es
push
sahf
adc
int3
mov
jg
jge
dec
pop
lock
add
inc
mov
cmpl
sti
sub
push
icebp
mov
or
mov
es
enter
xchg
pop
hlt
add
out
leave
cmpsl
xchg
icebp
fs
ss
daa
or
mov
icebp
push
add
xor
jg
cmp
dec
cwtl
out
scas
movsl
adc
push
imul
daa
adc
jecxz
out
fistl
test
cmp
jge
push
pop
xor
jmp
imul
pop
sub
xchg
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
pop
lods
xchg
out
iret
fs
dec
mov
shrl
in
fbld
xchg
and
or
sbb
dec
xor
aas
adc
cltd
xchg
das
sub
sbb
push
mov
cmp
or
jae
cwtl
and
pop
adc
xchg
out
pop
mov
or
push
lcall
or
aas
stos
aas
dec
test
jg
dec
stos
cs
rcrb
sbb
pop
fdivrp
push
inc
scas
adc
mov
push
cmp
in
inc
ret
mov
sbb
ret
scas
test
subl
nop
jmp
stc
ds
shll
in
dec
inc
and
push
pop
andb
ljmp
loop
and
mov
adc
jno
ja
dec
add
ret
jns
jle
into
sbb
or
or
ret
jecxz
mov
loope
dec
mov
dec
xchg
cmpl
mov
xchg
adc
pop
mov
and
mulb
inc
mov
fwait
es
pop
mov
enter
jmp
imul
xor
pop
dec
xlat
cs
cmp
outsb
mov
sti
sbb
add
mov
dec
push
or
out
push
outsl
sub
fistpll
adc
mov
jb
fs
in
jge
jb
xchg
mov
js
cmp
mov
cmc
mov
dec
xor
cld
enter
out
hlt
sahf
stos
mov
xchg
test
cmc
in
or
dec
repz
dec
cmp
in
cmp
or
mov
in
cmp
or
call
pop
push
out
dec
ljmp
scas
aaa
addr16
add
pop
xor
scas
inc
dec
ds
rolb
or
mov
imul
dec
inc
xor
insl
ljmp
popf
inc
jns
sub
nop
insl
xchg
jb
in
xchg
popl
sbb
popa
imul
sarl
fdivl
add
cmpsl
test
or
test
and
mov
lret
sbb
mov
or
fildll
ret
xchg
ljmp
mov
shl
pop
or
mov
dec
pop
mov
stos
fimuls
iret
push
ds
stos
and
gs
pop
and
sbb
xor
sub
arpl
inc
mov
pop
lret
fsubl
push
mov
orb
int3
hlt
movsb
cmp
es
dec
sub
imul
dec
cmp
push
cmp
movsl
sbbb
jb
and
pusha
fstps
sub
fistps
int
lahf
es
leave
jl
adc
cmp
je
je
or
push
sahf
mov
jne
jl
ds
mov
and
stos
jnp
aaa
shll
jne
xchg
pop
mov
cmp
mov
addl
push
sub
push
mov
jno
sub
sahf
mov
mov
aam
popf
enter
xchg
mov
popa
fcomps
jg
out
sahf
bound
movsl
in
push
repnz
es
or
rol
lahf
cmpsb
aam
test
fwait
add
ljmp
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
outsl
loope
lods
inc
pop
adc
jp
adc
addr16
test
xor
mov
add
fsts
js
cmp
scas
cmpsl
xchg
add
sub
push
cmp
mov
push
mov
or
lock
test
add
dec
jae
std
es
sbb
cmpsb
mov
icebp
xchg
cmp
xchg
add
movsb
sbb
cmp
cmp
xchg
mov
stos
lret
and
xchg
enter
lock
fisttps
movsb
mov
xor
pop
adc
pop
xor
mov
push
stc
pop
fmulp
adc
sub
dec
aaa
test
rorl
jo
lcall
jl
in
sbb
adc
sub
fildl
pop
test
push
jmp
xor
dec
sub
add
inc
cmpsb
stos
daa
cmc
fldl
int
fidivs
adc
rcr
xor
cmpsl
mov
jg
out
out
std
fldt
mov
pop
push
cmpsb
in
add
push
cli
cmp
sbb
je
jo
pop
mov
clc
bound
xor
and
pushf
ljmp
push
and
inc
notl
xor
xchg
push
pop
shlb
leave
std
or
inc
pop
mov
pop
mov
lret
push
jns
add
fadds
and
xor
stc
popf
push
jg
xlat
sub
adc
in
mov
cmc
lea
cmp
jg
mov
out
mov
mov
lock
mov
test
in
icebp
outsb
push
rorl
jle
sub
cmp
sbb
addr16
sbb
in
mov
fcoms
lock
cmp
pop
mov
push
xor
or
mov
je
dec
add
mov
or
inc
adc
add
and
daa
arpl
into
sub
mov
aad
js
sbb
ror
adc
insl
jo
sbb
jae
imul
bound
push
sti
or
out
xor
dec
popf
enter
adc
push
imul
or
arpl
xchg
pop
push
or
push
mov
std
or
out
bound
xchg
fsubrs
cmp
sub
and
dec
sub
andb
arpl
sbb
or
and
or
movsb
xor
sbb
out
pop
out
cmp
test
int3
pop
in
inc
jmp
lahf
je
adc
inc
sub
sahf
in
sub
out
shl
sbb
data16
pop
fcompl
out
fisubl
xor
pushf
xor
call
jecxz
iret
imul
jnp
xchg
xchg
mov
push
pop
adcb
mov
jl
test
shll
pop
push
out
xchg
xor
mov
das
cmc
jmp
pushf
jo
or
pop
xchg
and
fs
xlat
jle
cmp
jp
and
lcall
iret
cwtl
jae
fadd
adc
adc
nop
push
inc
repz
sbb
in
mov
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
stos
cmpsb
xchg
js
pop
adc
jp
adc
jp
daa
sub
jmp
ss
enter
rcl
fadds
arpl
je
mov
push
loop
ss
mov
mulb
xor
je
dec
call
xchg
fimull
xchg
roll
fiadds
pop
cltd
lret
add
jb
jmp
in
sub
push
mov
imul
xchg
lock
add
push
ret
mov
cmp
sub
push
or
xor
dec
scas
inc
sbb
jge
sarl
pop
loop
addb
test
jo
mov
mov
push
sbb
xchg
mov
mov
dec
mov
ficompl
cmp
fdivrl
add
xchg
dec
or
fistpll
ljmp
mov
clc
pusha
mov
popa
iret
inc
std
stos
pushf
in
imul
popf
inc
mov
mov
xchg
or
test
push
in
shlb
pop
lds
mov
test
cld
adc
dec
icebp
cmp
sub
jb
xor
lcall
xor
sub
push
jl
je
cmp
and
loope
aaa
push
sub
insb
pop
add
cmp
ja
mov
inc
fisttpl
imul
mov
sti
mov
mov
mov
repnz
or
adc
xor
les
lods
imul
test
aad
cmp
add
addr16
notb
test
cs
jmp
adc
in
hlt
cmp
inc
mov
inc
sbb
inc
mov
mov
fsubp
or
stc
and
cmp
adc
cmpl
mov
pop
inc
jecxz
sar
inc
ret
adc
addl
int3
and
aad
ret
mov
dec
lret
icebp
adc
add
ds
fs
shlb
lcall
jecxz
dec
in
icebp
mov
mov
xchg
sub
and
loop
sbb
loop
mov
add
sahf
out
mov
inc
add
mov
inc
loope
mov
std
sub
fldcw
fwait
xchg
daa
clc
jecxz
add
sti
loop
sbb
cmp
cmp
sbb
outsb
pop
cli
mov
sbb
js
mov
inc
mov
sub
loopne
addr16
inc
pop
movsb
and
es
hlt
xchg
fcomp
xor
jnp
ret
sub
rorb
ret
cmp
add
test
inc
pop
loope
cmpsl
leave
cmp
lock
mov
daa
ds
out
inc
pop
inc
pusha
mov
mov
adc
insl
mov
sbb
mov
leave
ja
negb
outsb
xchg
mov
mov
xchg
pop
or
call
ret
insl
mov
cmpsl
aaa
adc
pop
xchg
dec
repz
or
xchg
bound
hlt
outsl
xor
lcall
and
and
andl
cld
jne
cmp
clc
mov
and
das
xor
rclb
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
es
push
adc
jp
adc
and
pop
jmp
lods
ds
cs
fdivl
inc
mov
mov
out
int
cmpsl
jns
mov
and
mov
loope
push
fnstsw
pop
subb
add
test
fadd
and
mov
jp
jecxz
notl
imul
cli
shr
sub
push
dec
imul
lret
iret
dec
cmp
movsl
or
mov
dec
and
mov
jno
dec
int3
pop
cmc
cmp
rcl
pop
mov
mov
inc
clc
ret
ret
test
dec
repz
cltd
leave
sub
sub
jae
xchg
lahf
movsb
dec
cmp
arpl
xor
into
lds
cmp
dec
mov
pop
mov
mov
pop
mov
es
imul
fildl
out
cmp
sti
mov
loopne
mov
loopne
or
cmpsb
add
pop
test
out
push
inc
sub
dec
iret
sbb
dec
repz
pusha
lret
push
sub
mov
popf
sbb
sub
cmp
fldt
and
or
popa
sbb
add
pop
das
ja
jg
in
push
cltd
imul
push
nop
or
ficoms
out
and
outsl
push
mov
pop
std
jnp
sub
jne
pop
roll
into
and
cmp
dec
into
data16
sub
ds
jg
ffree
dec
jge
dec
sbb
loope
loope
pop
ss
jmp
push
enter
cmc
lds
lods
pushf
or
sbb
adc
mov
inc
fcoml
push
fmull
xorl
cmp
jo
jl
andl
sub
jno
loope
scas
lcall
arpl
cmpsl
outsb
fisttps
inc
dec
imul
call
shlb
xor
sbb
fcompl
jge
jmp
mov
jno
lock
ljmp
mov
mov
or
rcrl
push
out
or
push
mov
mov
jle
push
fcoml
sub
push
int3
mov
and
pop
mov
jb
cmp
inc
fildl
shlb
or
cmp
jmp
or
mov
xchg
jne
mov
aad
inc
push
push
stc
add
jbe
cmp
icebp
scas
and
out
cmp
sub
pusha
or
jno
mov
dec
mov
push
jo
sub
mov
and
adc
mov
cmp
xor
loope
cli
xchg
sahf
out
xor
mov
stos
fyl2x
je
cmp
fsubrs
mov
sbb
xor
movsl
popf
jg
jb
lods
cli
cmpsb
aad
sbb
mov
cld
out
jb
xchg
fcoms
and
cltd
je
adc
mov
es
int3
mov
lods
out
roll
or
imul
push
add
jg
jge
or
rol
jbe
xor
sbb
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
out
push
inc
adc
lea
adc
push
pop
das
sbb
dec
or
mov
mov
push
add
cs
fistl
xchg
sub
xchg
push
mov
in
call
and
jno
pop
rorb
or
cmpsl
xchg
mov
mov
test
add
add
mov
push
call
leave
adc
pushf
inc
lea
frstor
ss
es
scas
dec
pop
ja
jmp
pusha
stos
cltd
xchg
nop
mov
sbb
pop
mov
mov
push
aas
mov
scas
push
mov
push
pop
mov
xchg
test
imul
icebp
add
push
dec
cmpsb
sub
push
xchg
aaa
push
mov
scas
fadds
mov
out
stos
jle
setl
adc
mov
arpl
icebp
mov
push
dec
mov
aaa
dec
dec
andb
xchg
test
mov
repnz
fstl
dec
test
inc
mov
pop
mov
xor
mov
call
xchg
sub
fsubl
mov
daa
cmpsl
sub
popa
aam
push
dec
pop
data16
inc
stos
mov
imul
or
mov
scas
imul
cmpsl
in
push
insl
jo
sub
and
xor
and
jecxz
pop
pop
push
mov
fadds
inc
repnz
pop
jmp
add
aas
jl
or
adc
in
pop
outsl
fnstenv
cltd
xchg
inc
sti
in
call
mov
mov
mov
mov
xor
mov
scas
sahf
and
xor
test
xlat
xchg
sub
sbb
test
xor
xor
pop
xchg
aaa
movsl
pop
nop
dec
test
negb
xchg
sti
cmp
insl
xlat
jbe
je
add
or
lret
push
pop
push
inc
test
ss
cmp
sahf
mov
insb
cmp
imul
gs
dec
jmp
add
stos
mov
repnz
pusha
into
jg
cmpl
les
add
adc
loopne
sbb
mov
cmp
and
test
jae
xchg
lock
loope
add
jmp
nop
lods
and
add
arpl
pop
lret
mov
sbb
testb
lret
scas
xor
sub
fidivl
xchg
mov
dec
xor
in
jns
and
lret
les
inc
cld
shlb
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
clc
test
sbb
mov
stos
and
data16
xor
inc
push
dec
pop
fs
loope
subl
in
mov
fmuls
ret
jb
in
lods
jle
inc
pop
ds
and
cmpb
int3
cmp
ss
fidivs
push
or
ja
dec
sub
mov
xor
inc
int
scas
dec
cmp
inc
mov
push
lds
fcompl
inc
add
std
dec
or
jecxz
mov
fisubrl
mov
lret
divl
shll
xor
sbb
or
inc
xchg
hlt
mov
addr16
mov
xchg
dec
lret
sbb
shl
inc
out
cmp
push
cmp
cmpsl
add
loopne
mov
daa
test
mov
fs
dec
mov
ret
leave
loopne
inc
stos
lahf
fisubs
repz
sub
xor
add
pop
ret
aad
clc
test
sbb
rcl
out
xchg
in
jmp
mov
mov
outsb
jno
loop
repnz
gs
mov
sarb
movl
fistl
inc
mov
or
lea
sub
mov
pusha
loop
je
lret
push
cmp
sahf
mov
mov
fxch
mov
mov
mov
rorl
lea
xchg
sahf
test
gs
into
mov
outsl
and
ds
aaa
stos
dec
mov
ja
mov
inc
repnz
xchg
lret
roll
push
mov
mov
xchg
xor
mov
fdivr
add
iret
push
shll
mov
lock
mov
daa
jge
ljmp
mul
stos
and
adc
shrb
add
loop
fwait
add
add
ja
stos
xchg
and
lock
xlat
sbb
fisubl
and
inc
push
insb
out
dec
jg
adc
add
push
inc
fistl
pop
pop
xor
and
movsb
adc
sbb
sub
enter
add
sbb
or
cwtl
outsl
pusha
mov
leave
stos
dec
and
dec
ds
iret
out
or
arpl
and
shr
mov
xchg
and
mov
inc
cltd
fldcw
outsl
xlat
xor
out
mov
shlb
mov
imul
data16
outsl
push
push
pop
sub
push
mov
jns
loope
jge
inc
mov
xor
jmp
add
inc
mov
stos
mov
insb
sbb
mov
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
mov
divl
push
xchg
sub
outsl
cmp
enter
or
popf
mov
cld
inc
faddl
jns
xchg
js
mulb
dec
test
sbb
push
stos
iret
inc
adc
call
xor
jmp
loope
and
pop
dec
repnz
dec
mov
sbb
out
inc
inc
sbb
fists
shrb
pop
iret
ljmp
insb
cmp
inc
cmp
adc
cld
fisttpll
mov
mov
popa
or
dec
or
je
movsb
pop
ret
shlb
ljmp
scas
mov
test
add
push
lock
sub
mov
jb
sbb
mov
enter
or
out
fs
xchg
sbb
fnstcw
stos
out
sub
and
dec
mov
xor
stos
pop
xor
mov
sarl
jmp
shll
mov
mov
ds
mov
imull
jns
ret
inc
adc
hlt
xchg
push
scas
popf
sbb
mov
jbe
repnz
loope
and
push
aaa
pop
sbb
mov
hlt
cwtl
loope
push
adc
push
test
sarl
aas
fs
imul
in
jno
out
imul
lods
pop
inc
int3
pusha
dec
pop
push
lods
xchg
dec
dec
adc
mov
push
push
aaa
xchg
xchg
nop
and
loop
pshufw
pop
in
iret
fcomp
jp
mulb
mov
out
cmpsl
fcoms
daa
pop
outsl
cltd
inc
xor
inc
xlat
rorl
shll
lock
cmpsl
iret
test
sahf
xchg
in
mov
fcomi
pop
jns,pn
int3
adc
jle
lods
mov
inc
pop
xchg
pop
in
fstl
mov
stos
mov
push
rclb
cmpsl
addl
filds
and
sub
mov
hlt
sti
inc
movsb
mov
push
sub
jb
cld
sbb
and
loope
push
and
xchg
lret
add
jmp
jmp
push
push
stos
cmpsb
sarl
push
jmp
pop
imul
mov
xchg
xchg
out
sbb
sub
cmc
std
mov
in
mov
jp
sub
and
test
gs
pop
xchg
xor
pop
cmp
int3
call
fmull
add
or
or
arpl
in
and
dec
data16
shl
sub
mov
push
sarl
fcomps
or
push
pop
cmp
in
clc
testb
notl
cmpsb
push
jmp
pop
push
inc
scas
into
adc
int
cmp
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
out
mov
movlps
out
cmp
pop
gs
jo
mov
loopne
mov
cs
push
push
push
jl
jnp
cmp
lret
negb
cwtl
pop
loop
je
ret
add
pop
xor
xchg
lods
pop
add
outsl
pop
test
jno
sub
or
add
xchg
or
push
ljmp
cmp
pop
or
cltd
fisubs
sti
jge
bound
adc
and
adc
sbb
call
sbb
mov
inc
push
jle
je
sbb
and
ret
hlt
enter
sti
repnz
cli
rcrl
dec
outsl
push
cmp
stos
call
sub
pop
mov
aam
cmp
pop
cmc
scas
repnz
adc
jb
adc
sub
push
scas
es
cltd
mov
xor
imull
xchg
and
jecxz
adc
sahf
or
outsl
or
sub
cs
out
fistl
add
sub
loope
sub
lret
or
sub
and
sbb
and
stos
mov
xlat
xchg
sbb
jbe
or
mov
out
les
loopne
jo
fistps
inc
mov
aad
nop
push
fimull
movsb
lahf
pop
pop
lahf
xor
sbb
bound
dec
mov
insl
mov
icebp
mov
and
and
dec
hlt
test
out
jl
xchg
and
mov
movsl
jle
add
jb
mov
or
cld
call
xchg
leave
jno
insb
or
in
pop
xor
dec
les
pop
xchg
mov
push
loopne
jle
adc
sub
adc
push
jnp
repz
push
icebp
cmpb
sarb
das
push
pop
aam
out
loope
mov
xor
mov
sti
cmp
jb
add
inc
popf
mov
jns
cld
arpl
mov
test
insb
push
push
adc
shl
std
out
xchg
pop
ret
add
daa
mov
test
loop
jae
test
xchg
filds
int3
dec
imul
aad
add
jne
xor
mov
adc
dec
int3
dec
xor
inc
cmc
sbbl
jbe
xor
into
out
sahf
add
jecxz
sbb
cmp
mov
popa
imul
xchg
aad
insb
cmp
jne
test
mov
mov
test
stos
stos
sbb
push
mov
xchg
cmp
cwtl
and
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
add
adc
lea
adc
sbbb
dec
cltd
lock
mov
add
or
sbb
adc
or
ret
sahf
sarl
inc
push
dec
jbe
mov
cld
lret
jmp
shlb
add
mov
into
enter
in
insb
mov
pushf
xor
inc
add
insb
lahf
or
add
mov
add
fistpl
fcmovnb
xchg
pop
mov
sahf
fildll
pop
dec
push
jno
jno
add
xchg
sahf
inc
or
fmul
repnz
xor
test
roll
and
sbb
mov
andb
into
mov
xchg
xchg
lahf
lods
sbb
mov
xchg
lock
adc
adc
in
sub
jl
scas
imul
cmp
dec
sbb
in
sti
add
or
repnz
nop
jae
sbbl
test
lret
mov
pop
dec
mov
jns
in
into
sbb
popa
mov
sbb
fxsave
add
inc
add
loop
add
xor
dec
push
inc
or
jb
mov
xchg
pop
in
push
xor
mov
xchg
leave
stos
out
sub
insl
ss
push
and
popf
popf
gs
sub
test
movsl
cmp
clc
jecxz
mov
stos
shll
add
fimuls
rcrb
mov
or
fdivrl
lds
aas
xchg
push
and
jns
sub
leave
mov
xor
jl
jp
lret
movsb
pop
dec
lods
add
push
cwtl
cmp
sbbb
decl
push
aaa
cmpl
rolb
sbb
int
nop
sub
leave
mov
pop
dec
lahf
jge
movsb
mov
loope
outsl
ret
lret
sub
test
xor
ljmp
and
sbb
nop
push
mov
or
cli
pop
lock
mov
sbb
shll
sbb
sti
jnp
test
ds
cmp
repz
mov
add
test
addr16
push
in
mov
xlat
pop
sbb
xchg
das
loopne
pushf
mov
push
xchg
push
sub
popf
xchg
inc
adc
loope
cmp
lea
int3
fidivrs
lcall
mov
mov
dec
mov
flds
lret
pop
scas
xor
lock
pusha
push
bnd
jns
rclb
mov
xchg
repnz
mov
lcall
mov
enter
inc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
negl
mov
movlps
mov
pop
call
adc
std
andl
scas
sbb
pop
sub
bound
cmpsb
fsts
add
add
js
sub
and
push
lret
push
pop
jnp
pushf
jmp
and
or
roll
cmp
push
or
aad
movsl
out
fnsave
popf
xchg
rorb
and
imul
mov
sbb
xchg
rcll
les
das
mov
out
dec
dec
enter
rcrl
mov
or
jmp
sti
scas
inc
xor
adc
outsl
and
jge
jno
sub
das
sub
in
pop
and
jae
or
xchg
sahf
ret
or
jb
shl
stc
xor
fists
inc
xchg
or
or
in
inc
dec
jns
dec
push
inc
sbb
pop
jae
add
test
ljmp
movsl
es
lahf
mov
inc
ret
push
xchg
xchg
push
push
or
cld
aam
lods
inc
push
xchg
sbb
imul
mov
or
mov
mov
xorb
outsl
xorl
lods
popf
ljmp
mov
out
jns
pop
cmp
xlat
add
pop
push
or
cs
add
xchg
sub
sbb
test
xor
imul
rcrl
xor
adc
testl
inc
in
subb
icebp
loop
sub
nop
repz
push
stos
xchg
sahf
loopne
push
sub
test
xor
jmp
lret
add
sbb
out
out
hlt
xor
mov
pushf
cmp
xchg
add
adc
jle
into
push
adc
sarl
mov
sub
fdiv
ret
push
sbb
sahf
dec
int3
add
jmp
in
jg
pop
in
les
push
push
ffreep
pop
stos
dec
jp
add
inc
jl
fs
insl
into
daa
inc
loope
mov
xor
jbe
int
call
sbb
ror
pushf
xchg
lret
inc
movsb
fcomp
jg
jge
mov
adc
stos
stc
push
cwtl
adc
or
sub
rolb
push
cs
cmp
rcll
cmp
addr16
xchg
fadds
pop
adc
mov
jb
lock
jp
sti
rol
aas
jp
xorl
push
aaa
in
gs
dec
sti
jp
xlat
inc
call
call
pop
fistps
in
inc
cwtl
dec
mov
push
adc
push
or
xor
or
push
add
jmp
and
lods
and
js
mov
jle
daa
adc
lea
adc
rclb
jp
and
lret
jo
inc
cmp
adc
jp
mov
mov
lahf
enter
or
ja
jp
test
lahf
cli
imul
imul
lahf
mov
xorl
mov
clc
pop
inc
jnp
clc
dec
testb
xchg
outsb
mov
cmc
dec
mov
cmp
dec
pop
push
aas
cs
xor
sub
mov
cmp
sahf
sbb
lret
lahf
xchg
xchg
jbe
into
jge
negb
pop
mov
cwtl
hlt
inc
jbe
inc
call
pop
mov
xchg
xchg
jp
aam
dec
jbe
inc
arpl
fnstsw
inc
cltd
stos
mov
or
cmpsl
lcall
cmp
ss
pusha
sub
imulb
add
mov
jl
cmp
jmp
add
cwtl
pop
cltd
idivb
xchg
scas
lods
shll
test
lock
aaa
aad
popf
jmp
rcr
pop
mov
cmp
pop
fidivs
mov
mov
outsl
imul
cmp
xor
sub
test
adc
in
repnz
add
mov
sub
loopne,pn
imul
pop
xor
and
jl
lahf
inc
loop
jle
mov
mov
xchg
jmp
push
xor
cwtl
data16
mov
inc
lcall
shlb
lahf
stos
ds
cltd
loopw
mov
insb
jecxz
cmpl
xor
mov
jp
hlt
stos
gs
mov
lods
stos
rcrb
push
jmp
push
inc
imul
rclb
add
and
or
out
cmp
cmp
xor
cmp
movsb
sub
or
sbb
push
ret
inc
insl
adc
lret
ja
fs
shrl
dec
sub
lock
or
test
inc
rcl
cmp
lods
movsl
rorb
jecxz
push
mov
fucomip
push
inc
fdivrl
adc
mov
sub
insb
sub
sub
fwait
push
aas
or
lods
enter
das
inc
and
push
fisubrl
jp
sub
das
cli
sbb
sbbl
xor
int
mov
movsb
daa
xor
sar
je
loopne
mov
xchg
adc
andl
sbb
jecxz
xor
or
lods
cmp
xchg
out
mov
shl
in
outsb
xor
scas
insl
xchg
out
cmpsb
jae
sub
push
out
inc
aas
pusha
cmp
js
and
add
push
packsswb
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
jb
shrl
jb
mov
sub
mov
mov
scas
mov
xor
xchg
push
mov
push
inc
aaa
fstpt
sub
and
iret
pop
push
push
jnp
lods
enter
mov
mov
int
aad
jecxz
cmp
or
cltd
sub
push
fdivl
xor
sbb
ds
cmp
rol
jl
insb
fistpl
aaa
dec
fsubrs
stos
pop
xchg
add
add
rorl
adc
and
sub
sarl
mov
jne
cmc
push
inc
sbb
xor
leave
sub
daa
mov
and
mov
mov
mov
cltd
clc
push
xlat
pusha
dec
popf
shrb
lret
add
pop
into
int3
rclb
mov
mov
mov
cld
lea
arpl
stc
in
lcall
aas
hlt
adc
add
or
test
sahf
inc
or
lea
sub
outsb
imul
add
jo
jl
dec
stc
sbb
clc
xchg
inc
mov
sti
loope
cmp
sub
sub
xchg
lcall
fsubl
and
pop
and
icebp
jge
je
jle
mov
dec
push
cmp
jecxz
scas
jecxz
push
lret
pop
cmp
push
xchg
pushf
fadds
movsl
xor
jbe
cli
imul
mov
out
lcall
cmp
ja
mov
hlt
push
int
das
push
inc
push
movl
in
movsl
mov
push
inc
dec
mov
mov
push
pushf
xor
sub
or
stos
mov
xorb
cmp
adc
sub
sti
add
dec
adc
adc
test
mov
add
test
enter
cltd
sub
enter
push
adc
push
cltd
mov
pop
pop
enter
xor
test
sahf
push
and
aam
sbb
xchg
sbb
mov
cmpsl
ret
dec
scas
push
dec
int3
dec
xor
je
xchg
loop
and
and
lea
stos
int3
inc
lcall
push
int
pushl
sub
add
pop
pop
pop
mov
sub
or
inc
test
push
add
jbe
lret
das
sbb
xor
add
jae
stc
mov
int3
imul
jg
lret
xchg
lahf
cmp
enter
mov
mov
test
dec
aam
fnstcw
xchg
leave
push
sbb
sbbb
fwait
push
int3
and
sub
nop
sub
add
je
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
jo
push
sbb
adc
mov
inc
dec
push
or
xchg
jae
dec
icebp
pop
and
in
repnz
stc
jp
mov
push
jne
pop
jae
pop
fwait
adc
movsb
cmp
in
icebp
push
mov
iret
pop
cld
lea
insb
pop
cs
dec
mov
dec
jns
bound
sar
es
mov
jbe
shr
and
mov
push
sub
insl
cmp
jecxz
adc
mov
das
sbb
inc
xchg
xor
jecxz
sub
dec
clc
lcall
mov
mov
adc
cs
lret
repz
add
mov
mov
sbb
mov
sub
stos
jg
pop
or
xor
sub
cmp
pop
or
in
notb
jecxz
cmpl
je
aam
lret
stc
outsl
fstl
sbb
add
mov
test
call
pop
out
jno
stos
pop
inc
xchg
or
inc
aad
sahf
dec
insl
or
in
mov
fwait
xchg
insl
mov
scas
sbb
imul
sub
mov
cmp
inc
andb
and
addr16
movsl
inc
pop
pop
loope
and
out
insl
inc
add
xorb
lcall
iret
outsl
adc
mov
and
push
add
jnp
pushf
push
out
pop
int
lcall
add
pop
mov
pop
sbb
lret
push
call
pop
dec
mov
test
inc
push
cmc
and
mov
ljmp
and
pusha
shrl
fsub
lret
ljmp
sub
pop
fs
or
outsb
sbb
jmp
in
mov
and
mov
test
cli
fsubrl
cwtl
sbb
and
cmpsl
cmc
iret
ljmp
cmp
cmp
mov
lcall
mov
or
popf
mov
mov
adc
mov
in
cmc
mov
repnz
mov
repz
sub
or
inc
sbb
sub
mov
pop
ja
scas
nop
jbe
in
sbb
cmp
in
lcall
popf
rcrb
test
fildll
xchg
mov
fs
jmp
arpl
jmp
lcall
mov
jecxz
sub
pop
iret
and
iret
arpl
test
roll
or
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
sbb
pop
lods
nop
sbb
adc
cmp
scas
and
cwtl
shr
icebp
cmp
out
in
shll
jns
or
xlat
test
fiaddl
add
sub
jl
sbb
lret
insl
add
adc
in
das
adc
repnz
sub
mov
shl
mov
sbb
aam
cmp
int3
ja
cli
add
inc
inc
jge
cmp
ret
push
ret
aaa
pop
mov
jnp
cmp
mov
lcall
dec
jnp
xor
inc
in
jmp
shlb
and
xchg
cmp
rcl
flds
mov
mov
jae
or
fisubl
sbb
fstl
pusha
loop
xchg
inc
sub
fwait
imul
xchg
cli
jbe
or
jge
cmp
gs
sti
sahf
lret
xchg
imulb
pop
ds
adc
cwtl
lds
push
lahf
and
jbe
sbb
movb
in
sub
mov
push
inc
dec
ret
not
sub
mov
mov
lret
add
sbb
test
cld
pop
xor
jecxz
push
out
std
je
jae
or
sti
adc
xor
dec
push
mov
imul
test
enter
pushl
cmp
insb
sub
lret
sub
call
andb
test
mov
cmp
sub
popa
data16
in
dec
sbb
dec
cwtl
fwait
mov
cli
add
push
cmp
shrl
pop
xor
or
pop
add
push
mov
mov
xor
dec
mov
ljmp
fildll
jmp
xchg
dec
loopne
and
inc
or
jns
dec
lahf
ret
in
ja
daa
imull
xchg
orl
ffreep
nop
jmp
xlat
jmp
jns
jecxz
bound
fld
insl
shrl
push
cmp
ljmp
jecxz
jb
loope
or
cmp
in
xchg
icebp
jge
sub
push
pushl
bswap
pop
mov
add
inc
pop
mov
xchg
inc
out
scas
int
popf
cmp
data16
mov
addr16
mov
jle
pusha
test
sub
push
insl
add
mov
fnstsw
and
push
and
out
dec
mov
pop
mul
negl
jmp
test
pop
jo
iret
dec
and
outsb
cmp
sbb
sbb
addl
jno
mov
mov
es
loopne
mov
cmp
mov
add
push
adc
gs
xchg
pusha
and
pop
in
lahf
mov
cmp
dec
dec
push
pop
mov
or
outsb
repnz
mov
out
jns
cld
jo
adc
nop
fcomi
ss
je
mov
repz
sbb
shl
out
mov
mov
cmc
push
push
xlat
in
pop
pop
loop
sahf
jp
cli
and
lods
jecxz
int
pop
or
cmp
xchg
jle
sbbb
imul
jo
sbb
sub
xchg
stos
int
add
leave
ja
testb
gs
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
je
aaa
unpckhps
mov
loop
loopne
mov
mov
and
out
pop
push
xlat
dec
dec
jb
push
nop
xchg
call
add
adc
and
push
mov
sbb
mov
pop
ja
push
or
sarl
inc
push
lahf
iret
sub
int3
or
addr16
xor
jle
movsb
mov
sbb
loope
repnz
out
xor
mov
stc
dec
xchg
sbb
sub
outsl
adc
sub
push
sti
jg
pop
inc
add
cmpsl
xor
outsb
xchg
inc
je
out
aam
sbb
cmpsl
mov
xchg
insb
dec
inc
dec
inc
mov
sub
jecxz
cld
mov
ret
enter
cmpsb
mov
popf
out
dec
insl
lret
fistpl
push
int3
cmp
arpl
cmp
das
inc
pop
push
push
push
pop
mov
sbb
lcall
push
loop
icebp
and
push
lret
cmpsb
fisttpl
add
aad
jmp
fisubrs
sbbl
lahf
inc
lock
jmp
adc
out
rorb
out
pop
xor
rolb
or
or
adc
mov
cmp
mov
mov
in
js
lahf
dec
pop
cmp
mov
push
cmpsb
mov
icebp
fs
cwtl
pop
cmp
push
lea
sub
push
mov
fdivs
mov
test
mov
in
xor
jecxz
fildll
dec
pop
aas
push
sti
lret
movsb
inc
push
mov
negl
hlt
js
pop
subl
hlt
cmp
fisttps
jp
ds
and
or
rclb
push
cmp
mov
mov
push
jp
ds
aas
sti
test
sbbl
enter
xor
aad
mov
dec
mov
xchg
jns
insl
sub
mov
add
aas
sub
pop
ljmp
das
xchg
loopne
fmulp
cmp
adc
gs
push
pop
mov
jne
and
mov
xlat
loope
jl
sahf
inc
pop
or
jno
adc
cmc
jecxz
sbbb
test
xor
jmp
push
rcr
test
xchg
jae
icebp
xchg
adc
or
loop
mov
dec
mov
pushf
push
push
pop
add
mov
inc
aas
cmp
jno
mov
sub
aaa
ds
xchg
or
scas
and
jge
repnz
pop
nop
jle
xchg
ficomps
mov
shlb
scas
jns
gs
shl
ja
clc
imul
insb
lcall
cmp
jmp
repz
mov
and
sbb
scas
nop
and
cltd
jb
pop
mov
mov
dec
push
xor
jo
shl
inc
mov
dec
mov
pop
outsb
aas
fwait
test
mov
ds
iret
jo
push
sub
inc
mov
lea
mov
adc
xchg
shrb
xorl
loope
popa
or
pop
pop
or
cmp
mov
pop
std
popa
xor
decb
test
inc
jo
or
sbb
fs
cmp
dec
xor
sbb
jmp
lock
mov
push
inc
fimuls
fnstenv
inc
adcl
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
xchg
mov
mov
pop
dec
lds
jmp
js
xchg
in
outsb
pusha
bound
mov
mov
pop
fiadds
aas
sbb
xchg
mov
xchg
xor
clc
jle
das
cmp
mov
pop
lret
inc
pop
pop
or
clc
loop
scas
mov
jp
xchg
loopne
mov
or
out
dec
dec
push
dec
xorb
data16
and
push
pop
loopne
mov
lods
pushl
ror
mov
or
dec
repz
and
aam
mov
fisubrs
mov
inc
cmp
sbb
dec
xchg
xchg
dec
xchg
pop
xor
repz
lcall
inc
mov
fwait
xor
dec
loopne
inc
mov
mov
icebp
iretw
xor
xchg
and
mov
mov
sbb
loop
mov
or
mov
aaa
stc
xchg
push
inc
out
leave
mov
lahf
fistps
ret
inc
cmp
out
scas
dec
and
xor
jge
or
rcrb
lcall
cld
mov
outsb
jge
rcl
xor
movsl
push
into
popa
clc
cmp
out
xchg
pusha
lds
mov
xchg
out
mov
jbe
jno
ljmp
xlat
xor
sbb
test
pop
lds
iret
cltd
xchg
push
push
lldt
or
cmp
outsb
and
aas
stc
push
push
dec
sbb
in
mov
xchg
and
and
pop
pop
push
pop
mov
and
mov
in
inc
idiv
jb
outsb
adc
xchg
inc
inc
and
aam
inc
aaa
push
sbbl
arpl
repz
adc
fwait
xor
call
adc
or
pop
je
loope
xor
ds
sbb
push
sbb
sbb
out
add
mov
addl
inc
or
add
jae
jns
jae
jns
adc
adc
cmpsl
dec
add
and
js
pushf
adc
clc
ret
mov
lock
ljmp
add
insl
lock
lahf
mov
add
and
loop
inc
pop
mov
daa
fisttpl
arpl
lea
push
clc
xor
aad
popa
pop
mov
rcrb
fcmovnu
pop
fbld
add
jne
mov
orb
iret
push
out
xchg
jns
in
test
ret
sahf
and
xchg
mov
loope
sarl
ss
mov
add
lock
idiv
xchg
cmc
and
sub
mov
or
jae
xchg
orl
popf
pushf
fwait
stos
xor
jg
test
imul
mov
xchg
stc
repz
repnz
push
out
aam
pop
insl
or
adcb
adc
cmp
pop
int3
cmp
cmc
into
dec
pop
mov
mov
cmp
pop
pusha
jmp
jle
inc
mov
icebp
outsl
pop
bound
ret
pop
cmp
bound
adc
push
sbb
shll
shl
cli
inc
pop
sbb
std
cmp
sub
and
push
add
dec
faddp
mov
xor
jl
pop
dec
xor
adc
loopne
jle
es
and
in
inc
aaa
repnz
cmpsb
out
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
movl
adc
mov
jmp
icebp
fistpl
pop
in
test
cmpsl
pop
mov
ja
int3
enter
lcall
scas
push
mov
xor
add
mov
gs
jns
mov
popa
inc
pusha
dec
rcrl
add
jns
and
sbb
dec
outsb
jmp
lods
jecxz
sti
movsb
lods
dec
or
pop
jl
lahf
ficomps
cwtl
add
ja
fs
iret
add
aas
xlat
push
fmull
dec
jnp
dec
mov
cmp
inc
jmp
pusha
gs
cld
les
inc
cmpsb
gs
testl
cmp
fstps
int3
ds
pop
xlat
popa
pusha
sub
sub
shrl
inc
out
leave
imul
subl
push
xor
out
push
inc
sub
shrb
mov
sub
into
pop
adc
pop
cmp
fists
loopne
or
mul
lret
fdivr
test
loop
aad
or
shll
mov
lret
popl
push
push
sub
inc
push
mov
xlat
inc
xchg
bound
ds
sub
ss
cld
popa
fisubs
adc
inc
out
push
inc
dec
scas
add
mov
add
dec
iret
lret
popl
enter
nop
mov
repnz
mov
enter
mov
push
stos
and
inc
int
inc
shrl
dec
lahf
mov
mov
cli
mov
mov
mov
dec
mov
test
jno
test
xchg
mov
sbb
in
mov
mov
add
movsb
popa
adc
mov
cmpsl
daa
mov
cmp
mov
imul
scas
frstpm(287
push
pop
inc
sbb
out
jbe
cmp
gs
ficoml
sub
xchg
push
in
insb
shll
popa
pop
lcall
mov
mov
push
xor
popa
clc
movsl
add
call
xorb
adc
mov
mov
andb
sarb
jecxz
pop
cmp
cltd
inc
cmc
sbb
inc
push
xchg
add
and
inc
jg
xchg
cli
inc
mov
or
sub
cmp
int
cmpsl
aad
gs
and
roll
addr16
jmp
in
push
addl
inc
cmpsl
repnz
fucom
ljmp
shrl
mov
sti
adc
jb
loop
xchg
rcll
scas
mov
sub
inc
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
xchg
pop
lods
or
adc
adc
push
xor
mov
xor
in
je
nop
aaa
ljmp
in
outsl
or
or
int
jnp
add
inc
push
scas
pop
rclb
adc
clc
int
lds
add
add
bnd
push
xchg
cltd
mov
stos
xchg
add
cmp
add
jne
inc
negb
push
push
call
pop
push
scas
and
sbbl
and
cmp
xor
add
inc
dec
es
push
jns
lahf
std
jle
andl
in
or
adc
jo
mov
sbb
and
cmp
jo
mov
outsb
mov
fcoml
mov
scas
jp
hlt
jo
mov
jne
test
std
dec
loop
clc
jge
pause
addb
ror
stos
mov
loop
ror
bound
enter
push
fisubs
or
scas
js
xchg
cmp
sbb
sub
loopne
and
dec
pushf
les
rclb
aaa
xchg
cmpl
and
fcoms
mov
add
scas
and
ret
out
adc
sarl
pop
dec
mov
sbb
fsubr
cltd
hlt
cmpsl
xor
ss
mov
xchg
mov
je
and
pop
cmp
aas
mov
push
es
adc
jno
and
xor
sti
fs
rcrb
or
xchg
cmc
jecxz
sbb
push
push
test
aaa
mov
sub
les
test
pop
jbe
mov
out
mov
mov
push
push
mov
popl
lock
push
mov
ljmp
mov
ss
lcall
je
adc
imul
je
mov
cwtl
mov
sbb
adc
ss
mov
je
mov
test
mov
push
mov
pushf
push
fdivrl
inc
repz
xor
sub
sub
add
cmpsb
pop
rolb
mov
leave
mov
push
cmp
fdivs
fnsave
cmp
popf
pop
jbe,pt
icebp
sub
cmpsl
aaa
out
sub
pop
stos
inc
adcl
pop
sbb
jbe
inc
inc
sub
cmp
popf
aam
or
push
sbb
mov
cvtps2pi
pop
sahf
add
xchg
jge
lret
xchg
inc
loope
xchg
in
mov
xor
test
sub
data16
clc
test
scas
jge
cmpl
xchg
outsb
mov
and
inc
xor
jl
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
jo
stos
cmp
adc
imul
fnstsw
mov
andl
clc
push
idivl
mov
mov
adc
popa
lods
mov
xchg
addb
sub
pop
sbb
mov
es
fidivl
xchg
lret
int
scas
shlb
xlat
jno
xchg
xor
xchg
pop
fiaddl
adc
test
repnz
lods
std
fwait
popa
test
xchg
cmpsb
mov
sbb
push
sbb
and
add
subl
int
shll
push
xchg
addr16
xchg
adc
fcomps
or
jne
pusha
cmp
outsb
xchg
sbb
xchg
scas
sub
sbb
imul
push
pop
outsl
inc
adc
push
dec
popa
adc
mov
cmp
fdivl
jno
jle
lea
out
lahf
shlb
cmp
pop
jbe
mov
adc
pop
pop
jge
pop
lcall
das
out
inc
pop
in
adc
icebp
adc
insb
int
push
loope
sub
push
jae
mov
mov
xchg
or
add
xor
dec
pop
jne
movsl
lret
popl
adc
push
fimull
pop
addr16
repnz
cmp
out
cltd
imul
push
int3
roll
sub
fs
adc
jno
shrb
dec
data16
mov
push
push
test
fsubp
shrl
ret
or
daa
imul
push
jg
cmpsb
jp
pop
xchg
xchg
fs
lds
orl
mov
push
jg
aas
addr16
adc
popf
dec
cwtl
or
cli
mov
jb
fs
std
fwait
xchg
push
ljmp
out
test
aaa
lahf
and
addr16
int
push
stc
bound
js
cli
push
rcr
ds
aam
test
scas
iret
push
ja
cmp
pop
mov
sahf
iret
inc
sahf
or
lods
mov
clc
loop
push
and
adc
or
xchg
fldl
inc
mov
imul
das
std
in
push
mov
data16
loope
rcrb
pop
push
cmpsl
mov
pop
imul
dec
sub
pop
cmp
scas
add
into
fs
push
sbb
dec
push
jecxz
cmpsl
pop
sbbb
jmp
ja
sbb
sbb
sub
mov
dec
repz
test
out
in
lret
mov
sub
mov
xchg
adc
lods
mov
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
mov
jle
out
adc
adc
cli
jle
inc
jae
sbb
push
ds
add
sub
cmpsb
out
mov
push
jo
addb
cmp
jne
into
jo,pt
insb
dec
mov
in
iret
adc
add
sarb
sbb
sub
sar
cmp
push
arpl
idivb
aas
stos
or
xchg
jp
pusha
xor
les
pop
test
pop
je
push
sbb
xchg
xchg
mov
test
outsl
dec
sub
jge
ljmp
or
xchg
gs
ret
dec
jle
mov
cld
cli
xor
lcall
rorl
lods
les
fistps
inc
into
test
or
mov
std
mov
push
in
loopne
cmc
jne
xchg
sahf
pop
sahf
std
jbe
xor
lret
push
icebp
push
pop
stos
movsb
out
sti
stc
mov
int
aad
repnz
cwtl
cmc
in
lods
loope
loop
push
lock
xchg
mov
mov
xchg
js
pop
incl
scas
push
jae
into
sbb
sub
arpl
jle
jecxz
xor
arpl
leave
gs
int3
xor
jmp
cli
out
xchg
insl
fcoms
div
aam
mov
fisubrl
test
xlat
jecxz,pn
adc
inc
mov
cltd
ret
testl
dec
or
shlb
test
push
mov
adc
sahf
gs
push
dec
xor
inc
mov
sbb
les
pop
jle
mov
pop
lret
mov
mov
sub
out
dec
into
add
jns
das
xlat
mov
aam
je
in
push
xor
stos
lds
fucomip
mov
scas
jge
mov
xlat
cmp
lock
ret
mov
aam
push
or
xor
in
fimull
pop
push
jns
pop
push
xchg
fmulp
lods
das
inc
subl
inc
aaa
out
xchg
push
roll
orl
sbb
or
enter
stos
push
repz
stos
cld
cltd
sbb
nop
mov
int3
shl
fidivs
mov
or
repnz
and
cmc
adc
out
sub
lcall
add
adc
test
ss
xor
call
ja
pop
clc
mov
aad
and
xor
and
jmp
in
aam
push
xchg
call
mov
xlat
rorb
insl
and
mov
into
out
icebp
cmpb
mov
xor
dec
cwtl
inc
fisttps
push
xchg
cmp
jne
jl
loopne
jne
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
push
add
jle
in
adc
adc
mov
lods
push
cld
ds
outsb
std
dec
xor
pop
xor
popa
xor
aaa
test
cmp
fidivrl
mov
jo
dec
int
fs
add
sti
add
outsb
sub
inc
xor
shll
dec
sub
xchg
test
sahf
xor
cmp
xor
shlb
mov
xchg
and
xchg
or
inc
sti
adc
cmp
cld
or
pop
jae
imul
jae
or
push
out
roll
mov
pop
pop
gs
push
xor
cmp
lods
int
ret
push
inc
sbb
daa
pop
xchg
jno
scas
sahf
mov
ljmp
cmp
shrl
and
dec
adc
fs
arpl
dec
out
sbb
das
inc
insb
out
lods
mov
mov
cmp
jo
mov
sub
inc
aaa
pop
xchg
cmp
mov
mov
ret
scas
loop
inc
lret
xchg
and
rcll
in
sbb
cltd
mov
cmp
inc
lahf
push
jbe
cmp
xchg
or
mov
ljmp
dec
repnz
mov
ret
mov
add
sbb
frstor
cltd
xchg
xchg
and
mov
add
test
mov
and
pop
jne
inc
cli
sub
or
sbb
or
add
in
mov
add
lea
push
lds
push
xchg
decb
xchg
gs
fisubrl
push
mov
enter
pop
push
pop
mov
mov
jnp
inc
mov
cmp
mov
pop
mov
shlb
repz
adc
bound
js
inc
jo
test
cmpsb
push
ds
jns
negl
sub
sbb
cltd
lcall
cmp
insb
imul
arpl
repnz
iret
xor
incl
inc
int3
sub
mov
int
imul
movsl
mov
add
inc
pop
mov
mov
dec
lret
xor
cmpsb
push
pusha
jb
xor
inc
cltd
mov
jb
adc
gs
je
mov
adc
push
scas
jle
xchg
rcrl
addb
adc
pop
inc
mov
sbb
xchg
in
or
scas
sarb
icebp
and
stos
dec
jge
lcall
sarl
sarb
aaa
adcb
jecxz
cmp
fdivrl
sbb
loop
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
fcmovnb
loop
add
adc
adc
or
sbb
mov
outsb
or
adc
enter
cmp
cld
sti
pop
inc
jmp
xor
movsb
and
loopne
ret
pop
sub
xchg
jnp
fdivrp
add
pop
in
daa
xor
xor
mov
cltd
es
ljmp
pop
cmc
sub
xchg
out
lods
pop
cmp
push
inc
cmp
imulb
aad
hlt
cmp
shll
cmp
xchg
mov
std
mov
lea
lods
int3
shrb
cwtl
mov
inc
inc
in
movsb
add
sti
nop
shrl
std
std
or
push
std
jmp
jne
sub
mov
xor
arpl
dec
and
std
jb
pop
sbb
fisubrs
mov
in
push
mov
dec
arpl
jae
pop
lds
adc
ret
and
pusha
pusha
dec
sub
or
shl
fptan
inc
inc
push
jo
dec
stos
movl
fadd
push
sbb
sbb
sahf
cwtl
popf
and
outsl
adc
fcoms
fs
sub
pop
aas
inc
adc
std
push
and
xchg
ss
adc
sub
push
mul
inc
cld
ds
daa
mov
jbe
and
jge
and
inc
push
loopne
lock
pop
loopne
nop
and
or
lahf
mov
loop
dec
sbb
inc
je
fisttps
sub
sub
std
test
jl
aaa
xchg
popf
mov
cli
ficoms
jo
fs
add
cmp
int
mov
cmp
nop
push
mov
xor
cmp
lret
mov
out
adc
sti
rcrb
pop
mov
nop
sahf
dec
mov
inc
icebp
enter
mov
xor
add
pop
xor
sub
push
leave
outsb
push
scas
in
repnz
xor
repz
pop
fcoms
inc
push
mov
jne
sbb
pop
dec
nop
int
mov
arpl
inc
das
int
and
mov
mov
andl
dec
sub
sar
mov
jmp
adc
cmp
ds
daa
jne
stos
mov
and
shll
dec
push
shl
stc
fwait
or
or
call
dec
jmp
add
jg
mov
fwait
cmpsl
lods
push
or
mov
addl
popa
shlb
enter
cmp
xchg
es
mov
jp
push
lods
nop
insl
push
mov
cmp
stc
std
jbe
push
outsl
ret
leave
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
and
adc
adc
jb
sbb
rcr
movsb
int3
mov
div
push
jmp
xor
pop
mov
flds
scas
xchg
movsl
arpl
negl
stc
dec
pop
cmc
dec
ret
cwtl
mov
mov
push
js
in
mov
in
sub
or
jp
cld
and
repnz
enter
fsubl
sub
dec
addr16
xchg
jl
jbe
jl
iret
mov
sbb
outsb
and
cmp
lds
sub
jl
lock
push
out
lods
mov
and
inc
pop
cmp
mov
outsl
out
aam
mov
xlat
mov
dec
add
arpl
adc
test
mov
sahf
push
imul
lahf
mov
dec
fldenv
inc
push
call
pop
xlat
jns
out
test
add
loopne
loopne
cmp
outsl
dec
jo
mov
xor
and
dec
xchg
push
add
in
loopne
mov
in
scas
xchg
mov
daa
inc
xchg
rorb
cld
mov
enter
fistpl
jmp
cmpl
daa
inc
mov
fsubs
pop
dec
adc
testb
push
xchg
test
repnz
cmpsl
into
pop
lcall
in
or
mov
iret
scas
sahf
shlb
es
mov
lock
xchg
sti
mov
divb
imul
or
inc
popa
xchg
leave
xchg
imul
ljmp
sahf
dec
movsb
jae
or
xor
mov
mov
sbb
adc
gs
xchg
movsb
jnp
jne
or
scas
sbb
out
xchg
lods
ljmp
imul
cmp
in
sbb
outsb
inc
push
pmuludq
jmp
jo
jnp
mov
repz
push
arpl
daa
cmpsb
inc
sub
nop
sbb
packuswb
sbb
aam
icebp
imul
xchg
cltd
jmp
add
js
push
adc
push
test
cltd
ljmp
ljmp
xor
sahf
ss
cltd
fwait
pop
push
shrl
adc
inc
flds
les
rorb
out
idiv
hlt
faddl
mov
dec
or
lods
xor
dec
fisubs
mov
aad
movsb
call
cmpsl
sub
ja
xchg
leave
dec
dec
mov
xchg
jne
cmp
out
into
mov
lahf
ljmp
aad
int3
lcall
test
call
xor
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
cmpsl
sbb
subb
pop
imul
cmp
pop
mov
add
rolb
imul
hlt
dec
pop
pop
js
not
mov
pop
fidivs
les
or
xchg
ficompl
shlb
aaa
lock
push
or
push
mov
movsl
addr16
fldenv
inc
inc
push
ds
mov
fcompl
fsubrs
mov
out
push
push
or
jmp
push
jmp
repz
and
mov
leave
xchg
add
mov
inc
push
movsb
and
pop
bound
push
add
repnz
fcmovnu
mov
data16
clc
jge
leave
mov
insb
cmp
lods
mov
outsl
fmul
and
imul
push
repnz
data16
and
int3
ss
inc
jge
loop
inc
pushf
sub
push
pop
pop
mov
clc
jle
ja
pusha
cs
xchg
mov
je
jns
cmc
xor
inc
fs
add
mov
add
cwtl
sti
stc
mov
mov
leave
push
xchg
clc
scas
jp
push
inc
movsb
cmp
aas
ja
adc
pop
in
xchg
cmpl
sti
inc
dec
dec
inc
decb
inc
push
cmp
in
mull
nop
scas
faddl
in
movsb
imulb
ret
fadd
jno
xor
repz
cmp
into
ja
or
or
sub
fs
cmpsb
pop
xor
jmp
push
jnp
imul
adc
or
inc
js
and
mov
and
out
jbe
push
aam
loope
and
cmpsb
in
mov
inc
ss
nop
pop
imul
jnp
out
dec
xorl
in
insl
imul
xlat
sub
adc
pop
add
clc
pop
addr16
sub
pop
cs
addr16
jl
cs
xchg
fdivrs
testb
xchg
hlt
jmp
out
or
mov
shl
and
mov
ficoml
call
push
adc
and
lock
add
scas
xchg
mov
and
in
loope
sbb
mov
dec
dec
jle
pop
cld
jp
rorb
pop
roll
loope
pop
adc
ret
adc
pop
or
adc
in
sbb
xchg
xchg
mov
fyl2xp1
xor
cltd
notl
dec
adc
shrl
mov
or
mov
pop
add
mov
sti
cmp
testl
cmpb
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
dec
lret
js
adc
adc
adc
xchg
sub
sahf
pslld
cmpxchg
out
arpl
shlb
pop
lds
lea
jp
jno
jle
xchg
mov
movsl
sub
or
pop
push
ss
testl
int3
jl
imul
or
push
sbb
subl
xor
sub
jl
or
fcmove
pusha
jmp
xor
aaa
sti
mov
push
imull
mov
pop
ja
pop
or
popf
push
xchg
jecxz
hlt
cmp
std
movsl
mov
mov
aas
add
dec
xchg
pushf
mov
dec
loop
dec
cmp
ds
sbb
cmp
mov
add
hlt
sub
gs
push
cmp
pop
call
rcrl
aas
movsl
push
aaa
xchg
aad
movsl
sbbl
stos
mov
pop
lods
pop
and
sahf
imul
lea
sahf
lods
adc
fs
int3
fstpl
sub
mov
icebp
dec
dec
js
xor
in
popa
int3
xorl
pushf
repz
xlat
nop
into
inc
xor
jmp
stc
imul
sub
jecxz
mov
or
mov
sub
std
inc
adc
sahf
stos
inc
insl
push
push
cmpsl
bound
cmp
jnp
adcb
in
inc
dec
and
and
sahf
lret
outsl
push
mov
scas
loop
sahf
test
std
out
jae
sub
mov
xor
lea
fdivrl
popf
jp
popf
xor
aad
mov
adc
test
test
or
sub
lds
shll
out
aas
lahf
mov
in
hlt
sahf
or
dec
inc
dec
mov
mov
or
sbb
decb
out
lahf
cmpsb
add
clc
mov
pop
dec
mov
movsb
int3
jmp
fcoml
repnz
sub
push
lds
xchg
js
add
xchg
lcall
inc
sbb
jae
sbb
jmp
jo
mov
ljmp
add
lahf
push
inc
sbbb
xor
outsl
dec
adc
sub
in
push
cmpsb
xchg
scas
push
jo
xchg
int
cld
shlb
clc
test
cs
imul
sbb
neg
sti
mov
stc
and
pop
adc
scas
data16
cmpsl
push
incb
in
fstl
pop
xor
pop
dec
sahf
rcll
cmp
cmpl
sbb
mov
mov
stos
negb
lret
and
jne
dec
add
and
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
lock
mov
push
loopne
add
fs
in
dec
fcmovu
pop
mov
test
cmp
dec
loop
mov
es
mov
lods
push
js
rorb
add
and
lret
aas
clc
mov
nop
push
push
jmp
dec
shlb
in
cwtl
jge
dec
pop
insb
xorl
mov
scas
fcom
arpl
and
jg
mov
push
mov
inc
jb
fisttpl
stos
shrb
bound
test
and
sub
cltd
mov
arpl
jle
testl
dec
int3
xchg
ja
jo
push
and
sbb
xchg
insb
in
movl
xorb
rolb
cli
cld
rol
repz
sub
jne
aam
cwtl
cld
and
add
dec
dec
sbb
addr16
sub
pop
lcall
add
add
repz
in
mov
jns
inc
mov
sbb
xchg
js
ja
sub
mov
push
sub
fsubs
add
push
loop
mov
push
mov
pop
add
adc
loope
daa
mov
cmp
std
sahf
mov
cmpsb
rclb
jo
dec
stc
adc
daa
outsl
cli
out
lcall
xchg
rolb
sti
sahf
mov
pushf
inc
jle
stos
mov
stc
rcll
or
pop
iret
mov
jnp
jge
ret
ficomps
jl
cmp
call
fidivrs
mov
sub
fistps
int
inc
es
mov
mov
cs
decb
int
xor
pop
push
pop
pop
iret
mov
fistps
in
add
test
mov
pop
test
push
push
xchg
mov
sbb
pop
lods
shl
push
mov
inc
jp
ds
scas
lock
push
aaa
sbb
push
inc
inc
icebp
adc
aam
pop
cmpsl
jle
sub
es
inc
jecxz
and
adc
pop
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
xchg
inc
stos
scas
into
adc
adc
in
sbb
std
cmpl
adc
daa
pop
imull
lea
insl
mov
or
mov
bound
jecxz
ja
jne
mov
icebp
xchg
mov
jne
mov
pop
in
adc
pop
push
fmul
dec
movsl
xchg
in
adc
xchg
jp
sarb
pushf
cmp
xchg
jmp
xor
dec
aaa
lock
lahf
stos
into
addr16
daa
jmp
scas
sub
sbb
outsb
lret
cmpsb
mov
orb
mov
scas
inc
dec
loop
xor
or
insl
mov
inc
mov
jmp
cmp
dec
loop
jmp
sbb
imul
lret
mov
insb
fmul
in
jecxz
ss
repz
xor
sub
out
and
mov
ljmp
cmp
clc
ljmp
fwait
sbb
add
mov
mov
xor
jp
mov
pop
xchg
aam
mov
out
les
out
lock
outsb
daa
xor
push
cltd
int
insl
shl
pusha
pop
cs
insl
inc
dec
lahf
es
daa
push
fwait
insb
and
ljmp
enter
xor
ret
dec
cmp
in
out
mov
xchg
out
xor
xor
mov
xor
or
jecxz
decl
lret
fstps
mov
cmp
mov
sub
mov
push
xchg
or
push
push
mov
jnp
data16
xor
test
mov
aam
mov
sub
lods
sbb
ret
sbb
jbe
ljmp
sub
std
adc
rcr
cmc
dec
fucomi
mov
out
cmp
repnz
mov
sub
mov
rolb
pop
sub
cld
jecxz
leave
dec
aaa
gs
cli
andl
and
mov
mov
mov
pop
stc
jbe
ficomps
aam
ret
adc
mov
or
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
neg
mov
lret
enter
pop
cmp
dec
rcrl
sbb
fcoml
adc
xlat
je
and
sub
outsb
shrb
mov
jp
pusha
ret
inc
imul
dec
rorb
xchg
cli
dec
in
adc
jnp
mov
inc
pop
xchg
jecxz
or
ficoms
jmp
and
negl
test
cwtl
add
adc
lahf
ss
sahf
inc
lret
pop
bound
push
ljmp
stos
inc
cmc
add
ret
sub
out
adc
repnz
sbb
dec
imul
hlt
sti
mov
push
mov
mov
jmp
jecxz
mov
fadds
dec
jp
add
inc
cltd
sbb
push
add
daa
and
mov
sub
test
mov
movl
mov
add
sbb
pop
insb
or
aaa
lock
fsts
xor
out
mov
mov
xchg
push
test
mov
mov
or
add
setae
push
lods
jae
pop
dec
sbbl
inc
not
rcrb
pop
shrb
in
std
cmp
pusha
mov
add
add
pop
mov
ds
push
pop
call
inc
les
xchg
mov
aad
jmp
mov
and
push
arpl
cmpsl
inc
mov
push
mov
xchg
mov
inc
roll
xlat
and
jnp
leave
fstl
mov
lea
push
fst
mov
sub
movsl
cltd
jbe
fmul
mov
push
movsl
test
xor
jb
sete
sub
mov
push
shl
out
lret
gs
adc
jle
cwtl
cmp
pushf
ljmp
add
outsb
xor
iret
faddp
aaa
sub
jg
js
and
cmp
call
mov
ds
jecxz
in
or
xchg
ret
ljmp
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
sub
adc
adc
mov
pop
ja
xlat
cmc
xor
cmpsb
icebp
gs
lahf
jo
pop
fdivrl
lods
cmp
les
xor
cwtl
xchg
clc
adc
cltd
jb
xlat
cmp
adc
mov
mov
addr16
inc
sub
dec
repnz
les
add
jbe
pushf
stc
out
enter
lcall
data16
push
or
not
into
or
in
sbb
jae
scas
mov
fwait
mov
xchg
lret
movsb
pop
hlt
sub
sbb
bts
xor
jae
push
mov
adc
lods
or
cs
ficompl
inc
bound
mov
jle
mov
sbb
and
jge
push
int
push
cmp
adc
sub
push
jle
rolb
out
cmpsl
cmp
xor
pop
mov
cmpsb
icebp
loop
inc
or
inc
pop
dec
loop
push
jmp
hlt
dec
push
pop
movsb
les
sarb
aaa
inc
test
incl
icebp
cmp
jnp
lock
int
cmp
rclb
jne
dec
adc
in
imul
jp
mov
out
cs
mov
push
rorl
xchg
das
scas
nop
into
gs
push
repnz
fstpt
cmpsb
ljmp
insb
incb
xchg
test
ret
sub
out
imul
cwtl
out
push
sub
xchg
jl
out
xchg
cs
cmp
mov
lcall
out
mov
stos
jo
mov
mov
pop
aaa
mov
pop
inc
lods
adc
cmpsl
mov
sub
xchg
insb
and
mov
mov
mov
sbb
lods
test
mov
cmpsb
pop
xlat
push
inc
enter
cmpsb
jns
out
and
sti
xchg
pop
scas
xchg
les
mov
push
jae
push
xlat
xchg
cmp
das
sti
mov
mov
jge
insl
mov
and
shl
mov
mov
icebp
dec
cmp
lret
loop
pop
add
cmp
and
sub
jo
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
lods
test
enter
pop
jl
loopne
fstpl
js
cli
ja
sbb
sbb
mov
pop
imul
inc
rcrb
mov
daa
add
call
dec
stc
cmpsl
inc
jo
xchg
inc
cmpsb
or
leave
and
out
ret
add
add
mov
mov
adc
and
pop
scas
sbb
jmp
int
loope
jno
pop
mov
mov
outsb
das
ffreep
test
popf
inc
jne
fistpll
mov
dec
and
insb
mov
adc
jnp
data16
sbb
jb
push
fimuls
jmp
dec
in
push
mov
cmpb
scas
bound
sti
mov
shlb
repz
movsl
fnsave
loope
pop
mov
jo
in
add
sub
or
jp
jns
outsb
jae
notl
int3
dec
mov
lret
fmulp
add
xchg
pop
mov
mov
inc
mov
nop
xchg
inc
jnp
daa
cmc
mov
das
or
mov
pop
into
lcall
fcoms
ja
or
mov
je
lea
xchg
or
dec
nop
xchg
mov
push
out
sahf
lea
and
push
mov
hlt
cmp
jbe
mov
fisubs
inc
dec
push
ds
loope
adc
xor
pop
or
sbb
mov
mov
jg
ljmp
adcb
mov
jecxz
inc
cmp
rclb
xchg
pop
xchg
pop
in
int3
movsl
iret
sti
rorb
push
pop
fcomp
xchg
mov
lcall
cli
jp
mov
push
sbb
mov
fdivl
repnz
pop
or
notl
test
cmc
sbb
stos
xchg
pop
imul
xorl
cltd
and
call
cmp
dec
sub
inc
jb
mov
test
sub
push
fistl
mov
movsb
sbbl
sbb
adc
push
push
mov
iret
cld
faddp
fstpl
push
lahf
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
fwait
mov
jge
adc
adc
xchg
dec
xlat
sub
bound
lahf
mov
aam
scas
dec
in
inc
mov
mov
aam
jns
mov
rcl
in
push
pop
pop
jle
push
lea
add
and
mov
sub
ja
mov
ret
adc
mov
in
jp
cmp
jno
and
imul
ret
mov
xor
ror
push
sub
cmp
jecxz
push
jne
and
jno
push
xchg
pop
lds
and
inc
outsl
cld
lret
jge
lahf
xor
adc
adc
pop
adc
out
sub
dec
sahf
xchg
add
sub
loope
dec
jno
and
popf
jne
push
push
inc
scas
fbstp
xor
xchg
jmp
hlt
pop
push
cmpsb
fadds
test
inc
adc
dec
in
ds
sbb
adc
loope
fnstcw
faddp
pushf
mov
loopne
jmp
mov
jl
das
out
cmp
sbb
fistps
mov
pop
pusha
scas
push
jnp
dec
push
insb
xchg
adc
scas
or
in
daa
flds
addr16
mov
or
lods
dec
clc
xlat
aad
jg
in
sbb
je
clc
les
add
outsl
mov
int
jnp
jo
addl
add
jle
fmul
mov
dec
das
test
sub
push
or
test
dec
cmp
clc
jne
push
and
cltd
stc
aad
mov
sub
jo
push
inc
xlat
sbb
ss
or
dec
aaa
int
hlt
aad
mul
xor
ljmp
push
pop
dec
movlps
mov
mov
cmc
daa
inc
int
push
ljmp
sbb
jg
pop
in
inc
push
add
cs
hlt
xchg
push
push
je
pop
mov
and
sarb
dec
fnstcw
or
inc
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
cmpsb
js
mov
adc
sbb
mov
cmp
std
cwtl
push
mov
mov
out
dec
lahf
mov
sbb
or
push
les
jl
cmp
repz
rorl
mov
das
popf
mov
hlt
lods
inc
sub
fstpt
adc
sbb
xor
movsb
repnz
repz
jb
sbb
mov
in
dec
ret
dec
out
subb
pop
fadds
loop
aaa
js
pop
push
or
lods
mov
out
push
jo
mov
mov
leave
mov
cs
fdivs
mov
mov
pusha
adc
inc
xchg
lcall
js
jmp
lods
scas
jmp
int
lods
and
or
jns
imul
mov
nop
sub
repz
test
sbb
jns
fcmovnb
add
push
dec
or
mov
les
pop
dec
ret
cmp
pop
dec
inc
mov
jbe
test
std
sub
xchg
mov
sar
daa
add
cmc
stos
sbb
pop
lods
dec
mov
out
jp
insb
movsl
jno
jae
loope
pop
lahf
fs
jae
jp
pusha
push
leave
inc
xchg
push
insb
in
jne
sar
sub
cmp
out
out
sbbl
sbb
fs
test
mov
mov
pop
push
pop
jns
add
dec
xchg
mov
popa
push
movsb
push
mov
iret
dec
shlb
fstps
inc
xchg
lahf
mov
ja
repz
or
fwait
sahf
or
loop
pop
cs
loopne
into
lds
xor
popa
lcall
sbb
jo
fsubs
inc
ret
mov
test
sub
push
and
jl
mov
outsb
test
pop
mov
mov
cmpsb
imul
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
sub
out
adc
adc
jle
loopne
xor
adc
fldt
dec
pop
xchg
scas
push
xchg
and
pop
lock
addb
jp
sub
sub
rcll
xor
icebp
jno
adc
mov
fistl
add
dec
dec
mov
mov
loopne
bound
jmp
ds
inc
jo
insl
mov
cld
or
nop
xchg
adc
cmp
cs
scas
lods
cmp
pop
jno
test
cmp
mov
xchg
push
xchg
mov
sub
mov
lcall
adc
push
js
push
stos
sar
ret
les
sti
loopne
push
jmp
push
add
ret
cmpsb
scas
mov
cmp
in
mov
jmp
in
pop
mov
les
cmp
mov
mov
data16
mov
mov
fcoms
push
cmp
pop
mov
dec
add
or
subb
ret
repz
js
leave
add
inc
mov
xchg
jo
fisttpl
mov
cld
movsb
sbb
out
fcmovbe
dec
dec
mov
xchg
mov
xor
cmp
out
mov
sub
jle
mov
sub
insb
or
into
and
movsb
or
test
and
mov
dec
outsb
les
and
dec
pop
orl
cld
xchg
sbb
jmp
xor
das
les
sti
cmp
add
leave
inc
sbb
je
pop
call
shll
int
inc
pushf
ffreep
in
stc
leave
enter
jo
ja
mov
or
loopne
je
jnp
mov
std
inc
push
mov
dec
dec
in
dec
pushf
jae
lcall
adc
ret
xchg
popf
fs
cmpsb
jb
cmpsl
jle
ja
dec
nop
jno
movb
add
fisttpll
jecxz
or
cmc
add
mov
test
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
xchg
in
ljmp
movlps
dec
jnp
jmp
std
lods
mov
dec
aaa
xchg
jle
daa
inc
xchg
cmp
jecxz
mov
fidivl
mov
adc
xchg
lret
mov
mov
aas
inc
rcrl
push
xchg
adc
stos
inc
dec
pop
pop
outsl
popf
jl
sbb
pop
lcall
fs
lock
push
cmpsl
repz
cwtl
mov
xor
es
add
js
push
leave
lahf
in
call
or
adc
jae
or
call
imul
push
sub
leave
imul
enter
imul
dec
cmp
mov
cmp
icebp
sbbb
pop
push
add
adc
and
mov
xchg
xor
pop
inc
mov
or
sub
jmp
jbe
fsubp
mov
xor
jmp
es
les
push
fiadds
dec
fisubrs
or
xor
icebp
inc
cmp
bound
faddl
mov
pop
movsl
ljmp
lea
mov
pusha
out
and
xchg
inc
loope
cmp
pop
fwait
or
loop
dec
filds
lret
cmpsb
aam
out
aam
out
iret
sub
fdivrl
lods
cmc
mov
and
imul
testb
xchg
insb
inc
sub
pop
ss
pop
mov
pop
cltd
add
or
sub
sbb
cmpsl
or
pop
cmp
lock
stos
out
xor
dec
xorb
testl
ret
ljmp
jg
mov
push
fsubrs
and
das
sub
ret
scas
daa
fsub
test
add
xor
in
sub
mov
nop
or
sub
pop
mov
xchg
jmp
mov
test
jns,pn
xchg
and
inc
cmp
jae
into
shr
std
and
loopne
dec
cmp
xor
js
push
jg
leave
enter
inc
in
cli
push
mov
add
ds
les
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
xchg
inc
stos
dec
test
adc
movlps
lahf
adc
sub
loop
pop
cmp
xlat
imul
pusha
orb
mov
fcmove
and
sbb
pop
aad
xchg
jo
out
add
scas
repnz
pop
ja
popa
out
lods
repz
push
and
push
rcr
jb
push
xchg
mov
push
add
xchg
bound
sbb
ficoms
sahf
pop
cmp
jne
iret
mov
imul
js
bnd
adc
cmp
je
and
add
divb
data16
xchg
cmpsw
mov
dec
daa
cmp
jecxz
push
mov
adc
xchg
xchg
jnp
out
pop
or
stos
mov
movsl
or
ss
popa
add
in
xor
outsb
mov
cmp
fdivrl
jnp
fxch
add
or
pusha
mov
mov
cli
push
inc
mov
lea
mov
pop
cmp
mov
add
int
stc
call
xchg
fs
push
xchg
cs
cwtl
adc
out
es
cmp
mov
sbb
push
lock
inc
cmp
jne
sub
inc
mov
lret
or
mov
jno
mov
dec
rcrl
popf
mov
subl
dec
movsl
je
lcall
shll
cltd
addl
push
inc
sete
out
push
lods
push
fidivl
pop
dec
dec
pop
dec
cmp
mov
js
xor
test
jmp
fwait
jg
iret
in
and
jne
mov
lcall
fwait
adc
ljmp
cmpl
rcr
sahf
out
xchg
icebp
das
mov
lds
lahf
xchg
cmovle
imul
mov
add
mov
mov
or
fisubl
mov
fstpl
aam
and
mov
test
cmpsl
or
pop
cld
daa
push
sub
dec
int
nop
outsb
cmpsl
xor
dec
xchg
lods
dec
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
mov
adc
adc
sarb
test
dec
std
jle
adc
adc
jp
mov
and
fsubs
stos
popf
mov
sbb
ficoms
pop
sbb
insl
mov
pop
aaa
push
pop
das
xchg
push
xor
pusha
lds
or
test
xor
and
adc
mov
jmp
scas
mov
jb
jl
push
cmpsl
jbe
inc
insb
sbb
add
fidivrl
and
xchg
daa
sub
dec
stos
jp
and
stos
jno
push
jecxz
or
and
add
addl
scas
xchg
lcall
inc
and
push
ret
cld
out
adc
out
jle
sub
sti
add
xor
pop
dec
shrb
stc
shll
shll
push
repnz
mov
xchg
pop
pop
jbe
daa
push
adc
rcrl
adc
add
mov
jne
and
push
xor
push
sbb
gs
push
inc
mov
lcall
ljmp
pop
ffreep
mov
sbb
inc
cmp
push
icebp
repz
test
loope
pop
int
ds
push
mov
xorb
stos
adc
xor
dec
loop
add
dec
out
orl
icebp
sbb
nop
out
mov
jns
jnp
dec
xchg
add
lock
cmp
and
adc
sbb
mov
popf
in
fcomp
add
repnz
push
inc
fstps
rcrb
push
mov
add
sti
mov
ret
fs
inc
sub
mov
cs
into
cli
movsl
dec
fdivr
or
mov
ret
das
pop
gs
or
xchg
xchg
cmp
hlt
add
jb
xor
mov
push
jmp
push
mov
rorb
cltd
xchg
andb
enter
push
add
mov
sahf
mov
xlat
out
xchg
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
push
mov
mov
adc
adc
mov
or
mov
adc
mov
repnz
xor
or
mov
dec
mov
push
insb
xchg
mov
rorl
inc
icebp
jg
test
dec
leave
fsts
out
or
xchg
push
repz
add
mov
and
dec
cmp
lret
stos
mov
push
cmpsb
or
std
and
imul
inc
pop
pop
insb
pop
clc
dec
sti
push
push
je
cmp
dec
or
add
fnop
mov
fidivs
pop
dec
push
cld
pushf
sub
ljmp
sti
leave
mov
mov
movb
psrlq
pop
pop
aaa
or
and
or
sahf
stc
and
bound
loope
sub
ret
rcrl
adc
mov
in
jne
das
repnz
pop
cmc
jmp
mov
out
mov
pop
dec
add
in
test
pop
pusha
roll
add
inc
cld
inc
pop
jge
cmp
push
and
popf
repnz
push
sbb
lods
ja,pn
mov
insb
mov
movsb
or
fsubl
inc
jp
insb
cmp
loopne
ja
sbb
jg
sti
and
lods
pop
push
and
notb
sub
out
aam
adc
hlt
add
pop
xchg
mov
lods
sahf
mov
in
inc
lods
repnz
frstpm(287
rcrl
lds
popa
sub
out
mov
cltd
outsb
faddl
iret
test
jnp
cmp
in
cmp
xchg
cmc
add
xchg
adc
loop
push
mov
xchg
push
adc
int
xor
or
jmp
sbb
or
jo
push
sahf
mov
sarl
in
or
jb
mov
nop
pop
test
repz
xor
mov
sbbl
pusha
xor
and
repnz
jns
and
or
cwtl
mov
jno
pop
sbb
mov
jb
in
jno
in
lret
nop
lds
and
sbb
dec
insl
test
sbb
insb
pop
xchg
mov
inc
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
insb
imul
das
mov
lret
iret
inc
cmc
or
stos
push
fsubr
or
lods
sub
loopne
out
pop
mov
push
stc
cmp
xor
mov
mov
in
shrl
or
cmp
dec
xchg
jnp
ds
mov
dec
loopne
test
dec
fwait
lret
cmpsl
push
cmp
sub
jp
mov
jle
roll
insl
inc
stos
jbe
inc
inc
and
sti
data16
xchg
push
push
mov
rolb
mov
shll
lods
pop
roll
push
lea
dec
cmp
gs
push
std
jl
pop
mov
testl
push
mov
dec
xor
mov
pop
jl
pop
or
xchg
xchg
jne
add
jmp
int
dec
js
test
fwait
test
jnp
add
jno
lods
jle
jge
outsb
inc
inc
push
mov
adcl
push
cmp
jnp
jmp
and
xchg
aad
js
in
mov
push
ja
add
rcll
sbb
mov
push
fldenv
and
inc
ja
iret
adc
les
pop
shl
cmp
push
jne
or
inc
xorb
mov
cwtl
cmp
push
int3
mov
aam
cmp
jge
scas
mov
pop
mov
xchg
enter
lea
push
adc
adcb
sar
add
push
cmp
pop
stc
pusha
insb
adc
stos
out
sbb
jl
adc
push
jo
cmp
sbb
fs
add
cwtl
ljmp
push
ret
aaa
cli
or
or
nop
push
mov
pop
lea
sbb
or
and
mov
outsl
cli
lret
jo
jecxz
inc
jbe
mov
iret
xchg
aad
cmp
push
sub
or
popf
insb
xchg
pop
cmp
push
mov
into
sbb
nop
or
pop
pushf
pop
lret
mov
stc
imul
ss
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
xor
push
cwtl
adc
adc
and
sub
cmp
xchg
sar
imul
daa
cwtl
popa
in
les
mov
pop
inc
nop
add
jp
repz
mov
cmpsl
cltd
add
sbb
xchg
add
jns
push
shll
lods
xor
xchg
stc
sbb
js
push
lods
push
addr16
jecxz
sti
adc
inc
cli
mov
dec
inc
and
pop
ss
es
notb
hlt
sub
dec
repnz
ja
into
testl
inc
hlt
les
arpl
mov
xor
jo
movsl
xchg
loopne
mov
xor
sub
clc
inc
loope
mov
and
insb
pop
call
jno
xchg
js
xchg
xchg
mov
mov
xor
lock
sub
pop
fildll
das
test
out
outsl
in
pop
mov
push
test
hlt
mov
insb
mov
xor
js
ds
jns
rcr
push
std
ja,pt
inc
cwtl
xchg
mov
cmp
pop
mov
jns
push
enter
or
aad
xlat
out
ljmpw
aas
insl
push
arpl
inc
pop
fdivl
push
cmc
xchg
mov
add
ret
add
inc
das
dec
dec
add
or
bound
jp
pushf
cmp
push
add
pop
push
or
and
jle
andb
cld
jl
or
inc
jl
mov
push
push
adc
cmpsl
cs
xchg
andb
mov
into
cmp
cmp
mov
aaa
popa
xor
call
insb
xchg
pusha
je
xor
fistpll
jge
inc
jmp
data16
sbb
push
push
pop
in
adc
sub
js
mulb
stos
inc
dec
mov
lret
mov
push
enter
fstpt
in
fnsave
push
lcall
xchg
dec
scas
lods
adc
ljmp
push
sub
out
push
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
mov
stos
rclb
adc
pop
outsb
push
sbb
mov
and
ljmp
enter
ret
or
xor
data16
fbld
push
xchg
jbe
mov
sti
test
in
xor
fstl
test
test
cmpsl
in
sbb
lahf
cmc
xchg
fs
mov
lock
mov
idivl
push
dec
jg
les
clc
push
jae
scas
pop
mov
jle
add
mov
add
fmul
adc
aaa
jae
es
mov
lock
ret
data16
jle
shrb
in
mov
xor
iret
mov
jl
add
cmp
bnd
or
arpl
jne
fidivs
je
lods
or
shll
inc
inc
jb
mov
sub
sti
cltd
sub
mov
and
cli
pop
cmp
ss
incl
push
frstor
outsl
cmp
pop
ss
loop
xor
xchg
xchg
cmp
add
out
call
adc
stos
adc
xchg
add
lods
xlat
pop
adc
movsl
mov
pop
xor
mov
je
pop
pop
xor
xor
insl
xchg
dec
mov
dec
xchg
xchg
mov
mov
or
lods
or
shl
loop
scas
xchg
ss
cmp
aam
sub
les
pushf
cltd
sub
pandn
or
push
xor
push
imul
mov
dec
in
sti
add
ss
int3
cltd
mov
loop
inc
adcb
push
dec
pop
sbb
lcall
mov
nop
xchg
adc
adc
dec
fldl
xor
insl
cmpsb
mov
push
inc
and
jecxz
sahf
jge
cwtl
push
mov
or
push
test
add
mov
mov
mov
and
shrl
jg
xor
arpl
push
dec
push
punpckldq
nop
shl
sbb
mov
clc
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
data16
enter
daa
and
call
or
push
mov
pop
adc
mov
test
jns
std
mov
insl
out
push
enter
dec
mov
add
push
out
jp
or
ja
mov
add
lret
inc
cmp
cltd
sub
inc
add
sbb
rcrb
scas
sti
outsb
push
mov
call
pop
lods
mov
push
out
scas
mov
push
leave
repnz
mov
sbb
pop
mov
sub
jle
aaa
aas
add
dec
int3
push
push
mov
push
jp
rcr
js
cmp
mov
xchg
adc
add
loope
sub
pop
mov
mov
movsb
add
mov
add
pop
cld
push
sub
push
loopne
cli
das
mov
cmp
fnstcw
ds
in
adc
ret
push
outsl
in
cmpsb
lcall
jmp
inc
add
test
shrl
and
pop
lret
pop
mov
scas
jge
or
sub
repnz
or
mov
movsb
fs
mov
in
xchg
or
fnstcw
push
push
and
mov
es
stos
mov
mov
jmp
add
mov
xchg
aas
push
loope
popa
mov
adc
push
fidivl
dec
popa
and
out
rcr
cmc
adc
sti
pushfw
xchg
add
add
divl
xchg
mov
subb
push
jg
ret
adc
das
repnz
orl
jne
std
call
stos
push
mov
mov
mov
xor
fs
and
cmp
push
loop
push
add
mov
movsl
mov
cmpb
add
push
push
and
mov
sbb
out
hlt
mov
into
cmp
fistpl
mov
pop
lea
adcl
sti
repnz
and
mov
sub
shrl
lahf
push
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
das
scas
enter
adc
adc
cmp
mov
enter
inc
icebp
push
loope
mov
cli
jge
and
add
mov
dec
gs
sbb
mov
inc
repz
lea
pop
movsl
and
pop
das
push
push
cmpsb
xchg
sbb
std
loopne
das
fwait
fwait
sbb
loop
adc
lea
or
lods
rcll
or
arpl
lea
test
pop
cmp
push
cld
jno
sahf
push
push
test
mov
jmp
jmp
ret
je
in
cltd
lods
inc
out
and
lcall
rorb
in
ret
jne
lds
add
mov
imul
out
test
loope
test
cmc
repnz
add
ss
cmp
cmc
or
in
movsb
and
xor
mov
fistps
neg
ds
sub
cmp
pop
cmp
fmuls
ud0
data16
dec
jmp
lahf
hlt
xor
pop
int
dec
or
sbb
loopne
orb
push
mov
lret
mov
push
add
dec
push
inc
stos
mov
insb
in
cwtl
sub
mov
into
mov
xlat
mov
xchg
inc
cmc
pop
test
in
dec
nop
lock
fsubs
cmpsb
hlt
test
dec
ret
push
xchg
xchg
scas
stos
js
push
sub
mov
cmp
es
dec
scas
inc
add
movsb
cmp
adc
sti
jmp
push
repz
xchg
fistps
test
in
cli
sub
xchg
in
cmp
mov
fidivrl
dec
outsl
out
xor
push
enter
int
push
aas
jge
pop
jp
push
xchg
push
cmpsl
sub
daa
aaa
dec
sbb
pushf
jle
stos
dec
jb
dec
sbb
sti
xchg
fidivl
cli
cmpl
in
sahf
or
sub
ds
outsl
pusha
aas
inc
sbb
incl
pop
dec
jno
cmp
cmp
int
lods
push
cmpsb
cmc
inc
cmpsb
je
cmpsb
mov
movsl
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
mov
loope
adc
sbb
hlt
xchg
test
or
or
cmp
lea
sbb
movsb
xorb
inc
fsub
gs
int3
sbb
nop
out
or
xchg
sub
push
cltd
or
mov
fsubrs
mov
pop
jmp
faddp
jbe
push
fbld
pusha
adcb
call
cwtl
inc
cmc
int
sbb
mov
fucomi
push
mov
jg
push
mov
dec
xchg
push
jmp
sarb
cwtl
add
and
xchg
pop
rorl
jnp
mov
fildll
cmpsl
pop
dec
jb
mov
or
rcr
mov
stc
stc
sub
cltd
in
xchg
push
rol
adc
sub
mov
mov
das
and
fildll
shlb
lret
push
pop
push
imul
es
pop
xchg
pushf
add
xor
out
stc
iret
jb
jnp
out
das
mov
mov
dec
or
movsl
cmp
mov
sbb
mov
and
rcll
mov
add
xchg
xor
cmpsl
daa
aam
repz
addb
jecxz
jae
lcall
push
cwtl
test
sub
inc
into
lea
stos
xchg
mov
pop
cltd
movsl
fcomps
andl
jo
xchg
mov
and
repz
insl
add
lret
mov
int3
std
movsl
out
dec
mov
mov
call
push
test
pop
scas
dec
inc
aaa
mov
subb
cltd
mov
cmp
mov
idivl
push
add
push
fwait
mov
adc
popf
xchg
gs
push
sarb
pop
rcrb
ds
dec
ljmp
jge
xor
leave
mov
data16
and
fcompl
xchg
xchg
sub
xchg
xchg
rorl
out
push
loopne
lock
aas
icebp
xchg
inc
adc
loop
scas
add
push
rorb
pop
test
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
les
adc
adc
imul
sub
hlt
mov
or
mov
std
and
mov
mov
les
test
mov
mov
mov
loope
fnstcw
adcb
scas
imul
pop
mov
in
jp
add
pop
mov
iret
or
jae
test
test
out
aas
call
mov
stos
xchg
jmp
push
clc
fisubrl
or
cmp
cmpsl
xchg
rcrb
sub
fstps
mov
mov
movsl
ljmp
bnd
xchg
jecxz
sbb
cmc
pop
pop
test
in
call
adc
out
pusha
loop
movsb
ficoms
sub
clc
xor
pop
imul
dec
aam
in
in
jne
dec
mov
cmp
adc
iret
jbe
lahf
and
inc
loope
scas
dec
jmp
xlat
or
js
mov
repnz
cmp
and
fstl
dec
hlt
imul
test
fbstp
dec
xchg
adc
sbb
add
inc
adc
out
inc
nop
dec
ret
js
adc
mov
push
icebp
or
nop
add
xor
pop
nop
mov
pop
xor
in
mov
psrlq
jne
addr16
cmc
sbb
gs
popa
outsb
out
popf
mov
bound
push
loope
pop
cmpl
test
iret
loope
pop
push
insb
cmp
mov
movsl
inc
mov
adc
std
dec
xchg
cli
and
xor
add
add
gs
mov
ds
dec
dec
xor
xchg
push
add
xchg
sbb
lret
push
sbb
mov
xchg
dec
adc
jno
mov
or
fistl
pop
mov
mov
cltd
popa
and
cmp
popa
outsl
mov
in
bnd
ss
test
out
push
hlt
insb
das
dec
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
mov
mov
enter
inc
adc
call
bndstx
mov
jnp
test
out
xor
jnp
test
loop
and
push
aad
movsl
cmc
sbb
popf
out
fcompl
repnz
inc
push
clc
movsl
or
xor
insb
and
pop
mov
dec
sbb
mov
xor
push
cmpsb
mov
sub
or
out
xchg
xorb
ds
lret
push
mov
xchg
andb
clc
movsl
rorb
mov
mov
add
push
adc
test
pop
lahf
cmp
scas
je
mov
dec
xlat
aad
add
adcb
dec
int
fsubrs
push
scas
xchg
xchg
sbb
icebp
lret
call
pop
stc
cmp
mov
daa
mov
push
mov
unpckhps
inc
lods
mov
xchg
repz
pop
out
sbb
ret
cmp
rol
xchg
testb
daa
mov
ds
or
orl
repnz
mulb
sbb
mov
and
orb
gs
out
adc
mov
push
popf
sub
inc
adc
jo
movsb
add
cmp
stos
push
inc
rcrb
add
ss
dec
cmp
push
sub
fdivrl
pop
xchg
stos
jmp
aad
aas
mov
dec
andb
cmpsl
jmp
mov
mov
or
aas
mov
cltd
mov
shll
loope
popa
add
movsl
daa
sbb
jb
or
push
repz
mov
mov
cmp
xchg
adc
pop
inc
aas
es
lods
pop
push
fst
cmp
add
and
leave
inc
mov
mov
js
mov
fsubrs
cmp
in
jl
cs
mov
fsin
and
jne
mov
lds
mov
decl
or
in
inc
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
mov
mov
adc
movlps
lret
loope
and
call
jle
insb
int
dec
nop
loopne
mov
jb
dec
and
pop
or
pushf
xor
sbb
je
mov
cmp
mov
xor
or
cld
gs
negl
movsb
and
sbb
mov
pop
pop
pusha
jno
imul
repnz
repnz
fistps
jne
cwtl
jb
adc
jle
and
sub
xchg
fmuls
inc
out
mov
push
insb
fnsave
pop
test
push
fs
pop
adc
stos
cmp
mov
fwait
icebp
mov
repz
mov
int3
stos
test
ljmp
fdivs
add
cmpl
aam
test
push
aam
lcall
cmc
sub
mov
lea
xlat
out
or
mov
pop
xchg
pop
and
jle
cmpsl
push
addl
fbld
inc
mov
test
cmp
inc
jb
lahf
pop
std
mov
testl
xor
cs
leave
pop
int
fcomps
ss
xchg
and
adc
test
mov
jl
push
or
sbb
loopne
gs
xor
ds
and
std
int
aas
ja
mov
pop
and
shll
xchg
popa
nop
adc
dec
jb
imul
xor
scas
adcl
nop
mov
or
or
sub
inc
fidivl
and
jmp
sbb
dec
fst
jnp
sub
jg
popf
ja
enter
push
push
fst
pop
lret
arpl
mov
or
inc
outsl
push
scas
gs
fbld
ficoml
xor
push
arpl
popf
mov
in
nop
push
loope
sbb
pop
aaa
and
dec
inc
push
shll
loopne
es
mov
cmp
or
pop
call
test
cli
xchg
or
xorb
mov
cmpsl
xor
test
es
push
sub
dec
fimull
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
jmp
insb
mov
movlps
inc
ja
das
xor
jge
hlt
lods
pop
popf
popf
cmp
or
ja
sbb
jb
jge
sbb
push
repnz
mov
andb
sti
lods
repz
insb
das
lea
inc
inc
jle
xchg
loop
pop
mov
sbb
lret
jecxz
push
imul
mov
addr16
sbb
mov
stos
xchg
shlb
imul
imul
xchg
inc
int
outsl
cld
inc
fdivl
movsb
es
cmp
stos
lea
mov
mov
loopne
adc
jge
ret
adc
inc
repz
aad
jge
lret
sub
aam
jecxz
mov
idivb
and
outsb
sbb
outsb
dec
fcomp
or
aam
nop
cmp
outsl
arpl
repnz
mov
out
pusha
aas
out
adc
push
xor
popa
addb
or
sahf
das
mov
sbbl
setp
sti
dec
sahf
jne
out
push
adc
loope
stc
adc
push
nop
mov
cmpb
cmp
push
or
and
cli
cwtl
jle
mov
nop
xchg
es
ljmp
mov
cmp
adc
lock
jle
jmp
pop
mov
imul
int
jmp
out
cli
adc
dec
int
inc
fidivs
sbb
mov
addl
jbe
test
pop
jne
jmp
dec
fstl
imul
jmp
icebp
dec
out
mov
pushf
mov
xor
pop
mov
push
sub
call
add
add
or
aam
iret
sarl
dec
in
lds
aaa
sub
adc
das
aaa
call
and
icebp
call
sbb
out
daa
inc
jp
sti
inc
xor
daa
jge
out
inc
decl
jne
dec
xchg
push
or
test
jno
mov
mov
stos
pop
mov
movsb
pop
cmp
jnp
mov
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
push
sbb
enter
pop
out
add
cmc
sub
orb
mov
jns
incl
lret
cmp
test
cltd
xchg
sbb
fcmovne
xor
cmp
sbb
out
mov
mov
insb
push
ljmp
mov
fs
mov
pop
jge
dec
push
js
mov
dec
sub
mov
and
jae
in
cli
mov
mov
sahf
add
lock
loopne
loop
mov
in
rcrb
lahf
add
jg
push
inc
mov
icebp
orl
pop
mov
aam
cmp
mov
add
test
and
jmp
bound
sbb
dec
fcompl
push
subl
mov
pop
push
test
push
pushf
int
test
jg
shll
sarl
xchg
or
sub
cld
pop
push
mov
popa
enter
pop
pop
adc
aas
pop
mov
add
push
mov
cltd
dec
add
mov
push
cli
jae
hlt
ljmp
mov
jbe
mov
out
loop
aaa
xchg
out
imul
ja
lods
js
sbb
adc
iret
mov
ss
icebp
das
popa
in
outsb
test
sahf
inc
ret
clc
jns
cmc
xchg
int3
loope
incl
movsb
jge
jbe
and
mov
div
in
xor
or
fstpt
loope
sti
xchg
adc
and
sahf
jbe
pop
stos
mov
xchg
sub
dec
aam
push
and
xor
sbb
jle
loopne
icebp
test
jne
shl
inc
push
bound
lods
loope
int
test
xchg
fdivr
mov
cmp
adc
movsb
loope
push
inc
xchg
push
pop
mov
int
jmp
in
pop
mov
daa
push
pop
sbb
jne
mov
inc
fisttpll
sahf
imul
mov
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
call
insb
adc
adc
popf
call
xlat
sbb
sub
jnp
subl
imul
jecxz
add
mov
or
fstpt
fidivrs
das
pop
js
lods
mov
pop
and
pop
imul
sub
xchg
jg
xchg
ja
orl
sub
ljmp
stc
leave
adc
push
lahf
xlat
inc
xchg
call
push
in
cmc
or
pop
fsubl
xchg
hlt
mov
sbb
push
cld
pop
repnz
mov
icebp
cmp
push
ror
jo
fnstcw
rol
jmp
push
ret
loopne
cmpsb
push
daa
test
fcompl
call
in
mov
mov
js
test
jmp
pop
dec
sub
or
cmp
lea
mov
pop
push
sub
inc
pop
testl
aaa
popf
cmpsl
mov
clc
jp
add
xchg
and
in
ds
shl
iret
and
daa
cmp
mov
and
test
adc
push
mov
pop
xlat
sbb
dec
mov
adc
sbb
cwtl
pusha
lea
das
iret
adc
or
mov
lods
pusha
fldt
loop
imul
mov
inc
mov
sahf
sub
jle
popf
add
imul
test
cmp
out
into
nop
push
jp
or
sub
stc
push
fisttps
xchg
jmp
adc
cmp
cmpsl
mov
and
adc
jbe
add
push
loopne
push
jo
int3
out
pop
cmc
jmp
jne
mov
pop
jl
push
je
stos
dec
cmpsb
out
in
sti
push
repnz
push
cmpsl
aas
and
lods
fsubr
jb
adc
mov
jecxz
cmp
idivl
and
clc
repnz
xchg
popf
pop
out
adc
mov
hlt
shl
jmp
out
aam
test
gs
mov
cmp
shlb
dec
xor
outsl
ljmp
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
out
sarb
push
adc
mov
pop
dec
aaa
cmp
mov
adc
imul
inc
les
lret
imul
inc
push
cmpsb
stos
sahf
cmc
imul
adc
adc
xor
mov
pop
jmp
into
sbb
add
sbb
cmc
add
mov
dec
lret
add
fsubrl
aad
cmc
push
lock
xchg
rcll
mulb
sbb
stc
mov
xchg
andl
adc
dec
lods
gs
cmp
fstp
out
dec
dec
jb
or
push
fmull
push
in
xchg
lahf
mov
cmc
dec
sbb
xchg
leave
push
insb
cmp
xor
add
repz
cltd
and
lcall
push
xchg
lods
testl
pusha
incb
xor
xor
jmp
pushf
inc
fwait
jbe
aad
test
js
outsb
mov
sbb
outsl
and
cmp
jb
inc
and
insl
stos
repz
mov
mov
into
cli
imul
cwtl
lahf
insl
xchg
fs
fisttpll
cmp
dec
in
push
das
scas
jo
sahf
jo
jns
es
mov
push
jns
outsb
mov
int
enter
xchg
mov
mov
cli
cmp
fisubs
aad
shrb
mov
mov
adc
jmp
insb
adc
testl
and
notl
mov
lahf
divl
sub
or
and
push
movsl
cmc
fildll
mov
and
push
es
xchg
mov
or
das
imul
and
psllw
or
testb
imul
cwtl
mov
iret
xchg
gs
cmp
ror
xchg
mov
call
aas
int3
xor
out
subl
lahf
daa
out
push
add
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
pop
mov
enter
ja
aaa
ljmp
stc
xchg
mov
loope
mov
xchg
cmpsl
adc
jbe
mov
pop
sub
pop
push
sbb
gs
pop
inc
xor
sub
push
dec
fdivrl
or
pop
mov
mull
push
popa
pusha
mov
shl
sbb
ret
icebp
aas
lods
lods
jno
shl
rclb
test
or
mov
shrl
sarb
popw
dec
inc
insl
es
loopne
out
mov
add
adc
jecxz
mov
outsb
add
pop
pop
lock
popa
fs
jnp
lods
mov
mov
popf
xchg
xchg
mov
pusha
fbstp
and
xor
xchg
xor
jne
sub
js
outsb
sub
mov
xor
mov
in
or
sub
xor
repz
push
push
inc
or
sub
mov
mov
hlt
xchg
dec
out
push
dec
push
cmp
std
and
popa
jns
inc
and
dec
mov
pop
lret
sbb
ret
push
test
jp
imul
dec
scas
sbbl
mov
push
loope
xor
dec
inc
add
insb
mov
sarl
das
daa
add
mov
out
sbb
fldt
jl
push
lods
jg
add
cmp
mov
pushf
mov
mov
icebp
repnz
mov
outsb
or
icebp
shl
dec
fmul
cmp
inc
or
gs
mov
ret
je
pop
adc
leave
and
fisttpll
or
jb
fucomp
xlat
int3
dec
xchg
out
mov
pop
xchg
xchg
cltd
andl
fisubs
je
lods
ljmp
clc
xchg
sub
inc
and
call
mov
lock
push
push
and
mov
inc
add
xor
fucomip
xor
rcrl
cmpsl
jecxz
cmp
ds
sbb
lret
jae
pop
or
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
fistps
add
pop
stc
loopne
pop
mov
cmp
out
enter
inc
and
sub
dec
shll
movsl
inc
cmpsb
mov
dec
data16
adc
data16
mov
test
lcall
dec
add
mov
mov
into
ds
and
pop
xor
xchg
xor
mov
cli
in
inc
push
jb
sbb
or
push
in
jp
fbstp
xor
or
fwait
fwait
ds
bound
cmovg
imull
jge
repz
mov
sub
popf
outsl
enter
mov
xchg
xchg
pop
push
xchg
mov
lret
call
and
push
lahf
pop
ds
sbb
loop
test
cmp
mov
mov
cltd
cmpb
orl
in
adc
sarb
xor
scas
les
or
jb
xor
adc
cmp
lcall
call
ret
inc
clc
sub
jae
sbb
leave
test
cmpb
aaa
xor
pop
lea
xchg
rcl
mov
or
mov
into
mov
call
out
aam
bound
push
repz
cwtl
rcll
fwait
jnp
mov
insb
pop
push
jbe
mov
cmpsb
movsl
sti
adc
movsl
adc
aas
out
cmp
adc
adc
test
dec
add
js
pop
push
cmp
ss
imul
cli
xlat
repz
repnz
fistpl
dec
cmc
iret
pop
and
scas
out
mov
loopne
jg
mov
stos
mov
add
or
jnp
push
dec
sbb
mov
add
js
aad
mov
ljmp
test
sub
mov
pop
jl
fstl
rorl
fwait
hlt
stos
mov
fsubs
dec
mov
mov
jmp
hlt
out
mov
dec
xor
xchg
push
daa
push
movl
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
jl
pop
mov
enter
mov
cmp
dec
mov
dec
inc
insl
jns
adc
scas
jbe
fisubrl
pusha
add
inc
loopne
sbb
stc
push
add
popa
aaa
cmp
test
adcl
jle
cmp
cltd
adc
int
xchg
or
mov
pop
cmp
testb
inc
ds
xchg
dec
movsl
iret
rcrl
movsb
sbb
cmp
rcrl
push
dec
push
enter
mov
notl
mov
stos
mov
xchg
iret
jp
xor
ret
fsub
adc
jecxz
mov
insl
or
je
push
jg
aaa
xor
lods
sbb
jle
les
cwtl
xor
scas
cmc
mov
jnp
jmp
pop
jge
lods
mov
cltd
inc
imul
shrb
data16
xchg
rcl
cmp
stc
adcb
aas
jno
cs
push
jp
mov
xor
lods
movsb
push
insb
mov
mov
shr
xorl
xchg
int3
pop
dec
sahf
xor
xchg
sub
mov
dec
or
aad
sarb
stos
test
jecxz
pop
jl
or
cs
test
loop
xchg
fadds
out
out
xchg
jnp
mov
cltd
in
push
adc
cltd
sub
cmpsl
je
test
add
mov
xor
pop
fmull
sbb
add
adc
dec
pop
out
in
xor
in
push
adc
mov
sbb
inc
fimuls
add
mov
loope
add
fwait
cmp
lds
lea
inc
lods
mov
and
mov
inc
sahf
mov
sbb
out
loop
mov
mov
inc
push
or
xchg
push
xchg
f2xm1
out
and
adc
inc
or
mov
sbb
cmp
aam
sbb
dec
sbb
push
scas
cltd
jae
test
pop
cmpsb
xor
push
push
or
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
repz
mov
adc
adc
adc
fsub
imul
dec
cld
je
call
or
push
push
dec
push
mov
add
xor
cmp
jnp
push
scas
and
pop
in
test
loop
adc
scas
mov
cmp
sbb
movsb
xchg
dec
xor
popa
icebp
dec
gs
fbstp
jle
aaa
mov
movsb
mov
inc
inc
mov
mov
jno
stos
aas
inc
ret
jno
test
inc
push
in
pusha
pop
mov
testl
in
ret
jns
push
test
mov
dec
xchg
jno
and
scas
jge
into
fisubs
dec
or
testb
daa
nop
pop
and
out
mov
mov
jge
mov
jo
imul
inc
mov
cmp
push
fnstsw
sti
mov
testl
jo
loope
imul
movsl
cltd
mov
es
std
push
push
addl
fmull
xchg
lret
pop
pop
xor
mov
jb
add
enter
jae
jae
lods
lods
lret
add
lods
sarl
je
mov
adc
fadds
push
test
mov
jp
jl
and
mov
mov
arpl
cmp
data16
pop
add
sub
lret
xchg
mov
rolb
cltd
call
pop
add
stos
leave
jmp
lcall
cmpb
pusha
lret
mov
mov
fmull
push
fnstenv
cmpsl
adc
add
mov
push
data16
inc
sbb
subb
test
andb
iret
pop
lds
adc
call
and
xor
je
and
xlat
pusha
mov
stos
pop
sahf
mov
movb
stos
xlat
in
jge
push
stos
xchg
add
in
jne
add
mov
lock
jno
fwait
and
push
push
fiaddl
fwait
lcall
mov
fisttpl
push
shl
pop
fistpll
gs
mov
lds
xchg
stos
loopne
aas
push
lahf
cli
cmc
lret
jmp
lcall
repnz
imul
jge
mov
mov
fst
push
ja
xchg
jecxz
in
push
fsubr
addr16
lock
mov
dec
add
xchg
dec
jle
test
add
mov
dec
fisubrs
jno
push
gs
sbb
iret
test
imul
mov
jle
push
mov
xchg
sbb
push
aaa
add
data16
filds
shr
fldt
in
dec
shrl
add
push
mov
mov
push
mov
lods
xchg
sub
jo
fisttps
cli
or
jmp
shll
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
insb
push
adc
adc
arpl
das
test
inc
faddl
jns
jno
or
mov
pop
data16
pop
pop
les
in
shlb
rcl
xor
fldcw
fistps
or
stos
test
int
pusha
xor
mov
jmp
dec
js
popf
pop
jecxz
andl
test
mov
cmpl
push
xchg
xor
lds
fs
xchg
mov
mov
or
fs
mov
jno
inc
sbb
mov
push
push
mov
dec
or
sub
add
lea
test
test
ficompl
aad
push
dec
shrb
loope
inc
in
testl
call
lahf
jae
add
ljmp
adc
push
and
ljmp
xor
mov
pusha
add
sbb
in
jns
and
subps
mov
lods
addr16
ret
and
hlt
or
cmc
aaa
xor
mov
outsb
inc
scas
xchg
add
scas
adc
pop
ja
sub
lret
xor
inc
jmp
push
cmpsb
es
sahf
ss
pop
test
mov
adc
push
pop
jecxz
dec
fldl
sbbl
fbld
imul
test
push
dec
leave
sub
xor
inc
in
mov
mov
dec
sub
je
stos
addb
cmp
leave
pop
lahf
sahf
push
stc
imul
movsl
cmpsb
rorb
pop
fisttpl
enter
add
push
pop
xor
dec
xor
scas
fdivrp
fwait
sub
mov
in
daa
xlat
adc
pop
mov
adc
pop
pand
and
in
fisubl
imul
aaa
push
or
movsl
pop
test
insl
mov
mov
pushf
in
nop
sahf
aad
lods
and
cmpsb
lock
inc
dec
inc
dec
fmulp
scas
jbe
fwait
dec
xacquire
mov
cmc
dec
push
je
aam
jnp
jmp
sub
mov
rcrl
std
jl
fildl
test
ljmp
sbb
mov
js
test
lret
jge
call
adc
or
aaa
fs
xchg
xchg
mov
mov
mov
jae
or
add
xchg
cmpsb
sbb
push
test
ds
pop
sbb
push
mov
pop
ds
inc
mov
sbb
pusha
cltd
dec
jne
or
mov
mov
stos
mov
arpl
mov
adc
pop
dec
add
sbb
add
xor
mov
ja
stos
pop
mov
xorb
push
mov
imul
push
and
push
ret
sub
or
cld
sbb
pop
cmp
inc
xchg
mov
xor
xchg
or
push
fcom
jl
loop
lret
rcrl
ficoms
rcll
lods
mov
lods
lea
mov
adc
pop
fwait
cmp
je
push
rcrb
sub
mov
into
inc
push
insb
xor
sub
loopne
js
sub
jbe
mov
ror
jg
sbb
pop
jns
mov
ljmp
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
