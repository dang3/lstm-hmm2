push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
push
mov
sbbl
xor
andl
mov
mov
sbb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
jmp
scas
cltd
and
add
cwtl
int
sbb
addl
andl
je,pn
jo
aad
jae
insb
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
or
aam
popf
mov
int3
push
pop
outsb
rsm
pop
push
cltd
add
adc
notb
imull
int
sbb
mov
cmpsl
pop
repz
mov
push
mov
or
sbb
lock
rcrl
cld
sbbl
jmp
add
cli
jnp
popa
outsb
jg
push
insb
mov
fimull
push
xchg
mov
adc
xor
mov
dec
jmp
adc
push
or
into
sub
out
xor
jge
loop
addr16
xchg
mov
add
pop
xor
ds
jle
or
arpl
mov
fidivs
fistl
lea
xchg
xchg
fisubrl
jne
insb
xchg
push
repnz
aad
test
and
fmull
shrl
mov
popf
xchg
add
fistpll
jle
mov
ret
pop
sbb
add
sti
loope
xchg
mov
pop
jecxz
pushf
and
clc
fisttps
jmp
jl
test
ljmp
lcall
ja
mov
test
xor
cld
lods
pop
add
sub
aas
cli
inc
es
inc
addr16
pop
jae
pop
mov
test
dec
mov
imul
sbb
lock
mov
cmp
ret
sbb
rorb
lods
cmp
popa
fistpl
jae
jge
jge
dec
pop
addr16
in
rclb
nop
sbb
adc
pop
cli
out
xlat
pop
movsb
dec
jb
hlt
aam
outsb
mov
fwait
int3
and
jmp
test
push
add
jo
dec
mov
test
jl
sub
mov
inc
sub
cmpsb
sub
add
pop
sub
dec
mov
cmpsb
scas
adc
and
arpl
arpl
repnz
mov
push
push
das
xchg
mov
sub
cmc
in
xlat
stos
cs
jecxz
test
fwait
lea
sub
aam
mov
imul
mov
xorb
pop
f2xm1
dec
cmp
pop
sbb
out
je
jle
in
mov
mov
pop
sub
jl
jmp
lret
push
cltd
pop
mov
sub
movsb
shrl
hlt
mov
pushf
dec
js
mov
cmpsl
cmp
add
push
mov
call
stos
loop
sub
inc
mov
repz
pusha
sub
je
ljmp
std
and
pop
xor
faddl
pop
cmp
ret
je
adc
mov
pop
sbb
pop
fdivrs
or
mov
mov
sahf
jo
dec
nop
mov
clc
iret
mov
ljmp
repz
loope
adc
cmp
adc
jno
aam
cmp
push
std
cmp
inc
mov
sub
xchg
loope
jl
inc
or
inc
pop
add
mov
ja
jno
or
inc
add
scas
mov
pushf
pop
or
xchg
ret
lcall
out
dec
or
nop
jnp
es
fcmovne
xor
or
xchg
mov
lcall
and
mov
loop
js
popf
ja
jns
call
cmp
cltd
out
sub
or
addr16
add
push
sub
push
test
out
loope
mov
mov
push
adc
cmpsl
jae
and
add
jge
iret
and
mov
sub
sbb
lods
bound
call
pusha
mov
je
adc
sahf
inc
pop
sti
xchg
or
jle
enter
inc
mov
sbb
int
adc
leave
mov
sbb
add
mov
sub
jp
imul
mov
or
loopne
jno
fbstp
inc
mov
xchg
mov
push
out
cmp
sbb
inc
hlt
sbb
mov
mov
and
test
dec
bound
cmp
or
cmpsl
das
add
xor
cmp
mov
jl
pushf
cli
fiadds
cmpl
mov
or
pop
out
fistl
dec
cmp
lds
out
pop
idivb
inc
push
jae
jg
push
cmp
shll
out
loop
mov
cld
cmp
out
ljmp
addb
mov
sbbb
mov
out
pushf
push
lret
mov
and
inc
mov
sub
jge
nop
out
dec
mov
dec
and
inc
mov
pop
or
cli
lds
scas
jl
data16
inc
outsl
daa
out
xchg
pusha
pop
mov
ds
stc
mov
jmp
testb
sub
pushf
icebp
mov
movsb
pushf
orb
in
in
mov
mov
dec
inc
jmp
std
mov
jo
mov
push
and
clc
gs
bound
xchg
pop
es
cmpb
out
orl
push
call
sbb
pop
pop
lret
add
jno
pop
js
sub
cmp
call
ljmp
sub
ja
orl
ss
dec
pop
and
call
outsl
jge
ja
pop
lahf
ret
push
test
sub
repnz
fmuls
mov
fisubrs
in
dec
shlb
dec
cltd
xchg
jl
test
push
leave
test
mov
rcrb
adc
sub
in
inc
fmul
inc
sti
fldt
push
das
and
stos
sbb
int3
sbb
cmp
insl
dec
pop
mov
mov
or
jmp
sub
aam
test
filds
mov
mov
pop
mov
jge
shlb
outsb
call
pop
movl
push
cmc
outsb
int
fidivs
addr16
outsb
jp
stc
test
repz
jmp
jl
imul
jne
inc
mov
xchg
xchg
cmpsb
lods
xchg
push
lods
xor
xchg
fs
fistps
jbe
pop
push
jl
push
jno
inc
imul
mov
jae
and
cmp
int3
inc
cli
lods
loope
popa
and
mov
xor
sub
push
pop
rcll
mov
pop
cwtl
sbbb
vpaddq
int3
fld
xor
push
sbb
data16
ja
mov
xchg
mov
jp
movsl
stos
cmpl
adc
rclb
arpl
mov
cmp
jmp
mov
pop
jae
or
aad
push
add
fldl2t
push
jmp
stc
pop
pop
dec
lods
test
dec
lahf
dec
xlat
dec
jo
push
pop
aas
iret
pop
fs
mov
mov
xchg
icebp
lret
stc
pop
and
mov
mov
sti
and
sub
filds
sub
sbb
or
dec
cld
inc
pop
dec
andb
stos
lret
jno
push
out
ret
pop
lods
cltd
add
dec
push
ret
push
mov
and
sti
das
mov
xchg
xchg
call
negl
mov
and
aam
xor
dec
mov
out
xchg
mov
inc
xor
or
or
xchg
ret
push
add
shrl
mov
inc
adc
cmp
mov
cmp
arpl
push
out
mov
inc
inc
cmpsl
addb
test
adc
icebp
add
popl
mov
mov
push
jbe
sbb
stos
mov
mov
int
sbb
pop
xor
lret
add
sbb
or
int3
mov
les
aam
shr
out
popf
jl
jns
sub
js
cmpsb
mov
scas
popf
jb
adc
arpl
cwtl
mov
jns
mov
mov
ret
pushf
or
add
xchg
jae
movsb
stos
cmp
xchg
pop
out
push
sub
adc
fnstenv
dec
data16
subl
test
popa
xlat
mov
movsb
add
das
pop
aad
les
out
sub
xchg
aaa
xchg
enter
lods
fsubrl
nop
testl
js
mov
fcoms
test
bnd
in
imul
out
shl
mov
jnp
add
or
and
cmpsb
daa
sbb
mov
daa
das
aaa
pusha
jb
imul
or
mov
xchg
lods
in
jmp
aaa
cmp
or
pop
jl
sbb
stos
jbe
repnz
dec
int
repz
outsb
cld
int3
and
clc
mov
mov
cmp
in
aaa
inc
cltd
nop
sbb
adcl
xchg
ret
pushl
mov
and
xchg
out
cmpb
jmp
add
xchg
shll
mov
stos
addr16
test
jecxz
popa
add
enter
and
mov
cmp
and
out
bound
mov
imul
stos
nop
pop
push
mov
call
cmp
fdivrl
dec
enter
mov
cwtl
sub
jecxz
cmp
sbb
les
jbe
aad
sub
push
mov
jecxz
or
add
repz
test
loop
js
not
inc
cmpsb
loopne
adc
mov
sub
or
cmp
fs
add
jnp
cmp
sbb
add
aam
ljmp
js
push
jge
inc
or
testl
pop
jg
jp
xlat
loop
mov
xor
int
in
sub
push
jmp
and
adc
aas
xchg
into
cmpsb
add
stos
pusha
xlat
insb
pop
cltd
xchg
int3
jmp
jne
aad
inc
fisttpll
mov
push
enter
rcr
push
xor
loope
jp
jg
imul
sarb
push
xor
les
jo
in
xor
test
repz
add
mov
sahf
adc
ficompl
movsl
pop
cmc
fisttpl
repnz
incl
insl
inc
push
mov
xchg
test
inc
cmp
lcall
sarb
pop
add
jbe
jbe
fimull
jl
inc
loopne
sbb
add
ds
ret
xchg
mov
test
push
inc
leave
jne
inc
addb
sub
int
lods
mov
sbb
cmp
daa
ret
mov
xor
or
add
xchg
lcall
cwtl
cmpsb
lea
stc
xchg
and
adc
jns
jns
cmp
push
or
mov
and
add
add
push
enter
add
fildll
les
dec
jl
out
aad
mov
mov
flds
test
sti
jo,pn
sbb
cmp
rcl
sti
cmp
push
test
aad
cmpsl
lds
sbb
out
fcomip
iret
aaa
cli
pop
add
iret
icebp
mov
loopne
faddl
jo
mov
lods
xchg
arpl
test
fiadds
bound
jmp
repz
cmpsb
in
or
dec
das
fwait
push
mov
movsb
mov
adcb
jo
lcall
or
add
add
xchg
iret
into
cltd
add
push
xchg
xchg
pusha
icebp
pusha
sahf
mov
sbb
xor
fs
adc
or
test
mov
inc
cmp
mov
jp
mov
pop
jnp
push
lds
mov
ret
or
xor
jbe,pt
adc
scas
scas
mov
push
out
cmp
jno
addr16
xchg
fnstenv
cmp
lds
in
cmp
mov
call
cmp
aas
aaa
cld
inc
xlat
repz
mov
and
or
push
and
push
rorb
cmp
repnz
mov
cwtl
inc
loop
sti
adc
repz
das
push
out
cmp
mov
mov
ljmp
test
repz
mov
cmc
rolb
mov
pop
or
xchg
jp
ss
pop
and
bound
repz
aad
adc
ds
stos
pop
lahf
lds
or
jns
dec
xchg
mov
xchg
ja
xchg
fstpt
jae
jmp
push
add
adc
add
imul
lds
popa
jae
jnp
imul
dec
sub
cld
roll
inc
cltd
cmp
adc
jae
iret
sarb
pop
popa
fsubs
imul
push
adc
dec
mov
mov
sub
rcll
jecxz
faddl
or
pop
xor
out
in
xorb
fdivr
enter
lods
outsl
mull
fsubs
sub
mov
cld
jle
fists
rorl
push
jge
lods
mov
rol
ret
lgs
xchg
push
add
dec
jns
repnz
push
sti
scas
mov
stos
bound
push
rol
pop
and
ds
cltd
lahf
mov
dec
add
test
xor
jae
push
imull
in
mov
arpl
mov
mov
jo
jo
inc
cli
pushf
push
and
push
popa
and
hlt
cmp
iret
leave
shll
mov
ja
sbb
loopne
mov
sub
mov
imul
jle
outsl
push
adc
inc
in
lods
cli
sub
lcall
outsb
jae
and
mov
jle
stc
xchg
dec
iret
mov
mov
iret
xchg
outsl
or
es
mov
pop
mov
sub
adc
cltd
fwait
sub
xchg
rclb
sbb
rcrb
sbb
loop
sub
mov
xorb
iret
imul
mov
jp
pop
imul
mov
shll
jmp
fs
pop
ljmp
roll
or
jne
mov
test
sahf
aaa
mov
enter
xor
xchg
and
test
mov
add
imul
pop
sbb
inc
push
pop
pop
out
inc
outsb
sub
mov
in
aas
std
or
arpl
data16
sub
stc
pop
pop
ss
outsb
outsl
inc
sbb
and
out
xchg
js
das
movsl
push
dec
xchg
movsl
cwtl
cmpsl
mov
ja
jmp
cwtl
xor
fdiv
fs
sarl
aas
shll
lds
jp
arpl
jmp
ret
pop
dec
jnp
repz
repz
push
insb
push
push
xor
insl
inc
fstpl
jnp
mov
cmc
and
pop
hlt
adc
ljmp
jl
push
das
mov
xchg
imull
arpl
loop
stos
inc
leave
add
jmp
dec
adc
or
mov
and
ljmp
mov
and
jb
fisubrl
test
push
pop
adc
imul
jmp
fistps
testb
dec
sahf
aad
out
pop
cmp
scas
cld
cmp
incb
fwait
pop
mov
icebp
inc
ret
bound
dec
enter
pop
dec
cld
aam
pusha
cmp
loopne
clc
out
rcr
je
shl
je
push
int
mov
cmp
lret
mov
fmuls
xchg
addl
adc
imull
cmp
dec
xlat
push
pop
inc
adc
and
sub
rcrl
clc
xlat
mov
test
and
std
jmp
shlb
jg
scas
sahf
jg
inc
push
mov
jle
and
fwait
cmpl
lret
jo
in
pop
daa
lods
mov
popf
std
ret
aas
xor
dec
ds
inc
xor
je
je
test
sahf
sub
loope
cmp
pop
dec
mov
or
add
adc
stos
aam
loopne
mov
jg
sub
call
cld
and
ficomps
int3
mov
mov
arpl
xlat
cmp
insb
shrl
movsl
test
mov
mov
inc
cs
test
out
push
fwait
inc
ficompl
xchg
and
push
dec
jo
push
test
xchg
mov
add
or
push
add
adc
jp
mov
pop
adc
mov
inc
xchg
push
jp
push
in
outsb
sub
jle
pop
jne
enter
dec
pop
mov
sbbl
mov
xchg
arpl
es
inc
mov
in
inc
jle
push
mov
mov
ret
leave
cmp
scas
cmpb
pusha
mov
xchg
sti
insb
in
adc
cli
cmp
pushf
xor
lock
sbb
jbe
rolb
insl
mov
add
pop
fwait
cli
mov
mov
and
push
pushf
cmp
xchg
cmp
pop
divl
jo
mov
lock
add
pop
insb
and
mov
xchg
mov
ret
inc
pop
cmpsb
sbb
loop
shlb
les
inc
inc
popa
lds
mov
js
cmp
inc
xor
iret
cmpsl
inc
lret
lret
test
sbb
cltd
dec
icebp
insl
daa
fstpl
or
inc
aam
je
scas
mov
je
ljmp
clc
jle
fdivr
mov
mov
fcompl
xchg
in
clc
mov
dec
fucomp
jle
mul
stos
shll
cmpsl
mov
movsb
jbe
lcall
fs
mov
add
ficompl
ja
cld
iret
aas
sbb
or
or
repnz
xchg
xor
pusha
jmp
xchg
mov
arpl
cmp
and
lcall
cwtl
inc
je
je
and
and
jbe
sbb
xchg
mov
sbb
les
jae
fiadds
sub
sbb
add
shlb
outsl
leave
xchg
loopne
out
sahf
imul
xor
push
pop
ljmp
sub
or
lret
sub
mov
icebp
cmpsb
dec
adc
mov
xorl
lds
fwait
rcrb
add
rol
mov
jl
mov
adc
push
pop
mov
clc
sbb
jae
adc
xlat
jns
sarl
jmp
sbb
push
cmp
xor
lds
mov
mov
push
rcll
mov
mov
into
cmp
sub
mov
jge
jmp
sub
dec
data16
lods
sbb
xchg
loopne
mov
dec
aas
sub
sbb
pop
enter
mov
loopne
push
fsubs
and
mov
rorb
cs
sarb
fnstsw
inc
mov
js
frstor
icebp
mov
insb
mov
or
test
bound
cmp
ret
movsb
pop
pop
les
sbb
push
lahf
add
out
cli
aam
sbb
daa
lods
ds
dec
lret
push
leave
push
jbe
inc
dec
or
in
mov
xchg
cmc
xor
std
into
mov
mov
xlat
adc
aas
adc
jo
adc
push
lds
insl
cmp
jmp
nop
add
xchg
jp
xchg
in
js
stos
call
movsl
mov
or
rcrb
testl
dec
adc
sar
mov
xor
stos
lret
loope
lods
outsl
jno
pop
imul
and
mov
in
loopne
int3
sahf
mov
int
cmpsb
mov
adc
iret
test
add
or
js
stos
push
adc
punpckldq
call
mov
and
mov
pop
inc
in
lret
sub
push
into
rorb
mov
ds
call
jmp
xor
lahf
pushf
xor
push
and
movsl
movsb
sbb
push
xchg
sub
dec
jl
jno
nop
xor
adc
sub
xchg
dec
xor
stc
sub
dec
xor
inc
pushf
sub
cmp
add
fwait
ja
mov
and
push
xlat
scas
jg
pop
es
mov
push
ret
rorb
aaa
or
cs
aad
dec
rcl
cmp
fidivl
and
mov
maskmovq
mov
push
ds
test
bound
sar
pop
lcall
out
fs
movsb
mov
push
sbb
or
scas
js
push
inc
push
pop
ljmp
fcmovb
lcall
dec
xor
add
add
mov
stos
test
jle
cs
push
decl
jbe
sub
inc
es
test
mov
dec
xor
and
inc
flds
jg
cmpb
or
inc
jbe
sbb
fwait
dec
je
outsb
fildl
dec
insl
adc
and
sarl
dec
jo
leave
push
jp
popl
std
adc
enter
rclb
lock
push
pop
mull
push
push
aad
xor
test
mov
pop
mov
test
lods
aas
pop
les
mov
dec
fcompl
cmpsb
pop
ds
lock
outsb
xor
hlt
movsl
movsl
lods
push
shrl
add
jmp
jle
outsl
aad
mov
xchg
lcall
test
into
sub
shrw
mov
xchg
daa
xchg
cmp
sub
mov
aas
test
out
jle
mov
sub
pop
arpl
repnz
addr16
sub
pop
lahf
adc
aam
fdivs
cwtl
test
cmp
test
and
mov
scas
les
jecxz
pop
adc
sub
or
in
dec
movsl
mov
add
aam
mov
mov
aas
inc
push
sub
mov
loop
aaa
pop
out
aaa
fidivrs
dec
fstpt
mov
das
dec
lcall
dec
push
add
cmpsl
inc
sub
hlt
xchg
add
pop
popf
mov
fadds
pop
adc
xor
jnp
shl
cmc
lea
add
scas
bound
pop
xchg
pop
mov
pop
mov
push
shrl
and
mov
int
pop
pop
leave
cmp
push
icebp
add
mov
faddl
iret
xor
pusha
js
adc
ljmp
lahf
loopne,pt
pop
pop
ss
sub
xchg
stc
pop
imul
jnp
xor
movsb
add
int3
pushf
sub
sub
call
or
loopne
mov
or
sbb
imul
or
cs
pop
add
and
test
and
fs
cmpsb
fwait
xor
dec
and
int
pop
ljmp
xchg
imul
mov
dec
sub
dec
xor
addb
adc
or
push
inc
add
and
mov
movsl
popf
lock
das
and
scas
jmp
jg
popa
cmpb
cmc
mov
sbb
add
adc
mov
addb
jae
popa
xor
and
imul
in
pop
or
pop
inc
cld
mov
cmp
addb
mov
test
incb
xchg
lods
aas
sahf
int3
daa
mov
ret
jno
out
ja
std
icebp
cmp
mov
xchg
and
and
cvtdq2ps
inc
outsl
adc
pop
test
cmpsb
lahf
cltd
sbb
or
stos
sub
hlt
mov
fdiv
sbb
adc
pop
pop
pop
mov
in
pop
outsb
inc
pop
mov
xor
mov
aam
gs
shr
cmp
cltd
inc
xlat
mov
xor
mov
in
or
daa
push
jmp
loope
push
popa
ror
mov
xor
sub
jb
call
sti
or
loopne
inc
or
jne
xor
ret
xchg
push
adc
dec
mov
repnz
sbb
jo
push
xor
jl
mov
pop
or
outsl
jno
fmul
inc
ret
cmp
inc
cmpb
dec
push
cli
sti
mov
les
jl
mov
jnp
mov
or
xor
fwait
scas
addr16
xchg
adc
mov
jo
adc
in
mov
sbbl
loope
repnz
sbb
orb
adc
pop
test
sbb
arpl
fwait
add
rcrl
fistpl
dec
pop
or
aad
inc
pop
mov
push
aaa
clc
inc
repnz
flds
outsb
mov
inc
fcmovu
add
outsl
xor
notb
arpl
adc
mov
mov
std
iret
cmpsb
sbb
push
icebp
ret
cmp
ljmp
push
rorb
push
fisttpll
mov
pop
lret
mov
mov
fistpll
les
adc
add
addr16
add
lcall
jnp
fwait
int3
lcall
shrb
xchg
mov
cli
mov
imul
aaa
cmc
movsb
jo
pushf
pop
push
adc
out
loop
push
decl
stos
in
mov
xor
xlat
jg
inc
cmp
jns
out
insl
push
cmpsb
or
sbb
and
mov
addr16
mov
push
mov
js
xor
popf
scas
outsb
inc
cmpsb
jle
and
pushf
aad
shlb
pop
mov
and
bound
adc
test
daa
sub
bound
mov
push
lcall
fldt
jmp
push
enter
xor
cld
les
fildll
sub
fadds
mov
pop
ss
xlat
and
inc
add
jnp
sbb
jg
pushf
pop
jns
aas
lds
inc
leave
inc
hlt
cmp
icebp
into
inc
out
push
dec
dec
imul
cmp
push
out
pop
mov
add
outsb
mov
inc
mov
cli
sbb
icebp
mov
push
inc
dec
jae
aaa
xlat
divb
push
or
mov
ficompl
or
lret
testb
aaa
imul
add
sahf
mov
pop
jg
xchg
adc
pop
xlat
leave
iret
add
dec
repz
xor
call
repnz
adc
xor
aaa
fsubr
pop
push
xor
xchg
cmp
or
mov
inc
add
mov
adc
mov
hlt
fadds
pushf
fwait
mov
mov
test
scas
adc
push
das
xor
stc
dec
call
cmp
lcall
pop
push
xchg
imul
mov
pop
xor
stc
mul
pop
cltd
fdivl
pushf
bound
mov
aaa
loopne
inc
add
jp
push
fildl
dec
mov
jns
lock
lods
rorb
addl
push
or
cmp
inc
das
mov
lock
sbb
stc
dec
js
cmpsb
les
fisttps
pusha
sub
and
shl
bound
fldenv
inc
sub
or
flds
pop
lret
int
andl
cmovnp
push
pop
jmp
jp
xor
aaa
mov
add
das
iret
aaa
sub
ljmp
inc
sub
mov
test
sahf
mov
inc
pop
mov
jecxz
pop
cmpsl
push
lods
xchg
inc
shll
out
aam
js
sbb
fiadds
xchg
add
mov
into
repnz
loop
imul
xchg
pop
in
and
stos
mov
stos
fstl
into
push
sbbl
fiaddl
jno
iret
jge
stc
xchg
mov
push
cmp
std
cwtl
jmp
pop
popf
push
daa
mov
jnp
stos
dec
int3
xchg
jmp
ret
in
lods
pop
lea
lahf
je
xchg
les
aaa
push
loopne
lds
test
xor
les
call
adc
rep
scas
push
xor
rcrb
loope
push
icebp
enter
xchg
sbb
test
and
fisttpll
test
std
xor
pop
roll
mov
insl
push
xor
sbb
aas
andb
sub
mov
scas
adc
add
jnp
imul
push
in
movsb
iret
add
sbb
jle
and
cs
dec
arpl
and
xchg
xor
rcr
mov
push
leave
xor
sbb
fsubrl
or
jl
mov
dec
adc
pusha
push
xchg
shrl
roll
xlat
iret
push
int3
and
inc
fidivl
out
aas
dec
icebp
lret
mov
xor
gs
repnz
xor
sbb
sub
jns
fdivs
add
xchg
fisubrs
cmp
sbb
add
add
push
adc
or
push
in
or
and
scas
sub
outsb
lcall
xchg
je
scas
mov
movsl
mov
int3
inc
xchg
jne
ret
popa
cmp
ret
mov
push
shl
sahf
push
push
pop
movsl
repz
int3
sub
mov
or
xor
out
xchg
fldt
sbb
inc
imul
loopne
js
jge
sbb
dec
dec
xchg
mov
add
and
pushf
adc
xor
mov
jle
mov
cmp
jbe
sub
add
dec
scas
aas
pop
enter
or
mov
movsb
pop
stc
and
fbld
xor
fidivs
mov
jbe
lret
aam
std
shrl
loop
shrl
jae
pushf
or
out
adc
insl
out
and
out
mov
ret
sbb
xchg
or
lods
push
mov
pop
adc
adc
sbb
push
test
outsb
lods
cmp
push
sbb
out
lret
push
cmpsl
mov
dec
cld
inc
and
iret
ljmp
inc
fcoms
out
test
xor
scas
push
adc
movsb
hlt
ret
in
test
mov
mov
shll
call
and
sub
lcall
mov
scas
dec
push
pop
scas
xchg
cmp
scas
sbb
and
mov
mov
scas
scas
push
dec
test
pop
or
push
dec
cltd
jbe
cmc
pop
add
dec
pop
inc
andl
jmp
jp
pop
inc
sbb
pop
mov
mov
lods
pop
mov
or
lret
adc
sbb
xor
fs
enter
imul
inc
jle
outsl
ret
cli
mov
xor
repz
mov
repz
filds
jbe
and
jge
loop
ja
cmp
inc
sbb
sbb
xor
ja
fsts
lds
and
fimull
mov
icebp
pop
test
lods
sub
jp
into
push
adc
rcl
lcall
andb
std
jno
push
adc
stos
repz
lret
push
or
out
pop
xchg
jmp
movsl
jecxz
into
inc
jg
mov
mov
add
cmp
cmp
leave
cld
dec
sub
and
jno
and
mov
jmp
test
out
mov
ljmp
mov
push
sub
mov
xchg
mov
dec
ljmp
mov
add
es
mov
cmp
ss
mov
mov
jle
inc
add
add
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
negl
mov
xor
or
xor
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
jmp
or
inc
mov
insl
mov
inc
pop
addl
xor
ljmp
xlat
mov
inc
loop
lahf
lcall
mov
cmpb
ss
jne
and
repnz
dec
dec
fistpl
lods
ret
pop
push
dec
xor
sbb
jo
xchg
jg
and
insb
cmp
xchg
cmpsl
sub
ficomps
in
push
ja
aad
call
push
add
sub
sbb
fistl
xchg
scas
inc
das
ret
dec
add
movsb
pop
adc
dec
stc
push
pushf
xchg
cmp
cmp
dec
jns
mov
notl
repz
add
adc
outsb
xchg
sub
push
mov
out
daa
pop
loopne
xchg
mov
jbe
adc
stos
popf
lods
jb
jmp
sbb
dec
in
daa
push
or
sub
in
pop
xlat
js
add
mov
inc
rorb
xchg
push
and
nop
lods
imul
faddl
push
mov
or
xchg
gs
mov
pop
adc
and
pop
mov
loopne
xor
cmp
jmp
add
add
mov
mov
repz
lahf
mov
ds
pop
jno
or
pop
xchg
add
or
out
mov
mov
repz
lret
mov
sbb
mov
xor
cmpsb
js
popf
push
add
add
dec
rcll
dec
push
test
iret
bound
fnstsw
jp
orb
xchg
fisttpl
stc
mov
jo
jne
inc
sbb
test
mov
push
pop
icebp
cmc
fldl
lods
aaa
arpl
jnp
mov
arpl
repz
and
sub
xchg
mov
jl
pop
arpl
shrl
les
sbb
or
add
mov
inc
lret
mov
or
push
xchg
mov
test
push
pop
aad
push
add
sbb
aaa
into
shll
es
xchg
xchg
and
cwtl
cmp
pop
fdivl
cmpsb
xchg
loopne
in
sub
sbb
and
mov
sbb
testl
sbb
std
outsb
jne
sbb
int
or
sbb
xor
adc
incl
jae
adc
sub
xor
push
cld
andl
inc
pop
cmp
mov
and
or
lods
adc
divb
dec
push
push
scas
xchg
xlat
dec
adc
test
fcomps
sbb
xor
pop
xor
inc
and
aaa
bound
mov
or
das
js
jg
mov
in
jae
lea
sbb
ljmp
push
and
mov
inc
dec
sbb
or
aad
jle
cmp
inc
or
outsl
xchg
fbld
and
sbb
dec
adcl
add
and
out
mov
jge
xchg
out
movsl
add
pop
and
mov
dec
sti
movsb
mov
std
xchg
add
inc
out
std
clc
and
hlt
dec
xor
loope
scas
or
sub
sub
bound
sbb
dec
aad
not
cmp
lahf
dec
in
sub
mov
xchg
clc
jb
stos
adc
cwtl
ret
insb
loop
or
push
mov
jmp
jbe
ret
dec
sarb
adc
or
loop
jg
jp
mov
lea
jp
lock
jnp
icebp
out
push
iret
arpl
sub
subb
adc
outsw
mov
xchg
leave
xchg
pop
push
cmc
xchg
into
push
outsb
fwait
mov
cmc
shll
mov
jg
bound
push
setno
xor
jne
sub
and
push
pushl
loope
xor
adc
popa
or
jno
pop
xor
mov
and
test
lock
jg
faddp
idiv
sbb
add
mov
mov
cli
xor
cmp
push
jno
mov
xor
mov
xchg
testb
and
js
jle
loope
jge
dec
pusha
mov
push
jbe
cltd
dec
jnp
adc
enter
imul
push
dec
dec
jo
inc
mov
rcl
adcl
in
sub
mov
cmp
cmp
arpl
sbb
push
xor
jno
add
arpl
enter
and
and
frstor
fisttps
outsb
push
test
dec
pop
shlb
push
sbb
cld
push
cmc
mov
repnz
mov
sub
rcrl
and
repz
xchg
lods
js
fnstcw
sub
test
aaa
loope
jae
adc
adc
dec
enter
mov
in
add
adc
adc
aad
dec
xor
int3
in
mov
sbb
mov
and
inc
std
lcall
pop
mov
popa
xor
jmp
imulb
or
xor
inc
or
ret
push
aam
popa
fdivl
push
popa
xor
dec
push
add
cld
sub
push
sub
filds
js
mov
xchg
mov
lcall
xor
adc
inc
mov
cli
ljmp
call
lretw
cmp
push
cmp
fucomip
pop
frstor
xorb
fwait
pop
inc
and
jnp
inc
es
call
sbb
push
dec
or
push
ss
imul
push
inc
cmc
fwait
mov
addr16
inc
dec
shrb
mov
or
xorl
loopne
sub
lret
out
and
cmp
enter
les
stos
pop
loope
adc
mov
sub
jae
xor
scas
dec
subl
mov
rcrl
es
stc
loop
push
ss
mov
clc
push
jne
loope
fwait
add
xor
insb
into
das
imul
cmc
push
inc
or
inc
jl
sahf
jecxz
lcall
add
aam
xchg
mov
cmp
repz
xchg
inc
sbb
pop
sti
cmp
sbb
and
push
xor
dec
test
test
dec
xchg
push
pop
mov
aaa
clc
adc
aaa
push
jge
lret
add
and
aas
in
icebp
pop
mov
and
and
test
sahf
inc
pop
inc
sub
xchg
scas
add
pop
push
jecxz
xchg
fiaddl
add
xchg
loope
sbb
pop
fnstsw
fs
mov
sbb
and
nop
cmp
ret
iret
jbe
jmp
sbb
lds
xchg
pop
je
pop
mov
cmp
ja
insl
std
cmp
fwait
int3
adc
xchg
xchg
xchg
sub
adc
inc
mov
stos
add
mov
lds
iret
and
push
dec
xor
sbb
add
rdpmc
push
gs
test
pop
dec
sub
jns
dec
out
mov
xchg
mov
jle
and
push
jl
pop
test
add
sbb
pop
ret
fwait
jnp
adc
sarb
dec
push
adc
fldcw
mov
pop
sbb
dec
fimull
push
dec
xchg
adc
movsb
pop
fcoml
cmp
mov
pop
out
adc
push
ja
sahf
cmp
clc
sti
loope
dec
aas
jp
cld
fistpll
dec
xchg
into
push
pop
mov
mov
loopne
lahf
add
add
push
sub
adc
adc
sbb
xor
stc
imul
ror
xor
add
pop
aaa
and
push
or
in
inc
mov
sarb
jge
rclb
loop
subl
xor
jle
pop
xchg
fnstcw
xchg
popf
xchg
inc
push
mov
ret
rcll
adcb
inc
decl
xchg
inc
testl
call
js
sbb
sub
into
pop
aaa
pop
test
mov
push
mov
or
rorl
mov
stos
or
arpl
sub
ret
gs
mov
add
fnstenv
mov
mov
addr16
int3
cmp
sarb
mov
jbe
shl
lea
pop
out
popf
inc
pop
mov
mov
test
xchg
iret
pop
adc
xchg
or
mov
dec
inc
sub
add
fs
adc
je
push
fs
les
mov
xor
adc
lcall
fs
cmp
in
dec
and
data16
mov
imul
in
shll
cmp
and
leave
push
addr16
nop
sub
inc
enter
mov
mov
pop
mov
inc
fs
movsb
xchg
push
jo
dec
inc
pop
mov
sbb
es
fisubl
push
jo
adc
jb
sbb
das
scas
jo
inc
push
add
mov
jbe
cmp
rorl
pop
and
pop
mov
push
cmp
cltd
sub
xor
sbb
mov
mov
lret
cmc
popf
and
sub
xor
loopne
jg
das
ror
dec
insb
jge
cmp
or
and
sbb
gs
push
dec
dec
xor
cmc
adc
cmpl
sbb
push
pushf
add
stos
std
pop
inc
push
push
leave
mov
xor
xchg
adc
add
sbb
cmp
into
pop
cmp
pop
mov
pop
out
add
jmp
cwtl
lods
dec
inc
fists
adc
bound
iret
and
aaa
das
les
sub
cmp
xor
pop
loop
sub
in
das
pop
movsb
mov
mov
jo
not
sti
test
rolb
hlt
js
lock
cmp
push
cmpsl
jbe
imul
cmp
lahf
mov
shrb
lods
mov
mov
push
movsb
mov
addl
mov
xlat
sub
imul
sub
and
shll
add
adc
inc
ss
xor
stc
mov
push
add
xchg
sub
divl
outsl
repz
std
vmwrite
mov
movb
lock
movsl
push
inc
sbb
daa
cmp
hlt
push
loopne
dec
mov
jg
int3
shll
aaa
sub
sub
sub
cmpsb
cmpsb
imul
mov
adc
xchg
inc
shrl
inc
xchg
imul
cld
test
adc
pop
adc
in
jb
test
scas
daa
jne
push
sbb
dec
aam
mov
mov
popa
xorb
jg
inc
daa
jp
xor
xchg
or
outsb
bound
cmp
pop
rol
xchg
mov
inc
jg
sbb
adc
pop
sbb
push
jae
fdivrs
push
out
dec
mov
lret
lret
adc
xchg
nop
fldt
and
bound
rcrb
xchg
fnstenv
xor
sahf
sub
and
test
push
jg
xor
sarb
movsb
mov
stc
int3
out
sub
dec
sbb
scas
cmp
inc
sahf
pop
jge
scas
cmpb
pop
andb
jae
mov
sub
sbb
mov
adc
test
inc
and
loopne
cmp
test
jl
mov
in
mov
fdivr
cwtl
push
xor
shll
and
lcall
shrb
lock
mov
pop
clc
je
cmp
mov
push
xchg
test
js
mov
or
jmp
push
fmull
int3
adc
pop
sbb
iret
pop
sbb
movsb
shr
out
iret
lahf
dec
or
xchg
mov
xchg
pushf
mov
push
addr16
push
mov
aad
sub
lea
xor
xchg
jge
or
ret
loop
out
lret
push
cmc
cmp
mov
sarl
stos
hlt
sub
push
xchg
mov
cld
mov
jns
jb,pn
inc
repz
and
sub
sub
mov
mov
daa
jmp
lahf
add
lods
int3
cmpsb
out
jg
mov
jns
push
adc
pop
mov
sub
add
pop
insb
cmpsl
ret
daa
mov
insl
add
jnp
cmp
in
fisttpll
insl
push
mov
js
mov
enter
dec
add
sti
sbb
into
fs
and
orl
push
test
loopne
jae
test
cmpsb
sbb
ja
xor
cmp
mov
in
jmp
jl
dec
daa
cmpl
aaa
loop
sahf
cmc
push
mov
pop
pop
fs
stos
jmp
sbb
dec
mov
imulb
xor
mov
xchg
jecxz
daa
out
sub
inc
or
sarb
sbb
addr16
movsb
dec
addr16
cli
lods
xchg
mov
iret
imulb
test
les
dec
pusha
mov
or
inc
das
xchg
bound
data16
add
insb
lahf
mov
xlat
mov
cmc
pop
xchg
adc
cld
dec
lds
ret
ljmp
mov
push
add
sub
xchg
sti
lcall
mov
pop
add
xchg
jp
mov
clc
sbb
pop
push
and
cs
add
sbb
push
in
dec
push
or
test
test
and
xchg
mov
mov
inc
cmp
jne
imul
cmpsl
mov
mov
sub
outsl
xor
sahf
jg
test
adc
jb
sahf
jne
imul
push
pop
xor
imulb
stc
add
negb
dec
push
pop
jbe
add
sbb
sub
xchg
cmp
mov
mov
sub
push
hlt
lret
jmp
sbb
dec
fiadds
pushf
fwait
in
push
stc
shlb
bound
or
sti
xchg
jno
mov
push
mov
repz
addr16
push
sbb
movb
mov
inc
fst
pop
jmp
orb
out
in
inc
and
dec
jae
ret
sbb
cltd
les
xchg
pushf
cmpsb
fsubrl
cmp
mov
inc
ljmp
push
loope
clc
fwait
or
lret
jle
mov
push
out
fs
adc
sbb
iret
cmp
inc
cli
mov
dec
mov
push
inc
pop
lea
jmp
xlat
stc
push
clc
fcoml
sti
inc
adc
dec
aaa
mov
adc
jb
roll
push
jnp
std
test
insl
fiaddl
out
add
xor
loopne
scas
es
push
and
sub
xadd
fadds
ds
cmp
out
jns
mov
leave
inc
and
inc
pop
jecxz
pop
and
addr16
loope
sub
pop
dec
rcrl
out
push
pop
dec
or
fs
push
sub
add
js
dec
lahf
and
gs
mov
shll
lahf
jge
leave
mov
out
or
jmp
sarl
js
jae
dec
rcr
add
jecxz
enter
ficoms
inc
imul
mov
fs
in
push
add
pop
dec
mov
test
push
pop
mov
stos
jecxz
sti
arpl
movsb
out
xchg
mov
iret
pop
imul
shlb
mov
adc
stc
js
and
imul
and
aaa
popa
mov
xlat
dec
cs
fstps
mov
je
fstl
and
loope
ret
xor
push
inc
sti
repz
pop
xor
pop
or
ja
add
pop
rclb
mov
outsb
cld
fildll
jle
je
dec
fisubs
cli
lods
mov
repnz
gs
and
ret
push
loope
in
mov
jmp
push
sbb
sbb
push
xor
pop
add
xchg
jne
mov
aad
pushf
mov
mov
scas
stos
fidivrl
sbb
push
dec
aas
jl
xchg
cli
icebp
gs
jecxz
sti
repz
sub
shrl
adc
mov
cmpsb
cmpsb
push
jp
pop
sub
mov
daa
mov
and
push
push
inc
scas
jmp
testb
and
cmpsb
sub
jecxz
mov
cli
fdivs
loope
sub
cmp
jle
aas
enter
aas
inc
mov
outsb
adc
jb
cltd
xchg
cs
push
sub
es
xchg
dec
inc
xchg
pop
mov
cmp
out
dec
fwait
pop
rcrb
rcr
mov
cld
xchg
pop
sbb
adc
andps
addr16
daa
enter
mov
sbb
lea
cmp
xchg
inc
mov
or
xor
test
leave
sub
add
sbb
push
sahf
inc
mov
mov
cwtl
orl
xor
sub
push
popa
add
outsb
add
movsb
clc
mov
and
loope
rcrb
mov
jmp
sbb
mov
shrl
fldt
xor
push
mov
dec
jne
fistl
inc
imul
cld
rcpps
test
int3
add
mov
jne
jp
mov
loop
clc
sbb
cmp
pop
pushl
xor
in
add
dec
or
or
mov
int
lods
xor
outsb
dec
lcall
into
pushf
inc
xchg
imul
stos
stos
mov
mov
shr
jp
out
je
ljmp
fisubrs
ja
cwtl
and
ss
rorl
mov
ljmp
cmp
mov
adc
mov
xchg
std
mov
push
gs
add
sub
mov
cmp
sub
sbb
xchg
adcb
lock
int3
mov
into
inc
lock
xchg
rolb
push
mov
inc
aam
int3
xchg
lret
adc
or
testl
iret
aaa
mov
loopne
out
jb
into
or
mov
mov
and
bound
cmpb
add
shrb
push
mov
mov
lock
inc
lcall
xor
xor
lock
mov
push
push
adc
fldcw
test
xchg
xchg
mov
fnstenv
iret
xor
xchg
mov
pop
outsl
xchg
jae
test
mov
rcrl
cmpsb
dec
mov
mov
fsubs
shlb
sub
ljmp
clc
jge
out
mov
insb
jle
inc
cmc
enter
in
mov
pop
cltd
lods
add
sbb
and
scas
dec
fsubrl
sbb
inc
mov
mov
jns
adc
stos
sbb
int3
inc
std
movsb
mov
mov
data16
in
inc
push
cmp
add
sbb
dec
stc
in
loope
cmpsl
pop
ss
sbb
push
jns
cmp
rol
scas
add
mov
daa
je
sti
mov
xchg
mov
jge
cltd
jle
sti
cli
jns
data16
dec
or
cwtl
adc
adc
movsb
dec
and
fdivrl
lahf
dec
push
xor
mov
rcl
push
jno
xor
jns
mov
or
lret
jno
push
xor
mov
pusha
std
jbe
hlt
les
or
push
pop
or
leave
jg
imul
inc
or
push
cmpl
mov
xor
xor
call
push
loopne
adc
insl
aad
push
jb
sbb
imul
bound
push
dec
popa
sbb
and
pop
int
jl
sbb
xor
add
push
mov
aam
jb
lcall
sahf
pushf
add
mov
shll
cld
and
mov
cld
ss
dec
fmuls
scas
or
mov
test
or
adc
leave
test
cmp
inc
pusha
add
gs
and
mov
jl
ljmp
loop
insl
cltd
pop
sub
into
or
add
and
cmc
lret
pop
mov
pop
sahf
dec
xorl
lret
pop
sub
fnstsw
mov
dec
mov
lret
mov
push
lea
test
icebp
fstps
rcr
jl
out
push
dec
lret
push
mov
pop
arpl
scas
outsl
rorb
xchg
idiv
fmul
popf
adc
add
das
subb
cmpb
in
mov
lcall
push
push
jg
sbb
fsubl
iret
cmp
repz
inc
movsb
mov
jb
rcrl
cmp
test
mov
je
mov
inc
mov
pusha
scas
lods
jge
mov
xor
das
push
clc
sub
cmp
les
fnstsw
push
repz
idivl
dec
jl
std
cli
lret
sbb
lcall
jp
out
jmp
shl
in
aaa
mov
mov
cs
jne
mov
add
icebp
pop
lahf
out
adc
mov
fsubrp
cmp
popf
and
in
mov
adc
mov
mov
clc
das
out
shl
cmp
mov
popf
fcmovne
inc
and
add
sbb
es
or
sub
pop
cmpsw
jbe
insl
cmpl
xchg
lds
js
gs
cmp
addl
cwtl
mov
adc
sbb
les
xor
mov
lahf
mov
aad
mov
jge
aas
ficoml
jp
jmp
and
cli
outsl
mov
or
js
inc
inc
int3
loopne
lcall
and
push
jle
mov
push
and
movl
and
or
push
jp
sbb
ljmp
push
mov
sti
add
xchg
mov
stc
xor
rcrb
adc
cmp
or
lret
fdivrs
push
mov
push
cltd
mov
popf
add
scas
xlat
arpl
lock
xchg
sub
dec
push
mov
sbb
call
mov
adc
sbbl
mov
sub
sbb
loopne
xor
outsb
idivb
or
xor
xchg
scas
or
pop
add
xor
mov
lea
enter
bound
push
jnp
and
test
aam
out
sbb
pop
shlb
ficompl
push
out
es
in
outsb
mov
pop
dec
and
jecxz
mov
sti
dec
jo
pop
cld
mov
dec
nop
iret
cmp
lcall
scas
push
mov
xchg
lahf
mov
loop
and
sti
scas
lahf
aad
test
jbe
loopne
dec
dec
sub
mov
rclb
mov
add
lret
es
std
adc
into
mov
jecxz
jle
repz
negb
and
add
inc
inc
cmpsl
xchg
nop
enter
les
mov
movsl
or
cmp
xchg
xchg
inc
repnz
cltd
sbb
push
xchg
cmpsb
xchg
jns
inc
ljmp
bound
in
sub
icebp
ljmp
lahf
arpl
push
sbb
jmp
push
jo
loope
inc
xorl
test
test
mov
pop
sahf
nop
xlat
xor
mov
aaa
push
xchg
sbb
int3
xor
mov
sbb
cmp
xor
sbb
dec
mov
add
daa
lret
bound
lahf
mov
cltd
sti
sub
jecxz
movlhps
fwait
pop
jmp
jge
xlat
mov
xor
pop
mov
and
les
or
enter
outsb
adc
popf
loope
inc
inc
pop
cmpsb
aas
test
and
scas
das
and
cmp
xchg
jne
fwait
std
dec
dec
jo
lret
xchg
add
push
addr16
inc
roll
add
inc
dec
popf
mov
test
dec
sti
sbbb
hlt
xor
cwtl
sti
in
or
test
mov
push
xor
dec
out
inc
ror
lcall
cmp
ds
sbb
out
push
ret
ja
and
adc
shll
adc
sub
adc
mov
mov
je
push
lods
pushf
gs
aam
xor
push
add
adc
xlat
push
cmpsb
lret
mov
js
push
xchg
inc
movsl
pop
shl
mov
add
out
jge
in
xor
jns
cmp
and
cwtl
mov
sub
dec
push
pop
arpl
xchg
cmc
insb
cmp
pop
adc
test
sub
in
das
jae
cmp
xor
pop
rolb
push
sbb
pop
mov
pop
pop
cmp
scas
sbb
mov
gs
movsb
out
lods
cmpsb
mov
iret
pop
inc
dec
rclb
rcrb
hlt
int
out
je
cmpsl
mov
mov
jp
pop
and
inc
inc
loopne
sbb
ret
mov
jg
mov
test
icebp
dec
inc
jno
imul
js
add
mov
stc
ja
jnp
cli
notl
pop
inc
mov
pop
not
xchg
mov
adc
mov
out
push
repz
ljmp
jmp
sub
out
insb
cmp
pop
mov
inc
insl
inc
aad
in
push
clc
push
cs
xlat
xchg
call
test
mov
add
mov
and
scas
mov
mov
outsl
push
push
icebp
push
imul
cwtl
fs
inc
in
cli
dec
mov
cli
pop
jmp
dec
mov
or
fsubrl
jbe
inc
addr16
pop
xchg
xor
or
push
cmp
loopne
pop
mov
mov
jns
decl
ds
mov
jns
inc
xlat
adc
mov
dec
movsb
shrb
cmp
popf
mov
pop
leave
cwtl
lods
sub
mov
jne
out
push
mov
adc
and
scas
shll
jle
xor
push
pop
mov
les
in
andl
bound
jle
cmp
inc
shrb
dec
fwait
loop
xchg
aas
pop
jecxz
jns
adc
ret
mov
scas
fisubrs
or
testb
cmp
push
mov
xor
stc
mov
pop
push
mov
mov
dec
mov
cltd
or
neg
mov
push
test
jns
pusha
roll
aas
pop
and
jp
jl
push
sub
jno
and
push
xor
pop
sub
das
push
mov
in
mov
sbb
cmpsb
xlat
in
xchg
jecxz
sub
shrb
sti
mov
xchg
push
sub
idiv
mov
xor
aaa
into
ja
cs
xor
std
out
pop
stos
xchg
cmp
mov
ljmp
fucomi
ja
and
stc
ror
insl
leave
lcall
mov
add
pop
xor
and
out
pop
iret
movsl
sbbb
cwtl
or
sbb
pop
repnz
pop
ret
or
xor
pop
lods
jo
xchg
jne
inc
jb
insb
pusha
imul
xor
cwtl
cwtl
xchg
js
ss
pusha
int3
aad
cmc
faddl
into
inc
bnd
mov
cmp
sub
adc
lret
insl
daa
lock
push
pop
and
stc
data16
les
push
imul
dec
clc
js
stc
and
insb
xchg
js
cmp
in
cmp
jp
adc
push
pop
jb
or
and
ljmp
jp
push
mull
jg
pushf
or
sbb
iret
add
inc
pop
in
lcall
xchg
and
add
jmp
sub
dec
mov
shr
xchg
sub
add
xlat
mov
pop
test
mov
xchg
stc
fst
sbb
stc
in
push
fstps
gs
jo
arpl
cmc
adcl
jle
mov
cmpsl
outsb
mov
sub
aas
inc
test
mov
int3
xor
cwtl
fistps
mov
xor
push
add
or
mov
sub
push
subl
add
es
xchg
sbb
clc
insl
dec
popf
shll
popa
loope
cs
adc
pop
push
inc
xor
ret
pcmpgtw
xor
inc
sbb
mov
das
jge
xchg
xchg
cmp
jb
mov
inc
jp
dec
sub
fcoms
out
test
xor
and
mov
pushf
rcrb
loop,pt
repz
and
shr
xchg
mov
lret
ja
in
sub
jbe
cwtl
fdivrl
xor
fidivrs
mov
inc
dec
xchg
iret
insl
fwait
int
inc
dec
and
ret
loop
cli
pop
add
mov
lea
pushf
loope
jno
fwait
jnp
mov
lock
jae
mov
mov
movsb
xchg
cltd
mov
stos
out
xchg
cwtl
fs
add
xchg
mov
lods
sarl
jns
sbb
sbb
xchg
cli
shll
mov
popa
mov
out
out
sub
cmpsl
aad
pop
xchg
xchg
sub
push
mov
fs
adc
and
dec
ror
xchg
in
mov
scas
leave
adc
es
in
into
dec
pop
rclb
xor
xchg
sub
testl
mov
sbb
inc
sbb
mov
and
fucom
pop
clc
jl
inc
inc
mov
in
inc
push
lock
les
sub
or
scas
adc
push
ljmp
repz
setl
aas
and
or
mov
fildll
sub
sbb
mov
shlb
cmpsb
pop
xor
sbb
js
push
ja
out
adc
sub
shl
stos
cwtl
jecxz
xor
sbb
jecxz
notb
and
bound
hlt
lea
add
sub
leave
out
xor
shrl
and
add
push
pop
inc
jp
aas
push
xchg
pop
jmp
cli
cmpsb
xchg
mov
imul
xor
les
lods
sarl
out
orb
and
repz
mov
lock
jae
mov
mov
outsb
sub
xchg
sbb
cmp
popl
movsl
pop
mov
fs
adc
jo
xor
sub
test
pop
iret
pushf
sub
nop
mov
fs
imul
lds
shlb
adc
adc
hlt
imul
rorl
mov
pop
sbb
sbb
repz
pop
popa
xchg
mov
faddl
sbb
ror
dec
mov
dec
imul
mov
fs
js
push
jp
inc
outsl
xchg
test
mov
sbb
lods
test
ss
mov
rorb
push
push
jns
int
and
jl
mov
cltd
inc
jo
mov
imul
mov
inc
movlps
icebp
mov
pushf
push
and
mov
subb
iret
adc
cmp
xlat
mov
mov
xor
mov
jmp
pop
out
fsts
lock
das
shr
push
aas
lods
pop
stos
fisttps
out
repz
push
les
lds
les
pop
push
mull
xorb
cwtl
fcom
int3
push
xchg
xor
inc
pop
push
loope
jnp
scas
cs
fst
mov
in
xor
scas
mov
aad
cmp
out
das
pop
fldt
push
ljmp
rol
sub
dec
and
sub
pop
xor
mov
cmp
adc
fldt
mov
jg
dec
lock
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jmp
mov
loope
addb
es
push
aad
or
addl
movsl
frstor
jo
inc
push
push
cli
pop
pop
add
fstpt
jl
dec
xchg
add
rorl
jp
js
xor
in
or
fisttpll
xchg
fdiv
repnz
dec
or
pop
test
leave
cmp
lock
lods
push
loop
jae
push
rclb
fs
push
scas
or
inc
jge
clc
adc
or
cltd
aad
sub
or
jl
mov
jns
int
loopne
loope
movsb
inc
sub
fstl
leave
cmpsb
mov
loope
xchg
adc
in
mov
fiadds
pop
jb
les
sbb
inc
mov
xor
fisttps
pop
repnz
sub
cmp
xchg
mov
cltd
push
ljmp
mov
inc
mov
and
jl
bound
loope
mov
sti
sbb
enter
jb
je
sub
mov
mov
xor
xchg
or
testl
lcall
popa
icebp
and
andl
cmp
adc
jmp
fstpl
loop
jae
rorb
jo
xlat
test
fildl
xor
cli
mov
movb
xor
xchg
lret
popf
cli
dec
dec
and
aaa
xor
jl
fidivrl
test
adc
mov
xor
popf
cmc
add
cmp
jae
or
sub
mov
sbb
jns
mov
jno
dec
popf
sbb
or
mov
mov
imul
imul
xchg
mov
pop
je
cmp
jbe
cld
push
adc
pop
or
adc
push
movsb
fmul
addr16
das
shr
inc
cmp
adc
es
lock
xchg
stc
scas
std
repz
and
leave
cmp
xor
push
popa
jecxz
push
imul
pop
hlt
ret
inc
subb
mov
shrl
lcall
int
add
hlt
cli
xchg
sbb
dec
mov
subl
jmp
out
mov
cmpb
fs
push
lret
add
pop
addr16
and
imul
pop
mov
and
addr16
loope
add
fmuls
insb
cmp
repnz
dec
out
mov
cmp
pushw
lods
or
xlat
inc
pop
inc
add
xchg
ss
sbb
add
popa
push
fsub
rolb
int3
sub
arpl
lcall
sub
mov
arpl
inc
iret
and
mov
sahf
xchg
inc
call
addl
scas
mov
bound
mov
out
xor
out
lea
inc
xchg
rol
cld
cmp
push
outsl
sub
add
or
call
icebp
loope
inc
or
xor
add
cmp
mov
pusha
fistpl
jg
or
sbb
sub
ud1
insb
jno
shlb
addr16
pop
mov
test
aad
jmp
mov
add
adc
addr16
mov
es
movsb
outsl
sar
xchg
xchg
push
dec
cmp
leave
rcl
xor
or
icebp
push
out
insl
fstl
cld
aad
aad
inc
dec
cld
sub
sbb
shrb
cmp
in
mov
adc
adc
jp
and
int
in
aad
jp
dec
fildl
xchg
ds
stos
and
add
mov
lods
mov
dec
mov
push
jb
mov
movsb
in
dec
in
imul
inc
jecxz
mov
ret
repz
fisubrl
ss
lahf
inc
int3
stc
adc
jbe
add
ds
lea
lods
or
lret
fs
aaa
jl
stc
jp
setge
outsb
sub
sbb
jp
pop
insl
mov
dec
loope
fxch
and
dec
or
popf
fwait
into
loop
push
cmp
out
cmpsl
out
mov
or
add
push
mov
inc
ret
pop
xor
jo
sub
out
out
cmpsl
sarb
or
arpl
or
jp
repz
ja
mov
mov
stos
mov
faddl
adc
dec
mov
sub
push
and
and
fmuls
ljmp
ror
push
mov
popf
movsb
sbb
push
aaa
lahf
inc
push
push
mov
lret
mull
push
jno
sti
in
jnp
std
addb
ds
inc
mov
add
push
xchg
mov
repnz
xchg
adc
mov
mov
stc
ds
jnp
rcr
cmpsl
jp
fisubl
andl
cltd
outsb
sub
fwait
scas
rorb
jg,pt
dec
stc
rcll
test
adc
jno
enter
xor
in
bswap
cmpsb
and
popf
aad
aas
inc
xchg
imul
divl
mov
xorl
insb
jmp
mov
mov
xor
adc
mov
adc
lcall
jo
fistl
fisttpl
adc
inc
lds
and
mul
clc
pop
mov
cmp
int
lock
les
pop
jbe
cld
adcl
adc
imul
fmull
jl
jno
sti
pushf
lahf
jge
jo
aad
test
in
mov
rorb
in
adc
int3
or
iret
int
sbb
aam
stos
xlat
das
push
in
adc
fstp
cmp
in
mov
xchg
int3
das
adc
test
xor
push
ljmp
bound
test
pop
sbb
aaa
out
and
ljmp
repnz
test
mov
mov
cmp
cmp
adc
dec
mov
in
cmp
add
push
mov
or
sub
mov
inc
jg
mov
xor
loopne
push
in
movsb
mov
cli
jg
gs
mov
lods
fisubrl
test
inc
cmp
xor
flds
xor
rorb
inc
icebp
sbb
dec
cltd
mov
popa
jo
adc
xor
push
xchg
orl
mov
sub
jae
push
inc
xor
xor
dec
xor
sub
inc
pop
inc
mov
stc
repnz
sub
aas
xor
ss
gs
xchg
xchg
paddd
and
scas
inc
dec
ja
inc
popa
sbb
push
clc
or
xor
stos
push
outsl
add
mov
mov
mov
test
fcoms
data16
or
cs
fwait
xchg
adc
fcomps
cs
aad
fs
adc
cmp
mov
sbb
cmp
push
xchg
push
sbb
cmpsl
push
fs
loopne
dec
push
mov
loope
stos
dec
or
xchg
fdivl
lret
cmpsl
hlt
daa
test
inc
and
sub
cld
pop
add
add
xchg
cmpsb
xchg
pop
outsl
adc
sbb
je
sarb
mov
xchg
mov
lock
lea
pop
jmp
dec
dec
sar
divl
sub
ljmp
cmp
ret
mov
jne
inc
xchg
inc
push
icebp
pop
stos
dec
sub
fstl
cmp
scas
pop
inc
test
addr16
int
inc
fucomi
and
negb
or
lock
add
push
or
pushf
pop
xor
push
jl
lods
daa
sbb
xchg
add
sub
inc
cmpsb
xchg
ret
lret
movsl
mov
mov
aad
sarl
inc
dec
insb
and
in
inc
mov
orb
cmc
rcrb
and
outsl
leave
push
inc
and
lcall
push
das
lock
inc
call
outsb
cli
test
jo
test
in
jecxz
jmp
and
xor
mov
in
stos
fsubrs
sub
les
shlb
shlb
cwtl
or
inc
test
icebp
rcr
loop
in
mov
mov
stc
in
ss
push
mov
negl
aaa
xor
cli
bound
inc
or
sti
jns
sub
push
mov
insl
jo
and
jp
das
lret
in
dec
pushl
popf
rol
int
sarl
mull
arpl
jmp
sbb
sbbb
std
test
xor
or
push
cmpsb
push
lret
iret
fisttpll
call
or
push
movsl
and
mov
add
mov
cli
mov
cmpsl
and
cmp
in
xchg
inc
mov
jae
jb
stos
pop
subb
adc
pushf
mov
arpl
and
ficoms
xchg
mov
orb
mov
dec
inc
aam
xchg
std
insb
fcoml
hlt
js
cmp
daa
leave
inc
mov
cld
mov
dec
inc
and
inc
leave
pop
sub
ljmp
and
dec
movsl
sahf
dec
je
mov
leave
push
ljmp
sarl
and
int3
xchg
ret
orb
jnp
gs
sub
in
sub
or
pop
jns
mov
daa
test
mov
ds
or
inc
enter
xchg
inc
sbb
sub
movsb
shll
mov
lret
inc
rcll
pop
sub
inc
jbe
ret
sbb
fistpll
sbb
cmpb
inc
loopne
cmpsl
xor
mov
mov
and
cmp
sbb
dec
push
faddl
add
xchg
pop
repz
cmc
movsl
scas
or
pop
fistps
into
cmp
aad
loopne
imul
pusha
std
jbe
repnz
insb
mulb
sbb
aas
push
push
dec
and
cmp
and
stos
sbb
fnstenv
call
pusha
inc
out
adc
xchg
pop
ror
mov
shlb
and
repz
pop
cltd
lahf
in
dec
add
mov
loope
jno
xor
cltd
xchg
aaa
stc
mov
cmp
hlt
add
add
or
lds
or
daa
push
lahf
repz
xchg
xor
dec
and
mov
cmp
jg
cmpsb
cmp
cwtl
mov
xchg
in
push
mov
hlt
dec
icebp
jne
add
rolb
je
stos
nop
loope
out
xlat
lods
cmp
in
push
lods
jbe
out
mov
adc
ficomps
jns
out
pop
inc
out
add
cmp
and
mov
sahf
mov
clc
scas
jae
pop
ret
push
stos
arpl
lods
xor
insb
bound
mov
mov
sub
push
and
add
jg
push
rcrl
test
fcompl
aaa
cmp
pop
and
push
inc
out
loopne
sbb
and
jmp
push
enter
rcl
inc
jl
test
inc
ds
adc
sbb
pop
and
xlat
inc
mov
sub
and
pop
inc
sub
orb
pop
mov
lds
push
popl
or
pop
fimuls
mov
les
cmpsb
push
jbe
loopne
rcrb
clc
mov
lods
mov
ja
sbb
jp
sbb
mov
stos
pop
idivl
repz
dec
add
sbb
mov
pop
jmp
ss
loop
imul
stos
adc
add
dec
stos
inc
cmp
xor
insl
pop
lahf
cld
jns
jns
cld
dec
loope
dec
cmp
fisubl
push
xchg
mov
fidivrs
cmp
cmp
jne
enter
push
filds
clc
pushl
push
push
jne
das
xchg
push
jg
and
add
iret
ja
int3
mov
lods
cmp
push
subl
xor
push
cmp
outsl
into
rorb
jo
mov
sbb
call
outsl
push
fists
adc
adc
xchg
imul
fidivrs
pop
inc
ds
rclb
sbb
cmp
add
jg
mov
jp
pop
lock
pop
int
gs
sbb
stos
xor
inc
cmp
mov
or
mov
mov
jne
rcrl
inc
mov
sub
imul
test
dec
popa
sbb
add
repnz
jno
loopne
jo
bound
jg
jae
cmp
xor
sub
push
push
push
pop
shll
hlt
fdivp
cmp
test
xor
rcrl
scas
sub
sbb
cmp
adc
pop
push
xor
pop
xchg
sub
sub
lds
inc
inc
mov
roll
xor
mov
push
lahf
cmc
mov
addr16
pusha
inc
hlt
lods
mov
ret
sub
xchg
mov
jbe
adc
aam
int3
adc
mov
mulb
mov
loope
inc
push
inc
inc
sbb
lcall
pop
mov
jne
fs
mov
lods
dec
xchg
imul
inc
lods
in
or
test
inc
cltd
outsl
dec
out
push
sub
les
mov
push
mov
or
pop
shll
inc
aam
dec
js
aaa
addr16
ret
adc
pop
add
mov
jae
rol
xchg
adc
add
ja
pushf
push
inc
pushf
sahf
jae
frstor
pop
xor
lcall
jge
inc
sti
outsb
jo
sbb
adc
das
out
insl
push
fdivl
aad
emms
dec
or
outsb
repz
enter
jp
ljmp
cmp
fwait
cmp
out
sub
inc
mov
mov
push
cltd
div
es
aam
mov
leave
push
iret
int3
adc
je
sub
inc
add
stos
pop
pop
mov
and
fwait
lcall
mov
push
dec
setp
pusha
dec
push
fwait
mov
mov
xor
pop
push
cmp
add
bnd
mov
jp
cmpb
pop
push
fstpl
xchg
adc
push
dec
mov
inc
loop
sub
add
outsl
jmp
dec
pop
or
mov
insb
fdivs
add
cmp
aaa
enter
ja
jge
call
mov
sbb
mov
loopne
mov
pop
lahf
inc
js
sub
push
daa
xchg
push
or
and
icebp
outsl
lock
mov
lea
in
mov
mov
mov
fbstp
scas
ret
xchg
sub
clc
mov
mov
or
fcmove
pop
cmp
shrb
sbb
and
fisttpl
movl
or
cld
push
jo
cmpsb
sbb
xor
jns
cmp
mov
pop
stos
or
pusha
mov
stos
push
or
pop
jo
fisttpl
xchg
aaa
sbb
cmp
jg
adcl
icebp
push
sub
sbb
ja
fbstp
xlat
arpl
fstpl
mov
xchg
cmp
rolb
inc
mov
cmp
mov
push
imul
xchg
fstpl
stos
subb
lods
mov
cli
cltd
xor
jg
sahf
shll
push
xlat
or
xor
mov
jne
jmp
pop
lea
inc
pop
shl
inc
add
mov
rcll
call
fsubrs
stos
scas
xcrypt-ctr
cmpsl
sbb
mov
dec
sbb
ret
sarb
adc
add
lahf
dec
ret
lock
pop
mov
lcall
fsub
scas
mov
cmp
xchg
dec
and
xchg
aad
enter
or
insl
aas
les
scas
ret
mov
push
scas
add
mov
xchg
shrb
mov
fimull
pop
scas
loop
out
inc
mov
fbstp
dec
leave
jbe
dec
jo
add
push
cs
add
pop
add
fwait
pusha
das
aam
jbe
jl
push
jae
mov
fdiv
sti
fstpl
loope
pushf
pushf
mov
subb
das
inc
pop
js
imul
push
mov
test
push
jo
nop
clc
pop
jl
and
aaa
cltd
push
sub
arpl
inc
jns
bound
cmp
xor
movsl
mov
mov
mov
inc
and
dec
test
imul
in
adc
arpl
inc
add
nop
sub
and
loope
sub
pop
sahf
xchg
rclb
pop
push
and
pop
cmc
scas
mov
xlat
mov
add
jl
lods
lods
fs
scas
je
inc
orl
cmc
mov
mov
lods
pushl
cli
call
push
sti
or
movsl
mov
cmp
lret
movaps
imull
jb
fisubrs
lea
pop
mov
daa
sbb
add
mov
xchg
fsubl
push
jb
shr
dec
in
mov
je
xor
scas
push
dec
jmp
fdivl
scas
add
cmp
in
adcb
mov
popa
lods
loopne,pt
pop
push
and
push
shrb
sbb
inc
or
insb
aas
loopne
loope
je
jmp
cli
cmc
dec
les
mov
dec
pop
dec
sti
fisttpl
push
dec
insb
ficoms
lahf
or
outsb
jnp
add
sbb
loope
int
push
cmp
sti
adc
or
dec
fsts
xchg
push
ret
jg
loopne
orb
inc
push
push
mov
ljmp
fldcw
mov
std
lahf
lods
test
add
sbb
lods
and
mov
pop
incl
leave
cli
or
outsl
loop
xor
shlb
std
xchg
cmp
rorl
xchg
inc
cmc
icebp
push
dec
subl
and
popf
lods
cmp
sub
xchg
and
sub
xor
xchg
negl
xchg
push
or
adc
dec
sub
mov
ljmp
or
jnp
and
movsb
adc
out
sub
mov
and
add
push
and
inc
in
add
push
add
aad
sub
xchg
call
out
and
cmp
mov
xchg
cmp
movsl
leave
cmp
sahf
xchg
testb
aaa
mov
jg
push
xchg
or
std
adc
and
pushf
jne,pn
push
mov
scas
sub
push
pop
imul
xchg
jnp
lret
aam
mov
lret
xor
flds
and
push
lcall
popa
clc
xchg
repnz
imull
mov
push
sarl
pop
jbe
jno
stc
mov
and
add
xor
fdivrs
fisttpl
mov
lods
adc
iret
icebp
data16
enter
cmp
popf
adc
xchg
pop
or
inc
jno
sbb
pop
psubsb
lret
outsl
mov
sbb
adc
mov
int3
and
mov
xchg
mov
aad
pop
or
out
in
jae
jmp
je
std
mov
pushf
and
sub
inc
inc
jmp
js
popa
fwait
sbb
arpl
fs
insb
cmp
sbb
movsl
addr16
je
push
faddl
fdivrs
adc
enter
xchg
je
adc
lcall
sbb
sti
out
cmp
int3
lret
cltd
pop
xor
shl
jne
hlt
pop
int3
daa
push
lods
addl
test
and
adc
stc
cmp
insl
and
es
xor
sbb
jno
insl
xchg
lds
sbbb
out
mov
xchg
xlat
jno
and
clc
jae
pop
addr16
adc
sti
cltd
pop
mov
xor
fsubp
in
dec
mov
xor
jae
cmp
test
xchg
xlat
or
jg
in
rorb
cmp
push
mov
or
icebp
add
fs
pop
and
cli
pop
sbb
push
or
cli
xchg
fwait
push
push
sbbl
cmpsb
mov
xor
pop
cld
cmp
testl
cmpsb
sbb
testb
or
or
loope
test
arpl
adc
adc
aas
in
repz
stos
mov
mov
ss
test
pmaxsw
js
push
mov
mov
mov
cmp
gs
sub
xchg
push
vfmadd213ss
lods
lock
or
daa
mov
and
sbbb
jb
and
clc
data16
leave
sbb
arpl
dec
aas
pop
sub
add
jbe
sub
cld
and
out
lret
test
xchg
popf
incb
loopne
test
xor
inc
adc
gs
movsl
add
sbb
into
cmpsb
adc
add
out
mov
mov
fists
sbb
push
rcl
jecxz
lea
pop
mov
jae
adc
pavgb
inc
adc
arpl
inc
adc
hlt
push
jb
add
fcoms
add
mov
pop
inc
stos
daa
or
mov
aad
cmp
call
shll
push
add
mov
leave
xchg
mov
lock
mov
sub
mov
and
mov
inc
dec
mov
dec
xor
sbb
dec
rcll
inc
pop
dec
fdivl
or
rcrb
cmp
xor
lods
pop
sub
pop
jge
jmp
in
mov
arpl
adc
xor
cmp
inc
push
repz
loopne
loope
sti
mov
mov
cld
fwait
int3
mov
sbb
loopne
flds
loope
jp
jnp
pop
les
jne
jnp
push
ds
bound
gs
jmp
rcll
cwtl
stos
outsb
lret
aam
jl
and
push
test
popa
cld
mov
or
xchg
inc
out
lock
cmpsb
cmc
fxch
sahf
neg
pop
pop
mov
and
jle
in
sbb
pop
daa
cmp
loopne
add
ljmp
push
aaa
cmp
inc
or
rorl
notb
faddl
aam
mov
xchg
scas
xchg
jg
push
insl
push
pop
in
sub
call
mov
sarb
jns
repnz
jmp
push
scas
adc
sbb
pop
in
in
sahf
int
lea
xchg
pop
mov
push
sub
push
fbstp
mov
addr16
inc
cmpsl
inc
dec
fstl
cmp
xchg
mov
push
arpl
sbb
mov
mov
pop
mov
out
add
sub
out
fdivrs
dec
cmpsl
out
push
mov
jns
mov
insb
movhlps
xor
pop
loope
movsl
xor
movsl
fadds
int3
inc
je
and
and
adc
ror
fstl
jl
mov
adc
jge
or
mov
add
in
addr16
cld
cmp
cmpsb
cltd
or
mov
sub
xor
outsb
sbb
add
je
dec
xor
cmp
jb
push
or
cmpsb
cmpsl
lret
mov
pop
out
inc
aas
mov
xor
in
add
cmp
dec
xlat
iret
rcrl
dec
inc
shrb
push
mov
outsb
test
cltd
fiadds
mov
jl
inc
negl
jmp
xchg
scas
mov
iret
jo
ret
sahf
nop
pusha
lea
add
fcom
jmp
lahf
std
neg
sub
testb
xchg
or
or
loop
lret
mov
pextrw
xor
mov
xchg
and
lods
and
jae
push
cmpsb
ds
lods
into
add
stos
push
adc
repz
cmpsl
ss
ret
cmp
movsb
jne
test
pushl
fsub
mov
mov
fiaddl
adcl
dec
aas
mov
sti
stc
insb
adc
xchg
jns
sbb
pop
call
xor
mov
or
in
add
test
scas
imul
xchg
leave
xor
jecxz
cmp
outsb
cltd
mov
ret
and
jl
dec
xchg
cmpsb
imul
push
jns
cmpsb
mov
mov
iret
scas
scas
icebp
cmpl
pushf
test
ds
push
sub
fsubrs
movl
clc
test
push
push
dec
or
orb
jbe
add
xor
lret
mov
xor
sbb
jo
fdivrl
mov
inc
inc
stos
xorb
mov
std
pusha
dec
mov
xor
outsb
mov
enter
mov
add
jno
sub
and
movsl
data16
lret
insb
pop
popa
outsb
dec
pop
outsl
mulb
loopne
cmpsb
inc
mov
das
pop
jne
or
mov
sub
and
mov
dec
test
cmp
sbb
cmpsb
sub
fs
push
sbb
outsb
cmp
sub
arpl
push
and
or
and
adc
or
aam
hlt
arpl
xchg
imul
bound
scas
in
or
mov
mov
aam
test
dec
rolb
add
idivb
into
fbld
cmp
shl
js
pusha
int
mov
fsubrs
xchg
popf
dec
pop
xchg
testb
idivb
and
mov
xorb
add
mov
sub
jg
mov
mov
push
jbe
pusha
in
jnp
imul
add
ficompl
sub
push
mov
mov
jns
sbb
cmc
loope
psubw
stc
mov
and
loop
das
sbb
movsl
adc
movsl
add
std
mov
pop
clc
cmp
flds
pop
pop
jno
repz
pop
pushf
repz
insl
mov
sub
mov
test
mov
cmp
out
adc
dec
add
jp
into
dec
fisubrs
xchg
mov
push
in
loopne
sbb
lea
push
jge
jg
xchg
cmp
inc
mov
orl
out
popf
adc
popa
out
and
pop
mov
test
sarb
xchg
fwait
xlat
pop
xor
mov
mov
jl
leave
push
cli
mov
lds
and
cmp
clc
icebp
pop
enter
jmp
cmp
pop
dec
int
stos
fs
xor
xor
imul
stos
add
outsb
fs
fwait
cmp
xor
dec
push
ljmp
test
add
mov
mov
dec
cwtl
sarl
mull
jo
sub
cmp
insl
and
insb
lods
ja
xchg
enter
push
mov
stos
dec
cmp
js,pn
xor
scas
sub
test
lret
mov
je
mov
pop
push
in
scas
orl
shlb
imul
mul
pop
cmp
out
xor
and
or
inc
stc
bound
push
adc
shr
sub
ret
or
pop
lret
xchg
bound
imul
xchg
cmc
subl
loopne
loop
add
aaa
and
cmpsb
mov
aas
bound
scas
xchg
aad
xor
cmpsb
mov
push
cmc
clc
xchg
sbb
outsb
rorb
push
cltd
cmp
inc
jae
jge
aad
loope
adc
pop
mov
adc
popf
jmp
mov
mov
mov
out
rclb
xchg
add
or
mov
add
lret
jne
addr16
jae,pt
add
mov
jno
inc
fs
lock
cltd
lcall
movsb
lcall
xchg
loopne
push
cld
jo
out
sub
in
insb
test
jmp
cs
stos
adc
int
sbb
sbb
jp
fdivr
fmull
xchg
xchg
testw
in
lahf
mov
or
fcoms
ret
std
je
add
aaa
negl
fistpll
dec
adc
dec
out
out
subb
xrelease
and
scas
mov
lret
add
and
pushf
xchg
jns
sbb
je
lods
clc
ljmp
xchg
mov
aam
aad
xchg
jmp
cmp
jmp
xchg
or
loope
cmp
mov
xchg
cmp
aad
sub
shr
shll
icebp
adc
xor
or
addr16
mov
or
push
loopne
and
lea
cmp
dec
xlat
cli
ss
or
and
jecxz
cltd
mov
fisubl
dec
out
loopne
stc
mov
hlt
pop
and
nop
mov
addr16
xchg
add
iret
lret
ds
shr
mov
into
adc
xchg
cmp
ds
jg
lds
inc
lret
xchg
adc
mov
mov
mov
inc
dec
mov
mov
sub
xor
pop
push
insl
ds
cli
push
and
xor
sub
jmp
and
testl
aad
ret
xchg
hlt
mov
clc
outsb
ljmp
scas
hlt
fisttpl
insb
mulb
inc
xor
jne
ret
in
push
jnp
aam
and
aas
dec
and
stos
ss
lods
xor
mov
xchg
mov
sub
mov
testl
xchg
ja
xor
adc
mov
push
rcrb
dec
loop
dec
cmp
faddl
inc
push
push
xchg
jno
in
jg
lods
icebp
push
push
sub
sub
mov
stos
and
in
pop
lret
sub
stos
or
adc
or
push
mov
sub
xor
mov
dec
jle
xchg
pop
jns
inc
or
popa
int3
pop
inc
js
xor
movsb
inc
popf
test
das
mov
mov
mov
outsb
pop
ret
dec
mov
and
nop
mov
xor
adc
std
or
mov
and
cmp
sbb
out
adc
inc
arpl
inc
adc
aas
outsb
fsts
outsl
jp
inc
jae
mov
mov
fsts
and
fisubrl
jns
dec
test
add
popf
add
push
pop
cmp
push
pop
ljmp
and
dec
xor
addl
aaa
sub
and
sub
ret
loopne
dec
inc
pushf
add
and
sub
test
sub
sbb
push
cmc
adc
and
std
inc
jne
sub
sub
xchg
lret
jl
cmp
mov
adc
mov
adc
cltd
mov
nop
inc
int3
jb
sub
pop
aas
jg
sbb
sbb
and
imul
cmp
xchg
mov
pop
inc
mov
cmp
add
xor
ja
mov
push
lret
adc
dec
fimull
inc
fldcw
stos
loopne
push
aaa
cmpsl
test
add
add
lea
ficomps
mov
sahf
fsts
sub
lret
loope
xchg
testl
pop
sbb
pusha
xchg
jmp
cmp
jo
sub
lret
outsl
addr16
adc
outsb
mov
mov
push
dec
dec
add
lcall
push
cmp
mov
push
mov
int
jmp
or
or
dec
sarb
mov
sub
arpl
test
pop
mov
ja
jecxz
push
out
cs
mov
and
popa
popa
push
jnp
sub
jb
cli
int
sub
mov
mov
jmp
bound
xchg
mov
pop
pop
fisttpll
xor
je
rorl
leave
in
sub
add
rcrb
dec
fisubrs
cmpsb
daa
jne
mov
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
mov
xorl
sub
add
mov
xorl
xor
xorl
sub
addl
ror
sub
xor
xorl
mov
decl
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jb
mov
xor
mov
subl
sub
andl
xor
movl
cmp
movl
jne
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
movl
push
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
and
mov
push
mov
subl
xor
push
mov
add
addl
mov
mov
xorl
test
je
mov
adcl
mov
mov
mov
and
mov
xor
adcl
add
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
lea
xor
sbbl
jmp
inc
arpl
and
xchg
sahf
pushf
ja
fmul
fcoms
iret
adc
orl
andl
push
jecxz
push
mov
call
mov
sub
xor
push
push
xor
cmpsl
aad
rorb
ljmp
dec
arpl
cmc
iret
insb
and
movsl
int
mov
cmc
loopne
pop
sbb
arpl
inc
cld
loopne
test
ret
jp
push
push
mov
mov
or
iret
jl
dec
int3
push
jae
inc
dec
cmp
fcomp
fsubrl
call
jge
cmpsl
push
dec
pop
adc
xchg
stos
je
decb
ljmp
xchg
jmp
aam
sbb
test
fcmovnb
jle
sub
add
cmp
icebp
pop
jp
mov
pop
mov
gs
xor
and
inc
lret
push
and
xor
xchg
cltd
jmp
sarl
shlb
shlb
mov
out
fdiv
imulb
test
je
andb
mov
fstp
pop
in
mov
je
gs
inc
sub
test
push
out
mov
and
test
gs
mov
std
fistl
sub
shll
sub
cmpsb
in
xor
fs
enter
mov
pop
mov
fisubs
xor
std
pop
loope
lds
sbb
mov
add
jecxz
add
clc
or
inc
adcb
rcl
or
js
mov
gs
mov
mov
sbb
add
push
adc
pop
mov
insl
xchg
jns
inc
ljmp
ret
cmp
xchg
inc
out
jmp
out
imul
jg
and
decb
mov
std
xchg
adc
leave
push
mov
cld
sub
jle
fidivl
sti
xchg
out
mov
sub
ljmp
ret
lock
nop
cmp
mov
enter
add
je
call
ret
mov
loopne
mov
or
aam
das
cwtl
test
pop
insl
int3
xchg
jae,pt
cmp
int
subb
int
movsb
ret
sahf
add
out
sub
int
inc
cmc
push
int3
aam
je
fnsave
shrb
adc
mov
xchg
jle
add
bound
aad
ss
in
test
cmpsb
sbb
scas
fnstenv
iret
pop
sub
sub
repz
push
lahf
es
cld
jp
push
mov
mov
stos
aam
out
mulb
inc
dec
lods
push
pop
fcomp
push
or
out
mov
pop
mov
shlb
fildl
out
outsl
sbb
mov
cmp
ret
fsin
mov
mov
jbe
cltd
hlt
dec
lret
movsl
push
test
xchg
inc
ja
aad
sub
push
in
add
imul
stos
mov
add
xlat
sti
loopne
xchg
pushf
ds
cld
jmp
push
mov
cmp
add
jg
inc
and
pop
and
addb
mov
sbb
mov
loopne
dec
jg
stc
xchg
pop
es
aad
in
mov
inc
cmp
or
jmp
not
rolb
stos
xor
jl
lods
adc
mov
out
cmp
xlat
stc
jl
adc
pop
or
inc
pop
adcb
and
or
or
iret
out
ret
nop
outsb
das
ss
fisttpll
mov
ja
xor
jno
mov
lea
mov
cmp
clc
divb
aad
push
rorl
cmp
mov
and
adc
inc
mov
xor
jmp
inc
jge
rclb
push
daa
lds
push
mov
push
mov
mov
fwait
dec
data16
adc
adc
jb
and
jno
cmpsl
and
and
xlat
dec
mov
cltd
iret
xchg
push
sbb
mov
or
mov
xchg
mov
push
insb
fdivr
push
andl
nop
mov
fnstenv
addr16
push
lahf
jecxz
fbld
add
aas
sbb
jnp
ljmp
xchg
or
mov
fcoms
inc
lea
mov
jno
arpl
rclb
test
out
cmpsb
mov
test
push
insl
push
pop
cmp
jmp
les
daa
movsb
bound
cmp
mov
fidivs
xor
dec
cmp
scas
shrb
or
mov
pop
mov
pop
mov
sbb
and
sub
xchg
mov
pushf
sub
push
in
cmpsb
outsb
frstor
mov
stc
xchg
jp
mov
fs
mov
and
ret
fmul
inc
mov
jmp
loopne
inc
sbb
sahf
inc
aas
mov
pop
pop
rclb
sbb
lock
pop
mov
dec
xor
jbe
or
lcall
nop
xlat
clc
pop
sbb
cld
sub
and
jge
icebp
mov
ret
push
clc
dec
push
jbe
add
lea
imul
xchg
adc
xchg
push
cmp
add
orb
fsubl
into
in
clc
fs
idivl
xchg
lcall
sbbb
sub
imul
outsb
jmp
fdivr
das
jl
subb
mov
fsubl
les
mov
das
or
imul
repz
mov
nop
sub
mov
stos
in
outsb
or
nop
mov
cmp
push
push
popa
leave
inc
xchg
jns
cmpsl
dec
xchg
xchg
out
fxch
std
mov
sbb
dec
xchg
loop
sti
pop
loop
sbb
pop
xor
cmp
pop
dec
xor
fisubrs
ret
out
cmp
mov
cli
scas
push
dec
lret
fistpl
mov
mov
pop
or
imul
add
outsb
cwtl
sbb
imul
xor
cmp
inc
orb
jp
jp
xchg
mov
cltd
jb
push
xlat
gs
pushf
pop
or
loop
and
jg
dec
stc
jo
cs
push
ret
push
mov
das
cmp
es
or
cs
xor
jae
fsubs
aas
les
sbb
in
xor
lahf
fwait
jbe
push
xor
js
stos
push
push
lret
stos
in
cltd
ljmp
cmc
and
jge
xchg
pop
ljmp
movsb
imul
jl
add
out
cmc
dec
and
mov
ss
stc
pop
dec
cmp
outsb
fwait
xchg
lret
outsb
and
daa
popa
inc
sub
sbb
das
iret
adc
paddb
inc
or
mov
xchg
sbb
repz
mov
cmova
jno
leave
ljmp
dec
cmp
sbb
mov
dec
bound
mov
loope
daa
scas
hlt
arpl
jle
mov
xlat
mov
push
lock
lds
jbe
inc
sub
or
flds
sti
mov
lds
and
ljmp
dec
sub
xor
sub
lock
mov
mov
stc
inc
pop
pop
ret
push
pop
jmp
pop
shll
jnp
jb
inc
fmull
mov
or
imul
or
mov
xchg
jb
add
dec
mov
ss
add
ficoml
add
adc
pop
jmp
lret
inc
or
aaa
stc
xchg
inc
cmp
scas
or
push
xorl
scas
sti
inc
pop
mov
sbb
inc
in
jmp
roll
adc
imul
test
lret
bound
enter
mov
adc
stos
cs
mov
lods
shlb
aaa
call
pop
lea
insb
data16
push
mov
in
adc
lods
rcrl
mov
gs
xor
shll
mov
mov
leave
pop
pop
sti
sub
fistps
adc
push
orb
lcall
jle
pop
es
adc
mov
inc
fldcw
les
inc
je
mov
mov
adc
dec
sbb
int
dec
iret
cmp
xchg
test
xchg
or
dec
loop
insl
inc
xor
cmp
jnp
sub
lcall
out
or
jp
dec
mov
outsl
les
lahf
cltd
push
push
jle
or
mov
outsb
outsb
add
jp
ja
jecxz
mov
loope
lcall
outsb
sbb
movsb
lcall
out
cmp
data16
jbe
ds
lcall
lds
mov
out
sar
popa
or
jmp
pop
or
push
mov
aad
popa
js
outsl
stos
in
mov
in
sbb
push
and
inc
movsl
rorb
sti
daa
xchg
aam
jge
lcall
xchg
xchg
lock
sbb
mov
cli
mov
sbb
ror
gs
sbb
leave
ret
gs
scas
mov
pop
xorb
jns
jecxz
inc
sub
jp
popf
push
sti
sub
mov
mov
es
insb
jl
lods
fwait
or
or
push
in
mov
adc
les
pop
cmp
setb
or
jge
imul
and
mov
ljmp
ljmp
out
cli
sub
jae
inc
std
and
dec
lods
push
loop
push
mov
hlt
mov
push
lock
adc
sbb
sbb
cmp
add
dec
mov
jbe
push
fildl
inc
and
lods
dec
xchg
cwtl
push
stos
addb
pop
test
pushf
rorl
jg
jg
or
ficoms
lods
sbb
push
lds
add
xlat
andb
xchg
insb
mov
push
jns
outsl
enter
mov
xor
cmp
cmpsl
nop
push
jbe
and
test
inc
cmc
mov
and
push
ficoml
mov
mov
mov
pop
jg
jg
pop
in
add
cmpsb
pop
push
inc
repz
push
xchg
inc
jne
jb
pusha
inc
jle
sbb
mov
enter
cmc
out
push
push
mov
add
mov
outsb
ja
leave
cmp
jnp
addb
mov
jno
lcall
stos
push
imul
call
test
mov
xchg
dec
aas
movsl
insb
pmulhuw
xchg
cwtl
and
cmpsb
fstp
jmp
ret
pop
add
leave
jae
or
ret
loop
loopne
loop
add
pop
or
jl
dec
xchg
fidivl
push
ret
mov
aas
adc
add
mov
lcall
jne
fwait
pop
ficoms
fidivl
cmp
and
mov
mov
loop
xchg
sti
push
les
sti
mov
sub
out
mov
cwtl
mov
jl
push
popfw
push
inc
movsb
or
adc
bound
xchg
dec
aad
dec
sti
stc
dec
sub
test
add
test
jae
out
test
push
mov
jmp
sbb
xor
jbe
inc
sahf
sarb
divl
inc
cmc
adcl
add
mov
outsb
ret
je
cmp
das
xor
push
daa
faddl
mov
ja
push
mov
ret
xchg
xchg
jge
fisubl
push
or
adc
pop
movsl
repnz
rcrl
jle
mov
test
dec
fcmovbe
sub
xchg
mov
fsubs
push
jb
je
lock
xor
add
jo
cmp
and
mov
shll
loop
fidivrl
sbb
cmc
push
clc
daa
sbb
xchg
push
fmul
stos
cmp
call
fstpl
mov
sbb
and
rcr
cwtl
mov
cwtl
mov
dec
ret
mov
lret
or
mov
mov
mov
mov
aas
cwtl
mov
outsb
test
add
and
inc
lahf
scas
mov
call
jne
call
shrd
pop
xchg
cmpsb
adc
mov
mov
out
icebp
int
add
sbb
mov
popa
lods
sbbb
sbb
xlat
into
int
rol
popf
lret
dec
mov
and
test
shll
in
or
xchg
dec
push
fiaddl
jne
adc
test
add
shll
stc
jo
inc
pop
or
xchg
clc
insb
pop
test
lahf
xchg
dec
push
cmp
outsb
pop
inc
shll
jg
out
jle
or
fistl
xchg
mov
push
imul
jne
and
inc
popf
jns
jp
adc
outsl
lods
jecxz
and
mov
add
push
test
jnp
shll
or
ss
adc
push
js
dec
repz
jnp
jg
mov
shll
lock
sbb
mov
shlb
nop
and
sahf
push
rcrb
test
das
add
inc
insl
push
and
insb
sbb
test
ds
push
ret
mov
out
sbb
push
adc
dec
addb
lock
mov
out
sbb
vmread
das
dec
cmp
loop
repz
cs
nop
ljmp
jl
push
sbb
push
sub
xor
or
mov
icebp
ds
cmp
xchg
adc
sub
adc
inc
mov
test
jecxz
mov
xchg
loopne
es
gs
xchg
mov
sti
xor
mov
xchg
imul
fistl
sbb
mov
mov
sub
popa
movsb
cltd
rcll
cs
adc
leave
cmp
imul
dec
jne
lock
pushf
mov
cmp
xlat
fistpll
pop
mov
mov
pop
or
popa
dec
xor
dec
sahf
dec
adc
ret
jecxz
jl
in
push
dec
test
int
test
in
adc
jle
sbb
adc
fldl
aaa
push
rcrl
aas
sbb
xchg
push
out
cmp
xchg
cmp
out
jl
mov
mov
jmp
mov
pop
jne
cmpsl
fnclex
pop
inc
xchg
cmc
out
orl
push
iret
scas
pop
movsl
push
xchg
push
sub
out
adc
and
fsubr
out
sbb
pop
dec
out
ja
sub
xor
mov
xchg
push
movsl
xor
mov
cmp
push
cmp
icebp
stos
in
sub
fcoms
daa
cmpsl
pop
stos
fimuls
push
mov
lret
xchg
data16
pop
enter
scas
cld
mov
or
stos
fimull
inc
sub
add
rorb
aaa
push
fmull
loopne
sbb
jns
nop
and
inc
mov
add
lds
push
push
pop
out
xor
jecxz
jne
sub
adc
jb
and
dec
in
js
push
cmpsl
aaa
sti
mov
adc
push
mov
xchg
rcrl
aad
rclb
outsb
sub
pop
pop
lahf
ds
repz
lock
fstp
les
insb
fwait
sbb
js
gs
loop
std
enter
pop
test
mov
test
addr16
adc
mov
xor
insb
leave
addr16
push
in
mov
cmp
dec
inc
imul
cmpsl
lock
insb
xlat
xor
daa
pop
lock
dec
repz
test
aam
and
cmp
and
cli
add
aad
mov
push
dec
lods
mov
or
sub
je
push
call
sub
mov
add
jg
es
jle
mov
das
hlt
xor
aaa
jo
and
ret
sub
rclb
or
push
pop
faddl
lods
adc
adc
xchg
sub
add
mov
pop
inc
fidivs
decb
dec
xor
add
int3
es
or
pusha
scas
cmp
sub
mov
jb
xor
repz
movsb
std
sbb
in
cmp
xchg
sub
leave
and
rcl
xchg
outsb
std
std
mov
insl
lret
fcoms
fmulp
and
outsl
lahf
dec
mov
sti
add
aad
bound
fidivl
xor
or
adc
aas
pop
mov
cmp
and
push
bound
jo
mov
sbb
pop
jns
add
leave
das
loop
adc
sbb
or
push
mov
shl
scas
mulb
loopne
inc
in
icebp
loop
clc
mov
sti
dec
add
jb
shrb
test
in
xor
pop
ja
or
arpl
in
xchg
outsb
jbe
ret
mov
sbb
inc
cmp
lds
mov
sbb
addl
icebp
sbb
inc
mov
mov
clc
fsub
dec
cltd
jno
xlat
push
jo
data16
test
xor
mov
mov
mov
xor
mov
loop
outsb
push
dec
in
mov
adc
test
shrl
ss
jp
dec
pushf
adc
sbb
push
popf
mov
inc
jp
shrb
sub
call
cltd
clc
out
push
sbb
cld
sarb
pop
mov
add
push
mov
xor
mov
test
lock
addl
and
adc
pop
mov
mov
psraw
or
shlb
push
inc
mov
pop
std
hlt
js
sub
push
or
add
ja
mov
push
shlb
loop
jno
inc
add
nop
test
mov
repz
lods
pop
lods
fucomp
shll
xchg
out
ds
xor
mov
push
fdivs
loop
sbb
inc
mov
cmpl
loopne
push
lahf
and
push
inc
cld
sub
lods
jg
xchg
xchg
xchg
jne
cmpsl
in
idivl
dec
scas
inc
xchg
repz
mov
mov
orb
xor
xorl
mov
shl
popf
popa
and
enter
test
in
out
sub
pushl
cmp
adc
jge
lret
push
pop
les
push
std
ljmp
xor
test
pop
xchg
aas
dec
jo
call
jmp
loopne
add
ss
loope
jns
shl
pop
push
inc
xor
clc
int
or
mov
negb
out
add
imulb
lahf
xor
in
shll
shlb
ret
dec
testb
orl
cmpsb
pop
add
mov
vpshlb
push
int3
movsl
jne
or
mov
and
sbb
adc
inc
fidivl
jno
fdivr
mov
pop
add
call
in
push
sahf
xchg
lods
in
pop
mov
push
adc
jbe
aam
sub
xor
jmp
scas
nop
ret
stc
add
or
pop
mov
outsl
movsl
stc
out
push
push
dec
push
and
push
mov
dec
pop
insl
inc
jle
insb
dec
jp
out
mov
out
pop
jns
xchg
enter
cli
adc
push
repnz
and
out
inc
or
xor
sbbl
mov
pop
call
ljmpw
mov
push
outsl
adc
pop
out
jp
dec
or
fdivs
mov
add
adc
loopne
mov
cmp
mov
add
xlat
push
cltd
jle
xor
inc
push
lods
ficoml
dec
in
js
add
xchg
aam
jbe
lret
pop
les
sbb
cli
or
fstl
cmp
push
mov
sbb
insl
sub
mov
adc
jnp
push
sbbl
pop
enter
xchg
pop
xor
out
nop
dec
push
and
lds
adc
notb
mov
sbb
push
xchg
lock
test
iret
mov
push
cmp
jecxz
push
push
scas
fsubrl
mov
imul
test
ret
lds
dec
sahf
aam
pop
adc
je
fsubl
cmpl
inc
or
imul
lds
add
scas
push
and
adc
or
fisubrl
in
cltd
ss
dec
jo
into
cmc
cs
lock
popf
sarb
jecxz
sbb
push
or
jle
xor
std
repz
sbb
jle
stos
sbb
dec
pop
fisttpl
mov
jmp
jo
stos
test
lods
icebp
imul
sbb
and
mov
fbstp
mov
adc
inc
sahf
mov
push
cli
add
imul
ret
jl
mov
insb
out
daa
std
fnstsw
or
mov
in
pop
and
jl
mov
mull
push
pop
adc
out
dec
pop
adc
push
iret
inc
stos
pop
inc
out
adc
xor
hlt
and
mov
stc
into
mov
or
int
push
lret
cmpsb
in
sahf
dec
scas
daa
out
mov
add
mov
mov
xchg
test
call
aad
inc
cltd
cmp
dec
sub
cld
push
sub
stos
mov
cmpsl
out
stos
fsubrl
dec
sbb
std
ss
les
movsl
or
pushw
in
lcall
xchg
outsb
mov
adc
sub
cmp
into
and
inc
mov
push
xchg
jo
jo
push
pop
add
cmp
das
jns
test
xlat
mov
jbe
push
stos
into
int3
stc
xchg
xchg
repz
leave
out
xchg
cli
insb
xor
xlat
sbbb
inc
mov
and
ljmp
cltd
xchg
arpl
and
push
out
in
movsb
fisubrs
dec
js
call
jmp
fsubs
add
int
pop
scas
ret
sti
cs
cmp
pop
int
fldt
jb
xchg
and
adc
cwtl
mov
mov
call
sahf
mov
enter
sub
cmp
mov
push
dec
insl
mov
mov
icebp
mov
in
aad
arpl
cmp
push
aaa
mov
mov
imull
or
pop
fisttpll
pop
sub
mov
and
test
mov
mov
pop
fsubs
pop
stc
xchg
adc
mov
adc
fildll
test
mov
dec
movsl
mov
pop
stos
int3
mov
dec
inc
ja
dec
lahf
mov
adc
call
in
sbbb
xor
lods
shrl
jge
jo
dec
lcall
cmpsb
dec
mov
xchg
inc
ljmp
push
out
cmp
out
inc
mov
pop
push
add
sarb
lea
xlat
popa
dec
lods
push
pop
sti
stos
and
subb
into
call
leave
je
movsb
aaa
mov
mov
cmp
push
sarb
mov
clc
mov
aas
lea
and
fidivl
add
ret
pop
arpl
test
mov
cwtl
cltd
lock
dec
inc
adc
inc
leave
or
or
push
adc
pushf
sbb
adc
cmp
mov
shll
mov
jns
bound
int3
out
cmp
stos
rorl
and
dec
inc
inc
cwtl
pop
roll
addl
dec
or
test
xchg
jg
arpl
lret
cltd
jbe
icebp
imul
lds
sahf
jns
or
gs
loopne
icebp
subl
movsl
or
es
jae
adc
mov
push
pusha
add
out
ds
dec
rorb
push
jmp
rclb
push
imul
lock
idivl
lods
loopne
and
ud0
imul
mov
mov
rcrl
jecxz
popf
gs
mov
fwait
sub
loop
sbb
ja
pop
sti
or
sub
ja
push
add
roll
stos
pusha
lcall
lret
mov
out
mov
cmp
ja
jge
jmp
mov
xchg
adc
xchg
dec
mov
jecxz
scas
imul
je
ss
pop
movsb
dec
mov
mov
mov
mov
call
jl
xor
cmp
pop
shl
jmp
adc
cmpsl
cmp
subl
mov
andl
roll
mov
cmp
add
adcl
bound
out
dec
rclb
jbe
ret
pop
dec
js
addr16
xchg
mov
outsb
push
inc
ds
push
fcomip
je
xor
in
jne
popa
xchg
leave
push
mov
adc
arpl
in
or
shlb
sahf
jl
lock
cmpsl
mov
dec
test
in
repz
mov
cmpsb
mov
out
mov
aam
or
cmp
and
xchg
enter
lods
mov
insb
sbb
cmp
and
mov
sbb
decb
xor
jns
stos
stos
sahf
icebp
dec
nop
mov
aam
sbb
dec
loope
js
push
jnp
push
jl
inc
les
pusha
push
bound
test
xchg
lea
and
fadds
inc
repz
sub
imul
inc
adc
nopl
sub
testb
jo
flds
sub
enter
scas
add
push
sbb
xor
aas
shl
insl
jle
fisttps
dec
in
cltd
adc
xchg
mov
mov
outsb
jl
xor
cmp
mov
push
push
stc
scas
jl
cmc
popf
cmpsl
mov
popa
fcompl
dec
mov
out
sub
pop
lds
sbb
je
std
sbb
jae
or
push
jb
sahf
jl
dec
mov
ljmp
aaa
aad
add
inc
fldl
sbb
dec
pushf
and
adc
xchg
test
push
fs
jle
mov
cmpb
mov
mov
mov
pusha
mov
pop
std
arpl
mov
ja
pop
mov
enter
mov
fucomi
or
cmp
push
clc
mov
xchg
cmc
mov
lret
aad
sbb
xchg
rorb
shlb
fmulp
ret
hlt
ljmp
cmp
sub
and
sub
mov
dec
jmp
je
addb
orb
out
jl
repnz
xchg
push
jle
jb
and
js
gs
gs
dec
push
ja
rdtsc
fwait
rcrb
sub
mov
add
aaa
lret
aaa
mov
pop
scas
ret
xchg
rcll
fnstsw
jmp
pop
inc
pop
inc
stos
cltd
insb
xor
mov
lahf
arpl
cltd
push
stc
cmp
std
or
pop
push
popf
mov
pop
pop
ja
imul
stos
cmp
packsswb
mov
push
std
add
subl
push
shll
add
stc
sahf
xchg
jbe
inc
push
jl
jo
decl
je
rcll
xchg
dec
jmp
adc
sbb
xchg
icebp
pusha
xchg
ljmp
xor
dec
mov
frstor
daa
ds
xchg
lret
and
pop
repnz
andb
pop
out
fdivs
sti
shll
aad
mov
lcall
sbb
and
jno
cmp
pushf
add
add
test
test
mov
sbb
mov
inc
shlb
pop
xor
fnsave
dec
push
xchg
jmp
push
arpl
jo
jg
shr
int3
cltd
jecxz
insb
pusha
pushf
adc
or
cltd
add
sub
sarl
test
loopne
xchg
adc
push
loop
inc
testl
xchg
and
imul
sub
jns
cltd
mov
mov
push
sbb
lahf
stos
lret
mov
test
push
stos
loopne
mov
push
mov
lret
sahf
lahf
mov
lock
ds
sbb
rorb
xor
arpl
arpl
add
movsb
lods
cli
xor
xchg
mov
add
sbb
popa
dec
inc
shl
test
cmp
add
xchg
shlb
and
or
push
inc
popa
pop
jg
push
cmp
jne
jbe
mov
repz
or
sub
jmp
pushf
filds
scas
pop
xor
sbb
pop
mov
scas
xlat
vxorps
sub
js
mov
mov
lock
int3
sbbl
mov
adc
in
or
hlt
mov
mov
fdiv
gs
sbb
sub
cmp
rclb
mov
cmpsb
arpl
mov
in
pop
push
sbb
stos
dec
sbb
mov
popa
mov
aam
into
shlb
jg
pusha
push
push
int
into
loopne
jg
mov
jg
orb
jmp
push
push
movsl
or
mov
add
push
scas
xchg
sbb
fsubl
mov
subl
lods
inc
mov
leave
jg
daa
out
add
xorb
in
sub
adcl
mov
xor
rcrl
or
pushf
jbe
sub
out
sub
lretw
aam
pop
data16
jl
mov
xchg
jns
faddp
leave
jge
test
imul
mov
scas
into
test
pusha
in
dec
inc
test
sub
adc
cmp
aas
cmp
ret
mov
divl
movsl
inc
mov
dec
cld
jl
jmp
mov
mov
nop
adc
outsl
dec
dec
fildll
and
cltd
dec
pop
int3
adc
jp
mov
shll
fwait
and
mov
pusha
test
js
sahf
mov
sbb
pop
pusha
mov
and
mov
pop
inc
mov
repz
aas
cltd
aas
sarl
sarl
fisubrl
loopew
aam
jle
and
out
movsl
push
outsl
cmp
jge
push
and
push
pop
shll
notl
cmp
iret
je
dec
movsl
push
jbe
ss
sbb
pop
pop
mov
cwtl
push
hlt
cli
mov
aas
lcall
xor
sbb
sbb
repz
addl
stos
mov
lret
clc
adc
mov
xchg
mov
add
add
lea
loopne
mov
lods
roll
into
test
push
std
push
imul
mov
or
adc
cmp
lea
ljmp
lahf
and
pop
out
jg
dec
cmc
mov
lahf
mov
pop
loope
jmp
adc
pop
scas
mov
pop
outsl
sbb
cmpsb
push
lods
sbb
sahf
add
jo
xchg
sbb
aaa
repz
mov
sub
sbb
add
into
jle
fidivl
add
ret
aaa
xor
lods
and
insb
dec
shlb
sarb
cmp
mov
adc
jb
mov
jecxz
lods
sub
scas
scas
setb
pop
arpl
pusha
pop
aam
pop
in
int3
mov
int3
js
ss
push
add
lods
inc
gs
popa
nop
sub
sbb
xchg
mov
adc
xchg
xlat
sbb
dec
mov
out
lcall
lods
dec
popa
outsl
das
and
lock
cmpsb
in
stos
xchg
or
inc
mov
inc
xor
movl
cmp
je
mov
andl
xor
addl
add
cmp
movl
jne
xorl
pushl
call
and
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
add
movzbl
adc
mov
adc
mov
sbb
jmp
test
pop
sahf
andl
and
fs
lock
jb
xlat
roll
subb
mov
das
xor
call
add
pop
or
and
adc
addr16
cmp
lds
push
in
adc
sbb
mov
sbb
loop
loopne
inc
push
sbb
out
cmp
leave
mov
jae
mov
xchg
lds
pop
or
cmp
mov
test
jo
enter
out
xchg
and
xchg
xchg
std
test
out
and
sub
and
fdivs
outsb
jo
ds
sub
das
daa
push
rcrb
inc
ljmp
dec
mov
sub
aam
mov
cmp
push
mov
jae
dec
ss
movsl
scas
loope
and
out
ss
pop
je
pop
mov
sbb
ret
cld
add
les
les
pop
stos
lea
mov
out
in
fwait
jl
arpl
repnz
mov
andb
xchg
daa
ret
push
iret
jg
sub
sbb
cmp
das
and
jmp
test
xchg
inc
xchg
add
mov
rclb
repz
in
mov
adcl
arpl
mov
push
cs
daa
pop
pop
push
flds
sbb
dec
or
push
mov
fwait
movsb
lock
shll
mov
pop
sar
enter
push
jne
mov
imul
adc
pmaxub
hlt
add
sbb
cltd
mov
push
js
gs
sub
test
add
inc
xor
sbb
pop
mov
sbb
pop
test
ljmp
or
sbb
mov
mull
inc
adc
out
fstl
adc
pop
insb
lock
xchg
popl
fwait
inc
lods
jge
ss
aaa
pop
add
sub
xor
mov
adc
xor
add
xchg
xor
or
xchg
std
rcl
imul
and
xchg
push
orb
cmp
inc
data16
jns
dec
xchg
jne
insb
out
clc
mov
ljmp
adc
mov
jg
imul
mov
test
dec
xchg
inc
insb
lds
add
or
add
daa
or
out
dec
fcompl
cmc
aas
scas
mov
cmp
insb
dec
jg
fstpt
mov
dec
mov
or
lock
jmp
inc
sbb
xchg
sbb
jecxz
ret
jecxz
out
mov
sbb
jl
aas
cld
inc
mov
popa
inc
lcall
jo
jnp
cli
mov
inc
add
sub
movsl
xor
push
xor
mov
inc
sbb
psllw
lcall
test
rorb
pop
movd
cmp
push
mov
mov
in
push
pop
iret
aaa
lock
je
mov
dec
cld
int
dec
mov
push
pop
lods
sub
aad
jo
mov
out
mov
push
mov
rcrb
mov
dec
fwait
dec
inc
inc
dec
push
sbb
push
sbb
sti
lea
cmp
minps
cmp
insb
mov
call
ds
adc
cltd
pop
push
sub
mov
inc
je
push
ljmp
or
stos
inc
mov
pop
or
jp
push
test
out
cltd
add
iret
cmp
int
movsl
xor
pop
mov
mov
cli
stc
sbb
cmp
inc
inc
cmpsl
add
addr16
out
shr
lods
jg
push
pop
repz
imul
lahf
or
sbb
scas
pop
cwtl
incl
scas
dec
sub
cmp
out
loop
xor
mov
dec
int3
pop
push
in
ljmp
outsb
ret
lea
xor
sbb
sarl
outsb
mov
scas
inc
jg
xor
stos
outsl
imul
inc
mov
add
jg
sbb
and
adc
cs
sbb
enter
cmp
out
hlt
into
mov
jbe
dec
cmpsl
xor
icebp
dec
out
lret
pop
movl
repz
fs
cs
cmpsb
jecxz
mov
sahf
xchg
push
stc
sbb
iret
rcll
sub
jo
dec
sbb
add
rcl
mov
sbb
adc
mov
or
pop
inc
mov
test
xchg
or
xchg
xor
dec
mov
sti
aam
jne
xchg
inc
test
outsl
adc
jl
xor
cmp
push
push
push
daa
insl
fnstsw
outsl
fistpll
nop
dec
movsb
out
and
enter
push
lcall
sub
les
mov
aam
mov
sbb
out
jnp
pushf
push
cli
mov
cwtl
xchg
out
sbb
lret
xor
lahf
cmp
lahf
into
mov
sbb
adc
je
out
roll
xor
adc
jne
push
pop
sbb
lcall
in
and
inc
adc
mov
xchg
jns
fistpll
rcrb
std
mov
and
imul
add
cmp
or
adc
fmuls
push
sbb
mov
hlt
adcb
cwtl
lock
push
je
ljmp
pop
leave
cli
shrl
sahf
push
lret
jmp
movsl
or
mov
add
dec
jae
out
add
push
or
rorb
pop
dec
jnp
stos
aas
xchg
sub
inc
mov
cltd
sti
enter
or
sub
mov
mov
add
aaa
imul
add
inc
lods
cmp
clc
dec
add
mov
cmp
cmp
ljmp
aaa
mov
fwait
or
lea
mov
jmp
jmp
movsb
sbb
sahf
jmp
inc
sub
hlt
out
out
iret
sar
sbb
cwtl
mov
and
stos
test
ret
stos
pop
nop
pop
pop
das
out
leave
movsl
sar
or
notl
cmc
dec
or
cmp
cltd
arpl
mov
in
fsubr
pop
sub
cmp
jbe
push
pop
ret
dec
and
push
fsubr
and
std
or
inc
mov
arpl
daa
mov
lods
and
cmp
inc
je
push
jp
es
ss
repz
icebp
jg
sub
xlat
lahf
xor
pop
adcb
fistpll
scas
in
insl
or
push
loop
pushl
scas
push
popa
pop
out
scas
and
push
rolb
ds
clc
int3
lods
mov
stc
js
cli
loope
jle
pop
push
cwtl
sbb
lret
scas
iret
sti
cmp
sbb
mov
xor
repnz
imul
aaa
or
inc
scas
xchg
lret
pop
mov
or
nop
push
push
jb
lds
int3
test
enter
adc
mov
imul
mov
jecxz
je
ja
inc
mov
sbb
push
pop
xchg
test
jmp
icebp
sbb
jecxz
mov
jnp
push
imul
dec
test
pushf
imul
push
add
push
inc
jno
sub
aaa
dec
push
int3
mov
in
mov
xchg
in
cmpsl
xchg
pusha
in
sahf
rolb
cmp
leave
mov
rcrb
fsubrl
push
es
push
dec
sub
out
mov
xchg
loop
xlat
push
lret
in
add
aas
xlat
int3
dec
push
into
xchg
and
icebp
sbb
xchg
call
loope
jmp
jno
push
jo
dec
or
sub
loope
mov
or
popf
cmp
jecxz
aad
adc
pop
mov
mov
add
cwtl
stos
syscall
push
mov
int
jmp
push
out
adc
movsb
push
inc
mov
and
cmp
das
sbbl
test
dec
in
ja
es
or
pop
clc
sarl
push
stc
push
mov
mov
and
test
pushf
push
loopnew
movsl
mov
out
jae
cmp
push
xor
push
ja
lcall
xchg
inc
sarl
aas
jg
stos
mov
xchg
les
inc
sbb
sbb
nop
jns
mov
ret
rorl
loopne
cmpsb
rol
adc
mov
push
add
mov
lea
jg
lcall
lcallw
clc
push
gs
js
lods
mov
mov
sub
lods
test
aad
sbb
int
lret
lahf
jmp
mov
dec
rol
push
pop
jnp
rclb
adcl
add
mov
fwait
dec
push
ss
mov
push
mov
inc
pop
mov
cmp
pop
adc
and
xlat
pop
mov
mov
aad
push
aas
inc
mov
leave
pop
call
rcrb
mov
pop
and
jno
add
js
cs
pop
jge
sub
sub
dec
lds
scas
mov
xchg
out
sti
or
js
movsl
negb
or
pop
mov
add
fcmovnbe
jnp
enter
add
pop
push
adc
std
out
fcompl
lods
sub
ljmp
inc
cmpsb
xchg
xchg
add
mov
movsb
setnp
scas
adc
mov
imul
fistps
fistpll
sbb
inc
cli
sub
inc
inc
push
shll
mov
inc
repz
mov
or
mov
push
xorb
xor
and
outsl
sti
pushl
and
and
icebp
adc
jge
mov
jb
outsl
push
or
sahf
sub
leave
imul
js
pusha
aaa
jbe
push
sub
in
fnstsw
stc
enter
jbe
xchg
ficoms
pushf
push
xchg
stos
popa
and
jmp
cli
or
push
xor
and
clc
insb
enter
jbe
add
jle
jb
mov
outsl
gs
subb
jg
xchg
insl
aad
lahf
outsl
es
xor
hlt
loop
fsubrp
push
xchg
xchg
sub
jo
cmp
insb
test
movsl
les
repnz
mov
or
push
jbe
out
movsb
push
movsb
mov
es
stc
fcomip
sbb
or
jge
rorb
es
enter
pop
push
mov
push
insl
test
data16
movsl
shlb
adc
int3
jp
leave
jp
rorl
inc
int3
lds
mov
xor
leave
pop
jns
push
mov
rol
xor
add
sbb
popa
outsl
imul
cmp
mov
scas
pop
addr16
cmp
or
mov
sub
orl
jle
outsl
sbb
icebp
int3
push
xchg
or
mov
subb
xor
dec
ret
mov
xor
sub
divl
push
leave
adc
sbb
in
sar
outsb
test
rcll
push
icebp
mov
jge
cmp
lahf
xlat
push
push
mov
mov
xor
mov
and
in
into
pop
jbe
test
leave
dec
inc
mov
in
pop
lods
add
mov
rcr
mov
push
pop
add
xchg
sub
add
cmp
cmpsb
or
cmp
in
jb
ret
or
out
and
test
test
std
or
int3
dec
subb
test
sbb
leave
pop
mov
inc
sbb
jl
jae
mov
xor
hlt
cld
adc
fisttpll
or
dec
add
mov
out
fistps
jg
lock
in
fisubrl
mov
movsl
push
scas
pop
jp
inc
into
push
add
lret
out
into
cli
cld
lock
sub
add
dec
test
ja
push
jge
in
xchg
or
jmp
insl
cmp
aas
sbb
pop
mov
mov
fistpll
sub
sub
into
cld
int3
lds
pop
push
out
pop
dec
mov
xor
popa
adc
pop
adc
shll
ret
pop
xchg
xchg
and
jl
push
sub
setnp
ja
daa
pop
push
xor
mov
movsl
xchg
push
pop
xor
loope
xchg
add
and
cltd
xlat
and
mov
mov
xchg
sub
test
pop
mov
and
call
add
add
jge
out
jle
push
rol
sbb
into
jg
inc
mov
fs
lahf
and
mov
in
push
xor
dec
adc
outsl
jp
movsl
les
xchg
inc
xlat
jg
or
push
test
ljmp
push
xor
les
in
mov
daa
movsb
sarl
loope
push
xlat
dec
inc
outsb
pop
sar
pop
dec
jle
pop
and
sub
into
cli
cmp
orl
mov
jecxz
mov
loop
sub
gs
mov
mov
jo
std
lcall
in
xor
mov
sub
or
flds
mov
mov
and
movsb
push
out
nop
aam
lods
inc
pop
fadds
sahf
outsl
ss
icebp
dec
cmc
mov
mov
dec
fwait
popa
cltd
stos
sbb
in
jo
shrl
mov
je
cmpsl
push
mov
les
lahf
je
loope
xchg
inc
lea
mov
rorb
xor
out
push
pop
xchg
mov
xchg
add
outsl
out
loop
out
dec
jbe
pop
mov
aam
imul
adc
dec
cld
add
and
push
lock
jbe
adcl
xchg
insb
sarl
xor
das
mov
aad
stos
ja
pop
cld
pop
xchg
ss
sub
aas
xchg
imull
je
ljmp
loope
jmp
ljmp
popa
ret
aad
jnp
inc
test
sub
int3
ficoms
pop
pop
mov
mov
xlat
hlt
sbb
xlat
stos
add
mov
ja
out
aas
cwtl
lcall
xor
push
test
sbb
les
xor
scas
jmp
lret
arpl
mov
xchg
jecxz
xchg
stc
lods
jmp
xor
minps
adcb
xlat
xor
adc
rolb
add
push
xchg
test
lds
dec
cmp
mov
add
cmpsl
pushf
mov
and
je
xchg
adc
into
dec
push
inc
sub
add
lea
in
adc
stos
mov
cmpsb
and
sti
inc
sub
xchg
test
sbb
inc
fisubs
xchg
out
fnsave
mov
enter
rorb
jbe
pop
pop
and
xorb
stos
cmp
or
stos
faddp
adc
ret
iret
adc
and
sub
sbb
adc
test
sbb
jbe
shlb
iret
adc
sar
and
cli
push
mov
bound
push
cmp
and
stos
pop
mov
sub
push
mov
cld
lret
outsl
mov
xchg
lahf
imull
data16
cld
mov
or
xlat
mov
xchg
jnp
adc
gs
in
and
xchg
cmp
pusha
cmp
mov
ret
int3
andb
jmp
xchg
ds
pop
sub
loope
xor
xor
jbe
jnp
movsl
loop
mov
repz
mov
movsl
jo
ret
pop
sub
push
push
pop
mov
jnp
lret
cmpl
adc
inc
mov
xchg
call
loop
test
enter
sahf
push
mov
xchg
in
cmc
xchg
js
push
mov
push
cmp
push
mov
loop
xchg
sbb
mov
sub
clc
jo
imull
sbb
popa
bound
movsl
jmp
pop
fabs
decb
scas
xlat
ljmp
mov
test
insb
lret
es
jns
ficompl
movsb
add
mov
mov
mov
cmpsb
aas
mov
cltd
fstp
add
lock
clc
mov
and
scas
add
or
push
loop
stos
clc
cmp
or
stc
ss
mov
mov
pushf
fdivr
xchg
outsl
xchg
cmpsl
lahf
or
sub
ljmp
sub
mov
mov
adc
loop
test
sub
sub
mov
xchg
mov
aad
cmp
shlw
cmp
hlt
jl
and
jmp
in
push
inc
imul
ljmp
movsl
shr
icebp
shr
shl
cmp
push
pop
loopne
or
lea
stos
ljmp
inc
leave
lods
aas
aaa
orl
inc
icebp
mov
xor
fldcw
outsb
nop
out
xchg
mov
pop
mov
jno
ljmp
cmp
stos
and
push
pop
sbb
outsl
xchg
mov
push
lcall
xchg
adc
or
fs
push
and
xchg
and
enter
or
std
inc
icebp
add
cmpsl
insl
cmc
sar
xchg
shlb
push
adc
orl
std
js
jmp
sub
push
adc
in
jns
fildll
std
test
pop
test
pusha
pop
adc
lahf
cwtl
lds
inc
jae
leave
repz
in
mov
xchg
mov
inc
jg
loop
xlat
ret
rorb
mov
add
inc
out
iret
jns
add
rcr
js
in
icebp
push
adc
cmp
stos
add
loope
insb
pop
or
lods
adc
pop
dec
jge
hlt
loope
mov
sub
inc
xor
push
iret
movsb
dec
ljmp
and
mov
xor
dec
clc
push
subb
call
xlat
mov
lret
movsb
lods
sti
lahf
mov
test
movsb
adc
dec
cld
add
mov
call
pop
test
mulb
xchg
jecxz
stc
xor
sub
add
enter
mull
push
icebp
iret
xor
mov
popf
or
xchg
mov
in
aaa
pop
aas
pop
repz
or
add
stos
jmp
nop
lea
dec
mov
call
ljmp
inc
lret
lea
das
dec
xor
xchg
sub
push
pop
xchg
pop
outsb
mov
xchg
pusha
enter
sub
mov
xchg
inc
jge
lahf
pop
shll
test
aad
xlat
push
divl
push
subb
bound
bswap
xchg
add
pusha
or
xor
cli
cmp
cmpsb
mov
std
mov
mov
rorb
pop
xor
aam
and
lods
add
sbb
scas
jg,pt
sub
lds
jecxz
es
lods
sub
out
mov
push
pop
cmc
out
mov
add
adc
scas
and
add
dec
outsl
loopne
cs
stc
mov
sbb
cmpsl
idivl
cmp
push
ret
cmc
inc
or
jo
jne
inc
orb
cmp
xchg
sub
fisttps
jp
push
andb
or
outsb
cmc
lahf
push
lahf
jle
jns
pusha
lods
inc
fwait
rclb
dec
dec
ret
mov
ret
mov
loop
loop
bound
push
jbe
mov
push
jbe
cltd
xor
iret
pop
js
movb
adc
dec
fisubs
lret
push
lea
fmuls
pause
adc
jne
push
jle
mov
sbb
dec
inc
push
dec
mov
push
testb
aaa
sub
sub
dec
lcall
and
mov
mov
insb
es
or
in
jae
divl
test
cmp
fsubs
subb
cmp
imul
clc
jne
or
nop
xchg
sbb
popf
dec
add
lret
nop
cmp
cli
fisttps
mov
jo
push
std
fisttpl
xor
test
rol
push
adc
fwait
out
in
in
mov
fs
scas
int3
ss
enter
mov
pop
inc
int3
fbstp
mov
lcall
sub
sub
inc
push
push
xchg
in
add
out
enter
adc
faddl
mov
inc
push
js
mov
push
shll
xchg
ljmp
fmull
or
jmp
push
sbb
add
ljmp
test
popf
push
sub
leave
adc
jl
mov
or
cmc
lock
stc
jecxz
mov
or
xor
in
pop
fbstp
aad
mov
push
jae
dec
mov
jg
shr
insl
and
cmp
push
add
ret
outsb
test
mov
shr
insl
xor
jb
xchg
test
mov
dec
lret
lcall
in
lret
out
es
lahf
mov
popf
jmp
adc
adc
jmp
lcall
les
adc
std
cli
jmp
inc
or
repz
and
shlb
call
or
lahf
int
lcall
adc
cmp
mov
or
lcall
jl
cmp
mov
les
adc
xor
inc
jl
mov
push
mov
sbb
cld
stos
sub
pop
xchg
add
icebp
adc
ror
inc
shl
push
in
call
add
fdivp
bound
sub
xchg
fnclex
inc
jg
push
mov
mov
leave
imul
repz
jle
leave
cmp
movsl
pop
enter
sub
dec
jmp
fisubl
mov
cmp
mov
pop
mov
test
inc
xchg
jbe
ljmp
dec
sbb
ss
popf
bound
shlb
test
inc
repz
mov
xlat
push
lret
out
add
jbe
jg
es
in
mov
mov
jo
add
shlb
mov
mov
mov
jae
xchg
popf
out
cmpsl
pop
mov
dec
push
push
mov
into
xchg
push
dec
or
jmp
dec
in
push
test
xchg
mull
mov
call
xchg
mov
ljmp
xor
ja
dec
sbb
int3
jo
in
jno
adc
loope
adc
in
push
mov
xchg
popa
lahf
jb
xor
cmp
sbb
mov
js
fisttpl
mov
aaa
outsb
lock
addr16
call
inc
or
adc
in
popf
cli
xchg
pop
mov
loope
fnstsw
in
jl
and
dec
stos
mov
xor
addl
cmc
movsb
subl
xlat
aam
std
stos
loop
dec
icebp
nop
or
mov
clc
imul
loopne,pt
xor
or
xor
cmp
push
xor
adc
rorl
push
xor
cmp
inc
mov
insb
out
notb
lea
xchg
or
aaa
ret
shr
dec
cld
pop
pop
or
icebp
imul
das
add
mov
test
adc
sbbb
pop
push
or
jne
and
cmp
out
sub
push
add
stos
xchg
jmp
sti
inc
test
les
dec
mov
and
cmp
mov
lcall
sarl
rorl
push
mov
or
frstpm(287
lret
xorb
mov
or
or
push
clc
lock
push
adc
fidivl
stos
add
adc
jp
imul
sbb
cli
xor
or
inc
xchg
out
lret
dec
popl
adc
cmp
add
inc
jp
lods
aas
mov
pop
lds
xchg
sub
repz
in
out
hlt
imul
adc
rclb
movsl
lret
cmp
out
and
ficoml
in
sbb
cwtl
aam
pop
sbb
sar
sti
adc
sub
mov
push
xor
jno
xor
inc
fiadds
pop
in
mov
push
push
stc
mov
bound
bound
dec
js
mov
mov
adc
aaa
jmp
or
pop
loopne
sub
mov
outsl
cmp
inc
pop
mov
and
cmp
rorl
lods
inc
pop
inc
mov
or
adc
and
xchg
sbb
xchg
sub
ljmp
lock
lock
je
das
in
or
data16
fistps
cmp
sbb
dec
cli
mov
rcl
or
cwtl
pop
sub
dec
outsl
rcl
fmuls
cmc
mov
nop
aas
sub
test
fisubrl
scas
pop
inc
frstor
mov
jne
sbb
mov
inc
outsb
pop
push
out
addr16
out
lahf
adc
jnp
fistl
lods
mov
or
mov
push
dec
jb
sub
aaa
push
xchg
and
pop
or
enter
scas
insb
test
xor
sub
xlat
push
cmp
adc
loope
call
push
lret
mov
and
jg
sbb
or
bound
mov
push
mov
inc
mov
testb
jae
shlb
sti
pusha
pop
jo
les
in
fldenv
ret
lds
ds
movsl
call
jp
sub
fmull
inc
flds
fsts
scas
dec
xor
pop
pop
xchg
and
repz
pusha
popa
call
inc
pop
mov
fcomps
jmp
in
imul
dec
add
add
jle
roll
lds
sub
jmp
fadds
scas
imul
testb
lret
mov
lcall
xchg
cmp
mov
ret
pop
sbb
and
inc
test
add
or
shll
fcmovnb
jno
xlat
xor
rorb
fld1
ror
inc
sbbb
dec
ret
or
xor
addr16
add
push
push
test
popf
daa
fsubs
push
in
pop
and
mov
out
rcll
xor
movsb
xchg
and
mov
or
dec
cmc
xor
ljmp
das
aas
dec
inc
mov
test
int3
dec
jns
xor
dec
aad
adc
divl
and
xor
icebp
dec
mov
bound
xor
jnp
fadd
arpl
jl
mov
repz
clc
mov
pop
add
nop
cmpl
adc
out
sub
addr16
push
mov
inc
jecxz
inc
sbb
fnstsw
insb
movsl
adc
les
ror
and
outsl
mov
jne
xchg
insl
mov
xor
in
mov
in
fmul
xor
add
fildll
mov
mov
sbb
gs
mov
xchg
xor
out
aaa
arpl
inc
lock
sub
lcall
cli
push
sbb
dec
and
push
add
pop
xchg
add
aas
shl
dec
test
scas
stos
movsb
jg
sub
sbb
xor
pop
xor
fiadds
jo
xchg
jl
sti
sub
fidivs
aad
cli
lcall
andl
arpl
cmpsb
lahf
into
mov
adc
roll
mov
fistpl
in
rcrb
mov
or
jbe
jle
les
test
cmc
leave
or
jmp
les
mov
jl
cmc
mov
nop
mov
adc
dec
rcll
cld
shrb
jbe
andl
dec
daa
inc
push
mov
in
or
inc
adc
fwait
inc
add
f2xm1
xchg
stc
push
or
mov
inc
icebp
push
xchg
sub
out
push
sbb
adc
mov
adc
jbe
pusha
lods
fimull
fdivs
inc
xor
fsts
xchg
xlat
loope
jle
int
adc
aas
xchg
mov
shr
add
std
fsubl
pop
lret
lds
insb
push
pop
pop
out
out
scas
cli
stos
jle
mov
jne
push
or
fstpl
ja
xor
mov
adc
jge
into
mov
pop
int
aaa
into
and
lock
leave
xor
lahf
mov
cli
push
shlb
sbb
add
mov
and
xchg
shlb
jmp
xor
push
mov
jge
and
sbb
pop
imull
cs
fsubrs
daa
ret
sub
mov
jle
cmp
ss
out
mov
repnz
je
loope
jo
lcall
insb
bound
fwait
test
push
std
int
int
sbb
and
in
xchg
stos
or
sub
inc
inc
out
mov
loope
pop
jne
fists
lcall
test
in
std
xchg
rcrb
xor
xor
mov
sub
mov
xor
inc
jns
add
insl
push
stos
in
loope
adc
mov
repz
pop
addr16
xor
mov
test
pop
gs
in
out
xor
repnz
mov
or
or
pop
jl
mov
testl
sbb
stos
in
dec
test
push
jp
dec
lds
fmuls
scas
fdivr
loopne
or
fdivr
mov
arpl
sub
cmpb
xor
pop
pushf
dec
lret
adcl
sub
xor
test
das
cmp
mov
pop
outsl
rcr
test
into
idiv
or
or
subl
and
cmp
mov
sbb
es
xor
push
das
dec
popf
and
inc
jecxz
push
mov
je
jle
sbbb
ss
add
xchg
add
out
mov
push
out
push
lock
pop
adc
scas
push
ja
xor
pop
mov
and
jl
jl
je
divl
inc
cs
popf
mov
shr
xchg
ficompl
sti
pop
sahf
inc
out
enter
out
lahf
nop
imul
lods
push
push
xchg
sti
fs
std
ret
mov
and
mov
mov
sbb
dec
mov
sbb
cwtl
xlat
sbb
mov
lods
pusha
xchg
inc
adc
dec
xchg
out
out
leave
sbb
loope
ss
frstor
and
int
sbb
inc
ds
jp
jbe
pop
jo
std
aaa
push
lcall
pop
add
add
or
enter
cli
out
push
lock
pop
mov
les
mov
in
lcall
inc
cmp
hlt
fsubp
test
movsb
sbb
cmc
mov
test
ds
out
adc
int3
or
push
dec
lds
inc
dec
mov
ss
dec
cltd
test
ja
out
xchg
faddl
lea
hlt
test
fwait
cmc
rclb
jge
jo
xchg
adc
adc
pop
mov
rorl
test
int3
mov
out
adc
ret
mov
push
loop
pop
loopne
enter
jno
or
inc
add
push
inc
movsl
frstor
jmp
xchg
dec
cmp
es
scas
aam
inc
pop
dec
push
rorb
xchg
repnz
lock
and
or
fldenv
nop
add
ret
or
add
jmp
add
cmp
jno
mov
in
xchg
jo
xlat
sbb
lods
in
push
jmp
lcall
xor
xor
setae
mov
jae
jmp
push
jmp
xor
pop
loope
mov
dec
adc
jecxz
jle
out
cltd
ret
shr
push
aad
mov
sub
xchg
mov
cli
sbb
pop
fcompl
sub
js
mov
sbbl
add
andl
mov
mov
mov
addl
add
movl
mov
movl
jmp
or
mov
xor
mov
adcl
add
mov
xor
mov
mov
xor
andl
add
movl
cmp
movl
je
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
adc
jl
mov
bound
push
clc
dec
jmp
pop
addl
lret
std
inc
mov
ss
mov
mov
lds
in
inc
nop
sbb
jnp
iret
push
or
int
xor
outsb
bound
lret
dec
add
push
imul
mov
movsb
imul
loop
stos
aaa
cs
rolb
or
xchg
lods
mov
lret
push
xlat
mov
sarb
ja
push
sarb
cmp
fdivl
popf
out
adc
movsb
in
andl
mov
mov
cltd
outsb
dec
inc
mov
inc
adc
dec
mov
jle
mull
std
mov
shl
popf
fdivl
jb
in
push
xchg
clc
ret
movsl
push
imul
mov
and
sub
push
incl
cmp
cmpsl
int
int3
cli
jp
xor
insl
call
jnp
xor
mov
fwait
test
sti
jmp
insl
dec
lret
add
pop
repnz
in
repz
jbe
mov
mov
adcl
icebp
or
lret
bound
adc
loop
sub
sub
mov
xor
xor
adc
push
xor
add
arpl
mov
or
insl
pop
jno
addr16
sbb
adc
or
xchg
pop
xchg
or
sub
incb
and
xchg
and
cmp
pop
xor
push
loopne
mov
jl
dec
fldcw
int
negl
aam
ds
stos
pop
pop
push
mov
or
clc
push
inc
sbb
jo
dec
or
ret
xor
out
das
icebp
or
lcall
pop
fnstcw
arpl
cmpsb
enter
add
push
scas
popf
dec
sbb
scas
and
xor
jmp
cmc
mov
xor
scas
subb
and
bound
jno
push
out
mov
push
mov
sbb
rolb
jnp
in
repz
or
out
cmpsl
aas
push
cmp
xor
xor
push
adc
mov
mov
clc
mov
aam
cmp
mov
cwtl
add
mov
mov
push
xchg
sbb
dec
jbe
pusha
and
stos
adc
dec
jns
adc
adc
and
rorl
aad
sub
enter
pop
popa
or
repnz
or
xchg
inc
cmp
dec
dec
jno
divl
lcall
inc
push
xor
cmp
dec
repnz
lock
sbb
out
dec
bound
jne
inc
not
cmpsl
shll
les
fs
roll
jge
ljmp
xor
inc
push
mov
mov
dec
push
pop
leave
imul
gs
addr16
add
inc
sub
lds
inc
fwait
data16
xchg
popa
cli
and
pop
sbb
out
push
scas
test
cwtl
je
jg
and
and
mov
loopne
or
or
cltd
scas
rclb
add
jo
xorl
sbb
aad
sub
es
sub
inc
cmpsb
inc
jmp
pushf
xorl
cmc
xorb
daa
jae
stos
push
js
int
dec
mov
dec
cmpsl
mov
cmc
or
in
jbe
xor
pop
lods
mov
stos
ds
cmp
cwtl
negb
push
cltd
jmp
daa
scas
pop
inc
adc
adc
das
jle
inc
push
roll
push
je
and
mov
xlat
int
lea
icebp
das
mov
dec
push
in
push
jmp
test
jl
fisubrs
xchg
ret
fs
fcompl
push
lret
ds
cmp
mov
or
pop
cmp
rcrl
out
insb
std
sbb
test
stos
jp
or
test
cmp
adc
mov
sub
je
jbe
aad
jne
push
call
aaa
push
xchg
inc
push
dec
dec
fcmovbe
inc
loope
xorl
cld
add
fists
xchg
xchg
and
mov
mov
cmp
pop
lods
mov
mov
inc
cmp
cmc
lcall
sbb
sarl
push
xchg
lock
call
mov
xor
jle
xchg
or
sbb
in
imul
ljmp
shl
xor
inc
fnstsw
fsubrs
inc
pop
pop
dec
xchg
popa
mov
pop
push
popa
fildl
pushf
orl
es
out
stos
jnp
jl
popa
pop
cmpsb
and
inc
inc
and
leave
sub
in
jl
ljmp
lret
movsl
jo
sbb
or
add
popf
jnp
outsl
sbb
adc
idiv
insl
inc
cs
adcl
fnsave
adc
into
mov
ficomps
cmp
sar
push
fistpll
cmp
jae
test
int
addr16
fbstp
dec
imul
dec
shll
leave
bswap
scas
testl
push
outsb
notl
mov
jnp
rorl
gs
fsubr
mov
add
pop
xchg
push
jl
push
xor
mov
repz
jb
mov
adc
xchg
arpl
std
mov
rclb
daa
sub
and
or
repz
mov
fcoms
rcrl
arpl
lods
mov
sbb
aaa
arpl
fidivrs
jle
repz
int3
lret
mov
jg
das
rolb
adc
mov
jb
testb
xor
cmp
insb
lcall
data16
mov
sbb
add
movsl
imul
daa
iret
add
fidivs
jge
popa
add
and
or
int
jmp
push
cmc
rcl
leave
addb
int
loop
dec
shrl
mov
dec
punpcklbw
lret
stc
out
adc
outsb
ror
sub
lods
ljmp
daa
sbb
adc
ja
es
cld
cmp
pop
pop
and
andl
adc
pushl
call
jg
push
cmpsb
push
dec
fwait
add
ds
inc
add
out
jo
sbb
pop
pop
int
aas
popa
test
mov
push
xchg
rcl
jno
lret
xor
loope
pop
mov
xor
pop
xor
jl
mov
dec
jle
mov
sbb
jecxz
icebp
cmp
pop
fmull
js
cwtl
push
add
push
scas
imulb
push
cs
pushl
mov
pop
adc
push
mov
rorb
push
inc
add
adc
mov
push
jo
sbb
inc
cli
mov
cmp
xor
cmp
dec
scas
lahf
shrb
rcrb
jle
mov
mov
cltd
mov
jbe
out
aas
imul
jno
fs
test
cmpb
or
xchg
and
mov
mov
fwait
inc
cltd
jb
mov
pop
and
clc
push
push
cmpsb
and
mov
in
sahf
and
in
push
pop
popf
and
nop
inc
adc
repnz
jmp
mov
pusha
inc
push
push
xchg
and
lock
add
push
dec
mov
sub
imul
es
repnz
jb
rorb
je
and
mov
xchg
push
testl
push
mov
sub
add
js
or
push
sub
xor
icebp
fs
jmp
mov
scas
scas
insb
loop
inc
daa
adc
subb
ds
shl
lcall
pop
lahf
aam
sahf
jo
rorl
fists
fstpl
loopne
dec
mov
cmp
pop
faddl
stc
dec
iret
aad
popf
fdivl
ret
jnp
fsubl
out
test
or
cmpsl
fldt
je
add
out
xchg
cmp
push
jno
pop
cwtl
mov
adcb
xor
mov
push
shl
ret
data16
cmpsl
adc
adc
jl
sbb
pop
mov
xchg
jbe
xchg
mov
sti
insl
sub
outsb
ja
sbb
mov
mov
lods
or
mov
xchg
fwait
xor
push
ret
inc
imul
test
xlat
ss
jge
push
call
call
push
xor
xchg
sti
inc
push
push
imul
adc
fnstcw
addr16
mov
add
sub
push
mov
inc
test
cwtl
pop
clc
fbstp
mov
cmpsb
sbb
mov
xor
lods
cmp
ss
in
iret
pushf
sbbl
loope
add
dec
inc
sbb
push
scas
jg
hlt
xchg
mov
jecxz
pop
xor
pop
sbb
fstps
sub
and
ja
pop
insb
scas
popa
inc
cmp
sub
hlt
dec
andb
xor
jge
ss
mov
stc
dec
mov
aad
fbld
repz
aad
das
dec
imul
adc
daa
cs
push
inc
pop
sbb
or
cli
imul
mov
xchg
push
jno
push
push
or
std
mov
mov
pop
ljmp
dec
jb
rdpmc
jbe
scas
adc
clc
jns
jge
arpl
addr16
mov
sub
inc
cmp
les
and
into
mov
mov
xor
fimuls
mov
fdivrl
jmp
push
insb
fcmovnb
xor
out
les
cwtl
pop
adc
cmp
mov
add
mov
gs
leave
mov
mov
sbb
push
inc
repz
jp
pop
adc
out
ficoml
mov
jl
pop
adc
or
hlt
mov
push
lods
sbbb
clc
lahf
xchg
mov
stos
out
out
shlb
xchg
sub
fadds
add
and
push
adc
clc
inc
daa
xchg
imul
xor
adc
outsl
or
daa
iret
addr16
dec
mov
in
out
hlt
mov
in
sub
cli
pop
adc
and
cmp
sti
pop
mov
jb
mov
sub
cmp
leave
inc
je
mov
pop
fildll
ja
cmp
bound
jg
dec
out
mov
out
sub
inc
aad
subl
hlt
cwtl
mov
lods
in
adc
aam
scas
pusha
inc
mov
push
shr
inc
mov
or
push
es
js
pop
adc
cmp
sub
inc
xchg
pop
sbb
in
sub
lea
rclb
jo
jo
and
sbb
repz
cmp
mov
fwait
orb
popf
sbb
repz
sub
push
adc
jg
dec
out
sbb
repz
xor
or
jp
inc
out
inc
mov
adc
cmp
adc
jno
inc
popa
and
sbb
out
fs
dec
jns
cli
filds
xchg
lahf
or
into
sbb
pushl
je
adc
adc
shlb
sbb
and
mov
push
cmp
fsub
addb
call
mov
jns
xor
cmc
or
mov
cmp
cmp
in
jo
mov
fs
jb
xchg
aam
loope
cmp
cmpsb
loop
dec
loopne
icebp
xor
or
mov
es
push
cli
xor
leave
scas
scas
les
inc
out
mov
xchg
test
dec
jno
cmp
scas
test
popa
mov
mov
fadds
std
sbb
aad
movsb
daa
push
sbb
mov
or
lret
ret
xlat
dec
jbe
inc
sbb
cli
adc
inc
jl
scas
sarl
jnp
stc
in
mov
jo
ret
ljmp
sbb
loopne
jnp
into
es
push
sbb
adc
ficoml
push
sub
insl
mov
push
popa
pusha
xorl
xchg
nop
or
pop
ds
push
pusha
or
add
rclb
int3
mov
mov
in
nop
xor
lock
adc
cs
dec
movb
mov
out
mov
lret
mov
dec
insl
mov
hlt
movsl
pop
and
out
and
fldt
push
dec
jne
lds
in
add
add
add
test
leave
call
adc
mov
sbb
iret
iret
or
pop
mov
daa
and
jnp
icebp
or
scas
or
lods
adc
fs
call
add
jmp
and
cmp
cmp
stos
adc
in
mov
ret
cmpb
ja
xor
dec
fbld
cmpb
sti
aad
or
add
pop
sub
mov
daa
push
movl
pusha
inc
pop
jle
xor
mov
in
push
jge
sbb
pop
sbb
fs
pusha
add
out
arpl
stos
stos
sbb
test
sub
incl
test
mov
cmp
dec
adc
push
aaa
int
xchg
lret
cmc
dec
popf
loope
leave
dec
pop
fdivrs
repnz
xchg
fstps
out
inc
and
xor
adc
lcall
xchg
xchg
pop
mov
lret
pop
push
mov
xchg
test
cmp
push
mov
out
das
mov
mov
fidivs
jno
in
sarl
jno
js
int3
dec
out
inc
cmpsl
inc
mov
in
aaa
dec
out
sub
pop
add
orl
lea
arpl
mov
push
loopne
xchg
pop
jecxz
loope
popa
test
test
add
pushf
bound
cmp
cmpsb
test
test
sub
ss
test
mov
xchg
test
jp
aaa
mov
imul
mov
adc
mov
jne
lret
and
mov
dec
xor
lcall
or
outsl
adc
aam
pop
lahf
xor
ds
cld
xor
cmp
cmp
xor
shl
popa
cwtl
mov
jecxz
and
pop
dec
mov
and
inc
movsl
mov
in
inc
addr16
in
jg
adc
cmpsb
sahf
out
jo
jle
push
xor
mov
adc
in
lret
bound
jg
mov
sbb
shrb
and
mov
mov
mov
outsb
mov
mov
adc
cmpsl
pop
das
scas
loope
sub
into
mov
jp
pop
fistps
enter
add
push
addr16
filds
jl
cmp
sbb
inc
sahf
add
xor
push
xchg
push
mov
shlb
xchg
call
test
add
dec
dec
push
ficoml
push
add
push
shl
mov
cmp
imul
sub
and
push
shll
dec
dec
imul
sub
add
aad
push
adc
out
mov
enter
insl
cmp
mov
or
and
stos
xchg
aad
addb
les
dec
jg
and
in
push
sti
out
enter
inc
push
cmpsl
in
movsl
ficomps
rcll
lea
negb
rcrb
mov
lea
push
inc
inc
jnp
cs
inc
ljmp
leave
clc
mov
or
andl
pop
cltd
pop
aaa
or
cmp
pop
pop
scas
insb
mov
out
andb
xchg
outsl
mov
dec
jl
jmp
shll
mov
sub
andl
add
je
bound
adc
fcoms
sub
mov
roll
stos
jg
scas
es
aam
mov
sbb
lcall
mov
mov
cld
mov
shll
mov
movsb
repz
imul
sub
lcall
rolb
mov
jnp
sahf
ds
xor
das
ret
int3
nop
fidivl
xchg
fnstcw
push
stos
scas
xor
or
fstps
jg
add
push
adc
mov
rorl
pusha
mov
push
mov
inc
mov
bnd
es
dec
leave
and
xor
test
mov
adc
xor
pop
popa
out
je
jmp
jmp
inc
sarb
jae
jmp
sarb
sbb
es
popf
mov
jnp
inc
into
sbb
jae
mov
fcomp
out
out
test
ja
lahf
cltd
cmpsb
pop
jp
pop
lods
dec
fsubs
xor
adc
and
aad
xchg
out
jmp
mov
fisttpl
jae
clc
icebp
inc
jge
sbb
les
mov
push
aad
call
jno
pop
cmpsb
leave
mov
ss
dec
rclb
mov
ljmp
mov
mov
mov
pop
pop
xor
mov
aas
sub
or
shlb
pop
mov
adc
adc
rcll
es
push
test
leave
ficomps
mov
sub
into
test
lea
jnp
sbb
shll
adc
dec
das
test
fistpl
jle
add
xchg
xchg
xlat
rclb
leave
cli
push
or
cmp
mov
mov
int
jge
loope
push
nop
inc
xor
mov
mov
mov
cmpsl
clc
push
test
sub
inc
jne
test
jne
or
inc
rorb
int3
cmp
adc
lods
mov
in
mov
jae
loop
aas
pop
adc
jmp
mov
inc
sti
inc
mov
fs
sbb
cmp
sbb
or
pop
sbb
js
lret
and
mov
pop
mov
in
dec
filds
mov
test
mov
xchg
es
mov
sub
out
outsb
pop
jecxz
inc
sub
push
push
cmp
xor
aad
push
dec
call
add
xchg
dec
xor
loop
movsl
and
dec
or
lock
roll
lea
jne
or
shlb
scas
mov
or
pop
lahf
cwtl
xor
inc
push
testb
mov
mov
fwait
rolb
sbb
fistps
sar
repnz
dec
or
xchg
lcall
push
add
icebp
ss
jle
test
and
sahf
cwtl
and
fmull
and
xor
gs
cmp
mov
inc
shll
mov
mov
add
bound
jecxz
loop
cmp
jae
out
and
stc
cmp
xor
dec
out
xor
push
arpl
ret
dec
aad
fistpl
bound
cmp
stc
xchg
in
pusha
mov
cmp
xchg
andb
xchg
add
jo
lea
xchg
clc
mov
or
pop
push
cmp
mov
stos
popf
scas
sbb
mov
test
stos
and
jo
xlat
mov
push
loope
xchg
pop
push
mov
roll
dec
jnp
movsl
test
stos
dec
movsb
or
xor
aaa
push
pop
ficoms
pop
fildl
pop
xchg
mov
push
fbstp
add
out
pop
push
or
movd
daa
adc
xchg
ficomps
push
lcall
jl
dec
or
sub
lahf
je
sti
or
mov
push
mov
cld
lods
adcb
fistpll
mov
ja
addr16
arpl
xor
adc
pop
call
pop
inc
out
inc
repnz
lcall
fwait
insb
repnz
push
jecxz
jmp
rorl
test
and
and
and
addl
mov
cmp
fmull
inc
mov
mov
test
mov
jle
ds
subl
push
xchg
mov
jno
filds
jmp
or
push
aad
add
stos
mov
shll
add
mov
fs
mov
notb
jge
sahf
pushf
sbb
in
daa
inc
jmp
or
sbb
pushf
testl
inc
jge
lret
xor
out
sub
mov
cmpsb
and
sbb
scas
pop
fs
int
inc
xchg
mov
pushf
fwait
xor
push
cld
push
dec
ret
or
dec
pop
sbb
into
jge
xor
cmp
jb
roll
stc
xchg
rorb
jne
sub
movsl
mov
in
movsb
test
push
test
dec
inc
add
sub
test
jne
add
popa
leave
aam
sbb
push
cmc
pop
cs
xchg
pop
dec
aad
mov
jae
mov
cmp
or
xchg
idivl
xor
nop
lods
mov
popa
lock
addr16
jbe
pop
ja
cwtl
push
or
lret
out
mov
out
mov
shl
test
cli
jae
mov
outsl
aas
mov
push
xchg
adc
fs
cmp
addr16
dec
mov
pop
leave
cli
xchg
outsb
or
pop
call
fmuls
add
test
and
enter
push
into
dec
addr16
push
addr16
scas
dec
add
xor
std
mov
popa
scas
pop
aam
jmp
pop
setns
nop
cmp
cltd
movsl
nop
adc
data16
nop
in
sub
and
push
je
out
stos
into
es
cmp
add
clc
or
mov
daa
xor
imul
push
or
add
popa
loop
jl
cltd
adc
rcl
push
push
add
mov
adc
add
mov
cmp
cld
mov
js
inc
xor
sub
sub
pop
xchg
daa
movsb
mov
ret
mov
inc
fbld
stos
repnz
ror
add
hlt
push
add
mov
and
push
push
cmp
adc
mov
pop
add
adc
dec
add
add
sub
mov
aas
adc
movsb
mov
addr16
in
jle
daa
adc
xchg
mov
ljmp
jecxz
lret
fwait
pop
sub
mov
sti
and
push
imul
and
adc
push
mov
popa
bound
push
mov
mov
push
popf
push
insl
fldt
test
sub
andl
mov
inc
test
push
lahf
xchg
adc
sbb
mov
xor
clc
out
push
adc
push
pop
inc
mov
fmuls
inc
das
lods
add
push
adc
mov
fwait
add
jb
fcomps
insl
mov
jb
cltd
or
cmc
push
shrl
into
jle
mov
fidivl
mov
add
ds
xor
lret
out
pop
fdivl
je
sbb
inc
sub
mov
jg
push
cmp
nop
jne
push
and
add
mov
and
xchg
cmp
mov
out
nop
or
mov
jns
aas
clc
movsb
ja
push
int3
inc
mov
inc
inc
jp
cltd
jo
push
fs
or
push
or
jno
xor
mov
sbb
cld
std
pop
lahf
mov
jb
cld
adc
xlat
xor
out
sub
cmp
lahf
loop
fcmovu
jne
stos
push
add
mov
inc
adc
lret
popf
dec
in
fistpll
test
mov
sub
lahf
mov
and
test
out
cmpsb
ret
jne
sub
in
out
adc
lcall
test
outsl
lock
lea
fs
cmp
dec
push
inc
mov
and
std
jbe
xor
jns
in
mov
sub
fdivrl
mov
fcmovne
arpl
out
xor
mov
pushf
repnz
push
iret
cmpsl
mov
jnp
cmp
push
lods
pop
push
or
and
or
push
sub
pop
dec
sbb
sbb
cmpsl
xchg
out
pusha
std
push
xlat
daa
jg
inc
cmpsl
xor
xlat
loope
dec
jbe
repnz
add
daa
inc
jbe
nop
cmp
ffree
push
jns
jno
ljmp
add
sbb
out
jno
mov
xor
sub
jo
movsl
mov
jle
jp
sbb
and
sbb
and
push
sarb
push
rorl
int3
sub
loop
in
das
adc
xchg
filds
pop
mov
decl
mov
jl
repz
gs
repnz
cmpsb
mov
lcall
popa
fidivrs
leave
mov
pop
sub
pop
into
xor
arpl
push
into
and
push
inc
pop
jp
xor
mov
lcall
sub
pop
xor
ret
add
push
add
stc
ljmp
jecxz
xor
mov
jns
mov
rorb
int3
cmpsb
outsb
rcrb
dec
xlat
pushf
cmp
or
and
fisubl
or
cld
push
sub
inc
xchg
sti
mov
dec
faddl
imul
fs
inc
jbe
fistpll
xchg
or
mov
les
and
jmp
mov
cs
lahf
lret
pop
mov
push
push
repz
mov
cmovne
daa
jmp
or
dec
sbb
fmulp
inc
imull
mov
lds
sbb
dec
shlb
mov
mov
or
ja
js
cmp
aad
pop
sar
mov
int
add
sub
out
cmp
dec
lds
gs
lds
cmc
mov
push
lods
mov
std
or
xor
aaa
fdiv
xor
mov
mov
imul
scas
movsl
sarb
jns
shlb
outsl
adc
andb
sub
or
mov
push
pop
push
mov
les
inc
cmp
leave
xor
sbb
mov
xchg
sbb
pop
popa
xlat
lret
aas
pop
push
out
loop
divb
push
daa
in
mov
arpl
cmc
test
sub
aad
jge
mov
and
mov
jge
jg
adc
ss
add
hlt
rcrl
mov
out
add
sbb
imul
jmp
in
aaa
in
movsl
inc
imulb
addr16
dec
adc
xchg
inc
movsb
jge
and
sub
jbe
aad
aam
jecxz
and
sub
lods
inc
push
iret
aam
sbb
pusha
daa
and
lahf
pop
pop
out
sub
fmull
pop
outsl
enter
cmc
cwtl
pop
and
push
xchg
ja
shlb
adc
std
jmp
pop
mov
loope
cmpl
mov
cmp
clc
push
mov
mov
pop
sahf
arpl
pop
jne
and
jnp
pop
pop
inc
test
cld
rcl
sub
mov
mov
icebp
push
out
cmpsl
adc
cmp
sub
ret
pop
sub
xchg
cmp
pop
ret
into
addr16
push
shlb
iret
imul
xor
mov
mov
jb
push
xchg
leave
fmull
adc
pop
adcb
jns
test
or
fisubrs
pushf
movsl
push
jno
stos
lcall
lea
jns
paddd
out
and
lods
cmp
xchg
dec
sub
adc
xchg
add
insb
aad
sub
fst
cwtl
xchg
push
enter
inc
pop
mov
test
roll
cmp
adc
pusha
push
fwait
mov
aas
or
fcmovbe
lret
lea
jnp
and
adc
push
cltd
repz
push
pop
xor
fldenv
add
fimuls
loope
imul
leave
out
dec
aam
add
sub
inc
cmp
cmc
fsubl
ret
xchg
mov
lods
leave
push
outsl
jecxz
iret
imul
out
pop
je
inc
adc
dec
jo
das
les
aas
jg
mov
je
xchg
pop
test
sub
xchg
cwtl
scas
mov
fcoms
jo
clc
gs
in
cmpsl
sub
dec
pop
int
negb
ret
lahf
iret
fiaddl
shr
inc
daa
ret
jne
sub
imull
sub
out
xchg
cmp
ss
call
jmp
clc
dec
int3
daa
je
into
xor
fistpl
ret
jae
fwait
mov
inc
aam
mov
fucom
imul
shll
in
ret
and
sahf
sbb
pop
int
and
cwtl
jge
xchg
sahf
mov
lret
arpl
rcrb
rclb
lret
push
add
pop
cmp
es
jns
jns
aam
jb
sbb
push
jge
jl
push
xor
cwtl
fimuls
xor
lahf
adc
sbb
jae
call
in
jmp
aam
in
sbb
dec
nop
push
aas
push
pop
jmp
lar
xor
dec
fisttpl
adc
jmp
jae
sti
out
jne
adc
jg
mov
cmp
push
pop
lock
mov
cmpl
jle
and
cld
xchg
dec
dec
sbb
and
idiv
adc
push
xchg
test
out
sbb
fsts
xchg
ficoms
ja
xor
je
imul
scas
sti
repnz
sub
outsb
inc
xchg
xor
mov
scas
movsl
mov
adc
jo
cltd
cltd
int
pop
lahf
fcompl
fidivrs
loopne
ja
sbb
push
sahf
rcl
sub
pop
ljmp
es
movsb
je
dec
frndint
inc
mov
jmp
cmp
leave
sti
inc
lods
bound
xchg
sbb
cmp
in
out
inc
add
jle
sub
lret
push
outsb
adc
out
out
ds
sub
mov
fcompl
adc
jge
cltd
sbb
pushf
jno
mov
dec
das
inc
adc
lea
inc
mov
jge
lret
aas
push
sbb
fcmovb
mov
cmp
scas
lahf
pop
cvttps2pi
clc
xchg
jns
mov
mulb
rcrl
dec
lahf
add
popf
ljmp
xchg
out
repnz
rorb
lcallw
push
inc
add
hlt
sub
xor
add
sti
dec
xchg
std
inc
inc
jge
jo
xor
repz
lea
enter
iret
ja
jg
fcmovb
lea
ret
jg
mov
xchg
sub
lahf
xchg
aas
insb
pop
inc
xchg
push
dec
js
rcrb
mov
pop
sbb
or
or
mov
pop
add
in
fbstp
or
pop
or
xor
je
jmp
cld
pop
mov
mov
and
ret
call
filds
rcl
pop
xchg
mov
dec
leave
cmp
xlat
hlt
mov
sti
adc
mov
scas
push
or
and
ss
es
cmc
xor
pop
xor
adc
jge
mov
and
push
or
js
mov
sti
rclb
mov
cmp
or
outsl
cmp
mov
out
xchg
push
adc
negb
lea
fcoml
sahf
jmp
int
xchg
cmp
lods
lods
test
add
dec
sub
push
adc
inc
xor
xchg
sbb
sbb
push
inc
out
int3
jbe
js
jb
fnop
push
cmp
lods
pop
cltd
mov
or
enter
pop
pop
std
mov
imul
pop
xor
popf
test
mov
xchg
fcoml
push
mov
push
xchg
repnz
pusha
dec
dec
inc
sub
adc
xchg
into
pop
das
or
imul
push
mov
hlt
jge
je
into
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
jmp
test
jl
out
mov
sti
loopne
call
addl
dec
stc
lea
push
inc
in
jge
mov
aad
dec
scas
dec
dec
jecxz
xchg
rclb
jge
in
ret
cmp
push
outsb
add
jmp
out
jnp
xor
pusha
push
inc
jmp
add
mov
pavgb
add
jb
pop
fcoms
or
loopnew
ficoml
jmp
lret
xchg
and
repz
outsb
adcb
mov
inc
in
pop
adc
xor
xchg
jbe
dec
nop
shlb
mov
dec
pop
push
pushl
xchg
and
jp
push
add
sub
stc
push
inc
shlb
and
insl
jl
movsl
leave
jne
xor
fcmovu
add
cli
out
jmp
icebp
or
push
dec
and
in
std
fldenv
test
into
imul
cmp
mov
out
sti
cld
mov
mov
bound
mov
pushf
inc
lds
call
popa
sahf
add
mov
ds
jmp
call
aas
xor
dec
push
ret
mov
pop
jp
daa
pop
orl
xchg
mov
dec
inc
jp
daa
push
jno
jge
iret
rcll
jnp
jb
inc
sub
aad
pop
sahf
or
jnp
shrb
push
mulb
aam
movsb
movl
add
fidivrs
and
dec
push
outsb
mov
xchg
insb
sub
mov
in
push
mov
cmp
xor
cmp
outsl
in
mov
cwtl
mov
enter
out
mov
cmp
mov
popa
add
push
dec
cmp
test
fst
or
cmpsb
orl
and
or
dec
add
mov
jne
in
data16
dec
test
jge
mov
pop
xchg
xorl
push
insl
fisubl
inc
inc
scas
outsl
push
xchg
adc
es
ud1
loopne
fiaddl
xchg
out
dec
push
xor
push
stc
in
fucomp
jp
sub
jns
mov
push
mov
lock
pop
aas
push
out
pusha
in
aad
divb
xor
insl
dec
fisubs
add
hlt
in
mov
cwtl
and
jle
fstpt
inc
fdivs
inc
sbb
popa
std
mov
mov
in
clc
push
sub
iret
in
mov
fmull
pop
repnz
inc
cmp
or
sub
in
jb
inc
xor
adc
push
pop
jb
ss
std
movsb
jmp
adc
cld
jecxz
cmp
jnp
gs
mov
dec
repnz
in
fdivs
arpl
push
xor
enter
sbb
cltd
jle
sbb
jg
push
insb
pop
test
filds
outsl
cwtl
mov
popf
mov
mov
stc
sbb
sti
fldl
mov
mov
out
push
jbe
push
xchg
sahf
test
lcall
stos
into
push
stc
rcrl
ja
xchg
loopne
scas
lock
frstor
fwait
pop
xchg
sahf
pushf
cmp
cwtl
pop
cmp
xchg
aas
jge
ret
pop
mov
icebp
mov
loope
adc
jns
arpl
pop
sub
mov
or
mov
aad
sbb
xchg
mov
stos
xchg
out
mov
call
xchg
push
lret
xlat
mov
push
aad
rcrb
cmpsl
pop
dec
stos
mov
adc
cmp
fsubr
ret
cmpsb
push
loope
fisttpll
insl
xor
mov
arpl
sub
dec
jl
xor
cmpsl
sbb
insl
lcall
pushf
arpl
xchg
jge
adc
notl
mov
jb
jae
outsb
or
inc
lret
jmp
cli
leave
fists
outsb
repz
cs
insl
notl
shrl
mov
mov
aas
sub
inc
fsubr
mov
mov
and
in
adc
int
mov
rclb
dec
daa
enter
inc
mov
pop
dec
mov
std
das
sbb
sti
fidivl
lock
lcall
cmpsb
lcall
dec
pusha
or
adc
jl
push
or
lds
jge
adc
dec
test
lret
add
xchg
lock
lock
adc
mov
imul
gs
pop
nop
adc
jno
cmp
out
lcall
mov
mov
loop
sbb
lret
mov
pop
jbe
cmp
fisttpll
rorb
add
shlb
lahf
sub
cli
dec
daa
inc
adc
ljmp
in
clc
xor
jns
mov
in
add
mov
fiaddl
cmpsl
in
xor
inc
das
push
mov
jmp
loope
pop
sub
inc
roll
xchg
adc
js
sub
add
jne
jbe
mov
pop
ss
daa
shr
dec
add
bound
sbb
xchg
sub
cld
or
sbb
jg
add
mov
data16
xor
repz
xchg
mov
int
mov
xor
sbb
fdivrl
push
cld
pop
mov
dec
mov
cmpb
lock
sahf
fnsave
in
xchg
jne
jp
sbb
outsl
popl
fidivrl
sbb
dec
stc
xor
jnp
mov
lahf
jmp
jl
sbb
aad
lea
adc
pop
add
fiaddl
xchg
div
out
loop
clc
sahf
cmp
dec
pop
les
lret
add
test
adc
stc
mov
adc
xchg
ljmp
out
sub
dec
lods
loop
fwait
sub
cmpsl
lods
pop
call
leave
adc
xchg
push
pop
adc
stc
in
sbb
xchg
test
push
test
push
add
adc
mov
adc
cmpsb
mov
inc
push
ror
adc
mov
push
jnp
jecxz
sub
je
movsl
cmp
jae
stc
shrl
ss
das
or
aad
cmp
mov
or
fldl
pop
faddl
mov
add
ljmp
sti
jo
mov
into
jns
xor
adc
xchg
push
cld
outsl
add
out
jmp
int
data16
ja
pusha
in
pop
fbld
push
ss
out
mov
lret
mov
xlat
and
push
cld
lds
push
dec
popf
es
jl
filds
jne
xor
mov
jb
pop
sete
cmpl
movsl
and
ljmp
lock
pusha
call
lea
cmp
icebp
mov
scas
cmpsb
cmp
mov
fcomps
lds
and
jmp
jge
dec
jg
jns
jle
cld
iret
out
lods
scas
jg
ds
mov
adc
pop
gs
cmovs
pop
pop
lods
mov
sub
push
mov
mov
dec
loope
mov
fcomps
jp
sub
xor
lods
outsl
btc
xor
stos
or
lahf
testb
dec
mov
mov
add
push
lock
mov
hlt
scas
clc
mov
xchg
int3
push
dec
shll
movsb
pop
mov
js
mov
and
lret
or
and
xorb
or
add
sbb
inc
jecxz
jmp
inc
dec
cli
divb
das
and
add
dec
inc
mov
dec
repz
sahf
sarb
push
fcomps
and
dec
es
addr16
jge
cli
imul
js
push
push
mov
lock
and
cmpb
sbb
add
add
insb
lock
jae
sbb
sbb
jle
int
sbb
jno
std
inc
cs
pushf
out
aaa
mov
pop
push
arpl
xor
mov
stos
cwtl
jmp
push
inc
loopne
pop
lret
mov
fcmovnbe
dec
loop
ret
dec
jle
mov
jg
jne
mov
ret
xchg
push
clc
test
stos
sub
bound
roll
push
mov
dec
aas
dec
push
notl
mov
xor
push
push
push
clc
leave
testl
fiaddl
outsl
mov
jmp
lods
outsl
cmpsb
test
cmp
sbb
stc
int3
addr16
mov
insb
imul
pop
sbb
ror
and
daa
jp
divl
adc
incl
in
cmc
xchg
sub
ftst
mov
icebp
fadd
pop
insb
das
xchg
inc
sbbb
popa
repnz
test
push
adc
pop
lds
and
fnstenv
shll
ds
and
insb
frstor
pop
push
xchg
adc
xchg
push
stos
push
bound
push
jge
pop
cmp
mov
mov
or
std
push
cmp
push
cmpsl
cmc
jg
cmp
clc
out
mov
and
sbb
jge
movsl
rolb
cmpsl
rorl
push
loopne
xor
dec
mov
inc
stos
icebp
push
mov
sbb
sar
jns
jl
das
in
pusha
sahf
ljmp
add
or
push
incb
call
mov
test
fsts
rorb
dec
push
out
sub
scas
imul
jbe
js
mov
mov
adc
mov
ret
adcb
repz
adc
mov
in
cmp
push
inc
insb
add
in
hlt
repnz
and
jg
mov
adc
mov
andl
xlat
xor
in
and
pop
pop
dec
movl
cmp
sbb
test
in
push
jecxz
pop
jbe
ret
inc
jae
out
mov
pop
mov
xor
test
xchg
outsb
mov
jb
negb
inc
aaa
std
out
dec
stos
push
outsb
pop
cld
jecxz
sub
pop
cmpsl
sbb
mov
pop
insl
out
test
stos
shlb
push
sbb
les
sahf
mov
aad
or
jae
pop
mov
lods
dec
lock
xor
sbb
gs
xchg
add
mov
insl
in
les
ds
pop
or
push
xchg
push
mov
jg
dec
mov
mov
and
loope
xchg
in
xchg
inc
sbb
out
xchg
push
pop
push
mov
mov
lahf
aam
inc
mov
push
cmp
arpl
dec
xor
mov
adc
push
in
fildl
addl
mov
push
sahf
mov
bound
jg
ja
adc
or
sub
xor
jae
mov
mov
fs
test
pusha
into
dec
sub
mov
add
xor
mov
in
xlat
add
jmp
mov
jns
jne
hlt
je
lock
jnp
movsl
sbb
insb
ja
sbb
ljmp
test
mov
jae
mov
sbb
sub
pop
adc
xor
cmpb
or
imul
pop
jb
lret
sarl
out
pop
or
cld
inc
and
mov
lea
loope
fisubs
xchg
leave
pop
pop
pop
bound
aad
movb
jno
xor
xchg
and
imul
icebp
nop
cmpsl
cmpsl
pop
xchg
orb
ficoml
sbb
adc
iret
mov
cs
lea
push
das
loop
mov
lods
call
sbb
wbinvd
cwtl
mov
cli
add
and
mov
negl
pushl
pop
hlt
jbe
mov
sbb
fisubl
fcompl
push
aad
lret
lock
inc
enter
or
mov
inc
sbbl
stc
sbb
lea
jns
xor
add
or
sbb
test
xor
xor
das
and
pop
or
test
sub
and
xchg
push
pusha
iret
int3
sub
jnp
loopne
push
int3
jb
aas
shlb
xchg
cwtl
push
aaa
sarl
jns
mov
divb
inc
fldcw
aam
test
pop
mov
cld
mov
cmp
push
fidivrs
push
or
sub
je
scas
xchg
loopne
mov
jno
pop
xor
jbe
hlt
inc
inc
lds
sub
mov
stos
std
mov
sub
or
test
daa
adc
mov
push
add
es
xchg
repnz
js
push
and
mov
or
xor
dec
sahf
xchg
aas
bound
inc
sub
inc
pusha
gs
repz
push
jge
jg
or
xchg
out
aaa
adc
sbbl
movsb
xchg
insl
stc
lret
lock
cmpsb
mov
xlat
cmc
incb
jns
in
loop
xchg
fs
scas
popf
nop
add
dec
mov
lock
xlat
pop
arpl
stos
inc
push
jmp
mov
cmpsl
pop
lcall
inc
stos
in
mov
lret
in
shll
and
sub
stos
sahf
jno
inc
jae
and
in
sub
loopne
sub
inc
and
adc
daa
xchg
mov
dec
cmp
pop
enter
mov
jmp
imul
pop
mov
ror
xor
add
cmp
pop
jno
push
jae
push
imul
mov
cmpb
mov
data16
jge
mov
jb
fbstp
psrad
ficomps
pop
lret
sbb
push
sub
xchg
sbb
shlb
iret
aas
and
or
iret
arpl
ja
popf
and
out
test
jno
sbb
sbb
ficomps
aaa
xor
enter
popl
fisttpl
mov
movsl
push
pop
xchg
into
nop
addr16
movsb
sbb
pop
xchg
xlat
test
jne
or
filds
addr16
cmp
mov
std
jnp
mov
sbb
push
jmp
imul
ret
loope
bt
mov
push
adcb
cmp
std
sub
mov
jne
push
sbb
xchg
jb
les
fiaddl
sbb
pop
add
pop
add
out
pop
jecxz
mov
add
mov
fistl
out
outsl
in
sub
mov
mov
or
ds
cld
add
mov
mov
es
mov
mov
dec
mov
jg
jb
mov
fstl
xor
aaa
jle
mov
js
jb
sarb
daa
sbb
sub
xor
push
lods
test
mov
divb
addl
mov
decb
rorb
mov
fbstp
sub
int3
fbstp
mov
sbb
adc
cmpsl
inc
scas
push
mov
mov
mov
lock
xchg
xlat
ss
mov
push
shlb
mov
sub
dec
or
sbb
sbb
jno
sbb
movb
add
sub
in
mov
pop
cmp
shll
add
xchg
dec
mov
out
push
icebp
or
pop
cmc
lods
mov
repz
outsb
nop
daa
cmp
scas
int3
dec
pop
ss
add
xchg
cmp
neg
jle
adcl
cmp
cmp
ret
mov
mov
inc
pushf
or
cmpsl
inc
or
int3
ss
pop
mov
jge
inc
mov
mov
fld
cmp
ficoms
sub
fmuls
or
jge
cmp
mov
add
push
sub
popl
test
mov
sti
inc
je
pop
fwait
in
sbb
mov
mov
mov
push
ja
minps
cmpsl
pop
repnz
neg
or
adc
cwtl
shlb
cmp
pop
ror
filds
xchg
sti
jb
jg
repz
xchg
movsl
sbb
mov
cld
outsb
les
jb
cld
aaa
in
jno
lods
xchg
sbb
mov
in
arpl
enter
out
cmp
mov
ja
sub
adc
inc
loopne
dec
addr16
fsubl
push
mov
rorb
pop
adc
psubusw
subb
test
sub
adc
pop
hlt
std
fwait
cmpsb
das
mov
xor
out
inc
push
frstor
fstpt
dec
mov
fildl
fucomip
cmp
sbb
mov
scas
push
dec
insl
adc
rorl
inc
clc
sti
push
pushf
jp
sbb
xor
mov
test
jnp
xchg
cmp
outsb
out
lret
fldenv
add
fs
fwait
hlt
in
pop
shlb
shr
dec
cli
jo
xor
adc
push
int3
xchg
icebp
int3
pop
pop
loope
mov
jl
call
jle
push
int
pop
xor
mov
cld
pop
ja
sub
mov
mov
sti
hlt
mov
xchg
push
push
aad
les
or
scas
push
daa
adc
cmp
mov
fadds
ja
call
mov
xor
daa
mov
mov
iret
xchg
mov
push
popa
outsl
and
mov
popf
dec
or
or
popa
loope
scas
mov
jne
sbb
dec
ret
inc
aas
push
push
movsl
and
mov
dec
scas
push
inc
push
out
jb
cmp
xor
imul
js
sahf
push
jae
lods
cltd
jp
pushf
repz
pop
jne
push
cwtl
cmp
dec
fstl
fsts
filds
ficoml
jecxz
jae
stc
xchg
xor
fs
mov
xorl
add
jle
loopne
mov
pop
lahf
fcomp
pop
cmpsl
mov
pushf
or
inc
mov
ret
cmc
popa
in
xchg
xor
fucomp
adc
pop
psubusb
xchg
call
push
sbb
mov
jb
mov
neg
pop
sbb
leave
xchg
insb
lret
test
mov
mov
stc
push
aad
push
xchg
hlt
inc
sub
sbb
aas
jnp
repnz
or
jl
push
jl
mov
aaa
leave
mov
jnp
sbb
leave
adc
adc
or
pop
or
cmp
insl
je
je
test
sar
mov
add
jl
enter
ret
imul
sarb
jmp
push
mov
jle
jge
insl
in
mov
sbb
xor
out
icebp
xor
in
cltd
mov
xor
imul
inc
and
xchg
and
inc
jge
cld
int
adc
leave
or
jmp
mov
xlat
lea
popl
pop
jg
push
push
push
xchg
jge
repnz
and
insb
push
mov
xchg
stos
jg
mov
fidivrs
test
push
lock
inc
sbb
xchg
out
jg
push
cs
faddl
dec
les
mov
in
arpl
icebp
fs
jae
cwtl
loope
pop
call
bound
push
mov
cmp
iret
mov
aaa
adc
cmp
push
shlb
stc
pusha
inc
mov
and
push
jge
xor
xchg
add
aas
fiadds
fstp
jle
pop
adc
cmp
xor
movsl
and
sbb
pop
mov
mov
dec
xchg
add
pop
outsw
sbb
dec
sahf
test
sti
push
xor
jb
xor
and
loop
ja
je
shlb
mov
fldl
rcrl
rolb
sbb
fxch
clc
pop
pop
mov
cmpsl
cmp
movsb
loop
lret
and
pop
push
and
insb
test
mov
stos
loop
sub
or
bound
outsl
sub
xchg
sbb
outsl
xchg
out
das
jmp
cli
inc
out
stc
sub
mov
jo
and
out
mov
clc
push
jge
mov
stos
cwtl
push
inc
sub
int3
jb
movsl
ror
push
rcr
ret
cmp
mov
jg
inc
test
pop
jmp
push
push
gs
sbb
pop
inc
and
mov
js
dec
pop
xor
push
fs
mov
and
inc
test
cltd
out
mov
jne
mov
movsl
jnp
xor
pop
out
scas
fisubrs
test
fmuls
mov
inc
or
mov
dec
fisttps
pop
sete
cwtl
jecxz
call
xor
faddl
jo
mov
or
mov
mov
fsubrl
sub
stc
jge
icebp
xchg
ljmp
xchg
push
push
adc
add
cmp
push
sarl
out
scas
ret
int
mov
lods
mov
and
or
dec
je
lret
clc
stos
jge
xchg
addr16
shlb
inc
out
scas
push
insl
nop
sub
xchg
aam
sbb
or
adc
push
test
xlat
lods
mov
fildl
in
jl
aaa
and
and
jns
pop
fidivrl
or
inc
out
fisubl
popf
xchg
or
fcompl
cmp
push
mov
mov
addr16
add
jbe
cwtl
sub
jb
sti
inc
cld
pushf
pop
push
fistl
sbb
sbb
pushf
in
int3
jno,pt
pusha
es
jne
clc
ret
sub
cld
bound
insl
mov
mov
pop
xlat
loopne
fdiv
inc
stos
out
xchg
sbb
js
xchg
lods
jae
daa
sub
or
int
nop
sti
jg
sbb
mov
ficompl
mov
add
lcall
fsubs
aad
dec
cmc
jnp
add
ja
out
push
repz
leave
and
das
xor
pop
cwtl
jno
mov
bound
add
dec
out
push
sub
xchg
out
les
in
test
push
cmp
push
gs
out
sub
push
rcll
sbb
enter
sti
adc
rol
inc
inc
mov
sbb
cmp
loopne
roll
xor
pusha
mov
movsb
mov
out
inc
in
dec
cltd
scas
in
push
lcall
lods
inc
mov
xor
inc
test
cmp
aaa
addr16
lods
jg
sbb
sub
sbb
and
insl
mov
or
in
lret
test
jno
addb
out
jle
outsl
inc
mov
leave
mov
sub
jl
jp
sub
scas
fwait
jb
test
insb
cmc
push
jge
jb,pt
mov
xchg
xchg
sbb
adc
cmp
mov
push
xchg
cli
stos
mov
popf
movsl
data16
hlt
sti
mov
nop
sbb
bound
lea
pop
sti
mov
gs
pop
shrb
cmp
das
mov
dec
pop
fidivrl
pop
scas
out
loop
sub
movb
push
mov
les
pop
test
xor
push
into
jmp
stc
out
add
lods
adc
mov
jmp
push
or
pusha
fdivl
xor
js
scas
pushf
outsb
mov
or
addr16
call
outsb
stos
xchg
fnsave
add
pop
jle
or
mov
in
lods
lods
jmp
or
xor
jb
mov
testl
test
sub
je
scas
pcmpeqb
popf
lock
add
test
cltd
movsl
je
xchg
xchg
jb
cmp
imul
aaa
and
jp
or
jo
mov
std
shlb
add
mov
lcall
mov
xor
popa
mov
jne
xchg
xor
inc
sbb
pushf
fisttpll
adc
int3
pop
dec
add
push
jno
push
out
xorl
or
stos
or
mov
repz
sbb
aas
xchg
aaa
xor
neg
mov
in
add
mov
gs
pop
mov
dec
out
bound
lds
loopne
cmp
pop
mov
adc
mov
dec
mov
cmp
ficoml
push
test
dec
lret
pop
dec
sub
inc
or
hlt
jmp
push
push
pop
push
int3
scas
mov
int3
ja
xchg
push
lods
std
xchg
scas
jge
or
dec
cmp
jl
or
cwtl
sahf
jne
leave
jo
subb
jb
xchg
mov
add
pusha
mov
push
outsl
testl
test
add
sub
or
xor
pop
adc
adc
mov
movsb
sbb
mov
pushf
lea
xlat
push
call
adc
popa
xchg
xor
mov
push
adc
clc
push
cmp
scas
movsb
lret
or
jb
mov
mov
addr16
mov
cmp
lea
pop
test
inc
test
sti
xor
mov
outsl
push
rclb
lahf
es
fldenv
clc
loopne
in
add
pop
insl
xor
out
outsb
push
adc
iret
mov
sub
test
out
scas
imulb
mov
in
pop
pop
stos
movsb
xchg
divl
xor
dec
pop
sar
xchg
addb
rclb
push
adc
push
fst
in
hlt
shrb
xor
add
loope
pop
push
jge
fbstp
sti
cmp
cld
xor
cmpsl
and
adc
mov
ss
jno
negb
dec
sbb
or
mov
or
lret
xchg
out
outsl
jbe
cltd
mov
pushf
popl
movsl
mov
fstpt
jo
addr16
xchg
lods
mov
hlt
xchg
icebp
scas
ljmp
into
je
popf
inc
pop
mov
xor
loope
cmp
lret
cld
xchg
mov
pop
es
adc
jle
pop
cld
cli
or
or
push
insb
hlt
rorl
add
cmpl
rorb
aad
dec
pop
and
cmpsb
test
gs
stc
jne
fs
pop
ljmp
sbb
rcrl
mov
lea
push
jmp
int3
cmp
sbb
test
mov
cmp
repnz
repz
test
fisttpl
aaa
cld
mov
aaa
xchg
hlt
mov
lods
movsl
xor
les
mov
cld
fwait
mov
ficomps
rolb
mov
xchg
pop
jg
jne
cli
jbe
and
adc
idivl
push
sub
call
repz
aad
add
or
int3
mov
adcl
mov
xchg
mov
fistpll
fsubr
cmpb
push
shlb
xchg
sbb
addr16
rol
das
pop
push
mov
mov
jns
dec
inc
add
je
orb
xor
push
sbb
inc
fdivl
lahf
add
or
adc
out
dec
dec
clc
enter
or
ja
shll
mov
cmp
jmp
xor
jmp
in
adc
out
sub
sbb
mov
out
add
xchg
mov
mov
test
icebp
mov
and
xor
out
jmp
scas
fildll
sbb
add
pop
sub
aad
out
dec
dec
mov
pop
inc
jp
push
mov
adc
jp
pop
sbb
mov
xchg
and
xchg
jle
test
call
pusha
mov
jbe
aas
or
lea
cmp
dec
xor
and
mov
mov
dec
cs
adc
sub
jno
stc
stos
xchg
int3
loop
aad
jns
and
test
jo
mov
mov
push
loop
jo
xchg
sub
add
sbb
pop
cmpsb
push
inc
jge
incb
dec
cltd
sahf
into
mov
xchg
jo
jae
push
cmp
stos
test
shll
test
adc
push
stos
je
test
mov
ja,pt
insl
push
mov
cs
outsb
out
out
in
iret
sub
cmp
push
adc
imul
mov
or
mov
outsl
and
mov
setns
pop
cmp
mov
lods
jno
or
test
call
mov
jae
dec
dec
sbb
int
imul
insl
stos
xor
lahf
outsl
cld
adc
movsb
leave
arpl
mov
cwtl
adc
xchg
popa
inc
jne
loope
daa
insl
rcrb
cmp
xor
jbe
loopne
mov
xchg
inc
fiaddl
iret
je
and
mov
iret
je
sub
and
sbb
rolb
aas
add
mov
movsl
fisttpll
mov
inc
frstor
or
cmpsl
and
jne
or
push
sub
jle
les
pcmpgtb
mov
mov
repnz
rolb
inc
out
cwtl
pop
pop
cmp
fwait
or
push
dec
gs
lods
sbb
mov
and
and
cs
sbb
xchg
pop
jno
mov
add
add
and
notl
addl
popa
push
adc
pop
push
xchg
cmpsl
mov
push
stos
imul
mov
addr16
or
clc
loopne
jg
arpl
fwait
jne
push
sub
mov
jmp
stos
ret
into
fs
insb
sub
xor
adc
mov
mov
insl
xchg
dec
mov
mov
out
push
xchg
xchg
mov
cli
aaa
jbe
add
push
pop
add
add
fwait
out
dec
mov
out
pop
or
out
pushf
inc
mov
xchg
movsb
iret
ficompl
mov
mov
add
pop
test
push
clc
mov
out
fisubrl
inc
scas
adc
icebp
or
call
dec
sub
mov
insb
or
xchg
sub
stos
testl
adc
jnp
mov
jo
outsl
dec
cmpl
scas
mov
aaa
popf
push
sbb
out
xor
pop
mov
mov
mov
insl
lock
xchg
dec
push
pop
ret
scas
mov
pop
es
in
out
jl
pusha
sbb
imul
pop
dec
mov
jg
mov
call
or
xor
jno
push
pinsrw
clc
add
adc
call
insl
cwtl
ret
push
pop
jg
rcr
cmp
repz
ret
dec
mov
jo
out
push
add
xchg
mov
pushf
cmp
lock
stc
jbe
jns
cmc
scas
mov
mov
out
and
pop
clc
jnp
dec
push
rorb
das
repnz
movsl
pop
int3
push
xchg
movsl
lea
add
mov
inc
dec
jge
cli
inc
jo
mov
pop
aas
pop
mov
ja
mov
clc
xor
inc
mov
fldt
xchg
lret
lock
std
les
divb
sti
pop
mov
ret
flds
mov
jne
lcall
and
xchg
loope
ret
lahf
inc
xor
sbb
int3
mov
pushf
xchg
lds
inc
jbe
add
rcr
loopne
sub
inc
fnstsw
cltd
adc
inc
inc
and
cld
inc
ret
jmp
jp
dec
xor
push
jg
jmp
mov
stos
or
pop
orl
aas
xchg
pop
sbb
sbb
mov
jmp
add
dec
pop
push
sbb
add
sub
and
or
cmp
mov
shll
sbb
loop
jns
and
fisubs
ja
jp
and
adc
pop
mov
fcompl
xor
mov
push
nop
scas
inc
inc
sbb
lahf
cmc
push
pop
push
add
into
rol
add
adc
xor
repz
cmp
mov
cmp
sbb
shrb
adc
add
xchg
jmp
popf
add
xchg
adc
pop
in
lea
mov
cmpl
jne
gs
adc
loope
xchg
inc
popf
jo
sub
lods
std
cmp
push
pushf
test
mov
out
test
push
mov
push
and
sbb
popf
fadds
push
outsb
or
ja
mov
aam
lods
jb
into
js
jl
in
cmp
pop
popa
inc
dec
pop
pop
repnz
xchg
jo
dec
stc
outsb
push
add
iret
movsb
cmp
mov
cld
sti
and
push
push
dec
flds
sub
mov
rorl
adc
and
test
fimuls
imul
test
and
test
rorb
inc
mov
testl
insl
pop
negb
cmpsb
mov
push
cmp
sub
xor
bound
inc
out
inc
aad
out
adc
enter
mov
aaa
sub
loopne
lret
mov
jnp
xchg
push
cmp
mov
jmp
inc
pop
fldcw
outsl
mov
sahf
into
and
rcll
lods
lods
xor
fmull
in
pop
stc
add
dec
bound
call
insb
pop
and
stos
sub
out
jb
jns
mov
adc
xor
cmp
sub
sar
push
fists
fs
pusha
push
lret
int3
ja
fidivrs
pushf
test
pop
fnstenv
jge
add
add
popf
hlt
fs
pop
mov
xchg
fmull
shrl
mov
stos
push
les
ret
xchg
push
mov
sbb
repnz
in
dec
das
fnsave
fs
aam
test
add
xchg
dec
push
cmp
jnp
js
movsb
mul
out
outsl
mov
and
in
mov
mov
jmp
lcall
cmp
xchg
cmp
repnz
pop
jg
fs
inc
arpl
lock
push
roll
sub
inc
sub
inc
inc
xor
lahf
jo
push
cmp
loopne
iret
rorl
push
xchg
shll
push
jbe
add
aad
add
shl
pop
sbb
jg
adc
pushf
iret
leave
pop
push
push
pushf
and
mov
aas
pop
mov
push
cld
cmp
out
pop
dec
popf
fwait
aas
mov
xchg
or
mov
mov
jnp
inc
jbe
ja
ffree
sbb
mov
mov
or
pop
xchg
into
and
sbb
xchg
popa
sub
mov
push
mov
ss
mov
ret
pop
dec
and
and
call
mov
dec
std
ljmp
fidivs
inc
or
or
outsb
nop
and
dec
jno
popf
pop
jnp
xor
in
mov
lret
mov
push
push
or
jb
popf
mov
push
imul
je
pop
jae
add
fsubl
scas
mov
ds
sub
das
xlat
add
mov
xor
mov
in
inc
mov
addr16
xchg
sbb
lret
mov
and
add
xchg
cmp
shrb
xchg
xchg
sarb
stos
shrl
pop
cmp
sub
cli
push
jge
add
sbb
mov
rcrl
popl
xor
lret
ret
push
jmp
scas
ja
gs
xchg
or
es
mov
lret
sbb
jo
fs
outsb
inc
enter
mov
or
push
fs
push
orl
sbbb
cltd
ss
adc
pop
cmp
mov
rcl
std
jno
xchg
xor
outsb
cmp
push
dec
push
int3
outsb
cs
mov
divl
ja
and
loope
mov
sbb
jp
cltd
je
adc
xchg
shrb
repz
or
or
add
push
lea
pop
ds
pop
and
adc
mov
or
loop
pushf
rcrl
mov
int3
shl
das
add
lds
cld
cmp
xchg
jae
inc
jo
mov
dec
pop
cs
sahf
push
add
mov
sti
fdivl
outsb
mov
push
cmp
aam
pop
and
and
in
inc
adc
mov
dec
loop
stos
mov
ds
test
pop
xchg
push
outsb
adc
dec
and
lahf
sub
xor
inc
sbb
hlt
mov
pop
aam
xor
mov
fs
fimull
xor
push
mov
push
lock
fisttpll
lahf
pop
aaa
mov
cmpsl
lds
and
ret
sti
aad
stos
xchg
rorb
push
sub
shrb
and
sub
in
repnz
pop
cmp
ret
xor
xor
pop
jne
xchg
cmp
ret
pop
movsb
rcll
xchg
ret
mov
jecxz
xchg
adc
xor
dec
dec
xchg
addl
inc
repz
aad
cld
sub
mov
adc
data16
lods
cld
jb
or
mov
xor
lds
loopne
movsl
lds
sub
and
jmp
mov
fistps
add
cwtl
cmp
push
cwtl
pop
sahf
jno
add
sub
rcll
sbb
push
jecxz
orb
aam
fstl
je
das
jb
fstpl
ret
xor
int3
jecxz
std
fmuls
add
iret
popa
adc
jb
cs
out
jnp
hlt
sti
fimull
mov
cwtl
call
mov
xor
sbb
mov
iret
and
scas
neg
sbb
mov
fwait
jle
add
arpl
push
decb
mov
ror
lahf
lcall
or
mov
out
out
insl
sti
test
inc
mov
xorl
jl
mov
and
adc
add
sti
enter
aas
inc
fidivrs
push
and
cli
jb
xor
push
pop
push
mov
jne
sub
repz
repnz
add
inc
jg
cs
pop
or
rol
cmp
lods
fldt
ss
ficompl
in
aam
xchg
mov
xchg
mov
lcall
push
jb
mov
mov
es
inc
pop
jne
out
jbe
or
fiadds
sbb
push
mov
push
mov
mov
push
iret
test
sub
ret
ja
cmp
push
fs
dec
and
jge
repnz
jae,pn
fbld
out
das
mov
sbb
data16
mov
xchg
mov
push
loop
rcr
sub
stos
adc
jns
lds
adc
and
es
bnd
or
jae
fists
inc
push
jne
imul
mov
fwait
xchg
icebp
xchg
cmc
frstor
decl
aas
fbld
mov
fisubrs
add
in
mov
shll
cmp
sub
jmp
sub
imulb
push
push
js
in
ds
sub
jl
xor
fisubrs
mov
pop
xchg
out
lcall
cmpxchg
push
js
xchg
adc
mov
xchg
jl
sub
cmp
mov
ljmp
xchg
xor
inc
imul
xor
add
testb
negl
aas
repz
ret
ss
fcomi
int
cmp
iret
movb
enter
lock
dec
push
scas
arpl
cmpsb
and
jo
cmp
movsb
int
jo
add
jns
adc
pop
repnz
in
xchg
mov
rcll
sub
jb
fmuls
aam
addl
div
mov
mov
enter
mov
mov
aad
xchg
and
push
sbb
rcl
shrb
or
dec
lods
std
inc
dec
mov
pop
push
test
pop
mov
push
ljmp
jecxz
push
sub
and
fdivp
andb
mov
loopne
or
pop
cli
or
imul
repz
pop
or
fwait
pop
loope
mov
xor
xor
cmp
lea
hlt
mov
xchg
mov
adc
in
or
iret
insb
jnp
repz
push
inc
cmovae
mov
xor
hlt
adc
jne
lahf
dec
push
scas
mov
push
pop
inc
xor
mov
sub
mov
cs
add
cmpsl
pop
xchg
cwtl
or
rcr
hlt
enter
sub
arpl
loopne
inc
aaa
push
mov
or
rcll
leave
enter
cmpsb
out
sbb
sub
out
sub
mov
mov
pop
ret
mov
leave
sbb
xor
daa
inc
sbb
in
xlat
xorl
rorl
lret
lods
jae,pn
add
cmc
stc
popl
mov
dec
fimull
cmpsb
lock
adc
xchg
pop
mov
test
xchg
xchg
ss
cwtl
dec
add
lods
mov
and
pop
inc
jno
adc
sub
ja
dec
push
fsts
mov
sti
and
dec
xchg
sti
inc
sbb
pop
push
hlt
sarl
test
leave
push
scas
sbb
mov
in
dec
sbb
iret
xchg
fldt
lds
sahf
fs
stc
or
fmulp
ljmp
out
lret
sbb
mov
ljmp
xchg
nop
and
test
addr16
pop
mov
lods
out
mov
push
loop
fstps
add
insb
sbb
insl
jbe
mov
jg
fwait
xlat
in
daa
idivl
cmp
cmp
sub
shll
insb
nop
inc
push
cld
in
aad
iret
pop
xor
pop
or
inc
or
ds
lret
mov
mov
pop
mov
mov
adc
outsb
pop
pushf
iret
lret
jecxz
rcrb
lret
das
andb
pop
push
test
adc
idiv
loopne
inc
cmpsl
cmpsl
inc
xor
repnz
pop
shr
in
in
xchg
cmp
cld
cli
pop
dec
pop
xchg
mov
jne
pop
scas
loopne
movb
movsl
mov
mov
ja
sub
popa
cwtl
in
imul
xor
shl
lods
lret
out
out
mov
lods
sbb
xchg
repnz
lods
inc
stos
sub
pop
xchg
jns
pop
icebp
mov
int3
jno
push
jns
add
mov
popa
lods
movsl
mov
or
lock
sub
test
andl
inc
call
pop
jns
bound
push
test
pop
enter
pop
and
xchg
cld
or
xor
cltd
lret
stos
or
or
incb
push
push
aad
std
ret
mov
cmp
stos
movsw
push
mov
sbb
xchg
sbb
jo
lock
xlat
shll
into
fdiv
pop
jns
sbb
lods
xlat
ja
mov
jbe
mov
pop
scas
cmp
adc
int3
sti
nop
movsl
add
ss
cmp
mov
inc
in
mov
fdivs
out
jg
jae
daa
fistps
jmp
mov
int3
out
jmp
nop
xchg
int
inc
ljmp
test
xchg
push
dec
xor
or
lods
mov
lds
push
int3
pusha
jp
fdivl
add
leave
push
dec
and
bound
xchg
rol
jae
outsb
lcall
push
adc
sbb
clc
mov
repnz
pop
sub
int
out
ret
fcompl
cmp
dec
imul
jo
fidivs
or
pop
mov
xchg
jmp
lret
dec
mov
loop
and
mov
popf
xor
xor
sbb
jp
ss
adc
sbb
mov
cwtl
jecxz
mov
cmp
sahf
popa
sub
xor
movsl
jle
mov
pop
push
jne
rcrl
add
mov
gs
fildll
sub
in
lret
push
rcll
mwait
call
test
loope,pt
sub
aaa
sbb
xchg
sahf
das
add
adc
sub
mov
loopne
aam
clc
fs
insb
ja
js
sub
lods
popa
into
movsl
gs
les
xchg
sub
cmp
add
out
mov
enter
inc
ss
lock
int3
mov
fnstenv
cmp
imulb
sub
xlat
cmp
xchg
mov
mov
lret
repnz
pop
adc
bound
sub
cwtl
push
enter
test
or
popf
bound
daa
dec
rcll
sub
ret
add
push
out
into
add
mov
xorb
cmpsb
mov
mov
ret
inc
data16
jno
add
iret
sub
into
fs
and
xor
jb
inc
jp
push
inc
fnstcw
adc
add
aas
out
and
and
jbe
pop
mov
daa
pop
das
cmpsb
lret
ds
inc
addr16
popf
sub
mov
repz
dec
xchg
dec
pop
adc
iret
inc
xchg
push
mov
fcmovnu
int3
sti
mov
leave
sub
xchg
cld
xchg
ficompl
mov
add
scas
xchg
xchg
bound
dec
mov
scas
cmp
sub
and
in
mull
cmc
movsl
add
sarl
cwtl
jl
in
popl
inc
mov
push
scas
loop
sub
and
ja
aas
test
popa
xor
xchg
or
lret
out
cmc
pop
xchg
mov
sbb
lret
mov
sub
sub
sahf
and
dec
mov
imulb
andb
mov
call
add
or
sbb
and
lahf
xor
rorl
adc
cmp
lds
and
xchg
lods
inc
jge
or
xchg
dec
cmp
cmp
and
in
jbe
lret
xchg
ret
or
mov
bound
in
xor
cmp
sti
adc
pusha
cli
sub
fsubl
add
mov
mov
in
sbb
dec
mov
add
stos
js
push
aam
fwait
scas
lcall
xchg
push
lds
subl
mov
pushl
jge
jge
jp
test
adc
rcrl
xor
add
ret
out
fisubrl
andl
jg
pop
jae
pop
aad
add
xchg
pop
jg
dec
pop
and
ret
pop
sbb
bound
lcall
outsl
dec
bound
sti
push
rol
xchg
jo
xchg
outsb
sbb
int3
inc
pop
lods
out
push
lahf
in
sub
cs
mov
lea
sub
cltd
data16
xor
aaa
inc
xchg
call
cmpsl
inc
pop
out
jbe
movsl
call
iret
loop
out
fst
xor
lcall
fdivrs
bound
mov
and
mov
push
dec
mov
icebp
dec
int3
sbb
mov
cmp
mov
inc
mov
cwtl
mov
fistpll
mov
nop
dec
ds
leave
xchg
daa
ret
sbb
out
adc
xchg
test
dec
popa
jecxz
aaa
sbb
mov
mov
jno
inc
adc
jecxz
adc
xchg
mov
adc
jne
or
mov
xchg
rorl
jb
mov
xlat
jno
cmp
addl
jbe
incb
mov
mov
pop
mov
pop
aas
test
scas
fdivrs
imulb
pop
shlb
inc
add
out
cwtl
jnp
jne
aam
out
enter
rolb
sahf
jp
mov
fcmove
imul
stc
xor
inc
out
adc
mov
xor
inc
push
je
xor
xor
push
or
lcall
pop
mov
inc
mov
xchg
loop
adc
jae
or
push
popa
mov
xlat
cmc
inc
sbb
cld
leave
test
jmp
cwtl
das
and
fwait
test
and
dec
lods
mov
cmp
adc
inc
add
xchg
out
bound
lods
sbb
cld
pop
push
andb
cmp
call
mov
iret
test
xlat
xor
cli
jg
dec
add
pop
cmc
and
scas
insb
test
sub
cmp
leave
icebp
pop
test
xor
mov
mov
push
cmp
push
inc
mov
lcall
add
lret
add
add
out
bnd
fisttpl
lret
data16
dec
xchg
fnstcw
icebp
mov
sub
mov
loopne
push
imul
sarl
push
pop
movq
cmp
push
sbb
or
fists
loopne
scas
int
rcrl
stos
sbb
es
insb
cmp
iret
lcall
jle
cltd
pop
mov
adc
fstpl
adc
jmp
mov
sbb
insl
add
add
outsl
mov
scas
inc
mov
pusha
fimuls
icebp
rep
sti
xchg
pop
push
mov
mov
iret
sbb
jle
push
out
sbb
mov
mov
adcb
jns
dec
mov
out
out
cmp
adc
inc
dec
jmp
jae
mov
sti
sbb
sti
pop
and
sub
pop
sti
in
test
jb
movsb
pop
or
mov
dec
fldl
push
js
xor
repz
inc
lods
mov
sti
pop
jnp
dec
in
cmp
cmp
sti
sarb
mov
xchg
popa
nop
push
mov
add
add
sub
dec
loope
subb
ljmp
mov
dec
ret
fidivs
sub
pop
das
fstpt
test
or
pusha
inc
pop
out
sbb
jne
mov
sbb
push
jp
and
adc
pop
mov
dec
stc
jne
movsb
mov
lret
out
push
mov
or
cwtl
push
inc
mov
mov
xor
std
jo
xchg
jne
mov
sbb
roll
mov
mov
pop
das
in
mov
push
pop
and
mov
xlat
jno
ret
mov
sub
ds
jg
jmp
push
jae
lea
mov
add
and
sbb
pop
mov
pushf
fcmove
mov
mov
ror
mov
cmp
fdivrl
nop
mulb
clc
enter
fdivp
js
movsb
rclb
jg
xor
or
addr16
hlt
mov
adc
push
int
mov
shr
pop
dec
test
mov
cwtl
icebp
mov
dec
popa
fs
mov
das
sub
shlb
inc
xlat
lea
xor
movsb
push
mov
or
jp
mov
es
scas
xchg
ss
sbb
pop
sub
ja
outsb
sbb
xchg
mov
aas
nop
ret
pop
cli
pop
or
loopne
jno
loop
imul
call
mov
sbb
movsb
testl
pop
xchg
int
mov
addr16
dec
sahf
sbb
mov
lret
sbb
out
mov
inc
loopne
and
mov
adc
sbb
mov
rorl
xchg
cmp
inc
cmp
inc
mov
jae
pop
ljmp
imul
mov
fstl
ljmp
mov
jl
test
or
stos
mov
add
faddl
js
sbb
pop
push
into
jp
je
jb
cmpb
cmc
arpl
dec
jle
push
out
pusha
mov
push
mov
sub
and
dec
xchg
jecxz
loope
out
lret
out
xchg
fcos
jp
ss
ret
xchg
xchg
dec
aad
sbb
sbb
shll
sub
cvtpi2ps
adc
in
or
sub
icebp
jle
mov
mov
sub
mov
mov
xchg
add
inc
pop
xchg
pop
clc
jle
in
adc
push
inc
xor
adc
jnp
pop
push
addb
mov
xchg
daa
inc
shrb
xchg
xlat
adc
rorl
push
xchg
lds
in
jp
push
mov
rclb
sub
pop
or
inc
pushf
test
aaa
or
addl
cmp
lret
mov
pop
decb
lods
hlt
pop
sbb
jo
or
enter
push
xor
mov
ret
das
in
jmp
pop
ljmp
pop
or
sbb
pop
repz
loope
jmp
aam
sbb
adc
arpl
pusha
lods
mov
mov
ds
jnp
shld
pop
cmp
scas
mov
mov
mov
inc
repz
and
inc
jmp
fildl
sbb
movsl
cmc
push
pop
inc
mov
outsl
gs
jb
mov
pop
and
jb
jae
mov
xor
dec
inc
idivb
push
iret
or
cmp
inc
xor
test
sbb
dec
scas
in
push
mov
push
xor
jmp
test
xor
aas
fdivs
or
es
xchg
loope
pop
ja
dec
pop
lret
div
subl
nop
adc
mov
sbb
inc
clc
cmpsl
and
aad
gs
jo
repz
movsb
xchg
arpl
jnp
bound
shlb
cltd
daa
test
gs
dec
pop
repnz
sbb
dec
popa
cwtl
xchg
dec
inc
popf
adc
fs
loope
fcomps
mov
cmp
jge
stc
idivl
dec
lock
push
or
xchg
fwait
dec
push
jge
pop
addb
xchg
das
addr16
lret
stos
adc
inc
nop
inc
inc
mov
sbbl
mov
adc
cld
mov
rcrl
lds
loop
sub
movb
or
das
xlat
adc
push
adc
scas
sub
jg
sbb
sarb
xchg
pusha
jae
pop
outsl
mov
pop
int3
mov
inc
sbb
push
xchg
out
xor
jle
jne
fstps
sbb
test
insb
push
jne
ds
dec
mov
inc
arpl
fadd
push
mov
div
push
or
in
xor
js
or
jo
in
andl
or
stos
add
sbb
scas
jo
dec
and
inc
lret
insl
cmp
je
push
mov
inc
xchg
cmp
dec
and
mov
mov
pushf
xor
stc
jnp
ss
mov
cli
enter
andnps
cwtl
scas
out
xor
pop
cmpsb
sub
rcrl
rcll
sub
shld
push
test
orl
or
popf
leave
ljmp
push
in
fsub
cmpsb
js
push
dec
popa
arpl
sbb
and
fldcw
inc
out
sbb
dec
scas
push
scas
inc
popa
std
inc
xor
mov
cld
testb
mov
sbb
or
inc
mov
or
icebp
or
lcall
subb
or
push
mov
rcll
sub
fdiv
icebp
fistl
pop
and
xor
scas
jecxz
add
fdivs
mov
inc
xchg
int
xor
mov
mov
inc
fcoms
mov
mov
sub
inc
into
mov
ror
shll
les
out
push
neg
or
sub
fs
pusha
xchg
cld
cli
pop
dec
mov
ficoms
push
inc
xor
dec
dec
jno
push
xchg
clc
push
inc
movsb
xchg
mull
cmpsl
jb
mov
imul
inc
and
cmp
mov
mov
cmpsb
mov
push
dec
push
scas
aad
cmp
iret
negb
cwtl
dec
das
adc
into
pusha
and
sub
ret
add
rcll
xor
js
add
push
xchg
movsl
sub
sbb
and
lock
sub
cld
sbb
movsl
sbb
pop
sti
mov
mov
insb
aam
ret
ret
inc
xor
lret
mov
push
outsb
inc
out
cmpsl
cwtl
push
pop
adc
mov
sub
addr16
stc
mov
aaa
pushl
cmp
mov
jg
cmpsb
scas
xchg
jo
adc
cmpsb
lea
in
out
xchg
es
pushf
daa
pop
xor
mov
lahf
adc
dec
divb
dec
fsub
ds
imul
addr16
sub
mov
movsb
mov
xchg
cli
ret
jecxz
ret
xchg
jnp
xchg
xor
lcall
and
fwait
inc
hlt
ret
xor
xlat
or
popa
loopne
or
xor
push
inc
cmpl
and
mov
or
cmpsl
jno
out
stos
mov
mov
ljmp
rorb
int
mov
or
add
je
jbe
mov
jo
lret
daa
xor
or
lcall
mov
lods
lcall
loope
inc
push
mov
pop
mov
sahf
ds
xor
jp
pop
lret
shlb
in
rcll
or
mov
cmpsl
aaa
movups
gs
xor
scas
cld
mov
divb
add
dec
mov
jge
loop
xor
sti
cmp
mov
add
inc
inc
sub
clc
fcmovnu
mov
jns
xchg
xchg
push
mov
mov
incl
inc
push
adc
cmp
daa
out
mov
gs
mov
rorb
in
sahf
push
cwtl
or
stos
cmp
stc
ljmp
stc
movsl
in
aad
test
dec
push
jmp
movsb
divb
mov
sbb
and
xlat
xlat
iret
ds
push
pop
repnz
stos
add
in
out
je
hlt
sahf
scas
stos
jp
bound
xor
notb
lods
hlt
out
cltd
jnp
js
push
outsl
bound
xor
add
adc
xchg
push
imulb
xor
mov
mov
lret
ret
fnsave
fcmovbe
jnp
bound
xchg
out
aad
mov
jo
push
andl
or
dec
lods
pop
icebp
fs
jb
sahf
leave
or
push
in
shlb
andb
pop
inc
lods
inc
dec
adcl
loop
ljmp
jne
xor
in
sbb
lcall
mov
push
in
push
out
or
repnz
test
movsb
gs
fs
daa
lret
jecxz
in
mov
xchg
lock
add
cmp
xchg
arpl
sahf
mov
int
sub
int
mov
ja
mov
cmp
sbb
inc
aam
fisubrs
cld
or
mov
fadds
in
stc
aam
sub
adc
imul
out
and
shlb
lahf
adc
push
mov
dec
push
out
shll
fistpll
insl
push
rclb
subb
les
mov
lods
jg
je
lahf
scas
cmpsb
xor
mov
test
inc
pop
mov
test
sub
gs
mov
and
cs
pop
in
call
sarb
inc
stc
jmp
aas
ds
pop
xchg
loopne
std
mov
or
xor
stos
sub
fucomip
inc
dec
fimull
sub
mov
push
push
add
mov
adc
sub
gs
xchg
cld
xor
cs
inc
outsb
dec
or
jle
pop
dec
cld
aaa
adc
rol
test
test
xchg
mov
hlt
outsb
pop
mov
push
ja
xchg
jp
pop
and
fidivrl
les
jo
add
fdivs
cwtl
sub
ret
cld
inc
call
xlat
arpl
rorb
pop
sbb
jl
adc
xor
mov
fidivrl
pop
inc
jo
cmp
pop
je
pop
push
pop
movsb
or
imul
jne
aam
mov
mov
cltd
jle
jmp
mov
aas
inc
sub
decl
lahf
pop
xchg
push
pop
or
mov
xchg
stc
icebp
lcall
xchg
inc
add
jl
cmc
push
pusha
fs
ds
cmp
out
ret
in
imul
lods
mov
mov
xchg
jae
stos
int3
pop
addr16
sarl
mov
jnp
push
cmpsb
jmp
mul
inc
repz
mov
les
in
in
inc
lret
loope
jl
dec
call
add
das
or
jecxz
out
jg
mov
aaa
mov
lret
outsl
stos
das
out
pop
ret
in
xchg
mov
sahf
movsl
cmpsl
mov
dec
in
in
inc
jno
sti
sub
cmpsb
insb
or
mov
mov
cld
mov
data16
mov
and
faddl
aam
jmp
pop
ljmp
lret
sbbb
xchg
mov
js
fiadds
lret
pop
xor
pop
insl
push
xor
mov
in
lea
jecxz
inc
shl
enter
sub
dec
enter
and
testl
inc
daa
movsl
flds
lods
lea
mov
mov
add
sbb
pop
movsl
mov
test
repnz
faddl
xchg
inc
cmpsb
in
adc
or
cmc
push
leave
mov
sub
sbb
mov
push
jb
pop
push
cmp
cmpsl
leave
add
sub
push
fsubl
insl
mov
lock
vaddps
sub
and
jbe
inc
outsl
inc
les
mull
daa
fsubrl
mov
or
repz
insb
add
xchg
enter
icebp
jg
add
pushf
jmp
and
test
pop
shr
jp
rolb
jbe
lds
dec
jp
jge
fwait
dec
pop
ja
ja
in
inc
loop
gs
push
mov
imul
rclb
bound
xor
in
shld
xor
fimull
adc
daa
adc
cmpsb
pop
hlt
ja
dec
mov
mov
nop
xchg
lds
xor
and
xor
repnz
fs
xchg
imul
mov
test
negl
out
fmuls
int3
insb
pop
ja
out
sub
movsb
movsl
divl
loopne
mov
fs
adc
pop
sahf
out
or
repz
or
mov
cmp
js
fwait
addr16
les
div
sbb
fisttpll
dec
sbb
dec
dec
sbb
das
sbb
mov
mov
loop
in
rep
dec
adc
cmp
add
push
bound
imul
mov
jbe
push
pop
mov
pop
ljmp
mov
lret
inc
fwait
aaa
addb
mull
inc
mov
xor
mov
or
push
adc
cmp
loope
mov
cs
lret
jmp
push
push
or
sub
adc
pop
cwtl
rcrl
push
sub
jo
mov
test
lds
and
xorb
shll
mov
hlt
xor
and
in
mov
or
jbe
xor
pusha
orl
sub
ret
push
pop
push
jmp
inc
lahf
cmp
ja
dec
jnp
stc
filds
ja
cwtl
in
call
lahf
dec
cmpxchg
push
and
mov
cmc
sbb
in
inc
push
out
jg
and
mov
mov
push
ljmp
jge
and
jl
dec
cli
sarb
pop
nop
or
mull
les
cmp
mov
inc
mov
clc
or
fs
or
fadd
mov
add
or
xor
sub
and
std
jns
sub
insl
jp
cld
idivb
out
and
or
lret
movsl
adc
push
adc
xchg
sarb
outsl
lret
sbb
dec
push
rorl
mov
dec
push
in
dec
inc
mov
loop
int3
cltd
sbb
mov
test
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbbl
add
xorl
mov
mov
and
xor
and
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
push
push
or
xchg
inc
fisttps
jp
gs
jmp
addl
fwait
jl
out
sbb
ljmp
daa
sub
or
push
dec
jge
and
lock
lahf
movsb
cld
shll
add
jg
mov
cmpl
sbb
mov
mov
mov
jmp
cmpsb
lret
or
inc
repz
testl
push
mov
lods
add
std
lock
cmpsl
loope
mov
sbb
push
adc
bt
cmp
jbe
sbb
and
pushf
inc
dec
adcl
fimuls
repz
hlt
bound
mov
push
adc
in
dec
subl
sub
in
jbe
push
movsb
cmp
or
scas
push
or
xor
rep
fistl
iret
mov
fistl
mov
out
test
mov
movsb
adc
and
cmp
popf
mov
jno
cli
outsl
in
sub
mov
in
adc
dec
jmp
jecxz
ret
mov
loope
cwtl
xlat
inc
jbe
mov
sbb
pop
jb
dec
push
xchg
push
decb
pop
and
sarl
andb
leave
stc
sub
xor
fstpt
dec
cmp
cmp
mov
hlt
xor
mov
cld
insl
scas
mov
addr16
cld
ljmp
fwait
cmp
and
push
repnz
jnp
or
or
pop
cwtl
ljmp
fldl
xlat
lahf
int
jl
adc
xlat
or
mov
cltd
scas
pop
or
mov
dec
nop
jecxz
leave
enter
pop
mov
jns
pushf
push
add
cmpsb
dec
fistpl
lret
sbb
neg
xchg
jo
notb
pop
push
jmp
pop
lret
fmuls
scas
xor
loop
sti
inc
xchg
and
loop
fnsave
push
cmp
mov
imul
test
adc
and
cld
adc
cli
pop
rolb
mov
in
in
pop
mov
imul
sub
fmulp
inc
pop
pusha
xchg
add
nop
mov
xchg
mov
cli
sbb
mov
jge
aaa
sub
pop
push
add
cmp
cwtl
mov
mov
mov
lods
xchg
jbe
xor
mov
or
push
adc
mov
popl
fiaddl
pop
aas
adc
insb
adc
cmp
pusha
popf
fmull
mov
ficomps
jne
cmp
or
lcall
repz
cmp
mov
rolb
lret
inc
pop
lret
push
jl
aam
jge
out
add
call
notb
mov
int3
movl
int3
rolb
cltd
mov
xchg
scas
stos
mov
xchg
mov
std
sbb
imul
xor
xchg
and
or
jle
fstpl
outsl
lret
push
add
es
xor
sub
sbb
inc
loope
xor
int
adc
aaa
jne
fidivrs
lcall
mov
std
cmpsl
ljmp
sbb
fldl
jmp
and
loope
xor
subb
mov
imul
ljmp
or
out
call
in
inc
outsb
out
int3
shr
mull
xchg
jb
faddl
jge
cmp
sub
fstp
inc
aad
jmp
ffree
sbbl
adc
lods
dec
pop
imul
mov
pop
std
inc
insb
cmp
xchg
xchg
mov
jecxz
mov
add
shr
xchg
add
pop
mov
and
inc
lret
or
fidivl
mov
stc
mov
pop
xchg
dec
mov
jmp
xor
push
sti
dec
or
mov
aam
inc
dec
cmp
pop
push
aad
add
jle
or
cltd
into
loope
ljmp
pusha
aaa
sub
dec
inc
nop
das
add
cs
shrb
imulb
push
sub
lahf
and
or
dec
push
lcall
push
adc
repz
xchg
mov
loope
push
push
add
dec
icebp
mov
or
test
xchg
jb
scas
fwait
sbb
mov
in
xchg
fcmovne
cltd
mov
add
gs
or
xor
push
test
dec
jp
jae
movsl
push
pushf
aas
add
dec
sbb
ja
in
jg
lods
lcall
aad
fcompl
orl
mov
jp
movsl
push
mov
xchg
xchg
jne
pop
scas
cltd
shll
imul
push
icebp
xchg
pusha
je
mov
push
hlt
jns
cltd
mov
into
testl
scas
push
xchg
repnz
inc
mov
aas
add
gs
sub
push
gs
int
dec
das
in
inc
lods
loope
stc
fistpll
dec
dec
inc
loope
and
pop
lods
lds
iret
filds
mov
jno
jo
adc
andb
popf
repz
jb
and
rclb
bound
xchg
xor
int3
dec
inc
addr16
dec
xlat
notl
cmp
cwtl
test
popa
and
ss
xor
mov
and
pop
push
icebp
rcrb
daa
gs
push
sbb
mul
and
dec
call
fstl
xchg
inc
adc
cmpsl
dec
mov
pop
loopne
fsubl
das
cli
push
xchg
aas
pop
inc
push
xor
dec
lahf
pop
ja
fwait
xchg
inc
leave
add
mov
rclb
mov
pop
jbe
cwtl
mov
loopne
in
cmp
enter
or
sbb
ljmp
test
jno
pop
int
pop
popa
lret
lds
in
sti
push
rcrl
xor
dec
dec
cmp
popa
pusha
testl
dec
xchg
jnp
or
pushl
or
daa
push
mov
fiaddl
out
adc
and
mov
inc
call
daa
pop
aaa
fwait
mov
fsubrp
add
mov
mov
jp
mov
mov
jle
jne
xor
inc
jmp
lcall
out
cmp
popf
add
insl
ss
lods
and
mov
jl
test
sub
dec
mov
add
js
inc
andb
aam
push
mov
xchg
ja
loop
sbb
and
jmp
andb
xchg
jp
cmpsb
mov
test
and
lock
pop
adc
scas
push
xchg
test
mov
adc
dec
adc
inc
push
mov
dec
lret
fs
xchg
test
icebp
or
aad
fimull
xlat
and
in
xchg
subb
je
sbb
mov
repnz
int
test
fisubl
mulb
loopne
out
jb
pop
testb
int
cmp
movsb
pop
fwait
iret
jge
icebp
cld
jmp
fs
ds
jbe
int3
inc
mov
es
bound
icebp
mov
lret
daa
and
cmp
bound
xchg
adc
pop
stc
or
outsl
pop
rcll
dec
iret
and
lea
repz
sbb
xchg
mov
mov
cmp
mov
movsl
mov
shl
movsl
pushf
fs
lods
mov
ret
mov
js
shll
pop
scas
movsb
add
lock
int
imul
bound
cmp
in
jecxz
pop
jns
add
add
xchg
mov
mov
sub
jl
cmp
mov
inc
mov
cli
les
imul
inc
dec
jo
dec
mov
mov
sbb
mov
cmp
seto
testb
adc
mov
cmp
push
jle
cltd
cmp
lahf
add
icebp
sbb
ret
cmp
mov
hlt
sub
adc
fbld
movsl
popf
jle
mov
cmpsl
filds
dec
mov
std
popa
in
les
ret
xor
xchg
fists
push
fldenv
cmpsb
stc
rcll
std
popf
out
jne
flds
stos
dec
xor
push
lret
jecxz
adcb
cli
in
clc
xchg
data16
sub
pop
in
sub
push
adc
dec
in
test
push
jne
fldl
loope
test
mov
jl
aas
mov
enter
and
in
mov
int
push
movb
add
mov
and
test
popa
fstps
int
inc
mov
lret
jno
stos
ljmp
ret
rcll
nop
pop
imul
lcall
stc
or
push
rcrb
movsb
xchg
rcrb
jp
xchg
pop
push
aad
mov
into
pop
adc
jno
dec
jmp
in
insb
shlb
mov
loopne
fists
inc
fcoms
mov
xchg
test
mov
aad
sub
pusha
mov
mov
push
pop
les
inc
lods
pop
pop
dec
rcrb
jl
mov
push
push
jp
rorl
pop
rol
jge
sbb
add
pushf
ds
push
pop
pushf
int3
popf
fisubrs
leave
mov
pop
cmp
roll
mov
lds
in
push
loop
dec
js
jnp
sub
cmpsl
sbb
pop
test
inc
mov
pop
add
fsubs
loope
xchg
clc
adc
cld
insb
orb
popa
pop
arpl
call
mov
ljmp
sahf
clc
xor
sbb
cmp
xchg
in
stos
lret
mov
xchg
popf
pop
push
out
mov
xchg
add
push
mov
lock
or
inc
insl
mov
out
je
cmc
mov
gs
js
fld1
add
jecxz
cmpsl
pusha
iret
push
call
jbe,pt
in
pushf
pop
fidivrl
adc
mov
sbb
dec
iret
rol
in
hlt
sbb
in
int
fistps
popa
inc
xor
adc
movsl
data16
lcall
cmp
es
testb
inc
pop
dec
inc
adc
pop
adc
cmpb
xchg
or
sub
mov
cltd
mov
add
pop
mov
std
js
ret
pop
add
in
cmp
dec
or
push
jae
ljmp
adc
sti
test
xor
stos
xchg
loop
and
in
pop
pushf
into
adc
adc
pop
movsl
addr16
dec
enter
in
sub
mov
push
inc
push
mov
cltd
popa
outsb
js
iret
cmpsl
sub
inc
mov
mov
cmp
je
jns
xchg
dec
xchg
mov
pop
push
out
mov
pop
loope
dec
sbb
imul
fcoms
out
xchg
sbb
sbb
xlat
and
jl
outsb
adc
mov
fwait
fwait
lods
jmp
addr16
push
xchg
or
xchg
ljmp
mov
jne
test
adc
dec
mov
xor
mov
xchg
sbb
and
and
mov
imul
loop
shrb
cs
mov
sbb
out
jmp
mov
push
mov
adc
movsb
pop
pop
xor
xor
inc
arpl
fs
loop
or
cmc
ss
inc
mov
add
lds
jecxz
mov
jecxz
jbe
fmuls
adc
mov
mov
aad
test
repnz
mov
insb
mov
in
fmull
cs
lahf
xchg
std
adc
and
pop
ss
mov
jne
repnz
mov
jo
xlat
test
movsb
test
out
jecxz
jno
out
sbb
in
cmp
outsb
aas
add
push
sbb
push
pop
cs
mov
fcoms
orb
mov
outsl
or
cmp
test
and
xor
loop
or
daa
je
popf
sub
sbb
lret
and
adc
dec
pop
divb
mov
jnp
push
fldl
or
mov
pusha
mov
adc
or
sub
incb
fstl
dec
sub
fwait
mov
or
negb
jns
jl
enter
out
sbb
mov
xchg
notl
fistps
or
out
push
and
dec
test
pop
mov
js
and
xlat
cmc
push
gs
out
cmp
xor
xor
or
xor
icebp
cli
out
push
xor
sbbl
jg
add
aaa
push
bound
xchg
mov
or
inc
sub
out
dec
cmpsl
lods
xor
cmp
cld
cmp
imul
xchg
or
xor
cmp
xor
pop
popf
mov
mov
mov
popa
into
xor
xor
imul
ss
fbstp
out
jecxz
dec
testl
fists
rolb
lea
dec
mov
adc
sarb
cwtl
push
push
rorl
adc
cmp
movsb
and
loopne
pop
push
shl
sub
adc
mov
sub
fbstp
xchg
mov
push
shrl
cmp
aad
adc
subl
jae
xorb
loop
movsb
mov
add
add
loop
mov
jnp
stos
cwtl
xor
add
out
sub
cmc
cmp
popf
inc
xchg
push
fistpl
leave
pop
and
fwait
push
in
sub
dec
push
in
push
mov
or
in
push
sarl
add
mov
inc
jecxz
sub
mov
je
jae
xchg
dec
mov
xchg
jno
sbb
cmpsb
gs
movsl
xchg
or
sub
xchg
fimull
push
aad
pop
xchg
stc
lods
test
mov
or
jmp
in
push
and
popf
jae
test
mulb
rorb
rclb
fincstp
push
outsl
xorb
in
xor
dec
add
cwtl
or
fidivs
cli
mov
cmp
jg
cld
and
fstps
push
and
add
xor
imul
stc
testb
or
std
fstps
mov
xor
lret
test
mov
and
imul
mov
idivb
mov
inc
sbb
lods
stos
out
or
jb
sbb
call
mov
divb
popa
and
aas
test
leave
popa
cmp
ss
adc
aam
or
cli
repz
push
incb
and
pop
stc
dec
scas
mov
outsl
inc
das
jmp
scas
lahf
pushf
call
lahf
lock
ss
pop
aam
jp
jo
stc
or
aaa
int
mov
adc
outsl
scas
aas
arpl
mov
movsl
je
and
or
fcomps
daa
outsb
mov
rcl
and
fildll
ljmp
inc
xlat
fisubl
sbb
inc
xor
cwtl
call
mov
call
lret
xchg
mov
inc
cmp
cltd
dec
call
pop
nop
and
xchg
rolb
adc
push
pop
jbe
adc
ja
jl
xor
stc
xchg
mov
mov
push
leave
xchg
mov
or
clc
mov
mov
mov
xchg
sbb
aad
pop
inc
xor
insl
repz
stos
mov
mov
adcl
hlt
or
imul
std
mov
popf
xchg
js
adc
scas
std
add
push
cmp
test
mov
scas
clc
cmp
pop
mov
jne
add
sub
mov
mov
fs
icebp
aaa
or
sbb
or
inc
xor
pop
jne
std
pop
testl
mov
sbb
les
mov
or
sub
jmp
std
inc
mov
add
pop
inc
jp
jnp
add
ret
cmp
lcall
inc
and
lcall
lcall
les
xor
sub
sub
sbb
pop
pop
mov
sti
xchg
jmp
mov
or
xchg
insl
mov
daa
repnz
pop
popf
jg
xchg
out
jnp
sub
jo
pop
sub
push
jbe
and
out
and
movd
jnp
pop
lods
dec
movsl
xchg
adc
fdivrs
imul
mov
enter
stos
push
or
addr16
out
dec
xor
xor
pop
scas
lret
jns
cmp
lods
pop
sub
adc
or
jl
les
aaa
aam
inc
jecxz
mov
sbb
pop
mov
gs
es
faddl
test
or
repz
mov
jae
orl
mov
pusha
es
lods
lods
fstl
sub
insb
push
or
inc
jns
shlb
decl
lock
lods
sahf
pop
push
pop
aad
pop
inc
arpl
push
lahf
ljmp
xchg
jb
cwtl
add
sub
mov
ljmp
xor
das
gs
mov
or
jmp
dec
jmp
push
movsl
pop
jnp
fisubs
addl
inc
out
adc
pop
mov
add
xorl
fwait
iret
mov
sbb
arpl
and
cli
mov
cltd
cwtl
test
pushf
push
test
push
and
jmp
cmp
push
jg
mov
push
and
comiss
mov
test
lret
add
enter
cmp
or
and
scas
mov
mov
repz
cmp
cld
sti
sti
mov
jbe
cmp
add
fidivrl
insl
jmp
sbb
or
mov
lods
pop
mov
lea
sbb
rcrl
jmp
popa
mov
mov
push
jge,pt
mov
push
mov
fucomp
clc
xchg
nop
push
sbb
xchg
sbb
aas
cmp
or
subb
bound
jg
pop
add
jae
sub
cwtl
in
in
push
enter
repz
rcll
ret
les
jb
add
xor
and
push
call
scas
fstp
stos
push
aad
xor
jecxz
add
pushf
cwtl
mov
mov
cmp
cmp
jns
add
mov
inc
test
sub
popf
insl
lea
daa
xor
jns
add
add
fisubrs
sbb
aad
jbe
es
adc
mov
mov
sarb
jg
sbb
in
mov
popaw
lea
inc
cmp
test
imull
mov
ffreep
add
das
xlat
lahf
sub
add
std
jg
jge
fdivrl
adc
jnp
dec
ljmp
inc
out
xchg
mov
push
jne
jg
mov
push
ljmp
cwtl
inc
xchg
dec
fwait
add
push
sbb
sbb
fcmovne
inc
in
gs
jge
cmp
cmp
adc
mov
inc
test
pop
std
mov
sbbb
cs
sbb
js
push
or
cli
mov
or
sub
cwtl
and
mov
movsl
adcl
cmp
push
and
pop
add
cmp
push
jge
add
cmpsb
push
cmp
icebp
outsb
pop
mov
mov
pushf
add
pop
mov
add
inc
cmpl
inc
jb
adc
mov
jae
shlb
std
sbb
mov
dec
popf
xor
or
push
xchg
mov
mov
mov
or
lret
movsb
mov
or
add
popa
addl
loope
jns
rcrb
sbb
les
cmpsl
sbb
adcl
repz
sub
mov
pusha
fs
clc
push
lcall
pop
ds
icebp
push
mov
sub
fisubrl
addl
and
dec
imul
movsl
iret
jns
jl
and
and
mov
push
daa
adc
je
or
mov
cltd
xor
hlt
inc
mov
stos
sub
sahf
orb
fisubrl
repnz
shlw
push
arpl
inc
xchg
push
pop
push
fnstcw
xchg
nop
pusha
xchg
ljmp
pushf
mov
cmp
and
imul
lea
mov
movsl
outsl
mov
dec
and
or
mov
add
xor
mov
daa
sbb
pop
jecxz
cmp
dec
lock
das
fidivrs
gs
in
ss
fistpl
test
shlb
push
popf
stc
fwait
rorl
sub
add
xor
addl
ficomps
rclb
mov
mov
and
jle
push
subb
xchg
ret
dec
data16
hlt
movsl
stc
orl
dec
mov
add
das
in
xchg
sub
mov
mov
jo,pn
jb
stc
dec
loopne
scas
push
mov
stos
jmp
jo
mov
test
cli
jge
and
jnp
dec
sbb
cmpsl
mov
out
rcrl
pop
jb
ret
cmp
mov
adc
sbb
push
pop
sub
jbe
pop
test
mov
add
divb
enter
adc
push
dec
add
pop
jb
jl
fmull
add
test
imul
outsl
out
bound
mov
rcll
sti
adc
xor
mov
mov
cmpsb
jns
adc
mov
xchg
fistps
rcl
sbb
shl
loop
sti
xchg
or
cmpsl
dec
dec
andb
out
dec
push
mov
stc
mov
orl
call
ljmp
sbbb
dec
dec
out
dec
cmpsl
cmpsl
xor
mov
jl
pop
daa
mov
test
adc
stc
js
fistpl
add
sbb
outsl
mov
lahf
fstps
fs
mov
adc
mov
test
mov
or
xchg
mov
or
or
iret
sbb
xchg
stos
jo
xor
and
add
jmp
out
outsb
jecxz
xchg
lcall
add
push
inc
cld
into
rclb
sub
xor
cmp
jl
ss
ds
or
xor
out
imul
cltd
pop
cmp
movsl
mov
test
pop
xlat
jg
repz
dec
lahf
jle
sub
sbb
test
fs
mov
lret
xor
adc
cltd
test
lahf
sbb
xor
sub
dec
adc
xchg
in
inc
sbb
pushf
mov
jo
cmpsl
fcomps
mov
lret
and
je
pop
testb
fimull
andb
cmp
out
pop
in
push
push
cli
decb
inc
cld
xor
jno
js
loop
leave
orl
xlat
mov
sarb
xchg
dec
dec
insb
scas
test
pop
adc
lds
sub
adc
lea
rclb
outsb
dec
popf
jae
sub
clc
dec
orl
icebp
popa
adc
mov
mov
xor
enter
sbb
jb
xchg
sub
notl
inc
xchg
cmp
lds
mov
xor
xchg
push
ret
fucomip
and
fwait
xchg
stc
pop
cmp
inc
add
in
outsb
mov
add
cld
movb
iret
pushf
ret
stos
fstp
sub
sbb
cmc
sub
or
mov
hlt
mov
ja
dec
orb
or
call
add
aas
in
xchg
iret
pop
movsl
shlb
xor
test
and
or
xchg
es
and
mov
cli
jo
inc
ficompl
push
inc
adc
mov
pop
sti
pop
pop
sbb
ret
or
das
xor
mov
or
sub
push
xlat
push
std
inc
xlat
insl
in
mov
push
insb
repnz
inc
data16
sbb
imul
pop
inc
push
lcall
scas
pop
arpl
rcrl
mov
test
ss
test
movsl
lods
clc
cmp
aaa
or
dec
and
arpl
ret
jns
je
sub
cld
sbb
inc
dec
adc
shll
pop
lds
sub
lcall
hlt
cmpsl
xchg
outsl
add
push
aas
fdivs
cld
inc
cmp
icebp
sar
or
cmp
mov
mov
cmp
arpl
in
cmpsl
fidivrs
push
sbb
out
push
pop
cmc
sbb
cmp
or
gs
push
xor
rcrl
pop
or
shrl
jge
addl
loope
mov
jp
push
imulb
aad
in
in
push
stos
push
mov
or
movsl
sub
mov
mov
addb
lock
xor
sbb
cmc
push
into
ret
stos
dec
loopne
in
mov
cmpsl
popf
popa
add
push
push
inc
jp
std
mov
pop
adc
popf
imul
fstpl
enter
fcoml
ljmp
loop
dec
lds
pop
sub
lcall
mov
das
xor
lcall
dec
mov
mov
pop
cmc
xchg
andb
sarl
ljmp
mov
cli
mov
mov
ret
and
call
data16
add
dec
mov
cmp
mov
pop
std
adc
loope
int
pop
shll
jns
cmp
adc
scas
mov
adc
dec
xchg
jno
into
clc
stos
xlat
fwait
xor
lea
outsl
xchg
mov
loop
jns
shl
sbb
out
jae
mov
mov
and
adc
enter
outsl
xor
cmp
aad
xor
push
jge
jge
jp
mov
ret
push
dec
jl
das
ret
mov
data16
xor
sarb
or
lods
sahf
jo
mov
cmp
pop
cld
mov
jnp,pn
adc
inc
in
push
xchg
nop
out
pop
inc
xchg
mov
loopne
cli
adc
lods
dec
mov
js
push
push
outsl
xor
push
sub
es
sbb
in
cltd
or
mov
clc
mov
push
mov
adc
xchg
add
xchg
out
fwait
mov
ficoml
mov
mov
inc
ljmp
xchg
inc
dec
loop
push
push
out
test
inc
sub
push
push
adc
outsl
push
xor
outsl
je
pushf
add
aam
aaa
das
nop
or
dec
cmpsb
sbb
xor
pop
jnp
in
or
or
sbb
ljmp
sub
insl
xor
in
std
cwtl
sub
negb
out
ret
push
aad
ja
jae
jmp
das
clc
testl
pusha
mov
jno
cmp
cmp
jmp
loope
cmp
scas
xor
cli
gs
mov
sub
adc
push
ret
jne
iret
hlt
push
pusha
jmp
lds
xchg
loop
cmpb
dec
sub
and
mov
jno
push
cld
sub
cltd
xor
sbb
out
mov
adc
push
mov
or
or
mov
mov
mov
loopne
sbb
dec
pop
cld
pop
insl
mov
pop
pop
xor
push
sub
sbb
popl
js
jge
inc
mov
fwait
popa
in
jae
mov
enter
jp
xorb
adc
push
stc
adc
iret
fisubs
cwtl
or
mov
es
std
xchg
and
into
cld
add
iret
aam
push
push
movsl
add
jmp
ja
dec
mov
pop
xorb
movsl
lds
adc
mov
sub
inc
pop
push
or
das
outsb
xchg
ja
test
cld
cmpsl
in
jecxz
mov
ficoml
push
out
mov
and
dec
imul
test
pop
fldt
cmp
inc
sub
lret
call
outsl
mov
or
ss
test
add
das
jecxz
cmp
sbb
add
push
xor
dec
sub
aam
pop
inc
test
test
jl
movsl
movl
or
fwait
shll
xor
push
pop
test
and
xor
add
lea
lret
xchg
jo
add
ljmp
ja
adc
jne
repnz
sub
int
lds
int
aam
jo
fdivl
jae
xor
addb
pop
movsb
js
pop
adc
pop
ja
jns
lods
dec
cli
cs
ss
lds
rcr
and
idivb
les
xchg
cmp
int3
fldcw
push
push
aaa
call
dec
test
mov
shrl
stos
pop
cmc
xor
pop
aad
sbb
movsb
xchg
imul
push
xor
pusha
jmp
xchg
test
int
and
push
add
lods
rclb
fdivrl
or
decl
push
loopne
adc
add
add
ljmp
neg
lcall
add
std
lret
dec
movb
std
fs
test
out
jmp
repz
cmp
adc
add
mov
sbbb
mov
lcall
shll
shlb
inc
pop
movsl
cmp
mov
and
ja
push
jl
push
mov
xchg
mov
lods
sbb
and
pop
jne
sub
loopne
mov
aad
es
pop
mov
sbb
jo
sub
jg
sti
lods
dec
lret
faddl
and
mov
ja
fnstenv
pop
clc
mov
orl
sub
sub
insb
sti
push
lret
fsts
into
sbb
pop
cmp
xchg
fistl
and
jg
mov
clc
xchg
fwait
ret
or
pop
cltd
fstpt
mov
push
fbstp
popf
or
inc
cmpsb
mov
xor
bound
dec
dec
adc
je
fsts
push
aam
rolb
sbb
out
rcrb
cmp
pushl
add
push
and
xor
cmp
loopne
ds
addr16
dec
aaa
xchg
jp
int
bound
out
add
insl
hlt
gs
push
popa
sbb
icebp
xor
mov
sub
pop
sti
xor
mov
movsl
das
add
out
mov
xchg
add
xchg
mov
jp
out
inc
jmp
cwtl
arpl
orl
shl
inc
aad
jae
es
shrd
insl
imulb
jbe,pn
outsl
cmp
fs
enter
cs
xor
lcall
adc
sub
push
sub
pop
fstps
fcomps
add
aaa
sub
or
addb
push
mov
push
subb
dec
cmp
xor
out
cltd
push
xor
idivl
xor
mov
xchg
jae
xor
arpl
adc
cltd
adc
mov
aad
xor
mov
shll
repz
mov
in
imulb
ret
mov
cmovge
inc
mov
fldcw
insb
mov
out
pop
mov
sbb
daa
adc
xchg
adc
das
testl
sbb
mov
sub
sahf
xor
lea
mov
mov
cli
xor
xor
icebp
mov
pop
daa
inc
jmp
add
or
aaa
sti
out
mov
sub
in
shrl
insl
dec
stc
lds
and
stos
popf
push
mov
cmc
or
inc
mov
push
pop
lahf
inc
add
nop
jo
ja
lret
int
lds
or
test
mov
test
sti
add
adc
mov
aad
jg
xlat
leave
andb
aaa
or
or
sbb
push
mov
sub
or
mov
adcl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
sbb
movzwl
sbb
mov
movb
and
lea
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jge
jmp
call
cmpl
jb
mov
xor
movl
inc
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
mov
push
orl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
addl
add
sbbl
movzwl
andl
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jb
mov
movl
movzwl
xor
add
movl
mov
mov
mov
inc
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
jmp
mov
xlat
and
mov
js
add
insl
cld
inc
jl
inc
pop
addl
shrl
push
enter
add
adc
dec
jo
cmp
mov
mov
xor
xchg
jae
clc
mov
sub
jnp
sti
outsb
in
aad
arpl
hlt
pushf
aaa
adc
jge
mov
xor
jno
xor
push
in
push
mov
cld
fs
jbe
xchg
imul
negl
mov
fs
or
orl
ret
xor
mov
pop
nop
mov
pop
clc
add
xchg
ret
xlat
fs
adc
mov
sti
adc
paddsw
fnstsw
adc
add
xchg
pop
dec
jecxz
dec
data16
cwtl
push
mov
sbb
and
std
cmp
pop
jns
xchg
inc
xor
inc
xor
ret
ret
imul
xchg
lea
mov
add
mov
adc
test
dec
mov
mov
ds
jo
pop
clc
mov
push
xor
dec
ret
sti
insl
shrl
xor
inc
sbb
and
jae
test
inc
mov
adc
xchg
lock
repnz
push
cs
je
ja
sub
xchg
inc
add
push
xchg
repz
jno
add
fwait
in
popa
mov
decl
sbb
movsl
jecxz
pop
pop
xor
aad
testb
xchg
xor
push
imul
out
lcall
cmpsl
dec
sbb
inc
xchg
push
js
mov
imul
adcl
sub
mov
stc
inc
gs
pop
dec
outsb
enter
clc
jl
push
sbb
out
mov
cltd
mov
mov
mov
outsl
pandn
or
jne
shr
xchg
pop
inc
sti
mov
gs
aad
lea
nop
enter
imul
or
adc
mov
aas
out
mov
jns
jl
add
ficompl
int3
push
lret
add
inc
test
push
mov
cltd
ret
fiadds
ss
loop
inc
lcall
sub
out
inc
pop
into
mov
cmpsl
xchg
in
xchg
add
add
cmpsb
dec
loopne
pop
add
cmp
pushf
xorl
push
data16
cld
or
subl
stos
jge
into
mov
outsl
jp
or
out
dec
mov
mov
jmp
cmpsb
call
call
loop
scas
mov
or
popf
xor
sbb
adc
xor
je
add
add
sub
dec
addb
mov
mov
and
lods
xor
push
cs
loop
popa
lahf
lods
pusha
cmpsl
adc
dec
movsb
fbstp
xorl
ret
sahf
loope
fnstsw
push
das
ja
jo
add
push
lahf
jg
push
xor
xchg
into
in
jmp
icebp
stc
fsubr
dec
xchg
xchg
notb
sub
push
mov
imul
xor
shl
sub
add
leave
leave
in
les
int
push
sub
add
mov
xchg
aad
add
lock
jno
out
pop
rcll
pop
and
aaa
popf
push
adc
sub
adc
xor
dec
sub
cmc
adc
test
dec
fildl
xchg
adc
insb
mov
dec
out
subb
mov
inc
sbb
sbb
jo
mov
ljmp
and
aad
add
xchg
jnp
dec
xchg
sub
rolb
and
xchg
insl
and
xchg
movsl
mov
cmpsb
and
out
cmp
fsts
push
ljmp
inc
shrb
jnp
sub
outsl
xchg
pop
pop
stos
es
mov
daa
ret
rdpmc
lock
cmpsl
mov
fmul
imul
test
test
repnz
cs
imul
notl
push
movsl
sbb
cmpsl
outsb
jge
cwtl
cmp
and
in
les
or
fdivrs
jbe
mov
xchg
xchg
sarl
pop
xor
int3
js
xor
js
es
push
sbb
fldenv
mov
cmp
pusha
adc
xchg
jns
jb
add
dec
jg
or
mov
fwait
out
adc
and
vcvtpd2psy
sub
notb
pop
daa
fidivrs
pop
push
cmp
js
cmp
xchg
mov
jnp
xor
bsr
aas
mov
dec
dec
js
add
aad
mov
sbb
in
or
jae
xchg
decl
sub
jae
cmp
xor
mov
or
repz
and
pop
mov
mov
testl
or
add
mov
mov
pushf
xor
icebp
into
inc
mov
or
ljmp
or
scas
adc
xor
mov
push
inc
test
sbb
ss
push
mov
out
aad
out
cwtl
clc
sub
inc
fisubl
bound
inc
adcb
or
and
adc
lret
andl
xchg
in
xchg
imul
imul
mov
mov
lock
mov
xchg
sarl
pushf
cltd
leave
lahf
inc
pop
sub
faddl
icebp
push
push
jae
mov
flds
lcall
push
test
mov
push
mov
adc
push
cmp
xchg
lcall
inc
adc
jecxz
jae
leave
fidivl
popa
mov
push
hlt
adc
xor
nop
sbbb
and
pop
jb
xor
movb
and
in
adc
xchg
dec
fidivs
subb
clc
daa
sbb
hlt
and
mov
push
jg
push
xor
fiaddl
sahf
sbb
pop
stos
add
daa
sbbb
add
fwait
cli
aam
xchg
imul
adc
pop
push
imul
in
xchg
xchg
pusha
js
in
jbe
popf
jnp
outsb
dec
mov
loopne
pop
xchg
pop
sbb
adc
mov
std
pop
mov
sbb
and
in
push
xor
in
add
sub
gs
sub
mov
cmp
mov
inc
mov
cld
das
test
mov
hlt
inc
mov
shl
hlt
lock
call
push
pop
les
sbb
leave
xor
aad
lret
pop
inc
push
adc
inc
insl
das
mov
pop
fsub
add
xchg
loop
jns
inc
xor
fisubrs
sub
xor
sbb
stos
xchg
xchg
shlb
mov
enter
sub
mov
sarb
or
sub
fimull
and
lcall
push
jns
bts
jle
int3
in
dec
sub
xchg
mov
mov
sahf
push
pop
dec
jg
jbe
movsl
addr16
out
es
test
add
fnstsw
jl
das
jnp
std
je
mov
push
pop
fisttpll
pop
pop
ficomps
inc
mov
mov
xor
or
xor
mov
rorl
pop
js
test
out
rorb
inc
push
xchg
mov
dec
push
cmp
pop
mov
std
in
test
out
pop
adcl
or
xor
stos
inc
mov
sub
fmul
dec
and
jg
jle
rolb
bnd
xchg
stos
out
jmp
or
sbb
xorl
mov
pop
jg
add
insl
add
insb
dec
xor
mov
push
mov
jl
test
jno
add
push
jae
sbb
imul
pop
lods
jecxz
push
lds
into
jge
add
aaa
enter
sti
roll
inc
mov
dec
pop
cmpsb
leave
scas
pop
out
ficomps
mov
push
in
imul
xor
lock
lret
and
cmp
das
add
mov
enter
cld
loope
mov
scas
enter
arpl
xchg
add
xchg
ret
arpl
jmp
mov
cmpsb
jg
jne
std
hlt
push
pushw
inc
fstpt
add
fisttps
int3
lods
popa
cmp
adc
or
push
add
xchg
sub
sbb
jo
mov
push
in
iret
jno
mov
cmp
das
pop
add
in
int
mov
xchg
fistpll
mov
shrl
ds
dec
sbb
cs
dec
cmp
sbb
aas
dec
inc
scas
mov
or
iret
sub
dec
cmovge
sbbl
mov
cmp
arpl
bound
add
mov
rcrl
jbe
ret
in
xor
cmp
daa
shld
xchg
mov
jecxz
test
out
mov
cmp
out
mov
mov
cmpsl
cmp
mov
adc
pop
xchg
cld
lahf
sarb
pop
and
mov
push
and
fbld
out
mov
xchg
cmp
mov
insb
and
test
sti
js
inc
pop
sbb
fiaddl
jae
ficoms
push
add
and
icebp
push
test
jne
add
push
and
pop
addr16
jecxz
pushf
push
dec
sbb
mov
cmpsl
adc
leave
or
call
cwtl
inc
daa
clc
or
gs
shrb
mov
or
out
rcrb
add
stos
shlb
inc
into
adc
or
mov
and
imull
loop
icebp
dec
call
in
pop
cmp
cmp
cmp
add
push
dec
xor
xlat
mov
rcrl
ret
xor
xor
adc
xchg
out
fistps
mov
cmp
adc
sub
outsb
mov
jnp
adc
mov
cwtl
movsl
jle
ja
fsubp
hlt
leave
les
bound
imull
push
les
aad
add
xchg
cmpsl
mov
cltd
or
mov
adc
mov
in
push
dec
sub
out
mov
dec
in
sbb
and
lods
lods
dec
jmp
jb
mov
mov
inc
mov
lods
pop
dec
jno
cmp
fbstp
repz
loope
dec
fists
pushf
mov
or
pop
xchg
adc
ret
adcl
push
in
pop
inc
lret
out
sub
mov
dec
xchg
pop
daa
stos
jecxz
ret
out
insb
adc
sbb
dec
mov
addr16
jmp
mov
inc
test
sti
sbb
xchg
int
sub
jmp
and
sub
bound
in
mov
sub
sbb
aad
aam
xchg
adc
arpl
dec
push
add
add
xlat
mov
dec
std
push
xor
push
adcb
pop
andb
sub
ja
add
pusha
pop
outsl
push
adc
nop
push
hlt
inc
outsb
lods
dec
idivb
lcall
mull
mov
out
and
dec
fucomi
testl
jbe
sub
jmp
or
push
cli
in
inc
int3
in
stc
test
cmp
or
out
jb
rolb
ret
mov
pusha
popf
fwait
mov
in
jne
std
pop
adc
xchg
cmc
mov
or
cmp
adc
sub
in
in
inc
call
ret
mov
pop
in
add
test
xchg
dec
test
cwtl
mov
cs
std
in
roll
fcompl
fdivl
inc
inc
mov
jg
jb
fstpt
stos
dec
push
jp
dec
imul
fcmovu
sub
mov
push
xchg
iret
jle
cmpsl
fildl
and
es
pop
sbb
int3
in
out
pop
mov
mov
mov
and
movsb
mov
cs
out
dec
std
outsb
inc
mov
jle
int
xchg
add
cltd
or
jmp
jp
call
xchg
fwait
call
ret
and
rcl
int
xchg
test
cld
xor
adc
es
mov
lahf
sarl
into
fnstcw
jmp
cwtl
iret
imul
lfs
pushf
push
es
scas
or
sti
popa
clc
mov
ret
inc
mov
popa
inc
adc
push
add
fidivs
pop
imul
nop
add
out
rorl
cli
js
cmp
mov
repz
out
subl
fstpt
mov
xchg
sub
mov
arpl
out
xchg
mov
mov
xchg
jl
and
cli
xchg
test
test
fbld
sbb
xchg
inc
arpl
test
add
movsb
mov
adc
jns,pn
cmc
xor
jne
int
xor
cmp
cmpl
pushf
jb
and
add
sahf
mov
aad
mov
je
test
dec
iret
in
stc
mov
add
mov
rorb
adc
out
xor
dec
mov
pop
fsubl
nop
inc
fadds
sub
sbb
sarb
mov
inc
push
out
imul
jno
es
cltd
or
sbb
push
btc
ret
mov
fdivrs
out
and
pop
sub
jle
leave
mov
imul
xlat
cmp
sub
pop
ret
xchg
lret
imul
negb
aam
call
lds
ja
std
loopne
jae
cmp
lods
fcomip
push
outsl
js
shrb
std
insl
pop
sar
xchg
cmp
aaa
loope
adcb
mov
pop
mov
clc
enter
or
fwait
or
jo
push
fmuls
je
cwtl
mov
jmp
cmp
or
popa
xchg
xchg
push
in
fs
paddw
in
cwtl
leave
xor
pop
pop
cli
fcmovnu
sbb
dec
jb
sbb
fstpt
fcomp
dec
and
nop
popa
or
pop
inc
out
pop
jle
movsb
bound
fsubrp
enter
ljmp
pushl
xlat
loopne
sbb
inc
inc
data16
pop
bound
mov
cmp
xchg
inc
pop
jg
sbb
clc
scas
cmp
push
adc
dec
scas
ja
iret
xor
fisubl
out
jnp
cltd
mov
loopne
xchg
test
hlt
xchg
dec
add
lock
mov
jbe
dec
or
jge
nop
cltd
dec
add
movsl
add
add
xchg
scas
loope
inc
popa
cmp
fdivl
sbb
dec
push
lods
pop
dec
and
xchg
cmc
andl
mov
sbb
add
xchg
ret
aam
addb
and
mov
inc
jae
popf
and
sbb
fnstenv
lods
cmp
cmovge
mov
push
xor
mov
push
dec
xchg
dec
sarb
jno
sub
xchg
push
ficoms
scas
imul
lret
lock
lods
in
push
movsb
cmp
and
cmpsl
movsb
out
lock
mov
stos
adc
pop
cwtl
loop
jmp
push
sub
sbb
ja
and
or
movsb
jmp
cmp
push
in
jo
sub
dec
cmp
loop
inc
pop
fs
add
sbb
clc
cmp
push
pushf
xchg
push
xor
sub
mov
repnz
lock
cmpsb
call
test
adc
xchg
lea
stos
inc
pop
test
adc
mov
xlat
addr16
push
outsl
fcoms
xchg
ficoms
pop
jecxz
sbb
mov
cld
lret
jp
loop
call
mov
test
es
stc
sub
repnz
and
sub
out
les
insl
cli
jle
nop
sbb
pusha
fiaddl
into
sub
cli
push
mov
sbb
adc
rorl
aam
mov
cwtl
dec
cwtl
cmp
popf
test
push
pusha
xchg
shlb
fidivrl
sub
xorl
lahf
and
pop
push
push
or
adc
dec
adc
mov
pop
sub
mov
fnstenv
xchg
mov
decl
arpl
jne
lods
mov
push
insb
and
jmp
in
rcr
cmp
sahf
imul
cmp
jle
icebp
and
sbb
aam
jae
imulb
imul
add
jbe
xchg
inc
insb
jo
stc
add
xlat
mov
jmp
xchg
lret
jb
adc
outsl
ljmp
pop
jecxz
mov
jnp
and
data16
repz
mov
mov
fs
push
fs
fsubl
sahf
mov
rclb
inc
adc
adc
push
ret
xor
mov
mov
pop
out
and
jno
in
ss
dec
call
pushfw
in
mul
gs
pop
test
jns
sahf
lods
push
cmc
sub
and
aam
pusha
aam
aad
bswap
lahf
divl
das
xlat
in
pop
outsb
and
fdivs
in
pop
xchg
adc
nop
jno
imul
inc
push
js
jle
mov
in
fdivrl
ficoms
mov
ret
std
idivb
in
movsl
das
xor
stc
inc
lret
lcall
sbb
mov
inc
pusha
in
and
sti
out
jns
pop
mov
insl
sub
fistpl
int
jno
lahf
xchg
push
xchg
fdiv
daa
jo
sbb
adc
jg
movsb
rorb
sbb
xor
or
add
mov
cmp
lahf
jae
int3
and
lret
dec
in
sub
mov
mov
xor
sub
jno
lret
jge
test
pop
pop
push
mov
add
xor
movsl
outsl
and
dec
int3
xor
dec
cmp
mov
addr16
ja
incb
mov
sbb
mov
daa
xor
je
std
xor
daa
or
call
gs
je
aam
pop
xchg
adcl
ret
jmp
mov
and
aaa
and
loop
in
dec
xchg
mov
out
clc
pop
hlt
fisttpll
insl
shlb
xchg
fmuls
pop
repnz
cltd
cmp
push
xchg
lea
cwtl
js
xchg
inc
cmp
insl
or
fcmovb
push
cmp
ljmp
in
leave
imul
lods
bnd
addr16
push
insl
pushf
aas
mov
or
ret
mov
cmp
pop
mov
cmpsb
cli
aaa
pushf
pop
lret
outsl
sbb
mov
repnz
mov
jne
ds
icebp
test
sub
icebp
mov
fisttpl
push
dec
pushf
jg
aam
xchg
xchg
arpl
and
xchg
mov
jns
repnz
dec
scas
pop
jecxz
adc
pop
cmpsb
and
dec
stos
sub
xchg
inc
lret
jbe
popf
fs
iret
jo
push
fstl
nop
test
pop
repz
ret
cli
rol
es
cmp
mov
mov
repnz
mov
dec
in
loope
lahf
rcrl
cltd
jae
mov
mov
std
lods
stos
and
into
jae,pt
fcompl
dec
push
aaa
xchg
inc
cli
nop
pop
fs
xor
mov
movsb
mov
js
in
lahf
jae
fldt
lock
add
add
and
test
xlat
fistl
mov
jmp
cmpsb
jns
call
mov
jne
dec
and
mov
adc
inc
push
jle
sub
xor
repz
mov
sub
pop
icebp
add
repnz
jbe
int
pushf
dec
add
sahf
inc
icebp
sub
xor
cmpsl
data16
sbb
or
adc
cmpsb
das
gs
scas
cli
add
icebp
add
dec
int
loop
fcoml
dec
repz
add
mov
movsl
and
mov
adc
mov
dec
icebp
fnstcw
mov
add
or
push
push
test
inc
out
xor
jne
mov
cld
add
repnz
jecxz
mov
ret
insb
cmp
sbb
sub
out
inc
adc
pusha
jp
jle
dec
lds
add
push
cmpl
pop
push
or
dec
and
sub
xchg
hlt
in
test
xor
iret
popl
aaa
fucom
lahf
lahf
sbb
aaa
push
std
xlat
dec
push
in
add
jecxz
dec
repnz
mov
cmp
hlt
pop
test
imul
aas
mov
or
sub
adc
shrb
cwtl
inc
cltd
dec
ds
adc
rolb
lcall
push
insl
arpl
jle
mov
pop
push
fs
lret
pop
xchg
lret
test
xor
cwtl
ljmp
int
lahf
sub
or
cmc
daa
sub
repnz
ja
mov
inc
ljmp
mov
xor
mov
out
xchg
rorb
mov
pop
xchg
push
iret
or
mov
test
sarl
push
ficompl
or
push
movsb
mov
or
test
in
pushf
push
loop
pop
push
push
jp
inc
blcmsk
add
push
sub
test
jb
xchg
out
push
sub
jle
test
icebp
push
jmp
mov
pop
pop
xlat
or
loop
lcall
mov
std
cmp
lahf
repz
lock
jae
adc
push
insl
mov
add
mov
lds
in
sbb
addr16
and
les
ss
pop
call
lods
lret
mov
lock
iret
add
aaa
add
into
xlat
sub
mov
push
stc
inc
dec
std
sbb
stos
movsb
jg
sub
les
push
and
mov
cmc
jp
pop
lds
jle
sbb
inc
mov
into
sub
cmovs
je
in
in
dec
and
cltd
cmp
cmp
ljmp
jb
lds
inc
push
call
xchg
and
rcr
stc
imul
inc
loop
jmp
inc
add
fwait
ret
fstpt
incl
mov
mov
sub
xor
sbb
sti
and
mov
cmp
ffreep
in
repnz
in
dec
jecxz
mov
scas
gs
inc
mov
nop
mov
sahf
xor
xchg
cmp
stc
insb
mov
fdiv
push
sbb
lcall
inc
push
inc
and
add
js
adc
or
out
cmpsb
int3
mov
push
imul
xchg
cltd
and
nop
insb
dec
jmp
hlt
test
and
rcrb
pop
jne
and
enter
std
xchg
add
int
mov
sbb
dec
jmp
ja
fucomip
jae
mov
aad
mov
mov
xor
jns
mov
jbe
fdivrs
fidivrs
adc
arpl
sub
lea
sub
gs
js
leave
push
cmpsl
out
xchg
ja
lcall
lret
or
aas
push
mov
repz
movsl
stc
or
sbb
arpl
cmpb
js
fnstenv
and
fistpll
jne
std
pop
fs
jbe
and
cmp
push
movsb
lret
call
lock
loope
mov
dec
movsl
sbb
and
out
aaa
lock
push
jnp
cli
inc
cmp
bound
mov
es
mov
jge
pop
out
movsb
jg
xor
mov
push
push
in
sti
jg
jmp
fidivrs
jecxz
lahf
call
jmp
aad
cmp
js
out
ret
subb
and
cmc
sti
imul
ja
fcoms
stc
pop
xor
arpl
inc
jbe
out
jnp
test
and
mov
dec
push
xor
add
pop
andl
and
in
das
cmp
int3
fmull
aad
push
dec
aas
loope
adc
dec
int
mov
divb
dec
filds
int3
xchg
or
mov
cmp
nop
xchg
imul
outsl
popa
mov
mov
movsl
cmp
dec
je
jge
mov
es
dec
mov
in
lods
aaa
and
pop
pusha
mov
push
xor
pop
test
fcoml
jle
and
mov
add
or
test
js
ja
ds
enter
and
inc
cmp
push
pop
jp
dec
mov
ljmp
adc
stos
or
addr16
jns
imul
cmp
cs
cmp
gs
je
push
sbb
stos
jnp
and
nop
lods
stos
xor
mov
mov
setns
and
arpl
sarb
adc
ljmp
push
fs
rcll
or
mov
jge
sub
sub
and
jbe
icebp
das
mov
cwtl
rcl
cmpsb
test
adc
popa
or
out
jb
cmp
mov
cmp
pop
ret
pushf
scas
lea
dec
pop
xchg
xor
add
jecxz
sbb
push
cmp
movsl
sbb
and
lods
pusha
sar
push
cmp
inc
inc
xlat
push
outsl
inc
pop
xchg
xor
movsb
or
xchg
movsl
pop
movsl
mov
dec
scas
push
icebp
pusha
repz
clc
pop
nop
pop
test
xchg
lahf
sahf
inc
push
fistl
and
daa
cmpsb
leave
in
out
scas
cwtl
leave
clc
pop
loop
xor
inc
and
mov
lea
sbb
into
outsl
cmp
push
hlt
inc
jp
lret
fsubrs
out
or
mov
adc
jnp
pusha
test
hlt
mov
icebp
stos
mov
jb
movsb
mov
mov
lret
jg,pt
bts
jnp
ja
loope
fmuls
pushf
adc
push
xchg
lods
jne
mov
loopne
push
xchg
push
jl
sbb
push
pop
int
lods
cmc
cmp
gs
das
cltd
cmpsl
mov
stos
add
test
jl
cmpsl
jo
sahf
js
adc
push
in
mov
mov
mov
sti
aad
icebp
dec
push
lret
rclb
mov
jmp
lock
out
test
push
mov
sub
xchg
mov
movsb
push
adc
and
cmp
cmp
xchg
daa
in
cmp
push
test
lds
shll
mov
sbb
nop
or
pop
into
rorb
jg
lods
das
adc
pop
xchg
iret
ret
lret
aad
mulb
cmpsw
test
pop
jnp
mov
lock
push
cmp
mov
mov
pop
pop
adc
add
inc
inc
dec
shl
mov
sahf
insl
add
jmp
push
cmp
daa
xor
push
inc
mov
mov
scas
mov
adc
outsb
sahf
mov
add
mov
add
pop
je
aam
aam
cmp
loop
pop
scas
xchg
out
aad
out
cmp
pop
xor
les
cs
or
test
xchg
lahf
std
in
sub
xor
mov
xor
arpl
dec
hlt
inc
dec
sbb
sbb
mov
adc
ds
rcll
incl
add
push
mov
sub
loope
addr16
out
xor
mov
jl
rcr
lahf
mov
push
sbb
dec
mov
push
out
cmpsb
leave
outsl
adc
mov
mov
lahf
mov
mov
out
sti
test
cmp
leave
cli
out
test
inc
shlb
rorl
arpl
add
xchg
xor
fildl
nop
dec
mov
dec
and
xchg
lret
ss
xor
push
shrb
xchg
aaa
or
mov
jae
in
roll
fcmovnbe
rcrl
les
out
outsb
inc
lcall
rolb
adc
xchg
pop
dec
mov
leave
cmpsb
dec
xchg
scas
leave
fnstenv
jae
dec
xor
push
xor
push
loope
lods
pusha
mov
mov
movsb
test
sub
sub
jp
and
rcrb
jbe
cld
mov
fisubl
mov
mov
jmp
xor
pushf
fmull
inc
sbb
dec
push
adc
lret
jmp
xor
xchg
inc
sub
dec
dec
sub
mov
pop
xchg
dec
test
fildl
add
adc
mov
push
sub
mov
xchg
scas
hlt
cmp
sbb
loop
cmp
arpl
dec
fcompl
fwait
leave
sub
push
iret
popa
sbb
cmp
sbb
sbb
pushfw
mov
xor
shr
lea
add
pop
or
pop
and
cmpsl
in
sbbl
push
pop
add
mov
into
adc
sub
cmpl
mov
push
mov
jns
ja
lret
dec
dec
jno
xor
add
add
push
dec
push
and
cmp
jno
sbb
call
popa
out
and
into
imul
or
cli
jecxz
sbb
xor
mov
aad
adc
push
je
sub
inc
cmp
jp
in
stos
adc
aam
aas
in
loope
add
xor
js
dec
adc
fs
sbb
popa
scas
stos
adc
xchg
cld
negl
mov
mull
mov
mov
add
adc
jne,pt
and
test
xchg
cmp
add
icebp
jnp
dec
pop
int
arpl
cld
xchg
add
cmp
outsl
pop
cmp
lret
scas
sar
push
xchg
rcll
sbb
and
es
or
das
push
cltd
imul
cmpsl
daa
jnp
lea
stos
je
test
mov
jmp
sbb
int3
xorl
les
cmpsl
mov
lahf
or
add
imul
sub
xor
clc
int
or
out
imul
sub
mov
mov
sti
mov
and
test
sbb
lret
orl
jne
call
or
mov
je
dec
xchg
mov
fistl
call
xchg
mov
je
pusha
xorl
aaa
lock
sahf
test
pop
je
dec
lahf
and
dec
je
fcompl
push
les
outsb
ljmp
nop
cwtl
add
shrl
xor
fstl
cmc
pop
pop
sbb
xchg
sbb
sbb
clc
outsl
arpl
fldl
and
xlat
lret
mov
fdivrl
int3
adc
fimull
sahf
xor
sarl
push
xchg
or
dec
fistpll
xor
inc
xor
inc
ret
push
xchg
pop
lea
sbb
mov
sbbl
cmp
pushaw
ja
fwait
pop
clc
push
jecxz
popl
mov
into
push
das
push
test
pop
ficomps
or
lahf
bound
dec
adc
sbb
xor
in
iret
mov
xchg
xchg
negb
icebp
imul
fidivs
push
add
sub
add
leave
sbb
inc
rcrb
scas
sar
pop
pop
movsl
in
mov
jne
push
jo
in
dec
decb
mov
arpl
add
aam
imulb
mov
pop
cld
addl
addr16
jb
or
cs
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
mov
xor
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
add
mov
mov
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
sub
sub
sub
sub
xor
adc
mov
adc
jmp
add
testb
and
dec
sbb
nop
sbb
addl
adcl
mov
lds
popa
popa
fstps
clc
hlt
sbb
xchg
and
push
into
aaa
mov
and
push
repz
dec
jg
sbb
arpl
jno
bnd
mov
int3
push
inc
lods
std
idivb
push
clc
fiadds
sub
xchg
pop
nop
lods
xchg
mov
adc
jmp
jae
jnp
lock
outsl
adc
lods
insb
dec
std
lcall
mov
and
or
xor
pop
sbbl
sub
popf
cmp
xor
xor
xchg
push
sahf
data16
outsl
sub
in
dec
andl
xchg
sub
mov
mov
or
xchg
adc
lods
push
push
daa
jns
dec
imul
cltd
pop
and
loopne
or
jae
sbb
cwtl
or
testb
sub
repz
icebp
daa
scas
xor
enter
je
ljmp
cmp
jg
cmpl
mov
sti
hlt
loope
les
inc
pop
into
add
dec
std
xchg
rcrl
jae
inc
or
add
cltd
mov
sub
lret
out
sub
insb
xor
in
or
popf
mov
mov
or
ret
movsl
inc
mov
aad
push
sbb
sbb
and
sub
pop
mov
lods
pop
hlt
fsts
pop
sub
rorl
data16
xor
testb
adcb
rol
ss
mov
aad
mov
lods
aas
adc
xchg
inc
inc
and
repz
xor
or
sbb
adc
sub
cmp
push
stc
and
call
sbb
lahf
out
xlat
mov
xchg
xor
cmc
scas
jmp
rcl
mov
imul
xlat
push
pop
call
sbb
mov
xchg
adc
dec
rcrb
adc
es
add
iret
pop
xchg
imul
ss
xchg
cmp
or
inc
mov
push
or
adc
inc
daa
dec
cmpb
push
fwait
loope
mov
xchg
fimuls
fistl
sti
xchg
mov
push
mov
lahf
push
imul
jno
mov
dec
cmp
enter
mov
and
adc
out
mov
dec
cltd
outsb
mov
xchg
sbb
xlat
xchg
jmp
xlat
ret
fwait
leave
mov
mov
in
into
mov
cmp
out
ret
adc
jns
xlat
and
xchg
shrl
pushf
out
mov
add
int
pusha
or
ret
je
cmp
push
rclb
ret
in
imul
ljmpw
jo
push
scas
adc
pop
mov
divl
push
xlat
inc
dec
lret
js
push
and
out
push
push
iret
xchg
push
loopne
test
test
repz
lock
enter
dec
jo
out
xor
dec
cltd
xor
test
xchg
shl
cwtl
push
push
jae
stc
insl
adc
test
out
dec
mov
lds
jo
jnp
push
cmp
push
pop
jle
repz
stos
adc
notl
imul
xchg
sub
out
sub
push
dec
repnz
mov
add
rorb
int3
stos
stc
popf
mov
add
and
xchg
fadd
cmp
loope
sbb
mov
outsb
mov
sub
insl
mov
imul
lahf
pop
jo
out
xchg
lds
pop
in
mov
sbb
stos
xor
pop
xchg
int3
xor
fbld
or
jae
add
rorb
xchg
dec
lock
mov
pop
enter
or
mov
out
test
les
cmpsl
sbb
ss
in
xchg
push
inc
xchg
loopne
fmulp
dec
call
ffree
jmp
jmp
sbb
push
jne
lods
xor
enter
jmp
jns
jmp
xchg
cmp
pusha
fwait
pusha
popa
xchg
aaa
in
pop
xor
push
xor
pop
mov
jno
xorb
pop
jne
pop
test
mov
and
les
in
or
mov
cmpsl
cmp
icebp
enter
cmpsb
daa
es
incl
popf
mov
aaa
pop
adc
jmp
push
adc
mov
cmp
lret
mov
dec
inc
loope
loopne
or
sbb
jg
pop
mov
test
inc
in
push
lcall
test
and
test
xor
loopne
cs
repnz
repz
movsb
xchg
sbb
lret
js
data16
xchg
mov
mov
push
adc
push
popf
or
mov
push
stos
xchg
decl
add
push
and
es
cmp
inc
or
jae
jnp
mov
out
cmp
in
pop
mov
in
mov
mov
jmp
mov
mov
xor
mov
mov
sbb
idivb
mulb
or
cmpsl
or
inc
push
mov
sahf
inc
pop
incl
outsl
js
jb
out
loop
mov
lods
sub
adc
adc
jns
push
xchg
pop
iret
jle
mov
add
enter
adc
lret
sarl
adc
icebp
popf
inc
sub
sub
ret
pop
jg
mov
mov
xlat
xchg
mov
mov
jbe
push
fisubrl
and
insb
jp
repz
inc
and
pusha
push
js
inc
or
or
xchg
adc
sub
sub
loope
ss
xchg
aad
and
aam
ja
mov
insb
push
jle
mov
sub
sarb
inc
mov
into
sub
mov
push
test
mov
or
dec
cmpsl
ja
jnp
pusha
call
cmp
xchg
xchg
cmpl
inc
mov
je
or
std
in
xlat
pop
mov
pop
or
cmp
xchg
dec
pop
push
out
mov
insl
jg
test
stos
push
sbb
mov
inc
jl
sub
int
out
mov
push
and
das
mov
enter
jb
das
fidivs
add
sbb
cltd
lret
cli
jmp
notb
jge
sbb
movsl
std
jge
adc
sbb
jno
inc
pop
aas
or
pop
xchg
and
push
sarb
and
enter
push
mov
dec
aam
jo
sbb
pop
mov
push
and
push
jne
cli
iret
filds
mov
pop
adc
test
sahf
push
imul
divb
or
lcall
cmp
lock
arpl
pop
xor
sbb
add
fucomp
rdtsc
mov
fimull
xchg
sbb
pop
pop
cmc
jb
mov
inc
insl
adc
rolb
arpl
and
jl
clc
out
and
dec
int
aam
cmpl
inc
stos
icebp
lods
outsb
leave
mov
mov
mov
push
pop
lret
jp
test
xorb
push
es
int
push
rcr
push
sub
enter
das
jbe
push
mov
dec
sub
push
pop
inc
mov
or
cmp
out
inc
movsb
jg
jecxz
stos
lds
push
adc
xchg
push
nop
ret
cmc
out
push
xor
or
jno
cmp
outsb
jbe
aaa
inc
add
arpl
pop
pop
pop
xchg
std
cmovne
mov
cltd
push
mov
out
add
adc
ss
cmp
and
cmovnp
cwtl
jns
mov
cmc
imul
sbb
std
fsubl
adc
cmc
cmp
ss
arpl
loopne
push
pop
or
push
push
loope
cmp
pop
popf
fcoml
dec
xlat
push
cmp
movsl
in
jmp
in
add
sub
sbb
jle
pop
mov
loopne
push
add
push
in
or
imul
or
sbb
jp
push
xchg
jecxz
fcompl
int3
flds
std
xchg
mov
push
xchg
dec
sbb
je
pop
push
lea
stos
sbb
lret
stc
mov
fcoml
inc
js
add
sbb
test
xor
call
jecxz
hlt
sbb
xor
sub
imul
sbb
pop
jl
push
jnp
fisubs
pop
pop
mov
imulb
jnp
add
jg
xor
mov
pop
add
xor
inc
cmp
shlb
pop
adc
mov
push
xor
xor
rorb
jg
inc
sub
cmp
popa
jnp
insl
movsl
jo
push
mov
pop
push
add
pusha
in
and
sub
es
cmp
ret
xor
mov
dec
rorl
inc
sub
test
outsb
test
cmp
or
int
and
jmp
jb
repz
fstl
shrb
stos
pop
dec
mov
mov
rcl
fstps
push
imul
jnp
pop
out
outsb
xchg
and
ds
insl
lock
shl
clc
xor
popa
pop
adc
ljmp
dec
and
push
test
int3
jbe
inc
and
push
icebp
lret
push
jl
jl
fdivrp
add
and
xchg
ljmp
stos
les
and
push
popf
test
or
pop
in
push
das
in
xchg
mov
dec
rcll
and
add
sbb
ret
leave
xchg
js
cmp
dec
inc
shrl
nop
xor
mov
inc
add
int
lcall
xchg
inc
jmp
inc
jl
dec
test
dec
sbb
and
les
test
in
test
das
imul
pushf
cmp
pushf
lret
scas
cld
add
mov
cmp
out
or
add
jae
cmp
test
xor
cmp
pop
add
dec
pop
imul
push
nop
dec
aad
pop
mov
sti
push
mov
out
pop
mov
out
inc
mov
rorl
pop
jecxz
push
lock
cmpsb
cmp
fsub
aam
lds
and
mov
aas
jmp
pop
imul
sbb
dec
inc
and
inc
jbe
lcall
and
movsl
imull
lods
mov
cmpsl
fiadds
or
int
stc
mulb
or
call
hlt
push
data16
das
in
scas
add
test
fs
and
and
mov
insl
dec
and
sub
pop
lahf
test
push
lahf
mov
cld
lret
and
insb
add
xlat
jge
inc
cmpl
lods
xchg
cmp
cmp
mov
jg
imul
adc
into
sbbl
mov
push
pop
pop
mov
leave
push
lds
mov
mov
ficoml
out
aam
shr
mov
repnz
jo
cmc
cmpsl
popf
dec
repnz
jp
dec
mov
loopne
arpl
in
roll
ret
pop
inc
mov
fadds
in
repnz
sbb
sub
mov
int
mov
loope
negl
lds
inc
cwtl
fildll
or
jno
mov
icebp
mov
and
nop
data16
add
jne
xchg
sahf
mov
push
mov
xor
testl
in
stos
jge
xchg
sub
jl
cmp
mov
outsl
cmp
push
adc
stos
add
or
cmp
lret
xlat
add
xchg
pop
rcll
popf
ficoms
lret
outsb
fst
adc
icebp
rolb
test
jl
dec
inc
cmpsb
outsl
jg
mov
push
gs
sbb
sub
insb
fwait
cld
add
mov
outsb
into
jl
mov
jnp
aad
cld
rclb
mov
sahf
ss
xor
out
hlt
arpl
or
out
hlt
adc
sub
cmp
jge
int3
adc
jmp
pushf
push
cltd
pop
hlt
sbb
cmpsb
mov
push
push
inc
add
xor
jbe
repz
cli
xor
xchg
dec
push
sahf
int3
ret
cmp
lods
or
inc
mulb
jne
pop
cltd
sbbb
sub
add
ficoml
inc
fdiv
enter
daa
push
pop
sysret
jno
cmp
fs
inc
xor
movsb
test
pop
imul
mov
sub
popa
lock
lcall
sbb
pop
mov
dec
push
lds
mov
addb
hlt
jge
ds
test
insl
push
in
dec
mov
loope
inc
xchg
jns
aad
cs
cmp
push
jo
and
sahf
add
dec
add
xchg
ret
imul
lods
jae
rcrl
pop
outsl
movsl
mov
js
cmp
subl
fcomp
jmp
mov
movsl
mov
popl
or
xor
jle
divb
fs
mov
xlat
insl
je
jg
jae
cmp
sub
mov
xchg
adc
sub
mov
adc
in
and
cmp
inc
imul
mull
mov
xchg
repz
sarb
cmc
fldcw
orb
test
scas
in
jg
jge
xor
mov
mov
stos
cmpb
cs
adc
jo
daa
add
sahf
dec
scas
lahf
push
mov
add
xlat
mov
lcall
xchg
mov
push
cwtl
add
cld
lock
aad
nop
xchg
loope
sbb
lret
cld
add
push
add
push
fisubs
mov
sbb
mov
adc
ss
je
xchg
mov
cmp
loopne
lcall
dec
int3
lods
xchg
pop
in
push
test
addb
jl
xchg
mov
stc
cmp
aad
xchg
and
leave
movsb
jg
imul
sahf
fadds
popf
inc
jo
xchg
aas
rcr
add
std
test
adc
cmc
mov
jecxz
jo
subb
cwtl
mov
mov
jnp
jnp
and
into
mov
cwtl
xor
addr16
mov
int
ss
enter
mov
fs
jmp
add
xor
test
daa
leave
rcrb
movsb
fistpl
jnp
xchg
mov
and
add
sahf
xor
cltd
sub
mov
adc
clc
fneni(8087
testb
in
cmp
arpl
subb
add
std
mov
nop
add
cmp
popf
mov
inc
cld
mov
xchg
pop
lods
xchg
shl
leave
std
cmp
int3
inc
in
mov
inc
movsb
sbb
adcl
repz
enter
outsl
ror
push
add
push
loop
and
mov
mov
sub
push
push
cltd
lods
pop
xor
aam
imul
lea
mov
ds
cmp
lret
mov
rolb
mov
xlat
lret
push
xchg
leave
arpl
out
popf
inc
jnp
dec
sbb
dec
stos
outsl
mov
sbb
inc
inc
scas
or
in
outsl
push
mov
push
mov
aam
out
es
sub
cli
push
pop
stc
fiaddl
mov
ss
cs
or
das
cld
pop
adc
gs
mull
xchg
dec
pop
xlat
push
dec
iret
sbb
nop
pop
insb
mov
data16
inc
push
inc
mov
add
clc
xor
push
jmp
out
xor
lcall
cmc
cld
push
inc
fisubrs
ljmp
xchg
push
xor
add
popa
pop
or
cmp
jp
in
iret
cmp
mov
andl
cmpsb
adc
in
leave
hlt
lods
push
adc
inc
fucomip
ss
xor
inc
jg
repz
cmpsl
fldl
fildl
jg
icebp
cli
aas
imul
stos
in
lret
sub
rorb
cmpsl
fdivs
mov
aaa
jb
xor
sahf
mov
aad
movsl
fs
xor
jns
clc
test
sbb
or
aas
out
adc
sbb
pop
cmpsl
stos
ret
mov
ret
imul
dec
aam
or
mov
test
add
inc
and
xchg
ficomps
leave
ret
lods
dec
mov
add
fildl
fwait
into
xchg
inc
pop
lret
out
inc
push
jl
popa
repz
sbb
dec
int
fldenv
xor
sarb
popa
clc
dec
and
push
cld
hlt
sub
bswap
pop
clc
lret
lock
or
jnp
xchg
mov
lret
cwtl
stos
dec
in
and
pushf
jnp
je
push
dec
jecxz
leave
hlt
fstl
lahf
repz
pop
aaa
jp
push
cmpsl
imul
das
mov
cld
loopne
dec
and
jge
jae
xchg
fwait
stos
daa
fwait
ja
loop
mov
push
push
inc
js
inc
rcrb
in
inc
cmpsb
jle
mov
xor
and
xchg
or
dec
push
aad
and
mov
cld
push
add
cmpsb
pop
lods
in
jne
popf
sub
shr
xor
or
xor
inc
sbb
pusha
mov
addb
loopne
pop
pop
xchg
shl
loop
out
bound
jbe
jo
int
pop
in
jne
mov
push
jae
mov
test
lahf
cmp
fxch
push
mov
jbe
stos
stc
push
scas
sbb
cmc
or
mov
ja
pop
addr16
adc
pop
pop
sbb
jg,pn
jne
cs
outsb
sub
mov
test
daa
mov
and
xlat
into
js
sub
nop
rclb
pusha
inc
sub
divb
bound
stos
push
out
je
imul
or
inc
xchg
ficoms
mov
push
jb
insl
pop
mov
inc
movsb
mov
into
scas
cmp
adc
aaa
xlat
inc
leave
loopne
jno
lods
mov
aaa
int3
loop
mov
cltd
xchg
jmp
data16
inc
test
or
cmc
pop
lret
rclb
and
pop
fistpll
or
mov
out
movsl
and
imul
movsb
xor
jns
icebp
pop
cld
push
bound
adc
sub
sahf
loop
jb
push
arpl
dec
sbb
addr16
xor
ficomps
dec
loopne
mov
sbb
cmc
add
popf
push
rorl
push
cmp
out
pop
mov
dec
inc
adc
popf
push
icebp
sahf
mov
hlt
cmp
adc
ret
repz
fucomip
lret
sbb
xor
int3
sbbl
push
xor
mov
mov
shufps
cmp
xor
add
xchg
pushl
sub
xor
subl
fldcw
pop
mov
iret
dec
and
and
pop
jne
pop
rcrl
bound
cwtl
sbb
cltd
nop
pusha
dec
mov
out
mov
daa
in
adc
jnp
add
iret
or
cmp
xor
pop
sbb
adc
test
in
dec
or
push
mov
lret
int3
mov
pop
add
shll
inc
cmpsl
into
cld
shl
pop
push
push
push
outsl
sarl
jno
pop
sti
mov
outsl
or
cwtl
imul
sbb
stos
fsubrl
or
adc
lds
mov
xor
fistps
and
mov
jo
ljmp
aad
ss
fbstp
pop
xchg
imul
ss
mov
cltd
int
or
insb
and
mov
mov
push
stc
xchg
ret
loop
cs
test
mov
jle
mov
or
popa
movsl
scas
or
cmp
dec
jno
scas
cltd
stc
sarb
jno
jmp
adc
xchg
out
gs
pop
fucomi
inc
gs
cmp
xchg
pop
pop
out
lahf
xlat
add
push
adc
adc
or
ss
fisttps
stc
nop
arpl
stc
sub
in
ret
aad
scas
push
lods
add
mov
repnz
stos
inc
sub
add
sbb
mov
mov
pop
pop
xor
mov
sahf
loope
mov
and
or
negb
dec
cld
bound
incb
mov
shlb
repz
and
insb
out
mov
dec
daa
sbb
lock
aam
mov
mulb
je
sub
shl
xchg
mov
ficoms
and
mov
lods
pop
add
mov
scas
out
mov
mov
sbbl
outsl
test
es
push
xchg
lret
and
mov
mov
aad
arpl
and
test
fldcw
pop
movb
stos
enter
mov
mov
push
cmpsl
mov
xor
dec
sbb
call
stc
dec
orb
aaa
in
dec
movsb
xchg
add
in
add
in
fucom
iret
jns
push
aad
xchg
cmp
push
int3
pop
scas
es
je
cmp
xchg
dec
xchg
adc
std
inc
repnz
mov
adc
adc
mov
mov
push
js
icebp
push
lods
pop
push
dec
cwtl
shrl
jbe
add
jbe
sub
mov
fistl
jecxz
or
gs
pop
mov
cmpsb
cld
mov
test
mov
addr16
dec
fwait
add
repnz
mov
xor
jl
aam
fwait
add
addr16
psubusb
mov
push
movsl
xchg
pop
addr16
sbbl
or
adc
test
out
cmp
mov
nop
icebp
cmc
cmpsb
dec
fwait
or
jle
sub
sbb
mov
gs
cltd
mov
pop
cmpsb
push
mov
sub
jmp
iret
fsubrl
int
mov
enter
jnp
rcrb
out
xchg
pop
xchg
xlat
sbb
jg
add
jns
mov
cmpl
shrl
mov
in
jle
push
push
or
and
ljmp
cmpsb
test
jb
or
jl
pushw
cmpsb
fwait
push
sub
in
xchg
nop
jnp
loop
sti
paddb
jl
aad
mov
stos
daa
mov
mov
out
xchg
aad
xchg
or
or
mov
xor
mov
ljmp
and
ss
rolb
adc
call
push
pop
xlat
loop
pop
pop
xchg
popl
loope
sub
arpl
in
test
je
push
dec
out
mov
pop
lahf
test
xor
adc
rol
pop
jg
cmp
or
mov
xchg
sbb
scas
inc
pop
mov
pop
mov
subl
testl
xlat
pushf
ret
jb
sbbb
push
sar
pop
shl
pop
adcl
imulb
or
push
cwtl
sbb
lret
mov
mov
fidivrl
adc
imul
cmp
imul
into
push
mov
mov
stc
mov
dec
fldl
fsubrl
mov
sub
lods
cs
jb
outsb
jne
jnp
lahf
insl
inc
dec
daa
dec
pop
inc
pop
cmp
clc
sti
in
out
jp
sahf
push
fnstcw
lods
mov
fistl
or
adc
ss
xor
test
addl
push
fidivrs
jmp
dec
mov
jnp
hlt
filds
fdivl
insl
mov
clc
mov
adc
sbb
ljmp
cmp
sub
mov
jecxz
or
ret
cmp
push
mov
xchg
aaa
sbb
push
and
sub
sbb
shlb
cmp
cld
bound
xchg
lcall
mov
loope
mov
xchg
cmp
push
mov
jmp
or
cmp
clc
xor
and
mov
or
scas
repz
icebp
mov
dec
add
xor
jno
sub
push
push
or
test
lods
and
int
adc
in
mov
stc
push
aas
sbb
pop
add
jbe
setp
in
cmp
bound
repz
bnd
repz
pop
push
or
outsl
and
adc
jmp
xor
push
pop
sbb
bound
fisttpl
mov
rorl
jb
mov
mov
gs
pop
xor
test
test
ret
jg
in
jg
ret
fmul
test
dec
xor
rcl
in
out
sbb
pop
mov
or
xlat
out
call
xor
and
out
enter
repz
sub
push
loop,pn
sbb
adc
xchg
mov
pop
mov
pop
les
ss
pop
xorb
push
jg
imul
mov
jae
add
ds
xor
test
adc
push
add
fstpt
push
dec
data16
mov
mov
pop
add
loopne
mov
mov
sar
je
push
adc
push
add
sub
mov
mov
inc
dec
fcomps
int3
pop
and
cmp
cmp
cs
fistpll
dec
xchg
in
jp
sti
aaa
push
mov
inc
mov
lods
xchg
jp
hlt
inc
adc
test
mov
dec
clc
mov
popl
test
fldcw
inc
mov
adc
sub
xor
and
aaa
test
outsl
sahf
dec
lds
jno
aad
pop
jns
in
jge
je
in
push
xor
jmp
orl
xor
pop
xor
sti
cmpsl
mov
repnz
and
outsb
adc
in
jmp
mov
cmpsl
mov
sub
jb
inc
sub
pop
out
test
sbb
jmp
adc
and
loope
aam
mov
xor
push
or
dec
cmp
jge
pop
insb
out
fs
mov
pop
fcmovne
rorb
dec
insl
shlb
icebp
sub
shl
jle
aas
pop
sti
lods
leave
jp
pop
fs
inc
mov
mov
push
inc
xor
in
int3
dec
mov
repnz
cmpsl
ja
cmp
mov
pop
cmp
xchg
js
lahf
add
xor
dec
mov
mov
adcb
add
jmp
xchg
cmp
dec
dec
fisttpl
mov
mov
into
dec
mov
test
das
push
xchg
sub
xor
ljmp
fnstcw
fisttpl
xor
sarl
pop
dec
lret
xchg
mov
push
sub
lods
in
bound
repz
xor
add
mov
mov
aas
mov
and
jo
mov
in
testb
out
movsl
mov
iret
imul
mov
divl
fcmovnbe
aaa
aas
jmp
lcall
orb
mov
push
cmp
mov
xchg
cs
loope
xchg
clc
mov
addr16
pop
enter
nop
push
xor
imul
aad
out
sbb
loopne
sti
test
or
out
mov
pushl
push
push
out
ljmp
outsb
js
insl
lret
and
inc
punpckhdq
jg
pop
std
mov
popa
sbb
jp
popa
sub
inc
jne
pop
push
dec
and
and
mov
daa
dec
cmp
iret
rcrl
xorb
mov
dec
inc
lds
imul
repnz
add
sub
pop
movsl
nop
dec
sub
aaa
popf
sub
out
or
pop
adc
cwtl
cli
repnz
push
fwait
mov
pop
mov
test
dec
or
push
mov
fstps
pop
jecxz
es
sub
add
imul
shlb
add
mov
movsb
add
rcr
add
sbb
xchg
push
jp
xchg
mov
imul
inc
ja
scas
pop
mov
lods
jmp
pop
insb
call
sbb
sbb
cmpsl
jb
mov
rcl
arpl
jns
hlt
or
jae
daa
jae
in
push
cmc
lahf
popa
xorl
rcrl
js
or
iret
sbb
mov
or
jnp
xchg
inc
inc
sti
int3
sbb
sbb
sub
mov
xchg
arpl
stos
jl
mov
fisubrs
jp,pt
ljmp
enter
pop
lea
xlat
xchg
pop
xchg
mov
inc
pop
pop
test
cltd
xchg
clc
xor
mov
or
mov
test
xlat
mov
ret
xchg
das
mov
push
popf
mov
fisttpl
mov
jb
aad
int3
inc
cwtl
dec
sbb
mov
int3
fimull
jl,pt
xor
loope
xor
cmp
lds
cltd
gs
std
cmp
adc
scas
repz
je
fcmovnu
inc
mov
add
mov
hlt
jbe
leave
aam
scas
or
mov
push
and
inc
xor
add
pop
lcall
inc
ja
sbb
mov
xchg
int3
mov
cmpsb
movsb
cmp
sbb
inc
sub
sub
data16
sbb
cltd
insb
jbe
movsb
test
jo
pop
fstps
out
or
fisubs
or
mov
sub
fwait
push
pop
nop
fcoms
rorl
bound
jo
cmp
xorb
mov
push
add
int3
add
in
pop
mov
jb
mov
in
mov
sbb
cmp
dec
jmp
sbb
push
sub
push
xor
sub
movsl
cmp
cmpsb
out
mov
mov
mov
test
jl
das
mulb
lret
aam
mov
sti
adc
push
ljmp
xchg
xor
add
stos
les
xor
xchg
out
xchg
inc
add
adc
pop
shrb
arpl
dec
movsl
mov
fisubrs
cmp
int
mov
popa
push
out
xor
daa
ljmp
das
scas
mov
push
repnz
ss
cmpsb
lock
fidivrs
pop
mov
pop
pop
sub
jne
xlat
outsb
cli
test
or
arpl
and
pop
sahf
cmpsl
or
lds
lock
xchg
or
arpl
push
mov
push
jmp
inc
test
dec
pop
cmp
clc
ja
or
lock
cli
stos
clc
add
cmp
jecxz
or
int
mov
aad
loope
andb
and
xchg
adc
mov
fmull
scas
mov
ror
pop
pusha
movsb
mov
jp
jmp
mov
fisttps
or
mov
bound
cld
loop
testl
out
mov
pop
aad
ret
mov
jnp
pushf
btc
sbb
sti
mov
sbb
in
dec
sub
and
add
sti
mov
rcrl
div
jg
movsl
dec
cmp
repz
and
add
fnstenv
adc
sbbl
pop
and
mov
pushf
jbe
push
insl
repz
pop
gs
inc
enter
repnz
jno
xor
inc
testl
and
cwtl
cmpsl
mov
cmpsb
mov
pop
les
jb
cltd
push
jns
xchg
cmp
inc
data16
jg
dec
loope
mov
add
sbb
inc
mov
or
adc
mov
subl
add
imul
sbb
mov
orl
mov
sub
mov
add
orl
or
mov
mov
sbb
mov
movzwl
sub
mov
xor
mov
adcl
add
sbbl
xor
or
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
jmp
xchg
jmp
addl
mov
jl
inc
pop
addl
lahf
jg
cs
and
pushf
and
and
xchg
cwtl
sar
roll
adc
sub
mov
subb
aad
or
mov
andl
dec
push
stc
cmp
mov
inc
loop
push
inc
rcll
stc
push
xchg
cmc
push
decw
stos
jns
mov
ds
jbe
pop
daa
xor
pop
movsl
ret
xlat
mov
push
imul
cmc
mov
pop
push
sub
bound
sub
and
loopne
add
idivl
rorb
jnp
pushf
mov
movl
mov
add
push
lods
arpl
ret
pop
sti
add
rolb
gs
or
mov
aam
cmp
les
stc
gs
mov
sub
push
cmp
lock
add
mov
xchg
xchg
add
incl
adc
into
mov
mov
xor
xlat
in
loope
fcmovnu
stc
mov
push
pop
lock
jb
test
lods
pushf
push
cmp
lcall
xor
jmp
sbb
mov
push
mov
mov
pop
mov
rcl
ror
jge
adcb
mov
aas
rclb
dec
xlat
test
mov
popf
jmp
mov
arpl
jnp
ja
sub
movl
and
mov
imul
dec
pushf
cmp
test
arpl
rol
imul
inc
lods
sbb
ud2
cmp
push
push
sub
mov
adc
mov
cwtl
mov
adc
pushf
xlat
rorb
jg
xchg
lock
lock
sub
shlb
test
std
xlat
sbb
push
fisubrl
hlt
pop
push
or
or
pop
test
sbb
mov
sbb
sub
leave
cmp
outsl
sub
mulps
out
jae
outsb
movsb
sbb
mulb
add
js
pop
push
std
ljmp
mov
dec
pop
mov
pop
inc
jne
lods
rcr
and
iret
cld
dec
or
shl
mov
push
cmpsl
or
cmc
push
sarb
jecxz
aaa
stos
or
repnz
mov
jle
jb
jecxz
and
fldt
xor
sbb
out
pop
jb
ret
pop
pop
gs
fimuls
test
pop
pop
and
popa
icebp
in
cs
xor
hlt
scas
push
ljmp
jecxz
pop
sbb
cs
les
lret
pusha
jno
stos
xor
popf
add
jl
scas
sbb
sub
and
xchg
or
es
dec
add
lret
or
dec
xor
imull
inc
jge
sbb
cli
arpl
imul
mov
lock
xor
lds
test
push
lods
or
movsl
inc
cmpsl
mov
out
rcrb
rorb
scas
sbb
push
xlat
sbb
jb
clc
cwtl
lahf
mov
loopne
jmp
or
cmp
shrl
mov
repnz
add
jg
cli
and
into
xabort
mov
inc
sbb
iret
sub
addr16
stos
rorb
jl
bswap
jge,pt
push
repz
xchg
xchg
test
xchg
rclb
int
sbb
test
test
pop
pop
stos
inc
add
addr16
dec
xor
insb
outsl
rol
bound
insl
pop
loope
add
mov
push
adc
fsub
neg
cmp
add
scas
jge
sub
jecxz
int3
imul
arpl
jge
stc
in
mov
mov
nop
and
inc
push
mov
jne
inc
enter
lret
arpl
xor
sahf
idiv
negb
push
stc
or
aas
out
add
jle
mov
xor
adc
fs
in
pop
push
sub
aad
mov
mov
call
adc
dec
fdivr
mov
sti
jnp
mov
test
and
jecxz
stos
and
dec
inc
dec
jbe
adc
push
xchg
shl
fistps
insb
xchg
or
in
mov
movsl
cmp
ret
aaa
sub
test
in
ss
in
inc
imul
scas
ds
fwait
or
ja
inc
lock
popa
and
xrelease
dec
sbb
cmp
scas
mov
cmp
mov
or
sbb
cwtl
mov
repz
and
sbb
inc
pop
mov
icebp
decb
mov
push
aaa
sub
bnd
sub
cmp
jne
insb
and
jge
fwait
out
aaa
add
push
int
pop
jo
repnz
das
mov
push
mov
and
jo
arpl
imul
cmp
cmp
and
sub
int
bound
stos
and
lahf
jnp
aaa
scas
mov
xor
adc
cmpsb
mov
popa
push
cmp
or
orb
shll
orl
mov
pop
int
or
jbe
xchg
cmpsb
or
sbb
sub
test
xor
inc
lock
ffree
mov
and
pop
inc
mov
lea
outsb
dec
and
scas
shrl
in
out
adc
mov
mov
xchg
ss
lret
popa
fisubrl
addb
ret
add
scas
add
mov
popf
and
mov
mov
fimuls
xchg
jecxz
dec
adc
scas
fiaddl
cli
jno
mov
or
sbb
ss
jle
sub
cmp
jmp
sub
aam
mov
push
fstpt
ss
add
fbstp
mov
xlat
lret
add
cmp
rcrb
cs
dec
mov
push
or
add
dec
sub
int3
mov
push
lods
fs
or
mov
sbb
mov
mov
mov
fnstcw
jae
jo
inc
jne
outsl
leave
push
mov
add
sub
dec
push
mov
mov
mov
xchg
jge
push
ret
dec
cmp
testb
mov
mov
loop
dec
sti
out
leave
pushf
test
pop
fldenv
js
clc
jmp
inc
nop
das
int
mov
add
enter
shrl
lcall
mov
xor
mov
xchg
xchg
repnz
ret
daa
mov
mov
cs
jle
mov
cmc
aas
adc
arpl
xor
and
fdiv
in
lock
xchg
mov
pop
sbb
sahf
pop
sub
mov
imul
hlt
mov
sti
jae
movb
je
fcoms
cmpsl
xor
outsl
testl
popf
out
dec
in
loope
mov
lret
cld
pop
jg
mov
jecxz
adc
test
mov
adc
mov
js
adc
cmc
scas
cld
out
push
cmp
call
call
cmp
loopne
or
mov
sbb
mov
xlat
fsubrs
pop
sub
push
mov
xor
pop
notb
push
scas
xor
lret
dec
xchg
pop
outsb
fwait
pop
sub
hlt
movb
lods
add
repnz
movsb
orb
adc
mov
mov
push
xlat
js
fdivs
push
les
shrl
dec
add
mov
mov
in
push
jmp
inc
push
cmp
lret
scas
or
negl
jp
dec
das
shll
roll
cmpsb
fcomps
jle
das
jecxz,pt
sub
loopne
adc
xchg
pop
in
pop
sqrtps
inc
aas
mov
cmp
push
dec
addr16
movsb
push
sbb
and
jb
pop
mov
inc
mov
jnp
add
repnz
lea
gs
scas
push
mov
pop
stos
mov
and
leave
shlb
repz
xchg
jp
in
rol
adc
aam
mov
outsl
or
fsubrl
ja
inc
push
pop
inc
popf
data16
mov
add
sbb
aad
imul
mov
scas
sbb
popa
ds
movsb
mov
pop
inc
xchg
jge
ljmp
fildll
jl
rcrl
inc
push
pop
loopne
pushf
xor
popa
fwait
or
out
pop
jno
enter
aaa
mov
cmp
jmp
xor
addl
xchg
or
add
shll
pop
cwtl
cmp
aad
adc
sti
ss
jl
mov
mov
jmp
cltd
insl
mov
mov
in
add
adc
js
cmp
inc
imul
hlt
adcl
and
into
arpl
inc
and
out
mov
in
dec
and
lret
dec
cmc
add
jp
push
sub
xor
mov
pop
mov
sbb
ds
pop
das
xor
fnsave
test
test
jmp
mov
fmuls
adc
and
sbb
out
hlt
and
mov
jp
sbb
ds
push
ds
xchg
mov
xor
jecxz
dec
xor
and
adc
daa
sti
aas
add
jge,pt
dec
push
pushf
popa
inc
shrl
jns,pn
movb
sub
or
mov
cld
pop
mov
andb
cmp
data16
lock
movsl
sti
in
mov
shll
scas
cmpsl
outsb
rorb
out
jecxz
mov
imul
dec
sub
mov
jbe
sub
in
jge
or
out
addr16
jg
aaa
ret
push
ss
cmp
push
ret
sub
int
xor
mulb
stc
scas
push
and
es
outsl
jne
addr16
scas
cltd
imul
test
in
lcall
mov
xor
int
xchg
outsl
sub
clc
xor
and
andb
jnp
jo
scas
es
pushf
and
lcall
push
out
push
cmpsb
jne
jbe
test
daa
jb
dec
mov
int
mov
rcrb
loope
adc
adc
xchg
jb
and
fmull
xor
mov
add
outsb
sbb
adcl
inc
xor
sub
jle
xlat
fadds
sub
stc
xchg
mov
mov
add
inc
je
outsb
fistpll
cmc
and
rcrb
cld
sbb
das
iret
cmc
leave
imul
push
in
fucomp
inc
clc
inc
lret
adc
lahf
xchg
test
push
add
pusha
jmp
addl
sbb
cmc
add
mov
sti
pop
xchg
sub
dec
jb
fwait
mov
sbb
xchg
mov
fs
mov
int
clc
mov
mov
fstl
in
repz
pusha
inc
xor
mov
dec
and
shll
sbb
xor
lods
rclb
lds
or
jae
aas
adc
jmp
xchg
pop
sub
push
jne
mov
scas
pop
lea
call
in
adc
fdivrs
jno
aas
std
pop
fwait
mov
sbb
inc
ljmp
or
ja
inc
andl
gs
ja
bound
mov
mov
outsl
and
jecxz
pushf
aam
xchg
mov
dec
xchg
test
jae
std
mov
xchg
das
adc
sbb
push
jo
pop
push
sub
lret
sub
int3
loopne
leave
mov
js
xchg
movsb
mov
push
ds
cmpsl
sub
jo
xchg
sub
push
sub
stc
push
pop
data16
jge
or
push
lea
into
xchg
and
out
mov
enter
cli
int
mov
mov
pop
cmc
push
imul
or
in
mov
loopne
inc
cli
inc
mov
pop
adc
lret
and
jb
aam
lret
sub
cli
mov
test
add
jg
and
and
xchg
pop
stos
inc
sbb
cmp
imul
jne
shl
in
jae
sub
mov
push
cmp
xchg
xor
xchg
add
imul
xor
test
jecxz
in
adc
nop
nop
leave
fldl
push
jecxz
inc
push
out
jmp
mov
or
repz
mov
and
adc
add
cmp
mov
dec
jnp
push
int3
xor
xchg
cmp
sti
push
push
or
aas
dec
outsl
jbe
pop
inc
addr16
mov
dec
sub
pop
mov
mov
mov
inc
cld
lods
repz
sub
je
cs
jl
imul
or
jns
adc
mov
xlat
lea
jns
adc
jg
jl
sbb
sbb
ret
fldcw
jle
cs
out
push
xor
enter
mov
je
out
push
adc
sbb
and
int
shll
stos
mov
dec
jmp
jae
mov
mov
stos
sbb
insl
jmp
insl
cmpsl
hlt
outsl
cmp
cltd
cs
push
or
aam
ljmp
divb
sbb
or
or
cmp
dec
int3
adcb
push
into
mov
mov
lahf
ret
push
incb
inc
aas
fidivs
adc
mov
iret
cmpsb
sub
mov
aad
aas
je
aam
out
movsl
rorb
fisttpll
adcb
mov
push
sub
xchg
and
sti
push
imul
loopne
movsl
jo
dec
sub
aad
shlb
sahf
mov
loope
into
fisttpl
and
shr
xor
push
push
sarl
jbe
xchg
mov
xor
inc
sbb
mov
lods
cmp
mov
or
addl
lds
jmp
dec
idivl
xchg
andl
push
pop
push
ljmp
addb
sub
pushf
sbb
mov
push
cmpsl
jae
in
or
push
jae
filds
xchg
push
mov
mov
mov
out
pushf
dec
jbe
inc
sbb
stc
mov
mov
adc
sbb
push
in
ljmp
add
cmp
popf
in
popa
sbb
mov
and
pop
insl
cmp
push
andb
xchg
sub
mov
cmp
and
ret
inc
mov
inc
pop
shr
mov
sahf
inc
gs
jp
cltd
iret
mov
aad
aaa
enter
js
xor
mov
enter
mov
loope
push
fcmovbe
mov
jbe
cmp
jnp
jnp
or
dec
inc
mov
sbb
dec
shl
and
jne
jle
arpl
push
sti
push
xorb
and
dec
std
je
int
int
sti
imul
decl
imul
xchg
jae
in
jae
or
jl
and
mull
loopne
cmc
rorb
in
xchg
mov
adc
mov
adc
or
xchg
inc
mov
sbb
pop
scas
xchg
fnstcw
loop
cli
clc
lea
push
cmp
push
adc
ret
mov
mov
int
out
lods
cli
mov
jo
cs
push
mov
sbb
mov
or
pop
xchg
and
add
xchg
and
loope
int3
std
insb
or
adc
xchg
out
addl
nop
mov
mov
or
and
cli
popf
repz
push
xchg
fisubs
jno
lods
adc
sahf
rorb
mov
inc
and
aam
sbb
mov
mov
inc
pop
repnz
icebp
dec
test
dec
mov
mov
jg
pop
sarl
xor
xor
into
mov
inc
sbb
or
dec
or
adc
mov
icebp
mov
add
lods
jecxz
jnp
fsubp
lret
cs
loopne
daa
ror
mov
fnstsw
icebp
or
aas
or
loope
adc
dec
out
xchg
psrad
nop
outsl
in
fisttpl
xchg
outsl
lea
sahf
sub
into
dec
sbbb
push
imul
leave
dec
or
jns
leave
js
loop
ret
dec
jno
cmpsl
push
mull
add
mov
out
outsl
push
in
outsl
fbstp
xlat
fsts
inc
leave
or
jne
xchg
cli
dec
mov
add
mov
mov
xor
das
ss
pop
add
je
pop
ss
adc
inc
inc
in
mov
sub
out
das
xor
cld
add
cmp
inc
mov
jg
or
jmp
data16
pop
xor
or
test
sub
lcall
lret
pop
xor
rorl
sbb
movsb
test
frstor
dec
or
test
stos
mov
faddl
adc
mov
mov
inc
add
sub
cmp
xchg
pop
popf
jae
jbe
push
cs
mov
ds
outsb
fdivl
mov
imul
push
jmp
mov
sarl
jg
test
or
pop
out
lds
pop
in
xorl
pop
test
jo
fdiv
cmpsb
ficompl
adc
int3
mov
xchg
push
push
sbb
mov
add
xchg
push
std
inc
pop
mov
mov
push
push
rcll
pop
and
xlat
addr16
outsb
cmp
ljmp
dec
pushf
xor
sbb
orb
mov
sbb
stc
notl
mov
call
shlb
rcll
arpl
mov
xor
cmc
addb
negb
xor
mov
push
xor
nop
popf
push
xchg
and
mov
nop
js
jns
cmpsb
cltd
sysenter
rcrl
fldt
insl
xchg
clc
insl
aaa
mov
and
push
mov
outsb
mov
pusha
and
mov
jb
add
lret
pop
cmpsb
ljmp
cmpsl
addr16
pop
sub
pop
iret
stc
roll
mov
idivb
in
fistps
fmull
sti
xchg
jns
js
jg
ljmp
and
into
xchg
push
push
push
mov
adc
cltd
loop
xchg
push
and
imul
xchg
sbb
mov
fmulp
pop
adc
fldl
rclb
hlt
sub
test
loope
xchg
std
inc
scas
mov
insl
cmpsb
scas
cltd
sbb
lcall
push
fsts
inc
lock
idivb
xchg
iret
insl
in
xchg
push
xchg
push
outsl
psubsw
push
or
xchg
cmpsl
stos
enter
dec
mov
inc
jge
les
pop
mov
pop
popf
std
std
or
mov
or
add
pusha
lret
mov
add
mov
insb
out
in
inc
inc
lret
xchg
enter
iret
dec
adc
js
push
addl
push
cmc
pop
pop
or
in
or
add
adc
and
test
push
xor
mov
lcall
sti
shlb
jg
dec
movsb
pop
sbb
lea
cwtl
sbb
arpl
or
inc
sbb
add
lret
ds
push
xlat
aam
add
loopne
sub
sub
ret
enter
ss
test
dec
gs
mov
fsub
dec
inc
and
adc
push
sub
pop
cmp
stc
add
repz
stos
inc
ret
in
jo
and
repz
mov
xchg
jnp
xchg
mov
out
sarl
insb
or
sub
loopne
fcomps
inc
lret
push
xchg
adc
pop
mov
stos
push
jmp
push
mov
test
popa
mov
les
xchg
push
dec
arpl
adc
push
push
ret
int
popa
dec
shlb
je
fndisi(8087
lret
xor
dec
push
enter
add
push
or
js
inc
mov
jb
popa
cld
or
inc
nop
lds
jae
pop
xlat
sbb
or
pop
stos
sar
sbb
movsb
or
jecxz
push
loopne
mov
cld
mulb
add
lods
das
cmpsl
ja
push
stos
clc
or
add
das
mov
sbb
into
cmp
dec
xchg
push
xchg
sarb
push
and
xchg
fcoms
ja
mov
xor
test
or
or
xchg
stos
mov
lret
xchg
aaa
cmp
inc
outsl
jns
mov
add
push
pop
aas
cmp
inc
pop
mov
fbld
dec
xor
movb
pop
sti
mov
xchg
pusha
jl
ret
stos
xor
add
call
pop
add
pop
mov
test
in
xchg
sahf
mov
call
sbb
push
push
pop
sub
ret
push
incb
fmull
aad
inc
xor
add
in
pop
push
mov
mulb
call
filds
lahf
rcll
adc
out
movsb
cmp
or
cmp
cmpsl
aad
enter
push
lret
flds
ss
adc
add
cwtl
pop
jmp
push
mov
sub
push
mov
adc
jge
jmp
int
dec
insl
lret
adc
popa
jnp
dec
mov
aad
jne
negb
aas
mov
js
imul
and
aad
mov
mov
mov
in
jne
ss
inc
push
rcl
jns
divl
into
mov
push
mov
insl
pop
test
dec
or
push
cmpsb
pop
jo
add
xchg
mov
mov
add
xchg
gs
push
dec
rorl
sub
arpl
aas
inc
jne
stc
or
or
and
mov
fdivrl
and
outsb
xchg
push
pop
lahf
lahf
inc
inc
inc
std
cmovge
fcoml
popf
push
arpl
in
out
call
dec
ds
lods
sbb
push
outsl
iret
mov
lret
or
xchg
sbb
xor
xchg
arpl
or
test
hlt
pop
xchg
scas
or
jne
cmp
outsl
cmp
repz
mov
outsb
dec
les
call
xlat
addb
mov
mov
push
mov
xor
mov
jl
int3
aas
adc
add
jae
add
stos
mov
testl
and
stos
push
cmpsb
add
xchg
xchg
pop
cmp
mov
mov
mov
dec
ljmp
mov
jnp
mov
outsl
jo
or
mov
cmc
pop
cltd
mov
xor
in
or
icebp
js
outsl
addl
ds
pop
loop
cmp
sbb
sti
lds
nop
pop
jo
nop
js
ret
cmp
mov
jno
scas
inc
pop
mov
sub
push
pop
mov
into
fdivl
imull
mov
insl
outsb
int
push
or
jb
cmp
in
movsb
xchg
test
xchg
movsl
adc
cld
sub
call
xchg
rolb
flds
or
insb
mov
cli
mov
mov
inc
xor
loope
xor
adc
pusha
mov
pop
std
cli
push
mov
stos
mov
iret
dec
push
outsb
mov
les
lahf
push
fs
jecxz
mov
lods
jne
push
imul
arpl
ret
or
push
imul
aam
addr16
fdivrl
in
cwtl
int3
aad
icebp
push
jl
leave
and
pop
dec
adc
and
push
sbb
push
xorl
ror
and
push
inc
push
inc
mov
mov
imul
xchg
rorl
clc
dec
in
add
psraw
repz
dec
enter
mov
cmp
xchg
data16
pop
repnz
push
into
sub
push
pop
lahf
fisubs
insl
xchg
daa
in
sbb
adc
andl
test
aad
xlat
dec
cmpsl
roll
jp
inc
mov
pop
jo
xor
sbb
sub
fnsave
fcompl
add
mov
stc
aam
ja
cld
push
xor
sbb
sbb
popf
push
je
iret
das
int3
push
insb
sahf
in
ret
movsb
lods
int
adc
mov
pop
adc
xor
sub
loopne
stos
rcr
aaa
in
dec
pop
or
mov
jbe
xor
lods
xchg
pop
cli
add
dec
xorl
mov
add
mov
decl
in
and
faddl
sbb
dec
daa
xchg
pop
cmp
pop
xchg
jb
clc
pushw
mull
int
pop
outsl
sbb
push
add
xchg
inc
pop
mov
outsl
pop
fbstp
lahf
loop
jmp
sbb
lods
xchg
out
or
jl
xchg
jecxz
jnp
jg
jns
shr
movsb
xchg
dec
push
out
mov
jne
scas
in
dec
movsl
mov
repnz
mov
mov
mov
ret
cmp
push
nop
test
call
rcrl
xor
loope
test
jnp
mov
inc
mov
fists
mov
insl
xchg
pop
pop
pop
or
notl
xchg
and
insl
jns
mov
mov
adc
or
cmpsb
ficoml
fdivrl
mov
aas
push
adc
xchg
lock
leave
scas
bound
in
cmp
mov
xor
jmp
sub
xor
stc
xchg
mov
lahf
sbb
leave
dec
mov
es
adc
mov
test
jbe
mov
mov
adc
cmpsb
addr16
daa
int
cmp
lods
add
stos
sahf
sbb
stc
fmull
mov
sub
cmpsb
repnz
cmpsb
inc
jge
pop
sbb
sti
pop
popf
pop
cwtl
scas
rolb
pop
stos
fnstenv
xchg
in
les
imul
mov
cwtl
add
sub
call
dec
loopne
mov
add
and
xor
call
orl
leave
pusha
mov
lret
adc
fstl
xor
les
inc
sub
jae
push
rorb
jl
mov
aas
shrb
xorl
test
outsl
push
dec
shlb
pop
dec
lret
aas
icebp
out
dec
sarb
loop
in
mov
dec
fldl
stos
mov
jo
pop
fnsave
int3
loop
mov
push
cwtl
fisubs
loope
js
aaa
lahf
sub
sbb
jg
mov
mov
mov
clc
stos
arpl
fistps
fstpt
iret
or
mov
jl
dec
movsb
bound
enter
outsb
fiaddl
push
cwtl
add
daa
test
scas
xchg
subl
sbb
addl
sarb
cmp
lcall
and
cmpsl
sub
ljmp
cmpsb
aaa
mov
cs
sbb
bound
rclb
jae
pop
test
gs
or
or
cltd
rclb
aas
nop
cmp
push
adc
orb
jecxz
mov
addr16
jnp
lds
pop
int
sti
push
fisubrs
dec
lret
mov
xchg
pop
loope
sbb
lret
dec
and
test
push
xchg
jmp
das
pop
and
loop
inc
xchg
idiv
inc
pop
shrb
ret
test
mov
std
add
in
push
mov
push
mov
mov
sbb
fcmovnu
dec
xchg
out
mov
adc
mov
add
out
icebp
mov
and
jo
cmpsb
pop
call
add
shll
shlb
xorb
mov
xor
push
ja
lcall
pop
out
stos
and
inc
cmpsl
js
or
and
cmp
sbb
rcll
cs
sub
ret
push
xor
cwtl
dec
push
adc
lods
fs
inc
fistps
jmp
movsb
fadd
push
fstl
std
lods
mov
sbb
xchg
pushf
sub
vmovupd
jmp
adcl
mov
sub
jg
or
xchg
mov
mov
fisttpll
faddp
pop
movsl
leave
sbb
cmp
imul
in
dec
and
add
xlat
or
enter
dec
push
inc
pusha
pusha
les
in
push
rorl
mov
push
fildl
aaa
inc
push
or
outsl
fimuls
aam
gs
adc
and
mov
push
jno
xor
scas
subb
pop
mov
cld
insl
les
inc
rclb
pop
mov
insl
mov
dec
loop
fld
subb
or
out
adc
pop
add
or
fisubrl
push
and
pop
mov
or
jns
inc
mov
addr16
dec
scas
push
pop
lock
cmp
fcomps
sub
mov
dec
add
roll
mov
pop
xchg
sub
mov
sub
test
fs
add
sbb
xchg
hlt
or
in
jl
jns
dec
jle
and
adcb
das
call
push
cli
jmp
add
xchg
leave
jecxz
js
mov
gs
or
push
dec
mov
dec
hlt
jp
sbb
cwtl
jl
sbb
stos
push
arpl
icebp
addr16
pop
xorb
adcb
xchg
xor
in
mov
jl
push
in
xchg
push
leave
sub
inc
pop
inc
mov
sbb
in
aas
pop
sysenter
daa
jge
sub
sub
jle
sti
inc
test
mov
popf
mov
jmp
cs
negl
xadd
pop
les
cmp
cmp
push
mov
scas
out
mov
icebp
test
or
cmp
fwait
push
jmp
sub
dec
in
jno
repz
shll
sbb
pop
std
push
push
fcmove
lret
fcoms
xchg
mov
test
out
push
jg
xchg
or
fs
repz
inc
cmc
or
pop
jmp
inc
ss
dec
loopne
jl
std
cwtl
addl
test
fsubrs
inc
pop
mov
dec
cld
mov
lock
mov
xor
mov
ljmp
sub
mov
icebp
cmp
testl
stc
fwait
add
fisttpll
add
rcrb
xor
adc
mov
adc
ret
es
fildl
jge
lret
in
ljmp
adc
mov
jne
mov
cld
pop
mov
push
fiaddl
lret
in
call
outsl
xchg
xchg
jle
adc
int3
push
push
mov
arpl
loop
loopne
stos
mov
mov
je
cltd
movsb
js
push
jg
and
loope
fbstp
stos
bswap
mov
mov
movsb
movb
sub
push
inc
ja
ja
ss
lods
imul
js
test
pop
jb
nop
pop
jno
fdivrl
xchg
pop
inc
jg
mov
outsb
or
push
test
and
pop
jmp
addr16
shlb
arpl
out
pushf
int
arpl
mov
jns
add
pushf
and
pop
pop
xchg
bound
adc
sti
ficoms
pop
sub
jle
mov
xlat
and
mov
xorl
mov
mov
lea
mov
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
and
mov
mov
subl
xor
adcl
add
movl
jne
jmp
adc
mov
subl
sub
xor
sbbl
mov
decl
mov
xorl
mov
andl
xor
xor
addl
sub
sub
xor
mov
mov
mov
jmp
sbb
mov
sbb
mov
xor
xor
orl
sub
movzbl
sbb
mov
sub
xor
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
imul
mov
mov
mov
add
or
mov
jmp
in
in
xchg
lret
icebp
fstl
fstpt
pop
addl
fildl
outsb
sti
call
xor
push
pop
sbb
pusha
adcb
mov
mov
sahf
dec
rcll
mov
lret
imul
jl
ud0
dec
ss
lahf
and
popf
out
adc
idivb
addr16
gs
mov
popf
mov
sarl
pop
out
adc
jne
sbb
mov
jns
and
inc
mov
jae
push
dec
xor
popf
lcall
fisttps
xchg
ret
xor
stos
pusha
insl
jp
shlb
in
adc
test
js
push
sub
sub
inc
rol
adc
aam
dec
lahf
sti
test
decb
jae
adc
add
loop
pop
test
outsl
xchg
lcall
stos
pop
adc
pushl
repnz
ss
ja
xchg
ret
fldt
lea
adc
or
loopne
ja
or
xchg
in
push
push
lea
pop
leave
xor
push
sbb
mov
cmpsl
and
push
mov
xchg
xlat
aaa
scas
mov
cltd
test
test
add
mov
cmpsl
mov
rcr
dec
sub
das
lret
push
insb
sub
jmp
popa
sub
adc
cmp
sub
pop
cmpl
insb
cmpsb
scas
rcrl
push
jnp
rclb
scas
cmp
pcmpgtw
mov
jne
sti
and
sbb
popa
orl
mov
pop
frstor
sbb
loopne
mov
int3
aaa
loope
imul
push
aam
inc
push
add
repz
pushf
jbe
xor
lock
push
push
xor
in
inc
ror
aad
test
or
insb
inc
sbb
xchg
ss
stc
pop
loopne
cwtl
rcrb
push
push
mov
inc
mov
jae
stos
jp
mov
mov
dec
push
push
ret
add
sub
push
pop
mov
xor
inc
out
cwtl
mov
repz
mov
sahf
sub
dec
xchg
clc
repz
sbb
add
add
push
push
jmp
add
xor
mov
adc
in
fisubs
jle
les
mov
mov
sub
inc
stos
sub
pop
orl
mov
outsb
cmpsb
lea
or
sahf
jo
inc
out
mov
jle
pop
fstpt
dec
sbb
aad
xchg
cmp
mov
ss
and
mov
push
xchg
fadd
pusha
inc
nop
repnz
jmp
xchg
and
cmp
mov
shrl
sbb
sub
dec
pop
push
out
lret
jae
fnstenv
loope
sub
xor
shll
or
sub
sub
jo
mov
xchg
or
popf
jmp
clc
fadds
adc
test
jbe
mov
shr
sbb
fs
enter
rcrb
lods
lahf
add
jns
xchg
orb
hlt
stc
mov
and
ljmp
or
decb
dec
push
sarb
dec
cwtl
pop
iret
aam
faddp
cmpsb
or
xchg
mov
pop
adc
sahf
mov
or
xor
pop
mov
scas
jg
mov
push
gs
or
mov
aaa
inc
repz
fnsave
jg
idivl
daa
cwtl
and
cs
push
sub
cmp
and
int
lock
pop
test
or
xor
jns
jecxz
fbld
xchg
popa
sub
fiadds
mov
mov
add
xlat
push
movsb
or
add
sbb
ret
lret
adc
cmpsl
pushf
push
jbe
loopne
out
sub
mov
xor
mov
pop
xchg
sbb
inc
popa
scas
dec
fildl
inc
xchg
hlt
push
sub
scas
jp
pop
ffree
stc
movq
mov
daa
cmp
or
fxch
jle
sahf
cli
xor
jp
sbb
mov
dec
dec
fwait
mov
cmc
popf
mov
mov
jbe
dec
imul
jmp
jg
pop
xorb
addr16
inc
xchg
xor
dec
xor
sub
and
push
jns
push
jns
lock
push
jnp
mov
xchg
pop
pop
stos
add
inc
mov
fucomi
pop
cmp
xchg
test
enter
in
imul
xlat
jmp
shlb
dec
nop
xor
rcr
inc
daa
test
daa
out
hlt
mov
mov
pop
shl
adc
xor
imul
daa
cli
add
fdivrs
ljmp
jl
mov
ja
xchg
xchg
mov
dec
add
cld
sub
fbld
mov
aam
pop
or
sahf
cmpsb
fildll
dec
ljmp
shrb
xorl
es
xor
pushf
mov
insl
hlt
test
xor
adc
rorl
mov
sub
jmp
in
pop
sbb
jg
shrb
adc
pop
pop
pushf
inc
mov
into
outsl
jg
shrl
jo
daa
or
outsl
mov
fnstcw
loop
cli
test
xor
out
je
subb
push
mov
pop
stos
mov
and
dec
and
pop
cmpsb
call
fs
aas
pushf
test
pop
xor
pushw
xor
pop
jbe
jb
imul
push
sti
mov
loop
mov
xchg
mov
pusha
into
call
push
add
dec
xchg
repz
or
loope
or
and
xchg
stc
cmp
dec
rcrb
hlt
inc
pop
inc
dec
push
or
or
push
xchg
dec
mov
lods
inc
sub
xor
cli
pop
into
imul
es
or
gs
mov
inc
push
mov
std
mov
cmp
fwait
adc
iret
ret
scas
aam
dec
push
xor
pushf
stos
xor
hlt
in
xor
dec
inc
mov
xorb
cwtl
es
popa
jb
lea
sub
insl
jbe
push
shlb
ja
insl
dec
mov
jbe
sub
sbb
add
daa
mov
pop
scas
mov
adc
mov
lahf
loope
push
xchg
jb
xchg
popf
pop
test
dec
xor
adc
jecxz
pusha
dec
xchg
test
mov
xor
popa
jp
sbb
inc
ret
push
faddp
push
sbb
or
cmp
and
cmp
insb
push
push
cld
inc
hlt
icebp
rcrl
movl
js
pop
out
fcomi
jle
inc
dec
enter
add
sbb
jo
fcom
hlt
out
aam
sub
pop
mov
loopne
inc
or
andb
lret
mov
inc
rorl
loopne
adc
inc
xchg
inc
aam
rol
add
and
and
mov
aas
xchg
in
push
leave
ljmp
andb
sbb
enter
test
sti
movsl
jmp
es
fnstsw
adc
jl
mov
cmp
sarl
add
push
adc
ss
xchg
loopne
repz
xor
sbb
loop
shlb
push
xor
jge
xchg
or
je
mov
sbb
mov
mov
sub
shlb
aam
outsl
mov
pusha
and
ret
mov
shll
dec
inc
dec
imul
enter
and
push
das
ja
loop
aad
in
cmp
out
test
hlt
arpl
cmp
hlt
aad
subl
test
ds
mov
cmpb
fadds
pushf
mov
stos
mov
add
daa
jnp
adc
dec
and
into
xchg
jne
push
into
movsl
sbb
pop
sbb
mov
jno
sarb
pop
mov
cmp
add
pop
jge
mov
loopne
add
xchg
jp
lcall
in
in
mov
test
aas
mov
andps
dec
jecxz
cwtl
ja
loope
and
adc
dec
jbe
pushf
xchg
mov
pusha
fstl
sbb
pop
jo
jmp
aas
jns
xchg
or
cmp
mov
xor
iret
fs
fsubs
sbb
aad
stos
mov
mov
dec
pop
mov
jae
xor
sbb
xchg
ds
and
xchg
sub
push
popf
mov
repnz
ds
jge
loopne
shlb
mov
mov
sbb
and
dec
inc
rolb
mov
lcall
or
jp
push
or
jl
jl
loop
mov
out
jl
jl
pop
sarb
xchg
mov
add
sub
dec
fst
cmp
pop
leave
xchg
clc
inc
push
sbb
ds
sub
cmpsl
cwtl
ret
xor
sbbb
sub
push
add
or
divl
push
jne
pop
je
shll
jecxz
lahf
repnz
cmpsl
xor
js
clc
imul
pop
push
jmp
jle
sub
pusha
sub
sub
and
sub
mov
dec
sahf
inc
dec
fisttpl
notl
mov
hlt
or
dec
xor
scas
hlt
mov
xor
pushf
leave
shrb
inc
movsl
and
lea
add
pop
ljmp
enter
mov
lds
or
add
jnp
out
rep
test
xor
aaa
loope
adc
bound
adc
adc
fisttpl
cmc
cld
mov
add
pop
repnz
int3
push
int3
clc
lea
addr16
push
sub
push
lret
cmc
enter
push
out
aad
decl
xlat
cltd
fdivrl
inc
xchg
xchg
outsl
enter
pop
sbb
xchg
pop
movsb
xchg
je
loop
mov
and
faddl
mov
ss
mov
cmp
mov
push
mov
iret
push
adc
gs
push
mov
cli
fdivrs
xchg
cltd
lds
inc
xchg
jns
mov
pop
xchg
lcall
lods
or
pop
repnz
xor
mov
fbstp
mov
outsl
cld
fnsave
aam
aam
jbe
dec
enter
inc
dec
or
jecxz
jecxz
or
rcll
push
cmp
jecxz
in
xchg
in
push
adc
add
test
push
cmc
pop
in
imul
dec
add
mov
inc
mov
rcll
fwait
dec
movsl
add
jl
loop
mov
mov
test
icebp
cli
addr16
xchg
xchg
iret
mov
repz
pop
pop
adcb
sbb
rcl
mov
sbb
inc
mov
in
gs
xor
or
inc
adc
xchg
jg
shr
pop
bound
inc
aam
orl
xchg
scas
sub
icebp
push
pop
push
cmp
icebp
xor
sub
imul
int3
dec
adc
and
sub
mov
sbb
inc
rcll
mov
sub
cli
jno
lods
test
dec
add
dec
xor
or
nop
mov
inc
aad
xchg
or
jmp
insb
fsubl
jmp
les
sbb
lret
dec
add
and
inc
mov
xchg
push
or
call
outsb
lock
sub
inc
es
push
pop
sub
inc
leave
andl
ds
js
and
push
pop
sbb
jp
xchg
sbb
and
push
adc
push
inc
in
inc
add
lret
lcall
sbb
push
xor
out
rclb
push
xlat
xor
or
adc
sti
fstp
lods
add
adc
pop
dec
push
push
pushf
fnstcw
sti
cmc
repnz
dec
out
jns
lods
xor
ret
add
add
lahf
sbb
jg
or
xor
idivl
fwait
bound
and
iret
cld
pop
mov
jns
imul
adc
lcall
xor
sub
pop
adc
popa
jg
jns
xchg
xchg
in
divb
sbb
add
mov
pop
pop
or
in
dec
fcomps
mov
pushf
insl
sti
sbb
dec
enter
ret
adcb
xor
mov
mov
aad
pusha
sub
popa
pop
and
scas
decb
ret
push
mov
adc
loop
mov
add
sub
in
int
pop
pushf
add
mov
ret
sbb
pop
inc
inc
jne
pop
sbb
mov
mov
aad
aas
pop
jbe
lcall
nop
enter
aaa
jle
fwait
or
cli
jo
xor
clc
pop
pushf
dec
insl
push
loop
aam
mov
out
xor
ret
mov
push
ljmp
push
mov
js
push
mov
testl
ss
notb
fnstenv
incb
inc
xor
scas
or
or
dec
inc
pop
mov
loop
loopne
call
stc
sub
mov
pop
mov
adc
pop
jnp
subb
cs
mov
les
fcom
push
push
adc
or
sti
and
in
lret
inc
mov
pop
sub
and
testl
in
jo
push
mov
aam
movsl
push
repz
pop
and
jae
mov
pop
sbb
int
adcl
pop
jo
push
shl
leave
push
or
pushf
push
out
or
cmp
adc
pop
pop
icebp
pcmpeqb
cld
bound
xchg
aad
adc
lods
testb
mov
push
mov
adc
fs
pushf
cld
clc
xchg
inc
leave
ss
fldz
mov
mov
mov
mull
xor
aas
inc
fucomi
repnz
mov
lds
jecxz
std
dec
and
call
xor
lahf
jge
xor
scas
xor
adc
lds
mov
push
inc
mov
inc
fisttpll
inc
inc
mov
loop
xlat
or
push
movsl
pop
adc
loopne
lcall
pop
mov
aam
pushf
xchg
xchg
mov
enter
mov
jl
mov
or
and
dec
add
out
ljmp
sbbb
sbb
shr
aaa
addr16
inc
rcl
mov
fwait
push
pushfw
in
dec
lahf
fwait
out
mov
jecxz
jle
lcall
xchg
and
cmpsb
in
cmpsl
pop
add
mov
les
pop
inc
cld
cmp
icebp
inc
in
sub
stc
and
cltd
out
mov
mov
lock
out
lods
mov
xchg
push
sbb
cltd
mov
sbb
or
imul
mov
push
addl
mov
test
and
dec
rcrl
ja
mov
fnstenv
fistpll
clc
xor
sahf
lret
push
mov
sbb
push
aad
xchg
xor
sub
pop
or
adc
into
outsl
sub
cmp
out
mov
dec
mov
push
out
js
mov
into
mov
xor
or
jl
imulb
jo
pop
aam
and
inc
cmp
rcl
ja
inc
mov
push
aad
mov
aam
fcomi
add
mov
sub
pusha
stc
xchg
fimull
imul
xchg
jo
mov
in
shrl
mov
aad
clc
lock
sahf
push
hlt
test
fistpl
xchg
lods
sub
lcall
add
or
into
xchg
dec
cmp
sahf
sahf
lcall
loop
mov
rcl
mov
pop
loopne
movsl
enter
mov
adc
jb
and
xchg
add
mov
gs
les
outsb
or
pop
or
in
arpl
inc
add
mov
push
inc
jle
dec
push
cmp
gs
fs
jne
mov
lods
xor
adc
mov
mov
out
fnsave
dec
sub
mov
movsl
movzwl
and
mov
ljmp
lods
mov
mov
mov
inc
lahf
sarl
aaa
mov
adc
mov
lcall
mov
jmp
mov
icebp
jmp
sub
or
in
lcall
andb
inc
pop
sbb
dec
jl
mov
xchg
xchg
enter
leave
lcall
add
addr16
nop
sarl
scas
cmp
mov
cld
add
aas
icebp
testb
movsb
sub
insl
xlat
call
stos
cmc
out
int3
mov
push
pop
jl
push
rcrb
lea
mov
loopne
dec
mov
int3
mov
xor
add
jne
ficoml
inc
inc
sbb
add
loopne
arpl
incl
sub
add
cmp
jg
add
sub
out
inc
insl
lret
xor
enter
or
pop
scas
cld
mov
repnz
jg
les
repz
mov
popa
pop
sbb
dec
scas
rolb
and
dec
addr16
test
scas
and
jl
lcall
lahf
inc
mov
lret
cmp
mov
pop
sbb
mov
call
xor
fs
icebp
sbb
cmpl
pop
sahf
faddl
sub
mov
test
pop
out
push
add
add
pushf
jge
push
xchg
xor
sub
xor
dec
push
movsl
cmc
mov
out
jmp
popa
mov
neg
push
jmp
aas
lcall
xchg
or
push
and
cli
je
push
cltd
test
push
hlt
or
xchg
cmp
xor
xor
jg
adc
sets
hlt
add
rol
cmpsl
ss
mov
loope
dec
xchg
jmp
jmp
mov
add
ret
imul
dec
arpl
jg
pop
xor
loopne
mov
mov
in
jo
add
adc
shlb
lahf
cli
negb
pusha
inc
push
ja
movsb
das
xorl
jmp
pusha
dec
jns
xor
sub
fstl
sbb
ss
roll
jg
rcrb
or
or
fidivs
xchg
xchg
cmp
or
cmp
sti
adc
popf
insb
push
and
dec
mov
bound
scas
cwtl
xlat
adc
push
push
push
push
es
jmp
mov
jp
bound
jge
fs
out
mov
inc
cmp
hlt
add
xor
xchg
jae
leave
test
daa
and
xor
outsb
ds
mov
cmpsl
fdivl
rclb
divl
sbb
jae
xor
sbb
pusha
pusha
and
jae
cmp
add
dec
pop
frstor
fisubs
js
movsl
dec
es
mov
lcall
cmpsl
add
out
dec
and
or
mov
ror
lahf
rcll
jp
dec
xchg
mov
or
popf
push
push
mov
in
std
icebp
movsb
out
adc
mov
ljmp
sub
push
je
popl
adc
iret
repnz
gs
push
sar
call
xlat
mov
lret
cli
fildll
add
sbb
xchg
sbb
ret
sbb
push
sahf
stos
xchg
inc
lcall
orl
mulb
xor
xchg
pushl
push
cli
stos
es
adc
mov
out
movsl
pop
sub
in
or
enter
cmp
sbb
pop
fs
cwtl
dec
stos
and
out
icebp
cmp
mov
and
pop
sub
fsubl
dec
fdivrl
mov
or
mov
sub
in
mov
xchg
pushf
inc
test
testl
sub
sbb
or
fildll
xchg
fstl
shll
mov
xchg
lahf
loop
mulb
fisttpl
jge
xchg
shlb
movsl
xchg
insl
addr16
les
jne
lcall
and
pop
clc
inc
or
jecxz
cmp
loop
mov
cmp
mov
mov
roll
xchg
mov
xor
xor
and
push
push
out
mov
dec
push
inc
jle
in
imul
jne
insl
shlw
mov
ret
inc
jl
jecxz
or
sarb
mov
cmp
ss
pop
ljmp
sti
sbb
push
out
inc
xor
xchg
pop
loopne
mov
sbb
adc
inc
push
mov
int3
repnz
push
lods
jecxz
je
inc
and
mov
sub
xor
cli
adc
cld
pusha
lret
ficomps
xchg
jp
imul
cmc
cmp
sbb
jne
pop
jne
push
orb
jle
cmc
cwtl
adc
pop
cli
cwtl
xor
mov
mov
out
imul
cmp
push
inc
jmp
cmpsl
aas
test
test
mov
pop
adc
sub
mov
hlt
push
scas
shll
cs
incl
push
adc
outsl
inc
iret
lods
shr
and
repz
cmp
nop
pop
iret
and
xchg
jge
fwait
mov
add
jmp
mov
xor
lds
mov
inc
aam
mov
adc
fidivl
loope
ds
and
fcmovnbe
int3
xchg
pop
sahf
insl
push
mov
daa
push
xchg
xor
cwtl
cli
stos
adc
fisttps
xchg
inc
pusha
mov
cmp
mov
dec
popa
adc
sub
pop
aaa
sub
xorb
dec
push
jns
je
jne
pop
sbb
adc
jns
xchg
data16
jl
push
popa
call
mov
jecxz
iret
cmp
cmp
and
jno
xchg
icebp
and
add
or
sbb
jmp
cwtl
gs
adc
imulb
mov
gs
inc
lret
mov
popa
mov
cmc
rcll
xchg
xchg
jbe
push
pop
outsb
rcll
test
out
inc
push
in
xlat
adc
fnsave
test
test
dec
dec
enter
clc
sub
icebp
sbb
dec
push
push
subl
fildl
xchg
mov
fisubrs
imul
dec
pop
add
pop
outsb
inc
lcall
outsl
inc
arpl
stos
addr16
dec
outsl
sbb
dec
mov
cld
mov
divb
mulb
xor
insl
mov
xchg
adc
insl
add
mov
lods
out
dec
out
adc
xorb
mov
mov
ret
mov
lahf
aad
jae
ljmp
cmovo
adc
cmp
inc
addl
adc
out
add
int
jnp
sub
cmc
negb
mov
jb
aaa
cmp
jmp
sbb
or
cmp
inc
pop
cwtl
loope
xor
push
mov
lret
pop
repz
hlt
add
lods
cwtl
lret
dec
mov
loopne
mov
or
xchg
or
stc
push
sbb
lcall
outsl
dec
pmullw
sbb
inc
or
add
out
scas
pop
js
xchg
scas
inc
popf
idiv
cmpsb
fists
in
cmpsl
jg
hlt
dec
icebp
push
push
out
int
stc
js
fdivrs
inc
pop
cmpsb
imul
out
clc
sbb
sbb
push
sti
push
daa
lahf
les
cli
cmpl
lods
into
push
inc
sahf
sbb
cs
fstpl
cli
mov
bound
push
cmc
adc
push
jae
mov
xlat
pop
pop
sbb
inc
out
mov
in
fcoml
ret
and
cltd
adc
stc
je
out
lock
pop
into
push
hlt
les
scas
in
outsb
cmpsb
rorl
jecxz
loop
sub
in
cwtl
les
sbb
das
int
lea
es
cmpsl
pop
push
pop
lret
jbe
mov
mov
pop
inc
stos
cld
cmpsl
in
cmp
ds
xor
and
pop
imul
pop
mov
popf
ret
xchg
mov
jno
stos
out
aad
rcl
pop
inc
addr16
les
lcall
push
test
xchg
mov
loop
push
dec
mov
cmp
inc
sti
int3
cmp
dec
dec
leave
into
inc
add
daa
mov
or
cld
stc
test
mov
test
mov
jnp
mov
pop
sbb
fldl
leave
cwtl
movsl
push
add
cs
mov
imul
in
push
addr16
aam
pop
mov
xor
inc
in
push
fwait
lds
push
loope
jnp
stos
cmpsl
cmp
sub
mov
push
or
or
pushf
fbld
xor
sti
sub
mov
andl
pop
add
mov
sbb
sbb
mov
cli
mov
icebp
fbstp
lds
cwtl
shrd
or
aaa
rcrb
faddl
out
cmp
repnz
mov
add
add
add
and
add
or
inc
inc
and
outsb
rcll
xchg
dec
movsb
mov
cmp
mov
aas
mov
xchg
cmp
xchg
mov
xchg
test
jle
stos
cmp
addr16
cld
fstp
mov
movsl
xor
int3
rcrb
rcll
loop
fstl
mov
lret
scas
shlb
add
dec
mov
fsts
movsl
mov
sub
fsubp
or
sbb
cmpsb
mov
adc
imul
icebp
mov
mov
dec
clc
stos
jo
inc
jb
loope
incb
push
scas
dec
roll
xor
adc
or
xchg
dec
lods
mov
jbe
jne
inc
sbb
rcll
mov
into
xchg
adc
sbbb
mov
jp
push
add
sar
scas
dec
push
fnstsw
lods
ret
pop
and
xor
jl
sbb
insb
fucomp
cmp
movsb
xor
rcrb
int3
ret
loop,pt
dec
mov
fdivs
push
mov
cmpsb
mov
das
outsb
pop
in
popa
add
sbb
jecxz
mov
pop
out
pop
xor
mov
outsb
outsl
xchg
cmpsb
or
mov
lock
xchg
cltd
inc
lods
mov
xchg
iret
jp
mov
and
das
jo
ficomps
shll
sub
int3
adc
xchg
sbbb
scas
stos
mov
mov
lahf
push
gs
mov
push
inc
cbtw
fdivl
jns
dec
lds
mov
cltd
iret
add
repz
lods
xchg
into
shlb
xor
neg
scas
into
out
inc
fwait
push
xor
jae
arpl
sub
sbb
inc
push
jb
mov
insl
movsb
imul
or
mov
push
pop
pushf
lea
push
mov
stos
mov
movsl
int3
pop
cmp
lcall
movsl
xchg
dec
daa
xor
inc
add
push
ds
cmp
cmpsb
pop
call
jns
outsb
xor
test
xchg
dec
rclb
into
out
dec
cmp
in
imul
or
sub
and
cli
or
insl
or
pop
mov
cwtl
cmc
xlat
jmp
pop
jmp
in
pop
xlat
lds
addl
movsb
push
div
sub
add
push
jmp
jae
mov
push
aam
in
jecxz
or
aaa
fiaddl
rclb
jb
add
mov
std
dec
lret
push
jae
aas
hlt
fs
addb
cmp
leave
sbb
sub
out
cmp
dec
scas
out
cmpsl
mov
subb
push
lock
fwait
ret
cmpsl
mov
dec
cmp
pop
xchg
sub
enter
push
push
lahf
lret
ret
out
cmpsl
in
sahf
insl
fucom
imul
jnp
fisttpl
test
pop
rol
js
mov
mov
jecxz
or
movsb
sbb
and
loop
popa
push
pop
xlat
mov
stc
loop
call
ret
aas
add
sbb
xchg
or
jnp
lahf
mov
sbb
inc
push
call
xchg
aam
or
pop
loopne
push
xchg
sbb
and
xchg
sti
sub
scas
imul
adc
addl
sub
shlb
call
pop
fidivrs
fdivr
mov
mov
in
xor
xchg
insb
aas
shrl
inc
mov
cwtl
fistps
sbb
pop
fwait
sbb
pop
pop
aam
arpl
je
xlat
jecxz
or
or
push
mov
xchg
pop
cld
and
es
cwtl
fsubrp
add
push
mov
fcom
sbb
jb
pop
nop
push
out
sbb
test
xor
cltd
lods
sub
sub
fidivrl
jle
cld
and
cli
mov
and
mov
sub
daa
pop
dec
push
fs
inc
xor
rol
insl
dec
and
pop
dec
mov
mov
lods
jns
hlt
sahf
or
into
cmpsl
dec
out
stc
ret
je
test
negl
popl
lret
ja
mov
mov
ljmp
pusha
jl
mov
jb
add
add
and
test
sbb
mov
add
xor
out
mov
xor
mov
lahf
scas
jl
stos
sub
scas
ss
insb
shl
fldl
jl
scas
sbb
fcoml
stos
mov
popl
sub
test
lods
mov
popa
pop
mov
insl
dec
inc
into
jo
lret
outsl
or
mov
dec
insl
xchg
mov
lahf
sbb
sub
add
out
rorb
mov
int3
mov
add
add
imulb
scas
adc
jns
inc
stos
or
xor
lods
sti
fnsave
push
jae
cmp
dec
xchg
mov
or
inc
cwtl
fnstsw
shll
push
fistpl
mov
sbb
pop
dec
sub
lahf
jp
pop
xchg
mov
push
xor
mov
data16
lahf
cmpsb
push
cli
xor
sub
dec
mov
stos
scas
rcll
cmp
insl
icebp
sub
fisttpl
mov
flds
push
lods
ss
xchg
push
cmp
outsl
lock
stos
popf
and
dec
mov
or
mov
daa
jecxz
or
lods
call
mov
mov
in
int
inc
jo
xchg
test
ret
test
xchg
out
cltd
lret
add
aad
pusha
xor
aam
push
pop
les
or
rcll
adc
aaa
or
cmp
fstl
enter
mov
mov
nop
or
ljmp
push
sbb
mov
xchg
dec
xor
cmp
sbb
push
dec
adc
or
sar
cltd
imul
mov
adc
xor
cmpl
adc
jmp
jl
xchg
push
and
loope
lea
mov
push
mov
fstp
xlat
fwait
inc
jg
cltd
lret
rcrb
std
sbb
lock
cmpsl
loope
ljmp
cltd
ss
ret
lcall
icebp
mov
push
imul
or
test
adc
add
test
push
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
jmp
and
mov
jmp
adc
addl
pop
ror
mulb
or
jge
les
xor
mov
testl
dec
xor
ret
jne
mov
lock
cltd
adc
stc
mov
jp
sub
cmpsl
inc
aaa
xlat
cmp
inc
push
std
ficoms
out
mov
jno
cmp
or
sub
fwait
cli
xchg
mov
pusha
icebp
movsl
mov
mov
divb
cmp
lock
mov
inc
mov
cli
into
div
lock
xchg
jecxz
sbb
jge
cmp
adcl
outsl
rcl
bound
orl
dec
sbb
xor
mov
mov
sub
mov
mov
cmp
inc
mov
iret
mov
lea
inc
frstor
jb
out
mov
imul
lahf
push
sub
call
fstps
push
mov
roll
js
push
and
stc
xor
inc
pusha
in
xchg
sub
xor
movsl
ret
lds
pop
mov
pushf
xor
test
adc
aas
jge
or
push
ds
pop
adc
cltd
lret
les
int
cmp
mov
fdiv
jge
pop
iret
lahf
sub
xor
push
lods
push
test
inc
loop
inc
cmp
mov
out
fiadds
pop
pusha
cmp
cmp
cs
cmp
fcoms
aam
mov
loope
mov
hlt
xchg
cmpsl
mov
imul
cwtl
push
lret
pop
dec
ficompl
fisttps
adc
insb
mov
fcompl
test
push
sub
mov
adcb
in
sub
cwtl
ja
aam
mov
xor
xchg
inc
xor
iret
push
xchg
dec
and
pop
mov
mov
jecxz
mov
leave
sub
xchg
pop
xchg
and
push
xchg
push
xchg
mov
out
lods
out
movsl
nop
loopne
sub
or
outsl
jge
xor
filds
jle
dec
decb
dec
mov
daa
mov
das
testb
jo
stos
jg
bound
sahf
push
ds
stc
jl
ss
cltd
xor
stos
loop
add
cmpsl
js
dec
add
pop
pop
test
shl
add
mov
loope
je
push
dec
jge
adc
and
loop
adc
cmp
ss
imul
setp
mov
les
cwtl
jg
imul
pop
adcl
test
dec
data16
mov
lcall
popf
sub
push
cmc
sub
sti
push
jmp
insb
push
jmp
cltd
subb
cmp
pushf
mov
stos
xchg
push
adc
mov
pusha
add
cmp
adc
outsl
xchg
std
gs
loope
cmp
mov
cltd
loope
sahf
mov
lods
bound
or
lcall
mov
mov
mov
jecxz
mov
in
loope
cmpsl
fisttpll
mov
icebp
out
mov
add
jge
icebp
loopne
popf
and
mov
repz
jl
cmc
movsb
push
cmpsl
into
enter
ds
cmp
das
mov
ss
inc
or
out
fidivs
rcl
lret
xchg
imul
out
out
shll
pop
stos
sub
mov
pop
jg
loope
sbb
or
pop
call
sub
push
dec
mov
dec
sti
psubd
sar
cmp
ds
movsl
pop
rcrb
cmc
push
push
roll
cmp
out
insb
imul
sbb
cmp
aas
jmp
shl
lea
leave
imul
adc
popf
and
sub
dec
jle
adc
pop
add
mov
cmp
stos
jle
cs
mov
mov
out
rcrb
js
push
inc
out
fs
dec
lahf
jge
repz
pop
shlb
xchg
daa
adc
sbb
ja
inc
fwait
popf
and
loope
mov
lods
xchg
sbb
test
bound
cmp
mov
jno
int
rep
mov
cmp
adc
fistpl
adc
stos
adc
mov
pop
sub
ds
lock
dec
pop
in
cmp
es
mov
lcall
sub
pop
test
test
outsb
sbb
bound
loopne
lcall
loopne
std
shr
jle
sti
adc
ljmp
mov
mov
pop
mov
adc
ljmp
sti
inc
xchg
and
scas
je
sub
ds
shlb
rol
jo
addr16
push
mov
push
mov
cmp
and
into
or
mov
dec
jecxz
bound
inc
push
inc
pop
push
pop
mov
int3
sbb
xchg
pop
sub
inc
enter
or
dec
mov
mov
dec
xorb
imull
add
test
pop
xchg
and
push
popa
fildll
inc
data16
mov
or
push
xchg
test
push
cld
mov
adc
mov
outsb
pop
cli
and
pop
enter
leave
or
orl
pop
cld
aam
push
testl
mov
inc
push
mov
out
loopne
jno
lods
cld
inc
fwait
dec
adc
mov
xchg
ljmp
ror
js
loopne
ret
inc
mov
bound
lcall
pop
jns
cltd
mov
pop
aas
ja
por
popf
dec
mov
inc
cld
sbb
push
mov
in
xchg
int3
fwait
pusha
fwait
cmpl
xchg
dec
lds
or
mov
jl
int3
repz
loopne
inc
stos
frstor
xor
popf
add
in
out
lods
jns
xchg
lcall
addr16
mov
insl
mov
shll
and
test
push
iret
push
stos
pop
sub
scas
stc
or
imul
xchg
add
jecxz
adc
lods
cmp
outsl
sbb
pop
inc
and
int3
inc
mov
out
sbb
cwtl
daa
add
outsb
push
adcl
mov
pop
mov
and
shr
ja
aam
scas
ds
clc
cwtl
xor
add
and
sahf
pop
push
and
mov
mov
jle
cs
sbb
sahf
push
mov
mov
xchg
mov
mov
je
mov
inc
dec
out
repnz
or
sbb
sarb
and
stos
addl
xor
div
push
push
std
pusha
inc
mov
fistl
hlt
in
rorb
xor
pop
xor
pop
jmp
pop
pop
or
or
push
push
orb
jge
cld
aaa
push
je
in
add
push
dec
cmpsl
jle
cmp
scas
sub
fabs
dec
lahf
add
loope
icebp
or
rcll
xchg
fisttpll
loop
pop
stc
mov
inc
inc
adc
xchg
ja
jl
cmp
adc
add
inc
fists
sbb
xchg
loopne
xchg
fwait
fnstcw
dec
sbb
popa
fsubrp
sbb
fwait
pop
pushf
cmp
daa
jecxz
roll
ljmp
mov
test
cld
in
cwtl
add
mov
dec
out
in
lds
rorl
inc
bound
sahf
jp
mov
repnz
jg
xor
popa
xor
sbb
lea
xor
xorb
insb
pop
xchg
mov
jns
push
rolb
jmp
xorb
push
mov
inc
int3
loopne,pn
mulb
sub
cmp
inc
dec
push
aad
cmp
push
adc
push
in
ds
xchg
rcll
jns
sub
rcl
pop
mov
hlt
cmpsb
xchg
mov
lcall
cltd
imul
mov
xor
fimull
dec
std
aam
sbb
out
outsb
or
cmp
sub
jg
dec
dec
push
mov
mov
loop
and
fimull
dec
sub
cmp
das
xor
xchg
xchg
les
adc
fucomi
push
test
inc
daa
loope
mov
out
cmpsl
push
loopne
xorl
cli
iret
pusha
loope
fidivrs
sbb
test
rorb
add
mov
les
aam
pushf
dec
in
push
xchg
std
fcmovnbe
push
adc
andb
sbb
mov
bound
ret
xor
es
mov
stos
jl
push
xor
cltd
jo
cmpsb
sbb
sti
sub
sahf
inc
push
enter
ja
daa
and
sahf
jp
test
enter
and
mov
push
mov
shlb
xor
ds
lea
add
repz
xlat
lcall
repz
sbb
ret
mov
dec
out
sbb
cmp
add
aaa
lea
pop
into
loop
cmpsb
rcll
mov
dec
dec
mov
pushf
cld
add
lods
nop
xor
shrb
fwait
insb
int
sub
cmp
test
sbb
popa
out
lods
mov
push
pop
mov
pop
dec
scas
inc
outsl
xchg
loope
pop
fists
jmp
xor
sahf
push
cltd
cld
ljmp
jge
repnz
test
dec
aas
out
lea
out
lods
cmpsb
stc
outsb
adc
push
adc
subl
popf
pxor
or
or
jle
ja
loope
outsb
lds
add
out
orb
jne
leave
pop
xor
ljmp
sub
mov
mov
jns
cmpsl
outsl
data16
xchg
movsl
cli
lret
das
inc
xor
mov
nop
popw
dec
pop
out
dec
sbb
mov
or
out
jbe
mov
sub
cwtl
add
adc
shl
sbbb
mov
in
push
adc
popl
mov
sbb
xchg
jno
mov
test
or
or
pusha
or
jp
in
das
in
ficoml
cmp
and
cmpsl
cld
out
fwait
sbbl
pop
lcall
sahf
jns
pop
outsl
mov
xchg
das
scas
inc
movsb
lahf
jbe
add
repnz
pop
lret
pushf
mov
cmp
imul
xchg
cmp
mov
and
cmpsl
leave
pop
icebp
outsb
into
dec
lds
outsb
mov
out
and
mov
je
cmc
negb
push
div
addb
pop
or
pop
mov
sbb
adc
push
cwtl
jnp
data16
mov
jp
lock
stos
jg
jno
fs
int
dec
push
ret
bswap
fistps
adc
cmp
xlat
and
rolb
loope
ss
mov
out
jne
push
adc
bswap
jb
outsl
mov
lahf
into
lea
lcall
loopne
mov
sti
jmp
int3
cwtl
shrl
dec
dec
xchg
testl
cli
push
push
xor
stc
mov
pop
lds
cmp
gs
pop
movsl
push
pop
mov
push
sub
leave
fsubl
out
inc
inc
inc
inc
xchg
sbb
leave
and
pop
mov
pop
mov
dec
pop
mov
outsl
fchs
aad
adc
andb
xorb
lahf
scas
mov
mov
cmpsl
mov
push
hlt
push
push
mov
sti
sbb
mov
xor
aam
jno
or
and
adc
jne
add
jae
shrb
pop
inc
and
lret
jmp
inc
push
inc
fcomip
xlat
xlat
mov
popa
sub
imulb
cmp
mov
fcomps
inc
inc
daa
dec
push
xor
pop
push
cmpsb
pushf
push
jae
lret
aam
cmp
out
mov
cmp
fcompl
sbb
repz
add
jae
mov
cmp
into
jne
shlb
xor
testl
cmp
add
test
mov
fstl
cmp
add
mov
dec
subb
mov
je
cmp
in
xor
pop
rolb
and
mov
popa
mov
adc
out
fistl
jb
cld
sti
movsb
sbb
dec
sbb
popa
mov
test
add
pushf
loopne
dec
cld
push
mov
int
sbb
ljmp
clc
xchg
loop
int
fwait
xlat
push
lods
pop
pop
sbb
aad
add
push
testl
int3
in
sbb
ja
dec
dec
icebp
and
xchg
xchg
loop
fcoms
popf
dec
popa
xlat
das
mov
or
je
sbb
dec
mov
sbbb
loop
in
fstpl
mov
mov
lret
inc
cmp
push
xchg
icebp
icebp
add
xor
cmp
xor
js
xchg
jg
jo
inc
out
adc
aam
pop
mov
ljmp
mov
sbb
addl
xor
pusha
cmp
push
ret
ret
mov
sbb
jl
push
sub
je
loope,pt
cmp
bound
pop
iret
ret
pcmpeqw
xchg
jno
adc
cmpsb
pop
push
add
repz
mov
xorb
fucomip
xchg
adc
fldcw
das
pop
in
pop
fsin
lahf
fbstp
xor
mov
pop
mov
lret
cld
adc
push
dec
push
push
add
xor
add
mov
icebp
mov
sub
jl
sbb
fcompl
jle
dec
inc
es
inc
dec
mov
ret
mov
inc
mov
ficoms
outsl
cmp
leave
jmp
jo
and
pop
cli
add
push
sahf
ljmp
cmp
in
test
push
mov
ds
mov
inc
sub
dec
test
lahf
sidtl
pop
add
es
mov
mov
dec
js
nop
js
inc
cmp
xor
data16
xchg
or
or
fcoml
sub
imul
sahf
mov
int
sbb
data16
stc
loopne
pop
dec
lds
inc
and
incb
lcall
mov
mov
dec
xchg
into
xchg
mov
pop
insb
es
push
cli
fwait
jnp
movsb
pushf
xchg
and
push
dec
js
fadd
sbb
mov
push
lcall
or
dec
cltd
rcll
push
scas
xor
lods
je
fisttpll
sbb
out
femms
add
pop
scas
lret
mov
inc
pop
orl
cmp
adc
imul
adc
popf
int3
rorb
mov
js
mov
daa
jmp
adc
adc
mov
cmp
or
jmp
popa
push
mov
pop
push
stos
and
add
ds
sbb
cmp
push
xor
inc
jmp
int3
mov
push
imul
pop
pusha
cwtl
loop
leave
pop
mul
mov
test
rcl
mov
es
arpl
inc
adc
pop
dec
cmpl
and
jl
xchg
in
cltd
cmp
push
sarb
idivl
sub
sub
mov
inc
sar
push
and
insb
or
jne
pop
xchg
sub
xchg
clc
or
adc
xlat
cmp
xchg
scas
mov
push
ja
xor
add
fdivl
loopne
cmp
xor
js
sub
jecxz
rolb
dec
pop
xchg
cwtl
lods
movsb
icebp
mov
icebp
int
mov
or
gs
fldcw
sti
scas
iret
push
arpl
cmc
sbbl
outsl
mov
mov
in
nop
cmp
movsl
mov
jns
call
out
ljmp
enter
xor
mov
out
mov
das
xchg
or
clc
mov
mov
jns
jge
inc
testl
mov
push
mov
enter
and
adc
addb
out
addl
cmp
and
mov
mov
push
xchg
inc
inc
push
add
pop
lahf
aaa
cwtl
sub
das
mov
add
in
mov
movsl
add
jb
repnz
adcb
push
sub
jle
in
imul
and
cmp
push
movsb
aaa
outsl
imul
faddl
inc
adc
out
fldl
mov
cltd
addr16
in
or
dec
aad
icebp
jne
cli
xor
cli
inc
test
mov
xchg
mov
jge
mov
inc
inc
jmp
out
adc
scas
repnz
and
int3
adc
push
xlat
adc
movl
call
out
sbb
fdivrs
push
cld
lret
bound
jmp
mov
push
jae
add
jle
nop
lock
test
xchg
adc
mov
test
add
push
push
mov
xchg
jg
shrb
xlat
das
lods
and
jnp
jb
fstpt
mov
fcmovnb
add
lods
loop
ljmp
fdivl
push
repnz
and
outsb
inc
jg
cmp
adc
cld
and
test
lahf
aam
inc
pop
inc
repz
outsl
pop
cmp
rcll
insb
subl
cwtl
pop
jge
lods
dec
xchg
inc
lods
cmp
push
push
sbb
mov
out
jnp
sbb
popf
sarb
or
sub
fdivrp
xchg
adc
loopne
aam
adc
rcll
rolb
xor
outsb
test
jge
lock
jnp
mov
cli
rolb
fmuls
push
sub
push
pop
jle
iret
mull
jp
sti
mov
xchg
fidivrs
mov
loopne
xchg
cltd
in
fucomp
es
cltd
aam
cmpsb
aam
xor
add
or
mov
xor
je
mov
push
inc
jge
rolb
stc
cmp
fsubl
sbb
or
cmc
loop
or
pop
scas
xchg
rcr
xor
push
dec
orb
in
push
inc
cmp
mov
xchg
and
jo
leave
lahf
jle
and
bound
add
cmp
inc
xor
or
mov
mov
shlb
aas
or
rcrb
lret
cmpsl
out
push
pop
mov
clc
test
orl
xor
and
sub
lahf
rcrl
pusha
lea
mov
sub
hlt
mov
insb
push
cmc
mov
loop
jecxz
cltd
jl
lcall
jg
mov
adc
push
rclb
das
popf
push
lock
cmp
push
psrad
push
outsb
stos
clc
in
lcall
repz
lret
sub
jno
cmc
xchg
and
lock
incl
jb
inc
bound
cmp
jp
mov
dec
test
add
xor
int3
jmp
rolb
fsts
fwait
negb
mov
nop
xor
inc
fistpl
jno
sarb
jle
addr16
aam
imul
ds
cmp
xchg
clc
inc
lcall
xacquire
nop
sti
loope
pop
inc
clc
inc
add
nop
insb
adc
loop
push
cmp
mov
arpl
ja
pop
aas
lods
rorl
or
jne
aaa
stos
or
mov
mov
mov
xor
outsb
pushf
sbb
sub
aas
mov
add
std
int3
xchg
movaps
into
lds
daa
imul
adc
inc
in
cltd
rcr
dec
xor
rorb
cmp
mov
std
mov
cmp
dec
cmp
loop
andl
pop
jg
pop
loopne
icebp
icebp
arpl
add
dec
inc
jle
fcmovb
dec
daa
dec
jmp
and
pop
and
call
inc
ja
sub
pop
cmp
outsl
les
mov
scas
enter
cli
adc
in
aaa
mov
adc
outsl
dec
inc
out
mov
or
pop
gs
int3
fwait
scas
pusha
cmp
repz
cmp
push
inc
out
add
jbe
adc
lret
pop
jl
inc
shrl
lods
dec
lods
xchg
mov
pop
jb
out
mov
xchg
pop
cmc
adc
cwtl
mov
and
jb
sbb
fsubl
adc
aam
sarb
stos
xchg
mov
push
fdivl
pop
sbb
sbb
lock
xchg
push
jae
daa
lods
sub
push
stos
sbb
cs
pop
out
pop
loopne
pop
sub
jmp
mov
sbb
loopne
adc
movsl
ljmp
and
movsb
fcomp
movsb
popa
jne
daa
popa
adc
cmc
and
jb
mov
testl
push
or
leave
pop
test
jg
mov
mov
ret
pop
movsl
or
lods
jae
pusha
xchg
push
cmp
sahf
inc
inc
sub
jecxz
push
idiv
jbe
sub
xchg
xchg
add
into
repnz
dec
gs
adc
cwtl
adc
jecxz
icebp
lods
pop
adc
movsb
repz
mov
scas
in
mov
xor
scas
mov
aam
cld
mov
bound
xchg
insl
dec
or
mov
out
iret
cmp
shlb
xor
push
pop
pop
fwait
insb
gs
jns
push
and
scas
xchg
sub
cmp
dec
cld
stc
pop
dec
xchg
dec
insb
sbb
and
sarb
pop
adc
sub
clc
pop
shlb
adc
ret
add
jle,pn
shl
push
aas
out
adc
aad
push
imul
cmpl
pusha
adcb
jg
imul
in
ret
sub
sub
in
pusha
movsl
mov
lea
and
mov
mov
ret
xor
dec
fsubl
xor
outsl
xchg
scas
aas
xchg
andb
sti
mov
xorl
rcrb
mov
and
movsb
dec
push
mov
mov
adc
add
and
jne
cs
out
jge
sub
cmpsl
lock
mov
test
cwtl
mov
push
jp
jge
sub
fdiv
pop
xchg
lods
cmp
jge
cwtl
data16
inc
loopne
adcb
inc
inc
and
arpl
test
dec
out
ja,pn
rcr
sbb
int
sub
jp
mov
stc
enter
mov
movsl
testb
xchg
push
sub
sahf
pop
sub
cmpsb
pusha
int
and
push
mov
shl
mov
cmp
rorb
jge
sti
pop
test
call
sbb
xchg
mov
rclb
sbb
add
fwait
inc
or
call
or
out
in
and
mov
call
and
mov
cli
cmp
push
xchg
or
sub
inc
mov
popa
xor
in
cmpsb
xchg
movsb
dec
xor
das
push
mov
or
jbe
xchg
ret
lock
mov
or
mov
shl
mov
cltd
mov
bnd
jo
cs
les
cmp
push
or
daa
mov
cmc
mov
jge
in
jns
aad
sarb
lret
or
cmp
dec
fcmovne
adc
cmp
mov
mov
adcb
cmovno
add
or
cmc
clc
add
dec
out
sbb
cltd
push
rorl
js
adc
jbe
mov
in
xchg
ja
mov
shll
push
mov
push
dec
push
cmpsb
push
xor
inc
jne
inc
cmp
loop
cmp
gs
das
jae
popa
xchg
adc
loope
dec
push
xchg
arpl
xchg
mov
or
sbb
lret
movsl
jno
movsb
mov
xor
outsl
push
mov
jns
sbb
cmpsl
mov
mov
shl
out
call
dec
scas
xor
sub
rolb
aaa
out
jg
sarb
cmp
cmp
xorl
jg
test
nop
push
sbb
adc
mov
mov
stc
adc
jmp
or
pop
stos
mov
shrb
jno
jle
sbb
pop
cmpsb
inc
adc
jl
inc
outsb
xor
fldl
cmp
sar
mov
fidivl
ljmp
andb
mov
mov
push
in
pop
pop
ds
les
cmp
int3
loop
add
pop
jle
mov
sahf
loope
fwait
push
sub
hlt
jb
outsb
adc
fimull
cmp
cmc
xor
repz
ss
stos
les
mov
dec
lea
jp
aas
jg
sbb
iret
pop
idivl
and
pushf
jecxz
daa
stc
leave
mov
mov
adc
pop
or
adc
loop
sub
loop
incl
mov
into
arpl
addr16
jb
adc
fdivrs
cld
je
dec
outsb
sbb
iret
add
or
jo
dec
popa
cmp
sbb
or
orb
imul
outsl
test
xlat
dec
into
push
xchg
cmp
add
rclb
xor
jmp
xchg
mov
mov
in
add
pushf
mov
mov
loop
insl
pop
mov
and
pop
ss
cmp
add
and
arpl
addb
mov
adc
xor
inc
lock
or
aam
sbbl
lret
movsb
jecxz
pop
add
out
cli
shr
mov
out
cld
pop
sbb
xor
mov
xacquire
ljmp
lods
outsb
cmp
dec
mov
xchg
mov
sbb
mov
jo
outsb
outsb
je,pt
aad
or
ljmp
cmpsl
xchg
cmovnp
xor
call
mov
mov
mov
mov
sbb
fsubrs
dec
imul
xor
mov
xor
pop
les
mov
lock
jl
fcomps
cli
sub
adc
icebp
adcb
xchg
xchg
sub
ss
clc
mov
push
imul
push
mov
pop
mov
in
ret
sub
mov
cmp
dec
pop
and
lret
pop
mov
aam
aaa
std
adc
cmp
adc
xchg
pop
fwait
cmp
js
sti
das
mov
jo
mov
inc
int
dec
loopne
ret
push
mov
xchg
adc
js
shll
and
sahf
xor
fcomip
sub
jmp
movsl
jmp
decb
sti
mov
push
shll
xchg
test
push
mov
fcmove
inc
aaa
loopne
repz
in
mov
jle
mov
popa
scas
lock
adc
ss
lahf
in
pop
jo
push
jg
int3
inc
aaa
xchg
inc
jp
pop
jl
push
xchg
add
dec
in
gs
dec
xchg
roll
fwait
lret
nop
arpl
inc
push
in
arpl
pusha
movsl
in
movsb
sub
fwait
in
lods
lds
divb
test
ror
ret
pop
addr16
jecxz
fmull
push
andl
mov
test
mov
in
ret
xchg
adc
mov
mov
sbb
cmp
push
imul
xchg
scas
mov
dec
mov
sub
insb
popf
fdivl
in
negl
xor
fisubrl
int
jb
inc
adc
call
mov
ja
iretw
mov
sar
pop
inc
or
pusha
je
cmc
ficompl
push
fsubs
adc
cli
insl
and
aad
sbb
xor
aas
dec
pop
lea
int
or
pop
fcoml
adc
and
and
scas
sbb
fldenv
insl
or
sub
subl
int
or
xchg
sahf
popa
out
les
mov
and
dec
push
ljmp
xchg
xchg
outsl
pop
scas
push
adc
test
int3
std
jecxz
push
xorl
js
aam
loop
popa
repnz
cmp
inc
fs
test
adc
scas
jae
inc
in
jo
lds
sarb
test
push
jae
fnstsw
stos
inc
and
push
cmp
pushf
jb
pop
in
mov
jle
mov
les
jg
sub
jnp
cwtl
xchg
sub
fwait
pop
inc
and
lahf
pop
inc
test
mov
inc
fstpt
fstpl
cmp
int
push
test
push
and
xchg
xchg
lods
aad
cltd
jmp
cmp
jecxz
push
sub
mov
push
pop
leave
ret
add
arpl
fsubs
fdivrs
cmpsl
dec
mov
xchg
mov
adc
cwtl
popa
test
cmp
lock
xchg
sbb
in
jno
xor
lret
jno
xchg
out
aad
idivl
ss
out
pushf
in
cmp
adc
ljmp
sbb
inc
jb
ja
pop
mov
aam
xchg
fdivl
pop
out
mov
mov
push
cmp
mov
inc
insb
mov
inc
lods
lods
inc
movsl
mov
sub
cmp
std
sbb
pop
xchg
ret
mov
popf
scas
inc
call
into
sti
sub
je
xor
and
and
adc
push
js
mov
sbb
dec
push
data16
pop
xchg
lds
and
inc
jnp
sbb
add
cmp
call
movhps
sarl
gs
mov
stos
ret
xchg
fidivrs
sub
jmp
or
pop
sarl
dec
or
xchg
and
lcall
and
lret
or
xchg
jo
xchg
mov
dec
pop
push
shlb
and
xchg
test
jo
xor
sbb
test
imul
clc
pop
jo
sub
jp
lcall
sbb
xor
and
arpl
aaa
jl
push
das
push
inc
pop
cmpsb
cmp
lods
jae
adc
loope
mov
cmp
enter
jmp
jbe
test
mov
push
jnp
pop
scas
pop
fwait
inc
push
ret
scas
cmp
ret
adc
mov
pop
inc
push
pop
je
dec
in
xor
lret
mov
mov
shrl
sbb
jae
mov
icebp
jno
lds
sub
mov
icebp
rcrb
mov
js
jl
dec
outsb
or
ds
fcmovnbe
add
push
mov
push
xor
test
addl
fstps
xlat
pop
push
js
aam
mov
pop
rorb
inc
pop
sub
pop
cld
jns
test
fadds
popa
rcrb
xor
sarb
ficoms
cmp
movsb
sub
ror
sahf
mov
cltd
out
inc
fisubrl
sub
repnz
sbb
lret
fstl
inc
in
mov
push
fwait
xor
pop
hlt
sti
mov
cltd
frstor
xor
mov
and
es
stos
test
inc
xlat
ja
andl
inc
imul
push
cmp
push
cs
test
movsl
in
xchg
mov
inc
cwtl
push
pop
and
es
pusha
jnp
or
lea
push
push
push
outsl
pop
fnstcw
rol
and
mov
aaa
inc
adc
ret
sub
das
and
dec
mov
ret
inc
dec
add
testl
lret
lods
inc
insl
loope
pop
popa
pop
stos
test
scas
lret
cmp
mov
fdivs
mov
rcll
pop
xchg
mov
aam
pop
xorl
pop
pop
lods
stos
dec
popf
cmp
adc
adc
repnz
add
insb
movsl
ret
das
sbb
in
std
mov
cmpsl
negl
out
in
stos
and
cmp
cld
jne
je
sahf
insb
adc
mov
mov
test
test
pusha
cmpb
push
jo
mov
push
mov
mov
das
leave
jecxz
xorb
jb
push
fwait
jge
hlt
into
mov
lar
outsl
dec
daa
mov
popa
and
xchg
sub
hlt
dec
add
inc
bound
push
cmp
push
cmp
test
xchg
mov
lret
sti
dec
pop
lods
dec
shrb
mov
std
cwtl
and
cmc
inc
xor
or
xchg
cld
pop
loopne
test
addr16
mov
push
hlt
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
jmp
sbb
aam
mov
cltd
push
inc
lock
mov
fistl
addl
mov
push
test
dec
in
outsl
sbb
mov
rcll
mov
fdivr
outsb
js
jg
adc
or
cld
xchg
jb
mov
lods
jle
fsubl
je
ds
lcall
clc
rolb
shll
into
cmovne
and
cld
dec
adc
js
push
sub
fcoml
inc
popf
les
aas
or
stos
pop
fnstsw
imul
or
jnp
inc
es
adcb
mov
sbb
and
ffreep
gs
mov
mov
jp
clc
dec
adcl
fucomi
adc
push
pop
or
mov
ficomps
fildll
cs
imul
mov
je
iret
rcrl
fsubr
sbb
js
pusha
mov
pop
fwait
xchg
lret
jmp
or
popf
jns
push
lods
mov
push
dec
mov
pushf
stos
stc
incl
xorl
pop
inc
jle
out
repz
sbb
or
ret
sbbl
repnz
push
add
in
push
xchg
and
add
into
xchg
and
xchg
push
int3
and
mov
mov
ret
xchg
jmp
inc
loopne
or
sub
outsb
or
inc
push
mov
pop
jno
pushf
popa
mov
or
mov
or
mov
cmp
pop
xorb
jmp
pop
shr
jle
xchg
add
inc
mov
iret
je
dec
mov
scas
sub
jne
push
in
jbe
pushf
cs
je
fwait
rcll
mov
imul
call
in
aaa
in
movsb
loopne
inc
xor
test
or
rorl
stc
cmp
adc
iret
sub
ror
jecxz
lea
inc
pusha
cmp
push
iret
rcr
cltd
mov
mov
dec
cmp
icebp
mov
sbbb
mov
fwait
aad
lcall
addb
imulb
jno
decb
push
mov
mov
dec
mov
insb
imul
mov
push
scas
or
in
test
sub
movsl
cli
int3
fnstsw
add
filds
xchg
or
fistpll
scas
dec
pop
aaa
xchg
sub
fs
enter
sub
add
ja
cltd
and
dec
out
test
scas
les
jbe
lret
inc
fdivl
ds
or
std
daa
push
negl
cmpsl
or
cs
dec
sub
fwait
mov
ja
in
repnz
fsubs
mull
push
adc
fs
sub
sub
ljmp
sbb
xor
xor
popf
je
fwait
fwait
xchg
mov
xor
push
xor
mov
and
pop
repz
pushf
xor
or
jns
jle
push
out
aad
add
push
inc
cmp
xor
dec
cmp
testl
dec
and
loope
jmp
cmpsb
pop
in
lea
dec
test
push
pop
jmp
pop
xchg
shlb
movsb
sbb
push
movsb
fwait
xor
jl
jl
es
dec
mov
in
out
outsl
test
and
idivl
push
push
das
mov
aad
xchg
xor
dec
test
cmpsb
mov
iret
mov
rcrl
dec
sbb
repz
aam
add
or
xchg
mov
jge
pushf
dec
xchg
jno
jae
in
inc
and
or
or
rclb
sub
dec
inc
bound
pop
loop
adc
push
enter
dec
inc
add
inc
sub
clc
push
dec
xchg
sub
ljmp
mov
dec
fadd
xchg
js
pop
xor
imul
enter
sub
fs
ret
dec
pop
ss
push
add
push
in
inc
repz
fwait
jecxz
xor
cli
jnp
je
enter
fxch
jmp
add
xor
sbb
ljmp
cmpsl
xor
clc
inc
popa
movsb
inc
mov
pushf
dec
pop
pop
pop
pop
nop
add
push
sub
das
into
mov
dec
ret
sbbb
test
lds
push
out
ds
xchg
nop
out
mov
into
sahf
xor
jne
jns
notl
movsl
sub
repnz
cmpsb
incl
sbb
jbe
test
fsubl
jae
pop
adc
cli
fisubrs
and
cld
jl
cmp
xorl
mov
xor
mov
cmp
test
mov
mov
js
lcall
leave
xchg
push
ja
and
and
popl
mov
mov
jae
sbb
mov
dec
addr16
lahf
mov
xor
std
or
cli
add
fimull
dec
mov
jecxz
pop
inc
mov
jno
testb
addr16
lods
pushf
mov
ds
rep
pop
sub
loope
leave
enter
cmpsl
sti
mov
dec
sbbb
push
and
lods
sbb
mov
sbb
or
sbb
int3
sbbb
stc
jne
and
addr16
xchg
cld
push
xor
adc
mov
in
adc
jg
sub
pusha
js
out
je
loope
mov
jp
xcrypt-cfb
cmpsl
cmpsl
cmp
and
cmp
imul
mov
mov
jp
test
in
lcall
jge
cli
mov
adc
jae
xchg
cmp
mov
mov
inc
mov
lret
popf
cld
mov
sub
int3
movsb
shrl
cmp
arpl
cmp
xchg
jnp
mov
inc
lret
pushf
pop
xchg
xor
nop
jl
cmp
jns
mull
rol
jge
je
rolb
mov
mov
cmp
es
scas
add
push
jnp
cli
stos
sub
icebp
sbb
ret
xor
cmc
push
imul
repnz
or
mov
mov
ss
icebp
enter
pushf
jno
call
les
and
inc
mov
cmp
sbb
sub
mov
mov
popf
movsb
push
out
xor
xchg
imul
cmc
sarb
mov
scas
mov
jecxz
sub
cmp
fnstsw
inc
cs
leave
jge
mov
lcall
adcb
arpl
flds
jo
inc
push
xchg
jb
inc
test
je
stos
aam
ss
sub
add
in
shrl
fsubrl
adc
mov
dec
xlat
jbe
adc
in
stos
inc
insb
push
mov
sub
xchg
popf
aam
neg
sbbl
push
aam
aam
ja
and
inc
pop
push
cli
sub
mov
loopne
or
xor
rcr
adc
pop
pop
rcr
and
inc
sahf
mov
stos
es
imul
mov
push
loopne
add
out
or
mov
push
aas
pusha
adc
and
outsb
int3
fsubrp
shll
sti
pop
jle
and
xor
xchg
or
lea
mov
jge
jge
ficoms
ja
out
lock
mov
inc
loop
mov
mov
lcall
fwait
ret
add
pop
xchg
vsubps
in
mov
ja
mov
add
pop
fwait
ljmp
iret
data16
xchg
test
xchg
push
jae
sbb
cld
sub
stos
shr
sub
insl
test
cmp
jo
cwtl
scas
icebp
out
std
xchg
and
lock
lret
jmp
cmp
movsl
xor
mov
cmp
mov
jb
cmc
jmp
and
push
int3
cs
xchg
mov
sbb
pop
in
out
adc
sahf
stc
lea
dec
dec
lods
ss
outsl
and
xchg
push
jmp
into
stos
cltd
lods
js
fdivr
mov
or
dec
push
aaa
cmp
adc
popa
sub
leave
lods
popa
inc
sti
hlt
push
daa
dec
mov
cwtl
outsl
lahf
lahf
sbb
arpl
mov
out
stos
mov
rcrl
mov
add
sahf
dec
add
in
pop
gs
push
ljmp
push
jge
and
inc
fwait
ret
push
pop
mov
inc
cmpsb
jmp
dec
imul
imul
test
sub
push
mov
fsubr
cmp
add
sbb
cmp
cmc
xor
das
cmp
sub
jbe
push
push
outsl
insl
xchg
movb
mov
mov
and
push
out
push
mov
test
dec
add
push
pop
aad
dec
cs
popa
test
xchg
aad
outsb
ss
mov
pop
pop
ret
cmpsb
lahf
iret
cmpsb
clc
mov
or
repnz
dec
ficomps
or
xlat
sti
popaw
in
adc
aad
push
cmp
jnp
bound
sahf
xchg
lcall
sbb
pop
movsl
sbb
outsl
ds
sbb
shl
test
push
pop
mov
je
pop
rorl
stc
mov
pop
js
hlt
test
cmp
sbb
add
mov
inc
fistps
out
icebp
mov
shll
mov
dec
rcrb
sgdtl
gs
adcb
fldenv
push
cmp
popf
outsl
pop
ljmp
imul
pop
dec
push
aas
call
sub
cmp
push
repz
adc
adc
repz
xchg
outsb
and
in
stos
jle
inc
inc
sbb
inc
incl
pop
pop
je
fnstenv
xorl
xchg
mov
push
js
inc
pushf
imul
xchg
stos
cmp
fisttps
mov
and
jns
test
fstpt
lds
int3
sub
movsl
in
cmp
mov
sbb
imul
add
sub
cltd
dec
movsb
pushf
fcom
add
sbb
stc
jg
xchg
inc
mov
push
xchg
lds
inc
addr16
ljmp
loope
dec
mov
add
sbb
push
sub
xor
sub
inc
icebp
add
and
gs
push
arpl
mov
shr
ljmp
and
jp
mov
ficompl
vaddss
scas
sbb
nop
dec
and
fldcw
nop
cmp
jecxz
dec
and
pop
add
rcll
repnz
cmp
insl
push
in
dec
sbb
inc
push
xlat
push
or
dec
insb
lahf
repnz
mov
das
inc
inc
aam
sub
popf
stc
ja
cs
mov
mov
jg
pop
pop
add
dec
mov
push
and
cltd
stos
push
stos
data16
cld
mov
lods
fsubrs
jmp
adc
es
push
fisubrl
add
cli
jo
jbe
test
inc
mov
pop
xor
out
fimuls
cwtl
push
cmp
int
out
fwait
jg
xor
pop
pop
add
fwait
and
ret
push
iret
enter
lahf
inc
xor
imul
pop
sbb
movsl
sub
scas
add
sub
and
orb
adc
ret
aas
inc
rcl
out
daa
dec
adc
insl
sahf
sub
adc
jecxz
testl
pusha
dec
jle
mov
icebp
sti
scas
out
pop
xadd
cmp
mov
stos
sbb
int
or
adc
xchg
int3
pop
fmulp
lds
inc
cmp
jmp
lret
cli
lret
data16
jg,pt
add
out
lcall
repz
je
dec
movsb
aas
into
outsl
adc
add
insl
bound
mov
push
fistpll
cmp
clc
xchg
adc
xor
mov
add
scas
shrl
xor
xor
add
push
ficoms
xchg
xchg
mov
push
mov
loop
xchg
nop
xor
sbb
jecxz
das
or
iretw
xor
out
adc
lret
jmp
je
pop
cmp
jnp
dec
mov
stos
stc
mov
cld
cmc
cmpsb
mov
stos
mov
jb
pop
jl
jns
lcall
imull
or
test
call
fisubrs
sbb
icebp
loop
fidivl
popf
imul
add
rorb
aaa
xor
sub
adc
or
mov
mov
jle
loopne
cmpsb
movntps
sub
out
dec
pop
or
rclb
hlt
ror
fwait
mov
enter
mov
pusha
lcall
sbb
mov
out
mov
ja
scas
dec
inc
cmp
sub
jno
orl
xchg
xlat
aas
jmp
sbb
dec
es
lahf
jo
add
inc
and
jne
lcall
ljmp
cs
cmc
xchg
mov
cmpsl
xchg
xor
rcl
adc
aas
stos
sbb
shl
idivw
xchg
gs
cltd
fldcw
rorl
dec
cmpb
inc
xchg
ljmp
lds
add
outsl
notb
jl
kandnw
icebp
mov
std
sub
push
xchg
push
je
pop
mov
push
arpl
jae
sub
mov
mov
sbb
inc
and
cs
cld
push
cltd
cmpsb
imul
or
shl
icebp
jg
loope
mov
jne
das
mov
and
mov
sub
push
cwtl
mov
lock
adc
mov
push
mov
insb
stos
add
cmpsl
sahf
dec
jmp
jne
add
or
mov
push
push
sbb
incb
adc
icebp
mov
push
dec
push
sbb
jne
dec
fildll
push
push
and
jo
lock
cmp
and
pop
mov
ljmp
shl
stos
pop
shrb
jae
loopne
data16
push
mov
push
lret
in
outsl
and
rorb
jle
or
fsub
lock
shll
loop
andl
cli
movl
ds
insb
mov
pop
orb
outsl
js
cwtl
hlt
fadds
push
cli
movsb
push
mov
iret
jmp
arpl
repnz
stc
fsub
insb
cwtl
icebp
push
out
cwtl
lods
add
xor
or
jno
jns
add
cmp
mov
lret
add
mov
pop
inc
int
push
mov
and
sbb
iret
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
sbb
push
adc
mov
incl
mov
movl
mov
inc
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jg
jmp
call
xor
add
dec
mov
jmp
movl
mov
mov
xor
xor
xor
sub
or
mov
xorl
addl
mov
sbbl
mov
addl
sub
adc
mov
add
orl
adcl
mov
adc
mov
sub
xorl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
adc
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
movl
sbb
lea
sub
mov
movl
andl
lea
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
neg
mov
xor
orl
add
mov
xor
xor
xor
or
sub
sub
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
mov
dec
mov
jmp
mov
adcl
mov
andl
add
push
mov
andl
mov
mov
sbb
mov
xor
neg
mov
add
movl
cmp
je
movl
mov
movl
jmp
sbb
mov
xor
adcl
push
add
add
xor
mov
xor
mov
adcl
add
movl
push
movl
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
xor
mov
andl
xor
add
subl
xor
orl
add
movl
adc
notl
xor
xor
cmp
jne
cmp
jne
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
mov
dec
mov
jmp
add
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
jmp
mov
mov
xor
notl
add
imul
dec
mov
xor
add
cmp
mov
movl
je
mov
add
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
movl
sub
movl
push
push
adcl
push
xor
orl
push
call
addl
mov
sbbl
lea
push
sbbl
push
orl
call
movl
cmp
movl
je
xor
movl
jmp
movl
mov
push
lea
xorl
push
push
push
xorl
push
call
imul
cmp
jne
subl
lea
adcl
push
push
call
movl
cmp
movl
jne
andl
pushl
push
call
addl
mov
or
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
adc
lea
mov
or
mov
lea
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
addl
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
mov
negl
mov
xor
xor
xor
mov
mov
mov
mov
andl
mov
subl
movl
adcl
mov
xor
movl
mov
addl
xor
subl
add
movl
jmp
lea
push
decl
push
adcl
call
movl
cmp
jne
addl
push
andl
lea
push
push
push
push
call
orl
imul
movl
cmp
movl
jne
orl
lea
push
push
addl
call
movl
cmp
movl
jne
xorl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
adcl
xor
lea
push
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbbl
xor
lea
push
mov
pushl
subl
call
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
lea
movzwl
xor
mov
mov
adcl
xor
xor
add
mov
xor
lea
movl
mov
movl
cmp
jbe
or
mov
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
xor
mov
and
mov
addl
sub
adcl
xor
subl
mov
andl
lea
mov
lea
mov
xorl
lea
subl
push
push
subl
call
movl
cmp
jne
push
lea
push
andl
push
subl
push
adcl
push
addl
call
xorl
imul
cmp
movl
jne
lea
adcl
push
andl
push
xorl
call
cmp
movl
jne
sbbl
lea
push
push
call
cmp
movl
jne
adcl
push
andl
lea
xorl
push
subl
push
push
push
sbbl
call
imul
cmp
movl
jne
andl
lea
negl
push
push
xorl
call
movl
cmp
jne
lea
xorl
push
andl
push
subl
call
movl
cmp
movl
jne
adcl
push
lea
push
adcl
push
subl
push
subl
push
adcl
call
imul
cmp
movl
jne
subl
lea
push
adcl
push
xorl
call
movl
cmp
jne
xorl
lea
push
push
andl
call
movl
cmp
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
imul
cmp
movl
jne
xorl
lea
push
orl
push
call
cmp
movl
jne
subl
lea
addl
push
push
adcl
call
cmp
jne
orl
push
orl
lea
push
adcl
push
andl
push
push
call
orl
imul
movl
cmp
movl
jne
adcl
lea
push
andl
push
subl
call
movl
cmp
jne
adcl
lea
push
sbbl
push
adcl
call
cmp
jne
push
movl
lea
addl
push
notl
push
push
orl
push
call
imul
cmp
jne
lea
push
push
xorl
call
cmp
jne
xorl
lea
andl
push
push
decl
call
movl
cmp
movl
jne
xorl
push
addl
lea
push
push
andl
push
push
call
imul
cmp
movl
jne
sbbl
lea
xorl
push
push
orl
call
movl
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
xor
mov
sub
add
movl
mov
mov
sub
or
mov
push
mov
movzbl
add
xor
mov
xorl
push
sbbl
mov
add
cmp
movl
je
mov
and
mov
addl
xor
xorl
xor
sbbl
add
adcl
add
adc
movl
xor
sbbl
mov
incl
push
xor
xor
neg
xor
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
orl
mov
xor
add
mov
sub
sub
movsbl
mov
sub
movzbl
or
mov
andl
xor
cmp
movl
jne
xor
xor
xor
mov
movl
push
mov
adc
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
sub
mov
andl
mov
movl
and
push
mov
or
mov
add
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
inc
add
add
add
push
push
inc
push
dec
sub
inc
xchg
pop
or
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
