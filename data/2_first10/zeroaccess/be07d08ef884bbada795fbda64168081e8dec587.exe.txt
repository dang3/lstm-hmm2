push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
daa
mov
jp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
mov
add
jle
insl
xor
xor
add
outsl
test
or
frstor
sub
or
lods
mov
int3
adc
popf
loop
inc
xor
cld
aad
testb
xchg
leave
dec
out
negb
jae
mov
cmc
das
out
inc
xchg
fmuls
jg
pusha
test
flds
sub
lret
cmp
fnsave
out
sbb
pop
pop
sub
mov
cmp
cwtl
add
mov
aad
mov
loopne
enter
cs
daa
repnz
pop
imulb
int3
or
mov
dec
shl
inc
je
repz
add
mov
hlt
sub
mov
out
cmp
dec
js
inc
dec
sbb
es
mov
sbb
jne
cmp
inc
push
mov
mov
lock
sbb
loop
xchg
adc
lods
ret
or
aaa
inc
inc
jle
jo
outsl
mov
pusha
test
jns
cmpsb
test
repz
mov
push
scas
dec
orl
cmp
pop
pushf
xor
inc
cmp
cmpsl
mov
roll
lahf
inc
pop
mov
sti
cmp
or
jg
cmpb
sti
and
adc
test
jnp
and
inc
sti
pop
or
and
mov
fnsave
mov
xchg
push
sbb
and
hlt
inc
in
cmp
add
push
imulb
push
add
xchg
push
mov
aas
movsb
test
out
cmp
pop
ret
jns
fiaddl
mov
jno
adc
adc
mov
mov
cmpsl
lds
out
or
sbb
jno
jmp
xchg
adcb
shlb
and
sbb
scas
cli
inc
int
test
insl
xchg
mov
es
cmpsb
and
lret
in
bound
mov
sbb
int3
int
loopne
push
andb
push
scas
fisubl
sbb
scas
adc
add
in
in
jae
add
aas
pop
sub
jl
setg
and
call
out
fs
lahf
xchg
cmc
dec
cwtl
in
stc
cwtl
or
fdivrl
xor
and
jmp
stc
stos
fisubs
sahf
je
popf
test
aas
or
das
lock
int3
icebp
mov
jmp
mov
push
inc
repz
stos
mov
mov
dec
cmpsb
inc
sbb
rcrl
sub
arpl
xchg
das
pushf
jo
mov
add
push
jnp
adc
cmp
dec
add
adc
mov
pop
scas
test
sbb
xor
mov
inc
sbb
out
xlat
in
sbb
and
cmpl
int
mov
mov
imul
andl
pop
mov
es
lahf
pop
out
jp
in
mov
mov
jle
jmp
inc
sbb
mov
lock
stc
packsswb
out
xchg
xchg
fldl
jmp
cmpsb
insl
stos
sub
shll
pop
mov
mov
sbb
push
rclb
cmc
test
mov
mov
outsb
sub
loop
lahf
push
dec
push
in
cmp
sbb
adc
test
pop
jmp
pop
mov
vmovmskps
ja
outsb
inc
lods
fdivs
jg
cmp
or
jno
mov
lea
push
cmp
mov
pop
adcl
imul
hlt
sbb
shll
fmuls
ljmp
and
xor
loope
add
jbe
push
int3
mov
adc
into
xor
data16
mov
sahf
mov
jle
sbb
sbb
push
or
movl
mov
rcl
mov
je
mov
cld
cld
aad
test
fists
outsb
mov
cltd
fwait
lods
or
mov
mov
fistpl
test
or
int3
addb
inc
mov
dec
sarb
pushl
sub
mov
mov
arpl
ret
sub
mov
xor
fldl
xchg
fstl
adc
jo
xor
push
gs
mov
sub
jge
lcall
push
xor
sbb
jmp
aaa
test
test
inc
jnp
das
addr16
sbb
loop
mov
mov
std
xchg
popf
pusha
sbb
ds
arpl
push
gs
int
mov
xchg
fcoms
xchg
gs
fwait
je
xchg
scas
lahf
mov
add
push
sbb
push
adc
xor
sti
ja
and
fnstcw
lahf
push
fsubrp
loope
test
clc
mov
imul
movsl
cmp
popf
cmp
je
pop
loop
cltd
jno
popa
es
jne
xchg
scas
call
inc
inc
sbb
push
or
jp
repz
xor
cltd
jne
dec
lds
jl
mov
cmp
pop
cmpb
pop
push
cmpsb
mov
imul
push
arpl
sbb
adc
mov
add
ja
jmp
stc
out
dec
push
sbb
push
into
add
and
lods
shrb
loop
enter
cld
xor
mov
cwtl
jnp
lret
push
inc
inc
jae
sbb
call
aaa
ret
xchg
enter
pop
pop
dec
mov
push
sahf
sub
addr16
daa
pusha
out
cltd
xchg
lret
jno
pshufw
cmp
into
lea
loop
pop
sbb
mov
or
xor
xchg
xchg
leave
lock
xchg
fistps
mov
push
lea
cpuid
fimuls
scas
icebp
xchg
pop
cmp
inc
pushf
dec
or
movsb
add
xchg
sbb
lds
testl
mov
das
popa
loop
xchg
lret
aam
jb
cli
mov
insb
mov
jge
fists
jbe
in
into
nop
inc
pop
push
rorb
dec
mov
das
mov
divb
pop
jae
scas
test
or
push
mov
test
dec
sub
xchg
mov
jle
ja
pop
and
shrb
cmp
mov
pop
pop
cwtl
cmp
sarl
enter
mov
addb
jle
inc
dec
addl
loopne
sbb
mov
call
and
leave
dec
push
pop
fwait
out
fcmovnb
repz
jne
es
cmp
scas
call
dec
lock
push
push
aaa
or
mov
fs
mov
repnz
sbb
push
push
subl
sbbb
adc
mov
in
call
mov
lds
dec
test
push
and
mov
addr16
jmp
out
fdivl
and
cs
xor
cmc
or
mov
adc
lret
mov
mov
push
inc
data16
leave
push
inc
pushf
loopne
ja
sbb
rolb
insl
mov
adc
fdiv
inc
dec
adc
and
xchg
and
mov
lods
popl
push
aas
cli
in
les
cld
xchg
adc
lcall
push
xchg
inc
pushl
test
and
cmpsl
xchg
sub
pop
xor
out
pop
outsl
aad
pop
mov
dec
jmp
jno
into
jp
xlat
les
shrb
aaa
xlat
push
push
rcrb
gs
mov
xchg
test
push
pop
scas
in
sub
pop
sbb
cmpsb
push
lahf
outsl
add
mov
outsl
dec
rclb
aas
dec
subb
cmp
mov
dec
outsb
test
inc
subl
and
hlt
sarl
inc
jg
rcll
roll
gs
inc
xor
insb
js
pop
and
inc
adc
add
push
add
cmp
sbb
std
add
xor
sbb
fnsave
mov
adc
sbb
xor
insl
and
lea
jbe
xlat
pushf
jae
sub
lea
jbe
and
ja
or
jo
add
imul
loop
xchg
or
shl
cmpsl
push
push
data16
test
add
imul
sbb
mov
push
mov
mov
jp
adc
insb
in
inc
push
icebp
mov
lock
mov
inc
fwait
jbe
xor
pusha
xor
push
or
ljmp
lret
inc
jl
inc
pop
in
aam
adc
inc
lret
pop
or
pop
and
inc
xchg
in
cmp
sub
push
cld
mov
gs
add
mov
cmp
gs
insb
hlt
cli
int3
leave
leave
in
jle
push
outsl
aam
mov
jo
hlt
call
jb
mov
hlt
push
dec
lea
cwtl
adc
aam
lret
mov
cwtl
pop
ja
pop
les
fbld
repnz
icebp
les
jo
mov
mov
mov
or
mov
mov
cld
hlt
lret
xchg
cld
pop
imull
in
outsb
fs
mov
sbbb
repnz
jge
jge
mov
mov
out
lret
cmp
push
aad
jo
mov
mov
fxam
lahf
push
push
sbb
xchg
js
cmp
popf
arpl
adc
ret
push
js
aad
inc
nop
arpl
sub
adc
xchg
or
mov
int
jmp
lock
cltd
push
or
mov
cltd
add
mov
stos
enter
push
xor
lods
into
or
rcl
mov
mov
add
out
push
fstpl
pop
and
fst
cmp
mov
cmp
shrl
jle
jp
pop
andb
dec
js
cmc
pop
xor
idiv
push
mov
pop
sub
and
sub
sub
fwait
pop
movsb
ds
dec
aaa
mov
dec
push
loope
mov
cmp
adc
cwtl
inc
in
iret
out
subl
push
ret
xor
add
adc
inc
mov
ljmp
dec
cltd
xchg
fdivrs
cld
pushf
adc
subb
rolb
push
pop
dec
cld
rorb
xchg
shrl
jno
inc
adc
inc
jo
int3
test
xlat
scas
mov
jl
cwtl
or
push
pop
enter
icebp
repz
mov
add
jle
mov
jns
fcmovne
test
in
aam
ret
mov
imul
push
pop
pop
test
cmp
inc
and
outsl
iret
xchg
and
sbb
arpl
add
inc
push
push
or
jne
mov
add
push
mov
mov
mov
sub
or
adc
nop
test
cmp
pop
mov
mov
pushl
push
pushf
clc
add
cs
inc
push
lods
clc
add
pop
sub
js
repnz
aad
lcall
lods
xchg
mov
mov
popf
int
add
sub
aam
jmp
jnp
dec
xlat
add
jmp
dec
ds
sbb
mov
shlb
push
sub
lods
ss
repnz
fisubs
xabort
into
out
xor
mov
adc
add
lock
inc
jne
cmp
ret
popa
add
loop
in
mov
stos
or
or
cmp
or
repz
sub
fucom
ret
sbb
mov
iret
xor
imull
bound
pop
lods
cltd
pop
xchg
sub
fsubrl
pop
in
pop
ret
and
sbb
mov
fnstenv
lods
mov
pop
xchg
loope
cld
push
fdiv
idivl
pop
dec
xor
das
push
adc
mov
mov
iret
mov
ljmp
enter
jl
push
test
ja
push
and
inc
pop
into
jns
push
mov
clc
lcall
mov
rcrb
aad
jb
aaa
cld
dec
ret
lcall
sub
imul
xor
xor
int
mov
adc
or
xor
shlb
mov
jns
mov
xchg
insb
sub
adc
jmp
sbb
mov
shrb
gs
xor
add
add
adc
add
rcrb
pop
mov
cli
jnp
inc
jge
in
push
xlat
mov
fidivl
dec
ret
mov
mov
outsl
or
push
xor
xor
inc
faddp
inc
mov
outsb
sbb
loop
xchg
jecxz
mov
cmc
add
mov
psubb
and
adc
xchg
mov
mov
cpuid
push
or
mov
xchg
adc
sbb
push
movsb
adc
gs
push
pop
adc
cli
xor
mov
out
gs
shl
lahf
add
or
leave
popf
mov
xchg
push
sub
inc
adc
adc
mov
jle
pop
lahf
adc
test
jo
sbb
push
add
push
cld
pop
hlt
cmpsl
push
out
dec
add
jno
xchg
cmpsl
add
add
lret
mov
mov
cmpsb
ljmp
dec
cltd
cmp
loope
arpl
gs
dec
out
xchg
popa
adc
or
and
jmp
test
out
jb
and
out
xchg
icebp
jle
xor
fucomip
ret
xchg
mov
mov
jle
cmp
mov
and
sbb
push
or
adc
inc
int3
leave
pop
jle
dec
ret
mov
rcl
mov
clc
call
adcl
dec
jne
xchg
mov
cmpb
xchg
and
adc
pop
lock
add
xor
fildl
in
ret
cwtl
mov
fnstsw
cmpsb
shll
inc
fcmovu
pop
jecxz
and
and
enter
xchg
mov
push
xchg
adc
mov
mov
movsb
mov
sbb
lahf
jecxz
out
sbb
popl
js
jb
jge
push
aaa
in
xchg
xchg
inc
jb
es
cmp
mov
xor
xchg
cmp
loopne
xlat
fsubl
add
push
push
push
testl
mov
jb
lcall
mov
xlat
sbb
stos
mov
pop
push
lret
xor
bnd
and
pushw
mov
lea
xor
loope
sub
repnz
push
lret
into
pop
roll
iret
sbb
data16
inc
iret
repz
inc
jo
pusha
mov
xor
icebp
das
or
fisttpll
jg
mov
es
pop
shl
fs
outsl
dec
in
lahf
scas
sbb
das
xor
or
push
sbb
fmulp
std
inc
push
push
mov
cmp
pop
adcb
lods
out
inc
inc
adc
mov
cmpsl
xchg
clc
jle
xor
mov
int
pop
imul
and
jne
call
xchg
fsubr
pop
pop
xor
das
dec
jmp
aas
xchg
gs
shr
xchg
fnsave
and
mov
push
cmpsb
push
mov
sub
nop
adc
in
lcall
fwait
cmp
xor
fmuls
and
mov
stc
or
mov
sbb
push
das
in
insl
sub
push
sub
inc
xchg
or
outsl
out
mov
mov
sbb
push
adc
stos
rorb
lret
int
xchg
lret
cmp
mov
jb
push
outsb
pop
movsl
xchg
call
int
fs
jmp
dec
imul
loopne
jl
sar
stos
pop
or
cmp
dec
lea
fwait
cs
xchg
mov
push
add
movsl
fstp
and
mov
int
outsb
in
add
and
mov
xlat
sbb
or
push
jp
rcrb
test
mov
stos
mov
andb
imul
das
in
pop
outsl
and
fmull
cmp
iret
lret
int3
dec
ficompl
mov
test
mov
and
or
loop
ljmp
les
sbb
inc
testb
stos
jb
mov
sub
mov
jbe
xchg
xchg
mov
sbb
add
cs
pop
es
sub
outsb
lret
jae
push
rorb
or
mov
shll
sbb
scas
das
insl
mov
xchg
mov
aas
fldcw
jle
test
cli
ret
add
push
push
out
addr16
xchg
xchg
mov
jo
hlt
nop
jnp
ljmp
lcall
mov
shr
stos
stc
repnz
call
sbb
xchg
or
jle
pop
in
std
mov
push
mov
push
les
inc
dec
dec
inc
movsl
and
adc
lret
dec
mov
stos
push
and
mov
int
call
mov
xor
fcmovb
adc
les
jae
sub
cld
popf
int3
mov
mov
pushf
in
xor
rcrl
mov
mov
in
sub
in
push
xchg
sbb
enter
sbbl
popa
push
mov
fidivl
int
ret
daa
jmp
out
dec
xlat
push
pop
ljmp
jno
mov
fisttpll
stos
mov
lods
out
pop
jnp
lcall
scas
scas
movsb
std
test
xor
test
jp
pop
loop
lea
stos
push
sbb
test
into
cltd
or
adc
sbb
icebp
daa
cmp
ljmp
dec
ljmp
pop
xchg
dec
mov
fs
sbb
mov
pop
mov
imul
lods
andl
push
test
in
jg
ss
jp
cmp
data16
repnz
outsl
push
sti
in
js
lock
mov
or
pop
or
mov
pop
negw
jle
dec
std
stos
std
adc
sbb
lret
ror
jl
repnz
pop
dec
mov
lret
les
sub
mul
dec
and
mov
aam
pushf
sbb
fwait
hlt
inc
setno
shrl
fs
xchg
mov
mov
ds
mov
orb
jns
and
mov
dec
stos
bound
jo
mov
fbstp
cmp
cmp
and
mov
adc
shlb
pop
and
sbb
jb
out
sub
aam
call
sbb
dec
pop
fidivl
xchg
addr16
stc
decb
dec
or
movsb
imul
inc
shlb
sbbl
ss
call
or
andb
add
fildll
popf
mov
out
dec
or
mov
iret
shr
cmp
clc
subb
adc
test
inc
xchg
ja
mov
pop
jns
and
hlt
stc
mov
mov
adc
adc
imul
mov
pop
mov
cmc
aad
repz
adc
movsl
mov
enter
lahf
insl
stc
or
mov
add
jo
mov
jno
call
in
out
add
and
out
mov
xchg
hlt
gs
cld
pop
imul
js
jg
xor
jl
mov
cmp
inc
scas
out
loop
push
fldenv
mov
sub
cmp
cltd
cmp
xor
lahf
mov
fdivrs
or
loop
inc
pop
add
pop
cs
je,pn
mov
mov
or
call
adc
sub
push
jbe
xchg
in
dec
sahf
jg
pop
out
cmp
mov
dec
dec
mov
test
mov
arpl
sub
cmp
dec
xor
jp
sbb
inc
cli
pop
jno
sbb
pop
mov
xor
add
shr
out
pop
dec
mov
push
pop
adc
push
insb
mov
push
ss
mov
stos
pop
sbb
dec
outsl
adc
mov
xor
and
inc
jle
data16
pop
jg
push
jnp
xchg
adc
js
andl
rcrl
stos
cmp
dec
push
mov
pushf
cmc
cltd
gs
stos
lcall
in
test
adc
sbb
push
add
mov
pop
rcl
add
xchg
iret
sub
mov
xchg
sub
mov
cmp
pop
push
pop
adc
mov
hlt
ds
cmp
data16
lcall
mov
cmp
stc
mov
stc
jmp
inc
push
lea
pop
push
or
xor
in
push
xlat
push
inc
adc
outsl
scas
imul
shrl
adc
jle
mov
sub
jge
cmc
cmpsb
cs
andl
jae
ss
shl
push
ret
jp
orl
push
repz
jle
test
xchg
push
jno
xchg
sbb
xor
shr
xchg
lods
mov
xchg
les
ror
inc
gs
inc
pop
sti
inc
pushf
arpl
jmp
mov
adc
scas
popf
mov
mov
mov
mov
adc
inc
pop
shlb
shll
rcll
xchg
pop
roll
in
rol
clc
xchg
mov
daa
movsl
pop
xchg
std
adcl
mov
cmc
js
push
adc
jno
aaa
loopne
out
cmp
scas
mov
or
cmp
nop
ss
sub
pop
push
addr16
popa
mov
lds
inc
sub
sbb
xlat
xor
das
adc
loope
jnp
sub
movsl
pusha
mov
cmp
add
sti
and
xchg
mov
repnz
sub
loopne
dec
dec
push
fistl
in
lcall
mov
xchg
rorb
pop
call
xor
into
sub
ss
shlb
adc
xor
repz
fldenv
into
aad
bound
xchg
out
sub
push
mov
push
inc
adc
sbb
inc
pop
fdivrp
shlb
mov
pop
jmp
stos
nop
out
outsl
out
and
fisubs
dec
cmc
lret
push
shlb
ja
inc
enter
rclb
in
sti
mov
pusha
fnstcw
cmp
mov
and
ja
ret
les
add
jne
ret
stos
mov
mov
inc
bound
xlat
mov
cmpsl
fldl
inc
sbbl
push
nop
imul
mov
insl
cmp
mov
dec
xchg
mov
and
mov
mov
in
movsl
call
jbe
ss
push
fs
test
imul
jno
xor
fbld
lcall
popa
nop
fsubrp
rcrl
push
out
jne
icebp
or
sub
pop
mov
pop
verr
xchg
sub
cld
and
insl
mov
orb
jnp
imul
lds
iret
lret
pop
jno
mov
jle
outsl
xor
mov
sbb
jmp
inc
aaa
in
cs
je
sbb
xor
sub
ss
and
loop
dec
dec
inc
movsl
inc
pop
in
subl
fcoms
mov
mov
jae
sar
push
pop
xor
inc
jle
jp
arpl
jne
push
xor
jno
movsb
push
inc
shlb
popa
or
xchg
pop
hlt
add
sub
aad
dec
mov
jmp
in
je
push
sbb
mov
lea
movsl
ss
xor
xorl
mov
xor
inc
push
lahf
mov
jge
xchg
repnz
dec
cmpsl
ret
jl
fwait
pushl
int3
in
clc
fadd
incl
loopne
fsubrs
ret
lods
fwait
push
test
push
or
mov
mov
add
xor
ret
xor
push
dec
mov
push
push
cmp
ja
xchg
fwait
cmp
iret
in
adc
fidivrs
sbb
pop
mov
xchg
sub
and
pop
pop
cmc
daa
add
cmp
xor
lcall
cmc
push
sbb
outsb
rcrb
shrb
add
adc
je
pop
jno
scas
inc
sub
mov
mov
push
pop
loopne
test
cwtl
iret
aaa
or
notb
and
push
inc
mov
mov
cmp
dec
jne
call
outsb
jecxz
jecxz
fisubs
inc
fstl
movl
cmp
js
js
loop
sub
dec
pusha
popf
push
aas
mov
xchg
sub
or
imul
daa
int
sbb
xchg
inc
roll
cld
pop
enter
or
scas
sbb
rcll
mov
jb
push
xor
mov
push
sbb
insl
out
xchg
jne
sub
in
jle
push
jge
iret
jmp
scas
mov
push
das
or
rol
int
insl
cmp
aas
push
out
mov
add
cmc
rcrl
push
add
fistps
or
movl
repnz
in
lret
scas
push
test
xchg
inc
sbb
add
mov
and
mov
in
data16
cwtl
hlt
out
pushf
mov
pop
jecxz
sahf
inc
add
push
ret
movsl
jge
lret
add
push
mov
ss
cs
jo
adc
icebp
add
jl
test
or
xchg
iret
sbb
iret
jbe
xchg
xor
adc
xchg
or
push
jae
lret
add
push
mov
movsl
stc
xor
popa
imul
xor
lods
or
dec
iret
push
gs
es
add
rorb
or
mov
adc
fidivs
aaa
std
ret
movsb
mov
stos
ja
icebp
lret
cli
or
and
je
lds
adc
xchg
sbb
jge
dec
adc
push
pop
sub
mov
repz
rcrl
sbb
scas
dec
sub
loopne
or
mov
jmp
xlat
iret
add
or
pop
repnz
das
out
lock
mov
jl
stos
or
dec
pop
mov
push
mov
popf
js
or
cwtl
adc
push
movsbl
pop
stc
and
pusha
clc
popf
cwtl
inc
cmp
pop
sbb
or
ss
imul
lods
stos
cmpsb
das
fisttps
arpl
pop
cmp
push
pop
dec
lret
sbb
sub
test
mov
ret
mov
xchg
mov
pop
push
imul
cld
ret
inc
das
inc
out
in
outsl
inc
sbb
push
repnz
inc
or
loope
movsl
popa
call
push
out
outsb
cs
jecxz
mov
inc
out
mov
ds
aad
imul
or
out
ja
shr
fdivp
push
cmp
sub
push
movsl
sub
xchg
scas
cmp
cmpsl
das
outsl
icebp
not
sub
cmp
mov
pop
movsl
mov
idivb
jle
roll
xor
xor
xchg
fdiv
jae
fxch
shll
sub
out
clc
mov
addb
xchg
dec
xlat
sub
imul
test
push
bnd
adc
cmpl
bound
cwtl
push
and
mov
adc
mov
test
push
push
dec
lods
mull
dec
sti
cmp
lret
mov
adc
or
dec
mov
iret
pop
out
adc
inc
cmp
cmp
jmp
negl
mov
lea
add
fs
jo
add
sbb
xor
outsb
push
jne
roll
sub
divl
cmp
mov
popa
lock
movsb
subb
adcl
int3
adc
inc
xchg
stc
scas
stc
sbb
push
add
pop
popa
lret
sub
mov
sbb
jne
testb
mov
cmpsl
push
mov
jp
outsl
mov
push
fldcw
int
and
mov
dec
add
into
inc
mov
sub
loopne
rdmsr
xchg
mov
sbb
mov
sub
mov
int
sub
fs
mov
bound
xor
cmc
scas
mov
mov
cmp
push
ret
lock
mov
sbb
lahf
inc
or
out
ds
nop
aam
and
cmp
lret
mov
fstps
dec
jmp
cmpl
in
out
push
scas
stos
jbe
mov
fdivl
add
out
adc
adc
stos
and
sbb
lret
out
or
pop
out
fcoms
sub
out
or
jge
mov
sub
xorl
int3
jns
cltd
in
es
push
nop
cmp
adc
jno
sbb
int3
adc
out
stc
loope
out
je
mov
pop
jne
jle
insb
cmp
mov
jmp
xchg
test
adc
xor
cli
mov
jno
into
pop
sahf
fldt
xchg
inc
xchg
mov
adc
out
cmp
cmp
and
ss
sbb
mov
mov
jle
mov
sbb
cld
and
cli
movsl
fcmovnu
add
lretw
stos
mov
mov
inc
jp
lret
mov
cmpsb
rorb
in
jb
mov
mov
push
mov
mov
out
mov
lock
addr16
mov
jle
add
inc
cmc
in
jne
bound
shr
lods
sti
shrl
add
sbb
pusha
and
popa
outsb
bound
aad
push
jno
std
xchg
movsl
or
stos
ds
xchg
notb
insb
mov
inc
cs
jg
push
gs
fimuls
mov
inc
sbb
aad
jbe
nop
imul
movsl
ret
scas
xchg
stos
dec
into
mov
xchg
pop
adcb
subb
cmc
mov
movsb
sub
add
out
ja
out
or
cwtl
sti
jb
add
push
call
and
sbb
mov
imul
or
and
mov
fwait
pop
cltd
lods
cs
stos
push
xor
aaa
shl
mov
push
shll
call
call
cltd
cmp
movsb
xor
ret
scas
dec
sub
das
xchg
cmp
lock
int3
addl
in
adcb
lods
adc
xchg
aas
and
add
repnz
ja
lds
or
jns
mov
faddl
xor
repz
xchg
or
popf
sbb
leave
mov
std
movsb
cmp
sti
js
xor
xchg
cmpsl
gs
pop
xor
inc
out
jp
clc
leave
mov
push
fsts
push
push
pop
mov
push
sti
push
and
add
dec
xchg
ljmp
mov
test
leave
adc
hlt
and
inc
xchg
mov
mov
cli
shll
data16
test
sbb
mov
loopne
adc
sarb
pop
fldl
enter
mov
popa
push
add
and
mov
test
jecxz
decb
and
mov
stc
mov
mov
loop
ss
xorl
ja
in
pop
fsts
and
out
fwait
dec
mov
out
lods
inc
hlt
sbb
xchg
pushf
and
cld
xor
or
lahf
add
dec
xchg
jo
mov
inc
cld
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
pop
vmaxsd
aaa
pop
jp
out
adc
cltd
jge
xor
push
xor
aad
cli
pop
mov
adc
mov
ljmp
xor
out
mov
xor
jg
inc
xchg
and
xor
dec
pop
jl
inc
xor
cld
push
loope
in
popf
fdivrs
lahf
cwtl
push
push
jg
gs
inc
add
mov
je
jp
fs
dec
xorl
dec
jne
mov
stos
popa
mov
pusha
push
sub
cltd
cld
nop
mov
lods
movsl
jle
inc
push
xchg
push
arpl
repz
pop
testb
mov
in
lret
mov
dec
cmp
fsubrs
fnstenv
subl
push
iret
xor
int3
pop
jl
insl
pop
inc
cmp
xchg
leave
daa
mov
mov
mov
fisttps
adc
sub
bound
into
hlt
pop
inc
inc
xchg
test
or
outsb
je
mov
push
and
icebp
imul
testl
jle
test
cwtl
data16
mov
arpl
adc
xchg
adc
and
stos
pop
jne
je
sahf
cmpsl
jmp
imul
inc
sti
imul
imul
dec
adc
and
lret
mov
jb
xchg
sahf
clc
mov
out
movsl
inc
or
pop
out
push
jne
mov
cmpsb
pushf
mov
mov
out
jle
in
shll
je
jle
or
shll
lret
rclb
loop
mov
push
daa
push
stos
mov
xchg
clc
jae
dec
fcomip
inc
scas
addr16
mov
lcall
add
adc
jae
ljmp
xor
fcmovnu
cltd
test
aaa
sbb
xchg
call
push
sbb
repz
es
test
cmp
or
mov
cli
loopne
lock
into
adc
arpl
mov
pop
sub
add
jbe
cmp
repnz
stos
in
movsl
jg
cli
sub
mov
js
xchg
pushfw
inc
ja
aam
sub
movsl
pop
sub
mov
sub
loop
xchg
xor
lret
pop
jp
inc
dec
push
or
push
sub
mov
sarl
and
bound
popl
push
or
adc
and
sbb
sti
sub
mov
mov
out
jbe
dec
add
in
pop
out
jno
in
push
cmp
lock
pop
movsb
leave
dec
mov
add
popa
mov
sub
cwtl
jo
in
jbe
stos
mov
notb
add
and
inc
adc
idiv
or
int3
push
test
pop
mov
sbb
fidivrs
frstor
dec
adc
adc
rolb
mov
inc
lods
dec
fstpt
std
sub
pop
mov
pop
pop
pop
call
cmp
and
mov
sbb
mov
mov
cmp
jge
sub
pushl
popa
call
adc
cmp
inc
scas
and
dec
subb
jbe
sbb
sahf
xor
sbb
inc
adc
xor
adc
std
cmp
mov
mov
pop
test
insb
pop
mov
addl
dec
cmp
fmuls
jae
jne,pt
and
clc
insl
int3
clc
clc
stos
sbb
inc
add
fidivrs
hlt
aas
sbb
imul
push
mov
mov
cmp
and
loopne
xchg
mov
ds
push
jbe
addr16
push
mov
repz
adc
aad
test
mov
scas
xlat
shrl
sbb
leave
pushf
sub
or
xorl
pop
enter
fnstenv
lcall
xchg
int3
shr
add
cltd
or
into
push
setge
in
pusha
notb
test
iret
fmuls
popa
and
outsl
mov
inc
call
xor
pop
pop
sahf
inc
decl
sti
shlb
push
out
mov
push
sahf
mov
lea
enter
stos
jnp
lret
rorl
pop
inc
bound
out
add
leave
inc
dec
cmpl
push
subl
jecxz
fildl
inc
mov
in
repnz
nop
imul
movsl
icebp
and
sbb
push
dec
fbld
xlat
movsb
inc
add
mov
pop
iret
jnp
imul
popf
orb
xchg
cmpb
fisubrl
mov
cmpsl
inc
pop
popa
in
or
mov
push
pop
mov
push
cmpsb
jge
inc
push
jns
lret
aam
inc
sbb
jns
int
push
pop
lret
jmp
pop
xchg
cli
sahf
je
dec
push
dec
repz
rcrl
cmp
adc
pop
jp
mov
mov
add
dec
dec
push
push
mov
xchg
sub
std
in
and
jns
nop
mov
jp
pop
or
iret
imul
lahf
aam
adc
cmp
ret
lea
adc
fstps
dec
and
shrb
outsl
pop
repnz
or
xor
inc
cmpsl
outsl
loope
xchg
cmp
xor
and
cwtl
push
xor
push
fs
imul
adc
loope
add
pop
aam
stc
fisubrs
xlat
jle
jbe
int3
push
mov
push
adc
testl
cmpsb
xlat
mov
out
movb
and
fs
lods
fnstcw
lds
xor
or
setbe
xlat
sub
mov
cltd
cmpsl
outsl
pop
xchg
call
jl
mov
pop
repz
xchg
out
or
cmp
and
sub
outsl
mov
out
mov
in
mov
xchg
add
or
jmp
dec
cltd
jl
stos
sbb
lds
aas
and
push
insl
lcall
ds
sbb
jns
std
mov
cmpsl
ret
jge
cmp
mov
lock
jge
xchg
add
mov
cmp
push
or
inc
out
push
or
jae
or
add
push
stos
sti
add
adc
xor
ss
add
cld
or
test
xor
sub
rorb
arpl
mov
ja
xor
test
add
cmpsl
push
or
jge
scas
pusha
inc
lahf
adc
das
stos
mov
pop
jmp
pop
imul
mov
clc
lahf
pop
dec
icebp
mov
movsl
pushf
push
cmpsb
pop
push
out
mov
mov
insb
jb
xchg
rep
andb
test
fs
pop
inc
sub
cmp
testl
add
pop
jo
pop
xchg
mov
pop
in
out
sbb
loope
xor
int
rolb
addb
das
jnp
aaa
rcrl
cmp
pop
repz
and
inc
push
ljmp
cmp
mov
or
cltd
mov
pop
vcvttsd2si
pop
dec
call
in
lret
sbb
add
test
mov
inc
cmpsb
xchg
cmpl
data16
xchg
cmp
cs
daa
push
setns
dec
in
lock
sahf
pop
push
jbe
mov
push
cltd
and
int3
mov
andb
jmp
popf
iret
dec
xor
jge
fwait
loope
ret
push
bnd
movsb
insl
add
push
insb
cmc
dec
push
shl
jns
pop
xor
dec
xlat
cmpsb
daa
mov
sbb
jge
inc
jmp
out
pop
xor
or
mov
addb
xlat
insl
sbb
mov
cld
jecxz
mov
lea
mov
and
aaa
cmp
cmp
sbb
cmp
or
sbb
fimuls
jno
pop
and
addr16
mov
js
dec
sbb
push
sbb
mov
push
roll
adc
out
mov
mov
xor
add
mov
pop
adc
mov
fildll
pop
shrl
imull
sti
cmp
stos
add
rcrb
ss
call
mov
pop
mov
push
daa
dec
inc
jbe
push
imul
sbb
cltd
stos
jp
push
cmpsb
mov
mov
lea
dec
fdiv
cmovbe
add
sbb
cs
adc
mov
scas
aas
iret
fnstenv
push
mov
arpl
ds
es
mov
test
jle
cmp
arpl
cld
push
mov
sahf
movsl
mov
loopne
nop
mov
scas
adc
mov
lock
mov
dec
mov
or
add
push
lods
daa
leave
test
mov
lcall
test
sub
bound
pushf
scas
js
lret
fidivrl
push
adc
neg
cmp
mov
outsb
imul
sbb
jmp
push
mov
loopne
push
pop
sahf
movsl
dec
inc
in
enter
cmpsl
xor
mov
mov
or
fisttps
jne
movb
les
pusha
dec
test
fucomi
ljmp
andb
xchg
leave
mov
aaa
loope
icebp
cmc
lret
mov
loope
ss
mov
fdivrs
mov
gs
sti
push
fisubrs
call
stc
icebp
repnz
popa
jns
xor
mov
out
adc
jl
or
add
mov
pop
pop
mov
adc
scas
xchg
xor
push
add
mov
scas
fwait
movl
cmpsl
pop
pop
fdivs
sbb
lods
push
push
adc
neg
clc
sub
ficomps
in
push
jnp
lret
xchg
cmc
out
in
push
and
add
xor
sbb
adc
shlb
mov
into
clc
push
sbb
cmp
sub
cltd
sub
add
inc
fildl
cmpl
in
ret
loop
mov
addr16
ss
movsb
lret
shlb
shr
xchg
adc
das
enter
inc
ret
hlt
pop
daa
call
cmp
xorl
les
aad
jnp
lods
and
inc
jo
mov
mov
mov
pop
nop
and
adc
jns
shrb
sbb
mov
pushl
ror
add
jno
cli
and
in
push
jnp
adc
ret
out
dec
mov
jo,pn
xchg
sub
fcoml
cld
mov
cmp
cs
test
or
loopne
call
movsb
outsl
ret
scas
mov
sbb
call
pushf
mov
add
sub
fucomi
add
sub
mov
and
xchg
enter
cmp
and
or
add
push
lahf
cmp
inc
mov
or
adc
and
mov
pop
das
ljmp
sbb
orl
sub
test
and
and
hlt
test
inc
add
sarl
lods
mov
xor
jno
setb
xchg
sbb
sub
dec
jecxz
in
in
cmp
mov
push
push
jne
clc
test
bound
lret
pop
mov
lret
mov
dec
stos
pop
mov
or
imul
push
scas
daa
mov
xchg
jp
xorb
sahf
xor
mov
into
push
loopne
xchg
inc
push
into
inc
jbe
fldcw
stos
aaa
add
mov
jbe
lcall
rcrl
pop
mov
jmp
dec
movsb
jg
cmp
add
dec
mov
rcrb
and
adc
jl
xchg
lret
das
arpl
rclb
pop
inc
pop
outsl
cld
fcomps
add
xor
xor
ret
sub
mov
dec
lock
loope
and
xchg
dec
ljmp
inc
orb
or
sahf
nop
sar
fst
cli
rcrb
push
or
in
rcrb
jl
or
and
xchg
and
sbb
add
out
add
sub
mov
xchg
mov
add
dec
outsb
daa
mov
ja
daa
stos
mov
mov
aad
mov
sbb
or
sbb
add
push
sbb
mov
sbb
adc
test
xlat
dec
cmp
sbb
inc
cltd
and
inc
iret
movsb
fstps
jno
lds
sti
scas
push
test
ret
mov
jge
cmpsb
jle
cmp
and
dec
sti
shl
mov
fstpt
xchg
jmp
mov
dec
cmp
pushf
loop
add
sbb
and
adc
jecxz
mov
fcmovnbe
movsb
aaa
xchg
rorl
lods
mov
sbbl
jne
jecxz
push
sbb
test
jne
xchg
addl
insb
sbb
cmpsb
jns
fwait
push
sbb
stos
cmp
adc
jbe
je
lods
or
sub
mov
jle
pop
ljmp
sahf
scas
or
cli
es
imul
loope
xor
push
push
mov
jg
inc
sub
in
cmpl
fidivrs
and
mov
sbb
popf
in
mov
fistpll
xor
jb
je
scas
lds
jge
push
push
mov
cmp
orl
fnstsw
mov
push
mov
shrb
test
jne
cmp
dec
xor
jmp
bound
loopne
cld
out
dec
lds
fisttpll
inc
inc
test
mov
repnz
mov
add
cltd
repnz
xor
lret
out
mov
loopne
shlb
sub
out
nopl
pop
inc
les
jns
cmp
mov
dec
xchg
pop
mov
repz
push
push
or
or
cltd
sub
lahf
add
cmp
repz
mov
xor
out
rorl
bound
cmp
and
inc
mov
into
jb
lds
add
leave
rcll
adc
cmp
jg
je
jecxz
pop
lcall
push
or
aaa
jmp
das
stos
xchg
std
ffreep
add
sub
daa
rorl
xlat
dec
addr16
inc
cmpsl
push
jl
fildl
arpl
leave
scas
pop
xorb
gs
leave
add
inc
cs
daa
subb
push
cmp
ss
movsb
add
add
inc
dec
out
imul
mov
jge
pop
loop
movsb
js
es
jecxz
cltd
andb
dec
push
clc
jno
icebp
jo
or
adcl
add
jmp
outsl
shl
ss
jl
jns
dec
pushf
test
pop
push
or
sbb
mov
sbb
mov
adc
dec
outsl
cmp
out
jnp
insl
pop
xlat
xor
mov
stos
and
fs
or
xchg
into
int
sub
jns
arpl
adc
and
and
and
sub
lea
push
sub
jnp
repnz
test
pop
adc
stos
mov
jecxz
cmp
data16
rorl
shl
mov
daa
mov
xchg
push
nop
inc
pushf
stos
movl
pop
hlt
lret
into
es
and
mov
aad
mov
jmp
adc
cld
and
pop
dec
loope
adcb
adc
sbb
or
popf
mov
push
fnstsw
and
fnstenv
push
mov
adcb
aaa
sub
push
out
cmp
loop
mov
ja
jbe
jge
and
and
fmuls
xor
jo
adc
xor
push
cwtl
cmpsl
sti
std
cmp
jb
notb
cmp
adc
push
pop
imul
mov
add
std
jnp
mov
mov
movsl
mov
bt
cmpsb
jl
in
scas
fstpt
push
out
pop
dec
sbb
xchg
mov
dec
gs
movb
xchg
push
mov
imul
inc
push
dec
sbb
mov
jge
push
sbb
xlat
dec
xor
iret
add
cmpsb
mov
fsubs
push
dec
aas
loope
sti
adc
mov
ret
dec
push
inc
xor
filds
fs
and
mov
dec
push
pop
jae
insl
test
pop
cmp
mov
outsb
mov
jnp
push
mov
movsl
sbb
push
cmp
in
pop
mov
aam
pop
add
das
lods
jns
inc
mov
rorb
push
cmp
jne
dec
sub
fwait
dec
out
mov
clc
shlb
and
outsl
popf
mov
mov
dec
xchg
mov
sbb
clc
lds
xor
out
in
outsl
pop
sbb
sub
imul
test
add
and
clc
dec
cmp
rclb
orl
add
inc
lods
mov
shll
cld
shll
adc
je
sub
adcb
mov
xor
adc
lret
push
cmp
test
imul
mov
xchg
scas
int3
jb
rcll
pop
mov
data16
outsl
ja
sbb
jbe,pt
popf
into
jg
push
hlt
mov
shr
outsb
sbb
dec
lods
inc
jg
dec
jle
cmpsb
jns
xchg
cmpsb
mov
jns
or
mov
and
imul
jg
in
sub
aad
pop
out
xchg
cmpl
adc
movsl
rclb
pop
mov
imul
add
aas
imul
jmp
inc
inc
mov
lcall
pop
push
push
sbb
rcrb
add
lret
jecxz
jo
das
lahf
or
adc
jae
pop
enter
sub
ja
mov
mov
arpl
int
sub
push
mov
mov
cltd
mov
xchg
or
fists
lahf
adc
cmp
orl
call
ficompl
insl
pop
add
xor
mov
dec
sti
mov
in
pusha
cmp
cwtl
mov
imul
or
outsl
cwtl
sahf
xchg
mov
sarb
loop
push
aam
add
xor
mov
sub
jno
pusha
jecxz
into
push
popf
mov
inc
sbb
jbe
jns
push
mov
pop
in
push
dec
loope
shlb
popf
dec
jb
test
daa
and
sahf
mov
fiaddl
jno
mov
mov
mov
sbb
jge
lods
es
inc
push
cwtl
add
and
arpl
sbb
js
imul
sahf
xor
jnp
and
ja
xchg
rcrb
jmp
loop
cwtl
sub
test
cwtl
xor
out
iret
ret
adc
idivl
cmp
pop
test
adc
sub
add
fisttpll
loopne
inc
adcl
orb
mov
imul
outsl
sbb
xlat
mov
dec
sbb
jbe
mov
jbe
jmp
out
nop
test
into
xchg
scas
repz
and
cwtl
sub
xor
stos
xor
fcomp
ret
lods
add
sbb
sub
rolb
ja
dec
xlat
push
xchg
loopne
fwait
in
xor
sbb
daa
mov
push
jle
sbb
cs
adc
cld
and
jg
addr16
xchg
decb
mov
adc
jne
loopne
inc
fisubl
pop
sub
mov
fucompp
loopne
and
fdivrs
xchg
dec
enter
call
stos
pop
pop
sbb
je
push
cmp
rorl
dec
jle
add
sbb
in
outsl
aas
dec
xor
xor
rolb
sub
sbb
roll
dec
pop
outsb
into
icebp
xchg
jmp
std
loope
cwtl
test
lds
fsubr
mov
add
jbe
jg
jae
jb
int3
or
fisttpll
sahf
insb
in
pop
push
push
rclb
adc
mov
or
mov
dec
cmp
inc
fsts
icebp
inc
push
push
dec
in
incl
xor
test
pop
out
mov
push
jno
mov
test
or
push
outsl
repz
leave
xchg
in
push
inc
std
or
and
fsubl
add
jp
loope
popa
push
pop
cmc
mov
movsl
cmpl
cli
in
sarl
mov
fwait
movsb
arpl
sub
mov
call
mov
imul
push
jns
pop
or
jge
push
sub
add
pop
xchg
cwtl
arpl
or
ds
adc
mov
push
mov
cmp
lahf
insb
lahf
pop
cmp
or
pop
cmpsb
add
dec
lock
sub
imul
push
or
ljmp
out
xor
gs
lcall
sub
inc
push
jne
xor
inc
or
int3
sbb
sbb
pop
jl
push
mov
pusha
adc
mov
or
xchg
xchg
dec
mov
sbb
jno
repz
dec
subl
adcl
push
push
pop
jecxz
sub
out
pop
dec
pop
add
inc
cmpsb
mov
dec
jne
cltd
pop
inc
movsb
je
stc
in
cwtl
pop
ljmp
pop
mov
sbb
rcll
das
mov
aaa
cmp
rorl
mov
mov
pusha
repnz
cmp
in
inc
popf
scas
pop
push
aas
add
lods
xchg
push
push
outsb
outsl
jecxz
add
ss
mov
mov
jmp
arpl
cli
push
clc
mov
cmp
jl
inc
addr16
insb
xchg
enter
or
xor
into
mov
pop
inc
cmp
inc
dec
daa
int
mov
adc
aaa
in
mov
fldt
lock
or
xchg
cmpsl
pushf
scas
fstp
adc
adc
cmp
loope
inc
dec
pop
pop
or
aaa
mov
pusha
dec
movsl
call
daa
std
push
xor
repz
add
jnp
mov
sub
lcall
movsl
or
enter
bound
add
ljmp
cmp
mov
sub
or
cmp
ret
movsb
mov
popw
scas
dec
jp
sub
xor
push
or
and
aaa
and
repnz
repnz
lahf
mov
dec
inc
stos
push
add
call
pop
mov
sub
cwtl
and
loope
sub
test
aad
outsl
and
pop
scas
imul
mov
sahf
xor
pusha
inc
sbb
out
pushf
sub
pop
push
pop
xor
jp
dec
xor
pop
jge
cmp
push
jno
nop
push
mov
pop
dec
test
mov
cmc
into
mov
stc
jnp
ja
jge
mov
scas
clc
out
dec
testb
and
shrl
inc
xchg
xor
jmp
xchg
adc
adc
xchg
dec
dec
movsl
add
rcll
test
push
sbb
add
push
daa
ds
std
dec
leave
fsubs
test
xchg
mov
roll
sti
inc
aad
or
gs
mov
movsb
inc
sbb
lods
cmp
pop
sahf
mov
popa
push
mov
cmp
insl
xchg
out
mov
loope
fldcw
jne
imul
sub
adc
imul
push
mov
sub
sbb
stc
loopne
sub
cmp
test
out
push
push
pop
fdivrl
mov
xchg
xchg
xor
sti
div
sub
repz
push
insb
popf
aaa
ror
mov
and
add
adc
into
movsb
pop
pop
in
and
or
inc
mov
jmp
xlat
mov
inc
sub
in
lcall
sub
sahf
mov
xchg
test
nop
mov
cmp
dec
xor
paddb
int3
push
mov
xchg
mov
leave
fs
repnz
sub
out
xchg
mov
inc
jmp
repnz
xor
add
test
sub
mov
dec
xchg
jbe
push
sbb
sti
pop
repnz
sub
js
lods
jge,pt
cmp
mov
lahf
bound
bound
popa
sub
jle
xor
scas
mov
sahf
negl
fisttps
mov
or
mov
cwtl
dec
fidivrl
jp
push
or
iret
xor
xor
std
dec
xchg
push
pusha
bound
pushf
mov
mov
shll
clc
ret
stc
cmp
adc
push
mov
arpl
add
lcall
stos
imul
or
stos
sub
mov
dec
jl
adc
andl
clc
insl
dec
inc
dec
cli
ret
imul
pop
and
out
mov
adc
push
dec
leave
xchg
icebp
add
arpl
adc
sbb
push
mov
jbe
mov
cmp
mov
mov
and
fistpll
pop
in
lret
xchg
add
mov
ret
inc
imul
in
xchg
test
and
addr16
stos
fwait
dec
jns
or
pop
les
fisubl
loope
or
test
dec
cmp
movsb
fistpll
jg
sbb
add
lahf
daa
xor
cwtl
cmp
enter
cmp
adc
fxch
sbb
jns
gs
sarb
add
xor
les
and
jle
dec
aam
or
add
bnd
or
sub
cmp
ja
or
add
cmc
sub
es
mov
push
push
sub
sub
push
adc
fadds
sbb
popfw
inc
cli
les
loopne
mov
es
add
xor
shll
repnz
xchg
call
lret
pop
or
push
popa
push
jbe
nop
sar
sbb
xor
mov
cmc
cmp
mov
mov
and
repz
sub
mov
add
fwait
das
and
repz
enter
jg
cmp
mov
lds
movsl
mov
negl
stos
adc
les
cmc
mov
insl
jmp
lahf
stos
mov
int3
stc
loopne
mov
fwait
test
sub
jmp
or
jbe
iret
cmp
out
mov
test
lds
xchg
dec
xchg
cmp
mov
fs
out
mov
dec
stos
push
or
mov
adc
mov
cld
add
data16
in
lea
and
addb
ja
pop
fsub
and
call
loope
fs
and
sub
test
frstor
adc
cmp
xchg
dec
jne
inc
mov
inc
adc
int
jb
xchg
mov
mov
push
hlt
jecxz
mov
and
dec
shll
stc
xchg
insl
popa
jbe
pop
lcall
repnz
mov
mov
lea
mov
out
inc
lea
mov
out
mov
sti
and
pop
aad
loopne
mov
bound
push
pop
adc
out
pop
add
pop
and
clc
out
or
ja
and
enter
xor
mov
dec
mov
out
cmp
mov
push
sub
into
fidivl
movsl
mov
mov
xchg
xor
mov
mov
jno
shr
or
aas
scas
jp
push
pop
lret
push
inc
subl
push
fidivrl
ja
push
leave
jle
jae
cld
andb
add
gs
out
jne
xor
test
adc
cmpsl
push
addr16
sub
popf
sar
jecxz
dec
lock
mov
leave
jne
mov
mov
shrb
popf
mov
dec
sahf
stos
outsl
popf
sarl
js
cld
int3
aad
out
sub
pop
prefetch
imul
dec
push
ror
popa
test
cmp
loope
sarl
sbb
enter
mov
mov
or
sub
pop
cmp
cltd
notl
imul
push
into
out
repnz
jno
rol
scas
mov
nop
popa
insb
sbb
test
cmp
sbb
mov
sti
mov
or
jle
cmp
xor
and
mov
push
psubusw
fnsave
mov
sbbl
loopne
add
dec
scas
fwait
jmp
out
int3
out
fnsave
push
popf
adc
stos
das
xor
push
sti
icebp
or
jl
jno
rcrl
mov
jg
cmp
xlat
mov
sbb
xchg
mov
cli
call
call
fwait
imul
ret
out
je
lock
lds
jb
shll
mov
lret
dec
mov
jmp
out
repz
mov
push
jp
out
mov
repz
or
jl
aaa
or
pop
and
adc
mov
push
and
loopne
mov
fadds
push
pushf
sbb
repnz
pop
push
pop
pushf
adc
xlat
cli
fimuls
sub
sbb
lock
adc
stc
aas
loopne
sti
mov
cltd
sub
xor
add
inc
adc
lcall
or
mov
inc
cmpsb
mov
mov
mov
cs
add
fcompl
mov
lds
arpl
mov
ljmp
and
mov
jb
ficoml
in
sbb
ljmp
mov
add
and
cmp
loop
fdivrp
xor
push
mov
ljmp
xor
movl
and
int3
fdivrl
push
je
inc
popf
and
push
mov
cmp
in
dec
arpl
jne
sub
cli
adc
sarl
mov
les
out
fisttps
pop
int3
dec
in
sub
cmc
test
cwtl
mov
nop
mov
rol
xor
scas
int
push
ds
xor
mov
fs
mov
jecxz
dec
rclb
out
in
lcall
andb
jmp
xor
sub
mov
and
lcall
pop
mov
insb
jae
xor
push
mov
fisubrs
enter
sbb
stos
jl
or
sub
pop
inc
push
negb
repz
push
mov
inc
loope
lods
lcall
lock
and
push
daa
das
push
xor
rclb
int
push
dec
lods
inc
mov
aad
jg
adc
orb
bound
repz
cmp
hlt
in
out
mov
mov
pusha
xor
js
jg
jnp
mov
adc
cld
sbb
shl
dec
push
lret
out
lahf
movsl
push
cmp
dec
xchg
pop
fildll
lahf
sti
pop
push
mulb
and
adc
mull
sbb
icebp
int
out
xor
test
aas
repz
and
cld
test
fstpt
adc
test
lods
lods
leave
repz
dec
sub
repnz
leave
xor
adc
lock
dec
pop
int
in
fsubr
call
inc
add
mov
fwait
inc
cmp
xchg
jne
jl
fs
bound
dec
mov
daa
pop
and
pop
stos
cmp
or
sub
push
insl
int
movsl
aad
cmp
js
aad
lahf
loopne
dec
cld
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
xchg
idivl
mov
nop
xchg
mov
inc
mov
jno
adc
gs
sbb
inc
mov
dec
cmp
adc
add
jecxz
cmp
aaa
gs
out
orb
sbb
sbb
ljmp
iret
mov
jae
and
int
adc
dec
outsl
push
clc
leave
and
test
lods
push
inc
dec
add
aam
cmp
dec
mov
sahf
lret
pop
loope
mov
setg
mov
leave
pushf
sbb
in
dec
test
aam
cs
and
cmp
fwait
jae
bound
push
in
sub
sub
xchg
or
jp
out
push
mov
mov
shll
sbb
jbe
outsb
adc
xchg
sbb
test
mov
fdivp
ds
jne
movsl
imulb
xor
xchg
into
cmc
push
mov
mov
inc
out
xor
cmpb
jle
inc
sbb
outsb
mov
jecxz
cmp
call
and
sub
jmp
lods
mov
mov
and
dec
xchg
fsubr
popa
mov
pop
xchg
mov
stos
sbb
push
ja
arpl
testl
xlat
out
fnstsw
subl
sbb
je
mov
mov
jl
aam
pop
or
es
pop
jns
ret
loopne
inc
mov
mov
xchg
sbb
xchg
insb
popf
lods
push
mov
lahf
sbb
js
adc
push
or
fisttpl
sbb
push
movsl
loope
fisttpll
dec
inc
pop
fidivs
mov
inc
fisubl
jg
sub
mov
gs
out
fwait
mov
mov
dec
testb
mov
ret
jb
xor
mov
in
fdivrs
cs
lret
sbb
or
int3
inc
lds
lea
outsl
nop
mov
push
in
inc
cmp
je
cmp
not
xor
faddl
inc
or
xor
mov
js
lea
mov
cmp
rolb
jb
cmp
enter
mov
jnp
clc
xchg
cmp
addr16
mov
or
add
xchg
leave
xor
jmp
fldcw
test
mov
add
aas
dec
int
in
out
mov
push
adc
xchg
out
std
mov
dec
pop
lret
cs
jp
scas
clc
mov
jecxz
push
lcall
xchg
data16
cmp
cmpsb
std
aam
cli
daa
jecxz
pushf
stos
nop
pop
test
mov
xlat
popf
cmpsb
cmp
jnp
lcall
xchg
push
xlat
mov
repz
or
jl
ret
aad
dec
mov
lret
movsl
fldl
lret
dec
add
stos
imul
cmp
xchg
xchg
test
mov
inc
and
mov
xor
aaa
mov
xor
mov
fimull
addl
jnp
in
cmc
push
mov
in
ror
out
in
sub
hlt
out
mov
aad
mov
fwait
mov
sbb
jge
mov
jp
xor
push
inc
bound
inc
sbb
hlt
add
imul
pop
mov
mov
rclb
jge
adc
or
and
shrl
cmp
pop
bound
aad
mov
dec
cli
test
cmp
xor
push
aaa
loop
mov
inc
es
shl
lods
movsb
xor
or
fcomp
xlat
adc
scas
add
sub
in
inc
pushf
shlb
mov
cltd
lahf
fbld
and
add
inc
out
jg
scas
psubsw
add
mov
fwait
jns
cmp
add
in
imul
es
push
jae
push
jle
inc
or
sub
inc
fldcw
xor
mov
adcb
aad
test
scas
imul
adc
les
sbb
push
sub
mov
ljmp
push
mov
lods
lock
pushf
push
pop
jmp
jns
cmp
les
pop
fdivrp
mov
scas
fsubs
jg
sbb
fstl
mov
data16
sbb
test
mov
push
add
fbstp
shrl
into
aad
or
lret
cs
in
xchg
mov
adc
push
dec
sbb
bound
aaa
dec
rcl
pop
sbb
ret
add
shlb
jmp
lcall
jg
divps
insl
xchg
xorb
push
call
scas
sbb
sar
loop
adc
xor
sbb
gs
test
mov
add
test
sub
nop
lods
fs
movsb
push
ds
out
or
and
vcvtpd2dqx
mov
jbe
frstor
addr16
je
push
jbe
arpl
ljmp
pop
mov
outsl
lcall
mov
and
sub
mov
add
andl
push
mov
loopne
mov
add
loope
decb
into
xchg
std
scas
ljmp
xor
inc
dec
xlat
das
xchg
or
pop
pushf
sub
icebp
movsb
sub
dec
test
mov
scas
das
fdivrl
mov
sbb
rcrl
inc
nop
cmp
sbbl
sbb
mov
push
fimull
sub
xchg
scas
cwtl
sbb
jb
mov
inc
jo
in
or
sbb
mov
fadds
add
repnz
subl
sub
js
pop
test
aam
cs
scas
int3
out
xor
jp
int3
push
adc
sub
not
inc
pop
mov
lret
fbld
fdivr
repnz
or
mov
mov
aaa
das
fldl
cmc
jmp
push
mov
scas
aas
ficomps
dec
pop
mov
out
lods
pop
andb
insl
adc
pushf
test
repnz
repnz
lds
popa
les
mov
in
sahf
aaa
aam
jnp
in
lahf
ret
bound
mov
push
push
repnz
jne
data16
mov
pop
ss
iret
insb
add
ret
lret
in
lods
fisubrl
cmp
repnz
mov
adc
jl
insb
mov
dec
movsl
cld
repnz
rolb
int3
ds
insb
or
lods
add
and
stos
mov
sbb
mov
sub
xchg
fldenv
out
lcall
repz
mov
xchg
jns
mov
xor
push
mov
push
imul
adc
xchg
sbb
cltd
mov
insl
push
mov
aam
psrlq
and
add
pop
add
into
mov
fmull
jg
mov
mov
push
fsub
cltd
sarb
dec
cmp
add
je
and
icebp
adc
mov
sub
add
pusha
lock
outsl
int3
lods
outsl
or
mov
jb
adc
inc
xchg
add
dec
lahf
sbb
test
dec
dec
insb
fsub
push
dec
sti
and
cmp
mov
ljmp
jae
mov
mov
xchg
lret
or
movsl
mov
jg
sub
or
out
lods
or
mov
sahf
mulb
das
add
fnop
ds
mov
jno
loopne
jg
hlt
leave
or
cmp
cltd
mov
mov
and
or
int3
fs
pop
divb
xor
cmc
fidivs
fsubl
and
cmc
divl
adc
lds
and
stos
mov
leave
lods
aam
shlb
push
mov
or
movsl
andb
inc
stc
out
out
cli
idivl
rorl
push
jmp
repnz
cmp
inc
lcall
mov
int3
in
adc
jne
arpl
jae
int3
inc
lahf
inc
stos
rcr
movsb
cmp
dec
inc
mov
mov
gs
sarb
and
rol
dec
push
shll
cmp
cmc
movsl
aam
dec
sbb
fadds
sti
jbe
dec
pop
lcall
ja
std
fdivs
and
mov
adc
fimull
faddl
das
xor
or
add
pop
scas
bound
stos
push
mov
mov
ficoml
jp
cmp
add
fnop
jl
or
ss
push
popf
pop
std
cmp
aas
xchg
stc
fisubl
jmp
lock
fadd
pop
sbb
adc
fstpl
roll
mov
add
lds
addb
fcmovnb
xor
scas
add
outsb
mul
dec
mov
mov
or
sbb
clc
nop
push
imul
push
pop
dec
jmp
clc
push
mov
pop
dec
pushf
ret
jp
or
push
jo
inc
out
int
fs
lret
mulb
sarb
das
jg
push
mov
adc
or
lea
sbb
mov
jp
andb
jbe
push
out
clc
in
fwait
mov
shlb
imul
sub
ret
xchg
mov
inc
xlat
imull
push
sub
push
inc
inc
dec
pop
push
aaa
arpl
aam
jp
sub
jle
lret
or
pop
adc
xchg
stos
movsl
mov
cmpsl
add
mov
call
push
mov
lret
fstpt
out
imul
movsb
push
xchg
imul
rcll
out
sbb
dec
hlt
jbe
mov
add
jle
jo
pop
stc
bound
nop
scas
sti
lods
fdivr
and
cmpsb
pop
cltd
mov
xchg
les
sub
xchg
lret
xor
out
daa
inc
cmc
cmc
scas
shr
jae
mov
sbb
in
ljmp
mov
xchg
scas
mov
mov
xchg
xchg
fdivrl
out
sub
into
test
mov
mov
add
mov
pop
nop
cmpsl
enter
mov
inc
mov
dec
push
mov
es
scas
xchg
lahf
outsb
lcall
sub
je
jg
out
pop
xor
add
jb
or
fwait
mov
xchg
and
jmp
cmpsb
mov
cmp
jnp
fsubrp
xor
jo
mov
inc
xchg
lret
rorl
xor
sbb
inc
xchg
jo
jl
lret
dec
mov
lods
push
les
and
jno
shlb
jo
sahf
and
xor
push
shll
enter
mov
es
hlt
mov
repnz
or
mov
fdivrl
mov
and
movsl
cwtl
addr16
fsubl
sub
mov
xor
inc
jp
cmp
in
sub
push
loop
aaa
outsb
push
xor
inc
adc
mov
pop
pop
fmul
mov
jmp
in
je
xor
or
lock
mov
sarb
push
add
push
cs
loop
xlat
cltd
dec
sahf
inc
cmp
mov
daa
popa
ret
addr16
jmp
jmp
lret
pop
scas
push
push
cli
mov
insl
lods
xchg
in
push
inc
xchg
int3
push
fnstsw
shlb
add
mov
aad
adc
out
push
jne
stos
cmp
sar
ret
push
mov
inc
aam
call
fildll
repnz
scas
sub
insb
push
jae
js
add
addr16
popa
lea
cmc
inc
cmp
pushf
arpl
pop
ret
fs
xchg
out
aad
add
adc
data16
leave
xor
adc
cwtl
jg
xor
lds
sbb
sub
push
psllq
cmpsl
ss
mov
subb
stc
loopne
jno
jnp
or
mov
pop
or
sbb
pushf
jno
push
inc
sub
mov
sarl
mov
icebp
sub
lahf
rorb
mov
inc
push
xchg
ss
popf
push
repnz
mov
sbb
outsl
adc
lods
fstpt
repnz
xchg
inc
iret
out
loop
call
subl
lahf
out
shll
aas
dec
lods
pop
mov
jnp
sti
add
ljmp
xor
jns
xor
xor
ss
je
movsl
jge
pop
lods
jl
test
movsb
mov
cli
cli
push
ljmp
rclb
das
addr16
hlt
dec
pop
sub
mov
data16
push
xchg
call
outsl
cli
jae
xor
jl
ret
enter
pop
jnp
repz
dec
jbe
fcmovbe
fimuls
jg
pop
xchg
push
ret
stos
xchg
cwtl
mov
aam
ja
sahf
inc
jbe
jae
jns
cmp
ret
cmp
lods
lret
cmp
xor
mov
gs
cld
inc
mov
sub
xlat
mov
dec
push
hlt
fisttpl
leave
pop
push
out
pop
shlb
dec
cmp
imul
xor
and
cmp
jmp
sub
jns
mov
pop
mov
lahf
sub
adcb
mov
rorl
in
adc
sub
ja
leave
bound
sbb
mov
jecxz
aaa
push
fwait
mov
dec
xor
pop
fs
sbb
xor
out
and
sahf
lea
cmp
mov
inc
jle
insl
lret
adc
lret
mulb
loopne
es
mov
fisubrs
jmp
cmp
push
sbb
mov
dec
inc
pop
jle,pn
push
or
push
mov
fdivp
mov
push
xlat
fwait
adc
fbld
and
aas
adc
jg
int3
dec
push
pop
sbb
xchg
inc
les
cmp
ret
stos
mov
out
rcrl
sub
cmp
adc
mov
pop
popa
out
std
call
pop
mov
js
add
fists
mov
aad
popf
es
push
add
or
push
mov
jg
mov
push
sbb
inc
and
lahf
push
xchg
jg
cmp
lock
rcl
popa
and
int3
les
xor
scas
cmp
nop
pop
jae
loopne
lea
fwait
out
add
fsubr
dec
das
icebp
xchg
sahf
jecxz
fisubl
cli
jp
mov
sub
fsubrl
adc
aad
int3
or
xlat
mov
jp
mov
cmp
addr16
roll
lret
xchg
ret
and
xor
jg
pop
inc
ja
xor
xchg
into
inc
les
mov
outsl
sbb
addr16
in
loope
inc
mov
js
pusha
ret
outsl
xchg
adc
pop
add
push
pusha
ficoms
mov
mov
add
rorb
out
and
shr
les
add
jp
movsb
mov
mov
mov
cmp
test
int
push
jnp
cltd
scas
dec
jg
test
inc
je
scas
lock
or
jge
mov
test
xlat
jnp
fucomip
ss
mov
inc
ja
hlt
jae
lds
mov
sbb
pop
mov
jge
test
push
mov
stos
clc
adc
fwait
adc
and
loope
leave
dec
test
add
adc
into
mov
aaa
imul
cmp
pop
jns
fcmovnb
andb
lcall
divl
or
and
lea
or
push
inc
fistpll
testl
les
aam
std
add
jle
and
lods
sub
ljmp
mov
pop
adc
dec
xchg
inc
mov
mov
or
xor
inc
imul
mov
cmp
inc
push
aaa
jbe
cmpb
js
mov
mov
mov
mov
xor
clc
xor
pop
sarb
inc
xor
orl
dec
repnz
adc
pop
roll
repnz
jb
mov
orb
dec
adc
jne
js
mov
xor
sub
ljmp
mov
testb
in
sti
xorl
ljmp
loopne
movsl
push
inc
leave
adc
in
jnp
insl
inc
test
fs
lods
shlb
mov
stos
and
test
leave
sbb
sub
leave
loop
test
xor
pop
addl
jmp
and
pusha
pop
dec
loop
imul
hlt
adc
pop
cmp
mov
xchg
sub
or
add
xchg
shrl
rsqrtps
cmp
movsb
push
dec
sub
push
lcall
mov
data16
loope
aas
jo
insl
pop
call
mov
aaa
sarb
inc
fisubs
js
int3
inc
adc
imul
mov
mov
xor
cwtl
shl
mov
out
in
cmpsb
aas
fnstcw
in
or
add
out
movsb
pop
push
inc
xor
cmp
xchg
push
pop
arpl
mov
jne
push
das
xchg
sub
incl
mov
dec
sti
repnz
aas
stos
adc
mov
stos
mov
outsw
mov
and
and
mov
sar
mov
fildll
push
int
add
push
fwait
dec
dec
call
jge
jo
xorb
fisubs
lods
out
sbb
pop
pop
push
mov
sbb
push
dec
lods
subb
add
and
ljmp
xor
push
leave
pushf
jmp
out
sbb
xor
jne
cmc
loope
cld
fiaddl
push
inc
jae
std
fstps
pusha
mov
aam
stos
sar
loop
add
inc
sbb
rorl
std
xchg
lock
or
jnp
jg
jns
mov
xchg
cs
aaa
adc
pop
or
cli
das
cmpsl
imul
movsb
or
roll
fstpl
test
xchg
gs
xchg
push
popf
popa
sbb
pop
lock
popa
repz
sbb
rol
imul
pop
xor
dec
insb
jg
pop
mov
cmc
lea
pop
scas
out
and
hlt
aaa
femms
fwait
movsl
jb
push
jge
sbb
mov
pop
imul
insl
sbb
mov
mov
subb
add
out
outsl
mov
sub
and
fidivrl
adc
mov
push
scas
in
xchg
add
xchg
dec
in
dec
sar
mov
mov
push
rcr
push
inc
inc
dec
js
sub
cmp
popa
loope
lret
arpl
arpl
jecxz
sarl
lcall
mov
xor
and
ret
into
js
adc
mov
inc
out
rclb
lret
negb
push
jne
dec
adc
es
push
adc
aam
inc
ljmp
inc
out
pop
movsb
or
cmc
adc
cmp
fdivrs
cs
aam
xchg
xchg
dec
ret
or
rorl
inc
pop
clc
test
inc
fadds
pop
cmp
dec
mov
mov
cmp
lahf
pop
add
test
and
xchg
sbb
js
in
mov
adc
es
jp
sbb
cld
daa
pop
pop
lahf
push
insl
clc
push
pop
adc
test
daa
iret
lret
jp
scas
stos
inc
inc
pop
push
jmp
jne
xorb
push
mov
aad
mov
and
fldenv
js
inc
push
loopne
sbb
push
call
mov
mov
add
sbb
sub
xor
sbb
aam
or
jmp
gs
inc
push
outsb
ror
scas
imul
rcll
push
jns
adc
ja
mov
fstp
popf
lret
arpl
outsb
cmc
insl
push
xor
and
adc
push
sahf
imull
push
mov
push
insl
test
icebp
bound
das
call
inc
or
fcoms
cmp
mov
das
cli
in
xchg
cmp
adc
mov
or
sbb
roll
testb
lret
and
scas
scas
aad
push
jecxz
loopne
rclb
inc
and
inc
repz
rolb
idivb
sub
dec
xchg
dec
lret
mov
push
xor
dec
xchg
daa
js
mov
jns
fsubp
sbb
movaps
sbb
imulb
rcrl
xor
leave
sbb
fdivrl
stos
andl
leave
sub
fstpt
test
out
out
loope
sub
pop
pushl
sbb
cs
xchg
mov
cmp
cmp
cmp
or
mov
dec
sti
sub
test
cmp
mov
divb
in
repz
mov
ds
sub
push
pushf
cmp
sub
or
ret
subl
xchg
lret
xor
and
xor
cmp
lock
mov
bnd
push
jl
push
xor
lea
es
jnp
mov
and
je
inc
pop
jb
inc
and
jle
mov
mov
and
repnz
mov
add
std
push
inc
out
mov
movsl
pop
enter
clc
push
and
and
sbb
push
mov
jno
repz
mov
jle
adc
mov
and
sub
fisubrl
repnz
pop
push
lahf
jne
xchg
sbb
mov
movsb
push
call
xor
lret
test
ja
outsl
mov
aad
loop
mov
jmp
and
jle
ret
loope
data16
int
xor
and
scas
dec
fildll
lcall
dec
jno
push
rep
push
jl
sar
push
cmp
sbb
push
mov
jnp
shrb
cmp
fucomi
and
cmp
sbb
jl
lods
jmp
sarl
stos
inc
mov
sti
mov
jae
adc
popa
outsb
shl
mov
dec
and
cmpsb
jno
and
int3
cld
out
xor
add
test
out
jecxz
lahf
lods
into
xor
ss
mov
inc
or
cmc
lcall
pop
dec
pop
int
pop
loopne
jecxz
gs
incl
xor
xchg
jo
cmp
or
arpl
add
test
xor
adc
sbb
iret
dec
sub
push
popa
or
stos
xchg
aaa
xchg
xchg
adc
pop
adc
lahf
push
add
pop
ret
insl
cmpsl
push
mov
inc
fidivl
lcall
fwait
negl
jae
sub
cld
dec
loopne
fsubrl
repnz
mov
iret
adc
out
push
jae
mov
inc
push
std
inc
or
negl
icebp
dec
add
in
dec
sbb
xor
xor
push
jno
pop
xchg
lods
cmp
jne
cld
hlt
push
cmp
dec
fiadds
or
and
or
shll
adc
and
push
mov
aam
add
or
js
pop
mov
pop
iret
mov
jg
fs
mov
out
push
and
cmpsl
pop
fdivrl
xchg
jp
sub
inc
hlt
out
fcomip
je
mov
pop
fdivs
popf
adc
mov
inc
sbb
xchg
pop
mov
movsb
push
inc
cmc
push
lods
pop
pop
cmp
fiaddl
lret
jnp
clc
fwait
lods
pop
test
enter
mov
push
fdivrs
es
sub
aaa
jecxz
push
in
cmp
sbb
test
cmp
push
add
xchg
loopne
ljmp
shrb
insl
outsl
je
push
aas
inc
push
mov
cmp
repz
xchg
aad
cmp
inc
and
stc
push
mov
aas
jnp
cltd
int3
jmp
jge
push
out
mov
mov
push
xchg
les
sub
lcall
iret
mov
cwtl
ljmp
push
mov
sbb
repnz
or
test
pop
xor
cmp
add
add
jne
enter
bound
adc
jbe
push
mov
out
mul
mov
pop
mov
xchg
dec
pusha
pop
aad
sbb
jge
xchg
xlat
cltd
pop
cltd
jo
dec
adc
lea
les
ds
xchg
cwtl
xor
int3
pop
push
leave
pop
es
loopne
out
ret
mov
and
mov
and
ror
xor
cmp
shrb
adc
push
adc
lea
push
sub
jno
enter
inc
popa
mov
mov
notl
mov
insl
or
test
pop
aaa
mov
jns
cmpsb
mov
std
cmp
js
pop
push
scas
fldenv
pop
enter
in
xchg
adc
daa
idivb
push
inc
outsl
aaa
inc
jp
or
mov
stos
cmp
subb
out
sarb
sbb
inc
imul
mov
mov
stos
xor
out
inc
shlb
dec
push
and
adc
sub
or
insl
sub
xchg
pop
and
xchg
inc
mov
xchg
xchg
xlat
lcall
leave
dec
iret
in
insb
gs
fists
push
sbb
repnz
sub
negb
idiv
fdivs
cmpsl
jp
imul
mov
stos
pop
or
cmp
add
inc
fnstenv
subb
aad
fisubl
mov
lgs
insb
and
dec
cmp
xchg
shl
fsts
sub
stos
into
mov
mov
stos
test
loopne
inc
push
fidivl
dec
loop
inc
mov
mov
decl
mov
insb
bound
jo
or
mov
jno
or
xlat
out
jae
pop
and
jmpw
in
pop
adc
sub
jne
xchg
out
test
or
fwait
mov
outsl
inc
orb
stc
mov
ds
xchg
mov
test
inc
data16
es
or
dec
or
in
jb
xor
push
mov
adc
lea
aas
jb
sti
cmp
xor
les
rsqrtps
outsb
cmpsb
test
mov
test
scas
jecxz
cmpsl
pushf
insb
fcmovnbe
shrb
aaa
sar
cmp
inc
in
add
divb
push
cld
dec
sub
arpl
pop
pop
sbb
frstor
mov
adc
sbb
out
push
add
add
mov
lock
jno
push
jne
sub
push
cmp
mov
mov
xchg
jmp
das
dec
pop
inc
and
push
fs
lods
and
rcr
xchg
lret
ds
out
popa
adc
sarb
movsb
push
jecxz
arpl
jp
cmpsb
movsb
lcall
sub
arpl
dec
pop
leave
andb
dec
sub
add
sbb
adc
pop
dec
cmp
rcll
clc
jns
js
xor
jae
stos
dec
mov
mov
adc
mov
out
cli
or
adc
sbb
cli
repnz
and
inc
test
jle
xchg
jne
adc
mov
incl
mov
pop
cmc
inc
icebp
push
scas
in
fst
arpl
mov
fwait
add
push
mov
sub
jne
mov
ret
popa
hlt
xor
jno
int
orb
fdivrs
jmp
and
jp
xchg
pop
fisubs
mov
ss
inc
rcrl
test
push
pop
stc
stc
in
lods
xchg
cmpsb
pop
loopne
fistps
mov
cmp
or
pop
lret
aas
and
mov
jbe
xchg
push
xor
ss
mov
outsl
inc
mov
into
loope
mov
jle
xchg
fs
cmp
add
lcall
test
xor
bound
push
push
fistl
fwait
mov
cmp
jl
out
adc
test
mov
dec
cmpsb
inc
aas
shlb
lea
or
inc
push
xchg
dec
pop
xor
rcrl
pop
in
jl
mov
mov
or
xor
test
leave
add
in
mov
dec
mov
xor
jns
xchg
out
negl
ret
insb
in
movsb
movsb
pop
imull
jo
stos
aaa
pop
or
jae
into
jmp
mov
dec
loopne
lcall
fldl2e
sbb
dec
adc
dec
aaa
cli
mov
add
icebp
mov
xor
jne
imul
inc
mov
inc
stc
mov
sahf
mov
dec
jecxz
jge
outsb
inc
cmp
fimull
adc
out
sub
sbb
xchg
mov
add
out
dec
xchg
aaa
stc
sub
mov
jmp
fisubl
lods
xor
cmp
lods
add
and
jbe
dec
adc
les
test
sahf
or
rcl
or
or
fbstp
jmp
pop
push
or
inc
out
fwait
cmpsb
enter
in
outsb
loopne
xchg
cli
sar
aam
sub
and
xchg
and
ret
jbe
mov
add
fwait
mov
fists
push
mov
pop
rcll
arpl
outsb
pop
imul
popf
leave
push
lret
movsl
push
mov
ds
mov
xchg
push
dec
iret
out
mov
out
sbb
movsl
vmwrite
dec
xchg
mov
xchg
or
stos
xor
lods
rcl
loop
frstor
or
shl
movsl
dec
enter
add
in
mov
pushf
pop
aad
scas
fs
pushf
cwtl
outsl
jnp
mov
cmp
mov
sub
adc
and
mov
xor
insl
fsubrl
mov
or
pop
jo
mov
fmul
test
mov
or
mov
fwait
adc
add
ljmp
je
cmp
mov
shll
jns
and
mov
pop
cmp
jns
cmp
je
aas
push
cmp
lret
push
aad
jns
sbb
aaa
or
icebp
cld
lret
add
cmp
imul
dec
jl
cltd
je
aam
movsb
xchg
insb
lcall
sub
mov
mov
jl
jl
dec
cltd
or
cmp
adc
test
out
xchg
movhps
mov
shlb
mov
push
fdivl
sbb
dec
outsl
push
jg
mov
fwait
xchg
mov
mov
movsb
and
out
mov
mov
jmp
loope
lea
out
in
add
inc
mov
push
mov
call
fsubrs
jae
inc
sub
dec
pop
push
lret
sbb
into
jno
mov
xor
sub
mov
add
jg
and
inc
movb
push
testb
cmpsl
mov
imulb
push
pop
mov
push
dec
xchg
push
jns
xchg
pop
cmp
fildl
mov
sub
push
jnp
mov
enter
mov
das
sahf
imul
cmpl
adcl
fwait
dec
sub
in
into
pop
addr16
pushf
stos
pop
sbb
mov
dec
daa
mov
xchg
push
cwtl
lods
ljmp
out
mov
sahf
jmp
ret
ret
push
cmp
cs
mov
stos
scas
jle
int
scas
mov
hlt
push
aam
mov
xadd
push
pop
xlat
mov
sub
rorl
dec
dec
ret
lahf
fidivl
test
adc
int
jp
fmuls
das
push
lock
aam
inc
sbbl
mov
testl
mov
and
incl
gs
pusha
sbb
mov
jno
fnstsw
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
nop
jno
insl
add
jp
pop
jp
daa
movsb
sbbl
lods
add
and
jmp
iret
lds
out
adc
push
mov
mov
jns
jne
mov
jo
in
xor
ss
movsb
adc
in
sbb
pusha
and
movsl
cs
testl
adc
imul
imul
sub
push
es
pop
std
sub
mov
dec
jmp
pop
cmc
push
int3
sbbl
call
pop
pop
jg
leave
lea
add
lret
int3
add
sbb
js
mov
adc
ja
xchg
push
les
lret
mov
xor
sub
pop
sub
stos
jb
push
dec
inc
inc
cmpsb
in
mov
push
clc
xor
in
mov
pop
clc
fs
insl
aas
mov
cs
cltd
hlt
xor
mov
inc
fdivrl
loope
scas
mov
in
xchg
dec
xchg
dec
ljmp
xchg
dec
mov
aad
int3
xchg
repz
subb
or
addr16
xchg
mov
sbb
mov
jne
stc
push
movsl
int3
xchg
add
push
and
or
inc
inc
push
add
fists
sti
shlb
gs
and
jbe
call
test
mov
sbb
jge
pop
adc
les
pop
mov
lods
xchg
out
mov
test
int
xchg
sbb
sub
popa
lods
sub
xorb
call
aas
nop
fiaddl
call
negl
rorb
dec
xchg
add
lcall
loopne
sbb
mov
push
pop
push
or
cmp
mov
js
cwtl
pop
lcall
cmp
insl
xchg
outsb
insl
fbld
movsb
xchg
lret
pop
mov
popf
mov
sbb
mov
sbb
into
fldl
jecxz
push
push
xchg
mov
nop
imul
push
std
cmp
clc
or
xor
mov
jne
scas
inc
adc
popa
movsl
sub
jne
lock
and
jae
into
or
lea
rorl
fucomi
mov
lcall
dec
out
pusha
and
jns
xor
jnp
jl
add
lcall
in
pop
sbb
and
stos
cwtl
sbb
adc
or
stc
rol
sub
jp
pop
lret
dec
fbld
rcrl
dec
xchg
rolb
inc
sub
divb
xchg
mov
push
out
and
jp
loope
sub
idivl
repz
loopne
sbb
jnp
mov
jg
subb
adcb
jp
push
sahf
push
shlb
sbb
dec
repz
test
lock
mov
or
sbb
sub
pop
pop
pop
fadd
or
cwtl
xchg
dec
or
add
aam
add
ss
movsb
test
std
sub
push
mov
je
imul
cs
xchg
stc
and
notb
fisttpll
or
mov
or
xchg
aas
cmpsl
int
mov
shrb
mov
push
or
jle
scas
mov
aam
jne
loopne
mov
loop
loop
fistpll
out
scas
in
imul
cld
jnp
mov
xor
sub
aam
rcrl
jnp
leave
lock
jb
inc
xor
ficompl
call
push
popa
sbb
pop
xchg
fxam
cltd
jmp
lods
mov
vxorpd
aaa
sub
push
aas
es
sub
iret
insb
addr16
push
push
faddl
xchg
fcmovb
pop
lret
jns
jo
stos
mov
adc
xor
mov
pop
xchg
mov
pop
cmp
and
data16
add
movsb
aaa
inc
jecxz
sbb
pop
jne
cmp
add
fisubrs
test
cmc
jno
insl
fsubs
int
fsubr
dec
stc
dec
xor
gs
lcall
das
ja
and
push
out
out
call
mov
inc
dec
into
ss
cmp
in
fidivl
lods
adcl
mov
sbb
push
and
inc
fcomps
push
cmc
imul
orb
jg
mov
or
cltd
lock
mov
std
pop
mov
adc
into
jl
inc
fsts
mov
pop
call
mov
jo
pop
roll
popa
stos
pop
testl
xchg
into
scas
ljmp
inc
out
fs
pop
or
mov
xlat
cmpb
bound
or
and
sahf
jno
dec
stos
cltd
mov
and
adc
cmp
xchg
enter
cvtpi2ps
mov
loop
into
movsb
lcall
into
jp
dec
xchg
and
call
pop
sbb
pop
pop
xor
adc
cli
xchg
ror
push
pop
mov
loope
inc
inc
xor
jo
jbe
push
push
int
cmpsl
lods
xchg
mov
push
push
xor
jne
test
imul
xchg
shl
pop
fiadds
std
or
movsb
cmp
in
inc
cmp
imul
inc
dec
jecxz
mov
imul
push
lods
insl
inc
push
sbb
xchg
lret
xchg
sub
into
xor
and
xchg
les
call
mov
andb
cltd
aam
sbb
add
or
daa
jmp
cmp
dec
lret
xchg
jge,pt
push
fists
sti
clc
leave
popf
mov
sub
dec
adc
and
push
fiadds
into
dec
dec
nop
fwait
push
stos
xor
jne
aaa
bound
dec
pop
out
cmpsl
cmp
cld
leave
inc
mov
xchg
mov
ljmp
mov
mov
push
repnz
jmp
sub
mov
mov
lds
mov
sub
pushf
les
hlt
in
mov
movsb
lods
in
mov
scas
test
mov
jmp
aad
incb
xchg
lret
xor
dec
mull
mov
push
add
and
and
repnz
and
nop
sbb
mov
mov
or
sarl
incb
repnz
mov
ljmp
inc
xchg
int3
xor
jno
mov
mov
adcb
adc
lock
pop
jecxz
mov
sub
lret
mov
outsb
push
fs
imul
push
int3
and
repz
in
dec
int3
fimull
idiv
cli
inc
shl
jl
popf
test
js
adcb
ja
push
mov
inc
icebp
xchg
inc
mov
pop
mov
cltd
int
mov
xor
mov
imul
dec
ljmp
ja
and
mov
fists
cld
mov
int3
inc
pop
in
cmc
push
mov
test
stos
mov
into
cwtl
mov
push
insb
into
xchg
test
sahf
jge
ja
mov
stos
rolb
push
inc
lea
xchg
and
in
fiaddl
inc
insb
mov
nop
and
xchg
inc
test
daa
adc
and
dec
nop
stos
sub
mov
fldenv
mov
aaa
data16
popf
pop
jle
and
repz
push
pop
dec
es
lret
xchg
adc
mov
mov
fcoms
cmp
ret
lret
xor
mov
fistpl
xchg
test
xchg
aad
jecxz
lods
lock
aas
fnstsw
jb
pop
repz
in
mull
cltd
pop
xor
cli
mov
lret
jae
cltd
adc
xchg
or
jns
imul
jnp
mov
and
cmp
add
dec
cwtl
test
out
adc
xchg
mov
cmp
lods
mov
cmp
fsubp
adc
ret
dec
dec
push
in
jno
mov
pop
mov
sub
test
xchg
dec
js
jle
popa
jecxz
and
inc
rcll
cmp
xchg
ret
and
xchg
push
ljmp
insb
sub
loop
xchg
pop
rol
lahf
fsubrl
add
test
sti
test
or
cmc
push
test
popa
and
sub
mov
stos
mov
mov
inc
jnp
add
or
fnstenv
fiadds
movsb
scas
cmc
push
enter
sti
add
ss
daa
movsb
pushf
mov
int3
cwtl
lods
dec
sub
mov
jp
mov
mov
xchg
or
push
xchg
ds
mov
dec
loop
shll
mov
out
clc
inc
and
xor
pop
pop
inc
ljmp
mov
inc
push
daa
mov
cmp
mov
fcomps
jo
or
out
orb
inc
imul
je
inc
out
daa
xor
adc
dec
stos
lahf
xchg
add
dec
sub
test
mov
xchg
shlb
cmp
jne
dec
add
je
or
adc
sub
or
jno
push
mov
pop
call
cmpsl
inc
mov
xchg
and
scas
loop
loope
test
mov
lret
dec
aas
ljmp
add
ss
fisubrl
aaa
jg
inc
into
mov
jle
iret
mov
das
lahf
pusha
mov
adc
sti
gs
inc
xchg
xchg
lret
xor
aas
adc
jnp,pn
daa
cmp
mov
xchg
iret
xor
fsubl
sub
xlat
setne
negl
addl
fdivr
dec
or
xor
lret
push
in
adc
aas
mov
xchg
in
inc
lock
adc
hlt
push
xchg
mov
std
or
test
dec
stos
jge
nop
into
pop
mov
fcompl
loopne
jge
push
xchg
in
dec
push
and
arpl
mov
jmp
jns
fsts
jmp
adc
sub
xor
mov
loope
lcall
lret
inc
and
popa
mov
add
adc
fwait
pusha
adc
inc
ds
xchg
movsl
adc
xchg
rcl
pop
push
xchg
add
cwtl
insl
sub
and
ret
add
orl
or
imul
stos
mov
dec
not
enter
adcl
push
push
cltd
jb
xor
js
adc
xor
and
and
sbb
sub
lea
xlat
stc
push
cwtl
sub
lods
pop
jb
and
mov
mov
shl
gs
push
mov
sbb
xchg
mov
lds
jp
push
cmp
dec
jns
scas
adc
int3
pop
inc
xor
mov
shlb
shld
pcmpgtb
fsubrs
xchg
push
dec
test
idivb
push
mov
repz
dec
shl
and
jns
mov
lock
add
stc
cs
mov
lea
fldenv
sarb
or
jl
clc
fcmovu
into
loope
inc
or
xchg
leave
adc
mov
in
mov
sub
repz
mov
ja
dec
mov
pop
pop
inc
adc
and
scas
out
dec
arpl
notb
pop
pop
std
xor
scas
std
andb
or
xchg
pop
outsl
jno
inc
sbb
lcall
cs
dec
ret
loop
loope
pop
lret
stc
pcmpeqw
inc
imull
xchg
xor
mov
adc
icebp
jns
bnd
sub
repnz
les
popa
lds
and
xchg
push
cltd
loope
add
jle
sbb
in
scas
jo
outsl
xchg
push
ud1
xor
mov
lahf
inc
fisttps
aam
pop
xlat
fimull
mov
xorl
lock
sub
stc
testb
sbb
outsb
cmp
out
and
pop
rcr
shlb
ljmp
in
cwtl
jb
pop
jae
pop
fdivl
jl
inc
js
jbe
imul
loop
mov
roll
test
outsb
dec
in
sbb
loopne
mov
jno
je
push
inc
into
dec
pop
and
add
loopne
fstpl
loopne
iret
cmpl
lea
jns
and
mov
jecxz
push
xor
pusha
sub
outsb
mov
xor
test
pop
xor
pop
xor
mov
arpl
push
sbb
test
mov
add
sub
pop
hlt
dec
es
mov
out
stos
push
jg
mov
out
xor
out
scas
sub
mov
inc
xor
dec
inc
mov
dec
cld
es
dec
xlat
int
push
fwait
inc
cmp
add
mov
sbbl
aas
fisubl
pop
mov
out
cmp
mov
popf
dec
icebp
nop
sahf
inc
mov
xchg
daa
insl
fidivrs
out
adc
sahf
testl
xchg
sbbl
mov
mov
xchg
gs
test
std
jo
mov
sub
dec
lds
cld
sahf
int3
xchg
ljmp
pop
mov
pop
fisubs
stos
pop
push
mov
movsl
test
pop
imull
add
jae
adc
dec
out
xchg
mov
xchg
imul
jb
lea
sbb
hlt
inc
mov
ficompl
and
fistpll
data16
repnz
cld
jns
test
xor
mov
in
xchg
push
jecxz
pop
inc
xchg
ficoml
testl
and
lahf
mov
adc
pop
ss
pop
ljmp
ljmp
xor
add
sub
xor
mov
or
push
gs
repz
and
adc
lcall
dec
rcrl
das
cmpsl
insl
sbb
mov
aaa
xchg
test
mov
push
jno
fwait
xchg
loope
xlat
stos
aad
xchg
in
sub
cmp
jns
in
test
insl
pop
or
mov
push
mov
ljmp
push
xchg
sarb
shlb
mov
bound
cmp
jmp
subl
dec
adc
xchg
pop
in
popa
in
mov
xchg
jo
lock
cwtl
add
insb
lea
inc
icebp
shlb
iret
dec
imul
xchg
xchg
rcrb
cmp
clc
pushf
cwtl
add
fwait
lahf
ss
cmp
push
lahf
pusha
enter
ror
repnz
iret
cmpsb
aaa
pop
arpl
xor
outsb
xchg
test
jbe
mov
ljmp
mov
rclb
jg
mov
mov
cltd
add
sahf
and
lods
ret
and
cwtl
adcl
shl
mov
addr16
jno
adc
sub
ret
or
insl
gs
xor
or
ret
pop
gs
mov
test
pop
aad
or
cmc
ja
xor
ljmp
loopne
ficompl
mov
or
add
inc
sub
jle
jmp
loopne
loop
out
cmpsl
jge
lods
out
sbb
sarl
push
call
pop
pop
adc
cmc
gs
pusha
pop
mov
adc
push
fwait
movsl
cmp
xchg
pop
cmp
mov
fcoml
pop
in
repz
sub
xchg
in
aam
inc
or
jle
mov
nop
cmovae
lret
mov
add
into
adc
stos
pop
jb
push
mov
scas
pop
stc
xchg
sub
rorl
lcall
mov
jo
test
hlt
dec
hlt
jnp
je
mov
pop
mov
pop
out
dec
fidivrs
or
movsl
mov
xlat
out
sbb
call
cld
cmp
mov
adc
cmp
mov
in
push
or
into
lcall
mov
out
pop
push
cmp
jmp
mov
es
and
clc
outsl
std
iret
push
dec
xor
bound
sti
in
jl
add
stc
in
mov
clc
cmp
mov
push
mov
or
andb
mov
faddl
lds
stos
in
fimull
mov
inc
xchg
ja
lock
jg
fisubl
mull
and
mov
mov
mov
out
pusha
inc
add
sbb
add
shlb
cmc
int
xchg
xchg
mov
cmp
push
sahf
and
cltd
stos
lret
mov
icebp
push
or
ja
popf
sbb
popl
shll
fsubrl
fxch
enter
mov
pop
sbb
or
pop
nop
xor
cli
xchg
in
sbb
shlb
push
xchg
fdivs
faddl
cmp
in
xor
popf
out
mov
mov
out
addr16
or
int
xchg
inc
test
lea
test
stos
adcb
outsb
into
loopne
nop
rcl
ja
icebp
out
inc
dec
xor
sub
push
sub
adc
sbb
sub
fstps
sahf
mov
xlat
adc
cwtl
aad
jbe
sub
fldl
push
adc
scas
ret
add
mov
lcall
notl
aam
inc
dec
dec
incl
iret
out
xor
sub
out
and
je
std
mov
addr16
cld
dec
mov
ds
push
dec
gs
lcall
dec
pop
and
inc
and
fsubrl
jb
popf
fs
je
movsl
gs
scas
fdivs
outsl
mov
adc
ret
mov
pop
and
jl
decb
pushw
pop
cmp
cmp
ret
repz
decb
add
or
jecxz
pop
fistl
repnz
repnz
xchg
gs
dec
mov
sub
or
bound
sbb
enter
test
inc
jge
or
adc
popf
adc
call
popf
int
cmp
push
push
push
push
sbb
std
sub
fs
popf
pop
ret
loopne
fld
insb
inc
out
inc
ss
iret
flds
cmp
into
ljmp
jae
and
xor
sub
dec
movsl
push
or
mov
mov
ret
sub
add
jns
sub
dec
adcl
push
mov
xchg
mov
movsb
out
push
xchg
out
or
sub
add
xchg
imul
mov
dec
ret
push
das
mov
inc
sbb
mov
stos
lcall
fisttpl
sbb
mov
stos
bound
in
cmp
xchg
mov
add
cmpsl
out
ret
inc
mov
ss
loop
pushf
cmp
dec
jp
je
and
push
jl
cmc
test
loopne
in
sbb
xchg
sahf
jnp
es
inc
leave
mov
mov
fisubs
fstl
push
test
cmp
pop
xchg
and
cmp
addr16
pop
jle
add
pop
jecxz
xor
in
scas
and
pop
out
rcll
fs
xor
fidivrl
lock
aam
nop
sub
and
xor
loope
adc
mov
test
popf
bound
xchg
pop
lret
ljmp
xor
repnz
adc
mov
pop
mov
repz
sub
xchg
scas
enter
int3
mov
int
in
test
loopew
inc
sahf
and
xchg
test
mov
xor
sarb
inc
mov
add
push
call
inc
mov
ja
inc
imul
jmp
xor
mov
xchg
jnp
test
aaa
dec
incl
in
dec
movsb
pop
iret
lods
adc
je
mov
mov
lea
push
xchg
fildl
pop
sti
push
scas
mov
insl
pop
add
push
cmp
and
or
inc
push
mov
movsl
jbe
shrl
cmp
dec
rcrb
addr16
mov
dec
test
xor
outsb
aam
cmp
inc
loope
scas
jno
push
mov
int
and
add
jge
stc
call
sub
xchg
icebp
cmp
adc
sub
xchg
sbb
daa
ror
stos
mov
arpl
stos
aaa
ret
outsl
sub
sub
test
lock
sbb
sbb
in
add
iret
int
bound
jbe
idivl
stc
shl
xchg
mov
pop
xor
push
aad
xchg
mov
les
mov
lock
mov
daa
sbb
cmp
mov
jae
and
mov
ret
adc
repnz
mov
sahf
stos
pusha
imul
es
mov
mov
mov
mov
sbb
int
push
popa
xor
pop
and
cli
fxch
and
sarl
mov
repz
xchg
leave
out
out
clc
nop
pop
mull
pop
cmp
cmp
sbb
pop
imul
mov
mov
stc
pop
sub
push
xchg
ds
hlt
adc
icebp
adc
jnp
pop
push
and
xchg
sub
or
push
xor
push
inc
or
sahf
fcoms
pop
pop
int
pushf
sar
or
lods
add
cmpsb
and
or
fistpl
test
jae
sub
cmpsb
pop
fmull
add
ss
icebp
push
jns
aaa
out
test
mov
jecxz
add
aam
lods
and
ja
inc
inc
mov
mov
sub
dec
scas
fidivs
adc
or
push
test
xchg
int3
test
mov
mov
push
lods
mov
cld
pushf
and
mov
and
imul
loope
cmp
outsb
cmpsb
push
xor
cmp
xor
add
xchg
test
out
push
add
gs
mov
gs
mov
insb
inc
cmpsl
pop
pop
pusha
jmp
jle
bound
mov
pop
cmp
xchg
mov
sti
stos
push
jmp
mov
push
stos
arpl
aaa
mov
out
and
test
pop
in
mov
lcall
adc
dec
loope
sahf
sbb
or
iret
xor
les
popf
push
and
xchg
mov
dec
mov
das
fisttpll
popf
dec
push
fisubrl
bound
dec
inc
or
inc
jmp
test
mov
into
mov
add
add
push
stos
incl
leave
xchg
notl
adc
inc
fldl
call
and
and
orl
out
pop
mov
cmc
xchg
inc
add
inc
mov
ja
dec
cmp
outsb
mov
out
or
pop
jecxz
sbb
xor
xlat
or
shrb
stos
int
add
mov
and
cmp
inc
sub
in
enter
jg
xor
rcrb
xor
fs
cmp
mov
test
inc
push
dec
mul
imul
add
mov
lahf
cli
inc
inc
mov
pop
les
push
in
mov
jg
xchg
bsf
adcb
jo
movsl
sahf
jl
pop
rclb
fmulp
mov
jl,pt
ds
jbe
divb
pop
dec
sbb
sub
inc
into
dec
test
pusha
shll
stc
test
aas
cltd
popf
divl
jmp
xor
inc
cmc
outsl
in
xor
inc
mov
pop
mov
insl
aas
aad
and
iret
inc
ds
adc
int3
or
cmp
adc
inc
xchg
jl
psrlq
je
adc
sbb
insl
je,pt
jno
xchg
aam
ret
jo
rolb
adc
mov
in
mov
mov
mov
in
and
mov
fs
stc
xor
cmp
jne
sarl
fdivrs
dec
cltd
sbb
enter
sub
pop
enter
iret
sahf
insl
jle
push
jecxz
inc
adc
repz
lret
push
or
mov
pop
dec
cs
mov
stos
mov
pop
inc
sbb
mov
mov
pop
mov
jecxz
fisubl
cli
sub
int
jmp
lea
scas
mov
push
mov
lcall
pop
sub
pop
lds
sbb
out
daa
jg
aad
mov
orl
daa
loop
leave
or
xchg
into
add
mov
ds
cs
xor
sub
js
jle
lret
stos
adc
dec
popf
or
mov
mov
mov
mov
nop
mov
xor
in
inc
fucomp
movsb
inc
div
addr16
movsl
cmp
ret
inc
roll
push
fmull
pop
bound
and
rcrb
mov
adc
ret
sti
testl
mov
or
lret
push
jnp
std
sbb
adc
sub
arpl
pop
push
pop
popf
popf
nop
mov
rorl
sbb
or
inc
sahf
pop
out
xchg
jb
js
dec
shll
mov
and
call
sbb
push
lcall
clc
mov
mov
imul
insb
stos
out
xchg
in
mov
xor
fcomps
mov
pop
cltd
add
arpl
loopne
push
test
lods
das
out
in
cltd
ret
pop
mov
push
jae
fsts
lcall
add
es
notl
cmp
push
fs
lods
divb
pushf
mov
jp
adc
inc
jbe
lds
daa
push
sti
add
jl
or
pop
imul
shl
mov
add
pop
mov
std
push
cmp
out
jl
in
sub
stos
jp
xchg
push
pop
bound
mov
mov
adc
out
sarl
mov
jbe
outsl
stc
adc
mov
jae
sti
or
cs
lcall
out
out
or
out
test
sub
addr16
xlat
stos
fcomps
rcrl
fwait
dec
outsb
sub
mov
imul
inc
push
lds
dec
sahf
xchg
mov
stos
std
cmp
mov
dec
enter
mov
call
push
add
jmp
shl
cmp
sub
imul
push
cmp
xchg
mov
mov
jae
mov
sbb
xor
cmp
cwtl
mov
xchg
adc
test
jb
test
xchg
adc
lds
xorl
cmp
sbb
inc
dec
pop
cmp
xor
insb
insb
pop
mov
cmc
not
push
jl
xchg
mov
iret
fisubrl
cmpsb
pop
bound
push
ja
adc
jmp
test
loopne
mov
int3
roll
sbb
daa
push
scas
push
push
cmp
and
cmp
push
xchg
jbe
dec
cwtl
mov
ret
fcompl
pop
or
and
mov
mov
push
cmpsl
inc
adc
mov
lods
sbb
sub
sarl
xlat
scas
in
aas
test
sbb
push
ljmp
fstpl
xlat
lret
sub
pop
aas
cmp
sub
stos
cmp
fiaddl
mov
add
ret
xor
dec
popf
testb
inc
push
cmp
mov
dec
out
jmp
hlt
push
pop
pop
fbld
mov
stos
jge
adc
jns
loope
leave
cmp
popa
sbb
jecxz
and
jmp
xchg
sub
xchg
sbb
xchg
add
cmc
int3
fidivrs
sbb
test
pop
std
rorl
enter
dec
push
mov
test
mov
mov
pushl
jns
sahf
jl
fisttpl
push
jo
sub
fstps
je
inc
sahf
adc
jno
dec
and
ret
push
in
dec
adc
xchg
dec
jmp
add
in
and
jo
push
inc
cmp
cmp
fwait
rclb
xlat
push
icebp
int
add
clc
and
pusha
movsl
inc
sbb
jmp
mov
cs
lret
aas
push
stc
or
cmpsl
sti
mov
test
hlt
jbe
fcomps
movb
add
in
and
imul
push
out
test
xor
adc
addr16
call
addl
lock
cmp
jae
ljmp
sub
mov
xor
out
push
mov
int
mov
push
xchg
or
mov
jle
mov
lret
push
inc
inc
mov
jb
movsb
jge
sbb
inc
xor
adc
mov
push
cwtl
inc
lods
int3
dec
adc
repnz
sbb
sbb
hlt
xor
xlat
inc
cld
pop
dec
pop
add
mov
scas
mov
xchg
sub
mov
mov
mov
fwait
adc
negb
sub
xor
pop
xor
fadds
lret
mov
into
pop
push
dec
insb
mov
push
dec
pop
pop
sub
fadd
nop
mov
or
hlt
mov
and
mov
js
pavgb
and
push
imul
loope
loope
icebp
fwait
pop
dec
jae
fmulp
leave
pop
xorb
cmp
das
bound
shll
enter
adc
stc
xor
mov
addr16
sbb
daa
insb
addb
push
and
cli
stc
adc
xor
int
jl
jbe
mov
jno
xchg
inc
ret
ds
outsl
scas
jmp
mov
sbb
loopne
or
addb
mov
test
fcomps
add
pop
jns
cmp
shll
inc
and
and
mov
ja
dec
mov
js
je
mov
vpackuswb
adc
jns
mov
int
xchg
fisttpll
cmpb
gs
out
orl
adc
jnp
andl
mov
sbb
rcrl
movsb
mov
fmuls
jmp
xchg
dec
shll
das
mov
fcoml
jnp
mov
adc
mov
ja
pop
jnp
movsl
jmp
mov
dec
jg
pusha
js
pop
mov
pusha
loopne
ss
lea
enter
sbb
nop
icebp
adc
popa
int3
dec
es
push
pop
nop
add
cmp
xchg
jge
rol
movb
leave
inc
cmp
out
jl
pusha
cmp
push
mov
enter
sbb
divl
sbb
adc
js
mov
cld
imul
cmp
mov
loope
repz
mov
push
or
dec
in
shlb
in
cli
mov
mov
repnz
in
loope
js
and
imul
pushf
xchg
pop
daa
sbb
or
dec
hlt
push
dec
mov
inc
lret
dec
std
xor
add
sub
sbb
sar
sar
pushf
or
inc
push
sbb
pop
inc
test
rclb
sti
mov
add
fcomps
mov
stos
cmovnp
pop
lods
mov
das
xor
outsl
hlt
scas
bound
and
lcall
dec
sbb
sub
mov
mov
and
fnsave
cmpl
mov
pop
mov
leave
repz
loopne
sahf
lret
test
mov
or
mov
push
or
inc
jge
sub
dec
sbb
pusha
aad
push
hlt
stos
push
frstor
repnz
sub
pop
shrb
fmul
mov
pop
hlt
es
mov
popa
pusha
xchg
mov
lret
dec
dec
enter
mov
lock
rol
fwait
in
add
xchg
insb
jge
test
cmp
mov
adc
mov
adcb
mov
popa
jp
shlb
push
cwtl
std
pop
clc
cs
out
add
mov
jo
movsl
push
js
mov
fldl
sbb
clc
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
xor
aam
push
arpl
xchg
jno
mov
push
imul
inc
fst
in
fsubl
jle
pop
jo
insl
imul
sahf
stc
out
cmpsb
push
mov
mov
mov
std
xor
loopne
test
lret
cmp
or
out
es
ljmp
adc
push
aas
xchg
add
push
in
push
jae
xchg
sbb
cmp
imulb
test
int
es
xchg
adc
in
adc
fdivrs
ds
cld
ficomps
out
lds
xor
mov
mov
movsl
fs
leave
sahf
rol
xchg
lcall
out
std
jnp
iret
lcall
mov
cmp
stos
dec
adcb
mov
mov
mov
mov
icebp
jg
jmp
sbb
popa
bound
mov
lds
faddl
or
push
fsubs
xchg
out
arpl
adc
add
repz
push
xchg
and
or
pop
or
mov
scas
hlt
adc
dec
sbb
fs
cmp
rcr
in
int
call
sarl
ja
mov
jmp
outsb
push
repz
repnz
test
movsb
loop
cmp
sbb
cmp
pop
jo
push
pop
mov
sti
jae
scas
jo
add
fadds
mov
fistpll
add
sti
lea
mov
push
inc
lods
lods
adc
xor
stos
mov
pop
test
xor
test
sarb
cmpb
pop
sahf
add
mov
mov
mov
or
mov
icebp
jns
add
xor
xchg
aam
mov
cmp
hlt
xorl
ja
popf
daa
jl
mov
mov
pop
loopne
mov
daa
adc
pop
and
dec
or
lcall
imul
pop
push
addr16
add
inc
loope
fldt
sbb
es
dec
ljmp
insl
dec
mov
inc
mov
jmp
sub
push
add
sti
pop
mov
insb
negl
mov
sbb
addr16
inc
xor
insl
cmpsb
xor
pop
es
cmpb
aas
fsubrl
aaa
add
bound
xor
dec
into
bound
lds
int3
push
les
adc
fidivrs
loop
xchg
cmpsl
push
mov
push
xor
repnz
pop
push
pop
add
mov
mov
mov
loop
inc
push
in
mov
jns
pop
int3
adc
hlt
mov
rcll
jmp
imul
or
das
lret
mov
fisubl
sub
pop
leave
push
lods
lock
mov
cmp
and
lret
bound
mov
imul
mov
push
jo
cld
iret
insb
psubq
jle
je
dec
shlb
mov
les
in
cltd
shll
push
or
pop
xchg
ret
popf
fcomps
inc
out
sub
das
imul
mov
push
jb
adc
test
add
push
sti
aam
das
stos
fsubrs
shrb
movsb
xlat
mov
dec
int
cmp
lock
pop
fisttpl
xor
sbb
push
dec
into
push
in
in
test
xchg
dec
mov
test
push
push
outsb
cmp
adc
adc
out
or
jbe
mov
movsb
scas
int
pop
rcl
dec
insb
stos
inc
and
sbb
sti
cs
dec
test
inc
sti
mov
hlt
idivl
jns
xor
add
cmp
mov
and
jge
jecxz
repz
int
sbb
xchg
je
popa
xor
sbb
roll
lcall
push
fnstcw
dec
inc
adc
stos
lods
mov
lock
fwait
adc
mov
cmpsl
in
or
pop
and
mov
repnz
xor
fistpl
test
sub
pop
cltd
inc
imul
addb
mov
cmp
add
jl
cmp
push
and
jge
dec
or
lret
movsl
and
sete
mov
jg
aad
or
xchg
push
shrl
ss
sahf
addr16
sarl
xchg
aaa
or
jo
or
cmp
cli
movsl
xchg
inc
fidivs
sbb
lea
cmp
outsl
inc
pop
loopne
loop
sub
repnz
in
sar
push
out
test
push
push
js
je
testl
jae
test
subl
xor
insl
movsl
ja
xor
or
aad
pusha
cli
xchg
mov
fmul
cli
inc
pop
mov
movsb
xchg
mov
addr16
adc
xorb
fdivrp
xor
add
sahf
cmp
callw
ljmp
and
pop
daa
jecxz
sarl
loopne
adc
enter
in
mov
sub
adc
add
mov
sbb
adc
rolb
std
loope
lds
jb
lods
add
in
in
pop
cmp
push
fadd
in
push
jmp
mov
insl
sub
jns
inc
repnz
xchg
mov
cltd
movsl
imul
in
stos
push
test
add
dec
adc
add
xchg
pop
mov
pop
movsb
lret
mov
lea
stos
push
xorl
ss
int3
adc
jae
inc
rcll
inc
push
dec
push
jg
int
sbb
daa
dec
push
xchg
in
sbb
xchg
leave
or
xchg
xlat
div
orl
imul
inc
sub
jge
jl
cli
loope
loop
mov
xor
add
inc
popl
mov
push
xchg
data16
pusha
test
addr16
cmpsb
xchg
pop
test
addb
cmpsl
je
xchg
cwtl
notl
sub
mov
xor
or
test
mov
fld
inc
shrl
inc
xchg
cli
out
ds
movsl
roll
cmc
adc
dec
xchg
push
jg
push
into
fs
pop
pop
cmpsl
dec
clc
out
push
pop
test
and
xchg
pop
mov
and
movsl
push
in
pop
xchg
loope
call
out
mov
sbb
jnp
mov
cmpl
ret
sbb
sub
adc
int
cltd
aam
mov
xor
imul
fst
cmpb
mov
sbb
mov
push
inc
xchg
icebp
stos
jae
cld
sub
push
repz
lods
lds
cmp
movsl
xchg
adc
pop
jge
subb
sbb
jecxz
out
shrl
push
mov
inc
xor
leave
test
dec
jbe
fbstp
aam
push
xchg
or
lock
mov
inc
dec
nop
dec
stos
or
mov
push
sahf
faddp
stos
aas
stos
scas
icebp
insl
jae
inc
cmp
cmc
mov
inc
or
mov
inc
out
mov
test
lods
cli
icebp
pop
pusha
decb
mov
xchg
xchg
out
outsl
gs
mov
hlt
mov
cltd
inc
inc
sbb
adc
stc
rep
pop
out
xor
call
adc
ret
rcll
xchg
adc
inc
das
call
test
push
loope
or
bound
xchg
into
sub
jns
ret
call
add
sbb
lock
or
jno
dec
mov
jne
jg
insl
jp
test
pop
sub
mov
jle
filds
dec
ret
xchg
loope
movsb
xchg
aas
imul
add
push
cmpsl
inc
sbb
in
adc
outsl
and
push
and
insb
or
inc
loopne
sub
insb
add
pop
shr
lods
push
and
repnz
scas
add
fwait
mov
repz
es
pop
call
fists
mov
out
pop
aas
shlb
jae
pop
mov
imul
lods
push
push
push
lahf
bound
lret
adc
jns
mov
popf
lds
mov
data16
repz
dec
jae
fbld
or
mov
lret
xchg
cld
movsb
jbe
fidivrs
sub
out
adc
and
shlb
jo
xor
inc
inc
dec
shr
leave
gs
test
add
dec
sbb
and
cmpsl
cmp
xorl
ds
push
jns
xor
jbe
dec
aaa
and
js
sub
jmp
das
aam
inc
testb
inc
loopne
or
mov
sbbl
icebp
stos
imull
jne
mov
fidivs
add
lock
test
popa
push
pop
repnz
inc
xor
in
aas
or
push
std
mov
rclb
std
xor
aam
sbb
rorl
outsb
and
aam
cmpsl
xchg
mov
or
push
sbb
fbstp
add
mov
je
das
js
dec
stos
lods
sahf
cmp
jne
mov
arpl
pop
clc
hlt
lahf
mov
test
rorl
fwait
sbb
adc
sbb
xchg
ret
jne
or
out
cmp
pop
fstpt
or
pop
aad
adcb
fnstcw
scas
cmpl
or
push
aam
fnsave
repz
je
sarb
aad
ret
xchg
pop
adc
jge
mov
fisttps
sub
call
lds
fisttpll
or
loopne
push
mov
fs
add
iret
loope
mov
mov
add
ficomps
mov
pop
push
xor
push
fisttpll
lret
pop
in
mov
push
xchg
cmp
stc
mov
inc
cmp
andb
test
aas
mov
push
dec
mov
enter
bound
dec
xor
aad
js
mov
test
fwait
iret
cmp
popa
adc
inc
and
dec
push
rcl
test
pop
cmc
out
push
outsl
inc
inc
ja
in
cmpsb
sub
dec
fistpll
in
in
fldcw
movsb
pusha
jbe
aam
jmp
xchg
jecxz
xor
jle
gs
clc
dec
mov
add
addr16
cmc
inc
lret
rol
and
in
mov
lfs
test
push
mov
xchg
inc
jb
jbe
ljmp
jae
cmp
jb
mov
ljmp
push
mov
mov
jns
into
movsb
xchg
sub
cmpb
insl
adcb
test
adc
out
mov
repz
sbb
fsubr
add
adc
dec
lahf
cmp
jp
push
pop
adc
lahf
loop
mov
mov
xchg
dec
jl
enter
leave
pop
insl
or
mov
lods
les
push
leave
mov
push
jae
repz
xchg
cmp
leave
jne
sbb
xchg
sbb
test
fs
or
mov
xchg
jo
psrad
sti
push
jbe
dec
push
jb
push
mov
aam
xorl
jae
lods
sub
sbb
aas
ret
dec
pop
cs
mov
call
pop
cmp
rcl
sbb
push
shrb
jp
mov
jb
add
inc
jne
xor
jp
divb
mov
push
data16
shl
rcrb
xchg
xchg
movsb
inc
nop
cmpsb
xchg
push
push
ret
add
pop
repz
mov
mov
lds
shrl
roll
clc
in
or
lcall
jne
xor
xor
cmpsl
jg
cmp
mov
sub
sbb
fsubrl
daa
and
out
fldl
in
in
jmp
subl
cmp
jns
fisttps
fcompl
mov
add
out
int
mov
repz
stos
inc
das
test
cli
in
push
jns
and
xchg
push
loop
sahf
dec
pop
decb
mov
cmc
ss
ret
ret
stos
or
pop
outsl
cmp
and
ss
fbld
mov
dec
sbb
mov
sub
lret
inc
test
jbe
out
popf
mov
mov
in
sub
out
add
push
sub
adc
push
mov
jns
sti
pusha
push
dec
add
cwtl
js
outsb
jmp
lret
psubw
es
cld
arpl
jl
icebp
mov
push
xor
hlt
jbe
icebp
push
jl
leave
sub
insl
popf
mov
pop
xchg
lcall
fiadds
cld
addr16
xchg
xor
inc
mov
or
dec
pop
or
test
shll
mov
dec
jne
dec
stc
clc
lods
aad
int3
sub
ds
xor
pop
ja
in
repz
imul
hlt
fistpll
xchg
xchg
inc
imul
adc
das
push
loopne
lcall
inc
lahf
test
pop
movsl
dec
inc
jp
rcr
pop
xchg
mov
loopne
scas
sbb
sub
lcall
in
std
aad
das
idivb
and
xchg
lret
xchg
push
dec
addl
sub
shlb
clc
insb
subl
outsl
cmp
sti
xlat
sbbb
cmp
repnz
pop
xor
call
push
enter
pop
inc
mov
jbe
dec
inc
dec
mov
push
push
sbb
rcr
and
rolb
mov
arpl
lea
fmuls
movsb
cli
jl
setno
mov
jb
ret
and
mov
aad
repnz
inc
int
ja
rdtsc
jno
xchg
cmpsl
add
and
and
in
add
sub
iret
sub
or
adc
and
sti
and
push
int
push
fnsave
jnp
stos
rcrl
mov
in
call
test
jecxz
insl
mov
sub
out
xchg
cmpsb
dec
dec
mov
cmc
bound
sarb
inc
push
test
jmp
push
jmp
dec
cmpsl
leave
lret
shrl
gs
mov
or
in
pop
fcoms
cld
cmp
fwait
xchg
cmc
push
and
cmpsb
test
sbb
in
xor
xor
test
dec
imul
and
loop
jne
fwait
bound
aam
lds
imul
mov
in
inc
in
xchg
fnstcw
sbb
das
adc
das
dec
inc
xchg
ret
push
fcomp
popf
pop
push
push
jo
icebp
cmp
aaa
das
addl
outsl
stos
retw
pop
pop
notl
inc
aaa
dec
push
shrb
mov
and
into
mov
mov
adc
outsl
leave
gs
dec
dec
cmp
mov
push
sbb
add
imul
jmp
push
imulb
xchg
mov
xchg
popa
xor
push
add
push
jg
loop
in
xchg
ffree
pop
out
in
xchg
or
and
movsb
push
sbb
add
or
sbb
xchg
jo
jnp
or
push
mov
fdivrl
mov
sbb
sbb
sbb
iret
sub
inc
clc
inc
jmp
adc
scas
test
and
shrl
enter
or
push
dec
mov
cmp
in
and
dec
or
and
adc
lock
lcall
sbb
jb
mov
ret
dec
test
mull
clc
inc
in
mov
pop
lret
stos
out
sbb
mov
imul
sbb
sbbl
loopne
and
ret
notl
jb
mov
add
nop
lret
jge
shrl
ljmp
imul
aas
out
movsl
das
icebp
mov
std
es
add
andl
add
inc
call
push
mov
jge
inc
xchg
mov
or
mov
loop
test
jmp
je
mov
push
xchg
inc
ret
mov
lea
and
mov
xchg
in
imul
jg
push
mov
testl
cwtl
insl
cld
mov
mov
ja
out
push
lds
stc
stos
fs
sbb
sbb
mov
das
aam
push
xchg
adc
inc
mov
mov
insl
pop
xchg
rclb
pop
adc
adc
sahf
leave
call
popa
in
mov
push
test
pop
xchg
mov
xchg
push
pop
or
adc
push
inc
mov
pop
mov
xlat
clc
xchg
dec
fsubrs
fisubl
mov
push
mov
data16
mov
insl
mov
mov
cltd
lds
sub
jecxz
xor
cmp
xchg
clc
xchg
mov
sti
jge
xchg
filds
inc
or
push
je
insb
out
pop
loopne
xor
jmp
jp
inc
jo
push
addl
mov
adc
in
or
ljmp
dec
ret
xor
push
out
xchg
pop
mov
xchg
cmpsb
inc
cmp
cwtl
out
xlat
inc
fcoml
in
test
dec
push
call
push
xor
in
pop
aad
mov
and
mov
xor
pop
imul
and
inc
mov
mov
add
outsl
push
dec
sub
fwait
sbb
push
xorb
mov
lret
movsb
inc
jge
add
mov
shll
pop
xorl
gs
cli
inc
inc
sbbl
mov
stc
iret
pop
out
es
arpl
in
packuswb
sub
add
mov
mov
pop
addr16
cmp
fs
cmp
dec
dec
insb
lea
pop
xchg
push
and
push
cmp
jmp
popf
xchg
sub
mov
and
fwait
or
and
lret
xlat
sub
sbb
mov
jbe
ffreep
imul
mov
push
shr
jge
push
sub
bound
test
out
sbb
outsb
test
inc
test
mov
daa
xor
cmp
xor
cmp
jp
enter
jbe
mov
ja
push
cmpxchg
mov
cmpsb
rep
pop
ret
fwait
out
arpl
xchg
push
popf
cmpsl
cltd
mov
jecxz
ret
lea
dec
and
add
or
adc
xor
push
dec
outsb
cwtl
inc
lods
mov
push
aam
mov
repz
lret
or
pushl
repz
cmc
add
dec
in
xor
pop
jl
cmp
inc
mov
nop
orb
and
shll
movsl
cmp
jg
insl
sub
dec
fmull
pop
fadd
and
cmc
sub
lds
adc
inc
xor
dec
push
frstor
and
add
lea
xchg
je
lea
pop
xchg
push
pop
pop
enter
into
sbb
mov
rcll
push
mov
dec
fldpi
push
cmpsl
cmp
lock
inc
mov
push
clc
inc
and
push
idivb
inc
out
push
fstpt
stc
or
pusha
ret
sar
out
push
push
bnd
xchg
movsb
push
or
call
inc
ds
ror
dec
cwtl
daa
dec
sub
imul
jb
xchg
test
mov
mov
sahf
int
rorb
cmpsb
pop
fildl
jl
lea
ljmp
mov
and
add
pop
mov
movsl
lret
sbb
lock
mov
cmp
add
adc
or
add
je
es
loopne
dec
or
fdivr
push
scas
es
xchg
fistpll
push
jle
pusha
push
push
cmc
into
or
icebp
adc
test
push
ret
out
ds
dec
movsb
pop
cmp
das
adc
mov
xchg
sbb
js
lcall
mov
push
out
pop
scas
push
fadd
leave
or
jae
ja
sarb
adc
xor
iret
es
mov
dec
bound
in
pop
std
dec
ss
xor
cmp
and
lahf
inc
andl
pop
inc
and
popf
and
push
dec
loop
test
lret
push
dec
rolb
mov
push
fs
sub
rclb
and
cmp
cmpsl
push
jae
psadbw
push
push
ja
pop
adc
lds
jne
inc
jmp
dec
adc
sub
jmp
push
or
aas
cltd
iret
mov
pop
aas
sbb
push
mov
cmp
sbb
pushf
pushf
call
cmp
int
test
and
fst
pop
jle
loop
imul
aaa
xor
scas
and
mov
inc
sbb
cmp
sbbl
in
movsb
push
loope
inc
cs
outsb
outsl
lods
lea
dec
and
cli
xor
xlat
pushf
inc
ljmp
and
push
push
push
and
adc
aaa
fldenv
sub
movsb
daa
fistpl
js
insl
das
lcall
jge
inc
lret
cli
aam
pop
adc
mov
das
xchg
pop
jl
shlb
add
adc
sbb
add
push
and
and
out
dec
cmpsl
cltd
xchg
jns
inc
push
pusha
stc
lea
iret
enter
decl
pop
cmc
ljmp
pop
add
push
xor
mov
aaa
and
arpl
jno
loope
jns
dec
or
pop
pop
dec
or
pop
test
movsb
pop
cmp
dec
pop
mov
in
pop
insl
jbe
ret
inc
insl
xchg
sub
dec
cwtl
aad
jne
dec
sbb
sar
cmp
mov
dec
ja
mov
pop
cltd
sub
loop
mov
lea
xchg
cld
iret
movsb
test
mov
push
fs
rclb
loope
test
cmp
jb
mov
pop
cmpl
into
sbb
mov
cmp
lock
cltd
fldt
add
and
mov
das
lock
and
jnp
inc
adc
jne
lcall
mov
ljmp
stos
sub
pop
imul
mov
and
jno
cmpsb
les
repz
out
and
cmp
int
es
pushf
and
sub
mov
in
gs
int
xlat
icebp
or
outsl
sbbl
iret
dec
popf
loop
jp
sub
push
adc
imul
or
lods
call
rclb
sub
mov
xor
mov
push
lret
add
loop
sbb
aaa
imul
loope
inc
cmp
xchg
popa
dec
es
popa
cmp
mov
inc
xchg
in
iret
es
mov
test
stc
fldt
cli
xchg
imul
cmp
fnstsw
aas
je
clc
mov
dec
scas
sti
imul
iret
testb
jns
or
hlt
popa
lods
xchg
scas
pop
jb
das
fnstenv
sbb
out
push
jge
sbb
inc
inc
arpl
lahf
and
xchg
test
pop
shl
pop
lcall
cmpsl
mov
mov
loop
xlat
xchg
push
iret
push
mov
mov
dec
movsb
adc
dec
mov
sbb
inc
mov
pusha
gs
and
dec
sbb
les
pop
cld
xor
mov
fprem1
outsl
pop
pop
mov
pushl
mov
movsl
xchg
out
fwait
push
jmp
push
and
jecxz
sub
inc
ficoml
cmpb
inc
js
add
into
ret
sbb
sbb
mov
test
ret
popa
jp
xchg
add
aaa
je
arpl
adc
cltd
mov
inc
idiv
orl
fldl
nop
dec
adc
mov
insb
shll
bound
and
sbb
testb
dec
xchg
pop
loopne
mov
into
pop
mov
or
incl
push
in
push
bound
mov
in
out
sbb
test
and
sbb
repnz
pop
aaa
fiadds
sbb
std
pop
jnp
inc
sbb
sbb
out
lock
ljmp
insl
stos
push
imul
rcrb
jnp
sbb
jns
mov
popa
ljmp
push
ret
add
mov
jae
or
das
shr
adc
pop
mov
out
shl
dec
insl
les
cmp
les
xor
cmp
add
lret
dec
mov
sub
sahf
insl
dec
add
test
push
div
pusha
and
xchg
lea
insl
mov
out
in
or
int3
cmp
jp
xor
xchg
cmpsl
repz
xchg
push
xor
inc
cltd
cld
sub
stos
addr16
mov
dec
loopne
mov
mov
lods
dec
cs
mov
mov
push
and
loopne
cmc
lret
test
subb
mov
ljmp
inc
push
leave
test
shl
enter
and
mov
cmpsb
testl
jne
arpl
add
nop
add
adc
dec
cmp
into
sbb
xchg
mov
mov
jo
pop
call
inc
popa
lcall
push
inc
mov
pop
test
jnp
rcr
mov
cli
pop
mov
cmpsb
or
cmp
insb
ror
lret
outsb
inc
ret
jg
scas
push
aaa
jno
dec
aam
mov
mov
sub
cmc
bound
mov
sahf
cmp
mov
add
out
insb
pop
fwait
sub
mov
aad
mov
mov
push
out
cli
or
fcoms
in
mov
daa
outsl
in
add
insl
sbb
mov
cmpsb
rcrb
xchg
fmull
stc
push
clc
mov
cld
fwait
cwtl
enter
ret
loope
xor
mov
sti
in
push
cmpsb
addl
mov
adc
das
clc
mov
cmp
dec
psllw
aam
pop
sahf
add
clc
adc
cmpsl
in
leave
mov
mov
int
or
pop
sbb
outsb
push
mov
mov
dec
repz
fxch
test
inc
jo
enter
mov
int
pop
mov
xchg
or
movsb
xchg
or
jmp
push
push
mov
arpl
jbe
int
shrb
aas
xlat
mov
xor
out
test
test
ffree
lds
pop
ret
cmp
jno
fwait
cwtl
out
mov
jbe
add
aad
ret
or
mov
mov
xchg
je
dec
mov
ret
iret
nop
cld
jne
sbb
loope
sbb
dec
mov
cli
pop
push
pop
cmp
add
clc
jle
jmp
lret
and
xchg
lahf
push
nop
cmp
sbb
imull
xchg
int3
inc
cmpsl
jnp
divb
ljmp
imul
dec
loopne
fwait
add
cmp
iret
sub
jo
pushf
fsubs
mov
xchg
ret
out
and
addr16
jne
inc
test
imul
pop
mov
rcl
incl
push
movsb
mov
xchg
push
jecxz
testb
insb
mov
ds
addr16
shl
test
sti
push
mov
mov
xchg
or
subb
cmc
xor
gs
lahf
iret
shrb
jecxz
bound
lods
cmc
mov
lahf
pop
pop
pop
push
insb
loop
mov
xchg
pop
jo
jns
repnz
inc
pop
mov
mov
jecxz
pop
jne
push
cmc
rcrl
push
and
mov
out
or
loop
push
lret
jle
mov
inc
loope
mov
sub
or
push
or
js
or
mov
pusha
or
adc
sti
or
jae
inc
in
hlt
dec
leave
mov
mov
and
fisubrs
ret
and
mov
sbb
out
push
sub
fsubs
dec
mov
in
dec
inc
rclb
jp
in
xchg
or
pop
test
sub
inc
aas
mov
fs
imul
movsb
dec
out
outsl
mov
mov
xchg
es
push
xchg
imull
dec
mov
jmp
je
sub
inc
pop
cli
and
mov
and
dec
in
mov
jb
fs
shll
shll
push
scas
jns
mov
loope
mov
xchg
mov
push
adc
pop
sub
jp
repnz
sub
dec
icebp
inc
out
add
cmp
movsl
sbbb
dec
xchg
push
repnz
xor
pop
and
sbb
mov
xchg
push
and
xchg
add
test
or
lcall
bound
push
xlat
out
or
jg
dec
pop
stc
test
xor
jae
mov
leave
sti
fidivrl
fisttpll
adc
cltd
loopne
mov
xor
or
cmp
jp
xchg
dec
hlt
mov
movsl
test
xor
sub
leave
daa
aad
in
push
insl
shlb
xor
jmp
xchg
sbb
lret
lret
and
neg
cmp
mov
jae
shll
xor
jmp
les
sub
cltd
sti
adc
idivb
test
inc
mov
test
imul
aad
out
dec
cmp
pop
mov
xor
sbb
rcll
je
aas
and
in
pop
pop
leave
in
in
sub
mov
or
repz
test
sahf
scas
popa
pop
jp
imul
pop
jne
push
ficoml
fldcw
pop
ret
loope
xchg
ljmp
aad
jge
adc
in
inc
addr16
inc
rorl
icebp
push
shl
stos
jg
jnp
and
cs
jnp
lret
cli
movsb
xchg
push
ja
rolb
mov
rcrl
fadds
and
sbbl
xchg
adc
pslld
addr16
cmpsb
shll
nop
add
jl
into
iret
xchg
pop
lcall
mov
push
int
xchg
xchg
mov
mov
add
popf
mov
lods
decl
xchg
ljmp
adc
fwait
pop
dec
pop
push
pop
idivb
jo
inc
fistl
sub
and
sbb
fwait
mov
cltd
les
xor
outsl
mov
push
adcl
mov
cmp
insl
push
jbe
jno
loope
inc
shrl
jae
push
imul
stos
and
orb
ja
adc
jno
mov
xchg
mov
fsub
out
bound
mov
insb
je
xchg
mov
outsl
xor
adc
cmp
adc
jno
mov
nop
xlat
inc
xor
jns
xchg
xor
cmp
cltd
and
cltd
pushf
ficoms
sub
dec
adc
loope
sub
sbbb
jmp
test
out
jo
xor
popf
mov
jns
or
std
cmp
push
imul
cmpb
bound
lret
jne
fwait
loope
mov
ds
cmp
stos
enter
and
cltd
lret
pop
iret
mov
test
inc
push
jl
push
adc
sahf
sbb
cs
pop
push
inc
dec
loope
and
sahf
jecxz
mov
add
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
movsb
bound
jp
pop
jp
adc
push
jbe
int3
fcmovbe
jae
aad
push
stos
mov
mov
mov
and
push
inc
push
mov
repnz
je
negl
xlat
sbb
mov
pop
scas
lock
orl
inc
imul
push
fcoms
aaa
mov
push
cmp
test
insb
int
outsl
jae,pn
divb
repnz
arpl
lret
nop
fcmovnb
ds
ret
ja
divb
cmpsb
xorb
aas
cs
xor
pop
mov
mov
sbb
push
dec
fistpl
aam
push
scas
daa
inc
adc
add
adc
aam
cmp
nop
or
scas
push
sub
mov
and
dec
cmc
outsl
dec
imul
or
jo
iret
push
lcall
dec
inc
ss
xor
cmp
mov
add
jne
lea
movsl
pusha
imul
dec
aaa
push
addr16
jmp
dec
cmp
orb
push
popf
ret
fs
xchg
ja
addr16
adcl
cmpsb
data16
and
mov
adc
and
sbb
lea
scas
mov
clc
push
mov
adc
addr16
out
lods
add
add
adc
xchg
fcmovu
stos
sbb
jge
in
jae
sar
mov
sub
lret
ret
nop
push
mov
ficoms
cmp
pop
rcrb
mov
sbb
dec
stc
icebp
ficoml
push
insb
into
nop
xor
fistpl
rol
out
femms
fs
sub
mov
bound
xchg
add
cltd
out
into
inc
mov
mov
ds
aaa
jbe
add
sub
shrb
inc
or
xlat
dec
in
adcl
xor
push
xchg
clc
lret
sarb
in
push
fs
loopne
lods
je
insb
and
dec
lods
push
les
inc
cmp
loope
jmp
rclb
dec
insl
aas
inc
aaa
pop
enter
mov
jne,pn
inc
lock
xchg
push
test
pushf
outsb
mov
orl
popf
pop
or
in
xchg
and
inc
pop
pop
push
test
dec
test
jle
out
dec
in
jmp
or
cmp
jbe
mov
jl
cmp
jbe
cmpsl
inc
ja
loope
les
ljmp
fdivrp
sbb
xlat
cmc
and
js
mov
je
data16
jmp
fcompl
popa
cmp
add
paddb
and
xchg
sarb
jns
stos
ffreep
enter
mov
inc
push
cmp
jmp
push
cwtl
pop
cld
mov
mov
and
and
adc
push
call
dec
mov
test
inc
jae
mov
scas
push
mov
xor
mov
cld
xor
pop
push
xor
cmp
dec
popf
jp
js
mov
lods
adc
mov
stos
inc
out
jb
jnp
popf
rolb
add
lcall
das
in
dec
aam
hlt
dec
pop
and
cmpb
or
lock
rclb
push
push
out
stos
inc
and
pop
out
cwtl
out
dec
pusha
xor
push
mov
imul
jbe
rol
in
hlt
lret
adc
scas
mov
mov
adc
mov
jno
or
xchg
je
or
push
adc
add
xor
mov
orb
dec
enter
fdivs
fcmove
sub
adcb
xorl
and
xorl
sarb
roll
pop
test
xchg
dec
mov
mov
inc
xchg
xchg
dec
fildll
mov
cmp
cltd
data16
mov
and
clc
int3
adc
dec
jmp
push
dec
aam
out
adc
mov
mov
enter
jg
sbb
mov
cmp
into
cmpb
mov
pop
sbb
push
popa
cmp
mov
data16
int
or
outsl
inc
mov
jp
in
mov
in
or
jb
sbb
cltd
pop
pop
jp
cmp
xchg
sahf
out
in
stc
rorb
cmpl
jecxz
aad
ret
inc
iret
sub
icebp
dec
xor
scas
jae
jle
or
push
jle
insb
popa
sbb
push
mov
sbb
sti
xchg
out
sub
cmpsb
es
sbb
xor
imul
and
in
or
add
jno
jno
cmpsl
stos
mov
and
movnti
dec
lods
pop
out
popf
adc
fimuls
mov
lea
in
mov
or
repz
xor
mov
test
mov
scas
arpl
nop
lret
shrb
push
cmp
enter
mov
sub
and
xor
stos
jg
jae
in
les
outsl
push
cwtl
mov
mov
enter
into
call
sbb
dec
push
fcmovb
loope
jmp
ss
sbb
pushf
or
mov
mov
push
jnp
xchg
hlt
and
lock
lret
lcall
lea
mov
inc
jno
hlt
ret
insl
lea
es
push
jecxz
pop
xor
cmp
test
or
loope
pop
aam
mov
dec
sahf
mov
hlt
push
cli
adc
pusha
fildll
sub
cmp
ljmp
dec
and
scas
lret
dec
pop
in
out
mov
movsl
adc
hlt
adc
pop
hlt
jae
je
popl
push
jle
mov
or
cmpsb
mov
mov
frstor
ja
rcrb
mov
ret
xchg
lock
pop
dec
les
add
jmp
xchg
add
dec
jne
ljmp
pop
lret
inc
out
or
lods
jno
mov
test
push
decl
jno
rcl
push
jmp
fs
les
outsl
rcrl
jg
iret
pop
in
mov
aaa
dec
add
mov
and
cmpsb
mov
stos
insl
sbb
lret
mov
jne
shll
and
aas
ret
mov
out
test
xchg
sub
cltd
and
jle
mov
mov
arpl
inc
movsb
jnp
push
xchg
lcall
jne
sbb
stos
sti
pop
scas
js
lods
sbb
pop
jp
nop
movsl
loope
cltd
cmpsl
arpl
mov
xchg
out
xorb
shr
push
cld
cmc
test
or
dec
imul
fisttpll
mov
or
out
in
fucomp
repnz
sub
jmp
std
pushf
rolb
scas
fisttps
aam
clc
cmc
addb
push
je
sub
inc
sub
mov
sbb
dec
xchg
sbb
movl
into
pop
cltd
push
jo
in
rorl
or
outsl
push
mov
add
inc
mov
jp
cmpsb
mov
and
shrb
inc
inc
inc
push
dec
xchg
daa
and
jge
xchg
sbb
scas
in
xor
repz
ja
movsl
test
pop
push
rcr
sbb
and
loop
push
cmpsl
dec
rcll
mov
and
je
cmp
hlt
inc
call
aad
mov
dec
inc
cmp
dec
stc
add
mov
call
fiadds
test
push
mov
mov
in
add
outsl
add
push
cld
loopne
pushf
mov
outsl
into
sbb
sbb
int3
pusha
popf
ss
ret
or
pop
outsb
test
pushf
cwtl
xchg
xchg
mov
repnz
pop
loopne
mov
iret
into
scas
xchg
add
sti
or
xlat
out
sti
add
sbb
add
hlt
or
push
and
pop
xchg
xchg
leave
hlt
ret
test
xchg
mov
ret
stc
push
ficoms
inc
mov
notb
ss
ljmp
shll
adc
pop
sbb
pop
or
aam
push
inc
mov
sarb
leave
std
int
out
imul
stc
popf
or
xchg
leave
mov
dec
adc
mov
ja
ror
jle
push
lds
cmp
inc
mov
add
xchg
adc
pusha
mov
sub
enter
push
mov
dec
inc
mov
cmp
sbb
hlt
jnp
and
js
sbb
roll
dec
icebp
sbbl
int3
jg
push
call
mov
nop
dec
inc
out
push
aam
jl
push
cs
inc
not
pop
dec
mov
inc
bound
jg
into
mov
fsubr
testb
jmp
mov
push
add
fdiv
pop
jmp
rcrl
repnz
setbe
loope
arpl
and
aas
pop
fwait
jo
mov
jne
mov
icebp
mov
dec
sbb
fldcw
xor
mov
adc
or
enter
xor
data16
int3
push
mov
cmp
outsl
push
cmp
push
xor
pop
popa
fcoms
stos
and
daa
adc
insl
out
jnp
movsl
das
frstor
mov
or
mov
int3
aam
daa
ret
fsubs
cmpsb
mov
cwtl
sti
or
mov
jmp
out
fcmovb
sub
stos
lcall
gs
inc
imul
mov
and
add
mov
dec
push
cltd
inc
mov
jo
pushf
shrb
mov
loope
inc
daa
ja
add
xor
or
sarb
cmp
je
jl
mov
stos
cmp
insb
add
mov
scas
lcall
cmp
lock
sahf
or
jle
dec
negb
nop
imul
dec
or
jg
rcrb
daa
popf
push
push
push
push
jg
inc
jnp
das
pop
and
mov
test
cs
pop
jae
int
inc
fdivs
push
sub
push
fldlg2
inc
or
ss
sti
push
mov
adc
pop
pop
push
js
lret
mov
mov
sti
jp
aaa
aam
add
and
decb
xor
adc
call
mov
push
mov
adc
insb
inc
ret
adc
and
xor
ffreep
jbe
jbe
sahf
sbb
add
dec
ret
mov
icebp
dec
inc
or
dec
pop
cmp
sbb
mov
lret
xor
scas
pop
ljmp
ljmp
inc
sub
dec
mov
add
jg
xchg
jno
and
dec
inc
lret
inc
xor
subl
negb
pop
in
es
sbb
in
cmp
loope
inc
mov
xor
call
and
xchg
scas
push
mov
jo
inc
cmpsl
pop
xchg
mov
rcrb
inc
daa
pusha
data16
cmp
scas
int3
pop
into
out
or
push
leave
xor
out
imul
shll
out
adc
loop
sbbl
lcall
cwtl
adc
or
xlat
bswap
adc
repnz
mov
dec
rolb
and
fs
dec
inc
pop
push
mov
lcall
xchg
pop
aas
sub
or
ror
mov
leave
xchg
xor
push
ds
int
shll
decl
xor
xor
flds
into
aas
aad
rcr
xor
add
push
cs
push
jp
xor
push
cld
dec
cmp
sub
pop
dec
lahf
and
test
mov
test
pop
mov
push
data16
xor
rorl
jp
lock
mov
andb
jne
inc
dec
push
lock
daa
mov
or
jns
push
das
scas
dec
pushf
cmp
inc
icebp
mov
pop
rol
xchg
stc
es
lds
mov
xchg
jo
int
lahf
mov
repz
in
mov
inc
bound
or
jg
inc
mov
int
pop
lahf
cmpsl
or
lret
jle
getsec
inc
cmp
ljmp
push
repnz
popa
xchg
xlat
rcrl
jbe
pop
jmp
fbld
shlb
pop
outsl
push
mov
jno
roll
mov
mov
push
outsl
xchg
cmp
push
insl
dec
cmp
push
cmp
sti
lea
and
jp
adc
dec
ja
jns
dec
daa
lahf
dec
push
sub
ret
inc
test
cmp
inc
xorl
cld
inc
bound
xchg
jne
dec
adc
scas
adc
jnp
push
and
repnz
jmp
bound
cld
lods
dec
sbb
push
or
xchg
outsl
outsb
addr16
push
jns
dec
mov
loop
testb
cld
enter
cwtl
sub
xchg
cmpsb
dec
fisttps
and
int
insb
sbb
pop
lea
mov
test
inc
insl
cmpsb
jb
mov
call
pop
mov
inc
sub
ret
cmp
cmp
cs
or
stos
imul
mov
lret
sti
xor
jns
loop
push
jl
sahf
enter
clc
cs
add
jo
pushf
sarb
test
and
aad
pop
outsl
addr16
xchg
sub
ljmp
int3
pop
inc
mov
xor
pop
out
pop
xor
jg
bound
out
jns
pop
cmpsb
or
in
popa
testl
stc
jb
ja
std
jge
call
cmp
add
addl
and
or
xchg
sub
sbb
push
negl
clc
fsts
addb
xor
adc
sbb
and
and
pop
cmp
in
pop
js
mov
mov
and
mov
sbb
bnd
les
jmp
mov
xchg
cmp
sbb
shr
inc
daa
imul
clc
hlt
aas
fcoml
push
pop
cli
orb
sub
mov
add
les
popa
dec
push
in
inc
aas
scas
push
pop
ds
inc
test
lret
pop
xchg
mov
add
pop
add
daa
je
or
andl
mov
lea
les
popa
ss
in
and
mov
mov
cwtl
addr16
add
and
mov
inc
mov
je,pn
mov
xchg
push
xchg
jnp
or
sarl
push
xor
ja
fldcw
inc
push
popf
leave
test
out
mov
outsl
xchg
inc
sub
pop
add
dec
mov
mov
mov
cmp
rcr
mov
pusha
xor
xchg
jmp
dec
out
aam
adc
dec
adc
xor
add
ret
test
stos
push
outsl
test
mov
adc
sub
push
ss
hlt
xchg
roll
imul
inc
rorb
lods
mov
mov
scas
push
sub
leave
test
pusha
dec
ljmp
test
push
add
push
dec
fisubrs
mov
cwtl
popf
iret
mov
mov
xchg
jle
push
insb
jnp
cmp
iret
lea
mov
mov
cmp
ja
inc
mov
addr16
pop
cmpsl
jae
pop
or
sub
incl
push
jae
mov
inc
push
rclb
xchg
dec
push
cwtl
mov
jecxz
mov
incl
xor
clc
jae
fwait
and
mov
and
push
or
mov
out
lods
sbb
mov
daa
and
and
popa
es
push
or
decb
xchg
testb
dec
aas
fstpt
into
xor
fsubrs
xor
dec
fs
rol
adc
mov
daa
rcrb
cwtl
xor
ffreep
std
fsub
stos
push
imul
fidivrl
in
mov
pop
cld
repz
stos
jno
pop
stc
dec
jp
inc
add
pop
repz
mov
rolb
pusha
mov
jmp
sbbb
std
pop
sub
inc
repnz
out
divb
into
ja
adc
cmp
cmp
mov
out
dec
or
pop
rolb
sbb
popa
pop
fldenv
fsubr
mov
shlb
cmpsl
jbe
cmpsb
push
ss
fidivl
pop
jbe
mov
ds
imul
push
mov
lret
mov
jne
pop
cltd
push
out
dec
int3
push
dec
jae
mov
dec
in
jo
mov
rol
fcomps
xor
sub
popf
orl
sbbl
outsl
scas
or
add
fsts
scas
dec
xor
test
repz
notl
sub
mov
pop
sbbb
xchg
movsl
push
ret
push
fs
hlt
aam
xor
rorb
leave
stc
xor
flds
into
xchg
or
addr16
mov
lea
stc
call
lods
pop
mov
lret
icebp
jle
sarl
xor
cmpb
in
aaa
lock
adc
jg
sti
lods
and
sbb
cmp
adc
jp
pop
adc
mov
mov
jne
inc
shll
push
push
mov
mov
adc
mov
inc
lret
pop
inc
push
sbb
shrl
push
inc
outsb
jge
pop
and
or
push
sub
xlat
mov
mov
push
sub
mov
imul
add
std
mov
jno
adc
sbb
lock
sbb
fxch
addr16
inc
sub
pop
inc
sbb
bound
repnz
jecxz
jg
push
or
cmp
ds
jg
push
jge
adc
push
jg
lret
mov
into
cmp
mul
test
sub
insl
lock
in
sub
push
push
adc
negb
stos
testl
aad
mov
in
ret
and
push
cwtl
lds
xchg
fdivr
leave
pushf
ret
push
jae
pop
cs
fcomps
pusha
sahf
fimull
cli
rcrl
adc
jnp
inc
stos
sarb
jb
lret
add
sub
push
aas
mov
inc
shrb
add
cmp
rcrl
adc
fiadds
jae,pn
loope
mov
push
xor
and
sbb
add
or
cltd
sub
sbb
and
push
mov
sahf
nop
jnp
mov
sbb
xchg
gs
xchg
insl
push
mov
inc
loop
push
mov
add
inc
ret
shll
enter
jl
jmp
cmpb
clc
ljmp
and
arpl
rcll
adc
test
dec
mov
outsl
mov
mov
in
nop
adc
loop
out
add
das
stos
lods
inc
mov
out
and
mov
aas
mov
or
xor
loopne
inc
dec
sti
aas
inc
orl
scas
lret
adc
das
mov
rorb
clc
add
sbb
jae
mov
or
adc
movsl
sbb
ljmp
mov
in
mov
cmp
negl
jmp
sbb
ljmp
fistps
icebp
aas
xor
outsl
fmuls
dec
not
int3
aas
lods
ja
js
fisttps
je
adc
shlb
repz
imul
ret
lcall
cmc
fsubs
xor
pusha
loopne
mov
dec
mov
mov
inc
aas
mov
lods
vzeroupper
and
cwtl
or
in
cmp
add
or
cmp
cmp
movsl
hlt
stos
add
lahf
iret
xor
adc
dec
xorl
adc
mov
es
mov
mov
add
leave
int3
fimuls
push
arpl
shll
mov
push
mov
sti
leave
mov
test
xchg
pop
or
gs
adc
sub
cli
je
sti
jo
dec
xchg
push
xor
push
out
push
pop
jge
sub
xchg
cwtl
inc
ja
movsl
or
sbb
sbb
stos
cmc
out
sbb
push
mov
xor
outsb
cs
and
sub
mov
xor
movsb
arpl
inc
mov
adc
shrl
mov
xchg
call
jg
cmp
popa
jo
je
nop
insl
sar
stc
dec
xchg
pop
mov
in
pop
popa
xchg
popf
and
xor
cmc
mov
push
sti
dec
adcb
dec
pop
jp
loop
in
xchg
inc
es
lret
push
sahf
push
cmp
and
test
ret
xor
cmpsb
mov
cld
xor
subb
adc
lret
ret
mov
cmpsb
test
ja
pop
cwtl
mov
fnsave
sub
add
out
fstpl
xchg
add
pop
cmp
xor
mov
inc
mov
xor
xor
cwtl
push
mov
push
or
jp
and
pop
daa
pop
fnstenv
mov
or
cld
scas
ret
data16
test
lcall
or
sbb
fcoml
fcomps
out
outsb
sbb
std
pop
jno
pusha
sub
fbld
aam
jecxz
pop
ds
inc
outsl
xor
dec
sbb
int3
mov
test
in
mov
mov
pop
ljmp
cmpsl
jbe
or
loope
sti
sub
test
popa
push
jecxz
cld
sbb
rcrb
bound
or
leave
sti
fdivrl
push
int
hlt
xchg
dec
jecxz
in
aam
push
stos
mov
fcmovu
pop
imul
out
pop
das
daa
adc
lret
dec
ret
sarl
bound
stc
sahf
fbld
push
lcall
inc
push
pop
jmp
imul
xchg
icebp
mov
movsb
lds
insb
mov
in
mov
outsb
out
lock
mov
pop
and
cmpsb
insl
add
fnsave
sbb
push
je
jb
lods
sbb
cltd
push
cmpb
jno
es
jp
push
fnstenv
loop
jecxz
cmpsl
push
xchg
ds
adc
rcll
imul
cmp
xor
lret
xchg
push
hlt
outsb
cmp
inc
add
pusha
repnz
pop
insb
sarl
mov
rcll
loopne
imul
mov
cmp
mov
les
lea
shlb
jmp
ss
shl
lods
mov
jo
fcoml
incb
adc
push
cwtl
dec
fwait
or
mov
inc
xchg
and
data16
pop
pop
sbb
lret
mov
pop
ret
imul
fwait
xor
or
stos
popa
lret
iret
rol
xchg
fmuls
mov
rcl
adc
inc
mov
or
daa
sub
push
dec
mov
imul
out
sbb
hlt
cmp
mov
xor
mov
mov
inc
pusha
xor
add
sub
pushf
mov
in
xor
lock
aam
or
mov
cmp
mov
int
ljmp
sub
cmp
lods
mov
push
mov
pop
add
xor
mov
loopne
ret
jno
add
mov
sbb
xor
xchg
mov
in
add
mov
adc
pushf
pop
and
mov
push
int
xor
pop
jl
push
adc
js
and
shl
std
cmp
outsl
mov
stc
xchg
jns
adc
cmp
mov
inc
stos
bound
push
subb
xor
jmp
add
cmp
iret
sbb
ds
rclb
fidivrs
jno
movsb
es
subl
fbstp
movsl
std
andl
outsb
fstps
in
sbb
mov
pop
cltd
and
lcall
sub
or
cs
icebp
cmp
pop
mov
jl
fists
js
xor
xchg
xlat
lret
push
in
lret
ret
aam
xchg
rolb
cmp
cmc
outsl
or
repz
ret
mov
les
pop
imul
popf
popf
mov
mov
push
mov
push
jo
inc
pop
in
xchg
add
inc
or
cmpsb
aam
mov
into
inc
out
add
into
adc
mov
dec
jecxz
and
rolb
mov
cmp
mul
sub
pop
in
or
push
in
push
sbb
xor
mov
sub
sahf
inc
rcl
push
fcoms
and
test
ror
lock
loopne
les
and
dec
ja
js
loopne
je
loopne
cli
push
in
int
or
ret
in
cs
add
or
mov
push
xchg
add
pop
xchg
ljmp
bswap
addr16
jmp
pop
loope
mov
mov
pop
cltd
enter
pop
xchg
sub
out
cmp
aad
ljmp
xchg
enter
insb
mov
inc
adcb
in
jg
cmp
adc
mov
push
stos
jne
and
xorb
pop
sti
push
fwait
sbb
xchg
adc
pop
in
mov
lods
xlat
pushf
lsl
enter
leave
sbb
xor
adc
rcr
jns
xchg
dec
repnz
xchg
and
push
sub
out
movsl
adc
mov
add
xor
mov
movsl
in
insb
cli
andl
mov
jbe
fisubrl
ficomps
cmp
and
jne
lea
and
call
out
and
test
addr16
idivb
jnp
or
mov
mov
int3
pop
xor
popa
dec
lock
dec
data16
or
std
xchg
jns
loop
mov
adc
mov
lds
shr
testl
lcall
jae
or
pop
mov
push
js
dec
xchg
or
out
test
add
and
mov
sbb
sub
faddl
ret
mov
movsl
imul
repnz
lea
xlat
lock
outsb
fldenv
lods
xchg
orb
cmp
leave
stos
sub
outsb
pop
inc
sbb
cmp
xor
mov
add
in
cli
bound
mov
dec
pop
mov
dec
mov
mov
cmp
or
pop
push
or
ds
in
mov
pop
jp
stos
inc
mov
mov
mov
mov
fmuls
rcrl
lock
mov
cmp
ret
lea
add
dec
gs
push
outsl
or
adc
enter
divl
repz
mov
jl
xor
or
dec
inc
stos
rorb
movsb
xchg
stc
jo
cmp
adc
test
mov
cmp
pop
add
inc
dec
inc
xchg
loope
adc
stc
les
aad
sbbb
pop
or
fldl
inc
cmp
test
sub
sub
mov
bound
jns
xor
pop
mov
sub
push
sarb
sbb
lcall
jbe
mov
pop
dec
push
adc
je
das
mov
xor
out
adc
xor
loope
mov
xor
sbb
insl
sub
mov
mov
sub
cmc
xor
ja
mov
mov
mov
and
loop
mov
add
jae
dec
arpl
dec
add
je
jmp
dec
pop
je
aas
jae
fs
add
xchg
lahf
and
movsb
in
cltd
dec
adc
imul
ret
clc
mov
sub
fnstcw
repnz
sbb
sub
jmp
xchg
pop
fadd
negl
inc
shll
cwtl
xor
pop
inc
lahf
bnd
xchg
add
rcll
pop
or
cmp
mov
add
or
aad
jne
mov
add
bound
sbb
lea
insb
in
pop
jo
mov
mov
in
xchg
lret
and
sbb
es
inc
fnstsw
push
pop
xor
out
xchg
mov
sub
aaa
fdivrp
mov
ljmp
cmp
aas
fcmovnbe
mov
xor
inc
sbb
jnp
push
xchg
js
in
sbb
lret
dec
mov
std
inc
lret
xor
mov
mov
out
cmp
ret
mov
stc
add
jl
push
sbb
stos
xchg
sub
mov
mov
jnp
ja
sub
push
scas
jecxz
mov
mov
xchg
aam
sbb
fstpt
inc
jle,pt
cwtl
arpl
adc
stc
sbb
jl
out
cltd
xor
or
push
sbb
aad
movsb
sub
pop
jns
cltd
and
push
cld
cltd
sbb
cmp
sub
pop
mov
test
dec
outsb
jae
rep
cltd
addr16
xchg
pop
outsb
mov
fdecstp
adc
sub
jp
dec
cli
scas
sbb
inc
f2xm1
push
ja
mov
fisubrl
inc
cwtl
sub
adc
mov
stos
cld
aas
xchg
cmp
scas
xchg
jbe
das
cli
inc
cmp
in
fucomi
xchg
mov
inc
outsl
mov
gs
jb
clc
mov
jae
mov
fcmovbe
or
pop
lcall
insl
sbb
frstor
push
sbb
pop
push
push
aad
dec
sbb
push
in
into
std
test
add
fwait
icebp
push
out
aaa
iret
add
sub
lcall
inc
out
push
stos
inc
mov
mov
and
xor
roll
sub
and
es
lock
stos
pop
das
lods
jecxz
sbb
in
loopne
lea
les
fs
fsts
mov
les
mov
add
add
jae
pop
nop
ss
mov
cs
lock
lea
sub
cmp
loopne
or
dec
out
lcall
inc
adc
jns
mov
ljmp
stc
push
into
test
fucom
push
push
into
lea
cmp
mov
push
xor
dec
fldenv
inc
xor
jno
ljmp
xchg
cmp
xchg
mov
insl
mov
push
xchg
in
mov
and
js
sbb
xchg
mov
imul
jbe
jmp
lock
mov
or
xor
shr
cmp
adc
dec
adc
push
clc
dec
int
cmp
into
stos
mov
or
pop
out
in
jl
ljmp
jp
mov
je
and
xchg
jmp
cli
sbb
fsubs
in
jno
mov
adc
shrb
movsb
mov
imul
lahf
pop
jb
pushf
icebp
xlat
lret
inc
es
xchg
imul
push
ljmp
or
mov
mov
cmp
xlat
sahf
pushf
dec
pop
mov
arpl
cmp
cmp
inc
jbe
sub
mov
dec
xor
in
jne
pop
mov
mov
jmp
mov
aam
repz
out
js
xor
popf
fs
lds
in
adcl
dec
sub
aaa
dec
jo
xchg
stos
je
pop
adc
out
dec
imul
shrb
dec
jmp
andl
xchg
mul
jo
adc
mov
jne
sahf
or
or
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
mov
mov
mov
xor
jns
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
add
aam
add
add
add
in
adc
mov
lods
xor
xor
daa
idivl
sbb
rcr
rorb
popa
mov
jg
loope
cmp
push
bound
fwait
mov
addl
cmp
push
addr16
cmpsl
mov
jns
and
mov
dec
ffreep
clc
mov
pop
jno
fisttps
popf
movsb
gs
or
dec
push
push
add
jecxz
popl
sub
inc
and
push
xlat
adc
outsl
and
or
into
int3
or
mov
int
xor
movsl
hlt
xchg
das
fldenv
dec
mov
xchg
cmc
loope
cmpsl
rcrl
pop
xlat
shll
pop
dec
repz
lret
pushf
fcompp
lock
and
mov
leave
test
imul
into
in
lods
ret
jns
jge
sbb
mov
movq
dec
loope
xor
pop
adc
outsb
jo
jp
or
xchg
push
fdivrp
das
inc
mov
xor
retw
and
inc
or
lock
and
repnz
test
push
fs
fdivl
loop
cmpsb
aas
mov
inc
pop
mov
aaa
jg
dec
mov
inc
jne
popa
jmp
fstp
ss
out
andl
fcom
hlt
clc
pop
in
repz
pop
inc
inc
mov
jg
ss
lods
cmp
push
cld
insb
fwait
in
lea
sbb
pop
ficoml
mov
pop
sti
popf
pop
bnd
adcb
mov
lcall
imul
inc
fnsave
rcll
adc
or
jno
xor
sub
adc
sbb
fnsave
scas
mov
mov
or
inc
cmp
cmp
dec
cmpsb
arpl
xchg
adc
add
ds
jbe
push
test
sbb
das
shr
loop
inc
add
cvtpi2ps
gs
jb
mov
adc
ret
xchg
mov
mov
add
fdivs
lods
pushl
mov
xchg
div
sbb
subl
inc
dec
ret
loop
mov
add
inc
mov
jo
xor
push
icebp
daa
mov
xor
adc
inc
imul
add
lcall
je
mov
pop
xchg
sti
mov
rorb
dec
sti
js
cmp
pop
or
negb
sarb
sbb
mov
adc
clc
xchg
es
adc
arpl
rorl
jae
lcall
pop
xor
imul
mov
leave
pop
ret
imul
shll
outsl
fwait
sub
adc
adc
xchg
addr16
mov
sar
pushf
cltd
or
arpl
and
push
mov
and
fs
add
xchg
mov
movsb
xor
js
lods
cmp
out
dec
cmpsb
mov
test
mov
mov
cmpsb
push
ss
mov
inc
pop
pop
cmp
es
dec
test
jae
andb
inc
inc
movb
adc
mov
mov
iret
fstpt
mov
add
mov
push
mov
xchg
lret
daa
jl
add
pop
mov
jns
push
mov
mov
addr16
xor
inc
pop
lcall
insl
ret
jne
loop
imul
fiaddl
adc
sbb
pop
dec
cld
sbb
leave
out
xor
ret
lret
mov
xchg
les
dec
dec
jns
pop
dec
push
push
cpuid
mov
insb
pusha
js
outsb
sbb
lcall
add
decl
xchg
cmp
fldl
jbe
xor
adc
cmp
imul
push
mov
out
xchg
lds
xor
sub
outsb
xor
call
int3
dec
add
lock
mov
and
ss
rorl
xchg
outsb
jl
loop
imul
dec
lods
jae
ret
out
sbb
push
push
mov
stos
int
mov
mov
pop
sbb
push
adc
and
push
sub
movsl
xor
pop
rclb
scas
imull
leave
inc
inc
jecxz
inc
pop
subb
cmp
inc
test
cmp
out
cmp
add
add
test
pushf
adc
sahf
shlb
mov
pop
jge
add
es
rcrl
shll
out
sbb
add
add
add
rclb
pop
lahf
jg
faddl
push
call
repnz
add
dec
or
add
xor
mov
mov
rorb
jne
pushf
sbb
cmpsb
inc
jno
and
lret
push
xlat
cmc
cltd
pushf
jge
inc
rorb
fldz
insb
mov
jmp
inc
fdiv
cmovge
test
aas
xor
icebp
scas
scas
fstpl
imul
dec
shll
aam
cmpsb
loope
xor
arpl
outsl
repz
js
data16
fs
cwtl
mov
cltd
jmp
imul
dec
orl
pop
dec
loope
xchg
sti
movsb
cmpb
jecxz
dec
xchg
xor
fstpl
xor
mov
mov
sub
aad
mov
cld
adc
mov
jns
xor
sahf
ret
data16
push
pop
imul
push
fadd
mov
mov
xor
ljmp
cmp
out
jge
rolb
or
jno
sarb
call
cmp
push
sbb
cmpsb
jge
inc
ret
jno
pusha
xchg
call
sbb
pop
mov
xchg
lcall
sbb
cmpsb
ficoml
fwait
adc
cld
cmp
sbb
es
xor
and
mov
stos
fistpll
aaa
adc
mov
fdivs
push
inc
jne,pn
cmp
ret
in
push
sarb
scas
aam
shld
vmovaps
mov
test
and
inc
fisttpl
sbb
adc
in
sub
in
insb
push
push
xor
lock
cmp
divb
mov
out
mov
test
cwtl
mov
repz
fwait
lcall
in
fsubl
pop
xchg
pop
pop
test
xchg
mov
push
shlb
xchg
inc
and
xor
sub
mov
outsl
adc
sub
pop
add
loope
push
mov
rcr
dec
stos
and
jnp
jo
aaa
sub
rcrb
pop
ja
mov
cmp
repz
sbb
push
xchg
push
inc
cs
lcall
add
repz
icebp
sbbl
movsb
xor
jns
xor
fsubrs
adc
jae
aam
dec
fsubrs
in
mov
fucomi
clc
js
sub
sbb
sbb
xchg
fs
push
and
xchg
lods
nop
sbb
into
dec
xor
popa
sub
lcall
rorl
push
mov
xor
xor
xchg
aas
pop
mov
mov
mov
imul
jle
dec
jno
dec
jne
jge
lret
rcrb
jno
mov
mov
arpl
push
and
xor
sub
icebp
sahf
aam
das
aas
test
sub
das
int3
pminsw
xor
dec
jbe
mov
shl
jne
nop
mov
jns
mov
jno
mov
xchg
mov
daa
mov
popf
cmp
mov
or
enter
mov
cld
mov
xchg
aas
lahf
imul
imul
mov
mov
or
ss
xchg
mov
loope
arpl
fimull
jne
es
and
mov
test
cltd
hlt
js
push
adc
hlt
push
jae
int3
in
xlat
xchg
mov
popf
inc
mov
or
testl
or
mov
dec
out
mov
pop
bound
sar
push
dec
xchg
inc
movsl
sarb
jnp
jecxz
data16
mov
sub
push
and
pop
add
loope
jle
or
gs
mov
in
cmp
mov
imul
inc
mov
sub
stos
push
int
or
adc
or
push
clc
aam
push
and
mov
icebp
fs
mov
add
add
or
mov
fsubrs
mov
pusha
movsl
pushf
insl
test
sub
mov
jbe
daa
adc
out
loope
lret
test
cmp
sahf
hlt
lret
pop
adc
shll
aas
push
or
lret
lret
and
leave
outsl
push
adc
jno
loop
xchg
pusha
popf
ret
aas
fcomp
or
rclb
sbb
stos
mov
in
adc
lods
in
lret
push
xor
icebp
cmpsl
sub
xchg
js
cmp
loope
sub
sbb
sbb
lea
xor
out
les
dec
pop
stos
movsb
ret
popa
xor
add
add
cmp
cmpsb
jg
mov
jae
out
and
add
repnz
add
arpl
or
xor
xchg
jb
mov
or
pop
or
loopne
mov
in
out
jo
mov
mov
test
push
int3
stc
pop
push
cli
sti
push
icebp
test
jp
inc
mov
sub
mov
dec
push
gs
pusha
jg
aam
cmc
outsl
mov
and
aad
lock
js
mov
adcl
aas
int3
sti
and
movsb
sub
in
mov
jne
leave
ljmp
mov
lock
inc
add
test
inc
insl
inc
mov
cmpsb
pop
cmp
shll
jmp
lret
add
pop
mov
lahf
dec
test
in
into
sbb
in
pop
push
push
lcall
inc
out
push
xchg
jmp
mov
lods
ja
jg
jo
aad
movsl
xchg
push
ret
inc
adc
iret
pop
mov
in
mov
je
pop
pop
les
inc
dec
sti
aaa
cmp
scas
pop
fsts
xchg
sub
stc
cli
push
lcall
shll
stc
rol
xor
pop
outsb
call
insl
and
mov
shll
add
loop
push
icebp
test
or
dec
rcrb
sub
cmpsl
mov
js
and
repnz
js
mov
and
jmp
push
xchg
cmpsl
out
sub
addr16
ficomps
enter
lret
and
cs
inc
mov
aas
or
mov
popf
dec
int3
pop
dec
cltd
mov
mov
fbld
lock
push
jmp
add
fnsave
mov
loope
xor
stos
iret
call
mov
lock
jae
adc
pop
mov
inc
cmpb
aas
int
adc
cmp
inc
sbb
and
je
daa
out
cld
sahf
jnp
rcr
jecxz
iret
popl
pop
in
lods
in
cmp
xor
popf
test
push
fildll
push
push
xor
add
ficomps
push
loopne
lahf
fsubs
mov
adc
inc
stos
insl
xor
aaa
push
rolb
pop
imul
psubsw
push
shl
cld
pop
mov
sub
imul
das
pop
pushf
cli
es
sbb
sbb
mov
dec
or
ret
adc
inc
pusha
pop
and
rcrl
sti
pop
out
cs
pushf
ja
push
jp
xchg
mov
push
adc
sahf
stc
sub
jnp
mov
mov
imul
cld
in
push
shr
fsubs
negb
pusha
adc
push
mov
int3
and
mov
movsb
jmp
push
fwait
sti
sub
popa
pop
dec
cld
pop
inc
xchg
and
mov
jne
pop
out
lds
add
or
dec
imul
mov
arpl
mov
out
jns
scas
imul
cli
adc
xchg
mov
jl
test
hlt
fwait
test
cltd
xor
dec
push
cmp
jmp
rcl
cmpl
adc
mov
jge
lods
pop
inc
lods
mov
xchg
cmp
xor
fwait
int3
sbb
cmpsb
gs
sbb
cwtl
rcr
test
movsl
test
sbb
or
fnstenv
and
cli
xor
scas
cltd
inc
not
lea
mov
mov
js
out
jne
movl
pop
loope
adc
cmp
mov
outsl
mov
aam
mov
aam
cmp
or
popa
nop
jmp
lcall
filds
cmpsl
frstor
aas
imulb
in
mov
in
xor
mulb
mov
cmp
and
pop
add
add
mov
lea
ret
lahf
xor
lds
adc
test
mov
sub
jmp
lods
mov
sub
ja
stos
jle
push
cmp
xchg
imul
punpckhwd
jb
icebp
mov
popa
jno
pop
push
out
clc
fwait
push
js
in
pop
popf
mov
adc
mov
mov
enter
fmulp
or
movsl
pushf
cs
jno
push
in
mov
mov
sbb
inc
xor
cs
push
roll
mov
pop
popf
mov
scas
lods
mov
jns
aas
and
loope
data16
xchg
movsb
dec
add
mov
sub
bound
pusha
cmp
movl
add
dec
add
add
add
clc
pminsw
idiv
repz
lret
add
sbb
jecxz
add
add
add
psubsb
imul
mov
lcall
cmp
lcall
flds
cmpsb
push
outsb
or
sub
ret
stos
orb
aaa
int
inc
notl
pop
mov
xchg
mov
lds
mov
cmc
push
pop
int
fdivl
je
movsl
pop
cwtl
xor
dec
aas
sub
sbb
mov
fdivrl
stc
ficoms
push
or
inc
ret
or
test
mov
push
cmp
sub
inc
adc
sub
mov
jp
mov
sbb
scas
pop
data16
dec
mov
in
mov
xchg
lcall
inc
decl
inc
push
pop
in
imul
sar
frstor
pop
inc
or
test
pop
sar
aad
xlat
add
stos
jne
lcall
bound
xor
pop
loop
inc
clc
ss
bound
jnp
mov
lahf
add
mov
mov
fcompl
jp
das
xchg
dec
das
stc
push
add
push
push
add
lock
and
mov
das
inc
faddl
insl
ret
mov
adcl
mov
push
jl
lods
repz
rorb
loope
sbb
lret
leave
cmp
pop
jl
fstps
mov
shll
add
pop
or
cs
jns
push
mov
push
mov
decb
aad
loope
in
aaa
add
mov
mov
xchg
jae
mov
out
mov
loop
stc
inc
and
push
pop
cli
loopne
es
or
mov
test
test
cld
hlt
pusha
inc
mov
push
sbb
arpl
xchg
cmp
pop
test
xor
ja
xor
lods
flds
pop
inc
fldcw
loopne
adc
and
in
adc
mov
inc
imul
lds
out
pop
or
stos
jne
fsubs
dec
int
sub
mov
add
sbb
jns
jp
sbb
cmp
mov
out
adc
jp
cli
in
adc
in
push
dec
xor
push
cmp
push
popa
mov
ja
xor
fstl
adc
jmp
sub
mov
loopew
or
xor
and
xlat
and
rolb
pop
jge
pop
hlt
and
pop
lcall
xor
jb
repnz
jo
dec
rcll
add
sbbl
mov
add
jecxz
fwait
and
shlb
jge
ds
inc
mov
sbb
sub
les
aam
lahf
fdivs
outsb
stc
int3
jne
inc
jl
dec
and
ljmp
add
jp
cmpsb
cmpsl
mov
inc
and
sub
mov
xchg
mov
shrb
inc
ja
imul
xor
lcall
fistpl
stc
outsl
push
push
inc
and
mov
inc
lcall
rol
ss
sub
cli
andl
lea
test
mov
call
clc
int
fwait
xor
pop
push
fs
jmp
int
lds
adc
fs
push
stos
clc
bound
ss
pusha
inc
adc
adc
movsb
xchg
pop
test
out
cmp
lods
mov
inc
ret
xor
xchg
mov
dec
mov
add
xchg
mov
inc
push
sbb
insb
fnsave
pop
std
fidivrs
cltd
in
pop
mov
popf
inc
mov
push
pop
xor
pop
scas
lahf
fadds
pop
push
or
shll
and
fs
xchg
pop
jle
jns
xor
xor
push
int3
loop
mov
xchg
sbb
dec
test
sahf
ret
jbe
std
cli
push
mov
scas
fimuls
repz
or
stc
adc
cmp
cld
xchg
sbb
push
mov
adc
adc
pop
lock
mov
push
bt
add
or
clc
cmp
mov
mov
and
insb
mov
inc
sbbb
repz
push
jo
imul
mov
faddl
adc
and
shll
aam
dec
dec
movsl
bound
int3
aas
fnsave
addb
shrb
scas
pop
add
movsl
movsl
hlt
xor
in
xchg
push
push
ficomps
sahf
sub
add
ljmp
mov
push
xor
idivl
push
cmp
pop
cmp
add
add
add
call
jnp
sarl
cltd
test
inc
call
add
jb
das
jmp
lahf
cmp
fsubl
push
dec
push
orb
js
jle
fisubs
adc
push
mov
and
les
push
xchg
adc
dec
hlt
xchg
cli
movsl
popf
dec
pusha
xchg
pop
cmc
hlt
push
or
cmpsb
in
push
cmp
fnsave
loopne
mov
and
adc
push
divl
test
pusha
dec
sahf
pop
and
xchg
into
pop
push
es
push
pop
jae
dec
sbb
inc
dec
decb
out
lcall
gs
loope
or
xorb
jo
dec
xchg
fimull
cmc
fwait
push
pop
js
push
dec
sbb
nop
lock
or
sbb
aad
or
cltd
dec
xor
popf
push
lods
mov
lock
repnz
jne
and
and
xor
sub
mov
cmp
adcl
jns
inc
in
xchg
and
sbb
outsl
imul
dec
mov
fwait
roll
ss
pop
push
arpl
push
nop
in
movsb
or
xor
sub
cmpsb
loop
cmc
movsl
negl
fucomip
mov
mov
fwait
or
jmp
in
push
repnz
adc
fs
xchg
jmp
mov
xor
js
test
pop
mov
andl
pop
xor
mov
fdivl
xor
mov
adc
mov
repz
dec
dec
add
xchg
shrl
push
stc
pop
sbb
lds
mov
lcall
mov
inc
imull
fs
inc
and
mov
jo
cmp
sahf
es
pushl
xlat
fldenv
dec
cmc
dec
and
icebp
sahf
out
clc
lahf
push
xrelease
xor
push
sbb
sbb
js
mov
and
fcoms
ss
mov
inc
in
out
push
push
inc
sbb
dec
daa
jle
xor
sti
adc
jg
jns
pop
mov
mov
fidivrl
sub
pop
dec
jbe
push
sbb
in
mov
push
pop
and
pop
jle
or
mov
jne
push
or
cmc
dec
fwait
or
pop
mov
push
fisubs
cmc
xchg
xor
lods
adc
xor
xor
je
stos
cmc
ja
leave
mov
mov
jp
fistps
outsl
pop
test
lahf
leave
in
iret
or
and
mov
addr16
pop
out
cld
or
xor
xabort
mov
and
add
flds
cwtl
into
lds
xchg
push
aam
add
mov
mov
and
loopne
in
int3
mov
jle
imul
pop
jae
adc
push
push
mov
in
in
pop
mov
xchg
lcall
sub
mov
dec
nop
les
movsb
and
cwtl
push
and
dec
inc
push
test
cmp
jecxz
shrl
mov
and
dec
call
xor
inc
arpl
hlt
bound
pop
mov
adc
dec
aam
cmp
xchg
mov
mov
push
jmp
sbbl
fwait
test
cmp
push
push
mov
ja
out
dec
in
stos
jb
movsl
idivb
xor
fcomps
jb
lret
ds
jb
mov
xchg
sti
mov
sbb
or
out
dec
insb
lret
mov
les
sub
test
fldt
insb
fstpl
je
fidivrl
pushl
rcrl
pushaw
popf
notl
pop
sbb
push
sbb
in
sub
js
roll
iret
sbb
insl
xchg
scas
loop
gs
stc
mov
decl
ret
sub
out
das
outsb
out
cmpsb
daa
orb
cmpsb
lret
je
xchg
mov
stc
dec
sub
mov
cwtl
scas
sbb
sub
mov
sub
mov
adc
inc
mov
icebp
cs
movsl
pop
das
add
js
out
bound
rcrb
dec
push
cld
push
outsb
mov
jne
mov
mull
mov
xor
je
push
cmpsl
imul
sbb
pop
add
sub
in
imul
aam
test
add
scas
ret
pop
cmp
mov
push
or
xor
dec
das
add
sbb
addr16
and
stc
cmp
bound
or
adc
pop
sbb
loope
negb
mov
mul
stos
fcos
fcoms
sub
mov
mov
pop
orb
lret
sub
jnp
mov
add
add
pop
test
adc
sub
xor
add
repnz
add
mov
fldcw
rclb
sbb
ror
jo
or
and
loopne
insb
cmc
outsb
jnp
pslld
in
mov
ret
scas
aaa
in
stc
test
jge
push
dec
ja
lret
test
inc
dec
aam
std
in
jb
pop
arpl
push
sbbl
test
or
and
push
adc
sub
inc
mov
ficoml
lret
lret
cltd
sub
push
test
sti
or
sbb
cmp
push
not
rolb
dec
jb
fcompl
inc
push
xor
mov
and
inc
aad
outsb
cmpb
or
fcompl
negl
out
imul
cwtl
in
and
sub
repnz
mov
or
cmc
faddp
das
mov
cwtl
aad
cmp
pop
aas
pop
and
test
imul
xchg
and
mov
sub
xor
fimull
mov
adc
push
mov
and
fwait
je
mov
aaa
xchg
xchg
nop
rcr
lcall
dec
dec
sbb
pop
adc
push
les
popa
sbb
mov
cmpsl
mov
pusha
std
ja
fstps
or
mov
sub
push
sub
data16
xor
mov
xchg
and
add
aad
sub
pusha
icebp
mov
mov
sbb
repnz
lock
jmp
jns
dec
ja
je
inc
shrl
xchg
outsb
fstpl
fwait
and
sbb
enter
test
ds
jle
pop
adc
icebp
rol
push
stos
dec
mov
shlb
xchg
mov
mov
dec
repz
repnz
je
daa
xor
mov
dec
push
xchg
pop
dec
sub
lods
cmpsb
aad
sub
xor
sbb
jbe
push
xor
out
shlb
sub
inc
xchg
push
insl
jno
push
pop
fiadds
out
fs
neg
sub
pop
in
in
into
mov
add
xor
lret
sbb
inc
lret
adc
imul
jno
mov
cmc
lods
and
out
mov
js
das
dec
jbe
iret
adc
cs
and
cmp
inc
clc
iret
cmpsb
xchg
dec
jge
pusha
sbb
fdiv
add
inc
pop
fistpll
pushf
inc
clc
fwait
mov
arpl
mov
mov
mov
adc
add
mov
in
imul
cmp
jb
or
push
sub
add
lods
negl
enter
jp
add
and
shll
pop
mov
mov
test
into
fs
sbb
cmpsb
shrb
mov
push
jo
dec
sbb
enter
call
loope
jo
xor
ds
ret
ja
dec
in
js
icebp
add
sar
es
sub
ss
pop
pop
and
ja
pop
test
dec
sub
or
ljmp
sti
mov
aaa
fisubrs
mov
mov
js
ljmp
cmpsb
xchg
dec
lcall
mov
sub
or
mov
idivb
cmp
pop
cwtl
push
jle
xor
cltd
push
sbb
pop
inc
imul
outsl
sarl
xchg
hlt
pop
outsb
arpl
daa
fimull
inc
push
in
lret
push
sub
fnop
data16
nop
daa
add
jmp
ret
imul
cmpsb
mov
sub
dec
sbb
or
xchg
cmp
push
xchg
and
cmp
je
fstpt
fsubrs
pushw
dec
dec
ja
out
mov
sahf
pop
test
ficoms
in
aaa
or
cmp
sbb
sub
loopne
xorb
shlb
subb
ret
ss
enter
loope
mov
stos
fbstp
ljmp
and
inc
xchg
and
repz
out
mov
and
jl
lods
enter
lahf
or
into
sub
int
cltd
pop
scas
mov
pop
aam
xor
jb
gs
stos
out
imul
arpl
pop
divb
flds
jg
ljmp
aas
push
test
xor
mov
xchg
xor
push
in
mov
push
inc
pop
mov
repnz
repnz
stos
push
lods
stos
dec
popa
fdivs
push
movsl
add
add
add
fisttps
mov
adc
lret
add
and
add
add
pushf
mov
add
jecxz
int3
pop
leave
data16
add
fcmovu
fldt
outsl
icebp
xchg
xchg
fisubrl
insb
cmpsb
pop
fs
imul
mov
and
popf
lret
mov
xor
fdivrl
repnz
or
xor
in
or
daa
mov
mov
sub
add
or
jns
sbb
adc
out
cli
fsts
scas
adc
sub
mov
or
and
jae
adc
cmp
mov
cmp
adc
insl
imul
loopne
ret
lds
mov
in
stos
mov
xchg
jge
sbb
jmp
insb
pop
pop
xlat
ret
add
stc
add
loopne
fstpl
cmp
mov
mov
outsb
decb
mov
cli
popf
cmp
mov
xchg
lahf
fimuls
push
and
das
dec
cmp
dec
pop
mov
xchg
pop
and
cmp
fsubrs
pop
nop
adc
mov
fdivrs
xor
mov
push
insb
or
or
or
mov
and
lret
pop
sti
ja
sbb
repnz
leave
outsb
mov
cmp
adc
mov
in
movsb
mov
call
jo
imul
sub
aaa
mov
popa
adc
cwtl
into
push
add
pslld
loope
pop
in
test
and
test
pop
push
adcl
stos
dec
lods
orl
pop
cltd
aaa
in
xchg
mov
push
or
cmp
dec
xor
outsb
push
cmp
iret
push
cmp
mov
jge
xor
jmp
sub
jecxz
add
or
mov
testl
mov
lcall
cmp
imul
sbb
add
xor
test
jo
bound
stos
jnp
repnz
pop
call
mov
in
pusha
mov
dec
sub
lret
xchg
adc
clc
cld
lock
mov
cmpsl
xchg
shrb
dec
gs
jno
push
mov
pop
adcb
mull
movsl
dec
cmpsb
lahf
fisttpll
lea
sub
arpl
xchg
dec
xor
sti
push
pop
fidivs
and
sbb
les
jnp
sbb
dec
xor
lcall
popf
enter
xorb
stc
insl
aaa
xchg
mov
js
mov
popl
in
mov
mov
add
add
sub
pop
xchg
xchg
xor
das
mov
mov
in
add
xor
pop
cmpsl
cld
aaa
sub
mov
fmul
xchg
or
data16
xchg
mov
loop
jne
cli
lods
imul
sbb
mov
sub
jmp
xor
cmp
or
mov
sub
lret
mov
loopne
sub
sbb
mov
mov
and
push
sbb
int
jmp
mov
js
pop
rep
cmp
jnp
mov
xchg
adcl
or
fisttps
fs
test
flds
jecxz
hlt
fsubl
lcall
ja
dec
and
jno
mov
shr
xchg
stos
aaa
jge
pop
mov
dec
out
push
sbb
jmp
sti
xchg
iret
sub
cli
dec
jb
sarb
and
cld
test
mov
jbe
aam
mov
sub
sarl
adc
add
mov
aam
cmpsl
inc
mov
cmp
add
imul
xor
sub
ja
pop
jecxz
xchg
sub
mov
fmuls
cmpsb
sbb
icebp
ds
mov
sub
outsl
mov
adc
in
mov
aam
sbb
push
pop
in
lahf
or
mov
push
push
gs
xor
xchg
js
inc
sbb
cmp
pop
movsb
ljmp
repz
test
or
sbb
loope
js
inc
rolb
mov
mov
or
movsb
push
add
stos
mov
and
ljmp
sbbb
xlat
das
or
xchg
loope
mov
je
xchg
cmc
dec
dec
imul
sub
pop
pop
sbb
push
bound
mov
shll
mov
xchg
int
add
add
add
mov
jno
cmc
divl
mov
stc
pop
testl
add
pop
inc
mov
or
std
xor
inc
adc
dec
cltd
xor
imul
push
pop
mov
imul
popa
mov
stos
sbb
test
rcrb
test
outsb
movsl
mov
jbe
lods
and
lds
xchg
dec
inc
popa
ja
jns
arpl
push
aam
out
repz
out
fwait
push
adc
xchg
pop
mov
xchg
dec
sti
jns
lods
inc
inc
sbb
lock
push
stos
iret
mov
push
mov
xchg
aaa
push
int
jo
fs
jp
jg
or
mov
pop
jns
inc
mov
inc
mov
test
or
aad
mov
ds
testb
push
mov
call
push
imul
mov
pop
rcll
dec
lret
stos
out
aaa
cwtl
lea
sbb
stos
lock
cmp
add
cmp
insb
mov
xchg
das
push
addr16
aam
in
loopne
dec
js
lahf
hlt
sti
sbb
add
add
adc
push
into
std
push
jnp
je
cli
mov
stos
stos
cli
and
enter
pop
mov
dec
jg
ret
test
inc
push
loope
xchg
mov
es
js
jnp
and
mov
das
orl
mov
push
das
sub
adc
mov
sti
cwtd
add
pop
or
test
cwtl
pop
lods
mov
fs
test
or
jp
and
push
xor
sbb
stc
pop
bound
adc
aas
pushf
and
les
shl
nopl
pop
inc
push
inc
inc
scas
push
mov
fstps
cli
cltd
jg
mov
dec
cmpsb
sub
add
and
adc
push
arpl
stos
iret
js
mov
int
mov
mov
jmp
xchg
mul
or
lds
int
sbb
int
mov
dec
cmp
sub
das
push
andl
jl
xor
out
stc
and
sub
fstpt
add
dec
test
pop
popf
mov
inc
lcall
cmp
jnp
sarl
addr16
dec
sbb
inc
and
cmp
clc
sahf
push
arpl
fmull
push
in
dec
addr16
hlt
scas
xor
xchg
push
jnp
outsb
and
cmp
pop
mov
rorb
fnstsw
pop
test
out
arpl
cmc
fsubl
jecxz
push
rclb
shrl
dec
stos
sbb
pop
push
cmp
popa
test
sbb
andl
or
sub
loop
xor
push
xchg
data16
pop
stc
rcl
popf
mov
jp
jnp
or
sti
outsl
xchg
add
push
dec
aad
jmp
faddl
fstps
sti
jmp
sbbl
js
xchg
pop
roll
mov
add
and
push
stos
jle
inc
add
sub
into
das
test
xchg
xor
pop
mov
pop
mov
cld
cmpsb
pop
gs
addl
or
hlt
in
aaa
sub
pusha
xor
insl
add
scas
cltd
mov
roll
lds
pop
jg
sub
jo
adc
loop
push
push
bound
mov
in
std
sbb
jle
push
jl
pop
jle
and
xchg
push
ret
add
mov
push
sar
mov
into
insl
adc
xchg
push
cmp
or
int
and
push
mov
adc
sahf
dec
notl
out
es
test
mov
repz
stos
or
out
iret
lahf
lcall
imul
push
stos
sbb
jno
fs
inc
inc
sub
les
imul
lea
test
dec
stc
push
pop
xchg
and
cmp
xchg
and
cmp
xchg
mov
xchg
std
lods
mov
pop
rcrb
dec
mov
lods
cld
and
iret
mov
push
jb
test
lods
pop
movsb
out
inc
mov
jecxz
outsb
xchg
add
out
jle
dec
insb
dec
xchg
push
repnz
inc
in
xchg
lahf
popf
movsl
push
xchg
mov
fiaddl
push
sbb
test
mov
pop
sub
mov
mov
loope
ror
mov
lock
mov
mov
add
lcall
pushf
inc
fwait
in
fmuls
add
add
ret
inc
fisttps
lahf
int
push
psllw
mov
cld
add
repnz
add
aam
or
mov
ret
fidivrs
mov
ret
rcll
notl
mov
gs
test
inc
lods
sbb
js
xlat
jb
xor
ret
aam
xchg
popa
mov
mov
fwait
mov
xor
push
and
xchg
push
and
pop
nop
sub
push
arpl
gs
jecxz
adc
and
fmulp
jle
dec
add
imul
adc
lcall
scas
addl
fidivrl
push
cs
test
out
or
pop
xor
push
shl
or
lahf
xor
xchg
inc
aaa
aad
jae
sub
mov
sub
add
lods
sbb
jmp
outsb
push
cmpsl
mov
out
or
jp
insl
out
faddp
insl
shlb
jmp
add
sub
test
leave
call
loope
jmp
add
mov
and
movsb
cmpsb
xor
or
lods
pop
in
cmp
ljmp
sbb
dec
es
jo
das
sbb
jecxz
lretw
stos
cld
test
test
inc
xchg
into
mov
mov
int
loop
test
mov
pop
ss
stc
jge
addr16
lcall
test
xchg
mov
aam
loope
sbb
and
das
or
shr
mov
dec
cltd
sbb
xchg
mov
push
push
dec
push
push
mov
dec
cmp
call
jmp
sub
scas
push
adc
scas
int3
mov
nop
or
inc
add
push
mov
int3
cwtl
push
jb
jl
sub
pop
jp
int3
pop
pop
mov
mov
inc
leave
fwait
repnz
je
xchg
js
lods
xchg
mov
and
add
xchg
pop
mov
mov
pop
mov
add
rolb
iret
test
into
mov
or
in
jmp
xchg
in
pop
inc
lock
and
xor
inc
pushf
jge
mov
loope
adc
pop
push
out
adc
push
scas
dec
mov
enter
adc
or
js
call
je
or
ss
inc
hlt
pop
push
add
sbb
dec
adc
xchg
in
push
aas
jb
fisttpll
or
aas
xor
je
push
gs
in
lods
pop
in
jae
in
aad
icebp
in
cmc
rclb
inc
xchg
js
xchg
dec
and
loop
push
sbb
je
stc
sbb
test
int
aaa
xor
and
fdiv
sub
mov
outsl
fucomp
dec
fnsave
inc
ficoml
mov
cmpsb
push
xchg
push
fdivs
gs
push
notb
decl
hlt
or
xlat
sub
loope
jle
or
frstor
cmp
test
int
lods
mov
rol
es
iret
mov
mov
cltd
pushf
jge
push
push
mov
pusha
xor
or
dec
sbb
imul
inc
gs
mov
in
cmp
fmuls
clc
inc
mov
jmp
out
scas
test
inc
xchg
into
inc
int
sarl
dec
xor
sarb
out
aaa
aam
xchg
mov
and
sbbb
rorb
cmp
xor
mov
jl
inc
mov
pop
dec
push
cwtl
xor
push
xchg
add
sbb
outsb
add
or
pop
ret
test
pushf
orl
sub
adc
pop
sbb
in
cmpsb
adc
xor
xor
mov
mov
push
addr16
mov
lcall
jno
jns
sahf
jbe
insl
cmc
and
in
push
cmpsb
push
pop
bound
mov
mov
cmc
sbb
cmp
out
out
sahf
jb
sbb
cmpb
cld
pop
pop
sub
pop
dec
push
add
dec
out
jns
mov
mov
test
in
fidivl
hlt
xchg
cmp
out
mov
add
das
cmp
stc
xor
popf
sub
or
aam
pop
mov
stc
fldt
push
xchg
cmp
test
xor
leave
popf
repnz
cltd
and
push
cs
mov
addl
imul
jle
outsb
mov
adc
sahf
std
roll
fistpll
imul
push
shl
repz
jb
or
ficoms
and
dec
imul
daa
and
rclb
out
xchg
jl
dec
add
inc
addl
add
call
aas
popa
adc
andl
add
repnz
add
insl
cli
mov
xchg
pusha
mov
aam
sahf
mov
xchg
mov
push
aaa
imul
loopne
push
test
mov
sub
inc
roll
std
clc
mov
stos
scas
and
dec
pop
dec
jne
cmc
push
cmc
sub
rcrb
cli
xchg
sbb
dec
fnsave
fiaddl
cwtl
and
fs
pop
jg
jns
inc
xchg
push
test
fisttps
and
aaa
in
cld
fidivrs
mov
inc
mov
imul
mov
xor
sbb
hlt
pop
push
sti
push
xorl
fisttpl
xchg
movsl
and
jl
pop
jnp
enter
bound
cli
push
inc
inc
lcall
sbbb
push
andl
sub
or
pop
jb
scas
cwtl
iret
cmp
pop
mov
and
pop
cltd
out
pop
xchg
jmp
cwtl
mov
jo
clc
lds
xchg
dec
cmp
jno
inc
jge
sbb
cmp
sub
push
cmp
stc
mov
jbe
jnp
jbe
icebp
pushf
sbb
cmp
mov
push
cmp
cltd
jbe
das
mov
sahf
outsl
pop
ds
subl
add
add
jns
pop
lods
sahf
and
xchg
mov
jge
cmp
or
adc
or
jmp
xlat
insb
or
daa
pop
aad
push
lret
insb
sub
ds
inc
test
xor
into
xchg
xchg
add
and
je
xchg
mov
icebp
inc
insl
icebp
jg
in
add
and
fidivrl
jae
mov
adc
adc
adc
das
pop
jmp
inc
bound
fimuls
fnsave
jno
pop
pop
stc
mov
fwait
outsl
xchg
mov
push
jecxz
jo
ficompl
mov
imul
sbb
fstpt
inc
in
neg
imul
loopne
std
push
rorl
in
xlat
adc
fs
cmpsb
cltd
mov
jge
dec
sbb
cs
mov
ret
sti
aam
std
mov
int3
jno
aaa
inc
cmpsl
adc
imul
mov
dec
in
cmp
fnsave
dec
popf
in
mov
xchg
fistpl
ror
lcall
pushl
cmp
and
mov
push
push
sub
aaa
lods
cli
and
lea
pop
aaa
out
js
ret
inc
and
ja
test
lea
imulb
aaa
inc
push
jl
and
lahf
leave
jecxz
roll
push
adc
nop
xchg
push
daa
dec
pop
dec
rolb
and
repz
fxch
stc
inc
or
add
outsl
pop
inc
lret
inc
mov
jle
mov
or
sub
icebp
add
mov
adc
scas
shl
mov
push
cmp
mov
push
lea
inc
cmp
add
les
xor
jo
fsubrs
imulb
push
mov
pop
jge
insb
imul
xor
sbb
not
insl
mov
sbb
push
dec
lret
pop
aas
fwait
mov
out
mov
shll
xlat
loopne
jg
and
shll
decl
jns
lcall
divb
or
stos
mov
scas
add
stos
adc
enter
push
pop
xchg
enter
movsl
clc
jo
sbb
xor
push
jne
or
lds
cmp
lahf
roll
hlt
jne
sbb
and
sub
or
push
pop
nop
jp
daa
leave
es
mov
cmp
mov
jne
loope
push
gs
xchg
out
push
push
pop
pusha
ds
sbb
and
cmp
mov
mov
scas
sub
jne
arpl
imul
das
jl
inc
loope
clc
das
cs
jp
rol
add
cmp
dec
call
popa
out
sbb
mov
sahf
bound
dec
and
movsb
push
jmp
xchg
je
xchg
and
mov
jnp
xchg
mov
hlt
fadds
in
rorb
sub
dec
jmp
shlb
inc
rorb
xchg
fidivl
xchg
cmp
das
sub
xchg
repnz
mov
test
shrb
aaa
dec
and
xor
stos
or
inc
add
push
cwtl
push
add
and
pop
push
pop
aam
mov
add
int
inc
push
sub
mov
es
imul
sbb
push
pop
mov
adc
notb
xor
add
add
fidivrs
int
inc
xchg
in
add
add
fwait
popa
dec
lods
iret
and
cwtl
or
pop
add
out
pop
sar
aaa
cmp
loope
push
sub
add
inc
adc
daa
movsb
pop
clc
stos
mov
paddq
es
clc
mov
jmp
test
in
iret
cmp
or
pop
das
test
cmp
pop
add
lea
pushf
outsb
sbb
das
adc
cmpsb
lcall
imull
mov
fidivrs
xor
or
pop
test
push
sti
dec
pop
mov
hlt
ret
lcall
in
mov
cwtl
ud0
js
sub
loope
in
out
lods
mov
pop
popa
xor
lret
lcall
inc
pop
add
sarb
inc
lea
roll
push
in
cmp
icebp
mov
movsb
lods
sbb
invd
movsb
in
dec
cmp
push
cmp
out
adc
int3
hlt
mov
or
cmp
jg
mov
bound
mov
aam
std
gs
mov
xchg
inc
mov
cltd
mov
jecxz
mov
mov
mov
push
je
aad
out
lcall
roll
push
cli
pop
clc
add
or
inc
lret
jmp
xor
mov
xchg
cli
mov
pop
inc
outsl
xchg
popa
loope
gs
cmp
in
roll
mov
or
adc
sub
test
inc
jns
and
dec
in
add
ljmp
or
dec
cmp
lods
lahf
dec
xor
add
jbe
sub
jl
mov
inc
mov
cmp
dec
pop
fldl
inc
cmpsb
jp
xorl
mov
gs
mov
pop
aaa
add
mov
sub
sub
mov
test
push
jae
add
dec
dec
mov
lods
lock
movsl
mov
rorl
lods
mov
and
sahf
and
adcb
stos
orb
cmp
or
cmpsb
push
clc
and
into
fisttpll
and
mov
inc
dec
nop
mov
jbe
test
test
mov
fiadds
aas
xchg
stos
push
cmp
jo
mov
jg
pop
popa
push
xlat
add
jle
inc
les
jae
sub
cmpl
xor
pop
cli
and
mov
xor
pushf
xor
into
imul
add
repz
test
sub
sub
les
insl
mov
stc
inc
sub
test
insb
sbb
mov
notb
pop
push
push
inc
loop
movsb
int3
cli
push
lret
xor
xchg
or
dec
jns
mov
pop
add
jecxz
fwait
sti
xchg
push
dec
stos
addr16
mov
xorb
loope
mov
nop
xchg
test
or
bound
push
fisttps
pop
or
pop
test
cld
inc
lahf
cs
sbbl
jnp
mov
xor
cltd
cmp
pop
inc
daa
or
xchg
pop
sbb
fimuls
cmp
hlt
nop
cmp
in
add
push
xor
mov
iret
xchg
mov
sbb
cli
lahf
test
mov
bound
sub
push
add
xor
xor
add
lock
xchg
xor
pop
push
lds
imul
jno
leave
hlt
xlat
xchg
das
jmp
je
xchg
inc
out
addl
xlat
fwait
sti
push
repnz
pop
jbe
dec
push
cwtl
std
xlat
daa
cld
adc
and
sub
jle
pop
adc
pop
or
jecxz
xchg
aas
repz
cmpsl
push
loopne
pop
ja
push
arpl
inc
das
cmpsl
jle
sbbl
sbb
xchg
mov
fdivl
idiv
imul
mov
das
sti
aad
movsl
adc
cltd
lret
lret
clc
leave
push
sub
inc
xor
push
cmp
in
ret
push
lock
fs
sarl
add
aad
arpl
lret
int
or
out
insb
cld
mov
pop
in
add
test
xchg
sbb
fldln2
or
push
or
mov
xchg
sbb
sub
fisubrs
sbb
push
xorl
mul
idivl
mov
dec
cli
cmp
daa
jbe
cmpsl
cmp
mov
jmp
movsb
mov
insb
ljmp
push
fldcw
cltd
sbb
add
add
add
std
mov
push
jg
mov
fisttps
add
repnz
add
push
sbb
mov
enter
jl
movl
sub
repz
sub
mov
fsubs
xchg
dec
xchg
lret
mov
xor
outsb
mov
inc
cld
insl
xor
sbb
testb
mov
push
js
pop
push
mov
sbb
xorb
roll
xor
mov
jg
jle
mov
push
lret
mov
xchg
or
jmp
fists
mov
fst
lret
addb
inc
sbb
xor
dec
popa
mov
rolb
mov
loop
ljmp
jae
jae
ret
dec
inc
mov
enter
xor
cmp
shlb
xchg
call
xor
dec
and
mov
fistpl
lock
sbb
rorl
dec
xor
push
and
scas
inc
sub
andps
imul
cmp
mov
imul
or
bound
out
ljmp
dec
pusha
xchg
les
pop
addl
jne
mov
loopne
jo
repnz
jbe
aaa
cmp
lock
repz
or
add
popl
lcall
dec
dec
outsb
pop
dec
adc
mov
and
int3
insb
subl
xor
scas
ja
loop
push
fwait
aad
pop
xchg
cld
push
dec
sub
sbb
idiv
xchg
mov
sub
incb
jmp
iret
xchg
jo
jmp
pop
mov
outsl
xchg
jp
cmpsl
bound
cmp
mov
icebp
hlt
in
vmovddup
mov
and
pop
daa
fadds
mov
push
sbb
rcll
or
mov
push
dec
mov
jl
mov
xor
xlat
stos
icebp
adc
mov
xor
xor
int3
sub
and
je
xchg
jp
dec
mov
and
or
xchg
loope
xchg
aad
mov
cmp
dec
insl
fwait
call
pop
fcompl
or
adc
stos
aas
ds
outsl
cmp
xorl
pop
mov
stc
sbb
lret
or
push
imul
addb
mov
mov
or
stos
stc
je
stc
and
cmp
jno
mov
stc
subl
add
and
psubd
dec
mov
pop
dec
pop
notl
xchg
sub
out
outsb
jle
xchg
ljmp
or
adc
mov
test
jecxz
mov
fildll
mov
xor
jns
enter
jne
ficoml
inc
fwait
sbb
cmpb
movsl
fcmovnu
dec
push
mov
or
xchg
lahf
inc
jbe
mov
mov
mov
ficoml
outsb
push
and
sub
xchg
add
mov
pop
clc
mov
fcoms
imul
sbb
xchg
and
lret
inc
jbe
icebp
insl
sub
ja
test
adc
xchg
adc
fcomp
push
xchg
jno
loope
cwtl
pop
jge
pop
jmp
or
shlb
sar
adcl
in
push
stos
mov
outsb
mov
jbe
xchg
fs
cwtl
in
cmp
and
shll
xchg
pop
loop
fstps
outsb
sub
add
daa
adc
daa
jecxz
rcrl
mov
adc
mov
mov
sub
sarb
shll
dec
cmp
pop
popa
and
dec
mov
push
mov
and
and
fldenv
jns
push
and
or
ret
insl
nop
mov
jl,pn
or
pop
test
or
das
sub
xor
in
mov
in
and
popa
arpl
ljmp
inc
nop
mov
test
fs
mov
rcll
cld
xor
outsb
inc
mov
icebp
daa
pop
jg
adc
sub
gs
hlt
inc
aaa
xchg
leave
lcall
sti
scas
push
nop
outsl
mov
dec
xchg
das
push
cld
lds
gs
dec
sub
add
rcrl
mov
rorl
test
mov
mov
mov
adc
cs
inc
dec
in
repnz
out
cmp
dec
sub
push
mov
ja
fisubrl
add
add
add
lret
in
out
dec
add
sgdtl
repnz
add
cmp
jle
or
pop
std
pusha
mov
push
lret
push
push
xlat
pop
cmp
mov
adc
fdivl
jmp
adc
add
into
fdivl
adc
popf
in
sbb
loope
outsl
js
cmc
push
push
mov
dec
xchg
sub
jnp
out
cmp
xchg
pop
cli
or
pop
shll
hlt
out
pop
cmpsl
std
xorl
mov
cmp
pop
inc
fildl
movb
nop
leave
push
lods
rcl
cmpsb
cld
mov
pushf
inc
jp
lcall
sbb
or
jnp
je
jnp
mov
jp
jmp
imulb
arpl
xor
xor
popf
push
dec
dec
cmp
stos
mov
rcr
xor
push
icebp
add
pop
sub
fists
mov
movsb
pop
xor
mov
icebp
shr
dec
sub
xor
shlb
fwait
std
mov
in
adc
jae
mov
jl
outsl
jbe
negb
ja
scas
xor
in
aaa
mov
rclb
or
or
sub
xor
test
mov
aas
ficompl
mov
jb
and
into
cmpsl
loope
sub
xor
fs
lahf
jp
out
imul
or
pop
cmpb
lock
lock
xchg
add
xlat
push
push
mov
push
fs
leave
lcall
jmp
je
int
mov
push
imul
xchg
mov
sub
sbb
cmp
and
xor
out
add
sub
push
inc
xchg
das
jno,pn
leave
icebp
pop
xor
or
push
mov
aaa
sub
fs
sbb
cld
dec
cli
mov
pop
adc
pop
int3
mov
les
les
lahf
mov
cmp
jmp
dec
paddq
ja
outsb
or
jns
and
decb
sbb
push
add
mov
adc
movsl
out
pop
dec
js
subl
dec
mov
addr16
orb
in
repz
mov
push
add
orl
iret
mov
cmpsl
push
in
shlb
push
lahf
ljmp
nop
mov
jo
into
dec
fs
add
cmc
sbb
add
sbb
and
cli
lock
ds
scas
js
or
xchg
xor
cmp
mov
adc
push
in
loope
gs
mov
imul
imul
mov
sbb
in
ret
add
mov
pop
popa
mov
mov
push
sbbb
loopne
imul
cltd
jae
cld
inc
fimuls
and
push
insl
shll
sbbl
jne
shrl
sub
ja
mov
lods
mov
sub
adc
aad
sub
jecxz
negl
int3
inc
pop
testb
mov
mov
fidivrs
sub
jmp
xchg
inc
jge
jge
sbb
jb
cmp
in
push
rcrb
iret
enter
sub
rclb
popa
adc
shlb
sahf
cmp
negb
aas
int
jo
cmp
fdivl
pop
pop
inc
jecxz
repz
out
mov
int3
xlat
cmc
jno
shl
mov
and
aaa
ss
insl
cmp
jbe
pop
outsb
cmp
insb
out
or
push
add
jno
fimuls
adc
test
stc
mov
fildl
mov
testb
sbb
dec
popl
lods
lock
aad
push
lahf
popf
jecxz
mov
xlat
mov
in
mov
adc
test
pop
rcll
xor
mov
ret
sbb
rcrb
jmp
loopne
in
push
and
push
cmc
jo
or
jnp
divb
and
add
push
bound
mov
aas
jp
pop
sbb
mov
std
hlt
mov
jl
fisttps
test
and
mov
xor
nop
stc
xorb
inc
loopne
cmpsl
and
xchg
ja
popf
fmul
and
mov
jns
inc
xchg
or
and
sub
fstpl
jns
mov
add
ja
rcll
jl
inc
add
xor
fwait
adc
stos
xchg
dec
popa
xchg
jns
dec
mov
ds
movsl
jb
push
adc
int
sub
mov
movsb
lahf
lock
loope
add
add
adc
je
std
mov
rclb
adc
add
add
add
jmp
xchg
outsl
dec
fcmovb
push
stc
lcall
pop
test
push
mov
push
xchg
push
pop
sbbl
pusha
pop
pop
inc
and
mov
lds
inc
pop
cmc
pop
pop
push
daa
xor
xlat
mov
add
and
dec
xchg
adc
mov
ja
push
fsubrs
add
cmp
pop
call
lods
and
mov
call
xchg
sbb
add
lcall
xchg
xor
mov
xor
jmp
andb
iret
sub
arpl
leave
jmp
sbb
iret
aad
lcall
lahf
sbbb
push
xor
mov
xchg
push
std
das
ffree
mov
iret
in
ljmp
repnz
scas
inc
insl
fdivrs
sbb
lods
lods
test
ret
inc
inc
fdivr
mov
pusha
sub
pop
das
int3
dec
fisubs
bound
sbb
sub
and
in
mov
fisttpl
addl
mov
mov
adc
inc
inc
mov
arpl
push
mov
cmp
cmp
stos
mov
icebp
into
ficompl
loope
rorl
bound
movsl
sti
je
sbb
jne
pop
fldl
lds
das
sub
test
sbb
or
dec
aas
test
mov
mov
jae
add
ret
scas
outsl
sub
jo
mov
sub
cmp
cli
lret
rcl
add
mov
push
mov
adcl
xchg
out
daa
mov
xchg
cltd
dec
sub
daa
jo
jne
push
cmpsb
push
int
xor
or
leave
sbb
stos
nop
int3
xchg
addr16
and
data16
mov
mov
cmpsb
dec
je
call
inc
xor
and
mov
lock
xchg
bound
xor
mov
and
outsl
mov
dec
mov
gs
jle
inc
inc
call
xchg
testl
in
sbb
add
fisttpl
popf
movsbl
pushf
sti
pop
mov
xchg
mov
and
xor
jl
nop
cmp
cmp
push
adc
sahf
mov
fiadds
scas
pop
imul
sahf
mov
mov
push
xchg
out
jno
cmpsb
sbb
push
pop
jmp
les
cli
pusha
jbe
stc
sub
or
cmp
and
cmp
fcmovb
pop
sarb
pop
jg
dec
jl
dec
mov
and
push
cmp
jge
daa
cltd
mov
pop
jb
in
jmp
mov
mov
xor
inc
jmp
test
movsb
fucomip
and
adc
loop
xlat
jns
push
mov
xchg
je
pop
xchg
adc
aam
or
shll
sbb
sub
sahf
push
and
cli
push
enter
aaa
pop
or
ja
cmpsb
jne
jb
mov
dec
das
mov
jo
jmp
loopne
push
inc
inc
cmp
test
repnz
mov
jl
iret
xchg
ss
mov
sbb
pop
shrl
mov
xchg
xorl
aaa
addl
xchg
and
loopne
or
shl
push
cmpsb
adc
fidivl
inc
sub
push
pusha
sbb
hlt
mov
adc
loop
fstpt
mov
dec
repnz
cmp
roll
mov
add
into
popa
inc
test
push
jae
or
mov
call
in
out
lret
jb
push
mov
out
into
stos
adc
jbe
adc
mov
hlt
repnz
sbb
movsl
pop
inc
xchg
fists
test
and
pop
ret
inc
and
pop
push
inc
shrb
pop
shlb
sbb
cli
or
pop
xor
push
sbb
movzwl
add
jb
mov
adc
mov
outsb
xorb
mov
and
cmc
scas
stos
xlat
mov
mov
xchg
ficoms
sub
rorb
mov
ja
popa
mov
jae
fwait
adc
fisttpl
lcall
sbb
mov
cwtl
jae
nop
dec
test
in
ret
push
std
adc
xchg
inc
jne
xor
lods
adc
enter
je
adc
fwait
jne
pop
std
cmc
pusha
sub
sarl
pop
and
xor
outsl
mov
negl
loope
mov
mov
add
int3
dec
pop
inc
jo
add
add
add
in
in
or
and
repnz
add
or
lods
inc
mov
idivl
ljmp
cmp
mov
rclb
mov
and
jle
imul
sub
rorl
std
inc
mov
int3
or
and
insl
stos
xor
mov
mov
add
sbb
imul
je
xor
aaa
icebp
je
jne
divb
shrl
jl
out
xlat
xchg
push
cld
popf
lods
cmp
dec
test
add
and
scas
push
pop
sub
push
jb
xor
sbb
cs
xchg
rep
jle
rcrb
fs
jp
jecxz
js
test
lods
movsl
data16
sbb
or
je
push
jbe
pop
adc
loopne
push
and
movsb
dec
dec
mov
push
push
lea
push
jb
mov
jmp
inc
inc
lahf
repz
inc
movsb
or
pop
xchg
outsl
inc
xchg
push
add
mov
cmpsl
dec
push
sub
sahf
das
inc
test
and
bound
adc
push
fsubl
ss
jo
outsb
ror
aam
push
xor
arpl
in
mov
push
pop
inc
iret
mov
test
and
int
sbb
leave
les
push
in
enter
lea
mov
lahf
rorl
ret
add
out
xchg
dec
lods
mov
xchg
jnp
add
jecxz
adc
and
cmpsl
ss
sbb
push
popa
and
dec
mov
fldln2
push
pop
movsl
sub
cmpl
xchg
int
dec
push
lds
decl
repnz
into
jbe
out
stc
out
das
std
pop
out
lcall
inc
out
cmpsb
mov
add
pop
inc
add
imul
sub
xchg
mov
cltd
inc
popf
iret
in
adc
sub
daa
jns
dec
into
ret
ja
stos
dec
std
sub
xchg
dec
sti
push
out
cmp
test
or
pop
addl
insb
pop
and
pop
pop
pop
jl
fsubl
bound
jmp
daa
and
dec
add
jnp
and
push
and
cli
xor
dec
dec
mov
loopne
mov
jno
shlb
addr16
loope
jle
push
xor
push
test
and
jmp
dec
pop
sbb
xlat
ja
or
scas
aaa
xor
jmp
ss
mov
pusha
push
push
fs
imul
scas
pusha
mov
dec
sbb
and
mov
jmp
inc
fcmovb
mov
mov
mov
push
js
test
pop
les
dec
dec
hlt
nop
out
add
out
sbb
les
pop
movsl
pop
mov
stos
pusha
inc
cmpsl
and
repnz
loopne
rcl
mov
and
dec
jne
sub
and
jae
sti
jle
pushf
jno
out
cvttps2pi
mov
jo
inc
jg
daa
jns
sbb
dec
movsl
push
out
cmpsl
pop
mov
cmp
xchg
insl
daa
fiaddl
imul
in
movsl
shll
out
sub
pop
iret
outsl
sbb
jecxz
shlb
into
mov
sbb
add
xor
test
lea
lahf
hlt
je
out
inc
lahf
cmpsl
test
in
loopew
add
cli
cmpsl
lock
xchg
dec
fcoms
rep
test
inc
ljmp
fwait
test
mov
lock
addr16
jae
mov
xchg
push
int
xchg
inc
leave
leave
xchg
add
lret
adc
in
sbb
ss
shll
ret
and
ljmp
lret
lds
mov
jle
add
sahf
add
out
rol
cmp
xchg
iret
je
pop
cmp
pop
or
xchg
push
mov
sti
mov
xor
int3
xor
cmpsb
xor
mov
dec
add
sub
xchg
mov
xor
xor
inc
sub
pop
insb
stos
mov
push
jmp
or
push
fldenv
rcrb
pop
ja
pop
jp
dec
in
int
popf
movl
mov
mov
cmp
dec
int3
sahf
lret
fimuls
jno
adc
popf
sub
lahf
lods
jp
fidivrl
sahf
xor
pop
insl
arpl
imul
mov
mov
out
outsl
jno
mov
stos
loope
les
jg,pn
add
mov
xchg
push
dec
jmp
add
add
sbb
add
lods
test
shll
cmpsl
push
add
repnz
add
jmp
mov
mov
add
dec
cmp
cmp
insb
inc
cmp
lret
lret
inc
dec
pop
daa
xchg
push
mov
mov
mov
sub
pop
and
xchg
mov
xchg
mov
and
stos
or
mov
flds
push
add
cmp
xorl
enter
repz
adc
mov
lcall
xchg
cmp
or
pop
xchg
inc
fisubrs
mov
xchg
pop
ja
mov
mov
jge
ss
shll
lods
sbb
sbb
insl
fcmovbe
xchg
jns
fists
mov
fdivl
pop
mov
xlat
sub
cmp
pop
pop
mov
cmp
pop
mov
bound
cwtl
xchg
cli
movsb
es
mov
sbb
fsubl
lret
xchg
fstl
or
cmp
adc
adc
xabort
clc
adc
push
data16
imul
inc
push
sbb
xor
in
mov
jno
mov
rcll
mov
cmp
xchg
rcrl
mov
rorb
std
dec
sub
adc
fs
pop
into
cmp
or
dec
push
movups
pop
lods
xchg
adc
and
cmp
jb
mov
testl
cmp
add
les
jg
fisttps
out
sbb
pop
ds
inc
pop
jo
test
iret
add
mov
and
pop
sub
sbb
insl
dec
sub
subb
and
cmpsb
cmp
movsb
testl
fidivl
mov
loope
jle
cmp
icebp
jmp
xchg
insl
add
pusha
das
loope
add
iret
sti
aam
out
scas
pusha
mov
push
mov
xchg
sbb
mov
mov
pop
and
sahf
add
xchg
hlt
jp
aad
jmp
imul
mov
loopw
xlat
pop
cmp
mov
decb
lahf
push
adc
inc
mov
adc
adcl
loopne
mov
sub
repnz
and
xchg
jp
cmp
or
and
dec
fndisi(8087
push
pop
ja
and
sbb
icebp
jbe
fcompl
and
xchg
out
bound
mov
xor
sub
fildl
nop
jge
mov
and
adc
aam
mov
jmp
xchg
popa
movsl
xchg
into
and
lea
enter
popf
push
fwait
stc
inc
or
aad
int
out
jp
ds
fucomip
xor
xchg
pop
cmc
add
jmp
sarb
loopne
and
xchg
sbb
bound
loope
shlb
add
mov
pushf
cli
orb
xor
sub
dec
divb
sbb
sahf
sub
insb
and
lret
mov
aad
sub
aad
cmp
out
testl
push
inc
inc
mov
js
gs
mov
test
mov
sbb
jae
inc
push
inc
flds
mov
pop
sub
xor
ja
test
sub
and
mov
into
sub
or
fnstsw
cmpsb
push
jg
cmpsl
lods
sahf
jg
pop
xor
fs
insl
clc
xchg
nop
sub
sbb
ret
pop
jmp
ljmp
add
pusha
cli
dec
adc
mov
pop
inc
mov
dec
shlb
lcall
jnp
int3
mov
ja
cmpsb
loope
push
pop
hlt
push
imul
push
and
int
cmp
call
inc
lock
or
fs
fwait
xchg
call
jo
mov
nop
cmp
filds
shll
push
mov
and
mov
test
dec
jo
ret
mov
jp
jnp
pop
pop
pop
cs
cmp
adc
jns
add
imul
lret
shll
leave
sbb
jno
jnp
jmp
and
adc
shrb
jle
out
pop
fiadds
outsl
ror
dec
adc
jg
jne
xchg
data16
inc
xchg
sbb
push
cmp
lcall
ljmp
push
mov
sarl
shlb
jmp
mov
add
add
je
jne
pop
outsl
out
aaa
jae
mov
and
add
add
add
add
push
dec
sub
mov
jmp
cmp
imul
cmp
xor
or
mov
pop
les
outsb
push
push
add
aad
out
ja
sbb
inc
in
test
cli
test
into
mov
cld
mov
and
xchg
and
push
xor
pop
mov
aam
xchg
sbb
inc
insb
xchg
mov
or
test
adc
xchg
int
lds
std
js
xchg
das
cli
gs
cmp
subb
xchg
adc
inc
insb
mov
shlb
movsl
lret
xor
and
scas
mov
push
pop
add
test
in
sub
cs
push
mov
js
inc
mov
pop
inc
mov
jo
sti
clc
mov
dec
stc
gs
xchg
mov
push
pop
loop
insl
test
sub
aam
rcll
loope
adcb
cmpsl
dec
loope
cli
adc
andps
inc
addr16
fistpl
mov
cs
nop
sub
mov
mov
enter
jne
rolb
mov
jg
xor
shrl
mov
aam
out
outsl
repz
dec
and
test
or
push
jbe
mov
xchg
mov
pushf
fisubrs
jb
pop
repnz
lock
pop
pop
lds
adc
cmp
or
or
lahf
pop
fstps
in
and
lock
adc
stos
mov
xor
mov
pop
hlt
xchg
lea
pop
mov
mov
cmpsb
add
ret
sub
insb
fdivrl
lret
and
iret
fstl
nop
add
push
push
jge
daa
je
jnp
addb
std
push
dec
fwait
cmpsl
and
xchg
mov
lret
in
inc
dec
xor
in
iret
xchg
rorb
and
add
inc
scas
add
pop
daa
adc
mov
add
in
xor
test
xchg
leave
mov
data16
pop
or
mov
repnz
add
dec
sub
xor
sub
std
insb
ficoms
test
xor
rolb
imul
test
roll
cmp
in
test
adc
bound
insb
test
mov
ljmp
sarb
fisubl
push
pop
daa
sub
test
mov
fwait
int3
sbb
push
push
push
inc
ss
jg
mov
xor
xchg
mov
fwait
enter
stos
cmp
ds
jmp
test
fcompl
mov
stc
xchg
loopne
xor
mov
cmpsl
fsubr
xchg
popf
loop
lods
popa
dec
push
mov
fimuls
add
stos
sub
out
movsb
inc
dec
icebp
std
pushf
cld
mov
push
cmp
jnp
jno
leave
or
mov
pop
nop
jmp
dec
cmpsl
int3
dec
pushl
sub
sar
dec
or
pusha
mov
pop
xchg
imul
lods
stos
push
mov
js
add
clc
dec
in
cwtl
push
repz
jg
addb
xchg
lret
fistps
xchg
sub
jo
ret
inc
push
jp
es
inc
adc
into
xchg
and
cs
jg
out
imul
xchg
pop
cmpsl
movsb
repnz
xadd
sbb
lods
aam
pusha
icebp
call
jno
dec
push
stos
arpl
dec
lret
mov
in
unpckhps
mov
es
pop
js
pop
test
sbb
dec
in
add
addb
daa
inc
mov
mov
daa
adc
sbb
fdivrs
mov
xor
les
and
outsl
jmp
dec
or
add
xor
cmpsl
je
insl
loopne
in
mov
call
adcl
icebp
jnp
sbb
xchg
out
cmp
test
xchg
mov
push
push
stos
repnz
pop
lods
shl
xor
sub
icebp
int
mov
and
dec
pop
inc
popf
mov
bndldx
inc
pop
mov
sub
xor
dec
lahf
jp
mov
xchg
sbb
fdiv
and
cmpsl
cmpsl
je
pop
xlat
ds
jl,pn
aaa
divps
test
enter
jne
lahf
lahf
add
repz
in
fimuls
movsb
inc
int3
cmp
cmp
push
mov
mov
push
subps
mov
xor
push
cmp
jno
shll
icebp
xchg
cmp
outsb
subb
gs
ja
add
add
add
dec
dec
ss
std
iret
cmp
cld
lcall
add
add
add
lret
inc
sbb
pop
cmc
ret
mov
adc
cmp
imul
inc
stos
dec
out
cmp
mov
rclb
xor
xor
ss
lret
dec
call
or
jp
scas
xor
lock
popa
ljmp
xchg
imul
cmp
mov
int
sahf
adcl
dec
mov
inc
or
mov
gs
lea
xchg
cmpsb
movsb
imul
popa
push
cmp
mov
mov
lods
mov
mov
sub
aad
int3
cs
dec
pop
inc
iret
lods
dec
mov
lret
xchg
cli
fadds
and
mov
adcb
mov
sbb
in
mov
dec
pop
lcall
adc
or
out
loopne
pusha
mov
push
es
or
jae
or
aad
sahf
not
ret
gs
lock
lds
incb
adc
popf
xchg
pop
mov
sbb
push
mov
add
movsb
cwtl
sub
sbb
popl
bound
sub
pop
shr
gs
outsb
jo
scas
xchg
cltd
orl
xchg
pop
insl
fildl
xor
fiaddl
xlat
xchg
movsb
movsl
cmp
and
mov
push
jb
lret
cmp
pop
jge
jns
mov
xchg
cmp
jo
stos
mov
out
push
mov
pop
mov
loopne
aaa
push
hlt
push
jnp
repz
in
pop
sub
or
sbb
insb
xchg
test
mov
cmp
xor
leave
data16
jmp
xor
xchg
push
data16
dec
push
and
rolb
pop
cmpsb
pushf
imul
stos
xchg
test
aas
xchg
jb
out
scas
cli
out
aad
or
in
out
inc
sahf
shlb
sub
sbb
sub
jne
jle
push
out
nop
cmp
shrl
push
push
cs
cmp
je
jg
shlb
test
jo
incl
mov
pop
jle
sub
push
mov
pop
xchg
jecxz
ror
divl
fnstcw
jae
mov
orb
sti
rclb
mov
out
in
xor
std
cmpsl
imul
jg
dec
orl
ret
push
push
push
add
sub
xor
in
rcrb
push
push
pop
jg
inc
cmpsb
gs
inc
mov
pop
shrb
xchg
inc
insb
mov
mov
adcb
add
push
push
xlat
xlat
dec
xchg
inc
mov
fnstsw
push
lods
cmp
xor
jle
and
cmpsb
fwait
sbb
cs
in
adc
mov
xchg
out
mov
push
cmpb
mov
dec
stos
out
clc
sub
enter
hlt
je
pop
xchg
movsl
fnstcw
dec
cmp
sbb
adc
jmp
inc
or
das
mov
cmp
gs
mov
rorl
pop
dec
xchg
xor
out
jg
sub
nop
cwtl
xchg
mov
sbb
xchg
cli
mov
rcr
rolb
stos
jl
imul
insl
push
or
aam
aaa
mov
into
in
mov
mov
leave
push
scas
sbbb
cwtl
imul
pop
test
dec
mov
inc
adc
pop
mov
idiv
stos
mov
mov
dec
jnp
or
mov
ss
push
fiadds
mov
or
push
out
stos
fcmovb
or
pop
pop
movsb
lret
gs
aas
cmp
fcomps
add
pop
sub
movsb
sub
add
lret
xchg
and
and
push
imul
and
pop
into
cli
mov
enter
sbb
mov
sub
cmp
loope
scas
inc
test
movsb
sub
or
fmul
mov
cmp
sub
push
fdivs
cwtl
aas
sbb
push
push
xor
sbb
dec
xchg
mov
out
mov
arpl
mov
pop
inc
sub
setp
sbb
push
add
or
dec
enter
repz
repz
push
push
sub
leave
lods
and
mov
sbb
lahf
or
jns
push
mov
lds
insb
push
xchg
iret
mov
mov
mov
test
pop
dec
cmpsb
jnp
ret
push
insl
adc
in
xchg
loopne
out
push
cmpsl
mov
mov
adc
mov
outsl
and
enter
add
add
add
cld
es
mov
jmp
fdivrp
push
fildll
repnz
add
xchg
sbb
jne
testl
lret
jnp
sarl
test
out
dec
outsl
mov
lock
stc
ss
sub
test
dec
hlt
cld
sbb
pop
xor
ret
repnz
mov
sbb
lcall
les
pushf
push
scas
cmp
xchg
es
xorb
sbbb
xchg
gs
xchg
scas
fidivs
daa
vmread
dec
jb
push
les
fcoml
or
scas
fcomip
mov
lahf
pop
jb
inc
fsubl
jp
idivb
pusha
cmp
mov
ds
aad
adc
cmp
add
jnp
pop
xchg
mov
fsubs
ds
daa
shll
xchg
sbb
inc
pop
in
loopne
dec
jmp
shrl
inc
dec
or
lea
and
dec
jbe
movsl
icebp
xchg
mov
std
add
mov
scas
add
mov
je
dec
mov
cs
sti
mov
stos
adc
orl
lea
lret
push
push
xor
loope
loop
xchg
push
push
fistps
sub
dec
pop
rcr
repnz
fsubrl
and
cli
lods
sahf
pop
add
ljmp
xchg
adcb
or
inc
mov
push
push
sbb
push
jo
leave
outsl
sub
imul
movsb
orl
xchg
stos
ss
mov
stos
cmp
maskmovq
insb
ret
ljmp
mov
jl
ljmp
clc
cwtl
sbb
int3
inc
xchg
cltd
push
stc
cltd
mov
push
pop
push
mov
xor
xchg
adc
cmc
andl
insl
mov
push
sub
lods
dec
push
aam
fbld
popf
fwait
stos
sahf
addb
push
cmp
sbbb
movsl
xchg
into
ja
fwait
cs
mov
sub
cmp
subb
sarl
es
xchg
cltd
xchg
dec
jmp
rcrl
outsl
imul
aaa
fwait
pushf
loop
lods
xor
aaa
and
xor
repnz
dec
sbb
fidivs
xchg
scas
push
cmpsl
jb
sbb
inc
lock
dec
mov
add
mov
jne
pop
sub
lret
jmp
push
jno
or
fstpt
dec
out
push
fistpl
xor
into
pushf
push
lock
dec
sbb
pop
dec
jo
int
xchg
inc
mov
out
pop
outsb
pop
push
xor
sti
addr16
jnp
cmpb
sub
dec
cmc
xchg
jo
cltd
jae
gs
leave
mov
mov
test
jne
sbb
lods
imul
ljmp
jg
sbb
pop
ror
lcall
push
push
outsl
cltd
push
pusha
pop
mov
mov
pop
cmp
sbb
push
sbb
dec
or
pop
jno
jbe
int3
cmp
movsl
xchg
lods
fstl
mov
jg
pop
dec
jnp
js
dec
jno
aad
xor
jb
add
cld
lahf
lds
jecxz
pop
dec
movsl
gs
jp
jbe
sarb
cmp
cli
bound
fldenv
mov
push
stos
jmp
add
shl
daa
sub
or
jle
adc
sbb
pop
mov
adc
push
adc
dec
adc
add
scas
cwtl
in
scas
xchg
repnz
inc
sub
mov
push
leave
and
push
push
mov
dec
movsb
arpl
push
cwtl
add
jae
imul
adc
adc
push
cmp
imul
xor
dec
xchg
aas
pushf
and
push
sub
push
out
xlat
in
fwait
imul
inc
mov
adc
enter
adc
test
notl
cmp
push
popf
aam
adc
testb
packuswb
dec
jmp
adc
xchg
mov
dec
jle
cmpsl
dec
mov
rorl
ja
repz
cs
mov
and
and
mov
adc
inc
andb
inc
push
xor
add
clc
jmp
dec
pusha
dec
push
fstl
mov
dec
add
dec
pop
mov
jne
jne
movsb
push
inc
push
jae
loopne
mov
add
aad
test
jecxz
out
push
dec
xor
adc
fcmovb
inc
sbb
popf
addr16
xor
imul
cmp
add
aaa
sti
addr16
out
fidivs
jno
xchg
outsl
xor
add
add
add
out
imul
shlb
jecxz
lods
pop
movsb
and
mov
sub
fwait
dec
or
dec
lahf
mov
mov
cmp
loopne
push
cwtl
sahf
mov
mov
adc
ret
lcall
imul
rolb
rorb
fdivrp
jno
xor
sub
testl
cwtl
push
ss
or
sub
iret
push
fwait
sbb
faddl
in
mov
and
add
sahf
sbb
push
xor
inc
jne
stos
bound
pop
cmpsl
push
mov
add
cmc
jne
sbb
xchg
movsl
mov
pop
jns
inc
add
jne
xor
fs
fnsetpm(287
add
sarb
or
std
add
loopne
xor
leave
inc
mov
cmp
mov
inc
cmp
jge
ret
mov
je
es
mov
xlat
lods
dec
loop
dec
cld
sar
stos
pop
sub
or
insl
insl
pop
leave
cmp
cs
adc
xchg
push
popa
sub
sub
and
or
popa
jne
lret
dec
and
pop
mov
div
mov
adc
jno
push
jmp
cmp
mov
call
xor
int
lock
in
pop
pusha
mov
pop
or
ret
test
cmp
xor
xchg
sub
add
repnz
xchg
addl
mov
adc
xor
mov
test
je
mov
test
aaa
ss
mov
mov
push
push
fsts
inc
fidivrl
xor
loop
push
lret
jno
divb
mov
push
push
cmp
cwtl
test
mov
jle
cmp
test
ret
into
and
jge
rol
xchg
or
adc
mov
xchg
gs
and
jg
aam
inc
mov
and
cmp
ret
cltd
jo
ljmp
xor
test
mov
jecxz
push
loop
adc
clc
mov
ret
test
mov
sub
push
cs
mov
and
mov
out
rcl
xchg
pop
dec
and
and
scas
pop
mov
mov
dec
mov
fisttps
aad
jbe
cmc
cs
add
jns
cmpl
jno
scas
mov
xchg
test
cmpsl
sti
xchg
jnp
roll
movsb
cmp
xlat
mov
sub
hlt
jecxz
dec
mov
ja
andb
and
pop
pop
lods
jnp
inc
fsubs
mov
cmp
js
dec
xchg
xorw
dec
mov
and
shr
cli
add
push
loop
das
into
movsb
dec
outsl
jo
arpl
or
dec
sti
dec
cmp
xchg
or
pushl
stos
adc
adc
nop
pop
fucomi
sti
outsb
repnz
pushf
adc
loop
jno
fdivrs
insb
dec
lcall
pushf
in
cli
lret
mov
filds
insb
mov
lret
adc
inc
xorps
adc
leave
pop
xor
mov
insb
test
test
xchg
adc
in
sub
add
pop
xchg
dec
roll
js
sbb
pop
jno
cmp
xchg
xor
sbb
es
cwtl
movsl
cmp
in
insl
jp
and
das
ret
mov
pushf
adc
in
jbe
adc
lcall
or
iret
je
fldcw
lods
cmp
adc
push
mov
fisttpll
jmp
sarb
dec
jne
push
cmpsb
rcrl
fwait
mull
insl
daa
xchg
nop
mov
leave
xor
and
push
cmp
mov
aas
jl
mov
inc
push
inc
nop
jne
out
dec
and
jb
fnstcw
scas
stos
or
xchg
sub
push
ja
into
aaa
and
notrack
hlt
outsl
jge
test
pop
dec
and
mov
bound
jo
sbb
test
sbb
and
inc
add
xchg
mov
iret
xchg
inc
push
loop
pop
js
add
jnp
nop
mov
mov
jg
inc
mov
push
out
inc
ret
imul
je
cmpsl
adc
int3
cmc
aaa
fwait
mov
out
sahf
or
adc
out
add
mov
cwtl
mov
out
in
sub
inc
mov
xor
adc
jo
hlt
arpl
xor
fistps
jnp
dec
popf
add
scas
and
shll
stos
subb
add
add
add
out
sbb
repz
mov
jno
aaa
add
repnz
add
mov
sub
out
fimull
cmp
sub
stos
dec
leave
push
xor
inc
fwait
movsb
scas
clc
push
aad
popf
add
pop
int3
pushf
lds
jle
push
popa
cmp
movsl
js
enter
iret
rcrl
mov
sbb
adc
or
or
or
mov
lret
xchg
stos
mov
lea
movsl
sarb
jb
sub
sub
lahf
test
adc
lret
sbb
mov
es
mov
in
in
add
rclb
sbb
fnstsw
xchg
fadd
ja
arpl
xchg
and
sbb
xlat
das
dec
in
aad
jmp
xlat
aaa
fiaddl
mov
sub
inc
adc
sub
jb
sbb
test
mov
pop
pop
popa
sbb
in
and
fs
pusha
jb
push
mov
jg
pop
pushf
xor
dec
aas
jge
push
adc
sti
jecxz
adc
fbld
xchg
jecxz
dec
cmp
cmpsl
aad
daa
mov
insl
push
negb
sub
inc
cwtl
jb
mov
loopne
dec
movsl
jbe
mov
ret
cmp
daa
sbb
dec
push
mov
xor
out
rolb
adc
popa
int
sarl
shll
bound
stos
lahf
imul
cmp
sub
rcrl
mov
fsub
nop
add
shrb
mov
imul
sub
xor
or
pusha
dec
fcmove
pop
sbb
std
rorb
mov
push
dec
jae
sahf
and
idivl
adc
xchg
int
mov
dec
sarb
nop
cmpsb
scas
fwait
idiv
pusha
sbb
loopne
mov
mul
hlt
cmp
push
sarl
int3
test
dec
mov
or
fmul
mov
push
dec
and
sbb
jno
mov
addr16
lock
xchg
and
adc
cmc
pop
xchg
rcll
or
rol
xchg
ds
and
inc
sbb
adc
outsb
push
andb
jmp
sbb
push
adc
jo
sub
mov
aad
js
cmp
mov
fidivrl
inc
xchg
push
fwait
bound
ljmp
int
mov
xorl
adc
loopne
scas
xchg
es
out
inc
aam
mulb
xchg
pop
mov
popf
xchg
jmp
mov
push
push
enter
mov
stc
insb
fildl
fwait
js
sub
add
adc
cmp
ljmp
sbb
push
jg
push
xor
lods
loopne
lock
jno
outsl
adc
cmp
inc
pop
sub
dec
xchg
jp
add
ret
mov
xchg
pop
inc
jl
jecxz
stos
mov
or
adc
cmp
xor
push
rclb
inc
push
sbb
jmp
jmp
lahf
xchg
call
in
mov
mov
sbb
adc
mov
in
in
inc
cmp
and
mov
mov
test
fstp
arpl
lret
jg
inc
mov
xchg
fldt
jmp
and
arpl
aaa
repz
lock
in
outsb
pop
cmc
adc
pusha
pop
and
out
sbb
int
xchg
dec
cli
dec
hlt
mov
sub
inc
das
cmpsl
std
mov
or
sbb
out
jle
and
ja
mov
push
add
cmp
cwtl
mov
das
inc
and
sub
and
xchg
out
in
jne
cmpsl
sti
imul
fidivs
into
cltd
pusha
xlat
mov
daa
loop
sbb
int
sbb
outsb
sub
sub
aas
inc
sub
mov
pop
insl
iret
jg
test
stos
pop
inc
xor
push
stos
jns
shll
cli
movsl
mov
les
scas
addr16
aas
mov
push
sbb
rclb
aas
mov
push
and
dec
aaa
movsb
jecxz,pn
xor
cmp
inc
push
cs
ds
rorl
push
inc
add
nop
push
movsb
aaa
cwtl
mov
repnz
mov
dec
xchg
arpl
loopne
leave
pop
or
mov
xlat
ljmp
gs
int
inc
inc
xchg
fiadds
test
push
inc
jl
fnstsw
mov
xor
pop
xor
test
adc
sbb
cmp
fadds
into
or
ss
sbb
fwait
jae
mov
cltd
add
add
add
mov
out
out
mov
sbb
cmp
add
add
add
clc
and
xor
test
inc
hlt
push
dec
cmp
xchg
sahf
cmpsl
dec
inc
cld
mov
sahf
dec
test
mov
adc
stc
xchg
in
add
inc
stos
ljmp
pop
sbb
pop
cwtl
jp
sub
out
insl
ds
dec
jbe
popl
nop
call
mov
ret
mov
into
pop
addr16
jge
loop
push
nop
xlat
fbstp
test
out
dec
cmp
jp
mov
cmc
add
sub
jp
js
xor
rcll
repz
push
outsl
adc
jmp
jg
or
pushf
sub
xor
jae
sbb
hlt
cmpsl
insb
push
push
or
adc
aas
cmp
ret
xchg
mov
dec
mov
insb
scas
jno
out
lcall
cmc
jle
mov
pushf
xor
fsts
fistpl
adc
mov
les
push
fnsave
dec
inc
stos
lahf
dec
in
pop
mov
sbb
cmpsl
sub
loop
imul
add
fcmove
cmpsb
movsl
push
pop
out
fsubp
sub
xchg
popf
repnz
enter
adc
inc
mov
fs
jnp
and
cmpsb
ret
inc
fsts
xlat
jne
mov
ret
sbb
call
lahf
out
in
dec
cltd
outsl
nop
aam
sbb
push
outsl
test
dec
xchg
add
ss
ja
hlt
leave
sti
sub
int3
dec
pop
arpl
mov
dec
sub
repz
enter
rcl
loopne
or
jb
out
jbe
xchg
cli
xor
push
mov
das
ss
jmp
fdivrs
out
imul
cli
push
dec
mov
cmp
sbb
sbb
cltd
packsswb
fwait
mov
push
int3
and
push
xchg
mov
pusha
inc
test
inc
repz
shlb
mov
stc
fimuls
pop
jbe
shlb
cli
or
pop
xchg
sbb
ss
cld
movsb
mov
add
jge
push
prefetcht2
inc
dec
orl
jb
sbb
pusha
xchg
fisttpll
pop
ds
adc
fldcw
mov
inc
insb
imul
fld
rol
int
iret
fcompl
repnz
adc
sub
or
aad
sti
mov
add
sbb
jnp
and
dec
cs
repnz
mov
repnz
or
dec
cmp
inc
lahf
std
mov
popa
inc
test
jae
jmp
fstpt
push
fs
sti
xchg
and
xor
mov
stos
cmc
add
dec
loopne
shrb
and
rcll
jno
lret
push
dec
sbbl
std
leave
push
in
jmp
mov
jb
or
sub
sbb
aad
mov
ja
mov
test
jo
add
clc
or
mov
aaa
lahf
int3
cmp
and
sbb
int
sbb
jns
es
or
out
repz
push
stos
imul
sbb
add
jg
int
fldcw
arpl
xchg
push
pop
pop
inc
iret
xor
dec
xor
sub
adc
xor
dec
mov
dec
push
cmpl
pop
add
pushf
roll
gs
xchg
xchg
fstpt
mov
xor
jbe
pop
jle
sbb
insl
cmovnp
inc
jp
jp
test
movsb
jo
inc
push
aaa
push
and
test
mov
sbb
mov
ja
xchg
je
stos
inc
mov
inc
hlt
aad
gs
sub
stos
imul
stos
pusha
or
push
aaa
xor
jg
loopne
movsl
jno
out
data16
icebp
and
inc
ja
xchg
stc
gs
imul
pop
push
fbstp
xor
imull
arpl
imulb
or
scas
and
movsb
dec
jp
repnz
pop
dec
in
mov
dec
nop
lcall
cmp
push
js
es
popf
outsl
dec
outsl
mov
jae
xor
dec
stos
mov
mov
push
lds
sub
ljmp
pop
xchg
xchg
pop
fdivs
pop
xlat
sub
jns
int
cmp
mov
inc
cmp
sar
push
mov
std
sub
repz
and
push
faddp
icebp
sub
out
dec
in
loop
pusha
jg
pop
fisubs
ljmp
jl
mov
fsin
push
mov
add
add
add
adc
dec
negl
mov
jb
jp
inc
inc
add
repnz
add
cmp
cli
and
scas
hlt
add
jge
push
adc
mov
mov
int3
inc
mov
mov
mov
add
push
push
or
sti
add
into
push
pop
out
icebp
in
lea
imul
and
sbb
push
push
mov
aas
mov
leave
andb
out
daa
fwait
les
push
test
in
dec
xchg
test
sub
sti
in
mov
gs
mov
lds
or
mov
xchg
sub
arpl
cltd
dec
arpl
push
cmpsl
test
jle
mov
push
sbb
sbb
movsl
add
leave
push
pop
test
dec
mov
or
and
adcb
jmp
outsb
add
or
sub
sub
jb
xchg
sbb
sub
mov
mov
sbb
inc
dec
mov
adc
mov
lahf
popf
jno
mov
sub
fidivrl
movsl
imul
ss
int
pusha
inc
jl
aam
test
dec
insl
jp
jecxz
insb
js
lret
mov
cmp
xor
ret
int
and
mov
xchg
rcll
addr16
dec
mov
jg
dec
mov
jecxz
int
dec
add
fwait
imulb
inc
fldcw
xor
aaa
ret
add
jae
stc
outsb
dec
sub
add
inc
cmpsb
lret
mov
push
gs
lods
push
stc
sub
inc
sbb
push
stos
aaa
mov
adc
jmp
xchg
movsb
insb
addr16
notb
mov
push
cs
push
xor
movsb
sarl
lahf
mov
lahf
and
scas
mov
imul
ss
enter
and
cmc
into
push
movsb
push
xchg
test
mov
mov
sub
scas
loop
sbb
jbe
imul
adc
inc
push
pop
repnz
mov
mov
or
divb
je
shl
jb
outsl
fstpl
out
es
es
sti
mov
pop
xor
add
xchg
jmp
mov
mov
stos
sbb
or
test
mov
out
sub
mov
cmp
jnp
test
cltd
addr16
arpl
pop
jecxz
js
rorb
fnsave
adc
outsl
sub
inc
dec
fdivp
ja
sarb
dec
mov
enter
sbb
xor
pop
adc
daa
fbld
icebp
nop
test
lcall
ljmp
mov
fwait
sub
pop
jno
sub
xchg
les
dec
mov
xlat
andl
aaa
push
rcll
test
and
ret
lret
repz
pop
adc
add
cmp
test
pop
mov
or
cld
jbe
pop
outsl
or
inc
lahf
add
icebp
cmc
loopne
test
stos
inc
mov
dec
mov
loopne
and
stos
pusha
iret
sbb
push
xchg
loope
push
es
mov
cmp
dec
test
xor
sbb
je
xchg
pop
lds
or
or
leave
pop
cmp
sub
or
jne
mov
or
and
fimuls
in
sub
mov
scas
push
ror
fcmove
lret
push
xchg
negb
push
mov
jae
imul
sub
cmp
sbb
cld
imul
or
cli
scas
mov
cmp
pusha
cmpsb
dec
icebp
add
cmc
cmp
out
xchg
iret
sub
cmp
or
add
aaa
repz
not
sti
daa
mov
pop
and
xlat
sahf
and
clc
cli
xchg
add
incb
dec
stos
enter
jae
pop
nop
inc
jae
ret
xchg
sub
insl
xchg
xchg
add
mov
loopne
cltd
jnp
push
lea
mov
mov
movzwl
cmpsl
pop
cmp
fwait
inc
scas
push
add
sbb
roll
mov
mov
sub
add
mov
and
push
jge
jle
stos
pop
mov
xchg
das
jne
gs
out
add
add
sbbl
nop
and
pop
add
popf
or
sub
fisttps
jp
fldt
add
in
mov
fdivp
cld
ds
daa
cmp
loop
arpl
inc
add
repnz
add
push
lcall
xchg
xchg
add
int
pop
inc
int
cmp
add
icebp
mov
lods
push
mov
into
andl
sahf
push
add
int
leave
ds
pushf
jno
mov
add
jp
cmp
adc
xchg
test
jge
pop
lcall
xor
jle
ja
imul
xchg
in
fistpl
ds
jno
and
aaa
jae
cmp
cmp
pop
out
mov
adc
mov
int
stc
test
loopne
pop
call
mov
mov
ret
mov
jp
negl
test
jg
fldcw
out
cmp
mov
xor
cmpsl
ss
jne
xchg
cltd
push
into
scas
sub
jp
in
iret
sahf
add
mul
push
jns
clc
sub
rorl
pushf
testl
sbb
lods
daa
leave
mov
es
cltd
sbb
ljmp
out
test
push
clc
pop
mov
jne
jmp
in
push
int3
inc
rorl
int3
leave
and
adc
outsb
movsl
dec
pop
fidivrl
sub
fcmove
push
mov
cmp
mov
add
jb
fimull
xchg
loop
outsl
outsb
dec
xlat
leave
mov
push
ss
jge
rcr
iret
fnstenv
ljmp
mov
int
sub
or
scas
sti
adcb
ds
and
xchg
add
cwtl
enter
repz
xor
test
cltd
adc
mul
mov
mov
imul
movsl
or
arpl
repnz
jge
xchg
mov
mov
loopne
xor
xor
cmp
cmp
mov
cmp
cs
fs
outsl
ja
std
lods
pop
insb
ljmpw
pop
cs
and
sub
sbb
lock
mov
mov
mov
xlat
ret
leave
adc
jnp
sub
xor
shll
jno
add
loope
pop
fidivrs
aas
mov
dec
jnp
in
push
sbb
cmp
jns
push
jmp
rorb
mov
mov
flds
ss
aaa
aam
std
cli
cmpsl
inc
shlb
hlt
mov
arpl
icebp
lock
fcmovbe
inc
push
mov
add
pop
xchg
dec
insb
cmp
cltd
mov
gs
movsl
repnz
rcr
xor
mov
sti
stos
clc
pop
jae
aam
xor
arpl
es
stos
jg
scas
inc
test
mov
idivb
xor
mov
lcall
hlt
test
xor
mov
mov
mov
loope
xchg
jp
inc
fnsetpm(287
insl
cld
lods
fdivs
lcall
loopne
pop
mov
and
mov
add
lcall
mov
dec
inc
cmc
xor
sbb
addr16
lcall
in
mov
add
sbb
xor
mov
mov
mov
sub
mov
aaa
jns
lock
repnz
addr16
inc
mov
mov
xor
xor
fidivrs
ror
jmp
ss
ds
adc
dec
insl
jg
add
inc
xchg
xchg
jmp
push
jge
push
clc
xor
inc
dec
gs
mov
mov
xor
push
mov
in
stos
stc
mov
pop
inc
pop
jb
push
rolb
in
xchg
addr16
pop
bnd
ljmp
jno
or
mov
and
movsb
mov
inc
pop
lret
dec
fucomip
outsb
in
cmp
test
sub
adc
shll
ja
sub
test
xchg
mov
ret
aad
pop
ret
jnp
lret
out
or
push
into
pop
dec
xchg
popa
cmp
shl
frstor
cs
push
xor
mov
xchg
push
pop
mov
divb
int
movsb
cmpsl
andl
stc
fsubrs
mov
repnz
dec
xor
and
daa
test
pop
xor
lock
xor
cmpsb
lahf
sbb
xchg
adc
dec
rclb
mov
fs
inc
rol
sbb
jnp
mov
dec
daa
test
dec
fs
xchg
mov
mov
mov
or
mov
cmpsb
xor
pminsw
push
ret
loope
lds
mov
lods
inc
mov
clc
jl
lret
dec
fstl
mov
sub
add
add
add
jnp
xor
jg
sbbl
sub
add
add
add
push
stc
out
popa
adc
mov
shr
std
mov
call
mov
dec
dec
push
mov
adc
mov
notl
xor
xchg
push
push
popa
popa
sub
js
mov
sbb
cld
push
and
fcomps
push
sub
lods
in
cmpsl
loopne
sbb
cmp
imul
push
std
mov
lea
int
push
mov
push
and
pop
aam
pop
sbb
dec
movsb
dec
out
imul
and
fs
inc
mov
les
ja
ficomps
mulb
cmp
addl
mov
mov
ljmp
imul
dec
mov
insl
cmc
pop
xor
aaa
xlat
rcl
fwait
sbb
out
mov
sbb
xchg
inc
lahf
or
xchg
stos
nop
mov
pop
lcall
mov
mov
push
jmp
cltd
add
lds
mov
in
cwtl
adc
sub
adc
push
jae
outsl
int3
cli
or
xchg
xchg
arpl
aam
hlt
jnp
ret
xchg
xchg
inc
fsubr
pop
dec
ret
xor
dec
mov
push
and
pushf
stc
cld
loop
xchg
xchg
mov
out
in
push
jo
mov
inc
dec
xchg
xchg
mov
pusha
cmpsb
mov
xchg
pop
jno
popf
pop
or
xor
lret
jle
popf
and
and
xor
out
and
fisttps
xchg
push
jbe
xor
jle
call
or
mov
int
or
mov
mov
lods
mov
jno
pop
or
push
jl
fmuls
or
dec
mov
adc
out
mov
xchg
leave
push
xchg
jp
push
popf
std
decl
adc
xchg
jno
rcll
xorb
or
and
fs
fidivrl
sub
ror
popf
in
cld
mov
xchg
ficomps
ds
xchg
insl
aam
adc
rolb
dec
xor
cmp
out
jns
bound
or
pop
adc
arpl
jle
push
mov
lret
daa
mov
repnz
mov
fwait
jmp
push
std
push
or
call
adc
mov
imul
mov
leave
add
rorb
xlat
ret
mov
test
add
push
and
pop
dec
test
adc
lahf
das
push
test
mov
mov
test
fildll
das
jae
leave
inc
adc
in
mov
cmpsb
out
out
jl
rcl
div
cwtl
je
sub
xchg
fwait
test
in
xchg
inc
jg
rclb
dec
push
outsl
arpl
fbld
decb
rcll
xor
pushf
push
imul
int
jge
fidivrl
adc
jmp
leave
pop
sbb
dec
xchg
fcomps
or
sbb
and
loop
push
iret
jbe
cmpsb
pushf
jl
mov
into
lea
outsl
mov
adc
add
pop
mov
jmp
je
ficoms
and
and
pop
lcall
lods
addr16
out
stos
mov
cli
add
sub
fidivrl
test
pop
add
push
dec
data16
or
sub
arpl
add
mov
movsb
sub
add
cmp
out
sahf
sbbb
repnz
jecxz
fwait
push
out
movl
pop
dec
imul
push
loope
popf
cli
and
nop
hlt
add
pop
enter
jnp
iret
mov
dec
fdivl
bound
enter
xor
push
mov
cmp
lods
sti
call
shrb
fnstsw
sub
push
jno
mov
cmp
hlt
loop
or
rol
pop
out
jae
adc
in
xor
lcall
fs
in
push
aaa
sbb
mov
outsl
xchg
cmp
outsl
dec
and
adc
rorb
xor
fistps
lods
mov
mov
divb
lahf
sub
clc
leave
icebp
in
test
xor
in
pop
mov
jbe
lods
rcrl
or
aaa
push
scas
cli
cltd
push
pop
jo
lods
test
fisubs
sbb
fsubp
xchg
fndisi(8087
cli
shll
repnz
cld
jge
imull
pop
shl
cmp
add
fmull
pop
jecxz
sbb
xor
into
adc
pop
or
push
xor
int3
out
shrl
inc
add
jle
mov
mov
out
and
mov
and
pop
sub
push
aaa
add
add
add
loop
add
mov
out
in
sbb
add
add
add
mov
lret
push
dec
mov
mov
and
inc
mov
aam
xchg
dec
inc
push
xchg
and
fdivs
pop
push
inc
out
push
test
lds
jo
clc
cli
out
shrb
je
fwait
jne
push
mov
in
fidivrs
jbe
mov
inc
xchg
fildll
pop
mov
int
push
in
cld
in
mov
in
in
push
xchg
mov
add
sbb
lret
sbb
mov
cmp
xchg
stos
pop
xor
sbbl
in
out
insb
xchg
xor
xchg
and
jae
jge
mov
and
add
jno
mov
jmp
pop
subb
sub
inc
xlat
inc
inc
jne
ljmp
lret
into
in
les
shrb
jl
jp
and
outsb
inc
lcall
pop
je
or
mov
add
data16
inc
pop
faddp
sub
xlat
jmp
inc
in
das
and
jno
js
gs
or
out
sub
mov
mov
loop
lods
cwtl
call
mov
adc
mov
shrb
ljmp
stos
cmp
cmp
movsb
andb
nop
add
mov
into
pop
mov
push
cld
xchg
movsl
inc
push
or
lods
jmp
jne
jne
lea
subb
cmp
pop
fwait
insl
sub
mov
mov
mov
scas
sub
inc
push
jge
pop
insl
ss
aad
and
cmp
jg
je
lock
ljmp
xchg
or
rcrl
fimull
lea
jae
je
movsl
or
or
mov
ja
dec
add
mov
lret
jnp
xor
pop
sbb
int
mov
push
test
add
je
es
ret
push
sub
into
fdiv
cltd
push
cli
ja
aam
sbb
or
xchg
rcl
xchg
jbe
mov
and
jnp
cwtl
nopl
out
int3
xlat
repz
rcl
xchg
push
mov
js
push
insl
jle
adc
lret
xlat
jne
rorb
test
es
aad
add
fisubrs
in
sti
mov
cli
mulb
ss
idivl
ja
insb
or
lea
pop
and
push
scas
sub
fiaddl
testl
std
push
inc
aaa
mov
mov
sbb
sub
pushf
sbbb
mov
outsb
hlt
int3
adc
and
push
jge
testb
cmp
sbb
or
clc
stc
sahf
fistps
adc
movb
add
pop
sbb
mov
jle
rorl
dec
jbe
or
lret
jl
aaa
bound
mov
insl
std
sbb
lods
mov
adc
stc
push
cltd
fbld
mov
in
jmp
in
xorb
sbb
jno
sub
mov
fdivrp
shl
inc
popa
insl
xor
dec
aad
push
jle
nop
sbb
inc
loop
out
adc
inc
mov
sbb
push
jle
adc
mov
xor
fcmovb
xchg
shlb
jbe
add
mov
mov
aam
inc
lock
outsb
push
push
ret
inc
push
and
adc
pop
out
xchg
cmp
mov
mov
into
sbb
jnp,pt
lret
or
inc
sub
jmp
xchg
push
loopne
in
fs
xor
enter
js
push
ljmp
hlt
xchg
imul
mov
mov
mov
movsb
xor
lret
pop
testb
ror
ficompl
test
push
testl
pop
push
sbb
adc
js
jbe
movsb
cmpsl
sub
scas
sbb
cmp
pop
scas
outsb
insl
xchg
add
pop
shll
or
pop
xchg
iret
push
push
dec
push
mov
test
pop
inc
call
mov
clc
in
es
pusha
jl
mov
in
filds
popf
jae
mov
lea
pop
adc
mov
in
jno
mov
arpl
mov
int
sbb
mov
mov
jo
test
nop
and
add
loop
daa
mov
arpl
jbe
sub
pop
and
je
or
fidivrs
xor
fcoms
inc
lret
and
roll
cmp
and
or
fs
popf
cld
sahf
sub
cmp
cld
adc
jmp
add
add
add
pop
pop
loope
loope
fistpll
adcl
fwait
dec
pop
cld
or
add
add
sub
fs
adc
outsb
sub
xor
mov
dec
test
test
mov
fdivs
imul
int
jge
lcall
xchg
in
xor
orb
and
add
cmc
cmp
xchg
jecxz
xchg
xchg
jne
jb
xor
daa
mov
out
ss
lcall
ficompl
pop
push
mov
sbb
or
cmp
scas
loope
cmp
or
fldt
sahf
lods
rdtsc
sub
xor
jmp
mov
clc
js
jne
cmp
mov
or
lock
dec
nop
shll
mov
js
in
cli
push
das
imul
cs
inc
outsb
test
je
push
in
test
ljmp
mov
pusha
xchg
pop
pop
dec
outsb
mov
or
ljmp
mov
leave
pop
aas
sbb
sbb
rcl
add
or
rclb
push
or
stos
call
nop
dec
xchg
push
sbb
inc
add
and
arpl
in
scas
imul
mov
lcall
mov
pop
push
add
dec
iret
int
lcall
movsb
orb
into
scas
pop
cmp
xchg
cwtl
mov
mov
xchg
fmuls
sub
push
xor
fwait
cmp
mov
sub
pop
xor
fdivl
lock
pop
jne
add
jmp
inc
adc
xchg
test
push
jb
in
mov
test
pop
add
push
push
das
sub
dec
int
cwtl
call
les
fnsave
loopne
cmp
lds
cld
xor
mov
mov
pop
sub
arpl
add
or
test
shl
push
dec
pop
cmp
out
xchg
ficomps
add
add
mov
div
push
js
sub
aad
lahf
jmp
fs
push
and
inc
xchg
jnp
and
lret
push
popa
cmp
pop
iret
or
pop
xchg
rcll
push
xor
adc
addr16
aam
dec
sarb
test
jno
test
std
mov
lods
pusha
add
fidivrs
pop
fsubrl
mov
outsl
repnz
add
arpl
fdivr
jmp
dec
pop
jno
xchg
push
inc
inc
lcall
sub
cs
cld
mov
sbb
lods
jbe
pop
dec
pop
aam
sbb
add
ret
mov
cltd
les
shll
xlat
mov
scas
push
mov
ret
out
xchg
push
loop
lods
pop
nop
or
mov
mov
into
xlat
mov
clc
int
pusha
or
xor
sub
lret
or
or
mov
push
and
sbb
jno
xlat
jp
pop
mov
dec
insb
js
add
or
shrl
fnstsw
cmpsb
pop
or
loopne
lods
sub
mov
mov
rcll
jne
xor
loopne
popf
pushf
repnz
int
adc
leave
add
out
push
daa
xorb
in
inc
roll
pushf
les
adc
adc
add
mov
xor
adc
xchg
add
rcrl
mov
xchg
pop
add
les
or
cmpsb
mov
pop
push
ds
dec
aam
mov
xchg
sbb
mov
inc
mov
imul
insb
pop
popf
xor
jp
cld
scas
inc
xchg
xchg
xchg
push
push
in
xchg
dec
mov
cmp
dec
push
mov
frstor
divb
mov
int3
sub
jb
setns
cs
aaa
scas
testb
and
mov
ret
and
enter
mov
xlat
jg
sbb
in
stc
pop
dec
mov
or
pop
shrl
lock
jle
jp
test
jno
mov
add
insb
mov
mov
rclb
and
jne
push
push
adc
sbb
inc
les
adcb
hlt
sbb
inc
mull
mov
inc
test
ljmp
into
adc
cmc
sahf
inc
aad
lods
pop
jns
paddb
jbe
shll
scas
or
pop
test
add
testl
push
add
add
js
mov
xchg
je
stos
sbb
dec
jmp
and
inc
push
repz
sub
push
insb
ss
pop
jmp
add
add
add
test
xchg
and
cmp
dec
sti
push
or
pop
add
repnz
add
xlat
ret
sub
add
add
cltd
test
sub
adc
leave
mov
xlat
sbb
pop
clc
lock
or
pusha
mov
mov
xchg
sub
or
aad
stos
inc
dec
movsb
inc
outsb
mov
lods
int3
lds
jecxz
and
rorl
add
pop
sahf
jb
xor
push
repz
push
inc
push
jecxz
adc
push
outsl
mov
push
sbb
das
rcrl
lea
les
shlb
cmp
loop
cmp
pop
out
pop
int
ja
fldcw
aas
inc
rcrl
mov
mov
rcll
jne
jle
addb
dec
lret
sub
xchg
stc
nop
push
mov
decl
popa
shll
mov
cwtl
out
dec
mov
push
adc
xchg
xchg
add
sub
xor
std
test
nop
xor
out
mov
add
loop
hlt
mov
push
scas
pushf
loop
scas
jle
fbld
mov
data16
jb
mov
movb
icebp
push
hlt
jnp
outsl
mov
sub
cmp
xor
icebp
jne
sub
or
adc
mov
sbb
lds
cltd
and
shrl
imul
aam
scas
pop
cs
adc
mov
add
lock
dec
jnp
push
push
pusha
pop
jnp
repnz
lret
scas
mov
ret
jns
sahf
mov
dec
and
jg
or
adc
insl
repz
stos
mov
mov
push
insb
pop
or
mov
popf
push
loopne
adc
minps
addr16
out
je
cmpsl
clc
dec
adc
and
imul
cmc
mov
mov
lock
mov
cmpsl
mov
sti
sub
mov
and
add
insl
in
jne
ss
xchg
pop
cld
fiaddl
movl
cmp
sub
loope
mov
imul
push
jo
rolb
rcrb
inc
jl
loope
daa
xlat
xchg
xchg
inc
cmp
mov
mov
lock
push
and
and
push
mov
or
sub
pop
sub
jnp
bound
outsl
das
inc
add
inc
ret
ret
cs
pop
stos
enter
push
cwtl
and
pusha
dec
lds
ss
aam
jl
repz
push
out
sarb
adc
rorl
negl
test
cmpsb
lds
and
push
or
cwtl
rclb
and
or
sbb
ficomps
ja
ss
cmpsb
mov
loop
das
loop
fnstsw
leave
hlt
stos
shl
cli
add
sbbb
icebp
cmp
loopne
fiaddl
leave
or
sbb
mov
aas
push
insl
pop
mov
xor
pop
test
imul
outsl
sub
or
jp
jne
pushf
cmc
jb
sub
jle
push
repz
out
xor
xor
xor
dec
mov
push
push
aas
xchg
enter
and
xchg
mov
popf
mov
lods
fadds
into
insb
je
fnsave
xor
int
pop
mov
imul
or
add
pop
pop
ret
mov
mov
imul
push
insl
sbb
mov
out
mov
sahf
xchg
or
or
inc
clc
fsub
cli
and
fwait
in
movsb
popa
fbld
subb
or
jge
add
cmp
inc
out
sti
jg
adc
pushf
mov
jge
pusha
mov
shlb
adc
and
jb
and
sbb
jecxz
mov
pop
out
cmp
iret
cli
scas
aas
or
add
pop
pop
or
jg
cmp
mov
mov
cs
cmp
mov
inc
adc
xor
mov
mov
xor
push
xchg
add
das
lcall
push
ss
popa
push
loop
jno
xor
and
scas
xchg
out
loop
mov
mov
pop
daa
mov
sub
dec
push
or
sub
dec
or
cs
mov
iret
mov
push
call
pop
pop
ja
add
inc
loope
mov
scas
shll
jle
add
sbb
pop
xchg
xchg
push
adc
fisubs
cwtl
dec
mov
cwtl
mov
cmp
add
add
add
cmp
loope
mov
test
add
add
out
add
mov
movsl
stc
rclb
fidivrs
adc
push
sub
movsl
cmp
jl
jle
js
adc
push
jge
dec
lret
add
int3
mov
cmp
push
in
xor
adc
cmp
sbb
jl
mov
jo
cmp
cmc
mov
ds
sbb
inc
sbb
add
aas
ret
xor
or
adc
dec
cld
jae
inc
cltd
movsb
lret
popf
push
addr16
push
sub
jb
mov
mov
dec
or
loop
loop
pop
dec
xor
cmc
pop
outsb
call
push
push
dec
sub
dec
aad
bnd
sub
std
js
ret
cmp
cld
pop
add
mov
je
cs
mov
xorl
stos
mov
lods
jp
sub
adc
adc
sarl
or
sub
js
insl
mov
cmpb
ja
xlat
lods
add
icebp
ret
lock
xchg
sbbb
shl
outsl
dec
or
pusha
xlat
jno
push
push
jg
pop
dec
call
xlat
lods
pop
cmp
and
leave
xchg
test
lret
mov
mov
inc
xchg
loopne
mov
jle
fsubr
push
dec
add
jg
xchg
cmpsl
addr16
or
jno
jne
jmp
cmp
gs
mov
movsb
pop
dec
sahf
les
cmpsl
xor
pusha
pop
in
shrb
pop
pop
inc
sbb
imul
inc
adc
movsb
xor
int
rcr
fwait
js
pop
lcall
push
fbstp
test
cmpsb
mov
dec
cmp
cmp
out
or
rol
mov
jnp
fs
out
push
inc
test
out
aaa
jo
cmp
sub
movb
fisubrl
jle
xchg
cmp
xlat
outsl
stos
ja
add
mov
aam
repnz
psrld
clc
aad
jmp
ror
adc
gs
push
and
or
popf
stos
mov
outsl
test
and
test
xchg
in
addb
xlat
xchg
inc
push
sbb
int
inc
xor
or
shll
xor
fbstp
imul
pop
pusha
xchg
pop
loopne
push
and
pop
add
pushf
adc
aam
and
aad
sti
jg
fidivl
int3
pop
lods
add
and
cltd
outsl
iret
arpl
sub
fbstp
call
icebp
test
insl
jnp
mov
aam
arpl
mov
adc
rcl
xor
mov
adc
out
ds
stc
out
lods
out
insl
xor
cmpsb
and
sub
addr16
adc
mov
mov
fs
dec
cli
loopne
clc
mov
or
dec
fsubrp
adc
shll
jg
sub
scas
bound
fiaddl
mov
lahf
lods
cltd
in
js
rdtsc
or
aam
je
imul
and
or
pop
ffree
add
je
lds
pop
imul
mov
add
adc
ret
mov
mov
dec
add
cs
add
test
call
fwait
jo
and
int
aaa
cmp
mov
shrb
gs
into
adc
sub
daa
bound
mov
cmc
mov
pop
push
nop
insb
inc
xlat
jne
mov
test
add
xchg
je
xor
and
rcr
or
xlat
iret
mov
sub
sub
adc
lret
and
adc
mov
into
mov
push
lods
cmp
push
push
mull
imul
inc
sti
out
push
imul
jb
leave
inc
mov
icebp
sub
add
xchg
fwait
ds
push
inc
inc
xor
cmp
testb
pusha
hlt
add
data16
sbb
mov
cmp
mov
jnp
adc
sub
jno
cltd
int3
pop
mov
out
add
inc
jle
xor
adc
and
xchg
add
aad
xchg
mov
clc
aad
adc
mov
loopne
arpl
in
fwait
add
rol
dec
cmpsl
repz
or
adc
into
in
ret
lock
loopne
inc
dec
es
dec
mov
push
adc
lret
jmp
aas
in
leave
outsl
sti
mov
add
add
add
jg
mov
jp
ret
mov
arpl
add
add
add
cmc
push
or
push
mov
leave
je
push
pop
pusha
sub
lret
aam
mov
or
pop
jle
sub
inc
xor
sbb
and
sbb
mov
es
push
mov
jle
jno
adc
lret
cmp
ret
popl
mov
cmpsl
add
hlt
jbe
add
imul
cli
stos
mov
adc
es
cmp
dec
loope
push
aad
and
mov
or
std
out
and
and
cwtl
sarl
xchg
les
int3
jae
push
in
inc
mov
in
lahf
testl
repz
add
push
hlt
sbb
mov
add
in
push
aas
call
in
icebp
inc
push
mov
mov
inc
test
xor
jl
add
push
pusha
das
int3
push
dec
xchg
rdtsc
movsb
iret
adc
push
cmp
sbb
sub
aad
les
mov
mov
mov
lock
es
mov
pop
repnz
sbbl
imul
gs
jecxz
and
sbb
sahf
sbb
adc
push
and
imul
test
stc
sti
pop
adc
ja
jb
lcall
and
ss
jl
ret
xchg
xor
add
push
push
psubsw
cmpsl
int
xchg
xor
leave
shr
adc
pop
jecxz
jae
jne
cmp
xchg
jnp
cmp
xor
dec
insb
xchg
xchg
in
dec
xor
and
pushf
cmc
je
iret
dec
push
jmp
mov
jmp
cld
stc
fnstcw
ja
pop
pop
sub
lds
in
call
sub
adc
pop
inc
mov
addb
fadds
mov
xor
and
das
shlb
repz
out
fistps
clc
mov
and
cmp
cli
cmpsb
mov
gs
pop
push
insb
out
inc
sbb
mov
push
or
clc
stos
pushf
jnp
fidivrl
sub
pop
dec
xchg
pop
dec
bound
lcall
rolb
cmpsl
loopne
enter
xor
adc
lret
adc
scas
daa
addb
mov
fidivrs
mov
xor
imul
adc
inc
aas
mov
sbb
xchg
shll
shlb
test
xchg
dec
xchg
cmp
ret
xor
and
repnz
imul
addl
dec
mov
jp
nop
fisubs
fnstenv
mov
adc
ljmp
cli
mov
js
push
in
fwait
jecxz
xchg
sbb
mov
xor
stc
inc
cmp
pop
fdiv
popa
sbb
repz
mov
mov
and
cmp
imul
imul
mov
outsb
pop
inc
outsb
push
adc
inc
fistl
xor
jb
mov
mov
leave
ja
nop
lods
inc
cld
loopne
clc
jge
imul
movsl
fidivrl
les
arpl
lods
lock
inc
out
pop
mov
into
in
xor
cld
adc
pop
mov
inc
jl
or
mov
push
xchg
shlb
adc
add
mov
add
mov
dec
sub
adcl
jmp
xor
adc
rorb
scas
dec
test
cs
cli
push
cmpsb
mov
xlat
cltd
or
add
xchg
jae
jg
mov
inc
into
jnp
dec
das
mov
lods
out
das
stos
fstl
stc
push
dec
mov
inc
push
mov
cltd
rorb
push
dec
fidivl
add
and
insb
out
mov
ja
add
fwait
push
jmp
shll
push
pop
stc
push
js
push
add
ja
mov
testl
fcmovb
jle
jne
and
mov
sbb
out
sub
pushf
fldcw
sub
and
fldenv
sbb
sarb
xchg
xchg
nop
and
or
mov
les
cmp
fnstsw
adc
pop
ret
pusha
pop
es
aas
and
mov
sti
movsb
shrb
and
nop
or
and
sub
movsl
fldcw
ret
movsl
imul
daa
shrl
jg
les
mov
mov
int3
mov
push
ss
adc
sub
mov
add
add
add
push
push
cmp
cmp
push
pop
mov
lahf
xor
add
repnz
add
call
mov
pop
jp
push
jp
push
mov
mov
fnstenv
pop
inc
and
jnp
in
jg
cltd
test
lods
or
mov
push
lret
add
mov
mov
adc
cltd
pushf
pop
mov
sub
mov
jo
push
lds
sbb
and
xchg
cmc
mov
insl
pop
mov
sub
test
js
clc
push
lock
mov
or
and
push
mov
xor
lahf
adcb
mov
pushf
xchg
mov
mov
rorb
stc
sub
test
sub
cmpsb
das
test
test
pop
mov
pcmpgtd
testl
dec
xor
mov
bound
shlb
or
mov
movsl
sub
push
inc
pop
fistl
in
push
mov
xchg
sub
je
push
mov
sub
hlt
add
push
and
push
dec
lcall
int3
test
sbbb
sbb
sub
cmpsb
sbb
mov
hlt
insb
lock
in
add
jecxz
add
in
mov
out
subb
sbb
sub
push
rcll
iret
jo
mov
jb
mov
sbb
mov
je
push
inc
sbb
sbb
stos
test
push
jmp
sub
bound
call
sbb
testl
sbbb
addr16
mov
into
add
movsl
out
mov
cmpsl
inc
adc
push
pop
add
pop
push
lret
mov
gs
and
iret
daa
aam
loop
cmp
mov
inc
pop
jo
test
ljmp
fs
pop
mov
mov
cmp
dec
fcomp
out
pushw
mov
cwtl
jbe
sahf
add
push
inc
push
inc
inc
push
or
xchg
mov
lret
stos
mov
mov
popf
lret
out
stos
dec
pop
dec
aaa
inc
idivl
xchg
test
jmp
push
xchg
in
test
cltd
insl
data16
pop
cmp
test
fisubrs
mov
or
ja
mov
rcrl
fimuls
call
jecxz
cmpsl
fs
or
mov
ds
scas
cmp
dec
xlat
gs
and
mov
jecxz
or
out
mov
out
push
fdiv
aaa
mov
scas
mov
jae
out
add
or
xchg
sahf
inc
stos
fisubs
sub
jmp
fildll
pop
inc
push
jle
shrb
mov
pop
inc
outsb
ljmp
stc
adc
sub
mov
cmpsl
pop
or
fs
in
fwait
aaa
repnz
iret
push
aam
mov
mov
fsubrl
test
movsl
pop
sbb
and
push
or
mov
out
ljmp
push
mov
outsb
aad
mov
sbb
inc
mov
and
dec
cwtl
inc
sbbb
dec
sbb
sub
std
fwait
out
and
fnstenv
daa
nop
out
aas
and
sbb
adc
imul
sub
xchg
ret
inc
mov
xor
mov
je
or
mov
pop
pop
push
jbe
movsb
shlb
clc
xor
pop
or
and
xor
mov
repnz
movsl
adc
fildll
aad
int3
outsb
jle
pop
mov
xchg
mov
mov
push
jae
in
pop
mov
mov
out
pop
repnz
mov
xchg
mov
in
lcall
sbb
mov
jmp
loop
mov
nop
lret
and
mov
outsb
in
cwtl
aam
pop
scas
jp
add
mov
adc
js
dec
push
enter
idivl
sub
lds
fistps
push
shlb
or
mov
xor
inc
les
and
test
cmp
enter
lret
sarb
dec
in
fs
inc
sbb
les
fucom
and
inc
jo
add
cmp
into
aas
pop
jns
bound
mulb
dec
pusha
fcomps
xchg
repz
in
add
add
lret
jnp
mov
insb
test
sbb
cmp
rcr
mov
inc
lret
cwtl
mov
xchg
sub
ds
repnz
cmpsb
jnp
add
add
add
sub
jg
test
out
cmpb
add
insl
add
repnz
add
inc
dec
cmp
test
rorl
or
jmp
lds
fists
loope
lock
cmp
xor
vmread
pushf
cltd
shl
outsb
sbb
add
push
mov
bndldx
es
sbb
jb
shl
lgs
icebp
add
cmc
pop
add
sti
xchg
sub
and
adc
sub
in
pushf
nop
or
mov
inc
outsb
out
and
pop
adc
push
jnp
dec
aam
leave
xor
cmpb
imul
call
out
gs
test
stc
pop
lret
cwtl
mov
insl
jl
or
das
cmp
loope
bound
mov
inc
add
es
out
lock
push
push
mov
gs
in
pop
mov
rcrl
cmp
cmpsl
inc
push
clc
ret
inc
std
pushf
sub
ret
in
adc
jno
enter
test
push
aas
stos
into
subl
xorl
push
shrb
inc
fsubl
push
dec
insb
movsb
pop
movsl
stos
mov
fistpl
sub
add
xchg
lcall
cmp
jne
cltd
sti
ret
mov
mov
cwtl
in
mov
adc
js
fsubr
fs
in
ret
test
pop
loope
cmp
iret
cwtl
jo
add
pusha
sub
lahf
jg
flds
mov
mov
pop
das
xor
xor
pop
mov
xchg
mov
mov
jae
xchg
scas
pop
dec
lret
es
xchg
pop
adc
dec
xchg
sub
ror
mov
or
mov
push
push
icebp
cmpsb
pavgw
popf
pop
dec
divb
add
fwait
popf
push
icebp
mov
mov
imul
into
add
sbb
cltd
fisttps
push
rcl
cmp
enter
cmpsb
xor
jmp
fnsave
jne
inc
push
pushf
jmp
dec
dec
std
pop
adcl
fdivs
sarl
leave
push
out
sarb
or
testb
rol
push
xor
inc
lock
or
sbb
mov
xor
jge
fsub
pop
call
adc
bound
lea
dec
jae
rcl
enter
push
adc
cs
cli
scas
and
push
dec
and
jnp
aaa
stos
dec
rorb
push
dec
mov
clc
int
inc
xorb
lods
mov
jl
aad
ds
icebp
ret
mov
adc
js
incl
dec
xor
push
dec
int
inc
das
jp
ja
and
mov
mov
and
fdivl
stc
ficoml
fwait
and
mov
pop
sti
push
mov
xchg
fisubrs
adc
sub
das
or
cwtl
insb
movsl
lods
outsb
sbb
cwtl
fbstp
ljmp
js
mov
loope
dec
push
gs
cmp
push
mov
mov
mov
aam
das
mov
xor
cmc
push
xchg
jnp
push
xchg
jp
lock
mov
fiaddl
aaa
add
mov
int3
lods
shr
cs
andps
jo
loopne
in
push
ja
cmpsb
dec
pop
jg
or
or
xor
repnz
int3
or
cmp
sbb
inc
sbb
paddd
pop
mov
and
add
test
xchg
stos
inc
pop
sub
or
repz
adc
push
pop
dec
or
adc
cmp
fsubs
stc
iret
or
mov
pop
adc
jecxz
gs
js
scas
and
add
jg
ja
pop
daa
dec
fsubl
adc
cli
test
sub
fnstsw
pop
into
shll
loopne
push
add
int
mov
add
shll
push
xchg
mov
decb
sarb
sbb
mov
movb
lret
js
add
dec
mov
add
mov
jbe
jmp
add
sub
subl
mov
fstps
mov
hlt
jmp
jge
inc
xchg
xchg
ss
sbb
decl
jp
mov
movsb
imul
rolb
lock
lahf
out
scas
rcrl
leave
lret
or
loope
dec
inc
jmp
and
xor
lcall
pop
loopne
test
xor
add
add
add
mulb
repnz
out
rcll
and
jb
add
add
add
dec
mov
mov
inc
mov
std
cmc
daa
mov
cmpsb
int3
in
les
into
lods
dec
dec
cmp
lret
cmp
jae
mov
inc
jno
cmc
scas
xor
jl
sub
ljmp
pusha
push
clc
fstps
arpl
xor
stc
dec
or
outsb
lcall
ficoms
dec
popa
pop
movsl
jge
adc
xor
es
push
or
sub
pop
or
push
fadd
mov
fwait
dec
lret
shl
jle
loop
ss
icebp
rcll
mov
jmp
cmp
xchg
sbb
mov
js
insl
pop
inc
lret
add
test
inc
mov
int3
test
inc
mov
jbe
scas
mov
lods
sub
dec
inc
mov
xchg
out
jbe
dec
cmp
dec
into
cmp
ret
pop
cmp
mov
popa
jno
movsl
gs
cmpsb
mov
xchg
insl
jp
xlat
roll
jl
pop
sti
push
adc
jnp
xor
or
insl
popa
pop
fisttps
adc
pop
lcall
cli
add
call
inc
jl
fiadds
lret
insl
push
movsb
outsl
cs
lods
sahf
jo
repz
inc
iret
push
mov
jmp
adc
gs
add
mov
push
int
mov
clc
out
jnp
inc
orl
call
ds
pop
push
fwait
outsb
out
jns
pop
cmp
enter
or
rclb
lret
adc
pop
int
inc
xor
in
mov
dec
jmp
xorb
inc
out
shlb
mov
pusha
test
scas
call
testl
mov
aas
aam
jge
sub
pop
inc
push
lock
and
or
mov
xor
stos
xchg
jmp
push
push
pop
lret
fcoms
jecxz
jp
cmp
mov
out
or
mov
jecxz
jg
cmpsb
in
in
push
data16
jno
enter
dec
jo
ds
push
test
adc
test
lea
dec
mov
or
test
fwait
inc
test
stc
inc
fdivs
fmull
popa
mov
mov
dec
sarl
icebp
inc
add
out
push
cmp
dec
test
arpl
mov
sub
and
add
fcmovnu
xor
je
jae
push
dec
das
lahf
call
ficomps
imul
cmp
in
dec
xor
popa
lods
lock
xor
xchg
js
jle
cmp
rcrb
pop
in
xchg
jbe
pshufw
int
jbe
addl
lcall
push
add
mov
es
mov
add
aaa
mov
jns
ficoms
lcall
imul
mov
mov
sbb
xor
xor
cs
gs
cwtl
or
outsb
xchg
push
mov
fs
sbb
mov
mov
lret
jg
xor
inc
out
adc
push
sbb
test
out
pop
mov
add
mov
shl
pop
ljmp
adc
iret
add
je
xor
xchg
fimull
pop
xchg
pop
cmp
addr16
popf
jne
ret
clc
mov
jb
int
movsb
push
loop
out
add
or
jl
popa
add
sbb
rorb
int
pop
int3
dec
in
push
cli
jp
lret
aas
mov
test
ds
push
xlat
push
lds
push
mov
je
jmp
sub
or
les
xor
sbb
mov
xchg
pop
cli
xor
outsl
mov
les
jge
mov
test
dec
mov
pop
jo
sar
ja
insl
ljmp
cmp
xchg
stos
movsb
jl
push
icebp
test
mov
mov
add
xchg
jg
jns
add
mov
pop
das
bt
push
rolb
es
mov
dec
cmc
popa
inc
mov
test
pop
inc
push
inc
fmull
and
sbb
std
cmpsl
rclb
push
xchg
mov
mov
cmc
sbb
xchg
cmp
cmpsl
xor
jecxz
add
mov
iret
mov
divb
sbb
sbb
cwtl
lret
cmp
andl
mov
fldcw
jecxz
shl
testl
stc
fsubl
add
add
add
mov
mov
add
lock
ja
add
add
add
push
jne
mov
fisttpl
arpl
jo
lods
cmp
sbb
mulb
inc
inc
and
mov
sub
jo
jno
out
dec
pop
and
jmp
ljmp
lret
repz
push
gs
lods
xor
in
test
pop
sub
sarb
out
mov
dec
fidivrl
add
push
adc
xor
push
or
testl
loope
cmp
push
dec
jne
inc
insl
cmp
into
pop
jle
push
gs
cld
sbb
xor
cmp
inc
and
movb
jb
adc
out
das
push
push
inc
pop
sub
mov
clc
push
incb
dec
adc
pop
addb
mov
repnz
gs
inc
jg
cmc
xor
jge
dec
pop
dec
jns
jno
std
leave
popf
out
pop
mov
ficomps
sub
mov
mov
mov
add
mov
lods
mov
push
add
fbstp
loop
jl
mov
inc
pusha
push
and
sub
jl
pushf
dec
dec
sub
fmull
sbb
or
jb
add
ret
push
xchg
imul
mov
call
mov
ljmp
movsl
adc
add
icebp
jle
dec
dec
repnz
add
jg
daa
les
aaa
cmp
jo
sub
lret
out
fldcw
fstp
fisubrl
pop
jle
iret
adcb
adc
test
pusha
cmp
daa
jns
fidivrl
testb
mov
loop
mov
movsb
fldl2t
fwait
jbe
sbb
aad
mov
sbb
cmp
xlat
add
mov
sub
add
lods
cmp
clc
fcompl
push
xlat
decl
push
stc
test
int3
cmp
sub
rorl
xchg
cmp
mov
scas
push
iret
adc
int3
addr16
rcrb
xchg
lds
dec
and
cmp
lcall
jbe
pop
mov
mov
jne
je
aas
ja
repnz
inc
inc
push
clc
jnp
ror
inc
add
adc
test
and
cmpl
lods
mov
mov
pushf
mov
mov
int
push
daa
mov
notb
int
inc
xor
out
or
lcall
ljmp
cmp
mov
add
fbld
fists
aas
mov
in
pop
pop
inc
mov
pusha
mov
je
js
xchg
pushf
sbbl
notb
dec
dec
punpckldq
popf
fistpll
adc
mov
cmp
inc
or
out
add
sbb
mov
out
scas
ja
enter
ja
sub
xor
ja
pop
imul
dec
stos
jne
mov
pushf
sub
pop
lods
cli
shrb
mov
mov
jmp
aam
or
sbb
call
mov
adc
mov
aam
mov
push
movsl
aaa
inc
or
push
test
fisttps
jnp
pop
mov
icebp
pop
rclb
xlat
jno
mov
loopne
dec
add
jmp
adc
movl
inc
or
xchg
subl
add
dec
mov
dec
test
les
mov
sbb
jmp
mov
decl
and
or
mov
mov
das
ja
lock
shr
add
fs
pop
mov
dec
add
pop
aad
push
test
inc
push
xchg
or
mov
test
fstpl
clc
hlt
lahf
xlat
hlt
xor
sub
cld
push
sahf
cmpsb
mov
repnz
ja
or
ds
pop
loopne
fdivl
sahf
pop
lahf
sti
xchg
adc
xor
adcl
lcall
divb
imul
cli
sahf
mov
mov
pop
adc
sub
dec
cmp
and
jmp
loopne
push
xlat
repz
data16
or
in
sub
sahf
sub
cli
add
outsl
out
imul
push
imul
mov
lcall
fst
lret
movsb
add
hlt
scas
pop
adc
xchg
pop
es
sub
add
in
xchg
icebp
dec
lret
mov
mov
imul
add
add
add
mov
and
jl
add
add
add
xchg
cmp
xor
jns
cmp
addr16
pop
into
sub
aam
notl
mov
pop
cmp
pop
xor
mov
cmp
inc
jnp
movsl
mov
jae
ret
sbb
cmp
insb
dec
icebp
dec
sub
testl
push
pop
dec
and
aam
sarl
add
sub
sub
mov
repnz
push
push
ror
xor
pushf
adc
fnstcw
insb
ret
lea
fsubp
das
cltd
std
movsl
les
xor
jbe
mov
popf
shlb
cmp
aam
cwtl
fcmovne
add
xchg
pop
and
hlt
inc
int
or
loop
mov
in
insb
sbb
lds
shlb
sbb
std
jne
nop
les
popa
pusha
cmpsb
shll
and
jge
push
lahf
dec
call
ja
dec
cli
mov
add
lea
pusha
cmp
mov
and
fisubrs
fsubrs
xchg
mov
add
jne
or
adc
pop
daa
leave
movsl
in
scas
dec
dec
dec
jle
lock
roll
mov
insl
inc
pushf
arpl
dec
xchg
in
movsl
mov
sub
adc
mov
and
xchg
stos
aad
sub
mov
and
jno
jae
lea
mov
xchg
or
clc
sub
lahf
adc
test
add
icebp
sbb
cmp
sbb
inc
mov
ss
call
clc
scas
mov
clc
scas
mov
out
ficompl
push
into
enter
mov
jo
jb
or
mov
repnz
add
lret
push
fld
cmp
pop
sub
xchg
jp
inc
push
mov
cmc
orl
pop
push
inc
xorl
ljmp
cs
cmp
push
pop
inc
push
test
and
adc
and
fcmovnbe
loope
push
cmpsl
int
sti
stos
cld
push
jns
sbb
je
cmp
addl
shlb
mov
aad
jnp
adc
xor
pop
sbb
js
cmc
es
sbb
sbb
dec
fcmovnb
dec
lods
scas
out
leave
mov
or
out
pushf
push
jecxz
mov
add
mov
mov
mov
ret
out
call
ljmp
push
jne
jp
test
push
mov
icebp
cmpsb
sbb
ss
cmp
mov
shlb
cmpsb
xor
jp
lret
dec
mov
incl
or
call
movsl
data16
dec
jle
cmovno
popa
push
push
insb
repnz
int
add
xor
das
inc
hlt
daa
and
xchg
std
lock
pushf
pop
loopne
jecxz
xchg
popa
sub
hlt
pop
mov
arpl
pop
push
sub
mov
call
test
rolb
outsb
test
cmc
mov
test
rorb
loop
daa
and
das
fisubrl
test
and
call
insb
add
mov
jns
stos
or
mov
mov
int
jl
push
cltd
stos
mov
scas
push
sub
rcr
sub
inc
jl
bound
mov
mov
and
bound
add
ljmp
mov
or
std
outsl
pop
mov
jne
pusha
hlt
fs
or
ss
clc
xchg
gs
cmpsb
mov
adc
icebp
sahf
push
or
outsb
sbb
add
ret
adc
or
sbb
insb
and
stc
aad
outsl
or
push
add
sub
pop
cmp
jno
mov
movsl
cmp
sarl
and
nop
xchg
dec
xor
shrd
sub
push
scas
aas
mov
fwait
mov
add
das
add
rorl
add
popa
pop
xor
mov
sbb
dec
aad
sahf
add
and
inc
int
sahf
lods
xor
dec
lock
bound
sbb
and
cmpsb
xchg
test
xchg
inc
ljmp
sub
mov
inc
xchg
mov
call
jb
hlt
push
lcall
sbb
stos
pop
jae
xchg
rorl
lds
push
incl
add
add
add
pop
fldl
inc
sti
aas
jb
add
pop
inc
mov
add
add
add
sti
out
jno
mov
jecxz
aas
int3
push
push
in
inc
aad
lods
nop
sbb
ljmp
and
cmc
pop
test
stos
push
dec
mov
mov
das
push
int3
sbb
pop
movsl
aam
bound
hlt
xchg
arpl
push
fdivl
lcall
jg
iret
mov
icebp
mov
cmp
and
fdivrl
add
lcall
loop
sub
inc
xor
dec
insb
inc
aam
and
mov
sahf
ss
dec
mov
lock
test
inc
stos
jmp
adc
rcr
fwait
and
xchg
adc
cmp
and
mov
cwtl
cmp
inc
push
mov
lods
lahf
mov
movsb
jnp
pop
adc
fldenv
repnz
lret
xchg
movsl
in
jecxz
fsubs
or
idivl
cld
push
xchg
or
int
cld
and
int3
pushf
cmc
faddp
ss
push
pop
sbb
jo
ja
jmp
cmp
cmp
and
addr16
jmp
lret
dec
mov
stc
icebp
xlat
les
cmp
mov
adc
or
inc
hlt
xchg
mov
mov
outsb
dec
outsl
in
xor
mov
mov
adc
rcrl
sbbb
mov
rcrb
adc
push
or
cmpsl
cli
nop
test
mov
nop
mov
inc
rolb
inc
adc
sbb
push
pop
jno
jne
lock
fidivs
fsubs
bnd
test
aad
bnd
dec
push
pusha
leave
xor
leave
cmp
mov
enter
or
xchg
clc
in
push
je
mov
sub
addb
ljmp
adc
frndint
nop
ficompl
mov
scas
icebp
aaa
imul
stos
fcmovnbe
ret
outsb
add
push
es
clc
sub
push
aaa
adc
iret
jae
dec
jb
test
and
pop
popa
cld
idivb
jl
int3
or
mov
cmpsl
push
xchg
jns
sbb
fdivs
subl
push
imul
in
inc
push
inc
insl
xor
insl
cmp
pop
fdivrs
pushl
sbb
jns
mov
mov
in
add
sbb
pop
mov
arpl
inc
cli
adc
jb
lock
insb
xchg
lea
jmp
pop
add
jno
push
and
or
adc
out
cmpl
lret
jne
popa
push
cmp
outsb
sub
dec
mov
mov
loopne
pop
ret
imul
cs
sahf
push
pop
cli
or
ret
jecxz
jo
test
ss
push
fiaddl
aas
mov
and
xlat
push
nop
xor
adc
fcmovbe
pop
shl
jl
test
mov
jbe
xchg
pusha
and
push
lds
in
sar
adc
sbb
popa
push
ljmp
mov
ret
insb
pop
in
loope
and
imull
stc
out
icebp
enter
xchg
push
ds
shr
lcall
mov
movsl
add
lret
icebp
sub
arpl
xor
mov
and
enter
jecxz
pop
mov
cwtl
sub
lcall
jns
push
dec
fists
or
rcl
lock
jmp
pusha
inc
test
testb
push
daa
inc
bound
lods
into
xlat
leave
jp
test
or
inc
ds
or
dec
and
pop
mov
mov
test
xchg
call
aas
in
jb
mov
jbe
xlat
fiaddl
cltd
enter
xor
xchg
xchg
scas
jl
lret
insl
mov
lods
xchg
inc
test
sti
fwait
mov
int
ljmp
push
push
lock
cltd
repz
mov
mov
mov
jo
mov
mov
cli
mov
clc
frstor
jmp
inc
push
inc
iret
xchg
and
shrl
push
aas
jge
scas
fmuls
scas
arpl
sahf
xor
rorl
and
xchg
xchg
lcall
jmp
sub
lcall
push
sbb
in
cli
sbb
punpckldq
repnz
stc
sub
loope
iret
ds
loope
scas
int3
mov
repz
ja
insb
push
ljmp
lret
shlb
mov
xor
ljmp
shll
lods
push
push
or
mov
add
add
add
add
mov
or
or
addl
add
arpl
mov
lret
xchg
xchg
push
add
fcmovnb
fnstcw
push
mov
pop
flds
inc
mov
aad
dec
mov
cmp
mov
add
mov
inc
xorb
fwait
in
inc
rolb
or
shlb
jl
into
addr16
xchg
jb
or
and
push
push
out
negb
popf
pop
add
aad
cmp
mov
lahf
loop
imul
pop
jmp
je
js
lock
mov
das
fidivrl
sub
sbb
fbld
push
imulb
scas
inc
sarl
shll
shlb
dec
sub
mov
push
fstps
pop
scas
jbe
inc
cmp
and
sti
outsb
scas
lds
lock
cmp
mov
mov
cmp
pop
xor
ret
adc
imul
in
mov
scas
dec
sub
arpl
aad
xchg
sub
mov
xor
cli
ja
mov
mov
mov
insl
fwait
shr
fnstsw
fwait
jge
sub
adc
out
adc
jno
cwtl
cmp
lahf
sub
jl
mov
sbb
faddl
ds
lock
imul
inc
xor
mov
in
sub
adcb
mov
adc
out
mov
and
sub
inc
testl
nop
sbb
and
fldcw
repz
mov
push
add
jmp
cs
and
clc
xchg
add
inc
addb
fmuls
mov
push
dec
pop
or
xor
push
pmulhw
in
test
inc
jp
push
in
mov
add
mov
repnz
cmovnp
iret
cmp
decl
inc
lds
adcl
jp
daa
lahf
jge
es
inc
ret
dec
rcrl
xor
sub
lds
les
call
frstor
adc
and
lods
outsb
inc
pop
sarl
insl
and
mov
out
jle
test
imul
jecxz
fs
jae
out
and
mov
sbb
mov
rclb
repz
imul
dec
imul
mov
jge
inc
dec
test
les
push
jecxz
sbb
test
or
xchg
mov
mov
sarb
sub
xchg
jns
les
mov
sbb
xchg
movsb
push
sbb
push
mov
pusha
mov
mov
mov
jb
xchg
inc
lcall
xchg
jno
push
repz
sbb
outsb
and
cmp
out
or
adc
cltd
push
hlt
cld
int
jle
cmp
add
aam
adc
push
mov
add
ja
mov
add
inc
ret
mov
push
iret
addb
cli
in
ljmp
sub
dec
jp
adc
pop
sub
sbb
pop
into
fiaddl
sub
sbb
xor
setp
push
mov
incl
sbb
sub
cmpb
daa
jbe
stos
pop
push
mov
out
dec
insb
aaa
lret
pop
xchg
loop
push
sbb
and
xor
int3
and
push
xchg
push
sub
iret
repz
dec
xor
test
call
jbe
aas
das
test
pop
or
neg
popf
pop
aam
arpl
mov
int3
sbb
fprem1
push
pop
xchg
sbb
sbb
pop
add
pop
sti
jae
pop
iret
sub
xchg
add
repz
aas
in
push
pop
aaa
outsl
pop
pushf
scas
add
mov
enter
and
movsb
ja
mov
xchg
or
ret
or
adc
or
jne
mov
pusha
jbe
notl
arpl
xor
test
loope
sub
icebp
subb
mov
dec
and
shrl
sbb
or
fisubrl
mov
pushf
or
sbb
inc
push
mov
scas
adc
arpl
enter
ret
aaa
sub
addb
adc
xlat
xchg
fimull
call
pusha
sbb
mov
xchg
pop
xchg
xor
cmp
je
outsl
adc
xchg
inc
scas
stos
mov
xchg
push
sub
mov
stos
mov
and
pop
cmpl
add
add
add
mov
cmp
mov
add
add
add
stc
sbb
xchg
adc
daa
scas
lock
jecxz
xor
ret
fiadds
pop
xor
mov
add
inc
and
cmp
cmp
sti
sbb
pop
inc
lret
inc
iret
xchg
xor
xor
and
mov
xchg
jne
and
cmc
std
out
into
hlt
mov
mov
mov
cmpsl
leave
xchg
lret
fimull
mov
aam
sbb
test
rclb
cmp
mov
lock
mov
mov
mov
inc
jmp
int3
mov
hlt
imul
test
mov
mov
jl
sub
fxch
lret
cmp
in
test
mov
inc
out
imul
xchg
pusha
daa
jge
inc
repnz
push
insb
in
and
push
adc
stos
push
adc
inc
push
popf
and
xlat
push
test
xchg
aam
pop
mov
outsl
sbb
cs
clc
sub
test
mov
sbb
sbb
jmp
sbb
adc
mov
pop
in
vsqrtps
iret
or
jns
sub
jp
dec
dec
xor
nop
push
mov
mov
lret
ja
inc
call
push
pop
out
bound
lret
jge
xor
jnp
ljmp
arpl
xchg
inc
js
stc
mov
push
loope
nop
rcr
sbb
cld
adc
rorl
addb
jns
hlt
mov
push
iret
pop
shlb
sbb
or
mov
ja
push
stc
sub
js
sub
sbb
js
pop
stos
movsl
jl
frstor
stc
js
add
mov
imul
cmpsb
mov
mov
cmp
add
leave
sti
or
dec
jecxz
sub
jmp
jbe
scas
mov
imul
popa
aaa
pusha
lods
mov
inc
lahf
pop
or
jbe
pop
add
inc
mov
cmp
int3
mov
xorl
out
mov
xchg
xor
pop
jg
sbb
aam
push
jno
mov
xchg
xchg
push
sub
pushf
in
or
scas
jl
loopne
jle
xor
popf
mov
mov
popf
arpl
enter
test
or
aaa
in
xor
pop
daa
inc
jg
mov
jno
mov
frstor
dec
adc
cltd
and
xor
imul
and
jae
int
test
sbb
test
es
mov
cmpb
cld
insl
jge
and
mov
stc
in
push
fbld
push
inc
test
mov
add
scas
mov
xchg
xchg
les
loopne
insb
jns
mov
pop
test
xor
das
mov
sbb
sub
rorb
insb
xor
cmp
ljmp
loope
cmpsl
data16
adcl
adc
mov
cmp
or
test
shrb
dec
cmp
icebp
popa
out
imul
fdivrs
adc
ret
pop
sbb
psubb
stos
fdivs
clc
nop
int3
ret
mov
push
mov
pop
push
pushf
push
sub
push
mov
outsl
setle
incb
fcmovnb
adc
xchg
pop
mov
jle
mov
cmp
or
mov
pusha
mov
push
shlb
shlb
push
or
pop
fildl
or
xchg
orl
jbe
xchg
inc
addl
jno
je
push
pop
addr16
jb
xor
call
xlat
mov
int
push
sbb
addr16
cmpsb
icebp
xchg
in
pop
push
mov
pushf
pop
jo
mov
test
mov
xchg
jg
or
mov
xchg
setl
mov
enter
push
cmc
sbb
repz
lea
das
adc
mov
lds
lret
lods
xchg
test
popf
fbstp
stc
lcall
mov
mov
fisubl
dec
clc
stc
cltd
mov
pushf
or
mov
push
push
and
testl
push
ja
mov
cmp
adc
ds
dec
lds
xor
jns,pn
xor
or
psubsb
dec
loopne
sub
mov
ljmp
incl
fnstsw
je
and
test
dec
movsl
push
rcl
dec
loop
or
sbb
push
out
negl
add
add
sti
and
es
sti
std
sbb
adc
gs
add
repnz
add
push
icebp
jnp
xor
cwtl
mov
iret
out
dec
add
adc
mov
pop
push
stos
dec
sbb
in
xlat
add
and
stos
into
cmp
es
and
xchg
sbb
dec
into
andb
mov
scas
je
push
mov
jno
mov
xor
push
dec
fistps
adcb
mov
sar
jae
push
sbbl
inc
cmp
mov
mov
add
jae
fcomps
jecxz
mov
pushf
fdivl
push
hlt
push
daa
lods
lret
out
push
stos
out
ret
xorb
stos
je
pop
out
sub
pop
mov
and
fcmove
into
call
shrl
push
inc
outsb
add
pop
fld
es
fstl
jb
xchg
test
fnstsw
repnz
ja
lea
jle
ljmp
lods
jbe
movsb
dec
cmp
xor
add
ss
clc
popa
cmp
cmp
lock
popf
cmpsl
mov
dec
push
test
push
dec
jbe
push
cmp
aam
jnp
fisubrs
arpl
jo
mov
mov
sbbl
pop
sub
or
cltd
out
push
mov
lahf
mov
imul
ds
pop
dec
mov
jbe
sub
rclb
push
xchg
add
sbb
adc
inc
jbe
ret
fimull
lock
jo
insl
lcall
dec
dec
xchg
cli
in
sbb
iret
add
or
dec
sub
push
insl
hlt
push
mov
jmp
or
cmpsl
sti
dec
jge
mov
inc
das
or
push
arpl
jl
arpl
inc
out
adc
mov
xor
adc
popf
adc
dec
sub
sub
xchg
aas
mov
mov
stc
jge
ja
aaa
lods
inc
push
xchg
and
daa
lods
mov
test
cmp
repnz
dec
sub
mov
int
fstps
js
inc
test
popf
test
mov
sbb
mov
jae
fadds
dec
sub
out
mov
push
ds
fnsave
pop
jecxz
mov
pop
daa
out
xor
nop
rolb
fnstsw
inc
outsl
iret
lea
nop
or
push
aam
das
xor
outsl
or
fs
xchg
sbb
push
test
fldl
mov
ss
test
push
imul
insl
adc
movb
mov
push
jecxz
aam
add
or
push
loope
mov
jle
jo
mov
sbb
loopw
xchg
outsb
insb
cmpsl
cs
pop
fidivrs
xor
mov
or
jb
pop
xchg
fwait
dec
pop
out
jo
add
or
cmp
adc
cmp
jge
insl
clc
pop
clc
sbbb
nop
scas
inc
push
sub
cwtl
loop
fdivl
inc
ficompl
stos
outsl
cmp
and
mov
mov
inc
xchg
pop
rcrb
mov
in
pop
cs
adc
imul
pop
mov
push
push
mov
jge
sarl
outsl
push
out
sarb
out
loope
pop
int
push
jmp
sub
jl
test
or
inc
pop
int
add
cmp
cmp
lret
aam
in
fists
xchg
mov
jp
xchg
xor
pop
adc
inc
add
and
cmp
mov
adc
pop
jae
dec
cmp
mov
xor
sub
xor
outsl
mov
into
push
mov
sbb
scas
mov
addb
popa
jp
jl
and
sbb
push
jp
jle
ret
fidivrs
lods
dec
rcll
repnz
shll
fisubrs
sti
inc
std
sub
adc
and
loop
and
or
mov
fildll
mov
add
insl
int
repz
xor
dec
push
frstor
stc
lret
pop
mov
sti
jne
pop
outsl
je
cmpsb
je
outsb
xor
imull
lock
mov
pop
sbb
push
movsb
rol
aad
dec
lahf
data16
stos
cld
push
sbb
movsb
cwtl
mov
test
out
push
jmp
fldcw
pop
sarb
arpl
mov
lock
xchg
pop
cmc
imul
jg
aam
sahf
mov
out
lods
mov
das
jbe
shr
push
lock
sbb
jno
xchg
and
push
pushf
daa
cmp
loope
sbb
outsl
xchg
xchg
bound
mov
pop
aam
jb
pop
mov
push
fcompl
cmp
add
sbb
jg
lcall
aaa
push
xchg
add
repnz
add
add
pusha
dec
mov
addb
lahf
push
jl
mov
repnz
loope
js
xlat
out
sub
hlt
int3
lret
outsl
inc
adc
sub
addr16
rclb
cmp
stc
outsl
scas
mov
repz
enter
mov
lods
test
mov
push
repnz
pop
aaa
inc
jmp
pop
negb
mov
xor
mov
sbb
pop
cmp
lcall
push
cmpl
push
test
mov
call
rcrb
lds
pop
inc
fldenv
dec
add
sbb
xlat
out
mov
cld
xor
daa
push
jl
rolb
clc
ljmp
hlt
xchg
lods
faddl
pop
testl
sub
sar
imul
pop
stos
nop
jne
aad
insb
stos
sub
stos
cmpl
jne
out
int
in
and
lcall
pop
ja
sub
sti
jge
rorb
push
inc
push
jae
push
int
mov
xor
or
lods
push
push
imul
push
cmp
cmp
in
sarb
jae
fs
mov
xchg
loopne
add
mov
cmp
cmp
sub
clc
test
faddl
inc
fistpll
out
ret
js
dec
inc
jg
push
in
cmpsb
mov
test
xchg
cmc
adc
lahf
out
sub
inc
in
lea
sub
pop
or
arpl
std
and
jecxz
xor
js
xchg
aas
ret
out
and
ss
js
push
and
dec
and
pop
pop
mov
dec
mov
in
mov
rorb
mov
xor
mov
les
lret
and
xchg
loopne
aad
cmpb
and
aad
das
mov
jp
cmp
cmp
data16
mov
mov
xchg
pusha
sub
lods
pop
sub
sbbb
das
lods
pop
ja
and
cmc
fdiv
sub
lods
mov
insb
clc
pop
add
out
dec
adc
inc
loop
mov
clc
cld
add
mov
data16
cs
data16
dec
in
sub
lret
pop
dec
push
push
imul
sti
pusha
dec
repz
add
loopne
iret
push
sbb
xor
inc
aaa
lcall
addl
pusha
xor
sti
xlat
pop
pop
adc
data16
xor
and
test
cmc
in
xchg
mov
popf
adc
xchg
outsb
loop
push
sbb
xor
dec
mov
jns
dec
sub
mov
adc
shll
daa
test
mov
pop
jne
nop
ljmp
mov
fs
orl
subl
movsb
mov
xchg
movsb
inc
xor
jns
gs
sbb
sbb
dec
outsb
push
fstl
jae
jmp
ja
nop
sub
imul
xchg
xor
jg
fiadds
in
les
xchg
stos
int
push
and
lods
push
int
negb
jmp
popa
add
xchg
das
ret
fsubrl
cmp
cmp
sarb
stc
xchg
sbb
sub
cmp
inc
sbbb
leave
movsb
loop
stos
cmp
push
mov
or
ljmp
xor
insb
repnz
jmp
cwtl
in
jnp
cld
outsl
xchg
add
stc
int
es
cwtl
test
inc
mov
push
adc
push
jae
fcoml
in
or
fwait
popw
cmp
insb
cmp
es
pusha
mov
in
sub
inc
iret
scas
mov
shll
jb
fisubrl
pusha
inc
cs
fisttpl
dec
int3
insb
mov
jl
je
push
mov
dec
int3
arpl
pusha
or
lret
mov
popa
imul
xchg
es
push
addr16
or
mov
or
movsb
addl
int
stos
push
jnp
icebp
mov
jecxz
int3
test
les
mov
loope
stos
outsb
gs
test
lahf
divb
pop
test
lods
les
pushf
into
test
sub
fldt
adc
and
test
scas
das
cmp
or
xor
mov
mov
and
add
add
add
cmp
pop
sub
stos
jns
dec
sub
in
mov
add
repnz
add
mov
pop
jae
into
and
mov
data16
mov
fwait
ja
cmp
dec
or
mov
xor
andl
xlat
dec
ljmp
jle
sbb
push
cli
shrb
dec
call
lea
dec
test
inc
mov
dec
imul
cmpsb
test
fcomps
mov
or
mov
out
into
mov
and
sbb
cld
mov
inc
sbb
iret
int
xchg
test
mov
sub
movsb
jl
dec
add
aam
sub
jb
inc
jecxz
mov
pop
ret
push
rorl
stos
push
push
add
rcl
pop
sbbl
xlat
into
sub
shrb
dec
iret
jne
mov
rcll
gs
jle
push
lods
inc
jecxz
push
jecxz
add
push
add
jmp
add
dec
das
call
xor
or
mulb
fldl
add
inc
adc
outsb
ret
addr16
adc
icebp
adc
into
test
adc
mov
or
add
xchg
xor
cld
sbb
mov
or
es
sahf
xchg
js
repnz
cli
stc
cs
lods
pop
sub
and
mov
sbb
in
das
cmpsl
jmp
jo
xchg
gs
push
mov
mov
mov
ret
pusha
dec
leave
pop
scas
sub
jb
xchg
lcall
mov
sub
adc
or
shr
ljmp
cmp
enter
pop
xor
or
mov
xor
imul
sbb
mov
mov
push
lds
leave
scas
addr16
enter
imul
adc
fadds
out
pusha
addr16
mov
dec
dec
xchg
jle
fstl
les
call
scas
mov
out
mov
xchg
cmp
cmc
sbb
icebp
mov
stc
and
stc
repz
fdiv
push
cld
xor
pop
sub
sub
in
xchg
dec
lsl
mov
cmp
jl
mov
pop
xlat
arpl
push
movsb
insb
adc
and
inc
sub
pusha
sbb
les
ja
inc
iret
cltd
das
iret
dec
cmc
imul
pop
add
xchg
adc
insl
call
js
xor
add
pop
sbb
rol
cmp
sbb
fistl
pop
xor
icebp
imul
cmpsl
pop
dec
jo
std
inc
fisttpll
inc
enter
add
inc
je
int3
mov
hlt
and
adc
cmp
adc
jnp
stc
jl
aam
ret
shrb
sub
inc
cmc
jbe
jns
or
lods
xor
fst
inc
push
push
push
dec
insb
jg
xor
cli
stc
je
dec
xchg
iret
mov
jne
sub
js
pop
fildll
add
mov
and
adc
or
xchg
or
inc
pop
inc
jbe
test
xchg
mov
jne
mov
sbb
xor
mov
mov
adc
inc
push
push
jns
orb
leave
push
fiaddl
adc
lret
jp
dec
jmp
das
out
xchg
xor
mov
cmp
mov
test
mov
lods
repnz
mov
js
push
adc
je
ret
cmp
sbb
pusha
arpl
add
cli
repnz
jle
and
pushf
out
sub
or
test
or
xchg
imul
mov
test
stos
and
inc
xor
dec
add
ljmp
lret
mov
lock
loope
mov
fsubs
jns
inc
iret
ja
push
in
imul
inc
lcall
imul
pusha
adc
into
scas
imul
cmp
push
mov
and
test
cmp
and
or
adc
call
ret
aaa
xchg
gs
sub
js
arpl
into
lds
push
les
in
scas
push
inc
mov
repnz
cld
push
shrl
pop
es
fsubrs
scas
dec
lock
pop
roll
push
push
daa
addb
outsl
daa
out
pop
cmpsl
or
xchg
xchg
jmp
pop
scas
inc
or
leave
mov
inc
jge
push
sbb
sub
push
cwtl
add
adc
sub
xchg
and
adc
inc
adc
push
mov
aam
or
cmovge
jno
nop
sti
jle
int3
add
add
add
lret
dec
jge
xchg
outsl
jge
lcall
add
repnz
add
push
repz
mov
dec
cltd
cli
lahf
adc
ret
in
jle
popf
rol
cld
inc
jno
fs
sub
add
jecxz
pop
mov
imul
jns
fldt
fiadds
mov
mov
mov
jb
mov
data16
or
and
pop
pop
pushf
outsb
sub
and
je
xchg
inc
not
inc
xchg
arpl
movzbl
in
jle
call
push
pop
xchg
cli
or
xor
ljmp
outsb
push
idivl
fsubp
stos
sbb
cwtl
aam
jne
sub
pop
or
std
imul
pop
mov
icebp
in
pushf
test
addr16
pop
mov
pop
nop
cwtl
pop
push
repz
es
sarl
cli
sbb
enter
jp
pop
gs
imul
or
outsl
inc
loopne
push
call
push
in
les
dec
cltd
repz
adc
push
fcoml
rol
adc
int3
cltd
mov
mov
inc
push
mov
inc
test
stos
jle
mov
push
jmp
mov
lret
movsl
hlt
ffree
test
mov
mov
nop
push
cmpsb
loope
cmp
cwtl
pop
in
andl
fistpl
push
jmp
xchg
ljmp
adc
call
sub
mov
cmpsb
add
daa
pop
sbb
inc
clc
mov
pop
xor
add
cmp
sbb
aaa
lock
out
jecxz
pop
repnz
nop
fisttpl
mov
sub
dec
jae
add
lea
cmp
iret
lea
loope
in
cmp
dec
loopne
inc
es
imul
add
fs
arpl
adc
lahf
sub
stc
jno
cld
xor
xchg
dec
popa
mov
inc
lret
dec
in
sbb
sbb
stos
mov
sbb
xlat
pop
popa
std
outsl
scas
fldlg2
repz
jae
dec
shll
fsub
ret
iret
inc
jmp
adc
jl
inc
jae
stc
jb
in
xchg
jae
je
mov
push
sbb
and
sbb
jmp
cmpsb
sahf
mov
jne
mov
mov
sbb
mov
mov
fidivrs
dec
pop
movsb
fcomps
pop
shll
mov
dec
push
vpminsw
push
mov
sti
mov
iret
cmp
test
mov
mov
lcall
pop
scas
push
ficoml
orl
rcl
ja
ret
leave
cmp
aam
cmp
or
mov
les
cmp
push
sbb
or
movsl
or
adc
push
jnp
movsb
or
icebp
aam
fimuls
and
mov
mov
in
fdivl
cmp
cmp
fwait
inc
outsl
mov
xor
mov
cmp
xor
push
xchg
cmc
xlat
dec
sbb
sbb
jge
test
enter
rcll
sahf
xchg
xchg
pop
mov
andl
loope
cmp
adc
in
xchg
cs
xor
js
xor
inc
stc
clc
xchg
repnz
int
std
mov
pop
clc
repnz
xor
push
rorl
imul
or
inc
pop
mov
and
aaa
dec
cltd
pushf
imul
xor
stc
cltd
xchg
insl
cltd
mov
sub
mov
mov
sahf
mov
popa
xlat
or
loope
cmp
bound
jns
add
or
xor
mov
sbb
xchg
mov
add
or
sahf
loope
aaa
call
jbe
lahf
rcrl
add
pop
fwait
into
jno
pop
sub
lods
dec
imul
roll
mov
nop
adc
or
or
pop
mov
sarl
mov
mov
test
aam
fwait
orb
pop
adc
add
repz
xchg
mov
test
cmp
rclb
mov
lahf
fistps
sti
ret
dec
pushl
or
out
stc
mov
sbb
xor
or
sbb
cmp
jge
xor
repnz
addr16
jno
fisttpll
movsb
lods
pop
mov
das
lods
dec
in
mov
push
add
and
push
gs
scas
movsl
arpl
jnp
sbb
add
add
xlat
hlt
push
ljmp
sub
cmp
sub
add
add
mov
jb
icebp
cli
cmp
sbb
xchg
cld
mov
aam
call
cmp
addr16
mul
ffree
pop
aam
add
mov
sub
pusha
jne
sub
dec
stos
lock
inc
shrb
pop
ljmp
mov
jne
sti
scas
mov
shll
orb
vpcomuq
ljmp
fldl
mov
lods
fs
int
repz
stos
jnp
xor
sbb
fadds
ret
mov
movb
fstps
push
xor
vpor
in
sbb
enter
add
add
loop
insb
hlt
movsb
xor
add
or
xchg
jmp
push
xchg
in
cmc
aam
xchg
shr
loopew
xchg
sahf
mov
cmp
shlb
lea
jae
ljmp
lcall
mov
stos
ret
jg
or
jae
dec
shr
ror
dec
xchg
popa
xor
push
mov
movsl
mov
mov
aad
inc
aas
pop
dec
std
popa
lret
cltd
add
stos
sbb
pop
insb
xor
cwtl
fcoml
cmpsb
sub
mov
pushf
jno
pop
cmp
add
xchg
adc
dec
xchg
mov
mov
inc
mov
cli
sub
jecxz
adc
fcomps
adc
cmp
mov
pop
push
insb
iret
sbb
pop
mov
mov
xchg
iret
xchg
jbe
push
lret
aas
pop
sbb
mov
movsl
cmp
subb
mov
stc
test
jge
mov
adc
xor
mov
cmc
push
call
mov
push
fldcw
das
xor
ret
and
ljmp
sahf
in
mov
jnp
stc
dec
mov
xor
jb
andl
ss
inc
rorl
adc
shl
cmpsb
xor
std
jo
int
rorb
push
adc
jne
jmp
cmpsb
push
ljmp
push
mov
out
jl
and
add
int
nop
loopne
stos
jmp
or
push
add
sbb
push
xchg
sahf
mov
inc
sbb
mov
pop
rcll
or
push
pop
xor
mov
repnz
sub
and
or
jmp
rorl
lret
stc
xchg
mov
pop
nop
icebp
insb
mov
mulb
call
sbb
mov
jbe
test
aas
add
cmp
cli
call
xor
mov
lret
js
and
int3
inc
cmp
push
cld
lea
pushf
stc
add
adc
xor
cmp
fistpll
and
mov
lcall
push
jg
stos
or
pop
cmp
rorb
mov
les
cltd
inc
xor
mov
sub
aad
es
fcmove
lods
mov
jb
dec
xor
outsb
cld
lret
push
xchg
sbb
ja
insl
outsl
sub
fdiv
repnz
add
repnz
inc
loop
rolb
push
mov
dec
in
xchg
pop
cmp
xchg
aam
sbb
push
jecxz
cmovp
cmpsl
test
aad
push
mov
movsl
pop
adc
mov
aas
fprem1
out
into
clc
xchg
mov
pop
pusha
or
inc
jp
inc
inc
ljmp
mov
and
add
mov
int
xchg
push
and
test
mov
ja
cld
in
insl
push
mov
call
icebp
in
nop
jg
jbe
loope
jb
mov
and
lret
imul
adc
dec
lret
mov
pavgb
xchg
mov
jo
int3
hlt
dec
push
ret
inc
iret
push
pop
lret
sbb
mov
cmp
mov
or
popa
hlt
scas
sbb
into
inc
mov
sarb
sub
add
xchg
xor
mov
cmp
imul
test
rcrl
imul
fabs
scas
inc
jae
pop
lfs
jb
mov
scas
xor
push
insl
dec
pop
jo
xlat
pop
pop
inc
inc
inc
inc
sub
xor
aas
pop
push
mov
call
fcmovnbe
popf
shll
inc
and
mov
dec
xchg
loopne
xchg
leave
and
aad
adc
stc
fnsave
jb
test
and
push
sbb
fs
dec
and
enter
add
add
add
add
cvtdq2ps
dec
sar
adc
push
popa
cld
pop
test
add
xchg
or
pop
inc
icebp
xchg
movsl
mov
adc
clc
cmp
mov
shll
aaa
std
mov
mov
jbe
inc
daa
popa
adc
sbb
outsl
lods
push
shl
mov
mov
mov
mov
aad
pop
pop
int
pop
pmaddwd
pop
lret
dec
mov
jae
pusha
xor
inc
push
jnp
lret
in
push
mov
arpl
mov
icebp
and
in
cmp
movb
push
or
rcr
out
or
push
or
stc
pop
cmp
sub
mov
xor
xor
out
cld
inc
ljmp
jecxz
jge
imull
test
or
xor
xchg
in
imul
in
sbb
push
ss
mov
ret
in
jle
lods
fimull
inc
or
cmc
data16
arpl
xchg
inc
sbb
jnp
jb
push
push
push
cwtl
andb
pop
jle
push
xor
loopne
mov
inc
and
add
pop
shll
scas
nop
jnp
inc
mov
test
dec
or
ret
out
cmp
xor
pusha
inc
pop
scas
out
mov
inc
xchg
mov
mov
mov
mov
lret
dec
lock
imul
pop
das
nop
out
mov
test
sbb
push
cltd
fcmovne
out
test
cmp
push
xchg
inc
rorl
sbbb
scas
pop
mov
jge
dec
jbe
sbb
stos
mov
sbb
cmp
sub
pop
es
iret
ror
ss
pop
cmp
inc
mov
add
jns
sti
lods
int3
push
adc
scas
test
loop
add
mov
clc
or
pusha
or
xor
lret
sbb
fs
movsl
lcall
int
lods
testb
pop
loopne
push
gs
daa
inc
mov
inc
js
adc
repz
push
gs
cltd
or
mov
xor
lods
mov
stos
cmp
mov
adc
xchg
push
je
ds
lods
or
ja
cli
das
jbe
dec
andb
add
dec
aaa
lea
mov
cwtl
xor
mov
decb
sahf
hlt
xor
xchg
bound
cmpsl
adc
xor
lcall
sbb
in
mov
stos
mov
jnp
popf
dec
lret
pop
push
les
mov
jno
pushf
jb
movsb
lock
ror
add
inc
inc
les
clc
pop
cwtl
jmp
in
in
js
rcr
ds
adc
fstl
lods
inc
push
and
sbb
rdmsr
pop
inc
sarl
inc
clc
loope
call
adc
sub
andb
fildll
pop
shlb
in
sub
xor
hlt
outsl
xor
ret
gs
and
pusha
nop
push
jns
scas
in
mov
mov
push
insb
or
cmpsl
adc
inc
mov
xchg
push
push
mov
mov
sahf
sbb
movsb
mov
cmp
jbe
rorl
or
mov
fdivrl
icebp
int3
cmpsb
loopne
pop
enter
int
pop
sti
mov
xorl
add
cmpsb
and
xor
shll
lcall
xchg
je
mov
fdivp
cs
xor
sahf
mov
movsb
dec
insb
jae
push
mov
outsl
icebp
cmp
gs
std
pop
dec
mov
dec
lods
test
cmp
das
push
in
jp
xor
xchg
jecxz
imul
sbb
out
cs
sbb
xorl
xor
sbb
stc
jnp
jmp
xchg
mov
sahf
cmp
orl
ds
cmp
dec
mov
fs
std
mov
shlb
push
aaa
push
mov
cmc
xor
mov
or
iret
or
loopne
aam
aaa
imulb
sahf
pop
jne
jl
sub
std
cmp
pushf
loop
fcmove
jg
adcb
scas
enter
out
xlat
inc
mov
cmp
add
sbb
xchg
fistpl
out
push
inc
ljmp
jnp
repnz
out
stos
mov
sti
fstl
add
icebp
outsl
ljmp
inc
jp
dec
insl
cmpl
push
insl
les
mov
dec
and
je
inc
sbb
cmpsb
dec
lock
push
inc
push
jge
lahf
ds
inc
rcll
dec
daa
cld
dec
xor
pop
cmovge
and
add
add
add
push
push
lret
mov
pop
add
daa
adc
add
xchg
push
xchg
out
add
cli
add
mov
mov
icebp
cwtl
mov
cmp
fidivrs
dec
sub
loopne
and
mov
jmp
mov
shlb
mov
sub
mov
xchg
cs
jl
gs
subl
sbb
push
cmp
mov
test
fstps
dec
fcom
pop
mov
test
hlt
push
notb
bound
hlt
out
push
push
roll
mov
out
aas
out
sbb
mov
mov
mov
jmp
fwait
movsl
sub
fistps
aad
lock
and
fcom
movsb
pushf
pushf
rolb
mov
lea
sti
inc
dec
roll
mov
cmpsb
add
cld
shr
scas
test
mov
cmp
dec
pop
dec
fisttps
jmp
data16
jecxz
shr
push
daa
sti
pop
fdiv
push
adc
cli
orb
jmp
and
lock
scas
mov
rcrb
dec
inc
mov
add
dec
fwait
push
inc
mov
aaa
inc
cmp
sahf
jle
testb
lret
push
ret
gs
xor
mov
or
pop
cld
cmpsl
les
inc
in
scas
loopne
sbb
pop
sarb
in
sbb
jl
sub
push
mov
js
ret
dec
mov
inc
outsl
adc
stos
ja
push
es
adc
cmp
mov
mov
sbb
mov
mov
in
cmpsb
mov
lods
jo
xchg
sub
hlt
test
xchg
sbb
je
into
and
or
jae
and
fmulp
sbb
xor
push
inc
xor
in
push
add
vpaddsb
xlat
rorb
jo
pop
ja
xchg
pop
dec
xor
pop
or
aaa
mov
dec
add
loope
test
mov
cmp
out
add
ret
ljmp
aas
std
mov
or
xchg
mov
pusha
dec
mov
add
and
mov
ja
push
stc
sbb
test
scas
sbb
sbb
push
imul
mov
dec
xchg
push
mov
mov
xor
lods
cmc
push
arpl
dec
fcoml
cmp
scas
loop
jbe
aad
stos
lods
xchg
pop
jp
loopne
mov
and
sbb
mov
mov
jbe
push
mov
imul
jnp
cs
xor
cmc
imul
dec
inc
push
jae
in
movsl
pop
inc
nop
lea
dec
adc
xchg
dec
xor
rolb
mov
xor
daa
mov
fsubrp
js
addr16
loopne
pop
push
iret
pop
add
fcoms
xor
push
popf
daa
loop
push
cwtl
inc
lea
inc
mov
mov
mov
and
lock
or
sbb
int
mov
or
sub
test
loopne
or
xchg
insl
hlt
out
xchg
dec
sub
sub
mov
push
insl
push
in
popa
xor
mov
add
push
fnstsw
lcall
lcall
les
insb
and
pop
stc
addr16
lret
mov
ret
imul
dec
adc
inc
mov
xchg
dec
les
fadds
ljmp
mov
push
aad
or
push
scas
fs
cltd
fldl
das
jge
cmp
movsl
pop
jle
push
cmp
sub
push
pop
mov
popf
loop
ret
imul
fisubrs
iret
xlat
addl
jne
sub
xlat
cltd
pop
and
clc
add
jne
mov
mov
adc
push
inc
cld
push
jp
into
mov
cs
sub
cmp
adc
adc
flds
cld
dec
gs
add
je
iret
and
into
or
mov
mov
call
jbe
out
jo
xchg
scas
xor
scas
repz
ret
jnp
pushf
xor
iret
sbb
xchg
sub
or
xchg
rcr
dec
imul
mov
aaa
arpl
lret
loope
sub
roll
in
sbb
dec
lret
or
jp
mov
leave
sbb
pop
pop
add
and
cmp
mov
fidivs
adc
pop
pushf
sbb
xchg
xor
ljmp
cmc
sbb
inc
incl
sbb
cmpsb
je
es
lcall
add
add
inc
xchg
daa
cmp
mov
and
add
add
add
or
inc
fimull
lret
xor
ret
xchg
es
das
adc
cmpl
fucomp
bnd
enter
sub
cmp
xchg
stos
pop
in
jl
and
pushf
test
pop
inc
or
add
sub
or
iret
xor
mov
mov
pop
sub
popa
shrl
out
push
cmp
mov
mov
mov
mov
out
pop
std
cmp
outsb
out
stos
sti
addr16
jns
jmp
and
std
jns
popa
lock
inc
data16
pushf
movb
inc
das
rcrb
imul
aad
xor
rcl
mov
fidivs
testl
jbe
out
ret
add
xor
jne
jmp
inc
aad
dec
pop
imull
lcall
pushf
add
jge
stc
pushl
jge
inc
mov
lahf
xchg
out
sbb
pushf
fcmovnbe
js
ja
icebp
addl
cmc
mov
dec
push
popf
pop
pop
sbb
insl
hlt
sbb
jmp
or
push
insb
xchg
xchg
ret
sahf
mov
add
rcrb
mov
xor
mov
lahf
movsl
rcrl
sub
push
les
daa
xor
mov
jb
scas
xor
enter
into
mov
cmpsl
inc
hlt
inc
lods
in
xchg
jo
mov
fnsave
stos
pop
adc
movsb
and
push
dec
es
pop
and
or
test
push
pop
lret
adc
int
hlt
gs
pop
mov
repz
in
inc
rorl
je
icebp
mov
mov
mov
dec
cltd
mov
xor
movsl
stos
sub
bound
adcb
mov
jae
sub
faddl
pop
jle
push
add
add
aas
frstor
std
test
addb
adc
hlt
xchg
push
or
cmc
jns
adc
insb
pusha
jecxz
in
mov
lret
and
adc
leave
adcl
idivl
hlt
addr16
jnp
hlt
inc
mov
sub
icebp
mov
and
xchg
lret
mov
or
shr
sub
inc
lock
xor
mov
push
lods
popa
pop
push
push
mov
pusha
or
rcl
aas
adcl
fdivrl
outsl
mov
dec
inc
into
push
incb
sub
out
rcr
stos
sahf
std
shlb
pop
and
in
je
scas
and
or
fcom
push
or
pop
xchg
mov
mov
ret
jmp
adc
mov
mov
inc
jno
sbb
cmpl
pop
out
xchg
adc
popa
and
add
pop
ret
mov
mov
jb
push
lcall
xchg
dec
adc
fdivp
jl
out
xchg
push
push
fstps
shlb
sub
into
lods
pop
fcmovbe
cs
arpl
adc
dec
cmp
fstpt
add
add
mov
and
shll
push
push
mov
fimull
mov
leave
daa
mov
dec
out
push
xchg
push
or
mov
add
push
fnsave
scas
xchg
jp
mov
divl
xor
inc
subl
frstor
inc
add
push
jp
adc
jne
dec
scas
cmp
jp
inc
jne
push
push
jno
shlb
mov
push
cwtd
mov
movsl
adc
cld
in
je
aaa
adc
sub
push
and
ljmp
pop
stos
add
out
ljmp
out
push
test
add
cmp
dec
and
and
mov
xor
popf
ret
mov
loop
je
inc
aad
inc
stos
icebp
repnz
orb
xor
cmp
cltd
shlb
loope
outsl
flds
subb
loope
cmpsl
mov
adcl
neg
ret
and
mov
cs
push
jge
arpl
xchg
or
xor
lods
xor
loop
push
dec
xorl
xchg
xchg
pusha
lahf
mov
pop
adc
jl
fistpll
iret
rcr
dec
in
jne
mov
shll
sub
pop
sbb
sahf
push
test
adc
push
mov
cld
dec
call
pop
int
sbb
nop
or
out
popf
mov
stc
stos
cmp
add
add
add
clc
data16
mov
out
fidivl
mov
add
add
add
aaa
adc
mov
fildl
ja
xchg
pop
sub
bound
daa
mov
pushf
mov
lea
into
xchg
mov
xchg
sub
fs
mov
inc
pop
mov
fcompl
push
and
test
mov
mov
jmp
add
xchg
dec
xor
jmp
or
lods
dec
add
mov
mov
repnz
ret
mov
aam
out
cwtl
outsb
call
jl
aad
lahf
mov
repz
cld
pushf
stc
imul
or
mov
ret
lcall
inc
test
mov
adc
es
cmpl
inc
movsl
test
cmpsl
mov
add
push
ljmp
mov
movsl
pop
lds
lods
mov
push
or
fwait
dec
out
popa
dec
cmp
cmpsb
fs
arpl
cmp
inc
mov
mov
sarl
nop
push
mov
popf
repz
lret
or
das
mov
xor
mov
xchg
xchg
sub
sbb
test
loop
inc
fsts
in
lods
test
adc
mov
adcl
and
push
repnz
inc
dec
fidivl
push
das
pop
mov
sbb
push
icebp
mov
imul
int3
std
mov
inc
fsts
or
test
arpl
xor
inc
xor
jp
movsl
insb
insl
jbe
stc
lret
in
aam
loopne
gs
cmp
sbb
dec
mov
mov
repz
jle
dec
ficoms
jbe
mov
mov
iret
sbb
mov
and
push
ss
jno
fildll
xchg
imull
add
fcomps
dec
test
out
mov
shlb
inc
push
in
data16
cmp
inc
jnp
xchg
fwait
pop
mov
xor
rorb
mov
xchg
dec
cli
test
lea
mov
stc
insb
xor
inc
and
fsubrl
inc
lret
push
ss
andb
sub
gs
push
xor
mulb
inc
xor
stc
ret
fnstsw
repz
dec
xor
mov
fiaddl
jmp
pop
daa
lret
fs
or
xor
shr
mov
sbb
jg
mov
jns
fcoml
adc
sub
push
xchg
outsb
das
cld
testl
ljmp
or
cltd
pop
xchg
add
aas
test
ret
sbb
lahf
pushf
aas
xchg
repz
sub
sub
mov
push
sub
or
and
xchg
fstps
subb
push
insb
jne
rorb
pushl
jbe
aam
inc
add
sub
idiv
aad
mov
jle
pop
push
and
into
mov
icebp
jo
out
stc
inc
xor
push
int
add
cmpsl
sbb
sahf
out
out
outsb
aaa
xlat
dec
int
add
int3
sbb
inc
test
shrl
mov
aam
movsl
iret
mov
jns
jns
aam
pop
inc
jb
mov
pushf
push
add
jo
jbe
cmp
lea
hlt
ja
mov
stc
xchg
movsb
ds
nop
xor
dec
out
ja
push
flds
dec
loopne
lcall
and
movsb
sub
lods
mov
jge
jg
popf
pop
jo
pop
clc
int3
jmp
pop
push
cmp
push
mov
or
sbb
push
cmc
sahf
mov
sbb
mov
call
pop
lret
rolb
push
cmpl
jnp
cmp
mov
jle
jno
lea
inc
lods
fwait
mov
aas
loopne
lahf
ret
push
lods
push
push
loope
xorb
and
cld
push
shl
out
xchg
test
lret
movntq
sahf
xlat
pop
cwtl
fstl
jmp
jae
xchg
lcall
cmc
pusha
pop
jg
sbb
mov
jle
push
push
insb
pop
cli
adc
enter
push
enter
xchg
out
aas
push
movsl
push
pop
pop
das
sub
cmp
imul
mov
stos
loopne
cmp
and
sub
hlt
add
cmp
sbb
mov
mov
mov
pop
or
add
lods
cli
cmp
cmc
jo
pop
ret
inc
in
and
and
es
stc
dec
xor
insb
lea
loope
and
stc
sbb
and
aam
cmp
adc
fisubs
and
js
std
cld
adc
arpl
jecxz
adc
movsb
sarl
cmpsb
in
and
add
sub
iret
cmp
outsl
jecxz
push
insl
insl
popa
pop
shl
mov
add
aam
mov
dec
nop
cli
mov
inc
jp
leave
inc
pop
mov
popf
pushf
xchg
push
cmp
lods
add
jl
adc
push
in
imul
in
cltd
not
stos
jno
pop
mov
insl
imul
outsl
enter
rcr
jge
es
setl
int3
iret
dec
mov
sbb
mov
sbb
stos
into
dec
xor
rcrb
inc
or
ret
loopne
xchg
xchg
call
lods
scas
pop
test
scas
pop
sbb
cmp
mov
jg
jl
fstpl
mov
call
xlat
push
pop
iret
sbbb
lcall
push
in
pusha
popa
test
ds
stc
fwait
stc
dec
dec
mov
xchg
xor
sub
push
and
adc
fidivl
sarb
and
add
clc
cmpsl
dec
int
adcl
mov
jmp
imul
daa
jmpw
divb
jge
add
mov
std
mov
push
cld
sahf
mov
in
mov
stos
add
inc
shrl
pop
into
xchg
rolb
aaa
xor
frstor
int
xchg
cld
push
inc
stc
fisttps
and
add
or
inc
fs
inc
or
push
test
push
xchg
sub
lods
fwait
mov
sbb
and
in
sbb
pop
sbb
mov
movsb
xchg
push
cmpsb
push
cwtl
lcall
lock
inc
cmpsl
push
jle
rolb
inc
cli
dec
sarl
cmp
out
ret
rcr
movsb
push
mov
pushf
imul
sbb
ljmp
jp
stos
inc
adc
or
pop
sahf
testl
adc
xchg
popa
add
dec
jne
bound
mov
mov
mov
sarb
out
xor
sahf
and
loopne
add
pop
xchg
cmp
sbb
jg
xchg
mov
or
xchg
inc
nop
push
fwait
jge
outsb
cmp
add
jmp
aam
lods
fwait
repnz
sti
jp
jecxz
push
out
sbb
enter
mov
adc
test
psubd
or
lods
pop
hlt
push
into
nop
and
mov
daa
jecxz
test
movsl
push
xchg
xor
loopne
shll
lret
add
rcrl
insb
fistps
pop
stos
ljmp
pop
cs
dec
and
xor
push
xor
cmp
mov
mov
or
lcall
imul
push
icebp
mov
mov
cmp
dec
adc
xchg
enter
insb
or
mov
movsl
sbb
sub
mov
rcrb
or
add
push
sbbb
test
or
lea
movsb
jp
push
cmp
adc
inc
cmpsb
push
mov
sbb
inc
aam
push
mov
out
push
ds
mov
scas
jmp
insb
out
cmc
popa
stos
outsl
push
ljmp
inc
adc
jge
repz
push
cmp
jecxz
data16
movsb
xor
inc
inc
loopne
pop
push
inc
sub
incl
sub
push
xchg
mov
add
jns
insb
mov
pop
std
imull
fsubrs
cmp
xor
icebp
cmp
cs
mov
mov
dec
mov
jbe
dec
and
xor
jle
or
xchg
scas
cmpsl
out
cmp
mov
xchg
push
sub
pop
jp
dec
nop
stc
call
mov
out
int
sbb
lea
gs
xchg
popf
sti
xor
imul
and
or
add
test
push
insb
imul
push
push
imul
pop
pop
cmp
not
lret
into
cmpsb
lods
andb
daa
add
div
in
insb
sub
and
pop
jnp
adc
push
pop
in
jg
jb
adc
jb
mov
dec
jo
test
testb
xchg
xorl
mov
dec
mov
sbb
sbb
sbb
fbld
mov
lock
mov
lahf
mov
or
sbb
jb
push
sub
xchg
je
mov
mov
adc
addr16
mov
into
lock
mov
out
mov
and
adc
fdivrl
leave
push
or
ja
icebp
sub
push
mull
sbb
test
jbe
jmp
arpl
movsl
xchg
pop
add
add
add
add
adc
push
std
and
scas
mov
add
repnz
add
es
add
dec
mov
scas
sbb
or
pop
daa
loope
in
sub
cmp
icebp
lds
or
fisubl
or
adc
add
fimull
cmp
mov
push
sar
sbb
test
addr16
incb
adc
in
mov
int
pop
in
or
ljmp
push
lds
test
daa
rep
sub
xchg
and
mov
sub
xor
xlat
sub
xchg
loope
js
es
insl
out
mov
pop
adc
dec
add
jbe
fisttps
mov
push
mov
pop
xchg
jns
sahf
ja
push
xlat
adc
adc
je
dec
mov
cmpsl
sbb
loop
push
xor
mov
xor
scas
push
sbb
sbb
add
leave
lock
cmp
xor
lods
push
std
mov
outsl
jnp
pop
sti
lcall
mov
vmovdqa
out
mov
cmp
rolb
bound
add
notl
sidtl
xor
test
pop
sub
fwait
in
mov
lret
not
ficompl
add
imul
in
rolb
mov
cmp
out
pushf
cli
pop
shl
dec
xor
andb
ds
popf
sub
xor
clts
in
adc
stos
inc
ficoml
ret
dec
sbb
lret
push
pop
stos
rorb
mov
pminsw
mov
fldl
call
cmp
es
cs
cmp
mov
lcall
hlt
add
sub
push
fwait
sub
imul
cltd
fadds
jno
sub
lret
lds
scas
cmpsl
sahf
cmpb
and
sbb
insl
icebp
ds
push
ss
jecxz
add
mov
movsb
cmp
xchg
and
adc
out
or
iret
mov
enter
fimull
pushf
mov
neg
add
std
mov
fisttpl
mov
popf
cld
mov
sbbb
addr16
mov
aas
rcrl
jge
xchg
stc
push
inc
test
push
repnz
pop
and
cli
jle
rorb
inc
mov
mov
rcrl
push
fisubl
mov
add
xchg
mov
inc
cmc
imul
sub
xchg
fldenv
dec
scas
int
fdivl
dec
je
es
in
hlt
cmp
lret
sbb
jbe
jge
jecxz
enter
or
popf
aaa
mov
hlt
xor
mov
jg
out
mov
or
mov
mov
aad
cwtl
addr16
stos
decl
mov
fisubs
xchg
imul
cltd
sub
push
adcl
in
js
push
inc
mov
push
sarb
in
push
adc
pop
int
lock
mov
mov
xor
nop
jg
jmp
push
xchg
clc
mov
fcomi
mov
xchg
dec
fs
lds
xchg
mov
rorl
aam
mov
pop
outsb
add
xchg
aam
mov
sbb
popa
mov
je
int
out
xor
repnz
imul
and
adcb
sbb
pop
mov
out
aam
push
clc
or
push
cli
cltd
jg
mov
pop
add
aaa
shrl
ja
add
jnp
ret
xchg
sbb
lret
inc
gs
jp
sbb
adcl
ss
arpl
pop
xlat
scas
loop
js,pn
jge
mov
adc
xor
fwait
loopne
insb
adc
je
cmp
push
xchg
cmp
adc
sbbb
enter
push
out
mov
jns
fcomps
repz
push
scas
pop
adc
mov
sbb
inc
sbb
mov
in
push
xchg
lcall
mov
mov
or
dec
outsb
sub
xchg
adc
and
jne,pn
xchg
jecxz
inc
sbb
loop
mov
pop
jne
cmpb
int3
pop
movsl
fdivs
mov
arpl
aaa
in
movsb
leave
repz
ss
adc
nop
push
sahf
mov
jmp
cmc
cld
mov
lock
lret
data16
imul
pusha
and
cmp
out
lret
dec
mov
mov
adc
rorl
fld
add
std
into
mov
mov
pusha
push
xchg
std
mov
pop
sub
stos
call
mov
bound
cmp
xchg
add
add
add
addb
bswap
test
dec
or
add
repnz
add
sahf
sub
xchg
xchg
inc
dec
inc
sahf
negb
inc
jno
aas
or
scas
pop
push
dec
jp
jno
xchg
aad
push
cmpsb
mov
imul
mov
xchg
jge
addb
insl
cwtl
lret
push
daa
add
dec
lods
push
pusha
push
stos
ja
push
fmul
jnp
std
xchg
ror
rorl
inc
lahf
jecxz
fldt
xchg
in
aad
push
cmc
sti
mov
dec
es
dec
jle
push
setb
out
ret
fsubr
jns
xor
imull
loop
jl
pushf
cmp
es
xchg
ja
mov
inc
jmp
xor
test
jg
add
adc
sbb
adc
inc
mov
fistpl
in
mov
into
hlt
lret
sbb
mov
insl
dec
sti
ror
sbb
push
push
adc
pop
cmp
movsl
dec
out
aam
es
pop
dec
mov
mov
inc
ret
mov
mov
fldcw
fldenv
cmp
sub
outsb
aaa
pop
mov
pop
ljmp
sub
pop
mov
test
call
mov
xchg
push
jecxz
cmc
xchg
inc
dec
sti
sub
in
daa
inc
pop
push
sbb
call
or
ds
rol
fbld
adc
shll
jecxz
jne
mov
push
mov
clc
outsl
push
pushf
enter
dec
add
mov
movsb
lahf
pop
enter
mov
dec
jbe
xor
adc
jp
call
lds
ret
mov
cmp
popf
dec
lea
sbb
pop
lret
sbb
lahf
push
mov
or
dec
pusha
cli
lock
fistl
sub
sbb
int
inc
call
add
jno
imul
push
xorl
push
pop
aas
stos
pop
dec
sub
dec
ss
or
jecxz
addr16
jle
push
inc
clc
cmp
lea
rcrb
jmp
cli
sub
hlt
mov
test
cs
je
jb
mov
clc
push
lcall
pop
inc
insb
sbb
out
jle
inc
in
shrl
lcall
cmp
fs
jnp
sbb
cmpsl
sbb
push
mov
pop
pop
push
add
aas
dec
inc
in
scas
jl
fwait
add
scas
cmc
pop
jge
mov
push
rol
inc
sbb
rclb
xchg
inc
adc
pop
dec
xor
inc
and
sti
cmc
inc
xchg
inc
or
jge
push
mov
in
inc
jne
mov
pop
sbb
loopne
and
xor
sbb
sub
negb
loopne
dec
in
dec
mov
data16
dec
icebp
repz
aas
int
test
wbinvd
mov
cmpsb
loopne
les
pop
clc
xchg
jb
mov
sbb
mov
pop
xchg
cmp
push
cmp
mov
shrl
das
dec
jbe
and
dec
sub
inc
mov
out
pop
mov
mov
and
jb
lret
jbe
ss
daa
pushf
call
loope
pop
hlt
push
cmpsb
scas
repnz
or
scas
xor
fwait
mov
jnp
int3
jbe,pn
sar
xor
into
clc
popa
into
das
jg
pop
mov
je
div
andl
xor
out
fwait
mov
adc
mov
push
lock
imul
mov
je
xchg
fsubs
push
dec
test
popa
loop
sahf
scas
jb
cld
ljmp
imul
nop
push
push
pop
mov
push
mov
lods
cwtl
or
jle
sbb
sbb
pop
push
push
push
les
xchg
scas
movsl
sub
js
sub
xor
dec
mov
in
stos
add
js
mov
jo
and
iret
or
push
mov
ljmp
add
out
pop
sub
movsl
cmpsl
pop
scas
inc
lret
outsb
mov
lods
xchg
sahf
xorb
sbb
scas
popf
out
loopne
mov
xorl
addr16
iret
and
jmp
mov
pop
ret
jnp
push
fistpl
xchg
mov
negb
push
jbe
bnd
push
push
jp
shrl
in
jl
mov
pop
mov
xor
sub
les
lods
push
cltd
je
bound
and
sbb
push
daa
rorb
xchg
and
movsl
pop
cld
hlt
mov
sti
fnstenv
add
add
add
fwait
push
pusha
outsl
out
jg
cmc
or
cmp
lret
add
repnz
add
sub
dec
incl
fadds
xor
movsb
sbbb
xor
push
popf
imul
adc
daa
xchg
jecxz
sbb
and
xchg
ss
ja
es
mov
push
xchg
fcoml
dec
xchg
shrb
scas
sbb
clc
adc
mov
push
into
mov
pop
int
jae
xchg
adcl
je
jb
in
arpl
add
mov
out
fsubrl
xchg
adc
push
daa
cmp
jnp
push
or
in
addr16
repnz
popa
lahf
cwtl
std
sub
sub
jl,pt
stos
pop
cld
cld
pushl
insl
arpl
xchg
inc
mov
mov
cli
scas
inc
jle
sti
pop
add
pushf
lock
popa
xor
or
out
lock
xlat
mov
gs
in
pop
inc
cltd
incl
and
addr16
xchg
jbe
jno
jg
jae
decb
leave
jns
js
push
out
std
cmp
ret
lahf
push
pop
mov
mov
add
xor
mov
cwtl
jbe
pop
cltd
int
xor
cmp
pop
sub
cmp
add
mov
daa
dec
xchg
xlat
inc
push
lods
daa
and
jge
bound
push
xchg
mov
addb
mov
aas
mov
mov
cli
and
push
sbb
shl
rolb
lcall
pop
cmp
rcl
push
cmp
sub
insl
cmp
imul
mov
adc
mov
add
cmp
ds
daa
int3
inc
daa
pop
rorb
and
jnp
lods
in
lods
test
sub
cmp
mov
popa
mov
push
mov
pop
fs
pop
out
lret
cmc
out
xor
sbb
pop
and
adc
cmpsl
mov
jp
nop
mov
xor
fcomp
push
mov
and
faddl
inc
cwtd
es
es
out
pusha
lea
xchg
mov
or
sbb
pop
sbb
leave
xor
std
mov
lret
inc
fs
and
outsl
jbe
push
jae
mov
mov
into
inc
xchg
sub
loope
fwait
out
popa
sar
adc
loope
add
ds
mov
and
mov
mov
or
mov
ds
ds
mov
sahf
js
icebp
adc
push
orb
sti
jg
notl
inc
fcmovnbe
xchg
lret
aas
aad
mov
jae
dec
sbb
cmc
push
mov
and
test
testb
sti
jo
push
sbb
adc
add
sarb
shll
int
dec
xor
std
pop
push
jle
pop
push
ret
movsl
rcrb
pusha
push
cli
test
mov
jmp
adc
pop
or
jl
push
sbb
mov
ret
scas
sbb
dec
add
mov
jno
push
not
inc
in
jecxz
mov
mov
jae
nop
fcmovbe
pop
xor
rolb
cmpl
jb
xor
jnp
outsl
mov
aaa
sub
sbb
iret
mov
and
add
push
push
inc
inc
imulb
pushl
ljmp
aaa
push
mov
stc
mov
subb
push
jae
push
inc
inc
sub
movsl
decl
and
xchg
mov
cmpsl
out
pop
cmpsl
bound
incb
aaa
lahf
xorb
lcall
iret
loop
shll
inc
adc
jmp
jns
lds
movsb
in
sbb
notb
fsts
fisubrs
outsl
das
or
mov
aam
bnd
imul
pop
cmp
in
lret
ss
fmuls
sbb
or
ret
hlt
bound
faddl
pusha
ret
sub
jbe
iret
xchg
lds
dec
mov
ja
mov
xor
or
pop
mov
outsl
scas
cmp
sub
jnp
inc
cmp
addr16
jns
addr16
mov
pop
mov
dec
js
jns
out
push
in
or
add
loop
and
or
arpl
xor
pop
xor
lea
push
pushl
mov
push
daa
sub
adcb
or
pop
cmpsb
jecxz
enter
cmpsl
pop
pop
into
stos
pop
in
jne
push
dec
stos
std
ljmp
pop
data16
jb
ja
lcall
add
outsb
out
lds
mov
add
repnz
add
js
add
cli
and
lcall
lcall
cld
mov
notl
dec
cmc
nop
xchg
add
sti
lret
lcall
fldcw
rclb
pop
pop
jmp
push
jno
testl
jp
and
mov
jae
dec
fcoml
xor
or
out
stos
mov
add
cmp
xor
pop
hlt
add
repnz
mov
jmp
pop
mov
test
loope
push
fnstsw
sub
out
mov
and
xorl
adc
test
inc
shl
jae
aad
idivb
stos
outsl
adc
sub
rcrb
or
jl
and
fsubrs
adc
stc
and
out
adc
mov
scas
or
call
or
movntq
jo
xchg
jae
test
pop
sarb
push
pop
mov
mov
inc
imull
popf
dec
push
into
xor
ror
sub
filds
cli
push
jns
lds
xchg
sti
inc
push
pusha
add
jmp
cmc
lods
mov
scas
xchg
repnz
jb
dec
jl
pop
mov
or
out
loope
xchg
cmp
push
sahf
push
pop
scas
sbb
shlb
movsl
cmp
xor
movsl
int
mov
fld
repz
sub
cmpsl
loop
pop
cwtl
xor
sbb
mov
add
ja
outsb
mov
orl
imul
lods
or
xor
cltd
mov
or
cmp
push
into
les
pop
fxch
icebp
lret
add
mov
in
pop
and
mov
ret
xlat
and
or
outsl
sbb
adc
mov
or
cltd
stos
test
aam
xor
push
adc
mov
dec
or
stos
aad
mov
jg
adc
ss
outsb
mov
filds
jns
dec
mov
outsl
pop
in
pop
mov
sub
or
inc
jge
loope
lret
enter
push
shl
push
pop
sbb
loope
xor
or
add
ss
fistpll
inc
dec
dec
lahf
inc
xchg
cmp
cmp
mov
and
pop
or
les
aam
arpl
subl
xchg
cmpsl
mov
std
pop
or
ret
andb
mov
push
shlb
icebp
pop
fs
stc
push
cmp
mov
dec
test
inc
dec
ret
gs
push
dec
xor
add
das
mov
adc
pop
lds
xor
and
adc
aas
notb
mov
les
lods
add
rorl
cs
dec
dec
or
jg
xor
mov
loope
pop
lods
roll
insl
jb
lds
xchg
cmp
inc
mov
inc
jecxz
outsb
js
test
xchg
sub
add
fisubrl
xlat
pushf
icebp
test
popa
cmp
mov
jmp
mov
push
xchg
int
pop
lcall
fisubs
inc
inc
sbb
outsl
int
adc
and
inc
das
ficompl
and
loopne
mov
hlt
xchg
or
aas
adc
pop
push
ficoml
je
push
lock
rcrb
popa
and
adc
les
jns
mov
subl
adc
loopne
jge
push
leave
or
mov
push
aas
in
js
xchg
and
nop
mov
data16
push
or
inc
pop
stos
test
fsubl
jae
xor
lods
in
cli
jge
mov
loop
push
inc
jne
fnstsw
mov
dec
out
ret
xchg
scas
ret
mov
adc
in
fmull
fidivs
jge
inc
push
xor
mov
out
sahf
xchg
dec
inc
jmp
mov
or
or
cld
ficompl
test
or
pop
js
xor
scas
es
fisubs
loop
stos
mov
les
mov
rclb
xchg
push
enter
scas
sub
clc
lds
dec
cmp
loope
movsb
sbb
pop
in
jmp
aaa
cltd
cmpsb
cmp
xorl
pop
push
fcoml
sbb
mov
inc
icebp
pop
shll
and
imul
sub
jbe
in
cmp
ret
add
add
add
lret
lods
xlat
sti
mov
dec
mulb
add
add
mov
lods
jno
push
fldt
mov
cs
adc
adc
and
test
and
pop
push
imul
popa
adc
jae
adc
and
sbb
shlb
js
dec
rcll
sti
push
xchg
mov
enter
push
mov
sub
push
mov
aaa
jbe
data16
adc
mov
mov
mov
cmp
or
repnz
pop
sbb
aad
mov
xchg
xor
mov
adc
mov
sbb
leave
or
clc
addr16
push
jl
orb
xchg
test
push
rolb
jp
add
xor
insl
leave
out
cmp
jno
clc
ljmp
addl
cmc
push
sub
addr16
pop
jne
jnp
sub
sarb
mov
out
rclb
bound
cmp
mov
sub
fbld
into
lret
mov
in
cmpsb
es
daa
jl
shr
sub
push
popf
aam
dec
cs
mov
pop
jbe
gs
fsubrs
push
test
jns
push
dec
sub
jbe
and
add
jb
stos
orl
pop
stos
bnd
add
mov
lods
inc
add
pop
xor
and
cld
dec
push
mov
hlt
mov
xchg
les
cmpsb
orl
ss
jmp
scas
xchg
lcall
ds
jne
fsubs
jno
mov
mov
mov
inc
push
or
ret
sub
div
and
fcompl
push
lahf
mov
roll
mov
cld
mov
imul
sti
inc
mov
sub
pop
xchg
adc
xor
cmp
mov
stos
and
jl
xchg
lods
and
faddp
ret
or
sub
es
sbb
pop
inc
cmp
xchg
fwait
loop
stos
sub
shlb
rorb
xchg
adc
leave
pop
jmp
mov
mov
dec
jmp
xchg
xchg
mov
fiadds
outsb
orl
xchg
push
xor
dec
fmull
pop
cmpsb
mov
ss
je
or
test
pop
pushf
ja
sbb
inc
jle
mov
adc
adc
push
test
mov
insl
xchg
push
cwtl
push
mov
nopl
xlat
pop
arpl
in
jbe
or
adc
dec
cmp
test
dec
inc
xchg
cwtl
add
aam
pushf
dec
imul
int3
int3
movsb
addr16
ret
or
sbb
cmp
adc
jmp
jp
cmp
fsubl
cmpsl
sbb
pop
stos
mov
xchg
mov
pop
jg
imul
scas
mov
cwtl
or
push
pop
jae
xor
or
jmp
and
mov
loope
leave
jae
sub
cmp
icebp
mov
push
or
pop
test
add
js
das
xchg
sub
and
jb
mov
pusha
iret
jae
testw
sbb
hlt
sub
mov
sbb
clc
push
push
xchg
adc
mov
insb
adc
cmp
push
dec
cmp
cmc
repnz
mov
push
out
dec
nop
fistl
mov
lahf
lock
pop
mov
loop
and
dec
test
inc
cmpsl
das
cmpsb
jge
xchg
mov
and
pop
out
push
jp
adc
mov
aam
gs
dec
aas
cwtl
js
icebp
push
dec
out
lods
push
scas
cmpsl
cmp
cmc
test
lret
outsl
out
icebp
icebp
lods
arpl
pop
pusha
stos
push
fldcw
cmp
add
adc
mov
dec
out
dec
xor
cmpl
pop
xchg
test
or
jnp
lods
push
mov
push
lock
bound
rolb
stos
inc
mov
mulb
pusha
dec
jl
push
mov
es
call
das
xchg
test
iret
fidivrl
sbb
shrl
dec
cmp
xchg
bound
add
addr16
xor
filds
or
mov
imul
dec
pop
aad
sbb
insb
ds
inc
in
std
sarb
mov
add
aas
dec
aaa
pushf
out
call
cltd
call
test
jne
dec
or
xor
mov
cmpsl
jbe
dec
push
pop
mov
les
ds
dec
add
movsl
fiadds
fisubrl
add
add
add
jno
loop
bnd
fcomi
mov
ja
lock
xchg
fiaddl
add
add
add
sbb
leave
push
inc
ror
repz
lcall
dec
mov
test
add
and
int3
mov
call
outsb
sbb
decl
adc
cmpsb
je
test
sub
stos
sbb
xlat
xor
test
sub
popf
je
movl
adc
jb
cld
aad
stos
mov
les
or
adc
clc
nop
pop
push
pop
xchg
cmc
sub
or
pop
lea
imul
dec
mov
mov
add
sub
iret
sub
jle
lock
push
cmpsb
mov
push
ss
xchg
int3
pop
cmpsl
imul
sbb
ss
ja
or
mov
addr16
xor
loop
and
adc
xor
mov
outsb
test
add
sub
rolw
or
pop
xchg
ljmp
ja
jne
and
push
mov
and
mov
scas
out
xchg
and
jge
sar
mov
cli
and
mov
into
leave
inc
mov
clc
ljmp
sbb
ficomps
aas
push
cmp
das
sbb
loope
push
mov
arpl
aaa
je
mov
and
hlt
sub
and
divl
sti
cmp
lods
mov
or
int
notb
jnp
adc
mov
clc
pop
jl
cmp
adc
sub
ljmp
lods
sbb
scas
gs
mov
and
push
push
jbe
and
cli
mov
mov
sub
stc
mov
sub
mov
lret
rorb
sbb
mov
cs
fs
clc
sbb
imul
in
cmc
xorb
mov
mov
enter
imul
lldt
mov
hlt
push
popa
pop
popa
and
jmp
dec
fsubrl
or
aad
es
cmp
sub
outsl
add
test
insb
inc
fdiv
es
loop
pop
call
add
and
mov
mov
out
add
mov
xchg
leave
cmp
jno
mov
and
sti
out
subl
es
mov
and
shrl
xchg
cs
sahf
cmp
stos
lods
jle
cmp
cmp
mov
dec
ret
push
lret
or
sbb
mov
je
mov
paddusw
hlt
pop
movsl
in
mov
add
je
movlps
or
mov
dec
lea
sahf
mov
mov
mov
pop
mov
popa
cs
mov
outsw
push
dec
testl
push
inc
mov
pop
xor
sub
mov
cli
int
xchg
adc
inc
int
xchg
iret
js
xchg
lods
shlw
cmpsl
clc
test
mov
lahf
dec
out
cmp
pop
cs
clc
mov
mov
lcall
sub
pop
sub
into
push
in
jno
in
mov
cwtl
push
inc
add
mov
or
enter
push
inc
xchg
notb
shll
arpl
pop
mov
ja
scas
push
nop
sbb
out
int
mov
or
adc
xlat
out
adc
push
std
jne
dec
xor
add
popf
pop
xchg
pop
loope
fisttpll
adc
cmc
arpl
mov
ret
je
lock
sahf
loope
mov
nop
sub
xor
dec
iret
daa
loope
mov
adc
pop
subb
popa
sub
mov
mulb
negl
xor
cmp
xchg
cltd
add
in
pop
xor
rorb
out
dec
jmp
insl
mov
mov
add
cld
bound
loopne
cmp
and
jl
scas
mov
lds
add
mov
call
sti
movsb
cli
shrb
scas
and
jbe
cmpsl
mov
pop
in
imul
cs
cwtl
fstl
jo
xlat
and
or
out
adc
jle
xchg
xor
cmp
roll
or
scas
sub
sub
jo
in
push
mov
int3
jmp
sbbb
xchg
shrl
sti
cmp
pop
push
mov
lds
sbb
push
xor
orl
shll
pusha
mov
add
add
andl
ss
in
inc
add
add
repnz
add
shr
cmp
loopne
add
ror
dec
dec
pop
in
add
idiv
insb
rclb
clc
pop
outsl
dec
pop
cmc
and
cmp
dec
jecxz
ja
adc
xchg
xchg
aas
daa
mov
mov
push
jmp
xchg
test
imulb
pusha
xchg
rolb
jbe
repz
xor
popa
scas
mov
push
mov
es
dec
xor
mov
mov
push
scas
popf
mov
lcall
inc
push
mov
inc
leave
xchg
popf
repnz
popf
lahf
inc
dec
push
jb
jb
jne
jl
test
push
sub
cmc
cmpsb
cli
popf
lods
xchg
mov
xchg
cltd
filds
push
fsub
cmp
xchg
call
push
repnz
xchg
xchg
pushf
bound
cmp
jl,pn
fsubrp
xchg
push
jbe
dec
pop
mov
insb
test
stos
js
aam
idivb
xchg
icebp
push
cmpsb
in
arpl
fiadds
popa
mov
jl
adc
mov
subb
jge
mov
leave
xor
stos
rcrb
pop
popf
mov
icebp
and
push
fwait
sti
inc
jmp
setnp
and
clc
cmp
adc
clc
cltd
cmp
jecxz
mov
loop
movsb
loop
sub
mov
cmp
popf
jns
das
les
pop
ljmp
lods
mov
or
jne
add
in
sbb
das
sbb
inc
sahf
cmp
push
orb
std
push
lcall
and
cmp
iret
mul
jg
mov
sub
data16
enter
cmp
xlat
out
add
xor
pop
or
data16
inc
add
jae
dec
out
dec
nop
mov
sub
pusha
inc
cltd
push
setne
in
ds
xchg
lcall
sahf
jge
jmp
daa
inc
lret
fldcw
mov
js
sahf
add
stos
jae
ljmp
sahf
clc
out
xorl
mov
div
cmpb
jge
adcb
push
dec
loopne
stc
push
pop
icebp
subl
mov
cmp
add
leave
in
test
das
xchg
fs
jecxz
add
push
mov
pushf
lods
popf
cmpsl
loope
shlb
icebp
js
cmp
in
fsub
inc
xchg
mov
mov
adcb
xchg
push
xchg
pop
mov
div
and
jge
or
add
sahf
mov
loop
aas
cmc
aaa
jne
lcall
mov
lds
fisttpl
stos
xchg
or
xchg
inc
jge
mov
scas
xlat
push
or
mov
cli
sbb
mov
or
sbb
or
jno
arpl
push
xor
dec
daa
xchg
sub
stos
inc
rcrl
js
push
sti
repz
lret
add
xchg
pop
inc
mov
mov
sub
insb
adc
out
xchg
pop
xchg
lods
add
dec
pop
cmp
lds
scas
pop
imul
add
mov
inc
cmp
imul
inc
arpl
xchg
mov
mov
or
cmp
cmp
cmpsb
lds
adc
mov
adc
fsubs
ret
xchg
ret
xor
aaa
out
add
lahf
push
scas
ss
mov
lret
inc
dec
fimull
subb
mov
stos
scas
xor
aas
pop
out
mov
and
and
dec
xchg
mov
jae
jnp
jge
or
xchg
and
stos
adcb
adc
pop
bound
rcrl
pop
sbb
movl
test
mov
orb
jle
clc
pop
insb
es
add
repnz
movsb
data16
dec
movsl
mov
fs
mov
mov
dec
sarl
fwait
dec
jae
add
sbb
outsl
nop
xor
arpl
add
inc
pop
xorb
or
bound
hlt
add
adc
shl
incb
jne
cmpsl
int
inc
popa
jbe
mov
cmp
fcompl
mov
cmp
repz
ss
in
mov
xchg
pop
scas
mov
adc
xor
add
mov
xchg
cwtl
push
pop
xor
test
mov
adc
sub
leave
adc
in
nop
jp
lds
lods
and
push
daa
fldcw
dec
lds
or
xchg
rcrl
lods
out
int3
xchg
inc
pop
mov
add
add
add
xchg
rcrb
pop
roll
fcmovu
das
ja
add
repnz
add
repnz
andb
inc
add
xor
ss
loope
ja
sbb
sar
lret
xchg
sbb
mov
pop
fs
jnp
dec
push
push
cmp
lcall
xchg
or
sbb
in
dec
mov
jnp
sti
mov
stos
sbb
popf
xchg
push
inc
js
cs
cmpsl
into
sub
lret
in
insl
cmp
lods
int3
lea
mov
into
mov
nop
xrelease
imul
sbb
jns
add
xorl
xor
and
dec
addr16
stc
xor
cmp
sbb
add
fs
push
cmp
dec
popa
lcall
and
lds
aam
lock
ljmp
jge
sub
cs
cmp
into
mov
jge
clc
sbb
sub
shlb
mov
fwait
adc
pop
and
fildl
das
inc
imulb
and
and
scas
gs
and
pushf
sbb
cmp
sub
xor
into
inc
xor
jl
or
nop
push
cmpsb
dec
and
mov
sarb
cmpsb
sbb
adc
dec
adcb
mov
adc
push
xlat
shll
sti
push
test
pop
pop
jns
data16
lahf
or
push
ss
and
data16
pop
sub
mov
out
rol
inc
arpl
mov
adc
jl
jno
stc
insb
xor
cmp
mov
stos
shlb
inc
xchg
sub
jno
fwait
mov
mov
cmpsl
push
inc
subb
fimuls
cwtl
push
ret
cmpsl
push
iret
cmpl
fwait
cmp
sbb
xchg
daa
pop
subl
stos
pop
fs
xor
xor
test
roll
test
mov
cwtl
mov
add
je
dec
inc
das
xor
cmc
call
adc
scas
mov
in
loopne
bound
xchg
daa
xchg
push
add
or
push
mov
cmpsl
mov
es
xchg
stos
mov
push
mov
repz
mov
xchg
push
mulb
test
sti
out
or
cmpsb
mov
cltd
sti
int
and
mov
jl
lock
gs
scas
jno
stos
loop
ljmp
add
mov
dec
fisubrs
adc
sub
std
dec
sbb
and
repnz
movsb
lock
rol
xchg
or
fs
test
push
xor
mov
divl
lea
fnstcw
push
bound
adc
imul
test
sub
sub
in
ds
xchg
nop
sub
lea
jmp
sub
out
jmp
cmp
ds
leave
scas
pushl
sbb
out
inc
xchg
mov
fnstcw
adc
daa
mov
adc
stos
mov
sti
pop
jmp
lods
adc
clc
mov
ds
and
xchg
adc
cmp
dec
cmp
pop
ljmp
mov
rorl
sbb
mov
jo
sbbl
jecxz
in
cmpsl
iret
jnp
mov
xor
imull
mov
cmp
fsubrs
in
addl
fdivs
dec
jne
das
cld
mov
pop
pop
addl
out
fstl
mov
cmp
xor
dec
dec
push
js
mov
in
jne
sahf
fs
sub
fidivrl
add
push
xchg
push
mov
addl
frstor
je
mov
lret
cmp
pop
and
lret
ficomps
outsb
popa
sub
xchg
or
cmc
cmp
push
sbb
push
xchg
in
movsb
fstps
addr16
test
fs
mov
add
imul
mov
loop
int3
cmp
xor
out
xor
orb
fs
mov
sbb
xor
clc
add
xchg
sub
ret
xchg
pushf
mov
stos
or
in
mov
sbb
add
outsb
ss
push
neg
adc
dec
inc
inc
mov
rolb
fnstenv
pop
push
push
cmp
inc
adc
arpl
sbb
mov
cmpsb
jg
mov
sbb
dec
test
pusha
ret
ret
push
pop
shrb
lods
sarl
and
int
mov
or
sbb
xchg
jecxz
ljmp
sub
mov
inc
pushf
into
stos
outsb
imul
add
repz
les
push
jns
scas
repnz
mov
mov
lcall
es
sbb
inc
xchg
xchg
scas
mov
pop
out
cld
mov
nop
pop
imul
jg
cmpsb
and
icebp
in
ds
test
cltd
les
iret
push
inc
aaa
enter
testb
rorb
shll
adc
inc
mov
sbbl
xchg
sarb
sub
and
mov
insb
xor
xor
cmp
sbb
add
push
into
movsb
iret
push
lret
dec
inc
das
sub
repnz
scas
pop
xchg
nop
fistps
ss
cmc
lea
mov
aas
cmp
sbbb
xlat
sbb
push
push
cli
outsb
sbb
aas
or
or
sarb
in
mov
xchg
mov
fsubr
iret
insl
sub
jl
xlat
pop
add
in
in
sub
pop
nop
in
push
dec
dec
or
cmp
ret
into
pop
test
cmpl
add
mov
ss
inc
lret
out
fstpt
xchg
cld
inc
jns
sub
pop
xor
and
cmpsl
bound
push
cmpsl
pushf
sarb
adc
out
scas
adc
dec
data16
push
ljmp
mov
or
in
js
jg
mov
sub
mov
out
pop
inc
out
orb
pop
outsb
cmc
out
lcall
popf
jmp
addb
nop
movsb
lahf
sbb
mov
cmp
sbb
xlat
pop
xor
out
jl
mov
inc
lahf
repz
xchg
add
push
adc
inc
cmp
xor
cmp
adc
clc
mov
jb
mov
inc
sarb
pushf
mov
jmp
mov
mov
pusha
adc
call
sarb
rcrl
cmp
testl
arpl
cmp
pop
and
jnp
daa
xorl
or
cmpl
push
ljmp
xor
icebp
loop
scas
inc
xchg
ja
push
xchg
mov
adc
or
aam
mov
mov
test
push
cmp
dec
fwait
mov
inc
or
fildl
or
icebp
out
fsubs
hlt
gs
cmp
scas
mov
js
push
pop
divl
sbb
inc
mov
add
stc
inc
sti
out
jb
inc
add
loope
addb
xchg
mov
shrb
mov
dec
aam
jecxz
push
dec
pop
decl
mov
int
cmpb
lret
rcr
add
test
in
jb
add
test
dec
test
into
mov
fsts
daa
adc
dec
sbb
fidivrl
mov
jle
adc
jbe
pusha
in
push
movsb
fs
call
aam
pop
cmp
jecxz
mov
shrl
cmp
test
cmp
add
iret
jno
fstl
pop
stos
pop
mov
sbb
ja
pop
cmp
hlt
inc
mov
imul
adc
shrb
rcrl
stc
sbb
aam
add
push
push
negb
shll
in
std
cli
mov
outsl
cwtl
inc
xchg
push
push
adc
adc
sbb
adc
les
call
insl
sbb
enter
arpl
mov
pop
adc
mov
cmc
mov
lahf
mov
and
aas
adc
mov
dec
sub
in
jmp
inc
xor
outsl
jmp
or
hlt
jb
test
jg
cld
lea
mov
cwtl
or
scas
cmpsb
sbb
add
leave
mov
addl
pop
lods
testl
dec
mov
xor
jp
push
sti
out
sbb
inc
xlat
mov
push
sub
out
sarb
sbb
mov
sarl
popf
or
stos
lret
scas
scas
std
pop
mov
cmpb
adc
and
inc
sbb
and
push
enter
pxor
mov
jmp
cltd
mov
sahf
add
fsubs
jne
notl
rcr
cltd
sub
adc
rorl
adc
testl
in
mov
lret
lods
cwtl
ficoms
adc
bound
movsl
add
and
enter
pop
xchg
shll
outsl
add
add
add
or
mov
std
mov
mov
mov
out
add
repnz
add
addr16
adc
pop
mov
jle
insl
subb
std
jmp
in
xor
add
stos
lret
mov
ja
sub
or
sbb
into
popa
in
and
fistps
jecxz
lahf
or
cli
inc
jle
fcomip
fldenv
ret
jle
lea
cltd
cmpsl
mov
push
in
mov
pop
xchg
aas
adc
movsb
sbb
cmp
add
mull
addr16
sbb
mov
push
pop
daa
dec
in
scas
pop
or
mov
adc
pop
mov
or
stos
jl
jb
adc
cmp
in
jp
mov
mov
cmp
push
stc
sub
xor
pop
xchg
push
pop
ret
out
jnp
out
dec
push
cmp
dec
sub
xor
sub
mov
jne
cmpsl
roll
sub
aad
outsb
lcall
add
loope
dec
in
mov
push
push
xor
aaa
xchg
inc
xlat
clc
lret
xchg
cmp
ret
std
pop
in
pop
dec
imul
inc
inc
and
push
and
shl
mov
dec
repnz
fs
in
push
add
in
cmp
xchg
fwait
mov
das
add
push
in
dec
aad
popf
jp
xchg
dec
loope
cmpsb
into
sub
or
add
xor
jb
push
adc
call
cmp
or
out
jmp
push
xchg
arpl
mov
insl
in
rclb
andl
inc
aaa
mov
or
out
fistpl
cmp
push
cmp
xor
jae
leave
pop
out
jns
aad
fnsetpm(287
pop
dec
andl
xor
sbb
jp
addl
nop
in
std
mov
pop
adc
mov
sub
mov
inc
or
enter
cmp
pop
idivb
jg
add
push
add
jle
and
repz
dec
xlat
lea
out
cmp
dec
add
int
fimull
dec
mov
rcrb
mov
or
stc
daa
mov
leave
adc
test
out
dec
mov
loope
and
icebp
test
sub
int
movsl
cli
jp
jp
and
jo
fsubrl
jp
pop
inc
mov
test
arpl
xchg
lret
dec
inc
cld
sti
jle
lods
arpl
push
xchg
popa
mov
scas
push
test
cmp
cld
jae
xor
shlb
bound
mov
testb
dec
dec
fs
data16
jmp
jge
cwtl
sbb
imul
outsb
movsb
into
pop
mov
pop
cmp
test
pop
pop
cli
adc
xchg
outsl
fstl
mov
add
and
mov
mov
movsl
xchg
add
adc
cwtl
sub
mov
cmp
pop
add
dec
mov
ja
or
xor
mov
ss
ret
pop
xor
xchg
ret
loope
aas
cmp
cmpsl
mov
leave
add
inc
dec
lods
int3
sbb
out
push
jp
les
jbe
aas
jl
out
sbb
sbb
mov
pushf
pusha
jo
push
ret
fisubs
scas
xor
lock
mov
lret
mov
xor
mov
xchg
in
loope
jmp
jne
push
lock
jae
and
mov
outsb
mov
sbb
inc
in
cmp
jl
cmp
adcb
adc
cmp
and
cli
adc
out
mov
xor
imul
xor
and
icebp
pcmpeqw
cmp
mov
out
push
in
in
repnz
adc
jbe
sbb
mov
sarb
inc
rclb
lret
repnz
out
nop
cmp
in
orl
cmp
out
ficomps
sbb
dec
inc
fldenv
aam
insl
sub
mov
inc
push
pop
xchg
jecxz
pop
out
hlt
jg
push
jle
fprem1
arpl
mov
in
xor
and
xlat
xor
jne
ret
add
mov
sbb
mov
and
jno
scas
cmpl
xchg
fidivrl
jo
add
and
hlt
stos
cmp
movl
jge
sbb
shrl
push
xchg
in
jl
mov
stos
cmp
mov
lds
cmp
ror
shr
mov
add
add
add
push
dec
shr
jg
push
mov
rclb
add
add
and
cltd
mov
sub
cmpsb
les
and
nop
gs
push
scas
jmp
mov
xchg
mov
jl
or
addr16
loop
dec
mov
push
pop
push
movsl
fisubrl
push
or
popf
sbb
pop
hlt
inc
xchg
sbb
mov
test
les
lea
jnp
mov
lea
ret
pop
jp
pop
bound
fidivrl
pop
movsl
jbe
dec
push
nop
xorb
lret
in
mov
fsubl
mov
aam
loope
test
fucom
inc
les
ljmp
and
or
pop
push
mov
inc
cmp
push
into
rcll
mov
int
movsl
pop
mov
pop
in
insl
sbb
dec
xlat
mov
cmpl
mov
mov
in
and
sbb
out
pushf
mov
lods
icebp
dec
mov
sub
das
xchg
inc
inc
dec
cmp
jp
sbb
add
scas
insl
rcrl
sbb
icebp
cmp
pop
sub
cmpl
imul
xchg
adc
inc
or
nop
or
pop
and
xor
lds
call
nop
clc
lods
xchg
dec
leave
pop
outsl
iret
cmp
mov
pop
ljmp
xchg
jle
push
int
xchg
mov
cmc
and
scas
mov
mov
and
rcll
lods
ljmp
stos
jno
lds
loopne
fnstcw
add
aaa
sarl
ljmp
dec
sahf
popa
pushf
je
lds
sub
andb
mov
mov
cmp
xor
sarb
add
or
test
inc
ret
shr
mov
pop
push
es
shlb
aad
sub
cmp
pop
mov
and
xchg
cmp
or
mov
das
pop
adc
and
enter
mov
xlat
sub
sub
frstor
inc
jae
dec
add
xchg
loopne
mov
lods
sbb
inc
in
mov
xlat
loop
in
hlt
jno
inc
data16
jb
push
push
imul
inc
adc
jo
hlt
fstps
fs
daa
and
add
in
sbb
pop
adc
push
cli
xor
mov
repnz
cmp
pop
aas
aam
dec
loopne
jbe
push
gs
andl
test
mov
pop
test
imul
add
orb
adc
leave
sbb
je
bnd
fcmovnbe
adc
mov
xchg
mov
not
ja
ret
cmc
cmc
roll
dec
aad
pushf
fadd
dec
add
and
ja
mov
outsl
and
lods
sbb
je
mov
aad
sub
pushf
mov
daa
pop
and
push
pop
add
out
pusha
popf
mov
and
rolb
inc
and
add
stc
mov
in
loope
or
ljmp
inc
or
dec
xchg
out
test
sahf
mov
inc
inc
pop
mov
popa
nop
xchg
int3
pop
mov
sub
movsb
addl
sub
xchg
outsb
pop
test
fadds
mov
fnstenv
jae
cs
shlb
cs
inc
fs
sbb
ja
and
pusha
ja
test
fistl
test
std
lret
ljmp
sbb
dec
lahf
dec
movlps
lret
inc
jecxz
sbb
cmp
aam
xor
xchg
outsl
loopne
push
test
movsl
jecxz
xchg
rcrb
mov
xor
cmpsb
add
or
jmp
add
repnz
outsb
aad
rcrl
dec
enter
lods
fdivl
dec
pop
arpl
pushf
xchg
cmp
xor
das
push
test
imull
and
xchg
test
je
pop
or
enter
repz
fs
fdivrl
sbb
mov
daa
notl
inc
mov
jnp
rcrb
xchg
mov
insb
insb
imul
pushf
insl
add
inc
mov
ret
adc
push
fs
xor
in
in
xchg
sbbb
inc
push
push
fwait
lods
stc
push
add
hlt
dec
mov
cltd
fadds
mov
cli
movsb
out
dec
xchg
xchg
mov
mov
fldt
inc
loop
jno
cmpsb
scas
mov
mov
lret
mov
sub
push
mov
or
cltd
and
adc
or
add
add
add
movsl
push
movsl
shl
divl
jmp
add
fadds
add
pop
not
pop
dec
cmpsb
sub
test
mov
xchg
rcll
pop
jle
loope
ss
sbb
inc
cwtl
pop
movl
or
iret
cli
and
out
subb
outsl
xchg
idiv
xchg
adc
sub
imul
lret
int
and
lret
call
jnp
sub
in
sub
in
scas
lcall
ja
mov
cmpb
mov
and
push
cmp
pop
push
sbb
cmp
jle
or
imul
jbe
sub
xchg
jns
xchg
or
fisubs
shr
data16
cwtl
sbb
cli
popf
adc
mov
in
adc
mov
shlb
popf
inc
into
insb
adc
xchg
loopne
sub
xchg
adc
xchg
hlt
dec
or
inc
sti
outsb
xchg
cmp
clc
int3
sbb
dec
loop
ret
hlt
stos
orl
sub
movsl
int3
xor
cmp
xchg
mov
insl
setge
repz
push
ret
push
or
insl
or
xor
dec
pop
mov
mov
loopne
cld
inc
adc
or
mov
jge
pop
daa
js
fidivl
push
fnstsw
int
inc
rcll
sbb
adc
dec
jge
or
lock
sub
icebp
cwtl
hlt
outsb
push
in
repnz
iret
adc
dec
xchg
popa
or
js
stc
es
das
push
arpl
jl
loope
lock
mov
dec
stos
pop
add
sub
push
xor
inc
fimull
mov
jbe
bound
iret
leave
dec
cwtl
xor
out
pop
and
dec
into
xor
inc
cli
jb
dec
call
pop
mov
cmpsb
fwait
push
push
test
ror
movsl
jbe
lock
and
mov
sbb
ficomps
sub
pop
xor
jo
ror
and
sub
dec
sbb
incb
or
mov
or
lcall
xor
mov
xchg
leave
dec
mov
inc
mov
out
out
data16
xchg
xchg
push
add
xchg
repnz
and
push
fdivrp
push
inc
ret
test
or
fidivrs
xchg
and
and
popl
subb
cmp
cli
push
int
pop
sarb
cmp
jo
pop
xchg
inc
jmp
and
rcll
and
xorb
mov
mov
outsb
add
test
inc
outsl
int3
stc
mov
mov
cmpsb
lret
inc
lcall
push
out
cmp
mov
in
sub
fcomp
lret
aas
pop
fldt
and
mov
lret
sarb
cmp
inc
push
push
clc
inc
pusha
shlb
mov
stos
mov
cwtl
or
mov
sub
xor
pop
iret
idivl
ss
jmp
dec
iret
push
xchg
mov
and
insl
mov
push
dec
mov
xorl
xor
arpl
lock
sbb
mov
divl
adc
stos
sub
sbb
imul
int3
jp
mov
fidivrl
test
out
jl
cmpsl
addr16
rorb
int
push
mov
sbb
push
or
pop
dec
addr16
adcb
hlt
xor
inc
out
push
in
push
stos
mov
mov
jp
or
loop
xlat
hlt
cmp
sub
call
ljmp
lret
xor
push
xlat
inc
repz
pop
inc
or
xchg
jo
dec
xchg
ret
js
fdivp
stos
repnz
test
lock
mov
xchg
pop
and
pop
jns
inc
xchg
mov
lret
xorb
outsb
mov
xchg
dec
les
and
push
pop
cltd
std
sub
mov
pop
pop
pcmpgtw
cmp
leave
mov
jle
xor
xor
lret
sub
dec
rcrl
fisubrl
outsb
fildl
dec
push
pop
sbb
jne
mov
push
mov
outsl
and
movsb
jle
jo
adc
dec
jmp
cld
sbb
xor
mov
lahf
test
les
xchg
je
movsb
pop
clc
in
push
adc
adc
fdivl
