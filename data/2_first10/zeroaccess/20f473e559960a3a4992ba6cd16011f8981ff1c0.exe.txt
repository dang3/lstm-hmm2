push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
mov
push
adc
adc
adc
adc
xlat
sbb
lea
push
xor
sub
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
mov
push
negl
cmp
out
lods
shll
push
and
test
mov
hlt
imull
or
inc
std
mov
les
sbb
pop
mov
iret
fidivrl
add
mov
inc
xchg
int
insb
sbb
test
clc
adc
pop
int
add
add
pop
addr16
and
pusha
out
outsb
jecxz
repz
movsl
cmp
test
sbb
pop
arpl
cmp
cmp
mov
dec
mov
push
and
xchg
and
jp
jnp
and
ds
pusha
jecxz
push
jne
sub
xchg
clc
pop
pop
ds
fs
push
xor
loop
scas
xchg
cwtl
sbb
push
push
cmp
in
inc
pop
aas
mov
repnz
cwtl
push
inc
pop
pusha
mov
clc
mov
icebp
test
gs
xchg
imul
mov
xor
xchg
inc
js
cltd
or
mov
cmpsb
sub
out
out
mov
cmp
cmp
cmc
fs
mov
cmp
mov
mov
lahf
lret
sbb
or
sub
stos
cmpl
insb
or
or
pop
push
cmp
in
fs
mov
adc
cmp
inc
fwait
xchg
push
sbb
push
mov
cli
scas
inc
pop
inc
adc
sahf
hlt
push
cmp
mov
jp
aas
inc
cmp
lcall
mov
lahf
jmp
mov
sub
pop
inc
xchg
xor
pop
jp
mov
andb
je
imul
sahf
imul
out
stos
push
add
lock
iret
je
xchg
mov
mov
sbbl
movsb
mov
movsl
inc
sarb
ds
pextrw
mov
dec
pop
xor
xor
inc
movl
jnp
lods
jp
jle
pop
sbb
stc
mov
cld
dec
xorb
sbb
bnd
push
jmp
mov
incl
mov
pop
adc
cmp
jnp
pop
dec
out
mov
fyl2xp1
or
xchg
cld
inc
add
adcl
in
fdivs
adc
loop
dec
mov
dec
adc
leave
outsl
cmp
add
lods
push
ret
lahf
negl
jle
and
adc
mov
mov
fdivl
cli
and
dec
mov
outsl
mov
sbb
outsl
fistps
cmp
insb
call
jmp
dec
stos
rol
push
fmuls
ret
sub
test
cmp
and
dec
lock
mov
xchg
movsl
adc
or
mov
dec
inc
push
insb
xchg
jp
cmp
inc
je
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
adc
adc
adc
adc
push
xor
daa
sub
repz
mov
je
mov
jle
add
xchg
loop
mov
pop
dec
dec
jne,pt
add
mov
repz
xlat
les
cli
jne
xchg
loop
mov
testb
lds
sub
mov
into
add
int3
pop
repnz
cmpsl
lahf
nop
gs
std
rcrb
dec
pop
movsl
sub
sub
push
jno
rcrb
js
cmp
add
add
scas
loope
out
dec
add
pop
fwait
sub
mov
bound
mov
add
in
js
aam
jo
mov
lea
hlt
js
sbb
repz
or
pop
inc
dec
shrb
and
inc
adc
sbb
push
and
incl
lret
data16
push
sahf
jno
aam
jle
pop
mov
mov
and
aam
lods
ljmp
dec
or
dec
mov
scas
push
mov
inc
lret
or
mov
fcomps
push
lock
test
aam
out
in
pop
jb
scas
mov
cmpsl
popf
sub
pop
ror
mov
scas
push
test
shlb
cmp
cmp
bound
jbe
gs
ret
push
xor
sarl
sbb
jne
fsubs
jp
push
test
in
push
cltd
pop
out
cli
jp
test
mov
mov
je
xchg
mov
mov
mov
push
or
cmc
aad
in
stc
cmpb
jns
aaa
mov
or
sar
lods
mov
hlt
fdiv
mov
lea
fwait
int3
cmpsb
test
fstp
push
movsl
cmp
jge
rol
mov
stos
fnsave
xor
pop
adc
add
ss
or
or
xchg
mov
xchg
pop
mov
mov
jnp
inc
pop
stc
clc
or
repz
cmp
jne
sbb
fs
jmp
clc
rol
iret
push
add
cmp
mov
dec
pop
jecxz
je
dec
cwtl
pushf
pop
push
push
mov
out
push
xor
sub
adc
and
cmp
outsb
in
icebp
pop
test
call
add
pop
cld
js
push
and
adcb
add
mov
in
out
shr
shlb
into
aam
cwtl
out
mov
loopne
xchg
test
xlat
in
xor
sbb
push
xchg
test
sbb
or
idiv
dec
enter
lret
sub
inc
mov
out
test
lods
fildl
push
cmpsl
push
jbe
int3
mov
push
push
pop
fidivl
jle
outsb
enter
das
test
and
push
push
mov
lock
rcrb
push
lret
leave
pop
lcall
push
outsl
notb
push
inc
fst
fistl
sti
call
jecxz
mov
stos
in
jnp
rcrb
lret
push
jmp
inc
daa
sbb
rol
jge
in
or
std
add
mov
mul
pop
stc
xor
jo
nop
int3
int3
xchg
rcrb
cmpsb
mov
pop
and
es
lret
jp
fnstcw
sub
or
xor
jecxz
mov
cmpl
cwtl
inc
cmp
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
clc
push
into
lods
orb
adc
adc
adc
jecxz
xor
push
and
xchg
xchg
mov
add
jmp
js
mov
ss
pop
xor
xchg
dec
lods
cmp
incl
mov
push
mov
es
jp
mov
subb
mov
in
push
pushf
mov
outsb
cmp
mov
test
inc
sbb
mov
arpl
aas
push
pop
inc
mov
pop
aad
stc
mov
jo
fcmovbe
push
cmp
pop
sbb
out
stos
inc
pop
loope
shl
and
stos
idivb
pop
loop
add
adc
shll
push
xorl
sub
orb
jno
mov
testl
mov
push
div
xchg
es
scas
cld
outsb
mov
sub
gs
jmp
fstl
in
cld
dec
lret
jno
push
dec
lods
hlt
inc
aaa
dec
in
mov
lret
mov
jno
sub
aaa
xchg
or
loopne
pop
adc
loopne
pop
hlt
push
pusha
sub
jl
jne
add
cmp
cmp
xchg
xlat
shrl
rclb
sbb
mov
xchg
jp
and
lock
scas
pop
pushf
dec
mov
pop
and
js
lock
clc
push
divb
nop
mov
mov
fmull
cmp
or
lret
and
sbb
cmpsb
jg
jb
out
pop
pop
repz
xor
mov
test
hlt
mov
movsl
mov
and
mov
lea
ret
lock
push
pop
xlat
pop
loop
or
das
mov
jae
mov
push
push
and
mov
mov
jg
aaa
jg
lds
adc
lods
and
test
bound
ffree
adc
mov
pop
ljmp
xchg
je
nop
push
pop
push
test
jno
sub
sbb
stos
mov
je
pop
pop
pop
sbbb
bound
fsqrt
inc
out
mov
inc
dec
add
scas
scas
sub
mov
dec
mov
lods
push
sbb
add
addr16
shrl
cli
out
int
xor
stc
add
leave
scas
mov
ficoml
jns
inc
les
fnstcw
dec
insl
add
pop
in
or
mov
pop
ljmp
mov
fstpt
outsb
xor
stos
sbb
rorb
inc
cli
mov
popf
pop
cmp
or
mov
bound
or
push
or
xchg
repz
cwtl
fidivrs
cs
pusha
cmpb
jle
loop
sbb
pop
xchg
outsl
gs
mov
mov
cmp
outsb
adc
pop
add
out
pop
stc
pusha
or
push
mov
pop
xchg
mov
cmp
add
cmp
add
dec
leave
dec
data16
test
xchg
addr16
test
mov
je
pop
lret
jns
pop
int3
push
pop
lock
out
das
ret
mov
add
insb
xor
jb
mov
cmp
pshufw
stos
dec
jns
fildl
call
fisttpll
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
call
loopne
mov
rcrl
mov
pop
icebp
insl
out
sbb
shrl
xchg
xchg
fdivrl
inc
jp
xchg
mov
movsb
cmc
es
orl
mov
mov
pop
fstpl
lea
ret
xor
into
xor
out
sub
jb
gs
addb
jno
adc
sub
inc
fwait
xchg
dec
mov
cmp
andl
imul
jbe
lea
dec
fmulp
data16
insl
lahf
and
dec
arpl
mov
jns
iret
repnz
mov
dec
cli
inc
scas
ret
dec
fneni(8087
enter
cltd
sub
push
fadd
mov
stos
jb
mov
and
jp
mov
jb
les
push
jo
enter
shlb
xchg
dec
xchg
adc
add
sbb
sub
mov
jae
shr
testb
cmpsb
or
jns
sti
shr
scas
cmpsl
sub
bound
insl
xchg
fs
add
inc
jmp
xchg
hlt
cltd
bound
test
mov
push
jno
jae
mov
sarb
in
shld
push
test
jnp
fstps
rol
jo
popf
aad
xchg
sub
out
mov
insl
das
pop
in
inc
pop
cmp
jge
outsw
sbb
lcall
in
cmp
mov
pop
mov
rorl
scas
movsl
clc
xor
or
push
stc
cmp
xchg
aam
pop
jmp
jl
adc
lret
cmp
cs
arpl
cltd
push
shll
pop
test
push
inc
cmp
stos
int3
popf
jne
ljmp
xchg
mov
daa
lods
cltd
scas
shll
fwait
cmpb
sbb
shrl
jne
sbb
jmp
or
mov
sub
sbb
enter
test
mul
push
xor
pusha
sbb
movsb
sti
jae
movsb
jge,pt
lret
test
xlat
lret
scas
loopne
jl
insb
stos
mov
sti
xchg
clc
popa
dec
or
mov
shrl
jecxz
andl
inc
adc
loop
imul
sbb
js
cmpsb
aaa
stc
test
push
ret
xor
push
fs
pop
cmp
sbb
jl
mov
scas
andl
mov
ret
popa
icebp
pop
xchg
stos
push
mov
jg
rcr
adc
mov
xor
pusha
add
out
aaa
mov
aam
cmc
retw
sub
adc
lahf
and
out
rolb
or
pop
pop
and
add
cmp
arpl
mov
pop
shlb
rorb
mov
outsb
lahf
pushf
pop
into
pop
mov
les
test
jae
lahf
jae
ds
rcrb
mov
cmp
fsts
and
and
inc
ljmp
pop
and
adc
inc
jge
or
pop
push
in
sub
fisubl
inc
sbb
adc
and
mov
popa
inc
rcll
dec
bswap
sub
add
rclb
sub
iret
push
shll
dec
jae
test
add
fwait
pop
mov
mov
cltd
test
enter
inc
dec
pop
inc
adcb
xchg
mov
inc
pop
mov
out
cmc
aam
sub
jbe
jmp
out
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
iret
add
int
adc
iret
call
or
insl
xor
mov
jnp
lret
imul
cmpsl
icebp
pop
imul
add
insl
add
leave
ljmp
out
jmp
pop
mov
fwait
scas
adc
mov
push
dec
dec
pop
mov
jne
test
aad
inc
pop
sbb
xchg
xor
jle
sahf
add
sahf
into
or
dec
xchg
xchg
arpl
cmp
std
pushf
in
mov
test
inc
nop
daa
sub
arpl
mov
lods
mulb
sbb
cmp
and
sub
xor
xchg
and
xchg
sub
and
es
testb
cwtl
cli
punpckhdq
mov
dec
fnsave
movsl
inc
sub
cs
out
jnp
sub
or
mov
mov
fidivl
inc
mov
sub
fadds
adc
dec
inc
mov
int3
add
shll
push
or
pop
movsl
mov
testb
dec
sub
cmp
fcompl
or
dec
aaa
lea
dec
push
mov
mul
bound
pop
stos
shlb
push
test
cmp
xlat
aas
shlb
push
add
dec
sbb
es
mov
mov
mov
push
push
jmp
in
adc
test
sub
inc
lods
dec
add
pop
js
mov
mov
call
dec
xchg
xorl
xchg
out
scas
mov
push
adc
xlat
sbb
stc
insl
out
shl
popa
sbb
jbe
inc
popf
dec
ffree
push
xchg
and
and
pop
xchg
sub
test
and
pop
stc
lret
mov
aam
pop
jmp
mov
inc
fimull
rclb
dec
xorb
fadds
xchg
outsl
adc
pop
push
daa
inc
sub
popf
xor
add
in
shrl
lcall
in
imul
sbb
jo
jle
mov
addr16
mov
lock
out
nop
fiaddl
push
inc
mov
jmp
jge
gs
push
imul
mov
pop
cmpsb
imul
fcmovnb
cmp
and
lret
clc
sar
sbb
insb
mov
into
ret
stc
adc
jl
mov
ror
ficomps
out
outsb
and
addr16
and
push
inc
mul
nop
inc
jno
nop
pushf
js
lcall
sub
jb
jle
pop
push
mov
popf
mov
inc
jecxz
pusha
lods
xor
jne
pusha
lods
test
int3
push
fistps
imul
push
iret
cwtl
push
loopne
test
iret
and
das
out
add
and
push
int3
jbe
fcomps
sub
adc
popf
xchg
adc
in
mov
mov
cmp
pop
in
xchg
cmp
push
xlat
xchg
mov
cmp
dec
push
stos
imul
lock
pop
xor
je
shrl
push
lock
repnz
stos
cld
sahf
lds
or
inc
test
lahf
pop
hlt
loope
pop
mov
xchg
data16
or
arpl
mov
scas
mov
lcall
push
cmp
inc
lret
add
sub
adc
push
pop
jae
out
push
in
lcall
mov
daa
outsb
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
xor
cmpsb
out
adc
int
adc
push
shrl
jge
push
xor
xor
sar
dec
xchg
dec
jg
jae
mov
xchg
popa
jecxz
jmp
je
test
pop
or
pop
loope
adc
mov
or
mov
jne
add
xor
in
mov
fs
xor
cmpsb
xchg
cmp
leave
jbe
xchg
pop
iret
ds
sbb
out
fimuls
sub
scas
stos
js
outsl
push
push
or
mov
xor
iret
add
leave
cmpsb
faddp
adc
push
or
cld
outsb
and
inc
cld
dec
sbb
mov
dec
inc
xor
ret
pop
sbb
jg
daa
lahf
insb
insb
jb
sbb
add
pushf
adcl
movsb
xchg
pop
adc
cmp
xchg
rcrb
mov
add
cmp
lock
sbb
lea
cmpsb
mov
aad
fidivrs
scas
lods
xchg
into
or
ret
out
outsb
pushf
fbld
or
out
movsl
clc
ds
call
pop
and
fcmovne
xchg
mov
jle
pop
xchg
cmc
sti
push
fdivl
xor
pop
adc
fdiv
aam
push
rcll
stc
and
das
test
dec
loopw
outsl
pop
inc
dec
jp
das
icebp
or
adc
mov
pop
jbe
push
pop
shll
jmp
jno
ljmp
xchg
adc
outsl
xor
push
xor
mov
lcall
or
cmp
pop
into
pop
cmp
mov
jle
negl
or
inc
shrl
ja
lcall
bound
push
jno
and
mov
dec
dec
sub
jb
outsl
push
fsubrs
loopne
out
loope
mov
xor
mov
pusha
mov
add
mov
inc
movsb
fistpl
hlt
mov
jo
call
into
or
adc
sub
dec
clc
xchg
invd
cltd
movb
fwait
in
int
xor
add
cwtl
fld
sub
sarl
pop
xor
add
outsb
lock
sub
mov
fwait
ds
or
adc
adc
je
mov
inc
iret
sub
sub
jno
sahf
test
mov
in
and
or
ja
iret
mov
fnstsw
popf
ret
dec
test
aam
mov
fldenv
xor
outsb
mov
cli
ret
cmpsl
jno
popa
ljmp
pop
insl
push
shlb
mov
mov
loopne
mov
lahf
sub
test
xchg
repnz
lcall
push
mov
push
iret
mov
push
mov
int
jbe
mov
addr16
cli
add
jmp
bnd
lods
adc
mov
data16
pop
dec
bound
push
lcall
jo
pop
mov
subl
inc
data16
out
loope
in
leave
cmpb
ds
push
in
lahf
fistl
bound
clc
mov
loop
sub
ret
or
pop
cmp
add
cli
mov
or
mov
pause
inc
ret
mov
inc
mov
mov
icebp
adc
enter
pusha
push
shl
push
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
lcall
adc
adc
adc
stos
sbb
sub
push
xchg
add
pop
add
icebp
cmp
mov
cs
or
jnp
mov
insb
lahf
iret
xchg
jmp
pop
leave
add
xor
loope
cwtl
inc
loope
cltd
mov
mov
in
sub
imul
or
out
outsl
sbb
dec
imul
lea
jns
sti
movsb
aas
shlb
xor
cli
push
xor
pushf
xor
icebp
push
subl
roll
or
daa
dec
adc
mov
fcompl
sbb
adc
jae
mov
push
push
xchg
shlb
or
dec
jne
out
fsub
out
cmpb
ljmp
dec
jns
pushf
mov
inc
inc
xchg
loopne
xchg
clc
sbb
sub
pop
or
pusha
ds
or
xchg
aad
jno
scas
fldl
insb
rcll
lds
cmpsb
das
in
inc
sbb
test
cmp
and
rcll
jge
sbb
cmc
mov
dec
inc
fld
loope
mov
leave
cmp
or
xchg
mov
push
loope
mov
out
adc
pop
xor
mov
pusha
arpl
mov
mov
mov
mov
xchg
xlat
jmp
sbb
popa
mov
jecxz
in
mov
test
add
inc
mov
mov
add
popf
pop
adc
inc
pop
sub
fstl
add
jb
dec
popf
sti
cs
idivb
push
mov
and
scas
push
or
out
push
lcall
cmp
subb
inc
mov
sti
push
push
cwtl
fdivs
cmpsl
mov
pop
xor
xorl
int
fs
and
mov
mov
test
add
jo
andl
mov
in
sahf
jmp
or
and
sbb
popf
push
mov
mov
xchg
leave
push
mov
push
test
ficompl
lea
jns
sbb
outsl
sbb
push
in
addr16
iret
call
mov
or
jle
lcall
call
add
pop
repnz
outsl
jns
mov
sbb
xchg
xchg
jmp
pushf
jns
inc
adc
mov
ljmp
insb
and
pop
int
mov
fstl
mov
cltd
repnz
ss
andb
and
ficompl
cmp
cmpsl
pop
or
inc
mull
sti
add
mov
xchg
aas
test
int
adc
cmpsb
cmp
test
ss
sub
imul
aaa
cwtl
xchg
adc
and
xchg
dec
in
rclb
jmp
cmpsb
push
mov
xor
push
aad
jl
sbb
rcl
insb
push
xchg
adc
cmp
aaa
sub
mov
mov
sbb
popa
and
scas
xchg
pop
pop
inc
in
adc
and
inc
push
add
sbb
aad
sahf
jae
int
and
mov
xchg
mov
psrlw
pusha
mov
imul
loopne
mov
mov
or
js
loope
es
and
push
lock
inc
xchg
je
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
ret
jge
insb
adc
adc
int
adc
lcall
shll
hlt
sub
in
pop
dec
mov
in
adc
mov
ret
or
pop
mull
bswap
adc
loopne
add
popf
xchg
and
jecxz
sub
mov
ss
mov
and
insb
push
stc
scas
mov
movsl
lock
and
sub
inc
jbe
add
cmc
lcall
adc
inc
mov
mov
in
pop
xorb
mov
inc
insb
xchg
jmp
push
scas
lock
jnp
popf
inc
hlt
stos
pop
mov
adc
lock
push
fistpl
rcrl
cld
jmp
enter
loope
decl
push
ljmp
sahf
or
add
sub
cld
rcll
es
mov
and
pop
aaa
inc
lcall
hlt
mov
or
and
mov
mov
test
lods
arpl
sarb
jp
fsts
cmp
ja
mov
add
adc
aaa
cmp
inc
pop
jbe
int
or
imul
aad
roll
jne
push
sbb
mov
mov
and
add
cli
icebp
jnp
mov
scas
xor
add
sbb
xchg
mov
and
fwait
jmp
xchg
push
dec
sub
sbbb
lods
mov
out
xor
imul
sahf
cmc
lock
jmp
jbe
movl
andb
imul
push
xchg
pop
pusha
call
scas
fistl
imul
pushl
and
fxch
xchg
sbb
testl
cwtl
pop
bnd
xor
xor
jo
xchg
pop
fldenv
sub
pop
push
mov
orb
in
xchg
xchg
fldcw
sbb
xchg
sub
fwait
loope
xor
xchg
xor
jecxz
sub
sbb
test
xor
lret
test
cmp
loope
inc
inc
dec
rol
inc
push
fsubrp
mov
in
in
orb
gs
call
out
inc
fs
add
out
dec
into
xchg
rcrl
mov
push
inc
dec
in
pop
xchg
test
push
cmp
inc
lds
xchg
mov
rorb
push
or
jge
das
scas
mov
sbb
mov
pop
inc
jo
adc
nop
repnz
aad
stos
xor
mov
in
xchg
mov
pop
inc
out
iret
jp
push
push
add
mov
jne
andb
and
fwait
and
xchg
loopne
push
sbbl
lahf
imul
outsl
dec
sub
dec
push
popf
popf
test
xchg
enter
ror
popa
lcall
mov
insb
mov
xlat
outsb
adc
xchg
repz
cmc
adc
pop
jle
push
insb
xchg
cs
enter
or
rorl
xor
adc
jae
jle
inc
mov
dec
pop
sarl
xor
push
stos
mov
jbe
pusha
sub
cwtl
lock
inc
lods
cli
adc
lret
jle
stos
lods
sti
push
clc
xchg
adc
ljmp
lret
jmp
fdivs
xchg
cltd
leave
lret
out
sub
push
and
push
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
cwtl
add
adc
int
adc
dec
lahf
outsl
loopne
ficoml
jb
jno
divb
cs
inc
data16
xchg
mov
pop
jmp
add
stc
shrl
xor
pop
lea
rorb
mov
xchg
cmp
ficompl
push
mov
ror
incl
je
imul
addl
shlb
cmpsl
inc
xor
mov
stos
push
mov
cmp
xchg
les
test
jnp
and
cmc
stc
dec
ror
testl
aas
ret
std
or
push
rcr
hlt
fldl
push
pop
lret
mul
jne
pushf
pop
int3
mov
dec
xlat
nop
jle
xor
outsb
inc
jmp
pushf
aad
or
out
jb
jbe
mov
cltd
sbb
lret
mov
test
std
jp
mov
xor
int
pop
jne
lods
into
or
add
push
mov
ja
dec
ficoms
push
orl
outsb
inc
lods
dec
leave
mov
dec
jno
mov
add
mov
mov
aad
fstps
icebp
dec
andb
sub
mov
xchg
mov
gs
inc
int
mov
lcall
xchg
shr
hlt
add
stos
dec
xor
movsl
in
lock
call
sbb
ja
push
sub
insb
cld
addr16
pop
sbb
aad
orb
lret
adc
movsl
jp
int3
mov
not
mov
jns
xchg
insb
xor
pusha
add
pop
xchg
mov
sbb
push
test
or
mov
jmp
push
out
or
lds
inc
pop
mov
dec
adc
push
xchg
je
lcall
and
xchg
push
mov
jge
les
movsl
repnz
sahf
das
cmp
int3
leave
mov
cmp
clc
xchg
lea
enter
add
nop
insl
mov
test
shufps
sbb
hlt
lods
jnp
jne
add
push
dec
inc
neg
popl
mov
sbb
cld
sub
add
push
popf
stos
jae
dec
popf
movsl
dec
xchg
ljmp
fisttpl
push
scas
adc
and
in
push
mov
inc
add
mov
sub
nopl
test
xchg
pop
xchg
pop
fldenv
out
pop
xor
sbb
jbe
outsb
adc
push
inc
clc
mov
xchg
insb
push
outsb
call
cmp
push
cli
push
in
hlt
roll
rolb
imul
sub
ret
fdivrl
sub
xor
sbb
inc
lret
add
pop
repz
sbbb
ljmp
push
cs
mov
andb
cmc
std
xor
out
aad
sbb
mov
sbb
cmp
mov
test
icebp
sbb
mov
push
inc
std
mov
aad
cmc
test
cmpsb
pushf
pop
addr16
cmp
or
int
dec
push
shrl
xchg
push
pop
or
dec
cmp
ret
popa
daa
pop
lods
inc
nop
rcll
idivb
loop
jmp
fwait
js
addr16
jmp
cmp
cmp
pop
and
add
add
sub
ss
dec
ja
or
outsb
dec
test
mov
xor
ret
outsb
mov
mov
mov
shl
jmp
fmuls
sbb
or
stos
jge
adc
int
adc
clc
aas
popf
sbb
fsubs
mov
push
or
mov
pop
sbb
ja
fneni(8087
xorb
jo
jb
mov
adc
pop
enter
in
push
xlat
push
jp
das
sti
lods
nop
pop
ficomps
xor
out
je
out
jecxz
aam
sbb
mov
and
push
lret
repnz
pop
mov
push
fdivrs
scas
mov
sti
and
xchg
mov
cmp
leave
xchg
rcll
fldcw
loop
push
mov
adc
imul
cmpsl
mov
outsb
rclb
daa
mov
xor
pop
add
bound
xchg
lret
lahf
mov
xlat
rcl
pop
mov
cmp
inc
sbb
stos
jg
sbb
popa
inc
sub
loope
rcl
nop
dec
sbb
rol
sbb
out
xchg
addr16
in
xor
pop
stos
int
add
jno
idivb
fdivrp
or
or
mov
ret
xor
xor
xchg
xchg
mov
sub
xor
fwait
pop
jmp
xchg
and
insl
std
push
movsl
ret
cwtl
mov
notl
cmp
cmp
sub
shll
sarl
scas
cmp
and
inc
pop
add
mov
push
xor
ret
pusha
push
dec
sbb
aam
int3
repz
inc
cmp
mov
xchg
stos
outsb
mov
sub
cmp
cwtl
aam
fs
sub
lret
fildl
clc
xchg
repz
jb
cmpsb
loop
lcall
pushf
imul
fnstsw
xchg
xchg
or
insb
fistpll
idivl
leave
stos
fnstenv
orb
dec
gs
add
lea
nop
stos
xor
insb
fldl
cmp
das
aam
repnz
clc
jbe
mov
call
leave
cmp
pop
lea
pop
lods
mov
push
fisttpll
adc
gs
push
into
dec
sub
repnz
test
dec
faddl
mov
int3
mov
out
loop
pop
adc
sub
jnp
enter
test
jo
sub
es
pop
add
xor
hlt
mov
mov
mov
jne
sub
jle
rclb
mov
mov
or
rcl
xchg
dec
outsl
mov
mov
test
fnsave
sub
clc
hlt
xchg
jne
adc
fidivl
xchg
cld
xor
test
ja
sbbl
xchg
int3
dec
loopne
int
xor
es
or
lret
repnz
iret
mov
sahf
jge
jo
shrb
mov
mov
or
int3
stos
sbb
jne
lds
jecxz
xor
xchg
enter
sbb
jge
ret
clc
arpl
andb
outsl
xchg
mov
repnz
add
shl
xor
sbb
into
lret
jmp
es
jmp
int
stos
mov
add
sti
xchg
sbb
jb
stos
cmp
repz
inc
pop
mov
inc
hlt
cltd
sub
push
mov
repnz
xchg
cmpl
arpl
mov
pop
add
stos
cmp
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
mov
pop
lods
xor
adc
int
adc
adc
cli
xor
xchg
add
stc
xor
or
add
push
cli
mov
es
mov
ds
pop
lock
scas
or
and
sbb
cmpl
and
call
andb
or
dec
sub
ljmp
out
aam
call
xchg
add
shll
lods
mov
in
in
pop
mov
push
mov
leave
fbstp
pop
movsl
rcrb
bound
in
sti
and
jns
adc
mov
or
mov
stos
jl
jmp
js
je
jae
dec
insl
fidivs
sar
mov
lret
iret
inc
cmp
inc
mov
and
pop
cltd
inc
add
pop
mov
mov
mov
loop
jg
rcr
fwait
pop
mov
dec
lods
repz
hlt
ljmp
es
push
xchg
movsb
sub
arpl
xchg
cltd
insl
ret
inc
aad
sub
rclb
sub
mov
ret
in
cltd
mov
inc
cmp
dec
xchg
adc
scas
xchg
insl
mov
or
sub
xchg
mov
popf
jno
xchg
imul
push
cwtl
sub
call
mov
and
ret
jae
mov
popf
xchg
aaa
xchg
pop
push
xlat
sti
and
int
push
xorb
into
data16
and
daa
pushf
xor
pop
sbb
stc
cmp
and
mov
data16
lods
test
mov
orb
lahf
cs
inc
outsl
xchg
insl
lods
das
push
and
mov
lock
mov
or
xchg
dec
pop
jle
push
fsubrs
aam
adc
pop
fidivl
cli
xchg
or
insb
dec
xorb
xchg
scas
jecxz
repnz
int
dec
stos
inc
test
xchg
add
stos
imul
and
fisttps
xor
stos
sub
xor
mov
lods
paddq
ja
in
jmp
adc
add
jl
loopnew
jne
arpl
stc
dec
push
inc
push
or
mov
leave
movsl
mov
adc
jl
je
sbbb
lret
cs
in
rcll
sarl
icebp
cmp
sub
sbb
sub
mov
dec
dec
lcall
mov
jne
jle
sbb
outsb
jb
or
pusha
fisubrl
push
cld
mov
or
cmpsb
jecxz
roll
cmp
add
and
push
mov
mov
cs
or
inc
xchg
sub
xchg
mov
sahf
pop
adc
xchg
ds
clc
jb
test
addb
icebp
lret
je
pushf
dec
shrl
scas
dec
outsb
mov
mov
xchg
inc
sub
cmpsl
test
arpl
add
jl
cmp
xchg
iret
lods
mov
xchg
iret
and
add
lock
jl
les
shrl
clc
xor
push
negb
aas
cmp
pop
push
xchg
push
adc
jp
or
insb
stos
leave
mov
hlt
in
cltd
push
enter
fimull
cld
cmp
pop
inc
push
sub
dec
jne
pcmpgtw
adc
or
bound
fadd
in
ss
jo
int3
outsl
mov
fnsave
movsl
loop
inc
jle
adc
dec
mov
jbe
sub
enter
cmpsl
dec
add
lock
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
pop
outsb
loop
ljmp
adc
loope
repz
out
mov
in
xchg
inc
out
scas
les
mov
clc
cmp
push
adc
sbb
js
shrb
cli
push
xor
loopne
test
out
xchg
dec
xchg
mov
xor
push
repz
xchg
adc
xchg
cmp
mulb
data16
mov
mov
std
aam
adc
add
call
mov
pop
bound
jne
stc
filds
fwait
out
cmpl
jmp
cmp
decb
movsl
push
loopne
mov
xchg
imul
ss
sbb
in
cs
inc
or
inc
pushf
fsubrs
sub
aaa
idiv
push
divl
das
fs
rcrb
xor
push
xor
repz
lcall
arpl
and
hlt
push
js
push
inc
int
pushl
xor
cmp
out
xor
mov
cmp
fsubrl
inc
sub
mov
jle
cld
cmp
mov
mov
pop
mov
cmpsb
test
or
add
cmp
mov
add
sti
mov
mov
data16
cmp
adc
lods
xor
and
inc
mov
dec
mov
repz
adc
push
les
adc
pusha
les
mov
sub
pop
ret
fnstsw
inc
mov
das
in
jmp
nop
jecxz
xchg
pop
fsub
pop
ja
dec
in
sbb
roll
dec
fwait
outsb
das
lock
imul
inc
sbb
sub
sbb
inc
push
cmp
pop
sbb
jno
mov
iret
insl
cmp
daa
mov
inc
jecxz
cli
addr16
pushf
push
and
adc
cmpsb
jmp
push
mov
das
addr16
lds
dec
mov
mov
shrb
xlat
pop
inc
imul
in
cmpsb
xchg
mov
mov
int
call
xchg
test
shr
adc
and
sarb
clc
inc
shlb
test
out
sub
cmp
shll
pop
test
nop
outsl
xchg
test
push
push
addl
cmp
cmp
inc
sahf
xchg
divl
and
xchg
aas
cs
lahf
inc
gs
pusha
mov
bound
add
mov
cwtl
xchg
inc
aad
ss
arpl
mov
sub
xchg
popa
inc
call
sbb
nop
mov
pop
shrb
or
mov
repnz
push
stos
xorl
outsb
push
mov
repz
in
push
cmpsl
cwtl
push
leave
aad
ljmp
imul
roll
and
insl
fld
shl
mov
imul
add
stos
adc
lret
pop
xor
mov
adc
jmp
pop
in
leave
ljmp
ss
outsl
out
add
mov
and
mov
subl
sub
jne
inc
dec
add
and
sub
cmp
outsl
lea
push
xor
add
mov
insb
xchg
push
and
bound
stos
lahf
testl
add
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
scas
in
lods
fwait
ret
int
adc
push
jo
leave
adc
sbb
addb
jg
add
or
xchg
imul
push
dec
sub
cmpsl
mov
in
sbb
mov
push
inc
lock
xor
pop
inc
sbb
aad
xchg
sub
loopne
pusha
mov
mov
ss
cmovge
jge
mov
sub
cs
inc
sub
pop
imul
lret
test
popa
sub
dec
and
rorb
mov
dec
mov
xchg
mov
xchg
mov
or
mov
frstor
push
cmp
pop
xor
lret
adc
fcompl
shll
fimuls
mov
pop
dec
sub
scas
popa
sbb
xchg
mov
loopne
jo
fisttpl
mov
out
lret
adc
mov
add
jge
cmp
fcmovnbe
insb
dec
in
mov
je
aam
pop
cmc
mov
add
pop
or
and
call
mov
dec
cs
cltd
and
and
lahf
jbe
and
xor
xchg
mov
sub
sub
iret
popf
inc
mov
lods
jmp
sub
leave
or
pusha
test
inc
outsl
mov
scas
sbb
sbb
std
pop
add
in
movsl
mov
mov
sarb
adc
xor
jp
xchg
pop
rcll
jp
lcall
and
int
adc
mov
cmpsl
fdivrl
pop
adc
dec
out
xor
mov
je
outsb
xchg
xor
cmp
fistl
call
mov
cmp
ret
jmp
xchg
imul
adc
clc
lock
sub
inc
pop
sub
mov
sbb
lock
xor
pop
cmp
pop
xor
adc
mov
pop
ds
sub
xchg
stos
pop
mov
jae
jnp
flds
mov
push
int
sti
mov
and
inc
out
xlat
xor
scas
das
sahf
push
sub
xchg
pop
addr16
cltd
mov
mov
nop
enter
cmp
call
cltd
push
jl
sub
vpsubsb
sbb
dec
pop
xchg
out
mov
rclb
adcb
inc
xor
lea
push
into
ss
push
jo
adc
imull
adcb
in
icebp
dec
jp
sahf
push
mov
ss
jns
loope
sbb
int3
xor
mov
into
pop
cld
inc
cmp
add
fwait
sbb
jmp
mov
xor
cmpsb
cmpsb
sbb
ret
dec
push
in
dec
aad
outsb
adcl
sahf
xlat
sub
push
in
xor
cmpsl
mov
jmp
out
shlb
adc
pop
xor
rcl
inc
aaa
movsb
negb
jae
add
pop
lods
pop
fs
and
inc
mov
cmp
mov
mov
out
jl
lcall
cmp
mov
fdiv
call
xor
mov
push
xor
nop
lcall
sti
shr
lret
clc
or
ds
aam
sbb
push
lods
mov
rol
push
jne
fidivl
aaa
int
jae
outsl
adc
filds
cmp
inc
jno
pop
test
add
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
push
sub
mov
adc
push
loop
out
icebp
sub
pusha
add
xchg
shlb
cmpb
adc
adc
pop
dec
fwait
dec
stos
jnp
jp
pop
lods
push
js
adc
dec
lea
arpl
and
cmp
aas
push
add
outsl
mov
add
xor
and
mov
pop
stc
and
mov
cmp
repz
adc
push
dec
cmovns
outsl
jl
call
loopne
cmp
cmp
xor
ret
push
sub
ret
cmp
xchg
repz
daa
jae
rorl
and
dec
add
jbe
in
mov
or
pop
jo
inc
dec
add
insb
or
stc
fucomi
test
out
out
jb
push
or
mov
in
rorb
cmc
mov
dec
xchg
jns
xor
outsl
mov
xchg
fwait
push
mov
fbstp
push
std
out
nop
adc
sbb
push
xchg
in
sub
xchg
or
pop
test
enter
adc
pop
add
xchg
test
xchg
notl
and
mov
pop
or
jns
popa
cwtl
push
mov
in
sub
push
addr16
test
lds
mov
dec
mov
pop
adc
xor
ja
imul
decb
out
push
or
adc
lea
insl
xor
stos
les
leave
cli
push
js
jae
movsb
mov
cmc
inc
sub
popf
mov
pop
jnp
jb
fadds
add
sbb
push
push
imul
fisubl
lds
sahf
adc
mov
int
add
mov
into
dec
stos
std
std
pusha
test
mov
cltd
call
sbb
incb
lods
pop
loopne
mov
adc
ret
ja
jne
push
lahf
pop
mov
xchg
inc
sbb
stos
and
sub
xchg
ljmp
and
sub
jne
pop
movsl
in
cld
mov
jle
scas
popf
std
decl
mov
enter
aaa
movb
jb
mov
or
idivb
pop
adc
adc
test
and
sbb
es
imul
cmp
mov
mov
data16
adc
xor
das
add
xor
pop
push
jl
add
xchg
pop
xor
sub
xor
bound
testl
scas
push
cmpsb
adc
loop
pop
popf
xchg
or
sub
les
add
cmp
dec
into
cwtl
lods
loopne
mov
sbb
in
aas
mov
jge
mov
mov
stos
ret
aad
sub
sub
cmp
push
int3
sarl
push
adc
lretw
jge
jo
aaa
jg
pop
mov
test
jae
inc
add
in
testl
mov
pop
int3
xchg
jp
pop
in
andl
fists
nop
jecxz
fstpl
push
push
subb
xlat
inc
mov
jl
pop
mov
rolb
repz
jecxz
xor
in
js
inc
fwait
push
jno
mov
aad
mov
xlat
push
nop
cmpsl
cwtl
imul
adc
wrmsr
mov
pop
fidivs
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
aad
cmp
pop
mov
adc
adc
adc
inc
mov
xchg
cld
cmp
cmp
sub
push
jnp
or
dec
jge
sub
jmp
ficomps
xchg
jnp
nop
test
push
lods
shll
sbb
addl
movsb
fsubrs
sbb
insb
cli
mov
ficoml
or
enter
js
jmp
sbb
pop
or
dec
arpl
jb
jg
arpl
push
rolb
fdivr
rclb
xor
cmc
jne
inc
pop
sub
cmpsb
sub
push
add
negb
mov
inc
and
jmp
outsb
outsb
cmc
sti
and
mov
sbb
repz
inc
sbb
nop
jge
rcrl
mov
movsl
mov
xor
into
stos
scas
movsb
dec
jo
stc
or
push
movsl
sbb
cmp
cmpsl
popf
out
jb
stos
xchg
psraw
mov
fdivl
fwait
mov
and
xor
add
fstps
ja
cmp
scas
mov
ret
popa
popa
gs
jo
fcoml
stos
test
sub
cmp
dec
or
and
xor
jnp
xchg
mov
movb
cmpsb
lcall
xlat
cmp
mov
or
sub
pop
xor
es
pop
mov
sbb
xchg
xchg
adc
lds
loopne
dec
jo
add
stos
orb
pop
mov
push
in
add
mov
adc
mov
dec
hlt
lahf
lods
xor
or
test
xchg
neg
cmp
mov
mov
or
fisttpl
div
ret
shrl
push
xor
dec
mov
stos
outsl
outsb
dec
lret
call
mov
xchg
inc
fsubrp
rep
mov
and
test
in
sub
ret
out
jle
inc
inc
pop
clc
notb
push
cmp
or
fnstsw
inc
cwtl
sub
mov
inc
mov
mov
xchg
fildll
add
cwtl
dec
lcall
sub
ljmp
into
mov
or
inc
test
fmull
in
dec
add
arpl
cmp
or
adc
jge
clc
push
jp
pop
mov
pop
leave
inc
in
mov
dec
and
cmp
dec
shlb
je
or
stos
in
xcrypt-cfb
cmpsl
mov
leave
std
movsb
inc
and
outsl
adc
shrb
mov
outsl
lret
mov
jle
xchg
movsl
jg
pop
lret
aam
xlat
adc
and
repnz
jecxz
sbb
ds
push
dec
mov
nop
mov
popf
sub
negl
push
mov
inc
hlt
and
push
fwait
fs
sbb
jp
push
dec
inc
adc
add
mov
adc
lea
add
pop
rcl
jle
add
mov
shr
fists
mov
popf
popf
push
jmp
or
mov
inc
jnp
sub
mov
adc
into
adc
stos
add
icebp
sub
mov
rolb
jecxz
lret
push
in
or
xchg
imul
adc
pop
inc
pop
hlt
into
cmp
xor
sub
shll
int
out
mov
add
out
lcall
push
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
dec
pop
lods
shrl
adc
push
xor
lods
pop
xchg
in
aaa
fiaddl
out
es
pop
dec
fwait
test
cld
or
cmpsb
out
sar
lods
cli
dec
adc
lcall
sub
clc
out
mov
cmp
pusha
adc
mov
push
fcomip
pop
jbe
mov
cli
mov
adc
jb
scas
mov
icebp
aas
lcall
xor
aaa
loopne
dec
inc
cmpsl
insb
push
jb
jo
cmp
insl
ret
addb
cmp
inc
dec
xchg
xchg
mov
rorl
inc
test
fidivl
pushf
adc
dec
jl
mov
ja
dec
push
cmp
cmp
pop
fsubl
dec
sub
divb
cmp
pop
mov
mov
iret
imul
or
adc
lret
inc
shll
pop
fsubrs
or
and
aas
fs
jne
mov
sbb
lods
js
sbb
les
ds
cmp
xchg
test
cmp
dec
sbb
shll
jne
xlat
in
bound
in
in
rolb
vcvtsd2ss
aaa
mov
lds
movsl
sarl
adc
jbe
cmc
dec
or
inc
push
mov
push
daa
adc
lea
scas
add
cmc
clc
andl
inc
dec
mov
ja
icebp
sub
adc
push
mov
xchg
clc
xor
jp
jo
push
fcomi
add
pop
or
xchg
lods
inc
xchg
push
mov
hlt
push
push
dec
iret
mov
adc
cmp
and
out
mov
mov
jl
mov
xlat
pop
pushf
mov
cmc
and
add
or
xchg
or
cmp
lcall
test
aam
push
mov
or
roll
jge
lret
and
shll
dec
inc
pop
push
jb
cli
mov
dec
sbb
adc
mov
jl
js
ja
popf
lods
sub
into
dec
mov
out
dec
add
pop
and
adc
pop
aaa
divb
cmp
xor
mov
ja
mov
push
jp
xchg
outsl
adc
jmp
dec
xchg
sub
jecxz
add
or
pop
jl
xchg
pop
testb
jns
xchg
jbe
mov
dec
sbb
sbb
fdivp
aam
enter
jmp
mov
fwait
mov
rclb
dec
pop
aad
jp
jl
mov
push
mov
sbb
xor
adc
push
xchg
adc
les
jo
or
addr16
push
loop
mov
mov
aaa
sahf
xor
data16
out
sub
cld
jg
push
pop
inc
adc
in
es
aam
xor
sbb
inc
dec
cwtl
in
cmp
test
test
dec
cltd
outsb
adc
mov
mov
mov
add
mov
dec
xor
ss
and
aad
xlat
add
pushf
push
xor
test
mov
xor
and
pop
imul
xchg
cli
pop
or
lds
xlat
xchg
aad
jno
fdivl
mov
in
mov
mov
incb
sbb
outsb
lahf
inc
lods
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
xchg
fisttpll
je
adc
int
adc
filds
call
pop
inc
ret
or
sub
cli
aaa
sti
pop
add
popa
and
incb
mov
mov
or
aad
mov
mov
test
jnp
and
les
sbb
outsl
jae
cld
dec
in
test
push
dec
lahf
cmp
adc
fistl
loope
lds
jl
test
ljmp
push
add
xchg
movsb
in
lods
adc
stc
jno
out
aaa
mov
daa
pop
jnp
sbb
xchg
out
lcall
lret
ficoml
int
lock
lcall
cmpsb
outsl
fisubs
das
das
dec
jns
mov
inc
outsb
xchg
mov
repnz
test
insb
fists
pop
fidivrs
add
cwtl
inc
pop
data16
mov
aam
imul
call
cmpb
into
lcall
sub
cmp
not
test
push
fcoms
cltd
xchg
inc
adc
daa
pop
jecxz,pt
mov
scas
and
lret
out
jmp
cmc
xchg
cltd
movsl
lds
adc
push
jae
jp
adc
shlb
mov
leave
xor
pop
sysenter
mov
ds
add
int3
or
mov
insl
int3
addr16
inc
out
dec
aam
loopne
sahf
test
not
sbb
and
jb
add
pusha
jb
fwait
dec
insl
add
pushf
je
mov
lods
mov
insb
push
adc
insb
test
lcall
rcrb
jne
aas
ljmp
mov
or
shl
xor
cmp
aas
mov
roll
adc
je
popf
insb
jae
jne
lret
xor
shrl
cmp
daa
ds
scas
mov
sbb
sub
push
jg
mov
jne
and
ret
cltd
repnz
mov
maskmovq
testl
popf
scas
xchg
adc
jbe
fdivrs
aam
xchg
xor
jecxz
lahf
mov
xchg
and
scas
add
outsb
cmp
fldenv
jl
add
push
cmc
scas
or
pop
test
cmp
xchg
jns
lds
inc
add
scas
pop
cwtl
push
sbb
push
pop
sarb
and
pop
test
lea
addl
xchg
inc
jae
mov
inc
xor
shlb
push
popf
pop
add
push
movsw
jecxz
test
push
dec
iret
mov
sub
in
roll
pop
pop
push
jp
jns
out
or
mov
in
add
out
or
push
jnp,pn
mov
iret
xchg
movsl
inc
mov
push
lret
in
sbb
mov
dec
mov
adc
pop
push
lret
test
call
cmpsl
scas
loopne
call
jmp
popa
daa
adc
testb
push
in
ja
jns
mov
out
test
push
inc
push
rcrb
pop
sub
cmp
loopne
sub
pushl
stc
xchg
dec
and
mov
dec
out
jo
jg
rol
xor
mull
jb
push
int3
por
sub
sub
out
dec
sub
ret
sbb
popf
add
add
sbb
imul
inc
xchg
mov
xor
pop
arpl
cmp
mov
push
in
mov
and
xchg
xchg
cmc
imul
imul
fstl
push
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
repnz
sahf
adc
int
adc
dec
outsl
fcoml
jae
jbe
push
movsl
push
cmp
pmaxub
fidivs
iret
sub
mov
sar
mov
mov
push
mov
fsubrs
xor
push
std
sbb
dec
out
fldcw
decl
push
and
mov
and
cmp
dec
fcmovbe
dec
shlw
jb
adc
add
js
mov
jg
lcall
sbb
push
imul
jb
enter
pop
push
rclb
jae
pop
dec
push
adc
mov
pop
fs
fisttpl
mov
cmp
in
add
dec
cmpsb
push
in
test
pop
add
push
inc
jg
shlb
push
sar
add
mov
push
xchg
es
pop
dec
cmp
add
ss
test
in
insb
repz
into
in
add
adc
lods
cs
lds
add
shl
adc
cmp
mov
pop
bound
jmp
xlat
int
fisubrs
invlpg
add
ss
shlb
mov
and
fs
sti
mov
iret
dec
push
jo
pop
fnstsw
out
jge
int
add
xchg
sbb
scas
xor
inc
fiaddl
mov
sub
orl
push
sbb
push
pop
adc
mov
sbb
mov
cmp
xchg
sub
arpl
sub
or
int3
dec
loope
and
xor
inc
adc
outsl
adcb
jo
xchg
insl
push
test
enter
mov
xchg
push
push
sbb
adc
mov
repz
xchg
gs
xor
sub
arpl
add
cmpsb
je
xor
movsl
xchg
mov
icebp
adc
cs
pop
pop
sbb
adc
leave
or
test
loop
loopne
leave
dec
es
mov
iret
ljmp
mov
mov
shrl
cld
mov
sbb
fistps
repz
xsha256
cmpsb
shr
pop
xchg
mov
mov
and
adc
stc
lock
pop
inc
mov
loope
mov
pop
or
sbb
gs
and
cmpsb
xor
pop
add
insl
ja
pop
sub
dec
pop
aaa
push
cltd
stc
fdivrp
xor
mov
lea
stc
or
inc
sbb
cld
rcl
push
cmpsb
dec
xor
loope
mov
je
push
adc
and
xchg
into
into
mov
hlt
sbb
and
cli
cmp
inc
xchg
push
call
iret
daa
sahf
jecxz
cmpb
and
pop
pushf
adcb
push
jb
cmp
pop
inc
frstor
xlat
sarb
xchg
test
push
stos
in
ljmp
ret
pop
sub
fwait
inc
push
add
pop
lcall
mov
push
std
ret
subb
data16
xchg
xor
mov
cmpsb
adc
push
pop
add
mov
jns
lock
mov
enter
sbb
pop
add
ficomps
jge
in
popa
mov
dec
fcomps
test
dec
inc
mov
mov
sbb
push
out
mov
xchg
sub
int3
inc
loope
cmp
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
xlat
movsb
sti
xor
mov
sahf
xor
pop
jg
jb
arpl
lods
arpl
scas
cmp
daa
imul
outsl
xorb
mov
and
inc
add
pop
daa
cli
negb
adc
and
in
enter
push
lahf
inc
in
out
cltd
out
xchg
mov
mov
adc
popa
xchg
repz
scas
outsb
cmp
push
adc
stc
mov
xor
lcall
jecxz
outsb
std
scas
out
sub
test
shl
cmc
ljmp
pop
stos
pop
inc
jecxz
xor
pop
xor
repnz
dec
test
xchg
repz
push
aaa
mov
xor
jbe
pop
and
xchg
in
jecxz
xor
sahf
repz
mov
xlat
rclb
mov
cmp
push
mov
lock
add
xchg
xchg
mov
mov
daa
mov
mov
adcl
cmpsb
fisubl
cs
push
jecxz
lret
imul
push
or
jle
push
or
scas
insl
pop
or
jo,pn
shll
ret
mov
iret
repz
xchg
std
push
ud0
cmova
sarb
mov
inc
cs
adc
sti
push
lret
pop
jne
mov
shll
rolb
hlt
jmp
out
jo
in
call
fwait
mull
jmp
inc
pop
mov
in
and
xorl
adc
push
push
mov
jne
scas
decl
test
inc
mov
dec
notb
dec
rcr
inc
outsl
push
mov
movsl
jmp
fscale
adc
andb
out
inc
jmp
push
pop
adc
inc
xor
mov
repnz
or
or
dec
inc
pop
das
leave
add
icebp
xor
adc
cmp
dec
jp
mov
xor
cmpsb
jecxz
addr16
out
icebp
in
pop
dec
cmovp
pop
pop
sbb
pop
pop
hlt
inc
hlt
fucomip
inc
sbb
jb
fwait
shlb
lahf
or
dec
nop
sbb
cmp
sarl
leave
push
shll
icebp
mov
icebp
xchg
sarb
rdpmc
adc
enter
pop
dec
pop
andb
add
fmulp
fstps
sub
popa
pushf
adc
mov
subb
pop
inc
mov
add
orl
leave
cmpsb
fs
test
pop
sbb
adcb
movsl
push
das
mov
cmovl
leave
pusha
mov
adc
xchg
aad
rorl
xchg
xchg
push
push
mov
adc
mov
jno
xchg
filds
sub
loop
sub
shlb
sbb
sub
xor
das
or
cmp
dec
aaa
std
jne
push
ret
ret
mov
movsb
adc
testb
ror
pushf
int
lock
out
fadd
ret
lret
jo
out
fdivrs
jns
in
add
jae
out
jnp
cmp
push
push
js
xor
sbb
add
jae
cmpsl
and
mov
adc
pop
push
les
adc
sub
ss
sti
xor
lods
inc
std
inc
or
or
pop
ds
cmpsb
xchg
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
aam
lcall
adc
sahf
pop
fadd
repz
and
data16
lock
lea
lret
mov
andl
daa
ss
ret
push
dec
jbe
push
movsb
adc
cmpsb
out
sets
loopne
inc
les
icebp
mov
add
daa
bound
cwtl
aad
cmp
jmp
dec
pop
cmp
inc
push
push
orl
xchg
subb
jns
out
jmp
stos
mov
cwtl
ret
or
add
mov
pop
das
rclb
fstl
mov
stos
mov
outsb
pop
and
jp
in
push
inc
cld
lcall
mov
mov
dec
push
and
mov
mov
lds
stc
addr16
das
xlat
mov
cmp
test
sub
jae
sub
jo
cmp
mov
push
imul
clc
mov
or
call
gs
cltd
sarb
ror
add
les
pop
jl
push
pop
test
scas
lret
les
and
pop
push
and
push
xor
add
enter
inc
ljmp
mov
repnz
adc
daa
xchg
mov
fldl
cmp
mov
pushf
pushf
in
push
dec
inc
fsubr
nop
cld
sub
shll
push
nopl
add
and
jecxz
or
imul
cmp
mov
or
mov
dec
dec
aas
push
repz
stc
imul
stc
scas
sbb
in
push
jl
cmp
repz
jno
insl
push
and
pop
loope
sbb
adc
xchg
in
ret
sbb
xor
stc
inc
aam
add
jmp
dec
and
loopne
addr16
rcl
jb
push
add
mov
scas
jb
ret
repnz
and
lret
jae
push
mov
add
mov
ret
cld
mov
xchg
push
jg
jnp
mov
imul
int
shl
sbb
pop
jbe
negb
test
push
jge
std
cmp
arpl
adc
sbb
ret
rcrl
ljmp
mov
popa
iret
xor
xchg
test
push
out
add
negb
push
bound
lock
sbb
pop
insl
stc
mov
xor
push
cwtl
sahf
jl
pop
push
iret
repnz
lret
shll
stos
je
add
push
pop
popa
fsubs
stos
cli
mov
mov
xchg
std
xchg
add
push
sbb
sub
dec
mov
sbb
into
outsl
push
xchg
daa
inc
es
rcrb
fcmove
lcall
shll
or
clc
ret
cmp
es
sbb
xor
leave
movb
mov
jb
sahf
xchg
xchg
imul
inc
sbb
jae
push
jg
xchg
push
sub
push
pusha
xor
cltd
xorb
push
pop
cmc
mov
dec
int
or
popa
mov
xlat
pop
repnz
int3
xchg
push
lods
add
adc
pop
shl
push
sub
repz
pop
outsl
pop
shrl
es
addr16
xchg
scas
push
aaa
cli
mov
imul
xchg
scas
push
sbb
ss
lahf
mov
iret
shll
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
shrl
int
adc
mov
lock
idivl
in
clc
push
mov
ja
insb
and
mov
sbb
aas
decl
arpl
pushl
lea
sub
cs
add
mov
xchg
dec
andb
std
mov
mov
adc
pop
iret
pop
and
or
mov
cs
and
cmp
leave
push
lods
fsub
addr16
dec
je
xorl
lods
adc
push
cmp
cmp
ret
xchg
mov
ja
mov
push
xchg
mov
dec
xchg
inc
jmp
sbb
insl
pusha
push
pop
xchg
pop
sti
aaa
or
adc
lods
push
pop
outsl
push
mulb
sti
outsb
int
std
mov
aas
imul
cld
push
jne
rcrl
sbb
dec
aad
daa
loope
mov
lahf
xor
xchg
icebp
jl
les
je
lea
dec
loope
xchg
jl
stc
fildl
test
icebp
or
push
iret
add
adc
mov
decl
hlt
pop
push
xchg
jp
lods
pop
daa
mov
xchg
push
mov
cmp
cmp
movsb
sahf
sbb
sbb
pop
aas
sub
jne
es
sbb
xorb
xchg
push
fisubl
ror
add
adc
fcom
inc
dec
cwtd
mov
xchg
loope
in
aaa
jle
sub
rolb
mov
stos
ret
xchg
addb
cmp
lret
aad
push
out
xchg
mov
lcall
sbb
jecxz
xchg
xchg
dec
testb
scas
arpl
mulb
push
jbe
aaa
repnz
jno
in
sbb
out
sbb
or
sti
in
int3
arpl
sahf
mov
mov
unpckhps
mov
adc
mov
jnp
mov
call
push
push
sbb
bound
loop
int3
mov
xchg
xchg
shr
jo
scas
mov
sub
mov
pop
leave
sbb
cmp
add
push
xchg
jo
mov
cmpsl
mov
cmp
out
inc
movsb
add
push
lods
and
jns
sub
rolb
lahf
xor
js
pop
mov
std
push
imul
negl
mov
das
in
lret
cs
rorb
sahf
sub
xchg
and
add
jge
ret
or
pop
pop
shlb
scas
jno
adc
popf
andl
sub
jnp
std
and
lret
inc
xchg
je
and
shl
test
sbb
repnz
cmpb
push
inc
out
shrb
cwtl
adc
jb
fisubrl
pop
out
mov
fucom
insl
cmp
inc
lods
sub
xor
mov
cmp
cld
or
jl
dec
mov
inc
cmp
inc
cmp
mov
scas
lea
in
arpl
or
adc
ss
and
mov
lods
push
dec
out
xchg
orb
and
adc
pop
dec
ja
and
mov
addb
mov
jl
pop
mov
insb
rep
mov
fdivs
leave
cmpsb
or
sbb
xor
je
mov
lahf
rolb
fmull
xchg
sub
sti
adc
cld
mov
mov
xchg
cmp
and
mov
add
add
ds
aad
sbb
fsubs
pop
push
push
loopne
dec
movd
sbb
mov
aam
loopne
push
ljmp
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
mov
sub
jl
adc
adc
adc
out
push
inc
push
inc
pushf
fdiv
or
fcmovb
and
mov
rorl
shl
xor
jp
cmc
sub
cli
cmc
xchg
cmp
adc
stc
int
inc
loope
aaa
xchg
xor
inc
lock
xor
xchg
roll
mov
push
dec
add
jmp
dec
and
jle
mov
or
gs
mov
inc
jge
cltd
lds
outsb
in
iret
cli
dec
xchg
imul
sub
pop
movsl
xor
in
aad
cmp
adc
sti
scas
daa
jg
addr16
sbb
push
lahf
add
std
fwait
adc
xor
lret
lock
pop
push
daa
fldl
jge
popf
jb
push
js
adc
mov
jmp
xchg
or
mov
lahf
test
mov
mov
add
movsb
xor
sti
ret
icebp
cmp
gs
jae
daa
scas
movsl
fistps
stos
xor
ljmp
ljmp
or
jle
sbb
sub
sub
scas
sbb
dec
andl
lret
push
notb
sbb
in
fsubrs
add
add
and
lret
fbstp
push
imul
and
add
std
cmp
jae
push
and
mov
mov
addl
andl
pop
or
pop
pop
and
pop
insb
and
mov
lock
stos
in
gs
ficomps
inc
pop
adc
or
or
shll
popa
int
sarb
loop
incb
dec
dec
jns
out
shrb
pop
imul
out
add
rcrb
mov
fnstenv
shrl
add
stos
push
lds
packuswb
repnz
imul
add
and
adc
mov
jl
in
mov
mov
push
pushf
mov
pusha
ds
and
icebp
int
das
mov
dec
jge
jne
xchg
jecxz
or
bound
add
mov
jmp
fwait
mov
orl
loop
adcl
mov
sbb
dec
sub
lahf
lods
setne
aaa
test
xchg
insl
sbb
pop
sub
xor
insb
dec
xchg
int3
xchg
aas
sub
mov
rclb
lea
sbb
fs
mov
in
xchg
daa
jl
xor
into
negb
push
push
jne
dec
jae
and
sub
cmc
scas
mov
sub
loopne
sahf
mov
mov
cmp
testl
cmp
cmpsl
or
cmpsb
testb
dec
fidivs
sbb
andb
pop
cmp
push
adc
sub
pop
popa
push
jge
frstor
cld
sub
xchg
push
test
out
pusha
xor
sbb
fsubrl
pop
lods
aam
clc
mov
mov
jg
sbb
outsb
insb
dec
mov
xor
push
ret
sbb
xchg
in
lea
inc
add
cmc
lds
xchg
pop
dec
xchg
je
cmpsl
scas
xchg
setg
call
xor
adc
aas
fs
outsl
aaa
push
call
add
lret
push
mov
ljmp
in
push
ss
dec
addr16
fistps
out
aam
xlat
rorb
pushl
push
push
call
mov
jmp
xor
sbb
stos
sbb
jle
je
adc
adc
adc
leave
jmp
lcall
sub
dec
push
sbb
xchg
movlps
pop
xchg
mov
cmp
inc
arpl
mov
lcall
bound
out
push
lret
test
mov
or
lods
mov
lds
icebp
repz
ficoml
mov
sahf
fistps
fstpl
pusha
and
push
fstpt
aas
jnp
aas
pop
lods
inc
enter
je
daa
sbb
mov
add
adc
fsubl
adc
testl
jge
sub
cmp
xor
in
pop
les
dec
sub
or
pop
arpl
xchg
stos
icebp
mov
xchg
and
into
jmp
out
ljmp
ss
adc
lcall
xor
out
and
cmp
mov
imul
int3
adc
or
jle
push
leave
mov
adc
arpl
pop
sbb
jmp
cmp
xchg
xchg
call
loope
stos
sbb
mov
adc
test
lea
cmpsl
and
mov
xor
jmp
int3
testl
xchg
aad
and
mov
pop
adc
mov
or
pushl
lock
scas
movsb
adc
xchg
add
or
ds
inc
aad
sbb
aas
jp
sub
sar
inc
pop
jnp
lret
pop
aam
mov
mov
cmp
and
notl
mov
adc
fldcw
inc
xchg
call
cmp
in
div
mov
xchg
shll
outsl
addb
dec
xchg
add
push
les
lods
sbb
pop
or
aad
inc
lds
fisttps
pushf
into
or
sub
insb
adc
pop
add
push
pusha
xchg
loop
mov
shrl
mov
das
test
flds
sub
test
sti
cmp
shrl
pop
push
imul
mov
mov
sbb
sarb
stos
sar
ret
xor
shrl
jp
add
lods
inc
jle
cmc
gs
sub
jmp
sub
add
jge
mov
cs
mov
adc
scas
sbb
sbb
iret
mov
jmp
dec
push
cmp
or
stos
in
das
outsl
mov
sbb
sbb
cld
adc
call
pop
shl
cmp
adc
inc
xor
roll
in
pop
lods
dec
ret
push
clc
mov
mov
pop
nop
fmulp
mov
xchg
mov
aas
hlt
fcoml
fcmovb
fsts
cmp
xchg
test
dec
mov
cmp
shll
imul
movsl
mov
iret
cmp
into
sub
jmp
mov
pop
mov
pop
sbb
sub
push
jae
pop
pop
ja
xor
push
rolb
out
pusha
or
pop
cmpsl
sub
sbb
push
dec
pop
mov
lock
push
pop
lcall
xchg
sub
rcr
aas
push
fwait
push
lock
jge
adc
cli
or
fs
stos
xor
sub
hlt
push
lods
cmp
inc
jb,pn
fs
loopne
jle
pop
mov
fwait
std
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
mov
ss
jno
adc
int
adc
pusha
cmpsl
mov
jmp
pop
mov
icebp
add
add
mov
rcll
add
pop
jmp
cmpsl
mov
movsl
pop
and
xor
je
push
inc
rcl
out
dec
ret
mov
ds
or
aas
add
out
jbe
dec
cwtl
je
push
sbb
jmp
mov
cmp
roll
lcall
mov
cmc
hlt
out
or
les
adc
sbb
jnp
std
mov
push
inc
test
orb
or
adc
leave
lcall
sbb
adc
icebp
push
lods
sbb
pusha
popa
pop
aas
pop
loopne
repz
dec
push
inc
stos
cmp
pop
fiaddl
or
rorb
loopne
fwait
jo
inc
and
cmp
lods
xchg
xchg
mov
popf
arpl
je
lods
dec
sti
shlb
inc
clc
mov
daa
mov
fwait
jb
orl
loope
push
les
cltd
pop
adc
fwait
xor
jb
push
popa
adc
fstpl
push
jl
lock
fistpll
jmp
aas
add
jp
in
stos
faddl
cli
lcall
insb
jmp
aad
adc
out
pop
jg
aam
mov
mov
rorb
jo
xchg
push
mov
ret
loope
and
pop
add
ds
push
pop
mov
ret
add
jb
add
xor
dec
jge
rol
sub
inc
je
jecxz
push
jmp
fsubl
cltd
cmpsb
std
into
mov
popa
sub
push
mov
ret
mov
insl
inc
sub
sbb
inc
rol
pop
popa
push
stc
jnp
cmc
and
push
ljmp
mov
or
pop
sahf
out
adc
insl
jne
test
mov
inc
pusha
leave
mov
int3
push
inc
sub
popa
dec
in
jl
sbb
adc
pop
mov
push
xchg
arpl
pop
inc
mov
jp
adcb
test
cmp
je
fwait
mov
mov
mov
dec
leave
fsts
jecxz
and
mov
int3
popa
cmp
arpl
inc
xchg
clc
jb
cs
rol
out
dec
push
push
enter
in
test
movsl
daa
cmp
imul
lock
or
test
inc
dec
xchg
ret
ret
jne
aam
cld
mov
cli
inc
leave
sbb
xor
std
lock
lock
jbe
xor
xchg
adc
sub
dec
cmp
mov
inc
jle
popf
aaa
popa
and
incl
scas
mov
lock
mov
push
jns
cmp
mov
js
imul
adc
jo
sbb
rcr
adc
inc
mov
cli
mov
mov
in
cs
popa
mov
cltd
pop
inc
insl
xor
repnz
dec
ficoml
jbe
cmp
adc
ds
or
iret
rcll
das
mov
lahf
cltd
xor
stos
mov
or
pop
jge
test
scas
cmc
sbb
std
decb
sarl
ds
test
inc
dec
or
pop
push
ret
adc
arpl
out
divb
arpl
sub
dec
mov
ffree
fisttpll
pop
sub
pushf
sahf
sub
push
cwtl
cmp
clc
mov
lock
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
xorl
adc
scas
pop
stos
loopne
int
push
popf
and
xor
push
adc
clc
clc
sbb
in
inc
push
rcrb
mov
addb
dec
orl
cmp
xchg
mov
fs
push
sahf
xchg
sub
adc
shrl
imul
scas
aas
sbb
scas
cmpsl
mov
add
push
or
pop
adc
sub
xor
dec
sahf
nop
xchg
test
js
mov
andb
mov
ja
push
mov
jnp
ja
push
cmc
in
insb
sbb
or
sub
cld
sbb
cmp
imul
cli
push
out
ja
push
mov
jne
jp
dec
xchg
jge
aaa
mov
push
and
aam
movsl
pop
int
push
push
xor
shll
stc
jnp
mov
pushf
ret
movsl
rolb
aaa
mov
and
rcl
push
cmp
mov
dec
lahf
lret
lods
movsl
popa
pop
adc
pop
ret
jle
mov
fcmovu
or
popf
idivl
jo
data16
mov
and
sarb
repz
jbe
das
inc
push
ret
cmpsl
add
repz
pushf
mov
and
int
repnz
xchg
push
loopne
pop
ljmp
clc
stos
loop
roll
jg
dec
sub
cmp
mov
xor
pop
push
push
sbb
mov
jle
dec
mov
pop
addl
mov
stc
push
loopne
dec
stos
mov
pop
lret
add
arpl
imul
push
ds
xor
or
loopne
xor
sbb
sub
xorl
push
xor
aad
testb
pop
push
jp
xor
jmp
and
xchg
call
addr16
mov
and
cmp
sti
xchg
cmp
out
clc
lea
test
fsubrs
stos
inc
cmc
mov
xchg
ds
out
fwait
sbb
mov
sarb
add
jmp
mov
sbb
jno
pop
add
scas
mov
sbb
cmpsb
lahf
inc
mov
inc
fcompl
leave
imul
or
loopne
jne
add
jne
sbb
in
lds
and
aam
iret
stc
xchg
ror
mov
iret
cmpsl
add
fsubrp
movsl
xchg
push
or
aas
outsl
pop
pushf
jae
jns
inc
xchg
idiv
inc
in
test
inc
push
mov
inc
xchg
mov
sarl
mov
ret
mov
add
mov
mov
scas
insl
lds
mov
sarb
fptan
fwait
into
dec
pop
je
sbb
dec
mov
mov
ja
adc
pop
lods
push
ret
jp
cmc
push
inc
hlt
sub
jle
aam
test
dec
enter
add
gs
dec
cld
bound
add
jo
cmp
push
scas
xchg
mov
push
mov
lahf
test
xor
aas
shll
iret
push
inc
or
aam
repz
mov
mov
fwait
shl
insb
push
lods
xor
xor
repz
outsl
insl
imul
out
cs
int
mov
mov
and
jnp
jae
add
push
dec
dec
in
shld
inc
fists
fdivl
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
xchg
xchg
js
bound
adc
adc
or
jns
adc
mov
xchg
inc
pop
xchg
mov
xchg
xchg
je
xor
scas
je
dec
mov
mov
push
pop
out
imul
push
mov
inc
ja
pop
add
loope
cli
andl
or
jbe
sbb
pop
cmpsl
push
sarl
and
mov
xchg
adc
jnp
push
add
mov
imul
arpl
hlt
mov
rcrb
aas
pushf
pop
mov
jle
push
sahf
adcb
jo
jbe
shl
pop
test
jge
rorb
adc
cs
mov
pop
adc
imul
adc
xchg
mov
dec
jl
shrb
cld
fisttpl
addl
popa
insb
in
cmp
movsb
in
mov
fcoml
jp
mov
popf
mov
sarb
and
ljmp
mov
push
pop
inc
std
in
xor
nop
sub
and
fildll
imul
stc
cli
scas
daa
hlt
pop
shll
call
inc
push
xchg
mov
daa
fiadds
mov
arpl
in
mov
inc
mov
lods
push
mov
cmp
jmp
movsl
ds
cmp
int3
cltd
xlat
mov
inc
in
pop
mov
inc
xchg
mov
daa
bound
out
fcmovnbe
mul
insb
inc
or
imul
movsb
data16
sbb
js
push
xchg
bound
and
push
xchg
and
out
adc
jae
mov
and
int3
lods
pop
daa
jo
cmpsl
fdivs
sbb
dec
sbb
mov
and
fbld
jg
inc
pop
pop
out
movsb
out
inc
es
push
into
inc
loopne
jge
mov
popa
test
leave
xchg
mov
mov
fimull
cmc
roll
cltd
aad
lods
mov
jmp
inc
add
loop
rcrl
sub
pop
das
mov
andl
incl
cmpsb
int
push
cmc
inc
push
adc
adc
out
fistps
pop
sti
cmovns
cmc
xor
sub
xchg
scas
jp
fimuls
out
imul
je
xor
lahf
inc
adc
arpl
mov
movb
scas
ror
or
push
inc
push
leave
sbb
mov
aam
mov
icebp
lahf
sti
cmp
pop
jns
mov
testb
cli
ljmp
mov
sbb
pusha
jno
mov
outsl
push
mov
xor
outsb
stos
int
stos
sbbl
mov
dec
pusha
subb
or
pop
pmulhuw
sub
inc
mov
roll
bnd
into
test
stos
cld
push
iret
sbb
or
mov
cltd
fistl
push
cmp
hlt
test
lock
sbb
enter
mov
inc
gs
cmp
movsl
int
pop
mov
cmp
jge
pop
cld
add
lock
cld
out
cwtl
inc
shll
dec
sub
adc
imul
inc
dec
fidivl
sub
add
adc
xchg
sbb
out
inc
adc
leave
mov
fcomp
inc
loope
cld
sub
jl
shll
push
fmuls
pandn
pusha
in
add
jecxz
pop
popf
pop
xor
xor
vmread
into
jg
testb
test
jae
mov
popa
test
int
xchg
movsb
cmp
popa
push
das
mov
cld
and
fidivl
or
stos
mov
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
gs
adc
xor
adc
and
sbb
jb
insl
cs
je
cmp
ficoms
or
jecxz
orb
aam
mov
pusha
lock
inc
mov
xor
pop
jmp
aaa
jle
jo
lret
mov
jno
pusha
fistpll
aad
push
jae
ss
shll
sti
mov
das
pop
subb
inc
sbb
mov
or
pop
jb
sbb
rclb
rcl
dec
or
mov
test
leave
cmp
xor
dec
aaa
nop
mov
mov
stos
outsl
movsl
cmp
sbb
mov
popa
das
rol
push
sub
pop
adc
lods
nop
cmp
outsb
or
fcmovnb
lret
aas
movsl
mov
mov
in
es
jb
lock
lahf
orb
mov
shll
inc
mov
out
or
mov
les
sbb
leave
mov
out
push
cmpsl
fs
push
movsb
test
loope
lahf
push
mov
lods
into
jno
mov
jns
cmpsb
sbb
mov
or
jns
xchg
push
out
xlat
mov
mov
js
rolb
enter
or
iret
and
xchg
inc
inc
mov
test
mov
mov
sub
and
or
and
data16
leave
push
into
movsb
andl
and
mov
mov
call
or
std
ds
adc
jbe
pop
xchg
lods
pop
ss
jne
mov
mov
lret
mov
sbb
xchg
sbb
pop
cwtl
rol
sbb
mov
xchg
sub
repnz
addr16
sbb
add
xor
sub
xchg
or
xor
mov
sbb
inc
push
fildll
das
mov
inc
gs
xor
call
inc
add
mov
dec
addl
mov
add
push
mov
pop
rorb
cmp
and
scas
insl
pop
stc
lea
cmpsb
xor
outsl
mov
out
jecxz
movsl
shll
or
pop
leave
cmp
out
push
leave
mov
mov
xor
pop
or
or
and
adc
cmp
out
cli
fisttps
loop
clc
dec
cli
inc
mov
nop
loope
cmpb
ret
popf
mov
std
into
mov
add
int
fistl
cmp
mov
jg
popa
test
and
mov
and
mov
mov
sbb
add
xchg
sub
jnp
adc
inc
mov
in
pop
test
stos
dec
sbb
adc
push
leave
add
pop
xchg
stos
sbb
cmp
aad
imul
fisttps
jge
or
cmpsl
mov
stos
mov
xchg
shll
and
mov
xchg
test
or
and
les
shlb
sub
push
clc
scas
popf
inc
push
and
mov
dec
iret
push
test
add
in
jmp
out
sbb
test
mov
addr16
aaa
cltd
addr16
lock
das
int3
ljmp
cli
mov
je
mov
ror
cltd
xchg
sbb
int3
pop
aam
jle
mov
mov
dec
mov
jnp
pop
movsb
repz
sub
test
inc
orb
icebp
sbb
mov
cmpsl
mov
cmp
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
push
or
adc
adc
adc
push
push
ljmp
inc
in
push
rol
pop
cmc
es
leave
mov
mov
loope
xchg
sbb
inc
xchg
loop
out
gs
mov
cmpsb
jne
jb
sti
xchg
cwtl
mov
loopne
mov
test
or
ljmp
sub
inc
shll
or
sub
cmp
inc
int3
lea
out
cmpps
dec
out
rcrb
push
je
mov
jo
enter
pop
mov
jge
aad
jecxz
pop
cmpsb
enter
add
out
jp
push
dec
jp
iret
xlat
je
cmp
pop
jb
cwtl
movsb
test
jno
mov
push
int
pusha
sub
inc
jl
xchg
sbbb
adc
popf
addr16
cs
movsl
push
mov
fdivrl
dec
add
insl
gs
les
test
leave
sbb
inc
imul
pop
int3
cmp
dec
fxtract
shlb
fiadds
mov
aas
daa
clc
xorl
cmp
xor
bound
and
outsl
adc
xchg
call
cmp
jb
lret
add
loope
je
xchg
aam
push
out
das
lret
inc
or
pop
xchg
or
mov
scas
pop
in
add
daa
mov
adc
repz
ds
and
jb
adc
push
mov
icebp
add
fisubs
xchg
icebp
mov
jnp
mov
cmc
rclb
cmp
mov
test
xchg
mov
mov
clc
fsts
das
out
xchg
int3
xor
sub
sbb
hlt
push
jne
jecxz
loopne
mov
sahf
mov
lods
or
dec
xor
push
andl
stc
dec
cmp
popf
sub
dec
and
aad
mov
dec
xor
add
scas
adc
jb
jmp
xchg
jge
jnp
push
push
aam
push
aaa
mov
add
mov
adc
pop
xchg
hlt
lahf
call
adc
add
add
loop
and
mov
lcall
sbb
push
hlt
dec
jge
lret
cmp
jae
mov
cmp
rolb
xchg
stc
and
pop
mov
xchg
jnp
test
mov
inc
and
mov
xor
rclb
push
test
lea
aam
xchg
sub
out
cwtl
push
hlt
mov
cs
push
pop
mov
dec
pushl
sbb
shlb
daa
popa
outsl
jecxz
xchg
pushf
push
pop
test
add
mov
push
loop
sub
sub
and
xchg
add
push
stc
jae
iret
add
stos
cmc
xchg
movl
sbb
add
mov
adc
dec
inc
outsb
movsl
xor
xchg
cs
sbb
cld
scas
loopne
add
inc
stc
movsb
adc
pop
and
out
out
pop
pop
repnz
aaa
xchg
xchg
add
jl
cmc
aam
cmp
lahf
aad
in
stos
mov
jle
shl
ds
lcall
inc
sti
push
nop
inc
push
aas
movsb
les
mov
and
lea
stos
insl
aas
mov
sub
or
sub
xor
dec
dec
and
mov
jnp
dec
idivb
lahf
mov
cld
pop
inc
mov
fs
mov
cmp
inc
sbb
mov
adc
push
loop
shrl
and
pop
movw
mov
aas
sahf
stc
stos
dec
xchg
rcrb
sub
cmp
mov
sarb
lock
add
push
dec
push
xlat
icebp
pop
out
jns
push
jl
int3
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
xchg
inc
stos
inc
dec
adc
xor
adc
pop
xlat
outsb
sbb
dec
cmp
mov
popa
bnd
fwait
sar
js
dec
jle
jmp
cs
push
mov
orl
leave
sbb
out
lods
sbb
adc
icebp
pop
icebp
imul
push
sbb
outsb
and
nop
xchg
inc
call
shll
movsb
adc
xchg
or
pop
sbb
sbbl
stc
dec
ds
and
lea
adc
pop
adc
adc
fmull
sub
inc
jecxz
negb
inc
inc
loop
fidivs
xchg
pop
sbb
sub
jg
fidivrl
mov
ficoms
push
xor
adc
fimull
cli
xchg
xor
xor
cmc
push
inc
loope
and
jmp
push
add
lret
push
dec
js
rcpps
sub
out
insb
xchg
enter
imul
dec
mov
push
cwtl
or
xor
rcrb
dec
dec
inc
add
insl
es
ss
cmp
jae
mov
pop
adcb
push
xchg
push
adc
cli
mov
push
test
sbb
in
and
scas
xchg
imul
sub
cs
pop
lods
iret
daa
mov
test
jb
inc
add
or
mov
scas
cmp
ss
sbb
and
and
pop
sahf
or
sarl
ds
hlt
mov
cmpsl
mov
movsb
popf
xchg
mov
push
sub
add
repz
push
jp
das
pushf
push
and
adc
shlb
sbb
and
and
add
push
rdmsr
pop
pop
mov
sbb
add
xchg
xchg
push
leave
mov
jno
cltd
aas
fdivr
loopne
aam
cli
cmpb
or
popf
fstps
shrb
dec
in
aaa
cmp
and
jnp
mov
loopne
cmp
cmp
pop
pop
mov
mov
lahf
arpl
fcmovu
es
mov
jbe
adcl
inc
mov
ja
ret
scas
sbb
fstps
and
push
les
mov
xchg
xlat
subl
clc
mov
int
sar
jbe
mov
lds
mov
dec
sub
imul
cmp
test
inc
and
xchg
cltd
jno
mulb
pop
xlat
pop
cs
pop
std
sbb
stc
test
push
push
push
pop
in
shll
add
jge
aaa
pusha
push
sub
cmpsl
jl
push
je
cmp
insl
fs
xchg
clc
mov
stos
lret
test
dec
jns
push
lock
sbb
cmp
mov
jno
pop
and
sbb
adc
dec
mov
lods
add
mov
lock
aad
and
adc
js
imul
cmp
sbb
jge
clc
int
jno
dec
in
imul
fldt
mov
stos
fcmovne
pop
arpl
ret
repz
loopne
add
jno
xchg
popa
arpl
pop
xchg
pop
cltd
arpl
in
fs
push
sub
aas
sbb
jns
pop
cmp
cli
fwait
lcall
into
mov
and
insb
cwtl
xlat
repz
adc
bound
xchg
and
imul
stos
cmpsl
jbe
mov
or
adc
mov
xchg
enter
clc
fnstsw
clc
push
mov
or
orb
movsb
shlb
cli
xor
je
aas
cmpsb
outsb
into
fcomip
add
inc
cwtl
jae
dec
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
adc
mov
fldcw
or
jmp
scas
xchg
mov
pop
imul
popa
push
dec
lods
pop
adc
inc
push
mov
iret
pusha
push
or
sbb
hlt
stc
out
out
cmp
sbb
cmp
fimuls
push
mov
or
mull
jge
lea
push
dec
xor
push
pop
push
js
jge
int3
jp
test
shl
int3
movsb
movsl
jns
in
test
es
push
xchg
aam
add
or
jp
gs
js
mov
decb
scas
aad
pushl
mov
jne
rcrl
jg
pop
scas
mov
sbb
inc
outsl
unpcklps
pop
add
fimull
loop
jmp
sub
pop
stc
cmpb
mov
ja
jb
sub
adc
ret
fnstsw
dec
jae
je
dec
lret
dec
mov
xlat
pop
repz
movsl
jb
mov
cmp
pop
stc
mov
xchg
inc
xchg
clc
jg
xchg
lcall
push
test
add
ret
fcmovu
mov
jnp
or
pop
cmpsb
js
lea
xchg
pop
add
jne
push
add
cmp
mov
enter
xchg
push
fbld
jbe
cmp
jmp
push
and
push
into
addr16
xchg
loope
test
cmp
inc
insl
dec
mov
xchg
mov
cmp
jb
rcl
loopne
jo
mov
fdivl
out
xor
push
in
push
and
xor
daa
in
xlat
cmpb
lret
push
xor
push
fs
pop
xor
test
sbb
mov
insb
clc
xor
insl
mov
and
dec
repz
adc
jo
xchg
jmp
ret
jns
mov
add
lret
mov
imulb
mov
pop
inc
data16
cli
or
call
lock
fs
aam
les
mov
jmp
xor
ds
mov
xor
dec
stos
add
push
sbb
loopne
insb
cmp
psrld
pop
test
cmp
jecxz
or
subl
call
add
int3
xor
lahf
xchg
dec
movsb
mov
pop
xchg
out
mov
and
test
loopne
xchg
out
aam
pop
inc
mov
push
aam
faddl
es
push
xchg
pushf
test
cmp
adcb
cmp
cmp
popf
mov
xor
cmp
mov
loope
es
aaa
or
jg
scas
loopne
in
nop
jl
push
test
fisubrs
mov
or
xor
sbb
sub
or
cmpb
mov
or
ss
orl
dec
pushf
mov
push
jp
push
xchg
iret
frstor
ret
adc
in
add
mov
adc
and
push
orl
xchg
test
push
aad
gs
mov
lea
sub
les
mov
test
das
popa
lret
icebp
xchg
or
push
cld
lea
jne
dec
adc
mov
cli
jnp
sub
pushl
adc
mov
pop
popa
pop
mov
cs
push
lcall
popf
cmc
push
pushf
xchg
push
in
mov
imul
xchg
cmc
clc
repz
cwtl
into
mov
imull
dec
cmp
test
jb
pop
sub
inc
mov
daa
sbb
jge
and
xor
pushf
and
push
and
jg
loopne
mov
rcrl
divl
lods
mov
fucomp
xor
scas
movsl
jl
mov
out
outsl
push
adc
push
call
shll
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
jbe
jnp
adc
xor
adc
dec
inc
mov
add
stos
push
push
mov
mov
cmp
setbe
jne
sbb
rcrl
and
jno
jbe
add
adc
shrb
sub
lea
cmp
dec
xchg
jnp
mov
clc
mov
inc
loopne
jg
nop
lods
add
xchg
testl
addr16
jmp
insb
or
push
call
lret
jecxz
and
and
movl
call
mov
subb
sbb
aam
jmp
shrb
arpl
pop
mov
cs
pop
shlb
push
mov
jge
mov
mov
xor
jge
jb
fbstp
pop
mov
cmpsl
sti
stos
into
jbe
sbb
or
xor
and
and
push
enter
ljmp
vmulss
push
outsb
leave
sub
push
das
mov
xchg
pop
fsubrl
xor
xchg
pop
fnstcw
push
cltd
pop
sbb
pop
call
int3
dec
arpl
or
inc
pop
stc
in
mov
or
pop
popa
adc
rclb
jg
mov
repnz
rol
fisttpl
in
push
adc
dec
jecxz
add
xor
mov
xor
xchg
cltd
mov
or
mov
stos
sbb
push
push
out
jmp
scas
xchg
xchg
rcr
lods
aaa
lahf
inc
push
fs
js
mov
mov
aaa
mov
ficoml
add
pop
dec
sti
push
les
cwtl
out
loop,pn
sbb
sbb
mov
pop
or
add
test
dec
lret
mov
mov
and
cmp
fsubl
cs
xor
inc
mov
jp
shrl
outsb
test
dec
push
mov
pop
bound
popa
sti
in
subps
gs
cmc
cltd
dec
push
pop
cmpsb
xor
lock
sarl
mov
popa
lret
cmp
pop
add
pop
cmp
inc
and
fst
lods
orb
mov
mov
bound
xchg
jnp
adc
pusha
pop
and
dec
adc
sub
ret
sub
jb
and
clc
bound
and
test
or
and
leave
out
cltd
ja
in
xchg
and
cmp
cmp
sbb
add
cmp
cmp
shlb
bound
movsb
adc
push
loopne
push
push
jb
call
cmp
cmp
push
leave
xchg
or
sub
push
mov
and
mov
imul
add
out
subl
ds
fwait
sub
sub
lcall
scas
rcrb
ja
lea
dec
mov
xor
adc
and
and
jp
shrb
jl
xlat
xor
out
roll
pop
mov
fwait
stos
fstps
data16
mov
pop
xchg
cmp
stos
xchg
jp
fwait
jae
mov
inc
inc
popf
pop
int
stos
sahf
clc
inc
hlt
mov
or
imulb
and
cmpsl
or
lods
add
ficompl
dec
loop
xor
enter
sub
sbb
je,pn
mov
xlat
jns
fnclex
das
pop
lods
adc
fiadds
mov
push
dec
shl
loopne
sub
dec
mov
je
dec
sub
sbb
inc
stos
cmp
or
mov
loopne
loopne
adc
adc
xlat
int
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
imul
aad
scas
scas
sub
xlat
pusha
push
cmovne
or
sub
fwait
es
bound
subb
data16
add
fstl
loop
sub
mov
sbb
sbb
mov
lret
popf
in
loope
mov
pop
jo
rcll
pop
je
in
jp
xchg
fcmovbe
xchg
mov
cmp
subl
imul
lea
es
add
pop
mov
and
ret
mov
xchg
pop
cmp
xchg
pushf
xchg
xorb
push
and
jecxz
push
lods
dec
add
clc
je
in
push
xchg
daa
adc
pop
cltd
andb
lret
dec
adc
and
push
je
push
add
xor
ja
cmp
xor
or
cmp
dec
in
out
cld
aad
mov
iret
leave
adc
sub
cmp
imul
rclb
and
clc
add
das
inc
ja
sbb
neg
push
sub
fwait
or
pop
sbb
test
mov
mul
adc
mov
dec
lods
mov
js
mov
mov
int
nop
add
push
sbb
pushf
mov
int3
pop
push
movsl
adc
mov
pop
int3
dec
fstpt
sub
add
loop
pop
or
aad
push
xchg
pop
rorl
sti
loope
imul
xchg
sbb
jge
sbb
lret
push
int
popf
push
out
rorl
aad
cwtl
arpl
std
dec
out
jg
fiaddl
mov
sbb
dec
test
std
mov
pop
jb
rorl
js
mov
fs
pop
inc
add
lret
pop
xchg
pop
roll
neg
mov
ja
int
pushf
fs
sbb
xchg
add
xchg
in
mov
arpl
jmp
aad
cld
cld
sub
inc
add
mov
adc
sbb
repz
repz
jl
fnstcw
fmull
sub
xor
jb
arpl
test
cld
movsl
lret
mov
sub
xchg
cli
and
or
popf
lock
imul
sbb
sub
std
bound
imul
add
mov
push
aad
mov
push
imul
jge
popa
mov
mov
mov
fstps
push
mov
mov
jmp
inc
dec
outsl
inc
movsb
sbb
int
jp
lret
lret
mov
jge
mov
aam
rol
mov
mov
jmp
cld
xor
push
sahf
mov
push
ss
mov
lret
imul
out
gs
loopne
add
inc
ror
jmp
ljmp
cs
mov
push
mov
xchg
jmp
cmp
jae
rcl
adc
xchg
es
adc
scas
hlt
and
in
mov
call
sub
add
add
sub
pop
sbb
hlt
sub
cltd
pusha
ds
pop
adc
cmp
dec
cs
aam
cs
jle
jl
into
stc
mov
js
sahf
insb
xchg
aaa
xchg
xchg
ljmp
sbb
mov
mov
mov
cmpsb
push
jns
mov
aad
loopne
pop
std
fsubl
nop
lods
cld
dec
ss
mov
mov
xor
lds
stos
cli
adc
ljmp
xchg
sar
imul
jg
cmpsl
outsl
cmp
mov
scas
pop
cmp
mov
shrd
xor
jmp
mov
popa
lcall
pop
sarb
sub
adc
adc
adc
push
and
addr16
mov
fs
or
pop
cwtl
or
cli
sbb
mov
cmp
inc
adc
call
and
xchg
push
push
in
xchg
movsb
int
pop
jecxz
xchg
ljmp
lcall
outsl
test
inc
pushf
movsl
or
out
jg
loope
fisubrs
lds
cmp
push
mov
add
xchg
inc
lret
jg
andb
lcall
mov
add
lods
insb
mov
jle
lods
xchg
rcrb
xchg
jne
int
push
fwait
pop
adc
push
sbb
adc
fwait
aaa
in
fsubrl
lcall
or
adc
and
imul
inc
or
pop
scas
push
cmp
lahf
jb
or
and
cmova
xlat
fnstsw
inc
fsts
fsubrp
adc
jae
push
xor
xchg
mov
inc
outsb
mov
push
adc
jmp
imul
push
pop
movsl
mov
add
sahf
and
imul
subb
sbb
adc
test
test
test
cli
into
sarl
mov
jno
mov
and
popf
push
imul
adc
or
hlt
xor
mov
shl
push
or
in
xchg
out
imul
sub
mov
or
jae
ror
xor
push
add
mov
mov
andb
bound
rolb
xor
fidivrs
jecxz
sub
lret
push
xchg
cmpsl
and
dec
jmp
sbb
lcall
xor
scas
out
dec
shlb
push
mov
in
sbb
pop
sub
lret
into
dec
rorl
cmp
js
jno
pop
out
mov
outsl
xchg
movsl
loopne
leave
cwtl
cmp
pop
mov
jl
and
fadds
stos
negl
popf
jb
push
sbb
inc
xchg
or
enter
jnp
or
inc
mov
rcr
mov
adc
jg
mov
cmp
addl
push
jns
mov
popf
and
add
jg
sub
push
cltd
mulb
dec
lds
inc
popa
push
jbe
jmp
in
sbbb
or
dec
scas
jbe
jp
sahf
sbb
push
mov
sarl
movd
repnz
insl
mov
mov
sbb
inc
xor
lods
jecxz
jo
cmp
jae
push
dec
and
imul
sbb
rclb
push
pop
leave
mov
sbb
scas
mov
movsl
roll
and
pop
push
daa
es
push
mov
fwait
xchg
test
test
addr16
mov
pop
int
jbe
add
outsb
imul
add
mov
cmp
jnp
push
lcall
xor
dec
leave
xor
fmuls
push
out
xlat
mov
pop
stc
roll
fmuls
push
xor
in
pop
and
cmp
jg
sub
or
test
push
shr
ds
sub
inc
ss
xor
sbb
jnp
push
loopne
cmp
test
sub
cltd
cmp
cltd
or
cmc
rorl
mov
sub
sahf
mov
cmp
mov
jns
jbe
jns
outsl
mov
shll
cmpsb
inc
popa
push
jbe
pop
test
dec
pop
outsb
xchg
movsb
insb
cmpsl
xchg
popa
nop
jg
jle
mov
sub
fdivr
and
ljmp
jecxz
mov
cmp
lret
inc
mov
fistps
movsl
fisubrs
testl
pop
outsl
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
dec
sarb
and
adc
movlps
jmp
jge
inc
jg
or
fbstp
mov
int3
nop
lods
push
insl
adc
ja
lock
idiv
dec
xor
xchg
clc
push
mov
mov
push
mov
pop
out
jno
int
xchg
popf
roll
lock
cltd
cmp
cltd
mov
insb
mov
sub
dec
sbb
aam
loop
out
or
xor
cld
pop
out
fs
xchg
shlb
jb
mov
and
xchg
sahf
mov
icebp
lds
jne
mov
test
cmp
mov
sbb
int3
out
push
testb
mov
cmpsb
shl
int3
sub
xlat
andl
addr16
add
xchg
push
xlat
cmovp
xor
stc
push
xor
inc
popf
dec
jae
ljmp
mov
cld
and
cli
outsb
mov
js
xor
jo
and
mov
aaa
mov
sbb
push
xchg
dec
xor
add
jbe
pop
jmp
mov
mov
fwait
mov
adc
inc
mov
icebp
test
xor
mov
jp
cmpsb
icebp
daa
call
adc
sub
adc
lods
aaa
jecxz
push
cld
in
mov
out
out
ret
dec
gs
push
fiadds
dec
arpl
push
out
sub
mov
jbe
xor
cmpb
in
inc
ss
push
mov
pavgw
xor
vmovapd
or
aad
or
jb
loope
or
jp
push
adc
sbb
inc
mov
mov
mov
mov
ret
sub
imul
test
mov
stos
incl
lea
inc
jne
sbb
bound
ret
icebp
mov
outsb
xorl
xor
aam
aaa
jb
sbb
loop
mov
mov
dec
mov
outsb
pop
dec
inc
into
add
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
mov
sbb
adc
movlps
xor
outsb
cld
ss
sub
bound
and
sub
out
out
xchg
mov
aas
add
sbb
mov
imul
scas
or
sub
inc
cmpsb
loopne
mov
icebp
jg,pt
fildll
inc
les
int3
pop
add
shr
in
and
push
xor
xchg
jae
sbb
sbb
cmp
loopne
cltd
add
test
mov
add
outsb
add
je
in
dec
xor
push
loopne
mov
loop
sbb
lret
loop
insl
adc
je
ja
add
mov
outsl
scas
sbb
jo
jmp
push
ficoml
iret
sbb
pop
arpl
pop
cmp
jge
pop
shll
aad
mov
mov
cli
push
loop
and
ffree
insb
jl
or
cmp
jnp
pop
xor
fs
mov
lods
jecxz
jl
jmp
pop
int3
mov
iret
push
sub
ficompl
stos
mov
xor
std
jne
mov
mov
xchg
adc
mov
add
mov
push
cmp
pop
ficoms
mov
xlat
test
bound
ljmp
cwtl
or
iret
aad
in
fwait
dec
sbb
pop
xor
sbb
mov
divl
clts
mov
cmp
xlat
cmpsb
cmp
mov
rclb
xchg
add
push
popa
enter
loopne
mov
stos
add
adc
add
mov
ret
nop
mov
stos
fs
rdpmc
wrmsr
arpl
push
xchg
sbb
sub
jmp
inc
jno
xor
lea
and
daa
push
mov
xor
xchg
in
mov
mov
repz
inc
in
mov
inc
cmp
jae
cmp
or
icebp
loope
inc
ss
xor
and
ret
xor
jne
repz
mov
push
pop
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
and
push
sbb
adc
movlps
cltd
sbb
pop
cmpl
sub
add
or
ror
das
or
imul
sti
cld
xor
sbb
mov
loopne
in
jge
dec
loop
and
lods
and
rcl
push
or
sub
stos
ja
testl
loopne
pop
sbb
fdivl
mov
lds
push
maxps
cmp
pop
xchg
movsl
xor
cli
sub
cmc
add
or
aad
mov
cs
outsb
inc
pop
addr16
jnp
fwait
mov
push
fsub
mov
xchg
jmp
push
add
mov
shl
test
mov
ja
test
pop
fcmovbe
push
insl
push
sbb
mov
andb
aad
mov
cs
stos
aad
int
int
test
add
jno
out
pop
les
sbb
jmp
cmp
fdivr
push
push
out
insl
pop
cwtl
leave
cs
lea
imul
jmp
hlt
xchg
bound
or
sbb
xor
or
jg
jno
jg
pop
lea
mov
loope
mov
sbb
cli
dec
xor
cmp
loop
dec
sbb
jo
in
mov
pop
cmp
inc
pause
jbe
cmc
lods
pop
shrl
sub
lds
aad
lea
pop
daa
jmp
push
or
les
out
adc
imulb
push
in
pop
arpl
loope
xchg
push
test
mov
mov
in
repz
jg
mov
in
push
jnp
xlat
popa
xor
data16
cmp
jne
xchg
mov
lock
and
loop
insl
or
mov
mov
mov
pop
cmpsl
rcll
test
inc
insl
std
sbb
mov
pop
das
es
imul
ds
mov
xor
pop
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
dec
es
adc
adc
movlps
lcall
push
arpl
add
dec
addr16
pop
in
bound
aaa
imul
pop
cltd
mov
jae
push
push
push
push
adc
or
mov
jnp
ret
and
push
or
mov
sub
lds
sbb
inc
repz
outsl
mov
push
xchg
popf
bound
mov
fildl
je
shlb
mov
pushl
hlt
xchg
lds
inc
cmp
mov
repz
ljmp
add
push
aad
mov
leave
mov
xchg
jg
leave
inc
jp
sub
inc
popf
pop
mov
push
stos
cwtl
dec
es
xchg
repz
or
and
xchg
loopne
xchg
ret
sub
out
or
cld
cmp
int
popa
daa
jl
icebp
pop
cli
insb
lret
cmpsb
mov
inc
jge
mov
and
sti
xchg
enter
mov
arpl
cltd
pop
xchg
push
loopne
out
mov
inc
or
mov
push
mov
rcrl
fisubrs
dec
cmp
dec
push
xor
out
cmp
lods
iret
stc
stos
loop
push
and
jo
fldt
push
mov
inc
out
push
mov
adc
inc
lods
jns
push
xchg
andb
mov
cmp
das
loope
xor
add
or
imul
fnsave
xchg
orps
pop
mov
test
ss
dec
mov
fwait
mov
sbb
dec
and
cmc
lcall
mov
out
rorb
xor
rcr
xchg
sub
or
jp
dec
fstl
add
popa
sbb
pop
pop
inc
push
inc
jl
mov
pop
push
mov
push
mov
int
cli
and
or
mov
fisttpll
repz
jg
fadd
cwtl
fimull
lods
enter
xchg
inc
lds
add
test
push
push
mov
mov
mov
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
xchg
or
fmull
adc
clc
fisttpl
cmp
shlb
out
cwtl
xchg
xchg
mov
rcrl
fsubl
push
lret
push
cltd
and
lea
mov
add
pop
cli
mov
aad
mov
dec
int
add
xchg
sbb
push
sbb
or
ljmp
or
call
mov
jle
insb
pusha
ror
dec
cmp
sbb
or
lahf
ljmp
nop
addl
shll
mov
xchg
sbb
adc
in
cld
pop
jns
inc
sub
adc
out
mov
sbb
pop
mov
out
rorb
cmc
lcall
mov
popa
cmc
dec
aaa
mov
inc
jnp
idivl
mov
es
push
mov
and
cmp
dec
inc
xchg
push
clc
fwait
shr
movsb
mov
fwait
jge
mov
push
jbe
inc
jne
pop
lods
xchg
and
dec
les
or
xchg
inc
call
adc
cltd
clc
mov
fs
test
or
mov
stos
mov
or
or
shlb
inc
mov
mov
push
jmp
icebp
enter
hlt
mov
mov
fcomi
push
dec
xchg
js
inc
int
ljmp
jp
imul
jbe
movsl
mov
or
dec
inc
cli
add
mov
sbb
pop
int3
or
push
in
mov
jb
mov
loope
enter
inc
shl
cmp
out
xchg
xchg
and
rcll
jns
and
sub
inc
sub
imul
jl
negb
xorl
ja
push
cli
test
cltd
jl
xchg
xchg
mov
out
mov
dec
sub
push
pop
cmp
add
popa
pop
pushw
sub
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
cltd
cltd
fcoms
fcompl
inc
out
sarl
xor
cltd
dec
cmp
inc
push
xor
iret
out
insb
and
xchg
pop
jne
sahf
js
and
adc
cmp
cmp
pop
dec
xor
stos
xchg
cmp
sahf
mov
jne
xor
std
sub
mov
mov
daa
daa
sarb
repnz
mov
les
lcall
aaa
in
sub
repz
pop
inc
add
add
cmp
fmulp
inc
pushw
adc
mov
scas
push
adc
aaa
fimull
stos
icebp
shrb
jns
sbbl
xchg
test
sub
cs
imul
mov
enter
or
dec
add
jbe
sbb
fnsave
push
mov
gs
bnd
loopne
lcall
fadd
fldl
mul
rorb
add
jb
pop
cli
adc
scas
sub
daa
lods
out
ja
sbb
test
xor
aad
pusha
or
pop
xor
sarl
jge
mov
mov
fsubrp
xor
mov
or
xchg
xchg
scas
jge
ret
mov
imul
inc
in
xchg
ret
mov
scas
add
lahf
inc
rep
aam
sbbb
iret
dec
pusha
cmp
ret
push
pop
pop
rclb
pop
push
testb
push
adc
adcb
int
mov
loopne
cmp
dec
rclb
mov
push
sub
adc
mov
loope
test
jnp
iret
aam
int
dec
ljmp
jbe
int
ja
ficompl
test
push
dec
ds
mov
sahf
idivb
mov
inc
sub
mov
shrl
mov
inc
cmp
pop
insl
dec
stos
ljmp
mov
push
pop
sti
imul
jnp
in
push
cmp
add
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
inc
cmpb
movlps
pop
cmpsb
popa
loopne
aas
sub
push
in
push
add
mov
jne
dec
outsb
bound
pop
out
cmpsl
xor
dec
push
xchg
ljmp
cltd
fimuls
dec
shll
mov
jo
mov
pop
mov
loop
js
out
mov
imul
pop
sub
cmpsl
cmp
fcmove
outsl
je
daa
fbstp
inc
jg
and
inc
sub
mov
ljmp
sub
lea
xor
adc
inc
xor
mov
pop
shld
cmpsl
loopne
pushf
lds
jne
push
push
adc
ret
insl
mov
scas
push
fs
fsubs
ss
sbb
fmull
cmp
add
repnz
orl
mov
movsl
xchg
dec
sbb
shrl
ror
icebp
and
xchg
stos
mov
lock
mov
movl
mov
xchg
dec
jb
out
jb
rol
mov
cltd
aas
jne
ja
lods
mov
jl
out
dec
cwtl
fimull
add
push
stos
movsl
sbb
sbb
mov
imul
jbe
sub
jns
mov
repz
shlb
clc
sti
test
test
fildl
sub
push
add
int
xchg
rorl
cmpsl
ja
xor
push
mov
jo
imul
mov
pop
jbe
mov
jle
cwtl
pop
push
mov
bound
and
jae
test
out
jbe
dec
mov
xor
push
push
xchg
mov
enter
push
nop
mov
out
lret
xchg
push
pusha
push
dec
pop
xor
popa
pop
xchg
sarl
fcmove
lahf
xchg
out
cwtl
enter
iret
pop
push
sbb
ret
test
outsb
dec
js
scas
sbbb
imulb
and
cmpl
dec
cmpsl
rorb
shl
and
dec
lret
cmc
out
xchg
cli
dec
mov
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
cwtl
out
sbb
ljmp
mov
mov
ret
loopne
mov
sahf
mov
enter
sub
xor
scas
movl
cld
xchg
cmp
ljmp
or
and
cmp
loop
dec
mov
addr16
mov
inc
scas
sbb
pop
sub
jns
fisubrs
adc
jns
add
mov
mov
xchg
fld
inc
pop
adc
sarb
mov
aas
dec
mov
ds
je
out
add
out
fmul
xor
dec
int3
hlt
or
mov
fmuls
mov
iret
pusha
stos
arpl
imul
arpl
mov
insl
pop
mov
lds
fisttpll
mov
repz
les
xor
movsb
daa
repnz
cmp
add
scas
dec
xchg
and
test
inc
das
push
aad
push
inc
xlat
jns
cwtl
inc
push
std
rcrb
push
cmp
into
insl
jns
inc
or
pop
or
jnp
dec
fs
cmp
jbe
dec
adc
inc
rcrb
mov
pop
pop
testb
jbe
mov
ljmp
notl
cmpsl
int3
dec
xchg
mov
mov
push
shl
or
pop
mov
xor
inc
iret
xchg
cmpsl
data16
ror
jb
lret
mov
mov
dec
sub
insb
add
add
pop
cltd
fcmovnu
fwait
dec
imul
popa
je
scas
push
repnz
insl
mov
fs
into
sub
mov
or
inc
cmp
std
dec
jp
add
or
sub
imul
pop
insl
loop
cmp
lds
mov
xor
pop
xchg
ret
mov
sub
out
mov
popf
test
adcl
xchg
add
cmp
shr
movsl
ss
xchg
sbb
fldt
dec
and
pusha
mov
aam
inc
mov
cltd
dec
mov
mov
leave
inc
dec
add
std
inc
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
clc
pop
add
sub
jp
jge
aam
sub
leave
push
sub
jmp
stos
loop
sahf
dec
lret
sub
movsl
cmp
push
movsl
outsb
fdivrs
lcall
in
fbld
sbb
enter
pop
push
pop
pop
loop
out
mov
js
sbbb
sahf
cli
lock
xchg
inc
pusha
xchg
push
jne
pop
mov
push
test
jno
ret
cvttps2pi
fstp
cmp
cmp
jno
pop
mov
inc
mov
xlat
lods
inc
adc
push
fcmovnu
add
mov
int3
mov
push
je
lds
daa
sbb
cmp
pop
pop
pop
in
test
sbb
push
mov
cmpsl
outsl
mov
lret
testb
adc
xchg
in
mov
and
xchg
push
testl
jne
mov
xchg
mov
cmpsl
incl
xchg
fidivrs
aaa
xor
iret
jmp
jge
sahf
xchg
cwtl
lcall
mov
xor
pop
mov
sbb
mov
jmp
imul
xor
test
clc
pusha
add
aas
std
test
shl
xor
add
push
ja
movsb
jno
jo
mov
js
mov
lods
sti
inc
repz
sub
orb
mov
mov
push
push
mov
shlb
ss
push
jmp
inc
ss
jno
pop
stc
sbb
out
jmp
jnp
daa
movsb
jb
mov
and
shll
adc
hlt
jl
loop
outsb
dec
inc
xor
test
sub
pop
dec
sbb
out
sbbl
fidivrl
fdivr
hlt
loopne
mov
push
mov
or
push
loope
dec
cmp
sub
jmp
or
mov
and
imul
dec
jae
lahf
jne
test
sbb
xchg
nop
mov
fisttps
mov
mov
enter
loopne
testl
jo
push
dec
fisttpl
dec
add
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
leave
cmp
adc
movlps
adc
xchg
xor
adc
out
int
pushf
push
and
inc
and
jne
cmpsl
mov
pop
stc
xchg
mov
jno
dec
and
movsl
lcall
packuswb
xor
bound
cmc
cmc
add
jmp
sbb
jne
in
cmp
ficoml
mov
js
sti
dec
jecxz
xchg
sub
scas
push
int3
aaa
aad
cmp
dec
imul
adc
xchg
loop
outsb
and
sub
cwtl
enter
stc
shrl
lock
out
xor
dec
jg
sbb
jnp
mov
add
xor
icebp
int
pop
ficompl
fs
and
testb
or
scas
jge
mov
xor
testl
xchg
fwait
scas
sti
mov
inc
stos
pop
out
inc
xchg
daa
test
xor
inc
or
sbb
cmp
rol
cmpsb
das
stos
in
scas
push
out
hlt
mov
cmp
adc
mov
out
mov
movsb
cmp
dec
cltd
rcll
ja
test
out
add
int3
cmp
lret
popf
std
jne
mov
in
add
lret
adc
mov
les
cmp
xchg
add
push
addr16
rcrl
aam
insl
lds
outsl
push
cwtl
cmc
jo
sub
jo
pop
ret
mov
jo
lret
add
mov
sbb
ss
imul
ds
iret
sbb
jl
cmp
cwtl
sbb
xchg
dec
aaa
mov
out
aad
mov
pop
dec
test
das
xor
xor
icebp
xor
and
sbb
add
xchg
mov
das
jl
or
in
dec
add
and
loopne
sti
rcrl
add
jne
or
shrb
test
mov
ss
movsb
mov
push
adc
ljmp
clc
out
lea
fildl
push
xchg
pop
clc
push
adc
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
jb
inc
stos
popf
cli
adc
fmull
adc
outsl
mov
test
xchg
movsl
dec
shr
sarl
jae
inc
push
orb
add
pop
cmp
clc
imul
pusha
cld
mov
testb
inc
sbb
or
sarb
idivb
inc
or
sti
and
loope
adc
repnz
shrb
aas
leave
aam
icebp
testb
ret
push
rolw
add
dec
decl
arpl
cmp
jmp
add
lret
jmp
js
jne
mov
xor
add
sbb
xchg
fidivs
adc
in
pop
push
sbb
shll
or
sbb
jmp
loopne
fcmovbe
jmp
scas
sbb
imul
out
inc
insb
jo
bound
jecxz
clc
fs
pop
inc
popa
mov
mov
jle
movsl
or
fldcw
push
or
ljmp
add
into
xchg
incl
out
lret
andl
mov
cmp
jmp
std
add
js
sub
xor
orb
daa
sub
scas
push
dec
cld
and
mov
sub
xchg
ja
pop
pop
inc
jmp
sub
push
jb
pop
aas
lea
pop
lock
sub
test
clc
test
ss
mov
jge
int
jp
aaa
flds
jno
cli
ss
and
in
sbbb
inc
push
jne
dec
cwtl
or
and
xor
rep
mov
cld
adc
pushf
jl
sub
call
sbb
aam
push
cmp
mov
sbb
sbb
js
adc
push
in
loopne
out
cmp
xchg
mov
lds
mov
repz
cs
cmpsb
fists
imul
ljmp
dec
mov
and
and
mov
loopne
ret
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
xchg
in
insb
notb
adc
movlps
repnz
mov
sub
mov
imul
pop
mov
adc
cld
xchg
mov
add
mov
cmc
sbb
jg
icebp
shlb
push
push
mov
dec
mov
jg
movsl
ret
es
in
sti
push
mov
cmpsb
ffreep
fs
pop
xchg
dec
xchg
push
mov
imul
out
jecxz
cmpsb
rcll
orl
mov
xor
pop
int
jo
jnp
repnz
mov
xchg
and
sub
pop
push
loop
adc
addr16
and
jg
fists
mov
sar
mov
inc
rorl
gs
movsb
cs
jg
daa
shrb
dec
outsb
fcompl
push
mov
push
int
lods
lea
out
mov
inc
lock
push
cmpsb
or
push
faddl
sahf
cld
push
jnp
xor
es
aam
fbstp
jp
push
mov
xor
dec
das
cwtl
adc
pop
sub
sahf
sub
push
int
add
add
cs
sub
inc
add
pop
fwait
mov
fnstsw
leave
aas
bound
iret
ds
push
cmp
add
lock
adc
dec
outsb
cmp
out
push
pusha
jp
or
test
xorb
out
dec
mov
lods
mov
sub
push
mov
mov
or
ret
dec
popa
and
mov
mov
push
jmp
mov
sbbb
fsubs
inc
cwtl
clc
sbb
and
cmp
mov
ja
xlat
les
inc
movsl
out
mov
jno
jo
adc
int
xchg
jbe
lds
jo
fnsave
jp
mov
rorb
xchg
push
gs
push
xchg
test
imul
movsb
loop
je
mov
aas
ss
push
lea
out
popw
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
push
push
adc
jnp
dec
jle
jg
into
lcall
cs
sbb
stc
mov
das
mov
mov
or
sbbl
mov
mov
mov
pop
dec
aad
xor
sub
mov
push
cltd
sub
xchg
js
pandn
cmpsl
add
and
mov
pop
shrl
test
xor
jo
clc
or
mov
insl
arpl
push
data16
lcall
scas
idiv
lret
or
xor
out
andb
adc
into
shr
insb
cmp
loop
cmp
jecxz
mov
cmpsl
xchg
pop
lods
pop
imul
mov
inc
xchg
cs
push
lds
sbb
mov
mov
or
xchg
jae
xchg
in
cmp
in
and
pop
stos
jl
mov
fstp
loope
inc
mov
mull
mov
enter
sbb
inc
out
js
leave
repz
or
xor
pop
pop
push
enter
cwtl
sbb
data16
mov
cmc
sub
inc
ss
out
icebp
xchg
xchg
add
cs
xchg
sbb
push
out
inc
rcrl
loope
adc
pop
cmp
pop
pop
inc
in
outsl
popf
inc
icebp
fsub
lcall
stos
mulb
jns
test
mov
fwait
out
and
les
aad
insb
push
sub
xchg
mov
sub
mov
fistps
mov
sub
or
sub
mov
pop
pop
xchg
xlat
mov
ret
sub
stos
fdivl
inc
inc
out
insl
dec
mov
inc
daa
out
jo
pop
jb
ljmp
cmp
lret
xor
cmpsl
xor
mov
lret
mov
mov
xchg
js
lods
insl
jo
shlb
add
mov
pop
adc
sbb
jae
or
sbb
aas
aam
mov
aaa
out
cwtl
cld
pop
test
jmp
lcall
lods
cmp
push
inc
push
iret
mov
sbbb
in
fucomp
stc
testb
cmp
inc
add
or
gs
cmp
mov
mov
arpl
movsb
or
xchg
in
lret
insl
push
std
sarb
mov
adc
xor
sbb
mov
jmp
ds
jg
inc
cmpsb
aas
add
mov
xchg
pop
sub
xchg
clc
inc
lcall
sbb
mov
test
addb
mov
pop
test
mov
shl
cli
std
jle
lds
movsb
push
xchg
test
daa
fistpll
sub
inc
and
ds
nop
jno
aas
sahf
rorl
push
addr16
cmc
je
jmp
in
jb
add
mov
icebp
jle
jno
cmp
xchg
lea
jle
popa
in
bound
daa
sub
insl
pushf
lods
mov
mov
icebp
stos
clc
ret
adc
mov
adc
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
ret
mov
adc
jo
adc
pop
mov
xor
enter
jmp
mov
ss
fwait
shlb
jbe
cli
fstps
sub
xor
and
dec
lcall
xor
push
adc
mov
lcall
je
push
push
add
dec
les
cwtl
hlt
outsb
and
sbb
mov
lods
popa
in
cmc
lods
xchg
dec
push
push
mov
cld
daa
jg
dec
gs
push
or
call
sbb
cmc
cmpl
in
loope
addl
xor
cs
subl
enter
mov
or
cli
fisubs
xchg
inc
scas
icebp
clc
inc
shr
cmp
and
sub
sub
cltd
jp
sti
loop
pop
jecxz
jno
idivl
mov
insl
ljmp
xorb
inc
push
inc
pop
pop
jb
cs
sbb
dec
gs
dec
inc
mov
js
or
aas
test
pop
std
pop
cli
xlat
mov
add
std
jmp
insb
aad
test
sub
iret
xor
mov
mov
xchg
push
mov
cwtl
jae
jb
xor
ficoml
cmpsl
stc
lea
adc
mov
and
sub
adc
jnp
lock
imul
sbb
adc
faddl
movsb
or
icebp
jle
cld
adc
fcomp
movsl
cmp
inc
in
add
in
push
daa
push
jbe
push
sbbb
xor
xlat
or
jo
push
ja
add
or
sbb
iret
sbb
int
cmp
das
lcall
jmp
and
push
sub
xlat
mov
adc
test
movsl
sub
in
je
or
int3
or
adcl
pusha
jb
xor
xchg
pop
mov
aam
fcomps
int
adc
roll
xchg
sar
jge
inc
insb
aas
push
pop
sub
mov
jne
and
push
push
dec
into
jnp
pop
mov
xor
jbe
in
dec
cmp
out
nop
cmpsb
xchg
data16
sbb
aad
mov
xchg
inc
cmp
and
xchg
jl
stc
addl
hlt
push
jge
scas
fildll
aam
adc
out
repz
ficomps
pop
mov
jge
mov
rclb
xor
mov
mov
stc
cmp
out
jmp
nop
xchg
cmpsl
nop
lahf
arpl
mov
outsl
js
sti
inc
inc
in
push
dec
pslld
cmp
xchg
sub
pop
dec
xor
mov
dec
mulb
enter
outsl
xor
fcmovnu
xchg
fcomps
jae
push
mov
mov
fbstp
lret
daa
add
pop
add
bound
aas
dec
mov
and
outsb
scas
push
mov
push
sbb
push
mov
xchg
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
out
bound
fists
adc
adc
popa
addr16
mov
xchg
je
mov
mov
jl
xor
push
ud1
pop
outsl
jae
mov
pusha
adc
mov
dec
mov
cmp
push
pop
mov
stc
jmp
mov
pop
mov
push
dec
mov
aaa
and
dec
nop
mov
cmpsb
sarb
stos
push
bound
ljmp
adc
iret
fmull
es
sub
push
ret
mov
mov
movsb
inc
pop
aad
mov
or
xor
das
xlat
xchg
je
sarl
or
jno
cs
jge
push
inc
sbb
clc
push
add
stos
cmp
fstl
pop
cli
inc
jle
and
out
sbb
fs
push
jb
std
xchg
aam
push
pop
es
xchg
add
imul
movsb
or
pop
faddl
cmpsb
add
ret
pop
xchg
sbb
popa
add
adc
add
ja
nop
and
repnz
aam
leave
sub
in
fwait
xchg
pop
lret
xor
mov
adc
inc
xchg
and
insb
or
lcall
mov
adc
cmc
test
subl
mov
mov
stos
mov
test
mov
cld
pop
shll
add
cmpsl
mov
dec
movsl
xchg
jg
push
and
stos
cmp
shll
outsl
rcrl
ret
dec
test
push
push
mov
jg
nop
scas
and
aad
mov
lahf
pop
rolb
in
ret
push
decb
push
xor
fidivs
dec
push
push
pop
inc
icebp
rol
leave
mov
dec
imul
pop
jmp
bound
jns
rorl
inc
ss
fcomip
jae
loop
mov
sub
xlat
test
xchg
sbb
nop
jo
cmp
jae
mov
fadds
jb
movsl
mov
push
inc
adc
addl
je
lods
ja
mov
mov
leave
push
add
dec
mov
test
push
arpl
pop
xchg
mov
and
adc
movb
ror
neg
roll
cmp
icebp
jae
xlat
pop
inc
repnz
fidivl
push
mov
mov
dec
fstpl
cmp
clc
out
xchg
hlt
inc
std
icebp
icebp
decl
ffree
jg
lods
or
cltd
je
push
xor
loop
lea
icebp
jg
iret
test
adc
dec
scas
in
add
lret
stos
ret
cwtl
pop
mov
sbb
je
push
sbb
pop
jle
or
iret
or
lahf
pop
jae
pop
adcb
adc
sub
loop
sbb
push
mov
or
rorl
push
pop
sti
repnz
cmp
gs
and
clc
outsb
pop
test
xchg
sahf
mov
push
push
xchg
dec
leave
pop
fistl
js
mov
mov
jmp
mov
mov
or
scas
cs
stos
sub
xor
scas
mov
jg
inc
sub
add
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
xor
js
fstl
adc
adc
repnz
loope
popa
ljmp
jno
jle
fidivs
jge
xor
sahf
shlb
sbb
xchg
cwtl
xor
shr
pusha
push
aam
xchg
dec
sbb
jno
out
not
test
dec
cmp
ret
je
nop
pusha
jne
les
inc
rol
sbb
cmpsb
jae
xor
addr16
cmpsl
push
mov
or
sti
and
dec
mov
jg
sbb
call
mov
sub
cmpsl
push
mov
aad
stc
ret
or
mov
addl
sbb
push
inc
rcrb
loop
jl
dec
enter
outsl
mov
jge
lock
std
les
mov
mov
in
lret
dec
ds
push
imul
jmp
addr16
mov
push
and
adc
mov
sub
out
inc
pop
xor
faddl
rcrb
jmp
enter
outsl
and
dec
or
in
xor
inc
cmp
adc
and
call
and
sub
cmp
aam
sub
adc
in
je
popf
aam
lret
sbbl
je
xlat
sub
push
cmpl
shrl
mov
or
shlb
inc
bound
outsb
dec
dec
push
or
into
sub
mov
shrl
pusha
loop
add
fs
mov
movl
test
push
popa
testl
or
inc
dec
xchg
add
jbe
xchg
sub
adc
ret
dec
or
call
cmp
lds
popa
mov
pop
xchg
dec
pop
ret
cmp
popa
push
inc
mov
pop
add
loopne
addb
adc
scas
adc
popa
int
pop
mov
fidivl
stc
pop
sti
dec
inc
sbb
mov
vucomisd
data16
xchg
jae
xor
mov
loop
dec
pop
cs
dec
xlat
inc
xchg
sub
ficomps
xchg
cmp
mov
in
std
or
mov
call
dec
xorl
aas
movsb
mov
sub
or
notb
enter
dec
sti
push
sub
dec
mov
test
test
int
movsl
dec
cmpsl
shll
jno
out
fisubl
sub
insb
sub
out
push
dec
in
mov
dec
inc
push
loop
lods
mov
mov
pop
cmc
mov
xchg
cmp
in
xchg
sub
stc
repnz
je
mov
and
in
or
xlat
cmpsb
mov
sbb
add
sti
cmp
scas
jno
mov
or
add
mov
add
jg
adc
xor
inc
std
and
in
jnp
aas
test
lcall
mov
pop
mov
jl
inc
gs
in
mov
push
lea
mov
cwtl
sbb
fs
out
adc
push
jmp
push
in
int
push
nop
push
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
mov
aad
adc
adc
sbb
test
fcoms
insb
imul
ret
sbb
daa
sub
sbb
and
jbe
repnz
sbb
adc
jp
cmpsb
clc
mov
xorl
mov
pop
inc
push
pop
pop
decb
mov
ficompl
enter
pop
out
ds
adc
xor
push
push
mov
jl
repnz
arpl
xlat
mov
testl
js
push
jmp
sbb
add
stos
xchg
sub
jmp
mov
iret
mov
xor
dec
ret
xor
xchg
add
pusha
inc
aam
leave
stc
call
faddp
je
jo
xchg
fistps
insb
add
test
fisttps
jg
push
aaa
jo
jmp
push
mov
fwait
imul
jmp
dec
mov
lahf
or
leave
stos
and
out
loope
stos
iret
mov
inc
aam
clc
jg
xchg
and
aas
pop
cmp
aam
inc
mov
fsts
gs
popa
and
xor
test
je
pop
push
mov
cmp
sub
sub
mov
xchg
lods
movsl
cmp
adc
xor
test
cs
push
pop
enter
adc
sbb
mov
stos
stc
lcall
xor
and
xor
pop
sub
add
xor
mov
add
js
and
jle
cmp
sarb
jecxz
cmp
add
jno
call
stc
pop
inc
in
nop
or
add
pop
xor
xchg
xor
ret
insb
sub
movsb
pop
sub
xchg
xchg
push
stc
xchg
repnz
push
cld
popa
mov
test
xchg
cltd
jecxz
or
ljmp
int3
and
stos
mov
out
mov
repz
pop
mov
push
sub
cld
hlt
sbb
mov
jb
adc
jb
fildl
pop
dec
clc
and
inc
add
xor
aad
insb
bound
imul
adc
in
lds
mov
js
mov
xchg
mov
int3
arpl
add
push
dec
xchg
movsl
ret
adc
sbb
sbb
cmpsb
lret
and
sbb
aaa
je
outsl
ficomps
lahf
ja
iret
out
sarb
andl
ljmp
jnp
lahf
xchg
and
sbb
inc
clc
push
push
call
push
iret
sbb
adc
dec
sbb
sbb
mov
xor
push
dec
inc
in
cld
lcall
ret
in
in
dec
cltd
bound
xchg
cwtl
sub
xor
fcompl
ja
xchg
adc
fs
jbe
add
into
es
out
jmp
insl
pusha
test
xor
lret
clc
shl
cmp
shll
inc
xchg
push
sub
lea
jne
mov
test
xor
ljmp
paddusb
adc
xor
loop
lret
mov
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mov
lret
adc
jo
adc
xor
xchg
das
mov
loopne
or
cmc
or
xor
daa
jae
sarl
call
or
xchg
xchg
lods
xor
in
and
jo
mov
shlb
int
loop
adcb
mov
das
shlb
fwait
clc
mov
adc
mov
pop
push
add
xchg
lods
sti
daa
lahf
div
inc
mov
mov
sbb
icebp
mov
inc
std
and
xchg
shr
inc
mov
mul
adc
into
lods
fmuls
dec
push
pop
add
or
inc
subl
fisttpl
iret
xchg
pop
xor
adc
inc
push
adc
jns
pop
test
cmp
rcrl
and
stc
cmc
adc
xchg
clc
ja
mov
leave
xchg
adc
shufps
sbb
out
cmpsb
mov
leave
sbb
xor
and
jle
test
and
fsubrl
jo
mov
std
orb
sahf
inc
inc
aad
ss
ret
xor
inc
stos
push
mov
pop
xchg
dec
cmp
jne
mov
ss
icebp
outsl
ss
push
xor
repnz
sbb
push
fwait
jl
adc
dec
pop
int
js
outsl
inc
dec
gs
jno
add
inc
movsl
mov
mov
push
es
and
pop
inc
add
test
sahf
fimuls
adc
fdivs
pop
dec
xchg
dec
push
rcr
inc
push
mov
out
cbtw
add
or
out
jae
sbb
push
ficoms
sub
pop
outsb
inc
pop
cmpb
mov
xor
xor
lret
xor
add
aas
sub
lock
push
test
fnstenv
loop
out
push
divb
js
add
xor
pop
xchg
cmp
sub
ret
lds
fxtract
test
aas
inc
mulb
fdivs
push
iret
add
add
inc
loopne
add
rcll
pop
mov
dec
cs
push
cmp
jae
jne
mov
aam
shlb
mov
mov
xchg
jb
mov
pop
fmulp
jecxz
leave
jmp
add
adc
inc
loopne
dec
imul
cs
add
mulb
pop
icebp
stos
ds
imul
jo
je
sub
mov
push
ret
bnd
lds
push
xor
cmpsb
push
xchg
push
xchg
xchg
mov
xchg
xor
movsl
sahf
cmp
inc
pusha
test
add
int3
dec
mov
test
shlb
repz
add
mov
add
xchg
mov
pusha
sbb
ret
push
mov
lock
xchg
pop
into
aas
scas
shrl
pop
das
out
sbb
loope
sub
loope
sbb
mov
pop
mov
inc
test
xchg
je
loopne
dec
call
data16
mov
rol
sub
das
into
xor
pushf
push
inc
xor
loope
fistl
push
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
ljmp
into
mov
dec
adc
fmuls
xchg
sahf
inc
dec
xchg
fidivrs
dec
lret
repnz
adc
out
test
lret
aas
lock
fdivrp
add
fs
xor
mov
mov
imul
call
mov
adcb
pop
mov
gs
in
hlt
and
sub
inc
mov
push
mov
je
add
test
adc
jg
mov
leave
push
movsl
inc
pop
mov
idivb
inc
inc
adc
xor
sbb
adc
rorl
pop
ljmp
aam
fucomi
das
dec
in
in
test
pop
bound
or
jo
lock
imul
and
sub
push
jae
int3
das
int
jmp
xlat
adc
mov
ror
mov
dec
clc
pmaddwd
enter
mov
outsl
pushf
pop
xorl
adc
xchg
cmp
lds
ret
scas
mov
test
ss
push
mov
xchg
stos
pop
not
lcall
fsub
push
or
in
mov
ret
push
sbb
shll
inc
cli
pop
dec
stos
fadd
dec
fisubs
test
mov
cli
cmp
push
stos
ret
cmp
mov
inc
xor
dec
jns
les
adc
cmp
int
das
dec
mov
jmp
fwait
testl
icebp
pop
test
rcl
xchg
mov
je
out
pop
push
adc
neg
pusha
or
mov
fldenv
xchg
sar
cltd
aad
shlb
push
popf
cmpsl
lods
ds
adc
and
jg
imul
sbbl
rdmsr
push
ret
es
mov
mov
inc
cmc
push
ret
dec
out
in
ret
in
das
out
shl
outsb
shrb
cwtl
pop
jmp
into
jbe
aam
cmc
stos
loopne
push
push
mov
jne
icebp
adc
fucomi
mov
push
sbb
mov
ss
js
cmc
or
jo
dec
or
rcll
loop
fmuls
mov
mov
cwtl
jle
ret
iret
mov
mov
addr16
call
xor
into
mov
in
inc
jecxz
xchg
out
push
js
inc
jb
mov
jmp
cmp
in
out
mov
shr
fstl
imul
nop
mov
lret
pop
pop
mov
pop
xchg
mov
xchg
cld
cmp
out
testb
addl
push
jle
aad
int
inc
inc
adc
stc
stc
mov
pop
dec
std
fsubrp
or
xor
sub
jecxz
scas
adc
inc
shlb
pop
push
je
push
fwait
aam
cmp
ret
nop
push
sub
jne
mov
roll
fidivs
or
mov
std
adc
scas
popa
jg
mov
mov
mov
or
pushf
jp
cmp
ret
or
es
sarb
das
shrl
jl
add
jns
and
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
mov
jl
mov
adc
jo
adc
adc
xchg
fcomps
cwtl
jne
fldenv
pop
push
push
addl
jmp
sub
push
imul
ss
adc
inc
fildll
iret
lods
xor
fbld
aad
push
sbb
scas
call
stc
cs
mov
adc
adc
or
rorl
mov
out
mov
pop
adc
stc
test
sahf
jnp
div
pop
ss
sti
ljmp
mov
adc
inc
lahf
inc
jbe
es
mov
jg
call
nop
push
inc
lahf
aaa
push
and
cmp
push
pop
pop
arpl
mov
xor
and
pop
jb
push
xor
in
mov
jo
repz
fstps
jb,pt
cmp
sahf
in
out
cmpsb
push
mov
arpl
pop
iret
xor
sub
fisttpl
jae
decl
adc
gs
xchg
ljmp
out
popf
add
jo
addr16
pop
lret
cltd
xchg
pop
push
lret
fcmovu
imul
cld
and
ret
jl
out
icebp
push
mov
mov
inc
cmp
call
jae
push
mov
adc
pop
jae
push
cmpsb
adc
mulb
xlat
mov
dec
movb
dec
push
subl
inc
adc
jp
push
loope
cwtl
loope
cmp
test
xor
add
dec
enter
ror
hlt
or
mov
enter
xorl
negb
or
in
push
mov
push
sbb
jle
dec
aam
in
imul
pop
sub
push
push
fists
mov
xor
rclb
mov
push
jnp
inc
subb
dec
cmp
or
or
stos
xchg
xchg
outsb
outsl
lahf
jnp
add
xchg
lret
call
xchg
mov
jmp
and
jne
outsb
inc
or
nop
push
bound
pop
jecxz
mov
adc
push
sub
ja
mov
xlat
inc
jns
dec
jmp
and
mov
fldl
and
push
xchg
inc
imul
ljmp
adc
lahf
mov
and
pop
xchg
mov
mov
loop
rcll
add
cmp
pop
push
mov
adc
ret
push
jmp
xor
push
aam
shrb
pop
add
shl
mov
popl
push
ret
xor
mov
pop
inc
scas
rcr
push
mov
loope
cmp
push
pop
dec
pushf
adc
dec
cmpl
iret
add
xchg
cmp
scas
push
int
xchg
aad
into
sarl
mov
iret
push
repz
in
push
xchg
add
mov
xchg
mov
dec
sub
loope
mov
cltd
int
and
lret
es
bswap
stos
mov
ljmp
scas
mov
mov
scas
push
pop
jne
pop
mov
xchg
dec
dec
out
xchg
icebp
les
fldl
rcll
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
hlt
arpl
stos
push
mov
adc
adc
push
sbb
rcr
sbb
xlat
push
es
mov
rol
xor
push
push
jnp
jl
in
je
addb
leave
stos
xor
js
dec
mov
pushf
divb
sbb
in
in
sub
fsts
xchg
fwait
nop
loop
nop
sarb
xor
mov
mov
loop
mov
out
xchg
jo
addl
mov
int3
adc
mov
dec
xchg
mov
and
dec
sahf
mov
or
stc
push
lcall
sub
sub
add
popf
jg
mov
cmp
mov
ret
lods
cmc
std
mov
cld
add
lcall
imul
scas
loopne
out
jnp
jae
mov
aaa
sub
test
sbb
push
dec
mov
pop
push
adc
lcall
stc
add
divl
out
bound
in
push
add
inc
aam
sbb
dec
aam
sbb
inc
cs
mov
imul
fisttpll
fcoml
ret
cwtl
mov
out
pop
rol
xchg
rcll
test
dec
fcomps
ret
mov
test
xchg
or
mov
jmp
mov
shrl
and
gs
and
xchg
pop
pop
xchg
sub
pusha
push
cmp
scas
adc
jge
jl
sbb
mov
mov
inc
insb
icebp
cmp
lcall
cmp
inc
repz
jo
sub
add
lret
cmc
sub
cmc
sub
shll
in
cmc
iret
push
xchg
adc
das
sub
addb
test
xor
dec
add
scas
cmp
and
mov
sub
repnz
adc
dec
pop
add
pusha
jmp
leave
out
inc
ret
decl
leave
dec
cmpsb
push
pop
mov
ret
jg
in
hlt
cmp
aaa
lret
hlt
int
cmpsl
psubsb
inc
or
mov
mov
adc
or
js
or
mov
loop
adc
lret
push
pushf
lods
or
lock
sbb
ficompl
cli
or
sub
jb
imul
in
mov
lcall
and
jle
lods
cmp
push
mov
gs
dec
mov
and
add
inc
mov
int
inc
jp
sub
pop
jae
jno
or
xchg
cmc
cwtl
push
cmpsl
and
inc
xchg
fs
pusha
daa
mov
js
cltd
mov
push
inc
stos
pop
push
lcall
ret
xor
cwtl
into
add
in
fucomi
cmc
aad
imull
pop
loop
and
or
adc
out
repnz
or
enter
arpl
stc
orb
push
dec
lret
push
cmp
jnp
mov
xor
push
sbb
in
or
push
xchg
fadds
test
cmp
enter
inc
or
xor
sub
mov
inc
add
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
daa
sbb
outsb
idivb
or
add
dec
lock
sub
or
std
mov
mov
ja
aam
ljmp
mov
mov
jo
mov
cltd
negl
push
ds
or
sbb
nop
outsl
xor
movsl
outsl
rclb
daa
add
mov
js
es
inc
adc
add
test
repz
dec
jp
cld
pop
pop
fisubrs
loope
pop
pop
inc
ja
cmpsb
fwait
dec
test
scas
pop
or
mov
icebp
fucomp
mov
xorl
adc
test
sub
jb
enter
push
std
sub
in
push
sbb
roll
out
push
leave
or
push
cli
mov
sbb
adc
dec
adc
insl
xor
jbe
cli
pop
jae
inc
fwait
sbb
adc
xchg
sti
dec
out
idiv
xchg
pop
cmpsb
cmp
ret
sub
bound
mov
sub
sbb
mov
outsb
rorl
popa
mov
call
pop
fistl
iret
sub
xchg
enter
jae
mov
push
mov
push
mov
bound
add
daa
jmp
in
pop
aas
mov
mov
stc
or
mov
leave
out
fs
inc
rol
dec
test
fsubs
and
adc
sbb
pop
jns
and
jns
imul
sub
std
mov
mov
std
jg
mov
pop
mov
cmp
dec
aad
loope
cs
in
imul
pop
add
pop
popf
push
test
ficoms
arpl
sbb
push
in
insl
dec
adc
std
adc
in
xor
push
gs
mov
mov
insb
jne
test
add
leave
test
xor
pushf
jnp
xchg
jnp
es
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
fldcw
imull
adc
cltd
push
mov
jg
std
es
js
push
test
inc
lock
fldcw
inc
cmp
mov
sub
pop
add
cs
lods
imulb
inc
mov
pop
pop
ds
in
addr16
push
stos
clc
out
sub
mov
pop
xchg
cmp
and
ror
adc
xchg
dec
leave
leave
lods
dec
aad
hlt
xchg
inc
push
mov
push
xchg
mov
xor
sub
std
jge
cltd
call
mov
shll
repnz
add
pushf
int
push
rcrl
push
push
mov
stc
out
jl
ss
mov
pusha
pop
shll
xor
inc
lcall
mov
stos
push
repnz
rclb
xchg
dec
test
outsl
inc
je
sub
mov
jmp
dec
imul
mov
cs
jge
in
out
jo
cmp
or
imul
in
cmp
sbb
sub
imul
and
repz
xchg
jle
fnclex
ret
and
dec
sbb
xchg
lods
daa
in
xor
push
fwait
and
mov
sar
jns
aas
arpl
or
rol
je
and
out
gs
gs
bound
cmp
pop
mov
shrl
mov
mov
call
das
dec
add
jo,pt
jne
pop
addr16
inc
jno
push
mov
pop
sbb
pop
inc
inc
ja
adc
push
scas
cs
push
dec
ret
out
jo
fs
mov
and
fistpl
push
cmp
sahf
hlt
mov
or
loopne
mov
jg
xor
sbb
lret
xchg
out
icebp
outsl
cmp
mov
outsb
cld
pop
lahf
push
xchg
lods
pop
ficoms
xor
pop
mov
xor
rcrl
pop
jbe
lahf
dec
xchg
inc
mov
test
jg
jp
dec
cmp
inc
push
enter
aaa
adc
sub
mov
pop
push
sbb
shr
lahf
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
movl
stos
movlps
jo
sbb
jbe
fucomp
icebp
or
leave
push
adc
jbe
aad
in
test
cwtl
push
sbb
movsb
add
sbb
xchg
insl
repnz
cmp
xchg
out
or
data16
inc
push
shlb
leave
bound
les
mov
pop
ja
pushf
movsb
shlb
pop
es
pusha
out
push
pop
mov
leave
pop
xor
pop
clc
pusha
addb
movsb
mov
push
cmpsb
sbb
cmp
jecxz
fsubp
clc
fistpl
orb
sub
xchg
ds
cs
shlb
cld
cmp
daa
xchg
jbe
adc
faddl
shll
dec
jmp
aad
icebp
fsubs
cli
cwtl
addr16
xor
dec
lea
int3
cwtl
adc
mov
add
lea
icebp
inc
ror
xor
push
pop
mov
mov
das
and
mov
in
addr16
sbb
outsl
push
sbb
xchg
jecxz
xor
mov
jl
push
stos
cmpsb
lods
lcall
mov
mov
add
jecxz
js
sbb
cmpsl
xchg
jle
nop
adc
add
dec
pop
insl
xor
mov
inc
das
and
movsl
xchg
jb
jecxz
ffree
aaa
jge
rcrl
inc
fists
mov
and
adc
cmp
sahf
cmc
jmp
dec
shr
xor
ror
vmread
mov
push
xor
mov
cwtl
nop
pop
or
ss
xchg
int3
fldl
adc
mov
mov
adc
shll
or
cmpsb
sub
pop
pusha
das
cmc
insl
mov
out
push
push
push
jbe
popf
je
sbbl
cmp
dec
pop
and
inc
jecxz
push
xchg
int3
push
idivb
sub
pushf
push
loope
js
pop
dec
adc
mov
popa
add
sti
jle
jmp
je
jg
fwait
adc
adc
push
add
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
repz
xor
stos
movlps
push
iret
cwtl
sbb
sbb
pop
stc
push
ror
inc
mov
cmpsb
rcr
in
repnz
aaa
mov
out
imul
push
mov
mov
and
push
sbb
sub
xchg
inc
inc
pop
int
mov
outsb
pop
adc
jb
jecxz
aaa
loope
pop
stos
iret
das
loope
imul
jbe
pop
xchg
lods
pop
jmp
js
pop
scas
rorb
fnsave
lds
or
outsl
loopne
js
jne
sbb
mov
cmc
and
push
cmp
out
popf
xor
and
arpl
rorb
jns
lods
aaa
jmp
stc
inc
pop
test
jecxz
dec
cmp
adc
xor
out
fimuls
out
push
mov
fsubrl
addr16
int3
cs
stc
shrl
adc
jmp
pop
push
push
fcomip
mov
fcomps
inc
mov
inc
aaa
xchg
ljmp
in
sbb
jns
setl
or
in
mov
adc
bt
adc
test
movsb
push
pop
pop
daa
xchg
mov
jg
js
sbb
rorb
sbbl
jne
jbe
dec
rol
cmp
test
cmp
andl
mov
in
in
pop
pusha
sarb
mov
ds
dec
and
pop
mov
in
and
imul
leave
fists
int
adc
push
popa
sbb
hlt
xchg
sarl
aaa
imul
cwtl
aad
inc
xchg
lahf
sbb
stc
push
jo
stc
scas
ds
sbb
add
arpl
ficomps
cli
mov
xor
popf
insl
inc
cmp
pop
sti
cmpb
gs
xchg
sbb
sbb
cmovne
push
adc
ja
mov
enter
pop
aad
add
cmpsl
sbb
cmp
insb
pop
sub
push
sbb
scas
pop
push
in
mov
mov
jno
pop
out
cmp
mov
imul
sbbb
mov
flds
movsb
aad
popf
daa
mov
jnp
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
hlt
mov
insb
mov
adc
stos
movlps
pop
shlb
add
cwtl
pushl
testl
cmp
cld
add
fnstcw
in
push
push
jno
mov
pop
je
mov
fmuls
push
imul
mov
shrb
mov
pop
cmp
adc
or
test
int
push
mov
push
xor
cmpsl
mov
test
xchg
mov
mov
sbb
and
mov
sbbl
lahf
jp
add
sbb
mov
push
add
pop
cmp
mov
sbb
adc
sbb
xor
sbb
push
mov
popa
cmp
cs
and
add
cmp
dec
andl
xchg
mov
xchg
xor
jge
mov
inc
mov
xlat
in
inc
cwtl
add
xchg
adc
mov
fists
divl
inc
cmp
pop
push
jle
leave
xchg
shrb
or
add
jmp
outsb
xor
popf
xor
jmp
jl
mov
push
rorl
cmp
mov
lds
jns
std
adc
scas
insb
in
mov
out
sbb
adc
mov
popf
add
sub
sbb
add
shrb
ret
cmp
mov
add
mov
adc
je
adc
pusha
je
inc
sub
add
cwtl
push
mov
add
stos
test
std
pop
push
orb
xlat
shrb
xchg
dec
aas
cltd
mov
sub
fmuls
cmp
mov
int
cld
inc
jl
adc
ja
mov
mov
roll
mov
repz
lods
int
leave
pusha
and
fists
dec
fldcw
sti
adc
xchg
pop
orb
jbe
cltd
sahf
mov
jmp
shrl
dec
test
and
addl
xchg
das
add
mov
adc
fimull
xchg
jmp
outsb
mov
add
fisttpl
push
cmc
mov
bound
fwait
xor
mov
pop
jecxz
sub
lahf
dec
out
and
fdiv
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
popa
test
aaa
xchg
pop
sti
lds
push
movsb
inc
push
lods
fstps
jbe
movsl
mov
inc
mov
adc
inc
das
mov
ss
pop
fcmovbe
dec
js
add
mov
jns
sbb
xchg
test
js
push
push
or
sub
mov
push
jno
aaa
add
jecxz
sub
pop
xor
or
add
push
push
fmulp
repz
adc
push
mov
jns
stos
aas
sarl
xlat
xchg
pop
add
andl
enter
cmp
and
repz
or
mov
jno
or
push
and
std
std
push
pop
iret
popf
adc
fldl
loope
les
lds
and
ret
ds
es
pop
fs
and
lahf
push
push
test
shll
jp
pop
bound
sbb
pop
leave
mov
adc
jge
or
nop
dec
sbb
or
inc
fdiv
and
int3
push
inc
xor
cltd
das
xchg
sti
dec
dec
nop
cmp
movsb
cmpsl
pop
insl
pop
lds
and
test
xchg
mov
ss
cmp
mulb
inc
sub
mov
sub
gs
jecxz
sub
fidivrl
jae
dec
gs
mov
push
mov
jae
xchg
jmp
fdivs
sbb
or
mov
cs
pop
add
pushf
push
pop
loopne
out
fmuls
lea
jmp
incb
cmp
jge
xor
mov
popa
mov
mov
mov
lret
out
out
jmp
mov
movsb
mov
inc
cmp
jge
daa
inc
jmp
dec
or
jae
add
mov
inc
mov
push
repnz
push
fimull
mov
or
mov
mov
add
push
orb
ret
pop
mov
test
adc
sub
mov
add
test
movsb
mov
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
cmp
test
nop
ja
xchg
add
test
les
sbb
add
daa
xlat
into
cli
adc
imul
icebp
and
sub
cmp
xchg
pop
bound
push
cmp
fstl
push
cmpl
sbb
shlb
in
jb
movsl
xor
js
pop
add
cmp
lods
push
push
mov
pop
adc
and
fcmove
xchg
sbb
sahf
jecxz
jle
pop
in
fdivl
lods
sbb
or
jp
add
repnz
sbb
pusha
pop
xchg
in
mov
push
mov
inc
movsl
je
rcl
mov
or
mov
xlat
jbe
subb
jmp
pop
mov
add
nop
sti
cmpsl
icebp
push
or
or
rcl
jg
mov
cmp
or
or
inc
jge
add
aas
out
dec
out
xchg
cmpsl
push
addr16
lds
hlt
adc
mov
leave
inc
mov
xorl
jp
jl
or
sbb
push
adc
xchg
dec
pop
sbbb
cmpsb
subb
xchg
iret
mov
jo
pop
int
movsl
pop
lahf
or
mov
add
or
sar
xlat
daa
mov
jle
sub
icebp
jmp
inc
push
add
dec
sub
and
xor
lods
cltd
pop
lods
xor
pop
daa
clc
shlb
add
and
adc
into
pop
hlt
and
repnz
fs
mov
rcl
in
dec
movsb
xchg
push
push
cmp
decb
sbb
mov
fs
lret
xchg
jle
dec
adc
lret
and
add
out
jb
outsl
icebp
sub
aaa
fs
mov
subb
clc
sarl
fxch
sub
clc
sbb
xchg
adc
hlt
cs
ficoml
pop
insb
clc
outsl
mov
sbb
ret
push
mov
mov
lret
and
shll
add
out
fcompl
movsb
imul
mov
jge
lock
fcoms
addb
inc
out
pop
cltd
popa
and
shrb
pop
rclb
rorb
sub
pushf
outsb
jno
clc
push
jae
mov
pop
mov
jecxz
push
adc
xchg
add
pop
lods
out
xor
xchg
outsl
std
gs
sub
jp
xor
sbb
lcall
mov
cmc
loope
sbb
xchg
sbb
hlt
flds
adc
int
push
mov
insl
mov
mov
adc
pop
subb
jnp
fdivrs
and
sbb
fdivrp
push
mov
repz
mov
fs
imul
movsl
cmc
pop
fstpt
rcrb
and
jp
sub
aam
cwtl
movsb
sbb
fistpl
ljmp
fld
daa
xor
or
add
aaa
popf
mov
or
lods
and
xchg
mov
push
xor
xchg
push
lret
lods
in
mov
lahf
mov
xchg
pop
test
outsb
pop
ret
xor
jecxz
mov
cmp
nop
fdivl
cmc
xchg
hlt
out
or
mov
mov
aas
ss
xchg
fisubs
punpcklwd
in
mov
sub
sbb
dec
push
lahf
lods
in
je
or
xor
xchg
push
mov
enter
insl
mov
inc
out
pop
sbb
rcll
ss
mov
fstl
xchg
gs
iret
fs
jb
cmova
jmp
loopne
adc
inc
bound
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
jns
lods
loop
adc
pop
adc
adc
ret
cmc
int3
popa
and
les
add
mov
push
aad
cmp
adc
cmpsl
aaa
add
stos
jne
shlb
test
outsl
stos
notl
cmpsl
scas
loop
insb
mov
xchg
sbb
cld
jge
sbb
pop
lods
int
icebp
sub
add
cmp
jb
ljmp
into
adc
insb
imul
push
or
push
data16
sarl
test
push
add
frndint
or
sub
out
jo
repz
jl
xchg
scas
loop
out
pop
in
testb
sub
cs
push
adc
xchg
daa
nop
imul
inc
or
repnz
xchg
add
xor
jb
rolb
imul
loope
mov
sti
lds
dec
sub
dec
dec
mov
sbb
in
lret
jecxz
xchg
les
pop
imul
je
ret
ds
sbb
sbb
fidivrs
sub
adc
lahf
push
pop
push
jno
insb
jmp
int
cmp
movsl
aas
cmc
popa
add
push
pop
mov
mov
or
mov
js
cli
insb
mov
jmp
out
jecxz
sub
inc
cwtl
pop
adc
rol
pusha
sbb
jl
mov
lods
add
lods
ret
sub
adc
jl
mov
call
push
fdivp
push
jnp
xchg
iret
mov
dec
mov
adc
adc
loop
inc
lock
mov
lcall
shrb
xor
mov
insb
dec
cmpsl
sub
xchg
push
mov
and
ljmp
ja
clc
ss
mov
bound
mov
movb
cli
mov
jp
sbb
leave
inc
sbb
aas
hlt
ja
mov
push
add
pop
sbb
mov
or
aad
mov
dec
and
inc
push
xchg
or
test
out
pop
pushl
mov
mov
out
pop
or
push
jne
xor
push
dec
sbb
jl
in
stos
nop
repz
pop
or
dec
xchg
or
adc
push
adc
rclb
loopne
mov
in
repnz
movsb
mov
cmpsl
cmp
push
add
push
inc
mov
arpl
mov
mov
ret
std
nop
jmp
ja
mov
xchg
mov
sahf
inc
mov
loopne
movsb
push
cmpsb
clc
stc
xchg
lods
sub
mov
xchg
add
data16
pop
or
outsb
les
mov
test
in
jge
flds
xchg
js
out
jnp
adc
rorb
int3
add
enter
xlat
or
mov
add
movsb
shll
and
cmp
lea
xchg
in
sbb
cwtl
jmp
and
outsl
fcomp
fistpl
in
pop
inc
push
pusha
imul
pop
mov
loop
and
mov
inc
xor
inc
rcrb
add
xchg
dec
pop
lock
cmovp
in
mov
sbb
iret
sbb
shlb
pushf
fistpl
incl
sahf
and
cs
insl
mov
mov
lds
xor
mov
xor
pop
data16
cmp
add
int
stos
sahf
test
sahf
xchg
loopne
sarb
xor
mov
and
inc
xchg
xor
push
cltd
pop
shlb
arpl
iret
adc
xchg
test
mov
push
xchg
or
repnz
test
jnp
dec
jl
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
and
mov
movlps
xor
xor
adc
sub
outsl
cmp
push
adc
mov
pop
or
call
mov
add
and
daa
shll
mov
rcll
sti
cmp
icebp
andb
lret
enter
cld
add
into
sub
fbld
xor
out
jg
sub
fisttps
xor
stc
push
shll
stos
mov
push
movsb
mov
xor
add
mov
dec
adc
xchg
cmc
adc
mov
repz
insb
xchg
loop
movsb
mov
mov
push
test
in
ds
or
add
dec
enter
out
mov
aad
hlt
push
out
push
mull
jb
pop
push
cmc
fmuls
rorb
in
push
pop
mov
fisubrs
push
shlb
or
sbb
sub
fistpll
ja
mov
push
es
and
mov
outsb
nop
in
jecxz
aaa
sub
push
mov
mov
sub
push
pop
je
test
stos
cmpsl
sbb
lret
lock
adc
or
fimuls
adc
adc
ret
lods
stc
inc
dec
xchg
repnz
pop
rcrl
xchg
xchg
outsb
sub
lds
out
cmpsb
divl
add
daa
mov
xor
cs
pop
or
xor
mov
notb
push
mov
popf
cwtl
or
movsb
add
or
jo
cmp
fwait
inc
push
imul
aaa
arpl
add
adc
add
xchg
jne
mov
sahf
adc
ret
sbbl
mov
in
aad
lock
pop
ret
push
ss
lret
pop
inc
out
and
cmpsl
insb
test
add
mov
lret
mov
push
dec
pop
jns
add
fldcw
push
test
jle
lcall
cmp
mov
cmp
sub
jne
cmpsl
or
xor
adcb
repz
jmp
or
imul
cmp
jecxz
cltd
mov
push
rcll
mov
add
leave
mov
arpl
movsb
sbb
push
sbb
jbe
and
push
jle
mov
sti
sub
pushf
out
aad
jmp
add
mov
imul
enter
fidivl
cmpsl
lahf
cmp
pop
scas
xor
mov
mov
jo
sbb
out
ja
xor
mov
enter
cltd
lahf
in
fdivl
std
roll
pop
ja
sbb
adc
ret
leave
cmpb
inc
orb
xchg
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
push
pop
jmp
xor
fldl
cmp
cli
jmp
call
int3
xlat
shrl
rclb
movsl
inc
cmpsl
inc
xchg
outsb
repz
jp
adc
add
jne
roll
sub
mov
movb
mov
sub
jae
inc
ret
mov
test
imul
les
aas
dec
pop
outsl
lds
fadds
cmpsb
push
dec
aas
cltd
inc
fistl
xchg
adc
push
adc
xor
dec
inc
out
ret
adc
aam
insl
loop
inc
arpl
or
inc
pop
mov
sbb
adc
jo
mov
adcl
cmp
stos
jo
mov
mov
xor
mov
inc
sbb
idiv
jae
repnz
mov
sub
and
cld
stos
jbe
xor
into
cmc
pusha
mov
xor
push
jns
inc
loopne
mov
jle
xchg
adc
xor
roll
ret
mov
inc
hlt
cmpsl
psubsb
sbb
add
sub
stc
in
pop
scas
mov
fistpll
add
aam
cmc
and
xor
fcomps
sub
xor
sub
push
jmp
xchg
in
cli
ret
in
inc
inc
mov
or
xchg
icebp
sub
bound
popa
hlt
and
push
scas
fidivs
jnp
pop
idivb
es
lea
lods
sub
fs
pop
adc
cs
dec
pop
leave
sub
push
mov
imul
mov
xchg
mov
dec
aam
pop
push
fcoml
clc
stos
inc
mov
xchg
ret
in
leave
movsl
stc
mov
std
or
insb
push
test
ja
cli
push
xchg
fs
sbb
mov
lods
aas
pop
xchg
enter
lcall
mov
xchg
paddd
add
dec
fdiv
inc
xlat
pop
xchg
test
cld
lods
scas
ss
popa
outsl
add
and
pop
hlt
rep
pop
cmp
push
out
mov
gs
mov
sub
and
and
dec
jge
je
popf
push
repz
imul
jmp
enter
enter
das
jo
in
mov
mov
xchg
cmovno
xor
mov
pop
pop
mov
in
cmp
mov
add
mov
cmp
loope
inc
inc
mov
lcall
nop
aas
push
sub
in
popa
frstor
loope
aam
push
aam
dec
cmpsl
js
cmpsl
sbb
push
mov
out
pop
xchg
inc
jle
inc
pop
add
mov
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
je
add
adc
movlps
mov
xor
mov
push
fxch
imul
mov
lret
mov
add
in
leave
sub
sub
ds
or
pusha
aaa
cltd
mov
pop
in
roll
sub
or
mov
aas
adc
scas
lock
imull
pop
scas
xchg
adc
mov
mov
aaa
stos
dec
jl
inc
or
xor
cmp
mov
push
cmp
fdivl
rol
xor
loope
fdivl
lods
mov
aad
xchg
stos
xor
add
push
adcl
fwait
dec
mov
dec
mov
repz
mov
call
adc
mov
fs
pop
add
dec
cs
xor
cmp
mov
cmp
popf
mov
loop
dec
movsl
or
push
sub
scas
mov
jl
cwtl
xor
repnz
jecxz
mov
ret
imul
stos
jle
in
ljmp
cs
pusha
add
pop
je
push
sub
and
mov
mov
pop
inc
xchg
and
xor
jecxz
pushf
divb
enter
out
and
lcall
mov
mov
rorb
cmpsb
lds
int3
xchg
mov
pushf
cltd
push
jno
dec
fadds
mov
sub
call
ficomps
pop
push
cmp
mov
push
cmp
repnz
dec
shlb
mov
pop
jbe
ss
jecxz
lods
daa
stc
sbb
cmp
test
fnstenvs
xor
xor
dec
ss
lahf
or
xchg
loope
int
std
ret
arpl
sub
psubq
sub
cmpsl
sbb
stc
or
or
xchg
gs
mov
xor
pushf
or
jg
jno
sub
push
or
jbe
pop
and
scas
jg
leave
in
rcll
dec
and
mov
cmp
push
out
int
ret
xchg
pop
rcl
add
inc
test
xchg
add
daa
cmp
mov
cmp
pusha
pushf
sbb
pop
xchg
jmp
add
xchg
das
push
lret
lret
sti
mov
jno
divb
xor
insb
cmpsb
shlb
mov
cli
fldt
lds
mov
dec
test
cmp
inc
subb
jno
inc
sub
data16
dec
fadds
test
call
or
pop
scas
dec
rol
scas
icebp
mov
lods
loop
out
fbstp
dec
mov
or
test
addr16
cmp
scas
cltd
pushf
sub
push
push
das
xchg
out
cmc
stos
jl
test
xor
pop
jmp
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
jge
add
adc
cmp
mov
cs
jne
dec
sub
xor
shrl
mov
mul
jmp
mov
pop
nop
xlat
lods
outsl
push
jge
jns
cli
mov
and
adc
mov
mov
sbb
shlb
mov
adc
aad
lahf
shlb
jl
jp
rcrb
into
adc
imul
clc
pop
or
cmp
mov
inc
cmpsb
ja
mov
pop
mov
add
push
xchg
pop
adc
in
xchg
dec
pop
sbb
push
fisubrs
stc
inc
aam
imul
outsl
inc
fnsave
mov
aaa
arpl
adc
mov
and
jbe
cmp
cwtl
or
sub
xorl
push
loopne
jbe
sti
imul
mov
mov
pop
fwait
mov
xchg
jns
cmp
cld
mov
mov
rorb
dec
fimull
dec
push
mov
jecxz
sub
cld
pop
out
push
gs
lret
pop
xlat
jne
into
jmp
xchg
in
in
ja
pop
adc
es
cmc
fildll
pop
shlb
xor
aaa
lods
leave
pusha
cmp
dec
movb
push
or
xchg
mov
mov
jle
out
shll
inc
and
icebp
das
int3
dec
outsb
mov
mov
dec
mov
cmpsl
mov
ret
cmp
xor
xor
mov
push
pop
test
sbb
fldenv
jmp
cmpsl
push
rclb
push
inc
cmp
pop
lret
stc
jmp
add
jno
incl
xchg
pop
dec
adc
cmp
lock
shrl
cmp
rclb
enter
xor
mov
leave
stos
sub
and
add
test
inc
pop
aam
divl
stc
cmp
xchg
lret
gs
push
mov
enter
push
sub
data16
cmpsb
clc
lods
subps
int3
mov
aas
ja
enter
adc
cmc
add
insb
lods
mov
adc
test
push
and
mov
loopne
mov
rol
test
fwait
je
xchg
shl
leave
dec
icebp
cwtl
in
pop
in
cmpsb
xchg
orb
movsl
mov
mov
mov
add
inc
mov
inc
addr16
xchg
bound
bound
push
or
fadds
cmp
xchg
flds
jle
mov
jno
jmp
xor
pop
pop
cwtl
xchg
inc
xor
lret
mov
pop
mov
pop
jg
lcall
scas
bnd
leave
add
cwtl
xchg
fs
lea
mov
inc
cmpl
cld
jns
or
push
faddl
test
inc
cmpsb
repz
inc
pop
leave
dec
push
test
pop
sub
add
push
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
lea
fists
lods
jg
pop
out
jp
mov
lahf
daa
es
cs
add
or
sub
mov
stc
cmp
jae
sub
std
in
mov
arpl
cmp
test
out
mov
inc
jmp
insb
push
xchg
ret
and
insb
jg
movsb
mov
test
imul
xor
je
xchg
outsl
stos
ja
sbb
das
fidivrs
fildl
loop
jp
popa
and
subl
in
add
cmpsb
dec
dec
adc
mov
loop
das
in
pop
test
leave
xchg
nop
jecxz
mov
mov
mov
test
loop
and
xor
xchg
lret
cld
pop
js
aas
mov
imul
sbb
out
jns
pusha
jno
mov
stc
pop
movsb
in
xchg
cmpsl
jne
jae
outsb
enter
das
int3
scas
xchg
xchg
ds
cmp
push
mov
idivl
or
stc
inc
aad
inc
pusha
fcmovnu
mov
xchg
push
add
push
cmc
and
pushf
inc
movb
mov
bound
fsubrp
and
and
inc
dec
add
mov
stos
in
lock
pop
dec
and
out
daa
cmpsl
fsts
std
cmp
jg
inc
std
add
add
mov
aam
ss
into
pop
jle
outsl
and
repz
sbb
mov
xlat
cmp
mov
test
aam
pop
scas
add
imul
jmp
mov
push
dec
fdivp
inc
stc
arpl
adc
lods
mov
jae
push
std
out
cmpsb
out
jae
lods
mov
stos
inc
inc
adc
add
outsl
mov
je
les
push
cmc
repz
outsl
movsb
sahf
jg
inc
push
into
rep
lcall
sbb
fistpll
cmp
and
xor
popf
cmp
pop
xlat
jb
push
shrl
addl
xor
mov
clc
jl
lea
cmp
mov
loop
fcom
aas
repnz
aas
shlb
xor
call
xor
pop
inc
jmp
insb
enter
mov
lret
ss
cmpsl
test
and
jecxz
ret
test
xchg
aas
mov
repz
mov
jecxz
inc
cmc
clc
push
es
xor
cmp
add
sahf
subl
sti
and
cld
pushf
fmul
push
sub
mov
mov
movsb
adc
lds
mov
insl
int3
cmp
jae
add
cmp
js
shlb
ljmp
sarb
aad
add
stos
push
jbe
and
ficoms
push
push
fsubrl
fistpl
je
dec
es
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
mov
adc
or
stos
and
pop
movb
imul
pop
cmc
mov
cli
mov
pop
int
popa
popa
les
mov
ret
and
rcrl
jnp
loopne
dec
jb
push
dec
jmp
cmp
sub
jecxz
sar
ret
int3
push
push
aaa
inc
js
and
push
sbb
enter
sub
dec
test
loope
enter
xchg
aam
or
push
inc
ss
cmp
test
sahf
mov
lcall
fwait
or
out
sub
sub
xchg
sbb
loopne
cmp
pop
inc
clc
sub
aas
andb
sub
xchg
ljmp
ss
add
sub
sub
popf
outsl
jb
shrl
push
testl
ss
mov
addb
out
int3
mov
xor
lods
sarw
mov
mov
mov
and
cmpb
jno
sbb
dec
fidivl
xchg
popa
add
outsb
xchg
adc
jnp
enter
cmpl
stos
pusha
in
xchg
dec
add
mov
loopne
xchg
fadds
sub
or
in
inc
mov
ret
lret
shl
test
mov
sbb
nop
mov
rcrl
ffreep
ja
mov
pop
lcall
inc
cmp
and
jae
jbe
cmp
outsb
hlt
cmp
and
mov
sti
jae
in
lods
mov
push
adc
outsl
fs
call
xor
push
stos
outsl
dec
test
lahf
xchg
jo
imul
and
in
xor
dec
test
ret
cmp
xchg
xor
mov
lods
inc
xchg
pop
jge
xchg
aaa
push
pop
push
add
sub
or
ret
shl
enter
sar
xchg
lds
nop
xorb
ficompl
aad
fdivrs
pop
and
mov
aam
push
popf
ret
sbb
pop
in
roll
sbb
das
lahf
add
xchg
stos
mov
idiv
or
push
ret
push
inc
jne
xchg
sbb
xchg
rcll
jo
mov
mov
inc
adc
pop
in
sar
imulb
mov
movsb
test
cwtl
or
imul
jne
aas
cvttps2pi
outsb
andl
pop
ja
xor
jmp
inc
ret
clc
mov
xchg
lahf
jo
fimull
pop
or
into
xchg
popa
test
mov
add
jb
insb
shr
sub
jns
aas
stc
cmp
xor
fcomip
xor
mov
adc
lcall
cwtl
jl
rcrb
data16
js
jg
push
mov
pop
test
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
fsubrs
pusha
loop
jecxz
cs
hlt
push
push
outsb
clc
dec
add
sub
push
mov
hlt
out
add
push
mov
mov
push
addr16
es
out
stc
cmp
fidivs
dec
push
inc
mov
cmpxchg
fstpl
pop
push
jno
fists
mov
pusha
sbb
lods
push
sub
rcll
mov
jns
jg
fnstenv
sarl
mov
shl
cmovbe
mov
sahf
mov
js
xor
jmp
mov
xor
xchg
sub
mov
jge
cld
ficomps
rclb
mov
loop
push
dec
fs
mov
sbb
jnp
push
cmp
jnp
xchg
and
push
xor
fildll
imul
pop
aas
jb
xchg
xor
jb
hlt
pop
loop
sahf
stc
cs
adc
fcomps
cmp
inc
push
out
inc
ss
push
in
loop
dec
or
cmp
mov
icebp
stos
mov
les
sub
jp
mov
push
fldl2t
rcrl
push
lcall
arpl
sbb
lods
or
enter
adc
sbb
xchg
cs
sub
mov
inc
or
loop
pop
jbe
lods
ret
loop
data16
int3
xchg
fcoml
and
imul
flds
push
mov
fists
loope
pop
mov
pop
movsl
jbe
les
in
ret
call
mov
inc
push
dec
lret
ds
movsl
xchg
pop
or
pop
cmp
xor
nop
fisttpll
shrb
movsl
leave
push
loope
pop
dec
clc
outsl
xchg
cmc
test
and
sub
scas
call
ljmp
das
and
push
mov
xor
mov
jns
out
loopne
bound
cld
call
test
dec
shll
fwait
ret
xorl
pop
cltd
addr16
int3
ja
and
jb
leave
outsl
pop
shll
ret
pop
popf
pop
sbb
dec
or
push
je
enter
adc
inc
test
or
clc
xchg
ja
arpl
cwtl
jb
dec
int
sub
outsb
arpl
idiv
mov
mov
sbb
jbe
ljmp
idivl
jne
pop
adcb
sbb
out
testb
sbb
lock
pusha
cwtl
inc
mov
icebp
cmp
sbb
scas
mov
xchg
inc
adc
adc
push
push
and
in
cmp
mov
jnp
jnp
sbbb
popa
aaa
cmc
and
mov
aaa
outsl
in
fistl
rcl
mov
lods
insb
add
mov
or
in
ds
dec
pop
int3
pop
add
fsubl
jecxz
movsb
or
je
mov
lret
outsb
mov
pop
mov
mov
and
inc
pop
ficoml
into
test
arpl
shrb
jb
mov
inc
and
sti
stos
pop
js
dec
iret
pushf
iret
mov
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
push
cli
mov
adc
adc
adc
jle
lea
mov
icebp
jae
xor
sbb
fimuls
jnp
xor
jp
xor
xor
add
xchg
and
and
inc
inc
cmp
ja
and
dec
jno
aad
sub
imul
adc
xchg
adc
add
pop
add
xchg
test
loop
fwait
jecxz
sti
inc
dec
pushf
out
mov
and
jl
inc
cwtl
mov
xchg
in
adc
decb
dec
dec
cltd
aaa
ss
mov
sbb
ja
inc
pop
cmc
loopne
lea
dec
cli
push
cmpsb
ror
jbe
cmp
inc
in
dec
stos
cmp
push
inc
sbb
jle
cwtl
popf
push
dec
cli
sub
inc
cmp
inc
xor
fimuls
bound
pop
xor
and
mov
jge
pusha
fnsave
sbb
xchg
push
fptan
adc
sbb
or
dec
mov
cmpsl
stos
mov
movsl
fcoml
bndstx
aas
pop
loope
push
mov
in
mov
pop
mov
lock
sbb
adc
aam
jecxz
add
aad
pushf
loop
adc
je
jl
jnp
and
adc
repnz
inc
adc
loope
shrb
mov
movsl
mov
or
and
mov
dec
out
lock
mov
xchg
inc
sti
add
sbb
xchg
xor
nop
sbb
testb
inc
or
inc
nop
aam
shll
dec
das
xor
pop
adc
and
cltd
xor
pop
std
mov
jae
pushf
push
xor
sub
idivl
cld
xchg
xchg
sub
sti
scas
mov
std
les
mov
into
jmp
xor
cmc
outsb
movsl
cmp
and
inc
pop
mov
mov
xor
test
jns
or
inc
adc
sbb
inc
xlat
std
xchg
repnz
cmp
outsl
xchg
sbb
out
inc
jb
dec
loopne
sub
imul
adc
insb
push
je
sub
push
nop
xchg
test
pop
pop
out
or
add
lahf
cmp
dec
sbb
cmpsb
adc
xlat
out
push
daa
loop
test
mov
cmp
xchg
repnz
int3
sub
loopne
dec
adc
fsubr
or
lock
int3
mov
int3
or
lods
mov
inc
adc
cmp
les
cli
push
dec
pusha
call
outsl
ds
push
cmp
hlt
icebp
fnstsw
stos
sub
mov
sub
jl
jne
and
fmuls
call
fcoml
in
mov
mov
mov
mov
inc
xchg
or
test
cmc
roll
rcl
xor
mov
shr
jns
xor
lcall
fisttps
pop
sbb
add
lea
push
out
out
mov
insl
outsl
aad
sbb
jno
fs
mov
sbb
lea
push
dec
and
xchg
inc
test
int
cld
outsl
pop
dec
rolb
bound
iret
pop
xor
adc
jb
mov
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
pop
fdivrs
adc
jp
adc
aaa
ljmp
popa
sub
mov
pop
adc
jnp
jg
push
jne
xchg
pop
xchg
sub
idiv
insb
lods
daa
out
dec
xlat
xchg
ret
xlat
jnp
mov
daa
test
or
incb
movsl
add
into
push
push
stc
sti
push
rorl
dec
cli
lret
cltd
das
int
cmpsb
cmp
inc
mov
inc
add
xor
out
mov
loopne
in
outsb
aaa
jno
pop
sub
clc
jno
push
mov
and
mov
push
mov
pop
and
pop
int3
iret
inc
call
movq
and
enter
mov
inc
sub
jo
jo
sbb
sbb
rcl
sub
dec
dec
fwait
mov
std
and
fsubs
mov
and
push
out
and
loope
dec
push
dec
xorl
call
fs
jmp
outsl
repz
add
ss
push
rcll
or
sarb
rorb
clc
int
mov
test
enter
pop
into
mov
pop
mov
or
stos
sub
jmp
clc
mov
mov
mov
movsl
repnz
cmpsl
out
les
aam
test
aam
lcall
mov
jno
cmc
mov
shrl
imul
mov
dec
cmp
aad
test
add
push
inc
sub
and
adc
mov
enter
sahf
aad
mov
lret
aaa
sti
push
xchg
jno
xchg
lods
in
push
iret
nop
shlb
mov
xchg
dec
add
dec
push
sbb
mov
cmp
outsl
shll
mov
push
aad
mov
cmc
add
movsl
jmp
pop
xchg
insl
movsb
outsb
push
push
xor
sbb
mov
stos
mov
mov
cltd
popa
mull
and
push
rcll
cli
int
dec
repz
sarb
sub
enter
outsb
pop
pop
iret
and
dec
xor
mov
pop
mov
mov
daa
movsl
xor
js
jne
ficomps
inc
sub
je
in
mov
push
push
jnp
mov
or
cmp
inc
ja
idiv
and
dec
test
and
xchg
mov
push
xor
incb
mov
mov
sbb
repnz
jmp
jmp
push
mov
lds
cmpsl
add
cmpsl
mov
fimuls
jo
adc
sub
stos
add
pop
test
lods
jno
popf
adc
xchg
outsb
sub
out
out
insb
repnz
pop
xor
scas
arpl
jbe
or
lcall
sub
push
imul
sarl
leave
or
push
filds
loop
mov
sti
xchg
xchg
cli
int
test
inc
enter
aas
mov
rolb
xor
ret
mov
fmulp
enter
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
add
jp
adc
mov
popa
sbb
shr
and
shlb
xor
ret
jo
fstps
mov
and
lret
ds
daa
mov
ja
aad
in
fwait
movsl
xchg
cli
push
push
lods
inc
andl
sbb
aam
inc
inc
mov
mov
jae
addr16
xor
dec
aaa
mov
mov
sbb
sbb
cmp
in
and
in
xchg
jae
cmp
sbb
xchg
push
add
iret
les
or
mov
dec
push
stos
pop
and
test
test
inc
ret
inc
icebp
aaa
mov
sbb
lods
ja
bnd
dec
aaa
out
fstpl
andl
sbb
insb
bound
imulb
repz
xchg
aad
xor
push
inc
roll
shl
aam
fucomp
lods
int
xchg
or
mov
xor
xor
or
dec
mov
cmp
addr16
dec
shl
mov
popa
sub
push
jg
push
rorl
out
xchg
push
xchg
cmpsb
push
ret
or
push
pop
mov
add
stc
mov
ficompl
repnz
or
out
outsb
cld
sub
das
rorb
jbe
cmp
mov
mov
es
ror
es
xor
fbld
aad
push
xchg
xchg
lods
inc
pop
sti
inc
jbe
fidivrl
gs
insb
adc
mov
notb
jae
je
pop
scas
mov
adc
inc
hlt
gs
push
leave
or
and
xlat
jae
hlt
pop
jne
shrl
leave
push
movsl
push
pop
rcll
mov
dec
fdivs
hlt
repz
fadd
das
rcrb
fwait
xchg
hlt
out
sub
lret
ret
leave
lret
lods
aas
fnsave
sti
and
mov
mov
pop
and
pop
or
call
inc
out
popa
xchg
orl
ss
popf
out
in
sub
imul
jl
fmull
mov
inc
cmc
out
cmp
add
mov
lods
xor
stos
out
lcall
loop
mov
out
test
cmp
push
pop
jbe
arpl
ljmp
insb
mov
adc
jecxz
push
insl
in
das
mov
test
pushf
adc
imulb
movsb
insl
arpl
sub
fsts
pop
faddl
mov
cli
lods
adc
fdivl
test
xorl
pop
popa
mov
jmp
cmp
sub
jg
mov
xchg
in
loope
pop
cmp
je
xorl
repz
sbb
adc
xlat
mov
and
mov
add
sub
inc
fadds
and
lret
pop
xlat
mov
cwtl
rorl
adc
adc
dec
imul
mov
ss
add
or
inc
shll
inc
dec
mov
adc
sub
add
cltd
mov
scas
mov
dec
shll
adc
rol
out
cwtl
or
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
adc
adc
fld
xor
cmpsl
nop
icebp
mov
rcrl
in
or
fisubl
xor
lods
icebp
in
test
and
mov
inc
jp
dec
insl
addb
js
daa
dec
repnz
stc
sbb
push
xlat
lret
mov
push
adc
sbb
mov
jmp
dec
test
add
lret
cmc
movsl
sar
psubsb
lods
mov
cmp
dec
sub
stos
cmpb
push
daa
out
repz
aam
push
jo
or
imul
push
movsb
mov
sbb
and
mov
dec
inc
pop
add
mov
and
mov
icebp
or
push
sbb
add
jbe
or
insb
inc
lods
xchg
sub
mov
popa
out
push
lds
push
fimuls
scas
jnp
arpl
fldenv
insb
or
pushf
in
push
push
mov
adc
addr16
pminsw
sbb
sbb
pop
mov
mov
push
jno
xchg
pop
test
jbe
mov
lods
clc
shl
leave
movsb
mov
lret
mov
and
xorl
or
jl
adc
pop
pop
xor
mov
out
xchg
push
scas
inc
mov
popa
mov
push
negl
fdivrs
jae
scas
int
aas
stos
mov
sbb
inc
dec
pop
xor
sbb
inc
xor
jp
js
xor
loop
ljmp
cmpsl
mov
aaa
mov
in
sti
stos
dec
std
out
fisubs
push
sbbl
push
inc
sbb
imul
dec
les
repnz
sbb
push
push
aam
sti
inc
popa
mov
scas
cmpsb
xor
fcomps
jle
out
push
incl
and
pop
daa
in
dec
lret
push
ror
out
adc
aaa
pop
jo
mov
loopne
xchg
bound
dec
push
sub
push
mov
out
gs
aad
imul
adc
mov
push
popa
sub
ficompl
cmp
xor
pop
daa
lock
or
gs
sub
sub
stos
cmp
lcall
jns
sub
sub
and
inc
mov
lods
sub
popa
mov
enter
sub
mov
int3
and
mov
into
add
dec
inc
or
mov
into
mov
test
xchg
or
test
inc
mov
sbb
xchg
arpl
jmp
adc
push
test
xchg
dec
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
jo
push
xor
movsb
loope
outsl
mov
sti
pop
push
or
adc
jb
fimuls
dec
cmp
push
jg
sbb
mov
xor
arpl
xlat
int
fbstp
mov
cmpsl
test
sub
fstps
shl
rcl
inc
mov
mov
jl
and
fcmove
lret
pushf
add
mov
xchg
jle
fwait
lods
fdivrs
je
push
dec
pop
sbb
loope
movsb
cmp
jb
ja
test
call
cmc
bound
cwtl
fs
cmp
xchg
push
cmp
push
xchg
xchg
fcmovnb
daa
into
mov
ja
push
cmp
icebp
test
add
into
clc
mov
pop
orl
and
jnp
or
call
or
or
jle
add
out
push
jns
mov
rorl
push
test
add
pop
das
xor
sub
mov
pop
das
add
sti
push
mov
adc
xor
sub
mov
neg
mov
push
cmp
adc
ficoms
daa
cmovno
inc
xchg
or
les
out
sub
repz
mov
sbb
jnp
das
das
std
mov
scas
arpl
add
hlt
add
enter
xchg
dec
mov
adc
mov
scas
mov
add
in
xchg
push
jo
pop
add
sbb
jl
push
repz
movsb
mov
ret
cmpsb
fistl
rcl
pop
mov
divb
in
imul
shlb
push
ret
adc
and
out
xor
in
inc
ja
and
movsb
imul
fwait
jl
adc
jecxz
dec
pop
fcomps
sub
ss
daa
dec
inc
popa
scas
aas
iret
inc
sbbl
ss
outsb
mov
jle
cmc
aad
and
aas
sub
fwait
stos
loope
dec
mov
cmpsb
mov
test
loope
mov
aam
popa
test
dec
repz
cli
or
xor
sahf
mov
push
adc
dec
cld
sbb
push
xchg
dec
arpl
iret
cmpsl
jg
sbb
jp
add
sub
flds
stos
and
enter
push
popf
lods
cmp
fsubrs
imul
xor
cltd
lods
xor
sbb
jo
mov
dec
add
sti
cmp
mov
xchg
adc
mov
mov
fistps
sti
repnz
lock
cmp
lahf
in
jnp
rcl
in
int3
cmp
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
lock
cmp
sub
shl
lahf
loope
lds
add
addb
or
fs
hlt
adcl
iret
pop
jnp
push
pop
sbb
subl
cltd
mov
xchg
cwtl
in
mov
cltd
fwait
lcall
mov
sbb
xlat
fsubp
fadds
mov
popa
mov
daa
cmp
loopne
std
pop
sub
cmp
sar
mov
push
das
lds
inc
loope
pop
in
test
xor
add
fnstcw
into
sbb
cmp
xchg
ret
pop
sbb
cli
pop
test
sbb
stos
pop
test
add
mov
sbb
sbb
sbb
inc
sbb
mov
les
stc
dec
movsb
push
xchg
in
xor
test
jo
adc
add
out
in
js
pop
int3
xchg
ljmp
xchg
mov
add
lds
fdivp
mov
inc
movsb
add
loop
adc
roll
aaa
xchg
js
mov
or
xorb
cwtl
sti
push
nop
xor
dec
aad
lea
pop
mov
jecxz
das
cmp
mov
in
scas
cmp
fstl
xlat
mov
add
bound
jb
inc
jne
aas
dec
pop
xor
rcrb
subb
cwtl
mov
rclb
inc
add
movsb
push
movsb
pop
jns
adc
test
orl
loop
aas
out
mov
jmp
es
aam
lea
loopne
inc
pusha
lahf
aad
jg
push
jp
pushf
movsb
test
pop
xchg
andl
stos
cmp
cwtl
aam
gs
inc
popa
out
aas
xlat
inc
ljmp
jno
push
fcmovu
and
mov
push
insl
gs
dec
lcall
icebp
fimull
or
rcl
and
mov
lahf
sbb
repnz
or
jns
mov
adc
in
pop
fisttpl
cmpsl
sub
subb
js
pop
hlt
mov
jge
mov
enter
push
push
idiv
scas
testl
cld
mov
aaa
and
and
dec
or
mov
lret
jl
adc
inc
jl
lods
mov
sbb
test
xchg
mov
cmp
outsl
jp
xchg
xchg
lds
sbb
mov
cmpsl
and
into
pop
shll
mov
lock
sbb
cmpsb
cmp
jb
lretw
lret
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
popf
jo
mov
lea
adc
inc
imul
lods
arpl
mov
in
xlat
je
or
dec
sub
movl
mov
rol
pusha
inc
enter
idivl
add
inc
rcrb
xchg
mov
out
mov
and
scas
adc
cmp
jecxz
mov
in
in
fnsave
sub
leave
jle
dec
out
inc
sbb
popf
xchg
aaa
subb
mov
mov
pop
sbb
cmovnp
cmp
sub
es
pop
pushf
sbb
pusha
or
daa
push
lcall
xlat
mov
push
fimull
les
adc
adc
mov
ds
jbe
and
pop
pop
jbe
push
iret
xor
js
sbb
xor
nop
add
mov
lea
fwait
pop
aas
std
and
pusha
andl
xchg
daa
cmpsb
xchg
mov
xor
shll
mov
pop
rorb
inc
or
fcmove
lods
and
push
pop
mov
mov
int3
xchg
stos
push
pop
ss
mov
inc
sbb
test
inc
pop
sbb
push
outsb
sbbb
jp
lds
rolb
psubsw
sbb
pop
ss
in
and
xchg
cs
ss
and
icebp
or
insl
fstl
dec
cmp
xlat
test
iret
jbe
or
mov
push
ds
orl
repnz
xchg
mov
gs
cmpsb
out
lahf
xor
cmp
xchg
psubsw
scas
push
mov
aas
dec
add
xchg
popf
cli
jb
push
xchg
cmp
dec
pop
adc
pop
pop
pop
sbb
pop
shll
cmp
and
xor
ljmp
push
ja
push
cmpsl
xchg
pop
icebp
jmp
std
jnp
in
sub
sub
push
repnz
mov
push
mov
mov
fucom
add
xor
cwtl
into
leave
cs
inc
sbb
xchg
and
loopne
loope
shl
dec
inc
xchg
adc
testl
and
jp
mov
jns
adc
mov
sub
sub
data16
rorl
jne
shll
fnstenv
inc
inc
in
lcall
fisubl
ret
or
enter
adc
ss
gs
pop
lock
jnp
loop
call
pop
lods
adc
jl
push
ja
jge
rcrl
or
popa
frstor
xchg
fistps
mov
insl
stc
outsl
scas
cli
and
es
or
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
inc
outsb
insb
inc
xor
adc
popa
mov
test
push
leave
mov
fiaddl
imul
adc
dec
andl
aas
push
jl
and
xchg
sub
loop
pop
xor
or
out
ret
out
xchg
daa
push
arpl
cmc
aaa
cmc
int
call
jmp
mov
test
inc
test
sar
mov
jge
cs
ljmp
jb
xor
call
cmp
sbb
mov
mov
in
mov
enter
lds
stos
icebp
adc
enter
sub
jae
adc
fdivr
test
mov
add
mov
mov
out
sbb
imul
xor
addr16
cmp
aam
xor
popf
pushf
loope
mov
insb
mov
sbb
jp
mov
jl
cmp
inc
decl
pop
popa
adc
cmp
jmp
pop
movsl
cmpsl
lods
pushf
repnz
mov
xchg
adc
pushf
aad
jle
sarb
icebp
inc
cmp
cmp
inc
dec
in
jmp
in
adc
sub
and
adc
repnz
adc
and
in
fsub
inc
lea
cli
insl
inc
cmpsl
ret
hlt
ja
cld
lods
push
lods
mov
lock
flds
lods
mov
lcall
dec
inc
cli
ja
inc
xlat
pushf
test
in
ficoml
lock
mov
sbb
cld
push
xchg
dec
in
nop
arpl
mov
push
dec
xchg
cld
sbb
fidivs
add
mov
mov
mov
enter
int
aas
lret
aas
xchg
icebp
inc
loope
mov
push
add
imul
das
sbb
dec
idiv
mov
xor
test
shll
or
rclb
and
cwtl
negb
dec
sbb
or
loop
dec
push
inc
ja
aas
insl
outsl
jns
daa
jbe
ficomps
sbbb
adc
dec
out
dec
lea
jbe
inc
pop
int
jecxz
scas
in
jecxz
nop
rorl
and
jo
dec
les
je
lret
mov
xchg
fnstcw
lds
sbbl
add
xor
mov
add
mov
pop
dec
mov
or
shlb
icebp
dec
ljmp
shlb
sbb
jle
add
lods
pop
xchg
sbb
loope
sbb
fmul
mov
xchg
cmp
pop
add
ret
xchg
pop
cwtl
in
inc
shll
into
and
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
les
lea
adc
sbbl
leave
mov
popa
out
sbb
inc
add
or
ss
mov
enter
sbb
pop
xor
cltd
call
fcoms
lahf
mov
mov
fwait
push
lret
test
outsl
ret
xchg
sahf
cs
fisubrl
je
push
pop
ret
inc
mov
xchg
push
cli
push
pushf
push
mov
mov
mov
push
inc
das
out
or
adc
adc
jl
gs
in
xor
mov
sub
fidivrl
push
cmp
imul
lret
cwtl
std
inc
lret
adc
mov
mov
and
jle
add
nop
cmp
ljmp
movsl
add
aad
pop
out
jbe
mov
imul
jno
or
xor
scas
icebp
inc
insb
dec
jne
addr16
lret
gs
mov
sub
mov
pushf
nop
mov
sub
dec
lods
and
pop
iret
int3
push
and
jg
jecxz
jge
xchg
bound
loope
pop
mov
cwtl
ja
cmp
fmul
bound
mulb
popa
or
lcall
cmp
jae
sbb
ss
or
jns
adc
stos
lods
xchg
jl
repnz
bound
icebp
cld
push
add
mov
test
pop
and
xor
fsubr
dec
xchg
roll
mov
inc
jne
enter
xlat
or
mov
push
xchg
into
lock
mov
xorb
mov
movl
mov
inc
add
out
scas
arpl
cmpsb
ljmp
insl
mov
ja
negl
adcl
fisubrl
inc
xchg
or
and
jp
add
aad
cwtl
sti
das
adc
xor
xor
adc
lods
notb
andb
or
mov
jae
jne
mov
jge
sarl
loope
sbb
test
dec
sub
dec
jne
shlb
or
std
call
pop
cmp
sub
rorl
in
adc
test
or
std
cmp
pop
dec
xor
push
cwtl
sub
add
leave
add
sbb
mov
cmc
sahf
jmp
inc
jl
popf
jecxz
jmp
sbb
sub
mov
movsb
adc
add
lock
cmp
lret
fcmovne
inc
jnp
mov
pop
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
pushf
push
adc
cmp
jle
xchg
ret
xor
aam
and
aas
sahf
insb
pop
push
das
pop
andl
cmp
and
sub
xchg
mov
or
ja
xor
xor
cmpsl
fistl
out
movsb
jbe
jo
jb
lods
loope
lods
mov
inc
pushf
inc
leave
mov
inc
cmp
add
movsb
mov
pusha
pop
ds
pop
and
data16
jo
push
mov
dec
mov
mov
aas
or
es
dec
cmp
mov
into
lahf
xchg
dec
in
leave
loopne
sub
adc
add
lret
xchg
test
fildl
dec
push
mov
add
add
test
pop
test
gs
inc
inc
js
cmp
mov
in
xor
dec
nop
loop
iret
push
sub
cltd
mov
mov
jnp
in
std
sub
pop
inc
sub
cmp
std
sbb
lods
repnz
stos
nop
cld
ficoml
inc
adc
shll
mov
popa
sbb
mov
test
je
fbstp
pop
mov
shlb
or
addb
and
cld
lods
cmp
stos
jb
jno
cmpl
or
mov
mov
out
repz
xchg
aam
push
iret
mov
and
stos
cmpb
and
in
test
sahf
add
imul
jle
pop
xchg
icebp
pop
add
jnp
jo
imul
xor
shrl
std
ficoms
add
stc
mov
test
outsl
sbb
ret
rcrb
inc
push
fisubl
add
jmp
cmp
in
pop
dec
sbb
and
movsl
mov
fldcw
pop
fdivp
cmpsb
mov
mov
movsl
or
sbb
mov
xor
xor
push
cmp
jecxz
sti
fisubs
push
lret
aas
iret
jl
jmp
cmp
sub
ffreep
xchg
out
insb
ljmp
cmp
sub
sub
jb
jnp
jo
cwtl
adc
mov
ss
xchg
test
popf
pushf
gs
mov
mov
xor
je
add
add
mov
ret
lods
or
adc
cld
push
mov
je
push
adc
mov
xchg
sbb
in
sub
push
cld
jnp
bound
out
outsb
rol
cmp
pop
cmp
movsb
xor
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
stos
cmpsb
xchg
jmp
lret
loop
inc
add
bound
mov
sbb
stos
push
jno
das
dec
mov
pop
pop
sub
jecxz
xorl
jnp
mov
repnz
xchg
jo
adcb
push
lock
jg
sbb
addr16
jae
int3
pop
mov
seta
fmull
out
mov
or
pop
and
add
xchg
leave
jb
and
fmul
sub
mov
daa
ljmp
cmp
push
inc
mov
popa
addr16
cmpsl
addr16
mov
jmp
shll
cmpsl
popf
sub
mov
or
or
into
inc
daa
push
call
mov
les
dec
arpl
popa
lahf
mov
dec
lahf
aad
xor
inc
in
mov
xchg
and
cmc
pop
xchg
popf
xchg
push
pushf
aaa
and
out
lret
sub
outsb
cld
mov
cmpsl
mov
in
push
xchg
stos
push
stc
in
pop
or
jb
push
cs
adc
ret
jecxz
mov
out
lahf
jg
lock
loopne
cmpsl
pop
push
out
jmp
adc
mov
mov
icebp
test
bound
xchg
jae
ss
inc
loope
lods
pop
mov
scas
xchg
pinsrw
jne
xchg
notb
movsb
dec
or
xor
mov
cmp
pusha
in
cs
and
out
outsl
outsb
out
gs
mov
or
jnp
mov
test
xor
loope
les
idivl
jb
repnz
enter
xchg
mov
into
jbe
jne
cmpsl
or
movsl
pushf
pop
pop
and
inc
leave
push
lret
in
into
sub
aaa
xor
jne
arpl
or
dec
xchg
std
ret
shll
testb
sub
push
jae
mov
add
cmp
sahf
das
dec
inc
xchg
movsb
jecxz
pusha
lods
xchg
and
gs
lods
mov
mov
cmp
rclb
jae
lods
xor
and
xchg
xor
add
js
xchg
pusha
sub
xchg
das
inc
out
xchg
je
adc
daa
and
lcall
push
insl
rorb
dec
mov
adc
fldpi
sub
mov
mov
xorl
inc
fdivrp
pop
shlb
xor
or
jae
shlb
adc
inc
push
jae
push
pop
push
call
repz
andl
mov
xor
dec
xchg
mov
jle
push
mov
dec
fadd
rcrb
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
pusha
js
sbb
adc
mov
fbstp
add
idivb
fmulp
test
outsb
sbb
dec
sub
loopne
ljmp
or
lret
add
xor
in
cmpsl
stos
in
jle
shlb
push
push
adc
mov
jl
mov
icebp
cmp
test
call
arpl
lahf
xchg
pop
pop
or
jo
out
mov
xchg
stos
pushf
stos
add
sub
pop
gs
aaa
scas
jmp
and
push
jne
imul
mov
fwait
notl
jne
nop
mov
jae
inc
mov
jmp
enter
xchg
mov
inc
shl
mov
loop
adc
jne
adc
inc
cltd
lea
aam
data16
xor
insl
incl
movsb
fstpl
push
js
outsl
jecxz
flds
movsb
push
stc
inc
xor
lret
sbb
aaa
addr16
pop
sub
or
pop
shrb
xchg
mov
outsl
rorl
ja
into
out
test
dec
cmp
push
lea
mov
and
dec
xchg
stos
adc
cmpsb
dec
sub
in
jbe
cmp
or
xchg
cmp
repz
insb
dec
out
fisttpll
pop
shll
in
mov
rorl
or
push
repz
and
fadd
ret
in
jne
inc
lods
sbb
mov
iret
loopne
dec
cmp
and
lods
jbe
inc
mov
xchg
add
xchg
sbb
repnz
out
in
loop
cmp
pop
daa
mov
je
cmp
mov
push
xchg
push
cmpsb
add
lds
lcall
xor
out
stc
iret
mov
aaa
fwait
lcall
jb
addl
mov
arpl
inc
sub
fisubrs
outsb
ja
jb
rorb
imul
pop
std
add
pop
mov
sbbl
mov
leave
rep
dec
and
pop
push
adc
sub
and
test
or
jne
add
sub
hlt
adc
test
ljmp
enter
jmp
pop
and
out
fsubs
inc
fsts
jb
and
lods
xchg
icebp
jge
dec
lea
lret
xchg
push
push
insl
dec
xor
adc
shrl
leave
bound
add
into
mov
jne
cwtl
jmp
or
push
add
js
cmp
jge
imul
int
in
adc
das
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
and
sbb
adc
xchg
ljmp
jl
shlb
inc
mov
cltd
adc
pop
pushf
push
loopne
mov
mov
cmc
push
adc
and
or
mov
or
test
icebp
fidivl
mov
jnp
adcl
scas
mov
insl
sub
inc
push
jle
adcl
shll
sub
pop
icebp
lods
call
in
jne
into
jmp
test
aas
mov
xchg
out
sti
or
xor
mov
sbb
mov
sbb
adc
mov
pop
loopne
mov
outsl
cmp
cmp
pop
xchg
push
mov
popa
insb
int3
or
rep
test
mov
jne
xchg
std
inc
xor
mov
xchg
lcall
imul
mov
inc
or
and
push
sbb
and
cs
test
lret
ds
fucom
sbb
sub
inc
pop
xlat
cmpsl
loope
adc
enter
pop
adc
push
add
sub
ret
mov
pusha
push
xor
leave
cmp
mov
or
push
shlb
test
or
sbb
idivb
iret
in
in
fsubrl
xchg
pop
dec
cmp
mov
out
je
mov
and
xchg
js
popa
aad
xor
push
pusha
cmpsl
add
dec
int3
mov
lods
push
push
pop
cmpl
mov
mov
sub
sbb
aam
xchg
roll
inc
pop
inc
mov
enter
popa
sub
push
adc
adcl
jmp
xchg
mov
mov
cmp
pop
mov
pop
jl
int
dec
jmp
movsb
mov
popf
jmp
test
add
sbb
in
xchg
mov
add
inc
push
xchg
sbb
loopne
or
test
adc
orb
in
call
xlat
test
in
jnp
ljmp
shlb
dec
orb
in
popf
rolb
ja
mov
popa
fstp
xor
mov
xlat
add
push
fdivl
hlt
mov
adc
mov
outsl
xchg
adc
sub
mov
enter
cmp
in
dec
pop
mov
jo
mov
xor
jnp
inc
pop
jno
mov
pop
mov
arpl
cmp
lds
clc
xchg
scas
jle
loopne
sbb
popa
cld
push
lahf
out
dec
jb
xchg
inc
cmpb
repnz
test
addl
xchg
mov
nop
outsl
jl
pushl
dec
jno
jle
pusha
ss
fs
sub
jae
jbe
jle
test
mov
push
fisttps
popa
sub
jns
pop
in
rcrb
fdivr
sbb
fwait
movl
mov
sub
or
in
ja
mov
and
cltd
into
divb
in
fistl
xchg
xchg
sub
cs
jo
xor
push
push
clc
mov
xlat
mov
push
pop
cmp
and
imulb
fistpl
andb
add
mov
flds
movsl
sbb
sub
pop
hlt
pop
xchg
mov
sub
data16
fs
or
mov
out
mov
testb
dec
jl
clc
or
add
popf
inc
cltd
push
jbe
daa
aam
hlt
mov
je
cmp
inc
arpl
add
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
sub
adc
xchg
mov
int3
pop
inc
dec
test
push
or
sbb
cmc
push
in
fistpll
insl
fdivs
fisubrl
sub
arpl
xor
inc
mov
and
lret
jbe
scas
ret
sbbl
mov
or
or
stos
pop
ffreep
and
das
push
push
stc
mov
mov
lcall
xchg
jmp
add
sarl
loopne
insb
cld
movl
cmp
jl
inc
sti
leave
imul
xchg
mov
pop
pusha
inc
in
in
cmp
or
out
inc
mov
push
mov
insb
pusha
jne
ret
sub
mov
out
aas
lods
roll
inc
jmp
sub
aam
int3
loop
push
and
das
es
sub
fs
js
mov
arpl
scas
stos
rolb
scas
movsb
push
clc
testl
ds
push
addl
cwtl
mov
xor
lea
aas
lahf
ss
add
lahf
pop
dec
adc
fmull
mov
outsb
std
std
dec
test
dec
adc
sbb
inc
out
add
mov
or
insl
jle
imul
cmpsb
leave
dec
pop
insl
insb
pusha
push
jno
jnp
and
cmp
pop
dec
xlat
shrb
xor
bound
stos
add
in
scas
bound
in
lret
orl
xor
outsl
aad
push
adc
ret
lea
daa
xchg
popa
xchg
call
pushf
ds
pop
dec
sbb
mov
sahf
mov
ja
out
or
pop
lock
push
into
push
mov
xchg
jb
pop
push
rcrl
mov
xchg
bound
xor
and
gs
dec
jns
lret
in
cmp
push
xchg
xor
and
mov
sbb
mov
testb
lea
leave
jbe
push
mov
out
cmp
jp
out
inc
std
mov
jp
jmp
loopne
rolb
and
shrl
fldcw
ret
adc
push
ret
nop
xlat
adc
addl
fsts
xor
pop
push
xchg
js
scas
pusha
pusha
leave
bound
and
rcrb
shll
mov
or
je
orl
dec
or
fidivrl
add
inc
cltd
fstpl
mov
push
jmp
and
sbb
push
mov
es
fwait
in
cltd
xorb
fdivrs
add
or
adc
daa
pop
jne
cli
cmpsl
bound
push
xchg
or
and
jb
leave
mov
xchg
in
outsb
aas
lret
in
insb
push
cld
pop
out
lret
jg
je
mov
es
and
mov
sahf
xor
and
insb
shll
fldt
ds
mov
jle
mov
lcall
flds
dec
xor
gs
loope
test
pop
jmp
pop
leave
jo
jno
jp
nop
xchg
inc
sub
xchg
xchg
dec
push
mov
cmpsb
fsub
cwtl
lods
sahf
lods
mov
subl
cmpsl
in
sub
stc
xchg
and
out
xchg
mov
fs
fldenv
lcall
push
imul
add
lahf
mov
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
insb
filds
adc
adc
pop
aam
and
nop
cs
popa
lret
sub
in
fmull
ret
rorl
sub
cli
subl
stc
jmp
fnstcw
xchg
inc
mov
pop
xor
add
lods
cmp
lret
cs
jne
adc
pop
dec
mov
push
pop
sub
cmc
fwait
sbb
ja
lahf
pop
xchg
popa
xchg
fmuls
push
ljmp
scas
cmp
push
lcall
inc
cs
ljmp
mov
cmp
data16
cmp
or
mov
cltd
sti
fidivrl
and
dec
lock
subl
mov
add
in
dec
ljmp
mov
xor
lret
mov
add
jge
xchg
notb
pop
pop
cli
add
rol
fildll
daa
mov
roll
pop
int
mov
xorl
inc
push
scas
out
stos
adc
push
es
mov
test
sbb
pop
jns
stos
mov
xor
xchg
lea
cmpsl
iret
or
int
dec
dec
pop
cmp
add
icebp
addr16
push
icebp
cmp
idivl
ljmp
jbe
lahf
in
mov
or
jne
insl
inc
inc
aad
mov
dec
sub
ja
push
pop
xor
add
mov
jne
loop
ja
jp
push
in
scas
xor
pop
xchg
xchg
test
les
sbb
sbb
mov
or
add
inc
inc
pop
add
push
ficomps
push
sub
push
testb
addr16
cli
push
movb
xlat
mov
or
and
adcb
sbb
repnz
or
xor
stos
and
jb
sbb
mov
mov
cmpsb
test
and
mov
insb
mov
subl
jbe
lods
test
mov
inc
adc
pop
and
call
push
into
testl
inc
and
aam
xor
popa
add
sub
cmp
mov
pop
ret
sub
or
insb
dec
push
les
add
fadds
enter
rcl
push
jns
or
pop
jle
enter
lds
loop
adc
in
push
mov
cmp
mov
leave
fsubr
cmpsl
push
lret
push
nop
loopne
add
push
ja
ret
fwait
pushf
bound
push
cmp
adc
mov
and
adc
push
xchg
pop
and
push
mov
jb
push
mov
mov
adc
outsb
or
in
push
loop
mov
cmp
xchg
jnp
enter
mov
int
adc
push
dec
movsl
test
imul
in
sbbl
aas
or
mov
add
pop
push
lret
int
shr
or
push
jle
out
imul
xchg
push
inc
or
in
arpl
mov
and
xchg
xchg
aad
mov
enter
pop
mov
inc
outsb
push
pusha
add
std
fsts
adc
adc
pop
es
xor
popf
push
lock
lahf
jnp
addl
stos
mov
out
sbb
inc
imul
push
dec
out
gs
imul
pop
xorb
mov
popf
sbb
out
icebp
cs
and
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
push
adc
stos
mov
adc
adc
hlt
imul
jl
test
dec
adc
xchg
repnz
and
ficoms
pop
mov
aaa
mov
sbb
in
push
ds
adc
ret
mov
xchg
push
xchg
into
ds
fwait
aad
arpl
das
and
rolb
cmp
popa
aas
xchg
icebp
clc
dec
lea
out
clc
cld
sbbb
xchg
jp
fsubrs
jmp
and
jmp
mov
sub
mov
and
in
and
je
cmpsb
push
inc
aam
jge
mov
pop
or
mov
cwtl
pop
lock
pushl
fstl
loope
fwait
stc
lret
cmp
dec
stc
or
div
mov
mov
js
mov
or
add
enter
jl
mov
inc
sbbb
and
dec
popl
incl
adc
xchg
or
xchg
push
mov
push
popf
or
lods
adc
pop
cmp
clc
jne
adc
pop
sub
cld
out
loop
stos
sub
pop
test
insb
jb
repnz
mov
ss
xor
out
sbb
bound
movsb
popa
cmpsb
loopne
stos
pop
jno
dec
imul
and
dec
inc
inc
sarb
adc
scas
inc
mov
out
fldcw
jmp
leave
jnp
xorl
cmc
cld
clc
loop
lcall
cmp
and
jne
or
lret
jb
mov
rclb
ret
enter
pop
imul
cmp
into
push
hlt
jl
cmpl
and
in
lock
test
in
sub
xchg
cmpl
int
fsub
push
in
pop
inc
mov
sub
or
sbb
call
cwtl
jp
cli
jmp
repz
pusha
and
test
pushf
or
cltd
ret
xchg
es
orl
pop
or
mov
shrl
lcall
cwtl
mov
sbb
lea
pop
insl
dec
push
cmc
test
movb
jmp
lods
inc
add
push
enter
ljmp
mov
add
mov
stc
aam
mov
imul
push
in
cmp
push
ljmp
aam
inc
or
icebp
mov
loopne
hlt
sbb
mov
aas
js
xor
push
adc
cmp
inc
sbb
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
ja
jle
std
adc
adc
lret
out
cmp
gs
lods
push
add
cmpsl
addr16
test
xorb
ror
dec
scas
fists
idivb
sub
loopne
xor
nop
mov
aam
in
mov
or
movsb
sbb
and
adc
aad
dec
lea
adc
popa
dec
dec
xlat
lahf
and
push
subl
cmp
sbb
mov
sub
add
cmp
or
xlat
or
mov
popf
push
inc
leave
pop
ljmp
sarb
or
push
pop
stc
add
testl
xchg
sarb
inc
cmp
mov
push
sbb
cmp
jg
adc
mov
mov
negl
xchg
mov
lea
pop
jle
mov
xor
sbb
xchg
ss
pushf
and
jbe
jno
out
or
fldl
push
mov
push
xor
rclb
mov
mov
stos
xlat
addb
jle
mov
out
jg
in
xchg
ja
stos
cmp
filds
je
in
pop
push
jl
cmp
or
cmp
mov
out
int3
sbb
inc
inc
jl
mov
push
aad
mov
and
lcall
shll
mov
sub
test
rcrb
push
lahf
xchg
push
mov
divb
daa
pop
clc
test
clc
jo
lods
inc
loopne
jns
mov
fldt
scas
dec
xor
push
stc
xor
lret
mov
lret
and
pop
rcr
cmp
adc
mov
cli
popa
sbb
add
jge
insl
bound
aas
aaa
inc
xchg
test
xchg
outsl
dec
enter
mov
dec
test
jbe
pusha
inc
test
retw
pop
add
fnstsw
sbb
rcr
inc
xchg
cltd
int
outsb
sbb
cli
and
icebp
scas
adc
clc
ficompl
sub
inc
popf
sub
add
aas
mov
push
push
lds
lahf
jecxz
inc
pop
pop
adc
pop
scas
xor
lds
in
mull
cld
mull
popa
jp
mov
leave
sub
divl
outsb
ss
sahf
int3
xchg
push
xchg
clc
in
mov
int3
lcall
sub
pop
test
cmpsl
xchg
or
dec
xor
clc
cmc
lods
xor
cmc
loopne
mov
ret
mov
inc
lret
inc
add
cmp
data16
je
fisttps
mov
mov
xchg
mov
dec
rcrl
inc
filds
sti
adc
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
and
insb
cmp
adc
sbb
scas
mov
loopew
mul
cmp
hlt
es
mov
xlat
mov
psraw
xadd
testl
ds
pusha
mov
sub
pop
mov
dec
dec
inc
in
push
repz
call
sbb
idiv
idivb
daa
repz
dec
cmp
insl
das
mov
test
xor
or
imul
cmp
jge
dec
imul
scas
add
jbe
xor
add
inc
out
adc
adc
popf
sbb
jecxz
adc
aas
icebp
and
lods
jns
adc
pushf
xchg
dec
mov
sarl
adc
cwtl
inc
jo
movsb
mov
xchg
inc
lahf
jge
lock
or
add
add
popa
arpl
das
xor
cmpl
bound
inc
lret
sti
mov
sbb
inc
inc
aad
popf
out
xchg
loope
loopne
call
add
mov
cmp
dec
or
and
push
movsb
repz
test
push
ror
add
and
test
jp
xlat
jnp
cmp
push
insb
mov
add
mov
sub
push
nop
fs
mov
mov
and
shr
dec
out
in
rol
sub
pop
sub
imul
cmp
lea
jns
dec
dec
ss
add
or
add
cmpsl
divl
pop
mov
xor
popa
push
pop
out
or
mov
mulb
xor
jae
shrb
insb
insb
fidivl
adc
dec
mov
xchg
loopne
or
scas
cli
in
test
cmpsl
movsl
push
pushf
add
out
push
and
lds
mov
cmpsl
out
jmp
rcrl
sbb
cli
add
mov
movsl
les
jp
xor
ja
loope
icebp
mov
dec
xchg
popf
cmpsb
or
cld
mov
pop
mov
cmpsl
sbbl
mov
mov
pop
mov
inc
pop
dec
icebp
divb
and
jb
dec
cmc
or
and
pop
inc
mov
jbe
fucomi
cs
xor
sub
leave
lods
lret
mov
cmp
and
add
jae
repnz
inc
icebp
andl
scas
push
aad
clc
sub
int
xor
stc
cmp
popf
test
fistps
mov
and
aam
lea
dec
test
xchg
add
mov
inc
adc
push
push
mov
xchg
inc
gs
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
dec
adc
out
adc
adc
add
mov
lcall
sbb
mov
push
aad
cmp
test
and
jae
sub
lret
adc
popa
out
cmpsb
push
cmpsb
shlb
mov
and
rolb
add
and
clc
mov
lret
xor
lcall
mov
push
jne
outsb
jae
or
or
aaa
stos
lock
loope
push
js
cld
stos
dec
dec
xor
in
lods
fiadds
insb
out
and
cld
lods
adc
inc
or
in
mov
fcmovnb
dec
lds
cmp
add
in
fdiv
pop
mov
nop
outsb
cld
cmc
jno
fcomps
clc
jle
or
mov
and
cs
mov
fstp
enter
pushf
mov
les
stos
adc
pop
rclb
xor
sub
sub
mov
pushf
pusha
enter
sbb
xor
adc
btr
cltd
insl
mov
and
dec
and
xlat
pop
add
rolb
lea
vmaxps
rol
addb
xchg
xchg
inc
insl
sbb
mov
xchg
mov
in
pcmpgtd
push
lods
jge
testl
pushl
adc
lret
mov
jecxz
popf
jns
pop
fs
mov
pop
sar
fnsave
aad
das
fistpll
ret
andb
outsl
repnz
push
pushf
pop
jne
inc
cmp
add
aaa
xor
out
adc
hlt
dec
xchg
inc
push
pop
ljmp
in
cld
adc
xor
loope
sub
sbb
dec
dec
jmp
rol
test
pop
hlt
jp
mov
daa
and
out
repz
clc
jnp
call
jmp
add
adc
mov
popf
out
sub
insl
push
insb
jg
aaa
cltd
and
mov
dec
mov
lods
arpl
and
dec
cmp
nop
push
jmp
mov
adc
dec
sub
xchg
icebp
lods
js
inc
enter
into
mov
dec
loope
and
dec
inc
call
mov
lock
mov
xchg
addl
push
mov
and
pop
rol
mulb
jecxz
call
popa
jae
and
ds
cmc
xor
adc
and
and
call
out
scas
outsl
test
frstpm(287
cwtl
xchg
pop
mov
jmp
jle
mov
jnp
mov
shrl
in
imul
insb
out
bound
pusha
aam
xchg
sahf
sbb
pop
or
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
xlat
dec
or
xchg
movlps
inc
jmp
ljmp
scas
pop
andb
mov
jne,pn
inc
lods
lahf
add
out
imul
add
addb
mov
jae
incb
test
adc
push
enter
gs
mov
add
pop
push
test
je
or
mov
jnp
orb
add
hlt
fisttpl
rolb
sbb
adc
int3
daa
sub
test
mov
xchg
out
and
repz
leave
insb
jp
jg
das
adc
push
dec
adcb
int3
pop
ret
pop
xor
das
inc
inc
mov
in
inc
xor
xchg
dec
repnz
cmc
shlb
mov
mov
inc
pop
adc
cmp
xor
xor
cs
or
jle
xchg
jl
add
adc
add
lret
insb
mov
cmp
and
jg
push
fcoml
dec
push
sbb
or
scas
lock
sbb
mov
fs
pop
adc
adc
jecxz
push
cmp
aas
rolb
ret
mov
or
mov
in
mov
mov
push
dec
inc
sbb
add
out
cmp
pusha
mov
aaa
movsl
outsb
loop
and
mov
and
aaa
insb
loope
cltd
js
cmp
push
or
lcall
ret
mov
sbb
arpl
mov
cmc
pop
data16
imul
sahf
aad
insb
mov
es
pop
scas
pop
std
nop
and
cwtl
jle
mov
sub
jp
popf
pop
mov
mov
cmp
in
movsb
jnp
cmp
shrl
or
jae,pt
repz
rorb
xor
dec
pop
out
pop
mov
pop
cmp
test
and
in
insb
int3
pop
insl
roll
rol
pop
data16
xor
xchg
sub
enter
add
aad
dec
dec
pop
repnz
mov
ret
das
mov
popa
in
sub
mov
cltd
inc
aaa
jle
xor
test
mov
cmpb
mov
movsb
cld
leave
push
and
mov
xorl
ret
push
aam
mov
lret
repnz
aad
mov
xchg
sbbl
cwtl
xchg
daa
out
or
fistpl
add
cli
test
packsswb
lock
pop
cltd
sahf
ret
enter
adc
push
or
lea
daa
cmpsb
lock
ret
je
lea
int3
out
pop
or
cmc
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
or
adc
adc
jecxz
pop
mov
push
mov
repz
inc
xor
push
imul
outsl
fmuls
mov
and
mull
push
xor
loope
adc
cmp
out
push
lods
jg
jo,pn
aam
push
repnz
fisubl
inc
jecxz
pushf
ret
cs
push
out
jl
test
sub
sahf
in
lods
pusha
in
mov
mull
jno
repz
lcall
out
mov
or
icebp
cmpsb
rclb
scas
sub
mov
shl
cmp
sbb
cld
pop
xchg
mov
repnz
inc
sub
clc
adc
xor
sbb
int
xor
inc
dec
adc
fisubs
mov
test
fs
cmp
cmp
sahf
into
mov
cmc
out
xchg
adc
push
in
in
pop
xchg
mov
pop
xchg
or
mov
test
out
dec
fildl
xchg
push
add
sub
cmp
or
test
movsb
cmp
fcmove
enter
or
or
int
movl
xchg
cmp
sarl
and
add
je
push
add
jno
sti
fisubl
out
subb
jo
clc
fstpl
mov
in
aam
add
mov
mov
jns
sbb
jmp
push
les
rorb
sbb
hlt
das
sbb
push
xorl
mov
push
mov
or
add
lock
outsl
stos
add
movsl
rclb
outsl
clc
pop
insl
mov
iret
popf
push
inc
add
xchg
xchg
and
test
in
jbe
mov
loopne
mov
jae
mov
xor
rclb
loop
mov
adc
test
and
inc
movsl
fwait
push
ljmp
dec
mov
mov
repnz
pop
pop
jecxz
xchg
xor
cmp
arpl
cltd
cli
and
cli
mov
push
lret
pop
clc
fs
nop
sbb
jge
mov
mov
cmp
cmp
imul
mov
xchg
or
iret
ja
sbb
xchg
call
sbb
in
xchg
leave
sbb
push
jecxz
or
jmp
add
adc
lahf
fidivs
mov
jmp
pusha
mov
add
lds
xor
cmpsb
fldcw
scas
cmp
aad
repz
jno
and
insl
mov
and
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
jge
jp
jnp
adc
adc
cmp
cld
cmp
outsl
mov
cs
pop
cwtl
rcr
adc
scas
xlat
movl
hlt
es
xchg
sub
xor
mov
pop
sbb
fsubr
xchg
ds
xchg
jp
sbb
adc
xor
lock
push
add
insb
mov
adc
xchg
mov
jmp
jle
xor
sbb
loope
es
cmpsb
stos
clc
popa
js
pushf
jg
push
mov
xor
lret
loop
aaa
mov
xor
inc
mov
in
ja
mov
push
jns
fwait
xor
and
jnp
dec
adcl
sti
inc
push
mov
ret
insb
and
and
imul
push
dec
pushf
cli
fwait
mov
fldl
popf
cltd
shlb
xor
xchg
call
cmp
add
lea
pop
inc
xchg
jns
inc
sahf
xchg
psubsw
les
lea
or
ja
mov
call
add
mov
enter
repz
xchg
test
fisubrs
dec
js
pop
mov
test
mov
es
mov
adc
mov
add
mov
leave
test
jb
outsb
fidivrs
sub
repz
int3
sbb
push
xor
dec
cmc
pop
daa
and
in
jg
lods
sub
stos
or
int3
sbb
outsl
test
jo
dec
cmp
out
iret
popf
push
mov
sbb
out
fldt
mov
mov
mov
sbb
popf
sbb
ret
mov
call
push
pop
inc
jmp
rorb
mov
jecxz
imul
les
aam
adc
pop
addr16
cld
xor
sarl
jg
arpl
es
xchg
bound
fstpl
rcr
jmp
xor
and
nop
push
xor
mov
jno
xchg
adc
adc
dec
and
mov
das
mov
mov
clc
into
out
pop
fwait
mov
bnd
enter
test
js
ret
xor
imul
ret
xor
xchg
xor
stos
mov
xchg
add
push
gs
test
inc
dec
repnz
mov
flds
inc
pop
mov
fdivrp
pop
mov
push
cmp
pop
cmp
rcrl
xchg
cmp
lds
je
test
inc
jae
lds
or
pop
pushw
sub
fisubs
push
in
sbbb
aam
das
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
jle
ficoms
adc
dec
inc
shrl
shll
lret
inc
push
jp
aad
loopne
sub
sbb
addl
js
lcall
bound
cmc
aam
je
cld
adc
les
xchg
and
add
mov
push
xchg
ljmp
sbb
fldenv
mov
aas
jo
sub
cmp
sub
mov
push
add
lahf
lock
sbb
out
mov
jns
pop
repz
shll
call
aaa
add
cmp
loopne
or
push
es
ljmp
lea
je
or
push
stos
lods
int3
cld
or
mov
insb
mov
cmpb
arpl
cmp
fwait
scas
and
fistpl
sbb
iret
mov
out
fldl
in
rcrb
je
push
add
mov
jb
mov
aam
scas
ja
mov
or
js
sbb
sbb
movsb
ss
jbe
aad
inc
mov
pop
mov
js
cli
stos
pop
and
call
mov
out
inc
mov
out
push
out
shrb
incb
mov
xchg
divb
mov
in
test
mov
cmc
lea
inc
push
and
test
rcr
pop
fwait
sbb
in
push
rcrb
push
jle,pt
popa
fstl
mov
xor
shll
ret
add
fdivrs
pop
pop
or
jle
inc
mov
sub
mov
add
mov
sub
icebp
push
push
push
xor
xlat
mov
add
dec
sub
push
loopne
mov
mov
mov
inc
xchg
sub
ret
fwait
mov
aaa
mov
xchg
mov
xor
les
inc
hlt
imul
dec
adc
sbb
sub
mov
jns
clc
mov
in
in
add
jecxz
or
repz
sub
lods
xchg
or
test
push
pusha
mov
lock
icebp
sbb
test
cmp
cmp
sub
and
mov
in
in
push
or
xor
push
dec
pushf
pop
add
je
inc
mov
out
push
adc
xlat
push
xchg
jne
inc
jl
or
dec
mov
data16
loope
cmovle
xlat
pop
lret
sbb
leave
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
lods
js
adc
adc
repnz
jnp
and
xchg
push
pop
and
out
and
popf
sar
mov
rcr
test
and
loope
insl
xorb
push
lds
retw
fucomip
inc
aam
xor
or
repnz
rol
lods
aad
scas
and
mov
out
test
xor
mov
push
mov
testl
rcrb
shrl
mov
mov
out
not
cmp
xor
mov
aam
mov
call
sub
push
jge
imulb
mov
fnsave
fwait
popf
in
arpl
mov
cld
cltd
push
xchg
jle
es
or
cmp
fdivrp
imul
outsl
sahf
cmp
aam
dec
mov
mov
push
psllq
cmc
jle
xchg
xor
pop
loopne
popf
test
push
mov
xchg
mov
jno
adc
pop
jmp
out
adc
std
sub
ss
frstor
cld
in
dec
cmpsl
imul
jmp
icebp
sub
inc
cwtl
push
stos
dec
leave
out
add
rolb
nop
adc
mov
xchg
jecxz
add
cli
mov
imul
in
inc
aaa
cmp
inc
pop
cld
repnz
dec
mov
cmp
repz
gs
adc
leave
mov
arpl
pop
call
cmpsl
inc
lea
popa
imul
mov
push
push
xchg
sub
mov
lcall
inc
shlb
dec
cwtl
pop
sbb
in
fldenv
hlt
in
adc
fwait
or
and
leave
xchg
mov
push
sub
xchg
pop
jle
cmp
je
add
sub
mov
in
sar
lcall
test
and
test
xor
in
shl
outsl
imulb
in
inc
lods
mov
stos
inc
mov
push
gs
lods
dec
sti
or
insl
jp
add
inc
movsb
decb
aaa
popa
adc
xchg
insl
pusha
out
or
pop
lcall
or
fsubrs
cmpsl
jle
jle
sarb
lea
push
fsub
in
outsb
test
test
xchg
js
aaa
mov
inc
dec
std
test
mov
xchg
push
push
ffreep
jo
mov
lret
fstps
push
cli
jecxz
and
testb
mov
fneni(8087
sbb
jae
inc
or
mov
movsb
lea
pop
and
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
cld
sub
hlt
ja
mov
loope
fdivl
repz
or
push
xchg
sub
push
inc
dec
aas
xchg
mov
dec
jge
lea
sbb
xchg
stos
add
iret
jp
gs
mov
jns
jne
cmovae
fs
lds
in
sahf
jle
pop
jno
cs
xor
xchg
mov
lret
xor
bound
gs
addl
or
jbe
jbe
fldenv
cs
popa
xchg
inc
rclb
pop
mov
push
mov
xor
fldt
adc
in
xchg
rol
sarl
daa
mov
cmp
jb
add
jns
inc
icebp
repz
push
add
mov
test
movups
inc
outsb
xor
jbe
mov
or
out
and
hlt
sub
stos
shlb
repnz
imul
jp
fldt
dec
stos
sti
mov
add
mov
pop
dec
int
adc
and
mov
lret
sbb
pop
cmc
push
sbb
shrl
nop
test
xchg
daa
movsb
and
das
or
movb
scas
adc
xor
fwait
mov
push
leave
jecxz
dec
mov
and
int
jae
add
mov
in
cmp
pop
movb
mov
push
jne
or
mov
into
dec
or
mov
clc
insb
xchg
sbb
adc
dec
xor
jecxz
enter
pop
mov
adc
ljmp
inc
or
pop
add
mov
je
fstpl
shll
lea
adc
int
outsb
xchg
fbstp
std
or
mov
pop
mov
in
dec
mov
add
jbe
ja
fnstsw
popf
inc
adc
sbb
xor
call
xchg
in
jge
mov
xor
popa
fstpl
mov
jns
xchg
bound
sub
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
lret
push
push
into
adc
adc
imull
loope
repnz
mov
sbb
sbb
jl
mov
dec
int3
jmp
dec
sub
movsb
in
std
out
cmp
mov
cmp
dec
or
int
mov
pop
lahf
outsb
mov
movsl
mov
and
jno
inc
mov
cld
das
leave
and
mov
adc
mov
hlt
ja
scas
jnp
insb
jecxz
inc
hlt
leave
sbb
into
pusha
pop
xchg
sbbb
mov
add
das
push
insb
add
cmp
fnstsw
imul
xchg
adc
push
dec
pusha
dec
jge
cwtl
xchg
adc
popa
adc
clc
movsl
push
and
es
sbb
push
ret
mov
decb
loopne
int3
loopne
mov
push
mov
lea
addl
pusha
dec
dec
inc
js
loopne
imul
add
adc
scas
pop
push
loopne
pop
sub
mov
mov
call
push
in
icebp
pop
in
mov
ret
lods
dec
cmp
shrl
mov
lcall
xchg
push
stos
add
pop
cmc
adc
adc
dec
test
int3
inc
dec
cmp
xor
ljmp
mov
jno
push
js
sbb
arpl
shrl
lcall
mov
mov
and
call
imul
sub
mov
popf
lcall
adc
mov
xor
lret
lret
je
pop
adc
cmp
dec
push
and
mov
lods
fisubl
adc
cmpsb
push
inc
mov
es
in
nop
dec
orb
mov
jb
jecxz
aam
jns
add
mov
daa
pop
and
movb
negl
inc
in
idivl
ficompl
mov
mull
pop
mov
fmul
lcall
lcall
mov
and
int
sbb
imul
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
jecxz
mov
movlps
pop
mov
xor
pop
pop
adc
cmpsb
scas
push
shrl
and
inc
sub
fidivl
add
dec
orb
insl
xor
mov
push
je
push
shl
ds
aas
aaa
or
outsb
inc
pop
and
pop
and
mov
aam
cmp
les
jbe
repnz
mov
leave
cmp
or
push
imul
stc
sub
imul
jbe
rcrb
das
sub
rolb
or
xchg
fdivr
jge
push
fimull
mov
rcr
lds
adc
push
or
es
enter
dec
sub
ret
std
and
or
ljmp
cli
mov
es
sbb
inc
and
das
int
decb
scas
and
addr16
fiaddl
push
mov
lods
push
je
cmp
jmp
outsl
mov
mov
addr16
lahf
fimuls
cltd
je
test
jns
dec
cltd
js
lds
inc
cli
pop
mov
imul
mov
gs
in
addr16
xor
cmp
and
mov
sbb
popa
icebp
fcoms
int3
push
cltd
nop
xchg
mov
sub
jns
cmp
lcall
xchg
jg
addr16
or
xor
lods
cltd
add
dec
inc
clc
jge
cmp
shlb
sub
mov
adc
or
idivl
aaa
adc
hlt
sub
jmp
add
sbb
cmp
or
imul
in
pusha
push
or
mov
dec
pop
sub
inc
bound
cmc
mov
xor
mov
ljmp
push
push
loope
icebp
outsb
inc
inc
les
in
sbbb
cmpsb
loope
lea
ret
pop
imul
mov
mov
jmp
orb
shlb
sbb
incl
add
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
aam
mov
enter
sub
outsl
loopne
push
add
das
lods
fsubp
out
call
icebp
cmp
repnz
dec
adc
test
pop
mov
icebp
cmp
std
mov
jecxz
jge
or
adc
lods
sbb
mov
xor
out
cmc
jecxz
aaa
jmp
mov
mov
movsb
xor
movsb
mov
mov
lock
xchg
xor
ret
adc
pop
push
mov
mov
push
sbb
and
in
jp
stos
mov
sbb
sub
stos
mov
add
enter
pop
mov
insb
lock
lods
adc
dec
xchg
icebp
mov
popa
jge
stc
mov
fnstsw
push
add
sub
mov
mov
cmp
mov
ret
mov
jg
stos
dec
pop
stos
ficoms
mov
ds
or
sbb
insl
jo
fistpll
int
sub
cmp
pop
dec
cld
lock
or
andb
mov
out
orb
mov
lcall
js
test
and
jp
mov
jmp
sbb
sub
sahf
mov
popf
inc
gs
loop
push
and
cmp
popa
nop
pop
movsl
sar
xchg
imul
mov
imul
leave
gs
shll
cs
adc
scas
cmp
or
or
test
scas
popa
leave
mov
and
insb
sub
mov
nop
xchg
incl
pop
shlb
in
dec
fldenv
daa
decb
or
or
aaa
jle
mov
cmc
pop
jnp
xor
adc
dec
inc
lret
xor
jmp
jg
jne
je
inc
out
fsubs
in
lea
xchg
mov
mov
fs
jnp
cld
push
jnp
imul
push
push
jmp
cmp
shrl
lea
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
sub
adc
movlps
mov
and
aad
and
mov
repnz
sar
sub
or
test
jmp
inc
cmp
scas
dec
repnz
pop
mull
jg
in
cltd
or
mov
inc
push
xor
or
mov
sbb
ficompl
int3
bound
dec
outsb
sbb
dec
imul
int
jne
pop
cmp
add
mov
and
cltd
stc
ret
loop
or
dec
pop
notl
mull
pop
xchg
out
cmp
out
pop
cmp
repz
rcrb
mov
int
lds
adc
adc
cmpsb
xchg
dec
jmp
inc
xchg
fwait
xor
sub
repz
std
es
jge
inc
push
jbe
adc
mov
ret
lcall
push
popf
xchg
push
pop
push
adc
dec
push
arpl
push
add
clc
and
data16
sahf
push
insl
outsl
adc
ja
pop
jb
and
or
je
mov
xchg
imul
push
inc
xchg
pop
push
fmuls
mov
dec
loope
mov
xor
orb
mov
inc
fsubl
mov
xchg
sbb
jno
popf
ret
cmp
lods
push
sbbl
push
shll
in
out
mov
cld
das
mov
dec
cli
jmp
dec
mov
mov
xor
jo
mul
mov
scas
mov
cmp
mov
sbb
out
sbb
add
sbb
dec
lret
mov
stos
lds
jne
ja
xchg
push
out
mov
test
inc
sbb
popf
cmp
test
je
cmp
sub
fs
pusha
leave
aad
loope
andl
dec
repz
push
pop
cld
xchg
sbb
lret
mov
lahf
lsl
sbb
add
jmp
push
jb
lock
out
and
in
insb
pop
pop
add
roll
sub
inc
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
xor
stos
jge
adc
adc
mov
sbb
jmp
jl
cmp
jbe
cwtl
inc
sahf
xor
jmp
mov
lcall
cltd
adc
mov
mov
cmp
mov
xchg
mov
imul
int3
jle
inc
mov
fstpl
dec
xchg
in
je
jl
adc
add
xor
inc
subl
push
or
sub
repnz
xor
cwtl
jp
mov
sub
dec
fs
dec
pop
loopne
push
in
jp
gs
pop
add
call
dec
rolb
xchg
pop
mov
fsubrp
pop
sbb
mov
pop
mov
xor
jbe
add
mov
repnz
add
sub
rcr
cmp
lcall
add
inc
popf
adc
mov
adc
in
inc
movsb
popf
lea
cli
cmp
jb
into
sbb
insb
out
subl
jmp
loope
test
dec
jg
test
out
push
aas
xchg
lcall
cli
and
ret
in
ljmp
mov
imul
sbb
xor
jecxz
cmpxchg
push
cmp
cmp
inc
mov
incl
mov
xorb
scas
icebp
int
outsb
fcomip
sub
xchg
inc
js
pop
mov
in
psubq
cmp
push
jns
or
push
aam
ds
ret
pop
inc
faddp
aad
or
cmc
or
and
mov
mov
inc
and
push
push
add
jle
imul
inc
sbb
sub
or
lcall
iret
jl
enter
push
cmpsb
jle
lods
aam
and
add
outsb
and
add
or
in
cmc
pop
fidivl
fwait
mov
dec
inc
jp
loope
add
out
test
adc
ss
xchg
popa
adc
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
mov
adc
movlps
and
out
mov
jg
xchg
dec
jmp
call
inc
in
jl
mov
xchg
ljmp
jg
cmp
or
repz
rcrb
inc
or
enter
decb
ds
jg
lret
jp
sub
mov
repz
add
in
inc
cmp
adc
cmp
lods
lds
add
mov
lods
fsubs
cld
into
cmpsb
dec
arpl
aaa
or
outsl
dec
lret
out
xchg
insl
mov
sbb
mov
xchg
pop
jg
push
sub
adc
fisubs
pop
imull
ljmp
loopne
sub
cmpsl
mov
dec
out
fdivs
cmp
adc
aad
push
aad
mov
stc
js
mov
mov
dec
bound
std
cmc
xor
fmulp
cmp
sbb
push
xchg
pusha
movsb
out
outsb
fstpt
and
ss
pop
adc
cmp
cmp
pop
imul
leave
sub
jl
cltd
addr16
jae
icebp
cmp
and
fmull
dec
xchg
adc
jg
adc
and
push
xchg
pop
lods
or
scas
or
adc
inc
jp
dec
fcompl
xchg
js
js
fsts
aaa
out
ret
ja
xor
stc
pusha
out
mov
or
add
cmp
lcall
aaa
adc
or
mov
adc
adc
sti
mov
mov
add
pop
xchg
adc
pop
push
stos
or
int3
inc
and
push
es
mov
fwait
xchg
cmpsl
sbb
ss
negl
jo
mov
pop
je
inc
mov
push
outsb
fidivrl
subb
rolb
cltd
pop
loop
dec
mov
dec
sbb
mov
dec
repnz
test
ds
sbb
sbb
ficoms
xlat
mov
and
decl
pusha
pop
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
icebp
jo
out
adc
adc
xchg
loopne
push
mov
out
stos
add
lahf
xor
arpl
jo
sbb
jnp
and
outsb
jno
addr16
adc
int
xor
add
jecxz
push
adc
jns
add
jp
movsb
rcll
pop
popf
outsl
daa
fidivl
cmp
lea
xchg
adc
cmc
ds
jno
popa
repnz
mov
ret
xchg
sub
dec
sub
lret
jbe
ja
xchg
ja
pusha
or
inc
les
imul
cli
mov
mov
cmove
inc
repnz
addl
scas
xchg
hlt
adc
mov
jno
in
sbb
loope
jne
and
fistpll
js
in
jne
fs
cs
ljmp
jnp
movsl
cmp
rcrb
icebp
testb
fldenv
push
neg
inc
pop
mov
lods
enter
mov
cld
popf
movsl
push
jae
ja
out
bnd
fcoms
fcmovbe
mov
sbb
cs
fcomp
decb
into
pop
add
dec
lods
call
stos
mov
arpl
movsb
and
inc
push
ja
arpl
clc
pushf
dec
mov
sub
jae
inc
pop
ret
rcr
mov
sbb
mov
es
inc
test
jnp
jno
lahf
fsub
jle
jae
adc
pop
popf
scas
pushf
sti
or
icebp
push
mov
mov
iret
fstpt
cwtl
dec
mov
adcb
loope
add
fldt
jecxz
imul
cmp
in
mov
add
repz
iret
xchg
cmp
mov
jmp
sbb
sub
xor
sarl
add
mov
in
in
xor
add
or
cmpsb
jle
and
mov
jl
shrb
pop
pop
movsb
scas
inc
push
ret
add
mov
inc
jns
sti
mov
jg
stc
mov
sbbb
mov
add
cwtl
jecxz
fwait
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
pop
aaa
mov
movlps
dec
lret
and
inc
push
into
pop
mov
ss
or
js
shr
sbb
xor
and
or
hlt
bound
sub
jne
in
pop
sbb
or
sub
nop
jo
loope
imul
test
shrb
mov
hlt
or
cmp
push
out
rcrl
mov
stos
push
and
leave
dec
sbb
pop
jl
repnz
int3
stc
mov
test
xor
ret
mov
pop
imul
imul
pusha
daa
test
pop
lcall
sub
sub
push
xchg
xchg
push
jb
xchg
out
mov
lea
inc
cmp
mov
adc
cmp
fimuls
insl
add
dec
dec
cmpsl
cltd
repnz
push
repz
std
cmp
mov
fcmovb
push
xor
imul
or
mov
xor
pop
imull
adc
and
xor
out
xchg
cmp
jge
add
inc
sub
addr16
cmp
jl
mov
jae
data16
or
jp
rorb
and
mov
jb
and
imull
je
adc
fs
cmp
fwait
jecxz
ja
or
aam
dec
pop
ficomps
cli
inc
xchg
rcrb
add
cli
or
sub
inc
andl
test
das
mov
loopne
jo
sbb
shl
push
jae
test
mov
ret
movsl
mov
or
adc
inc
les
add
jno
shll
cmp
insl
mov
sbb
and
jge
out
sbb
lods
adc
cmp
ja
shl
xor
and
and
sbb
aad
popa
pop
sub
add
pop
sub
int3
shl
and
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
pop
sbb
enter
inc
ds
loope
fwait
les
outsl
cmp
mov
xor
inc
sub
outsb
push
sub
mov
mov
pop
inc
jno
jbe
lods
jmp
in
mov
xchg
test
adcb
jnp
jge
pop
mov
or
rcrl
fistps
cmp
pop
inc
in
js
test
pop
jno
andl
sbb
and
cmpsl
mov
jge
add
pop
jp
xchg
mov
pop
adc
cmp
imul
and
daa
mov
test
sbb
insl
ja
rorl
fstpl
push
push
cwtl
std
mov
sub
fisttps
rol
and
fwait
out
xchg
mov
ss
aas
or
ss
out
xor
lret
xor
test
lret
mov
and
out
dec
cmpsb
dec
bound
jl
sti
dec
push
push
pop
lock
pusha
pop
imul
push
adc
pop
push
hlt
pop
push
ja
shlb
hlt
imul
inc
rcrl
mov
jmp
orb
jge
pusha
aam
sub
jae
sbb
enter
test
jnp
outsl
push
js
cmpsl
fcmovnu
mov
dec
fstl
push
sub
inc
inc
jecxz
ja
push
pop
sub
inc
repnz
jae
or
cmpsl
xor
mov
push
aam
sbbl
outsl
push
mov
push
mov
fsubrs
aaa
iret
push
aam
fisubl
incl
cwtl
pop
insb
mov
mov
push
xchg
pop
icebp
fstpt
push
sub
filds
xor
pop
std
pop
xlat
push
scas
adcb
insb
outsb
cmpsl
dec
or
xchg
inc
sbb
push
rolb
inc
cld
fsts
fildl
ds
lea
mov
xchg
mov
xlat
fwait
xchg
or
cli
popa
xchg
dec
adc
pop
cmp
leave
and
es
jmp
sub
adc
cltd
mov
adc
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
ljmp
enter
dec
cwtl
push
sbb
pusha
mov
mov
sbb
lea
mov
mov
adc
rcrl
xchg
stos
jmp
jmp
loop
insb
fwait
and
stos
jp
and
leave
cmp
cwtl
mov
in
in
sbb
ror
sahf
out
fmul
mov
mov
aaa
scas
movsl
push
test
mov
cmp
shll
pop
dec
jbe
jbe
inc
push
arpl
cmp
repz
fs
loopw
shrb
jae
fsubl
movsb
and
in
jne
add
push
and
int
fwait
jle
mov
inc
inc
cld
out
sbb
das
xorl
mov
and
jmp
mov
cmp
inc
popf
push
or
out
push
ficompl
push
test
and
push
or
push
mov
xor
adc
sub
adc
push
mov
inc
bound
add
js
mov
push
icebp
pop
mov
into
sbb
int3
cmp
xchg
scas
outsb
adc
nop
xchg
pop
pop
pushf
out
mov
push
sti
push
xlat
fadd
mov
mov
mov
insb
push
mov
xchg
adc
jb
test
push
cmpsl
outsb
pop
or
mov
in
jnp
and
pop
enter
lea
xor
stos
jo
cmp
inc
push
lret
mov
jp
repz
inc
sti
add
and
dec
adc
or
jle
cmp
shlb
test
aam
insb
mov
mov
sub
lahf
aam
adc
stos
jnp
lods
call
pusha
pop
sbbl
cmc
push
xor
xor
mov
mov
pop
popf
sbb
imul
cmc
sbb
fsts
aad
cmp
jp
into
inc
push
sub
mov
push
repz
push
or
lcall
inc
or
or
fbstp
xchg
jne
bnd
scas
sub
es
push
mov
or
decl
test
mov
pushl
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
cmpsl
xchg
js
mov
adc
xchg
mov
fistpll
mov
in
int
add
jmp
sbb
shr
jle
loope
sbb
pop
fs
mov
fisubs
fistl
and
and
or
lahf
push
ds
add
jle
xchg
fcmovb
inc
faddl
bound
inc
push
mov
test
sub
or
addl
cld
push
mov
aas
xchg
mov
inc
clc
pushl
insl
or
out
leave
push
adc
fcoml
je
nop
jge
lock
adc
xchg
sbb
mov
dec
jb
cmpsl
aad
or
cwtl
rorl
sub
lahf
fbld
adc
jns
jge
stc
mov
pop
stos
mov
aaa
js
push
add
int3
xor
sbb
jne
fwait
mov
enter
and
stos
jns
jecxz
adc
mov
pop
sub
jge
std
subb
sbb
rorl
faddl
xchg
js
xor
cmpsl
arpl
push
out
clts
sub
cmp
dec
outsb
ret
push
fldt
push
jne
in
std
push
and
test
stos
pop
nop
jno
mov
addr16
xchg
push
ja
fdivrl
dec
sub
stos
add
jne
mov
pop
mov
pop
sub
mov
rolb
fmuls
mov
mov
sub
shrb
fldl
arpl
outsl
insb
mov
pop
mov
add
xorl
mov
add
or
and
add
std
push
out
mov
push
aam
sub
or
in
push
test
jae
sahf
xchg
adc
xor
ja
cs
out
inc
hlt
add
inc
dec
or
jl
ret
bound
repnz
cmpxchg
cmp
adc
mov
add
xor
jo
into
pop
movsl
sub
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
lods
imul
xor
and
int3
inc
pop
stos
pusha
push
push
nop
addr16
outsl
ret
es
stc
adc
pushf
xor
dec
sub
mov
inc
jo
xchg
repz
lock
shll
pop
fidivrs
push
mov
dec
lcall
jecxz
jnp
push
jmp
movsb
sub
mov
jns
aad
into
and
or
jae
jle
inc
repz
xor
xchg
xchg
dec
xchg
adc
sti
cmp
dec
inc
and
mov
pause
xor
or
xchg
cmp
clc
xor
mov
out
clc
sarl
or
mov
jmp
sub
cmpsb
loopne
jo
lods
test
imulb
push
insb
mov
ficomps
xor
mov
in
add
and
nop
daa
pop
jle
dec
enter
pop
and
jecxz
std
dec
and
jl
push
pop
xor
sub
inc
or
and
out
fsubl
dec
in
ret
sbb
jnp,pt
lret
call
and
cwtl
dec
fisubs
cmp
and
sub
inc
mov
imul
or
xor
imul
pop
mull
jo
aaa
mov
pop
mov
stc
sahf
mov
cs
andb
mov
in
lahf
push
shlb
push
adc
int
dec
add
jl
sub
xor
mov
mov
jg
xchg
push
xlat
push
shrb
pop
scas
pop
mov
xchg
shlb
jae
dec
nop
outsl
jb
faddl
pop
and
iret
or
inc
loop
movl
fstps
push
dec
pop
rolb
movsl
mov
js
pop
xlat
int
int
push
sub
divb
pop
adc
push
ja
push
adc
out
adc
ret
or
sbb
or
sub
sti
dec
mov
stc
icebp
pop
pop
push
jmp
leave
lea
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
cltd
sarb
cwtl
adc
adc
jecxz
aam
ljmp
fstpt
bound
inc
pusha
aas
and
push
adc
jle
test
jl
pop
jns
dec
push
mov
lods
add
ds
inc
sti
ja
mov
jge
shll
ret
and
mov
cwtl
jbe
mov
sbb
movsb
or
push
dec
mov
inc
push
mov
imulb
and
xchg
ja
mov
mov
je
add
insl
mov
popf
push
cmp
movsb
mov
imul
or
mov
push
outsl
sbb
sub
xor
or
shl
pop
mov
test
jne
sbb
adc
inc
mov
dec
out
lahf
in
and
mov
loope
std
into
int3
iret
ds
mov
stc
fists
pop
shrb
sub
xchg
pop
mov
test
xor
clc
loopne
aaa
enter
xor
mov
icebp
ljmp
stos
scas
insb
loop
or
adc
cmpsb
dec
mov
mov
push
insl
xor
pop
inc
cmp
pop
add
xchg
loope
mov
test
inc
jle
lock
sub
or
fstpl
sub
cmc
sbb
and
mov
lcall
test
repnz
notb
push
sbb
fld
pushf
int
insb
sbb
mov
jo
xor
arpl
add
sub
scas
or
pop
inc
lods
les
aaa
mov
popa
cmp
aaa
movsl
es
daa
shl
sbb
sbb
sbb
xchg
out
stos
in
cmc
stos
xchg
cltd
xlat
mov
cltd
clts
xchg
mov
sahf
nop
xchg
ret
push
jp
sub
inc
sbb
scas
sahf
adc
stos
mov
sub
mov
test
xor
je
mov
cltd
ljmp
lods
dec
es
in
xor
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
mov
mov
enter
sbb
imul
add
push
fisubs
xchg
dec
inc
fldt
cmpsb
mov
hlt
dec
repz
xchg
jle
ret
lods
repz
sbb
mov
mov
cmpsl
mov
in
loope
negl
and
lock
fstps
sub
shrb
ss
lds
cmp
bound
mov
cmp
xchg
and
loope
push
pop
adc
mov
fwait
cmp
cmp
xchg
es
cmp
sahf
or
xchg
xchg
mov
out
subl
pop
repnz
rcll
pusha
pop
in
push
iret
flds
lock
divb
sub
sahf
cs
sbb
repz
cltd
xchg
mov
mov
cli
mov
inc
sbb
je
mov
out
cmp
dec
push
pop
outsl
fbld
xor
cmp
sti
dec
inc
clc
std
imul
jl
movsl
pushf
fisubrs
mov
push
in
jge
stos
insl
add
push
push
jo
cs
outsb
push
mov
xchg
xchg
dec
push
aad
sub
cmp
bnd
sub
fcmovb
inc
in
dec
xchg
loope
outsl
or
push
int
aad
xchg
sahf
xor
mov
jecxz
xchg
push
sbb
jae
adc
pop
movsl
jle
test
add
mov
out
xlat
aam
popf
mov
scas
rcrb
xchg
push
inc
into
sbb
movsl
cmpsl
add
mov
pop
out
lcall
popf
lods
pop
dec
xor
jl
push
jbe
out
adc
mov
out
jge
out
sar
sub
loope
fwait
sub
push
mov
mov
jb
out
xor
in
pop
add
jmp
mov
pop
ror
push
stos
cmp
cli
adc
jne
cmp
hlt
cmpsl
sbb
das
sub
rcl
sbb
xor
loop
push
xor
hlt
loope
fisttps
scas
push
mov
aaa
inc
ljmp
xor
gs
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
dec
mov
adc
movlps
add
fsubp
xchg
insb
fidivl
cs
pop
insl
sti
pop
mov
mov
sar
mov
dec
xlat
popf
outsb
dec
testl
es
shrb
push
aad
push
dec
scas
ljmp
pop
xor
mov
ja
push
outsb
cmp
aad
lret
push
movsl
adc
pop
repnz
sub
testl
pushf
xchg
push
es
sub
jg
cmp
stos
mov
pop
mov
mov
push
and
insl
and
xchg
iret
mov
push
xchg
dec
arpl
mov
sbb
adc
pusha
insl
sub
loope
mov
leave
mov
hlt
jbe
mov
movsb
out
mov
iret
inc
mov
dec
arpl
stos
cld
jecxz
add
jns
ret
pop
data16
insl
inc
sti
clc
in
inc
movsb
jo
push
cmp
das
shl
fs
ret
rorb
cs
jge
std
sbb
jmp
xchg
cmp
xor
and
fxch
stos
es
jno
dec
xchg
sub
jmp
mov
add
push
stc
fidivrl
cmp
inc
int3
pop
aaa
inc
ljmp
rorb
test
test
daa
mov
inc
ret
andb
negl
test
push
add
in
pop
mov
jo
ja
pop
dec
loope
stos
xchg
add
scas
jl
cmpsl
push
test
jbe
sbb
jecxz
or
jo
mov
pop
xor
lods
adc
mov
mov
cmpsb
outsb
test
mov
les
shrb
js
fstl
xchg
lock
sub
js
lahf
lds
lds
xor
xchg
outsb
inc
mov
jb
fwait
enter
or
mov
sbb
lahf
mov
xor
and
movsl
sub
insl
xor
add
push
shll
pop
outsl
sbb
mov
fcmovnb
xchg
sbb
imul
jno
jns
sbb
std
rclb
and
js
stos
fisubl
xchg
push
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
rcrl
sub
mov
adc
inc
ret
xor
add
dec
aam
shr
mov
sbb
xchg
fistl
pop
mov
sub
xchg
les
cmp
mov
imul
fimull
lret
or
and
push
cli
mov
fdivrp
inc
dec
lods
push
mov
sbb
rcll
sbb
xchg
inc
fs
mov
adc
sahf
lods
mov
or
jmp
testl
ja
mov
jmp
cmpsb
adc
leave
jnp
repz
in
mov
popf
cpuid
faddl
add
jecxz
xchg
outsl
or
or
ljmp
cmp
lret
orl
or
fimuls
out
addb
in
dec
jl
xchg
pop
lret
rcrb
dec
mov
fldenv
xchg
mull
fidivrs
mov
mov
movsl
test
stc
xor
and
push
cmp
dec
adc
into
rcrb
jns
les
dec
sbb
fcmovu
orl
jl
inc
pop
xchg
sbb
mov
cmp
mov
adc
sbb
sub
jg
cmpsl
mov
cs
add
or
sub
dec
lods
mov
sub
addr16
shlb
jae
cmc
lcall
mov
push
int3
loop
or
jl
push
jp
pop
add
ficoms
sar
add
dec
cmp
or
pop
mov
xchg
loope
test
push
insb
out
jbe
mov
jae
in
test
ds
imul
out
cmpl
pusha
sbb
fisttpl
in
push
mov
and
loop
cwtl
push
imul
sbb
lods
mov
sbb
dec
mov
cmc
adc
adc
imul
mov
inc
xchg
repnz
shll
lahf
ret
xor
add
pop
or
mov
jae
cmc
scas
push
movsl
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
add
loopne
xchg
push
xchg
vpmacswd
mov
cmp
aas
sti
mov
sub
mov
shll
icebp
mov
in
loopne
mov
cmp
pop
mov
mov
aad
fwait
mov
lea
mov
dec
add
lcall
mov
mov
xor
push
pop
xor
or
jno
loopne
jg
ljmp
shl
into
mov
mov
mov
mov
jno
cmp
aas
sti
inc
add
pushf
ret
repnz
test
or
loope
jmp
add
sbb
ja
cmp
lock
inc
xorb
inc
mov
mov
mov
fmul
iret
xchg
add
icebp
test
loop
loopne
mov
lret
loop
hlt
xchg
and
repz
xor
or
testb
in
data16
stos
inc
test
mov
iret
sub
pop
repz
xchg
icebp
push
mov
ret
jge
jp
fidivs
add
scas
sub
repnz
clc
and
inc
push
jl
bound
and
sub
test
inc
jbe
add
and
fists
lahf
cmp
pushf
sub
lods
das
es
test
pop
out
das
aaa
daa
pusha
add
stc
add
push
scas
xchg
mov
add
mov
cwtl
lret
flds
mov
pmaxub
stos
lret
and
pop
iret
and
xor
jno
pop
int3
arpl
fldl
fsubs
push
xlat
inc
xor
mov
movsb
adc
fdivrl
rol
xchg
adc
in
imul
lock
shll
pop
out
cmc
int
popa
and
mov
mov
call
jmp
mov
add
jo
push
loopne
sbb
push
push
mov
sbb
lods
mov
xlat
lds
add
push
pop
mov
mov
jmp
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
push
test
push
xchg
adc
mov
xchg
adc
mov
push
stos
sbb
sti
scas
xor
ds
mov
addr16
xchg
add
push
lods
pop
xor
inc
xchg
leave
loopne
cmp
adc
xchg
xor
cmp
adcl
xor
outsl
in
and
mov
pop
push
jle
and
dec
not
adc
lret
into
jle,pn
dec
jmp
mov
iret
out
and
cwtl
lds
pop
mov
icebp
cmp
das
icebp
xlat
lret
in
cmpl
mov
xchg
xor
loope
push
mov
push
int
inc
dec
test
mov
pusha
and
xchg
mov
out
pop
in
outsb
dec
pusha
clc
inc
pop
mov
int3
dec
mov
test
adc
dec
nop
and
aaa
in
sbb
or
push
cmc
pop
mov
mov
out
sbb
inc
cmp
pop
pop
bound
push
mov
mov
test
fsubr
jp
sbb
fdivrs
cmpsl
dec
inc
push
adc
sbb
leave
jmp
mov
mov
xlat
out
outsl
les
rolb
push
insl
mov
shrl
cmpsb
icebp
or
outsl
movl
mov
shll
pushf
int
ficompl
aam
xor
lahf
cltd
inc
fdivr
inc
out
sti
lock
add
mov
and
insl
mov
mov
leave
lahf
pop
ds
aaa
mov
mov
sahf
mov
inc
mov
sbb
nop
scas
and
cmp
adc
mov
idivl
repnz
sub
pop
mov
inc
mov
cli
out
xlat
pop
jbe
xor
lock
or
fnstenv
cmpsb
jnp
push
or
push
mov
sbb
dec
outsb
ja
out
xchg
out
push
xchg
rolb
fsubrl
gs
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
ljmp
enter
add
pop
mov
ss
bound
imul
sbb
cmp
adc
cmpsb
mov
sub
cltd
loop
into
sub
mov
mov
xchg
fs
mov
xor
mov
jns
cld
rorb
addr16
in
enter
imul
cltd
enter
inc
jno
mov
scas
push
cltd
jg
push
push
xchg
mov
and
push
xor
push
add
lds
mov
rolb
divl
pop
mov
dec
cmpsl
mov
lcall
pop
in
cs
pushf
push
in
addr16
arpl
dec
sbb
jecxz
out
test
or
sar
xor
inc
xor
jo
xchg
push
arpl
dec
dec
pop
cmp
cld
jg
fnstsw
jmp
push
idivl
nop
lock
sub
xchg
dec
jl
jns
inc
aaa
subl
push
daa
aam
push
mov
add
jle
push
cmp
das
fs
jmp
cli
sub
repnz
dec
pop
bnd
and
sub
in
scas
repz
dec
jmp
sbb
stos
mov
frstor
pop
inc
jns
into
orl
aaa
jb
arpl
iret
push
test
pop
inc
cmp
sbb
cld
rcl
sbb
adc
mov
shr
mov
pusha
dec
jnp
push
xchg
mov
jge
or
lret
stos
pop
inc
pop
and
and
loope
jns
pop
das
cld
insb
addr16
pop
fs
ret
out
xchg
fs
mov
outsl
repz
mov
lret
stc
insl
aas
inc
loopne
jg
xchg
cmpsl
and
outsb
enter
daa
lcall
scas
pop
int
out
fstpl
dec
cmpsb
mov
push
ja
sbb
xor
xchg
inc
nop
jge
loop
pop
or
xchg
or
andb
push
lret
and
cmp
or
or
decl
decl
cmp
jmp
stos
js
pop
and
mov
shrl
enter
mov
mov
mov
sbb
lret
or
je
ja
add
push
jl
push
jo
js
mov
and
dec
lret
xor
mov
push
xchg
fiaddl
fisubs
mov
inc
jp
orb
stos
nop
dec
xchg
stos
sub
sbb
lods
lods
in
aaa
cmpl
test
pop
in
aad
mov
cld
mov
push
dec
in
loop
mov
dec
sbb
mov
jne
xor
mov
pop
add
mov
push
call
rcll
enter
xchg
popa
cltd
outsb
jb
xor
lods
leave
div
ret
mov
insb
icebp
fs
pusha
rolb
add
outsb
addr16
sbbl
cmp
pop
aaa
push
push
inc
lods
dec
jle
adc
push
aad
daa
fwait
imul
pop
push
mov
pop
int
cmpsb
mov
inc
imul
in
out
sub
and
out
jns
test
inc
stos
scas
or
push
inc
jp
jbe
mov
iret
mov
out
andb
add
int
add
cmpsl
or
add
dec
dec
push
jmp
lret
pop
or
adc
icebp
push
mulb
add
and
rolb
out
add
jmp
test
ss
or
repnz
mov
lods
aaa
inc
int
add
mov
inc
test
outsl
mov
int
xor
inc
movsl
add
ds
fdecstp
repnz
sub
sti
adc
sbb
pop
cltd
rclb
sbb
pop
sub
bound
lods
mov
hlt
addr16
inc
mov
mov
pop
xchg
jne
cmp
idivb
jne
lret
test
loopne
call
or
mov
adc
ds
popa
cmp
dec
pop
cmpsb
loopne
lret
push
jbe
pop
mov
xchg
inc
push
sub
ss
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
jo
js
je
adc
movlps
cli
imul
arpl
cmp
push
mov
sbb
jae
jnp
test
add
imul
mov
bound
jb
jo
sub
xor
inc
adc
xchg
mov
mov
dec
jle
mov
hlt
ret
test
mov
jb
test
xchg
sbb
or
jl
fs
popf
ret
xor
es
push
and
pop
and
mov
fidivs
std
xchg
push
andl
push
mov
movsb
leave
sub
mov
xor
or
mov
jb
xchg
outsb
test
and
je
sub
cmp
stos
scas
and
mov
pushf
mull
and
jne
fstpl
jno
loop
jmp
jmp
push
dec
addr16
lea
shll
xor
push
js
push
jg
sti
mov
mov
lret
insl
test
ss
jnp
xchg
xor
orl
adc
rol
mov
clc
xchg
mov
pop
adc
scas
pushf
call
jmp
movb
rclb
pop
mov
iret
out
mov
add
movsb
mov
cs
loopne
dec
addr16
dec
lods
mov
dec
insl
or
mov
or
loopne
push
dec
out
cld
pop
inc
out
add
or
sub
pop
xlat
ja
test
rclb
stc
jno
lock
hlt
pop
mov
sbb
mov
aam
adc
bound
in
lods
leave
jo
pop
xchg
xlat
inc
pop
jne
shr
out
lret
sbb
sub
rorl
xor
dec
test
jno
int
push
and
pop
in
mov
cli
pop
cmc
call
test
add
jge
inc
popfw
sub
jle
and
daa
ljmp
mov
aaa
out
pop
sbb
xor
sahf
je
ljmp
inc
adc
pop
xchg
jmp
mov
xchg
xchg
inc
push
cmp
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
or
adc
movlps
ljmp
push
mov
or
add
lea
push
stc
xchg
mov
xchg
mov
clc
clc
fcomps
xor
pop
pop
lods
xor
lcall
pop
cmpsb
sbb
dec
testb
adc
cmp
adc
mov
es
jg
adc
jge
cmp
jge
xor
jle
pop
mov
cs
movsl
xor
sti
adc
dec
adc
sub
lret
push
cld
xor
mov
pop
pushf
jne
and
and
adc
or
loopne
mov
push
inc
mov
fsubl
jae
incb
sti
push
loop
cmc
sbb
fucomi
pop
fists
push
add
and
sub
inc
push
jo
cmp
mov
shrb
scas
lea
add
mov
stos
nop
jmp
insw
jb
sub
cmp
lock
lcallw
shll
movsb
gs
es
add
sub
mov
fcoms
in
inc
xor
lods
xchg
scas
cmp
stos
cmpsb
xor
mov
bound
enter
repnz
sub
mov
cmp
clc
dec
pop
and
nop
sbb
int3
and
gs
inc
movsl
sub
out
loope
inc
fs
dec
jp
inc
jne
mov
out
aaa
inc
dec
pusha
mov
inc
xor
add
sub
adcb
push
push
xchg
mov
dec
dec
push
jae
loope
mov
sub
mov
nop
pop
outsb
mov
sub
mov
cmpsl
fdivr
pop
mov
and
sbb
adc
sub
and
add
pop
arpl
sub
mov
inc
xchg
into
mov
stos
lds
in
push
xchg
cld
shlb
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
movsb
xchg
mov
adc
movlps
sbb
loop
ss
call
scas
aam
ret
jle
cli
into
mov
add
sbb
popa
pushl
js
cmpb
adc
pop
add
pop
jbe
ret
jnp
cmp
xor
and
lahf
xlat
sbbb
sarb
ret
sbb
js
loopne
mov
pop
mov
mov
int3
cmp
xchg
push
fistpll
pop
popa
or
int3
push
adc
int3
and
sbb
push
in
nop
mov
insl
and
pop
lret
and
pop
fnstenv
into
cltd
mov
add
dec
xor
mov
stos
test
cltd
inc
fsubs
sub
push
cs
mov
sub
push
push
in
movsl
jbe
xlat
jne
push
mov
xrelease
out
mov
iret
iret
mov
add
pop
jl
mov
jnp
es
dec
out
aaa
emms
and
ja
aam
rorb
cmp
cld
mov
push
sub
mov
stos
xor
in
mov
mulb
adc
shl
fmull
popf
mov
dec
mov
xlat
mov
adc
cli
mov
and
jnp
rcrl
or
inc
lods
hlt
subb
pop
in
sahf
adcl
lahf
stos
inc
enter
sbbb
shr
xlat
push
imul
pop
sub
es
and
and
add
or
jmp
sub
and
dec
jnp
and
sbb
test
ja
or
adc
inc
lea
loopne
mov
aad
jp
fimull
or
clc
jmp
imul
lret
add
shlb
pop
addl
cmp
cmpb
xchg
lds
inc
addr16
inc
add
xchg
in
sbb
or
test
pushl
sbb
stos
cmp
pop
movsb
pop
pop
fisubl
fimull
or
sub
sbb
loopne
dec
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
xchg
or
adc
movlps
xlat
adc
xor
adc
cmp
add
scas
fsubr
mov
mov
insb
hlt
inc
imul
xor
adc
inc
push
adc
popf
enter
pop
popf
lcall
stos
popa
mov
dec
jb
dec
or
inc
inc
and
movsb
mov
pop
or
push
jecxz
sbb
push
inc
test
cmp
shl
and
mov
loopne
sub
ret
lahf
mov
orl
daa
aam
popf
sbb
cmpsb
fsubp
mov
mov
or
push
pop
movsb
cmpsb
xchg
cmp
fisubl
mov
mov
push
push
pop
mov
pop
movsb
mov
cmp
popf
push
popf
mov
loop
daa
mov
push
ljmp
imul
sub
pushf
out
stc
dec
xor
xor
push
xor
push
push
or
test
ds
ds
scas
into
cmpsl
xor
out
adcb
push
fwait
add
sar
jno
xor
sbb
mov
cld
inc
sub
aad
ljmp
lcall
mov
out
jp
pop
mov
pop
mov
mov
mov
jl
fcmovnu
scas
or
add
jmp
aas
popf
push
xor
cmpb
push
push
popf
mov
fbstp
decl
loopne
insl
xor
jle
hlt
mov
xchg
xor
fmull
jo
xor
mov
mov
in
leave
fcmovbe
ds
pop
pusha
shlb
mov
int3
sbb
jl
adc
mov
lock
mov
mov
fsubrl
pop
xchg
xor
insl
cmp
adc
lret
xor
or
mov
inc
iret
out
cmp
adc
test
fisubs
stos
lock
pop
pop
dec
mov
push
sub
repnz
sti
orb
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
cmp
lea
enter
testl
movsl
sub
and
sbb
les
outsl
jl
adc
jae
idiv
icebp
fistpl
xchg
xchg
xchg
aam
xchg
pop
jno
in
xor
addb
and
and
adc
mov
jle
jl
dec
lock
pop
xor
mov
insl
push
sbb
adc
out
dec
or
adc
adc
sarb
popf
dec
ret
daa
jle
sub
push
test
mov
mov
aam
loop
pushf
fwait
push
rcrb
sbb
pop
mov
lret
scas
movsl
or
sbb
aad
mov
fisttpll
jg
les
and
xchg
sbb
shlb
rcr
xchg
call
inc
fnstenv
cwtl
adc
out
scas
sbb
enter
mov
pop
lea
xchg
add
pop
inc
pusha
nop
adc
jl,pn
cmc
xchg
dec
ss
push
hlt
idivb
and
and
rclb
and
sarb
xchg
inc
rcrl
decl
push
movsl
ljmp
test
cmp
nop
js
imul
pop
loopne
and
dec
test
mov
loop
ficomps
add
insb
decb
loope
dec
cld
test
mov
dec
loopne
or
iret
mov
adc
stc
shl
jecxz
insb
dec
and
inc
icebp
adc
scas
adc
sub
gs
or
ljmp
sbb
rol
aas
add
mov
out
lea
pop
sbbl
push
push
xlat
imul
iret
push
jp
addr16
mov
sbbl
push
out
jp
repz
cmp
mov
ss
push
loope
pop
dec
andl
out
inc
dec
push
fwait
pop
lea
xchg
andb
stos
xchg
and
mov
xchg
mov
sub
fucom
inc
scas
sbb
dec
adc
cmp
dec
imul
daa
pushf
push
mov
xchg
push
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
shl
sbb
gs
and
sub
repz
xor
popf
and
rorl
out
inc
lods
test
bound
jp
imul
jbe
push
lods
inc
pop
xor
imull
enter
inc
mov
pop
out
cmc
outsb
add
pushf
arpl
jmp
rorl
pop
lret
mov
das
adc
out
xchg
mov
xor
xchg
mov
dec
push
dec
mov
mov
popa
cmp
lret
jns
pop
jmp
pusha
xor
leave
lods
or
clc
mov
out
popa
sub
push
add
push
push
cmp
stc
pushf
clc
add
insb
jne
loop,pt
movsl
hlt
jno
pop
sub
or
cmc
adc
and
bound
xchg
xchg
imul
add
jl
lods
rcrl
sub
fidivs
jp
cmc
imul
xchg
xchg
jbe
int3
movsl
push
push
cmp
pop
int
dec
cmp
sbb
jbe
inc
test
out
mov
out
sub
adc
jle
xchg
add
mov
out
test
data16
cmp
test
data16
mov
sti
dec
pop
hlt
cmp
ficoms
in
jmp
ljmp
sub
xchg
inc
bound
xchg
les
popa
sub
ret
insl
movsl
inc
sbbl
ljmp
cmp
inc
jae
fnstcw
shll
xor
adc
stos
rclb
jbe
mov
sbb
loop
inc
xchg
fstpl
imul
sbb
or
xchg
push
arpl
iret
jp
push
arpl
and
cmpsl
mov
shll
mov
jnp
sbb
pop
je
notb
cmp
add
out
mov
sbbb
mov
jae
mov
shl
inc
pop
jb
addr16
add
aas
pop
bound
xor
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
fisubrl
adc
adc
xor
lret
stc
into
outsl
xor
jbe
sub
sub
cwtl
pop
enter
jno
clc
scas
js
les
jae
fidivrs
add
inc
sub
mov
jl
fildl
xor
adc
imul
jnp
sbb
mov
movsb
dec
jb
jmp
or
sbb
dec
fildll
lds
test
xchg
sub
jno
inc
jmp
hlt
cld
jecxz
popl
imul
aam
ret
or
push
dec
lret
fwait
mov
pop
subb
jne
mov
dec
scas
push
fsubr
enter
fdivrl
push
mov
push
mov
adc
stc
mov
lods
mov
rorb
stc
push
xchg
cmp
and
jne
daa
mov
push
nop
sub
xchg
cmpl
jge
mov
cmp
mov
mov
jb
inc
pop
sbb
mov
add
jp
sub
and
scas
das
pop
sub
mov
pop
lods
aas
lret
sti
fldcw
test
xchg
ljmp
jbe
jnp
and
xor
inc
push
scas
mov
fwait
lahf
mov
sbb
adc
aam
pop
ds
enter
and
push
mov
cwtl
jmp
test
or
inc
xchg
ficompl
aas
inc
xchg
movd
mov
rorl
inc
mov
std
cmp
xor
scas
push
add
mov
mov
in
sub
lods
pop
push
aas
insb
scas
mov
jecxz
dec
pop
mov
arpl
notl
loopne
es
pushw
pop
sub
dec
repnz
pop
xor
jp
notb
addr16
idivb
jmp
icebp
jecxz
mov
and
mov
inc
leave
cmp
stc
bound
cld
sbb
outsb
sbb
jecxz
lret
leave
imul
inc
rcrb
psubsw
lds
and
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
jmp
pop
adc
adc
sbb
add
data16
or
xor
cltd
xchg
movsl
ljmp
lcall
sbb
loope
sbb
mov
notb
mov
int
inc
inc
pop
int3
out
xor
jne
pop
scas
sahf
fs
dec
dec
mov
ss
and
sub
insb
cmp
xchg
fadd
and
inc
adc
and
repz
fchs
add
aaa
lock
sbbb
or
ja
cmc
sub
add
repz
mov
lret
pop
mov
call
inc
sub
repz
repz
movb
lret
shll
cmpsb
push
jl
jle
push
push
mov
pop
iret
sbb
fst
xor
neg
hlt
push
fmull
mov
andb
mov
mull
sbb
pop
pusha
add
sub
popf
dec
imul
fsubs
sbb
iret
cmp
dec
mov
aam
pushf
sbb
dec
xchg
sti
sti
xorb
shr
adc
sti
mov
cwtl
cmp
sbb
mov
push
mov
pop
pop
sti
fcmove
dec
mov
push
in
aas
test
xor
mov
mov
bound
test
cmc
push
jmp
pop
sbb
mov
push
push
aad
pop
cwtl
out
scas
jo
xchg
or
popl
jb,pt
cmp
cld
jmp
loopne
sbb
or
aaa
in
adc
jecxz,pn
pop
stc
or
lock
daa
inc
bound
cmpsl
fwait
in
inc
mov
push
rorl
outsb
stc
add
negb
mov
lds
pop
cli
xlat
jno
dec
sbb
ljmp
and
loop
pop
jmp
jo
push
ljmp
and
imul
hlt
stos
mov
xchg
xchg
add
arpl
cld
repz
fcomip
stos
imul
sub
in
leave
push
cmp
push
cmc
mov
out
sbb
dec
jl
popf
pop
icebp
sub
mov
jle
imul
loope
dec
hlt
das
imul
jmp
jno
test
mov
dec
xor
jmp
xchg
pop
ficoms
mov
dec
adc
push
shrl
andb
loopne
ss
mov
imul
cmp
cmp
mov
jl
movsb
adc
mov
jb
jp
mov
mov
in
imul
dec
push
lods
mov
mov
xor
mov
jg
add
scas
and
ljmp
sbb
push
jmp
imul
shll
clc
mov
pop
scas
sub
fmul
jle
mov
xchg
sbb
mov
xor
jmp
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
lods
push
adc
adc
leave
dec
xor
jno
mov
andb
fwait
arpl
in
pop
and
lods
call
mov
push
jne
jecxz
jl
cmp
out
dec
or
jne
mov
adc
and
sbb
mov
pop
out
or
movsl
jmp
notb
mov
dec
push
lock
iret
xor
fcmovu
movsl
pop
test
aam
mov
dec
out
and
mov
scas
inc
jnp
mov
adc
dec
jle
ljmp
cmp
mov
adc
stc
lods
lds
sbb
jne
jg
incb
icebp
xor
repz
into
aad
and
repnz
test
jbe
inc
sahf
xchg
rolb
xchg
adc
push
movsb
mov
int3
xacquire
dec
and
or
mov
xlat
test
les
fisubrs
xchg
mov
int3
jbe
jnp
dec
jae
push
jns
sbb
cmp
jo
adc
das
mov
push
in
pop
divb
arpl
jp
cmp
pop
mov
lret
bound
scas
sbb
xor
scas
cmpsb
lods
or
mov
xor
xor
pop
inc
ljmp
lret
jecxz
cli
adc
lahf
xor
sbb
xchg
or
mov
jecxz
push
mov
data16
mov
or
pop
insb
pop
adc
jecxz
pop
push
pop
cmc
das
sbb
mov
scas
rcll
fldcw
mov
js
shl
jle
clc
sbb
mov
nop
loopne
les
mov
cmp
stos
xor
xchg
jmp
sbb
push
inc
or
das
sub
enter
insl
xor
rcrl
insb
mov
fsub
pusha
sbb
lock
lcall
xor
xor
xchg
sub
add
adc
das
lds
push
out
mov
shlb
dec
add
cltd
mov
imul
add
ss
cmp
mov
mov
sub
push
jae
cmp
pushf
ljmp
fs
dec
push
iret
inc
rol
xchg
and
repz
hlt
xchg
add
aas
sbb
add
cmp
mov
inc
sbb
in
push
je
filds
das
sti
out
xchg
aam
fwait
shll
inc
dec
test
or
fstpt
rcrb
jb
or
lock
adc
mov
inc
movsl
jp
adc
and
pop
mov
insb
pop
mov
mov
mov
push
xlat
fwait
xor
xchg
les
add
mov
ret
fcompl
shl
mov
imul
imul
les
mov
add
lods
popf
dec
mov
and
push
out
adc
adc
stos
mov
xor
add
push
jne
xchg
dec
movsb
lock
inc
xchg
fwait
xchg
pop
and
jg
xchg
add
adc
xor
cmpsl
cmp
test
or
push
xor
lods
cmpsl
xor
sbbl
xchg
mov
iret
sub
sbb
sub
push
sbb
fisubrs
int3
jecxz
fdivl
jecxz
cs
push
jle
loop
repz
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
