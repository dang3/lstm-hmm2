push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
mov
xlat
jl
jl
addr16
jl
xlat
cmp
ffree
pop
push
add
pushf
add
xor
ret
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
das
xor
fdivl
mov
jb
rorb
pop
dec
fcoms
lea
mov
jbe
push
lcall
je
popa
inc
or
sub
js
stc
or
fldenv
repz
ds
xor
loope
and
js
ret
shlb
fcompl
mov
add
lret
push
ds
imul
arpl
fiaddl
cmp
and
xchg
mov
test
cltd
or
nop
inc
mov
in
inc
cld
cltd
stos
mov
idivb
push
mov
push
push
test
add
cli
sbb
dec
or
test
fdivp
lea
xor
loopne
dec
push
and
in
jns
scas
popf
lods
scas
mov
xor
adc
jge
rcl
cmp
xor
movsl
jne
popa
je
ds
mov
xlat
and
pop
mov
in
mov
dec
outsb
cwtl
sbb
pop
and
cmpsb
mov
sti
or
or
xlat
pop
out
inc
or
mov
or
mov
sub
mov
jo
jmp
add
std
cmp
fsubr
cmp
mov
or
loop
subl
lahf
mov
mov
jmp
inc
faddl
movsl
loop
add
aad
pop
ss
addr16
push
es
or
pop
cmp
jnp
lods
sti
adc
bound
call
test
jno
push
mov
and
fnsave
sbb
and
dec
mov
stc
push
int
aad
popf
mov
mov
sti
and
scas
packuswb
iret
rolb
les
cmpsb
jae
nop
add
cmp
loope
inc
jae
xlat
cmp
pop
dec
movsl
arpl
sub
dec
aad
mov
jp
into
push
call
mov
andb
jns
cmp
les
outsb
sub
into
inc
fcmovbe
pusha
jnp
push
xor
fdivr
scas
les
aas
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
cwtl
cmp
jl
addr16
jl
lcall
add
enter
std
push
and
cltd
cmc
mov
lea
and
aad
scas
cmp
mov
push
mov
pop
fstpl
fstp
lods
outsb
sub
ljmp
or
lcall
sarb
fldt
cli
xor
inc
jg
js
loop
push
lret
push
mov
shll
int
cmc
push
mov
inc
leave
cmp
add
out
out
mov
inc
xchg
in
cmp
sub
pop
sti
pop
pop
push
arpl
out
out
push
and
scas
push
sbb
xchg
jae
ds
jle
mov
jp
mov
jle
cmp
and
push
movsb
fs
pop
xchg
pop
pop
shl
push
rcl
adc
adc
mov
push
imulb
sti
push
push
xor
mov
push
mov
push
sub
into
movsl
cld
xor
mov
sbb
or
outsl
sub
insl
sub
out
scas
dec
mov
add
jle
in
cmpl
inc
lds
xor
sub
mov
jge
mov
rorl
dec
sbb
push
sbb
aad
jnp
jle
pop
xchg
pop
xchg
mov
cld
lea
or
scas
adc
add
push
add
jge
pop
ds
sub
jae
and
pop
xchg
xor
pushf
add
ja
sbb
dec
sbb
popf
mov
loope
push
cmp
pop
scas
je
lock
test
out
sbb
inc
add
and
imul
clc
mov
shl
pop
loop
lea
mov
add
pop
pop
mov
pop
or
idiv
mov
icebp
mov
or
fucomp
mov
iret
xchg
mov
sub
mov
cmp
nop
mov
fwait
cltd
stos
in
lock
jmp
push
ret
fistl
test
cli
gs
out
mov
mov
mov
nop
mov
out
fcmovnbe
movsl
dec
pop
xchg
dec
popa
or
add
rcrb
cmp
call
xor
mov
jne
movsl
roll
rcrl
push
lods
fdivr
adc
into
int
shr
fcomip
popa
dec
iret
or
pop
lahf
pop
jmp
sub
inc
imul
gs
jne
divb
fstpt
mov
lcall
cmp
ret
mov
jg
je
mov
pop
bound
xor
mov
or
ret
push
repnz
pop
insl
xor
add
mov
out
fcoms
push
add
dec
add
popa
fmul
js
and
dec
or
adc
or
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
inc
gs
dec
jnp
jl
jle
jl
xchg
loop
ret
or
pop
aam
dec
mov
repnz
pop
fimuls
repz
popf
cmp
jnp
and
cli
dec
addr16
mov
add
lods
adc
mov
mov
jmp
mov
mov
leave
xchg
pop
add
cmp
add
popa
push
sub
mov
xchg
pop
lods
jnp
stc
jo
fcmovnu
mov
xlat
mov
push
cmp
int
outsb
mov
or
test
mov
jbe
cmpsl
and
add
adc
imull
insl
in
loopne
xchg
sub
adc
add
ss
mov
mul
or
push
adc
int
cmp
lods
test
dec
es
xchg
cmpsl
sbb
cmpsb
sbb
movsb
xchg
sbb
rcl
fdivrl
or
adc
cmp
xchg
out
insb
mov
test
cmp
daa
fimull
push
jb
add
sub
insb
icebp
in
ret
imul
jno
add
mov
mov
popa
add
xor
cmp
xor
mov
insb
push
xor
test
dec
andb
fwait
or
jae
data16
sbbb
pop
addl
push
test
gs
pop
or
shlb
adc
jl
cli
adc
or
xchg
sub
jmp
in
mov
bound
jmp
xor
leave
jge
cmpsl
cltd
xchg
push
xor
movsb
mov
xchg
push
add
or
mov
aaa
clc
jnp
in
stos
and
stos
xor
lcall
jge
pop
mov
aad
seto
nop
push
mov
cltd
xchg
testb
pop
lcall
xchg
push
stos
aas
and
pop
mov
add
xchg
inc
das
pop
sub
decb
lock
pop
insb
and
iret
jge
and
data16
push
and
cmp
sub
stc
push
das
jo
pop
xor
or
enter
push
xor
mov
fnsave
pop
sub
std
lock
jmp
ret
aas
mov
aas
inc
jmp
jg
add
fistps
pop
aas
jbe
cltd
iret
mov
std
sbb
jecxz
sub
call
arpl
popf
mov
in
addb
xor
outsb
das
or
in
mov
push
imul
xchg
cmp
sub
lahf
shlb
sbb
enter
and
mov
push
inc
jno
test
into
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
in
repz
mov
movsb
inc
or
subb
shrb
js
int3
lds
pop
xchg
cmpsl
insb
adc
mov
ljmp
and
pusha
pushf
jo
mov
gs
jae
push
jmp
pop
inc
add
ja
insl
mov
mov
mov
lret
add
adc
idivb
jno
mov
repz
jnp
mov
shll
sarl
cmp
mov
mov
push
push
jo
pop
xor
ljmp
cmp
lds
test
lods
sarb
jge
dec
push
push
cmp
mov
ds
ja
mov
lret
out
nop
pop
js
cwtl
xor
pop
inc
in
das
jne
inc
fisubrs
add
sub
aad
test
movsb
sub
fidivrl
dec
rorb
xchg
out
popl
pop
loop
push
xchg
jo
push
sbb
add
pop
ljmp
out
push
pushf
in
sti
in
test
dec
mov
fwait
or
movsl
cmpsb
xlat
xlat
rolb
clc
push
dec
in
mov
into
and
imul
mov
jge
pop
cmp
insb
mov
xchg
ja
add
lds
or
push
clc
movsl
cmc
mov
sub
mov
jmp
sub
out
mov
push
adc
sub
pusha
cmpsb
jo
or
mov
shlb
push
adc
mov
dec
xchg
sub
repnz
xlat
rcl
lcall
iret
jb
andl
jns
pushf
aad
mov
dec
insl
and
ficoms
lcall
mov
cli
push
call
jae
pushf
xor
xor
shll
dec
hlt
syscall
mov
fdivrs
outsl
dec
out
movsl
or
dec
mov
inc
sbb
mov
ja
es
dec
add
pop
sub
xor
repz
iret
adc
or
adc
fwait
popl
data16
push
add
lds
xchg
mov
add
push
cmc
or
test
aaa
imul
sub
mov
xchg
adc
mov
sbb
ret
je
insl
cli
nop
adc
cmpsb
scas
cmp
dec
mov
mov
cwtl
dec
call
dec
adc
inc
sbb
insl
jo
push
cmp
pusha
mov
and
cltd
ljmp
mov
mov
ljmp
es
mov
sbb
mov
movsb
xorb
dec
and
add
xchg
inc
lods
or
mov
adc
mov
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
lea
jle
jl
adc
int
pop
add
xchg
lods
insb
adcb
jns
outsb
sti
jecxz
sub
stos
mov
out
dec
inc
pop
jo
daa
sbb
xchg
popl
mov
test
fstpl
mov
in
imull
mov
cwtl
cld
mov
inc
xchg
nop
adc
rorb
dec
lea
imul
sbb
ret
jmp
mov
call
icebp
clc
in
aam
inc
rcll
jne
and
mov
sub
std
jl
xorl
inc
std
mov
js
inc
lock
int3
adc
adcb
xchg
cwtl
dec
inc
lods
xchg
jae
push
outsb
stos
mov
dec
sbb
cmp
xlat
fnstsw
and
mov
lock
mov
test
repnz
dec
sub
loop
add
push
sub
lahf
in
sub
ror
jecxz,pn
scas
sbb
pop
outsl
gs
inc
xchg
jb
mov
or
mov
fdivl
stos
bts
shl
call
outsl
push
or
mov
rcl
outsl
add
cmp
mov
stc
inc
lock
imul
mov
in
inc
mov
inc
pop
dec
mov
and
pop
ficoml
cmp
outsb
popf
dec
js
test
push
jge
mov
ja
add
aas
jnp
sbb
jecxz
roll
sahf
cmp
arpl
jp
in
jno
and
mov
push
dec
sub
cs
test
insb
mov
pusha
mov
iret
xchg
addb
cmpsl
push
mov
test
mov
or
adc
pop
sub
stc
adc
sub
cmpsl
addr16
add
fnsave
xlat
cmpb
in
imull
xor
inc
mov
iret
les
aam
mov
cmp
inc
mov
xor
push
test
and
lret
jmp
aam
aad
int3
test
cmpsb
and
arpl
xchg
adc
stc
sbb
aam
jmp
hlt
add
cmp
incl
bound
jmp
int
mov
jecxz
xchg
jle
mov
in
xlat
mov
adc
xor
push
cs
dec
bnd
sbb
pop
loopne
data16
add
mov
out
cmp
or
pop
loop,pn
mov
dec
and
insb
cmpsl
or
pop
shll
mov
pop
addr16
je,pn
lock
fisubs
imul
int
pop
push
mov
pushf
outsl
pop
mov
dec
je
cmp
mov
int
fstpl
cwtl
dec
jne
enter
xchg
mov
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
cmpsb
clc
repz
rcrb
out
pop
push
lret
in
scas
push
cli
jnp
dec
mov
das
pop
pop
pop
mull
stos
adc
cwtl
insl
imul
insl
imul
lcall
js
adc
loope
jo
lods
jg
sbb
push
push
xchg
sub
dec
fcmovu
es
subl
and
push
adc
xchg
testl
pop
jb
mov
pop
sbb
out
adc
jl
fidivl
test
test
sub
xchg
xchg
jo
out
dec
xchg
adc
movsb
and
push
inc
jae
fcoms
rcr
js
cwtl
push
jns
pop
jne
push
leave
in
dec
adc
fimuls
push
pop
bound
sbb
cld
and
aam
orl
icebp
repz
cs
sub
cwtl
sahf
inc
cli
ja
mov
outsl
push
lods
mov
cmp
imul
ss
cmp
dec
jb
in
sub
adc
mov
sbb
in
pop
jbe
pop
data16
push
out
xlat
lock
cs
test
add
lcall
aaa
stos
mov
push
mov
les
outsl
or
xchg
cmpsl
push
mov
sub
push
dec
sbb
dec
cmp
lcall
inc
aam
les
mov
ficoml
push
icebp
out
cmp
pop
aad
das
addr16
jl
jl
pop
fmull
jle
mov
repnz
fnstcw
adc
adcl
dec
imulb
sbb
add
adc
inc
xor
or
cld
mov
fucom
fisttpl
in
or
shlb
xchg
sub
jmp
jbe
lea
cwtl
lods
dec
jge
inc
mov
jo
subl
pop
fildll
xor
ja
sub
adc
or
cmpsb
les
xchg
in
jmp
mov
mov
xor
adc
insb
fdivrl
insb
loopne
and
dec
mov
lods
push
jmp
push
push
xchg
cmc
pop
mov
scas
out
pusha
cltd
cli
xlat
jne
int
mov
cli
xrelease
hlt
cwtl
dec
jp
mov
mov
scas
call
inc
cmp
lret
xor
xor
out
cmp
in
inc
add
sub
adc
xor
dec
sub
dec
add
loop
dec
fisubrl
lcall
sahf
popa
das
test
shlb
xor
popf
adc
lahf
sbb
outsb
mov
inc
fcmovb
adc
lock
sahf
mov
ds
push
cmp
js
mov
cmp
test
insl
divl
lea
mov
mov
cmp
jmp
mov
jne
adcb
out
mov
jl
jle
jl
and
movsb
jmp
xor
in
adc
stc
xchg
cmp
dec
push
fdivrp
push
enter
dec
lcall
mov
jns
jae
mov
lahf
cmp
stc
stos
sub
add
adc
psubsw
fs
mov
mov
outsb
lcall
and
xor
scas
mov
scas
stc
cmp
or
lahf
scas
fs
sub
outsb
sub
inc
and
sbb
or
cld
rorb
aaa
filds
daa
jp
lods
and
add
insl
mov
push
mov
dec
rcrl
mov
add
rorl
add
dec
sub
sbb
shll
dec
mov
enter
pop
jle
mov
jg
repnz
int3
les
cmpl
cmp
xchg
inc
cmp
iret
mov
stos
cmpsl
cmp
and
shl
sbb
sub
notl
cwtl
loop
mov
lods
mov
call
sub
push
stc
jmp
jbe
push
loop
adc
stos
add
sub
into
cmp
mov
sbb
mov
mov
sbb
push
dec
aad
inc
xor
push
rorl
int3
out
cmp
test
sbb
in
mov
sti
or
cmp
or
insb
int3
xchg
jns
add
cmpl
mov
push
jl
sarb
sbb
test
outsb
out
in
cmp
test
jge
mov
insb
sbb
and
into
movsl
sub
mov
sbb
xchg
idiv
daa
stos
addr16
adc
dec
lods
aaa
shl
and
loop
mov
sbb
mov
mov
fisubrl
in
inc
je
sub
push
cli
imul
xor
inc
insb
xor
xor
lret
xchg
mov
inc
pop
jo
rorb
clc
add
and
dec
cmp
flds
lds
dec
sbb
push
ret
add
stos
icebp
jmp
pop
out
sub
fcomip
or
cmpsl
xchg
add
sub
cltd
in
popa
push
loop
inc
sub
and
testb
jbe
adc
jecxz
dec
add
imul
inc
pop
jecxz
jecxz
push
pop
out
shll
pop
sbb
ja
and
add
mov
or
stc
dec
sti
jl
sbb
add
inc
fstps
lcall
mov
lret
outsb
mov
popf
mov
jno
shrl
add
daa
adc
call
cmc
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
rorb
jl
addr16
jl
sbb
int3
jne
xchg
mov
cld
sbb
fmuls
mov
aam
ja
sbb
fwait
push
lods
inc
paddsw
in
inc
mov
sub
mov
aam
xor
add
lahf
add
xchg
pop
inc
sbb
add
inc
pusha
push
in
ss
push
add
and
scas
xchg
add
rorb
xchg
dec
sbb
cmpsl
mov
mov
jae
push
mov
lcall
sahf
hlt
rcrb
jns
test
mov
pushf
mov
mov
xchg
xchg
ror
adcl
pop
orb
cmp
and
fisubrl
aaa
mov
xlat
sbb
jns
mov
sarb
adc
into
cltd
in
or
int
xchg
mov
imul
movsb
mov
lds
loopne
pop
fdivr
lcall
mov
cmp
movsl
cmp
sub
or
mov
add
xchg
in
add
ja
sbb
idiv
sar
repnz
dec
jmp
inc
add
les
data16
fxtract
dec
sub
or
lahf
int3
mov
push
fidivrl
cmp
sahf
add
loopne
pop
sub
xor
inc
push
or
jno
shlb
add
sar
pop
jmp
add
xor
xchg
or
xchg
or
mov
and
xchg
and
adc
bsf
sub
xor
into
sbb
mov
cli
xchg
xchg
and
cmp
cs
pusha
or
jb
mov
inc
ds
cmp
cmp
sub
stos
and
sti
xchg
jl
mov
aaa
xor
xchg
mov
repz
jecxz
inc
int
jle
mov
stc
or
or
dec
sbb
cmp
inc
sahf
outsb
popf
sbb
in
pushf
adc
sub
inc
push
sti
sarb
cmp
pop
and
inc
pop
ljmp
pop
xor
push
jg
popa
xchg
pop
pop
cmp
xchg
jbe
jb
sahf
sahf
movsl
ret
dec
in
in
adc
movsl
sti
inc
mov
add
out
mov
push
mov
or
sub
loope
xchg
adc
aas
shlb
pop
push
xor
mov
int3
jp
fs
imul
xchg
mov
xchg
test
sub
out
add
shr
lret
les
repz
outsb
sub
adc
inc
adc
mov
fcmovb
sbb
push
sahf
and
push
mov
addb
int3
xor
cld
cmp
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
xchg
xor
and
addr16
jl
sub
mov
in
or
lret
add
mov
call
add
xor
xor
cmp
ljmp
mov
mov
adc
bound
dec
hlt
xor
adc
movsl
adc
add
dec
sub
and
dec
int
xor
jge
dec
ljmp
mov
jp
test
test
jne
pusha
push
sbb
out
and
jb,pt
and
or
test
pop
mov
data16
jge
and
out
mov
pop
in
push
pop
sbb
push
pop
out
mov
push
dec
inc
cmc
orb
push
lods
loope
icebp
fdivrl
mov
xchg
mov
pushf
jecxz
in
push
lahf
cmpsl
cmp
and
or
andb
lahf
out
xor
mov
adc
cmc
adc
xchg
adc
xchg
lret
sbb
in
and
fidivs
mov
pop
and
out
xchg
jg
sub
fldcw
sbb
add
mov
dec
jecxz
or
mov
jmp
addr16
int3
inc
dec
xchg
test
fs
and
daa
jae
les
daa
int
cmc
cmc
and
fistpl
xchg
lods
stos
cmp
jb
shl
iret
push
xchg
leave
adc
mov
jle
lahf
popf
pop
fisttpll
fbstp
lret
adcb
pushaw
stc
orl
aas
sbb
movsb
xchg
jmp
in
mov
push
in
clc
xchg
cmp
fildl
mov
sti
icebp
addr16
lods
xchg
test
push
push
pop
dec
lcall
popa
test
pop
aaa
push
pop
imul
lods
xchg
repz
jl
dec
int3
sti
sbb
dec
xor
mov
sbb
sbb
xor
adc
popa
jmp
push
add
add
xor
repnz
fmul
adc
sbb
mov
ds
push
fsubp
popa
testl
outsl
xchg
push
or
jge
js
rolb
mov
sub
lea
push
sbb
jmp
fwait
outsl
mov
push
pop
cmc
enter
int3
cs
mov
hlt
por
enter
hlt
push
sbb
stos
or
lds
dec
cmp
cmp
jmp
adc
and
push
jae
mov
fdivrl
ficoms
lock
movsl
data16
xlat
ds
pop
add
push
cltd
scas
mov
xor
cmp
sahf
subps
rolb
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
mov
jl
jle
jl
jecxz
fs
int3
sbbb
dec
imulb
sbb
xchg
test
das
insb
jns
cmp
imul
out
push
fcompl
cmp
push
inc
aad
ds
hlt
xchg
push
add
in
xchg
xlat
loopne
push
dec
arpl
fiadds
pop
jmp
ret
sbb
jle
jmp
pop
cmp
sbb
pop
dec
push
dec
xor
mov
mov
movsb
call
adc
push
or
jns
add
pop
ret
cmp
outsb
push
inc
cmp
aam
push
imul
or
xor
lcall
test
imul
jle
xchg
int
loope
sub
lock
andb
je
xor
jmp
pop
lock
mov
push
push
cmpsl
adc
add
and
jmp
in
pop
inc
dec
mov
aas
fadds
cmp
add
scas
mov
fs
test
aad
dec
pop
aam
sarl
aad
pop
imul
push
jp
movsl
and
ja
insb
incl
nop
xchg
pop
cmp
pop
jmp
clc
mov
mov
lret
aad
lcall
call
pusha
push
and
cmpsb
inc
aad
mov
ja
push
xchg
push
cmp
xchg
insb
mov
loopne
inc
mov
pop
inc
insl
fisubl
sbb
fmull
mov
push
imul
aam
push
cmpsb
gs
mov
and
adc
sub
rcll
arpl
hlt
es
sbb
inc
cmp
cld
nop
fsubs
clc
cmp
pop
inc
add
mov
mov
fdivrp
test
sbb
fbld
push
jge
push
repnz
popf
enter
pop
orl
mov
shr
or
cmpsl
cmp
mov
fildl
inc
push
imul
jae
sub
ja
movsl
adc
or
jg
jo
pop
hlt
sbb
das
sti
rcrl
dec
stos
sub
cmc
out
add
mov
xchg
rcll
sbb
push
lock
into
xor
inc
lcall
mov
rcrb
push
cli
cmc
or
cwtl
fwait
cltd
mov
or
mov
insb
push
rcr
lock
or
mov
xchg
stos
aam
xchg
nop
fprem
lock
js
pop
jo
sbb
xor
xchg
sarl
imull
jl
dec
adc
mov
inc
add
in
pop
add
jp
out
fucomp
adc
inc
mov
outsb
mov
loope
cmp
mov
mov
lret
push
fstps
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
jo
sbb
jl
jg
jl
mov
jmp
mov
cltd
jne
pop
lock
pop
fwait
xchg
mov
cmp
out
stc
cmp
mov
add
add
outsb
adc
dec
xchg
test
fldt
mov
repz
push
mov
movsl
cmp
mov
loope
jmp
data16
fstpt
and
mov
lea
cmp
int3
cmpsl
cmpsl
sub
mov
add
fwait
aas
cmp
andl
pushf
out
cmp
xchg
cmp
push
outsl
cs
rol
divl
outsl
lahf
out
jp
lret
xor
mov
add
fists
mov
inc
out
fimuls
adc
or
sbb
mov
push
ret
sarb
push
hlt
dec
scas
lods
pop
sub
mov
lret
gs
and
mov
je
les
or
in
subl
pop
push
xor
xchg
ja
pop
mov
ret
mov
inc
or
pop
fmuls
lds
inc
fbld
mov
pop
pop
and
xor
jl
cmp
dec
pop
into
outsl
scas
and
push
pusha
mov
jno
lret
jae
int3
addb
sub
mov
fwait
call
inc
jb
adc
mov
cmp
fisubs
push
push
clc
js
inc
push
cltd
push
sbbl
and
pop
inc
push
rcrl
mov
xor
pop
sti
loopne
shrl
call
stos
adc
mov
mov
pop
testl
push
lods
data16
popl
inc
enter
lds
mov
mov
push
clc
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
int
sbb
jl
in
mov
pop
cmp
push
push
push
pop
shrb
mov
ret
pop
mov
or
loopne
les
les
fistl
fsubl
ret
scas
int3
ss
ja
jo
sti
fwait
mov
mov
push
mov
mov
and
mov
add
mov
fs
inc
pop
xchg
push
sub
and
jmp
sub
addl
push
adc
callw
push
pop
clc
or
maxps
popa
xor
cmp
outsl
sub
jl
mov
scas
dec
add
idivw
rcl
fcompl
loope
or
xor
fwait
out
sbb
lods
add
pusha
data16
shl
test
adc
push
faddl
popa
dec
mov
sbb
adc
sahf
mov
je
adc
data16
int
repnz
push
lods
enter
jle
fdivrl
fimull
push
roll
mov
sarb
lahf
into
repz
dec
neg
cmpsb
sub
mov
testl
xor
mov
cmpsb
bound
jle
lods
sub
fwait
repz
cmpsb
cld
jle
adc
pop
mov
loopne
add
push
jns
jge
adc
dec
mov
pusha
jmp
xchg
test
aas
cmp
adc
push
add
adcl
xchg
in
jnp
popf
call
add
jne
aaa
sbb
ja
shll
cld
xor
xchg
fwait
cmpb
shll
sbb
stos
nop
cmp
mov
inc
xchg
fdivr
jecxz
outsl
pop
in
sub
mov
dec
jmp
sbb
arpl
adc
xor
and
mov
inc
and
fsubrl
push
ret
cmp
popa
xor
mov
pop
mov
pop
in
inc
xor
lods
test
xor
xlat
mov
inc
clc
jmp
sarb
sarl
stos
sbb
mov
jl
jg
jl
arpl
add
inc
cmp
es
adc
fwait
mov
in
dec
test
xchg
pusha
les
mov
loop
in
xchg
out
mov
mov
ss
jno
jle
hlt
pop
xchg
xor
movsl
cmp
insl
aam
imul
stc
jb
fildl
icebp
push
mov
icebp
stos
and
mov
mov
scas
aaa
push
loope
xchg
push
adc
fcmovnb
xor
inc
aad
lds
or
sub
xlat
out
rcrl
in
dec
sbb
je
into
cmpl
pop
loope
std
push
mov
mov
out
or
out
cmp
sahf
imulb
cmc
das
test
gs
jmp
lahf
dec
scas
icebp
cmp
or
inc
push
cmc
mov
aam
inc
xchg
lcall
fcoms
jecxz
jbe
sub
sbb
sbb
push
push
jne
addr16
cld
arpl
lds
pop
xchg
jo
rolb
cli
loope
out
push
add
out
dec
in
xchg
mov
or
scas
in
push
mov
push
stos
fstpl
stc
subb
and
adc
ja
mov
cld
inc
ret
fisubrs
pop
jmp
pop
push
or
sub
std
pop
popf
dec
push
cmp
int
into
fnstenv
scas
push
dec
movsb
mov
out
mov
loope
negl
sub
push
lock
inc
es
lahf
mov
sub
cli
push
scas
add
or
mov
pop
sbb
cmp
cmc
jns
test
mov
and
inc
push
and
lcall
stc
lea
jecxz
mov
mov
jmp
addr16
or
arpl
aas
cwtl
pop
jo
sub
push
jl
insl
jg
jl
or
cmp
out
out
sbb
in
mov
xor
les
call
xor
dec
dec
push
in
int
mov
mov
popf
and
testl
test
imul
cmp
or
adc
in
jns
or
push
mov
jmp
sbb
mov
mov
jmp
jae
call
stc
xor
pop
outsl
in
ljmp
mov
xchg
xchg
testb
movsl
mov
pop
jecxz
add
dec
iret
daa
lea
mov
cmc
sbb
mov
jle
nop
cmp
adc
imul
mov
cmc
gs
sbb
repnz
lock
cmp
sub
xor
fwait
rorb
mov
repnz
pop
es
negl
mov
xchg
jecxz
aam
inc
inc
sbb
imul
loopw
push
popa
fidivrl
mul
js
cmp
cmpsb
jp
les
int3
and
ja
push
das
bnd
mov
mov
push
stos
inc
sub
add
das
dec
movsb
mov
imul
cmp
sbb
int3
in
mov
mov
xchg
cmpsb
sbb
out
jno
sub
mov
adc
mov
insb
rorb
sbb
iret
sbb
mov
jmp
and
lahf
stc
dec
adc
push
lods
or
or
cs
cmp
mov
ret
or
mov
adc
jg
in
test
fcmovnbe
mov
inc
cmp
cmpsl
das
nop
pop
xchg
mov
mov
ds
push
inc
fists
mov
fcmovnu
pop
mov
dec
xorl
jne
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
xchg
jl
insl
jg
jl
sbb
ds
jmp
pop
clc
adc
iret
scas
ss
outsb
lods
test
xchg
xor
dec
push
jle
mov
sub
test
pop
sbb
lahf
sub
cli
push
mov
jecxz
iret
pushf
aad
xchg
mov
fists
pop
or
dec
fsubl
sbb
xlat
add
bound
add
in
neg
arpl
dec
test
stc
rcll
outsb
loopne
jno
push
sbb
insb
adc
jmp
fmuls
mov
add
inc
cwtl
dec
andb
dec
lret
arpl
xor
outsl
pop
xchg
jp
les
push
cmp
adc
add
sub
jb,pt
pop
addr16
mov
dec
fnstcw
sbb
into
lods
or
lret
push
mov
out
in
sbb
mov
cli
xchg
mov
imul
pop
mov
pop
xlat
enter
jae
sbb
negl
call
xor
nop
pop
xchg
andl
cmp
popf
sarb
outsb
negb
xchg
mov
or
or
cltd
push
aas
dec
inc
stc
inc
subb
test
mov
loope
sub
sub
xor
into
inc
cld
int
xchg
xchg
jns
jo
lret
shll
mov
inc
sti
jge
scas
jl
leave
mov
addb
lcall
movsl
scas
or
mov
cmpsb
mov
int3
sbb
test
popa
ja
stos
add
xor
add
ret
push
leave
cmp
sbb
out
mov
negl
popf
mov
test
test
or
test
adcl
je
cmpsb
aaa
outsb
mov
insb
imul
xor
dec
dec
pop
fidivs
aaa
jne
jns
xor
leave
cmp
pop
sub
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
cmpsb
mov
lods
sbb
stos
jne
sub
jnp
jnp
rcll
xor
leave
sahf
inc
sub
imul
mov
mov
popa
lret
sbb
mov
jnp
out
jmp
daa
sub
das
mov
shll
iret
or
pop
shll
roll
mov
aas
fstl
icebp
sub
lock
dec
or
push
into
inc
push
and
dec
cwtl
jb
xchg
outsb
mov
mov
cmp
fistps
ss
lret
xor
cmp
lea
and
jno
jb
sbb
sti
outsl
mov
arpl
sbb
shll
jno
leave
and
cs
sbb
jnp
adc
fsincos
jmp
adc
mov
xor
pushf
mov
pop
nop
pop
rcrl
adc
jno
lret
movsb
adcl
shr
push
lea
mov
jnp
push
addr16
pop
popa
adc
xorb
mov
std
aaa
pop
ror
repnz
fwait
jb
inc
mov
out
xchg
sbb
mov
cmp
xor
ficoms
inc
jb
sub
imul
and
xchg
xor
mov
or
xchg
push
mov
in
popa
fdivs
sbb
and
or
xchg
cwtl
pop
pop
shlb
sub
sbb
movsl
sbb
pop
add
int
sub
mov
clc
add
loopne
addr16
pusha
sbb
add
pushf
hlt
bound
or
out
popa
nop
pop
lea
inc
fsts
popa
cltd
int
lret
clc
in
cwtl
out
mov
int
imul
fisubl
jbe
pusha
icebp
mov
pusha
and
orl
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
cmpsl
adc
cmp
stos
jg
jl
dec
xchg
mov
sbb
pop
enter
xor
xor
popl
cmc
push
rorl
lret
push
sti
stos
cmpl
jb
push
xchg
cli
inc
int3
lock
in
iret
out
decl
popl
sahf
pop
xor
je
mov
dec
ja
mov
imul
imul
add
push
shl
leave
out
pop
stos
mov
cmp
es
ficompl
mov
xchg
dec
into
jmp
jb
push
xchg
mov
or
sub
xchg
pop
lret
pusha
inc
inc
pop
scas
inc
cmp
jo
pop
mov
decb
negl
adcl
add
insb
out
ret
fsubrs
xor
out
mov
cmp
rcrl
ja
insb
push
rorb
div
xor
pop
push
loopne
lcall
adc
mov
xchg
mov
inc
out
dec
push
and
jg
fs
pop
hlt
out
push
xor
adc
fnstcw
nop
in
loope
test
sbb
das
outsb
dec
mov
ja
sub
xchg
inc
push
fxch
into
out
int3
push
call
sahf
mov
xchg
push
in
scas
adcb
xchg
jge
cld
andl
fsts
jp
mov
jb
sub
test
xchg
mov
jnp
imul
insb
cwtl
es
ret
lods
std
cmp
pop
pop
shrl
jle
adc
mov
sub
mov
das
add
and
data16
ljmp
inc
std
adc
or
inc
inc
add
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
addl
es
stos
jg
jl
fidivl
pop
repnz
nop
les
sub
sub
test
or
out
notb
adc
xchg
das
xor
addl
rcrl
gs
into
cmp
mov
arpl
mov
cmp
dec
xchg
adc
int3
jecxz
adc
ret
popa
rcr
inc
mov
test
cltd
and
push
scas
xorb
sbb
call
mov
fildll
lods
dec
xor
stos
mov
pop
sbb
lret
jl
loope
add
orb
test
jb
nop
xor
aas
cmc
pop
add
cmpsl
fdiv
cmp
mov
cs
stos
mov
ds
mov
mov
add
or
push
mov
cli
cmp
std
sub
orl
dec
sbb
mov
push
push
or
aam
xchg
fs
mov
add
cmpsl
sti
xchg
aad
test
add
or
loope
das
out
sub
xchg
xchg
xchg
jg
adc
inc
outsb
out
mov
por
inc
lock
jle
xor
in
mov
cli
sysexit
dec
out
cmp
sub
out
pop
iret
xor
push
scas
bound
mov
mov
pop
jmp
push
pushf
sub
popf
mov
mov
inc
mov
sub
dec
push
lcall
jg
mov
out
jg
call
cmp
dec
hlt
mov
sbb
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
dec
sub
adc
jl
stos
jg
jl
inc
mov
jb
fcmovbe
dec
dec
cmp
push
mov
iret
xor
test
sbb
push
negb
sti
addr16
pop
adc
inc
movsl
andl
mov
adc
jnp
mov
adc
test
and
mov
sbb
rclb
add
cmp
fisttpll
or
fimuls
dec
cmp
cld
lods
or
outsl
pop
and
in
incb
dec
das
fdivrl
xchg
or
lods
out
sub
push
push
xor
addr16
and
rol
shll
push
in
rcrb
sub
or
mov
negb
leave
xor
mov
add
add
mov
and
push
xlat
sbb
leave
sub
and
dec
or
push
push
rep
lret
adc
mov
pop
fistl
iret
iret
mov
iret
std
xor
mov
lahf
cld
in
and
dec
ficoms
xchg
lret
sbb
pop
divb
into
xor
daa
lods
sub
adc
pop
cltd
pop
cs
add
repz
lcall
stc
sub
dec
xor
jl
adc
into
icebp
adc
mov
cld
mov
bound
lcall
dec
xchg
ds
xor
xlat
cmpsl
bound
scas
out
ror
cwtl
movsl
call
leave
test
in
shll
jmp
call
cmc
cmpsl
loope
cli
push
dec
negb
fidivrl
out
pop
jo
mov
push
bound
fistl
inc
xchg
or
test
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
inc
mov
jl
jg
jl
nop
popf
into
xchg
mov
xor
repz
adc
pop
cmp
and
aas
push
lret
dec
mov
mov
xchg
xchg
pop
or
cmc
push
sub
out
jmp
jle
inc
sub
es
loopne
leave
outsl
arpl
cwtl
imulb
jno,pn
insb
push
psrad
push
dec
fiadds
jb
jp
ret
stc
cld
mov
int
mov
mov
or
jle
fcomps
and
pop
imul
adc
out
nop
jns,pn
mov
push
mov
mov
ja
sti
icebp
cmp
push
movsl
or
push
arpl
mov
cmp
out
pop
push
lods
fwait
out
shl
fisubs
mov
in
dec
shrl
cmpsl
mov
scas
lods
cmp
mov
and
cmp
out
add
lcall
dec
shll
fnsave
jno
and
sbb
push
mov
pop
sbb
jo
mov
inc
jmp
pop
sub
test
pop
jbe
cmc
fbstp
es
test
sbb
inc
cmp
leave
cmpsb
dec
ja
sahf
inc
pop
push
mov
dec
nop
mov
lods
mov
std
inc
roll
je
and
stos
adc
js
or
jp
adc
pop
add
sub
pusha
leave
jge
bound
lret
fadds
jae
pop
push
xor
in
adc
movl
xor
pop
lahf
mov
fistpl
jle
pop
pop
dec
push
cmpsb
fsubp
pop
mov
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
add
test
jl
cwtl
shll
cmpsb
lods
and
test
clc
mov
sbbb
or
mov
xor
imul
test
mov
movsl
mov
adc
mov
loop
pop
notl
adcl
insl
mov
aaa
ljmp
sahf
push
js
push
sbb
scas
cmpsb
pop
lea
int
cmp
pusha
and
mov
cli
push
sarb
and
jb
repz
jbe
insb
shlb
add
push
imul
adc
in
jle
inc
lcall
fsub
icebp
cmp
cmp
movsl
mov
mov
movsb
roll
out
mov
out
mov
repnz
xorl
lock
push
and
rolb
clc
dec
mov
lea
int3
push
aaa
je
lods
pusha
mov
push
cmp
in
ds
ljmp
cmp
adc
and
les
lock
lcall
ret
mov
inc
test
ds
sub
or
or
aas
or
xchg
push
mov
mov
scas
lods
shll
insb
xchg
xor
mov
out
aam
cmp
dec
test
jmp
insl
lods
and
out
lcall
jne
add
jb
cwtl
std
xchg
and
pop
jns
mov
sbb
ja
fbstp
ret
push
aas
xlat
push
mov
xlat
inc
xchg
cmp
dec
inc
test
mov
jno
aaa
inc
fisttps
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
jg
add
xor
jl
stos
jg
jl
mov
add
rolb
cmp
mov
sahf
and
daa
push
xor
mov
push
aaa
loope
retw
fcomp
fdiv
mov
loope
loop
in
cmp
fmuls
jnp
pop
frstor
cld
dec
dec
rcrb
cmpsl
adc
mov
add
mov
inc
xchg
add
das
mov
or
xlat
xchg
repnz
in
cmpsl
ret
shr
push
inc
jg
add
ret
mov
ficoml
pusha
in
add
pop
arpl
adc
frstor
jl
test
xchg
into
das
rorl
pop
inc
or
cmp
das
lret
mov
imul
mov
call
js
arpl
pop
xchg
shl
cwtl
sbb
mov
dec
mov
ja
or
ret
jo
adc
loopne
jns
in
lret
inc
stos
orb
mov
cmp
pop
cmp
scas
add
fldl
in
xor
pop
hlt
mov
insl
test
inc
pop
pop
sbb
lcall
insl
jb
add
pop
or
mov
push
pop
jns
mov
leave
lret
sub
stos
push
jle
xlat
pop
sbb
pop
adc
push
shll
int
jbe
mov
inc
jmp
stc
push
inc
pop
arpl
inc
std
pop
jns
mov
shll
cmp
leave
jmp
arpl
repz
add
inc
add
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
dec
ljmp
sbb
mov
fists
clc
sub
hlt
mov
inc
mov
sahf
xchg
jnp
push
loope
ds
into
scas
dec
aas
lods
mov
jne
out
loope
mov
sub
mov
insb
push
and
mov
mov
insl
imul
add
sub
out
add
mov
xchg
pushf
sbb
xchg
sbb
stos
or
inc
ljmp
fisubrl
pushf
xor
sbb
lds
xchg
dec
shrl
iret
sbb
pop
add
jecxz
or
ds
mov
int3
nop
cmp
nop
imul
je
push
jmp
nop
test
fcmovb
adc
popf
cltd
mov
int3
movsb
bound
out
mov
pop
dec
mov
jo
cltd
pop
push
out
fs
fsub
outsl
insl
imul
adc
pusha
inc
mov
xchg
pop
pop
dec
or
pop
push
push
inc
dec
test
mov
add
mov
jl
nop
loopne
gs
out
cmp
sub
sbb
xchg
adc
mov
xchg
divl
sbb
fs
xor
cmp
sbb
sub
lcall
sub
xchg
mov
inc
sahf
xchg
popa
mov
and
dec
pop
jg
mov
in
add
push
into
jns
xor
dec
sti
push
mov
xchg
sub
icebp
lods
xchg
les
jle
subl
incl
je
aaa
lret
jnp
notb
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
mov
and
jl
jg
jl
sbb
stos
or
cmp
add
mov
pop
popf
fisubrs
add
das
xchg
lods
pop
nop
pop
sahf
xchg
test
mov
push
cmc
sbb
in
dec
sub
dec
or
jno
lcall
mov
lea
pop
ja
jge
lcall
dec
cmc
xchg
dec
mov
sbb
cmpsb
jge
stc
repz
cltd
inc
cmpsb
sbb
xchg
xchg
aaa
sbb
sarl
movsb
imul
ret
loope
addr16
inc
sti
cmp
pop
add
ret
push
pop
jns
movsb
cli
ljmp
pop
in
daa
enter
lcall
cli
nop
call
cmp
loop
xor
xor
jecxz
xchg
sbb
jle
roll
daa
mov
aaa
inc
xchg
mov
inc
or
jnp
cli
push
add
xchg
push
enter
push
shl
dec
ror
lods
test
je
gs
mov
fs
test
mov
or
dec
dec
leave
lds
inc
xor
lds
xor
aad
fistl
imul
xor
lcall
sbb
rorb
fiaddl
xor
or
inc
push
or
and
mov
flds
sti
jmp
jo
mov
sub
jbe
out
sbb
xor
int3
adc
add
jb
adc
dec
mov
add
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
jbe
jp
shrb
jl
mov
jl
idivl
and
imul
iret
into
or
inc
loop
xchg
mov
fmull
pushf
fidivs
xlat
out
test
and
pop
call
in
shrl
and
xor
and
xchg
lcall
bnd
push
jb
push
mov
pop
dec
xor
xlat
in
cmpsl
test
mov
mov
iret
shl
xchg
add
gs
xchg
sahf
jne
mov
jecxz
or
sbb
mov
adc
popf
cmp
xchg
adcl
sti
ret
mov
lds
mov
xor
loope
daa
sbb
pop
dec
xchg
xor
test
dec
push
cmp
lret
pop
push
inc
cmp
iret
lret
push
dec
in
xor
fisubrs
mov
adc
lock
sahf
mov
mov
mov
insb
sbb
aaa
jg
jg
push
in
pop
mov
adc
mov
inc
dec
outsb
not
push
sub
cmpsl
pushf
pop
adc
cmp
bound
add
mov
mov
fs
pusha
xchg
popf
or
mov
sahf
int3
ja
or
sub
icebp
mov
push
push
mov
xchg
cmp
loopne
cli
gs
xlat
test
rorb
repz
xor
int
add
jno
push
pushf
pop
mov
out
add
shll
xor
push
mov
add
pushf
lock
cld
cmpsl
out
mov
popa
and
xor
mov
and
cld
push
sbbl
in
loope
fists
sub
pop
mov
mov
in
inc
inc
rcrl
jp
mov
push
push
lea
or
sub
out
push
insb
pop
adc
fbld
adc
xchg
xlat
ljmp
xchg
cwtl
push
sbb
adc
adc
shll
sbb
and
xchg
adc
push
mov
loope
arpl
lods
xor
xor
adc
xchg
scas
mov
inc
out
lret
adc
subb
sub
les
pop
addr16
out
ss
ficompl
jns
cwtl
jp
icebp
jge
shll
mov
in
jle
jnp
cmp
movb
orl
xchg
sbb
mov
xor
pop
inc
cmp
add
sub
or
cs
leave
sub
dec
push
cmpsl
xor
dec
repnz
xor
or
mov
fidivrl
pop
mov
test
sti
and
inc
insb
ss
push
xor
lret
aaa
fisttpll
jge
xchg
cld
pop
cmpsb
daa
ret
add
add
dec
jae
stc
jg
pushf
sub
cmp
jbe
mov
dec
mov
in
fs
in
or
fxch
mov
jg
int
xchg
lea
mov
cld
cmp
xchg
iret
sbb
or
and
xor
mov
loope
mov
and
jo
bound
insl
scas
shll
jp
hlt
rdtsc
inc
or
dec
push
xchg
push
das
fcomp
inc
je
ss
add
or
pushf
mov
push
pop
cmpsb
das
adc
loope
repnz
jle
push
repnz
ret
dec
dec
lods
jb,pt
sbb
cli
push
in
xlat
rcl
lcall
or
fwait
or
pop
or
leave
pop
mov
pop
sub
hlt
fidivrs
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
and
mov
ss
mov
jl
inc
fadds
inc
and
add
aas
push
outsb
push
imul
mov
nop
out
sub
cmp
lret
outsl
mov
and
data16
xchg
mov
mov
inc
mov
xchg
icebp
fst
repz
hlt
sbb
sbb
negl
scas
movsb
insb
fcmovnu
je
addb
jmp
nop
mov
pop
popa
wbinvd
fucom
inc
jecxz
out
das
ss
sub
daa
mov
aas
jecxz
movsl
lcall
cmpsl
add
mulb
cmp
xchg
std
pop
xchg
fistpl
into
test
push
mov
paddsw
and
xchg
out
nop
lods
xor
mov
call
std
je
mov
sti
fldcw
pop
into
jnp
jb
mov
pop
in
cmp
cld
push
or
repz
sahf
push
mov
scas
out
jns,pt
mulb
fsts
pop
imull
lahf
test
jnp
or
xor
xorl
xchg
jb
jmp
lret
int
insb
repz
ret
bound
fistpl
ret
icebp
or
adc
aaa
add
push
mov
push
push
mov
ljmp
jmp
addr16
popaw
dec
cvtpi2ps
loop
shll
dec
mov
ret
adc
test
je
push
lret
sub
mov
fcoms
jb
popf
jo
or
and
xor
add
scas
lock
shll
pop
lcall
xchg
sbb
imul
je
enter
fstpt
push
jl
jno
adcb
xor
adc
das
add
mov
call
mov
xchg
outsl
lcall
rcr
lock
repnz
sbb
xlat
jl
fbld
cltd
add
sub
repnz
push
int3
pop
add
mov
cmc
lret
lret
adc
mov
pusha
negl
jae
jb
fcom
daa
push
loopne
pop
insb
notl
dec
and
or
int3
xor
inc
fbstp
leave
jae
jne
addr16
outsb
stos
shrb
or
aas
arpl
shll
sub
mov
inc
fidivl
in
psubusb
add
cmp
ret
pop
jns,pn
lods
pop
enter
sbb
push
adc
sub
out
push
js
push
aad
pop
adc
out
mov
stos
adc
mov
mov
dec
jns
sbb
sub
mov
add
cmpb
call
pop
cltd
dec
jne
push
andb
mov
lea
cmp
rcrb
adc
cmpsl
fildll
andb
jmp
mov
mov
imul
fwait
sbb
add
dec
adc
leave
fsubrl
pop
gs
cmpsb
pop
push
ja
sbb
testb
lret
rcrb
sti
and
push
mov
test
cmp
mov
dec
scas
cmp
addb
stc
push
cs
inc
pop
lret
in
mov
mov
mov
xor
xor
fwait
mov
jae
cmpsl
inc
test
out
orb
jbe
ja
fstps
cwtl
cltd
mov
sub
inc
jecxz
and
push
and
movl
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
jnp
sbb
mov
add
add
fstps
xchg
add
adc
outsl
mov
pand
loope
dec
and
pop
in
inc
imul
fistpll
mov
in
mov
sbb
jae
push
lock
add
js
pop
sarl
lcall
lret
mov
lea
pushf
enter
outsb
sub
mov
hlt
or
data16
xor
jmp
mov
stos
and
push
sbb
cmp
adc
sbb
jbe
mov
sub
xor
hlt
pop
and
ret
mov
fsubrl
je
movsl
cmp
lcall
jl
pop
in
cld
sbb
sbb
push
fs
mov
inc
bound
cmp
mov
lcall
dec
and
data16
add
cmp
sbb
lock
xor
mov
imul
out
bound
adcb
mov
sub
addr16
aaa
into
push
mov
dec
xchg
enter
sti
lods
pop
add
ds
mov
inc
inc
aas
inc
mov
data16
push
pop
sti
and
xor
dec
dec
std
push
jnp
jmp
push
mov
loop
inc
push
pop
jmp
pop
push
test
rcrl
jnp
xchg
pop
push
xchg
xchg
sub
repz
fldl
and
push
sub
call
jb
xor
out
jne
jmp
fs
cmp
push
mov
adc
mov
mov
jl
fistpll
int3
sub
fwait
adc
xor
add
cmpsb
js
and
out
adc
push
out
in
pop
cld
pop
test
ja
call
adc
je
and
adc
or
aas
pusha
in
mov
xchg
sar
xchg
stc
mov
sahf
adcl
fnsave
out
or
pop
mov
cmp
fcoml
add
testl
mov
mov
jmp
or
push
rcll
xchg
idivb
addb
adc
adc
jmp
call
sub
push
mul
mov
mov
sahf
xchg
xor
and
sub
or
mov
nop
adc
push
jl
xchg
add
xor
dec
and
out
sbb
popf
dec
mov
dec
and
daa
sarl
xchg
cmp
inc
imul
daa
push
arpl
subl
adc
sub
lds
fsubs
xchg
cmp
xor
jno
ds
out
fs
sbb
cmpsl
mov
mov
cwtl
push
gs
cmp
mov
icebp
push
pushf
call
inc
aaa
cmpsl
fs
xor
pop
sbb
movsb
hlt
add
das
cmp
loop
pop
test
lret
clc
mov
clc
imul
arpl
dec
add
int3
fimull
push
pop
mov
outsl
ret
aas
scas
pop
xchg
ds
hlt
mov
cmp
and
adc
mov
mov
cmp
pop
and
sbb
cwtl
cmp
adc
cmpsb
push
ucomiss
jl
pop
aas
pusha
mov
xchg
inc
mov
test
add
mov
xor
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
shrl
or
sub
push
addl
sbb
push
push
lds
pop
dec
lahf
pop
cmp
cmp
or
cld
mov
sbb
lret
xchg
sbb
sub
push
push
mov
pop
pop
mov
sub
cltd
jo
mov
movsb
test
sub
sub
mov
jge
jg
icebp
ret
mov
push
and
pop
pop
out
ja
adc
aad
mov
js
cli
jne
flds
mov
pop
jne
mov
test
pop
stos
jecxz
out
je
punpckldq
sub
sbb
jae
cmp
cmp
inc
mov
pop
lahf
dec
adc
add
js
mov
pop
loopne
cmc
inc
sti
xchg
daa
mov
cmc
and
jge
loopne
les
sbb
orb
jmp
push
repz
xchg
pop
push
bound
sbb
sub
and
stos
js
adc
cmp
and
fdivrl
push
and
lcall
pusha
loope
add
nop
aaa
fbld
shrl
in
outsb
mov
push
add
push
or
pop
jg
repnz
stc
mov
adc
push
gs
lret
negl
mov
clc
xlat
fisttps
xor
push
push
in
aad
fists
xlat
js
jno
mov
icebp
jle
cmp
scas
stos
sbb
push
out
in
inc
mov
pop
pop
fs
cmpl
add
mov
mov
pop
xchg
cmp
das
mov
add
in
sub
push
cmpsb
je
notb
cmpsb
movsb
enter
ret
sbb
cmp
lahf
jno
pop
mov
fcmovnu
filds
roll
stc
rcr
cwtl
insb
jmp
sub
das
dec
call
cmp
insl
xchg
jmp
mov
jl
sbb
outsl
inc
dec
mov
sahf
shl
pop
js
stc
add
sbb
xchg
xor
cmpsl
pop
push
mov
aaa
test
mov
lret
shl
push
add
dec
lds
ds
push
sbb
fwait
push
jns
stos
flds
aaa
movsb
lret
xchg
mov
add
rolb
or
push
ja
addr16
sti
xor
sbbb
ljmp
lea
repz
lcall
add
sahf
mov
sub
cmpsl
push
dec
lcall
in
arpl
pop
pop
ljmp
jmp
gs
lea
movsl
pop
dec
sbb
xchg
jno
push
push
out
lret
xchg
ret
sbb
leave
dec
insb
xor
cs
cmp
inc
mov
dec
jecxz
out
xor
das
push
xchg
daa
push
push
add
ret
mov
ss
aaa
jle
mov
fs
pushf
mov
add
push
mov
dec
add
notb
icebp
sub
xchg
shlb
push
into
rorb
push
jns
clc
pop
or
cmp
push
mov
inc
adc
and
mov
xchg
mov
push
cwtl
pop
bound
lret
push
std
jb
inc
dec
subb
inc
cltd
and
or
test
xchg
leave
sbb
loopne
inc
push
scas
ljmp
cmpb
inc
lods
cmp
loope
aam
push
loopne
mov
mov
orb
pop
push
rcrb
mov
dec
xchg
sbb
int
sarb
xor
jne
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
pop
adc
jl
jle
jl
iret
test
cltd
fisubrs
fsub
cmc
push
jno
and
adc
jmp
jg
call
sub
cmpsl
jmp
or
sub
add
jnp
cmpsl
movsb
sti
jecxz
and
imul
push
dec
push
pop
nop
sbb
add
lret
pop
mov
pusha
push
outsb
sbb
adc
ss
jo
jp
fisttps
int3
fs
xor
stos
xchg
in
sbb
lods
rolb
imul
orb
cmpsb
movsl
sti
fwait
sub
ret
dec
pop
push
cmp
pop
inc
pop
sbb
lcall
and
sbb
ret
mov
sqrtps
mov
pop
sbb
push
jg
cwtl
out
inc
xor
and
jle
mov
lahf
lds
notl
cmp
or
aaa
pop
adc
sbb
push
xor
dec
or
jnp
leave
subl
insb
jbe
xor
out
aam
mov
mov
pop
sar
aas
mov
je
das
jo
cltd
rcrl
sub
push
popf
adc
mov
cmp
scas
jo
cmp
pop
in
adc
inc
mov
adc
inc
test
cmp
movsw
iret
cmp
fucom
dec
adc
lret
vprotb
outsl
inc
ss
mov
filds
jmp
jae
int3
aam
xor
push
cmp
jmp
jae
cmp
add
jns
pop
xchg
lods
and
insl
out
arpl
xchg
adc
lds
jae
pop
jl
orb
insb
out
inc
out
into
sub
pop
sub
jnp
adc
cmp
sbb
repz
mov
movups
sbb
mov
xchg
mov
notb
sti
adc
add
leave
push
fcompl
mov
pop
pop
cwtl
pop
imul
sbb
inc
fcmovbe
cli
aaa
in
test
out
mul
jne
es
rcrb
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
outsb
call
jl
jle
jl
or
mov
jl
sub
mov
into
bound
xor
insl
or
xchg
test
mov
out
cmp
insb
jno
lds
mov
mov
push
popa
rorl
push
pop
mov
fmull
pop
movsl
cwtl
lahf
popa
mov
lock
inc
pusha
pop
xor
inc
mov
sbb
inc
mov
fstps
les
mov
fwait
imul
add
test
push
fwait
dec
xor
mov
filds
call
addl
sbb
icebp
lock
or
lods
jbe
clc
scas
inc
ret
fnstsw
mov
fsubrl
aam
gs
dec
orl
lret
add
push
fisubl
movsb
popf
insb
xchg
mov
cmp
movsl
pop
fnstcw
test
mov
in
shll
pop
cwtl
aaa
mov
add
or
cmp
sbb
icebp
mov
and
out
lea
loop
lds
mov
sbb
enter
mull
dec
test
lret
inc
push
dec
lret
pop
jnp
ss
jnp
stos
add
dec
xor
dec
ret
cmp
dec
sbb
das
enter
fldlg2
repz
imul
cltd
xor
fcmovbe
jae
adc
test
fcomps
bound
iret
aaa
mov
push
xchg
sbb
insl
sub
inc
jge
cmpsb
and
or
jecxz
subb
fs
xor
cmp
mov
clc
adc
inc
in
xlat
fs
mov
rcrb
into
js
push
add
fcoms
push
bnd
cmp
sbb
add
orb
mov
movsl
pop
mov
rcl
stos
xchg
addr16
xor
or
pop
lret
jecxz,pt
aaa
push
mov
gs
jb
xchg
cld
or
ds
jb
xchg
addl
pushf
pushf
lock
add
push
add
add
int3
mov
jo
xchg
jmp
push
test
fisubrl
jl
movsb
xor
cmpl
js
dec
lods
mov
outsl
mov
adc
push
push
add
mov
pop
test
xlat
frstor
fisubrl
jmp
jmp
fwait
ds
adc
dec
ret
sub
mull
pushf
cmp
xor
adc
sbb
dec
push
push
dec
loop
pop
jns
dec
or
fsubrl
ret
lds
aam
lods
cli
push
stos
or
mov
mov
or
jno
inc
stos
xchg
stos
sbbl
movsl
mov
xor
and
mov
pop
push
pop
sti
pop
pop
ja
mov
notl
lock
inc
xchg
cmc
hlt
pop
jne
push
and
scas
lods
sbbb
push
add
imul
mov
cmp
jns
xchg
popa
outsb
sub
adc
jo
lock
xchg
out
push
mov
nop
fs
lds
add
loope
xor
lcall
std
pop
and
out
mov
out
out
cmpsb
aad
pop
in
lret
add
push
xchg
mov
dec
xchg
push
insl
mov
das
mov
in
cwtl
cmpsl
dec
imul
mov
cmp
in
jmp
push
add
jbe
ljmp
insb
adc
fists
cmp
sub
mov
popf
xlat
jle
repz
sub
std
sub
insb
sbb
mov
xchg
mov
dec
and
cld
or
ret
imul
out
push
adc
xlat
dec
loope
cmpsl
addb
loope
push
jns
in
xlat
cmc
cmp
in
pop
cli
pop
fldt
stc
arpl
xlat
fdivl
dec
fldl
push
int
sar
hlt
sub
js
dec
lds
add
dec
push
ja
stos
pop
jo
mov
jg
add
inc
std
sub
mov
stc
icebp
pop
xchg
test
mov
rorl
les
outsl
ljmp
aam
xchg
jb
sahf
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
lods
pusha
sarl
jl
bound
pop
xor
jno
addb
mov
push
into
in
mov
out
inc
cwtl
xor
jmp
dec
test
mov
sbb
sub
neg
fisttpll
adc
jbe
inc
mov
insl
and
mov
lods
cmpb
fidivrl
fstps
add
je
das
or
mov
mov
bound
pop
outsb
shrb
test
subl
divb
mov
sbb
add
roll
push
nop
sbb
cmpsb
mov
add
pop
pop
ja
fsubp
int
xlat
jb
sub
inc
xchg
mov
testb
push
mov
sbb
out
ss
sub
sub
das
pop
aaa
insb
aaa
pop
dec
mov
add
sbb
and
mov
lds
mov
xchg
pusha
out
loope
xchg
leave
cs
shll
into
jns
cs
js
movsl
test
jno
gs
cmpsb
pop
sub
cltd
and
inc
fadds
add
pop
popf
xchg
lock
xor
das
add
fcomps
sub
push
add
push
push
cmp
out
aad
push
loop
push
dec
data16
xchg
mov
pop
mov
ljmp
mov
jo
rcrb
dec
dec
cmp
or
aas
sub
hlt
ret
mov
int3
std
fsubp
bound
daa
sub
dec
jnp
push
insl
sub
xchg
pop
jno
outsb
nop
cmp
test
fld
gs
cmp
cmp
pop
mov
aam
sub
mov
cmp
repnz
add
jmp
mov
scas
pop
test
aaa
mov
mov
daa
xchg
mov
data16
pop
mov
xor
add
aad
jo
in
negb
cs
cmp
scas
add
cld
popf
inc
mov
lar
leave
push
xor
push
test
fistpll
idiv
mov
into
sbb
push
out
cmpxchg
bound
mov
fldt
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
mov
and
jl
xlat
jns
jl
cmp
ljmp
mov
mov
insl
call
repnz
dec
mov
xchg
fnstenv
es
into
inc
jg
push
fsts
jle
or
push
cmpsl
xchg
cmc
call
sub
idivl
rep
xchg
mov
cld
and
mov
sbb
jns
xchg
inc
adc
insb
enter
xchg
push
fstp
ds
xchg
adc
mov
sti
ret
pop
repnz
mov
cltd
enter
mov
xor
ret
and
insl
js
sarb
sbb
fbld
outsb
pop
scas
mov
pushf
pop
mov
fisttpll
push
and
rol
sbb
call
cmp
hlt
popa
pop
stos
xchg
pop
push
insb
jno
lds
mov
clc
add
test
dec
cmp
mov
adc
shlb
pop
scas
sbb
sbb
imul
loope
in
cmp
dec
cmp
mov
pop
jns
addl
xlat
pop
sbb
es
into
push
cmp
outsl
pop
cmpl
add
mov
add
popf
xchg
daa
inc
es
fbld
andl
or
add
add
sbb
mov
arpl
fisubrl
mov
sti
inc
xchg
xchg
lea
or
testb
dec
pop
push
ja
mov
jl
xor
pop
fwait
push
jns
mov
pop
mov
push
insb
aaa
cmpsl
push
mov
shl
dec
ret
negb
mov
outsl
data16
add
stos
ret
cwtl
jp
insl
rorl
pop
in
hlt
sti
pop
push
rcr
mov
insb
ljmp
xor
cmp
adc
mov
rcrb
dec
loop
inc
sub
and
jnp
fdivs
aad
push
cld
cmp
and
in
jb
popf
ja
mov
cld
lds
aam
mov
rcll
enter
icebp
mov
daa
lcall
dec
cmpb
enter
fucom
xchg
add
pushf
mov
sub
sbbl
mov
lea
notl
into
daa
out
add
daa
dec
push
jb
jmp
sbb
in
rorb
out
sti
jg
jo
mov
xor
inc
sub
sbb
hlt
mov
xor
cmp
jle
aad
xor
insb
xlat
adc
push
fstl
ja
or
fcomps
add
sub
pop
jp
lods
sub
das
testl
xchg
pop
fdivrl
xchg
mov
pop
jl
fs
inc
and
cmpb
lds
xchg
xchg
icebp
cltd
jg
mov
mov
push
lds
xlat
cmp
jg
ret
xlat
jbe
ja
dec
das
adc
mov
jns
pop
lret
lods
lds
or
or
nop
mov
inc
mov
andl
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
decl
iret
jl
xlat
jns
jl
jo
jecxz
dec
into
das
adc
rorl
das
clc
andb
pop
cld
inc
nop
lcall
mov
sbb
insb
and
test
or
sub
loope
push
in
or
pop
mov
in
test
adc
scas
inc
sbb
dec
sbb
add
push
fistl
out
sahf
ds
pop
scas
or
or
or
fldl
es
sub
test
cmpl
push
mov
loop
add
out
test
out
jb
mov
mov
dec
pop
in
mov
aam
jnp
mov
es
in
xchg
sbb
adc
int3
fldenv
pop
aam
cwtl
shrl
in
dec
inc
and
sbb
lret
jno
mov
fnstenv
push
cmc
fdiv
popa
lret
add
aad
cmp
aaa
lods
xchg
push
and
test
pop
push
cmpsl
xchg
mov
test
or
cmp
mov
mov
cmp
ficomps
adc
dec
xchg
inc
push
cmp
fs
adc
rcl
inc
lahf
lret
mov
and
xchg
xchg
cmp
fstp
push
out
mov
xchg
in
pop
push
cmpsb
les
stos
pop
pop
pop
sbb
dec
movsl
mov
daa
lock
adc
jbe
jl
push
push
sub
push
neg
rol
and
bound
mov
cmp
jns
or
mov
std
adc
movsb
add
lret
sbb
cmpsb
sub
les
int
add
sti
lock
cld
jns
outsb
aaa
mov
imul
loope
inc
mov
pop
jp
mov
pop
lea
repz
push
xor
mov
push
jbe
push
push
les
push
mov
movsl
pshufw
push
bound
mov
inc
jle
sub
je
pop
shlb
jmp
adc
aad
sar
sub
movsl
jge
mov
adc
sbb
xor
mov
popf
dec
sbb
mov
sbb
xlat
aam
sti
mov
xchg
loopne
nop
cmp
xor
sbb
clc
dec
ss
addb
dec
sub
fisttpl
es
in
ja
repnz
es
mov
push
or
cmp
sbb
or
mov
jno
and
arpl
push
pop
inc
mov
loop
lds
fmull
out
aaa
rclb
ss
cli
push
mov
cmc
ds
js
mov
lahf
xchg
in
cmp
dec
mov
in
inc
cltd
fisttpl
xor
sbb
mov
jne
add
cmpsb
cs
popa
bound
iret
popa
sub
repz
aas
and
cmp
into
dec
inc
popa
and
add
fisttps
sbb
lds
and
int3
rorb
or
movsb
xor
inc
pusha
adc
xorl
mov
pop
dec
dec
out
mov
add
pop
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
popf
mov
jl
xlat
jns
jl
cmpsb
out
sbb
inc
lds
mov
jg
jne
popa
pop
dec
jne
lock
sti
insl
sub
push
mov
loop
call
repnz
lock
pop
leave
xchg
sbb
cwtl
sbb
add
les
xchg
xlat
aaa
cwtl
jge
test
xor
pop
cmp
mov
data16
aaa
dec
push
jmp
mov
or
lods
xor
stc
adc
daa
clc
jl
push
sub
fnstcw
fs
jle
mov
in
shlb
movsl
xchg
xor
mov
faddl
loop
test
fstpt
add
mov
push
pop
lcall
sahf
mov
or
arpl
adc
pop
fisttpl
xchg
or
sti
lret
mov
pop
addr16
mov
pop
or
jb
out
dec
dec
mov
dec
jmp
nop
push
sub
in
leave
push
aas
bound
jne
fcmovnb
or
and
pushf
xor
jl
inc
adc
negl
movsb
cltd
int3
cs
dec
js
push
mov
mov
sub
in
jns
adc
push
fyl2xp1
mov
inc
sbb
in
jp
jo
mov
gs
pop
dec
shll
mov
cmpsb
sbb
pop
jo
add
movsl
add
pop
ret
lcall
ja
jmp
mov
leave
or
xchg
out
lahf
inc
fldl
lret
ds
add
aaa
and
xor
fidivs
jge
dec
or
dec
inc
pop
in
push
rol
push
sub
mov
lock
mov
adc
dec
call
jnp
ljmp
cmp
fincstp
pushf
mov
call
add
inc
dec
clc
push
dec
jl
jecxz
int
rcll
insl
shlb
or
mov
jmp
ja
call
mov
push
leave
jo
push
mov
or
xor
std
inc
rolb
or
test
jns
movsb
jne
fmulp
xchg
movsl
xchg
out
mov
pop
inc
jno
scas
aas
popl
pop
hlt
shl
das
adcl
xchg
adc
mov
xchg
sbb
adc
adc
jno
lds
cltd
lret
sbbb
inc
adc
scas
aas
icebp
push
push
xchg
into
adc
inc
mov
imulb
loope
sub
in
xchg
mov
mov
cmp
mov
out
invd
sar
pop
inc
mov
xor
clc
loope
ret
lcall
xor
push
xchg
xchg
sub
push
sahf
pop
jge
lods
pop
cmp
lea
aas
sbb
xchg
adc
ret
xchg
ss
stc
mov
lret
ljmp
inc
aaa
cmp
int3
adc
cwtl
push
das
inc
stos
mov
sahf
shl
test
jbe
pushf
daa
push
ja
stos
lret
cmp
cmc
popf
out
jae
add
mov
lahf
rolb
inc
in
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
repnz
aam
jl
jns
jl
hlt
pop
xor
push
sbb
movsb
inc
mov
repz
sbb
jns
std
dec
mov
clc
popf
nop
lock
lds
dec
fisttpll
cltd
scas
dec
mov
jmp
fmul
mov
call
inc
and
and
mov
lret
sbb
mov
add
in
push
cmpsl
or
mov
orl
pop
sub
add
mov
cwtl
mov
jmp
xchg
jne
adcl
ja
insl
ret
fldenv
std
sbb
movl
or
imul
inc
dec
pop
mov
fwait
mov
fwait
mov
or
mov
xor
cmp
xchg
or
inc
inc
das
push
cld
je
mov
andb
arpl
jge
jbe
orl
ljmp
pop
std
dec
sbb
daa
xor
orl
repz
clc
push
and
addb
add
xchg
adc
xchg
les
rorb
sub
xor
cmp
pusha
fcoml
inc
shr
push
adc
inc
bound
out
divb
mov
mov
and
fsub
test
mov
push
lahf
cmp
mov
mov
test
sti
js
adc
or
pop
mov
inc
loopne
dec
adc
add
add
jge
fimull
pusha
pop
gs
clc
jge
jae
in
sbb
jae
sbbl
or
pushl
mov
dec
rcll
sbb
fisubrl
adc
sti
lcall
leave
movb
xchg
mov
cmc
inc
iret
cmc
mov
push
aas
ret
ficomps
dec
inc
or
out
cmp
and
int
adc
inc
shl
insb
lret
jns
mov
mov
ds
sbb
pusha
mov
adc
icebp
mov
mov
movsb
outsb
int
lret
test
cld
je
stos
jp
sbb
lcall
jb
shlb
jne
sbb
mov
cld
in
push
icebp
in
scas
daa
cs
int
mov
lea
imul
test
and
sub
mov
xchg
outsb
call
fsubs
mov
rorb
mov
xchg
outsl
popf
jp
mov
xchg
gs
fistpl
jg
push
out
cltd
cmpsl
clc
cmpb
mov
push
mov
pop
lds
lods
push
push
stc
sub
pop
lret
roll
sbb
sbb
enter
mov
scas
dec
xchg
mov
dec
cmpsl
inc
mov
lret
inc
test
lds
sbb
test
cmp
xchg
fidivs
jno
fistpll
xchg
cmpsl
push
push
daa
lds
out
jb
pop
lcall
or
pop
jle
inc
test
in
cs
cs
sub
addr16
cli
lock
sbb
add
sbb
out
outsl
imul
mov
mov
cmp
jmp
cwtl
mov
mov
or
in
lock
jl
jns
jl
push
mov
pop
xchg
sbb
cmp
test
pushf
mov
jg
pop
mov
jl
out
in
dec
and
jp
lret
lea
mov
fs
sbb
out
roll
sti
ds
cli
sarb
or
fldcw
xchg
fcomip
xchg
dec
into
pop
adc
mov
jmp
dec
stc
cmp
lods
or
jns
nop
enter
push
daa
mov
loopne
mov
xor
outsb
in
push
aas
or
in
push
lret
cmpsl
jnp
daa
adc
adcb
sahf
nop
les
mov
adc
mov
aas
dec
dec
in
addr16
sbb
jle
xchg
push
jnp
popf
shl
lds
jmp
loopne
ljmp
std
leave
pop
out
dec
in
inc
sub
jg
adc
movsl
je
aad
divl
out
inc
cld
movsb
and
add
aas
fwait
sub
mov
xorl
and
or
or
mov
iret
or
cwtl
ds
outsb
ja
test
aam
mov
jb
mov
dec
inc
push
out
in
dec
mov
inc
divl
add
and
cli
icebp
pop
in
pop
inc
aam
mov
xchg
cmp
xor
fistpll
xchg
adc
bnd
test
data16
push
incb
or
nop
pushf
add
jae
inc
and
push
sbb
repz
and
f2xm1
dec
sbb
js
xchg
fiadds
push
imul
inc
push
cmp
mov
mov
shll
rcrl
and
mov
adc
xchg
ret
lods
test
jg
adc
mov
ja
and
lods
pop
iret
or
test
lea
and
jae
iret
insb
pop
xor
dec
stos
les
jecxz
and
dec
es
int
test
inc
sbb
pushf
adc
ficomps
xchg
add
add
jnp
mov
jg
out
jnp
add
call
xchg
xchg
jns
sbb
push
adc
xchg
or
movsb
push
mov
mov
sahf
out
ds
mov
enter
add
dec
mov
sahf
imul
es
mov
cmp
out
pop
mov
mov
sbb
pop
cmp
adc
or
mov
scas
xchg
or
xchg
lods
sbb
mov
cmpsl
or
pop
insl
fistpl
movsl
cltd
mov
jbe
push
mov
push
sub
and
inc
push
mov
mov
shrl
out
xor
ss
add
pop
inc
mov
push
jne
add
fdivrl
test
jmp
and
jns
lret
inc
roll
fs
mov
push
popa
test
jae
test
loop
std
lcall
ret
loopne
dec
mov
enter
sbb
jnp
sub
int3
fsubrl
stos
mov
int
cltd
adc
je
mov
orl
jmp
pop
jns
fs
add
push
sbb
sarb
jns
jl
test
inc
outsb
xor
adc
pop
add
std
mov
jns
mov
or
pop
add
jns
mov
push
test
imul
sub
fdivr
xorb
push
icebp
test
push
leave
jbe
cltd
js
ret
push
subb
mov
popf
push
add
cli
mov
mov
lods
mov
jae
pop
shlb
pop
dec
mov
cs
orl
movsb
out
cwtl
test
aad
arpl
adc
mov
pusha
ja
in
aaa
fidivs
cmpsl
jecxz
stc
decb
cmp
or
mov
bound
std
add
cmp
test
xchg
stos
or
fdivrl
insb
inc
scas
dec
frstor
lods
mov
jb
mov
pop
and
rcrb
adc
add
add
add
mov
stc
sub
ljmp
pushf
push
xchg
mov
aad
clc
fiaddl
fildl
push
push
dec
dec
cmp
daa
add
scas
mov
not
mov
mov
mov
aaa
jmp
sub
in
xor
cmp
and
das
dec
jg
sbb
mov
jb
arpl
add
push
adc
xor
roll
sbb
mov
fildl
repnz
jmp
pusha
mov
lods
sti
cmp
enter
mov
lock
cld
in
das
xchg
sub
or
mov
pop
cs
sub
adc
jbe
push
daa
cmpsl
scas
dec
out
xchg
scas
js
sbb
mov
das
and
ss
mov
mov
xor
sbbb
dec
enter
sbb
lahf
stos
push
sub
insl
fwait
dec
or
push
int3
add
sbb
xchg
sub
cltd
mov
es
cmpsl
fisttpll
adc
mov
shrl
mov
dec
jl
xlat
fs
jp
or
lock
sub
pop
and
in
popa
xchg
pop
dec
inc
fsubs
mov
pusha
or
dec
rol
dec
popa
push
outsb
sbb
push
out
in
xchg
add
dec
loope
jmp
xor
cmpl
sahf
out
ret
push
jne
xchg
sbb
repz
fstps
mov
jmp
pushf
push
stos
cmpsb
jg
or
lds
sbbl
pop
jecxz
daa
lods
fwait
sub
ret
dec
or
dec
adc
add
push
mov
nop
insb
mov
adc
mov
gs
shlb
fcompl
adc
xor
pushf
cmp
pop
push
movsl
popa
stos
mov
and
push
and
sub
popl
outsb
movsb
lods
pop
adc
adc
lahf
arpl
xor
jae
xchg
mov
cltd
pop
lock
dec
jb
add
mov
jge
dec
mov
movsl
and
jns
ja
mov
jmp
cmp
sbb
aaa
mov
add
cmp
sbb
out
out
xacquire
push
inc
cmc
jbe
cmp
sbb
sub
mov
test
inc
push
es
xor
adc
xchg
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
jno
enter
jl
xlat
jns
jl
or
in
push
push
addr16
mov
stos
ljmp
push
es
mov
js
dec
add
lock
daa
imull
pop
scas
out
and
xor
xor
and
dec
gs
aad
xor
aas
jmp
xchg
push
xor
lcall
cmp
mov
and
sbb
cli
mov
nop
cwtl
ret
nop
leave
xchg
mov
sbbb
or
add
push
sbb
pop
lods
mov
push
push
pop
stos
aaa
out
mov
mov
in
lcall
cmpsb
or
push
nop
mov
dec
mov
jb
movsb
pop
shl
xchg
pop
out
stos
push
inc
shlb
pop
lcall
xchg
iret
jmp
pop
cld
cltd
divl
jb
mov
movsl
popa
sbb
xchg
icebp
das
xchg
adc
stos
jae
and
fwait
fs
in
mov
lcall
mov
fwait
shl
ficoml
arpl
push
xchg
imul
pop
cmpsb
sub
es
adc
inc
movsl
ljmp
adc
cmp
inc
xchg
pop
cmp
das
push
rcrb
aaa
dec
xchg
adcb
cbtw
pop
sbb
push
lds
lock
arpl
and
add
add
lds
clc
into
dec
inc
add
push
jmp
stos
mov
inc
dec
outsb
insb
test
push
in
dec
imul
inc
pop
xchg
and
fistpll
pop
sbb
jl
mov
push
push
pop
test
cli
pusha
pushf
xchg
xchg
sub
iret
sbb
pop
xchg
fmull
ret
ret
mov
and
and
xor
inc
in
rclb
jo
xor
mov
lods
pop
inc
lods
aad
mov
xchg
test
jp
jg
mov
pusha
test
mov
lahf
and
xor
scas
xor
mov
jno
jae
pop
or
icebp
and
mov
mov
mov
loope
mov
jne
mov
dec
push
push
jmp
xor
movsb
add
add
mov
mov
enter
and
push
mov
cmp
pop
inc
mov
jmp
mov
mov
dec
xor
adcb
pop
dec
or
fcmovnb
push
mov
sub
mov
loop
mov
mov
sbbb
addr16
fwait
lods
jmp
mov
aaa
fwait
or
sub
or
clc
aam
fxch
insb
mov
ret
rcrl
mov
hlt
jge
cmp
inc
mov
inc
rcll
fs
ss
fmul
pop
cwtl
and
fstps
into
nop
mov
xchg
mov
ret
pop
shrb
jp
dec
inc
dec
addr16
test
jmp
cs
dec
lock
outsl
mov
jo
xchg
push
jae
sub
into
mov
ljmp
cwtl
push
sub
lret
mov
jb
inc
or
or
leave
jmp
jbe
loope
cli
scas
mov
cltd
or
xchg
in
xchg
cs
jmp
cli
push
es
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
mull
xchg
fstpt
jns
jl
add
push
push
inc
js
sbb
or
cmp
mov
xor
loop
movb
ss
push
jle
and
adc
cmpsb
jge
push
es
push
cmp
in
mov
in
out
imul
adc
lahf
mov
arpl
lahf
push
cld
rorl
mov
fisttpl
out
and
or
xor
es
rcll
cmp
jp
fdivrl
and
rcrl
cli
ds
movsl
dec
scas
addr16
lret
popa
inc
nop
sub
jae
nop
pop
in
aaa
xor
jle
fcompl
notl
repz
daa
fidivl
mov
sub
outsl
andb
out
stos
out
cs
cld
lahf
dec
mov
push
adc
inc
xor
out
lods
jg
shl
gs
outsl
sbb
mov
dec
outsl
push
outsl
push
add
jl
aas
xor
aam
mov
and
xor
fdivs
inc
cmp
mov
xchg
adc
inc
cmp
subb
subb
fistps
mov
fcmove
dec
mov
push
dec
xchg
push
jo
mov
rcrl
cmp
rolb
mov
and
pop
mov
test
cmc
in
out
sub
mov
out
leave
insl
ljmp
jl
shrb
popf
ffreep
pushf
scas
jmp
rclb
leave
js
push
out
xchg
adc
enter
pop
mov
loope
les
loop
lea
shr
call
sub
pop
mov
pop
mov
sub
std
addr16
xchg
xchg
xchg
int
test
xor
mov
xchg
inc
into
pop
stos
sub
add
lds
fbld
push
jne
inc
sbb
repnz
dec
push
xor
insl
mov
mov
outsb
ss
mov
imul
addr16
sahf
in
mov
in
xchg
and
pop
push
add
dec
sahf
aas
inc
outsl
outsl
insb
mov
jg
fisubl
mov
mov
cmp
int3
mov
fcompl
popl
nop
stos
aaa
cld
je
sub
add
jbe
rorl
or
shrb
jle
lock
add
sbb
ljmp
jns
testl
mov
mov
aad
lahf
inc
push
jns
mov
enter
adc
das
adc
pusha
xchg
push
adc
loop
cli
fbstp
out
jmp
test
js
outsb
dec
sub
mov
dec
call
dec
adc
movsb
fwait
int
outsl
in
pop
ds
std
sbbb
jno
add
cmp
cmpsb
cmp
fsubl
mov
outsl
pushf
pop
push
rolb
and
imul
out
jbe
arpl
cmc
or
clc
xorb
dec
cmp
push
mov
push
lods
ret
mov
pop
push
sub
clc
mov
xor
jmp
inc
pusha
sub
sub
mov
in
jl
jns
jl
xchg
aaa
lss
xor
adc
das
mov
push
cli
mov
xchg
adc
ror
pop
or
vpaddsw
jbe
xor
inc
jmp
cmp
enter
inc
out
por
xor
icebp
jp
adc
int3
out
invd
or
mov
jp
inc
jge
xchg
nop
or
cs
bnd
cs
lahf
jl
jb
cmc
or
inc
cmpsb
cmp
movsb
aas
fldenv
and
sbb
or
lea
jbe
mov
xor
repnz
adc
icebp
dec
jmp
test
dec
cld
or
pop
test
inc
dec
add
ficoms
data16
in
cwtl
iret
ljmp
arpl
push
push
scas
xchg
inc
lret
cmp
lods
dec
sub
adc
mov
rorl
mov
jns
insb
scas
xorl
jge
pop
testb
insl
cmpsb
adcb
and
mov
clc
dec
das
arpl
ljmp
adc
movsl
aas
inc
sub
fisttpl
test
in
cs
add
pop
xor
jmp
inc
cli
stos
cmp
jbe
sub
mul
push
add
jae
out
push
mov
je
push
pop
mov
dec
dec
lea
dec
sub
mov
mov
fs
sub
stc
inc
push
in
call
sarb
unpcklps
dec
sbb
inc
mov
sti
movsb
sbb
jge
shr
fwait
mov
push
adc
or
mov
pop
loopne
xor
jle
ja
sub
data16
jge
push
lds
mov
mov
std
lods
push
shl
mov
loopne
out
jp
fmull
push
bound
pop
jecxz
xor
test
push
ds
sbb
dec
imul
dec
sub
sbb
sahf
sbb
mov
xchg
cli
jne
test
adc
cmc
adc
add
and
dec
lahf
sti
aas
stc
out
stos
test
cli
add
call
lods
sbb
aad
arpl
ljmp
sbb
jl
leave
ja
adc
cwtl
or
sub
push
loop
add
sub
sub
inc
inc
xchg
cmp
pop
mov
sbb
cld
mov
outsl
push
mov
mov
sbb
out
dec
outsl
push
fsubl
shrl
inc
dec
lret
jle
or
roll
mov
or
add
mov
mov
pop
inc
sbb
and
popf
inc
cmp
or
fwait
dec
inc
pop
mov
fcmovnbe
jecxz
sub
outsb
jnp
mov
mov
cwtl
dec
jns
push
fwait
add
loopne
mov
mov
push
ds
dec
dec
and
inc
pop
and
xor
cld
repz
test
cs
xlat
sub
jmp
or
jb
mov
push
sbb
mov
jl
jns
jl
or
sbb
icebp
aaa
fistpl
jg
sub
mov
mov
adc
aas
sub
mov
mov
xor
fidivrl
ljmp
imul
inc
mov
inc
pop
dec
add
movl
mov
mov
dec
arpl
leave
adc
jne
cmp
paddw
sbb
pop
and
jg
add
pushf
nop
adc
stos
les
and
add
ljmp
daa
addr16
mov
inc
sub
xchg
shl
rcll
add
or
sub
cld
mov
xor
hlt
mov
loope
lods
cwtl
cld
xor
addr16
shrb
movsb
xchg
pusha
add
mov
js
popa
lcall
loop
imul
divl
sbb
cmp
shll
sbb
mov
incl
push
or
subl
jo
and
or
stc
repnz
xor
jle
sti
mov
push
sahf
out
cmp
test
mov
mov
cli
out
mov
loop
sub
lock
aas
mov
jne
adc
pop
sub
xchg
or
lods
popa
adc
clc
xchg
jne
lods
dec
out
push
test
adc
mov
lahf
inc
clc
cmc
jno
and
xchg
inc
dec
pop
dec
aam
mov
or
stc
idiv
dec
pop
pop
cld
dec
repnz
sub
xchg
sahf
vmovupd
test
and
fs
icebp
push
lods
push
dec
jb
xor
les
out
mov
xchg
sub
scas
shll
mov
dec
aas
in
mov
sti
adc
shlb
fwait
add
rcrb
xchg
outsl
sbb
xchg
jns
pop
and
pop
mov
iret
dec
movsl
mov
rcl
test
or
cmp
mov
jecxz
sti
shrl
fs
inc
mov
lea
dec
xor
push
xor
jge
mov
nop
xchg
mov
jb
push
inc
mov
pop
mov
and
lock
in
movb
int3
sbb
std
fs
xor
aaa
mov
insl
xor
jno
mov
and
mov
jmp
bound
push
jp
xchg
test
lahf
shrb
fdivs
xchg
repz
idivl
push
pop
icebp
lret
ds
mov
add
sub
mov
and
fwait
mov
mov
or
in
movsl
repz
mov
aam
fcoms
dec
movsl
fiadds
pop
fiaddl
mov
out
mov
adc
int
imul
or
stos
pop
jge
push
mov
lcall
scas
inc
hlt
hlt
ljmp
enter
dec
adcb
sub
sub
mov
sub
mov
daa
rcll
xchg
push
cmpl
imul
mov
cmc
sbb
dec
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
in
jl
adc
sbb
add
push
cmc
pop
mov
fisubrs
insb
fstps
lock
cmp
adc
scas
mov
fsubrl
out
fadd
sub
rdtsc
jmp
test
dec
adc
xchg
lahf
or
jmp
lcall
jns
sub
in
in
stos
sbb
in
inc
xchg
and
ss
inc
sbb
dec
jl
sahf
aad
push
lret
jns
dec
mov
xor
ret
idiv
ror
cmp
nop
lock
mov
ds
imul
mov
js
cld
push
mov
add
mov
push
mov
in
mov
dec
mov
ret
lret
sbb
mov
sub
xor
cmc
push
js
sbb
sub
adc
cmp
fstps
pop
mov
xchg
pop
pop
outsl
sbb
mov
lcall
mov
das
mov
orl
push
adcl
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
sub
orb
jl
adc
or
push
clc
in
loop
jns
int
sbb
ret
ret
ja,pt
call
mov
sub
psubusb
xlat
in
jg
pop
cmp
sub
xor
xlat
sub
cmp
repz
and
dec
test
sbb
cld
push
test
rcrb
int
ljmp
adc
jnp
sub
xor
and
pushf
mov
mov
xchg
dec
arpl
sub
popa
mov
mov
inc
icebp
rcrb
loope
and
mov
dec
int3
add
jge
daa
xchg
icebp
cld
xlat
and
cmp
adc
pop
movsb
clc
or
data16
pop
jmp
dec
sub
sbb
sbbb
push
dec
or
push
xchg
loope
cs
pop
adc
sbb
sub
test
mov
gs
insb
sbb
aas
dec
or
xor
stos
push
dec
or
iret
adc
cmpsl
and
xchg
pushf
pushf
or
fstl
cmp
add
xchg
add
add
test
add
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
mov
aam
out
jl
adc
sub
lea
mov
mov
pop
or
in
nop
in
out
daa
dec
in
lret
pop
cmp
daa
fmull
pop
dec
inc
inc
mov
shrb
push
adc
xlat
arpl
sbb
shlb
xor
je
pop
mov
and
or
int3
or
rcll
cmp
lretw
pop
sbb
mov
sub
sbb
fs
lods
xchg
out
scas
mov
in
test
hlt
shll
repz
add
imul
orb
mov
fcmovu
mov
jecxz
xchg
pop
dec
fstpt
adc
into
and
mov
fnstcw
sarl
jno
mov
cmp
lahf
mov
dec
or
decb
sub
test
aaa
mov
stc
add
pushf
xlat
push
dec
mov
fisubrl
lcall
sbb
testb
mov
lock
mov
cmpsl
pop
ds
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
out
jl
lret
jl
mov
jl
sahf
adc
shr
cwtl
lods
fsubr
dec
repz
push
dec
cli
cltd
dec
arpl
or
nop
cmpsl
fisttps
inc
push
fwait
sbb
addl
xlat
mov
xchg
push
lock
jge
mov
and
int3
jmp
push
jae
add
xor
push
icebp
inc
enter
adc
xchg
adc
hlt
in
inc
stc
add
xchg
shll
push
push
lret
or
mov
mov
sbb
push
mov
das
mov
int3
cmp
sub
sub
or
cmp
mov
cmp
pusha
loopne
push
jg
jnp
stos
popw
add
jno
ret
insl
adc
push
xlat
hlt
lret
std
ss
cmc
push
neg
fdivrl
xor
lret
addb
clc
leave
push
jno
adc
out
addr16
loope
rep
inc
mov
dec
mov
lock
fists
mov
add
mov
ljmp
pop
stc
mov
push
mov
arpl
sub
cmp
movsl
sbb
insl
cs
mov
cmp
psrlq
mov
xor
mov
jl
mov
sub
mov
outsb
ds
into
push
and
xchg
loope
cmp
jns
lea
push
pop
or
mov
xchg
pop
xchg
jbe
daa
mov
push
pop
es
pop
jae
lods
xchg
xchg
push
push
jl
push
lods
das
cmp
inc
xlat
jne
sub
inc
pop
test
loopne
icebp
in
cmpsb
cld
add
add
pop
loopne
mov
je
add
mov
jmp
sarl
daa
std
std
mov
push
aas
inc
stos
dec
adc
cmpl
and
xchg
dec
repnz
and
fnstsw
cli
aaa
jg
stos
sub
shrb
dec
out
pushf
pop
cmp
lret
mov
pop
pop
push
inc
push
lcall
loope
adc
jo
js,pn
mov
ss
and
jl
loope
mov
xorb
ret
jp
pop
mov
into
clc
dec
sbb
roll
dec
loope
loopne
rol
jb
movsb
mov
push
fldt
data16
lcall
outsl
xor
mov
outsb
mov
pop
pop
int3
les
daa
mov
xchg
cmpsb
xchg
loop
adc
adc
movsl
xor
push
aaa
push
mov
push
cmpsl
das
fisubrs
xchg
arpl
mov
cli
sarl
xchg
xchg
fs
fidivl
jno
mov
cwtl
xchg
xchg
sbb
inc
pop
adc
fimuls
mov
jnp
test
push
pusha
mov
scas
scas
je
sub
test
stos
adc
fs
lahf
push
dec
nop
and
cmpsl
jb
inc
lods
add
or
and
lods
jp
cmpsb
nop
mov
add
test
ror
mov
mov
and
int3
cmp
and
inc
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
mov
loopne
xor
jl
lret
jl
mov
fistl
out
dec
pop
insb
out
add
add
inc
mov
sbb
imul
sub
cmc
jg
xor
jne
ret
pop
and
dec
aaa
inc
addl
push
negb
scas
andb
daa
fcomps
cwtl
fcompl
ret
push
js
jge
lods
lds
mov
addr16
xlat
pop
or
shrb
in
xchg
sarb
shll
data16
push
and
mov
inc
outsb
outsl
in
mov
les
ja
subb
ret
xor
mov
jl
stos
xor
loop
push
mov
fs
mov
sbb
sbb
jmp
and
dec
adc
dec
xor
rcl
ret
orb
ret
mov
xorl
dec
pop
cmp
jle
push
aam
jae
xacquire
subl
or
xor
ret
and
mov
jl
or
inc
rcrb
push
mov
fwait
dec
dec
lods
cmc
lock
inc
lcall
mov
mov
repz
aas
cmp
mov
adc
or
mov
and
adc
int
data16
enter
push
push
stos
mov
sbb
movsl
fadd
pop
repz
arpl
push
xchg
test
ret
fistpl
cmpsl
mov
cmp
gs
test
mov
sub
dec
pop
dec
or
sti
and
inc
popa
sbb
shll
sarl
imul
sub
xchg
out
into
push
dec
mov
nop
mov
lret
pop
add
pop
lret
shll
in
std
add
cmp
femms
shlb
pop
sub
mov
push
push
loop
and
sbb
cs
out
lock
cli
movsl
mov
lcall
pop
jmp
lods
fwait
pop
in
pop
loope
sub
jns
aas
dec
fcomi
jp
ds
pop
imul
fildl
sbb
sub
int
in
mov
jle
sub
aas
adc
les
rol
scas
out
fistpl
shl
jmp
lds
inc
out
mov
adc
test
add
fnstenv
sahf
adc
xor
in
mov
nop
sti
out
imul
xchg
xor
and
push
inc
adcb
jge
inc
or
dec
xchg
push
lods
in
push
in
test
sti
add
adc
fiadds
subb
xchg
cwtl
repz
mulb
outsb
pop
fisubs
jl
inc
loop
or
fisttpl
icebp
aaa
shlb
inc
sahf
add
bound
xchg
mov
aad
lcall
jle
popf
add
dec
dec
out
xor
xlat
jp
xlat
gs
mov
bnd
notl
jae
sub
jae
sub
adc
shll
push
rcll
sub
xor
mov
xor
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
dec
cmp
mov
jl
lret
jl
stc
je
mov
ss
jmp
adc
xchg
popa
aad
jae
jg
mov
std
mov
or
das
mov
cwtl
sub
pop
push
js
fdivr
pop
inc
mov
cmp
pop
stos
inc
dec
js
lock
push
pop
sbb
inc
sbb
pushf
adc
push
dec
mov
jns
jge
xor
add
mov
mov
mov
mov
adc
ljmp
ret
dec
jl
cmp
ret
jae
mov
add
xchg
sbb
or
push
fucomi
out
sbb
xchg
xchg
or
sbb
mov
daa
out
xor
mov
push
int
mov
mov
jge
movsl
push
cmp
aad
jnp
mov
push
lds
fisttpl
sub
outsl
push
or
aaa
mov
xchg
cmpsb
sub
inc
jae
xchg
jae
pop
call
aas
mov
out
loopne
push
aad
fbld
dec
in
xor
or
scas
push
ja
push
lret
jnp
push
or
dec
sub
inc
sbb
xchg
push
mov
xlat
ss
subl
and
sbb
shll
jmp
and
arpl
adc
cltd
or
mov
fs
leave
test
add
mov
jecxz
sbb
into
adc
sub
stc
dec
mov
inc
xchg
cmp
mov
mov
mov
add
and
sub
inc
jle
into
fildl
push
mov
cmp
mulps
mov
add
xlat
fadd
inc
mov
jle
jg
loopne
orb
cmpsl
adc
xor
push
sar
or
add
hlt
xchg
lock
pushf
sub
and
and
out
fs
loop
mov
movsb
es
std
inc
ret
xchg
pop
cmc
dec
pop
out
lock
movsb
or
mov
add
and
push
xchg
insb
sub
pop
mov
dec
inc
shl
xlat
leave
sbb
lods
out
pop
mov
xchg
inc
cmp
cltd
mov
adc
dec
and
cmc
xchg
hlt
in
jge
and
test
xor
ret
xor
stc
xchg
mov
jae
pop
insb
into
imul
std
sbb
add
lock
pushf
push
or
sub
ljmp
and
popf
xor
xlat
push
or
lea
daa
mov
loope
cmpsb
cld
ret
int
repz
sub
ret
lods
sbb
mov
decb
pop
add
cmc
push
mov
sbb
push
lods
adc
ja
popf
xchg
mov
push
repz
cmp
insl
mov
and
test
adc
xor
sti
fstl
push
fdivrl
pop
cmp
inc
jecxz
mov
mov
test
jb
into
out
and
lcall
mov
mov
xor
xlat
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
mov
push
xor
jl
lret
jl
test
pop
daa
mov
mov
mov
out
aad
and
lret
loope
rol
test
aaa
cs
lods
stos
push
data16
mov
xchg
push
mov
popa
rcrl
arpl
and
pop
fwait
dec
jmp
adc
sbb
fs
jge
rcrb
inc
imul
rorb
xorb
sbbb
mov
push
mov
and
mov
out
lret
jae
lods
mov
mov
inc
or
jge
data16
or
mov
loopne
adc
mov
call
aas
cmc
mov
inc
inc
add
cmc
adc
test
sarb
mov
xor
movsb
cli
testl
xchg
cwtl
xor
jecxz
in
adc
dec
push
jae
mov
and
or
sbb
sti
into
in
inc
sarb
or
mov
popf
mov
movsb
test
lret
cld
stc
inc
adc
or
mov
jecxz
xchg
jno
xchg
neg
or
mov
ja
clc
fisttpll
adc
aad
in
test
lret
arpl
fs
idivb
xor
cmp
dec
in
subl
xor
and
add
pop
add
push
daa
lret
out
fcompp
testl
mov
inc
dec
cltd
inc
xlat
pop
or
lea
push
insl
mov
dec
sub
roll
add
js
loop
cmpsb
xor
fists
scas
jns,pn
inc
xor
into
xlat
mov
mov
mov
jne
sbb
pusha
out
imul
daa
mov
movsb
sbb
jbe
stos
orl
jbe
lods
aad
inc
xchg
pushf
inc
out
cmc
add
outsl
jecxz
popa
shrl
jmp
dec
xlat
test
jo
sahf
sbb
add
test
shlb
dec
jg
daa
inc
jae
xchg
dec
scas
insb
iret
jnp
or
jle
sub
cmp
clc
fimuls
call
daa
shrb
shll
call
and
xor
dec
orb
rcll
jp
xchg
push
pop
ror
adc
push
dec
cld
pushfw
push
fstl
sub
in
movl
mov
mov
out
sub
add
test
notl
inc
and
fimull
sbb
xor
call
and
call
mov
push
daa
mov
call
adc
inc
mov
dec
subb
lods
ja
aad
cmc
and
and
ret
shll
out
inc
pushf
or
stos
lret
iret
jnp
mov
push
inc
fmull
int
adc
xchg
jl
aaa
imul
inc
test
or
ret
inc
fisttpll
mov
leave
cltd
pop
mov
mov
xor
ret
xchg
push
popl
addr16
dec
cmp
loopne
test
xchg
cmp
lahf
fsubrs
adc
imul
mov
jmp
icebp
cs
ja
jno
mov
loop
push
cmp
jns
jl
loopne
loope
call
aam
pop
or
andl
mov
pop
jge
jb
inc
mov
rcrb
push
repz
les
cmp
dec
sbb
repnz
repnz
or
fcmovu
outsb
pop
dec
insl
out
inc
lcall
rcrl
jnp
repz
fimull
ds
mov
fistps
adc
stos
adcl
cmc
les
mov
es
jle
push
icebp
enter
xchg
mov
adc
cmp
addb
decl
lret
cmp
dec
pop
xchg
cmp
ja
xchg
int
mov
add
mov
ficompl
in
jns
in
outsb
inc
scas
cld
jae
mov
push
repnz
xor
adc
aas
lock
sub
pusha
ret
aam
je
insb
or
xor
mov
cmc
je
mov
xor
in
jnp
insl
or
pop
cmpsl
push
mov
add
outsl
lods
and
xchg
popf
dec
lock
leave
xor
xor
mov
fcoms
das
rcr
pop
or
dec
cs
faddp
mov
mov
aam
mov
dec
loope
mov
shrb
or
pop
out
aam
jb
stos
inc
negl
xor
ret
pusha
jbe
aas
ds
mov
mov
and
cmp
adc
pshufw
mov
pop
cmpsb
xor
mov
int3
imul
leave
xchg
xor
cmp
mov
scas
jmp
fsubl
mov
loope
dec
or
repnz
fdivs
popf
bound
sub
icebp
bound
aam
xlat
pop
lods
js
cmp
arpl
data16
lahf
push
rcrb
hlt
aam
mov
sub
xchg
jg
stos
fwait
cs
int3
xor
movsl
enter
and
test
int3
divl
push
lds
sub
cmp
mov
dec
movsb
call
int
or
jecxz
mov
jg
or
inc
mov
inc
push
cmp
lcall
jb
xor
out
std
iret
jmp
push
shlb
sub
jge
inc
xchg
icebp
sub
fwait
inc
adc
sbb
dec
cli
subl
xchg
xchg
cs
adc
mov
fsubr
xor
inc
xor
mov
or
sub
push
stc
dec
mov
mov
push
cmpsl
scas
xor
adc
and
stc
push
or
shll
push
add
mov
sarb
pushf
shlb
outsb
rolb
in
enter
ficomps
fidivl
sti
fisubrl
test
stos
lret
xor
cld
lock
xor
lds
add
add
mov
sub
jmp
mov
pop
out
mov
cmpsl
ljmp
xchg
inc
sub
sub
lcall
mov
aad
outsb
sub
xchg
testl
pop
cld
push
orb
xor
cmc
loop
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fadds
jl
lret
jl
pop
mov
pusha
mov
or
lret
scas
fcomps
pop
fcmovnb
sahf
mov
dec
xchg
xchg
sub
adc
or
pop
sbb
cmp
pushf
ret
fcoml
push
scas
std
data16
leave
push
loop
cmp
movsl
mov
dec
lret
mov
sbb
jmp
jmp
mov
sub
xchg
sbb
pop
adc
xchg
orb
and
addr16
call
sub
adc
in
and
mov
mov
and
sbb
ljmp
lds
lds
dec
fadd
iret
mov
add
cmp
sub
mov
mov
xchg
and
shlb
cmp
imul
xor
sub
ret
loopne
repz
dec
xchg
icebp
xchg
aas
jecxz
cmp
xor
test
cmp
add
lret
stc
pop
pop
aad
jmp
loop
xor
lret
inc
addr16
pop
call
shr
bound
stos
add
sbb
ljmp
cmpl
push
jbe
insb
pop
jecxz
lcall
mov
outsb
sbb
sbb
cmp
cltd
rorl
lret
movsl
sysenter
lahf
or
das
mov
sub
idivb
adcl
pop
bound
mov
inc
mov
mov
nop
dec
sti
or
in
scas
add
loope
ja
mov
mov
mov
adc
mov
ja
push
jmp
mov
mov
and
pop
jmp
pop
mov
pusha
xor
cmp
aaa
popf
jmp
shrb
xor
inc
and
and
cmp
and
lahf
push
sbb
mov
iret
pop
sbb
or
jl
adc
dec
dec
sbb
or
stos
mov
cmpb
lcall
cmc
mov
mov
cmp
cs
jb
cmp
dec
mov
sbb
dec
stos
mov
es
push
jl
sti
popf
jns
jl
aas
into
cwtl
mov
test
mov
pop
lds
pop
pop
idivl
sub
sbb
neg
stc
cs
mov
adc
and
call
jge
pop
stc
dec
sub
je
jge
movsl
mov
inc
xor
xchg
into
xor
movsl
outsb
pop
push
sbb
inc
sarb
adc
mov
daa
sub
das
aas
push
cmp
mov
loopne
pcmpeqb
pop
ss
je
sarl
fdivrl
cmp
scas
push
lcall
fisubrl
pop
sbb
mov
xchg
pop
and
sub
sbb
into
mov
mov
jp
cltd
cli
enter
sbb
insb
ret
jp
leave
mov
sub
jmp
and
pop
cmc
and
movsl
cmp
jo
and
dec
adc
xchg
popf
mov
arpl
rclb
push
movsl
mov
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
xchg
jl
lret
jl
ss
aas
adc
outsb
es
gs
popa
in
shll
sbb
pop
fimuls
leave
cmpsl
idiv
repnz
cmp
imul
and
and
lret
or
sub
jle
es
scas
lret
cmc
cmp
or
fiadds
aam
mov
imul
mov
fsubrl
out
mov
in
sar
or
dec
bound
jmp
pop
inc
sbb
inc
mov
hlt
or
test
idivl
dec
and
or
fisttpl
ret
pushf
jmp
inc
pop
add
lds
and
cmp
and
mov
mov
arpl
add
test
es
push
jl
xor
out
adcl
or
jns
mov
out
repnz
pop
sub
jmp
mov
mov
lods
out
jle
insl
shrb
push
js
mov
into
push
sbb
and
out
mov
cld
out
xchg
adc
push
mov
mov
ret
inc
add
les
aas
lods
int3
push
and
cmp
pusha
inc
test
jle
sbb
sbb
ret
sbbb
mov
cmp
cmc
lock
push
jle
or
out
stos
adcl
or
faddl
dec
jb
xchg
addb
xchg
lds
add
dec
test
negb
test
sarl
lea
arpl
pop
jge
dec
jmp
in
sbb
jno
dec
xor
aaa
sbb
punpckhbw
lock
ret
sub
ds
ds
cltd
cli
leave
xchg
xor
lock
cmp
ds
es
fwait
push
repz
shl
cmc
les
xchg
sbb
test
push
ret
loope
jo
movb
clc
push
xchg
cmc
jns
cmp
scas
fs
jns
jecxz
push
sub
pop
xor
cmp
pop
jle
ja
call
xlat
movsl
mov
push
movsb
loope
loop
pusha
ss
fmuls
std
jae
push
mov
jg
xor
pop
adc
jecxz
ret
mov
dec
push
jno
in
lds
jl
call
bound
lea
outsl
jg
xor
inc
xor
aad
arpl
dec
push
std
or
mov
mov
and
lret
imul
adc
cmp
imul
dec
aad
xchg
test
inc
addr16
out
decb
mov
lret
inc
cmp
xchg
mov
cs
adc
add
ret
push
cs
mov
pop
ds
scas
cmpsl
mov
or
jp
inc
and
or
lahf
xchg
mull
scas
gs
sbb
outsl
cmp
dec
cld
xlat
mov
sub
adc
test
ds
xor
sarl
aad
pop
mov
nop
mov
xor
push
js
pop
mov
popf
add
pop
inc
lea
pop
mov
nop
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
dec
fcmove
aas
xchg
jns
jl
and
jge
outsb
cld
mov
lods
rclb
push
lahf
lret
mov
loopne
movsl
push
cmp
fnstenv
mov
pop
pop
ret
fwait
xchg
cltd
into
xchg
insb
adc
cmp
adc
js
or
add
movsl
repz
fsubr
xchg
pusha
xor
leave
mov
loop
mov
cmp
xor
jg
pop
push
pop
aas
pop
add
push
inc
jl
in
pop
cld
std
in
or
xor
imul
jge
ret
xor
cmc
pop
jns
out
cli
lock
add
jmp
cmp
cs
loop
add
add
push
jp
rolb
jb
imulb
test
jae
and
popa
vmovhlps
movsb
xchg
nop
pushf
int
dec
daa
aaa
in
shrl
add
pop
jnp
std
inc
lds
lea
push
fstpt
loopne
fwait
aam
ljmp
lret
cmp
data16
fcmovbe
sbbl
xor
test
sub
test
movsl
test
les
and
xchg
psubd
out
xchg
stos
and
push
repnz
sbb
push
enter
sti
jp
jmp
cmp
dec
insl
in
je
and
and
cmp
lds
out
leave
inc
fistpl
out
addl
mov
inc
push
push
pop
jmp
fisubrl
pusha
xchg
loope
inc
xor
mov
loope
fildll
rcrb
jo
xchg
test
cmp
and
aam
lds
fmuls
testl
mov
push
push
mov
add
cmpsb
jb
inc
and
and
jne
outsl
sarb
pop
loop
pop
shll
leave
sub
ret
lret
popf
aaa
fstps
icebp
fstpl
and
lahf
pop
outsb
and
and
jmp
jmp
push
inc
mov
and
cli
mov
and
arpl
push
mov
aaa
sub
in
into
xchg
sbb
loopne
xchg
adc
and
xchg
data16
cltd
or
ds
add
sbb
aaa
xchg
mov
push
inc
imul
cs
xor
sub
icebp
pop
mov
and
mov
out
mov
cmpsl
and
test
adc
dec
imul
dec
mov
xchg
xchg
je
cmc
stos
sbb
xchg
pop
jmp
dec
mov
push
pop
and
xor
inc
sahf
jl
daa
scas
int3
and
enter
int
scas
adc
divb
pop
pop
rorb
int
lds
xchg
push
push
inc
jnp
or
int
xor
xchg
fstpl
arpl
adc
and
pop
mov
jnp
mov
xchg
out
mov
leave
mov
leave
lods
adc
aad
mov
mov
lods
jl
rcrb
and
or
bound
pop
cmp
cmc
cmp
pop
add
adc
inc
in
xchg
jo
xchg
jb
sbb
nop
ljmp
xchg
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
adc
add
jns
jl
call
xchg
dec
les
sub
int3
cli
jnp
or
or
ljmp
ss
sub
pop
xor
ret
test
sbb
add
lret
rorl
rcll
fistpl
mov
mov
mov
adc
xor
test
inc
mov
push
mov
xor
push
repnz
xchg
cmp
sbbb
xchg
pop
addr16
jns
inc
jmp
push
sti
xor
addr16
push
pop
sub
std
xor
shll
xchg
mov
and
push
inc
adc
mov
add
pop
fcmovnbe
std
test
mov
das
imul
rolb
mov
add
xchg
rcrb
adc
xchg
jns
dec
xchg
stos
ljmp
fs
sbb
lds
mov
sbb
stos
adc
mov
pushf
mov
cld
iret
pop
xor
mov
repz
shl
sub
sbb
cmp
xor
jg
add
and
lock
inc
pop
fidivs
test
cmp
jb
adc
cmp
aas
insl
fisttps
shlb
or
sub
or
sti
lret
std
jl
mov
sahf
dec
rcll
pop
xchg
insl
mov
pop
jae
fisubrs
or
push
out
adcb
add
cmpsb
repnz
mov
aam
add
nop
fstl
stos
dec
das
data16
inc
and
adc
jne
lret
fisubs
mov
sahf
insb
sbb
push
into
cmp
fwait
jns
jae
mov
jge
out
fdivl
xor
sbb
and
sbb
fsubl
out
push
xchg
xchg
inc
stos
push
cmp
mov
fists
call
xlat
inc
rclb
add
dec
jecxz
fiadds
mov
sarb
cmp
aaa
jecxz
dec
sbb
fucomp
mov
sub
xor
fcompl
insb
xchg
lret
out
lds
iret
xchg
aad
jae
and
push
jbe
add
jb
ret
addl
inc
into
testb
mov
push
mov
and
jl
aas
jnp
xor
cli
dec
pusha
pop
add
enter
xchg
fdivrs
fisubrl
mov
inc
cmc
lret
dec
and
repnz
xchg
aas
das
bound
sub
mov
mov
sub
inc
sub
in
imul
xor
jno
fadd
fadd
sbb
adc
lods
icebp
insb
mov
addr16
movsl
add
fs
sbb
xchg
jne
jno
iret
lret
push
sub
inc
jl
add
test
pop
push
dec
jno
aam
mov
lcall
mov
push
arpl
jmp
mov
sbb
idivl
int
pushf
iret
or
xlat
fldenv
push
sbb
mov
push
inc
repnz
mov
add
mov
xlat
mov
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
adc
outsl
jg
mov
jns
jl
pop
sbb
xor
mov
test
pop
sub
jecxz
dec
xor
xchg
add
push
es
cmp
push
mov
xor
mov
pop
jbe
les
push
out
jnp
icebp
and
push
cwtl
mov
cmp
fdivl
or
in
sbb
push
fwait
popf
fbld
repz
jmp
sub
subb
cs
and
lods
inc
in
in
or
ret
sbb
or
inc
mov
inc
stos
and
pop
pop
stc
loopne
test
push
dec
xchg
stc
fnstcw
push
sub
xchg
add
xor
mov
dec
mov
movsb
push
xchg
mov
into
sub
xor
testl
add
jle
sub
mov
cmpsb
mov
ja
cmc
scas
scas
or
mov
dec
cmc
push
stc
fcompl
xchg
scas
xlat
cmpsl
lcall
xlat
test
int3
jns
outsl
lods
call
pushf
dec
iret
xchg
or
shlb
outsb
data16
inc
aaa
inc
mov
push
lock
or
leave
jp
sbb
mov
xchg
inc
mov
jns
add
mov
outsl
push
adc
cld
xor
ret
sbb
in
pop
pop
sub
ficomps
mov
pop
movsl
idiv
fdivl
test
mov
insb
adc
sub
dec
and
lret
xchg
out
out
lcall
arpl
insb
pop
outsl
sub
insl
jnp
xchg
inc
pop
das
dec
arpl
mov
xchg
aam
jo
inc
mov
ljmp
jge
dec
mov
imul
mov
jmp
cmp
lret
jnp
arpl
cltd
or
sub
stos
mov
mov
sub
scas
or
sub
lds
sbb
add
mov
xorb
inc
cmc
jbe
pop
inc
push
jno
addr16
cmpsl
subb
xchg
bound
dec
jecxz
test
and
mov
in
loope
mov
xorl
jmp
insl
orl
out
fwait
or
notl
aaa
cmp
push
sbb
add
push
lods
mov
shrb
sub
push
mov
hlt
pop
aam
addr16
push
ja
mov
jo
and
pop
mov
call
enter
xor
sbb
cli
mov
mov
xor
cwtl
repnz
outsl
xor
cld
out
pop
push
cmp
in
jp
pop
loope
mov
rolb
jns
xor
enter
loope
adc
decb
cmpsl
dec
jns
scas
adc
dec
cmpsb
popf
pushf
inc
mov
jno
sahf
pop
cs
jmp
add
stos
std
movsl
int3
clc
sbb
scas
out
xchg
push
mov
loopne
aaa
pop
repz
int
popf
jb
sbb
loope
cwtl
dec
shll
xchg
aad
je
popf
popa
aas
lea
or
in
fsubs
pop
clc
je
push
inc
sbb
ret
and
cmpsl
jo
or
std
pop
fwait
xlat
aaa
lock
add
nop
fwait
and
testb
jmp
jmp
push
daa
inc
imul
xchg
popf
adc
lock
mov
jns
jl
frstor
jb,pt
mov
aam
subl
pop
cmp
adc
xchg
fwait
std
pop
jmp
dec
fildl
imul
ds
leave
mov
and
mov
xor
push
aaa
mov
into
jae
jno
cmp
bound
mov
inc
and
lea
push
or
cmpsl
pop
mov
icebp
les
mov
scas
sub
pop
incl
jnp
and
dec
lret
pop
ficompl
pop
in
push
dec
xchg
dec
jne
and
int
sbb
sbb
into
mov
xchg
pop
je
pop
daa
dec
adc
fcoml
les
push
fisttpll
mov
push
push
add
mov
adc
push
ljmp
mov
testb
inc
mov
out
mov
fs
dec
sarl
xchg
mov
mov
rorb
and
dec
cs
lods
mov
mov
mov
jae
idivl
ja
mov
and
pop
xchg
sub
cmp
push
jo
lds
sbb
mov
mov
mov
jnp
mov
push
cmp
push
xchg
adc
mov
bnd
mov
stos
in
push
das
pop
test
cmp
pop
call
push
xor
mov
and
sbb
mov
sbb
int
and
xor
mov
gs
jg
mov
add
and
fdivs
cmp
mov
sub
iret
jne
adc
xchg
frstor
repnz
flds
les
lcall
jg
cmp
mov
enter
lods
mov
pop
mov
into
scas
push
xchg
rcrl
fstl
mov
and
adc
lahf
lock
mov
pop
scas
mov
jno
pop
mov
imul
adcb
sub
int
jno
aas
add
cmp
gs
jns
in
inc
sti
jge
sub
xchg
popf
pop
imul
jg
fnstcw
aam
popf
adc
fimuls
xlat
pop
out
mulb
fsubrl
call
repz
hlt
imul
jo
cmpsl
dec
sub
sarl
mov
mov
add
movsb
xchg
rcrb
repz
jp
mov
jge
ret
and
and
outsl
lret
movsb
insb
mov
mov
aas
lahf
fldt
xor
mov
mov
xor
jg
mov
lcall
fwait
hlt
cwtl
bound
aam
stos
inc
out
insl
jle
inc
leave
rol
push
add
cmpsl
jns
aaa
stos
xchg
dec
sbb
jle
rcrb
movsb
push
and
movsl
jl
test
xor
test
sbb
xor
in
out
adc
lds
ret
mov
mov
push
notl
test
xor
pop
inc
fcmovnbe
xchg
and
loop
inc
xchg
sub
jmp
jnp
les
test
loopne
loope
inc
sub
push
call
in
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
out
xor
xchg
xchg
jl
lret
jl
std
cmp
fwait
xchg
clc
pop
jp
aas
push
inc
cld
jge
out
jle
in
fwait
into
in
push
push
xchg
outsl
cmp
jge
test
aas
add
int3
xchg
popa
iret
cltd
lahf
push
jmp
decl
ja
jecxz
loope
fistl
jg
sub
mov
ss
sbb
fisttpll
jno
nop
mov
rcrb
sub
test
sbb
adc
fstps
jl
pop
std
push
cmp
inc
mov
gs
pop
dec
mov
sbb
pop
bound
fdivrp
es
jmp
lods
das
pushf
ficoml
movsb
pop
aaa
lock
lcall
jmp
jl
test
cmp
bound
sub
lods
and
pop
insb
xor
or
divl
cmp
jo
mov
and
js
adc
sahf
inc
xchg
cmp
or
push
addr16
fwait
lahf
xchg
mov
adc
cmp
dec
add
xlat
xchg
jmp
pop
or
and
pop
mov
add
sbb
jle
leave
addr16
mov
ljmp
adc
das
into
xor
jmp
sbb
xchg
dec
push
push
pop
out
ret
movsb
push
jnp
lods
iret
jecxz
aaa
daa
addr16
xchg
lea
in
adc
stos
arpl
clc
pop
out
jp
iret
dec
int
adc
jnp
pop
aaa
xor
dec
cs
in
repz
sub
stos
inc
out
popf
jne
mov
push
lea
cmp
xchg
jle
andl
jo
xchg
ss
jno
lods
cmp
jmp
and
inc
sbb
push
and
shlb
mov
cmp
lahf
inc
xchg
jle
es
or
out
mov
dec
icebp
add
jmp
shr
inc
aaa
push
xchg
test
mov
ja
stos
out
test
dec
inc
adc
mov
inc
lcall
popa
fidivl
add
adc
xchg
sti
add
les
fisttps
adc
mov
or
mov
cltd
pop
enter
cmpsl
jb
hlt
aas
movsb
testl
or
mov
outsb
inc
pop
sbb
mov
sbb
xchg
je
push
sahf
mov
in
sarb
stc
xor
decb
sub
jns
mov
int3
loop
push
inc
bound
cmp
fldenv
clc
repz
mov
push
mov
movsl
xchg
and
push
inc
stos
xchg
mov
sbbl
xorb
adc
rcrb
popf
popf
stos
inc
inc
sbb
adcl
ss
inc
add
test
add
jb
xor
ret
popf
js
loopne
imul
sarl
sub
jnp
int3
testl
jo
add
cmp
movl
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
mov
xchg
jl
lret
jl
xor
subl
pop
call
xor
and
scas
or
ficoms
loope
xchg
in
pop
je
in
inc
dec
mov
mov
xor
dec
mov
jle
push
ret
adc
ret
xchg
add
scas
hlt
xlat
sub
sub
push
loope
ljmp
ret
rolb
pop
xor
mov
lret
rolb
and
lret
pop
lock
and
cli
pop
jnp
mov
jno
out
adc
sbb
push
sub
pop
jnp
das
sbb
out
repz
jb
loop
call
cwtl
xor
inc
sbb
insb
int
arpl
shlb
mov
js
add
sbb
dec
lret
mov
aam
adcl
das
sub
push
mov
jg
pop
jle
cmpsb
mov
cltd
scas
cli
aaa
loop
sbb
ds
pop
cmc
xchg
cmc
rcrl
sub
call
jno
cmp
dec
mov
jno
pushf
js
mov
in
loop
cwtl
or
jle
xchg
mov
cmc
repz
fs
cwtl
mov
xor
into
jbe
push
xchg
test
imul
cli
in
orb
xchg
push
xor
addb
fcmove
and
fistl
aas
mov
fcmovbe
inc
cwtl
aad
cld
xor
adc
fistpll
mov
mov
jne
sarl
lock
subb
test
jmp
sub
mov
scas
xor
mov
lahf
push
mov
xchg
ret
inc
jmp
jecxz
ja
mov
ss
cmpsl
movsb
popf
sbb
ret
add
test
inc
leave
fs
fldenv
lods
test
jo
jmp
scas
mov
daa
xchg
das
lds
int3
mov
sbb
mov
mov
xlat
mov
lea
insb
pusha
cmp
xchg
in
dec
or
call
bound
rcll
lods
loop
sub
add
es
push
sbb
popf
test
sbb
or
lret
mov
dec
decl
test
add
mov
js
call
insl
movb
rcrb
inc
pop
bound
push
inc
mov
mov
mov
out
and
out
mov
xor
mov
inc
call
sarl
fs
ljmp
sub
in
jo
sbb
push
ljmp
and
ss
stos
or
inc
cmp
or
or
xchg
and
faddl
out
int3
sub
fs
stos
inc
inc
frstor
or
or
js
mov
push
sahf
call
fstpl
push
nopl
cmp
bound
std
lods
ret
xchg
xor
mov
rorl
scas
ja
push
dec
imul
fwait
rorb
out
mov
leave
inc
insb
sub
inc
pop
in
mov
mov
dec
cmpps
add
add
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
mov
xor
lret
jl
adc
lock
add
dec
lds
jns
lret
cmpsb
std
frstor
test
push
inc
xchg
sbb
push
addl
call
jnp
stc
pusha
mov
and
xchg
mov
cld
xchg
inc
cltd
sub
ja
scas
cmp
add
xchg
mov
lds
bound
mov
or
or
cmp
and
repz
fimuls
stos
addb
inc
lds
addb
fisubrs
cmp
jo
cmp
jl
enter
mov
fldenv
ljmp
sub
lods
out
pop
lock
fs
mov
push
or
sbb
sbb
sub
mov
mov
scas
daa
jbe
jmp
fidivrl
push
adc
js
movsb
push
mov
jne
sti
jg
xchg
insb
cld
fwait
scas
shl
xchg
scas
cli
cmp
idivb
pushf
push
int
je
lods
pop
dec
mov
cmp
in
sar
dec
or
xchg
jecxz
lret
mov
mov
sub
push
mov
cmp
fwait
sbb
test
jb
sbb
std
rcpps
pop
ret
shll
data16
xchg
fsts
insl
adc
fnsave
out
mov
sbb
adc
out
dec
cmp
mov
dec
sbb
adc
enter
xorl
mov
mov
enter
scas
lret
nop
sbb
sub
adc
cld
js
cmpsl
mov
dec
pop
xor
and
in
cli
sub
xor
ds
jp
mov
jecxz
push
add
movsb
shl
mov
cs
ret
call
ja
into
popa
sbb
cmp
and
aad
icebp
rorl
enter
aaa
shl
pop
sbb
pop
mov
dec
add
xorl
lods
jg
daa
and
scas
into
or
leave
sbb
mov
sub
cmc
scas
mov
and
inc
cmp
inc
cmp
adc
cltd
inc
std
shll
push
int
sub
test
test
and
jp
jle
es
xor
nop
imul
mov
por
loopne
xlat
adc
xchg
jne
xchg
idivl
jno
jmp
adc
sahf
mov
xchg
lahf
xchg
popl
daa
add
and
jne
xor
inc
and
std
or
add
popf
scas
mov
xchg
dec
dec
xor
hlt
xorl
and
lods
dec
push
push
loopne
dec
shll
push
movsl
shll
xchg
sub
cwtl
cmp
inc
cvtdq2ps
mov
addr16
in
mov
rorl
mov
sub
inc
or
sub
xchg
gs
xor
push
lock
jp
aas
repnz
or
lods
push
cmpsl
or
test
sbb
cmp
int
pop
sub
fsubs
fldt
sub
adc
clc
dec
pop
out
fisttpll
rolb
rorl
scas
xlat
jmp
lret
jo
or
jmp
sahf
xor
insb
insb
rclb
xchg
lahf
jl
lret
jl
fwait
test
cs
out
ds
cmp
addr16
add
loop
jns
pop
syscall
mov
and
mov
mov
inc
add
test
stos
cmp
pusha
in
outsb
push
jmp
add
push
jl
insb
cli
enter
fdivrl
mov
xlat
mov
lret
pop
repz
sbb
inc
aas
scas
pop
cmpsl
xchg
mov
lods
jnp
pop
mov
in
and
fyl2xp1
dec
test
add
push
movsl
stos
jge
lret
enter
inc
hlt
and
pmulhw
outsl
jo
sbb
stc
repz
or
sar
sti
cmp
ret
pusha
loope
sub
test
outsb
jge
and
xchg
and
loop
testl
hlt
mov
std
data16
sbb
inc
mov
mov
popa
sarl
mov
lock
icebp
dec
fucomi
xor
add
icebp
sub
jnp
add
cmp
inc
ret
mov
jae,pt
jns
mov
lods
pop
jmp
or
sub
jl
xchg
pop
push
test
aam
jns
stc
mov
cmp
mov
mov
lcall
jmp
je
mov
sbb
mov
add
xor
fxch
and
neg
xor
sti
fs
cmp
sahf
ret
xchg
fstpl
jbe
xchg
pop
icebp
jmp
xchg
stos
jge
repnz
repnz
cli
inc
addl
aaa
out
enter
lods
dec
je
mov
jg
add
pop
sub
xchg
insl
out
lcall
out
fmull
and
test
push
mov
jo
xchg
push
aas
sbb
dec
int3
jb
mov
mov
lcall
dec
add
adc
xor
out
or
fisubrs
mov
mov
mov
add
repnz
mov
mov
mov
je
clc
sbb
fildl
mov
mov
push
in
jnp
cmp
cmp
add
cmp
jmp
dec
jecxz
inc
shlb
aaa
in
shr
enter
push
ret
ret
bound
sbb
fisubrl
dec
fld
adc
aad
sub
or
cwtl
rcrb
jp
mov
and
jbe
fwait
pop
pop
stc
jp
daa
mov
pop
int3
repz
push
pop
jbe
scas
pop
sub
les
rolb
xchg
insb
add
cmp
sub
mov
shll
xchg
add
and
addl
jmp
int3
mov
xlat
mov
sbb
icebp
xor
cmp
add
fcoml
dec
cmpsb
inc
inc
mov
mov
mov
repz
xlat
cli
std
fs
pop
repz
push
sti
jne
and
test
mov
or
push
cs
jae
jns
int
je
iret
add
add
inc
sub
clc
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
imul
outsl
cwtl
jl
lret
jl
cmpsl
fcom
test
jne
imul
loope
mov
dec
xchg
popf
data16
mov
jo
popf
ror
leave
sub
sbb
add
pop
mulb
fsubrl
inc
dec
in
or
stos
les
shr
daa
add
and
and
ficoms
mov
leave
add
aas
and
and
imul
pop
jmp
xor
lcall
mov
xchg
or
xchg
lods
popw
ljmp
ret
jbe
lea
sahf
sar
bound
inc
in
movlps
pop
les
xor
adc
mov
jge
sbb
push
jne
clc
gs
dec
bound
mov
cli
cmp
jecxz
dec
or
ja
sub
sarl
mov
and
mov
push
jmp
push
pop
push
stos
or
sub
ret
inc
rcr
mov
arpl
std
push
adc
call
mov
jl
sbb
pusha
mov
rorb
jecxz
daa
adc
sbb
push
adc
push
stos
and
insl
ja
pop
nop
inc
ss
sbb
jle
xchg
shrl
adc
adc
and
mov
jae
xor
call
pmovmskb
inc
and
test
popa
dec
sbb
push
imul
pop
mov
add
jg
jge
mov
fwait
dec
fidivrs
push
jnp
cld
add
sarb
int3
mov
repnz
push
das
push
addr16
daa
mov
jne
cmp
dec
int
jg
mov
sub
cwtl
mov
mov
pushf
pop
shl
inc
mov
inc
sub
cmp
sbb
add
pop
inc
call
and
inc
pop
clc
jge
pop
test
sbb
and
xchg
js
cwtl
jg
xlat
push
or
mov
inc
mov
sbb
rcrl
lea
cs
sub
pop
cmp
pop
cmpsl
stc
repz
xchg
test
movsb
jmp
fdivrs
lock
jnp
int3
adc
bound
add
lcall
daa
scas
fcompl
jbe
pusha
jp
push
stos
xchg
mov
push
int
imul
xor
jecxz
das
pop
fisubs
loope
mov
into
inc
jmp
and
call
das
mov
cmp
xchg
xor
in
mov
jl
xchg
out
fmuls
fwait
lret
cld
lea
push
and
jne
test
mov
adc
gs
out
ffreep
shll
xchg
cmpb
addr16
dec
mov
call
ss
inc
mov
rcl
xchg
sarl
ss
mov
fldcw
ficompl
mov
lcall
adc
mov
movsb
jecxz
insl
mov
jno
sub
pop
add
adc
inc
fbstp
push
daa
mov
pop
or
push
fnstcw
clc
popa
push
loope
icebp
sarb
mov
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
push
loope
add
cmpsl
jns
jl
lea
mov
in
jno
dec
cmpsl
imul
cmp
les
test
or
arpl
push
loop
add
dec
cmp
cltd
mov
mov
je
mov
xchg
pop
rclb
and
mov
fucomp
lahf
mov
nop
xchg
mov
jecxz
scas
sub
xlat
rclb
add
out
adc
out
shrl
mov
and
xchg
andl
mov
dec
mov
sbbl
mov
data16
les
pop
jno
adc
adc
in
cld
ret
fidivl
das
xor
xchg
and
lahf
inc
sbb
ds
stos
fists
jmp
cmpxchg
mov
pop
cmp
ret
push
xchg
inc
arpl
push
pop
les
push
dec
pop
mov
dec
and
gs
jb
and
add
mov
ja
pop
push
nop
pop
enter
xlat
pop
add
pop
outsl
dec
popa
lods
aad
scas
call
pop
mov
dec
aaa
xchg
mov
mov
ficompl
es
pop
int3
cmpl
cmp
cmpsl
inc
ljmp
dec
stos
add
enter
jb
fisubrl
mov
aad
aam
fucomp
xor
and
mov
mov
subb
xchg
dec
xor
hlt
repz
dec
mov
pop
lcall
aaa
xor
popa
loopne
xchg
jns
push
xlat
in
popf
jb
xor
cmpsb
shr
xor
push
fcmovu
or
cli
push
xor
in
ss
cmpsl
out
js
out
roll
sti
fcompl
lods
fisubl
sub
fnstenv
bound
mov
pop
push
stos
ja
adc
mov
les
shlb
sbbb
out
enter
adc
cmpsl
lcall
cwtl
scas
enter
sbb
push
out
jmp
adc
imul
ret
imul
inc
mov
movsl
pusha
mov
pop
cwtl
movsb
faddl
push
nop
js
dec
xchg
lods
and
inc
or
or
jns
add
cmp
adc
xlat
lahf
inc
add
xlat
loope
iret
fwait
dec
sbb
fwait
leave
loop
lret
movsl
mov
or
cmp
mov
mov
mov
pop
adc
push
popa
mov
mov
out
sbb
dec
inc
sub
arpl
mov
lret
sbb
or
sub
insl
and
imul
pop
ljmp
test
stos
mov
mov
aas
mov
out
add
jbe
fsubl
cmp
mov
or
mov
and
sub
pop
pop
add
jo
push
jmp
adc
pop
in
cmpl
xchg
mov
cmp
mov
add
out
cltd
mov
sbb
fists
dec
movsb
outsb
and
mov
pop
movsb
push
sbb
jle
lret
xchg
nop
pop
jmp
divl
bound
mov
out
test
and
loop
fdivrp
lahf
sbbb
mov
push
ss
push
insl
stc
imul
inc
int3
jmp
inc
int3
add
xor
add
or
aam
jns
cs
insb
mov
jl
mov
and
pop
ja
sbb
jne
rcrb
cmp
pop
loope
lret
or
adc
aad
call
push
sbb
sbb
mov
lcall
cmpsl
mov
repz
jae
enter
mov
jo
nop
or
mov
ljmp
arpl
pop
or
aam
inc
enter
jo
add
pushf
mov
rclb
andb
idivl
sbb
mov
and
adc
fwait
inc
mov
sahf
mov
pop
sbb
les
cld
jge
iret
push
loopne
xchg
lods
cltd
lods
dec
xchg
jne
pop
inc
mov
ds
xchg
jo
sbb
and
mov
push
adcl
stos
sbb
jb
mov
and
shlb
iret
jmp
push
mov
xor
xchg
sbb
pop
mov
lods
popa
imul
mov
jp
insl
mov
dec
cltd
leave
pop
dec
dec
mov
or
in
cmpsl
cmp
cs
jb
mov
int3
adcl
xor
fcmovnu
cmpsl
mov
stos
jge
and
pusha
mov
mov
daa
movsl
dec
icebp
js
scas
fstpt
out
test
mov
jae
call
pop
clc
and
cwtl
int
and
insb
adc
aam
xor
pusha
lods
mov
pop
and
and
scas
rorb
sbb
mov
dec
insl
mov
add
pusha
gs
mov
jo
jp
sub
js
xchg
and
stc
loop
scas
push
outsl
mov
aam
out
movsl
xor
sub
gs
mov
xchg
call
xchg
push
mov
inc
push
jno
mov
jno
jbe
sub
nop
jns
mov
sub
cmp
add
nop
insl
adc
imul
inc
pop
jb
pusha
fidivrl
xchg
or
sti
xchg
jge
fwait
mov
push
cltd
xchg
in
push
or
iret
mov
aam
popa
shlb
mov
cmp
pop
mov
add
pop
clc
fwait
mov
pusha
bound
in
mov
xor
imul
cmp
cld
scas
cmp
add
aaa
jge
rcrb
mov
pop
icebp
loope
pop
js
jae
push
or
decl
je
pushf
fsubl
loopne
jo
inc
add
dec
jae
filds
xlat
mov
test
xlat
fs
jbe
and
cmp
jmp
and
in
iret
scas
mov
sbb
adc
mov
inc
arpl
cmpsb
inc
mov
mov
bound
movsb
xchg
fwait
jl
sti
aaa
mull
pop
sub
jl
mov
and
fstps
scas
scas
test
aaa
lds
pop
mov
mov
into
push
out
ret
mov
lahf
xchg
pop
jne
pop
xor
scas
addl
push
push
loopne
test
pop
xchg
fdivrs
sbb
repz
mov
rcr
dec
mov
and
adc
xchg
sub
adc
fdivs
mov
pop
jbe
ret
pop
adc
loop
xchg
adc
pop
ss
gs
mov
mov
push
popa
scas
bound
push
sbbb
jnp
xor
push
mov
inc
clc
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
arpl
inc
xchg
lods
jl
cmpsl
jns
jl
mov
test
mov
leave
dec
jecxz
call
outsl
mov
sarl
icebp
jp
fimull
or
pop
adc
inc
aad
add
test
cli
popf
insl
inc
xchg
leave
sbb
std
shrb
movsb
int3
mov
mov
pop
mov
sub
pop
push
xchg
addb
add
dec
pop
sahf
ds
jmp
mov
lea
add
add
xchg
decb
cmp
cmpb
push
bnd
call
xchg
das
iret
cwtl
sbb
mov
mov
jg
mov
jp
aaa
enter
mov
mov
dec
fwait
jbe
aad
dec
lock
cmp
and
in
les
call
lock
insb
mov
jb
inc
in
jg
jp
jg
jae
das
add
rorb
jecxz
sbb
push
mov
add
add
ret
rorb
mov
add
out
popf
cmp
data16
in
pop
mov
and
nop
insl
push
lods
adc
jecxz
mov
push
cwtl
mov
ret
rcll
sbb
xor
inc
jge
and
mov
dec
inc
test
add
jno
decb
mov
in
loop
js
xchg
lret
dec
cwtl
push
lcall
cmp
sbb
fcmovne
inc
cs
inc
xchg
jmp
mov
mov
push
in
cmpsb
aam
adc
loope
sub
push
sub
add
xor
fcoml
cld
popf
sahf
xchg
test
cmp
mov
xchg
xchg
xor
stc
inc
fnstcw
scas
out
mov
out
cmp
inc
mov
mov
push
lret
xor
imul
pop
push
gs
loopne
cwtl
daa
ret
mov
mov
dec
mov
lahf
pop
subl
pop
ficoml
ss
dec
sub
mov
cmpsb
movsb
out
inc
add
cltd
js
sarb
mov
sub
mov
bound
pop
dec
cmp
pop
sbb
rcrl
divb
comiss
mov
xlat
sbb
shrl
stc
push
cmp
dec
adc
cmovg
adc
sub
dec
push
inc
pusha
mov
adc
scas
sbb
xchg
push
lock
bound
mov
loopne
cmp
fiadds
sbb
sbb
xchg
lahf
jl
cmp
pop
and
jb
shrl
jbe
xor
sub
sub
dec
fsubp
jg
sub
xchg
jne
pop
push
jne
clc
cmp
jb
pop
or
dec
sbbb
ss
pop
mov
jp
cs
mov
push
push
push
xchg
mov
dec
in
out
and
inc
pop
mov
lret
pop
lret
jmp
out
push
test
cld
inc
xor
push
mov
enter
je
jg
cmc
int3
mov
pop
pop
lods
das
or
sub
mov
or
shll
repnz
mov
mov
in
in
pusha
das
xchg
cmp
int
sbb
jecxz
fnsave
xchg
pushf
movlps
or
mov
decl
lcall
xor
add
mov
jmp
push
mov
test
and
stos
or
cmpsl
jns
jl
popa
or
pop
lcall
and
repnz
iret
stos
sbb
adc
aas
or
xlat
inc
xorb
and
mov
mov
cmp
or
mov
push
out
gs
std
xor
out
mov
jmp
out
es
xor
rorb
leave
xor
and
leave
bound
inc
adc
ret
call
bound
fmuls
add
push
repz
std
enter
sub
jo
dec
mov
fdiv
fcmove
pop
leave
addr16
pop
aaa
sbb
pop
loope
fs
fisubrs
cltd
aad
mov
sub
lea
lahf
xchg
das
xor
push
rcrb
pop
sub
add
fistps
andb
jns
arpl
imul
cwtl
loop
andb
sbb
idivl
addl
scas
mov
push
loope
dec
mov
cs
fists
jg
mov
sbb
movsl
mov
adc
int
jg
mov
in
xorb
fcomps
add
xor
pop
dec
xchg
sbb
add
add
es
jne
mov
imul
out
jns
scas
negl
int
push
mov
loope
sub
sarl
mov
jp
outsl
mov
or
test
test
filds
imul
cmp
dec
out
xor
shlb
stc
movsb
push
dec
mov
mov
mov
adc
adc
fwait
xchg
pop
vandnps
icebp
leave
cli
scas
fmuls
add
xchg
ja
mov
and
pushf
cltd
int
cs
cmp
mov
enter
push
jg
xchg
xchg
repz
inc
xlat
out
aas
mov
lret
in
cld
xor
stc
lret
mov
mov
sarb
pop
inc
inc
mov
ret
cmp
xchg
gs
mov
adc
iret
xchg
mov
add
outsl
incb
xchg
les
insl
gs
push
mov
jbe
fmull
mov
shlb
push
int3
xor
rcll
xchg
pusha
stos
loope
das
cmp
cmp
stc
lret
mov
arpl
pop
clc
in
dec
mov
clc
ss
or
dec
out
pop
and
jae
xor
add
mov
xchg
and
xchg
out
aad
push
sub
fs
nop
xchg
add
rcrl
push
fwait
gs
pushf
xor
xchg
addr16
ss
add
jle
daa
test
push
pop
push
mov
aaa
mov
nop
and
jg
nop
lret
jns
cmp
jmp
out
add
mov
adc
mov
sbb
pop
push
sub
mov
mov
fwait
xchg
and
insb
push
cmpsb
jle
ja
jnp
lods
mov
xor
push
push
mov
mov
andb
stos
xchg
jle
fwait
push
repnz
jp
sbb
jbe
subb
add
jb
lods
popf
cmp
push
add
incl
or
cltd
les
mov
out
int
and
pop
push
sbb
xor
lock
mov
dec
fsts
imul
dec
sarl
in
arpl
xchg
push
xor
push
push
mov
test
popa
jmp
push
scas
loopne
jno
lock
sub
popa
scas
aam
lahf
faddp
sbb
jle
adc
jne
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
mov
cmpsl
jns
jl
pop
jmp
ja
cmp
leave
xor
clc
push
fisubrs
pop
fnstcw
je
imul
cli
shlb
out
std
outsb
push
dec
scas
outsl
cwtl
loop
sbb
jnp
and
inc
mov
pop
add
subb
push
sub
scas
mov
add
in
pop
movsb
bound
stos
and
pop
into
push
ficompl
int
hlt
stc
shlb
xchg
dec
dec
imul
jns
int
add
das
sub
loopne
lods
dec
dec
jno
fisttpll
pop
push
cmp
cmpsl
es
push
push
jbe
cmp
dec
cmp
sub
repz
xor
aaa
mov
mov
inc
fsubrl
push
mov
push
ljmp
ficompl
lcall
enter
mov
xchg
fsubrl
loop
mov
lods
xchg
pop
push
mov
cli
imul
iret
and
stos
insb
test
adc
in
push
cld
and
iret
xchg
jg
sbbl
mov
cltd
in
pushf
loopne
cmp
push
sub
push
xchg
mov
pop
xchg
jl
lret
push
add
xchg
mov
adc
jnp
mov
add
xchg
inc
shlb
xor
add
inc
rcrl
hlt
call
mov
shr
adc
dec
mov
inc
xor
push
popf
mov
sbb
nop
enter
mov
movsb
add
dec
pop
push
in
dec
sahf
cmp
xor
sub
out
cli
test
mov
sbb
out
into
ret
iret
push
mov
shl
test
int3
dec
stos
pushf
clc
xchg
gs
clc
int
or
test
add
mov
mov
cli
sbb
lcall
popa
xchg
outsb
out
enter
fsave
cmc
in
sub
add
loope
movsl
jl
addr16
f2xm1
mov
push
sbb
lea
out
mov
xor
fucomp
and
cmp
cmpsb
aas
push
mov
fsts
pop
insl
xor
loopne
push
inc
lock
ret
jp
out
rcr
add
nop
xor
out
dec
insl
and
and
jmp
stc
out
jno
sub
orl
inc
pop
mov
or
test
mov
cmp
dec
rorl
data16
xchg
inc
jle
or
rcl
xor
in
leave
mov
aam
aas
jecxz
enter
push
test
jmp
sbb
mov
push
movsl
cwtl
fimuls
pop
inc
popf
mov
pop
shlb
repz
sti
sub
adc
push
sbb
jl
movsb
test
xchg
stc
mov
push
cld
out
mov
lret
sbb
mov
test
or
daa
orl
mul
in
insl
pop
sahf
sub
jmp
out
test
mov
dec
aam
inc
pusha
add
imul
and
cwtl
loop
inc
or
mov
shr
pop
inc
ss
cmpsb
ret
dec
cmp
push
xchg
nop
xor
shrb
daa
inc
mov
mov
adc
jbe
push
aad
jne
inc
leave
xchg
sti
push
test
cmpsl
push
cmp
fdivs
fwait
add
adc
dec
inc
sub
push
push
int
pop
call
scas
sarl
mov
inc
inc
jge
faddl
pop
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
lods
outsl
pop
jbe
inc
sbb
js
inc
pop
fsubrl
outsl
cmpsl
iret
inc
dec
iret
and
sub
mov
adc
and
and
mov
xchg
test
cmp
imul
cmp
in
mov
insb
pop
xchg
and
lret
sti
pop
arpl
jno
push
cmp
cld
or
pop
std
ret
shll
dec
loopne
adc
rcrb
inc
pop
dec
rcr
adc
mov
je
cmpsb
out
mov
pop
cmp
rcrl
jecxz
int
pushf
fistpll
cmp
call
pop
cmp
outsl
cli
push
cli
dec
sar
ss
insl
mov
inc
pop
arpl
cmp
mov
cld
scas
mov
addr16
ret
out
dec
sbb
nop
mov
xchg
xchg
in
aad
lahf
pop
mov
inc
jns
jmp
push
test
cmpsl
mov
popa
stc
cmpsl
lret
icebp
mov
outsl
loope
mov
xchg
adc
int3
icebp
and
mov
pop
movsb
xchg
in
popf
cld
inc
or
mov
push
dec
divl
aam
mov
xor
xor
xchg
inc
lcall
or
jns
push
push
push
nop
int3
jg
arpl
mov
pop
sub
ss
ja
push
adc
mov
mov
xor
dec
outsl
push
jno
aad
pop
test
xor
mov
pop
xchg
inc
jbe
sub
mov
jns
sub
daa
or
es
jae
fiaddl
lcall
leave
add
inc
ret
push
outsb
dec
imul
js
adc
mov
int3
imul
jne
push
insl
mov
test
hlt
sbb
jno
and
lods
dec
lret
jl
int
pop
sbb
testb
push
mov
add
lcall
cmpsb
orb
arpl
dec
dec
pop
std
sbb
lea
enter
mov
aaa
pop
iret
jno
out
mov
imul
test
stos
xor
data16
popf
jnp
int
sahf
sbb
cmp
ss
jns
jl
sub
fcomps
ret
popa
rcll
cmp
xor
mov
in
adc
xchg
mov
cmp
cmp
idivl
in
mov
push
lret
adc
ror
jae
add
lret
fisttps
into
or
add
andl
xor
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
out
in
hlt
or
jle
jl
xchg
xchg
mov
adc
fimull
xlat
adcb
fcoms
cmp
or
lds
dec
lcall
sbb
pop
add
in
in
lret
mov
scas
or
lahf
push
mov
sbb
mov
sub
incb
cwtl
hlt
dec
in
mov
enter
sahf
pop
jo
push
sbb
inc
lahf
mov
jge
sbb
loop
das
sar
stc
icebp
jbe
mov
push
sub
imul
mov
mov
rclb
or
daa
pop
das
sbb
mov
out
and
clc
mov
push
sbb
and
js
add
and
test
cli
push
jg
dec
push
in
and
lcall
imul
sbb
or
pop
push
insb
sti
sti
mov
mov
add
cmp
in
bound
gs
push
movsl
sbb
ljmp
call
adc
push
mov
mov
out
cwtl
hlt
jge
fistpl
inc
pop
inc
and
icebp
sbb
xor
jle
adc
out
push
mov
test
hlt
lods
div
cmpsb
popa
enter
call
push
mov
fnstenv
xorb
dec
and
mov
pop
ljmp
sub
nop
xchg
push
push
mov
mov
mov
sahf
or
out
xor
push
out
call
inc
scas
xor
fyl2xp1
xchg
xchg
dec
test
mov
add
cwtl
jo
and
movsl
lcall
imul
mov
cmp
ja
mov
sahf
idivl
daa
mov
jl
push
or
sbb
out
pusha
aaa
xchg
jmp
xchg
cltd
imul
inc
sbb
js
mov
sti
orl
jnp
pop
and
xor
fimuls
mov
call
lahf
nop
mov
addr16
fidivs
in
or
pusha
popa
adc
fisttpl
lret
sbb
pop
pushf
mov
mov
rcrb
inc
nop
jp
jo
mov
inc
cs
and
mov
push
scas
push
inc
movsl
push
dec
add
add
popa
mov
xchg
int3
arpl
repnz
dec
scas
inc
add
test
mov
ljmp
mov
mov
mov
pop
adc
inc
pop
dec
fistps
mov
pop
xor
cmp
inc
or
add
mov
mov
jmp
in
jae
jge
bound
cld
loop
jecxz
mov
jl
or
xchg
test
lock
jne
xor
and
js
daa
dec
xchg
ljmp
ret
add
or
xchg
or
and
push
jmp
fs
jmp
mov
cmp
pslld
mov
insb
lahf
gs
cmp
sbb
push
mov
imul
inc
lahf
ret
dec
cmpsl
sbb
fs
cmpl
fldl
push
xor
call
mov
sub
push
scas
in
dec
cmp
xor
dec
std
nop
sub
xchg
cmp
or
mov
sbb
nop
and
addb
xor
ret
test
aaa
bound
dec
bound
sar
fimull
dec
xor
dec
fidivs
jge
mov
jecxz
je
xor
mov
mov
mov
mov
xchg
cmp
cmpsl
pop
jae
inc
or
fdivrp
fimull
cmc
mov
push
das
nop
mov
add
xor
push
mov
jl
xorl
aas
or
clc
mov
xor
cmp
sbb
pushf
sub
or
cmc
jl
xchg
pop
xor
dec
frndint
or
movl
out
cwtl
stos
cltd
into
mov
clc
and
xchg
xor
out
loope
jmp
movsl
inc
mov
std
pop
ret
adc
push
lcall
jecxz
adc
inc
jno
sahf
push
test
push
pop
mov
mov
xor
test
cli
ret
dec
mov
xchg
add
and
mov
mov
sahf
nop
dec
push
and
jae
adc
add
movsl
repnz
push
mov
cmc
sub
xor
fstpl
sbb
dec
sbb
xchg
or
push
scas
jns
in
cld
ss
xor
std
leave
cmp
and
out
sbb
add
sbb
scas
xchg
shlb
mov
add
jb
leave
imul
xor
inc
popa
adc
push
fwait
aas
xor
fiaddl
pop
js
aaa
or
icebp
adc
popf
fcmovnbe
cmp
nop
xchg
cmpl
mov
arpl
mov
ja
add
and
push
inc
pop
lahf
xchg
in
sahf
jp
fsubr
pop
xor
cmp
fsubs
pop
mov
shrb
push
out
mov
shl
jle
xchg
push
jl
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
jg
jecxz
cltd
mov
jl
out
loope
dec
repz
sbb
test
add
imul
sbb
imul
push
sti
cmp
jo
insl
outsb
hlt
iret
insl
pop
stc
mov
mov
adc
or
stc
test
jmp
mov
rclb
cli
fwait
inc
pop
loope
sbb
inc
cmpsl
enter
clc
mov
and
mov
push
div
das
sbb
int3
jmp
pop
fisttps
movsl
jo
push
pop
sub
jb
cld
pop
dec
xor
push
mov
mov
stos
jecxz
jmp
imul
xchg
xchg
add
aam
je
mov
xchg
mov
or
js
fidivs
cmp
sub
inc
push
mov
push
push
shrb
push
bound
ret
pop
push
mov
dec
ljmp
outsl
xchg
test
pop
out
adc
add
psadbw
cld
ljmp
cmp
inc
cld
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
jbe
js
mov
jl
dec
lahf
lret
int3
cmpsb
fldcw
mov
lahf
cld
xor
jl
cltd
and
lock
jecxz
int3
inc
push
stos
or
cmp
insl
aaa
sbb
adc
or
jmp
jns
adc
iret
repz
leave
xor
pop
pop
addr16
imul
pop
jns
scas
push
test
or
ret
jmp
arpl
das
push
pop
adc
mov
jb
daa
mov
sub
ret
or
ss
loope
popf
enter
sti
cmp
jmp
push
or
mov
out
add
scas
mov
xor
arpl
cmp
lea
push
push
inc
ret
out
push
sub
sub
sbb
cs
xchg
call
mov
fbstp
dec
xchg
and
mov
int
call
mov
aad
mov
xchg
stc
mov
stos
jecxz
testb
cmc
aam
sti
jmp
in
push
pusha
xor
dec
xor
add
mov
add
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
mov
pop
mov
jl
pop
xchg
dec
jmp
jnp
daa
ficoml
aad
mov
insb
pop
scas
aam
jae
loope
cmpsb
pop
pop
in
shlb
jle
stos
mov
cli
daa
jbe
vhaddps
aad
inc
ret
mov
into
imul
fldt
xorb
mov
stos
cmpsb
repnz
imul
cmp
mov
jmp
data16
bound
xor
stos
xor
mov
mov
xchg
stos
jne
sub
and
jp
nop
fisttpl
mov
push
sbb
enter
push
add
lods
xchg
cmp
mov
xchg
xlat
repnz
mov
fiaddl
out
js
popa
mov
push
lea
pop
popa
outsb
jmp
outsb
mov
pop
call
sbb
fst
and
jmp
outsl
mov
mov
dec
add
mov
add
mov
pop
jnp
mov
ret
jns
xor
repnz
bnd
data16
divb
aas
add
int3
ja
test
ja
orl
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
aam
fnsave
jl
adc
jl
mov
push
bound
sub
mov
rcl
mov
dec
cmp
inc
adc
scas
add
add
arpl
popf
cmp
pushf
xchg
or
lods
jg
fidivrl
lea
aaa
mov
sbb
jo
adc
pop
and
pop
xor
addr16
ret
fadds
cmp
ds
or
movsb
push
stc
nop
inc
adc
add
cld
js
subb
loope
push
out
das
test
or
repz
hlt
lret
sbb
dec
xlat
mov
jp
push
mov
xorb
je
or
mov
bound
sbb
xor
or
xchg
stos
mov
push
mov
and
sbb
jp
push
push
jp
push
push
shl
inc
push
inc
adc
das
push
jle
mov
enter
pop
subl
lock
xlat
pushf
inc
and
inc
cmpsl
pop
push
xor
sub
pop
fdivrl
lret
cmp
loop
inc
or
in
rorb
mov
add
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fadd
stc
xor
inc
jl
adc
jl
leave
sbb
mov
xchg
cmp
push
dec
cli
in
pop
cmc
pushf
bound
add
call
jle
std
call
push
mov
out
or
adc
xchg
sub
ja
dec
xchg
or
lods
or
flds
ss
lcall
push
pop
xchg
stos
adcb
shl
jno
pop
les
out
mov
mov
lods
sub
adc
push
jp
lret
dec
xor
lea
push
or
test
inc
xchg
push
mov
or
xchg
ljmp
ss
outsl
mov
cmp
in
popa
jg
adc
gs
mov
out
pop
ret
push
pusha
out
int3
push
cli
or
dec
mov
icebp
pop
out
lock
insb
push
and
fldenv
ret
leave
sub
push
das
test
call
xor
ret
jno
lret
ret
sarb
sub
rolb
out
dec
rol
mov
shll
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
push
jae
lea
inc
jl
adc
jl
imul
loop
jmp
imul
dec
mov
pop
sbb
jmp
loop
iret
icebp
fistpll
cltd
mov
and
mov
sbbb
mov
call
pop
push
fimuls
fisttps
xchg
icebp
add
loop
scas
add
fdivrs
cwtl
adc
sbb
pusha
jb
add
ret
sub
mov
sbb
add
insl
sahf
add
jmp
or
fstpl
mov
sub
jnp
shlb
enter
xor
mov
inc
mov
lret
jle
pop
enter
jp
adc
adc
hlt
sti
ss
pop
or
xor
add
jns
in
and
call
lock
out
pusha
jo
jmp
nop
lcall
aad
xlat
sub
outsw
andl
mov
sbb
sub
hlt
iret
out
out
jne
adc
lock
call
add
jo
std
jae
in
xorb
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
mov
adc
jl
repnz
lods
inc
das
jne
js
loope
dec
adc
mov
jno
mov
adc
out
xchg
sbb
adc
inc
fwait
xlat
mov
adc
shl
xorl
int3
add
jo
jp
psrlw
pop
mov
add
ficompl
scas
mov
rolb
cwtl
insb
xor
xlat
popa
cwtl
pop
pusha
je
sub
sahf
rorb
jb
cmp
enter
orb
mov
ss
gs
push
push
in
pop
mov
rcl
adc
xchg
lcall
out
or
shll
xor
xor
adc
sub
stc
jo
sbb
cmp
sub
or
pop
push
lahf
mov
jno
cld
into
dec
lods
je
mov
push
adc
popf
sub
pop
sbb
movsb
mov
jno
dec
adc
enter
xchg
mov
inc
jle
cltd
jbe
addr16
sub
popa
add
mov
mov
add
imul
mov
xor
mov
jmp
pop
shlb
mov
cmp
or
sbb
jmp
jl
adc
jl
in
filds
mov
scas
aad
add
jl
fs
andl
xchg
aas
inc
repz
sub
mov
xchg
push
push
or
imul
addl
mov
push
scas
dec
xchg
pop
aam
inc
mov
daa
out
cwtl
cmpsb
mov
ret
push
fsub
jle
inc
push
pop
and
jp
arpl
mov
jne
adc
outsb
mov
pop
dec
push
jb
dec
cmp
adc
xchg
fistps
push
sbb
out
adc
out
shlb
jno
mov
pushf
add
imul
xlat
and
and
add
dec
xchg
pusha
lods
fistpl
adc
mov
push
and
jae
pop
push
jge
cmpsl
aaa
das
xor
add
int
push
adc
mov
sbb
sub
jo
push
inc
hlt
and
adc
icebp
push
fnstcw
int3
mov
lea
dec
dec
mov
or
cs
dec
call
jb
add
enter
sti
decl
add
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
stos
cmpsl
xor
mov
jl
jg
jl
adc
sub
cmp
int
xor
test
cli
popf
out
cli
popf
insb
stos
pushf
lret
jo
pop
adc
add
jp
loope
and
xchg
xchg
mov
roll
inc
and
push
jnp
mov
jmp
enter
mov
and
gs
xor
or
cmp
movsl
add
jl
dec
xchg
pushl
sbb
sbb
sbbb
push
sarl
das
xchg
mov
iret
stc
or
sti
int
dec
shlb
mov
push
shll
pop
or
sbbl
out
inc
inc
sbb
js
imul
dec
mov
out
xchg
out
xchg
insb
xchg
and
sub
je
dec
pop
or
notb
fstl
or
arpl
jne
cmp
push
cmp
ja
lcall
bound
rcrb
lods
mov
pop
arpl
jmp
mov
add
call
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
call
jl
jg
jl
fsubl
mov
ret
mov
loopne
das
sbb
stos
rclb
inc
stc
jle
stos
jne
lret
mov
jg
or
test
pop
push
and
pop
hlt
push
bnd
xor
push
sub
lcall
pop
insl
sub
into
pop
mov
jo
pop
test
jecxz
mov
bound
int
fldcw
sub
mov
sub
jp
pop
scas
mov
cmc
and
push
cmp
in
mov
adc
or
repnz
fnstcw
dec
cs
xlat
ss
scas
dec
movsb
movaps
mov
pushf
mov
mov
mov
popa
inc
xchg
fwait
repz
mov
mov
or
nop
push
jp
sub
or
and
cltd
xchg
int
das
push
pop
mov
loopne
cltd
sub
adc
push
inc
xchg
mov
and
xor
shrb
jecxz
mov
insl
jg
das
mov
les
fwait
int3
mov
cmc
hlt
sarl
add
cli
cmp
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
je
push
adc
jl
adc
jl
fadds
and
jmp
mov
or
mov
movsl
cmp
mov
pop
or
push
mov
mov
insl
cmp
out
pop
mov
adc
mov
addr16
ds
in
adc
mov
add
andl
shrb
js
cmc
xor
xor
out
aas
mov
fstpt
data16
and
imul
mov
mov
sub
mov
sti
mov
inc
out
push
lret
rorl
ret
and
movsb
dec
stc
mov
mov
out
dec
cmp
xchg
inc
xor
pop
cmp
cmpsb
jp
push
pop
mov
mov
dec
out
stc
jp
inc
push
test
jnp
ret
data16
mov
imul
push
int
jns
insl
insb
push
lds
add
scas
push
jne
mov
dec
repz
call
jl
xchg
jbe
shll
jne
xchg
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
cmp
in
into
add
pop
add
add
xchg
dec
movsb
mov
jb
pop
adc
fimull
jb
mov
bound
xchg
sub
sbb
sbb
mov
pop
movsb
jne
cwtl
notl
out
xchg
mov
bound
add
dec
imul
mov
jns
mov
adc
les
sbb
add
dec
add
fs
lret
mov
push
cmp
mov
out
pop
xor
xchg
movsl
mov
mov
and
int
push
out
ljmp
cmp
ret
iret
dec
jae
jno
inc
mov
cwtl
pop
jne
cmpsl
mov
mov
cmpsb
iret
adc
mov
dec
pop
inc
pop
in
mov
iret
fwait
ljmp
sbb
or
pushf
push
xor
mov
sub
mov
scas
nop
dec
pushf
lret
dec
mov
lods
and
add
push
pusha
in
jle
mov
cmp
mov
iret
add
pop
add
add
mov
adc
into
rorl
stos
arpl
rcr
cmp
insb
ljmp
xor
adc
mov
loope
outsl
xor
xor
and
mov
loopne
sub
addr16
testb
loopne
loop
or
cmp
push
data16
repz
fcoml
mov
mov
in
pusha
ret
mov
mov
out
jno
pop
sub
out
pop
aam
imul
sub
jae
ret
cwtl
mov
jge
shll
pop
xchg
call
add
dec
xchg
ret
fwait
push
sub
mov
and
push
or
sub
das
testl
in
push
fwait
sub
jb
lcall
int
addr16
das
bound
jecxz
jmp
lcall
and
orl
xor
sbb
pop
dec
sarb
sbb
add
adc
mov
push
add
inc
sti
rolb
add
add
add
lds
push
cmp
and
aam
dec
push
loop
dec
out
or
mov
dec
inc
sbb
int3
ja
popa
fmull
and
mov
aas
clc
adc
jns
outsl
fstpl
adc
xchg
test
or
mov
outsb
ret
add
cltd
jp
mov
rorl
ret
sbb
aad
in
stos
mov
bswap
xor
sub
push
aaa
mov
ljmp
pop
lahf
incb
arpl
adc
pop
sbb
pop
add
cmp
ret
dec
jne
pop
bound
call
lret
loope
popf
cli
sbb
clc
ret
jns
sahf
sub
divl
fnstsw
subl
sub
rorb
mov
dec
xchg
push
jb
in
gs
cmpps
push
sub
inc
hlt
xchg
sbb
and
cmp
pop
pop
testb
sbb
add
subl
idivb
mov
add
add
pop
add
add
add
fs
test
sbb
popf
and
dec
jae
mov
imul
aam
sarb
xchg
movsb
mov
mov
mov
fiaddl
jge
ret
sahf
fildll
xor
xlat
test
fldt
mov
jl
pop
fiadds
pushf
rcll
xor
mov
addb
pop
mov
loope
scas
mov
adc
push
inc
ret
fwait
pop
ficoms
xor
mov
aas
rcl
fdivrl
cmpsb
fidivrl
jno
fnstcw
xchg
mov
cmp
outsl
pusha
and
or
xlat
incb
mov
cwtl
aas
nop
inc
ja
in
jbe
adc
cmp
and
mov
repnz
fistps
cmp
dec
cmpl
cld
xor
mov
xchg
mov
and
repnz
mov
add
ljmp
pop
jae
or
ss
pop
xchg
mov
roll
add
add
add
xchg
roll
mov
lock
xor
cltd
mov
push
fistpll
inc
out
out
adc
scas
mov
stos
mov
push
pop
cmp
aad
out
cmp
stos
push
in
inc
pop
cmpsb
cmp
dec
repz
dec
cmc
scas
xorb
sub
inc
mov
iret
int3
dec
arpl
js
ret
sbb
fnstcw
sub
mov
xor
cmp
xor
xor
or
ljmp
mov
xchg
fwait
aaa
mov
dec
sbb
dec
sub
and
lods
scas
push
or
dec
ljmp
cmc
jge
xchg
ror
jecxz
std
ds
mov
cmp
adc
lds
pop
pop
or
in
fwait
sbb
lods
popaw
adc
cmc
pop
sub
sbb
out
test
nop
cmp
nop
mov
push
cmp
and
mov
test
add
cmc
insl
cmc
out
lcall
mov
std
imul
add
pop
add
add
ret
pop
out
sbb
cmp
dec
lcall
inc
frstor
das
and
sub
pusha
sahf
push
jmp
fcmovb
add
xchg
push
dec
xor
mov
sbb
insb
into
or
dec
xchg
ss
mov
cmpsl
mov
push
sub
jecxz
popw
inc
cmp
incl
or
cmpsl
and
jne
mov
pop
push
pop
xor
adc
mov
and
clc
add
cltd
jae
lods
push
fisubrs
xchg
popf
pop
inc
add
jno
mov
push
cwtl
mov
inc
popa
inc
lret
loope
add
mov
adc
fucom
pop
add
jg
mov
add
cmp
popa
jecxz
int3
sub
xchg
pop
add
jmp
loopne
mov
mov
adc
and
dec
popl
jle
add
outsl
jle
aam
aam
sub
daa
pop
pop
aad
add
add
add
in
pop
lcall
pop
lods
cmpsb
stc
lods
jmp
fs
sbb
cmp
or
mov
lock
sti
fdiv
dec
xor
aam
popa
rclb
psubd
push
out
add
cli
leave
arpl
lcall
testl
je
stos
shr
jl
std
cmp
pop
call
cmp
out
mov
xor
xchg
xchg
aas
xchg
pop
aad
int
stc
cmp
sbb
ret
inc
cmpsl
aas
in
and
lret
cmp
std
xchg
mov
iret
sbb
push
out
push
mov
pop
lods
fs
add
jp
repnz
and
and
faddl
push
push
stos
mov
add
adc
pshufw
cmp
icebp
push
push
movsl
sub
and
lods
jnp
ret
enter
xchg
mov
mov
sub
jne
mov
fcoml
dec
pop
or
shl
out
fs
ss
sub
add
add
jle
and
scas
sti
jle
sbb
imul
pop
add
add
and
mov
fisttpl
test
mov
or
mov
out
push
jae
bnd
push
lea
cmp
movsl
xchg
ret
or
add
fildl
mov
pop
clc
and
cmpl
push
mov
mov
dec
repnz
lret
fs
push
add
pop
imul
pop
scas
push
push
adcb
push
movsb
adc
into
inc
pop
das
jno
and
mov
frstor
mov
mov
xorl
mov
daa
or
jecxz
cli
ljmp
pop
lahf
pop
out
mov
or
std
rclb
adcl
sbb
jbe
xchg
sbb
and
sti
in
add
pop
cmpsl
mov
fwait
in
jg
jne
jo
or
xchg
scas
int
mov
mov
add
dec
sub
add
add
add
negl
sbb
adc
and
add
add
pop
pop
popa
adc
gs
push
mov
mov
scas
out
xchg
adc
inc
inc
xor
mov
das
inc
push
cmp
mov
mov
mov
mov
bsr
xchg
imul
mov
and
fdiv
idivb
shrb
out
mov
mov
rorb
mov
scas
xor
push
cmp
push
out
lret
lock
mov
pop
push
in
xchg
lret
add
add
ret
test
sti
addr16
jp
cmp
sub
movsb
ss
sbb
in
lds
out
aad
pop
xchg
pusha
test
jo
repz
mov
in
xchg
cld
pop
and
scas
icebp
sub
inc
call
push
or
and
dec
push
ret
and
out
insl
xchg
and
lret
add
pop
popa
or
out
pop
inc
popf
pop
stos
out
add
push
jl
jle
insb
inc
xor
push
sub
icebp
pop
sub
add
pop
add
add
inc
mov
cmp
xchg
out
xor
loop
xor
push
add
frstor
xchg
and
negb
push
jb
rclb
xchg
call
lea
or
mov
pusha
xchg
loop
and
xchg
pusha
imul
adc
mov
pushf
xor
fisubrs
outsl
mov
pushf
jge
xchg
loop
mov
ret
es
jns
and
or
icebp
bound
outsl
adcb
push
out
and
js
pop
add
push
daa
icebp
inc
sub
xor
arpl
jne
xor
shlb
cmp
movsb
xchg
and
xor
mov
xlat
xchg
mov
rcrb
push
dec
lods
add
popa
mov
aad
xchg
push
loop
cmp
mov
and
daa
sbb
add
jno
pop
xchg
aas
xor
ja
fstl
add
fwait
mov
sbb
cmp
add
add
add
cmp
bound
outsb
sub
mov
into
pop
adcl
outsb
add
pop
ficoml
mov
ljmp
xchg
pop
adc
pop
in
ret
mov
fnsave
daa
das
xchg
sub
jns
in
fs
xor
xchg
mov
sti
push
jecxz
mov
fidivl
imul
mov
dec
repnz
sbb
insl
leave
pusha
cwtl
lds
xchg
cwtl
mov
jmp
inc
repnz
test
test
lods
enter
mov
jo
pop
hlt
clc
in
lods
je
movsb
shll
dec
push
stos
les
scas
mulb
cmc
aaa
fsubl
testl
pop
push
push
mov
mov
inc
pop
xchg
pop
pop
sbb
loop
mov
sbb
push
or
orl
cmp
inc
adc
add
data16
jne
mov
xchg
xchg
ds
add
add
add
cmp
mov
arpl
iret
gs
pop
out
sbb
jg
cmpsb
frndint
mov
add
mov
inc
mov
fdivrs
push
mov
adc
test
push
lock
int3
dec
ss
mov
mov
dec
cmp
inc
add
lods
and
shl
xchg
push
out
push
dec
lcall
lahf
arpl
es
rorl
xor
pop
mov
roll
jbe
aas
jns
dec
pop
mov
std
and
ss
daa
loopne
sbb
mov
sub
xlat
frstor
adc
dec
imul
mov
imul
pushf
imul
adcb
out
inc
xor
in
jb
loope
arpl
ja
fbstp
cmp
or
jnp
notl
loop
mov
aad
int3
jns
sahf
ficomps
mov
dec
xchg
add
push
mov
fstpt
fld
insl
jmp
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
xor
fnstenv
insl
xor
fistps
lahf
inc
jmp
cltd
sbb
int
and
out
xor
aad
stos
push
dec
dec
ret
dec
or
pop
dec
mov
les
movsb
push
rcll
mov
leave
out
mov
xor
push
push
inc
aaa
jle
cmp
add
cmp
mov
xor
call
mov
stos
add
clc
in
call
jbe
inc
jg
and
testl
mov
gs
ljmp
addl
pop
adcb
imul
sub
or
fdivp
cmpsl
mov
pop
orb
sbb
out
imul
push
pop
adc
bound
pop
lods
shrb
arpl
scas
call
into
fists
clc
ret
xchg
mov
roll
xchg
fnsave
or
imul
fldl
out
jae
sub
pop
sarl
lods
std
mov
bound
add
add
add
or
jg
push
xchg
iret
mov
xor
lret
cld
mov
xchg
mov
out
mov
lcall
or
mov
mov
inc
mov
and
leave
push
cmp
adcl
fbld
sbb
add
mov
xor
pop
jle
cmc
icebp
test
pop
scas
out
orb
popa
call
out
xor
lahf
stc
lods
xor
push
shlb
sub
mov
sti
ficompl
fildll
mov
mov
inc
mov
insb
lock
or
daa
mov
sbbb
mov
push
enter
es
xlat
fmul
pop
loopne
xchg
aas
pop
xchg
or
test
testl
cmc
push
add
sarb
jne
pop
hlt
ret
mov
inc
pop
and
fmuls
loope
jp
ret
cmp
add
add
repz
std
repz
and
cmp
add
pop
add
add
enter
add
sbb
mov
add
inc
insl
es
lret
test
sub
jnp
push
adc
mov
xchg
nop
jno
fldln2
std
add
in
repnz
add
fldt
lods
mov
outsl
std
xor
in
cmp
pop
fisttpll
scas
xor
std
push
insl
pop
pop
gs
add
fwait
movl
jp
bound
or
jnp
push
stos
aad
popf
jge
inc
je
movsl
and
pusha
ss
xchg
cmpb
daa
mov
out
lcall
data16
mov
filds
shrl
add
aaa
inc
adc
cld
xchg
out
xchg
lods
mov
in
xor
or
sub
test
aam
or
and
dec
stos
push
loope
fidivrl
pop
mov
pop
push
pop
aad
jg
xlat
out
adc
lret
add
lock
cmp
cmp
pop
adc
add
pop
add
add
pop
push
subb
sbb
xchg
test
and
in
iret
daa
mov
push
into
std
pop
mov
pop
mov
push
mov
push
mov
push
iret
into
push
cld
leave
leave
enter
gs
and
mov
cltd
xor
popf
mov
ljmp
push
sbb
push
xchg
adc
or
mov
and
inc
mov
pushf
mov
adc
lcall
gs
sahf
and
mov
outsb
add
icebp
adc
and
push
sub
pushf
add
icebp
bnd
push
adc
rolb
outsl
fdivrl
xor
mov
sub
xchg
xor
inc
insl
and
ds
mov
or
push
push
sub
xchg
xor
xchg
out
xchg
sub
out
jae
cmpsb
pushf
scas
das
or
mov
dec
jmp
jg
mov
lods
add
mov
mov
add
pop
js
filds
add
add
add
aaa
in
loope
fwait
inc
jle
inc
jno
and
push
inc
fsubl
icebp
inc
jo
xchg
jns
repnz
shl
dec
push
mov
testb
les
test
in
mov
or
in
mov
sti
dec
mov
or
mov
aas
inc
fdiv
repnz
sbb
or
lret
sbb
adc
xor
push
sub
flds
popa
adcb
ret
adc
cltd
sub
adc
xlat
lods
or
adc
mov
mov
and
jecxz
mov
add
in
dec
aam
sbb
dec
ret
xchg
xchg
cwtl
fs
push
mov
push
push
adc
add
fbld
scas
mov
and
mov
movb
cmp
and
xchg
dec
xlat
cs
sub
mov
mov
jl
jecxz
and
clc
sahf
repnz
push
outsl
testb
mov
inc
shrl
add
xchg
in
mov
incl
mov
add
pop
add
add
pop
fsubrp
and
ja
mov
xchg
lahf
bound
rcl
mov
mov
addr16
lahf
and
out
std
sti
jnp
test
jmp
out
stc
inc
xchg
or
push
push
jmp
and
jmp
shll
cmp
and
mov
add
bound
or
ror
lret
cltd
jo
jg
pop
repz
mov
sbb
cwtl
sub
push
test
in
popf
int
sbb
mov
loopne
icebp
inc
scas
xchg
mov
les
popf
push
loop
mov
or
push
imul
mov
sub
shrl
xchg
dec
sbb
icebp
lahf
adc
jge
jae
push
pushf
outsb
add
lcall
clc
push
jne
dec
inc
xor
out
and
lcall
xlat
imul
into
cmpl
movsl
xchg
xchg
cli
push
sbb
sub
imul
scas
ret
mov
xchg
xchg
add
push
add
sub
in
negl
es
int
cmc
push
imul
add
add
add
xchg
lods
inc
inc
or
adc
les
aas
inc
jl
leave
imul
adc
ljmp
dec
sbb
iret
cmp
push
aas
mov
ret
std
add
dec
sbb
test
lcall
imul
imull
xchg
rcrb
inc
in
xchg
cmp
stos
fucompp
mov
lea
inc
adc
mov
inc
add
dec
mov
mov
les
sub
xor
dec
push
jmp
loopne
add
movsl
mov
xlat
roll
xor
scas
cwtl
push
and
xor
push
std
xorb
out
dec
pop
loopne
aam
out
popf
jl
sub
pusha
xchg
adc
scas
rorb
call
push
pop
pop
adc
add
dec
jmp
roll
ret
lea
mov
clc
mov
mov
scas
mov
add
add
mov
jge
nop
mov
jb
add
pop
add
add
stc
ja
jmp
pop
stos
xchg
ljmp
mov
mov
daa
cmp
ljmp
mov
ret
pop
sbbl
jge
rcrb
push
xchg
add
movsl
sbb
cwtl
testl
add
sbb
xchg
orl
cmp
test
and
insl
int
enter
out
in
fidivrs
int3
out
pusha
std
sub
outsl
rclb
inc
outsl
test
repnz
dec
hlt
iret
movsl
push
je,pn
xor
call
loope
call
daa
hlt
jbe
pop
outsl
cwtl
or
pop
sbb
icebp
dec
mov
adc
push
cmp
clc
stos
nopl
jmp
arpl
fsubs
ror
mov
push
es
and
mov
ret
or
subb
jp
test
push
cs
and
fs
and
roll
cmp
mov
push
jno
mov
inc
jns
add
pop
add
add
mov
inc
daa
outsl
movsl
ds
cmp
cmpb
jne
and
add
or
push
shl
inc
add
cmp
inc
cli
cmp
pop
repz
pop
jge
mov
pop
clc
dec
sbb
adc
cwtl
ret
adc
xchg
mov
in
clc
addr16
insl
dec
xor
out
add
pop
inc
sbb
insl
mov
rcll
imul
aad
shl
jle
xor
cltd
add
jb
push
push
xchg
test
sbb
add
mov
ja
popf
out
or
add
pop
xor
mov
mov
add
outsl
xor
sub
repz
jns
jp
adc
fwait
loope
movsb
lods
sbbb
gs
sbb
pop
repz
pusha
sub
jp
xor
pushf
xchg
cmp
lret
mov
push
in
lcall
pop
push
jp
test
das
add
arpl
sub
add
repnz
add
pop
call
mov
jo
and
add
add
add
lcall
shrb
jnp
sub
mov
out
popf
mov
out
and
push
mov
cwtl
jl
lods
mov
lods
mov
movsl
xor
rorl
jmp
test
mov
and
push
xchg
ficompl
repnz
adc
mov
cmpsb
mov
into
shl
dec
dec
dec
aas
or
cmp
movsb
mov
mov
mov
jns
jp
out
sub
cmpb
repz
pop
mov
in
xor
inc
lods
and
adc
mov
test
sti
jl
mov
icebp
add
in
std
mul
out
shl
loopne
push
dec
mov
xchg
push
dec
jp
iret
cmc
sbb
insb
sub
xchg
insb
aaa
sub
js
jbe
jne
iret
adc
cmp
and
pop
mov
mov
icebp
testl
add
add
mov
push
decl
mov
in
add
add
add
cmp
xchg
arpl
sub
or
jno
mov
mov
xchg
sub
mov
rol
rcll
into
xchg
adc
inc
in
inc
jnp
dec
test
jp
jl
mov
jnp
mov
clc
clc
dec
jnp
adc
aad
inc
adc
cmp
mov
sub
push
out
or
cmp
lock
dec
movsl
adc
clc
test
mov
aas
push
or
imul
out
in
dec
sub
and
or
inc
pop
mov
mov
xchg
cwtl
jmp
test
sahf
roll
arpl
jae
mov
daa
inc
push
sahf
jmp
cmp
pop
sub
inc
negl
mov
sbb
into
ret
iret
cmp
mov
enter
push
push
fsubrs
mov
fbld
iret
shl
cmp
xchg
imul
and
cmp
sti
fsubp
jmp
fwait
xchg
adc
add
pop
add
add
jl
lcall
js
jl
xor
pop
incl
icebp
or
push
cli
cmp
lret
fistpll
loopne
int
test
cwtl
fwait
stos
xor
aad
add
aas
outsl
mov
ja
dec
mov
or
call
or
dec
es
mov
adc
cmpsl
pop
add
loopne
xor
icebp
push
sbb
and
pop
fbld
mov
lock
xlat
fisttps
fwait
enter
in
aaa
rcrb
or
lock
xchg
cli
es
jno
mov
aad
fcmovb
hlt
mov
add
frstor
out
inc
js
and
enter
push
lds
dec
icebp
sti
push
test
dec
cmc
jge
out
lea
and
pop
mov
into
rclb
sti
arpl
aam
and
xchg
sarl
add
outsb
xor
test
notl
pop
add
add
out
jl
iret
negb
jmp
dec
ja
daa
sub
testl
adc
mov
xchg
andl
pop
faddl
test
addb
and
js
cltd
jg
fldlg2
emms
xor
add
movsb
inc
dec
jmp
jl
out
sbb
aas
test
scas
out
les
xchg
test
ds
adc
rep
push
out
push
rcl
sbb
lds
call
popa
lock
shlb
cmpsl
jg
enter
sub
orl
aaa
and
sarb
repnz
into
fistps
movsb
sbb
lods
ret
mov
inc
sub
mov
add
pop
rol
cmp
jne
ret
aas
fiadds
mov
push
jo
and
pop
aad
mov
cs
lea
cli
mov
int3
bound
aas
mov
jnp
loopne
inc
jg
test
fstpt
stc
adc
repz
ror
lock
jnp
xchg
cmp
pushf
call
add
xrelease
sub
pop
add
xchg
scas
pop
jmp
mov
mov
cs
push
mov
in
ljmp
adc
pop
stos
repz
popf
int3
mov
in
stos
mov
ficoms
rcr
sub
nop
ljmp
popf
mov
add
arpl
int
mov
cmp
sbb
fisubrs
popf
xor
test
adc
mov
adc
sbbb
mov
xchg
mov
int
and
mov
mov
js
lea
mov
mov
ret
jge
subl
sub
push
pop
in
pop
pop
icebp
xchg
ds
hlt
ja
lea
daa
sbb
mov
wbinvd
std
pop
pushf
aam
xor
xchg
push
lea
and
mov
sbb
in
and
loope
add
jle
or
sub
xchg
xor
and
repz
fisubrs
jno
in
mov
pop
add
add
iret
pop
sub
mov
push
jg
ss
cmp
dec
fisubrl
imul
cmpsb
and
mov
mov
pop
inc
mov
cmp
push
push
adc
movsb
sti
aad
cmp
lcall
and
sti
jns
mov
jge
iret
dec
icebp
test
out
mov
mov
adc
inc
stc
sbb
jae
repnz
dec
mov
jge
push
add
aaa
inc
jno
cmp
xchg
maxps
adc
jo
sbb
and
pop
addr16
xor
imull
push
mov
push
jle
aaa
lds
cmpsb
std
outsl
loope
pop
popf
clc
sbb
jnp
lods
repnz
imul
loop
mov
sti
jp
cmc
add
sub
pushf
mov
cmp
or
add
add
daa
insb
jb
outsl
xchg
cmp
mov
mov
cld
fadds
out
mov
mov
fisubrl
pop
stos
ljmp
dec
cwtl
insl
and
mov
mov
xchg
adc
int3
lds
sbb
movsb
scas
jl
push
fwait
adc
mov
xchg
loope
int3
pop
add
xchg
call
add
jmp
orl
jl
lahf
and
mov
xchg
inc
data16
shrb
cwtl
xchg
adc
cltd
or
aaa
adc
daa
xor
das
add
rol
scas
movsl
pop
dec
scas
push
push
or
or
aam
cmpsl
cmpsl
sbb
in
push
leave
repnz
add
adc
jmp
in
and
cld
pop
popa
lret
pushf
pop
sub
mov
xchg
in
pushf
adc
mov
aad
mov
mov
and
aaa
test
aam
cltd
mov
cmpsb
popa
ljmp
sbb
out
mov
jg
insl
inc
addr16
lods
cmp
out
and
outsl
or
leave
arpl
push
push
outsl
iret
adcl
add
scas
push
repz
cmc
scas
cwtl
sub
bnd
jmp
add
add
add
fcmovnbe
add
mov
xor
loop
call
sub
or
dec
xchg
jb
ret
ret
pop
in
pop
jb
aad
push
mov
xchg
sub
mov
loopne
push
cmp
sbb
clc
sbb
jae
pop
sbb
push
dec
insl
xor
sub
xchg
push
test
push
xchg
pop
xlat
jp
in
inc
xchg
sub
lret
mov
lcall
dec
push
xor
and
adc
xchg
adc
pop
mov
mov
adc
or
mov
mov
mov
jge
add
loop
cmc
in
cmpsl
push
adc
in
pop
cltd
repnz
and
loop
or
pop
push
clc
sub
insb
loope
push
ret
inc
xchg
mov
jl
pop
shrl
stos
adcb
or
daa
inc
jp
xlat
cmp
jbe
pop
mov
inc
jecxz
lret
pusha
rorb
enter
rsm
adc
add
add
add
shl
and
add
and
inc
dec
test
xor
mov
movsb
movsb
and
jmp
xlat
adc
test
out
ljmp
ja
push
mov
inc
addr16
lea
mov
rcr
pop
enter
sbb
jle
sub
jle
xchg
out
in
mov
into
or
enter
sub
jmp
idivb
mov
jmp
inc
dec
sub
mov
les
push
bound
popa
inc
and
out
add
dec
xchg
and
cmpsb
std
cmp
mov
mov
imul
xchg
push
and
mov
test
cmp
stc
insb
jge
mov
push
add
fmuls
cwtl
lods
cmp
les
popf
les
enter
xlat
fmuls
mov
jne
jb
sti
loopne
mov
lds
jecxz
push
testl
test
das
mov
add
add
ja
ljmp
dec
cmpl
mov
dec
pop
adc
mov
jo
dec
sbb
dec
inc
shrb
mov
cmpl
jns
pop
pop
movsb
pop
into
sub
int
ljmp
aaa
push
jecxz
notl
and
divl
sub
test
jmp
or
cwtl
fwait
push
inc
jno
mov
xchg
sub
mov
push
mov
mov
xor
mov
xchg
ret
sbb
mov
out
pop
leave
jp
lret
rcl
shrl
aas
imul
inc
pop
push
gs
mov
dec
fxch
popa
ds
les
mov
into
and
ror
aam
rclb
sub
loopne
ffreep
and
lea
mov
sahf
mov
clc
inc
mov
and
imul
js
jb
mov
fstl
arpl
insb
add
xchg
mov
or
sbb
out
add
pop
add
add
sub
jle
cltd
sahf
mov
loope
xor
ljmp
inc
mov
inc
jmp
sbb
jae
lahf
jp
setne
imul
stc
inc
rolb
dec
popa
xor
loop
push
sarl
push
sbb
jae
jg
cwtl
mov
lods
adc
jmp
add
pusha
or
mov
mov
add
rcrb
or
push
mov
xchg
insb
clc
pop
inc
fnsave
clc
jge
in
ljmp
cmpsb
in
enter
rcrb
inc
imul
insb
pop
pop
or
es
test
call
pop
gs
add
ljmp
inc
inc
xor
jns
lret
xchg
mov
jbe
or
jle
push
xchg
call
xchg
push
push
adc
movsb
push
sub
std
fisttps
cmp
inc
jp
inc
and
arpl
and
lcall
mov
fstpl
int
add
pop
add
add
mov
inc
push
mov
popf
aam
mov
sbb
subl
shrb
pop
adc
test
ja
pop
inc
add
xor
add
insb
loope
inc
mov
fisubrl
fnstcw
jnp
or
pop
dec
mov
dec
or
push
add
test
movsb
sub
idivl
fs
add
pop
sub
mov
scas
dec
inc
or
out
daa
inc
imul
lea
and
or
fldt
std
mov
sbb
andl
outsl
sbb
inc
sahf
cld
lret
sub
pop
xchg
icebp
stos
shl
inc
sub
sub
and
loope
insb
mov
lcall
shlb
and
popf
sub
mov
int
mov
dec
out
or
push
outsl
in
adc
sbb
push
pop
jmp
fisubl
arpl
mov
push
cmc
packsswb
shlb
fs
jbe
push
inc
pop
jns
aas
lods
fmull
vmread
aam
add
pop
add
add
push
cmp
jp
ss
lret
ds
cmc
movsb
insl
dec
sbb
mov
ja
das
pop
xor
add
mov
xchg
mov
adc
enter
enter
rcrb
mov
mov
jle
ss
bound
jl
aad
icebp
sub
scas
dec
mov
jle
in
inc
mov
xchg
push
mov
add
jge
mov
icebp
popa
fsts
push
jecxz
and
push
xchg
bound
xchg
push
repz
daa
mov
pop
mov
or
mov
lahf
sbb
adc
mov
adc
jbe
jbe
push
cmp
loop
add
pusha
int
dec
inc
or
push
test
xchg
jecxz
xchg
lahf
es
iret
mov
add
mov
rolb
xor
cs
inc
jl,pt
push
jp
push
adc
push
dec
or
insl
mov
loopne
add
jnp
mov
jl
pop
dec
fcomi
add
pop
add
add
pushf
in
mov
and
xchg
mov
push
inc
daa
pop
mov
jb
xchg
je
sbb
push
pusha
dec
aam
mov
iret
arpl
xchg
ret
addr16
xchg
push
or
je
jge
jl
aam
mov
jle
add
enter
ss
lahf
push
dec
jbe
cltd
js
add
pop
push
iret
enter
mov
mov
mov
mov
repz
mov
movsl
les
cmp
data16
or
fidivs
jo
jg
jp
mov
xor
push
pop
loop
sbb
pop
movsl
or
test
jb
sub
mov
test
push
lods
sub
mov
fimull
sub
lret
sbb
cmc
cmp
and
sbb
sbb
ret
push
pop
mov
xchg
lds
fdivs
cmp
push
xor
lock
xor
add
xlat
pop
xlat
jg
mov
or
cli
cmp
repnz
pop
add
add
ror
inc
cli
add
push
adc
imul
sbb
loope
adc
ja
cmpsb
nop
out
std
sub
xchg
rorb
ja
sub
mov
and
mov
jmp
push
pop
xor
push
mov
xchg
mov
les
orb
or
andl
push
ljmp
or
lcall
sbb
or
push
sub
sbb
daa
lret
pop
icebp
sub
out
mov
call
mov
out
enter
fisubl
cs
sub
out
cmpb
ljmp
xor
cli
or
int3
aaa
sti
or
xchg
mov
xor
loopne
outsb
adc
data16
leave
mov
xchg
mov
roll
call
hlt
inc
out
and
add
fdiv
mov
and
test
repz
pop
add
add
add
sbb
ljmp
not
cmp
xor
push
lret
or
lock
sti
adc
es
sbb
sub
nop
add
or
sub
movsb
mov
xlat
and
inc
loop
sbb
or
dec
push
push
fldl
je
push
repnz
bt
xchg
jmp
test
test
mov
pop
inc
loop
nop
sbb
in
and
mov
add
sub
pop
scas
dec
or
cmpl
inc
lods
loop
cmp
sahf
and
cmpl
hlt
loop
inc
jmp
mov
xor
mov
xchg
fisttps
in
lds
mov
pop
les
cld
test
hlt
inc
sub
decl
xlat
and
xchg
and
pop
ss
xor
jae
test
mov
fsubrs
hlt
add
pop
add
add
out
cmp
cmp
repnz
pop
dec
add
clc
or
ljmp
ret
rcll
and
add
jle
sbb
push
add
cmpsl
cwtl
xor
mov
pop
dec
push
cltd
dec
hlt
nop
stos
fistps
cmc
jbe
push
ljmp
scas
flds
fcompl
push
inc
mov
popf
xchg
add
es
mov
dec
xor
xor
push
push
sub
fidivl
aam
sub
cltd
daa
add
ja
faddl
sbb
xchg
popl
lods
mov
fisubrs
inc
and
arpl
cltd
pop
icebp
sub
nop
fsubr
fcmovnb
dec
in
adc
adc
call
sub
jno
mov
pushf
sbb
ret
dec
es
ss
lret
cld
cwtl
mov
dec
sahf
les
in
negb
in
lea
add
add
push
pop
push
jmp
sbb
add
pop
add
add
leave
mov
pop
xchg
xor
fidivrl
push
dec
stos
mov
jbe
mov
daa
fmull
dec
out
xor
outsb
dec
enter
roll
cmp
jecxz
xlat
jnp
push
insl
mov
or
jmp
or
cmc
and
popa
in
js
mov
cltd
pop
cmp
repz
popa
mov
lock
pop
xor
repnz
lahf
push
mov
fs
es
adc
lock
out
mov
subl
xor
dec
pusha
sbb
xlat
push
ret
xchg
mov
in
inc
in
aas
jecxz,pt
in
dec
popa
adc
adc
adc
jne
shrl
mov
mov
out
cmp
mov
cmp
fwait
sbb
insb
insl
and
xchg
cld
stc
bound
in
movsb
and
adc
mov
jecxz
lods
push
sub
in
cmp
insl
jle
add
pop
lods
pop
cli
cmc
mov
inc
jg
testb
pop
add
add
cmp
mov
js
fcom
out
insb
push
lret
pop
insl
jo
icebp
out
jge
push
outsb
gs
mov
pushf
mov
or
pop
lcall
sbb
pop
mov
jmp
fcomi
in
daa
adc
sub
vcmpss
mov
lret
shlb
xchg
push
mov
js
addb
xchg
add
scas
out
das
loop
push
mov
pushf
loopne
push
fnsave
xorl
stos
inc
mov
das
inc
mov
cmpsl
dec
sti
shll
jae
mov
adc
repnz
and
jge
jmp
and
push
and
mov
shrl
or
shll
sub
xor
enter
lret
flds
pop
sub
cmc
push
aas
cmpsl
dec
inc
mov
fcmovbe
mov
lcall
je
in
cmp
push
sub
add
add
stos
cltd
inc
popf
jae
out
pop
dec
add
xlat
loopne
add
add
add
andl
inc
xchg
pop
ds
xchg
jecxz
les
pop
mov
sbb
test
push
cwtl
lret
adc
mov
bound
xchg
and
in
sbb
push
adc
hlt
add
and
fldl
hlt
shrl
roll
sub
mov
scas
movswl
xchg
sub
bnd
cmp
mov
pop
sub
pop
adc
and
mov
sbb
addb
xor
andl
hlt
std
xchg
mov
test
cli
pop
pop
idivl
inc
ret
cmp
jmp
maxps
xor
pop
pop
in
add
xlat
arpl
push
or
cmp
mov
xor
cmpsb
jmp
cld
movsb
mov
xchg
adc
jbe
xor
loop
mov
inc
cli
cltd
sbb
push
nop
hlt
ljmp
into
inc
inc
mov
lahf
ds
add
add
aam
int
mov
mov
push
jbe
or
add
pop
add
add
in
push
test
fsubrl
or
lret
imul
mov
sahf
decb
cmp
or
insl
aam
mov
jbe
xchg
inc
aas
subb
call
push
inc
loopne
sub
dec
hlt
imul
inc
lret
mov
insl
lods
in
aaa
xor
out
loopne
or
xchg
xor
aaa
scas
pushf
leave
and
ss
adc
leave
rclb
mov
jecxz
push
or
sbb
push
out
sbb
das
leave
inc
mov
xlat
test
xchg
cmc
mov
jge
ds
aas
and
fistl
in
gs
or
xor
cmp
push
in
xor
dec
test
into
xor
jne
rolb
and
mov
outsl
fs
pop
cmpsl
mov
dec
repz
sahf
xor
je
cmpsb
insl
cmpsb
loope
test
xor
stos
add
arpl
addr16
add
mov
filds
adc
add
pop
add
add
out
mov
mov
push
xor
push
pusha
stc
test
das
xor
ficoml
loop
cmp
sahf
sarl
jbe
enter
repnz
or
out
scas
test
popl
les
popa
pop
andb
push
mov
mov
push
es
pop
sahf
idiv
cmp
sbb
enter
inc
cmpl
leave
pop
test
add
fs
sub
mov
orl
imul
sbb
dec
ljmp
popf
rolb
scas
push
mov
or
jecxz
mov
lods
push
cmpsl
subps
and
shll
rorl
js
pop
arpl
mov
and
pop
shr
mov
jle
sub
mov
pop
push
push
mov
and
loopne
cmpb
jmp
fs
shlb
ret
add
out
out
pushl
ja
jno
loope
sbb
add
pop
add
add
lret
imul
test
hlt
push
lcall
sub
dec
orl
mov
jno
iret
mov
fnsave
je
xor
idivl
out
adc
ljmp
popa
jbe
inc
jae
fsubr
dec
mov
pop
scas
adc
lods
and
jnp
pop
or
inc
rcrl
test
push
pushl
int3
mov
js
cmpsl
and
xor
fcmovnu
jle
push
iret
mov
gs
mov
jb
dec
push
sub
outsl
push
lret
loopne
movsl
movsb
adc
nop
sbb
jns
add
add
and
fisubrs
pop
test
imul
in
add
cmp
xlat
cs
ds
cltd
mov
fstpl
push
dec
sbb
insb
mov
cwtl
popf
cs
sub
decb
out
testl
add
int3
add
push
scas
decb
mov
fldenv
cld
add
pop
add
add
and
jne
pop
test
test
and
jnp
shlb
push
dec
aam
mov
mov
add
sbbb
xchg
xor
rcrl
push
mov
push
mov
sbb
sbb
stc
pop
pop
das
cmpsb
ss
add
addr16
push
je
or
cli
fdivrl
clc
jbe
inc
arpl
mov
xor
jg
ss
int3
cltd
dec
leave
out
xor
in
in
adc
arpl
negb
lret
xchg
push
cmpsb
jb
lahf
rclb
fsubs
or
shll
orb
js
pop
iret
sub
push
or
inc
push
jge
shll
xor
mov
test
mov
mov
sarb
xchg
inc
pop
or
push
dec
inc
sub
fwait
aam
out
lock
clc
notl
fildl
dec
iret
les
mov
ror
sub
in
test
add
aaa
xchg
and
movsl
mov
mov
mov
dec
pop
or
sub
add
pop
add
add
fildll
repnz
jae
test
mov
pop
int3
mov
fisubrs
xlat
and
inc
iret
and
adc
movsb
adc
xchg
pop
mov
mov
cmp
cltd
mov
xchg
push
mov
dec
mov
inc
out
xor
sahf
sub
imul
cmp
inc
rcrb
dec
sbb
adcb
xor
xchg
push
or
jnp
dec
aad
js
es
push
mov
dec
cli
add
imul
mov
std
dec
sar
loopne
in
xor
inc
mov
dec
nop
pop
leave
mov
sub
or
lret
mov
add
sbb
cmpsl
shl
mov
outsb
fwait
xor
xor
xlat
aad
mov
push
push
push
add
push
xchg
lcall
nop
fwait
push
test
nop
add
mov
push
jg
mov
inc
or
add
add
add
insl
popa
ds
cmp
das
mov
cmpsl
leave
sti
hlt
inc
fsubs
mov
rcl
subb
out
push
dec
dec
inc
in
mov
xlat
pop
cmpsb
lods
cmp
add
sbb
dec
stc
out
mov
cmp
xchg
orb
mov
add
sub
int3
inc
push
mov
push
lcall
xchg
cmpsb
sub
sub
dec
sub
and
mov
xchg
pop
pop
gs
or
jl
mov
ret
mov
inc
mov
test
popa
and
aam
fcomp
cmp
nop
mov
xor
imul
ret
xor
js
pmaxsw
lds
xchg
pop
je
fucomip
push
dec
jns
popf
mov
mov
sbb
jbe
dec
cwtl
fiaddl
test
push
daa
mov
cmpsl
jmp
dec
xchg
mov
repnz
xorb
adc
ss
dec
add
mov
mov
xchg
mov
incl
add
add
add
std
leave
add
xchg
daa
push
and
adc
jle
fs
mov
das
jecxz
cmpsb
lods
cmp
mov
xor
adc
jo
push
fldl
nop
imul
loope
sbb
sti
or
divb
inc
inc
push
enter
icebp
push
sub
in
jno
xchg
emms
or
outsl
or
decb
xchg
sti
or
iret
xchg
imul
addr16
aas
mov
pop
add
aam
add
sbb
inc
filds
stc
jo
jp
sarl
in
sbb
pop
leave
inc
movsl
mov
sub
xchg
inc
jl
mov
cltd
sub
repnz
xchg
sub
or
fnsave
pusha
add
inc
jne
jae
mulb
mov
lea
popf
add
hlt
push
add
xchg
sub
scas
pop
mov
adc
add
add
mov
in
ds
shl
in
dec
sub
in
bound
enter
fildl
xchg
pop
pop
sub
add
mov
xchg
testl
mov
stos
mov
in
push
xchg
imull
imul
ret
fwait
cmp
inc
push
imul
ds
pop
sbb
mov
lcall
jae
stos
testl
std
xor
adc
push
pop
mov
fwait
sub
lock
dec
cmpsb
or
ret
push
shl
and
cmp
mov
push
cmp
and
dec
mov
bnd
push
imul
aam
xor
sub
and
sbb
ret
push
lcall
es
scas
pop
jne
inc
xchg
xchg
js
xor
int
dec
add
sbb
push
lock
add
hlt
fisttps
test
js
inc
add
add
add
add
stos
pop
mov
lea
cmp
stos
cli
push
pop
push
mov
je
mov
cmp
stc
iret
adc
jb
sbb
sti
pop
addr16
lods
sbbb
in
pusha
jae
shrl
popa
lods
pop
mov
fmul
aad
fsubrl
loop
lods
cmpl
dec
gs
jmp
push
lahf
push
addl
dec
movsl
frstor
out
mov
int3
sbb
sbb
fidivl
fsubrp
inc
sti
lahf
gs
enter
shlb
jns
js
push
mov
stos
es
insb
pop
sbb
jle
stos
sti
jecxz
movsl
test
jne
insl
ret
or
or
or
push
add
adc
jl
or
sbb
pop
rorb
roll
and
inc
fcoml
movsl
adc
shll
stos
js
add
xor
orb
sbb
add
into
fwait
cmc
pop
sub
dec
add
add
add
add
fidivl
add
aad
stos
sub
scas
filds
inc
std
xchg
push
pop
pusha
ret
push
jo
sahf
in
mov
inc
or
imul
or
pop
mov
outsb
movsb
xchg
add
and
enter
dec
mov
mov
sar
dec
imul
jp
aam
add
lods
loope
xchg
lods
data16
mov
pop
ret
cmp
jns
ss
loopne
inc
or
loope
push
sub
xchg
mov
iret
xchg
mov
rorl
fisubrs
dec
clc
dec
jmp
pop
xor
ja
je
sbb
sub
std
mov
out
loop
push
jp
adc
addb
pop
pop
cs
cld
test
mov
ret
push
cmp
cmpl
xchg
add
dec
outsl
popl
movsl
mov
movsb
ret
sub
outsl
push
jo
test
out
fiadds
mov
jno
add
xor
mov
pop
mov
sub
add
add
add
aaa
imul
xor
in
or
mov
andb
dec
adc
push
dec
dec
push
sub
ss
mov
and
and
push
ror
mov
jmp
mov
xor
out
aaa
xchg
cld
cmp
fdivrs
iret
mov
mov
inc
push
jg
mov
rcll
pop
pop
push
sbb
pop
push
repz
fidivl
cmp
ret
or
orb
pop
mov
push
in
lret
or
mov
call
jmp
mov
fwait
in
sub
cld
daa
cmc
insl
or
xchg
movsb
mov
popf
int3
xchg
sbb
inc
adc
mov
icebp
mov
iret
call
xchg
adc
xchg
sbb
nop
fimuls
mov
or
mov
in
out
adc
add
inc
out
aas
mov
scas
adc
add
add
add
add
jecxz
mov
aaa
dec
incl
push
pop
mov
mov
into
mov
add
pop
push
inc
or
in
in
in
fs
mov
add
loop
cli
pop
xor
push
mov
mov
pushf
pusha
inc
inc
jecxz
dec
pop
xlat
cs
sub
rolb
fninit
inc
add
xlat
in
rolb
divl
pushf
repnz
cwtl
mov
dec
xchg
add
les
jg
and
push
jbe
aam
xor
lret
xchg
add
mulb
nop
or
arpl
pop
xor
xchg
and
add
inc
xchg
cmp
jmp
fistpl
push
imul
ret
add
inc
jecxz
pop
cmp
pusha
movsl
inc
push
and
xor
mov
inc
enter
adc
in
stos
arpl
mov
aaa
pop
cs
repnz
nop
ss
jae
mov
test
aam
xor
outsl
cmp
idivl
icebp
fmuls
mov
push
bnd
jl
movsb
mov
pusha
add
add
sbb
lods
mov
dec
sub
hlt
addr16
test
jbe
sub
cmpsb
subb
mov
inc
ret
outsl
out
pop
xchg
hlt
insl
and
mov
dec
cmpsl
mov
mov
sub
jle
sahf
aam
jbe
mov
fisubl
das
outsl
jbe
cmpsb
pop
xchg
add
scas
jge
ljmp
and
add
sbb
dec
addr16
insl
jg
add
sub
shll
mov
fs
sub
mov
mov
xlat
sub
fcmovnu
cmp
cmp
sarb
jge
stos
cwtl
aad
ss
xor
mov
mov
aas
icebp
pop
pop
sbb
push
mov
dec
cs
std
mov
or
xchg
popa
jmp
stc
dec
lea
idivl
push
aas
or
int
jo
mov
sub
xchg
cmova
bound
hlt
fistl
push
shrl
pop
imul
mov
mov
fs
scas
pop
add
in
out
ja
fists
cld
push
cld
addr16
add
pop
add
add
pop
inc
push
pop
xor
sbb
push
jo
andl
xor
sub
inc
mov
push
inc
add
jno
inc
bound
push
dec
add
ret
inc
pop
shlb
ss
push
popa
jle
sbb
arpl
or
add
jg
sub
das
dec
imul
jno
hlt
rcl
fwait
js
jb
nop
cmp
imul
xchg
add
shlb
mov
adc
lret
call
jne
push
mov
outsb
sbb
cs
xor
loop
sbb
in
adc
cld
jl
jb
repnz
push
cmp
ja
divl
jnp
cmpsl
or
and
sub
leave
and
jne
cmpsb
leave
stos
shl
ficomps
sbb
mov
in
dec
lret
adc
xchg
or
lock
lds
and
dec
subl
add
add
pop
in
daa
jle
add
pop
add
pop
add
add
into
xchg
cmc
jle
das
mov
mov
out
test
cli
pop
pop
mov
push
pop
adc
dec
pusha
je
jae
fldl
pop
cmp
lret
les
fists
cs
sub
ja
xchg
sbb
mov
adc
jne
xchg
add
shl
insb
mov
adc
shll
sbb
inc
push
xor
jbe
lahf
and
dec
push
sub
xchg
scas
xor
iret
jno
lea
pop
shlb
push
or
cmpl
pop
ss
xchg
popa
rorl
bound
sbb
cltd
xchg
mov
add
xchg
shll
shll
push
inc
pop
dec
ljmp
stc
mov
popfw
mov
out
mov
jmp
mov
xor
mov
in
das
es
inc
notl
mov
xor
aas
inc
adc
in
in
sub
push
push
add
mov
jg
idivl
mov
lahf
jne
add
pop
add
add
push
or
test
dec
shlb
add
jns
xor
dec
test
dec
lea
add
mov
adc
mov
lcall
pusha
out
fdivrl
sub
pop
into
mov
and
xchg
stos
aas
ret
dec
sbb
ja
xchg
jno
pop
cltd
adc
in
data16
hlt
sub
imul
cmp
pushf
cmp
pop
in
cmp
dec
test
lcall
jecxz
stos
call
push
cmp
adc
outsb
xchg
insb
inc
test
inc
call
jno
adc
inc
inc
lahf
push
std
rcrl
jbe
or
lcall
push
add
xlat
in
inc
les
jecxz
mov
push
loopne
stos
idivl
sbb
lods
sahf
shll
xchg
adc
sbb
push
push
incl
lock
mov
das
pop
sub
push
movsb
pop
pop
and
dec
test
add
cmp
sti
jg
les
hlt
jl
add
pop
add
add
lahf
or
cmp
jo
fildl
stos
outsb
out
gs
and
mov
addl
rorl
mov
or
and
and
add
push
mov
xor
test
data16
push
jno
in
pop
mov
push
subl
or
test
rol
js
mov
cmp
dec
pop
cli
cmp
mov
cmp
pop
movl
adc
pop
push
aam
and
jg
lods
mov
clc
in
add
call
mov
mov
sub
xchg
cmp
loop
dec
sub
shl
sahf
inc
int
mov
popa
in
leave
xlat
popf
jae
mov
mov
mov
shl
rcrl
push
repz
cmp
lds
cmp
xor
xchg
add
jnp
fnsave
xchg
negb
fcompl
or
add
add
add
mov
cli
xchg
into
add
jg
xchg
repz
mov
iret
xchg
cltd
outsl
push
and
iret
ss
add
sub
mov
or
mov
cmp
fwait
in
xchg
pop
aaa
push
fwait
int3
mov
lcall
sahf
inc
or
mov
mov
js
jb
outsl
sub
test
test
sub
mov
in
ja
rcr
adc
cmp
add
mov
or
jae
mov
lods
je
lahf
outsb
cmc
and
mov
adc
enter
xchg
mov
cmp
cmp
dec
mov
dec
or
push
cltd
gs
or
in
xor
imul
xchg
adc
cmc
xchg
and
pop
test
xchg
pop
faddl
data16
inc
jb
jecxz
cld
gs
shlb
mov
loop
lds
sub
xor
and
sub
sbb
lods
testl
mov
jno
std
outsl
mov
inc
loop
dec
mov
or
add
add
add
call
adc
ret
add
dec
cmp
mov
jns
push
pop
add
dec
cmpsb
das
shll
adc
incl
pop
mov
andb
lea
cmc
xchg
lret
push
push
mov
fidivrs
xchg
jmp
mov
mov
mov
sahf
fwait
cmp
inc
inc
mov
and
xchg
mov
sub
mov
mov
xchg
pop
lock
iret
loope
outsl
jg
pop
xlat
jmp
outsb
adc
je
mov
scas
test
lcall
into
mov
sbb
lds
xor
inc
jmp
int
jmp
push
bound
ss
mov
mov
pushf
sbb
mov
mov
movsl
les
mov
fwait
pop
mov
adc
fistpl
xchg
add
jmp
lret
sbbb
loope
jmp
fiaddl
inc
call
pop
add
add
div
ljmp
and
out
into
outsb
and
adc
mov
ljmp
repz
dec
add
repnz
or
pop
jb
add
mov
pop
ret
add
stc
pop
mov
adc
ja
pop
sbb
push
mov
scas
add
shl
cld
sbb
outsb
cmpsb
cmp
leave
mov
dec
in
push
mov
pop
jmp
jge
mov
lea
jecxz
clc
jne
adc
push
adc
cmp
rcrl
or
addr16
es
mov
mov
rep
and
mov
pop
push
mov
mov
mov
repnz
mov
push
mov
dec
and
add
jo
out
insl
and
bound
pop
jp
add
fistpl
enter
sbb
push
push
push
add
cmp
mov
xor
xchg
lds
push
mov
out
cwtl
or
add
inc
lock
outsl
mov
xchg
adc
and
ret
icebp
aas
mov
cmp
std
sub
sbb
xchg
mov
add
jmp
out
shl
lea
imul
cmp
pushf
les
ss
push
adc
push
mov
test
jns
inc
testl
push
or
in
mov
mov
and
in
bound
sti
icebp
in
lea
pushf
call
js
mov
dec
mov
sarb
sbb
mov
push
stc
popa
jo
ret
loop
cwtl
out
inc
xchg
xchg
inc
out
sbb
add
or
cld
mov
dec
sbb
in
push
sti
fmul
push
stos
jnp
iret
mov
xchg
add
cld
aas
fs
scas
mov
fsubs
or
xchg
jl
shl
mov
pop
scas
int3
add
cli
inc
jg
int
cs
pop
jne
lahf
push
add
pop
add
add
movl
iret
xchg
jp
rcrl
fiaddl
je
ss
add
imul
cmp
pop
out
cltd
sbb
sti
and
xor
xlat
nop
fiaddl
fiaddl
xor
pop
cmpsb
mov
lods
mov
stos
xlat
sbb
lds
inc
movsb
or
or
cmp
or
dec
mov
xchg
cmp
or
outsb
pop
cli
sbbl
jl
mov
fisubl
roll
jb
cmp
xchg
mov
iret
pop
ret
sub
jmp
icebp
out
or
dec
imul
xchg
mov
mov
xchg
cmp
jp
mov
enter
add
stc
aam
inc
or
int3
lods
icebp
ret
arpl
cmp
scas
jecxz
repz
mov
mov
or
popf
xor
cmp
and
jbe
jnp
sub
or
push
out
imul
add
add
xchg
std
cmp
jle
fistps
push
inc
andl
outsl
aam
mov
xchg
pop
js
push
xor
into
scas
inc
repnz
dec
adc
jne
stos
adc
push
xor
sub
repnz
int3
push
xchg
enter
ficomps
push
cltd
fwait
sbbl
jne
loop
pop
fstp
inc
cmp
outsb
xor
popa
or
adc
daa
dec
in
jno
or
and
jecxz
loop
adc
mov
pop
lds
mov
or
push
push
fldenv
or
xor
jle
sbb
aam
dec
pop
adc
lret
inc
inc
repnz
cs
rclw
arpl
sbb
enter
xchg
xchg
push
cmpsb
adc
aam
jnp
jo
dec
sub
data16
xchg
rcl
insl
push
leave
sbbb
jne
aas
es
push
enter
or
mov
sbb
add
jl
add
xor
movsl
adc
mov
imul
cmc
test
pushf
lcall
add
xchg
pop
lds
xlat
fimull
xor
movsb
lods
adc
add
add
add
popa
sbb
fwait
xchg
loope
lahf
icebp
jmp
inc
mov
pop
xchg
insb
leave
test
push
jnp
icebp
orl
fidivs
push
sbb
xchg
pop
lds
jecxz
pop
or
mov
sbb
pop
adc
pop
das
add
fildl
imul
and
bound
lds
out
jnp
xor
ror
call
std
adc
mov
mov
aas
cld
or
or
outsl
mov
push
xor
pop
adc
mov
xchg
lods
int
jecxz
xor
push
cmp
nop
xor
inc
lea
insl
sbb
inc
pop
sbb
cltd
aaa
xchg
js
lods
sub
sub
addr16
xchg
std
ret
xlat
movsb
add
dec
pop
push
jp
xchg
test
and
aad
push
nop
add
xchg
mov
jle
lret
add
add
sub
iret
outsb
jmp
in
pop
outsl
inc
or
js
adc
add
add
add
mov
inc
addr16
pop
test
jg
mov
push
cmp
aam
js
jmp
pusha
jmp
jns
shl
cld
jbe
sbb
les
jge
sub
adc
out
jb
clc
xor
aad
mov
es
int3
and
cmp
ljmp
into
pop
xor
in
lahf
pop
cmp
data16
jmp
jae
push
push
push
push
or
dec
icebp
nop
dec
fsubrs
mull
sub
lret
mov
sbb
dec
int
test
inc
dec
test
or
fst
jg
inc
add
mov
cmpsb
test
jmp
lea
push
gs
loopne
push
scas
ret
cwtl
ss
inc
ss
pop
scas
or
scas
adc
scas
test
lret
sbb
mov
mov
sti
stos
mov
mov
cmp
pushf
sub
cmp
inc
adc
add
std
sbb
stc
cld
or
mov
adc
add
add
add
andl
lea
shrl
mov
dec
and
lods
push
xor
stc
xchg
or
inc
je
cltd
hlt
in
jmp
and
fnstenv
sbb
xchg
push
out
cli
or
and
push
jmp
insl
pop
test
cmp
sbb
aam
int3
fisubrs
cmp
stos
inc
add
pop
notl
mov
sub
add
scas
cmp
and
or
mov
mov
popf
loopne
push
sub
dec
adc
das
fisttpll
test
lods
push
jns
add
fsubrl
addl
sahf
cmpsl
sub
mov
xchg
cld
pop
and
call
ja
push
aas
and
test
cmpsl
repz
scas
cltd
pop
sub
adc
cmpsb
xchg
push
jne
stos
mov
jo
repnz
xor
sub
jns
movsl
imul
add
negl
adc
fadd
mov
cmp
add
add
add
insb
jns
sbb
fstl
shl
rcrb
mov
jb
mov
lcall
unpckhps
testb
and
js
xchg
push
or
ja
mov
inc
jno
add
inc
sub
xlat
mov
rclb
test
xor
aas
es
xchg
sub
mov
nop
sub
and
movsb
xchg
push
or
pusha
xchg
cli
dec
jae
pop
and
icebp
pop
add
loope
or
adc
ret
cmc
out
or
mov
cmp
mov
imul
mov
mov
roll
xchg
mov
mov
out
subl
js
es
std
or
push
pop
movsl
jne
or
adc
push
mov
pop
mov
jns
mov
fidivl
daa
dec
lea
jns
mov
pusha
mov
push
cmc
in
not
cmp
add
dec
pushl
das
imull
dec
leave
adc
add
add
add
xorl
pusha
cmp
ljmp
iret
or
je
out
movsl
fdecstp
push
adc
sbb
call
lea
xchg
sbb
add
pushf
or
outsl
sti
xchg
or
pop
push
jae
jle
popa
in
in
sub
push
mov
mov
push
mov
jl
int3
ficompl
add
bound
push
or
cmpsl
leave
mov
insl
fstpl
dec
test
test
ds
and
mov
mov
in
add
call
xlat
ljmp
int3
add
lret
fidivs
jne
je
add
push
mov
inc
mov
pop
fsubrl
dec
insb
movsl
adcb
dec
xor
xor
jbe
or
data16
dec
fs
lret
pop
cmc
jmp
mov
or
jge
mov
fwait
cmp
sub
push
add
inc
ja
pop
aas
pop
jmp
mov
rclb
add
js
xchg
mov
cpuid
out
sub
or
add
rolb
inc
out
adc
ret
cmp
nop
cwtl
push
mov
add
xchg
fsubrs
ljmp
repnz
add
sbb
stc
aaa
cmp
insl
ds
call
in
cli
or
xchg
fs
adc
xchg
fistps
xor
cli
and
testb
jl
cmp
jno
ret
sbb
outsb
push
gs
repnz
test
in
adc
outsb
nop
icebp
cmpsl
lods
sub
icebp
lret
shrl
int
jnp
out
pop
cmp
imul
lea
pop
fsubrs
pop
add
pop
mov
insl
nop
fs
aas
mov
mov
shll
scas
js
aam
imul
add
or
xchg
mov
sub
add
gs
add
xchg
jae
ja
div
fisttpll
negl
pop
add
add
xor
insl
or
lds
xor
sub
lock
mov
jg
sub
add
or
pusha
insl
jecxz
lods
sub
cmc
jne
and
dec
and
icebp
push
lods
xchg
sub
aaa
mov
movsb
dec
sub
mov
shll
loopne
or
ficoms
xchg
mov
stos
jae
mov
sbbl
aaa
arpl
and
in
out
cli
mov
jmp
mov
jo
dec
xchg
cmp
imul
cs
push
xor
inc
xor
shrb
xor
scas
cmp
js
jmp
stos
mov
xorl
rcll
scas
pop
mov
and
daa
in
decl
jbe
xor
xchg
jge
adc
pop
jae
sub
dec
das
mov
arpl
je
mov
cwtl
sub
pusha
pop
out
jbe
add
cli
std
jg
mov
push
icebp
ficoms
add
pop
add
add
loope
sbb
mov
test
push
lea
mov
or
ror
fiaddl
imull
inc
and
pop
xchg
std
mov
mov
cmpsb
scas
shll
loop
pop
or
fsubrp
cmp
cmp
or
sub
aas
sub
jnp
cmpsl
fisubs
sbb
scas
stc
inc
or
add
enter
mov
pusha
stc
stc
xor
or
fucomip
lock
xchg
lcall
std
stc
mov
push
pop
int
aaa
lods
xchg
push
inc
movb
mov
jmp
xchg
cmpsb
cmp
stc
jg
ja
clc
dec
int
cli
sahf
xchg
xchg
push
xchg
das
push
ja
std
ret
xor
add
and
out
ss
xchg
mov
pushw
repz
xor
addr16
enter
xlat
icebp
dec
inc
push
out
sub
int
aas
sbb
into
add
add
mov
std
incl
mov
push
in
add
pop
add
add
fidivrl
mov
mov
ficomps
sub
or
xchg
mov
xchg
or
add
notl
sub
sahf
in
iret
mov
xor
sbb
shl
cmp
adc
ret
test
aam
arpl
adc
push
cmp
mov
mov
mov
aam
cmp
cmp
push
xlat
jl
popf
dec
pop
dec
push
sub
iret
call
pop
cli
or
adc
mov
imul
testb
xchg
mov
dec
push
int
dec
imul
fnstenv
fistl
pop
or
inc
jno
cmpl
loope
push
mov
mov
add
xchg
ljmp
xchg
push
and
test
movsl
cmp
add
inc
mov
and
mov
lds
dec
cmp
add
es
jg
pop
pop
mov
pop
sub
sbb
add
add
add
sub
stos
dec
int3
xlat
cmp
cmp
jbe
jp
ja
cs
xchg
mov
cmpsb
xor
shrl
sub
pop
xadd
sbb
icebp
enter
icebp
jne
cmp
adc
dec
inc
lock
and
and
mov
int
sub
pop
and
pop
je
sbb
sbbl
in
call
add
test
test
mov
jnp
dec
lahf
jmp
punpckldq
imul
bnd
ss
sbb
mov
pusha
xlat
iret
pop
adc
and
cmp
rcrl
outsb
push
dec
pushl
or
xchg
js
std
xlat
sarb
mov
out
fdivp
or
les
mov
mov
in
push
add
push
sahf
mov
bound
push
sti
or
cwtl
jge
out
inc
xor
test
inc
or
push
clc
or
mov
add
sbb
add
add
add
cmp
jno
scas
out
lea
cmp
lods
aad
bound
jbe,pn
adc
and
aas
roll
inc
jo
in
sub
sarb
or
test
imul
jnp
int3
inc
dec
xchg
xor
scas
hlt
xor
mov
aad
mov
push
and
xor
pop
lahf
in
ret
jmp
pusha
push
outsl
jmp
cmpsl
decl
xor
in
pop
loop
pushl
cmp
cmp
cmp
dec
sahf
xor
decl
out
inc
mov
repnz
push
xor
lret
pusha
adc
xchg
lock
ficomps
pop
sub
xchg
or
aas
mov
inc
adc
in
inc
mov
sbb
arpl
add
push
xlat
notb
jecxz
test
loopne
or
push
inc
adc
xor
xor
loop
mov
add
pop
add
add
test
mov
push
xchg
js
adc
aaa
sbb
or
clc
fcomi
push
invd
and
ljmp
push
out
fcomi
or
jge
int
and
cmpsl
pop
jo
sbb
push
mov
icebp
jmp
ljmp
pop
adc
invd
ficompl
or
push
mov
inc
sbb
mulb
fstl
dec
mov
jb
xlat
sahf
sarb
push
mov
adc
imul
mov
jl
xor
inc
pop
sub
cmpl
fisttpl
paddsw
loope
push
inc
adc
push
dec
mov
aaa
and
out
movsb
std
xchg
imulb
mov
inc
push
mov
bound
cli
mov
cmpsb
int3
ret
lcall
push
add
mov
lods
mov
ret
mov
pop
add
inc
push
pushf
mov
roll
xchg
test
add
add
ficoms
stos
sbb
jmp
ljmp
jo
sbb
add
mov
cltd
adc
or
das
sbb
out
gs
out
or
sahf
shlb
dec
jbe
std
and
ljmp
adc
inc
inc
cmpsb
mov
cmc
push
rcl
adc
xchg
inc
inc
add
pop
mov
or
push
fiadds
jne
mov
shl
jp
stos
xchg
pop
mov
out
pop
orb
push
sub
dec
and
mov
jae
xchg
mov
add
cmpsb
pop
and
rcr
or
lret
or
out
scas
sub
push
leave
xchg
fistl
test
mov
push
repnz
add
jo
mov
xchg
into
lahf
loop
rol
cmp
sub
push
push
dec
adc
popf
xchg
jl
cmc
mov
ret
lret
fstpt
push
and
adc
inc
cmp
outsb
jl
negb
dec
lock
fs
lock
push
add
in
out
arpl
aas
dec
lret
or
add
pop
add
add
mov
ja
cmp
cwtl
sub
mov
inc
stos
push
push
mov
push
insl
add
cmp
jle
sbb
aad
cmp
push
mov
mov
enter
cmp
dec
or
cmpsb
inc
cmp
inc
shrl
int3
jb
push
mov
test
scas
jb
js
jnp
ret
loope
xlat
orl
jno
loope
popa
pop
push
hlt
fwait
ret
inc
pop
adc
movsl
pop
mov
jbe
cmpl
pop
out
mov
or
ljmp
cmp
clc
scas
mov
mov
cmc
dec
shlb
shr
cmp
add
addr16
mov
lods
pushf
add
popf
lods
pop
dec
cld
fwait
mov
inc
sbb
rolb
lcall
cmpsl
fldl
dec
inc
popa
cli
mov
out
sub
dec
nop
dec
cmpb
push
jne
dec
or
out
cld
mov
pop
jnp
lods
nopl
add
add
add
lahf
lods
xor
fistl
dec
ds
sbb
outsb
pop
ficoml
cmp
neg
push
xor
stos
fs
pop
fiadds
aam
in
mov
shll
lds
inc
add
in
ljmp
int3
andb
lods
ds
negb
push
iret
and
inc
es
adc
js
adc
sbb
dec
mov
lret
addr16
push
faddl
movsl
jle
mov
popa
lcall
fildll
and
mov
inc
jb
and
or
xchg
jo
or
jo
or
inc
jae
lret
adcb
xor
rcpps
lea
dec
flds
dec
sub
pushf
mov
sbb
mov
or
nop
sub
xchg
and
push
and
mov
incl
pop
inc
push
cmp
dec
jmp
popf
je,pt
aam
add
cmp
out
lock
mov
and
add
add
add
in
mov
int
mov
scas
loopne
sar
loope
xor
mov
mov
mov
js
push
xchg
shlb
cmp
cmp
ljmp
insb
inc
jne
jbe
fsubrp
adc
jmp
sub
insl
xchg
jle
cmp
sti
mov
mov
test
mov
cmpsb
scas
arpl
mov
outsb
jns
mov
test
loop
cmpsl
jae
and
ds
add
push
jnp
xor
mov
popf
cmp
jecxz
xchg
fidivrl
and
lds
adc
fbld
or
adc
negl
push
mov
pop
jns
daa
out
mov
popf
enter
enter
cmp
sub
dec
push
adc
pop
mov
into
and
mov
out
xchg
js,pn
pop
jmp
push
jno
add
in
out
push
outsl
jmp
test
sbb
cmp
rolb
xorl
cmp
add
add
mov
inc
mov
jne
sti
mov
or
or
mov
mov
cld
stos
mov
pop
pop
push
push
pop
sub
enter
subb
mov
push
xchg
ss
out
jae
into
jecxz
scas
popa
bound
addr16
lahf
je
dec
pop
repnz
nop
les
in
jbe
mov
int3
jmp
add
mov
inc
xor
inc
imul
adc
idivb
mov
jle
std
xor
sub
shrl
iret
xchg
xchg
cmp
pop
cmp
jp,pn
cli
movsl
sar
add
dec
out
stos
mov
pop
insb
arpl
nop
call
xorb
incb
cmp
cld
sbb
sahf
stc
js
or
inc
loope
repz
dec
pop
xor
mov
mov
jnp
pop
pop
push
add
push
jl
mov
push
popf
lock
push
dec
xor
cmpsl
fadds
add
jg
cld
fcmovbe
out
js
dec
and
add
pop
add
add
sar
adc
inc
cmpsb
lock
sub
cmp
mov
pop
cmp
les
out
js,pn
xor
adc
cmp
stc
into
scas
sbb
sbb
or
push
adc
popa
fsubs
xchg
outsb
inc
aas
add
js
pop
in
cmp
loopne
dec
cmpb
push
data16
cs
inc
dec
pop
les
jno
push
add
mov
and
cwtl
call
dec
sub
or
push
loopne
inc
and
aam
add
popa
ss
popf
outsb
sarb
je
jp
jno
fsubrl
out
pop
push
mov
or
and
sub
xor
sbb
and
mov
sbb
je
xchg
movsl
divl
lea
test
mov
cltd
cmp
add
dec
sub
sbb
cmp
ret
mov
iret
mov
xchg
inc
mov
add
add
add
add
jo
dec
add
and
mov
test
test
adc
in
xchg
push
scas
and
scas
jge
mov
outsl
adc
imul
aas
mov
mov
xchg
add
jge
mov
dec
ret
sub
testb
mov
arpl
decl
cmp
and
rcr
dec
xchg
xchg
mov
fisttps
js
je
ss
ds
repz
arpl
cmp
rol
jnp
sbb
jle
or
test
sub
lock
lea
fldcw
adc
jo
ficomps
mov
sbb
movd
mov
clc
dec
mov
dec
dec
mov
clc
fimull
in
inc
pusha
dec
cmp
add
in
adc
pop
sbb
std
aam
jp
sub
xor
add
add
mov
lahf
and
lcall
add
add
add
mov
push
mov
js
mov
repnz
std
stc
xor
lcall
addr16
js
sub
jns
enter
lea
repz
and
cmp
pushf
jp
cli
ja
pop
dec
sbb
inc
sbb
out
mov
or
rorl
test
xor
push
ret
jno
hlt
sub
sbb
int3
jl
shll
lret
lds
mov
fstl
ja
push
inc
stc
pop
adc
xchg
sub
mov
xorb
adc
int
push
outsb
fdiv
fcmovnb
cmp
dec
inc
ljmp
leave
pop
add
jne
sub
mov
fdivrs
xlat
rcrl
and
push
dec
aam
loope
xchg
adc
repnz
jb
out
or
js
sub
xor
xchg
sbb
dec
or
add
xor
clc
cli
clc
sarb
js
insl
mov
pop
add
add
mov
xchg
lods
add
xor
add
mov
data16
sub
bound
sbb
das
inc
push
sbb
xlat
jbe
sbb
lods
rcr
mov
rcrb
pop
fisubs
stos
xchg
jnp
inc
pop
aaa
add
or
nop
add
sub
and
sub
xor
sub
iret
push
sbb
repnz
lcall
jp
cmp
sub
lret
in
adcl
or
leave
pop
scas
push
repnz
xchg
jne
mov
in
mov
cmp
sub
pushf
jg
adc
fs
jne
and
xor
fcmovne
push
mov
ss
adc
inc
mov
rclb
pop
cltd
pop
add
and
mov
std
cmpsl
and
pop
bound
test
imul
add
push
xor
mov
add
pop
add
add
jbe
cld
or
or
dec
ljmp
loopne
ds
mov
lds
and
jge
std
jmp
jmp
test
lods
les
lds
gs
push
sbb
testb
mov
jb
lds
repz
mov
es
shl
and
repnz
add
imul
sbb
jle
push
hlt
mov
sub
das
cmpsl
js
pop
rcr
or
dec
and
call
inc
sbb
divb
test
movsb
test
pusha
and
repz
aas
adc
jne
xchg
in
cltd
and
int
jl
sub
rcrb
pop
xchg
cmpsb
outsl
lcall
stos
xor
outsb
test
lods
mov
enter
inc
inc
aaa
cmp
gs
mov
xchg
mov
aad
add
jb
mov
mov
adc
push
cmp
push
lret
ljmp
add
add
es
data16
pop
sub
daa
sahf
sahf
clc
pop
inc
daa
add
pop
add
add
jle
cwtl
ja
mov
sbb
nop
call
jge
es
xchg
adc
popl
mov
sbb
out
rcl
push
stos
cs
mov
adc
xchg
mov
xchg
sbb
inc
nop
add
js
std
push
mov
ficompl
jle
xlat
fcmovb
cmp
lcall
mov
les
mov
dec
jge
test
test
ds
mov
cmpsb
fwait
pop
cmp
mov
movsl
shrb
mov
xchg
jg
std
ljmp
loopne
sbb
outsl
out
dec
mov
inc
loop
add
or
or
cwtl
ljmp
push
sbb
adc
sub
adc
jbe
test
ljmp
out
or
jg
out
cmpsl
fldt
mov
mov
push
mov
or
fldl
xor
mov
add
dec
mov
imul
clc
adc
test
add
add
add
adc
sbb
pop
mov
shl
leave
sti
mov
xor
sbbl
fwait
sbb
lods
xchg
rclb
jle
pusha
mov
fdivs
minps
dec
sbb
cli
jne
jae
mov
rolb
cmp
add
dec
fstpl
loope
faddl
xchg
gs
test
rcrb
outsb
adc
pushf
inc
jnp
lea
sahf
xchg
test
je
mov
lds
or
loop
push
jb
fsubs
add
mov
xchg
loop
sbb
and
xchg
adc
xchg
sub
mov
scas
xor
push
aad
pushf
cmp
mov
add
shl
jo
stos
jbe
arpl
mov
fwait
lock
mov
mov
pop
fstl
and
das
add
and
push
sti
cmpsl
push
mov
filds
adcl
add
add
add
mov
movb
fisubl
push
cmpsb
insb
inc
loope
pop
add
enter
pushf
lcall
lock
pusha
mov
pop
dec
push
movsl
hlt
fwait
mov
fists
punpckhwd
or
ss
ljmp
mov
jne
pusha
dec
mov
mov
sub
js
dec
sbb
xchg
out
mov
test
int
mov
daa
out
sub
add
ljmp
pop
add
lds
sub
loopne
sti
ss
fmull
outsl
repnz
inc
mov
mov
mov
sbb
test
ret
sar
xor
adc
push
leave
lcall
ss
jnp
jmp
cmp
ret
or
cmc
push
mov
push
pop
and
sbb
pusha
jno
shl
lret
dec
aas
xchg
clc
sub
add
mov
std
mov
ljmp
orb
add
pop
add
add
enter
and
insb
ljmp
fs
rcrl
popa
rcrl
repnz
bound
mov
cs
push
test
mov
sbb
mov
mov
aaa
mov
cmp
fdivs
pop
shll
push
iret
stos
pop
add
pop
sbbb
pop
nop
les
andb
cmpsb
mov
lahf
cli
or
icebp
add
jne
sbb
js
push
fdivrl
movsb
xchg
test
cmp
add
mov
mov
mov
sub
lods
ret
ss
mov
sbb
sar
hlt
scas
cs
pushf
leave
insb
mov
in
mov
adc
mov
mov
dec
imul
rorl
rcr
sub
sarl
movsb
lcall
mov
testb
and
or
xor
test
xchg
fiadds
lds
xchg
and
sbb
stc
imul
add
dec
nop
insb
fnsave
rolb
and
test
adc
lcall
inc
sarb
mov
sub
inc
jmp
sbb
shll
or
bound
push
adc
dec
mov
or
xchg
loopne
popa
ret
call
cmp
or
mov
call
xor
loope
mov
sbb
lods
daa
pop
je
fcomps
adcb
jl
jne
enter
int
jno
xor
fsubs
sbb
lock
jns
push
ja
int3
fistps
out
push
xor
pop
les
rep
jmp
push
lcall
cmp
jp
xorb
push
dec
lret
jno
adc
int
ss
cmp
loope
dec
iret
adc
orl
fldt
pop
adc
lock
or
cltd
lahf
xchg
in
mov
pusha
jecxz
push
mov
fimull
add
add
xchg
ficomps
cmp
mov
cltd
push
push
add
pop
add
add
xor
aaa
pop
scas
mov
lcall
sub
inc
jg,pt
or
int3
pop
xchg
push
fnstsw
aaa
test
sbb
sbb
mov
xor
stos
mov
rorl
sbb
mov
mov
and
mov
mov
in
ljmp
mov
pop
jo
pushf
cmp
adc
in
js
mov
frstor
js
sub
push
lds
jnp
mov
xor
into
insb
cld
movsb
jbe
push
xchg
mov
cmpsl
sarb
xchg
add
mov
hlt
or
rcl
mov
add
outsl
push
jb
sbbb
push
out
pop
dec
test
js
bnd
movsl
sbb
imul
shll
pusha
push
lret
mov
sbb
out
xor
shlb
fnstcw
push
xor
push
sbb
imul
arpl
ja
js,pn
roll
cmp
add
pop
add
add
jns
aas
jmp
ret
test
xchg
ljmp
gs
arpl
mov
adcl
lahf
dec
out
loopne
pop
loopne
ss
ds
insb
in
or
out
cmp
hlt
push
inc
and
adc
fldt
popf
test
mov
push
mov
aam
cmpsb
xor
mov
jns
movsb
pop
aam
xchg
jle
sub
xor
add
sbb
sub
adc
stc
dec
xor
mov
leave
lret
xchg
xchg
repnz
lret
jge
pop
je
adc
inc
fcom
push
cmp
pop
jne
cwtl
mov
call
int3
add
xor
sbb
shlb
shl
scas
fisttps
nop
lahf
push
rcll
sbb
adc
out
popa
xor
fnsave
out
cmp
cmpsb
xchg
lds
fisttpl
sti
jecxz
xchg
mov
add
lock
mov
sub
test
js
add
pop
add
add
insb
fnstcw
add
adc
and
scas
repnz
push
mov
dec
push
dec
mov
add
push
cltd
pop
addr16
dec
adc
ljmp
adc
hlt
or
mov
jbe
pop
addl
inc
xchg
lods
ret
aaa
mov
aam
jo
jle
rol
aaa
mov
pop
outsb
aad
and
es
pop
ret
xchg
insb
cmp
fsubr
rorb
or
mov
jge
sbb
add
fsts
and
dec
iret
dec
enter
popa
inc
push
fwait
aam
mov
rcr
mov
popf
pop
sbb
cld
insb
mov
push
loope
xchg
lds
andb
cmpsl
mov
cwtl
cmp
call
call
test
dec
push
int3
clc
and
xchg
mov
add
pop
pop
or
jg
call
fildll
ret
test
add
adc
mov
add
sti
pop
jge
divb
les
pop
add
add
cli
notb
push
pop
call
xchg
or
and
in
and
int
add
sbb
and
adc
sbb
aas
jmp
sbb
xlat
dec
imul
mov
stos
stc
adc
pop
sbb
insl
lahf
xor
icebp
adc
sbb
add
movsb
ret
mov
pop
sub
or
adc
bound
nop
ja
aam
mov
mov
cmp
or
push
testl
aam
mov
sbb
aas
inc
das
ljmp
neg
scas
fadd
add
inc
bound
pop
ljmp
in
mov
cmp
fs
jl
mov
cmpsb
mov
mov
js
mov
cmp
vmread
pop
lcall
add
aaa
lods
pusha
jae
in
adc
loope
cmc
outsb
push
pop
inc
repz
push
mov
jns
and
sub
or
adc
pusha
cltd
fsub
std
in
popf
dec
int
hlt
retw
xchg
add
pop
add
add
pushfw
pop
je
mov
push
cmp
add
ljmp
enter
xchg
dec
scas
hlt
xchg
mov
loopne
add
andb
inc
push
push
sbb
addr16
push
sub
push
mov
add
push
add
fstl
xor
loope
cld
pop
xlat
stc
and
push
iret
inc
or
cmc
test
inc
push
lods
das
cmp
nop
add
dec
push
mov
sbb
fisttpll
push
or
pop
pushf
aam
adc
dec
mov
iret
lcall
shrl
leave
outsl
mov
in
mov
int
cmpsb
mov
push
mov
mov
sbb
add
leave
call
sar
xor
pop
jmp
scas
add
jg
orl
ss
cli
fs
mov
ja
dec
sub
in
xor
repz
jmp
and
dec
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
movsl
icebp
fcomps
lret
mov
out
xor
adc
adc
test
mov
cmp
or
js
iret
mov
jae
pop
leave
sub
mov
add
jnp
test
sbb
sbb
inc
inc
loope
into
jb
xchg
lahf
mov
mov
pop
add
adc
mov
subb
les
sbb
push
mov
in
outsl
std
hlt
pop
add
js
int
pop
push
stos
call
jmp
aaa
and
faddl
rcrb
jg
xchg
sbb
lcall
movsl
cmc
les
inc
xchg
lea
fidivs
or
mov
mov
dec
sub
mov
jae
xchg
inc
bound
rorb
fcomps
mov
pop
xchg
mov
in
fcoml
cmpsl
popa
stos
cmp
push
mov
jge
lds
jmp
mov
movsl
add
push
sti
das
ret
lods
daa
ja
je
xchg
xor
add
add
add
adc
fld1
icebp
into
stos
test
dec
jno
push
pop
lcall
jmp
rcrb
rorl
adc
sbb
rcl
adc
xor
lret
movsl
mov
fs
testl
push
ficoml
xlat
push
orl
test
pop
cmp
aaa
jecxz
pop
fiadds
and
jle
mov
js
dec
aad
xchg
in
stc
xchg
jge
pushf
push
sbb
pop
fcmovnb
sbb
fadds
sahf
mov
mov
pop
pop
lret
pop
inc
sub
xchg
sub
stc
loope
cmc
xlat
iret
negb
dec
jnp
sarl
mov
push
mov
fcoml
out
js
mov
pop
sbb
add
in
dec
loopne
negl
push
cli
imul
iret
rorl
xor
scas
push
pop
mov
add
cmp
sti
aad
loopne
mov
add
pop
add
add
jmp
pop
push
push
ret
cld
aas
lock
daa
pop
hlt
jl
cmp
xchg
call
call
jge
mov
shlb
popf
or
es
push
push
jb
push
not
in
push
and
mov
shll
test
stc
outsl
int3
aad
ret
sub
jg
scas
add
and
xor
xor
insl
adc
lods
rcl
pop
and
xchg
arpl
mov
cmpsl
jg
cmpsb
insb
icebp
ret
outsb
incl
mov
adcl
xor
cmpsb
rcll
mov
jo
dec
sti
cli
inc
mov
data16
sbb
cmp
ret
enter
movsb
out
movsl
and
inc
mov
pop
insb
movsl
testl
popw
pop
dec
ja
or
push
int
jo
rcrb
add
mov
push
xor
repnz
cmp
incb
ljmp
arpl
aam
mov
add
add
add
xchg
lock
mov
out
xor
cwtl
cmpsl
arpl
icebp
mov
mov
cld
push
xchg
jl
and
loope
jmp
push
mov
jecxz
cmp
inc
pop
loop
sub
dec
imul
pop
roll
jp
leave
or
cld
aam
cmp
clc
xor
vandnps
jg
cmp
scas
ficomps
xor
psubq
gs
cli
lahf
lods
mov
addr16
nop
loope
insl
sub
out
fmuls
hlt
adc
dec
fadds
push
add
cld
mov
fisubrl
cmp
inc
push
and
kshiftlq
jae
jo
mov
xchg
mov
push
ds
test
loopne
sarl
orb
test
inc
mov
xchg
mov
cmpsl
pop
arpl
mov
inc
sub
mov
add
divb
rclb
fwait
aad
push
sub
add
add
add
or
mov
ret
push
inc
fdivl
stos
dec
in
xchg
fldcw
aam
dec
test
and
lock
loop
xor
aam
jb
xchg
xchg
addr16
add
pushl
add
xor
mov
inc
pop
adc
xorb
aam
pop
mov
mov
fcmovnbe
xor
cmp
mov
inc
xchg
jne
jb
push
leave
repz
idivl
sahf
fwait
cmpsb
cmpl
nop
mov
movsl
cmpsl
lret
insb
clc
rcr
ficompl
sbb
std
push
filds
test
cltd
push
or
pusha
pop
adc
cmp
out
mov
aaa
lock
ljmp
popf
mov
rcrl
in
pminub
mov
test
and
mov
push
cmp
push
adc
push
xchg
inc
in
jmp
push
add
dec
push
cmp
push
ljmp
jl
dec
jbe
idivl
mov
or
add
pop
add
add
insl
pop
push
push
rcrb
aaa
ret
push
jnp
xor
jne
loopne
sub
shlb
lret
xchg
daa
aad
movsb
popa
int3
popf
xchg
cmovge
test
scas
mov
pop
mov
bnd
pop
sbb
push
mov
cmp
stc
je
add
cmp
add
xor
adc
ss
dec
popa
push
inc
mov
hlt
push
scas
in
xor
dec
insb
adc
jge
fidivrs
jne
roll
xor
out
ljmp
fs
xchg
lahf
imul
jg
out
outsl
decl
rolb
in
mov
pop
loopne
and
das
pop
cmc
jo
loop
pop
test
cmp
mov
mov
xor
pop
push
dec
rol
push
xchg
lods
arpl
push
jge
mov
cltd
loopne
mov
dec
inc
cltd
call
sub
inc
push
hlt
imull
fldcw
mov
repz
mov
pop
xchg
mov
sarl
add
outsb
sub
stos
fs
push
pop
or
repnz
mov
add
pop
add
add
mov
fdivrl
daa
pop
or
cmp
fwait
cmp
cs
mov
sub
enter
mov
adc
mov
call
sarb
xlat
inc
add
js
add
sbb
into
and
dec
pop
in
mov
pop
jae
push
negb
and
push
cwtl
out
jl
mov
arpl
cmp
ss
inc
jne
push
inc
loop
and
clc
sbb
mov
aad
mov
das
cmp
hlt
xor
mov
xchg
aaa
cmp
hlt
cmp
xchg
dec
push
mov
fldl
lds
test
repnz
push
add
in
lret
xlat
sub
pop
mov
sub
outsl
sbb
ljmp
adc
cmp
dec
mov
pop
unpcklps
jmp
mov
jno
dec
cmpsb
cld
int
dec
add
add
insb
pop
pushf
scas
fistpll
inc
ljmp
add
pop
add
add
xor
pop
call
sub
xchg
push
xor
mov
xchg
mov
pop
into
push
or
xchg
repnz
adc
pop
mov
cmpsb
or
sbbb
popf
fdivrl
into
aaa
gs
bnd
push
popl
inc
insb
push
push
enter
cmp
sahf
lea
inc
fs
jnp
stc
cmp
cld
fmull
and
sub
cmpsl
inc
call
jns
pop
xchg
iret
sbb
in
aaa
mov
outsl
iret
push
add
addl
repnz
loopne
in
out
push
and
je
cltd
shlb
das
jno
sahf
out
inc
dec
dec
psubd
incb
mov
push
sbb
inc
stos
inc
data16
addr16
sbbl
aad
clc
hlt
shr
fs
xor
or
push
xor
test
sbb
jnp
jnp
cmp
out
lahf
push
pop
lret
fsubrl
add
add
add
lahf
push
lahf
repnz
jle
addr16
loopne
mov
jge
mov
stos
movsb
mov
or
mov
adcl
ds
ss
mov
out
ret
push
pop
xor
cwtl
push
push
add
adc
jge
lret
stos
jb
testl
icebp
push
psrlw
cld
loopne
test
mov
inc
xchg
pop
cmp
xchg
jae
pop
aaa
xor
push
lret
pop
jmp
ljmp
cmp
cmp
in
and
rclb
ret
loope
or
in
adc
mov
sub
or
arpl
ja
insb
dec
mov
iret
xchg
push
into
pop
dec
lods
mov
jg
notb
rcll
mov
mov
cmc
inc
adc
xchg
xchg
lret
mov
in
inc
jp
push
in
nop
lock
xorb
mov
push
inc
test
inc
lret
xchg
call
add
adc
dec
ja
aas
mov
cmp
add
add
add
push
xchg
fisttpll
scas
inc
in
xchg
pop
adc
pop
pop
xchg
inc
popa
fstpl
xor
add
cmc
xchg
pusha
add
daa
push
add
jecxz
lds
pop
mov
xchg
mov
jg
repnz
dec
and
cmp
aad
cs
cwtl
icebp
pop
mov
pop
imull
dec
popf
add
aaa
xor
fdivs
fnstsw
adc
or
fldenv
and
popa
aas
stos
dec
or
stos
jne
leave
jle
imul
push
dec
leave
scas
pop
pop
fisttpl
aas
inc
push
movsl
or
sbb
sbb
clc
mov
add
pop
jmp
cmc
stos
add
adc
dec
xchg
setg
jne
in
and
push
jmp
push
orl
test
test
aam
adc
jnp
lods
sbb
xor
mov
repz
pop
cmp
mov
add
repz
cmp
lods
repz
push
insl
pop
sarl
add
pop
add
add
cmpb
iret
mov
push
sbb
arpl
mov
std
jecxz
movsl
mov
dec
das
mov
movb
inc
data16
add
test
lret
cld
dec
and
icebp
loop
jmp
jb
add
les
paddd
jnp
jno
popf
xchg
insl
fs
insb
inc
aam
fidivrs
ret
stos
imul
mov
sbb
pop
cmp
adc
mov
lahf
add
imul
push
dec
pop
or
mov
fsincos
inc
scas
mov
inc
bound
jbe
xchg
lods
out
mov
pop
out
cmp
ret
add
pop
add
pop
mov
sub
fucomi
fnsave
sti
push
push
popw
icebp
push
dec
sahf
les
dec
stos
push
dec
or
add
push
xchg
loopne
je
sbb
jge
jno
push
mov
xchg
pop
imul
and
push
pusha
aas
mov
mov
jl
add
daa
push
cld
push
std
jmp
pop
adc
and
fidivrl
add
add
add
jge
js
inc
mov
dec
cs
out
fdivrl
pusha
movsb
in
pop
ljmp
or
mov
sbb
outsb
test
jns
test
imul
negl
movsl
xchg
dec
dec
test
outsl
and
mov
out
es
cmp
daa
cmpsl
int
add
popf
dec
mov
cmp
cmpb
mov
dec
dec
clc
jns
pop
mov
add
mov
jb
inc
loopne
ljmp
repz
and
xchg
in
fwait
jmp
jo
cltd
mov
mov
shl
test
lcall
adc
sub
je
xor
inc
hlt
test
xchg
add
ret
pop
testb
cmpsb
sub
sub
mov
dec
push
outsb
xor
jbe
xchg
xor
xor
and
cltd
jno
sahf
and
cwtl
dec
xchg
pushf
inc
pop
push
jl
std
inc
roll
adc
add
add
sbb
dec
push
out
jge
es
jns
cmp
add
xchg
mov
jno
fidivs
lods
and
in
negb
pop
dec
loop
cmp
cmc
stos
xchg
mov
mov
stos
jle
xor
stos
ljmp
jno
pop
stc
inc
jns
in
jp
mov
das
xor
and
jge
mov
push
jo
push
iret
dec
add
in
dec
push
jecxz
or
and
cmp
push
iret
jp
cmp
shlb
dec
pushf
loope
pop
dec
test
mov
mov
roll
sub
lret
in
inc
lahf
xorb
inc
xor
or
add
xchg
cmp
mov
xor
xchg
sbb
pop
daa
add
and
inc
pop
adc
add
sub
in
lahf
addr16
inc
xchg
mov
idiv
pop
push
cld
int
xor
push
mov
push
cmp
adcl
adc
sbb
stos
add
push
mov
mov
movsb
hlt
lods
call
add
add
sbb
pop
dec
dec
les
sub
adc
adc
movsl
shll
out
push
mov
mov
dec
lcall
and
jae
and
cmp
mull
mov
scas
int
add
shlb
loop
cmc
pop
fiadds
stos
sti
mov
fmuls
mov
xor
dec
stc
hlt
bound
popf
mov
mov
xor
and
les
xor
call
xchg
mov
adc
cmp
cmpsb
push
sahf
mov
das
ret
cmp
movsl
sub
lds
xor
push
pushl
ljmp
ret
popa
out
fsubl
cmp
popf
dec
outsb
test
sbb
adc
jb
loop
add
mov
call
adcl
mov
sbb
sarl
icebp
shr
loope
and
mov
ja
jg
xchg
cmp
push
dec
out
aas
add
pop
add
add
sbb
rcr
arpl
xchg
in
push
test
adc
aam
adc
scas
xchg
or
jo
test
ljmp
es
jnp
xor
pop
je
pop
xchg
lret
and
lea
arpl
lock
adc
jne
iret
mov
clc
ficomps
mov
pop
mov
sub
shrl
mov
sbb
stos
stos
jp
lock
and
ljmp
push
cmp
mov
jmp
decl
xchg
add
jg
sbb
sbb
cmp
inc
loope
sbb
mov
sbb
dec
mov
sbb
rolb
test
jno
stc
pop
in
inc
push
les
and
or
pop
rolb
pop
jl
dec
jp
add
push
dec
lret
jmp
imul
push
sbb
jne
inc
add
pop
add
add
push
add
fwait
jmp
cmp
push
dec
fmuls
cmpsl
jg
fs
call
lret
adc
sub
rclb
pop
pop
in
mov
adc
imulb
inc
lret
mov
scas
daa
sbb
mov
lea
sub
cmp
push
ret
pop
dec
loopne
lcall
dec
jge
ss
cmpsl
popa
loope
push
into
popa
rorb
enter
xchg
or
daa
mov
push
add
imul
jo
xor
cmp
addr16
xor
push
test
mov
sub
add
xchg
xor
xor
xchg
sub
hlt
adc
icebp
sub
cltd
pop
cmpsb
faddp
or
push
sbbl
stc
loopne
out
addr16
cmp
imul
orb
sbb
sbb
jno
lds
cmc
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
mov
xchg
jnp
or
sbb
push
cmc
test
fucomp
scas
stos
mov
outsb
aas
int
push
mov
in
pop
mov
push
xchg
je
xor
or
and
in
sbb
fwait
add
insb
imul
pop
mov
dec
mov
cmp
jne
and
add
push
inc
mov
hlt
js
loop
add
dec
xor
inc
adc
mov
test
int
loope
add
faddl
jle
sbb
fs
in
xlat
mov
lods
cltd
out
loop
ror
mov
stc
push
mov
push
and
adc
inc
lea
bswap
dec
subl
iret
fistpl
leave
movsl
xor
push
loop
mov
scas
xchg
adc
rcrl
push
push
or
xchg
push
mov
sub
ret
xor
xor
cmp
mov
das
ret
sub
loope
sub
jns
imul
lret
add
add
pop
add
add
and
cmpsl
mov
xor
mov
sbb
dec
sub
or
mov
daa
clc
mov
gs
xchg
cmp
test
data16
in
mov
xchg
shlb
sbb
test
pop
adc
aas
dec
rorb
mov
movhps
add
subl
jmp
rorb
xor
insl
fsubrs
push
mov
fildll
xor
push
in
loopne
or
pop
loopne
sbb
nop
divl
cmp
stos
jecxz
dec
lods
push
dec
mov
cmp
aad
jne
inc
ja
loope
out
mov
out
lock
cltd
sti
and
jl
dec
aaa
inc
dec
or
xor
dec
adc
in
ret
cmpsb
cs
and
jl
sbb
outsl
cmp
fwait
jns
push
andb
jne
fistps
outsl
outsb
or
add
ret
jg
jmp
repnz
cmp
pop
or
pop
add
add
clc
je
shl
or
add
mov
dec
mov
inc
inc
xor
mov
in
mov
sarb
mov
jb
lret
jmp
stc
xor
mov
or
shll
enter
sbb
jecxz
bound
test
push
xchg
cltd
ret
sti
xor
add
outsb
fdivp
lahf
inc
jecxz
xchg
mov
rolb
inc
clc
or
sbb
or
xchg
mov
aam
out
loopne
es
mov
into
xchg
in
mov
orb
mov
or
in
cmp
xlat
out
sbb
cmp
je
aad
movsl
mov
fnsave
jmp
data16
push
jae
mov
mov
jns
lret
mov
fidivs
push
mov
push
mov
dec
fcompl
scas
shr
cmc
mov
addl
adc
mov
and
fstps
jns
adc
add
add
add
adc
cmp
inc
cmpsl
xchg
and
push
push
test
cltd
imul
popa
or
fimuls
fstp
leave
adc
jno
es
dec
imul
rorl
and
pop
dec
int3
inc
adcb
push
pause
ficoms
dec
mov
sub
or
inc
sub
or
inc
inc
cs
insl
xchg
scas
lea
dec
mov
and
jo
and
xor
adc
jge
sti
mov
sbb
sbb
or
adc
mov
adc
adc
push
xchg
and
lret
jne
fstpl
in
in
es
rolb
and
xor
out
mov
ja
dec
or
subb
sbb
iret
mov
inc
xchg
movsb
mov
shrl
insl
mov
add
pop
lahf
flds
fstpl
inc
icebp
hlt
gs
adc
ficoms
sarl
add
add
add
or
stc
fcmovu
arpl
mov
lret
cmp
fs
jnp
push
xor
fcomip
pop
dec
rcll
dec
dec
push
test
shlb
loop
add
enter
imul
out
or
push
repz
cmp
cmp
jecxz
xor
xor
inc
shrl
mov
push
xchg
cmc
fmull
sub
sub
or
or
test
sbb
mov
movsl
int3
js
outsb
fldt
jle
adc
jmp
inc
pop
js
dec
insb
mul
lahf
ja
xchg
push
xchg
cmp
jge
push
outsl
fbstp
push
push
lret
mov
cmp
push
mov
dec
cmp
xchg
rorb
jmp
push
gs
add
cmp
cld
pop
adc
sub
test
je
cmc
xor
mov
imul
out
lcall
shrl
mov
pop
xchg
mov
fwait
hlt
je
push
add
aas
gs
mov
xor
cmp
inc
add
pop
add
add
lock
xor
icebp
imul
xlat
ret
imul
mov
or
push
addr16
cmp
push
sbb
data16
into
nop
lahf
jb
or
jns
cmp
mov
dec
filds
push
inc
mov
or
lods
jb
push
icebp
hlt
js
or
mov
cmc
dec
mov
insb
adc
mov
inc
stos
movsb
rclb
fnstsw
ds
or
pop
loopne
xlat
inc
popa
sub
loopne
scas
mov
js
mov
mov
fcomp
push
sub
stos
mov
pop
dec
das
pop
std
shl
cltd
jb
in
lret
gs
inc
lock
xor
sub
mov
outsb
mov
lock
xchg
lock
add
jecxz
int3
cmp
push
sbb
mov
sahf
cld
jnp
sti
aad
and
orl
add
out
fnstsw
fimuls
daa
dec
add
pop
add
add
add
jecxz
push
adc
ja
and
fwait
popa
out
mov
xrelease
jl
adc
in
cld
add
lds
or
les
xchg
xor
pop
xor
enter
out
stos
stos
addr16
and
dec
cmp
ja
gs
or
cmp
jl
cmp
jmp
sbb
out
nop
fs
inc
jne
lock
sub
mov
cli
add
mov
in
adc
inc
cmp
inc
les
sub
cmp
arpl
iret
orb
inc
add
hlt
out
lahf
and
movd
hlt
adc
push
push
popf
xor
mov
mov
lds
pop
popf
pop
xchg
lret
mov
leave
pop
cmpsb
pop
dec
imull
inc
outsl
or
mov
lds
aas
cltd
or
mov
add
out
xchg
dec
rolb
fildll
mov
sub
cs
add
pop
add
add
es
aad
mov
call
and
push
or
test
push
mov
inc
outsb
or
inc
mov
xchg
ficomps
lock
imul
adc
adc
in
mov
or
mov
pop
test
je
xor
xchg
inc
or
mov
dec
cli
je
test
inc
jbe
ficoml
fs
sbb
fstpl
decl
mov
mov
add
rcrl
xchg
or
int
stos
add
mov
push
pop
inc
sub
dec
pushf
mov
inc
push
sti
out
add
sbb
ficoml
pusha
xchg
push
pop
push
dec
cld
insb
jp
addr16
cmp
cli
outsl
gs
pop
dec
psubd
lret
es
ret
test
jnp
dec
jns
add
out
jo
add
jmp
out
aas
push
xor
add
shrl
add
pop
add
add
push
sub
jno
subl
mov
arpl
sub
shr
jnp
sarb
lcall
pop
aaa
adc
xor
pusha
xlat
lds
adc
inc
cmp
push
cmpsl
xchg
add
lahf
jno
orl
sbb
sbb
sahf
iret
clc
mov
mov
or
fcmovb
sbb
dec
mov
xor
loope
push
les
shll
repnz
or
sub
btc
fimull
and
mov
add
flds
fs
sbb
mov
out
mov
and
add
idivl
test
in
loop
clc
in
in
stc
ret
mov
push
cmp
das
insl
pop
or
push
sub
jle
das
cmp
mov
inc
or
xor
or
cmp
sub
jmp
push
add
imul
out
mov
xchg
adc
add
pop
add
add
sbb
pushf
in
loope
into
or
into
ror
loope
sahf
jae
enter
sub
sti
in
push
dec
xchg
inc
and
orb
negb
mov
int
dec
movsb
push
ret
xchg
mov
pop
mov
rcrl
add
out
push
mov
xlat
cmp
xor
cmp
lea
stos
out
loop
out
movups
jp
mov
sbb
daa
pusha
jns
scas
xchg
push
xchg
and
push
lods
jge
or
aaa
dec
lret
jl
lds
mov
adc
les
inc
ret
inc
lock
and
hlt
sti
sbb
arpl
cmp
adc
out
sbb
mov
scas
insl
cmp
lds
xchg
xchg
push
out
lret
lcall
aas
pop
out
mov
pmaxub
add
add
add
add
dec
stc
mov
pop
sub
cmp
dec
pop
inc
dec
add
pop
add
add
pop
adc
inc
adc
jb
shl
jns
cld
pop
add
pusha
mov
xchg
insb
test
out
imul
test
idivl
jns
cmp
adc
adc
pop
fnstsw
sbb
addr16
push
in
dec
int3
loop
enter
cld
hlt
jno
xchg
into
lret
movsl
das
ficomps
iret
dec
in
mov
daa
jne
cs
or
jno
or
add
mov
dec
mov
sbb
cs
lea
inc
adcb
mov
xor
lahf
or
inc
pop
push
gs
cmp
fs
xchg
cli
arpl
push
xor
decl
call
push
add
cmp
xor
hlt
jmp
cltd
mov
inc
add
sbb
int
ret
inc
aad
mov
outsb
xchg
pushf
sub
arpl
adc
or
push
mov
add
jg
cld
dec
loope
sbb
dec
add
pop
add
add
push
sarl
xchg
mov
push
sbbl
push
mov
inc
inc
cld
test
leave
mov
cwtl
pushf
cwtl
sub
les
mov
fildll
pop
fsubrs
stc
cmpsb
shrl
mov
ror
divl
cld
add
mov
jb
pop
mov
out
dec
jns
lahf
xchg
pop
sbb
hlt
or
loopne
cmp
fiaddl
add
cmp
gs
xor
xchg
xchg
lea
push
inc
lahf
movsl
inc
mov
push
dec
sbb
popa
or
cmp
sbb
dec
mov
fucomip
test
addr16
sbb
insl
push
lock
and
je
aaa
cltd
xor
call
adc
stos
pop
lret
xchg
or
cmp
mov
test
rorl
mov
in
insb
cltd
insl
dec
push
repnz
adc
rclb
mov
das
in
lret
jb
xor
int
mov
xchg
mov
mov
mov
loopne
dec
add
pop
add
add
sub
push
imul
push
ljmp
xchg
aaa
xchg
xchg
sub
jge
popf
aad
pop
leave
sbb
enter
outsl
add
out
les
lret
hlt
add
mov
adc
loopne
xlat
sub
jnp
mov
movsb
xchg
or
jbe
sbb
add
xchg
imul
loopne
aad
cmp
pop
pushf
pop
pop
add
pop
cmp
and
mov
and
fcmovne
push
and
mov
jp
xor
xchg
int
push
and
aad
xchg
into
xor
popa
std
outsb
push
pop
adc
imul
dec
out
add
jae
sbb
int3
push
cmp
xor
cltd
adc
xchg
pop
mov
nop
in
scas
test
loopne
mov
gs
pslld
cmp
movsb
mov
aas
cltd
cmpb
sub
xor
pop
xor
imul
add
or
mov
fwait
mov
jbe
pop
dec
add
pop
add
add
fildll
mov
clc
lds
adc
fnstcw
cmp
and
testl
lods
mov
push
int
jp
pop
in
xor
push
mov
movsb
add
pop
cmp
xchg
scas
inc
pop
mov
fs
or
insb
sbb
jb
cmp
and
cmp
sbb
adc
sbb
pop
imul
adc
arpl
inc
mov
dec
aam
iret
out
or
push
repz
into
xor
dec
rolb
mov
and
and
out
xor
jl
loop
xlat
mov
je
dec
fistps
cltd
add
xor
dec
mov
adc
aam
xchg
xor
mov
nop
test
lcall
rorb
ds
add
fsubrl
mov
out
cmp
cmc
push
adc
xchg
insb
mov
push
add
pop
add
add
dec
gs
fnstsw
in
lods
rorl
bound
je
push
pop
dec
or
jmp
inc
push
arpl
sub
popf
adc
inc
iret
dec
add
into
jnp
jo
push
cmp
and
mov
inc
mov
pop
arpl
mov
shlb
push
mov
inc
icebp
lods
xchg
pop
xchg
xor
inc
dec
mov
xor
sub
mov
push
push
mov
call
stc
mov
addr16
and
insl
push
loopne
ja
xlat
mov
xor
fs
data16
add
out
xor
pop
add
aam
sbb
shlb
push
xchg
dec
test
in
push
jge
orb
mov
into
xlat
dec
push
pop
insb
sti
sub
jp
sbb
push
dec
xlat
fs
and
jnp
or
addl
xchg
push
icebp
jo
jmp
and
pop
or
and
add
push
shll
out
je
pop
inc
and
jnp
push
add
pop
add
add
imul
and
rol
push
insb
es
sbb
lret
mov
jne
sti
xlat
mov
gs
inc
inc
repz
andb
inc
clc
sbb
mov
js
pop
add
imul
adc
mov
nop
popf
mov
scas
inc
imul
sub
movsb
jl
stos
nop
add
mov
inc
push
imul
sbb
lock
popa
int3
addr16
nop
sahf
shll
cmp
mov
dec
mov
loope
outsb
sar
adc
inc
shrb
shl
and
addr16
jecxz
das
pop
push
pop
fisubrl
movsb
jb
in
mov
fidivl
cmp
inc
mov
adc
mov
and
cli
or
mov
popf
or
repz
je
es
dec
sbb
add
cmpsl
pop
fwait
call
inc
insl
mov
popa
lcall
ret
in
mov
das
into
pop
pop
pop
push
gs
or
mov
add
out
lcall
lock
gs
push
add
pop
add
add
jp
xchg
cmp
jle
bnd
cltd
sub
sub
dec
in
xchg
inc
add
aas
jae
mov
hlt
in
into
sub
or
cwtl
insl
mov
ffree
adc
movsb
adc
xchg
repnz
fistpll
scas
test
mov
mov
adc
scas
push
cltd
and
push
jl
mov
arpl
out
cmp
jp
clc
cli
dec
ss
adc
jg
mov
cmp
ja
fists
xor
test
sti
jae
sahf
add
arpl
dec
mov
cli
in
mov
aad
pop
mov
jle
adc
sahf
mov
and
outsl
lock
lahf
pop
movb
lahf
repz
andl
mov
mov
jl
mov
adc
sti
sbb
dec
iret
mov
cld
xchg
loopne
mov
sarb
jne
bound
imul
imul
add
add
add
cmpsb
insb
mov
ja
push
shll
dec
mov
pop
cld
sbb
push
test
jno
add
pop
pop
and
scas
outsl
test
mov
cmc
pxor
ret
xchg
push
inc
pop
fidivrl
stc
cmc
jo
mov
cmp
or
icebp
push
enter
adc
movl
mov
pop
filds
jge
sub
pop
test
xchg
xchg
and
xlat
fs
mov
in
xor
in
pop
sbb
in
cmp
gs
cmc
fists
pop
inc
sbb
sub
and
mov
rcll
push
xchg
mov
jne
out
ds
hlt
xchg
push
fiaddl
stos
mov
lods
xchg
adc
movsl
mov
dec
xchg
aam
sub
daa
cmp
cmpb
popa
mov
xchg
fidivrl
in
jno
cld
add
inc
mov
lds
xlat
in
dec
add
fwait
cmp
xchg
xchg
dec
movsb
xchg
adc
push
add
pop
add
add
jbe
lret
popa
pushf
sub
psllw
into
mov
sub
dec
pop
cmp
lods
xchg
movsl
sub
adc
push
jnp
stos
sbb
mov
in
mov
stos
packssdw
aad
popf
loop
outsl
int3
mov
push
popa
lods
rcll
stos
add
xor
mov
fcmove
movsb
in
pop
nopl
pushf
push
popa
ss
pop
fcomip
movsb
push
inc
xchg
sub
aam
outsb
jp
sbb
arpl
leave
and
aam
enter
cmp
dec
pop
dec
jmp
dec
adc
inc
mov
xor
sbb
in
adcl
data16
mov
mov
out
jl
out
xchg
sub
aam
sbb
mov
int3
jb,pn
aam
imul
or
mov
jp
jno
cmp
xor
sub
and
push
xchg
les
fwait
jnp
sahf
stos
into
push
ror
mov
inc
push
clc
mov
mov
pop
fists
push
add
pop
add
add
iret
repnz
cmc
imul
nop
add
xor
add
out
cmp
sbb
sub
pop
fcoms
pop
out
or
fstp
dec
and
and
fisubl
mov
add
imul
sbb
or
shlb
enter
or
push
js
scas
jle
xchg
mov
pop
inc
std
imul
inc
pop
ret
xchg
jmp
out
lcall
les
push
aad
jle
push
das
sub
cs
iret
loop
mov
add
push
adc
mov
repz
cmpsl
or
int
pop
pslld
inc
pop
adc
lock
imul
aam
adc
xchg
cwtl
pop
sub
push
lea
sahf
push
fbstp
das
mov
mov
mov
mov
scas
xchg
push
adc
out
mov
outsb
ss
mov
add
add
add
sti
daa
adc
mov
mov
or
das
cwtl
jno
call
cwtl
shrb
sub
in
mov
jno
sub
cli
push
fsubrs
movsb
pop
cwtl
jg
inc
movsb
lcall
aaa
stos
nop
mov
arpl
cld
mov
adc
pop
lcall
adc
pop
or
sub
jecxz
xchg
scas
jp
dec
xor
ret
lea
pop
jae
fidivs
es
shlb
mov
int
add
lock
cmp
inc
ljmp
test
and
fwait
sbb
dec
jb
test
cltd
sbb
cmpsb
or
jge
push
outsl
mov
sarb
sarb
inc
lods
adc
mov
in
fiaddl
mov
pop
sub
dec
shll
shrl
push
and
mov
add
test
lcall
xlat
add
mov
btc
mov
nop
push
add
pop
add
add
push
pop
pop
pushf
loopne
xor
loopne
add
ljmp
sbb
test
mov
adc
int
jl
fisubrl
daa
int3
mov
xor
cwtl
shll
lcall
lock
mulb
inc
sarb
test
add
cmp
nop
pop
in
movsl
sub
outsb
or
xlat
out
cmp
xor
cmpsl
jae
out
rep
lret
ret
add
dec
dec
jl
test
in
andb
fsubrl
int3
adc
cltd
and
insl
setg
sbb
push
mov
imul
mov
push
mov
mov
data16
stos
outsb
sbb
pop
in
adc
imul
push
mov
mov
mov
ja
movsb
mov
pop
inc
std
roll
je
out
add
inc
enter
cmp
test
xor
mov
and
das
jmp
pop
lods
pop
xchg
pop
add
pop
add
add
and
cld
adc
cli
jmp
pop
xor
icebp
xor
out
movsl
sub
sbb
fcmove
inc
jae
fildll
and
lahf
push
xchg
pop
jns
popa
arpl
pushf
jmp
mov
and
test
lea
rcll
jnp
ficompl
fidivrs
dec
mov
dec
call
faddp
xchg
push
add
jo
sbb
out
leave
fidivs
inc
shrl
adc
cmpsl
clc
cmp
pop
popa
lret
bound
jne
or
push
add
pushf
xlat
outsb
jno
sti
mov
xchg
xor
fstps
pop
dec
cmp
pop
test
ret
cmpsl
sbb
into
aas
adc
ret
mov
pop
cld
js
xlat
mov
jae
mov
lock
inc
xor
xchg
xlat
xchg
push
dec
and
push
push
mov
incl
add
movsb
jae
jnp
mov
jne
ret
loope
sahf
pop
add
pop
add
add
repnz
aad
test
pop
in
cmp
decb
dec
and
movsl
mov
fstl
or
and
cltd
sbb
into
mov
outsl
mov
pop
fcompl
dec
outsl
fildl
into
rcr
xor
xor
into
clc
stos
mov
dec
imul
je
mov
cli
sbbl
icebp
mov
cmp
xor
sbb
cmp
repz
aad
lret
mov
stos
mov
cwtl
lods
push
out
nop
sub
inc
aas
popl
add
js
or
iret
pop
push
stos
int3
adc
xor
jo
scas
repz
sbb
pop
xchg
add
mov
cmp
push
and
xor
ja
cmp
dec
cmc
pop
das
ljmp
push
sub
or
sarl
dec
lcall
add
add
xor
std
test
shl
movsl
pop
add
pop
add
add
test
and
pop
sub
leave
cmp
scas
imul
ljmp
jl
mov
lds
and
gs
push
pop
mov
add
cmp
xchg
in
mov
loope
dec
clc
mov
outsl
int
add
xlat
in
inc
inc
imul
sub
fists
insb
andb
jno
sbb
mov
sub
ljmp
les
sti
mov
iret
lcall
adc
mov
pop
mov
insl
aad
pushl
xchg
aas
or
push
sub
push
aam
inc
cmpsb
mov
mov
bound
std
outsb
push
addr16
adc
inc
xchg
jg
add
fwait
sub
das
dec
lods
aad
pusha
push
add
hlt
mov
xchg
adc
dec
lods
cmpsl
inc
clc
adc
in
inc
pop
add
mov
pop
stc
xchg
into
push
stos
lods
pop
add
pop
add
add
arpl
adc
imul
jp
insb
test
adc
icebp
fcmovnu
imul
ret
push
mov
daa
xor
lds
adc
ret
aas
call
in
pop
xor
mov
sub
xchg
xchg
enter
into
pop
mov
push
sbb
xchg
cmpsb
xor
or
mov
popf
addr16
fisubrs
sti
dec
sbb
and
jp
pop
pop
lock
mov
push
xchg
inc
inc
in
icebp
outsb
xor
or
push
sbbl
cmpsl
mov
push
addr16
shrb
stc
mov
jecxz
shr
xchg
or
cmpsl
mov
jle
lahf
in
pop
add
pop
loopne
mov
and
sbb
pop
xor
call
push
mov
jmp
mov
fidivl
aas
insl
push
loop
xchg
cwtl
jns
cmp
xor
pushl
adc
movb
add
add
push
into
push
mov
popa
inc
xchg
mov
add
pop
add
add
mov
cmp
and
popa
xchg
sarb
jae
mov
mov
adc
call
add
or
sahf
stos
fbld
mov
ds
lods
or
mov
test
fisubrs
mov
je
sbb
sub
fimuls
sub
pop
pop
test
push
adc
mov
lea
into
adc
push
out
adc
dec
dec
mov
mov
or
xor
mov
clc
fcoml
jmp
cmpps
cld
adc
mov
push
out
pop
roll
or
jo
icebp
in
repz
mov
xor
and
dec
pop
pop
cmp
adc
sbb
ret
pop
or
add
mov
jns
sti
mov
push
pop
stc
inc
rorl
mov
push
mov
pop
jne
int
mov
lds
pushf
xor
and
aaa
js
adc
push
dec
dec
push
out
pop
mov
add
add
xchg
inc
shl
xlat
mov
sub
bound
mov
add
add
sbb
jmp
popa
jecxz
gs
inc
test
adc
push
xor
out
xchg
xor
scas
mov
push
adc
cmpsb
xchg
das
jg
andl
in
in
lcall
lahf
xor
jecxz
inc
xlat
jl
mov
mov
mov
mov
sbb
mov
lods
xor
jno
lret
aam
popa
mov
or
cmp
xlat
lds
js
adc
jae
and
into
std
hlt
leave
jge
adc
movsb
out
or
ja
movsl
cmpsb
fildl
or
sahf
pop
loope
push
mov
dec
test
xchg
mov
and
scas
add
xchg
test
repz
cs
or
push
loop
xor
pop
es
xlat
jno
cmpl
mov
fsubp
ret
dec
dec
xchg
dec
das
inc
shlb
sub
pop
add
lahf
pop
lret
inc
and
add
add
add
inc
sbb
cmp
dec
mov
imul
aad
ret
leave
mov
pop
fistps
and
and
mov
xor
fwait
dec
mov
inc
clc
mov
sub
push
and
pusha
pop
iret
add
mov
insb
insb
jmp
mov
xor
scas
jne
dec
xor
add
mov
in
gs
lret
inc
pushf
adc
push
mov
push
call
out
sbb
int3
pop
or
sti
int3
nop
mov
xchg
into
orl
xor
ret
xor
bound
xchg
mov
dec
dec
add
fdivr
mov
sbb
cmp
mov
stos
int3
push
addr16
jnp
popa
leave
sbb
jae
sub
xchg
push
mov
mov
sub
cltd
call
cmpsb
into
add
loop,pt
repz
jge
push
mov
xchg
sti
fcmovnb
flds
add
cmp
das
leave
add
idiv
jg
pop
and
add
imul
add
add
nop
adc
imul
mov
mov
popa
cld
sar
add
movl
inc
mov
testl
stos
xor
jg,pn
test
mov
cs
rcl
add
pusha
push
stos
leave
popa
out
or
mov
pop
mov
xor
cltd
bound
frstor
and
ja
out
mov
or
sbb
jo
xchg
scas
lea
and
adc
loopne
test
ss
or
es
add
inc
rolb
push
mull
ljmp
loop
cmpsl
lods
pusha
in
mov
xchg
leave
cmc
into
mov
aaa
fwait
fs
in
jg
or
lret
std
pushf
neg
dec
inc
adc
mov
incl
add
push
jbe
and
mov
xchg
sub
fimull
in
inc
pop
mov
mov
loope
xor
pop
add
add
push
dec
rolb
fwait
or
cmp
mov
add
xchg
dec
push
notl
jns
out
shl
test
das
bound
mov
xor
cmp
lret
cmp
test
or
insl
sub
sub
movsb
pusha
mov
mov
hlt
in
fnstsw
push
sub
insl
push
shlb
test
mov
stos
cmpb
out
and
nop
mov
jns
jp
xlat
add
ret
bnd
mov
nop
sti
or
jle
cmp
fisubrl
mov
cld
push
mov
mov
and
dec
loop
mov
push
jp
push
jne
out
push
in
loope
lret
int
mov
pop
pop
loopne
cmpsl
xor
mov
pop
es
mov
nop
inc
loope
movl
mov
jno
push
outsl
arpl
cmp
add
aaa
aaa
addr16
ja
repnz
movsb
jle
stc
test
popa
mov
popa
add
pop
add
add
loop
xor
jg
loopne
adc
dec
ss
mov
fs
xor
jl
xor
push
stos
xchg
loopne
inc
daa
popf
loope
scas
xor
data16
ljmp
or
add
mov
cmp
xchg
mov
pop
shl
loop
adc
pop
or
add
mov
sub
popf
push
out
rorl
enter
mov
jo
push
mov
jnp
cld
mov
sti
jecxz
inc
ffree
cmp
push
push
cmp
sbb
pop
jge
xor
fmulp
leave
dec
xchg
mov
nop
push
lret
cmpxchg
cs
lret
inc
xor
ljmp
bound
xor
cwtl
add
mov
mov
mov
cmp
cmpb
or
pop
pusha
push
lds
mov
lahf
sbb
mov
and
ss
pushf
jl
cmp
add
add
jmp
sub
push
pop
mov
frstor
add
add
add
jle
pusha
data16
dec
mull
inc
inc
dec
adc
xchg
jnp
adc
sub
mov
rclb
mov
sti
push
mov
adc
pop
or
loopne
cwtl
push
jno
js
mov
sub
and
hlt
adc
fcomp
dec
mov
popf
mov
mov
push
dec
test
stos
in
insl
mov
or
jno
push
adc
lds
test
sub
xchg
or
mov
outsb
mov
adc
sub
push
adc
out
into
lret
or
scas
inc
in
pop
scas
pop
cld
jecxz
sti
xchg
lcall
bound
sbb
dec
and
jg
jns
cltd
sahf
adc
repz
pop
fcmovne
sti
test
and
bound
aad
and
and
into
pushf
mov
mov
pop
push
ret
arpl
jmp
xor
out
in
xchg
xchg
ret
mov
xchg
clc
orl
xchg
jbe
pop
inc
rcll
repnz
shll
fnstenv
dec
adc
add
pop
add
add
lock
adc
xor
stos
adc
insl
lret
jl
ljmp
xchg
cmc
pop
mov
push
pop
testl
mov
mov
sbb
jo
push
push
movsb
pop
fcmovbe
mov
push
sbb
icebp
xlat
aaa
je
adc
dec
stc
push
ljmp
adc
ficompl
and
pop
dec
imul
ja
daa
sub
lcall
mov
sbb
shlb
sbb
mov
aam
rclb
imul
mov
int
cs
fidivrl
push
mov
je
imul
cmpsb
pop
pusha
inc
movsl
shlb
cmp
shl
dec
jecxz
add
mov
sub
mov
push
xchg
subb
add
loop
sub
adc
out
mov
pop
std
or
enter
cld
je
jbe
decl
rcll
add
pop
add
add
jns
iret
mov
mov
push
pushl
dec
sub
lods
dec
sub
pop
std
push
xchg
adc
pop
fdivs
into
divb
daa
bound
sbb
test
popa
and
leave
sub
idivl
daa
cmp
minps
lahf
jns
sbb
mov
mov
js
and
insb
push
cmp
push
cmp
lods
dec
mov
add
gs
aad
push
or
inc
dec
pop
or
test
push
repnz
and
jmp
and
pop
je
lahf
mov
lahf
sbb
jmp
xchg
cmpl
mov
mov
pop
hlt
jecxz
xor
pop
stos
sahf
arpl
cmp
inc
xor
ljmp
fstl
fstl
test
or
iret
inc
leave
jge
mov
inc
jns
ss
loopne
mov
sub
call
xor
mov
add
push
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
or
test
in
mov
cmp
or
cmp
mov
push
or
js
jne
outsl
jg
pop
jle
jno
jo
sub
push
mov
jno
xor
std
shrl
mov
arpl
or
ret
xlat
xor
stos
repnz
xor
ret
dec
loopne
mov
mov
sub
stc
push
data16
or
push
aaa
push
int3
mov
sbbb
mov
jecxz
fwait
or
dec
cmp
or
mov
adcl
test
insl
add
and
cmp
jo
cmp
sahf
xor
push
adc
sarl
or
adc
or
mov
aas
rolb
mov
es
cmp
dec
push
push
test
push
dec
pop
cltd
sti
leave
faddl
mov
mov
push
jg
shll
stc
add
pop
add
add
pop
mov
jnp
mov
sub
mov
pop
jg
inc
iret
addr16
adc
inc
xchg
cmp
repz
jno
clc
dec
add
pop
cmp
push
mov
cmp
lret
gs
mov
jle
inc
test
es
les
dec
outsl
or
outsl
rorb
xchg
mov
pop
cmp
cmc
xchg
sbb
das
inc
dec
ss
das
cmp
pop
add
test
shlb
mov
adc
inc
repnz
mov
das
sahf
ret
imul
xchg
xor
sbb
mov
xchg
mov
add
pop
push
in
rcl
lds
stos
clc
jge
nop
adc
movsb
ljmp
sub
inc
cmpsb
iret
dec
xchg
mov
stos
frndint
ret
inc
rcrb
mov
lret
cwtl
sub
cltd
fstps
cmpsb
xor
add
mov
fucomip
lock
cmp
mov
lahf
add
add
add
add
adc
cmp
popa
add
sahf
addr16
pop
push
fisttpl
lods
xor
shlb
sub
mov
repz
in
add
outsb
and
scas
lods
scas
movsb
notl
leave
loopne
push
add
cmpsl
std
xchg
xor
mov
popf
out
into
add
movsb
lds
movsl
sbb
pusha
cmp
scas
mov
pop
incl
into
nop
adcb
js
push
in
jle
cld
aaa
and
sbb
add
jecxz
and
lods
adc
and
lock
es
fs
cli
dec
ficoml
out
fdivrs
mov
lea
adc
sub
xor
and
pop
testb
add
inc
xor
jno
xor
jnp
icebp
rcrb
cmp
mov
push
pop
lds
out
adc
scas
xor
pop
in
shlb
movb
add
add
dec
out
iret
jmp
das
mov
loopne
pop
imul
add
push
gs
xor
loope
pop
sbb
mov
imul
pop
rorl
and
lcall
test
mov
test
xchg
cld
dec
ret
lea
in
mov
xor
add
test
jmp
sbb
pop
adc
sbb
adcb
add
sub
mov
sbb
or
insb
push
sub
out
aas
dec
xor
jne
mov
push
or
xlat
out
xchg
jl
repnz
enter
mov
pop
roll
aad
mov
stos
imul
aam
push
frstor
xchg
push
or
sub
xchg
cmp
mov
adc
nop
or
jge
bound
sub
icebp
shlb
add
push
inc
jno
out
stos
adcl
cmp
ret
add
aaa
and
cmpsb
push
jnp
std
cmpsb
pop
or
lret
adc
push
push
add
add
add
mov
imul
int3
mov
test
mov
mov
dec
sub
or
aad
subl
add
jg
stc
into
xchg
je
fisttps
fisttpll
shlb
jmp
in
into
jns
jecxz
dec
imul
repz
dec
lcall
adc
or
xor
jo
addr16
sub
ss
addl
dec
mulb
xchg
adc
inc
mov
inc
and
xor
dec
mov
cwtl
insb
inc
stos
xorb
loopne
cmp
in
sub
and
orb
add
push
xor
pop
and
and
push
clc
jmp
mov
push
sti
cmp
mov
mov
out
incl
cmc
mov
movsl
cmp
mov
testb
pop
ds
fs
mov
push
cli
sub
add
neg
std
fsubrs
adc
addl
cmp
push
inc
dec
jecxz
and
ret
push
loop
jno
mov
lock
rolb
das
dec
neg
dec
data16
jnp
add
adc
outsl
sti
stos
cmp
popf
push
mov
mov
adc
shrl
or
repnz
mov
arpl
adc
jae
popa
lods
in
add
lods
mov
in
adc
pushf
inc
insl
ret
test
push
add
mov
leave
xorl
push
scas
test
or
xor
xor
inc
push
sub
lret
inc
out
fisubrs
jo
mov
aam
dec
pop
mov
cmpl
mov
push
mov
mov
hlt
jbe
sti
insb
jo
cmp
pop
je
testb
add
xchg
mull
push
out
pop
fsts
dec
jno
fnstenv
dec
pop
jnp
or
lret
addr16
push
add
cs
adc
in
inc
sbb
add
pop
add
add
lods
shrb
and
jb
rclb
sub
test
fcoms
cltd
lret
and
dec
mov
hlt
sbb
subl
lret
icebp
insb
pop
xchg
movsl
jno
dec
add
cwtl
xchg
addr16
dec
and
test
cli
in
jmp
ficoml
repnz
mov
pop
mov
xchg
xchg
or
or
rcll
hlt
aas
mov
rorl
sub
negl
inc
mov
jnp
cld
repz
adc
rorl
mov
sub
ss
cltd
xorl
sbb
nop
xchg
push
mov
adc
aad
push
roll
pop
ret
jg
inc
jns
fnstcw
jbe
repnz
cmc
mov
addr16
jecxz
stc
mov
test
bound
std
cmp
stos
out
push
push
fs
lea
mov
fidivrs
je
test
popfw
pop
clc
add
add
add
ja
out
and
outsl
fadds
and
movsb
and
add
add
add
rol
arpl
shlb
pop
xchg
shll
mov
sub
add
out
scas
cld
inc
cmp
idiv
push
adc
ret
sahf
push
movsb
push
inc
xor
dec
shrb
ds
dec
mov
sub
jg
clc
data16
and
ja
decl
shll
clc
mov
fbld
add
lcall
xlat
movsb
xchg
mov
jle
subl
mov
inc
jmp
push
dec
mov
stc
test
cltd
sub
push
lcall
mov
pushf
ljmp
cmpsb
aam
xchg
aas
xchg
shrb
jb
loop
and
dec
scas
leave
xorb
cwtl
and
jno
aam
sub
pushf
dec
and
movsl
sub
in
stos
stc
add
mov
adc
testl
and
pop
add
inc
stc
xor
push
mov
xchg
fidivrl
add
sub
ja
aad
add
sub
jl
sub
add
add
add
pop
pop
jnp
sbb
xor
add
xor
inc
orb
mov
shl
clc
or
xor
movsb
inc
in
sbb
in
fstpt
push
inc
scas
push
push
mov
je
scas
int3
cmpsl
mov
popa
push
sub
sub
adc
add
pop
inc
adc
fwait
mov
enter
inc
mov
pop
pop
mov
popf
cmp
cmp
sbb
ja
loop
testb
fs
cli
outsb
out
sub
daa
adc
cmp
add
lds
imul
sbb
imul
ret
fnstsw
and
add
lret
jae
loopne
movsl
and
push
xchg
sbb
cmc
pop
je
pop
push
lcall
push
mov
sbb
pop
dec
xlat
xchg
int
dec
pop
test
cmp
faddp
movsb
xchg
prefetchw
mov
xlat
lahf
mov
int
mov
jnp
inc
cmp
push
sbb
pop
add
add
les
cli
and
lret
out
aad
scas
mov
push
test
mov
adc
in
or
shrl
xchg
cltd
jnp
das
add
dec
sub
inc
sub
or
test
clc
xchg
rcll
imul
stos
and
aas
mov
psllq
aad
xor
push
push
lods
xlat
pop
out
rol
dec
push
test
mov
mov
rorl
sbb
mov
dec
cs
xchg
cld
movsb
scas
fnsave
fistps
cmp
mov
xchg
das
jge
add
mov
popf
and
loope
stos
cmpsl
inc
stos
loop
mov
repnz
movsb
jmp
sbb
mov
lods
lods
repz
ret
mov
shll
push
fcoms
out
mov
mov
test
mov
inc
add
cli
xchg
jle
rol
call
cmp
add
add
add
push
jl
mov
loopne
sar
fdivrs
aas
jne
mov
lret
imul
stos
cmp
sbb
dec
test
lahf
push
les
dec
or
jnp
scas
test
cmp
fsubr
jne
or
push
ja
inc
adc
inc
hlt
add
scas
xchg
ret
xor
jecxz
dec
adc
leave
jmp
ds
js
std
pop
lock
push
jmp
sahf
add
out
jae
mov
mov
ds
xchg
push
out
and
js
add
dec
mov
pop
adc
dec
ja
pop
push
and
pop
mov
mov
or
imul
sti
fcoms
add
pusha
sbb
in
xchg
or
ljmp
cs
aad
jle
mov
jnp
jne
stc
jl
ret
aad
ret
and
dec
ret
xchg
xchg
xchg
ret
jo
jge
add
fwait
jnp
aad
push
adc
sub
jno
add
add
add
cwtl
in
loop
mov
jecxz
leave
push
into
xchg
mov
test
mov
pop
pop
mov
xchg
dec
inc
mov
sbb
cwtl
movb
jno
push
fldl
mov
jb
loop
dec
es
subl
adc
cld
popf
and
in
mov
xchg
xor
mov
and
sub
push
fiaddl
test
scas
inc
sub
bound
sbb
rcl
cltd
push
popa
test
adc
into
aam
roll
out
lods
sbb
shll
push
cmpsb
jne
jae
pop
rolb
nop
test
cmp
outsb
adc
cmpsl
add
sub
stc
insl
mov
cld
sbb
sub
mov
push
inc
jns
pop
pushf
pop
in
test
xor
mov
stos
and
inc
pop
out
sub
xchg
data16
adc
mov
std
mov
filds
mov
add
add
add
and
cmp
out
test
mov
pop
inc
sbb
cld
ret
gs
push
inc
leave
pop
imul
add
ret
add
outsb
rcll
pop
pop
cmpsl
xor
xor
cli
cmpsl
jmp
mov
mov
lahf
mov
adc
inc
ja
movl
pop
xchg
push
clc
jne
xchg
out
ficoms
je
roll
loop
push
mov
imul
js
insl
test
insl
popf
or
in
ja
in
int3
push
or
push
in
push
sub
mov
cmp
mov
mov
popa
lret
jmp
sub
movsl
pop
mov
inc
daa
shll
or
and
sbb
sbb
cmp
fcoms
xor
pop
das
ds
cmp
mov
xor
fmull
mov
pop
push
filds
shl
xchg
popa
popa
lret
ds
fmuls
sub
mov
push
fs
add
add
fstl
mov
dec
jae
add
add
add
cmp
lret
adc
es
flds
lahf
in
mov
imul
sub
mov
flds
pop
adc
cwtl
add
lahf
addr16
rcrb
mov
dec
push
add
aam
jge
out
or
shrb
jbe
sti
aaa
call
pop
sbb
dec
inc
mov
sub
inc
shll
jnp
ljmp
inc
add
inc
hlt
addr16
lcall
fimull
je
fcoms
sahf
sbb
dec
sbbb
inc
sub
fisubrs
in
loopne
lds
xchg
movsl
int3
sub
push
clc
std
jo
addr16
das
mov
cmpsl
out
call
pop
leave
addr16
imul
add
cltd
push
hlt
out
dec
test
mov
es
test
add
or
clc
or
sub
arpl
inc
in
mov
mov
out
lahf
aaa
inc
or
push
loop
push
je
add
add
add
mov
xor
mov
mov
add
inc
push
ja
inc
xlat
pop
popl
inc
addr16
stc
push
cmpsb
adcb
mov
pop
cmp
arpl
mov
imul
push
add
inc
lock
and
inc
push
dec
ljmp
and
aaa
sbb
scas
push
iret
outsb
fsubs
sar
mov
sbb
rep
hlt
mov
test
inc
xlat
mov
dec
mov
out
dec
and
stos
pop
and
xor
in
scas
add
loopne
lods
sub
sbb
shrb
repz
jae
stos
cs
adc
xchg
out
xor
pop
int
testb
shr
mov
inc
int
mov
push
or
add
push
cmp
adc
adc
mov
cmp
push
dec
aad
mov
or
pop
cld
xor
adc
mov
inc
pop
add
divl
dec
jno
orb
ja
jne
add
add
add
pop
enter
push
shlb
push
insl
outsb
notl
hlt
sarb
dec
push
out
outsl
subl
cmpsb
push
rorb
and
movsl
push
shll
push
mov
cmpsl
mov
mov
aaa
mov
jmp
push
xchg
mov
mov
ds
cmp
dec
mov
aam
or
sbbl
pop
ja
fnstcw
jo
xchg
jge
je
mov
sahf
loop
daa
jg
adc
call
fwait
push
lds
shlb
mov
and
lahf
xchg
nop
or
sub
sub
add
outsb
mov
sub
push
jge
xorb
ja
popa
sbb
push
iret
inc
xor
push
andb
jmp
fcomps
gs
or
and
xchg
xchg
sbb
push
ret
data16
insb
cltd
rcrb
test
sub
adc
add
inc
add
fisubs
mov
xchg
inc
lock
lcall
add
add
add
pop
mov
cli
inc
lods
ja
mov
mov
fcoml
adc
ret
pop
push
sub
pop
mov
push
jp
adc
int
scas
fs
and
and
fcmovu
ja
and
pop
or
jmp
pop
jecxz
aam
xlat
repz
xchg
cmpsb
mov
and
push
cs
roll
sbb
mov
test
cld
inc
add
pop
paddw
int
inc
std
lock
std
mov
ja
notl
shrl
es
mov
jmp
testl
je
pop
dec
in
loope
adc
lds
add
mov
andl
vfrczsd
fadds
jno
jecxz
inc
push
pop
imul
mov
sbb
push
enter
jge
movb
push
inc
push
jb
fidivs
repnz
dec
mov
shlb
mov
cmp
ja
add
add
add
lock
sbb
sub
out
into
pop
ficomps
mov
sahf
sbb
fisttps
cmp
ret
in
sarl
add
div
jmp
mov
jo
or
xor
add
test
jl
mov
mov
or
sbb
insl
mov
adcb
sti
and
pop
inc
cld
test
add
pop
cmp
std
out
movb
xchg
data16
call
mov
inc
inc
lock
inc
xchg
sbbb
fwait
or
pop
pop
dec
xchg
shll
pop
mov
cli
xchg
rolb
mov
notb
add
xchg
int
lods
fdiv
lret
mov
xor
call
jg
dec
out
cmp
xor
icebp
mov
xchg
call
adc
shrl
add
cmpsb
lods
push
stos
loope
mov
xchg
fistpl
cmp
orb
decl
push
sbb
ljmp
add
add
cmp
pushf
icebp
outsl
std
nop
xchg
loope
xchg
ljmp
loopne
addr16
movsb
sbb
std
ljmp
dec
cmp
ret
je
xor
adc
popf
xchg
jmp
mov
xor
jmp
push
adc
inc
clc
sahf
cmc
jne
test
push
dec
and
mov
enter
mov
out
incb
push
shrb
inc
dec
add
ss
jae
popa
sbb
insl
pop
jnp
inc
push
push
lahf
int
push
and
fcmovbe
andb
lret
out
cltd
ret
jp
cmp
loop
mov
lea
rolb
cwtl
sar
sbb
lods
pop
and
jle
inc
mov
fimull
int3
shrl
and
stc
xchg
and
mov
cmc
push
hlt
rorl
add
dec
pop
or
dec
add
cmp
jno
hlt
push
fcmovu
xor
lcall
jg
add
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
dec
gs
pop
add
push
out
mov
enter
scas
or
or
movzwl
mov
jmp
ljmp
popa
outsb
movsl
push
and
jl
into
lcall
out
pop
push
stc
xor
fiadds
pusha
inc
movsl
addr16
sub
mov
aam
loop
dec
arpl
mov
sbb
insl
xchg
call
or
test
dec
mov
jecxz
mov
sub
jge
jl
nop
sub
nop
jbe
jne
in
adc
dec
mov
cmpsl
mov
pop
xchg
repz
jmp
ret
sbb
cmc
int3
mov
inc
movsb
aas
pop
cltd
mov
push
lods
push
xor
fldl
mov
fwait
lcall
bound
fisttps
aas
add
aaa
es
sti
ljmp
dec
fs
cmp
mov
or
int
mov
test
add
cmpsb
lods
rcrb
cmp
add
add
pop
add
add
xor
push
mov
jae
loopne
adc
ljmp
popf
fwait
pop
loopne
pop
popf
aad
mov
add
add
bound
push
xchg
pop
je
fs
dec
mov
fs
insl
mov
sub
shl
jecxz
mov
cmp
subb
or
es
test
push
icebp
lea
rorb
shlb
pop
mov
mov
aad
cwtl
loopne
jne
fcompl
push
dec
xchg
rorl
filds
jmp
push
repz
push
divl
sbb
orb
and
int
xor
loopne
inc
xchg
scas
push
inc
nop
adc
bnd
scas
jae
cmp
xorl
lods
mov
dec
xchg
sub
popa
fiaddl
push
mov
add
mov
sbb
mov
andb
add
iret
xchg
mov
push
in
push
pushf
mov
imul
jbe
inc
pop
popf
add
cmp
cli
mov
push
jg
sahf
test
add
add
add
cli
insl
jns
xor
dec
sbb
int
repnz
les
cmp
xorl
mov
jp
adc
jnp
stos
syscall
or
fcoms
pop
mov
push
enter
repz
loope
fld
jecxz
rol
cld
orb
popf
out
dec
outsb
sub
stc
push
jg
mov
sub
adc
test
mov
les
cli
jecxz
loopne
pop
mov
fdivl
insb
cmpsb
mov
push
popa
mov
imul
out
addb
mov
pop
arpl
das
aaa
out
push
and
aad
into
jp
push
jmp
adc
icebp
xchg
dec
daa
movsb
cmp
sbbb
popf
mov
in
jne
cwtl
xor
mov
outsb
jae
mov
lcall
int
inc
fdivs
push
sub
and
cli
call
add
test
inc
jbe
stc
imul
add
add
add
pop
pop
scas
jns
adc
pandn
mov
mov
fmull
mov
jo
stos
mov
pop
jnp
push
in
mov
in
push
lcall
out
sbb
lock
xchg
xchg
int3
xchg
jg
mov
jnp
adcl
lcall
test
mov
out
cmpsb
push
pop
push
push
sbb
andb
sub
insb
dec
nop
outsb
push
jg,pn
and
or
jb
fldl
sbbl
push
pushf
push
mov
dec
fcmovbe
js,pt
push
and
pop
sahf
adc
pusha
lock
ss
and
ja
icebp
mov
nop
int
fnstcw
fdiv
jle
mov
loopne
inc
fnsave
je
mov
cmp
cld
add
ss
and
out
sub
fidivrl
mov
cltd
jmp
or
pop
dec
cmpsl
test
jb
ret
xchg
and
push
cmp
push
add
xchg
xchg
jns
dec
out
movsb
test
jge
add
add
add
ret
jae
cmp
xor
mov
pop
fs
fs
sub
pop
inc
and
mov
outsb
hlt
js
and
std
jns
icebp
rolb
or
mov
sub
push
lahf
mov
adc
mov
mov
inc
test
clc
jae
cwtl
dec
push
sti
aam
div
lds
notl
dec
ljmp
stos
movl
jae
jns
imul
cmp
or
jg
inc
adcl
sbb
xorl
sub
mov
lcall
push
mov
pop
push
sbb
pushf
stos
es
push
in
mov
shlb
int3
cmpsl
test
in
xchg
adc
insl
pop
dec
mov
arpl
pop
adc
mov
rclb
pop
mov
xor
ret
mov
push
jns
jecxz
push
add
scas
lcall
xor
xchg
mov
add
pop
add
add
dec
movsb
push
xor
or
sbb
fs
out
adc
stos
xchg
ljmp
je
shlb
adc
aaa
jne
je
cwtl
cmc
das
movsb
sbb
inc
sub
repz
mov
push
fwait
outsl
shlb
test
mov
adc
cmp
mov
jmp
jno
test
addr16
add
inc
push
pop
pop
push
jg
or
test
push
aaa
lods
or
mov
mov
and
outsl
test
mov
imul
xchg
push
lret
adc
outsb
xchg
lock
js
or
pop
sbb
pusha
mov
lret
test
dec
mov
test
dec
ja
jnp
pop
or
xor
xor
and
push
popa
nop
mov
mov
or
sub
stc
pop
sub
dec
neg
lret
clc
xor
add
mov
idiv
fnsave
setae
mov
add
add
dec
stos
aam
rcrb
mov
pop
lea
push
inc
mov
and
es
test
adc
sub
add
out
mov
mov
inc
fisubrs
fcoms
or
push
jle
mov
lods
in
mov
out
daa
mov
jmp
aaa
subl
sbb
push
outsl
xchg
test
push
cmp
adc
ja
dec
mov
pop
test
lret
inc
sub
mov
aaa
dec
or
fst
sbb
je
repnz
mov
dec
xchg
add
mov
push
xor
and
adc
enter
jp
aas
pop
test
cli
add
xchg
loopne
stc
mov
pop
daa
dec
gs
push
push
bound
sbb
jle
mov
push
cld
mov
shrl
cmpb
rclb
cmp
xchg
dec
shl
or
out
xchg
call
xor
cmp
add
add
mov
push
xchg
mov
push
jo
aad
and
popf
lret
and
int3
adc
inc
icebp
dec
ja
movsl
push
lea
xchg
ret
add
ret
add
dec
and
rorb
mov
and
add
xor
fwait
and
mov
jg
mulb
fwait
pop
jnp
ficompl
divl
push
inc
xchg
loope
cmc
hlt
jge
out
xchg
loop
push
enter
popf
add
or
inc
push
inc
test
xlat
mov
add
dec
adc
hlt
sub
aas
inc
sahf
xlat
or
in
jle
adc
or
cltd
mov
in
lock
xchg
repz
mov
adcb
or
loop
or
mov
out
mov
lods
ljmp
jae
mov
mov
xchg
jl
ficomps
lcall
lret
add
sti
iret
test
sub
push
sub
scas
addl
add
push
xchg
out
adc
test
ss
push
cmp
mov
arpl
ret
and
sub
add
ror
inc
sbb
fsubs
es
ret
lock
inc
shr
jo
dec
rcrl
jns
scas
xchg
push
ret
movsl
imul
mov
cld
push
pop
movsl
mov
push
testl
push
dec
fwait
not
pop
cmp
or
or
mov
add
in
sub
or
fwait
sbb
stos
inc
cmp
pop
add
cs
mov
xchg
hlt
push
adc
mov
dec
mov
ret
adc
xchg
lds
data16
push
dec
out
pop
mov
xchg
jo
mov
mov
cld
pusha
mov
stos
mov
dec
insb
mov
and
xchg
loopne
imul
stc
adc
cmovns
jb
loope
icebp
std
push
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
das
ljmp
add
add
jecxz
cmp
mov
sahf
stc
xchg
nop
sub
add
repnz
insb
hlt
add
jns
sub
lcall
stc
xor
ja
jno
dec
and
pop
aam
out
inc
xor
mov
cmpsb
push
dec
jl
aaa
int
andl
push
aam
testb
pushf
xchg
mov
mov
dec
popf
dec
push
jmp
pop
ds
aas
sbb
jno
jmp
xor
pushf
xor
push
cwtl
and
jmp
pop
out
mov
gs
adc
nop
fsts
ds
aas
imul
sbb
hlt
jns
out
fcomi
mov
jge
pop
xor
lds
cli
movsb
xchg
push
and
mov
nop
les
mov
sbb
cmpsl
jbe
pop
sub
push
arpl
sub
xorl
mov
cmp
push
jecxz
rcrb
in
jmp
adc
loope
pop
cld
add
mov
cmp
addl
pop
add
add
out
std
jg
jg
jnp
sbb
sbb
lods
and
leave
subl
sbb
test
lahf
mov
jl
fcoml
adc
pushf
movsl
outsb
shlb
out
push
inc
mov
pop
dec
xor
xor
rcl
jns
dec
inc
setae
std
sub
out
out
jbe
push
rcrl
aaa
sub
jnp
pop
push
out
xor
dec
dec
or
pop
adc
sbb
pop
pop
sub
lret
bound
lods
ljmp
out
sarb
push
arpl
pop
xchg
jg
mov
add
lea
push
dec
arpl
add
ss
lahf
shr
add
mov
cmp
out
pop
sub
jb
gs
rcrl
or
and
pusha
adc
push
nop
sahf
inc
mul
inc
cwtl
inc
cmp
movsb
push
sub
add
dec
rclb
add
pop
test
ljmp
roll
daa
les
add
xchg
xchg
push
in
dec
push
popf
pushl
mov
orl
push
sti
stos
ret
lahf
out
cmp
arpl
xchg
outsl
adc
xlat
in
mov
xor
les
icebp
cmp
inc
mov
repz
pop
rcr
fisubl
xor
lahf
test
jmp
adc
jno
jo
jno
and
push
pop
enter
std
sub
flds
arpl
popa
push
push
pop
fs
dec
sbb
pop
scas
popa
adc
jne
mov
ret
shlb
or
add
xchg
cmpsb
lds
outsb
test
add
mov
dec
push
inc
xor
mov
adc
xchg
imul
jno
adc
bound
inc
dec
and
or
in
jmp
cmp
testb
or
xor
fiadds
add
in
dec
shll
inc
iret
jle
pop
loop
hlt
out
add
add
add
arpl
jnp
sbb
adc
rclb
add
pop
add
add
cmpsl
xchg
jo
xchg
lods
jl
daa
lea
imul
data16
ds
call
loop
ja
gs
lods
add
mov
into
out
adc
xchg
push
js
loop
lods
aaa
sub
mov
xchg
lcall
sarb
dec
dec
rorl
xor
lret
adc
mov
mov
jle,pn
out
mov
sub
movsl
fisttps
xchg
cld
loop
lea
imul
mov
out
arpl
ds
dec
adc
ret
aam
movl
xchg
insl
int3
imul
lock
push
shl
addr16
sbb
outsb
inc
nop
push
push
mov
cmp
nop
stc
aas
dec
enter
mov
cld
idiv
sti
leave
in
dec
pop
fwait
mov
cmp
addl
test
mov
sahf
stc
insl
fmuls
gs
lcall
mov
xchg
xchg
pop
xor
add
aas
or
mov
adc
or
pop
add
add
fldl
pop
ret
rcll
lds
test
fidivrl
cmp
or
jge
sub
push
sarl
test
mov
add
scas
fimull
cmp
popf
out
cs
xor
cmpsl
test
push
cwtl
mov
out
push
inc
fmuls
lea
jbe
jge
int
fwait
test
divl
outsl
adc
pop
out
mov
xchg
add
nop
movsb
or
jg
inc
stos
adc
pop
sarl
dec
pop
or
daa
or
and
xchg
mov
pop
pop
sbb
stos
jmp
jno
mov
nop
add
mov
sti
jne
orl
ljmp
sbb
pop
mov
or
fistpll
ret
dec
rcll
iret
jmp
test
pop
and
pop
mov
xor
sbb
ret
arpl
sub
dec
jl
mov
insb
fidivl
sub
sub
flds
add
fwait
dec
lret
repnz
push
pop
dec
filds
out
dec
dec
dec
inc
repz
jo
repnz
mov
mov
sbb
nop
jb
fwait
daa
cwtl
add
push
lret
clc
popf
insb
leave
mov
inc
loopne
es
mov
pushf
outsl
inc
frstor
addr16
iret
pop
nop
xlat
cwtl
mov
test
loop
sbb
orb
bound
aam
mov
ljmp
or
test
cmp
cmpsb
mov
mov
ret
pop
sbb
xchg
imul
sub
push
stc
cmp
mov
xchg
cmp
pop
leave
dec
out
sub
insl
popf
lock
fwait
dec
dec
xor
cmp
lcall
lods
lock
mov
test
jno
pop
or
jnp
daa
outsl
stc
test
sub
mov
dec
jae
ret
aas
or
mov
repz
pop
nop
jg
lods
lahf
or
sub
cld
cmc
repz
add
add
mov
xchg
mov
add
add
add
popa
or
xchg
pop
xchg
lahf
test
cwtl
sub
inc
ss
cmp
loope
ja
fucomi
lods
and
inc
push
mov
sbb
les
movsb
sbb
pop
in
pop
sub
ss
cmp
decl
xchg
mov
cmpsl
or
mov
adcl
cs
mov
xchg
sbb
inc
xor
or
rcl
jp
fsubrs
sbb
ret
outsb
push
jns
aam
aad
xchg
cmp
cmp
stc
aam
aam
icebp
into
ficomps
ret
cmc
adc
jmp
mov
xchg
dec
push
in
jb
xchg
push
popf
inc
mov
clc
imull
xlat
clc
xlat
repnz
jg
sub
daa
mov
inc
testb
enter
call
push
xchg
rclb
leave
jmp
or
dec
cmp
pop
jbe
call
daa
rolb
push
jecxz
mov
mov
dec
push
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
movsl
out
jmp
jb
test
mov
jecxz
scas
adc
push
pusha
or
or
rcpps
jno
xor
push
out
lret
mov
loope
jle
adc
mov
and
dec
pop
movsl
ficomps
xchg
outsb
cmp
ffree
mov
ja
loop
sbb
jp
mov
xor
mov
inc
je
xchg
stc
pusha
mov
adc
xchg
jl
add
xor
incl
push
fistl
int3
std
mov
mov
ja
jbe
je
push
hlt
outsl
int3
sbb
push
inc
mov
addr16
xchg
dec
mov
or
adc
or
imul
mov
xchg
xlat
test
xlat
shl
cmpsl
and
jae
rcll
cs
fwait
addr16
sub
jnp
out
ror
cmp
aam
pop
mov
sbb
ljmp
pop
xor
xchg
xor
mov
xchg
clc
lcall
subb
add
adc
std
and
xchg
sar
scas
pop
shr
mov
add
add
add
sub
and
cmpsb
jle
nop
add
sub
push
jmp
jmp
add
and
inc
aad
lret
cld
xor
stos
sbbl
movsb
cmc
jbe
mov
pop
mov
aad
sub
aas
xor
sbbl
add
and
fisubrl
mov
sub
lret
cmp
test
sbb
mov
into
mov
inc
pop
mov
sub
andl
adc
rcrb
sbb
stos
mov
dec
and
inc
adc
add
orl
jge
sbb
jp
jne
pop
jl
scas
jne
adc
mov
stos
into
lock
jbe
sti
addr16
aaa
jo
inc
inc
es
les
ficoms
xchg
cmp
sub
hlt
shl
mov
sti
out
inc
inc
xchg
stos
and
dec
enter
add
add
ss
aam
lods
les
jnp
mov
add
cmc
mov
add
add
add
sub
adc
cltd
fcmovb
and
jo
loopne
dec
jecxz
add
mov
add
lcall
imul
jb
out
pop
cmp
cs
sbb
je
nop
loopne
cmp
bts
cli
jns
stos
xlat
adc
cmp
mov
xchg
mov
pop
out
mov
ret
jle
shl
cmp
std
xchg
dec
movsl
mov
je
shll
mov
cmpb
mov
cmp
movsb
cli
imul
insb
stos
cmp
jl
cmpsb
sbb
test
pop
ljmp
mov
adc
sub
jns
in
clc
fidivs
shll
cmp
icebp
arpl
jecxz
lods
mov
dec
sbb
or
adc
movsl
mov
std
dec
clc
dec
outsb
repnz
sub
enter
pusha
rolb
inc
or
test
out
xchg
dec
int3
xchg
inc
cld
mov
add
add
add
test
pop
sub
cltd
bound
xchg
enter
or
out
push
push
xor
dec
mov
sub
push
mov
and
loope
movsb
inc
or
fs
or
repnz
jmp
jge
std
lock
sub
mov
jmp
es
xchg
or
dec
loopne
pop
push
fisubs
jecxz
ds
sar
and
sbb
or
mov
into
int3
and
jmp
or
stos
in
dec
jl
jmp
repnz
outsl
xor
out
mov
rolb
jnp
shlb
fimull
adc
mov
xchg
fistpll
sarl
jge
stos
loop
lret
pop
into
mov
in
loope
cmpsb
xchg
or
aaa
jmp
outsl
pop
jno
pop
jle
push
pop
push
push
and
jecxz
in
lock
push
lods
push
pop
test
add
add
ljmp
dec
push
ret
xchg
jge
mov
add
add
add
xchg
test
push
xor
out
repz
xorb
lods
jnp
push
pop
ficompl
inc
mov
jb
dec
push
push
xor
fnstenv
dec
int3
mov
cmp
ljmp
je
push
sbb
lahf
cmp
mov
push
xchg
xor
xlat
mov
int
js
mov
and
xchg
int
rorl
andb
mov
sbb
mov
rcr
ss
jo
shlb
sbb
sbb
rclb
xor
fldl
push
xor
sahf
mov
ljmp
arpl
fs
mov
or
sbb
mov
jno
pcmpgtw
pop
pushf
pop
repz
mov
shrb
mov
and
das
imull
rclb
sarl
add
in
mov
les
pop
add
aaa
shlb
cmc
div
mov
shrl
or
add
stc
push
or
or
push
js
sbb
hlt
pop
nop
sti
nopl
xacquire
xchg
and
inc
stos
into
lret
push
add
inc
jo
popa
xor
push
add
inc
imul
ja
clc
or
add
sub
dec
jb
sahf
pop
in
adc
and
adc
cmp
sbb
outsb
xchg
jmp
jl
xchg
push
arpl
or
fdivl
psadbw
mov
insb
lcall
pusha
cld
push
inc
cmpl
into
mov
push
push
cmpsb
lret
cmp
fsubr
imul
mov
sub
imul
icebp
addr16
push
xchg
out
les
jge
mov
jecxz
insl
fcoms
push
outsl
outsl
push
add
inc
ds
outsb
out
and
push
xlat
mov
sbb
insl
and
cmpb
popa
icebp
addr16
mov
xchg
pushf
sahf
mov
test
pop
push
nop
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
push
or
adc
dec
push
loopne
leave
cmp
inc
cli
dec
cmp
jmp
lock
test
lret
sbb
lret
ds
shll
lret
pop
lea
xchg
sbb
jno
mov
loop
fsubp
lret
mov
dec
std
push
sub
aaa
add
jl
dec
inc
pushf
movsb
es
pop
ja
rcl
stos
jne
push
fnstsw
pop
xor
mov
in
in
pop
mov
xchg
mov
cmp
sbb
push
clc
jnp
mov
call
in
and
test
mov
cli
stos
mov
loope
lock
pop
xchg
movaps
sub
divl
xchg
jl
xor
xcrypt-ofb
cmpsl
test
idiv
sub
mov
or
shrb
mov
cli
dec
mov
sbb
add
cmc
xor
lock
popa
js
inc
dec
xor
sub
arpl
icebp
add
arpl
cmpsb
jcxz
mov
lock
sbb
add
js
mov
insb
pop
pop
lods
adc
sbb
stc
or
sub
push
popa
mov
or
inc
xor
gs
dec
push
not
clc
rorl
leave
lds
test
xlat
cmp
dec
sbb
or
lea
pop
sbb
mov
sub
mov
aaa
pushaw
cmpsl
jmp
out
cld
pop
mov
mov
data16
ja
out
sub
addb
xchg
sub
push
mov
sub
out
mov
jmp
lret
dec
popf
mov
push
xchg
adc
push
cmp
adc
xor
lds
pop
jp
mov
test
and
in
lock
mov
sub
lret
sbb
pop
lods
mov
testb
lds
add
aam
sub
outsb
imul
test
jge
xchg
repz
lods
inc
and
push
sbb
ljmp
add
clc
jnp
jg
in
cli
push
mov
add
pop
add
add
dec
inc
inc
stc
cmpsb
loopne
hlt
iret
xor
dec
out
jl
int3
sbb
stc
jb
mov
test
mov
sub
outsb
and
scas
iret
pop
sub
aad
lds
mov
push
movsl
sub
popa
dec
mov
jecxz
test
movsb
sbb
jnp
sbb
call
dec
sub
mov
imul
aaa
push
leave
aas
loop
sbb
push
ret
mov
mov
data16
fsub
in
adc
rorl
pop
popf
adc
push
cwtl
jns
jl
add
mov
cmp
ja
or
arpl
mov
int
fsubr
xchg
push
pop
int
pop
mov
out
lcall
xchg
pop
or
sarb
mov
int3
pop
rep
inc
cmp
jmp
dec
mul
pop
fildl
jmp
jne
mov
pop
mov
sub
in
xchg
pop
loop
pop
out
add
lods
faddl
fbstp
cld
fidivl
in
addb
pop
add
add
mov
adc
and
pop
arpl
push
xchg
cmp
inc
mov
sahf
and
mov
dec
stos
or
popa
cmp
and
mov
xchg
xor
decl
xchg
jle
sub
aaa
stos
adcb
jle
sub
pop
mov
cmp
lcall
dec
mov
jecxz
mov
and
inc
shrb
and
lret
push
push
std
insb
jge
push
xchg
pop
push
jno
jns
dec
mov
rcrb
pop
sbbb
push
jno
inc
movsl
std
fcompl
and
mov
mov
sti
pop
negb
stc
flds
adc
insb
aas
jp
pop
and
push
lods
push
fwait
cmp
push
outsl
sahf
push
into
jns
sahf
mov
mov
pushf
add
imul
ret
outsb
add
push
jae
imul
mov
push
fisttpll
push
popf
les
pop
add
jl
sar
std
jle
testb
xlat
inc
fisttpll
pop
add
add
xchg
push
loop
pop
movsb
es
xchg
push
jg
pusha
or
jg
mov
mov
test
pop
xchg
in
popa
aaa
ficomps
inc
cmp
icebp
mov
aad
jbe
xchg
imul
xchg
add
icebp
orl
mov
fwait
dec
test
mov
pop
lcall
shll
pushf
pop
inc
arpl
aad
push
lock
sbb
xchg
arpl
push
mov
xlat
test
add
and
aas
mov
sti
cmp
xchg
or
jne
aad
sarb
add
and
hlt
xchg
cmc
jle
int
lret
pop
scas
mov
rclb
pop
inc
dec
rcrb
popa
scas
ret
and
cmpsl
xor
push
gs
bound
pusha
movsb
or
lods
sub
xchg
test
adc
filds
cld
xchg
pop
pop
insl
mov
sub
sbb
xchg
fildl
add
add
cwtl
or
stos
xchg
cmp
mov
xor
add
pop
add
add
and
xor
ds
ret
cmpsb
jle
rolb
cwtl
jo
xor
test
adc
sub
dec
adc
dec
test
jo
or
pop
arpl
inc
inc
pop
stos
sbb
lret
mov
neg
jp
leave
mov
sub
sub
jmp
je
push
adc
in
jmp
addr16
aad
mov
pop
mov
mov
movsb
in
roll
pop
pusha
xchg
int3
adc
clc
cmp
ljmp
sub
xchg
and
xchg
xchg
cmpsb
xlat
sbb
icebp
xchg
jno
hlt
fs
fcmovnb
cmpsb
fidivrl
cltd
pushf
sub
aad
xchg
loope
fcmovnbe
daa
pop
sbb
cli
sub
xchg
test
add
or
lret
pop
xor
cmp
push
mov
sbb
xor
rclb
add
lds
jb
lea
je
add
mov
fwait
and
popa
mov
sub
sti
cmp
add
rcll
add
aad
dec
scas
and
add
test
inc
and
nop
mov
push
stos
dec
mov
sbb
inc
je
or
jne
lahf
mov
adcb
mov
adcb
fldl
sbb
push
sarb
xor
insl
lcall
jb
outsb
ds
dec
add
add
inc
dec
mov
imul
cli
mov
imul
dec
test
cmp
jp
jle
mov
pop
out
call
push
and
out
aam
loop
xchg
mov
mov
xor
inc
inc
push
dec
lret
jp
outsb
push
idiv
adc
dec
and
lcall
not
add
add
shll
jae
jmp
sahf
xchg
mov
cmc
cmp
mov
cmp
jne
jno
push
and
xlat
aas
insb
lods
ret
iret
sub
xchg
add
pop
add
add
pop
inc
inc
out
stos
push
jns
cmp
dec
in
repnz
adc
mov
pop
shlb
jbe
jp
outsb
in
sbb
arpl
xchg
lock
cmc
and
jg
lret
or
mov
inc
jno
cld
jge
sbb
fxtract
ret
imul
popf
cmpsb
and
outsb
mov
mov
xchg
fs
data16
dec
out
push
insl
enter
inc
ret
xchg
aad
movsl
ds
ret
mov
out
clc
dec
inc
fisttps
stos
jnp
dec
inc
sbb
push
cli
mov
mov
or
cwtl
jbe
xchg
rcrl
push
cmp
mov
pop
cli
int
jnp
cmpl
in
xor
jl
or
ds
and
xchg
sbb
iret
push
inc
cmp
mov
and
das
clc
and
mov
mov
pop
or
add
imul
outsl
fistpll
movsl
push
jg
cwtl
add
pop
add
add
fcomp
mov
jnp
xor
push
roll
push
xor
jg
jl
mov
out
or
sub
push
add
movsb
push
leave
fsub
xchg
and
scas
cwtl
inc
push
and
cmp
sub
cmpsb
xchg
cmpl
jnp
pop
std
push
out
out
cmp
xor
cmp
push
dec
fdivs
cmpl
lahf
add
dec
dec
ja
insb
pop
mov
int3
add
cmp
in
frstor
xchg
mov
int
pop
js
inc
push
into
ja
test
jo
pop
push
ret
mov
arpl
fidivs
add
mov
shlb
pushf
outsl
xchg
stc
push
out
pusha
mov
call
xchg
sub
sub
int3
arpl
xchg
sbb
daa
mov
push
sub
add
cmp
push
or
inc
mov
or
fnstcw
mov
push
stos
sub
add
lret
sbbl
xorl
in
out
mov
add
pop
add
add
pop
nop/reserved
in
pop
popa
mov
std
dec
jne
pop
jns
dec
fisttpl
jne,pt
add
rol
roll
jl
jns
ficoms
insl
ret
ret
in
mov
jne
jmp
pusha
and
push
mov
xchg
push
mov
push
bound
mov
leave
mov
xor
pusha
xchg
cmp
loope
xchg
sub
and
or
add
sbb
out
xchg
sbbl
or
sbb
aas
xchg
ja
push
inc
mov
aas
xor
aam
scas
mov
dec
push
add
xchg
out
into
mov
mov
xor
sar
test
pop
fcmovbe
and
xchg
out
repnz
ljmp
out
loope
adc
jbe
int
ss
mov
sbb
jns
xor
mov
iret
sti
or
ret
pop
dec
out
add
imul
sbb
leave
dec
shll
push
lcall
mov
jns
rcrl
dec
icebp
cwtl
aaa
jb
xchg
stos
das
test
cmp
inc
lcall
arpl
js
in
pop
push
dec
xchg
dec
frstor
adc
pusha
mov
iret
mov
lea
jle
xor
rcr
pushl
loopne
arpl
cmpsb
mov
inc
repz
ja
push
aam
add
lret
vpcmov
mov
nop
imul
or
adc
mov
cmpsl
adc
es
cmp
lcall
dec
testb
and
pop
inc
dec
subl
popa
sub
push
dec
sbb
push
je
ja
sbb
ret
add
leave
xor
push
int
test
cltd
sahf
mov
loopne
sti
add
push
rol
or
cmp
add
ficoml
out
mov
pop
cmpsb
push
xchg
int3
enter
add
mov
jge
jg
ljmp
out
stos
jmp
mov
add
add
add
je
inc
jne
add
and
fldcw
lcall
cli
jmp
testb
add
es
pop
popa
or
cmp
xor
sub
dec
mov
and
lcall
clc
xor
outsb
jae
xchg
jo
jnp
jle
cli
insl
jmp
mov
sub
jae
sbb
loope
movsb
sbb
add
adc
sub
dec
mov
mov
mov
sbb
push
push
add
rcll
pop
addr16
xor
movsl
mov
sbb
aas
cmp
mov
push
in
push
lret
cmpsl
cmp
push
lods
repnz
mov
or
cli
into
fwait
sub
into
and
dec
cmp
pushf
fldl
push
mov
mov
into
mov
jl
ss
fidivs
ljmp
arpl
cmp
lahf
arpl
sbb
add
add
ja
out
xor
cld
sbb
add
pop
add
add
mov
pop
mov
dec
or
arpl
jb
stos
ss
adc
loope
lahf
sbb
add
outsl
pop
push
inc
movsb
cld
jno
repz
cmp
fnsave
mov
cmpsb
call
loop
in
and
divl
in
dec
adc
lret
pop
inc
xchg
xchg
mul
xchg
testl
ja
or
call
test
mov
sub
imul
enter
test
jp
movsb
icebp
or
or
pop
pop
cmp
repnz
mov
jg
adc
jge
inc
pop
add
shrb
mov
push
sarb
jae
xchg
loope
stc
pop
out
out
sti
fs
into
arpl
sub
les
lret
mov
mov
cli
push
dec
xlat
mov
out
popa
aad
and
pop
movsb
xor
adc
dec
add
add
add
pusha
test
je
push
add
nop
ljmp
add
xchg
divb
sbb
rcrl
push
dec
mov
call
in
adc
jnp
ret
and
lods
jp
lret
mov
sub
ret
mov
jae
sub
repz
out
pop
lea
cmp
stos
jbe
lods
imul
nop
cmp
xchg
popa
push
lock
lret
addr16
adc
adc
jge
lods
mov
xor
call
mov
jmp
leave
in
cld
dec
sub
and
push
dec
inc
jae
mov
or
inc
mov
pop
ret
aas
inc
int3
sub
scas
mov
insl
int
mov
loop
cmp
or
and
or
xchg
jmp
sahf
les
or
and
mov
xor
movsl
pop
xor
roll
mov
mov
pop
xchg
stos
inc
mov
mov
mov
xor
jp
cltd
mov
loop
add
mov
repz
repz
xor
sahf
add
pop
add
add
add
xor
in
notl
fiaddl
enter
imul
jl
cwtl
push
jo
stos
xchg
sbb
dec
lods
nop
or
mov
adc
mov
sti
and
push
pushf
xor
xchg
cmp
mov
and
rcrb
dec
jae
mov
push
dec
into
xor
sahf
mov
sub
cmp
mov
in
leave
test
test
pop
sti
stos
xchg
aad
lcall
lea
cmp
shl
pop
iret
leave
cmp
stos
or
xrelease
andl
scas
jmp
mov
or
ret
and
icebp
pop
aas
lods
loop
sbb
testb
sti
mov
mov
fstpl
mov
rcll
clc
mov
mov
fwait
jbe
lods
pushf
fs
add
push
inc
xlat
sub
sti
or
xorb
mov
dec
test
das
add
mov
pop
or
inc
jp
add
pop
add
add
add
xchg
and
or
repnz
mov
mov
stc
aaa
fmuls
aas
not
repnz
pop
xchg
xor
pop
outsb
pop
push
jmp
and
enter
daa
jl
inc
push
pop
inc
movsl
scas
xor
xor
xor
push
aas
add
sahf
sub
sbb
loop
xchg
mov
mov
shlb
and
int
in
addr16
jge
pop
push
outsb
mov
out
jne
out
fcoms
data16
insb
das
int3
je
arpl
xor
and
stos
add
in
pushf
sbb
jnp
push
das
enter
fstps
mov
xchg
das
data16
dec
fcmovbe
out
cmp
js
js
lcall
inc
jp
or
fiadds
int
inc
lret
xchg
insl
ljmp
outsb
ljmp
std
sub
fcmovnb
daa
xor
enter
stos
pop
pop
daa
ds
or
and
pop
lret
pop
mov
or
sbb
stos
sbb
movb
add
imul
rclb
aad
das
in
scas
in
inc
ret
push
jmp
and
lret
fnstenv
out
out
mov
std
lcall
xchg
shl
repnz
inc
mov
mov
in
aaa
push
es
fmull
scas
mov
cld
or
push
adc
adc
add
sub
je
fdivrl
xor
push
mov
mul
ja
jae
hlt
xchg
push
fidivrs
xor
mov
push
fs
adc
iret
cmpb
call
stos
xorl
add
ret
jo
push
test
jge
rcrl
push
ljmp
nop
fwait
cmpsl
repz
int
rcll
dec
rcr
incl
and
dec
jge
mov
xchg
inc
dec
add
stos
mov
or
fcoml
add
xchg
stos
leave
rcrb
or
into
jae
sahf
sar
loop
stos
out
add
inc
fdivl
push
stc
add
add
add
or
int
sub
dec
cmp
and
pop
dec
imul
sbb
or
sub
pop
fucomip
in
out
mov
mov
inc
ds
lahf
adc
loop
add
and
ret
cltd
add
jl
aas
pop
push
das
pop
sbb
pusha
add
fdivs
jbe
dec
mov
mov
mov
add
scas
mul
pop
dec
cmc
dec
daa
jnp
stc
out
sbb
mov
jmp
into
out
add
idivb
insl
add
or
outsl
cmp
call
jmp
mov
or
jb
and
xchg
and
mov
pop
outsb
push
push
loopne
aad
and
sti
fldcw
lcall
and
cli
inc
mov
fwait
lret
popf
push
loope
aas
nop
lret
adc
cmp
lock
cmp
xchg
mov
dec
xor
lret
imul
adc
mov
push
cmp
mov
add
mov
repz
frndint
add
sbb
fcmovu
adc
popa
cmpsl
std
sbb
imul
dec
dec
fstl
adc
popa
mov
jbe
inc
mov
lods
lds
mov
dec
stos
or
movsb
mov
test
scas
mov
cmp
out
idivl
test
inc
dec
pop
mov
lcall
pop
mov
adc
push
add
arpl
xchg
mov
inc
mov
xchg
dec
push
mov
push
dec
fsub
lds
sbb
mov
lea
lret
pop
sbb
adc
fwait
push
hlt
dec
sub
mov
push
pushf
push
inc
jl
push
in
pop
rol
loopne
cwtl
insl
int
fldcw
push
sbb
sbb
xchg
icebp
das
adc
xchg
pop
loope
mov
or
int
add
xchg
lods
repnz
add
xchg
in
loope
xchg
ret
sbb
add
pop
test
stos
hlt
jmp
jmp
outsl
loope
xchg
mov
add
pop
sti
cmp
pop
lahf
leave
sub
aas
imul
xor
push
and
imul
movsb
ja
ds
lds
mov
ljmp
test
cli
ss
ret
sbb
test
mov
mov
daa
pop
xchg
push
mov
xor
in
xlat
xor
outsl
add
xor
lock
pop
mov
inc
mov
data16
and
cs
stc
push
mov
push
mov
add
enter
inc
iret
inc
mov
push
subb
pop
inc
mov
pop
ss
leave
ret
js
pop
scas
xor
mov
mov
int3
into
pop
scas
jae
adc
xor
push
js
roll
ds
hlt
sahf
push
sbb
ja
cs
sarl
enter
leave
fcomi
push
popl
ljmp
xchg
sbb
mov
xchg
cmp
mov
js
add
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
or
mov
xor
lock
adc
popf
shrl
mov
push
jge
lret
push
push
adc
mov
and
cwtl
mov
sub
pushf
and
pop
add
xchg
mov
in
inc
and
mov
repnz
test
add
pop
out
adc
js
not
lcall
adc
outsl
cmpsb
mov
int3
adc
mov
jg
mov
xor
jns
jg
int
es
aad
loopne
out
cmp
dec
data16
and
xlat
jbe
and
fs
mov
mov
stos
and
xchg
add
stc
imull
and
aam
leave
jge
and
leave
vmread
ljmp
pop
ss
push
inc
add
icebp
jno
inc
gs
ja
or
rolb
sbb
pop
fists
cmp
cmp
add
pop
add
add
pusha
imul
inc
inc
lods
xor
dec
mov
mov
addr16
mov
and
loope
adc
insb
fs
je
jae
fnstcw
or
pop
daa
scas
cld
jns
in
push
int3
pop
orb
loop
adc
test
push
pop
stos
sahf
outsl
in
mov
xchg
popa
loop
sub
add
and
mov
in
mov
fs
dec
popf
imul
or
push
xorb
cmp
mov
jmp
pop
fildll
fcoml
test
stc
push
ja
pop
or
mov
aad
stc
shlb
fsub
cmpsl
mov
fsubs
push
test
xchg
fbld
or
xchg
shrl
inc
testl
mov
mov
mov
insb
adc
jmp
leave
test
in
add
mov
mov
jae
cmpsb
add
pop
add
add
add
dec
and
mov
sub
test
adc
push
pop
mov
pop
gs
push
std
test
jnp
or
loope
xchg
dec
jno
mov
cwtl
out
inc
pop
mov
pavgb
dec
into
sbb
test
mov
push
lcall
add
add
std
sbbl
jns
mov
pusha
daa
xchg
mov
xor
arpl
mov
out
in
pop
cld
adc
aas
and
dec
pushf
jge
jns
pop
nop
mov
mov
push
pop
push
shll
cmp
mov
push
inc
in
andb
mov
cli
jge
aad
dec
jne
mov
add
dec
sub
call
jmpw
movsb
js
xchg
je
mov
insl
push
in
cltd
std
xor
push
loope
ret
in
movsl
mov
cmp
outsb
or
sub
leave
push
or
sub
or
flds
lret
jnp
sti
jmp
pop
dec
pop
movsb
jae
es
mov
add
pop
add
add
icebp
fdivs
adcl
inc
adc
ss
mov
imulb
and
and
nop
sahf
jge
inc
dec
aas
cmp
pop
int
and
imul
inc
leave
push
cmp
ds
jns
jbe
mov
mov
adc
ja
mov
xchg
lods
test
orl
popf
push
sub
std
xlat
stos
inc
sbb
insb
aaa
add
in
rclb
xor
pushf
mov
sub
push
mov
lahf
xchg
sub
cmp
hlt
jg
push
cmp
es
rolb
pop
loop
cmp
icebp
xlat
push
mov
repnz
push
mov
push
adc
inc
pop
xchg
icebp
inc
cmp
cmc
loopne
test
sub
repnz
andb
mov
mov
nop
pop
and
dec
xor
add
test
jo
xor
pop
jb
ror
enter
add
jecxz
lock
fmuls
or
test
add
add
add
pop
sarl
push
push
push
or
xor
out
lcall
or
into
or
push
fwait
call
nop
adc
xor
insl
popf
arpl
sbb
int3
test
or
dec
clc
mov
jle
cltd
or
sbb
push
mov
jb
push
mov
mov
psrad
lret
xor
fsubrl
mov
inc
aas
cli
mov
notb
mov
test
inc
dec
into
lods
push
rclb
mov
stos
xlat
push
lea
xchg
stos
sub
in
cmp
stos
xchg
in
add
xchg
mov
pop
sahf
fsts
sbb
xchg
or
test
in
dec
out
xchg
mov
repnz
subl
movsl
jmp
and
or
cmp
push
out
sbbl
jl
add
fcmovb
stos
add
test
inc
pop
add
add
add
cld
mov
add
cwtl
pushf
enter
add
add
add
jle
ss
stc
mov
mov
cltd
loop
je
aam
sbbb
push
jmp
ret
sarl
sarl
popa
inc
aam
mov
xchg
sbb
cwtl
add
ss
dec
in
and
ss
adc
mov
cmp
lods
cld
lock
sub
mov
or
xor
xlat
lds
or
dec
loop
mov
pop
cmp
sbb
add
inc
push
jp
lret
adc
xor
push
sub
into
loopne
mov
fs
std
gs
pop
cmc
mov
ljmp
push
cvtdq2ps
adc
int
jge
insl
sbb
fisubrl
stos
cld
lods
mov
cmpb
scas
ds
clc
jbe
into
mov
sub
xchg
jbe
push
mov
dec
repnz
out
mov
das
adc
add
mov
inc
out
add
mov
dec
das
pop
out
cmc
mov
xchg
push
sub
stos
add
pop
add
add
scas
sarb
mov
sub
cmp
cmp
aam
push
mov
xchg
xor
popf
imul
in
xchg
mov
repnz
movsl
lcall
adc
jne
push
jns
sbb
adc
xchg
test
xchg
push
inc
fstpl
push
dec
movsb
xchg
jl
and
sub
andb
jo
inc
fdivs
rcrl
jg
jnp
inc
loop
stc
repz
jg
outsl
jp
arpl
scas
ficomps
mov
scas
fmuls
push
mov
flds
repz
ret
mov
shrb
and
cmp
xchg
aaa
fldenv
es
out
xchg
in
mov
pop
stc
cli
ljmp
xchg
or
inc
or
sbbl
scas
mov
decb
push
xchg
mov
push
fidivrl
shll
push
mov
jnp
jbe
fucomip
std
dec
std
pop
cmp
cmp
add
xchg
icebp
into
stos
add
pop
add
add
test
stos
stc
sub
cli
hlt
stos
push
jbe
mov
loopne
pop
mov
in
xchg
sahf
jle
dec
push
xchg
inc
fcmovnbe
cmpsl
leave
adc
out
call
cltd
xchg
inc
mov
adc
and
mov
mov
inc
or
pop
les
jno
and
mov
ret
add
sbb
xchg
jle
push
aas
sub
imul
test
bound
shlb
outsb
inc
nop
out
sahf
fidivrs
push
jg
push
mov
sti
xor
cmpsb
sbb
and
or
pop
ret
test
pushl
sub
adc
fidivs
push
xchg
into
mov
imul
sbb
or
xor
mov
clc
mov
push
xchg
movsb
fsubrl
lock
push
and
rcll
sbb
jbe
cmc
les
or
push
cmp
es
aad
fidivs
loop
ljmp
hlt
shl
rcl
lods
add
pop
add
add
jmp
jge
mov
or
pop
mov
fsub
fisubrl
mov
xor
scas
pop
mov
leave
push
cmpsb
add
pop
jne
hlt
popf
mov
and
push
hlt
mov
lret
inc
or
loope
pop
mov
int
out
data16
das
fcmovnb
mov
arpl
scas
cmp
xchg
not
repnz
lea
mov
sbb
or
mov
idivl
jmp
pop
add
xchg
aaa
push
push
repz
inc
rcr
std
sbb
cmc
cmp
sbb
andb
jb
mov
inc
pop
in
and
in
inc
jp
out
scas
rcll
iret
in
mov
roll
xchg
inc
stc
mov
mov
or
inc
sti
jb
inc
loop
in
mov
divl
pop
mov
fdivp
or
out
test
sti
lods
fcoml
out
stc
loopne
in
aas
pushf
add
xchg
jg
jmp
std
push
int
adc
add
pop
add
add
cmc
fidivl
aas
mov
shlb
sbb
jmp
dec
cmp
or
inc
mov
xor
ljmp
inc
movsb
jbe
mov
sub
ljmp
shll
loopne
clc
adc
movsb
dec
dec
add
sbb
sti
imul
and
fsubrl
push
xlat
adc
data16
push
call
andl
inc
icebp
dec
les
push
jmp
aas
or
mov
cs
out
pop
xchg
and
orb
cmpsl
divl
inc
add
sub
sbb
xor
sub
and
jbe
ss
jp
ja,pt
mov
inc
in
push
and
push
jl
outsb
outsb
es
pop
imul
stc
pop
jmp
push
push
sbb
jmp
jno
mov
test
out
sub
pop
out
inc
sbb
xor
loope
cmp
add
xor
dec
sarb
in
adc
scas
add
pop
add
add
je
xor
inc
or
lock
adc
pop
call
clc
sub
testl
pop
sub
imul
fdivs
cmpsl
cli
fldcw
movsb
out
add
stc
hlt
test
jbe
outsl
xchg
inc
data16
and
xchg
or
push
nop
decl
arpl
sbb
sbb
jae
cwtl
repnz
and
leave
lret
ds
mov
loopne
jns
enter
movsb
sub
xor
sahf
push
ds
dec
mov
ja
and
adc
and
pop
lcall
call
dec
push
jmp
paddd
sub
sti
sub
out
mov
lret
std
fsubl
fidivrs
mov
jecxz
lret
or
mov
sub
inc
xor
das
std
sub
dec
mov
dec
push
fcomip
sahf
test
into
push
sub
aad
dec
jp
jnp
pop
push
add
xor
cmp
or
ljmp
add
dec
dec
inc
xchg
out
mov
test
orb
pop
repz
or
test
xchg
je
adc
dec
fstpt
sbb
test
clc
and
sbb
mov
lods
es
mov
pop
dec
inc
arpl
xchg
jle
dec
fldl
pop
pop
ret
adc
mov
add
sub
jae
pushf
jb
ljmp
xchg
adc
mov
push
push
test
in
mov
and
inc
adc
xor
push
xor
or
xchg
repz
and
fwait
test
and
test
xor
xorl
cmpb
movsb
mov
add
loopne
lahf
mov
jno
cmpsl
jle
adc
sub
scas
and
loopne
pusha
lods
out
mov
notb
sbbb
mov
outsl
shll
dec
int
popf
clc
jae
xchg
sub
push
xchg
insb
or
xchg
pop
add
jp
les
mov
ret
ja
test
mov
add
add
add
loope
loope
or
les
push
push
dec
data16
mov
daa
sbb
jge
cmc
lcall
testl
inc
inc
popf
sub
loope
call
sub
or
cltd
push
adc
cmp
out
sbbl
int3
push
or
push
gs
mov
loopne
push
add
lods
jbe
shlb
mov
add
pop
inc
mov
bound
pop
jge
cmp
pop
stc
mov
aad
dec
into
jns
sub
jae
ja
cmp
mov
andb
cltd
sub
mov
adc
xor
pop
xlat
dec
sbbl
jb
dec
pop
dec
sub
js
mov
fistps
inc
int3
scas
dec
lods
xchg
and
rolb
rclb
pop
pop
push
add
or
loop
dec
or
pop
stc
out
push
push
xchg
data16
jle
enter
add
pop
add
add
sub
ficompl
enter
cs
cld
cli
xor
mov
cmp
subb
test
mov
jno
sbb
xchg
push
mov
xorl
push
incl
andl
in
jbe
data16
xor
aas
jne
and
xor
jbe
je
pop
jae
shll
add
add
cmp
pop
mov
pop
hlt
push
xchg
movsb
xor
test
jns
lret
mov
into
roll
push
loop
mov
mov
ret
pop
or
ss
sub
arpl
in
movsl
popf
mov
push
repz
lret
scas
lods
aaa
clc
lods
xor
gs
sbb
xchg
incb
pushf
xor
subb
ja
push
adc
bound
in
or
cmp
sub
adc
add
push
mov
lcall
test
pushl
add
sti
sub
rorl
fld
xchg
lds
lcall
xor
jmp
xchg
arpl
pop
fidivrl
pop
cmp
ss
pop
lds
aad
inc
fndisi(8087
sahf
inc
mov
xchg
lods
dec
push
fisubrl
rorb
fsubs
or
loope
cmpsl
ds
sbb
popf
lds
cli
mov
and
mov
cwtl
std
int3
rolb
int3
out
arpl
push
lds
fldt
jo
sub
loop
sbb
pcmpeqw
lcall
mov
and
test
xchg
in
lcall
clc
roll
fs
cwtl
sbb
jbe
leave
inc
sahf
out
dec
das
push
into
xchg
push
cltd
xor
push
inc
or
adc
stos
or
cmp
fldl
push
cwtl
repz
ret
movsl
cld
pop
jp
pushf
xchg
inc
sub
rcrb
cli
mov
or
adc
adc
add
add
jne
mov
xchg
movsl
jns
imul
mov
add
add
add
push
jnp
mov
mov
push
cmc
sbb
xchg
das
scas
pop
scas
mov
imul
in
jno
inc
ljmp
iret
ds
adc
in
mov
inc
add
mov
pop
divl
ret
or
sbb
clc
lret
insl
jecxz
int3
out
movsb
in
sahf
mov
and
shlb
or
cmp
aam
rol
jmp
negb
add
mov
out
mov
in
push
imul
loopne
mov
sbb
fmuls
or
xchg
jb
jo
hlt
jecxz
scas
sub
in
and
mov
xchg
je
ljmp
repz
pmuludq
out
jb
adc
pop
ret
ljmp
sub
mov
fisubrl
aam
out
sar
mov
pop
rcrl
es
mov
mov
mov
mov
sahf
fimull
lret
jecxz
or
mov
add
pop
sbbl
cli
test
and
add
pop
add
add
add
icebp
jbe
mov
mov
scas
xor
cmp
cmpsl
inc
push
mov
mov
ja
dec
add
jb
adc
xor
aad
fst
scas
cmp
cmc
or
popa
mov
sub
cmpsb
pop
hlt
ja
je
ljmp
xor
xchg
nop
add
fnsave
jnp
mov
push
mov
mov
adc
dec
push
jle
sbb
int3
pop
push
aaa
fisubrl
lds
mov
lahf
add
sbb
je
ret
cwtl
mov
adc
inc
jge
cmp
mov
scas
pop
repnz
adc
xchg
dec
je
xchg
xchg
xor
xchg
cld
push
pop
cmpsb
add
or
cmp
ret
inc
aas
lods
je
push
pop
mov
jmp
push
testl
inc
shll
cmp
and
arpl
add
in
mov
jecxz
out
arpl
sbb
arpl
push
adc
add
pop
add
add
inc
out
vsqrtss
cmpsl
and
out
sbb
mov
add
sarl
sbb
cmc
inc
std
enter
mov
jl
inc
cmpsl
adc
push
ja
xor
inc
inc
hlt
dec
test
jle
insb
ss
xor
stos
jp
es
mov
int3
or
mulb
lods
mov
mov
push
cwtl
pop
fbld
stos
fisubl
pop
mov
inc
xchg
ja
cmp
pop
gs
xor
cmpb
lods
sarl
lcall
sbb
out
jb
lods
dec
mov
xlat
xlat
mov
push
adc
pusha
pop
or
sub
leave
aad
sub
pop
test
inc
xor
xor
push
cmp
jle
xchg
push
jno
fmul
ds
cmc
and
call
test
lahf
loop
pop
add
inc
popf
mov
dec
je
xor
loope
push
add
std
test
jg
xor
stos
mov
mov
add
add
add
rclb
lds
or
sub
dec
mov
std
jo
fstps
push
adc
mov
sbb
shll
jae
adc
test
aad
cs
mov
stos
mov
xchg
pop
add
enter
repnz
push
mov
jne,pt
inc
scas
inc
mov
pop
jge
xchg
or
xchg
xchg
cwtl
dec
iret
movsb
lods
mov
lock
clc
pop
andb
mov
jbe
das
mov
push
inc
xor
dec
add
jle
insb
adc
out
rol
js
stos
cmc
icebp
loop,pn
aam
xchg
lcall
mov
add
mov
insb
jmp
rcrb
dec
jle
xlat
rclb
js
xchg
jle
mov
or
jmp
lret
xchg
in
aad
nop
push
add
loopne
push
xchg
and
and
and
lock
in
lcall
xor
fs
mov
add
fiaddl
ds
movsl
mov
stos
fidivs
cs
sbb
mov
inc
subb
mov
push
sub
call
stos
mov
inc
aas
arpl
fwait
sti
inc
subl
xchg
ja
imul
sbb
sub
out
xchg
aaa
dec
into
sub
fstpl
cli
jmp
shll
push
std
inc
mov
xor
pop
shr
les
pop
orb
dec
adc
mov
push
cmpsb
adc
shl
inc
mov
push
push
or
mov
pop
push
sbb
mov
lock
test
pop
pop
jnp
xchg
cli
mov
xchg
jnp
adc
inc
inc
adc
mov
cmpsl
pop
aaa
and
daa
insb
pop
adc
jle
fidivrl
loopne
int
in
pop
inc
push
jnp
dec
mov
push
jbe
cmpb
inc
pop
sub
sti
push
popf
push
push
rcrb
sub
mov
mov
sub
scas
adc
lret
dec
or
jg
adc
outsl
xlat
jp
arpl
mov
add
xchg
jg
or
js
stos
mov
xchg
pushl
dec
or
imul
pop
inc
cld
int3
xchg
test
xchg
jecxz
popf
pop
pop
sbb
sbb
mov
inc
leave
shll
jle
shrb
lea
movsb
cltd
inc
sub
and
and
inc
test
scas
jmp
out
addr16
out
pause
push
add
xor
mov
inc
andb
repnz
dec
cltd
push
fsubs
test
or
pop
insl
loopne
mov
add
sbb
inc
mov
or
sub
sub
cwtl
fbld
sub
in
sti
sub
adcb
jnp
cmp
push
add
or
loop
xchg
cmc
xchg
mov
into
hlt
pusha
rclb
mov
push
adc
mov
mov
sbb
or
sub
and
cmpsb
pusha
repz
cs
and
cltd
dec
mov
sub
mov
cli
inc
lcall
add
add
out
idiv
outsl
mov
push
and
ljmp
add
mov
test
ret
or
ljmp
cmp
scas
or
xchg
mov
das
ss
adc
pop
dec
cmp
ljmp
push
cmpl
inc
lahf
cmp
jl
adc
fsubrs
sbb
and
in
mov
aaa
dec
mov
adc
fnsave
jno
cld
mov
sub
sbb
lcall
ss
mov
clc
jno
jo
int
movsl
repnz
nop
and
cltd
sbb
xchg
cmp
imul
mov
and
aam
pop
and
mov
push
mov
pusha
push
mov
push
jno
pop
add
add
adc
sbb
pop
adc
dec
ds
dec
movsl
stc
cld
sarl
pop
add
popa
push
icebp
xchg
hlt
cmp
jnp
dec
pop
jle
xor
mov
out
fbstp
mov
add
and
lcall
lret
mov
adc
xchg
push
call
jle
jb
sarb
mov
testl
pusha
inc
addr16
pop
test
pusha
mov
iret
inc
incb
xor
dec
push
and
fnstsw
dec
stc
rcll
repz
push
jbe
cmpsb
leave
mov
inc
andl
xor
jne
dec
mov
shrb
clc
mov
or
pop
leave
dec
scas
pop
sub
sahf
sar
sarl
push
cmp
jmp
mov
dec
xchg
xor
roll
xlat
subl
xor
out
loopne
ja
jl
jae
ja
pop
leave
aaa
push
das
inc
adc
add
xor
test
dec
sbb
mov
push
in
push
xor
sbb
out
or
sbb
fdiv
pop
dec
and
divl
push
jl
pop
xor
push
push
call
gs
out
mov
add
shl
jmp
jl
cltd
insl
cli
fnstenv
or
sbb
jmp
jns
push
cli
inc
fisubs
sub
outsl
push
fs
in
pop
stc
hlt
fsubs
aas
sahf
sub
addr16
enter
into
lret
nop
lret
jno,pt
jl
or
sbb
dec
add
sbb
pop
gs
test
xchg
mov
xor
out
ret
cmp
mov
xor
pop
enter
scas
out
cs
sub
pop
in
jecxz
dec
les
pop
cmp
fdivs
les
jle
enter
out
loope
jmp
shl
push
imul
jns
inc
lods
ret
scas
les
pop
xchg
sti
pop
int
push
pushf
jnp
dec
dec
adc
mov
mov
push
fisttpl
es
aaa
rcl
cltd
push
fdivs
sbb
mov
in
stos
idivb
inc
sbb
add
add
std
sti
leave
sti
iret
jmp
dec
mov
lret
add
pop
add
add
jmp
fldl2t
lahf
shll
cmp
mov
test
rorb
popf
xor
xchg
fs
or
adc
inc
xlat
sub
and
mov
and
enter
bnd
pop
insb
inc
and
mov
sbb
cmp
cmpsb
sub
mov
sti
xchg
jns
fmuls
adc
mov
imul
inc
aaa
jp
data16
xchg
loop
jge
cmpsl
mov
ljmp
roll
adc
xchg
ljmp
ss
lahf
add
adc
stos
mov
push
daa
lcall
sub
xchg
fistpll
jmp
xchg
and
or
pop
adc
inc
add
and
test
out
and
addr16
mov
and
adc
adc
js
add
push
js
adc
int3
sub
mov
les
xor
adc
add
push
add
mov
xchg
pop
push
jle
ljmp
add
rolb
shrb
fwait
rclb
adcb
jle
dec
outsb
iret
jecxz
icebp
icebp
mov
call
clc
popa
into
shll
xchg
sbb
aam
adc
jae
lea
addr16
bound
icebp
pop
aam
inc
mov
push
aaa
mov
inc
icebp
mov
fwait
add
popf
mov
or
lret
pop
lret
rorl
xlat
cmpsb
fstps
jbe
fisttps
outsl
adc
enter
mov
cmp
fcoms
pop
xchg
shlb
popf
repnz
and
je
dec
pusha
lods
loop
inc
les
pop
jg
adc
icebp
add
push
jge
cmp
xor
pushf
and
lds
push
ret
and
subb
nop
lahf
cmp
lock
fdivr
xchg
add
add
sbbl
mov
inc
xchg
and
cmp
aaa
push
mov
xor
add
fwait
mov
or
jg
mov
xor
sub
push
mov
add
push
mov
lahf
and
and
mov
inc
pop
mov
into
pop
in
inc
mov
sub
ret
in
adc
sub
clc
jg
int3
xchg
movsb
jge
lret
jmp
shlb
push
andb
iret
inc
fwait
addr16
and
gs
push
lret
sbb
xchg
insl
into
add
jne
pop
fisubrs
fwait
push
lods
adc
scas
mov
cwtl
or
mov
push
mov
mov
add
push
jmp
js
adc
and
aam
aad
into
ss
sti
pop
inc
stc
xchg
jnp
pop
sbb
movsb
xor
aad
lods
in
lcall
nop
mov
in
sti
mov
arpl
xchg
push
stc
pop
sbb
mov
enter
rolb
bound
imul
cmp
xor
mov
js
adc
pop
xor
sub
cmpsl
push
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
mov
lcall
dec
js
das
mov
repz
orl
inc
ljmp
out
mov
ljmp
jbe
fisttpl
cltd
mov
sbb
shrl
sbb
adc
daa
inc
sbb
out
xlat
movb
add
out
mov
jo
mov
sbb
inc
push
pusha
in
mov
mov
in
dec
pop
ds
sarl
push
adc
das
sti
imul
xlat
and
out
xor
or
mov
sub
repz
test
rol
adc
cmp
popa
mov
mov
test
inc
push
out
hlt
dec
inc
fcomp
pop
sti
int3
mov
add
stos
cwtl
rcll
mov
xor
addl
jmp
jle
xchg
pop
xchg
fstl
lods
pop
mov
add
pushf
shrb
xchg
mov
cmp
pop
add
add
rcrb
fscale
mov
call
xchg
sbb
adc
and
in
cmpsb
int3
mov
outsb
in
lret
jb
push
sti
imul
test
icebp
int3
xchg
scas
cld
xchg
lods
dec
aas
push
rcll
sub
mov
movsl
xchg
sti
and
jbe
mov
in
enter
pop
fisubrs
out
int3
xor
jb
sbbl
loop
aam
test
mov
fscale
lret
subb
cwtl
notl
push
sub
rorb
or
sbb
repz
int
into
mov
gs
icebp
data16
sarl
jl
loop
mov
negl
in
adc
hlt
add
mov
jne
dec
ret
ret
inc
or
xlat
pusha
in
popf
fmull
xlat
popa
mov
in
xor
out
pop
orb
sbb
lock
icebp
sbb
inc
add
sub
scas
mov
fucomip
imul
ret
pop
add
add
call
sub
cmc
ljmp
shr
jae
fs
push
aaa
and
cld
bound
or
cmpl
int
adc
or
scas
and
mov
test
imul
in
popf
pushf
and
jp
ja
inc
mov
ss
lret
int3
rorl
pusha
pop
pop
push
mov
aaa
sbb
in
inc
jbe
adc
xchg
add
mov
sbb
xchg
xchg
daa
xchg
mov
sbb
or
add
mov
dec
sub
jo
fsts
pop
repz
aas
dec
lcall
pop
push
jnp
call
push
loope
ds
outsb
adc
sbb
lods
gs
inc
or
int
notl
mov
dec
mov
or
xor
cld
roll
sahf
inc
jnp
dec
cwtl
scas
adc
add
jne
jne
jg
loop,pt
lret
or
add
pop
add
add
sti
adc
cwtl
jg
jno
xchg
or
mov
pop
test
jb
nop
fiadds
daa
dec
mov
sbb
enter
inc
mov
cmpsb
cld
repz
xchg
std
clc
inc
xchg
xor
push
and
adcl
loope
pop
cmp
cmpsl
aad
jle
jnp
add
je
sub
ljmp
adc
jl
cmpsb
inc
sub
push
pop
cmpsb
insb
adc
cs
pop
dec
xor
jo
mov
push
jne
lret
or
xchg
out
lea
pop
hlt
xchg
pop
ljmp
dec
dec
jno
add
jo
aas
adc
ljmp
push
mov
mov
mov
cmpsb
xor
rorb
rorl
clc
les
addr16
pop
and
cmpsb
gs
ss
push
cli
push
cwtl
fcompl
fimuls
in
shrl
add
sbb
mov
mov
dec
add
push
scas
jge
les
add
add
add
loopne
lods
push
out
jnp
cmpsl
adc
sbb
xchg
add
out
add
rolb
mov
sbb
add
sahf
hlt
fcompl
jg
inc
shlb
cmp
xchg
addr16
lret
sub
sub
dec
mov
fisttps
in
and
mov
cmp
xchg
sub
in
shll
outsb
mov
sbb
mov
and
repz
sbb
add
aaa
adc
in
cltd
xchg
add
inc
xor
into
stos
pusha
sti
les
mov
outsl
gs
cs
inc
cmp
jns
outsb
movsb
jb
das
xchg
out
call
sub
mov
leave
inc
mov
xor
xchg
out
push
xor
mov
arpl
fldt
mov
mov
gs
enter
add
int3
daa
imul
push
scas
mov
add
outsb
jle
lods
testl
push
mov
pop
add
add
sub
lcall
jle
push
push
xchg
dec
pusha
dec
or
jnp
inc
js
insl
fs
int
mov
in
jns
flds
push
dec
hlt
fldt
aam
cld
insl
add
cmc
pop
mov
jb
stc
push
dec
dec
dec
sbb
cs
addr16
int
cmpl
add
mov
notl
or
into
push
lret
sbb
push
fistps
icebp
jle
stos
das
popf
out
add
je
push
jno
cld
fstps
dec
lock
mov
pop
bnd
push
cmpsl
not
dec
jmp
inc
int3
and
imul
popf
jb
mov
int
or
or
sahf
push
js
mov
out
lcall
mov
mov
push
aam
and
dec
sub
xor
mov
sub
xchg
movb
push
hlt
mov
pushf
add
mov
arpl
cmpsb
cmp
test
add
pop
add
add
push
loop
in
leave
clc
std
in
cmpsl
inc
mov
sub
psubb
push
gs
movsl
push
idivb
je
scas
add
cltd
pop
std
mov
jmp
das
xchg
sbb
test
test
loop
fildll
adc
mov
push
adc
out
lods
shlb
inc
mov
sbb
arpl
les
int
or
inc
dec
aad
out
movsb
int3
sub
rorb
test
sub
cmc
movsl
subb
subl
mov
iret
xor
ffree
sahf
push
idivl
sub
fs
imul
in
outsl
cmpsb
lock
mov
mov
nop
mov
sub
stos
inc
iret
mov
adc
push
aad
pop
rclb
movsb
jmp
js
pop
das
jno
cld
push
sub
sbbl
test
sbb
xlat
push
aam
or
inc
pop
cld
mov
add
pop
add
add
xor
or
fst
fwait
mov
mov
sti
idivl
rcr
data16
mov
sub
in
pop
dec
dec
mov
stos
mov
sub
cltd
movsb
dec
call
dec
inc
cmc
sbb
fsts
fimuls
insl
adc
adc
xchg
addr16
inc
jnp
ficomps
pop
push
jbe
ljmp
cld
lret
xchg
ds
dec
xor
xchg
pop
fimuls
mov
ror
jp
lret
pushf
jnp
out
call
push
sbb
sub
loop
mov
rolb
pop
cwtl
fisttpl
jle
in
iret
js
jmp
mov
jbe
arpl
pop
repnz
mov
inc
xor
imulb
xor
jp
loope
out
mov
pushf
jp
jbe
lods
shll
adc
popf
test
fmul
xor
fisttpll
cmpsl
sub
and
add
push
sub
cmp
jg
dec
das
pop
mov
add
pop
add
add
push
inc
dec
pop
rcrl
inc
mov
fmuls
pop
sub
pop
inc
fs
scas
loopne
cmp
mov
adc
out
add
popa
adc
jne
insl
cmp
cmp
cmp
popa
sti
test
pop
xchg
pop
jbe
sub
leave
cmp
sbb
cli
enter
sarb
fsubrl
xor
add
int3
sbb
out
addr16
hlt
lea
or
sub
mov
xchg
jae
cmp
pop
iret
sub
cmp
std
dec
insb
sub
loopne
lock
insb
mov
call
setp
xchg
adc
inc
push
sbb
repz
jmp
cmp
aas
fdivrs
adc
in
loopne
mov
imul
out
aad
xchg
mov
fisttpl
cmp
in
data16
inc
out
out
jmp
pushf
scas
jb
iret
in
add
xor
fistpll
out
repz
fmull
leave
add
pop
add
add
xor
dec
or
stos
add
cmp
int3
pushf
push
pushf
pop
inc
movl
in
inc
push
jae
fnstsw
jo
shll
xchg
loope
xlat
shrb
mov
in
fldt
adc
mov
imul
bound
add
xchg
push
sub
idivb
pop
cli
div
popf
insl
fiaddl
ret
fmull
mov
mov
mov
push
loopne
cli
jb
xor
aam
mov
filds
ljmp
pop
aas
shrl
in
insb
jle
mov
push
lret
jp
push
mov
imul
adc
pop
dec
jmp
push
cmp
push
xor
xchg
mov
cmpsl
call
insb
fnstsw
addr16
mov
movsl
mov
pop
cs
jmp
push
mov
leave
lds
ret
outsb
insb
mov
ret
jno
xchg
add
mov
and
lret
pop
add
add
jg
pop
cmp
or
and
jge
jne
mov
add
push
lahf
cmp
sbb
mov
repnz
sbb
push
or
mov
fscale
mov
cmp
pop
sub
lock
add
iret
cmpsb
xchg
mov
add
ss
add
ljmp
pop
cmp
ret
adc
sbb
push
pop
movsl
xchg
sub
subl
add
dec
repz
mov
sarl
fidivrl
xchg
pushf
jmp
daa
ss
xor
add
push
sbb
and
gs
test
mov
inc
bound
pop
test
adcl
sbb
cs
dec
sub
les
jecxz
fwait
push
js
and
fildl
xor
out
or
lret
sub
ljmp
cmpsl
jb
popa
jnp
stc
enter
in
adcl
cmpsl
lret
add
pop
add
add
adc
mov
out
lods
ret
dec
mov
and
dec
pop
mov
lods
xorl
mov
movsb
bound
cmc
add
xchg
in
orl
pop
mov
ds
test
popf
or
cmpsl
daa
cmp
jl
fucom
je
add
xchg
aaa
outsb
push
cmp
outsb
pop
xchg
add
fcmovnbe
les
lret
mov
outsb
cs
xchg
pop
mov
cmpsb
icebp
inc
nop
xor
sbb
add
xchg
arpl
insb
les
pop
je
out
rcll
movsb
xor
dec
out
lock
pop
lcall
jl
push
inc
mov
sub
rcr
pop
ja
in
or
nop
jl
cwtl
and
insl
xor
daa
ficomps
mov
pop
enter
jnp
dec
nop
mov
iret
cwtl
loopne
mov
or
cmp
add
add
imul
cmc
decl
das
stos
scas
int3
add
pop
add
add
pop
pop
movsl
cmpsl
cs
adc
ret
addl
shlb
cmp
and
loope
pop
mov
icebp
mov
push
inc
push
cmp
sub
adc
xchg
imul
ret
and
xor
nop
mov
outsb
test
add
repz
cmp
cli
mov
sub
adc
bound
stc
cld
repnz
dec
fwait
lret
jmp
loopne
call
xchg
xchg
push
pop
xchg
mov
cltd
and
adc
jo
mov
jns
inc
cmpl
int3
add
add
mov
pusha
push
jg
xchg
scas
pop
ret
rcr
push
xchg
lcallw
hlt
fs
push
pop
test
jo
nop
movsb
or
pop
mov
clc
inc
and
insl
sarb
jmp
mov
dec
daa
jg
or
push
adc
mov
add
movsl
mov
iret
arpl
or
sbb
add
pop
add
add
out
das
xor
ljmp
jmp
sub
pop
sbbb
shll
insl
lea
inc
mov
scas
out
jl
or
negb
icebp
jg
jle
push
and
loop
icebp
xchg
pop
inc
test
sub
jl
cli
sub
push
xor
dec
out
xor
inc
div
adc
dec
loopne
add
hlt
sub
cmpsl
jl
dec
sbb
js
add
jge
call
inc
sahf
lods
mov
jo
xchg
lock
add
or
xchg
push
and
stos
and
inc
mov
mov
push
cmp
leave
pop
mov
push
cmp
push
nop
lret
adc
pop
push
mov
dec
ljmp
or
and
pushf
mov
stc
gs
loopne
adc
mov
aaa
push
loop
fdivrs
jo,pt
bnd
packuswb
in
sub
xor
add
add
out
into
shlb
scas
mov
mov
add
add
lea
mov
push
mov
pop
test
cmc
or
out
je
mov
bound
dec
pop
xchg
dec
jo
xchg
loopne
iret
aaa
ror
pop
ficoml
xchg
inc
fldz
movsl
pop
repnz
fnstenv
sahf
out
sbb
insl
into
pop
in
jno
imull
xchg
into
test
push
and
sahf
f2xm1
dec
push
jecxz
pop
push
dec
pop
dec
or
mov
mov
mov
and
lcall
cs
rolb
dec
mov
and
ss
std
sbb
pop
xorl
inc
xchg
scas
jnp
shlb
or
test
iret
daa
cs
or
adc
out
rcr
push
and
sub
filds
cmpsl
popf
out
mov
pushf
jle
pop
and
rcl
sub
mov
sbb
test
int3
rolb
fimuls
push
jne
bnd
mov
add
add
xchg
and
je
out
mov
stos
xchg
push
test
add
pop
add
add
sbb
in
dec
ror
mov
repz
lds
mov
mov
mov
lret
adc
jg
movsb
ljmp
push
sub
les
pop
les
pop
adc
icebp
ffreep
shlb
lods
cli
lret
sti
sarb
jge
fimuls
popf
jmp
sbb
loopne
int
mov
shr
mov
movsb
es
jmp
insl
adc
cltd
mov
cmc
test
inc
xchg
add
mov
out
mov
sub
pop
loope
adc
bound
mov
verr
jp
out
cs
lea
popa
jecxz
fdivr
fisttpll
popa
mov
jge
mov
jmp
push
jg
sarl
dec
enter
ss
in
loopne
int3
insl
imul
mov
sbb
adc
pop
and
adc
mov
aam
enter
mov
mov
loop
push
add
or
dec
insl
sub
add
dec
daa
dec
das
outsb
imul
sub
fbld
add
add
add
imul
lds
xchg
cld
push
pop
cmc
addl
adc
out
insl
jl
add
xorb
inc
jbe
or
jne
mov
xchg
ss
xchg
lds
repnz
ja
pop
add
sub
add
bnd
in
scas
out
mov
sti
inc
aaa
mov
inc
cmpsb
push
cmpsl
sub
call
cmp
in
bound
xchg
ljmp
jne
xor
and
popf
mov
cmp
mulb
shl
mov
mov
push
std
lods
lock
addb
fdiv
jno
je
pop
or
jo
in
fidivrs
fs
scas
sub
sahf
jbe
jp
cli
sbb
jnp
outsl
pop
push
cmc
out
stos
cmp
aam
push
popa
lcall
mov
ja
sbb
cs
jb
sbb
out
test
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
push
lock
or
fs
stc
lret
out
addr16
nop
sub
icebp
rcll
sbb
arpl
adc
lds
push
sub
or
mov
popf
dec
lret
imul
add
or
or
into
cmp
mov
les
cmp
cmp
pop
and
jecxz
and
dec
add
add
push
movq
pop
orl
push
cmp
mov
hlt
add
loopne
and
jb
jmp
mov
adc
push
jbe
sbb
test
imull
mov
pushf
loope
pop
pushf
outsb
pop
sbb
push
stos
jmp
cmpsl
fsubrl
or
into
cmpl
fdiv
ds
xor
lahf
js
rcrb
ss
lret
and
add
cwtl
jbe
lods
jno
mov
jl
jne
xor
or
clc
out
push
repnz
test
cmpsl
add
neg
outsl
xor
fptan
imulb
fcom
add
pop
add
add
dec
push
cmp
ds
add
adc
rcll
or
adc
jge
pop
pop
mov
loope
adc
and
movsl
aam
dec
shlb
scas
cmp
xor
sub
and
hlt
jl
int
jnp
push
rorl
pop
movsb
pop
mov
rcrl
or
sti
xor
xchg
push
jb
inc
xchg
push
pusha
mov
xchg
fldt
aas
mov
xlat
cmpsl
in
mov
dec
in
or
adc
lea
sbb
cmc
push
pop
cld
cmp
out
mov
xchg
int
mov
shrl
inc
ljmp
pop
jb
push
inc
mov
add
inc
push
pmaxsw
or
lods
pop
into
int3
faddl
daa
and
loop
fcmove
bound
lock
sbb
cmc
mov
xchg
subb
lahf
add
xchg
js
and
add
add
add
sbb
in
and
add
pop
add
add
mov
mov
std
or
or
leave
cmpsb
push
sbb
addr16
pop
incb
out
inc
popf
fistps
mov
mov
aam
push
cmc
cmp
inc
or
sbb
xlat
out
std
outsl
popf
sub
loopne
das
or
cmpsl
cmp
dec
insb
in
cmp
inc
ficoml
fs
dec
cmp
aaa
in
jge
in
cmpl
push
jmp
fs
xor
popa
pop
mov
push
push
std
das
popf
mov
mov
push
sub
push
ljmp
mov
js
fsub
aas
mov
stc
nop
daa
and
mov
push
fdivl
and
or
mov
shll
repz
ret
movsb
jle
ljmp
incb
and
scas
mov
pop
movsl
and
inc
fadds
add
mov
pushf
adc
ds
stc
hlt
sub
add
pop
add
add
out
lods
test
and
or
ret
and
mov
sub
scas
mov
mov
fisubl
sub
dec
and
movsb
add
scas
fisubrl
stos
pop
fcoms
enter
push
xchg
rcrb
cmpsl
pop
xchg
mov
dec
fcomps
dec
jle
inc
sub
mov
jae
add
pop
lds
lds
mov
mov
sub
imul
cmp
stos
mov
in
xor
inc
jo
mov
std
fcomp
dec
jb
in
xor
inc
icebp
popf
ja
push
mov
inc
mov
nop
xor
adc
jns
or
rcr
je
mov
sub
scas
outsl
mov
pop
inc
imul
pusha
popa
je
es
pop
pop
sahf
pop
sbb
jp
xor
dec
xor
push
das
sbb
add
add
lcall
fstp
push
jno
in
aad
add
add
add
cmc
scas
sbb
js
lock
xchg
fmull
movsb
jbe
push
out
adcb
jb
pop
adc
aad
data16
mov
mov
cwtl
insb
mov
mov
and
jl
push
iret
pop
xor
aas
dec
into
pop
call
lock
adcl
stos
cmp
sub
dec
push
inc
push
or
roll
scas
sarb
stos
movsl
mov
scas
push
jnp
add
notb
or
pop
insl
emms
ret
and
sbb
cmp
sub
inc
stos
xchg
cmpsb
repz
and
xchg
pop
das
cmpl
ljmp
in
sub
fistl
pop
adc
out
jnp
dec
pop
les
addr16
aas
ja
sti
lods
bound
dec
mov
xchg
mov
and
pop
test
pop
iret
lock
icebp
pushf
insb
and
add
xchg
ja
push
jg
xchg
mov
or
add
pop
add
add
lret
jne
fistpl
imul
sahf
mov
or
mov
or
scas
push
shlb
pop
scas
popf
or
ret
imulb
adc
shll
pushl
xchg
aas
or
movl
xchg
dec
xor
testl
cmp
dec
cs
enter
xor
fisttps
dec
cmpsl
xor
lahf
push
jge
lret
lods
aad
fnstcw
push
rorl
iret
imul
pop
jecxz
cmp
rcl
inc
push
mov
and
cmp
jo
xchg
mov
icebp
ret
mov
push
das
add
loopne
inc
out
shlb
repnz
cmp
mov
fs
sbb
imul
mov
pop
rep
jae
xchg
fwait
xchg
adc
inc
iret
or
jbe
sub
jnp
aas
mov
les
iret
loope
cmp
add
int
out
out
imul
aas
cld
push
in
fistps
pop
add
add
inc
add
aaa
notb
or
add
jl
jl
push
ds
sbb
sahf
lea
cmp
jbe
repz
scas
or
insl
fnstsw
push
jge
movb
add
pop
mov
ret
insb
ljmp
mov
pop
dec
out
andl
in
or
xorb
aad
insl
scas
sti
leave
mov
mov
int3
iret
xchg
repz
mov
stc
out
stc
int3
mov
in
xchg
in
in
xchg
ljmp
iret
daa
in
test
arpl
or
xor
lret
dec
mov
add
jae
cmp
test
xor
xorl
dec
repnz
push
or
or
sbb
xor
and
fnstcw
lods
test
mov
outsb
fldt
aam
jbe
sub
out
fldcw
push
adc
xchg
sbb
fwait
xor
flds
add
add
add
sub
sbb
and
loope
dec
inc
mov
cli
inc
and
movsl
shrb
mull
mov
mov
ss
in
push
div
nop
jb
push
call
add
cmpsb
mov
cwtl
cmp
ljmp
pop
dec
xchg
out
dec
or
lods
jbe
jmp
and
push
xor
sbb
push
push
or
lds
dec
pusha
jne
fidivrl
adc
hlt
cli
mov
mov
mov
pop
cli
dec
mov
pop
in
scas
or
add
and
pop
push
enter
lods
cltd
push
out
push
inc
loop
add
mov
aam
pop
mov
mov
pop
cmp
outsl
in
repnz
jno
scas
cmc
inc
ss
cmp
ja
adc
into
rorl
clc
adc
fadds
push
jno
mov
lds
arpl
sahf
push
cmp
xchg
in
ljmp
add
in
sbb
sahf
cmc
fsubrp
jnp
push
xor
shlb
xchg
or
add
pop
add
add
pop
popa
faddp
sbb
mov
pop
xor
cmp
mov
incl
or
jno
mov
lahf
fcomip
mov
jp
test
js
sbb
fadds
stos
jb
dec
cmpsb
icebp
in
jae
les
jne
push
or
push
scas
xchg
dec
jg
push
xor
and
jp
sbb
xor
push
mov
pop
jne
fnstsw
sbb
push
pop
mul
daa
jo
mov
push
bnd
sub
fwait
pop
scas
cwtl
sub
ljmp
ja
ja
test
out
mov
movsb
mov
test
outsl
cmp
stos
pop
rcrl
sub
insb
mov
outsb
sub
mov
adc
icebp
mov
adc
jmp
jp
pop
cmp
test
cmc
mov
mov
gs
cmp
pop
dec
ret
cmp
add
add
jle
jg
std
fisttpl
inc
push
mov
cmp
add
pop
add
add
outsl
xchg
std
js
jecxz
into
xchg
popf
mov
incb
push
adc
jg
cmp
fucomi
out
in
xchg
mov
add
daa
imul
cmc
and
cmpl
inc
push
add
or
dec
jne
jb
mov
jno
lods
nop
adcb
push
mov
aaa
adc
aaa
out
jb
test
pop
cmp
lret
xchg
test
inc
shrl
stos
call
add
scas
in
faddp
andl
adcl
and
jo
repnz
in
add
fwait
js
aas
push
je
aaa
frstor
int3
xchg
fucomi
jl
mov
aam
mov
insb
cmp
lea
cwtl
jge
les
xchg
mov
insb
xor
mov
inc
orl
repnz
stos
cmp
mov
pop
mov
xchg
jmp
mov
mov
cmp
ljmp
sub
adc
add
add
add
jne
inc
jecxz
or
push
mov
inc
add
jp
adcb
pop
cmc
test
out
lahf
cs
fld1
mov
push
mov
mov
cmpb
mov
sbb
das
cs
popl
jmp
xchg
pop
add
fs
add
cmp
dec
imul
xchg
leave
sarb
int
shlb
push
push
or
cld
xor
test
dec
rorb
push
xchg
out
push
stos
jp
inc
popa
sub
adc
xchg
pop
cltd
jge
jb
mov
sbb
jnp
push
inc
outsl
mov
repnz
lahf
mov
arpl
loop
push
xchg
rolb
rcll
pop
jae
and
xor
bsf
mov
push
mov
mov
jnp
sbbl
dec
scas
cmpsb
jnp
cld
out
gs
data16
add
sbb
jmp
addr16
xlat
pop
ret
fldl
add
add
add
lea
popa
popf
adc
shll
aaa
push
mov
adc
jp
fldcw
or
pop
and
sbb
adc
sub
push
mov
roll
repnz
jl
cmp
mov
cmp
push
add
mov
inc
jno
cmp
popf
les
out
pop
dec
mov
or
cld
fdivl
call
mov
xlat
cmp
ja
adcl
dec
mov
daa
push
idiv
ffreep
insb
mov
push
test
mov
repz
and
lahf
mov
lret
jns
jmp
xchg
in
jbe
jmp
jne
add
outsl
push
cld
shl
cmp
lret
push
mov
roll
jg
rcll
pop
es
pushf
push
repz
and
mov
mov
add
dec
shll
mov
cld
xchg
das
lods
pop
shll
dec
sub
add
push
out
jb
shrl
and
add
add
or
xchg
cwtl
mov
jmp
pusha
or
inc
insb
dec
sub
shlb
push
pop
iret
stos
je
stc
xorb
inc
out
fsubrl
arpl
sub
adc
pop
scas
pop
mov
and
sbb
and
gs
and
push
xlat
bnd
fs
inc
cmp
add
in
sub
cwtl
jecxz
push
cltd
movsb
lds
in
inc
insb
or
out
push
mov
popa
cmp
cld
repnz
pop
testb
lock
cmp
sbbb
cmp
fistps
mov
gs
and
insl
ss
scas
mov
mov
xchg
mov
lret
adc
or
cmc
push
adc
ljmp
shl
cmc
jbe
adc
jmp
lods
movsb
rcrb
adc
xchg
cltd
sbb
mov
les
push
rcrl
xor
or
xchg
cmc
insl
into
mov
inc
push
add
jg
mov
lcall
iret
mov
stc
jl
xor
sub
add
pop
add
add
push
mov
mov
js
mov
rolb
gs
push
pop
jl
push
jnp
push
loopne
dec
fs
insb
sar
xor
mov
lret
xlat
daa
clc
inc
or
outsb
jge
inc
idivb
mov
pop
cmp
pop
data16
cmp
xor
je
out
aaa
nop
cli
mov
add
inc
mov
stos
in
leave
sti
cmpsb
iret
mov
push
out
pop
daa
test
mov
add
je
daa
test
test
mov
add
push
not
dec
daa
xchg
jns
fsts
xorb
lock
and
pop
loopne
enter
divb
ds
mov
cli
cmp
int
stos
push
xchg
jnp
dec
adc
adc
xor
mov
sbb
jae
lock
mov
and
std
ror
in
mov
jo
sbb
jns
in
inc
and
add
pop
add
add
and
xchg
mov
mov
mov
es
test
pop
or
das
fisttpl
xchg
loopne
inc
or
jnp
cmp
add
and
jns
push
scas
fsts
mov
inc
enter
cmp
push
mov
out
sbb
xor
add
sar
inc
into
dec
fadds
aad
sahf
xor
dec
or
cmpsl
jecxz
mov
jl
mov
push
scas
jle
popf
sub
or
or
mov
sbb
movsb
in
jg
pop
xchg
mov
mov
loopne
add
pop
enter
jnp
enter
in
cltd
lret
mov
mov
mov
out
sub
jle
nop
xchg
pop
mov
repnz
inc
or
inc
jb
add
fadd
fsubp
jnp
mov
push
sbb
loope
add
add
add
mov
cmpsb
sahf
mov
insb
daa
ljmp
mov
popa
sub
repnz
inc
test
movsl
sub
rorb
lret
lds
add
jmp
sbb
dec
stos
cmpsb
push
fsubl
outsl
xchg
cmp
xor
imul
mov
int
mov
pop
test
sbbb
movsl
dec
add
std
inc
mov
add
fnstenv
jo
out
orl
scas
add
fmul
cmp
inc
add
or
jns
xor
inc
jl
jbe
inc
dec
cmp
add
dec
jp
or
jge
cwtl
repnz
bound
jle
adc
cmp
or
add
sbb
iret
popa
mov
xchg
in
jbe
out
inc
mov
repnz
hlt
inc
pop
out
mov
mov
adc
mov
sub
push
cmp
sub
cld
cli
jle
fmuls
outsb
mov
push
inc
loop
add
add
add
and
ljmp
mov
cmpsl
sub
sbb
or
jae
pop
push
adc
lret
in
out
mov
or
push
dec
jo
cmp
push
xchg
js
inc
leave
inc
sti
jg
or
push
mov
or
je
mov
fs
hlt
xorb
pop
cmpl
add
fcmovne
or
push
cmc
aam
mov
mov
je
out
in
push
scas
mov
clc
xlat
jbe
imul
ret
sub
andb
iret
imul
mov
call
xchg
sahf
ja
mov
push
mov
xchg
xor
xor
loop
jo
mov
gs
das
insb
dec
mov
cmpsb
pop
push
aad
jmp
divl
int
loopne
in
call
insb
cli
aaa
andb
push
dec
aaa
fnstenv
cmp
sbb
mov
lea
pop
jbe
ja
sti
ret
or
pop
out
lds
add
add
add
pop
cmp
dec
rcr
adc
jno
add
mov
jne
fcomi
and
divl
xchg
jp
rclb
addr16
rorl
js
or
jno
sub
and
xchg
addr16
fstpt
aad
cmpsb
aad
or
xor
inc
movb
inc
cmp
lahf
outsb
dec
and
push
dec
fisubs
push
mov
push
out
mov
sti
fldcw
sbb
fnstenv
cmpb
aad
mov
adcb
jge
inc
ficoms
enter
cmp
sub
mov
xchg
or
test
sbb
movsb
adc
js
push
jge
mov
xchg
dec
test
sbb
mov
sbb
or
push
daa
arpl
out
mov
fimuls
push
enter
sbb
scas
aam
xchg
add
sbb
testl
jno
dec
pushf
rcrl
mov
add
add
into
arpl
cmp
push
dec
in
add
add
add
lret
sub
jbe
fidivs
inc
cmp
add
stos
jnp
leave
imul
sub
rorb
nop
daa
testb
sbb
stc
mov
sbb
mov
mov
or
jne
pop
xor
inc
clc
repz
movsb
je
imul
xor
arpl
jge
stos
insl
mov
mov
mov
push
mov
loope
jns
fistpll
ficomps
data16
mov
mov
test
or
ud0
scas
cmpsb
jne
test
aad
cmpsl
in
push
fwait
rclb
aam
sub
xlat
lock
lahf
iret
mov
js,pn
ret
dec
adc
popa
cltd
pusha
mov
in
jbe
cs
mov
dec
mov
dec
pop
testb
movsl
and
inc
lock
pop
sbb
add
inc
js
das
mov
movsl
in
mov
add
stos
xchg
pop
xchg
xor
xchg
push
sub
add
ja
incl
add
aam
in
add
add
add
popf
loop
xor
xchg
sbb
aad
inc
xchg
gs
loop
mov
mov
inc
lret
xchg
dec
loope
mov
dec
stos
dec
repnz
aad
scas
dec
imul
xchg
gs
mov
jge
sub
cltd
in
pusha
ja
jecxz
andb
leave
cld
xchg
cltd
jmp
outsb
pop
push
pop
add
sahf
adc
pop
imul
je
in
jne
sbb
mov
xor
lea
and
sub
mov
add
lret
add
popa
inc
push
adc
sub
insb
pop
xchg
and
leave
add
jmp
ror
lahf
out
test
arpl
mov
add
clc
adc
lods
cmpsb
mov
inc
inc
lods
cs
push
pop
bound
js
ljmp
movsl
clc
ds
mov
daa
dec
or
push
aad
aad
push
xor
repz
lock
jg
mov
das
fistps
add
pop
add
add
cmpsl
cmpsl
and
cmpsb
dec
sbbl
adc
adc
mov
mov
dec
push
test
flds
jnp
mov
dec
dec
add
pop
addr16
ret
out
ja
int
les
mov
sub
nop
in
push
popa
ficoms
stc
cmpsb
das
mov
cltd
in
pop
xor
ljmp
and
iret
mul
insl
shll
cmp
add
or
push
paddsb
cmp
dec
jbe
dec
pop
loop
mov
mov
jmp
mov
cli
insl
loopne
inc
lods
outsl
test
rorl
lea
jns
or
lret
mov
in
call
mov
add
inc
pop
or
or
push
add
clc
lods
sub
out
sti
fidivl
jo
or
fnstenv
popa
mov
mov
clc
or
ljmp
mov
movsl
fcompp
mov
mov
add
pop
xlat
fldt
push
jns
out
add
add
add
jne
push
daa
clc
pop
ror
or
ficoms
jne
xor
incb
cwtl
jg
push
loope
mov
lods
push
add
pop
les
xchg
lret
pop
sub
fsubrp
test
sarb
out
cmc
adc
or
xchg
aas
inc
or
cmp
cli
rcrb
dec
ja
dec
fdivl
mov
sbb
incl
jle
mov
lds
ret
sub
out
jg
xor
lret
dec
sti
inc
pushf
cmp
mov
ret
or
aam
xchg
pop
and
or
or
pop
and
mov
sbb
cld
adc
divl
fstpl
int3
nop
cld
out
inc
xorl
sub
hlt
fcompl
popa
mov
aad
loope
out
cmp
mov
xchg
and
pop
mov
inc
shrb
mov
test
mov
ficoml
pop
sbb
adc
stc
mov
dec
js
stc
mov
mov
imulb
add
pop
add
add
dec
movsl
pushf
adc
xchg
inc
or
jp
and
jl
loop
xchg
jb
push
and
scas
mov
aas
jns
aaa
mov
xor
or
push
inc
add
sbb
push
ss
dec
ret
inc
and
fwait
data16
testb
or
and
hlt
insl
fwait
sahf
or
shrb
cmpl
repz
idivb
sub
adc
sub
repz
jbe
popf
inc
jns
jns
xor
in
cmp
fdivs
test
jl
mov
mov
push
icebp
or
cld
mov
movsl
imull
push
inc
rcr
sub
lea
sbb
and
inc
mov
mov
das
sbb
mov
adc
out
dec
sbb
out
adc
dec
mov
add
push
mov
inc
mov
inc
das
cmp
mov
add
insl
repz
jae
jg
push
mov
jmp
add
jne
scas
test
andb
cmp
fildll
lcall
dec
aas
lret
cld
rol
xlat
sbbl
mov
pop
jbe
test
nop
add
mov
out
movsl
jo
and
int
shrb
dec
daa
push
lods
jg
mov
test
adc
lock
sbb
jnp
repz
jecxz
cmpsl
xor
jle
insb
add
ljmp
xor
xchg
or
arpl
cmpsl
jmp
sub
push
fmull
push
push
xchg
cltd
fistps
int
lahf
in
shrl
in
lahf
fstpt
or
mov
imul
scas
jle
in
mov
adc
popl
nop
xor
cltd
pop
or
popa
sbb
jmp
mov
cltd
shlb
mov
jle
push
idivb
mov
and
dec
mov
add
mov
pop
xor
inc
and
add
cmp
jnp
es
data16
ljmp
xchg
mov
leave
push
inc
sub
lods
pusha
xchg
outsl
jae
push
movsl
pop
sar
push
sbb
std
ror
and
xchg
jo
dec
push
add
sub
mov
imul
sti
test
sub
push
push
inc
pop
cmp
pop
or
add
hlt
jno
sarl
insl
ret
aam
movsb
lret
iret
cmp
mov
mulb
jge
pop
int3
pop
cmpsl
cmp
into
mov
imul
aad
cwtl
dec
mov
xchg
nop
test
cmp
cmpsl
xor
sub
std
lock
fildl
inc
xchg
sbb
rcl
mov
adc
sub
jo
daa
and
jecxz
std
jnp
push
jmp
cmp
into
lock
xor
or
cmp
xchg
orb
scas
and
lds
pop
sub
xlat
std
cmc
mov
leave
pusha
add
mov
add
subb
jns
mov
loope
jmp
add
add
add
inc
xchg
fsubl
jne
pop
fdiv
roll
add
test
sbb
into
fists
inc
mov
fcoms
xchg
mov
jne
mov
xchg
inc
dec
mov
ja
mov
dec
dec
jo
test
loope
and
cmp
dec
in
adc
and
lds
inc
xor
adc
test
scas
push
test
les
out
je
xor
jge
ja
js
imulb
xor
add
fwait
das
mov
jmp
jle
fnstsw
or
stc
lcall
test
mov
sar
sub
fidivrl
bound
and
push
bnd
scas
xor
lahf
pop
icebp
stc
fyl2x
je
xchg
cmpsb
aad
mov
das
pop
push
stos
fbstp
pop
xchg
je
add
sahf
cli
hlt
out
xor
dec
cmp
xor
add
jb
scas
incb
out
dec
out
pusha
fxch
aam
in
add
pop
add
add
scas
pop
in
adc
outsb
add
xchg
jmp
cmpsb
xor
repz
xchg
movsb
in
popa
mov
rcll
inc
lret
xchg
and
mov
test
cmp
sti
mov
adc
lds
sar
lahf
sbb
dec
add
popf
nop
rcll
xor
in
pusha
pusha
repnz
inc
cli
mov
ret
into
dec
sbbl
enter
testb
bound
in
xchg
fwait
jns
insb
and
mov
cmp
aad
adc
dec
enter
sub
adc
jle
mov
jbe
push
xchg
xchg
mov
imul
xchg
jae
sub
jge
add
inc
fidivrl
sub
lret
mov
adc
mov
pop
test
mov
or
clc
mov
cmp
mov
xlat
mov
call
in
add
pop
add
add
cmc
mov
mov
lahf
in
xchg
mov
xchg
les
mov
es
jae
pop
test
and
insl
loop
cmc
ret
mov
jo
mov
or
xchg
or
push
inc
addb
shl
or
add
lahf
mov
and
cld
mov
jg
rol
lret
cmc
out
into
jge
mov
and
lods
or
in
xchg
mov
pop
xor
mov
push
std
or
xchg
test
les
popf
push
cmpsb
neg
mov
fsubl
insb
decb
test
xchg
lret
ds
mov
add
popa
int3
adc
inc
stc
adcl
hlt
adc
sahf
push
sub
mov
outsb
loop
sti
cmp
mov
jb
pop
mov
cwtl
leave
mov
jp
fsts
xchg
inc
ja
add
adc
lods
cmp
lods
aas
mov
mov
mov
pop
add
add
cmp
push
repnz
fwait
cli
mov
cli
mov
inc
aas
push
sub
cmp
popf
fcom
dec
mov
je
lret
jp
lcall
enter
adc
cmc
mov
aad
inc
iret
int
daa
adc
call
test
push
in
pop
mov
pop
cmp
xor
sar
mov
xchg
xchg
dec
int
sub
inc
jo
or
sti
bound
xor
in
lock
mov
sbb
fisubs
inc
sbb
inc
jecxz
jb
push
mov
push
jg
in
aad
mov
xor
dec
and
inc
sub
daa
ja
add
lds
into
add
stos
imul
ss
out
js
mov
mov
loop
testb
scas
mov
cmp
dec
xor
dec
xchg
aas
std
aas
inc
xchg
sbb
loop
fadd
sti
mov
push
sbb
lahf
pushf
out
add
pop
add
add
inc
inc
xchg
xchg
bound
mov
mov
sarb
mov
js
outsl
sarb
in
pop
cmpsb
incb
lods
loopne
mov
lret
clc
pusha
dec
dec
cmp
xchg
xchg
jmp
push
orb
into
inc
sbb
js
mov
lahf
ja
dec
jge
rclb
mov
jbe
sbb
in
cmpsb
adc
loopne
jne
jae
jb
xchg
or
inc
test
cmp
xor
inc
and
fimuls
mov
fwait
sti
imul
add
mov
ja
push
adc
inc
fcomps
sbb
adcb
rcrl
mov
and
cmp
int
mov
loope
sarb
xchg
push
add
pop
imul
xor
outsl
movsb
test
rcrb
dec
push
jbe
cmpsb
adc
dec
bsr
mov
test
and
push
cmp
adc
neg
jge
mov
stc
movsl
xor
add
pop
add
add
ficompl
cmp
xchg
data16
cltd
and
out
movsl
xchg
xor
outsb
aas
and
jb
lea
loope
or
subl
and
stc
bound
push
testl
inc
lret
jbe
xor
call
jnp
or
mov
test
test
ret
xor
add
sub
jb
mov
xor
repnz
jge
addb
mov
jns
xchg
adc
in
pop
int3
sbb
pop
shll
shrb
stc
cmp
or
mov
sbb
mov
leave
or
push
cmp
adc
and
xor
call
dec
enter
sbb
jecxz
sbb
mov
jle
or
imul
hlt
mov
xor
lret
mov
scas
arpl
in
cmp
mov
sbb
das
pop
add
dec
sub
scas
xor
xor
icebp
add
pop
add
add
stos
fwait
xchg
xor
dec
adc
popa
pop
cs
shlb
xchg
jno
xchg
lock
mov
shrl
adc
dec
fnstsw
push
inc
mov
aad
test
cmp
dec
dec
jo
dec
dec
pop
ss
nop
sub
add
sarb
call
dec
sbb
push
aam
imul
lds
sti
lods
mov
je
mov
mov
mov
outsl
xchg
pop
int3
cmp
add
jle
orl
push
jge
lahf
lahf
leave
cli
fimull
ror
loopne
sbb
sbb
xor
aad
mov
daa
pop
push
mov
cmp
add
xchg
push
sbbl
addb
jge
jno
adc
dec
add
add
loop
cmpsl
popf
test
push
mov
sbb
jae
and
mov
add
ja
and
aaa
divl
ret
dec
pusha
mov
add
pop
add
add
xor
sub
loopne
rorl
fstpl
xchg
in
push
out
sbb
push
mov
push
int
xchg
inc
out
fs
test
cwtl
dec
jne
imul
aaa
lods
mov
addb
xor
outsl
xchg
imul
mov
mov
dec
lock
sbb
lret
add
outsb
fdivl
inc
iret
clc
pop
lahf
lods
sbb
cld
scas
lods
lock
ja
cmpl
mov
ds
sbb
imul
lock
jl
xor
mov
mov
sub
and
mov
adc
orb
add
icebp
frndint
xor
push
adc
fs
push
pusha
adc
sbb
loopne
aam
addr16
fcomps
in
lret
dec
popf
sbb
stos
add
cmpb
pop
loop
cmp
test
xchg
inc
add
mov
cmc
mov
dec
jnp
mov
add
add
jno
jecxz
inc
pushl
pop
lahf
fdivrl
cmc
gs
mov
call
cmp
dec
and
lretw
adc
jle
mov
mov
jae
data16
jae
fwait
pop
push
mov
dec
jp
adc
jae
fistpll
jno
xchg
addr16
jecxz
dec
mov
repz
loopne
es
push
add
pop
inc
and
mov
nop
int
test
sub
push
lods
into
sub
push
inc
inc
mov
mov
xor
dec
minps
cs
or
lds
mov
push
ss
mov
and
cli
or
dec
jne
inc
nop
push
push
mov
adc
mov
add
mov
movsb
jne
and
and
cmp
sub
xchg
push
daa
add
add
loopne
xor
rorl
xor
js
test
bound
jbe
cld
xchg
jnp
jb
jle
jne
add
int
hlt
add
pop
add
add
mov
pop
and
or
jae
jb
pop
cltd
sbb
sbb
pusha
mov
add
add
push
arpl
clc
lods
scas
data16
sub
mov
xchg
js
orb
dec
shlb
pop
movl
fdivrp
or
jle
inc
movsl
mov
xor
rclb
mov
scas
mov
daa
jnp
ss
test
pop
pop
icebp
pop
xchg
imul
cmpb
jg
push
mov
mov
aaa
and
in
xchg
dec
mov
mov
mov
mov
adc
mov
int
inc
fs
data16
xlat
pop
sub
iret
les
nop
cltd
mov
test
sub
iret
es
sbb
push
out
jae
hlt
lock
push
fwait
inc
sbb
mov
inc
ret
pop
mov
xor
cmp
stos
cmpsb
push
add
xchg
ljmp
or
jmp
dec
add
imulb
idivb
mov
add
pop
add
add
and
and
out
aam
ljmp
mov
inc
into
add
cmpsb
addr16
out
sub
fwait
adc
rcrl
bound
push
insb
fistl
std
inc
cmp
adc
aam
addb
inc
iret
jl
mov
ret
and
aad
lret
xchg
jne
int
xchg
fwait
adc
pop
and
xor
test
xchg
int3
fistl
jno
pop
int3
or
add
sub
ret
lcall
les
sub
xor
subl
pop
repnz
dec
mov
mov
repnz
pop
rcrb
fwait
inc
popa
out
out
lret
xchg
adc
add
pop
and
xor
shl
cmc
push
add
mov
jp
rcrb
imul
lods
mov
pop
lea
test
pop
rolb
popa
repnz
outsl
mov
fnstenv
out
stc
lea
cmc
xor
ljmp
add
add
xor
sub
jg
int
add
pop
add
add
aaa
mov
push
and
lods
mov
jo
pushf
lea
cmp
xor
or
clc
roll
scas
or
jecxz
add
adc
loop
stc
adc
xor
dec
scas
adc
xor
xchg
adc
xor
jne
push
fisubl
xor
arpl
push
dec
and
adc
adc
ljmp
cli
mov
add
add
xor
push
pop
movsl
int
sbb
jmp
sub
adc
mov
push
mov
push
test
in
cli
std
sub
or
movsl
sub
dec
icebp
into
ret
adc
hlt
negl
fidivrs
add
inc
cmp
popl
inc
mov
or
sbbl
or
shl
xor
das
movsl
repnz
xor
sbb
movsb
add
ljmp
movsb
inc
sti
in
fwait
push
jae
sub
scas
mov
icebp
mov
sub
nop
inc
pop
mov
add
ds
in
idivl
call
sbb
ljmp
add
add
mov
mov
insb
sbb
push
jae
lahf
inc
cmp
inc
jl
jl
leave
test
add
cmp
add
hlt
fnsave
dec
add
add
imul
pop
idivb
and
jmp
es
pusha
shlb
leave
inc
out
aam
xchg
sub
cmp
stos
mov
adc
pop
shl
and
push
mov
cmp
cmp
cwtl
rcr
dec
jle
fnstcw
push
mov
sub
dec
in
cli
or
pop
sub
iret
outsl
inc
vandps
aas
data16
mov
jae
jae
imul
mov
pop
xor
mov
sar
lods
xchg
pop
push
lds
sbb
jle
daa
dec
jne
test
mov
mov
sbb
pop
mov
xlat
popa
push
jne
ljmp
add
jecxz
inc
cli
aas
clc
fdiv
jne
mov
add
pop
add
add
scas
add
adc
adc
leave
sub
sub
pusha
mov
outsl
and
out
outsl
inc
call
int
aas
push
lds
out
movsb
push
jne
mov
and
pop
fwait
jp
nop
in
push
inc
int
xor
daa
ja
popf
iret
fstpl
fisubrs
jg
pop
cmpsl
cmp
stos
sarl
movsb
mov
inc
pop
ret
rorl
in
sub
dec
dec
add
mov
lret
mov
pop
icebp
std
sti
mov
and
push
pusha
pop
scas
push
mov
clc
rcll
jo
cmp
push
fs
xchg
adc
imul
mov
repnz
or
jle
sbb
nop
mov
xrelease
pop
jmp
mov
lcall
push
mov
hlt
inc
push
orb
scas
leave
jl
les
addr16
pop
sarl
fadd
rorb
jno
ret
mov
mov
add
lcall
xor
sub
loop
add
pop
add
add
adc
dec
jae
dec
sbb
scas
sub
add
inc
gs
and
outsb
cwtl
xchg
mov
es
add
jno
rclb
xchg
jg
lcall
mov
and
dec
idiv
jns
lcallw
lahf
xlat
test
add
cmp
and
ret
in
xor
push
daa
stc
xchg
pop
aam
movsl
sbb
xchg
aaa
pop
lds
dec
push
sub
mov
sbbb
pop
or
mov
sbb
xchg
sub
inc
pop
xchg
repz
fisubrl
stc
enter
xchg
les
mov
test
dec
mov
iret
fisubs
icebp
rcrl
shr
jmp
pop
xchg
pop
fmuls
sub
cmp
dec
mov
loope
xor
icebp
popf
cmp
andl
xorl
les
scas
mov
rcrl
pop
nop
pusha
arpl
mov
add
jae
cltd
dec
mov
jge
jns
rolb
cli
add
pop
add
add
fwait
das
mov
inc
xor
add
pop
ss
into
cld
jl
js
jl
adc
mov
stc
mov
rorl
sub
aaa
add
mov
push
mov
mov
ljmp
push
repnz
push
push
insl
fisubrl
fdivs
jmp
xchg
insl
sbb
mov
inc
fs
inc
pause
mov
inc
sar
fidivl
pop
mov
push
or
ljmp
loopne
sbb
push
cltd
cmpsb
enter
hlt
add
stos
out
je
fdivs
or
pop
xor
jecxz
add
xchg
xchg
cmp
outsb
jmp
adc
inc
push
push
pop
push
cmovae
pop
push
ljmp
cmpsb
lds
jp
insl
push
insl
fincstp
xor
js
test
jb
test
add
mov
xchg
out
and
and
out
pop
cli
arpl
ds
into
nop
out
cwtl
jle
pop
or
push
pop
fdiv
sti
add
pop
add
add
imulb
xlat
es
addr16
push
pop
push
cltd
push
jne
adc
mov
cmpl
pop
xor
sahf
out
vmulps
dec
xchg
ljmp
adc
test
and
dec
mov
jo
pop
repnz
cmpsb
sub
lret
jg
insl
or
mov
test
push
xchg
dec
cmpsb
or
or
sub
dec
movb
mov
pop
push
clc
lahf
lock
icebp
loopne
push
or
push
lods
push
insl
movsl
imul
lods
test
cmpsb
mov
rcrl
or
pushf
inc
imul
sbb
scas
jp
push
shr
clc
cmc
mov
pushf
loopne
test
jne
cmp
in
es
jno
call
inc
dec
fisttps
pop
into
sub
pop
out
sbb
nop
push
pop
mov
jnp
jnp
jg
test
pop
jne
test
mov
sbb
pop
xchg
add
test
jg
in
jmp
add
add
pop
add
add
outsl
or
fwait
jp
cmpsl
mov
push
cwtl
aam
loope
jb
shlb
cmpsb
push
pop
mov
shll
cmp
dec
mov
das
popf
dec
jne
dec
mov
mov
popl
fs
adc
std
pop
cmp
test
lcall
xor
jmp
lret
pushf
mov
sbb
cmpsb
and
push
shl
xchg
repz
xchg
xchg
es
scas
shlb
fnstenv
ljmp
or
pusha
xchg
mov
adc
and
add
ja
sub
sbb
cmp
das
lret
add
mov
pop
mov
sbb
inc
xor
inc
clc
pop
add
mov
inc
xchg
test
cmpb
gs
jle
sti
fimull
sbb
push
and
jmp
xchg
mov
addl
jae
mov
cmc
lods
dec
sub
jmp
and
aam
adc
movsb
push
in
cmc
jne
rorl
xlat
std
add
pop
add
add
loope
xchg
mov
lds
aaa
mov
lcall
xchg
add
pop
test
aam
adc
roll
movsb
in
pop
fldl
mov
jno
pushf
js
sar
jp
dec
lods
xor
xchg
cmpsb
sbb
leave
nop
dec
in
sub
bound
adc
cmp
scas
je
fs
xchg
mov
xlat
cltd
cmp
fisubl
add
mov
mov
bound
adcl
push
stc
nop
lar
enter
xchg
outsb
pop
inc
dec
dec
in
sub
adc
push
mov
sbbl
in
push
mov
mov
mov
leave
in
es
mov
sti
sub
pop
or
out
xor
test
add
insl
add
imul
mov
mov
ja
test
inc
add
xor
in
or
out
mov
testl
icebp
add
out
shlb
aas
out
sbb
insb
dec
scas
scas
add
add
add
loop
test
mov
iret
pop
sbb
sbbb
push
cld
std
outsl
lds
mov
repnz
or
std
cmp
lods
dec
mov
cmpsl
movsl
or
bound
repz
dec
push
jmp
pop
das
rcr
pop
dec
and
ficomps
movsl
and
pop
or
aaa
pop
dec
test
mov
lahf
push
in
ret
outsl
xorb
sbb
adc
outsb
sbb
imul
sbb
fdivl
pusha
rorb
push
in
js
test
inc
mov
test
xor
insl
std
and
arpl
jg
rcrb
or
pop
cli
aas
lock
inc
cld
mov
dec
imul
push
mov
int
mov
mov
inc
insl
sub
adc
adc
int
jnp
xchg
ljmp
or
mov
sahf
aas
out
sub
add
add
add
add
pop
fxch
inc
push
ficoms
mov
ficoml
sbb
xor
sarl
mov
jmp
shl
xor
iret
adc
mov
orl
push
movsb
fst
dec
push
sbb
adc
sahf
int
cmp
adc
shrl
or
clc
stc
test
mov
movb
mov
clc
xor
cli
or
rcrb
stc
push
mov
es
imul
sub
dec
lds
mov
mov
mov
mov
cmp
out
fcomp
or
addb
insb
arpl
push
fwait
jmp
gs
xor
iret
leave
jp
and
push
dec
xchg
jl
pusha
imul
sbb
xor
loopne
add
in
out
outsl
inc
ficoms
jmp
out
daa
popa
pusha
cld
xor
in
sarb
aaa
clc
out
and
adc
adc
cmpl
add
ret
bnd
int3
jae
adc
dec
push
add
add
add
imul
xor
xor
enter
arpl
in
in
inc
mov
mov
add
pop
icebp
into
addr16
mov
test
fisubl
xchg
out
lods
mov
push
push
ret
mov
ss
std
add
mov
push
inc
popf
and
mov
pushf
jmp
and
push
das
inc
sbb
lcall
in
mov
push
inc
push
mov
mov
scas
test
insl
add
scas
jle
sub
insb
ficoms
xchg
int
addb
adc
push
xchg
xor
shl
out
lock
mov
adc
jp
andb
daa
pushf
mov
sbb
cli
insl
mov
jecxz
push
addb
cmp
push
cmp
fs
ss
aam
and
xorl
or
shr
inc
xor
jo
adc
adc
add
add
std
aaa
mov
mov
cmp
mov
add
mov
nop
cmp
push
imul
bound
mov
shrb
add
adc
rcrl
test
ret
xor
sub
leave
in
pop
sub
rolb
shll
xlat
cmpsl
mov
jns
jne
xlat
scas
repz
pop
cwtl
push
xor
aad
mov
into
jl
dec
sahf
inc
sbb
cld
mov
sti
jg
mov
push
fwait
les
ljmp
test
popa
pop
iret
dec
mov
add
add
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
xor
inc
add
xor
inc
add
xor
inc
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
and
lret
lock
sbbb
cmp
add
add
pop
jno
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
