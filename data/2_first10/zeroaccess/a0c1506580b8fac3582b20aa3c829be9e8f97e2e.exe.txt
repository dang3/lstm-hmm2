push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
cmp
addl
xor
ds
jp
jbe
test
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
sub
or
sbb
sbb
je
push
add
rolb
mov
add
mov
popa
cltd
fimuls
xchg
inc
sti
jo
add
sub
sub
push
dec
ss
sub
sbb
push
fiaddl
stc
inc
pop
cmp
lods
rcrb
sbb
mov
mov
inc
repz
add
mov
jecxz
cmpsl
adc
pop
add
fcoms
dec
outsb
add
jmp
mov
in
ret
aam
mov
sbb
push
cmp
cmpb
insb
add
xchg
push
push
imul
repnz
cmp
clc
xchg
sti
daa
hlt
dec
addr16
and
outsb
cmp
pop
imul
jp
mov
mov
shl
imul
jbe
inc
shll
fmuls
mov
inc
inc
fildll
mov
loop
sbb
mov
cmp
stos
mov
adc
scas
fs
jmp
popa
outsl
adc
dec
jb
mov
push
mov
sub
nop
loopne
adc
call
out
mov
out
cwtl
dec
or
inc
cmp
rolb
adc
mov
jl
mov
bswap
dec
stos
cld
push
jbe
dec
jmp
andb
in
cs
inc
mov
sub
sahf
sbb
mov
lds
xor
popf
rcrb
stos
cmpl
mov
popa
ja
mov
loop
inc
insl
cmpsb
and
daa
rcll
pop
cmp
adc
stos
in
sub
mov
lea
in
add
test
gs
add
mov
and
lds
repz
ds
push
push
sti
fcmove
int
dec
mov
cmpb
stos
shll
jecxz
nop
fcomp
icebp
dec
dec
xor
mov
out
pushf
das
iret
mov
dec
sub
mov
push
dec
int3
adc
mov
xchg
mov
shlb
mov
out
repnz
lcall
xchg
cmc
cmp
scas
xchg
loope
insl
xor
and
fstl
stos
mov
sbb
or
je
rorl
inc
and
mov
cltd
shl
xchg
push
mov
loope
dec
js
push
ja
pop
jecxz
mov
in
shlb
punpckldq
adcb
test
push
divl
push
jecxz
dec
negl
cmp
lret
pushf
or
dec
xchg
push
sub
pop
cmc
js
adc
imulb
lahf
pop
movsl
dec
int
jo
call
addb
out
and
or
pop
sbb
lods
pop
adc
sub
in
mov
mov
push
imul
sbbl
push
je
push
sub
mov
stos
dec
insb
out
js
mov
pop
jecxz
daa
out
sbb
push
jne
in
nop
clc
js
add
mov
shrl
inc
roll
jae
mov
inc
add
cmp
lds
jg
mov
arpl
fdivs
cmpl
clc
inc
mov
or
cmp
pusha
icebp
popf
jl
movb
out
push
jp
dec
in
fidivrl
push
jp
stos
jl
add
jnp
xchg
push
mov
fs
cmc
sbb
imul
mov
xchg
subl
xor
js
push
push
stos
add
addb
loope
mov
insb
and
lret
out
insl
sar
xchg
lret
mov
or
inc
mov
sahf
rcll
mov
lds
dec
hlt
or
je
out
imul
jge
cmp
ja
enter
cld
jl
movsl
shlb
dec
orb
popa
sub
shrb
jno,pt
cmp
aas
mulb
ss
mov
jbe
nop
xchg
and
adc
fisubs
mov
leave
pop
add
jecxz
mov
cmc
lret
lea
add
dec
mov
or
jne
jp
sub
arpl
popf
imull
test
repnz
lock
push
pop
clc
sbb
shrb
test
in
jp
mov
rcl
ror
pop
cmpsl
adc
cmp
into
add
jno
sub
test
jmp
outsl
add
sbb
mov
fsub
mul
stos
cmc
lea
push
rcrb
mov
aam
call
adc
jmp
cmpsl
dec
sbbb
lock
mov
aad
jl
jo
ja
cmp
mov
aad
xor
out
push
jl
pusha
push
fs
ja
ret
push
pop
or
ret
sti
das
loop
adc
cs
dec
subl
jp
adc
popa
mov
lcall
test
imul
mov
arpl
xor
lods
pop
gs
xor
or
mov
mov
xchg
aas
xchg
loopne
dec
in
cmpsb
xorl
mov
addl
cli
fdivl
sbb
das
and
std
movsb
jbe
call
or
dec
lcall
sub
adc
fisubl
wrmsr
xchg
daa
xchg
iret
lahf
jecxz
fists
adc
std
dec
sub
push
ret
data16
mov
adc
sbbl
sub
in
and
addr16
sbb
outsb
data16
mov
mov
mov
mulb
shll
or
jnp
das
dec
add
or
gs
push
jl
cmp
mov
inc
xchg
pop
ja
lods
pop
rorl
ret
fmul
xor
adc
call
lcall
push
lcall
fimuls
inc
sbb
mov
pop
xchg
mov
cmp
push
stos
ret
mov
cmp
ljmp
mov
daa
adc
jg
add
and
or
mov
fldcw
push
faddl
jg
xchg
jle
rcr
fwait
ja
xchg
mov
xor
rcrb
mov
sbb
ficomps
imul
or
inc
adc
pop
inc
les
sub
push
sahf
lds
pop
mov
pop
pop
adc
mov
mov
mov
inc
bnd
push
insl
fnsave
pop
es
or
sahf
pop
orl
push
aas
xor
cwtl
xlat
cmp
cs
add
data16
push
addr16
stos
and
das
clc
aas
xor
hlt
inc
in
sub
repz
push
addr16
add
loopne
faddl
fs
jns
mov
and
push
fdivl
mov
shlb
daa
pop
in
scas
fildll
dec
pop
jmp
and
or
clc
inc
jb
lret
movsl
mov
inc
ds
push
shr
jp
jle
cmpsl
push
sub
les
rcl
add
dec
xor
popf
xchg
mov
repnz
loop
push
into
or
add
mov
nop
dec
push
inc
addl
and
cltd
shll
loop
pop
or
jns
stc
and
idivl
ljmp
and
lock
and
xchg
mov
adc
push
adc
xchg
jnp
and
sahf
into
repnz
aam
or
imulb
jne
jns
repnz
fadd
add
cmp
mov
or
and
push
mov
bound
dec
sti
xlat
or
xchg
push
pop
test
jmp
mov
mov
mov
xchg
push
adc
rorb
add
mov
inc
xlat
jp
sbb
mov
xchg
mov
pop
scas
xchg
or
lds
and
icebp
adc
mov
and
repz
das
inc
dec
inc
ja
jmp
mov
and
rorb
jae
mov
idivl
mov
cmpsb
hlt
xor
fs
lahf
pop
fcmove
lret
or
lret
jb
adc
aas
sbb
outsb
cltd
mov
insb
int
lahf
sub
ret
xchg
add
xor
repnz
and
jmp
aad
mov
outsb
scas
popa
xchg
loope
push
mov
hlt
outsb
jns
and
xchg
mov
test
cmp
outsl
jne
dec
mov
lds
out
stos
pop
mov
mov
int
mov
in
jecxz
ja
sbb
xor
stos
xor
push
loop
in
int3
xchg
sbb
pop
adc
jle
lret
fs
pusha
push
lahf
outsl
jg
in
iret
mov
movsl
test
push
jle
mov
add
push
sub
arpl
or
mov
lcall
hlt
mov
fistpl
shll
cld
enter
or
ja
addl
aad
cmp
add
mov
out
loopne
inc
and
out
xor
xchg
out
jmp
mov
inc
adc
pop
cmp
mov
es
movsb
imul
push
popa
iret
cli
mov
xor
mov
adc
enter
jmp
call
xor
js
std
out
cli
sbb
call
dec
ret
mov
mov
cmp
push
shlb
in
test
xor
pop
jecxz
lea
inc
repnz
fstp
int3
dec
lods
jb
xchg
insb
xchg
out
stos
mov
popf
in
xchg
rolb
xchg
pop
or
mov
and
push
insb
or
or
pop
rcl
cmp
scas
inc
pusha
pslld
dec
shrd
das
imul
xor
daa
nop
push
cmp
shl
aaa
iret
pop
xchg
sarl
add
mov
push
adcb
mov
loopne
dec
or
fnstcw
aad
mov
out
sub
or
mov
loopne
push
cmpsl
outsl
test
mov
push
popa
inc
shrb
data16
gs
flds
leave
cmc
out
jns
iret
and
je
and
fcomps
push
rolb
js
ljmp
fs
rcll
push
shl
lods
pop
sub
decl
jp
mov
sbb
jl
lret
mov
movsl
fisubl
js
scas
mov
dec
in
hlt
andb
icebp
out
inc
pop
bound
cmp
cltd
mov
scas
fsubr
js
cmp
push
adc
pusha
jo
into
fsubr
mov
popf
incb
cmp
std
clc
ret
mov
jo
imul
mov
jb
xor
popa
stos
cmc
mov
xchg
pop
mov
cmp
push
and
xor
cmp
or
xchg
imul
daa
les
sub
inc
subb
mov
lods
test
xchg
rcr
pop
mov
das
mov
xor
add
std
dec
mov
daa
insb
rcr
dec
push
fmull
pop
mov
mov
or
ret
inc
jecxz
jnp
mov
les
shrb
xchg
sub
jo
pop
jmp
cmp
xchg
xchg
adc
lret
loope
push
inc
je
cmc
insb
movlps
cmp
jns
jb
jle
mulb
push
mov
ss
push
jecxz
fists
xchg
das
inc
xchg
or
lret
outsb
aad
scas
xchg
jb
cli
in
bndstx
sub
push
or
imul
and
cmc
sbb
das
out
out
adc
pop
mov
shll
mov
mov
mov
lret
int3
pop
cwtl
pop
fiaddl
or
mov
scas
sub
js
mov
mov
rcrl
dec
repnz
ljmp
sti
lods
loop
fstps
jmp
cwtl
lahf
jg
sub
lahf
dec
pop
jle
inc
sbb
mov
cmp
outsb
ja
repnz
hlt
jg
mov
push
jecxz
lea
cmp
inc
jge
das
ret
movsl
frstor
pop
pop
lods
in
popf
cmp
xor
insl
test
mov
push
movsl
jbe
addb
fchs
out
imul
push
bound
sbb
data16
mov
aas
mov
call
idiv
ficoms
movsl
mov
scas
notb
shrb
in
cmp
push
xchg
mov
cmp
cmc
call
sub
mov
jecxz
stos
sub
negl
jae
dec
mov
xor
mov
lea
add
jnp
fdiv
cmpsb
push
cmc
cmp
push
sub
outsl
movsb
sbb
int
neg
xchg
jbe
loope
push
sarl
xchg
fwait
stos
add
ja
mov
inc
xchg
inc
outsl
lea
jae
jle
jg
xorl
shlb
popw
inc
pushf
sti
js
stos
imul
adc
cmp
push
dec
add
and
push
test
mov
jb
jnp
sbb
or
cli
clc
xor
cmpsl
inc
aas
mov
or
cmpsl
mov
test
jno
movsb
in
mov
jnp
mov
out
lods
in
mov
decl
outsb
test
push
pop
mov
inc
xchg
mov
roll
sub
loope
in
mov
daa
push
cmc
cmp
push
dec
cmp
push
sub
cwtl
ja
push
mov
and
outsb
pop
mov
fldenv
int3
stos
cmp
jnp
inc
out
into
dec
fdivl
inc
or
cmpsl
jecxz
add
or
jmp
adc
stos
or
ljmp
xchg
dec
dec
icebp
int
dec
popf
dec
xor
aas
dec
cmp
mov
and
rcrb
xchg
das
mov
inc
dec
mov
rorl
dec
enter
or
mov
pusha
and
mov
xlat
aad
push
fiadds
and
sar
pushf
mov
addr16
mov
xchg
lcall
adc
in
cmp
shlb
mov
xchg
fdivrl
js
pop
sahf
pop
cmp
sub
cmpsl
outsb
mov
add
ret
cmp
and
jmp
cmc
outsl
mov
pusha
xor
fstpt
hlt
out
and
cmp
loope
xlat
lcall
test
gs
in
testl
das
dec
jo
mov
or
push
int
sbb
int
aam
xor
jns
pop
lahf
movsb
cli
imul
inc
xchg
loope
inc
mov
cmc
mov
and
ret
xchg
loopne
mov
mov
push
jle
and
fwait
clc
push
dec
add
addr16
lods
aas
in
nop
jmp
xchg
shlb
sbb
xor
stos
adc
rcrb
mov
icebp
jo
out
add
inc
sbb
jecxz
adc
std
ljmp
jecxz
push
dec
fisttpll
orb
movsb
fisubs
into
add
rorl
sub
bound
mov
inc
xor
dec
popl
and
enter
push
inc
and
dec
cmp
inc
lcall
aad
or
mov
adc
loopw
loope
sbb
inc
outsl
adc
pop
dec
fcoml
push
int3
jl
nop
cmp
lret
test
repz
jp
and
mov
jae
inc
sbb
xchg
xor
pushf
cwtl
mov
mov
arpl
call
into
leave
loope
or
arpl
outsb
push
lock
in
jae
leave
add
inc
xor
or
adc
xor
push
push
divl
les
dec
gs
ss
inc
lds
in
push
lds
stos
addl
mov
jae
imul
je
sbb
xchg
ljmp
sub
mov
push
rolb
jg
cwtl
or
adc
shrl
sub
add
mov
xchg
mov
mov
mov
and
shlb
jle
xor
adc
sub
xor
dec
mov
sbb
push
xchg
jbe
leave
mov
jmp
stos
inc
addr16
pop
vucomisd
rorl
adc
rcrb
jb
or
fwait
enter
es
insl
js
pop
sub
lcall
int
inc
add
xchg
or
or
push
mov
test
ja
fwait
xchg
xor
adc
ljmp
dec
outsl
cmp
fidivl
imul
test
dec
jo
and
test
inc
mov
enter
xchg
in
push
sbb
xor
rol
add
js
mov
sti
dec
insl
add
les
cltd
testl
test
les
dec
sub
mov
adc
add
sbb
jo
mov
inc
jns
cltd
test
add
out
mov
cmp
fucomip
mov
inc
enter
shll
mov
addr16
hlt
pop
pop
xchg
xlat
incb
sbb
subl
fldl
cmpsb
ret
rcll
ja
movsl
mov
mov
outsb
cmp
mov
sub
ret
cmp
jnp
aaa
mov
adc
pop
push
xchg
ss
jno
insl
xchg
or
pusha
stc
std
sbb
fnsave
push
inc
mov
gs
mov
ss
xlat
push
shl
out
lods
int
ja
dec
inc
cli
add
imul
mov
aas
scas
jmp
icebp
outsb
imul
pusha
mov
dec
sbb
enter
pop
jnp
orb
add
push
push
inc
divb
sbb
sub
or
inc
push
or
ret
push
cmp
arpl
test
popf
sub
iret
into
sbb
in
scas
push
jle
in
sub
idiv
push
mov
xor
xchg
jne
xor
fs
mov
js
mov
push
ret
bound
repnz
add
int3
inc
pop
add
data16
test
adcl
mov
imul
inc
push
sti
je
add
aad
loopne
or
pop
insl
imul
lea
xchg
cmp
add
mov
xchg
loopne
scas
mov
bound
xchg
rolb
ret
mov
fisttpl
adc
cmp
lea
adc
test
pop
inc
push
arpl
das
jle
dec
movsb
or
int3
jbe
push
fsubl
mov
stc
sahf
pop
inc
lret
xlat
lea
rorb
aaa
xchg
sti
mov
jmp
push
js
add
int3
inc
cmp
and
push
jge
push
mov
or
or
jae
and
sbbb
jb
xor
cmpsb
mov
test
lods
icebp
xor
test
ss
ljmp
out
fadds
push
cli
sbb
push
jno
and
out
popf
jl
stc
dec
outsl
adcb
mov
push
push
pop
lods
jp
xorl
cs
or
push
or
aam
es
clc
icebp
push
pushf
sti
mov
or
add
test
test
push
aad
out
scas
push
push
jp
mov
inc
rcll
add
pushf
in
mov
in
aam
cwtl
mov
nop
or
gs
jnp
nop
sub
or
popf
xchg
imul
test
aas
shrb
dec
ret
call
in
mov
or
sbb
jb
je
inc
pop
cs
mov
push
pop
data16
mov
mov
push
dec
cmc
cmpsb
cli
xchg
jne
loopne
jnp
cli
mov
inc
xchg
andb
push
or
lret
icebp
stos
pop
bound
lret
dec
xor
and
xor
lds
mov
cmc
fidivrs
cmp
push
cmp
addr16
test
int
out
mov
stc
out
shrl
imul
sub
pop
adc
mov
outsb
int3
sti
scas
cmpsb
push
dec
cmp
fucomi
push
in
pop
fsub
imul
xor
in
out
stos
lea
repnz
int
ss
push
in
inc
ljmp
mov
cmp
xchg
dec
pushf
mov
clc
pusha
cmp
push
cld
xchg
cs
sbb
lock
pushf
inc
lea
ret
jne
jb
or
imul
jbe
int3
negl
sub
inc
xchg
jle
pop
ret
test
cs
push
or
test
stos
xor
sbb
int
nop
mov
ss
je
in
mov
sti
inc
repz
fstpt
nop
out
pusha
dec
sti
pop
aam
inc
adc
pop
jecxz
fisubs
hlt
sub
jae
push
mov
mov
mov
outsl
or
int
les
lret
inc
out
jo
sub
sbb
sub
jge
mov
lcall
cmp
bound
cmpsl
lcall
xor
mov
pop
push
stos
xor
cs
popf
fwait
sub
add
imulb
movsl
inc
mov
rorb
mov
xchg
stc
or
mov
add
cmp
inc
or
stc
into
pop
dec
jb
or
add
lcall
adc
ja
testb
push
cli
div
mov
loope
repnz
mov
data16
icebp
xor
ret
lods
adc
or
cmp
mov
mov
push
jecxz
jno
cmp
lahf
jecxz
mov
inc
fcoml
dec
and
push
adc
popf
mov
shll
ret
and
testb
lret
movlps
mov
xor
push
mov
in
push
jecxz
pop
aas
pop
mov
icebp
mov
and
fcmove
sahf
mov
mov
and
popa
lcall
cmp
imul
insl
jns
jnp
xor
cld
out
sbb
dec
xor
lods
out
imul
xchg
test
jmp
pop
inc
inc
or
lret
lret
xchg
push
out
fmuls
loopne
cmp
in
inc
xchg
xchg
push
add
inc
popf
fiaddl
push
pop
xchg
jge
jmp
mov
sub
movsb
movsb
leave
inc
sub
bound
pop
xchg
jae
jmp
xor
mov
in
scas
pop
adc
sbb
int3
data16
iret
sbb
adc
lret
push
xor
jmp
mov
mov
dec
push
das
pop
mov
test
int
cmp
or
mov
push
jmp
sbb
test
dec
adc
xchg
or
call
dec
repnz
mov
cli
loopne
jp
test
test
xor
rol
movsb
cltd
pop
mov
lods
push
pop
sub
popf
outsl
mov
or
movb
mov
jle
je
adc
daa
lock
inc
scas
cmp
mov
sub
mov
outsb
mov
cmpsl
cmc
jp
mov
outsb
cmpsl
push
inc
cmp
jo
mov
clc
adc
dec
mov
addr16
stos
xchg
divl
inc
mov
ja
ljmp
push
jge
adc
outsl
cmp
popf
adc
xchg
jp
fsubrl
mov
shr
push
rcrb
xor
js
pop
dec
jns
outsb
loop
cmp
dec
lods
lret
pop
lret
xor
in
pop
fwait
sub
test
and
pop
fdivl
loope
xor
lcall
subb
jno
lret
pop
ret
cmp
mov
repz
out
adc
jg
jge
std
aam
fisttps
cmp
gs
mov
int3
setge
mov
mov
insb
or
sub
cmp
les
push
insl
add
in
or
pop
adc
mov
ljmp
mov
dec
mov
xchg
and
pushf
fisubl
sub
insb
jbe
jno
inc
aam
insb
mov
cmp
jns
mov
mov
sub
vpsrlq
and
rcll
popa
add
jo
rcll
push
mov
jb
cmp
add
dec
mov
pushf
es
in
aad
add
jae
adc
mov
push
cmpsb
test
movsl
push
mov
cltd
add
mov
add
mov
push
jo
fwait
or
push
jns
sub
pop
in
and
add
jl
popa
push
adc
cmp
adc
insl
add
cld
mov
mov
mov
jecxz
or
xor
mov
mov
inc
xor
push
and
lods
bnd
jnp
rorl
add
aas
imul
cmp
cli
lods
repz
mov
popf
insb
mov
out
js
dec
fcompl
sub
mov
aad
xchg
cmp
mov
lock
in
lea
aaa
out
cmpsb
scas
pop
xor
or
mov
fcomps
pause
jae
inc
shll
imul
cwtl
jae
testl
test
or
mov
jp
xor
repnz
jnp
fs
dec
aam
inc
push
jae
jmp
fldcw
stc
or
push
fs
push
push
pop
xor
mov
dec
adc
adc
dec
arpl
fistpll
pop
sub
adc
dec
jnp
addr16
test
in
lods
sbb
jge
jg
movsb
dec
push
inc
sbb
dec
movb
lock
rcll
pop
stos
or
push
cld
sbb
adc
pop
fs
mov
stos
pavgw
icebp
jl
xor
sub
shl
cs
inc
mov
pop
fdivl
test
push
out
popa
rclb
and
jnp
ret
lcall
in
mov
hlt
xchg
jns
ljmp
pop
jo
sbb
mov
mov
stos
xorb
mov
movsl
jae
fiaddl
fistl
xchg
outsb
fs
and
insb
sbb
xor
scas
mov
inc
inc
gs
mov
xchg
fs
rorb
add
add
or
stos
in
movsl
cltd
mov
jecxz
pop
mov
stos
scas
sub
mov
in
leave
or
mov
add
dec
cmp
aam
adc
loopne
lret
nop
shlb
bswap
fs
fmuls
pop
je
or
pop
and
pushf
insl
cmovne
fiadds
leave
inc
movsl
xchg
mov
out
sub
inc
push
jmp
push
pop
lock
dec
sarb
mov
out
push
ja
or
or
and
and
cltd
scas
mov
push
enter
mov
mov
pusha
pop
in
sti
pop
int3
adc
push
or
inc
inc
cld
adc
cmc
das
test
sub
sub
outsb
movb
fsubrp
jmp
dec
xchg
cwtl
stos
cmp
mov
lret
sub
test
inc
fwait
mov
inc
xchg
inc
push
cltd
or
call
sub
neg
pop
lods
mov
je
inc
and
cmp
xchg
mov
test
mov
clc
pop
xor
shll
adc
outsl
mov
jmp
mov
incb
sbb
les
fildl
jae
call
mov
cmp
and
stc
lods
sahf
jg
cmp
popf
jge
int3
jmp
in
scas
and
dec
jl
dec
xchg
fcmovne
fisubrs
mov
jo
ret
dec
mov
mov
das
stos
stos
push
lcall
mov
cmp
push
cmc
sub
mov
roll
cltd
and
jl
adc
daa
cld
int3
mov
or
rcll
jbe
cmp
fstpl
ret
fs
push
movsl
fildl
mov
imul
in
xchg
cs
stos
cmc
enter
jmp
arpl
imul
movsb
ds
cmp
dec
jo
sbb
fmull
or
call
outsb
test
and
adc
xchg
insb
adc
push
movsl
jp
lahf
out
xchg
testb
jg
dec
add
jl
lret
adc
jae
out
fimull
inc
movsb
mov
cs
cmpsl
inc
cmc
mov
cld
dec
dec
call
mov
icebp
fs
pop
ljmp
les
leave
mov
in
arpl
out
pop
imul
call
imul
test
adc
cmp
and
or
or
jb
std
popa
push
scas
gs
stos
mul
ds
ja
int3
push
xchg
ja
mov
add
loope
es
pop
xchg
lea
jbe
test
mov
inc
jle
insl
cli
ficompl
clc
mov
pop
daa
inc
sbb
insb
adcl
cltd
jecxz
cltd
imul
and
dec
pushl
lea
push
out
fsubl
outsl
js
mov
push
test
pop
push
fsub
pop
imul
call
adcl
test
lods
lcall
fsts
sahf
popa
jno
pop
adc
and
sbb
mov
leave
cs
into
je
mov
into
imul
sub
mov
add
mov
pop
adc
jl
jbe
nop
cwtl
shrb
in
cli
mov
sub
pop
dec
cmp
and
mov
cmc
sbb
adc
aas
cmp
jb
mov
ret
out
mov
cmp
cmp
add
outsb
mov
and
ljmp
xor
jo
stos
movsb
push
out
push
icebp
movsb
out
pusha
popa
test
jnp
popf
aad
xor
cmp
adc
lock
in
cmp
insl
mov
frstor
dec
cltd
and
or
jb
mov
xlat
mov
test
sub
sub
xor
or
aaa
dec
adcb
add
imul
call
sub
and
sbb
scas
sub
sub
mov
sbb
lock
or
imul
jmp
addr16
push
sbb
cmp
aad
or
fwait
jmp
cmp
daa
jbe
lods
rclb
scas
mov
push
shll
test
dec
inc
ljmp
mov
pop
add
pusha
shrl
ficoms
pop
ret
adc
push
iret
mov
push
lret
push
adc
cltd
loop
add
cli
loop
dec
add
jbe
mov
scas
and
movsl
or
jmp
fstpt
cmp
xlat
addr16
stc
or
insl
cmpsb
in
scas
ds
gs
cmpb
enter
sbbl
mov
cmpl
mull
aaa
rcr
or
add
mov
push
mov
fidivrl
mov
lock
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
xchg
jb
push
inc
pusha
addl
imul
cmp
mov
testb
and
mov
bound
shr
enter
pop
sub
cmp
mov
js
shll
sbb
or
shll
mov
rorl
pop
inc
sbb
and
sahf
push
adc
aam
jnp
jb
fdivrl
mov
or
mov
cs
sub
push
subb
aas
cltd
loopne
or
adc
out
mov
jmp
pop
pushw
push
inc
push
pop
ret
jnp
js
cltd
push
movb
xchg
cs
xchg
mov
test
xor
mov
xchg
adc
int
loopne
or
cld
xor
fsubrs
add
push
pop
jbe
out
test
cli
sarl
adc
gs
movsb
xchg
nop
sbb
inc
push
nop
fisubs
jge
fdiv
inc
mov
cmp
icebp
jle
sbb
aas
pop
test
jmp
xlat
loop
jp
jmp
cli
fistps
inc
xor
insb
xor
push
clc
mov
je
lret
mov
xor
outsl
mov
mov
xchg
xor
test
imul
adc
sub
add
push
mov
out
sbb
lods
inc
sub
subps
into
adc
sub
scas
xor
enter
cmp
and
arpl
popa
in
rcl
sti
pop
addr16
inc
push
pop
pop
mov
movsl
pop
or
push
fldenv
dec
movsb
add
out
dec
mov
imul
enter
cmp
loope
sbb
daa
aaa
sub
mov
cmp
xchg
jnp
ss
adc
cli
test
stos
imul
jl
inc
dec
mov
jns
inc
sbb
xchg
sbb
andl
outsb
xorl
jl
xchg
test
test
mov
jo
int3
lock
jae
mov
adc
popf
mov
mov
push
push
xchg
sub
rclb
dec
mov
mov
and
lcall
cmp
jg
add
ja
into
and
jbe
xor
ja
push
mov
push
roll
and
sub
cmp
or
jno
test
test
nop
mov
xchg
push
and
out
out
pop
mov
cmc
add
mov
xchg
pop
add
xchg
mov
jle
shrb
pop
les
sbb
insb
incl
sahf
adc
and
inc
xchg
out
or
jne
jl
inc
loopne
add
mov
mov
fcmovbe
test
sub
cmp
int3
jecxz
fbld
jge
stc
js
mov
jle
push
paddd
push
loop
std
jns
cltd
outsb
hlt
and
cltd
sub
mov
push
xor
mov
js
adc
push
out
add
adc
subb
cltd
scas
loope
cltd
pop
test
rcll
mov
inc
jbe
aad
std
push
insl
outsb
pop
rorb
lods
insl
inc
xchg
mov
or
lods
into
mov
cmc
test
jecxz
jl
xchg
mov
xchg
andb
fisubs
mov
test
cmp
push
notl
dec
aam
cli
in
aam
movl
pusha
dec
mov
stos
jp
adc
add
fistps
rcrl
or
fdivrs
js
xchg
imul
mov
jo
sub
lahf
dec
xor
jbe
aad
repz
stos
je
out
jo
lret
repnz
dec
lcall
inc
int
je
mov
into
aaa
or
pusha
or
dec
das
mov
jo
shrl
jle
lret
out
call
push
shll
sub
movb
push
jae
push
or
add
mov
mov
aam
aam
ja
adc
xchg
or
xchg
xor
or
ret
fiaddl
sahf
data16
rcl
and
cmp
xchg
out
fisttpl
arpl
jns
sub
bound
dec
pop
iretw
and
je
push
stos
mov
rol
pop
xchg
jb
lret
iret
sbb
ljmp
stos
push
icebp
cmp
out
push
incl
negb
inc
cmp
mov
push
pop
rorb
jecxz
in
push
sub
mov
inc
lret
add
out
fidivs
imul
push
pop
out
sub
outsb
stc
xor
sbb
fwait
sar
or
clc
rcrl
mov
adc
mov
jmp
jge
mov
inc
push
rorl
scas
inc
daa
pop
push
aad
xor
mov
push
sti
mov
mov
mov
push
fucom
into
fistpll
adc
add
mov
rclb
xchg
test
sbb
add
push
rol
pop
aaa
push
mov
int3
les
bound
mov
jg
inc
xor
sbb
mov
mov
adc
mov
rcll
and
mov
mov
test
inc
jmp
or
adc
xor
mov
and
out
mov
pop
xchg
cmpb
rolb
push
or
movsl
lea
mov
cmp
icebp
sbb
sti
data16
xchg
in
or
dec
push
dec
xor
cmp
popf
fists
sbb
inc
daa
mov
cmp
xor
sbb
cmp
jge
sahf
add
cmpl
xchg
loopne
jno
or
push
or
add
pop
test
lods
mov
jle
sbb
lds
jae
mov
loopne
ret
jg
push
std
push
pop
ss
adc
ss
and
push
insl
mov
rol
lcall
imul
dec
jp
scas
push
cmpsb
cmp
mov
ljmp
sbb
std
xchg
and
jl
cmpsl
pushf
xchg
cld
fnstsw
xchg
pushf
and
xchg
mov
adc
ljmp
inc
lcall
in
fnstenv
and
pop
mov
or
pop
sub
mov
mov
sbb
sarb
ret
mov
lret
leave
push
lret
cmpsb
sub
pop
fcomp
sub
sbb
das
fwait
out
js
leave
ljmp
stos
sbb
pop
pop
mov
leave
add
xchg
mov
add
xchg
xor
cmpsl
js
decb
xchg
jge
dec
fcoml
repnz
ret
stos
xchg
out
enter
xchg
repz
push
adc
sub
out
popf
je
test
jg
mov
xchg
testl
out
sub
add
shl
mov
imul
pop
movb
and
and
xchg
adc
hlt
cmc
sbb
cmpsl
rcr
mov
icebp
or
pop
sub
pop
adc
and
je
roll
imul
imul
push
gs
mov
dec
lea
pop
das
mov
pop
ror
cltd
mov
mov
fisttpl
xlat
jle
add
sub
in
mov
stos
ret
and
push
mov
mov
das
fdivrl
mov
pop
mov
leave
mov
dec
stos
imul
sbb
mov
imul
cmpsb
adcl
dec
xor
push
std
int
mov
out
adc
xchg
aad
jne
out
sbbl
in
lods
sbb
xor
mov
sarl
mov
int
decl
std
mov
pop
xchg
xor
movsl
xor
lds
fstpl
add
push
inc
scas
aam
mov
test
sbb
pop
aad
stc
das
xchg
adc
cmc
add
movl
jl
push
push
mov
xchg
mov
fisttps
ss
mov
popf
lret
outsb
inc
jp
xchg
dec
jno
in
test
movsl
add
and
push
movsl
addr16
pushf
movsl
stc
add
mov
es
or
sub
insb
jle
lods
out
xor
sti
push
push
add
loope
sub
xchg
bound
lock
adc
and
xchg
jo
mov
daa
cld
ja
dec
add
dec
push
scas
lds
jmp
sub
and
cmpsl
jmp
xchg
mov
push
in
and
addl
ret
dec
cs
sub
and
stos
jno
mov
sub
push
outsl
jo
testl
adc
adc
cli
je
andl
mov
cs
addb
and
int3
pop
cltd
test
cvtps2pi
je
pop
loop
unpcklps
stos
xchg
scas
pop
cmp
sahf
sub
jg
aas
xorb
aas
and
inc
pop
dec
add
gs
test
clc
jmp
es
in
fs
in
popf
and
mov
imul
stc
insb
add
mov
int
sbb
roll
adc
int
xchg
fiadds
sbb
rcll
loopne
mov
pop
stc
ret
hlt
adc
fs
mov
int3
lahf
cmp
lret
adc
sbb
imul
test
loop
push
movsb
cmovg
int
es
cmc
cwtl
in
and
lret
in
inc
popf
pop
mov
inc
sbb
imul
dec
mov
int3
ret
dec
cs
mov
divb
les
pop
std
or
jecxz
repz
mov
jle
gs
mov
inc
ret
fs
mov
sub
mov
test
inc
mov
imul
push
testb
inc
fnsave
ret
mov
dec
add
negb
push
loop
dec
xchg
lds
cs
add
lret
outsb
xlat
sbb
fcoms
stos
loop
jns
push
nop
lret
inc
mov
inc
out
xchg
dec
lret
std
ljmp
mov
lds
stos
dec
enter
dec
cmp
insl
popa
lcall
notl
out
test
rcll
dec
popa
mov
ss
lahf
xor
pop
popa
sub
mov
sbb
push
adc
push
push
pop
cwtl
adc
mov
inc
jae
ds
test
and
jmp
xor
hlt
xchg
cltd
lret
or
stos
adc
xlat
mov
xor
movsl
out
inc
sub
sarb
test
fnsave
call
rorl
cmc
inc
loope
rcrl
dec
mov
aam
or
mov
test
insb
inc
adc
shl
enter
jl
sbb
or
jo
xor
jmp
ljmp
lcall
mov
cmpsl
add
pusha
incl
in
push
fdivrl
mov
mov
pop
jp
daa
ja
es
es
bnd
sahf
call
push
enter
les
xor
sbb
pop
xchg
movsl
loope
divb
cli
cli
xor
jo
inc
out
or
sti
jne
daa
xchg
xor
stos
test
mov
stos
push
jmp
dec
jge
pop
movsb
scas
inc
in
jp
xor
mov
xor
hlt
out
mov
leave
or
shl
ja
sub
mov
lcall
shrb
dec
jo
jl
int3
into
inc
outsb
pop
mov
popa
bound
punpckhbw
fdivrs
popa
jge
xchg
sub
cs
adc
pop
ja,pn
inc
je
cmpl
xor
stc
mov
idivb
lock
in
ror
into
fildll
scas
push
cld
movb
int3
shrl
xchg
xchg
js
inc
push
clc
inc
daa
mov
dec
inc
jne
loopne
lods
repz
aas
jo
es
cwtl
xor
or
lea
xor
push
dec
mov
clc
adc
addl
xor
mov
pushf
cmc
test
or
mov
and
outsl
and
lret
sbb
push
add
sub
loop
sub
js
jnp
add
out
ljmp
fsubl
mov
xor
aad
push
in
es
stos
mov
das
test
jbe
and
push
add
jl
jle
stos
insl
adc
push
lods
push
fs
mov
mov
ds
xchg
push
ret
int3
xchg
outsb
int
jo
cmpsb
mov
mov
lret
jns
int3
jns
jmp
test
outsb
adc
enter
aas
jecxz
mov
arpl
push
mov
or
sbb
xor
or
mov
mov
lcall
sbb
cmpsb
loopne
xor
adc
and
ja
clc
loopne
xchg
std
xor
sub
jnp
icebp
in
rorb
es
xor
push
cmp
or
in
or
pop
xchg
out
pop
sub
orl
push
mov
sbb
fldt
cmc
dec
push
fdivrp
in
pop
call
int
inc
mov
movsl
cmp
sbb
dec
add
cmp
mov
xor
push
pop
pop
pop
imull
inc
inc
std
push
test
pop
mov
movsb
sub
sub
pop
pop
lds
rcrb
mov
call
inc
sub
js
push
stos
xor
jecxz
mov
jecxz
mov
inc
xchg
jno
inc
pop
add
cmc
fimuls
out
xlat
pushf
dec
jbe
call
test
test
arpl
movsb
jne
idivl
cmpl
pop
pop
inc
lret
ljmp
scas
out
pop
test
into
xor
xchg
test
iret
adc
mov
push
push
setnp
loopne
outsb
pop
movsb
pop
mov
mov
push
stc
out
dec
add
xor
nop
pusha
xchg
and
adc
sbb
dec
cld
loopne
test
scas
pop
aas
xlat
sbb
push
pop
loopne
inc
inc
jmp
out
aam
push
xchg
test
cmpsl
add
in
push
fdivp
std
outsl
push
popa
rcrb
jne
lcall
pop
jne
repz
mov
mov
in
jo
lods
scas
ds
mov
flds
fwait
iret
pop
mov
rolb
add
mov
dec
xchg
sbbb
js
mov
out
aas
jg
sbb
and
divb
lret
or
xchg
in
adc
cmp
bnd
adc
jbe
mov
cmp
in
mov
jnp
xchg
out
idivl
jno
or
in
in
xor
xchg
sbb
xor
xchg
rcr
mov
dec
and
orl
jle
bound
out
xlat
ds
ficoml
xchg
xchg
pop
adc
sbb
sub
xchg
inc
add
push
js
adc
and
mov
mov
pop
adc
adc
fdivrs
daa
sbb
push
fcoms
fldenv
xchg
arpl
cmpsl
fists
sbb
call
inc
cmp
push
xor
bswap
mov
aaa
es
out
fsubrl
mov
jmp
fimull
cmc
or
inc
cltd
jp
pop
jns
inc
mov
int
xchg
dec
out
int3
jae
jae
push
sub
pop
pop
cld
hlt
adc
or
loope
sub
inc
out
or
inc
std
orb
arpl
movsl
adcb
mov
push
pop
adcb
fadds
jno
fwait
cwtl
pop
sbb
cli
xchg
sub
cmpsb
push
push
inc
sbb
aad
mov
cmpsb
test
jns
ret
adc
push
mov
dec
inc
shrb
int
push
hlt
adc
lea
mov
out
sub
jl
xor
dec
loope
xor
ja
sub
lods
dec
loop
xor
imul
dec
mov
mov
push
movsl
in
daa
movsl
mov
pop
rcl
outsb
scas
mov
inc
mov
and
sahf
or
aad
lret
mov
lret
push
mov
mov
lahf
or
fidivrs
mov
out
xchg
in
enter
pop
test
mov
imul
hlt
gs
mov
push
cmc
push
in
lcall
kxnorw
out
aaa
mov
stos
mov
into
lret
mov
pop
adc
pop
shll
enter
cmp
fstpl
cli
cmpsl
nop
sahf
pop
leave
loope
fwait
mov
mov
outsl
adc
push
pop
dec
js
xor
int3
ss
sbb
shl
ret
xor
fcmovu
sub
daa
addr16
in
or
movsb
inc
arpl
popa
cmp
sbb
sbb
adc
cmp
rcll
fs
js
jmp
inc
mov
je
xlat
inc
aad
pop
das
pop
imul
push
ja
sbb
idivb
push
cmp
xchg
dec
adc
jb
sub
jmp
pop
pop
pop
add
into
jno
iret
xchg
mov
movsb
mov
rorl
div
icebp
fs
aaa
in
fwait
push
or
add
xor
add
cmp
mov
push
fldt
add
and
shrb
repnz
push
mov
cwtl
gs
pop
push
cmp
sti
call
or
das
sub
push
cmp
jl
mov
jbe
mov
mov
call
loopne
stc
insb
sbb
fucomi
pop
xor
jno
mov
inc
push
ficomps
les
or
stc
sub
std
das
inc
dec
fistl
insl
jmp
loop
repz
popf
dec
inc
xor
mov
sbb
push
repnz
clc
push
sbb
jge
mov
fcoms
xor
adc
fwait
bound
movsb
and
int
and
es
pop
sbb
cmc
stos
dec
cld
dec
mov
popf
jmp
rorb
mov
lods
fsubr
push
sub
insb
add
dec
jbe
xchg
pusha
xchg
jl
sbb
and
cmp
jae
and
test
lcall
outsb
add
loop
mov
xor
add
cld
lock
push
jmp
mov
aas
ret
or
cwtl
push
or
sub
loopne
xchg
repnz
adc
das
fmulp
fmul
pop
push
mov
out
sahf
and
push
jle
out
lock
push
fstpl
inc
jge
fwait
sbb
add
mov
xchg
inc
mov
and
add
test
bound
pop
mov
and
adc
fisttpl
outsl
movsl
sarl
mov
xchg
hlt
and
cmp
jb
mov
jne
sahf
les
lret
arpl
mov
js
push
in
cld
and
das
std
sbb
and
cmpsb
outsb
inc
mov
bound
rolb
lcall
pop
das
xchg
ret
lret
cwtl
and
ffree
push
add
sub
test
pop
rol
test
inc
fdivrs
add
adcb
stos
iret
es
test
loope
in
sahf
xchg
fisttps
popl
inc
test
cmp
xlat
out
int3
cmp
test
call
sahf
outsl
and
sbb
sub
mov
mov
loope
in
pop
in
xor
mov
out
imul
xchg
push
mov
dec
adc
sbb
sahf
jg
pop
or
xor
mov
testb
push
shlb
xchg
popf
sbb
shrl
sarb
popa
notl
out
mov
fimull
sbb
jns
pop
xchg
mov
in
inc
int3
adc
adc
dec
cmpsl
insl
fisttps
orb
jno
mov
xchg
outsl
das
mov
subb
test
push
loope
ret
repz
xchg
dec
dec
push
test
dec
lcall
pop
fdivr
adc
aaa
leave
test
inc
pop
xor
insb
pop
cmp
test
push
jge
fdivl
cmp
pop
sub
or
mov
decb
popa
aaa
fists
jb
sbb
jmp
dec
pusha
fs
ljmp
xchg
loope
mov
inc
dec
fisttpl
testl
dec
cmpsl
xchg
sub
loope
add
mov
inc
std
cmp
push
sahf
mov
out
test
xchg
jp
test
cmp
in
sub
cli
cs
movsl
sbb
sbb
rorl
push
lcall
add
shl
xlat
mov
fldt
ds
xchg
loopne
jbe
movsb
lahf
sub
mov
push
into
mov
adc
out
xor
xchg
mov
out
test
rorl
mov
rorb
add
sarb
js
insl
inc
push
aam
cmp
push
ret
icebp
push
pop
loopne
aas
adc
rcrl
pop
fstps
lcall
out
addr16
outsb
or
dec
dec
test
in
add
stos
cmp
into
addb
imul
or
aas
jae
test
jp
or
fwait
jecxz
adc
xor
xorl
cmp
mov
push
fs
hlt
das
addr16
mov
rol
xor
and
data16
xor
movsl
or
push
cli
xor
xchg
sub
addb
fsubr
sbb
fists
mov
sub
lret
mulb
ljmp
cmp
jle
cli
add
and
out
and
popa
sahf
jge
aaa
cmp
cmp
out
enter
cmpl
fistl
mov
xchg
and
and
adc
popf
icebp
xor
ss
mov
inc
nop
sbb
scas
push
nop
jae
push
inc
inc
inc
add
mov
outsb
push
bound
jo
loopne
add
inc
add
sub
pop
pop
push
mov
test
sub
mov
pushf
cmp
xchg
leave
xor
mov
je
je
into
inc
mov
inc
stos
xchg
negb
xchg
stos
lds
in
or
pop
scas
ja
rcll
adc
inc
outsb
sbb
bound
jbe
hlt
or
adc
xor
mov
mov
dec
inc
ss
out
daa
cmp
jno
mov
stos
mov
mov
dec
jnp
pushl
and
out
aaa
pop
decb
repz
out
adc
sbb
dec
cmpsb
push
in
lock
pop
aaa
jle
pop
adc
repz
pop
jmp
mov
adc
jg
push
jp
lcall
mov
sub
lret
idiv
lods
cmc
fucomp
push
aaa
popa
push
pop
movsb
fisubs
call
adc
mov
cwtl
fdiv
mov
fs
shlb
out
mov
or
xor
jae
jecxz
jne
and
aaa
dec
dec
lret
jge
mov
loope
pop
push
movsl
fbld
lods
fsubr
ja
shlb
mov
enter
test
dec
push
fxch
imul
lods
mov
mov
aaa
inc
testb
pop
cltd
sub
xchg
fnstsw
xchg
enter
xchg
mov
and
shl
adc
into
add
fstl
sbb
xorl
out
cmp
mov
jmp
sbb
sti
inc
xor
movsb
test
stos
sbb
int
shrb
sub
mov
jns
test
mov
adc
mov
fsubrl
popa
int3
pop
mov
and
fmull
jnp
xchg
jle
movlps
repnz
scas
push
rorl
jmp
gs
mov
psrlq
imulb
add
dec
imul
repnz
add
adc
add
pop
push
movl
sbbb
push
fdiv
adc
insb
mov
retw
movsb
jo
popf
outsb
mov
add
mov
shlb
mov
out
hlt
cmp
inc
or
shlb
lahf
or
in
and
and
nop
cmp
imull
pop
add
aas
push
data16
lret
pop
pop
mov
adc
or
ss
cs
mov
int
jle
pop
mov
inc
jmp
shrb
aaa
xchg
aaa
push
sub
aad
cld
inc
aad
xor
dec
mov
into
push
cld
or
imul
and
bound
pop
mov
mov
icebp
push
xchg
mov
dec
cmp
sub
js
arpl
jecxz
scas
lock
sub
cmpb
cmc
into
cmp
mov
jge
mov
push
dec
je
sar
fnsave
dec
xor
push
or
insl
das
push
adc
insl
js
xor
cmp
push
add
mov
dec
mov
mov
pop
sub
jge
mov
subl
mov
iret
xchg
outsb
fisubl
pop
or
sti
jae,pt
in
bound
xchg
jb
dec
push
popf
inc
cli
pop
cwtl
lds
mov
mov
mov
mov
sahf
adc
mov
inc
ja
or
aas
mov
pop
in
pop
repnz
pop
loop,pt
mov
push
add
jle
inc
and
push
insb
mov
fs
mov
push
add
aaa
mov
arpl
in
push
xchg
jl
or
pusha
mov
dec
or
fbstp
cmp
outsb
push
pop
imul
jge
int3
sbb
out
xor
in
xor
cmpl
jo
fwait
out
sti
cld
loope
mov
or
jno
xchg
ljmp
popf
bound
or
sbb
in
pop
repz
xor
div
lret
sbb
push
mov
lcall
lock
fdiv
fisubrl
aas
dec
int
pop
loope
popf
mov
pop
imul
mov
sub
pop
jbe
pop
test
dec
clc
das
pop
bnd
jne
loop
jle
dec
xchg
inc
stc
add
enter
push
loopne
jae
jg
push
hlt
loopne
sbb
imul
imul
sub
ret
popa
in
outsb
mov
cmp
push
push
lods
stc
call
sbbl
pop
addb
bound
nop
sbb
add
dec
andb
mov
push
mov
mov
int3
rolb
pop
icebp
aam
das
or
jle
mov
jmp
mov
loopne
imul
andb
iret
sar
mov
sti
iret
adc
dec
popf
or
pop
fcmove
faddl
test
sub
sbb
popa
push
adc
addb
mov
jnp
shl
xor
cld
sub
sbb
mov
fnstcw
xchg
or
jno
hlt
ret
sbb
insl
outsb
jns
or
enter
push
jecxz
xor
insl
lods
out
jl
imul
lret
mov
mov
jae
pushf
notl
pusha
fists
aam
sbb
push
add
sahf
add
jnp
xchg
jmp
sub
xchg
cmp
xchg
jmp
and
shl
sub
push
or
and
dec
inc
inc
pop
cmp
mov
clc
sbb
out
jg
sub
push
arpl
jbe
dec
and
popf
jae
xorl
das
push
mov
leave
pusha
sarl
sub
adc
imul
and
shlb
xorb
cmpsl
outsb
bound
gs
push
in
push
push
fiaddl
sub
jle
xchg
stos
ror
mov
pop
std
dec
inc
bound
mov
adcb
mov
pop
pop
add
imul
xchg
js
js
dec
ss
popf
and
lods
mov
sub
call
dec
decb
in
fldenv
insl
xchg
cltd
xor
hlt
push
mov
sahf
je
xchg
adc
pop
mov
lock
sbb
mov
and
sbb
xor
out
jle
sub
sub
sub
dec
addr16
lahf
jl
mov
cmpsb
inc
lea
and
ret
js
mov
lods
in
mov
pop
adcl
mov
mov
xchg
push
sbb
pop
pop
push
xor
push
cli
orb
or
push
mov
fistpll
in
xchg
xor
mov
sub
ss
mov
dec
cli
jns
test
xorl
and
rolb
mov
mov
sbb
fldcw
inc
fidivrs
lahf
out
adc
dec
inc
fs
mov
fidivrl
pop
nop
shrb
orl
xor
and
shlb
addb
addr16
xchg
xor
sub
mov
popl
sub
mov
dec
imul
mov
imul
popa
xchg
inc
inc
jl
icebp
hlt
dec
out
call
jbe
imul
pop
cmp
xor
jnp
xor
adc
or
mov
mov
pop
inc
jl
pop
pop
pop
dec
daa
pop
mov
mov
rcrl
jl
jl
mul
fxtract
int
push
scas
jnp
fcom
mov
xchg
mov
add
mov
orb
addr16
popl
out
in
mov
pusha
jne
jl
mov
sbb
dec
pop
fistpll
insl
rcrb
rcll
pusha
xor
xor
sahf
jecxz
call
dec
inc
mov
push
sbb
nop
rolb
test
insl
lret
out
push
test
movsb
scas
jns
mov
inc
fmulp
and
std
push
lods
das
sub
and
cltd
xor
sbb
dec
cli
loop
adc
cmp
push
daa
cmc
test
and
mov
inc
or
test
adc
repz
inc
jge
cmp
ss
jmp
jnp
rorb
sub
cmp
ret
jp
faddl
ret
fildll
xchg
adc
jp
rcl
xchg
mov
push
sbb
mov
mov
sub
pop
jne
rcll
mov
sbb
inc
cmp
test
rclb
push
sbb
sahf
stos
pop
or
loope
cmp
int
mov
add
into
jnp
test
sub
nopl
xchg
je
lret
lods
cmp
jnp
popf
notl
adc
pop
aas
jmp
sub
jns
fldl
cmp
xchg
mov
pop
mov
jnp
data16
xlat
mov
js
add
adcl
push
push
fdivl
cmp
ret
sbb
lret
arpl
inc
aaa
mov
insl
sti
sub
jne
inc
scas
jnp
out
xor
push
mov
repnz
dec
ds
sbb
inc
fwait
jmp
and
arpl
fiaddl
pop
repnz
mov
repz
dec
cmp
ret
mov
jbe
insb
add
or
push
pop
push
sub
and
lods
inc
xor
shrl
add
mov
aad
xor
nop
pop
push
scas
xor
pop
xchg
fiadds
stos
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
sub
jb
cmp
addl
jbe
pop
dec
xlat
shll
jno
fucomip
enter
dec
fnstsw
es
bound
les
sarb
hlt
add
adc
icebp
sti
addr16
popa
push
xchg
movsl
push
cmp
lret
jg
mov
and
dec
notb
ret
mov
sbb
std
rcll
dec
iret
or
and
std
stc
sub
les
scas
push
inc
data16
in
pusha
and
subl
mov
and
push
in
jb
sub
in
dec
hlt
xor
or
mov
and
add
push
cwtl
and
lret
stc
dec
adcb
mov
inc
push
loop
mov
jmp
sub
movsb
jecxz
or
out
adc
mov
test
jecxz
les
xchg
xor
daa
rorb
out
clc
push
and
sbb
cmc
lahf
xchg
pop
mov
out
imul
popf
out
jae
mov
mov
cld
adc
cmpsb
dec
cltd
or
xor
scas
pop
js
gs
loope
enter
sub
or
xor
push
or
sbb
add
and
loope
cmp
pop
cld
or
dec
mov
fisttpll
dec
hlt
fcompl
push
shr
mov
pop
jmp
ffree
xor
push
jbe
int
xchg
dec
in
adc
loope
mov
outsl
xchg
xchg
dec
adc
imul
fwait
pop
inc
fwait
notl
cmp
and
leave
xor
jecxz
loop
mov
stos
jmp
fisubs
test
es
loopne
or
lods
push
jb
or
push
sbbl
adc
adcl
testl
jo
add
shl
xchg
cmpl
mov
mov
icebp
mov
pop
push
jo
mov
bound
pop
cmp
movsl
into
and
dec
mov
imul
xor
xor
push
lds
mov
loop
pop
icebp
cmp
fnsave
mov
repnz
dec
mov
pop
xchg
or
lods
aam
leave
and
ja
jns
std
pop
adc
and
fadd
mov
out
jo
shll
pop
or
stos
popa
and
push
add
sbb
xchg
shrl
lea
and
push
inc
xchg
cmc
dec
lods
ja
sbb
mov
xchg
in
mov
into
dec
fsubrl
lea
rorl
mov
and
out
mov
push
out
fcmovbe
fst
mov
movsb
jp
xchg
aas
sahf
rcl
ret
xchg
push
pop
bound
mov
push
push
mov
pop
mov
adc
clc
lds
mov
cmpsl
fcom
cwtl
pop
sbb
push
or
in
in
pop
enter
xchg
lret
fs
ss
scas
sbb
lods
cmp
dec
pop
push
inc
adc
scas
sub
jb
dec
jg
pop
xor
addl
popf
cmp
fucomi
mov
decb
xchg
sbb
mov
mov
out
push
fistps
mov
cs
inc
notb
push
test
fdivl
loope
imul
mov
xchg
push
mov
mov
adc
or
pop
sub
mov
lcall
stos
mov
mov
dec
mov
mov
jp
insl
push
repz
add
pop
mov
out
mov
add
xchg
pusha
push
mov
decb
les
push
fbld
cmp
mov
xchg
or
mov
loopne
rcr
movsb
xchg
js
loope
inc
cltd
clc
cmp
shrl
jo
and
arpl
rclb
movsb
push
lcall
insb
pop
dec
movsl
movsl
and
or
xor
cmp
sub
hlt
push
stc
pop
lret
out
les
jl
popf
loop
rcrb
sbb
aad
pavgw
shrb
add
inc
and
mov
gs
bnd
and
lods
xchg
lahf
cwtl
into
jge
xchg
mov
and
sbb
jge
movsl
jecxz
sub
ja
loope
jns
dec
out
popf
stc
lock
jnp
insb
sbb
pushf
es
mov
lds
adc
xchg
add
add
in
repz
insb
cmp
sarb
leave
repz
mov
push
addr16
dec
mov
push
mov
jl
roll
popf
cmp
int
cmp
outsl
scas
repz
sbb
push
push
fwait
scas
add
jl
mov
or
push
mov
pop
cmp
and
mov
mov
push
or
fbld
xchg
fisubl
inc
out
inc
mov
adc
dec
jno
loopne
js
adc
loop
out
adc
dec
push
aam
dec
scas
shlb
push
mov
pop
push
ficomps
push
jno
adc
int3
mov
lods
fwait
scas
jle
mov
mov
fistl
xorb
inc
inc
repnz
and
call
lcall
jle
xor
mov
sub
sub
jge
repnz
lea
jmp
imul
push
push
arpl
xchg
out
sbb
enter
and
dec
cmp
mov
dec
cmp
mov
sub
and
jmp
jmp
pop
push
xor
and
stc
test
dec
xlat
clc
ret
lret
in
inc
pop
or
out
cmpsl
out
sbb
and
mov
fdivs
pop
mov
jns
and
test
sub
stc
inc
and
sarb
daa
adc
cld
imulb
sub
call
mov
jb
repnz
jle
loope
insl
jnp
mov
insb
notb
pop
adc
out
lds
call
dec
sahf
sbb
mov
aam
nop
mov
addr16
push
mov
add
or
mov
loopne
lret
loope
jmp
cs
ss
push
jne
cmp
add
push
ljmp
inc
pop
xchg
jl
cmp
jb
pop
cmp
mov
lea
push
inc
test
sbb
sbbl
dec
jbe
push
lret
add
in
lret
sbb
add
dec
pushw
lock
lahf
mov
or
push
in
mov
jl
pop
in
in
dec
aam
jnp
dec
sbb
inc
lcall
sbb
test
and
lcall
es
cmpl
push
outsb
mov
in
jp
and
stos
cmp
push
in
cmp
aad
add
adc
sub
add
push
call
inc
sar
cmp
jne
call
push
cltd
mov
mov
add
xchg
xchg
inc
push
inc
cli
and
mov
jg
push
jmp
rclb
inc
shrb
outsb
xlat
lcall
inc
imul
and
add
outsb
loop
mov
jg
cmpsl
sub
invd
cmp
repz
xor
sub
push
pop
pop
pop
stos
notb
inc
rcrb
xacquire
loop
mov
xchg
mov
frstor
or
stos
jo
das
mov
test
popf
mov
jbe
leave
incb
cmp
and
jp
push
enter
mov
int
out
scas
and
push
mov
mov
nop
fisubl
xlat
in
and
cmc
fstl
sbb
imul
cmpsl
mov
out
mov
leave
lods
push
int
mov
in
and
sbb
imul
pop
jp
gs
dec
lret
cmp
mov
test
mov
mov
mov
adc
loopne
js
mov
stos
sbb
mov
cmp
jbe
faddp
dec
out
and
xchg
dec
dec
scas
lods
mov
mov
cmp
pop
shr
push
sbb
out
xchg
stos
dec
sbb
sbbl
cld
pop
cltd
pushf
pop
xor
mov
push
jp
lock
enter
in
cmp
jmp
sbb
int3
mov
rcrb
pushf
ss
das
leave
push
rcrl
arpl
push
loop
mov
push
xchg
sub
xor
mov
inc
aaa
mov
push
sub
adc
rcrb
arpl
pop
jbe
push
jbe
xor
fdivrs
es
lea
inc
pop
mov
mov
out
out
stos
repnz
xor
add
cmp
add
jbe
jbe
rcll
mov
or
sub
es
mov
bnd
dec
ja
cmpl
mov
rorl
jge
insl
add
or
stos
xchg
sub
dec
cmp
push
inc
daa
shll
mov
jge
pushf
incb
out
mov
xor
xor
mov
ret
pushf
fs
mov
shl
orl
mov
sbb
test
ss
fildll
jns
push
ret
daa
lret
outsl
loop
and
stos
adc
pop
and
notl
and
jg
mov
test
push
addr16
mov
clc
or
mov
cmp
hlt
loop
in
add
fwait
mov
jb
imul
fbld
sbb
or
mov
ss
adc
lds
std
outsl
dec
mov
cmp
icebp
push
cmpsl
and
sahf
jne
lea
dec
jae
daa
lret
aaa
je
leave
push
std
or
outsb
lock
cmp
or
pop
mov
sub
mov
in
in
xchg
xor
cltd
xchg
push
fildll
dec
jb
pop
pcmpeqw
sbb
daa
aas
jne
cmpsb
loop
ss
sahf
add
jns
dec
in
pop
fcmovne
outsl
xchg
adc
testb
test
aad
adc
into
push
fstpt
mov
mov
xor
sub
mov
stc
aad
fistpl
dec
repz
adc
push
scas
repnz
adc
pushf
sub
mov
les
decb
pop
scas
xlat
gs
out
mov
xchg
pusha
mov
lret
sub
sub
adc
xor
pop
mov
outsl
inc
jecxz
dec
or
jo
push
mov
pop
cmc
mov
cmp
enter
jge
cmp
out
subb
or
cli
mov
jno
int3
in
jb
mov
mov
enter
mov
lcall
fidivrs
gs
pop
shll
lds
push
das
jge,pt
aam
in
icebp
pop
sbb
add
cli
mov
int
inc
inc
inc
jg
dec
mov
and
mov
xor
mov
add
loopne
jb
lods
pop
cmp
mov
cmp
leave
push
sahf
xchg
test
mov
push
pusha
movsl
clc
jle
int3
cmp
push
sbb
mov
dec
or
add
arpl
add
subb
imul
shr
xchg
aaa
jle
inc
roll
xchg
test
pop
shl
repz
stos
push
shrb
and
jae
mov
push
and
dec
clc
sub
dec
xchg
lods
mov
loope
pop
pop
sub
mov
les
lds
fcmovu
shlb
lcall
loop
decl
aas
clc
adc
jecxz
jle
mov
in
dec
mov
push
sub
ret
jg
imul
fdivrl
sti
cltd
xchg
mov
incb
enter
adc
jp
testb
scas
cmp
cmc
ss
mov
or
dec
das
push
pop
mov
call
or
push
push
or
pop
sbb
dec
push
notb
mov
push
sub
mov
jns
xchg
imul
add
cmp
mov
push
fsubs
pusha
cmpsb
sbbl
pushf
inc
push
sbbl
pusha
or
ficoms
mul
ret
pushf
ds
pop
mov
daa
loopne
leave
shrb
jle
mov
inc
out
push
xchg
fsubl
push
sub
xor
sub
fcmovne
pop
test
icebp
call
sti
xchg
leave
outsl
push
lcall
ja
sbb
test
adc
push
cmpsb
cmp
add
or
es
pop
lahf
lea
lds
add
jbe
les
dec
ss
pusha
sub
mov
daa
mov
or
jb
shl
ds
pusha
mov
pop
pop
xor
fwait
in
es
adc
mov
out
out
xchg
inc
jnp
es
insb
jmp
fstpt
mov
jle
jae
jecxz
cmp
ljmp
inc
pop
jno,pn
pushf
adc
leave
xchg
xchg
jl
or
or
stos
out
mov
cli
lret
push
fdivr
mov
and
adc
cli
or
mov
or
xor
outsb
jle
cmpsl
sub
mov
adc
mov
or
outsb
jg
xchg
pop
jo
mov
mov
pop
push
dec
pop
jnp
jl
mov
inc
ret
cmc
dec
and
dec
div
cwtl
stos
and
clc
and
sub
int
cwtl
int
xchg
or
cmp
and
inc
lret
push
cmp
not
stos
push
push
pop
ds
push
xor
icebp
das
push
mov
mov
mov
fistl
popl
test
pop
not
cmp
outsb
out
ret
dec
cmp
or
xchg
xchg
repnz
jb
lock
ja
mov
lahf
push
dec
movsl
aad
out
fdivrs
add
push
sub
loopne
or
sbb
out
out
xchg
lods
push
mov
cwtl
or
xor
jecxz
xlat
cmc
sbbl
dec
adc
push
leave
aas
jl
jbe
adcl
lds
pop
cmp
cwtl
dec
cmpsb
push
push
mov
ficoms
stos
arpl
std
test
pop
pop
shlb
cmpsl
sbb
and
dec
loope
stos
adc
rolb
fisubrl
mov
push
sbbl
xor
sbb
pop
ret
or
mov
notb
sub
xlat
popa
jge
xchg
cmp
jl
jecxz
je
fbld
or
mov
push
and
push
movsl
add
jmp
imul
dec
sar
or
cmpsb
jo
mov
mov
push
lods
xor
es
adc
jns
dec
js
xchg
push
mov
or
idiv
ret
sarb
pop
cmp
jl
les
adc
jnp
sbb
pop
xor
pop
mov
lret
jno
xchg
test
cmp
lcall
in
adc
xlat
gs
cmp
int3
xchg
xor
outsl
aaa
sub
or
mov
sub
xor
push
sub
or
sbb
inc
ret
and
inc
ss
mov
sar
test
int3
xchg
iret
icebp
jmp
cld
loope
jge
add
hlt
stc
adc
dec
mov
outsl
sub
call
adc
push
rcr
jne
pop
cmp
adcl
sarb
sti
jg
xor
push
lods
cwtl
xor
add
popa
jp
cmp
and
mov
insb
icebp
jns
call
mov
fmuls
xchg
sbb
pop
adc
sub
imul
xchg
adc
in
cltd
cltd
outsl
movq
xchg
clc
jb
mov
cli
jb
aam
or
sub
test
call
dec
data16
sbb
ds
and
iret
cltd
mov
test
cmp
rorb
sahf
in
popf
push
lock
push
lds
js
mov
dec
cld
lods
outsb
cmp
aad
xchg
lahf
dec
pop
shll
test
dec
mov
push
jl
sarb
in
out
cmpsb
std
xchg
dec
mov
push
mov
xor
mov
cli
push
push
and
bound
jnp
pop
std
es
jns
mov
sar
push
push
xchg
imul
lahf
fistpll
insl
cs
pop
xchg
pop
dec
movb
cmp
xor
sbb
dec
mov
fcomip
fistpl
and
push
insb
fsubl
adc
inc
cmp
dec
fs
mov
cld
and
dec
ja
scas
mov
adc
scas
mov
fstl
lds
xor
push
push
ret
stos
push
lret
push
test
je
aaa
movsl
incl
jae
push
das
int
push
dec
mov
les
mov
sbb
sbbb
sbb
in
cwtl
loop
xor
lahf
lea
pop
rcr
movsl
test
sbb
inc
mov
fld
xor
rcrb
ss
enter
jle
in
xchg
addl
pop
ret
pop
incl
push
mov
pop
ja
and
xchg
cmp
cwtl
data16
test
std
pop
pop
pop
add
mov
lahf
shr
lret
or
rcr
lds
cmp
and
iret
xchg
test
lods
xchg
in
enter
sbb
sub
pop
sbb
sbb
mov
pop
push
xchg
jg
pop
nop
mov
and
and
push
add
mov
movsb
add
and
xor
sbb
mov
xor
xchg
jl
es
xor
in
ficompl
cwtl
jge
sub
ja
sub
in
or
add
test
and
push
popa
scas
je
xor
push
mov
sti
cmpsl
sbb
jmp
xchg
jp
fisttps
arpl
mov
insl
test
iret
pusha
xchg
xor
inc
aam
jge
frstor
sbb
lcall
repz
add
popa
xor
pop
daa
sbb
dec
das
out
ja
cltd
mov
cmpsl
movsb
adc
or
popa
or
push
out
xchg
jae
roll
dec
mov
sub
in
outsl
xor
mov
xchg
push
faddl
jl
jae
divl
dec
or
and
mov
stc
test
sarb
sti
pusha
sbb
jmp
rcrl
int3
push
push
loope
nop
cmp
jbe
add
push
movsb
lcall
push
sub
jo
mov
fdivrs
and
stc
push
repz
test
cmp
mov
mov
pop
scas
mov
daa
xor
jne
adc
icebp
pop
sub
ret
aam
mov
scas
xchg
and
mov
roll
push
jp
mov
dec
or
mov
push
cli
xchg
sub
fstl
popf
es
shll
out
mov
inc
xchg
adcl
xlat
mov
cmp
out
add
aaa
cltd
jmp
cmpsb
sbb
sub
adc
outsb
lret
stc
fwait
jp
movsb
fbld
cltd
iret
adc
pavgw
lret
or
imul
mov
sbb
ret
clc
push
popa
pop
pop
cli
push
mov
jle
fildll
popf
mov
mov
jge
pop
pop
aas
enter
divb
push
mov
cld
shr
mov
stos
icebp
scas
push
lds
cli
add
dec
setne
jmp
sbb
inc
out
into
xchg
test
js
sbb
pop
adc
fsubr
xor
mov
sti
push
lea
adc
lods
dec
dec
loope
push
testl
dec
imul
dec
aad
fisttpl
jns
in
or
sti
jp
mov
cmc
hlt
mov
add
push
dec
jl
int3
roll
jb
xchg
mov
imul
cmp
pusha
mov
mov
lods
jle
add
in
pusha
jle
fidivs
outsb
loopne
push
sbb
dec
loope
xor
cld
lcall
aas
fnop
xor
mov
pusha
sub
mov
mov
jge
mov
adc
sahf
lret
push
mov
inc
insb
inc
loopne
adc
jmp
imul
cmc
xlat
imull
out
roll
out
push
in
push
int3
int3
loopne
jne
xor
jnp
ljmp
mov
test
pop
mov
add
outsl
or
clc
dec
pop
movsb
xchg
lds
push
mov
adc
ds
mov
cmpsb
int
test
pop
push
gs
pop
inc
fwait
mov
mov
les
push
mov
mov
xor
pop
cmp
and
sbb
push
dec
es
cld
xor
xorb
jno
js
push
jmp
popf
push
cwtl
lea
add
hlt
mov
insl
inc
insb
cmp
dec
mov
movb
clc
jge
add
sbb
clc
icebp
bound
rcrl
mov
sbb
pusha
mov
out
mov
loope
mov
iret
pop
cmp
xor
push
lea
xchg
and
cmpl
inc
cmp
std
out
mov
xchg
iret
ret
pop
aad
repnz
dec
and
test
arpl
inc
orb
cmp
pop
push
arpl
sbbl
sti
ret
fmuls
mov
fdivr
or
cld
lret
inc
mov
outsl
push
rcll
add
xor
add
cmovbe
adc
das
stos
mov
ret
jg
mov
mov
pop
and
fisttpll
jp
arpl
adc
push
jp
hlt
cmp
clc
pop
mov
cmp
ds
ja
pusha
fnsave
dec
push
insl
add
insb
fadds
aaa
ja
cs
loopne
mov
add
pop
cmp
add
cli
das
lock
sbb
je
cmp
jbe
add
mov
cmp
jbe
jge
inc
cmp
arpl
mov
jp
gs
cmpsb
mov
outsl
mov
and
jns
sti
push
fs
rorl
jbe
xlat
pushf
aad
pop
inc
ss
fmul
jne
dec
or
adc
mov
cmp
jecxz
add
test
pop
fdiv
outsl
stc
xor
aas
test
sub
aam
in
xorl
sub
jg
pop
or
inc
add
push
add
pusha
leave
cmp
dec
test
lea
push
pop
and
push
movsl
das
mov
js
and
iret
stos
movsl
int3
aam
push
leave
and
arpl
mov
add
ds
shlb
test
jbe
adcb
lods
aaa
xlat
sbb
pop
jo
ja
das
push
sti
adc
cmp
pop
loopne
mull
imul
jns
dec
aam
inc
and
aad
aaa
dec
loopne
push
add
sbb
cwtl
push
mov
loope
repz
cld
mov
jb
data16
hlt
and
popw
pop
sbb
xlat
movsb
push
je
push
inc
mov
gs
sbb
rcll
loope
loopne
mov
sub
cli
push
outsb
dec
mov
xlat
sbb
ja
sbb
cmc
sar
lahf
mov
rorb
call
leave
subl
dec
cmovnp
ret
fnstcw
sbb
jle
std
pop
mov
or
and
loope
adc
cs
adc
dec
mov
pop
sbb
pop
lea
jnp
cmp
jge
scas
arpl
outsl
lahf
mov
sub
movsb
shrb
or
imul
dec
movb
icebp
sbb
add
mov
push
loop
int3
loope
or
sbb
dec
sbb
or
push
fucomip
int3
mov
nop
divl
push
jmp
push
shlb
push
mov
pop
xchg
inc
lods
push
jb
or
mov
cltd
call
jne
mov
push
ja
sarl
dec
xor
mov
sub
bound
push
push
ret
push
cwtl
cmp
xchg
pop
imul
adc
es
daa
and
push
sar
dec
push
lahf
or
shlb
sarl
cmc
cs
lcall
mov
sbb
dec
sarl
shll
push
jp
inc
ret
shrb
ss
es
pusha
negb
js
fldt
cwtl
addr16
sub
loope
xor
xchg
dec
cld
jecxz
scas
or
add
hlt
push
int3
cwtl
and
insb
sahf
jge
jnp
dec
xor
loop
mov
sbb
test
cmc
stos
sub
roll
aaa
pushf
fistpll
mov
outsb
xchg
pop
xchg
popa
xchg
jecxz
jge
add
mov
clc
xchg
xchg
xor
sbb
cmp
jb
push
adc
outsl
ret
xchg
or
mov
cltd
pop
push
icebp
decb
lea
fs
cmp
loopne
mov
movsl
cli
shll
test
pusha
or
mov
jge
adc
clc
mov
fisubl
lahf
jno
outsb
int
cli
adc
sti
dec
enter
cltd
add
jp
pop
lahf
pop
insb
mov
push
movsl
fcomps
stc
lods
aas
mov
pop
jg
dec
fs
call
aad
mov
cmp
xor
xor
loope
ss
insb
cltd
fistpl
pop
cmp
xor
and
fisubl
mov
inc
lods
pop
adc
sbb
mov
aad
hlt
lock
or
adc
xor
pop
fsub
or
ss
mov
jecxz
mov
into
hlt
push
push
adc
push
dec
push
je
or
dec
mov
sbb
xor
stos
cmpsl
inc
dec
jg
mov
andb
sbb
data16
pop
ret
imul
ret
out
outsb
jnp
pop
cmp
and
mov
dec
addr16
inc
push
mov
cli
fcoms
xor
pop
popf
ret
pusha
out
scas
or
mov
mov
xlat
pop
push
sub
lret
dec
push
push
xor
jecxz
iret
mov
adc
fwait
bound
sub
sbb
aam
pop
sahf
sbb
outsb
arpl
push
mov
xor
mov
cmp
out
xor
out
jne
mov
mov
and
aad
cmpl
mov
xor
add
adc
lock
sbb
cmp
lock
ss
adc
sbb
mov
cmp
ja
call
dec
aad
shl
pop
jns
inc
jo
lods
push
daa
int3
stos
xor
jg
push
pop
inc
sahf
xor
pop
hlt
push
xor
fldenv
das
xchg
rclb
push
pushf
repnz
pop
insb
jmp
dec
or
jb
outsl
xor
and
cmp
test
cwtl
popf
xchg
sub
pop
and
sub
outsb
add
ja
mov
mov
cmc
mov
sub
sub
pop
gs
pusha
xchg
aam
in
in
adc
jl
mov
pop
push
cmp
cmp
scas
incl
sbb
jl
pop
push
fdivs
cmp
notb
add
aad
or
mov
pop
pop
or
push
mov
adc
sbb
test
mov
mov
xor
jns
mov
inc
imul
or
fsubl
loopne
push
fs
sarb
inc
xlat
xchg
cmp
mov
lods
out
mov
cli
rclb
cmpsl
das
icebp
rcrl
les
lcall
icebp
pop
pop
fabs
dec
test
aam
and
push
stos
es
xchg
ficomps
inc
xchg
jecxz
or
pop
jmp
addr16
jo
dec
xchg
mov
xchg
sti
xor
adc
dec
pushf
andl
pop
int3
xor
adc
fiaddl
push
push
es
sbb
jg
data16
inc
insl
lret
push
and
push
mov
sbb
insl
bound
sub
cld
and
sub
fmul
push
outsl
rorl
inc
xor
fadds
cmp
pop
aam
insl
inc
xor
sub
ja
jno
xchg
sahf
mov
in
sub
mov
push
mov
sbb
adc
movl
test
repz
dec
mov
and
jne
mov
fdivrl
mov
xor
enter
push
lea
adc
jecxz
in
addr16
pop
cli
fsts
mov
jb
ficoms
cmp
jo
loopne
ss
dec
mov
fcomp
and
cmp
mov
or
cmpsb
ja
inc
mov
dec
dec
pop
sahf
push
cli
sti
leave
pop
jl
sbb
jp
dec
mov
nopl
lods
xchg
mov
mov
dec
rolb
pop
inc
addr16
inc
shll
push
cmp
xchg
inc
cmp
hlt
mov
mov
or
insl
xchg
mov
mov
out
ret
xor
adc
pcmpgtw
sti
in
les
xor
or
out
fsub
gs
mov
xchg
cmp
das
sar
mov
jle
rcr
jnp
test
xor
mov
push
scas
and
xor
adc
fidivs
mov
mov
fsubrl
roll
xlat
mov
shll
loope
dec
mov
push
cmp
mov
mov
pop
add
add
repnz
and
call
imul
dec
push
jl
fs
push
or
popf
dec
out
jp
mov
loop
or
jb
mov
mov
lds
xchg
sbb
mov
movsl
clc
inc
pop
pop
clc
cmpsl
sahf
stos
and
pop
gs
shll
push
aam
and
je
jae
pop
scas
or
and
ret
mov
shrb
jb
mov
jae
xor
mov
mov
adc
icebp
adcb
cmpsl
mov
push
xchg
xchg
mov
mov
xchg
sub
movb
jecxz
mov
sub
test
jns
cld
popf
and
mov
or
outsb
add
scas
and
add
testl
icebp
stos
popa
imull
mov
jmp
mov
sbb
inc
cmpsl
add
int
dec
loop
aaa
pop
mov
aam
fldcw
dec
frstor
adc
add
test
mov
mov
or
mov
cs
mov
test
xchg
stc
mov
push
xchg
jecxz
cmp
mov
lahf
pop
pop
mov
mov
xlat
jl
fwait
leave
mov
push
dec
mov
cmp
outsl
and
lea
add
push
out
xchg
mov
int
and
gs
or
clc
sbb
fwait
stos
fdivrs
iret
cli
push
sub
test
and
adc
ret
xchg
fs
and
mov
test
das
out
pushf
mov
divl
jge
loopne
fnstcw
mov
lods
scas
push
jecxz
adc
andl
inc
mov
fs
jae
add
pop
inc
daa
mov
out
repz
out
popf
pop
bound
fs
cmp
mov
dec
in
sub
testl
jno
mov
push
mov
int
sub
fldenv
in
loop
jno
pop
jae
loope
popl
mov
insl
xorl
sub
scas
pop
sarl
pop
in
pop
push
call
xchg
das
in
cmp
pop
repz
clc
push
push
rorl
lret
fldt
aam
addl
pushl
movsb
je
movsl
dec
test
loope
jns
ja
out
test
movl
mov
jmp
sbb
les
push
dec
jmp
xor
addl
pop
push
jnp
sub
mov
xor
loop
xchg
repnz
dec
mov
inc
jle
xchg
arpl
sahf
dec
jle
jns
mov
popa
mov
sub
daa
xorl
jno
int3
es
lret
sti
adc
iret
xor
pusha
pushf
aad
and
mov
inc
call
jge
adc
sbb
and
xchg
mov
xchg
jg
and
push
or
movsl
jmpw
decb
test
mov
les
dec
fcmove
mov
or
mov
or
inc
xor
inc
xor
or
test
dec
dec
jl
hlt
sub
or
push
fcompl
push
inc
xor
stc
pop
fs
iret
aas
out
aas
aaa
leave
adc
xor
jbe
mov
rcrl
fstps
mov
in
sub
jle
test
xchg
sbb
xchg
dec
cmp
pop
mov
push
pop
pop
mov
inc
mov
sub
mov
mov
out
cwtl
loope
int
dec
into
mov
push
subb
cld
push
push
jp
dec
imul
test
mov
cld
gs
pop
imul
cmpsb
rcl
mov
push
dec
cmp
outsb
xor
jne
test
mov
sbb
fdivl
push
mov
enter
dec
insl
nop
popf
es
push
daa
ror
xor
dec
inc
rcrl
pop
ret
sar
cmpsl
xchg
js
push
enter
cmp
and
sbb
push
fsubrl
jb
sbb
mov
outsb
ficomps
les
xchg
dec
je
aas
aad
and
or
push
movsb
pop
cmp
jle
dec
popf
xor
inc
cmp
ret
and
test
add
xchg
push
rcll
and
movsl
mov
aad
ret
cmp
sahf
pop
sub
icebp
lock
int
leave
jno
aaa
jne
add
ds
shll
jnp
pop
cmpb
mov
sub
adc
or
fadds
sbb
mov
mov
rorl
jecxz
lret
adc
or
dec
int3
jb
xchg
icebp
lods
xchg
pop
cmpsl
sub
cld
mov
ficoms
mov
push
cmp
cmp
mov
insl
popf
mov
dec
icebp
mov
inc
adc
add
out
rcll
sti
mov
add
cmp
loope
scas
popf
push
jmp
and
fbld
xchg
imul
jg
loop
in
xor
pop
sbb
jno
push
lea
rep
sub
adc
sub
pop
add
jge
mov
cmpsl
out
call
cmp
jp
jo
aad
lret
call
sahf
test
cli
pop
push
cmpsb
or
and
xchg
stos
pop
cmp
ret
push
jns
push
jp
adc
inc
ret
inc
fmul
mov
clc
enter
pop
push
insb
imul
int3
add
push
ret
mov
mov
push
or
mov
scas
mov
dec
mov
dec
pop
in
dec
mov
or
sbb
xor
xor
dec
jns
jl
outsl
push
add
es
fsubl
pop
ret
push
fisttps
or
push
or
fs
mov
test
movsb
cmc
movsl
es
xor
pop
add
shll
popf
mov
pop
adc
jo
xchg
sbb
push
std
xor
inc
cmovg
fbld
mov
xor
adc
nop
gs
inc
lock
ret
mov
xchg
out
xchg
pop
cltd
pop
repz
push
pop
lahf
jns
movl
push
out
jmp
dec
cmc
push
mov
in
sub
push
fs
lods
les
sti
cmp
das
and
push
sbb
adc
test
adc
push
jp
add
xchg
mov
enter
mov
addr16
jno
lea
sub
mov
xbegin
in
jge
inc
xor
loop
sbb
and
sub
js
sbb
sub
lret
or
aam
jno
or
lods
pusha
add
ficoms
ret
mov
hlt
add
divb
mov
jecxz
xorb
push
push
subps
or
cltd
adc
and
mov
mov
fists
int3
int3
push
es
adc
adc
cmp
cmp
fisubrs
into
insl
das
mov
sar
add
xchg
out
outsb
jo
dec
mov
mov
pop
jnp
lea
dec
cmp
test
cmp
js
hlt
adc
lock
call
inc
cmpsl
inc
jmp
add
cmp
mov
push
cltd
jg
dec
dec
or
xor
xor
add
bound
popa
lea
dec
cmp
dec
bound
mov
scas
mulb
dec
int3
pusha
fistps
arpl
or
cmpsl
push
test
idivl
pop
iret
mov
mov
addr16
ret
ljmp
int3
push
sarl
int
andl
jge
sti
loope
lret
mov
sbb
dec
sbb
imull
inc
aas
mov
ja
cmpb
shll
push
das
popa
xlat
stc
inc
int
rcl
sub
adc
test
push
mov
stc
or
sbb
data16
pop
adc
cmp
mov
add
pop
pop
inc
mov
dec
xchg
cmp
lea
and
outsb
pmuludq
sub
jno
hlt
cmp
xchg
daa
dec
lahf
fucomp
popa
push
push
sub
repz
jae
jae
mov
jns
inc
push
add
or
mov
cmpsl
addl
xor
adc
fwait
ss
xchg
jmp
pop
or
scas
les
imul
add
call
adc
cmp
test
mov
add
in
ret
pop
or
and
or
inc
hlt
lcall
xchg
dec
dec
es
push
cmpsl
add
aam
ret
aas
add
stos
stos
adc
xchg
jmp
xor
loopne
les
fimull
push
xor
cmp
jecxz
add
pop
rorb
pop
adc
add
lahf
inc
inc
push
cs
ret
dec
cs
sbb
pop
ss
hlt
add
add
repnz
and
rol
sbb
xor
mov
jae
mov
adc
lods
sti
mov
push
pop
movsl
xor
rolb
in
pop
mov
pop
cmp
clc
add
sub
adc
into
adcb
mov
shll
sbb
or
in
cs
mov
xorl
adc
je
gs
fwait
cmp
inc
inc
cltd
aas
dec
mov
push
fcmovbe
enter
xchg
push
fs
jecxz
lret
fsubrp
and
xchg
push
mov
dec
push
push
jl
repnz
jmp
cld
cwtl
jbe
sbb
clc
les
sahf
ret
mov
xchg
wbinvd
clc
or
cmpsb
inc
push
out
jne
push
arpl
xchg
pop
mov
jmp
inc
shlb
dec
mov
lret
dec
pop
outsl
xchg
add
cltd
aad
cmp
sub
outsb
mov
or
mov
xchg
fistps
pop
insl
or
xchg
pop
fadds
mov
xchg
xchg
xor
daa
jns
push
sbb
jae
cli
or
negb
stos
mov
and
arpl
ficompl
push
outsb
adc
push
jno
inc
fucomp
pop
xchg
fucomi
jb
pop
lods
xchg
jae
in
ficompl
jge
pop
dec
iret
lods
aas
mov
xchg
dec
pop
out
pop
or
test
push
out
pop
ret
or
pop
lods
lahf
dec
xor
dec
loop
iret
push
mov
mov
test
push
or
popf
dec
xor
cmp
push
outsl
mov
test
mov
cmpsb
xor
gs
jbe
adc
mov
pop
inc
add
mov
or
pop
jecxz
push
sub
aas
repnz
dec
insl
mov
jbe
sub
fnsave
mov
imul
lds
pop
jge
add
fstpt
into
adc
cmp
std
inc
ret
push
cs
mov
push
iret
lret
mov
add
push
cmp
pop
popa
dec
scas
sbbb
xorb
lods
xchg
ret
xchg
push
cmp
aam
or
fcmovu
movsl
fwait
stos
jns
stc
cmp
mov
imul
xor
jb,pt
dec
gs
adc
adc
aas
lea
test
or
cli
pusha
inc
ja
push
xchg
int3
clc
out
mov
xor
rorb
and
bound
pop
xchg
test
jl
fnsave
cs
punpcklwd
sub
clc
jne
fucomi
pop
sar
pushf
adc
and
xchg
in
jno
xchg
mov
sbb
mov
in
popf
loopne
sub
jmp
adc
lods
jnp
jmp
inc
cli
dec
ds
ds
pop
push
xlat
jno
lcall
or
xchg
out
adc
shrb
leave
ret
adc
xrelease
dec
pop
std
cmc
loop
mov
adcl
push
push
pop
jge
cmp
mov
pop
cmp
ficoml
mov
sbb
fcompl
and
movsl
lods
or
ret
dec
stos
add
jecxz
inc
das
popa
sub
adc
jle
jge
or
cmp
imul
test
daa
xor
sti
shlb
sbb
fsubrs
jae
icebp
addr16
out
mov
es
ret
lods
orps
push
in
fildl
int
add
mov
mov
mov
jnp
fmull
dec
lock
pop
mov
jge
jbe
mov
cmpsl
adc
jae,pn
mov
add
push
mov
inc
cmp
push
arpl
add
sbb
xlat
dec
fimuls
mov
mov
imul
imul
lret
xor
mov
and
xchg
sub
mov
xchg
icebp
cs
pop
int
sbb
pop
ss
pop
or
int3
fnstsw
aas
es
and
push
addl
jno
jecxz
test
jle
jg
add
outsb
int3
enter
fmul
insb
and
mov
ja
and
test
add
lods
test
jp
fucomi
and
clc
xchg
push
add
inc
sbb
testl
dec
sub
fisttpl
jg
pop
jnp
gs
les
scas
aas
pop
jge
or
je
movsl
push
sbb
fists
mov
mov
dec
adc
fadds
push
loope
or
cmp
outsl
mov
xor
mov
push
idiv
cmp
das
pushf
lret
cmp
add
popa
add
outsl
arpl
jg
insb
fwait
add
add
ret
push
mov
cltd
out
addb
mov
xlat
scas
test
xchg
cmpb
dec
fwait
xor
insl
scas
adc
sub
pushf
arpl
rorl
repz
fistpll
dec
mov
jecxz
outsb
repz
adc
xchg
ss
insl
pop
clc
movsl
nop
cmpb
insl
out
mov
or
arpl
lcall
dec
ds
xor
push
jmp
jmp
jmp
rorb
cwtl
addb
cmpsl
mov
cwtl
ret
insl
fsubrs
rol
xor
lds
mov
inc
addl
xchg
fchs
or
out
push
in
cmp
clc
inc
test
std
imulb
mov
push
outsb
adcb
and
add
dec
adc
lods
adc
push
ljmp
stos
int3
add
pusha
xchg
pusha
nop
addr16
lret
lods
fs
out
add
lds
push
aas
lock
into
sbb
jl
fistpl
push
pushf
cwtl
dec
ret
sbb
push
bound
mov
xchg
cli
test
bound
jmp
jns
mov
iret
aas
fnsave
push
xor
pop
sub
aam
popa
addr16
frstor
fcomps
xchg
xchg
in
insb
int
mov
mov
mov
adc
in
ficoms
adc
sbb
pop
mov
jae
inc
addr16
mov
push
xor
jg
stos
adc
pop
jecxz
iret
xchg
repnz
or
push
xchg
aam
mov
pushf
in
cmp
and
imul
repz
pushf
orl
daa
sbb
movsl
les
sbb
jp
or
stos
cwtl
add
les
test
inc
repz
dec
cmp
nop
jmp
pushf
pop
dec
mov
push
test
cmpsl
in
dec
jb
pop
outsb
add
sbb
xor
xor
xor
pop
clc
out
imul
outsb
dec
mov
dec
jle
ss
add
pop
enter
decb
sub
and
add
dec
inc
data16
dec
lock
ljmp
push
scas
pop
or
shlb
jmp
sub
test
push
ret
xor
mov
inc
pop
mov
sub
mov
movsb
mov
inc
lea
xchg
push
fidivl
jnp
mov
push
jae
mov
gs
outsb
cwtl
ss
xchg
out
add
hlt
movsl
fcmovnbe
mov
add
repz
in
ficompl
cs
lahf
sub
filds
out
push
push
mov
imul
cmp
fwait
pop
inc
test
sarl
sub
test
ds
stos
cmpl
fwait
mov
push
cmp
scas
jge
add
js
out
call
aaa
lock
push
inc
ret
push
xchg
or
out
or
pop
ficompl
dec
addl
cltd
stc
inc
insb
cwtl
and
or
jmp
mov
adc
call
jle
cmp
nop
out
in
popf
add
mov
push
mov
mov
push
lods
inc
jnp
lret
cwtl
add
sbb
jmp
cmpsb
inc
xor
mov
inc
outsl
inc
into
dec
dec
mov
pop
ja
dec
inc
or
sbb
outsl
leave
test
fcmovb
dec
jmp
out
pusha
adc
pop
and
pop
adc
sbb
xchg
insb
lret
and
jae
scas
xchg
andb
in
push
iret
push
shrl
dec
dec
jbe
stos
imull
ljmp
jnp
cltd
repnz
test
movsb
mov
cli
lahf
jl
mov
adc
ret
rcl
dec
mov
movsl
lea
or
sub
lret
cmpsl
push
scas
push
js
mov
pop
or
cmc
inc
loop
jns
xchg
mov
or
pop
push
jge
mov
adc
adc
ret
xchg
xchg
pop
dec
xchg
cmpsb
lock
inc
fmuls
negl
test
je
mov
hlt
pop
xchg
addb
mov
repnz
movsl
jae
jb
cmp
cmp
pop
repnz
not
fstpl
mov
mov
ret
jne
dec
dec
xlat
or
bound
in
hlt
pop
xchg
popa
ds
sbb
add
pushf
add
lcall
adc
push
shlb
pop
dec
inc
ljmp
adc
clc
das
sub
push
jmp
pop
mov
sti
in
pop
inc
test
jge
jae
fdivrl
push
cmpsb
jmp
shlb
adc
lock
mov
fcomip
pop
sbb
lahf
jns
popa
inc
aam
mov
cmp
inc
mov
mov
mov
add
push
mov
daa
mov
pop
add
push
mov
sbb
sbb
or
pop
mov
xchg
add
imul
divl
and
arpl
js
inc
sub
sbb
mov
add
test
pop
pop
shlb
scas
in
int
sub
cmp
lds
cld
xlat
mov
loop
daa
sub
mov
aas
mov
inc
sub
pxor
arpl
add
int
and
mov
loopne
sbb
jo
loop
lea
fwait
and
inc
dec
dec
lea
mov
nop
push
aaa
push
dec
dec
rclb
cltd
pop
pop
data16
jge
cmp
xchg
mov
adc
mov
jne
sub
cwtl
ds
loopne
cmp
adc
xchg
sbb
ja
mov
pop
or
sub
push
stc
add
mov
aaa
mov
sbb
mov
or
iret
jb
add
aad
mov
xchg
cmp
stos
data16
into
xor
imul
imul
out
inc
shlb
mov
cwtl
insl
mov
loope
ret
icebp
inc
mov
mov
movsb
fisttpll
clc
addr16
dec
test
dec
xchg
jg
pop
ret
push
scas
das
xchg
jbe
pop
clc
jb
inc
xchg
icebp
out
jl
dec
test
ljmp
inc
and
lret
add
pushf
sbb
jle
rcll
or
mov
jbe
jge
es
arpl
sti
jno
push
out
int3
push
jns
cmp
xor
cmpb
mov
stc
and
adc
shr
cmp
bound
cwtl
and
cmp
ret
xchg
fs
repz
leave
ja
xor
xor
push
and
sub
sub
mov
adc
js
cmpsl
push
popa
les
test
cmovs
nop
adc
pushw
dec
dec
push
rorl
jge
inc
fldcw
out
rcll
push
sub
pop
push
pop
in
mov
pop
bound
cmc
imul
js
mov
out
movsl
sub
push
and
lcall
mov
cmp
leave
or
scas
nop
test
inc
adcb
xchg
in
movsb
jge
test
mov
add
xchg
xor
mov
add
es
mov
scas
rsqrtps
jbe
xor
mov
mov
out
int
jmp
sbb
rolb
jmp
mov
cmp
mov
xor
stos
pop
and
pushf
arpl
bswap
mov
rolb
cs
or
mov
inc
cmc
addr16
test
adc
into
sbb
jbe
xchg
jmp
pop
mov
sub
adc
lcall
mov
adc
movsl
dec
out
push
std
call
xor
rcrl
push
pop
xor
push
mov
pusha
cmp
cmp
xchg
mov
jne
outsb
dec
inc
inc
pop
out
xlat
bound
sbb
sub
scas
aad
dec
xchg
xor
cmpsb
add
xor
in
add
ret
aaa
test
and
cmp
add
mov
cmp
je
jnp
test
ds
add
lock
lret
daa
ret
lods
xchg
ret
dec
xchg
clc
lea
push
rcll
andb
gs
cld
cmpl
cmp
push
mov
subl
mov
cs
mov
cmp
lods
out
aad
mov
insb
push
adc
xchg
icebp
lcall
sbbl
inc
mov
push
mov
dec
gs
lea
in
mov
orl
mov
sbb
std
sub
hlt
mov
mov
mov
push
daa
out
adc
pusha
imul
push
shr
push
cli
lds
or
xchg
jmp
leave
imul
mov
rclb
dec
sub
mov
mov
shlb
lcall
cltd
cmpsl
xor
popf
out
sahf
mov
stos
mov
mov
repz
outsl
xchg
aam
popl
ja
shl
idivl
pop
mov
outsb
pop
push
mov
xor
xchg
xchg
mov
addb
xchg
adcb
mov
or
push
push
xor
popa
jge
cld
lret
fnsave
mov
mov
pop
pop
ja
pop
xchg
fwait
popf
fnstsw
lods
inc
aad
jle
xchg
sbb
jnp
subb
jmp
add
dec
rcll
add
int3
out
push
mov
pop
adc
pop
roll
dec
or
push
ljmp
inc
pop
orl
outsl
pop
les
or
adc
pushf
je
sub
dec
mov
fs
mov
inc
push
dec
divl
push
repnz
inc
sbb
sbb
cmpsl
scas
cmovae
shl
in
add
jmp
and
pop
mov
jne
mov
pop
pushf
adc
test
insb
pop
mov
push
lea
cmp
mov
scas
leave
lock
mov
inc
scas
adc
mov
xchg
push
jo
leave
inc
clc
xor
or
inc
adc
cmpsb
sti
test
dec
mov
fisttps
push
sahf
mov
inc
jg
xchg
aam
es
movsl
xchg
dec
mov
lods
mov
inc
scas
aad
mov
aas
pop
pop
xchg
push
and
jl
xor
repz
add
inc
sub
pusha
dec
inc
es
pop
xchg
jne
xchg
mov
cmp
push
adc
fisttps
push
std
aas
push
mov
int3
push
and
bound
inc
nop
lods
jmp
dec
mov
js
movsl
and
in
sahf
leave
mov
or
fdivrl
in
fnsave
faddl
aam
fsts
push
stos
or
jmp
push
jns
popf
scas
dec
clc
insl
out
pop
pop
inc
lods
xor
sub
pop
mov
jb
shl
iret
js
push
stc
and
mov
lcall
stos
in
fisubrl
sub
enter
push
dec
adc
test
loopne
push
aas
inc
xchg
daa
repz
aaa
pop
mov
dec
daa
pusha
xor
xchg
mov
je
cli
pop
and
aam
aam
out
push
push
and
or
cmp
adc
fmuls
sbb
fdivs
out
mov
lahf
ret
inc
pop
leave
loope
arpl
xchg
mov
inc
lods
cmpsb
mov
pop
cli
xor
cmp
iret
ja
jnp
out
and
fsubl
jae
push
add
or
mov
sub
fwait
cmpsl
fisubrs
out
dec
fisubrl
inc
mov
rcll
outsb
out
lods
pop
cmp
xchg
push
xchg
cmp
jle
jb
xchg
pushf
pop
scas
pop
imul
cmp
testb
popf
cmp
push
ja
rclb
dec
and
add
dec
jge
xchg
js
inc
iret
pop
or
fdivrs
sarl
inc
add
shr
repz
outsb
cmp
in
pop
mov
sub
popa
add
jnp
mov
xor
fstl
das
adc
pop
push
mov
in
test
jle
lods
ret
es
pushf
cwtl
pop
pop
or
std
test
test
icebp
mov
lcall
sub
xlat
dec
or
js
dec
adc
sbb
add
es
cwtl
cltd
mov
xchg
scas
jmp
push
pop
in
mov
pop
ljmp
in
cmp
push
jl
push
adc
add
pop
xchg
jecxz
inc
movsb
jb
jle
lret
jl
leave
cli
mov
into
out
add
sub
jg
cmpsb
xchg
sub
arpl
pop
int
in
and
mov
pop
add
into
ud2
jae
sbb
inc
in
test
mov
mov
sub
rcrb
sub
fimull
jg
insb
push
enter
xchg
push
popa
jne
dec
lahf
sub
rclb
in
pop
pop
cltd
js
rcrb
push
mov
daa
pop
not
sub
cmc
daa
gs
xchg
xchg
pusha
add
jl
fwait
jg
inc
dec
or
mov
jmp
cmpsb
add
and
fld
outsl
test
arpl
cld
add
lods
xchg
sub
add
dec
jbe
push
fwait
sahf
aas
popf
push
imul
in
fstpt
bound
push
int
testb
lcall
not
je
repnz
jne
add
or
cmp
jmp
mov
sqrtps
test
addr16
out
pop
aaa
push
test
mov
data16
cmpsb
pop
iret
insl
hlt
add
fisubs
adcb
call
adc
loopne
xchg
push
inc
mov
roll
push
outsb
and
push
daa
insb
pop
dec
adc
push
stc
lea
fldenv
xchg
inc
sub
sti
pop
loop
mov
cmp
inc
jns
sbb
xlat
cmp
or
push
mov
jo
cmpsb
pop
insb
sbb
ret
cmpsl
push
cmp
je
das
scas
mov
add
enter
outsb
cmp
pop
sub
in
inc
test
lds
pop
mov
mov
lret
adc
ficoml
sbb
mov
mov
xor
pusha
stos
data16
das
aam
push
divps
mov
push
fdivs
xor
lock
inc
push
push
mov
lock
lret
stos
cmp
push
outsb
push
addr16
cmovle
mov
inc
jnp
jge
mov
jmp
pop
inc
add
mov
add
ljmp
jns
lcall
adc
add
sti
sbb
ss
xor
sbb
push
int
push
cmpsl
mov
push
jle
ret
ret
xchg
mov
inc
out
sbb
pushf
mov
sub
or
sbb
cmpb
pop
loopne
cld
and
stos
mov
mov
in
mov
pop
inc
call
inc
shrl
jp
hlt
push
pop
xchg
loop
push
mov
lods
sub
daa
fimull
das
cmpsb
pop
cwtl
cmpsb
movsl
sub
sub
cmp
or
dec
lods
fildl
out
pusha
push
fbld
in
mov
push
mov
rol
jmp
loope
shrb
in
imul
stos
jp
ljmp
movsb
dec
loop
pop
sahf
jp
sbb
repz
inc
push
mov
adc
adc
addr16
and
sub
cltd
jno
fstpt
repnz
mov
adc
outsb
or
iret
decl
pop
lret
and
dec
jne
out
roll
ror
pop
stc
mov
cmpsb
jno
out
xor
aas
je
mov
mov
insl
enter
and
cmp
icebp
sbb
imul
mov
dec
jbe
je
mov
lahf
pop
xchg
mov
dec
xchg
lret
movsl
cmp
xchg
scas
jl
test
idiv
dec
fs
push
out
xor
mov
or
inc
ljmp
adc
dec
ret
xchg
pop
aad
enter
fbstp
ret
mov
insb
xor
lods
js
out
scas
in
aas
jo
loopne
jbe
jbe
and
dec
scas
pop
loop
shr
rcl
daa
mov
inc
add
cmpsb
subl
xchg
lret
fists
cld
jg
sub
lret
adc
insl
jb
and
jp
xchg
leave
inc
repnz
xchg
mov
add
nop
jmp
popa
sahf
fidivs
cmpsl
adc
push
js
sahf
push
jns
lahf
push
sub
icebp
shl
jbe
movsl
add
jnp
sti
dec
dec
std
lods
sub
jmp
sub
pop
push
daa
inc
adc
fsubs
push
int3
pop
je
sbb
mov
cwtl
cmp
icebp
repz
xor
mov
lcall
mov
jge
into
xchg
mov
aad
imul
lods
push
in
jmp
sbbb
loopne
iret
test
xor
stos
xor
js
mov
xlat
push
popf
pop
dec
in
pop
int3
pop
aam
cwtl
xor
aad
cmp
lret
dec
or
sub
iret
adc
in
clc
out
pop
and
es
insl
and
dec
xchg
fsts
ja
mov
clc
jo
push
les
mov
push
and
fwait
adcl
in
rcrb
movsl
int
xlat
inc
pop
add
jle
lahf
sbb
mov
mov
jle
xchg
add
sbb
xchg
adc
lods
xchg
add
sbb
cwtl
mov
pop
and
push
mov
fsub
stos
ja
mov
mov
lods
jp
test
rcr
push
pop
cmc
pusha
sti
aam
sahf
std
inc
jg
out
xchg
cmpl
shlb
lret
push
cmp
into
xor
dec
dec
mov
sbb
idivl
aas
adc
roll
cmpsb
mov
jp
movsl
sar
test
xchg
fwait
cmp
add
cmpl
xchg
adc
insl
jnp
xor
and
sbb
int
xchg
push
lea
sub
repnz
adc
arpl
pop
inc
loopne
ja
xchg
mov
push
outsb
outsl
jno
inc
inc
shl
dec
cld
push
notb
push
push
jbe
add
xchg
dec
shll
data16
ret
add
push
test
mov
sahf
aaa
and
movb
mov
xchg
movsb
cld
pop
popf
xchg
push
pop
divb
push
jo
out
cli
mov
cmp
xchg
mov
jmp
adc
pop
xor
sahf
jp
test
fisttpl
and
popf
mov
outsl
push
xor
xchg
aad
add
lds
lods
xchg
jle
inc
shlb
jge
mov
in
inc
lea
int
pushf
insb
push
sbb
stc
cmp
xchg
ds
lcall
sbb
jns
add
push
jge
jg
bound
or
jmp
inc
imul
lock
xchg
lea
push
arpl
jns
mov
dec
rcrl
iret
xchg
xchg
xchg
roll
iret
mov
cwtl
in
mov
sbb
mov
nop
mov
test
movsb
xor
and
mov
addr16
call
mov
inc
push
pop
sbb
cmc
cmp
mov
shrl
nop
mov
and
jnp
cltd
popf
es
dec
mov
popa
cs
mov
mov
inc
jne
mov
mov
adc
gs
fildll
sbb
pop
sub
in
push
stos
pop
jno
sti
sub
addr16
adc
push
pop
mov
dec
dec
and
shlb
push
mov
dec
int3
stc
test
and
jg
sti
and
inc
mov
ss
test
mov
in
xor
loopne
pop
mov
pop
mov
outsb
lods
dec
mulb
pop
mov
xchg
test
scas
lret
out
jo
lret
adc
loop
aad
and
out
dec
lods
cmc
mov
je
leave
mov
mov
mov
shll
loop
cs
inc
test
adcl
add
xchg
mov
inc
sbb
aam
cwtl
sub
adc
mov
or
outsl
mov
xchg
imul
ja
mov
aad
out
ja
lods
in
dec
jae
add
dec
jbe
cmpb
push
in
imul
fs
sbb
aas
and
out
gs
or
les
loope
inc
or
dec
lahf
mov
shl
stc
ffreep
data16
int3
cmp
ffree
cmp
inc
pop
aam
call
dec
shll
xor
mov
xor
leave
repz
aam
jp
adc
push
xor
add
mov
push
shlb
ja
inc
cld
xchg
in
jbe
notl
fs
dec
imul
mov
xor
add
mov
ss
pushf
adc
jae
jbe
lret
mov
xchg
add
xchg
or
loope
add
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
es
arpl
out
addl
push
mov
xor
addb
xchg
in
arpl
imul
adc
mov
mov
in
cmp
sbb
adc
mull
ret
or
jns
mov
stc
dec
aaa
sub
push
jge
mov
pop
mov
out
popa
loopne
into
sar
pop
xchg
mov
pop
repz
popa
jl
out
xchg
or
cmp
scas
or
dec
popa
int
fwait
mov
scas
pop
xchg
push
dec
call
push
push
shl
insl
xor
test
ja
fstpt
sub
jle
fcoml
out
imul
out
jae
daa
std
xor
sbb
adc
arpl
in
out
aad
cmp
push
or
je
xor
push
test
cwtl
add
adc
mov
add
inc
adc
jmp
fsub
mov
mov
pushf
into
adc
jg
mov
inc
or
bound
cwtl
pop
cmp
pop
jge
mov
enter
ret
sub
imulb
mov
mov
les
dec
xlat
lcall
mov
xchg
clc
lods
js
or
xor
js
jle
test
data16
push
sti
or
shlb
in
cmp
stc
popf
cld
sbb
cmp
or
stc
add
out
xchg
out
add
sbb
sub
push
mov
mov
lret
shll
and
dec
pop
jae
dec
cmp
sahf
movsb
push
xchg
add
mov
in
pusha
jmp
mov
adc
inc
xchg
mov
in
cmp
cltd
xchg
mov
clc
cmp
add
and
xchg
or
mov
inc
or
movswl
int3
sub
loopne
scas
mov
jg
fiadds
test
mov
cmp
jbe
push
push
roll
dec
mov
shrl
or
dec
mov
pop
mov
mov
adc
and
cmp
fidivrl
cmc
cmp
and
call
pop
push
and
sub
cmovns
push
rorl
dec
js
aam
mov
mov
ds
xor
fstpl
jnp
pop
or
sub
mov
xor
cmp
arpl
push
mov
iret
dec
dec
inc
xchg
mov
mov
inc
cmp
fs
jge
or
pushw
fstps
xchg
adc
xchg
mov
mov
rcrl
xor
test
sub
jbe
sbb
xorl
dec
push
push
ret
mov
xchg
daa
pop
mov
adc
mov
dec
inc
xchg
cs
or
pushf
jge
and
push
lock
out
int3
dec
push
xor
std
jle
cli
les
push
xchg
jno
int
in
sbb
or
dec
cwtl
xchg
mov
mov
repz
scas
sub
xor
pop
pop
imull
pop
lcall
sbb
std
lret
mov
rcrb
das
negl
adc
add
mov
mov
mov
mov
adc
inc
enter
leave
sahf
xorb
jmp
mov
call
lods
out
add
mov
stos
leave
adc
hlt
sbb
imul
stc
je
inc
sbb
mov
or
dec
nop
adc
pop
nop
aad
test
jno
cmp
lock
repz
mov
mov
shlb
mov
push
and
repz
outsl
mov
enter
push
mov
xchg
bound
call
rolb
lock
pop
cmp
adc
sets
add
add
les
test
pusha
lcall
jle
cmp
mov
jae
test
shlb
mov
fmull
rorl
cmp
int3
pop
cmp
bnd
jg
lcall
gs
mov
lcall
push
add
adcb
loope
scas
insb
stos
decl
xor
fisubrs
ja
jo
pop
fdivrp
in
sti
dec
mov
sub
int3
cltd
push
fadd
ret
test
jmp
pop
fstps
xor
mov
hlt
cmp
mov
adc
xchg
add
loopne
push
pop
jbe
sahf
es
xchg
fwait
cltd
push
jbe
icebp
ret
xchg
das
add
mov
adc
repnz
pop
ss
cli
stc
inc
scas
jge
sbb
cmp
and
lds
cmp
pop
dec
lods
cmpsl
shrl
jg
xor
lcall
or
dec
insb
mov
sub
or
add
inc
jno
cmpsl
lods
ss
sbbb
adc
mov
xchg
cs
rorl
or
mov
outsb
or
jle
inc
int
in
add
jbe
in
movsb
pusha
out
push
cwtl
in
pop
push
imul
adc
aas
in
les
dec
fimuls
mov
leave
jne
xchg
mov
xchg
ja
jg
mov
call
mov
or
cwtl
cmp
stos
add
loope
lods
pushf
jmp
shrl
push
pushf
aam
rcrl
mov
loopne
int
andb
mov
lods
pusha
sarl
mov
and
sbb
fildll
inc
sbb
xor
pop
sub
clc
xor
or
push
push
outsl
adc
pop
mov
fistpll
mov
data16
xchg
jae
sub
outsl
repnz
jns
adc
out
inc
mov
push
pop
out
mov
dec
mov
mov
repnz
add
stc
scas
sti
xchg
cmpsl
scas
test
sub
aas
das
cmp
push
sub
cmp
repz
fs
adc
push
cmpsl
pop
hlt
aaa
into
insl
sub
bound
scas
iret
not
ret
loope
and
cmp
shlb
dec
or
sti
pop
push
and
popf
mov
or
adc
les
jbe
push
mov
mov
fdivl
mov
xchg
int3
mov
inc
cmp
push
cvttps2pi
push
ss
daa
movsl
sbb
and
or
ja
bound
mov
sbb
ss
sub
and
leave
jg
ds
xchg
lahf
clc
push
into
imul
cmovb
push
mov
loopne
sub
out
cwtl
rcll
cmp
push
cmp
pop
and
or
add
ja
inc
fsts
pop
scas
stos
nop
xor
mov
cmp
sub
xor
scas
lret
ret
push
imul
sbb
and
dec
mov
or
pop
cmp
xor
mov
jle
lock
dec
imul
insl
scas
sbb
xchg
adc
repnz
mov
bound
aam
das
inc
mull
das
inc
leave
es
ja
inc
ficomps
shl
xor
repnz
shlb
sbb
insl
fld
jg
pop
dec
push
jb
mov
ret
push
xchg
lds
cltd
movsb
inc
mov
mov
jae
adcl
fs
faddl
into
dec
mov
popa
adc
push
std
push
pop
call
imulb
test
test
lods
into
ljmp
and
cltd
xor
adc
rorb
aam
jns
or
bound
cmp
xlat
call
popa
push
fsubl
std
test
xchg
xor
pop
push
jle
aam
adc
nop
cmp
scas
iret
jae
inc
pop
movb
add
xor
mov
lret
dec
stos
cmpb
mov
gs
enter
insl
shlb
adc
lahf
sub
aaa
clc
cmp
mov
int3
cwtl
cmp
mov
nop
sub
xor
sbb
or
imul
adc
outsl
lods
inc
mov
xor
int3
sub
je
fsubrs
test
fcompl
fsubl
mov
fisubl
lahf
or
aas
mov
data16
xchg
mov
sar
fucom
into
dec
mov
xchg
data16
test
add
jl
mov
shl
or
and
shr
cmp
fwait
decb
ljmp
jmp
jp
pop
adc
push
mov
iret
stc
or
pop
xor
add
imul
and
jnp
mov
jmp
jne
xor
adc
mov
inc
push
in
xchg
subb
rorb
jo
push
pusha
xor
xor
lock
or
mov
xor
jg
or
sbb
adc
push
xor
insl
mov
inc
js
sbb
xor
enter
ljmp
or
into
xchg
call
push
sub
sbb
stc
lods
push
cld
xor
cwtl
test
stc
lea
lret
pop
or
jo
das
push
mov
gs
sahf
jns
push
inc
mov
cmc
es
add
rol
ss
mov
push
or
push
hlt
pop
mov
cmp
js
icebp
aam
in
mov
repz
imulb
fs
mov
push
in
cmp
or
or
mov
aaa
push
aad
adc
push
test
xor
mov
push
mov
aas
xor
filds
stc
pop
or
sahf
xor
andb
arpl
pop
jnp
cmpsl
sub
sti
ret
fcomps
sbb
xchg
pop
or
out
dec
cmp
xchg
dec
aam
mov
outsl
fdivrl
bound
mov
movb
sub
xchg
sbb
aas
pop
xor
stos
lcall
sub
lods
push
add
pop
jle
daa
xor
jne
push
daa
cltd
loop
scas
jmp
adcb
lods
leave
push
adc
sti
mov
cmp
sti
rorl
lods
jecxz
pop
gs
adc
loop
or
sarl
jmp
test
and
add
aas
sbb
arpl
inc
pushf
out
arpl
pop
pop
mov
sarl
push
repz
lods
push
dec
sub
jmp
loope
jo
cmpsb
fs
addl
lods
cmp
sbb
pushl
notl
push
push
repz
jle
fstl
imul
sbb
in
cld
les
sbb
leave
rcrl
or
jp
test
and
push
push
sbb
je
rolb
into
arpl
xor
aaa
in
gs
shlb
jmp
sbb
test
dec
mov
ficoms
mov
xchg
int3
adc
pop
push
data16
insl
adc
sbb
dec
insl
dec
push
jo
push
mov
imul
dec
add
pop
mov
hlt
nop
and
aam
and
leave
jmp
lret
and
push
jae
pushf
push
rcrl
push
imul
xor
in
jl
xchg
fstl
in
add
in
loopne
gs
int3
mov
aaa
stc
ret
cltd
ss
je
pushf
inc
les
out
out
mov
cmp
dec
testl
arpl
mov
cld
push
daa
ljmp
adc
mov
jnp
xchg
clc
fcomip
push
mov
in
dec
sbb
idiv
dec
hlt
or
xchg
rcl
dec
dec
push
outsl
std
jae
dec
mov
mov
adc
jbe
dec
adc
mov
xor
cli
push
push
xor
mov
call
mov
and
add
and
call
sbb
sti
leave
movsb
add
and
push
leave
mov
push
lcall
fiadds
mov
adc
mov
mov
inc
cs
repnz
jo
int3
mov
sahf
xchg
inc
sbb
and
bnd
xor
or
ja
rcrb
adcb
clc
sub
inc
ljmp
bound
in
aas
inc
mov
fiadds
out
xchg
sbb
les
cwtl
sahf
dec
pop
cmp
mull
repz
aas
sub
test
push
push
mov
shlb
xor
cli
in
jle
ficompl
sbb
inc
or
mov
dec
pop
mov
mov
adc
scas
push
sub
sbb
cmp
jmp
sbb
xor
lret
adc
push
sub
xchg
sbb
pop
xor
add
and
jmp
cmc
mov
pusha
mov
mov
bound
mov
xor
xchg
jge
push
notb
xor
sub
scas
test
negb
enter
ret
dec
and
fdivl
dec
or
and
or
repz
inc
outsb
jge
pop
push
in
pop
dec
aad
orps
iret
stc
pop
cli
pushf
data16
aaa
cmp
xor
ds
stc
scas
das
lock
jge
cmp
pop
cwtl
mov
rcrb
pop
push
clc
test
icebp
jmp
jl
dec
idivl
lock
ja
dec
cld
push
mov
cmpsl
and
xor
push
fnstsw
inc
shlb
rorb
cmpsb
mov
xchg
cs
ja
movb
cmp
jecxz
push
inc
xor
mov
mov
pop
jle
dec
mov
out
fiadds
lret
int3
sbb
mov
mov
ja
mov
std
jnp
xor
mov
dec
jne
rcrb
inc
adc
pop
imul
mov
and
outsb
jp
xchg
jle
imull
or
pop
scas
adc
mov
mov
xor
and
and
and
ljmp
lcall
add
aad
ror
lret
sbb
pop
or
cwtl
out
sub
sub
stos
sbb
pop
pop
lcall
push
push
hlt
cmp
jmp
xchg
shll
repz
fs
lds
in
xchg
mov
jge
or
cltd
and
fwait
inc
and
sbb
and
sub
cmp
xchg
push
aad
in
pop
cmp
inc
scas
rorl
fcmove
shlb
inc
in
jne
loop
inc
in
push
stc
ds
pop
jle
movsb
jmp
xor
jmp
sub
adc
shlb
imul
lock
cld
movsb
mov
mov
shrl
jmp
push
enter
pop
pop
push
mov
dec
out
add
mov
sbb
jp
in
js
fwait
inc
sbb
loope
pushf
rcll
fildl
mov
fs
in
sbb
sbb
enter
push
jo
pop
lods
cmc
xor
push
pop
mov
xchg
mov
call
pusha
mov
dec
sub
mov
movsb
pop
cmp
nop
and
push
hlt
mov
sub
sti
cli
cltd
pop
pop
sub
daa
push
xorl
enter
lea
mov
sub
in
mov
xlat
rcrb
adc
jp
lock
outsl
cmc
push
loope
call
sub
push
insb
ljmp
aaa
lods
xchg
sahf
inc
push
mov
pop
inc
imul
es
aam
iret
movsb
div
add
and
sbb
sbb
sbb
ret
imul
clc
pop
cmp
cltd
cs
mov
loop
subb
jo
jmp
mov
mov
xor
daa
sbb
mov
and
lahf
jecxz
pop
loope
jecxz
or
add
lds
stc
fisttps
loop
push
dec
int
adc
lds
sbb
pop
pop
xchg
sbb
or
mov
dec
cld
push
into
shl
or
insl
jbe
rorl
mov
cmp
loopne
xchg
popf
test
daa
xchg
adc
ss
ljmp
incl
pop
lret
insl
cwtl
shl
and
dec
and
mov
orb
shr
jl
xchg
dec
or
jp
jbe
adcb
enter
ds
push
push
aad
and
sbb
inc
fs
or
pop
mov
and
fwait
pop
pushf
cwtl
jnp
sar
js
pop
in
stos
out
je
mov
jns
adc
daa
scas
inc
popa
pop
out
in
sbbb
push
mov
jmp
lcall
aas
jnp
imul
imul
test
adc
cmp
push
inc
push
aas
jp
jl
in
jns
jnp
in
cwtl
into
cmp
jg
push
lds
adc
adc
out
aam
push
cmpsl
jecxz
testl
out
inc
and
mov
bound
js
inc
insb
or
adc
loopne
adc
add
inc
dec
pusha
addb
lea
xchg
pushf
pop
je
insb
sub
jnp
pop
add
hlt
movsb
shlb
dec
mov
in
and
add
mov
test
pop
mov
les
subb
pop
bound
shr
mov
add
xlat
and
xchg
fsubrs
pop
sub
ja
loop
mov
aam
pop
adc
pop
push
mov
sti
or
cmp
ss
mov
andb
inc
push
dec
xor
cmp
xor
ret
dec
xchg
repz
test
icebp
out
push
enter
lds
add
inc
pmaxsw
and
fnstenv
cmp
popf
add
shlb
or
inc
push
push
fnstsw
mov
pop
push
mov
and
jmp
pop
repz
in
fcomi
jge
xchg
xor
xchg
pusha
test
pop
or
adc
or
mov
ljmp
bound
cltd
popa
enter
dec
dec
cli
or
xchg
cmp
out
ja
push
add
movsl
dec
adc
push
mov
fsubs
fdivrs
push
dec
fstps
aas
or
sti
fidivrl
sub
adc
or
mov
dec
push
mov
insb
xor
pop
icebp
outsb
in
mov
js
insl
push
call
lock
sbb
adc
push
test
sub
xchg
out
nop
jl
mov
pusha
or
into
pop
and
pop
and
ss
fwait
adc
mov
std
popl
imul
jecxz
cli
das
add
int3
xchg
into
adcb
stos
inc
cmpsb
mov
mov
pop
leave
js
mov
inc
rclb
stos
pop
lret
add
std
inc
pop
push
add
fisttpll
or
insl
popa
and
es
push
sbb
or
adc
loope
push
test
mov
add
jmp
popa
add
pop
sbb
mov
inc
shlb
fcoms
mov
lds
mov
jb
sbb
sarb
inc
or
hlt
icebp
hlt
mov
enter
clc
jne
arpl
stos
jbe
push
in
mov
sub
xor
std
xchg
dec
jg
fisttpl
sbbl
iret
out
sbb
cltd
add
mov
fs
or
xchg
and
jmp
lock
ret
popf
add
inc
xchg
int
mov
movsl
sub
inc
scas
push
xorl
fs
add
or
int3
cli
xorl
setl
scas
js
lcall
inc
lcall
cs
pop
lods
fsubl
dec
mov
cld
cltd
into
inc
faddl
push
add
sbb
out
dec
ss
fbstp
inc
mov
jp
sbb
jmp
jl
and
leave
mov
rolb
push
add
mov
push
dec
xor
adc
mov
sbb
jae
xchg
sar
mov
dec
outsl
inc
inc
cld
mov
mov
mov
data16
cld
repnz
imul
xorb
adc
jbe
jecxz
dec
jns
pop
add
or
inc
lcall
lock
pop
push
pmaxsw
pop
sahf
fwait
sub
gs
les
cmovns
and
xchg
add
int3
push
and
movsb
imul
leave
fdivrs
arpl
lock
and
icebp
lock
and
inc
stos
mov
pusha
outsl
sbb
jo
dec
and
push
cltd
aas
pusha
test
insb
lods
fucom
rclb
push
shlb
sahf
xor
adc
mov
push
or
jnp
or
rolb
push
cmp
out
mov
aaa
imul
dec
push
xchg
orb
movsl
add
push
stos
out
mov
adc
lret
mov
add
lock
pop
inc
adc
pop
pop
pop
xor
xchg
aaa
popa
pop
out
fdivl
test
xor
lahf
add
jg
xchg
and
add
inc
fucom
sub
mov
mov
lret
and
or
test
sti
jns
adc
sbb
xchg
add
jmp
mov
mov
mov
add
mov
add
adc
jns
std
inc
imul
xlat
daa
add
addr16
xchg
shr
mov
aad
lret
nop
nop
add
int
mov
loopne
dec
popa
jo
xchg
mov
leave
mov
and
cmc
add
sub
rcll
jnp
jno
mov
cmp
ds
ljmp
push
mov
mov
loop
pop
or
mov
fisttps
cmpsl
xchg
push
rorl
mov
mov
out
cmp
push
adc
xchg
test
in
jae
add
lods
mov
cli
add
inc
cmc
ret
or
gs
test
sti
sub
sub
psubusb
jns,pn
add
in
add
mov
fstpt
dec
sub
lret
fidivs
inc
sbb
jae
fwait
icebp
xor
in
inc
lods
repz
push
les
arpl
xor
push
sqrtps
dec
adc
stos
aad
add
jle
mov
or
inc
mov
shlb
mov
sub
xchg
push
mov
insl
cwtl
add
aaa
or
rcr
xchg
mov
cmc
iret
rcl
outsl
or
sbb
mov
sbb
stos
dec
mov
or
scas
xlat
pop
rcl
mov
fisttps
pusha
dec
addb
cld
push
cwtl
mov
cmp
mov
and
cmp
and
movsl
jl
insb
push
data16
jle
es
mov
and
sub
pushl
xlat
mov
push
rclb
repz
sbb
mov
stos
or
xor
rcrb
push
rorl
dec
pslld
fcoms
xchg
adcl
cmp
cmp
mov
ljmp
sbb
ds
push
push
inc
aaa
stc
call
rcrb
sbb
jnp
sbbb
jecxz
jb
cli
fistpl
xor
jecxz
push
fadd
and
mov
into
cmp
xchg
dec
jbe
sbb
add
mov
mov
in
in
movsl
lock
mov
gs
pop
out
nop
sbb
or
in
dec
cwtl
cmc
in
sarl
repnz
sbb
shl
movl
sbb
adc
cld
xchg
mov
out
sub
loopne
sub
xchg
in
in
push
int3
sbb
ja
pop
adc
jge
sub
lods
jecxz
sti
addr16
or
cmp
aaa
pop
orl
sub
mov
and
arpl
repnz
iret
inc
jae
dec
testb
add
js
outsb
jl
test
sarl
mov
iret
and
push
movsl
pop
inc
push
out
jnp
adc
push
leave
mov
cmp
lcall
iret
out
int
and
mov
cltd
or
jg
cmp
inc
mov
xchg
dec
mov
add
or
push
lret
std
in
loopne
dec
pop
pop
in
push
xchg
rcl
cmp
adc
dec
mov
push
repnz
scas
lea
dec
les
push
add
inc
int
stc
adc
fisubl
hlt
and
into
mov
jl
dec
int3
jge
loopne
or
cld
xlat
lock
cmpsb
sub
mov
cmc
daa
xchg
rcl
out
dec
int
std
sub
data16
scas
sti
and
sysret
xor
test
stos
js
xchg
pop
adc
das
lods
dec
or
jb
mov
rorl
add
outsl
xlat
adcl
jp
frstor
out
jp
inc
jmp
nop
pop
push
xlat
std
fiadds
or
outsb
pop
mov
imul
cmp
mov
xchg
xorl
inc
ljmp
jg
mov
mov
into
lret
mov
or
or
mov
xor
sub
or
cmp
fwait
xor
and
and
fadds
arpl
in
sub
pop
push
scas
xlat
lahf
lds
testb
or
sbb
das
jne
out
mov
daa
push
mov
mov
gs
push
adc
ds
repnz
rcr
rcrl
arpl
push
push
out
fbstp
or
fldt
call
into
call
frstpm(287
cmp
mov
pop
pop
mov
inc
aad
cmp
add
push
add
jp
out
inc
faddl
xchg
in
mov
fnstenv
test
or
xchg
repz
sahf
add
addl
fldcw
push
addr16
add
mov
cmpsb
mov
mov
loope
in
push
or
in
addr16
icebp
mov
sub
jae
xlat
jge
gs
loop
cmp
push
and
out
test
lods
push
fisttpll
mov
lea
dec
sbb
sub
mov
dec
subps
mov
rcr
mov
cld
lds
shll
es
push
enter
imul
xor
inc
mov
lret
loope
and
je
dec
leave
jp
and
cmp
xor
jbe
rorl
ds
mov
out
mov
das
add
cmp
aad
cmp
sbbl
inc
and
clc
adc
mov
mov
daa
jae
mov
sub
js
jl
mov
pop
jp
call
cmc
sub
js
loopne
xchg
xchg
adc
insl
ss
sbb
mov
aaa
orb
mov
push
inc
mov
ficompl
inc
ret
pop
jno
or
xor
into
xor
inc
mov
popl
jae
cmpsb
lret
push
fcoml
popa
mov
cmp
js
adc
inc
stc
pushf
adc
sub
loop
sbb
cmp
push
lcall
vpand
pop
ljmp
imull
add
xorb
cmpsb
lea
sub
leave
xlat
fisttps
xor
mov
xchg
shlb
lea
andb
les
and
add
adc
mov
and
mull
std
insl
scas
fs
test
adc
cmp
sbb
push
pop
ss
xchg
hlt
add
dec
inc
jns
jmp
add
idivb
sahf
inc
mov
dec
jle
xchg
sahf
stos
in
ret
aad
adc
lret
sbb
dec
popa
dec
inc
xchg
icebp
or
es
int3
int3
push
adc
nopl
push
push
aam
icebp
cmc
jg
push
pop
xchg
sbb
imul
insl
mov
mov
pop
aas
pop
fs
cmp
mov
jae
call
test
mov
ljmp
or
and
shlb
dec
xchg
icebp
pop
cmp
hlt
imull
aaa
xor
neg
in
clc
inc
stos
clc
ret
jmp
mov
mov
mov
neg
push
cltd
fidivrl
mov
jecxz
add
fsubrs
aam
xor
cmp
jle
call
int3
dec
test
jne
sbb
cwtl
stc
call
sbb
imul
dec
fstps
and
cli
leavew
test
repnz
adc
pop
addr16
push
push
pushf
std
and
inc
fiadds
jne
adc
cld
lret
cmp
pop
in
mov
sti
repnz
stc
les
cmpsb
iret
pop
xchg
sbb
in
out
add
inc
xor
ss
outsb
add
call
sub
add
mov
hlt
or
cmp
ret
sarb
xchg
and
lods
pop
and
dec
xchg
push
movsb
int
mov
jg
pop
cwtl
call
and
clc
mov
icebp
lods
and
loopne
sub
stos
cmp
fcmovnu
xchg
jno
sahf
inc
lea
lock
sahf
rcrl
pop
fidivl
sub
and
cmp
sbb
mov
mov
add
cmpsl
cli
xchg
ja
dec
mov
sbbb
arpl
das
xchg
xchg
addr16
pop
mov
mov
les
push
pop
cmp
mov
mov
jb
fcomps
mov
sub
xor
push
push
sbb
jg
jo
jge
jp
mov
ja
mov
aaa
adc
pop
jp
rorb
adcb
pushf
or
rorb
je
adc
ds
testl
test
mov
dec
push
ret
rclb
repz
das
repz
lret
jnp
and
sub
dec
xor
outsl
fists
mov
xchg
shl
lret
fimuls
leave
mov
cmp
insb
mov
setge
jmp
popf
imul
bound
jmp
or
stos
sbb
dec
les
daa
cmp
push
lods
test
mov
movsb
stos
jae
notl
xor
xchg
adc
add
xlat
sti
rol
iret
pop
inc
dec
sbb
decb
cmp
leave
push
nop
inc
sub
sbb
sub
pmaxub
imul
leave
insb
mov
inc
notl
pop
imul
negb
add
outsb
bound
daa
fxch
add
add
cmp
mov
cli
adcl
pop
jnp
negb
aad
and
mov
jp
mov
scas
clc
xchg
xor
jae
mov
add
repz
cld
jl
pop
jmp
xor
lcall
mov
sub
or
loopw
cmp
xchg
pop
xchg
lea
addr16
inc
jne
in
aas
mov
andl
in
cld
lret
frstor
ljmp
imul
push
adcl
mov
mov
addl
int3
jmp
mov
ljmp
mov
nop
cli
mov
xor
dec
mov
fisubrl
adc
push
mov
pop
pop
test
ds
test
dec
mov
push
xchg
xchg
pop
sbb
xchg
sub
mov
xchg
xchg
js
fcoml
push
mov
lahf
test
add
pop
jae
test
push
add
pcmpgtw
inc
mov
lahf
sbb
adcl
xor
js
imul
ja
dec
mov
int
sbb
sbb
test
adc
inc
pop
pop
int
repnz
movsl
add
fwait
mov
cli
push
mov
cli
cli
fisubs
mov
testl
adc
inc
pop
adc
mov
inc
cld
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
xchg
sub
icebp
pusha
addl
sbb
roll
dec
or
or
out
push
sub
push
cli
ss
xor
ret
fs
test
daa
ss
mulb
jns
sub
les
mov
sti
stos
cmp
xor
outsb
fstps
inc
and
lds
je
sub
test
je
rorb
inc
push
lods
push
testb
xchg
push
js
testl
mov
flds
push
pop
mov
cmp
repnz
shl
xchg
mov
loope
into
shll
xorl
popf
xor
les
xchg
adc
lahf
outsb
nop
mov
push
lcall
cs
pop
daa
mov
sbb
int3
ds
adc
dec
jl
call
cmp
cli
mov
das
adc
mov
inc
or
and
mulb
repnz
ljmp
xchg
stos
add
div
jmp
sub
pop
ds
das
mov
pop
faddp
inc
mov
jne
xchg
fstpt
movsb
add
jo
popf
loop
inc
add
rcrb
xchg
push
inc
or
test
sbb
mov
jmp
lcall
lods
add
scas
push
dec
sahf
adc
stos
js
loop
sbb
jae
or
aaa
or
push
fldt
sub
cld
lea
mov
stos
mov
faddl
jg
pop
jne
rorl
pop
jg
mov
or
xchg
ja
sub
lods
dec
mov
dec
js
sub
push
shl
out
ret
divb
pop
pop
scas
es
dec
addb
ss
dec
pushf
jo
push
mov
pop
mov
sub
divb
lret
add
into
lea
adc
ss
xchg
shrl
scas
cld
and
into
xor
mov
int3
add
into
popf
pop
adc
mov
mov
push
inc
cmp
in
xchg
xor
mov
jge
outsb
xor
adc
mov
bound
mov
xchg
push
or
imul
inc
sbb
imul
adc
pop
add
nop
xchg
push
test
aas
mov
in
lds
push
cmp
aas
outsb
add
adc
sti
insl
dec
mov
ror
test
push
push
das
bound
jmp
cmp
xorl
adc
fstps
add
cmp
das
aam
repz
pop
in
inc
insl
cmp
sarb
mov
pop
mov
sub
add
lds
mov
sti
inc
cmp
pop
mov
insb
inc
jb
or
push
pop
inc
mov
cld
arpl
xchg
cmp
jno
int3
or
iret
inc
mov
jno
ljmp
lods
adc
adc
or
andl
push
je
icebp
cmp
pop
popa
icebp
push
cmp
xchg
cmp
stos
ss
shlb
mov
cltd
rcrb
aas
mov
aam
cmp
scas
ret
lret
push
cmpsb
fmuls
lahf
jns
pop
out
aam
lods
clc
pop
sbbb
lods
imul
mov
sub
cmp
mov
adc
and
stc
aas
orl
fisttps
ss
push
lcall
mov
xchg
mov
daa
inc
lock
inc
stos
pop
aam
xlat
sti
xchg
out
inc
xchg
mov
fbld
add
mov
outsb
shl
push
push
shl
mov
xor
cmpb
fwait
jg
outsl
jl
mov
inc
adc
cmpsl
and
and
icebp
mov
enter
pop
adc
movsb
out
sub
sub
pop
push
test
cs
or
push
mov
adc
lahf
rolb
add
outsb
pop
cmp
adc
loop
or
push
aas
sbb
xor
add
lahf
iret
cmp
iret
jle
cld
cltd
into
arpl
xor
or
je
ret
cmp
add
xchg
add
mov
sbb
bound
and
jbe
mov
mov
cmpsl
mov
jbe
pop
pop
xor
test
jns
enter
lahf
jge
adc
xor
lds
xchg
inc
stc
enter
mov
mov
call
mov
mov
faddl
xor
xor
jp
lods
pushf
cwtl
icebp
stc
int
rclb
ret
outsb
fistpll
add
xchg
inc
rorb
sub
pusha
or
mov
sbb
sbb
sbb
push
aam
stos
pop
jle
push
icebp
mov
aas
cmp
mov
inc
jp
adc
rcpps
jae
je
orl
pop
in
daa
test
jnp
lock
stc
scas
popf
pushf
xor
test
push
ss
aaa
jl
aas
stos
out
and
test
movsl
xchg
icebp
xor
or
movsb
lcall
int3
push
sub
pop
jne
stos
jle
dec
xchg
push
cltd
leave
shrl
adc
mov
lahf
cs
mov
leave
je
std
int3
aam
aam
xor
mov
jne
jb
cmpsb
imul
add
push
call
aas
outsb
pushf
xlat
jb
bound
xchg
inc
test
cmp
jnp
lret
jle
push
rol
xor
mov
rolb
mov
rcl
jl
adc
fildl
cmp
and
ficompl
xchg
cmova
fs
aad
push
lahf
and
cmpsl
repnz
sbb
mov
push
cmc
ficompl
cmp
inc
pop
loop
orb
sub
push
push
sub
into
xchg
aam
lds
fidivl
sbb
mov
inc
sbb
shrl
in
cwtl
pop
inc
mov
mov
push
pop
rcll
hlt
pop
mov
sbb
loope
call
and
adc
xchg
scas
xchg
sahf
push
gs
mov
push
inc
aad
sbb
std
pop
out
xor
popa
pop
add
in
std
dec
sub
xchg
outsb
into
gs
in
sbb
mov
mov
out
push
daa
test
push
cmp
fmull
cmc
jmp
jno
add
lea
and
shrl
lods
inc
test
iret
stos
mov
addr16
add
pop
or
xchg
lds
add
mov
mov
mov
push
pop
mov
sub
stos
stos
or
icebp
cs
lahf
in
push
add
mov
jmp
adc
push
add
in
fs
call
jb
paddb
nop
mov
es
scas
orl
xor
mov
xor
ret
testb
clc
sub
xchg
aaa
inc
data16
mov
imul
dec
xchg
mov
not
out
mov
sub
xchg
mov
or
xchg
es
jbe
and
shlb
roll
inc
js
push
out
cmpl
fsubs
dec
pop
das
jg
out
sbb
cmp
scas
xor
sbb
or
or
xchg
dec
xchg
mov
and
fnstsw
pop
and
jo
subl
xor
fcmovbe
loope
mov
cmp
jae
int
xchg
inc
mov
leave
sbb
mov
mov
jae
es
scas
ret
mov
push
xor
stos
push
pop
stos
fnstsw
xor
pop
mov
cli
sbb
rcrl
xchg
sar
out
and
mov
mov
mov
movsb
loop
hlt
xchg
mov
pop
lret
call
xor
push
fisubs
sbb
das
clc
sub
pop
into
add
out
ljmp
shrl
add
js
cmpsl
or
lcall
popa
cmp
xchg
out
add
push
stc
fcom
in
jae
notl
lcall
stc
out
insl
jecxz
push
push
lcall
push
in
sbb
daa
test
inc
jg
or
cmpsb
out
sbb
or
rolb
add
imul
loope
mov
lods
lea
fcomi
lods
pop
xor
push
cwtl
in
mov
inc
add
xorl
test
push
roll
hlt
cmp
in
sahf
push
jp
cli
loopne
inc
insl
and
jmp
mov
and
mov
out
loop
pop
test
aam
jnp
lret
adc
lods
outsl
cmove
pop
cmc
fidivrl
xor
hlt
mov
inc
push
enter
scas
lods
popa
sub
sbb
hlt
mov
dec
sub
and
xor
cmpsb
aaa
pop
mov
out
jns
jecxz
pop
imul
cmp
and
movsb
xor
call
pop
push
cli
aam
std
xorl
jmp
sub
inc
imul
cmpsl
lcall
test
popa
mov
mov
cmp
mov
mov
imul
mulb
add
cmp
sbb
xlat
sbb
fs
add
inc
lahf
cli
sbb
test
rcrb
inc
and
inc
jae
ror
cmp
sbb
inc
int
pushf
dec
and
stos
mov
pop
iret
pop
fisubl
dec
rclb
imul
jmp
xor
or
jno
xor
mov
jo
inc
jp
nop
bound
mov
nop
pop
mov
xchg
inc
adc
movsl
push
jne
fs
sbb
in
arpl
lds
push
sbb
mov
ja
pushf
xchg
aam
test
aas
adc
sbb
adc
push
mov
dec
xlat
push
clc
push
inc
add
mov
cmp
xchg
dec
pop
icebp
cld
stc
fstpt
sbb
and
jge
inc
sbb
gs
inc
mov
clc
fs
mov
popf
iret
iret
push
mov
add
xchg
insl
pusha
shrl
adc
inc
pop
xlat
and
into
push
push
dec
pop
sbb
jae
and
add
mov
cld
lea
aas
cs
xlat
mov
xlat
adc
aas
push
and
and
pop
pop
out
sti
inc
xchg
leave
push
mov
xchg
lock
mov
insb
sahf
sbb
inc
add
adc
leave
pushf
jecxz
ja
dec
movsl
pusha
sahf
stos
jmp
dec
jp
loope
nop
call
das
jno
pop
mov
lods
roll
jmp
jnp
ror
ds
inc
loopne
mov
icebp
cmpsl
sub
adc
in
pop
out
aad
dec
xor
call
outsl
ja
cmp
das
inc
mov
push
clc
imul
les
cld
repz
les
mov
mov
jmp
addb
mov
rcrl
lds
xor
data16
aas
repnz
and
adc
xchg
dec
js
dec
mov
popa
rcrl
adc
pushf
hlt
out
vmread
add
sahf
adc
lods
pop
popa
lea
cmpsl
outsb
sub
pop
sub
adc
xor
inc
pusha
data16
lods
scas
loopne
nop
daa
daa
push
inc
mov
mov
or
cmpsb
fistpl
scas
cmp
sub
pop
test
sbb
inc
stos
inc
inc
cmp
cmp
jge
in
add
imul
xchg
cs
mov
cmpl
inc
lret
xchg
mulb
cmp
in
adc
fdivrs
xchg
rcrb
andl
lods
cmp
jns
outsb
enter
ret
mov
shl
inc
hlt
pop
adc
adc
js
cld
imul
push
xor
out
inc
in
fdivl
outsl
jns
in
sub
mov
scas
in
inc
or
sub
nop
aas
push
jne
xor
cmp
aas
mov
lcall
cmp
xchg
aam
sti
negb
pop
shlb
add
test
push
mov
push
jp
orl
jmp
out
or
stos
in
inc
loope
testb
outsb
push
jno
lods
enter
xor
les
or
leave
mov
ljmp
mov
or
inc
add
mov
inc
imul
mov
mov
sbb
xor
adc
adc
dec
clc
loopne
dec
ja
daa
inc
pop
jmp
xchg
or
mov
adc
xor
stos
push
in
orb
out
popa
call
daa
add
inc
testb
outsb
sbb
shll
adc
enter
adc
dec
sub
out
push
or
lret
cmpsb
and
out
sbb
cmp
int3
stos
bound
jo
mov
icebp
pop
divl
pop
xchg
fdiv
mov
xchg
pop
mov
cmp
pop
jno
xor
shr
ljmp
pop
repnz
mov
or
jbe
push
jecxz
mov
jl
std
cs
outsl
iret
sbb
inc
adc
les
js
adc
add
loopne
jle
loop
pop
sub
sbb
sbbl
test
inc
sub
adc
push
enter
mov
aas
xlat
ror
mov
incl
mov
cmp
hlt
scas
and
xor
out
push
push
movsb
sbb
shrl
fsubrl
or
repnz
cmp
pushf
pop
lds
xor
dec
inc
pop
cmp
jmp
push
xlat
cmc
dec
imul
mov
adc
xlat
mov
mov
cmp
outsl
add
pop
cmc
jle
pop
lods
ret
mov
cmp
loope
jae
fnsave
sbb
leave
mov
imul
inc
push
mov
cmpsb
or
fwait
inc
out
aam
cmp
mov
cmp
mov
ss
mov
adc
movsb
repnz
cmp
jp
outsb
dec
clc
xor
and
outsl
lods
or
aad
sub
xchg
xchg
push
jae
jbe
sbb
push
mov
push
es
push
dec
shr
scas
in
stc
popf
jo
jbe
inc
add
add
dec
fs
cmp
pusha
add
xchg
jne
hlt
loopne
sub
rorl
shl
pop
clc
add
pushf
fdivs
add
rclb
sarb
pusha
addr16
lock
sub
sbb
clc
mov
fwait
mov
jae
jge
or
mov
sbb
xor
stos
pop
out
mov
fnsave
roll
xor
mov
and
insb
push
out
push
add
sbb
fs
pusha
sbb
dec
adcl
jnp
jne
push
cmp
ja
jl
cmp
sub
ljmp
xchg
xchg
movsb
aad
in
add
mov
xchg
icebp
imull
and
sub
jl
sbb
aas
and
scas
stc
andb
mov
fisubs
xchg
sbb
or
movsb
pusha
cmpsb
imul
xchg
jge
imulb
cmp
cmp
mov
push
shll
or
rolb
adcb
sub
mov
cmp
aad
inc
mov
push
sub
fiaddl
adc
mov
loope
cmp
js
xchg
pop
cltd
xchg
add
in
push
pop
jb
or
icebp
or
dec
dec
mov
clc
mov
xchg
xchg
push
sbb
xchg
arpl
or
repz
cwtl
loope
or
ds
jne
add
in
shlb
pop
pop
mov
fs
pop
sahf
pop
bound
jmp
mov
push
dec
repz
or
and
int
in
setp
inc
mov
push
popf
aad
inc
mov
and
das
mov
pop
insb
gs
lea
lcall
mov
jmp
pop
fstpt
push
adc
sub
aaa
fwait
push
loope
mov
movsb
mov
fnstsw
sbb
xchg
mov
fwait
sbb
je
leave
into
mov
or
aaa
inc
addr16
movb
int
imull
cmp
lods
lods
pop
sti
test
jl
xchg
jo
hlt
xor
flds
in
rclb
out
pop
add
fidivl
adc
mov
push
sbb
mov
push
adc
mov
retw
ds
lcall
mov
sbbl
inc
out
je
push
cltd
popa
jbe
fisubrl
jecxz
mov
iret
or
outsb
popa
ds
jbe
jmp
jbe
pop
sbb
lods
popf
or
xchg
xchg
mov
ret
inc
movsb
mov
repz
stc
loope
push
pop
add
push
arpl
mov
int
jmp
jp
cmp
pop
sub
pop
in
mov
test
outsl
and
mov
cmc
cmp
cmp
pop
fsubrl
sbb
inc
push
xor
pop
adc
stos
cli
rcl
xchg
mov
or
mov
faddp
stos
jne
inc
scas
dec
aas
mov
test
stos
inc
xor
fistps
pmullw
jb
xor
je
push
nop
scas
adc
es
sub
adc
xor
dec
imul
lcall
aam
cmc
stc
mov
jnp
lea
cs
leave
cli
push
les
bound
push
nop
dec
mov
cmp
jp
mov
fldl
xlat
shll
mov
pop
das
xrelease
cmpsl
iret
inc
nop
sbb
inc
lahf
mov
stos
test
dec
xor
jb
cmp
add
and
mov
fwait
lods
push
dec
jno
and
adc
push
test
pop
lahf
fbstp
loop
xchg
and
push
or
inc
ret
xor
test
xor
std
ja
xor
popa
dec
adc
fnstenv
mov
ficoms
lahf
daa
sub
jo
inc
int
xchg
sub
cmpb
rorb
mov
fmulp
cmpl
mov
jge
fisttps
add
cli
jecxz
mov
jbe
data16
bound
pop
loope
dec
inc
insl
or
jne
enter
rol
les
repnz
xor
xchg
imul
or
add
movsb
inc
xor
pop
rol
into
ffree
or
insl
xlat
je
imul
add
xchg
int
cwtl
xchg
jmp
aad
inc
jae
xor
xchg
dec
in
jnp
lea
mov
rclb
fisttpll
pop
in
or
out
xor
sub
roll
cli
rol
pop
adc
pop
mov
xor
ljmp
ss
rorl
js
cwtl
or
mov
push
push
add
jge
inc
sbb
mov
icebp
push
jg
data16
stos
xor
jnp
shlb
sbb
subb
pop
stos
jp
cmp
add
aam
mov
gs
mov
in
jecxz
xor
into
addl
sbb
sub
pop
add
test
hlt
mov
cltd
inc
jge
cmp
iret
push
test
or
call
in
cmpsl
or
push
mov
nop
cmc
pop
dec
test
push
cmpsb
push
mov
insl
or
in
jp
dec
mov
push
xor
fstpl
ljmp
mov
into
adc
inc
fstp
jp
push
ficomps
lahf
outsl
aam
fldenv
jae
test
xor
xor
int3
mov
and
addr16
xorb
aaa
push
mulb
mov
fstl
popf
or
sti
rclb
pop
dec
inc
push
test
jecxz
add
mov
std
sub
xchg
movsl
sub
bound
mov
cmp
inc
out
and
lods
or
xchg
je
mov
and
pop
ret
lahf
jmp
daa
shlb
sbb
pop
push
jmp
jp
push
xorl
adc
push
and
push
imul
es
mulb
jnp
add
fldenv
cmpsb
in
ret
and
fs
lcall
xor
outsb
arpl
jmp
lods
mov
mov
xchg
and
mov
in
pop
jnp
shlb
sti
sub
fdivrs
std
cwtl
mov
mov
js
int3
mov
mov
add
cmp
mov
xchg
sub
pop
ds
fisttpl
cltd
mov
ja
in
push
cmp
xchg
mov
sub
les
sbb
push
stos
mov
outsl
add
lret
or
dec
jb
int
mov
inc
outsl
sbb
roll
pop
jns
mov
or
inc
aaa
and
fs
decl
adc
sbb
lahf
sbb
aam
imul
and
mov
out
lret
dec
mov
imul
push
add
push
jmp
xchg
sub
les
adc
cli
rcl
outsb
mov
xor
push
mov
hlt
adc
push
or
xor
dec
std
rcll
dec
pop
xchg
cli
jp,pt
mov
adc
xchg
pop
mov
loop
and
out
cli
lds
popa
and
popf
scas
add
test
addr16
add
sub
cmp
lods
mov
mov
inc
arpl
sbbb
aaa
shr
add
mov
lea
inc
jge
loope
fsubrl
xor
jbe
mov
jge
sub
vpaddd
xchg
lcall
test
mov
insb
push
push
lahf
shll
stos
imulb
pop
rorb
cltd
mov
and
sub
xor
int
jl
lret
jmp
fucomp
push
adc
imull
dec
push
jge
xor
mov
push
faddp
ljmp
repnz
xchg
jne
sbb
out
mov
sbb
mov
jmp
fldcw
jg
popa
outsb
js
pusha
jb
xor
out
push
cltd
clc
cli
push
sbb
js
mov
in
das
inc
pushf
sbb
sub
call
nop
xor
sbb
outsl
leave
sub
add
daa
addr16
add
sub
loope
nop
push
sbb
ljmp
and
cltd
ja
loopne
stos
call
xsaves
push
enter
cmp
inc
push
fsubrs
das
jmp
lods
leave
shll
mov
shll
daa
xchg
mov
jnp
std
lahf
xchg
int3
leave
and
mov
shlb
xor
imul
sbb
loope
fidivl
call
jle
or
mov
std
in
in
push
cmp
lahf
adc
icebp
lods
ljmp
movsb
pop
enter
push
insb
ds
xor
test
add
es
inc
outsb
ja
xchg
stc
leave
cwtl
add
cmp
js
sub
rclb
cmc
mov
lcall
mov
dec
xchg
clc
mov
repz
mov
dec
sbb
imul
cli
mov
lea
cmc
into
sub
outsl
ret
fildll
jp
jns
sbbb
jne
ss
xchg
lret
adc
xchg
jg
or
xor
outsl
dec
test
dec
push
push
leave
cmp
sarb
popa
jecxz
icebp
mov
insl
inc
aad
jb
popa
mov
pop
test
enter
enter
xor
out
mov
inc
das
sarl
xor
push
aad
cltd
dec
and
cmpsl
repnz
es
cmp
add
sub
and
jp
dec
sbb
enter
inc
sub
fs
out
inc
fidivrs
aam
push
jno
subb
mov
pop
mov
push
cld
jbe
mov
insb
aaa
js
sahf
cmp
xchg
adc
mov
dec
xor
push
mov
dec
decb
mov
aas
in
and
negb
dec
adc
aad
xor
push
mull
cmpsl
cmp
out
lahf
inc
cli
imul
pusha
jno
pop
pop
mov
xchg
scas
xor
imul
cmp
sbb
fistps
pop
nop
or
bound
fs
sbb
les
mov
push
mov
jne
loope
mov
mov
adc
ret
into
decl
inc
test
cmpsb
mul
movsb
jnp
jb
aam
data16
cmpsb
push
pop
pushf
scas
fadds
iret
cs
rcrb
pop
rcll
xor
popa
scas
cmpsb
mov
inc
out
fbld
jae
sub
jecxz
sub
test
mov
and
lret
xchg
mov
arpl
push
or
mov
repz
cli
and
jns
or
sub
jo
jb
pop
push
cmp
outsb
mov
jnp
mov
push
scas
pusha
mov
adc
out
loope
and
push
movsb
push
sbb
and
cmpsl
or
sti
mov
xchg
or
push
mov
mov
pop
incb
cltd
ljmp
mov
cmp
and
adcb
out
insl
aas
adc
mov
cmp
data16
mov
fdivr
jecxz
fsub
sub
sbb
jo
xchg
shrb
inc
add
rcrl
push
jl
or
cmpsl
in
or
adc
adc
insb
push
nopl
xchg
jl
dec
mov
lds
lds
loop
mov
or
adc
xor
push
xchg
xchg
inc
jge
mov
jnp
mov
test
push
ret
sub
enter
inc
popa
push
shll
out
pop
test
je
sbb
fiaddl
add
stc
out
int
js
pop
sahf
inc
mov
or
sbb
movsb
xor
test
jae
dec
mov
cmp
mov
add
add
fnstenv
and
ret
fsts
outsb
fiadds
inc
jno
push
xchg
dec
lret
aaa
cmp
mov
push
jno
hlt
sub
outsb
xor
dec
mov
call
lcall
sub
movsl
pop
js
into
data16
lods
nop
sbb
ficoml
dec
xchg
fisttps
add
sbb
cmc
lcall
jae
repz
mov
jl
pop
stos
push
jae
mov
int3
dec
mov
jmp
std
incl
sub
jbe
pop
bound
or
shr
cmp
lret
dec
cmp
das
inc
out
aam
mov
mov
cmp
stc
sub
xchg
mov
sub
jbe
mov
je
repnz
mov
adc
mov
push
push
lret
leave
fisubl
mov
gs
adc
test
cli
add
mov
inc
mov
inc
fucomi
sbb
sub
test
testb
xchg
ja
fsubrs
xor
mov
std
cmp
add
fdivrs
cmp
mov
or
sub
cmp
icebp
push
mov
lcall
xlat
rorb
ljmp
repnz
jmp
dec
pop
jne
aad
test
inc
sub
mov
stos
cltd
pop
add
gs
lcall
dec
gs
xor
adc
movb
push
push
xchg
mov
mov
inc
cmovl
and
and
in
insl
mov
mov
or
int
clc
pop
xor
cmpsl
int3
or
and
out
ss
mov
jl
push
xor
popf
fldt
scas
cmc
nop
cli
xor
mov
jo
adc
sti
out
lahf
aam
daa
into
add
push
mov
add
inc
cmp
mov
into
lahf
mov
push
mov
mov
divl
jl
mov
sarb
xchg
mov
imul
mov
test
popa
adc
jb
mov
mov
ljmpw
movsb
shr
repz
shl
movsb
pop
mov
repnz
push
int
mov
mov
fbstp
test
in
cmp
xchg
jns
sub
dec
or
sbb
pop
aam
sbb
rol
movsb
dec
insb
cmpsb
cmp
loop
pushf
imul
jnp
outsb
inc
lcall
mov
xor
mov
pusha
flds
add
jo
es
or
insb
sbb
push
or
push
scas
mov
mov
push
jno
pop
insl
or
int
pop
xor
sbb
subb
mov
movsl
pushf
sub
push
sbb
lahf
arpl
les
insb
mov
out
cmpsl
mov
xorb
mov
sbb
xchg
insb
jecxz
inc
adc
leave
jl
sub
dec
stc
sbb
pop
repz
popa
outsb
dec
jle
cmp
inc
push
inc
xor
xor
xchg
push
into
mov
mov
cmp
icebp
movsl
dec
out
js
std
imul
sbb
adc
popa
xchg
add
push
lahf
sub
xor
or
popa
xor
je
or
mov
push
mov
aaa
mov
aad
lahf
ror
mov
nop
fst
xor
xchg
jmp
cmp
fiaddl
add
lods
out
daa
outsb
stos
add
sbb
cmpsl
test
push
mov
lret
lahf
jb
inc
jmp
and
notb
adc
ljmp
cwtl
gs
sti
mov
mov
lcall
out
inc
push
das
pop
sub
andl
stos
push
test
push
jecxz
mov
xchg
fiadds
mov
mov
push
out
fdivs
adc
jb
mov
sbb
xor
loopne
lea
fstl
js
frstor
mov
ljmp
out
mov
pushf
in
mov
xchg
ja
into
mov
ss
outsb
test
push
xchg
js
fildll
dec
rcr
mov
xchg
jns
adc
out
lea
data16
imul
leave
out
adc
xor
aam
push
xor
jle
sub
jmp
out
cltd
inc
jecxz
jg
add
or
and
sub
mov
or
out
push
or
mov
imul
testb
jl
cwtl
out
pop
sub
sub
push
repnz
mov
mov
jo
and
lcall
mov
dec
cmpl
ja
lods
push
in
test
pop
push
mov
jmp
aad
lcall
inc
stos
pop
jno
repz
jp
lret
incl
leave
adc
sbb
ja
xor
mov
xchg
lock
mov
out
mulb
iret
movsl
and
sbb
xchg
mov
push
pop
fwait
bnd
push
pop
cmp
scas
pop
jnp
push
addr16
call
inc
add
xchg
pop
or
neg
pop
jb
sbb
jno
add
xlat
movsb
cmpsl
cmc
fistps
inc
repnz
jl
or
and
inc
pushf
nop
sub
adc
adc
jmp
lea
inc
jne
pushf
push
enter
sbb
enter
or
aas
stc
mov
test
and
xchg
jnp
adc
out
dec
push
loopne
mov
je
enter
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
mov
addl
push
push
xchg
test
add
loopne
stos
repz
lods
cli
sbb
frstpm(287
mov
mov
jno
mov
sbb
mov
sub
push
stos
push
dec
cmp
jp
int
sti
push
sbb
push
jne
addr16
addr16
scas
stos
xor
push
std
loopne
fwait
int
iret
xor
cmp
pop
fistl
movsl
cmpsb
out
mov
push
and
out
jl
cmp
fbld
mov
xchg
adc
lahf
or
shl
lods
jns
out
dec
in
push
mov
mov
push
sub
adc
adc
cmpsl
loop
and
mov
outsb
popf
xor
add
ja
test
enter
xchg
mov
push
bound
inc
movsb
mov
sti
mov
dec
jg,pn
jno
test
or
jbe
pop
mov
pop
jle
out
pop
xchg
psllw
dec
or
xor
push
push
or
cld
sbbb
lret
inc
out
or
pop
xor
cmpsb
popa
jecxz
cmp
push
cmc
in
and
xchg
ficomps
mov
mov
out
or
in
dec
fs
cmpsb
xlat
inc
das
mov
jp
sti
fidivl
xchg
mov
inc
inc
ljmp
push
std
repnz
or
popa
jbe
stos
cmp
mov
dec
jecxz
ljmp
fwait
lcall
aaa
fists
add
mov
dec
dec
xchg
idiv
inc
ja
pop
dec
fmul
mov
iret
jle
push
repnz
jns,pt
shlb
push
fwait
xchg
jno
pop
lahf
or
mov
iret
les
mov
xchg
les
ja
lcall
sbb
mov
movsb
push
outsb
jno
mov
sti
and
sbb
mov
pop
adc
mov
push
loope
pop
orb
sahf
les
cmp
xchg
movsl
test
rcrl
rolb
imulb
pushfw
ja
js
mov
out
mov
jns
jo
push
and
sahf
sub
out
clc
push
push
or
jbe
cli
rcr
repnz
xchg
fadds
and
mov
sbb
and
mov
cmp
idiv
addr16
into
cmp
aad
aaa
pop
lods
mov
sub
ret
mov
add
mov
imul
lcall
sbb
in
and
push
rcrb
cmp
enter
jno
rol
mov
mov
inc
popf
pushf
push
mov
lods
mov
je
dec
in
lods
sub
scas
stos
add
jge
lahf
outsl
lds
dec
mov
mov
or
adc
cmpsl
push
mov
mov
pop
push
jle
sbb
sbb
repnz
icebp
movntq
dec
mov
jmp
outsl
jmp
sti
in
pop
inc
fsubrl
pop
fcom
mov
dec
xchg
inc
jmp
scas
mov
xchg
outsb
mov
mov
sarb
sub
pop
jnp
jns
cmp
in
xor
xor
dec
aam
hlt
jb
stos
jne
sbb
jae
xchg
and
gs
jmp
jmp
fs
mov
sti
adc
and
cmp
out
ret
push
movsl
fs
data16
jbe
inc
dec
in
sbb
sbb
push
adc
gs
lcall
sbb
cltd
jmp
xchg
and
in
dec
sub
mov
mov
mov
loopne
outsb
test
sub
lret
sub
adc
and
cs
rcr
jmp
sub
and
call
sbb
mov
lret
stos
inc
xor
push
and
pop
mov
test
xor
push
stos
std
xchg
es
daa
sbb
sbb
lds
pop
mov
cmp
fadds
cmpsl
jge,pt
cmp
in
jle
scas
movsl
test
sbb
mov
sbb
mov
nop
mov
push
outsb
stc
divb
mov
shll
sub
popa
call
adc
pop
pop
fldlg2
aaa
sub
and
or
jg
andps
fsub
cli
std
sub
clc
loopne
js
bound
cmp
jo
enter
pop
pop
out
les
jb
push
and
loope
mov
in
xor
mov
lds
pop
push
lret
mov
pop
xchg
inc
inc
movsb
test
xor
xor
in
sbb
and
jecxz
xor
les
repz
mov
aas
sbb
xorl
test
les
dec
pop
xor
stos
jg
inc
xchg
dec
roll
mov
sbb
inc
fstpl
push
adc
mov
aas
jae
jno
mov
lea
jns
jge
cmp
adc
jo
daa
daa
jns
das
jnp
jae
add
rcll
daa
add
pop
in
add
mov
jge
mov
rcrb
mov
mov
out
sbb
push
test
insl
iret
xor
lcall
popf
xor
jg
cmp
xchg
in
cmc
rorb
push
pop
jle
push
inc
outsb
in
mov
adc
lock
repnz
outsb
xor
aaa
loop
std
and
cli
add
inc
jns
adc
cwtl
leave
dec
adc
push
int
cmc
inc
lret
sbb
jp
scas
outsb
ficoms
mov
mov
mov
das
ljmp
inc
repz
xchg
ficompl
test
test
rolb
sarl
and
jge
mov
xor
loop
jmp
push
xchg
push
sbb
xor
mov
aaa
xchg
cmpsb
fsin
stos
and
stc
lds
lock
in
pop
push
movsb
lds
rcll
les
shll
xor
in
mov
call
es
nop
and
stos
lcall
sbb
push
fstl
dec
jle
aam
nop
and
pushf
push
sbbb
push
mov
jl
xor
loop
inc
mov
out
addr16
cld
fld
lds
mov
in
mov
push
or
mov
pop
call
addr16
std
gs
sbb
push
ret
adc
inc
dec
in
sub
cltd
aaa
loopne
test
fists
ja
hlt
sbb
lret
cmp
ss
jnp
cs
mov
push
and
mov
jecxz
ljmp
pushf
lret
lcall
lods
pop
mov
xor
and
out
cmpsl
imull
popf
cmp
cmp
adc
repz
pop
ljmp
in
jecxz
cmp
push
pop
jbe
aam
cmp
dec
popa
cmpsl
sub
xchg
mov
out
mov
stos
icebp
pop
push
sti
mov
nop
mov
xor
test
ljmp
jecxz
lea
push
sbb
dec
sub
and
lahf
cld
xor
movsb
adc
cli
or
je
mov
ss
fsubrs
out
mov
in
lret
ficomps
push
sub
rorl
xor
cmpb
insl
enter
pop
add
filds
adc
cmc
mov
push
into
mov
dec
jmp
aas
daa
sbb
mov
mov
sbb
nop
ret
add
mov
out
sbb
daa
mov
mov
push
out
pop
dec
xchg
push
inc
or
xchg
ret
hlt
testl
xchg
repz
daa
bound
lret
popf
xchg
out
xor
sbb
jecxz
aas
ret
xlat
adc
test
sarb
lods
out
mov
inc
std
sub
test
xor
pop
loope
inc
xchg
add
and
in
xchg
xor
or
xchg
xor
loope
cmp
cmp
jnp
xchg
in
pop
jb
das
inc
xchg
sbb
loope
inc
into
repnz
adc
adc
imul
leave
jmp
jecxz
popf
inc
push
idivb
sahf
mov
imul
loopne
mov
push
flds
adc
es
loopne
lods
adc
mov
adc
and
or
out
mov
push
pop
aam
mov
inc
push
cmpsl
mov
inc
loope
fisubl
and
adc
mov
ljmp
rolb
and
mov
mov
xor
lock
cltd
sbb
sarb
cltd
pop
dec
xchg
and
mov
sahf
cltd
cltd
xor
push
inc
scas
and
inc
push
out
lret
mov
call
frstor
xchg
in
jae
sbb
and
adc
aas
cli
sahf
cld
test
aaa
or
push
mov
addr16
bnd
adc
mov
add
rcrl
or
jl
jno
movsb
das
sub
sbb
ljmp
cmp
fwait
cmp
ret
mov
jp
fwait
lret
daa
cmp
repnz
aas
mov
push
xor
clc
and
scas
aas
aaa
jmp
ja
lods
xchg
addr16
pop
dec
cmp
xlat
icebp
addr16
sbb
clc
popa
mov
xor
xor
lret
push
out
or
lahf
repnz
lcall
mov
sbb
push
cmpsb
std
lods
jmp
stos
pusha
xchg
and
insb
out
inc
push
sarl
dec
in
nop
repz
ljmp
push
addr16
cmp
in
fisubl
addr16
mov
cmp
push
cmp
aaa
mov
fldcw
push
jp
sub
or
hlt
xchg
lods
add
cmp
jmp
push
and
or
push
popa
outsl
fiaddl
pop
dec
daa
mov
sub
ja
stc
pop
pop
in
pop
flds
sbbb
mov
push
mov
negl
dec
pop
xchg
repnz
mov
into
lret
and
lods
pop
xor
inc
mul
je
inc
xorb
dec
aad
pop
lcall
sub
jae
or
loopne
cltd
or
mov
addb
xchg
mov
jns
out
aaa
movsl
push
pop
ficoml
lods
pop
fidivs
jae
push
sub
cmp
inc
cmp
fimull
push
push
daa
pop
js
mov
mov
int3
dec
xchg
xchg
mov
cwtl
cmp
push
jns
pushf
sar
pop
cmp
lock
es
sbb
out
jne
sti
dec
add
or
jno
aad
or
jp
mov
sub
aaa
clc
pop
fdivs
sub
mov
push
std
sbb
sub
pop
xchg
jmp
and
in
mov
push
fstpt
int
or
inc
inc
xor
fistps
cmp
aas
pop
sbb
aad
les
das
xorps
pop
fisttps
cmp
pop
js
popf
cmpsl
jle
push
mov
lahf
in
das
out
mulb
mov
mov
xchg
movsl
jecxz
xchg
mov
data16
fistpll
in
mov
testl
sbb
lret
sbb
filds
filds
add
les
inc
cld
test
mov
jne
inc
loop
jo
sti
pusha
mov
add
adc
icebp
add
lds
add
fisubrs
ror
dec
mov
neg
xor
lods
adc
out
jno
mov
jnp
rolb
stc
cld
dec
hlt
outsl
push
in
loope
lret
mov
push
jmp
pop
xor
loopne
in
cltd
push
add
or
or
add
int3
lcall
xchg
sarl
inc
sub
xchg
and
inc
pushf
sub
pop
push
icebp
sbb
outsl
mov
mov
jb
mov
xchg
rorl
int3
pop
inc
cs
out
add
push
push
in
dec
xor
sbb
jns
imul
fidivl
add
and
fld
jne
sub
mov
movsb
sbb
insl
push
icebp
mov
sub
popf
xor
inc
popa
add
adc
rclb
add
fbstp
movsb
jno
lea
gs
loope
rcll
cmpsb
fildll
mov
jecxz
mov
mov
mov
pop
movsb
test
jl
int
mov
lret
int3
sbb
pop
cmp
jle
push
fsts
and
scas
xor
sub
push
orl
mov
popf
push
sbb
pop
dec
pop
or
sub
rclb
mov
sahf
lcall
add
push
dec
daa
aaa
mov
lret
mov
add
loope
ret
push
mov
pushf
mov
movsl
ret
lods
adc
mov
repz
ss
xchg
mulb
jl
enter
nop
cmp
adc
imul
mov
inc
out
inc
ret
cmp
in
push
je
sub
add
jg
xor
or
pop
pop
and
jecxz
scas
mov
rcll
ja
xor
xlat
lea
dec
mov
leave
cmp
arpl
leave
js
pushf
mov
out
loop
bnd
lods
call
gs
jg
lods
push
popa
jle
sbb
loope
add
push
sbb
ja
add
aaa
outsb
mov
shr
ffree
loopne
xchg
mov
ret
jns
push
sub
lods
shlb
and
push
stos
fbstp
loop
push
mov
popf
outsb
inc
subl
icebp
fidivrs
sbb
push
jbe
or
inc
mov
cld
aad
pop
lret
hlt
ljmp
out
adc
mov
in
test
cmp
sbb
ljmp
sub
cmp
adc
pop
cltd
dec
push
pop
cmp
ficomps
js
mov
push
stc
out
push
ss
fistps
jmp
inc
out
mov
jg
push
mov
mov
js
mov
out
cld
push
jl
xchg
or
dec
or
imulb
imul
push
add
cld
test
rcrl
or
repnz
sbb
sub
insl
and
dec
lret
mov
jbe
xchg
lods
and
in
mov
mov
fbstp
inc
cli
repz
or
fdivrs
inc
xchg
jg
sub
and
and
push
jne
out
cwtl
movsl
mov
clc
jnp
push
out
and
jmp
jge
mov
xor
cmp
sub
pop
movsb
fisttpl
dec
mov
xor
loopne
dec
cld
mov
imul
les
jbe
outsl
popa
jbe
and
mov
test
test
mov
pop
sti
mov
push
cmpsl
mov
cs
inc
add
lret
aad
pop
mov
cmc
jmp
dec
in
and
rclb
lahf
push
dec
aas
mov
add
in
leave
jbe
in
imul
clc
or
xchg
les
movsb
movsb
jbe
clc
mov
dec
xchg
mov
data16
out
add
and
rcl
mov
pop
int
fwait
loop
push
sub
lods
data16
jg
ss
inc
and
jbe
subb
jmp
mov
jmp
je
inc
fcomps
test
insb
xor
scas
mov
and
ljmp
repnz
pop
jns
mov
outsl
adc
jo
addr16
mov
test
xor
xchg
adc
aam
and
inc
pop
adc
push
jo
and
push
int
insl
popa
inc
test
mov
mov
push
mov
mov
cwtl
xor
scas
cmp
xor
xchg
out
and
lock
sub
cmp
lahf
pop
fsubs
push
or
or
xchg
fldt
add
mov
xor
pop
lods
and
shll
rcl
push
scas
ficoms
push
jns
rorl
arpl
test
xor
leave
push
push
pop
xor
push
insb
mov
mov
xchg
adc
adc
xchg
test
push
pop
mov
rcrl
adc
fwait
xchg
xor
xchg
movsl
mulb
jecxz
xor
or
cltd
subl
xchg
or
cmpsb
mov
sub
mov
test
adc
inc
inc
dec
sub
fisubl
pop
sbb
inc
sbb
mov
fstl
sti
add
sub
aaa
fistpll
jbe
inc
setns
ljmp
imul
popf
imul
adc
ljmp
daa
mov
fs
insl
push
sbb
aas
in
lahf
mov
fldenv
inc
outsl
fwait
add
gs
sbb
inc
test
pushf
das
inc
jp
rclb
mov
dec
mov
sbb
test
xchg
js
or
mov
movsl
mov
sub
repnz
xor
pop
mov
test
mov
cmp
aas
inc
in
dec
xchg
rolb
decl
xchg
pop
and
push
dec
push
in
jp
adc
jae
sbb
cmp
icebp
jge
jl
fmuls
jb
mov
bound
and
addr16
cmc
fcoml
push
outsb
sbb
cmp
imul
sbb
sub
int
fmull
xor
mov
arpl
push
dec
scas
mov
add
push
mov
jmp
add
sub
push
test
mov
push
fsubp
adc
aaa
out
sub
out
cli
sti
setl
cltd
push
or
in
adc
hlt
lds
test
cmp
xchg
and
fcompl
int
cmc
adc
sub
in
arpl
dec
imul
shrb
filds
call
divb
push
mov
lods
test
arpl
clc
adc
or
testl
psubsw
push
gs
xor
add
lret
xor
and
mov
int
loop
out
jno
adc
or
iret
loope
sub
lcall
inc
enter
pop
rcll
xchg
xor
rolb
or
mov
mov
pop
inc
dec
shlb
cs
cs
jne
dec
ja
shll
call
pop
push
mov
mov
imul
out
clc
test
pop
push
add
movsl
div
imul
sarb
out
sti
popf
lcall
mov
or
pop
mov
arpl
nop
xchg
inc
cmp
cwtl
jnp
movsl
xor
pop
adc
stos
dec
and
add
cmp
ljmp
mov
mov
push
jge
xor
jecxz
jge
cmc
adc
or
push
add
cmpl
dec
js
mov
mov
adc
add
ja
adc
mov
dec
add
cs
and
daa
or
negb
out
pop
stos
pop
bound
dec
dec
mov
push
push
int
pop
fimuls
pop
dec
sbb
popa
sub
mov
or
lock
movsb
inc
into
xchg
mov
jo
dec
adc
adc
jnp
test
mov
lea
dec
ret
popf
negb
jle
loopne
loope
xor
lods
addb
movsb
pop
movsl
fbld
xorl
test
cmp
xor
dec
out
es
shlb
sbb
cmp
or
push
stos
das
loop
mov
sbb
mull
adc
or
int3
xchg
sbb
iret
jno
cmc
enter
xchg
mov
hlt
popf
lahf
xchg
das
add
xlat
inc
cld
pop
cmp
and
mov
jge
je
popa
test
cmp
stos
xchg
push
dec
sub
or
mov
std
sub
loopne
xchg
pop
mov
imul
arpl
insb
fwait
rol
mov
add
stc
sahf
xchg
push
out
hlt
out
sti
loope
and
mov
fwait
dec
xchg
dec
iret
fwait
jmp
xor
aaa
xor
xchg
test
push
into
sbb
xchg
shlb
mov
inc
scas
xor
insb
xor
test
dec
cwtl
or
and
ljmp
je,pn
sub
arpl
mov
fbstp
addr16
inc
or
int
ret
mov
pop
aam
push
je
cmp
pop
bound
sub
mov
inc
shlb
jne
in
pushf
adc
in
orb
jns
ds
lods
or
mov
mov
jbe
sub
adcl
mov
cmp
inc
push
cmp
fwait
and
jbe
or
mov
mov
jecxz
add
div
loope
mov
imul
and
imul
adc
dec
adc
insb
xor
xchg
bound
dec
cmp
or
mov
data16
jl
cmp
mov
shll
pop
add
dec
test
jns
out
sbb
stc
cwtl
imul
popa
lcall
add
rcr
imul
push
sbb
dec
jge
test
hlt
stos
sbb
cmp
dec
sub
jmp
add
mov
jl
and
insb
and
push
push
adcl
sti
xor
xor
xchg
push
push
cmpsl
rcrb
lret
pop
xchg
and
scas
dec
lret
outsl
push
insl
movl
jbe
idivl
cmp
push
xchg
filds
xor
xchg
ret
scas
mov
cmp
sbb
test
int3
ret
pop
jno
jbe
mov
pop
mov
ds
adc
mov
fidivrs
xor
inc
out
mov
jge
lret
arpl
inc
jecxz
shll
sbb
push
repnz
sub
sbb
nop
ret
hlt
cmc
stc
in
insb
inc
lea
add
jo
jns
xchg
ret
lock
inc
mov
inc
push
icebp
leave
jae
inc
mov
imul
mov
out
scas
cli
cwtl
cli
pop
mov
xlat
sub
push
gs
stos
cmp
inc
popf
jecxz
lock
loope
push
mov
dec
stos
hlt
out
es
nop
ret
in
jmp
push
mov
xchg
push
je
repz
sub
ja
orl
mov
mov
pop
lea
xor
jmp
sub
pop
sub
push
xor
outsl
sbb
insb
pusha
divb
jne
or
nop
repz
or
xor
out
pop
pop
int
xchg
mov
dec
xchg
ja
mov
jno
sub
aaa
in
ja
int
lcall
cmp
or
xchg
mov
xchg
cld
imulb
insb
cmp
jmp
pushf
cmp
rcl
lods
jg
clc
les
push
push
jl
push
xchg
xor
jg
jbe
data16
movsb
dec
mov
or
xlat
inc
lods
call
mov
out
inc
orb
push
outsb
test
aaa
imul
sub
arpl
push
inc
dec
es
sbb
nop
cmp
jecxz
insl
pop
jne
hlt
pop
fwait
leave
aad
cmp
cmpsb
jbe
add
icebp
xchg
sbb
negb
sbb
dec
jmp
inc
aaa
mov
cmp
lcall
adc
push
loope
sbb
in
push
mov
jge
imul
fidivrs
scas
cs
pop
mov
clc
adc
pop
push
data16
out
incb
sub
dec
stos
mov
and
jbe
jne
xor
movsb
out
or
lods
in
repz
mov
jp
leave
rclb
xlat
jno
pushf
push
icebp
sub
cmp
cli
mov
sub
in
aas
scas
mov
mov
jns
adc
jge
in
mov
pop
fimuls
lods
sbbl
push
mov
sbb
stos
adc
rorl
fbstp
out
push
inc
mov
adc
loope
fadd
out
add
loope
fcom
xor
jmp
sbb
mov
adc
filds
fwait
jge
sub
dec
or
cmp
fsubs
ljmp
je
call
cmp
movl
xchg
xchg
or
xor
and
xchg
movsl
leave
ljmp
out
or
mov
ret
jmp
mov
lahf
mov
rorb
sub
fbstp
fadd
push
cmpl
or
mov
jp
roll
and
addr16
pop
fbstp
mov
jne
loopne
push
arpl
mov
and
insl
inc
add
adc
enter
insb
sub
cmp
pop
sti
adc
sbb
inc
push
orl
stos
insl
mov
and
jnp
fimull
cmpsb
lock
dec
sbb
pop
mov
or
mov
adc
pop
add
ja
push
call
push
jno
stos
ja
sub
push
dec
push
mov
or
pop
enter
mov
in
pop
jmp
xchg
push
inc
or
or
shl
sub
fstl
stos
mov
rorb
inc
inc
into
lods
pop
adc
cmp
sbb
xchg
outsl
mov
sub
sbb
cmp
jnp
stos
ds
test
scas
push
daa
mov
mov
pop
xor
icebp
xchg
pop
inc
and
sub
movsb
adc
xchg
jg
mov
jb
psllw
lahf
sub
gs
pop
lret
sub
sub
cmpsl
clc
in
int
clc
iret
mov
and
push
and
mov
outsb
mov
sub
push
das
mov
mov
sti
mov
pop
adc
addr16
out
aas
lock
and
jge
sub
xorl
push
adc
ss
pop
sub
sahf
ret
js
in
movsb
cmpsb
pop
jbe
add
rcrl
pusha
mov
fistps
inc
pusha
sbb
loope
add
mov
jge
push
lret
mov
jg
in
or
in
jmp
adc
icebp
dec
xchg
int3
les
cwtl
aad
loop
push
idivl
int
mov
pop
mov
pop
mov
loop
inc
loop
shl
stos
popa
and
push
subl
ljmp
add
or
aaa
shll
outsb
mulb
clc
aaa
add
mov
outsl
xorb
pop
outsb
add
mov
ds
push
xor
push
mov
sbbl
jecxz
loop
lea
pop
xor
and
je,pn
out
adc
pop
fcomi
mov
fsub
mov
leave
sub
mov
xchg
push
or
dec
mov
or
adc
jl
fadds
mov
xor
nop
imul
inc
pop
test
scas
mov
rcrb
push
insl
sbb
das
jecxz
or
fcoms
subl
cmp
stos
xchg
lods
les
pop
xor
aad
add
movsb
pop
rolb
pop
push
push
cli
push
test
adc
nop
negl
cwtl
testb
or
pop
arpl
add
ret
adc
ljmp
dec
in
movsl
lock
addr16
rol
les
js
sub
test
sub
int
cmp
out
sahf
enter
out
pop
mov
cmp
lock
xchg
xor
pop
mov
or
pop
pop
and
inc
mov
mov
xor
adc
cmc
pop
jl
mov
dec
ret
jae
movsl
popa
or
add
out
cmp
sarb
jecxz
lock
mov
packssdw
sbb
scas
das
push
call
inc
xchg
push
dec
in
movsl
stc
enter
gs
mov
xchg
fnsave
cmpl
fnstsw
cmp
push
repnz
and
jo
hlt
add
jmp
aaa
dec
jp
or
add
mov
inc
mov
or
lret
call
cltd
in
mov
into
add
lods
mov
fisubrs
mov
arpl
mov
cmp
js
jmp
test
jb
push
test
inc
inc
cmpsb
icebp
xchg
lahf
lods
mov
in
dec
subb
xor
xchg
js
jns
gs
lcall
push
out
pop
and
daa
cmp
iret
pop
cmp
ja
outsl
xor
push
pop
cmp
dec
xchg
dec
repz
lods
repz
fistps
cmp
clc
cmp
insb
nop
scas
inc
xor
jp
pop
xchg
lret
mov
adc
testl
dec
gs
ret
mov
repz
movsl
daa
sbb
popf
mov
cmpsb
in
fwait
jl
fcoms
cmpsb
mov
cmpsl
sbb
test
or
xchg
cmp
add
push
or
loope
data16
xchg
pop
jbe
repnz
in
das
push
les
cs
and
add
inc
fwait
dec
in
in
dec
lret
mov
jnp
loop
hlt
sbb
js
pop
add
arpl
fs
icebp
push
in
and
mov
insb
xchg
iret
sysexit
cmp
stos
mov
add
lea
std
popf
push
mov
and
jno
rcll
dec
sbb
mov
sub
lret
adc
orb
les
push
fs
test
mov
lds
push
mov
mov
adc
pop
cmp
das
imul
mov
gs
push
ret
pop
scas
outsl
sbb
xchg
xchg
imul
aam
or
xchg
or
imul
xsha256
cmpsb
xchg
mov
adc
add
jb
jne
in
push
roll
mov
fwait
inc
int3
dec
fsubs
test
jo
out
iret
push
icebp
es
es
sub
int
xor
add
scas
mov
pop
ljmp
push
pop
mov
inc
jecxz
adc
xor
or
insb
push
in
mov
cmp
shlb
and
mulb
xor
fnstsw
nop
lret
jae
xchg
push
shlb
dec
stc
mov
popf
add
movsl
sbb
pop
negb
insl
lock
dec
int
nop
sub
mov
mov
enter
mov
inc
lahf
out
fdivp
inc
cmc
neg
aam
sbb
sbb
out
imul
ja
xor
imul
sub
xchg
sub
mov
xchg
bound
lret
cmpsb
dec
in
int3
lds
mov
sbb
mov
rclb
lcall
push
dec
mov
cmp
mov
push
sub
repnz
nop
dec
dec
sub
ret
sub
ret
repz
fs
sub
out
in
out
into
and
ret
jl
aam
push
lret
data16
jge
call
cmpsb
pop
movsl
mov
in
aam
test
add
cmpsb
or
std
mov
mov
fstpl
das
xor
shll
insl
loope
js
loop
jp
addl
xor
jnp
adc
lock
insb
js
or
adc
negl
in
arpl
int3
jmp
jmp
push
sub
pusha
int
pushf
lods
push
adc
xor
in
aas
inc
jne
call
repnz
orb
mov
xor
jl
xchg
sbb
cmc
xor
adc
repnz
out
in
xchg
std
mov
mov
imul
rcl
mov
pop
lea
cwtl
outsb
es
and
jnp
xor
mov
mov
movsb
insl
pop
jle
mov
ss
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
comiss
mov
repz
mov
cmp
adc
movsl
mov
inc
sbb
pop
inc
fidivrl
daa
mov
adc
mov
cltd
and
std
pop
sbb
fdivrp
popa
testb
pop
push
pop
push
int
lahf
aam
xchg
adc
imul
vcvtsd2ss
push
loop
sbb
mov
insl
rorl
test
rorb
pop
jno
loop
je
es
push
sbb
sub
insl
dec
mov
mov
jbe
scas
sbb
jmp
cmp
xor
rcr
and
data16
andb
in
inc
or
mov
out
movsb
xchg
sbb
ljmp
js
stos
dec
mov
cmp
inc
jl
or
jne
int3
int3
cmpsl
xor
js
mov
jle
imul
imul
scas
and
outsb
test
mov
push
inc
jle
aad
rdmsr
gs
jmp
and
push
and
nop
fidivl
jg
sub
dec
mov
rclb
mov
xorl
or
inc
aas
ret
aad
cmpsl
fwait
mov
adc
into
pop
sbb
aas
or
in
and
aas
into
and
iret
punpcklbw
pop
push
stos
sub
or
movsl
loope
mov
mulb
bound
stos
pop
push
mov
pushf
out
out
cmp
adcb
mov
inc
inc
add
dec
mov
popa
mov
std
mov
test
ss
cltd
jno
cld
lret
mov
sbb
js
sbb
mov
in
xor
out
cs
dec
mov
imul
jecxz
ljmp
aad
bound
sti
jmp
push
push
shll
sti
sbb
stos
iret
repnz
lret
dec
imulb
out
cmc
scas
das
dec
cmc
int3
adc
lods
lods
inc
rclb
sbb
jnp
push
mov
cmp
sbb
jmp
and
sbb
or
pop
add
xor
imul
mov
lods
icebp
dec
sti
insl
loope
lcall
imul
mov
test
jg
mov
lret
cmpsb
outsb
notb
push
xor
test
int3
adc
or
inc
mov
sbb
aas
sub
xchg
mov
lcall
hlt
sub
sbbl
arpl
ror
cmp
xchg
je
ds
shl
pusha
outsb
outsb
daa
ss
fistpl
stos
dec
or
fnstcw
cs
cmp
sbb
mov
pop
in
aas
fbstp
imul
rcrl
inc
or
insl
jo
xchg
mov
xchg
mov
sub
dec
into
pop
add
pop
inc
cltd
dec
pop
stc
mov
inc
mov
or
mov
insb
enter
arpl
push
pop
popf
les
dec
sbb
mov
mov
mov
sti
daa
adc
jne
lret
inc
xor
roll
mov
mov
int
and
fimull
push
les
xlat
push
hlt
jge
int3
fbld
push
scas
dec
add
sub
add
xchg
push
push
ficomps
jp
jmp
sbb
int3
or
gs
fs
lea
popf
add
or
sahf
fwait
out
js
inc
ss
in
add
fildll
out
andl
js
jge
movsl
mov
pop
jb
mov
inc
test
repnz
iret
inc
inc
cltd
popf
dec
mov
addr16
ss
push
dec
inc
stos
jno
sub
cmpsb
out
gs
and
sub
jae
iret
sub
jp
mov
lods
mov
mov
andl
pop
adc
aam
pop
add
leave
sub
cmc
and
out
repz
sbb
mov
into
js
bound
jnp
xchg
and
mov
pushf
int
jg
int3
cmp
add
or
testb
in
fsts
into
jle
cwtl
arpl
in
mov
lods
arpl
and
xchg
call
jbe
out
popf
test
jge
lds
sbb
incb
ss
xchg
add
aaa
pushf
cmc
xor
push
fcomps
aad
rolb
dec
and
mov
fld1
mov
les
mov
cmp
addr16
test
out
push
dec
std
adc
inc
fdivs
jge
sbb
dec
xchg
mov
hlt
orl
shrl
mov
pop
sbb
push
fmuls
ret
mov
inc
sub
mov
fldl
shl
out
cmpsb
sbb
into
mov
jae
icebp
out
add
or
jne
inc
cmpsb
and
pop
dec
ret
adc
clc
das
addr16
shll
pop
dec
movsl
adc
mov
std
fwait
inc
mov
cmpsb
push
xchg
out
xor
jle
dec
call
jb
imul
adc
xchg
daa
int3
mov
inc
lret
mov
cmp
out
mov
mov
mov
cmp
add
push
cmp
sbb
hlt
call
push
add
pop
rorb
movsb
mov
jo
int
scas
sbb
and
daa
adc
repnz
mov
mov
fimuls
xchg
cmp
add
lock
in
gs
pop
mov
dec
pusha
sahf
cmp
push
in
loope
dec
fwait
sbb
mov
psrlw
arpl
gs
mov
mov
orl
out
inc
pop
xor
testl
outsl
loopne
cmpsb
or
sub
pop
dec
adc
gs
fadds
and
xor
and
lods
push
test
adc
mov
nop
inc
cmp
mov
inc
xchg
xchg
sub
ljmp
repz
negl
xchg
cmp
insl
and
adc
dec
dec
jecxz
mov
fstpl
mov
sbb
xchg
dec
mov
mov
mov
stos
inc
or
cmp
pop
insl
fs
pusha
add
push
jns
jge
imul
inc
jg
rcl
push
int
pushf
cmp
fsubrs
xor
or
js
dec
test
frstor
xchg
and
mov
sbb
push
xchg
cmp
ljmp
jne
jle
add
pushf
outsl
sbb
les
sub
sbb
lret
sub
std
push
xchg
fstps
sbb
cli
and
std
mov
inc
insl
into
sbbb
or
insb
cmp
mov
aaa
push
mov
add
and
cmp
data16
xor
enter
lods
xchg
pop
or
xchg
sub
dec
mov
cmp
sti
mov
cmpl
mov
addr16
adc
dec
push
out
outsl
mov
outsl
push
sub
inc
xchg
shlb
mov
cmp
xor
mov
mov
mov
add
cwtl
sbb
push
cmp
outsb
andl
ds
pop
pop
adc
mov
mov
icebp
jno
mov
ret
inc
pxor
dec
lock
jo
out
sbb
loop
cwtl
add
cmp
repnz
push
stc
cmpl
xchg
jae
dec
push
adc
xchg
inc
sub
jp
sti
add
js
fadds
ficoml
cmpsl
leave
out
hlt
int3
cltd
add
scas
inc
inc
sbb
addl
lret
icebp
or
sti
cwtl
loopne
xchg
and
ds
mov
jo
cmp
mov
and
lret
rep
cld
pop
ret
test
xchg
inc
push
outsl
fsubrl
inc
jge
mov
fsubrs
and
loop
loope
aaa
push
aad
fdivrl
and
cmp
and
icebp
pop
xor
and
jp
inc
shlb
sub
outsb
mul
and
cmp
es
ss
ds
mov
lea
jo
push
jbe
xor
and
mov
loope
or
testb
push
push
jae
xchg
lea
lcall
mov
jmp
rcrb
pop
xchg
adcl
mov
cmp
pushf
cwtl
fidivs
leave
popl
hlt
movsb
ja
lret
lods
and
xor
lock
daa
and
adc
push
pop
cmc
cmp
pop
cmp
outsb
dec
jmp
xor
loop
data16
and
in
movsb
fisttps
add
js
jnp
fisubrs
iret
pop
cltd
insl
xchg
mov
pop
movsl
and
out
int
jl
mov
or
or
fistl
or
inc
rclb
push
pushf
cli
sti
mov
out
add
mov
inc
add
xor
jl
pop
pop
lods
fisubrl
cld
sti
dec
shrl
cmp
stos
cmp
jecxz
ret
mov
xor
jns
fsubp
jmp
or
cmp
pop
or
ret
dec
and
addr16
gs
xchg
pop
das
aam
xchg
sarb
xor
push
mov
inc
pop
xor
mov
cmp
mov
jb
pop
sbb
loope
lods
or
mov
outsl
add
fisttps
cmp
inc
and
inc
sub
cmp
negl
out
mov
rcrl
inc
jns
adc
sti
cs
push
lods
stos
push
mov
xchg
and
lahf
mov
fnstenv
pushf
jb
sbb
es
or
or
jg
in
add
ret
pop
mov
mulb
mov
icebp
mov
ss
adc
in
mov
lock
and
hlt
pop
repnz
lea
sbb
popf
sbb
in
jbe
lods
scas
jecxz
inc
data16
popa
test
add
mov
addr16
aas
add
pusha
push
jp
or
add
lock
cmp
jns
mov
adc
push
cmp
pop
hlt
fprem1
adc
cs
out
dec
ret
es
leave
mov
xchg
and
jle
lods
rolb
push
sahf
jl
inc
or
dec
inc
mov
mov
in
inc
bound
mov
shl
push
out
push
add
pop
jne
test
popf
fwait
adc
mov
push
pushf
fnsave
ss
sbb
repz
or
pop
aam
subb
js
xchg
clc
clc
rcll
js
das
jne
push
shlb
sbb
sub
xor
mov
xor
sbb
stos
jge
mov
neg
sub
dec
cmpsl
sti
push
push
loope
cmpsb
pushf
or
xchg
insl
mov
cmp
ja
bound
or
fs
push
add
bound
add
cmp
fcoms
fcmovbe
mov
mov
add
and
cmc
lret
jno
sar
int
dec
xor
mov
enter
push
shlb
mov
outsb
mov
inc
jbe
xchg
std
push
jne
xchg
in
inc
mov
inc
lock
jno
push
sub
lock
je
pop
and
mov
cmp
nop
stc
push
jnp
pop
adc
in
push
jbe
or
fadd
pop
mov
mov
les
pop
mov
adc
push
mov
adc
scas
or
sub
mov
xor
xchg
ja
sub
imul
mov
lcall
icebp
ja
js
ret
mov
jg
aaa
xchg
dec
adc
cmp
mov
jecxz
dec
stos
xor
mov
xchg
lahf
popa
rolb
hlt
fdivr
popa
xchg
nop
pop
xchg
dec
mov
mov
xlat
push
xlat
xchg
push
lret
add
xchg
in
add
fs
ds
int3
loop
into
sub
cmc
and
scas
stos
mov
xchg
jp
mov
pop
into
daa
xor
hlt
lret
sub
fmul
popl
cmpsb
je
fidivl
mov
test
mov
leave
lods
mov
fcmovb
xchg
out
stos
xchg
out
lods
das
fistpl
pop
pusha
dec
mov
mov
or
sub
pop
in
jmp
or
dec
inc
gs
cmp
movsl
inc
mov
fstps
scas
cmp
insl
movsb
xchg
push
pop
movsl
push
repz
stc
pop
mov
cltd
or
lods
imul
and
adc
js
xchg
movsb
mov
ljmp
std
scas
cmpsl
xchg
cwtl
and
jno
shrl
loopne
push
sbb
dec
mov
adc
inc
push
pop
test
xchg
in
cmpxchg
ds
push
or
loopne
jle
fwait
mov
jnp
andl
fidivrl
push
adc
jb
pop
test
push
and
mov
mov
and
popa
or
insb
inc
scas
add
into
sub
outsl
lods
stos
inc
hlt
mov
fs
popf
mull
mov
sbb
repnz
sbbb
cmp
popa
pop
push
add
pushf
mov
xchg
xor
mov
push
mov
pop
cmp
mov
int
test
push
push
or
sahf
popa
sbb
fwait
push
pop
pusha
bswap
inc
push
scas
sahf
sbb
repnz
mov
lcall
pop
and
into
adc
lods
in
xchg
in
icebp
mov
mov
out
mov
push
xorb
shlb
test
pop
gs
out
arpl
fld
mov
addl
jl
lock
jno
sbb
mov
adc
bound
into
pop
xor
adc
lret
ss
imul
cld
jae
push
aaa
mov
dec
lock
mov
jae
lea
sub
insb
inc
mov
outsl
inc
sbb
pop
test
add
imul
testl
loop
adc
jnp
je
push
pop
lahf
sbb
adc
arpl
pop
cmp
jne
repnz
loop
sub
ja
nop
or
fdivs
imul
push
xor
shlb
out
out
mov
add
or
xchg
sahf
adc
add
cmp
mov
pop
je
xchg
xchg
lahf
pop
ljmp
mov
dec
in
pop
cmpsb
push
adc
adc
and
sub
mov
dec
sub
xor
out
loop
lods
mov
jbe
lcall
es
push
insl
or
xor
out
sub
fsubrl
sbb
pop
aaa
adc
das
fsub
sbb
cltd
sbb
loopne
push
sub
insb
jne
xlat
mov
pop
adc
sub
pop
enter
inc
or
push
and
sub
enter
pop
negl
jnp
pop
and
lods
imul
add
mov
mulb
mov
into
and
neg
xlat
dec
cmp
sbb
enter
in
insb
push
filds
clc
ja
mov
cmpsb
daa
add
movsb
js
push
sub
fcomip
pusha
loopne
test
push
in
pop
dec
das
xor
mov
or
addr16
repnz
mov
push
sub
inc
imul
shr
pop
fs
sbb
jne
aaa
shll
cmp
lods
jmp
call
sbb
sbb
add
nop
int3
mov
dec
add
add
fsubr
pushf
pop
cmp
pushf
jnp
adc
xchg
leave
adc
cld
pusha
bnd
rdseed
and
hlt
mov
or
bound
imul
stos
push
imul
xchg
enter
in
xor
jmp
mov
mov
push
mov
mov
pop
aaa
inc
push
lods
mov
sbb
mov
add
xchg
mov
xor
aad
fdivs
pusha
jnp
loopne
fidivs
sbb
icebp
sahf
repz
push
mov
jp
mov
bound
lcall
inc
jno
push
stc
push
imul
adc
push
insb
mov
mov
mov
scas
push
in
lds
mov
push
push
lock
cmp
dec
pop
repz
cmp
inc
inc
das
or
stos
jecxz
dec
loopne
mov
inc
fiadds
mov
mov
cwtl
jg
adc
fistpl
mov
pop
push
das
jns
sub
enter
lret
xor
lcall
xor
pop
das
lea
cwtl
push
push
lds
aad
into
bound
sbb
fstl
sub
pop
mov
sbb
scas
pop
adcl
mov
gs
push
pusha
push
ljmp
addr16
scas
inc
push
and
popf
mov
shl
aas
sub
std
into
sub
cmc
mov
or
aam
sbb
jo
adc
sti
sbb
das
jge
dec
pop
dec
test
adc
adc
arpl
push
sarl
mov
int
cmp
adc
lods
pop
out
repz
or
je
lret
int3
mov
popf
push
inc
fidivrs
movsb
jae
mov
sbb
push
pop
mov
xchg
push
jg
push
push
inc
lcall
lods
fmulp
es
insb
sahf
inc
icebp
je
mov
pop
lea
pop
fcmovb
xor
sub
es
sub
push
jp
sub
lret
arpl
bound
nop
mov
mov
dec
lock
and
sbb
hlt
adc
cwtl
xchg
aaa
or
sbb
jecxz
cs
jg
adcl
mov
push
lods
push
jge
out
xlat
mov
xor
loope
in
mov
sub
sub
sbb
jo
int3
xor
or
sarb
scas
inc
nop
ja
mov
xchg
jne
imul
push
orl
icebp
addr16
bound
decb
mov
jle
adc
mov
dec
jp
push
outsb
es
adc
arpl
and
add
bound
mov
rcl
sub
lock
add
sbb
sti
jl
scas
rcrb
dec
mov
add
test
push
mov
adc
mov
jge
sub
jg
jl
inc
push
pop
xor
scas
jo
jmp
sbb
fbstp
sub
push
adc
xchg
shll
xor
inc
xchg
or
in
push
scas
mov
icebp
cs
cmp
test
mov
ret
mov
xchg
stos
aam
push
iret
stos
push
dec
je
jge
push
jb
mov
jne
hlt
mov
movsb
call
insb
mov
mov
add
cwtl
adc
inc
aam
xor
mov
mov
insl
mov
sbb
xchg
sbb
jmp
inc
xor
cs
sbb
inc
xor
mov
ss
shrb
xchg
push
out
lea
aas
mov
into
mov
sub
bound
push
stos
das
xchg
sbb
mov
add
adc
pushf
icebp
imul
pop
mov
inc
icebp
dec
mov
mov
mov
js
data16
push
insl
pop
xor
xor
int
pop
enter
fbstp
inc
jb
loope
sbb
sarb
fdivrp
jno
outsb
cs
and
sbb
insl
mov
fisttpll
push
pop
mov
jle
lea
push
addl
jb
out
movsl
inc
andb
sbb
or
fidivl
inc
sbb
jmp
xchg
mov
dec
xchg
pusha
mov
dec
testb
sbb
and
or
ja
lahf
sbb
outsb
pusha
and
stos
jns
addr16
bound
lcall
scas
sbb
jge
inc
jmp
xlat
int3
lock
pop
xlat
push
push
lods
out
js
fidivrs
ja
xor
popa
xor
std
push
xor
lds
mov
adc
loop
xchg
icebp
mov
or
jno
push
jmp
sbb
scas
pop
jmp
pop
movsl
ds
mov
stos
mov
cwtl
inc
stos
add
push
jbe
cld
lods
add
add
iret
mov
add
xchg
inc
loop
adc
mov
fbld
incb
jle
inc
sub
rcrl
and
mov
test
xlat
mov
in
nop
xchg
cmc
in
inc
mov
mov
popf
loop
rcll
daa
cmp
cmpsb
insl
sti
aaa
or
mov
mov
and
adc
repnz
jmp
rol
stos
push
adc
or
pop
int3
mov
mov
out
jmp
stos
xor
scas
lods
loopne
inc
pop
xchg
sbb
in
jp
sbb
lret
mov
add
adc
cli
jp
leave
xor
and
cld
ljmp
scas
gs
cmp
sbb
and
sbbl
inc
or
inc
incb
and
jno
movsb
and
mov
dec
cmp
inc
lods
cs
mov
daa
dec
jne
lds
lods
push
push
test
shrb
vunpckhps
divl
pushf
or
les
out
fstpt
pop
jmp
mov
dec
je
cmpb
fwait
rolb
push
adc
shrd
stc
xchg
ret
insb
sub
mov
out
pop
popa
shrl
sbb
shll
dec
je
mov
negl
mov
out
adc
and
pop
push
push
and
mov
add
stos
lods
fmuls
maskmovq
divl
pop
mov
adc
mov
cli
adc
daa
mov
nop
xor
jbe
inc
mov
call
jmp
or
jecxz
clc
dec
jns
xchg
movups
pop
in
cld
js
jbe
clc
cmc
nop
dec
movsb
mov
out
add
sub
sti
cwtl
xor
xchg
imul
insl
or
fistpl
mov
dec
mov
lahf
je
mov
jmp
inc
add
or
aad
and
mov
scas
mov
cli
stos
shrb
push
sbb
mov
mov
cmp
test
add
andb
pop
sahf
loopne
pop
es
jg
mov
dec
cmp
mov
jp
ss
jl
andb
stos
repnz
pop
out
in
push
inc
mov
xlat
test
or
jne
cmp
addl
dec
xchg
push
out
dec
jmp
cmp
pop
out
push
in
xchg
pop
sub
push
js
jns
sti
mov
hlt
mov
sar
add
fwait
out
aaa
in
push
imul
int
dec
add
adc
aas
ds
adc
xor
push
and
mov
insb
pushf
mov
push
jnp
mov
cmc
sub
mov
outsb
in
cltd
sub
sbb
stos
sub
lcall
fsubrs
cmpsl
rolb
jmp
movsb
gs
cmpsb
fwait
jle
stc
and
bound
mov
cwtl
xor
lds
push
mov
ror
jmp
js
bound
sub
mov
stc
mov
daa
xor
xor
cltd
push
add
adc
mov
aas
ret
pop
push
mov
mov
jnp
jle
xchg
mov
notl
xchg
in
outsl
mov
sub
out
in
loopne
into
aaa
cld
call
daa
mov
inc
and
rorb
lret
cmp
xchg
std
rolb
sub
lods
pop
mov
ret
cli
mov
ja
in
dec
push
scas
jns
icebp
ds
dec
cmc
fdiv
cld
into
mov
scas
pop
xchg
loopne
and
dec
or
fwait
ljmp
cmp
pop
stos
fnstenv
pop
push
cld
cmpsl
lods
lock
sbb
repnz
push
or
ret
scas
fsubs
inc
sahf
mov
je
gs
cmp
fwait
adc
push
cmp
nop
je
cmc
cmp
movsl
std
out
test
jne
hlt
cmpsb
xor
pop
push
push
cmpsb
cmp
cmp
and
push
lahf
sbb
adc
inc
push
dec
arpl
cmp
mov
data16
mov
mov
cmc
pop
inc
aaa
leave
sbb
and
mov
loop
mov
fs
mov
push
outsl
sahf
jb
dec
pushf
mov
inc
sbb
sbb
jno
ss
fs
scas
lea
inc
les
ds
repz
or
in
cli
je
xchg
pop
push
jmp
rorl
xor
lret
out
rclb
jnp
dec
adc
adc
or
push
les
cmp
mov
imul
mov
xchg
push
popf
sub
add
push
push
nop
cltd
pushf
movsl
inc
mov
sbb
data16
orl
sbb
imul
je
es
pop
lret
or
stos
imul
lcall
repnz
cmc
dec
push
xchg
ror
sub
pop
mov
jb
ds
jne
xor
cli
lret
jl
repnz
pushf
lea
jp
int3
das
add
inc
sbb
xchg
loope
jbe
dec
push
fmuls
sti
cld
int
push
and
sbb
jl
jecxz
jge
add
imul
in
adc
push
sub
fsubl
in
ja
pusha
push
jbe
in
push
lock
or
sahf
xchg
stos
lret
iret
fcoms
lcall
ret
ljmp
andb
adc
jp
subb
pop
icebp
frstor
jg
clc
insb
fisubrl
xlat
in
jns
push
xchg
mov
mov
sbb
cmc
pop
cmpsl
jo
mov
sbb
ret
xor
out
push
pusha
jecxz
lods
add
dec
mov
dec
mov
mov
sbb
hlt
xchg
mov
and
push
add
mov
std
push
inc
push
pop
pusha
divb
dec
js
leave
stc
fiadds
push
inc
inc
adc
das
testl
lock
inc
xchg
pop
sbb
mov
cmp
add
push
mov
iret
imul
sub
add
add
pop
mov
test
fbld
cmc
or
inc
scas
imul
mov
adc
shlb
popf
pushf
lods
or
test
mov
adc
xchg
adc
inc
je
add
jno,pn
inc
cltd
cmc
and
insb
jb
xchg
outsl
fs
out
push
mov
clc
sbb
in
dec
and
sub
xchg
mov
inc
mov
nop
outsl
mov
nop
movsb
bound
outsb
and
out
fwait
jle
or
and
lods
jmp
data16
xchg
loopne
jecxz
dec
and
dec
adc
fisubs
lds
cmpsl
jg
repnz
xor
test
push
and
jp
testl
loop
aaa
or
in
aad
shlb
push
dec
push
lods
inc
mov
scas
pop
iret
dec
imul
in
ljmp
std
imul
jo
mov
mov
pop
rcrb
xchg
loope
sub
xor
cmp
inc
rclb
inc
stc
xchg
jae
and
mov
xor
icebp
mov
sbb
cs
fwait
dec
xorb
add
fwait
mov
dec
cmpsb
jmp
add
mov
mov
shrl
pop
lock
iret
push
lahf
imul
imul
test
jge
repnz
sub
lret
push
inc
xchg
pop
inc
sbb
mov
ss
lcall
sub
xor
movsb
fwait
data16
push
add
xchg
out
jno
sahf
ss
les
pop
xchg
xchg
and
jge
pop
push
add
cmc
mov
dec
testl
in
sbbb
int
cmpsl
in
out
sbb
sti
jns
mov
lret
pop
cmc
getsec
jmp
sub
xor
lds
cmp
sbb
mov
das
into
push
or
jae
and
cmp
sbb
test
fs
mov
jne
pop
popa
imul
jl
int
into
adc
popa
cli
test
loope
adc
and
fadds
xchg
sub
sub
sub
and
enter
add
jae
pop
add
or
push
out
pop
jmp
and
sar
fbld
sub
stc
mov
mov
je
test
addl
bound
inc
xor
or
jmp
adc
loop
cli
sub
or
ljmp
mov
mov
test
sti
lea
dec
rol
fbld
sub
cltd
andl
fcmovne
idivl
das
jo
loopne
xchg
mov
sub
movzbl
cmp
cmp
sbb
mull
in
sahf
add
xlat
imul
lahf
cmp
rcr
aas
inc
push
inc
jne
sahf
sub
mov
adc
test
sbb
stos
fsubr
jmp
and
sbb
leave
pop
test
fcoms
and
mov
icebp
loope
or
xchg
loop
inc
mov
out
push
or
stos
jle
mov
andl
xorl
icebp
xor
lahf
dec
pushf
add
repz
andb
cmpsb
movsb
clc
movsb
inc
out
xor
test
cmc
insl
aas
push
inc
into
ficoml
ret
or
sbbl
les
icebp
fildl
pop
sti
lret
fwait
adc
ds
sti
shrl
enter
and
push
ss
lea
lds
aad
insl
push
sub
push
clc
fs
fildll
and
push
sub
jbe
mov
mov
jle
ficomps
stos
insb
mov
stos
push
cmp
push
add
lds
enter
sbb
rorl
push
and
and
xchg
pop
mov
or
stos
sub
jl
cli
xchg
outsb
faddl
ds
sbb
add
xor
mov
outsb
push
sarl
mov
fstpt
xchg
cmp
out
addb
push
sub
jbe
lds
pop
dec
mov
shll
jo
lret
or
inc
insb
inc
mov
mov
pop
popf
insl
roll
mov
fistpl
arpl
push
pop
push
pusha
call
rcl
into
lock
in
add
or
iret
dec
cld
dec
scas
jge
shlb
push
movsb
push
cld
xchg
xor
or
ds
fidivs
add
sbb
data16
xchg
negl
push
xchg
in
out
add
into
mov
jp
sub
adcl
push
inc
shrl
fsubrs
mov
shlb
adc
std
daa
xlat
out
mov
push
daa
pusha
leave
sub
pop
pop
int3
fldcw
lahf
push
sbb
mov
aas
or
mov
fdivl
inc
pcmpgtd
xchg
xchg
push
icebp
sbb
scas
dec
in
vmread
and
xor
aad
adc
or
xchg
in
and
leave
or
and
pop
movsl
dec
test
popa
je
outsl
hlt
ss
lock
push
add
cmpsb
mov
subl
clc
ret
out
xlat
test
mov
jno
lock
push
addb
xor
mov
imul
incl
ja
dec
repz
adc
add
fnstsw
lds
sti
jmp
scas
sub
and
adc
int3
sub
xchg
in
jl
pop
mov
xchg
xor
sbb
cwtl
jecxz
jl
jl
push
jno
mov
jbe
cltd
in
or
push
cpuid
popa
out
mov
fsts
stos
and
xor
out
nop
xlat
in
or
scas
or
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
out
push
je
push
addl
test
add
pop
inc
xor
jp
imull
je
and
in
clc
test
loop
inc
jo
outsb
xlat
repz
pop
icebp
inc
mov
jbe
sahf
imull
adc
jae
sub
mov
addr16
inc
xchg
and
das
jecxz
incl
xor
xchg
sbb
or
mov
enter
je
loop
sub
add
fs
subb
and
lret
fdivrs
sbb
std
mov
ds
pusha
clc
shl
mov
or
shrb
push
inc
aad
pop
sbb
andb
or
push
test
lods
aad
jg
rcrb
out
pop
and
jne
data16
sarb
mov
xor
xrelease
xchg
xchg
fidivl
cmpsl
xchg
shl
in
sub
int3
mov
sbb
push
and
idivl
cmp
aaa
pop
enter
pop
xor
pusha
in
cld
xchg
xchg
clc
sub
mov
mov
mov
cmp
rcll
pusha
adc
inc
cmp
xor
sub
lods
stc
cs
test
cwtl
mov
pop
insl
icebp
adc
bound
int
dec
jmp
and
mov
cmpb
rorb
push
jle
jle
pop
add
cmc
mov
cmc
xchg
mov
mov
data16
fwait
nop
cmp
pop
push
sbb
jbe
xor
incb
pop
aam
insl
mov
jg
in
scas
lret
or
sub
xor
and
out
add
arpl
adc
je
sub
adc
push
xchg
xchg
push
test
push
sbb
dec
xor
pusha
push
push
je
mov
xlat
mov
test
pop
ss
pop
jecxz
push
fcmovbe
lods
sub
pop
mov
shll
push
fcompl
dec
in
jl
outsl
sub
out
std
mov
pop
fxch
jg
pop
hlt
fdivr
popf
cltd
adc
xor
and
jmp
test
addr16
cmp
loop
ror
xchg
jne
sub
iret
movsb
adc
mov
cmp
dec
mov
xor
sub
ret
jecxz
jnp
fiaddl
fdivr
dec
push
mov
xlat
and
mov
mov
sub
xor
jp
push
jecxz
jmp
mov
add
push
xchg
in
add
scas
gs
fcmovne
jle
bound
mov
daa
jg
ss
sub
call
jae
mov
xchg
pop
fstpt
fwait
gs
cli
pop
lret
outsb
jns
inc
fildl
inc
pop
xor
dec
in
ror
inc
ret
cmpsb
cmpsb
test
xor
addr16
cmc
pop
and
jl
test
arpl
xchg
adc
jo
daa
gs
fwait
push
lret
imull
xor
cmp
sbb
xor
imul
xchg
stos
cmp
cwtl
mov
fsubs
push
cmp
mov
ret
xor
in
sbb
idivl
pop
fldenv
aaa
js
dec
dec
mov
jae
sub
jl
imul
inc
mov
jb
mov
mov
push
movsl
sahf
inc
mov
jae
and
lcall
ror
cmp
subb
rorl
mov
in
xchg
mov
inc
lock
mov
cmp
sti
adc
mov
dec
lret
aam
and
dec
ds
lods
outsb
sub
lods
sbb
das
push
sbb
mov
loop
mov
pop
in
sbb
xor
loop
cs
and
xor
mov
lods
and
push
ret
push
scas
arpl
rcl
sar
mov
fnstenv
xor
out
cmp
pop
sti
mov
mov
mov
std
lret
mov
push
movsb
fxch
mov
fisubl
add
stos
sti
loope
ljmp
mov
pop
sbb
test
sub
icebp
pop
xor
popa
lret
pop
jl
inc
xchg
jecxz
push
cmp
sbb
or
icebp
icebp
test
mov
inc
repz
sahf
sbb
push
adc
add
popa
pop
cwtl
and
stos
xor
in
lods
jmp
in
fdiv
mov
cmp
insb
or
fildll
push
push
iret
jmp
lahf
or
ret
test
cmp
xor
test
push
orl
mov
out
movb
sub
xor
rcrl
hlt
test
xor
cmc
jne
sub
test
scas
or
sub
pop
popf
lret
sbb
sub
inc
leave
mov
ljmp
xchg
pop
mov
shrl
out
sarb
push
mov
push
xchg
shll
ficoms
add
repnz
leave
pushf
js
xor
sub
push
jge
xchg
and
dec
roll
testl
imul
fxch
and
and
js
pop
cmpsb
ffreep
or
jbe
sbb
mov
sub
lds
sbbb
pop
pop
int
pop
pop
imul
imul
fmull
or
mov
fstps
sbb
frstor
aaa
and
cli
hlt
mov
insb
pop
shll
pop
adc
ss
cld
sahf
jmp
aam
pop
shlb
cltd
fwait
push
xchg
movsl
dec
sti
cvtps2pd
in
int3
popf
mov
jp
mov
out
or
mov
xchg
inc
adcl
xor
lods
repz
lahf
jnp
jnp
cmp
adc
ficompl
push
cld
test
pop
out
mov
jg
lahf
ljmp
loope
shll
rcr
and
imul
mov
sub
jle
mov
shrl
pop
push
outsl
sbb
iret
dec
test
xor
add
mov
or
pop
lret
add
ret
enter
jmp
cmpl
sbb
popa
cmp
mov
xchg
mov
add
and
sub
pop
js
ret
xchg
inc
adc
and
imul
cs
lods
clc
and
int
pop
pusha
xchg
xchg
lea
int3
repz
lods
sbb
lods
ljmp
pusha
push
add
fstp
pop
out
inc
lret
popf
push
adc
jl
cwtl
test
test
or
push
shl
test
ret
fsubr
lret
gs
pop
inc
dec
jge,pt
je
ss
hlt
fstp
push
outsl
scas
test
add
lret
popa
add
hlt
sbb
push
shll
push
lahf
arpl
test
stc
into
scas
add
ja
mov
mov
mov
cmc
inc
lods
mov
lds
loop
cwtl
out
stc
cmc
mov
scas
and
stc
and
in
mov
aam
cli
adc
shlb
jae
cmpsl
int
inc
inc
add
iret
mov
jbe
sbbb
sbbb
data16
mov
testb
xchg
sbb
sub
mov
test
push
pusha
mov
lods
pop
std
push
fnstsw
js
mov
imul
sub
shll
outsl
push
sub
imul
sub
xlat
mov
int3
lahf
ret
pop
push
sbb
mov
inc
pop
jbe
aas
fisubs
es
out
push
cwtl
sbb
inc
insb
dec
lods
sub
push
sub
push
in
inc
inc
pop
sbb
or
inc
rcll
push
rcr
jmp
popa
jns
dec
ss
push
jle
sbb
dec
dec
jecxz
lahf
adc
add
sti
notl
inc
adc
add
es
loop
andl
idiv
sahf
adcl
stos
pop
int3
loop
adc
push
pop
inc
std
sub
pop
inc
scas
fisubl
sarb
jl
jecxz
xchg
decb
pusha
mov
lret
push
inc
and
xchg
pop
inc
loopne
ja
jle
sbb
jmp
test
sub
xchg
into
xlat
jae
in
cmpb
push
xchg
jae
lods
mov
xchg
push
and
shrl
jb
xchg
imul
mov
jge
sbb
or
fwait
roll
test
cmp
xor
rclb
cmpb
loopne
divl
dec
lods
adcl
std
push
sub
lcall
pop
xchg
andl
pushf
mov
addr16
mov
sbb
inc
stc
in
add
pop
in
ret
jne
push
adc
icebp
fmulp
push
andl
stos
cmp
mov
sti
pop
sub
push
mov
outsl
sbb
test
xchg
movsl
lods
imul
cmp
xchg
cmp
sub
sti
or
cltd
lcall
outsl
daa
mov
xor
and
pop
xchg
lahf
insl
pop
push
sbb
push
mov
mov
pushf
sahf
pushf
cmp
pop
fiaddl
scas
test
flds
or
push
dec
mov
sub
in
ds
into
pop
push
call
or
or
sbb
cmp
das
repnz
mov
aad
lock
sub
push
fucom
test
iret
jg
dec
push
mov
int3
test
lret
mov
adc
add
sbb
cmp
push
fcoml
add
call
push
outsl
cmpsl
sub
pop
mov
mov
gs
stos
xchg
add
jmp
arpl
dec
pusha
sub
pcmpeqb
lods
mov
aad
scas
fnsave
lahf
pusha
mov
lret
dec
mul
imul
mov
into
out
jmp
sub
mov
push
sbb
mov
loope
xor
mov
mov
repnz
xlat
lods
das
pop
jo
jecxz
pop
lcall
jecxz
pusha
fisubrs
mov
ja
xor
inc
add
popf
cmp
in
and
test
lds
xor
xor
cld
or
test
roll
xchg
aad
and
sub
sbb
ss
adc
loope
ret
mov
and
lcall
xchg
shll
data16
in
jnp
loop
xchg
dec
and
aad
push
push
or
aam
push
cmp
arpl
push
jg
pop
ret
jg
dec
or
jo
cmp
iret
pop
stc
in
mov
dec
movsb
push
mov
sete
mov
lea
in
sbb
xchg
std
subb
and
arpl
sahf
into
int3
testl
call
mov
jbe
lods
test
mov
js
inc
in
sub
lods
xchg
scas
lret
xchg
shll
cmp
insb
cmp
das
jo
and
scas
out
iretw
pusha
ljmp
adc
fists
jmp
test
xchg
sti
popa
inc
add
xor
jbe
dec
mov
or
gs
inc
xchg
lret
push
das
and
mov
test
adc
stos
test
test
sbbb
mov
jb
pop
lret
jno
sub
adc
cmp
pop
mov
lahf
inc
add
pop
lret
mov
mov
in
and
call
sub
mov
push
push
sti
pop
insb
fcmove
mov
pop
push
or
pop
push
and
dec
cmp
jmp
sti
jno
aas
js
mov
pop
mov
and
mulb
pusha
scas
jno
nop
inc
repnz
xor
and
pop
add
test
ss
push
data16
push
sbb
scas
mov
pop
cmp
inc
inc
and
xchg
xor
jnp
add
pop
cmp
push
stos
sbb
dec
xor
rorl
sub
xor
add
pop
int
xor
imulb
aas
bound
pop
movsl
scas
cld
adc
dec
insl
mov
push
sbb
sti
int3
xchg
dec
addl
mov
mov
mov
loop
and
jbe
aas
jle
int
movsb
add
jl
push
mov
push
mov
hlt
mov
dec
sahf
push
mov
imull
cmp
pop
xchg
mov
xchg
pusha
fwait
mov
test
cwtl
jp
jecxz
scas
and
mov
jl
outsb
movsl
les
ljmp
test
dec
xor
stc
lcall
cld
inc
fbld
aam
dec
and
xchg
pop
insb
mov
aas
and
jg
and
push
mov
data16
fstl
push
popf
out
cli
cmp
cld
aad
jmp
pop
idivb
hlt
and
rolb
inc
sub
mov
jecxz
xchg
push
mov
add
mov
mov
repz
repz
cmc
rorl
push
stc
sti
jmp
adc
or
jmp
xor
dec
lcall
pop
rcrb
inc
ss
ret
and
and
pushf
mov
es
setae
jecxz
in
and
sahf
ret
and
jb
push
mov
insb
jmp
push
xor
in
and
imul
and
add
sub
stos
fbstp
cwtl
test
out
sub
rorb
xchg
test
jmp
mov
pop
shll
xor
sti
in
aad
or
into
push
gs
data16
jl
clc
js
sbb
outsb
or
jecxz
lret
adc
int
xor
add
ja
addr16
mov
inc
imul
pop
aad
loopne
jp
sbb
cmp
pop
xchg
xor
lods
mov
shr
popf
fsubrp
subl
push
iret
data16
inc
ljmp
fisttps
or
pop
xchg
pop
enter
mov
mov
movsb
push
sbb
push
test
stos
ror
dec
clc
in
inc
jbe
jg
push
daa
or
sbb
push
inc
testb
and
pop
sbb
dec
or
imul
mov
ljmp
sub
stos
lret
and
sub
pop
out
xchg
xor
sbb
xchg
add
sub
push
je
sbb
and
mov
cmp
enter
je
xor
sub
sar
adc
test
add
or
hlt
lods
xchg
xchg
into
xor
cmp
out
rclb
jle
lds
mov
js
in
rcr
add
ss
popf
cld
inc
popa
sub
mov
jnp
xor
add
xchg
jne
dec
xchg
dec
pop
test
xor
in
shlb
mov
data16
mov
or
jmp
cmpb
mov
push
fsubrs
xor
es
aam
jp
imul
or
rorb
push
xchg
in
jecxz
insl
or
pop
inc
js
int3
lea
xchg
jbe
cltd
fdivl
jne
popf
cmp
sbb
cmp
outsb
inc
mov
inc
test
stos
xchg
inc
cld
pop
popl
lods
lock
sbb
jne
fldcw
test
orb
jo
sahf
shr
sbb
notb
incb
fmul
fsts
pop
xchg
cli
lds
popf
cmpsl
mov
xlat
repz
add
cli
mov
mul
mov
cmp
sbb
dec
iret
adcb
rorb
mov
rep
and
mov
test
lcall
mov
js
pcmpeqb
ss
mov
mov
and
add
pop
adc
fs
fiadds
mov
xchg
insb
mov
out
mov
stc
push
fimull
sub
mov
push
test
pop
popf
in
test
add
jne
cmc
jo
cmp
subl
jp
stos
or
inc
adc
adc
and
mov
ficompl
and
add
mov
orb
jmp
push
xchg
es
mov
push
adc
xchg
mov
mov
dec
push
out
jnp
sub
jmp
pushf
test
lcall
cmp
bound
xlat
pop
mov
cmpsl
shrb
push
cwtl
dec
push
loopne
outsl
ds
out
aaa
push
push
xor
int3
shlb
sub
sbb
xor
pop
pop
pusha
stc
or
call
and
iret
test
xor
push
test
popf
outsl
lahf
jo
push
xchg
inc
mov
imul
ja
pusha
insb
sub
add
dec
lock
xor
add
jno
rcrb
in
xchg
aam
lds
mov
fsin
push
rorb
clc
jae
mov
flds
aam
or
dec
lret
jno
xchg
sbb
movsl
jbe
sub
fst
dec
adc
insl
pop
xchg
pop
mov
and
cmpsl
fcmovne
jmp
mov
jb
xor
mov
mov
adc
repz
push
push
mov
jge
sti
movsl
insb
sbb
inc
jp
neg
andl
ret
push
aas
cmp
pushw
aad
xchg
sub
mov
pusha
repnz
ljmp
fmuls
or
fxch
sub
and
inc
dec
daa
mov
fcmovnbe
test
xor
inc
movsb
orb
test
jmp
mov
sub
and
push
push
fcmove
jecxz
xor
fsubrl
std
add
push
ret
cmp
nop
movsl
js
out
pop
imul
pop
or
in
pop
sbb
hlt
sub
push
pop
fisttpl
sbb
test
xchg
bound
daa
out
scas
xchg
lret
or
pop
movsb
sahf
in
pop
dec
mov
fdivrs
jo
in
and
xchg
push
js
sub
mov
xor
enter
andl
xor
bound
icebp
pushf
mov
jne
imul
mov
pusha
dec
pushf
pop
rcrb
jl
bound
pop
mov
and
push
mov
loopne
test
xchg
adc
inc
pop
mov
cli
lea
bound
call
xchg
xchg
add
movsb
xchg
cmp
or
jmp
or
addr16
int3
push
mov
clc
cmp
pop
inc
jl
jecxz
in
cmp
jmp
sub
xchg
inc
mov
sarb
es
adc
ljmp
std
rorl
stos
sbb
xchg
dec
sbb
lahf
lock
inc
pusha
jne
test
or
icebp
roll
test
push
cmp
cmp
add
jb
mov
lea
movsl
dec
lock
jne
pop
daa
or
push
sub
inc
adc
out
pop
icebp
sub
cld
scas
xorl
dec
daa
jmp
or
cmp
loop
in
int3
dec
dec
rcrl
pop
lock
mov
mov
mov
sbb
lods
movsl
inc
cmpsl
mov
lret
nop
jge
push
inc
cmp
movsl
pop
cmp
xchg
mov
mov
aam
bound
sti
aad
fdivrl
mov
rolb
iret
daa
mov
jl
fcompl
lock
inc
mov
into
in
jae
push
sub
xorl
stos
xor
pop
add
popa
jp
mov
aad
adc
cmp
fidivl
jns
popa
test
lods
and
cmp
aad
or
or
loopne
scas
dec
out
dec
mov
push
fstps
test
jge
or
sbb
inc
addr16
test
inc
jmp
cltd
loopne
push
pop
stos
and
iret
pusha
dec
push
xchg
sbb
mov
cmp
cwtl
out
mov
sbb
push
mov
pop
ficomps
imul
mov
dec
fcomps
sbb
adc
in
jmp
in
pusha
or
dec
add
out
lods
aaa
gs
movsl
jb
testl
sbb
mov
repz
sub
ja
cmp
inc
inc
mov
lds
loopne
bound
lcall
ret
loope
cmp
inc
std
les
stos
add
ss
mov
bound
mov
and
push
leave
jnp
dec
scas
icebp
cld
xchg
into
xor
je
pop
jno
mov
push
aas
inc
lret
mov
sbb
jbe
ss
inc
mov
hlt
mov
int3
mov
in
fsubr
push
popa
hlt
jge
pop
lar
pop
es
in
repz
arpl
xchg
iret
mov
inc
cmpsb
mov
adc
push
push
add
inc
fcoml
outsl
xor
push
ror
cld
sub
and
leave
aam
sbb
leave
daa
mov
daa
xchg
inc
mov
cwtl
xor
mov
push
shrb
mov
mov
int3
pop
mov
nop
sub
cmp
mov
imul
and
sahf
jno
xchg
mov
mov
pop
scas
mov
xchg
mov
push
jecxz
jae
pop
icebp
push
iret
cmpsl
ret
add
pop
mov
shll
add
inc
movsb
mov
movsb
add
lret
mov
or
std
and
sbb
pop
xchg
and
push
sbb
aad
pop
rclb
adc
inc
popa
add
adc
mov
jbe
gs
mov
scas
push
xchg
pop
mov
xchg
subb
outsb
pop
jmp
das
stos
mov
sti
fisubrs
push
mov
xchg
out
pop
fisubrl
fldt
popf
jne
je
mov
push
and
arpl
mov
pop
loope
js
leave
insl
dec
iret
iret
fmull
sbb
mov
clc
xor
jo
push
inc
mov
stos
cmp
loop
nop
mov
mov
pop
pop
lods
adcl
xchg
xchg
aas
in
stc
add
xchg
mov
dec
mov
sbb
es
and
mov
and
in
xchg
add
xchg
fidivs
or
push
or
outsb
xchg
arpl
push
dec
rorb
test
es
sub
or
lods
xchg
xchg
insb
xchg
cmp
jns
or
pop
push
add
out
lock
pop
sub
jp
cmp
nopl
fisttps
fidivrs
les
or
sbb
daa
xchg
iret
mov
mov
adc
mov
scas
add
add
adc
cld
add
push
jbe
clc
int
and
aas
test
or
aam
fs
int3
sub
mov
push
fs
sub
jl
and
xchg
and
sar
push
inc
hlt
arpl
jns
out
stc
cmp
cmpsb
jecxz
fisubl
loopne
cmp
pop
out
imul
add
mov
hlt
and
ret
xchg
dec
sbb
int3
mov
loope
cmc
cwtl
adc
mov
insb
pop
jnp
sub
sub
jecxz
sbb
test
mov
fwait
scas
in
add
and
push
pop
pop
sbb
or
loope
adc
mov
mov
adc
data16
aas
inc
inc
adc
jge
sbb
lea
aas
pop
jecxz
sbb
aam
mov
popf
das
imul
es
inc
sub
pop
aaa
sarl
shrb
test
sub
dec
sub
lret
pop
jo
mov
into
xchg
add
fsubrs
aam
imul
jp
or
sub
pusha
add
or
mov
add
rcll
insb
int3
pop
cwtl
popf
popa
xchg
imulb
add
fldt
dec
push
stc
cld
or
mov
push
or
js
ljmp
push
shrl
leave
iret
mov
push
push
sub
push
stc
lock
nop
mov
inc
or
fldl
cmp
sahf
jno
fwait
movsb
popf
add
call
adc
push
shll
lret
mov
push
pop
sbb
loop
xor
movsb
add
pop
push
xlat
pushf
es
scas
push
jbe
mov
xor
gs
cmc
mulb
lcall
popa
sub
mov
in
scas
insb
or
ss
and
arpl
adc
xlat
out
call
std
inc
stc
dec
mov
and
mov
jp
mov
jle
adc
sub
je
in
js
and
cltd
add
data16
and
mov
adcb
cld
arpl
int
mov
mov
dec
outsb
sub
sbb
pop
mov
and
lcall
mulb
sbb
in
pop
xchg
mov
pop
add
fiadds
int
jae
shl
add
adc
stos
jb
dec
std
adc
mov
mov
mov
in
or
push
cmp
cli
mov
push
xor
and
sti
movsb
repnz
test
sub
jne
jl
mov
dec
dec
rcll
add
lds
cmp
inc
xor
iret
sahf
xchg
daa
jge
cltd
xchg
ret
or
jmp
xchg
cltd
data16
xor
xor
jle
xor
adc
pcmpgtb
jp
mov
rcll
jl
cltd
rcl
mov
aad
ss
int3
mov
in
push
and
dec
lock
sbb
lret
addr16
aaa
mov
fwait
pop
push
es
testb
and
add
mov
imulb
fldl
jmp
pushf
fidivrs
push
mov
stos
fxch
lahf
dec
push
mov
jno
mov
int
pop
cmpsl
or
fisubs
push
xor
in
mov
stos
andb
std
lret
cmp
adc
lret
xor
lret
mov
insl
adc
movsl
adc
adcb
stc
test
mov
call
sbb
cld
jbe
outsb
dec
mov
or
jp
lods
imul
or
popa
inc
in
mov
mov
les
stc
adc
movsl
sbb
fstps
cltd
inc
stos
dec
jbe
test
cmp
cli
sub
fistl
dec
clc
sbb
loope
repnz
cld
push
js
imul
sbb
xor
shll
or
xor
add
aas
adc
fidivs
int3
add
pop
shr
xor
jne
mov
push
ss
out
data16
dec
cmpsb
push
jo
or
push
sbb
xor
jle
xlat
sbb
mov
loopne
sarb
dec
pushf
in
movb
mov
cmp
jg
ret
jl
xlat
insb
ss
and
in
xchg
call
add
repz
mov
outsl
imul
std
popf
xchg
mov
int3
or
pop
decb
ret
xchg
ss
push
pop
sbbb
test
sub
sbb
mov
sbb
leave
adc
pop
addr16
cmp
pusha
rcl
insl
inc
sub
jle
push
dec
jmp
cwtl
sbb
iret
in
cltd
stos
or
xchg
aas
arpl
jb
pop
and
xor
fldenv
xchg
xchg
mov
std
in
inc
mov
int3
mov
mov
mov
lahf
add
lods
rcrl
mov
and
adc
mov
pop
add
fwait
out
popa
cld
aas
jecxz
test
or
in
fstpt
ret
movsl
pop
outsb
jb
int
stc
into
xchg
mov
push
inc
pop
js
nop
and
xor
popf
sbb
pop
jle
sbb
loopne
dec
shll
dec
pop
fistl
out
jae
xchg
lock
bound
fwait
mov
mov
mov
hlt
nop
cmp
xor
mov
pop
jno
js
xor
into
pop
les
test
std
rcr
cmp
hlt
leave
jle
fadds
hlt
repz
mov
pop
cwtl
jmp
pop
and
lahf
mov
pop
jmp
ret
cwtl
mov
in
mov
repz
insl
jl
jle
cmp
cli
loopne
mov
pop
push
sub
or
lcall
test
mov
insl
aaa
lret
jle
rcrb
cmp
pop
jbe
push
add
pusha
push
lret
and
fsts
pop
outsl
or
dec
xchg
mov
aaa
mov
dec
mov
or
movsl
sbb
adc
loope
icebp
nop
scas
or
inc
dec
lea
inc
loopne
inc
jmp
cli
xchg
lret
jbe
pop
ss
scas
push
push
stos
call
cmc
fiadds
add
adc
or
inc
mov
lds
adc
push
in
push
cmpsl
fisubl
fsubrl
lcall
xchg
xchg
push
mov
lea
lods
dec
mov
mov
pop
cs
sub
xchg
pusha
jo
out
xlat
dec
sbb
ss
mov
inc
adc
mov
cwtl
pop
pusha
popa
jbe
xchg
sbb
lret
sbb
add
test
bound
jns
dec
call
popf
dec
cmp
inc
enter
fld
mov
lret
xchg
rolb
pop
xchg
xor
stos
add
fldt
lods
push
sbb
lea
cli
das
cmp
inc
jmp
adc
jp
dec
call
push
pusha
pusha
fists
out
ret
cmpsb
addr16
popl
icebp
jp
loop
cli
add
popa
js
push
mov
int3
and
lret
mov
sbb
mov
pop
movsl
mov
cmp
repz
or
xor
jb
mov
orl
push
or
mov
call
sbb
mov
inc
push
pop
mov
insb
xor
in
mov
inc
mov
shlb
fs
mov
loopne
pop
mov
rcrb
push
outsb
icebp
jge
mov
pushf
sub
outsb
dec
out
cmp
mov
xchg
pop
ds
repz
inc
and
cmpsb
cmpsl
ret
jmp
sbb
cmp
sub
jmp
and
add
sub
lds
push
popf
inc
outsb
push
xchg
in
xchg
enter
in
fisttps
fwait
movsb
subl
sub
loop
and
das
sub
dec
mov
mov
inc
mov
xorb
lahf
ljmp
subl
mov
and
and
and
lods
inc
push
shl
sbb
loope
dec
out
or
divb
add
add
je
mov
ficoms
cmp
jg
push
je
cld
sub
add
and
mov
das
icebp
pop
in
and
stos
mov
outsl
add
inc
jo
cmc
in
mov
ds
mov
test
inc
jnp
mov
jno
push
leave
mov
aam
movsb
cmpsl
push
mov
add
jbe
xchg
ret
lahf
pop
xor
dec
inc
jg
mov
xchg
dec
icebp
or
loopne
xor
rol
imul
inc
jp
mov
aas
sbb
mov
test
or
jp
add
pusha
xchg
rcrb
xchg
sbb
in
pop
mov
test
mov
dec
incb
int
add
fldl
rcll
cmp
mov
imul
mov
xchg
pop
push
pop
push
rorl
inc
sbb
loop
fdivr
push
pop
ret
aas
jmp
pop
in
jbe
insl
add
popf
shl
adc
mov
jo
jle
xchg
imul
mov
add
adc
hlt
push
sbb
mov
adc
xchg
ja
out
test
or
cs
nop
clc
stos
imul
out
pop
sbb
es
sbb
stc
xor
stos
or
ret
addr16
lods
enter
mov
pop
cmp
mov
ja
lds
es
sbb
aaa
repnz
push
cmpsb
nop
add
fistpll
idivb
in
push
mov
lea
icebp
scas
or
pusha
aad
cmpsb
popf
mov
scas
lcall
loop
mov
cli
sbb
cmpsb
lret
mov
xor
sub
and
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
or
dec
cmp
addb
mov
or
sub
pop
push
cwtl
xlat
mov
in
and
data16
imul
das
sti
pop
pushf
xchg
add
mov
or
xlat
int
popa
insb
mov
ss
inc
mov
mov
pop
cmpsb
inc
add
sbb
loopne
adcl
mov
adc
cmp
stos
jns
xor
cli
jg
inc
push
cmp
int
and
das
test
inc
lret
mov
inc
int3
imul
dec
divb
aaa
or
loop
inc
push
mov
push
inc
add
ds
and
cwtl
pushf
mov
xchg
pop
inc
imul
pop
and
shlb
lods
add
in
add
sbb
imul
or
jb
pop
xor
pop
les
fsubrs
jmp
cmp
mov
push
les
out
dec
sbb
in
arpl
ror
mov
inc
leave
pop
and
lret
push
xchg
adc
sub
xorb
out
bound
jl
adc
sbb
pop
out
aad
or
aad
imul
mov
pop
ret
xchg
push
nop
jbe
lcall
lret
jne
xchg
lea
mov
out
add
xor
out
fs
push
imul
test
cltd
cmpsb
sbb
aad
xchg
pop
dec
pop
pop
push
xor
push
inc
cmp
sbb
lea
inc
sbb
xlat
sar
cmc
add
mov
cmp
ss
sbb
loopne
stos
pusha
loope
pop
lret
addb
outsb
or
jne
cmp
cltd
lahf
xlat
loopne
push
repz
shll
cmp
xchg
scas
add
inc
mov
jg
int3
add
out
lods
insb
jo
mov
mov
add
iret
mov
push
sahf
loop
sub
iret
and
xchg
jns
loop
lods
add
mov
subb
jmp
mov
jbe
xor
shrb
sahf
ljmp
in
inc
das
cwtl
push
xchg
fdiv
pop
shrb
push
or
xlat
push
rol
dec
cmp
leave
fstps
dec
push
outsl
fsubrs
mov
push
sub
adc
popf
mov
mov
pop
repz
mov
addl
and
fisubl
mov
iret
xlat
ljmp
sti
cwtl
mov
inc
rclb
ffree
mov
in
push
mov
mov
push
mov
sub
adc
mov
popa
orl
jns
mov
mov
fcoms
popf
mov
cmp
or
sbb
mov
sbb
jnp
mov
mov
sti
push
icebp
sbb
in
cmc
pop
xor
and
cli
call
out
inc
add
pop
daa
and
outsb
cli
mov
test
lock
cmp
dec
push
mov
sub
or
mov
aas
xchg
repnz
dec
loope
rclb
and
dec
repnz
xchg
int
mov
scas
fistps
pop
aam
arpl
nop
addb
mov
pop
mov
jbe
and
pop
scas
cld
jo
imul
xchg
jae
repnz
negl
push
ret
adc
lods
mov
dec
pop
cltd
xchg
or
mov
popa
sub
movsl
dec
scas
in
push
jae
fsubs
aad
xor
mov
push
push
add
inc
xor
in
jl
sub
mov
adc
mov
pop
mov
mov
push
push
jecxz
popa
xor
in
fnsave
mov
jle
jo
or
rorl
lods
jl
push
sub
orl
sahf
repz
cmp
jns
popf
stos
data16
clc
in
jg
sub
dec
sbb
or
pop
pop
testb
xor
mov
dec
addr16
jb
push
pop
push
push
cmp
cld
mov
jecxz
dec
loop
fcoms
mov
lcall
shr
int3
xchg
add
jmp
jmp
test
mov
aam
out
sbb
data16
xchg
lods
out
ja
pop
inc
es
mov
and
or
or
bound
jecxz
enter
lret
iret
or
push
dec
pop
jl
outsb
push
cmc
lcall
dec
or
mov
jbe
jmp
cmpsl
push
in
std
mov
fldl
das
lcall
push
mov
lods
mov
js
pop
cmp
pop
adc
or
pop
inc
arpl
xchg
push
test
mov
mov
lcall
push
inc
in
mov
push
mov
jbe
dec
adc
dec
pop
jns
popa
cmp
sbb
mov
adc
dec
sub
cmpsb
dec
daa
xlat
pushf
in
sahf
out
and
jne
and
mov
test
mov
push
jne
orl
sub
es
into
les
in
pusha
push
out
inc
repnz
dec
test
enter
push
lcall
mov
adc
xchg
cmpsb
shlb
testb
add
or
or
stos
sti
in
and
mov
add
jo
pop
mov
push
ficoms
je
dec
jae
pusha
or
xor
icebp
mov
add
cmpsb
cmp
pop
insl
and
push
xorl
inc
mov
popf
add
pop
cmp
jno
mov
inc
inc
lods
adc
add
jbe
inc
out
pop
inc
sub
add
mov
lock
and
aad
int3
push
and
ror
and
inc
and
leave
push
gs
clc
and
pop
icebp
aam
dec
fsubrs
mov
mov
mov
mov
jg
imulb
add
dec
mov
scas
xchg
sbb
jns
and
jl
mul
dec
jmp
push
popf
jnp
mov
aad
cmpsl
icebp
jae
sub
adc
add
inc
add
stos
adc
xor
cmc
addr16
rcl
inc
std
push
bound
pushl
rorb
testl
cmpb
dec
lods
data16
cmp
or
mov
cld
fcomi
push
adc
pop
or
sub
jnp
push
and
sub
dec
push
or
cmpsb
sub
mov
arpl
mov
mov
adc
mov
enter
ret
bswap
mov
jmp
xor
pop
pop
std
xchg
idivl
scas
das
mov
or
into
xor
mov
mov
push
pop
cli
pop
cltd
jae
jmp
pusha
ss
mov
clc
inc
jo
lds
cmpsb
or
adc
pop
stc
push
pop
arpl
lock
jmp
insb
decl
inc
movsb
mov
xchg
inc
out
ret
lea
mov
in
jno
sbb
outsl
leave
in
jle
scas
xchg
aaa
xor
pop
sbb
push
gs
test
adc
pop
and
insl
leave
xchg
pop
dec
sti
bound
inc
rcr
movsb
loope
mov
mov
sbb
adc
pop
jmp
xchg
bound
aaa
xlat
mov
or
fcom
lret
mov
cmp
js
test
stos
aad
mov
aam
inc
push
dec
repnz
mov
in
shll
add
cmp
jno
rcll
aam
cli
fcomps
test
in
pop
mov
in
fidivs
andb
inc
fwait
xor
std
fcmovnu
xchg
scas
jbe
pop
xchg
into
mov
sbb
dec
sets
arpl
mov
push
ljmp
in
lahf
ret
mov
sbb
decb
les
outsl
cmpsb
fcmovne
dec
arpl
outsl
sub
and
add
pop
pop
nop
pop
mov
sub
mov
fwait
sub
insb
pop
out
sahf
ljmp
std
scas
mov
movl
int3
addr16
cmp
subl
dec
shlb
stos
sub
test
xor
fists
xor
sub
dec
adc
and
pop
xor
repnz
into
call
lcall
pop
stc
inc
sbb
outsb
sub
mov
or
xchg
in
loope
and
cmp
sbb
xchg
adc
push
neg
push
pop
sti
jecxz
fsubrs
sarb
sub
icebp
mov
fldt
mov
ret
fwait
mov
xor
jae
xor
jbe
jle
push
adc
pop
aas
ror
sarb
bound
ljmp
shrb
movsb
lods
lea
sahf
imul
dec
xor
or
test
daa
out
mov
mov
and
mov
hlt
in
sbb
shlb
add
ror
dec
cli
pusha
pop
cmp
mov
subl
inc
sub
sbb
divb
mov
call
mov
jecxz
pcmpeqd
xor
arpl
pop
pop
xchg
mov
dec
out
jge
aaa
stc
jns
cmpsl
push
call
jmp
dec
cwtl
fwait
pop
das
in
or
lock
jns
test
mov
inc
mov
xchg
cmp
sbb
fidivl
js
lods
cmp
add
cmp
out
in
cs
sub
lret
scas
push
mov
xor
icebp
mov
testl
mov
push
sahf
imul
mov
inc
in
lock
ljmp
jns
mov
sub
shr
inc
flds
cli
add
data16
int3
mov
lds
push
inc
push
mov
cs
inc
inc
sbb
aaa
gs
outsl
xchg
icebp
cmp
pushf
mov
inc
inc
xor
push
mov
shlb
lds
gs
fnstcw
pop
pop
addr16
and
inc
insl
test
sbb
pop
sub
loopne
loopne
add
loopne
or
and
sbb
xchg
rclb
push
leave
shlb
ds
sub
insb
mov
cs
or
xor
pop
sub
or
scas
in
mov
or
aad
xor
movq
and
in
ja,pt
lahf
out
pop
roll
push
bnd
fildll
push
push
mov
sbb
pop
test
ja
leave
pop
aad
mov
inc
clc
add
jecxz
sub
movsl
add
mov
sbbl
cli
xchg
push
movsb
xchg
or
or
fdiv
imul
or
imul
aas
cmc
jae
jge
mov
hlt
push
cmpsb
or
insb
jp
xor
xor
cmp
mov
fs
bnd
xor
nop
out
inc
dec
or
stos
lea
mov
loop
ss
and
test
or
push
into
sub
in
push
aaa
cwtl
inc
mov
mov
out
js
hlt
icebp
clc
inc
cmp
mov
out
mov
sbb
pushl
xor
gs
add
mov
lods
ret
jb
xor
adc
imul
and
fmul
pusha
dec
cmp
scas
dec
or
lret
lea
pop
or
jno
ja
mov
mov
xlat
xchg
xchg
push
lret
insl
push
inc
push
fcmovu
inc
cmpsl
out
sbb
rcll
mov
into
daa
sbb
jge
inc
adc
jae
dec
xchg
daa
test
sbb
pusha
call
add
test
inc
dec
mov
add
sub
or
dec
insl
out
outsb
leave
repz
aam
insl
aad
subl
es
in
shll
and
incl
outsb
nop
jle
jp
cs
pop
mov
jl
fmul
ljmp
lahf
notl
jns
xor
mov
xor
in
xchg
xchg
popa
popf
gs
mov
mov
push
repnz
dec
mov
enter
aad
cmp
and
dec
stos
les
icebp
add
xchg
lea
loope
out
mov
push
mov
sub
mov
aaa
cmp
aad
sbb
aam
jl
jmp
mov
fsts
jl
sub
repz
shl
and
jne
mov
add
stos
das
dec
add
fstps
cmpsb
pusha
or
jg
pop
adcl
push
mov
imul
xchg
fsts
mov
and
cwtl
mov
inc
jo
mov
fstl
mov
or
fucom
dec
jge
popf
hlt
test
das
daa
sarb
sbb
div
mov
ljmp
mov
dec
mov
inc
in
sbb
das
jo
lret
push
add
push
cmpsl
and
lock
sub
test
movsl
fcomps
int3
cmp
rcll
and
clc
out
js,pn
pop
stos
push
xchg
clc
mov
arpl
xchg
inc
inc
mov
cli
pop
xchg
sbb
cmp
jl
divl
add
arpl
lret
mov
and
xchg
mov
lods
xor
xlat
xor
and
push
imul
inc
or
fwait
xchg
jb
push
or
ds
mov
cmp
cmpsb
stc
or
push
ror
imul
sbb
pop
and
xchg
pusha
cmp
sub
fistps
sub
xchg
pop
inc
filds
test
mov
mov
pop
arpl
andb
loop
mov
inc
mov
pop
xor
aam
pop
mov
stos
mov
and
pop
dec
insl
or
pop
dec
dec
std
and
nop
or
std
dec
insb
sub
es
mov
pop
sbb
sub
nop
sbb
iret
ljmp
fnstsw
stos
sbb
pop
xor
push
ljmp
jg
mov
cmp
jge
mov
dec
jmp
and
push
in
xor
ja
and
or
xor
sub
in
xor
into
into
push
mov
push
xor
popf
int3
mov
jns
insl
jno
stos
xor
push
jb
push
icebp
rorb
add
cmp
gs
mov
shl
cmpsb
inc
je
jecxz
mov
popf
movsl
jnp
push
add
dec
lea
push
pop
push
dec
iret
xor
pusha
mov
lret
mov
push
gs
jecxz
pminsw
inc
aam
pushf
int3
hlt
jg
mov
xlat
mov
movsl
fninit
pop
mov
idivl
in
xor
nop
subl
addr16
push
fistpl
and
push
mov
mov
pop
nop
pop
pop
bnd
add
jo
arpl
cmp
js
lahf
inc
sbb
dec
and
cs
mov
jge
xchg
rcll
mov
sbb
jae
dec
nop
test
or
dec
inc
cwtl
int
pop
es
out
fiadds
in
adc
cltd
xchg
adc
adc
test
fwait
movsb
mov
repnz
xchg
mov
mov
mulps
je
cmp
mov
xchg
cli
and
mov
fiadds
pop
sub
shlb
add
jg
mov
adc
sbb
mov
mov
sub
iret
mov
in
mov
hlt
fisttpll
sub
or
aas
mov
inc
xchg
dec
ja
mov
pop
mov
mov
lock
movsb
push
repnz
es
cmpsl
inc
sbbb
add
adc
pop
jecxz
mov
mov
addl
ss
sbb
adc
push
mov
mov
adc
sub
insb
cmp
xchg
lret
sub
inc
pop
testb
fsubs
adc
dec
rcrb
and
xchg
push
ret
fcmovnu
xor
in
pusha
jmp
iret
jg
or
outsl
ret
aaa
aas
arpl
out
inc
fistpl
outsb
mov
xor
mov
das
add
out
or
popa
jmp
pop
jle
or
cmp
add
loope
les
sub
fadd
xlat
jae
ficompl
stos
pushf
fistpl
loop
mov
enter
icebp
sarl
mov
lcall
cmp
das
adc
lea
lods
ret
sahf
sbb
leave
cmc
xor
add
lds
dec
lods
incb
rorl
add
test
leave
mov
xor
sbb
loop
stos
pop
mov
sbb
sbb
xchg
in
inc
and
and
inc
pop
call
xchg
loop
add
iret
iret
fisubrs
push
mov
je
mov
xchg
out
fiaddl
enter
fildl
das
xor
sti
cmp
mov
jnp
mov
and
xor
push
xchg
cli
add
xchg
xor
mov
mov
pop
shl
push
scas
fwait
inc
clc
pop
les
ds
cwtl
jge
push
add
add
adc
inc
mov
push
gs
das
movsl
add
xchg
stc
fstpt
jnp
jae
cmp
xor
sub
sbb
and
cmp
call
shrl
and
loopne
loope
jbe
mov
dec
std
hlt
cltd
mov
outsb
out
pop
inc
cmp
divb
jle
mov
or
jne
aam
pop
pop
in
push
push
add
or
into
sub
inc
int3
adc
xor
or
pop
in
inc
cmp
inc
mov
lock
mov
insb
and
adc
dec
push
adc
imul
jae
lcall
shlb
adc
pop
mov
mov
insl
cmp
add
and
loop
sti
cli
xchg
jbe
sbb
cmc
std
ljmp
mov
rcrl
cmp
inc
and
jnp
xor
dec
insb
cwtl
clc
pop
out
cmp
mov
xchg
fisttpll
mov
lret
sbb
mov
mov
leave
loope
stc
pop
sbb
hlt
and
mov
sbb
fwait
mov
mov
push
adc
mov
and
jno
sti
fadd
pop
xchg
bound
mov
enter
push
fildll
es
jbe
push
fcompl
icebp
dec
ss
inc
pop
push
notb
iret
insb
mov
sbb
rcll
lods
daa
mov
enter
mov
pop
jp
incb
push
lds
sub
cmp
add
add
pushf
rolb
test
push
sbb
icebp
stos
adc
sub
shll
jmp
lods
or
push
and
sub
fcmove
sbb
jnp
pop
jle
inc
fbld
cmpsl
out
repnz
iret
fistpl
ja
xlat
inc
mov
into
ss
cmc
imul
sub
inc
shlb
fwait
out
xor
aas
ljmp
cmp
cwtl
popa
cmpl
mov
into
or
movsl
mov
push
dec
int3
push
or
add
mov
or
pop
sbb
sbb
lock
ret
xor
dec
jecxz
xor
int
out
or
inc
cmp
rolb
sbb
or
jmp
mov
cwtl
in
clc
rcll
sub
and
insb
hlt
lcall
mov
xlat
jb
adc
mov
fstl
stos
push
add
sbb
popf
and
scas
in
cmp
outsl
sbb
cwtl
loop
jbe
arpl
hlt
xor
mov
int
out
rclb
ret
and
adc
lds
enter
sub
and
fldcw
pop
out
or
imull
hlt
xor
sbb
jp
or
shrl
ljmp
lahf
shll
jmp
push
cmp
ret
and
jb
stos
sub
into
adc
cmp
push
push
or
add
add
mov
aas
sbb
inc
add
and
jecxz
or
jge
mov
je
cmpl
or
jns
fisubs
jb,pt
jae
movsl
daa
in
mov
imulb
push
jo
add
sahf
rcrl
sub
xchg
cmp
pop
test
mov
lock
mov
mov
lret
sub
fists
sub
xor
test
add
fnstsw
loop
jnp
lock
movsl
scas
sahf
push
mov
push
hlt
stc
dec
das
push
xor
cltd
adc
insb
movsb
stos
jae
test
dec
dec
in
mov
sti
cwtl
pop
cmc
pusha
jno
sub
mov
lods
pop
nop
xchg
lds
xor
insl
push
pop
sub
mov
je
jnp
addr16
pop
and
xchg
xchg
mov
and
fldl
pushf
push
xlat
cmp
add
inc
inc
fmulp
add
hlt
incb
pop
inc
mov
in
sarb
xlat
push
or
xchg
inc
jno
mov
mov
std
push
pop
sub
aaa
bound
outsl
cld
and
loop
mov
mov
cmp
and
inc
rcrb
cmp
mov
cmp
or
xchg
sbb
das
xor
inc
sbbl
inc
mov
test
jmp
addb
test
ljmp
scas
out
jge
sbb
push
xlat
adc
popl
sub
push
or
adc
les
fsts
or
sbb
push
and
movsl
mov
jo
ss
dec
mov
jge
into
mov
mov
xchg
mov
cmp
inc
sub
push
pop
xor
mov
adc
sbb
std
xchg
in
xor
push
out
cmpsb
out
xchg
daa
aas
jmp
pop
xchg
add
rorl
sahf
dec
jg
xor
sbb
jae
and
jae
jb
out
std
or
into
mov
adc
aas
sbb
sbb
dec
mov
add
in
mov
xor
xchg
mov
rorb
ss
lock
out
icebp
xor
rclb
movsl
call
jg
ljmp
xor
jo
rcl
popl
dec
lahf
and
jge
jl
pop
test
aas
adc
stos
push
stos
dec
jbe
mov
dec
sarl
enter
mov
je
test
xlat
fldt
into
inc
jne
mov
jbe
push
adc
add
xchg
and
mov
sbb
test
jbe
fnstsw
pop
leave
mov
stos
push
inc
fists
and
inc
cmp
cmp
insb
ljmp
push
add
test
adcb
adc
xchg
push
nop
cmc
das
outsl
mov
jo
int
or
and
mov
rcll
mov
xchg
cmp
pop
jno
mov
xor
icebp
shll
mov
and
popa
test
mov
stc
subb
cs
cmp
adcb
outsl
std
cli
push
rol
stc
sub
xor
mov
aas
std
cmpsl
pop
mov
in
fcoml
scas
jge
stos
add
xor
in
out
repz
mov
push
frstor
sub
or
stos
add
jnp
scas
mov
sub
dec
ljmp
or
dec
enter
insl
pop
sbb
push
repnz
mov
adc
xor
or
pop
adc
popa
cmpsb
inc
into
sbb
std
stos
sbb
or
jo
push
or
or
xchg
jne
xchg
lahf
scas
mov
loope
mov
out
aaa
cmp
call
std
and
aad
das
sub
in
mov
sub
add
out
sub
insb
ds
loop
shl
outsb
fisttpl
mov
xchg
lahf
jbe
js
stos
test
pop
mov
xlat
dec
fs
arpl
jmp
sbb
sub
or
loop
je
and
mov
repnz
and
imul
xor
ret
xchg
insw
jb
shrl
std
jns
out
bound
add
cmp
cld
pop
sub
inc
js
daa
aas
mov
add
inc
in
adc
incl
xlat
xchg
js
and
or
or
sbb
mov
cmpsb
jns
ja
jl
mov
fisubs
stc
ja
incb
fbstp
xchg
lods
mov
in
push
jp
adc
fmulp
lods
lcall
aam
in
mov
adc
cmp
jbe
jge
cli
xchg
icebp
aas
dec
pop
subl
inc
aam
push
mov
int3
mov
push
sbb
lods
repnz
aas
sarl
cltd
adc
pop
stos
push
fs
mov
repnz
sub
xchg
pop
pop
inc
int3
xchg
cmp
clc
push
fcoml
or
es
ficomps
jno
pop
popf
shll
dec
xchg
mov
fbld
nop
adc
shrb
jae
jbe
mov
and
sub
push
mov
and
or
dec
push
mov
lock
jnp
sub
jo
sbb
add
int
adc
mov
adc
adc
aam
inc
stos
outsb
daa
test
pop
and
loopne
ret
aas
jle
inc
dec
cmp
insb
cs
or
pushl
inc
mov
mov
sahf
mov
mov
sti
jl
xor
enter
xchg
in
xchg
lds
cs
push
loope
adc
pop
mov
insb
dec
iret
sbb
inc
xor
ljmp
cmovo
fidivs
lret
gs
add
xchg
lea
xchg
outsb
adc
cmp
call
loope
mov
cmp
lods
es
push
call
ljmp
xor
add
push
les
jge
inc
hlt
into
xor
xlat
mov
mov
stos
loop
or
out
shl
mov
mov
jg
cmp
fcomps
loop
lahf
push
push
lcall
adc
nop
dec
pop
out
mov
aas
jge
pusha
addl
cli
inc
lods
jne
lcall
ja
adc
xor
mov
push
fidivl
rep
sbbb
sub
xchg
sbb
lea
pop
nop
cli
xchg
int3
lcall
das
jne
and
or
aam
imul
jmp
xchg
popa
and
es
fsubr
pop
divb
ret
xchg
jecxz
in
inc
lock
lcall
jns
mov
ret
lods
sti
xchg
jg
popf
divb
mull
mov
lcall
mov
pop
mov
aam
adc
and
insb
cmp
bound
sub
out
mov
decb
jg
es
add
mov
sbb
mov
pop
mov
pop
dec
adc
into
cmc
data16
and
addr16
lods
test
jle
sub
cltd
mov
jo
fcoms
arpl
popa
pop
pushf
or
cli
scas
aam
dec
fdivrl
xchg
ret
fidivrl
lock
out
fstl
lods
sub
bound
repz
adc
sahf
or
inc
hlt
cmpsl
les
add
xor
cwtl
xchg
out
fs
jmp
jno
mov
cmp
mov
je
sbb
lret
inc
shll
ja
mov
cmp
push
or
popf
leave
rcr
sbb
cs
or
push
cmp
aad
cmp
rcrb
adc
rsqrtps
aam
inc
jle
xchg
pop
fcmovbe
loop
jno
mov
lret
inc
mov
arpl
mov
sbb
imul
jmp
dec
mov
push
jnp
leave
icebp
outsb
sbb
enter
fs
push
xchg
or
push
push
fcmovne
add
ret
mov
mov
ret
hlt
ja
cmp
dec
test
jle
inc
sbb
pop
bound
cmpsb
jg
mov
ficoml
push
xchg
sarl
jb
adc
aas
adc
movsl
push
add
mov
push
push
cmp
cmpsl
cmp
insb
inc
pop
call
mov
stc
movsb
cmc
xchg
int
je
imul
lret
xchg
lret
cmc
lea
mov
pop
mov
movsl
cmpsb
cmpsb
in
sbbb
repz
sub
sub
dec
seto
push
sahf
mov
repnz
xchg
inc
sbb
hlt
pop
leave
pop
rorl
add
stos
inc
xchg
fisttpll
xchg
mov
mov
mov
pop
mov
sbb
bound
push
mull
lret
popa
insl
repnz
lock
scas
hlt
inc
sbb
mov
push
pop
pop
push
xchg
std
adc
inc
jno
pusha
data16
test
in
frstor
call
ret
jmp
or
add
sub
movsb
repnz
pop
mov
cmpsl
inc
das
jmp
stos
frstor
clc
enter
ret
adc
jae
push
sub
lcall
cltd
mov
pop
inc
mov
or
sub
data16
xor
gs
cmp
hlt
pop
jae
andl
mov
cmp
xchg
stc
mov
imul
jae
or
dec
rcr
gs
pop
sub
leave
jne
mov
insl
das
jp
inc
imul
push
pop
mov
scas
pop
ja
and
dec
int
sub
add
lcall
inc
jg
or
out
mov
push
lea
scas
les
push
push
sub
pop
push
lret
lea
lret
sarb
sub
negl
add
hlt
mov
sub
aam
jnp
xchg
outsl
dec
or
xchg
adc
push
sbb
andb
daa
shl
jbe
mov
out
cmp
int3
adc
fxch
outsb
inc
ret
jbe
shll
js
ds
inc
movsl
stos
adc
mov
in
pop
add
push
aas
sub
icebp
call
sbb
pop
ror
sbb
outsl
pop
mov
adc
aam
inc
cld
fwait
mov
xor
std
ret
mov
insb
push
jmp
shll
popa
push
mov
dec
test
pushf
push
and
push
lret
std
loopne
hlt
jae
mov
adc
mov
dec
data16
or
sarl
mov
fs
out
mov
cmp
inc
aam
push
loop
dec
cs
add
jae
push
cs
jae
push
push
sahf
push
insl
in
adc
rol
shlb
scas
imul
sbb
xor
sbb
in
sti
xchg
aas
add
stos
push
sahf
or
xchg
cmp
mov
and
mov
out
aad
aaa
sbb
mov
sbb
and
lock
daa
sub
mov
popa
push
subb
ja
or
pop
rorb
sbb
decl
cmpsb
out
pushf
add
inc
jns
data16
lods
jo
cwtl
cld
push
hlt
ror
mov
aam
jnp
jg
pop
add
and
je,pt
push
xchg
cmp
std
adc
movsl
scas
xor
push
mov
cmp
and
mov
pop
ret
arpl
xor
pop
xchg
in
into
and
add
mov
mov
lcall
dec
aam
xor
sub
add
sarb
rcll
lret
add
loopne
adc
adc
mov
push
stos
lock
mov
stos
fbld
cmpsl
jnp
adc
or
sbb
cmpsl
and
loop
sbb
xchg
xchg
or
or
add
int
mov
shl
pop
cmp
test
test
fcmove
push
imull
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
fdivs
orl
sbbl
pop
sub
imul
jp
mov
inc
hlt
dec
out
jae
cmp
sbb
test
jg
test
add
mov
es
test
adc
xchg
in
dec
jp
jne
leave
cmp
cmp
pop
add
dec
inc
es
mov
enter
ret
repz
xor
sbb
arpl
inc
loope
and
sub
mov
cwtl
lea
outsl
adc
jmp
push
movsl
dec
lods
xchg
mov
xor
xor
hlt
in
pusha
pop
dec
aad
ja
lret
das
mov
and
sbb
push
jge
dec
stc
lcall
int
test
imul
xchg
movsb
mov
and
mov
lea
mov
inc
in
popf
fstpl
mov
sbb
gs
xor
hlt
inc
mov
ret
mov
das
je
jge
lret
fs
jae
pop
xchg
lods
mov
xor
rcl
xchg
cs
xchg
data16
push
or
pop
inc
push
and
lahf
push
divb
hlt
inc
shll
pop
test
xor
es
mov
or
pushf
jge
jne
lds
ret
aad
and
mov
add
xchg
push
loope
add
mov
inc
xor
popf
push
clc
sbb
inc
xchg
jne
data16
sub
and
push
loopne
mov
sbbl
or
loopne
nop
pushl
test
sbb
add
nop
fiadds
aaa
stc
mov
popf
add
push
push
cli
lret
leave
mov
jl
ja
mov
jl,pn
mov
fs
xor
add
mov
testl
into
hlt
mov
movsl
cmp
mov
adc
mov
xor
lahf
icebp
cwtl
sub
popa
ret
inc
ss
clc
imul
or
cmp
xchg
pop
popf
sar
addr16
iret
xchg
xchg
mov
push
insb
push
jbe
dec
or
repnz
fcmovb
xchg
imul
mov
dec
roll
clc
subl
je
push
dec
ja
es
movsl
inc
jp
clc
xlat
das
or
sub
inc
lods
xor
lcall
test
pushl
fidivs
adc
sbb
pop
lods
divl
outsb
arpl
cmp
jmp
dec
cmc
flds
push
sub
in
aad
orl
shlb
js
inc
mov
fcomps
lret
ljmp
ds
mov
ret
and
sbb
pop
jae
xor
or
jmp
mov
stos
int
push
ds
cltd
pop
cmp
push
fdivrl
outsl
dec
xor
push
mov
test
push
sbb
or
jo
dec
or
shl
sub
loop
add
call
sbb
in
sub
or
sub
dec
insb
mov
cmc
jnp
xor
decb
inc
push
adc
into
repnz
fisubl
subb
or
or
mov
push
in
jns
inc
rolb
rclb
dec
fstpl
outsl
call
stos
mov
add
cs
bound
cli
rorb
rcr
jnp
push
outsl
sbb
ljmp
xchg
sar
mov
sbb
xchg
adc
sbb
adc
sub
add
ljmp
mov
xchg
mov
lock
push
push
dec
mov
aaa
inc
nop
es
enter
jecxz
loop
push
mov
xor
insl
cmp
mov
cmp
pop
test
in
cltd
lock
dec
lret
lock
or
cmp
daa
roll
ds
fidivrs
mov
xchg
and
scas
or
mov
mov
cs
cmp
jb
ss
pop
mov
sub
fdiv
sahf
cmp
js
cmpsb
dec
mov
pop
movb
push
xlat
out
enter
clc
movsl
imul
addr16
xlat
inc
test
mov
and
sub
cmpb
or
mov
pop
jmp
mov
imul
js
push
dec
mov
pop
cld
lahf
cmpsl
adc
adc
adc
sahf
pop
repnz
adc
addr16
int3
pusha
adc
push
cmp
xchg
jecxz
mov
inc
mov
push
add
jle
pop
and
cli
repz
or
or
aaa
repz
adc
cmpsl
inc
jb
ret
movl
sti
les
mov
add
es
data16
mov
dec
lea
adcl
jb
mov
cltd
test
inc
xchg
psllw
icebp
and
lcall
and
pushf
cmp
andl
cli
jmp
mov
sbb
inc
insb
mov
sti
or
insl
icebp
shlb
mov
lret
add
mov
movsl
inc
dec
xor
push
ja,pn
or
adc
outsb
mov
int
inc
mov
scas
cmp
sub
pop
out
ja
or
in
fstpt
js
sub
xchg
and
xor
fmulp
mov
test
roll
inc
jmp
push
pop
out
arpl
into
inc
add
mov
inc
mov
xor
dec
mov
xchg
or
push
sub
xchg
cmpsb
mulb
and
test
lds
sbb
loopne
icebp
scas
lods
fdivr
loopne
and
in
repnz
inc
mov
int
pop
idivl
dec
pushf
sub
es
push
cli
mov
jg
das
xchg
addr16
dec
mov
stc
cmpsl
pop
pop
dec
jae
test
cli
sub
mov
pop
mov
cmp
sub
mov
jnp
loopne
adc
std
nop
stc
outsl
inc
pop
cli
sub
mov
in
stos
cmp
les
mov
xor
jb
lret
xor
sbb
loope
mov
xchg
out
call
imul
pop
push
aas
and
mov
jbe
fimull
arpl
xchg
mov
pop
push
nop
cltd
xchg
pop
xor
test
sti
dec
or
fisubs
pop
pop
cmp
lahf
and
jl
cmpsl
in
sbbl
shrb
xor
mov
pop
into
pop
sub
int
out
add
mov
pop
push
mov
out
out
gs
ljmp
divl
fistps
jb
popa
add
scas
xchg
xlat
out
fistl
cmpsl
mov
out
out
jnp
aaa
pusha
jl
dec
sub
adc
add
jbe
inc
mov
ja
pop
pop
rcll
fcomp
mov
adc
fcomp
lret
push
sbb
sbb
dec
popa
rcll
and
inc
daa
sub
popa
aad
jle
xlat
inc
loopne
mov
loop
push
sbb
movsb
aam
js
movsb
cwtl
dec
mov
shlb
iret
xchg
ret
nop
mov
mov
inc
rol
daa
and
mov
hlt
shll
pushf
and
negb
push
leave
sub
js
adc
xchg
fnstcw
jnp
mov
imull
cmp
gs
aad
push
sub
pop
mov
pop
rcrb
cmpsb
dec
shrb
jo
fisubs
gs
pop
pop
sub
inc
add
int3
cmpsl
inc
push
mov
adc
cmp
orl
xor
insl
gs
cltd
cld
out
mov
shll
arpl
mov
adc
adc
mov
jo
mov
xchg
outsb
inc
mov
push
mov
pop
iret
xor
mov
in
mov
gs
arpl
sub
out
roll
ds
cmpsl
std
iret
int3
inc
mov
fimuls
adc
push
addr16
dec
sbb
repnz
std
inc
out
mov
stos
mov
fisubl
xchg
sar
adc
jg
fnstenv
mov
jo
pop
call
arpl
xor
sbb
sbb
cmc
mov
push
mov
les
std
sub
in
lds
inc
bound
icebp
sub
inc
iret
loope,pn
stos
and
mov
pop
imul
mov
dec
cmp
rcl
test
sub
orb
jmp
cwtl
aas
mov
shlb
outsb
les
xchg
sbb
push
push
jns
inc
lds
cmp
std
dec
xor
xchg
int3
mov
jmp
sbb
in
imul
xor
lea
roll
push
into
wrmsr
movsl
sub
and
les
jge
or
xchg
inc
jp
sbb
fnop
jecxz
sbb
cltd
ret
sbb
out
cmp
pusha
push
push
mov
je
in
loope
mov
je
stos
cltd
mov
dec
and
int3
adc
xor
mov
jge
outsl
inc
mov
push
push
adcb
mov
mov
cmp
loope
add
int3
sub
lret
stos
popf
popa
xor
or
icebp
push
lret
mov
add
ss
inc
mov
push
sub
idiv
dec
fwait
and
cmp
sub
or
lea
shlb
shll
push
daa
sti
cwtl
lcall
lods
mov
cmc
push
ljmp
cmc
cmc
push
and
sbb
rcrb
pop
cmpsl
mov
push
adc
cmpsb
add
fucom
ret
mov
or
dec
xor
daa
mov
bound
sbbl
mov
pop
fcomps
lods
xchg
cmp
mov
loopne
jae
lods
loope
or
dec
jb
popa
inc
js
pop
int
mov
aas
shrl
sahf
repz
push
cmp
pop
stos
cmp
sub
shll
or
imul
lea
mov
mov
int
push
scas
mov
aaa
xchg
lahf
pusha
add
aas
mov
mov
ret
lcall
and
enter
test
cmc
cs
xor
fstps
dec
dec
jns
inc
pop
mov
pop
jno
sbb
mov
clc
xchg
ds
inc
popf
push
lret
jbe
pushl
stos
add
add
aam
adc
xchg
movsb
add
xchg
pop
fcoms
pop
mov
dec
push
aaa
mov
mov
aam
lahf
loopne
mov
std
add
xor
push
sarb
sahf
pop
jo
fisubrs
cmp
nop
cld
subb
dec
ffree
icebp
mov
frstor
cltd
add
jge
pushf
mov
cs
loopne
dec
xorl
lea
insb
push
mov
xor
movsb
jecxz
gs
mov
popa
loop
mov
gs
fcompl
aas
dec
ror
xchg
popf
ss
sub
dec
aam
ret
jne
xchg
mov
ret
xchg
xchg
mov
pushf
rolb
push
sbb
ficoms
rcr
scas
flds
sub
or
decb
add
mov
adc
cs
or
lcall
push
mov
je
les
test
push
push
popa
insb
xor
or
xorb
xor
int
jbe
pop
int3
lock
test
arpl
stc
js
repz
adc
stc
decl
das
mov
lret
mov
mov
leave
cmc
xor
test
mov
jmp
jae
dec
fwait
mov
jle
dec
and
push
loopne
jb
push
cmp
stos
mov
xchg
xchg
les
insl
xchg
sub
push
xor
loope
mov
js
add
push
in
push
inc
pop
push
mov
sbb
mov
cs
inc
int3
jb
cmpsb
push
fldcw
lea
ljmp
lods
notb
das
jae
pop
pusha
add
out
adc
mov
cwtl
pop
aas
fmul
enter
lret
xchg
lods
imul
js
mov
xor
jg
push
push
pop
popa
je
jge
shl
mov
cmpsl
dec
sub
filds
adc
jmp
lock
inc
cmpsb
notl
shrb
pusha
int
pusha
lods
lahf
imul
sbb
mov
mov
push
aad
test
mov
out
fisubs
lahf
pop
sbb
loopne
xor
mov
sbb
or
push
les
lret
and
push
clc
cmpb
movsl
test
bound
stos
lahf
push
in
and
outsl
pop
dec
sahf
scas
and
fstpl
movsl
icebp
lret
push
idiv
inc
outsb
aad
out
cmp
loopne
das
pop
popf
xchg
icebp
mov
ror
dec
inc
sbb
cli
pop
inc
pop
jg
adc
lahf
addr16
and
add
sub
dec
repnz
pushf
mov
adc
mov
sti
and
rcll
dec
arpl
jnp
hlt
mov
xor
xor
or
xchg
clc
push
das
ds
cs
cmp
inc
sub
push
xorb
push
cmp
test
movswl
out
jae
pop
inc
popf
iret
iret
or
dec
les
jns
imul
cmpsb
subl
enter
rorb
sub
inc
pop
jns
jbe
jg
xor
inc
adc
ljmp
iret
add
dec
jo
jno
test
mov
lret
call
rcrb
lcall
stos
loop
inc
testb
test
adc
fcom
or
mov
mov
xchg
fucom
xchg
repz
into
fmul
bound
idivb
arpl
jl
jp
daa
mov
cmp
and
repz
mov
mov
push
xor
xchg
adc
jne
sub
mov
lahf
xchg
lock
movl
data16
not
movsl
or
lds
in
dec
ja
jmp
test
push
shrl
aad
xchg
mov
mov
repz
int
mov
mov
mov
inc
int
das
jo
aam
dec
das
repnz
sub
scas
fmull
out
stc
adc
mov
int
jge
dec
push
fisubs
cmp
inc
outsb
push
mov
xchg
mov
adc
pop
aam
dec
inc
lret
lea
call
inc
add
cwtl
in
cli
mov
or
cmp
adc
push
or
xchg
test
push
xchg
xchg
lods
pop
out
jno
fisubl
jge
js
imul
out
mul
mov
scas
inc
into
shr
or
lds
jmp
fcomps
cs
add
inc
mov
out
rcrb
mov
xor
mulb
and
sbb
mov
inc
add
call
dec
mov
jl
lds
push
xor
push
inc
lcall
inc
pushf
pop
sbb
sub
mov
push
or
stos
scas
js
imul
pop
sbbb
iret
inc
imul
aas
scas
insb
cmc
jle
cmp
mov
sub
pop
adc
js
mov
loope
mov
daa
mov
lds
cmp
inc
pusha
inc
push
mov
xchg
adcl
fwait
lock
push
mov
loopne
dec
lods
mov
cltd
enter
or
cwtl
enter
lret
insb
add
or
out
fdivp
movl
mov
xorl
lret
lods
jmp
arpl
jle
or
cmpsb
shlb
clc
add
sbb
js
push
inc
enter
jg
and
ljmp
jne
daa
cmpsb
jb
xchg
mov
mov
not
dec
and
inc
dec
popa
pop
mov
xorl
ret
fildl
cltd
mov
add
jns
movsb
ja
pusha
out
fucomip
mov
sub
stos
cmc
es
dec
sub
ljmp
mov
jns
and
outsl
mov
xlat
and
and
sbb
stos
popa
sbbb
pop
xchg
jle
jl
cmp
sbb
push
jbe
dec
jbe
sub
sbb
push
cli
into
adc
lods
or
mov
in
cmpsl
mov
sbb
incl
xor
fldenv
cmpsb
daa
jns
mov
jno
mov
and
cs
sub
scas
es
xchg
andb
hlt
enter
inc
inc
mov
enter
cs
gs
es
fstpt
ljmp
jl
push
and
mov
xor
sub
jne
adc
sub
inc
xchg
mov
cmp
orb
inc
loop
arpl
stos
in
aad
xchg
dec
test
aaa
mov
xor
adc
sub
mov
jecxz
add
xor
cli
and
cmp
dec
add
sub
adc
adc
push
add
int3
aas
sbb
fisttpl
pop
mov
push
mov
push
adc
out
sahf
test
push
sbb
cwtl
fbld
xor
loope
xchg
dec
arpl
mull
inc
xchg
xchg
pop
inc
push
and
sub
test
arpl
inc
aas
xchg
mov
leave
popf
mov
mov
int3
cmp
xor
hlt
push
sub
fsubl
es
imul
lods
add
mov
cmp
sarl
xchg
push
or
clc
jo
out
mov
fwait
xchg
or
popl
push
and
mov
cmpl
rol
mov
stos
repz
es
and
or
sbb
and
loop
pusha
js
loopne
inc
jno
fistpll
outsb
add
je
iret
inc
and
pop
lock
lods
lods
xchg
push
add
mov
fabs
das
pop
divb
fisubs
mov
mov
rcrb
xchg
mov
mov
pop
mov
test
mov
fs
out
xchg
das
jge
icebp
or
sbb
rcl
out
or
and
and
and
loopne
dec
xchg
or
add
jo
popa
outsb
cmp
loopne
mov
pop
pop
ljmp
sub
jge
xchg
push
mov
mov
sub
cld
icebp
loope
sarl
mov
mov
das
jbe
xor
dec
add
mov
repnz
mov
imul
test
or
pop
loopne
and
mov
sub
mov
enter
inc
xchg
in
test
add
pop
xor
mov
sti
mov
pop
adc
push
loope
insl
jp
hlt
ss
cmp
mul
push
sub
das
xchg
xchg
sub
push
xchg
into
dec
mov
xchg
mov
sbb
cli
adc
push
out
cmp
fadd
pop
call
pop
fsubrp
mov
fisubrs
mov
add
mov
and
mov
sub
jmp
andb
std
sti
inc
adc
out
xchg
and
push
xchg
clc
lret
cwtl
mov
dec
dec
aas
mov
mov
mov
or
les
add
jo
xor
invd
and
sti
lahf
push
cltd
test
sahf
adcl
sub
pusha
and
pusha
sub
push
adc
push
pusha
ret
sub
xor
mov
push
repz
jmp
mov
mov
imul
adc
jg
xor
xor
or
xor
mov
test
ja
stos
arpl
test
sbb
ret
loope
mov
adc
pop
cmp
idivl
jns
adc
imul
mov
or
pop
mov
xor
cmp
sub
mov
lcall
and
adc
pop
adc
lahf
outsb
push
ds
neg
lods
xchg
adc
neg
dec
jbe
xchg
lea
aad
cmp
mov
cmp
push
inc
and
cmp
pop
cmpsb
mov
push
notb
cmp
mov
loopne
shl
and
das
les
subl
cwtl
mov
sbbb
lods
aad
inc
or
sbb
sarb
xchg
popf
xchg
nop
inc
add
sti
cmp
jae
inc
adc
dec
insb
mov
jb
jno
filds
rol
mov
fsubs
xchg
mov
and
inc
addr16
jle
repz
jb
stc
add
mov
insl
lods
clc
in
jl
xor
ja
lea
pusha
cltd
sbb
mov
push
je
xchg
jl
mov
xchg
push
scas
sahf
arpl
pop
pop
test
mov
sub
cmp
scas
ljmp
mov
fldt
dec
or
pop
stc
lret
lds
jle
repz
scas
jne
sub
push
lods
inc
inc
mov
xor
cwtl
adc
push
outsl
fisubrs
adc
lret
or
notb
push
mov
mov
push
pushf
test
push
xor
bound
mov
popa
push
mov
mov
pop
dec
in
lea
fisttpll
fdivs
jp
in
xor
test
push
lret
shl
call
ret
lcall
hlt
mov
sarl
dec
cmp
cld
loopne
dec
lea
mov
nop
or
push
cmpsl
in
dec
das
std
xor
mov
fcomip
mov
mov
cmc
rcl
mov
inc
mov
cli
in
into
jns
fldenv
out
test
jecxz
pushf
fstps
stc
les
push
dec
cmp
push
add
cmpsl
xor
add
mov
xchg
out
jl
lea
lods
jmp
incb
mov
lods
cmp
int
pusha
push
or
push
pusha
add
repz
sub
mov
cmp
dec
fdivrs
adc
xchg
mov
cmc
jmp
test
inc
mov
inc
push
jg
dec
dec
clc
sub
or
adc
inc
sbbl
cmpsb
jns
int3
sbb
mov
inc
push
clc
mov
mov
nop
add
xchg
lds
xor
mov
jl
leave
dec
sahf
pop
jge
jbe
push
dec
mov
imul
mov
fcompl
outsb
xor
sbb
pop
mov
mov
in
xchg
hlt
jno
sub
xchg
in
dec
daa
add
ja
push
pop
cmp
push
jns
cmp
mov
cltd
jnp
or
push
sbb
push
add
jl
jno
pusha
pop
aam
lds
or
arpl
add
loop
pushf
pop
dec
cmpsb
pop
js
xchg
aas
add
add
pop
and
and
ljmp
add
sub
nop
pusha
push
mov
cmp
jg
mov
jg
or
sti
or
xchg
fldt
sub
cmp
cmp
leave
subb
aad
add
call
pop
adc
add
mov
stos
mov
mov
shl
push
or
loop
dec
mov
inc
pop
ret
push
jecxz
ds
jg
jnp
push
mov
xchg
cmpsb
mov
xor
sti
mov
rcr
adc
jmp
push
mov
sub
inc
sub
cmp
cmpsb
bound
out
and
sbb
dec
sub
mov
cmp
jmp
lret
add
enter
mov
insb
sub
cmp
inc
pop
pusha
iret
jnp
jb
push
sbb
rcrb
add
adc
fimuls
cltd
xor
fwait
in
je
into
repnz
mov
push
xchg
repnz
mov
mul
inc
mov
fists
addr16
mov
ss
aas
inc
or
fmuls
mov
mov
outsl
dec
sub
scas
gs
sub
xchg
jecxz
jbe
pop
test
loopne
lods
ficoms
add
in
mov
adc
mov
xchg
sbb
movsb
sub
leave
js
jo
adc
int3
call
fwait
mov
out
sub
cltd
sbbb
xlat
loop
adc
mov
inc
test
jne
dec
loop
xchg
xchg
pushf
cmpsb
out
jne
xchg
push
dec
add
jae
imul
sti
test
pop
repz
jp
jge
iret
and
jae
jae
shrb
adc
mov
dec
cmp
fisttps
je
test
cmp
fbld
pop
imul
movsl
ja
rorl
movsl
push
push
jmp
xor
adc
and
in
stos
pop
loop
mov
or
adc
inc
fildl
jbe
jle
pop
cmp
lret
adc
inc
loopne
call
outsl
add
jmp
cmp
mov
js
stc
push
test
cmp
cli
cmc
dec
mov
mov
push
dec
mov
or
jmp
call
mov
dec
sub
outsl
pushw
and
xchg
push
xchg
outsb
fstpt
loopne
loopne
dec
es
add
into
ja
xchg
in
push
fs
in
popa
mov
xor
mov
add
fbstp
xor
addb
mov
mov
es
stos
pop
fsub
fsubrp
outsl
inc
jbe
lahf
andl
cmp
cld
jg
jb
mov
pop
inc
insl
lods
jp
roll
mov
add
sub
jb
pop
mov
xlat
inc
mov
mov
sahf
call
mov
or
in
push
fidivrs
sub
rcrb
cld
xor
hlt
fcoml
mov
movsb
movsb
inc
jb
push
mov
mulps
mov
enter
or
popf
pop
jl
fwait
and
jle
mov
pop
adc
push
sub
pop
cmp
push
sti
repnz
arpl
in
sub
dec
xor
add
mov
shll
cmpsl
pop
pop
mov
dec
xor
sbb
mov
xor
nop
jns
xor
push
dec
clc
dec
loopne
fists
ret
push
dec
and
gs
mov
stos
pop
pop
mov
test
jae
mov
push
loope
cltd
sbb
das
sub
mov
arpl
les
sbb
adc
movsb
andl
lret
popf
movsb
pop
xchg
xor
gs
mov
push
aaa
xor
jle
ror
sti
jbe
push
lcall
iret
loop
add
sub
xor
arpl
push
cmp
and
mov
into
sbb
repz
test
sub
and
mov
push
sub
pop
jo
daa
or
orl
and
sub
or
sarl
adc
push
daa
push
push
test
inc
xlat
xchg
adcb
pop
daa
mov
pushf
mov
cli
fsubrl
test
sbbb
xchg
push
xchg
or
pushf
shl
jge
sbb
jp
je
mov
cmc
mov
adc
push
fidivrs
jo
outsl
pop
mov
pop
pop
sbb
je
inc
pop
jg
fcmove
sbb
xorl
les
ljmp
and
pop
cpuid
rolb
mov
mov
addr16
jns
xor
jg
jp
pop
push
arpl
jmp
arpl
in
xor
add
imul
icebp
rcl
in
outsl
sahf
jge
mov
cwtl
push
jae
cmp
inc
test
and
iret
jbe
popf
sub
das
dec
addr16
aas
dec
aad
mov
xchg
and
adc
xchg
stos
xchg
xor
pop
cltd
jg
lea
test
imul
mov
xor
das
outsb
shll
or
sub
xor
aaa
pop
push
fstl
dec
sub
stc
inc
mov
stos
xor
stc
xor
jae
mov
movlhps
xor
lret
mov
sti
sbb
cmpsb
imul
push
dec
jecxz
int
dec
fcompl
insb
sub
xchg
pop
push
stos
loop
jl
xchg
xchg
pop
pop
xchg
imul
cmp
mov
dec
pop
aas
cld
mov
pop
or
out
or
pop
sub
pop
cltd
inc
lea
sbb
pop
add
fnstsw
cld
push
mov
shrl
notl
stc
popa
push
and
mov
cwtl
pushf
lcall
xor
cli
popf
test
push
fidivs
into
imulb
mov
repnz
pop
sub
lahf
cmp
push
aad
shlb
adc
pusha
fdivl
imul
jae
cmp
ss
jg
std
aam
cltd
inc
movsb
insb
popa
mov
ror
jmp
xor
lcall
in
scas
xchg
mov
adc
sbb
es
pop
aam
int3
or
mov
jecxz
insb
lea
pop
pop
fwait
int
dec
sub
fcoms
xlat
std
mov
sbb
push
mov
push
push
dec
fisubrs
dec
add
push
sti
mov
pop
lds
shl
and
insl
xchg
inc
mov
pop
cmp
or
sub
pop
test
je
les
pop
inc
or
xchg
mov
insb
inc
jnp
fsubs
mov
and
xchg
adc
out
sbb
std
cmc
loope
cmpxchg
in
cli
sti
rolb
mov
ja
xchg
fwait
popa
mov
sub
xchg
pop
hlt
and
mov
hlt
cmpsb
inc
movsl
or
or
dec
out
roll
xchg
fadds
xchg
xlat
ss
pop
xchg
shl
mov
or
popa
and
jp
test
adc
mov
ljmp
sbb
and
pop
popf
test
lds
test
jecxz
fs
sbbl
cli
and
pop
ret
outsl
push
fs
sub
or
dec
inc
pushf
dec
ret
fisttps
mov
mov
mov
mov
pop
mov
push
mov
lret
push
inc
mov
adc
cmc
or
fdivl
mov
lds
jo,pn
dec
pusha
xchg
sbb
pop
testl
les
fcomp
scas
mov
and
or
jne
push
loope
in
and
lret
std
addr16
daa
mov
rol
inc
data16
pop
or
addb
stos
mov
addl
lods
jecxz
cmpsl
ret
not
fs
jo
xchg
outsl
imul
aam
scas
adc
rorb
push
xchg
sahf
mov
popf
out
jns
lock
pop
mov
cmpsb
jle
notb
je
mov
jp
add
push
ljmp
push
mov
jle
outsb
pop
and
loope
mov
jg
out
rorb
jmp
aam
in
mov
js
outsl
mov
push
das
lsl
add
mov
mov
dec
bnd
ss
pushf
stos
or
xor
sub
push
jb
adc
lahf
faddp
cli
push
add
cmpsl
xchg
idivl
push
fsubrl
notb
xor
adc
adc
cmp
sbb
insl
popf
inc
test
lods
ficoml
lods
hlt
add
push
orb
add
mov
jl
inc
mov
shld
movb
xchg
push
pop
shl
std
addr16
sbb
push
xchg
jecxz
cmpsl
movsl
into
iret
pop
pop
cmp
mov
xor
cs
and
and
jns
push
push
mov
mov
pop
stos
insl
or
adc
jmp
popf
popa
jmp
jg
xor
pop
pandn
mov
jns
mov
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
outsl
clc
lret
fwait
daa
std
addb
js
sahf
fdivl
adc
adc
test
test
es
cmp
sarl
addb
inc
mov
enter
lret
cmp
andl
xchg
loope
push
lods
sbb
mov
sub
sbb
push
xchg
and
push
sub
jnp
idivl
push
mov
adc
aas
sub
sbb
int
fs
cmp
jnp
insl
cmc
or
jmp
dec
inc
out
in
or
push
jge
lds
movsl
leave
xchg
mov
pop
push
clc
mov
ja
dec
jne
fwait
xor
insl
lds
push
xor
or
inc
xchg
scas
push
call
mov
adc
and
into
sub
aaa
and
lahf
adc
cmp
and
or
lds
sub
movsb
mov
fildll
xchg
or
and
js
mov
cwtl
push
xlat
enter
mov
test
sbb
pop
addr16
inc
jae
push
popa
dec
mov
pop
hlt
fsubr
iret
or
aam
xchg
sar
cmp
in
movsb
lcall
xchg
sarl
clc
cwtl
push
sbb
jns
insb
xor
push
or
pop
jns
outsl
fwait
xor
repnz
orl
mov
mov
xchg
jecxz
mov
ja
sbbb
rcr
cmp
or
sbb
mov
inc
jmp
cmp
rcr
mov
sarl
shlb
loop
stos
jmp
shlb
ljmp
cmpsl
fwait
out
popa
adc
push
shll
ljmp
jmp
ds
xchg
insb
jb
or
sbbb
sub
movsl
push
sbb
test
push
xor
test
push
aaa
push
data16
lcall
push
jne
mov
lock
inc
fidivl
inc
add
sub
xchg
adc
adc
dec
bound
scas
push
je
push
or
in
jle
loop
sbb
gs
nop
daa
dec
dec
jne
leave
movsl
js
std
xor
repz
sub
clc
dec
xchg
ret
fists
rorl
fbstp
lea
push
pushf
xchg
jae
test
cs
push
cmp
ret
push
xchg
stos
and
bound
add
mov
leave
xor
pop
std
sbb
push
loopne
xchg
pop
xchg
sbb
iret
pop
clc
stc
mov
mov
ds
inc
mov
push
insb
cmpsl
adc
xchg
adc
cltd
enter
inc
xchg
stos
xchg
sub
mov
cmpsl
cmp
adc
sbb
bound
mov
psrld
xor
push
xchg
out
lret
jle
sub
inc
insl
arpl
sub
xchg
push
testl
sub
das
jp
loope
lds
movsb
and
mov
xor
sti
mov
jnp
push
and
adc
pop
shrl
cmc
jnp
in
clc
pop
or
in
lods
in
mov
into
adc
adc
cwtd
repnz
enter
popf
mov
push
ljmp
mov
fwait
pop
repz
out
sub
addl
or
cmp
das
rcll
xor
std
int
aas
or
push
lret
mov
mov
push
stos
push
and
pop
lfs
mov
imul
lods
in
sub
loopne
divl
xchg
or
fxch
xchg
cmp
mov
cmp
out
aam
lea
jmp
cmp
dec
xor
pop
sub
aaa
lds
aas
ret
sar
sub
inc
cmp
fists
xor
cmp
inc
jl
sub
cli
xchg
push
rorb
es
pop
adc
loope
pop
filds
sti
pop
inc
in
fwait
cmpsl
and
xor
push
cltd
repz
cmpsb
dec
hlt
in
or
adc
pop
cmp
xor
pop
mov
xorl
fs
hlt
andb
ja
pop
inc
mov
in
adc
add
push
das
mov
jae
andb
inc
clc
push
inc
xchg
ja
or
movsb
pop
mov
ss
cmp
aas
jne
clc
sbb
cli
jno
les
mov
and
aad
add
loope
sti
mov
lcall
stc
fs
aas
fbstp
mov
jp
lret
notb
pop
and
jl
loopne
fcompl
hlt
ret
mov
imul
nop
mov
insb
clc
loopne
jb
js
cmc
in
xor
call
popf
frstor
xor
and
push
cli
add
pop
into
push
xor
loope
rcll
push
fs
imul
stos
mov
adc
in
xor
cld
dec
push
mov
lret
shr
je
or
or
xor
test
push
xchg
popf
mov
nop
loop
jnp
xor
outsl
insb
leave
and
sub
iret
jmp
dec
pop
or
or
out
sti
push
outsl
pushf
xchg
push
and
pop
or
sbb
mov
nop
int3
jo
xor
inc
and
in
cmp
xlat
js
fwait
cmp
xchg
xchg
repnz
dec
adc
insb
mov
popf
subl
icebp
mov
sbb
sbb
cmpsb
pusha
es
and
push
out
inc
pop
adcl
xor
imul
push
pop
cld
sti
mov
adc
cmp
je
push
dec
push
nop
std
cmpsb
bound
or
aad
loopne
movsl
daa
jns,pt
lret
ret
into
push
clc
add
out
xor
sbb
mov
icebp
xor
rorb
adc
fisttpl
insb
and
loop
push
mov
in
test
dec
cmp
xchg
orl
xchg
ds
adcb
mov
jge
in
and
mov
pop
adc
leave
mov
shrl
push
jg
cwtl
daa
in
insl
sub
cwtl
jae
and
bound
ret
ss
or
ss
push
loope
in
add
jae
mov
insl
mov
cmp
xor
and
in
movsl
in
lret
inc
mov
mov
mov
ja
fptan
test
out
jge
lret
pop
xchg
add
dec
lock
repz
mov
pusha
scas
lahf
jl
daa
popa
xor
pop
into
jns
into
dec
mov
dec
push
push
xchg
imul
lods
xchg
xchg
xor
sahf
jge
test
lea
xor
repnz
aas
leave
push
stos
mov
sbb
mov
cmp
loop
or
mov
mov
dec
popa
shl
and
mov
imul
sbb
fcoms
hlt
mov
daa
xlat
repnz
sub
cltd
std
mov
lds
lcall
jp
dec
cs
sbb
fists
movsl
mov
cwtl
loopne
lret
cmp
xchg
mov
mov
mov
mov
in
psubsw
mov
sub
sbb
mov
fmull
jae
xchg
cmpsl
cmp
xor
les
stc
fdivrs
mov
or
pop
idiv
mov
mov
sarl
popa
lds
xchg
fcomp
rclb
xchg
cmp
mov
cmp
cmpsb
jmp
scas
imul
push
mov
or
xor
scas
mov
adc
push
mov
into
jb
mov
lret
add
je
icebp
cltd
js
sbb
cmp
loope
int3
sub
push
mov
scas
push
adc
pop
out
push
in
mov
or
mov
sbb
or
pop
jno
loope
adc
daa
arpl
loope
test
push
lcall
pop
sbb
cmp
out
push
fs
jbe
jge
or
cld
out
cld
mov
out
imul
xchg
adc
xchg
cmp
std
stos
add
cltd
mov
lea
inc
push
lock
into
sub
dec
stc
and
popa
pop
and
mov
rclb
out
std
es
jne
fnstenv
xchg
xor
mov
outsb
or
lods
mov
push
adc
ja
sub
jp
push
push
cmp
lods
pop
push
mov
lea
es
pop
iret
mov
or
arpl
stos
mov
xor
xchg
testl
cmp
and
lret
scas
cmp
jge
mov
movsl
mov
mov
jbe
lcall
not
out
jno
sarl
or
mov
mov
add
mov
mov
test
cwtl
pop
test
fsub
xchg
push
mov
xorb
pushf
push
jl
sbb
scas
sbb
mov
dec
jle
mov
repnz
aas
movsl
and
das
test
xor
lcall
jl
push
cmp
es
lock
mov
push
jg,pn
mov
stos
xchg
fadds
lea
xchg
mov
and
and
inc
mov
adc
in
ret
adc
inc
repnz
cmp
fistps
or
and
addr16
in
ja
loope
jno
mov
and
call
push
in
xchg
push
xchg
xchg
imul
cli
mov
sub
xor
repz
jne
and
imul
pushf
hlt
mov
gs
sub
adc
jnp
sub
push
push
mov
loop
mov
adc
cwtl
inc
js
fistps
or
clc
stos
sbb
stos
popa
mov
adc
inc
pop
mov
test
and
push
dec
mov
push
incl
mov
lea
pop
mov
jg
inc
nop
loopne
pop
push
add
add
flds
fsubl
movsb
ja
pop
movsb
xlat
je
and
pop
adc
and
ds
and
jb
bound
sub
sti
adc
arpl
jo
popa
adc
ret
pop
mov
jb
lret
outsl
pop
pop
aas
mov
ljmp
test
outsl
inc
imul
fldpi
sahf
push
dec
inc
shl
lahf
pop
int3
sbb
dec
dec
js
push
sti
outsl
shll
cmpsb
mov
in
xor
movsl
into
pop
push
and
loop
mov
jo
adc
xchg
divb
push
lock
shl
inc
jne
aas
adc
pushf
sbb
pop
iret
cmp
push
xor
mov
int
cmp
repz
fmulp
add
mov
xchg
aas
sbb
outsb
add
jl
sarl
cmp
mov
in
mov
pop
sub
xchg
stos
imul
jmp
xor
pop
cmp
iret
cli
movsb
cmp
sahf
cwtl
inc
subps
aaa
jae
pop
xor
daa
cmpb
cmc
mov
pop
lods
push
xor
add
push
dec
mov
sahf
in
scas
dec
adc
lods
rclb
inc
fs
pusha
je
int3
lods
mov
mov
test
rolb
jecxz
inc
idiv
ret
dec
lahf
sub
fs
out
and
lahf
jbe
xchg
cmp
pop
in
cmp
jae
out
jb
sub
sbb
add
jno
jle
sub
mov
test
and
and
mov
rorl
stos
cld
jae
orb
jge
imul
jmp
pop
jmp
xor
cmp
push
push
push
sbb
mov
add
or
insl
scas
lfs
cltd
sar
jmp
rorl
enter
sbb
in
pushf
lea
or
shlb
jo
jmp
sub
insb
inc
mov
mov
xchg
mov
xchg
roll
shl
mov
repnz
fucomp
aas
idiv
fldl
test
cwtl
adc
rorl
jmp
mov
cmp
cmp
inc
cwtl
xchg
add
pop
cli
aad
xchg
or
lcall
inc
fs
stos
pushf
xchg
popf
test
cltd
fldl
daa
call
inc
adc
push
adc
cmpsb
out
movsb
jne
pop
mov
fcmovnbe
push
daa
mov
or
pop
jecxz
mov
cmp
mov
or
xor
pop
scas
adc
rorb
xchg
out
push
scas
dec
dec
push
and
dec
popf
fadds
aad
cmpsb
jae
mov
repz
testb
or
and
mov
add
enter
mov
es
imul
cmc
aas
pushl
pop
jnp
repz
xor
stc
or
insb
loop
or
xchg
and
lods
sbb
jne
push
mov
ja
movsb
in
ss
fwait
cmc
jae
push
dec
addr16
imul
aaa
jg
mov
das
lret
add
mov
push
stc
and
dec
sub
jae
outsl
adc
pop
sbb
pop
movsb
xchg
inc
and
fstpt
test
mov
sbb
ja
daa
movb
std
or
rorb
stos
ret
mov
lods
inc
push
fldenv
or
mov
add
out
call
push
and
inc
xchg
push
or
or
mov
mov
xchg
lds
jb
push
cmovo
fisubl
push
js
lret
pop
dec
fsubs
mov
fstpt
mov
or
jbe
insb
mov
testb
inc
adc
inc
outsl
divl
arpl
cmp
inc
shlb
xchg
cs
bound
sbbl
test
xor
inc
lods
sub
jnp
lcall
rclb
or
xor
mov
mov
sbb
push
sbb
jmp
popf
movsl
adc
pop
add
add
inc
scas
pop
inc
xor
push
cmp
sbb
xlat
in
and
mov
scas
xlat
icebp
inc
xor
pop
and
imul
mov
in
jp
mov
mov
and
lods
and
push
xor
movsb
adc
and
lods
lods
enter
sbb
test
and
sahf
mov
cmp
or
je
adc
lret
mov
sti
mov
mov
int
call
icebp
or
xchg
cmp
or
rclb
jmp
scas
add
icebp
sub
sbb
outsl
cmp
push
icebp
xor
xchg
call
jg
pushf
popa
mov
je
xor
sti
push
addr16
mov
fbld
aad
sbb
fcompl
sub
popf
cld
adc
test
jnp
fsubrl
iret
out
fisubrl
sbb
sub
dec
ljmp
or
or
mov
scas
pop
mov
aas
nop
add
mov
ja
lock
cmp
clc
push
fidivs
pop
mov
enter
test
lds
mov
mov
insl
in
jae
pop
test
dec
sub
push
xor
push
je
es
in
mov
inc
fldln2
mov
into
xlat
mov
cmc
cmp
and
and
mov
xor
shl
pop
mov
in
imul
adc
mov
jecxz
mov
mov
lods
inc
inc
push
add
mov
cmc
xor
pop
cmpsl
push
and
imul
push
cli
fnstsw
push
mov
setl
mov
pushf
fnsave
arpl
cli
sbb
add
rorl
scas
mov
sub
mov
gs
mov
popf
ret
dec
jb
mov
in
les
fsubrs
arpl
cmp
decb
or
cmp
mov
jns
inc
movsl
add
and
or
add
mov
js
and
cmp
sub
outsb
fnsave
add
push
adc
js
and
adc
jo
adc
fcomps
inc
push
and
jbe
add
fdivr
xor
mov
in
loope
movsb
cld
xchg
mov
ret
pop
jl
push
sbb
notb
or
xchg
adc
jns
inc
cld
add
fidivrs
add
jno
pop
cmpsl
jp
and
out
or
push
fisubrl
enter
push
adcl
push
jg
cmp
mov
sub
dec
imul
cmp
jp
cmp
push
or
shll
pop
xor
xchg
jecxz
mov
xchg
testl
popf
lods
mov
add
rcrb
rcll
aam
xor
inc
and
js
or
xor
cmp
out
push
in
mov
xor
push
adc
adc
adc
iret
and
dec
pop
inc
fldenv
pushf
cwtl
adc
repz
or
adc
ds
mov
andb
rorb
dec
in
and
or
jmp
inc
test
sub
stos
cmp
lret
ja
stos
nop
mov
ljmp
cmp
cmp
clc
outsl
in
js
inc
hlt
cmp
stos
adc
ficomps
scas
je
ljmp
clc
inc
add
pop
xchg
mov
fisttpll
xchg
push
fcoml
aaa
cs
adc
and
xor
inc
nop
inc
xchg
lods
and
sub
fdivrs
mov
ja
or
push
roll
mov
fimull
jp
arpl
inc
aaa
out
dec
inc
jae
jae
xor
adc
adc
test
adc
sbb
sti
aas
push
lods
mov
leave
sbb
cmpsl
mov
outsb
stc
aad
cwtl
lds
xchg
fwait
or
and
and
jns
pushf
jae
or
out
inc
cmp
pop
push
cmp
mov
rorl
pop
jo
push
mulb
movsb
rolb
test
push
stos
adc
ret
mov
adcb
movsl
ss
adc
sbb
addr16
hlt
ret
fmulp
cltd
xchg
mov
jge
xchg
add
mov
mov
gs
inc
aas
cs
add
jg
and
sub
push
sub
std
data16
mov
fidivrs
in
pop
les
cmp
scas
repnz
add
outsl
cltd
push
pop
jbe
push
mov
lret
pop
shrb
cwtl
test
cmpsl
push
adc
sub
fdivrs
lret
fdivr
push
loopne
add
imul
or
cmp
inc
and
in
cmp
push
jmp
xor
test
inc
mov
fcoml
push
pop
xor
jecxz
mov
loopne
jns
in
in
jmp
leave
cmp
dec
shlb
gs
repnz
or
sbbl
clc
clc
imul
push
shl
in
loopne
stc
jb
insl
xchg
loope
shl
popf
or
fwait
and
xor
xchg
jbe
js
sub
mov
jae
or
pop
fidivs
lret
mov
adc
jae
cmc
pop
loope
sub
aad
call
pop
jmp
fsubs
ja
imull
sub
jecxz
jp
xchg
inc
aas
loop
outsl
icebp
jno
ficompl
lea
pop
add
fdiv
fwait
in
push
add
xchg
dec
pop
loopne
std
push
jbe
fdiv
push
bswap
adc
pop
fcomi
pop
testl
pop
stos
xchg
cltd
pop
pop
imul
xor
jb
adc
push
cwtl
rcr
enter
repz
add
lcall
and
vunpcklpd
push
xchg
jbe
mov
stc
cwtl
mov
inc
xchg
in
jmp
lret
mov
test
adc
mov
jae
adc
cmp
cmp
scas
imul
cmp
lods
mov
and
fsubs
add
and
adc
inc
cltd
inc
dec
insl
clc
xchg
es
mov
xor
adc
inc
ljmp
xlat
jns
inc
push
ss
pop
adc
push
movsb
add
mov
out
enter
orl
ds
popf
mov
rcr
fbstp
into
push
push
inc
lods
je
orb
xchg
push
pop
pop
add
inc
cmp
bound
mov
xor
mov
and
pop
cmp
leave
je
outsb
sbb
push
shll
pop
fs
imul
das
or
cmp
icebp
and
movl
andl
ret
adc
pop
xchg
cwtl
xchg
mov
cmp
sbb
or
addr16
aad
leave
push
lahf
mov
adc
cwtl
popf
and
cmpsb
dec
adc
and
test
mov
dec
repz
out
pop
adc
ror
xor
loop
mov
xchg
add
inc
jg
stos
icebp
dec
sbb
addl
bound
rcl
pop
and
jmp
sbb
je
out
fisttps
mov
pop
dec
mov
shl
or
push
jmp
sub
inc
sub
mov
sub
xchg
outsl
int
dec
fsubrl
jmp
and
scas
addl
push
inc
nop
mov
rcll
js
mov
imul
mov
dec
jl
repnz
xor
sti
lcall
add
push
add
push
jo
jp
cmc
orb
fdivs
lret
test
mov
cli
fistps
sub
flds
out
jbe
shrl
pop
mov
das
jb
jb
sbb
jb
sahf
and
mov
imul
fisubrl
aas
pop
ljmp
pop
movsb
lods
xchg
lahf
dec
jno
xlat
out
int
and
test
add
mov
push
inc
xchg
mov
inc
push
pop
pop
lock
decb
ficompl
and
mov
out
repnz
shrb
movsl
in
add
mov
jb
push
insb
shll
xor
mov
in
push
sbb
call
sub
xchg
pop
xchg
insb
push
mov
test
push
jnp
cld
test
jmp
cmpsl
add
and
jno
mov
cltd
xlat
lock
mov
fldenv
jmp
xor
in
mov
jl
pop
add
mov
ss
sub
mov
xchg
cmp
jmp
add
pushf
fdivrp
iret
mov
xor
jae
xchg
pop
jnp
sbb
stc
xor
mov
add
mov
dec
call
stc
std
std
cmp
jb
movsb
jmp
xchg
test
mov
rcll
and
shrb
pop
sub
pop
adc
dec
jae
out
in
adc
fdivrl
rcl
push
xchg
test
fisubrs
cmpsb
cld
pop
decb
and
test
jecxz
cmp
jg
incl
loopne
mov
in
cmp
movsl
cmp
jle
cltd
into
ret
andb
sub
fcoms
fidivs
enterw
jmp
and
enter
inc
pusha
cltd
inc
jmp
mov
jg
mov
pushf
hlt
lahf
test
pop
stos
into
loope
jle
inc
jl
mov
fidivs
jl
notb
mov
adc
test
push
cmpsb
inc
rorb
xlat
and
sbb
stc
mov
push
stos
xchg
icebp
xchg
lods
fs
sbb
or
mov
arpl
add
bound
mov
testl
jns
add
dec
ret
push
out
cmpsb
pushf
cmp
or
arpl
sbb
or
and
and
aaa
pop
mov
mov
clc
lods
jg
ret
and
jb
daa
adc
inc
xor
add
sbb
shlb
xchg
xchg
enter
xchg
sub
push
xor
sbb
movl
jo
sub
iret
jmp
in
mov
jg
pusha
cmpb
xchg
push
dec
lds
push
pushf
fimull
scas
insl
fwait
cmp
mov
testl
adc
push
xor
stos
xor
idivl
xchg
iret
mov
addr16
cmp
cmp
sub
cs
pop
cmpsb
xchg
scas
aaa
inc
int
pop
jno
sbb
mov
mov
xchg
lret
jmp
xor
lret
jge
push
std
outsb
push
sarb
hlt
repnz
loop
xchg
pop
ss
mov
or
insb
xchg
xchg
sub
sbb
and
fnstenv
sbb
stos
cmp
fsubrl
cmp
fsubrl
pusha
and
inc
or
jno
loop
clc
ficomps
jmp
ds
je
lret
jg
ficompl
adc
jnp
mov
dec
scas
dec
pop
push
or
sub
dec
xor
jbe
mov
stc
int3
iret
pop
sbb
mov
adc
in
dec
bound
pop
push
mov
test
scas
out
scas
jl
lahf
xor
int
pop
cs
int3
test
jb
data16
gs
aas
jo
pusha
mov
or
push
or
bound
add
push
aas
mov
ror
mov
jge
add
jne
sub
loopne
repz
and
ret
sysret
adc
scas
rcrb
repz
lds
and
or
xor
dec
popf
mov
push
pop
aaa
sub
jnp
inc
xchg
stos
addr16
call
fsts
cli
sti
pop
mov
out
add
lcall
and
aas
fsubl
jne
add
ljmp
adc
cmp
aam
fldl
or
jae
xor
aas
das
push
or
jmp
leave
add
jp
aas
addb
cmc
jno
jp
add
mov
repnz
push
out
mov
jmp
pop
mov
xlat
mov
inc
sub
outsl
sub
sub
adc
popa
rcll
jmp
mov
hlt
cmp
dec
lret
or
push
shrb
inc
sbb
and
out
xor
jo
out
jne
fiaddl
add
flds
jbe
jae
sbb
sbb
mov
cli
dec
xchg
jl
ds
test
mov
inc
push
pop
and
in
jnp
add
inc
mov
lcall
loopne
fadds
mov
insb
addr16
push
loope
push
nop
pop
in
nop
fnstenv
setns
dec
push
add
int
test
lret
push
cmp
bound
ficoms
mov
push
int
repz
jae
fwait
scas
test
push
pop
lds
mov
stos
mov
push
mov
std
adc
icebp
movsb
or
cmc
imul
cmp
ljmp
jbe
sub
loopne
jns
das
cmp
movb
jae
adc
dec
jge
cmpsb
int
push
push
leave
pop
adc
fldcw
and
test
dec
adc
sahf
idiv
fildl
mov
scas
xchg
int
shrb
mov
stos
mov
push
or
jmp
fcmovne
mov
out
add
repnz
jo
xor
mov
jno
add
mov
addb
jns
mov
filds
mov
sub
push
xor
sub
cmpsb
je
lret
dec
xor
ss
sub
xlat
jo
push
mov
pusha
or
add
outsl
adc
cmp
mov
sbb
jge
push
add
jle
loopne
mov
rorb
je
movsb
push
jmp
mov
jle
dec
push
and
mov
xchg
out
mov
xchg
ret
push
ret
cmc
not
sbb
sub
aam
jg
xchg
repz
stos
bound
es
pop
jnp
dec
xchg
add
clc
es
pop
mov
stos
cli
dec
push
sarl
xor
in
xlat
addb
mov
ja
dec
pushf
or
nop
fs
or
push
adc
cmp
divb
mov
mov
mov
in
jg
mov
dec
sub
jo
stos
xor
cwtl
fsts
xchg
inc
mov
stos
incb
inc
mov
test
jno
adc
cwtl
lcall
xchg
jg
repz
mov
lahf
lahf
loop
sub
xchg
in
rorb
jl
sbb
and
fs
jecxz
jle
rorl
lahf
subb
fcoms
popa
adc
dec
bound
push
aam
in
sbb
pop
pop
in
push
repnz
push
mov
stos
scas
sub
sub
mov
inc
stc
fxch
cmpsl
prefetch
testl
xor
fwait
lahf
sbb
xchg
and
addr16
cmp
xchg
cmc
cmpsb
mov
adc
lret
jne
pusha
xchg
arpl
cmovg
mov
fsubrl
mov
int
dec
mov
xor
xchg
lock
je
into
dec
pop
xor
xor
orl
adc
cmp
sahf
push
adc
pop
jl
pop
shrb
push
stc
iret
pop
push
sbb
push
xchg
loope
enter
into
jmp
out
in
mull
bswap
das
jg
fmuls
sub
repz
aas
jle
adc
jne
jb
out
stc
cmpsl
mov
and
scas
sub
and
filds
loop
xor
pop
shl
pop
and
sbb
lds
and
fucom
cwtl
js
sbb
das
and
sbb
stos
sbb
dec
nop
stos
cmp
jg
pop
out
stc
icebp
jecxz
scas
jecxz
ljmp
xor
in
das
fisubl
jns
xchg
xlat
and
jge
push
push
xor
movl
cli
jmp
int
lcall
test
pop
cmp
cmp
mov
dec
push
fwait
imul
and
mov
fs
outsb
lcall
fwait
adc
mov
mov
addb
mov
inc
sub
add
leave
pop
ds
fdivs
add
enter
or
dec
lods
out
mov
enter
push
aaa
mov
mov
popa
xor
fcomps
stos
add
movb
icebp
xchg
daa
cmc
mov
cmovo
mov
das
mov
les
cmp
aam
pop
roll
clc
mull
inc
mov
testb
jp
cmp
cltd
fwait
mov
fmull
movsb
mov
pop
inc
dec
dec
int3
cmpsl
test
fdivrs
mov
mov
test
adc
cli
and
repnz
nop
add
sti
and
addl
push
xchg
add
mov
or
mov
dec
mov
insl
cmpsb
iret
rcr
mov
jmp
inc
lret
lods
nop
mov
fcmovnb
xor
stos
mov
int
xchg
shrb
sarb
dec
sbb
mov
mov
pop
mov
or
loope
mov
jg
cmpsl
mov
push
jmp
push
mov
add
jge
xlat
cmp
test
int3
sub
lods
mov
ja
push
jne
ds
jnp
in
mov
add
test
ja
lret
popf
xchg
aam
and
jmp
aad
or
test
sbb
push
mov
push
and
pop
sbb
jb
rcrb
mov
call
sbb
pop
push
ljmp
cmpsl
fcmovu
add
out
mulb
lcall
mov
movl
jne
cmp
movl
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
jle
lret
fiaddl
and
ret
mov
xor
push
jae
lods
sti
mov
jecxz
push
cmpsb
xchg
add
mov
arpl
pop
inc
jns
enter
pushf
jns
mov
mov
jge
inc
daa
cmp
dec
inc
sub
lret
pusha
cmpsb
ja
nop
adc
repz
imul
pop
pop
orb
or
hlt
cmpsb
negb
inc
leave
sahf
fwait
insb
pop
fsubrl
inc
ror
addr16
fnstsw
in
inc
push
ficoml
lds
push
dec
or
imull
pcmpgtd
out
test
in
xor
jmp
xchg
push
mov
aad
std
ja
stos
dec
aas
adc
add
nop
mov
mov
cltd
sub
std
mov
scas
in
lods
inc
jne
repz
sub
push
jge
ss
add
jbe
push
cltd
xor
ljmp
sbb
fisubrs
dec
adc
mov
stos
or
sahf
add
scas
adc
ret
lods
outsb
jg
xchg
test
push
inc
add
stc
rcrl
mov
sbb
cmp
push
xchg
sbb
push
jl
in
je
push
dec
lcall
mov
scas
nop
scas
sub
clc
int3
clc
sbb
xor
inc
lds
bound
jl
mov
fsubs
je
inc
in
jmp
mov
jne
push
fsubl
push
cltd
push
mov
std
lcall
and
dec
imulb
mov
jl
xchg
pop
fmuls
mov
xchg
jl
mov
push
imul
and
cli
cltd
inc
jbe
cld
push
add
lcall
dec
outsb
negl
insl
cmp
add
test
lcall
push
mov
jg
notl
popf
imul
popf
add
ficomps
cmp
sbb
xchg
add
sub
iret
test
out
jno
jne
sar
std
adc
pop
popa
das
in
lds
push
rorl
xor
das
in
dec
adc
shlb
xchg
inc
clc
leave
hlt
std
int3
inc
gs
ja
popf
mov
shrl
cmc
repnz
dec
push
mov
mov
xchg
jp
roll
daa
cmpsl
adc
cwtl
ret
and
insl
mov
jmp
out
in
mov
int3
fisubl
adc
sub
loope
stc
mov
subl
bsr
cmpsl
aam
lea
push
sub
lahf
inc
mov
xor
adc
mov
js
aaa
mov
push
sbb
cmovns
xchg
lahf
js
addr16
stos
jns
icebp
nop
mov
cli
mov
out
push
int3
mov
jecxz
test
std
clc
adc
loop
sti
out
les
jge
dec
add
sub
in
xchg
mov
ljmp
xor
push
jg
lret
or
lcall
repnz
loope
cli
adc
stc
in
or
call
shlb
cwtl
sbb
fsubrl
dec
pop
cmp
out
or
sahf
cmpsl
adc
cmp
pop
ljmp
rcrb
mov
loope
scas
orl
test
scas
lods
xchg
push
in
out
ss
dec
fdivl
xchg
pop
jno
js
xor
out
mov
xor
lea
lret
addb
stos
out
jp
call
lods
cwtl
dec
add
fiadds
mov
push
scas
push
mov
jns
rcrb
inc
xchg
xchg
dec
int
push
out
pop
push
jbe
movsb
xchg
and
xchg
jecxz
lret
push
outsb
out
sbb
jecxz
icebp
lock
out
jmp
mull
dec
or
imul
dec
flds
sub
test
dec
int
jo
xor
adc
repnz
fucom
das
ret
mov
sti
jg
ljmp
xchg
xchg
jo
gs
lea
add
push
cmp
ja
movl
out
pop
in
push
adc
inc
ljmp
xor
push
jmp
mov
xchg
mov
jns
jo
sti
push
nop
xor
and
les
dec
outsb
add
lods
mov
mov
mov
les
pop
icebp
inc
in
out
gs
subb
out
inc
xchg
fnstsw
mov
je
lcall
xchg
xor
insb
test
imul
pop
adc
dec
sarl
inc
jmp
and
scas
xor
out
mov
mov
lods
ficompl
dec
inc
dec
lahf
adc
pop
icebp
mov
in
adc
bnd
cld
ds
pop
adc
cwtl
fldenv
std
in
lcall
imul
mov
push
aaa
sub
sub
data16
dec
jmp
push
test
sbb
in
jne
adc
mov
lods
ljmp
lea
enter
inc
dec
ud0
or
fiaddl
mov
pop
dec
jns
xchg
adc
imul
mov
data16
adcl
lea
sbb
in
hlt
pcmpgtd
shrl
add
mov
inc
daa
es
inc
inc
cmp
das
mov
xchg
ret
or
mov
repnz
push
out
imul
or
les
gs
mov
sahf
mov
jl
push
fisubs
aas
scas
mov
cld
shlb
imul
add
sub
xchg
fsts
jnp
push
fidivrs
fdivrl
xchg
loope
xchg
cmp
sub
pop
pop
dec
xchg
xchg
daa
push
pop
xor
daa
in
inc
fsts
lock
inc
repnz
mov
int3
pop
sub
cmp
enter
daa
xchg
sub
mov
mov
add
sub
in
cmp
jo
push
insb
fldt
ljmp
inc
loop
clc
or
clc
mov
enter
sub
psubusb
cmp
scas
daa
test
fidivrs
pop
xchg
into
ds
dec
mulb
lret
imul
mov
cli
fprem
mov
enter
pop
adc
stos
mov
repnz
lret
popa
stos
lock
fwait
mov
testl
stc
mov
mov
imul
lds
out
pop
je
dec
mov
adc
popaw
xlat
jp
or
push
es
add
mov
mov
pop
es
pop
fistps
mov
popa
mov
mov
shrb
call
push
cli
aam
inc
loop
pop
sub
mov
xchg
sub
imul
scas
mov
loope
mov
pop
push
cmp
jnp
push
movsb
sub
jp
cmpsb
adcl
lods
and
xchg
aad
jmp
sbb
pop
jecxz
fbld
stos
cld
fwait
add
scas
mov
fistpl
pop
mov
aas
and
jno
shr
lods
mov
dec
jmp
xor
movsl
mov
rol
mov
xchg
shll
mov
pop
xchg
xchg
mov
push
ss
push
shrl
pop
movsb
xchg
call
pop
and
loope
clc
sbb
cmp
movsb
pop
jle
mov
test
sub
cmpsl
mov
sar
xchg
stos
mov
xchg
xor
lahf
dec
lods
loop
and
sbb
and
jne
ret
fcmovnb
sbb
sub
xor
pop
mov
dec
jno
dec
js
add
sbb
cmp
push
mov
xchg
enter
clc
push
adc
pusha
or
mov
fmuls
mov
push
add
jle
sub
dec
movl
jno
inc
sbb
inc
and
pop
test
bnd
jle
xchg
or
pop
incl
or
cmc
sub
es
scas
fstpl
or
sub
or
lcall
adc
and
mov
and
cmc
add
and
sahf
and
dec
dec
dec
lahf
xor
mov
jge
inc
stos
loope
imul
and
lods
insl
cmpsl
adc
cmp
popf
jno
inc
xchg
jne
or
in
and
fwait
sbb
sub
ja
data16
cltd
adc
cmp
cmpsl
fidivrl
sub
bnd
cmp
lret
jecxz
movsb
mov
std
and
or
pushf
adc
cld
dec
xchg
enter
insb
xchg
cmp
push
mov
cwtl
adc
push
sub
xchg
mov
loop
cmp
add
pusha
test
cmpsb
test
imul
lahf
cmp
cs
faddl
lock
pusha
pop
xorb
xor
xor
xchg
or
jb
mov
cmpsb
js
cmp
aam
inc
bound
pop
pop
dec
mov
dec
dec
lock
pop
push
mov
loop
push
icebp
stc
mov
inc
jp
je
inc
pop
mov
rolb
fwait
inc
mov
mov
add
ljmp
add
xlat
push
and
jl
gs
push
jle
pushf
mov
mov
sbb
into
adc
sbb
insl
in
mov
nop
inc
sub
sbb
dec
pop
push
clc
jg
and
leave
and
test
jp
lds
fs
sahf
mov
loope
sbb
hlt
adc
movsl
ret
hlt
pushf
shrl
sarl
or
mov
iret
ds
jnp
jb
jo
jle
fistpl
cmp
in
jb
xor
jge
scas
scas
fisubrl
pop
xor
ss
pop
ja
stc
sbb
and
fcmovbe
mov
pop
mov
test
in
xchg
and
lret
out
jecxz
adc
jp
xor
es
xchg
or
sub
aaa
ja
daa
and
push
sahf
int3
out
ja
jnp
cltd
arpl
mov
add
sbb
mov
repnz
mov
or
pop
adc
push
sbb
fwait
ja
and
pop
mov
inc
cmpsb
lods
and
addr16
gs
push
in
jmp
repnz
call
xchg
arpl
dec
outsl
shlb
fwait
push
ret
in
aas
xchg
cmp
fcmovu
outsl
adcl
mov
rcl
xchg
dec
popf
fldt
xor
cltd
aad
int
mov
test
inc
fcoml
add
das
pop
xchg
jne
sbb
in
inc
push
icebp
mov
je
cmpsl
dec
mov
imul
pop
rcl
rcrl
add
jl
clc
sub
mov
mov
fisubrs
cmp
movsl
fidivrl
outsb
cmp
ja
or
push
mov
call
mov
mov
jle
cld
mov
or
xor
in
stos
mov
push
out
fwait
pop
mov
pop
adcb
add
std
aaa
sbb
dec
mov
pop
add
stc
fsubs
pop
lcall
int3
xchg
jb
mov
inc
inc
push
or
add
mov
sbb
xor
orb
mov
jno
add
pop
out
or
lods
jne
movsl
dec
mov
cmpb
aad
jg
cmpsb
cmpsl
cmpsl
es
inc
aas
pop
rcr
mov
test
pushf
cmp
in
daa
cmpsb
push
jo
and
dec
rorl
sbb
pushf
not
pop
adc
sti
lahf
cmp
pop
xor
imul
inc
ret
movsb
outsb
mov
mov
inc
xor
sbb
pusha
out
xchg
lcall
cwtl
inc
pop
adc
int3
or
leave
push
inc
or
xchg
js
nop
mov
jmp
fisubrl
pop
dec
push
jge
fidivrl
fcmovbe
pop
addr16
inc
mov
cmpsl
test
inc
out
sbb
and
or
xor
or
loopne
push
xlat
mov
adc
pop
and
lret
mov
pop
pop
movsl
stos
iret
shll
pop
cmp
andb
dec
dec
nop
add
loop
scas
dec
roll
sub
daa
cmpsl
push
sub
scas
lods
stc
cmp
cld
jle
sub
das
dec
outsl
and
sbb
mov
jns
jmp
cld
fs
pop
and
lret
xor
sub
cwtl
out
shll
add
lods
add
cmpb
out
and
jae
into
push
inc
pushf
pop
loope
out
inc
pop
aad
jge
popa
repz
sarl
fmull
dec
sbb
clc
fwait
shlb
pop
add
dec
fmull
and
lahf
dec
or
mov
iret
and
cmp
pop
ss
mov
in
dec
enter
mov
mov
mov
pop
jbe
cli
int3
mov
mov
mov
shll
inc
ss
out
add
add
push
leave
das
pop
jp
jg
jge
sub
dec
iret
sbb
testl
lds
adc
xchg
dec
negb
mov
add
sub
inc
jecxz
xchg
mov
outsb
fistpll
scas
shlb
icebp
jns
popa
add
subb
xchg
sub
jno
lock
xor
cmp
cmp
jg
or
sub
js
push
xchg
add
dec
scas
mov
lods
shrb
sbb
dec
leave
and
cli
or
jmp
cmp
lock
xchg
sub
shrb
jge
call
not
movsb
or
decb
mov
pandn
stos
or
inc
loop
pand
addr16
mov
sub
adc
add
mov
cmc
inc
xor
inc
mov
test
dec
dec
cld
cmp
test
test
test
pusha
and
sbb
shrl
mov
push
sarb
sbb
cmp
and
mov
mov
mov
ret
dec
xchg
cmp
inc
and
repz
fs
jg
inc
add
imul
out
xchg
jmp
nop
xchg
int3
lds
js
xor
or
sbb
js
push
xor
wbinvd
add
cld
jmp
xchg
pop
xor
jmp
push
fs
xchg
sbb
fsubrs
sbb
ret
mov
xchg
sub
adc
cltd
add
or
sbb
enter
mov
orb
pop
popa
inc
addr16
aas
ss
cltd
cmp
cmp
stc
loopne
nop
mov
gs
cmp
ror
stos
incl
fld
cmp
loope
daa
ljmp
popa
sbb
add
outsl
daa
dec
add
adc
adc
pusha
push
bound
les
xchg
cmpsb
frstor
sbb
in
push
lods
sbb
dec
stc
jbe
sub
out
rorb
pop
test
cs
add
xchg
nop
jns
fists
jp
jmp
cmp
dec
sub
xchg
push
stc
or
or
in
mov
jnp
sbb
out
sub
bound
std
inc
and
out
mov
lock
aaa
mov
std
push
test
jecxz
jl
outsb
cmpsl
mov
es
adc
jmp
adc
cmp
pushf
xor
adc
lahf
pop
cmp
or
xchg
and
insb
jle
jb
pop
std
adcb
xchg
xchg
xor
jo
lea
sbbb
xchg
mov
jb
inc
jle
cwtl
popa
mov
pop
in
inc
cmc
or
push
pop
push
or
fisttps
cmp
ret
inc
dec
out
push
cmp
mov
mov
fwait
cli
les
testb
shrb
test
stc
or
pop
xor
cmp
inc
cmp
push
jae
xor
inc
xchg
xchg
xor
mov
sahf
notl
dec
push
mov
mov
xchg
ficomps
sbb
add
sbb
inc
inc
cmp
inc
mov
mov
ja
xchg
xor
nop
test
ss
xorl
lcall
test
xchg
xchg
ret
mov
jp
pop
mov
ss
loop
or
cli
int3
movsb
aad
mov
pop
testl
cmp
sbb
cmpsl
sub
dec
in
cmpsb
outsl
arpl
fdivrs
pop
fs
incl
aad
idivl
lret
push
mov
lods
addr16
repz
fs
test
out
mov
cmp
cwtl
mov
dec
aad
pop
sbb
sti
fwait
xor
dec
push
in
inc
jns
arpl
ljmp
imul
ret
adc
clc
loop,pt
out
push
cli
imul
jmp
push
cmp
push
loopne
or
or
dec
xchg
or
mov
sarb
xchg
mov
pop
mov
iret
mov
mov
cwtl
dec
dec
jo
addr16
stos
mov
cmpsl
mov
and
fsubrl
inc
sub
dec
and
fcmovnb
mov
inc
popf
jl
xchg
add
mov
mov
pop
mov
or
adc
sahf
adc
mov
mov
fbstp
cld
cmpsb
pushf
andl
jno
push
dec
mov
test
jo
clc
out
scas
dec
jp
push
aas
ret
test
add
enter
rcll
in
pop
andb
data16
sarl
lcall
cmpsb
je
subl
repnz
push
xlat
cltd
call
shl
addr16
push
int
test
lahf
and
insl
cmp
ds
fcmovne
es
mov
dec
xchg
push
lods
mov
mov
outsb
or
rcll
jle
jmp
fdiv
pop
in
test
shlb
xchg
sub
aad
test
pushf
adc
movsb
mull
fadd
xor
jnp
sub
push
dec
mov
mov
std
cli
xchg
in
cmp
insl
inc
loope
and
mov
mov
test
mov
cs
xchg
or
push
adc
roll
push
sbb
pop
dec
fwait
jg
sahf
movsb
cmp
imul
pop
add
loope
insb
imul
jmp
les
call
inc
js
test
xor
cmp
pop
repnz
sub
cmc
push
mov
mov
mov
test
adc
bound
ret
out
fadds
ljmp
inc
adc
pop
cmp
xchg
in
orl
repnz
ss
add
push
jmp
add
lahf
xchg
movsl
mov
es
fisttpll
cmp
xchg
lcall
subl
fnsave
scas
movsl
adc
sar
jae
in
scas
xor
dec
cwtl
imul
pusha
push
pop
pop
inc
es
std
cmpl
sti
rorl
out
stos
pushf
scas
mov
out
les
fbld
cmp
dec
leave
stos
divb
jmp
dec
loopne
adc
test
js
pop
dec
cmp
and
xor
sub
xor
adc
dec
sbb
xlat
add
or
daa
gs
jns
and
fisttps
pop
loopne
mov
std
sahf
and
mov
addr16
mov
orb
daa
push
and
and
pushf
jl
fs
sub
inc
xlat
dec
rcrl
aam
in
sub
lea
into
inc
jae
in
pop
stos
add
lea
enter
mov
sbb
or
push
or
or
mov
or
test
enter
adc
xlat
cmp
push
xor
add
pop
jmp
inc
lret
movsb
push
push
pusha
sbb
xor
xlat
xor
out
inc
xor
cmpl
pop
adc
sbb
mov
and
shlb
pop
dec
ret
loope
jge
out
aad
push
pop
mov
mov
insb
mov
jo
cli
das
repnz
add
fsts
cmp
lods
sbbl
xchg
cwtl
jne
cmp
lock
push
xchg
nop
push
fistpl
nop
xchg
pop
js
mov
sbb
jecxz
je
out
xchg
mov
dec
rclb
pop
jg
mov
xchg
scas
movsl
inc
std
fwait
imulb
jbe
test
adc
in
cmp
mov
push
lods
dec
out
rcrb
outsb
and
not
push
mov
dec
pop
adc
push
mov
repnz
dec
es
push
xor
into
orl
insb
or
fistps
mov
insb
outsb
jb
inc
iret
es
mov
xor
dec
cltd
inc
jge
addl
imul
lds
adc
gs
pushf
fcmovnu
xor
inc
fisttpll
stos
mov
arpl
fcomps
ret
jns
pop
subl
mov
sahf
daa
xlat
in
movd
and
sub
push
or
mov
mov
data16
scas
xlat
inc
sub
inc
aas
test
xchg
cmp
pusha
mov
xor
pop
push
ds
dec
js
iret
stc
movsb
cmc
in
in
cmc
push
inc
mov
mov
cs
aad
jg
jp
sub
mul
das
pop
enter
cmp
xchg
cmp
cmpsl
and
movsl
lret
xor
jge
adc
mov
cmp
inc
je
add
setp
ja
mov
xor
pop
mov
arpl
into
stos
mov
xchg
mov
cs
adc
sti
ja
into
pusha
mov
shrl
je
push
aad
cmpl
sbb
xor
scas
cmp
and
in
mov
cli
lock
fwait
sbbb
mov
pushf
xchg
cmp
subl
mov
pusha
dec
fdivrs
sti
pop
pop
test
lock
dec
in
sbb
mov
xor
pop
or
inc
adc
test
jnp
cmpsl
and
jae
in
and
outsl
or
das
fidivrs
cmp
cmpsb
test
enter
push
xor
cs
cs
xchg
ss
test
bound
leave
pop
push
add
ret
in
test
out
out
adc
sbb
mov
icebp
add
jle
adc
jnp
inc
sub
cmp
xchg
mov
cmp
ds
lea
mov
clc
push
add
faddp
xchg
jo
xchg
into
jmp
and
std
and
ror
adc
sbb
cs
subb
pop
loope
cmp
mov
out
add
dec
mov
loop
fcompl
test
cwtl
stc
adc
call
xchg
je
mov
jmp
test
xchg
leave
push
jmp
repnz
loopne
or
jne
out
sbb
or
sub
pop
cmp
dec
inc
xchg
hlt
xor
sbb
das
sbb
dec
testb
xchg
dec
cmc
inc
test
daa
dec
xchg
or
mov
into
insl
mov
jae
and
aam
imul
in
popa
ror
or
pop
shll
pop
sahf
stos
orl
lea
xor
push
cwtl
cmc
sahf
or
leave
stos
pop
inc
test
les
ja
mov
xchg
clc
xchg
mov
fs
arpl
sbb
xor
add
or
push
or
sbb
imul
sarl
cmp
pop
stos
cmp
ja
jae
out
jmp
lods
mov
jno
pop
push
stos
rcrb
loope
bound
mov
pop
ljmp
je
pop
push
insb
xor
push
jecxz
fimuls
inc
sti
in
jne
loopne
mov
fistpl
mov
sbb
cmpsl
aas
les
dec
lcall
insl
fildll
pop
pop
xchg
inc
lret
cmp
movsb
xchg
and
mov
sbb
dec
jns
lahf
subl
mov
stos
in
sbb
pop
repz
cwtl
sarl
sbb
jnp
fcoms
sbb
popf
inc
loop
nop
nop
xor
mov
iret
mov
cmp
movups
das
daa
sbb
lods
jmp
aas
mov
add
cmp
lahf
or
addr16
pop
inc
inc
iret
pop
mov
mov
bsf
pop
mov
sbb
in
popf
add
das
sbb
icebp
push
es
jnp
in
dec
stos
cwtl
inc
cmp
mov
lahf
cmp
imul
cmp
jp
and
insb
sub
jno
je
xor
lds
pop
in
sbb
jns
dec
jecxz
pop
pop
push
mov
mov
stos
movsb
jg
xchg
sub
xchg
mov
xchg
int3
aad
add
xor
add
in
jne
cmp
mov
jp
cmp
ss
stos
fistpll
adc
test
mov
push
out
jnp
ljmp
push
cmpb
fidivs
push
lods
imul
hlt
push
inc
pop
out
shl
cwtl
inc
fistps
pop
xor
sbb
pop
mov
mov
pop
pop
mov
sbb
add
shll
xchg
fadds
pop
in
cmp
bound
sahf
mov
mov
mov
jmp
sub
in
lods
inc
inc
mov
xor
push
lahf
jl
jns
jmp
mov
negb
stc
in
jb
push
inc
xchg
stos
pop
cli
dec
push
mov
xchg
cmp
pop
shl
jne
jb
insb
fwait
sub
loopne,pt
mov
mov
jbe
or
gs
mov
and
fildll
mov
sti
out
sbb
aaa
xchg
iret
adcb
fldenv
mov
subb
mov
dec
sub
lods
test
mov
je
mov
insb
push
subl
out
dec
fisubrl
jbe
cmp
pop
cmp
xchg
icebp
popa
sbb
je
fadds
push
sbb
out
mov
popa
xor
ljmp
push
jbe
cmp
bound
ja
adc
add
mov
jl
mov
scas
mov
push
jle
mov
and
movsb
cs
jne
pop
mov
xchg
in
test
mov
das
bound
aaa
lcall
bound
aaa
jmp
sbb
rorl
push
sub
orl
loope
pop
ret
sbb
imul
inc
loopne
mov
adc
mov
add
ffreep
mov
jge
adc
out
mov
scas
out
mov
lret
mov
daa
push
lds
and
adc
in
mov
sbbl
loope
pop
mov
cs
data16
xorl
inc
adc
xor
mov
xor
and
fdiv
ds
outsl
lock
inc
loop
testb
or
mov
lret
lods
stos
subl
loopne
aas
pop
sbb
mov
add
test
call
test
out
xchg
adc
popa
mov
xor
add
add
lods
mov
mov
lods
dec
jmp
and
xchg
inc
jmp
movsb
cmp
push
add
aaa
ds
xchg
xchg
lods
aaa
mov
ret
inc
cwtl
fwait
mov
cmp
testb
fcomps
mov
xchg
lcall
out
scas
mov
pop
xor
mov
xor
jo
ds
stos
mov
sti
daa
jnp
es
sub
adc
unpckhps
sub
stos
div
pop
dec
push
mov
cwtd
je
inc
sbb
pop
scas
push
test
shlb
dec
arpl
jle
add
data16
sarb
jl
pop
pop
push
or
dec
jp
dec
jecxz
ret
int
xorb
rorb
push
pushf
pop
sub
adcl
mov
out
nop
mov
pop
ss
jl
xor
imul
pusha
push
shll
sbb
aaa
and
repz
fs
xchg
int3
jne
or
xor
scas
inc
push
jns
dec
pop
push
sub
enter
adc
pop
xor
sar
stc
mov
cmc
jb
jno
cmp
cmovle
mov
jbe
mov
pusha
sahf
in
push
incb
aam
loopne
inc
pushf
lods
lock
jl
or
repz
inc
cli
aad
and
pop
cmpsl
mov
jp
outsb
sub
cmpsl
movsl
cmp
mov
sub
loopne
sub
shll
xlat
movsb
movsb
jns
xchg
mov
testl
xor
cmpsb
ds
push
add
cmp
mov
aas
lret
mov
inc
cmpsl
mov
ds
mov
cli
jae
or
push
cmc
fldln2
xor
outsl
mov
jp
mov
fwait
adc
lods
jns
or
es
cmp
stos
cmpb
rcr
push
ret
cmpsb
loop
and
mov
in
out
loope
jge
mov
push
cmpsb
sub
fisttpll
jo
sub
sahf
arpl
sbb
cwtl
dec
jge
jg
ret
push
cmp
xchg
sbb
push
and
stos
mov
dec
das
jecxz
push
inc
or
dec
push
test
mov
mov
add
sti
lea
jno
in
jb
xchg
jecxz
mov
popa
xor
loop
ja
xchg
outsb
movsl
pop
xor
lea
repz
push
fs
cmp
movsl
aad
jae
push
push
aas
or
cmp
test
jl
sti
imul
enter
hlt
cmpsb
sub
dec
loopne
stos
push
icebp
and
hlt
push
add
push
xchg
lock
inc
cld
cmp
mov
dec
xchg
inc
inc
xchg
cmc
and
cmp
push
leave
push
inc
fsubrs
stc
xchg
mov
lret
and
cmpsb
movsb
add
repz
lret
out
popa
xorl
adc
dec
push
jnp
fs
hlt
loope
push
cmp
jb
cld
pop
push
xchg
in
popa
xor
loopne
sarb
xlat
movsl
cld
xor
scas
xor
inc
jno
daa
popa
mov
fs
insb
adc
dec
cs
push
icebp
in
xchg
orb
pop
je
and
mov
add
add
jl
xchg
mov
pop
push
adc
cmpsb
mov
adc
xor
aad
repz
enter
mov
jnp
sub
xchg
sbb
out
inc
push
stos
js
cmp
mov
sbb
jmp
mov
xchg
les
dec
cmpsb
outsl
mov
repz
sbb
inc
mov
sbb
inc
push
xor
mov
stos
or
and
cmp
aam
enter
jp
rcrb
pushf
adc
push
out
scas
pop
push
xor
popa
mov
mov
in
pop
cmp
nop
mov
mov
mov
xchg
push
sub
add
lahf
fwait
sti
inc
cwtl
call
popa
mov
jge
call
xchg
mov
in
loop
jge
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
mov
addb
or
or
cmp
push
add
push
loop
ficomps
add
and
pop
test
pusha
mov
repnz
add
out
mov
imul
sub
sub
fstl
xor
lret
xor
push
loop
cmpsl
fiadds
or
mov
or
test
loop
mov
lods
lock
mov
test
push
mov
shl
and
jne
dec
pop
or
movsl
cs
mov
movsl
mov
lock
out
int
lcall
jnp
xor
insb
fisubrs
or
adc
daa
popf
lds
popa
adc
lock
cmp
mov
adc
lods
cmp
or
ficoms
push
inc
adc
loope
add
push
jb
jle
gs
dec
hlt
mov
out
rcll
test
notb
pop
adc
jns
mov
xchg
in
imul
test
int
push
in
enter
lea
mov
outsb
test
mov
jecxz
loopne
pop
add
push
out
cltd
cmp
jmp
lock
adc
iret
push
addr16
imul
inc
pop
pop
mov
sub
cmpsb
jmp
xchg
xorb
xchg
bound
sti
mov
fwait
xor
push
sbb
cli
addb
jne
mov
or
adc
outsl
fwait
push
in
sbb
jle
ljmp
sbbl
fnstenv
push
jnp
mov
pop
push
sbb
sub
dec
sub
stos
cmp
and
jmp
sbb
lcall
jns
dec
cmp
std
lods
sub
outsl
pop
or
dec
cmp
sbb
jnp
incl
dec
dec
adc
cmpsl
pusha
ljmp
mov
xor
imul
and
out
pop
fdivs
sbb
lds
imul
mov
xchg
iret
repz
mov
sbb
loope
mov
out
add
sbb
shll
mov
or
xchg
fs
mov
push
mov
ds
mov
add
xchg
mov
mov
xchg
lock
punpckhbw
fs
mov
xlat
mov
sarl
mov
das
daa
pop
das
lock
push
arpl
jae
pop
icebp
ss
xor
les
adc
inc
sbbb
push
daa
fs
sti
rcl
inc
loop
fbstp
inc
pop
sbb
lahf
pop
mov
cmp
imull
fidivrl
push
mov
repnz
or
xchg
sbb
mov
xor
mov
ja
mov
in
mov
xchg
jp
les
fdivl
flds
movl
mov
dec
movsb
xlat
jae
in
inc
push
sbb
sahf
jp
dec
pushf
lods
aad
call
or
mov
add
sahf
fistps
rorl
adc
jge
inc
bnd
jne
mov
mov
pcmpgtb
mov
lret
stos
and
lds
xor
stos
arpl
adc
xor
jbe
cmp
and
cs
mov
lahf
pop
add
test
ficoml
mov
fcoms
cmpsl
jbe
sub
jne
or
lahf
cli
data16
dec
pop
les
movsb
adc
in
dec
ret
lea
sbb
xor
jne
xchg
jg
jb
and
imul
pop
nop
add
lea
adc
pushw
cmp
and
push
add
mov
cld
jno
inc
in
sarl
jne
movsl
mov
xchg
or
mov
jo
mov
sbb
ljmp
leave
push
dec
fistps
les
sub
mov
lahf
js
idivl
cmp
imul
in
jle
and
lds
push
cmpsb
push
sub
stos
sti
insb
inc
and
fs
xchg
lock
loop
aad
icebp
sahf
dec
imul
or
pop
mov
mov
icebp
stc
and
sarl
xchg
sub
clc
imul
xor
pop
mov
push
cwtl
mov
dec
fs
cmp
lahf
test
lret
push
mov
dec
add
or
mov
call
cmc
outsb
popf
popa
sbb
movsl
jb
pop
aam
vpslldq
push
stos
int3
pop
test
aad
mov
jne
cmp
mov
movsb
jo
push
or
int
xchg
push
aaa
sbb
ror
and
sti
out
inc
fst
cmpsb
test
pop
sub
ret
lea
xorb
xor
sarb
outsb
imul
aas
add
out
mov
push
std
add
loop
scas
jnp
addr16
mov
repnz
pop
cwtl
sti
mov
pushf
cltd
jmp
jo
sbb
fistps
mov
les
js
jge
jle
testl
adc
stc
push
icebp
shll
lret
pushf
add
in
adc
or
jnp
retw
cmp
sbb
mov
data16
mov
arpl
pop
faddl
andb
and
or
mov
pop
xor
sbb
inc
cmc
js
scas
popa
fsubl
ljmp
sarb
insb
inc
dec
push
or
loope
into
enter
adc
in
sti
inc
inc
fxch
mov
push
pop
jg
and
mov
and
xchg
repz
xchg
sbb
loope
call
cli
andl
mov
dec
mov
pop
jmp
inc
lods
mov
adc
daa
jbe
jae
ret
push
cld
pop
pop
in
enter
shll
bound
xchg
dec
sbb
push
xor
mov
test
sub
cmp
daa
xchg
fstpl
or
popa
addr16
mov
jbe
dec
das
jmp
adc
add
sub
pushf
int3
popf
cltd
xchg
scas
dec
push
andb
mov
stc
flds
push
mov
sub
adc
mov
sbb
lods
inc
inc
mov
in
mov
jnp
inc
rorl
sbb
loop
cmp
mov
in
out
movsl
push
test
dec
xchg
add
mov
test
jp
in
push
lret
or
pushf
mov
fistl
in
inc
mov
shll
and
daa
popf
mov
lret
sub
sbb
arpl
pop
mov
das
add
into
jge
mov
push
cmp
or
imul
js
fadds
nop
popf
push
mov
mov
jbe
and
inc
push
push
in
push
mov
shrl
js
sbb
insb
lock
in
fidivrs
pop
add
enter
movsb
lret
rol
imul
jnp
or
add
adc
and
pop
imul
push
ljmp
adc
push
ret
adc
data16
aam
jne
push
aaa
sbb
jg
push
xor
sub
lret
xchg
movsb
in
mov
aas
aaa
pop
xor
arpl
push
test
adc
sub
mov
rcr
mov
pop
scas
mov
test
adc
push
insb
popf
into
pop
dec
jg
cmp
xchg
pop
lods
loopne
or
in
mov
pop
sub
sbb
inc
insb
ss
repz
std
daa
cs
inc
adc
sbb
lcall
cmp
in
or
imul
pop
mov
test
mov
fiaddl
xchg
jb
call
dec
dec
and
in
adc
ret
dec
inc
leave
insb
mov
and
ljmp
ret
sbb
pop
cmp
mov
cmp
and
pop
popa
in
pop
push
and
addl
fucomp
or
sub
out
cwtl
and
pusha
push
popf
push
inc
sbb
cltd
into
rorl
add
sub
jae
pushf
inc
addb
fcomip
add
dec
xchg
lcall
add
add
mov
daa
sbb
stc
mov
jbe
hlt
xor
icebp
cs
add
and
aam
in
out
xor
out
xchg
aam
inc
add
in
lret
ljmp
movsb
push
insb
mov
adc
jnp
push
jae
inc
dec
lret
sub
mov
push
subb
cmp
addb
cmp
jbe
stos
lcall
xchg
test
xchg
popf
mov
dec
sub
test
add
sub
push
pop
bound
xchg
es
mov
into
dec
pusha
lock
lahf
sub
xor
stos
lahf
loop
aaa
dec
sub
ljmp
add
xchg
or
lret
add
int
stc
popf
cmp
and
mov
int
cld
mov
fyl2xp1
cs
rcrl
shlb
cmp
movsb
outsl
sub
pop
jne
out
insl
mov
jae
jg
gs
inc
xor
sbb
imull
ret
inc
jge
pop
into
and
imul
and
mov
push
movsb
push
ret
or
jns
mov
sarl
rorb
cmp
mov
dec
lea
rcrl
es
adc
sbb
xlat
lds
rcrl
icebp
fwait
mov
pop
cmp
test
outsb
pop
lods
cmp
bndldx
mov
sub
mov
mov
jg
mov
mov
adc
outsb
or
xchg
add
lock
lcall
inc
scas
nop
inc
mov
ffreep
dec
int
dec
adc
stos
xchg
cmp
mov
imul
in
ja
movsl
lcall
rcrl
test
push
clc
push
adc
daa
or
es
mov
cmp
fcmovu
and
int3
fwait
addl
shl
mov
pusha
lods
lret
pop
imul
ret
lea
mov
aaa
les
shl
mov
fistps
sub
push
push
mov
repz
xchg
mov
jbe
leave
push
push
rcrb
cmp
cwtl
test
addr16
or
sti
sub
and
dec
mov
ret
add
test
test
dec
mov
icebp
cmpsl
xchg
cli
jns
gs
cmp
dec
cmc
and
and
call
sub
nop
xchg
jbe
mov
popa
add
dec
push
inc
inc
scas
xor
sub
mov
mov
pop
stos
and
adc
mov
push
cmp
js
push
or
sbb
test
repnz
sysenter
mov
loope
popa
daa
mov
pop
fwait
inc
bound
loope
cmc
xlat
xchg
inc
and
imul
mov
cmp
lea
cmp
inc
add
inc
adc
and
mov
call
inc
jae
dec
cli
dec
push
or
rcrl
fwait
adc
inc
cwtl
jb
jb
test
test
cltd
lods
ss
lret
movsl
test
js
add
jno
mov
xor
sub
dec
sbb
aas
mov
sahf
call
cmpsl
aas
sbb
cmpsb
std
ljmp
into
data16
and
push
test
sti
out
insl
cmp
gs
ret
ljmp
push
je
cmpsl
movsb
sti
pop
int
mov
fs
in
jno
iret
rclb
sbb
cmpsl
jl
jecxz
xor
test
sub
and
pop
test
fneni(8087
jo
arpl
stos
sbb
hlt
cmp
lret
data16
insl
je
pop
fidivl
adc
cwtl
or
add
clc
xor
aad
push
sbb
jb
mov
xor
mov
out
push
jp
or
cmp
cmpsb
adcb
ret
push
jl
mov
test
xchg
lods
mov
pop
cld
xchg
mov
inc
lock
add
pop
test
pop
push
test
dec
mov
leave
cmp
pop
ficomps
pop
lods
mov
pop
pushf
mov
callw
push
sbb
mov
pop
pushf
sahf
pop
fwait
cld
adc
inc
mov
imul
jne
adcl
out
mov
fistl
js
dec
sub
sbb
pusha
sbb
aad
add
and
pusha
mov
push
pop
sarb
mov
push
movsl
jp
mov
iret
sbb
scas
lods
insl
inc
adc
call
repnz
and
xorl
mov
push
mov
ja
stc
adc
inc
push
scas
addb
popf
xchg
imul
out
call
inc
test
mov
clc
cmp
sbb
push
lock
cmp
push
jp
ja
jmp
fmul
mov
and
push
lcall
push
lcall
fdiv
sub
scas
imul
jmp
out
pop
push
outsb
repz
cltd
fimull
testb
mov
inc
lret
inc
fiaddl
iret
mov
sahf
mov
out
inc
sarb
in
mov
pop
add
add
pop
adc
push
pop
pop
push
aad
xchg
or
or
inc
xchg
inc
loopne
sbb
mov
popa
push
and
mov
lds
cmc
out
push
inc
sbb
mov
mov
sbb
mov
dec
jnp
add
mov
lods
lods
adc
mov
lret
lods
mov
call
inc
adc
jg
mov
arpl
arpl
dec
adc
push
inc
cmp
cmp
adc
les
pop
xchg
std
jo
stos
cmc
mov
sbb
and
das
mov
popa
shl
cmp
cwtl
mov
or
or
mov
pop
insl
fcom
mov
mov
rcr
push
bound
push
mov
xchg
adc
push
mov
fs
cltd
cmpsl
mov
cmpsb
push
aaa
add
mov
mov
sub
or
out
and
fldenv
mov
pop
stos
cli
fists
into
xor
adc
cmc
inc
xor
scas
push
ror
fwait
xchg
fsubr
movsl
pop
pop
inc
stc
inc
jbe
sbb
inc
into
std
rcrb
lds
push
dec
insl
mov
cmp
push
inc
xchg
xchg
lods
std
or
lods
xor
out
xchg
insb
pop
fisttps
mov
imulb
xor
jns
or
sbb
pop
sub
lock
test
jecxz
mov
int3
cs
lods
push
ljmp
mov
lods
jecxz
outsb
outsb
mov
sbb
or
lods
or
sbb
jne
pushf
push
cmp
push
std
dec
jecxz
lret
mov
inc
cli
or
sub
std
xchg
std
add
and
cltd
cs
mov
sbb
out
mov
push
dec
pop
lcall
lret
hlt
gs
es
insb
cmpsb
fisubl
adc
mov
sub
xchg
out
pop
dec
sti
add
and
popa
repnz
mov
movsl
mov
mov
fldcw
fiaddl
jae
pop
call
cmc
inc
mov
mov
je
mov
imul
push
mov
jmp
add
xor
mov
in
mov
pop
xor
mov
sub
jo
push
dec
xchg
mov
iret
int3
loopne
scas
mov
adc
into
inc
mov
mov
mov
xchg
jle
jno
ret
inc
aam
sub
clc
in
sbbl
add
aaa
dec
shlb
cmpsb
sbb
dec
sti
mov
mov
mov
imul
inc
mov
cmp
xor
shl
sub
outsl
lea
loop
jmp
pop
add
mov
insl
jp
jbe
in
int3
push
push
daa
mov
std
xchg
jae
das
fbld
xlat
sbb
shlb
test
jmp
gs
xchg
scas
and
sub
jge
mov
loop
iret
dec
insl
and
stos
push
popa
jne
and
addb
pop
pop
cmpsl
push
inc
dec
or
lahf
mov
addl
lods
les
jmp
xchg
dec
or
mov
scas
pop
gs
mul
loop
jge
lcall
dec
loop
nop
jp
mov
ja
subb
mov
dec
push
stos
mov
stos
out
mov
and
and
jb
lds
in
mov
les
cmpb
dec
cmp
pop
mov
cwtl
jmp
cmp
and
test
sti
int
mov
adc
jne
and
out
cmpl
mov
cli
pop
and
cmp
sub
lahf
push
adc
ljmp
xchg
xchg
push
test
sbb
xor
pushf
aam
lahf
pop
std
sbb
mov
xchg
fsubs
das
das
jbe
cltd
inc
imul
les
cmp
inc
cmpb
mov
je
in
xorl
add
mov
std
push
sahf
mov
and
xor
and
ljmp
push
out
sub
sbbl
xor
cmp
cltd
cmp
lret
jnp
stos
jbe
rclb
repnz
cltd
orl
pop
or
or
xchg
mov
xchg
jp
popf
cmp
mov
mov
lahf
pushf
mov
pop
mov
mov
mov
es
xor
insl
pop
jb
dec
jne
jnp
push
pop
into
add
sub
notl
cmp
shl
loop
cld
xacquire
and
cmp
bts
fwait
jno
scas
jae
pop
lahf
xchg
dec
cltd
adc
and
sti
mov
push
aaa
xchg
cmp
mov
mov
push
sbb
mov
loope
pop
fs
sbb
xor
jbe
rcr
inc
add
dec
cwtl
ror
inc
cs
aam
js
xchg
push
scas
test
test
out
cmp
cmp
add
rclb
shll
mov
xchg
leave
mov
lds
sub
xchg
out
or
xor
sbb
or
test
and
sub
mov
nop
push
jb
jns
xchg
ja
push
scas
mov
mov
jnp
lods
out
ja
push
cmp
fs
pop
push
cli
pusha
push
ljmp
adc
insb
sti
push
push
lods
addb
gs
jb
push
popa
dec
ss
sbb
push
aaa
push
xor
ret
cmp
pop
and
push
cmp
in
loopne
fcomip
cli
lds
add
or
xchg
or
adc
jnp
mov
lock
lahf
jno
ret
addr16
and
popf
movsb
enter
cmp
ja
test
loope
pop
sbb
jg
add
sbb
cmp
stos
fdivrl
mov
push
stc
rep
xchg
sub
pop
cmpsb
aaa
sahf
aad
pusha
xchg
js
popa
sub
idivb
dec
cmpsl
cmpsb
cmpsl
cmp
sub
scas
mov
ror
repnz
ljmp
lds
scas
scas
stos
mov
cld
js
andb
data16
arpl
fwait
mov
ds
clc
xlat
mov
fnsave
mov
xor
or
stos
mov
xchg
cmpsl
je
jp
out
int
push
pop
push
fildl
mov
pop
jge
loop
xor
cmp
addr16
int
pop
mov
lcall
das
imul
addb
mov
adc
jecxz
push
ss
test
movsl
jl
fisubs
cmc
dec
jb
mov
ja
out
nop
dec
fsubs
subb
dec
and
test
sbb
mov
sub
mov
loopne
jecxz
dec
mov
sahf
sub
add
nop
aam
adc
sub
imul
mov
pop
sahf
jne
mov
enter
inc
fwait
imulb
cmp
mov
push
cld
out
adc
lods
add
and
lret
fisttpll
mov
and
icebp
dec
inc
out
fisttpl
sbb
and
jns
jnp
repnz
xor
jns
fnstenv
dec
push
pop
mov
cmp
adc
les
push
nop
das
shlb
jbe
imul
or
push
shr
jp
inc
fbld
testl
aam
adc
sub
pusha
shlb
add
jmp
rcll
aas
call
stos
pop
add
dec
add
mulb
dec
pinsrw
cld
jge
mov
pop
mov
and
int3
incb
outsl
or
aaa
xorl
jne
fcoml
mov
lahf
push
or
mov
inc
cmpsl
test
push
repnz
shrb
or
popf
push
ljmp
lods
insl
mov
pushf
repz
add
into
push
dec
shl
push
adc
lods
sub
gs
arpl
jle
and
xchg
arpl
loopne
test
xchg
jae
outsl
add
mov
outsl
psllw
cmpsl
bound
cltd
outsb
xchg
shrb
push
cmpsb
xor
or
xor
mov
aaa
movb
rorb
cld
in
ljmp
dec
add
push
pop
xor
adc
es
in
cs
hlt
jge
shl
es
mov
test
scas
dec
xor
fbld
xacquire
clc
or
mov
leave
cmp
inc
cltd
fdivs
jecxz
sqrtps
dec
add
mov
adc
cld
fwait
inc
or
lock
leave
rclb
filds
dec
test
jge
daa
mov
insl
movsl
sbb
sub
mov
mov
mov
sub
adc
push
jno
jl
outsl
filds
jle
xchg
clc
cmp
mov
cli
mov
adc
pushw
fwait
imul
pusha
loopne
fists
mov
push
fwait
adc
insl
mov
mov
movsb
out
rorb
cmp
scas
pop
jnp
inc
movb
mov
push
cld
ret
jns
push
fildl
push
dec
jo
push
or
cmpsl
loopne
jo
gs
and
fmull
pop
ja
div
outsl
sbb
rcrl
scas
int
pop
push
mov
push
test
pop
sti
icebp
jb
test
hlt
inc
jge
ja
outsl
jmp
pop
lock
lds
sub
adc
outsl
out
test
and
push
mov
adcb
add
js
mov
clc
lea
sbb
ljmp
cmp
pop
cmp
mov
and
lret
sub
loope
scas
push
mov
cmp
ret
cmp
mov
into
sti
or
orb
add
jp
aam
push
pop
sbb
mov
bound
ja
xor
jns
and
std
inc
into
inc
add
jg
rol
xor
xor
inc
out
movsb
mov
dec
je
xor
dec
test
mov
lret
jne
mov
js
add
mov
mov
xor
push
mov
bound
cli
jg
sub
pusha
imul
unpcklps
dec
xorb
mov
pop
sbb
inc
data16
mov
lock
bound
lcall
inc
xchg
lret
ds
lods
cmp
cwtl
lret
jle
gs
sub
mov
dec
mov
ret
enter
or
ljmp
push
std
jb
sbb
loopne
sub
repz
orl
xchg
mov
cli
sub
and
xchg
cmp
add
loop
dec
neg
and
jo
adc
test
addb
insb
add
push
stos
in
test
mov
ja
pop
xor
scas
xchg
sub
fistl
push
push
xor
sbb
inc
pop
push
mov
lret
enter
mov
std
stos
out
or
mov
pop
fucom
or
or
jl
mov
mov
lods
sbb
inc
out
and
xchg
mov
hlt
loop
gs
and
scas
inc
mov
pop
sbb
cmpsb
idivl
sbb
addl
xor
push
lock
movsb
push
xor
and
and
subl
cs
jp
imul
or
gs
mov
push
insb
and
pop
pop
nop
and
push
orb
mov
push
jmp
scas
or
xor
scas
dec
cmp
cmp
es
test
dec
add
push
pusha
ret
loop
stos
mov
xchg
dec
push
sahf
sub
inc
in
bound
dec
outsb
mov
gs
int
xor
pop
insb
imul
mov
outsb
neg
outsb
xchg
sub
es
test
adc
ds
ss
adc
lret
lahf
mov
popf
sub
push
outsl
in
stos
pop
test
adc
push
inc
dec
aaa
mov
outsl
pop
in
inc
cmpsb
aas
inc
sbb
mov
mov
stc
cmc
cmp
ret
adc
sti
mov
mov
sbbb
mov
jle
xchg
jge
push
jmp
xor
ret
int
nop
mov
cwtl
sub
xor
xchg
xor
and
fldln2
fsubrp
es
sbb
aam
push
inc
mov
rorl
xchg
sub
pop
dec
cld
imul
or
stos
daa
shll
dec
pusha
cmc
dec
push
sub
in
mov
or
add
jo
pop
pop
dec
test
mov
inc
ret
out
stos
cmp
out
and
mov
push
xor
sbb
or
sub
sti
sahf
stos
sub
push
inc
shlb
add
dec
cmovl
rcl
and
es
sub
shl
movsl
sbb
in
or
aam
push
hlt
scas
int
mov
fs
jecxz
jge
idivl
add
aaa
mov
flds
adc
push
mov
out
jmp
cltd
mov
pop
insl
aad
pop
pop
push
push
ljmp
or
movsb
sahf
add
push
data16
jge
sub
xchg
and
or
cwtl
out
sbb
cmp
lcall
mov
inc
adc
or
mov
lods
out
lods
xchg
out
stos
jle
outsb
xlat
dec
adc
adc
push
sub
not
lret
jne
test
fwait
shll
jecxz
lock
imul
dec
insb
out
xchg
in
ja
lods
lret
adc
dec
pop
out
shl
sbb
push
std
popa
std
repnz
outsb
out
push
cmpsb
sahf
push
mov
aad
push
push
jo
pop
pop
out
xchg
insl
jo
pop
push
dec
adc
scas
adc
cmp
pop
push
push
loopne
aaa
sub
dec
xchg
push
fwait
sub
xchg
jae
lea
in
xchg
enter
cmp
or
mov
sbb
or
cmp
or
adc
fisubl
into
xor
aas
loop
inc
mov
addl
push
or
xchg
fucomi
fnstenv
pusha
fwait
into
cmp
xor
movsl
jb
pushf
mov
dec
push
mov
fcomip
and
nop
or
js
fldt
movsb
dec
adc
mov
cmp
rcrl
inc
ret
xor
xor
mov
test
sbb
pop
roll
push
push
inc
pop
out
mov
sbb
adc
mov
cli
sahf
mov
gs
int3
add
xchg
or
stos
lahf
and
mov
lock
in
pop
cmc
or
or
push
push
rorb
daa
add
scas
add
movsb
stos
xor
jl,pn
push
aaa
push
das
sub
clc
cmc
lret
jge
das
daa
sahf
pop
pop
sbb
sbb
sub
sub
pop
adcb
sub
pop
call
jbe
fmuls
push
cmp
popf
or
jbe
scas
mov
cmpsl
jmp
dec
cld
jecxz
inc
pop
rolb
out
movsl
inc
sub
loop
add
xchg
dec
orl
and
xchg
jge
aad
inc
and
lahf
fwait
mov
and
jno
mov
pop
icebp
cmp
jns
insl
xchg
add
mov
cmpsl
leave
ds
push
sub
cs
sbb
cli
jmp
pop
xchg
lods
inc
aad
cmc
push
xchg
lds
aas
push
iret
mov
cs
out
cs
dec
pop
jno
inc
je
imul
sbb
adc
sub
outsl
cmp
adc
test
data16
jg
addr16
inc
test
int3
push
sti
fiadds
or
add
inc
jo
or
pop
leave
jp
stc
sub
lahf
in
fwait
scas
sahf
imul
jne
jb
mov
mov
cld
sbb
xchg
sbb
push
ret
outsl
sbb
mov
fcoml
jle
bound
mov
andl
testb
rcrb
iret
cmpsb
cmpsb
add
jmp
in
add
push
inc
push
mov
cmp
in
ss
cltd
movsb
imul
inc
and
std
leave
dec
cmp
ret
outsl
push
das
outsl
pop
fwait
sahf
int3
or
js
es
into
sub
or
jecxz
xchg
lods
push
fcomps
movsl
fdivl
xchg
xor
push
jnp
inc
out
or
dec
pop
pop
test
loopne
mov
or
inc
insb
fidivl
out
mov
lods
lock
mov
les
and
or
jnp
xlat
push
push
cmpb
add
arpl
or
in
fucomip
imul
mov
divl
and
add
dec
mov
or
fimull
jae
fistl
gs
test
mov
cltd
mov
fwait
icebp
xchg
loopne
int3
popl
mov
ss
into
add
pushf
sar
mov
lcall
ljmp
or
scas
or
pop
ljmp
mov
sub
out
loope
mov
jbe
dec
mov
in
lret
sub
pusha
pop
imul
mov
std
jl
mov
call
cmp
imul
pop
or
jmp
popa
adc
mov
pop
pop
unpcklps
mov
popf
push
rcll
gs
lret
pop
lods
or
in
aam
push
cmpsl
js
fs
aam
stc
sti
xchg
inc
cmp
adc
rcll
insb
xorb
adc
lock
sub
cmpsb
add
dec
sub
in
sub
cmp
in
aad
pop
mov
ljmp
mov
int
jbe
imul
aas
xchg
mov
pop
popf
mov
rcrl
lahf
sub
loopne
pminub
pusha
sarb
jmp
push
aas
push
adc
xor
add
fimull
enter
sahf
lcall
jno
and
jnp
push
loop
push
jg
adc
mov
inc
sub
shrb
jne
ds
push
decl
out
xchg
xor
jg
pushf
movsl
pop
pop
test
leave
pop
fcoml
test
mov
mov
insb
push
pop
xchg
jnp
imul
add
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
filds
and
dec
xchg
cltd
scas
femms
lds
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
