push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
std
lds
inc
lea
push
out
cld
mov
nop
sub
aam
nop
fadds
jp
sub
pop
mov
icebp
mul
push
cli
dec
cmp
cmp
sub
iret
dec
mov
arpl
in
xlat
adc
inc
xchg
ss
mov
xor
push
enter
mov
xchg
neg
pushf
pop
jno
js
or
mov
jo
inc
fistpll
xchg
stos
ss
dec
ret
fimull
or
adc
in
aas
and
outsb
or
adc
or
outsl
test
pop
outsb
jo
jg
scas
ret
daa
mov
popa
mov
ss
out
dec
scas
gs
cld
adc
xchg
in
cmp
hlt
test
fnstcw
decb
cwtl
fxtract
ficomps
push
xchg
xor
mov
idiv
cmp
xor
mov
and
cltd
push
test
adc
sahf
movsl
mov
cmp
jecxz
ds
push
sbb
nop
sub
pop
push
sub
addr16
add
pop
push
ljmp
xor
je
fdiv
dec
fs
fcoml
dec
or
pop
cltd
insb
mov
dec
fsts
loopne
jbe
mov
imull
push
xchg
xchg
pop
jmp
daa
jmp
sbb
push
push
inc
mov
sub
loopne
inc
das
pop
cmp
mov
jecxz
test
and
xchg
clc
xchg
int3
inc
out
xchg
inc
outsb
lods
xor
in
stos
cltd
adc
hlt
popa
xor
in
sub
out
aam
sti
jno
dec
jmp
ljmp
fmull
add
adc
sbb
and
jmp
jo
mov
pop
mov
inc
cltd
push
aam
mov
sarb
inc
cmc
fnsave
popa
pop
push
cmp
jb
cwtl
pushf
lods
pop
adc
mov
rorl
cltd
sub
lcall
fnsave
lods
add
pop
ljmp
sub
sar
sub
out
stos
sbb
push
inc
and
push
jae
mov
iret
add
and
jle
and
shlb
mov
js
or
sarl
mov
popf
and
mov
out
adc
cli
lcall
int
mov
push
and
pop
jae
sahf
xor
mov
pop
push
pop
push
test
add
int
pop
adc
mov
push
aas
sub
in
inc
or
xchg
sbb
sub
fstpl
cmp
dec
sub
scas
subl
sbb
mov
mov
adcl
in
cmpsb
sbb
cmp
pop
cmp
push
pop
ds
mov
adc
pushf
aad
jmp
ljmp
into
xchg
jne
fisubl
mov
xcrypt-cbc
cmpsl
outsl
ret
daa
out
rcrl
mov
cmp
jg
mov
clc
and
popf
cmp
or
push
in
cld
push
pusha
mov
cli
mov
cmp
outsb
lret
and
lret
cmpsb
addr16
sub
movsb
adc
push
pusha
or
std
in
rcrb
sub
push
pop
xor
adc
fnstcw
inc
hlt
iret
pop
orl
add
call
aad
xor
inc
popa
es
pusha
sub
enter
jle
icebp
push
mov
in
mov
xchg
fwait
into
xor
or
jge
mov
cmp
leave
or
jecxz
js
push
test
repz
adc
repz
pop
int
jns
je
loope
push
pop
pop
jg
icebp
scas
cld
decb
cmp
dec
test
sbb
adc
lahf
xchg
pop
mov
repnz
mov
aad
cmp
cmp
ret
int3
sub
xor
adc
adc
pop
pusha
icebp
xor
xchg
xor
daa
mov
sbb
push
pop
fsubrs
sbb
cmp
add
and
outsb
mov
push
dec
cmp
je
add
lret
shll
enter
mov
or
lret
out
add
xchg
mov
inc
inc
dec
cmp
xchg
sub
stos
add
pop
mov
jge
test
sbb
jno
add
pop
mov
aad
push
popa
sti
push
push
sbb
mov
pop
inc
pop
insw
push
add
sub
subl
push
push
add
and
sub
cld
js
in
lods
sahf
add
rclb
fnstcw
pusha
and
xchg
pushf
cltd
insb
jp
add
sub
xchg
jle
mov
mov
fisubrs
pop
out
enter
adc
ret
push
sbb
call
mov
dec
lret
jo
mov
aad
push
xor
ret
pop
fstpt
cmp
in
mulb
jecxz
sub
and
jmp
bound
xor
sar
push
inc
sbb
clc
jne
xchg
dec
je
cwtl
les
icebp
fcomps
ficomps
lds
push
xor
pop
ss
push
dec
xor
std
stos
daa
jbe
and
dec
mov
push
in
aam
cmc
scas
push
inc
lss
in
or
jg
pop
ret
lret
jp
jns
xor
and
mov
sahf
xor
lret
sbb
cmp
aad
aad
pop
push
ljmp
pop
dec
sub
inc
jae
aam
pop
iret
mov
test
inc
inc
cmp
fs
mov
inc
jnp
jbe
mov
jbe
subb
xor
add
aaa
jnp
jne
dec
imul
xor
mov
pop
aam
fisubl
sbb
mov
cmc
cmp
jle
daa
mov
pop
mov
ret
outsl
subl
sbb
loopne
fcmovb
fwait
push
or
gs
jecxz
lock
push
cmp
ja
add
push
fimuls
dec
adc
daa
mov
dec
aad
ja
cmp
add
out
push
shll
xchg
sub
es
scas
aam
or
sti
dec
push
mov
ficoms
hlt
xor
out
pop
mov
dec
je
stos
call
loopne
js
push
leave
adc
mov
inc
pop
les
add
stos
hlt
adc
xor
test
xchg
and
or
out
loopne
fstpl
stos
lods
icebp
fwait
adc
test
push
xchg
mov
pop
cmp
xor
mov
cmpsb
lcall
sbb
push
hlt
push
subl
in
sbb
jae
mov
not
bound
sti
nop
dec
add
movsl
test
adc
mov
loope
dec
inc
lret
xor
push
nop
push
sbb
or
shrl
ret
sbb
fildll
mov
mov
lcall
fidivl
adc
xchg
push
mov
insb
xlat
incl
push
and
popa
into
out
jecxz
adc
aad
pop
inc
fprem1
sbb
ljmp
add
fidivrl
cs
and
push
pop
xor
cltd
xor
jo
movsb
popf
sbb
adc
popf
xchg
aas
sti
inc
lods
int3
pop
pushf
cs
into
leave
popf
ja
add
xor
mov
jno
lcall
jp
mov
das
xlat
addr16
push
imul
decb
push
sub
cli
cmp
mov
jo
inc
pop
fldcw
push
cmp
addb
stos
xchg
jo
sub
icebp
clc
loop
dec
inc
cmp
bound
dec
mov
sbb
fwait
iret
mov
mov
sahf
test
addb
dec
cmp
jne
xchg
fwait
mov
pop
daa
xor
jle
mov
cs
jle
push
test
shll
mov
sbb
xor
pop
sbb
cmpsb
sbb
rclb
jge
mov
or
push
imul
cmp
arpl
inc
out
lock
iret
xor
fisubrs
mov
shlb
jb
rol
push
push
jecxz
stc
dec
mov
or
inc
push
repnz
test
test
xorb
popa
cli
cli
in
add
and
insb
aam
add
sub
bsr
jle
and
pop
mov
xor
sub
std
in
cmp
inc
lret
inc
sti
fsubrs
inc
rsm
mov
divl
lds
fdivrs
aam
push
in
mov
aad
jb
scas
mov
aam
push
lret
cmp
jmp
ja
ret
aas
lods
sbb
test
jne
and
fisttpll
jle
push
in
das
xchg
into
xchg
rclb
and
xorb
fidivrl
ficoms
xchg
add
fyl2xp1
pop
dec
in
push
and
sbb
int3
mov
leave
add
rclb
cli
cmp
mov
not
sub
inc
mov
add
pop
jnp
nop
adc
pop
ja
push
sbb
hlt
cld
pop
lahf
mov
hlt
pushf
cmp
arpl
fnstsw
xchg
ja
xor
faddl
pop
adc
or
icebp
push
lahf
aam
jmp
or
and
sub
out
push
cmp
inc
stc
shll
pushf
pop
imul
in
ret
push
mov
pop
add
repnz
out
ror
and
aam
sub
xor
mov
jns
ret
test
ficoms
dec
out
rcrb
andl
test
pop
aaa
cld
sbb
push
add
cltd
xchg
mov
mov
jne
ret
les
push
pop
fs
lds
cli
in
scas
mov
mov
ss
mov
adc
stc
ss
add
push
iret
sub
lret
int3
lret
xor
mov
lcall
cltd
mov
sbbl
xchg
in
dec
mov
dec
addr16
sbb
push
or
lret
dec
fildll
aaa
rorb
in
mov
dec
fstpl
das
repz
xor
ret
inc
and
fbld
xchg
cld
outsb
mov
jne
mov
js
jo
or
and
test
jp
cmp
mov
and
insb
and
pop
xchg
test
imul
fimuls
outsl
or
sti
negb
arpl
ds
inc
data16
insl
enter
pop
jge
popa
ss
sti
ret
mov
sub
mov
rcrb
inc
shlb
and
shl
mov
push
sbb
xor
jge
jp,pt
fdivs
pop
adc
dec
cmp
pop
jae
aas
cmp
cltd
mov
adc
sbb
insb
and
aam
push
ret
pushf
adc
mov
mov
insl
loop
lds
inc
fs
or
arpl
or
outsb
cmpsl
cltd
or
inc
decl
push
daa
cmp
sbb
adc
js
xchg
push
xor
cmpsb
xor
lahf
add
inc
adc
push
das
icebp
test
dec
cmp
arpl
jns
lahf
fstpl
out
lods
dec
sub
jae
out
sbb
or
sbbl
add
lods
jl
jle
mov
add
insb
inc
shl
bound
push
sahf
adc
add
hlt
cvtpi2ps
into
cmp
add
stos
jmp
dec
cmp
cwtl
sub
xchg
dec
cmpl
das
cmpsl
lods
bound
add
push
push
cmp
pop
jb
jb
je
sti
and
sbb
and
movups
mov
mov
inc
push
fmull
loop
xchg
repz
icebp
mov
pop
or
dec
dec
and
daa
pusha
out
dec
xchg
mov
dec
clc
or
xchg
jns
pop
pop
push
inc
mov
jge
mov
mov
lock
or
clc
cltd
or
sti
dec
das
out
outsb
push
xchg
dec
sahf
jae
insb
push
mov
dec
add
inc
inc
cmpsb
incl
inc
in
out
into
stc
fistps
test
xor
mov
sbb
out
cmp
inc
push
dec
rcll
rorb
ret
push
pop
fsts
add
jns
mov
test
movsl
int3
sbb
sub
xchg
adcb
loop
jmp
call
sbb
mov
mov
lods
jbe
and
xchg
and
jge
adc
mov
adc
pushf
je
cli
pop
int3
mov
std
adc
add
sub
inc
test
push
or
fdivrl
test
imul
les
and
loopne
ja
xlat
xor
imul
pop
add
mov
idivb
fiaddl
out
xlat
mov
and
adcb
add
iret
daa
stos
fimuls
or
cltd
icebp
mov
fdivp
int3
aam
jg
test
cmc
les
scas
divb
lahf
cli
xlat
fcmovnu
or
in
ja
cmp
jbe
dec
std
popa
popa
cwtl
jecxz
jp
dec
push
mov
loopne
loopne
jmp
mov
and
lods
bound
or
cmpsb
movsb
xor
cmp
pop
jbe
in
dec
lock
pop
popa
mull
xchg
sub
sbb
push
xor
mov
cmp
outsl
or
test
cli
sahf
jge
or
dec
in
push
repz
jns
lds
dec
fcmovne
cmp
or
data16
stc
and
insl
dec
cmpl
or
outsb
aad
inc
hlt
inc
imul
scas
out
pushf
out
sti
fwait
repnz
jne
imul
jg
dec
lcall
mov
enter
and
or
fwait
or
pop
push
cmp
xchg
in
ret
cmp
fldl
stc
fs
pop
jno
push
repz
jg
mov
push
js
xor
daa
enter
lcall
fidivl
jmp
mov
es
iret
mov
pop
xchg
sti
add
repnz
inc
xchg
mov
cltd
mov
inc
fs
sbb
xchg
out
or
pop
xchg
ffree
pop
lods
pop
bound
stos
les
andb
stos
mov
out
roll
jns
ja
mov
xor
pop
or
ss
jecxz
add
stos
xorb
inc
jae
jne
sahf
sbb
das
mov
ret
in
add
je
inc
and
or
mov
daa
mull
cmc
jno
xorl
ja
notl
jnp,pt
adc
fwait
xchg
retw
test
push
mov
sbb
jl
ret
repnz
mov
sbb
sub
dec
or
push
fists
arpl
and
popf
lret
cwtl
jne
push
lret
jl
js
xor
mov
cld
pushf
or
jne
push
xlat
sbb
jae
push
mov
shll
addb
scas
and
stos
mov
and
lahf
mov
fistps
mov
cmp
mov
jp
add
inc
xchg
jo
and
fwait
sub
rolb
mov
jnp
popl
xchg
fadd
xchg
cmp
aas
pop
xorl
xchg
push
rcll
into
ret
shll
sub
pusha
in
loopne
cmp
or
ljmp
es
add
ljmp
push
or
jae
gs
mov
inc
xor
out
dec
mov
push
pop
dec
sahf
mov
mov
pop
cmpsl
add
cmpsb
pop
cwtl
in
cmpsb
enter
ss
mov
xchg
loop
jmp
pop
data16
mov
inc
sbb
outsl
push
in
loope
aam
jl
pop
dec
shll
xchg
jne
andb
mov
adc
and
xor
cmp
mov
jecxz
pop
xchg
cwtl
push
dec
sub
mov
cld
mov
add
inc
mov
ja
gs
jmp
xchg
mov
test
adc
jbe
fwait
lds
addr16
cmpsb
ret
cmp
push
in
clc
pop
hlt
pop
ret
or
pop
divl
cltd
jno
out
mov
notl
mov
vpaddw
xchg
repz
test
fists
lods
cmp
mov
and
rcll
int3
out
jb
xchg
icebp
dec
test
push
cmp
sub
add
mov
test
es
dec
mov
sub
and
mov
cmpsl
push
arpl
cmp
mov
lock
fidivrl
sbb
push
add
fistl
pop
subl
repnz
or
call
xor
dec
lods
lret
idiv
and
mov
stc
inc
dec
bnd
fs
repnz
mov
ret
cmp
addl
cmp
sahf
mov
stos
cmp
pop
and
push
enter
dec
cmp
or
jmp
push
sub
rcr
pop
or
pop
mov
mov
xchg
sbb
jne
movsl
inc
pushf
sbb
cld
rolb
fdivl
in
adc
scas
push
mov
sarb
cmpsl
and
mov
fwait
sub
pop
adc
xor
adc
fidivl
mov
loopne
xor
cmp
or
push
lcall
jbe
sub
cwtl
imul
sub
push
stos
pop
jno
mov
jmp
nop
inc
push
push
mov
lcall
scas
pop
dec
ret
clc
inc
jns
icebp
push
movsb
jg
xor
call
mov
daa
lods
out
cmp
xorb
rcrl
pop
cmc
mov
in
popf
pop
out
push
leave
pop
xchg
add
in
dec
xchg
push
into
sub
cmp
and
adc
dec
sub
into
movsl
pushf
stc
xchg
dec
je
jmp
inc
xchg
in
lock
xchg
push
pusha
gs
cmpsb
sbb
mov
cwtl
or
adc
or
pop
push
imul
mov
pop
clc
cmc
loopne
xor
add
or
stos
adc
jb
mov
lods
sbb
stos
xchg
sub
mov
adc
mov
pushf
sarb
out
aas
mov
into
aam
lret
jne
xor
aam
js
outsb
lods
xor
insl
push
loope
cmp
xor
nop
daa
aad
dec
and
jbe
dec
sub
cld
xlat
clc
repnz
push
addr16
dec
int
jecxz
mov
es
frstor
xchg
test
mov
sub
jno
fstpt
test
jo
mov
mov
inc
aam
adc
dec
mov
mov
sbb
ja
insb
out
dec
shl
sbb
cli
pop
bound
jns
movsl
or
loop
mov
xchg
mov
les
movsl
push
xchg
stos
cmp
ss
mov
out
sub
jmp
test
pop
xor
lcall
fisttpl
sub
dec
sbb
std
subl
inc
loop
insl
frstor
iret
lea
sub
mov
dec
ret
xor
or
mov
iret
shll
nop
test
sub
or
pop
leave
pusha
aas
mov
sti
inc
imul
add
fwait
nop
or
fucom
cltd
ss
fistpl
dec
xor
xchg
jbe
xor
push
inc
ja
dec
aaa
pop
aad
cmp
mov
loope
lret
icebp
outsl
xor
movsb
mov
inc
data16
out
les
cld
xchg
dec
push
mov
cmp
sbb
or
push
nop
bound
jmp
inc
sbb
sar
mov
mov
daa
daa
and
lods
xchg
es
mov
mov
test
mov
into
loope
orb
or
push
test
push
mov
pusha
js
mov
ret
dec
sbb
dec
cltd
sub
push
sbb
lahf
inc
leave
aam
jne
dec
sbb
hlt
sub
pop
enter
mov
mov
cmp
jne
std
xchg
bound
adc
inc
pop
jns
sti
pop
sub
adc
std
dec
addb
outsb
lods
shr
cltd
in
xchg
and
jle
out
mov
dec
rolb
push
je
bound
in
push
sub
inc
hlt
incb
inc
cmp
fidivs
sub
dec
xor
mov
push
mov
xchg
cmpsb
shl
sbb
add
jecxz
loope
insl
jmp
push
pop
xchg
aam
adc
cmpsl
mov
out
cmp
mov
inc
pop
pop
xchg
ss
push
pop
inc
mov
mov
dec
leave
test
or
test
and
test
ss
push
sbb
or
and
hlt
jge
ret
fmuls
repnz
loope
in
or
pop
jae
push
jecxz
or
sub
movsl
imul
mov
xor
add
inc
and
or
cwtl
jae
pushf
fnstcw
lahf
mov
in
cs
inc
mov
sti
repnz
mov
ret
pusha
mov
hlt
js
outsb
lcall
sbb
adc
shrb
or
sbb
cs
outsb
mov
test
mov
cli
lds
ljmp
mov
sub
popf
frstor
or
ds
rorl
cmp
cmp
and
mov
insl
enter
scas
xor
lahf
or
xchg
push
stc
pop
sub
and
pop
adc
cmp
out
stos
scas
sub
pop
pusha
cmpsl
dec
mov
lods
sbb
repz
ret
mov
fsts
hlt
lds
dec
mov
push
add
push
xor
mov
push
loopne
pushf
sar
jns
repnz
dec
iret
mov
ret
mov
add
xlat
cmc
or
imul
pop
jns
fs
in
sub
or
icebp
imul
mov
movsl
cmp
shrb
jl
or
xchg
fisttpll
xchg
adc
lret
in
repnz
mulb
je
negl
cs
sbb
jmp
mov
mov
mov
ret
mov
push
jb
push
or
jl
pushf
loope
xchg
cmpsl
scas
fimull
mov
test
shl
cmp
cmp
clc
popf
in
and
ret
rcll
push
fcmovnbe
inc
subb
movsb
cmpsb
clc
pop
hlt
inc
enter
inc
rclb
rorb
or
shlb
and
data16
push
and
sub
xor
push
int3
jle
and
inc
aad
cwtl
and
xor
scas
pop
push
std
jb
out
fsts
sbb
daa
pop
mov
push
pop
lock
stos
imul
push
pusha
sub
xchg
mov
leave
push
jecxz
push
and
lock
repnz
fstl
imul
push
cmp
cmp
jae
adc
sahf
push
jmp
call
jle
push
sub
inc
in
pop
jb
loop
out
aad
push
mov
gs
cmpsb
addr16
test
subl
pop
outsb
adc
movsl
inc
in
lahf
in
lds
lret
lock
cld
add
lock
mov
adc
add
test
ficoms
cmp
dec
inc
outsb
mov
mov
pop
adc
or
and
dec
stos
stos
aad
out
and
push
stc
insb
dec
in
test
xorl
mov
lea
cmp
jmp
pop
or
jns
imul
xchg
in
push
or
xor
das
mov
cwtl
jns
push
das
fdivrl
jno
in
cmc
jbe
cs
pop
or
mov
mov
xchg
push
mov
mov
lods
pop
xchg
cltd
add
jmp
mov
popa
push
add
repz
lret
xchg
pop
cmpsb
movsl
pop
iret
inc
scas
fsubrp
pop
out
les
lock
pop
sbb
loopne
xor
mov
xchg
outsb
mov
jle
pop
and
cmpsl
mov
add
fistpll
push
lds
add
out
outsb
pushf
ret
dec
fmuls
push
insl
mov
cld
int
movsb
adc
loopne
pop
or
outsb
xor
ret
and
push
ret
hlt
pop
imul
inc
add
push
addb
xchg
and
jl
adc
sub
lds
xor
sbb
roll
pop
arpl
lret
push
int3
jnp
xchg
repz
int3
jecxz
xchg
push
in
sub
fdivs
insl
call
cmp
out
cmp
repz
mov
xor
fdivs
adc
adc
sub
ja
cmpsb
xlat
lock
jp
out
lods
mov
pop
xchg
mov
dec
nop
xchg
add
mov
xchg
fildl
ds
cmp
aas
repz
mov
daa
in
loope
scas
out
cmp
mov
mov
dec
fbld
pusha
xchg
rorb
push
adc
lcall
push
adcl
int3
and
mov
and
mov
jo
dec
daa
push
out
and
je
insb
sub
pop
in
or
test
and
fnstcw
jge
ja
dec
xchg
leave
les
mov
mov
pop
xor
sub
rorl
shr
sbb
xchg
add
sbb
iret
popf
cli
test
inc
pushf
fwait
movsb
sbb
lret
arpl
hlt
rorb
mov
idivb
roll
in
out
scas
lahf
imul
lcall
fwait
jne
dec
xchg
or
out
push
push
pop
les
leave
jne
dec
loop
or
xlat
sub
dec
xor
sub
popf
loope
push
mov
iret
jg
icebp
mov
sbb
ret
hlt
cltd
jo
fmulp
push
push
dec
adc
pusha
pop
sti
lcall
jmp
fdivrs
jbe
or
jmp
iret
inc
cltd
je
divl
adc
mov
cmpsb
scas
adc
mov
les
ss
lock
and
push
mov
ret
into
das
insl
dec
pop
fistpl
add
xchg
adc
ds
stos
mov
divl
jg
jp
ljmp
iret
pop
jmp
adcb
sub
mov
test
hlt
dec
dec
xor
vmovapd
lock
cmc
and
sub
mov
dec
push
mov
lret
into
movsl
mov
pushf
push
add
push
insb
jbe
fidivrs
mov
jae
push
cmpsl
jae
sahf
ss
push
cmpsb
sbb
ret
add
lahf
push
fistps
sub
out
xchg
aas
loop
add
sub
dec
pop
xchg
out
inc
das
and
rcr
dec
inc
pop
sarl
adc
inc
xor
imul
icebp
inc
push
movsb
jo
stos
mov
pop
pop
sbb
test
inc
cmp
mov
jge
mov
nop
cli
loop
mov
ficompl
fildll
jne
mov
xchg
int3
sahf
daa
jmp
mov
push
jbe
cld
xchg
repz
xchg
stos
dec
imul
or
push
xchg
jbe
inc
mov
sub
push
int3
mov
aam
inc
data16
outsl
adc
fisttps
dec
test
leave
jbe
xor
sar
inc
ficompl
and
call
test
insb
aad
imul
adc
call
xlat
shlb
jecxz
dec
xor
pop
outsl
jg
outsb
icebp
pop
and
mov
mov
xchg
movsl
pop
cmp
inc
and
aad
lret
aaa
pop
cmp
dec
jecxz
cmp
adc
jae
adc
movsb
push
adc
or
push
sbb
lcall
cmp
dec
dec
mov
mov
inc
mov
mov
jmp
cmp
sbb
jb
jno
or
xchg
ret
ficoms
xchg
sahf
and
adc
push
jb
shll
cmp
add
mov
jmp
in
jne
int
pop
insb
repz
loopne
pushf
and
jns
out
xor
fcom
repnz
inc
push
cmp
stos
and
push
lock
mov
insl
sbbb
or
jbe
mov
pop
jnp
enter
rclb
push
or
js
pop
mov
out
popa
fsubs
stos
je
in
pop
cmpsl
push
jge
inc
add
movsl
outsl
ja
pop
outsb
aam
cld
inc
push
pop
aaa
xor
pop
das
sbb
sub
in
or
lret
mov
loop
aas
imul
das
jae
daa
cmp
clc
ljmp
and
sub
cli
lcall
jae
lock
lea
sub
adc
mov
ffree
subb
jp
ficompl
pop
fldenv
sbb
js
push
or
push
int3
pop
xchg
jo
mov
mov
sbb
cmp
xchg
fucomp
rcrb
aaa
fcoml
dec
xor
ficompl
mov
mov
xchg
call
push
inc
adc
fsubl
sbb
push
mov
in
sbb
xchg
test
push
jl
xor
jae
fmulp
negl
add
test
mov
mov
mov
repnz
mov
imul
das
out
cmp
sub
mov
divl
dec
add
shll
pop
jae
gs
sbb
int3
push
jae
sub
dec
xchg
adc
dec
jle
aam
push
addr16
sub
ficompl
fwait
inc
mov
inc
js
push
jae
xchg
mov
dec
cmp
pushf
push
fs
xor
adc
add
push
cwtl
dec
lods
rorb
sub
fs
enter
faddl
xchg
cli
inc
aaa
loopne
aas
sub
xlat
sbb
mov
push
bound
inc
jg
repnz
and
or
mov
pop
hlt
fnstcw
pop
mov
lahf
jb
push
into
push
lea
js
xchg
hlt
movsl
sarl
icebp
inc
jo
mov
or
inc
add
cmp
insl
addr16
fistpl
addb
mov
rcll
lret
pop
daa
inc
push
lret
push
lret
nop
cmc
pop
or
mov
inc
fcompl
mov
sub
and
or
mov
xor
push
dec
popa
xchg
mov
xchg
loopne
dec
pop
out
mov
icebp
cld
cmpsl
pop
gs
xlat
inc
jecxz
test
idivb
xchg
loop
ret
arpl
movsl
mov
pop
or
push
int3
in
or
jg
push
gs
inc
test
xlat
data16
mov
mov
scas
ljmp
sub
pop
cmp
jae
or
sub
xchg
aad
add
xchg
aad
sbb
and
repz
jbe
adc
xchg
and
inc
cltd
movsb
or
add
andl
js
pop
mov
test
or
lea
ror
hlt
movsl
mov
xchg
cmp
pop
jbe
cmpsb
fcoms
cmp
imul
or
push
inc
jp
roll
mov
adc
sbb
cmp
push
cs
add
les
outsb
lcall
jl
xor
pop
jb
jl
and
sub
jnp
out
xor
aam
call
fdivl
add
add
add
or
in
leave
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
daa
sbb
pop
jl
dec
pop
jl
testb
notb
sbb
cmp
imul
ret
outsb
rcll
stos
cmp
xor
in
jge
negb
int
dec
aad
push
movsl
int
and
or
lods
insb
push
stc
test
jmp
lcall
sbb
add
ficoms
mov
mov
loopne
or
lds
sub
call
push
cmp
dec
jg
sbb
dec
mov
or
mov
adcl
in
xchg
out
pop
test
rorl
push
shl
pop
adc
mov
mov
jl
xchg
mov
mov
mov
inc
scas
xchg
repz
xor
dec
scas
popf
push
adc
push
jo
daa
jns
cld
fisttpl
roll
scas
cli
jmp
test
inc
mov
and
push
push
mov
stc
pop
gs
test
mov
loopne
test
pop
push
je
mov
xorb
sub
mov
xor
sbb
aaa
sqrtps
push
movsb
imul
rcll
mov
loopne
mov
dec
push
sub
pop
mov
sub
lods
xchg
shrl
loopne
jmp
or
mov
xchg
or
dec
cmc
loopne
scas
add
pop
out
xchg
sub
or
rorb
and
notl
add
sarl
pop
jg
xchg
cmpsb
inc
scas
pushf
mov
dec
test
xor
les
jbe
fstl
jle
xchg
rclb
pop
sbb
movsl
rcr
push
cmpsb
adc
test
fmull
adc
mov
das
mov
adc
and
lret
or
lahf
into
ret
dec
clc
push
ds
cmp
adc
movsl
mov
and
xchg
sub
push
clc
xchg
les
in
fsubs
aad
mov
dec
pop
hlt
inc
sbbb
and
mov
iret
addb
xchg
movsb
iret
add
test
imul
out
mov
xchg
and
loope
and
fcoml
pop
xlat
pop
add
cmp
addr16
add
mov
jmp
pusha
xor
sahf
sbb
out
inc
mov
leave
in
popw
out
mov
mov
daa
and
jl
sarl
cld
jne
pop
xor
jb
xor
setl
jb
mov
arpl
pop
mov
inc
push
aas
sbb
push
ret
inc
mov
daa
mov
nop
je
incb
enter
or
ret
pushf
mov
adc
sbb
shlb
dec
mov
scas
mov
out
test
repz
ds
push
cmpsb
push
jg
mov
arpl
push
frstpm(287
sub
loop
jmp
ffree
push
pop
je
in
adc
xchg
xchg
in
out
jne
mov
out
cmp
ja
inc
mov
cmc
ror
dec
lds
inc
sbb
mov
mov
sub
inc
mov
mov
in
imul
sub
jns
scas
pop
cmp
es
pop
test
xchg
clc
std
add
es
fsubrs
mov
and
xchg
xor
lret
mov
sub
or
fimuls
call
inc
xchg
popa
imul
inc
stos
xchg
jecxz
lret
repz
ret
lods
fldl
ret
sbb
gs
cmp
add
out
push
stc
repz
sub
mov
mov
pop
in
push
push
enter
sub
sbb
das
fbstp
pop
sahf
int
popf
adc
sbb
sbb
test
push
ret
push
pop
outsl
or
outsl
dec
or
mov
xor
sahf
jle
cmp
and
sbb
jl
repz
sub
or
xchg
js
arpl
inc
inc
shr
imul
xchg
cmp
adc
aad
lret
imul
dec
enter
mov
xchg
ret
pushf
fcompl
cmpsb
and
push
lods
sahf
cwtl
roll
dec
adc
push
cld
frstor
jbe
adc
divb
lods
std
test
jecxz
push
dec
xor
pop
inc
mov
xchg
cmpsb
mov
cs
adc
pop
xchg
adc
dec
js
jo
cld
cmp
pop
and
inc
mov
fldcw
or
test
xchg
push
fucom
data16
cmp
pop
repz
pop
fiaddl
rcr
ret
jbe
cmp
adc
inc
mov
cmpsb
test
cmp
rcr
jo
and
popa
dec
mov
stc
repnz
mov
int3
and
aas
jnp
enter
sbb
adc
xchg
xchg
cmp
and
xor
mov
and
adc
ds
sub
arpl
fdivr
int
fcom
int
mov
shlb
pusha
fwait
mov
movsb
rcrl
inc
or
adc
and
cmpsl
cmp
and
daa
aaa
sbb
mov
push
hlt
sub
adc
pop
push
mov
jmp
pop
fidivl
aam
out
mov
jo
cltd
sarl
or
push
outsl
testl
sub
test
insb
dec
and
int3
lods
ret
dec
dec
jb
jae
movsl
and
bound
xchg
idivl
out
out
sub
push
jb
mull
pop
cmp
push
inc
lea
or
clc
push
scas
or
out
or
dec
das
daa
or
lret
mov
cmp
xor
xchg
push
lods
adc
xchg
out
sbb
jg
stos
jns
outsl
mov
lds
loopne
pushf
lahf
nop
and
jnp
push
sub
aas
orl
sub
xchg
mov
and
insl
int
push
mov
js
std
negb
subl
sbb
test
loope
sub
nop
popf
lods
shll
sub
aaa
sbb
add
inc
rol
incb
pop
cwtl
xchg
inc
repnz
insb
idivl
push
loope
ret
rclb
xchg
push
mov
add
imul
mov
sub
outsb
dec
out
shlb
aaa
ss
pop
sbb
jae
jns
mov
test
sbb
cmp
adc
test
out
icebp
and
mov
jp
cmc
mov
test
push
dec
shl
add
outsb
cld
adc
scas
orl
rep
mov
pushf
add
pop
cmp
andl
jb
lods
sti
sbb
mov
mov
pop
pop
jle
and
in
mov
pop
loop
jecxz
movsb
cmc
jmp
enter
or
mov
nop
mov
pop
pusha
enter
or
rcrl
or
jbe
pop
add
mov
inc
dec
arpl
insb
adc
lods
rol
or
inc
insl
cmp
in
xchg
in
jno
test
lret
int
xchg
mov
jb
inc
jg
pushf
lods
icebp
mov
xchg
in
inc
cmp
adc
jge
sahf
nop
lcall
aad
push
out
push
inc
test
insl
pop
sub
xchg
shll
and
dec
insl
adc
xor
sbb
outsb
es
jle
sti
imul
sbb
ret
sbb
insb
cmc
addr16
lret
sub
mov
es
and
stos
inc
mov
dec
jno
jp
mov
mov
dec
out
sub
fcmovnu
ljmp
int
shrb
mov
mov
iret
iret
mov
icebp
or
mov
pushf
adc
add
les
shrb
into
adc
negb
icebp
adc
in
mov
sahf
in
ret
adc
inc
out
leave
ss
cmpsb
shrb
mov
dec
xchg
inc
test
fildll
dec
rep
cmpsb
aaa
push
adc
mov
insl
aam
and
xor
or
mov
aaa
lcall
push
inc
mov
mov
mov
lea
adc
cmpb
cmp
popa
shrb
mov
push
ror
enter
mov
push
ljmp
popa
imul
cltd
test
add
cmp
sub
and
adc
popf
pusha
scas
push
and
push
push
int3
inc
popa
pop
ja
and
cmp
ret
aaa
or
mov
lcall
enter
lea
movsb
inc
sub
cld
jo
adc
mov
fwait
outsl
cmp
pop
sub
dec
ret
mov
mov
push
adc
jmp
aad
push
cltd
js
pushf
xorw
push
push
xchg
sub
hlt
mov
scas
sub
fisttps
loop
add
xchg
pusha
loop
icebp
sbb
mov
sbb
in
mov
mov
sbb
out
call
and
clc
jb
test
cld
add
xchg
inc
leave
shll
mov
sub
xchg
idivl
jle
inc
das
jne
push
dec
cli
std
mov
push
xchg
pop
fstl
push
aas
shll
sti
sub
shl
nop
nop
or
stc
and
fwait
aaa
data16
and
sbb
in
pop
mov
pop
pushf
xor
add
sub
lret
shr
jb
outsl
adc
lock
add
je
data16
sub
inc
and
pop
dec
xchg
pusha
fstpl
aas
repz
out
cmp
mov
lock
cmc
pop
int3
repz
fsub
int
lock
loope
cwtl
loopne
sbb
add
test
cmp
gs
loopne
out
mov
mov
fdivs
divb
mov
sbbb
in
xchg
pop
pushf
dec
sub
inc
jge
mov
jge
rolb
mov
fwait
out
push
popa
sub
in
test
mov
xchg
test
jo
cmp
xchg
add
pop
adc
mov
bound
scas
pop
ljmp
inc
mov
fwait
add
add
xchg
in
gs
jle
add
ret
mov
std
cmp
jecxz
ficomps
jno
xchg
push
push
pushf
add
jmp
add
jno
int
popa
fisubrs
push
or
dec
dec
ret
out
cmpb
leave
pop
push
pop
or
add
icebp
sbb
ficompl
inc
xchg
adc
and
insb
adc
test
aaa
mov
imul
sub
xchg
inc
sub
sbb
pop
mov
xor
stos
adc
popf
fs
pusha
xor
fsubs
nop
mov
sub
gs
adc
fs
data16
insl
and
pop
sub
enter
pop
hlt
ds
push
lods
xorl
sbb
xor
ds
test
rcrl
ret
cwtl
cltd
mov
xor
cmc
ret
add
cwtd
add
insl
cwtl
in
pop
xor
daa
adc
movsb
arpl
lea
mov
xor
sahf
dec
aad
outsl
pop
mov
lret
test
mov
push
rcll
xchg
jge
xchg
dec
adc
jno
mov
mov
xchg
jno
sbb
jno
or
sub
pop
sub
fdivs
pop
sub
scas
xor
add
cmp
pop
jecxz
or
popa
and
xor
push
insl
or
in
or
ret
aas
dec
rcrb
fcoms
xchg
xor
mov
das
mov
push
cmp
jmp
dec
imul
mov
mov
out
push
scas
inc
call
pop
xchg
out
and
aad
push
ds
and
xchg
add
fsubrs
jns
mov
shr
adc
inc
dec
mov
push
cmp
imul
add
aad
jecxz
testb
data16
push
addl
adcb
cld
inc
sbb
push
xchg
pop
rcrb
andl
inc
sub
pop
movsb
loopne
jbe
dec
test
sti
mov
ret
std
jae
loope,pt
xor
ret
xchg
push
cmpsb
into
jg
hlt
xchg
leave
roll
ret
sub
repz
rolb
enter
mov
movsb
xchg
xchg
adc
push
inc
xor
cmp
mov
cmp
pop
fildll
lret
out
inc
dec
mov
jb
inc
mov
in
movsb
ret
jp
cmc
pop
ja
add
push
sub
lahf
int3
dec
aaa
std
xchg
pop
pop
jae
or
xor
in
sbb
xchg
jp
pushf
inc
adc
dec
push
mov
sbb
jne
scas
mov
xchg
ljmp
insb
sti
xchg
test
inc
jle
sub
push
into
movsb
mov
mov
int3
test
inc
int3
and
push
jl
push
mov
cmp
cmp
adc
cmp
xor
jmp
sahf
fnstsw
dec
dec
aad
aas
sub
sbb
push
jnp
cwtl
jbe
xor
xor
and
mov
push
xchg
mov
orl
inc
and
xchg
and
aam
pop
mov
shrl
lds
jne
ljmp
dec
loop
pop
lods
sbb
ljmp
jne
xor
adc
into
aas
leave
cmc
roll
aad
mov
ficoml
addl
adc
add
addr16
sub
sub
push
lds
inc
pop
call
cmc
pop
and
push
js
sub
sbb
xchg
jne
cmc
cmc
jp
jo
movsl
jns
pop
stos
ret
scas
pop
xchg
xchg
call
call
mov
pop
xor
adc
aam
loop
subb
mov
jge
inc
pop
sub
xchg
cltd
outsl
pop
and
sbb
push
push
arpl
jp
shl
xor
es
push
test
ja
shl
scas
mov
inc
icebp
adc
mov
loope
add
inc
xchg
sbb
mov
call
int3
mov
push
enter
mov
sbb
push
clc
out
cmp
test
dec
test
or
push
inc
iretw
ret
push
xchg
mov
add
sbb
leave
mov
out
mov
adc
jmp
movsb
cmp
pop
mov
daa
lock
addl
dec
push
in
fdivrl
dec
push
fisubs
inc
or
addr16
scas
mov
mov
pop
jp
sbb
cmpsb
xor
out
adc
rep
aam
inc
std
jl
lcall
inc
cltd
jno
imul
pop
and
xchg
jne
push
arpl
inc
in
push
cmp
cwtl
lahf
push
lret
sbb
test
aam
mov
mov
lods
out
inc
orb
int
scas
loop
and
push
rcrb
sub
sbb
push
aaa
cli
sub
cld
mov
jnp
pop
jecxz
cmp
sbb
addb
jg
movsb
test
sub
sub
je
iretw
cmp
xor
insb
fdiv
andl
sbb
adc
movsl
shr
addr16
xchg
jge
xor
sbb
test
sbb
jo
add
dec
push
movl
inc
rcll
jno
mov
mov
and
mov
adc
adc
or
out
inc
ret
int
clc
mov
pop
mov
in
and
xbegin
clc
outsl
mov
lock
mov
lock
scas
or
repz
mov
mov
or
fldt
rorl
fstpt
cmp
out
push
dec
fsubp
mov
mov
push
addr16
cli
test
adc
das
cld
pop
mov
sbb
pop
or
cld
xor
add
sub
mov
jmp
mov
addr16
mov
push
jnp
je
jp
xchg
insl
pop
ret
cwtl
int3
sbb
mov
das
xchg
ret
xor
js
lcall
incb
fwait
adc
push
or
jmp
push
xchg
pop
cs
cwtl
in
loop
cmc
es
lea
pop
cmc
adc
and
mov
arpl
imul
cmp
pop
outsb
cld
sti
lods
fs
cmc
xchg
xor
nop
imul
adc
daa
and
mov
scas
mov
xchg
push
int
mov
fistps
add
jmp
or
and
lret
or
js
insb
xchg
movsl
sti
mov
inc
jnp
lds
jns
push
cmp
call
int
mov
in
cmc
dec
cwtl
fildl
dec
lahf
fiaddl
push
cmp
mul
fwait
arpl
out
loope
sub
push
in
sbb
mov
xor
pop
inc
arpl
out
shrl
sahf
xchg
ret
es
jl
push
test
gs
pop
xchg
or
mov
iret
adc
push
pop
push
enter
cmc
push
pop
mov
out
jo
mov
pop
jb
test
xchg
mov
fst
xor
clc
repz
or
rorb
fcos
push
lods
out
jp
add
fcoms
mov
xor
adcb
or
push
in
test
test
adc
stos
mov
mov
addr16
pop
leave
inc
push
and
cmpsl
add
mov
add
pop
add
jecxz
jae
xchg
fnstsw
push
mov
xchg
and
aam
xchg
push
lds
mov
fstpt
loop
inc
pop
mov
mov
fimuls
or
mov
mov
xorl
jmp
cs
pop
xchg
mov
loopne
daa
xbegin
sbb
js
fdivr
lret
mov
sbb
push
mov
mov
xchg
jge
gs
arpl
fnstcw
jmp
loope
jae
les
or
inc
jmp
pop
mov
leave
mov
mov
push
mov
fldt
lcall
int3
sub
sub
je
aaa
sub
loopne
lods
mov
imul
and
mov
jno
adc
movsl
test
sub
pop
stc
mov
pop
jns
lret
sbb
xchg
mov
test
mov
jp
add
pop
xlat
popl
add
repz
testl
sbbb
or
fbstp
sahf
xor
out
stos
dec
daa
roll
xchg
in
jmp
in
pop
mov
push
push
and
sub
ror
inc
into
cmpl
mov
stc
notl
das
sbb
mov
imul
xchg
adc
in
add
dec
dec
ss
sub
stos
pop
adc
out
icebp
and
jle
dec
adc
add
in
xchg
fsubrl
add
repz
push
loop
ja
add
lret
imul
mov
outsb
arpl
inc
daa
pop
mov
jns
push
jne
movsl
xchg
and
rolb
test
xor
adc
iret
or
or
popa
out
fisttpll
push
mov
add
jno
sub
or
mov
adc
inc
mov
pop
mov
add
add
cwtl
xchg
pop
arpl
out
lcall
jnp
in
cli
mov
dec
out
cmp
xchg
push
jb
jge
push
sub
cmc
lahf
mov
adc
popa
cld
dec
add
cmp
cld
nop
jae
mov
enter
pop
mov
pop
fwait
xorl
mov
inc
adc
pop
lea
les
into
pop
xor
pop
and
sub
push
mov
ss
rcrl
add
popf
fildl
fs
and
stos
adc
or
inc
lahf
mov
or
pop
sbb
jbe
scas
and
repnz
lahf
ret
and
xchg
sbb
ficompl
pop
pusha
add
cmc
jl
push
xor
pop
addb
sbb
sarl
call
inc
jno
aam
jmp
mov
pusha
inc
scas
test
add
aad
mov
add
lcall
cs
fwait
test
jg
mov
je
push
mov
xchg
jbe
pushf
clts
inc
mov
xchg
dec
xor
ret
sbb
add
fwait
dec
iret
mov
repz
addr16
cmp
mov
ja
lcall
and
outsb
enter
xchg
mov
dec
fs
pop
cmp
test
cmpsl
xchg
cmc
xchg
push
or
jb
push
movsb
xchg
test
int3
cmp
jne
jl
clc
xor
outsl
inc
xchg
sbb
out
int
adc
jle
mov
das
cmp
insb
push
iret
push
out
push
and
mov
nop
cmp
sbb
scas
scas
add
pop
dec
push
fidivl
xor
scas
xchg
sbbl
arpl
daa
pop
add
mov
adc
adc
push
jbe
jg
ss
clc
or
cmc
add
lcall
mov
jnp
inc
int3
filds
hlt
adc
les
dec
inc
jl
mov
negl
std
jns
mov
loop
mov
outsb
mov
leave
fs
rclb
jl
pop
adc
dec
xchg
adcb
mov
aam
pop
push
popa
pusha
loope
and
call
test
test
push
sub
mov
sbb
lods
cmp
cmpsb
jge
sbb
jbe
adc
subl
add
xorl
jle
cmc
xchg
mov
in
xchg
fisubrl
cmp
addl
add
jns
cltd
loop
jns
jle
mov
mov
in
xor
add
int3
jecxz
stos
fcmovnu
aas
aaa
aas
pop
popf
daa
dec
popf
repz
mov
stos
mov
stos
into
and
movsl
pop
lahf
push
pop
fldt
into
sbb
and
nop
fwait
jge
xor
jnp
push
mov
fucomi
pop
into
inc
lods
adc
scas
int3
ret
xchg
dec
icebp
add
test
mov
int3
lock
pop
aad
jge
dec
sbb
adc
or
dec
leave
cli
int3
push
jae
xchg
push
jbe
adc
daa
adcl
pushf
xor
fldcw
lods
out
mov
mov
mov
dec
push
ret
lahf
push
xor
pusha
pop
lahf
ret
or
gs
mov
mov
das
test
xchg
mov
mov
add
jne
xchg
push
jmp
pop
xchg
lret
idivl
or
stos
mov
lods
push
inc
inc
popf
fcomp
daa
jae
mov
imul
jge
pop
jo
mov
nop
fwait
jp
arpl
xor
xlat
shrl
mov
xor
rcll
xchg
xchg
pop
cmpsl
cld
loop
sahf
sbb
mov
int3
iret
inc
sub
out
xchg
mov
push
jnp
and
aam
push
mov
mov
or
cmp
fld
add
call
out
dec
bound
cmpsl
mov
jmp
cmc
in
mov
sarb
clc
jmp
mov
scas
mov
cmp
push
add
movsl
loope
mov
ja
sbb
data16
ss
mov
scas
sarb
test
out
les
ds
jns
cwtl
sub
inc
dec
pop
mov
gs
xor
ret
mov
loope
out
in
call
mov
aaa
lods
aaa
call
cli
in
xor
push
fcomp
push
lahf
stc
push
cmpsl
xchg
popa
or
adc
inc
loop
sbb
jle
adc
in
sbb
mov
ret
adc
dec
icebp
lods
sbb
fcmovnu
lock
dec
jl
in
adc
jge
movsl
mov
cwtl
push
cs
and
aaa
jns
and
leave
add
jl
sub
jno
mov
jg
mov
mov
push
push
pop
jns
cmp
enter
cmp
mov
inc
add
sub
xchg
xchg
mov
pop
scas
mov
push
and
mov
lods
ss
mov
cwtl
bswap
lret
roll
mov
and
push
fwait
das
mov
ja
mov
or
add
xor
pop
jmp
aad
mov
fstpl
cmpl
sub
add
pushf
mov
add
cmpsl
xchg
mov
pusha
outsb
xchg
mov
pusha
outsl
dec
andl
pop
or
xchg
jns
sub
add
mov
xor
mov
loopne
xchg
gs
std
push
push
sub
mov
xor
jae
sbb
sub
and
daa
jno
jbe
mov
jg
push
jb
std
sub
shrl
pop
pusha
imul
into
into
mov
pop
sub
cli
jbe
push
cld
pop
lahf
sbb
mov
test
scas
dec
loop
dec
mov
push
bound
add
jmp
mulb
stc
dec
popa
jns
int
in
lea
mov
dec
dec
aas
lret
fidivrs
icebp
jge
pop
aam
and
xor
jnp
dec
inc
mov
mov
jecxz
cmpl
xor
mov
sub
xor
aad
out
addr16
dec
popf
ja
ret
flds
test
mov
icebp
dec
icebp
stos
pop
in
arpl
sub
pop
ret
push
popa
jge
rolb
daa
std
push
mov
pop
jb
jg
sahf
push
je
or
mov
cmp
in
or
jbe
out
repnz
cmp
push
nop
ljmp
mov
sub
popf
out
pop
addr16
xor
dec
aam
jecxz
mov
cmpsl
imul
rorl
mov
pop
or
jg
cmp
sbb
ljmp
imul
sbb
dec
pop
push
ds
adcb
fs
and
cmp
mov
and
sub
dec
lods
dec
js
xor
aaa
mov
mov
add
add
mov
dec
xchg
mov
jb
dec
push
and
add
leave
jmp
jg
push
popf
push
ret
or
pop
icebp
hlt
cmp
fld
dec
insl
in
lock
inc
sbb
push
cmpsb
iret
stos
cmp
data16
mov
jl
jno
mov
inc
jo
xor
stos
stos
cmp
mov
addr16
dec
in
scas
mov
repnz
int
or
sbb
lods
pushl
jmp
xor
sbbl
sti
scas
mov
pushf
xchg
imul
shll
inc
inc
sub
xchg
jl
sbb
xlat
fisubl
jle
aaa
inc
insl
adc
or
push
mov
mov
andb
imul
push
dec
mov
mov
mov
movsl
jl
xor
adc
push
mov
push
fs
cmpsl
xchg
push
jmp
jne
fsub
xor
xchg
cmpsl
xchg
mov
or
jo
mov
ss
int
jno
pop
fidivl
inc
jle
nop
cli
jmp
outsb
mov
adc
fisubs
cmp
nop
xor
dec
stos
push
imul
sahf
sbb
js
push
testl
dec
mov
mov
push
xchg
cmp
les
sbb
jle
mov
mov
sti
lock
push
popa
mov
pop
outsl
rorb
mov
sbb
sbb
push
jne
push
scas
cmp
insb
adc
loope
or
cltd
mov
addb
outsl
aam
popa
mov
leave
mov
movsb
sti
push
push
int
js
loope
push
adc
sub
cmp
ljmp
js
imul
or
pop
popf
sub
fisubrs
cld
xchg
add
mov
xchg
jge
call
imul
dec
jp
dec
mov
cmp
div
mov
mov
push
pushf
sub
mov
sub
aas
popf
sub
repnz
mov
aad
pusha
lret
mov
rcrb
dec
xor
inc
test
mov
inc
xor
movsl
inc
xchg
xchg
cld
fildl
or
aam
sub
jb
sub
movsl
cmp
aas
sbb
fmuls
test
and
in
dec
aad
adc
add
ljmp
out
in
cld
cmp
pop
test
xlat
inc
xchg
ja
popa
sbb
loope
lahf
loop
mov
pop
cs
adc
pop
push
or
or
test
dec
xor
pop
jge
pushf
outsl
insl
add
movsl
inc
dec
mov
jmp
movsl
call
bound
mov
loop
sar
jmp
aad
mov
mov
cmp
fstp
fcomi
dec
mov
dec
dec
test
dec
out
sub
xchg
push
mov
mov
or
jnp
or
fwait
ljmp
inc
pop
scas
outsb
xchg
xchg
es
iret
outsb
shl
and
addl
jns
mov
push
jae
repz
fcmovu
insb
test
test
js
stos
data16
lahf
xor
jo
stos
xor
xchg
inc
add
or
cltd
out
pop
stos
addr16
shl
enter
out
jp
sub
gs
jle
popa
push
pop
xlat
mov
jmp
rcrb
mov
sub
jg
sbb
add
sbb
stos
dec
aad
test
scas
fidivs
shlb
inc
mov
adc
mov
gs
and
test
notl
add
leave
lcall
sti
cld
inc
je
mov
jge
jecxz
in
mov
jnp
lods
mov
out
clc
push
jp
cltd
push
xchg
pop
sbb
adc
add
and
movsb
imul
subl
adcl
adc
push
testl
pop
stc
sahf
inc
into
inc
mov
push
push
fiadds
mov
jno
stc
stc
fs
cmpsl
push
dec
jp
out
dec
pop
sbb
xor
jp
mov
pop
mov
pop
xchg
stc
mov
popa
aaa
jns
in
daa
mov
negb
push
lods
fstps
push
mov
sub
cmpb
or
cmp
sbb
jae
int
in
fnsave
push
ljmp
ja
daa
mov
dec
or
rolb
jb
scas
shll
xlat
sahf
fs
sar
cltd
mov
mov
push
inc
dec
mov
arpl
jp
lock
stc
cmp
xchg
loope
js
fs
fiadds
push
cmp
sarb
inc
mov
xor
data16
push
call
loop
xlat
jg
imul
inc
xor
into
lds
mov
stc
xchg
aad
xor
mov
rclb
adc
fcmovb
movsb
fwait
add
lods
push
ds
sbb
sbbl
call
and
in
cmp
push
or
iret
sub
inc
fistl
pop
jno
lds
pop
mov
sbb
imul
loopne
movhps
xchg
jae
fldl
out
and
xor
cltd
dec
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
out
iret
and
pop
jl
xchg
rclb
sub
sti
xchg
and
dec
or
loopne
std
inc
ret
outsl
push
mov
sub
movsb
lods
push
sub
inc
sti
adc
xlat
sub
sub
adcl
cmp
scas
xchg
bound
call
test
shl
jecxz
xchg
and
sahf
xor
leave
cmc
mov
adc
pusha
dec
mov
lock
or
inc
add
pop
decl
int3
loopne
popf
rol
push
sbb
or
fists
flds
sti
clc
push
cltd
lret
aam
or
push
sbb
in
adc
sub
loopne
jbe
mov
insl
lret
js
shlb
inc
js
cltd
cmp
jg
pop
adc
xor
in
lods
cmp
stos
fs
rol
dec
lcall
fcoml
stos
dec
jecxz
das
lock
dec
or
scas
test
test
outsb
fcomps
lret
rclb
fisubs
xchg
fwait
hlt
sbb
in
dec
and
repz
jb
test
int
ret
sub
push
leave
jmp
cmc
jnp
mov
jb
mov
pushf
cmp
shl
scas
mov
movsl
cmpsb
adc
mov
cmpsb
adc
ljmp
pusha
icebp
mov
push
push
mov
add
int3
lret
sub
cltd
test
inc
adc
scas
es
ficoml
out
cmpsl
test
mov
arpl
or
cmp
bound
mov
mov
jns
int3
scas
inc
sub
cmp
mov
mov
and
js
shrb
mov
and
jg
in
xchg
fcoms
mul
mov
andl
add
cmpsb
dec
mov
outsb
je
and
pop
sub
loope
xchg
mov
jbe
ds
lcall
mov
js
inc
leave
aaa
push
mov
push
mov
test
clc
fwait
sub
bswap
cli
js
dec
mov
jnp
sub
icebp
aaa
sub
aas
jns
fimull
lods
out
cmp
cmpl
jo
inc
xor
loopne
cs
xchg
outsb
adc
jb
sbb
in
sar
ret
int
mov
push
inc
cli
xchg
dec
rcll
xchg
fidivrl
rclb
mov
out
subb
int3
shrb
imul
imul
and
pop
aad
cmp
sub
popa
out
jnp
mov
lret
cwtl
dec
test
outsl
aas
movsl
ds
iret
push
shrl
leave
add
dec
ret
sub
mov
mov
add
lahf
dec
fcomps
pop
push
divb
push
out
imul
aaa
xchg
fs
das
enter
adc
mov
incb
jmp
pop
in
xchg
mov
outsb
inc
fistl
mov
inc
push
pop
mov
cld
dec
mov
pop
inc
add
inc
dec
in
lea
fnstcw
test
lods
outsb
and
leave
lock
push
pop
fisubrs
jae
mov
fidivs
push
test
pop
out
xlat
add
xor
or
or
call
out
mov
and
out
xorl
fiaddl
fidivrl
jbe
jno
mov
adc
popa
daa
out
pop
data16
shr
pop
push
jmp
testl
fnstsw
lods
test
movsl
xchg
cmc
dec
ficompl
mov
adcl
into
pushf
xor
sahf
lock
repz
add
insw
push
dec
mov
loop
mov
xor
dec
pop
pop
cmp
push
cmp
dec
mov
imul
insb
sub
loope
inc
mov
enter
lea
mov
mov
outsb
and
and
std
inc
leave
lahf
jno
out
into
mov
add
add
rcl
data16
add
mov
cmc
or
pop
fsubrl
imul
mov
xchg
jae
ljmp
xor
jnp
cmp
add
xchg
stos
std
jae
xchg
mov
mov
mov
ret
in
mov
xor
or
mov
xorb
add
mov
cltd
sub
test
popa
fistps
jnp
sbb
test
push
pop
sbb
inc
testl
popl
shrl
sbb
dec
lret
mov
jno
inc
roll
fistl
mov
fldcw
outsb
out
pop
mov
xchg
loop
mov
inc
mov
insb
xor
movsl
out
daa
call
or
xor
xorb
xchg
loope
mov
fucomi
xor
xchg
cld
jecxz
fdiv
dec
das
cli
mulb
push
pusha
call
notl
shrb
testl
sub
shr
pop
xchg
fldt
add
jbe
shrl
cld
inc
es
pop
aas
xor
clc
stos
les
dec
push
ja
cmp
push
sub
pop
loop
pop
add
mov
rclb
in
xor
pop
or
fstp
mov
outsb
mov
repnz
cmpsb
or
pop
mov
xlat
jns
push
out
mov
sbb
xor
sub
cmc
lahf
jno
inc
sub
xchg
xchg
cmp
cmp
pop
cmp
sub
pop
jg
dec
jle
or
push
shlb
out
add
fstpl
add
decl
sub
push
or
hlt
out
int3
pop
push
pop
jnp
push
xchg
arpl
pop
jno
test
add
shrl
test
inc
test
adc
int
sbb
imul
mov
or
enter
clc
fstpl
shl
testl
movsb
push
test
push
push
add
outsl
jae
xchg
mov
pop
push
cs
shll
xchg
inc
and
addr16
sbb
push
sti
inc
cwtl
jge
mov
push
and
mov
jo
fildll
stos
xor
imul
es
xchg
and
ficomps
std
aas
mov
pop
cmp
mov
and
add
test
jo
xchg
sahf
std
inc
pop
hlt
cs
daa
int3
add
fidivl
pop
adcl
mov
jns
jle
mov
mov
cld
test
pop
pop
pop
mov
inc
add
lds
mov
aad
in
push
sbb
jg,pt
pop
xchg
mov
faddp
push
mov
lds
fdivl
in
jecxz
das
push
push
and
xchg
dec
dec
mov
das
jl
push
xor
icebp
dec
dec
mov
add
cld
es
sbb
js
pop
and
std
shlb
ja
mov
xlat
xchg
mov
loop
or
jg
mov
xchg
movsl
cmp
push
cmp
mov
cmpsb
frstor
fistl
mov
jbe
sarb
cmp
jns
lret
shlb
sti
xor
outsl
xchg
sahf
mov
cli
nop
or
jecxz
aaa
ret
pop
bound
cmpsl
dec
shrb
cmpsb
mov
int
jg
repz
mov
and
repnz
bound
bound
daa
and
inc
xchg
pop
ljmp
lcall
ret
push
repz
sub
repnz
ja
sbb
mov
xchg
jne
pop
add
int3
loopne
iret
push
loope
pop
rcrl
call
pop
or
das
out
cmp
jp
incb
add
pushl
sbbl
outsb
sti
cmp
fwait
js
adc
lods
int
sbb
lahf
and
stos
cli
hlt
or
dec
ds
data16
mov
add
mov
addr16
mov
imul
in
scas
stos
imul
jg
pop
sti
fbstp
xchg
leave
call
pop
cli
rcr
xor
int
mov
xor
jne
jne
sbb
add
and
ss
jnp
inc
cmc
daa
push
xchg
fnstcw
mull
hlt
lods
lret
pop
dec
mov
push
push
and
mov
sub
lods
orl
adc
or
es
cld
jo
jns
pop
cmpsl
dec
mov
cli
mov
ret
push
dec
ss
xchg
nop
xor
adc
aad
mov
lcall
pop
mov
pop
xor
cmp
push
push
xor
jp
imul
pop
outsb
inc
push
jmp
jne
ret
das
push
dec
stos
mov
sbb
xor
fdivrp
scas
cmp
adc
cmp
ja
enter
inc
inc
nop
repz
dec
rorl
aam
sub
negb
rcll
dec
xchg
inc
stc
and
xor
in
mov
decl
pop
sahf
pop
ljmp
cmc
inc
cwtl
xor
push
inc
cli
xor
add
sub
aaa
pop
push
mov
cmpsl
xchg
sbb
add
xchg
aad
das
mov
xor
pushf
outsb
clc
sbb
stos
push
dec
cmp
std
xor
outsb
popf
push
and
push
mov
in
arpl
add
inc
int
mov
fisubrs
cmpsl
ffreep
sbb
cmp
sub
inc
call
add
loopne
fildl
jg
aam
cmpsl
nop
mov
xchg
push
push
sub
pop
les
outsb
jmp
dec
xchg
inc
sbb
aam
mov
mov
es
mov
push
push
lods
jnp
flds
in
mov
push
and
shlb
out
out
xor
xlat
popa
clc
mov
lret
cmp
pop
into
inc
mov
mov
cmp
or
push
cld
mov
sti
sti
sub
les
adc
mov
mov
loope
ret
fistpl
add
or
mov
add
jnp
lods
clc
and
adc
pop
adc
jg
cmpsl
loope
xor
test
jg
add
pop
xor
adcb
pop
aaa
pusha
cmp
imul
adc
and
and
sti
and
adc
push
fwait
std
repnz
jmp
call
mov
roll
xlat
loope
cmc
out
cwtl
enter
in
sti
cwtl
out
add
cld
push
and
fimull
add
fidivrs
or
iret
js,pt
push
sub
mov
push
fwait
jnp
sbb
lock
jmp
mov
pop
rorl
fildll
sbb
pusha
mov
adc
mov
push
ljmp
bswap
xor
ficompl
mov
sbb
cmp
sub
popf
sti
mov
js
fs
xorl
push
xchg
ds
sub
mov
lahf
call
cmp
les
fistl
hlt
outsl
push
push
stos
push
and
pop
imul
into
hlt
xor
mov
push
sbb
jne
lret
jmp
in
lret
add
xlat
mov
xor
loopne
pop
mov
xor
sub
sbb
lcall
dec
add
xchg
or
dec
dec
insl
mov
repnz
arpl
lock
mov
cltd
scas
mov
jl
ljmp
imul
lds
pop
fidivrl
lret
push
stc
les
icebp
lock
push
daa
mov
mov
imul
sbb
xor
iret
add
sbb
cmp
shl
sub
aas
enter
inc
lds
jecxz
dec
jg
push
aam
sbb
xchg
adc
mov
movsl
jno
and
mov
push
test
in
stos
aas
xor
shl
leave
paddd
pop
nop
repz
or
push
xchg
fcmovnbe
scas
les
cmc
pop
test
clc
mov
mov
adc
inc
jo
loop
mov
mov
in
into
int3
xor
push
cmp
add
sbb
test
andl
mov
shl
lea
in
frstor
add
sub
mov
push
pop
pop
jns
stos
and
popa
ljmp
xor
dec
hlt
jnp
shlb
or
jbe
lock
push
in
fisubs
lret
inc
rolb
jge
xor
test
xlat
or
mov
sti
or
dec
xor
daa
sub
mov
mov
out
pusha
jnp
mov
jns
xchg
sbb
sbb
push
or
jae
outsb
and
popf
testl
mov
push
mov
leave
call
repnz
push
pop
cmp
xchg
testl
inc
mov
aam
mov
insl
rorb
xor
cmpsb
sub
mov
jg
and
sbb
cmpsb
dec
leave
jae
and
inc
push
and
lods
cmpsb
pop
jae
pop
jmp
fiaddl
neg
mov
std
adc
fcmovbe
test
cltd
repz
scas
mov
std
sbb
out
inc
add
movsl
js
cs
js
mov
mov
icebp
aad
popl
jbe
cld
adc
sub
cmc
stos
cltd
and
or
scas
cmp
jp
iret
xchg
dec
cmp
push
iret
pop
scas
hlt
pop
pop
stos
movb
inc
clc
xor
fisttpll
sbb
mov
imul
xor
inc
arpl
in
out
adc
andl
nop/reserved
cmp
push
lds
ret
shrb
aam
les
cmp
mov
aas
pop
dec
sub
out
xor
mov
mov
cmc
add
sbb
mov
adc
in
ljmp
repz
inc
nopl
xchg
sbb
sti
stos
sbb
push
pop
notb
out
and
sti
imul
jl
mov
popf
in
aad
and
mov
lock
popf
fisubs
lahf
test
xchg
popa
rolb
or
in
jg
arpl
popa
test
lahf
mov
sahf
cld
nop
int
loopne
jbe
mov
rcrb
test
es
pop
and
sbb
rcll
dec
adcb
lds
fisttpll
pop
adcl
jp
mov
cltd
rol
jo
xor
scas
not
cmp
or
sub
jbe
xor
cmpl
neg
imull
cmc
jo
or
lcall
push
fcomps
mov
mov
and
cmp
andl
and
sahf
scas
rcrb
dec
je
pop
add
or
cmovl
jle
mov
mov
inc
jae
or
or
cmp
adc
data16
loope
out
add
jnp
inc
lretw
in
daa
fisubs
push
or
push
inc
lret
mov
inc
pop
gs
inc
push
lahf
push
or
add
sub
mov
gs
cmpsb
pop
xor
inc
rep
xchg
fwait
rol
xor
pop
add
outsb
pop
sbb
out
test
fdivrl
add
scas
aas
xchg
roll
cltd
je
cld
rcrl
aaa
dec
pushf
lock
pop
jbe
xor
ljmp
sbb
mov
aad
xchg
jp
ds
stos
out
sub
ret
dec
das
cmpsl
mov
les
lods
fidivl
aas
sub
call
je
pusha
inc
arpl
cmc
hlt
cmpsl
clc
dec
gs
repnz
sarl
ss
xchg
or
insb
mov
mov
or
in
fistpll
jns
fsubr
fwait
inc
in
jg
add
sbb
xchg
xor
xlat
stc
leave
sti
adc
out
stos
add
subl
inc
adcl
push
std
ret
add
xchg
enter
xchg
mov
sub
mov
std
leave
test
ja
sbb
hlt
cmp
mov
mov
dec
inc
cs
jl
loope
dec
jb
sub
sbbl
sbb
jg
insl
mov
es
cs
incb
xor
mov
pop
pop
fisubs
ljmp
call
mov
in
insb
mov
bound
fsubp
sub
xchg
mov
jnp
pusha
in
pop
iret
pop
js
andb
push
ss
lea
fstps
movswl
mov
rorl
sub
ss
cmp
fistl
call
arpl
into
nop
mov
fcmovnbe
jbe
outsb
push
call
sti
das
out
mov
xor
mov
xchg
or
lcall
add
scas
popa
xchg
jmp
test
das
loop
inc
int3
in
cwtl
dec
cmpl
cli
cmpsl
icebp
fmull
out
mov
mov
push
dec
pop
rcrl
sub
dec
mov
fwait
cmc
test
sbb
or
bnd
dec
mov
mov
jns
fimull
ret
daa
sub
scas
jbe
mov
jl
shrb
inc
aas
loope
sahf
icebp
dec
lahf
arpl
das
in
icebp
pushf
sub
es
hlt
cmpsl
addb
adc
lahf
push
stos
call
loopne
mov
mov
mov
aad
nop
filds
inc
mov
pop
rorb
sbb
mov
fsubrl
jg
inc
cmp
lods
mov
std
or
jne
iret
mov
rcrb
sub
fimull
inc
or
scas
outsb
in
out
loop
push
mov
add
packsswb
adc
and
fisttpll
xchg
loopne
rclb
xor
xor
jle
cmp
pop
add
loopne
out
add
xchg
sbb
jbe
xor
and
push
not
ss
sbb
lss
leave
xor
cld
movsb
or
xor
stos
pop
xor
movsb
lods
add
aaa
mov
or
cmp
imul
rclb
mov
sbb
xchg
mov
jge
pop
aam
sti
adc
fmuls
daa
cmp
shlb
jp
hlt
ret
dec
sbb
fwait
shlb
jne
enter
xorb
aas
and
and
rol
xchg
in
jns
scas
xchg
dec
aad
or
mov
outsl
vmovlps
inc
mov
add
mov
mov
ret
mov
sti
and
sub
enter
in
div
mov
fcomi
ss
es
mov
pop
mov
fdivs
adc
mov
pop
scas
push
add
sub
sub
shll
jb
cld
or
int
pop
in
jl
mov
jae
fwait
stc
jmp
enter
push
std
js
cs
in
add
fisubrs
xor
outsb
dec
movsl
ret
mov
ret
mov
jb
xor
dec
xchg
xor
jbe
pop
and
iret
mov
rorb
and
jecxz
pop
xor
sbb
inc
add
jne
rclb
ljmp
cmc
incb
shrb
rolb
iret
movsb
pop
sub
adc
aam
inc
add
fdivl
xchg
sahf
and
xor
sub
popf
xor
in
ja
add
fcmovb
cli
mov
cwtl
and
int3
aad
mov
das
cmp
test
fs
outsl
jp
ret
mov
jbe
pop
or
out
imul
iret
inc
add
mov
sub
add
sub
dec
out
cmp
movsl
cld
adc
insb
pop
insl
stos
cli
fsubrs
pop
jbe
mov
mov
ljmp
jle
adc
fstpl
sar
push
jl
lds
inc
mov
aas
inc
mov
mov
lock
mov
fldcw
xor
fsincos
adc
cmpsl
les
ja
mov
ja
lret
mov
insb
imul
mov
mov
in
sahf
dec
or
pop
jmp
icebp
push
jge
dec
mov
negb
push
mov
ds
adc
jmp
aaa
addr16
arpl
mov
mov
mov
xor
fisubrl
imul
aad
sub
xchg
adc
test
sbb
pop
scas
loop
or
or
cmp
getsec
andb
in
bound
sbb
fwait
lock
push
xor
outsb
leave
xchg
jge
sahf
mov
push
push
insb
daa
pusha
incb
pop
push
mov
cmp
or
mov
and
addb
sub
xchg
ret
dec
icebp
push
mov
xchg
in
sub
je
sbb
mov
testb
je
or
cwtl
dec
xlat
push
mov
ret
xor
dec
call
push
sub
std
adc
adc
push
and
push
and
movsb
push
aam
xchg
dec
mov
imul
or
mov
lods
add
dec
xchg
out
in
int
pop
jge
xchg
xor
xchg
inc
jl
pop
std
jl
inc
andl
sbb
add
sub
mov
sti
js
cltd
sbb
dec
add
daa
jbe
adc
mov
or
arpl
xor
sub
cli
jbe
ret
lcall
dec
cwtl
testl
and
mov
out
test
mov
fistpll
mov
mov
das
rolb
push
aas
mov
sbb
sub
jns
push
adcb
ret
jb
or
xor
and
fsubrs
dec
fisttps
xor
pop
rclb
sbb
adc
leave
and
xchg
movsb
cmpsb
movlps
hlt
lcall
mov
or
pop
xchg
aaa
jp
loopne
pop
jmp
out
call
int3
xchg
xchg
stc
and
outsb
xor
and
xlat
push
aam
and
arpl
add
lock
mov
mov
outsl
cmp
rolb
mov
shlb
push
add
loope
and
call
xchg
mov
shlb
jecxz
aaa
ror
insb
dec
icebp
mov
jbe
xchg
fcmovnb
loopne
adc
mov
xchg
sub
out
loopne
movsb
jbe
stc
outsb
push
jecxz
fistpll
sub
jl
cld
test
mov
push
dec
rorb
decb
aas
cld
imul
rol
lret
sub
inc
mov
mov
fadd
pop
scas
cmp
pop
mov
adc
xor
addr16
aam
lods
incl
ljmp
lods
push
xor
ss
leave
inc
leave
adc
mov
mov
test
mov
and
sbb
repnz
cld
jp
pop
fistpl
cmp
insb
ss
cwtl
imul
stc
f2xm1
repnz
mov
inc
mov
sub
fcomps
into
aam
or
jle
mov
lret
xchg
xlat
arpl
adcb
mov
and
repz
lret
sub
test
sbb
inc
bound
inc
sahf
jmp
xor
rcl
inc
andb
ljmp
imul
xchg
hlt
subl
movsl
movsl
loop
jb
inc
movl
xchg
aam
xchg
test
jno
cmp
cltd
enterw
fcomps
out
cmp
lret
cmp
mov
stos
dec
or
jecxz
xor
andl
les
or
and
cmp
inc
push
in
xor
std
xchg
addr16
mov
outsl
test
mov
push
inc
jns
int3
pop
xchg
pusha
adc
jecxz
daa
cmpl
dec
cmp
xchg
fcomp
xor
fldl
or
pushl
jge
cltd
add
js
push
or
add
cmp
mov
jne
sbb
adc
and
rcll
sbb
mov
popf
mov
and
icebp
rcr
add
push
test
pop
ret
mov
jae
jmp
pop
fidivrl
push
imul
or
pop
xchg
pop
and
push
ret
outsl
mov
and
mov
xor
cmpsl
aad
addl
push
inc
das
popl
mov
insb
adc
push
ficoms
xchg
insl
or
pusha
mov
xlat
add
fistl
int
cmpsb
pop
pop
jne
mov
aas
pop
adc
sub
icebp
shlb
jb
out
mov
mov
dec
ffreep
push
xchg
add
xorb
stos
hlt
cli
jae
icebp
jecxz
cmp
dec
in
cmp
fstpt
outsb
scas
ja
pop
testb
jns
std
jge
hlt
cmp
pushf
mov
cmp
add
bound
fmul
mov
cmp
inc
movaps
scas
mov
jle
cmc
push
shll
roll
test
lods
dec
jp
jnp
insb
scas
sbb
clc
fmuls
and
push
cmp
or
dec
adc
adc
mov
lea
sbb
adc
out
jno
ret
mov
movsl
push
fbstp
sub
faddl
stc
std
push
outsb
pop
jg
aaa
movsl
mov
add
xor
pop
xchg
sub
pop
pop
dec
js
add
or
cli
movb
push
pop
pop
or
mov
pop
cmp
inc
int3
scas
mov
mov
push
push
call
data16
pop
lret
adc
lret
icebp
push
clc
xorl
xor
fisubl
add
inc
xor
cmp
aas
and
mov
push
ja
mov
cmp
adc
repnz
loope
mov
pop
cld
je
mov
jno
movsb
and
inc
loope
mov
mov
clc
pop
aas
mov
xor
scas
mov
into
mov
je
dec
or
bound
xor
push
aas
jp
mov
xchg
sbb
push
jne
int3
and
rcr
cs
push
repz
loopne
shl
imul
cmp
xor
mulb
popa
mov
inc
cmp
mov
addr16
xchg
push
and
or
pop
js
lahf
add
or
icebp
inc
jb
pop
cmpsl
push
imul
out
pop
stos
xorl
push
sbb
and
inc
sahf
aam
stc
fdivrs
mov
shlb
imul
inc
arpl
inc
pop
lret
inc
adc
xchg
mov
cmp
xchg
add
lods
mov
je
fdivrs
nop
xor
into
out
jg
aam
shlb
push
cmp
pop
ss
pop
inc
xchg
pop
xor
stos
clc
cs
push
es
or
in
lcall
pop
inc
test
out
cmpsb
mov
dec
adc
add
cmp
in
js
pushaw
pushf
push
cli
negb
loop
cmpsb
dec
jne
pop
mov
arpl
push
and
jmp
push
sub
ljmp
arpl
jl
dec
add
leave
jne
mov
testb
scas
xchg
adc
icebp
ficoms
xor
cmpsl
les
push
negb
cld
jb
decb
loopne
sub
fs
dec
dec
into
call
pusha
or
inc
mov
pushl
insl
movsb
xlat
adc
fldcw
test
pushf
das
cmp
xor
cli
div
ljmp
imul
sub
cmp
mov
push
dec
sub
dec
adc
xlat
nop
test
or
stc
push
scas
sbb
outsb
sub
sti
or
adc
outsb
push
sub
mov
je
pusha
mov
clc
jmp
out
fcomi
repnz
adc
mov
nop
inc
xchg
xor
mov
fcoms
mov
sub
gs
orl
mov
frstor
div
scas
sarb
jbe
jb
lret
add
sbb
sbb
call
push
jb
sub
sti
mov
push
add
push
fwait
push
xor
adc
dec
jno
lock
sbb
cs
in
test
and
cmp
adc
pop
add
clc
sub
mov
add
dec
inc
xlat
xor
push
mov
mulb
insb
std
jmp
in
stos
add
pushf
das
add
pop
jle
push
imul
lret
or
sahf
or
add
in
pop
push
repz
fwait
or
mov
lea
in
mov
mov
stos
mov
cwtl
jbe
in
mov
sub
xlat
gs
xchg
fstps
stc
mov
push
pop
rorb
popa
mov
xor
shrb
adc
add
pop
push
pop
sub
push
ret
into
sub
cmp
fmul
fwait
call
cmpsl
inc
xor
push
enter
inc
repnz
gs
into
adcl
int3
jbe
outsl
lret
mov
mov
jns
pop
movsb
inc
out
or
lods
aad
stos
gs
add
scas
add
cmpsl
sarb
sub
stc
xchg
dec
into
or
mov
cmp
adc
les
pusha
and
add
cmp
mov
imul
les
popf
mov
mov
adc
lahf
js
dec
push
andb
lret
ja
mov
shlb
pop
or
mov
and
leave
enter
cmp
pop
sbb
inc
adc
stc
outsb
out
adc
daa
data16
pop
cmpb
cld
inc
adc
pop
xchg
incb
adc
jbe
popf
push
ja
outsb
fucom
insb
inc
and
push
mov
movsl
enter
in
mov
push
xchg
add
mov
lock
fcmovnb
pop
jle
cmp
add
cmpsb
push
pop
dec
mov
xchg
pop
andl
add
test
sub
inc
out
xchg
mov
cld
mov
jae
xor
popa
shll
xor
bound
cli
mov
pop
add
cwtl
xchg
xlat
imul
xor
sarb
addb
push
push
out
pusha
mov
vpmaddwd
push
push
and
ljmp
dec
push
inc
sbb
mov
jecxz
xor
mov
sbb
test
sub
ret
push
sbb
bound
dec
or
ret
sbb
std
mov
mov
cmp
lds
repz
mov
orb
xchg
mov
push
pop
mov
inc
push
test
loope
push
dec
pop
push
pop
mov
xor
push
pop
jmp
push
adc
cli
push
mov
mov
ja
stc
ss
dec
cli
les
mov
inc
sahf
xchg
jp
add
add
jmp
inc
mov
jge
loope
cmp
pushw
cmp
fidivl
mov
test
sub
dec
ss
fnstsw
cs
or
sbb
mov
loop
cmp
jbe
inc
push
adc
mov
jno
push
sar
xchg
es
push
mov
mov
mov
stc
dec
or
fisubrl
inc
push
sub
push
xchg
xor
sub
out
mov
sarb
dec
bound
dec
xor
gs
je
bnd
xor
cmc
sti
mov
or
mov
loopne
test
jl
fcoml
xchg
pop
sarb
jecxz
cmp
pop
jnp
stos
sahf
push
sbb
push
push
mov
stos
cmp
push
inc
bound
lret
lds
adc
outsb
pop
fcmovbe
mov
pop
cmp
pop
or
dec
and
outsb
mov
shrb
push
sbb
mov
push
daa
out
test
add
stos
push
insb
scas
sub
mov
loope
jns
data16
rol
lods
out
repz
addr16
inc
imul
sub
es
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
enter
daa
push
jl
pop
pop
jl
mov
add
xchg
imul
cld
sti
daa
sbb
mov
jg
test
inc
cwtl
mov
or
xchg
pop
cld
les
fdivl
mov
xchg
dec
cmp
cmp
test
adc
xor
mov
cmp
inc
aaa
sub
xchg
cmp
lret
pushl
int
call
jns
lret
inc
xchg
jno
sub
mov
dec
jge
into
aas
loop
xchg
xchg
jns
xor
les
lea
inc
jp
out
pop
lock
adc
loope
addr16
mov
aam
adc
lods
sbbb
push
inc
jecxz
add
lods
jecxz
test
mov
arpl
xor
add
mov
hlt
rep
test
sahf
and
push
xchg
test
int
mov
cld
out
add
jg
push
test
sbbl
pop
js
push
push
or
in
mov
and
shlb
fsubs
sarl
pushf
popf
xchg
jge
out
cmp
not
mov
into
enter
mov
ret
dec
insl
add
lcall
xor
cld
dec
ficompl
pop
cs
incl
adc
cs
int3
mov
lahf
pop
imul
decb
lret
outsl
inc
adc
scas
pushf
pop
xchg
add
xchg
and
add
fimuls
pop
mov
outsl
js
dec
mov
or
cmpsb
cmp
jge
cld
and
cltd
mov
sbb
outsl
jb
lret
scas
xor
out
shrl
arpl
and
mov
outsb
call
addr16
ja
orb
dec
mov
in
pop
ds
xor
sar
loopne
add
les
mov
and
add
or
mov
inc
add
jno
test
lret
gs
div
xorl
cs
stos
lret
xchg
dec
sbb
ljmp
ljmp
pushf
in
lods
scas
inc
inc
in
cwtl
mov
fs
push
and
push
lods
shlb
mov
loope
dec
pop
divl
push
dec
and
pusha
rclb
frstor
test
dec
out
clc
or
lret
cmp
scas
push
push
or
lahf
ja
repnz
mov
pop
int
imul
sbb
push
mov
fsts
pop
mov
nop
rorl
ret
jns
lods
or
nop
mov
add
xchg
ja
rclb
adc
mov
dec
in
add
ljmp
lds
stos
mov
add
dec
pop
ret
adc
xorl
mov
daa
leave
or
inc
jno
mov
out
pop
push
addb
mov
sbb
int
sub
sub
jbe
push
adc
pop
mov
inc
ja
pop
movsb
mov
inc
jecxz
dec
pop
rorl
mov
scas
adc
mov
imulb
out
aam
jmp
sub
mov
mov
cmp
inc
data16
mov
inc
inc
xor
jge
or
mov
sbb
pop
add
adc
mov
sahf
fmull
lods
lcall
xor
test
lret
adc
js
add
cmc
dec
fiadds
inc
dec
sahf
adc
add
xchg
icebp
aam
cli
jnp
in
xchg
imul
jmp
push
into
sub
popa
adc
outsb
xor
lahf
in
and
loop
sbb
outsb
ret
xchg
pop
cs
pop
ja
lods
dec
cmp
pop
push
imul
mov
pop
push
sbb
shld
or
lcall
jbe
lahf
icebp
dec
cli
sub
mov
scas
cmpsb
xchg
out
mov
add
imul
xlat
pushf
inc
sbb
les
jmp
nop
clc
insl
gs
fwait
jg
adc
push
and
fdivs
mov
lods
test
outsl
inc
nop
mov
sbb
jecxz
sbb
jns
mov
adc
mov
pop
scas
fwait
jmp
out
loope
adc
xor
add
int
xchg
dec
adc
ret
setns
and
fildll
push
mov
not
pop
mov
loope
divb
ja
push
ljmp
call
inc
sub
lcall
rcrb
into
pop
xor
mov
push
push
cmp
mov
mov
arpl
out
cmp
mov
push
sti
ret
insb
fwait
test
shlb
je
xor
add
push
jo
dec
jnp
jns
mov
inc
push
pop
in
push
in
in
push
dec
test
insl
aad
ret
lahf
outsb
jns
adc
imul
inc
lock
lds
add
mov
jno
xchg
pop
outsb
xlat
jae
ret
das
je
es
rclb
mov
arpl
add
out
sub
sti
xchg
int
xor
lcall
out
arpl
loop
lock
imulb
add
imul
dec
sub
pop
inc
pushf
add
mov
or
fcmovbe
imul
mov
mov
sahf
gs
aaa
or
stos
ret
in
jno
stos
shrl
fwait
push
aaa
enter
outsl
jge
sti
sub
jmp
mov
insb
lock
dec
lods
lcall
rol
fmul
mov
call
movsb
daa
shl
mov
sbb
lea
cmp
lret
xor
jae
and
out
out
dec
jo
dec
and
pop
out
leave
addr16
jnp
jne
lds
mov
fbstp
outsb
cmp
or
or
pop
or
lock
adc
ss
cmp
sbb
ret
stc
mov
xchg
fwait
bound
pop
cld
outsl
push
roll
and
and
gs
test
sub
lcall
ss
mov
fcmovb
and
push
xor
addl
mov
dec
mov
mov
into
mov
dec
out
inc
test
addr16
cld
inc
enter
mov
sub
loope
push
jnp
adc
insb
enter
out
in
mov
add
and
push
ret
sbb
mov
adc
cld
jge
imul
pop
adc
adc
lock
les
adc
adc
lds
sub
and
lret
cmp
sub
clc
ficoml
jb
bound
adc
movsb
and
or
pop
add
xor
mov
lahf
xchg
ss
addr16
cmc
mov
mov
imulb
add
fdivl
jge
das
lret
cmp
inc
dec
sbb
in
or
dec
je
xlat
sub
loope
pop
fisubrs
sbb
cmp
push
push
xchg
adc
add
add
inc
pop
xor
sahf
stos
inc
push
ljmp
add
sbb
lods
and
imul
xor
cmp
mov
dec
push
stc
in
mov
inc
push
outsb
rcl
lods
cli
cmp
cli
shrl
subl
add
jle
jo
xor
jmp
movsb
sub
insb
jg
mov
scas
mov
mov
fwait
sbb
mov
xchg
loop
ja
addl
and
cld
ret
in
data16
adc
xor
lcall
pushf
and
scas
add
adc
shlb
pop
dec
insl
dec
cmp
jnp
in
ja
jns
mov
jbe
lret
xchg
cmpsb
ror
stos
dec
out
xor
mov
cli
mov
ljmp
stos
shl
pop
cmpsl
in
xor
push
test
xchg
lds
fisubrs
sbb
addl
pop
aad
jle
dec
jmp
mov
addl
in
js
jae
mov
dec
jmp
outsl
outsb
fnstenv
orb
dec
popf
or
jp
gs
mov
jo
mov
divb
divb
jns
popf
pop
ss
es
js
aas
sbb
repz
cmp
push
out
jecxz
add
cmp
call
jbe
fdiv
pusha
cltd
inc
mov
std
mov
mov
js
dec
test
addr16
add
and
xchg
sbb
popa
out
mov
adc
fiaddl
jg
lret
dec
ss
ljmp
xor
lods
out
out
icebp
jbe
cld
sbb
add
dec
inc
insl
xor
insl
sub
dec
jb
popf
iret
push
dec
hlt
inc
and
pop
push
loopne
fdivs
iret
cli
mov
cld
sbbl
into
inc
bound
jmp
ret
cli
lods
outsl
fs
divb
inc
and
lahf
jbe
xchg
or
xchg
lods
or
mov
mov
sarb
cwtl
jo
jne
mov
pop
jbe
or
imul
pop
dec
dec
cld
addr16
aam
fsubrs
inc
sub
xor
out
sub
scas
cmpsl
mov
insb
das
andl
imul
lret
pop
movsl
dec
dec
jg
and
cmp
fists
push
xor
in
adcb
and
dec
cmpsl
jl
fisttpl
inc
rcrl
scas
push
movsb
pmaddwd
sahf
fdivrp
add
cwtl
es
hlt
sub
push
add
ds
cli
mov
mov
enter
xchg
push
fidivrs
lahf
add
sub
ret
jns
sahf
mov
dec
decl
dec
and
push
dec
sti
sbb
lcall
mov
or
loop
nop
je
rorl
ja
and
xchg
aas
ds
movsb
mov
mov
cmp
xor
sbbl
roll
or
pop
jnp
hlt
mov
and
ss
mov
stos
mov
int
fdivl
jno
lock
in
ljmp
cmp
jne
testl
icebp
sub
ret
mov
fmul
ret
and
push
nop
cld
mov
push
xchg
lcall
add
out
aad
sbb
mov
int
fiadds
pop
mov
jmp
ss
lret
fs
aam
sarb
sub
push
xlat
dec
push
cmpsb
gs
pop
xchg
jmp
xchg
jae
sahf
push
add
inc
movsb
sbb
ja
jecxz
mov
orl
inc
pop
mov
stos
call
pop
sbb
push
adc
cmc
loope
fiadds
fwait
pusha
push
arpl
xchg
xchg
into
or
inc
dec
jmp
cmp
dec
pop
js
sbb
in
je
fnstsw
cmp
movsl
jne
adc
fisttpll
stc
pusha
sub
pop
adc
scas
cmp
bound
mov
pop
sbb
sbb
sub
test
cwtl
mov
jge
and
call
jmp
les
push
push
mov
xchg
mov
sub
jae
sbb
jmp
or
adc
dec
push
rolb
cmp
cmp
cmp
pop
call
out
xchg
lds
das
jbe
gs
sub
movsb
sub
sub
mov
and
movsl
jmp
or
stos
inc
divb
pusha
rcrb
add
jne
jne
aad
fadd
ljmp
mov
cmp
xor
mov
mov
and
dec
mov
data16
movsb
xchg
ficoml
aas
lock
shrb
out
mov
xor
add
cmpsl
lock
add
cmp
stc
push
jbe
std
sub
jbe
fsubr
ficomps
and
add
loop
sub
roll
inc
je
fs
pop
sub
pop
ja
mov
lcall
aaa
jg
adc
ror
enter
enter
int3
mov
loope
mov
sbb
addb
in
mov
push
inc
adc
out
dec
out
adc
push
push
mov
in
in
stos
decl
mov
lea
sub
stos
test
adc
mov
test
js
ret
lret
adc
or
ret
aas
and
mov
xor
dec
jmp
and
inc
add
cmp
sub
inc
pop
repz
out
mov
sahf
out
pop
enter
in
push
sub
out
out
sahf
xor
dec
push
dec
xchg
outsl
shlb
mov
xchg
movsb
mov
loopne
lcall
inc
rcrb
ljmp
adc
fwait
dec
imul
mov
fadds
adcb
mov
test
jge
dec
inc
int
inc
mov
imul
mov
sbb
and
cmp
push
aaa
sbb
jb
xchg
test
and
mov
js
add
pop
adc
cmpsb
xlat
stos
jnp
sbb
movsl
sub
sarl
outsb
sbb
adc
or
int
xchg
or
leave
int
clc
push
add
mov
dec
add
std
jae
lock
or
stc
mov
push
bswap
gs
push
shll
add
loope
push
repz
outsb
mov
mov
xchg
loope
movsl
mov
push
enter
sbb
stos
movsb
inc
and
popa
adc
jbe
pop
dec
xchg
enter
scas
xchg
and
xor
js
xchg
shlb
loop
fistpll
stc
and
add
lods
ret
add
add
adc
push
testl
outsb
movsb
clc
stos
and
mov
dec
ljmp
mov
std
add
aas
dec
adc
add
dec
out
jbe
sbb
lods
leave
lahf
sbb
dec
sub
imull
cmpsb
loope
xchg
lods
stos
xchg
std
jmp
adcb
outsb
add
push
inc
sbb
dec
push
xor
dec
out
mov
sub
and
fcomps
scas
jne
gs
int
sbb
aaa
cltd
sahf
push
cmp
dec
pushf
push
sbb
dec
push
sub
pop
insb
shll
gs
mov
jns
bound
jb
mov
imull
test
jno
xor
push
sub
pop
repnz
mov
sub
mov
or
loope
add
mov
jnp
inc
insl
ret
push
ja
pop
std
add
les
push
jmp
fcmovnb
mov
add
iret
cmp
in
jle
sub
mov
xchg
xor
mov
xor
inc
jo
xchg
jg
ror
xlat
mov
push
daa
out
pop
sub
xchg
clc
mov
into
sub
enter
not
jl
pop
cmp
xchg
decb
insb
dec
push
fldl
mov
and
addr16
push
gs
popa
jge
mov
gs
pop
ljmp
mov
add
into
adc
dec
mov
mov
in
jo
jnp
jbe
shll
xchg
xor
push
inc
call
sahf
xchg
xor
fstpl
je
je
mov
sahf
pop
inc
mov
mov
xor
fadd
push
add
cmpsl
data16
cld
adc
jecxz
jns
push
fnstenv
jge
jbe
icebp
add
divb
pop
mov
push
jne,pt
and
lcall
jne
fdivrp
sub
test
test
mov
fdivs
jle
data16
and
ja
pop
int
push
daa
mov
ficomps
or
loopne
dec
inc
sbb
shlb
dec
xor
adc
xor
xchg
aam
and
bound
pop
sarl
sub
addb
cld
cmp
mov
cmp
mulb
inc
and
adc
mov
ret
pop
add
scas
push
xor
mov
fcomps
mov
jnp
sbb
sti
mov
mov
mov
fsubp
push
repz
pop
push
aaa
push
adc
jae
ret
mov
fcoms
sarb
aaa
je
xchg
dec
mull
stos
sub
stos
addr16
mov
push
flds
dec
loop
in
jp
dec
jg
fisubrl
std
add
cmp
mov
in
mov
fs
shll
cli
mov
dec
add
adc
stc
pusha
leave
icebp
pop
cld
mov
dec
insb
sub
jg
dec
mov
lahf
rorl
es
mov
mov
roll
leave
bound
mov
repz
inc
inc
jns
test
inc
repnz
lods
jns
xor
mov
push
sub
fildll
lds
jge
adc
jo
pop
in
into
mov
loope
test
mov
fwait
roll
loop
aaa
adc
cli
cli
xor
orb
shrl
jno
or
cmp
insb
mov
lds
push
pop
sub
xchg
into
mov
data16
cmp
imul
push
cmpsb
mov
push
xor
pop
repz
jmp
enter
stos
pop
sahf
gs
test
and
ror
sub
bswap
and
xchg
stc
lock
pop
add
pop
push
sbb
and
and
and
aam
jbe
stos
rcrb
daa
scas
repz
stc
inc
dec
inc
loope
and
inc
adc
loop
and
add
lea
out
leave
aas
pop
movsb
adc
mov
outsb
xlat
jmp
mov
test
jecxz
jmp
movsl
dec
and
xlat
shl
add
or
jb
pop
orl
cli
neg
sub
scas
inc
add
cwtl
or
pop
mov
push
loope
sti
fsubrl
or
pop
pop
cmp
jmp
out
sbb
rsm
sbb
pop
insb
dec
pop
inc
and
mov
imul
or
lcall
in
clc
inc
cmpsb
mov
sub
imull
adc
cmp
mov
push
js
jno
xlat
lods
adc
sahf
arpl
sbb
inc
and
pop
clc
notl
pushf
out
inc
mov
mov
xchg
inc
nop
mov
dec
shl
sbb
and
push
mov
mov
loop
sub
mov
adc
xchg
mov
daa
mov
and
fs
add
scas
sub
sbb
sub
pop
shr
pop
or
sub
icebp
into
ret
jecxz
push
mov
mov
xor
int3
push
ret
lods
inc
js
cli
inc
cli
pop
mov
mov
xchg
shrl
or
ljmp
jnp
push
push
stc
mov
push
and
sti
xchg
mov
mov
cmp
sub
xor
iret
addr16
inc
sbb
inc
fisubs
push
dec
bound
daa
lea
xchg
fiadds
push
insl
mov
scas
cmp
pop
push
adcb
aad
mov
aam
sub
js
or
int3
add
loop
jae
cmc
outsb
jo
xchg
repnz
cmp
out
pop
fdivp
je
mov
insl
dec
adc
arpl
sub
shrb
or
subl
fldl
stos
repz
fnstsw
cmp
push
scas
sbb
sbb
pushf
mov
cmp
jno
outsb
pop
push
xor
mov
mov
fcomip
jns
add
sbb
push
mov
loope
jmp
xor
stos
mov
fstl
push
dec
xchg
xchg
dec
lahf
dec
lds
inc
repz
xchg
and
cmp
and
cmp
add
pop
imul
cmp
rcl
push
clc
adc
and
sbb
aad
mov
and
sbb
bound
cltd
into
cli
aaa
cmp
ds
mov
lret
mov
adc
les
jbe
sahf
push
lahf
insl
pop
push
test
dec
aad
push
xchg
adc
iret
in
mov
pop
pop
add
jbe
add
cmp
mov
jns
dec
push
loopne
cmp
and
and
leave
lretw
xchg
xor
add
lods
pusha
xchg
sti
push
sarl
out
inc
cmp
lods
inc
add
daa
ja
in
mov
jo
cmpsb
dec
addr16
jno
cmc
subl
inc
enter
mov
mov
inc
cmp
adc
push
enter
fbstp
mov
mov
cmc
stc
scas
aas
leave
or
imul
adc
leave
push
testb
adc
sti
xchg
mov
push
pushf
jecxz
mov
lods
into
or
add
inc
mov
and
push
add
ja
cmp
mov
add
jo
xor
sti
into
stos
and
test
mov
push
fisubrl
les
movsb
push
adc
xchg
pop
mov
fmuls
sbb
popf
push
jg
sbb
jnp
ljmp
outsl
xchg
shl
frstpm(287
fldcw
test
cld
in
xor
fsts
push
aaa
sub
jle
push
fwait
and
push
test
xchg
push
fldt
xchg
jge
sbb
cmp
inc
sbb
cmpl
mov
leave
xchg
daa
fdivrl
mov
mov
and
xchg
sub
mov
shll
cs
fimull
cmp
clc
push
pop
out
jnp
ret
arpl
and
call
mov
mov
ss
xchg
std
xchg
mov
push
dec
and
sub
daa
push
lock
mov
pusha
cmp
xor
adc
mov
xchg
mov
incb
icebp
std
sti
insb
lahf
ljmp
addr16
sahf
mov
cltd
push
andb
jbe
dec
icebp
jle
lods
scas
test
lock
jmp
lds
loopne
js
repz
in
mov
cli
test
es
xchg
jmp
test
xchg
mov
ds
add
inc
in
or
mov
test
adc
pop
outsb
jg
pop
xchg
fsubr
mov
hlt
nop
out
or
jnp
inc
pop
mov
mov
push
stc
add
jmp
mov
pop
testl
std
arpl
add
test
addl
adc
lods
jns
jmp
dec
inc
jns
sbbl
push
jnp
cmpsb
xchg
and
pop
sbb
mov
push
movsb
enter
push
mov
pop
hlt
jp
inc
shll
xchg
call
mov
and
ljmp
push
push
cld
mov
sahf
sarb
adc
xchg
negb
nop
insl
or
movsb
jmp
xchg
or
iret
jb
xchg
lret
movsl
push
lock
adc
mov
or
sbb
sahf
add
jp
xor
add
jo
push
nop
add
push
mov
cli
rcl
movsl
das
clc
fsubrs
std
test
bound
xchg
push
loope
jle
ret
ficomps
test
xor
shrb
mov
xchg
mov
xor
fimuls
lret
mov
push
mov
std
jae
cmpsl
sub
sub
mov
cwtl
je
xchg
xchg
icebp
pop
das
add
mov
sarb
pop
ret
in
out
std
ds
aas
scas
add
xlat
cld
mov
sub
ficomps
int3
jo
mov
pop
mov
or
sub
fsubr
stos
div
add
imul
les
fisubrl
iret
xchg
addr16
imul
push
pop
jg
mov
mov
enter
adc
cmp
mov
and
mov
shrb
xchg
inc
out
shlb
cmc
into
push
mov
mov
cmc
adc
inc
mov
imul
dec
sti
pushf
xchg
fbld
push
js
ljmp
inc
leave
push
je
stos
jbe
push
out
adcl
std
cmp
jl
add
jbe
mov
insl
fmull
jg
push
je
aas
lods
push
sbb
outsb
mov
dec
jbe
mov
lcall
add
inc
daa
inc
add
xchg
aas
mov
in
out
cli
jp
adc
lods
push
fcmovnu
adc
in
xchg
movl
and
or
dec
pop
fwait
test
or
test
push
mov
sahf
sbb
sbbb
fdivs
iret
out
test
leave
cmc
aaa
insb
mov
inc
lock
lcall
add
xor
std
sub
push
sbb
int3
mov
div
pop
repz
dec
push
pop
testb
xor
mov
cltd
into
pop
stos
push
shlb
adc
mov
xchg
fidivs
js
outsb
push
out
pop
xor
in
lcall
cli
test
fidivs
dec
jnp
pop
outsb
out
fnstsw
rcl
push
fs
in
mov
fcos
mov
mov
rcrl
leave
sbbl
in
fldt
or
mov
pop
movl
xchg
sub
mov
ret
mov
jg
add
push
or
into
push
inc
aam
dec
sbb
jne
xor
scas
out
jle
lock
out
lret
test
push
inc
scas
cmc
mov
push
jl
sub
cli
adc
and
insb
clc
mov
mov
test
mov
cs
fildl
notl
jns
je
into
add
push
pushf
xor
notl
add
sar
jl
ret
mov
sbb
orb
pop
mov
fdivp
dec
add
sbb
imul
sub
mov
shll
lahf
adc
xchg
enter
jle
add
lods
out
add
stos
push
cwtl
and
pop
fisubs
xor
icebp
inc
jb
adc
push
outsb
xor
lds
mov
add
mov
pop
add
aam
mov
loopne
pop
push
push
sub
or
icebp
scas
cmpsb
lock
repnz
mov
into
xor
or
add
cmc
scas
das
pop
mov
stos
ss
pop
sub
dec
ret
mov
pop
push
dec
sub
popa
nop
mov
cmp
or
fnstsw
testl
js
pop
add
jp
ss
cwtl
adc
dec
or
mov
mov
push
xchg
fisttpl
push
xchg
or
shll
ja
cmp
sub
scas
xor
stos
push
fisubrs
orb
out
jbe
stos
xchg
mov
fildl
adc
out
push
ljmp
popf
idivb
jmp
xor
test
jnp
xchg
cwtl
stos
hlt
lss
subl
add
pop
lods
std
dec
inc
mov
mov
js
or
jg
add
mov
mov
sub
stos
mov
push
popl
push
jle
lods
push
mov
inc
cmp
insb
sub
push
mov
out
xor
and
je
sbb
in
cmp
pop
sub
push
loop
pop
sahf
dec
bound
push
add
mov
inc
pusha
enter
pop
or
xchg
test
xor
mov
sti
add
sub
and
mov
mov
fstps
dec
mov
mov
cmp
shrb
cmp
pop
ret
dec
adcb
pop
rcl
loop
lods
jecxz
inc
insb
lods
push
adc
fwait
jge
mov
xor
out
xorl
or
jl
cmpsl
std
gs
inc
stc
jne
add
sub
popf
push
icebp
pop
pop
cmp
insl
dec
xchg
test
cmp
push
or
xor
mov
lea
xchg
into
iret
pushf
sbb
aam
dec
mov
in
sbb
xor
loope
mov
mov
orb
test
cltd
dec
push
inc
xor
scas
stos
mov
or
out
jae
inc
fsubrl
mov
xchg
rorl
cmp
or
daa
mov
jae
scas
ja
psrad
out
mov
push
pop
cs
and
jle
hlt
iret
cmpl
push
sti
push
insl
sub
xchg
and
icebp
sarl
inc
or
arpl
dec
add
aaa
mov
hlt
sub
ficoms
fcmovbe
push
je
ret
mov
sub
and
adc
int
sbb
js
addr16
adc
pop
lret
jo
add
or
pop
test
push
mov
xor
ja
stc
inc
mov
popf
sbb
lcall
pop
cmpsb
loope
xchg
mov
sbb
int3
xchg
inc
push
ljmp
aad
in
ds
mov
mul
lcall
test
outsl
push
xchg
roll
adc
pop
xchg
jp
fmul
or
pop
and
sarl
cli
sbbl
mov
inc
jg
add
mov
lods
or
inc
xor
loope
clc
mov
pop
out
aam
pop
mov
pop
sbb
pusha
and
cmp
subl
mov
mov
mov
xchg
sub
jne
inc
cmpb
and
mov
push
add
add
mov
jno
inc
jns
dec
rolb
adc
pop
in
mov
ja
pop
outsl
insb
inc
add
and
or
push
in
mov
pop
in
cmp
sub
pop
lea
outsl
and
aad
insb
jecxz
call
sahf
daa
cmp
cli
cmp
popf
repnz
scas
ljmp
mov
push
mov
fmull
iret
sub
or
xlat
popf
mov
enter
adc
pop
and
mov
into
inc
xchg
fnstsw
dec
pop
out
xor
xchg
aas
adc
push
mov
repnz
add
stc
pushf
inc
xchg
loopne
sub
jnp
rolb
cld
push
pusha
xchg
inc
mov
xlat
mov
in
rclb
or
cld
in
sub
mov
jae
adc
int3
push
cltd
out
sub
mov
leave
hlt
push
add
inc
xchg
push
xchg
xchg
std
adc
xor
cli
out
mov
xor
lcall
insb
mov
mov
mov
inc
push
icebp
sub
clc
insb
pop
movsb
aaa
lret
loop
data16
aas
or
adcl
fcomps
inc
mov
jnp
les
cmc
add
insb
shlb
jle
sarb
lock
adc
sahf
scas
lods
lods
adc
dec
pop
pusha
loope
pop
daa
xchg
cmp
cltd
addl
mov
leave
xchg
mov
adc
and
in
mov
dec
daa
outsb
inc
sbb
sub
or
pop
xor
je
movsl
fildll
lret
cmp
push
loop
and
test
mov
push
push
dec
mov
mov
out
outsb
mov
mov
pop
outsb
rcrb
jno
pushf
mov
jb
ss
sbb
in
pop
in
push
outsl
sub
inc
repnz
xor
sub
stos
dec
xor
repz
or
icebp
in
dec
outsl
int
icebp
test
jne
jno
adc
add
cmpb
inc
jecxz
jg
cltd
push
mov
mov
xchg
jae
pop
mov
cmp
add
and
je
adcl
outsb
js
loop
push
pop
cmpsl
sub
mov
push
cltd
inc
cmc
nop
hlt
xor
repz
xor
sbb
adc
loopne
push
xor
mov
outsb
icebp
cmp
add
cmp
daa
pop
and
dec
pushf
xchg
jle
ja
pop
sub
insl
inc
cmpsb
mov
xchg
sub
aam
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
push
mov
jl
pop
pop
jl
cli
test
and
jp
mov
flds
add
mov
push
cld
sbb
sub
movsb
push
pop
jb
das
divl
and
into
push
fnstenv
sub
nop
mov
es
mov
mov
jmp
inc
cmp
jb
xor
int3
fldl
daa
sub
lret
aaa
insb
dec
mov
adcb
add
dec
pusha
data16
roll
dec
pop
outsl
xchg
push
inc
mov
idivl
fildll
arpl
adc
and
and
out
call
xor
xchg
test
jo
push
arpl
cmp
pop
sbb
jle
add
sbb
xor
daa
nop
scas
aad
and
inc
lahf
push
pop
push
outsb
sbb
lcall
sub
dec
sub
and
sti
aas
mov
xchg
pop
inc
mov
push
jno
mov
aaa
into
clc
dec
add
in
cmc
cmc
orl
cld
pop
fisttps
lds
out
das
pusha
add
in
inc
cmc
out
push
add
aaa
mov
inc
pop
cli
jae
sbb
stos
jae
icebp
imul
lds
out
push
or
rep
loope
scas
xchg
pop
push
push
in
imul
out
aad
cld
lea
bound
xchg
and
and
push
sub
pop
lahf
sbb
fwait
mov
dec
jns
jge
cmc
xchg
push
adc
in
stc
jno
pop
aam
cmpsl
lret
lods
filds
test
hlt
in
pushf
jns
mov
xchg
or
in
add
loope
push
xchg
mov
xchg
sahf
cli
scas
dec
aas
lret
shlb
adc
sbb
mov
gs
fcmove
std
push
dec
dec
inc
xchg
lret
sub
sbb
sub
pop
roll
loope
jle
or
data16
mov
das
shll
inc
sahf
js
sub
and
sbbb
ret
adc
and
or
pop
int3
lret
push
xor
dec
add
out
sub
outsb
mov
sub
stos
or
pusha
mov
pop
push
gs
or
push
lcall
pop
jmp
shrb
fisttpl
cmp
fadds
arpl
pop
out
negl
adc
add
add
mov
mov
cmpsl
into
test
loop
in
cmp
fsubr
insb
lret
in
sbb
sub
xchg
jle
jno
jge
mov
mov
sub
gs
outsl
inc
fmull
pop
jnp
ret
test
in
mov
jbe
pop
cmp
cs
out
fidivl
xchg
cmp
mov
lret
les
xchg
pop
add
dec
loop
xor
or
cmp
rcrb
rcrb
jnp
push
sub
push
mov
enter
mov
mov
and
fwait
test
adc
je
adc
add
mov
call
ljmp
mov
pop
xchg
bound
mov
inc
int
lds
cmpl
add
addr16
bound
jbe
jmp
iret
jmp
push
jae
std
mov
stos
into
xor
test
es
repnz
xchg
insb
adc
insb
pop
push
jo
jo
mov
insl
jbe
adc
pusha
add
mov
ja
shll
in
mov
imul
aaa
inc
sub
inc
js
inc
mov
xor
pop
sbb
mov
mov
clc
arpl
xchg
inc
inc
pop
xchg
addr16
push
ret
out
mov
add
fcmovnb
jb
push
cmpsb
sbb
shl
sub
addr16
xchg
xchg
sbb
clc
lea
cmpsb
pushf
mov
xor
out
test
jb
test
add
outsl
mov
fwait
sbb
or
mov
ficoml
movsb
adc
rcr
arpl
lret
inc
dec
stos
sarl
test
dec
lock
das
xor
jbe
ja
outsl
mov
mov
xor
cwtl
sub
mov
jmp
mov
sub
mov
je
inc
push
push
cmpsl
cmp
dec
and
rclb
or
mov
add
aaa
fisttpl
xchg
sbb
and
inc
je
and
mov
dec
testb
mov
ljmp
popa
icebp
xor
mulb
sub
push
adc
push
dec
push
push
inc
inc
fstl
dec
clc
xchg
inc
mov
test
aas
add
pop
sub
or
add
adc
push
and
sbb
scas
xor
jl
pop
and
pop
fadds
sti
mov
popf
and
inc
lahf
pushf
mov
xor
cmpsl
lret
push
xor
dec
je
lahf
adc
jmp
and
adc
negb
sbb
sarb
in
shl
enter
cmp
fsubrs
in
mov
pop
dec
add
dec
test
xchg
pusha
add
sbb
jns
popf
out
adc
ret
xchg
lret
adcb
ffree
fists
fadds
pop
jbe
fwait
scas
xor
outsl
cmpsb
jmp
sbb
or
jbe
out
nop
scas
loopne
es
out
rcrl
mov
test
and
push
sahf
int
sbb
push
fs
lods
jns
sbb
jl
inc
jg
in
pop
sub
lods
fisubs
int
push
push
pop
cmp
lods
sti
subl
jbe
sub
mov
test
pop
or
or
mov
jbe
repz
mov
insl
movsb
cmpl
ds
lea
test
jmp
mov
push
or
sarb
jp
mov
jecxz
pop
int
imul
frstor
pxor
push
or
test
or
mov
xchg
or
sbb
pusha
sub
xchg
and
cmp
xchg
dec
rorb
mov
push
mov
ret
pop
mov
or
data16
xor
push
sbb
or
mov
sub
sub
sub
imul
lcall
test
mov
push
mov
add
sub
jno
outsl
dec
or
add
jp
jne
shl
xor
add
movsb
push
pop
movsl
les
adc
stc
sarb
inc
and
mov
mov
jo
loope
bound
xchg
dec
and
sub
cmc
fisttps
cmp
dec
dec
sahf
jg
or
mov
mov
adcb
xor
leave
test
sbb
dec
xchg
fildll
int
ret
aas
jno
sub
add
add
out
mov
stos
mov
dec
lds
popa
push
andb
push
xor
pop
orl
mov
and
mov
and
inc
add
roll
adc
into
in
test
dec
dec
dec
cmc
dec
cmp
lcall
mov
mov
jbe
cmp
aam
lock
and
lock
insb
mov
jge
mov
or
jnp
addr16
cltd
pop
ljmp
xchg
inc
dec
mov
int3
adc
sbb
outsb
dec
pushf
js
push
imul
int3
or
sub
mov
ret
push
jne
dec
xchg
push
xor
mov
loopne
sarl
popa
lods
into
outsb
pushf
pop
jo
in
jo
add
in
mov
mov
mov
imul
test
out
imul
or
pop
xor
and
and
out
push
sahf
fstps
or
and
out
imul
lock
adc
sti
xchg
mov
dec
add
jle
fnstcw
mov
or
test
test
test
in
std
test
ficomps
fidivrs
addb
in
xlat
test
clc
scas
add
test
lock
dec
hlt
cld
das
adcb
jns
pop
aad
fdivrs
jnp
sti
out
cltd
mov
or
push
pop
and
pop
je
das
mov
mov
or
pop
mov
inc
fdivs
insb
mov
add
mov
stos
and
lahf
les
dec
push
mov
adc
movsb
cmp
and
jmp
lds
sub
in
ret
out
cmc
pop
or
bnd
fidivs
movsb
test
cmpsb
jg
sbb
mov
mov
fdivl
divl
mov
sti
repz
and
adc
inc
stos
or
sbb
mov
pop
lods
sahf
pop
fstps
lcall
pop
push
dec
out
push
xor
cltd
loope
sbb
ljmp
pop
popa
dec
mov
stos
pop
xchg
test
dec
jmp
pop
fcoml
out
push
xchg
enter
or
rorl
mov
scas
sbb
pushf
fs
sub
ret
jbe
jl
dec
sub
lcall
inc
jg
and
lds
repz
xor
cltd
imull
cmpsl
adcb
xlat
cwtl
mov
pop
sub
lret
scas
mov
out
mov
jmp
dec
fwait
sub
jbe
js
xchg
sti
xchg
add
outsl
cwtl
jno
add
jnp
xchg
lods
push
pop
add
mov
pop
les
jl
loop
and
sbb
dec
lret
cmpsb
jno
and
divl
push
pop
and
jae
fwait
or
fiaddl
into
adc
ljmp
movsb
adc
in
pop
subb
mov
mov
outsl
rcrl
or
cmpsl
mov
mov
sub
pop
mov
sbb
mov
imul
adc
loopne
rolb
into
and
pop
mov
adc
mov
push
in
sbb
inc
push
rcll
jnp
fmull
shrb
movsb
rcll
cmpsl
push
cld
cmp
in
xor
xchg
bound
addr16
xor
cmpsb
movsb
lds
pop
popf
push
xchg
mov
scas
cmp
add
jmp
roll
int3
scas
and
test
sbb
das
cmp
ja
test
inc
fiaddl
mov
add
push
mov
in
xchg
gs
out
xor
insb
dec
pop
fists
subl
lods
add
sahf
jle
inc
pop
xor
out
inc
icebp
cmpsb
imul
std
ljmp
jmp
jle
gs
ja
cmp
sub
and
push
mov
pop
mov
lret
jns
int
rorb
loope
js
icebp
imul
or
loopne
enter
lds
mov
and
jbe
lods
mov
cmp
fstl
cmp
cmp
lahf
xor
es
inc
cld
popf
cmp
mov
xchg
dec
mov
jae
inc
std
lcall
daa
cmp
jne
imul
jge
adc
fildl
lret
sbb
cld
nop
movl
lahf
stos
nop
rol
mov
sahf
cmpsl
cs
scas
sahf
push
push
or
add
lock
inc
mov
out
fistpll
jne
std
mov
mov
repnz
mov
out
arpl
mov
lret
push
cltd
lret
in
out
pop
movsl
sub
fcoms
ret
fs
pop
lods
jns
aam
shrl
sar
or
sti
repz
xchg
fsubl
pop
xor
fistl
lcall
xor
imul
jg
cld
das
inc
je
pop
sbb
sarb
testb
outsb
dec
stc
je
mov
lcall
mulb
jp
pop
or
inc
dec
scas
clc
mov
in
push
and
stos
movsb
outsl
fistl
add
hlt
push
pop
mov
dec
mov
loope
or
data16
jle
clc
mov
nop
movl
roll
jns
push
fldt
stos
in
ret
jae
sahf
xor
cmp
adc
shll
add
inc
iret
into
sub
inc
dec
push
hlt
fsubs
cmc
js
xchg
mov
mov
cltd
push
push
test
fnsave
or
sbb
adc
cmp
mov
movl
out
nop
mov
mov
pop
scas
sbb
lea
cltd
pop
cmp
lods
test
xorb
adc
in
inc
aas
xchg
mov
es
fwait
mov
inc
and
or
addl
in
xchg
call
xor
mov
je
inc
sbb
dec
pusha
mov
add
inc
adc
adc
sbb
in
push
leave
cli
xchg
inc
rsm
sarl
scas
cmp
adc
push
subb
push
jp
pop
sub
or
mov
jp
mov
push
mov
xlat
mov
call
mov
xchg
mov
inc
xor
fst
icebp
push
fisttpll
fidivl
jmp
push
pushf
mov
scas
or
fstps
sub
or
repnz
push
mov
inc
pushf
je
and
pusha
iret
sarb
maskmovq
idivl
sbb
cwtl
jg
xor
pop
cmp
rolb
xchg
xchg
testb
sub
popa
mov
dec
rcrl
fidivrs
push
scas
dec
pop
mov
push
arpl
xchg
arpl
mov
sub
jecxz
insb
sti
in
fs
jns
subps
pop
jmp
test
or
and
in
inc
pop
xchg
mov
rorl
movb
jns
mov
in
loop
pop
pushw
fstps
jge
bound
sbb
jmp
lds
cmp
mov
ret
push
nop
push
fdivrp
mov
mov
xorl
pusha
mov
stc
mov
cmp
add
mov
dec
mov
in
es
mov
in
mov
insb
lea
imul
aaa
xchg
cmp
xor
enter
xor
divl
stc
in
negb
outsl
repz
push
dec
iret
aaa
push
mov
repnz
jmp
orl
mov
push
pop
ret
dec
popa
cmpsb
cmpsb
sub
sahf
jecxz
jae
dec
add
fsubrl
cltd
cmc
rol
aas
cmp
jg
sub
push
mov
out
cltd
add
jl
cmc
push
rcrb
scas
into
and
inc
mov
mov
push
arpl
lods
jge
cmp
and
mov
into
sbb
pusha
mov
jnp
xor
pop
jmp
mov
les
das
enter
push
daa
cmpsl
jns
orl
mov
fsts
adc
fistpl
pop
sbb
add
mulb
pop
mov
xlat
je
mov
stc
icebp
nop
repz
call
push
test
cmp
push
push
imul
stos
sub
inc
daa
stos
adc
mov
xchg
xchg
and
and
inc
loop
scas
mov
jmp
inc
test
xor
outsl
mov
and
inc
lea
inc
pop
mov
cmp
xchg
out
jmp
push
sub
stos
xor
pop
mov
sbb
inc
cmpsb
dec
add
cmpsl
add
or
cmp
jb
jl
std
push
das
pop
mov
push
cmpsb
sbb
out
add
jo
cmp
xor
icebp
add
shlb
cmp
mov
cwtl
xor
mov
pushf
push
dec
xor
mov
inc
inc
mov
ja
jle
sti
dec
dec
mov
xor
jp
mov
cmc
push
and
test
xchg
outsl
insl
adc
cmp
cmpsb
xor
fld1
xor
jns
movsl
xchg
lods
lret
adc
out
xor
and
fcoml
xchg
mov
data16
mov
push
cmp
mov
sti
movsb
jb
cltd
jg
in
xchg
punpckhdq
scas
pop
and
in
adc
movsl
or
jae
xchg
mov
jno
push
les
test
mov
pop
adc
in
cmp
sbb
push
pop
sbb
add
out
cwtl
in
and
or
lcall
push
out
clc
jle
cmp
loopne
lret
fistpl
pop
and
rcrl
ja
dec
mov
scas
sub
pop
jecxz
push
std
js
xor
xor
push
lret
push
jle
add
lahf
or
inc
pop
mov
hlt
outsb
inc
or
repnz
sub
cli
pop
shl
test
stc
fs
add
and
in
mov
push
push
cmp
test
ss
dec
adc
inc
fnsave
int3
ss
mov
les
fs
test
pop
ret
push
mov
jecxz
xor
mov
xchg
jbe
sub
shrl
cwtl
jle
fsts
or
cmp
jp
dec
adc
jb
push
inc
jp
sub
pop
xchg
fisttps
insl
insb
arpl
dec
aas
popl
pop
inc
mov
mov
xor
push
inc
mov
jge
push
lods
push
xchg
sbb
ss
mov
push
xchg
scas
xchg
out
sub
mov
orb
xor
xchg
adc
out
lds
mov
jns
and
push
test
xchg
xor
jg
mov
and
popa
or
jae
xchg
pop
sbb
xchg
mov
pop
push
jae
and
sub
mov
jae
sbb
xchg
les
pop
mov
ror
cmp
sub
fbstp
repz
jno
scas
icebp
jg
std
or
pop
jno
push
cmp
imul
movl
bound
mov
lock
adc
imul
iret
int3
xor
dec
cld
into
je
addl
cli
jno
mov
pop
push
in
jg
fstl
cltd
outsb
mov
dec
and
hlt
in
mov
in
repnz
out
mov
ss
xor
inc
and
cmp
inc
sarb
or
push
test
call
xchg
cmp
jp
roll
add
xchg
pusha
add
pop
sub
cmpsb
imul
add
rcrl
xchg
adc
shlb
lret
mov
fidivrl
mov
ret
dec
out
in
lods
clc
cmp
xchg
mov
lock
movsl
imul
out
xlat
xor
xor
ret
xor
out
sbb
inc
test
imul
push
bound
loope
fildl
and
mov
mov
mov
sub
and
int
push
pop
xor
repz
push
rol
ret
rorl
jle
sub
cmp
fidivs
sub
mov
push
rcr
and
pusha
push
cmpsb
mov
adc
add
sub
add
xchg
pop
and
inc
fs
test
fmul
movsb
or
xor
bound
jl
or
pop
out
pop
jo
in
inc
cmp
neg
dec
in
call
xchg
fldenv
sbb
xchg
mov
mov
xchg
add
pop
push
xor
filds
mov
push
movsl
lods
bound
adcb
into
mov
and
mov
mov
mov
mov
pusha
das
push
testl
and
dec
je
xchg
cmp
mov
add
mov
jns
xor
insb
push
mov
jp
mov
cli
push
mov
lods
movsb
mov
stos
jl
xchg
leave
dec
fcoms
sub
ljmp
dec
and
clc
fsts
enter
push
cmpsl
jne
lods
fabs
es
popf
pop
lock
popf
call
sbb
lods
testl
adc
int3
loop
jno
xchg
int3
fcoms
mov
cmp
xor
mov
mov
sub
push
jb
ljmp
mov
les
jle
test
popf
xor
repnz
movsb
or
dec
pop
shll
push
in
add
inc
fwait
mov
mov
scas
lcall
xchg
mov
jno
into
xchg
mov
and
rcll
mov
mov
inc
xorb
xor
dec
pushw
jle
out
mov
xor
mov
add
and
pop
mov
jg
mov
lret
mov
sarl
dec
call
mov
jmp
xchg
jmp
out
mov
cli
xor
mov
fcmovb
lret
mov
mov
out
stos
jo
xchg
mov
inc
pop
mov
mov
lret
adc
movsb
clc
cmpsb
stos
movlps
les
fcomip
pop
inc
ljmp
into
not
and
adc
shlb
mov
push
or
dec
or
fisubs
mov
sbb
xchg
or
mov
daa
dec
inc
shrb
sahf
xor
sahf
lret
int3
push
movsb
lahf
xor
insl
mov
call
jp
or
loop
pusha
movsl
xchg
mov
fnsave
cltd
andb
push
jmp
ds
adc
repnz
add
add
mov
insb
xor
lahf
lahf
add
out
mov
inc
xchg
repnz
repnz
pop
pop
das
dec
clc
xor
and
xchg
stc
cmp
push
jp
lods
repnz
mov
jne
xor
out
mov
sbb
daa
xchg
inc
and
xor
in
push
jge
in
inc
js
dec
repz
pop
sbb
xchg
outsb
out
or
cmpsb
jo
dec
push
into
cld
jle
ljmp
pop
js
push
imul
mov
ds
fs
out
add
stc
mov
pop
insb
scas
lret
jecxz
jge
test
mov
xlat
cmp
mov
jmp
stos
lods
imul
xchg
cmp
pop
push
and
lret
inc
and
add
adc
sahf
jbe
sub
jecxz
mov
sbb
xor
fnstcw
jp
popa
pop
sbb
xor
ret
mov
jbe
cmp
pushf
scas
jecxz
inc
mov
fwait
stos
lds
icebp
clc
popa
xchg
dec
dec
cmp
decb
inc
ljmp
cmp
cwtl
in
xor
cmp
jns
xlat
cmp
sbb
push
testl
adc
jne
mov
fs
call
jmp
mov
sbb
sub
gs
aas
and
push
mov
loope
mov
adc
pop
sahf
jne
cmp
mov
int
aas
fisubs
cmc
int3
cmp
adc
insb
jno
sub
lock
xor
adc
sub
data16
lds
stos
das
and
scas
mov
xchg
das
sub
nop
addr16
xchg
and
inc
lret
dec
or
aas
icebp
and
xlat
scas
imul
pop
lret
cmp
iret
mov
mov
jmp
int
out
ret
cmp
daa
arpl
out
sub
inc
subb
test
lock
xorb
and
lods
adc
dec
mov
mov
aad
repnz
test
mov
mov
xlat
testl
shl
std
fnstenv
iret
fiadds
mov
jo
mov
push
cmp
and
lret
xlat
cmp
ret
adc
xor
jmp
xchg
movsl
cwtl
pop
insl
pop
movsl
in
cltd
adc
cmc
inc
aam
addr16
mov
fimuls
add
mov
mov
mov
rclb
adc
jae
push
xor
addb
not
cmpsb
jecxz
mov
rcrb
imul
mov
xlat
cmp
out
negl
gs
iret
push
enter
add
pop
jae
xor
add
packuswb
fstps
aam
mov
in
mov
pop
push
xchg
mov
ret
push
das
mov
fs
aad
cmp
jno
scas
in
xor
pcmpgtb
sub
pop
lock
pop
pop
inc
sub
testl
jg
mov
das
mov
jb
pop
daa
and
mov
cli
and
sub
pop
or
jmp
mov
dec
jne
ljmp
movd
sub
stos
push
mov
xchg
cmp
push
pop
pop
fs
xor
dec
xchg
sti
or
retw
add
cmp
mov
sub
mov
mov
fwait
mov
adc
les
dec
sti
inc
popa
dec
sub
or
lds
sarb
gs
lods
das
jne
sub
lcall
outsl
clc
push
out
jne
mov
iret
shr
dec
jbe
jge
orl
push
pushl
jbe
push
ret
mov
je
push
mov
test
je
popa
pop
aad
cmpsl
rcr
and
sub
push
inc
pop
mov
cli
pushf
xor
jo
fsts
pop
popf
fcompl
pop
add
loope
movsb
pop
mov
lods
dec
mov
das
aad
out
dec
adc
out
xor
insl
fisttpll
mov
cld
in
ror
cs
cs
or
xor
sub
push
stc
clc
push
call
cli
lret
mov
jns
roll
push
int3
test
push
push
lret
mov
out
sub
test
arpl
fsubrs
mov
icebp
idivb
out
sahf
cltd
cs
je
cmpsl
pop
xchg
mov
jecxz
popf
lods
daa
push
test
cs
mov
push
in
into
fistpl
jae
jo
adc
push
jmp
mov
xchg
push
ret
nop
insl
sbb
inc
sub
test
push
ja
dec
dec
xchg
push
rcll
dec
pop
mov
dec
insl
mov
je
inc
sub
cmp
lock
ficomps
pushf
fs
mov
adc
and
add
and
imul
in
test
int3
sub
andl
inc
jecxz
icebp
jecxz
arpl
iret
js
or
mov
or
mov
xchg
push
jo
jbe
mov
addr16
outsb
gs
pushf
sar
mov
dec
popf
popa
sub
sbb
dec
jbe
aas
inc
stos
mov
insb
insl
ss
jp
jg
mov
adcl
jge
or
loopne
push
stos
cmp
xor
jle
push
xor
jne
int
inc
xlat
fwait
enter
push
inc
jne
out
fs
mov
nop
and
stos
cmp
xchg
push
sub
dec
add
xchg
mov
xor
orb
or
nop
jg
or
pop
outsb
mov
movl
arpl
leave
out
imul
ss
add
lcall
iret
mov
shlb
sub
popa
jmp
push
call
popa
pop
leave
clc
inc
fwait
das
push
add
mov
dec
lods
or
mov
je
sar
inc
ljmp
out
add
lea
sub
out
inc
stos
repz
and
xchg
mov
in
nop
in
cmp
testb
push
dec
cmpsb
inc
adc
jno
inc
test
clc
in
aad
add
testb
stc
mov
test
pop
pop
sbb
fmuls
iret
daa
leave
cld
sbb
into
cwtl
test
nop
mov
insl
push
inc
add
enter
or
sbb
jno
jmp
mov
push
pop
push
mov
or
and
and
dec
mov
sub
or
ds
hlt
mov
mov
ret
push
pop
mov
xor
ss
je
ja
outsl
add
push
push
mov
std
cwtl
lret
xchg
scas
push
aaa
jle
loope
enter
outsb
sbb
cmp
stc
pop
enter
sub
data16
sub
cwtl
cmp
mov
popa
sub
testl
mov
cmp
pop
pop
cwtl
lods
sbbb
mov
sahf
jae
adc
push
in
mov
sub
or
movsl
ficoms
mov
mov
inc
je
popaw
je
or
int
adc
out
xchg
cmpsl
mov
jge
loop
jmp
movsl
ds
add
enter
inc
xor
mov
mov
push
sub
xor
cmp
add
test
jb
push
and
mov
jo
imul
fwait
sbb
ficoms
das
aaa
and
sti
std
fdivrs
cmpb
or
sub
push
jmp
push
js
jno
cmc
xor
aam
mov
cmp
imul
pop
imul
sbb
out
lock
push
adc
jle
pop
cmp
mov
push
sbb
ficomps
std
cli
cmpsl
bound
sbb
cmp
ds
and
gs
mov
stos
dec
xor
mov
push
rclb
sub
mov
dec
add
mov
arpl
test
lret
push
push
ds
lret
shr
enter
nop
xchg
mov
test
xchg
movsb
fwait
pusha
sbb
sahf
pusha
and
sub
pop
push
lock
and
fdivrl
mov
inc
inc
cltd
lock
sub
jo
add
mov
jge
mov
shrl
repnz
test
mov
hlt
add
cmpl
rol
aaa
push
xchg
push
push
xchg
cmp
sbb
or
sub
nop
xor
filds
scas
pop
inc
popf
mov
arpl
iret
jae
ficompl
shll
ljmp
rcll
xor
bound
mov
lcall
push
outsl
shll
pop
xor
out
pop
sbb
cmc
je
push
sub
sbb
push
popa
out
jp
pop
aad
shl
dec
imul
xchg
push
push
cmp
ffree
out
mov
loop
jmp
out
lret
mov
or
pushf
and
in
outsb
fwait
pop
mov
lea
xor
scas
dec
adc
cmpsl
stos
insb
movsl
inc
add
mov
jmp
cmc
pop
sbb
dec
into
out
sbb
or
sub
xor
pusha
cmpsl
inc
or
jle
cmp
outsb
popf
rclb
das
imul
add
dec
je
mov
pop
ljmp
push
pop
sbb
adc
and
mov
out
mov
fwait
xchg
fisubl
push
jno
testb
sub
leave
pop
sti
gs
push
es
pushf
mov
cld
sub
fsubrs
dec
push
out
repz
aad
pop
aam
xchg
push
ret
shll
out
jmp
push
xchg
shll
push
lds
xor
sbb
hlt
mov
js
stc
jb
pop
lea
hlt
ret
inc
and
sbb
dec
push
sahf
or
jmp
scas
jnp,pt
sub
jge
mov
jmp
mov
stos
and
cwtl
fiaddl
mov
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
inc
push
fs
jecxz
push
pushl
push
mov
cmove
xor
stos
and
cmpsb
push
xchg
aas
inc
fimull
xchg
test
pop
adc
adc
mov
inc
fwait
inc
pushf
pop
loopne
cmc
or
les
out
popf
mov
add
hlt
mov
in
pop
sub
xchg
adc
loopne
sub
push
pusha
xchg
mov
mov
add
stos
stos
mov
push
into
outsl
test
out
mov
ss
mov
icebp
pop
test
rorl
dec
xchg
cmp
inc
and
ficoml
and
xchg
insl
push
jo
mov
scas
int3
lcall
out
mov
push
xchg
iret
mov
jle
scas
in
into
pushf
nop
or
jecxz
push
lcall
add
jmp
fbstp
pop
pop
ret
mov
sbb
bound
mov
loop
inc
and
xchg
adc
lods
mov
mov
inc
and
push
cmpsb
mov
test
sarb
pop
push
mov
inc
xchg
rcll
stc
decl
filds
adc
rcrb
shll
aad
mov
cmpsl
mov
mov
mov
loope
les
jno
out
push
xlat
or
lahf
ljmp
sarb
xchg
clc
cmp
xchg
mov
negl
jmp
sarl
cltd
fwait
or
xchg
mov
pop
push
adc
xor
pop
popf
je
jbe
dec
push
insl
loopne
xor
sbb
mov
test
push
rcrb
leave
push
adc
aam
sub
flds
jmp
jne
rol
sbb
mov
inc
andb
cwtl
jmp
mov
jnp
jno
jecxz
shll
cltd
xor
mov
jmp
loope
mov
kandnw
dec
lcall
hlt
clc
mov
repz
sub
mov
outsb
lock
mov
sbb
push
aaa
cmp
mov
dec
fldt
cmpsl
std
push
xor
inc
cltd
jae
mov
push
arpl
cltd
stos
dec
inc
mov
cld
sub
jno
adc
in
push
add
mov
fstpt
stos
imul
ret
lret
subl
imull
or
orb
loope
mov
mov
shlb
inc
lret
push
inc
or
imul
cmp
push
jg
ret
or
cmpsb
es
dec
pop
cwtl
ljmp
adc
mov
add
mov
imul
mov
mov
mov
and
or
xchg
dec
and
inc
xor
imul
cmp
cli
cmpsb
loop
fwait
mov
xor
mov
clc
mov
scas
mov
daa
jecxz
xor
pop
in
outsl
sbb
jge
adc
xchg
push
mov
adc
inc
sbb
dec
divb
gs
repz
adc
push
jmp
test
test
into
int3
jecxz
cwtl
insl
jecxz
adc
fisubl
test
rcll
scas
lods
sbb
subb
aas
mov
mov
cs
popf
mov
das
jge
cmp
sbb
mov
xchg
das
pop
jg
push
push
mov
xor
mov
enter
sub
fimull
mov
lret
xchg
jno
or
sbb
loope
push
mov
mov
xor
xor
jg
or
jne
mov
mov
sbb
cltd
push
add
inc
xor
jle
dec
mov
xor
in
pop
xor
repz
sub
xor
daa
jns
push
int3
and
or
cmp
inc
add
xchg
adc
xor
shl
adc
lret
push
aam
sar
inc
xorb
sbb
xchg
std
cmp
aam
into
push
idivb
push
aad
mov
pushf
sub
pop
ds
inc
lock
push
pop
cmpsl
cmp
pop
adc
pop
push
mov
imul
ljmp
xor
sub
shl
lret
dec
xchg
xor
jmp
lcall
jge
inc
adc
dec
xor
popf
pushf
setae
imul
in
dec
into
sub
aad
adc
pop
mov
sbb
push
mov
and
sti
adc
dec
xlat
sahf
loop
sarl
xor
rclb
lcall
jns
aaa
sahf
imul
mov
scas
gs
mov
push
mov
test
lds
sbb
aad
mov
mov
adc
pusha
push
xchg
push
testl
cmp
jl
js
xchg
inc
cltd
movsb
test
adc
cwtl
iret
push
cwtl
xchg
pop
push
fsubrs
or
pop
repnz
sbb
xor
jo
das
je
sbb
decb
aaa
inc
jl
jns
pushf
cmp
inc
cli
rclb
mov
mov
jmp
mov
mov
cmp
adc
in
ss
add
lods
pop
sti
jge
lock
cmpsl
push
and
dec
loope
mov
mov
jae
push
pop
test
out
dec
sti
mov
shrl
stos
rol
xchg
test
pop
aaa
in
jo
mov
mull
lods
out
cmp
pop
out
mul
push
imul
lods
pop
div
xchg
jmp
lea
out
shll
or
mov
loope
or
xchg
pop
pusha
imul
sahf
pop
in
add
cwtl
lcall
push
mov
sub
jo
adc
cmpl
lahf
test
repz
mov
push
add
mov
in
dec
test
arpl
mov
aad
aam
lods
cwtl
icebp
jp
add
aaa
sub
scas
push
adc
sbb
stc
jnp
push
mov
jl
pop
sbb
arpl
inc
xchg
cmp
out
outsb
shr
daa
cmpsl
insb
add
dec
out
pop
xchg
sub
iret
mov
add
lods
and
jge
sahf
mov
cmp
push
xchg
sbb
xor
mov
xchg
lods
add
cmc
shrb
xchg
xor
rcl
adc
data16
int3
xor
out
scas
pusha
gs
int3
call
mov
pop
sub
pop
push
ss
bound
lret
mov
mov
test
push
sub
adc
mov
or
pushf
jp
pop
lea
dec
add
test
jp
xchg
sub
faddp
inc
inc
sub
aas
in
scas
out
shl
sahf
lcall
inc
sub
push
outsl
lcall
mov
js
loope
xchg
dec
sbb
fs
jnp
inc
or
pop
mov
push
dec
adc
imul
jo
imul
mov
shrl
or
mov
pop
loop
push
sub
lcall
inc
inc
mov
out
testl
jle
pop
sarl
mov
sbb
pop
and
pop
test
aad
sbb
in
sub
xchg
inc
add
adc
jne
xorb
shl
dec
mov
push
xchg
xor
sbbl
nop
test
mov
adc
xor
scas
mov
into
aaa
ljmp
cltd
ret
repnz
fistps
rcl
lcall
mov
fmull
push
aam
jne
dec
or
mov
call
out
mov
inc
paddb
and
fdivrs
jne
xchg
je
mov
push
cmc
push
fistpll
cli
gs
sahf
js
push
cvtpi2ps
inc
call
in
jecxz
scas
faddp
lock
dec
push
mov
sub
add
icebp
inc
cmp
mov
sbb
adc
pushf
mov
mov
movb
jl
inc
test
sarl
scas
popa
rcrl
loop
leave
cs
imul
push
xor
daa
push
daa
in
and
dec
mov
push
ficoml
xor
adc
ret
and
cld
int
and
enter
ja
sysret
leave
daa
push
cmp
pop
sbbb
lea
jecxz
test
fstl
ret
test
xchg
pop
sub
std
mov
jbe
popa
jo
push
jecxz
movsl
es
push
cmc
into
push
adc
inc
repz
aam
xor
adc
fimull
mov
push
add
lret
mov
dec
add
fwait
xor
loop
mov
mov
or
in
mov
xor
lods
mov
dec
lret
mov
lcall
loopne
pop
adc
pop
jbe
inc
jns
mov
xor
cmp
mov
xchg
lds
shrb
frstor
stos
rorb
imul
adc
push
xchg
pop
add
sub
push
ret
mov
in
mov
xchg
pop
push
xor
nop
or
lds
push
loop
push
adcb
nop
imul
pop
xor
pop
and
loop
jp
mov
cmpsl
push
add
jp
jg
out
test
bound
gs
jp
out
fsubp
mov
jns
mov
and
dec
pop
loope
daa
fwait
sarl
or
into
lea
lea
xor
or
fwait
cmp
aam
ss
jg
cmp
mov
and
jl
cmpsl
imulb
mov
outsl
or
out
dec
ror
scas
insb
mov
xor
int3
mov
out
gs
in
std
bound
mov
push
lods
rorl
xor
add
and
xchg
sti
and
rcrl
or
dec
adcb
loope
out
rcrb
ja
sub
jae
lcall
lea
in
adc
xor
lds
xchg
mov
xor
cmp
lock
pop
iret
fldl
fnsave
mov
add
jmp
xchg
lock
sbb
data16
fisttpll
mov
jge
sti
adc
daa
adc
inc
push
jl
mov
subl
sbb
jnp
dec
jo
sub
or
xor
enter
fs
mov
clc
ja
xchg
jb
lret
test
and
lret
mov
ret
je
repnz
loopne
add
in
jl
arpl
xchg
sub
les
mov
ss
lds
or
sarb
je
lret
sub
ret
xchg
dec
shl
adc
cmp
mov
jl
cmp
outsb
mov
or
sub
lock
pusha
xor
jne
out
mov
data16
xor
rclb
fimuls
adc
add
loopne
xchg
mov
repz
or
or
testl
popf
std
test
and
xor
pushf
sbb
xor
inc
mov
and
leave
sub
jnp
je
fcoms
outsl
or
mov
inc
and
les
mov
mov
jmp
repz
adc
mov
imul
lods
ss
or
cltd
pop
mov
jge
push
dec
push
flds
adcb
dec
pop
mov
pop
movsl
inc
inc
inc
dec
push
and
xchg
imul
pop
clc
mov
jbe,pt
popf
add
in
push
inc
ljmp
dec
add
cli
pop
sbb
scas
cmpsb
loopne
dec
imul
add
pop
xchg
lock
andb
jno
and
add
push
outsl
dec
es
loop
sub
and
and
xchg
mov
xchg
mov
shl
div
sub
and
rclb
sbb
in
imul
cmpsl
dec
dec
push
ret
push
js
mov
add
lret
adc
stos
fisttps
or
imul
das
addr16
sub
lcall
sub
fwait
clc
jae
ja
push
mov
dec
push
cmpsl
insb
fs
push
fwait
test
adc
cwtl
movsb
repnz
hlt
lret
or
popa
pop
jne
popf
bound
sub
mov
dec
hlt
sar
dec
fldcw
popf
loopne
jne
loop
aas
rcrl
mov
mov
dec
lgs
inc
aas
out
sbb
inc
add
clc
xchg
les
addr16
lea
scas
fucom
in
sub
sbb
pop
and
push
js
mov
aas
push
int3
test
mov
aad
adc
or
int
push
pop
mov
mov
add
jl
jp
test
push
sti
mov
jae
jle
lret
into
jge
and
xchg
fwait
sbb
xor
fimull
les
sbb
rcrb
loope
jo
faddp
xchg
into
mov
leave
add
lcall
push
cmp
jnp
and
lahf
push
sub
push
jnp
add
fildll
xchg
jb
add
jae
adc
out
scas
push
nop
add
stc
inc
ret
pop
fstl
lret
idivl
xor
leave
ds
xchg
xor
lahf
ret
or
pop
pop
pop
aas
inc
std
mov
je
mov
subl
or
and
scas
mov
add
das
mov
pushf
dec
icebp
ljmp
add
sub
test
lahf
insl
xchg
cmp
pop
test
je
ds
lahf
fucomp
cmp
fs
sub
shrb
xchg
and
cmp
jb
jge
cmpsb
jnp
jmp
in
push
and
shr
lret
lahf
ret
pop
orl
xor
dec
out
hlt
inc
mov
lds
xor
push
add
mov
out
stos
ds
dec
dec
adcl
mov
ret
dec
jo
dec
or
stos
mov
in
enter
xor
pop
lcall
dec
and
sub
jne
xchg
jle
xor
stos
cld
add
push
ds
divb
lea
pop
out
int3
or
psrad
shrl
and
lahf
and
sub
mov
pop
mov
xor
rcl
push
pop
test
xchg
push
xchg
lcall
jns
add
mov
rep
sbb
inc
jge
addl
push
roll
fdivr
jge
inc
sbb
dec
add
inc
ja
inc
add
int
cwtl
js
add
decl
xchg
popf
sub
test
sbb
out
shll
xchg
adcl
aam
sahf
push
hlt
je
adc
mov
imul
pop
push
clc
sti
stos
push
inc
xchg
lahf
dec
inc
xor
xchg
mov
sub
fistpll
lcall
ret
xchg
repnz
ret
divl
sbb
out
stc
jecxz
scas
cmp
lret
int3
lods
shlb
je
push
pop
mov
sysenter
std
shl
mov
xchg
mov
mov
repz
jb
outsb
test
les
sub
imul
repnz
adc
mov
stos
out
cmp
mov
sub
rcrb
mov
mov
mov
sub
jnp
pop
sbb
sahf
cmp
sarb
popa
imul
dec
cmp
jns
ljmp
adc
fsubs
dec
jp
das
add
dec
add
sbb
lcall
outsb
aas
inc
cmp
xlat
scas
mov
ret
pop
sbb
leave
jg
push
into
mov
mov
arpl
fistpll
push
mov
popa
pushf
push
push
je
mov
or
cmp
dec
dec
loope
js
pusha
sti
jb
add
or
leave
sti
shlb
xor
daa
xor
dec
sub
pop
outsl
mov
mov
lret
test
pop
mov
addr16
sbb
cltd
xlat
mov
loop
inc
cmpsb
fnstsw
dec
or
mov
mov
pop
fcmovnbe
cmpsb
cmc
mov
arpl
dec
add
in
mov
mov
add
dec
in
adc
mov
jno
lds
or
sub
fidivrl
movsb
lock
scas
inc
out
and
sub
pop
dec
and
dec
cmp
in
fstl
ja
push
xchg
sbb
iret
push
mov
cmp
jns
fpatan
add
and
lahf
adc
ljmp
dec
push
fs
or
pop
imul
mov
push
not
dec
or
aad
xor
iret
in
pop
push
cmpsb
sti
out
or
movsb
sti
call
jp
pop
adc
std
fidivs
and
iret
rcll
jecxz
nop
adc
pop
jnp
push
mov
int3
and
mov
add
ljmp
gs
test
and
cmc
popa
iret
mov
lea
repnz
shlb
jle
jp
sbb
push
dec
jmp
test
sub
push
sub
arpl
mov
repnz
cli
pop
push
incl
fwait
xchg
cmp
outsb
imul
xor
int3
lahf
cmp
xor
xor
mov
jbe
mov
sbb
mov
imul
mov
xor
sub
sbb
imul
nop
sti
hlt
test
add
dec
pop
movb
lahf
sbb
sbb
dec
cmp
mov
cmp
adc
sbb
ljmp
push
inc
xor
adc
outsl
lods
xchg
xor
xchg
arpl
es
popf
dec
sub
outsl
es
mov
mov
adc
call
pushf
lahf
daa
jmp
adc
idivl
xor
test
jle
addl
xor
aas
test
lahf
bound
into
std
out
add
mov
add
lock
test
mov
out
outsl
cmpsl
aam
inc
push
pop
adc
pushl
push
sub
movsl
jmp
imul
cld
xor
ja
jg
into
les
or
gs
sarb
pop
lods
adc
sub
movb
loopne
cmp
cwtl
or
in
mov
push
mov
mov
dec
imul
cli
xchg
or
roll
arpl
out
loopne
push
pushf
mov
in
push
mov
arpl
push
repz
sub
xchg
loop
sub
jmp
in
xor
cmpb
mov
jns
adc
pop
jae
mov
push
jnp
insb
jg
sqrtps
imul
inc
xchg
inc
jmp
ss
cmp
imul
int3
push
fcoms
outsb
insb
sub
fs
jnp
sbb
pop
in
adc
inc
push
xchg
fdivr
pop
lock
out
jb
inc
xchg
pop
inc
or
mov
loope
push
push
mov
bound
push
jge
jnp
sub
arpl
in
sarb
std
dec
mov
xchg
inc
pop
arpl
mov
jmp
jl
adc
mov
mov
lcall
imul
loope
cmp
and
inc
sub
repnz
rol
dec
leave
cli
das
sbb
and
sub
xchg
jl
aas
sub
fs
pop
cli
add
es
test
dec
push
sbb
int3
fs
add
mov
mov
movsl
test
sbb
and
push
icebp
add
mov
cmp
icebp
movsl
dec
or
aas
sbb
lahf
loop
pop
sbb
jae
or
lahf
jg
out
sbb
lret
pop
outsb
fcomp
xchg
stc
sbb
loopne
aas
inc
pop
xchg
mov
divl
int
jmp
icebp
xor
clc
inc
cmpsl
jp
mov
scas
jno
cmp
adc
std
jl
fwait
push
cmp
and
fadds
and
loop
mov
mov
jmp
shlb
int3
push
je
test
sbb
loopne
fstl
jge
mov
call
test
popa
add
jne
xor
adc
scas
cmp
sahf
push
pop
mov
mov
xchg
xchg
adc
subb
mov
fdivp
shr
mov
fidivrs
xor
out
inc
dec
push
mov
cmc
outsl
fwait
dec
pop
out
clc
xchg
repnz
aaa
xor
xorb
mov
fwait
mov
xor
fwait
es
loop
cmp
cltd
xor
jne
or
dec
jp
mov
orb
push
adc
mov
sub
push
out
loopne
mov
outsb
std
fs
adc
fnstsw
shlb
dec
popf
inc
decl
ljmp
aas
sub
push
mov
into
popa
movsb
out
cli
xor
xchg
lahf
stc
xchg
popf
cs
lock
pop
mov
jo
add
aam
inc
cmp
lods
jnp
mov
jp
rorb
adc
cld
mov
lock
adcb
and
jmp
xchg
imul
or
addl
dec
sbb
sbbb
imul
pop
and
lods
cmpsb
fcomps
subb
add
mov
xor
bound
mov
sbb
icebp
or
sbb
adc
leave
pushf
mov
or
pop
or
or
jl
lods
int3
ret
inc
addr16
adc
xor
xchg
mov
pop
mov
mov
or
pop
in
sarl
ja
and
add
pop
test
cmc
lock
bound
jbe
inc
xchg
xor
jo
inc
sub
push
cmpl
inc
push
jne
sbb
mov
test
sarl
insl
inc
out
mov
call
repz
aaa
dec
iret
or
jmp
lret
cld
mov
push
dec
push
jae
call
xchg
jmp
or
jge
xchg
pop
push
push
lcall
enter
daa
cmp
sbb
xlat
add
sbb
xlat
adcl
mov
faddl
add
aam
stos
in
and
pop
sti
aam
add
into
cld
push
arpl
adc
dec
mov
insl
mov
popa
popa
jns
mov
fistps
cld
jmp
or
inc
icebp
orb
cmp
cmc
fwait
push
adc
xor
or
imul
movsl
out
test
cmpsb
fs
mov
cmpsb
add
dec
out
push
cld
repz
or
scas
data16
and
stos
mov
jge
jge
dec
and
push
adc
hlt
or
xchg
xor
dec
jae
add
sbb
jle
sbb
cs
cmpsb
inc
pusha
jb
dec
sti
xchg
cmp
sub
andl
inc
stc
cmp
cmp
push
insb
cmp
inc
mov
cltd
inc
jns
scas
sti
dec
adcl
inc
int3
ljmp
xor
xor
mov
jne
rolb
or
aam
pop
xchg
xlat
fcompl
jg
sbb
inc
lea
fucom
int3
cld
arpl
test
ret
and
pop
das
mov
into
mov
stos
es
push
lcall
std
in
pop
pop
jns
push
les
mov
and
sbb
adc
das
in
or
and
or
cmp
dec
xchg
adc
mov
mov
fmull
pushf
sbb
lods
sbb
push
ss
test
shrb
mov
out
xchg
fimuls
sbb
xchg
push
shrb
stos
fsubl
pop
ja
or
pop
sti
or
mov
xchg
int3
cmp
divb
mov
in
daa
insl
push
cmpsb
cs
ret
jo
xchg
js
add
add
mov
mov
mov
mov
das
pop
or
sub
xchg
inc
cld
lock
cmpsb
pop
mov
push
insb
xchg
xor
ds
push
add
mov
icebp
jl
and
sub
xchg
mov
out
mov
stos
inc
cmp
xlat
sub
js
mov
push
and
push
fbld
cmp
or
fucomi
add
insb
xor
call
jmp
push
push
ds
xchg
xor
sbb
shr
test
mov
mov
es
add
imul
int3
pop
mov
popa
rolb
push
cmp
xchg
in
mov
inc
sahf
test
mov
sbb
fidivrl
jl
ss
pop
mov
xchg
hlt
std
add
fidivrl
stos
and
xor
pop
jecxz
sbb
clc
push
add
ficompl
faddl
dec
and
xchg
adc
into
mov
int3
sarb
mov
inc
dec
and
rcr
sbb
adc
aas
push
dec
call
lret
fucomp
imul
das
inc
lock
push
into
imul
mov
mov
sbb
sub
jg
add
movsl
in
xchg
das
mov
pusha
and
mov
popa
cmp
daa
testl
mov
lcall
adc
mov
inc
and
sahf
mov
imul
test
clc
xchg
mov
xor
pop
cmpsb
xorl
int
xchg
dec
xor
into
and
inc
ja
xlat
ficoml
test
sub
pop
mov
xor
mov
sub
aaa
cmp
cmp
inc
push
enter
sbb
sub
imul
mov
and
cs
gs
cmp
jp
ss
fldcw
outsb
and
ljmp
nop
pmulhuw
inc
daa
je
push
rorb
and
lret
inc
mov
inc
jl
adc
or
inc
mov
insb
mov
enter
cwtl
call
sub
pop
dec
cmc
scas
fmulp
aas
in
dec
push
sbb
js
sbb
clc
int3
and
fwait
cltd
jl
hlt
movsl
fnstenv
mov
lods
inc
mov
pop
js
in
bound
pop
out
dec
sub
mov
data16
xchg
dec
out
imul
popa
pop
xchg
insb
daa
pop
xor
cmp
xchg
scas
add
sti
jmp
repnz
out
leave
mov
mull
cmp
hlt
push
push
aaa
and
subb
sti
jge
sub
out
cmp
push
ret
out
mov
orb
test
cld
lret
adc
inc
decl
les
cwtl
sub
or
in
out
jb
fsts
fwait
in
fcoms
and
enter
jl
push
aam
jl
adc
pushf
andl
out
add
lds
xor
adc
jg
sbb
repz
push
adc
mov
cmc
or
push
jle
and
cmp
loopne
dec
jne
cmpsb
jmp
fcos
ss
fidivl
pop
push
and
add
mov
scas
mov
and
call
cmpsl
jae,pn
mov
jno
xor
pop
mov
dec
lahf
adc
sub
call
or
bound
aaa
add
subl
cwtl
push
repnz
shlb
out
cmc
cmp
sub
enter
lea
jmp
mov
dec
adc
sbb
pop
mov
jb
loop
jle
adc
test
sti
out
lahf
fs
lods
jnp
enter
xchg
loope
cmpl
adc
fwait
xchg
sbb
je
sbb
push
roll
inc
aad
dec
mov
jecxz
pop
mov
cwtl
mov
cltd
pop
cmpsl
xor
cmp
fdiv
mov
ffree
xchg
cwtl
add
into
imul
jmp
fld
sbb
sub
push
fbstp
sub
lahf
repnz
les
mov
xchg
mov
orl
mov
scas
loop
xlat
sub
loope
dec
sbb
aas
mov
add
or
ss
ljmp
mov
push
jns
jg
dec
lcall
mov
jle
xor
sub
jb
pop
mov
shlb
loope
xor
pop
addb
xchg
or
inc
jmp
lahf
jne
xchg
aam
frstor
adcl
cmpsl
xorb
mov
inc
ljmp
mov
inc
pop
into
jmp
shll
repnz
xchg
add
ja
js
pop
sub
gs
fisttpl
ljmp
cmp
push
jmp
in
test
clc
insb
push
jle
jge
jo
int3
lods
xor
clc
jmp
add
mov
js
scas
psrlq
add
movsb
data16
mov
test
push
inc
int3
dec
std
adc
mov
std
popf
out
sarb
mov
sub
or
fisttps
rcrb
sub
cli
pop
and
xor
xchg
cli
dec
fsub
xchg
push
dec
or
testb
dec
sub
cltd
jg
mov
lock
in
lods
cmp
les
mov
out
cmp
inc
push
push
ss
sarb
test
fbld
and
adc
jno
cld
fwait
ja
xchg
popa
ret
dec
in
mov
mov
daa
mov
aam
imul
xor
gs
test
mov
cmp
push
pop
arpl
sbb
movsb
aaa
pop
pop
enter
cmp
cmp
das
ds
pop
sbb
sbb
bnd
sub
in
scas
adc
or
movsl
dec
and
mov
push
pusha
mov
and
iret
cmpsl
adc
xchg
adc
cwtl
dec
lock
push
rcrb
add
inc
mov
mov
scas
imul
insl
icebp
mov
adc
jecxz
adcl
jbe
mov
inc
lcall
int3
cmc
sub
fcompl
inc
xchg
sub
ljmp
sbb
idivl
mov
pop
clc
ret
mov
sbb
sbb
int3
stos
mov
or
icebp
mov
add
jg
flds
push
ret
or
mov
cmp
jge
mov
pop
repnz
cld
lods
xor
aam
and
cmp
add
arpl
add
fisttpll
std
adc
fidivs
sbb
pop
mov
test
xor
xchg
or
push
xor
xor
adc
add
movsl
xor
lret
mov
call
pop
js
jb
cmp
add
shrl
dec
jle
cwtl
push
pop
frstor
cmc
out
inc
xchg
fcoms
lods
pop
push
clc
pop
repnz
adc
loopne
repz
aad
jb
pop
rcl
pop
mov
mov
fstpl
stc
mov
pop
cld
mov
sbb
cld
add
sub
pop
push
or
dec
cld
add
out
sahf
aaa
or
jbe
dec
aaa
mov
xchg
test
test
jp
mov
or
jnp
sbb
dec
ljmp
jo
dec
and
sbb
sti
movsb
loope
dec
and
fs
sub
xchg
mov
mov
sbbl
adcb
in
inc
and
mov
xor
mov
dec
or
mov
dec
dec
cwtl
inc
arpl
icebp
outsl
xor
in
or
sub
lahf
das
dec
pushf
and
pop
push
mov
mov
push
jg
loope
rorb
push
hlt
xchg
sti
mov
xor
dec
movsl
cltd
fildll
inc
fisttpl
jg
lahf
repz
out
jb
adc
xlat
rclb
push
mov
lds
pop
fs
insl
push
xchg
cmp
stos
out
jecxz
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
push
nop
jl
pop
pop
jl
lea
cli
dec
das
adc
xchg
outsl
aad
mov
aam
add
and
rcll
aas
popa
or
out
or
mov
movsb
mov
mov
test
sbb
cmp
imulb
cmp
push
cmpsl
les
shlb
or
sbb
push
outsb
mov
sarb
xchg
sarl
and
clc
cli
jecxz
xor
lahf
repz
add
lds
xor
mov
or
sbb
fnstcw
sub
mov
sahf
xor
push
and
add
ss
push
pop
pusha
pop
push
jecxz
cmp
mov
push
pop
cs
jecxz
pushf
fldt
inc
xor
fidivl
sbb
adc
mov
lcall
xchg
and
jb
lods
jno
jne
shll
aam
cs
sahf
stc
insl
enter
mov
xlat
push
adcb
push
cmp
outsl
lods
testb
xchg
or
cmpsl
out
sub
jbe
and
pop
mov
lods
in
les
inc
adc
xor
add
outsb
ja
js
ljmp
sub
dec
or
mov
mov
mov
imul
clc
jne
mov
xchg
outsl
stos
aas
cli
enter
lds
orl
stc
scas
stos
sbb
outsb
jnp
orl
call
je
jg
insb
in
sbb
lcall
test
jno
dec
inc
fsubp
or
cmpsb
mov
ret
mov
ss
xlat
hlt
sarb
into
xor
or
orb
not
or
aas
movsl
xlat
jne
ffree
hlt
sub
test
xor
dec
inc
sbb
xchg
dec
fistpll
int3
mov
sub
mov
jl
dec
sti
xchg
test
mov
mov
xchg
cwtl
xchg
pop
xor
fldcw
jb
and
inc
add
mov
xorb
mov
out
push
icebp
inc
stos
enter
jmp
cltd
sarb
push
cmp
outsb
sbb
adc
cli
mov
mov
divl
jecxz
push
mov
or
or
dec
push
idiv
aam
std
pusha
sbb
ret
or
mov
fadds
fwait
scas
sbb
jg
inc
ljmp
xchg
adc
push
cmp
pop
test
popa
cmc
mov
xchg
jnp
xlat
jbe
inc
addr16
fsubr
mov
pop
adc
jno
int
sbb
in
pop
push
adc
jle
cmp
int3
fnstcw
icebp
pop
lock
fsubrl
lods
push
shll
nop
test
test
cmpsl
push
insl
cld
adc
jp
pushf
les
lea
or
and
lods
jo
das
scas
jae
pop
mov
inc
sar
mov
loop
fisttps
loop
loope
inc
shr
iret
add
xor
lcall
test
iret
imul
divb
data16
and
mov
leave
or
xchg
mov
arpl
leave
xorb
inc
cwtl
mov
xchg
push
cmp
xchg
mov
push
xor
fldcw
test
jo
aas
xor
clc
inc
jge
aad
popa
inc
xchg
mov
xchg
ljmp
or
mov
aas
dec
sti
jle
imulb
ja
mov
int3
mov
sub
xchg
push
cmp
mov
dec
lret
call
adcb
es
fwait
iret
jb
sub
shl
mov
and
mov
pop
push
jo
jns,pt
dec
sub
divl
and
mov
or
mov
mov
lret
outsb
pop
jecxz
pop
dec
sti
into
dec
cmp
pop
cmp
lea
inc
or
lods
mov
dec
jb
loop
xor
daa
inc
xchg
dec
lcall
add
mov
push
aad
notl
adc
lods
mov
ljmp
ljmp
mov
aaa
stc
dec
mov
gs
bound
jns
sbb
fdivrl
insl
outsb
test
lahf
jbe,pn
dec
pop
jl
mov
lret
lock
nopl
iret
mov
jae
lret
notl
xor
fwait
repnz
ret
mov
rolb
add
test
or
cmc
inc
cli
bound
adc
in
adc
pusha
movq
call
ficoml
sub
bound
add
pop
mov
pusha
ljmp
jmp
leave
inc
call
lahf
mov
jo
call
mov
push
addr16
cmpsb
ret
push
or
dec
pop
adc
insb
inc
adcl
fxch
or
call
cmp
lahf
cld
sbb
popf
lods
push
cmp
fbld
mov
leave
jp
mov
pop
out
shrl
fsubp
dec
mov
push
jno
repnz
ja
lods
insb
aad
jns
ret
xor
ror
sbb
cwtl
jae
aaa
and
icebp
std
jecxz
fsubl
sbb
inc
stos
xor
mov
bound
cli
mov
jl
push
inc
cwtl
sahf
adc
or
insb
aaa
popf
gs
sub
cmpsl
sub
lods
fsubs
pop
or
pop
jbe
sub
mov
mov
je
in
mov
aam
sub
mov
xor
push
fs
outsb
sarl
call
mov
ret
cli
mov
shll
aad
loopne
aad
or
add
clc
loopne
enter
popa
xor
pusha
jbe
sti
inc
test
testb
mov
cmp
mulb
fstpl
les
mov
mov
xor
mov
js
cmp
and
cmpsb
stos
scas
lods
cltd
int3
xor
xor
movsb
andb
add
mov
test
test
sub
cmp
xchg
scas
icebp
xor
stos
imul
xchg
and
mov
sbb
fiaddl
or
xlat
fucomp
aad
xor
mov
stos
shlb
xchg
sarl
sub
xchg
adc
adc
cmp
push
or
xlat
sarb
in
repz
inc
sahf
fs
xchg
lahf
cmp
lds
lods
aaa
xor
mov
mov
filds
les
jge
stc
pop
jae
addr16
pop
and
bound
loop
xchg
push
mov
jge
sbb
mov
iret
jne
push
dec
pop
insl
xor
or
sbb
lcall
dec
adc
subb
jg
xchg
adc
js
pop
lahf
and
loope
push
shlb
sub
inc
cmp
mov
jle
push
cs
pop
pop
icebp
add
push
adc
pop
je
pop
mov
mov
into
cmp
in
xchg
mov
jo
sub
or
or
cltd
data16
sbb
pcmpeqd
sub
int
leave
and
sbb
or
mov
add
and
cwtl
sub
or
pushf
xchg
cmp
inc
jb
loope
test
lds
cmp
scas
adc
jns
adc
adc
ret
and
movsl
mov
aad
aaa
popa
insl
lods
xchg
je
dec
push
mull
aad
lea
ss
stos
andl
lock
pop
xor
mov
jp
xor
mov
sbb
mov
add
dec
adc
cld
rolb
lret
sbb
adcb
and
push
aam
fildl
cmpsl
sbb
and
movsb
test
bnd
mov
mov
mov
sbb
cmp
dec
frstor
clc
ret
jg
ret
sbb
push
sub
jnp
dec
sub
out
or
in
mov
rclb
jns
mov
dec
dec
call
lods
sbb
or
call
into
lcall
pop
cld
jle
aaa
paddusb
push
or
sahf
and
push
inc
enter
stos
in
pop
push
lock
aam
sub
sub
xor
lea
pusha
nop
jp
movsb
sub
inc
fsub
iret
pop
cmp
cs
scas
ja
nop
xchg
push
inc
jg
pusha
push
and
cmpsl
push
inc
test
push
push
scas
or
sbbl
mov
mov
movsl
scas
inc
push
mov
movsl
sarl
mov
mov
das
lcall
mov
pop
jo
cli
aad
test
jecxz
pop
shll
pusha
mov
xchg
cmp
mov
aam
aaa
jp
fs
xor
jge
push
xor
addr16
lcall
lahf
je
data16
lahf
or
xor
pop
jg
dec
add
jne
dec
fcmovb
lock
sbb
call
push
ss
xor
mov
or
sbbb
loope
shrl
jbe
lret
mov
or
lret
xor
jae
mov
mov
adc
xor
xchg
orb
icebp
adc
sub
mov
xchg
repnz
cmp
imulb
xchg
xor
mov
shrb
or
xchg
inc
lock
adcl
shl
cmc
sub
sti
loope
xchg
pop
lea
add
push
rclb
dec
cmp
pushf
push
lds
dec
inc
xlat
addb
clc
call
push
push
add
bnd
imul
xchg
and
xor
jmp
and
test
in
add
mov
ss
stos
xchg
js
in
xchg
arpl
out
pop
loopne
iret
outsb
not
push
in
cwtl
fiadds
inc
cmpsl
jb
test
and
or
mov
jle
ret
xchg
inc
mov
in
jns
lret
lret
enter
sbb
jl,pn
movsb
gs
insl
fwait
jnp
mov
and
xor
jns
xchg
addr16
push
fcoms
xorl
inc
xchg
push
leave
adc
cmc
ss
js
in
cli
pusha
pop
cmpsl
out
and
sbb
pop
into
sbb
dec
inc
or
mov
and
inc
and
mov
push
or
gs
out
or
add
mull
and
sub
xor
and
aam
xor
cmp
iret
pop
add
sbb
xchg
addr16
or
nop
lods
lods
lea
je
data16
dec
and
sub
lods
xchg
popf
pop
shll
int
mov
shll
jno
add
out
sbb
lcall
ret
pop
xchg
jle
inc
adc
sqrtps
mov
cmpsb
imulb
ja
mov
fcomp
and
outsl
jmp
pop
sub
and
mov
arpl
ds
push
jmp
call
aaa
stos
inc
int
sbb
fwait
jae
pop
inc
and
popf
jno
inc
mov
add
stc
enter
fwait
cld
xchg
add
sahf
enter
or
xor
test
add
std
dec
das
mov
pop
je
and
lds
das
lahf
mov
mov
jg
scas
inc
add
fstl
aas
rcl
xchg
mov
out
pop
jge
fucom
xchg
stos
xor
nop
pop
mov
fisubrl
outsb
in
in
ret
add
cs
ljmp
fnstsw
or
int3
lcall
test
stos
xchg
xor
sbb
xlat
inc
lds
dec
pop
mov
and
iret
jp
cli
stos
mov
jne
out
jnp
mov
dec
xchg
pop
test
in
aam
jmp
or
repz
rcll
fbld
pop
push
xor
inc
or
lods
in
cmpsb
outsb
dec
scas
sahf
xchg
sbb
iret
jle
inc
pop
sahf
mov
repnz
call
lcall
and
pop
outsb
xor
inc
jno
ret
inc
mov
js
mov
mov
mov
pop
adc
dec
int
mov
movsl
fcomps
inc
stc
or
sbb
loope
rorb
js
cmp
xchg
sub
mov
add
xchg
add
sahf
int3
sbb
mov
xchg
ret
int
sahf
orb
jle,pn
movsb
mov
repnz
or
add
and
in
sub
fisttpl
sbb
pop
aam
dec
movsb
mov
push
cld
pop
dec
xchg
xor
jge
mov
jp
out
lea
cli
dec
push
pop
inc
and
data16
lret
daa
imulb
adc
jle
addb
jecxz
aas
cwtl
add
pop
insb
ljmp
sarl
jmp
test
xchg
loop
jbe
jnp
fnstenv
push
and
clc
out
adc
push
scas
inc
and
out
jmp
pop
rolb
sbb
imul
dec
jb
jne
inc
pop
cwtl
fstp
rolb
push
rcll
ret
cmp
xor
mov
mov
inc
popf
gs
insl
inc
mov
lds
mov
bnd
sbb
in
shll
rcr
shlb
jmp
std
inc
into
test
jo
cmp
jbe
cmp
pop
enter
pop
in
fldl
adc
inc
fstpl
mov
dec
fcmove
lock
push
mov
shll
and
stos
or
hlt
loop
add
adc
mov
std
or
push
scas
insl
push
xchg
cmp
imull
push
pushf
and
cmp
mov
xchg
xchg
pop
in
lods
out
outsl
and
dec
xchg
jle
mov
and
inc
sub
add
stos
push
movsb
mov
cs
cmp
inc
pop
sub
or
mov
sahf
ficoml
lock
out
pop
int
into
add
mov
out
sbb
or
dec
jp
fs
jmp
lea
inc
lahf
dec
push
pop
adc
jo
xchg
incl
pop
in
add
in
js
push
into
aaa
idivb
or
loopne
lcall
inc
cmp
fcmovnbe
insb
jmp
cmp
sbb
test
lahf
add
fucom
iret
jbe
jns
test
jecxz
push
out
xor
adc
out
mov
mov
loop
sub
cmp
lods
adc
lret
mov
cs
fistpl
and
sub
movsb
aam
push
stos
push
lods
sub
adc
popa
sub
sar
jnp
out
dec
and
data16
lahf
dec
and
xor
je
mov
ret
fs
lods
dec
imul
loope
into
adc
bound
cwtl
mov
xor
inc
jae
mov
mov
mov
stos
loopne
push
fsts
xor
rcrb
inc
mov
pop
das
cs
sti
je
xchg
jg
lods
and
stos
aam
popf
cmp
push
call
lret
nop
dec
in
push
push
adc
push
out
ret
orb
sub
jb
push
and
pop
mov
ret
xor
xchg
jbe
inc
rcll
jg
fmul
xor
cmpsb
jg
enter
out
gs
or
shrl
or
push
push
sahf
sbb
push
sub
shll
jno
and
fsubrs
adc
sbb
int3
mov
mov
sbb
push
mov
jb
mov
mov
pop
mov
mov
fstpl
inc
gs
ja
cmpb
mov
push
mov
jne
mov
xchg
cmp
mov
adc
stos
stc
icebp
cltd
inc
jmp
fdiv
pop
add
sbb
or
push
idivl
or
sub
xor
cmpsb
jne
adcl
mov
or
xchg
push
push
cs
and
ss
test
dec
xor
xchg
mov
bswap
jbe
inc
scas
mov
fcoml
or
sarl
jns
stos
jo
adc
popa
pop
adc
sti
shl
push
sub
and
sub
add
pop
sbb
xor
adc
xor
jno
sub
push
dec
jne
in
push
xchg
rorb
stc
push
xlat
lods
push
xchg
out
cmpsl
push
or
jge
loop
sub
mov
inc
pop
inc
pop
push
in
or
roll
jmp
lret
inc
mov
imulb
test
in
mov
sub
xchg
cmp
pusha
lea
cmp
and
pop
imul
das
jmp
xor
jnp
lds
mov
xchg
popf
paddsw
sbbl
cmpsl
jnp
repnz
enter
push
inc
jmp
testl
sub
adc
les
jg
test
xor
xchg
leave
imul
aad
or
shrb
or
push
pop
inc
adc
scas
pop
loope
mov
xchg
inc
popf
popf
clc
push
call
je
mov
sbbb
mov
add
mov
pop
push
xchg
test
cmp
push
xchg
testl
enter
mov
adc
out
pop
cmp
push
mov
add
aam
push
aam
ficoml
cld
jbe
xor
push
jns
sbb
add
mov
push
cmpsl
ret
rclb
push
inc
std
jbe
hlt
dec
mov
jp
imul
lea
nop
lret
mov
in
lret
jne
in
fisubl
xchg
popf
popa
loope
or
fcmovne
mov
arpl
mov
push
lods
out
sub
and
pop
mov
mov
test
adc
push
mov
jmp
fldl
mov
dec
shlb
not
dec
imul
mov
inc
push
mov
mov
mov
and
jl
inc
fs
sub
icebp
and
fiadds
das
popf
out
lods
in
subl
mov
add
and
jecxz
sbb
jmp
mov
mov
pop
add
cli
test
daa
push
inc
fmul
mov
xchg
sbb
dec
in
cmp
fnstenv
mov
testl
out
push
xorl
fiadds
repnz
cmc
mov
test
fadds
xor
sbb
rcrl
dec
rcr
stos
popf
push
xlat
jnp
gs
imul
sahf
push
clc
pop
std
push
xchg
push
in
inc
or
ja
movsb
fsts
and
lcall
pop
repnz
jbe
pusha
cmp
jbe
rcll
insl
jg
dec
cmpsl
xchg
fwait
mov
adc
and
dec
mov
lds
cmpps
shll
dec
mov
or
int
or
ret
jle
jns
cmp
pop
jmp
adc
jp
cmc
fnstsw
pop
shll
mov
call
mov
outsl
lcall
mov
xchg
sub
pop
loopne
and
sub
mov
and
arpl
cmp
jl
mov
out
push
sbb
daa
cwtl
dec
loopne
jae
sbbb
ret
cmp
sbb
add
aad
arpl
mov
lret
cmp
mov
nop
push
lock
push
sar
and
push
lahf
xchg
sub
adc
jae
xchg
mov
data16
inc
ljmp
test
dec
sbb
pop
mov
lret
aaa
or
out
mov
out
pop
fdivrl
ss
mov
lret
ret
mov
lahf
daa
cmp
add
and
sarb
xchg
sub
jecxz
test
cmp
push
inc
xor
insb
or
or
sbb
jo
js
push
xor
mov
mov
mov
fidivrs
add
mov
or
pop
jg
cmc
fldenv
xchg
and
fstps
adc
stos
pusha
mov
test
push
push
int3
fstpt
mov
pop
movsb
jp
in
addr16
je
sub
lret
push
mov
mov
into
sbb
xchg
mov
dec
pop
fs
mov
fwait
aad
xchg
repz
ss
push
push
cwtl
add
adc
fmul
and
xor
and
dec
and
xor
xor
cmp
nop
add
dec
popl
xchg
mov
mov
mov
mov
lods
sub
lcall
popf
inc
adcl
adc
adcl
test
arpl
xor
dec
and
cmp
lods
and
nop
lea
or
and
cs
inc
ret
pop
fmull
test
inc
int3
or
push
cmc
nop
mov
jmp
push
mov
xor
xor
test
jbe
scas
and
push
dec
pop
mov
push
jl
jnp
enter
mov
sbb
fisubrs
das
in
xchg
lds
mov
test
fildll
or
pop
jle
lea
dec
into
prefetch
or
fs
inc
test
aaa
scas
or
jae
inc
jmp
mov
fs
lret
pop
sbb
in
xchg
gs
and
aad
jg
adc
push
add
pop
cs
or
pop
test
cmp
pop
xlat
or
arpl
sbb
bound
stc
ror
add
mov
pop
push
or
jecxz
push
outsl
sub
shr
into
sahf
pop
mov
nop
xor
in
ds
xorb
movsl
pop
and
iret
add
popl
mov
adcb
fscale
in
add
outsb
adc
fidivl
push
adc
fcompl
xlat
testl
push
mov
pop
cmpb
movsl
add
inc
and
dec
repnz
aas
jmp
in
lods
push
mov
fists
or
stc
sub
xchg
add
or
fnstenv
inc
fs
ret
or
aas
push
inc
idivl
xchg
arpl
add
or
jmp
das
mov
ds
mov
cmp
nop
cmp
jno
loope
push
lods
mov
pop
repz
into
adc
sub
je
aad
mov
ret
fistpl
out
sub
mov
dec
jne
aas
adc
inc
ret
in
fs
jae
mov
and
lock
jge
mov
lea
clc
push
add
fildll
mov
sub
dec
scas
sbb
or
or
mov
movsl
sub
dec
xor
cld
fcomps
pop
mov
scas
dec
test
sbb
sbb
mov
movq
push
cwtl
stc
lock
gs
sub
mov
mov
inc
ret
mov
pop
scas
inc
insl
icebp
scas
mov
inc
repnz
mov
in
xorl
movsl
movsl
fmulp
in
xchg
das
xor
xchg
orl
xor
add
test
rclb
cmpsb
xchg
dec
sbb
out
fcmove
cmp
cld
loope
pop
jo
sub
cs
or
fimuls
adcl
sbb
mov
xchg
inc
xchg
push
and
xchg
leave
xchg
outsb
shll
push
lcall
mov
call
xor
inc
cmp
xor
cmp
xchg
adc
mov
cmp
cltd
es
mov
jo
insb
pop
sbb
dec
inc
inc
je
sbb
mov
cmp
add
loopne
mov
jne
inc
ljmp
pop
jg
enter
fcompl
mov
dec
ja
ljmp
jl
cmc
enter
inc
jb
leave
icebp
stc
push
or
sub
fld
sahf
lods
adc
fsubrs
jns
out
mov
xchg
push
adcl
loopne
push
adc
je
add
shr
cmp
insb
pop
stc
sbb
add
jl
dec
ret
push
iret
fstpt
sub
cmpsb
aaa
mov
cmp
idiv
dec
addr16
sarb
mov
sub
ret
xchg
jbe
jmp
ror
enter
out
insl
in
mov
nop
mov
pop
lds
mov
test
aaa
add
fnsave
mov
call
add
lret
pop
outsl
xchg
xor
pop
lahf
pushf
clc
cmpb
sbb
pop
adc
test
daa
cmp
mulb
test
scas
sbb
nop
call
into
mov
inc
pop
lods
cltd
push
push
fstpt
cmp
mov
dec
sub
inc
ljmp
repnz
pop
or
rol
sub
xchg
dec
mov
test
cld
ja
ja
push
sub
inc
xchg
mov
je
cmp
icebp
outsb
mov
jmp
pop
adc
and
pushf
dec
jecxz
sub
inc
mov
mov
cli
inc
rcr
or
and
adc
xor
push
or
in
adcl
flds
inc
mov
adc
jns
sbb
sbb
mov
andb
and
sbb
inc
unpcklps
push
cmp
xchg
mov
ret
testb
cmp
negb
mov
mov
fisttpll
imul
sbb
sbb
fwait
pop
lahf
push
addb
repz
mov
jp
dec
movsb
shlb
test
jns
sbb
loop
xchg
pop
dec
adcb
mov
out
mov
call
adc
imul
adc
xchg
xor
sub
loope
xor
inc
cmpsb
mov
push
sub
mov
mov
mov
jp
add
push
imul
sysret
mov
push
adc
xlat
mov
sub
cld
or
imul
cli
shll
sbb
out
mov
shrb
pop
outsl
cld
mov
add
cmp
push
sub
int
je
dec
int3
sub
sub
jecxz
push
les
pop
imul
adc
inc
sbb
and
cmp
sbb
test
inc
dec
data16
mov
sub
into
add
je
scas
sub
xchg
fcomi
or
xor
lock
stos
test
adc
subl
pop
fdiv
pop
loop
inc
aas
jns
push
push
outsl
xlat
test
fidivl
add
cld
test
in
loop
fwait
sbb
jne
int3
int3
notl
inc
mov
int
mov
inc
and
cli
mov
pop
inc
xchg
inc
iret
insl
xor
dec
ljmp
notl
or
cmp
mov
xchg
jmp
arpl
mov
es
inc
jb
fcomip
mov
push
xchg
push
jle
push
sti
cmp
push
xchg
jo
pop
loope
mov
out
mov
fwait
mov
or
jmp
cmp
fcomps
mov
xor
stc
pmulhuw
fwait
xor
and
or
jg
pop
int
add
shr
pop
les
rcrb
fisttpll
jne
cmp
mov
xchg
popa
xchg
cmpb
test
sahf
sets
jp
xrelease
mov
cmp
ret
mov
mov
and
imul
outsb
mov
fwait
mov
inc
cli
aad
push
cmp
xchg
jno
mov
jmp
push
and
fstl
sub
mov
in
pop
dec
into
and
sbb
jle
gs
dec
dec
loop
xor
into
sub
jge
push
test
inc
ds
push
add
mov
cs
int
and
daa
insb
mov
popl
ret
out
xor
and
inc
nop
or
andps
mov
dec
mov
jae
mov
push
pushf
jns
rcrb
push
push
sub
fwait
add
cld
dec
jae
mov
shl
shll
mov
add
lret
lahf
and
mov
push
cmpsb
sti
dec
mov
jle
dec
jnp
xor
push
and
icebp
xchg
aaa
dec
cli
jmp
test
xor
in
sahf
xchg
lea
loop
mov
mov
pop
xor
mov
sbb
cmp
and
call
xchg
sbb
pop
ror
movsb
mov
fiadds
mov
push
in
sub
push
mov
dec
push
ljmp
dec
lret
popa
in
aas
add
jmp
gs
dec
rol
xchg
mov
xor
jmp
in
mov
and
sub
shrl
movsl
pop
xlat
jae
sub
imul
pushf
popf
add
loopne
flds
sub
jbe
mov
mov
lret
push
dec
sbb
mov
and
xor
pop
icebp
cmp
cltd
and
push
sar
paddb
jle
fistps
sub
push
pop
adc
daa
mov
xor
sub
jo
dec
push
imul
dec
lods
add
loop
lret
jns
xchg
int
lret
push
popa
pop
stc
mov
ds
jne
sbb
rolb
clc
xchg
cwtl
jo
imul
inc
xor
add
fisttps
fwait
out
jle
call
lods
jo
sub
call
pusha
xchg
cmp
push
push
dec
pop
add
and
mov
mov
cmp
clc
stc
insl
aam
inc
divb
ja
pop
jae
outsb
into
pop
popa
in
push
mov
xorl
mov
inc
out
outsl
inc
movsb
and
pop
andl
sbb
lods
bound
popa
xchg
mov
mov
jno
movsb
rclb
or
clc
mov
js
cld
lods
in
dec
lock
and
push
and
xchg
cmpl
push
jb
lret
cmp
mov
fsubl
mov
rorl
fmuls
cmpsl
movsb
cmpb
adc
sahf
ja
dec
int
lcall
pop
out
js
fs
jns
adc
jbe
sbb
xchg
add
mov
mov
int
cmp
and
outsb
int3
xchg
rorl
fxch
jns
rdpmc
dec
ds
movsb
jle
hlt
fs
push
pop
pop
add
stos
cmp
xchg
loopne
mov
loop
mov
add
sahf
sbb
mov
mov
nop
mov
rcll
xor
dec
push
jnp
aaa
lret
dec
push
dec
sbb
cs
pop
mov
cmpsb
push
jg
dec
aam
adc
cwtl
popf
mov
test
movsb
arpl
in
movb
mov
enter
inc
andl
repnz
je
shll
dec
sub
pop
mov
fnsave
mov
jp
inc
test
sub
mov
loop
cwtl
jne
mov
pusha
adc
mov
cmc
jo
stc
jo
sbb
sti
and
lods
jp
lahf
jl
jo
inc
push
fstpl
mov
add
dec
xchg
and
lret
xchg
push
sbb
xorb
and
shrb
lock
pushf
sub
sbb
shrl
xchg
ss
insb
lcall
mov
pop
or
and
inc
sub
jnp
xchg
push
inc
dec
cmpb
pop
cmp
imul
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
test
mov
mov
or
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
