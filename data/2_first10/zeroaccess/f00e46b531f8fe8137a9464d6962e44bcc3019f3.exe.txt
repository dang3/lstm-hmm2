push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
mov
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
pop
push
fucomi
popa
mov
jg
cmp
ss
enter
mov
cmpsb
rorl
mov
sbb
jae
jecxz
mov
ss
mov
or
push
push
mov
loop
push
push
ffreep
stos
rorl
cmp
push
in
xor
and
int
insb
sub
jno
or
lret
cmp
stos
adc
out
sbb
sarl
aad
test
stc
aam
ret
out
jo
sub
inc
mov
int
mov
rclb
or
jge
cmp
out
cmc
mov
gs
enter
mov
loope
loopne
lahf
movsb
xlat
mov
stos
cmc
mov
ret
push
mov
bound
and
es
mov
jg
push
ljmp
lods
dec
or
mov
or
inc
lods
xor
into
fstps
aas
sbb
xchg
pop
inc
jo
addb
add
rcrb
pop
ja
stos
mov
aam
pop
cmp
in
jne
push
push
test
jl
addr16
adc
push
jo
jno
jnp
mov
ja
inc
cs
pop
sub
test
xchg
dec
sbb
add
outsb
xor
stos
aam
mov
fadd
push
pop
or
fidivrl
repnz
adc
sub
or
jae
xchg
hlt
inc
dec
inc
out
sub
xor
test
pop
sbb
and
ss
call
arpl
adcb
call
jno
movsb
jnp
dec
into
nop
inc
and
nop
add
sti
inc
adc
sub
dec
jo
test
mov
repnz
ljmp
adc
repz
or
das
in
or
ss
jno
dec
jmp
insb
cmpl
dec
mov
out
fisubrl
mov
push
ror
jle
cmpl
lcall
jns
jbe
daa
sbb
pop
ret
add
and
push
addb
lcall
lock
jecxz
xor
stos
outsl
sub
mov
adc
jno
pop
adcb
in
adc
cmp
xor
pop
fdivr
negl
cmpsb
imull
push
mov
je
jmp
cs
in
cmp
ss
popf
mov
mov
adc
scas
das
inc
jecxz
es
pop
add
addr16
sbb
movsb
arpl
mov
mov
iret
xchg
shlb
lea
jmp
insb
sbb
lret
mov
push
mov
scas
sahf
or
into
nop
rcll
mov
dec
stc
imul
jecxz
ljmp
stos
cmp
mov
mov
mov
imul
jle
sub
shlb
ljmp
xor
cmp
fsubl
fiaddl
mov
ja
ds
mov
mov
add
jnp
dec
mov
xor
loopne
inc
mov
outsb
pop
sahf
cmp
icebp
in
test
daa
dec
outsb
sub
sahf
and
scas
add
dec
xchg
cmc
xchg
sbb
mov
imul
dec
aaa
xorl
sarb
lock
repnz
push
push
jb
mov
in
stc
mov
add
xor
dec
cmp
pop
dec
fs
leave
jo
xchg
lea
inc
into
dec
add
ret
sub
jbe
jmp
jnp
xchg
mov
fsubp
cmpsl
gs
gs
aas
jecxz
lods
and
mov
dec
sbbl
xor
cwtl
movsb
jecxz
push
mov
pusha
dec
decl
sbb
pop
bound
jno
and
loop
loopne
dec
pushf
fisubrs
test
or
test
popa
and
jo
jp
sub
pushf
jg
inc
sub
jmp
fdiv
push
inc
mov
aad
adc
inc
mov
lret
aad
dec
pabsw
movsl
inc
jae
push
rorl
dec
ljmp
xchg
ror
pop
shrb
fisubs
xor
jl
mov
cmp
in
cmpsl
mov
inc
adc
mov
bound
adc
mov
sub
mov
out
mov
push
scas
and
dec
out
insl
add
mov
inc
aad
add
or
mov
fwait
lret
jp
dec
push
push
push
in
stc
fildl
jle
pop
subl
adc
popa
xor
jmp
xor
rclb
out
push
loopne
movsb
repnz
js
test
out
add
jecxz
push
fcmove
shrb
cs
loop
lret
fsubl
cltd
aad
imul
out
fnstcw
sub
inc
and
ret
pop
lods
xchg
repnz
mov
pop
lea
push
fnsetpm(287
sbbl
notb
inc
movsb
add
nop
rclb
pop
dec
scas
mov
push
mov
or
fs
mov
jo
adcb
mov
jecxz,pn
pop
mov
cmp
fcmovne
cmp
mov
pop
dec
ja
pushf
mov
scas
push
xor
and
push
jns
push
fmull
sub
pop
add
sub
inc
pop
daa
jl
out
mov
popa
cmc
mov
inc
sbb
jae
lods
fisubrl
das
in
push
arpl
dec
sahf
scas
sub
pop
imul
xchg
jp
mov
or
cmp
cltd
rcl
xchg
sbb
jg
outsl
iret
cmpsb
push
nop
jg
xchg
push
add
aas
outsl
add
jne
fstpt
sbb
push
jmp
loopne
in
popf
or
mov
pusha
lahf
fadd
imul
xchg
lret
cmp
aas
dec
inc
cmp
popa
insl
testb
orl
cmc
addb
xlat
push
mov
jb
xchg
repz
test
or
sub
out
xor
test
pop
and
or
and
rclb
pop
sub
les
xchg
rcrb
cwtl
outsb
out
cmp
fsubrs
icebp
xlat
push
shl
aad
ja
mov
test
pop
popf
xlat
loope
xchg
xor
adc
mov
les
ljmp
scas
shr
nop
dec
lods
iret
mov
jo
cld
and
inc
push
cmp
stc
dec
stc
dec
lock
sahf
icebp
cmp
stos
xchg
test
sbb
mov
sub
loop
sbbl
mov
cmp
add
or
pop
iret
xchg
enter
addr16
and
fnstsw
pop
js
mov
mov
jo
mov
in
adc
push
sub
aad
fdivs
adc
and
dec
mov
addr16
out
sbb
push
cmc
jnp
adc
jp
movsb
pop
cltd
fldenv
sbb
mov
jp
sub
sahf
add
and
mov
je
movl
cld
shll
push
lds
leave
xor
pop
mov
test
fsubl
je
outsl
push
adcl
or
loop
rol
ljmp
and
adc
insb
pop
cli
movsb
out
in
icebp
stos
push
movsl
xor
and
mov
and
inc
sahf
mov
jno
cmc
jae
ljmp
adc
mov
sub
cmp
je
sub
div
pop
lock
mov
inc
addr16
lods
push
shll
and
fnstenv
inc
cmp
xchg
sbb
adc
cltd
add
clc
mov
outsl
repz
push
movsl
lods
ja
add
lock
xchg
jp
leave
push
inc
jle
mov
movl
outsl
std
pop
pop
int
xchg
ret
out
sub
xor
sbb
insb
psubb
arpl
cmpsl
mov
and
push
xlat
test
call
fidivs
stc
sbb
push
xchg
int
mov
xlat
xchg
sarl
push
je
jns
sahf
lcall
in
mov
pop
imul
into
hlt
cmp
std
xchg
into
lahf
adc
jl
mov
push
pop
jg
movq
jge
push
add
outsl
pop
fwait
mov
mov
int3
and
mov
and
sarl
popf
cmp
addr16
sub
mov
mov
flds
push
cmp
das
cld
addr16
pop
push
inc
das
rorl
ret
or
fmulp
fsubs
popa
test
xchg
mov
daa
pop
dec
mov
jecxz
into
enter
mov
popf
jbe
xchg
mov
loopne
mov
pop
sbb
push
sbb
xchg
push
sbb
shrl
push
push
sbb
inc
dec
xchg
xor
mov
xor
lret
lds
in
mov
cwtl
andl
icebp
cmp
mov
mov
fcmovu
sbb
inc
jmp
xlat
sbb
jl
pop
xchg
int3
sbb
jns
cmpsb
or
xchg
mov
nop
fadds
cmpsb
fistl
xcrypt-ctr
cmpsl
fsts
xchg
pop
cld
mov
cmp
sub
jno
lods
jp
aam
sbb
mov
xchg
les
and
mov
fcomps
adc
push
or
mov
in
cmpsb
arpl
inc
xlat
and
mov
rcrb
outsb
insb
hlt
icebp
sbb
sbb
mov
dec
and
mov
pop
add
mov
and
dec
aam
xchg
fidivrs
ds
int3
mov
and
push
push
cmp
xchg
xchg
and
or
popf
rorb
lock
into
lods
out
fs
movsb
daa
into
adc
iret
jo
fistpll
mov
dec
add
ds
scas
cli
mov
bound
dec
jnp
pop
mov
js
add
cltd
and
xor
shlb
leave
test
and
ljmp
repnz
xor
jne
adc
sahf
aam
sub
add
adc
xor
jecxz
mov
mov
cmp
nop
shl
out
daa
ficoml
ds
lods
xchg
inc
pop
scas
popf
fsubp
mov
jp
popa
xchg
cmp
pop
sub
add
outsb
rcrb
ja
xchg
inc
mov
xchg
push
cmc
cmp
xchg
xchg
adc
mov
jg
sahf
jge
clc
std
mov
cli
push
mov
int3
cmpsl
adc
ljmp
aaa
pusha
popaw
cs
jg
add
shlb
cmp
push
call
mov
out
pop
rcrb
xchg
imul
shl
pop
mov
or
scas
out
pop
jg
xrelease
into
mov
mov
nop
ret
andb
fdivrl
shl
mov
adc
mov
or
dec
aam
xlat
push
test
jo
jl
jbe
lret
das
test
mov
out
daa
sbb
mov
fstpl
dec
sub
ret
and
rcr
ret
jle
imul
mov
cmp
push
fwait
sub
sbb
sub
bound
repnz
les
sub
in
subl
or
push
ret
clc
xchg
or
outsb
lods
xchg
fs
mov
ss
aas
hlt
ret
sbb
push
mov
push
inc
lods
sbb
jl
mov
sub
inc
xchg
fadd
mov
xchg
mov
jns
addr16
fadd
and
std
mov
lods
sarb
ss
inc
xchg
fcmovu
mov
std
adc
lods
xor
cmc
xlat
inc
mov
stos
sahf
sbb
push
add
mov
cltd
add
int3
sbb
adc
jo
jp
push
leave
mov
ret
data16
inc
ss
mov
insb
sbb
in
rcr
mov
leave
inc
sub
inc
out
adc
arpl
mov
xchg
cld
jns
or
out
sub
popa
mov
dec
and
sub
adc
pop
into
lret
popa
pop
dec
push
pop
repz
or
push
dec
into
loop
in
push
cmp
dec
insl
das
fwait
loopne
mov
inc
inc
xor
add
xor
cltd
inc
push
dec
push
test
stos
push
js
fs
sti
out
cmp
aas
add
shll
repnz
jb
or
cld
into
mov
dec
xchg
pushf
xchg
int
dec
sub
jae
mov
pop
push
je
je
xor
gs
or
loopne
xor
mov
orl
adc
scas
sub
mov
dec
mov
repz
stos
push
mov
adc
lock
pop
push
mov
clc
loope
mov
dec
jno
mov
ret
fcomps
mulb
shrb
mov
inc
xor
outsl
hlt
out
xor
inc
call
jno
inc
rorl
clc
or
insb
call
dec
jnp
movsb
out
mov
les
hlt
test
fistl
imul
push
push
shlb
dec
xchg
lret
cmp
or
add
outsb
lret
sbb
mov
adc
loope
fmulp
sbb
jle
mov
jg
and
mov
xchg
gs
inc
stc
mov
xchg
mov
or
xor
jb
lock
cwtl
jae
sub
dec
xor
or
test
sub
dec
pop
mov
ret
pop
addr16
js
lret
add
push
mov
data16
fwait
jp
iret
cli
mov
mov
xchg
adc
jmp
cwtl
rorl
aad
inc
in
adc
mov
jle
call
rcrb
arpl
mov
lcall
cs
mov
jle
inc
push
out
pop
lods
data16
fnsave
imul
xor
mov
sbb
movsl
or
in
push
xlat
mov
push
lods
dec
and
cwtl
loopne
sub
les
mov
jo
insl
mov
cmpsl
mov
jge
push
idivb
and
int3
adc
int3
repnz
xor
xchg
mov
aam
out
in
xchg
in
adc
nop
repnz
pop
iret
out
pop
ret
lods
push
test
fmuls
int
inc
xchg
fs
or
rcll
jb
adc
adc
loop
sbb
cmpb
xchg
or
lds
mov
cli
dec
sti
xor
sbb
ret
gs
cmpsl
jno
push
int
out
int3
loopne
push
repz
add
and
inc
mov
lds
lock
jmp
sbb
sub
xchg
shll
popf
andl
push
push
outsl
sbbl
ljmp
std
xchg
pop
movsl
xor
popf
idivb
xor
jl
fwait
std
test
inc
std
imul
test
in
aaa
clc
adc
bound
cmp
mov
stc
mov
mov
movsl
jle
xlat
clc
push
fs
int3
cmp
int
repnz
int3
pusha
mov
pop
lcall
cwtl
xor
jb
loope
or
je
negl
inc
mov
mov
push
inc
hlt
lods
lret
push
or
jb
repz
lock
fsub
mov
xor
lea
xchg
loope
xchg
or
push
pop
in
push
mov
xchg
test
in
fldz
pop
mov
gs
pushf
into
leave
shlb
jl,pt
fsubs
dec
push
scas
cwtl
push
adc
fadds
jl
clc
mov
into
inc
stos
test
inc
sbb
ljmp
rcrl
pop
jp
lret
in
test
rol
nop
mov
imul
test
fsubrl
add
data16
pop
fiadds
push
in
sbb
pop
in
lock
mov
inc
stos
xor
inc
unpcklps
xor
ret
push
push
mov
sahf
sub
ja
aam
push
xchg
ror
pop
mov
mov
imul
push
xchg
lret
frstor
scas
test
aad
fdivp
push
cmpsl
push
dec
sbb
mov
mov
imul
jne
loopne
adc
lcall
cmp
mov
popf
and
xchg
out
imul
loope
stos
sbb
push
xchg
add
scas
mov
pop
xchg
loopne
mov
dec
cld
mov
sbb
out
dec
nop
es
out
add
mov
jp
ja
rcl
mov
push
pop
arpl
pushf
and
add
mov
cmp
ja
xor
mov
push
out
in
mulb
push
aam
xchg
sbb
pop
fstpl
adc
cwtl
xor
aaa
inc
adc
scas
adc
jge
pop
out
imull
mov
or
xor
mov
push
mov
and
and
pop
and
repnz
jnp
test
shll
or
ret
push
jb
icebp
xchg
test
adc
pop
and
xchg
jg
pop
lock
xor
push
mov
test
inc
fidivs
or
test
and
idivb
mov
xor
sub
inc
or
gs
sub
aad
test
mov
ss
sbb
mov
sar
mov
and
push
subb
mov
int
movsb
push
lret
ds
mov
xor
push
outsl
push
xchg
and
xor
out
in
cmp
lret
pop
sahf
jbe
sti
lahf
mov
push
aaa
inc
jbe
mov
mov
push
adcb
orl
enter
iret
inc
or
repnz
nop
popa
or
adc
sub
mov
repz
add
mov
sti
sbb
cmpb
outsb
or
cmp
sahf
push
cli
add
rorl
iret
cltd
jae
mov
mov
mov
jmp
sub
cmp
lds
fcmovb
xchg
jge
pop
jge
pop
push
mov
pop
dec
sub
xchg
sti
clc
or
jl
xchg
out
and
paddq
mov
sub
andl
mov
sub
mov
mov
icebp
mov
cmp
movsb
int
push
push
iret
xchg
xor
lods
adc
sar
push
cltd
and
mov
jmp
sbb
lahf
mov
vdivpd
bound
add
dec
dec
pop
dec
dec
decb
cwtl
fildll
mov
xor
and
sbb
push
pushf
add
pop
xchg
add
dec
mov
cwtl
shlb
fsubp
insb
sbbb
pop
lds
movsl
nop
mov
test
pop
data16
jb
mov
mov
test
mov
mov
inc
insl
pop
pop
lock
jge
sbb
adc
shl
cmc
std
and
stc
ret
adc
fildll
js
lock
adc
sbbb
test
pop
fisubrs
enter
sbb
cli
mov
xchg
xchg
std
fcoml
bound
and
cmp
ret
scas
mov
xor
mov
xor
inc
outsl
sub
shrb
mov
stc
mov
add
test
pusha
leave
push
sub
sarb
mov
ret
ds
rorb
mov
mov
nop
outsl
dec
xor
outsl
outsl
mov
fs
aad
xchg
mov
cmp
subl
in
xchg
gs
das
dec
es
pop
cmc
test
add
jp
mov
jo
xchg
dec
lret
bnd
in
xor
jo
lret
lock
inc
sti
mov
or
int
sahf
outsb
and
xchg
mov
fwait
dec
sbb
cmp
dec
fistps
add
gs
pop
dec
mov
xor
xor
ret
bound
movsb
pop
in
xor
push
pop
mov
pop
fiaddl
dec
stos
or
add
and
mov
data16
scas
jb
or
pop
mov
xchg
cmp
dec
sub
mov
xchg
sbb
add
shll
daa
xchg
sub
aas
cmp
jmp
sti
test
mov
je
aad
mov
stc
xchg
jns
sahf
test
movsl
dec
lret
shlb
xor
test
xor
das
out
fldenv
lret
pop
fucomi
ret
sub
push
push
mov
int
movsl
pop
mov
push
xor
sti
add
lods
cltd
pop
test
push
das
jle
sbbl
fsubrs
inc
add
pop
ss
test
xchg
loop
mov
icebp
jle
loopne
add
jns
jb
jae
mov
push
and
rorb
pop
jbe
insb
cmp
icebp
lock
cwtl
add
mov
push
mov
insb
das
jmp
or
and
or
dec
cmpsl
pusha
adc
flds
into
adc
in
ss
int
xlat
ja
inc
sub
or
pop
jecxz
push
add
cmp
xchg
cmp
mov
sarl
inc
stos
sub
addl
js
inc
iret
dec
xchg
cld
or
push
cmp
dec
pop
xchg
call
scas
dec
and
pop
shll
into
pushf
jecxz
add
sbb
shl
pop
movsl
push
mov
mov
jbe
cli
lea
ds
sub
ss
mov
scas
aaa
lods
adc
out
xor
cmp
outsb
or
push
cmp
sbb
mov
adc
jp
pop
dec
scas
es
imul
cli
movsl
xchg
daa
ja
std
lods
jo
dec
aad
sub
sub
out
ror
rcrl
movsl
pusha
or
mov
call
fwait
or
pop
cmp
ret
mov
xchg
data16
movsl
and
fld
pushl
arpl
mov
pop
xchg
mov
inc
out
sub
in
pop
outsb
rolb
adc
in
jecxz
imul
dec
testb
xchg
sub
xchg
or
push
fdiv
and
inc
jle
pop
lret
dec
pusha
and
das
repz
mov
or
fs
pop
pop
push
daa
btc
push
mov
std
andl
inc
push
pop
out
adc
push
movsb
mov
xchg
inc
icebp
mov
sti
mov
sub
cmp
fsubr
mov
lods
scas
add
lods
stos
cmp
nop
addr16
and
xchg
or
dec
sub
popa
mov
imul
fcmove
or
mov
lock
ret
test
movb
div
rolb
int3
xlat
mov
jle
cld
popa
add
cmc
push
lret
fisubs
and
xchg
push
and
add
icebp
fstps
xchg
mov
icebp
lcall
and
pop
ficompl
add
outsl
insb
fwait
orb
or
jae
lods
push
lods
ss
aas
hlt
fwait
rolb
loope
and
pop
rclb
mov
xchg
xor
xor
stos
dec
shll
orl
add
mov
dec
push
int
fdivrs
mov
nop
cmpsl
adc
in
xor
cmp
dec
je
loope
aas
lahf
xor
lahf
insl
les
push
jg
fidivrs
push
add
and
insl
dec
ss
jno
add
adc
popf
add
out
xchg
mov
push
test
orl
push
jle
hlt
cmp
mov
loop
dec
das
aaa
pop
and
fs
mov
xchg
dec
xor
repz
jl
fidivs
mov
cmp
mov
gs
test
mov
jmp
xchg
mov
in
cwtl
iret
mov
xor
cs
jg
inc
inc
aam
pop
mov
or
sarl
mov
mov
add
mov
outsl
repnz
jg
pop
mov
mov
rcll
and
inc
xchg
cmp
mov
pop
cmp
xor
lcall
push
ret
lahf
aam
xor
push
movsl
call
mov
add
and
or
or
loop
push
in
ret
inc
enter
pop
jbe
repz
and
gs
and
jns
sahf
repnz
jne
cmpsb
clc
sub
xor
std
stos
mov
mov
scas
mov
call
out
aad
push
sbb
fiadds
dec
xor
jmp
cmp
or
rcrb
xchg
aad
inc
or
fs
test
sbb
jae
lret
sub
mov
mov
mov
js
inc
div
inc
add
xor
loopne
dec
sub
mov
and
push
cmpsb
jecxz
mov
loop
punpckldq
cli
dec
add
movsb
push
paddq
mov
pop
je
or
movsl
jg
mov
xor
repz
xchg
pop
jl
cmp
mov
pop
outsb
les
mov
xor
xchg
xchg
std
stos
repnz
jg
jecxz
push
negl
cltd
aam
fimuls
arpl
push
ds
mov
mov
xor
shlb
sti
and
or
inc
shlb
js
rcl
sbb
mov
adc
cmp
test
xor
push
mulb
mov
push
outsb
mov
int
push
pop
add
in
jle
cmp
imul
pop
and
mov
cmpsl
pop
lret
adc
out
roll
push
mov
push
adc
dec
push
mov
sbbb
mov
in
mov
jmp
mov
arpl
adc
orb
sub
sti
sbb
and
loop
push
pop
xchg
inc
push
std
mov
lods
js
ja
in
loop
dec
icebp
dec
mov
pusha
mov
jb
cltd
cmpsl
mov
inc
mov
std
sub
vxorps
rorb
mov
cmp
mov
xor
ja
pop
in
std
adc
filds
push
loope
enter
cwtl
hlt
push
push
shrb
inc
adc
test
es
decl
movsb
xorl
lea
push
int
faddp
jecxz
push
push
aam
fldt
loopne
cmp
leave
fcoms
inc
les
imul
and
cmp
sbb
jg
sbbb
push
insb
pop
shlb
adc
mov
stos
fistpl
sub
jl
cmp
pop
icebp
xchg
inc
gs
pop
dec
test
jl
lods
xchg
in
inc
enter
out
out
shll
imul
out
sbb
jl
hlt
faddl
pop
mov
aas
pusha
movsb
into
mov
data16
pop
scas
addr16
invd
outsb
lret
xor
add
int3
insb
or
xchg
sbb
shrb
adc
in
mov
fmul
jne
or
cmp
test
xor
jl
sbb
jnp
xor
jbe
xor
adc
xor
sub
push
cmp
and
xchg
out
jbe
aaa
std
push
test
xchg
jb
mov
inc
fwait
lock
pop
insl
fdivs
outsb
mov
mov
sahf
test
std
test
push
ljmp
xchg
inc
decl
and
dec
out
or
or
mov
cltd
mov
aam
test
and
outsl
ud0
add
imul
mov
mov
add
outsl
sbb
test
adc
sbb
aas
jae
mov
cld
lret
inc
pop
insl
outsb
or
inc
mov
aaa
enter
roll
cs
xchg
lret
sub
aaa
fbstp
scas
out
push
popf
mov
xchg
nop
dec
cmpsl
inc
jns
out
popf
inc
inc
testb
pop
jge
das
mov
inc
jg
jp
int
jmp
pushl
push
push
adc
shl
ljmp
inc
ret
ret
mov
push
mov
loopne
mov
mov
ficompl
fdivl
lahf
xchg
lock
mov
repnz
or
pusha
xchg
or
int3
xchg
pop
cmp
adc
popl
adc
insb
ret
cmpb
mov
dec
imul
loopne
xor
and
arpl
mul
xchg
or
es
daa
int
mov
mov
out
mov
testl
inc
out
push
lcall
pushf
incb
shrb
adc
negl
ja
and
lea
sarb
leave
pop
cmpsl
push
add
aas
repz
mov
fs
pop
add
jl
test
or
mov
cli
fcmovnb
dec
fldcw
mov
mov
inc
lea
sub
cmpsl
pop
or
jb
clc
add
mov
adc
pusha
pop
mov
js
das
xchg
repnz
dec
inc
mov
insb
mov
add
push
int
out
xchg
icebp
xor
mov
shrb
cwtl
xchg
xlat
mov
dec
sbb
nop
push
jne
int3
push
mov
scas
xor
lock
mov
ss
or
jmp
addb
cld
xchg
ja
popa
aaa
xchg
mov
popa
pop
lds
cmp
mov
in
xchg
lret
jge
xor
icebp
lods
add
shlb
lock
push
and
cmp
std
add
ds
cld
daa
test
push
movsb
push
mov
aaa
adc
inc
and
in
fstps
loop
ja
push
test
mov
imul
es
pop
ret
inc
adc
mov
mov
sbb
dec
out
inc
adc
cmc
sub
arpl
dec
pop
dec
cmp
lods
mov
dec
scas
in
cmp
gs
nop
out
popl
ret
stos
pop
aad
sbb
bound
jle
mov
adc
scas
in
jbe
pop
test
inc
push
mov
cmc
orb
push
add
sub
adc
push
jo
mov
cmp
test
jge
xor
pop
or
imul
call
adc
push
std
xor
movsl
fcmovne
lock
cmpsb
xchg
js
mov
xchg
xchg
mov
inc
mov
add
stos
out
les
mov
add
incb
and
lcall
repnz
mov
xchg
test
cmp
lret
insb
jmp
test
xchg
fbld
aad
lcall
or
outsb
cmpsw
je
xor
sub
add
xchg
int
ret
cmp
push
adc
mov
hlt
push
in
xor
cmp
sub
cmpsl
cmpsl
movsb
filds
testl
and
xchg
shr
sbb
and
push
sub
test
jno
inc
jns
fstpl
pop
xchg
in
inc
inc
xchg
mov
add
mov
fistl
out
mov
iret
hlt
inc
cwtl
outsb
pop
repnz
cmpb
mov
icebp
dec
jo
rorb
mov
pop
call
jno
cmp
enter
pop
cwtl
xlat
movsl
fldt
mov
dec
sub
dec
cld
and
cmp
aas
mov
lock
xchg
add
jno
or
jecxz
or
jns
sbb
pop
jno
sub
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fisttpll
mov
in
out
pop
addl
sahf
sbb
lods
test
out
js
mov
aaa
dec
les
cmp
inc
and
inc
popf
jns
sahf
imul
push
inc
int3
mov
cltd
roll
mov
mov
xor
insb
call
dec
or
shll
jg
stos
xchg
mov
cmp
inc
mov
andnps
mov
je
xor
mov
cmp
add
jp
outsb
imul
test
sbb
xor
pop
frstor
sti
jecxz
out
or
inc
nop
cmp
aaa
and
std
mov
popf
in
insb
sbb
or
jmp
dec
inc
or
xchg
popa
xor
test
bound
cmpsl
pop
inc
lock
jno
std
dec
dec
adc
xor
lock
dec
mov
rcrb
rorb
cmp
subl
mov
popa
adc
sbb
and
outsl
loop
jne
add
lea
pop
test
sub
mov
mov
hlt
xchg
inc
pop
icebp
arpl
dec
scas
jmp
mov
int
jl
lods
jb
jg
lret
leave
mov
inc
push
jmp
mov
pop
xor
add
adc
dec
lea
pop
adc
scas
dec
add
fidivrs
mov
test
pop
lret
mov
popf
dec
xor
xor
sub
adcl
in
loop
add
jbe
mov
jg
stos
enter
mov
clc
in
cmp
inc
insl
cmp
mov
dec
adc
fs
lock
ds
and
xchg
int3
das
in
jne
sub
and
mulb
mov
int3
mov
fdivrl
stos
cmp
xchg
sbb
jmp
ds
mov
adcb
adc
mov
pop
sbbb
push
arpl
pop
cmpsb
flds
mov
ror
mov
shlb
sbb
cmpsb
subb
sub
cmp
push
ja
stc
sar
dec
dec
bound
cmp
mov
adc
and
lea
fstpt
shrl
xor
pop
aaa
mov
push
jge
test
ljmp
sub
sti
add
test
das
pop
inc
bound
dec
mov
hlt
mov
shll
cmp
pop
push
bound
jle
dec
stos
cwtl
dec
mov
inc
cmp
std
sbb
in
xor
insl
dec
loopne
jmp
mov
fimuls
inc
mov
xor
push
int3
sub
out
mov
mov
push
lahf
add
flds
outsl
or
adc
mov
es
lock
jp
xchg
ds
push
sbb
sti
and
dec
mov
sbb
adc
jno
pop
fdivrs
loope
addr16
cmpsl
or
hlt
mov
jmp
ret
loope
jmp
mov
xor
addb
pop
fidivrl
add
mov
push
popa
pop
cmc
pop
addr16
ret
ds
das
mov
popf
push
jb
shlb
add
lock
movsb
push
addb
fildll
push
shll
loop
mov
or
adcl
orl
out
jno
adc
mov
or
sbb
cld
push
xor
and
mov
push
insb
cmpsl
xchg
add
cli
push
inc
lea
sbb
scas
mov
push
repnz
test
push
sar
lcall
hlt
xor
mov
push
es
pop
or
push
mov
rcll
push
or
fdivrs
add
jno
in
pop
scas
adc
inc
and
push
in
es
outsb
pop
xchg
fdivs
ss
ja
cmp
and
xchg
push
les
imul
and
int
shrl
insb
xchg
cmove
gs
pop
sbb
and
mov
xor
push
js
jnp
repz
pushf
jmp
pop
stos
iret
das
push
push
test
lahf
out
cli
mov
sub
insb
cmp
cmp
movsb
lods
push
xor
arpl
rcll
mov
test
into
adc
lea
mov
ret
sbb
add
push
pop
mov
cltd
out
or
pop
cld
rclb
jae
adc
push
mov
les
rolb
sbb
into
sbb
es
cmc
jno
inc
movsb
dec
shll
mov
dec
insb
mov
add
mov
stc
jo
imul
ss
repnz
frstor
int
stos
fsubrl
insb
xchg
dec
cmp
jl
jge
sahf
dec
sub
inc
sbbb
orb
jge
xor
pusha
aaa
xor
jle
push
shrb
or
sbb
mov
stc
adc
pop
dec
sub
sub
dec
xchg
rcrb
loope
sbb
add
pop
jns
lret
jge
addr16
and
pop
insl
mov
add
sbb
lock
sub
or
xchg
test
fdivl
inc
push
cmc
mov
xchg
outsl
xlat
sub
pop
lds
push
mov
push
push
xchg
pop
stos
jmp
les
mov
scas
ljmp
cmp
mov
dec
mov
pop
xchg
arpl
jo,pn
sub
xor
cmp
xchg
sbb
sub
fisttpl
mov
sub
push
mov
imul
xchg
cmpl
and
add
jae
je
dec
pop
popa
lods
loope
test
insw
xchg
orb
mov
mov
dec
mov
fsts
mov
pop
jbe
and
jle
pop
dec
je
ret
sub
or
pop
xor
orb
icebp
adcb
mov
or
fsubrl
insb
push
out
test
mov
mov
je
mov
aam
push
mov
lock
ds
fmull
andl
mov
scas
mov
jp
es
dec
jae
popl
imul
fstpt
pop
adcl
scas
mov
jecxz
adc
mov
enter
push
pop
lahf
out
aad
divl
mov
adc
pop
lret
jne
popf
inc
cmp
insl
dec
sarl
push
add
or
cmp
sub
jbe
mov
outsb
lret
mull
addr16
pop
mov
dec
test
xchg
or
xchg
out
hlt
fs
lahf
sub
sub
subl
push
cmp
repz
in
cmpb
mov
push
dec
nop
sub
fidivrl
pop
into
dec
mov
dec
cmpsb
stos
add
sub
jb
xchg
jmp
mov
sbb
push
jne
dec
xor
push
add
test
sahf
stos
test
ljmp
mov
add
dec
dec
ljmp
jns
div
mov
repnz
dec
repz
sar
movsb
push
mov
push
aaa
add
cltd
inc
or
out
jg
mov
mov
addl
mov
sub
fsubl
mov
inc
dec
push
sbb
in
sar
dec
int
push
loop
push
mov
shll
sub
movsb
fdivr
push
arpl
sahf
or
fsub
stos
outsb
lcall
shll
daa
xchg
pop
mov
insl
nop
lea
inc
out
add
mul
xchg
daa
pop
jbe
js
sbb
inc
sub
push
cld
aad
add
add
gs
xchg
fisttpl
mov
push
imul
aas
sbb
test
fs
cmpsb
xor
sti
pop
outsl
push
adc
xchg
and
mov
mov
xchg
push
push
scas
ljmp
pop
and
mov
imul
jno
rcrl
sti
ret
es
xlat
dec
push
leave
or
cmp
fisubrl
icebp
push
in
pop
rcr
inc
dec
ret
mov
jg
cltd
push
cmp
in
mov
faddl
pop
cli
push
xchg
dec
jno
pop
iret
es
sbb
enterw
push
xchg
jp
push
or
gs
daa
into
iret
or
push
pop
mov
xchg
adc
adcb
jp
vaddps
lahf
fdivs
add
cwtl
lock
cmc
data16
mov
addr16
add
stc
clc
mov
mov
jo
fiadds
aad
sbbl
cs
push
fcmovne
xchg
movsl
xor
aam
mov
and
sbb
mov
aad
xchg
lock
aam
sub
ror
scas
cltd
jl
cmp
jns
pop
idivb
in
mov
xor
shrl
fwait
push
es
cli
adc
or
movsl
cld
mov
or
mov
jno
movsb
mov
rclb
pop
and
mov
rcll
es
inc
negb
jne
hlt
iret
fildll
cmpb
pop
push
mov
mov
pop
pop
lcall
out
testl
jmp
mov
stos
les
or
push
out
enter
adc
stos
loope
fildl
addb
push
sbb
push
push
jbe
add
popa
adc
in
in
xchg
fbstp
mov
pop
xchg
cmc
dec
xor
xor
test
stc
out
lahf
loopne
js
call
xchg
inc
fdivr
mov
or
mov
pop
shll
xchg
mov
movl
mov
or
repz
aaa
cmp
adc
inc
mov
add
enter
or
sub
fyl2x
pop
add
push
adc
in
dec
and
in
movsb
sbb
inc
scas
mov
dec
dec
daa
and
icebp
lahf
jbe
push
sbb
pushf
mov
push
lret
pop
into
dec
lcall
testl
inc
sub
sarl
xchg
jmp
xor
shrb
jnp
lret
fsubrs
mov
loopne
cld
aaa
scas
jl
cmc
cmpsb
nop
fidivl
imul
xchg
push
and
lahf
cli
aad
cmp
lock
mov
fs
arpl
shll
imul
add
push
enter
stos
icebp
test
or
sbb
xchg
mov
push
in
mov
and
leave
int3
fnsave
sbb
pop
popf
sub
push
adc
inc
xor
mov
roll
and
fsubp
mov
int
stos
cmp
shlb
xchg
lods
icebp
sbb
adc
xchg
jge
pop
push
dec
or
arpl
sub
xchg
rcll
cwtl
mov
dec
out
loopne
xor
outsl
mov
xchg
cmp
pushf
cwtl
lahf
sbb
sti
mov
mov
rol
lock
dec
sub
xor
ret
jp
pop
scas
movl
add
push
or
loope
pop
and
enter
aaa
mov
inc
ret
insb
cmp
jg
test
pop
xchg
xchg
xchg
adc
inc
imul
jmp
and
jno
add
lcall
and
or
adc
inc
mov
inc
call
ret
cmpsl
rorl
pop
inc
jecxz
and
adc
cli
inc
xchg
sbb
shrb
icebp
pop
lods
xor
push
adc
mov
push
inc
sub
hlt
mov
clc
rolb
imul
sub
sub
fmull
mov
cmp
lret
pusha
cld
inc
jecxz
pop
lahf
sbb
inc
mov
jnp
fidivl
rorb
cmpsl
cmpsl
jnp
push
sub
xchg
push
mov
jg
mov
push
push
push
jle
xchg
cmpsb
inc
and
inc
insb
bound
lea
lods
pop
push
xchg
sub
flds
mov
add
sbb
mov
mov
mov
roll
sub
sub
rclb
fisubs
jg
cltd
mov
inc
sub
je
fidivrl
pop
movsl
mov
adc
xchg
in
xlat
jne
test
xchg
jnp
rcrl
out
pop
xlat
lcall
or
mov
lcall
push
mov
or
push
test
cld
fdivs
push
or
mov
aam
push
in
and
adc
or
lea
in
xchg
loope
xor
ds
cmp
push
lcall
outsb
pop
dec
pop
pop
push
mov
add
cwtl
pop
pop
lahf
mov
or
push
int
stc
mov
xor
ss
cmp
cmpsl
pop
xchg
mov
and
inc
jno
mov
and
pop
mov
xchg
xor
inc
jg
mov
push
pop
xor
sbbb
std
push
in
cli
xor
xchg
jecxz
cmc
std
sti
mov
lea
mov
cmp
add
xorl
push
cmp
cmp
jo
scas
test
jmp
pushl
jecxz
mov
add
dec
jmp
lds
pop
xor
or
mov
enter
je
imul
aaa
fdivrs
in
xchg
aaa
fs
ljmp
fbstp
jge
jecxz
and
mov
iret
lahf
jecxz
icebp
lods
push
andb
mov
mov
lock
ss
loopne
mov
pop
push
sub
add
call
add
jno
or
faddl
sub
push
and
jecxz
sti
jno
shll
cmp
sbb
mov
sub
flds
aas
repnz
lret
push
mov
out
or
fidivrs
repnz
movsb
push
mov
mov
cmp
jno
push
jl
inc
jae
into
xchg
dec
dec
dec
fwait
pusha
xchg
into
add
jl
into
js
pop
jne
out
loopne
call
fsubrp
lret
out
outsb
nop
and
fcompl
push
jae
mov
inc
jnp
sbb
ds
push
and
rol
pop
ljmp
movsl
inc
jo
mov
sarl
les
push
cmp
jnp
cmp
in
or
jp
sbb
inc
in
insb
jb
jb
adc
hlt
lahf
pop
xchg
in
pop
push
mov
mov
inc
xorl
fs
and
mov
jno
cmpsl
insl
jmp
iret
pushf
mov
iret
enter
xchg
xchg
mulb
push
lock
jp
cli
mov
pop
push
inc
mov
idivl
lret
xchg
pop
insl
mov
cld
lahf
mov
jnp
push
cmp
xlat
orb
sub
sub
push
jle
dec
mull
cli
mov
mov
lods
dec
ljmp
push
xor
sbbl
mov
mov
mov
fs
fadds
loopne
or
mov
pop
mov
adc
jmp
dec
xor
addr16
ljmp
sarb
or
mov
pop
push
pushf
mov
in
repz
add
stos
cmp
shll
push
ljmp
lret
imul
lods
push
leave
push
jl
dec
lods
fdiv
cmp
fdivs
pop
call
adc
iret
mov
or
add
or
sub
cwtl
ret
cmp
adc
add
pop
lods
imul
in
jne
cmp
sarb
xor
push
es
rcrl
lret
jle
ss
mov
cmp
mov
mov
shlb
enter
or
or
dec
dec
std
icebp
sub
xor
mov
scas
mov
xchg
outsb
jns
rclb
mov
push
aam
jecxz
pop
adc
inc
outsb
bound
mov
pop
mov
repz
fdivrl
negl
push
mov
inc
lods
out
test
dec
and
daa
addr16
popf
inc
stos
xchg
mov
mov
cmp
insl
cwtl
jge
jmp
mov
cld
and
push
dec
out
push
pop
pop
push
subb
mov
outsb
fldl
fwait
or
sub
mov
and
dec
push
push
subl
mov
mov
ss
stos
sub
sub
cmpsl
in
test
mov
mov
in
in
xor
inc
sarl
push
testl
test
jmp
orb
xlat
adc
or
adc
mov
push
mov
pop
and
mov
add
stc
jg
ljmp
sub
mov
and
hlt
cmp
lds
aaa
out
adc
hlt
mov
dec
push
stos
sub
ss
fs
cmp
jbe
je
adc
cli
cmc
inc
jne
scas
or
push
shl
sub
shll
and
insb
shl
inc
fistpll
mov
data16
mov
mov
cmc
or
movsl
xchg
ljmp
imul
test
inc
nop
mov
test
sbb
mov
std
sbb
xchg
data16
push
mov
adc
cwtl
sahf
cmpsl
insl
xchg
clc
out
lods
or
mov
int
aam
jl
cmp
rclb
xor
pop
cwtl
setno
add
adc
roll
mov
fimuls
jle
adc
in
mov
dec
iret
mov
lods
mov
sti
decb
add
les
dec
pop
and
jne
test
repz
fs
rclb
fnstsw
mov
fwait
mov
div
dec
dec
add
scas
imul
bnd
adc
cmp
xor
pop
mov
and
pop
mov
das
ltr
push
sub
xchg
sbb
jns
xchg
insb
dec
sti
push
fcmovnbe
test
and
daa
jns
jo
mov
pop
repz
rep
outsb
lret
dec
sub
pushl
push
sub
sbbb
jle
pop
jo
sbbl
push
add
loopne
xchg
jnp
xor
je
gs
or
pop
add
hlt
lret
dec
xchg
inc
dec
aad
xor
mov
pop
dec
nop
sub
inc
jecxz
jge
loop
lds
jo
xchg
xchg
dec
xchg
or
cmc
xchg
loope
mov
or
and
and
dec
jmp
mov
cmp
in
or
test
inc
pop
push
xchg
dec
je
and
inc
xchg
out
xlat
aam
or
mov
rorb
jb
mov
fnstcw
cmp
mov
arpl
gs
fcompl
cmp
mov
dec
fadd
cmpsl
push
inc
fsubrl
adc
xor
jle
int3
les
and
cmp
or
gs
and
daa
ja
test
lods
or
inc
pop
aad
pop
in
xchg
jp
fstpt
fimull
ljmp
add
xchg
enter
sub
jg
mov
mov
movsl
push
mov
or
jle
stos
das
pop
cmp
xchg
inc
or
and
pop
out
test
ds
cmc
jne
add
jae
mov
cmp
mov
fdivp
jb
mov
inc
and
mov
stc
pop
push
lret
test
insl
jg
and
push
adc
push
int3
lock
fs
push
dec
movsl
bound
ret
lock
movsb
or
or
cmp
and
jmp
push
nop
mov
adc
sti
test
inc
aam
xchg
and
xor
iret
lods
jne
xlat
jmp
jg
cmpl
pop
shlb
push
jnp
jmp
nop
test
xchg
aas
paddsb
pop
aad
std
clc
addb
aaa
dec
dec
push
in
imul
sub
sbb
pushf
mov
xchg
pop
push
out
popf
sti
mov
std
dec
mov
sub
inc
mov
idivb
test
cmpsb
inc
lahf
push
mov
and
mov
sbb
lods
lcall
cmpsl
movsl
or
mov
adc
je
fwait
sti
mov
push
mov
cmp
shlb
mov
daa
imul
and
adc
dec
aas
insl
lock
cmp
jae
dec
mov
and
nop
adc
cmpsb
xchg
mov
inc
int3
sbb
cwtl
push
add
xor
int
lods
adc
sahf
scas
lahf
sub
xor
and
scas
jecxz
aaa
aad
and
xlat
addr16
mov
lock
cltd
in
or
sahf
in
push
jne
loop
mov
out
sub
dec
mov
inc
cmp
sub
out
aaa
push
das
jnp
jne
mov
stc
dec
clc
pop
add
jnp
or
xlat
pop
xchg
jo
pop
jo
lahf
cmp
jo
xor
push
out
fiadds
fildll
mov
outsl
inc
aad
pop
fists
add
cmpsb
mov
cmp
lods
cmp
and
mov
mov
in
jns
mov
cwtl
ret
popa
cmp
pop
inc
sbb
lods
imull
adc
shl
int3
aad
mov
lds
and
xchg
jbe
stos
bound
out
mov
sbbb
push
int
mov
sarl
in
inc
or
stos
int
ljmp
mov
inc
or
add
scas
bound
insl
insb
ljmp
mov
xchg
gs
mov
lret
jmp
jns
or
xchg
push
xor
cs
call
icebp
sub
push
adc
clc
xor
push
inc
pop
out
rolb
fmuls
rcrb
and
mov
int
push
stos
push
ds
test
lret
sub
xor
adc
cli
gs
cmp
jne
cmp
dec
mov
lret
jno
push
jbe
xchg
dec
popf
test
add
outsb
lcall
pop
test
sub
push
call
orl
add
adc
push
jp
icebp
ss
sbb
or
push
push
xchg
push
mov
cmp
inc
xchg
mov
xchg
das
daa
mov
sbb
cwtl
mov
xor
dec
mov
xchg
xor
push
ret
int3
sub
test
adc
mov
mov
in
and
sbb
sbb
pop
dec
sbb
mov
ret
mov
ljmp
xchg
dec
push
leave
jecxz
and
push
repz
jbe
movsl
mov
int3
out
lds
pop
xor
pop
outsb
stc
fildl
movsl
mov
aam
jns
lret
push
mov
shrb
pop
lds
xor
fmull
inc
add
and
in
mov
leave
fnstsw
cs
aam
jne
push
xchg
sub
xor
out
and
lea
push
sbb
add
dec
cmp
aas
xchg
xor
push
or
mov
pop
push
mov
xor
sbb
cmp
scas
pop
push
jle
insl
jno
mov
jb
inc
add
scas
sbb
ret
mov
adc
adc
ret
mov
aas
pop
jo
sub
xchg
sbb
mov
push
call
push
ror
cwtl
push
lock
enter
fwait
dec
mov
adc
mov
xchg
and
rorl
adc
mov
cmp
subl
imul
outsb
stos
scas
or
push
test
push
mov
negb
or
xchg
insb
cltd
xchg
jbe
mov
lds
ret
fs
jb
push
inc
dec
sbb
add
dec
insb
pop
data16
adc
sbb
cmpsb
push
ljmp
jnp
mov
push
mov
mull
nop
lahf
jle
leave
cmp
dec
cltd
cmp
pop
xchg
sahf
gs
out
and
ret
cmp
mov
cmpsl
push
stc
fstl
call
ja
inc
aam
jns
ljmp
cltd
fldenv
dec
sub
or
and
bound
popa
bound
adc
hlt
outsb
out
fidivrs
push
loop
in
xchg
pusha
push
or
jno
mov
fstps
dec
sub
je
fs
clc
pop
lahf
cli
jl
jmp
cwtl
hlt
rcl
addr16
inc
gs
pushf
fisubl
mov
stos
push
mov
iret
dec
jo
mov
lea
int
ds
mov
lret
test
inc
add
jge
push
dec
and
push
sbb
stos
xchg
adc
mov
dec
loope
fstp
mov
dec
lods
adc
ds
cmp
pop
mov
dec
xchg
add
movb
jp
mov
rorb
pop
loope
out
jmp
mov
pushf
mov
jg
jns
jmp
test
data16
mov
sbb
inc
lret
inc
fmulp
pop
nop
or
mov
sub
push
jle
daa
xor
int3
pop
fdivrs
push
cmp
jle
inc
mov
xchg
std
add
hlt
js
pop
mov
lock
iret
int
jbe
bound
hlt
scas
sbb
cs
negb
pusha
push
sub
cltd
loopne
iret
cvtpi2ps
inc
cmp
cli
addr16
push
fs
xor
push
inc
mov
cmpsw
aaa
add
outsl
call
stos
mov
arpl
jp
aas
xor
out
lea
aaa
and
and
daa
int3
xor
mov
fcompl
adc
pop
or
rorb
push
mov
mov
sbb
xchg
add
popl
push
pushf
test
pop
dec
stos
loope
rcll
mov
jae
or
ret
or
jp
addb
sub
out
shrl
mov
xchg
inc
push
sbb
cli
jb
popf
ljmp
mov
ss
cmp
sarl
xlat
push
sbb
pop
mov
ficompl
xchg
push
mov
xchg
and
bound
push
mov
outsb
mov
pop
pop
in
cltd
das
mov
movsb
inc
mov
out
mov
in
mov
repnz
dec
jp
frstor
pop
mov
andl
iret
xor
shrb
dec
enter
sbb
jge
mov
sub
out
cmp
or
xchg
shrb
cld
fs
stos
cmpsb
lock
insb
pop
and
sub
adc
push
and
sub
inc
xor
sti
lcall
loopne
xchg
iret
imul
icebp
daa
pusha
loope
adc
stos
mov
cmp
or
sbb
jne
test
js
roll
mov
pusha
sbb
fsubrp
inc
lcall
xor
fstp
and
ret
inc
mov
pop
stos
ljmp
es
in
mov
outsb
add
push
mov
push
scas
imul
inc
pop
jle
or
loope
mov
jmp
mov
xor
imul
push
mov
adc
test
cmpsl
push
leave
jae
sub
or
gs
std
cmp
cmpsb
cmp
loopew
lcall
ret
clc
test
std
push
cltd
pop
mov
push
jmp
mov
mov
dec
loope
push
jp
inc
jle
xchg
mov
int3
push
pusha
mov
jmp
ss
repnz
addr16
jb
in
std
es
adcb
insb
pop
mov
mov
scas
sahf
jne
out
enter
fwait
stos
mov
pop
jbe
aam
popl
lret
dec
into
arpl
mov
int
mov
in
loope
pushf
inc
inc
jge
mov
in
out
xorb
sti
xor
and
test
or
pop
add
leave
and
ror
sbb
in
mov
cmc
jo
dec
push
xchg
fcoml
push
adc
push
out
mov
push
shll
inc
sub
adc
jb
xor
es
pop
fnstcw
and
mov
mov
push
inc
rcrl
mov
inc
ljmp
clc
mov
out
push
scas
fs
dec
cmp
sub
cmp
xor
shrb
hlt
cli
pop
inc
jns
xor
mov
push
out
adc
jne
dec
js
iret
mov
pop
outsb
aam
push
push
dec
mov
arpl
xor
jns
leave
imull
pop
xchg
lret
js
mov
std
xchg
adc
cmpsl
xor
data16
xchg
mov
or
je
rorb
cwtl
jne
std
mov
in
cmp
inc
ss
push
lret
test
cs
push
jecxz
or
sbb
icebp
inc
push
movsl
mov
jg
hlt
pop
fwait
and
push
les
push
fisubrs
ss
testb
idivl
outsl
push
popa
shlb
test
push
les
test
loope
sbb
cmp
mov
xchg
xchg
clc
sbb
or
filds
and
inc
mov
test
repnz
test
cmp
les
xor
jmp
mov
push
xor
repz
stos
lds
jno
js
xor
stc
add
xorb
sbb
lret
sbb
aam
int3
pop
push
xor
xchg
negb
or
aam
aaa
sub
push
ret
xchg
sub
sbbb
pop
les
or
test
std
xchg
add
mov
pop
fs
std
add
popa
sub
cs
inc
cmc
adc
cltd
jbe
dec
cmp
arpl
std
mov
icebp
enter
shll
sub
imul
mov
imul
add
addr16
dec
xor
mov
push
cmc
cld
push
fisttpl
mov
xor
xchg
stos
fisubl
add
xchg
rcr
call
shrb
add
vpsraw
and
mov
lcall
inc
out
out
fstl
push
popf
in
xchg
mov
cmpl
in
je
adc
icebp
stc
push
mov
add
ret
sbb
sbb
mov
sub
jns
xor
pop
fdiv
mov
orl
lahf
xchg
inc
jecxz
ficompl
pop
xor
mov
inc
mov
in
loope
jb
orl
push
ljmp
leave
jle
mov
jmp
or
cmpb
and
lret
mov
jle
scas
and
daa
rcll
xor
daa
inc
imul
frstor
or
pop
insl
mov
pop
sbb
and
sti
sub
pop
out
insb
sbb
add
sbb
shrb
popf
leave
js
dec
adc
mov
jl
imul
sub
mov
mov
add
xchg
orl
lods
adc
mov
add
jp
jae
mov
jp
mov
mov
aas
les
std
fldl
rcr
arpl
lahf
loop
sub
lahf
cmp
sbb
add
adc
dec
popf
xchg
filds
in
xor
aas
sahf
sahf
fisttps
xor
mov
les
or
pop
repnz
mov
xor
mov
pop
sbb
sub
add
and
cld
int
adc
pop
sahf
and
jg
xchg
mov
loop
lea
xchg
pop
jmp
aam
bound
in
out
sbb
in
jo
push
and
xorl
mov
push
mov
mov
mov
test
jle
rep
jl
xchg
push
lea
xlat
nop
push
jae
jge
clc
pushf
jl
xchg
mov
and
sub
mov
mov
lret
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
shll
sub
addl
sahf
bound
ss
sbb
sahf
mov
sub
sti
pop
lret
dec
push
push
pop
adc
pusha
pop
cmp
popf
pusha
sbb
sub
mov
cmp
dec
ret
sub
adc
rorl
add
rol
xchg
or
rclb
and
mov
inc
jg
cld
ja
int
sbb
repz
xchg
adc
fisttpl
jle
pop
test
add
loopne
testb
and
test
mov
orb
ja
xor
daa
inc
cli
adc
adc
cwtl
dec
mov
les
xchg
and
imull
sub
mov
lods
or
push
lret
hlt
dec
mov
daa
inc
pop
mov
or
fcoml
cmp
dec
insl
push
jp
fisubl
mov
mov
in
inc
test
out
cmovne
xchg
xor
push
jmp
in
jno
or
cmp
cs
test
pop
scas
ret
mov
out
inc
nop
test
dec
and
jns
push
int
nop
pushf
enter
inc
adc
scas
xor
jo
pushf
adc
arpl
xchg
pop
movsb
pushf
out
inc
lret
inc
aam
or
int3
add
popf
nop
in
pop
inc
adc
test
inc
mov
inc
pop
popf
cmc
cmpsl
clc
add
mov
mov
mov
jl
jp
cmp
or
sarl
aad
or
mov
inc
pushf
out
cmp
xchg
push
mov
testl
mov
jno
push
lret
jns
xor
push
es
jl
adc
jae
popf
xchg
xchg
sahf
daa
adc
imul
mov
bnd
iret
mov
lret
add
or
xor
das
test
sbbl
sub
packsswb
testl
mov
push
mov
pop
and
dec
sbb
icebp
jne
dec
mov
dec
mov
cmp
mov
mov
xor
jo
mov
cmp
int
cli
add
jmp
pop
fwait
xor
xlat
cmp
cmpsl
sub
sbb
popa
push
ror
lods
push
xchg
enter
mov
and
fsts
sbb
xchg
lret
and
inc
outsl
leave
leave
mov
pop
test
jge
out
push
and
fld
dec
idivb
and
in
jne
cltd
and
sub
ficoml
outsl
pop
mov
call
dec
cmpsl
fcoms
jbe
mov
das
or
xchg
pop
cmp
or
xchg
mov
sub
pop
sub
add
add
xor
xlat
test
fwait
xchg
test
fsubs
adc
shll
pushl
sarb
jmp
sub
cmc
mov
xor
sbb
pop
or
mov
bound
cmp
leave
cmp
shrb
mov
andl
sbb
xchg
cli
loop
lret
aaa
jae
shl
mov
sbb
test
xlat
dec
lea
int
cmp
iret
push
push
mov
jmp
xchg
mov
fs
push
popf
mov
ss
cmp
int
fcomps
or
or
out
mov
cmp
mov
inc
hlt
stc
lcall
int
push
or
rcrb
int
sbb
js
push
imul
lcall
xchg
pand
xchg
adc
push
popa
je
mov
dec
adc
pop
rcll
aad
push
in
mov
jo
xor
add
cmp
popa
sbb
faddl
jp
fiadds
mov
jmp
movsl
xchg
jo
outsb
mov
inc
push
mov
lods
daa
jge
out
aad
inc
loope
mov
sub
movsb
cmpl
cld
mov
dec
adc
shrb
push
ret
cmc
test
jecxz
push
movsb
pop
jp
das
dec
scas
inc
adc
dec
inc
add
insb
in
xchg
lret
das
jae
sub
cwtl
fists
out
shld
fs
dec
adc
mov
fst
ret
pop
jno
loopne
aad
inc
out
push
push
popa
std
jno
mov
daa
subl
adc
fildll
test
and
inc
jbe,pn
add
xor
mov
xchg
add
jp
xor
cmp
cmp
incb
fdivs
in
sub
sub
sbb
pushf
fisubl
enter
sbb
lods
je
fnstenv
adc
mov
pop
mov
out
cmp
push
sub
daa
push
pusha
mov
nop
fiadds
push
iret
dec
mov
inc
and
xor
repz
sbb
data16
aaa
mov
mov
mov
xchg
sub
jnp
incl
ret
data16
outsl
jno
outsl
push
add
fldcw
aaa
outsb
inc
pop
pop
cwtl
pop
or
and
mov
mov
jecxz
mov
adc
mov
pop
cwtl
cltd
pop
mov
xchg
cwtl
shrb
pop
sub
mov
daa
and
test
fdivrp
inc
mov
mov
push
incl
jnp
cmpsl
testl
adc
sarb
imul
or
xchg
xchg
dec
add
add
xchg
dec
ds
repz
jbe
gs
pop
xchg
rolb
outsl
ret
insb
or
loope
mov
pusha
xor
push
xchg
mov
mov
pop
test
xchg
sbb
mov
jmp
xor
lea
xchg
jnp
jo
test
mov
outsl
jnp
mov
lods
dec
subl
xchg
sub
movzwl
pop
andl
sbb
jge
pusha
pop
shrb
pop
popf
inc
pop
sub
clc
cmp
das
popa
dec
fdiv
jae
loope
cld
mov
jge
in
pop
arpl
sub
test
dec
out
inc
add
fwait
int3
popa
sbb
les
push
mov
push
sbb
add
in
imul
ss
push
ljmp
fsts
sbb
jns
and
mov
stc
jne
fildl
mov
add
fs
mov
or
xor
inc
scas
test
xor
and
shlb
xlat
push
cs
leave
lret
insw
lods
or
push
outsb
mov
lods
enter
lret
inc
iret
mov
fcoml
and
std
in
aam
into
nop
xor
sub
mov
fs
or
sbb
filds
mov
test
inc
pop
jmp
and
fwait
xor
pusha
cmp
cld
rorb
in
loope
ficompl
jbe
in
mov
bound
in
loope
sub
jle
in
mov
ret
popf
xor
lret
mov
fmull
jnp
cmp
jae
pop
ja
mov
jge
cwtl
push
lea
ljmp
scas
jns
insb
cmp
dec
adc
xor
jecxz
xchg
fisttpl
mov
mov
add
sbb
mov
and
jl
dec
and
andl
repz
mov
push
pusha
pop
sbb
sarb
fstpt
shr
cwtl
pop
bound
ljmp
fnstcw
dec
xor
subl
sti
mulps
mov
mov
ret
popf
jb
sbb
in
testl
fs
and
add
movsb
popa
fstp
inc
cmp
jno
jecxz
xchg
test
cmc
dec
enter
gs
movsl
xchg
fisttpll
cmpsl
push
loop
sub
test
ficoml
jle
jns
int
adc
cli
pusha
dec
and
xor
test
fistpl
decl
jecxz
outsb
xchg
pushf
cmpl
rorb
outsb
inc
mov
addr16
jmp
or
shl
cli
hlt
add
mov
mul
mov
mov
aas
and
mov
mov
cmpsl
ret
pushf
insb
andl
stos
pop
shl
dec
sub
enter
add
mov
or
lock
or
mov
xchg
ds
out
imul
sbb
decl
pop
cmpsb
adc
ja
sbb
jne
int3
pop
mov
scas
cmpb
or
pushf
insb
mov
mov
shrl
cs
dec
or
sub
xor
add
sub
out
das
icebp
stos
sbb
mov
jmp
xchg
aaa
add
jns
xor
and
jbe
and
xchg
bound
xchg
sbb
sbb
aaa
loope
and
mov
add
lods
ds
sub
adc
fiaddl
mov
push
ss
int
mov
repnz
mov
sar
inc
sbb
adc
inc
xor
xchg
dec
mul
in
or
dec
or
mov
imul
in
imul
xchg
cmp
sub
mov
das
xchg
mulb
arpl
jnp
fimull
sarl
xchg
xor
fcomps
cmp
testb
insl
ja
shl
ss
mov
js
int3
xor
fld
iret
mov
in
setl
fbstp
in
pop
jg
fisubl
mov
ja
xor
pop
adc
mov
jecxz
xor
push
dec
sub
cli
add
lret
test
sub
fwait
cld
mov
or
push
out
or
int3
push
fcmovbe
fsin
shlb
adc
int3
into
sub
decl
add
sbb
and
xor
into
cmp
jl
cmpsl
ret
neg
stos
das
push
sbb
sbb
lock
jl
inc
cmp
mov
xor
dec
adc
inc
mov
mov
dec
push
cltd
add
add
fsts
repnz
js
dec
jo
adc
dec
roll
add
push
das
xor
and
sbb
adc
aam
insl
lods
std
scas
sub
std
dec
jno
adc
insb
pop
pop
mov
pushf
out
js
fsubl
cwtl
insl
mov
jns
cli
jb
popa
mov
pop
enter
addr16
orb
stos
call
fmull
jle
xorl
rcrb
pop
leave
xor
jno
idivl
or
mov
mov
cmp
push
sahf
add
in
xchg
cmp
dec
movsb
xchg
or
sbb
jae
or
cmpsl
mov
sub
push
hlt
les
fcmovbe
adc
insb
sub
insb
out
pushf
sub
ja
and
out
add
lea
jp
incb
pushf
mov
loop
shlb
aas
shrb
lods
xchg
push
mov
int
insb
push
sub
add
lods
aam
and
sahf
and
clc
popf
mov
jno
push
or
rcl
das
addr16
ficomps
dec
jmp
or
fstpl
ja
cltd
mov
dec
add
sub
int
pop
mov
sbb
xchg
and
out
subb
xchg
out
or
pop
pop
cmp
repz
jecxz
in
stos
data16
sbb
ret
pop
dec
int
and
push
mov
cwtl
andb
or
addl
cmp
jb
mov
xchg
push
jmp
mov
cmp
ficoml
inc
fmul
adc
or
xchg
mov
bound
pop
in
sbb
xchg
mov
test
in
jbe
xchg
in
aaa
lods
mov
pop
fsubrl
jnp
xchg
outsl
sahf
cmp
jecxz
push
test
mov
loopne
out
dec
lods
sbb
mov
stos
mov
lret
sbb
mov
add
sub
xchg
pop
cwtl
imul
adc
icebp
into
sbbl
dec
enter
adc
lret
mov
mov
insb
mov
pop
ja
dec
mov
pop
push
ret
cmp
dec
push
and
mov
jle
mov
add
out
mov
adc
lret
adc
das
fldt
dec
xchg
aas
pop
jae
xchg
mov
adc
sahf
push
cmpsb
fistpl
out
repz
push
cs
mov
dec
imul
stos
nop
insl
cmp
aas
loopne
mov
out
test
mov
jle
lcall
cmp
aam
lods
cmpl
das
push
mov
test
xchg
xchg
fdivrl
fcmovnu
movsl
adc
ror
mov
hlt
out
xchg
push
sbb
sub
nop
or
add
push
imul
xor
into
test
sbb
mov
aad
xchg
test
push
loope
adc
mov
push
ljmp
ja
stos
dec
xor
in
add
mov
or
jg
mov
repnz
sbb
int3
fucomp
cmpsl
stos
das
test
out
sub
es
fprem1
sbb
and
mov
loopw
xchg
lea
pop
stos
fbld
imul
mov
mov
pop
dec
adc
inc
xor
mov
repnz
test
sub
add
arpl
mov
cwtd
xchg
and
add
je
stos
add
aam
mov
out
divb
fiaddl
push
fdivp
sbb
imul
dec
shlb
cli
sbb
scas
sbb
sbb
out
dec
mov
inc
rolb
push
add
leave
daa
add
push
jnp
repnz
cmp
pop
dec
mov
test
jl
ds
sub
popf
sti
bound
seto
xchg
sahf
scas
jp
sbb
clc
data16
xchg
xor
add
sbb
pop
jae
in
popf
scas
std
or
sub
adc
stos
lea
je
and
scas
bound
cmp
cltd
in
sbb
push
dec
cli
cltd
cmpsb
sti
adc
icebp
mov
jp
cmp
sbb
sub
dec
pop
xor
mov
sub
sub
push
mov
jae
jne
lods
sbb
lahf
inc
sbb
sbb
cmp
aaa
test
adc
call
ljmp
dec
stos
dec
mov
push
stos
mov
and
adc
jnp
xchg
arpl
into
add
and
dec
insb
imul
mov
testb
js
int3
sarb
arpl
mov
or
lret
mov
loop
aas
xor
icebp
das
cmp
jne
out
sub
and
mov
push
loopne,pt
mov
repnz
push
adc
push
lods
out
fwait
mov
xor
stc
rorb
cmpsb
into
jecxz
out
cmp
loopne
into
mov
insl
sbb
lds
adc
hlt
stc
pop
inc
fnstsw
add
enter
lret
cli
mov
and
loopne
jae
push
push
mov
clc
loopne
out
scas
gs
inc
cmp
sub
xchg
mov
dec
inc
pop
ffreep
imull
inc
jp
mov
scas
pusha
lds
into
test
in
dec
lea
pop
les
mov
or
adc
outsb
cld
mov
adc
cli
push
sbb
movb
cmp
jge
lock
xor
pop
popf
xchg
dec
dec
rol
inc
repnz
pop
jl
jno
xor
test
add
sbb
lock
push
sub
outsb
pop
ds
in
jle
jle
test
mov
int3
insl
decl
mov
lcall
negl
in
dec
out
ss
dec
cmpsl
push
sti
loop
pop
stos
sub
rol
sub
ficoms
inc
xchg
out
xchg
pushf
sbb
xor
xchg
bound
lock
decb
fidivs
out
jns
scas
sbb
idivl
xchg
shlb
ljmp
xor
xor
arpl
adc
push
outsb
jnp
inc
mov
pushf
hlt
jmp
dec
dec
fldl
xchg
mov
jge
insb
cli
test
pop
pusha
pop
pop
daa
xor
ss
adc
sub
pusha
inc
xchg
xorb
fwait
xor
mov
es
or
dec
sub
xchg
dec
rorb
ret
fcoms
dec
inc
cmc
rcll
mov
je
mov
jle
or
sub
push
jecxz
iret
nop
xchg
push
add
add
and
cltd
xor
mov
es
pop
mov
and
xor
mov
jmp
cmpsb
mov
std
cmpsl
pop
xor
movsl
adc
xchg
dec
pushf
mov
mov
scas
add
cmp
cwtl
xchg
out
fst
pop
and
in
cmp
sti
aam
pop
mov
movsl
out
fdivs
dec
pop
and
xor
cmp
mov
orl
in
xor
sbb
out
adc
and
adc
daa
jp
into
sub
fdivp
int
mov
into
out
mov
and
mov
les
cmp
jno
push
mov
lret
out
mov
mov
mov
push
fsqrt
xchg
push
inc
aaa
pop
cltd
adc
je
xchg
jne
data16
jne
insl
lock
mov
cli
mov
jge
rcr
dec
xchg
cs
inc
push
mov
outsl
and
sbb
or
outsb
jmp
add
mov
out
pop
fdivrs
dec
shl
test
cmp
sti
push
aaa
add
je
decl
sbb
stos
push
mov
scas
les
dec
push
int
das
lahf
jne
xor
in
push
ss
test
ret
push
or
fs
push
and
add
dec
mov
std
sbb
pop
xchg
pop
xchg
or
push
sbb
nop
push
aad
ds
adc
mov
add
cmp
ret
test
dec
bound
push
stc
movsw
and
xlat
into
mov
fcompl
std
adc
mov
mov
nop
sahf
repz
or
dec
outsb
lahf
mov
fs
dec
pushf
cld
mov
xchg
sbb
or
xchg
mov
enter
adc
aam
dec
outsb
orl
lret
call
cmpsb
jp
int3
insl
push
rcrb
mov
nop
xor
imul
mov
orb
dec
rcrb
xchg
adc
jecxz
jg
and
cmpsl
popa
mov
and
jl
movsl
adc
pop
push
sub
outsl
dec
das
adc
jbe
sbb
scas
dec
nop
ror
icebp
mov
es
mov
xchg
push
cmp
xor
cmp
pop
xchg
daa
jns,pt
inc
fdivr
fstpt
scas
or
das
test
cmp
test
loopne
jge
jecxz
xchg
sub
mov
xor
subl
mov
push
movsb
sub
adc
push
and
fwait
enter
cmpl
sbb
popa
sub
jns
or
aas
and
mov
xlat
xor
fsubl
add
mov
jle
insb
mov
ja
pop
or
mov
lods
cmpl
out
mov
adc
pop
inc
fbstp
nop
push
xor
lods
cmp
shll
ja
pop
xchg
cs
mov
pop
or
out
into
clc
xor
out
jecxz
shrl
cmc
aas
pop
mov
mov
mov
or
mov
fimull
shlb
dec
and
add
push
bswap
ret
stos
leave
adc
sub
dec
imul
dec
test
xchg
push
xchg
in
and
in
sbb
arpl
negb
xor
inc
cmpsl
ror
rorl
xchg
insl
dec
xor
adc
adc
pop
inc
add
mov
xor
insl
cmpsl
out
mov
cmovne
xor
cmp
push
mov
cs
push
cmp
je
sbb
lret
pop
pop
gs
push
jns
cmp
test
pop
pushf
pop
xchg
les
lret
nop
xor
icebp
js
sub
cmp
mov
shlb
mov
jno
dec
nop
scas
filds
jae
in
icebp
cmpb
jl
andb
xor
mov
call
icebp
xchg
lds
jbe
es
jecxz
fisttpll
dec
mov
shrb
mov
ficoms
jno
call
sahf
jmp
bound
xorb
decl
or
sti
xchg
jle
sbb
call
pop
test
aaa
cmpsl
in
out
jne
sbb
pop
mov
aad
das
orb
push
jmp
es
cmp
jg
ss
cmpsl
push
push
and
test
scas
outsb
sbb
and
sub
and
push
pop
cmp
xor
cwtl
dec
jno
add
add
adc
mov
jecxz
pushl
mov
out
add
mov
jnp
lods
mov
inc
inc
xchg
lods
mov
and
daa
fs
inc
mov
notb
gs
sahf
mov
int
leave
movsb
insl
cmpsl
lods
add
cltd
lea
fst
jp
aad
lods
dec
xchg
add
push
cmp
fdivl
mov
add
xchg
dec
fisttps
xor
mov
int3
je
fs
jns
mov
popa
inc
add
fldl
repnz
jb
inc
cld
xor
xchg
mov
push
dec
adc
loopne
add
mov
jge
test
jo
das
xchg
or
mov
xchg
scas
cmp
jo
jns
out
dec
std
cmp
mov
aaa
push
in
pop
sbb
sbbl
rcrb
repnz
lock
lea
mov
fs
or
jnp
xor
xchg
ds
scas
inc
out
lcall
out
mov
nop
test
sbb
pop
fiadds
cli
test
lea
inc
jno
fnstsw
sub
jns
cwtl
xor
jecxz
lret
cmp
adc
aad
iret
sbb
push
pop
xor
cmp
imul
hlt
fwait
andb
rcl
cmp
dec
sbb
jecxz
daa
mov
in
cmpsb
andl
push
sbb
imul
dec
jmp
out
jle
mov
inc
or
mov
and
push
cwtl
push
mov
cmp
mov
push
pop
jne
pop
clc
push
ljmp
pop
push
insb
dec
lods
push
mov
mov
daa
lods
or
mov
inc
xor
pop
push
flds
test
xor
bound
and
mov
lcall
cmpsl
jbe
jb
jg
adc
mov
jge
sub
sbb
xchg
fs
push
mov
fdivrs
push
jno
repnz
stc
insb
sarl
sub
sbb
adcb
pop
inc
xor
and
push
or
mov
int
mov
in
test
inc
jno
pushf
cld
lahf
pop
xchg
adc
testl
jl
es
data16
icebp
daa
mov
cmp
sub
sbb
test
or
push
cs
mov
lock
sar
lret
push
rclb
push
dec
loopne
ljmp
ja
cmp
movsl
mov
sub
jne
mov
stos
cltd
inc
cld
push
jl
sub
cld
shlb
lcall
outsb
mov
push
fcomps
sub
hlt
sbb
aad
sahf
mov
push
mov
fisubl
jns
cmp
pop
adc
out
int3
xor
icebp
xor
scas
pushl
enter
lahf
or
dec
fisttpll
cmp
cmpsl
xchg
mov
pop
and
push
dec
fwait
dec
sbb
mov
mov
push
jb
xlat
dec
xor
and
mov
cltd
and
ja
mov
cmp
outsl
or
push
jae
mov
lea
rorb
fiaddl
dec
adc
dec
mov
cwtl
cmp
mov
icebp
push
ljmp
out
push
add
inc
jle
ret
cmc
cmpsb
fcomi
xlat
xchg
les
into
and
push
aad
out
adc
push
pop
into
repz
lods
out
xchg
nop
add
jo
es
add
fdivrs
mov
scas
add
in
fdivr
aaa
inc
add
mov
xor
dec
loop
xor
mov
lods
jae
adc
cmpsl
jnp
movsl
xchg
mov
push
inc
inc
and
and
out
sub
push
fidivrl
int
jae
mov
sbb
iret
pusha
fsts
xchg
inc
dec
in
jmp
shlb
mov
adc
ret
orb
or
sahf
and
pop
aad
fadds
mov
loopne
mov
test
jns
or
xchg
clc
pop
repz
int
std
out
sbb
mov
cltd
xchg
aas
pop
stc
xor
cs
jb
fwait
sub
ljmp
sub
in
jns
call
test
and
hlt
stos
cmp
aaa
in
add
pop
dec
pop
addr16
movsb
or
rol
sarb
arpl
mov
xchg
or
dec
ljmp
in
and
push
scas
push
cmp
xchg
leave
mov
add
loop
lds
inc
push
add
pop
imul
mov
aad
dec
push
fs
mov
imul
cmp
lret
loop
pop
orl
push
cmp
aas
sti
repz
cld
rcr
inc
ljmp
xchg
lods
push
or
or
jge
sbb
out
fwait
push
and
push
mov
mov
ds
pushf
cwtl
int3
cmp
mov
dec
ja
scas
lds
cmpsl
aaa
push
jl
lcall
lods
lds
mov
xor
iret
rcrl
xchg
pop
xor
inc
push
xchg
xor
cmp
xchg
int3
add
repnz
aam
and
dec
jns
cmp
or
lods
push
stc
mov
inc
dec
fnstenv
mov
movsb
mov
inc
xchg
mov
mov
cs
mov
pop
stc
insb
xor
pop
cmpl
push
sbb
sbb
sbb
into
mov
pop
enter
cmp
jns
imul
xchg
adc
movsb
subl
mov
stos
mov
mov
xchg
or
mov
and
ret
sahf
dec
xchg
sahf
addr16
test
and
cwtl
jmp
sub
sti
icebp
out
push
js
dec
jge
outsl
lcallw
les
sbb
int3
dec
or
and
cli
pop
repz
cmpsb
fistl
and
mov
rep
mov
stc
mov
mov
hlt
xor
icebp
cmp
dec
sub
inc
push
aaa
pop
lea
out
movsl
mov
sbb
push
das
add
xchg
lods
mov
orl
les
or
jno
das
dec
cli
pop
jbe
mov
sbb
jns
jecxz
fidivrl
outsb
std
les
aad
fisttpl
cmp
dec
iret
add
das
out
jne
mov
je
mov
cmp
stos
push
jb
mov
jmp
push
mov
aaa
add
cmp
mov
mov
mov
inc
sub
fwait
cmp
hlt
dec
fiaddl
fwait
aad
xchg
push
shlb
aas
jge
stos
testb
jge
iret
mov
mov
mov
or
mov
and
out
paddd
and
insb
mov
lock
sti
insb
mov
jmp
or
dec
dec
sahf
leave
adc
inc
cltd
inc
fisttps
xchg
idivb
push
sub
push
pop
mov
mov
in
mov
mov
pop
adc
scas
fwait
loop
out
int3
push
or
insb
inc
test
shl
mov
mov
scas
mov
and
fistl
sbb
sub
mov
mov
and
shll
pop
inc
lea
loop
pop
adc
ss
in
xor
popf
add
outsl
mov
mov
jo
iret
movsl
repnz
sar
inc
mov
fcoml
bound
sbb
mov
mov
fimull
test
scas
lret
lods
sarl
insb
add
add
stc
xchg
push
mov
pop
lock
jo
iret
test
lods
pop
pop
rcr
and
dec
fisttps
inc
mov
adc
or
inc
push
jle
xor
push
mov
push
mov
je
inc
loope
jle
mov
or
and
addb
add
sbb
sub
lods
sub
fdivr
sub
addl
nop
dec
fwait
pushf
mov
rcl
dec
es
mov
hlt
sbb
lods
loop
mov
popa
xchg
jmp
aas
pop
loopne
mov
pop
hlt
dec
xor
call
js,pt
pushf
icebp
loope
lds
mov
movsb
jle
insb
mov
inc
xor
pop
aam
add
mov
xor
or
fnstenv
das
jbe
cmpb
mov
repz
outsb
addr16
add
fnsave
sbb
into
in
imul
ror
push
mov
leave
icebp
pop
movsl
fidivs
in
xchg
inc
adcl
into
insl
shrb
daa
mov
cmc
aas
mov
ret
cmpsb
icebp
mulb
pop
cmp
fsubrl
iret
shrl
js
mov
xlat
sub
dec
clc
jg
fbld
cwtl
dec
fdivl
sub
dec
mov
sbb
scas
pop
test
pop
aam
sbb
cli
push
push
cmp
mov
sub
in
shll
mov
ret
sub
cmpsb
sbb
mov
pop
shll
hlt
xor
dec
aaa
or
sub
sub
push
insl
fmull
in
fcompl
or
lret
add
mov
or
mov
fmulp
jmp
cmp
popa
push
fsubl
test
push
jmp
sbb
jns
mov
add
cmpsl
push
scas
sarb
cs
adc
lods
push
out
jg
popa
shrl
adc
divb
addl
leave
sbb
daa
push
arpl
adc
cwtl
fdivrs
mov
mov
xchg
jecxz
lcall
push
and
jnp
jb
mov
mov
fisttps
mov
insl
dec
out
rolb
pop
inc
push
popf
inc
pop
loop
gs
iret
fwait
dec
movsb
mov
into
outsl
loop
rcrl
dec
and
xor
movsb
push
imul
in
in
push
mov
mov
clc
jne
dec
mov
inc
adcb
xchg
scas
xor
cli
scas
ret
imul
jno
loopne
das
or
dec
shll
and
test
pop
and
xchg
xchg
or
out
jns
out
sbb
jg
data16
in
push
mov
sahf
push
loop
repz
out
std
in
fcoml
popa
add
mov
es
ret
xlat
sahf
les
jno
out
add
push
push
outsl
or
rclb
add
adc
aam
mov
sub
xchg
xor
cmp
stos
test
lcall
inc
add
push
sbb
arpl
lds
or
lock
push
and
arpl
sbb
sbb
jns
xor
popa
fbld
test
sbb
cmp
push
daa
je
jge
add
mov
inc
pop
or
ret
mov
testl
pop
dec
sbb
inc
stos
jg
aad
addl
xchg
das
dec
mov
divb
pushf
mov
cmpsb
sar
addr16
sub
mov
add
mov
mov
ja
fcomip
fs
aad
xchg
inc
adc
cmp
inc
add
out
cmp
fiadds
sub
lock
scas
push
xchg
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
xorb
addl
adc
iret
jbe
imul
pop
fmuls
push
pop
sbb
push
push
sub
xor
sub
iret
inc
add
adc
push
adc
jl
mov
in
cmp
rolb
pop
imul
and
add
jmp
mov
mov
dec
hlt
sbb
sbb
ret
pop
shr
and
aas
nop
dec
sub
jb
jl
js
popa
pop
mov
repz
jge
daa
fs
lods
int
mov
cmc
stos
std
ds
mov
mov
lds
in
jo
sbb
test
test
call
repz
mov
icebp
fidivs
int
xlat
mov
xor
test
lret
cltd
shll
imul
or
dec
xchg
fisttpll
dec
cmpsb
incl
stos
stos
xchg
fnstcw
pop
adc
outsb
or
xchg
int3
mov
cwtl
push
jno
dec
push
movsl
xor
and
inc
and
mov
or
push
je
mov
lods
aam
dec
push
mov
xchg
mov
call
mov
push
scas
fisttpl
jae
aam
out
adc
add
push
imul
push
mov
popf
cli
scas
mov
into
int
addl
and
arpl
cmp
out
imul
test
jae
jge
enter
sbb
negl
fildl
es
cmp
int
sbb
in
scas
loop
dec
push
xor
out
push
mov
mov
inc
xchg
iret
mov
aam
jecxz
out
dec
int
pop
roll
or
mov
aad
xor
lahf
pop
fcmove
pop
inc
test
inc
aaa
xchg
or
shrb
mov
cmpsl
jp
mov
or
sbbl
adc
mov
insb
ret
sub
and
xor
mov
adcb
or
sti
xchg
xchg
fwait
pop
or
push
push
daa
jle
xor
add
sbb
pop
sbb
dec
dec
sti
pop
and
lahf
add
leave
cltd
and
xor
popa
test
fsubrs
ret
dec
mov
inc
imul
lcall
jl
jmp
xchg
aam
sub
xchg
xchg
mov
in
daa
sub
pop
aam
daa
imul
xorb
iret
push
insb
xor
push
dec
sbb
imulb
jnp
loopne
inc
push
inc
mov
loope
and
xor
jb
xor
push
dec
push
lahf
mov
pushf
testl
push
orl
xchg
xchg
in
dec
mov
push
sbb
xor
out
aaa
jae
outsl
jnp
cmpsl
repz
mov
mov
mov
xor
sti
xchg
shlb
and
movsb
add
in
xchg
popf
pop
out
cmp
rolb
outsl
mov
scas
out
and
mov
fisttps
mov
iret
push
outsl
inc
sub
sub
rol
popa
test
stos
jb
mov
inc
cmp
inc
lds
mov
call
add
ret
sub
push
ficoms
ror
xchg
and
jg
push
sti
jno
outsb
mov
or
jbe
repnz
je
sbb
mov
cld
loop
xor
jb
insb
movsl
sub
push
sub
ror
pop
movsb
jnp
daa
sub
imul
push
cmp
dec
shrl
stc
jno
dec
in
test
fst
sub
cmp
pop
cmp
popa
iret
bound
jmp
dec
daa
pop
mov
in
insl
dec
sub
sub
aad
mov
ss
mov
pop
repnz
shlb
and
push
or
dec
scas
mov
jp
lret
pop
cs
fnstsw
sbb
mov
ret
cli
call
out
movsl
xchg
pop
sbb
adc
mov
jb
cmp
stos
ss
pop
push
sub
or
icebp
sbb
in
sub
mov
les
xchg
xor
cmc
cmc
and
and
decb
xor
loope
fistpll
je
inc
mov
leave
cld
testb
ja
dec
ss
out
sub
pop
push
pop
add
cmpsb
add
or
outsb
ds
pop
add
into
mov
xor
sub
xchg
and
and
and
or
imul
or
out
hlt
rorb
fs
pusha
ror
das
push
and
bound
jecxz
adcb
push
jne
inc
cmp
bound
je
jbe
cmpsl
int
jle
dec
shrl
push
fs
cli
jb
shll
or
dec
dec
jo
outsl
inc
mov
sbb
imul
sub
and
jmp
gs
push
ret
jg
jmp
cli
stc
dec
popa
test
call
les
not
lahf
call
bound
orl
loope,pn
push
lock
xchg
pop
daa
adc
xchg
sarb
mov
sbb
inc
ds
les
je
bound
xor
sbb
cmpsb
xor
cmp
add
mov
cld
add
add
xchg
fcomp
xor
pop
mov
xchg
add
mov
push
mov
je
hlt
out
fisubrs
mov
lds
dec
inc
dec
or
outsb
ljmp
and
and
inc
sub
xor
iret
les
nop
outsb
loope
adc
and
psllw
push
dec
mov
movsb
arpl
sbb
pop
pop
push
clc
popf
mov
jo
iret
mov
shrb
std
stc
imul
mov
ret
inc
jecxz
cmp
mov
sub
cli
mov
pop
popa
rcrb
clc
mov
in
mov
add
push
cmc
jo
sbb
bound
push
xor
jbe
mov
and
jbe
stos
bound
adc
sbb
sub
and
repnz
xchg
cmp
cmpsl
push
nop
into
pop
pop
lds
xlat
push
dec
dec
push
cmp
inc
sbb
dec
pop
insb
dec
xchg
jp
sub
lret
pop
insb
dec
rcll
cmp
loop
mov
outsb
xor
push
imul
push
jle
mov
mov
inc
das
test
xchg
and
sub
xor
out
pop
dec
push
cmp
popa
inc
and
cmpb
xorps
push
sub
outsb
push
mov
inc
mov
es
cs
add
lret
icebp
lret
lds
sub
or
das
xor
cmp
dec
add
lret
pop
jns
and
je
mov
xor
test
sbb
cmp
xor
or
pop
mov
jo
mov
inc
push
adc
fidivs
movsl
push
int3
idivb
aad
imul
mov
cld
xchg
fiadds
mov
push
aas
rcll
aaa
and
sbb
add
cmp
fbld
cmpsl
scas
inc
mov
std
fldenv
add
pop
xor
andb
jp
outsb
mov
out
lcall
mov
push
fdivr
mov
in
mov
lret
fisubl
divl
or
loop
jl
outsb
mov
dec
popl
add
jnp
sbb
lret
je
and
fiadds
cld
ret
jo
jmp
mov
ja
pop
cltd
mulb
inc
sti
popa
pop
das
outsb
or
outsl
xchg
pusha
mov
ja
jne
in
adc
insl
mov
dec
dec
jl
xchg
daa
adc
inc
std
nop
add
sub
push
test
fdivrl
sbbb
sub
mov
jmp
test
outsl
jecxz
mov
ja
and
int3
push
xor
dec
push
iret
sbb
add
add
repnz
xchg
xor
cmp
mov
aad
in
leave
adc
xchg
loope
stc
movsb
pop
rorb
sbb
inc
popf
mov
pop
insb
idivl
xchg
cmp
xchg
jbe
aam
jne
pop
fdivrl
xor
add
lock
mov
jge
sub
iret
add
and
pop
add
jbe
pop
sub
sarl
dec
mov
into
cmc
jo
xlat
ljmp
xlat
mov
cmp
mov
popa
fwait
xchg
jge
test
cmp
jp
insb
inc
inc
rorb
das
aad
testl
pop
test
sti
sub
mov
jbe
mov
repz
pop
push
or
insb
cmp
enter
adc
divb
jbe
adc
pushf
cwtl
mov
sub
mov
lea
mov
std
stos
scas
sbb
mov
incb
add
ljmp
stc
pop
jmp
mov
mov
inc
jnp
fsubp
dec
cmp
push
add
add
pop
roll
aad
inc
mov
ret
das
fimuls
cmp
movsb
jge
cmp
add
pushf
jg
inc
shr
aas
les
cmp
inc
push
mov
sub
cwtl
rcrb
call
add
xlat
and
aam
sub
insb
and
test
cmp
sub
adcl
imul
cmpsl
lock
cmp
imul
bound
mov
sub
cmp
xchg
adc
mov
movsl
add
rcrb
subb
pop
pop
add
lea
push
mov
jecxz
aam
dec
shr
jnp
icebp
test
pop
fs
cwtl
rcrl
jns
filds
mov
fwait
cmpsb
ja
roll
pop
push
nop
inc
and
cli
test
daa
imul
cmp
scas
divl
or
bound
int
int
pop
ss
cmpsl
add
pushf
pop
pop
cmpsb
stc
mov
cmpsl
push
xchg
pop
popa
mov
add
sub
inc
mov
dec
inc
pusha
inc
aam
xchg
dec
add
lahf
adc
int
into
mov
pop
jnp
sarb
add
sahf
push
fldenv
outsl
popf
jb
sbb
pop
xchg
rolb
lcall
add
imull
adc
iret
sbb
test
nop
iret
cmc
xor
xchg
push
stc
mov
inc
les
pop
dec
ja
addr16
dec
imul
les
xchg
ret
scas
pop
cmp
idiv
xchg
jo
popa
cmp
xchg
dec
fs
jae
and
or
mov
int3
fcmovb
jnp
bt
lret
and
cmp
jmp
lret
ljmp
std
test
inc
dec
call
push
and
sti
jns
movsb
dec
ret
cmp
sub
inc
mov
or
xor
or
hlt
pop
ret
in
insl
daa
sub
sti
in
mov
xchg
pop
cs
nop
or
mov
pusha
imul
jb
add
dec
test
mov
imulb
mov
lock
mov
stc
xchg
adc
popf
xchg
fldenv
call
in
fnstenv
mov
mov
jecxz
loop
xchg
push
jnp
xor
fsubl
inc
jne
test
pop
or
shl
sti
xchg
subl
fcoml
or
add
sbb
fsubrl
and
xor
push
jmp
jns
sarb
fldenv
or
lret
push
ror
jbe
aaa
scas
inc
js
cmpsb
cmp
hlt
adc
aas
jle
jecxz
enter
cmp
sub
shlb
mov
movsb
xor
xchg
jle
cmpsb
mov
gs
enter
add
mov
inc
cmp
sub
mov
pushf
mov
in
and
pop
mulw
enter
les
cmpsb
mov
adc
inc
sbb
jnp
lds
xchg
lret
fsts
mov
and
outsl
sub
mov
jp
jg
mov
adc
fsubs
adc
xchg
insb
push
xchg
dec
cwtl
in
mov
and
pop
jno
leave
js
aaa
or
push
out
sbb
ja
xchg
ret
xchg
rorb
push
cmc
jb
sub
int3
xchg
aad
test
sub
push
cmpsl
in
mov
shll
loopne
mov
xchg
loope
mov
dec
inc
push
jbe
mov
sbbl
fdivrl
mov
pop
repz
and
add
stos
sbb
sub
das
scas
dec
mov
adc
les
loope
cld
inc
mov
xchg
ss
mov
mov
es
jb
aad
pop
sbb
call
fs
lea
and
jge
xchg
mov
sub
inc
push
fistps
or
mov
imul
imul
int
push
add
cli
push
or
adc
test
or
in
ret
jmp
cwtl
daa
fidivs
cwtl
movsb
cli
stc
dec
cmp
ja
pop
out
test
es
cmpsl
cvtdq2ps
sub
jecxz
ds
xor
mov
aaa
lret
adc
mov
xchg
data16
and
and
or
add
fidivl
ljmp
ljmp
scas
pop
mov
mov
insb
xchg
jb
cld
out
lahf
shrb
push
jnp
dec
arpl
cmp
lea
stc
pop
or
sbb
int3
mov
mov
mov
in
sbb
push
sub
mov
xchg
push
mov
fisubl
sub
aas
push
add
mov
loopne
cmpsl
jmp
mov
jecxz
lock
arpl
lret
fistpll
ret
jo
fists
jbe
adc
xor
std
dec
fs
repz
push
fsubrp
xchg
xchg
and
aam
js
addl
orl
inc
movsb
pop
daa
xchg
add
add
pop
test
add
mov
cwtl
addr16
popa
lret
scas
out
or
push
inc
xchg
pause
cmp
mov
sbb
pushf
xor
xchg
shlb
push
xchg
mov
lcall
mov
shlb
or
out
sub
sbbl
pop
lock
mov
cltd
xchg
jno
dec
jae
xor
adc
jno
stos
xor
shll
sub
push
jl
lds
sahf
xchg
jle
and
lcall
jns
dec
jp
mov
pop
decl
jl
pop
adc
jp
push
outsb
and
lret
xlat
lret
loopne
xor
psubq
pushf
pop
repz
push
and
fidivrs
inc
out
pusha
inc
xlat
or
inc
ffreep
in
mov
or
sbbl
cmp
jne
jbe
mov
pop
adc
mov
and
push
outsb
call
mov
mov
int
scas
jae
sahf
fcmovb
repnz
and
into
or
dec
aaa
adc
fmuls
cs
insl
push
loopne
dec
xchg
xchg
scas
lods
dec
mov
cmp
fistpll
rorb
lcall
ljmp
lret
scas
stos
sub
inc
cmp
insl
push
out
lods
xchg
xchg
rcll
cltd
fmulp
xchg
dec
jg
scas
inc
stc
mov
push
xchg
pop
or
test
push
push
sbb
push
or
popl
arpl
and
iret
andl
testb
aad
lock
mov
cmp
inc
imul
mov
imull
add
loope
sub
xor
shll
push
jmp
add
add
and
sbb
mov
and
inc
mov
mov
inc
inc
push
out
sub
xor
push
inc
add
pop
inc
insb
pop
pop
pop
jecxz
and
out
in
adc
push
mov
dec
daa
shrl
and
pop
sbb
or
xchg
adc
mov
add
aad
ret
jle
imul
pop
mov
jl
rorb
xlat
xchg
sarb
dec
ljmp
dec
ret
jl
cmc
out
dec
nop
popa
pushl
outsb
icebp
push
fnop
int3
loop
flds
in
loop
in
test
loopne
icebp
inc
push
movsb
jo
sub
iret
lea
jne
sub
cmp
mov
dec
xchg
push
jbe
pop
cwtl
xchg
mov
xor
xchg
dec
mov
je
hlt
out
dec
jbe
fcompl
add
out
sbb
pop
sub
push
jge
addr16
jecxz
mov
fs
stc
pop
sbb
and
out
or
jge
dec
icebp
fs
pop
add
mov
cs
jae
sub
popf
sub
decb
dec
dec
scas
fldl
and
jo
clc
sub
call
jb
repz
loopne
cmp
jecxz
sub
jmp
or
cld
test
cwtl
jo
inc
mov
mov
xchg
stos
js
or
sub
mov
into
stc
jb
loopne
fwait
cmp
push
icebp
scas
loop
pusha
js
dec
leave
mov
adc
movb
gs
adc
push
and
or
jne
mov
inc
sti
inc
pop
sub
jb
cmp
mov
pop
mov
or
es
sub
inc
mov
insb
ja
int3
pop
fdivrl
pushf
push
dec
pop
push
cli
mov
pusha
dec
repnz
dec
lds
stos
loope
imul
and
cmpsb
sbb
mov
xchg
cs
cs
xor
jmp
pushl
cmp
ss
xor
add
push
cmpsl
push
mov
pop
stos
clc
pusha
icebp
jge
mov
mov
cmp
ret
adc
fisttpl
inc
cmpsb
sbb
stc
cwtl
adc
dec
repz
cwtl
pushf
ret
imul
insb
sub
pop
rolb
jae
push
dec
movsb
imul
outsl
jno
hlt
lods
push
jno
sub
mov
xlat
ret
ss
jmp
push
add
aad
mov
lcall
inc
cmp
sub
pusha
pop
xchg
arpl
addr16
mov
push
addr16
xor
xchg
adc
push
imul
andps
mov
jmp
pop
pop
dec
stc
stc
mov
lret
lret
and
jp
add
and
movsb
lods
lret
add
xchg
test
lret
out
jbe
dec
enter
in
mov
jecxz
cmp
aas
sbbl
and
mov
inc
sar
fistl
xchg
cmpsb
je
hlt
xor
leave
mov
rcrb
fwait
aaa
cmp
xchg
inc
xor
dec
mov
pop
pusha
dec
mov
cld
lds
xchg
adc
jno
cs
aas
cmp
int
jg
popa
hlt
fsubrl
es
hlt
fwait
pop
fcoms
jbe
inc
arpl
inc
loopne
fstpl
xchg
or
xor
jns
or
dec
dec
sbbb
push
or
je
mov
jge
test
sub
icebp
fsubrs
xchg
dec
mov
mov
adc
in
and
dec
ja
fcomps
jle
in
xchg
xchg
add
pushf
lahf
mov
jge
dec
lahf
ja
add
sub
sbb
mov
andb
jns
and
cmp
cmp
test
cmp
mov
aam
sti
into
xor
aaa
aam
xor
leave
sbb
cwtl
mov
aas
fistps
data16
test
out
fcoml
aaa
or
xchg
and
cmp
push
mov
and
jbe
idivb
addb
in
lret
ljmp
cmp
pop
cmp
cmpsb
aas
cmp
cwtl
dec
mov
sub
mov
push
jns
or
adc
mov
push
sbb
imul
push
leave
rorl
sub
in
xor
test
sub
xchg
je
mov
shl
ds
popf
les
js
push
xor
or
icebp
lret
xchg
loope
push
adc
dec
es
sub
stc
and
lret
cmp
xor
aad
lods
cltd
fninit
mov
xchg
enter
js
std
dec
inc
sub
inc
mov
icebp
xchg
and
out
or
xchg
into
inc
std
or
inc
sbb
push
sub
cltd
pop
sub
call
jnp
and
dec
mov
push
lods
mov
pop
or
add
xor
fwait
push
adc
pop
lret
mov
icebp
mov
icebp
jp
push
pop
mov
movsb
add
out
arpl
int3
aaa
push
in
repz
dec
es
les
aas
or
iret
das
imul
cwtl
push
rorb
push
dec
mov
movsl
adcl
out
fdivr
jmp
cli
les
in
jl
xchg
and
lret
bound
xchg
ss
cwtl
sbb
ud1
push
and
scas
mov
ret
fnstenv
mov
pop
sbb
add
add
add
das
lret
dec
and
bound
fwait
cmp
mov
xor
aas
add
xor
lods
and
repnz
adc
adc
popf
cwtl
sarl
lcall
add
pushf
mov
sub
cs
jno
jnp
fnstenv
loope
pop
or
xchg
jns
insl
repz
mov
daa
mov
sub
fidivrl
sbb
incl
cli
cmpb
outsb
outsl
nop
fstpt
insb
inc
cmp
cmp
repz
xor
add
int
lock
sti
clc
popl
pop
fistpll
aam
cmp
sbb
cmp
inc
jbe
mov
and
ja
jmp
cmc
lahf
mov
mov
push
aaa
call
pushf
xchg
mov
cmpsl
orb
mov
dec
iret
pushf
add
mov
out
pop
fwait
repnz
imul
insl
jge
sahf
pop
daa
xchg
sbb
sar
cmpsb
shll
mov
in
cwtl
sub
in
mov
fmull
enter
cld
xor
xor
pop
out
out
inc
scas
sub
into
pop
imul
movsl
mov
sbb
pop
cmc
ficomps
mov
pop
sbb
add
out
jne
inc
test
cltd
cmp
fistpl
int3
nop
and
and
cltd
pop
add
cmpsb
xlat
xor
pop
mov
pop
cmp
call
cs
cmp
int
mov
inc
or
jb
mov
pop
pop
sub
sarb
xor
xchg
test
xchg
adc
cmpsb
fsubr
xor
test
xlat
pop
xchg
sub
iret
aas
sbb
push
negl
or
inc
mov
xlat
and
pop
das
mov
stc
aaa
push
jecxz
cmp
xchg
xchg
add
cmp
inc
enter
cmc
lret
lods
dec
jns
je
or
and
ret
outsl
pop
pushf
movsb
out
rcrl
lahf
and
ja
add
rorl
mov
adc
jmp
call
adc
sub
in
addr16
xchg
in
cmp
jmp
xchg
xchg
jbe
loop
xchg
push
adc
pop
icebp
sbb
add
imull
push
jnp
mov
push
cmp
mov
dec
and
sahf
and
mov
fs
push
repnz
jb
fcompl
xor
dec
ljmp
xchg
and
push
inc
and
insb
inc
inc
inc
dec
mov
push
or
mov
bound
jle
out
xchg
add
in
cltd
daa
push
loope
in
test
pusha
scas
mov
jnp
and
sub
add
cmc
mov
jb
or
outsb
loopne
push
dec
pusha
shlb
and
in
or
xlat
cltd
push
jo
cmc
daa
and
in
daa
scas
lahf
add
push
dec
mov
mov
out
outsl
punpckhdq
inc
iret
and
xor
xchg
and
lds
dec
aas
aas
sub
cwtl
dec
and
pusha
loop
and
das
push
and
cld
outsb
jp
fstps
pop
outsb
or
rcr
dec
cld
cmp
or
idivb
mov
pop
filds
adc
insb
sbb
stos
pop
gs
pushf
cmp
xchg
das
imul
daa
fiaddl
aas
jmp
fcmovbe
cmp
sbb
hlt
dec
dec
nop
push
repnz
leave
rsm
sub
mov
add
sbb
loopne
and
lcall
mov
fnstsw
inc
test
add
jo
jmp
sub
add
lds
pop
dec
into
sub
les
loope
add
push
scas
ja
cmp
movsl
ljmp
dec
popa
dec
lock
mov
jnp
xchg
bound
mov
xor
dec
cli
insb
leave
push
out
dec
pop
add
mov
fbld
clc
out
jns
inc
insb
movsb
sub
decb
call
ds
aaa
repnz
inc
xchg
sbb
test
jle
rorb
mov
call
repnz
iret
push
jmp
inc
push
jmp
dec
lds
or
cmp
aad
iretw
push
fcoml
xor
add
lock
dec
pop
outsl
out
mov
mov
test
push
outsl
mov
xchg
pop
fimuls
nop
add
push
repnz
repnz
scas
addl
xchg
lahf
xor
xchg
sub
fistl
or
xor
push
arpl
mov
das
ficompl
lods
in
mov
pop
fwait
outsb
insb
pusha
or
inc
push
inc
push
add
pop
lret
sbb
imul
push
inc
scas
mov
inc
daa
in
mov
sbb
aaa
xor
jmp
sbb
mov
in
jecxz
dec
outsl
cmp
lock
std
cmp
fwait
xchg
out
or
push
nop
cs
cltd
cmp
fimuls
test
cmp
push
jno
mov
loop
or
and
adc
outsb
pop
push
jnp
push
sub
fstps
cli
in
jecxz
push
test
xor
mov
mov
add
out
xchg
jp
xchg
pusha
stc
pop
jmp
mov
jg
dec
jg
mov
faddl
xor
add
inc
mov
nop
push
leave
xchg
stc
addr16
cmp
fistl
and
in
outsb
dec
mov
jae
fldl
sbb
int
lret
and
stos
push
out
cmp
push
dec
dec
mov
out
pop
popf
sti
or
xlat
xchg
ja
decl
jo
icebp
and
sbb
faddp
pop
inc
adc
dec
cld
cmp
push
mov
dec
inc
mov
ja
add
pop
fwait
pop
pop
jb
inc
pop
clc
xor
mov
jo
dec
push
xor
xor
push
push
sub
sub
sbb
ljmp
jo
sub
fs
and
fstps
call
icebp
jl
xor
mov
sbb
aas
cmp
sbb
fmuls
sub
push
loope
xor
fildll
xchg
ljmp
sarb
or
sbb
fldt
dec
cmp
pop
xlat
jl
int3
int
sar
stos
jg
adc
out
lret
xchg
pop
xchg
add
and
std
cmp
pop
outsl
sbb
daa
jecxz
mov
ret
out
fmulp
jnp
pushf
shlb
push
fldln2
loope
sti
jne
das
xchg
lock
scas
xor
mov
pop
setb
shr
cmpsl
mov
ljmp
pop
in
cmp
arpl
inc
aaa
filds
adc
das
bswap
loopne
xor
push
add
push
xor
lahf
xchg
cmp
sub
add
dec
mov
cmp
inc
pushf
xchg
dec
in
scas
jb
in
lcall
fs
fsubrl
mov
mov
cs
cs
sbb
out
and
jbe
out
lret
int
fwait
mov
xorb
dec
aad
icebp
sbb
mov
dec
xor
mov
int3
movsb
imul
inc
test
mov
pop
repz
test
cmp
mov
cld
dec
fst
cmp
push
ficompl
adc
test
mov
repnz
enter
jecxz
nop
hlt
repnz
pop
decl
inc
cs
xchg
test
xor
fistl
jns
imul
jns
out
or
pop
cmpsb
jns
pop
dec
loopne
int3
popf
loope
mov
mov
adc
shl
movsl
adc
dec
lods
push
xchg
cmp
repnz
mov
sub
cs
push
pop
xor
lahf
adc
sbb
add
add
mov
inc
pop
and
pop
pop
xchg
les
add
dec
mov
in
inc
filds
sbb
imul
add
fs
jl
push
mov
jle
mov
scas
leave
mov
lea
dec
push
xor
add
adc
dec
shrb
fcmovnb
repnz
cmp
adc
mov
loope
mov
cmc
movsb
or
xchg
loop
cmc
or
xchg
cltd
mov
mov
mov
inc
imul
cli
dec
movsl
cli
adc
mov
mov
cmp
jo
lods
bound
jp
imul
es
std
mov
pop
daa
lods
testb
fndisi(8087
leave
dec
sbb
nop
jne
and
mov
fninit
in
jge
adc
pop
or
xor
xor
push
sub
movsb
std
loope
ja
or
sti
sbb
add
push
inc
mov
sarb
add
clc
std
cli
jbe
call
mov
movsl
push
and
test
outsl
and
aas
jae
mov
notl
mov
inc
rep
sub
imul
popf
int
dec
sbb
fsubrl
movsl
cld
dec
cmp
scas
or
iret
lock
cmp
add
xorb
les
sbb
int
mov
out
test
mov
adc
icebp
xchg
lahf
pop
jmp
in
fistpll
sub
std
dec
out
mov
outsl
outsb
mov
loopne
xor
cmp
ja
imul
cmp
orl
fdivrs
pushf
arpl
stc
adc
pop
jbe
jae
dec
hlt
sub
xchg
aaa
inc
dec
sti
lea
xor
cmpsl
ret
es
adc
or
lods
jmp
js
outsb
mov
jle
pslld
add
js
mov
out
stos
pop
sbb
cvtpi2ps
lret
sti
int
imul
sti
jne
fmul
mov
pop
sar
imul
fnsave
mov
into
int
dec
sub
dec
xor
insl
fbld
mov
jmp
cli
fldt
jl
mov
data16
cli
and
inc
arpl
notl
jnp
push
movsb
loope
cmp
mov
movsb
ds
adc
ret
sub
rol
mov
push
scas
and
dec
int
jp
inc
into
scas
das
lcall
xchg
cld
xor
insl
xor
add
sbbb
inc
out
mov
fiadds
ret
cmpsb
clc
outsb
adc
pop
pop
in
fistpll
int
mov
adc
push
and
data16
mov
jno
outsl
pusha
mov
mov
lret
mov
fprem1
jp
adc
inc
repz
loope
popf
data16
lahf
aas
pop
pusha
nop
and
cmc
stos
clc
mov
push
dec
ror
cmpsb
xchg
jg
dec
daa
pop
sahf
push
sub
jp
dec
pop
lahf
cmp
int
mov
arpl
mov
aad
stos
imul
inc
stos
mov
jp
jb
jecxz
adcb
loopne
mov
lock
pop
aas
fstl
mov
inc
in
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
push
jl
jge
sub
cmp
std
xchg
cwtl
les
mov
sbb
sarl
in
mov
stc
and
adc
ds
add
sbb
das
dec
stos
xor
jecxz
dec
xor
add
iret
jno
mov
jl
sbb
cs
add
jne
cmp
loop
xchg
push
cltd
lock
dec
ret
call
mov
repz
rorl
mov
and
shrl
pop
inc
lret
in
sbb
sti
scas
jle
inc
shll
test
add
mov
out
fadd
repnz
pop
jmp
icebp
lahf
jecxz
mov
lret
jae
hlt
je
clc
sub
lea
adc
test
mov
cmpsl
fsubl
pop
test
sub
fisttps
xor
movsb
mov
fimuls
add
popa
test
pusha
cmpsl
mov
push
sub
push
dec
hlt
out
out
les
test
cld
stos
cli
rclb
in
addr16
and
test
test
sub
add
push
rclb
adc
gs
jae
movl
cmpsb
cmp
scas
and
push
js
js
push
clc
les
sub
dec
in
in
fwait
sub
cmp
xor
xchg
ret
sub
mov
jb
sbb
je
xor
mov
jmp
mov
out
or
inc
scas
pop
testb
dec
out
cmp
inc
cwtl
mov
jecxz
add
push
and
clc
jno
xor
pop
aam
orb
push
push
pop
cmpsb
repnz
inc
cmpb
xor
imul
cmp
lea
ret
and
aaa
movb
nop
adc
fadds
sahf
sbb
int3
xchg
mov
das
imul
add
repnz
mov
push
repnz
das
push
outsl
pop
ss
icebp
into
test
jl
aaa
or
addr16
xchg
xchg
lret
cld
rcrb
inc
stos
lods
sub
jl
iret
repz
cwtl
lahf
push
xor
jg
out
mov
push
xor
lret
cmp
mov
int
bswap
in
rclb
mov
inc
clc
push
xor
ljmp
adc
lods
add
jb
adcl
test
cmpsb
clc
mov
dec
push
mov
adc
and
stos
push
in
add
outsl
mov
push
out
rolb
xor
mov
sub
adc
rcrb
fdivrl
out
xor
xchg
jmp
cmp
inc
add
pop
stc
test
call
mov
push
pop
lea
mov
negl
push
aad
jns
xor
mov
cs
mov
orb
in
stos
int3
add
inc
push
int3
daa
adc
outsb
sub
std
cmp
dec
nop
in
cmpsl
xchg
xchg
cwtl
ds
repz
add
mov
mov
or
pop
test
rcll
cld
sar
lods
dec
cmpsl
les
popa
dec
add
jl
pop
sbb
mov
dec
push
push
ret
mov
adc
je
sbb
push
xor
test
cltd
f2xm1
mov
sub
or
loop
adc
movl
stos
push
jne
cmp
adc
arpl
or
pop
mov
out
inc
sbb
cwtl
mov
ds
mov
ret
add
push
mov
or
mov
mov
jno
rcrl
movsb
jo
bound
aam
stc
or
cmc
in
scas
andb
dec
push
mov
xchg
jno
xchg
or
xor
notb
mov
mov
sbb
and
adcb
jae
gs
push
or
jns
out
sbb
inc
jns
ljmp
out
shll
xchg
cmp
aas
stc
lds
inc
or
int3
inc
outsb
ja
cmpsl
mov
repz
lcall
xor
inc
jmp
push
pop
inc
cmp
daa
cmp
cld
pop
arpl
jbe
in
cld
inc
xchg
mov
ja
or
mov
cmp
ss
scas
sbb
add
movb
sbb
and
mov
xor
inc
xchg
pop
jb
movsl
int3
push
sti
int3
sbb
mov
sbb
into
scas
test
mov
xor
shll
or
sbb
faddp
mov
and
lret
xor
in
xor
lock
pop
sbb
es
mov
cmp
cld
popa
push
in
cmp
jno
inc
aas
sub
mov
aas
inc
push
repnz
pop
daa
xor
jns
sub
call
mov
fs
enter
sub
mov
and
or
jb
mov
rorb
xor
xorl
stc
pop
div
and
mov
xchg
inc
and
pushl
fucomip
roll
int
jne
mov
inc
stc
pop
in
or
addb
push
dec
shlb
aam
lods
or
in
imul
sub
mov
xchg
nop
stc
enter
and
inc
pop
dec
pop
pop
dec
fstps
outsl
lahf
add
imul
cmpsb
pop
sub
outsb
inc
jge
inc
fsub
jge
pop
out
sbb
mov
daa
xchg
inc
in
subb
pop
adc
or
pop
dec
clc
or
stc
cmpsl
mov
jle
pop
jne
inc
sub
sbb
mov
push
stc
and
sbb
or
mov
mov
outsl
lahf
movsb
test
subb
dec
loope
mov
jnp
mulb
test
mov
cs
fisubs
shlb
lds
lock
mov
cmp
in
xchg
adc
int3
xor
cltd
ljmp
add
jb
sub
xchg
daa
sbb
or
pusha
ret
mov
into
cmp
movsb
xchg
lods
cs
ds
out
call
sarl
lds
insl
mov
fiadds
pmaddwd
or
outsl
cmpsb
lahf
daa
fs
or
xor
mov
mov
bound
call
stc
add
add
mov
mov
insb
cmpsl
fcmove
dec
xchg
fildll
lds
pop
loop
sahf
jle
fbld
cmpsl
jno
in
jmp
pop
cmp
and
adc
or
mov
cmp
repnz
les
in
aam
and
ret
push
or
fs
xchg
jl
dec
mov
mov
mov
push
xchg
popa
sub
negb
sbb
sbb
xor
sbb
ret
push
std
adc
xchg
push
lahf
leave
adc
mov
cmp
pop
adc
mov
cmp
mov
jb
stc
imul
or
pushf
lea
sahf
cs
fsubs
insb
mov
xchg
shlb
push
clc
mov
mov
sbb
inc
hlt
pushf
movsb
push
pop
mov
push
jnp
dec
dec
sub
outsl
bound
jae
and
cld
xor
bound
sbb
sbb
leave
fs
jg
add
dec
hlt
ret
js
or
iret
add
dec
and
push
call
popa
adc
idivb
sti
stc
inc
jne
sbb
push
insl
fst
ljmp
cmpsl
xlat
adc
aam
xor
int3
stos
sbb
test
in
jae
pop
inc
out
add
xchg
xchg
mov
aam
push
lcall
shll
sub
ret
pop
pop
and
out
fisttpll
lods
outsl
or
add
lret
insl
std
mov
mov
mov
pusha
sbb
aaa
push
jbe
in
cmp
mov
enter
int3
xor
loope
lds
inc
cmp
xor
xor
adc
xchg
pop
repnz
arpl
pop
jno
jle
out
or
aas
sub
out
cs
pop
add
mov
push
ja
jecxz
sub
imul
stos
cmp
test
jle
add
sbb
push
sbb
stc
ss
imul
dec
xlat
out
xchg
inc
push
push
jnp
in
lret
out
mov
mov
repnz
add
out
call
xor
shlb
push
sbb
in
adc
lds
and
enter
jb
jp
jno
and
aas
jge
dec
cmp
enter
xchg
int3
pop
sub
jbe
cmp
loop
xchg
jae
and
mov
adc
aad
dec
xlat
addr16
arpl
sub
push
xor
pop
mov
pop
pop
testl
mov
ret
push
fsubrs
adc
insl
cmpsb
xchg
xor
aaa
dec
stos
inc
imul
ds
or
movb
ds
mov
lcall
aas
das
loop
outsb
add
pop
xor
lea
dec
lods
xchg
and
fsubrs
xchg
jmp
push
xor
out
cmpsl
ljmp
data16
mov
xchg
stc
ret
leave
sbb
sbb
or
call
out
movsl
pop
pop
inc
push
pop
fldt
mov
xchg
outsl
mov
mov
and
aad
xchg
ret
cld
and
aaa
test
cmp
xchg
jns
xchg
out
push
jne
push
stc
jg
inc
xchg
mov
lahf
sub
fcompl
xor
inc
test
iret
lret
cmp
xorl
addb
xorb
sub
in
dec
xchg
jp
pop
rcll
mov
jp
arpl
jge
jo
mov
jcxz
std
mov
jno
aam
mov
fmuls
das
sarl
pop
adc
es
aas
dec
ja
xor
sbb
mov
sbb
xchg
cld
out
fistps
push
push
jmp
stos
dec
and
pusha
jno
add
stc
out
mov
std
loop
mov
out
xlat
ja
movsl
and
movsb
test
and
push
sbb
in
pop
repnz
movsb
enter
mov
pop
xchg
sub
fldcw
sbb
subb
into
jno
cmp
scas
jns
mov
repz
mov
ljmp
xchg
rorl
adc
cmpsb
pop
jae
push
jge
push
mov
push
hlt
lcall
loope
sub
call
mov
stc
call
in
movsb
out
inc
cmp
dec
inc
lods
repnz
scas
lcall
test
sbb
push
sub
aaa
jl
arpl
xor
daa
sbb
sbb
pop
adc
jbe
std
iret
mov
gs
adc
jno
lds
fucomp
xlat
or
arpl
repnz
sahf
xor
mov
imul
insl
pop
clc
mov
std
xchg
aas
and
or
ds
inc
mov
outsl
add
dec
dec
int
push
pop
imul
adc
xor
jge
cltd
lret
sbb
mov
ja
pop
and
loopne
pop
je
iret
jns
xor
rcr
xor
add
das
movsl
in
lret
and
cmp
pop
push
xorl
xor
ljmp
jb
notb
gs
sub
jmp
mov
mov
das
push
outsl
sbb
cmp
xchg
dec
je
iret
dec
dec
pop
mov
sbb
mov
mov
and
pop
mov
lds
pop
push
cmpsb
xchg
mov
mov
mov
add
negl
jp
and
ficompl
test
shll
pop
cld
mov
jmp
cmp
lcall
xchg
xor
daa
insl
sbb
ss
add
cmp
aaa
mov
inc
es
sbb
mov
sub
adc
lea
add
mov
adc
pop
xchg
push
cld
stc
mov
fsts
push
mov
hlt
jge
pavgb
not
jbe
xchg
sti
dec
incb
sbb
cmpsb
dec
dec
mov
sbb
inc
sti
inc
aam
pop
mov
mov
xor
pop
xor
pusha
int3
cmpsb
mov
xor
mov
jp
ds
dec
inc
dec
add
xchg
enter
push
mov
jl
jl
or
jns
pop
loop
stos
popa
sbb
push
ds
mov
jo
and
add
xor
enter
lahf
jbe
add
flds
loop
leave
dec
sahf
iret
xchg
mov
and
mov
add
les
xchg
xor
mov
add
shrl
inc
xlat
dec
lds
adc
movsl
jno
push
jecxz
or
fcmovnu
nop
aas
outsb
bound
test
xchg
xor
pop
jnp
push
bound
movsl
mov
jp
aaa
cli
movsl
dec
cmpb
jg
or
xor
test
daa
cmpl
pusha
mov
or
popf
lret
roll
mov
xor
divb
and
orb
mov
mov
push
inc
cmp
ja
rcll
flds
pop
sbb
mov
in
inc
push
mov
sub
roll
sub
adc
jp
bound
cli
outsl
adc
push
mov
xorl
cmc
call
ret
movsl
into
sub
xchg
push
sbb
inc
or
pop
push
adc
xor
lods
lods
xchg
lods
xchg
addr16
xor
out
cmpsb
insl
inc
sub
jno
scas
xor
sub
add
lods
out
stos
into
jl
and
adc
ljmp
loopne
ret
test
dec
mov
jne
push
int
std
lret
sub
xor
enter
adc
jl
adc
add
sub
sbb
add
jle
lcall
pop
inc
cmp
mov
sbb
xor
push
pushaw
inc
mov
xchg
or
cmp
adc
loope
cmp
fsub
dec
push
fdivrs
shl
iret
lock
lcall
sarb
jno
ficompl
into
pop
cmp
test
scas
inc
jecxz
cmpb
insb
movsb
and
xor
pusha
mov
jge
jg
gs
lret
xlat
insb
push
dec
in
ret
roll
repz
mov
pop
aad
aaa
sbbb
ljmp
lea
fdivrp
adc
call
mov
aas
jo
cli
insb
std
cld
xchg
cmc
xor
mov
dec
inc
inc
aaa
adc
out
dec
pop
inc
sub
cwtl
cmpsl
and
mov
pushf
xor
orl
mov
aaa
and
arpl
xchg
inc
fmulp
mov
in
mov
dec
fs
pop
and
enter
inc
mov
sbb
out
sbb
dec
shl
roll
dec
xor
adc
sub
outsl
stc
xchg
sub
or
add
sahf
fstps
xchg
sbb
repz
lahf
xor
push
pop
lahf
cmpsl
jecxz
out
sbb
sub
and
jb
cmp
pusha
subl
paddw
loop
inc
sbb
addl
dec
testb
mov
dec
sub
pop
sbb
sbb
shrl
sbb
sahf
call
arpl
mov
cmc
or
lea
ret
dec
dec
mov
mov
cwtl
ret
fcmovu
in
mull
or
mov
and
fisubrs
jmp
and
int3
mov
pop
leave
push
or
xchg
out
lcall
es
mov
mov
test
int3
push
lea
iret
dec
or
sub
loop
cltd
cld
nop
test
pop
mov
adc
sub
jae
ljmp
lods
xchg
push
mov
insl
mov
orl
xor
adc
xchg
lock
fnstsw
mov
fwait
adc
out
enter
mov
mov
jp
fisttpll
lds
repz
int
cmpl
fisubl
popf
fcmovnbe
jg
mov
cmpsl
or
sti
clc
jg
sub
dec
mov
imul
in
pop
jmp
inc
daa
mov
inc
mov
add
aaa
xlat
mov
xorb
mov
cmp
shll
and
int
cld
sub
pusha
ja
inc
jae
pop
scas
daa
xor
js
mov
lret
push
shlb
fidivrs
out
xchg
push
aad
adc
in
mov
push
int
jge
adc
lock
scas
mov
push
insb
sbb
scas
and
xchg
cmp
mov
repnz
out
pop
sbb
fbstp
or
movsl
dec
ljmp
cs
aad
fists
add
xchg
mov
push
push
xor
aad
sbb
add
out
test
insl
xchg
je
icebp
fadds
mov
gs
push
mov
dec
adc
scas
fimuls
scas
push
gs
mov
inc
add
aam
dec
outsb
adc
movsb
in
inc
or
mov
xchg
lods
cmpb
push
hlt
jle
outsl
xlat
adc
repz
pop
cltd
data16
and
pusha
pop
imul
xlat
rcrb
xor
cld
mov
sti
xlat
add
nop
fabs
outsb
pop
inc
cmp
shlb
push
adc
lret
jno
sub
mov
mov
xchg
in
mov
fldt
add
push
or
inc
movsl
out
inc
lock
sub
adc
pop
push
xlat
sbb
jecxz
sbb
iret
cmp
push
mov
insl
into
hlt
push
cs
out
xchg
xor
icebp
mov
and
stos
add
mov
out
mov
adc
push
rorb
outsl
adc
rclb
pop
data16
xchg
mov
fisttpl
pop
push
add
xor
scas
sbb
daa
xor
das
pop
sahf
mov
or
add
adc
or
mov
pop
xor
aas
in
imul
cmpsb
gs
jbe
adc
syscall
cmpsl
movsl
stos
dec
or
inc
test
test
mov
xchg
rorb
mov
cmp
pop
dec
xlat
psllq
fs
daa
clc
add
push
ja
mov
xlat
mov
jg
mov
bound
mov
inc
ret
inc
testl
pop
dec
lret
cmp
stos
xchg
sahf
pop
pusha
jmp
dec
sbb
in
test
fldcw
fidivrl
aaa
or
sbb
fistps
in
mov
loope
mov
aam
cwtl
jbe
mov
push
xchg
pop
nop
in
clc
pop
mov
push
int
sub
add
cs
ss
xchg
jg
add
gs
outsl
push
lds
cs
outsl
xor
push
add
sbbb
iret
add
or
sti
pop
aas
fisttpl
in
xor
inc
or
pop
in
inc
mov
leave
jp
stos
or
fisubl
adcl
push
in
dec
lret
xor
ja
add
lods
lea
in
test
mov
pop
mul
dec
pusha
adc
sub
pop
fs
push
sahf
cmp
cmp
dec
xor
cs
gs
mov
shlb
pop
leave
insl
scas
and
mov
das
mov
clc
in
xor
pop
jg
and
jmp
pop
in
mov
or
and
jge
and
and
scas
shlb
ret
jnp
xchg
insb
add
push
dec
leave
sbb
pop
test
daa
call
dec
imul
add
in
outsl
repz
inc
sbb
fbstp
xchg
dec
lea
ss
dec
push
adc
outsl
or
mov
jl
add
adc
jecxz
and
lahf
and
lret
fwait
jnp
arpl
cmp
ss
ret
and
subb
dec
outsl
adcl
mov
jae
imul
mov
jp
fwait
xor
cmp
xor
sbb
jno
std
push
adc
div
inc
aaa
nop
repnz
and
xchg
lods
rol
mov
xchg
fmull
scas
rcrl
bound
mov
fucomip
xchg
adc
push
iret
ss
scas
inc
fildl
in
loopne
neg
inc
fmull
and
sbb
xor
dec
xchg
into
pop
mov
xchg
xchg
xor
aaa
mov
xchg
pop
jne
std
pop
pop
cmp
test
mov
int
push
mov
cmp
dec
adc
fst
pop
mov
push
mov
imul
or
xchg
pop
fsubrl
xor
push
xchg
mov
lea
xchg
idiv
pushf
ret
lock
je
push
mov
out
xchg
push
inc
pusha
cmp
mov
adc
frstor
int
lret
and
mov
mov
lcall
mov
push
fcomps
lret
add
and
jae
lahf
sub
lahf
mov
in
jbe
nop
int3
cmp
cmp
and
xchg
imulb
jno
inc
fldl
mov
aaa
cmpsb
ds
mov
jecxz
idivl
sbb
mov
xchg
inc
jle
pusha
in
push
cmc
outsb
push
lret
pop
and
push
inc
mov
mov
arpl
dec
ret
movsl
mov
mov
jmp
add
dec
divb
add
fisttps
mov
and
or
test
sbb
xchg
adc
xchg
xchg
jmp
shlb
aas
dec
in
test
sbb
loopne
adc
cmp
push
enter
sub
dec
jg
mov
pop
xchg
dec
push
aaa
popa
xchg
lret
xor
mov
hlt
imull
negl
mov
mov
mov
imul
jg
push
xchg
cmp
jl
mov
xor
mov
xchg
lret
movsl
bound
adc
mov
dec
sti
jbe
pusha
adc
test
leave
fwait
orl
imull
outsb
add
fldcw
push
lock
fmull
or
popf
fildll
leave
rorl
lds
ss
xchg
in
xlat
add
aaa
dec
pop
bound
add
cmp
and
xchg
outsl
faddl
jge
push
push
loop
cli
add
daa
or
lret
sub
jo
cwtl
js
repnz
lret
mov
or
test
sbb
cltd
push
out
int3
sub
mov
jmp
dec
inc
lcall
xchg
cmpsl
jbe
imul
call
pop
xchg
mov
loopne
and
cmp
xchg
push
sbb
rcr
push
pop
xor
adc
lret
aaa
shlb
inc
sbb
stos
out
cmp
pop
fidivrl
cmp
pop
pop
mov
fistps
or
clc
xchg
dec
push
movl
loop
out
fisttpl
in
mov
rclb
or
and
mov
mov
outsl
in
stc
addr16
xchg
jge
adc
lods
sti
pop
cmp
jnp
dec
in
mov
cmpsb
dec
mov
adc
push
jge
cmpsl
pop
sub
movsb
xorb
push
pop
push
push
jbe
pop
add
mov
adc
sub
std
mov
mov
andb
push
jmp
idivb
iret
adc
andl
pop
dec
in
sub
mov
pop
icebp
jg
pop
stos
inc
add
std
push
sub
shrb
adc
js
mov
xor
cmp
push
fisubl
xor
sub
xor
mov
push
add
sahf
mov
mov
dec
icebp
xchg
fimuls
pop
mov
loope
xchg
test
push
xchg
das
out
in
test
cmc
pop
xchg
dec
mov
add
fidivrs
push
xchg
test
add
insb
xor
je,pt
pop
pop
sub
subb
sbb
and
mov
andb
mov
push
xor
addr16
xor
es
dec
sub
mov
lds
adc
add
insb
in
hlt
sbb
insl
pusha
nop
cmc
cltd
out
les
test
sub
xchg
xor
and
cmp
dec
jbe
pop
dec
je
int
pop
orb
orb
data16
int3
rep
es
out
jne
push
sub
jno
cmc
ret
mov
arpl
or
loope
xor
cmp
mov
das
mov
inc
cltd
jmp
lcall
lahf
sub
inc
sub
mov
inc
movl
and
jns
mov
call
mov
dec
sbb
cmpsb
add
cmp
xchg
icebp
scas
cltd
pop
dec
pusha
dec
in
outsl
pop
push
mov
mov
std
mov
xor
out
in
iret
stc
push
in
mov
cmp
ret
loope
mov
testl
pop
into
add
push
cmpsb
cmp
cmp
cmp
mulb
pushf
out
sub
aaa
mov
aad
repnz
inc
ljmp
icebp
jmp
pop
mov
cltd
dec
jno
lock
mov
int
mov
push
das
mov
repz
mov
movsb
sub
in
xchg
jmp
mov
xchg
adc
and
movsb
loop
fwait
sahf
and
pop
rorl
push
cmpsl
mov
stos
mov
mov
or
testl
mov
cwtl
stos
and
and
pop
jge
xchg
pop
sub
in
mov
mov
adc
and
inc
shll
repnz
mov
push
lret
mov
add
into
mov
sub
int
arpl
pop
adc
mov
mov
add
test
loop
sbb
outsl
cld
mov
dec
lods
xlat
fs
pop
xor
dec
fneni(8087
nop
fadd
out
fsincos
ret
push
add
popf
data16
ljmp
cmp
shll
push
out
mov
push
sub
push
sub
adc
pop
in
scas
pop
cmp
pushf
pop
sbb
xor
jge
push
in
xchg
test
sub
xchg
jl
outsb
xlat
lret
mov
sbb
pop
ret
jae
pop
cmp
mov
pushl
mov
and
ss
xor
add
add
and
fisubl
sti
inc
mov
in
and
push
pop
jbe
sub
mov
pop
loope
sbb
mov
xor
inc
lret
pop
outsl
xor
mov
push
jmp
inc
mov
out
and
and
int
stos
pop
jmp
sbb
xchg
movsb
push
pop
enter
inc
leave
or
dec
push
mul
xchg
push
nop
testl
ret
xchg
test
pop
stos
add
bound
loopne
cmpb
lds
out
ss
xor
pop
insb
cli
lock
fistps
push
mov
jecxz
je
pusha
xchg
cmpsl
push
je
loopne
adc
insb
mov
sbb
xchg
mov
inc
xor
fnstsw
aaa
mov
shlb
mov
adc
xor
stc
dec
outsb
les
movsb
int
pop
inc
pusha
lret
es
jl
dec
and
sub
test
mov
xlat
and
into
out
mov
fildll
cmp
hlt
lods
loope
dec
sbb
and
inc
cmpsb
test
test
xchg
mov
sbb
dec
sti
pop
incb
add
insb
fmuls
lds
lods
pop
shl
push
push
pmaddwd
push
pop
pop
pushf
push
push
adc
in
jae
cmp
inc
fildl
test
or
cmpsb
jp
lahf
xor
pushf
push
jle
or
pop
icebp
fstpt
fnsave
pop
xchg
cltd
lea
jecxz
jl
mov
mov
cwtl
bound
popa
rorl
call
and
dec
mov
nop
or
jb
xchg
cwtl
ss
stos
out
or
iret
outsl
jo
call
lret
adc
push
push
insl
in
test
jmp
mov
xor
or
push
mov
je
cmpsb
dec
mov
inc
mov
pop
and
nop
roll
adc
flds
adc
mov
or
inc
and
xor
scas
push
cmpsb
outsb
or
mov
push
loope
scas
dec
mov
lahf
movsb
or
pop
loop
jg
mov
jle
nop
jmp
cmp
sahf
lret
xor
in
or
mov
mov
int
mov
dec
push
js
dec
std
icebp
inc
push
cli
jno
push
sub
inc
mov
push
das
data16
pushf
jno
ds
adc
cmc
fmulp
push
repz
jl
inc
rorb
adc
lret
scas
jg
inc
stc
inc
pop
popa
mov
loop
or
scas
dec
sbb
xchg
lcall
jno
ffree
mov
push
and
test
stc
fs
test
cmc
aam
rcll
mov
mov
out
dec
daa
mov
loope
pop
jmp
push
les
popf
xorb
mov
bound
insb
fistl
nop
xchg
in
dec
cmp
je
add
or
loopne
pop
pusha
mov
and
push
in
in
inc
pushf
push
cmc
jne
std
dec
nop
divb
mov
lds
daa
lock
or
pop
xchg
sbb
sub
jbe
pop
pop
addl
sti
inc
dec
out
into
popf
sub
ljmp
mov
pop
ljmp
push
mov
pusha
popa
ljmp
sbb
sbb
clc
lret
mov
xlat
in
decl
dec
jb
in
sub
jg
bound
push
addl
add
or
fcompl
lock
mov
inc
fisubrs
xor
lcall
or
xor
push
sub
pop
sbb
or
outsb
mov
stos
fmull
fisubrl
inc
jno
pop
or
push
cmp
xchg
sbb
popa
jl
lods
js
hlt
jecxz
orb
inc
filds
std
pushf
cmp
inc
sbb
stos
pop
in
sarb
mov
xchg
sub
jno
add
bound
xchg
pushf
repz
pop
jecxz
push
xchg
cld
mov
pop
xchg
movsb
mov
cmove
pop
clc
out
outsl
fnstcw
sbb
jns
dec
push
jbe
mov
repnz
jg
or
add
jle
lahf
and
popf
jle
add
sbb
add
lret
cwtl
pop
inc
mov
lea
inc
lcall
aas
mov
xor
jns
pop
stos
mov
mov
rcrl
out
cwtl
sbb
push
push
imul
or
mov
mov
or
or
mov
aad
lods
or
test
inc
xchg
or
int3
call
mov
mov
enter
lods
movsb
sbb
stos
ja
sbb
ds
mov
dec
inc
mov
inc
ds
movsb
lea
or
insl
inc
cmpsb
push
xchg
pop
xchg
js
add
mov
xchg
shlb
add
fs
adc
or
lea
mov
std
cmpsb
lahf
sub
and
jmp
mov
lcall
jae
outsb
lods
loopne
xchg
pushf
roll
push
mov
xchg
mov
xchg
xlat
ds
sti
aad
arpl
jle
imul
notl
jle
mov
subb
or
sbb
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
pop
pushf
pop
lcall
addl
out
clc
ljmp
xorb
xor
add
jl
lcall
inc
fs
adc
sbb
shlb
rcrl
aad
call
rcrl
cmovs
cli
test
pop
stos
dec
inc
stc
inc
enter
insl
sbb
daa
shrl
rclb
dec
push
xchg
jmp
pushf
push
loopne
subb
jl
das
in
pop
push
fs
dec
icebp
pop
cltd
mov
add
add
rclb
mov
add
pop
inc
jnp
push
pushf
call
loope
cld
sub
add
inc
lcall
xor
mov
dec
xchg
je
adc
push
shrb
jo
jae
cld
push
gs
popf
mov
mov
repz
jle
jge
sub
int
push
inc
stc
xchg
lds
xor
enter
ljmp
sbb
dec
dec
pop
or
into
mov
lahf
push
xor
xlat
cwtl
mov
jno
rorb
xchg
mov
ljmp
mov
test
xor
loop
sub
adc
cmpsl
ret
hlt
pop
dec
fwait
gs
add
cmc
and
std
xchg
rcrb
lods
mov
stos
lcall
loop
stos
ret
out
adc
pop
out
dec
cs
or
lods
xor
aas
jo
xchg
cli
mov
out
or
add
sbb
test
dec
inc
add
xchg
mov
hlt
roll
jp
xor
mov
inc
adc
push
clc
and
mov
loope
inc
pop
or
add
add
popa
xchg
xchg
mov
xchg
into
outsb
jae
inc
or
mov
xchg
mov
pushf
fimull
push
push
ret
xor
std
imul
or
fbstp
daa
dec
movsb
loop
aam
mov
adc
ja
sti
pop
jmp
push
int
cld
cmpsl
add
mov
add
pusha
in
aad
dec
fcomps
aaa
pop
mov
jnp
xor
push
inc
jl
in
add
xchg
jnp
jmp
jg
add
dec
in
or
mov
jle
hlt
pop
adc
mov
cltd
dec
repnz
pusha
icebp
xchg
pop
mov
xchg
sub
ja
rcrl
shll
outsb
aaa
push
imull
cli
lahf
cmp
inc
jg
and
sbb
inc
mov
inc
jmp
cmp
push
push
sbb
push
jle
push
cs
iret
adc
sbb
mov
insb
xor
jle
imulb
in
nop
and
and
rcr
aas
and
adc
pop
movsb
inc
jg
ret
scas
pusha
and
adc
clc
cmp
leave
and
dec
jns
adc
mov
pop
add
pop
out
out
hlt
inc
decl
sub
sbb
xor
in
call
inc
in
repnz
adc
scas
cmp
inc
mov
mov
bound
dec
sub
inc
xchg
pushf
ret
mov
in
pop
movsb
inc
sbb
cmp
add
in
test
push
jae
mov
stc
daa
xchg
xchg
scas
rolw
rorl
add
fstpt
ds
cwtl
mov
jne
movsl
dec
mov
in
jnp
fwait
into
inc
cmpsl
sub
push
mov
stc
inc
arpl
insb
mov
and
xor
imul
cwtl
mov
pop
mov
mov
fisttpll
mov
clc
sub
loope
or
adc
jb,pn
hlt
jne
cmpsl
lock
mov
lret
xor
fucomip
outsl
dec
stc
insb
mov
or
mov
dec
and
push
incl
sbbl
imul
xchg
mov
push
dec
mov
push
out
mov
push
push
fwait
push
inc
mov
xchg
ds
int3
dec
test
lods
cli
aaa
int
mov
lods
mov
or
jns
mov
mov
fidivs
lret
fwait
mov
icebp
das
lods
xchg
inc
cmp
add
movsb
mov
dec
dec
loopne
cli
mov
gs
cli
sahf
sbb
lods
adc
sbb
call
push
jp
ret
add
xorb
xor
sbb
sub
repnz
adc
sbb
cmp
shll
jno
add
stos
ljmp
adc
sub
das
ret
imul
dec
sbb
ret
fs
inc
inc
mov
stos
inc
outsb
cltd
addr16
fisttps
add
lock
adc
inc
cmc
push
arpl
lret
xlat
aam
mulb
mov
lea
cmpsb
outsb
sub
cmp
jo
jns
or
xor
cwtl
repnz
sbb
cld
pop
jb
push
divl
inc
ljmp
pop
pop
pusha
sub
int3
adc
dec
add
stc
pop
xchg
mov
dec
push
mov
cmp
mov
lahf
lods
enter
es
jno
xchg
arpl
jbe
lret
sbb
add
push
sbb
push
in
mov
mov
dec
cld
lahf
arpl
jmp
mov
dec
sbb
sub
ss
rcr
pop
fldenv
pop
jg,pt
jno
scas
addb
sti
not
jle
pop
sub
inc
mov
aam
orl
ret
data16
cmp
pop
jecxz
mov
add
lret
and
xor
adc
aas
loop
out
adc
add
rep
mov
dec
dec
outsl
jecxz
and
in
ret
mov
jbe
jne
jbe
adc
xor
int
xchg
ret
out
out
or
decl
xchg
stc
xchg
push
and
outsb
dec
cmpsl
mov
sbb
pop
cwtl
stos
and
inc
xorl
int
sarb
cmp
add
inc
mov
sub
push
sub
div
pop
pop
mov
scas
shrl
out
bound
add
popf
imul
mov
mov
fsubr
dec
pop
inc
mov
imul
cmp
push
push
std
jl
cmp
inc
cmp
push
in
xchg
dec
lcall
ja
sbb
cli
bswap
mov
push
ds
sbb
sub
rolb
mov
cmp
pop
mov
and
mov
mov
and
into
xor
lods
orb
mov
pop
pop
pop
jmp
out
mov
pop
cli
outsl
in
inc
ljmp
and
test
mov
jne
add
pop
pop
lret
push
div
imul
lret
arpl
pop
xchg
scas
aad
pop
les
adc
sbb
repnz
inc
or
stc
inc
sarl
push
mov
loop
dec
mov
imul
out
inc
mov
and
mov
inc
test
loop
mov
push
mov
jno
jnp
xor
loop
adc
fldt
push
hlt
sub
or
mov
test
gs
or
fimuls
or
push
push
jmp
cs
pop
xchg
out
mov
outsb
add
cld
stos
cmp
in
sti
arpl
rorl
mov
js
sbb
or
repnz
push
ds
les
andb
movsl
jl
out
or
aas
scas
jmp
push
cltd
mov
adc
adc
cmp
imul
mov
mov
popa
xor
stos
cwtl
lock
inc
sahf
hlt
xor
repz
insb
jnp
push
fnstsw
stos
xor
and
mov
outsb
adc
jb
ja
sbb
or
add
mov
adc
lods
pop
push
and
repz
adc
sub
daa
cmp
fmulp
push
add
fs
int3
scas
mov
cli
xchg
xor
mov
adc
sub
or
cli
mov
out
push
icebp
rol
cmp
ljmp
xlat
xchg
sbb
std
cli
das
jge
fnsave
mov
sbb
call
jne
adc
fisttpl
sbbl
cli
sub
jae
lcall
inc
jmp
iret
mov
pop
out
add
push
cmp
dec
push
xchg
jbe
test
shr
pop
popa
rorb
sub
fildll
and
lahf
mov
push
xchg
xor
loop
test
shlb
inc
insl
xor
push
movl
push
daa
inc
xchg
inc
mov
push
push
addr16
mov
sub
and
ret
fdivs
cmp
enter
call
or
iret
jb
sub
pop
aad
mov
fildll
imul
xlat
jle
sub
imul
xor
adc
xchg
sub
das
pop
test
pop
loopne
cmp
outsb
or
inc
add
scas
mov
mov
push
mov
and
fisubrs
push
fadds
sbb
inc
das
shll
call
icebp
scas
lds
aas
push
movsb
xchg
pushw
mov
test
xor
dec
test
jmp
lret
outsl
sbb
imul
xor
xor
arpl
outsb
push
add
pop
cmpsb
add
in
xchg
adc
jb
stc
add
test
sbb
popa
sbb
jns
cmp
add
cld
mov
and
add
or
shll
std
mov
jno
jp
dec
loope
mov
fsqrt
int
push
jg
out
push
sbb
adc
mov
ss
jge
lret
pop
mov
addr16
dec
std
mov
sbb
iret
scas
push
xor
cmp
mov
mov
test
sahf
stos
test
inc
pop
movsb
or
xchg
pop
xchg
mov
push
push
lods
fidivrl
cmpb
jbe
xor
inc
adc
bound
repz
lods
idiv
pop
lahf
mov
mov
pusha
jne
dec
imul
adc
adc
je
ret
mov
andb
mov
std
cld
sbb
jbe
jae
pop
xchg
jge
ret
xchg
cmp
or
sbb
test
jmp
dec
or
scas
sbb
and
xor
mov
fbstp
cmp
stos
mov
xor
adc
insb
jle
mov
inc
mov
stos
sub
xor
sti
and
mov
lods
mov
dec
mov
jbe
push
push
sub
cwtl
push
insb
icebp
add
imul
into
xchg
imul
enter
sti
xor
int
pop
push
push
sub
lret
push
clc
or
je
push
pop
insl
cltd
pop
add
popa
mov
jg
cli
dec
cli
add
test
les
lea
mov
cmp
iret
outsl
xchg
add
mov
sbb
inc
bound
dec
lret
pop
lea
and
xchg
pop
icebp
test
pop
and
ret
sbb
mov
sbb
je
and
int3
xor
repz
adc
popf
add
lods
loop
pop
xor
jle
xor
out
xorl
mov
and
push
add
push
test
popa
push
dec
call
cmp
call
sub
jno
xor
aas
lret
lds
add
imul
push
pop
push
ja
test
xlat
jo
xor
lods
ss
push
ror
arpl
xor
cs
out
mov
mov
cmp
aad
cli
shll
icebp
add
les
mov
pop
fdivl
xchg
ret
loop
or
iret
rcl
xchg
fnsetpm(287
arpl
call
pop
or
or
fstl
mov
ja
adc
push
and
mov
cli
pop
les
xchg
mov
dec
ss
jo
ds
xor
xchg
testb
xor
fnstcw
jmp
bswap
adc
orb
outsl
icebp
xchg
jo
and
pop
leave
adc
and
mov
mov
jle
inc
push
jb
mov
dec
inc
orb
or
mov
popa
pop
sbb
xorps
jmp
adc
cwtl
xlat
sbb
imul
inc
push
xor
and
ret
push
jmp
mov
aaa
cs
push
test
pop
and
in
sbb
inc
push
in
adc
test
dec
mov
pop
adc
xchg
arpl
mov
roll
jecxz
test
popf
sahf
out
aas
mov
push
and
scas
xor
jg
je
mov
leave
jge
outsb
jle
aad
push
push
sbb
fisubrs
sbb
cltd
nop
shrb
imul
aas
bound
stc
imul
push
les
loope
and
mov
es
mov
pusha
loope
enter
push
jbe
adc
xor
and
cli
ds
popa
xchg
xchg
xchg
lock
xorb
ds
pop
dec
rclb
inc
or
sub
pop
cmpsb
jge
daa
pushf
clc
aas
daa
daa
in
icebp
push
mov
adc
push
xchg
fwait
hlt
mov
push
adc
test
jnp
aaa
fstpt
cmp
jecxz
out
sub
pop
fnstenv
aam
aad
sbb
scas
mov
push
cmc
mov
and
or
jns
aam
out
leave
cmp
cmpsl
cmpsb
scas
or
lea
insl
cltd
dec
jmp
dec
popf
pop
cld
loope
mov
std
in
fbld
mov
sahf
mov
leave
mov
mov
push
hlt
pushf
mov
shl
mov
out
daa
sbb
popa
mov
and
inc
jns
shr
pushf
push
sahf
cmp
mov
mov
xchg
jle
jmp
cmc
push
cltd
ljmp
clc
fcomps
xchg
push
pop
xor
icebp
jmp
or
dec
jnp
in
aad
repnz
push
jge
and
push
inc
push
cli
pop
push
mov
xchg
pop
into
inc
pushf
or
pop
stos
or
enter
sbb
clc
repz
lret
push
lea
push
mov
sub
push
lds
orb
or
and
gs
je
test
icebp
mov
push
push
idivl
pop
insl
dec
lahf
iret
lock
mov
aad
jno
push
jne
clc
roll
mov
push
jo
je
and
pop
out
lods
ljmp
mov
mov
xchg
popa
inc
out
sub
cmpsl
lods
mov
mov
fwait
jp
pusha
gs
pop
pop
and
sub
adc
jmp
pop
mov
xchg
pushf
mov
jnp
lock
push
repnz
add
push
push
mov
push
ds
xchg
popa
mov
xchg
push
sbb
fnstcw
add
push
pop
rolb
dec
sub
push
add
push
jne
jp
lods
movsb
mov
outsb
jbe
popa
push
enter
loope
stc
leave
xchg
je
lds
mov
or
xchg
adc
xchg
push
pop
mov
xor
dec
xchg
jmp
bound
lods
push
shl
fnsave
gs
fwait
insb
and
cmp
std
and
test
roll
mulb
mov
or
xchg
lods
add
dec
mov
mov
push
dec
xchg
sub
mov
fwait
orb
add
xchg
cmp
sbb
xchg
add
icebp
movsl
add
mov
push
in
and
push
ret
repz
mov
xor
roll
fimuls
mov
xchg
sub
mov
dec
jecxz
jmp
pusha
dec
test
jno
mov
mov
jle
jge
push
mov
sub
lods
mov
call
fmuls
mov
jae
and
in
cmp
pop
rcrl
xchg
enter
dec
push
ds
push
lret
loopne
ret
push
orl
lods
dec
pop
in
ja
daa
inc
or
cmp
mov
and
pushf
mov
fs
das
out
mov
out
or
out
int
fbstp
jge
out
or
dec
add
mov
push
add
jp
stos
into
outsl
sbb
insb
test
cmpsl
stos
xchg
ret
lods
repz
and
loop
out
out
mov
mov
test
jb
and
xchg
lods
and
notl
mov
push
push
mov
cltd
sti
jno
aam
sti
dec
movb
dec
adc
pop
jns
aad
push
mov
sbb
pop
or
jno
add
cmpxchg
lret
shll
xor
pop
fdivrl
pop
div
cs
fs
push
fs
lods
xchg
cmp
test
or
orl
lret
push
mov
clc
outsb
and
xor
outsb
adc
sbb
call
das
shll
dec
std
icebp
outsb
push
jl
mov
cmpsb
idiv
sbb
stos
repz
hlt
adc
dec
cmp
cmp
pop
loopne
dec
sbb
out
xchg
pop
aam
dec
mov
mov
aam
push
stos
hlt
cmp
lahf
adc
push
mov
push
fistpl
pop
mov
jp
lcall
sbb
scas
adc
daa
push
sub
push
push
aam
movsl
jmp
lret
nop
jl
and
stos
lods
lds
lea
dec
jnp
pop
cmc
mov
mov
push
xor
or
js
ret
int
iret
test
daa
mov
sbb
xorl
and
cmp
pop
insl
cmp
data16
and
mov
lahf
xor
cmp
aas
push
push
andl
mov
or
and
dec
cmp
and
pop
clc
das
sub
or
hlt
punpckhwd
mov
mov
mov
jg
out
jg
add
mov
pop
push
jo
lods
fxch
mov
outsb
mov
mov
decl
loope
xor
push
add
scas
in
adc
jecxz
repnz
outsl
sbb
push
push
nop
pop
push
adc
sbb
in
iret
data16
mov
push
sub
jae
fsubl
push
call
push
push
xor
jmp
jne
sbbb
inc
lret
push
xlat
cmpl
cmp
add
movsb
aad
loope
sbb
test
lock
shlb
push
adc
mov
cltd
mov
cmp
imul
lret
stos
sbb
add
movsl
mov
lods
into
mov
pop
mov
sub
dec
push
sbb
mov
and
fildll
sub
push
lods
xor
scas
divps
outsb
mov
jo
fdivl
testb
in
dec
xchg
imul
fsubrs
pusha
mov
add
pop
test
sub
xchg
movsb
xor
mov
test
insb
inc
jnp
shlb
mov
add
push
and
sbb
push
xchg
push
loope
sbb
add
out
push
jb
lock
jno
mov
rcr
cmp
pop
sbb
jno
and
in
mull
movsb
inc
scas
sbb
lret
dec
xor
mov
or
pop
xor
inc
xchg
push
in
das
shll
fldl
cmp
pop
dec
aam
es
xchg
sti
sub
repz
adc
add
cld
sub
or
scas
jg
mov
xchg
jne
push
push
xor
mov
or
mov
cmp
rep
outsb
push
test
faddl
rorl
push
cmp
cmp
out
ss
or
outsb
mov
loopne
repnz
ret
shrb
or
arpl
data16
lods
lcall
xchg
or
stc
stos
test
lahf
cli
cmp
popf
jl
shll
pusha
stc
dec
add
jne
fptan
pop
mov
data16
loop
lods
std
fwait
push
in
in
ret
fidivrs
stos
loop
xlat
ss
aaa
ljmp
lods
mov
inc
das
insb
dec
cmpsb
jns
arpl
mov
inc
sub
sub
clc
push
std
andl
das
jmp
inc
xchg
jge
jb
push
mov
dec
dec
addr16
clc
pop
dec
or
xor
cmp
rcr
fildl
loope
and
and
fwait
add
mov
mov
jmp
addr16
and
call
ret
jns
mov
cmpsb
pop
mov
jmp
ds
xchg
mov
xor
faddl
or
out
pop
leave
or
loop
and
xchg
sti
daa
mov
out
nop
adc
pop
in
xor
mov
jns
cs
push
push
jb
in
in
pop
pop
xor
pop
cmp
mov
imull
es
and
and
cmc
fsub
aas
insl
mov
cmc
inc
xchg
adc
movsl
cmc
pop
jb
pop
fisubrl
lods
enter
daa
pushf
ret
cmpsl
push
cld
daa
mov
mov
ja
call
cmpsl
inc
sub
insb
jns
xchg
movsl
cmp
out
scas
pop
fisttpll
rclb
mov
call
aaa
insb
pop
imul
jg
sbb
in
decl
pop
sbb
imul
mov
inc
jne
sub
shl
repz
ja
cs
inc
dec
push
mov
xchg
sub
dec
inc
fidivrl
dec
sub
sbb
push
popa
cld
mov
shll
jl
in
repz
mov
test
out
xchg
shrl
add
out
mov
add
cmp
sub
mov
rorl
js
or
jbe
movsb
add
leave
in
rorl
jne
dec
xor
dec
pop
mov
shll
cmp
pop
adc
push
sub
mov
jge
or
pop
and
ret
push
xchg
xlat
inc
jg
push
add
lds
mov
stc
neg
mov
push
std
lahf
ss
xchg
out
cmpsb
sub
test
mov
fsubrs
jg
mov
adc
out
dec
call
lds
mov
std
pop
xchg
pop
or
or
mov
push
inc
sub
cmp
mov
mov
sbb
es
fadd
rcl
add
dec
jo
mov
stc
lds
test
bnd
cmp
xchg
cltd
out
enter
sbb
mov
in
gs
mov
xchg
out
stc
hlt
cld
es
aaa
push
es
aam
ja
je
jge
jle
jae
loopne
and
aam
mov
test
mov
mov
inc
adc
scas
adc
fdivs
push
mov
jl
pop
push
cmp
and
insb
adc
push
jp
arpl
push
repz
sub
mov
fcoml
dec
cmp
lods
cmc
test
pop
sub
daa
xlat
push
add
sbb
insb
idivl
and
jno
cmp
loopne
sub
shlb
mov
lret
add
adc
jno
adc
fwait
and
in
sub
ljmp
xchg
adc
cmp
pop
mov
jge
cmc
out
inc
or
fcmovnu
jle
adc
mov
mov
adc
scas
test
je
arpl
push
xor
cmp
sbb
mov
jl
imul
push
mov
pop
nop
ja
stc
fists
xchg
popa
jnp
aad
sbbb
jo
out
cmpsl
outsl
adc
xchg
sbb
pop
and
inc
mov
test
jnp
outsl
cmp
xor
xor
dec
out
add
mov
in
aas
mov
fxch
mov
je
mov
mov
aaa
sbb
push
arpl
mov
add
subb
cmc
lock
addr16
repz
cmp
notb
cltd
jecxz
inc
mov
xchg
lds
push
mov
push
mov
js
and
or
inc
sub
ja
jae
aaa
lds
push
push
xlat
pop
jbe
es
or
sbb
mov
push
out
sub
mov
movsl
aad
lods
xorb
aad
aad
out
inc
sub
jle
shld
stos
fnstcw
pop
adc
mov
enter
lret
push
into
mov
lret
push
mov
jns
hlt
mov
in
push
add
adc
scas
test
popf
inc
inc
into
inc
mov
call
pop
rcrl
sbb
lret
inc
movb
call
dec
xor
mov
mov
mov
xchg
or
out
xor
movups
or
leave
adc
adc
xchg
cwtl
and
pop
jnp
shll
testb
fdivrs
lds
lcall
cmp
sub
mov
mov
inc
jbe
loopne
in
sahf
mov
leave
mov
ficoml
xchg
jmp
and
adc
fnsave
cmp
outsl
rcrl
jge
or
ret
sub
add
scas
mov
inc
pusha
fwait
ret
mov
movl
leave
negl
push
lcall
xchg
out
adc
iret
dec
mov
inc
pop
into
adc
and
mov
mov
xchg
cld
xchg
xchg
fisubrs
fcom
xor
inc
mov
out
test
hlt
cmp
hlt
jmp
ss
jg
out
lea
fidivrl
shr
pop
rorl
fsts
and
loope
bound
call
inc
xchg
stos
lret
mov
pop
addr16
xor
mov
pushf
js
daa
movb
ret
push
xor
fmull
adc
inc
pop
mov
ljmp
mov
repnz
fidivl
je
shll
and
push
fsubl
imul
cmp
jae
daa
adc
mov
jge
cltd
cmp
imul
mov
sbb
jle
pop
cs
lods
in
cmp
hlt
out
es
nop
fldcw
xlat
mov
dec
test
xchg
mov
mov
pop
fistpl
pop
mov
add
loopne
mov
loop
std
mov
sub
cmp
mov
fildll
push
mov
das
jno
js
cltd
shlb
adc
rorb
mov
fxch
sub
xchg
push
fwait
jo
pop
cmpsl
jns
cmc
push
push
mov
cmpsl
dec
xchg
cmp
bound
add
xor
pop
pop
jbe
or
cltd
mov
mov
cmc
fwait
in
xchg
adc
pushf
scas
data16
lds
lret
outsl
mov
mov
in
pop
insl
lcall
mov
sbb
dec
aad
insl
jnp
mov
mov
mov
mov
jl
mov
cwtl
adc
sub
and
sub
enter
gs
mov
sub
adc
jnp
fldenv
into
add
mov
jbe
pop
and
out
mov
ja
xchg
mov
int3
mov
cmp
nop
ret
and
fdivrp
mov
aas
loop
ss
xor
or
push
mov
cmp
scas
out
cmp
pop
ret
xchg
mov
add
add
arpl
and
pop
adc
mov
imul
push
in
decb
in
xchg
clc
sub
push
sub
movsl
adc
lahf
jl
pop
clc
pop
insl
std
or
dec
dec
jo
aas
mov
leave
adcb
stos
aam
push
imul
mov
aam
cmpps
ja
mov
push
and
push
pop
push
fmuls
rorl
jae
ja
jp
cmp
into
xchg
lods
dec
pop
and
sub
jbe
stos
jecxz
sbb
das
rcrl
xchg
ja
xchg
ret
aad
xor
lea
jl
lcall
sub
loope
stos
stos
adc
jg
negb
pop
mov
sub
std
repz
in
jns
test
fwait
cmc
cmpsl
pop
mov
aas
in
mov
jge
dec
loope
adc
cwtl
cmp
mov
cmpsb
cmp
int
dec
rclb
xor
inc
popf
dec
adc
push
out
sub
mov
insb
dec
push
xor
or
movsb
das
xchg
xchg
lods
inc
xlat
xor
mov
push
testl
or
jno
jo
jg
push
mov
or
inc
sub
sbb
push
lret
push
in
sti
daa
jmp
lahf
add
into
sub
in
scas
inc
sbb
ret
pop
sti
cltd
jnp
mov
daa
fists
inc
push
mov
xor
cmp
call
ret
cmpsl
adc
sbb
std
enter
ja
jns
xchg
xchg
ljmp
daa
xor
mov
neg
fucomip
int3
mov
jb
push
gs
mov
jno
mov
add
cld
sbb
mov
fiadds
sub
fwait
test
in
pop
mov
sbb
aad
and
mov
and
cmp
mov
dec
or
data16
xor
adc
push
subl
push
pop
out
jge
push
adc
mov
test
repz
fnstenv
fldcw
mov
cmpsl
adc
popa
push
mul
pop
and
mov
mov
xorb
int
in
mov
push
mov
dec
ret
push
arpl
jl
xchg
push
scas
push
and
mov
loope
rcrl
mulb
ss
lock
mov
push
out
nop
pop
push
rolb
loop
iret
xchg
sub
cmc
aam
sbb
xorl
pop
dec
and
rclb
push
push
xor
and
into
sahf
jns
dec
inc
imul
aad
sti
mov
popf
fldenv
aaa
jl
pusha
xor
movsl
out
adc
push
aad
xorl
pop
rolb
or
data16
xchg
jge
shlb
lret
out
sub
push
inc
xchg
cmp
lahf
testl
clc
xchg
and
negl
lahf
xor
into
mov
mov
or
ret
popa
xchg
out
pop
cmp
nop
xchg
push
loop
scas
inc
cltd
cmp
inc
xchg
xchg
jecxz
imul
and
push
sub
in
out
and
aam
mov
add
pop
push
xchg
mov
jp
or
xchg
out
iret
mov
cld
fwait
and
cmpsl
rorl
add
aas
mov
or
popf
push
ret
push
call
pop
sub
iret
ljmp
xchg
fidivl
adc
in
lret
jno
cmc
mov
push
inc
scas
lock
push
cmp
dec
mov
test
xor
cmp
xchg
dec
das
rcrb
add
sarl
xchg
movsl
push
inc
outsb
fistpl
sub
or
cmp
dec
lret
loop
aad
push
scas
bound
test
and
arpl
mov
jg
push
xor
xchg
jno
pop
leave
sbb
cmc
dec
fistpll
xchg
jl
stos
das
jmp
fxch
imul
mov
sbb
cmpsl
or
shl
nop
nopl
faddl
pop
out
jl
mov
dec
jae
jp
push
ficoms
ficoml
movsb
add
hlt
xor
pushf
and
or
inc
sub
jge
xchg
jne
pop
js
jmp
jbe
lods
mov
movsb
mov
push
add
inc
and
and
in
inc
pop
leave
shrb
inc
shrb
mov
fmul
lds
clc
sbbb
push
subb
lea
jnp
sbb
mov
outsb
xor
mov
into
sbb
adc
int3
push
fsub
cmp
imul
dec
mov
daa
scas
clc
jmp
nop
repnz
addr16
xchg
sahf
adc
daa
xor
roll
roll
test
or
aad
push
subl
pop
movsl
pop
mov
xchg
sbbl
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
jge
scas
addl
and
jne
sti
scas
jb
push
push
inc
cs
mov
and
add
jge
cmp
les
push
pop
lret
sti
mov
mov
xchg
mov
ds
fidivrs
xchg
dec
insl
xor
dec
mov
int
jo
mov
and
das
adc
sub
xor
outsl
outsb
cmp
push
lock
mov
lods
adc
imul
jg
xchg
mov
cmp
mov
dec
cmp
insb
xchg
pop
js
cli
mov
ja
xor
loopne
mov
push
adc
fs
subl
push
mov
int
incl
popf
aaa
cmp
xorb
nop
and
xlat
xor
inc
cmp
push
and
test
jecxz
pop
fimuls
int3
xchg
xor
sbb
test
mov
dec
out
mov
cmp
pusha
sbb
push
jnp
addr16
data16
and
pop
sti
rcrl
outsb
aas
mov
jmp
add
sbb
inc
push
rcrb
xchg
call
in
out
xor
lahf
lods
movsl
stos
fmuls
cs
pop
adc
mov
jl
sub
je
cmc
sahf
pusha
mov
sub
xchg
cli
or
dec
fsub
jb
sbb
jns
push
sbb
push
and
inc
and
in
mov
repnz
xor
mov
mov
mov
push
fsubrl
xchg
popa
mov
pop
push
sti
ret
adc
ljmp
add
movsb
mov
and
sub
neg
in
dec
cmp
in
push
dec
cmp
jp
pusha
flds
xchg
mov
cli
lret
jl
mov
aad
mov
push
out
push
icebp
add
mov
pop
pop
insb
out
sbbb
enter
jo
clc
cmp
jmp
cltd
xor
aam
pop
sbb
ficoml
aas
mov
ds
push
js
fstps
fbstp
repnz
popa
adc
jnp
dec
out
aam
adc
cmp
outsb
and
pop
ret
int
adc
movswl
std
jg
inc
push
push
fdivrs
lea
jge
mov
push
xor
insl
mov
ret
lds
lret
fistpl
jo
or
jle
mov
mov
cmp
pushf
repnz
jmp
jne
insb
jp
dec
mov
jg
push
movsb
xor
in
test
js
pop
fisubrs
imul
or
fidivrl
mov
in
inc
lea
lret
and
fldl
jge
inc
mov
jo
ret
jnp
cmp
sbb
nop
jo
fdivs
stos
dec
xor
icebp
sub
out
aad
xor
adc
xchg
pop
lods
sub
lea
aas
adc
xor
mov
insb
cmp
sub
pop
cld
dec
into
adc
inc
pop
insb
cmp
or
loop
mov
mov
push
jle
push
jnp
inc
cltd
push
cld
jno
xchg
push
cmp
aaa
xor
inc
xchg
mov
scas
add
cmp
dec
shll
lds
mov
out
and
jge
popa
sbb
xor
jo
cmp
loopne
xchg
or
flds
loopne
cs
jae
jge
inc
mov
fsubrl
adc
push
xlat
dec
cmp
mov
rorb
mov
fdivrp
inc
inc
lods
cmpsl
lret
pop
xorb
pop
and
std
jg
mov
xchg
jb
add
in
rorl
int
test
jns
cmp
cmp
mov
fdivrs
rclb
stc
fucom
xor
out
mov
sbb
icebp
clc
inc
sub
idivb
and
dec
fdivrs
jecxz
lods
lock
xchg
jb
adc
jno
mov
in
cmp
cmp
jne
pop
das
ficoml
cltd
movsl
int3
pop
imulb
icebp
jmp
daa
push
push
xchg
pop
out
jb
mov
insl
inc
push
push
cmp
cmp
mov
mov
enter
adc
jo
dec
das
leave
mov
adc
cmp
sub
jg
push
adc
mov
or
sbb
lock
adc
stos
fldenv
daa
jge
rorb
cmp
ss
out
sbb
fiadds
bound
cmp
jp
out
ljmp
pop
cli
cmp
mov
and
sbb
lret
faddp
sub
pushf
mov
bound
cs
add
lea
test
sbb
leave
test
inc
mov
xor
clc
mov
arpl
inc
out
lret
mov
int
js
jg
fdivs
xor
mov
out
pop
test
mov
pop
test
pop
jne
dec
mov
pop
pop
and
cltd
sub
out
std
mov
jg
fidivrl
sarb
stos
adc
enter
cmp
out
mov
sbb
inc
jae
xchg
in
cmp
lock
je
inc
mov
adc
std
sbb
fimuls
aam
mov
loopne
push
xchg
ret
inc
fcoms
es
lcall
xchg
xchg
dec
add
sbb
es
pop
mov
and
leave
add
inc
xor
pop
sbb
es
roll
mov
push
lods
cmpsb
sub
enter
clc
add
es
or
inc
outsb
xor
dec
loopne
outsb
fisubl
stos
jp
and
fxch
sbb
dec
adc
stc
std
dec
stc
xor
dec
pop
cli
arpl
or
mov
lahf
push
pushf
es
mov
mov
scas
pop
cltd
movl
arpl
mov
ds
cwtl
andl
pop
jp
push
sbb
sub
lsl
jg
dec
enter
push
adc
das
lock
nop
cs
std
ljmp
sbb
xchg
out
inc
inc
or
dec
ds
out
in
mov
call
sbb
ja
das
adc
scas
inc
mov
xchg
lret
push
cmc
mov
push
lods
add
mov
fs
add
jmp
movsl
xlat
jo
mov
xchg
mov
mov
cmc
pop
adc
mov
sbb
or
arpl
and
jae
push
int
sbb
mov
arpl
test
jb
jno
in
fimull
js
out
jecxz
not
repnz
xchg
idivl
mov
sub
cmp
call
jno
push
into
movsl
adc
and
adcb
dec
adc
out
sbb
cmc
mov
vphsubwd
popw
daa
push
repz
lods
xchg
push
jb
out
adc
sbb
test
mov
rcrl
jg
sub
add
mov
mov
mov
xchg
je
out
icebp
lahf
fsts
addr16
dec
cmp
and
mov
push
mov
les
dec
cmp
stos
push
mov
jno
in
aaa
fildl
ja
repz
shlb
mov
adc
push
xchg
jmp
out
ret
repz
cmp
clc
and
sahf
adc
xchg
test
jg
push
mov
cli
sub
scas
mov
xor
jbe
js
shl
daa
pushf
lret
sbb
sub
mov
fsubs
ss
cmpl
pop
into
xor
shld
mov
push
add
lahf
sub
in
adc
fs
dec
inc
ljmp
es
aam
icebp
repnz
aam
add
int3
sub
cmp
ret
insb
mov
push
cmpsb
or
or
or
adc
jge
adc
mov
lods
ljmp
fs
xor
ret
pop
sbb
out
sub
aam
loopne
cwtl
xchg
pop
or
jne
sbb
sub
dec
inc
clc
mov
xor
decl
ss
sbb
sbb
pop
or
jp
xlat
out
rcl
jmp
ret
mov
cmpl
add
mov
push
test
sub
movsb
pop
push
jge
adc
sti
adc
clc
sub
cmp
mov
xchg
pusha
aas
cs
call
lea
jne
pop
jae
sbb
loope
lods
fwait
add
inc
iret
rcrl
sbb
and
pop
jecxz
repz
call
std
pop
nop
dec
sub
dec
je
jne
sub
call
xchg
pop
clc
cli
inc
jecxz
or
mov
jb
xchg
add
int3
aaa
pop
dec
into
ds
sahf
jp
stos
xchg
jle
in
repnz
push
or
shl
pop
xchg
nop
data16
and
xor
inc
ljmp
lods
xchg
hlt
xor
add
mov
sti
dec
cmp
test
mov
pop
add
es
rorb
lret
dec
pop
dec
dec
jl
add
ret
pop
fisubl
inc
sbb
rcr
rorl
cli
je
ds
stos
jmp
jo
and
cmp
sbb
push
cmp
push
loopne
loopne
mov
je
sub
call
cmpsb
cmc
jecxz
xchg
sbb
inc
stc
cs
pop
fwait
js
jl
and
int3
dec
push
mov
sbb
and
cmc
adc
sbb
repz
jge
push
pop
cmp
inc
pop
js,pt
popf
push
fisttpll
cmp
mov
xchg
or
jbe
daa
mov
mov
push
or
aad
les
pop
push
push
and
mov
test
sbb
in
fdivrp
ret
mov
inc
inc
imul
or
bound
push
cmp
adc
mov
sbb
mov
mov
outsl
dec
push
cmc
and
mov
push
addr16
pop
pop
xchg
es
cmpsb
fdivs
mov
adcl
sub
push
add
test
cli
cmp
xchg
adc
je
push
aam
inc
ret
fsubl
fsubrl
cmp
mov
pop
lcall
xchg
mov
ja
call
stos
dec
sub
mov
add
loope
jmp
cmp
aam
mov
inc
shlb
aas
fldt
dec
sarb
scas
xor
insb
dec
aas
fcmovu
dec
fisttpll
mov
movsl
xor
and
rorl
sbb
lcall
push
shl
adc
faddp
imul
cwtl
jns
stos
xor
cmp
mov
mov
mov
sbb
or
hlt
jae
iret
stos
cwtl
jno
mov
cltd
mov
cmpsb
lahf
pop
outsb
cmpsb
jle
mov
xlat
xchg
outsl
xor
stos
pop
inc
aad
stos
jno
inc
scas
or
movb
pushf
add
mov
addr16
adc
jae
mov
dec
cmp
pop
scas
into
roll
sub
add
xor
jmp
ds
fwait
std
lods
in
jge
adc
cmc
daa
sub
or
sub
jne
push
sbb
sbb
inc
scas
repnz
and
xchg
loop
or
mov
jle
stos
push
jne
fcoms
xor
pop
es
and
lock
mov
and
jo
in
xchg
outsb
repnz
aad
mov
inc
dec
imul
xor
adc
cltd
repnz
xor
sub
add
sub
iret
push
mov
rcl
pop
pop
xor
cs
out
in
scas
push
and
movsl
dec
xchg
icebp
or
imul
pop
fiadds
pop
scas
data16
ficoms
fisttps
inc
xchg
fisttpll
enter
cli
push
xchg
xlat
movsb
arpl
pop
fldenv
jg
fmul
mov
shlb
add
mov
stos
push
mov
les
pop
jg
inc
out
fwait
mov
repnz
cmpsb
fwait
aam
or
inc
xchg
jmp
fwait
aaa
mov
out
jmp
imul
cmp
leave
sub
call
or
push
pop
enter
mov
xlat
lret
cmp
mov
ljmp
sub
mov
sbb
push
jge
cmc
pop
arpl
lods
jbe
hlt
cmpsb
inc
and
push
jl
pusha
cmc
test
clc
cmp
scas
mov
es
out
xchg
stc
or
and
and
xchg
xchg
lea
pop
lock
dec
mov
xor
xlat
repz
cbtw
popa
sub
cmp
out
sbb
add
xor
dec
xchg
sbb
and
out
test
lcall
inc
mov
fdivs
sahf
push
xor
es
inc
push
jge
sahf
in
inc
stos
loopne
leave
iret
aaa
arpl
jnp
and
push
push
mov
loopne
cld
jl
push
or
or
daa
ficompl
into
push
mov
shl
xorl
sbb
jnp
lods
fimull
scas
xor
movsb
or
xchg
push
movsb
cmovbe
dec
cwtl
push
and
jns
popf
fnstsw
or
stos
fdivrs
test
insb
push
mov
sbb
out
orb
je
cld
lock
pop
push
ds
fnstenv
dec
out
mov
cmpsb
popa
lret
leave
out
movsb
lods
jmp
lods
loopne
inc
insb
adc
js
arpl
sub
ja
sti
cli
pop
daa
sub
in
mov
or
mov
and
dec
cld
pop
add
xlat
scas
xchg
or
dec
std
dec
push
pop
icebp
jne
test
imul
add
mov
cmp
aaa
lods
ljmp
ja
push
mov
je
imul
fildll
mov
mov
xchg
addl
pop
xor
jae
repnz
popa
xchg
fbstp
adc
cmpl
jno
cmpsb
out
or
mov
jp
xchg
push
pop
sbb
ret
adc
cmp
or
out
or
ret
shll
push
fst
xchg
mov
cmc
add
scas
test
cmp
popa
dec
add
js
ficomps
or
movsl
sub
movsb
inc
js
cmp
negl
movsb
movsl
cwtl
test
rcrl
movsb
gs
cs
sbb
add
fnstenv
dec
stos
orb
and
adc
cmp
fnsave
xchg
mov
fsubp
jle
jle
popa
cmpsb
ja
enter
push
inc
icebp
pop
push
inc
inc
mov
in
out
arpl
add
or
mov
ficompl
xor
jno
push
jae
ja
mov
in
inc
and
or
bound
jl
cmp
sbb
sbb
sbb
xor
mov
fsubrl
pop
pop
enter
outsb
mov
sub
mov
loop
push
sahf
clc
arpl
cltd
rcl
mov
andb
sub
dec
outsb
les
loop
nop
lea
lods
jnp
inc
dec
jns
addr16
push
mov
xchg
repnz
mov
dec
xorb
test
fs
aam
cmp
sahf
mov
cmpb
push
testb
push
ret
jl
aad
pushf
mull
outsl
dec
data16
insb
jecxz
dec
into
shrb
mov
sub
and
and
or
movb
popa
loope
push
pop
sbb
jno
mov
and
clc
inc
and
popa
or
mov
push
cs
mov
mov
cmc
faddl
into
cmp
in
cmp
popf
mov
movsl
jecxz
outsb
jle
pop
jle
stos
dec
pop
mov
add
into
mov
cmp
or
popf
cmc
les
hlt
add
vmovapd
aaa
sbb
lock
enter
inc
mov
je
mov
int3
js
mov
add
or
add
add
pop
sub
in
lock
aaa
mov
jae
in
inc
ret
dec
jne
call
cmp
loopne
mov
push
xorb
mov
sbb
test
push
mov
pop
mov
mov
mov
push
pop
mov
cs
mov
mov
sbb
pop
adc
rorl
push
mov
lds
fidivrs
jle
sub
mov
sub
cmp
jae
mov
pop
and
pop
das
mov
xor
xor
imul
push
or
and
leave
jb
and
dec
xor
or
fcomps
shl
insl
imul
mov
arpl
ljmp
psrld
push
ss
mov
xchg
popa
or
test
sub
mov
sbb
hlt
and
out
mov
inc
xchg
push
test
cmp
inc
repnz
jecxz
js
push
cwtl
xchg
bound
adc
lods
jb
ljmp
lahf
mov
and
das
adc
xor
ds
std
jne
inc
test
cmp
xor
cmp
lods
icebp
mov
ret
xor
xchg
jmp
inc
mov
pop
or
inc
jge
or
faddl
enter
or
or
sti
in
dec
dec
dec
sub
cltd
mov
or
stos
lods
and
mov
push
pushf
outsl
or
js
adc
gs
stc
shl
sbb
ficoml
lcall
xor
fisubs
push
bound
lahf
jno
jne
xor
in
mov
leave
rcrb
bound
xchg
jmp
ss
lahf
roll
and
inc
out
sbb
enter
inc
mov
gs
mov
hlt
into
xchg
cltd
pushf
add
imul
xlat
movsl
push
jbe
leave
jge
mov
xchg
stc
sub
test
daa
andb
cli
sbb
loop
inc
jmp
fimull
sbb
stos
lea
ds
cmp
and
and
pop
mov
pop
push
mov
mov
in
cmp
jb
push
es
jmp
mov
adc
jbe
pmuludq
jo
lds
scas
cmc
push
in
cmp
push
stc
cmp
cltd
dec
mov
mov
int
push
rclb
sub
add
sahf
or
cmp
in
jne
mov
popf
inc
dec
or
push
adc
xchg
roll
push
sub
mov
pop
outsb
lahf
std
xlat
lret
xor
arpl
inc
subl
cmp
jge
jmp
xlat
xchg
orl
dec
insl
mov
cmc
push
aas
pop
mov
cmp
xchg
add
into
jbe
sub
push
js
cmpsb
lea
jecxz
push
sbb
fistpl
inc
inc
sbb
fdivs
les
adc
or
sbb
outsb
pop
rcll
imul
mov
mov
and
mov
shll
push
loopne
fildl
mov
ss
fucomi
mull
sahf
cmc
mov
data16
mov
mov
xor
hlt
jnp
and
push
adc
inc
sub
mov
imul
jge
repnz
add
ss
fstp
inc
push
or
std
ja
idivb
movsl
sbb
jb
das
in
fs
mov
jno
out
popa
sub
jno
data16
lock
in
pop
aaa
fsubrs
jns
cltd
aad
xchg
arpl
mov
jp
push
fidivrl
pop
movsl
cmp
add
inc
je
pop
std
xchg
enter
flds
push
mov
lcall
lods
cmp
inc
cmpsl
sbb
int3
leave
neg
cmpb
and
xor
dec
mov
mov
inc
imul
out
mov
dec
ja
xlat
rorl
pushf
sub
and
stos
dec
lods
and
cmp
xchg
scas
out
jo
aam
mov
pop
dec
mov
test
xchg
inc
dec
mov
sahf
mov
out
enter
in
xchg
dec
mov
cltd
dec
clc
push
push
mov
or
fdivrp
mov
and
sub
jno
outsb
mov
imul
enter
adc
dec
pop
and
loopne
xor
sub
movsl
inc
pop
test
push
fwait
add
insb
les
sub
pop
push
mov
push
ret
cs
cmpl
mov
int
mov
aas
cmpsb
sbb
add
xchg
and
mov
mov
or
sbb
mov
lods
add
imul
icebp
jns
sbb
les
clc
jns
fcomp
xlat
movsl
inc
hlt
mov
dec
ljmp
sbb
fwait
rcr
out
push
mov
ret
std
dec
rcrl
out
inc
out
pop
xor
cltd
cmp
mov
adcb
xchg
xadd
xlat
add
aad
insl
movsl
jmp
push
mov
mov
mov
sbb
pop
and
out
int3
out
fistps
test
dec
pop
jb
mov
ficompl
adc
icebp
mov
in
mov
xchg
out
addr16
enter
icebp
aaa
nop
test
lret
mov
xchg
xor
and
fdivl
or
jl
mov
test
mov
push
push
push
sahf
adc
adc
jno
out
add
mov
insb
mov
xchg
xchg
into
into
icebp
sbb
fsqrt
test
cwtl
add
jmp
mov
push
lret
cmp
pop
cltd
dec
cld
inc
sub
jb
inc
outsl
iret
cld
lret
sarl
cltd
arpl
mov
ljmp
loope
push
sbb
cmpsl
and
sbb
sbb
add
mov
jecxz
sbb
xor
in
xchg
inc
sahf
cwtl
subl
bound
inc
jbe
inc
movsb
adc
out
jae
push
aaa
sub
sbbb
jg
movsl
jns
insb
icebp
mov
add
iret
lods
xchg
stos
pushf
arpl
or
jecxz,pn
fwait
and
in
pop
push
mov
lret
movsl
xor
and
daa
leave
jb
jmp
add
inc
fadds
stos
leave
jo
sub
inc
mov
dec
repz
insb
mov
fs
cld
addr16
or
add
push
mov
fdivrs
push
lods
jbe
pop
sub
neg
xchg
add
insb
and
sub
fucomi
jle
cmp
dec
sbb
roll
mov
sbb
in
addl
and
sbb
pop
data16
adc
fucomp
dec
adc
mov
pop
cmp
jg
nop
imul
out
aaa
in
mov
xchg
mov
mov
shlb
cmp
mov
cmpsb
push
or
push
shrl
pushf
mov
mov
xor
pop
pop
addr16
stos
sub
pop
jbe
ja
ret
fs
test
insl
push
adc
sbb
aaa
add
test
or
sub
aad
mov
sbb
pop
push
repz
push
push
movsb
scas
cld
inc
pop
cli
xchg
cli
popa
xchg
sbb
mov
icebp
insb
clc
rcll
fnstsw
adc
sbb
inc
lcall
ja
daa
enter
sbb
shrb
filds
lds
jno
xchg
sub
bound
xchg
xor
pop
xchg
inc
stos
outsb
adc
jmp
fdivl
add
xor
xchg
data16
nop
and
sub
sbb
mov
adc
mov
ficoml
fbld
imul
and
pop
or
lret
and
or
push
push
stos
mov
cmp
gs
testl
mov
shrb
jae
movsl
jae
dec
hlt
adc
pop
push
mulb
xor
sbb
dec
lcall
maxps
orb
fidivl
sub
inc
testb
ret
pop
lahf
mov
and
lahf
mov
je
cld
adc
jnp
xchg
pop
std
xchg
dec
fcoms
sub
adc
or
mov
or
jmp
jg
adc
outsb
xchg
pop
sbbl
mov
jnp
inc
xchg
out
cs
repnz
loop
add
mov
and
popa
jns
lret
mov
add
imul
sub
out
fildl
jp
or
loopne
test
dec
xor
rorl
cmp
lock
les
fadds
adc
stc
adc
jo
inc
sub
movsl
dec
into
jl,pt
inc
dec
test
lds
cmpsb
pop
inc
push
mov
cmpsb
popa
lds
out
xorb
das
roll
into
insb
xchg
dec
dec
and
or
sub
into
inc
mov
and
inc
iret
mov
pop
xchg
mov
and
xchg
test
add
cmp
xor
or
inc
shll
mov
cmpsb
push
data16
xchg
roll
test
decl
clc
rcll
dec
imul
ret
jmp
xchg
jg,pt
mov
cmpsb
rcl
adc
push
hlt
out
xor
movsl
ret
push
add
ljmp
lret
jns
fdiv
dec
cmpsl
jl
fists
push
nop
sbb
loope
gs
bound
imul
subb
or
jle
rcll
add
mov
sub
adc
std
or
adc
repz
inc
addr16
push
jmp
mov
cmpsl
mov
adc
dec
mov
xor
or
es
push
loop
add
aaa
negb
mov
push
jmp
popa
mov
sub
arpl
xor
dec
jecxz
sbb
test
popf
cmp
call
dec
push
lods
in
and
xchg
fiadds
push
mov
inc
cmpl
stos
aad
cmp
arpl
inc
and
loop
imul
stos
pop
mov
rcrb
push
mov
add
mov
aas
aaa
xchg
imul
xchg
xor
inc
push
jmp
xchg
leave
add
inc
stos
sahf
call
sbb
daa
lds
loop
inc
jp
mov
mov
sub
xchg
and
icebp
inc
in
stos
inc
fimull
sbb
je
xchg
cmpsl
inc
ficoms
les
dec
imul
dec
clc
aad
xor
jge
pop
add
or
shl
xchg
stc
loopne
add
add
mov
push
imul
repnz
jbe
ret
enter
inc
fwait
scas
fcompl
cmp
cmp
js
cmp
enter
mul
jp
fisubrl
leave
jg
push
xchg
sahf
sbb
sbb
divl
cmp
cmc
data16
xor
mov
int3
push
xchg
jp
lcall
inc
lds
data16
inc
out
xor
cltd
not
sbb
or
icebp
cli
mov
inc
xchg
push
outsl
rolb
sti
xor
push
fnsave
scas
ja
js
sbbb
in
scas
sub
mov
xor
mov
insb
add
dec
add
imul
std
mov
push
adc
cmp
ret
stc
enter
repnz
ja
out
mov
in
js
pop
dec
lret
and
daa
add
sahf
push
push
data16
jmp
ss
mov
pop
or
xchg
outsl
shll
outsb
int
jl
mov
fcomp
daa
lret
and
push
mov
dec
xchg
pushf
rcrb
pop
or
enter
and
sbb
ss
or
xor
xor
mov
push
adc
adc
es
cli
dec
jo
loopne
out
je
adc
fsub
jmp
and
mov
mov
insl
push
mov
jg
loop
mov
repz
push
int3
jnp
shl
es
adc
out
sub
mov
mov
mov
inc
movsl
mov
sub
and
js
push
cmpb
xor
dec
stos
push
sbb
adc
lods
outsl
push
out
inc
ljmp
mov
stos
dec
mov
clc
inc
push
add
xchg
jo
pop
adc
in
int
jb
xchg
push
jge
push
sbbb
add
xchg
pop
fcomps
mov
sub
stc
push
int
rorb
mov
sub
lcall
lcall
inc
mov
sub
sbb
cmp
clc
icebp
push
fcomps
scas
je
dec
jne
sarb
lods
and
cmp
pop
test
xchg
and
mov
sbb
push
adc
dec
push
mov
jge
stc
xchg
sub
stos
xchg
mov
add
mov
in
inc
mov
mov
fsubrs
pop
mov
mov
xlat
xchg
cmpsl
hlt
outsl
or
outsb
push
nop
mov
ret
jmp
push
je
cmp
jae
jg
sbb
push
dec
add
out
pop
xlat
push
sbb
aad
inc
sub
jp
add
adc
testl
gs
into
sub
sti
mov
std
ss
sahf
dec
rorb
inc
mov
lods
les
mov
xchg
adc
jge
mov
sbb
jge
push
subl
into
add
mov
pop
add
mov
dec
mov
in
cmp
pushf
pop
clc
add
popa
adc
push
imulb
fsubrs
sub
push
ja
in
nop
xor
jg
iret
scas
outsb
sahf
out
adc
mov
mov
jecxz
dec
fs
lds
inc
or
add
jge
mov
testb
xchg
les
mov
aaa
push
outsb
mov
xchg
std
mov
cli
das
pop
lret
sub
mov
arpl
xchg
pusha
inc
inc
in
dec
mov
inc
stc
xchg
dec
push
lahf
push
add
cwtl
mov
mov
cmp
test
outsl
repnz
adc
ljmp
aad
cmp
mov
xchg
push
pop
aaa
test
ja
daa
xchg
dec
jno
add
push
pop
push
fmuls
xchg
add
test
std
push
push
or
inc
pop
out
addr16
mov
adc
fnstcw
rol
es
cmpsl
inc
xchg
jl
test
sub
xor
inc
lea
test
pop
aas
rclb
lock
cli
xor
mov
pop
xchg
jmp
arpl
in
sbb
popa
xor
inc
jns
mov
mov
lock
pop
in
icebp
cmp
repnz
hlt
loopne
insl
sub
rorb
inc
jnp
xor
pop
cmpsl
inc
fbld
mov
jno
and
mov
pop
and
int3
jp
and
jnp
shll
dec
jp
push
mov
push
add
movb
mov
scas
daa
add
nop
push
enter
out
dec
adc
pusha
cmc
cltd
lcall
notb
pop
imul
iret
cmp
js
xor
mov
repz
mov
sub
repz
sub
ret
sarl
idivl
adc
add
stos
adc
int3
jp
in
fldenv
jmp
dec
xchg
cmpsl
mov
cmp
or
jp
fs
aaa
insl
shlb
inc
out
cwtl
cmp
or
enter
xchg
inc
xor
icebp
sbb
xor
fldcw
shll
iret
mov
in
jmp
add
xchg
push
push
dec
repz
mov
out
and
pushf
sub
cmc
popf
mov
inc
outsb
xchg
mov
lret
out
or
inc
in
pop
push
movsb
jae
addr16
sbb
stc
in
push
sub
in
dec
mov
insl
mov
xor
sub
mov
or
negl
mov
dec
gs
stos
jb
pop
mov
push
sub
add
int
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
mov
xor
lahf
jne
mov
lcall
mov
or
add
int3
jle
xchg
xor
jl
pop
jp
aaa
jb
jecxz
addr16
sub
lret
mov
push
sbb
roll
push
sub
mov
outsl
mov
cmc
sbb
cltd
mov
out
popf
clc
jo
jecxz
loope
out
jmp
sbb
and
leave
out
xlat
mull
cmpsb
aam
or
das
push
lods
cmp
push
lds
int3
and
or
sub
icebp
enter
mov
mov
fstl
mov
out
jg
imul
fldt
fistps
xchg
lods
shrb
pop
mov
pop
fsubrl
mov
inc
repnz
xchg
sub
gs
push
lock
cltd
push
xchg
mov
mov
add
or
push
cmp
and
lcall
push
repnz
push
jnp
mov
push
xor
push
push
call
test
in
pop
push
inc
ret
sbb
in
mov
mov
ljmp
mov
in
jo
mov
mov
push
testl
popf
cmc
movsl
xor
mov
sub
out
lods
lret
push
sub
pop
sbb
mov
fcompl
bound
pop
push
arpl
icebp
and
mov
cli
shl
sub
sbb
ficomps
mull
xchg
sub
and
push
mov
imul
inc
add
dec
mov
pop
pop
stos
cmc
pop
sub
mov
fsubrs
xor
ret
subl
out
pusha
mov
mull
fldl
movsl
xchg
xchg
idiv
fsubrl
jp
enter
jmp
je
pop
pop
rep
incb
jb
add
lock
cli
dec
cmp
je
mov
shll
xchg
cli
rcll
xlat
in
adcl
mov
rcll
mov
mov
cli
jg
dec
movsl
add
jbe
sub
xchg
sahf
mov
fnstcw
inc
aam
sub
push
cltd
sar
mov
xchg
add
or
and
adc
mov
pop
fidivrs
leave
dec
fstps
add
jmp
jge
sbb
or
mov
inc
sub
mov
push
lds
es
and
pop
das
push
sarl
cmpsb
cmp
inc
fwait
add
clc
jecxz
dec
outsl
adcb
mov
ss
outsb
roll
ljmp
cli
xchg
xor
test
pusha
xchg
xchg
pop
out
cmp
lock
push
jns
test
or
push
aaa
inc
lea
cwtl
jmp
cld
lds
mov
and
push
or
sbb
or
mov
mov
xor
fsts
pop
adc
fs
xchg
pop
mov
shlb
push
xchg
ds
mov
inc
ljmp
es
in
addr16
sub
and
movsl
and
pop
jp
sub
cmpb
data16
pop
mov
sbb
xor
inc
mov
pop
mov
out
pop
push
repnz
or
push
mov
cmp
mov
cltd
clc
lods
and
fs
test
dec
push
xor
push
fidivrs
loop
out
test
push
push
fucomip
bound
push
clc
outsl
xor
xlat
mov
pop
dec
jmp
sbb
mov
mov
mov
adc
pop
jno
sbb
jne
mov
test
andl
and
push
test
sbb
faddp
pop
sahf
je
xchg
mov
sub
xor
mov
inc
mov
out
cmp
pop
add
and
xchg
xchg
lret
filds
adc
cld
icebp
ds
clc
adc
push
xchg
mov
push
mov
outsb
push
pushf
stos
mov
sub
add
int
in
xor
lods
pop
movsb
andb
cltd
mov
inc
jp
and
push
outsb
mov
mov
insb
mov
out
jnp
ljmp
adc
xchg
mov
inc
loopne
insb
inc
in
or
add
mov
ret
int3
inc
fs
mov
pop
lcall
pop
adc
inc
inc
stc
sub
cwtl
cmc
cmp
ret
mov
movl
popf
std
cmp
push
ret
xchg
or
lret
cli
dec
and
dec
dec
mov
ret
mov
movsl
xchg
subb
and
sub
cmovb
rcl
jl
pop
sub
dec
push
or
adc
lock
aam
jmp
push
inc
jmp
incl
and
in
dec
cltd
push
cmp
pop
pop
aas
mov
jge
sub
jecxz
push
rorb
es
cmp
shll
test
sbb
xchg
xchg
jl
inc
mov
cmp
pop
pop
xchg
movsb
cmp
mov
sub
cmp
out
mov
mov
mov
sbb
fistpll
mov
aas
fadds
and
sbb
jle
push
sub
push
movsb
adc
cmp
loopne
adc
icebp
cld
sbb
jge
test
adc
lcall
js
test
test
in
xchg
lahf
mov
movsl
mov
lahf
stos
inc
push
add
jmp
jmp
mov
push
aad
add
movsb
xchg
cmpb
mov
push
test
mov
dec
imul
push
in
push
test
insl
cmp
add
or
mov
sbb
pop
push
mov
test
sub
pushf
movsb
adc
cmpl
dec
cmp
aam
call
scas
iret
mov
jmp
movsl
add
aad
inc
adc
outsl
or
cmpsl
xchg
sub
ss
or
cmp
jo
subb
outsb
add
ljmp
jg
push
fcmovne
test
add
and
rolb
sti
pop
popa
or
out
inc
out
push
and
xor
push
jnp
sub
push
inc
imul
stos
sub
sbb
ja
test
stos
sbb
enter
andb
jno
mov
or
sbb
sbb
adc
in
and
dec
mov
or
data16
mov
jb
jle
lret
cmpsl
sub
mov
cs
cmp
adc
iret
adc
dec
in
popa
fdivrs
sub
dec
pop
push
jl
pop
mov
idivl
or
fimuls
jne
leave
jbe
jle
je
cmp
pusha
or
mov
push
xchg
pop
scas
pop
mov
lock
std
mov
mov
ret
out
cwtl
jo
repnz
dec
jne
sub
cmc
inc
out
fstpt
push
mov
push
cmpsl
and
jne
ljmp
mov
adc
in
jne
pop
pop
or
dec
push
add
jbe
dec
mov
and
nop
scas
push
fisttpl
xor
aaa
mov
inc
mov
aam
pop
mov
out
lret
jecxz
fbld
fs
xor
lock
pusha
imul
inc
data16
stos
jnp
int3
push
pop
scas
repz
enter
sub
jbe
cmp
mov
aam
mov
cmp
mov
daa
insb
inc
xlat
xor
or
pop
xchg
sarl
mov
xorl
xchg
test
sbb
jno
mov
inc
clc
aad
rcl
xchg
push
xor
addr16
mov
mov
jmp
ret
sti
and
mov
ficoml
inc
inc
ds
adc
push
jbe
cli
notl
adc
push
roll
mov
jecxz
fisubrl
mov
mov
repnz
xor
xor
jmp
fmull
mov
fucom
xor
imul
addl
cld
repz
sbbb
jnp
dec
push
cmp
lcall
push
mov
push
sbb
mov
testb
fiadds
sbb
xor
sbb
mov
mov
pop
in
push
push
es
and
inc
xchg
jnp
out
mov
xor
test
imul
sbb
pop
xlat
repnz
mov
jne
aas
jmp
lods
adc
mov
jae
clc
mov
add
sub
add
sahf
ret
outsb
mov
adc
aaa
sub
in
cltd
jp
in
pop
xor
ss
xchg
mov
shll
insl
iret
mov
xor
adc
iret
jge
enter
shlb
rclb
mov
jle
orl
mov
mov
xor
je
and
mov
mov
cmp
mov
pop
adc
insb
push
in
jns
fildll
mov
xchg
or
std
or
push
lret
jb
shlb
fmul
sahf
pop
iret
add
pop
jp
leave
jle
cmp
inc
add
dec
dec
loope
jbe
out
decb
fsubrs
cmp
shlb
hlt
xchg
mov
dec
mov
inc
pop
pop
ljmp
cmp
movsb
inc
sub
cmpsl
jns
xor
pop
inc
aam
mov
mov
xor
pop
push
inc
sbb
push
add
outsb
pop
repz
cs
in
cmpsl
ljmp
ret
or
sub
test
add
adcl
sti
push
enter
pop
pop
int
mov
dec
jp
jno
scas
xor
iret
sub
mov
movsl
loop
adc
daa
aam
ss
aam
test
jmp
or
sbb
push
pop
add
add
aaa
pop
test
push
fbld
pop
jno
mov
pop
call
pop
imul
fisubrs
sbb
mov
dec
je
ret
je
cmc
aam
fyl2xp1
mov
les
jno
sbb
or
cmc
jg
je
push
scas
pop
sub
mov
das
mov
dec
imul
and
lods
push
in
or
imul
xor
mov
xor
mov
adc
lret
hlt
xchg
pusha
notl
in
inc
xor
xchg
test
jle
dec
xor
sub
jo
pushf
pop
into
insl
dec
loopne
outsb
rorl
dec
inc
cli
stos
stos
fistps
jnp
and
fwait
lret
popa
pop
movsl
out
icebp
aam
lock
inc
mov
icebp
pop
mov
push
inc
insb
or
cmp
insl
aas
xor
cmc
mov
imul
xchg
sub
into
cwtl
mov
lret
imul
lret
data16
enter
cmp
outsb
mov
xor
jmp
test
out
out
mov
push
pop
or
pop
or
fsubl
jmp
mov
test
mov
popa
xchg
and
arpl
imul
mov
outsb
outsl
cmp
lds
push
xlat
cltd
push
dec
and
sub
cmp
outsb
shl
outsb
dec
dec
icebp
cwtl
sub
fs
fwait
mov
and
or
rorl
dec
pop
mov
inc
lcall
add
inc
ds
mov
and
fwait
push
sahf
imul
ror
jno
fisttpll
push
cmp
dec
pusha
adc
pop
test
xchg
dec
sbb
insb
stos
out
pushf
jo
inc
rcr
or
mov
add
adc
lret
add
push
and
outsb
aad
les
popf
cmp
cs
xchg
mov
nop
iret
and
ljmp
sub
fstps
movl
push
cmpsl
or
dec
rcrb
mov
shlb
jecxz
dec
dec
test
mov
sahf
mov
ret
or
movsl
aas
mov
sub
mov
fildll
ret
cmpsb
push
mov
jle
jge
je
movsb
sub
popa
movsl
clc
adc
shlb
mov
push
popa
xor
movsl
aas
mov
loopne
xor
cli
mov
cpuid
lea
sarb
mov
mov
jge
lret
dec
in
arpl
xchg
call
sbbb
insb
lods
dec
in
mov
inc
sbb
orb
repnz
pushf
dec
push
xchg
cli
sub
pop
sub
or
enter
mov
mov
iret
fiadds
in
pop
dec
faddl
sbb
and
stos
mov
jb
call
paddq
mov
push
addr16
xchg
jne
fwait
inc
mov
sub
ret
ljmp
cmp
jge
mov
rcrb
das
cs
mulb
nop
rdmsr
pop
xchg
sub
jmp
dec
add
or
push
fistpl
push
mov
adcl
push
sub
je
dec
add
pop
pop
ja
dec
dec
xorb
jecxz
in
imul
jp
cmpsl
adc
mov
mov
cli
loop
jle
push
inc
fdivrp
scas
addps
xchg
scas
adc
dec
jge
jns
pop
pop
xchg
div
or
mov
xor
int
sbb
mov
stos
dec
add
cld
sub
shl
fs
push
in
test
rorb
jb
lret
sbb
in
fdivrl
sbb
js
jbe
mov
stos
cmpsl
mov
adc
ds
test
sbb
das
fmuls
mov
scas
sub
bound
or
cmp
dec
cmp
jg
push
inc
lea
push
in
and
gs
jmp
mov
adc
call
dec
xchg
imul
les
aad
rorb
push
loop
lods
gs
fs
xchg
xchg
bound
ret
movsl
icebp
jmp
das
test
int
inc
mov
sub
lods
das
mov
xchg
cmp
push
repnz
xchg
inc
push
rcrl
mov
mov
mov
test
mov
add
cmp
mov
jae
out
mov
es
popf
pop
mov
mov
push
pop
aas
lcall
lds
outsb
lock
pop
push
scas
xchg
jbe
lcall
xchg
cmpsb
out
ja
out
pop
cld
dec
jns
adc
adc
pushf
shrl
out
loope
xor
adc
arpl
cmp
nop
mov
sti
sbb
xchg
movsl
sub
movsb
ret
or
add
pop
push
outsb
jbe
addr16
push
movsl
sub
jge
insl
test
es
repz
ljmp
rcl
mov
into
je
xchg
aaa
adc
jns
pop
adc
and
and
faddl
and
sub
dec
inc
mov
test
rcl
imul
push
mov
addb
negl
mov
cmp
ss
pop
fsubrl
pop
std
push
lret
ja
out
arpl
call
xor
cmpsb
and
cld
mov
mov
or
lds
dec
shll
mov
mov
popa
es
adc
fs
adc
and
adc
loop
cmp
out
mov
fwait
sbb
lret
xchg
adc
into
stos
sub
stos
pop
rcr
mov
dec
cmp
add
insb
jl
inc
loopne
aas
arpl
shrb
in
loopne
arpl
sub
jns
and
xchg
insb
xchg
ret
out
in
or
je
lods
xchg
popa
inc
aas
sbb
cltd
test
cld
int3
jnp
inc
xchg
xor
sub
fistl
imul
clc
adc
sub
or
dec
sub
inc
fdivrs
ds
dec
jl
jmp
inc
iret
jno
mov
negb
decb
inc
cld
mov
or
ret
rcrl
cld
mov
call
inc
mov
add
insb
aas
and
or
push
adc
add
inc
fstpl
ret
push
ds
or
xchg
jns
inc
xor
adc
jbe
shlb
in
adc
dec
adc
add
fs
mov
pop
arpl
cmp
shlb
push
dec
push
cmp
fxam
icebp
sbb
jae
jg
xchg
test
ljmp
xor
mov
rcl
add
pop
dec
pop
jb
pushf
jo
movsb
inc
add
std
jnp
in
push
inc
icebp
pusha
mov
sbb
dec
outsl
or
out
sbb
std
jecxz
lods
loope,pn
cmp
cmp
daa
xchg
dec
fidivrl
imul
inc
add
loop
or
mov
iret
jbe
pop
xchg
xor
cmp
lcall
clc
sub
jno
add
mov
cmpsb
mov
dec
sbb
imul
xchg
lods
cmp
mov
mov
push
sbb
movsl
pop
jnp
cmp
decl
mov
mov
inc
lock
add
or
mov
shrl
ficompl
cmpsb
hlt
jle
xor
cmp
shr
lret
mov
add
pop
inc
or
popa
jl
stc
clc
xchg
cmp
cmp
iret
daa
cs
jmp
mov
push
iret
mov
inc
dec
aad
nop
repnz
sbb
aas
aad
inc
loopne
pushf
mov
inc
mov
insb
cli
mov
sub
inc
ret
scas
push
scas
cwtl
jb
inc
jae
icebp
outsb
cmp
int3
popf
arpl
inc
call
pop
int
lods
enter
arpl
mov
push
mov
jg
xor
pop
mov
push
outsl
leave
xor
mov
clc
std
popa
aad
and
scas
xorl
in
clc
push
mov
pop
dec
xor
negl
sti
jl
mov
mov
arpl
mov
mov
leave
pop
push
xor
adc
xor
or
mov
ret
popa
ret
mov
psubusb
mov
hlt
std
lock
lret
mov
int
das
bound
cmp
adc
xchg
mov
push
movsl
fisttps
push
mov
mov
daa
mov
pusha
out
sbb
scas
jno
add
loop
fs
fincstp
and
sub
clc
sub
cmp
sbb
insl
xchg
ja
test
cmpsb
in
xchg
out
dec
cmp
daa
outsb
pop
pop
xlat
fcomps
pushf
imul
icebp
xor
movsl
or
mov
bound
pop
sub
imul
fnstenv
data16
push
cmp
push
pop
iret
push
xor
aad
sub
fistl
xchg
jg
mov
push
push
ss
stos
push
push
pop
pop
sbb
mov
mov
in
xchg
sbb
jae
cld
add
mov
xchg
ss
mov
xchg
dec
mov
ljmp
lods
shl
adc
popa
push
jne
jno
repz
push
sub
rcll
mov
insb
jb
loop
xchg
adc
push
xchg
movsb
lds
int
jg
mov
mov
push
inc
mov
cmp
inc
inc
ficomps
or
daa
mov
mov
arpl
or
xchg
movsl
xchg
mov
stos
das
dec
mov
mov
jno
lcall
mov
hlt
cwtl
addr16
insl
mov
adc
sub
xlat
loope
jp
adc
lret
pop
inc
inc
push
aaa
inc
adc
and
cltd
mov
sahf
sub
orl
test
sbb
sbb
sarl
mov
adc
scas
xchg
cmp
movsb
andb
mov
pop
lret
jp
push
lahf
adc
push
jne
stos
jbe
xor
jno
jge
cmp
xchg
inc
cmpsb
dec
jbe
arpl
lahf
imul
dec
subl
in
lcall
jg
movsb
sub
fmulp
xchg
xchg
shr
ror
mov
dec
xchg
jmp
mov
dec
xchg
dec
jl
icebp
int3
fwait
jg
xchg
push
push
fcompl
fisttpll
setbe
pop
repz
rorb
loope
mov
stc
mov
cmpsl
scas
pop
xchg
and
test
mov
cmp
adc
fnstsw
in
and
lret
and
mov
rclb
mov
dec
mov
inc
add
jno
mov
adc
add
sarl
int3
je
out
loop
fdivrs
xchg
push
fwait
jne
lahf
push
fistl
je
cld
aaa
sti
pop
ja
cli
push
inc
stc
push
js
pop
xor
jl
jg
imul
dec
add
cmp
jl
dec
negb
mov
clc
cld
scas
adc
repz
jle
mov
jmp
icebp
es
scas
data16
inc
fldenv
xchg
inc
dec
adc
cld
fwait
pop
xchg
je
sbb
mov
icebp
adc
cmp
xor
pop
out
inc
pusha
xchg
cmp
xor
push
rcl
jge
fnstcw
mov
mov
in
mov
adc
pop
out
and
or
fildl
push
lods
js
fmull
xchg
cld
or
add
adc
mov
enter
inc
shll
ret
mov
or
adc
loopne
addb
scas
rol
add
sarl
ljmp
clc
shll
push
sub
jp
mov
aaa
dec
or
sbb
dec
pop
push
stos
dec
stos
arpl
repnz
dec
push
hlt
insl
loopne
mov
loope
test
push
lea
pusha
aaa
inc
lret
subl
in
rol
mov
jbe
cltd
ljmp
out
cltd
sbb
ret
push
mov
jge
dec
fstps
scas
out
push
outsb
xor
fisubl
mov
mov
inc
xchg
push
and
ss
inc
mov
and
or
cmc
fistps
xchg
add
inc
mov
out
pop
int
jg
pop
std
dec
popf
bound
loopne
dec
fcom
data16
xchg
xchg
push
jbe
shrl
fbstp
mov
or
xchg
cmp
in
call
sti
rclb
les
ret
ljmp
adc
xchg
and
mov
loope
pushf
lahf
sub
cmp
fisttpl
dec
cmp
push
mov
and
ss
xchg
or
push
je
aas
adc
addr16
ja
lds
fbld
rolb
outsl
data16
jns
sahf
cmp
cmp
pop
addr16
or
in
aas
sti
push
sbb
and
dec
push
push
cmp
je
sbb
push
jo
pop
push
es
and
sub
ret
mov
jnp
sub
test
dec
jbe
sub
mov
push
aad
cltd
mov
sub
dec
dec
lds
xchg
jno
gs
call
inc
inc
leave
lret
mov
pop
in
push
cli
in
sbb
xlat
fdivrs
or
jecxz
scas
mov
add
les
imul
lret
cmpsb
sbb
xor
xchg
nop
enter
stos
subb
lea
stos
push
jns
adc
std
daa
arpl
xchg
mov
cli
aam
sbb
mov
jb
das
movsl
and
xor
orl
xor
and
fcmovb
aas
inc
stos
cmp
cld
gs
incl
xor
mov
xlat
mov
mov
movb
cltd
inc
pop
cmpsl
aam
mov
jge
jae
scas
test
fsubrl
std
imulb
fucomp
cs
add
mov
icebp
iret
pop
xor
and
popf
scas
sbb
inc
pop
push
cmp
push
pop
pusha
adc
xor
lahf
in
adc
jae
sbb
dec
lret
aad
ss
pop
js
into
in
negb
out
cmp
jl
cs
sub
cwtl
dec
xor
fs
and
mov
pop
jl
imul
mov
outsb
sti
xchg
cmpsb
jns
xchg
lahf
shll
adc
pop
cltd
subl
dec
adc
add
add
inc
ja
sbb
xchg
dec
xchg
pop
adc
test
std
lds
adc
loopne
sbb
nop
xchg
movsl
inc
push
pop
push
stos
fisubrl
mov
mov
ds
push
xchg
xor
push
fnstsw
cmpl
movsl
mov
test
push
xor
aas
mov
rolb
scas
jecxz
cmp
push
shll
test
xchg
jecxz
insb
out
add
mov
pusha
imul
ds
aam
mov
gs
rclb
add
lock
xchg
cli
sbbb
sub
push
and
bound
out
jle
pop
jl
jb
das
dec
inc
gs
sbb
add
sub
lods
pop
lock
add
je
push
add
xor
cmc
lods
cmp
shrb
movsl
cltd
ds
or
push
jmp
dec
push
adcb
mov
mov
add
dec
add
sub
lahf
lea
dec
push
dec
xor
push
shl
pop
sbb
push
stos
std
mov
dec
ret
movsl
out
push
cltd
dec
std
inc
xor
ret
cmp
in
jo
jmp
mov
pop
jecxz
or
stc
sub
mov
stos
dec
lods
pop
aam
js
js
out
rorb
insb
inc
push
je
fistpl
jne
inc
leave
cli
ficoms
push
lret
cmp
mov
xlat
push
insl
popa
xchg
in
daa
ret
xchg
shll
cli
jbe
sub
fldl
call
jno
push
inc
sti
mov
sub
stos
jmp
sbb
mov
mov
leave
pop
sbb
adc
jne
cmp
lret
popa
out
or
fisttpl
cmc
sahf
adc
mov
mov
imul
adc
mov
jecxz
adc
or
and
ret
insl
lds
inc
add
pop
fwait
mov
push
sbb
fwait
dec
sub
fldt
fbld
pop
sub
das
lea
test
xchg
push
aad
imul
mov
inc
fdivrs
subl
cmp
mov
xor
popa
xchg
inc
out
scas
cmp
jbe
and
push
dec
pop
fs
xchg
pop
and
or
hlt
cli
cmp
shlb
sub
ljmp
iret
fwait
jnp
ja
mov
mov
pop
mov
outsl
mov
addl
jns
enter
mov
leave
fstps
dec
jno
mov
push
outsb
sbb
gs
xor
ficoms
loope
stos
fildl
push
add
cmpsb
adc
leave
cwtl
sub
lret
pop
es
dec
xchg
mov
ret
and
push
imul
loope
into
adc
pop
aam
push
fwait
in
das
aam
das
push
cmp
andl
cmp
out
add
in
hlt
and
mov
lock
xchg
inc
aad
sub
push
shl
mov
xchg
sub
sub
jno
imul
fisttpl
popa
xchg
jecxz
mov
jecxz
aam
lcall
js
mov
call
cmpsb
lret
sub
xor
jg
sahf
movsb
into
pushw
call
inc
ficomps
int3
cs
hlt
test
lahf
jbe
pop
mov
aad
mov
adc
jo
pop
in
push
je
dec
mov
in
icebp
and
sub
jbe
movsl
pusha
push
test
xor
das
mov
clc
mov
xor
bswap
pop
fstpt
push
inc
jnp
xor
les
sbb
cmp
mov
mov
dec
sbb
mov
ret
mov
cmpsl
in
iret
repz
call
mov
mov
xchg
sbb
jb
clc
or
push
outsb
incb
stos
dec
stos
jno
daa
inc
cmp
out
popf
inc
out
ffreep
in
fs
and
xor
js
xchg
les
fildl
jnp
cmp
sub
and
push
inc
sbb
imul
movsb
adc
hlt
mov
cld
mov
mov
fiadds
add
ret
iret
cmp
cmpsb
popf
push
daa
mov
das
jno
jbe
jmp
xor
xor
inc
pop
jb
repz
dec
mov
andb
push
mov
mov
push
jmp
je
xchg
icebp
push
aas
fdivp
inc
mov
mov
push
sub
cwtl
jnp
mov
ja
pop
add
push
stc
adc
cmc
ja
mov
xor
push
lahf
add
loop
fcompl
icebp
rcr
inc
jge
in
mov
es
jge
mov
loopne
sqrtps
mov
mov
pop
aas
test
int
imul
cmpl
stc
adc
ficompl
or
xchg
adc
fdivrs
push
int3
mov
jecxz
repnz
cmp
pop
jo
cmp
repz
push
push
es
and
ss
rclb
int3
xor
xchg
int
jmp
daa
pop
popl
scas
lcall
or
mov
insl
adc
dec
mov
fisubrl
cmp
push
xchg
mov
mov
cmpsl
aam
sti
inc
push
sti
xor
inc
lahf
rcrb
cltd
xor
xor
arpl
out
test
addr16
push
add
lret
out
mov
mov
pop
push
addl
repnz
movsl
pop
fs
aad
mov
jle
inc
scas
inc
ffreep
ret
xchg
push
mov
jg
adcb
xchg
sub
push
arpl
add
insl
push
or
adc
mov
sbb
or
pop
test
mov
std
ljmp
sbb
inc
mov
xlat
nop
rcrb
scas
and
adc
pop
and
inc
mov
pop
xchg
sbb
bound
push
or
loope
and
sbb
xchg
ret
mov
inc
jg
les
sub
cltd
lahf
cmp
pop
gs
or
dec
mov
lea
jl
in
mov
test
in
negl
repnz
lods
jne
mov
push
imul
jo
cwtl
int3
dec
lcall
daa
jno
aas
lods
adc
lahf
sub
ficompl
jo,pn
mov
xorl
push
divl
inc
arpl
ss
popf
in
push
call
inc
pop
cmp
inc
pop
cld
cwtl
fwait
gs
xor
add
icebp
push
cli
cmp
shll
shrb
mov
fwait
sub
stos
lahf
nop
lret
scas
roll
je
ret
insl
mov
fxch
bound
xchg
mov
sbb
movsb
cltd
fs
xor
enter
dec
sti
sti
shll
xorl
movl
add
aad
fs
jne
repnz
push
dec
xor
or
and
dec
subl
sti
fs
xor
add
jg
imul
aam
aaa
push
xlat
adc
in
fucomip
das
mov
pcmpeqb
mov
lret
ljmp
stos
push
or
jns,pt
push
mov
add
icebp
mov
lcall
xor
and
fs
fs
mov
daa
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
jne
lahf
je
addb
adcl
inc
sbb
sar
stos
lock
popa
xor
push
mov
inc
out
in
rol
pop
or
testb
or
lret
sub
test
sub
repz
mov
lret
sbb
mov
inc
and
push
add
insl
xlat
ja
test
xor
inc
mov
or
cmp
xor
cmp
xor
mov
das
cltd
flds
out
pusha
lds
bound
sbb
xchg
xchg
ja
iret
mov
cmp
add
popa
adc
jb
loopne
dec
cwtl
or
mov
dec
jp
cld
shlb
xchg
mov
mov
xor
ret
xorb
jmp
test
lds
jle
imul
rclb
adcl
in
sbb
push
sub
cmpsb
xor
lea
dec
mov
mov
inc
cmp
adc
dec
imul
cld
movsb
or
sbb
add
inc
cmp
xchg
jns
sbb
or
add
sub
mov
je
mov
pushf
inc
test
clc
insl
ret
pop
xchg
out
dec
lea
jne
push
push
mov
jb
divl
les
incl
fcomip
pop
and
mov
mov
lods
xor
mov
sub
xor
ficoms
fmull
jnp
add
jmp
movsb
sbb
call
jno
xor
mov
mov
jb
pop
sbbb
xor
cli
jecxz
repnz
iret
das
mov
push
mov
fwait
cmp
andb
add
outsb
inc
jbe
sbb
pop
mov
inc
fisttpl
mov
fidivrs
sub
jmp
jnp
daa
fisubl
sub
aaa
cs
cvtps2pd
mov
lods
fwait
das
orb
frstor
in
mov
mov
es
in
xchg
inc
pop
jp
rcrb
sub
ljmp
mov
jmp
incb
out
jo
popl
loopne
iret
xchg
and
fistpll
fdivl
pop
scas
push
mov
mov
add
push
cwtl
jmp
std
pusha
dec
je
mov
fisubs
sub
or
inc
push
cmc
imul
pushl
sub
andb
addr16
xchg
mov
push
ja
es
mov
je
dec
fwait
mov
idiv
dec
in
movl
int3
dec
test
mov
aad
push
jno
inc
popf
mov
ret
sbb
xchg
dec
sahf
loopne
sub
iret
or
and
cmpsb
jp
pushf
add
or
adc
mov
rorb
sbb
inc
mov
xchg
xor
lods
jo
loopne
dec
mov
xor
enter
je
mov
sub
rclb
loope
xchg
mov
daa
mov
push
or
jmp
add
je
add
mov
in
add
xchg
sahf
ja
stos
mov
xchg
ret
cmc
icebp
inc
push
lock
or
inc
mov
incb
lock
in
cmpb
dec
mov
sub
or
nop
mov
dec
js
pop
push
mov
insl
fisttps
lods
jl
js
rolb
pop
outsl
jle
cmpsl
sub
sbb
shl
xchg
xchg
out
loop
shlb
test
pusha
dec
test
ja
imul
jbe
loopne
mov
pop
loopne
add
dec
adc
int3
or
cmp
movsb
rcl
jge
fistpl
in
xchg
movsb
cmpsl
push
and
sbb
sub
je
jecxz
cmc
adc
xchg
or
leave
pusha
leave
outsb
push
bound
cltd
pushl
jnp
hlt
es
sub
aas
daa
rol
cmpl
lds
and
and
mov
dec
pop
jns
xchg
loopne
pop
add
xor
roll
dec
pop
mov
lea
mov
rol
or
sub
rcrl
push
xorl
leave
inc
cmp
fbstp
cmp
ljmp
push
cmc
jmp
ret
mov
jno
or
sub
popa
jnp
psrld
pop
es
flds
cmc
es
sub
mov
les
xchg
sbb
in
dec
or
clc
push
cmp
and
int
mov
scas
mov
mov
or
incl
dec
jl
xchg
cmp
mov
das
pop
test
jp
fsub
jmp
clc
push
jp
mov
adc
dec
jge
jno
dec
adc
daa
outsl
mov
jno
out
jbe
js
test
jae
icebp
inc
or
cmpsl
lret
pushf
pop
push
dec
test
mov
aaa
lahf
xchg
ss
lea
insl
insb
xchg
in
inc
and
mov
jo
cmp
out
mov
mov
cmp
in
adc
sbb
dec
movsb
xor
xchg
add
sub
mov
test
push
adcb
cld
lret
xor
add
sub
pop
cmp
lret
pop
testl
or
out
xor
xchg
fisttps
lahf
rcr
add
jmp
jmp
ja
add
leave
push
cmp
mov
enter
out
fsubl
lods
sbb
stos
lods
outsb
lcall
mov
mov
subl
lea
xchg
add
mov
sti
shrb
and
mov
dec
test
sub
stos
mov
add
and
mov
scas
sbb
movsb
and
mov
dec
inc
mov
jbe
and
push
sarl
je
loopne
in
iret
pop
mov
aas
mov
push
aam
pop
hlt
inc
sti
fst
push
popl
loop
test
outsb
rorl
je
daa
insb
in
outsl
arpl
call
push
jbe
lcall
clc
cltd
and
xor
sbb
jmp
mov
fsubrp
mov
or
loope
ljmp
push
and
pop
ret
subl
ret
int3
mov
sub
xor
push
popa
roll
add
fnstenv
cmc
jmp
outsb
pop
fucomi
mov
bound
mov
fnstsw
sbb
in
xchg
pop
cmpsl
xor
add
movsl
scas
adcl
mov
loopne
in
xor
test
jl
enter
fsub
lods
fidivrl
push
mov
addl
mov
adc
xchg
ljmp
iret
daa
dec
push
int
lock
jb
subl
sub
roll
imul
cmpsl
pop
sbb
pop
inc
idivb
push
and
cmp
add
and
leave
dec
jne
out
inc
pop
loope
cmp
jb
xchg
sub
or
ret
lret
out
add
repz
addr16
nop
lret
imul
test
add
mov
mov
repnz
nop
insb
add
into
daa
jbe
and
jo
mov
inc
adc
gs
add
mov
aam
push
push
push
inc
dec
inc
adc
add
pop
jno
stos
jno
mov
scas
lret
xchg
adc
jl
pop
andl
int3
insb
xchg
pop
or
sub
imul
shlb
add
int3
fcoml
nop
shll
lods
popa
push
xchg
insb
stos
insl
sbb
xchg
fdivs
sub
out
fsubp
rorl
dec
sbb
pop
flds
adc
xlat
and
mov
xchg
jecxz
jne
lahf
pop
test
hlt
jmp
fistps
mov
int
xlat
jp
dec
inc
fldlg2
aam
cmp
addr16
push
pusha
cmp
mov
mov
dec
aas
ja
push
test
outsl
mov
lods
push
jg
jae
add
mov
or
push
stos
pop
dec
mov
jmp
xlat
xchg
inc
cmp
scas
movsl
dec
push
xor
mov
add
pop
fsubrl
pop
or
push
arpl
add
add
sbb
imul
adc
inc
dec
mov
push
mov
mov
in
mov
inc
dec
mov
scas
mov
xchg
adc
and
add
add
dec
into
bound
add
sahf
jmp
mov
push
mov
mov
fistl
push
fdivrl
xor
xchg
lret
push
les
cmc
and
frstor
subl
sub
test
xchg
test
adc
cli
lods
cmp
push
imull
add
xor
cli
mov
clc
sbb
shlb
mov
data16
and
cltd
fnstsw
dec
bound
popf
mov
ret
subb
pusha
cmp
push
and
test
fbld
inc
loop
mov
sbb
nop
cmc
add
daa
inc
faddl
ret
sahf
icebp
push
fimuls
xchg
mov
pop
jbe
fs
mov
sbb
cli
xchg
adc
push
sbb
mov
push
pop
sbb
mov
arpl
std
or
shlb
stos
jbe
push
stc
jle
int3
jnp
pusha
int
pop
jbe
repnz
int
pop
orl
adc
stos
test
inc
lea
adc
push
repz
out
inc
push
es
push
jecxz
sarl
push
xor
jg
push
cli
cmc
push
mov
sbb
inc
dec
jge
test
popf
in
fisubrs
das
inc
xor
shlb
xchg
xchg
ss
repnz
popf
std
push
arpl
insl
test
mov
sub
pop
cmpb
adc
cwtl
or
and
jmp
roll
cmp
pop
jg
mov
orb
sbb
inc
xor
push
adc
insl
fstp
mov
dec
push
jae
aad
negl
cmp
fisttpll
push
iret
and
xchg
mov
cld
fcoms
xlat
add
pop
xchg
les
movsl
dec
xchg
cwtl
add
cmp
jo
repz
out
sbb
adc
cmp
cmpl
lret
push
insb
mov
xchg
icebp
cmp
cmp
adc
push
pop
mov
in
mov
dec
mov
ret
add
inc
adc
cwtl
ds
es
repnz
into
lea
ja
jbe
jge
xchg
dec
jae
shll
mov
xchg
inc
pusha
dec
inc
jbe
adc
int
xchg
dec
out
lcall
xchg
mov
mov
and
xor
cmp
mov
push
leave
xchg
mov
data16
into
je
pusha
sbb
shrb
lods
mov
sar
rolb
jae
mov
pop
les
pop
sahf
lea
mov
mov
in
scas
pop
pop
test
jnp
mov
jns
shlb
imul
fs
arpl
push
fwait
push
repnz
mov
dec
push
cmp
sbb
movsb
sub
arpl
add
jg
insl
mov
shr
aam
xchg
push
cltd
jp
int
subl
popa
fcmovu
stos
insb
hlt
push
sahf
dec
pushf
xchg
leave
push
mov
cmpsb
std
lahf
sbb
cmc
imul
dec
hlt
in
ja
or
aad
or
in
push
insl
lcall
subl
sbb
xor
pop
jg
cwtl
inc
cmc
push
xor
fbld
and
or
add
es
mov
cmpb
shr
mov
iret
mov
mov
cmc
adc
icebp
ror
out
ja
add
mov
int3
in
fsubrl
subl
xor
jbe,pn
sub
adc
xchg
movsb
jl
ret
adc
in
in
jbe
xchg
std
shll
cmpsb
xchg
cmp
mov
out
add
fldt
add
or
mov
andb
xor
dec
mov
inc
cmp
bound
mov
lods
mov
mov
inc
adc
push
adc
pop
jne
mov
shll
loop
jno
pop
insb
movsb
scas
repz
daa
int
adc
or
sbb
inc
push
pop
xor
inc
icebp
adc
mov
sbb
popa
sahf
sahf
pop
xor
jmp
sar
arpl
gs
ret
ds
jg
loopne
je
leave
pop
sub
mov
sbbb
adcl
adc
decl
scas
cld
sub
mov
insl
cmp
icebp
divb
mov
arpl
xchg
xchg
dec
mov
call
aam
mov
or
mov
mov
icebp
pop
pop
pop
jne
repnz
rorb
hlt
pop
inc
loopne
lcall
dec
rcr
fidivl
or
mov
mov
mov
mov
fsubr
lock
cwtl
push
pop
ds
dec
sub
and
lahf
pop
cmp
leave
mov
mov
jnp
xor
jnp
nop
jno
scas
shr
jb
pop
pop
enter
ret
cld
mov
dec
push
dec
je
aad
mov
jno
pop
std
sub
rcrb
push
mov
pop
dec
xchg
inc
pop
mov
loope
mov
test
dec
clc
cs
dec
mov
lret
inc
jecxz
mov
dec
jecxz
out
or
cmpl
mov
adc
mov
sbb
hlt
xor
out
adc
movsl
fmul
gs
cli
xor
lret
jb
or
movl
inc
adc
or
ljmp
and
mov
lea
mov
mov
xor
pop
popf
push
mov
cmp
insl
xchg
lret
out
and
jne
cmpsb
sbb
inc
fwait
jle
add
test
fistl
hlt
popf
outsl
nop
imul
jecxz
xor
xchg
mov
test
push
add
into
gs
sub
mov
lods
mov
imul
rsqrtps
mov
xchg
int
push
cmc
xor
dec
mov
jno
sarb
lds
cwtl
mov
nop
dec
enter
sub
push
mov
sbb
xor
movsl
mov
repnz
fbld
inc
loop
je
dec
add
lds
mov
aaa
aam
mov
jmp
sbb
cld
pop
pop
shr
dec
dec
ret
pop
test
push
push
cmc
xor
aas
in
pop
fistl
jl
jl
cli
lock
mov
xchg
das
idiv
lods
fs
jo
push
rcrb
cmpb
dec
xchg
mov
adc
mov
out
cmp
inc
pop
imul
sbb
cmp
jo
fmuls
cmp
popa
pop
jnp
lahf
jnp
xor
in
aam
ds
dec
fbstp
out
mov
cltd
sub
testl
out
pop
mov
dec
mov
in
xchg
add
pop
xchg
mov
jecxz
sub
pop
adc
iret
popa
xchg
mov
decb
jl
movsl
lret
hlt
aas
push
and
xchg
xor
inc
sub
fs
fcmovnb
xor
mov
cld
inc
cmp
jns
pusha
fidivrl
rclb
and
gs
xor
xor
jae
or
iret
mov
nop
sahf
jbe
xchg
mov
and
leave
in
xchg
xchg
fnstcw
mov
cmpsb
mov
adc
push
jmp
pushf
dec
inc
shrl
outsb
movsb
adc
mov
dec
push
cmp
stos
mov
in
mov
mov
cmp
hlt
cmpsb
jp
call
dec
mov
pop
push
push
mov
call
cmp
dec
data16
stos
pop
in
sbb
aas
adc
push
sub
mov
cmp
or
add
rolb
scas
sub
es
jo
into
fwait
out
imul
xorl
xor
and
bound
ret
mov
dec
aad
stc
or
aaa
and
scas
je
xor
aad
ljmp
inc
call
sbb
mov
push
inc
data16
add
dec
jecxz
cmp
int3
pop
std
push
push
add
xor
pushf
and
cld
xchg
mov
fisubrl
mov
push
dec
mov
mov
sub
cmp
push
jmp
scas
pop
addr16
push
loopne
sub
sub
pop
shrl
cmp
jge
fdivrl
imul
jp
ret
js
or
mov
adc
pop
es
mov
jg
jp
jae
sub
mov
mov
xchg
fstl
cmp
cli
lret
mov
mov
and
pop
sbb
xchg
loop
jecxz
stos
outsb
imulb
cmp
add
mov
pop
jae
pop
ja
stc
or
in
xor
pop
jns
lock
and
movsb
inc
inc
dec
push
mov
cmpsl
js
pop
iret
inc
iret
add
cmc
push
inc
push
xchg
ja
mov
movsb
pushl
mov
repz
andb
pop
sub
daa
xor
inc
in
adc
imul
mov
scas
std
push
mov
test
hlt
adc
in
mov
pushf
jp
jae
lahf
test
mov
xor
mov
inc
mov
dec
sub
mov
call
cmp
repnz
sbb
mov
xchg
stos
cmpsb
lret
and
pop
mov
adc
les
push
sub
out
sub
mov
mov
xor
xor
mov
es
xchg
jno
stc
jg
jge
bound
jno
add
fs
out
or
enter
lahf
inc
arpl
push
mov
ds
cmc
push
jb
push
mov
add
fs
or
imul
pushf
sti
add
shlb
mov
push
pop
push
stos
dec
and
inc
xor
arpl
add
mov
imul
movsb
sahf
jne
mov
dec
leave
movb
and
in
adc
pop
out
inc
hlt
js
loopne
ds
les
xchg
shrl
cmpl
pop
lret
cmp
lods
jle
lahf
jae
mov
in
outsl
xchg
rclb
jecxz
dec
into
push
pop
dec
nop
adc
daa
stos
lret
iret
pop
out
loope
daa
enter
sub
cmp
pop
sub
or
ret
int
jp
pop
pushf
fiadds
leave
cltd
mov
cmpsb
sbb
pop
and
xor
stos
pushl
ret
les
std
cmpsb
les
fcmovbe
in
neg
cli
inc
dec
and
mov
mov
dec
mov
fdivrl
addb
dec
std
insl
sub
dec
pop
pop
add
push
daa
fdivs
mov
xchg
sti
fwait
sahf
add
lcall
idiv
and
icebp
cmc
mov
out
sbb
in
push
pop
flds
mov
cmp
popa
xadd
mov
sbb
ficoms
nop
xor
pop
dec
xchg
or
mov
out
icebp
jle
dec
and
mov
cmp
push
push
push
push
xchg
add
mov
pop
roll
imul
dec
adc
test
push
lods
in
imul
aad
mov
fsubr
aam
push
mov
mov
pop
mov
cmpsl
lock
xlat
sub
into
pop
std
lret
rolb
dec
sub
es
mov
dec
lahf
adc
ficompl
bound
sbbb
fsubrs
imul
pop
aam
mov
sbb
int3
lea
loope
sahf
dec
ss
xchg
ds
jbe
sbb
inc
inc
adc
jp
mov
loopne
arpl
pop
pop
rep
andl
cmp
dec
mov
jb
sbb
jl
fs
dec
repnz
or
dec
mov
dec
vmovntdq
jp
fwait
shll
add
aam
jne
data16
fsts
cs
fstpt
mov
lret
push
stc
sub
incl
je
mov
adc
mov
mov
lds
inc
insb
call
jl
movsw
push
rolb
inc
daa
xchg
pop
cld
jnp
xor
and
aas
jb
inc
inc
repnz
std
psllq
jp
sbb
mov
mov
loopne
jecxz
sub
mov
cmp
pop
jbe
pop
inc
pop
hlt
sbb
sar
mov
mov
adc
rcl
adc
les
cmc
stc
ds
sub
outsl
xchg
pop
sbb
dec
bound
movl
dec
stos
mov
cli
call
sbb
mov
mov
pushf
push
mov
mov
lahf
xchg
sbb
imul
testl
sarb
iret
cmp
jno
xor
flds
xor
nop
pop
imul
push
xor
mov
push
jl
ret
xchg
or
outsb
insl
insl
lret
sub
fnstcw
jmp
pop
movsb
dec
push
mov
or
enter
das
push
cmpsb
mov
inc
inc
dec
cmc
js
mov
sarl
add
outsb
nop
int
scas
mov
cmpsb
test
mov
daa
inc
lods
and
cmp
mov
inc
pop
sarb
jle
mov
and
stos
and
loopne
adc
les
lock
arpl
movsb
adc
push
mov
mov
dec
sub
and
mul
push
loope
leave
ss
jge
sbb
cmp
out
inc
out
gs
sub
mov
push
add
xor
jns
sarl
cmp
pop
and
push
scas
sarb
bound
nop
lret
pop
mov
xchg
aad
int
aaa
xchg
adc
pop
shlb
aas
or
push
sub
lea
repnz
push
push
mov
hlt
imul
cmp
stc
mov
inc
push
test
cmpsb
aam
xchg
daa
lea
jae
pop
int3
or
js
xchg
subb
push
cmc
out
rcll
xor
push
sub
or
and
xchg
xchg
lret
int
insb
add
stos
or
stos
dec
imul
hlt
mov
mov
sbb
es
push
sub
int
cmp
das
enter
mov
add
mov
arpl
mov
outsl
push
dec
sub
out
xchg
jo
addr16
cmc
adcl
cld
ret
aas
fsubrl
mov
sub
jo
xor
and
cwtl
jecxz
cmpsl
inc
es
movsl
stc
xor
repz
cmpsl
dec
gs
jle
call
adcb
fwait
icebp
insb
or
cmova
es
jg
in
push
leave
mov
inc
fiadds
mov
push
lock
ja
pop
xchg
or
ja
or
push
inc
pusha
mov
cli
pop
pop
jmp
mov
shll
dec
push
icebp
in
mov
scas
and
inc
ljmp
pop
mov
fnsave
insl
jle
mov
and
lahf
lods
mov
out
ja
mov
lret
jmp
xchg
cmp
sub
inc
scas
ds
mov
into
pop
icebp
cmc
lea
cmpsb
flds
jmp
inc
push
data16
out
cmp
cmp
jmp
xchg
stos
outsl
jno
out
faddp
scas
sti
pop
out
xor
shrb
jno
ds
add
mov
das
jns
shlb
cmp
xchg
ja
mov
into
in
insl
mov
mov
iret
xlat
mov
or
aam
test
xorl
outsb
fidivs
cltd
dec
sbb
mov
pushf
lods
pop
push
test
fiadds
mov
sbb
movsb
std
mov
insb
inc
lahf
fistps
out
and
pop
dec
call
cltd
dec
or
cmpl
test
stos
jb
add
inc
fmull
lds
adc
cmp
sub
pop
pop
inc
cli
mov
ret
inc
pop
arpl
out
inc
rorb
sahf
dec
mov
enter
mov
push
inc
imul
cmp
pop
ja
icebp
imul
jns
imul
into
mov
stc
rorl
int3
push
pushf
and
cmp
in
fldcw
adc
out
call
lret
push
dec
scas
mov
rcrb
popf
xchg
bound
jnp
or
adc
mov
mov
not
loope
jle
add
shll
rcll
out
inc
mov
in
add
mov
lea
cmp
mov
lods
or
lods
aad
les
or
int3
rcr
stos
repz
mov
in
outsb
push
ret
mov
in
ds
fbld
xchg
fcmovne
std
ja
mov
fldenv
fsubp
repz
mov
test
fnstsw
and
jo
out
mov
xchg
fldcw
fstpl
sub
inc
ja
add
dec
and
dec
lds
notl
dec
push
fs
movsb
xor
mov
clc
shlb
icebp
jnp
or
xor
sbb
add
jmp
adc
out
xchg
mov
addr16
mov
sbb
mov
inc
or
sahf
fisttps
dec
mov
push
dec
outsb
and
lock
je
add
mov
push
aaa
outsl
addl
lcall
and
sub
jb
inc
xchg
mov
jo
mov
jmp
sysenter
dec
xor
cmp
stos
aad
inc
push
insb
lcall
arpl
push
add
xchg
sbb
in
mov
cltd
jne
lds
repz
adc
rolb
pop
xor
or
inc
seto
sub
movsb
fmul
lock
test
xchg
mov
das
cwtl
movsl
add
or
notl
or
push
repnz
fisttpll
or
jl
shlb
int
mov
mov
xor
xchg
ljmp
stos
adc
push
fsubrs
pop
int
push
push
arpl
xlat
cmp
jb
mov
out
cmp
pop
add
sub
push
mov
subl
mulb
sbb
mov
es
lcall
mov
clc
stos
lea
pop
xchg
int3
add
cmpsl
mov
addr16
and
lret
icebp
dec
inc
xchg
sti
dec
test
sbb
xor
cmp
cs
leave
mov
and
arpl
sbb
and
adc
jbe
pop
or
rcr
popf
dec
daa
cltd
or
dec
lahf
out
pop
or
lods
mov
cmp
std
sarb
pop
mov
pop
pushf
mov
out
int3
jg
push
mov
out
rclb
ret
hlt
out
lods
add
fcoms
sar
xor
pop
mov
shll
sub
add
or
pop
xchg
hlt
adc
iret
lea
hlt
pop
jmp
jns
cmp
out
daa
mov
hlt
sti
jg
and
out
push
adc
mov
xchg
adc
push
outsb
ret
scas
ret
leave
cmp
jae
and
pop
popf
inc
xchg
mov
int3
aaa
flds
or
pop
imul
outsl
nop
lret
dec
adcb
je
xorb
mov
mov
dec
dec
and
mov
xchg
insl
mov
ret
es
sbb
int
push
cmpsl
loopne
ja
mov
int
sti
aad
mull
test
or
push
push
mov
lcall
cmp
sbb
or
shll
mov
add
fcos
inc
dec
or
rolb
adc
dec
push
rcll
js
dec
adc
call
or
jmp
rcrl
push
dec
stos
push
int
xor
mov
ja
add
and
test
inc
jne
lods
cs
call
sbb
mul
cmc
adc
in
sub
out
ret
loopne
mov
add
nop
adc
out
jae
cmpsl
inc
jo
pop
test
fnstcw
push
push
shl
mov
mov
addb
push
loopne
jl
adc
add
mov
fstpl
jne
xchg
pop
cmp
xchg
push
xchg
adcl
mov
call
lock
cmpb
pop
and
inc
and
sti
adc
fcompp
daa
gs
scas
loope
mov
mov
xchg
xor
fnstsw
add
or
mov
in
sub
cli
loop
adc
or
pop
int
push
mov
jno,pn
xchg
mov
sbb
rcrb
pushl
mov
pop
sti
mov
int3
dec
sbb
push
or
mov
sub
cmp
pop
repnz
testb
lretw
enter
sub
sub
rcr
adc
mov
dec
pop
xor
mov
loop
fidivs
ss
ret
inc
lods
pop
dec
mov
cltd
xchg
mov
fwait
jno
aad
pop
xchg
rol
fmuls
les
or
jecxz
jl
mov
mov
stc
icebp
mov
adc
add
in
fcoml
test
sarb
push
pop
xlat
jno
adc
add
rolb
jnp
lret
test
mov
rol
xor
cmp
test
shll
add
sbb
sbb
cmp
fcompl
rcr
pop
hlt
push
sti
fwait
push
movsl
lret
repz
lcall
mov
daa
add
in
xchg
mov
int
in
enter
je
scas
ljmp
inc
and
movsl
inc
xor
pop
in
xor
mov
ret
xor
gs
mov
pop
imul
arpl
mov
mov
ja
ljmp
pop
cltd
dec
cmp
lds
mov
lcall
out
sub
jnp
pop
sbb
repz
scas
movsb
shr
loopne
insl
lea
pop
pusha
lods
rcr
mov
xchg
or
jmp
ror
and
sub
scas
stos
mov
xor
dec
lcall
cmp
xlat
test
pushf
pop
subb
nop
xchg
adc
in
jbe
subb
pop
pop
sbb
cwtl
push
pushf
add
lcall
ljmp
push
int3
push
fnstcw
push
hlt
mov
fadds
mov
xchg
jg
mov
and
ljmp
mov
xor
lods
inc
cmpsb
repnz
daa
inc
push
and
ss
adc
sub
lahf
leave
testb
test
stos
repz
out
push
jne
jb
adc
popf
pop
push
jmp
scas
test
or
push
rolb
outsl
dec
dec
cmp
sbb
add
in
int3
pop
mov
in
pop
xchg
ror
sub
inc
stc
outsl
callw
je
mov
pusha
shl
fisttpll
or
fisubrl
subl
jmp
iret
add
stc
and
std
mov
dec
stos
pushf
imul
je
push
repnz
and
aas
mov
sbbb
sbb
popa
cmp
mov
jmp
jb
xchg
jno
sbb
cli
outsl
add
and
mov
sub
sub
jmp
adc
test
push
inc
addb
ret
add
pop
cli
cmpsl
push
fldln2
adc
xchg
lret
mov
int3
jecxz
pop
dec
andl
lcall
iret
inc
mov
mov
cld
pop
sarl
lea
xchg
xchg
lahf
lds
loop
pop
movsl
aam
fldl
shlb
leave
lods
adc
clc
nop
nop
xchg
dec
dec
aam
pop
cli
lret
jle
orl
mov
arpl
insl
sbb
and
jb
shlb
fcom
imul
mov
xor
scas
loopne
fucomi
sub
test
jge
xorl
sbb
pusha
ljmp
stc
aad
mov
xor
mov
sbb
popa
sub
mov
les
xor
lcall
addr16
jae
rorl
imul
adc
mov
and
jae
js
scas
cmc
movsb
mov
or
mov
mov
stc
fistpll
xor
xchg
pop
sbb
mov
arpl
jb
cs
es
xchg
sqrtps
xor
dec
mov
xchg
cmp
insb
cld
out
call
js
xchg
jae
mov
xchg
sub
cmp
pop
stos
inc
inc
sub
push
into
mov
int3
addl
test
or
adc
dec
lock
cmp
movsl
xchg
test
lahf
scas
push
icebp
xor
leave
ret
jnp
cmp
std
fcoml
inc
test
daa
mov
add
pop
pushf
xchg
push
test
sbb
adc
lea
sbbb
leave
test
jecxz
push
adc
and
std
es
mov
dec
frstor
sbb
xchg
icebp
mov
test
push
sub
xor
xchg
adc
ja
sub
ret
jl
dec
and
xchg
lcall
dec
adc
shll
sti
packsswb
xlat
mov
ds
pusha
jne
popa
mov
movsb
xor
inc
cmp
lock
xor
stos
add
fidivl
fisubrl
xchg
xor
jle
js
scas
shrb
jne
push
sbb
sbb
dec
xchg
or
fmul
mov
ljmp
stos
in
aas
je
mov
scas
mov
aaa
mov
sbbl
sbb
mov
push
jmp
jne
imul
xchg
data16
lods
ljmp
std
xor
add
nop
dec
adc
dec
xor
mov
pop
cmp
outsb
xchg
cli
inc
jp
mov
push
mov
hlt
adc
lods
and
pop
mov
add
pop
inc
loopne
mov
pop
sub
imul
jg
inc
cmp
jno
push
push
push
cmp
inc
adc
mov
mov
daa
inc
movsl
dec
aam
ret
pop
sub
in
rolb
or
xor
dec
xchg
and
or
pop
inc
mov
out
pop
push
jnp
out
mov
or
inc
dec
xchg
push
cld
call
sub
insl
loope
inc
push
rolb
jo
xchg
and
cwtl
mov
jnp
jge
mov
cmp
les
jmp
pop
clc
fcoml
jnp
mov
dec
fbstp
adc
push
pusha
lock
in
sub
sahf
repnz
test
in
xchg
pushf
mov
or
jnp
push
arpl
cmpsb
sub
aas
add
lret
add
shll
fadd
push
cli
js
jmp
cmp
sbb
mov
sbb
inc
add
nop
adc
lcall
out
fiadds
dec
les
sub
pop
dec
sahf
inc
paddb
cs
jge
mov
lcall
icebp
out
cmpsb
mov
cmp
pop
jne
sub
mov
repz
xchg
add
and
xor
push
stos
std
xchg
inc
js
pop
or
stos
pushf
sbb
loope
popa
mov
jmp
mov
xor
jae
repz
inc
data16
mov
mov
adc
adc
pop
xor
rcrl
cmp
pushf
pop
fsubl
dec
loope
mov
and
lcall
js
sbb
jle
pop
in
lahf
and
pop
rclb
cmpsb
jno
or
push
dec
sub
fwait
fs
nop
push
in
mov
cmp
xor
ret
dec
aaa
lods
insb
push
popa
mov
inc
mov
inc
xor
cmp
xchg
push
push
stos
inc
mov
dec
stos
dec
xor
lods
or
mov
imul
cmp
mov
cli
cmp
sub
movsb
rcrl
shrb
or
scas
mov
xor
loop
add
xchg
xor
call
sub
in
push
mov
jg
mov
adc
dec
out
cmp
lret
iret
aas
and
test
popa
scas
and
sar
stos
inc
xor
xlat
repz
popa
fdivrp
or
dec
stc
lods
rorl
and
mov
test
aad
add
push
scas
cmpsb
fs
and
or
iret
call
jo
sti
or
and
mov
jecxz
shr
ljmp
or
std
add
aam
and
sub
setb
dec
iret
inc
ss
pop
jle
add
idiv
adc
cmp
adc
push
sub
sbb
adc
outsl
adc
push
or
std
cmpsl
pop
pushf
xchg
aas
mov
adc
ds
sub
dec
pop
mov
scas
call
mov
or
add
mov
xchg
orl
sbb
nop
cmp
mov
and
aam
stos
lods
xchg
cld
je
pop
hlt
sbb
sub
or
dec
addr16
jno
mov
enter
fstpt
icebp
jl
pop
addr16
repz
mov
andl
dec
push
cmc
clc
imul
fwait
aam
push
andb
xor
fildl
dec
loop
sbb
xor
lret
aad
jb
sarl
sbb
arpl
mov
xchg
mov
pop
pop
sarb
jo
sbb
pop
xchg
popf
mov
into
mov
cmpsl
cli
or
cwtl
das
lock
xchg
icebp
shll
nop
sarl
jmp
and
ja
aam
sahf
ja
fimull
sub
jno
xor
mov
daa
rcll
mov
sub
insb
outsb
cmpsl
cmpsl
icebp
fbstp
mov
xor
out
sbb
mov
inc
cmpsl
les
sub
mov
sub
cpuid
cld
mov
jge,pt
fsub
inc
out
aaa
push
sbb
jb
iret
loop
sub
and
xor
int
xor
xor
in
enter
ss
push
xor
out
mov
insl
cmp
inc
fistps
js
push
pushf
xchg
rol
js
insl
lahf
loop
mov
mov
pop
dec
ja
inc
out
dec
and
add
aad
mov
es
push
into
cmp
testb
mov
sbb
lcall
in
pusha
push
in
add
out
mov
inc
pop
jmp
scas
mov
fisubrs
ds
add
mov
push
push
lods
leave
xchg
outsb
xor
je
aad
les
inc
jne
out
jge
pop
movsb
loopne
gs
std
daa
insb
xor
lret
out
adc
xchg
inc
inc
int3
mov
cs
fisubrs
and
aam
out
out
mov
repz
and
movsl
sub
xor
lahf
cltd
fnstenv
push
faddl
lahf
gs
mov
or
fistps
stc
xor
cmp
xor
and
sarb
loope
cld
add
xchg
and
pop
push
push
call
ljmp
mov
lret
dec
inc
shr
loopne
mov
repz
push
lock
push
dec
xor
sub
pusha
add
in
sbb
mov
fdivrs
lahf
pop
mov
lret
sbb
mov
xor
push
nop
repz
xor
aad
add
jmp
push
push
xchg
inc
mov
cltd
out
mov
aas
add
and
push
stc
mov
loopne
add
jecxz
flds
cli
xchg
mov
outsb
dec
loope
inc
sub
lret
adc
dec
mov
sub
ljmp
stos
call
fwait
mov
lret
cmpb
push
sub
in
mov
pop
fldt
pop
jmp
popl
and
pushf
mov
cmpsl
nop
and
sub
cmp
arpl
and
xchg
mov
and
in
fadd
cmp
fwait
js
cmp
daa
mov
inc
sub
rcrb
scas
mov
jo
mov
int3
into
inc
pop
adc
mov
out
fcomps
fsubrs
in
or
pop
and
or
push
xchg
dec
stc
aaa
xchg
sti
addr16
arpl
shlb
mov
lcall
ds
cltd
mov
inc
fistpl
cmp
pop
cld
push
and
xor
outsb
lcall
stos
pop
mov
stos
push
popfw
pop
add
ja
xor
sbb
mov
int3
imul
popa
mov
mov
scas
sbb
and
jae
sbb
pop
stc
popf
mov
inc
push
cmp
jo
cmpsb
add
shr
pop
dec
in
jg
fldcw
test
pop
cld
sbb
incb
mov
scas
cmp
inc
in
in
repz
xchg
jbe
int
shll
dec
jno
stos
mov
jnp
cmpsb
stos
fcomps
inc
in
out
out
fildl
addl
xor
and
push
scas
dec
push
jmp
xor
dec
inc
xchg
aaa
cmp
in
fiaddl
outsb
jb
cmp
addr16
xor
add
cmp
nop
into
jp
lea
mov
repz
fists
cmp
adc
push
jb
xor
fdivrp
inc
push
sbbb
push
dec
lret
or
scas
sub
pop
fsubrl
xor
inc
mov
rorl
sub
mov
push
cmp
and
jge
les
aad
cmp
pop
or
mov
sub
jg
cmp
test
aaa
jb
sbbb
xchg
sbb
jnp
add
xchg
mov
sub
push
pop
int
mov
cmp
sbb
cwtl
into
mov
scas
pushf
test
ss
addr16
sub
dec
bnd
out
in
lea
leave
das
xor
adc
pushf
orb
stc
cmp
inc
mov
xor
and
pop
cmc
rcll
popa
clc
sbb
dec
out
and
fidivl
movsb
ftst
cmp
pop
dec
loopne
mov
gs
mov
xor
add
dec
jge
popf
fs
sub
mov
cmp
inc
push
pop
insb
dec
pushf
jae
sub
fdivs
rclb
lret
push
mov
jle
mov
outsb
jp
fnstsw
push
inc
lea
push
leave
jo
cmp
int3
mov
scas
push
sub
scas
fs
test
andl
or
xchg
or
and
inc
fdivrl
aad
dec
int
push
iret
xor
jno
lock
ds
xor
push
inc
lahf
jmp
adc
add
imul
call
data16
push
jmp
push
insb
mov
mov
stos
loop
imulb
pop
add
mov
or
icebp
fnstenv
popf
fs
fcos
arpl
inc
dec
mov
pop
dec
add
insl
add
fbld
add
fdivs
cmpsb
das
inc
xor
rcrb
nop
ds
cmp
hlt
mov
sbb
cmp
sahf
mulb
cmc
adc
xorb
inc
and
cmpsb
pusha
mov
add
stc
fildll
pusha
ds
jmp
cwtl
movsb
dec
into
jle
daa
aam
lahf
mov
out
jge
or
sub
sahf
xlat
dec
adc
in
sbb
push
fiaddl
popf
xor
inc
inc
or
xorl
mov
testl
scas
and
paddq
mov
push
test
or
cmp
add
adc
fs
jmp
dec
push
jns
xor
lds
adc
cwtl
sbbl
xchg
mov
xchg
xchg
nop
arpl
dec
push
icebp
mov
shrb
cmpsl
pop
cmpsb
push
aaa
pop
inc
pop
xor
subb
pop
dec
rol
in
or
pusha
pop
dec
lcall
jo
push
mov
rcrl
je
fiaddl
repnz
enter
mov
and
scas
jmp
jg
xlat
mov
inc
ret
fistpl
test
fcompl
add
or
ljmp
xchg
adc
xor
xor
data16
lods
mov
cmpsl
call
pop
shll
rcrb
rorl
or
cmpsl
inc
sub
pushl
dec
rcr
loope
cld
test
scas
repz
adcl
add
xchg
imulb
push
insl
push
jl
push
repnz
or
sub
jne
inc
fisttps
add
xchg
test
cmp
pop
movb
mov
movhps
push
stc
icebp
je
daa
pop
sbb
lods
cli
aam
les
int3
aas
mov
lds
adc
aad
dec
es
or
jb
push
xor
sbb
adc
stc
cmp
and
outsb
insl
inc
pop
jp
inc
testl
sbb
xlat
jmp
dec
inc
jecxz
jne
cltd
sbb
add
xor
or
mov
popa
leave
dec
addl
cli
sbb
in
shrl
push
pop
mov
jl
add
js
jo
data16
push
pop
mov
jo
add
scas
or
mov
imul
mov
xchg
add
ljmp
fidivrs
in
mov
pushf
es
repz
inc
xor
mov
dec
lahf
ret
addr16
fmul
dec
pop
adc
push
xlat
mov
ljmp
insl
icebp
das
dec
sub
sysexit
and
je
imul
pushf
shl
mov
or
insl
scas
fbld
addl
mov
mov
arpl
push
xchg
cwtl
pushf
int3
mov
jo
out
xor
push
inc
pusha
cmp
icebp
jge
ljmp
xor
sub
pop
dec
ds
push
adc
and
loop
xchg
pop
pop
mov
out
cli
sbb
cmc
jecxz
inc
adc
rcll
sub
jne
dec
pusha
ficompl
inc
adc
xor
mov
mov
sbb
mov
ret
pusha
aad
add
test
mov
sub
lods
pop
ds
inc
out
xor
mov
cmc
imulb
cmp
jmp
imul
imul
mov
ret
scas
and
dec
in
xor
lods
scas
addr16
mov
push
insl
pushf
sub
jp
cli
xchg
out
push
movb
mov
mov
dec
fld
mov
das
jl
aas
or
pop
cld
or
cli
adc
mov
jae
movsb
leave
mov
mov
inc
or
and
mov
into
out
movsl
les
inc
jg
pop
nop
nop
jecxz
cmp
ret
xchg
ja
cmpsb
jge
call
xchg
xor
adc
lock
mov
out
pop
out
mov
push
lock
fdivs
pop
sub
in
std
mov
mov
lock
mov
dec
std
push
xor
push
dec
dec
inc
mov
cmp
test
movsl
ljmp
loop
inc
mov
xchg
pop
out
mov
mov
sub
popa
push
out
fwait
sbb
push
stos
cmpsl
push
mov
gs
hlt
jp
inc
rclb
sarb
jmp
test
or
sbb
jbe
or
jl
gs
scas
movsl
je
mov
imul
fdivrl
scas
mul
jne
pop
hlt
mov
lods
inc
fmuls
pop
jp
xor
push
fisubrl
sub
sbb
insb
pop
cltd
popa
or
jecxz
add
xchg
mov
rcll
jne
xor
jno
cmp
mov
sbb
loop
dec
dec
mov
dec
cmpsl
sub
mov
cmpsb
popa
push
lahf
stos
xchg
mov
jb
xchg
sub
cltd
pop
jb
test
cmp
pop
or
jl
in
dec
movb
negb
push
ds
imul
jecxz
xor
xchg
in
shll
aas
inc
pop
scas
decb
cwtl
clc
cmp
hlt
fsub
fstpt
mov
or
iret
data16
bound
movsb
jg
insl
push
gs
push
inc
pop
cmp
jae
mov
mov
mov
rclb
inc
dec
iret
insb
and
sub
add
or
inc
aas
mov
lods
ret
mov
jae
push
jmp
xchg
aaa
and
cmp
push
insb
push
push
or
hlt
push
jmp
repnz
cmp
or
mov
or
jne
push
add
mov
mov
adc
add
imul
popa
xlat
pusha
sub
mov
mov
jns
and
xchg
sbb
xor
lock
jge
jnp
adc
test
cmp
dec
imul
cmc
cmpb
das
popa
mov
clc
lds
mov
push
fucomip
lea
movsl
mov
push
iret
mov
xor
push
aaa
insl
repnz
inc
mov
sub
xor
mov
xchg
pop
push
test
sbb
orb
stc
rcrl
insb
mov
sti
lahf
inc
sti
loopne
push
inc
popa
mov
jmp
ja
shlb
jl
xchg
out
cmp
jne
add
cmpl
pop
shrl
and
iret
js
push
enter
mov
dec
shl
aaa
push
notb
movsl
pop
inc
js
mov
push
lock
out
adc
scas
pushf
jecxz
sbb
mov
aas
test
add
idivb
mov
mov
jne
in
das
and
or
std
mov
stos
or
push
sbb
cmc
mov
mov
loop
int
pop
loope
or
or
jle
xor
cmp
and
inc
fistpll
push
repz
int
inc
jge
push
imul
push
loope
xchg
jb
mov
inc
sahf
and
in
and
jge
es
xchg
xor
popf
add
fucompp
mov
daa
mov
dec
popa
dec
cltd
push
sbb
dec
jmp
cmpsl
push
mov
dec
dec
sbbl
ror
or
fsubrs
stc
iret
inc
lret
nop
xor
aas
push
add
int
adc
sub
hlt
shll
dec
cmp
fstpt
jecxz
cwtl
repnz
lahf
mov
icebp
add
stc
lahf
test
int
mov
sti
adc
and
add
out
sahf
mov
jmp
inc
sahf
pop
and
lcall
test
cmp
xchg
xor
xchg
out
jge
dec
subl
dec
sahf
mov
mov
lret
lcall
stc
adc
pop
xor
test
jle
jg
lret
lock
pop
fimull
cli
jae
arpl
mov
mov
mov
data16
pop
fxch
sbb
or
xor
or
inc
push
into
bound
outsb
pop
jno
add
mov
cmp
xor
stos
push
cmp
stos
in
lock
ljmp
cli
fcomp
insl
xchg
and
stc
enter
mov
pop
inc
sbb
ja
orb
or
jae
jbe
fcoml
mov
std
cmovnp
inc
and
inc
dec
push
jo
lret
dec
jne
lcall
jle
bnd
das
mov
mov
adc
pushw
aas
ljmp
clc
das
mov
bound
ret
shll
xchg
sbb
mov
pop
cmp
out
mov
pop
es
mov
lret
sbb
xor
or
aas
dec
cmpsb
pop
or
out
cli
pop
icebp
mov
stos
mov
test
daa
xorl
xchg
fnstenv
sub
inc
push
add
out
fnstsw
sbb
mov
js
pop
ja
loope
in
lahf
leave
mov
pop
arpl
pop
ret
xchg
jbe
inc
aad
hlt
popf
stos
push
sub
sbb
popl
xchg
int3
shrb
xchg
mov
jae
mov
fwait
jmp
inc
xchg
sbb
in
mov
data16
shll
xor
ja
push
xchg
jae
lret
movl
into
leave
aad
je
xor
pop
add
sbb
push
pop
mov
jge
imul
and
cmp
mov
lret
jmp
loopne
adc
inc
sbb
les
repz
or
leave
das
lods
push
and
sbb
xchg
cwtl
xchg
ret
es
movsl
pop
mov
push
out
aad
inc
xchg
out
test
aas
add
lcall
es
pop
aaa
pop
or
mov
mov
cmp
and
push
je
test
sub
loope
xchg
mov
sub
jnp
cs
add
testl
jo
xchg
jae
xor
adc
out
imul
jns
imul
out
pop
pushf
cmp
idiv
dec
fsub
or
aad
mov
adc
jecxz
ret
test
xchg
dec
cmp
outsb
jmp
cmc
sub
add
fwait
je
cmp
call
ds
jp
or
lods
loope
mov
test
bnd
fs
jmp
xchg
fistpll
fs
sub
psllq
test
dec
mov
xor
sarl
fwait
adc
mov
loopne
out
jns
dec
je
sub
pop
in
les
js
ja
loope
lds
cmp
dec
cmp
cld
shll
outsl
jae
xchg
dec
out
inc
lret
pcmpeqd
xchg
stos
mov
loope
and
adc
add
adc
lods
adc
rep
pop
cld
sbb
jo
fcomi
shll
into
adc
fiaddl
xchg
arpl
jle
shr
icebp
sub
add
insb
imul
mov
mov
lcall
sub
aas
adc
xor
loop
fmull
xor
adc
lahf
lea
pop
aas
pop
xor
and
push
ljmp
out
enterw
and
sbb
mov
pop
test
xchg
sub
mov
rcll
or
sub
xchg
cmp
sbb
dec
fidivl
test
xchg
negb
mov
push
dec
lea
in
ja
jle
mov
loop
xchg
sub
xor
test
leave
lods
popa
xchg
xor
jl
sbb
lea
mov
jle
les
push
dec
xor
push
xchg
mov
push
mov
or
and
sbb
aas
xchg
aam
sbb
arpl
cmp
sbb
xchg
cmp
add
fcoms
mov
nop
mov
jne
or
jmp
sbb
sahf
xchg
mov
jns
movsb
imul
outsl
sbb
and
xchg
inc
out
loope
jg
xor
in
and
mov
mov
sbb
lods
sub
sbb
es
daa
shl
insb
outsb
fcmove
test
sub
js
cmp
lret
xor
stos
xor
das
ret
sti
xor
ja
stos
sub
xchg
les
in
mov
sub
lods
in
cmc
xchg
pop
add
inc
jl
ret
adc
inc
xlat
mov
dec
loope
push
inc
xchg
mov
inc
pushf
lret
mov
mov
outsb
inc
andb
jns
fadds
add
push
test
sbb
push
add
fs
aam
pop
out
sqrtps
stos
test
ds
fwait
outsl
iret
sbb
aam
adc
leave
jp
lds
sub
pop
xor
add
inc
xor
pop
mov
add
push
dec
cmpsb
insl
xchg
and
movsb
popf
pushf
jecxz
push
mov
outsl
lea
iret
loopne
pop
and
pushf
test
cmpsb
nop
jle
ret
xchg
movl
adc
add
or
int
jne
xor
shll
loope
add
push
stos
dec
mov
pop
cmp
aas
pop
lahf
faddl
pop
inc
xchg
nop
adc
cmp
jp
adc
jmp
xchg
lcall
adc
mov
mov
mov
cmc
mov
ja
sub
fidivrs
negl
stc
jae
mov
arpl
stos
test
repz
inc
pop
hlt
push
sbb
divb
jge
cmc
stos
add
in
sub
pop
scas
aas
fisttpll
jnp
arpl
and
adc
rcrb
cmpsb
jmp
lret
iret
push
lods
jl
mov
dec
lret
mov
jecxz
or
mov
xchg
pop
adc
sbb
adc
scas
jecxz
mov
fs
push
jmp
inc
out
jge
xorl
bound
push
fstl
jae
imul
jmp
adc
dec
loope
sbb
mov
lds
popa
jle
jo
daa
movsl
pop
sahf
jp
mov
push
icebp
jmp
xor
jb
addr16
mov
in
xlat
mov
out
loop
xor
pop
sub
xchg
pop
lock
divl
push
adc
inc
mov
clc
cld
repnz
pusha
int
mov
push
mov
in
adc
enter
inc
cmp
sub
adc
inc
add
lods
pop
pop
hlt
idivb
sti
cmp
je
jae
jg
adc
add
in
dec
pop
ss
dec
jmp
imul
mov
jno
jbe
cwtl
cmp
pop
call
popa
aaa
ret
rcll
sub
mulb
enter
cmp
inc
sub
shrb
mov
fidivrl
call
in
sbb
inc
dec
adc
dec
in
lret
sub
jecxz
scas
and
xor
sbb
std
mov
rcrl
add
ds
add
movsb
out
pop
sbb
jno
out
outsb
jnp
push
fistl
scas
xchg
inc
int
mov
aas
push
pop
cltd
test
inc
jp
inc
std
xchg
daa
cmp
in
mov
jb
jl
hlt
adc
inc
fucomip
mov
int
lock
sub
cmc
mov
in
mov
mov
dec
mov
adc
lret
sub
call
mov
sub
aam
jecxz
jge
fcompl
arpl
lods
mov
cwtl
xchg
sub
iret
push
mov
mov
popa
shll
adc
insl
sub
in
xor
loopne
imul
outsb
in
mov
adc
repz
int3
js
insl
scas
sbb
mulb
fldl
bound
repnz
ss
jb
mov
xlat
mov
jle
mov
nop
push
push
xor
pop
cmpsb
mov
pop
das
add
shll
xor
andb
test
clc
mov
scas
sub
inc
fisttpl
and
xor
repnz
sti
jmp
loopne
data16
imul
mov
loop
test
dec
dec
scas
outsl
push
pop
clc
stos
popa
adc
sarb
sbb
icebp
add
sbb
adc
ret
call
mov
pusha
dec
in
shll
xchg
fcompl
out
in
arpl
sbb
stc
cli
addr16
int3
ret
jne
xchg
ficomps
rcrb
or
pop
jmp
fcmovnbe
lret
loope
jne
jmp
repnz
sbb
xor
outsb
mov
jge
fs
jbe
inc
repz
fcmovbe
sbb
cmp
sbb
test
ds
push
xchg
cmpsb
push
dec
mov
jo
push
jmp
xor
test
nop
stos
xchg
call
pushf
sub
int3
sti
dec
sarb
fidivl
mov
mov
daa
dec
data16
mov
pop
add
or
push
in
cmpsb
push
push
lret
xchg
pop
in
add
notb
sbb
mov
add
jne
push
sti
sbb
popa
std
pop
addr16
pop
pop
cld
push
lods
lret
ss
pop
cmc
sub
mov
sbb
leave
pusha
mov
out
mov
fidivrs
cli
cmp
mov
jle
fwait
cmp
daa
adc
dec
xchg
mov
dec
xor
jg
les
sbb
dec
adc
mov
movsb
jno
addr16
dec
fstl
or
icebp
bound
pop
inc
ljmp
sub
cmp
xchg
out
mov
mov
sbb
jae
jecxz
mov
loop
or
mov
in
testb
scas
jo
call
pop
sti
or
into
jl
sub
mov
mov
dec
cmp
or
rclb
xchg
dec
cmpl
adc
mov
cli
cmp
int
aam
mov
add
sub
loop
std
nop
pop
arpl
and
jnp
dec
int
and
jmp
push
out
sbb
xchg
xchg
inc
in
test
push
shl
jb
loope
sbb
sub
xchg
andl
xchg
mov
imul
adc
push
adc
nop
xchg
or
mov
mov
push
or
inc
sub
pavgw
jp
dec
inc
adc
in
inc
cwtl
mov
cmpsl
mov
pop
imul
mov
negl
cmc
lds
sbb
jp
out
in
ret
dec
dec
or
popa
xchg
adcb
mov
and
dec
cmp
movsl
int3
fs
ret
mov
in
cmp
push
pop
xor
aaa
sub
sub
lds
fdivrp
sbb
adc
cmp
movsl
add
imul
xlat
dec
mov
cmp
push
and
or
fwait
mov
js
push
cs
mov
and
cwtl
sahf
in
mov
and
add
mov
mov
mov
fdivrs
sti
xchg
lret
cmp
iret
push
pop
shrb
fistpll
inc
fidivrl
je
inc
out
dec
aam
or
lret
movsl
jmp
jo
cmpl
std
add
mov
adc
pop
neg
mov
mov
cmp
mov
nop
sti
bndldx
push
mov
pop
mov
movsl
jge
mov
test
in
and
out
das
orb
cmp
sbb
add
xchg
cmp
cmpsb
fdiv
lret
or
jne
test
sub
arpl
pop
addr16
je
push
jb
push
inc
shrb
out
xchg
loope
mov
fs
sub
gs
enter
imul
in
das
or
imul
cli
inc
dec
pop
dec
push
mov
push
fdivl
add
cs
aas
nop
or
add
dec
inc
jae
pop
lahf
adc
fs
sti
call
or
test
shl
push
add
scas
lret
test
dec
or
pushf
clc
add
lret
lods
mov
jmp
aad
mov
mov
rorb
outsl
sbb
sbb
adcl
addl
lds
sbb
push
push
add
mov
pop
cli
sub
movsb
outsl
pop
sbb
ret
ret
jns
les
xchg
imul
xchg
push
mov
stc
inc
xchg
sbb
mov
cli
inc
xlat
and
mov
mov
jbe
push
jg
adc
mov
dec
fcomps
mov
into
pop
jb
inc
or
jns
daa
les
and
fwait
push
scas
pop
push
stos
pusha
or
adc
ss
lock
jle
cmp
xchg
rolb
andb
jb
xlat
mov
mov
push
rcrb
pop
lcall
dec
inc
nop
xor
popa
roll
dec
jae
dec
add
push
push
and
insb
enter
fisubrs
inc
inc
cltd
mov
xor
cs
popa
fs
dec
push
lods
fcoml
adc
mov
mov
pop
add
lea
pop
scas
pop
adc
repz
clc
xchg
int
cmp
jo
mov
cmp
cli
cmp
movl
pushf
jp
cmp
pop
out
popa
orl
icebp
popa
stos
dec
fs
mov
push
xchg
push
sti
repnz
mov
push
mov
or
xor
gs
aam
loope
inc
mov
lret
imul
sbb
ss
fdivr
mov
xor
jb
sub
push
dec
mov
cwtl
mov
lods
out
jmp
mov
pop
ret
mov
repnz
ja
int
sub
xorb
xor
mov
data16
add
xlat
ja
nop
out
mov
mov
stos
xchg
push
cmc
orl
dec
loop
jne
dec
push
arpl
fstl
cmp
insl
inc
outsb
sub
icebp
ss
int
or
notb
daa
jae
and
mov
jb
mov
and
xorl
cmp
sarl
sbb
loope
jl
test
iret
sub
cltd
clc
mov
data16
dec
or
mov
test
mov
fcmove
test
adc
sarl
xchg
insb
addb
push
adc
insl
mov
add
test
sbb
cmpsl
stc
cmp
aaa
mov
pushf
enter
push
aaa
inc
mov
jae
fldt
pop
push
and
divl
mov
xchg
lret
std
mov
shll
jae
jne
or
jbe
pop
cwtl
and
push
push
sub
jb
cli
pop
pushf
rorl
decl
aad
lods
sub
push
xor
cmpl
xchg
fiaddl
ret
dec
mov
mov
push
dec
cmp
in
mov
lds
and
and
clc
cmp
inc
adc
adc
jae
push
push
daa
mov
insb
adc
jmp
xchg
dec
imul
or
leave
and
sbb
roll
stos
das
inc
int3
popa
nop
loop
or
lahf
scas
sahf
lret
pop
stos
dec
push
xchg
sbb
push
fstl
inc
fwait
into
sub
or
ret
mov
ja
repz
or
jle
inc
gs
xchg
sbb
lcall
fistpll
add
push
sub
push
movsb
fildl
lcall
jmp
mov
daa
adc
inc
sbb
or
mov
cmc
xor
mov
push
imul
dec
mov
xor
and
and
imul
push
nop
lods
mov
lcall
cmp
jae
jno
adc
movsl
xor
out
test
inc
lds
clc
mov
and
mov
sar
out
xchg
fdivs
dec
icebp
fidivrl
pusha
in
xor
cmp
shrb
fisubrs
and
dec
cmp
push
fisttpl
lret
sahf
sub
aaa
mov
cli
sti
lds
dec
data16
mov
andb
push
xchg
xchg
sub
daa
insl
xor
gs
addb
xchg
imul
sub
fcompl
dec
mov
or
inc
test
stos
and
aas
mov
mov
xor
sub
inc
and
imul
repz
in
pop
and
test
mov
push
push
outsl
jbe
daa
movsb
pop
inc
ret
xchg
and
andb
out
andl
sbb
enter
cmpsb
fbstp
mov
es
ror
sti
pop
push
cmpsl
loop
cmpsb
and
xchg
sbb
mov
sbb
ljmp
cmp
aaa
pop
lret
xor
dec
bswap
pop
adc
cmc
scas
aas
sub
sarb
in
cmpsb
dec
rclb
cmpl
cltd
xor
cmpsl
push
hlt
inc
rol
sub
mov
ss
push
arpl
jno
sbb
arpl
jge
sbb
rolb
les
jno
adcl
push
adc
sub
in
push
hlt
sbb
xchg
fiadds
sub
ds
fisubl
jns
movsb
aad
movsl
add
test
adc
xchg
inc
xchg
and
enter
cwtl
ja
sbb
cmc
and
call
inc
loop
mov
mov
call
repnz
mov
push
sbbl
clc
jg
out
dec
out
lods
mov
scas
xlat
fidivl
sti
xchg
xchg
sbb
aaa
dec
pop
add
popf
push
mov
movsw
bound
movsl
jnp
xor
fmull
push
fnsave
lods
inc
and
mov
lock
incb
push
test
sbbb
fsubr
in
sbb
imul
pop
mov
sub
lret
sbb
repnz
fnstsw
xor
cwtl
in
add
pop
rcl
into
into
int
pop
add
xchg
daa
or
into
stc
scas
mov
ret
sbb
decb
or
xchg
mov
jmp
xchg
mov
jg
out
push
add
pop
jmp
dec
jbe
jnp
out
leave
test
inc
inc
cli
into
pop
loope
je
mov
test
fs
mov
popf
sbb
jle
sbb
mov
jecxz
jp
hlt
push
push
sub
sahf
pop
cmp
fld
scas
adc
mov
ret
jge
sub
fisubs
movsl
fildll
sbb
pop
call
mov
scas
mov
js,pn
jle
xchg
adc
push
jb
cs
in
pusha
cmpl
push
jp
gs
mov
fs
jge
shl
fidivs
cmpsl
xchg
xchg
push
lods
mov
test
jecxz
outsb
and
xchg
stos
out
cwtl
rcll
add
sub
scas
sbb
mov
orb
enter
jbe
inc
jl
xor
lock
rorb
fbstp
adc
out
jge
and
adc
ret
jb
jb
mov
dec
xor
mov
fcomps
andb
scas
mull
jae
sub
sahf
in
mov
popf
cmp
ret
mov
sti
fstpl
movsl
inc
dec
cmpsl
pop
fcomi
cs
add
mov
mov
xchg
shll
test
add
pop
lret
fdivs
cs
pop
iret
xchg
sbb
jl
mov
jp
rcr
int
push
pusha
mov
clc
je
sub
gs
test
out
decb
ret
stos
mov
mov
sbb
inc
adc
das
jae
notl
test
rolb
mov
iret
les
je
sti
mov
loop
jno
popl
mov
mov
cmpsb
test
pusha
insb
insb
dec
xchg
fisttps
pop
rcll
mov
push
mov
movsl
adc
mov
popf
inc
popa
mov
lea
push
mov
shrb
or
fwait
in
lcall
popa
xorb
out
movsl
mov
inc
xchg
jecxz
adc
dec
js
adc
push
data16
jp
pop
arpl
push
mov
push
lea
enter
pop
scas
dec
sub
daa
mov
pop
cmp
pop
mov
mov
out
js
jl
call
inc
xor
in
shll
mov
aas
push
test
sub
dec
xor
pop
mov
sub
insb
adc
int3
mov
sbb
mov
hlt
and
aas
pop
cmpsb
mov
mov
cwtl
jnp
dec
loopne
scas
adc
clc
pop
popa
mov
inc
out
mov
rolb
mov
mov
icebp
subb
sti
adc
popa
inc
jmp
push
nop
inc
cmpl
stos
clc
shrl
in
jb
sbb
adc
ds
fldt
add
scas
imul
aaa
push
inc
push
lea
adc
repz
and
pop
jmp
aam
or
inc
shll
insb
or
inc
mov
aam
mov
inc
rcrl
mov
fisubrs
pop
stos
clc
bnd
inc
jmp
sub
shll
arpl
dec
push
mov
jb
jl
std
stos
jp
fistl
jmp
pop
sbbb
xchg
inc
add
push
dec
add
call
push
push
fucomp
inc
jl
mov
sbb
dec
sub
push
stos
ljmp
pushl
dec
cmc
mov
mov
xor
sbbl
daa
dec
add
dec
push
setg
push
rcrl
sbb
data16
mov
ret
add
push
pop
sbb
cli
push
pushf
mov
add
push
je
adc
fstl
hlt
cmc
ret
inc
imul
adc
sbb
into
pushf
mov
popl
add
cwtl
mov
fcoml
mov
cmp
inc
mov
ss
push
push
outsl
push
xchg
lods
push
mov
mov
mulb
test
jp
cmp
jge
sbb
sub
or
pop
add
adc
and
leave
sub
push
xchg
push
mov
dec
add
jl
or
pop
in
add
rorl
insl
mov
lret
jmp
out
sub
scas
push
pop
add
jp
addb
xor
pop
pop
mov
adc
cli
inc
jnp
jp
xchg
or
hlt
mov
loop
into
lcall
push
lahf
sarb
fisubrs
addr16
cmp
xchg
subb
lahf
insb
push
lret
mov
dec
in
sbb
pusha
and
pop
and
shll
add
xchg
fwait
cmpsb
xor
cmp
movsl
dec
addr16
out
mov
mov
stos
popa
and
ss
mov
dec
mov
mov
lods
repnz
leave
xchg
sbb
aam
pushf
in
cmp
pop
ret
lret
xor
mov
mov
iret
fs
or
jb
out
add
and
cmpsb
int
xchg
pop
lds
pop
shl
push
mov
cwtl
dec
in
pop
mov
ret
jl
add
rcl
adc
mov
push
cmp
cmpsl
sub
cmp
or
jne
clc
add
cld
cmp
stos
xor
xor
cmp
fimull
gs
mov
mov
push
fucomp
cmpsb
or
movsb
leave
arpl
push
out
push
add
cli
xchg
stos
mov
lcall
das
or
call
rcll
outsl
fbstp
in
sub
arpl
or
dec
scas
pop
iret
mov
les
push
loopne
jp
rclb
and
push
mov
push
cmc
push
add
dec
mov
xorl
lock
in
ret
inc
cmp
in
loope
cmpl
push
push
mov
test
std
fistpll
pop
pop
arpl
push
push
push
xor
dec
sar
adc
jmp
in
push
or
lds
xchg
cmp
xor
int3
lock
push
aad
and
insb
sbb
lock
shll
cmpsb
dec
push
sub
ds
int
jle
inc
lahf
out
iret
pop
push
stos
in
in
lret
fcom
dec
lods
pusha
out
adc
loop,pt
adc
push
add
push
inc
data16
aam
mov
shrb
rcll
fucom
adc
xor
lock
imul
sub
cli
insb
mov
stos
sub
scas
jbe
mov
push
fdivl
stos
pop
dec
sbb
loope
les
das
pop
dec
push
mov
dec
repz
divl
cmc
push
inc
test
pushf
outsb
sbb
add
out
jno
pop
mov
fbstp
pop
cmc
xor
xchg
cs
std
rcrb
sub
pop
in
xor
inc
push
pop
pop
mov
sarl
adc
jp
sbb
lods
jge
fnstcw
xchg
rolb
cltd
jae
mov
in
inc
out
in
cmp
sub
push
push
mov
xor
jmp
inc
sti
imul
shlb
sbb
mov
or
jmp
fiaddl
cmp
aam
fwait
lods
push
cmp
fcmove
jnp
xchg
cmp
pop
int
add
in
dec
cld
adc
mov
rolb
jge
xlat
mov
push
dec
xorb
mov
mov
jne
outsl
das
or
imul
mov
repnz
negb
pop
jl
aad
leave
mov
mov
and
sbb
test
fisttpl
sbb
in
lret
cs
and
and
or
inc
push
rorl
or
jbe
sbbb
and
mov
mov
mov
mov
jmp
push
ret
adc
mov
dec
pusha
cs
scas
loopne
jae
xor
das
in
or
mov
inc
mov
ljmp
mov
jl
jne
xchg
and
mov
repnz
dec
arpl
test
cmp
shll
ljmp
nop
mov
or
jo
popf
sbb
sub
fs
in
sub
cmpsb
jnp
jnp
xchg
pop
jne
add
fwait
adc
jmp
and
pop
ret
popa
xchg
push
mov
xlat
push
jp
test
jmp
mov
mov
leave
fwait
dec
and
cmp
sub
push
sbb
les
scas
ss
movsb
test
leave
or
jb
or
orb
push
lea
mov
mov
inc
jns
stos
outsb
sarb
xlat
lret
test
sbb
push
js
or
jo
push
loope
mov
popa
mov
aas
cmp
mov
pop
cmp
inc
dec
stos
lea
movsl
es
dec
inc
cmp
fidivl
rcrb
xchg
and
or
fsubrs
data16
jge
mov
xchg
xor
mov
popa
into
and
add
test
arpl
sbb
lret
mov
and
cmpsl
ljmp
test
and
and
mov
push
les
jle
bound
dec
hlt
cwtl
int
negl
stos
inc
jl
cmp
xchg
sub
std
xchg
pop
repnz
cmp
and
push
dec
inc
mov
push
repnz
fsubrs
cmp
adc
adc
pop
cmp
sbb
movsl
jge
lods
in
cs
mov
mov
loop
add
xor
je
jmp
pop
mov
pop
push
mov
mov
inc
dec
and
je
movsb
lods
in
data16
test
dec
pop
adc
aaa
pusha
pop
sub
outsb
aam
add
aaa
bound
fldenv
jo
push
sbb
cmp
sar
int
cmpsb
stc
and
lret
jne
adc
mov
cs
jge
cmp
movsb
add
and
idivb
mov
rclb
inc
sbb
push
mov
std
push
cli
testl
loope
cmpsb
pop
mov
int3
repnz
stos
lcall
aas
sbb
dec
push
mov
jmp
test
push
add
xchg
sbb
test
xchg
adc
push
or
fnsave
push
push
or
xchg
loopne
jmp
lds
ljmp
mov
mov
push
insb
push
or
or
out
into
arpl
xchg
out
jnp
cli
xchg
cltd
rol
sub
test
sub
popf
cmpsb
add
mov
ret
in
ds
lret
inc
fwait
lcallw
das
sbb
add
repz
lods
jecxz
cmp
loope
fisubl
pop
call
call
lret
adc
dec
sahf
jbe
sahf
std
mov
push
sbbb
add
or
push
fstp
aad
fucomp
xchg
mov
fimuls
lret
jo
lock
xlat
ret
std
push
pusha
cmp
iret
shll
pushl
push
push
dec
sub
fmuls
or
jno
shlb
pop
clc
nop
int3
jmp
or
mov
imul
sub
jmp
jmp
xlat
add
scas
mov
test
aam
out
cmp
push
xchg
sub
or
in
jle
or
push
js
push
leave
stc
xchg
inc
sti
loop
sbb
popa
sub
jne
insb
mov
cmp
stc
adc
bound
imul
addr16
jecxz
leave
shrb
mov
jecxz
movsl
lods
xchg
scas
mov
push
call
in
leave
mov
sbb
cmpsl
ds
xchg
dec
push
sarl
incl
inc
repnz
and
negl
cmp
xcrypt-ofb
cmpsl
scas
pop
mov
inc
fimull
jecxz
insl
mov
xor
mov
ss
dec
dec
inc
pop
dec
int
mov
ljmp
mov
lea
mov
addr16
loop
inc
sbb
xchg
shlb
out
pop
xchg
jl
repnz
add
xor
jp
or
pop
lock
dec
enter
lods
jns
dec
jge
das
adc
mov
pop
mov
xor
and
cmp
lock
push
dec
ret
xor
ds
mov
int
push
inc
xchg
rcr
xor
push
push
sbb
adc
jb
or
test
scas
orb
cmpb
shl
sbb
dec
fstpt
shrb
bound
stos
or
or
and
mov
sub
mov
push
in
inc
mov
scas
lret
adc
mov
xchg
sahf
inc
dec
out
cmp
stos
ficoms
push
call
call
xorl
pop
mov
xchg
inc
sbb
lds
popa
inc
pop
or
ss
mov
in
fidivs
dec
and
lods
push
adc
insb
cmp
or
sti
inc
sub
sub
mov
sbb
xchg
sbbl
sarb
cmp
mov
jge
mov
dec
insl
mov
mov
call
cmp
das
inc
icebp
xchg
mov
repz
ss
es
in
ds
lods
push
dec
xchg
stc
insl
hlt
test
xor
push
jae
cmp
jns
cltd
jns
cltd
lock
xor
ret
cltd
lret
pop
iret
fwait
outsb
lods
xchg
inc
lock
nop
js
xor
and
mov
dec
je
push
pusha
mov
xchg
sbb
mov
and
inc
mov
jbe
pop
scas
mov
mov
jg
dec
add
dec
xchg
xor
fwait
add
fisubrs
das
data16
ljmp
sub
es
jp
pop
xor
mov
pusha
or
jp
dec
push
xchg
test
cmp
sbb
lea
jle
iret
dec
shlb
xchg
cmp
xor
dec
push
inc
test
movsl
leave
clc
jp
or
gs
cmp
push
cmpsl
sub
fcmove
nop
scas
or
cmc
or
xlat
fs
imul
push
cmp
pop
cmp
sub
dec
ret
add
jb
xor
xchg
adc
imul
fldt
lds
or
adc
adcb
mov
bound
jne
mov
fnstenv
inc
or
imul
outsb
cmpsb
cld
adc
add
cmpsb
leave
mov
mov
leave
enter
xchg
js
jg
inc
int
loop
mov
xor
outsl
dec
popa
sbb
sub
ja
scas
inc
pop
mov
xor
push
popa
inc
mov
adc
adc
imul
pop
mov
loop
push
shrb
add
div
mov
filds
filds
push
lahf
scas
jbe
mov
inc
arpl
sahf
cmp
roll
loope
outsl
lds
dec
dec
mov
mov
arpl
sub
mov
imulb
pop
cmc
dec
test
icebp
fsqrt
ss
adc
pusha
cmpsb
repnz
jae
call
shl
pop
and
mov
cmp
bound
push
jle
adc
push
adc
rorl
jne
sbb
lock
or
push
ja
push
je
inc
dec
xchg
mov
mov
sub
in
push
fcoms
lods
inc
cmp
scas
xor
or
mov
jnp
mov
xchg
and
movsb
aas
hlt
add
mov
cmc
rcrb
ret
xchg
jae
pusha
ret
pop
out
hlt
mov
addr16
faddl
int
repz
pushf
fwait
stos
or
mov
ljmp
fdivr
sbb
mov
insl
inc
repnz
lret
outsl
inc
mov
xor
iret
fsubrl
sub
xor
mov
xor
push
xchg
stos
movsl
jb
ffree
int3
xchg
in
mov
in
int
mov
mov
stc
mov
test
ljmp
add
mov
push
icebp
scas
mov
ds
dec
iret
lods
mov
mov
mov
pop
xchg
pop
dec
mov
sbb
mov
jns
push
mov
pop
jmp
stos
int3
shl
testl
jno
ds
and
pop
lcall
pop
cmp
mov
popf
jle
pop
test
dec
add
adcb
jns
dec
fisttps
movsl
sbb
sub
in
jle
xchg
jbe
cwtl
push
std
push
hlt
mov
jmp
jmp
sbb
ret
daa
jb
sub
pop
push
add
imul
or
cs
fisubs
jne
push
sbb
scas
cwtl
add
pop
and
into
sbb
out
lret
je
outsl
enter
pop
xor
dec
in
fidivrl
scas
push
test
pop
std
ss
popf
dec
adc
cs
cmp
lods
mov
xor
out
adc
insl
jl
aam
jl
repnz
and
sub
sarb
inc
xchg
xor
daa
jl
or
add
cli
push
je
addr16
mov
enter
in
sbb
sbb
xchg
xor
je
int
jecxz
repnz
or
ja
cld
or
dec
cwtl
jb
mov
int
jl
dec
arpl
dec
out
cwtl
sub
mov
jp
add
cltd
mov
ficoml
pop
cmp
lea
adc
add
stos
sbb
push
xor
rorb
std
push
adc
outsb
push
call
repz
dec
pusha
fcmovnu
cmp
daa
mov
in
mov
jl
jno
jns
fsubrs
mov
lcall
push
push
xchg
stos
or
xchg
xchg
push
cmp
sbb
sbb
neg
xor
dec
lret
and
jae
stos
add
pop
dec
jp
mov
fsubrl
das
push
sbb
sbb
adc
cmpsl
lods
outsl
andb
mov
sub
fisttpl
sbb
xor
in
lret
jo
ret
loop
jnp
repz
lret
ffreep
pop
icebp
into
sub
and
cmp
ds
out
imul
fistpll
mov
mov
clc
pop
call
fdivrs
jae
fiaddl
ret
pop
clc
movsl
ret
push
sbb
mov
adc
push
add
jl
icebp
cs
insl
fs
dec
push
xor
leave
test
loope
rcrl
and
mov
xchg
lock
flds
pop
dec
pop
daa
xchg
add
pop
add
mov
cmp
dec
negb
add
push
sti
arpl
ja
or
movsb
mov
pop
lods
je
in
int3
lock
and
scas
test
nopl
jno
lahf
push
in
leave
mov
sar
jge
dec
inc
ljmp
popf
pop
out
dec
outsb
iret
xor
xchg
add
sub
jmp
push
mov
jbe
mov
mov
es
xchg
scas
cmc
xchg
mov
repz
hlt
dec
add
and
js
call
js
lds
out
xlat
outsb
cmc
ficoms
or
popf
push
pop
rol
inc
xor
mov
and
mov
mov
xor
test
stc
add
inc
fnstcw
mov
add
int3
scas
pop
fimull
inc
popf
lods
insl
fucomip
dec
flds
lock
mov
cmc
popa
jno
mov
cmpsb
das
into
and
sub
fists
lock
aas
jp
bound
ret
mov
ds
xor
add
xchg
sub
mul
das
push
dec
popf
inc
mov
sbb
inc
mov
imul
mov
or
mov
jle
repz
lahf
les
push
sub
ss
fmull
sub
jno
test
dec
dec
aad
xchg
add
arpl
daa
dec
fdivp
adc
loope
xchg
inc
xor
adc
sub
movsb
insb
xor
or
mov
add
mov
movsb
mov
pushf
es
popa
sbb
and
xor
pop
xor
add
mov
jbe
lret
imull
aas
ja
iret
sbb
jo
jno
stc
xlat
pop
call
arpl
shrl
into
ja
hlt
cmp
iret
in
inc
cmpsl
rcrl
data16
repz
cmp
and
jne
mov
cmp
push
subl
jl
fsts
icebp
jle
ret
or
mov
aam
in
pusha
test
xor
cmpsl
ret
xlat
xor
insl
out
lret
xor
mov
pop
cwtl
inc
out
lds
int3
and
imul
in
push
test
nop
lds
loope
push
jb
inc
aaa
jno
dec
inc
into
mov
sbb
mov
repnz
insl
movsb
xchg
inc
repz
push
test
push
jno
aam
sbb
out
adcb
movsb
in
enter
stc
jl
dec
ret
out
clc
orb
movsb
xor
cli
mov
shrb
in
out
push
xchg
popa
inc
fdivrl
outsb
lds
mov
bound
dec
inc
xchg
push
and
loop
add
mov
scas
aam
gs
mov
sub
cmp
mov
out
mov
shlb
call
popa
mov
pop
sti
mov
loope
and
sub
setbe
pop
aad
stos
sub
lea
cwtl
and
jp
mov
cmp
pop
aam
add
loop
pop
sbbb
cmp
push
out
dec
pushf
sarl
negl
add
rcrl
dec
pop
add
jmp
xchg
loop
dec
adc
mov
xor
cwtl
pop
fistpll
rcrb
sbb
adc
stos
fwait
adc
aad
data16
sbb
pop
pop
loop
sti
imulb
add
into
pop
mov
adc
mov
adcl
pop
dec
pop
pop
mov
cmpsb
mov
mov
addr16
sbb
adc
sub
je
flds
jge
gs
jl
sahf
gs
icebp
or
gs
mov
jo
jle
clc
shlb
into
inc
data16
lods
stc
inc
jb
or
xor
inc
cmp
outsb
shr
ret
sub
out
xor
and
mov
shlb
xor
dec
movsl
nop
xchg
dec
mov
rorb
or
lret
gs
jl
xchg
mov
pop
jl
xor
pop
into
push
cmp
or
xchg
mov
pop
jle
push
loop
shlb
sarb
jmp
sub
fincstp
fildl
imul
mov
add
inc
and
jb
pop
mov
dec
test
loop
mov
mov
push
in
or
lods
aad
mov
adc
inc
sub
push
les
sub
rol
test
rorl
jnp
test
xchg
lock
ret
and
jnp
mov
shl
cs
mov
icebp
popa
fucom
sub
lods
sahf
push
jne
pusha
dec
ret
push
fcom
stc
mov
movb
inc
sbb
and
and
mov
sar
pop
fstpt
fwait
popa
pop
mov
popf
cli
add
mov
adc
insb
ret
out
in
mov
call
or
imul
std
add
in
mov
sti
mov
loop
inc
pop
dec
push
cmp
fs
stos
bound
stc
mov
jmp
push
or
out
ljmp
adcb
mov
out
dec
nop
xor
adc
push
lds
cmp
arpl
sub
mov
cmc
test
jae
scas
arpl
test
xchg
pop
lock
lret
xor
je
mov
add
mov
fcmovu
pop
jp
insb
out
movsb
add
test
xor
push
push
ss
lods
lods
xchg
nop
lock
dec
mov
push
sbb
jg
scas
addr16
sub
je
movsl
jle
mov
out
andl
dec
call
aaa
push
dec
xor
lock
jb
cmp
loop
orb
cmp
sub
push
xor
lret
push
dec
fcomip
test
aam
scas
jno
mov
stos
cwtl
ds
jecxz
fnsave
xor
inc
dec
das
sbbl
std
leave
in
pop
cmp
test
xchg
mov
mov
inc
jns
bound
adc
enter
enter
xor
leave
jg
pushf
aad
mov
pop
jge
push
repz
andb
test
push
out
stos
mull
mov
dec
jo
push
cld
cwtl
mov
je
test
data16
xchg
lret
cmp
add
xor
std
mov
mov
adc
mov
pusha
mov
push
lds
movsl
loop
inc
xchg
std
mov
mov
pop
xchg
les
cmp
das
repnz
imul
jp
adc
cli
hlt
mov
mov
push
orb
mov
xchg
dec
mov
dec
stc
jae
andb
mov
fistpll
loopne
jmp
push
pop
mov
mov
jbe
jnp
mov
mov
sbb
fs
subl
jno
iret
push
sbb
jne
pop
add
inc
jmp
sub
adc
sti
sbb
push
in
inc
xchg
ljmp
aam
shrl
outsl
orb
xor
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
sar
pop
in
mov
pop
addl
and
jmp
stos
push
mov
in
test
stc
xchg
adc
push
ret
jmp
jg
cltd
stos
cltd
addr16
jmp
mov
pop
cmc
lcall
and
fs
pop
mov
add
jno
in
aad
rolb
jmp
fstps
fiaddl
dec
cmpsl
imul
aad
int
sbb
sbb
xor
push
push
clc
mov
mov
sar
mov
sub
popa
adc
mov
inc
stos
jecxz
push
jmp
jns
js
push
fmul
loopne
popf
sub
dec
mov
outsb
cmc
popf
pusha
cmp
sub
lds
add
push
dec
sti
sub
pop
jmp
push
xor
inc
clc
inc
cmp
pop
out
inc
into
out
out
inc
inc
and
xor
rcl
jae
pop
xchg
imul
push
push
fwait
sbb
add
lock
lods
arpl
pop
cmpsl
movl
push
outsl
cmp
jmp
popf
xchg
popf
mov
test
dec
aam
scas
mov
or
xchg
mov
dec
lret
filds
push
pop
lods
dec
sub
sahf
loopne
xchg
out
test
xor
shll
inc
div
push
sbb
xor
jne
orl
addr16
popa
dec
out
push
aad
ljmp
je
lahf
ficomps
loope
ds
pop
loope,pt
xchg
shll
push
into
pop
repnz
xchg
or
cs
xor
test
dec
fnstsw
lcall
loopne
mov
sub
outsl
fsubr
outsb
shll
mov
fadd
inc
add
fwait
into
or
xor
jno
adc
sahf
mov
mov
cltd
loop
sbb
push
or
rorl
or
inc
xor
test
test
ret
cmpsl
loope
push
sub
dec
or
inc
xor
mov
sub
lea
push
sub
addr16
mov
lea
add
insl
fucomi
aaa
sub
adc
fisubs
cli
dec
dec
xlat
mov
mov
or
repnz
into
movsb
pushf
adc
cli
mov
cli
xchg
xchg
icebp
inc
adc
andb
add
jge
insb
fucomi
mov
rcll
popf
mov
fnstenv
xor
aad
jmp
mov
int3
mov
pop
gs
aaa
mov
xchg
sub
notl
push
repz
push
shll
jge
sub
fwait
jg
lock
aaa
jnp
pop
jl
iret
jge
push
xor
jne
out
jg
xor
fs
sbb
add
dec
jecxz
mov
in
dec
xor
out
mov
jmp
mov
cmc
inc
roll
mov
push
mov
or
lret
sub
push
imulb
and
push
mov
test
and
data16
push
into
adc
mov
orb
mov
imul
or
xor
imul
adc
pop
pop
or
push
rcrl
arpl
xlat
notb
xchg
dec
push
cmp
roll
pop
mov
fstpl
cmp
divb
gs
pop
test
stc
movsb
in
and
mov
and
pop
xor
lret
out
and
mulb
incb
inc
stos
ficoml
add
jmp
loope
jmp
mov
sub
ds
frstor
inc
push
lds
fidivl
cs
rolb
jo
aad
pushf
mov
jp
shr
or
inc
adc
mov
in
lret
jp
dec
push
lock
xor
push
adc
inc
rcrl
fisubs
push
fstps
jl
and
cli
ja
or
cmc
cmp
push
mov
fmulp
popa
sbb
lret
stos
leave
enter
sub
or
faddl
fisttpl
fldl
cmp
test
and
loopne
les
pop
out
lret
out
pop
in
nop
int
mov
iret
pop
push
je
mov
adc
loopne
cld
or
jnp
sbb
pop
stos
push
xchg
xor
jmp
add
cli
jp
add
repz
sarl
pop
add
scas
or
lds
sbb
push
divl
jl
iret
or
in
les
mov
out
aaa
leave
fcoms
pop
dec
mov
mov
mov
pop
xchg
sbb
and
pop
add
lret
repnz
xchg
addr16
test
jnp
roll
cmp
xchg
into
fdivs
mov
popa
in
mov
outsl
iret
cmp
int
sub
push
pop
xlat
sub
jns
dec
shrd
lcall
or
daa
fmull
xchg
sub
xor
pop
mov
std
xor
sbb
fcmovb
jo
fstpt
rcr
mov
jl
lahf
fwait
inc
inc
push
rorb
cmp
dec
sbb
mov
repnz
decb
cli
or
pop
je
cli
outsb
cs
and
and
ret
lret
negb
rorl
adc
sub
mov
lcall
push
cs
dec
push
push
mov
sub
add
mov
jle
pop
cmpsl
xchg
xor
push
xchg
xchg
imul
popf
sub
mov
and
into
adc
push
out
sub
and
jl
cmp
filds
shr
popf
popa
pop
stos
xchg
dec
xchg
and
or
rol
pop
out
addl
shlb
push
pop
add
out
lret
into
jne
cs
scas
sti
or
jnp
xor
out
ret
in
cmp
xor
inc
ljmp
pushf
or
outsl
mov
iret
lret
stos
sub
cwtl
sub
xchg
iret
sub
xchg
test
scas
int3
pop
jmp
imul
repz
js
loop
mov
fs
xor
scas
mov
xchg
xlat
rolb
loope
faddl
mov
mov
jbe
loopne
and
lods
xchg
test
sbb
push
fucomip
push
loopne
add
call
jns
ds
dec
sub
test
aam
cld
aaa
xor
xchg
lea
mov
outsb
add
inc
int3
dec
add
add
out
push
arpl
das
andl
mov
and
push
test
aaa
add
cmp
aad
mov
dec
dec
sar
mov
dec
jnp
dec
mov
daa
mov
dec
mov
push
sbb
xchg
sahf
sub
mov
std
xchg
lahf
jo
dec
icebp
sbb
in
iret
jl
mov
cs
dec
jns,pn
jg
xchg
dec
push
lods
xlat
mov
cmc
rclb
fwait
mov
stos
popa
into
xor
mov
fistpl
es
mov
cmp
mov
xlat
addr16
mov
repnz
imul
repz
mov
pavgb
imul
or
or
and
movsl
int3
mov
push
xor
mov
push
call
lea
xchg
dec
dec
xor
cmpsl
xchg
dec
xor
push
xor
adc
mov
shrl
out
nop
out
xchg
cmp
xchg
push
pushf
cmp
and
xchg
push
push
jp
xor
out
ror
mov
dec
push
xchg
push
sbb
or
mov
inc
rcll
repnz
popa
daa
adc
adc
pop
shrl
mov
push
push
imul
adc
test
cld
mov
in
and
in
mov
dec
mov
cmp
push
xchg
inc
js
push
pushf
stos
add
data16
push
sub
xor
lock
call
jg
jnp
push
mov
mov
imul
notl
sub
daa
fwait
sub
mov
sub
xchg
mov
pop
in
aad
xchg
imull
push
cmpsb
sti
ffreep
xor
sbb
shrl
jge
pop
divl
incb
xchg
pop
sbb
mov
test
adc
hlt
outsb
icebp
and
lea
shrb
pop
loope
lock
divb
mov
mov
enter
jmp
call
and
dec
inc
xor
mov
fucom
xchg
ret
push
xchg
sbb
cmp
mov
dec
mov
notl
test
xchg
xchg
std
mov
out
dec
ss
movsl
jecxz
xor
push
stos
push
inc
ret
in
fwait
xchg
shrl
push
pusha
lea
popl
sarb
push
mov
xchg
mov
andb
stos
jne
push
cltd
cmp
mov
icebp
xor
push
rorb
jns
adc
and
inc
or
dec
sub
jp
xchg
scas
testb
ficompl
gs
push
mov
dec
stos
dec
iret
xchg
pop
mov
jbe
jecxz
inc
mov
xor
pop
mov
inc
adc
mov
adc
mov
movsl
ficoms
sub
cmp
and
rclb
dec
mov
fsts
cmp
sahf
xchg
or
insb
push
fstpl
mov
call
push
pop
ja
mov
insl
daa
fiadds
jg
popa
jle
add
jbe
jl
mov
jnp
test
lcall
sarb
push
lock
popa
mov
sub
dec
sbb
icebp
cmp
repz
int3
mov
fs
das
mov
fdivp
mov
insb
push
fistps
int3
jle
imul
loopew
scas
nop
pusha
lods
push
inc
cmp
scas
in
xchg
aam
jbe
clc
inc
or
jg
nop
cwtl
inc
mov
rcrl
sarb
clc
out
stos
dec
insb
xchg
xor
xchg
scas
test
dec
inc
xchg
inc
mov
aad
jle
jno
frstor
in
inc
cli
rorl
adc
popf
push
inc
in
adc
jbe
mov
into
add
push
adc
inc
movsl
pop
movsb
push
jmp
push
inc
fiadds
push
scas
fistps
sub
test
lcall
addr16
imul
arpl
fwait
adc
adc
push
std
sub
mov
inc
push
fisubrs
inc
es
test
xor
into
mov
mov
imul
test
xor
imul
test
dec
dec
adc
aas
mov
insl
mov
push
xchg
xchg
popa
jae
and
cmc
ficoms
mov
insb
cmp
mov
aam
js
call
mov
mov
xor
sub
mov
scas
test
mov
inc
sub
pop
imul
adc
aad
xchg
imul
fcmovnu
pop
mov
push
out
test
out
push
out
in
jmp
mov
mov
cmp
and
test
jno
aad
pop
test
ds
movsl
clc
cmp
xor
lahf
pop
pop
xor
aam
add
jb
pop
jg
aam
push
xchg
push
dec
cmpsb
cmp
cwtl
fwait
mov
add
mov
xchg
adc
lcall
pop
mov
adc
aad
mov
and
test
sbb
addr16
xchg
mov
pop
mov
jge
in
arpl
cwtl
fs
fisubs
loop
mov
xchg
shll
cmp
add
lock
add
inc
xchg
xchg
mov
jle
and
pop
jecxz
sbb
jecxz
xchg
mov
adc
xchg
jno
inc
int3
ret
xlat
xor
iret
sti
outsl
int3
jg
lods
rclb
out
je
cli
dec
sub
inc
sub
rclb
inc
fnstenv
test
push
inc
sahf
xor
add
adc
pop
fsubp
jg
and
adc
mov
adc
adc
dec
mov
mov
arpl
and
mov
dec
test
add
es
push
sbb
leave
push
stc
mov
lock
and
push
cmp
fistpl
jns
or
push
roll
mov
lods
es
jle
xchg
and
dec
cmp
repnz
stos
lock
add
mov
pop
inc
fndisi(8087
stc
cmp
sbb
push
and
dec
xchg
sbb
test
or
xchg
test
or
iret
into
movsl
jecxz
ljmp
arpl
addr16
mov
xchg
ss
xor
inc
daa
inc
cmpl
and
push
xor
lods
vpunpckhqdq
and
push
stos
mov
jg
mov
inc
jecxz
into
lcall
xchg
fs
pop
sahf
xchg
inc
adc
lcall
popa
jb
xchg
cmc
sbb
dec
stos
sbb
jle
std
adc
mov
fldenv
or
pop
cmpb
mov
dec
jno
shlb
lcall
adc
jnp
mov
loopne
mov
and
cwtl
insb
pop
and
dec
mov
pop
cmp
ja
es
loope
cmpsl
sbb
add
inc
sar
sbb
inc
popf
add
cmp
sub
jns
fbstp
pop
sbb
pop
and
ja
sti
ds
out
dec
test
aaa
out
lret
and
aas
lcall
jns
and
rolb
std
push
sub
inc
frstor
adc
mov
jnp
shrb
fcompl
jbe
adc
arpl
jle
jbe
jne
scas
pop
dec
push
jno
lock
mov
js
or
push
js
ret
fsubp
fstpl
aas
or
cmp
xorb
ja
jp
fildll
mov
add
and
xchg
adc
sbb
or
rclb
push
cmc
nop
inc
insb
lret
xchg
iret
pop
inc
insl
xlat
ja
pop
jno
adc
movsb
stos
add
int
scas
ret
jne
aas
xorb
das
xor
ret
int
sbb
enter
or
mov
xor
stos
pop
hlt
or
and
mov
inc
fildll
push
repz
cmc
mov
mov
hlt
bnd
jno
popa
mov
ucomiss
in
orb
xchg
leave
loopne
push
mov
pop
and
mov
movsl
hlt
cmp
dec
xchg
daa
sub
stos
lcall
mov
push
pushf
loopne
mov
pusha
sub
pop
lret
mov
scas
test
lahf
cmp
xor
rcr
sub
fadds
push
sti
scas
push
int3
sbb
xchg
mov
pop
scas
sbb
push
lds
mov
push
mov
add
insb
arpl
jbe
mov
in
cwtl
or
jo
out
cmpsl
jno
int3
ret
sub
cmp
jmp
push
xor
cmpsb
pop
lods
aam
jecxz
mov
outsl
jnp
jmp
mov
insl
add
adc
jmp
leave
imul
dec
imul
fsub
popa
xchg
mov
xchg
lcall
mov
sbb
cmc
fwait
cmc
in
not
loop
les
out
xor
lds
mov
or
sbb
ret
mov
add
outsl
and
aad
sbb
xlat
xchg
push
adc
jge
fcoml
daa
mov
mov
sbb
enter
fisubrl
lret
test
cmpb
or
inc
fisttpl
push
lds
loop
push
out
stc
sbb
xor
cmp
sahf
cs
in
or
ffreep
dec
and
mov
cli
fwait
ds
mov
pop
movl
push
add
shll
repz
into
mov
iret
rorl
ret
and
xchg
test
sbb
dec
xchg
jecxz
sbb
sti
sbb
pushf
leave
xchg
cld
jb
out
add
jecxz
sub
out
dec
fisubs
push
add
loop
ret
lea
pop
repnz
icebp
dec
mov
push
loopne
pop
mov
mov
cmp
lds
cmp
jae
lds
push
xchg
push
jo
push
mov
idiv
test
pop
scas
ret
fistpll
add
xor
xor
jmp
leave
nop
xor
leave
and
push
sub
xor
inc
mov
mov
hlt
mov
pop
stos
jb
dec
or
insl
mov
xor
jle
jecxz
mov
inc
sub
mov
ret
ss
les
add
adc
xor
mov
addr16
inc
faddl
mov
cld
aad
mov
adc
and
mov
test
mov
lds
es
xor
cld
les
or
dec
enter
cltd
push
sub
scas
in
or
sbb
fcomi
add
pop
into
inc
sti
mov
das
popf
jno
sub
sub
popa
mov
out
sub
dec
std
scas
cmp
adc
sbbb
mov
mov
mov
jmp
jle
mov
fmuls
add
clc
cli
into
lods
je
xchg
xchg
mov
dec
pop
lret
push
xor
lret
jno
cmp
lds
inc
xor
repnz
lret
and
out
xor
cmovae
pop
jo
les
sbb
fwait
cwtl
adc
mov
and
repz
sbb
test
andb
xor
stos
inc
sub
push
outsl
pop
mov
cmp
jmp
pop
dec
xchg
mov
cs
cmp
dec
aas
imul
daa
mov
popf
mov
fiaddl
mov
xchg
dec
sbb
loop
sbbl
shrb
adc
pop
fsubrl
das
popa
loop
mov
inc
sti
stos
mov
mov
pop
mov
xchg
add
sbb
pop
stos
lea
in
or
cld
fsubrs
cld
and
jno
movsb
pop
cltd
sarl
arpl
pop
xor
mov
xchg
movsl
add
xlat
xchg
lea
clc
int
call
xchg
outsl
mul
jno
fnstcw
leave
lahf
cmp
in
dec
xchg
fdivrs
mov
xchg
jl
mov
mov
cwtl
xchg
mov
or
ds
xchg
movsl
sub
mov
daa
adc
dec
sbb
jle
inc
or
jns
aas
push
mov
inc
fs
rcrl
xor
cmpsb
xchg
jb
in
ljmp
arpl
jbe
xchg
ljmp
testl
cwtl
xor
lea
loope
les
adc
xchg
dec
dec
sub
xchg
std
mov
jbe
lahf
sbb
pushf
loope
les
push
adc
cld
sbb
nop
or
fbstp
pop
mov
rorl
xchg
mov
ds
sub
rcr
gs
cmc
divb
ss
rolb
mov
xor
imul
stos
jmp
cmpl
mov
sbb
and
and
jne
ss
push
bound
dec
sub
leave
fwait
shrb
xorb
mov
mov
imul
push
aam
jecxz
mov
fnstenv
jbe
adc
les
imul
mov
mov
add
mov
bound
lock
in
into
loopne
cmp
repz
sub
outsb
inc
mov
test
push
sbb
int3
dec
scas
imul
insb
rcrb
mov
sub
dec
sbb
das
mov
push
sbb
jb
repnz
and
sub
aad
adc
imul
inc
aas
mov
inc
jnp
std
sar
stos
fs
out
xchg
xchg
xor
iret
rcrb
dec
imul
pop
imull
test
fld
in
mov
out
or
mov
and
icebp
mov
xchg
faddl
mov
push
pop
loope
push
dec
xchg
aad
jae
repz
call
in
mov
andl
gs
or
adc
loop
sbb
jno
push
in
js
incl
mov
popa
xchg
neg
jno
mov
into
xchg
inc
xor
cmp
sub
ds
mov
push
stc
sahf
add
push
or
mov
test
sub
xor
jp
add
push
pop
push
pop
mov
xchg
out
mov
rol
fcmovbe
lds
mov
aas
or
jge
push
push
sbb
out
or
or
call
xchg
fcmovbe
shll
cmp
das
je
push
inc
sbb
sti
sub
fbstp
test
clc
dec
jl
inc
sbb
lods
cltd
popf
jecxz
mov
popa
inc
ja
xor
lret
ret
dec
bnd
mov
in
stos
inc
xor
jg
out
lahf
sub
xchg
mov
mov
sti
cli
inc
adc
mov
movsl
sbb
jo
test
cmpsb
inc
outsb
sbb
jb
popf
fstpt
fidivl
fnstsw
outsl
pop
scas
aaa
int
push
xchg
push
mov
cmpsl
int3
adc
xor
cwtl
hlt
lahf
mov
test
test
movsl
mov
cmp
iret
bnd
out
cmpl
push
int
hlt
and
pop
cmpsl
ret
sbb
lret
lahf
mov
cwtl
hlt
int3
aas
sbb
call
mov
cwtl
jge
stc
mov
pop
fldenv
mov
imul
jno
shlb
fs
sub
dec
mov
stos
mov
outsl
outsb
dec
jge
ficompl
in
ret
es
cmp
in
pop
adc
sbb
push
pop
jl
pusha
int3
cs
sub
in
sub
xchg
jp
xorb
xchg
into
xchg
xchg
mov
adc
adc
or
xchg
pop
das
aam
pop
inc
pop
add
fs
pop
push
fists
xchg
std
xor
lds
or
or
ljmp
lret
arpl
lahf
dec
mov
jp
mov
xor
mov
shll
into
gs
pop
int3
xlat
and
in
lahf
or
pop
sti
push
cmpsb
sbb
aas
js
cmp
ljmp
insl
xchg
out
inc
loop
add
or
xor
adc
jmp
scas
test
mov
aas
leave
leave
loopne
test
push
outsb
popf
and
fsubl
mov
push
rcrl
insl
and
dec
mov
push
ds
outsb
inc
dec
adc
mov
push
lods
stos
cmpsb
xor
jl
sub
xlat
pop
push
xor
cmc
into
std
loopne
ror
sahf
cmc
ss
push
mov
fidivs
sbb
dec
movsb
inc
insb
int3
leave
leave
nop
dec
or
cmpsl
dec
mov
mov
int
mov
sahf
rorl
fsubrl
andb
or
and
or
jb
cwtl
mov
xchg
push
xchg
shll
cmp
cmp
mov
dec
and
jmp
aas
aad
cmc
sbb
cmpsl
sahf
add
fs
loope
aad
mov
xor
iret
ss
xchg
lds
inc
into
leave
sub
lea
int
ret
adc
cltd
les
and
or
mov
inc
sarl
sub
test
jl
xchg
mov
sub
out
ja
out
cmp
xor
or
in
mov
pushf
lea
adcb
lods
dec
mov
mov
pop
mov
movsb
mov
cmp
xchg
filds
xchg
rcrl
mov
nop
mov
and
movsb
or
and
aaa
loop
xor
idivl
inc
inc
mov
jo
out
cltd
lea
jno
push
pop
les
jns
xchg
int
xor
out
mov
xchg
jg
aas
mov
sub
sarb
push
cmp
std
in
xchg
mov
jne
popf
dec
cmc
mov
scas
dec
sbb
gs
jns
pop
cmpl
adc
pushf
xor
into
adc
jg
stos
pop
push
add
sahf
in
fsts
sarl
or
mov
sbb
mov
test
ret
mov
jbe
or
negl
mov
jp
cs
mov
iret
and
push
fcomps
jbe
jle
mov
pop
push
sub
dec
adc
sub
pushf
cmp
mov
inc
and
and
icebp
in
clc
out
cmp
pop
or
push
lock
incb
push
mov
loope
or
lcall
push
ja
dec
fs
scas
mov
xchg
jmp
stc
or
lock
outsl
pop
sahf
mov
sti
inc
sub
lods
aad
lock
lahf
out
sbbb
adc
test
fwait
test
aam
push
sbb
mov
inc
ret
push
adc
sub
imulb
inc
scas
pop
push
divl
pop
or
leave
mov
or
int
mov
movsl
js
jp
stc
out
sub
mov
mov
lcall
add
and
bnd
xor
sbb
enter
mov
pop
or
xchg
fs
out
test
clc
cmp
add
adc
xchg
ret
jbe
xchg
fs
inc
pop
and
ret
inc
sub
add
enter
push
aas
rol
notl
mov
das
mov
add
xchg
pop
pop
int
inc
and
mov
xchg
cmpsb
sub
out
aam
stc
test
int3
inc
jno
rorb
jecxz
mov
inc
arpl
pop
sbb
or
inc
aam
inc
call
stos
out
cmp
sbb
pop
sbb
jae
xchg
fcoms
adc
rolb
loop
pop
leave
push
dec
sbb
js
xor
cmp
xchg
out
and
rcrb
aaa
fcomip
scas
mov
cmp
test
testl
xchg
and
pop
mov
test
imul
or
push
stos
mov
push
in
imul
scas
mov
pop
add
scas
aas
pop
or
sbbb
mov
pop
add
xchg
aam
and
mov
loop
orl
lret
pop
test
sahf
sub
ds
je
jae
fdivrs
and
inc
dec
repnz
inc
mov
loope
push
es
insb
adc
pop
fmull
mov
bt
mov
xor
and
cmp
sbb
out
in
adc
xchg
push
push
lret
testb
cmpsl
mov
or
sti
das
add
inc
cltd
sti
scas
in
sbb
jg
sbb
sbb
cmpsb
mov
sbb
sub
out
out
xchg
testb
ja
xchg
jmp
pushf
jno
repz
inc
loopne
xorb
mov
and
cmp
xor
jg
jg
and
mov
pop
xor
jecxz
psllw
pop
jb
sub
pop
jge
imul
jnp
or
pop
cli
lret
fldl
jecxz
mov
cmc
jo
ret
lahf
push
push
lea
pop
outsb
or
jg
outsl
mov
and
stos
adc
dec
addr16
dec
std
adc
pop
lahf
test
add
and
xchg
popa
push
jecxz
shrl
xor
pop
outsb
push
cwtl
lock
es
sub
dec
in
icebp
jl
push
stos
xchg
shl
outsb
outsl
dec
pushf
dec
sarl
iret
cmp
cmpsb
lods
xlat
inc
lods
rclb
mov
mov
icebp
shlb
adc
push
push
jle
mov
sub
aad
fidivs
sub
das
in
repnz
leave
dec
xchg
pop
push
pushf
test
pop
mov
xor
repnz
hlt
sbb
xor
aas
push
daa
xchg
ljmp
mov
sub
add
inc
popa
fimull
inc
les
cmpb
cld
sbb
or
popa
fidivrl
aad
push
fldt
mov
lcall
jo
in
into
data16
mov
out
cli
idiv
dec
insl
cmc
fstps
mov
loope
mov
imul
mov
cmp
leave
or
mov
cmc
mov
fiadds
inc
mov
ds
lock
lock
rorb
add
sub
dec
add
lods
int
popa
movsb
sub
test
loopne
pusha
xchg
mov
daa
mov
imul
icebp
pop
arpl
iret
jno
movsb
fisttps
add
mov
insb
push
sbb
shlb
sqrtps
jae
adc
ds
fxch
or
jg
mov
sbb
mov
mov
jbe
ss
aam
mov
xor
jb
cvtps2pi
fsubr
scas
ret
adc
leave
idivl
lret
pop
push
bound
loopne
mov
sahf
add
xor
lret
loop
or
movl
push
pusha
mov
sbb
sbb
aad
inc
xorb
loop
loopne
pop
xchg
dec
imul
test
fdivl
loop
inc
ficoml
out
fs
lds
lret
shr
into
jecxz
imul
sub
dec
dec
addr16
lcall
popa
xchg
jl
aam
pop
and
push
xorb
add
push
fadds
jl
int3
add
mov
sbb
mov
loope
cmp
mov
icebp
in
sbb
ret
adc
andl
push
aad
add
mov
push
inc
bound
icebp
pop
lock
or
pop
push
add
inc
or
aam
or
add
ret
das
lods
insl
add
mov
ret
mov
das
push
add
add
and
cmovns
inc
xor
jbe
shr
and
mov
cmp
data16
decb
mov
sarb
push
aad
jne
xor
call
fisttpll
mov
out
dec
je
sub
test
out
dec
cmp
mov
sub
mov
ss
ss
mov
sti
cwtl
shrl
outsl
mov
inc
add
dec
dec
daa
cmp
mov
or
aam
fisttpl
xchg
aaa
inc
mov
repnz
insb
and
jno
shl
jae
cmp
es
add
pop
cmpsb
and
lret
dec
imulb
push
jns
rcrb
pop
sahf
pop
cld
lahf
mov
test
inc
mov
mov
mov
les
dec
mov
inc
fistl
popf
enter
shrb
pushf
add
int
cmp
iret
test
in
xor
push
mov
xchg
lret
jmp
jns
lahf
clc
pop
jo
std
push
imul
cmp
xorb
lods
cmc
add
xlat
fnstcw
aas
lcall
or
ds
pop
jmp
fisttpl
and
push
cmp
adc
add
ljmp
cwtl
dec
into
sahf
cld
test
out
cli
int
adc
pop
jbe
fistl
adc
or
dec
xor
push
add
cmc
pop
rcl
sti
hlt
lcall
loopne
or
out
roll
loope
shrd
cmpb
into
inc
mov
aaa
mov
xlat
jbe
xchg
jae
push
lods
fidivrl
cmpsl
mov
push
add
pop
or
inc
dec
sahf
fbstp
mov
xchg
dec
xchg
mov
mov
add
mov
lods
jle
pop
pop
cmp
xchg
pop
ss
xlat
rorb
cs
adc
addr16
jae
pop
mov
rorl
dec
adc
xorl
repnz
pusha
or
lcall
dec
in
sub
jg
in
add
leave
jecxz
inc
scas
pop
repnz
jb
xlat
add
inc
mov
pop
cli
jle
pop
mov
sbb
leave
outsl
xchg
bound
lret
lea
addr16
xchg
dec
rclb
fcompl
into
mov
movsl
rclb
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
mov
addb
leave
push
push
enter
outsl
xlat
fisttpll
xchg
adc
andb
inc
les
pop
or
and
sbbl
aas
mov
ss
outsl
std
fcompl
sub
dec
addb
push
lock
pop
in
xor
sarb
mov
fwait
hlt
lea
sub
iret
xchg
aam
ds
adc
inc
idivb
jp
insb
lret
push
mov
in
xchg
push
shll
rorl
and
push
stc
in
push
and
sub
and
addr16
inc
test
xor
xlat
lods
mov
lods
imul
cmp
or
sub
pop
loopne
push
xor
adc
mov
cmp
int
sbb
mov
andb
cmp
or
sti
push
leave
mov
sbb
pop
add
cmpsl
push
bound
and
xor
or
hlt
mov
cmpsl
ficompl
xor
aas
pop
mov
xchg
or
mov
adc
xor
lret
sub
dec
jo
ja
ret
xor
jo
movsl
mov
lods
and
sti
xlat
inc
lret
in
mov
imul
dec
lahf
ss
dec
inc
mov
adc
push
pop
movsl
mov
movl
push
xor
sbb
js
jbe
inc
xchg
sahf
adc
test
scas
jno
imul
and
add
add
out
sub
sub
lahf
lcall
jae
lods
pslld
mov
clc
sub
leave
nop
dec
imul
cmpb
cs
xlat
xor
popa
mov
out
mov
hlt
push
xchg
in
fisubrs
aad
lods
jnp
popf
popf
stos
mov
or
and
repnz
outsl
sub
or
enter
inc
sbb
push
sub
jbe
inc
add
jno
dec
pop
nop
push
fsubrl
ret
loope
and
ret
fistpll
rol
insl
cltd
pop
mov
fildll
fidivs
jle
in
or
jmp
xchg
xchg
loopne
ds
mov
mov
cltd
ss
or
out
jge
and
lret
icebp
adc
pop
cmp
mov
aam
in
test
les
mov
and
pop
push
pop
mov
push
ret
xchg
outsl
sub
aad
je
mov
nop
jno
pop
xor
xchg
pop
insb
sub
mov
inc
hlt
push
lahf
sbb
and
mov
or
pop
test
in
test
jbe
inc
pushf
or
inc
iret
std
ret
imul
std
push
mov
hlt
push
adc
xchg
cmpsb
into
js
pop
mov
ds
cmp
sbb
scas
xchg
rclb
push
ds
and
popf
dec
fistl
push
fldt
std
sbb
xchg
jno
les
inc
cmc
sbb
add
shrb
es
inc
push
movsl
jno
push
aad
cmc
cs
pop
adc
out
push
popa
inc
xchg
cmp
mov
shll
fisttpl
cmp
pop
ltr
rorb
insl
dec
adc
mov
imul
xchg
les
popa
mov
xlat
or
and
fwait
adc
mov
mov
sbb
or
cmp
nop
fs
mov
mov
jnp
jns
jmp
adc
cli
mov
push
add
test
std
inc
test
lea
xchg
dec
mov
test
movsl
push
push
aas
adc
stc
loop
push
xchg
sbb
jg
shr
stc
jge
sub
mov
xchg
cmp
inc
xchg
or
imul
mov
xlat
cltd
jl
mov
inc
dec
cld
lret
or
outsl
nop
sub
jmp
insb
testl
ja
lock
inc
into
pop
jnp
pushw
or
scas
lea
int3
cmpsl
ss
push
sbb
ja
in
xchg
test
test
outsb
adc
nop
pop
jmp
out
mulb
push
std
cmp
lahf
dec
dec
jo
and
push
xor
and
fidivs
dec
xchg
aad
into
mov
mov
pop
fbld
xor
icebp
push
mov
xor
mov
inc
out
mov
push
jb
ret
xor
lahf
jmp
arpl
dec
imul
push
loopne
sbb
mov
xlat
in
push
leave
push
xchg
add
push
imul
fsubl
mov
xchg
loop
push
xor
cmpsb
enter
adc
jle
fldcw
push
jg
inc
mov
cmp
push
sbb
inc
lds
xchg
ja
fidivs
xlat
push
fisttps
sub
incl
test
test
jb
lea
fcmovne
test
add
push
das
mov
in
mov
mov
fiaddl
sarl
idiv
mov
pop
fiaddl
fdivrs
lods
pop
lods
pushf
or
fistpl
ds
mov
clc
xchg
shrb
sub
int
nop
push
add
mov
mov
aam
outsl
cmp
mov
mov
lods
mov
push
and
stos
xor
aad
sbb
test
sub
fsubl
mov
add
and
dec
test
mov
jno
fldt
out
jle
sub
faddl
loope
inc
nop
pextrw
jp
shlb
cmp
popf
inc
xor
scas
cwtl
inc
stos
sub
xchg
je
push
out
add
sbb
jnp
outsl
incl
sarl
divl
push
hlt
lods
fucomp
das
andl
test
sbb
jge
inc
aas
cmp
stos
xchg
inc
mov
mov
cmp
dec
mov
sub
rorl
aad
mov
lahf
adc
lods
push
je
ret
and
pushf
xchg
addl
jecxz
pusha
push
pop
xor
mov
dec
test
das
xchg
push
mov
inc
jge
hlt
nop
or
push
dec
in
ficomps
notb
sbb
sbb
adc
sub
inc
mov
jns
mov
mov
rclb
pop
imul
jo
cmpsb
push
repnz
das
dec
jns
add
in
fdivrl
pop
es
inc
filds
bound
mov
inc
and
push
insb
mov
ljmp
movb
insl
push
lret
push
notb
jns
stc
pop
xchg
add
or
cld
inc
push
lret
mov
sub
das
flds
cmpsb
and
lahf
sub
push
cmpsb
std
xor
pop
fs
cld
sub
outsb
nop
push
push
mov
inc
jbe
sbb
jmp
test
push
sub
sbb
ffree
test
int
xchg
jl
outsl
sbb
dec
inc
mov
cmc
push
jle
fstpt
fs
mov
cmp
mov
out
sub
iret
ss
sub
dec
test
std
inc
jo
popa
loop
loope
cld
mov
cmp
pushf
sub
sub
pop
pusha
mov
fstpl
push
mov
hlt
jmp
dec
aad
cmp
mov
jmp
pop
mov
pop
sub
popa
nop
pop
dec
or
dec
dec
lcall
lahf
fcomp
xchg
add
sbb
shlb
jecxz
clc
clc
xor
sub
inc
lods
scas
test
mov
in
jp
jl
in
add
mov
insl
test
push
xor
or
ret
mov
js
jle
sbb
mov
lock
sbb
clc
loop
jmp
jb
inc
mov
lahf
xchg
shl
lret
ds
xor
fsubs
mov
lea
loop
and
push
dec
std
dec
test
sub
and
cwtl
cmc
mov
mov
insl
cmc
jno
sub
push
and
insb
insl
or
lock
jnp
imul
stos
jmp
movsl
cmpsb
fcmovbe
inc
xor
sbb
bound
mov
adc
imul
xchg
ljmp
pop
pusha
gs
lret
or
mov
dec
aam
dec
and
ja
mov
int3
mov
adc
dec
repz
jmp
mov
adc
dec
mov
enter
xchg
jmp
push
and
mov
jo
mov
gs
fnstenv
into
lret
or
pop
ljmp
inc
or
push
xchg
cmp
mov
fldenv
and
fucomp
jno
and
push
stos
repnz
aad
test
pop
add
or
sbbl
add
cmpsb
mov
out
push
add
xor
lods
cmp
sub
insl
sbb
jge
data16
push
xor
fs
inc
xor
jae
sub
adc
add
into
mov
out
add
adc
push
cmp
or
int
inc
jg
insl
invd
and
adc
pop
ljmp
cmpsl
lahf
inc
xor
repz
cltd
jne
pop
mov
mov
idivl
pop
iret
cmpsl
pop
icebp
cli
aam
jle
fnstcw
inc
filds
push
lahf
lods
jne
in
dec
push
xchg
imul
or
dec
hlt
jge
pop
clc
movsb
sub
push
rcr
cmp
rolb
shrl
nop
mov
call
mov
jnp
mov
out
push
mov
int
push
outsb
scas
mov
mov
dec
add
insb
or
lret
aas
adc
push
lret
mov
inc
xor
xor
fcmovnbe
mov
movsb
xorb
mov
inc
xor
or
sti
mov
push
rcr
into
push
push
xchg
out
push
xchg
int
cmp
add
aad
outsl
pop
repnz
divb
mov
jecxz
cwtl
enter
in
pop
das
enter
popa
inc
inc
repz
dec
jmp
mov
clc
and
mov
dec
sbb
cmc
fs
inc
and
push
adc
jecxz
mov
ret
xlat
arpl
cmp
pop
jecxz
insb
mov
inc
icebp
ret
out
push
pop
cmp
jge
ss
out
out
gs
sbb
shrl
jbe
outsb
adc
mov
jno
fs
xor
roll
mov
pop
fwait
aas
scas
jl
arpl
outsl
stos
jbe
push
enter
xor
fwait
repz
mov
in
dec
or
shrb
ficoms
mov
scas
int
push
sub
cld
je
movsb
sub
mov
into
push
jl
cmp
mov
popa
in
xchg
pop
pop
cmpsl
loopne
loope
jl
fisttpl
push
xchg
inc
rcr
lods
inc
mov
mov
jmp
pop
je
push
push
stc
sahf
and
and
arpl
inc
out
mov
mov
test
add
loop
and
fwait
lea
fcomps
xor
dec
mov
jp
and
pop
jmp
neg
je
cs
mov
jecxz
cmp
mov
insb
rcrb
cmpsl
gs
scas
insb
rcl
push
xor
or
inc
dec
pop
out
sbb
hlt
cmpsl
rorb
or
mov
push
scas
lds
imul
add
push
and
dec
lock
testl
cmp
jbe
inc
into
mov
or
cmp
or
inc
outsb
notb
xchg
out
movsl
nop
mov
xchg
test
xor
pop
ret
testl
mov
jae
pushf
jecxz
mov
dec
lahf
fucomp
rcrb
lret
push
dec
and
in
cs
ja
jno
clc
pop
nop
mov
add
jbe
test
pop
sti
hlt
dec
jle
xor
inc
sbb
mov
sub
scas
sub
xchg
daa
adc
out
pop
fnstcw
les
add
test
gs
push
xor
aas
add
xor
pop
inc
movsl
adc
movzwl
xor
push
fmuls
sti
xor
insb
inc
outsb
cmpsb
xchg
inc
sti
add
jae
ljmp
std
mov
lcall
loopne
test
and
dec
fst
scas
mov
shrb
pop
filds
leave
pop
inc
dec
push
and
sbb
lahf
rcll
cld
test
xchg
mov
cmp
imul
les
stos
pop
dec
mov
jns
mov
in
fsubs
test
lret
adc
das
mov
push
sbb
pop
adc
leave
outsl
test
sbb
sub
mov
or
out
push
and
pop
sbb
jg
jae
jmp
xchg
repz
ja
cltd
push
aam
jecxz
push
push
aas
xor
sub
js
test
mov
jecxz
inc
fs
int
stc
xlat
repnz
push
push
mov
das
in
inc
mov
clc
enter
add
shl
xchg
mov
fistps
mov
add
stos
aaa
roll
xchg
shl
movsb
pop
cltd
loop
xchg
add
mov
jge
xor
ret
push
dec
je
into
push
pusha
lcall
gs
push
adc
mov
pop
push
push
sub
mov
pop
mov
add
or
sbb
mov
mov
fbld
xor
mov
ss
insl
cmp
fisubrs
cmp
addl
add
jno
inc
sahf
push
clc
push
ror
repnz
pop
pop
cmp
pop
daa
push
cmp
push
push
mov
jno
inc
mov
xchg
std
aaa
pop
dec
imul
outsl
lock
push
sbb
mov
hlt
sbb
mov
add
imul
jno
dec
stos
dec
xchg
cld
insl
sub
mov
test
or
or
out
jbe
scas
push
das
cmp
lahf
or
addl
cmp
adcb
add
xchg
or
popl
sbb
push
fld
dec
int
filds
jle
fimull
xlat
xchg
inc
cmp
test
outsl
loop
dec
stos
cwtd
xlat
cmp
lret
popf
jge,pt
lahf
test
sub
arpl
mov
popa
mov
inc
fldl
xchg
mov
loopne
inc
insb
rorl
pop
out
nop
aaa
ljmp
mov
and
enter
mov
fst
scas
mov
je
fistl
cmp
outsb
push
adc
lods
and
ljmp
sub
pop
push
or
xor
ficomps
cmpsl
vprotw
fldl
pop
loopne
test
aad
test
movsb
add
add
inc
jl
adc
jne
inc
scas
xor
lahf
push
shrb
push
icebp
mov
sahf
sbb
push
mov
pop
popf
xorb
insl
or
sub
insb
imul
jnp
jle
and
or
nop
dec
push
sbb
add
inc
inc
fcomps
sar
dec
cltd
bound
xchg
mov
push
xchg
adc
inc
xchg
pushf
dec
adc
je
jno
shll
cmp
push
xorl
out
icebp
out
jl
mov
cmp
sub
push
or
inc
mul
rclb
dec
xlat
xor
outsb
mov
cld
imul
cmovg
push
dec
jge
sub
repnz
mov
add
adc
lret
sbb
das
lahf
addb
inc
loope
ja
dec
data16
jecxz
in
add
fmuls
cmp
jl
aaa
pop
mov
mov
ret
jle
aaa
out
pop
jp
mov
mov
xchg
or
jno
addr16
jbe
loop
adc
sub
jb
push
arpl
js
jnp
bound
cs
std
movsb
pop
sbb
xor
adc
xchg
in
push
decl
ja
inc
push
push
xor
and
jb
mov
movsl
and
fimull
dec
dec
test
aas
mov
jle
pop
cmp
test
cltd
mov
in
sbb
and
sti
jo
popa
nop
jne
nop
mov
shlb
inc
int
scas
pop
inc
stc
xlat
and
mov
inc
bound
xchg
adc
lea
pop
mov
fwait
out
jmp
jge
inc
in
cmp
jmp
dec
stc
outsl
popa
push
out
dec
cmpsb
sbb
inc
test
push
xor
xchg
hlt
sbb
and
addr16
into
movsb
add
cwtl
repz
adc
das
mov
cmp
push
cmp
aaa
repnz
xchg
fdiv
adc
cmc
test
jns
outsl
mov
push
mov
mov
adc
call
push
orb
adc
and
cld
inc
out
adcb
jnp
test
cmp
xor
fcmovnu
xchg
xchg
dec
pushl
negl
xchg
or
cli
inc
out
or
sbb
cmp
mov
push
lret
scas
pushf
cmp
call
adc
imul
loopne
test
mov
hlt
xchg
daa
daa
mov
or
dec
loopne
push
push
imul
pop
mov
cmpsb
dec
adcb
insb
xlat
test
cmp
mov
sbb
push
mov
mov
or
mov
mov
cmpsb
pusha
jo
push
lcall
aad
mov
mov
sbb
inc
pop
mov
inc
adc
push
ss
aas
cmp
std
mov
mov
fsts
enter
in
lock
into
and
insl
mov
lcall
mov
sti
sub
cmpsb
mov
inc
shrb
fsubrs
repnz
dec
or
mov
or
sbb
push
mov
pop
push
xor
lahf
nop
fidivl
in
fs
xor
insl
sub
or
pop
pop
shl
int3
sbb
aam
fldl
test
dec
jp
out
cmp
inc
pop
push
mov
jg
movsb
push
loopne
fsubr
popa
lods
and
sub
out
mov
lahf
pop
xchg
mov
scas
loope
and
loope
roll
and
ret
mov
loopne
pop
shl
ret
mov
add
xchg
adcb
out
mov
lock
push
xchg
pop
or
aam
push
rolb
mov
pushl
in
pop
sti
push
mov
and
jge
add
lock
push
xchg
call
fadds
ror
cmp
push
cmpsb
out
lea
insl
xchg
aaa
add
enter
cmp
stos
jg
aam
jae
push
sbb
stos
cmc
jbe
xor
sahf
into
sub
xor
rcll
and
dec
push
imull
jno
insl
mov
xchg
xor
mov
lret
negl
jecxz
pusha
lds
sub
fs
repnz
lret
repnz
jns
mov
mov
jle
sub
fidivrl
imulb
jecxz
into
pop
outsl
and
cwtl
sub
pop
jmp
fldenv
loopne
jmp
rclb
mov
movsb
xchg
mov
shll
push
inc
scas
jbe
aam
repnz
pop
hlt
and
jg
add
dec
mov
sub
mov
btsl
sub
or
push
sahf
jecxz
adc
iret
inc
jbe
andb
test
push
loope
aaa
jbe
jmp
jns
loope
or
push
aaa
divb
aaa
cmp
adc
jno
jo
xchg
add
sub
popa
andb
pop
imul
pusha
dec
adc
out
cmp
rclb
repz
xchg
mov
outsb
cmovno
aaa
xor
and
imul
xlat
insl
rcl
movsl
add
in
sbbb
popa
jge
sub
mov
mov
repz
in
jbe
js
in
pop
xor
adc
mov
push
xor
push
insb
dec
push
inc
or
mov
popa
out
and
je
xchg
paddb
outsl
adc
mov
lods
inc
ja
push
xor
and
insl
scas
or
cmpsl
lods
mov
lock
push
loopne
xlat
sbb
cmp
aam
mov
add
jmp
shrl
fs
cs
jecxz
enter
sbbl
leave
fwait
pop
xchg
sbb
mov
rorl
adcl
sub
add
or
mov
imul
test
jbe
insl
mov
int3
stos
mov
cmp
jecxz
sbb
pushf
mov
shl
fwait
sbb
xor
or
popf
jl
push
inc
push
xchg
dec
inc
push
jge
or
xlat
pop
mov
mov
repz
andl
sahf
add
dec
loope
push
and
aas
xor
out
rcrb
fsubrs
and
shl
jne
or
and
andl
lret
ds
rolb
sbb
mov
jecxz
mov
call
mov
inc
mov
adc
fwait
js
jne
cmpl
add
push
mov
fidivs
inc
sbb
xchg
test
repnz
xchg
pop
stos
mov
sub
stos
and
xlat
mov
mov
push
jno
push
jmp
movaps
aas
xor
sti
push
dec
movsl
xor
enter
xchg
shrb
push
add
xor
inc
xchg
cld
xchg
jnp
inc
mov
lret
jge
jg
int3
pop
xchg
jo
repz
adcl
rorl
mov
aas
lahf
dec
js
loope
sbb
mov
mov
jmp
insb
cs
in
testl
lret
fs
cmc
jns
push
xlat
jle
push
aad
sarl
insb
cmp
lea
int
sub
dec
mov
or
stos
movsl
pop
push
cmpb
pushf
push
lcall
clc
enter
and
lods
add
stos
fsts
fwait
cld
out
ret
dec
test
mov
test
dec
xchg
inc
jmp
mov
mov
xorb
int3
mov
shll
imul
outsb
mov
mov
xchg
lods
js
ja
sub
arpl
mov
cli
mov
mov
xchg
in
repz
jne
mov
js
and
mov
xchg
jne
iret
out
leave
push
push
repz
sub
pop
jmp
jnp
test
and
inc
das
push
pop
cmp
pop
xchg
ret
sbb
sub
pop
jecxz
inc
mov
push
and
dec
pop
mov
push
test
insl
push
adc
int
ret
pop
xlat
or
add
fs
into
icebp
clc
loope
push
and
mov
and
mov
insl
cmc
xor
das
sbb
mov
rclb
aaa
or
jne
js
lret
jnp
inc
jmp
mov
hlt
jmp
shlb
lods
fstl
movsb
mov
xor
aaa
sbb
sbb
popa
int
pop
inc
xchg
popf
add
rol
popa
mov
add
pop
inc
ja
js
mov
pop
push
movb
leave
daa
lods
fsubrl
mov
das
xor
adc
add
cmp
lahf
push
mov
pop
shl
mov
frstor
sbb
mov
cmc
xchg
pop
mov
sbbl
test
out
lods
dec
pop
dec
aad
mov
or
inc
cwtl
mov
imul
dec
jmp
pop
inc
adc
cwtl
lock
jb
jbe
inc
rorb
dec
insl
dec
inc
loopne
push
and
add
scas
pop
cmp
in
orb
movsb
jnp
xchg
and
negb
jns
mov
pop
jne
pop
mov
add
jbe
into
lret
cmp
xchg
fcomps
cld
mov
aam
mul
add
mov
sbb
jne
inc
aaa
lret
repnz
test
int3
fld
jbe
xchg
jae
mov
and
popf
jae
cmp
sar
std
and
push
in
insl
dec
xchg
inc
imul
lock
ds
das
scas
adc
roll
sbb
and
add
movsl
mov
mov
sbb
inc
push
jne
or
push
mov
mov
movsb
and
jmp
in
jb
movsb
fwait
nop
push
data16
out
jb
sbb
sti
scas
add
fcmovbe
inc
arpl
mov
fwait
loop
xchg
push
add
test
mov
xor
sbb
test
and
mov
mov
cmp
bswap
lds
call
mov
adc
out
inc
mov
sbb
and
inc
iret
aaa
sbb
jne
shrl
arpl
ret
idivl
lret
into
pop
fbstp
mov
add
adc
jecxz
cmp
mov
cmp
and
in
pop
dec
mov
adc
testl
adc
hlt
adc
sub
lret
fsubrl
sbb
insb
enter
cmp
jne
xchg
daa
xor
in
pop
mov
ljmp
and
and
jne
pop
mov
aaa
mov
wbinvd
insb
stos
cmp
aad
pop
and
sahf
lret
stos
pop
mov
and
pusha
rcll
in
fdivs
arpl
or
cwtl
or
pop
in
addr16
sbb
inc
mov
cmc
cmpsb
mov
xchg
mov
and
insb
xor
movsb
sti
jns
xchg
movsb
xor
mov
xchg
add
mov
mov
pop
fidivrs
inc
add
int
dec
pop
cmp
repnz
pop
imul
push
inc
popa
mov
mov
lock
into
and
mov
push
in
dec
and
inc
aad
or
inc
dec
andl
xchg
cmpsl
cmp
rolb
mov
mov
xor
and
push
xor
or
add
outsb
mov
shll
and
je
mov
fstpl
out
leave
push
xchg
sti
xchg
pop
push
into
pop
dec
stos
arpl
incl
int3
jo
popa
popf
mov
hlt
mov
shll
lods
ficomps
push
aad
and
out
lret
outsl
dec
leave
dec
xor
cmp
mov
js
mov
dec
lret
jmp
mov
xor
das
out
cli
fildll
aaa
not
jne
dec
aaa
sbb
lock
pop
cmp
loope
shr
je
ss
pop
shl
rcrb
lods
fiadds
mov
mov
xor
xor
mov
movsb
inc
cmpsb
ljmp
iret
into
push
or
hlt
xchg
adc
jo
fcmovb
rcr
cmp
clc
mov
es
xchg
loope
dec
in
fnstenv
pop
mov
std
dec
xchg
sbb
adc
dec
push
shll
insl
clc
adc
xchg
xor
mov
dec
xor
sbb
xor
iret
push
movsl
aaa
lret
outsb
fdivrl
push
push
into
mov
insb
pop
les
pop
sarl
xor
and
fsubrs
jno
push
int3
ds
mov
in
daa
lock
ret
arpl
xor
jno
stos
push
or
ss
push
jg
mov
fstl
jge
shll
mov
into
push
stos
dec
repz
ret
ds
mov
mov
adc
es
test
adc
pop
call
notl
pusha
mov
push
cmp
push
xchg
and
jno
jns
lret
xchg
sub
or
outsb
popf
cltd
cltd
jecxz
fs
mov
and
pop
imul
sbb
rcrb
incb
adc
xchg
aaa
and
ret
push
or
mov
mov
popa
test
pop
mov
jecxz
mov
addr16
ljmp
dec
and
cmpsb
cs
stos
xchg
jp
xchg
xor
cmp
movsb
cmp
jo
adc
and
push
cmp
dec
lret
jp
dec
sub
inc
pop
and
aas
or
scas
pop
mov
fucomp
adc
cmp
fdivr
movsb
stos
pop
mov
fdivrl
push
xchg
js
xchg
push
mov
mull
lock
lock
out
xor
mov
lock
rcr
insl
push
das
push
jp
jns
add
xor
push
sarl
in
or
push
cs
or
pop
cli
sbb
lret
insl
leave
dec
sub
xor
cmp
inc
add
nop
pop
and
xchg
out
sub
sbb
loope
cmp
loope
mov
xchg
mov
xor
in
test
and
arpl
xor
mov
adc
popf
add
and
popa
fcomps
jae
jle
xchg
push
test
mov
dec
fisttpl
lret
into
or
xor
mov
stos
mov
inc
mov
nop
or
xor
pop
fistpl
jg
jne
test
xchg
popf
mov
sub
shll
xchg
addr16
jns
push
xchg
testb
fwait
inc
hlt
mov
dec
and
icebp
pop
lret
sti
js
sub
lahf
repz
loope
jl
addl
adc
mov
cmp
adc
movsl
mov
sub
imull
push
pop
addb
mov
mov
inc
cli
cmpsl
add
sbb
arpl
adc
mov
adc
loop,pn
int
pop
daa
dec
shlb
dec
jbe
sub
cmpsl
mov
jae
fwait
aam
mov
mov
int3
push
push
sarb
je
inc
pop
push
xor
jmp
inc
insl
sub
xor
pop
pop
outsl
jmp
movsw
mov
inc
mov
lret
shrl
popa
push
sub
push
lret
pop
aam
push
rcll
cmpsb
inc
adc
and
shrb
jle
loop
xchg
cmpsb
sahf
arpl
ljmp
push
js
xor
fst
push
dec
xor
mov
mov
pop
adc
cltd
push
das
mov
pop
or
cmp
xchg
into
push
or
lcall
xchg
push
ss
cltd
mov
test
inc
test
mov
jmp
popf
xchg
jne
lcall
push
mov
or
jne
jbe
adc
cld
int3
ffreep
int
lahf
dec
push
shll
into
adcb
dec
add
adc
jle
inc
js
cmpsb
pop
and
inc
mov
js
mov
mov
das
pop
mov
dec
in
lret
cmpsl
out
cmp
sbb
xchg
das
fldenv
xchg
notb
or
rclb
hlt
push
gs
jg
lret
pop
mov
adc
add
out
xor
or
adc
ret
aas
and
pop
les
push
lcall
mov
and
fwait
dec
jae
xlat
fwait
cmpsl
es
lods
or
data16
mov
daa
lahf
sub
and
pop
mov
mov
arpl
inc
das
imul
fidivrs
movsl
cwtl
jo
sub
inc
cmpsb
test
sbb
arpl
outsb
cltd
pop
bnd
lahf
push
bound
test
ret
ficomps
sub
mov
jmp
push
push
or
add
iret
pop
pushf
cmp
push
fldl
rorb
fdivr
mov
pop
stc
neg
les
and
sub
mov
dec
fsubr
lods
hlt
mov
cmp
mov
addr16
jnp
idiv
pop
pop
sbb
mov
fadds
cwtl
movsb
sub
push
adc
inc
mov
in
cmp
jle
das
pop
jl
or
fcmovbe
xchg
mov
inc
mov
and
ret
in
and
lods
rcll
fnstcw
lds
xchg
xchg
call
or
cmp
loop
xor
inc
nop
adc
cmc
xchg
xor
das
rolb
push
sub
pop
sub
mov
or
pop
popa
xor
push
nop
pop
mov
dec
ljmp
je
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
outsb
push
addb
scas
mov
mov
loope
lret
jmp
in
dec
nop
sbbl
pop
fdivrp
push
arpl
das
or
cli
dec
fidivl
cmc
adc
push
mov
ss
dec
sub
push
mov
cmp
pop
mov
lea
pop
pop
ss
cmp
xchg
and
popa
adcb
adc
adc
pop
pop
out
loope
cmpsl
out
sarb
addr16
imul
je
iret
and
rol
rolb
and
add
movsl
mov
addr16
mov
or
sbb
pusha
xor
ja
mov
push
out
sti
pop
mov
insl
sbb
out
push
pop
test
mov
out
ss
pop
outsb
and
xchg
insb
or
orl
dec
jb
and
push
sub
xchg
xchg
dec
leave
rorb
sub
insb
pop
mov
int3
add
and
aad
vpaddd
cld
es
sbb
daa
test
or
mov
and
ret
xor
dec
inc
mov
cmp
aam
out
add
loope
xor
xor
mov
outsl
int3
jno
pop
and
scas
idiv
or
popf
cmpsl
xchg
pop
flds
call
mov
mov
arpl
aaa
cmp
cs
xchg
stc
cmpsl
add
pop
xchg
mov
out
xchg
sbb
xchg
fmul
jecxz
sbb
xchg
inc
lods
rcrl
leave
sahf
arpl
sti
dec
adc
loop
sbb
inc
arpl
mov
push
add
std
mov
out
adc
jnp
test
sbb
aaa
inc
mov
pop
std
cmp
daa
insl
nopl
mov
popf
aam
push
in
cwtl
stos
dec
je
cwtl
adc
push
inc
adc
xchg
test
mov
mov
test
pop
popf
mov
aam
in
dec
push
pop
imul
fwait
pusha
lret
in
cmp
mov
jo
mov
push
jae
popa
cltd
test
sub
jnp
popa
xchg
pop
daa
repnz
mov
loop
pop
or
sub
mov
mov
les
fcomps
ss
adc
add
ss
test
xor
xlat
rcll
jg
sbb
or
in
in
daa
les
cwtl
mov
sub
dec
adc
cwtl
cmpsl
cmc
add
lret
adc
out
cltd
das
rcll
mov
out
push
loope
lock
cmp
les
xchg
lock
xorl
dec
inc
mov
jge
es
out
cltd
lods
mov
dec
addr16
test
dec
fs
loope
mov
mov
sub
and
adc
sti
imul
push
adc
into
jecxz
jns
ret
cli
inc
scas
xchg
adc
frstor
aad
or
rcl
lahf
and
pmaddwd
or
bound
iret
cmp
scas
or
mov
push
testw
jp
or
adc
stos
leave
notl
pop
fldcw
stos
lahf
mov
cmc
xchg
push
or
or
inc
cmp
pop
rcl
cwtl
gs
pop
or
das
jl
in
rorb
xor
mov
dec
mov
ss
cmpsl
iret
movsl
sbb
imul
adc
cmp
dec
dec
and
dec
test
pop
add
add
pop
xchg
adc
push
push
or
adc
nop
in
jp
add
movsb
sbb
enter
dec
addr16
fxch
clc
cltd
js
push
push
sub
sbbb
xor
addr16
cmpsl
jp
loop
stos
pandn
jo
popf
jp
stos
aaa
lcall
push
push
sub
addr16
push
mov
movsl
or
jmp
subl
sub
sti
cmp
cli
push
aam
and
iret
sub
dec
not
xchg
dec
jecxz
xchg
add
js
dec
and
push
std
add
lods
xlat
mov
in
dec
test
scas
and
jle
in
mov
or
jae
jno
push
imul
and
add
add
ret
lret
push
pop
xchg
arpl
js
cwtl
xchg
mov
xchg
clc
cmp
mov
push
and
and
dec
sarl
and
jmp
int
inc
xlat
fwait
lcall
xchg
aaa
ds
rcrl
out
cli
inc
es
dec
pop
pop
pop
mov
inc
or
push
or
mov
call
sbbl
mov
fstps
pop
test
stc
pop
scas
je
xchg
add
add
aam
push
fs
adc
out
icebp
ljmp
ds
dec
in
pmaxub
jg
or
stc
add
out
sbb
sbb
mov
mov
xchg
test
xor
cmpb
pushf
insl
in
xlat
adc
adcb
int
addb
sbb
pusha
call
or
mov
rcrl
lock
aas
sti
inc
sub
aad
imul
pop
aaa
ret
sbb
sub
out
aad
cmc
inc
xchg
mov
repz
roll
sahf
cmpsb
adc
cs
xor
fcoml
mov
mov
inc
lods
sarb
jbe
or
add
cs
aam
mov
mov
dec
and
js
mov
les
jno
sub
mov
sahf
and
push
pop
sahf
ds
push
pop
and
addb
pop
and
push
dec
xor
sbb
push
std
mov
inc
jmp
out
xor
daa
push
aad
or
jg
repz
pusha
lock
repz
xchg
or
nop
lret
adc
xchg
test
repz
dec
jne
in
mov
mov
jb
jo
push
and
push
shr
dec
std
or
rcll
push
in
pusha
negb
rclb
icebp
mov
mov
pop
outsl
and
rolb
jns
and
pop
sti
dec
std
mov
sub
push
xor
data16
mov
and
cltd
daa
jge
inc
sub
cmp
loopne
movsb
sbb
dec
fcmovu
push
push
mov
aas
test
dec
in
fs
xor
imul
imul
cmpsb
je
xchg
mov
pushf
adc
les
mov
pop
icebp
jle
mov
pop
mov
lret
add
rcrl
push
popf
inc
dec
push
mov
imul
inc
dec
dec
mov
loope
ret
push
lcall
and
stos
add
push
mov
xor
lods
inc
in
int
cmpsb
cmpsb
xchg
insb
pop
sub
push
rol
out
add
sti
xchg
fwait
sarl
push
int3
ret
and
insb
mov
clc
std
ret
xchg
pop
popa
cmp
cmc
mov
push
inc
lea
jge
movsl
xchg
or
xor
shlb
adcb
bound
arpl
popa
pusha
notl
imul
adc
jg
loopne
into
sbb
pop
movsl
vaddps
or
mov
outsl
shl
mov
mov
add
jge
lods
imul
imul
gs
lahf
jmp
icebp
shll
jno
cmc
fwait
shrl
sub
mull
ret
pop
iretw
mov
mov
subl
pop
add
sbb
outsl
pop
push
cmp
xor
fsubs
jno
mov
icebp
loop
inc
pop
mov
jp
pop
push
sub
xor
push
or
mov
scas
ljmp
mov
enter
fbstp
mov
cmp
mov
ljmp
js
xchg
push
push
sti
ljmp
mov
repnz
sub
rol
popa
leave
ds
repnz
testb
js
sub
enter
or
movntps
test
orb
xchg
fs
mov
pop
arpl
pusha
add
aad
call
orl
jl
jnp
insl
mov
and
and
and
sub
push
cwtl
out
mov
mov
into
dec
popf
mov
add
add
je
ds
push
fiadds
cmp
gs
out
in
rcll
inc
jg
movsb
sahf
adc
jp
jecxz
dec
mov
jp
add
cld
lret
int
andl
shr
repz
xchg
imul
mov
dec
xchg
bnd
adc
jle
in
outsl
push
cmp
int3
aad
in
pushf
aam
add
popa
fwait
movsl
arpl
shll
jnp
fwait
push
mov
in
fdivl
push
dec
cmpsb
aas
out
inc
push
pop
ljmp
push
xor
insl
ja
xchg
dec
or
cmp
add
mov
es
or
add
mov
dec
stc
inc
jle
xchg
sbb
int
addb
ret
aas
push
mov
fistpl
lea
test
adc
add
aad
aaa
sub
jo
js
push
inc
cmp
mov
popl
cltd
in
popa
mov
test
mov
mov
inc
dec
xor
adc
mov
sub
xor
movsb
imul
movsl
push
mov
insl
ret
sub
dec
pop
outsl
jmp
movsl
pop
dec
test
cwtl
xor
adc
das
mov
inc
sub
ss
imul
push
push
outsb
lret
inc
jmp
call
dec
ds
orl
pop
je
mov
ret
sbb
mov
lock
mov
es
or
pop
inc
xchg
ja
pop
dec
pop
xchg
adc
enter
push
outsl
ret
push
push
cwtl
hlt
inc
or
jmp
ds
aam
js
stc
ror
mov
arpl
icebp
call
andb
mov
add
lahf
fidivrl
cs
in
cmp
sub
cmp
xor
pop
push
loopne
lcall
jne
cmp
sub
mov
jmp
dec
ret
push
mov
pop
xchg
shrl
and
sub
adc
mov
into
imul
scas
outsb
jecxz
dec
dec
push
in
sbb
divl
cmpsl
mov
les
jmp
mov
adc
cmp
ljmp
pop
or
test
mov
in
pop
cld
cltd
push
rcl
jmp
ret
jo
push
enter
xlat
mov
cmp
dec
insl
sbb
sbb
mov
adc
or
xor
mov
xchg
js
add
cmp
push
push
pop
decb
mov
lods
lahf
mov
int3
push
sbb
xor
inc
mov
jbe
inc
jmp
test
sti
scas
out
test
leave
push
cwtl
ret
xor
out
stc
mov
lret
out
loopne
icebp
out
fadd
pusha
fildll
lret
movsl
cmpsb
int3
inc
in
push
fprem
loop
mov
push
xchg
fldt
mov
bound
dec
jnp
out
inc
pop
cld
jp
into
fadd
cmc
paddusb
cmp
sbb
fisubrl
push
xchg
sbb
mov
out
enterw
js
pop
dec
sbb
cli
xchg
aas
add
gs
imul
xor
test
fstp
mov
call
or
clc
push
mov
push
leave
decb
test
loope
mov
pop
stc
pop
xor
or
add
or
leave
arpl
jp
es
dec
aam
es
hlt
inc
popa
jg
repz
rcrl
dec
mov
add
fisubrl
xchg
cli
lahf
ljmp
dec
and
mov
subb
pop
cltd
xchg
dec
movsl
cmp
fcompl
enter
ja
hlt
pop
movsl
and
ss
pop
mov
outsl
push
je
ljmp
fidivl
xlat
sub
pop
adc
fists
icebp
roll
js
adc
push
popa
push
test
sbb
lods
popa
sti
sub
mov
test
mov
stos
insl
out
test
or
add
and
cmc
adc
out
loope
aaa
mov
notl
aas
fsub
mov
popf
imul
cmp
test
inc
sbb
jns
leave
cltd
sub
pop
into
mov
inc
fisubrl
push
fidivs
pushl
and
xor
hlt
xchg
jle
xor
aam
sbb
push
sbb
test
dec
aaa
movntps
call
movsb
add
xor
movsl
pusha
movsb
into
enter
dec
jl
cli
or
sub
sub
call
das
or
mov
cmp
inc
add
xchg
mov
pop
add
aas
decb
or
mov
dec
das
jnp
jae
hlt
mov
adcb
mov
loop
dec
inc
je
out
aad
fnsave
jno
movsl
mov
imul
inc
fwait
mov
or
rcl
push
dec
rclb
stos
mov
lods
xchg
cmp
dec
inc
mov
push
sub
movsb
popa
rolb
pop
repz
popf
mov
mov
xchg
int3
daa
or
sarl
sbb
and
aaa
cld
daa
jnp
aad
xor
daa
xchg
fldt
push
aas
add
and
adc
scas
loop
shll
popa
adc
sbb
jnp
sbb
aas
xchg
and
pushf
cmc
dec
sarl
sub
push
aam
push
sbb
inc
sbb
lea
lret
cmpsl
orl
loope
push
rcr
pop
shrb
mov
xchg
fnstcw
test
in
out
and
lock
fsubrs
jmp
cmpsb
idiv
insb
stos
mov
inc
xchg
push
cwtl
lods
std
push
sub
cmp
popa
pushl
mov
fcmovnb
mov
aaa
push
xor
stc
stc
mov
dec
pop
cmp
push
adc
repnz
mov
fwait
rcll
ljmp
sub
lret
jnp
xchg
or
mov
adc
mov
mov
imull
fsubl
jne
jge
dec
call
mov
lret
sub
into
pop
es
rcrb
or
jmp
shlb
mov
dec
xor
repz
pop
je
mov
cmc
jns
dec
clc
pop
stos
jl
push
leave
out
out
inc
and
mov
mov
lret
aam
cmp
inc
mov
mov
mov
out
aas
jmp
mov
inc
push
lret
mov
xchg
lret
aaa
pop
inc
or
xchg
sbb
mov
jb
into
addr16
jmp
dec
sub
ss
inc
cmp
xchg
or
arpl
cli
mov
and
inc
and
scas
enter
add
or
pop
in
lret
lea
adc
xchg
sbb
loop
push
push
pop
push
mov
push
hlt
cwtl
aaa
ror
cmp
ret
push
sub
or
jae
pop
inc
push
test
negl
lea
dec
xlat
outsl
sbbl
std
stos
push
xor
push
inc
inc
sub
pop
adc
js
jae
dec
test
mov
mov
mov
push
mov
pop
push
pop
cmp
jge
addr16
sub
inc
mov
nop
test
add
pop
pop
mov
mov
jb
mov
add
das
mov
mov
scas
ret
cwtl
loopne
lods
or
test
mov
sbb
adc
sbb
mov
cmp
sub
test
enter
outsb
cmpb
cmpsl
ror
jb
sub
mov
mov
mov
pop
lret
xchg
pushf
xchg
iret
jmp
aas
adc
stos
adcb
dec
jae
movsl
jbe
int
inc
mov
sti
stos
adc
xchg
mov
lcall
jnp
xor
les
jbe
out
add
movl
xor
movb
adc
imul
out
mov
roll
ret
sub
pop
test
mov
divl
mov
sahf
or
xor
and
iret
test
push
ret
lcall
subb
cwtl
cmp
dec
mov
lret
iret
scas
add
sub
sbb
rolb
mov
repz
ljmp
int
xchg
inc
repnz
add
je
sbb
jge
add
push
mov
and
das
neg
insl
test
data16
and
xlat
cmp
aad
icebp
ja
mov
test
popa
sub
ret
cmp
inc
negb
rdpmc
outsb
mov
scas
sbb
cmp
fwait
mov
mov
xchg
fidivrl
ficompl
setns
cmp
or
clc
sarl
fs
test
cmp
aaa
pop
cmp
jg
les
mov
cmp
subl
not
pop
out
mov
mov
jno
mov
fcomps
xchg
lods
fs
mov
pop
jo
jp
mov
imul
jecxz
call
insl
mov
out
andl
cmp
imul
pusha
in
sub
data16
and
fcompl
mov
sbb
xchg
pop
mov
sbb
popa
sti
out
es
int3
pop
clc
inc
inc
mov
and
idivb
dec
outsl
lock
jnp
stc
fcmove
dec
insl
enter
ret
jns
mov
out
loope
jne
aaa
mov
es
incl
xor
lret
int
lret
sahf
dec
aaa
mov
mov
xor
lods
test
cmp
mov
push
xlat
andl
adc
jno
push
aam
ret
fstl
mov
iret
es
mov
cmp
pop
stos
outsb
pop
aas
int
vhsubps
dec
in
sbb
insl
subb
outsl
dec
push
ss
movsl
cmp
cmc
or
or
or
shrl
jnp
es
aad
jmp
addb
pop
inc
xor
lret
sbb
enter
ret
pop
cli
mov
mov
scas
jno
dec
mov
aas
mull
or
sbb
mov
and
inc
adc
dec
cltd
jmp
dec
mov
cmp
mov
addr16
lcall
shlb
pop
out
cmp
pop
insb
jg
inc
sub
or
out
daa
rclb
movsl
mov
jmp
pop
mov
xchg
push
sub
fiadds
data16
dec
mov
stos
sbb
out
scas
and
mov
jno
cmp
sub
and
ffree
add
testb
dec
inc
aam
and
sbb
adc
stos
push
inc
adc
sub
das
xor
lods
out
nop
mov
inc
inc
inc
cwtl
xchg
push
test
stc
clc
jb
lcall
in
ljmp
cmc
xor
dec
insb
sub
push
fildll
daa
mov
int
push
cmp
xchg
inc
mov
popa
inc
pop
or
cmp
mov
stc
jmp
sbb
aaa
mov
loope
inc
mov
aad
es
inc
xor
mov
imul
cmpsl
push
push
mov
gs
add
sub
test
pop
xor
divb
pushf
fistpl
mov
xchg
inc
jmp
andb
cwtl
mov
icebp
cmp
push
sub
mov
mov
shrb
inc
push
xor
int
out
xchg
push
jns
lock
jecxz
pop
fisubrl
cmpsl
and
jae
inc
cwtl
hlt
jmp
mov
jge
pop
sarl
int3
fstpl
mov
mov
mov
imul
sub
pop
xor
std
cmpsb
outsb
repnz
in
mov
xchg
mov
gs
shll
pop
jg
xchg
lds
je
sbb
pusha
shrl
andl
mov
dec
ss
jle
ret
lret
mov
pop
sbb
xchg
in
xchg
or
inc
ja
cwtl
adc
inc
or
fst
cli
test
push
cmp
or
iret
cmp
faddl
test
adc
leave
jne
loop
sti
mov
jae
cmc
outsb
sub
es
mov
enter
and
push
call
xor
cmc
test
out
jmp
stos
jbe
sub
mov
mov
sbb
mov
rcrl
mov
sti
pop
lock
and
pop
and
cmp
xlat
push
dec
and
lcall
jmp
mov
cmpsl
cmp
dec
mov
or
ds
cmp
push
imul
xchg
fidivrl
loope
mov
mov
ret
pop
adc
inc
idivl
out
mov
lcall
cmp
fisubrl
pop
test
nop
outsb
sbb
inc
jecxz
rolb
cmp
jecxz
into
or
push
fs
fs
pop
push
mov
das
inc
mov
pusha
mov
sbb
testl
and
push
cmpsl
test
lret
bnd
xor
jbe
dec
loop
inc
push
mov
pop
dec
mov
sub
mov
aad
or
cmc
xchg
insb
addr16
cmp
and
clc
std
shlb
insl
cmp
stos
gs
insb
mov
in
aas
incl
inc
outsl
cltd
xchg
lock
mov
add
repnz
insl
insl
and
out
push
in
mov
mov
pop
mov
push
fs
sub
inc
jmp
pop
icebp
pop
xor
les
and
fcmovne
aad
stc
stos
sbb
mov
aas
jmp
mov
jmp
mov
add
and
ds
dec
dec
scas
in
sahf
mov
mov
mov
test
sub
mov
stos
les
inc
or
mov
sbb
mov
xor
pop
loopne
mov
lcall
mov
mov
jp
xchg
jae
lret
xchg
stc
test
or
lods
daa
pushf
js
xchg
adc
fwait
or
popa
add
fcompl
mov
cs
rorb
mov
push
mov
jge
jnp
pusha
cli
cmp
into
add
and
mov
mov
push
hlt
lcall
lret
data16
sub
jae
dec
jo
stos
bound
mov
mov
jmp
and
mov
sbb
sbb
or
shrb
in
xchg
rcl
loope
iret
push
mov
dec
jge
cmp
adc
dec
dec
mov
inc
fldl
xor
ret
je
push
mov
add
sti
shrl
out
leave
aaa
pop
push
or
mov
mov
mov
dec
rcrb
lods
insb
inc
jecxz
pop
mov
daa
push
lahf
xlat
mov
inc
pop
fldenv
std
dec
ret
dec
push
rclb
inc
popa
fsubrl
aad
cmpsl
andb
ljmp
and
xor
insl
jb
xchg
movsb
pop
inc
push
xor
push
push
addl
add
ret
inc
mov
insb
jae
fstpl
pop
scas
lock
dec
jge
adc
shlb
pop
fsubp
xchg
add
mov
popl
fildll
mov
inc
repz
mov
xchg
fdivrl
movsl
rcr
push
aam
fstpt
fcmovbe
scas
stos
xor
adc
sbb
xchg
jns
xchg
orl
xor
xchg
jle
int
mov
pop
sbb
xchg
jmp
jo
aas
mov
popa
in
jle
pop
push
or
js
stos
pusha
call
ret
xchg
sbb
aad
jecxz
ljmp
into
xchg
fldenv
xlat
cmpsl
push
inc
stos
sbb
mov
cmp
jl
outsl
test
xor
pop
push
out
sbb
add
push
pushf
in
mov
test
sbb
xchg
xchg
or
fcmovne
cmp
jne
mov
push
and
cmp
sbb
negb
sbb
out
mov
cli
push
mov
lahf
mov
shr
mov
ljmp
adc
outsb
and
cmpsb
pop
outsl
sahf
aad
pop
and
mov
jae
push
mov
scas
pop
sti
jnp
mov
shlb
outsb
add
in
pop
insl
fsubrl
adc
loope
mov
cltd
sahf
and
mov
sub
icebp
mov
daa
cmp
les
nop
mov
imull
push
jmp
pop
pop
jge
shrl
mov
and
jmp
insl
xchg
sahf
sub
imul
inc
sti
imul
mov
sub
mov
push
inc
aas
std
lcall
imul
loope
push
out
fstps
stos
mov
mov
repz
inc
pop
xchg
pop
add
pop
test
add
sarl
cmp
adc
dec
xchg
mov
and
das
test
dec
mov
jl
int
jae
scas
add
ljmp
xor
xor
or
nop
sahf
adcb
dec
outsl
out
or
mov
or
stos
in
addb
pop
jo
sub
fdivrs
popf
jno
jg
fldt
sub
jno
dec
jge
stc
jl
sub
sbb
add
xlat
gs
lods
jge
adcb
lret
add
cmp
shlb
repz
iret
daa
mov
mov
xor
stos
mov
test
mov
pmullw
jg
push
in
js
ljmp
ret
inc
in
movsl
movb
xchg
xchg
jb
or
mov
mov
das
out
sysret
aad
aam
enter
xchg
inc
jmp
adc
mov
inc
pop
fsts
mov
xor
daa
hlt
scas
gs
in
pop
sbb
xchg
loopnew
out
sahf
gs
jae
ljmp
xor
xlat
push
jl
sysexit
aad
in
lcall
sub
movsl
stc
bound
cmpsl
pop
test
sub
dec
fsubrl
repz
inc
jbe
jae
addr16
mov
popf
subb
ljmp
stc
arpl
sub
jns
out
push
and
cmc
lods
pand
push
jp
add
jge
xchg
mov
sti
jmp
mov
push
add
jp
mov
xor
jae
or
je
das
mov
movsl
dec
and
jns
jle
into
dec
lock
pop
mov
mov
pop
mov
ds
xor
loope
ljmp
inc
mov
push
mov
xchg
fsubp
xchg
lea
fstl
xchg
sbb
outsl
jno
add
js
or
ffreep
sub
pop
push
stos
scas
mov
adc
cmp
mov
ret
call
dec
mov
cli
jl
std
iret
les
fnstsw
aam
leave
lcall
lcall
dec
dec
lret
int
std
loopne
sbb
mov
xor
pop
xchg
inc
inc
addr16
lret
adc
movb
xorb
call
scas
repz
mov
push
popf
outsb
cmp
cs
mov
out
xchg
jp
lahf
loope
mov
or
mov
das
mov
fbld
test
fistpl
push
aad
and
cs
cmp
adcb
pop
push
mov
in
clc
dec
sub
sar
popa
jae
mov
push
xor
cmp
pop
mov
jnp
and
into
mov
push
ja
cmpsl
xor
lret
inc
outsl
or
mov
lods
mov
aas
sub
inc
fldcw
iret
xchg
nop
pop
cmp
call
push
sbb
push
loope
and
lods
mov
mov
xor
xor
imul
fildl
test
cmc
lret
dec
lret
fimuls
aas
les
je
idivb
xchg
das
test
lods
or
push
push
sbbl
cmp
mulb
jg
daa
cld
iret
inc
push
xor
pop
repz
fnstenv
jl
jae
orl
mov
pop
mov
aas
nop
sete
jmp
leave
and
daa
push
clc
leave
sub
aad
popf
repz
fildll
mov
push
push
sub
leave
add
xchg
icebp
repz
je
or
inc
loope
mov
lret
and
ja
mov
rcll
mov
pushf
pop
jnp
inc
sub
jp
pop
pop
lods
in
xor
in
add
addl
pop
stos
js
mov
push
jbe
push
mov
mov
lock
loop
mov
cmp
sahf
cwtl
sub
out
or
xor
push
in
or
aam
sysret
sti
sti
mov
pop
dec
jg
jno
addl
js
loopne
aas
daa
and
jecxz
js
out
mov
shrl
gs
sbb
sbb
out
repnz
in
add
lods
mov
mov
stc
icebp
xor
lret
hlt
mov
push
cmp
ret
xor
sub
adc
sahf
mov
pop
sbb
rol
insl
sbb
popf
pop
outsb
in
mov
push
adc
cmpsb
mov
paddq
sub
inc
pop
add
pop
mov
inc
mulb
int
test
stos
into
add
and
fmul
lea
cs
push
in
mov
mov
int
pop
sarb
add
outsb
cs
fnstsw
pusha
roll
aas
fwait
dec
xor
stos
pop
lret
lret
dec
add
aad
leave
movsb
or
mulb
ret
jae
lea
int3
repz
cmp
jmp
lahf
fwait
insl
push
loopne
fwait
mov
mov
push
push
jno
adc
xchg
std
pop
dec
xchg
mov
xor
add
lds
test
mov
ds
jl
arpl
add
mov
mov
pusha
popa
ds
xor
xlat
inc
pop
add
and
imul
xor
sahf
push
fucom
or
lods
int
jle
pop
sub
push
out
xchg
adc
loopne
hlt
lock
adc
int3
and
fnstsw
imul
in
ret
adc
pop
add
cmp
jl
adc
mov
fistpl
lret
fwait
mov
es
out
push
xchg
arpl
xchg
xor
mov
mov
adc
fimuls
sbb
and
push
movsl
pop
jo
dec
and
jecxz
cli
and
xlat
adc
or
lods
cmp
fstpl
dec
jns
cmp
add
lcall
cli
jg
fmul
stc
scas
xchg
xchg
pop
sbb
imul
push
push
cli
aam
xor
add
gs
cmpsw
clc
jle
xchg
arpl
push
leave
data16
sub
add
jb
push
lock
iret
push
push
clc
popw
clc
ds
pop
jecxz
or
leave
std
icebp
lret
jnp
pop
jns
pop
test
lods
out
push
push
js
loope
push
lods
int
push
je
cmpsb
fcoml
int3
rolb
ficomps
mov
repz
and
push
mov
cltd
in
inc
pop
adc
loope
lock
lods
movb
inc
adc
xor
fsubs
sub
cmp
outsl
lcall
gs
pushf
lret
mov
push
fldenv
in
imul
xchg
stos
mov
das
xchg
xchg
ja
lods
into
int3
cmpb
push
cmp
mov
loopne
xchg
jge
sbb
cltd
sbb
jmp
stos
dec
jmp
repz
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
cmp
push
sbb
shlb
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
